lcall
dec
mov
xor
add
inc
fcomps
pop
pop
pop
ret
inc
adc
sti
dec
test
pop
ret
and
mov
ret
and
adc
and
decl
and
adc
adc
pusha
inc
add
inc
and
dec
adc
or
sti
mov
adc
adc
adc
or
inc
and
mov
pop
xor
sub
nop
cmp
or
mov
insb
fildl
adc
inc
pop
cmp
inc
push
nop
adc
and
dec
jbe
je
inc
push
mov
and
and
and
xor
dec
inc
xor
pop
jbe
xchg
sub
nop
adc
aaa
sub
inc
inc
mov
add
loope
inc
nop
cmp
mov
mov
aad
xchg
pop
scas
push
movsb
cltd
inc
xchg
fcom
push
imul
cwtl
mov
in
and
dec
nop
in
cmp
adcb
adc
mov
inc
aad
or
lods
adc
lock
add
adc
movsb
pop
mov
xor
dec
test
and
lret
adc
nop
add
fdivr
or
mov
rorb
add
icebp
mov
xchg
pop
dec
xor
dec
inc
cmp
mov
decb
popa
lods
mov
mov
xor
daa
xor
sub
imul
addr16
mov
adc
in
mov
fdivl
mov
inc
or
test
imulb
pop
dec
pop
xor
mov
cmp
js
iret
mov
neg
mov
fisttps
cmp
fldl
pop
xlat
sbb
mov
add
stos
push
cmp
jnp
repz
pop
int3
pop
or
fdivrs
daa
xor
add
adc
scas
sbb
adc
sbb
lds
mov
cwtl
int
lahf
pop
sub
pop
daa
int3
inc
arpl
jno
mov
or
mov
mov
jne
mov
and
in
fcomps
pop
mov
es
mov
jg
sti
subl
inc
sbb
neg
sbb
ret
dec
lret
pop
cmp
xor
adc
mov
jg
neg
add
or
in
dec
cwtl
mov
inc
in
cmp
mov
adc
sahf
xor
xor
jno
pop
fiaddl
inc
xchg
fdiv
mov
xchg
sahf
mov
sti
int
xor
ret
sbb
jecxz
pop
adc
push
out
push
add
mov
rcl
and
add
jns
insl
fstpt
arpl
xor
xchg
cld
adc
divb
inc
adc
sub
test
mov
int
aaa
je
roll
mov
sbb
mov
in
xor
fldl
adc
ja
adc
test
mov
cmp
and
adc
xor
add
shrl
sbb
xchg
jmp
mov
gs
in
add
movl
sbb
adc
push
movsb
add
inc
add
sub
insl
mov
lcall
loopne
add
lret
inc
fcmovne
or
sahf
inc
cmpl
or
dec
adc
xor
dec
loopne
stc
fs
outsl
mov
push
and
pop
fucomi
lcall
mov
not
dec
sub
pop
xchg
in
data16
jecxz
jnp
mov
sbb
dec
in
roll
or
and
or
ss
sbb
inc
mov
pop
cmp
adc
jl
push
in
sbb
or
push
loopne
dec
jae
dec
or
test
incl
cmp
mov
pop
xlat
sbb
cs
add
mov
in
jmp
dec
dec
cli
in
fbstp
movsl
clc
das
and
int3
shll
scas
cmp
jecxz
aaa
push
fdiv
ret
pop
push
mov
stc
lea
add
dec
jb
clc
jnp
mov
or
loopne
fdivrs
leave
das
dec
sbb
loop
fcmovnbe
jmp
jecxz
sub
xor
or
mov
movsl
add
adc
jae
pop
xlat
or
cld
jnp
adc
into
inc
addl
adc
mov
rcll
sub
push
das
mov
inc
add
mov
xchg
lcall
pop
lods
add
adc
inc
in
aas
add
xchg
fidivrs
aaa
call
lea
xlat
pusha
sbb
jl
call
insb
call
adc
pop
add
add
inc
mov
and
adc
int
inc
jb
jnp
jnp
mov
dec
fld
leave
and
mov
xor
xchg
std
inc
inc
les
rcrl
adc
ficompl
in
fistpl
dec
cmp
and
push
dec
in
adc
fadds
mov
sbb
or
fisubs
rol
mov
pop
pop
cld
mov
popa
ret
sub
das
push
push
pushl
call
ss
jbe
jge
ja
loop
push
dec
in
cmp
mov
in
pop
inc
fiaddl
cmp
loope
push
jge
arpl
or
jb
cmpsl
sbb
sbb
hlt
js
in
sbb
not
lcall
mov
jp
sbb
notl
xchg
pop
sbb
push
hlt
add
rcl
adc
out
test
sbb
or
mov
sub
pop
jge
jp
cmp
cmp
inc
cwtl
mov
inc
sbb
dec
cwtl
push
into
jne
fistpll
xlat
leavew
js
mov
inc
lods
les
jg
inc
int
pop
in
xor
adc
sbb
jne
xor
enter
leave
xor
jg
push
pop
adc
jnp
ret
popf
js
aas
outsl
inc
das
aaa
sub
mov
mov
adc
sbb
or
inc
and
fucom
push
aam
or
jbe
ss
pusha
clc
adc
test
jg
fildll
ret
imul
xor
inc
cmpsl
sub
scas
popf
fwait
fwait
lock
push
dec
ret
cmp
xchg
push
in
cmp
cmp
imul
out
adc
pop
or
and
or
xor
pop
fwait
jbe
cwtl
rcll
movsl
inc
xor
xor
adc
and
mov
into
inc
sub
mov
inc
mov
jl
mov
and
add
addr16
pop
jo
xchg
ret
push
pusha
xor
shrl
xchg
imul
add
icebp
dec
data16
idivl
les
hlt
xlat
mov
pushf
jmp
and
lods
pusha
arpl
add
jg
push
and
aaa
and
pop
hlt
mov
lahf
pop
cltd
lock
fdivrl
out
mov
mov
inc
repz
lock
inc
adc
or
movsl
jecxz
mov
sbb
arpl
pop
repz
stc
imul
lret
adc
ret
cmpsb
add
fdivrs
les
lock
hlt
push
or
add
lock
shlb
fsubrl
adc
and
ja
mov
pop
faddl
ss
clc
lods
shrb
jno
test
jb
dec
fnstenv
cwtl
hlt
and
or
sub
aam
inc
adc
sbbl
aas
icebp
or
addb
fcoml
jecxz
fsub
mov
mov
add
pushl
test
jae
cmp
ds
dec
inc
aas
cmp
sbb
js
inc
sbb
adc
mov
stc
jb
cli
adc
mov
mov
sbb
jmp
and
cwtl
les
mov
mov
mov
mov
cmp
fbld
in
lods
scas
lock
adc
lret
dec
lret
sbbl
adc
movsb
sub
enter
dec
jp
es
and
xchg
add
adc
daa
or
add
sbb
stos
jecxz
and
jp
arpl
sbb
jb
sub
out
push
sub
repnz
repz
dec
cmp
in
fldenv
addl
xor
jnp
push
dec
cmp
xor
adc
rorb
lret
jo
inc
inc
pop
stos
add
ret
mov
pop
inc
xor
lods
shlb
cs
xor
or
add
out
es
add
inc
rorb
mov
jecxz
pop
rcrb
dec
mov
out
mov
test
ss
or
cwtl
aad
pop
adc
imul
aaa
lock
mov
push
push
xor
fwait
test
sbb
test
dec
in
xor
fdivr
sbb
scas
insl
outsb
ret
out
add
pop
dec
cmpsl
sbb
dec
iret
inc
dec
jbe
cmp
sarb
mov
adc
fildl
shlb
adc
hlt
fistl
imul
inc
out
out
add
cwtl
dec
test
lock
jge
dec
push
fisubl
out
add
push
adc
stos
mov
or
loopne
mov
jbe
add
adcb
push
jmp
clc
or
fbld
adcb
push
add
insb
fcomip
sbb
push
incb
lods
or
lds
addl
jbe
push
mov
xchg
scas
push
lock
shl
popf
imul
or
addr16
mov
aad
jp
and
xchg
data16
cmp
xor
or
leave
fsubrl
sub
adc
test
mov
lahf
inc
dec
adc
clc
aad
jmp
vpsubw
push
adc
insb
icebp
push
push
xor
iret
ret
popaw
mov
aam
adc
xor
sbb
lcall
inc
sub
imul
in
aam
outsl
sub
dec
out
xor
or
imul
add
fildll
insb
in
sub
dec
dec
push
loop
imul
pop
adc
clc
ret
inc
add
dec
fnstsw
and
jecxz
lea
adc
sbb
and
jg
mov
push
jl
inc
mov
repz
call
mov
mov
jne
mov
rcll
or
sub
add
add
inc
sub
xor
fstpl
push
out
xor
mov
pop
dec
dec
loop
loope
xor
sub
jmp
aaa
and
mov
das
pop
int3
inc
and
fs
add
adc
mov
cmp
lock
push
fiaddl
jp
push
and
jp
mov
push
in
test
pop
push
int3
mov
lcall
clc
pop
fdivr
ss
sub
and
shr
sub
push
cmpb
js
inc
ds
pop
mov
fwait
and
xor
inc
or
or
vmovss
xchg
or
insl
pop
xor
in
into
shl
cmp
dec
fsubr
add
push
dec
int3
adc
fcoms
insb
xchg
ss
push
fmuls
push
imul
cmpsl
sub
adc
rcr
in
mov
adc
scas
cmp
sbb
xchg
sbb
stos
repz
push
inc
mov
sbb
adc
mov
pop
cmp
imul
cmp
mov
rorb
mov
in
pop
loop
imulb
xor
insb
add
popa
add
push
ror
sbb
cli
roll
pushf
or
sbb
sbb
inc
xor
xor
add
fistl
pop
aaa
jb
pop
fmuls
xchg
push
cmpsl
les
sbb
jmp
xchg
int3
hlt
imul
shll
aad
inc
sbb
aad
push
sti
xchg
sbb
xor
movsb
imul
inc
mov
sub
push
and
stc
fidivl
mov
lret
cmpb
cs
jno
or
clc
dec
pop
in
fdivrs
jl
jmp
fisttps
and
and
xor
sub
test
xchg
fisubs
or
mov
mov
jmp
and
int3
clc
out
and
fimuls
mov
inc
xlat
clc
inc
inc
push
sbb
into
clc
pop
clc
adc
outsb
and
mov
loope
mov
sub
call
sbb
clc
push
mov
inc
std
das
sbb
jo
outsl
adc
sub
ret
xchg
in
lahf
xor
inc
lret
cmp
or
xorl
out
mov
push
push
sub
or
into
aam
push
daa
adc
sbb
in
sub
adc
je
sub
in
inc
shrl
daa
sbb
in
rorb
xchg
fcoml
sbb
xchg
jae
xchg
les
in
bound
nop
in
sbb
adc
js
loop
das
adc
sbb
mov
cmp
ret
mov
fistl
pop
mov
jp
out
dec
lods
add
inc
or
mov
test
and
daa
lret
mov
dec
scas
dec
loopne
mov
push
mov
adc
pop
adc
or
xor
or
fidivs
pop
mov
popf
or
mov
shr
out
xchg
test
loop
cmc
ret
in
popf
bound
xchg
sbb
rolb
add
jmp
js
or
jne
adc
push
dec
addb
loopne
testl
pop
incb
sub
lret
les
ja
mov
adc
loope
outsl
push
push
call
pushf
sub
out
push
inc
xchg
add
je
loop
fcomip
out
mov
sub
mov
or
lahf
int
test
mov
mov
mov
and
jmp
sbb
adc
aad
xchg
push
and
fisubl
adc
cs
movsb
xchg
xor
push
xchg
inc
aas
inc
push
mov
pop
pop
jae
pop
dec
xchg
cld
call
js
add
dec
into
outsl
outsb
inc
add
enter
push
adc
clc
mov
mov
cmpsl
lea
push
jmp
push
sbb
es
pusha
dec
xlat
add
mov
mov
push
adc
jge
sti
and
es
jbe
and
push
add
outsl
rolb
mov
xchg
data16
in
lock
insb
xor
inc
mov
xor
sbb
adc
into
or
icebp
pop
dec
xchg
xor
sbb
sarb
jbe
add
ss
cmp
rorl
aam
dec
adc
icebp
mov
inc
add
es
dec
dec
bound
xor
add
aaa
xor
push
repnz
scas
cmp
in
pop
inc
mov
fisttps
adc
inc
shlb
iret
lret
loopne
jg
fistps
sbb
push
movsl
repz
call
xor
or
or
inc
jo
xor
repz
xchg
cld
add
pop
add
js
mov
stos
fldl
adc
sahf
cld
movsl
dec
push
out
sbb
dec
cld
xor
mov
jne
dec
mull
ss
adc
add
pop
fwait
add
push
loope
pop
dec
jo
fs
ds
cmc
enter
xlat
jno
cmpsl
or
mov
and
mov
ljmp
cmp
call
inc
sub
dec
les
lods
jl
daa
add
fisubl
shrb
mov
pushf
sub
xchg
dec
sbb
fwait
loope
lods
dec
add
outsb
sbb
movb
jb
movsb
je
jb
adc
test
jecxz
pop
loopne
lret
mov
imul
xchg
flds
ljmp
fsubrs
fnstenv
dec
sbb
test
cmp
mov
pop
cmp
inc
cld
aaa
mov
loopne
push
cmp
lock
xchg
pop
pop
push
cli
add
xor
add
popf
cli
sbb
fdivs
sbb
inc
or
sbb
sub
xor
or
loop
cli
nop
loopne
jge
push
inc
inc
pop
shll
addl
fidivl
test
xor
add
mov
or
loopne
jl
sbb
sub
jno
rol
mov
xor
das
fadds
mov
cli
cmp
jae
mov
add
clc
sbb
loop
out
lahf
xchg
pusha
jg
movaps
ret
adcl
sbb
inc
xchg
mov
mov
sub
add
add
mov
sbbb
out
inc
sub
sbb
jl
cmp
movsb
mov
add
mov
sbb
cmp
jb
xchg
loopne
test
scas
or
fmuls
xchg
sbb
push
xlat
clc
test
mov
pop
mov
mov
cmp
mov
mov
ljmp
lcall
sbb
add
push
jb
fisubrs
mov
jae
sub
and
sbb
xor
xorb
ret
xor
xchg
cmp
lods
pop
inc
hlt
mov
sbb
push
cli
les
scas
je
push
cld
ja
mov
inc
loope
into
dec
repz
loope
dec
push
dec
dec
mov
icebp
sub
mov
dec
mov
sbb
outsb
sbb
loopne
test
mov
testl
enter
sub
imul
fadds
inc
mov
rcll
sarb
addr16
add
ds
sub
dec
outsl
sbb
add
repz
sbb
mov
mov
push
adc
std
scas
data16
incl
stos
or
sbb
add
jle
fisubl
xchg
ret
aad
movsb
in
int3
out
scas
push
xor
ret
jg
mov
out
pop
pop
inc
xchg
pusha
xchg
subb
add
add
xchg
test
xchg
ficoms
xor
cmp
cwtl
test
aad
add
mov
xor
bound
ror
js
insb
push
mov
pop
int3
push
icebp
fcoml
mov
loop
cmp
faddl
adc
mov
rep
xchg
xchg
and
sbb
int3
pusha
je
and
mov
mov
sbb
pop
cmpsl
mov
sar
push
jl
loopne
mov
scas
imulb
fiadds
inc
adc
shlb
adc
outsb
les
mov
rcrb
das
les
pop
scas
xor
adc
int3
xor
or
pop
fsubl
xchg
pop
push
call
into
popf
jp
jge
fwait
dec
sbb
aam
ficompl
das
cwtl
pop
dec
add
jecxz
cmp
cmp
xor
xchg
clc
test
or
les
xor
mov
push
sti
sub
divb
icebp
out
ss
fbstp
rcrl
rclb
stc
pop
pop
pop
negl
cs
cwtl
fbstp
repz
ja
sbb
mov
in
cwtl
rorl
movsb
adc
pop
xor
ss
jo
push
or
repnz
push
nop
loopne
repz
push
out
loopne
mov
or
inc
add
or
popl
mov
xchg
push
mov
xchg
in
int3
iret
sbb
dec
jmp
inc
adc
add
jo
sub
ljmp
je
or
inc
into
xchg
add
sbb
dec
mov
dec
mov
shlb
pandn
push
int3
subb
and
lret
lods
or
xchg
jp
in
xchg
add
cwtl
push
sbb
lock
push
inc
loop
shrb
popa
mov
lret
inc
fsubl
dec
fidivs
xor
daa
sbb
dec
adc
inc
fldl
dec
and
dec
fidivrs
cs
mov
das
cmp
ljmp
and
push
mov
aaa
clc
outsl
cmp
test
mov
jmp
add
push
xor
push
fstpt
inc
inc
and
pop
dec
push
cmp
add
shl
push
or
aam
adc
dec
sbb
sarb
test
insb
push
push
ljmp
mov
jle
add
add
adcb
mov
push
das
inc
cld
xchg
sbb
or
fstpt
mov
adc
xor
or
mov
addr16
ljmp
inc
movl
xor
rcl
push
rorb
fcmovnbe
mov
outsl
cmpsb
rol
fiadds
lods
push
add
rolb
push
fldcw
in
dec
sub
or
cmp
push
in
inc
pop
int
loopne
mov
push
outsl
sti
pop
or
gs
lods
cli
sbb
sbbl
or
hlt
adc
adc
sub
xchg
clc
ret
push
mov
xchg
mov
rolb
push
mov
sub
and
xchg
shrl
sub
pop
jo
mov
lahf
dec
cmp
popf
imul
jae
stos
pop
or
pop
xor
jmp
adc
dec
hlt
add
push
pushf
lret
stos
stos
inc
out
cmp
lods
or
push
jle
test
sub
cmpl
pop
or
adc
dec
mov
inc
fisttpl
in
jne
daa
aad
or
subl
ja
jno
lea
mov
daa
rcl
xor
jae
ljmp
outsl
push
mov
roll
jo
mov
fldt
adc
jbe
adc
sbb
sbb
dec
out
mov
jecxz
popf
pop
mov
push
js
jge
cmp
rol
push
lea
push
aam
cld
test
jne
xor
gs
in
cmc
iret
pop
xchg
fbstp
popa
jmp
out
inc
cmp
stos
loopne
ljmp
xchg
fcom
lds
cmp
hlt
pop
sarl
add
jo
je
xchg
cmc
xchg
mov
mov
inc
arpl
cmp
push
jl
cmp
aaa
mov
pop
inc
or
xchg
aam
nop
jecxz
dec
or
xor
loopne
js
and
cld
adc
shlb
call
lock
inc
cmp
iret
test
mov
adc
xorb
sbb
sarb
and
sub
adc
ss
lods
and
mov
xor
xchg
dec
xchg
mov
scas
adc
pop
push
and
add
loop
or
pop
add
xor
add
sub
jl
ret
or
divl
push
je
inc
insl
cld
jmp
mov
pop
out
popa
notb
sbb
into
aam
adc
and
aam
fiaddl
add
inc
jecxz
int3
idiv
and
rclb
sub
clc
insb
std
fs
mov
jge
mov
aam
dec
lret
xchg
pop
jno
inc
js
inc
and
xchg
scas
mov
pusha
inc
sub
rcll
loopne
call
mov
add
call
add
xchg
or
insb
fwait
sbb
xor
mov
rclb
and
insb
pop
repz
and
adcb
lret
pop
loopne
and
mov
mov
std
je
out
push
fsubrl
popa
cld
mov
mov
mov
mov
inc
cltd
fsubl
push
xchg
inc
sub
push
dec
sbb
add
fdivrl
sub
xor
dec
movb
in
push
movsb
into
push
ja
jle,pt
cmpsl
or
mull
jmp
pop
and
les
cltd
test
sbb
or
add
fisubrs
andb
push
mov
mov
inc
rolb
mov
sub
jo
fdivrl
mov
lock
lret
orl
inc
ja
xor
sub
push
pop
dec
mov
inc
pop
pop
sub
dec
rcll
add
loopne
inc
add
adc
sbb
mov
ja
and
jae
push
sub
lret
or
cwtl
pop
dec
sub
dec
push
scas
cwtl
paddb
push
sbb
enter
clc
lahf
sahf
outsl
or
mov
fists
adc
mov
inc
hlt
cwtl
cld
add
daa
test
add
lahf
adc
iret
outsb
sub
jno
and
xchg
stc
lahf
mov
dec
popa
lock
sub
xor
add
sub
pop
mull
add
push
outsb
ja
jne
fadds
loop
stos
xlat
mov
mov
test
mov
fstl
dec
mov
ja
add
sub
lds
pushf
cld
add
sahf
add
sbb
nop
jae
je
aad
mov
das
xchg
lcall
dec
adc
jge
adc
add
adcl
imul
fldt
loope
pushf
int3
movl
add
and
call
inc
sbb
cmp
dec
sbb
adc
test
jg
aad
pop
xor
cmp
divb
pop
xor
mov
mov
push
add
or
jp
std
mov
shrl
and
shr
stos
push
adc
pop
push
adc
das
push
call
push
aas
inc
int3
loope
roll
and
orb
mov
hlt
sbb
bound
sub
insl
sbb
pop
js
pusha
shl
jg
rcll
pop
jbe
in
sub
jbe
int
test
fcmovnu
xchg
push
sbb
xor
adc
mov
pop
adc
les
loope
jl
adc
mov
jb
and
aam
and
xchg
subb
and
adc
inc
cld
or
dec
inc
push
sbb
mov
inc
sti
pop
sti
mov
ljmp
dec
xor
das
add
ficomps
sub
mov
outsl
xor
negb
jnp
sbb
inc
mov
cmp
mov
jg
sub
adc
pop
lds
pop
pop
cwtl
lcall
lods
loop
add
push
out
add
shrd
ficoml
jl
shl
dec
xchg
loop
mov
add
pushf
inc
sbb
shll
shll
add
shrb
pop
pushl
mov
cmp
pushf
adc
jp
and
or
cmp
adc
adc
idivb
inc
xor
int
jecxz
sbb
push
lods
mov
jns
in
out
int3
xor
rolb
pop
sbb
mov
lret
add
out
lds
mov
pop
xor
and
jns
addr16
push
popf
sbb
movl
in
mov
data16
pop
test
mov
sub
mov
pop
mov
adc
lds
data16
sbb
xchg
ss
aaa
fsubr
dec
add
xchg
inc
xor
mov
data16
cmp
mov
dec
pop
or
nop
stos
adc
sbb
int3
dec
inc
cmpsb
es
or
sbb
or
jmp
scas
dec
sub
cld
fadds
subb
fwait
xor
sbb
mov
mov
aaa
pop
xor
push
mov
sub
or
sub
scas
xor
fstps
push
aas
xchg
nop
popa
dec
xchg
pop
xchg
sub
inc
iret
xchg
sbb
movsl
pusha
outsb
testl
cltd
mov
jp
mov
cmp
out
add
es
push
rcl
xor
das
ja
in
dec
add
adc
dec
iret
inc
lods
mov
aaa
sub
and
in
add
jo
adc
cld
in
jb
ds
cmp
cwtl
dec
pushf
mov
or
shl
pop
adc
xor
adc
pushf
add
sbb
icebp
sub
fldcw
lcall
pop
flds
out
sub
lea
and
mov
mov
int3
or
jne
jno
mulb
sbb
or
outsl
mov
mov
pop
and
push
mov
hlt
in
fisubl
dec
icebp
cwtl
mov
dec
lret
loopne
mov
sbb
es
leave
pusha
test
loope
cmpsb
shll
data16
ds
btr
add
lock
adc
sub
ret
push
inc
psllw
add
lock
and
mov
xor
ret
and
push
and
dec
inc
dec
jne
sub
xor
fcomp
jge
and
mov
xchg
fimull
pop
dec
sbbl
xchg
nop
pop
addr16
mov
icebp
xor
sbb
cltd
sub
ret
fidivl
adc
sub
adc
pop
int
jp
or
adc
cwtl
rolb
fadd
out
push
sbb
add
jbe
add
sub
call
dec
test
push
push
cmc
inc
jne
adc
add
call
clc
movsb
addl
mov
sbb
mov
rol
push
xor
dec
fadds
xchg
xor
cli
ja
es
ret
int
int
cmp
or
notb
inc
fcomps
sbb
inc
push
nop
inc
pop
add
mov
or
pop
jae
and
data16
xorb
dec
push
in
push
fs
jmp
mov
into
adc
sbb
dec
pop
and
bnd
inc
dec
inc
repnz
lret
push
sahf
xchg
mov
ss
popl
cs
mov
and
push
mov
movsb
and
out
add
lock
nop
and
repnz
std
data16
jne
sub
xor
and
pusha
fstpt
imul
jecxz
sbb
cmpsb
fisubs
or
mov
mov
xchg
in
test
inc
or
js
int3
int
inc
add
adc
add
rolb
adc
cli
dec
cmp
mov
aam
jl
sub
lods
pop
rorl
inc
xchg
sbb
adc
dec
andl
aaa
loop
and
xor
out
and
aaa
mov
shlb
pop
cli
fwait
push
test
movsl
cmp
push
ret
cmp
sbb
scas
sbb
and
addl
mov
icebp
ljmp
das
mov
fcoml
nop
fisubs
mov
rolb
xchg
push
sub
xor
lea
pop
aaa
stos
bound
jg
mov
inc
movsb
es
andb
sahf
or
sahf
or
push
adc
outsb
das
jge
sbb
mov
xor
bound
outsb
xor
loope
int
daa
add
add
rol
andb
inc
lret
xor
daa
in
cmpsb
fwait
xor
fdivl
cmp
push
enter
movsl
jp
mov
mov
add
orb
int
popa
icebp
test
cmp
mov
popa
clc
repz
push
icebp
dec
cmpsb
f2xm1
aad
lods
jp
add
ljmp
loope
outsl
add
pop
xor
or
push
icebp
sbb
ljmp
xorb
mov
dec
idiv
adc
hlt
push
cmp
pop
xchg
loopne
ficoms
je
fnstcw
push
mov
mov
push
pop
es
cmp
or
jmp
pop
ret
shrl
rcll
pop
ret
enter
cmp
sub
clc
clc
and
jmp
nop
stos
jne
ret
pop
clc
xchg
mov
add
push
xchg
add
jo
test
enter
pusha
neg
push
add
xchg
mov
jnp
imul
les
cmpsl
pop
xlat
adc
test
adc
adc
popf
add
add
sbb
dec
add
andl
iret
int
lret
sbb
orb
sub
jg
cmpsl
jno
repnz
aam
xchg
test
lods
in
je
push
push
imulb
sbb
out
inc
repz
sbb
xor
out
push
loop
sub
pushf
and
sub
push
add
fiaddl
add
xor
aas
es
mov
push
loopne
cltd
push
aam
pop
mov
nop
pop
inc
stos
add
imul
outsl
xor
mov
hlt
bound
pop
mov
aaa
rorl
lock
push
roll
pop
call
sbb
inc
loopne
rcr
pusha
cltd
bound
lods
mov
cld
pop
out
mov
lret
pop
orl
adc
push
aas
mov
pop
or
sbb
mov
es
or
mov
pop
cmp
or
jle
or
xor
add
mov
xchg
mov
pop
sub
cmpsb
mov
xchg
push
aam
lcall
or
rcrb
and
xchg
cmpsb
test
add
cld
add
sbb
adc
mov
pusha
push
rcl
lods
pop
xchg
bound
mov
test
and
cwtl
roll
push
xor
test
daa
mov
xchg
sbb
cmp
dec
std
jbe
mov
mov
outsl
xchg
lea
ret
mov
or
add
sub
mov
push
mov
lcall
ja
push
push
orl
dec
aaa
push
mov
imul
addb
mov
outsl
pop
jg
inc
cs
fnstcw
xor
inc
rolb
and
int
or
or
pop
orb
add
push
mov
hlt
cmp
fistpl
jnp
in
add
fadds
test
sbb
mov
bound
and
or
rcrl
cmp
dec
sbb
clc
dec
aaa
jmp
xchg
fmull
add
lock
xchg
pop
adc
jno
lea
inc
clc
mov
inc
add
out
adc
arpl
inc
fnsave
or
test
in
push
int
lock
sbb
test
xchg
dec
pop
inc
ss
and
scas
jge
xchg
xor
rcll
call
inc
das
fisubrl
loop
pop
int
das
push
arpl
das
cld
mov
test
add
inc
add
das
push
sti
loopne
daa
sub
mov
rcll
in
out
fisttps
xchg
or
in
pop
mov
adc
test
jo
lock
add
adc
lock
sbb
push
out
cmp
aaa
adc
dec
add
sbb
adc
add
push
js
sub
int
xlat
movsb
pop
loopne
fwait
sbb
mov
xor
push
adc
push
mov
clc
sub
or
fwait
icebp
les
cmp
rolb
or
mov
mov
xor
mov
je
dec
sub
pusha
adc
and
xor
xchg
inc
mov
push
sbb
xor
push
in
bound
ret
lgdtl
rcrb
push
je
scas
jge
and
pop
cmpsb
xchg
outsb
push
jmp
dec
inc
add
call
aaa
cli
ret
loop
clc
pop
dec
xchg
sbb
mov
popf
mov
add
std
ss
pop
clc
or
add
loopne
fimuls
push
lret
lock
stos
jnp
and
fwait
mov
jo
fsubrl
in
inc
or
mov
dec
ret
out
pop
mov
push
push
xor
cmp
push
iret
shl
out
popf
fcmovb
push
ss
fsubs
jg
lods
je
ret
and
shlb
movsl
dec
jge
and
adc
and
fmuls
xor
adc
int3
push
push
hlt
movsb
add
and
or
inc
jecxz
test
dec
cmp
lock
inc
ficoml
cmpl
add
call
push
ds
or
inc
aad
icebp
test
int
adcb
xor
sub
fisttpl
or
ficoml
cmpsl
mov
test
pop
sub
mov
add
rcr
repz
mov
cmpsb
inc
push
fistpll
adc
or
lds
inc
repnz
add
jmp
jmp
jns
leave
mov
sub
jne
mov
jne
or
mov
sbbl
rclb
push
cmp
push
sub
stos
enter
aas
test
sbbl
lahf
pop
ljmp
cmp
movsb
cs
or
aam
loope
add
sbb
aas
shlb
or
xor
andl
in
add
mov
push
add
sbb
mov
sbb
sub
pop
fists
dec
sbb
push
sti
push
lret
and
xor
popa
mov
pusha
jnp
xchg
dec
loop
loopne
aad
xchg
sub
push
fsub
adc
fiadds
inc
inc
push
int3
pop
xchg
and
or
cmpsl
sub
jmp
push
int3
jmp
and
addl
or
nop
into
or
and
pop
dec
jae
jb
push
mov
mov
sub
push
sti
jmp
sub
or
mov
xor
hlt
add
enter
sbb
ret
nop
mov
sbb
push
flds
adc
shlb
lods
enter
stos
xchg
fmul
inc
divl
rolb
jmp
add
xor
inc
adc
push
ret
loope
and
sbb
dec
or
xchg
push
mov
inc
cs
in
lret
lcall
repz
scas
scas
adc
fwait
sub
subl
es
out
or
dec
mov
popf
ficomps
ret
adc
inc
sti
es
inc
add
in
fwait
je
daa
in
loop
sub
orl
and
sub
or
mov
loopne
sbb
movsl
xor
hlt
push
fcoml
pop
jle
push
and
sub
push
push
pop
fwait
scas
fisubs
or
sbbl
or
push
aam
leave
lds
pop
or
imul
in
ljmp
pop
fstp
xor
or
cmp
push
out
cmp
mov
cli
or
shlb
sub
mov
pop
outsb
sub
lock
bound
pushl
stc
rorb
mov
int
sbb
loop
pop
add
push
mov
cli
push
out
sahf
jmp
icebp
and
jmp
mov
sub
cli
ss
vpextrw
fwait
push
jo
and
lcall
add
and
and
xlat
inc
pop
adc
enter
mov
fidivs
fwait
mov
or
add
out
popa
sti
test
in
inc
xchg
fldcw
pop
xchg
pusha
sti
out
dec
xchg
dec
lret
jge
cld
dec
adc
sbb
negl
hlt
mov
fcomps
fimull
inc
push
pop
adc
push
cmpb
pop
or
adc
loope
addb
mov
ror
adcl
ljmp
sub
scas
repnz
test
aam
or
fwait
push
xor
add
mov
mov
loope
mov
out
pop
popf
cmpl
lds
cmc
les
pop
xchg
dec
test
imulb
mov
cs
or
fstps
mov
fidivrl
aad
fcmovnb
decb
sub
inc
xlat
and
sub
cmp
jle
add
rolb
pop
adc
dec
aad
adc
jp
xor
bound
cmpsl
roll
xor
or
mov
rcr
pop
pop
dec
inc
das
jns
pop
popf
repnz
shl
inc
and
inc
cmpsb
dec
hlt
enter
icebp
in
xor
inc
and
dec
addr16
inc
mov
in
les
sub
sbb
out
je
adc
or
jae
in
arpl
lcall
fisubl
push
push
sbbb
in
mulb
adc
addl
push
aam
push
clc
mov
add
cmpsl
pop
xchg
or
idivb
jp
test
jb
jo
xor
stos
jae
sbbl
dec
subb
push
enter
pop
call
mov
lcall
cmp
outsl
xchg
push
mov
aas
sbb
dec
inc
xor
dec
clc
rcl
addr16
cmp
jne
sub
std
dec
andl
in
push
jle
sub
incb
adc
mov
jbe
or
icebp
loope
mov
imul
add
push
push
test
mov
outsl
test
je
in
mov
stos
iret
or
jmp
cli
out
xor
mov
cld
xchg
add
xrelease
pop
shlb
bound
mov
pusha
push
mov
or
xor
push
in
in
imul
inc
jae
jecxz
jno
cmpsl
add
mov
sahf
test
xchg
aaa
shrb
adc
adc
scas
aaa
aad
adc
push
inc
mulb
adc
jmp
mov
xchg
dec
adc
in
scas
jecxz
int
jae
subb
jb
push
outsl
test
pushf
ss
push
xor
shlb
push
cli
les
bound
imul
or
mov
repnz
adc
adc
movsl
jbe
push
movsb
popa
fmuls
lds
inc
ljmp
push
shlb
cmp
mov
out
push
icebp
push
sbb
pop
xchg
bound
cmpsb
sbb
ret
and
sarl
jmp
and
mov
mov
jae
in
in
andb
and
fstps
mov
int3
cmpsb
incl
movsb
ss
inc
sub
dec
jb,pn
inc
ljmp
aaa
mov
cmp
xor
inc
int
mov
paddd
xor
dec
mov
ljmp
push
and
ljmp
addr16
mov
push
sbb
add
xchg
or
repz
xchg
cmpl
aam
push
and
rolb
aad
jl
pop
jno
bound
or
add
pop
orb
pop
mov
loopne
xor
cmovnp
push
cld
mov
icebp
loopne
dec
shll
cld
int3
enter
cmpsl
es
fmuls
mov
fdivs
ret
shrb
jae
xlat
les
stos
cmpsb
add
xor
and
pop
push
out
sub
dec
and
mov
add
add
jne
aam
jne
hlt
popf
hlt
data16
add
mov
add
push
cli
add
into
add
cld
cli
sub
or
clc
inc
xchg
sbbl
dec
add
or
ja
bound
imul
or
icebp
dec
adc
push
cmp
roll
repz
out
adc
inc
cmp
mov
push
cwtl
jecxz
inc
addb
cmp
sub
dec
jo
rorl
icebp
dec
fsub
fidivrs
push
xor
outsl
pop
adc
cmp
dec
push
hlt
fstpl
jg
sbb
sbb
popa
pop
aad
addb
clc
mov
cmpsl
push
cmp
xchg
addr16
jne
movsb
sub
or
fwait
test
cmp
sub
aam
pop
jl
sbb
pop
mull
push
xorb
ficompl
test
leave
and
iret
loopne
pop
ds
jmp
mov
pop
test
stc
mov
test
out
cmp
in
sub
leave
movsb
enter
and
inc
pop
loopne
or
popf
scas
adc
aas
dec
sub
or
rorl
push
dec
fimuls
or
bound
inc
xor
or
loope
or
push
push
cld
jmp
dec
int3
sbb
add
loope
xor
mov
cmpsb
cmp
cmp
add
fbstp
sarl
or
or
jp
out
outsb
adc
js
aaa
sub
jge
cs
inc
mov
add
mov
outsl
orb
mov
int
dec
stos
addb
jge
sbb
inc
mov
cwtl
js
push
dec
iret
sub
inc
mov
out
pop
shr
cmp
mov
fldenv
add
add
leave
ret
xchg
push
mov
js
sub
daa
mov
rcl
loop
sbb
mov
and
ljmp
ss
lahf
ret
jns
mov
xchg
jmp
aam
arpl
sub
and
pusha
shrl
or
ss
adcb
jo
loope
inc
popl
icebp
sub
lret
inc
addl
loopne
inc
add
dec
xchg
stos
cli
mulb
adc
sahf
push
rclb
movsb
inc
sub
insb
push
scas
lock
add
and
es
xor
adc
shrl
or
iret
adc
rorb
sbb
cmp
xor
mov
cmp
adc
roll
cli
adc
cld
sti
sbb
jmp
push
out
mov
shll
in
xchg
js
xlat
int
push
and
out
push
dec
push
lds
adc
lea
aaa
cld
sbb
sub
mov
lret
sbb
sbb
adc
push
lahf
mov
popl
or
je
scas
add
in
addr16
stc
mov
ja
push
sbb
pushf
add
mov
cmp
push
js
inc
add
into
pop
sub
aam
adc
mov
out
sbb
rclb
inc
orl
ljmp
mov
jne
push
xor
sbb
scas
ljmp
xor
add
dec
daa
aad
int
stc
lea
inc
popf
in
stos
jo
das
out
mov
add
fsub
add
je
cmp
insb
and
fnstenv
bound
mov
jp
les
sbb
aad
dec
sbb
dec
incl
hlt
push
or
inc
std
loope
push
add
add
test
sub
insl
inc
inc
sbb
adc
jb
cmp
cmp
jne
shlb
add
mov
std
push
cmc
add
fisubs
mov
lds
imul
cmpsb
aam
shll
add
pop
ror
js
xor
cld
inc
data16
adc
add
dec
test
mov
ja
xchg
repnz
les
fwait
repz
in
icebp
xorb
inc
sbb
mov
mov
hlt
je
out
jae
loopne
xchg
mov
add
push
test
fs
or
inc
test
jmp
popl
loop
ret
outsl
mov
push
int3
push
sahf
rorl
sub
adc
inc
and
je,pn
adc
inc
les
clc
jo
fld
pusha
fmul
cmp
test
xor
addr16
pop
aaa
adc
mov
add
sbb
rcr
call
sahf
aam
add
or
call
cmpsb
mov
push
fcmovnb
push
dec
push
sahf
dec
and
add
loope
xor
or
lahf
push
sbb
out
add
pushf
mov
int3
xor
add
pop
push
orb
push
out
add
repz
sub
lods
pop
dec
add
je
jo
push
out
dec
jae
ljmp
and
cmp
jne
xor
inc
jmp
add
ret
pop
ret
jno
imull
dec
xchg
inc
insb
rolb
test
inc
sub
in
test
orb
add
sub
out
or
xlat
inc
inc
pop
mov
jg
add
call
add
sarl
adc
jnp
test
pop
mov
mov
lds
xor
mov
jo
add
push
clc
pop
in
mov
movsl
shl
fstl
inc
add
addb
fbstp
push
pop
sub
into
push
pop
cmc
push
push
cld
outsl
jmp
aad
xor
add
faddl
mov
push
fisubrs
dec
shlb
adc
fdiv
xlat
push
jae
adc
add
or
scas
loop
enter
push
push
in
clc
cmc
push
cmpsb
mov
dec
fisttps
mov
test
stos
test
cmpsl
mov
jmp
les
jo
cwtl
ljmp
mov
push
pop
push
mov
iret
outsb
inc
add
push
pop
push
pushf
and
rol
dec
cmpsl
dec
aad
fwait
adc
jo
sbb
sarb
roll
mov
aad
mov
scas
inc
aas
add
mov
cmp
mov
movsb
push
mov
jo
add
test
jb
enter
lahf
push
hlt
jae
adc
rorl
inc
ret
shl
lret
push
fldcw
pop
xor
mov
pop
cwtl
pop
push
inc
xchg
jp
mov
pusha
add
push
jne
test
jae
or
out
mov
or
mov
scas
repnz
stos
mov
stc
adcl
xchg
hlt
in
sbb
xlat
lock
mov
pop
pop
ljmp
popf
jae
cld
leave
aad
mov
mov
or
aam
jmp
repnz
enter
shll
or
jb
outsl
inc
out
js
fwait
adc
icebp
jo
dec
inc
sbb
jmp
adc
test
push
outsb
sti
leave
adcl
adc
call
mov
dec
js
fs
cwtl
dec
lahf
hlt
push
mov
lds
dec
adc
inc
loopne
push
je
and
push
add
call
mov
adc
add
jnp
out
daa
lahf
push
repnz
imul
fildl
push
mov
adc
add
test
in
addr16
int
jmp
fcmovnbe
mov
jmp
call
add
shrb
cmp
dec
fistpll
out
sbb
mov
icebp
mov
fidivrs
xor
sub
xor
data16
in
and
xchg
repnz
adc
pop
mov
sbb
sbb
rcrb
lahf
dec
movsb
stos
or
adc
fs
or
orl
inc
jne
xor
mov
fiaddl
insl
or
adc
clc
push
jno
daa
loopne
mov
dec
adc
lds
xor
mov
pop
jne
adc
bound
pop
dec
and
sub
push
repnz
cmp
sub
xor
insb
pop
arpl
jg
add
cltd
mov
stos
dec
lock
in
and
xor
stos
push
mov
mov
and
cmp
jl
pop
jge
or
lock
sub
das
inc
jne
shrl
clc
mov
push
mov
les
fistpl
push
push
mov
repz
and
idivb
mov
adc
mov
sub
int3
inc
and
shrl
lcall
mov
add
push
addr16
sub
and
sbbl
push
add
out
movsl
lods
pop
add
or
testb
addl
lock
jge
aad
lcall
xchg
loopne
andb
fwait
add
mov
ljmp
mov
add
adc
lock
lret
xor
xor
adcb
adcb
inc
adc
pushf
add
bound
mov
push
adc
add
sbb
mov
or
sub
add
sti
jnp
or
int3
mov
into
adc
fistl
outsl
add
or
xchg
shrb
mov
push
sbb
sbb
mov
fsubrl
cltd
mov
xor
dec
lods
loope
cli
and
sarl
es
fs
inc
xor
or
push
jo
or
xor
inc
adc
sbb
or
bound
mov
es
add
orb
fimuls
or
mov
repz
inc
mov
add
fdivrs
adc
cld
inc
adc
mov
add
pop
fwait
adc
addr16
jns
mov
rolb
outsl
add
je
push
push
lds
sbb
add
imul
dec
adc
mov
cltd
das
add
add
inc
or
xchg
or
in
cmp
add
into
push
or
adc
add
and
les
mov
sub
aas
cmp
or
jo
stc
sti
sub
daa
mov
jae
dec
push
sbb
pushl
adc
push
test
xchg
sub
cwtl
inc
push
dec
call
or
shlb
pop
inc
add
dec
adc
cwtl
clc
in
cli
inc
sub
shlb
push
pop
pusha
pop
or
cmpsb
or
mov
ret
sbb
jl
data16
pusha
mov
jb
pop
sbb
inc
cmp
and
mov
or
inc
in
sbb
add
adc
pop
enter
jno
int
jmp
pcmpgtd
or
jl
divl
lcall
add
pop
test
pop
dec
ljmp
cmp
test
aam
push
pop
rcll
lahf
sti
sbb
iret
or
loope
jbe
inc
inc
shlb
jp
inc
push
mov
mov
bound
and
outsl
lock
mov
xor
pop
mov
or
sbb
test
mov
ror
es
jge
add
jg
push
ret
ret
arpl
scas
pushf
in
adc
fdivrs
fsubp
mov
inc
push
push
pop
idiv
or
addb
dec
fdivrp
test
sub
rolb
test
jp
add
fildll
xchg
or
sbb
pop
add
dec
rcll
fnstenv
fisubs
pop
mov
and
rclb
pop
pop
loopne
cwtl
inc
push
mov
outsl
shll
push
pop
loope
cmp
and
cmp
or
aam
inc
arpl
orb
nop
push
sbb
inc
push
mov
mov
push
les
scas
cwtl
adc
testl
test
bsf
push
push
loop
fdivs
inc
add
adc
push
mov
add
clc
daa
div
push
and
scas
test
or
dec
xchg
sub
out
loop
mov
cmp
pop
mov
xor
and
add
popf
push
ret
ja
dec
push
enter
and
and
sub
lods
xchg
adc
es
mov
gs
inc
dec
or
add
insb
in
pop
fsubrs
xchg
lahf
push
jns
mov
lea
push
sub
push
mov
leave
mulb
pop
fidivrs
lret
pushf
shll
sbb
sub
sbb
xor
call
sbb
call
outsl
inc
ficomps
notb
or
push
adc
orb
inc
mov
sbb
nop
call
hlt
popf
loopne
pop
adc
mov
sub
jo
jecxz
mov
jle
add
fidivl
aas
mov
fisubs
les
mov
or
and
mov
add
scas
mov
clc
mov
cmpsb
repz
in
xor
gs
js
jae
xchg
cmpsb
or
pop
or
or
mov
xchg
cmpsl
push
mov
ja
lods
mov
and
aam
and
adc
lods
dec
lret
dec
dec
and
inc
sub
add
inc
dec
jge
rol
out
aaa
movsb
ret
pop
ficomps
in
pop
aam
mov
test
xor
mov
movsl
push
push
aad
jae
cmp
in
bound
xor
cmpsb
cmpsl
insl
mov
xchg
adc
pop
mov
lods
int3
icebp
ljmp
out
loop
loope
decb
pop
pop
and
addr16
lods
push
dec
sar
pop
mov
jbe
mov
adc
add
in
jne
xchg
push
nop
ror
inc
hlt
adc
inc
push
cmpsb
inc
ss
push
inc
mov
les
dec
xor
jne
or
lret
adc
xor
inc
dec
jnp
cmc
or
mull
mov
adc
inc
fcompl
pushf
or
jge
enter
test
insb
aad
jp
hlt
add
clc
mov
daa
add
enter
lods
adc
shlb
add
mull
lahf
sub
pop
adc
enter
imull
andb
clc
push
jp
add
sar
rol
pop
les
xor
mov
add
mov
sub
xor
add
faddl
add
pop
mov
scas
xor
push
sbb
in
or
inc
add
add
movsb
rcrb
add
stos
out
loopne
and
int
es
out
rclb
xchg
cmpsl
test
and
xchg
sahf
mov
mov
push
push
test
cmp
out
cmp
stos
or
cli
test
loope
repz
sbb
push
dec
xorb
xchg
mov
mov
inc
cs
cltd
xchg
add
movsl
shlb
dec
and
inc
adc
fistpll
sub
cwtl
jns
shlb
inc
in
addb
mov
xchg
cwtl
popa
add
lock
mov
test
std
sub
call
or
rcll
cmp
leave
xchg
jnp
add
pusha
inc
push
rorb
pop
sub
pusha
sub
int3
cmpsb
push
adc
and
movsl
mov
mov
mov
lcall
fcomp
loopne
or
mov
mov
pushf
xor
popf
popa
sub
rorb
andb
in
add
mov
enter
loope
movsl
xor
mov
sub
lods
subl
mov
xor
adc
sbb
sbb
mov
sbb
filds
add
or
and
xor
sbb
cmp
and
lret
leave
xor
pop
push
sub
neg
je
push
sti
test
jb
jmp
mov
ljmp
popf
add
sub
sub
inc
ret
mov
cmp
inc
mov
lret
jb
stos
add
or
pusha
jbe
sub
loop
pop
inc
jecxz
repnz
ret
mov
inc
lahf
cmp
mov
adc
push
cwtl
rolw
int
or
and
mov
cwtl
jne
jae
in
and
add
mov
xchg
mov
andb
shll
xchg
scas
cld
add
sub
ficomps
add
es
dec
data16
and
pop
rol
sbb
and
mov
lret
push
fdivl
les
push
adc
cmp
stos
cmp
sbb
cmp
pop
sub
sbbb
adc
sbb
mov
nop
push
enter
pop
loop
push
out
jb
or
add
imul
decb
mov
xor
aas
dec
add
inc
pop
add
adc
and
popa
int3
sbbb
and
lea
repz
ljmp
jo
call
xor
or
fwait
sub
nop
adc
sub
add
mov
std
add
cli
dec
mov
aas
sub
sbb
jge
repnz
jg
pop
pop
sub
add
enter
xchg
sub
cmpsb
jae
pop
fimuls
cwtl
lods
ret
mov
xor
sub
ret
sub
cmpsb
mov
movsl
xchg
pop
idivl
pop
addl
sbb
aam
test
out
jno
cmp
fcoml
popf
mov
lock
aam
stos
inc
sub
xorb
inc
out
pop
and
push
mov
cmp
and
fcomps
or
fsubp
pop
inc
add
fsubl
and
add
enter
clc
ret
adc
adc
and
imul
push
lods
movl
inc
push
pop
jne
out
add
add
lcall
sub
iret
dec
sub
andb
jl
bound
push
lcall
mov
xchg
sub
dec
sub
outsb
hlt
lret
dec
fcoms
loopne
movb
cwtl
or
sbb
mov
push
mov
push
inc
pop
jns
stos
orl
rorb
inc
lea
aas
sub
dec
pop
mov
push
jae
add
push
pop
pop
cmp
pop
or
dec
cmpsb
adc
stos
sub
pop
int3
loop
in
mov
xor
orb
cmp
or
pop
mov
sub
fwait
pop
xor
mov
ja
insb
icebp
outsl
pop
ljmp
outsl
jb
enter
jb
jb
adc
popa
push
jmp
aam
add
andl
jae
adc
sbb
jnp
fs
pop
sub
jbe
pop
or
jo
lock
pop
xchg
mov
lds
fwait
mov
cli
xor
loop
adc
jo
lds
jp
jmp
xchg
movsl
xchg
in
dec
dec
repz
jmp
into
aam
adc
xor
stos
lret
xor
faddl
push
cmpsb
fiadds
lods
sbb
cwtl
orb
add
dec
sbb
or
loop
rcll
push
in
jb
clc
add
mov
std
jae
sub
jmp
inc
push
add
push
inc
xchg
addr16
call
data16
cltd
lods
mov
insb
push
mov
mov
int3
sub
inc
pusha
int3
cmp
mov
add
sbb
cmp
xchg
cmc
cmpsl
orb
sub
pop
mov
popf
pushf
sti
pop
test
add
inc
fistpl
aad
pop
aaa
jb
cmp
mov
push
jge
sbb
inc
in
icebp
jle
ret
imulb
mov
mov
inc
or
mov
in
push
xor
mov
outsb
xor
push
mov
mov
cmc
lods
outsl
or
cmp
mov
dec
pushf
jae
and
inc
fdivs
insb
mov
pop
xchg
add
popf
xchg
adc
mov
pop
orb
pop
or
and
inc
je
lods
daa
into
or
inc
scas
push
adc
xchg
outsl
shl
xacquire
mov
inc
cmp
sbb
jae
adc
xchg
shrl
jnp
cmp
jbe
popf
mov
and
dec
push
imul
mov
inc
and
and
inc
cs
dec
test
jbe
sbb
shl
adc
pop
sub
enter
cmc
dec
jo
inc
das
rcr
andl
mov
xor
incl
jl
sub
inc
add
pusha
movsb
mov
pop
subl
sbb
dec
push
lret
pop
sbb
sub
push
xor
jns
mov
cmp
push
xchg
andl
sub
int3
in
add
xor
hlt
adc
loop
mov
ds
test
pop
call
mov
pusha
shlb
adc
adc
jg
lret
fbld
sahf
cmp
mov
lea
outsl
sbb
mov
inc
cmp
sbb
mov
cmp
lods
subl
xor
cmp
sub
and
lds
inc
inc
sbb
movsl
dec
cmpb
ret
test
idivl
mov
add
inc
xchg
orb
pop
inc
inc
xor
cld
lds
push
inc
out
imul
adc
or
jl
aaa
cwtl
push
adc
adc
roll
xchg
pop
mov
mov
sbb
mov
les
adc
inc
adc
adc
aaa
bound
dec
cmp
rolb
repnz
inc
in
movsl
out
add
dec
add
inc
xchg
cld
mov
std
add
sbbl
add
add
leave
push
sub
std
outsl
decl
jne
rolb
or
lock
ret
push
pushf
jae
loopne
fdivs
fistpl
ret
add
adc
call
dec
ret
xor
sub
dec
arpl
push
mov
and
jle
es
daa
cli
outsb
inc
in
out
mov
clc
ror
pop
mov
ljmp
sbb
adc
and
fnsave
sbb
mov
jmp
mov
xlat
inc
xor
pop
fiadds
inc
lret
loop
cmc
add
and
sub
pushf
cltd
jp
test
sbb
push
jo
cwtl
or
loopne
les
add
insl
inc
xchg
test
scas
or
adc
fistpll
leave
ret
lahf
jecxz
call
je
xchg
mov
push
dec
jmp
or
in
stos
push
aas
neg
std
add
mov
mov
sbb
and
jge
cmpsl
outsl
icebp
jno
pop
ja
or
add
cmpb
adc
fcmovnbe
ret
clc
fistpll
push
inc
mov
mov
inc
push
jl
shlb
out
sub
pop
insb
lock
clc
adc
mov
movsl
push
pop
push
cmp
mov
sqrtps
inc
insl
sub
adc
es
or
cmpsb
js
les
lock
into
adc
xchg
orl
or
mov
or
lock
cmp
aaa
stc
lea
push
cmp
xor
stos
loopne
push
pushf
inc
and
lods
inc
or
or
sbb
divl
push
lahf
cli
into
addl
fmuls
mov
out
stos
sbb
cmp
repz
cltd
negb
fnstcw
mov
mov
add
or
adc
add
fmull
fadd
pop
add
mov
add
jno
add
daa
add
jge
lods
pop
add
adc
dec
dec
add
mov
and
cli
sbb
insb
add
adc
popa
cmpsb
popa
ror
and
subl
rclb
push
pop
adc
dec
mov
dec
push
dec
lret
mov
push
sub
ss
ficoml
add
adc
addb
push
cli
mov
inc
sub
mov
mov
add
test
insb
and
add
adc
loope
or
rcll
icebp
in
jb
push
adc
mov
leave
inc
adc
xor
sub
movsb
xorb
mov
je
aam
jae
xchg
andb
or
mov
testl
cltd
ljmp
inc
sub
and
jmp
mov
adc
repz
add
or
aam
loopne
roll
mov
and
pop
adc
mov
cli
pop
lds
addr16
or
sbb
rorb
je
mov
fdivrs
mov
das
fdivrl
ret
test
test
fimuls
push
call
fldcw
jl
sbb
pop
adc
movsb
push
aad
xchg
adc
lock
movsb
push
lds
cmp
icebp
push
loope
mov
pop
xchg
addb
dec
jp
push
in
pop
jmp
cmpl
mov
and
jno
xor
jp
mov
and
adc
xchg
mov
xor
mov
aam
dec
inc
shll
jo
jb
and
sahf
xchg
and
and
pop
mov
jl
cmp
pop
loope
add
rorl
int
add
int3
data16
daa
inc
cld
xor
pop
mov
jae
sbbl
jbe
xchg
fistpl
dec
jb
xchg
fadd
adc
and
jp
andl
enter
repz
data16
cmpsb
subb
mov
les
call
cmp
mov
mov
ret
orl
testb
data16
pusha
cmp
ficoml
out
and
add
push
dec
rclb
xchg
dec
loopne
inc
xor
add
cmp
cmp
or
add
popf
sub
push
bound
dec
add
sub
adc
push
cmp
adc
xchg
pop
addl
mov
xchg
jb
loope
inc
mov
stc
mov
xchg
push
dec
inc
addr16
dec
push
orb
mov
int3
js
adc
and
and
mov
ret
clc
pusha
sbb
mov
lods
lods
mov
xor
jg
add
dec
inc
mov
pushf
adc
jns
fcmovb
nop
aaa
jnp
adc
sub
xchg
jmp
dec
lea
inc
sub
lods
push
push
ret
test
ja
ret
or
dec
imul
sbb
rclb
movsl
add
lcall
inc
insb
iret
fsubrs
ficoms
jae
aaa
jmp
test
test
addr16
in
insb
fidivl
jg
mov
add
dec
add
mov
imul
movsb
mulb
andb
ret
adc
fistl
add
mov
and
not
add
xor
loop
fists
mov
and
rcrl
js
fwait
call
in
shlb
cli
dec
pop
pop
cmp
rorb
popa
mov
jmp
sub
es
orb
mov
loope
shlb
gs
or
es
xlat
or
sbb
call
mov
rcrl
movsl
xchg
mov
fisttpll
loopne
dec
add
andb
mov
mov
pop
icebp
out
movsb
out
add
lods
pop
jne
pop
xor
or
jne
dec
popa
bound
pop
scas
and
mov
movsl
call
adc
mov
sbb
push
enter
nop
adc
and
adc
adc
jo
xchg
mov
jne
mov
dec
dec
add
mov
and
cmp
sub
mov
dec
mov
add
bound
adc
ret
push
xor
pop
ret
xchg
js
aas
lret
inc
int3
mov
test
push
cmc
into
pop
sar
pop
test
add
jl
jg
lcall
push
mov
jl
or
add
add
ret
cmp
cld
out
xchg
add
jg
xchg
loop
sbb
in
cld
repz
xor
out
sbb
sbb
call
roll
mov
dec
push
in
or
push
test
mov
nop
stos
or
fs
add
icebp
pop
daa
fsubrl
push
mov
add
xchg
sti
nop
and
dec
add
xchg
adc
mov
bound
and
clc
mov
loopne
jnp
lcall
cwtl
mov
and
push
scas
bound
mov
cmp
jge
xlat
out
or
mov
cs
lods
cmpsb
movsl
mov
or
orl
ljmp
push
lret
xor
adc
pop
and
popa
push
sub
orb
mov
aam
push
sub
mov
inc
subb
pop
cmp
cmp
ret
or
mov
inc
push
pop
sbb
mov
sbb
or
or
inc
aam
nop
push
int3
nop
fisttpl
pop
add
xor
test
push
add
sub
es
pop
or
xchg
add
inc
sahf
push
pusha
add
lds
inc
pop
or
or
call
sub
cmc
aad
dec
inc
mov
cld
inc
jo
mov
xor
popa
pop
hlt
lcall
sbb
rorb
fwait
inc
aaa
loope
add
cmpsb
idivb
mov
aad
ja
iret
mov
ljmp
call
lret
es
mov
aam
and
lea
jp
sbb
dec
sub
in
add
mov
addl
mov
sbb
aam
and
cmp
pop
loope
les
xchg
push
mov
inc
adc
inc
xorl
sbb
add
and
cltd
adc
test
add
cmp
cmc
inc
xor
pusha
inc
enter
repz
cmpl
in
sbb
inc
aad
inc
repz
mov
rclb
icebp
pop
mov
mov
movsb
lods
jbe
test
mov
and
or
popa
das
inc
mov
xchg
sub
pop
push
xchg
pusha
mov
dec
jge
loope
add
dec
stos
call
lock
dec
pop
loopne
cmpsb
ljmp
pop
mov
cmp
push
mov
add
iret
inc
mov
add
jb
push
adc
rcr
movsl
or
rorb
push
xor
leave
push
jl
mov
arpl
cmp
push
shlb
cwtl
add
jne
or
adc
js
mov
xchg
xchg
push
jne
pushf
or
adc
call
sub
nop
push
call
call
or
ret
pusha
and
test
inc
cmp
mov
dec
mov
xchg
push
sub
cmp
inc
js
out
dec
lcall
outsl
bound
roll
xor
addb
and
shlb
loop
fs
mov
jne
dec
inc
aad
pop
pop
cmp
or
fwait
xor
lcall
push
pop
hlt
les
cmp
repz
test
insb
inc
or
lea
movl
dec
test
sbb
daa
negl
adc
xchg
daa
xchg
ljmp
dec
subb
or
or
mov
lcall
adcb
jo
mov
call
pop
pop
push
icebp
mov
rclb
into
or
rol
xor
add
stos
sarb
iret
mov
adc
sub
imul
insb
sub
or
add
jp
jae
jg
xor
add
test
jb
or
mov
mov
roll
xchg
dec
inc
sub
aaa
notb
mov
test
sbb
adc
or
adc
data16
scas
fs
lret
test
decb
sbb
leave
push
lds
les
test
jbe
dec
addr16
cli
lods
call
icebp
sbbb
pop
adc
or
inc
adc
mov
insb
cld
ds
idivl
dec
dec
je
pusha
je
sahf
inc
pusha
add
xor
clc
sub
add
sbb
test
push
xchg
add
adc
push
stos
addl
xchg
jne
cmp
mov
mov
sub
and
jp
sarb
adc
jne
popa
mov
pop
ret
std
scas
in
nop
pusha
dec
sub
inc
popa
daa
jp
xlat
aam
imul
testl
iret
or
sub
add
adc
in
scas
xor
mov
mov
clc
bound
ficompl
jns
jg
inc
or
dec
xchg
call
adc
add
xchg
push
mov
push
push
icebp
xchg
mov
pop
lahf
add
inc
pop
mov
dec
and
aam
inc
cmp
xlat
clc
add
out
add
hlt
xor
cmp
and
into
addb
mov
xchg
sub
addl
xor
int
xor
adc
in
mov
push
roll
jb
xchg
mov
mov
pop
ret
inc
mov
jae
and
sarl
xor
xor
push
add
out
mov
add
adc
out
js
push
inc
icebp
push
out
sbb
or
fwait
sub
andb
xchg
mov
enter
jne
cmp
and
jae
xor
add
test
call
inc
in
mov
sbb
or
inc
rorl
add
fwait
aam
out
rsqrtps
addb
mov
dec
scas
add
xchg
jmp
les
ljmp
lahf
insb
loope
fcoms
cmp
and
mov
addb
mov
orb
lock
sbb
mov
and
cltd
es
xchg
rcrl
mov
cltd
push
aas
aad
repz
int3
sahf
cmp
ds
jmp
loop
xchg
mov
mov
test
lock
in
enter
xor
mov
adc
pop
inc
daa
enter
pop
inc
out
or
mov
roll
fisttpl
adc
sub
es
add
mov
popa
stos
lea
inc
clc
idivl
nop
dec
shll
lcall
fbld
mov
sub
adc
push
mov
in
stos
cmp
lods
mov
push
sbb
in
jo
adc
in
std
or
lret
cli
ljmp
loope
or
jmp
cmp
jb
lods
add
enter
fsubr
mov
fimull
add
push
push
or
pusha
sbb
adc
jnp
ljmp
push
test
push
pop
popa
mov
push
jno
sbb
ret
outsb
jo
shr
stos
jl
in
xor
push
popa
test
inc
mov
pop
int3
inc
push
adc
pop
pop
xor
adc
xor
pop
mov
js
jp
mov
jg
xor
sub
ss
call
adc
test
pusha
xor
push
out
es
or
lea
idivl
add
mov
clc
enter
pop
insl
daa
or
mov
cmp
xchg
xchg
cmp
pusha
and
outsl
xchg
mov
imul
push
dec
add
mov
and
mov
sub
mov
mov
pop
inc
dec
jl
ljmp
je
add
inc
xor
out
es
mov
imul
repz
sbb
xchg
pop
mov
cmp
or
cmp
nop
dec
dec
sbb
movsl
shr
fsubs
xor
les
jae
outsb
xchg
loop
add
hlt
or
cld
in
xor
cmp
test
cmp
test
push
rcr
adc
into
dec
sbb
add
add
test
xchg
dec
jb
mov
test
push
ljmp
cli
lds
and
test
inc
and
mov
aam
dec
sahf
sbb
sbb
mov
jo
pusha
mov
incl
mov
jmp
pop
jle
adc
add
push
adc
adc
mulb
push
and
les
mov
test
popf
jae
shlb
data16
xor
je
andl
push
inc
xor
xor
fimuls
scas
stos
jnp
popa
push
add
mov
mov
adc
sbb
push
mov
push
clc
mov
ljmp
hlt
add
dec
push
stos
test
shrb
ret
add
or
push
rolb
int3
int3
push
push
sbb
fsts
push
inc
mov
xor
xor
push
xor
sbb
xchg
mov
lods
bswap
cmovbe
and
sub
data16
bound
mov
leave
js
add
clc
bswap
cmp
lods
mov
mov
sarb
leave
adc
add
xchg
rcl
adc
rcr
rcr
ja
cmp
add
popa
add
push
or
inc
xor
dec
and
cmp
out
pusha
mov
mov
insb
test
das
add
dec
hlt
int3
out
or
inc
xor
adc
and
add
cvtps2pi
in
sbb
lods
adc
mov
add
jle
or
and
dec
mov
dec
lock
rcll
loope
repnz
fisttpll
or
icebp
or
sub
insl
addr16
inc
add
daa
test
outsb
add
and
sub
inc
shrl
or
fstp
les
add
or
mov
ja
das
push
and
add
lea
pop
aam
cmpsl
mov
push
cmp
xchg
cmp
dec
fwait
hlt
or
xchg
pop
xor
jmp
sbb
repnz
or
shll
stos
call
and
or
add
sub
push
push
adc
xchg
loopne
ret
sub
clc
pusha
mov
std
xor
mov
int3
sbb
addr16
sub
je
push
sbb
or
insl
decl
or
test
jl
not
inc
cwtl
mov
stos
cmpsb
cmp
jg
das
inc
add
aaa
xor
jl
mov
xor
xor
xchg
dec
fsubr
mov
mov
sbb
lea
push
cmc
out
or
cmpsl
adc
je
jg
inc
ja
add
xor
inc
sbb
add
cwtl
or
jmp
test
xor
mov
sub
rcll
inc
add
xor
leave
mov
cmc
pop
pop
or
jb
pop
inc
add
fcmovb
ret
jecxz
rolb
outsb
out
sbb
dec
mov
adc
aas
sbb
mov
xchg
int
sbb
clc
jnp
push
aam
add
add
add
or
mov
adc
pushf
les
sbb
mov
rorb
data16
hlt
sub
mov
inc
ffree
push
inc
mov
inc
xor
leave
jno
imul
jg
bnd
nop
pop
xchg
stc
add
and
call
cmc
cld
or
dec
sbb
pop
sub
cwtl
xlat
adc
cmp
jb
adc
dec
iret
cmova
outsl
adc
inc
inc
add
pop
mov
pop
cltd
fistps
add
inc
rcrl
sub
adc
ljmp
sti
inc
push
addb
mov
mov
ljmp
pop
and
mov
mov
add
decb
push
sbb
cwtl
inc
adc
enter
sub
add
cmp
lcall
mov
ja
call
mov
xor
rol
dec
sub
push
in
es
xchg
lcall
xor
je
push
or
xchg
sbb
rsm
ss
or
pop
in
inc
mov
sub
add
in
mov
push
loope
cmp
in
pusha
xchg
and
and
jge
mov
mov
pop
je
inc
or
ret
pop
and
mov
out
add
loope
dec
roll
aaa
test
imul
add
stos
dec
lret
pop
outsl
rcrl
sub
pop
js
loop
andb
cmp
lods
jl
jo
mov
test
and
push
ret
into
jmp
adc
movsb
pusha
insl
pop
lcall
in
xchg
cmp
test
movl
sub
loope
dec
and
cmp
dec
aam
pop
lock
cld
jbe
sub
sar
stos
mov
in
add
and
js
inc
adc
inc
stos
wrmsr
fwait
inc
xor
inc
sbb
aam
fs
pop
push
dec
add
xchg
add
stos
inc
mov
notb
sbb
stos
adc
arpl
ror
sub
mov
popa
inc
push
sbb
dec
push
mov
bound
or
pop
rorb
inc
sub
lds
stos
fidivrs
sub
mov
cmc
rorl
xchg
jecxz
fbstp
cmovle
mov
and
js
sbb
int3
inc
xor
mov
clc
push
arpl
dec
add
add
andb
mov
add
sbb
sub
aam
pop
aam
lds
out
and
movsl
data16
scas
fxch
add
xchg
push
and
push
mov
into
pushf
push
cli
pop
mov
cld
test
test
sub
sub
xchg
mov
push
fs
out
jge
mov
push
mov
dec
loop
bound
les
js
jo
dec
sbb
int3
aam
pop
mov
aaa
out
stos
hlt
mov
or
mov
fiaddl
iret
mov
stc
adc
popf
int
mov
fwait
xchg
ja
dec
and
adc
inc
sub
in
mov
mov
push
mov
add
push
test
imul
mov
jns
int
int3
mov
je
pop
stos
ret
int3
add
fnstenv
dec
shll
inc
mov
sub
and
xor
adc
xor
pop
add
les
sbb
int3
lds
and
clc
xchg
xchg
ficomps
xchg
bound
jo
add
lea
cltd
roll
es
sub
ss
xor
adc
sub
mov
xchg
pop
or
pop
and
lds
adc
xchg
fmulp
push
mov
mov
mov
cwtl
icebp
sub
sbb
int
mov
and
ljmp
mull
xchg
filds
dec
aas
jne
cwtl
cmp
lods
ret
adc
dec
inc
mov
aaa
roll
adc
add
sub
mov
nop
jle
xor
xor
mov
int
dec
or
pusha
cmpsl
adc
inc
das
lahf
and
jne
or
xchg
arpl
sbb
jo
dec
xchg
lock
xor
and
jg
dec
push
out
xchg
pop
int3
cmc
xor
loop
pusha
shr
popf
adc
ret
jbe
jmp
adc
push
mov
setb
jb
and
ljmp
lock
out
int3
fiaddl
rolb
adc
fildll
subl
jne
rorl
mov
inc
aad
or
push
sub
rorb
sbb
adc
push
or
mov
inc
push
mov
call
push
adcl
bound
loopne
mov
inc
xor
xor
movsl
aas
sub
fadds
fisubs
dec
sbb
sti
inc
push
dec
mov
inc
or
test
test
push
xchg
sbb
push
jno
les
mov
ja
daa
pop
sub
mov
test
push
and
dec
rorl
stos
dec
mov
iret
inc
leave
mov
xchg
subb
xor
mov
cmpsl
push
or
push
xor
addr16
into
fldenv
sbb
orl
pop
sarl
cltd
adc
dec
sbb
push
push
popf
mov
lock
cli
xor
inc
mov
add
pop
or
outsl
fbstp
out
xor
adc
pop
ds
test
pop
ficoms
js
lock
cmp
ds
sbb
insb
lea
push
and
inc
loope
pop
push
sbb
popa
es
cmpsl
cmp
mov
jae
pop
add
popa
and
push
adc
inc
orb
aam
add
jo
orb
fiadds
inc
sbb
nop
lds
sub
dec
inc
out
adc
lret
mov
out
int
sub
mov
fimuls
sbb
cmp
mov
sbb
push
inc
lea
icebp
loop
or
daa
mulb
cmp
and
mov
test
sbb
outsl
testb
push
cmp
cli
fnstsw
divl
sub
adc
fwait
inc
inc
add
add
inc
sub
push
negb
sahf
add
aaa
xor
dec
out
das
cltd
fisubrs
cmpsb
xchg
stos
adc
insl
fstpl
mov
cld
in
mov
mov
fwait
add
insl
dec
jno
pusha
fisttpl
dec
pop
and
call
inc
mov
push
or
jecxz
divb
pusha
add
mov
jl
or
push
xchg
inc
in
rcrb
mov
adcl
aaa
mov
xor
aam
sbb
arpl
es
cs
fisubl
sbb
mov
or
test
sbbb
jae
adc
test
adc
fisttps
push
mov
ret
adc
fists
sub
push
adc
mov
push
aam
add
lock
aas
xchg
sub
inc
jmp
add
and
sti
mov
dec
pop
in
jb
pusha
lods
sti
xor
and
adc
push
popf
mov
mov
xchg
dec
or
mov
adc
iret
jge
and
sbb
pop
sti
add
enter
sti
inc
xor
pop
pop
push
jle
aad
bound
sbb
cli
mov
xchg
arpl
adc
rorl
out
pop
sub
lds
pop
adc
xchg
and
xor
rclb
dec
push
mov
mov
es
pop
sub
adc
or
into
xchg
mov
mov
pusha
push
fwait
mov
hlt
lds
incb
adc
push
pop
adc
cltd
xor
sbb
push
insl
push
jno
cmc
xchg
daa
rolb
icebp
das
test
adcb
je
mov
adc
mov
fistpl
out
stos
sbb
or
in
and
es
or
sbbb
sub
les
lds
xor
xor
lock
mov
pop
insb
or
sbb
xchg
sub
movl
add
pop
sahf
icebp
sbb
loope
sbb
xor
inc
daa
sbb
jge
fwait
dec
sub
adc
add
js
fstpl
sub
and
add
out
xchg
inc
int3
mov
push
sbb
adc
insl
pushf
push
rolb
sub
es
jmp
test
adc
sub
and
add
test
lock
loope
xor
in
mov
aam
cwtl
ret
out
mov
sub
adc
imul
and
jb
cmp
inc
xor
cld
aaa
push
jmp
aam
push
xchg
push
in
jp
dec
inc
clc
js
arpl
negb
ljmp
pop
add
dec
inc
call
or
add
inc
in
fsts
sub
push
cmp
icebp
adc
adc
dec
push
jb
inc
add
mov
addb
and
lods
push
jecxz
popl
das
fidivrs
hlt
ljmp
in
xchg
movsl
movl
into
adc
sub
sbb
fdivs
cld
sub
pop
jge
sub
leave
das
add
or
das
or
call
dec
scas
int
push
hlt
jp
add
xchg
out
cld
loope
adc
add
fcoms
sbb
inc
push
test
sti
mov
lret
fwait
rcrb
add
mov
cli
mov
aas
dec
stos
call
rorl
pop
rolb
mov
or
push
aad
push
xor
mov
repnz
inc
test
test
xor
outsl
aaa
push
loopne
loopne
inc
xor
add
lcall
shll
mov
das
addl
adc
adc
mov
fidivs
es
push
adc
mov
outsl
and
dec
cltd
lret
mov
inc
int3
adc
fwait
lret
das
and
inc
fsubl
movsb
or
adc
dec
pop
cmp
push
jne
scas
jge
add
dec
loope
aam
mov
cmp
adc
xchg
and
test
fbld
jb
xchg
cmp
sub
hlt
push
sub
lret
in
shl
mov
and
inc
test
xchg
mov
or
int
cmc
mov
push
in
pop
and
js
in
push
dec
mov
pop
dec
ret
imul
inc
adc
insb
aas
clc
clc
fldl
subl
in
push
rorb
adc
xchg
cwtl
nop
or
insl
or
add
imul
lea
int3
cwtl
inc
cli
inc
jmp
or
jns
dec
cmp
fwait
mov
push
push
mov
dec
sbb
cld
cmpsl
pop
cmp
add
add
rolb
lock
inc
xor
cli
adc
adcb
add
xchg
sbb
mov
in
cli
and
mov
or
lods
push
pop
test
and
lock
xchg
mov
ret
daa
cmp
push
and
jbe
xchg
outsb
and
mov
dec
stos
enter
mov
invd
cmp
repnz
dec
or
add
sub
xchg
call
xchg
sarl
push
xor
push
adc
dec
bound
stos
inc
push
ljmp
add
nop
stos
aas
clc
pop
rolb
xchg
inc
sub
sub
adc
xor
sbb
aad
pop
inc
xlat
mov
or
cmp
fdivl
daa
loope
mov
pop
inc
in
adc
mov
test
jmp
add
jns
call
mov
or
jnp
stos
pop
adc
push
jne
stos
dec
movb
and
cmp
das
mov
data16
sbb
dec
adc
lods
andl
loope
call
inc
pop
mov
bound
scas
jbe
sub
cmp
xor
lock
xchg
push
in
xchg
adc
fmulp
out
das
call
addb
fcmovnu
inc
jecxz
add
cmp
ficompl
mov
adc
popf
sbb
mov
mov
aaa
mov
inc
pusha
aam
or
or
dec
push
jmp
or
inc
pop
xchg
and
insl
add
ror
repnz
addb
add
lods
outsl
push
mov
in
roll
inc
sub
or
testl
out
sub
inc
inc
jne
mov
lock
push
mov
inc
dec
mov
daa
ret
mov
or
push
push
dec
stos
outsb
mov
mov
addb
inc
add
add
xchg
mov
or
sahf
notb
loop
popa
shlb
mov
adc
movsb
mov
dec
aam
or
rolb
push
sub
fwait
dec
imul
or
mov
and
or
or
pop
test
and
push
inc
mov
loope
dec
adc
addr16
mov
adcl
fucomi
or
or
ret
clc
in
test
lret
repz
rorb
mov
rcrb
insl
push
dec
dec
sub
adc
add
xchg
lods
mov
push
and
cmc
and
and
inc
addl
cmc
and
aam
adc
or
out
das
fbld
vmovsd
adc
jmp
jne
jns
dec
sub
xor
stos
js
jns
fdivl
add
add
rcl
jp
in
inc
adc
adc
sbb
addb
xchg
shll
imul
push
mov
or
sub
add
ja
mov
push
xor
pusha
aam
mov
ficompl
loop
add
and
ja
add
adc
add
jmp
pop
add
fmuls
inc
inc
push
xchg
scas
push
push
aad
icebp
ds
rorb
mov
scas
jb
mov
pop
fnstcw
xchg
push
pop
sbb
mov
and
mov
mov
clc
xor
push
xor
addb
inc
jb
test
pop
fmuls
push
inc
sbb
push
iret
xchg
fdecstp
add
movsl
popf
push
sub
movsb
test
or
addb
fadds
mov
adc
scas
push
add
cmpl
adc
sub
sbb
xchg
movsl
mov
adc
jo
or
sub
inc
mov
ljmp
in
inc
daa
jecxz
bound
lcall
push
push
das
adc
subl
cwtl
sahf
pop
cwtl
or
aam
pop
xlat
pop
inc
xor
enter
sub
push
cmpsb
jns
fiaddl
daa
icebp
stos
cmp
pop
insb
push
lock
mov
pop
js,pn
adc
inc
je
xchg
cmp
mov
pusha
sbbb
test
xchg
lcall
xor
pushf
add
inc
shrl
pop
add
subl
pop
pop
mov
jb
scas
adc
dec
sbbb
adc
jg
sub
and
adc
jmp
lods
sbb
xchg
test
dec
jle
sti
fisubl
ret
or
xchg
inc
xchg
add
pusha
cmp
sbb
dec
add
push
ds
fdivrs
mulb
fsubrs
rcll
cmp
jae
loop
xor
in
or
adc
dec
jecxz
cmp
clc
inc
pop
out
add
or
clc
push
in
xor
mov
cmpb
lahf
es
add
xor
or
cmp
pop
repz
es
cmp
xor
mov
gs
and
add
xchg
orb
mov
js
cli
and
adc
cmp
sub
adc
cmp
xor
fcom
out
cmpsl
lods
test
stc
mov
sub
fndisi(8087
fadds
sbb
mov
cmp
rorb
jle
inc
xor
fstpl
js
mov
lcall
sbb
push
loope
sti
jne
fsub
sbb
xchg
fisttpll
sar
xor
sarl
or
popf
fcompl
jl
inc
cmp
mov
xchg
xchg
pop
and
add
jmp
sbb
xor
adc
pop
sbb
push
out
adc
or
sbb
sub
les
aam
push
xchg
jl
loopne
and
popf
jg
insl
push
dec
sbb
movsl
mov
sub
adc
ror
push
inc
in
loopne
cs
stos
adc
in
inc
add
dec
lods
push
sbb
movsb
mov
cmp
sahf
je
pusha
or
roll
sbb
sub
ds
mov
or
shll
mov
js
inc
out
add
xor
and
sbb
rorb
ljmp
mov
cmpsb
aas
mov
cwtl
or
outsl
in
rorl
jne
fdivrs
rclb
icebp
mov
repnz
pop
in
or
movb
mov
jp
in
pop
sub
jg
sub
inc
inc
fdivrl
test
dec
fmull
mov
sbb
orb
push
lods
loop
aas
js
pop
adc
cmp
test
pop
push
xor
incl
mov
xor
pop
add
cs
push
pop
test
mov
adc
or
int3
jo
or
cwtl
inc
mov
and
inc
adc
xchg
addb
js
popa
adc
pusha
cwtl
inc
mov
push
mov
aam
test
pop
cwtl
and
sub
mov
xor
aad
sub
mov
push
ja
pop
push
lods
test
cmp
mov
rol
mov
scas
arpl
and
loope
add
shl
test
mov
daa
jb
inc
adc
cli
test
roll
inc
es
lret
data16
in
out
ret
ret
loope
inc
add
or
adc
pop
adc
out
lds
adc
dec
adc
sub
lea
inc
or
mov
test
rcrl
xor
inc
aad
inc
in
xor
sbb
cmp
ja
xorl
cmp
sub
sub
es
filds
push
inc
xor
dec
roll
xorw
cld
mov
repnz
add
adc
nop
adc
cmp
mov
sbb
push
in
test
sbb
or
gs
xchg
fldenv
mov
inc
addb
adc
div
js
into
sub
sbb
mov
lea
push
pop
loope
test
aam
rorl
cmp
adc
jnp
lret
sub
add
mov
inc
and
sbb
pop
daa
inc
or
pushf
js
sub
mov
and
mov
xchg
div
loop
inc
sbb
add
xor
add
icebp
cmp
roll
add
add
cmpsb
and
icebp
sarl
in
idivl
pop
lock
adc
dec
xor
cli
stos
and
mov
xchg
inc
xchg
xchg
pop
filds
lret
decl
pop
jne
clc
out
sti
fnsetpm(287
ror
push
mov
loop
neg
cmp
in
add
ret
std
dec
out
and
in
fcomps
pop
sub
hlt
push
mov
mov
ret
popf
mov
je
inc
cltd
jmp
adc
sarl
add
push
sub
out
stos
jecxz
ror
jmp
sbb
adc
xor
loop
dec
fnstcw
hlt
jbe
sti
push
sub
sbb
bnd
adc
or
outsb
push
pop
xorl
inc
clc
sbb
or
imul
outsl
inc
mov
test
pop
roll
loope
jge
pop
lds
jns
push
jno
lret
push
loope
add
roll
sub
icebp
dec
and
roll
rorl
inc
or
jne
xor
adc
push
repz
pop
paddsb
nop
or
jmp
jp
iret
mov
push
nop
stos
pop
adc
adc
pushf
outsb
js
out
add
popf
cmp
jmp
rclb
and
lock
jmp
xchg
repz
or
push
adc
insl
inc
add
mov
lock
push
cmp
mov
lahf
add
test
adc
adc
adc
pop
fldenv
mov
icebp
jp
cwtl
jg
pop
insl
std
mov
and
leave
jns
lahf
sub
into
repnz
fwait
in
aaa
mov
js
and
xchg
mov
mov
dec
adc
mov
sub
or
cmpsl
jp
int3
and
popa
add
sub
fs
inc
jle
aam
lret
mov
cmpsl
mov
shrl
movsb
mov
push
jl
adc
or
jp
inc
or
sbb
dec
dec
clc
mov
rorb
xchg
inc
and
cmpsb
mov
fsubrl
mov
scas
add
sub
xchg
shll
push
roll
test
jne
cwtl
mov
add
jl
jnp
pop
loope
sbb
and
jmp
pop
fwait
stos
dec
sbb
inc
and
add
sbb
lret
xchg
dec
test
fsubs
shlb
icebp
dec
roll
jl
js
mov
aad
push
mov
es
inc
or
test
sub
sbb
loop
xchg
loop
add
or
loop
jo
add
push
cwtl
pop
mov
mov
or
cmc
int
fmulp
push
jno
adc
mov
cwtl
add
push
sub
dec
dec
scas
shrb
les
call
scas
addl
xor
decl
hlt
out
pop
aas
sbb
xor
sub
xchg
and
mov
dec
nop
rorb
outsl
out
inc
inc
fwait
inc
xchg
dec
lea
cmp
and
in
mov
adc
add
imul
cmpsl
push
push
xchg
loopne
fiadds
andb
int
add
inc
je
sub
mov
pop
cmp
enter
push
andb
insb
call
repz
jle
inc
or
clc
lcall
es
sub
arpl
outsb
mov
int
mov
jmp
mov
mov
push
fldl
adc
inc
fwait
test
adc
popf
pop
xchg
js
jl
loopne
loop
xor
dec
lock
repnz
push
cltd
adc
addb
push
int3
sub
loop
push
mov
add
sbb
adc
sbb
cmp
xchg
xchg
inc
cmc
test
pusha
jno
inc
adc
cmc
inc
mov
push
cltd
cs
pop
add
stos
mov
mov
push
mov
aam
lock
adc
xorps
popa
test
ds
mov
lcall
hlt
xor
shlb
and
loop
push
inc
push
sub
xchg
rol
addb
addb
adc
add
cmp
cmp
push
and
aas
mov
popa
pop
push
cld
cmp
sub
mov
stc
inc
sub
push
mov
rolb
fwait
js
sbb
jl
add
or
add
add
inc
loope
int
add
ds
mov
push
mov
iret
add
lret
ljmp
pop
movsb
and
jge
mov
sub
mov
mov
pop
icebp
cmpsb
bound
ret
enter
push
inc
xchg
loope
test
pop
rorb
dec
and
mov
or
push
cmp
enter
adc
adc
aam
mov
jne
push
adc
mov
jmp
insl
inc
sbb
cmp
es
repz
fists
and
nop
add
adc
aam
pop
inc
test
into
lret
adc
inc
loope
adc
xor
dec
cltd
push
call
pop
adc
fisttpll
into
jp
decl
add
mov
xor
dec
xchg
pop
adc
dec
jecxz
std
pop
decb
das
xor
bswap
addb
sbb
les
pavgb
test
and
dec
inc
fadds
xchg
or
popa
in
sub
cmp
pusha
push
add
sub
cmp
stos
push
and
cwtl
shll
jb
push
iret
mov
pop
inc
jp
rcrl
fistpl
jge
inc
jmp
inc
bound
pop
push
xchg
add
xchg
vpaddd
clc
sub
test
add
sbb
lock
pop
pop
cmp
int3
ljmp
adcb
push
icebp
add
adc
pop
loopne
and
pushf
or
push
ret
sub
loopne
mov
inc
sbb
add
loope
add
cmp
jp
adc
or
add
rcl
in
mov
je
sbb
lds
fwait
adc
fsubrl
shlb
dec
ja
inc
mov
ss
gs
add
cmp
and
adc
xchg
inc
loopne
cwtl
push
fs
fmul
and
push
xchg
mov
mov
push
repz
xchg
mov
add
sbb
and
es
and
add
cli
xor
loop
pushf
sbb
roll
mov
or
insl
aaa
sbb
jle
les
mov
pop
add
sbb
shll
pop
xchg
adc
aad
rolb
add
cmc
insb
cli
aas
xor
ficoms
cli
sub
or
inc
sub
stos
bound
rorb
es
mov
ja
sub
cld
pop
sarl
mov
or
les
dec
jne
cmp
sbb
enter
outsl
sbb
and
mov
xor
mov
nop
and
sarl
add
shlb
or
mov
gs
loop
jae
push
mov
arpl
push
pop
push
cld
into
add
sub
xor
dec
add
inc
inc
fstp
fwait
popf
ljmp
cli
test
cld
xor
mov
decl
hlt
sbb
cmp
or
cmp
rolb
mov
repnz
adc
clc
call
or
dec
and
rolb
lods
cld
or
add
les
aad
fs
ret
sub
cmp
sub
push
call
mov
sbb
xchg
cmp
pusha
mov
push
adc
bound
xchg
cmp
sub
gs
sub
mov
xor
inc
ret
add
cmpsb
cli
and
and
jbe
xor
loop
mov
insl
enter
sub
clc
fsubl
add
dec
enter
cmp
sub
mov
mov
push
xor
xor
mov
push
in
mov
in
clc
or
loop
mov
push
ror
mov
and
pop
add
inc
inc
mov
xor
mov
cmp
jno
push
rorb
mov
leave
cmp
inc
iret
adc
sub
mov
push
movsl
pop
and
mov
bound
fldl2t
fstpt
imul
test
pop
mov
adc
dec
or
jg
jnp
mov
shrb
and
push
not
ficoms
ss
out
xor
icebp
shrb
dec
push
add
adc
lcall
lods
js
cltd
es
and
fsubrp
xor
shlb
imul
roll
xor
icebp
das
inc
add
addb
add
push
or
push
in
xlat
arpl
mov
add
sbbl
jl
cmpsl
shrb
dec
inc
adc
jl
or
sbb
pop
jecxz
mov
gs
fimull
arpl
movsl
cmp
jne
inc
stos
inc
icebp
pop
add
sbb
pop
adc
mov
fbstp
add
xlat
je
sahf
loope
cs
rcrb
and
fnstenv
call
jne
inc
orb
and
leave
mov
in
push
pop
jle
imul
inc
xor
and
data16
mov
cmpl
xchg
pop
shr
add
loope
xor
dec
les
cmp
adc
push
shrb
add
imul
mov
xchg
push
or
test
aaa
jmp
lds
mov
mov
sub
rcl
stos
jl
mov
adc
mov
jecxz
add
or
out
adc
inc
insl
inc
adc
and
mov
and
adcb
or
or
or
cmpsb
adc
divl
or
cs
int
cwtl
adc
jle
mov
xor
ljmp
xacquire
incl
mov
lea
push
push
lahf
test
mov
enter
cld
adc
loopne
mov
dec
pop
je
and
mov
repnz
inc
xchg
in
mov
mov
dec
out
push
ficoml
sbb
popa
sti
les
inc
ja
gs
xchg
lods
push
adc
xchg
mov
test
sub
enter
mov
paddsb
aad
push
mov
rol
adc
or
lret
cld
inc
in
dec
mov
rorl
mov
repnz
xchg
pop
sbb
arpl
sbb
sbb
ret
cmp
push
mov
sarb
pusha
adc
sub
movsl
loopne
inc
cld
sub
movsl
cmp
inc
sar
loopne
adc
add
int3
xorb
sub
mov
push
shrb
mov
dec
jge,pn
sti
insb
hlt
mov
cmp
cmpsl
dec
je
wrmsr
mov
hlt
add
jnp
adc
cmp
rorb
xor
mov
les
popf
mov
out
jns
fiadds
push
mov
dec
mov
mov
lods
inc
nop
xor
fadds
adc
add
cmpb
dec
push
jge
out
insb
cli
push
or
push
bound
and
add
dec
aad
bnd
add
add
es
jg
dec
out
ja
mov
add
test
test
fnstsw
or
and
mov
movsb
or
jo
or
sbb
mov
push
cmp
mov
imul
lahf
mov
cmp
das
pop
popf
lcall
xor
dec
add
inc
cmp
sub
mov
xchg
xchg
pop
push
adc
leave
dec
or
outsl
lea
add
adc
sbb
es
test
mov
enter
jno
jo
mov
loop
xor
add
and
adc
xor
addr16
jge
adc
test
in
movsb
sbb
filds
popa
pop
hlt
cmpsb
pop
push
imul
out
jecxz
cld
popa
or
mov
or
fs
lret
cli
inc
add
mov
push
andl
aad
sahf
add
sbb
dec
and
aas
cmpsl
jecxz
aaa
or
jo
and
cmc
sbb
mov
add
push
imul
enter
bound
adc
in
xor
and
addb
or
cmpl
int
add
add
shrb
and
in
jnp
add
cmp
add
aad
scas
insb
add
add
stos
or
cwtl
and
addl
mov
or
or
and
add
out
pop
adc
mov
or
mov
push
jns
adc
or
sub
hlt
sbb
jmp
mov
mov
pusha
push
imul
inc
into
loope
mov
xor
mov
adc
xor
sbb
pusha
inc
cld
dec
into
and
xor
cmp
arpl
je
xlat
sti
hlt
stc
rcll
gs
dec
fsubl
rcrl
jo
ret
mov
hlt
xchg
test
or
and
and
fsts
add
roll
divb
mov
mov
outsb
sbb
or
xor
nop
sbb
xchg
push
mov
into
sub
xor
popf
cmp
clc
push
mov
testb
dec
es
xor
mov
inc
icebp
out
shll
xor
push
lods
enter
push
mov
movsl
inc
test
dec
inc
dec
dec
je
insl
fidivl
inc
inc
aas
mov
aam
cmp
testl
inc
dec
daa
popf
mov
push
rorl
lds
add
mov
bound
fwait
dec
aad
lcall
pusha
cmpsl
shr
or
enter
add
and
movsb
addr16
sbb
dec
xchg
mov
loopne
scas
or
lret
aaa
icebp
mov
and
or
add
sahf
leave
and
hlt
sub
add
outsb
loope
shrb
imul
mov
mov
popa
mov
lret
sbb
pop
xor
addr16
scas
pop
pop
js
mov
imul
mov
loop
das
daa
lds
adc
xchg
ret
negl
loope
adc
clc
push
push
dec
mov
loopne
push
adc
js
and
pop
or
xor
mov
and
push
adc
das
insl
dec
push
gs
push
jbe
imul
pusha
shrb
and
mov
sarl
lcall
xor
cli
loope
push
loope
jge
sub
les
sti
in
push
inc
lea
jl
lock
mov
ret
jae
push
sbb
sub
outsb
mov
cwtl
add
lock
and
mov
sub
popf
sub
movsl
pusha
in
inc
in
adc
jbe
xor
sti
aad
into
sub
cltd
call
and
add
data16
sub
hlt
mov
push
das
ret
push
mov
cmp
push
jp
jge
fcoms
lahf
sarb
mov
xor
sub
jo
orb
orl
mov
dec
add
mov
ds
add
rorb
and
or
imulb
mov
arpl
xor
mov
push
push
jo
sbb
dec
cli
das
push
mull
or
xor
mov
cmp
add
decl
call
leave
pusha
bound
xchg
in
in
loopne
adc
data16
pop
mov
mov
add
cli
sbb
and
dec
mov
jge
add
pop
pop
enter
hlt
xchg
shrl
push
xchg
mov
lods
push
std
adc
loope
sbb
xor
loopne
out
lahf
mov
sbb
adc
add
pop
addr16
lods
xchg
adc
and
orb
sbb
pop
mov
sbb
in
inc
add
cmp
add
cltd
dec
pushf
mov
ljmp
add
sbb
xor
mov
adc
dec
fstpl
push
and
into
adc
xabort
pushf
inc
popf
hlt
inc
into
cmp
aam
fnstcw
jge
sub
xchg
or
iret
or
inc
out
or
mov
outsl
fimull
imul
inc
or
cwtl
mov
and
inc
ret
push
sbb
shll
imul
orb
movq
bound
lret
stos
outsl
ret
loope
mov
add
andb
cltd
call
mov
dec
xchg
lea
jmp
or
aaa
call
adc
pop
adc
push
adc
cmpl
movsb
push
xchg
adc
sti
dec
out
xor
jmp
test
adc
or
xlat
push
and
clc
arpl
test
movsl
fldcw
ds
cwtl
push
icebp
add
cmpsb
into
xchg
cmp
add
pop
xor
das
pop
test
jo
outsl
outsl
inc
mov
sbb
sub
pop
bound
lods
aaa
dec
add
push
sarl
sbb
or
dec
andl
inc
cwtl
xchg
enter
add
ljmp
adc
call
adc
fcmovb
mov
jbe
je
jne
cmp
insl
xchg
ret
inc
adc
mov
pop
jl
in
cmp
js
and
xchg
push
jno
adc
test
and
jae
adc
sub
mov
push
inc
jbe
adc
in
adc
sbb
hlt
jne
shll
add
dec
das
sahf
adc
jge
pop
jmp
push
xor
add
stos
push
dec
mov
sub
or
in
add
mov
ret
adc
mov
movsl
loop
xchg
add
mov
stc
or
jb
cmp
lret
dec
mov
cmp
bound
cmovg
addl
jb
iret
aas
inc
pop
les
insb
push
inc
fisttpll
jb
and
out
add
mov
lds
stos
xor
fidivl
das
ret
imul
mov
push
mov
out
or
ljmp
and
sub
sub
lock
add
push
adc
divb
stos
pop
mov
mov
cmp
fdivs
pop
incb
movsl
je
fsubrl
pop
xor
sti
mov
loope
mov
es
rcrb
mov
cmp
iret
mov
or
or
daa
pop
insl
insb
clc
adc
popf
insb
outsl
and
or
or
jp
clc
push
mov
stc
and
and
xchg
and
inc
xor
jp,pt
cmp
hlt
test
adc
cmp
sbb
clc
aad
mov
stos
fprem
mov
test
jo
adc
push
push
mov
and
sub
pusha
sbb
xorl
fiadds
sahf
cwtl
dec
pop
mov
inc
jge
sub
pop
mov
test
inc
adc
fadds
xchg
sub
pusha
mov
add
sub
leave
push
jne
add
mov
ret
test
xchg
mov
or
fstpl
sti
std
cmp
cmp
mov
or
xlat
and
subl
ss
roll
xchg
andb
js
cmp
jo
mov
push
adc
xcrypt-cfb
cmpsl
daa
bound
sbb
out
mov
cli
hlt
cmc
pop
in
gs
jp
aam
bound
pop
roll
stos
push
imulb
ja
cmpsb
sub
ret
push
mov
xor
inc
test
ljmp
pusha
in
jle
xchg
out
xchg
add
adc
stos
das
bound
divb
js
inc
sbb
test
xor
rorb
sub
mov
push
push
aas
inc
xor
shll
mov
jmp
inc
addb
add
push
cmp
call
push
mov
cmp
mov
lea
mov
mov
scas
mov
mov
xchg
or
sub
dec
add
or
pop
push
nop
jecxz
sbb
lds
psubsb
push
add
pop
xor
ret
add
ret
lret
pop
cmp
xor
in
pusha
popa
add
jmp
pop
unpckhps
and
aad
out
mov
cwtl
ja
testl
adc
push
xorb
push
dec
xor
test
ja
fsubl
xchg
push
jmp
xchg
inc
push
lock
sbb
ret
jmp
mov
sbb
sahf
jae
pop
int3
xchg
add
dec
mov
icebp
mov
int
cmpsl
loope
sbb
cld
popf
and
inc
roll
inc
dec
imul
movsb
and
out
or
cmp
loop
lods
clc
loopne
scas
pop
adc
jmp
lods
and
and
mov
sbb
add
push
std
out
lahf
in
scas
xlat
inc
add
add
shl
std
add
or
pushl
mov
push
fnstcw
push
cmp
adc
fsts
inc
adc
test
imulb
mov
mov
int
shrb
ss
iret
or
dec
in
mov
rorl
sahf
rcrl
jbe
test
addl
mov
rcrl
psrld
aam
test
dec
ret
inc
mov
clc
mov
xor
or
inc
je
dec
inc
sub
clc
push
repnz
lahf
imul
pop
inc
js
sbbb
jbe
dec
stos
aam
insl
enter
cwtl
cmp
jbe
jp
or
adc
push
hlt
pop
xlat
dec
mov
inc
jo
pop
mov
mov
jo
rolb
xor
push
or
inc
shrl
xor
stc
in
jae
push
xor
jg
mov
imul
xor
call
roll
mov
add
call
int
cmp
jmp
pop
jp
xchg
sahf
jo
sbb
jbe
mov
and
lods
in
adc
stc
inc
push
pop
mov
pop
hlt
sub
cmpsl
mov
jg
movsb
inc
test
mov
push
inc
cs
inc
add
stos
je
sbb
iret
xor
loope
sub
in
or
dec
push
daa
scas
aam
es
inc
mov
xor
mov
test
xor
adc
sub
adc
dec
push
sub
rclb
andl
jl
mov
cmp
pop
push
roll
mov
jmp
fwait
adc
enter
sbb
addb
das
lea
notl
subl
inc
loope
call
lds
out
aam
movsb
sahf
mov
push
popf
movsb
pop
inc
out
jmp
add
js
add
js
adc
add
scas
add
fmuls
out
cmp
movsb
xchg
nop
adc
jnp
cmp
sbb
in
test
popa
adc
adcb
add
pusha
inc
adc
loopne
popf
cmp
aaa
dec
adc
adc
and
cmp
mov
clc
jmp
add
push
cmp
mov
mov
loope
lret
mov
addl
adc
push
ljmp
inc
mov
dec
orb
inc
and
mov
mov
pop
fisttpl
test
je
inc
shlb
rclb
loope
leave
lock
data16
outsl
mov
pop
mov
test
int
push
pop
add
push
cmp
pop
icebp
sub
add
ffree
jmp
and
and
mov
adc
out
xor
fidivrl
adc
dec
fsts
mov
cmp
cwtl
pop
mov
in
push
mov
add
and
dec
add
xor
aam
jg
sub
cmc
jg
cmp
pop
sbb
call
xor
cld
push
sbb
pop
pop
out
xor
fcomp
mov
lret
ds
push
add
ret
sbb
subl
or
lods
clc
cmp
hlt
jne
addr16
sbb
add
push
xor
clc
xchg
fwait
inc
popa
add
add
rolb
xor
je
test
xor
cpuid
addr16
mov
and
mov
add
out
sahf
mov
jne
fimuls
addr16
mov
dec
scas
popf
pop
push
xor
addr16
xchg
test
lods
incb
xchg
dec
add
in
xchg
sbb
shrl
clc
mov
jmp
dec
inc
adc
adc
xchg
dec
addr16
les
sub
icebp
addr16
scas
mov
push
insl
dec
mov
or
int
aas
ss
hlt
mov
and
fdivp
adc
clc
adc
push
xchg
and
and
dec
and
or
sbbb
addb
jp
add
loopne
popf
in
mov
call
and
pop
adc
xchg
mov
push
and
push
hlt
jg
push
push
and
lahf
cmp
adc
clc
cli
rcll
cmc
in
hlt
mov
mov
jb
adc
aas
fsubs
inc
adc
mov
out
xchg
add
in
ficomps
or
mov
cmp
push
call
loopne
mov
es
jne
pop
rclb
enter
rcll
es
in
mov
xchg
jno
pusha
std
jmp
xchg
mov
aam
add
js
loopne
xor
mov
add
sbb
adc
subl
imul
inc
pusha
push
addr16
ds
aad
call
cmp
leave
jno
jb
aad
data16
cmc
roll
inc
das
std
inc
jae
or
xchg
test
pushf
jb
scas
pop
ss
push
ret
xor
or
mov
lods
jp
xchg
or
and
mov
stos
mov
cmp
or
fmuls
sahf
xchg
or
jbe
ror
add
in
adc
dec
or
inc
mov
jg
mov
adc
xor
call
or
push
fs
sahf
cmp
jecxz
loope
mov
and
icebp
stos
cmp
adc
mov
cmp
dec
inc
xor
cmpsl
outsb
mov
pop
fwait
inc
xor
xorl
ret
fimull
add
clc
roll
enter
xor
mov
insb
add
xchg
test
cmp
xchg
dec
or
mov
push
xchg
add
jmp
sbb
push
andb
adc
clc
adc
pop
xor
ljmp
loope
xor
lock
xor
sbb
jge
fists
jne
mov
dec
inc
xchg
xorl
cmp
lds
xlat
sbb
or
adc
xor
shll
std
cmpb
pusha
imul
push
adc
lods
inc
lret
stos
out
lds
shrb
fwait
jno
enter
cmp
movsl
sar
and
movsb
dec
es
lret
testb
cmp
and
lock
or
outsl
out
das
test
shr
mov
leave
xor
test
sti
xchg
add
mov
jmp
pusha
test
test
stc
lret
iret
insl
mov
sbbl
sbb
and
adc
shrl
js
mov
push
lret
and
flds
adc
mov
shlb
loopne
inc
scas
cld
fadd
and
ret
sub
jae
out
es
test
je
cmp
in
adc
outsb
shrl
jg
push
dec
shl
ret
sbb
mov
in
ret
std
pop
imul
in
adc
fs
mov
sbb
andl
mov
mov
lds
jae
push
adc
scas
aad
ja
adc
push
xor
fwait
push
jecxz
add
cmp
jbe
cmp
pop
mov
adc
std
jbe
add
outsl
push
ficompl
es
fiaddl
xchg
inc
fwait
pop
clc
ret
imul
enter
mov
or
adc
pop
push
aam
sarb
cmpb
shlb
call
inc
roll
xchg
or
mov
and
popf
mov
test
rcrb
test
pop
mov
loopne
adc
mov
imul
jl
dec
hlt
fwait
mov
subl
lret
sub
arpl
xchg
inc
pop
ss
lock
mov
add
cmc
pop
push
sti
call
dec
adc
ljmp
dec
je
mov
sbb
in
std
dec
add
xchg
call
adc
sbb
push
inc
scas
iret
mov
pmuludq
and
push
adc
sbb
inc
popa
mov
repz
xchg
xchg
je
jne
mov
lret
mov
call
roll
jns
and
dec
daa
loop
add
loopnew
sub
sbb
dec
fmulp
inc
xchg
push
rclb
rolb
sub
push
imull
cmp
mov
jne
nop
add
icebp
test
andb
enter
ficoml
shl
adc
pusha
shlb
sub
sub
inc
xchg
mov
gs
dec
inc
mov
adc
es
sbb
mov
call
cmpl
add
inc
inc
sbb
icebp
int3
sub
je
jnp
cld
push
out
sbb
xlat
add
sbb
xor
pusha
xor
push
pop
call
mov
inc
xchg
cmp
lock
js
adc
sub
mov
and
dec
ret
enter
and
inc
enter
stos
pop
adc
xchg
aad
loope
and
xor
shrl
adc
adc
mov
xchg
cmp
icebp
mov
pop
in
imul
xor
and
sti
cmp
cld
pop
xlat
adc
and
call
xor
cmp
ja
insb
testb
adc
sbb
popf
cwtl
nop
aas
jg
or
mov
mov
pop
xchg
daa
scas
xor
shll
adc
int3
and
add
push
loopne
movsb
or
bound
xor
cltd
sub
or
mov
jne
roll
sbb
push
sub
test
fdivrs
sar
adc
mov
shll
aam
dec
adc
sbb
pop
nop
cwtl
icebp
movsl
or
sub
add
pop
cld
mov
movsb
adcl
aam
pop
fwait
clc
jg
xor
lds
ret
push
xor
cld
loopne
sbb
je
lret
ljmp
or
push
mov
outsl
pop
mov
data16
or
add
xor
shrb
push
xlat
dec
aaa
lea
inc
dec
std
push
lea
sub
addb
adc
ret
jb
pop
cmp
imul
adc
insl
xchg
data16
xor
or
roll
scas
ret
cmp
add
cmpsl
xchg
sub
scas
sub
sub
lods
xchg
lods
jb
lret
add
cmpl
add
test
mov
and
test
lods
aad
loopne
add
dec
and
enter
shlb
rclb
lock
inc
lret
call
mov
mov
sbb
push
jge
xchg
into
fdiv
out
clc
pop
lea
orl
mov
sub
mov
ret
push
push
mov
fdivl
mov
adc
xor
aam
popa
sahf
xlat
fwait
sahf
or
filds
push
icebp
and
inc
mov
call
repz
mov
cld
or
mov
stos
jp
popa
ror
pop
xchg
or
jp
lret
or
subl
pop
outsb
and
enter
int
inc
daa
fisubs
daa
adc
pop
dec
push
inc
xchg
cli
sub
add
cmpl
jg
or
test
jne
jno
push
insl
sbb
gs
stc
dec
sub
sub
sbb
rorb
movsb
jno
outsl
sub
dec
add
dec
aaa
push
xchg
mov
repnz
add
js
add
es
into
mov
cltd
stos
sarl
and
xor
pop
ljmp
jg
adcl
js
xor
pop
sbb
rorb
es
or
leave
pusha
fdivrs
sub
push
xchg
ret
inc
push
mov
andl
movsl
es
mov
push
arpl
adc
hlt
xor
and
loopne
dec
movb
add
gs
dec
js
push
mov
dec
xor
lret
jno
fwait
scas
int3
pop
movl
push
mov
bound
sub
xor
add
xlat
add
loopne
aam
xchg
xor
push
pop
in
lock
xor
jbe
and
xchg
lock
jae
fdiv
and
cmp
out
jne
cmp
or
scas
and
mov
mov
push
pop
inc
nop
mov
ss
cmp
or
test
inc
xchg
mov
dec
pop
orl
sub
sbb
test
adc
sub
cmpsb
stos
ret
and
movsl
jle
pop
and
idiv
movsb
les
push
test
je
jo
mov
js
or
roll
fs
jne
cld
dec
sub
test
jae
pop
fistpl
jmp
arpl
mov
push
mov
sbb
and
movsl
ljmp
andb
push
cmp
loopne
aam
push
adc
mov
movsb
mov
je
sbb
es
arpl
mov
cmc
in
outsl
lock
xlat
xor
into
js
das
and
fcompl
movsb
test
mov
xchg
cmp
mov
cmpb
xchg
inc
mov
push
lds
repz
push
mov
cmpsb
imul
imul
xor
scas
cmpsb
mov
cmp
mov
aam
lret
jmp
subl
adc
scas
xchg
push
inc
xor
int3
or
popa
clc
push
mov
mov
xor
mov
pop
pusha
mov
adc
hlt
sbb
fwait
inc
dec
inc
jp
ret
addr16
add
stos
cmpsl
shrl
mov
movsl
pop
dec
aas
dec
bound
clc
in
xor
aaa
aam
cmpl
add
enter
popl
mov
xchg
pop
sub
mov
lock
and
push
inc
test
inc
lcall
sub
push
mov
push
adc
jo
outsl
dec
mov
mov
mov
adc
rcrl
loopne
movsl
sahf
or
inc
push
push
mov
sbbb
fidivs
inc
cs
subb
les
sbb
pusha
sti
daa
and
inc
push
add
mov
lock
jne
pop
imul
push
stos
sub
repnz
cld
add
ja
sti
and
pop
mov
mov
mov
inc
sub
mov
mov
rcrb
ds
lods
xchg
and
stos
es
in
and
inc
call
sub
push
dec
add
add
out
popf
push
sub
inc
in
jg
loop
dec
mov
inc
adc
sbb
hlt
and
jg
arpl
negl
sub
jne
sti
ret
xchg
inc
in
test
outsl
lock
add
repnz
scas
repz
sbb
sub
decl
ja
push
std
mov
push
movsb
or
xor
cmp
jmp
jnp
gs
jecxz
mov
shll
addr16
rcl
movsb
mov
xor
pushf
ds
loop
call
inc
lea
inc
loop
jg
std
sbb
ds
icebp
loope
push
popf
add
jle
add
add
insl
jae
pop
add
sbb
xor
dec
sub
rcll
clc
andb
cmp
xor
push
ja
mov
inc
lahf
inc
cmp
jae
popa
sbb
dec
popa
jp
insl
outsl
std
lcall
stos
dec
and
loop
stos
das
lods
and
inc
pop
jo
adc
inc
mov
add
scas
les
enter
inc
ret
dec
nop
pop
scas
mov
out
pop
mov
xchg
adc
cmc
lods
bound
cwtl
loopne
cltd
stos
add
addr16
xchg
cwtl
adc
push
cld
mov
push
push
add
cmpb
sbbb
inc
sbb
mov
cld
add
outsb
and
or
sub
cs
pop
in
sahf
lcall
fucomip
or
push
push
adcl
divb
pusha
icebp
sbb
and
int3
xor
int3
dec
les
fsubrs
shll
push
aam
adc
fnstcw
mov
loop
cwtl
xor
add
shr
cmc
mov
mov
sbb
in
jg
jp
xchg
xchg
mov
add
roll
nop
je
pop
inc
mov
mov
adc
or
mov
adc
int3
sbb
shll
xlat
and
mov
cmp
xchg
cmpb
sub
fisttpll
add
das
add
add
int3
stos
xchg
inc
pop
fwait
add
dec
adc
fs
and
and
movl
cmp
push
adc
xor
push
xchg
add
mov
push
testl
push
mov
es
leave
add
push
loopne
je
xor
repnz
push
fisubl
addr16
lahf
push
jge
jno
lret
insb
dec
shl
repz
mov
mov
mov
or
dec
xor
aaa
adc
mov
and
insl
push
jecxz
lods
pusha
cmp
orb
xorps
cld
dec
mov
cs
xchg
and
sub
cmovne
out
sarb
push
push
pusha
iret
out
and
dec
lock
add
jns
xor
scas
add
dec
inc
in
adc
scas
test
fdivrs
push
xchg
mov
inc
addr16
add
in
pop
mov
mov
insl
xchg
addr16
adcb
push
jl
xchg
mov
and
or
adc
daa
pop
test
jo
cmp
mov
rolb
push
sti
aaa
jmp
loopne
fistl
push
lods
sbb
popf
jmp
movsl
lret
call
fimuls
in
sbb
or
andb
add
add
subl
adc
sub
and
or
or
mov
push
cmpsl
es
ret
in
shr
stos
std
or
add
jge
sub
inc
pop
addb
sub
bound
lods
mov
shlb
int3
dec
shrl
addr16
test
xor
mov
xor
sbb
xor
lret
jp
pop
cmpsb
xchg
cld
popa
sbb
jmp
sahf
clc
mov
add
push
test
inc
xchg
loopne
outsl
jge
sub
test
add
pushf
lods
sub
je
adc
int3
pop
pop
jle
rol
add
and
jg
mov
xchg
pop
pop
xchg
xor
scas
xlat
or
arpl
push
xchg
xor
inc
lods
mov
xor
stos
cmp
sbbb
hlt
add
or
inc
and
jne
scas
push
shrb
hlt
sub
cwtl
gs
mov
sbb
loopne
add
test
jecxz
arpl
data16
cld
lea
in
ret
add
sub
jp
sahf
mov
cmp
nop
or
add
pusha
test
push
mov
pusha
pusha
scas
pop
or
and
jbe
push
mov
ror
jp
push
pop
jns
bound
xchg
push
pusha
dec
pop
sti
ret
add
push
pop
push
inc
or
andl
add
aad
in
xlat
jmp
sbb
sbb
repnz
jle
sbb
je
dec
jmp
fs
shlb
dec
or
int3
and
insb
sarl
xchg
jb
push
add
jle
aaa
dec
mov
add
scas
add
loopne
roll
add
mov
repz
jle
inc
dec
jecxz
and
mov
pop
sub
xchg
div
jp
ljmp
xor
add
shr
ja
or
jnp
iret
data16
add
aas
cmp
jb
scas
mov
add
mov
mov
fldl
and
jns
rcrl
inc
or
dec
add
cwtl
mov
or
push
pop
jle
test
inc
mov
mov
xchg
clc
mov
cld
int3
incb
je
repz
test
mov
outsb
push
sti
movsb
and
push
jnp
inc
cmpsb
jg
mov
add
js
add
data16
add
add
inc
test
int3
es
or
sub
xchg
sub
adc
call
sub
sbb
pusha
add
adcb
nop
inc
adc
push
popf
loop
pushf
mov
cmpsb
clc
pop
inc
popf
or
int
mov
push
arpl
cmp
mov
subb
xor
mov
jmp
sub
xchg
int
mov
int3
enter
out
out
and
cmp
mov
das
push
inc
jg
inc
xor
mov
push
fbld
jmp
rcr
sbbl
add
and
nop
sub
shr
ret
adc
xchg
and
adc
push
hlt
es
outsb
test
lds
adc
xchg
push
shll
aaa
ret
sbb
and
xor
inc
adc
js
adc
adc
inc
push
je
cltd
aaa
repnz
add
lahf
inc
adc
push
lock
add
pop
add
inc
les
adc
es
sahf
adc
ljmp
rcl
jecxz
push
mov
lcall
inc
in
xchg
bound
fidivl
add
mov
jmp
in
adc
rclb
inc
in
push
inc
pop
in
notb
sub
insl
inc
aad
mov
loope
out
dec
inc
cmp
jae
add
jle
les
fistpl
pop
out
jae
jl
js
pop
jg
mov
add
imul
sbb
add
adc
outsb
cli
cltd
sarl
push
aam
aam
ret
sbb
fld
adc
fwait
cmpsl
jb
inc
dec
daa
sbb
sub
adc
pushf
dec
sub
or
push
mov
rcll
fcomps
or
bound
add
sbb
or
add
jg
adc
hlt
xor
xchg
inc
and
xor
pop
xor
addl
loopne
mov
pop
in
fucomp
popa
test
jne
fldt
aad
cmp
mov
inc
aas
cmc
jne
jg
and
jmp
cmp
jne
push
sub
and
push
pushf
cmpb
divb
mov
aam
popa
or
push
aam
jno
add
adc
lods
inc
or
lcall
or
jle
and
inc
xor
push
sbb
adc
test
inc
mov
dec
imul
dec
mov
xor
arpl
mov
or
and
mov
ja
inc
inc
cwtl
add
pusha
ret
mov
lods
push
jne
push
movsl
mov
fdivl
faddl
inc
push
xchg
and
jp
jl
and
scas
jae
orl
scas
dec
stos
test
or
pushf
inc
xor
and
lret
push
shl
and
fwait
or
and
mov
adc
dec
mov
push
lock
cmp
loop
repz
lock
sbb
sbb
js
jl
pusha
add
cli
fxch
xchg
in
xor
cltd
lods
sub
cmp
movsl
mov
mov
cmp
jge
cld
and
sub
push
das
stos
popf
cmp
lods
pop
test
add
lock
push
jo
imul
mov
lock
sbb
dec
and
cli
jne
stos
jb
stos
inc
xor
and
xchg
sahf
data16
or
lock
xor
jecxz
mov
mov
adc
push
popa
adc
and
jbe
jb
pop
inc
ja
cmp
dec
lock
aam
cmp
testl
cmp
out
push
shr
in
loop
adc
dec
popf
addb
in
shlb
movsl
int3
loop
fisubl
cld
sub
add
rcrb
adc
or
test
scas
xchg
push
adc
pop
adc
loopne
dec
xchg
adc
js
mov
add
jge
lahf
xor
mov
popa
js
jne
cwtl
subb
mov
push
add
stos
es
xchg
add
adc
aad
mov
sub
jno
push
mov
inc
test
mov
push
insb
ret
cli
mov
xchg
jge
insl
pop
cmp
and
icebp
dec
cli
out
cwtl
aam
ret
fxch
fdivrl
mov
sbb
push
pop
loop
push
out
xor
mov
dec
outsl
mov
sbb
pusha
int3
ficomps
repnz
add
inc
testl
dec
stos
mov
mov
inc
dec
or
dec
repnz
sub
lcall
mov
pop
shrb
imull
int3
enter
push
jecxz
xchg
cmpsl
cli
popa
mov
or
mov
pushf
mov
add
lods
cmp
jb
jo
clc
jecxz
push
mov
pop
in
pop
inc
gs
add
and
aaa
add
inc
gs
and
adc
sbb
sbb
or
adc
mov
addr16
movsl
or
cmp
sub
pop
sbb
cmpsl
sbb
mov
cmpsb
fsubrp
mov
dec
mov
stos
out
into
fnsave
dec
orb
dec
xchg
or
out
add
or
or
out
inc
cmpsb
inc
push
adc
mov
or
subl
inc
mov
push
in
add
adc
inc
adc
cmp
inc
in
movsb
or
push
adc
add
xchg
push
push
sarl
add
add
cmp
or
pop
dec
adc
ds
lea
outsl
pop
mov
rorb
mov
adc
sub
add
lods
and
ja
or
dec
pop
sub
loope
jecxz
fsubl
inc
pop
push
inc
add
rolb
add
mov
lret
popa
rclb
fcomps
dec
pop
lret
adc
jg
adc
cmpsl
loopne
add
push
inc
xor
pop
in
xchg
mov
test
ljmp
pop
rcrb
movsb
mov
or
xor
into
pop
sbb
shr
insb
fnstcw
cmpsb
mov
pop
scas
hlt
sbb
out
add
mov
mov
lds
popa
js
hlt
sub
push
push
in
test
or
cwtl
loop
sahf
mov
dec
sbb
jnp
push
lock
clc
xlat
or
popl
push
fwait
mov
adcl
push
xchg
or
pusha
and
or
xor
mov
adc
mov
push
addl
and
in
push
pop
dec
push
addr16
lret
xchg
sub
aam
adc
lods
repz
test
jecxz
adc
popa
loope
cmp
mov
insl
push
in
faddl
test
cmp
or
shl
and
lret
inc
pop
in
xchg
cli
and
or
daa
xor
js
lret
call
add
add
or
ljmp
xchg
in
inc
jl
pop
data16
loop
add
test
pop
add
aaa
push
or
dec
sti
and
rclb
or
push
aad
pop
adc
push
mov
aam
ss
adc
add
dec
clc
mov
pop
xor
lock
loopne
jl
lock
sub
mov
sbb
cmp
inc
jmp
sub
inc
cmp
js
cmc
mov
imul
repz
cmp
imul
cmp
mov
enter
test
ljmp
add
mov
fsts
into
push
roll
xchg
mov
xor
shrb
test
in
xchg
mov
sbb
fcom
cltd
adcb
mov
adc
ja
add
in
inc
lds
jecxz
cmp
push
and
and
pop
dec
inc
and
mov
inc
lods
cmp
xchg
inc
cmp
pop
mov
clc
adc
add
sbb
xor
cmpsl
sbb
popa
loop
popf
xor
dec
clc
add
xor
pop
js
dec
xchg
mov
mov
inc
sbb
jae
push
push
in
addb
cmp
push
inc
into
or
mov
and
xor
sub
mov
add
add
pop
xor
sbb
daa
add
mov
or
loop
lock
cmp
inc
les
dec
xor
fisubrs
xchg
inc
loopne
inc
dec
jmp
repz
cld
fstps
out
dec
and
pop
lock
popf
or
push
adc
or
sbb
dec
xlat
ret
inc
and
or
test
hlt
xchg
sub
jp
inc
or
pop
fldenv
push
adc
add
xor
push
jle
repnz
mov
add
aas
test
cmp
idivl
mov
cmp
repz
xor
xchg
inc
repz
or
fistps
jl
adc
pop
push
push
jecxz
insb
mov
inc
rcrb
mov
cmp
inc
ret
pop
pop
push
in
cs
leave
add
aaa
mov
rcrb
loop
daa
mov
nop
or
xchg
imul
add
pop
xor
and
sbb
rolb
jnp
mov
daa
les
xor
xlat
test
jp
xor
push
cmpsb
push
stos
push
dec
in
or
call
enter
das
rorb
lds
add
mov
jp
xor
jns
adc
mov
push
mov
mov
and
cmp
cmp
dec
lahf
aam
adc
mov
data16
mov
outsb
xor
cmc
mov
test
dec
adc
push
test
test
testl
aaa
adc
mov
aaa
insb
cmp
bound
fcomp
adc
mov
push
cwtl
and
daa
dec
imul
sub
adcb
add
mov
jmp
movsb
or
in
or
mov
add
jmp
xlat
ret
js
arpl
xchg
add
gs
and
inc
inc
cltd
imul
xor
inc
jne
cmp
cmpsl
xor
call
pop
inc
push
lods
and
outsb
cmc
sub
in
icebp
sub
ja
push
shll
adc
pushf
pop
notl
bound
sbb
mov
dec
test
push
rorb
daa
shrl
xchg
and
clc
popf
outsl
push
les
mov
es
adc
insb
jge
xor
mov
pop
scas
mov
insb
cli
das
or
dec
rclb
out
icebp
sub
cmpsb
call
aam
lahf
mov
fsubrl
add
xor
sarl
add
sbb
push
push
push
rcrl
imul
or
movsb
mov
sub
rolb
lahf
xor
sub
sub
adc
call
lahf
xchg
faddl
cli
cld
xor
mov
es
cld
test
mov
popa
out
dec
push
repz
adc
adc
rcrb
add
mov
xchg
add
cs
cltd
mov
push
call
add
push
mov
lods
push
ss
daa
adc
adc
jle
adcl
mov
or
daa
movsl
or
cmp
push
aam
nop
mov
loop
scas
push
dec
jmp
jp
shll
imul
adc
sbb
dec
mov
fwait
xor
add
in
mov
mov
js
test
in
addr16
add
or
sub
cld
adc
jb
jno
and
testb
or
mov
out
mov
bound
int
mov
mov
jle
push
test
jno
fcoml
push
mov
mov
jae
mov
cmp
lods
insb
push
mov
mov
dec
jmp
mov
dec
inc
scas
call
mov
enter
add
inc
inc
sub
and
arpl
adc
add
pop
sbb
cmp
js
jb
movsl
aas
xor
add
imul
mov
or
outsl
fwait
movsl
jns
xchg
push
add
pop
test
out
sub
outsb
cltd
sub
jl
add
add
add
pop
inc
test
add
fwait
mov
cmpsl
add
pop
push
dec
adc
ret
jne
lret
orb
jne
push
aas
pop
outsb
or
movsb
push
push
adcb
imul
mov
dec
lods
loop
test
dec
ret
ds
or
push
pop
mov
hlt
fsubs
xor
rcrl
push
in
adc
cmp
add
dec
sub
mov
add
cmpsb
ljmp
xchg
push
outsb
imull
cmp
adc
fs
cmp
add
sub
pusha
jne
mov
dec
adc
fstpl
jne
cmp
sti
adc
lret
sbb
and
push
or
and
push
push
jp
xor
add
clc
ds
inc
lcall
xor
add
add
fdivl
push
lock
adc
inc
dec
imul
add
dec
inc
and
push
dec
shll
dec
clc
push
scas
mov
mov
mov
mov
pop
aaa
rcrl
xor
cld
mov
cmc
fbstp
icebp
ljmp
mov
lret
outsl
xor
sbb
sub
stc
fidivs
and
sbb
and
outsb
icebp
js
xchg
repz
pop
dec
dec
dec
add
jbe
hlt
xor
test
int
xor
mov
jmp
pop
jnp,pn
push
lods
cmpsb
loopne
rolb
inc
mov
adc
adc
sub
mov
add
xchg
dec
fnstsw
mov
sti
xorb
dec
loopne
call
ret
out
movsb
movb
cmp
xor
sbb
sbb
idivl
daa
jge
sbb
dec
mov
mov
inc
testl
mov
push
and
pop
and
cmp
mov
mov
ds
sbb
mov
mov
hlt
inc
xchg
add
inc
out
add
cmp
push
push
mov
shlb
ret
and
or
push
cmp
jnp
mov
mov
test
push
rcll
int
xorb
enter
into
pop
fiadds
sarb
adc
addl
add
mov
sub
sub
pop
pop
push
jne
sub
bound
sub
and
mov
stos
mov
ds
jo
adc
add
mov
sbb
mov
andb
fimuls
in
call
and
ret
jmp
insb
add
incl
orb
and
and
test
adc
nop
add
in
call
add
inc
inc
adc
add
test
and
dec
and
mov
mov
nop
or
and
sbb
and
adc
and
xor
adc
and
add
adc
outsl
fistpll
dec
and
and
inc
inc
adc
inc
or
and
outsl
lods
mov
add
and
add
pop
inc
adc
jbe
add
inc
imul
mov
adc
mov
inc
nop
and
add
push
dec
lods
adc
add
xchg
xorl
add
test
mov
pop
imul
push
mov
imul
mov
and
and
pop
nop
mov
fistpl
dec
add
imul
jg
cmp
dec
xchg
inc
pusha
add
ja
mov
pop
imul
inc
jecxz
mov
cs
pop
add
imul
mov
ja
push
and
fistpl
test
pop
mov
and
or
adc
rcll
lods
mov
pop
movl
xlat
pop
mov
loope
adc
mov
into
and
fmull
lods
fdivrs
inc
adc
and
js
adc
cmp
pop
jae
mov
push
lods
sbb
movsb
dec
xchg
jae
and
adc
int
adc
mov
rcrl
xlat
mov
add
pop
imul
xor
lea
add
jmp
int3
pop
imul
filds
jno
sub
mov
int3
adc
push
adc
imul
imul
adc
or
cmp
pop
push
jne
rcrb
lods
rolb
push
xchg
rcrl
fldt
sub
jle
cmp
inc
inc
es
dec
data16
stos
fdivs
imul
xchg
or
push
nop
imul
pop
xchg
add
lcall
sub
sbb
or
sbb
push
pop
mov
xor
call
mov
lods
popa
xchg
out
std
add
jmp
sbb
xor
jo
sub
push
and
bound
pop
fstpt
adc
test
sub
imul
nop
xchg
sbb
loop
cltd
pop
inc
int
test
adc
adc
pop
imul
mov
and
sbb
add
mov
and
adc
xor
jl
mov
dec
dec
mov
xor
loopne
mov
mov
or
xchg
adc
roll
test
dec
scas
insl
outsl
xor
and
pop
and
int
rorb
mov
cmpsb
out
dec
inc
mov
je
leave
sub
pop
jae
ljmp
inc
imul
int3
outsl
fldenv
dec
or
or
sub
lcall
jnp
sbb
cmp
subl
jecxz
nop
lcall
sub
ss
xchg
jmp
add
and
jp
or
jae
sub
lods
shll
adc
in
insb
sahf
shrb
jne
inc
inc
cs
shrl
dec
shrl
xchg
xor
sub
bound
dec
inc
mov
xor
and
into
cmpsb
cmpsb
push
sub
dec
shrb
or
adc
das
inc
xchg
lods
push
in
mov
mov
gs
fbld
adc
mov
pop
cmp
cltd
or
je
dec
sbb
imul
scas
cmp
xchg
fldt
cmp
into
sbb
mov
popf
mov
jecxz
pop
lods
jmp
lods
cmp
das
adc
in
adc
jmp
jo
fistpll
add
pop
or
test
stos
mov
sbb
cmp
ljmp
lcall
jl
call
and
sbb
cmpsb
int
call
push
or
sbb
fiadds
out
xor
fwait
add
xchg
bound
xor
ja
push
int
xchg
mov
arpl
push
inc
cwtl
aam
cmp
int
popa
lret
or
scas
es
mov
adc
mov
sub
mov
call
mov
adc
dec
cltd
mov
ljmp
push
and
adc
mov
test
lcall
jne
pop
pop
sub
add
lcall
jecxz
or
test
and
out
rcll
cmpsl
test
pop
lea
add
pop
imul
cmpsb
jg
sub
jo
lcall
mov
push
xor
adc
lods
in
xor
jo
jo
fcomip
scas
adc
scas
sub
into
inc
jae
jecxz
js
mov
inc
mov
lods
stos
mov
int3
adc
lods
xor
mov
push
mov
test
inc
test
add
mov
mov
and
sbb
or
mov
add
lcall
leave
inc
add
ret
inc
xchg
fs
add
or
inc
mov
faddl
xor
imul
sbb
xor
mov
or
xor
out
or
and
test
out
push
adc
add
roll
inc
mov
sbb
mov
mov
inc
push
jae
adc
aas
add
push
lds
das
or
and
outsb
push
scas
cltd
jo
pop
xchg
cmp
out
lods
and
adc
pop
movl
jns
cli
ficompl
add
dec
add
pop
mov
adc
xchg
push
cwtl
pop
xchg
mov
enter
or
call
add
add
subl
shlb
lcall
jae
inc
lods
jp
lret
add
add
cmp
lock
fildl
aam
cmp
add
xchg
in
adc
push
aam
mulb
xor
add
or
jge
jl
fcmovnu
out
mov
aaa
jnp
add
imul
mov
test
xchg
cmc
dec
lcall
lret
pusha
jecxz
out
dec
sbb
pop
add
pop
roll
cmp
das
stos
add
mov
inc
add
pop
roll
push
shr
std
inc
or
push
jg
dec
mov
adc
xchg
mov
jno
mov
stc
mov
add
lea
adc
xchg
inc
movsb
and
add
test
cli
mov
scas
mov
jmp
inc
nop
test
push
cmp
fcoms
and
jne
or
outsb
ljmp
ficompl
xorb
or
xlat
adc
dec
idivl
les
mov
mov
add
lea
ss
jle
sub
cmp
mov
jb
pop
clc
jns
add
or
cmpsb
mov
sbb
out
loope
test
dec
or
add
jmp
cmpsl
scas
or
mov
mov
adc
inc
loope
loope
dec
pop
add
dec
sub
or
fisttps
pushl
fsubrl
add
dec
loopne
or
mov
pop
outsb
add
call
cmp
cmp
rorb
xchg
xchg
xchg
test
sbb
ljmp
fcomip
xchg
imul
or
add
add
div
outsl
push
popa
xor
fnstenv
mov
mov
mov
mov
aam
push
sarl
idivb
dec
add
add
aaa
nop
shlb
xchg
xor
sbb
or
jo
bound
ds
jmp
mov
mov
adc
aaa
cld
das
cld
add
add
cltd
std
xlat
and
cmc
mov
lock
cmp
mov
pushf
mov
add
xor
nop
jnp
dec
pop
movl
dec
add
mov
test
adc
jg
mov
mov
adc
fisttpll
lock
or
pop
lahf
and
mov
outsb
js
dec
incl
sarl
mov
xor
imul
incl
push
stc
or
in
push
add
movsl
sub
sahf
jle
xchg
insb
adc
out
sahf
repz
je
ss
and
addr16
fidivrs
xor
ja
add
test
xor
pop
push
inc
xor
popf
in
jl
add
outsl
xor
ror
add
xor
into
gs
xor
jb
mov
fisttps
push
mov
jb
cmovo
arpl
ret
hlt
or
insb
in
pop
mov
js
sbb
insl
leave
gs
jns
dec
es
insl
outsl
mov
cli
mov
daa
sbb
pop
negl
in
dec
inc
pop
test
ret
pop
mov
add
loope
psubw
sub
in
insl
mull
sub
outsb
fwait
nop
lea
and
cmc
hlt
das
adcl
cmp
push
stos
daa
rcrl
mov
xlat
xlat
mov
inc
ret
add
pop
cmp
dec
mov
jg
mov
push
test
cmp
add
movl
fcmovnbe
nop
jo
inc
sub
cmc
lcall
cld
jg
cwtl
es
inc
lret
jle
enter
push
leave
lock
imul
xchg
pop
repz
outsl
scas
mov
or
rcll
repnz
inc
add
ds
mov
mov
and
adc
or
loopne
out
pop
or
ficomps
movsl
call
loopne
out
jp
sbb
mov
filds
push
dec
fcmovnu
loop
sub
into
leave
or
std
cmp
jl
or
xchg
inc
xchg
sahf
xor
incl
pop
jp
mov
ss
mov
in
push
shll
outsl
cmp
outsl
mov
daa
jecxz
icebp
cmp
pushf
push
adcl
inc
aam
popl
add
sbb
jg
outsl
xor
adc
xor
out
jae
aaa
fldl
cwtl
in
das
mov
std
lret
jp
mov
insl
cs
cld
sbb
sbb
jp
mov
xchg
xchg
test
int3
mov
les
repz
ret
sub
push
ret
ljmp
pop
pusha
call
add
xchg
mov
pop
push
push
shlb
and
pusha
std
in
in
mov
xchg
add
push
call
imul
sbb
out
jnp
jmp
sub
aam
push
cmp
sbb
xor
cmc
ficompl
or
frstor
dec
push
xchg
mov
or
out
jecxz
dec
xor
decl
adc
cld
xchg
jne
sub
jp
fs
push
xchg
in
aaa
pop
mov
int3
or
leave
out
jno
mov
decl
test
sbb
cmp
insl
ds
or
push
cld
in
xchg
jbe
sti
bound
aam
mov
cld
fidivrs
xchg
dec
mov
cltd
push
idivl
pop
aaa
fsubr
and
sub
test
mov
pop
loope
or
mov
dec
or
add
lahf
outsb
movsb
ror
pop
and
jg
xchg
stos
and
cmp
dec
adc
xchg
fistpll
cs
adc
jbe
inc
inc
inc
adc
popa
loope
int
jl
les
das
fdivrl
mov
dec
sbbl
insb
lds
add
call
stos
clc
and
sbbb
add
push
or
fisubrs
fcompl
dec
mov
sbb
pop
mov
adc
or
fucomp
add
filds
xor
scas
jo
mov
pop
mov
aam
xchg
shrl
je
scas
in
scas
push
sub
aas
test
call
je
mov
cli
inc
mov
loopne
mov
jl
push
stos
std
incl
add
pop
sbb
and
jnp
pushf
daa
sarb
and
les
pop
testl
out
stos
adc
dec
decl
add
xchg
lds
inc
fistpll
std
xlat
add
add
lea
xor
xor
xchg
ja
in
in
add
sub
cwtl
iret
xor
and
ljmp
outsl
cld
xchg
insl
stc
sbb
es
or
aad
jbe
mov
pop
adc
and
sub
inc
in
inc
mov
lds
fnstsw
test
add
ljmp
lock
push
and
adc
push
aas
jb
data16
ja
dec
scas
add
cwtl
inc
fs
mov
mov
sbb
cmp
pop
mov
mov
mov
iret
mov
das
popa
push
mov
xchg
aaa
iret
push
jg
adc
xchg
lock
and
sbb
ret
lock
incl
xor
dec
mov
push
dec
aaa
in
and
scas
inc
push
cmpsb
or
sbb
rcr
xchg
pusha
pop
mov
adc
jmp
xchg
fwait
ljmp
push
push
adc
xor
mov
and
and
hlt
les
shll
xor
inc
mov
inc
and
fists
movsl
fiaddl
push
mov
fstpt
leave
xlat
outsb
xchg
lahf
inc
ret
mov
stos
and
cmpsl
data16
sub
or
int3
sub
fisttps
jp
xchg
lret
in
push
in
dec
adc
mov
outsl
adc
pop
jle
sub
and
loope
mov
mov
xchg
mov
out
lods
notl
icebp
outsl
std
fisttps
or
cmp
dec
cltd
inc
sbb
ret
or
sub
ret
cmp
push
add
add
fadds
pusha
adc
jge
adc
mov
push
sahf
xchg
mov
jne
dec
xchg
mov
xchg
ja
sarl
xlat
mov
addl
inc
and
cmpb
incb
xchg
push
sub
pop
or
mov
ret
and
push
xor
cmc
push
sbb
das
imulb
orb
clc
and
mov
cli
neg
mov
ss
inc
xchg
xor
stos
call
popa
jg
or
les
jns
mov
push
iret
jnp
fdivrl
mov
pop
jge
mov
or
lcall
sbb
cli
dec
adc
push
outsb
add
pop
or
out
jo
daa
push
js
push
dec
add
adc
int3
and
ret
fcomi
insl
outsl
cmc
add
add
pop
ds
mov
fcmovnb
lods
jp
push
sarl
dec
scas
push
mov
mov
or
push
mov
cmp
cmpl
ja
shlb
push
xor
sbb
int3
jae
lret
outsl
mov
dec
cmp
dec
and
mov
test
filds
jo
inc
pop
mov
cmp
sbb
andb
jl
and
pop
mov
shlb
mov
inc
mov
js
lret
jl
jno
mov
cmpsl
dec
jmp
mov
dec
shl
pop
pusha
jb
fimuls
pop
push
xchg
lret
mov
ss
jge
push
mov
adc
rolb
mov
out
sbb
push
push
inc
call
inc
inc
pop
incb
add
shrb
mov
mov
push
test
ds
sbb
or
dec
xchg
or
sbb
mov
push
cli
ficoml
je
ss
shlb
incl
clc
and
sahf
call
push
or
rcr
test
stos
ja
jg
mov
sub
arpl
push
test
cmc
sbb
pop
enter
cmp
loope
incl
mov
and
sarl
jg
sub
add
inc
in
daa
pushf
loopne
sub
test
jg
in
cld
dec
or
sti
xor
shl
movsl
cmp
mov
fcmovnbe
fiaddl
out
dec
aam
in
movb
test
lcall
aaa
xchg
jae
push
xlat
xorb
pop
sbb
iret
push
sbb
rol
push
jno
sbb
bound
xor
ljmp
gs
inc
fildll
mov
scas
xchg
jae
fwait
jecxz
and
insb
or
cli
sbb
leave
sbb
sub
outsl
clc
inc
adc
pop
and
test
ds
cmp
out
push
add
sub
lods
or
pop
xor
ljmp
sub
lea
je
cld
decl
fists
and
or
dec
mov
dec
push
xor
gs
in
fsubrp
sbb
insl
mov
imul
xchg
arpl
ret
or
fcmovbe
sub
into
xor
pop
fstl
testb
fcmovnb
rorl
xor
xor
xchg
out
pop
pop
pop
insl
pop
icebp
mov
jmp
mov
inc
mov
mov
push
mov
test
add
inc
or
add
lods
repnz
std
outsl
mov
je
or
repnz
xor
sub
mov
stc
lock
dec
repz
out
cltd
cld
aad
fiaddl
dec
call
mov
add
inc
movsl
ret
fistpl
stc
xchg
dec
fbstp
mov
jp
pop
pop
je
or
push
cmp
popa
and
pop
sub
popa
pop
dec
int3
lock
xlat
xchg
cld
sub
loopne
decl
sbb
mov
in
lods
aas
pop
imul
adc
in
mov
clc
call
aad
dec
sub
sbbb
sahf
xor
add
outsb
jne
push
push
push
and
mov
push
and
xchg
pushl
add
loopne
insl
iret
lcall
cld
outsl
push
fildll
and
cwtl
rolb
jbe
jmp
xor
cltd
out
rclb
out
fisubrs
xchg
ja
push
lret
inc
inc
aad
testb
int3
aam
mov
dec
and
pop
insb
fisttpl
xchg
inc
jmp
aaa
ficompl
cmpsb
sub
adc
clc
inc
mov
jecxz
sub
xchg
inc
inc
outsb
test
mov
repnz
mov
mov
adc
pop
pop
mov
ret
aas
cmpsb
stc
sbb
adc
stc
sub
mov
or
in
or
loop
pop
cs
mov
nop
loop
cmp
push
lret
rcl
addr16
xor
cwtl
or
inc
xlat
das
mov
adc
hlt
orl
cld
mov
mov
xor
and
test
inc
or
mov
in
xchg
das
ja
inc
leave
cwtl
cmp
mov
jae
jae
jg
scas
gs
fbstp
in
jno
movsl
mov
inc
add
aam
roll
shrl
mov
test
aam
fstl
loop
rorb
xchg
pop
and
inc
xor
push
inc
lods
jg
sbb
cli
adc
add
adcl
jns
mov
jmp
lcall
jg
mov
lock
add
adc
sbbb
cmpsl
out
fisttpl
mov
and
pop
loope
loope
lock
xchg
dec
or
or
inc
imul
mov
jg
adc
fbld
rcll
pop
or
jmp
rclb
movsl
rorb
and
cmp
jg
mov
sub
icebp
iret
rolb
jns
inc
dec
loopne
sbb
js
jbe
es
out
mov
xlat
jg
pop
cmp
sub
xor
repnz
repnz
imul
shlb
xchg
pop
cs
jbe
aam
lahf
sbb
add
and
adc
xchg
iret
sub
xchg
mov
and
stos
pop
mov
jle
in
iret
add
lahf
testl
xchg
mov
test
mov
js
mov
andb
popa
mov
fs
fbstp
mov
movsb
add
lcall
lods
test
cli
jne
mov
fcoml
test
xchg
push
mov
xchg
cli
inc
adc
loop
sbb
cmp
mov
jg
pop
pop
push
in
cmpb
jne
xor
js
rol
pop
lea
insb
roll
pop
out
js
fstpt
adc
loopne
mov
mov
rorl
mov
pop
fistpll
dec
mov
push
loopne
subl
sub
pop
loop
inc
stc
sbb
cli
adc
or
ja
aaa
loopne
add
ss
cltd
sub
inc
ficompl
sub
jmp
and
push
mov
add
std
push
pop
mov
jmp
nop
inc
and
ffreep
pop
vaddsubpd
add
jl
add
push
pop
and
movsl
ljmp
fistps
aas
mov
adc
cwtl
aad
push
outsl
dec
scas
jle
mov
inc
or
leave
cmpsb
or
lea
insb
or
ljmp
jnp
jno
jno
cli
cmp
xchg
nop
cltd
mov
sbb
jp
gs
mov
and
lock
test
adc
cmp
in
enter
pusha
movsl
cmp
push
stos
jmp
sbb
mov
xor
xchg
push
jg
lods
cmp
lock
or
jb
into
rorb
in
cs
push
jge
and
shl
sbb
sbb
int
daa
jae
mov
mov
pushl
out
ds
xor
or
test
das
or
aam
xor
mov
outsl
sbb
sbbb
enter
fucomip
or
popa
mov
and
aam
jmp
pop
mov
es
rorb
add
xchg
fs
mov
insl
add
adc
sub
fcoms
xor
cmp
loopne
mov
push
xchg
dec
mov
pop
push
ss
movsl
loop
loopne
add
shlb
jo
push
in
insl
mov
jecxz
icebp
mov
pop
inc
or
mov
lahf
lea
mov
push
mov
loopne
add
or
push
je
inc
imull
in
xor
sub
sti
mov
mov
je
fisttps
xor
mov
dec
addb
test
lret
gs
mov
cltd
xor
pusha
inc
pop
gs
sbb
test
push
cld
pop
insb
pushf
mov
out
push
or
fs
push
pop
or
inc
mov
pop
lcall
ret
jbe
cmp
pop
or
test
mov
bswap
lret
jp
push
pop
fidivrl
add
inc
pop
dec
inc
lret
inc
inc
inc
test
ljmp
sbb
test
rcrl
lret
jne
push
jmp
add
push
and
adc
mov
cmpsl
mov
lods
sub
arpl
ret
lock
aaa
fdivl
jno
cli
dec
dec
lret
test
shrb
mov
or
lods
ret
aas
sbbb
dec
mov
bound
movsl
or
icebp
scas
mov
loope
mov
sub
jl
push
movzbl
clc
notb
nop
add
sbb
pusha
cmp
mov
add
jnp
lret
adc
cmc
les
jo
mov
xor
in
mov
xchg
dec
jle
dec
pop
or
test
sub
gs
loopne
mov
and
jns
sti
mov
inc
or
mov
sub
mov
mov
mov
jg
ret
orb
jg
jge
outsb
icebp
mov
inc
cltd
and
ljmp
ljmp
nop
fwait
lods
lea
push
cmp
jmp
stos
test
adc
mov
dec
jle
mov
in
pop
adc
test
testb
dec
sbb
xchg
xchg
fistpll
push
hlt
xchg
test
push
mov
das
mov
dec
fbld
loope
mov
arpl
sbb
jle
loope
jne
aad
movsl
mov
mov
ret
dec
add
sub
sbb
mov
mov
push
mov
pop
cli
call
cli
push
loop
pop
call
out
lods
jge
lods
mov
or
or
and
bound
sahf
sbb
jbe
pop
inc
sti
out
add
loope
cli
lea
ja
into
adc
mov
outsb
icebp
jl
mov
pop
push
hlt
sti
decl
mov
cmp
es
add
mov
sbb
lret
mov
dec
scas
dec
cmp
jne
jno
out
inc
sub
or
add
aad
push
push
cmpsb
adc
movsl
daa
dec
ja
into
jecxz
xor
aaa
mov
out
cmpsb
cmpsb
outsl
jmp
mov
jne
pop
js
cmp
cmpl
and
mov
adc
loopne
hlt
pop
cli
mov
iret
mov
shl
sarb
mov
mov
sbb
push
mov
clc
daa
inc
and
clc
insl
out
daa
clc
jle
xchg
dec
push
int
cmp
fwait
push
sbb
ret
dec
push
fdivs
hlt
es
es
aaa
imul
xor
pop
pop
cli
std
stc
fadds
sub
fcomip
out
imul
push
out
jo
pop
in
add
int3
inc
into
adc
repnz
jg
adc
pop
push
dec
ja
outsb
jp
hlt
push
add
call
data16
sbb
push
dec
cltd
out
add
pop
ljmp
inc
and
jg
cmp
mov
sub
add
imul
test
test
cmpsl
pop
mov
pusha
insl
fsubrl
push
xchg
aad
cmp
mov
test
sarb
inc
faddl
gs
dec
out
std
ja
in
call
pop
pop
out
lahf
adc
jecxz
cs
xchg
pop
lock
aam
aam
xchg
loopne
popa
cwtl
xchg
jg
loopne
xchg
scas
jp
pop
sbb
cmp
mov
mov
cli
pop
mov
mov
pushl
and
push
loop
pop
sbb
clc
xchg
adc
in
rcr
or
mov
repz
mov
mov
add
add
push
js
mov
mov
or
je
xchg
rep
pop
jg
popa
sbbb
xchg
or
or
movsb
lods
fstpl
das
rcll
dec
pop
stos
outsl
cli
mov
push
dec
mov
push
loope
dec
mov
cld
add
rclb
addb
cmp
push
fwait
xor
hlt
arpl
aaa
aas
test
add
dec
lret
ss
push
sbb
movsl
les
jbe
insl
test
dec
add
out
mov
push
sbb
ss
aas
fcoms
fs
inc
inc
js
bound
lods
lret
pop
inc
movups
xchg
mov
shlb
mov
xor
outsb
adc
sti
mov
in
xchg
incb
mov
cmpsb
repnz
arpl
mov
push
push
loop
sub
mov
pop
and
js
xor
aad
push
cmpb
xlat
sub
pop
mov
push
popa
lea
addr16
pop
ljmp
sbb
ss
es
testl
fiaddl
adc
mov
js
inc
or
in
mov
push
inc
repz
pushf
pop
cwtl
sub
sub
sub
into
imul
pop
test
mov
leave
xchg
push
dec
cmp
fs
adc
cmp
arpl
adc
cld
cwtl
imul
cmp
leave
sahf
in
cmp
in
pop
cltd
fnstcw
push
cmp
xchg
xchg
sub
xchg
push
adc
test
push
cmp
arpl
lods
bound
or
cld
jg
add
cli
fstps
cli
xlat
subl
cld
xchg
cmc
cmpsb
push
sbbb
cli
repz
sbb
dec
call
fcomp
insb
mov
insb
sbb
data16
insl
adc
scas
and
push
add
or
je
setb
push
mov
mov
mov
pop
lock
mov
sub
test
xlat
mov
das
cltd
fwait
or
stc
and
fisubl
dec
add
jecxz
xchg
lea
xchg
inc
adc
push
nop
mov
incl
scas
fs
vmread
daa
iret
sub
jg
ljmp
ds
outsb
pop
call
inc
sbb
ss
lret
not
xchg
lret
jae
icebp
sbb
leave
mov
mov
addr16
or
xchg
popa
adcl
jp
out
in
fnstsw
or
xor
or
xorb
ss
std
dec
dec
cmp
push
push
pushf
scas
ja
push
lock
ss
icebp
mov
dec
add
ds
adc
cmp
lods
addb
inc
inc
pop
add
mulb
fstl
xor
mov
fs
pop
lods
in
negb
adc
aas
cmpl
mov
loopne
add
jns
stc
sarl
sub
mov
pop
dec
mov
rorl
hlt
movsb
pop
rcrl
mov
and
xchg
jo
cmc
push
cli
in
pop
or
or
dec
call
icebp
insb
test
je
cmp
pop
mov
or
xchg
jne
shlb
mov
pop
ficoms
mov
and
mov
std
or
dec
xchg
pop
inc
mov
test
aad
xor
aam
lods
loopnew
jg
cli
inc
in
cld
or
pop
sahf
adc
in
fbld
dec
add
daa
sbb
mov
sub
or
incl
jnp
add
jp
mov
dec
pushf
and
cmp
stos
rolb
decl
in
aaa
or
int
out
jb
dec
mov
idivb
sub
enter
dec
lock
mov
pushl
pop
add
dec
cmp
push
xor
jno
dec
sbb
jp
loopne
inc
mov
sub
mov
xlat
mov
mov
nop
sub
ja
cmp
xchg
mov
mov
outsl
and
out
jbe
popa
js
testb
outsl
fs
out
adc
jo
pop
incl
mov
mov
inc
sub
test
add
imul
cmp
in
cmp
sbbl
sub
adc
push
add
jne
jmp
or
pop
subb
icebp
adc
inc
mov
sbb
cld
aaa
pusha
mov
jne
pop
xor
cli
cmp
test
mov
and
pop
loopne
ret
cmc
cmp
mov
std
cltd
mov
cld
or
and
dec
sbb
clc
xchg
jecxz
jnp
push
push
pop
xchg
mov
std
leave
push
inc
pop
ljmp
loopne
loop
lock
mov
lock
insl
gs
xlat
clc
and
sarb
or
jle
into
lock
rcr
sbb
jecxz
inc
push
stc
dec
xchg
xorl
pushf
mov
sub
decl
inc
pop
lock
frstor
cltd
popf
xchg
fistpl
push
adc
fstpl
cli
fsubrl
lea
sbb
push
imulb
repnz
jnp
fdivs
out
mov
lods
ret
mov
outsl
mov
mov
fcomip
push
inc
adc
pop
and
test
dec
ds
test
lcall
testl
leave
xadd
fs
and
imul
lds
mov
or
or
xchg
ljmp
dec
or
push
sbb
push
dec
out
loop
dec
mov
jle
stc
jmp
or
fsubrl
jmp
inc
pop
testl
ret
fsubs
mov
xchg
cmc
outsb
ljmp
pop
pop
push
mov
cmp
es
pop
or
pop
inc
inc
nop
mov
ds
push
jae
rcrb
fbld
inc
mov
or
mov
daa
cli
jnp
xorl
cld
and
les
pop
mov
pop
into
inc
aaa
pop
mov
inc
cmpsb
push
mov
lods
dec
out
ret
xorb
shl
xchg
pop
cmp
mov
out
push
aaa
push
es
inc
xorb
decb
pop
cli
mov
dec
test
cmp
cltd
mov
test
xchg
fwait
pop
mov
cs
nop
jge
pop
jp
call
mov
lock
pop
adc
lock
mov
mov
mov
pop
mov
mov
sub
xor
jb
popf
adc
xchg
inc
shrl
push
pop
call
je
jbe
push
jl
sbb
std
jmp
sbb
test
fsubl
rcll
pop
mov
xchg
enter
int
sbb
adc
insl
sbb
inc
cmp
ret
mov
fcomi
push
adc
scas
or
iret
iret
jmp
cwtl
cmovne
call
cld
clc
adc
sub
push
pushf
push
fiadds
cwtl
mov
sub
or
test
or
aam
clc
ret
popa
sti
mov
in
in
jg
lock
push
and
les
dec
cld
and
hlt
pop
pop
push
sbb
adc
inc
or
fbld
xchg
loop,pt
cld
inc
inc
int3
rolb
lret
add
pop
repnz
std
mov
scas
push
mov
icebp
out
sahf
xor
sbb
and
dec
jb
mov
dec
loopne
fwait
cmpsb
sti
ret
das
lods
jg
out
call
filds
mov
jg
cltd
xchg
mov
push
imul
jmp
clc
and
hlt
inc
push
cli
cli
mov
jg
test
popa
mov
cmc
and
inc
sbb
out
incb
pop
sub
add
test
jo
sbb
loop
ja
push
xchg
out
fs
push
lea
movsl
jg
scas
lcall
adc
vcvtps2dq
pop
daa
cmp
fcmovb
lcall
popa
testl
sahf
and
leave
ljmp
loope
into
dec
and
jmp
outsl
mov
call
or
lret
sub
pop
mov
test
scas
add
dec
xchg
adc
inc
sbbb
jno
adc
xor
lods
xchg
fstl
lea
stos
push
test
sub
cli
jb
inc
outsl
mov
mov
cmpsl
movsb
xchg
mov
arpl
dec
push
shrb
xchg
hlt
std
mov
pop
mov
jns
loope
cwtl
sbb
dec
jge
jmp
jge
dec
lea
test
cmp
les
xchg
or
out
clc
lret
mov
adc
cmp
pop
fistps
jne
in
xchg
mov
out
loopne
nop
out
stos
sbb
mov
in
cmp
aad
dec
daa
pop
mov
dec
lock
cmpsb
fucom
lcall
jge
lcall
cwtl
sti
xor
push
lock
dec
mov
cld
inc
lods
fldenv
loopne
popf
mov
movsl
dec
mov
sub
outsl
clc
das
cltd
shrb
push
push
dec
adc
xor
test
push
mov
lret
sub
in
stos
and
insw
fists
push
idivb
xor
test
fs
push
clc
inc
jl
es
or
pop
hlt
mov
mov
cli
rorl
decl
fcomps
test
imul
pop
pop
mov
cmc
jg
push
mov
insl
add
jmp
dec
scas
xor
xor
dec
pop
jecxz
gs
filds
xchg
and
mov
lea
lcall
cmc
push
xor
add
test
pop
insl
add
pop
inc
adc
adc
test
cmpsl
and
mov
call
neg
movsl
es
xchg
loope
and
mov
ljmp
sbb
cwtl
pop
adc
sbb
call
or
sub
mov
fwait
pop
sub
stos
sbb
push
mov
jmp
mov
movsb
mov
pop
cs
aad
pop
loopne
or
sarb
lret
jbe
jecxz
pop
lret
nop
rclb
bound
mov
dec
shlb
clc
mov
bound
or
stc
lcall
test
inc
adc
xchg
sub
fsubs
pop
mov
mov
mov
outsl
add
pop
ss
or
pop
inc
mov
and
cmc
jbe
xchg
fdivp
pop
inc
out
out
mov
dec
pop
cs
mov
aaa
add
sub
mov
shlb
out
roll
mov
jle
dec
jecxz
mov
push
clc
lods
fldt
or
repz
test
daa
adc
xor
enter
in
sbb
inc
cltd
mov
hlt
cwtl
add
add
ds
adc
sub
js
mov
rcl
mov
lock
cmp
mov
jmp
push
loopne
stos
sub
ds
ljmp
xchg
hlt
call
cmp
outsl
mov
shlb
xchg
rolb
xor
nop
xor
dec
cmc
mov
testb
repz
je
fdivr
test
clts
cmp
cmpsb
mov
mov
pop
rcr
shlb
lret
insl
cmp
or
or
mov
loope
adc
pushl
or
lret
popa
mov
inc
and
and
aad
push
in
sub
lods
add
je
fisttpl
mov
fstl
sti
sahf
pop
dec
iret
dec
outsl
clc
jg
jbe
xor
jbe
arpl
scas
mov
mov
lock
dec
lods
into
xchg
data16
daa
xchg
pushf
jae
jg
loope
das
dec
sub
jnp
popf
cmp
cmp
leave
mov
jne
jnp
adc
cmpl
push
pop
xor
mov
jo
lock
and
test
mov
sahf
out
shlb
cmp
add
mov
rclb
sbb
out
notl
push
pop
call
xchg
sub
or
or
dec
adc
or
pusha
js
jecxz
add
std
pop
push
inc
cmp
enter
mov
out
test
scas
int3
sbb
cmc
movsl
pop
mov
dec
stos
lock
xor
mov
dec
lods
or
sub
xchg
adc
fildll
mov
and
ret
enter
and
add
loop
push
inc
cmp
add
js
inc
push
dec
and
shrb
cmp
movsb
xorl
mov
adc
notb
add
inc
stos
add
ret
cwtl
leave
pop
js
test
out
sahf
xchg
es
cli
xchg
push
mov
mov
lcall
jne
push
sub
inc
jg
js
rolb
leave
enter
in
and
ja
adcl
push
int3
xchg
push
shl
cmc
lods
dec
insl
imul
sbb
sbb
fsubrl
gs
pop
adc
fsts
test
aas
clc
gs
shlb
add
ljmp
and
cmc
sub
or
xor
ja
dec
outsb
mov
adc
fdivrl
xchg
sbb
sbb
mov
ljmp
call
mov
push
inc
adc
mov
loope
and
adc
jge
adc
lock
add
xlat
enter
push
mov
pop
xchg
sub
fcmove
ss
clc
pop
loopne
adc
mov
sbbb
mov
pop
lock
stos
xor
pop
xorb
out
push
in
add
jae
rcr
aad
dec
xor
fstps
push
repz
sub
jmp
je
out
xlat
cs
xchg
jmp
pop
dec
fsubrs
test
mov
mov
xchg
inc
scas
movsb
dec
and
arpl
pop
cli
cmpsb
movsb
sbb
xchg
and
pop
adc
lcall
cld
jo
ret
jmp
mov
add
mov
outsl
inc
mov
mov
mov
mov
or
lcall
icebp
push
movsb
mov
push
hlt
pop
xchg
bound
fadds
xchg
aam
cmpsl
jecxz
scas
sbb
add
inc
scas
lock
mov
repnz
cmp
outsb
fdivl
cli
add
pop
popa
push
incb
or
add
stc
arpl
adc
mov
xchg
cmpsb
ljmp
cli
add
pop
mov
bswap
or
push
icebp
dec
xchg
pushf
pop
arpl
mov
fucomi
mov
dec
jbe
mov
and
cmp
lret
or
int
mov
data16
cmp
lea
int
sbb
mov
xchg
dec
mov
push
loopne
cmp
lret
sub
jecxz
add
add
pushl
xchg
or
testb
pop
xor
lea
cmc
or
mov
and
or
and
xchg
into
mov
pusha
xchg
or
sbb
pushf
xchg
adc
xchg
mov
xchg
jl
cs
or
jno
js
add
test
mov
sub
test
imul
push
push
rolb
sbb
jnp
push
fists
ficoms
mov
mov
cmc
fwait
dec
in
and
dec
hlt
and
hlt
add
jo
fildl
mov
xchg
test
sbb
fwait
bound
icebp
rclb
push
sub
sbb
test
mov
into
mov
pop
sbb
fdivrs
and
cmp
inc
push
ret
movsl
mov
cmp
push
subb
lret
xchg
icebp
jmp
andb
jge
es
mov
dec
in
add
leave
shlb
les
aaa
cwtl
cli
and
push
inc
pop
out
xor
and
daa
xchg
cwtl
icebp
xor
shl
mov
nop
add
fcomp
and
pop
clc
pop
mov
cli
and
inc
push
ss
fwait
add
mov
dec
call
test
pop
add
loop
sub
sbb
inc
dec
mov
mov
imul
add
mov
test
incb
push
push
or
cmp
xor
ds
push
insl
and
sarl
cmc
adc
ret
adc
pusha
mov
lods
std
lock
sbb
loopne
dec
lds
push
in
call
outsl
mov
cmpsl
aas
pop
bound
inc
hlt
push
push
xchg
mov
or
pusha
xchg
outsl
in
inc
incl
inc
lcall
mov
roll
std
sbb
sti
leave
aam
xor
insb
addr16
hlt
mov
or
repnz
ss
cmp
insb
ljmp
xor
sub
xchg
push
or
rolb
stos
lcall
inc
jo
shlb
in
push
xor
out
lods
dec
inc
orl
inc
xchg
scas
mov
mov
stos
rcrl
rclb
mulb
mov
rclb
sbb
pop
pop
push
mov
repnz
bound
jecxz
push
jg
sub
mov
addr16
cltd
jnp
dec
inc
sbbl
mov
call
ds
xor
pop
mov
and
pop
loopne
push
inc
test
mov
shrb
sahf
pop
xchg
sub
push
cmp
or
cmp
es
adc
rcll
cs
fwait
mov
ljmp
jge
inc
outsl
adc
insb
jl
lea
pushf
jnp
pop
and
mov
sbb
das
cmc
lods
xchg
mov
out
aad
leave
dec
loopne
pop
dec
loopne
jl
adc
adc
cld
outsl
mov
fisttpll
cmp
fisubs
mov
ret
sbb
dec
mov
ljmp
mov
stos
into
push
inc
adc
mov
out
testl
cmpsl
incl
push
pop
mov
push
push
mov
inc
lcall
decl
int3
in
lahf
pushw
andl
push
bound
xor
addr16
das
mov
sub
out
jg
fcoms
fldenv
mov
pop
iret
lcall
fistl
xor
scas
xchg
call
mov
je
sub
icebp
mov
iret
xor
adc
or
clc
movsl
in
in
lea
sub
out
in
jle,pn
jb
popa
mov
inc
cmc
xchg
outsw
mov
movsl
mov
inc
push
pop
mov
shlb
mov
cmpl
adc
das
rol
das
jns
bound
mov
mov
pop
pop
xchg
cmc
scas
scas
dec
sub
mov
jg
dec
movsb
loope
flds
jl
dec
addr16
mov
push
into
adcl
mov
and
icebp
fldt
icebp
loope
mov
cld
fadd
jno
jns
rcl
lods
or
mov
adc
loope
call
mov
insl
cmp
bound
pop
mov
jae
addl
cs
push
push
addb
cmp
push
pop
fsubs
push
sbb
mov
jnp
fstpt
mov
std
inc
sub
ss
fisubl
mov
cmpsl
cmc
mov
cld
pop
cmp
pushl
add
jnp
add
mov
in
sar
mov
jg
int3
divb
ror
aas
sbb
lock
add
mov
clc
inc
and
fnsave
into
add
mov
les
fcom
cld
jl
shrl
lcall
test
stos
es
sbb
adc
mov
push
sbb
imul
shrb
jbe
mov
pop
mov
scas
inc
ja
ds
aad
mov
jnp
dec
mov
mov
scas
fucompp
and
cli
push
pop
sub
loope
xchg
and
or
orl
inc
push
pop
cmp
sub
xor
or
stos
roll
aam
pop
mov
adc
mov
cmp
push
test
adc
lods
dec
and
fcomip
ljmp
setge
jl
jno
mov
ret
imul
adc
push
sub
movsl
pop
dec
loope
mov
fldl
xchg
xchg
push
cmp
cs
mov
test
call
divb
fmuls
push
orl
push
flds
cmp
mov
adcb
jb
sbb
gs
stos
adc
movsl
into
fisubrl
xchg
in
push
insb
adc
cld
lods
filds
lds
pop
shlb
ljmp
fisubrs
scas
ret
lods
sarb
icebp
pop
clc
xchg
in
ss
jnp
mov
cmpl
loope
pop
lock
das
shl
imul
inc
add
jmp
ss
popf
xor
sub
aaa
mov
add
add
mov
jae
insl
subb
outsl
aaa
xchg
xor
cs
sbb
in
and
mov
les
inc
adc
addl
ljmp
fbld
popa
pop
pop
mov
add
add
xchg
pushf
adc
mov
sub
mov
into
std
js
inc
into
mov
jmp
cli
adc
push
xor
adc
fildll
mov
lds
aam
or
add
outsb
fwait
inc
push
lock
add
mov
mov
pop
pop
dec
aas
dec
cmp
adc
lret
mov
cmpsb
icebp
push
roll
and
nopl
sub
fcmovbe
jnp
or
dec
mov
stos
scas
mull
xchg
out
push
mov
xchg
jne
adc
fcompl
fst
lock
pop
push
and
xchg
jo
jne
adc
pop
mov
adc
push
jns
push
push
cmp
jle
cmc
ljmp
aaa
pop
out
sbb
jl
sub
cmp
stos
mov
sti
xchg
cltd
xor
or
xchg
fwait
push
mov
mov
xor
add
leave
add
mov
xchg
xor
enter
and
mov
pusha
js
add
push
push
or
inc
ljmp
adc
cmp
or
sub
out
jg
xlat
popa
dec
or
movsb
adc
pop
fimull
lods
mov
cmpsb
mov
and
repnz
lret
addr16
pushf
cmp
sub
add
mov
mov
jmp
pop
inc
cmp
add
out
lcall
inc
pusha
lret
scas
adc
mov
and
in
mov
iret
das
jne
add
adc
jne
outsb
leave
mov
inc
jnp
adcb
mov
jecxz
aaa
and
fwait
mov
out
sbb
insl
psrlq
iret
aam
rclb
aad
sti
lds
mov
aas
int3
ss
jne
sub
add
jne
pusha
mov
cmc
outsb
jae
push
repnz
and
adc
push
jp
cmp
or
scas
aam
test
bound
int
hlt
out
cmp
and
push
xchg
cmp
incl
jecxz
push
cwtl
push
data16
idivb
mov
mov
ljmp
pop
inc
jmp
in
cltd
shl
jo
mov
not
add
xchg
xchg
and
push
fwait
into
pop
cli
ret
adc
pop
cmp
out
ret
ret
js
insl
es
jg
sub
int3
aaa
out
cmp
mov
cmp
xor
or
bound
outsl
mov
xchg
pop
and
fwait
jle
clc
in
sbb
adc
or
inc
mov
xor
push
loopne
add
lret
cmp
dec
int3
sub
mov
cmp
mov
sub
fnstcw
loopne
dec
stos
dec
cmp
movb
andb
int3
push
cmp
add
jmp
mov
outsl
testb
pushf
push
or
adc
jg
pop
clc
test
lret
insl
cs
sub
scas
inc
mov
dec
push
clc
mov
pop
cmp
add
shrb
daa
or
clc
arpl
inc
nop
fnstsw
jecxz
repz
incl
aaa
je
xchg
push
xchg
sbb
sarl
cmpsl
or
aam
push
inc
jle
jle
mov
xchg
xcrypt-cfb
cmpsl
mov
ret
int3
arpl
lock
int
aam
dec
and
mov
and
dec
sahf
leave
dec
xchg
ret
imul
fcmovnb
adc
push
mov
pop
sbb
and
mov
push
pop
jb
int
dec
fsubp
leave
jg
xchg
sti
mov
jmp
or
js
or
fs
stos
sbb
cld
lods
loop
dec
xor
or
cmc
or
movsl
jl
mov
pop
or
cltd
cmp
in
and
sub
notl
leave
shlb
mov
inc
adc
lret
jnp
dec
cld
and
loop
or
or
ret
inc
stos
jbe
in
clc
loope
stos
gs
out
add
in
rcl
xor
pusha
and
add
add
sub
jecxz
arpl
fists
fldcw
cmp
inc
push
pop
push
lea
in
jge
xchg
xchg
ret
mov
mov
dec
adc
lcall
addr16
out
pop
repnz
push
adc
mov
ret
mov
stc
into
mov
jbe
sbb
and
data16
scas
mov
sub
movsl
cmpsb
inc
insl
fs
xor
inc
lods
test
ljmp
test
repz
and
into
jmp
pop
pop
lcall
std
or
repnz
jb
mov
aas
std
pop
jo
test
add
mov
jb
add
jno
pop
mov
push
xchg
mov
lret
call
dec
clc
mov
jnp
inc
in
addr16
shlb
lahf
jecxz
push
aam
push
icebp
mov
out
mov
pop
sbb
lods
mov
pop
aam
dec
sbb
mov
scas
clc
jnp
inc
aad
inc
or
decb
mov
test
xchg
lcall
cld
enter
sbb
or
fs
xor
sbb
lret
mov
out
add
cmpb
pop
mov
clc
or
sub
mov
xor
mov
dec
jmp
icebp
sbb
pop
clc
inc
rorb
sbb
aaa
cmc
sbb
mov
and
and
faddp
sbb
std
les
mov
mov
and
popf
jmp
lcall
and
roll
out
inc
and
push
dec
xchg
scas
or
out
jmp
es
not
inc
jle
test
iret
pop
pop
mov
insl
in
sbb
jmp
outsb
out
cmp
and
movsl
orl
lock
fwait
hlt
mov
push
clc
rcrb
xchg
jnp
inc
cmp
sub
mov
add
fs
pop
cli
mov
xchg
decb
mov
rorb
lods
lea
pop
outsl
fimuls
lret
js
mov
outsl
sarb
les
stos
ret
data16
and
mov
xor
and
or
cli
shlb
mov
add
xchg
pop
mov
pop
jge
jbe
shlb
jecxz
arpl
add
and
mov
js
cmp
sbb
icebp
mov
fdivs
push
push
inc
mov
je
sti
mov
mov
sub
hlt
push
nop
jge
sbb
sbb
fists
test
arpl
test
jb
pop
aam
mov
hlt
mov
or
cmp
sub
sahf
dec
jbe
mov
repz
inc
xchg
push
dec
iret
mov
stos
dec
adc
or
out
xchg
hlt
das
mov
mov
cld
xchg
jecxz
imul
mov
cmp
in
ret
lahf
or
das
dec
pop
cmc
dec
inc
loopne
mov
icebp
xchg
add
sub
jne
add
mov
inc
fwait
mov
jp
int3
add
test
out
outsl
loop
sti
add
lock
cmp
std
je
cmpsl
pop
inc
adc
push
push
insb
fists
es
shrl
loope
xchg
mov
or
dec
push
mov
pop
mov
and
adc
loop
decb
loope
mov
in
jo
xchg
sub
fmul
rcrb
into
add
xor
push
push
movsb
push
loop
jge
aaa
cmp
arpl
xchg
ficoml
sbb
xchg
popl
or
jne
pop
lods
repnz
or
out
pop
pop
and
push
push
mov
loop
lods
mov
sub
and
lock
jge
cld
fimuls
dec
stos
dec
popa
fistps
cmp
lahf
inc
imul
ret
mov
mov
mov
cmp
xor
push
ss
push
xor
or
or
rorl
mov
jnp
pusha
scas
mov
xor
insb
popl
mov
mov
mov
pop
jle
out
pop
sub
repnz
xchg
pusha
incl
stos
jge
mov
lea
xchg
outsb
ja
lods
decl
pop
xchg
mov
and
es
cmp
and
pop
fmull
fcoms
clc
imull
addl
push
xor
cmpsb
loope
pop
mov
clc
sbb
inc
hlt
ss
mov
adcb
pop
hlt
pop
cmp
inc
test
sbb
lcall
enter
or
xor
insl
aad
gs
pushl
out
push
xchg
lahf
pop
sub
call
std
lcall
mov
and
aas
movsb
or
mov
xor
aaa
mov
arpl
lret
movsb
sbb
subb
pusha
and
fstpl
sbb
mov
popf
or
sub
cmp
into
mov
sub
cltd
in
pop
push
jecxz
out
lea
and
scas
test
mov
nop
pusha
cmp
lds
scas
push
inc
ret
or
ret
cld
push
subl
xor
or
push
outsl
inc
iret
je
es
dec
repz
nop
push
lcall
js
push
popa
lods
pop
aad
cmpsb
sbb
pop
sar
fcmovbe
push
lret
loopne
shlb
jge
decb
jp
sub
inc
sub
jne
fistpll
xor
test
bnd
je
decl
mov
jmp
or
repnz
pop
sbb
push
decl
fs
inc
aam
push
sbb
fistl
push
mov
xchg
les
jbe
ja
icebp
or
mov
sub
cmp
mov
in
pop
sbb
mov
mov
inc
mov
ja
or
ss
xlat
shrb
test
push
mov
mov
and
addr16
jge
push
lret
cwtl
sbb
insb
in
and
pop
add
mov
mov
cmp
pushf
jl
ljmp
sub
subl
call
outsl
sub
leave
fs
mov
jle
nop
js
pop
sbb
xor
ljmp
mov
adc
cltd
xchg
inc
mov
mov
pop
mov
jg
loop
push
pop
test
and
lea
hlt
mov
lods
inc
xchg
mov
jecxz
xchg
sbbb
dec
pusha
dec
xor
sub
rorb
mov
call
sub
dec
repz
dec
popa
pusha
jecxz
or
and
mov
sbb
mov
lea
sbb
ret
aad
adc
js
xchg
aaa
push
inc
sbb
jle
in
ljmp
and
fimull
jb
push
xchg
sub
dec
ret
js
loopne
cmpsb
xor
xchg
push
push
faddp
or
mov
cwtl
repnz
inc
dec
out
fidivrl
jmp
mov
adc
xchg
ss
cli
icebp
fucomip
jle
sub
jle
xor
aad
fwait
cli
sbb
push
and
sub
mov
jb
jmp
push
inc
decl
sbb
add
fdivl
sbb
pop
clc
outsl
sahf
xchg
jb
cmp
outsb
sbb
hlt
sbb
cmc
ja
sub
mov
sarl
test
roll
test
adc
fldt
rcrl
mov
xchg
or
pushf
sbb
lock
and
jb
jmp
lsl
shlb
pop
inc
sahf
in
mov
mov
push
pop
vpsrlw
test
jg
push
push
pusha
fsubrs
cmpsl
add
sbb
ficoml
add
push
sub
lds
faddl
cmpsl
sbb
mov
xlat
xchg
sub
inc
out
sti
addr16
mov
pop
xor
mov
mov
xchg
movsl
incl
imul
add
jae
in
mov
mov
push
rol
cmp
push
and
inc
push
add
insb
inc
mov
insl
pop
pop
cmp
and
aam
stos
add
mov
push
outsb
push
test
inc
cld
movsb
mov
jne
fisubrs
cli
call
push
ret
stos
mov
pop
pop
mov
std
or
in
lods
rcl
in
fdivs
push
bound
in
mov
jne
movsb
mov
inc
in
rcr
in
out
call
or
or
iret
dec
lock
clc
movsl
add
cmc
push
test
fcomip
aas
lods
in
pushf
dec
aaa
and
nop
push
or
aad
arpl
sbb
xor
jns
test
popf
cld
sbb
out
test
ret
jl
in
imul
cmpsb
mov
adc
inc
stos
aas
mov
jg
jnp
push
ss
dec
shll
or
sbb
sarb
in
mov
fcmovu
mov
shlb
xor
cmp
hlt
xlat
xor
cli
adc
in
ds
cmc
lods
and
in
mov
push
das
dec
inc
nop
dec
cmpsl
mov
movsb
mov
out
cli
dec
dec
pop
inc
movsb
fidivl
andb
aam
and
call
xchg
lds
xchg
cmp
movsb
inc
adc
mov
jp
sub
push
sub
inc
divb
mov
adc
cmp
mov
cmp
and
adc
or
jl
push
mov
jg
inc
mov
loop
pusha
nop
sbb
icebp
dec
inc
popf
push
shl
aaa
sub
cli
or
fs
cmp
aad
sbb
repnz
push
mov
mov
sub
lahf
sarb
fstps
aad
aam
pop
lcall
pop
loop
cld
rorb
xchg
push
mov
in
cmp
inc
jnp
jg
and
fdivrl
sub
leave
lret
loopne
cld
pop
pop
jbe
mov
je
lods
xor
inc
inc
addl
add
out
xchg
jae
mov
lods
or
and
incb
mov
outsl
and
jp
lock
mov
dec
add
out
push
fisubs
dec
imul
push
call
adc
insl
stc
imul
push
sti
and
inc
dec
ja
test
incb
int
cmp
adc
mov
sbb
push
adc
stos
incl
cmc
mov
imul
out
push
test
jecxz
or
cs
inc
jne
loope
pop
popa
mov
clc
aaa
add
mov
repz
shl
cli
push
hlt
negb
rcrl
test
add
rcl
sbb
adc
hlt
out
cltd
dec
das
push
fs
call
add
jecxz
pop
mov
imul
sti
notb
push
int
shll
push
mov
loopne
lcall
das
cld
mov
fsubrp
loopne
sahf
inc
ja
pop
lahf
and
xchg
mov
call
dec
push
fstpl
dec
push
pushf
in
aaa
clc
mov
or
icebp
xor
sub
jnp
mov
xlat
aam
mov
lret
stos
or
in
pop
push
adc
clc
mov
mov
in
fldt
xchg
mov
cmpsb
orl
mov
aaa
jl
cltd
popa
sub
push
jbe
ljmp
call
fistps
dec
bound
dec
and
call
mov
in
and
ljmp
std
in
imul
mov
push
push
jmpw
call
cli
adc
bound
out
or
in
inc
mov
icebp
daa
addr16
movsl
adcb
sbbb
rcrl
fbstp
shrb
loope
jg
mov
outsb
cmp
cmp
and
sub
jne
cs
and
cli
jmp
dec
ds
push
pop
pusha
sarb
add
test
cwtl
dec
dec
xchg
push
push
mov
mov
jg
mov
mov
insl
push
mov
inc
jmp
mov
push
mov
hlt
mov
adc
test
js
mov
jle
les
mov
sbb
gs
fistpll
popf
jns
jno
mov
jns
xor
and
dec
enter
enter
fistl
cli
into
fsubl
clc
into
or
movsl
andl
jg
test
sub
sbb
dec
sub
pop
jno
outsb
ljmp
jp
cmp
or
dec
xor
add
bound
insl
loop
and
inc
clc
test
loop
std
inc
sti
mov
loop
repnz
pusha
push
out
ja
pop
enter
pushl
fisttpll
orl
mov
outsl
xor
jle
or
jbe
mov
push
xor
std
xchg
mov
xchg
add
xchg
mov
ret
mov
loop
leave
xchg
test
mov
sub
xchg
incb
jp,pt
mov
cmp
notl
mov
cld
incl
mov
sub
sbb
or
pop
sti
dec
repnz
pop
loopne
add
fcomip
aaa
leave
pop
pop
xor
dec
add
inc
inc
cli
mov
ret
adc
dec
fcmovb
xchg
out
shrl
push
mov
inc
cmc
repz
cmp
es
sub
pop
test
pop
push
xor
sbb
xor
xorb
mov
inc
mov
jno
incl
mov
loope
sbb
jb
test
adc
jmp
repnz
clc
jg
sti
and
cmp
mov
xchg
mov
cmp
mov
lret
jg
in
decl
stc
mov
clc
or
mov
outsl
in
mov
mov
mov
xchg
rcrb
xor
cs
sbb
sub
dec
les
dec
stos
imul
loop
cld
in
movsl
sbb
inc
in
in
mov
jo
sbb
push
hlt
jg
and
cmp
pushf
loop
cli
pop
orb
fildl
pop
test
inc
mov
jecxz
sbb
scas
sahf
pop
sarl
lret
repz
pop
push
lret
clc
filds
or
xor
jo
scas
sbb
clc
add
mov
xor
fldt
mov
adc
lock
outsl
add
xor
ss
in
loope
fildll
aaa
sbb
pop
mov
cmp
pop
mov
imul
stos
xlat
dec
inc
mov
and
adcb
push
cmc
cmp
int
stc
scas
adc
test
jo
cmc
ljmp
fnstenv
jns
arpl
jg
or
fwait
cmp
cmpsl
push
dec
push
jne
cmpl
push
cmpsb
mov
pop
fs
je
inc
mov
outsl
mov
stc
adc
mov
test
mov
mov
jle
icebp
fildll
adc
pop
shrb
fwait
enter
mov
push
shl
sbb
add
inc
insl
bound
add
popa
jnp
and
ljmp
push
in
daa
cmp
std
pop
clc
in
test
xor
pusha
sahf
push
data16
sub
test
mov
fsubrl
movsb
dec
sbb
jae
out
mov
clc
mov
inc
mov
pusha
fsubrs
shlb
xchg
call
push
dec
mov
dec
insb
inc
add
xor
mov
lds
dec
adc
clc
sub
and
cmpsb
incl
into
inc
test
out
or
sbb
xlat
mov
push
dec
cmpsb
sub
fcmovb
xor
sub
shlb
in
sbbl
add
shr
ret
ljmp
loop
ficoml
ficomps
jne
jmp
cmp
pop
add
std
sbb
jno
add
js
or
pop
add
fimull
mov
mov
cmp
sti
mov
aaa
insb
mov
mov
les
stos
or
jnp
shll
hlt
push
lcall
ss
call
je
or
mov
scas
testb
sub
mov
sbb
out
inc
scas
cmpsb
pop
ds
js
daa
and
fcomi
jbe
arpl
mov
add
mov
jge
adc
clc
mov
or
das
ret
sub
sbb
lock
fcom
push
mov
push
lock
fstps
scas
addr16
push
mov
pop
and
fiadds
das
lret
dec
push
cmp
cmp
das
mov
dec
jg
lods
js
outsl
mov
outsb
mov
add
test
andb
ret
jb
dec
insl
or
out
nop
mov
mov
jge
mov
and
push
mov
push
sbb
lock
adc
mov
lret
add
adc
mov
push
iret
mov
xchg
inc
ljmp
rcrb
adc
xlat
cltd
xchg
jge
ret
mov
sahf
jbe
jne
lret
int3
cmp
lahf
pop
imul
mov
adc
lods
aam
jmp
mov
pop
fcomps
mov
jl
cltd
hlt
repz
lret
mov
rcrl
movsb
adc
cmp
movsl
idiv
test
mov
adc
mov
aas
loopne
iret
mov
mov
mov
or
or
and
outsl
jne
lods
rcrb
dec
nop
std
cmp
sbb
pop
add
mov
orb
inc
fstpl
sub
insb
jg
add
xor
jecxz
pop
in
imul
mov
sti
les
fsubrl
jl
nop
ss
into
fmulp
adc
mov
mov
add
push
movb
dec
push
xor
cld
ja
shll
jb
sbb
loope
outsb
das
sub
pushf
shl
inc
sub
loope
inc
adc
xchg
or
and
test
inc
mov
jle
pop
mov
loope
jl
sub
mov
or
jg
arpl
add
sbb
push
sarb
adc
cwtl
push
hlt
clc
push
ljmp
fdiv
and
pop
movsl
call
pop
jecxz
fldt
xchg
jbe
out
push
add
mov
test
sub
mov
sub
imul
sub
packsswb
lods
pop
jle
aaa
test
jmp
cmp
aaa
mov
dec
lods
xchg
nop
neg
inc
iret
pushl
adc
dec
adc
push
aas
scas
cmpsb
es
jl
or
dec
cmp
cmc
pop
sub
xchg
int
bound
mov
xchg
xchg
or
add
rorl
popa
and
aam
pop
jo
dec
add
mov
sub
popl
ljmp
stos
or
repz
dec
sub
leave
imul
rolb
es
icebp
sub
mov
dec
insl
jns
push
xchg
lea
sub
push
insl
jl
xchg
and
mov
sbb
movsb
jg
cld
dec
lcall
dec
mov
xor
add
inc
fcomps
pop
pop
pop
ret
inc
adc
sti
dec
test
pop
ret
and
mov
ret
and
adc
and
decl
and
adc
adc
pusha
inc
add
inc
and
dec
adc
or
sti
mov
adc
adc
adc
or
inc
and
mov
pop
xor
sub
nop
cmp
or
mov
insb
fildl
adc
inc
pop
cmp
inc
push
nop
adc
and
dec
jbe
je
inc
push
mov
and
and
and
xor
dec
inc
xor
pop
jbe
xchg
sub
nop
adc
aaa
sub
inc
inc
mov
add
loope
inc
nop
cmp
mov
mov
aad
xchg
pop
scas
push
movsb
cltd
inc
xchg
fcom
push
imul
cwtl
mov
in
and
dec
nop
in
cmp
adcb
adc
mov
inc
aad
or
lods
adc
lock
add
adc
movsb
pop
mov
xor
dec
test
and
lret
adc
nop
add
fdivr
or
mov
rorb
add
icebp
mov
xchg
pop
dec
xor
dec
inc
cmp
mov
decb
popa
lods
mov
mov
xor
daa
xor
sub
imul
addr16
mov
adc
in
mov
fdivl
mov
inc
or
test
imulb
pop
dec
pop
xor
mov
cmp
js
iret
mov
neg
mov
fisttps
cmp
fldl
pop
xlat
sbb
mov
add
stos
push
cmp
jnp
repz
pop
int3
pop
or
fdivrs
daa
xor
add
adc
scas
sbb
adc
sbb
lds
mov
cwtl
int
lahf
pop
sub
pop
daa
int3
inc
arpl
jno
mov
or
mov
mov
jne
mov
and
in
fcomps
pop
mov
es
mov
jg
sti
subl
inc
sbb
neg
sbb
ret
dec
lret
pop
cmp
xor
adc
mov
jg
neg
add
or
in
dec
cwtl
mov
inc
in
cmp
mov
adc
sahf
xor
xor
jno
pop
fiaddl
inc
xchg
fdiv
mov
xchg
sahf
mov
sti
int
xor
ret
sbb
jecxz
pop
adc
push
out
push
add
mov
rcl
and
add
jns
insl
fstpt
arpl
xor
xchg
cld
adc
divb
inc
adc
sub
test
mov
int
aaa
je
roll
mov
sbb
mov
in
xor
fldl
adc
ja
adc
test
mov
cmp
and
adc
xor
add
shrl
sbb
xchg
jmp
mov
gs
in
add
movl
sbb
adc
push
movsb
add
inc
add
sub
insl
mov
lcall
loopne
add
lret
inc
fcmovne
or
sahf
inc
cmpl
or
dec
adc
xor
dec
loopne
stc
fs
outsl
mov
push
and
pop
fucomi
lcall
mov
not
dec
sub
pop
xchg
in
data16
jecxz
jnp
mov
sbb
dec
in
roll
or
and
or
ss
sbb
inc
mov
pop
cmp
adc
jl
push
in
sbb
or
push
loopne
dec
jae
dec
or
test
incl
cmp
mov
pop
xlat
sbb
cs
add
mov
in
jmp
dec
dec
cli
in
fbstp
movsl
clc
das
and
int3
shll
scas
cmp
jecxz
aaa
push
fdiv
ret
pop
push
mov
stc
lea
add
dec
jb
clc
jnp
mov
or
loopne
fdivrs
leave
das
dec
sbb
loop
fcmovnbe
jmp
jecxz
sub
xor
or
mov
movsl
add
adc
jae
pop
xlat
or
cld
jnp
adc
into
inc
addl
adc
mov
rcll
sub
push
das
mov
inc
add
mov
xchg
lcall
pop
lods
add
adc
inc
in
aas
add
xchg
fidivrs
aaa
call
lea
xlat
pusha
sbb
jl
call
insb
call
adc
pop
add
add
inc
mov
and
adc
int
inc
jb
jnp
jnp
mov
dec
fld
leave
and
mov
xor
xchg
std
inc
inc
les
rcrl
adc
ficompl
in
fistpl
dec
cmp
and
push
dec
in
adc
fadds
mov
sbb
or
fisubs
rol
mov
pop
pop
cld
mov
popa
ret
sub
das
push
push
pushl
call
ss
jbe
jge
ja
loop
push
dec
in
cmp
mov
in
pop
inc
fiaddl
cmp
loope
push
jge
arpl
or
jb
cmpsl
sbb
sbb
hlt
js
in
sbb
not
lcall
mov
jp
sbb
notl
xchg
pop
sbb
push
hlt
add
rcl
adc
out
test
sbb
or
mov
sub
pop
jge
jp
cmp
cmp
inc
cwtl
mov
inc
sbb
dec
cwtl
push
into
jne
fistpll
xlat
leavew
js
mov
inc
lods
les
jg
inc
int
pop
in
xor
adc
sbb
jne
xor
enter
leave
xor
jg
push
pop
adc
jnp
ret
popf
js
aas
outsl
inc
das
aaa
sub
mov
mov
adc
sbb
or
inc
and
fucom
push
aam
or
jbe
ss
pusha
clc
adc
test
jg
fildll
ret
imul
xor
inc
cmpsl
sub
scas
popf
fwait
fwait
lock
push
dec
ret
cmp
xchg
push
in
cmp
cmp
imul
out
adc
pop
or
and
or
xor
pop
fwait
jbe
cwtl
rcll
movsl
inc
xor
xor
adc
and
mov
into
inc
sub
mov
inc
mov
jl
mov
and
add
addr16
pop
jo
xchg
ret
push
pusha
xor
shrl
xchg
imul
add
icebp
dec
data16
idivl
les
hlt
xlat
mov
pushf
jmp
and
lods
pusha
arpl
add
jg
push
and
aaa
and
pop
hlt
mov
lahf
pop
cltd
lock
fdivrl
out
mov
mov
inc
repz
lock
inc
adc
or
movsl
jecxz
mov
sbb
arpl
pop
repz
stc
imul
lret
adc
ret
cmpsb
add
fdivrs
les
lock
hlt
push
or
add
lock
shlb
fsubrl
adc
and
ja
mov
pop
faddl
ss
clc
lods
shrb
jno
test
jb
dec
fnstenv
cwtl
hlt
and
or
sub
aam
inc
adc
sbbl
aas
icebp
or
addb
fcoml
jecxz
fsub
mov
mov
add
pushl
test
jae
cmp
ds
dec
inc
aas
cmp
sbb
js
inc
sbb
adc
mov
stc
jb
cli
adc
mov
mov
sbb
jmp
and
cwtl
les
mov
mov
mov
mov
cmp
fbld
in
lods
scas
lock
adc
lret
dec
lret
sbbl
adc
movsb
sub
enter
dec
jp
es
and
xchg
add
adc
daa
or
add
sbb
stos
jecxz
and
jp
arpl
sbb
jb
sub
out
push
sub
repnz
repz
dec
cmp
in
fldenv
addl
xor
jnp
push
dec
cmp
xor
adc
rorb
lret
jo
inc
inc
pop
stos
add
ret
mov
pop
inc
xor
lods
shlb
cs
xor
or
add
out
es
add
inc
rorb
mov
jecxz
pop
rcrb
dec
mov
out
mov
test
ss
or
cwtl
aad
pop
adc
imul
aaa
lock
mov
push
push
xor
fwait
test
sbb
test
dec
in
xor
fdivr
sbb
scas
insl
outsb
ret
out
add
pop
dec
cmpsl
sbb
dec
iret
inc
dec
jbe
cmp
sarb
mov
adc
fildl
shlb
adc
hlt
fistl
imul
inc
out
out
add
cwtl
dec
test
lock
jge
dec
push
fisubl
out
add
push
adc
stos
mov
or
loopne
mov
jbe
add
adcb
push
jmp
clc
or
fbld
adcb
push
add
insb
fcomip
sbb
push
incb
lods
or
lds
addl
jbe
push
mov
xchg
scas
push
lock
shl
popf
imul
or
addr16
mov
aad
jp
and
xchg
data16
cmp
xor
or
leave
fsubrl
sub
adc
test
mov
lahf
inc
dec
adc
clc
aad
jmp
vpsubw
push
adc
insb
icebp
push
push
xor
iret
ret
popaw
mov
aam
adc
xor
sbb
lcall
inc
sub
imul
in
aam
outsl
sub
dec
out
xor
or
imul
add
fildll
insb
in
sub
dec
dec
push
loop
imul
pop
adc
clc
ret
inc
add
dec
fnstsw
and
jecxz
lea
adc
sbb
and
jg
mov
push
jl
inc
mov
repz
call
mov
mov
jne
mov
rcll
or
sub
add
add
inc
sub
xor
fstpl
push
out
xor
mov
pop
dec
dec
loop
loope
xor
sub
jmp
aaa
and
mov
das
pop
int3
inc
and
fs
add
adc
mov
cmp
lock
push
fiaddl
jp
push
and
jp
mov
push
in
test
pop
push
int3
mov
lcall
clc
pop
fdivr
ss
sub
and
shr
sub
push
cmpb
js
inc
ds
pop
mov
fwait
and
xor
inc
or
or
vmovss
xchg
or
insl
pop
xor
in
into
shl
cmp
dec
fsubr
add
push
dec
int3
adc
fcoms
insb
xchg
ss
push
fmuls
push
imul
cmpsl
sub
adc
rcr
in
mov
adc
scas
cmp
sbb
xchg
sbb
stos
repz
push
inc
mov
sbb
adc
mov
pop
cmp
imul
cmp
mov
rorb
mov
in
pop
loop
imulb
xor
insb
add
popa
add
push
ror
sbb
cli
roll
pushf
or
sbb
sbb
inc
xor
xor
add
fistl
pop
aaa
jb
pop
fmuls
xchg
push
cmpsl
les
sbb
jmp
xchg
int3
hlt
imul
shll
aad
inc
sbb
aad
push
sti
xchg
sbb
xor
movsb
imul
inc
mov
sub
push
and
stc
fidivl
mov
lret
cmpb
cs
jno
or
clc
dec
pop
in
fdivrs
jl
jmp
fisttps
and
and
xor
sub
test
xchg
fisubs
or
mov
mov
jmp
and
int3
clc
out
and
fimuls
mov
inc
xlat
clc
inc
inc
push
sbb
into
clc
pop
clc
adc
outsb
and
mov
loope
mov
sub
call
sbb
clc
push
mov
inc
std
das
sbb
jo
outsl
adc
sub
ret
xchg
in
lahf
xor
inc
lret
cmp
or
xorl
out
mov
push
push
sub
or
into
aam
push
daa
adc
sbb
in
sub
adc
je
sub
in
inc
shrl
daa
sbb
in
rorb
xchg
fcoml
sbb
xchg
jae
xchg
les
in
bound
nop
in
sbb
adc
js
loop
das
adc
sbb
mov
cmp
ret
mov
fistl
pop
mov
jp
out
dec
lods
add
inc
or
mov
test
and
daa
lret
mov
dec
scas
dec
loopne
mov
push
mov
adc
pop
adc
or
xor
or
fidivs
pop
mov
popf
or
mov
shr
out
xchg
test
loop
cmc
ret
in
popf
bound
xchg
sbb
rolb
add
jmp
js
or
jne
adc
push
dec
addb
loopne
testl
pop
incb
sub
lret
les
ja
mov
adc
loope
outsl
push
push
call
pushf
sub
out
push
inc
xchg
add
je
loop
fcomip
out
mov
sub
mov
or
lahf
int
test
mov
mov
mov
and
jmp
sbb
adc
aad
xchg
push
and
fisubl
adc
cs
movsb
xchg
xor
push
xchg
inc
aas
inc
push
mov
pop
pop
jae
pop
dec
xchg
cld
call
js
add
dec
into
outsl
outsb
inc
add
enter
push
adc
clc
mov
mov
cmpsl
lea
push
jmp
push
sbb
es
pusha
dec
xlat
add
mov
mov
push
adc
jge
sti
and
es
jbe
and
push
add
outsl
rolb
mov
xchg
data16
in
lock
insb
xor
inc
mov
xor
sbb
adc
into
or
icebp
pop
dec
xchg
xor
sbb
sarb
jbe
add
ss
cmp
rorl
aam
dec
adc
icebp
mov
inc
add
es
dec
dec
bound
xor
add
aaa
xor
push
repnz
scas
cmp
in
pop
inc
mov
fisttps
adc
inc
shlb
iret
lret
loopne
jg
fistps
sbb
push
movsl
repz
call
xor
or
or
inc
jo
xor
repz
xchg
cld
add
pop
add
js
mov
stos
fldl
adc
sahf
cld
movsl
dec
push
out
sbb
dec
cld
xor
mov
jne
dec
mull
ss
adc
add
pop
fwait
add
push
loope
pop
dec
jo
fs
ds
cmc
enter
xlat
jno
cmpsl
or
mov
and
mov
ljmp
cmp
call
inc
sub
dec
les
lods
jl
daa
add
fisubl
shrb
mov
pushf
sub
xchg
dec
sbb
fwait
loope
lods
dec
add
outsb
sbb
movb
jb
movsb
je
jb
adc
test
jecxz
pop
loopne
lret
mov
imul
xchg
flds
ljmp
fsubrs
fnstenv
dec
sbb
test
cmp
mov
pop
cmp
inc
cld
aaa
mov
loopne
push
cmp
lock
xchg
pop
pop
push
cli
add
xor
add
popf
cli
sbb
fdivs
sbb
inc
or
sbb
sub
xor
or
loop
cli
nop
loopne
jge
push
inc
inc
pop
shll
addl
fidivl
test
xor
add
mov
or
loopne
jl
sbb
sub
jno
rol
mov
xor
das
fadds
mov
cli
cmp
jae
mov
add
clc
sbb
loop
out
lahf
xchg
pusha
jg
movaps
ret
adcl
sbb
inc
xchg
mov
mov
sub
add
add
mov
sbbb
out
inc
sub
sbb
jl
cmp
movsb
mov
add
mov
sbb
cmp
jb
xchg
loopne
test
scas
or
fmuls
xchg
sbb
push
xlat
clc
test
mov
pop
mov
mov
cmp
mov
mov
ljmp
lcall
sbb
add
push
jb
fisubrs
mov
jae
sub
and
sbb
xor
xorb
ret
xor
xchg
cmp
lods
pop
inc
hlt
mov
sbb
push
cli
les
scas
je
push
cld
ja
mov
inc
loope
into
dec
repz
loope
dec
push
dec
dec
mov
icebp
sub
mov
dec
mov
sbb
outsb
sbb
loopne
test
mov
testl
enter
sub
imul
fadds
inc
mov
rcll
sarb
addr16
add
ds
sub
dec
outsl
sbb
add
repz
sbb
mov
mov
push
adc
std
scas
data16
incl
stos
or
sbb
add
jle
fisubl
xchg
ret
aad
movsb
in
int3
out
scas
push
xor
ret
jg
mov
out
pop
pop
inc
xchg
pusha
xchg
subb
add
add
xchg
test
xchg
ficoms
xor
cmp
cwtl
test
aad
add
mov
xor
bound
ror
js
insb
push
mov
pop
int3
push
icebp
fcoml
mov
loop
cmp
faddl
adc
mov
rep
xchg
xchg
and
sbb
int3
pusha
je
and
mov
mov
sbb
pop
cmpsl
mov
sar
push
jl
loopne
mov
scas
imulb
fiadds
inc
adc
shlb
adc
outsb
les
mov
rcrb
das
les
pop
scas
xor
adc
int3
xor
or
pop
fsubl
xchg
pop
push
call
into
popf
jp
jge
fwait
dec
sbb
aam
ficompl
das
cwtl
pop
dec
add
jecxz
cmp
cmp
xor
xchg
clc
test
or
les
xor
mov
push
sti
sub
divb
icebp
out
ss
fbstp
rcrl
rclb
stc
pop
pop
pop
negl
cs
cwtl
fbstp
repz
ja
sbb
mov
in
cwtl
rorl
movsb
adc
pop
xor
ss
jo
push
or
repnz
push
nop
loopne
repz
push
out
loopne
mov
or
inc
add
or
popl
mov
xchg
push
mov
xchg
in
int3
iret
sbb
dec
jmp
inc
adc
add
jo
sub
ljmp
je
or
inc
into
xchg
add
sbb
dec
mov
dec
mov
shlb
pandn
push
int3
subb
and
lret
lods
or
xchg
jp
in
xchg
add
cwtl
push
sbb
lock
push
inc
loop
shrb
popa
mov
lret
inc
fsubl
dec
fidivs
xor
daa
sbb
dec
adc
inc
fldl
dec
and
dec
fidivrs
cs
mov
das
cmp
ljmp
and
push
mov
aaa
clc
outsl
cmp
test
mov
jmp
add
push
xor
push
fstpt
inc
inc
and
pop
dec
push
cmp
add
shl
push
or
aam
adc
dec
sbb
sarb
test
insb
push
push
ljmp
mov
jle
add
add
adcb
mov
push
das
inc
cld
xchg
sbb
or
fstpt
mov
adc
xor
or
mov
addr16
ljmp
inc
movl
xor
rcl
push
rorb
fcmovnbe
mov
outsl
cmpsb
rol
fiadds
lods
push
add
rolb
push
fldcw
in
dec
sub
or
cmp
push
in
inc
pop
int
loopne
mov
push
outsl
sti
pop
or
gs
lods
cli
sbb
sbbl
or
hlt
adc
adc
sub
xchg
clc
ret
push
mov
xchg
mov
rolb
push
mov
sub
and
xchg
shrl
sub
pop
jo
mov
lahf
dec
cmp
popf
imul
jae
stos
pop
or
pop
xor
jmp
adc
dec
hlt
add
push
pushf
lret
stos
stos
inc
out
cmp
lods
or
push
jle
test
sub
cmpl
pop
or
adc
dec
mov
inc
fisttpl
in
jne
daa
aad
or
subl
ja
jno
lea
mov
daa
rcl
xor
jae
ljmp
outsl
push
mov
roll
jo
mov
fldt
adc
jbe
adc
sbb
sbb
dec
out
mov
jecxz
popf
pop
mov
push
js
jge
cmp
rol
push
lea
push
aam
cld
test
jne
xor
gs
in
cmc
iret
pop
xchg
fbstp
popa
jmp
out
inc
cmp
stos
loopne
ljmp
xchg
fcom
lds
cmp
hlt
pop
sarl
add
jo
je
xchg
cmc
xchg
mov
mov
inc
arpl
cmp
push
jl
cmp
aaa
mov
pop
inc
or
xchg
aam
nop
jecxz
dec
or
xor
loopne
js
and
cld
adc
shlb
call
lock
inc
cmp
iret
test
mov
adc
xorb
sbb
sarb
and
sub
adc
ss
lods
and
mov
xor
xchg
dec
xchg
mov
scas
adc
pop
push
and
add
loop
or
pop
add
xor
add
sub
jl
ret
or
divl
push
je
inc
insl
cld
jmp
mov
pop
out
popa
notb
sbb
into
aam
adc
and
aam
fiaddl
add
inc
jecxz
int3
idiv
and
rclb
sub
clc
insb
std
fs
mov
jge
mov
aam
dec
lret
xchg
pop
jno
inc
js
inc
and
xchg
scas
mov
pusha
inc
sub
rcll
loopne
call
mov
add
call
add
xchg
or
insb
fwait
sbb
xor
mov
rclb
and
insb
pop
repz
and
adcb
lret
pop
loopne
and
mov
mov
std
je
out
push
fsubrl
popa
cld
mov
mov
mov
mov
inc
cltd
fsubl
push
xchg
inc
sub
push
dec
sbb
add
fdivrl
sub
xor
dec
movb
in
push
movsb
into
push
ja
jle,pt
cmpsl
or
mull
jmp
pop
and
les
cltd
test
sbb
or
add
fisubrs
andb
push
mov
mov
inc
rolb
mov
sub
jo
fdivrl
mov
lock
lret
orl
inc
ja
xor
sub
push
pop
dec
mov
inc
pop
pop
sub
dec
rcll
add
loopne
inc
add
adc
sbb
mov
ja
and
jae
push
sub
lret
or
cwtl
pop
dec
sub
dec
push
scas
cwtl
paddb
push
sbb
enter
clc
lahf
sahf
outsl
or
mov
fists
adc
mov
inc
hlt
cwtl
cld
add
daa
test
add
lahf
adc
iret
outsb
sub
jno
and
xchg
stc
lahf
mov
dec
popa
lock
sub
xor
add
sub
pop
mull
add
push
outsb
ja
jne
fadds
loop
stos
xlat
mov
mov
test
mov
fstl
dec
mov
ja
add
sub
lds
pushf
cld
add
sahf
add
sbb
nop
jae
je
aad
mov
das
xchg
lcall
dec
adc
jge
adc
add
adcl
imul
fldt
loope
pushf
int3
movl
add
and
call
inc
sbb
cmp
dec
sbb
adc
test
jg
aad
pop
xor
cmp
divb
pop
xor
mov
mov
push
add
or
jp
std
mov
shrl
and
shr
stos
push
adc
pop
push
adc
das
push
call
push
aas
inc
int3
loope
roll
and
orb
mov
hlt
sbb
bound
sub
insl
sbb
pop
js
pusha
shl
jg
rcll
pop
jbe
in
sub
jbe
int
test
fcmovnu
xchg
push
sbb
xor
adc
mov
pop
adc
les
loope
jl
adc
mov
jb
and
aam
and
xchg
subb
and
adc
inc
cld
or
dec
inc
push
sbb
mov
inc
sti
pop
sti
mov
ljmp
dec
xor
das
add
ficomps
sub
mov
outsl
xor
negb
jnp
sbb
inc
mov
cmp
mov
jg
sub
adc
pop
lds
pop
pop
cwtl
lcall
lods
loop
add
push
out
add
shrd
ficoml
jl
shl
dec
xchg
loop
mov
add
pushf
inc
sbb
shll
shll
add
shrb
pop
pushl
mov
cmp
pushf
adc
jp
and
or
cmp
adc
adc
idivb
inc
xor
int
jecxz
sbb
push
lods
mov
jns
in
out
int3
xor
rolb
pop
sbb
mov
lret
add
out
lds
mov
pop
xor
and
jns
addr16
push
popf
sbb
movl
in
mov
data16
pop
test
mov
sub
mov
pop
mov
adc
lds
data16
sbb
xchg
ss
aaa
fsubr
dec
add
xchg
inc
xor
mov
data16
cmp
mov
dec
pop
or
nop
stos
adc
sbb
int3
dec
inc
cmpsb
es
or
sbb
or
jmp
scas
dec
sub
cld
fadds
subb
fwait
xor
sbb
mov
mov
aaa
pop
xor
push
mov
sub
or
sub
scas
xor
fstps
push
aas
xchg
nop
popa
dec
xchg
pop
xchg
sub
inc
iret
xchg
sbb
movsl
pusha
outsb
testl
cltd
mov
jp
mov
cmp
out
add
es
push
rcl
xor
das
ja
in
dec
add
adc
dec
iret
inc
lods
mov
aaa
sub
and
in
add
jo
adc
cld
in
jb
ds
cmp
cwtl
dec
pushf
mov
or
shl
pop
adc
xor
adc
pushf
add
sbb
icebp
sub
fldcw
lcall
pop
flds
out
sub
lea
and
mov
mov
int3
or
jne
jno
mulb
sbb
or
outsl
mov
mov
pop
and
push
mov
hlt
in
fisubl
dec
icebp
cwtl
mov
dec
lret
loopne
mov
sbb
es
leave
pusha
test
loope
cmpsb
shll
data16
ds
btr
add
lock
adc
sub
ret
push
inc
psllw
add
lock
and
mov
xor
ret
and
push
and
dec
inc
dec
jne
sub
xor
fcomp
jge
and
mov
xchg
fimull
pop
dec
sbbl
xchg
nop
pop
addr16
mov
icebp
xor
sbb
cltd
sub
ret
fidivl
adc
sub
adc
pop
int
jp
or
adc
cwtl
rolb
fadd
out
push
sbb
add
jbe
add
sub
call
dec
test
push
push
cmc
inc
jne
adc
add
call
clc
movsb
addl
mov
sbb
mov
rol
push
xor
dec
fadds
xchg
xor
cli
ja
es
ret
int
int
cmp
or
notb
inc
fcomps
sbb
inc
push
nop
inc
pop
add
mov
or
pop
jae
and
data16
xorb
dec
push
in
push
fs
jmp
mov
into
adc
sbb
dec
pop
and
bnd
inc
dec
inc
repnz
lret
push
sahf
xchg
mov
ss
popl
cs
mov
and
push
mov
movsb
and
out
add
lock
nop
and
repnz
std
data16
jne
sub
xor
and
pusha
fstpt
imul
jecxz
sbb
cmpsb
fisubs
or
mov
mov
xchg
in
test
inc
or
js
int3
int
inc
add
adc
add
rolb
adc
cli
dec
cmp
mov
aam
jl
sub
lods
pop
rorl
inc
xchg
sbb
adc
dec
andl
aaa
loop
and
xor
out
and
aaa
mov
shlb
pop
cli
fwait
push
test
movsl
cmp
push
ret
cmp
sbb
scas
sbb
and
addl
mov
icebp
ljmp
das
mov
fcoml
nop
fisubs
mov
rolb
xchg
push
sub
xor
lea
pop
aaa
stos
bound
jg
mov
inc
movsb
es
andb
sahf
or
sahf
or
push
adc
outsb
das
jge
sbb
mov
xor
bound
outsb
xor
loope
int
daa
add
add
rol
andb
inc
lret
xor
daa
in
cmpsb
fwait
xor
fdivl
cmp
push
enter
movsl
jp
mov
mov
add
orb
int
popa
icebp
test
cmp
mov
popa
clc
repz
push
icebp
dec
cmpsb
f2xm1
aad
lods
jp
add
ljmp
loope
outsl
add
pop
xor
or
push
icebp
sbb
ljmp
xorb
mov
dec
idiv
adc
hlt
push
cmp
pop
xchg
loopne
ficoms
je
fnstcw
push
mov
mov
push
pop
es
cmp
or
jmp
pop
ret
shrl
rcll
pop
ret
enter
cmp
sub
clc
clc
and
jmp
nop
stos
jne
ret
pop
clc
xchg
mov
add
push
xchg
add
jo
test
enter
pusha
neg
push
add
xchg
mov
jnp
imul
les
cmpsl
pop
xlat
adc
test
adc
adc
popf
add
add
sbb
dec
add
andl
iret
int
lret
sbb
orb
sub
jg
cmpsl
jno
repnz
aam
xchg
test
lods
in
je
push
push
imulb
sbb
out
inc
repz
sbb
xor
out
push
loop
sub
pushf
and
sub
push
add
fiaddl
add
xor
aas
es
mov
push
loopne
cltd
push
aam
pop
mov
nop
pop
inc
stos
add
imul
outsl
xor
mov
hlt
bound
pop
mov
aaa
rorl
lock
push
roll
pop
call
sbb
inc
loopne
rcr
pusha
cltd
bound
lods
mov
cld
pop
out
mov
lret
pop
orl
adc
push
aas
mov
pop
or
sbb
mov
es
or
mov
pop
cmp
or
jle
or
xor
add
mov
xchg
mov
pop
sub
cmpsb
mov
xchg
push
aam
lcall
or
rcrb
and
xchg
cmpsb
test
add
cld
add
sbb
adc
mov
pusha
push
rcl
lods
pop
xchg
bound
mov
test
and
cwtl
roll
push
xor
test
daa
mov
xchg
sbb
cmp
dec
std
jbe
mov
mov
outsl
xchg
lea
ret
mov
or
add
sub
mov
push
mov
lcall
ja
push
push
orl
dec
aaa
push
mov
imul
addb
mov
outsl
pop
jg
inc
cs
fnstcw
xor
inc
rolb
and
int
or
or
pop
orb
add
push
mov
hlt
cmp
fistpl
jnp
in
add
fadds
test
sbb
mov
bound
and
or
rcrl
cmp
dec
sbb
clc
dec
aaa
jmp
xchg
fmull
add
lock
xchg
pop
adc
jno
lea
inc
clc
mov
inc
add
out
adc
arpl
inc
fnsave
or
test
in
push
int
lock
sbb
test
xchg
dec
pop
inc
ss
and
scas
jge
xchg
xor
rcll
call
inc
das
fisubrl
loop
pop
int
das
push
arpl
das
cld
mov
test
add
inc
add
das
push
sti
loopne
daa
sub
mov
rcll
in
out
fisttps
xchg
or
in
pop
mov
adc
test
jo
lock
add
adc
lock
sbb
push
out
cmp
aaa
adc
dec
add
sbb
adc
add
push
js
sub
int
xlat
movsb
pop
loopne
fwait
sbb
mov
xor
push
adc
push
mov
clc
sub
or
fwait
icebp
les
cmp
rolb
or
mov
mov
xor
mov
je
dec
sub
pusha
adc
and
xor
xchg
inc
mov
push
sbb
xor
push
in
bound
ret
lgdtl
rcrb
push
je
scas
jge
and
pop
cmpsb
xchg
outsb
push
jmp
dec
inc
add
call
aaa
cli
ret
loop
clc
pop
dec
xchg
sbb
mov
popf
mov
add
std
ss
pop
clc
or
add
loopne
fimuls
push
lret
lock
stos
jnp
and
fwait
mov
jo
fsubrl
in
inc
or
mov
dec
ret
out
pop
mov
push
push
xor
cmp
push
iret
shl
out
popf
fcmovb
push
ss
fsubs
jg
lods
je
ret
and
shlb
movsl
dec
jge
and
adc
and
fmuls
xor
adc
int3
push
push
hlt
movsb
add
and
or
inc
jecxz
test
dec
cmp
lock
inc
ficoml
cmpl
add
call
push
ds
or
inc
aad
icebp
test
int
adcb
xor
sub
fisttpl
or
ficoml
cmpsl
mov
test
pop
sub
mov
add
rcr
repz
mov
cmpsb
inc
push
fistpll
adc
or
lds
inc
repnz
add
jmp
jmp
jns
leave
mov
sub
jne
mov
jne
or
mov
sbbl
rclb
push
cmp
push
sub
stos
enter
aas
test
sbbl
lahf
pop
ljmp
cmp
movsb
cs
or
aam
loope
add
sbb
aas
shlb
or
xor
andl
in
add
mov
push
add
sbb
mov
sbb
sub
pop
fists
dec
sbb
push
sti
push
lret
and
xor
popa
mov
pusha
jnp
xchg
dec
loop
loopne
aad
xchg
sub
push
fsub
adc
fiadds
inc
inc
push
int3
pop
xchg
and
or
cmpsl
sub
jmp
push
int3
jmp
and
addl
or
nop
into
or
and
pop
dec
jae
jb
push
mov
mov
sub
push
sti
jmp
sub
or
mov
xor
hlt
add
enter
sbb
ret
nop
mov
sbb
push
flds
adc
shlb
lods
enter
stos
xchg
fmul
inc
divl
rolb
jmp
add
xor
inc
adc
push
ret
loope
and
sbb
dec
or
xchg
push
mov
inc
cs
in
lret
lcall
repz
scas
scas
adc
fwait
sub
subl
es
out
or
dec
mov
popf
ficomps
ret
adc
inc
sti
es
inc
add
in
fwait
je
daa
in
loop
sub
orl
and
sub
or
mov
loopne
sbb
movsl
xor
hlt
push
fcoml
pop
jle
push
and
sub
push
push
pop
fwait
scas
fisubs
or
sbbl
or
push
aam
leave
lds
pop
or
imul
in
ljmp
pop
fstp
xor
or
cmp
push
out
cmp
mov
cli
or
shlb
sub
mov
pop
outsb
sub
lock
bound
pushl
stc
rorb
mov
int
sbb
loop
pop
add
push
mov
cli
push
out
sahf
jmp
icebp
and
jmp
mov
sub
cli
ss
vpextrw
fwait
push
jo
and
lcall
add
and
and
xlat
inc
pop
adc
enter
mov
fidivs
fwait
mov
or
add
out
popa
sti
test
in
inc
xchg
fldcw
pop
xchg
pusha
sti
out
dec
xchg
dec
lret
jge
cld
dec
adc
sbb
negl
hlt
mov
fcomps
fimull
inc
push
pop
adc
push
cmpb
pop
or
adc
loope
addb
mov
ror
adcl
ljmp
sub
scas
repnz
test
aam
or
fwait
push
xor
add
mov
mov
loope
mov
out
pop
popf
cmpl
lds
cmc
les
pop
xchg
dec
test
imulb
mov
cs
or
fstps
mov
fidivrl
aad
fcmovnb
decb
sub
inc
xlat
and
sub
cmp
jle
add
rolb
pop
adc
dec
aad
adc
jp
xor
bound
cmpsl
roll
xor
or
mov
rcr
pop
pop
dec
inc
das
jns
pop
popf
repnz
shl
inc
and
inc
cmpsb
dec
hlt
enter
icebp
in
xor
inc
and
dec
addr16
inc
mov
in
les
sub
sbb
out
je
adc
or
jae
in
arpl
lcall
fisubl
push
push
sbbb
in
mulb
adc
addl
push
aam
push
clc
mov
add
cmpsl
pop
xchg
or
idivb
jp
test
jb
jo
xor
stos
jae
sbbl
dec
subb
push
enter
pop
call
mov
lcall
cmp
outsl
xchg
push
mov
aas
sbb
dec
inc
xor
dec
clc
rcl
addr16
cmp
jne
sub
std
dec
andl
in
push
jle
sub
incb
adc
mov
jbe
or
icebp
loope
mov
imul
add
push
push
test
mov
outsl
test
je
in
mov
stos
iret
or
jmp
cli
out
xor
mov
cld
xchg
add
xrelease
pop
shlb
bound
mov
pusha
push
mov
or
xor
push
in
in
imul
inc
jae
jecxz
jno
cmpsl
add
mov
sahf
test
xchg
aaa
shrb
adc
adc
scas
aaa
aad
adc
push
inc
mulb
adc
jmp
mov
xchg
dec
adc
in
scas
jecxz
int
jae
subb
jb
push
outsl
test
pushf
ss
push
xor
shlb
push
cli
les
bound
imul
or
mov
repnz
adc
adc
movsl
jbe
push
movsb
popa
fmuls
lds
inc
ljmp
push
shlb
cmp
mov
out
push
icebp
push
sbb
pop
xchg
bound
cmpsb
sbb
ret
and
sarl
jmp
and
mov
mov
jae
in
in
andb
and
fstps
mov
int3
cmpsb
incl
movsb
ss
inc
sub
dec
jb,pn
inc
ljmp
aaa
mov
cmp
xor
inc
int
mov
paddd
xor
dec
mov
ljmp
push
and
ljmp
addr16
mov
push
sbb
add
xchg
or
repz
xchg
cmpl
aam
push
and
rolb
aad
jl
pop
jno
bound
or
add
pop
orb
pop
mov
loopne
xor
cmovnp
push
cld
mov
icebp
loopne
dec
shll
cld
int3
enter
cmpsl
es
fmuls
mov
fdivs
ret
shrb
jae
xlat
les
stos
cmpsb
add
xor
and
pop
push
out
sub
dec
and
mov
add
add
jne
aam
jne
hlt
popf
hlt
data16
add
mov
add
push
cli
add
into
add
cld
cli
sub
or
clc
inc
xchg
sbbl
dec
add
or
ja
bound
imul
or
icebp
dec
adc
push
cmp
roll
repz
out
adc
inc
cmp
mov
push
cwtl
jecxz
inc
addb
cmp
sub
dec
jo
rorl
icebp
dec
fsub
fidivrs
push
xor
outsl
pop
adc
cmp
dec
push
hlt
fstpl
jg
sbb
sbb
popa
pop
aad
addb
clc
mov
cmpsl
push
cmp
xchg
addr16
jne
movsb
sub
or
fwait
test
cmp
sub
aam
pop
jl
sbb
pop
mull
push
xorb
ficompl
test
leave
and
iret
loopne
pop
ds
jmp
mov
pop
test
stc
mov
test
out
cmp
in
sub
leave
movsb
enter
and
inc
pop
loopne
or
popf
scas
adc
aas
dec
sub
or
rorl
push
dec
fimuls
or
bound
inc
xor
or
loope
or
push
push
cld
jmp
dec
int3
sbb
add
loope
xor
mov
cmpsb
cmp
cmp
add
fbstp
sarl
or
or
jp
out
outsb
adc
js
aaa
sub
jge
cs
inc
mov
add
mov
outsl
orb
mov
int
dec
stos
addb
jge
sbb
inc
mov
cwtl
js
push
dec
iret
sub
inc
mov
out
pop
shr
cmp
mov
fldenv
add
add
leave
ret
xchg
push
mov
js
sub
daa
mov
rcl
loop
sbb
mov
and
ljmp
ss
lahf
ret
jns
mov
xchg
jmp
aam
arpl
sub
and
pusha
shrl
or
ss
adcb
jo
loope
inc
popl
icebp
sub
lret
inc
addl
loopne
inc
add
dec
xchg
stos
cli
mulb
adc
sahf
push
rclb
movsb
inc
sub
insb
push
scas
lock
add
and
es
xor
adc
shrl
or
iret
adc
rorb
sbb
cmp
xor
mov
cmp
adc
roll
cli
adc
cld
sti
sbb
jmp
push
out
mov
shll
in
xchg
js
xlat
int
push
and
out
push
dec
push
lds
adc
lea
aaa
cld
sbb
sub
mov
lret
sbb
sbb
adc
push
lahf
mov
popl
or
je
scas
add
in
addr16
stc
mov
ja
push
sbb
pushf
add
mov
cmp
push
js
inc
add
into
pop
sub
aam
adc
mov
out
sbb
rclb
inc
orl
ljmp
mov
jne
push
xor
sbb
scas
ljmp
xor
add
dec
daa
aad
int
stc
lea
inc
popf
in
stos
jo
das
out
mov
add
fsub
add
je
cmp
insb
and
fnstenv
bound
mov
jp
les
sbb
aad
dec
sbb
dec
incl
hlt
push
or
inc
std
loope
push
add
add
test
sub
insl
inc
inc
sbb
adc
jb
cmp
cmp
jne
shlb
add
mov
std
push
cmc
add
fisubs
mov
lds
imul
cmpsb
aam
shll
add
pop
ror
js
xor
cld
inc
data16
adc
add
dec
test
mov
ja
xchg
repnz
les
fwait
repz
in
icebp
xorb
inc
sbb
mov
mov
hlt
je
out
jae
loopne
xchg
mov
add
push
test
fs
or
inc
test
jmp
popl
loop
ret
outsl
mov
push
int3
push
sahf
rorl
sub
adc
inc
and
je,pn
adc
inc
les
clc
jo
fld
pusha
fmul
cmp
test
xor
addr16
pop
aaa
adc
mov
add
sbb
rcr
call
sahf
aam
add
or
call
cmpsb
mov
push
fcmovnb
push
dec
push
sahf
dec
and
add
loope
xor
or
lahf
push
sbb
out
add
pushf
mov
int3
xor
add
pop
push
orb
push
out
add
repz
sub
lods
pop
dec
add
je
jo
push
out
dec
jae
ljmp
and
cmp
jne
xor
inc
jmp
add
ret
pop
ret
jno
imull
dec
xchg
inc
insb
rolb
test
inc
sub
in
test
orb
add
sub
out
or
xlat
inc
inc
pop
mov
jg
add
call
add
sarl
adc
jnp
test
pop
mov
mov
lds
xor
mov
jo
add
push
clc
pop
in
mov
movsl
shl
fstl
inc
add
addb
fbstp
push
pop
sub
into
push
pop
cmc
push
push
cld
outsl
jmp
aad
xor
add
faddl
mov
push
fisubrs
dec
shlb
adc
fdiv
xlat
push
jae
adc
add
or
scas
loop
enter
push
push
in
clc
cmc
push
cmpsb
mov
dec
fisttps
mov
test
stos
test
cmpsl
mov
jmp
les
jo
cwtl
ljmp
mov
push
pop
push
mov
iret
outsb
inc
add
push
pop
push
pushf
and
rol
dec
cmpsl
dec
aad
fwait
adc
jo
sbb
sarb
roll
mov
aad
mov
scas
inc
aas
add
mov
cmp
mov
movsb
push
mov
jo
add
test
jb
enter
lahf
push
hlt
jae
adc
rorl
inc
ret
shl
lret
push
fldcw
pop
xor
mov
pop
cwtl
pop
push
inc
xchg
jp
mov
pusha
add
push
jne
test
jae
or
out
mov
or
mov
scas
repnz
stos
mov
stc
adcl
xchg
hlt
in
sbb
xlat
lock
mov
pop
pop
ljmp
popf
jae
cld
leave
aad
mov
mov
or
aam
jmp
repnz
enter
shll
or
jb
outsl
inc
out
js
fwait
adc
icebp
jo
dec
inc
sbb
jmp
adc
test
push
outsb
sti
leave
adcl
adc
call
mov
dec
js
fs
cwtl
dec
lahf
hlt
push
mov
lds
dec
adc
inc
loopne
push
je
and
push
add
call
mov
adc
add
jnp
out
daa
lahf
push
repnz
imul
fildl
push
mov
adc
add
test
in
addr16
int
jmp
fcmovnbe
mov
jmp
call
add
shrb
cmp
dec
fistpll
out
sbb
mov
icebp
mov
fidivrs
xor
sub
xor
data16
in
and
xchg
repnz
adc
pop
mov
sbb
sbb
rcrb
lahf
dec
movsb
stos
or
adc
fs
or
orl
inc
jne
xor
mov
fiaddl
insl
or
adc
clc
push
jno
daa
loopne
mov
dec
adc
lds
xor
mov
pop
jne
adc
bound
pop
dec
and
sub
push
repnz
cmp
sub
xor
insb
pop
arpl
jg
add
cltd
mov
stos
dec
lock
in
and
xor
stos
push
mov
mov
and
cmp
jl
pop
jge
or
lock
sub
das
inc
jne
shrl
clc
mov
push
mov
les
fistpl
push
push
mov
repz
and
idivb
mov
adc
mov
sub
int3
inc
and
shrl
lcall
mov
add
push
addr16
sub
and
sbbl
push
add
out
movsl
lods
pop
add
or
testb
addl
lock
jge
aad
lcall
xchg
loopne
andb
fwait
add
mov
ljmp
mov
add
adc
lock
lret
xor
xor
adcb
adcb
inc
adc
pushf
add
bound
mov
push
adc
add
sbb
mov
or
sub
add
sti
jnp
or
int3
mov
into
adc
fistl
outsl
add
or
xchg
shrb
mov
push
sbb
sbb
mov
fsubrl
cltd
mov
xor
dec
lods
loope
cli
and
sarl
es
fs
inc
xor
or
push
jo
or
xor
inc
adc
sbb
or
bound
mov
es
add
orb
fimuls
or
mov
repz
inc
mov
add
fdivrs
adc
cld
inc
adc
mov
add
pop
fwait
adc
addr16
jns
mov
rolb
outsl
add
je
push
push
lds
sbb
add
imul
dec
adc
mov
cltd
das
add
add
inc
or
xchg
or
in
cmp
add
into
push
or
adc
add
and
les
mov
sub
aas
cmp
or
jo
stc
sti
sub
daa
mov
jae
dec
push
sbb
pushl
adc
push
test
xchg
sub
cwtl
inc
push
dec
call
or
shlb
pop
inc
add
dec
adc
cwtl
clc
in
cli
inc
sub
shlb
push
pop
pusha
pop
or
cmpsb
or
mov
ret
sbb
jl
data16
pusha
mov
jb
pop
sbb
inc
cmp
and
mov
or
inc
in
sbb
add
adc
pop
enter
jno
int
jmp
pcmpgtd
or
jl
divl
lcall
add
pop
test
pop
dec
ljmp
cmp
test
aam
push
pop
rcll
lahf
sti
sbb
iret
or
loope
jbe
inc
inc
shlb
jp
inc
push
mov
mov
bound
and
outsl
lock
mov
xor
pop
mov
or
sbb
test
mov
ror
es
jge
add
jg
push
ret
ret
arpl
scas
pushf
in
adc
fdivrs
fsubp
mov
inc
push
push
pop
idiv
or
addb
dec
fdivrp
test
sub
rolb
test
jp
add
fildll
xchg
or
sbb
pop
add
dec
rcll
fnstenv
fisubs
pop
mov
and
rclb
pop
pop
loopne
cwtl
inc
push
mov
outsl
shll
push
pop
loope
cmp
and
cmp
or
aam
inc
arpl
orb
nop
push
sbb
inc
push
mov
mov
push
les
scas
cwtl
adc
testl
test
bsf
push
push
loop
fdivs
inc
add
adc
push
mov
add
clc
daa
div
push
and
scas
test
or
dec
xchg
sub
out
loop
mov
cmp
pop
mov
xor
and
add
popf
push
ret
ja
dec
push
enter
and
and
sub
lods
xchg
adc
es
mov
gs
inc
dec
or
add
insb
in
pop
fsubrs
xchg
lahf
push
jns
mov
lea
push
sub
push
mov
leave
mulb
pop
fidivrs
lret
pushf
shll
sbb
sub
sbb
xor
call
sbb
call
outsl
inc
ficomps
notb
or
push
adc
orb
inc
mov
sbb
nop
call
hlt
popf
loopne
pop
adc
mov
sub
jo
jecxz
mov
jle
add
fidivl
aas
mov
fisubs
les
mov
or
and
mov
add
scas
mov
clc
mov
cmpsb
repz
in
xor
gs
js
jae
xchg
cmpsb
or
pop
or
or
mov
xchg
cmpsl
push
mov
ja
lods
mov
and
aam
and
adc
lods
dec
lret
dec
dec
and
inc
sub
add
inc
dec
jge
rol
out
aaa
movsb
ret
pop
ficomps
in
pop
aam
mov
test
xor
mov
movsl
push
push
aad
jae
cmp
in
bound
xor
cmpsb
cmpsl
insl
mov
xchg
adc
pop
mov
lods
int3
icebp
ljmp
out
loop
loope
decb
pop
pop
and
addr16
lods
push
dec
sar
pop
mov
jbe
mov
adc
add
in
jne
xchg
push
nop
ror
inc
hlt
adc
inc
push
cmpsb
inc
ss
push
inc
mov
les
dec
xor
jne
or
lret
adc
xor
inc
dec
jnp
cmc
or
mull
mov
adc
inc
fcompl
pushf
or
jge
enter
test
insb
aad
jp
hlt
add
clc
mov
daa
add
enter
lods
adc
shlb
add
mull
lahf
sub
pop
adc
enter
imull
andb
clc
push
jp
add
sar
rol
pop
les
xor
mov
add
mov
sub
xor
add
faddl
add
pop
mov
scas
xor
push
sbb
in
or
inc
add
add
movsb
rcrb
add
stos
out
loopne
and
int
es
out
rclb
xchg
cmpsl
test
and
xchg
sahf
mov
mov
push
push
test
cmp
out
cmp
stos
or
cli
test
loope
repz
sbb
push
dec
xorb
xchg
mov
mov
inc
cs
cltd
xchg
add
movsl
shlb
dec
and
inc
adc
fistpll
sub
cwtl
jns
shlb
inc
in
addb
mov
xchg
cwtl
popa
add
lock
mov
test
std
sub
call
or
rcll
cmp
leave
xchg
jnp
add
pusha
inc
push
rorb
pop
sub
pusha
sub
int3
cmpsb
push
adc
and
movsl
mov
mov
mov
lcall
fcomp
loopne
or
mov
mov
pushf
xor
popf
popa
sub
rorb
andb
in
add
mov
enter
loope
movsl
xor
mov
sub
lods
subl
mov
xor
adc
sbb
sbb
mov
sbb
filds
add
or
and
xor
sbb
cmp
and
lret
leave
xor
pop
push
sub
neg
je
push
sti
test
jb
jmp
mov
ljmp
popf
add
sub
sub
inc
ret
mov
cmp
inc
mov
lret
jb
stos
add
or
pusha
jbe
sub
loop
pop
inc
jecxz
repnz
ret
mov
inc
lahf
cmp
mov
adc
push
cwtl
rolw
int
or
and
mov
cwtl
jne
jae
in
and
add
mov
xchg
mov
andb
shll
xchg
scas
cld
add
sub
ficomps
add
es
dec
data16
and
pop
rol
sbb
and
mov
lret
push
fdivl
les
push
adc
cmp
stos
cmp
sbb
cmp
pop
sub
sbbb
adc
sbb
mov
nop
push
enter
pop
loop
push
out
jb
or
add
imul
decb
mov
xor
aas
dec
add
inc
pop
add
adc
and
popa
int3
sbbb
and
lea
repz
ljmp
jo
call
xor
or
fwait
sub
nop
adc
sub
add
mov
std
add
cli
dec
mov
aas
sub
sbb
jge
repnz
jg
pop
pop
sub
add
enter
xchg
sub
cmpsb
jae
pop
fimuls
cwtl
lods
ret
mov
xor
sub
ret
sub
cmpsb
mov
movsl
xchg
pop
idivl
pop
addl
sbb
aam
test
out
jno
cmp
fcoml
popf
mov
lock
aam
stos
inc
sub
xorb
inc
out
pop
and
push
mov
cmp
and
fcomps
or
fsubp
pop
inc
add
fsubl
and
add
enter
clc
ret
adc
adc
and
imul
push
lods
movl
inc
push
pop
jne
out
add
add
lcall
sub
iret
dec
sub
andb
jl
bound
push
lcall
mov
xchg
sub
dec
sub
outsb
hlt
lret
dec
fcoms
loopne
movb
cwtl
or
sbb
mov
push
mov
push
inc
pop
jns
stos
orl
rorb
inc
lea
aas
sub
dec
pop
mov
push
jae
add
push
pop
pop
cmp
pop
or
dec
cmpsb
adc
stos
sub
pop
int3
loop
in
mov
xor
orb
cmp
or
pop
mov
sub
fwait
pop
xor
mov
ja
insb
icebp
outsl
pop
ljmp
outsl
jb
enter
jb
jb
adc
popa
push
jmp
aam
add
andl
jae
adc
sbb
jnp
fs
pop
sub
jbe
pop
or
jo
lock
pop
xchg
mov
lds
fwait
mov
cli
xor
loop
adc
jo
lds
jp
jmp
xchg
movsl
xchg
in
dec
dec
repz
jmp
into
aam
adc
xor
stos
lret
xor
faddl
push
cmpsb
fiadds
lods
sbb
cwtl
orb
add
dec
sbb
or
loop
rcll
push
in
jb
clc
add
mov
std
jae
sub
jmp
inc
push
add
push
inc
xchg
addr16
call
data16
cltd
lods
mov
insb
push
mov
mov
int3
sub
inc
pusha
int3
cmp
mov
add
sbb
cmp
xchg
cmc
cmpsl
orb
sub
pop
mov
popf
pushf
sti
pop
test
add
inc
fistpl
aad
pop
aaa
jb
cmp
mov
push
jge
sbb
inc
in
icebp
jle
ret
imulb
mov
mov
inc
or
mov
in
push
xor
mov
outsb
xor
push
mov
mov
cmc
lods
outsl
or
cmp
mov
dec
pushf
jae
and
inc
fdivs
insb
mov
pop
xchg
add
popf
xchg
adc
mov
pop
orb
pop
or
and
inc
je
lods
daa
into
or
inc
scas
push
adc
xchg
outsl
shl
xacquire
mov
inc
cmp
sbb
jae
adc
xchg
shrl
jnp
cmp
jbe
popf
mov
and
dec
push
imul
mov
inc
and
and
inc
cs
dec
test
jbe
sbb
shl
adc
pop
sub
enter
cmc
dec
jo
inc
das
rcr
andl
mov
xor
incl
jl
sub
inc
add
pusha
movsb
mov
pop
subl
sbb
dec
push
lret
pop
sbb
sub
push
xor
jns
mov
cmp
push
xchg
andl
sub
int3
in
add
xor
hlt
adc
loop
mov
ds
test
pop
call
mov
pusha
shlb
adc
adc
jg
lret
fbld
sahf
cmp
mov
lea
outsl
sbb
mov
inc
cmp
sbb
mov
cmp
lods
subl
xor
cmp
sub
and
lds
inc
inc
sbb
movsl
dec
cmpb
ret
test
idivl
mov
add
inc
xchg
orb
pop
inc
inc
xor
cld
lds
push
inc
out
imul
adc
or
jl
aaa
cwtl
push
adc
adc
roll
xchg
pop
mov
mov
sbb
mov
les
adc
inc
adc
adc
aaa
bound
dec
cmp
rolb
repnz
inc
in
movsl
out
add
dec
add
inc
xchg
cld
mov
std
add
sbbl
add
add
leave
push
sub
std
outsl
decl
jne
rolb
or
lock
ret
push
pushf
jae
loopne
fdivs
fistpl
ret
add
adc
call
dec
ret
xor
sub
dec
arpl
push
mov
and
jle
es
daa
cli
outsb
inc
in
out
mov
clc
ror
pop
mov
ljmp
sbb
adc
and
fnsave
sbb
mov
jmp
mov
xlat
inc
xor
pop
fiadds
inc
lret
loop
cmc
add
and
sub
pushf
cltd
jp
test
sbb
push
jo
cwtl
or
loopne
les
add
insl
inc
xchg
test
scas
or
adc
fistpll
leave
ret
lahf
jecxz
call
je
xchg
mov
push
dec
jmp
or
in
stos
push
aas
neg
std
add
mov
mov
sbb
and
jge
cmpsl
outsl
icebp
jno
pop
ja
or
add
cmpb
adc
fcmovnbe
ret
clc
fistpll
push
inc
mov
mov
inc
push
jl
shlb
out
sub
pop
insb
lock
clc
adc
mov
movsl
push
pop
push
cmp
mov
sqrtps
inc
insl
sub
adc
es
or
cmpsb
js
les
lock
into
adc
xchg
orl
or
mov
or
lock
cmp
aaa
stc
lea
push
cmp
xor
stos
loopne
push
pushf
inc
and
lods
inc
or
or
sbb
divl
push
lahf
cli
into
addl
fmuls
mov
out
stos
sbb
cmp
repz
cltd
negb
fnstcw
mov
mov
add
or
adc
add
fmull
fadd
pop
add
mov
add
jno
add
daa
add
jge
lods
pop
add
adc
dec
dec
add
mov
and
cli
sbb
insb
add
adc
popa
cmpsb
popa
ror
and
subl
rclb
push
pop
adc
dec
mov
dec
push
dec
lret
mov
push
sub
ss
ficoml
add
adc
addb
push
cli
mov
inc
sub
mov
mov
add
test
insb
and
add
adc
loope
or
rcll
icebp
in
jb
push
adc
mov
leave
inc
adc
xor
sub
movsb
xorb
mov
je
aam
jae
xchg
andb
or
mov
testl
cltd
ljmp
inc
sub
and
jmp
mov
adc
repz
add
or
aam
loopne
roll
mov
and
pop
adc
mov
cli
pop
lds
addr16
or
sbb
rorb
je
mov
fdivrs
mov
das
fdivrl
ret
test
test
fimuls
push
call
fldcw
jl
sbb
pop
adc
movsb
push
aad
xchg
adc
lock
movsb
push
lds
cmp
icebp
push
loope
mov
pop
xchg
addb
dec
jp
push
in
pop
jmp
cmpl
mov
and
jno
xor
jp
mov
and
adc
xchg
mov
xor
mov
aam
dec
inc
shll
jo
jb
and
sahf
xchg
and
and
pop
mov
jl
cmp
pop
loope
add
rorl
int
add
int3
data16
daa
inc
cld
xor
pop
mov
jae
sbbl
jbe
xchg
fistpl
dec
jb
xchg
fadd
adc
and
jp
andl
enter
repz
data16
cmpsb
subb
mov
les
call
cmp
mov
mov
ret
orl
testb
data16
pusha
cmp
ficoml
out
and
add
push
dec
rclb
xchg
dec
loopne
inc
xor
add
cmp
cmp
or
add
popf
sub
push
bound
dec
add
sub
adc
push
cmp
adc
xchg
pop
addl
mov
xchg
jb
loope
inc
mov
stc
mov
xchg
push
dec
inc
addr16
dec
push
orb
mov
int3
js
adc
and
and
mov
ret
clc
pusha
sbb
mov
lods
lods
mov
xor
jg
add
dec
inc
mov
pushf
adc
jns
fcmovb
nop
aaa
jnp
adc
sub
xchg
jmp
dec
lea
inc
sub
lods
push
push
ret
test
ja
ret
or
dec
imul
sbb
rclb
movsl
add
lcall
inc
insb
iret
fsubrs
ficoms
jae
aaa
jmp
test
test
addr16
in
insb
fidivl
jg
mov
add
dec
add
mov
imul
movsb
mulb
andb
ret
adc
fistl
add
mov
and
not
add
xor
loop
fists
mov
and
rcrl
js
fwait
call
in
shlb
cli
dec
pop
pop
cmp
rorb
popa
mov
jmp
sub
es
orb
mov
loope
shlb
gs
or
es
xlat
or
sbb
call
mov
rcrl
movsl
xchg
mov
fisttpll
loopne
dec
add
andb
mov
mov
pop
icebp
out
movsb
out
add
lods
pop
jne
pop
xor
or
jne
dec
popa
bound
pop
scas
and
mov
movsl
call
adc
mov
sbb
push
enter
nop
adc
and
adc
adc
jo
xchg
mov
jne
mov
dec
dec
add
mov
and
cmp
sub
mov
dec
mov
add
bound
adc
ret
push
xor
pop
ret
xchg
js
aas
lret
inc
int3
mov
test
push
cmc
into
pop
sar
pop
test
add
jl
jg
lcall
push
mov
jl
or
add
add
ret
cmp
cld
out
xchg
add
jg
xchg
loop
sbb
in
cld
repz
xor
out
sbb
sbb
call
roll
mov
dec
push
in
or
push
test
mov
nop
stos
or
fs
add
icebp
pop
daa
fsubrl
push
mov
add
xchg
sti
nop
and
dec
add
xchg
adc
mov
bound
and
clc
mov
loopne
jnp
lcall
cwtl
mov
and
push
scas
bound
mov
cmp
jge
xlat
out
or
mov
cs
lods
cmpsb
movsl
mov
or
orl
ljmp
push
lret
xor
adc
pop
and
popa
push
sub
orb
mov
aam
push
sub
mov
inc
subb
pop
cmp
cmp
ret
or
mov
inc
push
pop
sbb
mov
sbb
or
or
inc
aam
nop
push
int3
nop
fisttpl
pop
add
xor
test
push
add
sub
es
pop
or
xchg
add
inc
sahf
push
pusha
add
lds
inc
pop
or
or
call
sub
cmc
aad
dec
inc
mov
cld
inc
jo
mov
xor
popa
pop
hlt
lcall
sbb
rorb
fwait
inc
aaa
loope
add
cmpsb
idivb
mov
aad
ja
iret
mov
ljmp
call
lret
es
mov
aam
and
lea
jp
sbb
dec
sub
in
add
mov
addl
mov
sbb
aam
and
cmp
pop
loope
les
xchg
push
mov
inc
adc
inc
xorl
sbb
add
and
cltd
adc
test
add
cmp
cmc
inc
xor
pusha
inc
enter
repz
cmpl
in
sbb
inc
aad
inc
repz
mov
rclb
icebp
pop
mov
mov
movsb
lods
jbe
test
mov
and
or
popa
das
inc
mov
xchg
sub
pop
push
xchg
pusha
mov
dec
jge
loope
add
dec
stos
call
lock
dec
pop
loopne
cmpsb
ljmp
pop
mov
cmp
push
mov
add
iret
inc
mov
add
jb
push
adc
rcr
movsl
or
rorb
push
xor
leave
push
jl
mov
arpl
cmp
push
shlb
cwtl
add
jne
or
adc
js
mov
xchg
xchg
push
jne
pushf
or
adc
call
sub
nop
push
call
call
or
ret
pusha
and
test
inc
cmp
mov
dec
mov
xchg
push
sub
cmp
inc
js
out
dec
lcall
outsl
bound
roll
xor
addb
and
shlb
loop
fs
mov
jne
dec
inc
aad
pop
pop
cmp
or
fwait
xor
lcall
push
pop
hlt
les
cmp
repz
test
insb
inc
or
lea
movl
dec
test
sbb
daa
negl
adc
xchg
daa
xchg
ljmp
dec
subb
or
or
mov
lcall
adcb
jo
mov
call
pop
pop
push
icebp
mov
rclb
into
or
rol
xor
add
stos
sarb
iret
mov
adc
sub
imul
insb
sub
or
add
jp
jae
jg
xor
add
test
jb
or
mov
mov
roll
xchg
dec
inc
sub
aaa
notb
mov
test
sbb
adc
or
adc
data16
scas
fs
lret
test
decb
sbb
leave
push
lds
les
test
jbe
dec
addr16
cli
lods
call
icebp
sbbb
pop
adc
or
inc
adc
mov
insb
cld
ds
idivl
dec
dec
je
pusha
je
sahf
inc
pusha
add
xor
clc
sub
add
sbb
test
push
xchg
add
adc
push
stos
addl
xchg
jne
cmp
mov
mov
sub
and
jp
sarb
adc
jne
popa
mov
pop
ret
std
scas
in
nop
pusha
dec
sub
inc
popa
daa
jp
xlat
aam
imul
testl
iret
or
sub
add
adc
in
scas
xor
mov
mov
clc
bound
ficompl
jns
jg
inc
or
dec
xchg
call
adc
add
xchg
push
mov
push
push
icebp
xchg
mov
pop
lahf
add
inc
pop
mov
dec
and
aam
inc
cmp
xlat
clc
add
out
add
hlt
xor
cmp
and
into
addb
mov
xchg
sub
addl
xor
int
xor
adc
in
mov
push
roll
jb
xchg
mov
mov
pop
ret
inc
mov
jae
and
sarl
xor
xor
push
add
out
mov
add
adc
out
js
push
inc
icebp
push
out
sbb
or
fwait
sub
andb
xchg
mov
enter
jne
cmp
and
jae
xor
add
test
call
inc
in
mov
sbb
or
inc
rorl
add
fwait
aam
out
rsqrtps
addb
mov
dec
scas
add
xchg
jmp
les
ljmp
lahf
insb
loope
fcoms
cmp
and
mov
addb
mov
orb
lock
sbb
mov
and
cltd
es
xchg
rcrl
mov
cltd
push
aas
aad
repz
int3
sahf
cmp
ds
jmp
loop
xchg
mov
mov
test
lock
in
enter
xor
mov
adc
pop
inc
daa
enter
pop
inc
out
or
mov
roll
fisttpl
adc
sub
es
add
mov
popa
stos
lea
inc
clc
idivl
nop
dec
shll
lcall
fbld
mov
sub
adc
push
mov
in
stos
cmp
lods
mov
push
sbb
in
jo
adc
in
std
or
lret
cli
ljmp
loope
or
jmp
cmp
jb
lods
add
enter
fsubr
mov
fimull
add
push
push
or
pusha
sbb
adc
jnp
ljmp
push
test
push
pop
popa
mov
push
jno
sbb
ret
outsb
jo
shr
stos
jl
in
xor
push
popa
test
inc
mov
pop
int3
inc
push
adc
pop
pop
xor
adc
xor
pop
mov
js
jp
mov
jg
xor
sub
ss
call
adc
test
pusha
xor
push
out
es
or
lea
idivl
add
mov
clc
enter
pop
insl
daa
or
mov
cmp
xchg
xchg
cmp
pusha
and
outsl
xchg
mov
imul
push
dec
add
mov
and
mov
sub
mov
mov
pop
inc
dec
jl
ljmp
je
add
inc
xor
out
es
mov
imul
repz
sbb
xchg
pop
mov
cmp
or
cmp
nop
dec
dec
sbb
movsl
shr
fsubs
xor
les
jae
outsb
xchg
loop
add
hlt
or
cld
in
xor
cmp
test
cmp
test
push
rcr
adc
into
dec
sbb
add
add
test
xchg
dec
jb
mov
test
push
ljmp
cli
lds
and
test
inc
and
mov
aam
dec
sahf
sbb
sbb
mov
jo
pusha
mov
incl
mov
jmp
pop
jle
adc
add
push
adc
adc
mulb
push
and
les
mov
test
popf
jae
shlb
data16
xor
je
andl
push
inc
xor
xor
fimuls
scas
stos
jnp
popa
push
add
mov
mov
adc
sbb
push
mov
push
clc
mov
ljmp
hlt
add
dec
push
stos
test
shrb
ret
add
or
push
rolb
int3
int3
push
push
sbb
fsts
push
inc
mov
xor
xor
push
xor
sbb
xchg
mov
lods
bswap
cmovbe
and
sub
data16
bound
mov
leave
js
add
clc
bswap
cmp
lods
mov
mov
sarb
leave
adc
add
xchg
rcl
adc
rcr
rcr
ja
cmp
add
popa
add
push
or
inc
xor
dec
and
cmp
out
pusha
mov
mov
insb
test
das
add
dec
hlt
int3
out
or
inc
xor
adc
and
add
cvtps2pi
in
sbb
lods
adc
mov
add
jle
or
and
dec
mov
dec
lock
rcll
loope
repnz
fisttpll
or
icebp
or
sub
insl
addr16
inc
add
daa
test
outsb
add
and
sub
inc
shrl
or
fstp
les
add
or
mov
ja
das
push
and
add
lea
pop
aam
cmpsl
mov
push
cmp
xchg
cmp
dec
fwait
hlt
or
xchg
pop
xor
jmp
sbb
repnz
or
shll
stos
call
and
or
add
sub
push
push
adc
xchg
loopne
ret
sub
clc
pusha
mov
std
xor
mov
int3
sbb
addr16
sub
je
push
sbb
or
insl
decl
or
test
jl
not
inc
cwtl
mov
stos
cmpsb
cmp
jg
das
inc
add
aaa
xor
jl
mov
xor
xor
xchg
dec
fsubr
mov
mov
sbb
lea
push
cmc
out
or
cmpsl
adc
je
jg
inc
ja
add
xor
inc
sbb
add
cwtl
or
jmp
test
xor
mov
sub
rcll
inc
add
xor
leave
mov
cmc
pop
pop
or
jb
pop
inc
add
fcmovb
ret
jecxz
rolb
outsb
out
sbb
dec
mov
adc
aas
sbb
mov
xchg
int
sbb
clc
jnp
push
aam
add
add
add
or
mov
adc
pushf
les
sbb
mov
rorb
data16
hlt
sub
mov
inc
ffree
push
inc
mov
inc
xor
leave
jno
imul
jg
bnd
nop
pop
xchg
stc
add
and
call
cmc
cld
or
dec
sbb
pop
sub
cwtl
xlat
adc
cmp
jb
adc
dec
iret
cmova
outsl
adc
inc
inc
add
pop
mov
pop
cltd
fistps
add
inc
rcrl
sub
adc
ljmp
sti
inc
push
addb
mov
mov
ljmp
pop
and
mov
mov
add
decb
push
sbb
cwtl
inc
adc
enter
sub
add
cmp
lcall
mov
ja
call
mov
xor
rol
dec
sub
push
in
es
xchg
lcall
xor
je
push
or
xchg
sbb
rsm
ss
or
pop
in
inc
mov
sub
add
in
mov
push
loope
cmp
in
pusha
xchg
and
and
jge
mov
mov
pop
je
inc
or
ret
pop
and
mov
out
add
loope
dec
roll
aaa
test
imul
add
stos
dec
lret
pop
outsl
rcrl
sub
pop
js
loop
andb
cmp
lods
jl
jo
mov
test
and
push
ret
into
jmp
adc
movsb
pusha
insl
pop
lcall
in
xchg
cmp
test
movl
sub
loope
dec
and
cmp
dec
aam
pop
lock
cld
jbe
sub
sar
stos
mov
in
add
and
js
inc
adc
inc
stos
wrmsr
fwait
inc
xor
inc
sbb
aam
fs
pop
push
dec
add
xchg
add
stos
inc
mov
notb
sbb
stos
adc
arpl
ror
sub
mov
popa
inc
push
sbb
dec
push
mov
bound
or
pop
rorb
inc
sub
lds
stos
fidivrs
sub
mov
cmc
rorl
xchg
jecxz
fbstp
cmovle
mov
and
js
sbb
int3
inc
xor
mov
clc
push
arpl
dec
add
add
andb
mov
add
sbb
sub
aam
pop
aam
lds
out
and
movsl
data16
scas
fxch
add
xchg
push
and
push
mov
into
pushf
push
cli
pop
mov
cld
test
test
sub
sub
xchg
mov
push
fs
out
jge
mov
push
mov
dec
loop
bound
les
js
jo
dec
sbb
int3
aam
pop
mov
aaa
out
stos
hlt
mov
or
mov
fiaddl
iret
mov
stc
adc
popf
int
mov
fwait
xchg
ja
dec
and
adc
inc
sub
in
mov
mov
push
mov
add
push
test
imul
mov
jns
int
int3
mov
je
pop
stos
ret
int3
add
fnstenv
dec
shll
inc
mov
sub
and
xor
adc
xor
pop
add
les
sbb
int3
lds
and
clc
xchg
xchg
ficomps
xchg
bound
jo
add
lea
cltd
roll
es
sub
ss
xor
adc
sub
mov
xchg
pop
or
pop
and
lds
adc
xchg
fmulp
push
mov
mov
mov
cwtl
icebp
sub
sbb
int
mov
and
ljmp
mull
xchg
filds
dec
aas
jne
cwtl
cmp
lods
ret
adc
dec
inc
mov
aaa
roll
adc
add
sub
mov
nop
jle
xor
xor
mov
int
dec
or
pusha
cmpsl
adc
inc
das
lahf
and
jne
or
xchg
arpl
sbb
jo
dec
xchg
lock
xor
and
jg
dec
push
out
xchg
pop
int3
cmc
xor
loop
pusha
shr
popf
adc
ret
jbe
jmp
adc
push
mov
setb
jb
and
ljmp
lock
out
int3
fiaddl
rolb
adc
fildll
subl
jne
rorl
mov
inc
aad
or
push
sub
rorb
sbb
adc
push
or
mov
inc
push
mov
call
push
adcl
bound
loopne
mov
inc
xor
xor
movsl
aas
sub
fadds
fisubs
dec
sbb
sti
inc
push
dec
mov
inc
or
test
test
push
xchg
sbb
push
jno
les
mov
ja
daa
pop
sub
mov
test
push
and
dec
rorl
stos
dec
mov
iret
inc
leave
mov
xchg
subb
xor
mov
cmpsl
push
or
push
xor
addr16
into
fldenv
sbb
orl
pop
sarl
cltd
adc
dec
sbb
push
push
popf
mov
lock
cli
xor
inc
mov
add
pop
or
outsl
fbstp
out
xor
adc
pop
ds
test
pop
ficoms
js
lock
cmp
ds
sbb
insb
lea
push
and
inc
loope
pop
push
sbb
popa
es
cmpsl
cmp
mov
jae
pop
add
popa
and
push
adc
inc
orb
aam
add
jo
orb
fiadds
inc
sbb
nop
lds
sub
dec
inc
out
adc
lret
mov
out
int
sub
mov
fimuls
sbb
cmp
mov
sbb
push
inc
lea
icebp
loop
or
daa
mulb
cmp
and
mov
test
sbb
outsl
testb
push
cmp
cli
fnstsw
divl
sub
adc
fwait
inc
inc
add
add
inc
sub
push
negb
sahf
add
aaa
xor
dec
out
das
cltd
fisubrs
cmpsb
xchg
stos
adc
insl
fstpl
mov
cld
in
mov
mov
fwait
add
insl
dec
jno
pusha
fisttpl
dec
pop
and
call
inc
mov
push
or
jecxz
divb
pusha
add
mov
jl
or
push
xchg
inc
in
rcrb
mov
adcl
aaa
mov
xor
aam
sbb
arpl
es
cs
fisubl
sbb
mov
or
test
sbbb
jae
adc
test
adc
fisttps
push
mov
ret
adc
fists
sub
push
adc
mov
push
aam
add
lock
aas
xchg
sub
inc
jmp
add
and
sti
mov
dec
pop
in
jb
pusha
lods
sti
xor
and
adc
push
popf
mov
mov
xchg
dec
or
mov
adc
iret
jge
and
sbb
pop
sti
add
enter
sti
inc
xor
pop
pop
push
jle
aad
bound
sbb
cli
mov
xchg
arpl
adc
rorl
out
pop
sub
lds
pop
adc
xchg
and
xor
rclb
dec
push
mov
mov
es
pop
sub
adc
or
into
xchg
mov
mov
pusha
push
fwait
mov
hlt
lds
incb
adc
push
pop
adc
cltd
xor
sbb
push
insl
push
jno
cmc
xchg
daa
rolb
icebp
das
test
adcb
je
mov
adc
mov
fistpl
out
stos
sbb
or
in
and
es
or
sbbb
sub
les
lds
xor
xor
lock
mov
pop
insb
or
sbb
xchg
sub
movl
add
pop
sahf
icebp
sbb
loope
sbb
xor
inc
daa
sbb
jge
fwait
dec
sub
adc
add
js
fstpl
sub
and
add
out
xchg
inc
int3
mov
push
sbb
adc
insl
pushf
push
rolb
sub
es
jmp
test
adc
sub
and
add
test
lock
loope
xor
in
mov
aam
cwtl
ret
out
mov
sub
adc
imul
and
jb
cmp
inc
xor
cld
aaa
push
jmp
aam
push
xchg
push
in
jp
dec
inc
clc
js
arpl
negb
ljmp
pop
add
dec
inc
call
or
add
inc
in
fsts
sub
push
cmp
icebp
adc
adc
dec
push
jb
inc
add
mov
addb
and
lods
push
jecxz
popl
das
fidivrs
hlt
ljmp
in
xchg
movsl
movl
into
adc
sub
sbb
fdivs
cld
sub
pop
jge
sub
leave
das
add
or
das
or
call
dec
scas
int
push
hlt
jp
add
xchg
out
cld
loope
adc
add
fcoms
sbb
inc
push
test
sti
mov
lret
fwait
rcrb
add
mov
cli
mov
aas
dec
stos
call
rorl
pop
rolb
mov
or
push
aad
push
xor
mov
repnz
inc
test
test
xor
outsl
aaa
push
loopne
loopne
inc
xor
add
lcall
shll
mov
das
addl
adc
adc
mov
fidivs
es
push
adc
mov
outsl
and
dec
cltd
lret
mov
inc
int3
adc
fwait
lret
das
and
inc
fsubl
movsb
or
adc
dec
pop
cmp
push
jne
scas
jge
add
dec
loope
aam
mov
cmp
adc
xchg
and
test
fbld
jb
xchg
cmp
sub
hlt
push
sub
lret
in
shl
mov
and
inc
test
xchg
mov
or
int
cmc
mov
push
in
pop
and
js
in
push
dec
mov
pop
dec
ret
imul
inc
adc
insb
aas
clc
clc
fldl
subl
in
push
rorb
adc
xchg
cwtl
nop
or
insl
or
add
imul
lea
int3
cwtl
inc
cli
inc
jmp
or
jns
dec
cmp
fwait
mov
push
push
mov
dec
sbb
cld
cmpsl
pop
cmp
add
add
rolb
lock
inc
xor
cli
adc
adcb
add
xchg
sbb
mov
in
cli
and
mov
or
lods
push
pop
test
and
lock
xchg
mov
ret
daa
cmp
push
and
jbe
xchg
outsb
and
mov
dec
stos
enter
mov
invd
cmp
repnz
dec
or
add
sub
xchg
call
xchg
sarl
push
xor
push
adc
dec
bound
stos
inc
push
ljmp
add
nop
stos
aas
clc
pop
rolb
xchg
inc
sub
sub
adc
xor
sbb
aad
pop
inc
xlat
mov
or
cmp
fdivl
daa
loope
mov
pop
inc
in
adc
mov
test
jmp
add
jns
call
mov
or
jnp
stos
pop
adc
push
jne
stos
dec
movb
and
cmp
das
mov
data16
sbb
dec
adc
lods
andl
loope
call
inc
pop
mov
bound
scas
jbe
sub
cmp
xor
lock
xchg
push
in
xchg
adc
fmulp
out
das
call
addb
fcmovnu
inc
jecxz
add
cmp
ficompl
mov
adc
popf
sbb
mov
mov
aaa
mov
inc
pusha
aam
or
or
dec
push
jmp
or
inc
pop
xchg
and
insl
add
ror
repnz
addb
add
lods
outsl
push
mov
in
roll
inc
sub
or
testl
out
sub
inc
inc
jne
mov
lock
push
mov
inc
dec
mov
daa
ret
mov
or
push
push
dec
stos
outsb
mov
mov
addb
inc
add
add
xchg
mov
or
sahf
notb
loop
popa
shlb
mov
adc
movsb
mov
dec
aam
or
rolb
push
sub
fwait
dec
imul
or
mov
and
or
or
pop
test
and
push
inc
mov
loope
dec
adc
addr16
mov
adcl
fucomi
or
or
ret
clc
in
test
lret
repz
rorb
mov
rcrb
insl
push
dec
dec
sub
adc
add
xchg
lods
mov
push
and
cmc
and
and
inc
addl
cmc
and
aam
adc
or
out
das
fbld
vmovsd
adc
jmp
jne
jns
dec
sub
xor
stos
js
jns
fdivl
add
add
rcl
jp
in
inc
adc
adc
sbb
addb
xchg
shll
imul
push
mov
or
sub
add
ja
mov
push
xor
pusha
aam
mov
ficompl
loop
add
and
ja
add
adc
add
jmp
pop
add
fmuls
inc
inc
push
xchg
scas
push
push
aad
icebp
ds
rorb
mov
scas
jb
mov
pop
fnstcw
xchg
push
pop
sbb
mov
and
mov
mov
clc
xor
push
xor
addb
inc
jb
test
pop
fmuls
push
inc
sbb
push
iret
xchg
fdecstp
add
movsl
popf
push
sub
movsb
test
or
addb
fadds
mov
adc
scas
push
add
cmpl
adc
sub
sbb
xchg
movsl
mov
adc
jo
or
sub
inc
mov
ljmp
in
inc
daa
jecxz
bound
lcall
push
push
das
adc
subl
cwtl
sahf
pop
cwtl
or
aam
pop
xlat
pop
inc
xor
enter
sub
push
cmpsb
jns
fiaddl
daa
icebp
stos
cmp
pop
insb
push
lock
mov
pop
js,pn
adc
inc
je
xchg
cmp
mov
pusha
sbbb
test
xchg
lcall
xor
pushf
add
inc
shrl
pop
add
subl
pop
pop
mov
jb
scas
adc
dec
sbbb
adc
jg
sub
and
adc
jmp
lods
sbb
xchg
test
dec
jle
sti
fisubl
ret
or
xchg
inc
xchg
add
pusha
cmp
sbb
dec
add
push
ds
fdivrs
mulb
fsubrs
rcll
cmp
jae
loop
xor
in
or
adc
dec
jecxz
cmp
clc
inc
pop
out
add
or
clc
push
in
xor
mov
cmpb
lahf
es
add
xor
or
cmp
pop
repz
es
cmp
xor
mov
gs
and
add
xchg
orb
mov
js
cli
and
adc
cmp
sub
adc
cmp
xor
fcom
out
cmpsl
lods
test
stc
mov
sub
fndisi(8087
fadds
sbb
mov
cmp
rorb
jle
inc
xor
fstpl
js
mov
lcall
sbb
push
loope
sti
jne
fsub
sbb
xchg
fisttpll
sar
xor
sarl
or
popf
fcompl
jl
inc
cmp
mov
xchg
xchg
pop
and
add
jmp
sbb
xor
adc
pop
sbb
push
out
adc
or
sbb
sub
les
aam
push
xchg
jl
loopne
and
popf
jg
insl
push
dec
sbb
movsl
mov
sub
adc
ror
push
inc
in
loopne
cs
stos
adc
in
inc
add
dec
lods
push
sbb
movsb
mov
cmp
sahf
je
pusha
or
roll
sbb
sub
ds
mov
or
shll
mov
js
inc
out
add
xor
and
sbb
rorb
ljmp
mov
cmpsb
aas
mov
cwtl
or
outsl
in
rorl
jne
fdivrs
rclb
icebp
mov
repnz
pop
in
or
movb
mov
jp
in
pop
sub
jg
sub
inc
inc
fdivrl
test
dec
fmull
mov
sbb
orb
push
lods
loop
aas
js
pop
adc
cmp
test
pop
push
xor
incl
mov
xor
pop
add
cs
push
pop
test
mov
adc
or
int3
jo
or
cwtl
inc
mov
and
inc
adc
xchg
addb
js
popa
adc
pusha
cwtl
inc
mov
push
mov
aam
test
pop
cwtl
and
sub
mov
xor
aad
sub
mov
push
ja
pop
push
lods
test
cmp
mov
rol
mov
scas
arpl
and
loope
add
shl
test
mov
daa
jb
inc
adc
cli
test
roll
inc
es
lret
data16
in
out
ret
ret
loope
inc
add
or
adc
pop
adc
out
lds
adc
dec
adc
sub
lea
inc
or
mov
test
rcrl
xor
inc
aad
inc
in
xor
sbb
cmp
ja
xorl
cmp
sub
sub
es
filds
push
inc
xor
dec
roll
xorw
cld
mov
repnz
add
adc
nop
adc
cmp
mov
sbb
push
in
test
sbb
or
gs
xchg
fldenv
mov
inc
addb
adc
div
js
into
sub
sbb
mov
lea
push
pop
loope
test
aam
rorl
cmp
adc
jnp
lret
sub
add
mov
inc
and
sbb
pop
daa
inc
or
pushf
js
sub
mov
and
mov
xchg
div
loop
inc
sbb
add
xor
add
icebp
cmp
roll
add
add
cmpsb
and
icebp
sarl
in
idivl
pop
lock
adc
dec
xor
cli
stos
and
mov
xchg
inc
xchg
xchg
pop
filds
lret
decl
pop
jne
clc
out
sti
fnsetpm(287
ror
push
mov
loop
neg
cmp
in
add
ret
std
dec
out
and
in
fcomps
pop
sub
hlt
push
mov
mov
ret
popf
mov
je
inc
cltd
jmp
adc
sarl
add
push
sub
out
stos
jecxz
ror
jmp
sbb
adc
xor
loop
dec
fnstcw
hlt
jbe
sti
push
sub
sbb
bnd
adc
or
outsb
push
pop
xorl
inc
clc
sbb
or
imul
outsl
inc
mov
test
pop
roll
loope
jge
pop
lds
jns
push
jno
lret
push
loope
add
roll
sub
icebp
dec
and
roll
rorl
inc
or
jne
xor
adc
push
repz
pop
paddsb
nop
or
jmp
jp
iret
mov
push
nop
stos
pop
adc
adc
pushf
outsb
js
out
add
popf
cmp
jmp
rclb
and
lock
jmp
xchg
repz
or
push
adc
insl
inc
add
mov
lock
push
cmp
mov
lahf
add
test
adc
adc
adc
pop
fldenv
mov
icebp
jp
cwtl
jg
pop
insl
std
mov
and
leave
jns
lahf
sub
into
repnz
fwait
in
aaa
mov
js
and
xchg
mov
mov
dec
adc
mov
sub
or
cmpsl
jp
int3
and
popa
add
sub
fs
inc
jle
aam
lret
mov
cmpsl
mov
shrl
movsb
mov
push
jl
adc
or
jp
inc
or
sbb
dec
dec
clc
mov
rorb
xchg
inc
and
cmpsb
mov
fsubrl
mov
scas
add
sub
xchg
shll
push
roll
test
jne
cwtl
mov
add
jl
jnp
pop
loope
sbb
and
jmp
pop
fwait
stos
dec
sbb
inc
and
add
sbb
lret
xchg
dec
test
fsubs
shlb
icebp
dec
roll
jl
js
mov
aad
push
mov
es
inc
or
test
sub
sbb
loop
xchg
loop
add
or
loop
jo
add
push
cwtl
pop
mov
mov
or
cmc
int
fmulp
push
jno
adc
mov
cwtl
add
push
sub
dec
dec
scas
shrb
les
call
scas
addl
xor
decl
hlt
out
pop
aas
sbb
xor
sub
xchg
and
mov
dec
nop
rorb
outsl
out
inc
inc
fwait
inc
xchg
dec
lea
cmp
and
in
mov
adc
add
imul
cmpsl
push
push
xchg
loopne
fiadds
andb
int
add
inc
je
sub
mov
pop
cmp
enter
push
andb
insb
call
repz
jle
inc
or
clc
lcall
es
sub
arpl
outsb
mov
int
mov
jmp
mov
mov
push
fldl
adc
inc
fwait
test
adc
popf
pop
xchg
js
jl
loopne
loop
xor
dec
lock
repnz
push
cltd
adc
addb
push
int3
sub
loop
push
mov
add
sbb
adc
sbb
cmp
xchg
xchg
inc
cmc
test
pusha
jno
inc
adc
cmc
inc
mov
push
cltd
cs
pop
add
stos
mov
mov
push
mov
aam
lock
adc
xorps
popa
test
ds
mov
lcall
hlt
xor
shlb
and
loop
push
inc
push
sub
xchg
rol
addb
addb
adc
add
cmp
cmp
push
and
aas
mov
popa
pop
push
cld
cmp
sub
mov
stc
inc
sub
push
mov
rolb
fwait
js
sbb
jl
add
or
add
add
inc
loope
int
add
ds
mov
push
mov
iret
add
lret
ljmp
pop
movsb
and
jge
mov
sub
mov
mov
pop
icebp
cmpsb
bound
ret
enter
push
inc
xchg
loope
test
pop
rorb
dec
and
mov
or
push
cmp
enter
adc
adc
aam
mov
jne
push
adc
mov
jmp
insl
inc
sbb
cmp
es
repz
fists
and
nop
add
adc
aam
pop
inc
test
into
lret
adc
inc
loope
adc
xor
dec
cltd
push
call
pop
adc
fisttpll
into
jp
decl
add
mov
xor
dec
xchg
pop
adc
dec
jecxz
std
pop
decb
das
xor
bswap
addb
sbb
les
pavgb
test
and
dec
inc
fadds
xchg
or
popa
in
sub
cmp
pusha
push
add
sub
cmp
stos
push
and
cwtl
shll
jb
push
iret
mov
pop
inc
jp
rcrl
fistpl
jge
inc
jmp
inc
bound
pop
push
xchg
add
xchg
vpaddd
clc
sub
test
add
sbb
lock
pop
pop
cmp
int3
ljmp
adcb
push
icebp
add
adc
pop
loopne
and
pushf
or
push
ret
sub
loopne
mov
inc
sbb
add
loope
add
cmp
jp
adc
or
add
rcl
in
mov
je
sbb
lds
fwait
adc
fsubrl
shlb
dec
ja
inc
mov
ss
gs
add
cmp
and
adc
xchg
inc
loopne
cwtl
push
fs
fmul
and
push
xchg
mov
mov
push
repz
xchg
mov
add
sbb
and
es
and
add
cli
xor
loop
pushf
sbb
roll
mov
or
insl
aaa
sbb
jle
les
mov
pop
add
sbb
shll
pop
xchg
adc
aad
rolb
add
cmc
insb
cli
aas
xor
ficoms
cli
sub
or
inc
sub
stos
bound
rorb
es
mov
ja
sub
cld
pop
sarl
mov
or
les
dec
jne
cmp
sbb
enter
outsl
sbb
and
mov
xor
mov
nop
and
sarl
add
shlb
or
mov
gs
loop
jae
push
mov
arpl
push
pop
push
cld
into
add
sub
xor
dec
add
inc
inc
fstp
fwait
popf
ljmp
cli
test
cld
xor
mov
decl
hlt
sbb
cmp
or
cmp
rolb
mov
repnz
adc
clc
call
or
dec
and
rolb
lods
cld
or
add
les
aad
fs
ret
sub
cmp
sub
push
call
mov
sbb
xchg
cmp
pusha
mov
push
adc
bound
xchg
cmp
sub
gs
sub
mov
xor
inc
ret
add
cmpsb
cli
and
and
jbe
xor
loop
mov
insl
enter
sub
clc
fsubl
add
dec
enter
cmp
sub
mov
mov
push
xor
xor
mov
push
in
mov
in
clc
or
loop
mov
push
ror
mov
and
pop
add
inc
inc
mov
xor
mov
cmp
jno
push
rorb
mov
leave
cmp
inc
iret
adc
sub
mov
push
movsl
pop
and
mov
bound
fldl2t
fstpt
imul
test
pop
mov
adc
dec
or
jg
jnp
mov
shrb
and
push
not
ficoms
ss
out
xor
icebp
shrb
dec
push
add
adc
lcall
lods
js
cltd
es
and
fsubrp
xor
shlb
imul
roll
xor
icebp
das
inc
add
addb
add
push
or
push
in
xlat
arpl
mov
add
sbbl
jl
cmpsl
shrb
dec
inc
adc
jl
or
sbb
pop
jecxz
mov
gs
fimull
arpl
movsl
cmp
jne
inc
stos
inc
icebp
pop
add
sbb
pop
adc
mov
fbstp
add
xlat
je
sahf
loope
cs
rcrb
and
fnstenv
call
jne
inc
orb
and
leave
mov
in
push
pop
jle
imul
inc
xor
and
data16
mov
cmpl
xchg
pop
shr
add
loope
xor
dec
les
cmp
adc
push
shrb
add
imul
mov
xchg
push
or
test
aaa
jmp
lds
mov
mov
sub
rcl
stos
jl
mov
adc
mov
jecxz
add
or
out
adc
inc
insl
inc
adc
and
mov
and
adcb
or
or
or
cmpsb
adc
divl
or
cs
int
cwtl
adc
jle
mov
xor
ljmp
xacquire
incl
mov
lea
push
push
lahf
test
mov
enter
cld
adc
loopne
mov
dec
pop
je
and
mov
repnz
inc
xchg
in
mov
mov
dec
out
push
ficoml
sbb
popa
sti
les
inc
ja
gs
xchg
lods
push
adc
xchg
mov
test
sub
enter
mov
paddsb
aad
push
mov
rol
adc
or
lret
cld
inc
in
dec
mov
rorl
mov
repnz
xchg
pop
sbb
arpl
sbb
sbb
ret
cmp
push
mov
sarb
pusha
adc
sub
movsl
loopne
inc
cld
sub
movsl
cmp
inc
sar
loopne
adc
add
int3
xorb
sub
mov
push
shrb
mov
dec
jge,pn
sti
insb
hlt
mov
cmp
cmpsl
dec
je
wrmsr
mov
hlt
add
jnp
adc
cmp
rorb
xor
mov
les
popf
mov
out
jns
fiadds
push
mov
dec
mov
mov
lods
inc
nop
xor
fadds
adc
add
cmpb
dec
push
jge
out
insb
cli
push
or
push
bound
and
add
dec
aad
bnd
add
add
es
jg
dec
out
ja
mov
add
test
test
fnstsw
or
and
mov
movsb
or
jo
or
sbb
mov
push
cmp
mov
imul
lahf
mov
cmp
das
pop
popf
lcall
xor
dec
add
inc
cmp
sub
mov
xchg
xchg
pop
push
adc
leave
dec
or
outsl
lea
add
adc
sbb
es
test
mov
enter
jno
jo
mov
loop
xor
add
and
adc
xor
addr16
jge
adc
test
in
movsb
sbb
filds
popa
pop
hlt
cmpsb
pop
push
imul
out
jecxz
cld
popa
or
mov
or
fs
lret
cli
inc
add
mov
push
andl
aad
sahf
add
sbb
dec
and
aas
cmpsl
jecxz
aaa
or
jo
and
cmc
sbb
mov
add
push
imul
enter
bound
adc
in
xor
and
addb
or
cmpl
int
add
add
shrb
and
in
jnp
add
cmp
add
aad
scas
insb
add
add
stos
or
cwtl
and
addl
mov
or
or
and
add
out
pop
adc
mov
or
mov
push
jns
adc
or
sub
hlt
sbb
jmp
mov
mov
pusha
push
imul
inc
into
loope
mov
xor
mov
adc
xor
sbb
pusha
inc
cld
dec
into
and
xor
cmp
arpl
je
xlat
sti
hlt
stc
rcll
gs
dec
fsubl
rcrl
jo
ret
mov
hlt
xchg
test
or
and
and
fsts
add
roll
divb
mov
mov
outsb
sbb
or
xor
nop
sbb
xchg
push
mov
into
sub
xor
popf
cmp
clc
push
mov
testb
dec
es
xor
mov
inc
icebp
out
shll
xor
push
lods
enter
push
mov
movsl
inc
test
dec
inc
dec
dec
je
insl
fidivl
inc
inc
aas
mov
aam
cmp
testl
inc
dec
daa
popf
mov
push
rorl
lds
add
mov
bound
fwait
dec
aad
lcall
pusha
cmpsl
shr
or
enter
add
and
movsb
addr16
sbb
dec
xchg
mov
loopne
scas
or
lret
aaa
icebp
mov
and
or
add
sahf
leave
and
hlt
sub
add
outsb
loope
shrb
imul
mov
mov
popa
mov
lret
sbb
pop
xor
addr16
scas
pop
pop
js
mov
imul
mov
loop
das
daa
lds
adc
xchg
ret
negl
loope
adc
clc
push
push
dec
mov
loopne
push
adc
js
and
pop
or
xor
mov
and
push
adc
das
insl
dec
push
gs
push
jbe
imul
pusha
shrb
and
mov
sarl
lcall
xor
cli
loope
push
loope
jge
sub
les
sti
in
push
inc
lea
jl
lock
mov
ret
jae
push
sbb
sub
outsb
mov
cwtl
add
lock
and
mov
sub
popf
sub
movsl
pusha
in
inc
in
adc
jbe
xor
sti
aad
into
sub
cltd
call
and
add
data16
sub
hlt
mov
push
das
ret
push
mov
cmp
push
jp
jge
fcoms
lahf
sarb
mov
xor
sub
jo
orb
orl
mov
dec
add
mov
ds
add
rorb
and
or
imulb
mov
arpl
xor
mov
push
push
jo
sbb
dec
cli
das
push
mull
or
xor
mov
cmp
add
decl
call
leave
pusha
bound
xchg
in
in
loopne
adc
data16
pop
mov
mov
add
cli
sbb
and
dec
mov
jge
add
pop
pop
enter
hlt
xchg
shrl
push
xchg
mov
lods
push
std
adc
loope
sbb
xor
loopne
out
lahf
mov
sbb
adc
add
pop
addr16
lods
xchg
adc
and
orb
sbb
pop
mov
sbb
in
inc
add
cmp
add
cltd
dec
pushf
mov
ljmp
add
sbb
xor
mov
adc
dec
fstpl
push
and
into
adc
xabort
pushf
inc
popf
hlt
inc
into
cmp
aam
fnstcw
jge
sub
xchg
or
iret
or
inc
out
or
mov
outsl
fimull
imul
inc
or
cwtl
mov
and
inc
ret
push
sbb
shll
imul
orb
movq
bound
lret
stos
outsl
ret
loope
mov
add
andb
cltd
call
mov
dec
xchg
lea
jmp
or
aaa
call
adc
pop
adc
push
adc
cmpl
movsb
push
xchg
adc
sti
dec
out
xor
jmp
test
adc
or
xlat
push
and
clc
arpl
test
movsl
fldcw
ds
cwtl
push
icebp
add
cmpsb
into
xchg
cmp
add
pop
xor
das
pop
test
jo
outsl
outsl
inc
mov
sbb
sub
pop
bound
lods
aaa
dec
add
push
sarl
sbb
or
dec
andl
inc
cwtl
xchg
enter
add
ljmp
adc
call
adc
fcmovb
mov
jbe
je
jne
cmp
insl
xchg
ret
inc
adc
mov
pop
jl
in
cmp
js
and
xchg
push
jno
adc
test
and
jae
adc
sub
mov
push
inc
jbe
adc
in
adc
sbb
hlt
jne
shll
add
dec
das
sahf
adc
jge
pop
jmp
push
xor
add
stos
push
dec
mov
sub
or
in
add
mov
ret
adc
mov
movsl
loop
xchg
add
mov
stc
or
jb
cmp
lret
dec
mov
cmp
bound
cmovg
addl
jb
iret
aas
inc
pop
les
insb
push
inc
fisttpll
jb
and
out
add
mov
lds
stos
xor
fidivl
das
ret
imul
mov
push
mov
out
or
ljmp
and
sub
sub
lock
add
push
adc
divb
stos
pop
mov
mov
cmp
fdivs
pop
incb
movsl
je
fsubrl
pop
xor
sti
mov
loope
mov
es
rcrb
mov
cmp
iret
mov
or
or
daa
pop
insl
insb
clc
adc
popf
insb
outsl
and
or
or
jp
clc
push
mov
stc
and
and
xchg
and
inc
xor
jp,pt
cmp
hlt
test
adc
cmp
sbb
clc
aad
mov
stos
fprem
mov
test
jo
adc
push
push
mov
and
sub
pusha
sbb
xorl
fiadds
sahf
cwtl
dec
pop
mov
inc
jge
sub
pop
mov
test
inc
adc
fadds
xchg
sub
pusha
mov
add
sub
leave
push
jne
add
mov
ret
test
xchg
mov
or
fstpl
sti
std
cmp
cmp
mov
or
xlat
and
subl
ss
roll
xchg
andb
js
cmp
jo
mov
push
adc
xcrypt-cfb
cmpsl
daa
bound
sbb
out
mov
cli
hlt
cmc
pop
in
gs
jp
aam
bound
pop
roll
stos
push
imulb
ja
cmpsb
sub
ret
push
mov
xor
inc
test
ljmp
pusha
in
jle
xchg
out
xchg
add
adc
stos
das
bound
divb
js
inc
sbb
test
xor
rorb
sub
mov
push
push
aas
inc
xor
shll
mov
jmp
inc
addb
add
push
cmp
call
push
mov
cmp
mov
lea
mov
mov
scas
mov
mov
xchg
or
sub
dec
add
or
pop
push
nop
jecxz
sbb
lds
psubsb
push
add
pop
xor
ret
add
ret
lret
pop
cmp
xor
in
pusha
popa
add
jmp
pop
unpckhps
and
aad
out
mov
cwtl
ja
testl
adc
push
xorb
push
dec
xor
test
ja
fsubl
xchg
push
jmp
xchg
inc
push
lock
sbb
ret
jmp
mov
sbb
sahf
jae
pop
int3
xchg
add
dec
mov
icebp
mov
int
cmpsl
loope
sbb
cld
popf
and
inc
roll
inc
dec
imul
movsb
and
out
or
cmp
loop
lods
clc
loopne
scas
pop
adc
jmp
lods
and
and
mov
sbb
add
push
std
out
lahf
in
scas
xlat
inc
add
add
shl
std
add
or
pushl
mov
push
fnstcw
push
cmp
adc
fsts
inc
adc
test
imulb
mov
mov
int
shrb
ss
iret
or
dec
in
mov
rorl
sahf
rcrl
jbe
test
addl
mov
rcrl
psrld
aam
test
dec
ret
inc
mov
clc
mov
xor
or
inc
je
dec
inc
sub
clc
push
repnz
lahf
imul
pop
inc
js
sbbb
jbe
dec
stos
aam
insl
enter
cwtl
cmp
jbe
jp
or
adc
push
hlt
pop
xlat
dec
mov
inc
jo
pop
mov
mov
jo
rolb
xor
push
or
inc
shrl
xor
stc
in
jae
push
xor
jg
mov
imul
xor
call
roll
mov
add
call
int
cmp
jmp
pop
jp
xchg
sahf
jo
sbb
jbe
mov
and
lods
in
adc
stc
inc
push
pop
mov
pop
hlt
sub
cmpsl
mov
jg
movsb
inc
test
mov
push
inc
cs
inc
add
stos
je
sbb
iret
xor
loope
sub
in
or
dec
push
daa
scas
aam
es
inc
mov
xor
mov
test
xor
adc
sub
adc
dec
push
sub
rclb
andl
jl
mov
cmp
pop
push
roll
mov
jmp
fwait
adc
enter
sbb
addb
das
lea
notl
subl
inc
loope
call
lds
out
aam
movsb
sahf
mov
push
popf
movsb
pop
inc
out
jmp
add
js
add
js
adc
add
scas
add
fmuls
out
cmp
movsb
xchg
nop
adc
jnp
cmp
sbb
in
test
popa
adc
adcb
add
pusha
inc
adc
loopne
popf
cmp
aaa
dec
adc
adc
and
cmp
mov
clc
jmp
add
push
cmp
mov
mov
loope
lret
mov
addl
adc
push
ljmp
inc
mov
dec
orb
inc
and
mov
mov
pop
fisttpl
test
je
inc
shlb
rclb
loope
leave
lock
data16
outsl
mov
pop
mov
test
int
push
pop
add
push
cmp
pop
icebp
sub
add
ffree
jmp
and
and
mov
adc
out
xor
fidivrl
adc
dec
fsts
mov
cmp
cwtl
pop
mov
in
push
mov
add
and
dec
add
xor
aam
jg
sub
cmc
jg
cmp
pop
sbb
call
xor
cld
push
sbb
pop
pop
out
xor
fcomp
mov
lret
ds
push
add
ret
sbb
subl
or
lods
clc
cmp
hlt
jne
addr16
sbb
add
push
xor
clc
xchg
fwait
inc
popa
add
add
rolb
xor
je
test
xor
cpuid
addr16
mov
and
mov
add
out
sahf
mov
jne
fimuls
addr16
mov
dec
scas
popf
pop
push
xor
addr16
xchg
test
lods
incb
xchg
dec
add
in
xchg
sbb
shrl
clc
mov
jmp
dec
inc
adc
adc
xchg
dec
addr16
les
sub
icebp
addr16
scas
mov
push
insl
dec
mov
or
int
aas
ss
hlt
mov
and
fdivp
adc
clc
adc
push
xchg
and
and
dec
and
or
sbbb
addb
jp
add
loopne
popf
in
mov
call
and
pop
adc
xchg
mov
push
and
push
hlt
jg
push
push
and
lahf
cmp
adc
clc
cli
rcll
cmc
in
hlt
mov
mov
jb
adc
aas
fsubs
inc
adc
mov
out
xchg
add
in
ficomps
or
mov
cmp
push
call
loopne
mov
es
jne
pop
rclb
enter
rcll
es
in
mov
xchg
jno
pusha
std
jmp
xchg
mov
aam
add
js
loopne
xor
mov
add
sbb
adc
subl
imul
inc
pusha
push
addr16
ds
aad
call
cmp
leave
jno
jb
aad
data16
cmc
roll
inc
das
std
inc
jae
or
xchg
test
pushf
jb
scas
pop
ss
push
ret
xor
or
mov
lods
jp
xchg
or
and
mov
stos
mov
cmp
or
fmuls
sahf
xchg
or
jbe
ror
add
in
adc
dec
or
inc
mov
jg
mov
adc
xor
call
or
push
fs
sahf
cmp
jecxz
loope
mov
and
icebp
stos
cmp
adc
mov
cmp
dec
inc
xor
cmpsl
outsb
mov
pop
fwait
inc
xor
xorl
ret
fimull
add
clc
roll
enter
xor
mov
insb
add
xchg
test
cmp
xchg
dec
or
mov
push
xchg
add
jmp
sbb
push
andb
adc
clc
adc
pop
xor
ljmp
loope
xor
lock
xor
sbb
jge
fists
jne
mov
dec
inc
xchg
xorl
cmp
lds
xlat
sbb
or
adc
xor
shll
std
cmpb
pusha
imul
push
adc
lods
inc
lret
stos
out
lds
shrb
fwait
jno
enter
cmp
movsl
sar
and
movsb
dec
es
lret
testb
cmp
and
lock
or
outsl
out
das
test
shr
mov
leave
xor
test
sti
xchg
add
mov
jmp
pusha
test
test
stc
lret
iret
insl
mov
sbbl
sbb
and
adc
shrl
js
mov
push
lret
and
flds
adc
mov
shlb
loopne
inc
scas
cld
fadd
and
ret
sub
jae
out
es
test
je
cmp
in
adc
outsb
shrl
jg
push
dec
shl
ret
sbb
mov
in
ret
std
pop
imul
in
adc
fs
mov
sbb
andl
mov
mov
lds
jae
push
adc
scas
aad
ja
adc
push
xor
fwait
push
jecxz
add
cmp
jbe
cmp
pop
mov
adc
std
jbe
add
outsl
push
ficompl
es
fiaddl
xchg
inc
fwait
pop
clc
ret
imul
enter
mov
or
adc
pop
push
aam
sarb
cmpb
shlb
call
inc
roll
xchg
or
mov
and
popf
mov
test
rcrb
test
pop
mov
loopne
adc
mov
imul
jl
dec
hlt
fwait
mov
subl
lret
sub
arpl
xchg
inc
pop
ss
lock
mov
add
cmc
pop
push
sti
call
dec
adc
ljmp
dec
je
mov
sbb
in
std
dec
add
xchg
call
adc
sbb
push
inc
scas
iret
mov
pmuludq
and
push
adc
sbb
inc
popa
mov
repz
xchg
xchg
je
jne
mov
lret
mov
call
roll
jns
and
dec
daa
loop
add
loopnew
sub
sbb
dec
fmulp
inc
xchg
push
rclb
rolb
sub
push
imull
cmp
mov
jne
nop
add
icebp
test
andb
enter
ficoml
shl
adc
pusha
shlb
sub
sub
inc
xchg
mov
gs
dec
inc
mov
adc
es
sbb
mov
call
cmpl
add
inc
inc
sbb
icebp
int3
sub
je
jnp
cld
push
out
sbb
xlat
add
sbb
xor
pusha
xor
push
pop
call
mov
inc
xchg
cmp
lock
js
adc
sub
mov
and
dec
ret
enter
and
inc
enter
stos
pop
adc
xchg
aad
loope
and
xor
shrl
adc
adc
mov
xchg
cmp
icebp
mov
pop
in
imul
xor
and
sti
cmp
cld
pop
xlat
adc
and
call
xor
cmp
ja
insb
testb
adc
sbb
popf
cwtl
nop
aas
jg
or
mov
mov
pop
xchg
daa
scas
xor
shll
adc
int3
and
add
push
loopne
movsb
or
bound
xor
cltd
sub
or
mov
jne
roll
sbb
push
sub
test
fdivrs
sar
adc
mov
shll
aam
dec
adc
sbb
pop
nop
cwtl
icebp
movsl
or
sub
add
pop
cld
mov
movsb
adcl
aam
pop
fwait
clc
jg
xor
lds
ret
push
xor
cld
loopne
sbb
je
lret
ljmp
or
push
mov
outsl
pop
mov
data16
or
add
xor
shrb
push
xlat
dec
aaa
lea
inc
dec
std
push
lea
sub
addb
adc
ret
jb
pop
cmp
imul
adc
insl
xchg
data16
xor
or
roll
scas
ret
cmp
add
cmpsl
xchg
sub
scas
sub
sub
lods
xchg
lods
jb
lret
add
cmpl
add
test
mov
and
test
lods
aad
loopne
add
dec
and
enter
shlb
rclb
lock
inc
lret
call
mov
mov
sbb
push
jge
xchg
into
fdiv
out
clc
pop
lea
orl
mov
sub
mov
ret
push
push
mov
fdivl
mov
adc
xor
aam
popa
sahf
xlat
fwait
sahf
or
filds
push
icebp
and
inc
mov
call
repz
mov
cld
or
mov
stos
jp
popa
ror
pop
xchg
or
jp
lret
or
subl
pop
outsb
and
enter
int
inc
daa
fisubs
daa
adc
pop
dec
push
inc
xchg
cli
sub
add
cmpl
jg
or
test
jne
jno
push
insl
sbb
gs
stc
dec
sub
sub
sbb
rorb
movsb
jno
outsl
sub
dec
add
dec
aaa
push
xchg
mov
repnz
add
js
add
es
into
mov
cltd
stos
sarl
and
xor
pop
ljmp
jg
adcl
js
xor
pop
sbb
rorb
es
or
leave
pusha
fdivrs
sub
push
xchg
ret
inc
push
mov
andl
movsl
es
mov
push
arpl
adc
hlt
xor
and
loopne
dec
movb
add
gs
dec
js
push
mov
dec
xor
lret
jno
fwait
scas
int3
pop
movl
push
mov
bound
sub
xor
add
xlat
add
loopne
aam
xchg
xor
push
pop
in
lock
xor
jbe
and
xchg
lock
jae
fdiv
and
cmp
out
jne
cmp
or
scas
and
mov
mov
push
pop
inc
nop
mov
ss
cmp
or
test
inc
xchg
mov
dec
pop
orl
sub
sbb
test
adc
sub
cmpsb
stos
ret
and
movsl
jle
pop
and
idiv
movsb
les
push
test
je
jo
mov
js
or
roll
fs
jne
cld
dec
sub
test
jae
pop
fistpl
jmp
arpl
mov
push
mov
sbb
and
movsl
ljmp
andb
push
cmp
loopne
aam
push
adc
mov
movsb
mov
je
sbb
es
arpl
mov
cmc
in
outsl
lock
xlat
xor
into
js
das
and
fcompl
movsb
test
mov
xchg
cmp
mov
cmpb
xchg
inc
mov
push
lds
repz
push
mov
cmpsb
imul
imul
xor
scas
cmpsb
mov
cmp
mov
aam
lret
jmp
subl
adc
scas
xchg
push
inc
xor
int3
or
popa
clc
push
mov
mov
xor
mov
pop
pusha
mov
adc
hlt
sbb
fwait
inc
dec
inc
jp
ret
addr16
add
stos
cmpsl
shrl
mov
movsl
pop
dec
aas
dec
bound
clc
in
xor
aaa
aam
cmpl
add
enter
popl
mov
xchg
pop
sub
mov
lock
and
push
inc
test
inc
lcall
sub
push
mov
push
adc
jo
outsl
dec
mov
mov
mov
adc
rcrl
loopne
movsl
sahf
or
inc
push
push
mov
sbbb
fidivs
inc
cs
subb
les
sbb
pusha
sti
daa
and
inc
push
add
mov
lock
jne
pop
imul
push
stos
sub
repnz
cld
add
ja
sti
and
pop
mov
mov
mov
inc
sub
mov
mov
rcrb
ds
lods
xchg
and
stos
es
in
and
inc
call
sub
push
dec
add
add
out
popf
push
sub
inc
in
jg
loop
dec
mov
inc
adc
sbb
hlt
and
jg
arpl
negl
sub
jne
sti
ret
xchg
inc
in
test
outsl
lock
add
repnz
scas
repz
sbb
sub
decl
ja
push
std
mov
push
movsb
or
xor
cmp
jmp
jnp
gs
jecxz
mov
shll
addr16
rcl
movsb
mov
xor
pushf
ds
loop
call
inc
lea
inc
loop
jg
std
sbb
ds
icebp
loope
push
popf
add
jle
add
add
insl
jae
pop
add
sbb
xor
dec
sub
rcll
clc
andb
cmp
xor
push
ja
mov
inc
lahf
inc
cmp
jae
popa
sbb
dec
popa
jp
insl
outsl
std
lcall
stos
dec
and
loop
stos
das
lods
and
inc
pop
jo
adc
inc
mov
add
scas
les
enter
inc
ret
dec
nop
pop
scas
mov
out
pop
mov
xchg
adc
cmc
lods
bound
cwtl
loopne
cltd
stos
add
addr16
xchg
cwtl
adc
push
cld
mov
push
push
add
cmpb
sbbb
inc
sbb
mov
cld
add
outsb
and
or
sub
cs
pop
in
sahf
lcall
fucomip
or
push
push
adcl
divb
pusha
icebp
sbb
and
int3
xor
int3
dec
les
fsubrs
shll
push
aam
adc
fnstcw
mov
loop
cwtl
xor
add
shr
cmc
mov
mov
sbb
in
jg
jp
xchg
xchg
mov
add
roll
nop
je
pop
inc
mov
mov
adc
or
mov
adc
int3
sbb
shll
xlat
and
mov
cmp
xchg
cmpb
sub
fisttpll
add
das
add
add
int3
stos
xchg
inc
pop
fwait
add
dec
adc
fs
and
and
movl
cmp
push
adc
xor
push
xchg
add
mov
push
testl
push
mov
es
leave
add
push
loopne
je
xor
repnz
push
fisubl
addr16
lahf
push
jge
jno
lret
insb
dec
shl
repz
mov
mov
mov
or
dec
xor
aaa
adc
mov
and
insl
push
jecxz
lods
pusha
cmp
orb
xorps
cld
dec
mov
cs
xchg
and
sub
cmovne
out
sarb
push
push
pusha
iret
out
and
dec
lock
add
jns
xor
scas
add
dec
inc
in
adc
scas
test
fdivrs
push
xchg
mov
inc
addr16
add
in
pop
mov
mov
insl
xchg
addr16
adcb
push
jl
xchg
mov
and
or
adc
daa
pop
test
jo
cmp
mov
rolb
push
sti
aaa
jmp
loopne
fistl
push
lods
sbb
popf
jmp
movsl
lret
call
fimuls
in
sbb
or
andb
add
add
subl
adc
sub
and
or
or
mov
push
cmpsl
es
ret
in
shr
stos
std
or
add
jge
sub
inc
pop
addb
sub
bound
lods
mov
shlb
int3
dec
shrl
addr16
test
xor
mov
xor
sbb
xor
lret
jp
pop
cmpsb
xchg
cld
popa
sbb
jmp
sahf
clc
mov
add
push
test
inc
xchg
loopne
outsl
jge
sub
test
add
pushf
lods
sub
je
adc
int3
pop
pop
jle
rol
add
and
jg
mov
xchg
pop
pop
xchg
xor
scas
xlat
or
arpl
push
xchg
xor
inc
lods
mov
xor
stos
cmp
sbbb
hlt
add
or
inc
and
jne
scas
push
shrb
hlt
sub
cwtl
gs
mov
sbb
loopne
add
test
jecxz
arpl
data16
cld
lea
in
ret
add
sub
jp
sahf
mov
cmp
nop
or
add
pusha
test
push
mov
pusha
pusha
scas
pop
or
and
jbe
push
mov
ror
jp
push
pop
jns
bound
xchg
push
pusha
dec
pop
sti
ret
add
push
pop
push
inc
or
andl
add
aad
in
xlat
jmp
sbb
sbb
repnz
jle
sbb
je
dec
jmp
fs
shlb
dec
or
int3
and
insb
sarl
xchg
jb
push
add
jle
aaa
dec
mov
add
scas
add
loopne
roll
add
mov
repz
jle
inc
dec
jecxz
and
mov
pop
sub
xchg
div
jp
ljmp
xor
add
shr
ja
or
jnp
iret
data16
add
aas
cmp
jb
scas
mov
add
mov
mov
fldl
and
jns
rcrl
inc
or
dec
add
cwtl
mov
or
push
pop
jle
test
inc
mov
mov
xchg
clc
mov
cld
int3
incb
je
repz
test
mov
outsb
push
sti
movsb
and
push
jnp
inc
cmpsb
jg
mov
add
js
add
data16
add
add
inc
test
int3
es
or
sub
xchg
sub
adc
call
sub
sbb
pusha
add
adcb
nop
inc
adc
push
popf
loop
pushf
mov
cmpsb
clc
pop
inc
popf
or
int
mov
push
arpl
cmp
mov
subb
xor
mov
jmp
sub
xchg
int
mov
int3
enter
out
out
and
cmp
mov
das
push
inc
jg
inc
xor
mov
push
fbld
jmp
rcr
sbbl
add
and
nop
sub
shr
ret
adc
xchg
and
adc
push
hlt
es
outsb
test
lds
adc
xchg
push
shll
aaa
ret
sbb
and
xor
inc
adc
js
adc
adc
inc
push
je
cltd
aaa
repnz
add
lahf
inc
adc
push
lock
add
pop
add
inc
les
adc
es
sahf
adc
ljmp
rcl
jecxz
push
mov
lcall
inc
in
xchg
bound
fidivl
add
mov
jmp
in
adc
rclb
inc
in
push
inc
pop
in
notb
sub
insl
inc
aad
mov
loope
out
dec
inc
cmp
jae
add
jle
les
fistpl
pop
out
jae
jl
js
pop
jg
mov
add
imul
sbb
add
adc
outsb
cli
cltd
sarl
push
aam
aam
ret
sbb
fld
adc
fwait
cmpsl
jb
inc
dec
daa
sbb
sub
adc
pushf
dec
sub
or
push
mov
rcll
fcomps
or
bound
add
sbb
or
add
jg
adc
hlt
xor
xchg
inc
and
xor
pop
xor
addl
loopne
mov
pop
in
fucomp
popa
test
jne
fldt
aad
cmp
mov
inc
aas
cmc
jne
jg
and
jmp
cmp
jne
push
sub
and
push
pushf
cmpb
divb
mov
aam
popa
or
push
aam
jno
add
adc
lods
inc
or
lcall
or
jle
and
inc
xor
push
sbb
adc
test
inc
mov
dec
imul
dec
mov
xor
arpl
mov
or
and
mov
ja
inc
inc
cwtl
add
pusha
ret
mov
lods
push
jne
push
movsl
mov
fdivl
faddl
inc
push
xchg
and
jp
jl
and
scas
jae
orl
scas
dec
stos
test
or
pushf
inc
xor
and
lret
push
shl
and
fwait
or
and
mov
adc
dec
mov
push
lock
cmp
loop
repz
lock
sbb
sbb
js
jl
pusha
add
cli
fxch
xchg
in
xor
cltd
lods
sub
cmp
movsl
mov
mov
cmp
jge
cld
and
sub
push
das
stos
popf
cmp
lods
pop
test
add
lock
push
jo
imul
mov
lock
sbb
dec
and
cli
jne
stos
jb
stos
inc
xor
and
xchg
sahf
data16
or
lock
xor
jecxz
mov
mov
adc
push
popa
adc
and
jbe
jb
pop
inc
ja
cmp
dec
lock
aam
cmp
testl
cmp
out
push
shr
in
loop
adc
dec
popf
addb
in
shlb
movsl
int3
loop
fisubl
cld
sub
add
rcrb
adc
or
test
scas
xchg
push
adc
pop
adc
loopne
dec
xchg
adc
js
mov
add
jge
lahf
xor
mov
popa
js
jne
cwtl
subb
mov
push
add
stos
es
xchg
add
adc
aad
mov
sub
jno
push
mov
inc
test
mov
push
insb
ret
cli
mov
xchg
jge
insl
pop
cmp
and
icebp
dec
cli
out
cwtl
aam
ret
fxch
fdivrl
mov
sbb
push
pop
loop
push
out
xor
mov
dec
outsl
mov
sbb
pusha
int3
ficomps
repnz
add
inc
testl
dec
stos
mov
mov
inc
dec
or
dec
repnz
sub
lcall
mov
pop
shrb
imull
int3
enter
push
jecxz
xchg
cmpsl
cli
popa
mov
or
mov
pushf
mov
add
lods
cmp
jb
jo
clc
jecxz
push
mov
pop
in
pop
inc
gs
add
and
aaa
add
inc
gs
and
adc
sbb
sbb
or
adc
mov
addr16
movsl
or
cmp
sub
pop
sbb
cmpsl
sbb
mov
cmpsb
fsubrp
mov
dec
mov
stos
out
into
fnsave
dec
orb
dec
xchg
or
out
add
or
or
out
inc
cmpsb
inc
push
adc
mov
or
subl
inc
mov
push
in
add
adc
inc
adc
cmp
inc
in
movsb
or
push
adc
add
xchg
push
push
sarl
add
add
cmp
or
pop
dec
adc
ds
lea
outsl
pop
mov
rorb
mov
adc
sub
add
lods
and
ja
or
dec
pop
sub
loope
jecxz
fsubl
inc
pop
push
inc
add
rolb
add
mov
lret
popa
rclb
fcomps
dec
pop
lret
adc
jg
adc
cmpsl
loopne
add
push
inc
xor
pop
in
xchg
mov
test
ljmp
pop
rcrb
movsb
mov
or
xor
into
pop
sbb
shr
insb
fnstcw
cmpsb
mov
pop
scas
hlt
sbb
out
add
mov
mov
lds
popa
js
hlt
sub
push
push
in
test
or
cwtl
loop
sahf
mov
dec
sbb
jnp
push
lock
clc
xlat
or
popl
push
fwait
mov
adcl
push
xchg
or
pusha
and
or
xor
mov
adc
mov
push
addl
and
in
push
pop
dec
push
addr16
lret
xchg
sub
aam
adc
lods
repz
test
jecxz
adc
popa
loope
cmp
mov
insl
push
in
faddl
test
cmp
or
shl
and
lret
inc
pop
in
xchg
cli
and
or
daa
xor
js
lret
call
add
add
or
ljmp
xchg
in
inc
jl
pop
data16
loop
add
test
pop
add
aaa
push
or
dec
sti
and
rclb
or
push
aad
pop
adc
push
mov
aam
ss
adc
add
dec
clc
mov
pop
xor
lock
loopne
jl
lock
sub
mov
sbb
cmp
inc
jmp
sub
inc
cmp
js
cmc
mov
imul
repz
cmp
imul
cmp
mov
enter
test
ljmp
add
mov
fsts
into
push
roll
xchg
mov
xor
shrb
test
in
xchg
mov
sbb
fcom
cltd
adcb
mov
adc
ja
add
in
inc
lds
jecxz
cmp
push
and
and
pop
dec
inc
and
mov
inc
lods
cmp
xchg
inc
cmp
pop
mov
clc
adc
add
sbb
xor
cmpsl
sbb
popa
loop
popf
xor
dec
clc
add
xor
pop
js
dec
xchg
mov
mov
inc
sbb
jae
push
push
in
addb
cmp
push
inc
into
or
mov
and
xor
sub
mov
add
add
pop
xor
sbb
daa
add
mov
or
loop
lock
cmp
inc
les
dec
xor
fisubrs
xchg
inc
loopne
inc
dec
jmp
repz
cld
fstps
out
dec
and
pop
lock
popf
or
push
adc
or
sbb
dec
xlat
ret
inc
and
or
test
hlt
xchg
sub
jp
inc
or
pop
fldenv
push
adc
add
xor
push
jle
repnz
mov
add
aas
test
cmp
idivl
mov
cmp
repz
xor
xchg
inc
repz
or
fistps
jl
adc
pop
push
push
jecxz
insb
mov
inc
rcrb
mov
cmp
inc
ret
pop
pop
push
in
cs
leave
add
aaa
mov
rcrb
loop
daa
mov
nop
or
xchg
imul
add
pop
xor
and
sbb
rolb
jnp
mov
daa
les
xor
xlat
test
jp
xor
push
cmpsb
push
stos
push
dec
in
or
call
enter
das
rorb
lds
add
mov
jp
xor
jns
adc
mov
push
mov
mov
and
cmp
cmp
dec
lahf
aam
adc
mov
data16
mov
outsb
xor
cmc
mov
test
dec
adc
push
test
test
testl
aaa
adc
mov
aaa
insb
cmp
bound
fcomp
adc
mov
push
cwtl
and
daa
dec
imul
sub
adcb
add
mov
jmp
movsb
or
in
or
mov
add
jmp
xlat
ret
js
arpl
xchg
add
gs
and
inc
inc
cltd
imul
xor
inc
jne
cmp
cmpsl
xor
call
pop
inc
push
lods
and
outsb
cmc
sub
in
icebp
sub
ja
push
shll
adc
pushf
pop
notl
bound
sbb
mov
dec
test
push
rorb
daa
shrl
xchg
and
clc
popf
outsl
push
les
mov
es
adc
insb
jge
xor
mov
pop
scas
mov
insb
cli
das
or
dec
rclb
out
icebp
sub
cmpsb
call
aam
lahf
mov
fsubrl
add
xor
sarl
add
sbb
push
push
push
rcrl
imul
or
movsb
mov
sub
rolb
lahf
xor
sub
sub
adc
call
lahf
xchg
faddl
cli
cld
xor
mov
es
cld
test
mov
popa
out
dec
push
repz
adc
adc
rcrb
add
mov
xchg
add
cs
cltd
mov
push
call
add
push
mov
lods
push
ss
daa
adc
adc
jle
adcl
mov
or
daa
movsl
or
cmp
push
aam
nop
mov
loop
scas
push
dec
jmp
jp
shll
imul
adc
sbb
dec
mov
fwait
xor
add
in
mov
mov
js
test
in
addr16
add
or
sub
cld
adc
jb
jno
and
testb
or
mov
out
mov
bound
int
mov
mov
jle
push
test
jno
fcoml
push
mov
mov
jae
mov
cmp
lods
insb
push
mov
mov
dec
jmp
mov
dec
inc
scas
call
mov
enter
add
inc
inc
sub
and
arpl
adc
add
pop
sbb
cmp
js
jb
movsl
aas
xor
add
imul
mov
or
outsl
fwait
movsl
jns
xchg
push
add
pop
test
out
sub
outsb
cltd
sub
jl
add
add
add
pop
inc
test
add
fwait
mov
cmpsl
add
pop
push
dec
adc
ret
jne
lret
orb
jne
push
aas
pop
outsb
or
movsb
push
push
adcb
imul
mov
dec
lods
loop
test
dec
ret
ds
or
push
pop
mov
hlt
fsubs
xor
rcrl
push
in
adc
cmp
add
dec
sub
mov
add
cmpsb
ljmp
xchg
push
outsb
imull
cmp
adc
fs
cmp
add
sub
pusha
jne
mov
dec
adc
fstpl
jne
cmp
sti
adc
lret
sbb
and
push
or
and
push
push
jp
xor
add
clc
ds
inc
lcall
xor
add
add
fdivl
push
lock
adc
inc
dec
imul
add
dec
inc
and
push
dec
shll
dec
clc
push
scas
mov
mov
mov
mov
pop
aaa
rcrl
xor
cld
mov
cmc
fbstp
icebp
ljmp
mov
lret
outsl
xor
sbb
sub
stc
fidivs
and
sbb
and
outsb
icebp
js
xchg
repz
pop
dec
dec
dec
add
jbe
hlt
xor
test
int
xor
mov
jmp
pop
jnp,pn
push
lods
cmpsb
loopne
rolb
inc
mov
adc
adc
sub
mov
add
xchg
dec
fnstsw
mov
sti
xorb
dec
loopne
call
ret
out
movsb
movb
cmp
xor
sbb
sbb
idivl
daa
jge
sbb
dec
mov
mov
inc
testl
mov
push
and
pop
and
cmp
mov
mov
ds
sbb
mov
mov
hlt
inc
xchg
add
inc
out
add
cmp
push
push
mov
shlb
ret
and
or
push
cmp
jnp
mov
mov
test
push
rcll
int
xorb
enter
into
pop
fiadds
sarb
adc
addl
add
mov
sub
sub
pop
pop
push
jne
sub
bound
sub
and
mov
stos
mov
ds
jo
adc
add
mov
sbb
mov
andb
fimuls
in
call
and
ret
jmp
insb
add
incl
orb
and
and
test
adc
nop
add
in
call
add
inc
inc
adc
add
test
and
dec
and
mov
mov
nop
or
and
sbb
and
adc
and
xor
adc
and
add
adc
outsl
fistpll
dec
and
and
inc
inc
adc
inc
or
and
outsl
lods
mov
add
and
add
pop
inc
adc
jbe
add
inc
imul
mov
adc
mov
inc
nop
and
add
push
dec
lods
adc
add
xchg
xorl
add
test
mov
pop
imul
push
mov
imul
mov
and
and
pop
nop
mov
fistpl
dec
add
imul
jg
cmp
dec
xchg
inc
pusha
add
ja
mov
pop
imul
inc
jecxz
mov
cs
pop
add
imul
mov
ja
push
and
fistpl
test
pop
mov
and
or
adc
rcll
lods
mov
pop
movl
xlat
pop
mov
loope
adc
mov
into
and
fmull
lods
fdivrs
inc
adc
and
js
adc
cmp
pop
jae
mov
push
lods
sbb
movsb
dec
xchg
jae
and
adc
int
adc
mov
rcrl
xlat
mov
add
pop
imul
xor
lea
add
jmp
int3
pop
imul
filds
jno
sub
mov
int3
adc
push
adc
imul
imul
adc
or
cmp
pop
push
jne
rcrb
lods
rolb
push
xchg
rcrl
fldt
sub
jle
cmp
inc
inc
es
dec
data16
stos
fdivs
imul
xchg
or
push
nop
imul
pop
xchg
add
lcall
sub
sbb
or
sbb
push
pop
mov
xor
call
mov
lods
popa
xchg
out
std
add
jmp
sbb
xor
jo
sub
push
and
bound
pop
fstpt
adc
test
sub
imul
nop
xchg
sbb
loop
cltd
pop
inc
int
test
adc
adc
pop
imul
mov
and
sbb
add
mov
and
adc
xor
jl
mov
dec
dec
mov
xor
loopne
mov
mov
or
xchg
adc
roll
test
dec
scas
insl
outsl
xor
and
pop
and
int
rorb
mov
cmpsb
out
dec
inc
mov
je
leave
sub
pop
jae
ljmp
inc
imul
int3
outsl
fldenv
dec
or
or
sub
lcall
jnp
sbb
cmp
subl
jecxz
nop
lcall
sub
ss
xchg
jmp
add
and
jp
or
jae
sub
lods
shll
adc
in
insb
sahf
shrb
jne
inc
inc
cs
shrl
dec
shrl
xchg
xor
sub
bound
dec
inc
mov
xor
and
into
cmpsb
cmpsb
push
sub
dec
shrb
or
adc
das
inc
xchg
lods
push
in
mov
mov
gs
fbld
adc
mov
pop
cmp
cltd
or
je
dec
sbb
imul
scas
cmp
xchg
fldt
cmp
into
sbb
mov
popf
mov
jecxz
pop
lods
jmp
lods
cmp
das
adc
in
adc
jmp
jo
fistpll
add
pop
or
test
stos
mov
sbb
cmp
ljmp
lcall
jl
call
and
sbb
cmpsb
int
call
push
or
sbb
fiadds
out
xor
fwait
add
xchg
bound
xor
ja
push
int
xchg
mov
arpl
push
inc
cwtl
aam
cmp
int
popa
lret
or
scas
es
mov
adc
mov
sub
mov
call
mov
adc
dec
cltd
mov
ljmp
push
and
adc
mov
test
lcall
jne
pop
pop
sub
add
lcall
jecxz
or
test
and
out
rcll
cmpsl
test
pop
lea
add
pop
imul
cmpsb
jg
sub
jo
lcall
mov
push
xor
adc
lods
in
xor
jo
jo
fcomip
scas
adc
scas
sub
into
inc
jae
jecxz
js
mov
inc
mov
lods
stos
mov
int3
adc
lods
xor
mov
push
mov
test
inc
test
add
mov
mov
and
sbb
or
mov
add
lcall
leave
inc
add
ret
inc
xchg
fs
add
or
inc
mov
faddl
xor
imul
sbb
xor
mov
or
xor
out
or
and
test
out
push
adc
add
roll
inc
mov
sbb
mov
mov
inc
push
jae
adc
aas
add
push
lds
das
or
and
outsb
push
scas
cltd
jo
pop
xchg
cmp
out
lods
and
adc
pop
movl
jns
cli
ficompl
add
dec
add
pop
mov
adc
xchg
push
cwtl
pop
xchg
mov
enter
or
call
add
add
subl
shlb
lcall
jae
inc
lods
jp
lret
add
add
cmp
lock
fildl
aam
cmp
add
xchg
in
adc
push
aam
mulb
xor
add
or
jge
jl
fcmovnu
out
mov
aaa
jnp
add
imul
mov
test
xchg
cmc
dec
lcall
lret
pusha
jecxz
out
dec
sbb
pop
add
pop
roll
cmp
das
stos
add
mov
inc
add
pop
roll
push
shr
std
inc
or
push
jg
dec
mov
adc
xchg
mov
jno
mov
stc
mov
add
lea
adc
xchg
inc
movsb
and
add
test
cli
mov
scas
mov
jmp
inc
nop
test
push
cmp
fcoms
and
jne
or
outsb
ljmp
ficompl
xorb
or
xlat
adc
dec
idivl
les
mov
mov
add
lea
ss
jle
sub
cmp
mov
jb
pop
clc
jns
add
or
cmpsb
mov
sbb
out
loope
test
dec
or
add
jmp
cmpsl
scas
or
mov
mov
adc
inc
loope
loope
dec
pop
add
dec
sub
or
fisttps
pushl
fsubrl
add
dec
loopne
or
mov
pop
outsb
add
call
cmp
cmp
rorb
xchg
xchg
xchg
test
sbb
ljmp
fcomip
xchg
imul
or
add
add
div
outsl
push
popa
xor
fnstenv
mov
mov
mov
mov
aam
push
sarl
idivb
dec
add
add
aaa
nop
shlb
xchg
xor
sbb
or
jo
bound
ds
jmp
mov
mov
adc
aaa
cld
das
cld
add
add
cltd
std
xlat
and
cmc
mov
lock
cmp
mov
pushf
mov
add
xor
nop
jnp
dec
pop
movl
dec
add
mov
test
adc
jg
mov
mov
adc
fisttpll
lock
or
pop
lahf
and
mov
outsb
js
dec
incl
sarl
mov
xor
imul
incl
push
stc
or
in
push
add
movsl
sub
sahf
jle
xchg
insb
adc
out
sahf
repz
je
ss
and
addr16
fidivrs
xor
ja
add
test
xor
pop
push
inc
xor
popf
in
jl
add
outsl
xor
ror
add
xor
into
gs
xor
jb
mov
fisttps
push
mov
jb
cmovo
arpl
ret
hlt
or
insb
in
pop
mov
js
sbb
insl
leave
gs
jns
dec
es
insl
outsl
mov
cli
mov
daa
sbb
pop
negl
in
dec
inc
pop
test
ret
pop
mov
add
loope
psubw
sub
in
insl
mull
sub
outsb
fwait
nop
lea
and
cmc
hlt
das
adcl
cmp
push
stos
daa
rcrl
mov
xlat
xlat
mov
inc
ret
add
pop
cmp
dec
mov
jg
mov
push
test
cmp
add
movl
fcmovnbe
nop
jo
inc
sub
cmc
lcall
cld
jg
cwtl
es
inc
lret
jle
enter
push
leave
lock
imul
xchg
pop
repz
outsl
scas
mov
or
rcll
repnz
inc
add
ds
mov
mov
and
adc
or
loopne
out
pop
or
ficomps
movsl
call
loopne
out
jp
sbb
mov
filds
push
dec
fcmovnu
loop
sub
into
leave
or
std
cmp
jl
or
xchg
inc
xchg
sahf
xor
incl
pop
jp
mov
ss
mov
in
push
shll
outsl
cmp
outsl
mov
daa
jecxz
icebp
cmp
pushf
push
adcl
inc
aam
popl
add
sbb
jg
outsl
xor
adc
xor
out
jae
aaa
fldl
cwtl
in
das
mov
std
lret
jp
mov
insl
cs
cld
sbb
sbb
jp
mov
xchg
xchg
test
int3
mov
les
repz
ret
sub
push
ret
ljmp
pop
pusha
call
add
xchg
mov
pop
push
push
shlb
and
pusha
std
in
in
mov
xchg
add
push
call
imul
sbb
out
jnp
jmp
sub
aam
push
cmp
sbb
xor
cmc
ficompl
or
frstor
dec
push
xchg
mov
or
out
jecxz
dec
xor
decl
adc
cld
xchg
jne
sub
jp
fs
push
xchg
in
aaa
pop
mov
int3
or
leave
out
jno
mov
decl
test
sbb
cmp
insl
ds
or
push
cld
in
xchg
jbe
sti
bound
aam
mov
cld
fidivrs
xchg
dec
mov
cltd
push
idivl
pop
aaa
fsubr
and
sub
test
mov
pop
loope
or
mov
dec
or
add
lahf
outsb
movsb
ror
pop
and
jg
xchg
stos
and
cmp
dec
adc
xchg
fistpll
cs
adc
jbe
inc
inc
inc
adc
popa
loope
int
jl
les
das
fdivrl
mov
dec
sbbl
insb
lds
add
call
stos
clc
and
sbbb
add
push
or
fisubrs
fcompl
dec
mov
sbb
pop
mov
adc
or
fucomp
add
filds
xor
scas
jo
mov
pop
mov
aam
xchg
shrl
je
scas
in
scas
push
sub
aas
test
call
je
mov
cli
inc
mov
loopne
mov
jl
push
stos
std
incl
add
pop
sbb
and
jnp
pushf
daa
sarb
and
les
pop
testl
out
stos
adc
dec
decl
add
xchg
lds
inc
fistpll
std
xlat
add
add
lea
xor
xor
xchg
ja
in
in
add
sub
cwtl
iret
xor
and
ljmp
outsl
cld
xchg
insl
stc
sbb
es
or
aad
jbe
mov
pop
adc
and
sub
inc
in
inc
mov
lds
fnstsw
test
add
ljmp
lock
push
and
adc
push
aas
jb
data16
ja
dec
scas
add
cwtl
inc
fs
mov
mov
sbb
cmp
pop
mov
mov
mov
iret
mov
das
popa
push
mov
xchg
aaa
iret
push
jg
adc
xchg
lock
and
sbb
ret
lock
incl
xor
dec
mov
push
dec
aaa
in
and
scas
inc
push
cmpsb
or
sbb
rcr
xchg
pusha
pop
mov
adc
jmp
xchg
fwait
ljmp
push
push
adc
xor
mov
and
and
hlt
les
shll
xor
inc
mov
inc
and
fists
movsl
fiaddl
push
mov
fstpt
leave
xlat
outsb
xchg
lahf
inc
ret
mov
stos
and
cmpsl
data16
sub
or
int3
sub
fisttps
jp
xchg
lret
in
push
in
dec
adc
mov
outsl
adc
pop
jle
sub
and
loope
mov
mov
xchg
mov
out
lods
notl
icebp
outsl
std
fisttps
or
cmp
dec
cltd
inc
sbb
ret
or
sub
ret
cmp
push
add
add
fadds
pusha
adc
jge
adc
mov
push
sahf
xchg
mov
jne
dec
xchg
mov
xchg
ja
sarl
xlat
mov
addl
inc
and
cmpb
incb
xchg
push
sub
pop
or
mov
ret
and
push
xor
cmc
push
sbb
das
imulb
orb
clc
and
mov
cli
neg
mov
ss
inc
xchg
xor
stos
call
popa
jg
or
les
jns
mov
push
iret
jnp
fdivrl
mov
pop
jge
mov
or
lcall
sbb
cli
dec
adc
push
outsb
add
pop
or
out
jo
daa
push
js
push
dec
add
adc
int3
and
ret
fcomi
insl
outsl
cmc
add
add
pop
ds
mov
fcmovnb
lods
jp
push
sarl
dec
scas
push
mov
mov
or
push
mov
cmp
cmpl
ja
shlb
push
xor
sbb
int3
jae
lret
outsl
mov
dec
cmp
dec
and
mov
test
filds
jo
inc
pop
mov
cmp
sbb
andb
jl
and
pop
mov
shlb
mov
inc
mov
js
lret
jl
jno
mov
cmpsl
dec
jmp
mov
dec
shl
pop
pusha
jb
fimuls
pop
push
xchg
lret
mov
ss
jge
push
mov
adc
rolb
mov
out
sbb
push
push
inc
call
inc
inc
pop
incb
add
shrb
mov
mov
push
test
ds
sbb
or
dec
xchg
or
sbb
mov
push
cli
ficoml
je
ss
shlb
incl
clc
and
sahf
call
push
or
rcr
test
stos
ja
jg
mov
sub
arpl
push
test
cmc
sbb
pop
enter
cmp
loope
incl
mov
and
sarl
jg
sub
add
inc
in
daa
pushf
loopne
sub
test
jg
in
cld
dec
or
sti
xor
shl
movsl
cmp
mov
fcmovnbe
fiaddl
out
dec
aam
in
movb
test
lcall
aaa
xchg
jae
push
xlat
xorb
pop
sbb
iret
push
sbb
rol
push
jno
sbb
bound
xor
ljmp
gs
inc
fildll
mov
scas
xchg
jae
fwait
jecxz
and
insb
or
cli
sbb
leave
sbb
sub
outsl
clc
inc
adc
pop
and
test
ds
cmp
out
push
add
sub
lods
or
pop
xor
ljmp
sub
lea
je
cld
decl
fists
and
or
dec
mov
dec
push
xor
gs
in
fsubrp
sbb
insl
mov
imul
xchg
arpl
ret
or
fcmovbe
sub
into
xor
pop
fstl
testb
fcmovnb
rorl
xor
xor
xchg
out
pop
pop
pop
insl
pop
icebp
mov
jmp
mov
inc
mov
mov
push
mov
test
add
inc
or
add
lods
repnz
std
outsl
mov
je
or
repnz
xor
sub
mov
stc
lock
dec
repz
out
cltd
cld
aad
fiaddl
dec
call
mov
add
inc
movsl
ret
fistpl
stc
xchg
dec
fbstp
mov
jp
pop
pop
je
or
push
cmp
popa
and
pop
sub
popa
pop
dec
int3
lock
xlat
xchg
cld
sub
loopne
decl
sbb
mov
in
lods
aas
pop
imul
adc
in
mov
clc
call
aad
dec
sub
sbbb
sahf
xor
add
outsb
jne
push
push
push
and
mov
push
and
xchg
pushl
add
loopne
insl
iret
lcall
cld
outsl
push
fildll
and
cwtl
rolb
jbe
jmp
xor
cltd
out
rclb
out
fisubrs
xchg
ja
push
lret
inc
inc
aad
testb
int3
aam
mov
dec
and
pop
insb
fisttpl
xchg
inc
jmp
aaa
ficompl
cmpsb
sub
adc
clc
inc
mov
jecxz
sub
xchg
inc
inc
outsb
test
mov
repnz
mov
mov
adc
pop
pop
mov
ret
aas
cmpsb
stc
sbb
adc
stc
sub
mov
or
in
or
loop
pop
cs
mov
nop
loop
cmp
push
lret
rcl
addr16
xor
cwtl
or
inc
xlat
das
mov
adc
hlt
orl
cld
mov
mov
xor
and
test
inc
or
mov
in
xchg
das
ja
inc
leave
cwtl
cmp
mov
jae
jae
jg
scas
gs
fbstp
in
jno
movsl
mov
inc
add
aam
roll
shrl
mov
test
aam
fstl
loop
rorb
xchg
pop
and
inc
xor
push
inc
lods
jg
sbb
cli
adc
add
adcl
jns
mov
jmp
lcall
jg
mov
lock
add
adc
sbbb
cmpsl
out
fisttpl
mov
and
pop
loope
loope
lock
xchg
dec
or
or
inc
imul
mov
jg
adc
fbld
rcll
pop
or
jmp
rclb
movsl
rorb
and
cmp
jg
mov
sub
icebp
iret
rolb
jns
inc
dec
loopne
sbb
js
jbe
es
out
mov
xlat
jg
pop
cmp
sub
xor
repnz
repnz
imul
shlb
xchg
pop
cs
jbe
aam
lahf
sbb
add
and
adc
xchg
iret
sub
xchg
mov
and
stos
pop
mov
jle
in
iret
add
lahf
testl
xchg
mov
test
mov
js
mov
andb
popa
mov
fs
fbstp
mov
movsb
add
lcall
lods
test
cli
jne
mov
fcoml
test
xchg
push
mov
xchg
cli
inc
adc
loop
sbb
cmp
mov
jg
pop
pop
push
in
cmpb
jne
xor
js
rol
pop
lea
insb
roll
pop
out
js
fstpt
adc
loopne
mov
mov
rorl
mov
pop
fistpll
dec
mov
push
loopne
subl
sub
pop
loop
inc
stc
sbb
cli
adc
or
ja
aaa
loopne
add
ss
cltd
sub
inc
ficompl
sub
jmp
and
push
mov
add
std
push
pop
mov
jmp
nop
inc
and
ffreep
pop
vaddsubpd
add
jl
add
push
pop
and
movsl
ljmp
fistps
aas
mov
adc
cwtl
aad
push
outsl
dec
scas
jle
mov
inc
or
leave
cmpsb
or
lea
insb
or
ljmp
jnp
jno
jno
cli
cmp
xchg
nop
cltd
mov
sbb
jp
gs
mov
and
lock
test
adc
cmp
in
enter
pusha
movsl
cmp
push
stos
jmp
sbb
mov
xor
xchg
push
jg
lods
cmp
lock
or
jb
into
rorb
in
cs
push
jge
and
shl
sbb
sbb
int
daa
jae
mov
mov
pushl
out
ds
xor
or
test
das
or
aam
xor
mov
outsl
sbb
sbbb
enter
fucomip
or
popa
mov
and
aam
jmp
pop
mov
es
rorb
add
xchg
fs
mov
insl
add
adc
sub
fcoms
xor
cmp
loopne
mov
push
xchg
dec
mov
pop
push
ss
movsl
loop
loopne
add
shlb
jo
push
in
insl
mov
jecxz
icebp
mov
pop
inc
or
mov
lahf
lea
mov
push
mov
loopne
add
or
push
je
inc
imull
in
xor
sub
sti
mov
mov
je
fisttps
xor
mov
dec
addb
test
lret
gs
mov
cltd
xor
pusha
inc
pop
gs
sbb
test
push
cld
pop
insb
pushf
mov
out
push
or
fs
push
pop
or
inc
mov
pop
lcall
ret
jbe
cmp
pop
or
test
mov
bswap
lret
jp
push
pop
fidivrl
add
inc
pop
dec
inc
lret
inc
inc
inc
test
ljmp
sbb
test
rcrl
lret
jne
push
jmp
add
push
and
adc
mov
cmpsl
mov
lods
sub
arpl
ret
lock
aaa
fdivl
jno
cli
dec
dec
lret
test
shrb
mov
or
lods
ret
aas
sbbb
dec
mov
bound
movsl
or
icebp
scas
mov
loope
mov
sub
jl
push
movzbl
clc
notb
nop
add
sbb
pusha
cmp
mov
add
jnp
lret
adc
cmc
les
jo
mov
xor
in
mov
xchg
dec
jle
dec
pop
or
test
sub
gs
loopne
mov
and
jns
sti
mov
inc
or
mov
sub
mov
mov
mov
jg
ret
orb
jg
jge
outsb
icebp
mov
inc
cltd
and
ljmp
ljmp
nop
fwait
lods
lea
push
cmp
jmp
stos
test
adc
mov
dec
jle
mov
in
pop
adc
test
testb
dec
sbb
xchg
xchg
fistpll
push
hlt
xchg
test
push
mov
das
mov
dec
fbld
loope
mov
arpl
sbb
jle
loope
jne
aad
movsl
mov
mov
ret
dec
add
sub
sbb
mov
mov
push
mov
pop
cli
call
cli
push
loop
pop
call
out
lods
jge
lods
mov
or
or
and
bound
sahf
sbb
jbe
pop
inc
sti
out
add
loope
cli
lea
ja
into
adc
mov
outsb
icebp
jl
mov
pop
push
hlt
sti
decl
mov
cmp
es
add
mov
sbb
lret
mov
dec
scas
dec
cmp
jne
jno
out
inc
sub
or
add
aad
push
push
cmpsb
adc
movsl
daa
dec
ja
into
jecxz
xor
aaa
mov
out
cmpsb
cmpsb
outsl
jmp
mov
jne
pop
js
cmp
cmpl
and
mov
adc
loopne
hlt
pop
cli
mov
iret
mov
shl
sarb
mov
mov
sbb
push
mov
clc
daa
inc
and
clc
insl
out
daa
clc
jle
xchg
dec
push
int
cmp
fwait
push
sbb
ret
dec
push
fdivs
hlt
es
es
aaa
imul
xor
pop
pop
cli
std
stc
fadds
sub
fcomip
out
imul
push
out
jo
pop
in
add
int3
inc
into
adc
repnz
jg
adc
pop
push
dec
ja
outsb
jp
hlt
push
add
call
data16
sbb
push
dec
cltd
out
add
pop
ljmp
inc
and
jg
cmp
mov
sub
add
imul
test
test
cmpsl
pop
mov
pusha
insl
fsubrl
push
xchg
aad
cmp
mov
test
sarb
inc
faddl
gs
dec
out
std
ja
in
call
pop
pop
out
lahf
adc
jecxz
cs
xchg
pop
lock
aam
aam
xchg
loopne
popa
cwtl
xchg
jg
loopne
xchg
scas
jp
pop
sbb
cmp
mov
mov
cli
pop
mov
mov
pushl
and
push
loop
pop
sbb
clc
xchg
adc
in
rcr
or
mov
repz
mov
mov
add
add
push
js
mov
mov
or
je
xchg
rep
pop
jg
popa
sbbb
xchg
or
or
movsb
lods
fstpl
das
rcll
dec
pop
stos
outsl
cli
mov
push
dec
mov
push
loope
dec
mov
cld
add
rclb
addb
cmp
push
fwait
xor
hlt
arpl
aaa
aas
test
add
dec
lret
ss
push
sbb
movsl
les
jbe
insl
test
dec
add
out
mov
push
sbb
ss
aas
fcoms
fs
inc
inc
js
bound
lods
lret
pop
inc
movups
xchg
mov
shlb
mov
xor
outsb
adc
sti
mov
in
xchg
incb
mov
cmpsb
repnz
arpl
mov
push
push
loop
sub
mov
pop
and
js
xor
aad
push
cmpb
xlat
sub
pop
mov
push
popa
lea
addr16
pop
ljmp
sbb
ss
es
testl
fiaddl
adc
mov
js
inc
or
in
mov
push
inc
repz
pushf
pop
cwtl
sub
sub
sub
into
imul
pop
test
mov
leave
xchg
push
dec
cmp
fs
adc
cmp
arpl
adc
cld
cwtl
imul
cmp
leave
sahf
in
cmp
in
pop
cltd
fnstcw
push
cmp
xchg
xchg
sub
xchg
push
adc
test
push
cmp
arpl
lods
bound
or
cld
jg
add
cli
fstps
cli
xlat
subl
cld
xchg
cmc
cmpsb
push
sbbb
cli
repz
sbb
dec
call
fcomp
insb
mov
insb
sbb
data16
insl
adc
scas
and
push
add
or
je
setb
push
mov
mov
mov
pop
lock
mov
sub
test
xlat
mov
das
cltd
fwait
or
stc
and
fisubl
dec
add
jecxz
xchg
lea
xchg
inc
adc
push
nop
mov
incl
scas
fs
vmread
daa
iret
sub
jg
ljmp
ds
outsb
pop
call
inc
sbb
ss
lret
not
xchg
lret
jae
icebp
sbb
leave
mov
mov
addr16
or
xchg
popa
adcl
jp
out
in
fnstsw
or
xor
or
xorb
ss
std
dec
dec
cmp
push
push
pushf
scas
ja
push
lock
ss
icebp
mov
dec
add
ds
adc
cmp
lods
addb
inc
inc
pop
add
mulb
fstl
xor
mov
fs
pop
lods
in
negb
adc
aas
cmpl
mov
loopne
add
jns
stc
sarl
sub
mov
pop
dec
mov
rorl
hlt
movsb
pop
rcrl
mov
and
xchg
jo
cmc
push
cli
in
pop
or
or
dec
call
icebp
insb
test
je
cmp
pop
mov
or
xchg
jne
shlb
mov
pop
ficoms
mov
and
mov
std
or
dec
xchg
pop
inc
mov
test
aad
xor
aam
lods
loopnew
jg
cli
inc
in
cld
or
pop
sahf
adc
in
fbld
dec
add
daa
sbb
mov
sub
or
incl
jnp
add
jp
mov
dec
pushf
and
cmp
stos
rolb
decl
in
aaa
or
int
out
jb
dec
mov
idivb
sub
enter
dec
lock
mov
pushl
pop
add
dec
cmp
push
xor
jno
dec
sbb
jp
loopne
inc
mov
sub
mov
xlat
mov
mov
nop
sub
ja
cmp
xchg
mov
mov
outsl
and
out
jbe
popa
js
testb
outsl
fs
out
adc
jo
pop
incl
mov
mov
inc
sub
test
add
imul
cmp
in
cmp
sbbl
sub
adc
push
add
jne
jmp
or
pop
subb
icebp
adc
inc
mov
sbb
cld
aaa
pusha
mov
jne
pop
xor
cli
cmp
test
mov
and
pop
loopne
ret
cmc
cmp
mov
std
cltd
mov
cld
or
and
dec
sbb
clc
xchg
jecxz
jnp
push
push
pop
xchg
mov
std
leave
push
inc
pop
ljmp
loopne
loop
lock
mov
lock
insl
gs
xlat
clc
and
sarb
or
jle
into
lock
rcr
sbb
jecxz
inc
push
stc
dec
xchg
xorl
pushf
mov
sub
decl
inc
pop
lock
frstor
cltd
popf
xchg
fistpl
push
adc
fstpl
cli
fsubrl
lea
sbb
push
imulb
repnz
jnp
fdivs
out
mov
lods
ret
mov
outsl
mov
mov
fcomip
push
inc
adc
pop
and
test
dec
ds
test
lcall
testl
leave
xadd
fs
and
imul
lds
mov
or
or
xchg
ljmp
dec
or
push
sbb
push
dec
out
loop
dec
mov
jle
stc
jmp
or
fsubrl
jmp
inc
pop
testl
ret
fsubs
mov
xchg
cmc
outsb
ljmp
pop
pop
push
mov
cmp
es
pop
or
pop
inc
inc
nop
mov
ds
push
jae
rcrb
fbld
inc
mov
or
mov
daa
cli
jnp
xorl
cld
and
les
pop
mov
pop
into
inc
aaa
pop
mov
inc
cmpsb
push
mov
lods
dec
out
ret
xorb
shl
xchg
pop
cmp
mov
out
push
aaa
push
es
inc
xorb
decb
pop
cli
mov
dec
test
cmp
cltd
mov
test
xchg
fwait
pop
mov
cs
nop
jge
pop
jp
call
mov
lock
pop
adc
lock
mov
mov
mov
pop
mov
mov
sub
xor
jb
popf
adc
xchg
inc
shrl
push
pop
call
je
jbe
push
jl
sbb
std
jmp
sbb
test
fsubl
rcll
pop
mov
xchg
enter
int
sbb
adc
insl
sbb
inc
cmp
ret
mov
fcomi
push
adc
scas
or
iret
iret
jmp
cwtl
cmovne
call
cld
clc
adc
sub
push
pushf
push
fiadds
cwtl
mov
sub
or
test
or
aam
clc
ret
popa
sti
mov
in
in
jg
lock
push
and
les
dec
cld
and
hlt
pop
pop
push
sbb
adc
inc
or
fbld
xchg
loop,pt
cld
inc
inc
int3
rolb
lret
add
pop
repnz
std
mov
scas
push
mov
icebp
out
sahf
xor
sbb
and
dec
jb
mov
dec
loopne
fwait
cmpsb
sti
ret
das
lods
jg
out
call
filds
mov
jg
cltd
xchg
mov
push
imul
jmp
clc
and
hlt
inc
push
cli
cli
mov
jg
test
popa
mov
cmc
and
inc
sbb
out
incb
pop
sub
add
test
jo
sbb
loop
ja
push
xchg
out
fs
push
lea
movsl
jg
scas
lcall
adc
vcvtps2dq
pop
daa
cmp
fcmovb
lcall
popa
testl
sahf
and
leave
ljmp
loope
into
dec
and
jmp
outsl
mov
call
or
lret
sub
pop
mov
test
scas
add
dec
xchg
adc
inc
sbbb
jno
adc
xor
lods
xchg
fstl
lea
stos
push
test
sub
cli
jb
inc
outsl
mov
mov
cmpsl
movsb
xchg
mov
arpl
dec
push
shrb
xchg
hlt
std
mov
pop
mov
jns
loope
cwtl
sbb
dec
jge
jmp
jge
dec
lea
test
cmp
les
xchg
or
out
clc
lret
mov
adc
cmp
pop
fistps
jne
in
xchg
mov
out
loopne
nop
out
stos
sbb
mov
in
cmp
aad
dec
daa
pop
mov
dec
lock
cmpsb
fucom
lcall
jge
lcall
cwtl
sti
xor
push
lock
dec
mov
cld
inc
lods
fldenv
loopne
popf
mov
movsl
dec
mov
sub
outsl
clc
das
cltd
shrb
push
push
dec
adc
xor
test
push
mov
lret
sub
in
stos
and
insw
fists
push
idivb
xor
test
fs
push
clc
inc
jl
es
or
pop
hlt
mov
mov
cli
rorl
decl
fcomps
test
imul
pop
pop
mov
cmc
jg
push
mov
insl
add
jmp
dec
scas
xor
xor
dec
pop
jecxz
gs
filds
xchg
and
mov
lea
lcall
cmc
push
xor
add
test
pop
insl
add
pop
inc
adc
adc
test
cmpsl
and
mov
call
neg
movsl
es
xchg
loope
and
mov
ljmp
sbb
cwtl
pop
adc
sbb
call
or
sub
mov
fwait
pop
sub
stos
sbb
push
mov
jmp
mov
movsb
mov
pop
cs
aad
pop
loopne
or
sarb
lret
jbe
jecxz
pop
lret
nop
rclb
bound
mov
dec
shlb
clc
mov
bound
or
stc
lcall
test
inc
adc
xchg
sub
fsubs
pop
mov
mov
mov
outsl
add
pop
ss
or
pop
inc
mov
and
cmc
jbe
xchg
fdivp
pop
inc
out
out
mov
dec
pop
cs
mov
aaa
add
sub
mov
shlb
out
roll
mov
jle
dec
jecxz
mov
push
clc
lods
fldt
or
repz
test
daa
adc
xor
enter
in
sbb
inc
cltd
mov
hlt
cwtl
add
add
ds
adc
sub
js
mov
rcl
mov
lock
cmp
mov
jmp
push
loopne
stos
sub
ds
ljmp
xchg
hlt
call
cmp
outsl
mov
shlb
xchg
rolb
xor
nop
xor
dec
cmc
mov
testb
repz
je
fdivr
test
clts
cmp
cmpsb
mov
mov
pop
rcr
shlb
lret
insl
cmp
or
or
mov
loope
adc
pushl
or
lret
popa
mov
inc
and
and
aad
push
in
sub
lods
add
je
fisttpl
mov
fstl
sti
sahf
pop
dec
iret
dec
outsl
clc
jg
jbe
xor
jbe
arpl
scas
mov
mov
lock
dec
lods
into
xchg
data16
daa
xchg
pushf
jae
jg
loope
das
dec
sub
jnp
popf
cmp
cmp
leave
mov
jne
jnp
adc
cmpl
push
pop
xor
mov
jo
lock
and
test
mov
sahf
out
shlb
cmp
add
mov
rclb
sbb
out
notl
push
pop
call
xchg
sub
or
or
dec
adc
or
pusha
js
jecxz
add
std
pop
push
inc
cmp
enter
mov
out
test
scas
int3
sbb
cmc
movsl
pop
mov
dec
stos
lock
xor
mov
dec
lods
or
sub
xchg
adc
fildll
mov
and
ret
enter
and
add
loop
push
inc
cmp
add
js
inc
push
dec
and
shrb
cmp
movsb
xorl
mov
adc
notb
add
inc
stos
add
ret
cwtl
leave
pop
js
test
out
sahf
xchg
es
cli
xchg
push
mov
mov
lcall
jne
push
sub
inc
jg
js
rolb
leave
enter
in
and
ja
adcl
push
int3
xchg
push
shl
cmc
lods
dec
insl
imul
sbb
sbb
fsubrl
gs
pop
adc
fsts
test
aas
clc
gs
shlb
add
ljmp
and
cmc
sub
or
xor
ja
dec
outsb
mov
adc
fdivrl
xchg
sbb
sbb
mov
ljmp
call
mov
push
inc
adc
mov
loope
and
adc
jge
adc
lock
add
xlat
enter
push
mov
pop
xchg
sub
fcmove
ss
clc
pop
loopne
adc
mov
sbbb
mov
pop
lock
stos
xor
pop
xorb
out
push
in
add
jae
rcr
aad
dec
xor
fstps
push
repz
sub
jmp
je
out
xlat
cs
xchg
jmp
pop
dec
fsubrs
test
mov
mov
xchg
inc
scas
movsb
dec
and
arpl
pop
cli
cmpsb
movsb
sbb
xchg
and
pop
adc
lcall
cld
jo
ret
jmp
mov
add
mov
outsl
inc
mov
mov
mov
mov
or
lcall
icebp
push
movsb
mov
push
hlt
pop
xchg
bound
fadds
xchg
aam
cmpsl
jecxz
scas
sbb
add
inc
scas
lock
mov
repnz
cmp
outsb
fdivl
cli
add
pop
popa
push
incb
or
add
stc
arpl
adc
mov
xchg
cmpsb
ljmp
cli
add
pop
mov
bswap
or
push
icebp
dec
xchg
pushf
pop
arpl
mov
fucomi
mov
dec
jbe
mov
and
cmp
lret
or
int
mov
data16
cmp
lea
int
sbb
mov
xchg
dec
mov
push
loopne
cmp
lret
sub
jecxz
add
add
pushl
xchg
or
testb
pop
xor
lea
cmc
or
mov
and
or
and
xchg
into
mov
pusha
xchg
or
sbb
pushf
xchg
adc
xchg
mov
xchg
jl
cs
or
jno
js
add
test
mov
sub
test
imul
push
push
rolb
sbb
jnp
push
fists
ficoms
mov
mov
cmc
fwait
dec
in
and
dec
hlt
and
hlt
add
jo
fildl
mov
xchg
test
sbb
fwait
bound
icebp
rclb
push
sub
sbb
test
mov
into
mov
pop
sbb
fdivrs
and
cmp
inc
push
ret
movsl
mov
cmp
push
subb
lret
xchg
icebp
jmp
andb
jge
es
mov
dec
in
add
leave
shlb
les
aaa
cwtl
cli
and
push
inc
pop
out
xor
and
daa
xchg
cwtl
icebp
xor
shl
mov
nop
add
fcomp
and
pop
clc
pop
mov
cli
and
inc
push
ss
fwait
add
mov
dec
call
test
pop
add
loop
sub
sbb
inc
dec
mov
mov
imul
add
mov
test
incb
push
push
or
cmp
xor
ds
push
insl
and
sarl
cmc
adc
ret
adc
pusha
mov
lods
std
lock
sbb
loopne
dec
lds
push
in
call
outsl
mov
cmpsl
aas
pop
bound
inc
hlt
push
push
xchg
mov
or
pusha
xchg
outsl
in
inc
incl
inc
lcall
mov
roll
std
sbb
sti
leave
aam
xor
insb
addr16
hlt
mov
or
repnz
ss
cmp
insb
ljmp
xor
sub
xchg
push
or
rolb
stos
lcall
inc
jo
shlb
in
push
xor
out
lods
dec
inc
orl
inc
xchg
scas
mov
mov
stos
rcrl
rclb
mulb
mov
rclb
sbb
pop
pop
push
mov
repnz
bound
jecxz
push
jg
sub
mov
addr16
cltd
jnp
dec
inc
sbbl
mov
call
ds
xor
pop
mov
and
pop
loopne
push
inc
test
mov
shrb
sahf
pop
xchg
sub
push
cmp
or
cmp
es
adc
rcll
cs
fwait
mov
ljmp
jge
inc
outsl
adc
insb
jl
lea
pushf
jnp
pop
and
mov
sbb
das
cmc
lods
xchg
mov
out
aad
leave
dec
loopne
pop
dec
loopne
jl
adc
adc
cld
outsl
mov
fisttpll
cmp
fisubs
mov
ret
sbb
dec
mov
ljmp
mov
stos
into
push
inc
adc
mov
out
testl
cmpsl
incl
push
pop
mov
push
push
mov
inc
lcall
decl
int3
in
lahf
pushw
andl
push
bound
xor
addr16
das
mov
sub
out
jg
fcoms
fldenv
mov
pop
iret
lcall
fistl
xor
scas
xchg
call
mov
je
sub
icebp
mov
iret
xor
adc
or
clc
movsl
in
in
lea
sub
out
in
jle,pn
jb
popa
mov
inc
cmc
xchg
outsw
mov
movsl
mov
inc
push
pop
mov
shlb
mov
cmpl
adc
das
rol
das
jns
bound
mov
mov
pop
pop
xchg
cmc
scas
scas
dec
sub
mov
jg
dec
movsb
loope
flds
jl
dec
addr16
mov
push
into
adcl
mov
and
icebp
fldt
icebp
loope
mov
cld
fadd
jno
jns
rcl
lods
or
mov
adc
loope
call
mov
insl
cmp
bound
pop
mov
jae
addl
cs
push
push
addb
cmp
push
pop
fsubs
push
sbb
mov
jnp
fstpt
mov
std
inc
sub
ss
fisubl
mov
cmpsl
cmc
mov
cld
pop
cmp
pushl
add
jnp
add
mov
in
sar
mov
jg
int3
divb
ror
aas
sbb
lock
add
mov
clc
inc
and
fnsave
into
add
mov
les
fcom
cld
jl
shrl
lcall
test
stos
es
sbb
adc
mov
push
sbb
imul
shrb
jbe
mov
pop
mov
scas
inc
ja
ds
aad
mov
jnp
dec
mov
mov
scas
fucompp
and
cli
push
pop
sub
loope
xchg
and
or
orl
inc
push
pop
cmp
sub
xor
or
stos
roll
aam
pop
mov
adc
mov
cmp
push
test
adc
lods
dec
and
fcomip
ljmp
setge
jl
jno
mov
ret
imul
adc
push
sub
movsl
pop
dec
loope
mov
fldl
xchg
xchg
push
cmp
cs
mov
test
call
divb
fmuls
push
orl
push
flds
cmp
mov
adcb
jb
sbb
gs
stos
adc
movsl
into
fisubrl
xchg
in
push
insb
adc
cld
lods
filds
lds
pop
shlb
ljmp
fisubrs
scas
ret
lods
sarb
icebp
pop
clc
xchg
in
ss
jnp
mov
cmpl
loope
pop
lock
das
shl
imul
inc
add
jmp
ss
popf
xor
sub
aaa
mov
add
add
mov
jae
insl
subb
outsl
aaa
xchg
xor
cs
sbb
in
and
mov
les
inc
adc
addl
ljmp
fbld
popa
pop
pop
mov
add
add
xchg
pushf
adc
mov
sub
mov
into
std
js
inc
into
mov
jmp
cli
adc
push
xor
adc
fildll
mov
lds
aam
or
add
outsb
fwait
inc
push
lock
add
mov
mov
pop
pop
dec
aas
dec
cmp
adc
lret
mov
cmpsb
icebp
push
roll
and
nopl
sub
fcmovbe
jnp
or
dec
mov
stos
scas
mull
xchg
out
push
mov
xchg
jne
adc
fcompl
fst
lock
pop
push
and
xchg
jo
jne
adc
pop
mov
adc
push
jns
push
push
cmp
jle
cmc
ljmp
aaa
pop
out
sbb
jl
sub
cmp
stos
mov
sti
xchg
cltd
xor
or
xchg
fwait
push
mov
mov
xor
add
leave
add
mov
xchg
xor
enter
and
mov
pusha
js
add
push
push
or
inc
ljmp
adc
cmp
or
sub
out
jg
xlat
popa
dec
or
movsb
adc
pop
fimull
lods
mov
cmpsb
mov
and
repnz
lret
addr16
pushf
cmp
sub
add
mov
mov
jmp
pop
inc
cmp
add
out
lcall
inc
pusha
lret
scas
adc
mov
and
in
mov
iret
das
jne
add
adc
jne
outsb
leave
mov
inc
jnp
adcb
mov
jecxz
aaa
and
fwait
mov
out
sbb
insl
psrlq
iret
aam
rclb
aad
sti
lds
mov
aas
int3
ss
jne
sub
add
jne
pusha
mov
cmc
outsb
jae
push
repnz
and
adc
push
jp
cmp
or
scas
aam
test
bound
int
hlt
out
cmp
and
push
xchg
cmp
incl
jecxz
push
cwtl
push
data16
idivb
mov
mov
ljmp
pop
inc
jmp
in
cltd
shl
jo
mov
not
add
xchg
xchg
and
push
fwait
into
pop
cli
ret
adc
pop
cmp
out
ret
ret
js
insl
es
jg
sub
int3
aaa
out
cmp
mov
cmp
xor
or
bound
outsl
mov
xchg
pop
and
fwait
jle
clc
in
sbb
adc
or
inc
mov
xor
push
loopne
add
lret
cmp
dec
int3
sub
mov
cmp
mov
sub
fnstcw
loopne
dec
stos
dec
cmp
movb
andb
int3
push
cmp
add
jmp
mov
outsl
testb
pushf
push
or
adc
jg
pop
clc
test
lret
insl
cs
sub
scas
inc
mov
dec
push
clc
mov
pop
cmp
add
shrb
daa
or
clc
arpl
inc
nop
fnstsw
jecxz
repz
incl
aaa
je
xchg
push
xchg
sbb
sarl
cmpsl
or
aam
push
inc
jle
jle
mov
xchg
xcrypt-cfb
cmpsl
mov
ret
int3
arpl
lock
int
aam
dec
and
mov
and
dec
sahf
leave
dec
xchg
ret
imul
fcmovnb
adc
push
mov
pop
sbb
and
mov
push
pop
jb
int
dec
fsubp
leave
jg
xchg
sti
mov
jmp
or
js
or
fs
stos
sbb
cld
lods
loop
dec
xor
or
cmc
or
movsl
jl
mov
pop
or
cltd
cmp
in
and
sub
notl
leave
shlb
mov
inc
adc
lret
jnp
dec
cld
and
loop
or
or
ret
inc
stos
jbe
in
clc
loope
stos
gs
out
add
in
rcl
xor
pusha
and
add
add
sub
jecxz
arpl
fists
fldcw
cmp
inc
push
pop
push
lea
in
jge
xchg
xchg
ret
mov
mov
dec
adc
lcall
addr16
out
pop
repnz
push
adc
mov
ret
mov
stc
into
mov
jbe
sbb
and
data16
scas
mov
sub
movsl
cmpsb
inc
insl
fs
xor
inc
lods
test
ljmp
test
repz
and
into
jmp
pop
pop
lcall
std
or
repnz
jb
mov
aas
std
pop
jo
test
add
mov
jb
add
jno
pop
mov
push
xchg
mov
lret
call
dec
clc
mov
jnp
inc
in
addr16
shlb
lahf
jecxz
push
aam
push
icebp
mov
out
mov
pop
sbb
lods
mov
pop
aam
dec
sbb
mov
scas
clc
jnp
inc
aad
inc
or
decb
mov
test
xchg
lcall
cld
enter
sbb
or
fs
xor
sbb
lret
mov
out
add
cmpb
pop
mov
clc
or
sub
mov
xor
mov
dec
jmp
icebp
sbb
pop
clc
inc
rorb
sbb
aaa
cmc
sbb
mov
and
and
faddp
sbb
std
les
mov
mov
and
popf
jmp
lcall
and
roll
out
inc
and
push
dec
xchg
scas
or
out
jmp
es
not
inc
jle
test
iret
pop
pop
mov
insl
in
sbb
jmp
outsb
out
cmp
and
movsl
orl
lock
fwait
hlt
mov
push
clc
rcrb
xchg
jnp
inc
cmp
sub
mov
add
fs
pop
cli
mov
xchg
decb
mov
rorb
lods
lea
pop
outsl
fimuls
lret
js
mov
outsl
sarb
les
stos
ret
data16
and
mov
xor
and
or
cli
shlb
mov
add
xchg
pop
mov
pop
jge
jbe
shlb
jecxz
arpl
add
and
mov
js
cmp
sbb
icebp
mov
fdivs
push
push
inc
mov
je
sti
mov
mov
sub
hlt
push
nop
jge
sbb
sbb
fists
test
arpl
test
jb
pop
aam
mov
hlt
mov
or
cmp
sub
sahf
dec
jbe
mov
repz
inc
xchg
push
dec
iret
mov
stos
dec
adc
or
out
xchg
hlt
das
mov
mov
cld
xchg
jecxz
imul
mov
cmp
in
ret
lahf
or
das
dec
pop
cmc
dec
inc
loopne
mov
icebp
xchg
add
sub
jne
add
mov
inc
fwait
mov
jp
int3
add
test
out
outsl
loop
sti
add
lock
cmp
std
je
cmpsl
pop
inc
adc
push
push
insb
fists
es
shrl
loope
xchg
mov
or
dec
push
mov
pop
mov
and
adc
loop
decb
loope
mov
in
jo
xchg
sub
fmul
rcrb
into
add
xor
push
push
movsb
push
loop
jge
aaa
cmp
arpl
xchg
ficoml
sbb
xchg
popl
or
jne
pop
lods
repnz
or
out
pop
pop
and
push
push
mov
loop
lods
mov
sub
and
lock
jge
cld
fimuls
dec
stos
dec
popa
fistps
cmp
lahf
inc
imul
ret
mov
mov
mov
cmp
xor
push
ss
push
xor
or
or
rorl
mov
jnp
pusha
scas
mov
xor
insb
popl
mov
mov
mov
pop
jle
out
pop
sub
repnz
xchg
pusha
incl
stos
jge
mov
lea
xchg
outsb
ja
lods
decl
pop
xchg
mov
and
es
cmp
and
pop
fmull
fcoms
clc
imull
addl
push
xor
cmpsb
loope
pop
mov
clc
sbb
inc
hlt
ss
mov
adcb
pop
hlt
pop
cmp
inc
test
sbb
lcall
enter
or
xor
insl
aad
gs
pushl
out
push
xchg
lahf
pop
sub
call
std
lcall
mov
and
aas
movsb
or
mov
xor
aaa
mov
arpl
lret
movsb
sbb
subb
pusha
and
fstpl
sbb
mov
popf
or
sub
cmp
into
mov
sub
cltd
in
pop
push
jecxz
out
lea
and
scas
test
mov
nop
pusha
cmp
lds
scas
push
inc
ret
or
ret
cld
push
subl
xor
or
push
outsl
inc
iret
je
es
dec
repz
nop
push
lcall
js
push
popa
lods
pop
aad
cmpsb
sbb
pop
sar
fcmovbe
push
lret
loopne
shlb
jge
decb
jp
sub
inc
sub
jne
fistpll
xor
test
bnd
je
decl
mov
jmp
or
repnz
pop
sbb
push
decl
fs
inc
aam
push
sbb
fistl
push
mov
xchg
les
jbe
ja
icebp
or
mov
sub
cmp
mov
in
pop
sbb
mov
mov
inc
mov
ja
or
ss
xlat
shrb
test
push
mov
mov
and
addr16
jge
push
lret
cwtl
sbb
insb
in
and
pop
add
mov
mov
cmp
pushf
jl
ljmp
sub
subl
call
outsl
sub
leave
fs
mov
jle
nop
js
pop
sbb
xor
ljmp
mov
adc
cltd
xchg
inc
mov
mov
pop
mov
jg
loop
push
pop
test
and
lea
hlt
mov
lods
inc
xchg
mov
jecxz
xchg
sbbb
dec
pusha
dec
xor
sub
rorb
mov
call
sub
dec
repz
dec
popa
pusha
jecxz
or
and
mov
sbb
mov
lea
sbb
ret
aad
adc
js
xchg
aaa
push
inc
sbb
jle
in
ljmp
and
fimull
jb
push
xchg
sub
dec
ret
js
loopne
cmpsb
xor
xchg
push
push
faddp
or
mov
cwtl
repnz
inc
dec
out
fidivrl
jmp
mov
adc
xchg
ss
cli
icebp
fucomip
jle
sub
jle
xor
aad
fwait
cli
sbb
push
and
sub
mov
jb
jmp
push
inc
decl
sbb
add
fdivl
sbb
pop
clc
outsl
sahf
xchg
jb
cmp
outsb
sbb
hlt
sbb
cmc
ja
sub
mov
sarl
test
roll
test
adc
fldt
rcrl
mov
xchg
or
pushf
sbb
lock
and
jb
jmp
lsl
shlb
pop
inc
sahf
in
mov
mov
push
pop
vpsrlw
test
jg
push
push
pusha
fsubrs
cmpsl
add
sbb
ficoml
add
push
sub
lds
faddl
cmpsl
sbb
mov
xlat
xchg
sub
inc
out
sti
addr16
mov
pop
xor
mov
mov
xchg
movsl
incl
imul
add
jae
in
mov
mov
push
rol
cmp
push
and
inc
push
add
insb
inc
mov
insl
pop
pop
cmp
and
aam
stos
add
mov
push
outsb
push
test
inc
cld
movsb
mov
jne
fisubrs
cli
call
push
ret
stos
mov
pop
pop
mov
std
or
in
lods
rcl
in
fdivs
push
bound
in
mov
jne
movsb
mov
inc
in
rcr
in
out
call
or
or
iret
dec
lock
clc
movsl
add
cmc
push
test
fcomip
aas
lods
in
pushf
dec
aaa
and
nop
push
or
aad
arpl
sbb
xor
jns
test
popf
cld
sbb
out
test
ret
jl
in
imul
cmpsb
mov
adc
inc
stos
aas
mov
jg
jnp
push
ss
dec
shll
or
sbb
sarb
in
mov
fcmovu
mov
shlb
xor
cmp
hlt
xlat
xor
cli
adc
in
ds
cmc
lods
and
in
mov
push
das
dec
inc
nop
dec
cmpsl
mov
movsb
mov
out
cli
dec
dec
pop
inc
movsb
fidivl
andb
aam
and
call
xchg
lds
xchg
cmp
movsb
inc
adc
mov
jp
sub
push
sub
inc
divb
mov
adc
cmp
mov
cmp
and
adc
or
jl
push
mov
jg
inc
mov
loop
pusha
nop
sbb
icebp
dec
inc
popf
push
shl
aaa
sub
cli
or
fs
cmp
aad
sbb
repnz
push
mov
mov
sub
lahf
sarb
fstps
aad
aam
pop
lcall
pop
loop
cld
rorb
xchg
push
mov
in
cmp
inc
jnp
jg
and
fdivrl
sub
leave
lret
loopne
cld
pop
pop
jbe
mov
je
lods
xor
inc
inc
addl
add
out
xchg
jae
mov
lods
or
and
incb
mov
outsl
and
jp
lock
mov
dec
add
out
push
fisubs
dec
imul
push
call
adc
insl
stc
imul
push
sti
and
inc
dec
ja
test
incb
int
cmp
adc
mov
sbb
push
adc
stos
incl
cmc
mov
imul
out
push
test
jecxz
or
cs
inc
jne
loope
pop
popa
mov
clc
aaa
add
mov
repz
shl
cli
push
hlt
negb
rcrl
test
add
rcl
sbb
adc
hlt
out
cltd
dec
das
push
fs
call
add
jecxz
pop
mov
imul
sti
notb
push
int
shll
push
mov
loopne
lcall
das
cld
mov
fsubrp
loopne
sahf
inc
ja
pop
lahf
and
xchg
mov
call
dec
push
fstpl
dec
push
pushf
in
aaa
clc
mov
or
icebp
xor
sub
jnp
mov
xlat
aam
mov
lret
stos
or
in
pop
push
adc
clc
mov
mov
in
fldt
xchg
mov
cmpsb
orl
mov
aaa
jl
cltd
popa
sub
push
jbe
ljmp
call
fistps
dec
bound
dec
and
call
mov
in
and
ljmp
std
in
imul
mov
push
push
jmpw
call
cli
adc
bound
out
or
in
inc
mov
icebp
daa
addr16
movsl
adcb
sbbb
rcrl
fbstp
shrb
loope
jg
mov
outsb
cmp
cmp
and
sub
jne
cs
and
cli
jmp
dec
ds
push
pop
pusha
sarb
add
test
cwtl
dec
dec
xchg
push
push
mov
mov
jg
mov
mov
insl
push
mov
inc
jmp
mov
push
mov
hlt
mov
adc
test
js
mov
jle
les
mov
sbb
gs
fistpll
popf
jns
jno
mov
jns
xor
and
dec
enter
enter
fistl
cli
into
fsubl
clc
into
or
movsl
andl
jg
test
sub
sbb
dec
sub
pop
jno
outsb
ljmp
jp
cmp
or
dec
xor
add
bound
insl
loop
and
inc
clc
test
loop
std
inc
sti
mov
loop
repnz
pusha
push
out
ja
pop
enter
pushl
fisttpll
orl
mov
outsl
xor
jle
or
jbe
mov
push
xor
std
xchg
mov
xchg
add
xchg
mov
ret
mov
loop
leave
xchg
test
mov
sub
xchg
incb
jp,pt
mov
cmp
notl
mov
cld
incl
mov
sub
sbb
or
pop
sti
dec
repnz
pop
loopne
add
fcomip
aaa
leave
pop
pop
xor
dec
add
inc
inc
cli
mov
ret
adc
dec
fcmovb
xchg
out
shrl
push
mov
inc
cmc
repz
cmp
es
sub
pop
test
pop
push
xor
sbb
xor
xorb
mov
inc
mov
jno
incl
mov
loope
sbb
jb
test
adc
jmp
repnz
clc
jg
sti
and
cmp
mov
xchg
mov
cmp
mov
lret
jg
in
decl
stc
mov
clc
or
mov
outsl
in
mov
mov
mov
xchg
rcrb
xor
cs
sbb
sub
dec
les
dec
stos
imul
loop
cld
in
movsl
sbb
inc
in
in
mov
jo
sbb
push
hlt
jg
and
cmp
pushf
loop
cli
pop
orb
fildl
pop
test
inc
mov
jecxz
sbb
scas
sahf
pop
sarl
lret
repz
pop
push
lret
clc
filds
or
xor
jo
scas
sbb
clc
add
mov
xor
fldt
mov
adc
lock
outsl
add
xor
ss
in
loope
fildll
aaa
sbb
pop
mov
cmp
pop
mov
imul
stos
xlat
dec
inc
mov
and
adcb
push
cmc
cmp
int
stc
scas
adc
test
jo
cmc
ljmp
fnstenv
jns
arpl
jg
or
fwait
cmp
cmpsl
push
dec
push
jne
cmpl
push
cmpsb
mov
pop
fs
je
inc
mov
outsl
mov
stc
adc
mov
test
mov
mov
jle
icebp
fildll
adc
pop
shrb
fwait
enter
mov
push
shl
sbb
add
inc
insl
bound
add
popa
jnp
and
ljmp
push
in
daa
cmp
std
pop
clc
in
test
xor
pusha
sahf
push
data16
sub
test
mov
fsubrl
movsb
dec
sbb
jae
out
mov
clc
mov
inc
mov
pusha
fsubrs
shlb
xchg
call
push
dec
mov
dec
insb
inc
add
xor
mov
lds
dec
adc
clc
sub
and
cmpsb
incl
into
inc
test
out
or
sbb
xlat
mov
push
dec
cmpsb
sub
fcmovb
xor
sub
shlb
in
sbbl
add
shr
ret
ljmp
loop
ficoml
ficomps
jne
jmp
cmp
pop
add
std
sbb
jno
add
js
or
pop
add
fimull
mov
mov
cmp
sti
mov
aaa
insb
mov
mov
les
stos
or
jnp
shll
hlt
push
lcall
ss
call
je
or
mov
scas
testb
sub
mov
sbb
out
inc
scas
cmpsb
pop
ds
js
daa
and
fcomi
jbe
arpl
mov
add
mov
jge
adc
clc
mov
or
das
ret
sub
sbb
lock
fcom
push
mov
push
lock
fstps
scas
addr16
push
mov
pop
and
fiadds
das
lret
dec
push
cmp
cmp
das
mov
dec
jg
lods
js
outsl
mov
outsb
mov
add
test
andb
ret
jb
dec
insl
or
out
nop
mov
mov
jge
mov
and
push
mov
push
sbb
lock
adc
mov
lret
add
adc
mov
push
iret
mov
xchg
inc
ljmp
rcrb
adc
xlat
cltd
xchg
jge
ret
mov
sahf
jbe
jne
lret
int3
cmp
lahf
pop
imul
mov
adc
lods
aam
jmp
mov
pop
fcomps
mov
jl
cltd
hlt
repz
lret
mov
rcrl
movsb
adc
cmp
movsl
idiv
test
mov
adc
mov
aas
loopne
iret
mov
mov
mov
or
or
and
outsl
jne
lods
rcrb
dec
nop
std
cmp
sbb
pop
add
mov
orb
inc
fstpl
sub
insb
jg
add
xor
jecxz
pop
in
imul
mov
sti
les
fsubrl
jl
nop
ss
into
fmulp
adc
mov
mov
add
push
movb
dec
push
xor
cld
ja
shll
jb
sbb
loope
outsb
das
sub
pushf
shl
inc
sub
loope
inc
adc
xchg
or
and
test
inc
mov
jle
pop
mov
loope
jl
sub
mov
or
jg
arpl
add
sbb
push
sarb
adc
cwtl
push
hlt
clc
push
ljmp
fdiv
and
pop
movsl
call
pop
jecxz
fldt
xchg
jbe
out
push
add
mov
test
sub
mov
sub
imul
sub
packsswb
lods
pop
jle
aaa
test
jmp
cmp
aaa
mov
dec
lods
xchg
nop
neg
inc
iret
pushl
adc
dec
adc
push
aas
scas
cmpsb
es
jl
or
dec
cmp
cmc
pop
sub
xchg
int
bound
mov
xchg
xchg
or
add
rorl
popa
and
aam
pop
jo
dec
add
mov
sub
popl
ljmp
stos
or
repz
dec
sub
leave
imul
rolb
es
icebp
sub
mov
dec
insl
jns
push
xchg
lea
sub
push
insl
jl
xchg
and
mov
sbb
movsb
jg
cld
dec
js
cltd
ja
cmp
lods
sbb
pop
push
xchg
push
mov
or
pop
outsl
sub
adc
mov
push
std
leave
je
aam
ljmp
xlat
divl
cwtl
outsb
faddl
aas
cld
stc
pop
mov
and
sub
jg
xchg
sub
mov
lret
popf
sbb
inc
icebp
aam
test
push
xor
into
mov
clc
in
aaa
clc
outsl
test
aam
adc
jle
or
addl
sbb
outsl
push
add
movsl
leave
sub
cmp
aaa
mov
adc
jb
xchg
mov
mov
jne
and
loop
nop
js
lret
mov
jmp
jmp
cs
out
mov
sbb
out
cltd
xor
jae
imulb
or
mov
pop
jl
inc
cmp
clc
xor
mov
pushl
jns
rcrl
dec
iret
mov
or
fimuls
cmp
adc
mov
xor
and
xor
mov
mov
push
adcb
outsl
sbb
adc
negl
in
cmpsb
lods
adc
cmp
stc
out
cltd
push
hlt
cli
or
jge
dec
ja
cli
mov
add
incl
pusha
mov
push
inc
repnz
xchg
loop
add
mov
mov
mov
repz
clc
push
leave
les
popa
stos
fisttpl
hlt
xchg
andl
xchg
clc
mov
insl
jnp
test
xchg
fidivl
andb
xor
filds
fisttps
add
and
xor
add
jo
adc
mov
leave
pushl
lea
cmp
dec
and
mov
fiaddl
push
outsl
pop
cmp
movsb
insb
dec
sub
cs
cmpsb
movsb
cld
je
jl
test
bound
icebp
dec
je
scas
cmpsl
lock
pop
in
inc
add
mov
aaa
mov
adc
inc
mov
sub
sub
mov
add
scas
lahf
fsubrs
push
mov
add
sub
push
push
enter
pop
out
cs
sub
sbb
fstpl
pop
xchg
sbb
adc
stos
movsl
inc
xchg
int3
jno
and
and
jg
adc
fisubrl
jl
aad
dec
push
fildll
sbb
mov
jle
cltd
mov
jp
add
cld
xchg
bound
clc
rorl
aam
inc
adc
sahf
pop
std
xchg
mov
mov
cs
pop
mov
pusha
aad
jbe
sbb
mov
outsb
das
pushl
leave
sub
sti
pop
mov
adc
jg
ficoml
mov
push
pop
jp
stos
aaa
mov
stos
mov
lahf
add
push
daa
sbb
js
add
es
xchg
dec
aad
jnp
insb
and
das
aad
shrl
inc
mov
mov
test
test
insl
dec
mov
push
subl
jmp
cwtl
imul
jmp
and
jle
pop
cltd
xchg
lret
mov
push
cs
mov
sbb
jno
mov
jns
les
in
xchg
mov
cmpsb
mov
daa
adc
cltd
clc
jne
in
ret
dec
in
loopne
cmp
mov
fisubrs
push
or
outsl
in
pop
fcom
push
scas
push
lret
aad
sbb
decl
and
adc
mov
cwtl
xor
dec
std
pop
icebp
and
repz
lret
adc
or
iret
pop
in
jle
loope
jp
push
jle
push
inc
adc
repz
adc
pop
js
jp
sub
ljmp
jne
or
adc
or
xchg
xchg
enter
test
jmp
lsl
or
fsub
enter
cmp
stos
popf
fildll
hlt
sarl
sbb
or
scas
push
decl
pop
loop
stos
jne
jmp
loop
cmc
jg
pop
xor
push
stc
fldenv
iret
imul
lock
cld
push
sahf
sub
loop
cmp
arpl
mov
cmp
inc
push
jnp
add
xchg
mov
dec
xadd
and
mov
push
dec
shrb
faddl
or
xor
jnp
stos
shll
xor
test
sti
les
and
mov
jmp
xchg
cmp
ja
inc
in
sub
add
mov
outsb
dec
setae
push
mov
adc
pop
or
int
push
aaa
ret
jg
loope
scas
cmc
aaa
add
js
sbb
incl
or
loopne
pop
cwtl
inc
pop
sahf
or
fwait
cmp
dec
or
aas
fsubl
stc
cld
sbb
fistps
add
mov
cmpsb
sub
pusha
test
sub
jg
dec
and
push
mov
les
repnz
push
jo
pop
out
in
push
inc
incl
test
mov
lods
fdivrp
mov
jle,pn
jo
and
xchg
lcall
push
sbb
nop
call
rclb
pop
lock
add
or
mov
push
out
dec
f2xm1
or
dec
cmp
xor
pop
ljmp
test
mov
mov
cmc
or
and
fabs
iret
mov
fildll
mov
xchg
xchg
dec
lret
xchg
jae
pop
ljmp
out
cs
outsl
or
lahf
jns
loope
fnstenv
ljmp
popa
add
inc
iret
in
data16
jg
cltd
cs
sub
shl
stos
add
popa
and
jbe
add
push
out
and
mov
sbb
andb
dec
pop
cli
mov
data16
hlt
leave
in
in
into
mov
incl
in
dec
and
and
mov
sti
je
cmp
clc
sbb
inc
add
inc
lret
cmc
ja
fsincos
adc
fwait
xor
xchg
xor
push
mov
jg
xor
or
pop
xor
hlt
pop
les
cmc
je
pushf
inc
dec
and
mov
pop
pushl
mov
push
test
or
std
pop
in
mov
sbb
iret
cmp
cmp
imul
nop
fdivl
xchg
dec
mov
fists
rol
iret
test
adc
aas
icebp
test
mov
mov
mov
or
hlt
js
adc
arpl
add
lock
ret
sbb
jmp
add
das
lret
xor
ret
jnp
pop
jnp
enter
mov
push
cli
frstor
jnp
outsl
stos
sbb
in
fistl
jg
and
fstp
cmpsb
ljmp
fwait
test
mov
lods
fwait
nop
lds
int3
jge
sub
xchg
mov
test
icebp
outsb
test
jnp
leave
in
out
ficoms
jle
mov
addl
sbb
repz
jne
adc
and
jl
or
ljmp
jmp
inc
inc
push
js
ret
add
ljmp
or
imul
adc
scas
sub
xlat
xchg
dec
mov
push
add
ljmp
call
mov
loope
icebp
push
dec
stos
xchg
dec
jbe
mov
sbb
ljmp
mov
aam
or
sbb
and
inc
das
or
fisttpll
dec
adc
out
push
rorb
xchg
cmp
mov
jg
jmp
mov
push
add
nop
into
ror
mov
js
add
or
jg
addl
push
mov
addr16
xchg
sbb
icebp
cld
fsubr
fidivrl
dec
test
cmp
inc
shl
jno
add
in
fildll
jne
push
cs
mov
mov
inc
push
cmp
and
sbb
shlb
adc
ja
and
pop
lods
push
in
dec
pop
lea
sar
push
mov
popf
lods
mov
xchg
adc
imul
movsb
or
and
pop
adc
enter
sbb
aaa
leave
in
add
popa
fcoml
mov
mov
add
inc
push
rcr
rcr
scas
call
adc
cmpl
mov
xor
xor
cmp
inc
loope
shrb
inc
push
shll
rcll
popf
xor
sbb
sub
mov
mov
xchg
leave
sub
popf
pop
and
adc
shll
push
ret
sub
dec
cmpsb
xor
leave
pop
test
cli
push
lock
add
outsb
mov
sub
sti
addr16
lcall
push
mov
insl
mov
imul
xlat
mov
push
or
mov
fists
lea
sub
decb
addl
call
daa
jg
lcall
dec
adc
or
std
loope
fcmovnu
mov
icebp
jl
jg
cmpb
mov
arpl
pop
xor
xchg
push
loop
cmpsb
lcall
test
shrl
adc
loopne
out
roll
bound
cmp
jae
stc
inc
pop
mov
jne
loope
inc
pop
inc
popf
es
pushf
movsb
add
pop
jno
adc
aas
push
enter
movsl
cs
push
inc
mov
mov
pop
sub
or
xchg
fwait
test
xchg
cwtl
sti
or
fwait
clc
fidivl
sbbl
mov
dec
sub
fsubr
or
xor
mov
fsub
xchg
orb
jae
adc
js
das
adc
lcall
push
pop
mov
sahf
cmpb
sub
sbb
test
std
dec
lods
push
sbb
dec
sub
lods
pusha
loopne
adc
or
aaa
add
sbb
add
int3
pop
inc
sub
dec
inc
mov
inc
pop
orb
push
aad
movsl
movsl
scas
jp
inc
mov
jecxz
movsl
pop
adc
mov
lods
int
js
mov
pop
enter
test
mov
arpl
pop
fbld
nop
or
les
aas
xchg
and
popa
mov
clc
pop
cld
sbb
hlt
rorl
jne
inc
inc
iret
or
add
cmp
fistl
in
andl
popf
xchg
push
clc
add
push
stos
mov
inc
incl
pop
jnp
mov
mov
cli
aam
fdivl
inc
mov
dec
mov
xchg
shll
ja
gs
fdivrl
in
push
push
or
sbb
les
test
adc
xor
cmpsb
mov
filds
xor
movsl
out
or
js
pusha
add
pop
xor
stos
outsl
mov
inc
jbe
xor
test
ljmp
push
in
pop
cmp
in
sar
or
rcrb
xchg
or
repnz
cmpsb
adc
and
mov
inc
pop
mov
add
fwait
mov
sar
mov
dec
push
loop
loop
jge
in
hlt
out
jp
std
mov
mov
adc
inc
or
cmp
popa
pop
testl
jg
pop
clc
xorl
or
hlt
scas
out
js
xchg
mulb
ljmp
pop
fmuls
std
dec
popa
es
aas
out
pusha
lret
push
cmp
fisttpll
insb
dec
repz
sbb
je
arpl
sbb
or
lds
mov
or
xchg
fstp
inc
insl
lcall
push
ss
call
mov
divl
cmpsb
roll
push
sarl
loope
and
dec
ljmp
fwait
cld
mov
dec
lock
icebp
pusha
mov
stos
pop
ljmp
jl
fstps
fildll
loope
mov
mov
mov
sbb
jg
inc
inc
out
loopne,pn
incl
inc
sub
pusha
push
stos
rcll
push
jno
pop
inc
sbb
sub
loope
xorl
pop
clc
rolb
lret
jp
mov
inc
incl
loope
mov
nop
xchg
lcall
lcall
fcmovnb
or
cvtps2pi
sbb
lea
jl
mov
push
sbb
and
in
sbb
rcr
or
sub
test
inc
hlt
fildll
ret
inc
decb
aam
or
mov
je
dec
sub
sahf
push
hlt
dec
imul
jae
and
sub
shrl
xchg
or
or
out
pop
jo
fs
pop
lret
enter
dec
loope
nop
xor
adc
or
bound
cmp
mov
fisttps
dec
inc
or
inc
mov
xor
inc
push
sub
cmc
jg
shll
cmpsb
mov
loopne
dec
dec
test
inc
mulb
mov
in
mov
xchg
popl
mov
lcall
in
jg
repz
mov
add
arpl
mov
js
xchg
out
pusha
ret
push
mov
dec
add
mov
loopne
push
dec
mov
imul
sbbl
lret
mull
inc
jo
js
pop
sbb
clc
sub
dec
sub
mov
rclb
ljmp
int3
in
aad
mov
add
add
lcall
in
sub
sub
enter
dec
mov
pop
mov
shll
cwtl
repnz
pop
insb
xchg
mov
or
outsl
sbb
pusha
pop
xor
sbb
mov
xchg
mov
mov
aam
int
lods
sahf
pushf
adcl
jbe,pn
stos
push
call
rolb
cmp
js
add
adc
out
sbb
dec
in
dec
jns
inc
mov
sbbl
lock
xchg
addps
add
arpl
icebp
pop
adc
mov
push
lret
cli
outsl
mov
test
cmp
or
pop
stos
popa
inc
xor
pop
or
push
shrb
out
adc
mov
decl
jo
mov
jmp
sysexit
add
js
sbb
inc
mulb
daa
movsb
pop
jg
setns
adc
movsb
test
nop
sbb
fcmovu
jno
in
mov
ud0
push
fstpl
faddp
cmp
inc
xor
pop
jg
ffreep
xor
jb
mov
pop
mov
fs
cli
jl
xchg
jne
es
jg
incl
inc
adc
push
xor
mov
mov
mov
inc
mov
test
test
cmp
in
icebp
push
sbb
hlt
clc
fbld
rclb
inc
and
stc
sbb
stos
adc
pop
cmpsl
jg
fcmovne
fisubl
in
mov
mov
insl
in
data16
lea
call
mov
jp
pop
and
push
scas
jge
push
shl
movsl
stos
jo
pop
pop
jb
pop
add
pop
nop
stos
cmp
outsb
dec
push
icebp
lds
push
lods
lret
popf
mov
or
push
add
in
rcll
stos
aaa
or
add
pop
or
cld
pushf
push
xchg
loopne
addr16
addr16
sub
push
in
inc
jmp
xor
dec
dec
pop
inc
stc
adc
jbe
jecxz
filds
sbb
jmp
xchg
jne
xchg
mov
mov
cmp
movsl
push
push
mov
cmpsl
bound
imul
test
mov
pop
mov
lock
and
xlat
scas
lea
mov
mov
test
icebp
jmp
inc
adcl
inc
jl
pop
int3
icebp
cmp
std
cmp
fstl
and
push
imul
or
dec
pop
fildll
inc
sub
ret
popf
lock
jmp
in
inc
pop
xchg
mov
and
or
jns
insb
incb
jb
xchg
rcr
in
push
mov
dec
adc
mov
int3
jecxz
ret
jno
aas
mov
outsl
hlt
mov
fmulp
or
leave
testl
or
les
cmpsl
mov
jmp
sub
mov
adc
and
jb
mov
fs
imul
pop
ret
xchg
or
mov
imul
in
aad
mov
jo
mov
and
pop
int3
xor
call
sub
cmp
mov
jb
pop
jbe
xchg
pop
pusha
int3
andb
mov
lock
sbb
mov
mov
jne
stc
mov
lds
mov
pop
mov
xchg
jne
inc
loope
mov
pop
mov
sbb
push
lds
lock
or
das
push
stos
adc
jmp
ret
jg
xor
or
jmp
dec
dec
adc
dec
js
sub
mov
repnz
daa
mov
jns
jns
rclb
pop
test
insl
arpl
and
and
sub
mov
fidivl
push
shlb
dec
negl
test
pop
pop
loopne
cmp
mov
jg
xchg
je
rcr
or
pop
adc
mov
add
loope
sbb
jl
idiv
pop
jb
cmpsb
sbb
fs
mov
pop
mov
pop
sub
test
shrb
and
loop
in
dec
je
jg
dec
and
pop
jnp
inc
dec
popa
xor
xor
pop
push
pop
rcrl
xor
ret
mov
xor
daa
enter
cli
push
pushl
sub
adc
in
jnp
fsubrs
push
aaa
push
xor
cmp
and
icebp
jg
pop
fsubrl
shll
fidivl
lea
xor
push
ljmp
pop
push
mov
jecxz
loope
jmp
xchg
adc
inc
bound
inc
sbb
lea
fs
outsb
jb
in
test
jmp
xor
jg
shrb
jbe
negb
pushf
shll
pop
inc
lcall
sti
out
or
and
int
icebp
imul
decl
dec
xor
inc
sbb
imul
icebp
pop
push
mov
rorl
clc
pusha
and
lock
in
lea
fisubs
mov
stos
aam
inc
repnz
mov
push
mov
mov
sub
mov
pop
jg
js
iret
notl
mov
jmp
int
mov
in
ret
loope
dec
mov
dec
mov
insl
sti
xchg
data16
loope
mov
outsb
sub
jle
dec
and
jle
jg
xor
sub
inc
into
mov
sahf
jle
movsb
cbtw
das
push
or
stos
out
js
lcall
fnstsw
out
xchg
test
cs
cmp
in
xor
in
push
mov
sahf
dec
fwait
adc
es
incl
addl
jns
mov
sbb
pop
fcoml
push
mov
orl
dec
sub
lods
cwtl
jle
hlt
outsl
hlt
cmc
shlb
inc
sub
xchg
pop
cmpl
insb
push
dec
loope
or
inc
push
notb
xchg
insb
pop
or
daa
test
pop
arpl
sarl
int
pop
mov
cmp
sbb
mov
push
inc
fdivrs
and
ss
in
subl
ljmp
stc
cmp
jg
ds
in
xor
ljmp
in
sub
mov
pop
jmp
scas
cli
lcall
js
idivl
add
mov
xchg
pushf
xorl
add
shl
mov
push
mov
cmp
fcom
mov
or
fucomip
paddq
jg
faddl
adc
sub
mov
jo
mov
mov
jecxz
inc
lods
scas
mov
aaa
or
adc
popf
and
pop
jne
adcl
xchg
pushf
sbb
test
aam
das
jns
mov
jbe
lock
fisttpl
imul
aaa
ret
fucomi
xchg
addr16
aaa
outsb
aam
or
pop
orb
xor
nop
ja
fwait
pop
les
inc
jne
jg
fucom
mov
stos
add
push
jecxz
push
test
adcb
call
cmp
push
mov
add
fists
cmp
inc
inc
out
push
mov
loop
or
inc
fmuls
out
xchg
repnz
insb
mov
push
aaa
add
js
pop
fs
popa
int
pop
pop
mov
mov
inc
mov
aad
cld
fwait
adc
push
mov
pop
push
arpl
sub
les
cld
inc
push
movd
sub
and
ljmp
mov
outsb
mov
fsubrp
movsl
cmp
push
jmp
ret
outsl
adc
clc
mov
adc
xlat
ljmp
cmp
or
jbe
scas
fsubs
mov
add
int3
sbb
pop
out
mov
xor
pop
lock
sbb
in
sub
pop
xchg
popf
cltd
sub
xchg
mov
aas
adc
fnsave
std
xor
enter
aam
sbb
fnstcw
mov
cmp
clc
pop
cli
push
xorl
ljmp
pop
pusha
jns
xchg
dec
bound
pop
loop
idivb
stc
aas
jns
aam
adc
pop
rolb
mov
ret
jo
leave
inc
mov
pop
xchg
add
adc
mov
lods
adc
add
pop
test
and
test
add
mov
sbb
sbb
test
ds
test
ret
xchg
adc
je
and
add
mov
cmp
mov
hlt
lahf
outsl
cmp
sub
jle
xchg
sbb
or
adc
mov
xchg
mov
stos
mov
adc
pusha
clc
insb
jg
aad
sub
xchg
outsb
mov
ret
dec
mov
scas
pop
mov
inc
aad
push
inc
sbb
xchg
add
arpl
and
mov
outsl
pusha
jns
adc
int
xor
xor
adc
and
divl
dec
and
sbbb
jnp
sub
int
push
shlb
sub
sbb
pop
fcom
sbb
mov
sti
shlb
mov
add
add
inc
test
push
outsl
mov
add
repz
push
cmpsb
pop
lea
cmp
dec
xchg
xchg
in
sub
push
hlt
mov
rolb
pop
pop
fsubrs
rclb
add
fnstsw
enter
adc
fs
insb
movntq
clc
sub
xor
nop
jbe
xor
inc
test
inc
dec
and
push
sbb
sub
sbb
jl
movsl
sbbl
jns
inc
aam
inc
mov
icebp
xchg
dec
notl
jo
mov
nop
push
outsb
insb
shl
pop
and
cmp
cmp
scas
icebp
mov
rcr
pusha
shll
mov
jmp
scas
jae
enter
adc
roll
and
mov
inc
dec
mov
inc
add
outsl
inc
incl
cmpsb
inc
and
pushf
fs
je
mov
das
adc
mul
inc
popa
pop
es
jbe
mov
or
bound
adc
mov
cmpsl
nop
jnp
imul
mov
neg
xchg
mov
jg
ret
icebp
and
and
int
clc
cmp
ficoms
repnz
shrb
jno
dec
addr16
push
mov
mov
sbbl
dec
test
in
add
push
xor
cmp
xchg
cmp
xchg
xchg
test
ror
in
xorb
inc
mul
dec
pop
mov
cmpsb
xor
xchg
mov
inc
xor
jecxz
ljmp
pop
aaa
arpl
inc
mov
sbb
sub
sub
imul
mov
outsl
sub
cmc
sbb
jmp
push
xlat
loopne
inc
aaa
mov
cli
mov
enter
daa
aaa
repnz
dec
dec
sbb
rcrb
push
ffree
jns
cmpb
stos
icebp
adc
fildll
ss
sbb
aaa
sbb
mov
stos
loopne
lock
aam
or
iret
or
and
outsl
mov
in
arpl
adc
push
aaa
push
loop
rorb
aas
hlt
std
add
roll
loopne
fstp
jecxz
sbb
test
testb
mov
rorl
sub
add
call
rol
xor
into
lods
in
test
xchg
cmp
dec
dec
and
mov
outsl
mov
mov
jge
or
pop
and
push
hlt
ud2
cmp
xorl
nop
mov
mov
addl
inc
ret
subl
add
loopne
lds
rol
and
xchg
pop
mov
lock
sbb
in
pop
out
das
fsubl
inc
pop
ss
or
lods
test
lds
scas
push
or
lock
adc
and
shrb
dec
aas
leave
sbb
mov
rorb
pop
lahf
hlt
xlat
daa
cmp
movl
jp
outsl
cmc
jmp
cli
out
jle
add
xchg
es
adc
add
lcall
jmp
mov
subl
jmp
in
lcall
test
adc
shr
mov
dec
inc
add
pop
jmp
add
cmp
fdivs
repz
lock
pusha
aam
mov
adc
cmpsl
cmp
xchg
dec
icebp
or
cwtl
test
scas
repnz
and
fiadds
ret
and
mov
aam
dec
jg
out
jp
pop
loopne
enter
jp
or
pushf
adc
ret
loope
jl
push
pop
adc
arpl
cwtl
pop
and
mov
rol
sbb
lock
mov
mov
stos
movsl
test
lds
vmaxps
jecxz
fistpl
lock
fucomi
pop
or
mov
jle
lcall
inc
imul
jbe
xorb
call
jle
adc
pop
mov
dec
xchg
xor
loopne
jno
scas
rolb
sbb
out
int3
mov
inc
jle
push
fsubrl
or
cld
sbb
adc
or
pushf
jae
cmpsl
movsl
jbe
in
ret
out
int
adc
pop
xchg
repz
add
mov
mov
add
jecxz
jg
outsb
test
stc
or
sbb
loopne
mov
push
dec
pushf
and
push
les
fcmovnb
xchg
ljmp
or
sub
push
inc
outsl
pop
mov
outsl
xor
filds
lods
aam
outsb
in
stos
shlb
test
pop
call
ss
pop
and
jecxz
mov
dec
ss
aas
adc
shll
mov
add
push
inc
lods
pop
lock
inc
xchg
xchg
lea
jae
data16
outsl
jecxz
ja
pop
mov
mov
testl
dec
movsb
xchg
xchg
push
roll
lret
adc
push
sub
lcall
pop
aas
xor
push
or
sbb
daa
or
jne
out
sub
popf
adc
jnp
and
stos
dec
cmc
in
insl
mov
cs
iret
push
lcall
nop
lds
repz
mov
push
push
or
or
rcrb
push
xchg
mov
push
imul
push
inc
xor
jo
xchg
call
iret
xor
lds
push
pusha
mov
add
outsb
in
mov
dec
xchg
repnz
xchg
ja
jns
and
jg
dec
sub
mov
add
mov
pop
or
add
rolb
adc
in
or
adc
pop
cmp
jmp
add
jne
das
inc
mov
pop
ja
jne
push
pusha
adc
jge
mov
adc
loop
cld
mov
mov
sti
dec
rolb
sub
mov
mov
dec
lahf
or
pop
cltd
adc
xchg
pushf
and
pop
pop
repz
addr16
das
scas
cmp
enter
stos
fcompl
push
inc
sbb
mov
jl
outsl
mov
adc
jo
and
movzwl
pop
xchg
cmp
lcall
fnsave
add
das
incb
lds
jg
scas
xchg
xorl
adc
pop
jge
jl
xor
or
incb
pusha
dec
jmp
cli
test
push
imul
imul
or
mov
sub
mov
mov
fs
lret
data16
jmp
xor
call
mov
push
popf
std
or
push
movsb
push
jbe
inc
mov
mov
add
add
adc
test
cli
fidivs
push
jl
sub
inc
jl
mov
push
mov
loop
and
sub
adcl
inc
pop
addb
cltd
pop
ss
xchg
fists
or
push
fisubrs
push
adcb
mov
rcll
movsl
mov
scas
cmc
rcrb
sbb
jne
subl
pop
aaa
mov
repz
aad
pop
push
mov
aas
pop
lahf
mov
dec
fidivl
lahf
je
into
test
jmp
mov
push
and
std
jg
fs
addb
nop
sub
dec
adc
mov
inc
lods
outsl
pusha
push
mov
shlb
pop
inc
inc
jmp
hlt
stc
roll
add
xchg
in
mov
mov
stos
in
jle
push
ficompl
in
or
lret
mov
pop
rcl
jl
jno
xor
imul
fdivr
in
dec
fucomi
xchg
jmp
inc
sbb
out
loopne
inc
xchg
jb
add
iret
mov
cli
xchg
pop
xlat
mov
rcl
mov
pop
push
movsb
lods
jne
pop
push
gs
mov
inc
jg
mov
adc
cmc
test
add
fbstp
and
mov
xchg
mov
fsubs
push
icebp
insb
sbb
sub
sub
sarl
cmp
or
call
call
ret
inc
or
adc
loopne
fdivrl
mov
cli
stos
and
sbb
cmp
divl
jl
mov
sti
fiadds
inc
dec
hlt
mov
push
int
cld
mov
mov
mov
xor
ss
jp
or
mov
and
mov
mov
pop
gs
push
arpl
test
sub
fistps
and
and
inc
mov
push
cmpsb
jge
in
add
cld
or
pop
pop
cmp
xchg
pop
dec
int3
jg
jecxz
lods
adc
mov
jl
or
jnp
push
clts
push
test
pop
test
adc
xor
inc
subb
push
out
sub
daa
or
adc
cmpsl
inc
mov
push
push
cmc
add
mov
popl
adc
or
out
sbb
add
mov
stos
movsl
jg
jbe
lahf
sbb
imul
out
sbbl
sub
mov
jne
sub
hlt
inc
ret
out
loopne
testb
xchg
push
lret
xchg
inc
adc
insl
leave
lret
push
ss
cmp
mov
mov
js
imul
clc
lods
call
ret
cmpsb
inc
xor
cli
xchg
sarb
adc
inc
cli
sbb
sbb
cmp
add
lock
scas
fbld
leave
xchg
inc
movsl
movsb
icebp
ds
movsb
enter
push
pop
push
lret
push
pop
jbe
test
stc
jae
xor
test
pop
decb
pop
adc
add
aaa
js
jbe
ja
loop
aas
icebp
cmp
adc
orl
sub
lret
insb
or
aaa
pop
mov
in
and
inc
cmp
mov
mov
out
jo
pop
outsl
mov
scas
lock
loop
add
adc
pop
fiaddl
adc
and
push
pop
mov
test
mov
rcr
hlt
icebp
inc
xlat
les
loope
push
xor
mov
xor
inc
and
inc
adc
test
je
sbb
and
jle
rcl
inc
jle
out
xchg
sub
das
inc
pop
inc
addr16
insb
je
cwtl
sti
push
inc
es
enter
sti
jne
adc
pop
sub
es
cmpsl
push
push
clc
outsl
jne
mov
adc
ds
aaa
clc
dec
xchg
jbe
dec
popf
fs
mov
movsl
lea
cli
mov
ja
cmp
rorb
lret
mov
sbb
inc
popf
and
inc
movsl
loopne
adc
dec
xchg
sub
rcrb
cmp
pop
fistpl
sbb
cmc
adc
or
loope
fmuls
inc
mov
xor
int3
lds
pop
sub
push
daa
jmp
sbb
hlt
sbb
push
sub
pop
push
test
lock
repz
movsl
push
sbb
lds
jg
mov
inc
or
sub
jecxz
ret
repz
loopne
pushf
mov
int
cmp
pop
or
cwtl
nop
testb
or
ficoml
mov
stos
mov
dec
adc
lea
cmp
sbb
cltd
cmp
push
pop
cmp
adc
add
mov
push
mov
mov
push
xchg
rorb
sbb
into
daa
pop
lahf
mov
fs
cmp
das
in
dec
hlt
lret
inc
adc
cltd
adc
das
mov
inc
decb
pop
imul
cli
xchg
sub
mov
sub
stc
test
movsl
incb
dec
add
sbbb
pop
cli
aad
xlat
dec
bound
jbe
pop
inc
jl
sbb
add
movsl
mov
es
rolb
jne
adc
inc
mov
insl
test
mov
stos
dec
pop
call
loope
add
xor
inc
leave
loop
and
push
stos
leave
sub
jne
inc
add
sbb
inc
sub
leave
inc
ljmp
mov
movsb
inc
push
dec
shll
js
shl
cmpsl
in
dec
xchg
mov
ret
adc
gs
nop
or
pop
mov
mov
cmpsb
nop
inc
inc
ja
mov
aas
push
cmp
dec
insb
fisttpl
scas
xchg
hlt
std
sbb
mov
cmp
popa
xchg
and
pop
rorl
pop
outsb
xchg
xor
sub
in
aaa
cmp
pop
outsb
lock
and
and
pop
jns
sub
mov
sub
outsb
in
enter
rcrb
sti
mov
sahf
mov
push
inc
adc
and
hlt
add
fwait
xlat
inc
ss
lds
stos
int3
pop
sarb
dec
test
jg
mov
mov
add
sbb
ljmp
xchg
and
mov
js
xor
jb
rcll
push
xlat
js
push
jg
fisttps
add
dec
mov
subb
roll
jmp
roll
and
cltd
lods
dec
aas
mov
mov
sbb
jp
outsb
clc
jbe
fildll
xchg
stos
add
push
pop
add
cmp
sti
filds
xor
ret
or
inc
jmp
idivb
je
lock
mov
test
je
es
les
cmpsl
sbb
icebp
jmp
cld
lcall
mov
push
clc
in
adc
cmpsl
jl
add
add
and
pop
add
sub
xchg
or
add
add
mov
ds
ficompl
cmpsb
mov
lock
jg
test
imul
xor
sahf
cmp
ror
fwait
push
jg
ljmp
jbe
xchg
sahf
mov
mov
fidivl
dec
and
xchg
sarb
cmp
stos
imul
sub
jg
mov
dec
out
dec
xor
dec
xor
adc
push
cmpsb
xchg
rol
inc
mov
loop
push
pop
fistpll
pushf
adc
dec
xchg
pusha
cmp
outsl
mov
sub
pop
jmp
jbe
pusha
into
xchg
ja
jmp
adc
loopne
repnz
jmp
sub
iret
outsl
clc
cs
call
pop
mov
xor
outsl
xchg
ficomps
repnz
imul
pop
test
add
push
sbb
or
dec
in
pop
inc
and
out
mov
sub
xor
jl
sbbl
and
into
sub
xor
nop
or
sbb
pushl
cmc
shrb
dec
imul
inc
test
popa
adc
rolb
pop
push
sti
inc
ja
sbbl
sarb
add
mov
sub
add
divl
test
mov
hlt
fcmovne
lds
cmp
mov
push
xchg
clc
jg
js
cwtl
inc
cld
subl
sbb
repz
cmp
arpl
clc
push
std
mov
dec
andb
mov
jg
jg
rcll
sub
cwtl
movsb
pop
adc
jmp
ja
mov
adc
scas
mov
arpl
mov
push
xor
adc
pusha
mov
ljmp
mov
mov
clc
jle
jae
bound
pop
outsl
roll
mov
cmpsl
scas
or
ja
push
jnp
into
sub
pop
mov
add
inc
sbb
repnz
sbb
call
mov
ljmp
decb
xchg
popl
and
lods
call
mov
mov
inc
call
jle
adc
adc
or
xchg
shll
inc
enter
ljmp
les
mov
add
das
hlt
sbb
aaa
mov
and
push
pop
mov
or
add
xchg
pop
imul
test
push
in
cmpsl
or
and
add
adc
sbb
pop
cld
dec
cmp
shrb
fwait
bound
cld
or
aam
ret
jecxz
mov
cwtl
mov
push
push
test
cmp
mov
inc
xor
mov
int3
test
sbb
inc
out
sbbb
fcomps
nop
push
stos
sub
pop
mov
sbb
idiv
cld
xchg
pop
adc
testl
inc
addl
ret
int
mov
rorb
mov
fildl
mov
loopne
in
icebp
ljmp
xor
push
aaa
sbb
mov
in
outsl
lea
pop
stc
aad
sbb
lods
xchg
orb
test
or
pop
jle
mov
into
adc
xor
pop
xor
faddl
mov
fiaddl
xlat
arpl
cld
xchg
jb
mov
and
sbb
outsl
add
jb
aas
mov
cmpb
adc
ret
and
sbb
xchg
mov
push
ret
mov
cmc
ret
arpl
push
stc
sub
xlat
dec
mov
lods
mov
jg
mov
rorl
hlt
or
jle
mov
ret
movsb
testb
ret
add
mov
icebp
pop
cmc
xchg
add
or
sbb
mov
jb
mov
test
clc
stc
lahf
jmp
jl
ficompl
pop
xchg
aad
or
pop
decl
cli
sub
and
or
loopne
loope
jne
inc
fldt
push
cs
sub
push
std
movsl
pop
mov
int
cmpsl
popa
icebp
hlt
mov
sti
dec
xor
dec
push
push
dec
mov
orb
outsl
aaa
mov
cli
mov
les
out
testl
sbb
or
add
or
sub
adc
test
xchg
cltd
hlt
xchg
sbb
add
jecxz
push
cltd
adc
seta
push
jecxz
mov
mov
pop
faddl
push
inc
add
jp
push
mov
mov
adc
in
rolb
fdivr
in
fisttps
mov
test
inc
pop
push
ret
movsl
mov
popa
jmp
pop
or
andb
mov
fisubrl
cmp
xchg
push
ss
inc
decl
roll
pop
fists
rcrl
fucomip
icebp
jl
rcrl
pop
and
nop
xchg
stos
jmp
mov
push
mov
test
dec
xchg
adc
add
push
and
mov
test
lahf
lcall
or
add
cli
ret
sub
add
mov
jno
loop
test
fimull
and
or
mov
addr16
rol
pop
push
lcall
jle
and
jmp
data16
rcr
sub
ljmp
push
xchg
or
cmp
ss
icebp
mov
sahf
pop
ljmp
mov
aaa
mov
cwtl
jbe
dec
jg
test
inc
fcmovnu
aas
xchg
mov
add
adc
repnz
mov
aam
jbe
and
out
sbbb
pop
clc
rclb
xchg
lock
out
lret
es
push
sub
lods
cmp
cs
lcall
ja
mov
inc
jp
ljmp
xor
cmpsb
mov
push
sbb
cmc
aas
fsubp
jns
xchg
adc
nop
mov
xchg
sub
jbe
pop
xor
stc
xchg
push
rcrb
imul
aaa
pop
sub
insb
pop
jg
and
adc
or
pop
adc
adc
movsb
xchg
mov
mov
push
adc
inc
inc
aas
jne
sub
stos
shrb
addb
add
outsl
mov
dec
icebp
pop
add
push
cwtl
jo
sahf
popa
adc
mov
inc
sbb
ds
inc
jecxz
pop
jmp
pop
or
pop
push
and
roll
outsl
shll
jo
and
adc
je
mov
fs
inc
jl
shll
or
sub
shll
scas
jge
dec
clc
lock
add
out
or
and
jne
call
lret
inc
scas
add
mov
mov
pop
adc
je
mov
mov
and
mov
xchg
or
mov
inc
ss
push
outsl
mov
aam
ds
add
outsb
mov
push
les
addr16
push
fwait
sub
xlat
mov
or
or
jo
lcall
push
hlt
xor
lcall
mov
inc
mov
jge
lcall
push
das
jecxz
stc
test
xchg
adc
mov
jmp
sbb
dec
jge
outsb
dec
mov
outsb
push
lock
in
callw
andb
ret
lea
and
or
push
imul
dec
lea
iret
sub
push
sbb
pop
pop
das
loope
push
aas
lcall
sbb
sub
faddp
int
test
ja
sbbl
ljmp
and
ret
movsl
shll
mov
adc
loopne
in
cmp
in
test
and
add
push
mov
cld
outsl
fists
xchg
mov
enter
fisubrl
or
xchg
add
pop
int
je
push
stos
jae
fistl
pop
add
cmpsl
jae
add
aad
js
and
cs
out
dec
lea
cmp
test
bound
xor
loop
aam
or
nop
in
cmpsb
outsl
std
nop
xchg
nop
mov
cwtl
mov
mov
mov
or
clc
jg
cmp
nop
jmp
addl
dec
jp
ljmp
je
push
adc
xor
xchg
add
xor
push
sarl
xor
fsubl
cmpsb
inc
sbb
lock
in
mov
adc
mov
movsb
aaa
cmp
push
pop
test
lock
insb
lods
pop
test
add
or
cmp
adc
aad
jmp
call
jbe
jne
repz
scas
sub
inc
xchg
data16
std
push
mov
sarb
arpl
ja
outsl
subb
jp
dec
leave
pop
xchg
data16
cmp
mov
mov
hlt
jno
repnz
mov
fdivs
addl
adc
clc
pop
jno
call
addl
js
aaa
ret
xchg
fiadds
lcall
dec
rcrl
sbb
cmpsl
imul
movb
cmp
fbld
adc
aad
popf
dec
cmp
hlt
mov
sbb
inc
inc
cmp
in
adc
sub
subl
jg
inc
add
sahf
pop
add
std
scas
enter
adc
mov
lea
mov
adc
enter
mov
add
out
inc
aaa
sbb
jb
lahf
sub
cli
or
or
or
pop
mov
push
xor
mov
and
sub
mov
cmp
les
xchg
decb
inc
or
sti
cwtl
mov
jno
mov
adc
cs
fisttpl
xchg
mov
shll
cmp
std
xor
clc
sub
filds
lret
imul
cs
mov
jecxz
aaa
addl
mov
ljmp
test
xor
fldt
push
xchg
dec
sub
popa
pop
xchg
add
and
in
outsl
sti
pop
daa
and
test
data16
lods
mov
push
jl
jo
or
jno
pop
fcmovnb
cld
hlt
les
data16
adc
add
fs
aad
jmp
pop
pop
cli
inc
aaa
jns
push
lret
sahf
push
inc
or
adc
dec
add
push
push
adc
insl
mov
pop
repnz
test
mov
lea
inc
in
lock
stos
mov
cmp
scas
aad
mov
mov
cmc
cmp
rcrb
cmp
add
sbb
and
bound
std
push
or
inc
enter
push
in
out
mov
or
in
push
mov
inc
cli
mov
jecxz
mov
mov
mov
mov
repnz
pusha
jb
popf
fstps
jecxz
sub
xor
sbb
ds
lret
or
dec
jne
sahf
mov
fildll
sahf
dec
stos
xor
cmp
icebp
out
ja
and
out
dec
out
aad
xlat
and
out
in
mov
jg
mov
mov
dec
lahf
inc
push
pop
test
roll
adc
shlb
sbb
or
sub
push
outsl
test
xchg
xor
mov
cmc
mov
clc
xor
xchg
dec
xchg
ljmp
int
outsl
sbb
fimuls
xchg
xchg
sti
or
std
pop
imul
xchg
xor
dec
sub
adc
xor
or
daa
leave
lods
inc
inc
ss
das
ficomps
subb
push
mov
pop
dec
xchg
xlat
jge
pushf
jno
xor
fistl
clc
push
dec
scas
lea
xor
repz
pop
dec
inc
orl
aam
mov
adc
js
xor
or
jecxz
shlb
and
mov
mov
fucomip
inc
add
sub
je
nop
jp
mov
leave
inc
mov
pop
test
lcall
sbb
addr16
scas
mov
xlat
sub
pop
stos
rol
pop
scas
dec
je
fldl
hlt
mov
outsl
test
fsqrt
ljmp
push
jecxz
jbe
out
lcall
push
insl
adc
pop
loope
mov
cmc
or
sub
int
test
add
cmp
cmpsb
or
jnp
mov
jecxz
add
mov
xor
popa
inc
push
outsb
xorl
sub
icebp
mov
je
push
add
pop
pusha
pop
loop
mov
inc
xchg
repz
xor
sub
pop
scas
xchg
icebp
test
cmpsl
jae
dec
lea
dec
jmp
orb
sbb
outsb
outsl
ja
and
add
stos
and
int3
popa
test
lds
sbb
mov
fmuls
decb
push
dec
das
test
stos
mov
aas
xbegin
mov
mov
stos
call
push
ja
mov
inc
cmp
sahf
jge
lret
aaa
nop
sub
stos
loope
stc
jae
rol
xchg
insb
sub
daa
cmp
inc
fnsave
sti
imul
and
cmc
outsl
adc
xchg
lret
add
test
sbb
outsb
insl
imul
push
add
inc
or
xor
jg
add
adc
call
jge
fsubrs
mov
jmp
insl
stos
adc
and
ja
mov
xchg
mov
popa
xor
and
ss
jae
mov
jle
test
add
shll
sti
out
xor
pop
ljmp
fsub
xchg
mov
sbb
popf
mov
ret
pop
push
cld
not
js
inc
sub
rcrb
jnp
jle
dec
pop
adc
adc
cld
inc
push
push
push
xchg
jne
je
xchg
xorl
lahf
jmp
ljmp
or
mov
test
das
inc
mov
jg
push
dec
ds
inc
sbb
cmp
jb
push
in
es
out
clc
das
pop
and
push
sub
xchg
mov
stos
jb
mov
roll
cmc
daa
hlt
lds
out
fdivr
dec
push
cmp
mov
mov
pop
pop
inc
pop
xorb
in
and
inc
aam
aaa
lods
and
stos
int
inc
std
sub
cmpsb
repnz
jno
cmp
sbb
inc
mov
out
push
dec
push
pop
push
insl
movsl
xlat
cld
pop
outsl
movswl
nop
jnp
fwait
push
sbb
dec
mov
das
add
gs
mov
mov
jmp
out
mov
sub
ds
out
xchg
mov
push
std
xor
inc
sub
jmp
mov
xor
jb
out
aas
pop
insl
clc
jmp
xor
and
inc
and
or
loope
and
loop
movsb
icebp
test
pop
or
mov
aaa
nop
sbb
and
or
dec
cmp
in
push
fldcw
sbb
push
lcall
dec
out
sbb
sub
pop
xchg
repnz
or
psllw
jge
mov
lcall
test
outsb
or
sub
mov
mov
cwtl
sbb
sbb
xchg
clc
mov
pushf
cmp
jne
jg
sub
ljmp
fstpl
push
insl
test
nop
clc
jo
in
and
loope
pop
ret
je
icebp
fistpl
push
and
push
adc
cwtl
sub
out
xchg
xchg
ss
xor
sti
inc
std
xchg
mov
xchg
popf
inc
and
and
fidivl
testl
call
enter
rcll
leave
sub
dec
mov
out
or
cmpl
std
jl
mov
cmpsb
imul
mov
insl
add
jge
adc
outsb
sbb
lea
lcall
fcmovnb
data16
mov
adc
fcoms
movsl
shlb
outsl
push
xor
andl
clc
cltd
add
mov
pop
jbe
jg
adc
or
push
rolb
je
mov
add
inc
dec
clc
adc
push
rolb
push
sbb
ret
mov
and
sbb
fcomi
pusha
repz
stc
pop
int
js
ljmp
or
sub
mov
stos
and
popa
test
fcmovnb
push
xchg
or
fs
lahf
inc
je
jmp
adc
mov
cmpsb
mov
xor
pusha
sbbb
lock
cmp
push
lods
les
int3
mov
add
jle
inc
xchg
decl
push
fbld
loop
xor
push
mov
fstpt
mov
pop
sbb
sbb
sub
cmc
ret
int3
dec
push
mov
es
cmp
adc
xchg
or
jae
push
push
cltd
add
bound
call
fldl
pop
clc
bound
push
ret
pop
push
lods
push
xlat
dec
js
es
adc
lret
cli
outsl
inc
add
movsb
inc
push
mov
push
mov
xchg
jg
scas
push
jge
mov
pop
adc
push
jne
pusha
adc
xchg
decb
inc
pop
sbb
lret
dec
sub
jbe
outsb
or
jle
pushf
std
adc
sbb
jne
leave
out
mov
xchg
stc
imulb
and
je
filds
fistpll
test
cwtl
fidivl
jl
icebp
ljmpw
jb
cs
fs
jp
push
inc
sti
sub
ficoml
jns
in
lcall
aam
mov
add
gs
inc
hlt
inc
ds
or
sub
lret
mov
inc
sub
je
fdivrp
and
pop
lock
adc
in
or
cmpsb
lcall
outsl
adc
iret
loope
cmp
cld
test
lods
add
jge
jo
push
nop
adc
sti
pushl
shll
ficoms
popf
jbe
sbbb
mov
inc
or
std
pop
pop
adc
mov
sbb
inc
push
es
ljmp
adc
test
in
testl
jbe
sbb
sub
mov
sub
push
mov
dec
sub
test
jno
pop
pop
shl
cmp
sbb
test
mov
pop
mov
test
pusha
sub
insb
mov
test
add
jns
pop
stos
mov
loopne
mov
inc
lock
rcl
inc
adcl
lods
fdivrl
test
sbb
popa
lret
das
aad
les
mov
mov
mov
sarb
sarb
xor
xchg
test
jmp
ljmp
dec
adc
jle
dec
stos
sbb
pop
adc
inc
add
mov
jae
mov
pop
test
andb
stos
nop
pusha
clc
test
cmpsb
push
jp
or
mov
cmp
std
lea
stos
dec
int3
stos
mov
xchg
decl
mov
loop
xchg
xchg
mov
lods
into
cmp
mov
cli
imulb
cld
fcomps
add
outsb
pop
ja
fwait
repnz
pop
sub
jo
out
add
enter
add
mov
or
xor
pop
icebp
push
shl
xchg
jno
fildll
mov
insb
lds
addr16
pop
and
add
jnp
nop
xchg
inc
and
jl
negb
aas
addb
cmp
or
sbb
push
mov
lret
fldt
lock
pusha
jge
mov
or
les
test
rclb
mov
sub
clc
adc
jne
repz
imul
add
loope
in
mov
int3
stc
or
aaa
mov
pusha
pop
daa
mov
rcr
mov
jae
into
dec
jge
test
jne
mov
mov
sbb
aas
pop
in
dec
mov
je
push
add
loop
loop
xor
mov
fidivrs
out
arpl
mov
push
repz
push
outsl
cmpsb
rorb
mov
sub
hlt
mov
pusha
rcrb
xor
ficompl
out
jbe
cmp
mov
movmskps
mov
movl
adc
es
and
and
cli
inc
jne
mov
cmpb
repz
cwtl
xchg
sbb
lret
std
in
bound
dec
aad
pushl
bound
insb
fisubl
jo
cli
jmp
sbb
mov
cld
mov
or
push
in
and
pop
ret
xor
mov
mov
mov
mov
sub
bound
outsb
pop
inc
mov
pop
xor
sbb
inc
iret
inc
xor
cld
clc
pop
sbb
pop
mov
dec
and
scas
and
mov
in
pushl
adc
out
mov
lcall
sbb
data16
inc
or
addb
and
cmp
sub
fwait
loop
ret
enter
cmp
adc
add
mov
cld
pop
xor
pushf
movsl
sbbl
mov
sub
roll
jp
fmuls
jle
add
stc
aad
loopne
push
xchg
stos
std
mov
jns
xchg
stc
rcll
dec
leave
je
mov
adc
sub
aas
push
push
jg
rorb
pop
pop
push
ljmp
and
inc
mov
push
cmp
insb
das
adc
jle
lock
or
movsb
iret
xchg
pop
ret
pop
xchg
sbb
mov
lods
push
test
rorl
decl
and
adc
pushf
cmp
pop
mov
aad
lret
and
clc
in
mov
mov
cltd
mov
mov
cwtl
cmp
sarb
sbb
inc
cmc
add
nop
xchg
pop
and
inc
sar
sbb
mov
dec
push
xor
icebp
in
mov
nop
icebp
jp
lea
out
das
mov
call
lret
cwtl
pop
mov
mov
or
pop
fimull
loop
add
or
cmpb
cmp
cmp
stos
sti
out
adc
adc
les
inc
pop
in
sbb
dec
push
test
lret
aam
insl
pop
mov
sti
sbb
xor
and
fistl
mov
sbb
jnp
xor
clc
call
sub
and
and
lret
popa
xor
pushl
add
fsubr
out
loopne
mov
js
inc
jmp
scas
or
push
scas
push
jbe
out
ds
movsl
lcall
fbld
aaa
add
or
cmpsb
jne
outsl
hlt
or
jb
and
in
sbb
xchg
ffree
add
jae
ret
test
das
insb
loopne
mov
and
or
scas
pop
movsl
cmp
cltd
mov
jmp
and
and
adc
jne
mov
arpl
mov
mov
jg
outsl
sbb
lcall
dec
cmp
and
std
mov
jmp
mov
inc
fdivrl
cmp
inc
fmuls
ljmp
push
stos
pop
ja
add
ljmp
pop
dec
sub
push
or
jbe
js
lcall
fld
pop
inc
ja
mov
data16
stc
enter
mov
xchg
cld
xor
add
daa
call
enter
arpl
iret
mov
or
jp
fcomps
popf
insl
mov
dec
jae
sbb
mov
jmp
adc
cli
js
add
dec
or
sarb
lods
test
sti
and
sarl
inc
outsb
movsl
sub
notb
sub
adc
insl
and
push
test
stc
pop
ret
and
dec
mov
mov
negb
outsl
mov
movsb
ljmp
sub
jb
cmc
fildll
and
mov
inc
test
sbb
popa
mov
sbb
lret
mov
ret
push
sbb
inc
mov
adc
mov
shll
add
rcr
jg
sarl
cmp
imul
cli
movsl
test
or
popf
mov
mov
sarl
ljmp
fidivrs
je
test
xchg
push
xor
push
mov
enter
push
cld
test
mov
mov
mov
mov
pop
jg
push
faddl
sbbb
and
xchg
pop
and
fstl
adc
mov
out
jge
jle
shr
mov
mov
ficoml
dec
xor
fs
xchg
fidivs
inc
xor
inc
xor
sbb
pusha
in
mov
lds
clc
fistpl
out
jmp
stos
jl
out
mov
rol
inc
outsl
inc
rolb
mov
lret
adc
mov
ljmp
popa
mov
push
iret
push
cmp
push
loop
dec
add
adc
int
adc
scas
notb
ljmp
xor
pop
fcoms
jb
or
fdivr
ja
aad
lahf
pusha
mov
aas
bound
xlat
fcompl
incl
push
aam
add
and
lock
or
add
rcrb
jo
inc
sub
xlat
mov
js
jle
lods
mov
in
sti
loopne
movl
aas
out
mov
mov
test
cmpsb
movsb
scas
fcmovb
mov
sbb
pop
mov
push
push
adcb
xor
fldenv
cmpsb
repnz
adc
and
lods
into
into
or
stos
inc
cmp
mov
pop
push
adc
and
fmull
adc
imul
mov
push
cmpsl
sub
rclb
sbb
scas
or
jmp
stos
je
adc
rcrl
add
mov
sub
adc
adc
xchg
ds
xor
sarb
push
lahf
test
imul
data16
lret
lea
cwtl
cmp
or
test
mov
add
std
inc
into
or
mov
xor
cwtl
cmp
pop
dec
cmpb
fs
mov
mov
push
lea
stos
push
loope
dec
lds
insb
ret
jmp
andb
dec
jg
aaa
pop
scas
cwtl
popf
mov
loope
ret
das
mov
xchg
sub
sub
test
mov
rclb
pop
push
fldt
add
test
faddp
test
add
mov
sub
jbe
andl
clc
filds
sub
mov
mov
sbb
stos
sar
jb
pop
sub
pop
pop
mov
jb
push
pushf
loop
mov
lahf
rclb
outsl
leave
stos
shl
sub
push
lret
xor
das
shr
push
mov
or
push
add
decl
sbb
and
test
imul
push
adc
dec
aad
push
sbb
push
sarb
shrl
sub
dec
shll
scas
imulb
outsl
rclb
add
pop
leave
push
daa
xor
or
jae
sub
pop
mov
jecxz
push
pop
cs
adc
mov
inc
lcall
mov
shrb
cmp
mov
adc
adcb
jp
insb
dec
roll
xchg
mov
push
out
jecxz
adc
cmp
lea
int3
fwait
add
imul
out
adc
dec
loop
lret
sbb
dec
and
push
dec
fdivr
fmul
adc
cld
mov
sbb
out
mov
xchg
mov
xchg
iret
outsl
inc
xchg
inc
dec
and
jbe
scas
sbbb
xchg
lock
push
aas
sub
mov
mov
fdiv
lcall
push
adc
test
inc
push
or
xor
cmp
inc
scas
push
inc
jo
shlb
mov
icebp
jb
test
pop
nop
outsl
inc
shlb
jnp
jl
sbb
cli
inc
jmp
pop
std
in
lea
adc
mov
sbb
or
nop
faddp
add
decl
xorl
xor
mov
mov
pop
call
shl
and
fiadds
or
fildll
jmp
push
or
leave
dec
push
test
inc
or
stc
xor
dec
jb
cs
adc
loopne
pop
fsubl
pop
inc
into
iret
mov
ja
xor
xor
rol
ret
cmp
loop
push
push
loop
nop
out
xor
pusha
sbb
ljmp
sbbb
or
ja
mov
push
lret
movsl
push
popa
xchg
nop
fimull
leave
push
call
popf
popa
push
or
mov
jmp
in
or
add
jl
inc
ja
js
jnp
pop
mov
cmp
pushl
xor
mov
jno
sub
sub
inc
xchg
int
repnz
cmc
inc
sarl
inc
pop
daa
inc
stos
or
loope
call
and
mov
in
enter
sbb
fisttpll
or
lock
adc
fnstcw
call
stos
inc
cltd
stos
fstpt
daa
xchg
mov
js
mov
add
inc
jo
push
pop
clc
sub
dec
jo
and
mov
pop
pop
cmp
outsl
ja
add
inc
mov
inc
fildl
add
push
and
mov
mov
pop
or
push
ds
fcoml
mov
push
add
test
std
stos
jecxz
sti
outsl
in
add
out
stos
dec
dec
add
lods
lret
shr
pop
aas
adcb
sbb
jbe
xchg
cmpsl
push
ja
inc
mov
mov
sbb
sti
push
andl
xor
outsb
lock
mov
mov
jnp
test
mov
mov
ljmp
xchg
xchg
sub
sbb
pop
sub
into
movsl
mov
mov
sub
xchg
stos
out
test
lods
nop
jmp
adc
push
mov
jecxz
dec
adc
clc
test
jecxz
outsl
cld
cli
xchg
mov
fwait
pop
and
mov
negl
rcrl
insb
out
and
push
cmp
call
push
jl
ret
mov
adc
popf
addr16
or
subb
pusha
fcmovb
movsb
push
jns
fistps
pop
pop
push
cmp
pushf
adc
or
inc
xor
lods
cmpsb
and
int
movsl
call
not
inc
std
repz
sbb
inc
mov
pop
xor
fidivs
and
enter
adcl
xchg
or
or
mov
lahf
cs
or
fildll
adc
bound
xchg
and
sbb
xchg
adcl
das
fstpl
scas
adc
cmp
xor
xchg
jecxz
and
add
mov
adc
cltd
je
jge
scas
xchg
out
dec
mov
test
and
sub
fcomps
xchg
pushf
lret
and
iret
cmpsl
je
mov
cwtl
sbb
jno
shl
add
dec
dec
test
imul
cmp
leave
rorl
mov
mov
scas
mov
insl
or
push
aam
std
movsl
stc
cmp
pop
and
scas
adc
outsb
sbb
jmp
push
shlb
test
adc
test
sbb
add
movb
push
xchg
stos
scas
adc
icebp
shlb
jo
js
rorl
outsl
incb
add
add
push
inc
adc
xchg
in
inc
je
push
mov
mov
shlb
inc
jb
mov
mov
mov
mov
bound
aad
arpl
cmpsl
popf
mov
std
pop
mov
push
test
mov
pop
mov
inc
pop
add
adc
cmp
out
mov
jecxz
into
adc
ret
mov
scas
sarl
jbe
movsb
decl
jae
inc
les
stos
inc
xchg
test
pop
sbb
mov
inc
ljmp
or
and
jge
push
push
aaa
fcomi
pop
jge
and
rcrb
mov
popa
mov
inc
mov
stos
xor
add
popl
or
loopne
sub
push
or
out
shll
and
mov
mov
dec
jl
rcrl
cld
mov
and
mov
fucom
inc
or
sbb
je
loope
jbe
pop
call
or
ja
psubsb
clc
jmp
shrb
roll
xchg
jmp
insb
or
and
push
mov
and
call
and
jg
fmull
or
fisttps
mov
push
mov
call
ds
fstpl
cmp
pmuludq
or
sbb
inc
xor
fadds
out
push
stos
mov
in
mov
xchg
imul
loopne
jo
inc
stc
call
test
push
jmp
sbb
xor
adc
add
and
cmpsb
mov
push
xchg
dec
iret
mov
nop
int3
rorb
inc
fisttpll
decb
hlt
adc
xchg
rclb
jecxz
sbb
cmpsb
test
mov
xchg
ret
and
mov
inc
adcb
inc
or
sar
rolb
repnz
fdivs
add
adc
push
adc
cli
outsl
pop
insb
xchg
les
cmp
jl
jnp
das
mov
mov
xchg
jbe
mov
push
mov
ficomps
jnp
jne
xchg
decb
adc
mov
jmp
pop
loopne
mov
ret
xchg
sub
out
sti
ret
mov
fsubs
cltd
add
cmpsb
xor
mov
pop
push
sarb
mov
pop
mul
cmp
fisubs
add
mov
scas
cmp
or
test
outsl
cld
jle
xlat
sbb
fucom
mov
jo
loopne
inc
adc
shlb
outsb
loop
xor
inc
mov
adc
stos
push
cmp
loop
dec
or
inc
jne
loope
or
mov
lcall
jbe
leave
adc
jle
add
insl
jnp
pop
ss
or
pop
pop
xor
dec
test
repz
adc
mov
ljmp
movsl
push
sub
das
fwait
test
add
outsb
fists
cmp
add
dec
jle
into
fcoml
out
ret
inc
shlb
pop
and
ret
iret
dec
lea
sub
adc
add
push
lock
mov
jl
cmp
pop
mov
loop
stos
inc
popa
pop
sbb
sbb
sub
mov
addl
jl
sbb
mov
add
fbld
in
data16
pop
push
fimull
jp
jecxz
arpl
push
or
xchg
negb
aad
aam
sub
inc
sub
pop
loopne
ds
out
or
dec
xor
mov
mov
jo
sub
adc
lods
adc
int
pushf
jecxz
jno
stos
cwtl
mov
add
jge
jl
mov
ds
sub
test
or
add
mov
cmp
adc
dec
add
shll
pop
xchg
adc
push
movsb
stos
adc
xchg
pusha
jns
orl
test
and
imul
dec
pmullw
fisubl
in
sti
cmp
clc
insl
push
xor
aad
mov
scas
movsl
out
jle
adc
and
pop
fs
or
int
sub
mov
es
jl
test
pushl
adc
mov
repnz
mov
mov
jg
nop
in
cmpsb
loopne
mov
push
jo
filds
sti
or
push
mov
decb
idiv
lea
nop
or
roll
mov
sti
leave
mov
aam
loop
xchg
mov
xorb
mov
push
bound
or
je
mov
lock
jl
sub
jge
loopne
adc
loop
stos
sbb
insb
sbb
ss
adc
rolb
data16
rcrl
je
dec
xor
mov
pop
js
mov
sti
sbb
dec
pop
test
lret
inc
sbb
out
mov
call
add
xor
mov
push
loop
or
inc
in
int
pop
xchg
clc
outsl
ret
jl
das
xchg
sti
inc
dec
mov
in
rorb
dec
ja
sbb
fcomip
negl
icebp
scas
pop
outsb
scas
push
mov
dec
sub
or
add
imul
popa
xor
mov
pop
shrl
in
fists
jns
mov
add
xchg
push
push
mov
mov
movsb
in
les
mov
andl
in
popa
sub
mov
adc
xchg
mov
cmp
sub
arpl
jns
add
cmp
loop
xlat
sahf
adc
imul
mov
data16
or
test
sahf
mov
aaa
lods
cwtl
aaa
pop
jmp
cmpl
mov
xor
addl
mov
mov
push
testb
dec
mov
mov
ficoms
leave
pop
sti
fildll
loope
std
xor
loopne
stos
pop
insb
dec
or
push
push
mov
fnstcw
jbe
data16
adc
jle
cmp
xor
sub
aaa
rorb
xchg
sbb
js,pt
sub
dec
adc
jl
jg
cmp
sbb
push
repz
add
push
push
xorb
rcl
repz
int
dec
ret
or
test
lret
jg
lret
scas
lock
ret
sbb
mov
dec
fildll
push
fwait
cmpsb
fldln2
cld
and
push
rcll
popf
xlat
dec
push
mov
push
adc
jg
push
lds
cli
mov
leave
jp
mov
sbb
and
cwtl
mov
fnstenv
push
mov
repnz
or
imul
sbb
cmp
ja
push
data16
mov
dec
pop
dec
clc
xchg
add
pop
xlat
jle
test
xchg
sub
imul
mov
mov
sarl
dec
jae
test
inc
es
out
mov
push
dec
inc
push
jnp
sbb
fwait
mov
nop
lret
dec
lods
dec
ljmp
dec
aam
cmc
adc
fistps
scas
loop
push
sbb
xor
fisttpl
enter
loopne
or
add
mov
inc
test
and
test
push
add
inc
jl
cli
mov
fisttps
or
push
sub
sbb
mov
and
aam
fcmovnu
mov
push
clc
or
inc
mov
outsb
loope
in
in
mov
mov
ljmp
jbe
and
jg
fcmovb
adc
sbb
cmp
adc
adc
mov
pushl
imul
add
and
push
into
cmp
outsl
mov
rol
stc
mov
fs
fdivrs
adc
mov
mov
xor
inc
mov
pop
add
pop
xor
xor
push
test
sub
fistpll
scas
or
xor
cmp
cwtl
push
outsl
jae
lret
pushl
pop
cmp
lcall
outsb
inc
pop
out
xchg
add
lahf
dec
mov
push
jno
aaa
fidivs
add
xor
inc
pop
es
mov
sub
test
push
inc
pop
cmp
mov
jnp
pop
sbb
sbbb
mulb
mov
mov
out
inc
rcrb
clc
or
pop
loope
bound
push
push
jmp
movsl
xchg
test
add
lcall
xchg
loop
add
xlat
push
aaa
test
jp
ss
pop
inc
push
push
push
or
ss
inc
and
in
and
imul
mov
gs
ds
ret
out
aas
jo
pop
ret
cmp
movd
xor
fidivl
pop
ficomps
sar
pop
addl
mov
bound
pushf
lods
xchg
sub
mov
mov
add
pop
pop
pusha
enter
pop
shlb
mov
outsl
mov
arpl
mov
es
pop
out
jg
sbb
roll
ja
or
lods
mov
xchg
mov
mov
fidivl
pop
lock
inc
jecxz
hlt
xchg
lgs
out
shll
int3
dec
mov
pop
pusha
mov
xor
test
mov
pop
out
dec
das
cwtl
mov
ror
jbe
lods
xor
ret
test
jns
and
mov
sub
rcrl
pop
mov
pop
jg
sbb
test
jle
insb
movsl
cmp
dec
xchg
or
orb
lock
sarl
xor
mov
cmp
mov
das
cmp
push
pop
mov
sbb
dec
lods
jmp
test
loop
cmpsl
loopne
or
jbe
or
xchg
ja
dec
std
incl
inc
stos
mov
fsubrs
inc
call
or
les
cmp
jnp
xchg
pop
ljmp
jmp
ret
inc
insl
shr
xor
arpl
shl
mov
lods
cmp
add
repz
sbb
insl
adc
addl
xor
or
xchg
mov
or
cs
orl
add
sar
mov
stos
mov
mov
mov
mov
push
into
lahf
pop
std
jge
out
ss
test
insb
test
mov
mov
popf
inc
mov
jmp
lds
inc
mov
stos
sub
test
aas
daa
sub
cwtl
repz
inc
arpl
gs
mov
mov
add
lds
inc
xor
or
fwait
jbe
sub
and
sbb
inc
es
pop
jg
sub
and
sbb
aaa
dec
pop
hlt
mov
lea
cmpsb
ror
daa
dec
cmp
jno
pop
xchg
push
xchg
dec
lds
sub
insl
xor
in
xchg
hlt
mov
stos
pop
mov
add
mov
mov
dec
cltd
loope
or
aaa
hlt
add
shlb
inc
pop
ds
lret
js
sbb
sub
and
inc
decb
pushf
dec
cmp
or
call
sbbb
mov
adc
xchg
add
fwait
mov
fsubr
cmp
push
or
dec
lock
inc
test
fdivrl
loop
hlt
cmc
in
mov
stc
lcall
lods
rorl
into
cmpsb
in
lahf
ja
test
push
push
jae
mov
stos
hlt
decl
mov
mov
mov
lret
rcr
dec
sbb
inc
xchg
sbb
mov
inc
sbb
leave
xorb
cld
push
cli
add
xlat
faddl
pop
jmp
mov
cmpsl
xchg
decl
sti
or
mov
push
and
jecxz
inc
sub
das
jl
shrb
add
and
pusha
ret
mov
mov
mov
mov
int3
cld
sbb
leave
mov
daa
mov
das
jl
xchg
pushf
sub
outsb
lods
nop
and
and
daa
xchg
jne
xor
sub
cld
aaa
js
sarl
jnp
pop
daa
push
sub
pop
ficompl
movsl
pop
stos
mov
pop
stos
add
fucomi
pop
mov
lahf
and
push
jecxz
and
sbb
mov
sbb
movsl
inc
cmpsb
ficomps
in
dec
mov
ficoms
clc
pop
test
and
movsl
out
outsb
cmp
pop
add
std
mov
adc
xchg
mov
push
mov
popf
clc
inc
dec
lea
in
mov
scas
mov
mov
pushf
mov
mov
xor
leave
je
cmp
adc
scas
outsb
insl
jmp
xor
pop
fisttps
movl
pop
mov
jle
jp
pop
xor
popf
cli
hlt
jge
jbe
push
test
cmp
jnp
cmpsl
mov
mov
xchg
and
mov
inc
or
pop
pushf
popf
mov
decb
adc
adc
mov
and
push
add
mov
and
test
fndisi(8087
cmpsb
clc
shr
ljmp
add
sahf
push
daa
popa
jns
mov
mov
call
lods
jae
mov
bound
mov
enter
cli
jecxz
mov
in
sub
add
roll
cs
outsl
or
xchg
add
mov
mov
xchg
popf
xlat
aas
fists
imulb
insb
nop
jns
add
pop
mov
push
mov
sub
cmp
cmp
jg
cmp
popa
mov
jp
out
roll
stc
push
jecxz
sub
xchg
pop
in
test
dec
iret
shrl
sbb
cmpsl
lea
lahf
icebp
xchg
divl
mov
sahf
and
ja
adc
xor
mov
xor
mov
inc
pop
sub
outsb
cld
popa
dec
or
xchg
shlb
outsl
cmp
push
push
lods
push
xor
and
xchg
inc
dec
dec
sbb
mov
loop
dec
xchg
cmp
ja
sbbl
sahf
les
scas
adc
jmp
sarb
fmul
pushf
fisubrl
into
push
inc
cmp
loope
hlt
popf
cmpsb
jno
push
lcall
jle
out
imulb
je
add
sti
and
or
jnp
mov
add
out
sarl
cltd
decb
jmp
and
out
call
xchg
sub
mov
jecxz
mov
test
sbb
cmp
arpl
jbe
das
xchg
movsb
enter
mov
dec
daa
sbbl
push
mov
mov
push
nop
mov
lea
loop
in
loop
add
cmpb
push
mov
insb
push
test
mov
icebp
jno
scas
sbb
cld
sub
mov
pop
popf
insb
inc
movsl
incb
outsb
notl
mov
fildll
xor
in
jo
clc
lahf
cli
pop
shll
xorb
sbb
jns
push
cmc
add
mov
push
xor
ds
lcall
push
cli
aad
push
pop
xchg
push
arpl
pop
adc
dec
push
lret
adc
pop
je
testl
jle
sbb
cmc
jnp
sar
jg
out
imul
inc
pusha
mov
xor
das
ret
mov
sbb
and
mov
xor
loopne
je
dec
inc
add
xchg
mov
xchg
lock
fstp
xchg
mov
mov
jno
pop
lods
lods
bound
pusha
pop
dec
push
push
aaa
loop
cmp
lret
cmp
cwtl
jg
pop
jl
movsb
or
mov
xor
inc
push
mov
add
psubusb
push
fbld
js
and
and
adc
sti
cmp
bound
cmp
iret
lods
out
mov
in
imul
outsl
xor
xor
leave
xchg
mov
mov
xchg
lods
ret
jae
daa
push
js
test
ds
ret
dec
repnz
mov
push
dec
cmp
inc
mov
pop
or
fists
pop
das
xchg
adc
shll
inc
outsl
bound
mov
add
adc
das
std
jno
inc
adc
fists
sbb
popf
jmp
add
negb
mov
movsl
enter
push
mov
lcall
dec
loopne
lea
arpl
mov
push
test
push
push
mov
mov
mov
sub
add
xchg
sahf
fildl
in
fwait
outsl
int3
decb
cs
mov
mov
lcall
mov
push
pop
sti
mov
pop
lcall
jecxz
xchg
jnp
daa
add
xchg
hlt
das
insb
lock
call
outsb
leave
dec
ds
cmpsl
outsl
jecxz
push
or
ds
and
or
add
loope
ja
mov
jecxz
in
sub
mov
mov
js
jae
dec
shlb
dec
popf
adc
mov
outsl
mov
dec
or
addr16
push
inc
gs
mov
pop
xchg
rol
mov
mov
inc
or
push
dec
popf
lods
and
mov
out
dec
cmp
lds
xchg
or
cmc
xchg
xchg
or
mov
adc
xchg
imul
das
dec
cmc
roll
cwtl
pushf
fs
nop
mov
dec
insl
inc
mov
adc
or
mov
adc
fmuls
outsb
mov
add
pusha
pop
stos
or
dec
mov
je
push
icebp
lods
and
cmpl
mov
cmc
jb
int3
jg
jge
test
cmpsb
mov
stos
cwtl
rolb
xor
inc
fld
daa
js
jl
mov
clc
lea
jae
or
imul
lods
jp
pop
cmp
push
jecxz
adc
adc
lock
std
ret
icebp
and
es
mov
push
cmp
xor
sbbb
pop
mov
mov
ja
cmp
sub
hlt
or
jnp
mov
sub
mov
sbb
pop
xchg
xchg
int3
ss
imul
cld
jle
add
jg
js
aam
stc
mov
adc
out
lahf
shrb
mov
aad
cmp
cmp
jae
dec
mov
mov
jo
xchg
arpl
sbb
inc
xrstors
mov
and
or
js
push
cmc
sarl
movsl
cmc
mov
mov
scas
jno
js
out
adc
call
les
sub
daa
and
orb
aaa
cli
adc
add
sahf
and
mov
mov
pop
mov
aaa
cli
dec
mov
mov
sbb
lea
maskmovq
fistps
mov
push
mov
push
mov
cmp
lods
xor
lds
dec
push
call
adc
insl
push
cld
add
sbb
inc
lcall
pop
mov
lea
and
pop
inc
cmpsl
loopne
push
fistl
outsl
adc
test
les
mov
mov
xor
fcmove
imul
mov
sub
sbb
jns
enter
mov
pop
xchg
ss
movsb
and
pop
or
sub
inc
dec
inc
and
or
dec
inc
insb
xchg
mov
ret
inc
repnz
cmp
mov
adc
xor
cmpsb
xor
cld
stc
filds
jg
sub
cmp
inc
pop
jg
mov
cs
lock
lods
jmp
shlb
add
call
or
lret
push
mov
dec
shrl
std
mov
negb
xchg
dec
loope
add
adc
std
fsubrl
loopne
ljmp
push
fidivs
push
dec
and
mov
lahf
push
adc
fs
mov
out
mov
dec
jg
jecxz
sbb
lea
arpl
cmp
shl
dec
mov
mov
mov
xor
lods
inc
pop
jbe
icebp
inc
sub
js
mov
adc
jo
xor
mov
test
mov
stc
sub
xor
out
sbb
mov
cmp
push
ret
inc
pop
or
ljmp
pop
xor
idivl
pop
popa
cmpsb
stos
sbb
pop
mov
xor
sub
dec
inc
call
cmpsl
sub
popf
and
outsl
insl
out
and
orl
adc
xor
mov
out
adc
xchg
ret
xorb
or
outsl
dec
pop
and
scas
push
adc
sbb
xchg
xchg
lds
imul
mov
add
adc
and
sub
pop
mov
inc
inc
and
dec
out
imul
and
stc
adc
shll
out
xor
cwtl
fs
push
xor
jge
imul
or
insl
push
cmpsb
and
cmp
in
ljmp
jmp
test
adc
pop
ret
inc
cs
fdivrp
aaa
and
cwtl
inc
movsl
pop
xchg
cmp
cmpsl
movsl
xor
insl
lcall
xor
xchg
sbb
sub
stos
jmp
xchg
fisubl
inc
jns
das
jge
sti
mov
icebp
cmpsb
fsubp
dec
pop
adc
add
pop
xchg
hlt
or
push
stc
push
cmpsb
rcl
aaa
mov
lea
es
lea
fwait
into
jne
jmp
in
xchg
dec
clc
fistpl
mov
pop
std
pop
es
pop
jecxz
mov
jmp
shlb
nop
and
jne
add
sbb
dec
in
cmpsb
fmuls
mov
pop
jne
std
es
pushl
jno
subb
nop
lea
lcall
inc
jae
loopne
vmovq
bound
pop
pop
cmpsb
jnp
jg
in
mov
test
divb
popa
and
lods
sub
scas
out
sub
mov
mov
enter
sbb
aas
inc
negl
mov
std
stos
outsb
insb
aas
jecxz
mov
dec
mov
outsl
xor
mov
xchg
lahf
inc
data16
inc
jo
bound
lcall
inc
icebp
sub
mov
xchg
in
and
inc
test
enter
sti
imul
js
pop
push
sbb
add
pop
pop
xor
inc
inc
or
lods
mov
out
pop
add
xchg
inc
sub
outsl
and
xchg
xchg
cwtl
push
lcall
mov
cmp
sbb
cmp
lret
sbb
call
dec
or
mov
test
cmpsb
xor
cmc
outsl
dec
test
mov
xor
cli
pop
and
push
fiaddl
das
add
loope
jp
mov
roll
sbb
sbb
jmp
xchg
push
pop
mov
inc
sub
inc
cld
imulb
push
movsl
mov
xlat
pop
cmp
icebp
popf
ljmp
lods
or
lds
imul
mov
mov
dec
mov
icebp
aad
test
inc
add
or
or
test
mov
push
add
inc
leave
xlat
ljmp
incb
or
add
xchg
push
lcall
test
add
les
std
ret
roll
inc
xchg
icebp
push
cmp
movb
push
xorb
jl
aad
pop
cli
push
inc
icebp
lcall
lds
subl
pop
mov
adcl
fisubl
and
xchg
inc
outsl
mov
mov
sbbb
pop
push
xor
sarl
shlb
dec
mov
inc
imul
or
shrb
aaa
clc
push
or
loope
or
pop
arpl
cmc
idiv
addr16
push
movsb
sbb
inc
aad
mov
sub
movl
into
pop
lret
int3
lret
andb
int3
jmp
and
fcomi
std
and
cld
notb
imul
aaa
rol
insb
mov
out
into
ds
in
jl
adc
shlb
mov
lock
mov
loope
lock
mov
mov
dec
shlb
loop
das
cmpb
bound
mov
nop
aam
idiv
jg
mov
or
adcb
xor
cs
sti
not
incb
fs
icebp
mov
push
aam
push
sar
mov
inc
stos
xchg
loopne
push
ss
or
xlat
push
mov
inc
sub
xor
sbb
stc
lods
add
mov
adc
clc
lods
jp
je
lods
mov
rcll
dec
fucomip
in
add
mov
out
outsl
pop
sbb
adc
xchg
cmp
mov
pop
xchg
sub
mov
mov
add
scas
dec
loope
jnp
sub
mov
nop
fistpll
jl
push
jns
add
fbstp
dec
cmpsl
test
jg
loop,pn
jg
mov
das
inc
jp
mov
mov
mov
xor
lahf
je
outsl
loop
into
stos
xor
dec
adc
cli
pop
pop
js
pop
mov
ds
lods
outsw
adc
pushl
cmpsl
jle
inc
lret
push
lods
gs
cli
repnz
sti
pop
cli
test
mov
sahf
and
cmpsl
jbe
inc
mov
or
mov
lahf
test
mov
xchg
decl
decl
push
mov
testb
mov
cwtl
pop
jne
and
leave
shrb
or
jo
adc
or
fs
leave
jbe
mov
adc
popa
movsb
push
nop
repnz
xlat
in
clc
addl
sarl
shl
pop
xorb
into
int3
fwait
shld
test
mov
rcr
testl
mov
add
pushl
adc
xchg
out
bound
rcrl
mov
jnp
in
push
mov
xlat
in
or
xor
sbb
mov
mov
lret
into
and
sub
outsl
das
jecxz
xchg
pop
jmp
rorb
and
pop
hlt
call
lahf
add
cmp
inc
in
movsl
repz
shl
pusha
daa
xor
sbb
adc
inc
fucomi
mov
push
add
nop
adc
fcomip
pushl
outsb
inc
cld
dec
inc
adc
inc
test
ss
mov
orl
in
sub
pop
call
adc
ds
inc
pop
sbbl
cltd
lea
popa
pop
aaa
mov
pusha
out
mov
out
xorb
mov
jo
cmp
sub
sbbb
ljmp
cld
call
mov
push
push
cmp
loope
inc
push
pop
mov
shlb
js
sbb
inc
fbstp
stos
fidivs
push
dec
add
push
mov
icebp
xlat
pop
sub
mov
enter
sbb
test
fistpll
inc
xchg
sub
dec
and
adc
cmp
in
sub
cmp
mov
data16
adc
mov
inc
shrl
mov
dec
testb
in
mov
or
loopne
or
and
or
scas
xor
mov
das
jg
test
mov
sbb
xor
orl
clc
sbb
xor
daa
or
mov
repz
lock
jnp
push
dec
popa
inc
clc
scas
jo
inc
insl
call
aad
ljmp
das
xor
inc
inc
sbb
xor
aad
mov
pavgw
or
push
popa
in
pusha
imul
notb
jbe
mov
jo
int3
jmp
stos
pop
sub
dec
fs
cs
mov
mov
enter
ljmp
lods
xlat
add
or
push
fnsave
loopnew
jg
add
dec
mov
push
ljmp
stos
outsl
lods
xor
push
std
int
orl
sahf
push
mov
xchg
mov
aaa
inc
inc
cmp
andb
daa
mov
bound
ljmp
movsl
loopne
or
mov
push
scas
adc
pop
or
ffreep
mov
mov
mov
mov
mov
clc
push
sarl
mov
jns
inc
push
adc
sbb
cwtl
cmpsb
es
mov
add
jg
mov
cmc
xchg
push
mov
mov
rcl
into
adc
pop
pop
popf
xchg
jns
mov
int
ds
mov
add
pop
stos
mov
imul
pop
shrb
sbbb
das
rcr
leave
mov
ret
aam
and
enter
cli
icebp
js
xlat
jbe
insb
mov
mov
and
mov
sbbb
mov
xchg
mov
pop
xchg
cli
mov
mov
aad
adc
or
push
das
insl
clc
fbld
xchg
into
leave
popf
ret
xchg
loop
ljmp
aaa
dec
dec
leave
movsl
mov
clc
cmp
push
pop
xor
fbld
lock
lds
pop
or
mov
cmp
inc
lahf
orb
cmp
js
lcall
fsubrs
cmp
push
inc
mov
out
xor
popf
adc
mov
adc
stc
scas
xchg
xor
leave
rclb
or
loopne
incl
and
mov
jp
ret
push
loop
cmp
outsl
jl
dec
dec
pxor
lcall
push
fs
out
mov
insb
lret
leave
lods
lahf
pop
push
mov
arpl
in
pop
loop
inc
lds
rcl
inc
sbb
call
stos
out
insl
push
pop
push
or
and
lods
cld
movsl
js
add
xor
nop
les
stc
shlb
sbb
push
pop
shr
popf
loop
xchg
mov
subl
sti
xor
or
ret
fiadds
mov
pop
sbb
clc
jmp
ljmp
mov
adc
xchg
push
outsl
inc
adc
clc
mov
push
or
sub
push
mov
jnp
addl
ret
push
outsb
shr
lods
mov
adc
push
add
aam
jbe
lock
into
dec
xchg
pop
push
incb
or
inc
mov
push
pop
add
lock
push
mov
and
icebp
push
and
xor
lahf
leave
mov
or
or
mov
mov
mov
pop
push
int
in
and
xchg
inc
xchg
sbb
dec
push
jmp
xchg
js
pop
add
or
pop
arpl
ljmp
int
xchg
mov
or
int3
add
stos
and
inc
push
mov
and
aam
cmp
movb
ja
pop
adc
mov
and
jmp
cmp
mov
lea
mov
jo
outsl
insb
std
scas
psubusb
push
test
loope
andb
cmp
mov
add
push
push
call
adc
xor
add
inc
inc
jl
mov
popl
push
inc
jns
xchg
orb
inc
aaa
stc
inc
sbb
push
out
mov
das
pop
scas
mov
sub
nop
cmc
adc
test
sbb
into
or
sbbb
mov
mov
adc
sbb
mov
insb
pop
adc
insl
call
jne
push
imul
test
imul
sub
cmp
movsl
pop
push
xor
jecxz
adc
cmp
push
aas
lock
pop
and
ja
xor
cs
sub
xor
mov
sub
fcoml
jge
insl
cmp
sbbb
mov
loope
dec
andb
ds
mov
sub
lcall
pusha
push
test
and
aas
adc
fs
notl
jg
loope
add
fists
pop
iret
mov
cmp
shll
int3
lret
inc
dec
mov
adc
daa
jle
out
outsl
in
test
arpl
push
mov
add
test
inc
andb
and
out
aad
cmc
in
cmpsb
add
dec
pop
out
sbb
repnz
push
std
sbb
cmp
inc
pop
out
dec
loope
std
sti
lock
sub
es
mov
stos
stos
mov
test
mov
and
jb
dec
mov
mov
ljmp
outsl
push
jl
leave
xor
or
xchg
cmp
jmp
in
jle
push
loop
je
mov
xor
mov
aaa
orb
lret
xlat
inc
nop
sub
mov
mov
int3
test
mov
sbb
in
cmp
or
subl
gs
ljmp
sbb
adc
sti
sub
push
adc
aaa
rorl
cmc
mov
cli
jmp
inc
mov
push
in
pop
outsl
sub
mov
push
mov
cmp
sub
insb
cltd
cld
jae
push
aam
shll
mov
bound
or
jge
inc
fs
mov
sti
mov
xor
pop
outsb
jl
adc
lcall
push
mov
mov
mov
adc
insb
pop
test
or
call
loop
push
xor
call
ja
or
loop
mov
pop
aad
ljmp
ljmp
arpl
mov
out
xchg
add
or
flds
sub
cmc
mov
mov
fistps
jl
lcall
pop
cmpsb
inc
cmp
dec
pop
jmp
inc
xchg
mov
arpl
icebp
out
jge
add
or
cltd
rcll
cmc
cmpb
imul
cltd
test
add
cs
adc
inc
dec
mov
lret
add
fidivrl
jge
lret
lods
shll
xlat
sbb
sbb
scas
xchg
loopne
dec
das
cmpb
dec
and
adc
pop
adc
lods
jae
xchg
or
push
push
aam
cmc
pop
inc
lods
push
hlt
pushf
daa
ljmp
fnstsw
mov
add
je
lods
pop
xchg
add
loop
or
dec
xchg
or
mov
lea
mov
cmc
scas
push
add
jmp
xchg
lock
pop
mov
movsl
jecxz,pn
fs
inc
dec
pop
dec
imul
mov
jno
fcmovnu
xchg
jp
jne
test
xor
out
in
dec
fmull
mov
xchg
adc
int3
push
mov
sbb
gs
data16
imul
test
icebp
nop
inc
in
push
out
stos
daa
pop
xchg
cs
mov
imul
sbb
jmp
cmp
add
imul
xchg
cmp
test
insl
mov
inc
pop
loope
push
pop
loop
lea
popf
jns
or
adc
inc
dec
add
test
mov
rolb
adc
mov
or
cmp
jne
push
fistpll
sub
in
xor
xchg
dec
fsubs
inc
and
inc
in
mov
out
pop
inc
popa
pop
and
push
mov
syscall
xchg
pushl
outsl
mov
add
jl
lcall
mov
cmp
rolb
movsl
push
inc
jns
jmp
inc
insl
cmp
pop
mov
xchg
hlt
sbb
std
sbb
ds
adc
andl
sbb
loop
stc
fisttpll
loope
cbtw
xchg
shrl
std
fwait
mov
fsubs
mov
push
les
cmc
inc
mov
std
mov
roll
sub
addr16
sbb
popf
sbb
test
mov
outsl
xchg
lahf
scas
aam
jb
lcall
and
mov
cmp
out
js
jmp
push
inc
push
fcoms
fists
fcom
divb
daa
sbb
push
or
shll
fnsave
sbb
adcl
and
or
mov
insb
and
jne
lret
inc
outsb
adc
sti
sar
xchg
dec
mov
inc
and
ljmp
sbb
aaa
xchg
sub
mov
call
sub
push
out
mov
push
stos
outsb
xor
insl
push
push
xor
les
sbb
inc
add
push
or
popa
and
push
mov
jl
test
das
daa
jb
insl
add
mov
adc
mov
adc
jns
mov
lods
ret
inc
loope
inc
and
and
jl
jmp
xchg
sub
clc
dec
mov
push
push
cli
cmp
pop
push
dec
in
loopne
jmp
pushf
inc
push
push
mov
imul
dec
cmp
imul
push
mov
or
mov
push
inc
mov
bound
pop
std
and
xchg
outsl
aad
xchg
cmp
jp
loopne
ljmp
addb
inc
lock
test
fstpt
arpl
pop
ja
outsb
mov
outsb
sub
ret
jbe
adc
lahf
push
mov
xchg
pop
jg
js
cmpsl
mov
sub
mov
call
adc
add
fisubs
mov
gs
inc
or
sarb
cmp
arpl
adc
ss
or
dec
mov
jg
add
jecxz
cmc
cmp
out
sbb
jg
cld
jae
enter
ljmp
aaa
dec
call
ds
cmp
outsl
test
cs
xor
pop
shlb
add
inc
and
js
int3
in
jg
ljmp
fs
jbe
call
xor
insb
cwtl
icebp
std
pop
push
jmp
jg
pop
add
sbb
xor
jecxz
push
data16
ret
outsb
aad
mov
dec
lret
mov
aam
jo
jecxz
and
test
test
idivb
leave
mov
push
dec
push
imul
ljmp
mov
pop
jbe
xlat
icebp
pop
sub
dec
add
in
es
imul
mov
and
lds
fildll
dec
jb
lcall
cmp
insb
lods
pop
fdivr
or
xor
insl
daa
add
cmp
pop
decb
leave
lods
lea
mov
pop
jp
pop
mov
mov
jae
mov
xchg
or
sarb
xor
sbb
ret
jb
xchg
push
and
stos
popf
scas
mov
rorb
push
vphaddbq
mov
call
lods
shll
lods
in
sar
cltd
and
add
imul
jecxz
call
or
inc
adc
leave
and
ljmp
cli
jp
cmc
outsl
loop
scas
sub
mov
ss
sbb
sar
mov
cld
js
push
mov
fsubrl
insb
sbb
js
sub
inc
gs
sub
insb
pop
cmc
aam
pop
push
push
iret
add
mov
jbe
mov
xchg
test
mov
subl
ja
lahf
in
sbb
dec
pop
outsb
mov
or
mov
push
sub
outsl
sub
push
cmc
xchg
inc
cmp
fwait
jle
cmp
jne
xchg
xchg
sub
enter
mov
inc
ss
cmp
dec
mov
sahf
inc
mov
aaa
dec
pusha
jmp
fwait
pop
aad
push
push
add
fsts
je
incl
or
cmpsl
cli
xor
aam
rcr
sbb
loopne
icebp
js
movsb
dec
xchg
mov
insl
inc
test
jne
daa
fimuls
imul
subb
mov
aad
lcall
xchg
mov
pop
std
inc
loopne
lea
lret
out
cli
mov
lret
push
mov
adc
pop
and
fwait
in
cmp
sbb
xor
inc
dec
lcall
adc
dec
je
and
imul
repnz
sub
pop
outsb
int3
mov
out
inc
cmpsb
lcall
cmp
inc
repnz
jle
pop
es
arpl
das
mov
das
rcll
push
or
sbb
dec
inc
incl
sbb
or
and
loopne
sti
lcall
inc
sbb
mov
into
bnd
clc
aam
and
push
and
les
jae
xlat
or
lcall
sub
cmpsb
jns
negl
scas
jbe
mov
inc
in
test
sbb
pop
aad
out
daa
fimull
mov
in
inc
leave
cmp
xor
mov
mov
pop
pop
out
mov
iret
nop
mov
push
repz
xor
insb
add
icebp
int3
loope
loop
iret
push
fucom
shrb
push
push
add
bound
jp
std
sbb
mov
rorl
push
fistpll
lret
push
aad
lea
adc
mov
adc
lcall
xor
pop
mov
xor
jp
add
sub
les
mov
ficoms
jmp
fisttpll
and
jecxz
pushl
adc
xchg
inc
sbb
mov
ss
lds
add
cli
rcll
lods
ja
popa
sbb
or
or
sbb
jnp
pop
jne
inc
inc
jmp
lret
sbb
sbb
testl
cmp
int3
mov
imul
cltd
ss
dec
sbb
xchg
aas
push
subb
fisttps
push
fnsave
fwait
pushf
ljmp
jmp
inc
out
mov
scas
add
xchg
and
inc
ljmp
add
fsubs
cmc
ja
into
cmp
jae
and
daa
jmp
hlt
icebp
mov
orb
nop
aas
sbb
addb
ret
xchg
sub
je
dec
dec
or
aam
mov
lock
sbb
clc
and
stc
push
fadds
fisubl
repnz
pusha
adc
ljmp
fsub
push
outsb
and
pop
and
xchg
or
scas
imul
or
sbb
jmp
mov
adc
int
mov
out
adc
or
dec
pop
lret
iret
inc
inc
inc
jge
pushl
mov
nop
xor
mov
jno
sar
lahf
std
add
dec
xchg
and
adc
xchg
adc
insb
ret
jle
cmp
in
or
rcll
ds
ja
pop
out
addr16
fildll
outsb
stos
push
movsb
cmpsl
add
xchg
push
pop
lea
jmp
fcmovu
add
push
lahf
xchg
or
and
mov
imul
pop
imulb
and
dec
lcall
jle
push
hlt
inc
adc
push
lock
inc
mov
mov
sbb
das
adc
bound
in
mov
xchg
and
aas
cmp
out
pop
mov
add
add
sar
lds
xchg
adc
jmp
rcll
rorl
ljmp
fistpll
ss
sub
in
sbb
push
lret
xor
pop
mov
xor
mov
xchg
add
push
cmp
out
insl
sbb
push
sbb
jg
mov
mov
fwait
sub
cmp
xchg
push
add
sbb
push
pop
sbb
jae
mov
cs
and
push
sbb
outsl
mov
out
lcall
movsb
dec
dec
mov
pop
cli
mov
les
ds
ret
cmp
mov
imul
or
jecxz
xchg
shl
mov
lods
dec
pop
and
pop
fsubrl
pop
mov
pop
arpl
loopne
jl
xor
jns
ja
sarl
or
in
iret
and
loope
je
out
sbb
or
out
in
mov
ret
push
sub
js
int
lea
scas
cli
or
or
enter
mov
mov
jnp
sbb
sarl
push
add
mov
aam
jp
shlb
jo
pop
cmp
cmp
popf
mov
sub
xchg
cs
fists
cltd
mov
data16
inc
out
outsl
lea
test
dec
in
fdivr
xchg
mov
dec
leave
lcall
enter
xchg
mov
pushf
sbb
xchg
leave
inc
lea
inc
push
or
sbb
mov
push
pop
cli
ret
push
sbbb
cmp
jl
lea
mov
je
push
mov
mov
adc
loopne
lahf
es
mov
fidivs
sbb
data16
mov
add
cmp
sub
jl
sub
scas
lock
jo
pushf
or
sbb
insl
xor
cmp
shr
test
dec
std
push
enter
lods
aad
add
test
mov
movsb
lock
mov
add
popw
fdivp
inc
insb
push
in
xchg
dec
movsb
negb
cmp
rolb
sbb
int
mov
int3
mov
pop
pop
sahf
daa
jge
fisubl
loop
cmp
inc
lods
mov
test
mov
inc
mov
ret
test
repnz
sti
sbb
add
mov
cmp
clc
insl
mov
mov
ret
loopne
test
and
xchg
gs
xchg
ficoms
insl
jp
out
push
xchg
in
xor
and
nop
aad
aaa
cwtl
pop
xor
subb
repz
and
in
and
mov
add
enter
sbb
mov
nop
flds
sub
scas
loope
and
lret
iret
fs
xchg
mov
jl
cld
shl
inc
sub
cs
jge
xor
push
bound
pop
push
mov
into
xchg
cltd
push
scas
mov
sahf
sbb
dec
rol
icebp
jl
dec
pop
cld
movsl
and
push
pushl
push
dec
and
sub
pop
jecxz
or
call
mov
jo
ljmp
icebp
ss
inc
leave
cld
inc
shrb
cmp
sarl
sbb
push
lea
lcall
mov
sub
add
hlt
add
xchg
fisttpll
dec
push
out
jns
addb
or
pmovmskb
sub
std
jae
addl
add
cmp
stos
inc
xchg
out
fidivl
add
mov
mov
xor
mov
subl
mov
push
hlt
push
sub
dec
mov
xor
push
imul
stc
hlt
jmp
sub
mov
and
sub
cmp
gs
lcall
jg
or
cmp
push
subl
push
mov
or
fmulp
dec
lods
sub
sqrtps
inc
xchg
fcompl
js
and
xor
xor
insb
out
outsl
inc
cwtl
popa
stos
push
and
dec
mov
ja
outsb
inc
or
cld
push
jle
pop
aam
aad
or
pop
sahf
pop
pop
mov
xlat
lret
in
push
fs
pop
mov
push
mov
xor
push
xor
cmp
rcrb
outsb
jg
je
jp
mov
and
mov
add
jb
mov
pop
inc
adc
xchg
xor
in
fistps
cmp
negl
imul
das
pop
add
or
pop
lods
mov
pop
xchg
lds
xchg
sub
shlb
dec
cmpb
or
dec
and
xchg
cmp
mov
js
shr
sbb
rcr
jmp
scas
ljmp
inc
jnp
nop
pop
sahf
push
add
push
inc
cmp
mov
jmp
scas
fistps
mov
in
and
cmpsb
push
enter
fwait
aaa
cmp
aaa
aad
std
mov
gs
call
xchg
outsb
cli
loope
cmp
mov
mov
loope
hlt
out
in
ljmp
add
mov
sarb
test
test
mov
add
rcr
shll
jno
rorl
adc
sbb
adc
or
pop
adc
jecxz
cmp
mov
inc
hlt
sub
repz
rcrb
hlt
test
or
jp
jnp
sbb
loope
fisubl
fisubrl
push
mov
or
adcl
in
and
add
or
sbb
jno
ja
add
inc
push
jb
arpl
jno
sbb
jo
les
cmp
je
addr16
jmp
out
stc
mov
subb
mov
jg
inc
cltd
ss
in
jg
pop
push
xchg
fiadds
push
or
test
jbe
ljmp
cmp
sub
gs
xor
pushf
insl
xor
jae
lds
scas
xor
add
lock
push
sbb
mov
test
sub
ret
xorb
mov
jmp
pop
dec
fwait
loope
aaa
dec
push
push
movb
pop
jno
jne
loopne
add
outsb
pusha
inc
xor
js
push
sbb
out
inc
jg
mov
mov
mov
jg
stos
gs
imul
adc
mov
dec
mov
aas
xchg
inc
pop
cs
in
loope
popa
icebp
add
jo
pop
pop
mov
jmp
je
scas
lret
jmp
fcompl
data16
pop
lcall
add
movsb
or
or
mov
mov
mov
stos
mov
insb
std
movsl
mov
in
call
lea
popf
nop
cwtd
mov
fnstenv
xchg
mov
xchg
sti
add
add
mov
jecxz
fldl
jmp
and
mov
xchg
add
mov
addl
testb
movsl
jle
sbb
jno
aaa
call
or
jmp
test
rol
mov
iret
jmp
push
hlt
and
cmp
movsb
pop
push
jns,pt
mov
push
stos
stc
leave
push
and
fcmovbe
dec
cmp
lock
add
out
int
xor
pop
push
dec
rcll
cs
add
int
testb
mov
adc
jl
cmc
into
push
loop
jl
test
cmc
fldcw
adc
mov
xor
mov
cmp
mov
insb
mov
arpl
jp
imul
and
cld
adcl
mov
mov
mov
mov
out
dec
xchg
ja
dec
sbb
pushl
sbb
shrb
and
push
cmp
ja
sbb
repnz
inc
lcall
scas
jp
lret
movl
cmp
mov
mov
mov
js
outsl
hlt
adc
mov
pusha
jnp
ret
outsl
or
call
add
fsub
push
jne
lock
xchg
mov
pop
pop
out
or
lods
fnstenv
loope
pop
xor
xor
out
sub
inc
jecxz
xchg
cmp
lahf
sub
jp
jg
idivb
or
xor
aas
adc
xchg
call
in
negl
and
adc
test
scas
pop
jg
dec
mov
les
clc
mov
mov
gs
test
and
sub
cwtl
stc
out
jg
incl
loopne
nop
add
stc
dec
dec
xor
jecxz
add
call
aam
inc
jne
lret
call
loope
scas
adc
pop
rol
call
dec
iret
cltd
aaa
sub
inc
jnp
sbbb
sbb
mov
sahf
add
loopne
or
jno
xchg
adc
fs
mov
xlat
xchg
cmp
inc
adc
sbb
stos
pop
inc
pushf
iret
es
sbb
js
and
dec
sub
mov
push
pusha
push
xor
cld
fwait
in
and
mov
add
clc
pop
cmp
repz
ret
ds
iret
mov
adc
into
mov
rclb
adc
xor
stos
rcll
rcl
test
jmp
adc
ret
outsl
out
cmp
jge
cmpsb
nop/reserved
fwait
pop
or
shlb
pop
pop
pop
sbb
or
cmc
inc
inc
fwait
adc
fisttpll
jp
outsl
rorb
adc
adc
aas
mov
lock
fcmovnb
testl
test
aaa
sub
push
mov
inc
cmc
cmp
ljmp
mov
jno
fdivp
jae
pop
push
mov
adc
push
ss
sub
or
dec
push
bound
fs
push
fildll
xor
daa
movsl
inc
out
mov
push
cmc
mov
pop
lock
sbb
push
stc
mov
sub
xor
cs
aad
dec
outsl
dec
lea
xchg
push
lcall
cmc
or
xchg
mov
insl
adc
dec
mov
add
push
jp
mov
jne
aam
or
out
or
xlat
cs
inc
xor
mov
dec
icebp
js
xchg
loop
sub
cwtl
or
dec
xchg
or
adc
xchg
cmp
adc
xchg
jne
dec
xor
jo
lock
mov
push
stc
add
cmp
and
aad
cmp
pop
rcrl
mov
push
stc
xchg
mov
test
insl
je
ret
jb
mov
clc
testb
rcll
jecxz
inc
call
ljmp
ja
fidivrs
mov
popa
test
stc
mov
mov
in
dec
flds
fsubp
mov
and
sahf
lds
lock
mov
fstps
lahf
mov
test
dec
sti
jns
or
push
sbb
jne
les
ljmp
lret
and
fnstsw
call
leave
push
or
push
lock
jae
and
fldenv
jmp
pop
mov
fbld
insb
shll
js
xor
jb
fisttps
pop
call
roll
incl
loop
and
adc
stc
jo
xchg
mov
inc
hlt
lcall
inc
jb
xor
pop
mov
ds
sbb
add
dec
dec
xchg
mov
inc
sbb
cld
xor
movsl
sahf
cmp
mov
cmpsb
addb
mov
fbld
adc
xchg
xchg
imul
push
jmp
imul
xchg
and
dec
xchg
js
cld
mov
adc
gs
cmp
ja
pop
mov
mov
push
imul
mov
mov
xor
adc
add
jne
jmp
or
mov
shrl
lds
push
cmp
xchg
cmp
mov
aam
hlt
push
out
test
inc
outsl
subb
hlt
mov
sti
dec
pop
std
filds
lcall
xlat
push
inc
jmp
jmp
loop
test
xchg
and
bnd
ja
test
push
leave
hlt
add
fdiv
xor
inc
or
xlat
aas
in
out
sub
int3
inc
clc
imul
fcmovb
jns
sbb
mov
cs
out
push
inc
xlat
clc
pop
jbe
cli
outsl
pop
sbb
push
out
ds
es
pop
fsubs
fsts
std
loopne
mov
loope
adc
das
jl
push
pusha
aas
sub
lcall
pop
mov
enter
or
mov
dec
repnz
adc
loope
add
mov
dec
nop
into
push
sbbb
mov
loope
mov
mov
test
fmuls
xchg
je
push
outsl
bound
roll
lret
xchg
and
xchg
in
and
xchg
out
push
inc
in
fdivrs
std
ucomiss
and
mov
jb
sbb
dec
inc
xor
add
mov
add
add
es
fsubrl
jne
decl
int3
sub
jmp
cs
fnsave
xchg
dec
leave
pushl
sub
dec
push
lret
into
ljmp
sahf
ret
je
dec
or
call
test
sbb
lahf
ljmp
pusha
sbb
mov
test
in
xor
push
sub
and
popf
out
mov
icebp
mov
push
jge
pop
mov
cmp
fwait
pop
fildl
inc
int
movsl
jno
repnz
jno
sbb
rorb
inc
test
decl
shll
dec
adc
ret
js
imul
adc
push
mov
xchg
push
dec
ret
rclb
and
icebp
lahf
dec
arpl
stos
sub
orl
dec
jne
outsl
je
pop
xor
cmpsb
test
or
inc
pop
clc
pop
vmovmskps
call
xor
lods
push
cmc
test
dec
xor
or
fbstp
mov
xchg
jle
call
and
hlt
movsl
rolb
mov
mov
jge
rolb
mov
push
out
nop
push
lods
jecxz
inc
cmp
lods
outsl
scas
and
inc
lea
loope
cmpb
stc
mov
pop
xor
in
sub
xlat
cmpsl
push
xor
std
pop
lea
add
pop
adc
frstor
call
pop
fucom
dec
sbb
jns
xor
insl
lret
bound
mov
cli
dec
jl
dec
xchg
mov
adc
test
sub
outsl
push
icebp
ffreep
movsl
sbb
adc
fidivrs
xchg
inc
pop
lods
push
testl
push
adc
xchg
xchg
cmp
mov
or
sarl
jg
mov
mov
daa
mov
dec
cmp
or
pusha
jmp
fistpll
push
inc
repnz
dec
jp
push
mov
dec
push
and
cmp
add
ffreep
rcl
dec
pop
sub
sbb
std
fcmovne
and
scas
jge
dec
mov
jbe
data16
loop
movsl
lods
fadd
xchg
inc
mov
ffreep
adc
sub
mov
jl
loope
test
add
dec
mov
cmc
aam
loop
or
imul
gs
loope
ljmp
subb
xorb
add
cli
rorb
lock
aaa
push
loop
fcmovnu
mov
pusha
mov
jecxz
dec
out
dec
push
repnz
aad
or
ret
add
je
bound
pop
sbbl
mov
test
cltd
fidivl
aad
adc
pop
leave
shr
mov
shll
stc
icebp
loop
cs
jo
jle
addr16
cmp
outsl
aam
jmp
icebp
lcall
adc
mov
clc
inc
jp
arpl
or
mov
sbb
ss
fs
popf
gs
insb
mov
mov
shr
lock
sbb
sbb
cmpsb
mov
sub
xor
push
je
les
iret
fdivrl
sbb
add
mov
or
dec
jb
push
mov
je
pop
dec
lret
addb
jl
add
fdivrp
or
inc
jo
or
dec
mov
sbb
jmp
mov
jmp
xor
shll
add
jl
test
enter
fwait
stos
addb
jl
mov
ljmp
mov
fistl
mov
clc
andl
mov
idiv
jbe
or
loopne
and
jl
popa
xchg
add
fdivrl
xor
mov
scas
call
adc
lods
ds
stos
mov
mov
nop
cmp
icebp
add
pop
rcl
imul
sub
cmpsb
push
sbb
idivb
pop
adc
sub
insl
push
and
cmp
arpl
mov
lahf
sti
pop
ficoms
in
sbb
jecxz
sahf
mov
lock
sub
sub
pushl
sub
push
xor
pop
mov
lret
lds
inc
push
jmp
cld
jb
rcl
and
xor
xor
sti
adc
pop
xor
adc
mov
inc
outsl
outsl
pop
ljmp
cmc
inc
sti
sub
sbb
mov
das
xor
ffreep
and
mov
push
sub
pop
loopne
push
shl
pushf
outsb
and
icebp
into
iret
das
pop
cmpsb
loopne
add
inc
aas
das
daa
es
inc
imul
adc
aas
jecxz
aad
pop
or
lods
std
filds
into
mov
pop
inc
mov
movsb
mov
add
adc
mov
mov
aam
mov
lret
outsl
add
inc
push
mov
mov
dec
pop
mov
xchg
pop
fdivrs
push
lock
mov
aam
and
add
adc
jno
ret
popf
mov
cmp
mov
add
movsb
adc
dec
xchg
add
mov
add
sub
cli
rclb
add
dec
mull
mov
aaa
clc
dec
lret
dec
pop
arpl
mov
rcr
cmp
adc
jmp
mov
jno
lock
mov
cmpsb
imul
and
and
loop
dec
pop
pop
pop
jl
mov
clc
int
dec
scas
fiadds
mov
pop
jle
jne
mov
addr16
mov
ja
xor
lods
dec
fidivs
ret
out
mov
mov
test
jae
jb
push
adc
push
sub
or
add
lock
or
inc
cmp
aas
add
movsb
or
fcmovbe
mov
mov
jno
mov
adc
das
leave
sbb
xor
sub
jae
das
mov
ret
leave
fdiv
adc
inc
push
ret
je,pt
sti
mov
push
and
adc
ret
insl
movsb
adcb
lret
fistpll
jge
out
pop
lock
push
and
cwtl
add
fcmovnu
jnp
out
mov
mov
cmpsb
aaa
incb
and
lahf
mov
pop
or
inc
imul
test
ja
outsl
in
pop
or
popa
inc
sbb
mov
xor
push
push
dec
fbstp
lret
fdivrs
cmc
add
stc
add
sub
or
pop
jb
push
idiv
rcl
movsl
movsb
or
pop
pop
push
sub
es
mov
jecxz
shll
adc
icebp
pop
clc
es
sub
inc
imulb
arpl
sbb
dec
mov
fs
or
push
std
jbe
popf
outsl
mov
aam
mov
dec
test
lods
mov
call
es
in
jne
push
pop
in
adc
clc
jecxz
mov
pop
cltd
test
push
loope
or
jge
ss
push
mov
dec
or
mov
insl
fbld
rclb
mov
mov
imul
cmp
daa
lret
sbb
ds
cmpsb
mov
pop
jge
mov
lahf
or
inc
stc
incl
mov
je
jg
push
pushf
ljmp
and
push
outsl
mov
test
add
clc
aaa
clc
rolb
lcall
test
push
hlt
js
in
jmp
arpl
dec
daa
xor
mov
and
push
aaa
addr16
lret
mov
bound
mov
ja
add
bound
mov
dec
into
das
test
outsb
cli
adc
sbb
jle
subb
cli
jmp
fists
mov
inc
xor
mov
xchg
adc
lcall
les
adc
jns
cwtl
cltd
and
mov
inc
cmc
mov
mov
pop
dec
cwtl
push
adc
inc
inc
jg
sub
subb
pop
in
lahf
jg
in
pushl
dec
xor
enter
dec
xor
mov
xor
outsb
inc
mull
xchg
and
loopne
movsl
mov
adc
mov
movsb
movsl
or
mov
dec
adc
dec
ret
sarl
sbb
push
jae
cli
lods
hlt
mov
lcall
aaa
pop
push
mov
mov
insb
or
lahf
inc
xchg
fidivl
or
stos
sti
sbb
rol
ja
inc
mov
mov
sbb
enter
lret
and
stos
sti
push
mov
les
inc
outsb
pusha
test
mov
aam
inc
cld
pop
in
movsb
rolb
in
scas
mov
mov
mov
jg
mov
xchg
adc
bound
sub
pushf
xor
xor
lods
jmp
inc
cmpl
cld
pop
clc
aam
sbb
sbb
movsl
inc
inc
mov
ss
cli
dec
ds
inc
mov
fdivl
loope
jg
push
hlt
fbld
jbe
and
dec
or
sub
iret
dec
test
xchg
xchg
lcall
call
jecxz
filds
xorb
in
mov
and
sti
rcll
jo
push
aaa
sbb
test
out
mov
push
jnp
aaa
cmp
loope
jl
jmp
enter
call
push
mov
jg
cltd
ret
add
test
jne
loop
dec
fdivrl
fcmovne
cli
mov
test
vmulpd
lock
aas
mov
cmp
shlb
adc
imul
cltd
jbe
sbb
xor
mov
daa
and
dec
std
xchg
into
mov
and
bound
cmpb
xchg
pop
push
push
ja
das
mov
test
shlb
lea
jmp
xchg
xchg
test
inc
jnp
add
or
loope
add
sub
jnp
mov
mov
vmovlps
xchg
inc
bound
mov
xchg
flds
push
sub
mov
sbb
sub
pop
push
and
cmp
lahf
mov
and
push
sub
jg
sar
mov
sbb
pusha
or
and
jae
push
mov
in
push
pushl
es
add
loope
lret
leave
stos
inc
sub
movsb
or
fcoms
ljmp
mov
fildl
adc
push
in
xchg
adc
pop
clc
or
inc
inc
std
jnp
push
add
pop
fwait
jle
incb
int3
mov
xchg
scas
jp
gs
sub
imul
xchg
les
pop
push
pop
dec
xor
xchg
or
mov
scas
jmp
or
in
xchg
pop
idivb
dec
test
pop
pop
or
mov
and
cld
fdivl
call
mov
inc
cltd
jmp
repz
femms
sub
sub
iret
rclb
and
decl
push
and
movsb
mov
mov
out
mul
scas
aaa
test
jns
push
inc
repz
pop
loop
test
addr16
jecxz
adc
sub
ds
rolb
xchg
les
or
mov
mov
std
hlt
push
jnp
faddl
sub
clc
push
cld
dec
out
jmp
in
movsl
sbb
repnz
add
jl
and
sub
cs
mov
test
out
push
mov
cmpsb
insl
cmpw
and
imul
push
ja
pop
mov
cmpsb
ss
mov
lahf
add
ret
jb
xor
dec
mov
imulb
loop
pop
fistl
mov
sahf
pop
fcomi
repnz
cmp
cli
out
add
nop
or
das
sahf
push
inc
jmp
push
jae
cmp
addr16
cmpsb
push
xchg
push
ss
fistpll
in
sbbb
pop
es
das
into
ljmp
pop
test
push
jnp
and
call
mov
or
lds
cmp
es
in
sbb
inc
inc
jbe
stos
dec
push
frndint
mov
dec
pop
lock
sub
stc
sbb
mov
add
pop
xchg
cmc
sbb
in
lret
out
inc
jecxz
gs
push
sub
xchg
test
xchg
inc
mov
jle
push
out
inc
call
or
cmp
das
cld
or
xor
pop
mov
cmpsl
lods
mov
sahf
cld
mov
mov
or
clc
jge
cmp
inc
cld
aaa
add
mov
es
push
mov
outsb
mov
lods
enter
or
cmp
lret
xchg
les
les
jmp
xchg
push
adc
jl
push
fmul
jle
andl
cmp
or
pop
mov
jge
xchg
mov
inc
push
add
int
sbb
test
icebp
jae
scas
xchg
aaa
stos
mov
xchg
sub
push
outsl
jecxz
and
xchg
ds
inc
ds
xchg
adc
das
jno
and
vcvtdq2ps
call
adc
xor
sbb
mov
out
lea
or
xor
mov
adc
popa
cwtl
or
sti
push
push
rcll
jge
dec
sub
gs
xchg
jmp
cmc
das
outsl
add
mov
add
test
jmp
jne
add
and
jge
inc
push
adc
shl
sub
mov
adc
aaa
cmp
inc
fldl
sub
or
icebp
mov
sub
mov
or
cld
mov
test
sbb
push
pop
in
and
dec
mov
lods
lret
out
xor
dec
jecxz
sbb
dec
movsb
jl
mov
and
lahf
loop
lock
xor
or
or
push
mov
mov
dec
xorb
push
stos
xchg
outsb
xchg
jae
popf
cmc
xchg
lcall
loope
and
mov
fisttpll
jmp
pop
jge
test
lea
inc
add
in
scas
pop
and
ficompl
vsqrtps
cmp
adc
push
sbb
shrl
dec
es
addl
out
icebp
sub
cmpsb
inc
add
icebp
pop
mov
cmp
inc
ret
clc
push
pop
sbb
inc
xchg
fadd
jne
iret
and
pop
sbb
pop
and
mov
push
faddl
fldl
aam
cld
push
cmpb
dec
mov
testl
pushf
cmpsl
jle
jp
dec
scas
mov
ficoms
and
sub
gs
hlt
pop
and
fwait
mov
xchg
xchg
rorl
adc
sbb
xor
or
jmp
adc
mov
or
xor
xlat
inc
icebp
out
lods
or
cmp
fisttpll
dec
push
cwtl
aad
and
imull
push
lock
fs
decb
sarl
leave
fcoms
add
pop
add
notb
fdivs
lea
or
jno
mov
aas
stos
test
pop
mov
adc
inc
insl
insb
scas
jnp
std
je
cmp
inc
and
insl
xchg
data16
fwait
add
cmpsl
mov
jl
add
mov
or
sbb
movsb
mov
popa
out
jg
or
cmc
cmp
cmp
push
je
ljmp
cmp
push
pop
jmp
ljmp
inc
jo
adc
loop
xor
mov
push
pop
lcall
gs
mov
jle
adc
sbb
mov
push
jnp
mov
loopne
push
out
adc
outsb
lock
inc
ljmp
dec
sub
or
lods
push
push
dec
mov
xchg
inc
jmp
pop
or
push
cld
or
pusha
adc
shl
das
push
pop
dec
or
test
sub
dec
pushl
push
cmp
and
mov
or
outsb
pop
or
mov
xchg
push
push
pop
test
jnp
sbb
adc
cltd
pop
outsl
leave
pushf
in
out
add
sub
rclb
xorl
push
mov
out
addb
nop
pop
sub
adc
and
xchg
xorb
mov
adc
jno
inc
jge
lea
and
popa
enter
push
stc
xchg
inc
sub
stc
stc
movsb
mov
dec
in
jg
cli
pop
dec
add
gs
dec
or
into
inc
les
rcrb
insl
push
push
pop
pop
aaa
mov
cwtl
mov
rcrl
pop
fwait
push
pop
fiadds
pop
add
bound
std
aam
stos
lods
pop
scas
pop
push
adc
and
sub
into
imulb
lds
rcrl
ds
or
sub
xor
in
in
out
out
imul
lret
aaa
jmp
fldl
pusha
mov
in
fidivl
inc
add
sahf
and
jecxz
mov
cmpsl
mov
inc
faddl
jg
repnz
inc
sub
dec
jg
jb
xchg
jl
rcl
pop
pop
dec
pop
xor
sbb
mov
fldt
sub
push
jmp
inc
shll
push
mov
fmull
and
lret
out
pop
push
mov
mov
push
test
mov
ljmp
std
nop
add
iret
daa
pop
push
pop
clc
aaa
push
ja
xchg
nop
iret
dec
fisttpl
xor
aaa
js
mov
stc
cmp
aas
popa
call
js
lods
test
das
mov
or
mov
jle
mov
mov
mov
ljmp
rcll
loopne
test
and
sub
pop
dec
decb
je
call
or
sbb
cli
add
push
xor
mov
sub
movsl
std
stos
jnp
outsb
je
inc
mov
popa
cwtl
mov
jne
push
inc
stc
repz
dec
lahf
mov
and
enter
xchg
nop
add
mov
dec
xchg
shlb
andb
cmp
popa
jp
jne
test
push
push
pop
sub
xchg
xchg
mov
lock
ja
test
cmc
mov
sarl
cwtl
aaa
dec
mov
jmp
rcll
ja
dec
add
fwait
rcl
cmp
mov
shrb
fildll
outsb
inc
out
push
movl
loope
cs
cmp
out
and
mov
loopne
or
and
test
or
sub
test
cli
bnd
out
or
arpl
pop
mov
mov
sub
fstl
jmp
cmp
dec
push
incl
les
cmc
adc
es
pop
or
mov
cmp
enter
addr16
inc
xor
pushf
dec
aas
push
cltd
cmp
pop
mov
clc
pop
inc
add
mov
pusha
in
inc
into
jo
jge
mov
in
mov
mov
pushl
push
ret
cmpsl
push
jl
pop
fcompl
mov
sub
stos
xchg
jne
scas
sbbl
dec
stos
dec
outsb
push
mov
ljmp
cmp
ss
push
jle
pop
popl
testl
das
icebp
lcall
push
imul
cmpsl
add
sbb
inc
push
loopne
lcall
lcall
lret
mov
mov
out
loop
repnz
pushl
mov
add
repz
je
sbb
out
mov
incl
aas
into
jle
jecxz
mov
push
frstor
iret
bound
sti
lcall
sub
faddl
mov
enter
xor
push
pushl
cld
js
loope
hlt
sahf
loop
loop
mov
jmp
dec
fnstsw
lahf
dec
lret
pushl
cld
push
push
cmp
and
mov
hlt
in
aas
fucomi
cmpsl
movsl
call
leave
js
jg
sub
ss
and
out
push
xchg
xchg
push
call
call
popf
push
pop
xor
ja
mov
jmp
sub
ljmp
pop
lods
lret
jg
stos
insl
mov
in
mov
push
cmp
fwait
mov
ljmp
ljmp
daa
das
ficoml
push
inc
test
nop
or
jmp
pop
incl
movsl
imul
daa
aad
shrl
pop
sub
cmc
adc
lcall
ljmp
jle
test
stc
cmc
dec
sub
std
dec
scas
cmp
mov
mov
mov
xchg
cmpsb
cltd
int3
push
out
rol
cmp
pusha
aad
adc
call
xchg
sbb
jae
cltd
inc
cmp
xchg
push
sbb
js
xor
xchg
dec
out
jnp
push
pushw
dec
rcrb
mov
out
and
xorb
or
clc
daa
cmc
push
mov
leave
xor
scas
hlt
orb
decl
aaa
inc
loop
enter
push
ljmp
mov
jmp
lahf
in
xor
call
fwait
in
mov
cli
lea
ljmpw
movsb
insl
lods
xchg
dec
fidivrl
adc
adc
mov
push
cmp
or
sub
and
aaa
inc
sub
sbb
ljmp
pop
lods
jmp
lret
xchg
push
test
pop
jmp
xor
add
mov
mov
pop
cmpsl
xor
stc
test
push
ljmp
shl
out
cmpb
or
jp
test
neg
mov
jmp
ljmp
dec
push
dec
mov
cmp
mov
sub
sbb
aaa
jae
les
loop
sbb
mov
loop
mov
cltd
faddp
pop
pop
mov
dec
scas
aas
cld
pop
add
outsb
pop
adc
inc
mov
mov
ljmp
std
decl
pop
xlat
outsl
test
int3
pop
push
pop
clc
push
enter
pop
xor
push
rcll
mov
fsubrp
xchg
and
movsb
mov
inc
mov
xchg
outsl
add
scas
dec
cs
jno
lcall
fistl
pop
inc
mov
xchg
mov
dec
sti
orb
dec
xchg
enter
fwait
jecxz
ljmp
sbb
negb
sbb
adc
ss
jbe
jne
decl
push
mov
cmp
cmp
fistl
orl
incl
jmp
into
sub
ja
adc
mov
inc
call
es
test
rorb
fmull
cmp
push
mov
sbb
jmp
fucomip
popf
cli
jo
aad
push
sbb
lret
idiv
cmpsl
jg
xlat
lret
fistpll
sbb
or
test
dec
cmc
dec
pop
mov
lret
or
arpl
cmp
shl
loop
std
xlat
lods
fmul
fiadds
mov
insb
and
or
inc
xor
dec
mov
ljmp
sub
das
mov
fisubs
adc
cmp
incl
adc
gs
pop
cwtl
fistpll
xchg
adc
test
hlt
loopne
not
loope
fstl
jmp
sbb
push
jnp
pop
mov
add
mov
cwtl
or
jns
ljmp
ljmp
mov
mov
adc
icebp
ffree
lock
stc
add
lock
lds
into
dec
bound
mov
inc
mov
dec
jmp
push
testb
aam
std
dec
xlat
dec
pop
stc
sub
push
rcr
jae
sbbb
push
mov
lea
inc
dec
sbb
lods
mov
mov
add
lret
dec
addr16
mov
sbb
xlat
nop
hlt
jae
stc
inc
push
mov
std
bound
outsl
mov
pop
cld
or
dec
jns
xor
jo
pop
adc
inc
add
or
rcrl
les
popf
notl
push
call
adc
cld
rcrb
add
cmp
fsubp
nop
je,pt
repnz
push
pushf
jmp
cli
or
in
ficompl
bound
cmpsb
mov
jae
mov
decl
adc
ja
dec
mov
es
mov
inc
mov
movsl
adcb
and
add
lcall
fsubs
data16
push
sbb
outsb
sti
jge
xlat
jecxz
sub
popa
add
mov
and
pop
pop
pcmpgtw
lcall
mov
leave
andb
xor
adc
arpl
push
dec
call
out
popa
sub
fldt
mov
std
sub
pop
pop
into
pop
push
inc
shll
mov
out
push
aas
cmp
ss
sbb
inc
pushf
call
out
push
loope
jg
aaa
push
test
sub
xchg
insl
push
pop
sarb
ljmp
dec
jge
cwtl
mov
ds
mov
jae
fildl
or
inc
jns
shrb
push
jle
sti
call
mulb
and
out
pop
mov
or
aas
out
add
cmp
loop
popa
scas
int3
fists
fldcw
dec
aad
loopne
cmp
fwait
pop
adc
mov
mov
fldcw
adc
ror
xor
aad
jg
incl
imul
or
sub
out
jecxz
loopne
xor
lahf
mov
and
adc
int
push
mov
jp
sahf
mov
mov
loopne
ja
mov
jne
incl
mov
push
sbb
sbb
and
loopne
roll
loope
and
or
sar
inc
loop
xchg
enter
push
dec
pusha
mov
int3
hlt
xchg
popa
mov
xchg
mov
jg
sbb
mov
jmp
sahf
push
out
in
dec
jnp
and
dec
dec
std
mov
inc
pushf
push
xor
xchg
ljmp
lcall
jle
mov
test
test
decb
in
adc
testl
add
aam
jecxz
pusha
xchg
faddl
cs
xchg
mov
cmp
loop
xchg
mov
cli
and
ljmp
dec
test
cmp
test
idivb
decl
sbb
adc
shll
cli
in
lret
call
rcrl
inc
lock
dec
push
adcb
jl
mov
pop
xor
call
fdivr
movsb
push
xchg
pop
sub
xchg
mov
and
dec
push
adc
movsl
test
int3
sbb
iret
ficomps
outsl
mov
repz
pop
out
xchg
mov
ret
sub
enter
lret
xchg
cwtl
std
sbb
aaa
outsb
and
inc
outsl
inc
test
and
outsb
roll
push
lcall
jp
mov
inc
push
or
dec
push
jecxz
jl
cmovle
ficoml
orl
aaa
outsl
jmp
lods
xlat
push
sarl
lcall
pop
gs
imul
xor
lods
pushl
adc
fisttps
rcl
test
jmp
loop
shll
mov
fucomip
jg
sub
mov
out
fs
cmc
inc
hlt
rcrl
pop
or
repz
cld
das
icebp
xor
xor
cmc
stc
adc
jo
cmpsb
popa
mov
pop
loop
mov
loopne
mov
pop
or
sub
pop
enter
mov
incl
cmp
jns
cli
cmc
push
sbb
push
sub
ja
std
jg
lds
fst
ljmp
lock
lods
push
push
aam
addr16
aad
push
frstor
push
jmp
push
sbb
xor
pop
enter
cmpsb
adcl
xor
jne,pt
fists
rcrb
arpl
adc
es
mov
add
call
gs
fwait
arpl
cltd
idivl
pop
clc
sarb
pop
push
sbb
cmp
lock
pop
jmp
mov
mov
shlb
sbb
pop
add
xorb
mov
push
lods
dec
mov
hlt
inc
dec
sub
xchg
into
mov
or
test
call
mov
jl
ljmp
mov
mov
jno
insb
test
mov
enter
xchg
sub
call
pop
jmp
jb
int3
mov
cmp
int3
jae
cmp
or
jmp
mov
out
dec
sbb
dec
test
sub
fidivl
fs
or
add
cmp
push
push
cmp
dec
lret
fstpt
or
mov
imul
sbb
cmp
jno
jg
decl
mov
ret
cmp
rcrb
mov
jo
sahf
cmpsl
aam
ds
test
cld
mov
sahf
das
xor
xor
dec
mov
mov
out
push
fmull
loopne
les
jg
aas
jl
aaa
clc
mov
mov
outsl
scas
decb
fcmove
aas
in
mov
pop
aaa
or
mov
cmpsb
adc
inc
jmp
xchg
push
rol
pushl
cli
push
xchg
pop
mov
mov
sub
mov
lret
pop
jbe
call
call
sub
out
jl
test
push
bound
lret
dec
lea
mov
je
adc
xchg
adc
mov
lcall
out
cmp
add
mov
jmp
pop
orb
jg
dec
push
or
sahf
jp
rorb
push
mov
das
std
pop
cmp
repz
ss
sbb
mov
push
repnz
lret
jmp
mov
jecxz
sub
shll
jo
mov
jo
xchg
rcll
inc
hlt
xor
das
sarb
sub
ljmp
pop
incl
pop
cmpsl
cli
or
insl
sbb
xchg
outsb
addl
push
cld
mov
std
jmp
jns
lret
xor
in
aad
or
das
sti
cmpsb
jns
mov
mov
inc
test
jne
ljmp
data16
add
icebp
dec
inc
adc
mov
cli
aaa
jl
pop
rorb
loopne
loopne
test
sub
inc
rcrl
std
mov
test
xlat
xor
jmp
sub
sub
loop
clc
les
sahf
push
repnz
cli
lcall
pop
aad
mov
ret
pop
xchg
xchg
inc
incl
or
cmp
sbb
pop
ja
inc
cli
jge
inc
movb
sbb
mov
and
jae
outsl
rorb
into
test
mov
adc
ljmp
icebp
sub
movsb
pop
and
pop
lret
mov
inc
or
data16
mov
lcall
xor
xchg
adc
adc
dec
jp
push
clc
inc
daa
xorb
push
xor
and
push
sti
jl
dec
repz
mov
add
cs
mov
add
mov
push
insl
test
in
ljmp
add
add
sarl
mov
icebp
movsl
cli
cmpsl
in
jmp
sbb
nop
sub
gs
test
js
outsl
sbb
or
dec
ficoms
sahf
or
pop
xor
dec
push
jo
fwait
mov
jl
add
cmc
fwait
jge
loope
sti
dec
mov
outsl
jecxz
popf
fidivl
lret
icebp
dec
inc
loopne
shrl
and
je
lret
cmc
lret
mov
xor
call
lock
inc
sti
movsl
pushl
nop
xchg
ret
stos
lahf
mov
sub
pop
mov
ret
repz
enter
sbb
ret
dec
xchg
das
rcrb
xchg
lahf
pop
test
cmp
jg
xchg
mov
aam
sahf
sub
jnp
cs
pop
jle
decl
add
data16
ret
cmpsb
inc
pop
pop
cmp
and
push
das
outsl
es
sub
idiv
lcall
xchg
fistpll
sbb
data16
es
sbb
dec
movntq
ficoms
xor
jmp
in
adc
jnp
fnstsw
mov
cmpl
xor
icebp
push
fbld
shl
add
pop
and
addr16
push
shl
sub
in
mov
jecxz
cmc
stos
jns
cmp
popa
scas
sub
andb
adc
inc
stos
std
xchg
push
leave
jo
decl
rcll
sbb
xchg
loop
pop
ja
push
sti
bound
cmc
push
pop
imul
jmp
push
ret
les
lds
mov
mov
xchg
mov
hlt
stos
lods
push
incl
loopne
xchg
out
sbb
xorb
call
or
movsl
cmp
in
lods
hlt
test
sbb
pop
fcomip
ljmp
cld
pushf
sbb
stc
in
jmp
cmp
sbb
sub
add
in
xchg
xor
jmp
xor
into
push
ss
mov
call
mov
scas
rorb
adc
fcomps
adc
push
sub
mov
incl
insl
sahf
dec
incl
dec
jecxz
mov
test
aam
ljmp
inc
sbb
jo
or
fcoml
push
sub
fistps
lods
outsb
dec
xchg
imul
cld
cltd
sub
ja
xchg
nop
movsb
xchg
clc
xor
cs
jmp
mov
ss
pop
lock
rol
gs
mov
test
mov
or
lcall
out
mov
daa
push
jnp
loope
inc
in
in
jmp
push
in
sti
std
inc
xlat
andl
mov
bound
mov
jns
adc
incl
cwtl
mov
punpckhbw
incl
cmp
push
sub
loope
xchg
pop
imul
lcall
andb
mov
and
call
incl
mov
inc
mov
xor
jb
adc
in
outsl
lcall
das
cmp
lods
sbb
ss
mov
test
out
pop
push
mov
fisttpl
fwait
inc
mov
push
iret
adc
add
mov
mov
jle
je
popf
adc
call
fnstsw
push
mov
mov
inc
dec
and
ret
xchg
sti
mov
push
int
xchg
adc
lock
push
jg
cmc
rorb
aaa
push
sarb
xchg
xchg
sub
rorb
test
int
jns
sbb
push
and
mov
mov
jae
xchg
rcrb
pop
sbb
icebp
jmp
push
jmp
dec
idiv
enter
test
adc
cmpsl
lock
incl
jmp
sub
nop
sub
lods
daa
lods
mov
outsl
cld
call
sbb
push
lock
test
fmull
scas
fmuls
jl
cmp
in
push
lahf
adc
sbb
mov
mov
cmp
decl
and
movsb
inc
xchg
hlt
sub
adc
cltd
cli
adc
inc
or
std
inc
in
mov
outsl
and
mov
push
xor
cli
outsl
lods
insl
jmp
pop
dec
iret
stc
icebp
in
inc
cwtl
jge
call
sub
jmp
add
add
mov
test
adc
dec
rcll
loop
js
push
fmul
sub
inc
mov
std
lcall
aas
mov
or
mov
inc
push
decl
sub
lods
inc
std
adc
and
loope
dec
add
decl
push
sti
sarb
lahf
flds
pop
enter
pop
orl
fidivs
lods
cmp
cld
jmp
cmp
popa
pop
mov
mov
or
adc
push
fsts
icebp
mov
push
push
xchg
cld
jb
imul
icebp
loopne
jb
das
cld
jmp
pop
je
fsts
arpl
jo
jle
call
shll
in
mov
jae
in
hlt
repz
hlt
roll
incl
test
inc
shlb
test
xchg
adc
dec
adcl
push
sub
outsl
mov
pop
mov
cld
jo
pusha
xor
mov
imul
inc
sbb
jl
imul
aas
dec
data16
les
outsl
and
fwait
in
sub
sbbl
inc
jno
xchg
pop
inc
adc
std
incl
scas
stos
out
mov
loopne
mov
call
insb
jl
sub
in
sub
xchg
pushf
imul
mov
scas
ss
inc
jge
xor
push
scas
cwtl
adc
inc
jb
jns
push
dec
call
push
sub
or
add
jecxz
ss
jmp
dec
cmp
lock
cmc
mov
jg
jae
mov
cmp
and
pop
adc
mov
jle
and
push
mov
cmp
jo
mov
insb
sbb
addr16
push
push
lock
mov
xchg
cmc
lret
ljmp
decl
xchg
mov
pop
pop
mov
pop
les
cmpsb
loop
mov
lds
cmpsb
xchg
inc
in
cs
sahf
jb
xchg
pop
sbb
pop
and
pop
dec
add
cmp
jno
cmp
cli
rcrb
or
loope
mov
mov
mov
ljmp
clc
frstor
cmpsl
in
daa
call
dec
in
and
mov
sbb
dec
leave
or
leave
ja
jo
int
hlt
push
call
pop
pop
lods
rcl
add
mov
lret
femms
aas
vpslld
popf
stc
and
cmp
std
jg
push
data16
mull
pop
pop
lods
mov
jg
shr
cmc
pop
mov
ljmp
push
fdivs
inc
adc
mov
mov
incb
mov
orl
decl
icebp
xor
xchg
dec
jne
mov
cmp
sbb
shll
outsl
inc
ror
and
fdivrp
inc
iret
rcr
ljmp
fcompl
nop
mov
inc
pop
jo
push
push
inc
jge
inc
into
mov
and
sub
pusha
and
call
jg
mov
scas
xchg
outsl
loop
inc
xor
mov
mov
and
dec
cmp
jmp
fistl
gs
mov
mov
aam
xchg
sub
out
je
mov
mov
aas
jne
xor
fsubrs
pop
pop
add
push
and
cs
xchg
pop
mov
push
or
and
fs
inc
inc
xchg
aad
pop
lcall
cld
jg
ja
jle
js,pt
out
inc
sbb
inc
xlat
dec
cmp
or
jmp
push
cmp
pop
mov
hlt
sbb
cmp
testl
lret
add
rcl
pop
sbb
insl
xor
jmp
mov
sub
sbb
mov
dec
out
movsb
test
jne
aas
inc
xchg
pushl
jg
cmp
arpl
aaa
pushf
mov
mov
inc
inc
js
sub
imul
pop
push
xchg
test
xor
fistpl
cmpsb
or
jo
mov
in
jg
jg
pop
shll
and
xchg
push
insl
movsl
ret
mov
push
jl
lret
push
cmp
push
pop
mov
mov
sbb
jecxz
sub
push
pushl
mov
or
mov
mov
xchg
mov
pop
mov
fnstsw
lcall
cmp
imul
push
mov
jge
cmp
pop
jno
jp
aaa
add
add
shlb
cmpsl
or
and
jg
call
dec
xlat
dec
test
in
std
fwait
enter
adcb
ljmp
imul
dec
xlat
notl
xchg
jns
push
xor
sar
ljmp
ljmp
fucom
pop
fsub
push
test
jge
adc
lret
sbb
clc
mov
inc
popf
notl
aaa
or
inc
adc
movsl
jmp
movsb
adc
cmp
mov
stc
push
rcrl
jo
and
push
lret
popa
mov
icebp
xor
xor
mov
repnz
insb
and
lock
add
xchg
jb
pusha
aad
aaa
outsl
inc
sar
out
rol
pop
xchg
loop
jmp
movsl
das
jno
incl
popa
add
in
adc
js
outsb
dec
lcall
pushl
inc
and
insb
inc
pop
adc
jecxz
scas
sahf
fdivp
xchg
mov
rorl
jmp
lcall
cld
cmp
and
mov
call
ret
mov
fs
ljmp
test
xchg
paddw
fstl
push
sbb
test
mov
mov
push
clc
cmp
inc
call
insl
fimull
pushl
out
aas
ljmp
fsub
imulb
jp
pop
sbb
mov
mov
dec
ret
xorb
inc
clc
mov
cs
jb
inc
ljmp
push
cvtpi2ps
cmpl
add
mov
popa
ljmp
movsb
in
dec
jno
lds
js
mov
and
or
xlat
sbb
lods
pop
je
cli
sbb
push
das
movsl
gs
add
push
mov
out
out
movl
dec
dec
lods
lods
push
mov
push
jl
lds
testb
ljmp
and
inc
lcall
sub
faddl
cwtl
test
push
adc
inc
dec
loope
pop
xor
fimuls
mov
int3
cmpsb
fistl
sub
mov
mov
inc
lcall
ljmp
test
test
mov
lods
cmc
mov
xchg
sub
hlt
and
inc
ljmp
ficompl
lds
stc
sbb
sub
lea
int
sbbb
dec
lea
pushl
push
pop
ja
fs
or
mov
ret
repnz
je
stos
sar
jae
mov
jmp
ljmp
hlt
fistps
pop
fists
popl
jae
or
xor
ds
call
or
daa
fs
ljmp
jno
call
aaa
cli
call
and
std
cmp
movsl
shlb
xchg
dec
jg
xor
mov
jno
pusha
jnp
pushl
clc
mov
pop
ffreep
adc
daa
cwtl
repz
scas
and
and
fs
inc
das
decl
push
fmul
mov
jno
add
mov
dec
lret
outsl
jne
movsb
cli
andb
or
movsb
imul
inc
sti
push
adc
jecxz
out
rcrl
mov
call
jle
push
incl
lds
mov
sbb
stos
call
dec
xchg
xor
cld
and
shll
xor
aad
jno
xchg
jnp
mov
dec
in
xor
mov
adcb
jnp
mov
addr16
mov
subl
mov
push
dec
xchg
es
xor
jbe
mov
in
into
push
notb
lea
jle
lock
jmp
mov
sahf
mov
mov
pop
sbb
movsb
in
mov
pop
repz
mov
sbb
cltd
cs
xor
out
inc
aad
jg
test
push
cld
dec
insl
xor
jmp
inc
lods
lahf
mov
mov
push
pop
incl
jbe
and
pop
fcompl
pop
lret
mov
call
js
test
lsl
stos
xchg
aas
push
mov
cmpsl
push
lahf
shl
lock
sbb
add
lret
add
jg
xchg
nop
adc
xor
repnz
adc
xor
lods
ljmp
dec
jo
stos
aad
adc
cmp
add
movsb
ret
inc
test
push
loope
decl
arpl
and
inc
mov
mov
fdivs
jl
lret
jl
push
xchg
lret
mov
push
sbb
xchg
push
insb
je
fidivl
popf
inc
ljmp
sub
mov
jne
sub
mov
pop
movsb
inc
xchg
mov
call
jnp
gs
in
sbb
pop
ret
aad
ss
int
lds
pop
aad
jmp
clc
aam
ret
mov
jae
int3
cmp
call
popf
mov
arpl
jge
or
dec
cmp
je
cmp
push
cld
fistps
into
inc
xor
imul
mov
add
inc
mov
hlt
std
ljmp
mov
mov
sbbb
jne
fidivrs
jb
cmpsb
mov
int3
xchg
inc
push
jg
das
popa
mov
gs
mov
decl
cmp
inc
xor
pop
cmp
jecxz
xchg
ret
cli
sub
mov
cli
mov
adc
or
js
arpl
sahf
mov
mov
pop
rorl
negb
xor
mov
testl
mov
cld
scas
hlt
pop
jns
pusha
jmp
lret
adc
jae
rol
call
pop
or
xorl
sub
out
cld
push
xor
decl
gs
pop
fadds
jg
mov
inc
js
jne
out
hlt
hlt
push
sbb
lcall
cld
inc
inc
sbb
jge
pushf
in
ljmp
xor
fldcw
decl
sub
clc
scas
xor
push
cld
sub
xor
inc
push
mov
mov
or
inc
addb
sub
xchg
icebp
fwait
push
mov
dec
fwait
sarb
sub
lcall
add
xchg
in
jno
xchg
xor
lods
add
cmp
jp
out
cltd
mov
or
inc
iret
in
in
lods
xchg
bound
aam
lods
pop
imul
mov
xchg
pop
mov
inc
mov
aam
add
mov
sub
ss
hlt
and
xor
push
mov
jg
call
push
shlb
in
mov
inc
dec
inc
xchg
fisubrl
stos
stos
mov
adc
jecxz
fisubrs
mov
mov
push
rcll
jae
jmp
rorb
arpl
rcrb
pushl
cmpsb
icebp
cmp
sbb
mov
ret
fcomp
mov
lods
mov
pop
pop
repnz
call
push
push
std
xchg
aam
ret
sti
lret
mov
popa
jecxz
ljmp
or
inc
arpl
xchg
dec
push
ficoms
push
incl
adc
cmp
push
xchg
call
xor
adc
iret
bound
stos
shl
dec
movsb
pop
push
sub
out
pop
pop
xchg
loope
pop
lcall
xchg
cmp
lods
data16
imull
in
gs
sar
fucomip
decl
inc
in
sub
push
add
ret
int
adc
stos
ljmp
pop
test
mov
mov
repz
cld
jg
mov
test
lahf
js
or
mov
jmp
xchg
or
push
ljmp
clc
cld
stos
pop
addr16
sub
pop
push
jmp
popf
dec
sbb
mov
ret
mov
out
xchg
enter
adc
lea
sti
jne
cmc
fcmove
mov
dec
pop
enter
dec
fistpl
ljmp
js
mov
js
cld
xorb
jb
decl
decl
test
dec
loope
ljmp
push
lods
notb
movsl
cmpsb
in
pop
mov
fldcw
cmp
cwtl
jg
repz
sub
dec
mov
shlb
jmp
xor
in
or
lret
sahf
mov
idivl
mov
iret
dec
es
pop
pop
inc
mov
aaa
cli
call
adc
push
mov
jg
in
stos
int3
iret
add
dec
add
aaa
fdivr
decl
shll
and
dec
ficomps
lods
cs
inc
movsl
addr16
js
lret
adcl
icebp
or
sbb
mov
enter
sub
pop
dec
loope
aas
gs
test
xchg
incl
lods
sub
inc
pop
lods
fnstsw
cmp
jp
mov
jbe
mov
jmp
in
inc
ja
jg
xchg
sahf
fs
inc
out
inc
jg
in
dec
int
jno
test
cs
enter
or
test
add
leave
add
stos
aad
stos
fdivrs
xchg
decl
js
data16
push
dec
cmp
push
imul
loopne
inc
pop
in
arpl
push
xchg
mov
repz
mov
jge
fld
in
arpl
jmp
dec
dec
cmpsl
scas
xchg
loopne
in
push
orb
xchg
in
shrb
cmp
add
ljmp
mov
aam
dec
mov
or
push
jb
in
jno
cltd
fstpt
sbb
mov
cmp
or
jge
aam
cmpsw
ljmp
sbb
loopne
jle
jp
jnp
sub
in
mov
xor
jmp
leave
addr16
cmpsl
cmc
mov
testb
ja
lcall
pushl
dec
cli
and
aad
inc
ljmp
pushf
inc
lahf
dec
imul
int
mov
shrl
or
push
out
out
mov
dec
mov
mov
inc
scas
mov
sbb
decl
stc
xor
cmpsb
cwtl
pop
mov
rcll
cmp
decl
sti
adc
aaa
mov
fs
in
lcall
cmpsl
test
fldcw
mov
mov
sarl
lea
lds
or
fcmovnb
sbb
popa
ljmp
jne
jae
add
lea
es
mov
xchg
adc
mov
stc
addb
inc
sbb
xchg
in
push
rcrl
cmc
jmp
xchg
stos
jmp
xor
add
pop
aam
jne
mov
mov
adc
xchg
dec
pop
int
adc
shlb
decl
sbb
push
sub
add
cld
cld
mov
imul
jmp
jb
jp
imulb
push
xchg
xor
and
jo
ljmp
and
loop
xchg
es
scas
pop
out
pop
idiv
mov
stos
andl
inc
inc
inc
lea
or
int3
mov
adc
pop
loopne
lock
push
es
or
ljmp
mov
sub
or
lock
sub
sbb
dec
jg
xchg
mov
movsl
and
push
jo
mov
imul
cs
cmp
aad
lret
aas
ljmp
mov
fists
sub
dec
rcl
dec
sub
popa
push
int3
jb
push
es
xchg
mov
cwtl
and
flds
jb
push
mov
inc
imul
mov
aas
cmc
cmp
jg
jnp
movsb
inc
cmpsb
mov
mov
daa
test
sahf
adc
push
adc
adc
mov
test
imulb
bound
cmp
add
sbb
popa
pop
sbbb
mov
outsl
cmp
out
mov
jmp
pop
cmp
fsubs
xor
call
lret
pop
sbb
std
jns
sbb
cmp
jle
movsb
adc
sub
ljmp
inc
pop
into
loop
dec
sbb
lds
inc
pop
hlt
mov
mov
dec
int3
inc
loopne
xchg
ss
mov
mov
pop
lock
incl
mov
inc
loope
lahf
test
lahf
cmp
outsb
mov
jnp
fdivrp
push
inc
push
daa
imul
mov
inc
mov
sub
ljmp
sbb
jo
xchg
xchg
dec
pop
adc
pushl
lret
or
push
pop
mov
lods
xor
data16
into
hlt
ret
xor
bound
movsl
cld
xor
fmull
or
xchg
fs
and
movsb
repz
push
fcomps
push
call
std
push
out
rolb
insb
sbb
in
jbe
cld
jmp
or
or
shll
insb
js
jae
mov
aaa
insb
inc
add
mov
pushl
inc
sarb
in
mov
xchg
insb
dec
inc
adc
xchg
call
jne
test
dec
sub
cmp
movb
mov
fcmovnu
setns
mov
adc
in
sti
mov
xchg
push
lahf
mov
jg
call
add
ja
cmpsb
in
sub
cld
xchg
jbe
ss
leave
or
xlat
add
inc
mov
pop
mov
mov
mov
jle
repz
or
stos
pop
jmp
mov
mov
in
fsubrl
sbb
push
sub
sbb
and
mov
or
in
icebp
lcall
mov
loop
call
sub
adc
shl
test
in
add
cmp
add
push
jg
dec
mov
sahf
push
or
pop
sbb
and
push
dec
cmp
insb
in
sub
gs
mov
add
dec
jns
loop
aaa
es
sub
cmp
dec
mov
scas
in
xchg
cmpsb
arpl
mov
add
lret
lretw
popa
sub
or
ret
out
or
nop
loope
or
sbb
sub
imul
clc
movsl
mov
je
mov
insb
xchg
faddl
ljmp
outsl
icebp
pop
push
push
xchg
jo
in
xchg
aad
jmp
and
push
xchg
into
lock
jbe
ljmp
mov
jg
enter
xchg
jne
lcall
and
dec
icebp
call
sub
roll
cltd
inc
add
test
inc
sbb
mov
cli
int
or
out
xorb
adc
ret
sub
adc
mov
imul
jae
sbb
mov
xor
dec
lcall
outsl
jl
sub
and
ljmp
pop
stc
jns
ss
pop
push
mov
lcall
fistpll
dec
in
inc
jne
dec
push
fsubrl
xchg
mov
pop
call
pop
mov
push
test
repnz
mov
inc
dec
sahf
imul
mov
ja
push
outsl
call
loop
stos
sub
mov
ljmp
clc
jg
adc
fdivs
dec
cmc
ljmp
aam
xor
push
pmullw
xchg
mov
lods
adc
inc
das
ja
pop
sbb
call
mov
add
pushl
das
mov
sbb
pop
imul
and
and
pop
inc
add
xchg
arpl
jge
adc
jmp
mov
push
push
shrb
push
fwait
mov
icebp
jns
out
mov
push
sbb
dec
sti
cs
pop
mov
mov
sbb
popa
jmp
and
mov
pop
fdivs
sbb
ljmp
shr
adc
in
fs
lret
adc
push
js
add
fdivrs
inc
adc
or
push
jmp
rolb
pop
loopne
xlat
popf
pop
cmpsl
stc
jle
cmpsl
cwtl
int3
mov
je
cmp
add
xorl
std
xchg
scas
lea
jae
out
dec
scas
mov
sahf
cmp
push
dec
ljmp
std
mov
mov
add
cmpsl
and
xor
dec
out
pop
ljmp
decl
xchg
lds
pop
xchg
mov
hlt
xchg
push
cmc
sbb
fs
movsb
mov
fcmovu
sub
lods
push
add
lods
movsl
push
call
ljmp
mov
add
inc
dec
inc
xor
cmp
and
sbbl
aas
cmp
pop
dec
add
inc
jmp
loope
nop
lods
fs
nop
mov
pushl
daa
push
lea
xchg
aas
mov
stos
or
sti
sub
adc
fdiv
or
mov
sahf
hlt
mov
decl
outsl
push
mov
push
and
jns
test
jmp
rol
jecxz
sar
incl
testl
pop
adc
jae
sub
pushw
push
push
ljmp
cld
mov
jb
sbb
jge
sarb
jmp
rolb
cmpsl
dec
popf
test
daa
loope
std
adc
cmc
adc
lcall
lds
sbb
out
push
mov
ja
int
mov
fucomip
decl
jb
pop
pop
xchg
sbb
loop
push
incl
dec
pop
dec
xlat
divb
movsl
jmp
and
ret
mov
mov
push
test
jmp
sahf
mov
push
jne
push
mov
cli
xchg
mov
iret
sub
jecxz
test
lock
mov
push
stos
gs
cmpl
jle
sbb
jb
mov
push
inc
jg
dec
mov
mov
lcall
ljmp
popa
mov
sub
inc
mov
xchg
jb
sbb
outsl
jg
call
cmc
pop
ja
rcll
cld
outsl
hlt
call
add
cmp
add
insb
ret
xchg
xor
jo
aam
outsl
sbb
out
sub
push
movsb
in
movsl
xor
ljmp
mov
xchg
shll
stc
popf
in
inc
inc
insb
pushl
aaa
mov
pop
mov
push
out
insl
jno
sbbb
and
inc
pop
std
call
cmp
jae
adc
addr16
repnz
stos
dec
jmp
dec
insb
lea
lcall
call
pop
testl
negl
or
mov
inc
inc
adc
incl
int
xchg
pop
push
or
lock
jl
fldt
xchg
jbe
aad
mov
in
mov
mov
rcrl
pop
das
pop
jg
or
das
les
mov
repnz
sub
andl
hlt
sub
and
std
movsl
and
jecxz
and
int3
pop
shlb
xor
test
xor
inc
mov
jle
xchg
loopne
pop
inc
dec
xchg
or
mov
sbb
movsl
clc
or
ret
popa
sbb
sub
and
add
add
inc
or
fdivr
notb
clc
adcb
adc
sarl
ss
xchg
lcall
push
add
xor
sub
dec
add
ss
sub
mov
xchg
mov
call
sub
mov
mov
ret
mov
pop
stos
xchg
adc
pop
jo
push
pop
and
pop
and
decl
add
pop
or
jge
sbb
cwtl
mov
jno
pop
xchg
scas
je
mov
lock
push
fcomps
sub
in
mov
xor
test
bound
inc
sarb
xchg
das
pop
test
push
bound
and
jp
mov
ss
inc
pop
push
push
lcall
pop
scas
add
mov
and
in
pop
mov
test
xchg
cwtl
rorl
into
mov
repnz
adc
cmp
inc
pop
inc
mov
mov
aam
pop
je
cmp
inc
fistpll
enter
bound
add
jmp
sub
push
outsb
dec
pop
out
cmpsl
jl
dec
adcl
fldl2e
mov
push
and
cmpsb
or
lods
sub
insl
ds
push
jecxz
xor
sbb
pushl
mov
insb
dec
divl
cmp
orb
adc
sbb
in
cwtl
bound
movsl
cli
push
add
repz
mov
movsl
xor
call
idivb
and
adc
fucomi
fldenv
sub
cmp
imul
pop
inc
dec
mov
mov
fistps
jg
sbb
push
inc
xor
jnp
rcll
imul
lcall
lret
rol
or
mov
xor
xor
sub
mov
sbb
outsb
sbb
ret
fdivl
out
mov
sti
fmuls
nop
movsl
arpl
leave
les
inc
icebp
cmp
dec
pop
sub
cmp
clc
js
push
sub
fidivl
hlt
call
pop
and
mov
xor
ret
je
leave
stos
ljmp
movsb
ret
rclb
testl
gs
ljmp
pop
push
xchg
cmpsb
add
xchg
mov
leave
rolb
das
in
inc
enter
adc
jnp
lods
call
imul
fwait
jb
dec
dec
add
xchg
das
mov
add
loop
idiv
incl
mov
out
out
mov
mov
hlt
scas
test
pop
lods
mov
lcall
jmp
cwtl
std
pop
push
lahf
fwait
cmp
cmpsb
xor
cmp
loopne
addr16
call
icebp
imul
cmp
aam
enter
mov
adc
mov
cld
incl
mull
addb
addl
sbb
or
addr16
jbe
jg
leave
xchg
mov
push
test
addb
rol
fld
sub
adc
outsl
xorl
fstl
es
mov
add
push
mov
jl
xor
and
ret
adc
stos
mov
jbe
js
or
call
sbb
mov
ljmp
clc
call
cld
in
jecxz
sbb
jg
incl
push
pop
addr16
mov
loop
out
lock
jmp
jmp
sbb
xchg
ret
jno
pop
jo
aad
xchg
jmp
in
repnz
xchg
pop
mov
lcall
ret
lret
cld
mov
sub
call
jns
repnz
addr16
dec
daa
cltd
push
icebp
push
sub
add
pop
decl
cmc
jp
andb
mov
int
jns
lods
lahf
add
mov
pop
shll
cwtl
test
movsl
sub
ret
mov
jg
add
xor
adc
and
jmp
testl
call
das
outsl
js
adc
push
loope
cmp
pop
shr
inc
fwait
int
jmp
adc
inc
jnp
mov
mov
mov
fwait
lea
decl
and
add
jnp
popa
js
cmpsl
fbld
stos
leave
int3
add
or
xchg
ljmp
out
xor
je,pt
out
in
and
movsl
add
fimuls
cltd
push
iret
lcall
add
mov
mov
pop
mov
dec
lcall
je
incl
adc
shrl
xchg
mov
xchg
jg
push
lock
inc
or
call
cli
shlb
push
push
ret
sahf
inc
jge
test
int3
dec
pop
push
ja
xor
push
mov
dec
add
mov
loopne
sbbb
dec
sub
cmp
in
test
notl
dec
insb
xor
inc
shrl
mov
clc
xchg
faddl
mov
and
pushl
les
xchg
mov
mov
or
mov
shl
leave
adc
xchg
test
out
std
or
or
fdivp
ss
mov
aaa
pop
ja
movsl
pop
sub
inc
sub
dec
sbb
jmp
mov
fsubrl
xchg
cmp
jns
xor
repz
xchg
push
jo
push
pop
push
scas
scas
push
dec
lcall
sub
pop
stos
icebp
movsl
xchg
mov
lahf
cmp
dec
inc
mov
xchg
pop
jmp
cmp
mov
cltd
fisttpl
hlt
cmovae
xchg
lahf
cld
int3
add
insb
inc
jmp
push
fstpl
ss
jb
mov
add
inc
pushl
sbb
rcr
iret
mov
pop
jae
movsl
cmp
pop
adc
sarb
dec
xor
outsl
std
jg
and
lds
dec
mov
int3
pop
popa
pushf
push
jg
mov
sub
sahf
push
testl
jmp
pop
mov
bound
mov
ss
pop
pusha
inc
lods
push
fbstp
in
ja
ljmp
aad
pop
push
aas
fcomps
xchg
ljmp
push
xchg
int3
rsqrtps
hlt
call
and
inc
test
in
sub
mov
lahf
stc
or
mov
adc
aas
lahf
jns
pushf
and
pop
js
ja
jmp
int3
inc
call
pop
sbb
mov
push
imul
sub
lea
xlat
cmp
std
jmp
jnp
loop
inc
loopne
lock
out
call
lcall
mov
rorl
cmp
fldcw
push
call
xchg
sub
sub
jbe
xchg
negl
mov
nop
add
outsl
icebp
jmp
cmp
mov
cmp
cmp
iret
cs
dec
sub
jnp
dec
jo
and
mov
inc
movd
pop
mov
rcll
mov
push
jne
lock
pop
cs
jg
imul
ljmp
push
push
jno
or
adcb
mov
push
or
in
andl
incl
outsb
sub
call
ret
mov
cmp
fstps
pushl
xor
lret
lahf
fs
stos
pop
pop
pop
mov
sub
mov
mov
leave
add
dec
popa
adc
and
adc
pop
js
cli
pushl
cld
test
stos
mov
add
adc
int
fcomps
mov
lds
mov
js
mov
cmp
call
mov
sbb
xor
insl
jle
push
addr16
mov
cmp
gs
call
inc
xlat
and
fucomip
mov
scas
stos
lea
adcl
and
mov
push
in
sar
decl
negb
gs
popf
in
out
outsb
dec
pop
aaa
sbb
incl
fidivs
xchg
scas
out
aam
insl
cmc
dec
mov
mov
and
ret
mov
and
sarl
in
inc
adc
das
lock
ja
addl
jge
xlat
pop
roll
test
fsts
incl
jmp
inc
jge
bound
cltd
arpl
dec
cwtl
jbe
insl
stos
mov
push
pop
push
loope
mov
dec
pushf
out
jge
jg
pushl
jb
aam
sub
popf
sub
cmpsl
movlps
or
jmp
mov
out
xlat
sub
inc
lock
push
in
cmpsb
neg
lods
inc
push
mov
call
jno
sbb
jmp
push
jp
mov
mov
xchg
jb
pusha
mov
sbb
fldcw
mov
int
rorl
orl
xchg
mov
sbb
mov
and
ret
leave
rcrl
call
xor
lret
xchg
rol
or
push
out
out
dec
in
gs
pop
pop
aad
iret
stos
sub
das
cmc
jmp
push
aaa
add
mov
mov
sbb
and
ret
mov
jne
imul
inc
fwait
repnz
xor
sbb
inc
fldcw
adc
jge
mov
call
cmp
mov
das
add
sub
not
dec
loope
mov
scas
hlt
cs
cmc
icebp
aam
push
std
jg
dec
rcll
jmp
pop
out
jnp
clc
test
inc
decl
inc
cltd
mov
mov
mov
fisubrs
popa
sub
push
ljmp
xor
stc
sbb
in
mov
loop
xchg
cs
movsb
push
lret
xchg
pop
lock
and
aaa
cli
ja
fs
cld
mov
mov
inc
adc
and
call
mov
cmpsb
in
or
lock
dec
mov
mov
jo
int
fcoml
arpl
incl
call
scas
cmpsb
int
add
sub
inc
imul
or
xchg
add
decl
iret
pusha
test
mov
jne
sti
in
sbb
lods
imul
cmpsl
add
jl
cmp
movsl
push
das
and
decl
in
cmpsl
mov
jecxz
add
pop
jecxz
lcall
jmp
sbb
jecxz
daa
leave
mov
mov
mov
loopne
xchg
mov
decl
notb
jne
sbb
loope
push
mov
jg
call
sbb
dec
fsubp
pop
lahf
aam
xor
fstps
je
mov
adc
dec
and
jnp
adc
jmp
push
addr16
lock
cmp
cmpsb
in
push
cmp
adc
pop
xchg
movsb
fildll
out
or
out
pushf
inc
test
sbb
xor
jns
xchg
xchg
mov
lahf
movsb
or
lock
cmpsb
and
jle
lock
lock
mov
lcall
mov
xchg
and
gs
or
ja
cmp
call
sbb
cs
into
mov
cmpb
pop
fmull
stos
fildl
sub
jmp
lods
jl
mov
mov
lcall
jmp
xchg
sub
push
push
inc
push
inc
lods
enter
cwtl
push
pop
call
dec
test
and
mov
dec
xor
xchg
repnz
cmpsl
ret
dec
aaa
adc
test
mov
lods
mov
cli
jmp
adc
jns
jl
mov
sarl
jmp
jmp
add
je
jmp
mov
sub
imul
adc
mov
lds
xchg
jae
cmp
mov
clc
orl
enter
je
xchg
or
popa
add
lcall
adc
dec
and
nop
lea
push
or
add
cli
outsl
std
dec
ss
shll
push
int3
js
in
iret
adc
aaa
test
js
addr16
pop
pop
test
pop
nop
lret
xor
les
add
and
cli
mov
fiaddl
add
pop
inc
fwait
sub
xor
add
outsl
ds
cmp
pop
mov
daa
shll
mov
aaa
test
adc
dec
stc
cmp
cmc
outsl
push
mov
dec
aas
shl
push
cmc
jg
pop
int3
cmp
divl
jns
jnp
xchg
jbe
addb
add
add
cmp
mov
ficoml
int3
pop
cltd
push
dec
pushf
mov
jg
rclb
sub
push
sarl
lods
arpl
sub
cmp
test
rolb
testb
ficompl
sub
cmp
in
cld
pop
cmp
sbb
xchg
jmp
mov
add
sub
sti
ds
jl
xor
adc
inc
mov
out
push
scas
shrl
loope
jp
mov
pusha
sarb
test
xchg
inc
decl
inc
jmp
jle
inc
mov
lock
sub
jo
mov
stc
imul
shlb
mov
adc
and
ret
into
jmp
lds
inc
in
adc
xchg
xor
add
mov
mov
loop
and
mov
add
mov
cwtl
push
jle
divb
mov
lock
mov
lods
lods
mov
sbb
sub
xchg
je
and
jle
aad
incl
lds
rcrl
mov
fucomp
sbb
stc
shlb
in
pop
ror
pushf
ljmp
cli
sbb
push
test
inc
ficoms
adc
sub
mov
dec
mov
push
pop
jl
lods
push
jl
dec
popa
push
cmc
pop
pop
add
test
push
insl
sbb
loop
das
add
adc
sub
jecxz
lds
pop
push
int3
add
pop
aad
mov
int
cli
test
cld
out
mov
fs
jge
mov
daa
and
int
daa
mov
inc
push
push
jle
jle
dec
aam
cmp
lret
fnstsw
add
sbb
loope
aaa
and
fsubp
lods
add
pop
stos
mov
add
and
std
mov
cs
sub
mov
fsubl
jae
inc
shll
add
push
mov
sbb
test
nop
xchg
notl
insl
jae
inc
inc
pop
das
sbb
mov
pushf
dec
mov
mov
mov
lea
mov
inc
adc
shll
sbb
loopne
jmp
decl
inc
rolb
andb
jp
sahf
xchg
pop
stos
mov
or
fidivrl
jg
aaa
mov
or
bound
xchg
call
xor
sub
dec
sbb
ret
mov
or
mov
cmp
fwait
jecxz
lock
add
mov
out
sti
or
mov
fdivl
push
lods
mul
add
je
mov
pop
inc
dec
push
in
into
push
lcall
cli
das
int3
mov
jnp
inc
es
pop
sub
inc
cmc
mov
push
adc
loope
rcrb
aam
fcmovnu
scas
add
pop
push
add
jno
clc
mov
call
in
loopne
mov
hlt
dec
sbb
out
add
add
xor
xor
filds
aam
push
insl
mov
movb
mov
pushf
or
stc
cmpsb
add
fisttpll
nop
mov
fbstp
jo
inc
les
das
mov
mov
popa
sub
sub
push
gs
pop
push
mov
decl
stos
das
push
movsl
xor
inc
cmp
shlb
xor
outsb
add
jg
add
inc
sub
adc
cmp
mov
cld
shrl
dec
adc
cmp
outsl
addb
imulb
push
enter
lods
movsl
xchg
aaa
arpl
lea
shrb
bound
pop
push
mov
pop
jmp
fsubr
sbb
mov
decl
imul
icebp
neg
push
pushf
lds
pop
stos
cs
les
adcl
aad
outsl
cmp
mov
adc
mov
cltd
enter
mov
mov
clc
loop
sbb
dec
fs
loop
mov
dec
test
jns
push
je
lds
xor
rorb
cmp
mov
sub
sub
add
dec
push
ds
sub
mov
sti
lods
mov
push
push
xchg
and
jmp
pop
or
xor
and
add
xchg
cli
xlat
mov
sub
or
inc
cli
rorl
mov
sbb
jno
cltd
imul
hlt
mov
bound
dec
mov
and
testb
jbe
loopnew
fucomi
mov
sbb
jmp
xor
dec
and
and
add
stos
outsb
cld
arpl
imul
mov
leave
sahf
cmpsb
pop
sbb
pusha
dec
sub
faddl
outsl
push
dec
lock
or
mov
xchg
fcompl
repnz
sbb
sbb
dec
mov
out
mov
lea
or
cwtl
jbe
jmp
lock
pop
cmp
insb
out
mov
jnp
sub
out
daa
das
imul
xchg
mov
sahf
or
pushf
call
mov
pop
and
enter
dec
jne
dec
jle
hlt
pop
add
adc
mov
sbb
gs
out
clc
das
cmc
or
mov
jae
inc
das
xchg
ljmp
pop
mov
pushl
inc
clc
or
aas
add
mov
out
icebp
incl
lea
sub
mov
mov
dec
push
sar
push
push
inc
insb
mov
ss
adc
test
pop
xor
xchg
lahf
sarb
rcrl
scas
add
and
test
push
xchg
adc
sub
sahf
xchg
mov
dec
inc
incb
aaa
jbe
dec
mov
jecxz
xor
push
pop
sub
ja
jno
popf
js
pop
dec
xchg
sarb
pushl
xor
mov
jmp
pop
sbb
aas
pop
std
aaa
push
mov
jmp
sub
and
lock
fistpl
xlat
adc
push
mov
sub
jl
fisubrl
and
and
mov
dec
sti
lds
pusha
jno
je
sbb
sarb
shll
push
mov
pusha
lds
jno
mov
scas
add
sbb
jbe
mov
pushf
ffreep
das
push
rorl
pop
pop
ficompl
sbb
pop
pop
incb
sbb
lea
ss
sbb
xor
and
pop
repnz
xchg
out
call
dec
fmuls
and
jg
scas
pop
adc
xchg
xorb
mov
mov
jnp
sbb
out
mov
mov
stos
mov
inc
inc
add
testb
addl
test
push
mov
sub
xorb
rclb
xchg
jo
pop
lea
movsl
push
scas
jmp
push
fisubl
movsb
movsl
jmp
jle
ja
fwait
scas
sbb
aad
stos
fistpl
das
sub
lcall
adc
add
shr
outsl
std
insl
cmpsl
adc
mov
mov
push
or
int3
mov
insl
and
dec
repz
add
add
rol
das
cmpsb
inc
dec
add
ret
pop
ror
inc
pop
les
cmp
cmpsl
in
mov
jno
jns
xchg
rcll
gs
aas
adc
mov
ss
out
jl
adc
ret
faddl
outsl
mov
inc
xchg
and
inc
ja
andl
jg,pn
ret
pop
pushf
in
ret
push
loopne
fbld
inc
outsl
fldl
ja
jg
lret
aad
dec
xchg
or
xchg
aas
popa
mov
mov
movsl
xor
sbb
sbb
xchg
mov
xchg
cli
pop
xchg
mov
fistpll
popa
push
popf
repz
lea
inc
stos
lret
movsl
xchg
adc
vpsubq
out
cli
ret
adc
mov
dec
into
add
xor
mov
mov
outsb
sbb
or
sahf
aaa
clc
sbb
mov
adc
mov
mov
dec
xchg
jbe
xor
cmp
xchg
clc
cs
add
cli
mov
dec
cmp
jmp
imul
ret
mov
subb
push
mov
mov
bound
push
cmp
pop
jp
jge
jp
ficoms
fsubs
nop
je
push
rolb
mov
push
test
xchg
adc
pop
movsl
outsl
insb
call
dec
data16
xor
sbb
incb
jno
mov
xor
orl
aaa
mov
dec
lods
jl
loopne
mov
fimuls
aas
adc
sub
mov
incl
mov
sbb
js
jo
std
inc
shrl
add
rolb
loop
loopne
lea
shlb
jp
add
fiadds
dec
imull
testb
das
sbb
in
mov
mov
jmp
jmp
cld
in
or
xchg
pop
cltd
push
dec
sbb
mov
jmp
adc
add
push
mov
mov
mov
sub
mov
xchg
clc
jmp
push
and
mov
push
les
xchg
jbe
xchg
dec
lock
fs
test
jns
cmp
push
adc
sub
lds
jg
shll
jo
das
dec
mov
push
inc
mov
mov
jg
fbstp
sbb
test
inc
jnp
push
pop
mov
frstor
push
mov
pop
imul
mov
or
imul
aas
jbe
daa
test
jg
fistpl
gs
cmpsb
cmp
mov
call
mov
xchg
add
mov
push
fdivl
sub
fisttpl
mov
jo
fwait
ljmp
mov
addb
mov
inc
es
push
or
clc
xchg
fiadds
xchg
lcall
pop
adc
incl
call
mov
fcmovne
sbb
push
xchg
fldt
push
nop
inc
mov
mov
and
mov
sbb
jp
cmpsb
hlt
repz
cmp
cli
ljmp
jge
add
pop
das
les
pop
jbe
in
dec
dec
cli
fldt
lret
test
loopne
xchg
inc
inc
decl
and
in
or
mov
in
ljmp
push
pop
mov
gs
mov
mov
xor
inc
loopne
fmuls
fbstp
neg
mov
xchg
fidivrl
or
stos
outsl
lods
jle
mov
shrl
mov
and
sub
jnp
and
pop
enter
jmp
or
adc
decb
cmpsl
sub
mov
sub
inc
test
faddp
das
popa
out
repz
sub
jmp
dec
sub
cmp
xchg
les
push
pop
popl
pop
clc
push
sarb
inc
into
mov
lcall
sub
mov
push
ljmp
out
push
xor
lahf
icebp
jecxz
mov
cli
aaa
mov
or
xor
scas
ss
shl
xor
pop
lods
xlat
xlat
mov
jb
mov
aas
inc
mov
and
mov
std
in
or
cmpsb
mov
shlb
push
lahf
adc
adcb
pop
popf
xchg
xor
push
mov
inc
nop
les
sbb
repnz
orb
aaa
add
adc
lahf
in
mov
cmpb
xor
cwtl
adc
adc
dec
xchg
or
shrb
aaa
xchg
clc
push
movsl
adc
push
jg
fnsave
cld
adc
fwait
cmpsl
imul
pusha
xor
push
fucomip
ljmp
clc
lret
xchg
mov
outsl
call
mov
fs
xchg
out
mov
fildll
jae
sbb
adc
or
popa
aad
or
loopne
jmp
dec
filds
sub
pushl
cmp
pop
adc
out
xchg
aad
jmp
jge
mov
jae
xchg
pop
xchg
mov
out
loopne
aad
pop
lahf
dec
sbb
cmp
pusha
xchg
inc
ljmp
and
mov
pop
call
xchg
int
add
cmp
dec
jg
sbb
mov
aaa
fidivs
ret
jno
iret
lret
sahf
and
mov
sbb
adc
xor
push
and
insl
outsl
jo
fldt
cmp
inc
jge
cmp
dec
or
in
add
adc
pop
mov
mov
push
ds
test
and
mov
ds
lea
or
jl
shrl
dec
cmp
mov
jmp
adc
movsb
sarb
fstpl
xchg
jecxz
nop
cmp
aaa
test
insl
fisttps
int
loopne
xor
arpl
fs
dec
test
cmp
cwtl
add
pop
pusha
loope
pushl
test
sbb
cmp
mov
nop
nop
gs
mov
inc
cmp
movsl
cmp
mov
cwtl
clc
xchg
ja
xor
rcll
push
scas
out
aaa
mov
arpl
je
jmp
sti
repnz
xor
nop
dec
xchg
adc
decb
cmove
mov
mov
sbb
loop
ljmp
scas
repz
adc
mov
mov
dec
push
in
ret
cmp
shll
cmpb
mov
filds
jle
sbb
iret
sahf
jo
add
rcrl
sub
fdivp
rolb
arpl
xlat
sbbb
mov
jge
pushf
loopne
lcall
mov
adc
fwait
lahf
sbb
lods
cmp
fdivl
lcall
jnp
dec
jmp
push
loopne
aam
add
push
lods
mov
dec
lcall
and
mov
cli
push
fcmovne
idivl
inc
and
nop
test
ficompl
sub
inc
adc
add
into
loope
loope
andb
es
std
cld
popf
sbb
jg
fstpl
aad
pop
cmp
or
pop
jnp
pop
jg
push
loop
adc
pop
inc
fsts
push
sbb
leave
push
sbbl
clc
lds
imul
jecxz
incb
cmp
popa
jp
mov
push
and
lods
push
mov
in
xchg
jle
and
jge
daa
sub
cmpsb
lods
bnd
scas
aam
sub
aam
aaa
ss
imul
incb
test
rorl
lods
mov
in
loopne
mov
mov
out
inc
push
out
sub
test
xchg
and
icebp
decl
out
mov
fdivrs
push
aam
insl
cmp
jg
xor
mov
adc
scas
loop
lds
mov
gs
adc
jbe
rclb
test
ficoml
sub
clc
and
inc
loopne
jmp
inc
add
mov
dec
push
jo
lea
stc
mov
or
cs
repz
pop
aas
mov
jp,pn
fs
pop
daa
js
dec
test
in
xchg
and
inc
push
or
mov
repz
outsb
cmp
and
and
loope
and
mov
ret
lret
mov
mov
int
repz
cmp
push
lds
mov
sbb
inc
sub
or
jbe
imul
popf
mov
mov
xlat
lods
insl
pop
jno
sti
je
sbbb
and
adc
je
xor
rorb
enter
push
outsl
jbe
adc
loopne
pop
cli
das
jge
std
test
adc
pop
cwtl
mov
jo
push
mov
mov
and
mov
les
mov
mov
add
ljmp
fs
add
and
out
adc
push
pop
push
push
dec
xchg
xchg
push
push
out
imulb
incl
ret
push
mov
adc
lock
xchg
adc
mov
push
and
hlt
adcl
push
xchg
adcb
in
pop
or
inc
add
pop
cld
and
fisubs
ret
lds
daa
sbb
out
xchg
cmp
fwait
mov
add
mov
and
mov
push
rcll
or
fbld
cmpsb
or
gs
out
pushf
or
or
push
data16
stc
std
or
dec
cmc
mov
cmp
xchg
out
push
pop
pop
add
jl
fistpl
pop
pop
and
dec
inc
xor
sub
push
adc
pop
movsb
aaa
mov
mov
xchg
outsl
in
cmp
dec
add
movb
pop
or
subb
adc
movsl
out
out
xor
dec
ja
adc
int
dec
cmp
aaa
and
push
add
ret
pop
jp
fidivs
jp
mov
xchg
dec
ja
test
daa
mov
iret
or
xor
loopne
push
test
out
fistpll
sbb
jp
mov
ret
fisubl
cmp
dec
insb
ss
fnstcw
in
aam
sbb
mov
pop
lcall
shl
push
sbb
test
js
in
incb
push
adc
loopne
adc
pop
mov
in
in
rorl
sbb
push
sahf
pop
dec
mul
mov
cld
jmp
fdivrs
pop
orb
jb
cmp
int3
jmp
loope
es
and
inc
adc
and
mov
outsl
push
rol
pop
and
sbb
jmp
pop
aaa
adcb
mov
jne
push
jp
mov
roll
lods
mov
push
jmp
je
push
cwtl
xchg
rcl
xor
cltd
sbb
sar
std
stos
negl
push
orl
int
nop
pop
and
mov
mov
insl
mov
stc
fcoml
add
add
test
stc
cltd
dec
xchg
add
mov
inc
dec
stc
xchg
shlb
dec
inc
add
cmpb
mov
jg
mov
test
add
pop
fildl
cmpsl
sub
fisubrl
stc
jo
pop
clc
ja
mov
mov
sub
inc
fwait
clc
scas
lret
xor
pop
das
daa
mov
test
sti
fucomi
out
push
mov
insl
data16
dec
cwtl
and
imul
scas
sub
lods
or
das
cld
pop
inc
sbb
addl
mov
mov
or
xchg
imul
adc
push
push
mov
into
lret
inc
es
js
dec
aad
push
cmp
cmc
jg
jmp
mov
rorb
ds
cmpsl
lcall
aam
xchg
scas
out
inc
push
into
aam
jecxz
jmp
ljmp
xchg
ret
mov
icebp
push
xchg
mov
pop
jp
push
adc
mov
push
cwtl
cwtl
outsb
xorb
xchg
adc
mov
js
imul
xlat
loopne
dec
mov
sbb
dec
and
jb
jge
xchg
decl
pop
xchg
or
fchs
adc
sub
cmp
lds
in
sqrtps
fcmovb
test
push
loopne
rolb
mov
sysenter
in
clc
jmp
fldenv
out
pop
mov
push
push
inc
nop
pop
pop
dec
adc
adc
and
lds
push
cltd
popa
mov
imul
lret
mov
lea
les
push
xchg
inc
pop
sbbb
jge
pop
and
inc
sahf
popa
ss
scas
sahf
or
add
jns
jmp
and
and
or
mov
jbe
adc
sti
in
xchg
pop
into
ss
dec
mov
jl
dec
enter
pop
rclb
mov
test
das
shlb
fsubl
ficompl
push
sbb
data16
das
cltd
stos
cmp
shrb
cmp
test
pop
sub
jge
sbb
repnz
add
shll
das
push
mov
push
dec
js
xor
and
jb
aaa
push
push
pushl
fidivs
or
xchg
filds
mov
leave
mov
cmpsb
movsb
nop
cmpsl
loop
movsl
add
inc
subb
inc
cmp
fidivs
in
or
popa
aas
and
dec
notl
pop
mov
mov
xchg
or
jns
xor
std
mov
repnz
lods
push
test
shl
loope
cwtl
push
out
mov
out
enter
pop
push
dec
mov
dec
xor
xchg
loopne
inc
test
jno
pop
outsb
sub
and
push
sub
mov
pop
lods
and
and
jle
inc
aam
iret
pop
out
fcoml
adc
add
cld
mov
or
bound
pop
pop
cmc
sub
jnp
test
cltd
mov
push
push
aad
incl
inc
xlat
jg
pop
mov
and
ror
cmc
fsubrl
inc
mov
push
ja
scas
mov
outsb
add
mov
mov
aaa
lcall
and
outsl
lock
cltd
cs
pop
movsb
jnp
or
int
int3
sbb
cmp
dec
loopne
and
xchg
enter
dec
cmpsb
lret
pop
test
xor
inc
movsl
into
cs
add
sbb
xchg
mov
filds
fsts
fnsave
hlt
test
test
mov
mov
xor
scas
clc
xchg
out
mov
sub
mov
mov
cmpsl
mov
in
xor
sbb
orl
dec
rclb
sbb
jp
icebp
dec
add
ret
stc
fwait
in
cld
xor
ss
or
push
scas
pop
mov
pop
test
imul
mov
push
inc
fnsave
aas
leave
adcl
cmp
aaa
sub
addb
add
into
inc
adc
aam
jne
sbb
lcall
pop
mov
test
xchg
push
nop
das
call
adc
or
push
notl
sbbb
push
sbb
movsb
xorb
in
mov
xchg
test
cli
or
inc
in
push
repz
pop
adc
aaa
aaa
mov
out
insl
test
lret
sub
xor
xor
mov
jbe
stos
lret
arpl
fsubr
arpl
dec
fistl
xorb
outsl
out
inc
daa
fldenv
cwtl
or
aam
iret
imull
test
add
fldt
mov
mov
pop
xor
mov
ret
int
pop
popf
stc
insl
mov
pop
movsl
js
jb
inc
inc
rorl
dec
in
sub
insl
stos
lret
or
lea
cmc
test
or
xchg
icebp
sbb
push
inc
in
daa
imul
fdivl
hlt
nop
push
std
sahf
lret
jg
adc
or
dec
lock
pop
xchg
lock
mov
call
xor
ss
jge
pop
pop
jmp
inc
sbb
add
push
jnp
les
push
push
dec
jg
das
mov
pmulhuw
jle
pop
cltd
orb
push
loopne
xor
xorl
aam
inc
lea
push
orl
fwait
imul
cld
stos
adc
fsubrp
fistpl
and
aad
scas
call
jecxz
dec
inc
pop
xchg
jmp
push
or
pusha
gs
outsb
cld
std
sub
mov
repz
inc
mov
das
insl
pop
lret
and
dec
clc
pop
pop
jp
icebp
mov
push
cmp
jno
cmpsl
push
pop
fwait
cli
fists
xchg
mov
lahf
adc
in
jg
mov
push
rcl
jp
iret
sbb
sub
insb
mov
dec
mov
dec
ja
std
or
shr
les
xor
fwait
sahf
and
jne
mov
icebp
pop
or
push
aaa
pop
jns
les
lcall
sbb
loope
adc
and
mov
push
push
and
adc
repz
and
pop
sbbb
lea
dec
jno
adc
xchg
clc
push
dec
pop
or
or
dec
pushl
out
jnp
call
mov
stos
mov
mov
pop
push
ds
adc
or
test
test
cmp
add
movsb
in
pushl
lock
ss
jo
pop
sti
addl
inc
daa
cwtl
jmp
mov
test
add
xchg
pop
fucompp
aaa
pop
shlb
arpl
jmp
into
clc
int
sbb
xchg
je
and
jp
or
test
insb
lahf
test
dec
daa
sub
mov
push
xchg
pop
xchg
ss
rorb
sub
in
pop
in
jg
push
push
jns
inc
pop
out
jne
shll
das
arpl
mov
stc
and
mov
fstpl
int3
mov
in
jo
lods
nop
add
mov
std
ret
or
xor
xor
push
pop
sub
xorl
fnstenv
xor
rcl
mov
mov
pop
xchg
adc
repz
jge
pop
fisttps
out
inc
nop
inc
jp
pusha
adc
sbb
in
push
push
xchg
mov
xor
dec
mov
in
xor
decl
adc
mov
lock
movsb
xchg
add
cmp
in
loope
mov
xchg
pusha
lds
sahf
popa
leave
in
push
mov
aaa
outsb
outsl
aaa
cmc
addl
adc
adc
clc
sbb
mov
add
ror
jno
imul
inc
jns
jb
mov
push
pop
mov
sub
aad
repz
xchg
add
xchg
popf
dec
push
mov
cli
sbb
rol
sbb
push
test
pop
icebp
push
repz
in
gs
jp
cmpsl
adc
jb
cwtl
popf
ret
lods
xor
test
cmp
inc
mov
loop
mov
fcmovne
decl
in
ficompl
cmp
push
dec
push
pushf
mov
out
in
movsb
insl
lea
shll
sub
outsb
or
pop
clc
inc
inc
fbstp
test
inc
xor
mov
push
xor
xor
dec
mov
test
addr16
fistpll
or
mov
fstps
pop
push
inc
lods
mov
sbb
data16
call
mov
mov
xcrypt-ctr
cmpsl
pop
jo
mov
stos
xchg
in
jl
sub
or
inc
jecxz
sbb
mov
int3
out
adc
jge
lea
std
pop
mov
cmc
sbb
xor
sbbb
add
inc
xor
mov
add
scas
jge
sbb
add
mov
ds
push
in
sti
dec
test
icebp
adcb
inc
jnp
mov
fmuls
mov
stos
add
adc
fstl
fiadds
push
fisttps
sub
jo
push
sbb
mov
mov
loop
or
imul
ja
sbb
scas
cs
push
loopne
hlt
mov
pop
jno
lock
lea
mov
addl
mov
lods
in
sub
pusha
inc
loopnew
and
imul
mov
xor
lret
xor
sahf
outsl
das
mov
sub
daa
dec
or
fnstenv
scas
adc
add
std
mov
mov
xchg
iret
loop
test
or
cli
push
mov
or
lret
mov
sti
mov
fildll
add
mov
arpl
cltd
aad
mov
adc
add
lahf
jo
in
gs
idivb
aad
or
jecxz
xchg
cmp
shr
into
cmp
add
add
cmpsl
loop
sub
cmpsl
xchg
sbb
xchg
and
call
jnp
jae
inc
mov
lea
fiadds
orb
rorl
pop
call
arpl
and
aam
jnp
adc
inc
mov
inc
mov
je
fs
inc
sub
or
std
inc
sti
ja
rcrl
cmp
mov
xor
mov
push
stos
mov
out
xchg
xor
lahf
mov
mov
mov
jae
nop
leave
xchg
pushf
stos
outsl
and
in
sub
js
lea
rcr
pop
mov
fldenv
out
pop
outsb
sbb
mov
mov
pop
data16
sahf
jge
xchg
mov
incl
out
mov
aas
dec
or
movsb
add
jl
ss
push
insl
mov
adc
adc
push
aaa
push
popl
fiadds
and
jp
and
xchg
xchg
xor
in
mov
stos
xor
mov
and
into
push
mov
outsb
jg
or
std
mov
xchg
xchg
add
and
xchg
test
sbbl
push
push
les
outsl
xor
repz
mov
inc
pop
add
mov
xor
into
and
ret
shlb
lar
test
sub
mov
and
fnstsw
imull
cld
inc
imul
inc
xor
fistpl
stos
inc
mov
fcmovb
hlt
out
adc
fucomi
mov
xchg
pop
pop
test
ffree
add
mov
das
jg
xchg
dec
cmp
decb
cmp
cmpsb
icebp
push
dec
push
add
jbe
mov
xlat
xor
sahf
and
mov
mov
jnp
es
testb
rcr
lods
push
cli
xchg
dec
sarl
dec
pop
pop
insb
loopne
adc
pop
mov
cvtdq2ps
and
inc
lods
lret
mov
pusha
cmpsl
sub
test
mov
mov
lcall
shr
pop
inc
call
sub
jmp
gs
push
xor
ds
lods
or
lds
adc
bound
lea
dec
jmp
insb
lock
jo
sub
pop
enter
and
add
aaa
popa
mov
test
cld
idivb
mov
sbb
test
pop
add
pop
test
negb
pop
mov
lods
or
fs
icebp
mov
test
xchg
push
jg
sub
adc
ljmp
mov
outsl
jmp
mov
xor
push
jg
fistps
fiaddl
pop
xor
stos
mov
dec
xor
mulb
rorb
xchg
xor
and
xchg
insl
or
push
jmp
lds
mov
jb
sub
and
mov
dec
adc
mov
jle
fcompl
sbb
leave
and
aaa
ss
test
push
test
sbb
addr16
xchg
or
ss
xchg
and
pop
push
ja
loope
sti
leave
stos
movsl
inc
pcmpgtw
std
shll
cmp
movsb
loope
mov
dec
xchg
jo
dec
push
imul
sub
and
xor
add
cmp
or
pop
in
fcomi
sar
push
xchg
sti
lcall
jecxz
js
loop
in
roll
inc
jo
jecxz
test
mov
fidivrl
push
xchg
add
pop
dec
pop
mov
pop
mov
xor
adc
cld
insl
push
cltd
jmp
xchg
mov
sti
in
aaa
mov
cmp
push
inc
sub
push
call
cs
mov
xor
cmpsb
incb
stos
fsubrs
mulb
sub
pop
mov
dec
cmc
lea
add
test
push
mov
pop
add
adcb
sbb
jmp
sub
mov
xor
sbb
push
loopne
and
mov
push
dec
dec
js
add
rolb
bnd
fiadds
fisubrs
xchg
mov
mov
pop
mov
int3
xorl
mov
fbld
insl
sti
adc
movsb
jle
std
dec
std
int
test
mov
or
test
push
stos
mov
add
sub
sub
xchg
clc
pop
int3
addr16
sub
es
sub
jg
jle,pn
ljmp
xchg
jo
pop
push
push
jge
push
mov
jmp
popl
movsb
outsb
pop
xchg
fcoms
jbe
sbb
mov
cmpb
xchg
jnp
xor
push
hlt
dec
or
mov
ficomps
jae
xchg
les
dec
or
mov
nop
je
ljmp
movsb
mov
lcall
jbe
cli
mov
inc
inc
mov
ds
lock
sbb
rolb
popa
mov
lahf
cmpsl
add
add
mov
popa
sahf
jecxz
mov
lods
mov
call
dec
inc
push
fldl
xor
sub
out
sub
mov
ss
mov
dec
mov
dec
jnp
pop
imul
xor
sub
loope
pop
mov
or
adc
fisubrl
or
mov
aad
jp
lods
mov
and
mov
ficoml
dec
addr16
in
push
mov
cmp
xor
xor
push
js
int
rcll
imul
fs
std
lods
inc
or
mov
stos
cmp
jns
loopne
pop
fidivrs
pop
lods
sub
jo
fwait
rolb
mov
ss
dec
cmp
out
test
out
call
sub
push
xchg
lret
ret
or
popa
jl
xchg
ss
fsubrp
in
dec
jmp
int
addr16
negb
xchg
shll
loop
ret
lcall
fidivs
sub
or
mov
xchg
push
ds
cmp
mov
adc
xchg
mov
aaa
xchg
loopne
mov
xchg
xor
push
fisubl
mov
adcb
cld
fists
sti
push
xchg
test
cmp
stos
add
popa
shrl
daa
sub
adc
cmp
inc
and
inc
jle
sbb
fsubs
lahf
mov
outsb
ja
or
mov
out
adc
jno
cmp
adc
sbb
adc
mov
loop
dec
cmp
dec
push
inc
hlt
sti
arpl
dec
adc
sbb
mov
push
icebp
push
lea
lock
adc
dec
pushf
mov
jge
jecxz
dec
les
and
and
mov
lret
or
mov
and
mov
inc
fiaddl
stos
inc
icebp
rcrl
mov
add
mov
lock
orl
push
pop
pop
jp
shlb
sub
shlb
jno
mov
mov
cmc
ljmp
add
nop
loopne
call
push
mov
add
dec
mov
mov
imul
sub
jnp
clc
sbb
or
sub
ret
aad
loope
cmp
or
mov
pop
sub
sbb
pusha
cmp
faddl
mov
mov
sbb
cmp
add
std
outsl
in
stos
ljmp
xchg
adc
xchg
or
out
mov
add
repnz
mov
aaa
movsl
ret
mov
push
inc
decl
adc
rcll
movsb
adc
xchg
push
mov
stos
mov
add
out
lods
fwait
es
imul
loopne
push
xlat
sbb
push
jbe
jbe
xor
add
push
push
fbstp
fildll
addr16
mov
mov
mov
add
fs
adc
add
subb
into
sahf
pop
xorb
js
cli
test
jl
std
mov
cltd
fs
outsl
js
fstpt
fwait
stos
int
mov
and
inc
loop
lret
lock
adc
repnz
xchg
pop
divl
es
push
data16
outsb
loope
sub
push
push
pop
jmp
add
and
add
mov
cli
xchg
mov
cmp
inc
dec
push
xchg
sahf
shrl
mov
mov
test
movups
jb
mov
notb
clc
adc
adc
add
test
in
pop
daa
mov
sbb
outsl
les
ret
lods
lahf
outsb
ret
mov
movsl
mov
sub
imul
mov
and
leave
bound
add
push
repnz
xchg
pop
aam
mov
mov
repz
aad
ffreep
xor
add
mov
cmc
or
xchg
loop
push
jmp
pop
ja
dec
mov
mov
lcall
inc
fdivl
lret
lock
pop
xchg
dec
daa
test
sbb
sbb
test
and
mov
adc
sub
leave
sub
mov
jg
pushf
inc
mov
mov
xchg
cmpsb
jg
cld
push
or
test
sbb
rcrb
or
lock
jno
sbb
sbb
push
sbb
xchg
aam
scas
sbb
jmp
aaa
aam
fnsave
cmc
or
jp
jge
das
icebp
lods
mov
inc
xchg
jno
je
mov
pop
push
jb
adc
adc
out
lock
and
push
call
dec
sahf
inc
mov
and
mov
sbb
jbe
jo
sarb
jo
push
cmp
out
clc
mov
popa
leave
dec
dec
clc
lcall
add
roll
xchg
shll
sbb
push
pop
adc
stos
out
clc
rcl
mov
nop
or
test
push
xlat
aaa
pop
add
in
sub
add
movq
mov
lcall
cmp
cmc
adc
add
mov
aad
inc
fisubl
mov
xorb
lcall
lret
lret
push
mov
mov
jg
pop
aas
push
push
xlat
and
cwtl
mov
rcl
inc
push
sub
xrelease
icebp
wrmsr
push
in
or
ss
push
lods
mov
je
and
or
dec
add
popf
ret
sub
pop
sbb
outsl
mov
fs
fsubrl
std
add
sub
stos
jno
mov
jnp
adc
mov
push
jecxz
clc
jo
mov
adc
fistpl
mov
pop
add
cwtl
mov
popf
lahf
jmp
dec
popa
sbbb
xlat
push
lock
push
xchg
add
pop
push
in
sub
push
imul
ss
movq
or
push
jae
add
inc
stos
outsl
pop
fistpl
and
mov
in
and
add
mov
add
inc
mov
rolb
test
outsl
outsl
insl
push
stos
jp
xor
dec
xchg
mov
push
dec
arpl
cmc
mov
test
jecxz
push
pop
sub
mov
js
pop
adc
mov
pushf
test
or
mov
and
sarl
ficoms
fistpl
js
and
jecxz
dec
or
nop
jns
adc
dec
add
sbb
adc
js
jl
mov
push
adc
ljmp
stc
shlb
mov
cmc
push
stos
imul
mov
pop
test
mov
roll
cmp
mov
sar
or
call
lcall
out
sbb
mov
rclb
int
test
push
cwtl
xor
pop
fisttpl
cli
mov
sahf
call
roll
pop
shlb
or
pop
sbb
pop
stos
data16
adc
push
inc
lods
xchg
cmc
das
adc
inc
inc
cld
bound
int
push
jg
pop
pop
unpcklps
nop
sbb
aam
mov
mov
out
fstps
inc
in
add
inc
mov
jne
or
pop
xor
into
mov
pop
fwait
mov
sbb
loopne
jno
xor
xchg
movsl
pop
and
enter
cmp
in
cmp
dec
inc
ja
fistpl
jmp
mov
fstpt
or
adcb
popw
xor
lret
outsl
jo
loope
xor
ret
mov
mov
iret
fsubrs
adc
addr16
lcall
pop
sub
pop
mov
sar
in
aaa
mov
mov
xchg
addb
out
call
scas
lea
pop
push
stos
mov
sub
stc
cld
mov
int
mov
adc
lahf
mov
shll
jge
call
aam
push
ja
mov
pop
and
loope
xchg
and
stos
xorl
or
loope
fmuls
test
jg
push
test
jmp
sbb
iret
out
adc
in
add
std
and
mov
xlat
or
push
push
insl
sbb
sarl
loopne
jle
in
enter
push
push
sbb
cmc
insl
dec
out
jbe
outsl
push
popf
pop
movsl
adc
mov
fisttps
cld
mov
jle
pop
into
jl
decl
das
cld
dec
push
in
subb
push
popa
mov
mov
daa
pusha
sbb
adc
call
sbb
jno
pop
hlt
pop
sub
fs
aad
mull
ljmp
push
xor
fwait
dec
lcall
push
mov
xor
in
mov
cmp
decl
push
int3
iret
dec
daa
fistl
pop
loop
fs
ljmp
scas
jp
mov
mov
inc
test
cmp
iret
repz
xchg
pop
sahf
push
rcr
jg
mov
rcrl
inc
mov
rclb
inc
gs
decl
add
lods
and
inc
inc
mov
sbb
sti
pop
out
mov
cmc
push
sahf
pop
sbb
popa
mov
xor
pop
push
pop
jmp
mov
xor
jg
mov
pop
xor
rolb
das
std
lcall
shrl
cmc
icebp
pop
and
xor
push
mov
push
adc
call
mov
movsl
pushl
mov
mov
jl
clc
xor
xchg
add
movsb
dec
das
hlt
out
les
push
and
cmp
pop
stos
mov
mov
xchg
sub
icebp
dec
inc
lcall
ret
jl
push
jg
add
shll
and
dec
fisubrl
iret
pop
cwtl
mov
mov
mov
pop
and
xchg
adc
ja
out
enter
adc
pop
sub
ret
fcomp
xchg
lods
js
adcb
xlat
fnstsw
or
xchg
or
pop
loop
cltd
push
scas
sub
dec
xlat
adc
jecxz
xchg
cld
push
cli
sar
jg
xor
sub
or
testb
repnz
inc
jecxz
fsubrl
nop
xchg
ljmp
cmc
js
inc
aas
cli
insl
add
jb
sbb
lds
sub
xchg
mov
mov
sub
adc
fcoml
cmp
shl
push
icebp
pop
ljmp
divb
or
and
popa
pop
mov
inc
sub
cltd
mov
push
test
in
call
movsl
xchg
push
or
subl
mov
mov
fstpt
mov
xchg
inc
inc
cmpsb
mov
mov
pop
xchg
pop
andl
enter
jl
stc
jmp
cwtl
bound
adc
mov
xor
aam
icebp
ret
enter
and
push
das
inc
mov
jmp
xorl
orl
jg
aaa
test
add
or
test
and
jo
cmpsl
pop
cmp
push
inc
sbb
and
cld
or
lret
mov
shr
or
jp
push
jge
push
pop
test
outsl
aam
pop
sub
mov
xchg
jbe
iret
aaa
bound
mov
mov
pop
arpl
mov
das
pop
insb
xor
dec
jns,pt
dec
xlat
movsl
andl
and
add
sbb
push
ret
or
frstor
test
pop
or
out
lods
or
sbb
jmp
xchg
dec
sbb
cmove
adc
outsl
xor
fistps
gs
stos
add
rolb
mov
adc
incl
nop
ljmp
push
lods
iret
dec
jl
movsl
cmpsb
sub
mov
cmpsb
pop
fcomps
sbb
or
mov
or
mov
enter
repnz
fwait
insb
sub
jmp
outsl
incl
fsubr
or
and
rclb
pusha
popa
mov
pop
or
popa
loop
add
xchg
xor
data16
idivb
sarl
or
mov
lahf
andl
imul
inc
lcall
outsl
out
std
aas
sbb
je
mov
dec
jle
jle
std
jmp
sahf
lahf
lret
mov
icebp
xor
in
sub
jo
cld
jo
test
ljmp
js
fisubrs
popa
shll
rcrb
jbe
inc
inc
or
mov
add
mov
loope
mov
fstl
ret
dec
out
cmp
mov
cmp
rorb
and
lock
pop
mov
pop
sti
inc
xchg
scas
aaa
dec
fwait
jle
cmpsl
sbb
mov
mov
shl
adc
sbb
movsl
and
xchg
sub
or
in
lret
repnz
push
ds
fwait
mov
sbb
lock
xor
cli
mov
lret
jg
in
ja
adc
xchg
ss
xor
push
daa
ret
cli
sbb
fcomps
addr16
and
dec
dec
fdivr
sbb
xor
jno
adc
sbb
jno
xlat
lds
add
add
jle
mov
cli
lock
or
or
clc
fwait
cli
push
adc
sub
xor
icebp
push
gs
fdivs
push
cmp
loope
push
pop
pop
test
test
dec
xchg
push
ja
jg
outsl
dec
inc
push
or
es
lock
mov
pop
pop
sbb
and
pop
ror
stos
cmp
mov
movsl
sub
add
sub
sub
cmp
pushl
jmp
or
inc
insl
in
out
cmc
push
pop
lds
jecxz
in
inc
out
lret
mov
inc
pop
mov
fdivrl
adc
sar
pushl
xor
sub
sub
fwait
leave
or
jno
filds
aas
call
andb
and
cmpsl
jo
pop
ds
mov
in
add
push
lds
insl
call
add
mov
fcom
fdivrs
push
call
lcall
insl
mov
cs
dec
outsb
sbb
shlb
js
roll
add
into
xor
movsl
ficoml
andl
cmpsb
sbb
imul
pop
call
xchg
imul
sbb
xorb
mov
pop
mov
cmp
xchg
movsl
and
sbb
outsb
ss
jle
mov
imul
movsb
mov
xor
push
inc
filds
and
in
adc
and
xchg
imul
xchg
popf
imul
push
mov
insl
clc
ret
and
sub
addr16
jle
out
push
jbe
add
jp
pop
bnd
sub
jb
mov
movsl
call
jb
rorb
movlhps
push
inc
mov
cmp
mov
jmp
push
stc
clc
repz
pop
pop
jge
inc
xor
pop
cwtl
in
jl
dec
mov
inc
in
loopne
decl
mov
cmpsb
inc
ret
loope
push
jp
adc
subb
or
xchg
mov
jp
mov
daa
repz
outsb
sahf
mov
mov
dec
inc
nop
or
adcb
fsubs
and
iret
mov
or
pop
pop
sar
jg
sbbb
rcrl
ret
jne
lret
inc
mov
mov
jb
repnz
mov
inc
rorl
insb
or
orl
mov
es
mov
mov
inc
sbb
loop
sub
and
test
lcall
mov
or
mov
sbb
xlat
and
add
xor
rol
rcrb
in
lea
or
pop
ja
std
jecxz
clc
add
loope
hlt
dec
sbb
adc
aam
adc
fucom
inc
inc
test
fdivs
or
loopne
jbe
daa
icebp
fwait
cli
cmpsb
inc
cmp
into
cltd
lcall
fistpll
pop
lret
mov
fcmovbe
jg
std
xchg
aam
mov
or
sub
add
mov
pop
rclb
pop
mov
jl
pop
jg
loop
inc
xlat
pop
pop
sbb
push
aaa
andl
aaa
clc
dec
xor
xor
pop
ret
mov
push
cmp
test
jp
fstpt
cli
mov
icebp
test
mov
or
shrb
inc
jb
mov
jg
stos
adc
pushf
push
ljmp
jg
xlat
xor
fstps
pop
mov
cmpb
mov
fneni(8087
xchg
push
mov
or
sahf
jle
ljmp
mov
sbb
bound
mov
dec
or
hlt
sub
push
lock
out
into
dec
fidivs
psubsb
lock
sub
aad
add
mov
jo
ss
in
push
insl
imul
lea
jns
mov
jmp
inc
sub
sub
ljmp
push
daa
jecxz
mov
ret
int
push
jg
mov
jl
mov
cli
pop
mov
add
cmp
push
rcll
loope
sub
xchg
cmp
aas
jecxz
icebp
push
fbld
pop
jle
cmc
push
arpl
fistps
sub
push
mov
jo
and
push
rol
icebp
add
adc
arpl
insb
cmpsb
sub
adc
imul
insb
mov
lods
inc
inc
push
sbb
movsl
sbb
cmp
jg
shlb
xor
sub
cmc
test
idivl
inc
mov
lret
stc
inc
loopne
sbb
mov
sti
out
clc
test
cmp
xchg
test
stos
push
int
jb
pop
mov
jbe
mov
xchg
pop
xor
loopne
xchg
pop
push
pop
push
xchg
or
neg
jge
divb
call
fmuls
push
test
cmp
inc
adcl
jb
inc
mov
addb
sarb
rorb
icebp
push
mov
daa
orb
sub
std
jle
fsubrs
push
test
dec
mov
movsl
cmp
dec
shr
cs
dec
pusha
loop
lods
insl
movsl
push
es
inc
xor
jl
adc
testl
inc
rorl
aaa
imul
cmc
and
shlb
mov
xchg
xchg
push
and
mov
outsb
lret
mov
mov
add
movsb
cmpsl
xchg
xlat
imulb
movlps
mov
inc
mov
pop
in
sbbb
mov
hlt
fidivs
jg
sbb
sbb
mov
out
scas
or
fistpl
and
push
repz
adc
mov
xor
add
mov
fwait
daa
ss
or
xlat
stos
mov
mov
push
add
cmp
test
jne
stos
pop
cltd
inc
inc
aaa
test
xchg
push
das
sub
sub
sub
jp
lock
jno
inc
or
mov
sub
lar
mov
xlat
dec
sub
adc
fldenv
mov
movups
pop
icebp
xor
mov
xchg
push
pop
stc
sar
ret
xor
in
jmp
orb
mov
cli
cmp
add
das
je
jge
mov
pop
lea
cmpsl
mov
xchg
sub
aam
js
pop
imul
aam
insb
push
js
add
cmpsl
frstor
jbe
data16
mov
mov
repz
test
xchg
fistl
mov
add
push
icebp
test
add
fldl
fidivl
jge
xor
mov
and
pusha
iret
push
rcll
inc
inc
es
loopne
iret
repnz
sub
or
in
and
mov
pop
xor
push
dec
dec
and
icebp
cmp
add
loopne
mov
jg
movsl
adc
or
test
or
nop
cs
adc
sub
aaa
push
arpl
push
push
dec
data16
mov
sbb
fldln2
mov
jecxz
ljmp
mov
and
lods
outsl
cmpsl
movsl
lods
push
push
xchg
in
mov
roll
mov
push
and
jo
lods
adc
lea
pushf
cmp
xchg
std
and
adc
dec
fucomi
lock
cmp
pop
push
xchg
ja
outsl
add
insl
into
sbb
sbb
fbld
subb
ficompl
jl
ret
cmpsb
andb
xor
shr
push
xor
fs
iret
sar
mov
int3
mov
lds
test
and
je
and
scas
psubsw
cmp
or
jl
and
xchg
mov
repnz
lahf
dec
mov
inc
jecxz
or
cmp
mov
movsl
push
enter
mov
mov
jl
cwtl
mov
mov
ret
das
pop
cwtl
or
mov
cld
push
push
call
mov
sbb
fstps
xor
sbb
cld
inc
jg
mov
addb
push
jb
push
push
incb
xor
inc
push
jne
addr16
mov
jns
stos
and
xor
sbb
mov
jg
stos
imul
mov
mov
fdivl
add
xlat
lcall
xchg
mov
adc
gs
filds
cmpb
sub
mov
fcomi
addl
dec
cmp
andb
icebp
ret
test
pop
pop
xorl
inc
mov
clc
outsb
add
in
mov
int
pop
test
dec
cmp
out
icebp
aaa
aam
jecxz
mov
inc
jo
rolb
add
push
cs
sub
inc
ja
mov
sub
in
xor
mov
call
cwtl
xchg
inc
lock
in
popa
movsl
pusha
jl
and
lock
sbb
nop
int3
inc
fisubrl
cmpsb
test
xor
sub
jb
ret
add
and
push
pop
insb
clc
or
add
cltd
or
push
popa
aas
js
sbb
and
and
or
or
cmpsl
jo
pop
mov
jge
pop
jnp
add
push
cmp
add
movsb
lods
outsb
lcall
and
pushf
test
push
in
inc
decl
jg
lcall
xor
ret
aam
das
jae
fs
sub
dec
icebp
fistps
sbb
add
or
shrl
lahf
les
ja
mov
adc
push
xor
repz
push
or
inc
faddl
mov
pop
inc
add
mov
xchg
nop
jecxz
fisttps
stos
pusha
mov
and
xor
or
dec
mov
adc
js
or
movsl
adc
call
mov
xor
push
adc
sets
mov
fldl
int3
mov
int3
inc
inc
xchg
cld
incl
push
push
arpl
sub
aam
ret
cmp
sub
inc
pop
dec
cld
pop
sbb
shrl
inc
jl
inc
sub
stos
loopne
push
mov
int3
in
and
pop
cmp
and
icebp
scas
in
jae
dec
cld
xchg
lcall
imul
mov
sbbb
mov
in
fsts
mov
mov
inc
xchg
inc
aam
push
jg
cwtl
jns
pop
cmp
shlb
jg
mulb
lods
sbb
dec
dec
xor
push
xchg
xchg
adc
stos
lea
inc
in
cs
mov
mov
not
add
sti
shl
stos
or
push
insb
mov
inc
adc
xor
js
cmp
push
and
subl
loope
stc
ss
jg
jne
xor
test
rcrb
xor
andl
shrb
mov
inc
aam
les
call
dec
pusha
js
xor
movsl
cmpsl
jmp
test
outsb
adc
xor
in
cs
push
jmp
leave
nop
enter
gs
and
sub
repz
shlb
lcall
jne
mov
lea
add
movsb
loope
mov
cmc
mov
add
arpl
mov
jnp
adc
sbb
jg
into
sub
in
inc
rcrl
and
pusha
stos
fcmovnu
or
pushf
aaa
rolb
jne
shll
shl
jno
arpl
repz
mov
xchg
cwtl
es
outsb
enter
lret
mov
or
incb
mov
inc
fs
and
mov
sti
test
mov
cmpsb
loope
lahf
inc
stc
enter
inc
pushl
cmpb
icebp
cmp
pop
shll
pop
cwtl
pusha
scas
mov
dec
pop
jo
lea
pop
push
mulb
push
and
xchg
outsb
pop
sbb
sub
sahf
xchg
add
and
push
add
out
lea
fnclex
faddl
fwait
and
nop
jmp
cltd
sti
popa
mov
push
dec
or
nop
out
inc
nop
rol
je
fsubs
lahf
iret
repz
cli
or
push
addb
out
into
xor
insb
fists
mov
mov
or
cmp
xor
das
sbb
imul
jl
inc
and
dec
adc
dec
fwait
adc
ret
push
add
rorl
pop
pop
and
fcmove
aad
adc
add
add
ret
inc
dec
scas
mov
adc
xor
jl
mov
push
dec
or
or
inc
sbbl
mov
sbb
test
mov
mov
mov
jb
mov
stos
or
mov
dec
lock
ret
stos
pop
out
xchg
or
notl
mov
mov
mov
inc
add
add
add
xchg
add
leave
fsubp
aas
push
add
daa
mov
pop
sarl
aas
repnz
outsb
mov
inc
add
push
in
clc
push
mov
ss
add
cmc
push
mov
insl
fdivrp
mov
repz
push
mov
sbb
push
test
and
outsb
mov
or
test
push
pushf
mov
adc
push
and
sarl
jno
jecxz
lds
push
imul
loopne
fdiv
or
xchg
add
filds
js
and
repnz
ds
and
cmp
clc
lods
and
mov
dec
loope
insb
sub
fistpll
sbb
sub
fstpt
xor
scas
or
cwtl
daa
inc
xchg
out
cmp
push
pop
mov
and
leave
or
aad
mov
sbb
sub
sbb
pop
lods
mov
mov
push
lret
xchg
fbld
mov
inc
sbb
jo
pushf
or
pop
mov
inc
pop
add
mov
sub
bound
leave
pop
aas
loop
push
cld
loop
pop
adc
jo
push
jecxz
frstor
mov
loope
push
jmp
sbb
pop
jecxz
xor
shrl
out
jl
lret
filds
mov
adc
pusha
ljmp
clc
test
adc
in
imul
aam
js
repz
push
jnp
pop
ja
call
push
add
sub
call
stos
hlt
pop
cli
fstpl
or
sbb
fstpt
xor
mov
bnd
xchg
pushl
or
mov
pop
push
lods
jl
or
js
loopne
into
mov
out
add
test
xlat
or
stc
lods
mov
incb
cli
inc
adcl
push
add
push
cmp
insl
mov
js
fdivs
outsl
and
jne
jnp
test
test
lea
lock
and
cmpsb
xor
in
xchg
clc
and
push
mov
and
imul
in
push
in
les
push
pop
pop
imul
aas
iret
or
jb
sub
mov
mov
lret
jp
mov
or
scas
dec
add
mov
and
jbe
sub
xchg
mov
js
in
lods
mov
xchg
pop
roll
js
rcr
or
scas
shll
lret
add
inc
push
add
ja
imul
mov
cmp
popa
movsb
inc
push
lcall
orl
jb
psubq
or
test
negb
mov
cmpsl
popa
sti
pop
push
mov
ds
sbb
js
stos
shlb
test
pop
cmc
jp
cmpsl
or
popf
sub
sti
push
jg
inc
inc
clc
hlt
gs
sub
outsl
aad
jg
popf
lea
inc
or
inc
adcl
xchg
sub
ret
or
cmpb
adc
imul
cmc
decl
cmp
push
test
out
mov
fisttps
cmp
dec
or
ljmp
dec
mull
dec
bound
cmp
in
loope
or
mov
sti
push
or
into
loopne
sub
push
rsqrtps
or
bound
lock
mov
push
in
xor
push
je
addb
outsl
inc
lock
cld
cltd
or
jmp
mov
std
les
inc
and
push
add
jns
sbb
out
dec
mov
sub
or
push
xchg
cli
lds
fbstp
mov
pop
in
mov
jge
sarb
loope
js
fldl
inc
adc
flds
adc
dec
or
stos
cwtl
dec
rolb
jg
mov
lahf
lea
aam
fwait
cwtl
jb
fdivr
dec
jl
mov
mov
xchg
and
push
xlat
mov
push
faddl
and
fsubrl
clc
inc
push
adc
ret
test
lods
jae
adc
fcomip
das
adc
jg
or
cmc
push
cmp
dec
mov
push
stos
mov
cmp
sbb
add
inc
xchg
inc
sub
cwtl
clc
lds
xchg
dec
iret
push
jge
jg
mov
push
cmp
rorb
mov
xor
popa
push
push
daa
dec
or
mov
aaa
lock
pop
hlt
sahf
and
xchg
lcall
ja
inc
in
inc
stos
test
mov
mov
and
lods
gs
aam
shll
dec
jmp
adcb
in
outsl
lock
xor
sti
sarb
or
shlb
cmpb
and
lods
mov
mov
push
sub
ss
xchg
add
push
mov
sti
lea
out
sub
mov
clc
sbb
pop
inc
outsl
push
dec
jle
sti
outsb
bound
daa
and
cs
lock
push
cs
test
ret
cli
pop
mov
lret
sahf
sbb
pop
out
cmp
pusha
sti
adc
push
inc
mov
add
pushl
xchg
dec
enter
sub
mov
push
cmpsb
xchg
les
add
enter
add
sti
fsubrp
fists
and
dec
xlat
and
adc
xor
mov
scas
push
jp
popf
loop
movsl
xor
loopne
sub
ret
jmp
fimuls
test
std
int3
test
cld
out
pusha
or
inc
je
loopne
ficompl
push
push
jo
shrl
jl
mov
stos
inc
negb
aaa
roll
jecxz
rcrb
stos
sbb
stc
mov
jbe
push
pop
mov
lds
das
fcoml
cld
jmp
cmc
das
xchg
call
pop
js
pop
das
fisttpl
call
adc
mov
xor
pop
pop
or
jge
cmp
mov
and
jmp
aad
xorl
js
pop
fwait
daa
mov
pop
cld
stos
je
and
loope
call
xor
int
jo
lea
int
dec
repnz
in
lock
pop
sub
cmp
push
pop
cmp
scas
cli
mulb
jns
pop
mov
fsub
mov
movsl
sub
add
outsl
call
test
aas
stos
push
jae
pop
xor
jle
mov
stos
loopne
mov
sub
shlb
mov
scas
pop
or
mov
pop
aaa
mov
inc
dec
mov
jg
daa
push
or
add
inc
inc
fsubr
mov
xor
dec
rclb
pop
shlb
pop
or
jecxz
push
sub
ljmp
ss
sti
sub
pop
jae
scas
sub
push
clc
testb
push
sbb
mov
push
lock
je
stos
xchg
xor
cld
sarl
and
fstl
mov
popf
imul
xchg
test
sbb
in
and
ljmp
mov
xorb
dec
cmp
fs
fwait
lret
orb
xchg
loope
or
adc
cmp
mov
jg
imull
jnp
iret
adc
sbb
lods
adc
cld
lds
mov
sbb
cmp
ljmp
std
mov
orb
shr
pop
push
je
push
loopne
jne
or
outsb
xchg
cmp
inc
mov
ja
inc
adc
std
movb
sbb
sarb
mov
addr16
out
nop
adc
ret
in
or
je
scas
shll
scas
mov
mov
ljmp
pop
test
push
shrb
or
sti
jne
paddb
clc
push
or
push
pusha
mov
cmpsl
enter
test
add
in
stos
xor
mov
dec
movsb
js
test
mov
repnz
out
push
jl
pushw
stos
roll
ror
aad
lds
lcall
sub
and
mov
mov
das
repz
pop
sub
xchg
popa
clc
push
jl
add
subb
adc
or
sbb
inc
test
sti
andl
cmpsb
jns
stc
and
popa
lret
inc
mov
push
insl
outsb
sub
push
in
iret
inc
test
popa
cmp
pop
js
push
cld
je
or
movb
sub
xchg
int3
cmpsl
cmpsb
lret
jnp
scas
xlat
jge
push
cld
pop
out
cmpsl
xor
aam
or
sbb
pop
sbb
xlat
dec
or
or
cs
pushf
mov
lea
xorl
mov
bnd
mov
inc
pop
mov
jno
mov
xlat
ss
imulb
repz
mov
in
out
andb
adc
mov
testb
jbe
sbb
stc
mov
pop
jge
rcrl
cmp
cmp
jmp
loopne
and
insb
inc
mov
lock
xor
fistpl
sub
test
lds
stos
inc
jo
ja
lods
test
es
or
in
xchg
push
neg
js
stc
sahf
lahf
mov
test
sub
pop
das
jecxz
daa
mov
sbb
and
and
stos
xor
jo
fstpl
cmc
rolb
nop
cmpsb
movsl
sub
addr16
andl
sarb
pop
sub
in
movsb
sbb
xor
sti
push
js
enter
popa
adc
aas
pop
bound
je
lea
mov
xchg
inc
lock
and
sub
pop
std
pushf
xchg
xlat
inc
sub
xor
sub
jmp
addr16
filds
push
and
mov
vpackuswb
gs
cmp
dec
out
cmp
add
shll
cmpsl
leave
inc
roll
jnp
and
loopne
lods
xchg
fisubrs
rcl
popf
or
js
movsb
mov
mov
inc
xor
jge,pt
outsl
pop
jnp
std
sub
repnz
pop
mov
sbb
cmp
pop
dec
loope
adc
fcmovb
stc
cmpsb
mov
scas
lea
leave
mov
ss
push
clc
movsb
sub
mov
xor
jb
mov
add
push
jnp
add
or
loope
fisttps
xor
fucomi
xor
push
inc
ljmp
lea
push
xor
in
icebp
rcll
push
sbb
cmc
push
fcmovu
stc
inc
jnp
lds
adc
jle
mov
add
dec
sbb
add
insl
imul
jb
sbb
or
je
xchg
sti
mov
mov
xor
divl
push
ljmp
pusha
inc
mov
insl
inc
and
mov
mov
dec
jge
lock
adc
sarb
int
adc
push
jmp
inc
xchg
aaa
mov
fisttpl
cld
or
mov
mov
lods
sub
and
in
cmpsb
xorb
pop
inc
lahf
mov
dec
repnz
push
inc
test
and
aad
jbe
inc
add
sarb
in
outsl
aad
test
jl
js
outsl
pushf
iret
mov
jnp
pop
jecxz
sbb
flds
pop
dec
inc
sarl
jb
jmp
dec
adc
ret
test
pop
cmpsl
loop
push
cmp
int3
mov
ja
rolb
sub
mov
fbstp
lcall
jecxz
mov
inc
mov
mov
sbb
adc
stos
inc
sti
shl
add
xor
cmp
mov
sbb
push
call
mov
xchg
dec
cmp
xchg
sbb
dec
mov
outsb
shlb
xchg
cmp
xchg
loope
fs
std
loope
push
popl
outsl
jp
inc
sbb
loop
push
pop
push
icebp
test
fwait
ljmp
cs
adc
xor
pop
test
push
loop
or
clc
stos
mov
loopne
repnz
pop
dec
inc
cmc
dec
xchg
movsl
jnp
mov
call
int3
pop
add
push
imul
fcoml
pop
or
sub
mov
outsl
mov
adc
cwtl
daa
icebp
mov
lock
xor
aaa
arpl
out
scas
mov
repz
mov
aas
sub
add
xor
jg
push
adc
xchg
cmp
mov
mov
lahf
mov
inc
js
aaa
add
mov
inc
cmp
in
jecxz
ror
push
stos
xorl
adc
xor
sti
sbb
popf
xor
std
inc
inc
fsts
mull
shlb
fstpl
mov
mov
jb
test
ss
jecxz
dec
ret
sbb
stos
test
mov
insb
jle
ret
mov
mov
in
and
insl
pop
loopne
es
aam
in
orb
dec
xchg
push
pop
jl
clc
movsl
mov
jns
push
fistpl
and
and
daa
or
jg
and
xchg
repz
push
cmp
xchg
inc
pop
mov
cwtl
es
cmpsb
out
dec
push
stc
lock
adc
outsb
shrb
cmp
xchg
mov
mov
xchg
or
push
xor
sbb
call
mov
scas
mov
push
insb
inc
nop
xchg
xor
push
cmpsl
dec
xchg
sbb
sti
dec
pop
lock
in
arpl
popa
cmp
cmp
push
incl
aaa
mov
push
push
push
sub
bound
add
movsl
jp
incl
xor
cwtl
pop
lea
mov
push
cmp
lcall
jmp
es
cwtl
decb
movb
add
sbb
pop
mov
je
cwtl
add
fldcw
sahf
std
add
pop
jle
inc
repnz
dec
pop
je
inc
and
mov
testb
mov
fst
cltd
cltd
dec
and
jb
mov
dec
inc
sub
add
adc
sbb
int3
leave
cmc
sbb
push
loope
subb
xchg
int
dec
into
pop
orb
xlat
push
hlt
lahf
and
arpl
jno
pushf
subb
movsb
fdivl
pop
fiaddl
mov
hlt
or
les
mov
clc
pusha
lret
dec
add
push
orb
mov
xor
xorb
adc
cmpsb
xor
gs
mov
pop
dec
adc
cwtl
sub
fwait
ret
shlb
xor
adc
std
xchg
xor
daa
jle
pop
dec
test
mov
xor
xchg
imul
hlt
sub
ret
mov
sub
mov
mull
stos
ss
mov
or
lods
dec
jbe
mov
mov
lods
arpl
push
add
sbb
fisttps
xor
xchg
xor
add
jnp
cmp
cmp
inc
lahf
ds
shlb
inc
cwtl
es
repz
fs
push
push
dec
inc
enter
sub
test
mov
sarl
fdivrs
adc
lock
mov
insb
test
sbb
adc
fidivrs
push
jae
sub
mov
mov
pop
mov
adc
adc
inc
outsl
sbb
push
shll
mov
call
xchg
imul
rolb
mov
jnp
imul
jae
lcall
arpl
add
sbb
dec
clc
pop
popa
sbb
lea
jbe
stc
nop
add
jle
std
dec
push
inc
sbb
dec
and
mov
push
adc
les
popa
daa
mov
jle
lcall
dec
add
aam
incb
pop
or
pop
mov
fisttps
mov
jae
push
mov
xor
sbb
dec
sub
push
cltd
jae
jl
sbb
insl
cltd
pop
incb
std
xor
and
shll
mov
or
clc
lret
dec
fcompl
scas
lds
xlat
pop
and
add
call
lods
repz
push
je
jge
aam
push
add
sub
sbb
subb
or
inc
lock
adc
pop
in
lods
pop
ja
shl
xor
adc
out
cmp
adc
dec
dec
js
gs
dec
adc
xchg
outsl
int3
shlb
shlb
ror
inc
xor
pushl
popf
cmp
subl
mov
pushl
pop
dec
mov
icebp
mov
popf
mov
cmpb
mov
call
outsl
aaa
sbb
and
mov
cmpsb
jge
clc
incl
sbb
jl
lahf
jmp
xchg
jmp
inc
in
hlt
pop
pop
nop
cwtl
sub
jg
js
cld
xor
fdivr
or
jle
xchg
adc
sub
out
xor
mov
jg
sub
cli
sub
sbb
imul
std
call
stos
push
shlb
loope,pt
gs
je
inc
mov
sti
out
pop
test
orb
lret
iret
nop
test
sbb
pop
xchg
sbb
inc
sub
jge
idiv
les
mov
test
gs
cmpsl
js
push
adc
hlt
loopne
mov
imul
mov
ficoms
push
pop
inc
add
lock
jmp
call
sbb
push
mov
push
jecxz
jge
mov
movsl
sahf
pop
jmp
inc
fdivl
fstl
jne
mov
inc
pop
inc
or
in
sbb
lock
sbb
mov
dec
leave
adc
pop
cwtl
cmpsb
rolb
aaa
fdivrs
jae
out
cwtl
test
test
xor
adc
popa
sbb
inc
int
out
jns
sub
std
aaa
inc
mov
push
sbb
ret
pop
sbb
inc
out
cmp
push
repnz
cli
dec
sub
test
popa
rolb
outsl
das
lds
jns
pop
leave
xchg
jne
and
aas
mov
jge
popf
mov
pushf
test
fldl
cld
sbb
pusha
inc
cs
mov
mov
mov
or
add
sub
outsl
sub
dec
popa
outsl
call
pop
jmp
push
inc
jno
sub
xchg
inc
bound
hlt
inc
jo
jmp
push
fsts
push
jle
mov
call
xchg
jb
mov
icebp
or
pop
inc
mov
cmp
cli
pop
and
lock
movl
dec
fwait
sub
adc
incl
dec
pop
jecxz
les
dec
inc
jecxz
stos
fcmovnb
popf
adc
inc
pop
mov
xor
stos
loope
stc
mov
cmp
pop
stos
pop
fisttps
xchg
push
sbb
outsl
mov
or
xor
sbb
dec
mov
jne
mov
enter
roll
lds
inc
rcr
xchg
dec
inc
push
xchg
pushf
mov
fwait
mov
lds
sbb
push
sbb
inc
jmp
lds
rcrb
in
popa
leave
dec
ret
adc
xor
or
xor
sbb
sbb
jle
lcall
adc
push
pop
outsl
or
add
add
stos
data16
inc
cmpb
mov
jmp
mov
sub
sub
push
dec
or
mov
push
pop
fnstsw
insl
dec
scas
pop
clc
adc
mov
push
faddl
xchg
cwtl
cmc
and
xchg
cli
icebp
push
and
int3
push
dec
sbb
fsubrs
jp
lods
mov
lcall
shrb
loopne
repnz
inc
cli
pop
jle
pop
fisttpll
xor
push
and
jg
pop
xchg
out
adc
mov
test
jmp
mov
dec
inc
call
enter
mov
scas
les
test
sbb
fadds
scas
enter
out
sub
shll
add
inc
sbb
shrl
jmp
cmpsl
xor
inc
mov
les
fstpl
mov
cmp
jo
push
xchg
mov
dec
in
cs
lahf
lock
adc
test
jecxz
jge
add
lret
loop
fisttpll
inc
add
hlt
call
jle
xlat
sbb
in
pop
jns
sqrtps
loop
sbb
lea
mov
sub
inc
pushf
pop
ss
outsb
sbb
cmc
push
test
std
aaa
cs
jmp
fs
fdivs
inc
pusha
in
scas
clc
jg
outsl
mov
mov
mov
fidivl
outsl
or
sub
jo
and
jbe
pop
repnz
mov
rcrl
ja
enter
mov
xor
jl
inc
mov
and
pop
jnp
pop
pop
mov
fldl
fstpt
mov
and
or
and
sub
add
inc
mov
notb
push
fistps
ret
cs
add
mov
mov
add
js
pop
imul
aaa
mov
mov
outsb
mov
aas
js
push
shrb
ret
icebp
das
push
push
xor
pop
push
call
inc
addl
xchg
cli
adc
jle
and
xlat
loop
add
cwtl
js
mov
sti
lret
out
mov
jl
xchg
cltd
sbb
fsts
lea
mov
lret
adc
bound
mov
lods
jle
cmp
cltd
inc
pop
pop
mov
inc
dec
push
jbe
fdiv
cmp
mov
cli
dec
mov
push
push
push
sub
lret
icebp
sar
pop
mulb
mov
sbb
lods
ss
orb
jmp
mov
lret
pop
xchg
cmp
mov
popa
dec
xchg
pop
sub
test
lods
std
insb
aaa
add
shll
xor
add
jp
adc
adcb
sti
dec
ja
pushf
sub
ret
stc
jmp
je
inc
aad
push
repz
inc
dec
jcxz
out
xor
push
sub
lods
aam
test
sub
push
mov
lods
or
inc
fildll
aaa
jge
lar
pop
xor
sbb
pusha
xor
jo
movb
jmp
mov
jg
cmp
cs
jnp
into
call
mov
mov
hlt
and
aas
cmp
dec
jne
mov
mov
lret
lret
jo
insb
push
dec
les
inc
xor
mov
sbb
je
sub
pusha
mov
je
sbb
push
xchg
stos
add
push
repz
es
stc
mov
int
mov
jns
jmp
dec
add
or
mov
jge
jne
sub
test
scas
outsl
mov
shrl
ret
test
aad
xchg
sub
push
or
ret
jge
mov
mov
nop
movsl
stos
or
inc
jae
add
or
lcall
sbb
or
sbb
mov
sarb
push
clc
push
jno
xchg
dec
bound
xor
cmp
push
sbb
addb
sbb
cltd
icebp
rorl
jl
ds
jo
dec
cwtl
cld
or
fcomp
xchg
into
dec
repnz
das
fmuls
pop
std
mov
xchg
fnstsw
shlb
data16
push
fcoms
sbb
and
add
add
mov
jnp
mov
dec
shrl
lods
or
pop
jns
pop
mov
and
add
xchg
fbstp
loop
push
or
frstor
sub
ljmp
mov
out
adc
mov
sbb
rcl
xchg
out
stos
push
inc
cld
ljmp
or
jbe
ljmp
call
cmp
jno
pop
mov
imul
test
cmp
add
xor
or
aad
jo
andl
filds
mov
xorb
jbe
lods
sti
subb
icebp
xor
daa
mov
roll
das
int3
mov
je
call
fsub
and
ja
test
scas
xor
inc
and
out
sub
das
fisttpll
ret
ret
or
loop
adc
or
fwait
call
cmp
or
lock
fwait
jecxz
or
ret
pusha
sti
jne
or
adc
pop
pop
jl
xchg
push
cmc
pop
adc
ljmp
pop
fstpt
mov
push
mov
aam
jbe
call
icebp
inc
out
js
ds
js
movsl
sbb
cmc
push
fimuls
fwait
pusha
rol
inc
movsl
sti
mov
sub
aad
pushf
sbbl
jmp
jge
loopne
loop
test
sub
dec
mov
cld
ret
add
xchg
fdivrp
mov
dec
movsl
nop
pop
ja
add
inc
mov
or
inc
xchg
jl
mov
mov
xor
stos
je
dec
adc
push
in
mov
outsl
dec
adc
mov
add
mov
cmp
mov
ljmp
xor
inc
fs
push
or
movq
lcall
or
pop
cmp
notl
mov
jno
or
mov
cs
loope
pop
imul
add
subl
cwtl
fwait
popf
jl
test
xchg
fidivl
aam
inc
jnp
dec
fwait
mov
push
mov
mov
sti
in
or
popf
sub
add
inc
jno
cmpb
add
jl
jno
xor
sbb
mov
and
mov
stos
and
add
dec
adc
push
std
push
dec
mov
inc
aam
loopne
test
jmp
jle
pop
push
mov
inc
not
add
add
adc
adcl
hlt
call
mov
sbb
pop
sbb
add
add
icebp
push
test
icebp
lods
movsl
loop
sbb
aad
pop
jmp
leave
or
sub
mov
sub
fwait
mov
cmpb
dec
clc
inc
popf
jg
pop
test
into
push
jnp
outsl
call
stos
push
test
je
ficoml
pop
xchg
ret
pushl
mov
daa
adc
fistpll
repnz
lods
jp
cmp
cmp
daa
fistpl
push
pop
push
enter
cmpsb
mov
jp
and
rorl
cwtl
hlt
fucomip
or
or
sti
jl
les
xchg
jp
aam
repnz
mov
xor
out
loopne
inc
cs
outsl
ror
mov
mov
inc
xchg
int3
cli
ret
ljmp
pop
xor
cli
xchg
pop
sbb
fiadds
jno
xor
add
lock
fbstp
popa
mov
push
mov
repz
popa
call
cs
or
or
pop
insl
es
add
mov
stos
repnz
fdivrs
lods
dec
adc
push
lds
jns
mov
in
and
jmp
ss
and
cld
mov
push
jp
es
daa
xor
inc
xchg
cli
orb
daa
cmp
adcb
mov
aad
ret
es
push
sub
je
xchg
setbe
adc
adc
aam
jae
cmp
xor
inc
xor
gs
mov
inc
pop
pop
cltd
or
cmp
xchg
vandps
jl
sub
dec
or
lods
insb
out
cmp
push
loopne
call
inc
ss
xor
add
mov
dec
test
xor
movsb
cmpb
in
divb
nop
inc
xchg
pusha
cmpsb
or
repz
fstpl
dec
mov
out
mov
test
adc
mov
test
pop
mov
sbb
repnz
mov
adc
das
fcmovnu
rclb
sbb
cs
ret
and
jle
mov
add
mov
lcall
ret
popf
jno
lock
dec
sbb
mov
lods
in
mov
jbe
ret
and
sbb
and
ret
add
outsb
cld
jmp
imul
imul
and
outsl
adc
dec
aad
jp
insl
movl
adc
pop
or
and
mov
sub
outsl
add
xor
loopne
or
sahf
mov
inc
mov
es
ljmp
jl
stos
or
cld
xor
and
aaa
mov
fs
dec
cmpsl
and
adc
mov
add
scas
or
js
incb
xchg
fucomip
negb
fadds
inc
and
adc
push
or
inc
and
test
adc
pop
or
jmp
jmp
fs
jle
outsb
roll
and
inc
dec
in
das
add
push
sub
lea
xor
lret
test
mov
push
in
mov
xor
fisttps
call
dec
sub
mov
add
jnp
lret
cmp
loop
mov
les
push
inc
jmp
add
dec
jp
adc
idivl
cmpsl
loopne
fwait
jbe
pop
pop
popa
cmc
pusha
mov
cld
sbb
mov
stos
jbe
les
inc
or
sbb
sarb
iret
add
inc
pop
xor
addb
dec
xor
lock
scas
rolb
and
icebp
fistl
or
icebp
pop
std
loopne
nop
sbb
adc
lea
out
jae
imul
ss
dec
add
loopne
lods
jo
mov
sub
iret
and
aaa
cli
cli
xchg
xchg
sbb
inc
dec
inc
dec
lock
sub
repnz
sub
out
ds
int
fstp
fsin
enter
add
es
movsl
loopne
adc
add
push
or
jle
mov
fiadds
cmp
pop
movsb
subl
decb
sub
inc
jecxz
pusha
push
pop
push
jb
outsb
int3
mov
pop
jle
mov
js
dec
arpl
insb
sbb
sub
in
ss
rorl
pop
out
push
es
adc
push
mov
cli
inc
ss
aaa
sbb
xchg
lcall
push
jle
and
push
dec
jmp
push
jmp
not
jo
jmp
nop
sub
mulb
cmpsl
xchg
daa
addr16
mov
shlb
pop
cltd
xor
mul
inc
sub
adc
jbe
push
or
sbb
mov
sti
lcall
sahf
insb
jp
push
scas
sarb
inc
or
push
mov
adc
cmp
pop
pop
pop
subl
clc
dec
jno
mov
add
cmp
lea
mov
or
in
sarb
aam
sbb
movsb
or
lock
adc
in
add
enter
or
out
mov
or
xchg
outsb
jmp
icebp
repnz
cmpsl
repz
imul
dec
lds
lcall
scas
lock
or
lahf
pop
lcall
loop
clc
xor
push
pusha
inc
xchg
mov
sub
lret
outsl
not
testl
push
ret
daa
lret
int3
add
pop
mov
ds
xor
cmc
mov
es
pusha
jecxz
adc
xchg
and
jl
mov
jns
inc
jle
add
inc
and
cs
push
loopne
das
out
mov
rcr
adc
das
aam
sbb
add
sbb
gs
push
ret
push
andl
fbstp
xchg
lds
push
mov
or
popa
or
cli
lahf
scas
fadd
test
mov
gs
push
and
jne
loopne
jae
or
lea
iret
adc
stos
rcrl
xor
or
jg
stc
adc
sbb
adc
add
jecxz
sti
pop
ljmp
cwtl
loopne
jne
pop
fldcw
cmpsl
fucomi
shlb
push
cmp
clc
ud0
stos
ljmp
xorb
mov
fcmovu
sbb
sbb
stos
or
mov
pop
cli
inc
pop
push
pop
push
xor
ja
sub
test
xor
jge
stos
iret
adc
mov
cmp
xor
cs
fdivl
or
xor
iret
fcomps
lea
xor
in
sub
ffreep
or
mov
sbb
outsl
hlt
dec
bound
mul
data16
mov
in
popf
test
int
cmpsb
call
inc
mov
sub
clc
xchg
incl
xchg
mov
aas
and
fmull
mov
add
inc
enter
icebp
cmpsb
lods
ds
cltd
mov
mov
popf
mov
andb
jmp
jecxz
cli
xchg
pop
sbb
shrb
sbb
or
fdivr
outsl
dec
push
shll
inc
push
ds
adc
dec
stc
test
sbbb
adc
push
pop
movsl
test
and
or
dec
or
unpckhps
pushf
pop
test
xor
shll
cs
rorl
xor
pop
hlt
inc
push
sub
lds
clc
sbb
int3
lods
xchg
xor
das
cld
outsl
jne
pop
sub
mull
push
inc
call
call
into
pop
int3
inc
mov
incl
jecxz
nop
and
and
jg
sub
outsb
clc
adc
mov
sbb
inc
xor
xchg
jge
inc
lret
repz
aas
sahf
fsubr
cmp
es
cmpsl
loopne
rol
and
lea
jo
cmpsl
cld
cmp
push
mov
in
fcoml
push
shr
inc
roll
ss
orb
scas
mov
mov
xor
shrb
and
stos
call
or
xlat
push
das
pop
ds
out
mov
cwtl
sub
roll
out
into
cmp
incl
or
inc
mov
xor
std
or
xchg
iret
adc
fxch
push
or
mov
popa
mov
sub
mov
das
inc
jo
pop
dec
jne
sbb
pop
xchg
mov
icebp
pop
xor
mov
sahf
or
dec
dec
cld
mov
in
or
sub
or
jg
shl
pop
out
cmp
jno
call
loop
es
sahf
xchg
sbb
daa
push
dec
in
xchg
notb
je
nop
ss
cli
dec
jae
adc
sub
out
out
cmp
jg
setne
and
repz
shrl
fdivrs
scas
mov
pop
dec
push
push
rsm
shll
test
or
lcall
cli
push
sbb
xchg
pop
xchg
jge
lret
inc
test
pop
arpl
popf
arpl
popf
jne
inc
cld
daa
push
aas
dec
mov
adc
and
xchg
sbb
loopne
fmull
icebp
fistps
inc
imul
daa
hlt
inc
shlb
mov
mov
adcl
inc
mov
push
leave
mov
pop
imul
rcrl
ss
pop
or
popf
xchg
pop
or
inc
push
mov
mov
bound
mov
ret
pop
add
xor
stc
mov
sbbb
fbstp
xchg
and
scas
pop
loop
and
pop
mov
inc
popf
push
call
mov
stc
or
jg
adc
pop
imul
mov
outsl
and
jl
jbe
push
loope
adc
mov
and
sti
sub
jle
xchg
scas
sub
js
stos
mov
cltd
int3
adc
leave
xlat
add
mov
dec
pop
and
pop
xchg
sbb
pop
push
and
mov
fwait
mov
inc
jo
cld
and
int
xor
clc
jmp
mov
cmp
mov
aad
cmp
mov
or
iret
xchg
lcall
loopne
jg
cmpsl
sahf
loope
inc
pop
stc
clc
mov
xor
mov
loop
mov
add
adc
sbb
sbb
pop
push
cmp
lds
sbbb
ficoml
mov
xchg
xchg
js
outsl
mov
mov
imul
sbb
outsl
sahf
sbb
mov
adc
ss
jg
add
call
mov
mov
or
and
ljmp
test
iret
int3
mov
in
pop
stos
xchg
imul
cltd
ficoml
arpl
loope
inc
aad
xor
cli
incl
dec
lods
adc
jb
rolb
lahf
cmpsl
pusha
insl
pop
xor
mov
jp
or
sbb
inc
aas
add
push
outsb
test
mov
and
in
repz
xchg
mov
int3
mov
xlat
add
pop
in
int
sbb
jmp
outsl
outsl
cmp
xchg
push
sub
icebp
pop
sub
andb
outsb
lea
into
fnstsw
adc
cmp
popa
aaa
fsubrl
lret
xchg
dec
push
icebp
dec
adc
or
dec
sub
ljmp
out
and
les
pop
jecxz
xor
insb
std
out
ficoms
pop
pop
sti
lahf
sti
jb
call
das
cmp
xchg
sbb
xor
jbe
push
insb
lock
cld
lds
add
add
jns
incl
testl
loope
adc
shll
adc
test
dec
mov
sbb
jb
pop
mov
and
outsb
jnp
hlt
mov
ds
in
cli
inc
out
jg
ret
pop
xor
jns
or
nop
ret
inc
dec
mov
push
xchg
pushl
xchg
or
mov
jg
pop
pop
xchg
mov
xorb
ret
pop
sbb
rcr
cmp
add
xchg
ja
xchg
rorl
lahf
cmp
das
popa
inc
repz
inc
incl
pop
out
mov
xchg
aaa
sub
iret
inc
fmuls
jmp
or
jg
int
ljmp
mov
inc
fstps
dec
jp
fdivl
cmp
jne
push
pop
ss
push
adc
pop
testb
cwtl
adc
loopne
sbb
pop
cmp
sbb
bsr
add
loop
ss
xor
mov
pop
js
mov
inc
data16
adc
movsb
xor
sub
sbb
sbb
inc
into
mov
lods
mov
lds
das
push
andb
xchg
xchg
jle
add
or
pushf
lcall
pusha
cmpl
sti
scas
or
outsl
add
test
js
out
sub
xchg
add
sbb
insl
fs
pop
push
adc
cli
dec
insb
popf
and
lods
fildl
or
cmp
and
das
fdivrl
stc
push
popa
divl
jmp
cld
sar
std
adc
cmpsl
add
pop
pop
popa
xor
sub
sbb
push
mov
ljmp
subb
sarl
in
sbb
sub
pop
sub
sub
dec
push
fadds
sbb
mov
cmp
jnp
sbb
iret
cwtl
inc
mov
push
in
decl
pop
scas
es
outsb
and
xrelease
mov
mov
test
testb
jb
rorl
sti
jb
imul
fsubrs
dec
bound
int3
mov
out
lret
jmp
adc
aad
pop
add
mov
movsb
out
push
lret
adc
dec
addb
call
push
in
sub
mov
push
mov
arpl
add
sbb
fwait
and
das
mov
xchg
cwtl
jns
aas
sub
int
mov
and
add
xchg
sub
mov
mov
divb
add
cmp
xchg
sbb
rol
add
sbb
aas
jno
push
pop
test
das
scas
fidivs
cwtl
rol
ret
hlt
aad
push
ds
push
pop
jecxz
ljmp
mov
subb
sub
jbe
dec
pushf
ret
add
push
mov
inc
adc
fdivrs
scas
jge
adc
pop
mov
addr16
popf
xor
decl
sub
xorl
push
icebp
movsl
mov
rorb
lahf
mov
int
cmp
sub
imul
outsl
call
or
mov
push
pop
and
and
stos
dec
mov
adc
mov
icebp
and
cmpb
scas
push
or
push
bound
lds
mov
push
shlb
mov
sahf
mov
outsb
lock
and
out
jns
pop
cmc
inc
cs
pop
or
addr16
out
mov
adc
in
mov
scas
mov
aas
loope
cmpb
mov
or
or
call
cmp
mov
int3
mov
push
mov
sub
sbb
xor
adc
outsl
mov
add
es
and
insl
push
inc
popf
cltd
mov
pop
sbb
sub
push
mov
rolb
or
sub
shrl
insl
cld
das
fnsave
add
sarb
stos
adc
and
mov
jne
lock
fdivrs
xchg
sub
daa
in
inc
sar
jmp
in
ja
inc
shll
cltd
xchg
lcall
loope
clc
inc
or
jl
daa
mov
mov
in
fwait
cmp
add
sbb
add
jg
mov
fwait
and
int
jl
in
xchg
cmpsb
xchg
or
and
pop
fstpl
push
negb
insl
push
cmc
cmp
add
adc
aaa
mov
shrb
pop
mov
fwait
outsb
fs
enter
stos
mov
lret
sbb
lock
into
xchg
outsl
push
jb
pop
push
dec
test
idiv
sbb
adc
add
movsb
inc
sti
lcall
rcll
daa
mov
and
arpl
into
mov
jge
std
outsl
fisttps
fwait
add
inc
or
pop
adc
aaa
aad
into
jns
stc
movb
dec
xchg
movsb
cli
pop
jmp
scas
xchg
out
sbb
ljmp
xchg
mov
mov
or
mov
sub
or
out
jge,pt
inc
xor
lcall
subl
leave
xchg
cwtl
adc
dec
inc
or
clc
mov
xchg
adc
lds
jno
push
inc
mov
clc
push
faddl
test
fists
stos
xchg
nop
jmp
or
rorb
xchg
inc
or
scas
mov
mov
fcoms
mov
and
push
stos
test
inc
lods
cmp
inc
inc
xchg
arpl
outsl
inc
inc
push
push
cltd
jne
insl
rcrl
icebp
popa
push
xchg
inc
pop
jl
mov
cltd
into
sbb
mov
pop
sub
sub
inc
pop
add
dec
pop
out
pusha
and
add
xor
jg
mov
mov
rcll
sbb
lea
sbb
pop
inc
jnp
cmpsl
adc
loop
iret
cmp
xchg
push
ss
das
jle
ljmp
push
das
std
outsl
aaa
mov
aaa
inc
adc
cmpsl
test
cmp
add
aas
aaa
mov
mov
pop
out
lds
cld
mov
lcall
jg
mov
ret
sti
imul
add
xor
pop
adc
dec
inc
call
push
push
cmpsb
xor
test
sahf
fnstsw
enter
cld
shlb
push
mov
jno,pn
mov
outsb
addr16
inc
loope
xchg
int3
stos
jp
std
cmp
and
aaa
sbb
dec
add
movsl
popf
dec
sti
mov
push
sahf
xchg
icebp
mov
adc
nop
adc
cmp
fnstenv
sub
pop
test
fildll
adc
fsubr
mov
xor
lret
mov
movsl
push
out
adc
xchg
insb
fidivrs
loop
gs
and
xchg
jbe
adc
adc
das
mov
mov
pop
xchg
pusha
les
loop
dec
mov
orb
stos
imul
and
movsb
clc
into
dec
push
aam
xor
cltd
push
orb
call
adc
inc
mov
mov
adc
ss
icebp
or
push
cmpsb
and
loopne
dec
push
or
or
push
jle
popa
mov
xchg
and
xlat
inc
push
inc
lods
fcoml
jnp
subl
pop
aas
fs
js
ljmp
hlt
roll
lea
roll
clc
fstps
inc
incb
pop
sbb
xchg
hlt
popa
add
in
gs
mov
sbb
dec
sahf
mov
pusha
jnp,pn
outsl
mov
xor
mov
adc
and
testb
and
inc
jl
mov
cld
imul
or
mov
pop
mov
aad
jle
push
sbb
ret
xor
insb
insb
sub
loopne
pop
jb
jp
cwtl
xor
mov
pop
xor
mov
push
loopne
jmp
sarb
or
sub
lds
das
jp
mov
jle
pop
fbstp
cli
xchg
cmp
sbb
sti
dec
aaa
xchg
push
nop
mov
xor
jae
xlat
mov
in
pop
inc
xor
arpl
pushf
shll
push
adc
pop
daa
and
and
outsl
insl
mov
dec
shl
inc
inc
inc
data16
mov
jb
mov
push
pop
sbb
pop
inc
sbb
mov
xchg
mov
cli
fadd
imul
inc
lock
and
jl
mov
mov
push
xor
push
pop
int3
adc
xor
aam
in
test
xchg
push
jo
mov
stos
xchg
push
lcall
lcall
mov
dec
adc
lods
aaa
cmp
cmp
testb
je,pn
push
and
lret
lods
imul
jmp
lock
sti
movsb
push
hlt
fistpl
add
fs
xchg
cmc
fdivrl
call
mov
adc
ja
push
xchg
pop
or
inc
dec
push
test
cli
dec
dec
mov
pop
and
test
lea
js
imul
pop
mov
je
lods
mov
jle
ret
push
rorb
adc
cmpsb
daa
lret
inc
notb
add
test
add
aad
jg
sbbl
add
push
shrb
aad
sub
and
sbb
sbb
xchg
lds
in
xor
or
and
cmp
mov
xchg
add
jle
incb
pop
sbb
fiadds
xchg
mov
or
mov
ja
xchg
int3
iret
xchg
xchg
mov
dec
adcb
loop
lea
dec
ljmp
jbe
push
jb
movsb
repz
loopne
pop
jnp
nop
mov
xorb
pushf
push
aaa
scas
jns
loop
sbb
scas
pushf
cs
push
xchg
mov
mov
popf
mov
fiaddl
xchg
outsl
lds
mov
dec
sar
in
mov
and
add
cmp
pop
pop
inc
push
xor
das
ljmp
dec
adcb
movsb
add
and
in
lods
push
fsubrs
push
jb
out
call
push
std
shll
push
shlb
mov
push
cwtl
cmc
lds
mov
pop
ljmp
imul
mov
fnsave
xor
push
xchg
pushf
lock
add
and
sbb
cld
ret
roll
lret
or
mov
dec
dec
jg
mov
adc
lds
lret
mov
dec
movsl
lods
mov
nop
and
inc
loope
sbb
fistpl
testb
rcll
mov
lcall
sub
mov
clc
xchg
mov
push
cmp
stos
dec
push
cmp
lods
pop
jle
mov
fwait
add
les
inc
jl
incl
inc
adc
jb
insl
sub
mov
pop
jecxz
popa
jp
jp
and
dec
jbe
and
jo
sub
je
inc
je
mov
stos
push
lds
movb
pushf
jb
cmp
loop
inc
std
push
ficoml
or
and
decl
push
movsl
and
mov
in
mov
mov
stc
pusha
sub
decb
cld
leave
scas
bnd
cs
mov
lods
loope
cmp
cmp
adc
jecxz
jnp
add
aas
les
mov
and
cmp
js
push
roll
sub
hlt
je
and
stos
add
les
adc
jae
lds
shlb
test
adc
xor
clc
jmp
inc
mov
pusha
jmp
in
xor
sub
int
repz
push
add
inc
pop
mov
es
jge
fisttpll
adc
jle
int3
subb
pushf
adcb
in
xchg
jge
add
mov
test
inc
dec
lea
cld
leave
add
adc
add
xor
push
insb
xor
jb
xlat
pop
and
push
fs
frstor
and
loope
inc
or
inc
ljmp
movsl
push
ja
loopne
jae
loopne
dec
mov
sti
adc
jae
leave
cmp
cmp
pop
sbb
test
roll
fldl
call
mov
aam
mov
call
jns
mov
sbb
lcall
es
or
or
stos
jae
mov
mov
push
sarb
push
inc
and
clc
scas
sti
mov
jp
aaa
adc
sbb
nop
cmc
push
xorb
stos
loope
adc
mov
daa
pop
or
ret
popf
add
je
insl
ss
xchg
mov
sub
adc
fisttpl
and
xchg
or
fs
mov
sub
ja
aam
or
aaa
xlat
es
icebp
pop
lret
jl
xor
xchg
mov
mov
or
sbbb
dec
int3
dec
push
adc
mov
mov
dec
jl
das
rcl
jo
sbb
out
cmp
fcomip
add
push
gs
cli
enter
xchg
cmp
pop
test
jo
movsl
inc
and
sub
sub
push
pop
jne
inc
insb
pop
std
push
dec
adc
or
cmp
xchg
push
pop
fwait
clc
arpl
xchg
int3
adc
hlt
or
cmp
jmp
cmpsb
jmp
jae
xchg
adc
ret
and
test
dec
and
leave
aam
jg
cmp
popf
sbb
mov
jns
jle
and
mov
push
or
cli
cmpsb
jle
xchg
cmp
cmpb
pop
or
fnstsw
lds
fsubr
sub
rcl
rolb
movsb
inc
clc
out
dec
xchg
ja
out
decb
clc
dec
dec
js
shlb
insb
cmc
and
movsb
test
lea
sbb
adc
and
dec
rcl
jp
out
mov
pop
pop
insb
lea
lret
in
scas
je
or
cmc
adc
jae
out
cli
jge
push
sbb
mov
pop
xchg
int
movsl
mov
push
push
sti
lock
pop
outsl
int
lret
xor
adc
addr16
mov
cmp
cld
xchg
mov
aaa
and
jnp
in
pushf
mov
or
adc
das
adc
mov
loop
sub
lret
or
mov
icebp
mov
subb
aad
push
clc
mov
mov
add
or
jbe
movsb
push
std
lods
das
jge
mulb
push
cmpsb
sub
xor
std
out
mov
and
add
dec
and
push
fbld
pop
stc
lea
sahf
movsb
add
jno
jbe
mov
jle
mov
jg
loop
ret
and
aam
std
adc
xchg
xor
xchg
jo
jp
xchg
sbb
faddp
not
jmp
or
sbb
xor
repz
jl
jmp
inc
movsl
int3
sbb
pop
or
inc
imul
mov
push
les
pop
gs
mov
mov
fiaddl
fcompl
or
fisubrl
inc
ljmp
repz
insb
jmp
mov
je
lahf
xor
jmp
jp
inc
emms
adc
sbb
sub
push
jl
test
xor
sbb
xchg
clc
mov
push
or
sub
outsl
bswap
test
not
sub
fdivrs
inc
or
rcrl
jle
pop
pop
xchg
inc
xchg
lea
inc
rorb
sbb
jb
nop
fbstp
in
pusha
pop
mov
xor
xchg
jp
je
mov
dec
inc
and
or
and
xchg
pop
insl
add
mov
movsl
sti
out
inc
jnp
mov
xchg
sub
int
mov
test
add
fldl
dec
call
adc
or
sbb
or
sbb
popa
sub
sbb
cmpsl
out
sub
arpl
lea
and
jnp
in
fwait
pop
fwait
pop
push
ret
in
mov
sahf
xor
mov
sbbl
mov
push
repnz
adc
stos
call
or
cli
pop
cs
nop
inc
mov
jg
fisttps
cmp
xchg
push
shlb
push
mov
inc
repz
cmp
rcrb
jl
add
inc
or
inc
fidivrl
push
call
sbb
cwtl
and
sub
sub
jbe
add
std
jg
or
xchg
dec
pop
jmp
jecxz
pop
int3
adc
test
mov
or
adc
mov
cmp
add
scas
cmp
push
lods
mov
pop
inc
fistl
add
pop
test
mov
insb
sbb
inc
mov
jmp
push
sbb
fwait
xor
in
lods
pushf
ss
in
dec
incl
xor
xchg
popa
mov
scas
fisttpl
mov
popf
sub
mov
andl
outsb
clc
mov
outsl
test
sbb
jg
aad
stc
clc
lret
adc
insb
sbb
sub
jl
pop
sbbb
jg
pusha
sti
mov
sub
shl
inc
adc
inc
push
adc
pop
dec
inc
dec
lods
hlt
jbe
outsl
pop
in
les
mov
leave
sti
xchg
mov
jns
cli
pop
imul
movsl
adc
in
lds
add
dec
inc
cmp
adc
rcll
clc
cmpb
xor
aaa
sub
sbb
nop
ret
sti
xor
adc
std
les
or
sub
sbb
fs
mov
inc
outsl
sub
add
cmc
pusha
loopne
das
cltd
rol
loopne
jnp
jge
push
scas
lcall
aas
or
pusha
std
test
clc
dec
pushf
adc
push
mov
into
test
divl
mov
and
mov
loope
mov
aam
xor
xchg
mov
ret
test
std
rcll
mov
cmp
les
and
std
std
aaa
mov
sbb
dec
adc
imul
mov
outsl
add
or
das
push
and
test
jl
rcrl
sbb
jp
incl
jne
and
pop
call
dec
xor
std
inc
adc
inc
pop
pop
push
push
addl
sub
pop
dec
mov
addr16
mov
jmp
pop
insl
stos
pop
inc
pop
clc
lock
add
jae
out
outsl
or
push
test
shr
shll
subl
and
ljmp
sahf
stc
mov
clc
dec
addr16
out
ss
notl
mov
xor
aas
icebp
ljmp
out
or
in
pop
mov
nop
jle
aam
jp
xlat
cmp
fcoml
pop
jl
cmp
rclb
inc
cmpb
imulb
insl
lcall
pop
dec
add
test
aad
push
fxtract
ss
daa
mov
rcll
call
inc
adc
insl
or
shlb
add
cld
push
mov
adc
pop
and
adcl
and
sub
adc
fldcw
jno
cmc
cmpsl
shl
pop
sbb
push
dec
or
mov
rolb
out
dec
mov
outsl
inc
std
movsb
xor
adc
stos
imul
ret
lock
dec
testl
shlb
test
mov
shlb
jbe
cwtl
mov
mov
dec
and
xchg
adc
or
sub
lcall
call
xchg
pusha
jmp
scas
and
and
inc
pop
push
nop
xchg
sbb
pop
cmp
jbe
push
cmp
pop
clc
rclb
or
jae
jo
jecxz
es
cmpsb
add
mov
int
or
insb
out
loopne
sarl
rol
inc
test
test
sbb
xchg
sbb
cltd
je
xlat
ret
das
jl
jne
nop
or
and
sub
pop
sbb
pop
mov
jecxz
sub
adc
adc
test
cld
arpl
into
adc
and
outsl
in
cmp
fldenv
in
daa
and
cli
in
inc
inc
push
pop
sub
hlt
das
push
std
aaa
sbb
js
std
sub
aas
adc
push
xor
enter
and
call
fsubrl
pop
inc
xchg
nop
sti
loopne
pop
adc
das
mov
popf
push
push
and
ret
ffreep
mov
stos
icebp
loope
inc
cmp
ja
nop
pop
xchg
test
xchg
test
sub
mov
test
mov
push
mov
out
test
mov
out
sub
or
jg
cmp
dec
jbe
cld
lret
jmp
lods
dec
enter
sahf
or
xor
jl
sub
adc
lds
push
fucomip
clc
mov
out
fdivs
sub
push
mov
subb
lock
test
inc
xor
andb
call
out
jo
mov
sub
cs
adc
fsubr
insb
loope
das
cli
outsl
xchg
inc
pop
cld
adc
pop
mov
out
pop
shr
addb
mov
mov
das
push
mov
jl
mov
pop
xor
dec
or
inc
daa
sub
arpl
mov
stc
aam
hlt
outsl
push
arpl
lds
inc
mov
mov
pop
dec
xchg
sub
stos
daa
fldcw
mov
pop
and
and
adc
sbb
jmp
gs
xlat
mov
inc
mov
hlt
roll
mov
adc
xor
and
sbb
add
sarl
rcll
popa
mov
inc
push
adc
sahf
cmpsl
inc
push
cmp
or
sub
lret
xlat
sub
push
shrl
xchg
xor
icebp
inc
adc
jae
rcll
ja
movsb
repnz
push
lock
xor
xor
mov
pop
cmp
jp
sub
das
ret
xchg
movsb
inc
imul
push
call
shrb
jne
loope
aam
mov
ja
mov
add
stos
bound
push
push
in
loopne
ds
add
movsl
lret
test
inc
sti
sbb
jl
pop
sub
push
mov
push
add
sarb
mov
xor
bound
pusha
adc
push
sbb
jg
test
sbb
and
cs
pop
jns
fidivrl
xor
inc
popa
xchg
pop
fists
pop
insb
push
xor
jae
push
ret
addb
ret
mov
xchg
rclb
mov
xchg
xlat
orl
or
inc
pop
aad
movb
jge
mulb
jp
lahf
adc
xor
push
das
jbe
movsl
pop
and
fwait
clc
das
push
hlt
fcomi
popf
or
or
jo
push
gs
jne
add
push
xor
xchg
js
daa
leave
sbb
or
push
add
ja
clc
pop
adc
rcrl
mov
xchg
add
xchg
adc
inc
sbb
pop
and
sbb
pop
mov
inc
cmp
jmp
pop
xchg
push
sub
jg
aam
inc
rcl
mov
jle
mov
sbb
call
lods
nop
xor
push
ja
pop
js
out
sub
repnz
and
and
int
mov
mov
sarl
or
sti
and
cwtl
mov
stos
test
lea
mov
adc
jge
push
inc
fdivrl
pop
lahf
mov
shlb
out
dec
std
sti
mov
loopne
call
enter
lock
stos
out
pop
push
rcl
repz
pop
mov
addb
jbe
xchg
mov
push
stc
mov
xor
mov
iret
push
pop
xchg
xchg
or
lds
pop
in
popa
mov
cmc
xchg
cmp
push
icebp
xchg
sbb
popf
in
pop
sbb
lea
sub
mov
dec
les
add
mov
xor
xor
adc
xchg
mov
ja
dec
outsl
mov
sbb
in
out
xchg
mov
cltd
cmp
lds
je
lock
mov
sarl
pop
outsb
cmc
add
push
and
xor
addl
pop
stos
mov
daa
stos
clc
test
lods
cmp
mov
jg
leave
mov
push
loop
push
stos
arpl
aad
cli
mov
adc
test
jbe
xchg
xchg
daa
dec
decl
pop
add
fsubl
adc
inc
adc
sbb
fldl
je
rorb
lcall
lcall
jge
jl
imul
dec
or
stos
in
out
nopl
fimuls
sarb
arpl
mov
xor
xchg
ljmp
dec
es
into
and
loopne
imul
daa
aas
pop
std
mov
in
ja
clc
sub
push
push
or
sub
icebp
out
pusha
push
xor
movsb
into
js
lcall
lcall
dec
int3
and
out
shrb
sub
aad
fiadds
mov
mov
out
rclb
call
add
out
mov
inc
ret
sub
pop
and
je,pn
jmp
or
hlt
outsl
inc
mov
int
test
pop
pop
fmuls
repz
pushf
lock
dec
rorb
inc
adc
inc
push
jae
mov
cs
inc
sarl
cmp
add
add
push
xchg
mov
insl
ss
loop
sbb
andb
mov
pop
and
dec
jle
and
push
faddp
cltd
or
lods
gs
loopne
dec
mov
sub
or
inc
outsl
mov
aaa
dec
divl
fstps
mov
out
mov
es
push
test
xchg
lret
mov
add
add
and
cli
jecxz
out
incl
sbbl
fidivrl
push
and
mov
or
pop
dec
ret
test
loope
arpl
jg
fimuls
sti
nop
popa
adc
add
add
lds
inc
ret
lock
xchg
cmp
mov
push
ss
ja
cmp
jnp
dec
aam
mov
jb
dec
outsl
xchg
cmp
mov
add
or
xor
mov
mov
dec
or
xchg
and
ds
pop
xor
mov
orl
dec
inc
or
fsubp
mov
sarl
add
test
jp
inc
adc
lods
mov
cmp
movsb
dec
mov
or
add
lods
pop
ss
mov
jp
ja
and
outsb
xchg
fists
add
xchg
cmp
les
test
jmp
mov
hlt
sub
in
push
pop
enter
adc
and
adc
pop
adc
inc
test
andb
jg
push
and
mov
adc
jmp
pusha
sub
das
mov
dec
fstp
rcrl
lahf
in
adc
push
dec
cmp
fildll
popf
shll
fs
mov
cmpsb
pop
loop
pop
cld
xchg
aas
call
pop
filds
out
fbld
and
stos
sub
mov
xchg
cmc
call
mov
pop
xor
push
loopne
call
bound
movsl
mov
or
cmp
add
dec
push
mov
into
pop
loopne
mov
aas
clc
xchg
mov
jmp
add
mov
mov
shll
and
sbb
stc
out
mov
repz
notl
add
aam
test
mov
adc
pop
add
cmp
add
add
cmp
repz
and
and
mov
rcrb
cs
stos
jecxz
iret
jnp
pushf
jae
jle
shrl
ret
cli
dec
iret
and
or
sbb
lods
and
xchg
andb
stos
dec
xor
pusha
dec
push
and
inc
ja
pushl
xor
inc
sbb
sub
push
jl
les
dec
sub
inc
dec
fildll
xlat
xor
test
repz
xchg
jecxz
rcr
dec
cld
adc
or
popf
out
cs
nop
pusha
sub
cmp
sub
and
add
pop
ss
sarl
lods
std
test
cmc
out
mov
jmp
inc
pop
adc
lret
pop
jg
or
dec
imul
dec
and
fisttpl
inc
pusha
dec
dec
push
jo
rcll
scas
and
push
xchg
outsb
repz
cmpl
insl
aam
push
or
imull
sti
adc
fsubs
mov
lods
dec
out
and
fidivl
sub
fwait
pushf
and
xchg
clc
arpl
out
lock
mov
call
clc
push
popf
jbe
imulb
mov
and
jmp
and
out
sub
cmp
and
cmpl
mov
add
out
and
xchg
push
pop
test
incb
dec
insb
pop
not
push
xor
fdivs
addr16
jb
add
jl
jbe
cmp
cmp
sub
xor
and
inc
jbe
jno
pop
cs
sbb
mov
adc
mov
mov
lods
stos
sti
in
dec
pop
cli
fistpll
lds
sub
mov
jns
lahf
push
in
lea
cli
push
and
icebp
pop
test
dec
jmp
pushl
ljmp
sub
adc
inc
push
aaa
out
mov
jbe
adc
les
rol
adc
dec
int
les
popa
aaa
and
mov
mov
and
xchg
cmpl
dec
std
scas
push
mov
js
push
sbb
leave
jg
sub
jns
pop
inc
jp
es
add
in
cli
dec
xchg
xchg
xorb
std
sub
fisttpl
icebp
mov
out
loop
jle
pop
jmp
cld
scas
fsts
add
mov
test
mov
xchg
dec
lret
cmp
icebp
insb
mov
std
add
cmp
lods
in
or
xor
mov
pop
inc
mov
and
pop
cmpsb
gs
test
stos
in
lcall
cmpsb
movb
sub
mov
sub
cld
lds
xchg
ds
mov
and
dec
xor
icebp
lret
mov
push
rorb
test
mov
inc
je
sbb
mov
jno
cltd
or
or
jl
fisubs
fwait
inc
cld
and
sbb
mov
jge
mov
scas
int
mov
sbb
and
and
mov
sbb
adc
mov
shll
pusha
jbe
outsl
sbb
rcl
sbb
mov
aas
movsl
cs
fstpl
cli
adc
aad
daa
outsb
mov
pop
inc
enter
mov
xchg
mov
inc
or
rol
push
and
jp
jl
and
das
sbb
addr16
mov
inc
std
jno
subb
dec
add
pop
jp
or
out
cmpsl
mov
clc
sub
xor
inc
xor
and
xor
mov
push
jne
xchg
mov
dec
dec
shrb
inc
arpl
sbb
scas
add
insl
call
dec
cld
popf
testb
lcall
cmp
je
jbe
js
dec
inc
cwtl
pop
mov
loopne
out
add
enter
sub
and
test
fiaddl
in
mov
test
inc
sbb
cmp
pusha
sbb
ja
test
inc
inc
or
jnp
sti
lret
dec
iret
add
pushf
add
or
jg
sbb
xchg
xchg
push
andl
sub
fneni(8087
push
or
jno
daa
sti
daa
and
outsl
filds
clc
fistpl
sub
cmp
add
xchg
das
inc
mov
cmp
shll
jge
sub
xchg
mov
pop
dec
mov
push
sbb
stos
jnp
or
test
push
ds
and
aas
jecxz
in
jg
mov
jmp
cld
jp
adc
jge
mov
cmp
mov
mov
sub
dec
std
fbld
cwtl
sarb
pop
xorl
dec
xchg
clc
jp
cmpsl
and
inc
hlt
repnz
in
sti
cmp
js
movsb
imul
jo
push
das
mov
ret
push
lcall
lcall
jmp
xor
adc
pop
adc
pop
mov
inc
mov
nop
xchg
je
cli
roll
test
scas
fists
inc
mov
aaa
inc
xor
jbe
jo
cmp
ret
cmp
xchg
scas
das
out
push
std
fstpt
pop
mov
push
mov
andl
xchg
test
adc
gs
mov
push
fadds
or
push
roll
je
sbb
add
push
jo
cld
pop
outsb
cld
push
sbb
mov
xchg
xchg
sti
jo
and
or
sbb
push
stos
inc
sub
mov
incb
dec
dec
test
aad
push
sbb
cmp
or
mov
adc
adc
fdivrp
mov
cld
add
mov
dec
shrb
jmp
jg
jg
fwait
push
ret
push
xor
and
jae
lret
xor
and
faddl
sti
fmuls
or
dec
inc
enter
pop
push
jmp
iretw
adc
das
push
jmp
dec
xchg
mov
lret
push
dec
adc
icebp
dec
lods
icebp
mov
inc
cltd
imul
repnz
lea
pop
mov
shl
mov
ljmp
xchg
enter
outsl
pop
aad
adc
dec
andb
jl
mov
mov
push
loop
sub
sbb
fwait
mov
or
aam
aas
push
xor
cmp
jg
sbb
out
je
sub
xorb
mov
xchg
sub
ja
movsb
ja
test
pop
loop
outsb
push
jecxz
aaa
es
mov
inc
fsubr
outsl
xor
jg
popf
jecxz
sbb
in
sbb
jbe
mov
pop
cmp
add
rcl
pop
jl
xor
pop
push
sub
in
or
add
shl
add
inc
jg
push
loope
rcr
or
fcomps
sbb
cmc
mov
imul
push
sbb
jae
adcl
inc
fwait
pop
xor
sub
mov
pop
xchg
pushf
pop
or
mov
stos
lcall
pop
xor
scas
push
add
stos
push
sbb
push
sbb
push
jecxz
out
adc
adc
jecxz
aad
pushf
loop,pn
sub
test
xchg
addr16
inc
loopne
fucomip
andb
push
xchg
nop
mov
add
mov
push
insl
gs
push
incl
jmp
pushl
lds
xchg
and
lea
ficomps
das
in
mov
stos
ja
call
xchg
lods
cmp
jo
pushl
xchg
xchg
xchg
add
cld
adc
call
adc
jmp
dec
arpl
lahf
nop
fisttpll
mov
jb
pop
mov
cmp
fildll
sub
jle
imul
in
mov
scas
ja
or
test
push
lret
adc
or
out
cmpsl
fwait
or
stc
std
add
ja
sbb
mov
shlb
test
fdivr
pop
push
test
in
mov
ja
pop
in
testb
adc
mov
push
add
std
xor
adc
xchg
out
aas
fadds
and
in
push
int3
mov
out
jl
sub
and
mov
stos
xchg
sub
in
cs
jge
rcrb
adc
int3
push
nop
adcb
and
leave
sbb
insl
adc
mov
insl
shll
fisttps
fdivp
mov
inc
insb
mov
pop
or
subps
jae
mov
push
pop
adc
add
mov
mov
sub
int3
and
fists
pop
fnstenv
dec
jb
push
inc
add
imul
shll
inc
insb
cltd
lods
outsl
jo
add
cmc
sbb
aam
push
jg
sub
addr16
sahf
js
aaa
aaa
lock
outsl
pop
push
call
fiaddl
daa
xor
and
subl
sub
jecxz
imul
movsb
sarl
loop
sub
sbb
inc
rcrb
pop
mov
jle
stos
jecxz
dec
popa
add
insl
cli
repnz
sub
dec
push
pop
sub
int
mov
sbb
dec
in
inc
xchg
push
dec
mov
jl
or
pop
insl
mov
fstpt
test
xchg
xchg
inc
jb
and
std
ret
sub
loop
outsl
scas
clc
jo
pop
sbb
icebp
mov
add
outsl
fdivl
xor
jno
imul
movsl
push
icebp
scas
mov
loope
mov
fs
ret
push
dec
xchg
loopne
lcall
mov
dec
lret
push
pop
and
mov
and
add
les
jb
cwtl
mov
mov
fmulp
mov
sub
inc
pop
adc
icebp
xchg
and
std
add
pop
pusha
jge
mov
and
movsl
and
sbb
pop
pop
or
sahf
jecxz
mov
xchg
fs
jle
xadd
cmp
inc
mov
jmp
pop
je
mov
daa
xchg
out
test
inc
rcl
das
js
mov
int
addb
cs
pop
outsl
adcb
andl
xchg
and
inc
push
ret
pop
dec
out
nop
mov
inc
into
cld
ljmp
insb
into
add
leave
outsl
lods
pop
jb
or
pop
push
roll
mov
pop
popf
cmp
aaa
loopne
gs
test
jl
cmp
loope
or
inc
pop
jmp
jp
cmp
pusha
lods
add
push
cmp
jmp
ss
testb
rcr
or
cmp
or
inc
add
ds
popf
test
pop
stc
push
fnstsw
cmpl
imul
dec
inc
xchg
push
fnstsw
jmp
mov
mov
lcall
js
std
or
icebp
cld
sbb
fucomip
ret
cmp
push
ja
pop
test
out
mov
or
pop
and
out
pushl
nop
lods
clc
xchg
inc
ret
jmp
pop
ds
jg
arpl
mov
xorb
adc
jo
int3
push
mov
inc
mov
iret
ret
mov
mov
inc
hlt
ja
shlb
push
or
mov
cltd
popa
inc
xor
fildll
out
pop
inc
aaa
mov
dec
or
push
sub
das
inc
sub
mov
push
xchg
fsubr
pop
repz
jmp
push
jecxz
xor
push
mov
icebp
inc
shl
leave
mov
or
je
pop
pop
repz
jg
jge
and
cwtl
sbb
xor
inc
insb
sti
fcompl
or
lea
lds
outsb
jg
push
out
lock
pop
imul
push
push
cmp
push
pop
jo
mov
addr16
pop
pop
xor
mov
mov
pop
sbb
xor
sbb
fildll
movsb
xor
cmc
xchg
cmp
push
xor
outsb
sti
sub
sbb
imul
lock
cmp
xor
ss
jne
mov
mov
mov
mov
inc
das
jno
push
xchg
mov
inc
xor
jmp
add
repz
daa
xor
movsl
lcall
jg
jmp
test
aam
xchg
test
jecxz
push
insl
xor
sub
mov
lret
jecxz
ljmp
push
xchg
mov
ja
xchg
cmp
mov
pop
dec
jl
aam
pop
pop
clc
sbb
adc
mov
and
mov
jmp
outsl
cmpsb
pusha
ret
mov
fs
push
fnstsw
fistl
adc
pop
adc
jnp
aas
popa
pop
fdivs
xor
or
mov
outsl
pop
addr16
xchg
into
inc
addl
adc
add
adc
xor
push
push
push
mov
lock
inc
inc
sub
pop
mov
loopne
test
sbb
and
jp
fidivl
cwtl
rclb
loope
fisubrs
push
xchg
jb
pop
shrl
cmp
lods
and
fldcw
add
xor
pop
lret
sahf
mov
pop
nop
js
in
iret
insl
pusha
sar
lahf
inc
loope
xor
mov
loope
jle
mov
pop
popl
mov
fcompl
sbb
push
adc
sub
test
dec
mov
and
hlt
add
mov
pushf
xor
fisubl
jmp
mov
xchg
inc
dec
jp
outsb
in
loopne
xlat
sarb
sbb
cli
lcall
or
leave
push
enter
data16
jecxz
mov
loopne
adc
call
add
mov
pop
bound
iret
ftst
mov
scas
ja
adc
fnsave
pusha
mov
jle
imul
scas
in
and
out
lds
add
out
out
mov
clc
int3
addr16
aam
cltd
daa
pop
stos
push
cmp
xchg
out
repnz
xchg
cmp
pop
in
mov
jnp
dec
xchg
pop
pop
cli
inc
subb
mov
inc
arpl
cltd
jle
in
orl
ss
outsb
sbb
xchg
repz
stos
dec
mov
adc
inc
cltd
pop
ljmp
mov
cmp
push
inc
data16
loope
lret
fwait
pop
sbb
add
lock
xchg
es
or
or
adc
arpl
das
xchg
jno
jb
mov
add
dec
sbb
in
fstpt
mov
jl
sub
cwtl
mov
lcall
xchg
push
lods
test
fidivrl
add
das
pushl
lock
lds
pop
aad
jecxz
pop
in
adc
dec
enter
stos
ret
push
pop
call
or
xchg
cmpsb
bound
gs
adc
hlt
lea
pop
add
sbb
cli
into
loop
pushl
sub
xor
sbb
cmp
cmpsb
or
cmc
xchg
je
fildll
outsb
jo
decl
fiaddl
jne
aas
stos
cli
sub
jp
sbb
or
and
mov
les
negb
movsl
sbb
repz
imul
rcrl
or
jecxz
sub
clc
mov
cmc
dec
jno
inc
out
inc
fcompl
xorb
mov
lcall
movsl
or
cmc
lods
mov
jl
lea
out
outsl
cs
pop
outsb
pop
xor
lds
mov
dec
gs
pop
fdivrp
fnclex
mov
cmp
cs
out
aas
mov
sbb
xchg
ss
rclb
cmpsb
and
icebp
flds
cmpl
jle
ret
jle
addl
inc
mov
xor
and
mov
inc
out
and
pushfw
sbb
mov
or
sbb
mov
testb
ja
sbb
subb
mov
and
jne
ljmp
repz
push
out
fldt
inc
loope
push
lods
test
sub
fs
adc
cmpb
ret
sub
mov
xor
or
ss
cmpl
xchg
scas
or
inc
cld
dec
cmp
cltd
pushf
lods
add
inc
dec
push
dec
cmp
xor
sbb
xchg
call
dec
incl
lahf
jle
add
cmp
dec
es
lock
ret
rcll
push
adc
pop
and
in
cmp
jge
sti
in
std
popf
jbe
cmc
cli
xchg
adc
jmp
ljmp
and
sub
add
loopne
hlt
push
xor
pop
jecxz
xlat
out
icebp
insb
lcall
xorb
sahf
push
fbld
leave
or
daa
test
insl
xchg
lret
xor
aaa
clc
pop
cld
push
or
shrb
cmp
outsb
sub
mov
xchg
xchg
das
inc
mov
mov
decl
jl
loope
cmpsl
call
sub
cmpsl
insl
sbb
jns
loope
nop
dec
hlt
push
dec
mov
sbb
fwait
mov
nop
cmp
sarl
sub
iret
xor
dec
xor
pushf
les
inc
pushf
push
mov
sbb
aad
mov
cmc
ret
add
sbb
dec
jno
inc
mov
je
xchg
out
loopne
ret
std
pop
sub
sub
ss
push
hlt
lods
xchg
fadd
inc
xlat
pop
lods
inc
test
mov
xchg
push
mov
aas
mov
jg
fimull
icebp
sbb
dec
leave
push
mov
or
and
inc
mov
cmp
adc
mov
mov
xchg
daa
scas
ss
aas
sarl
xor
xor
popf
cmp
insl
shll
xchg
movl
imull
or
dec
je
ds
sub
mov
rclb
insl
mov
ja
lea
mov
dec
xor
push
jg
fucomi
push
jmp
inc
cltd
inc
cmp
cld
insl
add
scas
cmp
enter
mov
ficomps
push
dec
mov
in
push
ljmp
dec
jp
cmp
lcall
cmpb
fldenv
stos
sub
xor
mov
cmpsb
push
mov
jecxz
test
rorl
or
inc
sbbl
cmp
fdivr
das
outsb
fcomip
ljmp
add
mov
or
and
aaa
inc
push
sbb
sbb
dec
push
pushl
mov
sub
adc
add
push
repz
inc
xchg
and
outsl
insl
sub
incl
xchg
ljmp
or
test
pop
in
clc
fldt
jl
in
xor
adc
arpl
aad
xchg
sbb
jp
lods
insb
mov
xchg
inc
pop
mov
sbb
adc
xchg
cmp
cmp
cwtl
popf
sahf
push
inc
out
add
insb
or
mov
rolb
mov
xchg
sub
je
call
in
adcb
dec
push
jno
call
hlt
add
adc
je
add
cld
add
and
aas
rcrb
pop
mov
cli
mov
xor
int
fbstp
mov
in
inc
jnp
ret
lret
cmp
push
cmpb
decl
int3
add
jne
xor
xchg
mov
insl
push
dec
outsb
mov
aaa
push
or
xchg
lcall
sti
mov
sub
imul
jbe
dec
imul
paddsw
sub
jbe
pop
xchg
insl
leave
adc
loope
sub
lea
sub
add
or
add
push
repz
fimuls
pop
pop
fsubs
std
xor
dec
pop
sub
mov
mov
orb
fistpll
dec
push
push
cs
sub
lods
out
and
movsl
push
pop
pop
sbb
loope
jae
adc
fistps
pop
jl
dec
mov
test
dec
test
shll
pop
mov
push
push
mov
pop
push
filds
cld
lock
mov
mov
loopne
outsl
shrl
mov
js
jmp
add
inc
and
ret
jae
mov
cmpps
je
ljmp
leave
mov
add
inc
push
adc
push
cmp
xor
sub
nop
fdivp
pushl
popf
je
call
popl
add
lahf
mov
lahf
mov
push
sbb
pop
pop
or
mov
lods
insb
push
inc
jecxz
shrl
and
lea
pop
cli
in
push
xlat
inc
loopne
aad
mov
shrb
cld
decl
in
adc
test
pusha
lock
push
clc
mov
cmp
or
clc
xorl
daa
lea
xor
lahf
push
dec
jmp
lods
std
and
and
adc
out
cli
pop
mov
add
and
cmp
gs
in
pop
and
shll
inc
loope
clc
lret
mov
dec
add
fistpll
adc
adc
pop
lods
cli
lea
cltd
or
sarl
subl
mov
ret
lds
xor
jp
gs
sbbl
pop
xchg
jge
jl
pop
sub
lcall
push
cmpsb
mov
dec
shrl
stc
pop
sbb
cmp
and
inc
push
insl
add
in
or
lahf
adc
sahf
xchg
sbb
sub
daa
mov
cmpsl
ss
push
or
decb
inc
inc
mov
mov
inc
fwait
js
jecxz
mov
or
jae
test
aaa
adc
shll
shr
test
decb
stc
fnstsw
push
subb
dec
les
and
inc
or
pop
packssdw
lcall
jno
sub
divb
pop
fsubp
stos
movsl
cmp
jae
test
subb
fildl
dec
adc
pusha
icebp
das
lock
cmp
sbb
jge
jle
mov
jp
sbb
std
or
enter
dec
xor
sub
lea
and
xlat
call
mov
adc
adc
cs
outsl
loopne
mov
sbb
rolb
inc
adc
loope
ss
insl
or
jo
dec
in
ss
cld
popa
jne
call
xor
clc
mov
ljmp
dec
addr16
pop
mov
adc
pop
inc
outsl
call
mov
outsl
pop
iret
sub
sbb
jge
enter
jnp
xor
fstps
aad
jne
adc
add
pop
push
dec
pop
ja
adc
xor
das
into
in
xchg
clc
jecxz
daa
dec
jge
fldenv
ds
add
test
push
outsb
pop
sbb
cmp
or
adc
call
dec
cmp
cwtl
sbb
shlb
js
inc
std
incl
neg
outsb
mov
sahf
push
and
cs
sti
sub
mov
sub
push
popa
sub
xchg
es
jae
or
adc
rcl
or
dec
idiv
lret
mov
icebp
dec
inc
mov
rorb
cmp
cmp
mov
aam
pop
add
lock
pop
cli
mov
shlb
ljmp
aam
cmc
inc
sarl
pop
mov
xor
das
sbb
inc
mov
cltd
je
scas
jns
nop
mov
lods
mov
sbb
cmp
mov
repnz
fldenv
scas
mov
roll
hlt
mov
xor
mov
push
pop
fwait
and
daa
and
sbb
cmc
cmc
mov
popa
les
das
fucom
mov
sbb
xchg
and
scas
mov
rorl
gs
or
aaa
jl
cmp
cmp
add
and
sahf
mov
add
cs
add
outsl
pop
sbb
lea
jp
idivb
setb
stos
sbb
xchg
cmp
test
jno
scas
push
icebp
out
ret
mov
out
in
loope
xlat
loopne
hlt
push
cmp
lcall
mov
and
cmp
daa
jb
jmp
and
push
loop
sub
lret
or
sub
pop
test
add
adc
imul
pop
xchg
push
pop
sub
xchg
nop
out
push
pop
ljmp
or
adc
test
pop
call
nop
repz
int3
inc
mov
clc
rcl
mov
lods
mov
mov
out
cld
fldt
add
rcll
jmp
mov
orl
cli
add
sbb
ds
mov
fsubrs
sub
into
stc
subl
or
insb
and
cmp
inc
shr
push
sbb
mov
and
out
mov
repnz
xor
jno
xchg
cwtl
icebp
insb
ljmp
int3
xor
fs
clc
lcall
mov
sbb
mov
and
and
mov
push
xor
mov
out
pop
test
fcom
xor
sahf
bound
or
in
aas
add
sbb
and
rolb
std
mov
sub
push
or
mov
js
and
inc
xchg
lods
add
push
push
xchg
sbb
lcall
hlt
or
lods
pop
cltd
jo
ficompl
insb
xor
scas
mov
inc
xchg
cli
idiv
sbb
ds
jne
push
and
test
xor
hlt
fwait
mov
dec
or
jmp
hlt
sbb
sbb
lcall
jae
and
xor
ret
out
jecxz
aam
negb
les
mov
cmp
pushf
movl
sbb
adc
push
push
rcrb
insl
mov
lock
test
add
push
mov
out
push
xor
inc
mov
decl
mov
inc
stos
nop
std
iret
fisubs
adc
decl
add
adc
add
mov
fistpll
xor
faddl
popa
xchg
mov
fs
inc
dec
test
out
sbb
push
push
ss
addb
outsb
das
inc
lds
cmp
or
inc
cmp
sub
sub
mov
icebp
mov
je
mov
add
adc
sahf
push
pop
rclb
incl
hlt
je
or
fildll
mov
lods
hlt
insb
jmp
sbb
xchg
mov
je
jae
mov
icebp
call
xchg
shll
xor
lock
movsb
mov
pushf
sbb
ret
sub
pop
jle
out
iret
and
sti
das
out
xchg
xlat
pop
subb
js
cmp
push
sub
add
mov
leave
xchg
mov
jns
outsb
sti
daa
out
pop
sbb
lods
xchg
int3
cmpsb
cmp
adc
inc
faddl
fmuls
mov
sbb
dec
shlb
push
sub
iret
jae
add
mov
mov
mov
out
lcall
adc
sar
push
push
push
pop
dec
push
adc
bound
ds
das
sub
fwait
cli
and
sarl
andl
mov
sar
ja
out
sbb
adc
inc
shl
inc
cmp
push
cli
test
mov
mov
cmp
adc
sbb
mov
inc
fisttpl
mov
and
pop
clc
aaa
rcr
adc
movsl
loop
into
daa
test
jg
lret
lods
adc
test
xor
cmp
pop
or
fnsave
adc
das
mov
sbb
lock
xchg
xlat
push
fucomip
push
fwait
repnz
adc
or
in
loope
xor
sbb
xchg
aas
add
hlt
xchg
inc
pop
push
arpl
loop
cmp
adc
or
adc
nop
lock
das
jge
cmpsb
repz
mov
nop
jb
in
or
fists
mov
pop
adc
fnstsw
sti
orb
push
inc
xor
pop
or
mov
mov
clc
movsl
xor
repnz
roll
adc
mov
push
cmc
mov
add
xor
inc
loope
call
dec
inc
lods
test
and
dec
mov
cwtl
xor
rcl
push
lahf
push
aad
cmc
cmp
and
push
push
fs
out
std
xor
lret
repnz
and
inc
shll
adc
js
sub
jbe
shrl
in
nop
xor
xchg
ja
rolb
and
mov
incl
fcmovnbe
and
xor
aad
jg
aas
adc
mov
adc
aaa
clc
lods
out
cmp
pop
movsl
test
ljmp
imul
sti
jns
sub
fisttps
fstpt
cmpsb
cmp
pushl
add
aad
and
lods
push
dec
repnz
imul
cmp
xor
mov
ja
sbb
lret
or
pop
sarl
in
add
xlat
push
fidivrl
rorl
adc
pop
jnp
insb
loope
fs
lods
std
mov
call
xchg
jae
or
jl
inc
jle
jecxz
ret
pop
xchg
test
mov
xor
stos
cli
inc
icebp
mov
fdivl
push
movsl
sbb
clc
mov
ja
outsb
mov
xchg
out
mov
sub
pushf
frstor
mov
push
enter
bound
push
or
stc
aas
je
movsl
jg
rclb
mov
xor
sbb
pop
jnp
les
adc
in
clc
divb
rorb
out
add
fisttps
fxtract
stos
adc
dec
jne
lret
push
ja
cmp
xchg
mov
in
xchg
adc
adc
xchg
fbld
pop
sbb
subl
imul
xor
dec
in
or
rcr
mov
aam
sbb
xor
and
inc
inc
lods
pop
inc
rolb
dec
sbb
jne
mov
and
data16
mov
cli
es
dec
cmp
pop
xchg
aaa
sub
ficoms
push
jg
call
rolb
out
dec
clc
cmp
loope
xchg
pop
lcall
fistpl
push
xchg
es
fildl
cmp
mov
dec
cmp
sub
pop
lock
incl
pop
jp
xor
dec
push
popa
sub
aas
xchg
sbb
outsl
and
test
jge
clc
jbe
mov
inc
fsts
mov
clc
rcr
dec
test
mov
pop
push
xor
ljmp
jns
mov
daa
scas
jo
roll
inc
stos
fwait
pushf
ds
incl
rol
aam
inc
xchg
js,pt
fwait
notb
push
adc
jo
incl
bound
adc
dec
and
mov
les
sub
clc
xchg
js
pop
loopne
adc
test
cli
ja
lea
dec
incl
cli
dec
xor
lea
stos
ret
or
xor
testb
dec
int
pop
pusha
pop
insl
mov
pop
or
push
in
pusha
stos
inc
lcall
and
pop
or
fbstp
mov
mov
dec
or
push
cli
mov
pop
clc
fisubl
sbb
in
jnp
sub
push
bound
xor
inc
dec
dec
xchg
cmp
test
or
and
data16
inc
je
cwtl
loop
adc
icebp
hlt
dec
roll
pop
mov
out
inc
sub
push
push
ret
mov
sbb
dec
adc
sbb
movsl
pop
jmp
push
push
cmp
aaa
cwtl
loopne
inc
sahf
xor
lcall
jl
aad
inc
cli
or
std
out
xchg
jle
fwait
clc
das
repz
sbb
ss
sub
cli
mov
sbb
sbb
fnop
jns
movsl
sub
dec
dec
fsubs
push
std
in
inc
inc
stos
push
push
clc
jle
mov
and
mov
stc
aam
xor
sub
pop
test
mov
inc
jle
push
fiadds
xor
test
bnd
add
xchg
ss
mov
inc
xor
mov
clc
mov
xor
outsl
ss
dec
or
fists
add
jno
adc
mov
addb
and
scas
or
test
sbb
or
in
insl
add
test
cmp
pop
and
shl
jne
mov
out
dec
inc
push
popf
sbb
xlat
add
aas
lret
imul
push
aam
mov
test
movsl
incl
push
leave
dec
inc
dec
lret
out
cmc
inc
jne
fcomps
pop
repz
and
hlt
cmpsb
ds
hlt
js
test
fdivp
pop
ljmp
cltd
mov
test
sar
and
xchg
mov
insb
dec
sbb
xchg
fiaddl
inc
add
imul
roll
pop
int3
push
mov
adc
scas
shlb
push
in
test
add
jo
data16
ret
aas
mov
sub
les
xchg
shlb
std
and
inc
pop
ds
pop
sbb
add
mov
mov
ljmp
cmc
das
insl
outsl
sbb
push
lret
test
shlb
push
icebp
icebp
adc
jmp
mov
aaa
cmovl
sbb
jg
testl
inc
or
ljmp
cmp
pop
sub
jp
jg
das
cli
mov
neg
lahf
call
adc
jno
repnz
xchg
pop
xor
add
or
call
aam
ret
mov
les
into
pushf
push
add
mov
daa
arpl
lgdtl
fcomi
loope
cli
jbe
sbb
out
jae
sub
aaa
pop
add
xor
arpl
mov
dec
or
sti
dec
push
sub
cli
mov
cmpsb
sbb
stos
add
inc
push
les
mov
rcrb
adc
js
jg
add
popf
test
or
popa
mov
out
dec
xchg
mov
mov
jp
std
mov
testb
or
push
mov
lds
js
sub
pushl
ror
lock
cmpsl
repnz
pop
mov
add
sub
mov
mov
das
andl
and
shrb
int3
pop
pop
data16
xchg
lcall
outsl
mov
push
mov
and
mov
rolb
testl
pop
inc
adc
and
cmpsl
dec
mov
pop
test
push
jp
rolb
add
js
pop
cltd
cmp
outsb
std
icebp
adc
pop
fsubrp
inc
jle
xchg
mov
adc
aas
imul
adc
inc
add
pop
cmp
inc
loopne
mov
pushl
mov
lds
and
js
rcr
mov
negl
rcrl
add
mov
cmp
mov
je
adc
mov
lea
lcall
leave
adc
pop
in
mov
hlt
bound
aaa
ds
clc
mov
push
mov
incb
mov
outsl
fildll
jp
or
and
inc
adc
jo
jnp
mov
jecxz
rorb
out
aad
std
out
loop
int
push
je
dec
idiv
xchg
adc
aad
dec
jmp
adc
nop
xor
push
jg
mov
outsb
mov
aam
push
lds
rcll
stos
mov
adc
pop
cs
mov
in
or
jbe
adcb
sarb
in
mov
dec
cld
rorb
inc
call
mov
test
or
loopne
scas
push
cwtl
add
fistl
out
mov
les
mov
das
pop
imul
test
xor
repnz
hlt
test
xor
mov
popa
sub
and
mov
add
jb
ss
stos
or
cli
mov
pop
add
push
inc
std
lcall
adc
adc
xor
arpl
cmp
mov
mov
movsl
leave
and
incb
hlt
push
into
and
cwtl
lahf
xchg
mov
inc
jbe
dec
loop
jno
les
adc
mov
decb
daa
subb
insb
adcb
ret
scas
ret
jne
pushl
into
outsb
push
and
and
xchg
lods
jnp
inc
push
loop
test
clc
aam
and
mov
xor
adc
pop
sbbb
das
add
es
xchg
jg
push
adc
lods
movsl
clc
mov
or
mov
pop
jl
mov
repz
push
inc
pusha
loopne
jp
push
sbb
push
cli
push
xlat
inc
fs
in
jne
sbb
sub
outsl
outsl
fildll
adc
iret
inc
gs
jmp
mov
mov
jg
cmpsb
pop
push
andb
dec
nop
mov
loop
ljmp
outsb
mov
insl
dec
xlat
std
xchg
inc
jne
inc
or
ret
adc
sti
roll
in
inc
fucomip
dec
hlt
xor
cwtl
stc
das
out
clc
sub
jp
inc
inc
nop
fisubrs
lds
cmp
xor
mov
divps
mov
imul
aad
pusha
sub
daa
cltd
rsqrtps
add
push
push
faddl
sbb
mov
xchg
jmp
cld
mov
es
pop
mov
pop
ljmp
jo
ror
cli
in
cmp
fmul
pop
add
test
dec
xor
or
cmp
arpl
lea
xlat
loop
cmpsb
stos
lock
cmp
in
sarb
mov
shll
test
xchg
jae
or
lods
sbb
icebp
scas
pop
jb
cmp
shlb
loope
add
out
lret
and
jno
push
adc
pop
push
and
cmp
cmp
inc
int
push
push
pop
inc
addl
lret
inc
sub
mov
push
cli
sbb
mov
aas
cwtl
add
lea
pop
inc
faddl
adc
push
clc
andl
negl
sub
add
icebp
mov
imull
jl
ds
stc
xchg
mov
subl
inc
leave
jle
mov
jae
in
jno
sbb
pop
mov
jbe
add
orl
fcoml
fld1
fsubrs
push
sub
jl
cs
inc
pop
jb
inc
pop
push
call
inc
inc
xor
dec
outsl
loope
fwait
push
push
cmpsb
movsl
push
pop
std
xchg
mov
rcll
mov
pusha
pop
outsb
or
mov
movzbl
pushf
mov
sub
adc
xchg
mov
push
inc
repz
movsb
ret
popl
cld
mov
jge
mov
jl
icebp
insb
fsubrs
scas
mov
sti
fiadds
icebp
ret
pop
aaa
fists
adc
inc
in
int
add
aad
xor
fiadds
imul
mov
rcrb
incl
movl
sub
in
pop
aaa
insl
jno
cmpsb
cli
sbb
mov
xchg
popf
inc
fisttps
xor
std
loopne
js
in
adcl
shll
outsl
lcall
or
xchg
and
xchg
pop
clc
incb
xchg
mov
lock
sahf
fs
xchg
int
jne
xchg
sbb
and
cmp
add
test
xor
jbe
test
mov
mov
pop
inc
jns
mov
pop
fwait
cmpl
sbbb
fistl
and
xchg
icebp
cmp
test
xchg
fmuls
jmp
aaa
sbb
sub
jecxz
add
into
xchg
sti
jg
adc
lods
andb
xchg
push
dec
push
lods
popl
cmp
push
iret
orb
push
pop
push
add
mov
jmp
out
inc
lods
inc
cmp
add
xor
sbb
loope
push
aad
mov
cmp
pushl
push
shlb
sub
mov
fidivl
mov
fwait
out
add
imul
mov
sahf
cli
mov
out
seta
sbb
iret
in
adc
inc
lret
or
fistpl
add
cmp
cmp
outsb
sbb
aas
lock
xchg
mov
inc
fsubl
sbb
add
ss
mov
cli
stos
jmp
fisttps
add
or
cmp
std
cmp
and
dec
push
loope
call
ss
adc
cld
jns
fs
sub
stos
cmp
sbb
mov
in
dec
cld
loopne
dec
xor
addr16
rcll
shlb
xchg
jg
add
jg
stos
xor
pop
adc
ss
aaa
pop
add
lods
lods
call
mov
sub
daa
push
or
fistpll
fildll
addr16
scas
inc
inc
cmpsb
rcrl
xor
cmpsl
or
push
sbb
push
mov
incl
dec
fists
pop
push
jno
dec
sub
mov
repz
test
pop
das
je
mov
scas
cmpsl
or
jmp
mov
push
je
call
pop
movsl
and
loope
fisubrl
mov
push
aas
sub
fwait
jecxz
inc
adc
scas
data16
outsl
pop
cld
lods
call
xor
aad
add
add
xchg
push
push
lret
stos
clc
pushf
outsl
scas
test
lds
inc
sub
sbb
mov
fldcw
push
jmp
add
in
les
push
int3
addr16
inc
les
xchg
lcall
mov
out
call
neg
add
mov
adc
cli
add
cs
mov
inc
mov
repz
popl
mov
cltd
mov
das
test
int
loope
jmp
test
push
sbb
test
rclb
ret
mov
clc
or
dec
lcall
stc
sub
cmpb
imul
sbb
outsb
or
mov
mov
pop
xchg
cmpsl
aaa
test
sbb
rolb
inc
das
push
xchg
insl
xchg
push
mov
stos
repz
xchg
iret
dec
jecxz
mov
in
stos
icebp
xchg
xor
inc
fbstp
movsb
test
sbb
mov
fldcw
adc
cwtl
adc
add
or
or
lds
mov
dec
mov
je
add
adc
fstpl
shl
fistps
jae
adc
xor
mov
sub
push
xor
inc
sub
repnz
loopne
lea
lea
repz
shll
pop
jmp
lock
std
adc
xor
rclb
pop
cmp
lahf
inc
outsb
or
jg
loop
fdivrl
pusha
ret
xchg
fstpl
call
incl
mov
push
mov
cmp
hlt
add
int
into
out
xchg
stos
mov
jg
imul
cmpsl
jbe
sti
enter
push
or
jg
mov
int3
mov
std
xor
orb
insb
sbb
divl
inc
pop
mov
push
shll
lds
jbe
loopne
in
dec
adc
and
pusha
adc
call
sbb
inc
inc
icebp
adc
dec
push
repnz
adc
mull
push
sub
pop
mov
ljmp
push
arpl
adc
into
jle
cmc
lods
pop
mov
sbb
out
aam
pop
cltd
adcb
inc
rcrl
xchg
mov
jmp
sub
dec
movsl
pop
xlat
out
jecxz
int
inc
outsb
add
cli
fists
fcompl
xlat
and
ret
mov
mov
hlt
lea
add
pushf
ret
std
cmp
icebp
add
subb
dec
loopne
in
insl
test
loop
loope
jne
test
or
je
loope
test
pop
outsb
or
cmp
adc
push
mov
or
fwait
cmp
dec
pop
xchg
test
dec
push
mov
push
jno
call
cs
fdivr
cmc
add
sbb
test
mov
mov
cld
es
xchg
std
push
lock
and
xchg
push
movsb
xchg
mov
ret
adc
pop
les
mov
xor
lds
mov
mov
add
call
jo
push
sub
rcr
cli
add
js
pop
scas
sbb
stc
adc
outsb
sahf
outsb
and
ret
call
shld
int
push
sub
add
push
in
adc
xchg
aam
aaa
and
push
nop
call
push
sub
push
push
inc
jno
addr16
xor
xor
cmpsb
call
push
out
addl
imul
je
cmp
jbe
dec
and
pop
dec
mov
cli
inc
in
mov
pop
adc
ret
lock
and
cwtl
aam
cs
inc
mov
aaa
data16
cwtl
lahf
or
into
cmp
jle
jecxz
sahf
push
lock
push
or
xchg
call
jge
add
into
adc
notb
test
pop
arpl
outsb
pop
cmpsb
repnz
mov
cwtl
mov
pushf
test
pop
clc
ret
in
mov
sbb
icebp
adc
aaa
add
pop
pop
adc
jecxz
xor
aaa
stos
or
xchg
add
mov
test
or
mov
mov
shll
das
jb
inc
outsl
scas
ja
rcr
push
add
sahf
jae
data16
pop
std
or
pop
or
inc
xchg
cltd
pop
repnz
je
popa
cmp
data16
ljmp
out
dec
or
dec
sub
cltd
stos
mov
ljmp
sub
idiv
dec
jle
stos
rcrb
ljmp
aad
jmp
adc
ljmp
aam
cwtl
mov
xchg
cld
fstps
inc
pop
les
in
loop
in
sub
ja
and
lods
push
inc
cs
dec
jl
lea
inc
cmpsl
sbb
aam
lock
lea
icebp
inc
add
inc
dec
js
xchg
add
ret
sub
imul
loop
sbb
pop
outsb
mov
or
clc
sbb
jmp
inc
pop
decb
inc
movsl
lds
outsl
mov
jbe
insb
test
outsb
cmp
fs
pusha
add
scas
cmp
jl
mov
pop
mov
pop
in
adc
out
lahf
movsb
and
xor
call
ljmp
movaps
stc
ds
ljmp
inc
sub
je
sarb
cltd
mov
adc
mov
pop
mov
jge
xchg
push
and
push
jl
out
push
sub
xchg
insl
jmp
neg
push
movsb
mov
mov
fcmovnu
jg
popf
xchg
push
push
mov
add
pop
das
cmp
cs
sti
int3
cvtps2pi
push
sub
jmp
sub
ret
xchg
repnz
jge
pop
clc
mov
push
inc
or
scas
push
cmp
sub
lret
aad
sub
fdivr
ljmp
push
dec
lds
insb
mov
xor
push
cmp
ds
mov
repnz
sub
push
pop
mov
rclb
push
mov
jns
add
mov
fsubrl
push
push
shr
sbb
stos
fucom
lcall
sbb
mov
call
add
cmpsl
scas
jl
out
jecxz
push
out
inc
adc
mov
mov
inc
mov
and
popa
jne
fs
jge
scas
sti
cmp
fdivs
lock
js
sbb
mov
push
mov
ja
xor
imul
repnz
fstl
leave
sbb
add
push
movsb
cld
and
fwait
or
jmp
in
cmc
mov
lcall
pop
and
pusha
mov
pushf
cld
int3
mov
popa
adc
mov
cmpsb
ret
pop
sbb
mov
inc
inc
stos
xchg
divl
jae
in
sbb
insl
call
lea
push
jmp
sti
adcb
inc
push
push
es
dec
hlt
lock
push
ret
add
mov
fistps
push
testl
pop
call
ds
or
in
sti
into
loop
mov
clc
or
sub
fidivl
or
cli
sti
dec
ss
arpl
arpl
xchg
and
sbb
lcall
mov
adc
test
cmp
cltd
mov
add
stos
je
pusha
mov
push
fadd
test
mov
notb
mov
add
add
push
aad
add
sub
mov
shrb
insl
dec
jge
mov
xchg
and
dec
fildl
ret
lock
outsl
lcall
fdiv
push
in
lods
xchg
dec
lock
fdivp
aam
mov
xchg
or
fisttpl
push
sbb
mov
cmc
out
push
cmp
and
rolb
out
andl
fdivrp
or
insb
mov
adc
adc
cmp
add
ljmp
testl
les
xchg
sub
xor
sbbb
mov
mov
int
loope
inc
and
add
mov
sbb
mov
inc
dec
cs
push
push
int3
mov
in
clc
cmp
mov
push
sub
stc
mov
sbb
mov
xor
lret
push
mov
mov
inc
mov
and
movsl
mov
inc
xchg
outsb
arpl
adc
xchg
push
add
movsl
in
cs
jmp
pop
js
push
aad
push
mov
test
xchg
sbb
xchg
pusha
xchg
jmp
pop
mov
mov
or
inc
cli
xchg
ds
cwtl
shrl
lods
ja
insl
xchg
push
cmp
mov
mov
mov
test
or
and
testb
pop
dec
sub
aam
gs
hlt
cmp
movsl
cmpsl
int3
sub
jmp
pop
loop
pop
inc
cwtl
div
ror
fwait
pop
push
mov
test
push
clc
cmpb
decl
dec
lahf
inc
push
std
ja
and
lods
inc
int3
sub
das
jb
xor
ret
pusha
cs
test
mov
imul
sub
icebp
sub
dec
inc
push
or
sbb
add
cwtl
repnz
ds
push
jle
mov
pop
outsb
xchg
push
sub
xor
icebp
pop
sti
mov
fbld
sbb
mov
les
xlat
push
mov
divb
popl
je
sbb
iret
std
mov
jmp
cmp
out
xchg
cmp
mov
jno
jg
hlt
popa
mov
push
stc
arpl
and
vmovdqu
cmp
cli
in
enter
and
shll
inc
stos
fmull
mov
or
jns
mov
jg
into
sahf
in
xchg
push
inc
inc
popf
outsl
shll
dec
or
lods
jg
add
pop
mov
pop
xchg
cmp
push
and
decl
rolb
mov
dec
push
lods
outsl
je
nop
test
cmc
movsl
add
jmp
or
cwtl
dec
and
mov
ds
xchg
adcb
loopne
fdivr
inc
cmp
mov
ljmp
dec
inc
jecxz
and
push
ljmp
test
aad
rorb
jo
push
or
imull
or
sub
cld
mov
aas
cmp
in
mov
scas
inc
fsts
and
outsl
outsl
roll
jl
and
test
inc
mov
rclb
sub
sub
lea
mov
call
adc
mov
xor
mov
mov
jbe
add
mov
mov
rcr
lock
lcall
inc
js
pop
loop
das
dec
push
jne
inc
mov
gs
xor
pop
sbb
ljmp
mov
jae
dec
cmp
cmpsl
mov
dec
sbb
xor
sbb
push
testb
negb
aad
xlat
repnz
pushf
dec
out
out
push
pop
clc
inc
sbb
jp
les
movsb
loope
scas
push
lods
xchg
mov
mov
loop
lea
jnp
inc
and
test
loopne
repz
mov
into
shlb
fcmovbe
into
dec
push
inc
pop
inc
mov
jle,pt
push
add
push
pop
mov
xor
stos
in
pop
test
xchg
movsb
dec
cmc
pop
pop
lds
test
sbb
outsb
lds
inc
pushf
and
int3
fstpt
jl
sub
lea
cmp
push
xorl
loop
fwait
push
push
add
mov
testb
and
mov
push
cmp
mov
pop
loope
and
cwtl
outsl
jo
call
and
subl
test
mov
push
push
lcall
push
or
adcl
idivl
push
xchg
int3
mov
pusha
mov
popl
xchg
cmp
sbbb
out
sbbl
cltd
push
add
sbb
loopne
mov
sub
dec
in
cmp
stos
add
and
inc
sub
cli
es
fcoms
xorb
or
xor
testl
lds
outsl
lcall
push
pop
test
adc
push
lret
aaa
fs
ljmp
and
or
shll
push
push
lock
das
aad
mov
sub
sbb
outsl
jge
ss
sbb
xchg
jbe
rcrb
rol
call
ljmp
cwtl
xor
shl
adc
je
add
jg
call
sub
icebp
nop
and
dec
inc
jecxz
lea
pushf
mov
in
roll
pop
jne
js
lcall
in
dec
call
push
xchg
movsb
mov
add
xor
rcrl
sub
adc
insb
pop
outsb
daa
mov
or
mov
das
pop
lret
or
rcll
popw
add
add
sub
and
mov
adc
cmpsl
nop
xchg
inc
sarb
cmp
sarl
sti
ret
push
inc
dec
mov
mov
xor
push
or
cmp
stos
xor
pop
cld
fisttps
fwait
mov
int3
xchg
push
and
push
stos
sbb
shrb
lret
aaa
push
incb
insb
xchg
xchg
cmp
imul
sub
ret
test
sub
fdivrp
movb
push
sarl
cmp
sbb
loopne
mov
sti
icebp
push
push
cli
cmp
lahf
jne
repz
sbb
lcall
dec
pop
enter
imul
insl
mov
adc
cmp
push
mov
imul
mov
insl
sbb
cmp
inc
sub
mov
sub
jbe
data16
cmp
js
push
adc
xchg
push
adc
xchg
mov
insb
pusha
cmc
xchg
jmp
outsl
push
pop
jge
jb
out
jns
adc
cltd
lods
shll
test
lcall
ljmp
xchg
push
jno
divps
cmp
xchg
and
clc
aaa
mov
xchg
inc
add
mov
test
push
push
pop
mov
mov
lahf
pop
nop
and
mov
inc
repz
sbb
push
sahf
fisubrl
aad
mov
or
jl
lods
fwait
test
jb
mov
sub
pop
cmp
jge
jg
stos
mov
adc
jle
mov
stos
cmp
inc
push
stc
add
sbb
outsl
sti
aad
jo
daa
sbb
ss
cmpb
push
decb
add
inc
ljmp
call
pop
adc
call
das
aad
js
ret
pushf
cli
inc
jle
sbb
add
jg
mov
push
popl
xchg
mov
pop
sub
or
ljmp
bound
out
sbb
cmpb
rcrb
push
rolb
in
test
imull
pop
mov
dec
shll
mov
mov
push
add
mov
rolb
outsl
dec
and
jmp
pusha
dec
pop
ja
fisubrs
cmc
adc
les
mov
and
xor
aas
push
cs
jecxz
pop
jl
out
mov
fldcw
incl
int
push
in
mov
sbb
jge
aad
inc
ret
push
inc
inc
or
std
cs
xchg
mov
inc
xchg
test
pop
add
jg
adc
arpl
es
jge
scas
cmp
fsubs
sub
xor
jbe
mov
jae
sbb
lret
pop
xlat
jg
pop
inc
outsl
or
pusha
push
xor
jo
test
mov
bsf
xor
add
or
push
pop
cs
cmp
inc
mov
push
scas
lret
inc
lods
mov
insl
dec
pop
ret
jbe
fsts
sbb
pop
push
push
pusha
xchg
mov
sub
sub
rcrb
add
mov
sar
mov
mov
movsb
adc
pop
pusha
out
ret
dec
mov
add
cmp
and
or
and
and
cmp
shlb
inc
push
or
sarl
mov
push
dec
or
jbe
aad
sbb
push
add
iret
add
mov
mov
mov
loopne
fdivl
sbbl
push
in
mov
cmp
add
push
loop
aas
push
movsl
es
add
mov
bound
jle
adc
leave
movsb
sub
add
ror
cmp
pop
xchg
add
and
mov
repnz
shll
inc
xchg
xlat
ljmp
adc
mov
jle
jne
xchg
ljmp
loopne
inc
fists
and
sub
mov
lahf
adc
cld
xchg
jne,pt
cli
das
rol
dec
int3
and
jge
int
xchg
mov
and
add
test
and
sub
or
arpl
repnz
movsl
out
inc
add
out
int3
push
std
or
mov
movsl
jg
fsubrs
mov
push
out
mov
pop
icebp
sub
push
imul
pop
or
rorl
fiadds
mov
mov
jbe
push
xchg
repnz
scas
cmpsl
mov
fiaddl
xor
jl
mov
dec
insb
and
lock
std
pop
pop
rclb
aas
nop
add
cwtl
popa
in
add
add
jo
inc
or
jae
stc
jp,pn
jmp
ss
pop
cmovle
ljmp
pop
mov
sub
push
data16
mov
call
loope
and
sub
mov
jb
mov
out
lcall
ja
xchg
and
pusha
je
stc
adc
pushf
pop
in
ljmp
mov
lcall
mov
imul
in
ja
sub
outsl
adc
cld
test
add
test
fidivl
or
mov
add
lea
sahf
pop
stos
add
hlt
jg
outsl
mov
daa
sub
std
inc
aas
cltd
cli
jns
scas
sub
inc
hlt
int
leave
mov
fistps
movl
push
movsl
cmp
mov
aas
jne
int3
pop
mov
jl
jle
add
sub
cmp
int3
xchg
sbb
shrl
mov
mov
push
inc
xor
ds
popf
jb
aam
xchg
and
mov
clc
movsl
fistpll
sbb
adc
or
les
scas
mov
sub
clc
xchg
push
xchg
mov
mov
jmp
sti
pushf
sbb
adc
cmp
fs
scas
xchg
mov
and
ja
sub
mov
pop
adc
inc
sub
in
mov
test
mov
mov
sub
test
dec
bound
or
and
mov
cwtl
pusha
gs
call
pop
shlb
lds
subl
jp
push
mov
mov
pop
dec
mov
aaa
icebp
lock
fwait
mov
sbb
jge
and
movsl
push
mov
mov
adc
adc
or
push
clc
xchg
add
aaa
aad
xor
test
outsl
insb
and
jne
xor
push
mov
mov
pop
or
js
je
mov
repnz
test
pop
ficompl
mov
add
mov
out
rcrb
mov
sub
outsl
cwtl
jle
mov
dec
add
insb
jecxz
repnz
mov
or
cltd
add
ljmp
incb
orb
mov
and
cli
jg
movsl
xor
pop
clc
fucom
out
and
cmp
inc
mov
and
mov
pop
adc
pop
fistps
cs
xchg
fmuls
les
fildll
mov
aas
mov
mov
aaa
decb
std
mov
inc
data16
fs
repnz
lea
popa
and
in
add
mov
decl
and
shr
adc
daa
es
jb
jg
ja
cs
nop
mov
enter
add
cli
paddd
xchg
test
leave
push
loopne
add
test
pop
stos
sub
mov
mov
jg
adc
ret
cwtl
xchg
int3
pop
push
mov
cmp
fwait
and
cmp
shlb
pop
in
ret
xchg
adc
xchg
jl
mov
lcall
stc
mov
cwtl
push
notl
mov
jp
push
aad
mov
out
mov
jo
and
jbe
push
ret
inc
cmc
ret
ss
out
xchg
mov
sbb
shrb
ljmp
bound
jge
xchg
xor
les
add
or
add
jmp
mov
inc
mov
push
jmp
push
xchg
sarl
lea
xchg
stos
aam
inc
dec
push
dec
nop
xchg
xchg
shl
sbb
pop
icebp
lahf
mov
sub
loop
mov
das
aam
mov
flds
nop
rcrl
ja
add
inc
push
pop
dec
jmp
cmpsl
call
orb
xor
push
xchg
scas
out
pop
std
jg
fbstp
pop
pusha
adc
aam
or
add
pop
shl
sbb
sub
arpl
stos
jle
sub
mov
cmp
rcrb
cmp
dec
push
jne
and
aas
cmp
or
or
sub
push
pop
pop
mov
movsb
leave
and
daa
add
std
shll
ret
in
pop
std
call
inc
jl
shlb
xor
dec
cmp
ss
sbb
xor
pusha
mov
mov
or
cmp
lock
sbb
mov
daa
mul
and
test
mov
push
into
dec
ss
enter
mov
push
call
sbb
arpl
jno
pop
adc
mov
cmc
sub
mov
xor
stos
add
sub
cmpsb
sub
mov
or
shlb
xor
sub
sbb
jg
mov
mov
push
xchg
gs
pop
and
push
xor
enter
cld
mov
imul
leave
rcll
jg
xorb
pop
pushf
nop
sub
testl
stos
in
pop
sub
popf
lods
push
pop
int3
shlb
mov
arpl
inc
std
mov
lods
imul
pop
xchg
push
test
inc
xlat
lods
call
inc
jle
fimull
push
pusha
mov
icebp
lds
in
out
test
movups
in
xor
enter
aam
dec
add
jmp
or
loopne
roll
enter
imul
into
or
testl
jno
sti
or
xor
lahf
cs
stos
or
jnp
test
orb
mov
jae
fnsave
les
mov
subb
sar
out
and
dec
jo
mov
inc
test
or
loop
lds
push
add
addr16
mov
mov
cmc
fildl
in
mov
test
push
sbb
push
cmpl
cmpsl
mov
push
pop
xor
outsl
fistpl
mov
and
dec
out
mov
inc
xor
adc
sahf
aad
je
out
out
jbe
loopne
cmp
test
cli
std
insl
call
push
cmpb
cli
mov
xor
jno
in
dec
mov
push
lock
mov
filds
ljmp
push
in
daa
rclb
test
rcr
or
inc
cmp
das
sbb
movsb
out
cmc
ds
mov
jnp
dec
movsl
mov
pop
inc
roll
push
pop
cmc
dec
pop
sub
cmc
or
push
filds
cmp
xchg
adc
push
mov
iret
adc
lock
popf
inc
mov
std
xchg
add
xor
jae
shl
ret
adc
push
jnp
mov
inc
and
pop
clc
das
lock
sbbb
in
adc
push
mov
loope
mov
pop
mov
jbe
sbb
dec
xor
or
fsubs
stos
loop
dec
cld
decl
into
xchg
push
xor
cs
jne,pn
mov
adc
popa
and
mov
push
add
mov
mov
xor
mov
rcrl
dec
adc
cli
jge
mov
lret
cmpsb
push
inc
ja
sbb
dec
dec
fadds
add
in
push
or
in
inc
ret
in
add
test
sar
fisubrs
dec
lods
ljmp
bound
mov
xchg
sbb
dec
xchg
fcom
out
outsl
push
loopne
shr
rolb
inc
subl
test
incl
in
daa
mov
adc
popa
call
xor
shrb
adc
sub
jae
hlt
mov
lods
aad
idivl
fwait
mov
mov
in
incl
lahf
xchg
stos
dec
ret
jle
daa
jecxz
fs
push
pop
xchg
and
fadds
cmpsb
pop
dec
inc
and
pop
mov
mov
ss
arpl
cmp
lds
jl
mov
rorb
cli
filds
lock
sahf
and
fwait
cmp
inc
dec
rorb
mov
and
mov
sub
fldt
sub
lds
pop
inc
pop
xchg
adc
adc
jp
in
cmpsb
mov
xchg
add
sub
ds
push
mov
pop
jmp
hlt
jmp
jns
mov
sahf
ljmp
sub
lods
push
lea
pop
in
incl
test
and
push
inc
sti
or
inc
adc
sbb
pop
push
xor
push
push
xor
fildl
cmp
push
pushf
jno
in
jp
push
hlt
or
paddusb
ss
je
and
inc
mov
scas
arpl
fs
enter
adc
std
xchg
inc
inc
inc
fcmovnb
popf
mov
xchg
mov
call
push
out
dec
pop
test
push
fucom
vpmaxsw
xchg
sub
adc
jmp
fidivrl
or
mov
cmc
push
mov
pop
jae
pop
pop
lds
push
in
orb
push
fwait
jns
mov
fs
pop
mov
sarl
popa
pop
inc
loope
lea
sbb
fstp
ljmp
inc
adc
sbb
cmp
mov
cmpsb
xor
into
xor
fdivrp
inc
push
repnz
test
jo
aad
sarb
cmp
vhaddps
mov
test
sbb
loope
js
cs
imul
pop
ret
mov
dec
xlat
mov
jbe
scas
iret
push
and
outsl
in
repz
nop
mov
add
jb
call
inc
clc
xchg
inc
cmp
push
mov
add
fistpl
idivb
pop
std
sbb
incb
mov
or
sbb
mov
outsl
mov
adcb
jns
mov
mov
xor
rcll
inc
out
cmc
fcomip
jge
inc
rclb
out
add
adc
fwait
in
ret
sub
in
mov
cmpsb
jmp
mov
aaa
pop
loop
pop
cmp
add
ds
andb
lahf
loope
push
pusha
xchg
sbb
clc
rcrb
outsl
dec
clc
pop
pop
andb
mov
test
push
add
mov
cmp
mov
clc
jno
mov
fsts
pusha
sub
inc
jb
xchg
and
jns
mov
sti
xchg
sbb
int
insl
and
cmc
mov
jbe
xor
dec
adc
mov
cmp
lcall
add
cmp
out
mov
or
fs
jl
pop
es
fucomip
dec
xlat
add
scas
leave
push
mov
xchg
arpl
loope
adc
divb
dec
icebp
adc
cmp
mov
fcomps
popa
push
jg
rcll
or
fisubrs
daa
add
jae
pop
stos
xchg
fisubs
or
and
dec
hlt
jg
in
andb
rol
jge
imul
push
inc
in
out
aad
das
fnsave
mov
jne
psubsw
mov
fdiv
push
mov
mov
lods
jno
jbe
xchg
mov
mov
out
sbb
pop
jl
sbbl
les
std
fistpll
sub
push
xlat
repnz
push
add
push
cs
add
mov
cmp
loopne
push
and
push
lret
mov
loop
jne
jae
add
insl
jno
stos
fadd
lea
pop
add
mov
adc
andl
clc
pusha
or
dec
add
std
or
dec
mov
or
pop
lock
xchg
cmpsb
scas
lahf
dec
xchg
into
or
in
pop
mov
in
mov
in
cwtl
pop
fadd
jg
jmp
jge
mov
jmp
add
push
outsl
sbb
out
cmp
lods
addr16
push
push
inc
or
lds
in
adc
call
adc
sub
push
decl
adc
loop
bound
pop
xchg
popa
jle
inc
jae
out
lock
lock
sbb
inc
mov
inc
movsl
cltd
cmp
es
aaa
or
jp
int
push
pusha
pusha
pushl
sub
and
mov
xlat
rol
or
clc
mov
in
addl
push
outsl
push
pop
lahf
ss
repz
lahf
sbb
pop
lock
xorl
jmp
mov
and
mov
js
push
das
test
sbb
mov
aam
adc
push
sti
movsb
pusha
nop
shr
loope
jo
orb
pop
sub
add
out
jl
mov
adc
scas
or
lea
rcll
or
mov
std
sub
pusha
adc
ljmp
incl
sbb
hlt
push
fildl
sbb
in
mov
mov
test
fbld
out
ror
mov
mov
dec
pop
shlb
test
fstpt
ds
push
inc
xor
daa
insl
arpl
cmpl
enter
fnstsw
push
adc
inc
dec
js
loope
mov
sarl
rclb
jae
movsb
call
insb
dec
and
test
adc
xor
mov
neg
mov
add
hlt
rcrb
push
stc
lods
aad
inc
adc
jne
mov
popa
ret
bound
pushl
pop
mov
jecxz
dec
into
das
dec
insb
mov
fidivrs
in
cwtl
sub
sub
push
inc
lods
outsl
in
enter
dec
sti
inc
mov
test
js
sub
das
jbe
in
mov
and
push
cmp
data16
cmp
lcall
daa
loop
push
mov
jne
mov
xchg
les
pop
cmpsl
dec
adc
pop
cs
mov
ss
cmp
jmp
mov
mov
stc
imul
xor
and
mov
mov
sbbl
nop
xchg
push
loop
pop
cmp
inc
clc
in
sbbb
and
push
addb
fwait
sbb
daa
inc
push
xor
jne
scas
sahf
push
test
mov
push
xchg
sti
rep
mov
shll
pop
imul
sub
les
lds
xor
lcall
stc
scas
xchg
add
or
ret
add
ds
shll
ss
jg
clc
jp
cwtl
cmp
fnstenv
scas
sbb
bound
sarb
dec
mov
push
mov
push
xchg
hlt
test
sti
call
sbbb
add
std
pop
test
insb
add
gs
hlt
cmp
pop
jecxz
xchg
add
mov
xlat
pop
mov
cmpb
fcmovnb
and
arpl
filds
les
outsb
out
fistpl
inc
mov
jmp
call
incl
jb
inc
dec
adc
sahf
push
sbb
mov
xor
mov
dec
lock
xchg
push
aas
pop
add
jmp
test
pop
mov
or
loopne
aas
js
orb
sub
icebp
or
rorl
insb
scas
mov
fisubl
push
aas
xorl
repz
jns
mov
dec
cmp
xor
mov
sub
loope
jecxz
cmp
lock
ljmp
mov
xor
into
sub
mov
cs
dec
or
sub
cs
and
pushf
mov
mov
jns
mov
adc
loopne
xchg
int3
inc
push
mov
add
jecxz
jmp
mov
aaa
mov
sbbb
das
mov
cld
or
adc
mov
and
sub
adc
ficoms
sub
ljmp
lds
add
fsubrp
ffree
mov
xlat
xlat
orb
aaa
pop
and
sub
or
cmc
pop
shll
push
push
aad
aad
push
push
aaa
and
push
movb
jecxz
adc
je
xor
pop
ja
or
and
addl
fs
sbb
mov
ljmp
jno
lcall
push
loopne
and
orl
fidivs
pop
jne
cli
shll
in
sub
push
pop
mov
loope
imul
loop
movsb
out
xlat
pop
fwait
test
pop
cltd
push
push
xchg
out
xor
mov
mov
ret
test
sbb
mov
ret
inc
ss
sbb
leave
mov
js
pop
sbb
psubw
mov
cmpsl
jle
pop
movzwl
mov
mov
inc
inc
push
outsl
mov
inc
out
icebp
mov
push
and
mov
and
ja
adc
and
jbe
stos
xchg
jns
dec
ret
jl
ficoml
rcrl
ficompl
jae
add
cltd
xchg
call
jbe
pop
adc
les
xlat
mov
test
jae
xchg
jmp
fcmove
jl
shl
sarb
lcall
sub
or
add
mov
inc
sti
in
mov
mov
mov
or
int
xor
mov
test
in
sbb
imul
ret
in
movsl
decb
push
pop
stos
mov
mov
mov
and
mov
call
xchg
lock
adc
ret
shll
lock
dec
insb
add
adc
mov
jg
mov
sub
xor
jo
ljmp
push
xchg
dec
sbb
push
xchg
fisubs
hlt
fidivl
outsl
mov
dec
scas
arpl
inc
mov
mov
repnz
adc
cmpsl
pop
lods
mov
mov
pop
mov
popf
adc
cli
in
mov
fildl
xchg
imul
jno
clc
les
sbb
push
pop
jno
push
fistl
and
stos
xchg
aas
and
aaa
out
scas
adc
incl
or
cmp
arpl
insb
or
adc
push
stc
test
xchg
test
imul
push
scas
cld
mov
ret
lea
cld
and
test
mov
inc
loope
out
fwait
int3
jge
lods
mov
fsubs
cmc
dec
or
fisttpl
mov
test
inc
dec
dec
std
outsl
add
add
lret
cmp
cmpb
push
ja
mov
test
in
push
jne
sub
sbbl
icebp
daa
nop
xor
call
push
fsub
jg
sbb
hlt
test
cmpsb
sahf
jae
adc
mov
xchg
aas
push
call
shlb
mov
pushl
js
xchg
inc
int
mov
test
jle
jnp
rclb
or
fs
xor
push
fildll
js
call
ret
rclb
insl
mov
push
loopne
pusha
cmpsb
jae
stc
and
ret
and
cmp
dec
insl
inc
nop
jle
sub
jg
les
fistpl
lret
clc
sbb
or
push
mov
fiaddl
dec
aas
push
sub
jmp
jmp
roll
lcall
mov
mov
test
dec
sub
add
sti
pop
call
cmp
leave
bnd
xchg
cmp
xor
outsl
push
icebp
int3
jb
outsb
test
adc
je
xor
imul
mov
sar
ljmp
imul
popf
clc
lcall
in
inc
addr16
enter
hlt
fstpt
es
test
lret
sub
imul
or
and
mov
fnsave
jl
mov
sbb
dec
leave
rorb
scas
test
sbb
imul
cmp
lcall
cltd
inc
and
adc
xchg
call
xchg
or
in
push
sub
xor
xchg
inc
loop
mov
xchg
dec
inc
jno
fcomip
push
cli
insb
dec
test
or
jecxz
test
xchg
loopne
scas
outsb
or
jbe
adc
add
push
rcrb
les
dec
jbe
pushl
adc
in
out
push
jo
mov
stos
xchg
mov
cmp
push
pop
cs
mov
adc
jle
mov
sbb
ret
adc
bound
lock
sub
mov
ja
cmp
push
outsl
add
lds
in
lea
mov
fsubr
stos
mov
sbb
push
pop
dec
fcoml
mov
cmp
outsb
or
lret
rorb
addl
add
sub
call
mov
out
adc
sbb
adc
lcall
jg
popa
push
dec
rorb
jge
lret
inc
mov
adc
dec
rolb
pop
push
inc
test
xor
dec
and
push
mov
fcoml
inc
outsb
sarb
inc
ss
cmp
js
push
aam
mov
test
mov
mov
xchg
into
jge
movsl
cmpsl
and
xor
mov
jmp
pop
mov
pop
sub
add
xor
pop
outsb
lcall
addl
in
jae
stos
or
cltd
in
or
or
sbb
mov
push
pop
pop
dec
mov
faddl
es
sti
mov
movsl
aaa
lcall
pop
fidivrs
sbb
out
orl
mov
dec
int
jge
jge
outsb
jge
dec
push
shll
lcall
xchg
xchg
inc
lock
inc
mov
xor
pop
decb
pop
cmp
std
cmp
add
cmpsl
fdivrl
mov
mov
sarl
add
jbe
lcall
fimuls
bound
push
aas
xchg
inc
mov
imul
mov
repnz
repnz
enter
iret
jg
jmp
xor
mov
sub
jg
movsl
dec
mov
jb
mul
mov
mov
push
gs
stc
lods
fistpll
jecxz
mov
aam
add
testl
and
popa
mov
and
and
mov
sbb
xchg
add
cmp
ds
das
mov
xchg
decl
inc
xor
leave
push
adc
aam
mov
cltd
pop
lret
mov
sbb
mov
divb
pop
lock
fbstp
in
push
jns
cwtl
add
push
in
out
fsubrs
adc
jnp
std
xor
sbb
mov
ja
dec
jp
repnz
incl
testl
dec
xchg
or
sub
in
clc
sbb
and
xchg
jne
sbb
sub
lcall
add
iret
push
push
sub
pop
lahf
into
push
or
adc
pushl
mov
iret
push
add
inc
mov
lret
rcrb
inc
xchg
dec
adc
test
mov
js
inc
sub
jg
push
jbe
mov
mov
push
insl
add
call
cmp
push
iret
and
int
jecxz
into
sbb
andb
dec
lahf
mov
int
rorb
xchg
jge,pt
and
push
test
adc
imul
mov
cmp
test
stos
rcll
lea
inc
addb
mov
xor
das
inc
mov
shlb
push
jmp
jg
mov
clc
das
inc
pop
adc
xor
std
icebp
and
popa
out
jno
xchg
xchg
jae
call
popa
ja
jge
test
and
or
and
ss
adc
movsl
ja
adc
in
or
sub
cmc
jbe
jmp
rorb
fwait
jns
add
sub
mov
mov
mov
mov
int
push
cwtl
test
jmp
mov
xor
xchg
bound
insl
loope
jge
fcmovb
mov
cmc
pop
jmp
stos
icebp
and
adc
loopne
xor
mov
scas
pop
jp
mov
adc
xchg
mov
scas
ljmp
fidivl
jb
adcl
fistpl
lahf
dec
and
stos
jbe
roll
xor
or
shlb
orb
xchg
mov
pop
std
and
popa
sub
rorl
subl
push
rorl
cmp
loop
adc
push
add
mov
ss
loop
orl
sub
pop
ljmp
inc
in
scas
aas
fisubl
pop
sbbl
mov
mov
pop
cmp
pop
leave
out
fst
jg
jge
mov
mov
inc
in
inc
arpl
dec
outsl
push
test
enter
movsb
push
sub
pop
leave
pop
test
cmpsb
aaa
push
mov
mov
cmc
mov
xor
stc
inc
rolb
jl
push
xor
rorl
in
adc
push
jle
je
and
testb
mov
mov
jg
cli
sbb
lds
das
notb
adc
subb
pop
cmp
clc
aaa
cmp
daa
pop
out
mov
or
adc
outsl
loope
icebp
inc
add
andb
pop
setbe
inc
push
in
sbb
adc
push
push
sbb
sub
jge
aas
fwait
lock
add
ret
sbb
mov
or
sti
mov
out
xchg
adc
loope
fisubs
arpl
outsl
xchg
push
pop
dec
mov
inc
scas
test
mov
loop
mov
out
lods
scas
das
pop
mov
arpl
das
add
out
decl
adc
add
mov
mov
dec
shl
stos
loopne
xor
lods
jl
or
icebp
in
jmp
push
jo
jno
pop
loop
sub
int
and
movsb
call
aaa
aad
cmp
xchg
adc
sahf
stos
mov
jge
loope
aad
mov
inc
fsubrl
mov
fmull
adc
pushf
xor
add
jge
shl
das
fsubr
jmp
in
cltd
add
imul
pusha
test
pop
ficoml
add
jmp
lret
pop
out
mov
aas
add
mul
add
cmp
repz
ljmp
aam
sub
pop
stos
popa
adc
ds
push
cmp
mov
pop
cli
outsl
jne
mov
andl
sub
je
mov
pushf
xlat
test
add
sbb
xchg
xchg
mov
test
jg
clc
mov
lahf
aam
push
mov
stc
cmpsb
lret
fcmovnu
push
mov
push
mov
or
stos
xchg
push
and
mov
inc
jb
xchg
lret
add
jns
pop
mov
notl
sbb
pop
fisubrl
jb
push
cmp
push
cli
or
cltd
rorl
jbe
add
push
mov
rorl
sbb
das
stc
and
sti
subb
and
jmp
movsl
decl
jmp
sbb
fsub
xchg
push
movsb
sub
call
int3
push
mov
lea
ja
push
mov
call
pop
inc
cwtl
fimull
int3
pop
sub
push
shll
or
and
es
inc
inc
lock
cmpsb
pop
jecxz
cmp
xor
dec
sub
jbe
aam
mov
roll
stos
xor
fiaddl
data16
sbb
dec
mov
xor
push
sub
into
insb
fsub
or
rorb
dec
mov
ljmp
es
nop
lahf
test
pushf
fistpll
data16
mov
rorb
xor
icebp
mov
push
adc
mov
inc
mov
lods
and
push
xchg
lods
outsb
adcl
inc
push
xor
xor
push
mov
pop
pop
hlt
xchg
mov
cmp
jecxz
adc
sub
pop
aas
sbb
pop
fists
cmc
mov
lods
ret
rcrl
outsb
popf
and
dec
push
jne
decl
lods
fwait
lods
fiaddl
mov
jmp
inc
or
mov
inc
fcomps
mov
inc
aam
ljmp
dec
lcall
or
jnp
in
or
shr
notb
add
mull
sbb
aam
dec
ja
cmp
fsub
and
insb
mov
lods
pop
sbbb
je
mov
cld
ss
scas
push
sbb
cmp
cmpsb
dec
imul
lock
mov
stos
jo
sub
inc
arpl
es
add
add
mov
add
add
xlat
je
sub
and
inc
add
add
and
pop
or
xlat
or
mov
add
pop
xchg
pop
or
daa
inc
add
sbbl
pushf
mov
js
insb
andl
mov
addl
add
sbbl
jl
sbb
cwtl
fnstenv
dec
and
add
mov
scas
imul
xchg
fildl
out
pop
add
pop
orl
pop
insb
test
pop
add
and
add
rorb
fs
or
mov
add
rolb
adc
pop
in
sbb
addr16
jbe
fs
testl
add
ljmp
jnp
out
stos
mov
daa
inc
inc
add
das
lret
daa
inc
pop
repz
pop
adc
adc
pop
fst
daa
sbb
jnp,pn
mov
popa
add
adc
leave
push
test
add
mov
jg
add
imull
into
mov
pop
lcall
pop
pushl
iret
leave
testl
ja
aaa
jnp
nopl
cltd
add
adc
adc
pop
nop
pop
ss
pop
adc
ss
fcoms
lahf
pop
mov
pop
setnp
fisubrs
xor
ficompl
out
orb
out
and
dec
js
div
push
and
cld
sti
pop
push
push
push
pop
add
add
inc
jnp
push
adc
jb
inc
dec
movl
jae
cld
aas
repnz
inc
add
push
mov
and
int3
into
inc
push
pop
push
cmp
in
and
movq
test
gs
fldenv
adcl
in
mov
pop
and
add
lods
mov
dec
mov
xor
sarl
pop
sysret
dec
jae
rolb
lock
cld
int
xchg
xor
incl
aaa
out
jae
or
adc
je
add
sti
mov
outsb
add
insl
or
adc
push
testb
push
add
and
xchg
adc
sbb
adc
xlat
jne
fldl
add
add
add
add
add
or
or
mov
add
add
lds
je
push
mov
pop
xchg
mov
stc
in
add
add
pop
divl
ja
nop
pop
pop
add
add
or
int
int3
rolb
dec
ja
pop
fwait
aad
dec
in
pop
adc
pop
aaa
add
insb
adc
pop
adc
pop
lods
mov
das
loopne
xchg
dec
lcall
scas
aaa
sub
xor
dec
add
cmp
insb
ret
inc
mov
dec
inc
jnp
add
int
push
loope
imul
cmp
xor
or
inc
popf
fsubs
xchg
inc
lret
jb
fsubrs
test
dec
xor
pusha
outsb
inc
insb
cmp
sub
inc
addr16
sbb
lods
cmp
sbb
pop
dec
pop
xor
mov
sbb
mov
xor
cmpsb
fistpl
out
cmp
push
pop
inc
adc
insl
xor
outsl
add
jnp
in
add
dec
push
pop
out
inc
add
in
les
xor
cmp
jge
ds
std
scas
sbb
es
mov
cmp
fldt
inc
outsl
add
add
dec
xor
adc
lret
inc
inc
jmp
add
and
add
xor
mov
add
addl
sub
pop
or
xor
mov
adc
and
call
mov
sbb
add
add
sbb
jae
lods
inc
or
movsb
xor
aaa
or
aad
inc
addr16
push
add
or
dec
jp
mov
mov
mov
xor
sub
iret
je
sbb
imul
or
outsb
xor
shrl
dec
sbb
xor
shrb
push
add
inc
test
fnstcw
add
sub
jae
mov
dec
dec
push
cmp
and
mov
push
dec
dec
arpl
inc
lods
cmp
das
lea
loope
xchg
mov
or
jne
cmp
sub
scas
jnp
cltd
mov
outsl
in
inc
mov
sbb
sbb
push
add
mov
push
adc
xchg
pop
mov
push
in
out
dec
cmp
inc
and
cmpl
je
xor
data16
mov
xor
insl
gs
mov
dec
adc
mov
push
xor
scas
xchg
in
push
iret
rcrl
adc
adc
sub
sahf
fdivrl
add
xor
jns
frstor
sub
and
or
xor
cltd
sub
jne
movsl
test
inc
sub
add
pop
outsb
call
leave
xor
daa
js
sbb
popa
xor
out
jae
rorb
xlat
je
subb
or
inc
lahf
sbb
sbb
fs
lods
inc
inc
inc
lea
out
inc
adc
in
mov
xor
xchg
sbbb
mov
xor
or
push
xor
cwtl
addl
insb
dec
pop
sub
fmuls
insb
nop
mov
xchg
xor
add
movsb
mov
inc
add
or
pop
aaa
mov
daa
push
ss
adc
jmp
rclb
add
jecxz
adc
mov
mov
in
mov
nop
xchg
lret
dec
dec
test
loope
and
xorl
test
lods
xor
popa
add
xchg
xor
cmp
inc
sbb
rorb
lahf
jnp
add
and
xor
cmp
xchg
xchg
push
ret
sbb
add
add
lds
or
xchg
jnp
fstl
or
push
dec
or
inc
jns
and
xchg
cmp
ss
jae
outsb
fstps
or
xchg
push
sbb
fwait
jne
mov
lret
jg
or
and
jo
sbb
dec
adc
imul
pop
add
inc
in
dec
or
ret
jnp
sub
lods
xor
ss
lcall
inc
inc
jnp
add
lret
adc
cmp
lahf
scas
xchg
cmc
cmp
ret
das
cmp
popf
fstp
sbb
out
pop
xchg
cmpl
and
xor
inc
ja
inc
int3
inc
inc
sar
inc
add
push
mov
xor
mov
cmp
xor
in
dec
imulb
mov
test
sub
sub
push
cmp
dec
add
fistpll
push
and
and
jecxz
out
dec
cmp
xchg
fwait
xor
push
fs
rolb
movsb
scas
enter
movsl
jnp
mov
rcll
cwtl
sbb
pop
add
dec
jae
mov
cltd
sub
sbb
xchg
push
in
dec
or
dec
dec
ds
repz
cmp
jne
stc
data16
inc
daa
sub
loop
jg
aaa
sub
dec
xorb
dec
stos
mov
push
push
jb
add
stos
icebp
inc
cwtl
lods
fldl
cmp
out
xor
sbb
outsl
lods
pop
fbld
sbbl
pop
adc
pusha
fstpl
ss
xor
dec
push
add
pop
or
addr16
out
and
jae
add
add
xchg
xchg
or
sahf
and
out
inc
or
jg
add
sbb
add
adc
outsl
pop
mov
lods
psllw
adc
daa
adc
mov
lods
pop
xchg
add
shrl
dec
sbb
rorb
mov
cmc
add
mov
jno
test
jmp
xchg
fmuls
add
or
push
sti
jg
iret
lret
add
sti
clc
add
mov
arpl
add
insb
incl
sarb
sarb
xchg
in
ficoms
pushf
std
jo
imul
add
aaa
cvtps2pd
stos
loopne
push
cld
fldt
aad
mov
add
fsts
imul
out
das
dec
sub
sub
xor
div
aas
cli
test
mov
repz
mov
dec
test
repz
sarb
inc
and
fsubrp
jecxz
add
outsb
aaa
dec
dec
fs
xchg
add
adc
or
jns
push
ret
je
call
in
loop
xor
rcrb
imul
add
jg
pop
inc
inc
dec
add
dec
dec
dec
sub
adc
xor
xor
and
dec
and
das
cmp
cmp
cmp
sub
jo
in
and
cmp
inc
cmp
das
sub
push
pop
sbb
inc
fucomp
xor
cmp
cmp
adc
xor
ss
sub
add
xor
and
lcall
sub
pusha
jg
pop
cli
sub
sub
sub
aas
es
sub
std
repz
out
or
aas
add
sbb
sbb
push
pop
and
and
add
adc
add
or
pop
add
mov
add
or
push
or
add
or
add
add
add
pop
mov
xchg
add
orb
add
inc
adc
sahf
aas
test
dec
push
add
out
aad
push
testl
movntq
out
pop
daa
or
inc
cmp
pop
xchg
pop
adc
or
iret
rorl
add
fsubl
add
hlt
jns
xor
jp
add
cmp
enter
add
add
add
or
and
add
add
xchg
inc
fbld
jmp
xchg
les
test
pop
push
push
and
or
inc
adc
jne
fisttpl
pop
add
rorb
xor
jp
sbb
les
in
mov
out
andl
int3
insl
ret
sub
subl
adc
das
push
xchg
roll
adc
mov
sub
add
and
mov
sbb
cmp
and
cmp
outsb
xchg
add
mov
fnstenv
mov
or
add
xor
mov
stos
cmp
push
addr16
sbb
jno
xor
sub
xor
push
pop
jbe
mov
dec
mov
or
xchg
mov
jb
inc
and
xor
sbb
xchg
fwait
pop
adc
mov
jg
inc
push
dec
inc
inc
and
dec
and
push
add
jmp
nop
mov
or
and
or
sar
xchg
loop
nop
xor
adc
dec
inc
or
adc
and
adc
rolb
or
and
xchg
xor
and
add
fucom
es
mov
and
inc
nop
adc
mov
mov
and
adc
test
or
dec
adcb
push
ljmp
in
adc
inc
pusha
add
inc
push
adc
addb
adcb
sub
add
push
mov
mov
test
sbb
inc
xchg
rcl
sbb
adc
inc
popl
in
pop
sti
add
inc
and
test
inc
fiaddl
jecxz
je
and
push
nop
and
push
add
nop
jge
mov
and
sub
popa
nop
adc
or
and
sub
fcomps
addb
nop
or
mov
and
jns
lods
std
testb
sahf
test
and
aad
add
inc
inc
lods
mov
out
adc
scas
add
std
imul
dec
dec
cmp
inc
mov
jnp
mov
test
dec
lcall
add
add
adc
mov
cmpb
or
adc
fnsave
adc
push
xorl
and
and
out
push
jo
fstp
add
adc
test
or
mov
mov
push
mov
push
sub
jecxz
jg
ss
inc
and
mov
or
inc
adcb
mov
dec
add
arpl
pushl
outsb
les
adc
adc
push
adc
addb
jle
mov
dec
add
nop
and
add
jecxz
lods
adc
and
mov
dec
in
jecxz
push
or
std
mov
test
mov
inc
ret
cs
or
rclb
aas
mov
insl
add
jp
popa
push
outsb
test
cltd
test
add
or
lahf
out
mov
push
int
or
andb
test
shl
sbb
cld
test
add
adc
dec
ror
dec
mov
and
add
sti
inc
adc
and
dec
xorb
imul
in
xor
adc
test
jecxz
adc
inc
push
add
jno
adc
jmp
mov
mov
inc
test
jg
fildl
inc
mov
subb
sub
test
test
or
pushfw
add
and
outsb
inc
adc
jo
or
add
mov
dec
dec
push
ss
ret
adc
mov
add
mov
xchg
cmc
sarl
and
ja
xor
push
addb
es
nop
inc
pop
mov
fistpl
xchg
xlat
and
adc
push
sub
push
push
rclb
orb
imul
xor
cmc
dec
mov
pop
mov
adc
inc
push
mov
jmp
rolb
inc
jmp
inc
xchg
add
subb
mov
dec
pop
mov
movsl
nop
pushl
adcb
lea
push
fisttpl
in
sbb
or
inc
fldt
sbb
and
sbb
sbbb
sub
mov
and
inc
ror
push
ljmp
out
sar
cld
add
in
add
mov
je
clc
add
call
sti
imul
add
stc
ljmp
pop
mov
mov
fstp
jbe
xor
jnp
sub
cli
add
testl
mov
cmp
jmp
fsin
daa
fbstp
inc
jns
sbb
mov
aas
jae
mov
mov
and
clc
push
movq
idiv
daa
fucomi
mov
push
sahf
jmp
xchg
das
jae
arpl
lods
fldt
sbb
call
jg
fcomip
xchg
push
mov
in
mov
jae
xchg
sti
idiv
add
xor
jnp
in
cmp
das
jno
outsl
push
xlat
incb
mov
jns
add
stc
scas
pop
idivb
repz
outsb
mov
insl
sahf
sub
psrlq
pop
xchg
jbe
scas
mov
sbb
mov
xchg
xchg
dec
cmc
mov
dec
fnsave
in
sti
mov
sti
imul
mov
mov
mov
repz
xchg
in
insl
jns
inc
repz
cli
mov
jecxz
fucomi
inc
mov
pop
push
mov
mov
push
cmc
fisubrs
lahf
xchg
fsubrl
lret
jne
repz
ja
mov
jns
sub
sahf
out
jbe
cmp
out
daa
pop
jge
or
lahf
fcmovne
mov
pop
push
fucomip
mov
mov
jae
pop
fiadds
ja
sub
jne
jne
xlat
mov
mov
lods
fninit
fistpl
testb
arpl
sbb
mov
fstpt
out
jne
fldt
pop
jne
pop
fdivrp
inc
ljmp
int
mov
fucomip
sti
jnp
xchg
mov
cmpsl
push
idiv
or
das
sbb
xlat
mov
cmpsl
decl
jns
or
cmp
pop
std
imul
mov
outsl
jge
or
push
xchg
ljmp
push
push
xlat
stos
negl
mov
or
or
jg
or
adc
xchg
xlat
out
xchg
sti
frstpm(287
sub
idivl
divl
testl
dec
pop
les
imul
call
out
jnp
imul
daa
pop
mov
jbe
jge
pop
das
addr16
filds
adc
repz
lcall
roll
jae
xchg
addr16
cmp
pop
jg
jmp
call
out
in
mov
fnstcw
cmpsl
sbb
mov
icebp
sahf
pop
aad
std
mov
lcall
jnp
or
adc
lret
testl
insb
add
push
lret
adc
mov
daa
push
xchg
sti
fistps
andb
aaa
sti
out
std
fidivs
out
loope
icebp
testb
fucomip
adc
test
rcrl
daa
mov
imul
xlat
lahf
shll
and
rol
adc
inc
inc
daa
mov
icebp
imull
jo
sbb
mov
iret
jne
jae
fmull
inc
mov
push
icebp
pop
fcomip
xlat
mov
out
sbb
out
cmpsl
jg
icebp
scas
loope
clc
mov
push
int
jg
lcall
pop
scas
lahf
hlt
or
aaa
out
xchg
push
push
and
xor
out
cmp
ljmp
mov
pop
dec
inc
sbb
sub
xorl
ret
pusha
in
jecxz
sbb
add
sub
sbb
xchg
int
lock
xchg
dec
in
aam
xchg
stc
daa
jg
xchg
loopne
aam
call
sub
in
dec
stos
outsb
and
inc
ds
jne
pusha
push
mov
sbb
mov
call
push
clc
fs
mov
jno
push
dec
loop
bound
sbb
jb
jno
pop
mov
stc
fdivrl
pop
push
aam
push
push
mov
sbb
xor
scas
sar
stos
fldt
pop
inc
mov
adc
jl
adc
das
aaa
jp
pushf
ljmp
and
jg
subb
jl
or
xorb
cmp
incl
loope
lcall
js
pop
fwait
nop
popa
aam
mov
adc
jae
jae
pop
xor
call
push
push
jp
mov
jae
and
into
sahf
xchg
loop
test
jge
mov
incl
pop
adc
imulb
popf
ds
pop
dec
jp
nop
xchg
inc
push
push
test
adc
mov
adc
in
repz
movsl
dec
cmpsb
popf
cmp
mov
adc
sbb
mov
loop
lahf
push
sub
jns
jb
insb
cmp
jle
mov
jnp
push
adc
call
mov
popf
and
dec
xor
mov
lahf
inc
add
and
ret
add
mov
sar
pushl
mov
ds
xchg
cmp
add
popl
pop
jg
xor
mov
push
mov
mov
push
js
test
sub
adc
xor
xor
add
xchg
mov
mov
adc
add
addr16
or
inc
cltd
xchg
dec
sbb
in
incl
rcrb
jg
into
fcom
ds
adc
int3
mov
dec
insl
enter
mov
inc
mov
push
rorl
add
inc
sub
int3
testb
fsubs
cmp
xor
rcrl
lret
je
icebp
cli
outsl
gs
push
and
mov
lds
push
insb
int3
pop
cli
decl
fstpl
xchg
scas
nop
mov
pop
add
dec
lcall
cld
add
xor
stos
out
mov
outsl
or
xchg
pushl
pushf
jmp
mov
inc
or
call
pop
call
mov
mov
daa
push
pusha
stos
dec
rolb
add
fs
mov
int
or
mov
lcall
and
ja
sub
insb
xor
ja
test
movsl
xchg
insb
es
adc
jbe
sub
mov
sub
xchg
mov
pop
sahf
cmovae
fwait
in
jmp
jbe
push
dec
std
repz
sub
push
cmp
pop
pop
dec
les
movb
and
dec
inc
jae
add
jmp
or
lret
test
jmp
mov
fisttpll
clc
fisttpl
inc
add
adc
cmpsb
inc
shl
mov
in
leave
sub
xchg
outsl
stos
ljmp
jns
fdiv
adc
adcb
cmc
out
enter
add
daa
sub
mov
sub
lcall
mov
inc
mov
xchg
lcall
mov
push
fs
lods
nop
stos
xorl
sahf
dec
inc
mov
mov
dec
jmp
push
imul
mov
xor
je
test
push
leave
jg
ljmp
ror
cmpsl
push
aas
cmc
add
jg
jmp
mov
and
jb
mov
push
cmpsb
test
sub
adc
dec
push
inc
mov
fsubl
add
imul
fs
sbb
lds
add
or
xor
insb
mov
add
pop
sub
ss
loop
ret
arpl
fdivrl
jb
lcall
and
xor
jae
push
lods
fsts
ljmp
js
imul
or
cmpsl
iret
mov
inc
push
add
pop
cli
fists
cmc
mov
sub
mov
es
jnp
cltd
pop
mov
dec
ljmp
movsl
pushf
insl
pop
dec
mov
in
loopne
fldl
mov
lds
aam
cmpsb
pop
xor
add
mov
mov
dec
pop
push
test
or
add
add
ret
lahf
test
add
inc
outsl
insl
jo
jb
ljmp
jmp
je
imul
dec
outsl
fs
gs
popa
outsb
fs
outsl
adc
outsb
inc
imul
and
inc
insl
insl
neg
das
popa
je
adc
jae
or
mov
dec
popa
insl
sbb
sti
outsl
pop
je
jo
outsb
outsw
inc
js
sub
psubw
outsl
jae
dec
gs
inc
insb
jne
push
jbe
inc
popa
push
popa
adc
adc
jnp
neg
jb
cmovne
cmp
cmp
sub
mov
das
imul
mov
notb
imul
adc
dec
add
jge
inc
xor
adc
add
add
add
cmp
lock
lret
mov
sub
add
sbb
scas
and
add
or
gs
mov
pop
aas
mov
xchg
push
dec
pusha
dec
push
xlat
mov
inc
leave
inc
ss
addb
add
je
js
xor
mov
cmp
push
and
insl
loope
and
jo
jbe
sti
lcall
add
inc
add
out
insb
jb,pn
and
pusha
daa
add
xchg
mov
add
dec
sub
jo
push
mov
add
jb
jbe
jo
or
sbb
fbstp
add
adc
outsl
add
roll
add
add
add
add
incl
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
xor
add
jo
add
mov
add
lock
addb
adc
add
add
add
addb
add
lock
addb
add
sbb
add
inc
add
cmp
add
push
add
add
add
add
add
add
add
xor
add
or
add
xor
add
pop
add
xor
add
addb
xor
add
test
add
rolb
add
clc
add
sub
add
and
add
dec
add
addb
add
or
add
add
add
movsb
add
xor
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
je
add
movsb
add
add
add
add
stos
add
sub
add
or
add
stos
add
sbb
add
or
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
mov
add
dec
or
add
add
add
add
add
mov
add
or
add
add
add
add
rolb
add
add
add
add
add
add
add
roll
adc
add
or
add
add
add
add
adc
add
or
add
add
add
add
jl
add
or
add
add
int3
ret
add
xor
add
add
add
mov
add
add
add
or
add
add
add
add
mov
add
enter
add
add
or
add
add
add
add
enter
add
add
add
add
or
addb
add
or
add
add
add
lret
add
lock
add
lds
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
inc
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
adc
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
arpl
imul
add
add
add
add
add
add
push
add
add
sbb
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
pop
add
insb
add
and
dec
add
insl
add
outsb
add
add
insb
add
je
add
add
add
jne
and
push
add
add
add
add
add
add
insb
add
push
add
jb
jae
imul
add
add
cmp
add
add
add
add
add
adc
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
outsl
add
jb
and
inc
add
add
add
popa
add
add
add
jne
insl
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
dec
add
je
and
push
add
insb
add
jns
and
dec
add
outsb
add
jb
and
inc
add
popa
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
jae
je
add
js
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
bound
and
push
add
insb
add
add
add
jne
jae
imul
add
add
jb
popa
add
outsl
add
add
add
add
outsl
add
add
je
push
add
jb
jae
imul
add
cmp
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
leave
pop
add
lods
pop
add
pop
add
mov
add
loop
add
lock
add
add
add
adc
add
push
or
sub
add
add
add
cmp
add
add
add
dec
or
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
jbe
jo
xor
cs
insb
add
gs
insb
xor
cs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
gs
insb
outsl
jae
dec
gs
add
push
push
bound
je
