adc
push
pushf
ret
ds
cmpsb
mov
mov
imul
adc
mov
cltd
out
inc
into
inc
xchg
andl
mov
repnz
inc
xchg
or
clc
out
pop
cld
sub
add
mov
add
add
test
xchg
arpl
add
add
roll
sti
add
add
add
and
cmpsb
repnz
movsl
add
add
call
adc
mov
add
arpl
mov
add
addl
xchg
inc
js
add
jmp
jo
mov
add
add
shl
in
mov
je
add
push
fnstcw
add
add
into
add
xor
xor
push
jg
ret
sub
jl
mov
lock
fsubs
xlat
and
mov
pop
add
sbb
adc
pop
add
adc
daa
push
mov
clc
inc
in
mov
ljmp
xchg
add
add
xchg
add
add
cmp
mov
mov
mov
jge
dec
add
push
sub
adc
movb
dec
cmp
inc
inc
ljmp
cmp
iret
adc
xchg
add
pop
hlt
dec
std
mov
je
or
movsl
add
add
sahf
fisubrs
fwait
cmp
add
add
push
outsl
ds
inc
call
cmc
lahf
add
add
adc
add
add
mov
aaa
fwait
adc
add
add
mov
push
add
pop
sub
add
inc
push
mov
inc
or
mov
cmp
add
pop
orb
mov
or
in
lods
aam
add
add
das
in
sub
jae
pop
mov
add
add
int3
cld
inc
sbb
add
add
add
add
cmp
add
xchg
ja
pusha
pusha
outsb
add
add
add
mov
or
add
add
je
add
adc
fdivrs
add
ljmp
add
leave
sbb
cmc
add
add
arpl
pop
pop
in
add
add
push
dec
xor
pop
pop
pop
sub
dec
bound
lret
jb
sbb
add
imul
cmpsl
add
add
insl
mov
cmp
mov
lods
cmp
sub
add
inc
lahf
shrd
into
ds
in
sub
dec
pop
add
add
mov
add
das
push
sbb
xor
lret
add
add
iret
cmp
add
xchg
mov
aam
xor
add
in
lcall
add
xor
pop
add
add
std
and
sbbb
imul
enter
xlat
test
add
inc
std
add
add
sbb
add
sub
push
mov
bound
add
aaa
inc
faddl
add
enter
std
adc
fldl
add
pop
mov
add
add
or
mov
xchg
out
jne
add
add
pop
and
add
jl
icebp
dec
test
pusha
jbe
popf
add
add
or
add
repnz
jno
or
add
inc
inc
inc
and
stc
add
add
mov
add
add
sbb
sub
add
inc
push
mov
add
add
sahf
out
cmp
add
add
into
leave
dec
das
jle
aam
add
add
lds
dec
mov
add
add
and
mov
daa
cmpsl
xor
push
mov
add
add
add
rolb
jl
push
aad
lds
inc
dec
inc
mov
cmpb
je
cmp
je
xor
inc
dec
add
ror
loop
push
push
push
push
call
push
call
push
push
push
push
call
call
push
call
ret
mov
push
xor
call
add
or
call
add
cltd
mov
call
add
cmp
je
test
mov
call
add
cltd
pop
loop
lea
xor
call
add
jae
or
jne
lea
sub
cmp
jne
popl
pusha
mov
push
lea
neg
lea
neg
mov
adc
mov
not
inc
lea
mov
dec
mov
adc
mov
pop
loop
xor
mov
xor
mov
pusha
mov
dec
dec
dec
je
neg
mov
inc
mov
inc
mov
popa
addl
xor
pusha
mov
mov
inc
inc
mov
not
mov
mov
inc
not
inc
popa
mov
xor
mov
inc
loop
popa
add
add
mov
neg
neg
mov
lea
popa
jmp
add
add
add
adc
add
add
mov
add
lock
adcb
add
or
add
and
add
cmp
add
push
add
sbbb
add
push
add
add
add
add
add
add
add
add
add
andb
add
loopne
add
clc
add
andb
add
adc
add
sub
add
inc
add
andb
add
jo
add
mov
add
mov
add
add
add
add
add
add
push
add
add
add
add
add
add
addb
add
call
add
add
add
addb
add
xor
add
add
add
add
add
add
add
add
add
dec
add
addb
add
add
add
add
add
add
add
add
add
pusha
add
addb
add
add
add
add
add
add
add
add
add
js
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
pusha
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
or
add
add
add
add
add
add
add
add
and
add
nop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
mov
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
pop
add
add
push
add
add
add
add
add
dec
add
add
push
add
add
add
add
add
sldt
add
push
add
add
add
add
add
pop
add
add
push
add
add
add
add
add
pop
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
adc
add
pusha
push
add
add
add
add
add
and
add
jo
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
and
add
nop
push
add
mov
or
add
add
add
add
add
add
enter
in
add
add
add
adc
add
push
add
add
add
add
add
test
add
in
add
add
add
and
mov
add
in
add
add
add
test
add
push
add
add
add
add
pop
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
jbe
add
in
add
add
add
dec
pop
add
and
add
add
add
push
sbb
add
add
add
mov
add
in
add
add
add
test
add
and
add
add
add
enter
and
add
add
add
call
sbb
add
add
add
or
add
and
add
add
add
sub
add
and
add
add
add
dec
dec
add
and
add
add
add
push
sbb
add
add
add
mov
add
in
add
add
add
test
add
and
add
add
add
enter
and
add
add
add
call
sbb
add
add
add
or
add
and
add
add
add
sub
add
pop
add
in
add
add
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
push
add
sbb
push
xor
sbb
pop
aaa
sbb
arpl
sbb
subps
add
pop
adc
adc
adc
adc
add
arpl
add
add
xor
jg
xor
and
pop
add
data16
inc
add
dec
add
outsb
add
add
jne
dec
dec
jnp
dec
dec
jns
pop
dec
jns
push
push
jp
pop
push
jle
arpl
add
jno
movsb
dec
or
add
dec
mov
bound
add
gs
add
sub
mov
imul
mov
insl
xor
lret
add
adc
out
jl
add
mov
add
mov
push
add
mov
add
nop
sub
inc
lds
inc
addb
dec
add
inc
add
dec
add
add
push
add
je
arpl
jge
stos
data16
push
insb
scas
insb
add
add
jne
jnp
jnp
jl
jl
pop
int
add
push
add
xorb
hlt
test
add
and
add
xchg
add
sub
add
xor
add
aaa
mov
cmp
mov
push
pop
scas
add
mov
pop
pop
mov
push
push
mov
add
mov
add
roll
push
push
aad
arpl
add
ret
outsb
lds
arpl
add
lea
add
test
test
add
mov
mov
mov
mov
fstpt
movsb
add
mov
xchg
add
in
add
fidivrl
add
shrl
loope
mov
mov
loope
pushf
pushf
out
mov
loope
ret
ret
ret
add
mov
leave
leave
leave
add
int
add
rolb
mov
add
enter
aad
add
add
fadd
add
out
add
jmp
rolb
flds
sti
jecxz
add
lret
int
jmp
add
shr
add
into
repz
xlat
cmc
add
jecxz
add
in
add
ljmp
repz
out
out
out
cmc
add
div
add
clc
clc
add
stc
stc
add
cld
cld
add
std
std
add
incl
add
cmp
add
add
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
cmp
xor
pushf
pushf
pushf
pushf
pushf
pushf
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
sbb
cmp
xor
xor
add
pushf
pushf
pushf
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
sbb
cmp
xor
xor
add
pushf
pushf
cltd
pushf
fwait
fwait
fwait
fwait
xchg
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
cltd
sbb
cmp
je
xor
pushf
pushf
pushf
pushf
pop
pop
test
fwait
fwait
fwait
fwait
fwait
fwait
lcall
mov
xchg
dec
dec
adc
outsl
daa
and
add
fwait
fwait
fwait
fwait
lcall
cmp
pushf
pushf
pushf
pop
push
dec
dec
dec
adc
and
fwait
fwait
fwait
fwait
lcall
cmp
add
xchg
dec
dec
dec
adc
pop
add
lcall
add
add
pop
pop
jge
dec
push
daa
outsb
mov
add
lcall
add
add
pusha
jl
pop
xchg
adc
lea
fwait
fwait
fwait
fwait
lcall
add
push
adc
pushf
jp
pop
sbb
inc
dec
outsb
sub
fwait
fwait
fwait
fwait
fwait
sbb
add
add
push
dec
dec
adc
add
push
aas
xor
fwait
fwait
fwait
fwait
fwait
fwait
fwait
sbb
add
add
dec
dec
dec
adc
pop
add
xor
xor
fwait
fwait
pushf
fwait
fwait
fwait
fwait
fwait
fwait
sbb
add
add
dec
dec
dec
push
and
inc
aaa
xor
xor
fwait
pushf
pushf
pushf
fwait
fwait
fwait
fwait
fwait
sbb
add
add
jge
dec
push
daa
outsb
mov
add
je
xor
pushf
pushf
fwait
fwait
fwait
fwait
sbb
add
add
jl
xchg
sbb
dec
dec
dec
lea
inc
jae
dec
mov
pushf
pushf
pushf
pushf
pushf
pushf
fwait
fwait
fwait
sbb
add
add
jl
push
aas
dec
outsb
sub
inc
jae
bound
test
pushf
sbb
add
add
add
xor
pushf
pushf
mov
push
dec
dec
adc
pushf
pushf
pushf
pushf
pushf
pushf
sbb
add
add
add
cmp
xor
xor
pushf
pushf
pushf
pushf
pushf
pushf
pop
push
dec
dec
dec
adc
pushf
pushf
sbb
add
add
add
cmp
xor
xor
pushf
pushf
pushf
pushf
pushf
pushf
pop
pop
dec
dec
dec
adc
pushf
pushf
sbb
add
add
add
cmp
je
xor
pushf
pushf
pushf
pop
pop
jge
dec
push
pushf
pushf
pushf
pushf
pushf
pushf
sbb
add
add
add
cmp
cmp
pusha
jl
pop
xchg
sbb
sbb
add
add
add
jb
jae
inc
mov
jle
jl
pop
xchg
pushf
pushf
pushf
pushf
pushf
xchg
add
add
add
add
inc
mov
pushf
pushf
xchg
pop
pop
xchg
pushf
pushf
pushf
xchg
add
add
add
add
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
insb
imul
add
add
add
add
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
sbbl
add
add
add
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
xchg
add
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
adcl
add
add
add
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
fwait
jg
add
add
xchg
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
xchg
xchg
xchg
xchg
add
add
add
add
dec
addb
xchg
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
incb
add
incb
add
incb
add
incb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
sldt
dec
sbb
add
add
push
and
add
push
add
and
inc
xor
adc
add
or
sbb
add
imul
add
insl
and
add
and
push
push
pop
add
adc
or
je
xor
bound
cmp
outsl
add
push
add
pop
add
inc
add
push
add
pusha
add
jp
push
jnp
add
add
ja
js
ja
jle
jle
xorb
sahf
xor
add
inc
add
mov
inc
add
mov
push
pop
add
or
fisubl
add
push
or
sub
les
fidivl
add
insl
pop
add
jl
add
jle
add
pushf
add
and
adc
adc
add
sub
sub
cmp
sub
cmp
movsb
cmp
add
lret
or
add
das
add
xor
inc
lahf
inc
add
dec
add
pop
add
push
add
pop
add
pop
add
dec
add
dec
add
inc
add
push
add
outsb
add
outsb
add
insl
add
imul
jae
je
push
xlat
dec
add
pop
add
outsb
add
add
je
mov
mov
loopne
dec
add
popl
loop
pop
add
mov
popa
add
mov
mov
adc
xchg
adc
mov
adc
pop
xchg
add
adc
add
sbb
add
sub
add
and
add
sub
mov
add
mov
add
cmpsl
add
add
test
add
mov
push
pop
mov
pop
pop
mov
pop
pop
mov
add
mov
add
es
ret
dec
faddl
dec
push
roll
push
push
rolb
popa
pop
fadds
jns
aam
jge
flds
imul
push
or
test
add
nop
nop
add
xchg
xchg
add
mov
lods
add
movsb
lods
add
mov
addl
movsb
test
mov
add
mov
sahf
add
mov
addl
lds
add
in
nop
add
stc
lahf
add
aam
add
lods
add
ret
cwtl
add
sarb
out
mov
add
lods
fiaddl
lods
lods
flds
mov
filds
mov
jmp
add
jmp
cmpsb
cmpsb
repnz
rol
add
lret
int3
int
add
int3
int3
add
rcl
add
xlat
roll
aam
roll
rcl
aam
aam
aam
fcom
add
fcmovbe
add
fldl
fiaddl
flds
faddl
fcos
iret
add
fucom
add
aam
add
int
add
loope
add
in
jmp
out
out
out
add
out
out
add
jecxz
add
jmp
testb
div
add
idiv
add
idiv
add
clc
clc
add
stc
stc
add
sti
sti
add
cli
add
sti
std
add
cld
cld
add
incb
incl
add
or
add
mov
mov
dec
cmp
or
lret
decl
add
call
dec
ret
fsubrs
sar
mov
dec
lahf
movsl
push
add
call
dec
jp
xchg
call
rcl
decl
dec
add
arpl
sub
add
rcl
decl
add
mov
jle
popa
xor
sub
call
sar
mov
add
add
add
incl
pop
cmpsb
lcall
add
add
add
fcomps
xorl
pop
call
sar
mov
add
add
adc
je
aaa
push
daa
xchg
call
fdivr
mov
add
ja
bound
sub
and
dec
inc
xor
dec
fcom
rcl
decl
jg
insb
push
sub
add
test
call
sar
mov
add
jnp
test
sbb
pop
pop
push
popf
push
sbb
call
rcr
decl
jo
jne
comiss
cltd
fmuls
call
sar
mov
add
add
nop
cmp
cmp
insl
arpl
call
decl
add
inc
inc
cmp
fdivr
scas
jge
imul
mov
add
add
add
mov
ljmp
call
sar
mov
add
add
add
fwait
mov
enter
stos
lcall
add
add
add
les
call
jp
dec
mov
add
add
add
sar
call
call
add
add
add
mov
sar
sar
sar
sar
mov
add
add
add
mov
call
mov
add
add
add
dec
mov
add
les
lret
add
add
incl
mov
add
or
add
or
add
or
add
or
add
cwtl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
sub
add
dec
adc
add
add
jge
add
add
xor
jnp
cmp
add
pop
add
add
cmp
jae
das
jg
add
add
jp
arpl
add
add
add
cmp
add
imul
add
jno
add
insb
cmp
test
jnp
add
lods
add
add
add
mov
add
cmp
add
les
add
dec
add
push
add
pop
add
dec
add
jns
jg
jl
cld
test
add
mov
sti
movsl
outsb
add
movsl
insl
add
cmpsb
jp
pushl
jg
add
xchg
add
adc
add
add
add
xchg
add
mov
dec
dec
mov
add
and
add
faddl
push
jbe
add
ljmp
fwait
mov
xchg
mov
xchg
add
mov
add
fiadds
add
cmpsb
add
int3
mov
add
test
add
incl
mov
lret
flds
loope
rolb
loopne
loopne
in
in
ljmp
add
div
add
clc
clc
add
incl
stc
cli
stc
add
cld
cld
add
incb
incl
add
add
sbb
incl
and
add
incl
ljmp
pop
lcall
add
dec
and
cmp
xor
pop
incl
add
add
cmp
adc
incl
add
add
dec
xor
dec
push
cs
pop
incl
add
xor
inc
adc
mov
sbb
pop
pop
incl
add
cmp
or
sbb
and
pop
incl
add
cmp
sub
dec
ss
lcall
add
add
or
push
xor
or
pop
incl
add
add
das
add
dec
or
incl
add
add
cmp
inc
incl
add
add
dec
lcall
call
push
inc
push
add
add
add
call
adc
add
add
call
add
add
add
pop
push
pop
push
push
push
pop
pop
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
xchg
ds
add
add
add
add
add
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
ds
ds
ds
ds
add
popa
add
add
add
add
add
add
add
pushf
add
add
add
pushf
add
add
add
pushf
add
add
add
pushf
add
add
add
pushf
add
add
add
pushf
add
add
add
pushf
add
add
add
ds
ds
ds
and
and
add
add
add
add
add
clc
stc
stc
clc
stc
stc
clc
stc
stc
clc
stc
stc
clc
clc
clc
clc
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
incl
add
pushf
add
add
xchg
ds
xor
mov
ljmp
xchg
pop
pushl
mov
out
add
add
stc
stc
stc
stc
stc
stc
clc
stc
stc
clc
stc
stc
clc
stc
stc
clc
clc
clc
clc
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
incl
add
pushf
add
add
xchg
ds
inc
lds
cs
sbb
xor
push
add
add
add
stc
stc
stc
stc
stc
stc
stc
stc
stc
clc
stc
stc
clc
stc
stc
clc
stc
stc
out
out
cmc
clc
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
ljmp
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
cmc
div
incl
add
pushf
add
add
xchg
ds
pop
int
jmp
icebp
sar
xor
add
add
add
stc
cli
cli
stc
cli
cli
stc
stc
stc
stc
stc
stc
clc
stc
stc
dec
into
jmp
decl
jnp
mov
clc
push
clc
clc
fnstsw
sub
arpl
sbb
mov
div
push
div
push
div
push
div
push
div
push
div
push
div
incl
add
pushf
add
add
xchg
jecxz,pt
loopne
incl
rclb
fcos
pop
pop
pop
in
add
add
stc
cli
cli
stc
cli
cli
stc
cli
cli
stc
stc
stc
dec
lret
arpl
jmp
and
incl
outsb
inc
sar
fstpt
sub
lods
dec
ud0
xor
pushl
div
push
div
push
div
push
div
push
div
push
div
incl
add
pushf
add
add
xchg
mov
xchg
ds
popf
ds
ds
xchg
ds
add
add
cli
cli
cli
stc
cli
cli
stc
cli
cli
stc
cli
cli
call
mov
jmp
and
decl
mov
pop
adc
lods
dec
ud0
push
call
sbb
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
add
add
add
add
xchg
ds
ds
ds
ds
ds
add
add
add
cli
cli
cli
cli
cli
cli
cli
cli
cli
stc
cli
cli
lcall
mov
ljmp
sub
jmp
xchg
decl
je
mov
addr16
mov
dec
or
call
sbb
idiv
clc
push
div
push
div
push
div
push
div
push
div
incl
add
pushf
add
add
add
add
cli
sti
sti
cli
cli
cli
cli
cli
cli
cli
cli
cli
lcall
mov
lcall
repz
xchg
decl
je
mov
jl
push
mov
ljmp
xor
clc
push
clc
clc
push
clc
clc
push
div
push
div
push
div
incl
add
pushf
add
add
add
add
sub
add
cli
sti
sti
cli
sti
sti
cli
cli
cli
push
in
out
outsl
outsl
test
incl
push
aad
xlat
xlat
cmc
decl
ja
mov
test
push
test
out
xorb
sti
jecxz
lcall
sbb
idiv
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
div
push
div
incl
add
pushf
add
add
add
add
sub
in
adc
push
lock
lods
mov
cli
sti
sti
faddp
stos
mov
xor
jle
test
out
pusha
mov
xchg
jl
jg
xor
mov
test
push
mov
xor
ffreep
lods
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
div
incl
add
pushf
add
add
add
add
sub
in
and
and
ds
aam
fnstsw
sub
lods
dec
ud0
das
push
lcall
jns
pop
pop
mov
arpl
push
pushl
xchg
and
outsl
xor
mov
push
scas
clc
stc
stc
clc
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
incl
add
pushf
add
add
add
add
sub
jmp
and
decl
jae
mov
pop
adc
lods
dec
ud0
push
call
sbb
stos
pushw
mov
ljmp
xchg
pop
pushl
mov
clc
stc
stc
clc
stc
stc
clc
stc
stc
clc
stc
stc
clc
clc
clc
clc
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
incl
add
pushf
add
add
add
add
sub
ljmp
sub
jmp
xchg
decl
jne
mov
addr16
mov
dec
or
call
sbb
insb
scas
insb
incl
xor
cs
sbb
xor
addb
stc
clc
stc
stc
clc
stc
stc
clc
stc
stc
clc
stc
stc
clc
clc
clc
clc
clc
clc
push
clc
clc
push
clc
clc
incl
add
pushf
add
add
add
add
sub
lcall
repz
xchg
decl
jne
mov
jl
push
mov
ljmp
xor
insl
lcall
dec
jmp
icebp
sar
xor
inc
stc
stc
stc
stc
stc
stc
stc
stc
stc
clc
stc
stc
clc
stc
stc
clc
stc
stc
clc
clc
clc
clc
clc
clc
push
clc
clc
incl
add
pushf
add
add
add
add
sub
incl
push
aad
xlat
xlat
cmc
decl
js
mov
test
push
test
out
xorb
sti
jecxz
lcall
sbb
jl
jl
xchg
xchg
xchg
xchg
popa
rclb
fcos
inc
jle
stc
cli
cli
stc
cli
cli
stc
stc
stc
stc
stc
stc
clc
stc
stc
clc
stc
stc
clc
stc
stc
clc
stc
stc
clc
clc
clc
incl
add
pushf
add
add
add
add
sub
ljmp
out
push
pop
scas
jmp
jg
xor
mov
test
push
mov
xor
loope
scas
mov
mov
incl
in
ljmp
test
pop
pop
mov
dec
dec
jnp
enter
stc
cli
cli
stc
stc
stc
stc
stc
stc
clc
stc
stc
clc
stc
stc
clc
stc
stc
clc
stc
stc
incl
add
pushf
add
add
add
add
sub
out
sub
mov
jmp
mov
pushl
xchg
and
gs
mov
push
mov
sti
sti
sti
sti
sti
sti
call
out
ljmp
insl
jmp
cmp
and
and
incl
outsb
inc
aam
stc
cli
cli
stc
stc
stc
stc
stc
stc
clc
stc
stc
clc
stc
stc
clc
stc
stc
incl
add
pushf
add
add
add
add
xchg
ds
xor
mov
ljmp
xchg
pop
pushl
mov
cld
cld
cld
cld
cld
cld
sti
cld
cld
sti
sti
sti
sti
sti
sti
sti
sti
sti
call
mov
jmp
and
decl
stc
cli
cli
stc
cli
cli
stc
stc
stc
stc
stc
stc
stc
stc
stc
clc
stc
stc
incl
add
pushf
add
add
add
add
xchg
ds
inc
lds
cs
sbb
xor
addb
cld
cld
cld
cld
cld
cld
cld
sti
cld
cld
sti
cld
cld
sti
sti
sti
lcall
mov
ljmp
sub
jmp
xchg
decl
jne
cli
cli
cli
stc
cli
cli
stc
cli
cli
stc
cli
cli
stc
stc
stc
stc
stc
stc
incl
add
pushf
add
add
add
add
xchg
ds
pop
int
jmp
icebp
sar
xor
inc
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
sti
cld
cld
sti
cld
cld
lcall
mov
lcall
repz
xchg
decl
jne
cli
cli
cli
cli
cli
cli
stc
cli
cli
stc
cli
cli
stc
cli
cli
stc
stc
stc
incl
add
pushf
add
add
add
add
xchg
jecxz,pt
loopne
incl
rclb
fcos
inc
orl
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
sti
cld
cld
ljmp
incl
test
call
aad
xlat
xlat
cmc
call
jp
cli
cli
cli
cli
cli
cli
cli
cli
cli
stc
cli
cli
stc
cli
cli
stc
cli
cli
incl
add
pushf
add
add
add
add
xchg
mov
push
xchg
xchg
mov
mov
fsubr
fdivr
cld
std
std
cld
std
std
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
pushl
retw
test
lcall
shr
cli
sti
sti
cli
cli
cli
cli
cli
cli
cli
cli
cli
stc
cli
cli
call
aam
incl
add
pushf
add
add
add
add
scas
insl
pushl
jne
fsubr
fdivr
std
std
std
std
std
std
std
std
std
cld
std
std
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
call
shr
lcall
mov
call
shr
sti
sti
sti
cli
sti
sti
cli
sti
sti
call
dec
into
into
mov
mov
add
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
std
std
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
sti
cld
cld
sti
sti
sti
sti
sti
sti
pushl
stos
stos
ljmp
test
scas
mov
add
bound
add
sbb
add
add
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
std
std
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
sti
cld
cld
sti
cld
cld
sti
sti
sti
inc
mov
cmc
cmc
cmc
push
hlt
hlt
jmp
jecxz
mov
fs
add
add
add
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
std
std
cld
std
std
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
sti
cld
cld
dec
into
into
cli
cli
cli
jmp
jmp
lret
ljmp
insl
mov
add
add
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
std
std
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
dec
int
jmp
in
dec
leave
leave
ljmp
push
sub
add
push
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
std
std
cld
cld
cld
cld
cld
cld
ljmp
inc
mov
mov
add
add
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
cld
cld
cld
cld
fdivr
mov
imul
add
xor
add
or
add
add
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
dec
int3
int3
incl
add
and
add
push
fiadds
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
incb
add
cli
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
incb
add
incb
add
sub
add
sbb
add
xor
add
add
and
add
add
pusha
or
add
dec
sbb
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
inc
xor
sahf
das
in
adc
or
add
add
add
jno
jb
jge
jge
jl
jl
jl
jl
jl
jl
jp
jl
jp
jl
jnp
jl
jnp
jl
jnp
jp
jnp
jp
jnp
jnp
jnp
jnp
jnp
jp
jns
jnp
jns
jnp
test
cmp
add
add
cmp
cmp
and
add
daa
sahf
adc
sbb
pushl
jb
dec
fcmovnu
fst
incl
add
pushf
cmp
inc
int
call
inc
call
jae
pushl
into
iret
sar
stc
stc
stc
clc
stc
stc
cld
call
std
cld
clc
sti
std
jmp
int3
mov
cld
push
idiv
push
div
push
div
jns
jnp
add
add
lahf
inc
hlt
xchg
in
nop
pushl
lods
imul
int
into
sar
push
clc
clc
std
sti
std
loop
icebp
lcall
mov
jmp
sti
cli
std
movsl
cmp
xor
jmp
adc
std
push
cmc
cmc
std
hlt
cmc
cmc
std
jns
jp
add
add
cmp
jmp
dec
repz
addb
push
clc
clc
std
std
inc
inc
mov
sbb
cltd
std
adc
mov
and
mov
xchg
insb
pop
std
int3
pop
or
mov
inc
add
push
and
std
push
cmc
cmc
std
hlt
cmc
cmc
std
jns
jp
add
add
add
add
cmp
cmp
aaa
mov
ficoms
push
adc
add
add
cli
cli
cli
pushl
mov
decl
cmpsl
decl
pop
inc
push
push
das
pushl
add
push
div
push
div
jns
jp
add
add
add
add
ror
lret
cli
std
std
dec
push
sar
xchg
idiv
jb
mov
std
stc
popl
inc
cwtl
stc
mov
add
push
div
std
div
idiv
jns
jp
add
add
sub
mov
adc
jne
sahf
lahf
mov
push
stc
cli
std
ficoms
cmp
js
aam
xchg
xchg
std
jns
into
std
jne
push
std
gs
mov
pop
std
mov
push
div
std
cmc
div
std
jnp
jp
add
add
sub
test
lcall
pop
xchg
call
adc
dec
jl
ljmp
inc
add
dec
sub
call
test
call
mov
pushl
ja
ljmp
movsb
test
stc
stc
cli
push
clc
clc
push
clc
clc
jp
jp
add
add
add
add
add
add
and
call
adc
std
pop
dec
push
ficompl
std
mov
ds
xorb
std
addr16
adc
xchg
std
pop
xchg
outsb
std
idiv
stc
std
clc
stc
stc
push
div
std
div
idiv
jp
jp
add
add
das
xor
mov
sub
jmp
push
imul
insl
pop
add
pop
pop
call
dec
inc
out
mov
jmp
pop
clc
stc
stc
clc
stc
stc
clc
stc
stc
clc
clc
clc
jp
jp
add
add
add
add
add
add
lahf
scas
mov
loop
into
int
std
push
dec
pusha
jmp
xchg
mov
std
jmp
jle
jp
insl
incl
fisubs
fcos
iret
std
push
jnp
cld
idiv
std
std
clc
stc
stc
clc
div
std
idiv
clc
std
jp
jl
add
add
push
fs
push
push
adc
call
lods
std
cmp
addr16
std
fidivl
std
sarb
jmp
mov
clc
decl
enter
lea
inc
inc
jns
loopne
push
div
std
clc
div
std
jp
jnp
add
add
dec
jb
ss
sub
adc
and
std
out
out
cld
std
cli
std
lcall
std
adc
adc
std
push
stc
stc
std
div
idiv
jp
jnp
add
add
push
shrl
dec
shll
xchg
sub
std
std
std
cli
cld
cld
pushl
es
scas
ljmp
sub
stc
cli
cli
stc
cli
cli
jl
jnp
add
add
add
add
gs
into
pop
ljmp
pushf
std
es
and
cli
cli
cli
std
cld
cld
cld
std
stos
lods
push
push
sar
cmpsb
cmpsb
repnz
das
popa
std
clc
clc
clc
std
stc
clc
clc
std
jle
jle
add
add
popa
sahf
popa
dec
dec
pushf
dec
decl
iret
cmp
movsb
std
cli
cld
cld
std
cld
cld
cld
std
std
aad
in
std
pop
pop
mov
jl
fscale
pushf
sahf
lret
std
std
ljmp
imul
add
inc
ror
ror
jae
je
mov
mov
std
cld
std
std
cld
sti
sti
cld
cld
cld
cld
lcall
ljmp
ljmp
mov
rol
pop
pop
pop
roll
add
xor
add
add
iret
lret
aam
std
cld
cld
cld
std
std
std
std
sti
sti
sti
std
cld
std
std
cli
cld
cld
std
cli
cli
cli
std
cld
std
std
std
stos
stos
stos
dec
lret
lret
std
leave
leave
leave
inc
rol
xor
das
popf
ds
pop
lret
aam
std
cld
cld
std
sti
std
std
std
std
std
std
sti
sti
sti
std
std
std
std
cld
sti
sti
std
cli
cld
cld
std
cli
cld
cld
std
cld
cld
cld
cli
cli
cli
std
std
rcl
sar
cli
cli
cli
decl
dec
ret
cs
into
ror
aam
std
std
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
cld
std
std
cld
sti
sti
std
std
std
dec
int3
int3
fstp
push
push
push
ret
iret
ror
aam
std
std
std
std
std
std
std
out
out
out
inc
ret
ret
lcall
pop
mov
xlat
xlat
xlat
aam
fscale
fscale
fcmovnu
fscale
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fdivr
fstp
pop
pop
pop
fwait
inc
inc
dec
or
add
add
add
mov
add
clc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
test
xchg
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
pop
add
add
cmp
add
add
out
into
shrb
incl
add
pop
inc
scas
aaa
call
add
mov
stc
cli
stc
call
pushl
clc
cli
cli
push
div
incl
add
push
dec
mov
xchg
incl
inc
in
scas
mov
decl
mov
incl
call
jno
lcall
sub
push
div
incl
add
push
add
add
dec
mov
add
add
mov
mov
lcall
and
incl
cmp
in
jp
push
add
push
div
incl
add
push
sub
mov
lea
push
shll
decl
xchg
lret
dec
jno
pushl
pop
push
clc
clc
incl
add
push
add
add
dec
push
mov
incl
add
mov
mov
mov
add
xchg
xor
call
jp
push
les
call
jge
ljmp
push
cli
cli
push
clc
clc
incl
add
push
add
add
dec
push
cwtl
jle
dec
fdivr
inc
dec
mov
jnp
cmp
cld
test
inc
insb
cmp
dec
pop
xor
pop
in
decl
cmp
clc
stc
stc
clc
div
incl
add
push
add
add
cmp
jns
out
mov
pusha
dec
jmp
outsb
call
fstpt
lods
cmc
popf
ljmp
xchg
stc
sti
cli
clc
stc
stc
incl
add
push
dec
aas
pushf
xor
add
pop
push
int3
mov
jmp
hlt
sar
ss
cmp
jae
push
clc
clc
incl
add
push
xor
jg
add
cli
cld
cld
jmp
pop
sar
test
incl
add
stc
cli
cli
incl
add
push
cmp
ds
jg
jl
xchg
mov
cld
cld
cld
ljmp
pushl
ljmp
incl
add
pop
iret
into
int
test
sti
sti
sti
std
cld
call
dec
lret
test
incl
add
cmp
add
add
rol
jle
std
std
std
std
std
std
std
sti
sti
sti
std
cld
jmp
loopne
pushl
xor
ret
int
int3
jle
jmp
out
cmp
aaa
roll
add
fcmovu
fidivrl
call
out
out
out
in
in
in
in
in
in
out
out
jmp
jmp
dec
dec
dec
sahf
mov
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
push
add
and
add
add
add
add
sbb
add
add
add
push
add
add
adc
add
add
or
push
add
and
add
add
add
add
sbb
add
add
add
add
adc
add
add
add
add
push
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
les
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
mov
add
add
add
add
add
add
add
add
push
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
add
add
add
jns
jae
je
add
jae
and
dec
add
arpl
outsl
add
jo
outsl
add
popa
add
add
add
add
sbb
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
add
add
add
push
add
jae
push
add
add
insb
add
insl
add
outsb
add
add
add
add
add
add
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
aaa
add
add
add
add
add
add
add
add
sbb
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
add
bound
add
add
push
add
jae
push
add
add
insb
add
insl
add
outsb
add
add
add
add
and
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
xor
xor
xor
cmp
and
inc
add
add
add
add
jns
jae
je
add
jae
and
dec
add
arpl
add
add
sbb
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
outsl
add
add
push
add
add
insb
add
insl
add
outsb
add
add
add
add
add
add
add
js
add
add
add
sbb
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
add
add
add
push
add
jae
push
add
add
insb
add
insl
add
outsb
add
add
add
add
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
aaa
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
in
cmp
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
or
popa
outsb
fs
insb
outsl
outsb
gs
and
ds
jae
insl
bound
or
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
imul
jb
imul
xor
ds
je
jne
je
outsb
outsw
and
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
arpl
imul
mov
or
gs
gs
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
arpl
jae
cmp
jae
and
ds
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outsb
outsw
ds
jae
gs
bound
push
inc
xor
add
add
sbb
add
sbb
add
dec
add
add
add
add
add
add
add
add
pop
pop
lret
repz
mov
faddp
int
dec
mov
sub
std
pop
or
push
pop
ret
ret
std
loopne
call
in
add
add
add
add
xchg
pop
fdivrl
insb
js
rclb
or
sahf
sbb
loope
push
test
testl
add
add
lods
adc
inc
movl
sub
add
add
add
xchg
add
add
add
add
add
add
add
dec
add
pop
add
add
add
dec
add
add
fcmovnb
add
std
add
add
add
out
add
add
add
add
mov
insl
add
pop
add
add
add
xlat
cmpsl
add
test
add
add
cmp
add
add
add
ja
add
adc
add
add
add
imul
lods
add
leave
std
mov
and
add
add
jnp
add
das
add
add
add
cmp
add
sub
add
add
fwait
add
add
add
in
add
add
add
add
add
rcrl
ror
movsb
add
add
jl
add
pop
add
add
add
out
add
popf
inc
mov
add
mov
bswap
hlt
imul
bnd
rolb
popa
or
adc
insl
aas
out
jae
orb
mov
leave
and
dec
sti
mov
jns
pop
push
or
mov
int
imull
dec
daa
push
adc
faddl
xor
and
pop
add
dec
repz
mov
pop
cwtl
iret
jb
adcb
jle
push
mov
mov
rorl
push
mov
push
jg
in
dec
sub
xlat
mov
inc
imul
int
int
push
jbe
adc
jae
inc
inc
add
mov
pop
sbb
and
rcr
adcb
and
push
ss
out
add
stc
je
and
scas
and
jns
nop
sahf
data16
into
mov
mov
cltd
call
inc
daa
adc
xchg
pop
jbe
dec
pop
jge
stc
lcall
jae
xchg
sbb
xor
push
mov
cwtl
aaa
add
push
or
int3
jno
push
sub
into
test
sti
mov
or
cmp
adc
subl
enter
xchg
xor
jb
cmp
lods
nop
adc
ret
push
push
neg
adc
sbb
lock
add
xchg
xchg
les
xor
mov
pop
sbb
in
mov
js
mov
mov
fcomps
push
push
dec
jno
sub
out
mov
das
fucomp
pushf
lods
inc
aaa
push
lock
push
and
aam
mov
lods
sbb
or
fs
in
test
add
sub
sbb
shll
sbb
inc
rcll
xchg
inc
loopne
in
out
mov
das
inc
lds
inc
pop
movsb
aad
pop
sar
add
dec
test
sub
xor
pop
fwait
pop
call
loope
int3
mov
cwtl
addr16
in
dec
das
jns
iret
test
dec
mov
std
lahf
mov
jecxz
popa
dec
fisttpl
fwait
push
scas
cs
lret
andl
pop
and
mov
xor
imul
inc
and
out
xor
xchg
filds
or
push
sub
movsl
mov
jbe
xchg
add
aam
xor
fbld
pop
adc
call
dec
cwtl
push
push
lahf
push
lds
jnp
sbb
int
dec
or
mov
jnp
push
add
movsb
mov
test
push
mov
add
add
add
jecxz
jbe
dec
push
sub
pop
add
cmp
je
roll
xchg
or
adc
test
push
push
pop
clc
into
add
jle
fisubrl
aaa
arpl
pop
xchg
stos
jns
add
or
xor
bound
dec
cmp
inc
scas
inc
fstpt
imul
lds
fs
add
mov
add
mov
cs
data16
in
jno
add
lea
loopne
pop
mov
js
sbb
xchg
cli
notb
dec
addr16
push
movl
adc
leave
fwait
rolb
xor
popa
dec
xchg
dec
movsl
enter
mov
push
push
stos
mov
cld
fs
arpl
jle
popw
adc
and
adc
pop
xor
sbb
repnz
cmp
xchg
or
jne
test
clc
sbb
cli
jecxz
cmpsl
ljmp
es
sub
das
dec
xlat
in
nop
push
lods
lret
test
sbb
adc
fcom
es
dec
pop
sbbl
pop
push
jmp
push
inc
cmpsl
je
test
cltd
xchg
mov
xchg
xor
mov
push
popa
shll
push
mov
cmp
adc
xchg
clc
outsl
ffree
rorb
mov
xchg
jne
out
nop
insl
enter
repz
repz
enter
lret
loope
or
pop
cmp
push
or
mov
add
hlt
nop
daa
scas
movsl
jnp
xchg
fwait
jo
inc
sahf
insl
xchg
inc
sbb
out
xchg
sbb
js
enter
adc
xchg
sbbb
jno
or
inc
pop
imul
mov
icebp
lea
jmp
movsl
inc
nop
rcr
or
and
test
inc
dec
xlat
sbb
stos
out
out
mov
rcl
dec
adc
imul
sti
ss
xchg
popf
and
or
loop
dec
add
and
sbb
adc
xchg
nop
and
and
mov
xor
ljmp
in
adc
cltd
loopne
mov
cld
sbb
roll
xchg
cmp
aaa
movsb
cli
test
loopne
ret
push
pushf
pushf
cmp
push
dec
mov
aam
sbb
adc
xor
aam
ret
lods
in
aad
or
xor
lds
sahf
shl
inc
lods
cmpsb
mov
jbe
pop
jne
inc
mov
mov
rcl
pop
push
xlat
in
jge
ljmp
dec
and
pushf
out
cwtl
or
daa
mov
cmp
and
testb
lret
cmp
sub
lahf
cmp
pop
test
mov
or
lods
scas
jno
adc
outsl
ds
incb
pop
or
in
fcmovne
pop
dec
mov
sub
mov
jg
sub
outsl
adc
push
mov
clc
xchg
add
jmp
dec
xor
jns
repz
test
dec
imul
cmp
jge
push
icebp
sti
dec
or
mov
add
addr16
add
jmp
movsl
cmp
push
mov
fidivrl
test
sahf
jmp
pop
popa
dec
xor
daa
repnz
subl
cwtl
test
jb
stos
mov
cmp
sar
lods
cmp
mov
mov
cmp
jns
sarl
or
icebp
shll
xchg
sbb
add
cmp
and
rcl
testb
int3
and
pop
jo
outsl
mov
xor
mov
inc
xchg
adc
dec
das
pop
aam
mov
aad
xchg
fsubl
push
inc
mov
lret
enter
rcll
icebp
cld
and
out
pop
pop
ds
jns
js
cmc
loope
mov
aas
dec
jnp
mov
loop
movsb
aas
push
xchg
loope
add
fmulp
sbb
sbb
inc
mov
sbb
and
xor
loope
xor
inc
push
add
sarl
jle
push
dec
add
lret
jg
add
and
mov
out
mov
fmull
xor
pop
ss
mov
xchg
mov
js
adc
adc
pop
ljmp
cwtl
push
and
add
insl
inc
popa
leave
or
sbb
movsb
lds
andb
popf
xchg
daa
add
into
push
xchg
cmp
add
pop
fcmovu
ss
add
rorb
xchg
js
jae,pt
arpl
cmc
and
and
dec
xchg
inc
mov
stc
jno
mov
inc
inc
jae
jge
push
sbb
rorl
cmp
fldl
cmp
lods
ja
mov
loop
mov
pushf
ficoml
or
mov
mov
push
and
jb
ret
jbe
dec
xchg
xchg
stc
sti
mov
cld
int
and
shrl
cmp
adc
add
ffreep
sbb
jb
shr
mov
jp
or
int
fcoml
pop
sub
insb
enter
repz
cmpsl
push
jg
jb
mov
je
xchg
sbb
int3
andb
add
inc
movsl
pusha
ja
cld
or
fidivl
lahf
pop
in
enter
pop
loope
mov
ss
and
push
fsubp
mov
cmpsl
jg
jecxz
data16
xlat
push
mov
outsb
add
fs
insb
inc
xor
jb
mov
add
mov
imul
sti
scas
test
push
pusha
sbb
lret
aad
ret
adc
xor
xchg
sub
lret
ret
roll
and
jle
push
jmp
xor
lret
scas
cmpsb
stos
inc
jge
fldl2e
xor
lcall
jmp
jg
pusha
xor
int3
daa
addl
mov
sub
rcrl
lret
rcr
xchg
jo
xor
shlb
jae
xchg
dec
xchg
incl
stos
lret
jne
cmpsl
daa
mov
dec
pop
or
lahf
jmp
sub
push
loope
fcmovb
pop
insl
or
into
cmp
jnp
imul
imul
mov
fbstp
add
cli
push
inc
lds
sbb
xlat
jae
rolb
cwtl
inc
rolb
rcrb
roll
loopne
add
mov
cmpsl
inc
mov
mov
jge
xor
hlt
adc
imul
nop
sub
cmpsl
mov
pop
or
adc
jecxz
push
adc
aaa
insb
mov
mov
and
mov
cli
or
dec
pop
aad
lret
sti
or
mov
add
cmp
pop
pop
mov
insb
inc
push
repz
out
sbb
rorb
push
add
clc
jo
cmp
add
notl
outsl
and
add
addr16
pushf
data16
jmp
lea
icebp
jmp
mov
imul
mov
test
jns
aas
repnz
pop
push
sub
xlat
jnp
jmp
xchg
int3
iret
mov
ds
push
push
lret
and
push
jns
popf
push
mov
sbb
jno
xor
jmp
scas
pushl
inc
cmp
popa
rcll
pushf
push
hlt
or
dec
sub
mov
xchg
pop
add
test
add
xchg
mov
xchg
daa
daa
aas
push
cmc
mov
xchg
call
cmc
stos
push
icebp
cwtl
mov
gs
imul
outsb
jge
jo
je
lea
sub
add
in
sti
sahf
ja
cmpsl
dec
mov
sahf
dec
cmp
cwtl
ja
clc
mov
movsl
into
cld
or
test
dec
nop
data16
mov
sbb
cmp
stc
addl
aas
fmull
icebp
das
out
mov
inc
jno
or
std
cmp
or
sub
sarl
in
inc
in
jle
dec
pop
adc
es
mov
dec
int
sti
xor
and
mov
lock
or
int3
or
test
sub
add
xor
sti
repz
jecxz
mov
mov
shll
iret
pop
lock
shl
or
and
arpl
andl
xchg
xor
out
sti
iret
sbb
mov
pop
mov
inc
mov
popa
mov
movsb
mov
into
ret
fadd
fs
adc
cmp
outsl
mov
dec
pop
mov
jbe
push
es
and
cmp
dec
mov
sub
sub
jae
scas
lea
call
add
loope
pop
sbb
mov
mov
cmc
sub
xor
scas
iret
xchg
dec
sub
mov
out
in
mov
add
jae
inc
cmp
jecxz
dec
lods
add
jge
jmp
shl
and
fisubrl
add
aad
inc
mov
into
mov
insl
cmp
xchg
cmpb
addb
jecxz
adc
push
ds
jb
or
cmc
jp
jecxz
fsubrl
mov
ficomps
andl
jbe
sub
pop
push
xchg
inc
iret
ss
lret
lret
mov
in
adc
mov
inc
std
push
pop
lahf
insl
inc
scas
and
jae
mov
cmp
movsl
inc
cmp
or
pop
push
add
int3
mov
popf
mov
push
jb
mov
jl
cmp
push
jnp
out
jle
addl
mov
mov
rorb
dec
sarl
adc
rcll
inc
iret
or
inc
xor
jnp
aaa
insl
inc
mov
mov
xchg
mov
jmp
arpl
scas
icebp
mov
jge
movsb
fcmovu
inc
out
pop
iret
lret
cmp
in
push
icebp
xor
pop
icebp
iret
xchg
lock
mov
or
aad
fcoms
iret
loop
mov
jg
mov
aas
sahf
cmc
test
xchg
mov
int3
lock
mov
out
mov
and
push
das
lcall
pusha
jp
dec
and
xor
insb
stos
xor
ret
popf
sbb
or
jns
add
mov
push
mov
in
lret
xor
aam
ljmp
fsubrs
sti
js
jnp
rol
add
lea
sar
xor
and
jbe
repnz
scas
fldenv
ror
std
in
shlb
or
mov
add
lods
dec
pop
add
dec
repz
enter
mov
inc
cli
inc
sbb
mov
push
data16
rol
or
loopne
push
sahf
js
divl
cmp
rclb
sub
inc
xor
movaps
cli
test
jecxz,pt
and
mov
aam
in
fimuls
pop
aaa
cmpsl
stc
push
cmpsb
dec
xchg
fwait
in
rcr
std
push
hlt
adc
pop
cltd
jmp
mov
nop
addr16
pop
adcb
or
dec
jge
scas
xchg
pop
and
call
sarb
push
inc
sbb
pop
ret
pop
mov
std
mov
aaa
jo
ds
mov
or
shrb
push
xor
push
add
dec
stc
mov
adc
stos
insb
add
ret
insl
sub
leave
mov
cmp
lock
fsubr
mov
dec
jle
add
push
pop
arpl
and
lret
iret
clc
fs
cmpsb
jae
popf
add
arpl
mov
pop
jns
cmp
lcall
sbb
cltd
sub
mov
lcall
add
out
push
dec
inc
xchg
scas
or
nop
arpl
sbb
loope
push
stc
xchg
lret
loop
jmp
lods
sub
pop
jg
rorl
call
pop
xor
ds
cmp
jae
cmpsb
sbb
cld
je
sub
sti
idiv
jge
push
pop
jb
dec
cmp
push
push
mov
xor
jb
nop
lods
jp
inc
out
pop
pop
mov
jne
lret
mov
aam
mov
loop
ljmp
adc
inc
mov
fisubrl
mov
xchg
xchg
dec
fcomps
push
push
hlt
clc
or
lahf
jge
faddp
push
lea
sub
add
mov
mov
imul
ss
shlb
jne
addl
push
fistps
mov
in
andl
add
sub
xor
sub
cld
mov
or
sbb
shll
clc
jb
loop
jecxz
div
in
adc
enter
mov
stc
cmp
out
sub
add
stos
xchg
hlt
sbb
xchg
rol
in
fidivrs
lret
movsb
jns
sbb
adc
rorb
cmp
in
imul
out
xchg
xor
dec
mov
pop
dec
mov
outsl
sbb
sub
frstor
cmpsl
lahf
ror
js
out
mov
sub
data16
cmp
dec
sahf
lock
lret
insb
mov
pop
insb
fisttpll
push
stc
test
sbb
jb
fdivrs
bound
xlat
jmp
add
xchg
or
sete
mov
mov
pushf
pop
fnsave
lret
shrb
lds
in
push
mov
mov
imul
lahf
add
mov
dec
out
mov
inc
push
sarl
sbb
dec
jmp
scas
mov
dec
cmp
push
pop
out
mov
sub
push
lods
sbb
xchg
js
gs
jae
ret
add
sub
sbb
test
bound
cmp
stos
out
cwtl
mov
addr16
shl
jg
ljmp
and
xchg
mov
pusha
inc
scas
insl
jae
cmp
mov
pop
dec
pop
fldenv
jg
push
jl
sub
outsl
div
jb
dec
xchg
fisttps
xchg
or
mov
add
ficoms
data16
dec
add
imul
xchg
push
aam
clc
inc
pusha
fcomp
jmp
out
mov
outsb
sub
and
loope
add
stos
movb
xchg
lcall
push
shrb
ds
mov
mov
ss
pop
jbe
xor
and
sbb
jne
fnstcw
pushf
push
out
xchg
loop
lods
pop
mov
mov
push
mov
jns
loop
stos
js
sub
jmp
mov
call
pop
inc
xor
adc
inc
daa
mov
ljmp
fidivrl
movsb
and
sbb
int
fmulp
cs
loop
lcall
movsb
or
sbb
sarb
jnp
push
jl
test
jbe
jbe
jno
xchg
pop
add
xor
sbb
mov
sub
jbe
inc
sbb
sbb
aaa
dec
sbb
test
and
popa
fildl
push
es
or
push
jge
lds
sbb
aam
call
in
or
pusha
cmp
sub
decb
out
adc
xchg
add
lret
sbb
xchg
daa
jmp
loop
dec
lahf
outsl
mov
add
fimuls
pop
test
pop
add
inc
xor
dec
lcall
ret
test
add
push
lds
sbb
mov
or
sub
aaa
out
std
and
xchg
inc
mov
mov
stos
addr16
and
adc
cmpsl
mov
inc
clc
mov
movsl
sub
scas
xlat
test
pop
stos
cmp
xor
mov
aaa
in
leave
cmpsb
jg
sub
cld
lds
xor
jle
pop
sahf
mov
mov
sub
add
cmc
aaa
pop
dec
add
inc
push
sahf
cmp
mov
pop
sbb
xor
add
add
fsubrs
popa
push
lods
gs
or
xor
jo
test
add
cmp
sbb
imul
jge
imul
hlt
js
mov
push
push
xchg
pop
and
and
ja
fldenv
mov
lea
push
mov
dec
add
aaa
mov
inc
scas
pop
in
lahf
cmpsl
insl
jno
xor
cld
mov
push
or
repz
xchg
xchg
mov
add
mov
test
sub
dec
add
adc
xchg
iret
iret
lea
cmp
jno
mov
popf
jmp
push
mov
xchg
repnz
fsubrp
mov
iret
repz
xorb
scas
into
add
or
dec
inc
push
flds
andb
push
lds
push
mov
cmp
push
dec
xor
sub
stos
fwait
adc
dec
and
add
add
xlat
add
add
add
add
add
add
add
ljmp
and
fisubs
mov
cmpsb
jb
dec
push
lret
or
cwtl
xchg
aad
push
jns
add
dec
clc
in
ljmp
lret
daa
in
xor
pop
lcall
stc
mov
jge
and
jge
mov
call
inc
adc
inc
aad
cmpsl
je
lods
mov
clc
push
cmp
push
inc
xor
out
je
mov
mov
inc
push
mov
scas
jg
leave
daa
insb
fnsave
xchg
pop
test
js
jo
arpl
or
es
pop
ljmp
movsb
push
sete
movsl
pusha
hlt
mov
mov
out
out
stos
outsl
jmp
and
jp
adc
scas
scas
ss
cmc
add
add
insb
push
cmp
cmp
pop
cwtl
and
daa
stos
std
jle
and
sbb
movsb
sub
into
repnz
xchg
add
xor
cmp
add
add
push
pop
xchg
xlat
pop
icebp
fwait
xor
add
sub
arpl
fucomi
shrl
add
jns
scas
pop
inc
movsl
vmwrite
sub
repnz
out
xor
add
add
add
xor
jbe
fildl
add
jae
pop
inc
mov
xchg
mov
cmc
jmp
loopne
stc
push
jns
lret
and
ret
inc
pop
add
jo
pop
inc
fsub
call
add
add
outsl
add
dec
addl
add
popa
add
mov
lret
add
adc
add
add
add
inc
in
jne
add
add
addb
xchg
outsl
sub
add
fadd
rcr
ret
mov
test
add
in
ljmp
fsubrl
add
pop
aas
adc
or
push
push
sbb
add
mov
testb
test
rcrb
rolb
add
xor
push
and
and
add
pop
dec
les
adc
add
xchg
ss
dec
inc
inc
add
add
add
add
add
add
add
add
add
imul
add
add
add
add
add
incb
add
testl
add
add
add
mov
add
add
mov
add
add
xchg
add
gs
scas
add
add
add
add
gs
scas
test
adc
adc
mov
mov
lret
cmpsb
add
stc
ljmp
add
add
clc
icebp
mov
add
add
subb
add
jecxz
mov
pop
fisttpl
add
daa
jp
add
inc
add
add
add
dec
sbb
lds
add
mov
and
rclb
movsl
and
sub
into
sub
mov
inc
mov
pop
adc
add
mov
outsl
mov
push
and
cld
jns
add
js
sbb
subb
and
and
mov
outsl
add
mov
shrl
push
ss
or
test
xchg
add
mov
xchg
add
cmp
shll
iret
testb
inc
repnz
iret
xor
fiadds
sub
movl
into
add
add
sub
imul
add
xchg
add
add
imul
add
in
add
imul
mov
add
add
in
cmp
add
add
or
sarb
push
dec
add
cmp
pop
pop
add
in
add
add
pop
add
pop
or
dec
add
shr
add
dec
dec
add
inc
jle
into
gs
push
out
sub
mov
sub
nop
push
add
add
add
pop
add
loopne
mov
add
outsl
add
outsl
add
or
or
jnp
add
add
jg
push
mov
dec
mov
add
add
mov
add
adc
mov
lods
add
add
sub
dec
add
add
lahf
add
data16
fwait
add
into
add
lret
add
add
xchg
add
add
xchg
sbb
pop
insl
add
mov
jl
xchg
lea
push
adc
add
addb
cmpsb
add
add
cmp
add
ltr
or
mov
pop
mov
add
add
repz
add
add
das
add
das
add
sbb
add
add
add
scas
add
add
icebp
es
rclb
loopne
add
dec
add
push
std
add
add
dec
test
fwait
out
add
add
add
jmp
and
out
push
push
add
sub
add
popl
mov
add
int
mov
pop
stos
or
add
or
jb
add
add
lods
add
add
add
addr16
add
insb
inc
fdivl
lods
repnz
xchg
rolb
mov
add
push
outsb
inc
cmc
add
push
xchg
mov
icebp
xchg
xchg
add
add
dec
add
mov
mov
add
add
cli
mov
outsb
add
add
or
xor
xchg
jo
add
add
sub
add
add
push
pusha
fildl
lahf
aas
add
rolb
out
popa
push
jp
mov
add
add
or
cli
lea
and
ds
test
dec
add
add
in
pop
add
insb
add
jmp
push
mov
add
add
mov
cwtl
popl
mov
add
int
fstpt
pop
adc
jb
adc
add
add
add
add
inc
mov
repz
add
push
mov
out
add
lret
add
mov
into
lcall
call
add
in
add
lock
in
add
ljmp
adc
push
and
and
and
mov
add
cmp
flds
or
add
add
lock
add
jg
inc
jg
inc
jl
lods
stc
adcl
add
nop
popa
jge
das
add
add
add
sbb
in
pop
add
mov
jge
mov
add
add
lock
fadds
scas
dec
add
add
add
add
xlat
add
rolb
fsubrp
jp
fisubrl
ja
push
js
xor
xchg
add
inc
add
add
testl
lock
clc
movsb
jo
mov
lods
push
add
jle
int3
std
sub
out
add
pop
xchg
add
addb
sahf
add
fwait
add
mov
cmpsl
push
add
fwait
arpl
mov
sub
add
mov
jge
xchg
add
sub
mov
add
jno
dec
out
negl
in
add
xchg
pop
enter
in
iret
out
dec
lock
dec
cld
gs
mov
add
add
add
dec
push
push
outsl
loop
jnp
dec
or
add
push
xor
sbb
sbb
sbb
add
daa
xchg
cltd
stos
outsb
imul
add
filds
add
in
sub
xchg
scas
cmp
cmp
sbb
cli
sub
or
pushl
add
sbb
add
rol
add
lret
mov
mov
push
add
add
mov
jg
add
cwtl
add
add
fldl
aaa
add
add
into
fildl
aam
add
fcomp
pop
add
add
popf
mov
cmc
out
sub
add
stc
cli
out
clc
div
div
pop
add
add
add
cmp
ljmp
sub
and
and
push
je
push
pop
addl
mov
mov
add
das
and
cmp
pop
and
cmp
mov
add
adc
add
pop
add
insl
add
add
inc
xor
add
pop
jno
fstps
je
cmp
subb
add
add
cmpsb
or
inc
add
add
nop
xchg
or
jnp
add
shlb
ljmp
cltd
popf
addl
mov
lcall
incb
lcall
out
add
jmp
mov
int
rol
push
mov
xor
stos
and
push
iret
add
add
iret
dec
addb
dec
out
std
adc
lcall
sub
loope
test
cltd
adc
enter
mov
push
sub
shlb
mov
jg
and
je
dec
insl
pop
shlb
or
add
test
loop
or
mov
mov
icebp
push
test
pop
sub
cmp
push
sbb
jns
jnp
test
cmpb
add
sub
sahf
sub
add
dec
push
sub
js
imul
imul
xor
fcoml
add
jl
pusha
pusha
scas
sbb
add
sub
movsb
xchg
jmp
xor
cmpsl
scas
mov
je
add
lods
ja
les
push
sbb
add
add
jno
add
cmp
dec
fdivr
add
lret
add
out
add
mov
and
add
fildl
pop
and
add
cmpsb
sbb
cmc
cs
add
add
loopne
push
std
add
cli
add
data16
add
cwtl
xor
add
add
negl
add
add
add
scas
add
sahf
add
add
sldt
push
add
jl
verw
add
mov
cmp
add
add
dec
mov
add
jbe
outsb
add
add
add
add
add
dec
add
in
add
setg
das
cmp
push
add
gs
add
add
loope
cmpsl
popf
add
pushf
add
sbb
jne
add
add
and
rolb
lock
add
mov
into
std
js
sbb
stos
sbb
mov
rolb
sbbl
enter
test
add
and
sub
jo
push
jbe
mov
pop
xchg
sbb
add
add
or
mov
mov
arpl
adc
add
lahf
das
xor
movsl
push
push
fadds
je
cmp
jae
test
and
xchg
mov
das
push
add
jecxz
add
mov
dec
add
add
add
lock
or
pop
dec
pop
add
inc
ljmp
add
xchg
add
inc
imul
add
jge
cmp
add
jge
adc
bound
int3
loopne
add
iret
add
loopne
add
add
inc
outsl
lock
popf
add
add
pop
add
add
mov
shlb
mov
add
pop
add
add
pop
jb
add
lahf
xlat
add
rolb
add
add
imul
add
jo
push
mov
adc
test
movsb
sub
add
data16
add
add
add
in
push
xchg
add
add
add
cltd
add
add
dec
mov
mov
stc
adc
add
and
mov
dec
aam
add
fstl
rolb
jp
mov
add
mov
push
inc
add
pop
add
add
scas
add
imul
iret
cmpsb
mov
add
cmp
mov
add
sub
add
jl
fdivrl
add
mov
int3
outsl
mov
xor
add
stos
add
lahf
add
mov
add
add
sub
aad
std
add
loope
add
add
cltd
add
add
pop
sub
add
imul
and
repnz
add
add
pop
scas
rcr
add
xchg
add
jmp
and
das
and
iret
and
push
jg
mov
sti
add
bound
sar
xor
mov
xor
add
add
mov
add
add
mov
pop
add
scas
add
add
add
add
xorb
scas
add
dec
pop
xchg
add
and
add
xlat
add
cmc
inc
add
sub
mov
add
add
jns
add
add
add
add
add
jb
or
xor
xchg
push
add
add
add
add
into
add
add
add
add
add
loop
push
add
add
shrl
das
add
or
add
add
add
mov
test
ficoml
add
loop
add
pop
add
rolb
add
add
add
mov
pushf
add
add
add
push
and
rolb
xchg
enter
mov
xchg
sbbb
add
add
add
add
push
push
add
add
mov
dec
add
scas
add
add
add
add
test
add
pop
add
xchg
add
mov
les
fadds
sti
testl
movsb
adc
incb
cmp
call
add
add
add
add
add
add
add
add
dec
add
add
jo
add
add
and
add
add
add
add
add
scas
add
add
add
cmp
add
add
les
add
add
inc
push
loopne
popf
add
add
add
add
add
push
add
cwtl
add
add
repz
add
add
sahf
add
add
test
jp
xor
inc
adc
add
xchg
add
add
lea
sbb
push
add
add
ja
dec
add
xor
lds
push
add
jp
loopne
mov
fiadds
push
add
add
add
add
mov
add
add
inc
pop
xchg
add
data16
clc
add
add
repnz
add
outsb
add
testb
add
add
push
out
add
add
push
pop
add
dec
add
add
add
add
lock
es
add
add
add
add
add
scas
add
add
add
aas
ss
add
add
add
push
loopne
ljmp
add
fists
add
push
add
add
inc
jae
add
xchg
out
add
mov
add
add
add
add
add
adc
add
add
imul
dec
add
add
add
add
add
push
das
add
add
je
add
je
mov
pop
add
add
mov
add
pop
add
add
js
add
add
mov
add
outsl
lock
aas
and
fwait
mov
shll
leave
and
sbb
scas
aaa
mov
sbb
pop
mov
mov
and
jmp
fistpl
mov
add
xchg
adc
sub
loop
hlt
cmpl
cmpsl
ret
push
stos
push
xchg
dec
sub
jo
cltd
xchg
testb
inc
xchg
cmp
rcrb
outsb
daa
jl
inc
mov
in
xchg
rclb
out
mov
hlt
cmp
jge
push
popa
shr
xchg
push
in
cld
les
dec
push
dec
jae
add
mov
int3
push
addr16
je
xchg
or
movsb
push
push
xor
sahf
xor
mov
mov
push
cmp
out
jmp
insl
add
xchg
hlt
dec
jl
testl
lods
cs
imul
je
add
dec
mov
cs
ja,pn
mov
dec
mov
dec
mov
lea
xlat
fucomi
repz
into
pushf
cmc
pop
inc
mov
cmp
sbb
dec
fistps
jbe
clc
ret
cmp
fwait
das
in
and
cmc
push
dec
cltd
or
nop
pop
add
scas
movl
jmp
add
fistpll
or
aad
roll
insb
cld
mov
xor
fs
ret
or
mov
out
cltd
jnp
cmc
cmpb
das
mov
mov
xchg
insb
inc
jb
mov
jge
xor
mov
lds
inc
push
jge
out
inc
jne
pop
movsb
cmc
in
or
push
loope
lret
iret
out
push
add
add
repnz
xor
inc
push
pop
and
nop
and
fimuls
pop
outsb
loop
imul
stos
movsb
insl
fwait
mov
jmp
jno
inc
push
sub
jp
jecxz
cli
cmpsl
sbb
out
xchg
pop
ljmp
push
jne
cli
push
sub
cli
push
xchg
dec
cvttps2pi
push
mov
mov
jo
rcrl
cmp
bound
outsl
push
lods
in
push
rclb
fidivrs
and
cli
adc
mov
ds
sti
mov
or
dec
add
jns
push
mov
mov
and
sub
sub
adc
sbb
ret
cwtl
daa
push
or
lods
test
xchg
pusha
add
call
xor
aaa
jo
std
movsl
mov
cltd
adcl
roll
mov
addr16
adc
enter
dec
shrl
imul
iret
and
lcall
cmp
shrl
ds
xor
mov
std
xor
pop
add
inc
mov
sub
pop
hlt
insb
sbb
mov
xor
mov
xchg
cmp
lret
dec
cmp
cmpsl
fimuls
mov
pushf
in
ror
jle
xchg
dec
fnstsw
mov
imul
adc
or
in
es
int3
dec
hlt
mov
lret
inc
mov
movsb
fisttpl
xchg
icebp
pop
out
xchg
in
inc
ljmp
jp
fistpl
sub
cmc
or
daa
dec
push
mov
imul
xchg
dec
mov
xor
ficoms
pop
pusha
dec
cld
fwait
lods
sti
mov
scas
lods
lods
imul
xchg
pop
adc
int3
sub
jo
outsb
jnp
mov
mov
int
sbb
je
jmp
pusha
inc
cmp
pop
xchg
xchg
outsb
insl
insb
mov
call
mov
jle
and
mov
cmpsl
nop
ljmp
mov
dec
add
jge
xchg
xor
mov
pop
insb
mov
sbb
sub
xor
sub
test
inc
xchg
mov
cmp
xchg
mov
mov
or
aas
mov
div
jg
sbb
popl
mov
adc
jmp
push
lods
xor
pop
loop
add
push
cltd
shll
out
push
icebp
dec
mov
mov
aas
push
fsubrl
test
dec
test
mov
lods
mov
sub
insb
xor
mov
add
js
dec
jnp
mov
mov
iret
or
movsb
pop
dec
mov
pushf
jl
cmp
or
pop
xchg
jno
insb
inc
insb
subb
inc
test
sub
push
sbb
and
mov
cmpsl
xchg
push
cmp
dec
and
jmp
mov
aaa
mov
pop
ret
xor
cli
iret
sti
sub
sub
cltd
roll
mov
cmp
aad
dec
push
push
xchg
scas
add
and
psadbw
pop
icebp
pop
dec
mov
sub
aam
cmp
jmp
inc
fstl
pop
xchg
add
popf
jb
push
xchg
cld
or
push
inc
outsl
sbb
outsl
lret
jae
or
jne
leave
jecxz
mov
cmp
mov
sbb
stos
popa
test
bound
and
clc
pop
inc
xchg
push
cs
cld
push
int3
leave
out
jb
mov
mov
pop
push
cmp
mov
lcall
test
cmpsb
push
imul
fnstenv
sbb
out
inc
jnp
adc
mov
dec
aam
dec
sarb
dec
inc
iret
xor
or
pop
out
add
icebp
sbbb
ss
sub
sub
cs
scas
inc
xchg
jmp
adc
cwtl
xchg
cmp
pusha
hlt
scas
lret
cld
lret
or
push
fisttpll
and
ret
popl
lock
js
sbb
inc
int3
mov
fdivl
call
fucomi
cmp
fsubrl
add
adc
jecxz
cli
push
mov
pop
outsb
loopne
es
lret
das
into
mov
loop
mov
cmp
fimull
add
adc
aaa
dec
enter
out
pop
stos
in
inc
scas
loope
add
jp
gs
sbb
mov
jl
dec
xor
ficoms
sub
mov
sub
sbb
inc
ret
push
pop
shrb
fsubrs
imul
subl
insl
mov
shr
jle
call
dec
pop
insb
std
dec
dec
int
popa
aad
fwait
xor
mov
adc
int
push
nop
sub
xor
sub
sub
inc
mov
lcall
and
lods
out
mov
or
int
cmp
sub
mov
shll
test
and
fdiv
cmp
stos
jmp
loop
dec
test
sar
push
mov
xor
mov
ror
icebp
leave
sbb
loope
mov
cli
cmp
cmc
jmp
add
dec
mov
jo
popf
mov
test
loope
xor
add
xchg
rcrl
add
jp
popa
sub
lds
lea
dec
mov
cli
pop
cltd
sbb
stos
push
ret
fs
subb
cwtl
imul
inc
sub
fidivl
cmc
and
in
cmp
push
mov
dec
gs
popa
testb
xor
mov
push
imul
test
sub
sub
sub
mov
lcall
lcall
or
push
scas
or
mov
and
into
dec
bnd
lcall
inc
mov
dec
inc
repz
call
outsl
push
pop
arpl
lods
clc
ret
cmpsb
repz
and
jb
add
into
jnp
push
dec
mov
fwait
mov
mov
cmp
fwait
ljmp
gs
cmp
scas
push
shlb
sbb
stos
in
sub
jns
mov
mov
push
or
jb
std
jo
xchg
inc
xor
loope
mov
int3
jae
push
iret
ljmp
cld
fldl
inc
sbb
xchg
cmp
dec
std
dec
test
dec
insl
pusha
arpl
into
xor
push
dec
push
test
sub
shrb
test
out
out
movsl
popf
mov
adc
jo
jae
into
lods
and
cmc
or
adc
or
push
clc
or
mov
repnz
cwtl
sub
out
or
inc
in
rcll
loop
dec
jecxz
dec
mov
push
mov
cli
jge
imull
add
add
jp
push
push
out
lret
scas
add
xlat
out
cmpsb
in
and
sbb
into
adc
sbb
cmp
mov
inc
ret
les
addr16
dec
test
scas
inc
sbbl
scas
les
sbb
imul
ret
js
gs
push
lods
addr16
dec
mov
dec
lret
ja
fimuls
cmpsl
pop
pop
cld
imul
xchg
inc
fnsave
inc
push
sub
cmp
fwait
popf
push
and
fbld
ret
adc
or
lds
and
jecxz
or
insl
inc
cmpsl
inc
shll
mov
loopne
mov
std
add
lods
mov
cld
inc
pop
lret
push
xchg
loopne
and
arpl
xor
adc
ret
aad
out
enter
dec
mov
fistpll
cmc
imul
popa
test
pusha
mov
in
gs
mov
mov
push
outsl
inc
sarl
add
cld
or
dec
cmp
mov
inc
mov
imul
cmp
popf
mov
test
add
cmp
stos
jg
fistpll
push
fs
add
jnp
addr16
push
mov
popa
stos
int3
lea
xchg
sti
push
jne
and
scas
loope
sbb
inc
push
insl
cwtl
inc
push
call
aas
or
jnp
jg
add
aas
cli
daa
cltd
adc
repz
jmp
xor
mov
or
testb
lods
mov
incl
aad
xchg
jecxz
daa
lea
andl
lret
sbb
lret
or
cli
jle
cmc
jge
mov
add
popa
iret
pushf
xor
mov
jmp
rorl
push
mov
pop
movsb
fsub
imul
inc
lcall
movsb
xchg
add
mov
push
dec
and
addl
jl
dec
pop
inc
xchg
add
xchg
sub
subl
jo
lds
cmpsb
sbb
dec
or
mov
fs
dec
mov
enter
push
seta
jg
and
andl
aas
movsb
inc
pushf
push
mov
lcall
imul
iret
cmp
mov
dec
popa
or
int3
and
xor
shll
lods
xchg
call
scas
xor
jno
push
arpl
cmpsl
add
hlt
add
adc
stc
pop
out
mov
stc
sbb
adc
cltd
and
in
sub
inc
loopne
push
loop
jecxz
out
mov
jb
insl
fcomp
push
mov
or
test
outsb
rol
jp
roll
pop
addl
inc
mov
inc
nop
xchg
push
mov
mov
daa
pop
lret
cmp
mov
imul
js
adcb
aaa
xchg
inc
aad
lock
sbb
lcall
dec
arpl
inc
sti
push
inc
xchg
push
cli
add
sub
xorl
dec
push
cwtl
pop
add
inc
arpl
inc
push
add
ss
jno
ret
sub
arpl
mov
into
pop
or
and
cmp
sbb
cmpsl
mov
sbb
add
mov
push
add
fstps
add
push
inc
pop
add
xor
ret
adc
adc
add
paddw
add
mov
xchg
add
repnz
icebp
lea
xchg
add
rolb
movsl
pushl
mov
loopne
or
inc
int
test
pop
mov
and
leave
lds
add
nop
or
es
sbb
sahf
ja
aad
jb
push
add
f2xm1
lea
aas
out
sahf
and
aas
add
arpl
popa
pop
add
ficomps
repnz
add
or
dec
jno
popa
std
inc
jae
loop
je
mov
test
or
pop
popa
mov
outsb
push
test
imul
cltd
and
lock
mov
mov
push
dec
add
stos
push
inc
aas
mov
inc
add
push
sti
mov
push
mov
popf
push
add
sub
loop,pn
fldt
or
icebp
cmp
jno
jge
into
mov
push
fimuls
add
addb
addr16
cmpsb
jmp
adc
test
rolb
sahf
jg
int
js
mov
pop
mov
rcll
add
lcall
pop
cmpl
add
int3
inc
movb
and
out
sbb
icebp
dec
mov
mov
fidivrs
fs
add
mov
into
cmp
inc
jno
add
mov
inc
hlt
add
inc
jb
fdivs
ret
or
add
insl
push
je
imulb
in
add
frstor
out
cmp
and
mov
out
add
pop
jmp
jl
push
or
cmp
add
sbb
flds
cmc
lock
out
add
dec
out
lcall
incb
dec
incl
dec
xchg
adc
lods
jne
mov
push
inc
jge
inc
lods
push
xchg
dec
add
add
jb
insb
lea
outsl
ljmp
movsl
fwait
cwtl
fistpll
add
loop
add
scas
out
add
add
add
repz
jmp
jbe
mov
dec
lea
pop
push
test
pusha
sti
jg
icebp
test
adcl
add
lcall
outsl
dec
lods
push
mov
dec
push
fistpll
dec
repnz
insb
push
push
sbb
sahf
dec
data16
int
push
outsb
jle
jbe
push
shrl
dec
out
add
xor
add
sub
ret
jo
pop
cmp
out
clc
jae
pop
imul
or
cmp
lret
prefetcht0
cmp
outsb
dec
repz
xchg
xor
mov
inc
pushf
xor
jp
in
enter
call
aam
sahf
push
fldcw
mov
stos
mov
adc
push
push
int3
callw
xchg
daa
push
lods
push
test
jo
pop
push
or
pop
cmpsb
cmp
mov
outsb
lods
subb
sub
pop
cmp
xor
out
lods
or
popa
xlat
inc
mov
push
xchg
and
loop
dec
or
pop
and
lcall
jecxz
rol
dec
inc
call
nop
add
lea
or
dec
sbb
add
add
mov
add
mov
imulb
add
add
add
push
shlb
add
int3
xor
rolb
jnp
xor
lret
cmpsl
mov
call
add
add
push
add
dec
add
lock
add
ljmp
adc
inc
and
add
add
add
mov
jns
add
pop
add
add
movb
inc
add
das
add
das
add
add
test
add
add
add
add
push
aas
add
sub
gs
add
stc
dec
add
or
xchg
lea
ja
add
into
add
sub
test
mov
outsb
add
imul
mov
add
out
inc
or
add
xchg
xor
lea
mov
xor
xchg
cmp
xchg
push
inc
jmp
push
jecxz
cs
sub
xchg
outsl
and
mov
and
jecxz
mov
inc
sub
add
add
add
and
xor
cld
add
add
push
add
lds
push
ss
adc
outsl
push
pop
add
in
sub
repz
insl
add
and
icebp
pushf
dec
in
mov
xor
ds
push
inc
dec
clc
jns
mov
add
test
scas
lods
add
dec
add
dec
roll
sub
dec
add
call
stc
iret
scas
in
enter
subl
pop
or
mov
stc
std
incl
into
in
out
call
int3
jp
push
add
jp
xchg
aad
xchg
push
xor
sbb
jae
mov
lret
add
inc
pop
jle
sbb
add
add
pop
sub
pop
sbb
inc
test
sub
add
ds
add
mov
add
add
iret
inc
add
push
add
add
add
out
xor
fldl
mov
jge
sub
dec
insb
jg
imul
test
lcall
or
add
inc
iret
icebp
adc
shr
imul
shll
xchg
push
scas
add
in
test
sahf
mov
add
insb
cmpb
iret
jle
add
jb
cmp
cmc
aad
scas
shlb
fld1
addb
add
bound
stos
xor
repz
mov
add
stos
gs
sbb
cld
int3
push
or
out
jmp
mov
mov
or
lods
pop
add
pushf
fsubr
cltd
lods
cmp
mov
sbbl
sbb
add
popa
jl
add
mov
mov
push
sti
adc
push
add
aaa
pusha
test
outsl
aaa
inc
inc
push
push
push
es
dec
dec
or
imul
jnp
push
into
sub
pusha
jecxz
test
sbb
push
adc
push
or
psubq
aas
pop
jl
rcll
les
into
add
scas
in
fnstsw
mov
ret
stos
and
fimuls
fildll
and
and
andl
jno
daa
xchg
rcrl
push
add
repz
repz
sub
mov
lods
loopne
std
fmulp
pop
xchg
pop
jg
out
cli
jmp
fs
add
mov
inc
sarl
fcompl
in
cld
pop
lcall
or
add
mov
jb
icebp
outsl
xorb
pop
add
sub
in
add
push
mov
pop
or
scas
ficoms
pop
arpl
xor
data16
push
add
add
and
pop
add
xor
inc
add
sldt
mov
lods
jno
push
ficoms
jns
das
dec
notb
pop
jmp
jns
mov
add
adc
jne
pusha
pop
dec
pop
pop
out
dec
mov
pop
jl
xchg
hlt
inc
jg
add
mov
mov
xchg
enter
or
xor
push
or
dec
lock
dec
sbb
add
fstp
mov
pusha
xchg
and
cwtl
fcmove
push
add
add
ss
cmp
stos
es
loope
rcr
out
in
out
jns
es
out
push
testb
stos
mov
dec
sub
imul
jle
lock
xor
imul
pop
and
enter
fs
or
dec
jb
sbb
add
pop
pop
pop
mov
inc
negb
icebp
mov
xchg
push
ficoms
adc
sbb
dec
mov
or
fstpt
sbb
xor
add
pop
dec
dec
outsb
dec
pop
sbb
cmp
outsl
add
fs
fs
jo
inc
jge
fs
jns
incl
fwait
mov
add
std
mov
push
add
lock
xchg
jne
add
dec
icebp
add
pop
push
insl
pushf
into
mov
and
rorl
xor
mov
xchg
pushf
xchg
mov
add
add
or
imul
jl
inc
or
shl
in
mov
insb
pop
out
arpl
xchg
push
jbe
mov
les
loope
out
fisubl
xchg
adc
sbb
dec
mov
cmpsl
in
out
or
add
jg
paddusw
add
gs
out
loop
cmpsl
jge
rclb
pop
sbb
or
jp
in
add
cmp
pop
pop
mov
add
ds
dec
mov
xchg
dec
js
pop
pop
pop
lret
clc
test
insl
jne
xor
out
add
es
fisttps
gs
add
fdivrs
insb
add
insb
pushl
inc
add
mov
mov
jmp
das
adc
fwait
mov
gs
ja
pop
subl
addl
fwait
sbb
pop
clc
pop
cwtl
pop
outsb
add
lahf
or
fwait
cmpsb
fstp
faddp
ret
add
pop
sahf
cmpsl
inc
adc
loopne
jge
iret
inc
add
test
mov
mov
push
das
add
mov
dec
push
or
shrl
mov
add
add
rolb
pop
sbb
inc
repz
jecxz
mov
rorl
mov
add
ret
add
lcall
mov
jl
dec
cmp
push
sbb
sbb
das
jle
out
lods
mov
fdivl
add
add
fs
mov
jmp
mov
cmc
add
iret
stos
add
data16
out
add
lock
nop
xchg
ficompl
adc
add
jns
and
adc
add
xor
sub
add
inc
jns
pop
sbb
out
cli
add
add
and
es
add
stc
and
ret
fcompl
xchg
jno
fs
jle
cmp
imul
js
mov
insl
nop
inc
dec
add
ljmp
add
ss
cmp
add
sarb
add
inc
sbb
mov
mov
fiaddl
xor
adc
jae
add
add
mov
in
dec
mov
mov
mov
scas
mov
arpl
xlat
dec
add
push
xchg
fmulp
icebp
or
repnz
fcmovb
add
cmc
in
js
cmp
jno
clc
add
fcom
ffree
add
adc
add
call
je
shlb
sbb
adc
or
push
add
leave
ror
add
adc
add
add
cmc
std
fcmovnu
add
ret
aad
cli
addr16
incb
xchg
movsb
lea
add
shll
pop
mov
inc
inc
or
push
add
or
sbb
add
mov
outsl
add
sbb
sbb
dec
inc
ret
dec
add
xchg
mov
sbb
fadds
add
cmpb
add
aad
call
add
popf
out
mov
push
sbb
sbb
dec
dec
add
lahf
sub
add
insl
in
and
aad
out
aaa
aam
lahf
push
pop
add
cmp
outsb
push
data16
insb
add
in
inc
pop
pop
shlb
add
add
pop
inc
mov
stc
mov
add
movsb
mov
mov
sti
mov
outsl
dec
pop
pop
fcoms
subb
add
add
add
jecxz
nop
add
sbb
add
cwtl
mov
stos
lods
out
add
add
cwtl
fwait
nop
inc
ret
loope
movsb
adc
jnp
mov
xchg
xchg
lcall
add
push
pop
pop
sahf
push
jp
cmpsb
ret
mov
mov
inc
pop
jo
pop
dec
add
push
dec
rcrb
iret
add
pop
flds
add
out
les
rcl
iret
int
fadd
roll
arpl
xor
add
add
mov
icebp
sub
or
or
lahf
cltd
addps
jecxz
mov
cmp
add
cmp
stc
shl
fcmovnb
int
iret
int3
inc
mov
add
add
fimuls
inc
stc
mov
cmp
mov
mov
mov
mov
popa
pop
dec
add
add
push
or
pop
adc
add
and
pop
sub
lcall
rcll
jge
jge
jp
jbe
add
add
test
std
into
stc
int3
push
mov
add
add
cltd
mov
mov
movsl
add
fimull
jge
out
cmp
add
add
sbb
push
bnd
add
test
lds
add
cmp
sub
cmp
mov
es
push
ds
lea
int
dec
cmp
and
add
jb
jnp
jle
bound
jo
mov
adc
push
jp
add
jne
lret
gs
mov
mov
add
out
loop
xchg
xchg
enter
add
push
faddl
push
pop
pop
jbe
pop
pop
pop
dec
dec
fcoms
int
je
sub
add
adc
icebp
out
in
out
imul
add
pop
into
add
xor
mov
int
or
or
or
push
mov
lahf
pop
add
add
shrl
in
mov
mov
gs
xlat
add
call
add
mov
and
add
in
loop
clc
out
out
fcmove
iret
pop
sti
addr16
sub
mov
not
inc
or
push
sub
or
adc
or
add
add
pop
fwait
cmp
and
and
add
inc
pop
dec
pop
inc
push
inc
push
inc
push
cmp
pop
jp
and
sub
cmp
aas
and
and
xor
xor
lahf
std
push
or
clc
add
ss
add
add
jb
inc
push
add
add
cmc
jp
sbb
mov
push
cmc
add
add
inc
sub
adc
or
and
or
add
add
pop
sub
ror
add
add
inc
xchg
add
add
add
in
call
add
sbbb
add
push
pushf
pop
add
add
shlb
out
stos
mov
movsl
mov
mov
out
sub
mov
add
add
push
jle
call
sbb
adc
add
inc
push
rorb
aad
stos
mov
cmp
addb
mov
lock
add
inc
or
sbb
inc
add
out
sbb
cmp
add
fiaddl
mov
add
add
jle
jle
arpl
imul
orb
rcr
add
cmp
add
add
fcmovnu
aam
leave
add
add
xchg
jno
gs
xor
fildl
add
and
mov
jp
fwait
add
add
sbbl
aad
sub
ror
xor
xchg
and
mov
outsl
jno
dec
pop
adc
dec
arpl
arpl
mov
sbb
xorl
mov
sbb
add
add
xchg
movb
add
nop
cltd
or
in
mov
add
xchg
orb
faddp
dec
cltd
mov
pop
in
out
push
andb
mov
ret
movb
ficoml
ljmp
fcom
dec
cmp
sub
sbb
sbb
add
or
mov
pop
sbb
add
lret
xor
push
mov
xlat
test
cwtl
stos
movsb
movsl
add
add
repnz
adc
and
mov
add
add
dec
add
add
add
lahf
cltd
addb
dec
add
add
add
mov
add
push
pop
pop
movsb
lods
mov
cmpsl
mov
mov
hlt
cltd
and
add
rorl
jl
mov
mov
add
add
pop
sub
add
lret
add
pop
mov
add
add
add
add
sahf
adc
add
add
les
je
add
test
pop
jb
cmp
jno
je
loop
mov
pop
mov
roll
add
dec
adc
test
add
add
fsubp
out
in
sub
push
cwtl
movl
add
mov
lods
sub
xor
add
and
dec
xchg
sbb
fidivs
mov
hlt
xchg
mov
xor
and
lret
add
dec
leave
adc
add
add
clc
std
mul
in
out
add
add
sub
add
add
das
loope
mov
pop
adc
push
pop
add
rorb
lcall
jnp
cmpsl
add
sub
add
add
mov
jmp
in
idiv
out
mov
mov
out
gs
lods
into
xchg
pop
lret
pop
sbb
dec
inc
pop
jbe
js
fwait
add
inc
mov
fists
add
in
cmp
add
add
iret
add
push
push
lret
roll
add
test
mov
mov
add
popa
js
imul
add
inc
lret
loope
xchg
mov
mov
rcrl
scas
xchg
add
lods
iret
adc
add
ficomps
ret
add
add
push
pop
pop
push
add
mov
jne
xor
mov
std
je
movsl
cmc
xchg
out
add
outsl
imul
sub
add
lods
push
add
cmc
loop
mov
dec
adc
scas
push
xchg
shll
inc
inc
pop
push
insb
jbe
push
ret
sbb
loopne
lods
scas
mov
inc
out
add
add
mov
xchg
into
mov
cwtl
adc
xor
mov
test
sub
inc
cwtl
aas
jecxz
sbb
test
arpl
inc
xor
add
pop
mov
add
imul
add
sbb
adc
xchg
pop
jbe
sarl
das
scas
arpl
aad
leave
add
add
lods
notb
add
or
cmp
mov
mov
inc
jl
add
add
add
add
add
push
push
cmp
sbb
lret
stos
mov
xchg
cwtl
mov
lods
add
in
fdivp
loop
mov
adc
cmpsl
sub
pop
lret
out
fdiv
jecxz
icebp
clc
insb
subl
jne
add
add
sub
es
xorl
inc
jg
and
jmp
push
dec
jp
mov
pop
ljmp
shrb
mov
loop
nop
mov
add
add
pop
push
push
mov
ror
test
add
add
mov
add
cli
outsl
mov
mov
pop
lcall
out
cld
mul
mov
ljmp
enter
rorl
mov
adc
add
push
and
pop
sbb
sbb
sbb
aam
mov
cmp
or
push
adc
sbb
mov
sahf
add
add
sub
push
inc
dec
push
dec
dec
inc
push
lea
and
bnd
movb
push
in
mov
pop
push
pop
dec
pop
jbe
push
or
adc
ja
scas
jae
cwtl
mov
stc
sub
test
inc
inc
pop
sbb
sbb
add
add
fisttps
test
and
gs
dec
push
or
push
push
push
push
sbb
lcall
rcrb
shll
and
dec
inc
push
bound
pop
push
sbb
add
push
inc
xchg
sbb
test
shrl
fnstcw
mov
jbe
dec
push
or
push
push
push
push
inc
xchg
pop
jge
xchg
jge
pop
xchg
inc
adc
adc
push
sbb
inc
dec
dec
push
dec
dec
sbb
adc
ret
stos
cmpsl
pop
pop
int
mov
pop
int3
mov
mov
daa
xor
push
push
inc
adc
xor
inc
inc
rolb
add
mov
xor
mov
mov
imulb
and
dec
dec
inc
dec
push
push
pop
push
fmull
pop
push
int
xor
stos
xor
addr16
dec
adc
sub
dec
dec
pop
dec
push
adc
test
bound
iret
or
adc
cmp
cmpsl
dec
push
push
push
jp
push
dec
pop
push
inc
adc
adc
lahf
hlt
jbe
stos
xchg
das
out
mov
pop
adc
push
pop
pop
dec
dec
pop
inc
int3
fldt
dec
iret
cwtl
jo
xor
mov
mov
dec
adc
bound
push
push
xchg
fnstcw
pop
xchg
inc
push
movl
push
add
add
scas
xchg
stos
pushf
lea
add
fisttpl
dec
mov
mov
add
mov
in
jno
les
add
cld
or
ja
leave
lcall
icebp
mov
hlt
jmp
repnz
push
xor
loop
hlt
jae
xchg
dec
mov
pop
or
aad
out
mov
add
add
js
lods
push
in
aas
add
add
fisttps
in
jnp
and
pop
add
pop
sub
jns
cmp
adc
ret
push
jnp
add
pop
mov
daa
mov
ljmp
pop
add
sbb
inc
ss
cmp
pop
mov
insl
push
add
add
lcall
repnz
add
xchg
mov
out
mov
sbb
add
jg
into
mov
mov
add
mov
outsl
sub
jbe
mov
add
add
dec
icebp
aas
lea
xor
ss
xor
xor
out
cmp
test
cmpsl
out
les
outsb
dec
lret
xlat
in
push
pop
sbb
and
and
dec
out
add
add
cld
imul
xor
repz
mov
cld
test
add
mov
cwtl
loopne
nop
push
lret
stc
or
and
push
push
push
pop
pop
or
add
add
push
jae
gs
adc
add
or
add
lcall
xor
ds
adc
add
insb
add
add
add
add
arpl
pop
add
add
mov
add
mov
add
xchg
out
add
add
out
call
adc
inc
mov
add
leave
cmp
jb
add
int3
in
push
int
clc
push
loope
add
add
cltd
outsl
insb
cs
or
mov
and
aad
add
sbb
rcll
out
add
fistpll
add
jnp
addr16
idiv
push
cmp
lds
loopne
or
je
add
addb
xor
sub
das
add
xor
pusha
push
aaa
addb
pop
push
xor
daa
dec
cmp
js
movsb
or
add
out
xchg
cmc
lods
cmc
dec
mov
add
test
add
and
rcl
pusha
pop
or
psrlq
int
add
fsubr
test
inc
repnz
add
in
clc
sti
pop
out
repz
dec
add
add
mov
add
cli
ljmp
xchg
mov
add
add
fmuls
iret
add
add
sub
mov
push
addr16
hlt
inc
mov
mov
mov
sbb
or
mov
or
sbb
lock
push
sahf
pop
add
push
out
leave
and
dec
addb
push
mov
add
add
add
add
aas
pop
add
scas
icebp
mov
xchg
sub
add
sbb
aad
add
add
mov
popa
sahf
add
movsl
dec
or
pop
adcb
add
pop
pop
scas
pop
inc
pop
or
iret
or
and
stc
sub
add
rcr
inc
add
xchg
jp
mov
push
pusha
js
push
rcl
aas
in
js
add
pusha
or
fimull
push
sbb
ds
inc
jne
add
in
and
mov
js
hlt
dec
enter
dec
cmp
popa
inc
inc
push
shrb
mov
mov
or
add
insb
xchg
loope
in
hlt
add
add
rcr
pop
add
sub
push
mov
cmp
lret
or
add
repnz
add
pop
mov
hlt
add
add
pop
test
out
inc
pop
sub
cmc
push
push
push
sub
adc
loope
inc
jle
inc
sub
popa
xchg
aad
add
cli
lea
or
je
negb
popf
cmp
add
in
xchg
scas
sahf
pusha
hlt
mov
pusha
std
ljmp
in
cmpsb
jmp
pop
pop
adcl
and
rorb
push
cmpsl
inc
arpl
add
add
sub
add
fwait
xchg
xchg
pop
mov
sub
jne
cmp
add
shll
push
out
add
add
pop
cmp
xor
in
inc
add
push
rcrl
dec
pop
cmovg
fadds
add
ret
lret
pop
push
nop
and
lods
add
fisubs
std
insb
add
lret
add
andb
ja
add
imul
dec
mov
xchg
pop
lods
add
clc
add
mov
inc
cmpb
in
push
or
ficoms
adc
fsubrp
add
sub
das
test
add
push
xor
pop
cmp
add
push
mov
mov
cmpsb
hlt
xchg
ficomps
pop
addr16
roll
add
leave
and
add
je
cli
fs
test
pop
or
mov
mov
popf
pop
lods
fwait
mov
sub
jmp
and
add
jecxz
cmp
das
cmp
dec
cmp
or
adc
add
or
add
or
cmp
pop
add
xchg
mov
rol
in
jg
outsl
cmp
xchg
ret
test
jae
add
aaa
cmpsb
xor
jp
add
insl
fmull
add
mov
loop
or
xchg
sti
jge
push
add
in
sub
add
push
data16
inc
mov
push
fwait
hlt
outsl
add
inc
cmp
and
add
xor
sbb
push
push
addr16
cmp
add
inc
das
imul
incl
pushf
add
daa
call
insb
xor
add
repz
mov
mov
sbb
push
add
add
jnp
mov
decb
xor
add
nop
mov
add
ret
ficomps
fldcw
fwait
aas
out
std
push
js
jl
call
into
jle
add
mov
add
pop
add
or
jae
sub
movsl
jo
out
sub
lret
insb
call
xchg
enter
jo
stos
in
pop
stos
and
mov
add
add
mov
add
inc
popf
test
aaa
inc
or
add
cmp
imulb
orb
std
lahf
je
bound
inc
dec
je
add
add
adc
sahf
outsb
jecxz
add
pop
cmc
mov
push
or
push
incb
jmp
inc
add
in
add
push
add
lret
hlt
mov
lcall
dec
ds
add
out
popa
push
aad
push
ljmp
cli
lcall
jl
pop
arpl
mov
cmp
add
dec
popf
push
leave
inc
add
push
xor
scas
add
dec
ret
adc
inc
dec
int3
icebp
add
in
jb
leave
hlt
push
add
ret
add
dec
lret
shl
add
bndldx
lods
xchg
bound
add
rcl
jp
sbb
cmp
data16
fldl
jmp
pop
pusha
notl
icebp
mov
mov
lcall
mov
and
iret
or
fldcw
fbstp
stos
arpl
out
xchg
jne
sti
dec
mov
mov
pop
mov
fcos
add
push
leave
dec
nop
pop
shlb
ss
mov
add
inc
pusha
adc
out
mov
sub
add
mov
pusha
push
xchg
mov
out
loop
jmp
adc
jmp
adc
in
imul
inc
add
add
add
pop
jb
jbe
add
ja
or
gs
fnsave
lretw
jecxz
sub
or
pop
xchg
lret
add
or
aad
stos
pop
lahf
rorl
lock
jo
shrb
and
xchg
data16
in
add
sub
clc
jb
test
mov
iret
mov
or
sahf
in
test
inc
push
push
fcompl
loope
insb
flds
outsb
dec
jecxz
hlt
add
add
fisttpl
jle
test
jl
hlt
add
movsl
loop
mov
orl
pop
das
nop
and
inc
movl
scas
and
cmc
addb
jl
push
push
and
clc
sub
stc
jae
rcr
add
mov
test
movsl
leave
add
icebp
xor
inc
fadd
add
pop
js
push
cmpsl
dec
sub
lods
inc
cmp
lds
adc
icebp
div
lods
and
xchg
sti
mov
add
mov
cmpsb
push
jnp
das
rolb
or
mov
cmp
jmp
add
inc
add
enter
push
outsl
mov
por
stos
add
unpcklps
fnstcw
jg
ja
sbb
sub
outsl
add
jb
in
fists
std
mov
sub
or
xchg
adc
and
test
test
jno
dec
mov
lods
cmp
decb
cmp
xchg
cmpsl
fwait
add
stos
xchg
das
imul
mov
cmp
out
dec
dec
push
add
mov
in
mov
dec
imul
pop
test
imul
jnp
add
arpl
stos
add
add
and
xchg
push
push
add
cmp
imul
jno
rorb
loop
std
into
js
cmp
cmp
cli
mov
push
leave
dec
dec
adc
iret
pop
mov
sub
cld
adc
cmp
in
in
popa
cwtl
imul
xor
jo
stos
orl
stc
hlt
leave
cmp
pusha
arpl
imul
js
in
lret
lds
in
test
into
testb
lahf
ljmp
fildll
sub
nop
ror
mov
les
mov
outsl
pop
jns
movsl
push
out
fimuls
sub
xchg
dec
loope
sub
in
test
mov
dec
fdivrl
xor
mov
incb
shlb
push
lret
int
lods
scas
push
dec
orb
into
js
jns
xor
into
lods
movsl
pop
dec
adc
cmp
sub
adc
hlt
clc
aam
cmp
and
loope
shrb
enter
add
inc
out
pop
mov
imul
add
jg
cmpb
or
nop
sub
mov
enter
or
outsl
in
mov
add
mov
add
jp
addr16
nop
in
xchg
and
rclb
inc
ljmp
jp
add
adc
push
cmp
fisttpll
cmc
test
adc
rcrl
mov
xor
clc
jnp
mov
ss
mov
jg
das
movsb
nop
mov
rep
inc
adc
and
inc
xor
shr
dec
out
shll
out
lret
fiaddl
insb
movb
mov
dec
or
into
inc
inc
mov
mov
jp
xchg
dec
dec
popa
out
inc
jle
int3
ljmp
add
or
mov
mov
stc
jmp
pop
pop
int3
aam
fisubl
adc
mov
ret
lods
add
or
mov
pop
mov
jmp
add
cmpb
cmp
fs
add
sbb
leave
std
inc
movsb
pop
pop
pop
push
les
add
fwait
iret
pop
jae
or
push
jmp
add
sub
lea
call
jne
jecxz
add
lods
in
add
xor
add
popf
fisttpll
stos
add
aad
pusha
mov
lcall
xchg
cs
int3
or
mov
fistps
fdivrp
mov
bound
mov
je
dec
jnp
mov
push
in
mov
cmp
daa
imul
popf
cmc
adc
sahf
add
data16
outsb
stos
ljmp
mov
gs
inc
outsl
add
push
inc
sahf
xchg
mov
inc
inc
or
out
test
lds
pusha
push
dec
xor
add
jne
dec
mov
test
out
inc
ret
jbe
sbb
pop
pop
mov
movsb
mov
outsb
mulb
popf
rorb
ja
mov
scas
adc
push
imul
mov
insb
fwait
add
lret
sbb
pop
outsb
pop
sbb
js
or
scas
push
dec
push
bound
cld
cmp
pop
jg
xchg
cld
ljmp
ret
aaa
das
cmpsb
and
cli
mov
push
push
add
dec
paddsw
pop
movsb
mov
add
cmp
mov
sub
push
mov
push
fisttps
fs
fs
leave
cli
lret
gs
mov
popa
cwtl
and
dec
movsl
jmp
jmp
xor
dec
bound
in
outsb
pop
std
dec
add
subl
lret
fistps
jne
dec
inc
or
mov
in
insb
fnstsw
imul
out
or
cmpsb
out
adc
dec
cmpsl
push
in
cmp
call
ljmp
outsl
daa
or
sbb
or
pop
xchg
add
sbb
mov
ret
in
lcall
imul
add
jne
or
adc
gs
jmp
sbb
mov
fmuls
movzwl
jg
push
and
data16
pop
inc
mov
dec
add
ljmp
test
out
in
outsb
and
lds
iret
mov
add
xor
shufps
mov
push
popa
in
fcoms
xchg
movsb
add
flds
scas
arpl
sbb
xor
in
inc
push
pushf
fidivl
es
mov
cmpb
pop
repnz
mov
ds
enter
sub
aas
push
jbe
int3
sub
imul
xchg
push
xor
cmpsb
or
jle
aaa
and
mov
idivl
add
xor
pusha
add
movsb
fimuls
test
fwait
xlat
or
or
cwtl
xor
sbb
clc
int
dec
addl
jl
add
clc
jb
outsb
loopne
add
add
scas
int3
or
jb
mov
inc
hlt
lahf
test
daa
roll
cwtl
and
ss
out
dec
or
in
test
or
cmp
rolb
movsl
push
clc
cld
jle
aaa
mov
outsl
dec
cmp
push
out
js
mov
add
add
sbbl
add
push
xchg
jmp
jge
cs
jg
mov
in
mov
lds
push
loope
mov
and
and
pop
iret
mov
cmp
add
mov
mov
frstor
inc
xchg
sub
or
cmp
jmp
flds
push
fiadds
sbb
mov
jg
mov
pop
adc
popf
lea
dec
mov
js
jo
mov
insb
ret
sbb
add
lea
arpl
insl
xlat
mov
ja
mov
in
push
add
cli
pop
sti
subb
ror
mov
inc
push
pop
hlt
xchg
mov
cli
xlat
mov
mov
mov
sub
mov
sub
or
dec
add
fsubp
scas
push
out
shl
xchg
mov
sahf
adc
xchg
add
adc
add
std
lretw
cmp
sbb
or
insb
sub
inc
jmp
scas
movsb
movsl
dec
push
test
sbb
pop
and
add
stos
dec
add
aas
inc
int
pushf
push
sbb
lea
xchg
pop
movsb
xchg
add
sub
mov
push
jle
jge
sub
out
xchg
cmpsb
add
pop
mov
rcll
dec
aaa
sbb
outsl
lods
push
int3
dec
lods
push
xor
mov
jnp
mov
stos
test
stos
pop
sbb
fwait
aad
scas
adc
push
add
nop
cmp
xchg
rolb
or
in
incl
test
cmp
mov
test
xchg
sub
pop
repz
xchg
push
es
mov
inc
scas
and
xor
scas
std
push
fsubl
mov
aad
push
jnp
mov
jnp
pop
fwait
mov
push
scas
in
addr16
sbb
arpl
adcl
mov
jb,pt
inc
cmp
sbb
repz
or
add
and
dec
add
scas
add
jl
push
pusha
sub
es
mov
in
popa
cmp
push
inc
fmuls
pop
xor
scas
insb
cmp
cmp
cwtl
add
fwait
rolb
cmc
add
mov
jmp
or
add
inc
mov
pop
imul
lahf
imul
iret
fistpll
out
add
pop
sbb
lds
dec
jns
sarb
xchg
xchg
add
into
int3
add
cmp
or
pop
insb
cmp
add
mov
clc
lea
ror
add
mov
lods
out
xchg
popa
fisttpl
xor
xlat
cmp
imul
ret
jmp
repnz
inc
xor
stos
xor
aam
fcomi
sbb
mov
es
xor
sbb
add
dec
in
xchg
jg
or
movsb
push
fnstcw
or
add
cmp
add
push
xor
xchg
xor
mov
and
cli
leave
pop
cltd
je
aaa
cmc
add
mov
xorb
add
mov
xchg
int3
mov
mov
or
mov
scas
movsb
out
out
push
aaa
add
mov
sub
mov
hlt
jnp
jecxz
mov
adc
scas
inc
pushf
shrb
cmpsl
mov
dec
adc
fidivrl
dec
repnz
and
dec
xchg
add
in
cwtl
inc
mov
and
add
loop
enter
add
push
jle
add
movsl
test
push
mov
add
add
mov
add
test
sahf
push
mov
mov
in
add
xchg
push
lcall
dec
push
add
je
xchg
test
jnp
call
pop
lret
xchg
add
jecxz
add
add
in
mull
add
add
sub
dec
and
cmp
dec
cs
mov
sub
movsl
repnz
pop
dec
xchg
add
pop
add
add
movsb
imul
test
pop
add
add
cmp
movsl
add
pop
test
clc
lods
push
add
xchg
ret
cli
add
pushf
dec
rcrl
stos
push
cmp
movsb
xor
test
imul
add
mov
mov
fisttpll
add
sbb
aad
add
popa
pop
mov
mov
in
ljmp
lahf
nop
sub
repz
mov
fisubrs
cmp
addr16
mov
cli
mov
in
sbb
mov
jne
or
lahf
adc
mov
push
int
pop
gs
xor
or
outsl
ret
enter
jmp
arpl
fstpl
xchg
mov
mov
add
nop
or
mov
cmpsb
add
in
movsl
mov
fs
je
dec
and
mov
add
add
dec
ret
adc
add
push
xchg
mov
das
xchg
add
add
aaa
sub
testb
push
xor
add
pushf
add
push
jecxz
call
call
add
sbb
inc
xchg
jl
addb
inc
aas
pop
xchg
sub
inc
mov
out
aad
mov
pop
inc
rorb
add
push
pop
sub
add
mov
jge
add
aad
jno
mov
lcall
bswap
cwtl
mov
orb
or
add
inc
jecxz
jne
add
xor
imul
insl
xchg
and
push
add
dec
idivb
mov
inc
lret
lret
ret
inc
jno
in
mov
inc
call
or
imul
sub
add
add
mov
xbegin
movl
adc
test
jmp
mov
in
or
inc
cmpb
pop
jbe
mov
push
add
and
adc
xchg
int3
imul
add
loop
mov
push
loopne
out
in
nop
shrb
repz
aad
das
push
xlat
add
add
xor
inc
or
pop
pop
pop
arpl
adc
nop
add
hlt
mov
and
aam
cmp
sbb
into
sub
lcallw
xchg
jge
stc
les
fsubl
divl
pop
popf
test
cld
idivb
push
jp
mov
inc
cs
gs
test
sbb
mov
xor
pop
ficomps
fdivs
jbe
loop
dec
cmc
stos
cmp
sbb
nop
push
cmpsl
or
aas
test
xlat
push
pop
cmp
stos
or
add
fst
cmpb
loop
lods
ret
xor
or
cmp
arpl
add
xor
mov
add
aaa
pop
pop
inc
jp
pop
add
pop
mov
leave
xor
inc
add
shrl
test
int
ljmp
std
add
add
cmp
inc
or
pop
stos
dec
test
mov
orl
mov
sbb
jecxz
in
stos
lret
pop
jmp
call
jbe
movsl
fnstcw
mov
add
and
add
xchg
xchg
fsubp
jo
in
outsb
and
or
imul
lcall
jle
mov
pop
fcmovnbe
mov
add
out
nop
dec
sbb
shrb
xchg
and
int3
sbb
adc
sub
mov
sbb
dec
movsl
leave
pop
mov
and
xchg
jge
out
xor
scas
mov
and
add
inc
pop
js
outsb
xchg
imul
or
or
or
mov
sub
mov
out
add
jo
jp
filds
lcall
and
fs
mov
adc
xchg
sub
add
jae
jno
add
jl
rcrb
decb
and
mov
scas
jle
mov
in
lods
add
out
push
lock
imull
call
ljmp
fcomps
and
inc
repz
stos
mov
mov
or
inc
adc
mov
sbb
or
mov
xor
push
mov
add
add
or
xchg
add
add
or
bswap
inc
dec
sbb
jg
cmp
push
push
ja
pop
jge
or
aas
enter
sbb
mov
push
insl
sub
rolb
std
pop
pop
add
sub
adc
jae
sbb
out
push
scas
sbb
rorl
xor
cltd
add
mov
faddl
xchg
push
xchg
iret
in
mov
out
or
popf
xlat
push
and
mul
xchg
test
jno
pop
inc
scas
ds
int3
add
fldcw
out
jo
add
std
mov
pop
mov
ds
adc
mov
fisubl
popa
rcr
enter
lret
mov
adc
cmp
js
js
or
enter
cli
sub
cmp
test
fists
jae
or
add
and
xchg
add
out
sub
mov
push
js
loope
sbb
sbb
or
jge
xor
cmp
stos
cmp
imul
jo
pop
add
push
sub
ret
shll
or
imul
jl
add
push
adc
mov
cmpsl
lahf
out
add
iret
mov
dec
mov
mov
mov
or
shlb
loope
pop
xchg
mov
jae
add
xchg
pop
jmp
inc
fcoml
xchg
rorb
or
or
add
mov
inc
mov
mov
test
lret
sub
arpl
add
repnz
addl
dec
mov
and
pusha
cmp
add
ljmp
add
pop
pop
stc
cli
addl
add
ss
cmp
xor
ficompl
vpsubusb
leave
fnstsw
fwait
add
arpl
sub
outsb
das
ja
mov
jns
push
fucomip
jge
xchg
jp
mov
pop
add
test
adc
adc
cmc
adc
push
dec
add
filds
js
xor
sub
jmp
adcl
push
scas
lods
xchg
jbe
enter
lcall
pop
xorl
cmpb
cld
fucomp
in
cmp
sahf
xor
adc
in
in
loop
aas
cld
outsb
adc
lahf
add
xor
hlt
pop
and
rorb
push
inc
aad
dec
pop
ffreep
add
mov
or
sarl
lahf
fmul
jne
pusha
sub
pop
insb
cwtl
add
insl
mov
mov
push
test
cli
cmp
lcall
js
mov
dec
adc
fwait
popl
jae
mov
sarl
sub
dec
add
lret
mov
sti
cmp
jne
stc
adc
in
sub
clc
mov
aas
add
rorl
sub
cmpsl
jno
pusha
rclb
inc
fsts
or
adc
dec
orl
dec
mov
push
cmc
or
pop
in
lahf
jns
inc
add
rcrb
mov
in
cs
sbb
rorl
push
sti
aam
mov
cmpb
mov
fs
sahf
pop
or
addb
dec
cmp
cmp
pusha
jecxz
jp
mov
call
mov
enter
push
enter
mov
add
stc
mov
xchg
inc
shr
xchg
dec
xchg
add
mov
aam
fwait
push
cmpsl
aaa
cmp
repnz
repnz
pminub
imul
jge
dec
add
pusha
pop
mov
mov
xor
cmp
inc
push
inc
in
icebp
jmp
xor
push
dec
or
out
mov
out
adc
add
add
xchg
lret
stos
js
jns
pop
rcrb
mov
repnz
dec
pop
mov
add
bound
xor
add
js
cli
adc
lret
mov
add
add
add
jecxz
jnp
daa
mov
popa
movsb
int
outsb
xlat
cmpsb
mov
adc
jnp
filds
daa
or
add
cmp
js
rorb
inc
imul
into
orl
mov
push
mov
push
lods
or
movl
je
ret
cmp
fst
test
jnp
mov
add
mov
dec
mov
lods
mov
xlat
stc
fdiv
std
inc
mov
cmp
adc
mov
daa
ret
cmp
and
lret
jb
leave
lcall
jnp
add
fdivrs
scas
shlb
mov
sub
cmpsl
notb
xchg
xor
ja
mov
ja
and
std
hlt
xchg
jp
movsb
jp
mov
in
dec
and
aas
loop
inc
gs
dec
add
rcrl
subl
adc
fistpl
dec
daa
jnp
dec
add
insl
outsl
popf
pminsw
add
hlt
push
inc
popa
push
ffreep
loop
adc
add
add
iret
push
or
cmp
cmp
pushf
faddl
std
dec
sarb
mov
scas
idivb
das
mov
in
mov
les
cmp
pop
clc
mov
decl
inc
cwtl
sub
shrl
sti
push
mov
push
pop
add
test
ss
call
push
add
scas
xlat
sbb
loope
cmp
inc
inc
inc
add
xchg
add
rcll
and
rclb
ja
loopne
cmp
push
arpl
cs
ja
sub
xchg
leave
pushf
lret
cmp
imul
mov
push
fistps
xor
inc
inc
adc
jl
xlat
mov
lds
xor
sub
ret
or
push
add
sti
or
pop
or
jns
or
dec
mov
mov
mov
add
clc
push
pop
sub
dec
add
in
test
xchg
lods
int3
add
fsubrl
pop
incb
in
push
add
add
popl
movsl
clc
movsl
int3
shll
pop
fadds
rcll
aas
sbb
enter
dec
fmull
shll
mov
cmpsb
mov
xor
fs
adc
int3
xlat
jmp
jo
scas
and
add
cs
pusha
push
ds
jbe
mov
push
adc
adc
sbb
xchg
pop
cmp
in
scas
movsb
push
push
sbbl
xchg
jl
pusha
jae
inc
and
rcrb
push
jge
jle
ret
sti
outsb
dec
or
outsb
or
insb
ss
or
outsb
mov
sbb
xor
push
mov
test
or
push
popa
sbb
mov
leave
jg
pushf
dec
aad
rcl
mov
daa
dec
out
popf
sub
mov
scas
add
sti
bound
gs
iret
pusha
sub
loopne
mov
pushf
add
mov
adc
add
enter
push
scas
add
push
add
mov
add
add
daa
data16
inc
out
frstor
add
add
popl
dec
test
and
mov
mov
push
inc
add
add
push
or
loopne
add
xchg
or
add
add
sbb
xchg
aam
add
xchg
add
xchg
in
xor
inc
jno
dec
mov
and
insl
cmp
lret
mov
mov
test
dec
add
and
mov
and
scas
ljmp
dec
add
dec
stos
add
add
addr16
add
mov
fdiv
sarb
mov
les
lcall
enter
lret
mov
stos
outsb
fs
mov
pop
dec
add
add
jmp
into
mov
movsl
and
cwtl
and
add
into
mov
enter
and
pop
cmpl
or
orb
xchg
lods
ljmp
notb
cmp
mov
in
add
scas
and
out
or
pop
mov
xchg
ljmp
inc
add
sub
mov
cmp
outsb
push
out
sub
ljmp
xlat
bound
fidivl
cmpsb
inc
xchg
add
and
enter
mov
popa
pop
or
dec
shlb
mov
scas
stos
out
icebp
add
subb
or
sub
push
add
dec
add
gs
add
mov
add
add
lea
add
int
sub
add
add
stos
jae
ret
mov
add
repz
sub
add
lock
pop
jl
inc
lea
fstpt
jecxz
movl
mov
cmc
lods
fabs
add
repnz
mov
icebp
shrl
push
dec
mov
das
arpl
in
push
jns
mov
ret
push
and
mov
notl
jns
call
add
fsubp
dec
push
je
xchg
hlt
jmp
loope
mov
sbb
negl
movsb
xchg
or
xchg
ljmp
mov
int3
in
jmp
fs
add
stc
mov
pusha
jo
pop
lret
ja
scas
xor
sub
scas
push
push
mov
adc
adc
inc
sub
add
ffreep
ljmp
add
mov
std
pop
fcoms
enter
idivl
shrb
scas
rcrb
jno
mov
add
xor
in
or
lods
add
lock
add
in
nop
inc
mov
cmpsb
add
dec
mov
mov
and
push
scas
insb
pop
add
mov
repnz
or
icebp
add
add
mov
test
inc
imul
icebp
add
aas
jle
add
arpl
dec
mov
pop
dec
mov
rcll
mov
mov
outsb
into
lods
lret
jae
pop
add
jb
sti
lods
imul
pop
mov
addr16
mov
rclb
ja
inc
add
fisttpl
pusha
or
lahf
lcall
fldcw
cmpsl
push
call
inc
push
arpl
jnp
inc
pop
push
add
and
ja
jp
pop
adc
in
add
out
fidivrs
add
mov
cmpsb
pop
bound
add
loope
pop
sub
cmpb
je
int3
add
add
std
scas
movsb
and
addr16
add
cmpsl
daa
lods
rol
iret
fldcw
mov
mov
sti
xor
sbb
or
mov
cmp
add
mov
daa
or
scas
push
fistpll
sarb
adc
popf
js
mov
int3
jl
or
rorb
mov
xchg
mov
repz
xchg
sbb
add
idivl
mov
cmp
add
fistpl
cmc
fdivs
mov
mov
repz
movb
fiaddl
lods
fsubrs
incl
mov
lea
push
sbb
sub
xchg
pop
das
or
sub
ljmp
pop
lock
adc
js
sub
push
mov
call
in
test
inc
cli
scas
out
mov
sbb
ljmp
outsl
in
xchg
sub
rorl
enter
mov
ret
ds
cs
aaa
pusha
mov
xchg
mov
mov
cmp
sbb
test
hlt
cmp
add
mov
cmpsb
rcrl
int
mov
xlat
outsb
adc
lcall
and
in
push
popf
pop
test
dec
das
pop
add
lods
xchg
cmpsl
jmp
jmp
sarl
ja
mov
xchg
adc
push
xor
call
sbb
repnz
pop
mov
test
mov
pop
lods
je
aas
or
push
fcmovnb
pop
dec
sub
push
xor
push
and
shrl
cld
xchg
in
lods
mov
js
sub
cltd
mov
dec
jp
push
xor
inc
xchg
arpl
xchg
out
jo
outsl
in
adc
adc
adc
repz
add
mov
or
das
cmc
mov
test
add
mov
lock
stos
xor
push
push
jl
fiaddl
lods
fisubrl
imul
lret
pop
pop
ret
mov
popa
fcmove
add
push
in
sub
add
and
sub
mov
mov
loopne
repnz
inc
sti
cmp
xchg
cmp
mov
cmpsl
xor
mov
mov
sti
dec
cmp
movsl
dec
sub
out
xor
and
gs
aam
add
jns
iret
push
mov
push
jne
lods
in
insb
add
dec
cmp
insb
incl
mov
mov
test
out
mov
cmp
jle
push
mov
mov
pop
sub
pop
addr16
in
sti
scas
add
mov
xchg
shlb
add
adc
xchg
xchg
cmp
daa
push
xchg
xor
add
xchg
inc
test
mov
sub
cmp
pop
xlat
aas
or
or
std
cli
pop
add
popf
int
add
dec
jne
loopne
mov
popf
mov
xor
push
sub
pop
lea
scas
sub
dec
ficoms
add
jmp
mov
mov
add
xor
test
shlb
das
clc
je
insl
add
mov
ret
sbb
sbb
push
dec
jo
mov
mov
jg
xor
xor
cli
and
and
sub
test
sub
cwtl
in
push
out
add
push
out
lock
out
push
icebp
aaa
fstps
iret
adc
push
cmpsb
jmp
add
pop
scas
push
popf
flds
pushf
test
shr
xchg
rcr
iret
test
sbb
lea
xor
cli
jbe
int
jo
arpl
pop
cmpsl
sti
imul
dec
pop
shr
int3
xor
mov
in
inc
mov
test
mov
shll
mov
adc
mov
add
push
inc
jle
scas
inc
js
xchg
xlat
sub
xchg
sub
ja
aam
add
push
sub
xchg
jge
hlt
push
jge
pusha
cs
mov
mov
fdivrp
and
das
push
pusha
xor
sbb
push
push
push
movsl
pop
adc
xchg
jge
in
rcl
shr
test
in
add
pop
pop
iret
inc
aas
ret
addr16
mov
sub
in
pushl
pop
mov
hlt
pop
lret
js
mov
jp,pt
add
adc
stos
sbb
into
jb
in
push
pop
lahf
add
add
loopne
test
push
jb
adc
xchg
and
fiaddl
sti
inc
in
mov
roll
xchg
pop
bswap
insl
stos
ljmp
xchg
imul
cmc
test
outsb
mov
mov
fimuls
dec
out
movsl
sub
cmp
lods
mov
push
mov
pop
lea
or
mov
test
or
rcrb
dec
loope
jmp
in
orb
sti
shll
int
mov
add
mov
stos
push
xor
add
add
cmp
loop
jmp
pop
mov
inc
ret
lods
add
adc
or
mov
jle
je
xlat
lods
movzbl
lahf
iret
test
mov
sbb
add
inc
pop
pop
or
stc
adc
negl
dec
adc
rolb
data16
sbb
sbb
mov
jecxz
lods
cwtl
add
lret
add
inc
fwait
dec
popa
nop
and
lahf
leave
adc
lret
and
sbb
js
fwait
or
decl
lret
loop
push
fmuls
enter
xorb
and
sbb
sbb
idivl
add
das
mov
in
out
lods
cmp
inc
out
cmp
sub
xor
fstpl
push
rolb
cwtl
sbb
pop
add
add
into
hlt
lcall
add
mov
popl
sbb
sub
lret
or
pop
add
jns
add
pop
add
fistpll
inc
movb
xchg
xchg
pop
mov
fisttps
imul
loopne
and
or
add
jnp
fidivrs
xchg
into
fimuls
bound
arpl
in
std
jmp
mov
mov
ret
jno
je
test
mov
test
push
xor
inc
das
pop
jle
int3
dec
filds
loopne
sarl
repnz
add
jno
or
push
pop
cmp
pop
mov
call
push
inc
add
outsl
stos
outsb
dec
call
loop
das
or
stos
sbb
sub
iret
lds
movsl
cli
lea
stos
mov
lcall
fiadds
shll
sbb
add
fisubrl
add
xor
and
cwtl
testb
sub
push
movl
lahf
insb
add
add
fnstenv
sbb
add
pushf
mov
test
cld
or
or
je
out
ds
jle
dec
pop
add
pextrw
bound
les
imul
pop
sbb
add
add
sub
sub
xchg
push
push
add
mov
push
lock
jge
xchg
pop
dec
outsl
xchg
dec
or
fyl2xp1
or
cmp
mov
add
nop
cmp
insb
mov
mov
mov
les
outsl
push
decb
int3
pop
mov
mov
ss
jle
jp
es
jg
xbegin
mov
push
inc
test
pop
cltd
mov
dec
pusha
es
xchg
lods
mov
hlt
jo
ljmp
jl
add
orl
push
jl
mov
aas
ljmp
loopne
iret
adc
imul
cmp
lahf
mov
add
jle
or
adc
lods
std
push
mov
dec
mov
cwtl
dec
pop
lahf
sbbl
mov
dec
in
cltd
xchg
out
decl
pop
enter
push
mov
lock
sub
add
cs
cmp
fs
call
inc
fs
sahf
pop
or
sub
jp
xor
sub
dec
or
lods
add
adc
mov
add
shl
fmuls
pop
xchg
lods
jg
cmp
test
or
xchg
in
es
pop
fimuls
insl
xor
test
jo
mov
xchg
xchg
mov
movsl
inc
rcrb
mov
out
sar
xchg
push
jmp
add
arpl
cwtl
and
outsb
xor
aam
pop
pop
popf
dec
pop
or
inc
outsl
imul
mov
cmpb
sbb
dec
cmovnp
ja
add
ficoml
movsl
jns
mov
pop
xchg
push
inc
sub
lea
and
jg
rcrb
add
cmpsl
lods
adc
pop
jmp
out
ds
out
lea
cmp
and
add
or
loopne
add
push
adc
scas
stc
sbb
movl
popl
add
fsubrl
push
add
imul
idivl
cmc
lret
std
ss
cltd
dec
adc
sbb
dec
add
lods
mov
je
les
mov
pop
pop
outsb
fstps
fsubrs
pop
es
jge
pop
xlat
inc
mov
push
jne
in
push
mov
dec
dec
iret
add
popa
out
lock
add
sub
mov
push
outsl
cltd
add
in
push
jmp
add
pop
das
aam
call
jbe
push
cmp
or
lods
add
jle
add
cld
inc
movsl
cmc
dec
call
push
mov
and
pop
sub
jge
jl
pop
jmp
sub
cwtl
mov
dec
add
add
scas
pop
cmpsl
sbb
or
or
std
dec
fldl
mov
jno
test
lods
outsb
adc
add
cmc
movsl
fsubrl
sahf
xchg
or
aaa
lret
add
dec
dec
repnz
subb
sub
mov
mov
mov
cmc
dec
das
push
sbb
lods
out
lods
cmp
xchg
stc
mov
stos
mov
enter
sbb
rorl
cli
aam
jecxz
push
movsl
pushf
pop
jbe
sub
aas
loop
inc
push
leave
sub
out
add
push
scas
lds
dec
sub
sbb
test
stos
test
or
add
cwtl
pop
icebp
lea
mov
lret
sub
add
jge
rcr
cmp
inc
testl
mov
daa
mov
or
jmp
cmpsl
test
filds
fwait
jecxz
add
loop
xchg
add
out
add
and
test
rcll
addl
dec
ret
xchg
xor
dec
add
int3
pop
or
ljmp
ret
sub
jecxz
psubq
or
adc
dec
int3
mov
scas
test
push
add
jno
or
iret
leave
mov
sub
in
xlat
and
inc
push
aas
mov
pop
sub
test
dec
xor
scas
xchg
insb
add
xor
cmp
push
cmp
add
xor
mov
push
scas
mov
loop
and
outsb
jle
mov
test
lds
jnp
fstps
aaa
dec
sbb
call
jnp
dec
test
sub
rorl
push
movsl
pop
dec
dec
daa
add
mov
mov
add
flds
push
fimuls
pop
imul
sar
sub
add
test
imul
pop
fwait
add
mov
and
add
stc
xlat
xchg
enter
sbb
add
movhps
cmp
scas
fadds
bound
sub
jbe
add
and
je
mov
and
xor
inc
fiadds
pop
xchg
icebp
mov
inc
cmc
loope
add
insl
sub
cmpsl
sbbl
outsl
lods
cmp
add
lods
mov
xchg
stos
dec
decb
mov
inc
sbbb
xchg
push
cmpsb
outsb
mov
fcmovnu
lea
out
sbb
inc
popf
fs
outsl
mov
divb
cmp
hlt
push
dec
imul
insl
repnz
ret
xchg
cmp
dec
jle
mov
test
xor
mov
call
test
push
sub
jno
dec
outsl
test
mov
add
ret
push
imul
inc
add
fdivr
add
mov
bound
add
gs
jmp
imul
divb
outsb
mov
test
add
xlat
xor
mov
lds
add
stc
clc
nop
sub
fsubs
inc
mov
sbb
test
jne
aas
add
lds
mov
or
lret
inc
insl
daa
out
jmp
aas
pop
mov
out
jge
daa
jg
movsl
imul
icebp
add
mov
sahf
stc
cwtl
mov
sub
movsb
xor
out
inc
test
jnp
lahf
in
add
nop
xchg
xchg
out
xchg
add
dec
out
inc
add
adc
push
xchg
subl
shlb
int3
adc
add
jp
xlat
pop
cmp
insb
aaa
cmp
call
lcall
and
aad
pop
imul
mov
fiadds
push
pop
cmp
cmp
dec
push
adc
pop
sub
cmp
test
xchg
add
xorl
rcrl
xchg
insl
cs
shll
jecxz
and
xor
jno
or
iret
ret
dec
mov
into
mov
inc
add
ret
jbe
jns
push
dec
or
lods
jae
js
repnz
test
ficoms
dec
out
xchg
call
sbb
jge
xor
xor
xchg
cli
mov
sbbb
addr16
xchg
jb
lds
lods
push
xchg
inc
lahf
xchg
scas
pop
rorl
xor
stc
add
xchg
push
pushf
movsb
mov
stos
jmp
inc
push
nop
hlt
stos
sub
hlt
loopne
mov
inc
sub
mov
aas
push
imul
xchg
add
sub
test
in
sub
sub
mov
test
adc
scas
xlat
adc
orl
sbb
mov
in
pop
fs
dec
pop
shr
xchg
std
xchg
pop
pushf
push
add
fstpl
dec
xchg
lahf
mov
paddsb
lea
inc
insl
mov
cli
inc
pop
jg
sahf
add
lret
add
neg
add
mov
mov
mov
jne
in
hlt
add
push
ljmp
rclb
mov
enter
fisubs
test
mov
leave
popf
add
pop
dec
xor
mov
movsl
pushf
adc
or
enter
repnz
lods
pusha
scas
jae
add
cmp
popf
xchg
sbb
dec
pop
dec
out
gs
mov
jle
stos
lret
push
adc
mov
or
mov
ss
fistpl
xor
push
adc
iret
fstpl
dec
shrb
test
jmp
ss
cmp
push
aas
stos
popa
inc
mov
fcomps
add
add
mov
shll
add
test
sti
adc
mov
mov
gs
sbb
push
dec
adc
push
and
popl
sbb
fistpl
arpl
aaa
ss
int3
jne
mov
call
xchg
lock
roll
out
mov
add
stc
aam
push
add
pop
lods
cli
add
mov
mov
test
jecxz
mov
mov
lahf
cmp
cmpl
cmp
mov
cwtl
xlat
stos
dec
pop
inc
xchg
add
adc
xorl
inc
xchg
enter
jg
das
add
xchg
xor
and
mov
ja
push
fwait
dec
js
aas
iret
and
mov
mov
sbb
xchg
bound
push
faddl
jge
ret
jb
and
mov
add
inc
mov
push
push
add
adc
jbe
pop
pop
icebp
add
xchg
mov
jecxz
in
sbb
jle
xchg
push
xchg
dec
mov
adc
xor
pop
scas
mov
outsl
out
loope
fdivs
pop
push
jg
out
xchg
xchg
push
in
mov
fiadds
lcall
push
loopne
cmp
decb
js
cli
stos
add
mov
and
push
sbb
daa
popa
shll
push
shrl
sub
adc
ss
push
xchg
and
dec
or
lret
pop
call
ljmp
dec
xchg
inc
cli
dec
mov
outsl
jns
call
cli
sub
add
gs
cmc
cli
jl
mov
imul
dec
cmp
and
push
repnz
xor
dec
jge
outsb
pushl
stos
push
in
es
fildl
aas
dec
adc
pop
mov
add
add
dec
stos
and
inc
fnstcw
cmp
fdivr
xlat
dec
imul
dec
sub
int3
sub
jns
mov
push
jmp
test
add
mov
insl
in
sar
test
jle
loope
in
fldt
jne
or
dec
mov
add
push
cmpsl
cmp
mov
sbb
add
lods
mov
roll
movsl
inc
ret
pop
xlat
out
cmc
movl
jge
inc
mov
out
in
jns
sub
cmp
jmp
mov
add
lret
into
inc
ljmp
add
shll
enterw
dec
adc
jnp
xor
loope
ret
dec
sub
fnstenv
cmc
lods
mov
data16
or
enter
sub
test
mov
add
iret
mov
push
outsl
xor
sub
mov
decb
and
push
mov
icebp
jg
xor
lahf
push
mov
mov
xlat
add
or
add
test
jg
sub
add
add
mov
xchg
adc
and
iret
jge
dec
add
insb
sub
dec
ret
and
scas
and
jnp
dec
incl
mov
sbb
add
scas
bnd
xor
inc
mov
cmpsl
cmp
pop
sbb
jmp
xor
fnstsw
push
mov
inc
adc
mov
mov
fsubrs
lods
lret
pop
sarb
inc
movsl
add
dec
push
orb
jo
push
jbe
xchg
and
xchg
add
movsb
sbb
mov
vmread
data16
add
aad
cs
test
testb
inc
outsb
fwait
sarl
cli
loop
sarl
xor
cmp
adc
mov
cmp
xchg
mov
jge
ds
push
mov
and
sbb
pop
cmp
cmp
cltd
das
sti
sbb
mov
mov
idivb
cs
push
lock
es
sldt
pop
xor
jg
xor
mov
lods
push
outsl
mov
lret
mov
inc
lds
adc
cli
cmpsb
mov
and
inc
subb
mov
push
test
lods
push
jmp
in
xchg
xor
mov
mov
lods
std
std
sbb
ret
testl
xor
xor
pusha
add
jbe
or
call
gs
pop
add
lcall
sub
xchg
add
stc
fwait
or
mov
lods
imul
inc
or
mov
jno
push
jmp
mov
out
mov
xor
inc
add
pop
or
xchg
icebp
pop
sub
add
add
test
shrl
add
lds
sarl
dec
xchg
xchg
orl
jle
fstpt
and
sbb
jb
imul
inc
add
pop
add
repz
movsb
jae
and
out
dec
xchg
inc
mov
mov
cmp
enter
xchg
fsubrl
call
lret
fwait
and
scas
std
pop
jecxz
out
xchg
cmp
aad
imul
cmp
fildll
xchg
sub
xchg
xchg
lcall
cwtl
cmp
cmp
pop
aam
sahf
pop
and
pusha
push
push
jp
add
xchg
jns
jnp
repnz
das
out
jmp
xchg
push
pop
jb
cwtl
imul
sbb
inc
les
jp
and
xor
jl
inc
jne
in
push
or
cmpsb
cmp
cs
stos
mov
int3
inc
jl
xor
imul
mov
adc
or
add
dec
clc
out
filds
mov
arpl
incb
xlat
mov
jne
inc
stos
shrb
pop
icebp
add
dec
stos
mov
or
xor
add
mov
add
roll
add
or
gs
clc
roll
movsb
mov
pop
xchg
test
xor
insb
inc
mov
je
push
mov
bound
rolb
jo
enter
int3
sub
testl
fimuls
xor
xorb
outsb
cs
jae
mov
sbb
cmp
iret
or
cs
mov
add
push
add
sub
js
inc
mov
push
push
inc
movsl
sub
add
inc
lds
add
movsl
popa
add
nop
adc
inc
add
shlb
sub
mov
adc
add
js
push
add
outsl
fwait
inc
inc
in
or
lret
add
add
stc
aad
lods
push
push
or
push
jmp
sub
out
es
xor
popa
sbb
inc
movsl
mov
inc
add
ds
imul
mov
adc
in
pop
xor
add
mov
out
test
push
gs
in
sbb
test
les
mov
nop
popf
dec
add
test
add
inc
fs
aaa
push
push
out
js
add
pop
inc
aad
cli
adc
mov
iret
sbb
pop
mov
sub
add
add
dec
or
jb
dec
stos
iret
add
aam
pop
add
mov
cmpsl
jb
add
sub
leave
sub
hlt
lahf
push
push
push
jae
cmp
in
adc
faddl
pextrw
jo
and
lods
inc
cltd
insl
rcrl
add
int
adc
and
in
jb
add
mov
pop
cmp
add
and
testl
nop
add
iret
add
pop
aam
mov
xchg
mov
mov
into
stc
add
add
inc
add
movsb
dec
add
inc
add
in
adc
jecxz
inc
movsl
sub
and
scas
loop
rorl
pop
fistpl
sub
cmp
jae
lret
jbe
push
push
ret
inc
fistl
add
add
sbb
mov
add
jmp
arpl
fstpl
ss
pop
dec
push
into
pop
aas
rcr
vcvttsd2si
les
popa
sub
cli
mov
lret
inc
lcall
es
sarl
jge
cmpsl
lods
or
cmp
xchg
rclb
jp
mov
rorb
or
push
repnz
add
into
mov
addr16
int3
pop
daa
cwtl
pop
ljmp
push
add
lods
add
dec
repnz
fs
rcr
dec
adc
mov
aam
clc
lods
xchg
mov
or
int3
mov
push
jecxz
ljmp
in
inc
dec
fcmovnb
sbb
aaa
out
jge
mov
arpl
xchg
jo
in
cwtl
add
movsl
adc
pop
mov
fs
inc
inc
mov
pop
mov
cmc
je
jmp
and
pop
int3
adc
mulb
test
les
lds
mov
mov
pop
rorb
ror
dec
xor
mov
je
fcomps
out
jbe
or
add
add
insl
jle
adc
lahf
ja
fs
mov
add
add
jns
jl
mov
add
cmpsb
add
out
and
cld
sbb
xchg
mov
push
inc
dec
in
test
shr
jno
insl
mov
add
add
rolb
inc
mov
and
rorl
jo
inc
xorl
dec
test
out
js
andb
mov
js
iret
push
inc
add
sti
add
and
add
loop
rorl
int
and
xor
cmp
mov
test
decb
or
sbb
pop
sub
leave
pop
dec
or
push
dec
adc
inc
push
sbb
popf
mov
inc
mov
xchg
add
into
shlb
push
hlt
jmp
cltd
scas
and
rorb
arpl
int
adc
xchg
mov
popa
ljmp
adc
cwtl
adc
movb
push
jmp
mov
int
cmp
adc
fstpt
push
lock
addb
addl
data16
xchg
popf
sbb
lods
mov
xchg
lods
test
lock
fimuls
mov
jmp
lds
sbb
mov
cwtl
push
dec
insl
mov
lcall
fcmovb
inc
lahf
cmpsb
add
mov
and
adc
inc
mov
lcall
stos
mov
loop
frstor
jno
ret
addl
jne
add
shl
enter
dec
xchg
dec
fmuls
xchg
and
dec
add
add
sti
add
pop
pop
mov
sub
in
test
sub
jne
add
xchg
xchg
add
or
dec
or
jo
cltd
sub
mov
adc
and
and
int3
int3
stos
or
nop
mov
subl
call
addr16
add
pop
in
in
cmc
jbe
js
lock
cs
add
cmp
lret
ror
outsb
test
in
in
scas
jns
xor
lods
imul
cld
add
push
lea
jp
pop
inc
cmp
lock
lock
inc
push
add
jmp
or
pop
ret
cli
and
xchg
icebp
sub
mov
xor
pusha
fwait
sbb
pop
jg
adc
add
push
frstor
xchg
add
test
stos
adc
iret
xor
add
test
inc
pop
jmp
lcall
and
ljmp
lret
add
mov
aas
call
movsb
jno
mov
shr
or
pop
call
add
and
mov
xchg
push
sub
pop
jmp
test
xchg
and
insb
and
push
pushf
pop
loope
dec
loop
sbb
ljmp
gs
adc
add
push
add
mov
mov
jne
add
push
mov
test
sub
lods
push
testb
leave
pop
iret
mov
cmpsl
rorb
push
inc
ret
mov
and
mov
int3
pop
mov
out
cwtl
push
mov
lock
pop
pusha
out
dec
lods
mov
sti
std
adc
inc
add
and
cmpsl
aaa
imul
hlt
imul
int
dec
add
jne
adc
adc
jge
xchg
add
pop
pop
movsl
adc
pop
adc
out
outsb
test
imul
jle
in
das
test
xchg
mov
sbb
sub
imul
shrb
push
movsl
rorb
lods
cmc
shl
mov
pop
cmp
lret
arpl
lret
adc
mov
adc
sub
mov
inc
inc
or
insb
push
inc
pop
adc
cmpsb
out
cmp
sub
dec
mov
cmpsb
add
sbb
inc
jle
lret
cs
mov
push
daa
xor
mov
enter
lcall
stc
lods
aad
jp
sub
cmp
daa
add
jg
add
or
mov
dec
add
pop
add
std
adc
push
push
ljmp
dec
loop
sbb
test
sahf
jae
lods
daa
mov
loop
mov
ljmp
adcb
popl
pop
jmp
mov
xchg
xchg
add
roll
icebp
sub
push
pop
call
adc
int3
xor
enter
xchg
fidivs
mov
and
dec
jo
movsb
call
add
mov
shlb
adc
add
xor
sub
imul
addl
subb
jecxz
call
mov
mov
rcrb
jle
ror
fsubs
jecxz
xchg
xorl
ds
mov
mov
push
ltr
mov
stc
mov
sbb
and
and
in
movsb
orb
sbb
xchg
fiaddl
lahf
cmp
data16
mov
mov
xor
jp
add
sbb
ret
icebp
add
push
push
pop
push
xor
sbb
int
adc
out
mov
cmpsl
sub
jo
or
mov
or
cmp
fisttps
cmpsb
dec
and
loope
shl
dec
ffreep
push
pushf
sub
mov
cld
aad
xchg
push
jmp
xlat
stos
push
mov
pop
and
hlt
mov
xchg
cmp
pop
pop
repz
cltd
lds
or
dec
movsl
out
daa
xchg
add
or
or
fs
iret
mov
cltd
in
imul
push
mov
movsb
add
scas
cmp
popf
roll
mov
add
out
test
sub
loop
mov
dec
imul
and
fldl
add
mov
xchg
popf
xchg
cmp
fs
add
retw
jle
jbe
out
psllq
stc
ljmp
into
push
call
pop
loop
dec
or
inc
jb
jno
orb
xchg
mov
arpl
fdivl
mov
daa
ss
mov
js
sbb
and
arpl
sbb
sub
sub
sub
adc
shlb
aam
add
xchg
add
dec
out
add
or
mov
sbb
inc
or
xchg
push
and
xor
inc
or
int3
push
add
sbb
repz
shlb
cltd
adc
pop
push
jno
aam
dec
setle
out
cli
cmp
xor
lahf
imul
outsl
lret
jl
dec
jp
aas
cld
ja
fcompl
adc
das
xor
cld
add
ljmp
push
loop
push
loope
jmp
jl
je
cmpl
dec
leave
inc
add
leave
arpl
push
cld
into
dec
imul
pop
mov
scas
inc
in
push
mov
arpl
mov
negb
mov
jecxz
mov
rcrb
lds
mov
jb
mov
aam
cs
add
xchg
inc
jo
and
add
sbb
jno
xor
dec
inc
or
xchg
ss
aas
or
in
aad
subl
fwait
cli
cmpsb
outsb
jl
out
fsubr
out
js
pop
fsubrs
sub
in
pop
movsb
hlt
int
ja
mov
test
lret
lods
pop
mov
ds
xlat
sbb
lret
xchg
jns
jg
sbb
mov
shl
sbb
insb
add
or
or
test
ret
mov
aaa
sub
enter
cs
add
or
pop
mov
pop
or
add
leave
in
adc
arpl
pop
and
add
xchg
out
ss
rcll
iret
aaa
lds
push
out
lods
jo
xor
mov
cli
pop
lret
cwtl
fwait
add
add
xchg
stc
leave
lods
mov
add
fcmovne
sub
iret
iret
test
mov
daa
mov
add
cwtl
adc
addl
cmc
mov
add
pop
or
movsb
mov
loopne
mov
fildl
ret
imul
adcl
data16
bound
inc
mov
adc
add
xor
iret
or
out
xor
addb
outsb
dec
in
test
in
and
pop
mov
pop
adc
cmp
add
cli
jecxz
outsl
mov
or
add
xchg
dec
ret
cmp
iret
imul
fildl
push
nop
test
lahf
call
out
add
in
stos
out
add
sbb
in
ss
out
faddl
ds
test
stos
rcrb
enter
xchg
dec
cmpb
sbb
es
dec
popf
cmc
add
xchg
in
push
cmp
sub
jae
test
push
lods
xor
in
mov
xchg
add
pop
add
daa
mov
sub
movb
xor
sarb
jl
sbb
imul
push
mov
ret
aad
aam
jmp
rcr
xlat
test
lea
add
jl
call
add
insl
dec
fiaddl
mov
scas
loope
push
inc
out
add
xor
add
xor
nop
sub
inc
cmpsl
sbb
jge
xor
stc
aad
xchg
popf
sub
fsubp
lret
add
add
inc
inc
xchg
mov
jne
mov
insb
iret
add
adc
sub
or
jl
add
xchg
pushf
aaa
fisubs
sub
ss
jle
scas
sbb
add
add
mov
mov
sub
sub
adc
add
jae
rolb
movsl
cmp
sbb
ds
sbb
das
or
adc
stc
in
add
addr16
call
add
adc
add
in
out
mov
sub
sbb
mov
sbb
fs
out
cmp
cmp
add
mov
sbb
jb
push
xor
inc
test
into
mov
inc
add
and
inc
repnz
mov
xchg
add
in
lock
and
popa
jmp
cmp
add
sarl
xor
js
gs
cmpb
dec
aad
add
add
add
add
xchg
cmp
out
sub
imul
add
pushf
mov
inc
adc
aas
out
inc
popa
jecxz
hlt
mov
ret
dec
int
pop
sbb
fidivrl
out
mov
mov
lock
fsubrs
arpl
and
add
or
adc
jp
add
stc
test
popf
push
sldt
sbb
mov
dec
sbb
mov
insb
mov
add
loopne
notl
jne
mov
pop
scas
pop
pushf
mov
add
es
cmp
stos
filds
pop
lret
iret
int3
les
add
jecxz
pop
cmp
push
inc
push
mov
push
ljmp
test
in
imul
outsb
cli
sahf
int
stos
dec
add
and
jmp
lock
lahf
xchg
aad
adc
scas
out
add
cmpsb
in
add
sub
and
pusha
add
rorb
ja
pop
and
mov
out
jo
sub
add
sbb
dec
pop
add
xchg
add
inc
push
ljmp
jge
pop
scas
pop
xor
add
xchg
mov
pop
shld
sti
jb
mov
decb
into
xchg
cwtl
sbb
mov
mov
or
inc
nop
leave
mov
lea
shrl
add
sbb
into
lods
mov
push
call
lret
out
cmpsl
je
jb
mov
add
mov
rorb
out
mov
pop
sub
popa
xchg
adc
int
add
insb
xlat
jbe
fsub
mov
popa
mov
out
sbb
sub
cltd
mov
mov
jle
int3
ficomps
out
jb
mov
cs
hlt
test
add
loopne
into
ljmp
add
in
adc
add
test
inc
jo
mov
jmp
add
dec
or
or
ret
xchg
int3
sar
ds
fisttps
fs
add
in
or
out
jo
mov
fistps
mov
cmpsl
popa
mov
pop
fwait
push
adc
mov
aas
sbb
add
add
xchg
jmp
popf
test
push
add
lahf
cmp
add
les
movsb
add
pushf
cltd
add
mov
cmp
in
mov
cwtl
add
mov
fdivs
in
add
les
add
mov
mov
es
scas
orl
jle
int
imul
cmpsb
add
ss
mov
add
inc
negb
sbbb
pop
sti
and
loopne
cmp
pusha
clc
scas
jg
dec
jns
fidivl
mov
lret
sbb
fistpl
add
add
cmp
loopne
adc
ja
call
jae
sub
mov
push
cmp
hlt
and
addr16
hlt
enter
sbb
and
stos
mov
lcall
xchg
subb
fisttpll
roll
imul
leave
insb
sti
lahf
mov
push
sub
call
adc
test
and
jl
mov
aam
xchg
dec
push
into
enter
add
shlb
cmpsb
fistpl
mov
dec
mov
adcl
insb
add
stos
push
lds
push
pusha
ds
pop
das
lea
rdtsc
mov
add
aam
mov
loope
pop
and
popa
imul
ljmp
cmp
mov
mov
out
movsl
xchg
inc
and
add
lods
stos
fucomp
in
pusha
mov
lods
mov
dec
mov
mov
pop
ret
adc
add
test
xchg
add
add
and
scas
movsl
mov
push
sahf
mov
jb
mov
sub
lods
xor
mov
push
xchg
negl
jmp
inc
mov
jnp
cs
add
mov
adc
dec
ds
sub
inc
test
and
xlat
dec
test
dec
sub
ret
xor
aas
and
mov
fiadds
sbb
es
mov
add
dec
pop
lods
add
sti
es
or
mov
dec
aam
sub
mov
jb
inc
add
add
add
mov
add
add
add
das
or
add
sub
cmp
push
in
dec
pusha
enter
add
pop
mov
mov
aad
push
add
add
in
dec
cmp
dec
or
in
pop
scas
sub
add
add
add
fisubrl
adc
dec
pop
add
in
arpl
inc
cmp
and
pop
mov
lods
sbb
in
mov
repz
or
xchg
addr16
sti
sbb
mov
adc
data16
int
mov
pop
add
add
out
stc
inc
pushf
hlt
in
sub
adc
dec
icebp
xchg
lahf
sahf
mov
add
mov
add
jae
xor
mov
cmp
fimull
repz
xor
das
pop
inc
icebp
push
sub
js
psubw
pop
sub
ja
mov
adc
xchg
dec
flds
dec
dec
add
add
in
jb
fdivp
lds
mov
lahf
ret
push
test
repnz
jbe
loopne
add
add
iret
xor
imul
xor
inc
add
xor
in
scas
jmp
sbb
pop
sub
sub
mov
jno
test
adc
adc
or
mov
imul
add
repnz
pop
sbb
lret
ret
xor
in
mov
call
lock
pop
add
in
add
repz
add
sub
lret
inc
add
dec
fisttps
pop
xor
icebp
cmpsb
jo
insl
lods
stc
in
mov
mov
fnstsw
mov
aaa
push
int
out
add
and
jp
mov
mov
clc
test
negb
mov
lea
sub
sahf
out
pusha
lods
jnp
out
in
mov
pop
outsb
lock
gs
popa
add
inc
jge
add
jge
xor
jae
and
sub
inc
and
inc
mov
int
and
pop
mov
stos
call
mov
jns
pop
mov
sbb
fcmovbe
cmp
add
or
add
insb
movsl
or
lock
inc
dec
push
add
hlt
adc
xchg
mov
or
sbb
es
jne
fwait
sti
add
lock
repz
fadds
lds
jmp
bound
adc
addr16
aas
adc
or
xor
movb
stos
shlb
mov
cmp
cmp
cmpsl
add
ror
dec
mov
add
mov
imul
iret
xor
adc
cmc
adc
jne
xchg
inc
std
fs
mov
ret
int
push
test
shl
inc
pop
stos
ljmp
and
jae
cwtl
sbb
lods
das
adc
inc
test
xor
ja
jecxz
sub
or
jbe
test
push
xchg
add
fwait
stc
mov
pop
fidivs
out
xlat
iret
mov
push
jno
cmp
mov
push
push
add
pop
out
mov
daa
test
movsb
sub
adc
push
push
test
add
clc
add
aaa
sub
xchg
adc
add
add
push
xlat
fwait
aam
fwait
ljmp
jne
lahf
in
test
mov
repnz
fldlg2
pop
fsub
add
jb
leave
add
adc
add
dec
rcr
lods
movsb
add
push
dec
pop
loop
mov
popf
pop
cli
std
daa
lods
sbb
pushw
ret
pop
insb
add
lret
idivb
int
mov
ja
stc
mov
stc
loop
cmpsb
fsubs
imul
pusha
sbb
fstl
and
sti
inc
popf
in
xor
sbb
daa
in
test
test
je
test
add
repnz
jge
loopne
push
dec
or
fs
cli
dec
add
test
gs
jne
imul
orb
sbb
push
cmp
lcall
scas
sub
cli
jno
xchg
mov
fildl
dec
mov
sbb
jg
sbb
mov
test
das
sbb
stc
inc
rorl
iret
ret
add
adc
dec
sbb
adc
add
fsts
aas
es
ja
in
xchg
xor
cwtl
aas
iret
frstor
add
lods
inc
pop
ja
inc
pop
cmp
inc
xchg
ljmp
movsb
and
dec
cmp
mov
and
add
ss
repnz
add
mov
jae
fsqrt
rcll
push
dec
push
scas
sbb
call
mov
xor
das
insl
xchg
loope
mov
jnp
pusha
push
pop
rorb
mov
test
adc
sbb
xor
xor
scas
cld
mov
mov
pop
leave
call
iret
inc
rol
push
sbb
add
ja
inc
add
push
mov
out
cmp
test
mov
testl
push
add
loopne
adc
mov
dec
test
jb
and
mov
dec
jl
cmpsl
add
in
rol
int3
movsl
push
add
dec
pushf
and
add
xor
cmpsb
add
arpl
repnz
xchg
movsb
shlb
fisubrs
test
add
std
fistps
dec
sub
icebp
inc
lods
lahf
aad
xchg
outsb
aad
in
pop
jb
push
loop
in
add
add
test
outsb
fisubrs
push
sbb
push
add
sti
sub
or
movsb
push
fstps
and
and
lods
add
popa
push
pusha
sahf
out
in
mov
dec
ja
stos
inc
xor
rcrb
aad
dec
add
cwtl
mov
in
pop
jp
fiadds
or
pop
cltd
in
mov
add
xchg
cmpsb
mov
add
inc
mov
test
out
mov
jae
lcall
xor
xchg
mov
movsb
ret
hlt
xor
pop
test
jb
cmp
and
jecxz
lea
push
pop
add
popa
int3
sub
imul
and
push
sub
add
lock
jne
or
or
xlat
lcall
mov
push
sbb
xchg
sub
popl
pop
cmpsb
movsb
hlt
shrb
pop
cltd
popl
push
push
mov
mov
add
ds
stos
lret
sub
xor
sub
popa
jmp
inc
and
push
add
or
int3
int
mov
pushf
adc
pop
inc
sub
fwait
xor
mov
pop
outsl
stos
mov
sar
outsb
sti
add
in
enterw
jmp
fnstenv
sbb
into
or
rolb
sbb
stos
add
sbb
imul
sub
test
push
add
in
addr16
lahf
push
fimull
fisubl
mov
shrb
jg
aad
xchg
pushf
xchg
fs
xor
imul
ss
push
out
rol
arpl
cmp
dec
in
in
in
mov
pop
movsb
mov
cmpsb
stos
and
add
sub
movsb
lods
and
fldt
add
dec
and
fidivrs
add
stc
in
lcall
dec
clc
and
jb
cmp
inc
inc
shll
daa
inc
cmp
ja
mov
lds
outsb
cltd
fistpll
pop
or
add
pusha
insb
add
dec
xchg
jmp
mov
dec
call
jbe
cmp
int3
or
sarb
pop
jp
mov
mov
loopne
lahf
test
add
icebp
xchg
add
jle
cmp
add
mov
mov
jle
add
aaa
add
xor
or
adc
cmpsl
jecxz
mov
xlat
dec
aam
jmp
cmp
call
add
and
add
add
jne
mov
mov
jb
sbb
jae
mov
ljmp
sbb
inc
ljmp
jmp
mov
push
jno
out
pop
in
bound
sub
push
and
mov
and
mov
out
incb
lods
add
add
add
aas
mov
or
xchg
incl
les
dec
dec
shrb
dec
mov
pop
jmp
mov
les
pop
jg
leave
mov
or
shr
fcompl
sbb
or
gs
xchg
int3
orb
aaa
loopne
test
daa
stos
lret
pop
jg
mov
fldt
fs
adc
fsubrl
scas
or
jle
shlb
aad
lret
add
xchg
mov
fsubl
cmp
add
or
jmp
add
cmpsb
in
mov
cs
dec
add
push
std
movsb
pop
roll
add
jg
or
insb
push
scas
dec
xchg
je
xlat
add
mov
lods
add
roll
inc
outsl
fdiv
jae
cs
inc
add
imul
adc
add
add
imul
sbb
pop
leave
cmp
in
sbb
add
xchg
xor
sub
sbb
mulb
pop
add
mov
pop
fistps
xchg
adc
ljmp
ljmp
jp
or
jmp
sub
pop
cld
add
xchg
xor
lahf
add
add
fldl
add
fucomi
push
and
add
jle
mov
insl
and
pop
dec
int
shll
cwtl
cltd
or
imul
mov
jne
daa
add
ja
mov
dec
add
out
mov
push
or
sahf
pop
aas
sub
test
lahf
pop
inc
xchg
dec
xchg
cli
das
add
add
lcall
add
lods
pop
or
loope
adc
lods
lret
add
cmp
xor
add
lods
push
jb
in
hlt
cmp
mov
scas
lret
movsb
jae
and
lods
or
fcomps
pop
outsb
add
shl
outsl
xchg
mov
add
cmp
adc
outsl
imul
inc
addr16
push
fistl
xchg
inc
xor
fldl
cmp
sbb
lret
addr16
jecxz
ljmp
cs
mov
fiaddl
fdivl
into
in
imul
dec
lret
push
mov
icebp
fs
lods
cmp
lea
mov
xor
add
xor
int3
or
sub
dec
mov
xchg
mov
dec
mov
push
lahf
adcl
mov
xor
add
add
inc
hlt
pushf
or
lods
stos
xchg
xor
push
dec
add
add
add
lret
lea
or
pusha
loop
pop
pop
cmp
adc
scas
test
add
std
inc
xorb
enter
add
add
scas
xor
add
pop
add
xor
outsb
scas
jo
jbe
add
add
jle
dec
stos
cmp
outsb
add
call
sub
fldt
sarl
adc
ret
jbe
adc
sarl
inc
pop
das
and
dec
pop
and
pop
or
ljmp
add
lahf
scas
sbb
sbb
loopne
insb
orb
xchg
pop
sbb
xchg
imul
jne
jg
faddp
dec
leave
push
ret
inc
mov
dec
inc
mov
andl
push
mov
mov
pop
into
sbb
add
dec
mov
add
push
push
leave
mov
mov
dec
inc
lods
xor
push
imul
push
push
fisubrs
adc
fisttpl
ljmp
and
loop
xchg
xchg
outsl
xchg
push
imul
push
push
xchg
add
sub
pop
add
aam
cmp
nop
adc
inc
and
mov
addb
sbb
push
xor
pop
es
clc
ljmp
add
adc
jp
sub
adc
dec
in
jecxz
mov
dec
orl
push
inc
sbb
or
lods
xor
mov
ljmp
scas
add
jns
dec
std
imul
aad
jmp
les
push
pop
push
icebp
dec
aas
xlat
mov
push
push
rclb
and
xchg
or
mov
js
movsb
sub
push
pop
mov
and
add
mov
mov
mov
mov
xchg
mov
push
sbb
sti
mov
pop
jnp
mov
jle
es
adc
cmp
int
xlat
mov
inc
xor
ud0
test
lcall
scas
outsb
jb
outsl
imul
mov
mov
sbb
mov
jge
push
aaa
subl
sub
in
dec
imul
dec
ret
mov
push
lock
add
popf
repnz
mov
mov
lock
xchg
dec
dec
add
sbb
or
or
cmp
lods
sbb
mov
mov
lea
out
insl
int
mov
ret
das
sbb
pop
cmp
jecxz
fcomps
xchg
lea
std
out
test
lcall
lock
xchg
mov
push
mov
aaa
sub
scas
mov
out
inc
or
cli
mov
xor
jl
stos
inc
jns
je
xorl
in
add
push
inc
in
arpl
sub
aaa
scas
cmp
push
xchg
mov
push
cli
sbb
sahf
sbb
pusha
ret
add
mov
dec
jbe
mov
add
xlat
fisttpll
or
mov
mov
xor
std
sahf
rcrl
and
sub
mov
jg
sti
pop
xor
sub
xor
das
mov
aad
cli
or
cmp
mov
addl
ficoml
dec
cmpsl
xlat
sub
inc
stos
add
fimuls
aad
fbld
js
dec
push
add
pop
add
into
dec
xchg
inc
lods
mov
not
lret
loope
push
add
nop
fcompl
pop
movsb
movsb
cs
test
leave
sbb
adc
popf
xor
pop
mov
sub
push
stos
loop
clc
lcall
cmp
shlb
sub
leave
mov
pushl
out
add
sub
and
xor
push
xor
lods
mov
fcomi
imul
pop
dec
push
loop
ror
cmp
and
add
cmp
sub
inc
add
add
push
mov
cmp
cs
jg
fcmovnb
add
and
ret
and
cmpsl
bswap
push
icebp
sbb
leave
cmp
xchg
inc
push
push
lock
pop
dec
add
sarb
lahf
xchg
sahf
ret
mov
fwait
mov
add
or
cmp
adc
push
sti
repnz
add
inc
je
add
stc
and
jmp
or
jns
push
mov
jb
rcl
test
push
fcompl
inc
jg
push
add
aaa
sub
sbb
lcall
inc
inc
add
mov
lea
stc
leave
bound
pushf
popf
or
aas
pop
or
imulb
cltd
sbbl
sar
add
add
mov
dec
outsl
cmp
loopnew
out
subb
insl
cmp
push
push
cmpsl
mov
mov
fwait
into
add
sbb
xlat
imul
test
dec
pop
push
lcall
jb
jg
adc
enter
sahf
pop
xchg
or
in
jle
or
sbb
adc
or
dec
or
out
adc
in
imul
jle
cmc
sub
sub
popf
jnp
and
jbe
das
lret
scas
mov
add
mov
stc
xor
ja
verw
out
lret
insl
pop
adc
cmpsb
aaa
jp
cli
das
out
bswap
jne
pop
mov
loop
mov
or
movsl
mov
mov
insb
ja
mov
das
xchg
gs
int
inc
je
iret
seta
shrb
add
cmp
das
dec
mov
push
mov
and
sbb
lret
stos
jp
add
or
inc
lret
js
mov
cmp
add
sub
mov
cmpxchg
mov
das
aad
ds
pop
mov
add
adc
push
adc
push
and
xor
lods
add
gs
add
cmc
mov
xchg
sahf
repz
xchg
or
shlb
mov
dec
xchg
dec
out
add
enter
cmpsb
lcall
test
xor
jg
in
cmp
sub
cmc
mov
push
popf
in
outsb
arpl
insb
jmp
sub
daa
das
sub
std
and
in
insb
add
vcvttsd2si
movsl
lods
scas
fisubrs
mov
adc
stos
cmovle
mov
fsubrs
les
adc
shl
out
add
push
push
dec
inc
jmp
sub
dec
insb
loopne
cmp
out
cld
jp
lock
or
mov
adc
shrd
dec
in
fwait
push
jg
cmp
stos
je
in
pop
mov
cmp
adc
daa
jne
fwait
insb
les
jge
and
xchg
mov
jmp
jnp
ds
add
or
mull
adc
cs
or
jecxz
cmpsb
xor
icebp
lret
push
loop
fmuls
cmp
arpl
sbb
lret
bound
mov
xor
jb
pop
jmp
sahf
movsl
rcl
call
cmpsb
movsl
push
mov
outsl
mov
stos
jmp
mov
push
push
mov
push
pop
negb
sbb
xor
loopne
pop
mov
jge
leave
xchg
pop
pop
in
ja
add
int3
popf
or
cmpsb
add
push
cwtl
mov
cmp
nop
aam
in
dec
pop
mov
and
clc
std
sti
push
xchg
push
lret
dec
jge
mov
mov
inc
inc
nop
daa
aad
and
cmp
aad
arpl
dec
in
repnz
jge
in
jnp
add
lahf
cmc
jg
nop
inc
test
mov
pop
mov
aad
sti
in
fistpll
adc
cmp
pop
popa
pushf
aaa
orl
jb
lret
div
push
add
sub
jg
imul
add
add
or
pop
add
repnz
pop
pop
mov
ret
push
dec
add
in
pop
sub
rorb
push
aad
mov
mov
xlat
dec
hlt
test
sub
pop
add
popa
imul
xor
outsl
rorl
sub
mov
gs
roll
xor
leave
aaa
or
mov
pop
adc
popl
aas
and
mov
outsb
jmp
mull
cltd
pusha
ds
lret
cld
and
sub
add
mov
or
rorb
mov
mov
mov
iret
insl
sub
add
repz
jae
lcall
mov
rolb
dec
adc
jbe
or
push
push
push
ret
dec
inc
add
add
jp
aaa
sbb
mov
daa
sbb
adc
test
out
fsts
sub
js
repz
rclb
data16
add
add
mov
flds
mov
push
cwtl
orb
icebp
fldl
add
sar
add
aam
add
jmp
add
fisttpll
cmp
jno
sahf
gs
mov
jo
add
mov
jns
fadds
arpl
hlt
inc
push
push
add
add
xchg
dec
add
movsl
mov
scas
add
push
xor
iret
and
push
mov
cmc
jge
mov
mov
cmp
jo
add
add
inc
mov
jl
into
push
xlat
add
orb
repnz
xor
loop
push
xlat
add
sub
outsl
push
ljmp
add
jmp
insb
jnp
loope
add
pop
pop
aas
rolb
add
xchg
pop
mov
rolb
scas
xchg
data16
jecxz
add
call
cmp
mov
data16
lea
stc
jge
add
dec
inc
nop
aad
sbb
mov
xor
int
pushf
xchg
sbb
add
out
insl
leave
cmp
cmpsl
out
jmp
shlb
fcomps
cmpsl
aaa
imul
stos
outsl
xchg
cmp
jo
cwtl
add
or
mov
das
jp
cmpsl
pop
lahf
adc
add
mov
je
jno
gs
das
sbb
mov
push
pop
jle
push
add
cmc
mov
sbb
bswap
mov
ds
mov
cmp
mov
add
imul
sbb
add
out
mov
jge
ret
notl
xchg
mov
sbb
pop
xlat
cmp
jg
mov
jns
add
pop
add
inc
jle
xor
adc
cld
xchg
cmp
xchg
sbb
ljmp
ret
mov
mov
filds
lcall
add
lahf
out
add
cltd
gs
pop
mov
sub
andb
ficoml
icebp
sub
shrl
cltd
lahf
xchg
sub
jmp
inc
bound
or
addb
or
lea
add
add
mov
adc
in
inc
xchg
pop
add
jle
lods
cmp
add
jb
dec
push
movsb
lret
daa
jl
sub
sbb
jl
int
nop
repz
jns
lret
or
pop
mov
and
add
push
add
rorb
or
xor
sub
add
scas
pushl
cltd
jmp
int
rclb
das
adc
fneni(8087
or
xchg
and
movsl
cmc
cld
inc
add
jbe
xchg
xchg
lea
lcall
subb
adc
rolb
addl
add
add
cli
mov
cmp
mov
add
enter
clc
mov
gs
stos
adc
int
in
xor
ja
add
mov
into
test
inc
xor
cmp
cmpsb
xchg
cmpsb
and
cli
mov
add
lea
jmp
lcall
dec
fcmovu
adc
cmp
or
and
lds
fwait
sub
adc
movsl
sub
inc
mov
inc
lret
dec
inc
add
hlt
roll
xchg
es
out
sub
sub
push
xor
inc
add
test
pusha
je
cs
or
xchg
addl
or
in
orb
test
jb
pop
mov
jae
sub
add
or
mov
add
add
and
sbb
mov
fcomps
add
sahf
sub
iret
inc
mov
sub
inc
xor
push
or
fwait
jmp
in
fwait
scas
pop
add
icebp
sti
and
dec
add
push
sbb
shlb
movsl
inc
and
add
mov
add
jne
fstl
les
aas
or
cmp
hlt
mov
mov
ljmp
lea
and
push
fwait
stc
dec
lds
mov
rclb
pusha
add
sbb
lcall
xor
mov
ja
add
cmpsl
sbb
xchg
push
add
arpl
and
push
add
push
ljmp
sbb
jp
push
sub
lock
xor
cmp
xchg
add
pop
sti
add
repz
mov
repz
cs
jns
adc
int
push
cmpsb
mov
add
inc
jmp
cli
dec
mov
add
lods
in
sub
mov
sti
fbstp
sub
fsubrp
xchg
push
and
aad
xor
fadd
jnp
xlat
ss
inc
es
aas
ja
sbb
and
xchg
or
fsub
stos
xchg
mov
jne
jne
inc
out
inc
sub
dec
cltd
xor
jno
ds
push
inc
push
popa
push
in
add
or
or
enter
arpl
fstl
dec
cmpsb
or
lret
mov
add
shlb
jmp
aas
ss
mov
movsl
mov
mov
andb
add
in
sbb
and
inc
ss
pusha
jecxz
lahf
jnp
in
movsl
int
cmp
add
cwtl
or
test
decl
push
das
lock
lods
add
sbb
std
add
testl
loopne
out
lods
sub
sbb
mov
lock
idivb
dec
inc
movsl
and
adc
int3
dec
outsl
and
mov
xor
mov
pop
inc
pop
xor
jmp
xchg
ja
imul
mov
dec
mov
in
xor
xchg
test
scas
push
push
dec
sti
sbb
mov
stos
arpl
cmpsb
in
scas
ljmp
pop
int
scas
fistps
or
add
sete
pop
dec
in
es
flds
add
pushf
pop
outsl
jb
add
mov
cwtl
filds
cmpsl
mov
sbb
push
push
iret
jo
in
add
sahf
call
and
jl
jg
sbb
imul
add
pop
aas
or
pop
sub
add
pop
mov
xor
xor
pop
lahf
dec
out
scas
xor
pushl
cmp
xor
inc
push
cmc
push
shrl
movsl
std
jae
mov
xchg
pop
mov
out
into
lcall
enter
xlat
pop
sbb
ret
popa
and
lea
js
pushf
xchg
jmp
mov
leave
jne
add
mov
int
daa
loop
adc
sub
in
pushf
imull
test
sahf
sahf
pushf
add
fs
mov
add
sar
add
mov
stos
js
pop
cmp
jp
mov
push
add
hlt
jo
rcl
xchg
pusha
adc
insb
xchg
pop
addr16
and
lds
inc
fistps
clc
clc
pop
cmp
cli
imul
mov
dec
lret
pusha
cmp
mov
aad
out
mov
add
pop
outsl
or
pop
mov
adc
jno
dec
aad
mov
push
dec
mov
out
adc
decb
add
push
xchg
push
aad
xor
xchg
mov
bound
stos
hlt
xchg
clc
sti
insb
and
mov
sub
scas
rclb
fidivs
orl
lcall
roll
jne
add
mov
sahf
jecxz
ret
mov
in
sub
mov
icebp
ret
stos
xchg
xchg
fildl
mov
xchg
loop
sbb
loopne
popa
cmp
inc
add
add
adc
mov
aaa
in
add
jne
cmpsl
out
push
add
sbbb
into
or
jg
xor
lods
incb
lret
mov
cwtl
das
int3
mov
inc
into
sub
lods
das
jb
movl
aam
test
das
cmp
loopne
cmpsb
jle
or
or
movsb
clc
dec
loopne
xchg
lea
jl
and
push
mov
mov
repnz
jns
inc
add
push
jne
cmp
add
sbb
adc
mov
movsb
gs
hlt
pop
popf
pop
fisubrs
test
scas
lret
mov
add
push
mov
dec
leave
cld
pop
cs
ds
sub
add
pop
mov
pop
out
add
sarl
inc
lock
jmp
leave
add
add
das
or
mov
jns
xchg
aam
xchg
mov
or
stc
jo
ja
adc
scas
imul
and
pusha
cli
jg
xchg
lods
outsb
nop
loopne
add
lods
mov
and
fists
lea
sub
jne
and
sbb
sub
in
mov
imull
sub
cvtpi2ps
cmp
lock
jge
push
ds
clc
xchg
aam
push
js
hlt
dec
in
insl
test
jg
je
mov
cmc
jb
push
adcb
shll
mull
dec
add
rcr
lods
xchg
cmp
aas
cmp
cmp
insb
std
ljmp
popf
decb
or
inc
pop
outsb
sub
out
pop
lds
cmpsl
test
loopnew
aaa
in
aam
scas
testl
xor
mov
cld
aaa
jb
sub
scas
and
es
mov
mov
sbb
dec
pop
cmp
inc
xchg
xor
dec
daa
jnp
scas
xchg
or
dec
cmpsb
inc
xor
mov
movsb
fildl
xchg
int
fs
ljmp
cmp
cmp
mov
pushf
fisubl
stos
jbe
or
nop
data16
lea
dec
int
mov
add
push
jecxz
mov
scas
shlb
fmuls
fdivrl
and
sub
add
xchg
in
cmpsl
or
lods
xlat
pop
xor
sbbl
cmp
mov
gs
lods
xor
lret
arpl
xlat
rcrb
sti
aad
dec
test
add
cvtps2pd
cmp
xchg
call
ret
cmp
call
jecxz
lods
das
add
mov
cwtl
xchg
fildl
sahf
shrl
cmp
arpl
push
adc
push
push
cld
inc
arpl
lahf
aaa
mov
test
lahf
popf
push
fs
pop
dec
xchg
movsl
pop
add
mov
mov
adc
add
sub
inc
std
pop
xor
adc
lds
in
sbb
out
push
mov
sbb
ret
cmpsb
push
dec
rolb
outsb
jp
cmpsb
aam
pop
test
inc
sti
fwait
out
adc
sub
cs
push
xchg
mov
ljmp
movsl
imul
sub
xchg
push
stos
cmc
aad
frstor
dec
jbe
dec
push
sub
inc
rol
pop
scas
and
cld
mov
mov
call
lret
pop
setns
jo
jnp
aad
sub
addr16
xor
movsb
stc
notl
fdivrs
mov
pop
dec
push
cmp
dec
sarb
aam
into
std
enter
pushf
iret
add
mov
push
and
cmpsb
pop
nop
jb
mov
outsl
xlat
mov
jl
arpl
mov
fwait
clc
cmp
ud0
or
pusha
test
outsb
loopne
xchg
cmp
sub
das
mov
fsubl
mov
xchg
out
inc
les
mov
add
dec
leave
fcomps
imul
push
xlat
mov
pop
cmp
frstor
dec
sbb
rcll
mov
push
addr16
int
inc
fwait
jp
or
push
xchg
stos
add
mov
jo
dec
pop
into
out
cmp
scas
ret
std
outsl
jle
jle,pn
clc
flds
insl
cmp
inc
sbb
pop
sbb
jb
push
call
jecxz
fistpll
dec
or
out
adc
cs
ljmp
mov
jno
dec
shrl
push
mov
stos
dec
sbb
sbb
aam
pop
pop
add
mov
pushf
sbb
mov
lea
icebp
push
cmp
mov
sbb
inc
xchg
cmp
stos
push
add
and
lea
test
shl
pop
call
rorl
cs
xchg
lret
stos
mov
icebp
repz
inc
add
add
mov
add
aaa
and
aam
push
add
lock
nop
and
add
ja
hlt
add
mov
jle
fwait
shrb
xor
and
jae
adc
sar
add
xchg
cmp
mov
lods
add
into
das
fiaddl
adc
mov
int3
enter
out
ss
pop
lea
inc
add
add
cmpsb
add
outsl
fidivl
mov
bound
fstpl
adc
lret
pop
push
add
mov
in
lea
or
add
mov
int
int3
stc
add
mov
jecxz
add
pop
add
outsl
add
push
repz
mov
mov
add
gs
jae
shlb
add
pop
dec
dec
push
scas
pop
xchg
add
sbb
daa
add
add
inc
sti
scas
ret
add
sahf
mov
cmpsb
rorl
add
add
aam
inc
push
sbb
imull
fiadds
xor
cmp
add
int3
lea
orb
sbb
jno
cmpsb
push
push
xor
loope
add
test
add
iret
dec
add
and
push
imull
rolb
repz
jle
pop
int3
add
aas
inc
cwtl
cmp
pop
imull
imul
add
push
sbb
loopne
mov
add
add
aaa
cmpsl
rcrl
lret
aas
jl
dec
sbb
add
sbb
add
je
fs
add
inc
inc
add
fisttpll
in
and
jno
imul
rorb
pop
pop
lcall
add
stos
add
imul
inc
mov
int
push
pop
std
lods
ret
add
jge
cmp
pop
imul
xchg
je
movsb
aad
inc
xor
dec
in
xor
mov
mov
dec
imul
roll
adc
roll
inc
jnp
add
cmpsl
push
jns
insl
jbe
push
sahf
stos
popa
lret
js
cmp
sub
sbb
lcall
pop
outsl
add
std
push
lahf
pop
lahf
jle
repz
or
and
add
pop
push
jmp
lea
sbb
add
sbbl
add
cwtl
test
mov
scas
sbb
insb
dec
lcall
or
fldt
js
jo
sahf
xchg
sub
jno
aad
push
or
adc
aas
popf
cli
push
and
xchg
add
mov
out
jne
outsb
xchg
in
push
mov
push
fiadds
cmp
mov
xchg
es
mov
iret
dec
cmp
push
dec
arpl
add
or
rcr
dec
pop
out
or
adc
ja
xor
cmpsb
scas
push
insb
addr16
ljmp
scas
gs
inc
pop
dec
mov
out
xchg
gs
sbb
bswap
mov
cmpsl
xchg
ret
cmp
push
xchg
fwait
dec
iret
pop
in
add
jnp
lret
or
jns
add
add
sbb
mov
ja
mov
mov
data16
jnp
inc
inc
daa
ret
cmpsl
mov
mov
add
and
xchg
jmp
and
jl
inc
insb
sbb
push
out
add
sub
push
stc
ret
xor
stc
lret
or
lea
xchg
mov
into
cs
mov
cwtl
mov
cmp
xchg
pop
cmc
and
add
mov
cli
fidivl
xchg
enter
bound
pop
rcrl
inc
imul
push
sub
mov
ret
in
add
add
test
outsb
icebp
add
pop
mov
xchg
cmp
push
push
and
push
or
inc
or
imul
movsl
add
scas
add
jns
sbb
into
pusha
mov
clc
je
dec
mov
ss
push
not
fcos
mov
mov
loopne
xlat
lods
cmc
popf
inc
mov
call
iret
push
rcrb
and
sbbl
shlb
lea
shll
push
movsl
xchg
test
cmp
inc
jge
cmp
add
orl
pushf
outsb
jns
int
mov
sub
xchg
inc
pusha
add
ja
into
test
pop
xchg
mov
jae
insl
push
inc
sub
mov
dec
and
shll
int3
stc
es
or
push
mov
lds
inc
rolb
cmp
add
filds
lret
lea
push
inc
push
push
add
movsb
imul
mov
xlat
pop
cld
cmp
cmc
rcrl
adc
shrb
icebp
mov
xor
fistpl
jl
mov
push
insl
xchg
push
sub
in
add
jno
es
enter
add
scas
es
pop
nop
push
add
mov
push
jmp
ljmp
inc
mov
imul
lds
in
int
xor
loop
inc
arpl
push
lea
rcrl
cs
cli
shr
dec
fnstenv
data16
adc
xchg
addl
iret
icebp
inc
rcrb
mov
and
pop
lods
loop
add
sahf
push
push
imul
adc
ljmp
inc
aas
jl
adc
call
dec
bound
adc
in
pop
sbb
or
mov
lahf
fmuls
add
add
xor
or
rcrl
pop
addb
test
pop
repz
add
aaa
out
fwait
pop
pop
daa
add
subb
add
stc
into
add
ss
mov
loope
mov
xchg
fsubrl
fildll
add
mov
dec
push
scas
push
xchg
out
mov
push
in
sub
sarl
sub
ret
jmp
movsb
in
js
push
mov
std
insl
inc
lea
lods
dec
shlb
pop
ljmp
sbb
call
mov
setae
mov
aaa
rcrl
sbb
mov
outsb
inc
xchg
adc
cwtl
int3
add
add
popf
lock
push
mov
xchg
mov
std
das
jl
out
sbb
sbb
call
shlb
fistps
pop
mov
stos
add
jne
fldz
stos
movb
xor
insb
add
incl
rorb
add
or
mov
cmpsl
lahf
dec
add
pop
cmc
sahf
inc
into
andb
or
call
iret
push
not
jae
and
loopne
jbe
mov
cld
ret
frstor
add
ds
in
add
jecxz
jne
and
mov
shrb
in
ret
pop
pusha
mov
mov
in
out
pop
in
jbe
ficompl
lods
inc
add
incb
xor
sbbb
jnp
or
decb
add
inc
leave
jno
fiadds
je
sub
test
test
ja
data16
das
pop
cmpsb
and
pop
or
sub
data16
cld
aam
dec
adc
adc
pop
les
iret
mov
mov
xchg
jnp
or
push
lods
jmp
sub
mov
cs
add
xchg
push
pusha
dec
add
push
push
mov
scas
jl
dec
xchg
call
xchg
icebp
aad
jp
test
xchg
rorl
es
mov
in
pop
dec
ret
add
sahf
scas
mov
verr
fistl
or
stos
loopne
aas
mov
xor
cli
mov
xchg
lcall
outsl
insl
cmc
mov
pop
push
aaa
mov
negl
sbb
int3
cwtl
aaa
sub
xorb
xor
fimuls
sub
xor
xchg
out
sbb
push
int
cmc
ja
insl
testl
inc
xor
or
ret
xchg
xchg
cmpsb
add
loop
push
adcl
cmpsb
push
ss
mov
pushf
rorb
push
imul
sbbl
aas
int
add
mov
nop
add
xor
insl
mov
mov
mov
mov
into
sarl
add
adc
inc
adc
into
cmpsb
lds
push
mov
xchg
lret
lea
in
dec
icebp
aaa
fildll
mov
xlat
jne
iret
xchg
test
adc
inc
jno
add
int3
lods
leave
cwtl
mov
add
jp
into
mov
stc
mov
pop
mov
movsb
sbb
sbb
or
daa
add
dec
and
iret
xchg
or
mov
cmpsl
ror
mov
outsb
push
add
jnp
jb
add
loope
imul
ljmp
sbb
mov
jb
nop
push
adc
insl
and
add
adc
stos
shl
lret
jecxz
mov
add
inc
adc
add
sahf
pop
dec
add
cmp
fwait
sub
ja
dec
call
leave
jle
inc
je
jle
sub
popf
fldcw
jl
mov
ret
cmc
cmp
push
add
sbbb
js
clc
out
cmp
or
shrb
fwait
aad
add
adc
pop
je
xchg
jmp
iret
cmpsl
cmpsl
mov
jmp
push
cmpsb
scas
inc
nop
and
mov
sub
mov
aad
mov
mov
xchg
rcrl
imul
mov
in
fcomp
xor
mov
mov
mov
mov
roll
fstps
pop
sbb
mov
in
and
mov
xchg
addr16
pusha
lret
mov
rclb
and
in
lea
mov
iret
cmp
fsub
sub
mov
adc
xchg
and
mov
iret
dec
pusha
inc
iret
dec
inc
rorb
mov
xchg
cmc
pop
xor
xchg
dec
push
push
imul
push
cmpsb
cmp
sub
iret
aad
mov
mov
mov
shlb
push
loopne
cs
mov
sub
dec
xor
mov
iret
dec
xchg
or
jno
lcall
add
fcmovbe
pusha
out
ja
icebp
sbb
jmp
mov
sub
data16
gs
mov
and
lret
inc
jge
jb
cmc
and
daa
ror
mov
pop
jp
in
scas
dec
mov
mov
sbb
pop
out
push
outsl
daa
mov
repz
test
stc
xchg
xor
xchg
add
or
inc
call
push
dec
dec
or
inc
mov
push
lods
scas
insl
inc
adc
dec
sub
mov
pop
in
popa
sub
dec
xchg
inc
movb
fists
sbb
pop
or
fadds
pop
jmp
inc
dec
push
adc
inc
ss
add
sub
mov
push
jg
scas
addb
int
add
adc
or
into
adc
mov
or
pop
jle
in
adc
cmp
sbb
sbb
jbe
add
mov
dec
jnp
in
jmp
inc
jg
and
mov
scas
rcll
and
dec
push
mov
mov
sub
test
int
enter
repz
out
fiadds
mov
xchg
test
lds
dec
bound
jnp
repz
add
orb
dec
sbb
out
ja
adc
in
inc
mov
sub
add
add
out
mov
stos
add
movsb
cmp
push
fidivs
inc
add
pop
pop
out
dec
sbb
xorb
pop
shlb
das
inc
lahf
xchg
push
mov
mov
push
or
insb
pop
popf
and
test
test
mov
andl
add
mov
lds
sub
dec
add
mov
loopne
dec
jmp
divl
xor
mov
in
leave
mov
insb
adc
aas
rcrb
add
clc
bound
push
fisubl
mov
add
xchg
pop
xchg
je
lods
mov
insl
jne
cli
iret
test
pop
int
add
sub
test
scas
mov
dec
mov
mov
fidivrl
push
outsl
cld
pushf
cmp
fidivl
sbb
dec
iret
cmc
shl
adc
imul
mov
pop
sub
sub
in
cmp
loopne
loope
mov
lret
jecxz
adcl
or
adc
add
imul
xor
add
and
xchg
sbb
add
inc
and
pop
xlat
add
pop
push
xchg
add
in
ljmp
add
cmp
push
pop
pop
popf
push
lcall
add
xchg
mov
mov
dec
leave
dec
out
add
add
sbb
add
imul
add
or
add
add
xor
pop
xor
dec
or
filds
iret
dec
add
lea
mov
add
push
movsl
mov
out
add
scas
mov
in
dec
fs
or
push
mov
fnstsw
adc
or
add
fiadds
push
pusha
fwait
add
inc
ror
add
rcr
lods
sbb
lods
jecxz
dec
add
or
fstps
cltd
nop
and
imul
insl
push
jbe
xor
mov
xchg
add
ja
sti
gs
outsl
xchg
or
sbb
popa
pop
inc
aam
insl
inc
das
pop
cmpsb
test
imul
and
shl
out
add
cltd
push
ljmp
cwtl
push
in
in
mov
das
or
add
push
nop
jbe
lods
in
roll
hlt
cli
std
sahf
loope
les
addl
fcoms
mov
ljmp
push
pop
push
sbb
gs
inc
mov
cmc
out
mov
shlb
roll
ret
push
ret
pop
cmp
mov
add
movsl
ficompl
ret
scas
fldenv
movsb
add
inc
cmp
arpl
inc
add
jmp
es
fwait
cmpb
add
cmpsb
or
add
mov
cmp
addr16
in
pop
addb
add
xor
xchg
sbb
add
fstpl
lret
stos
sub
and
cwtl
pop
data16
and
je
mov
pop
sbb
dec
sub
xlat
or
mov
and
add
xchg
pop
lcall
inc
sub
aaa
outsl
push
loop
mov
hlt
pop
mov
sbb
pop
and
lock
js
insb
or
shl
fsubp
inc
cmp
test
mov
sbb
add
ret
das
daa
das
loopne
add
inc
clc
mov
fsubrl
fisttps
aas
cmp
push
sbb
loope
mov
pop
pop
ret
iret
mov
fisubrl
subl
cld
cli
lahf
dec
or
in
aam
roll
xchg
mov
add
dec
movsl
repz
mov
notb
or
add
xor
add
lahf
pop
push
adc
mov
pushf
lret
mov
adc
outsb
stc
push
mov
or
fcoms
lret
mov
imul
pusha
in
jg
or
data16
push
mov
addl
cli
push
mov
sahf
adc
dec
mov
add
add
je
fwait
movsb
sub
call
dec
rolb
jo
shlb
add
inc
dec
mov
ja
add
jns
add
fs
jp
inc
jle
mov
call
testl
shrl
scas
sbb
add
push
sahf
mov
ficomps
pop
hlt
stc
mov
jge
mov
test
mov
int3
sub
pop
leave
or
scas
call
fisttpll
subb
gs
add
xchg
inc
inc
in
add
das
xchg
mov
int3
xchg
push
add
cwtl
cmp
mov
scas
pop
inc
loop
pusha
push
fwait
imul
enter
scas
xor
pop
add
bound
sub
mov
shl
fwait
mov
add
pop
dec
dec
adc
movsl
mov
mov
scas
push
outsl
add
mov
add
cmpb
cmp
adc
imul
sub
imul
add
add
cmp
jge
dec
add
mov
dec
adc
and
lods
xchg
out
lahf
push
xor
dec
jmp
mov
xchg
scas
mov
pop
addr16
bound
add
into
ret
lock
or
into
lcall
sub
aas
pop
lret
cmp
add
sbb
dec
add
sti
les
in
out
push
push
in
ds
lret
adc
andb
push
add
push
mov
dec
cli
xchg
dec
add
orb
int
inc
sub
ficoms
shr
negb
imul
pusha
jp
arpl
pusha
stos
stc
lcall
shll
hlt
fbld
and
insl
add
inc
mov
mov
jae
add
adc
push
mov
xchg
scas
inc
cmp
dec
rorl
stc
cmp
adc
or
stos
in
mov
iret
sbb
mov
and
or
iret
jmp
pushf
jne
adc
push
or
out
stos
int
aad
cltd
int
dec
leave
sub
nop
jmp
ret
inc
and
add
mov
inc
add
add
scas
dec
pop
lds
insl
jns
scas
cmpsb
inc
push
cwtl
adc
dec
outsl
nop
lock
inc
fcoms
push
stos
loope
lock
xchg
cmp
push
or
aad
mov
sbb
jge
xchg
stos
test
iret
add
arpl
jecxz
pop
adc
ret
inc
jno
mov
icebp
push
jge
imul
cmp
pop
add
testb
sbb
cmp
dec
scas
inc
jo
mov
lret
test
mov
mov
flds
xchg
cmpsl
mov
xchg
lods
lret
and
scas
xlat
add
fnsave
dec
clc
pop
nop
or
loop
or
mov
add
pop
xchg
adc
dec
es
xor
dec
sahf
imul
jnp
cmpsl
in
cmpsb
shll
rol
mov
loop
jo
lret
int
ljmp
or
add
iret
into
add
cwtl
sub
jae
scas
xchg
lret
pop
adc
lret
das
inc
fdivl
inc
add
out
sub
mov
hlt
sti
and
inc
out
xor
lahf
push
and
push
push
xor
push
dec
imul
int3
inc
divl
jo
fstpl
into
xchg
pmaxsw
dec
sbb
adc
call
inc
lods
cmp
sub
in
in
scas
out
sub
in
and
adc
pop
add
add
int
xchg
inc
add
out
pop
inc
adc
xor
add
sub
xor
add
push
sub
fldt
fsubr
insb
das
pop
mov
and
pop
ficomps
jmp
sarl
jmp
dec
push
or
in
outsb
pop
popa
inc
xchg
xchg
fstpl
stc
into
ds
imul
sbb
maxps
xchg
lods
dec
in
inc
in
pushf
aas
add
jo
movsl
pop
insb
xlat
mov
mov
add
enter
mov
cs
pop
lds
jmp
nop
cwtl
pop
ficomps
push
sub
push
pop
lds
xor
lahf
lret
or
repz
sbbl
rolb
or
jae
aaa
pusha
push
mov
push
add
push
fildl
ljmp
jae
je
push
add
arpl
pop
dec
pop
mov
sub
fisubrs
fwait
jb
add
and
pop
pushf
jle
pop
sbb
mov
jp
mov
imull
push
cmp
cmp
xor
mov
mov
xchg
xchg
inc
push
add
nop
adc
sbb
int3
mov
and
notl
mov
add
insb
nop
out
jae
push
add
outsl
mov
mov
in
jno
push
cmp
mov
sub
inc
or
and
lock
cmp
icebp
mov
hlt
sti
movsb
or
ret
scas
pop
jp
or
fimuls
mov
cli
sbb
add
push
in
push
jg
mov
dec
lock
test
iret
es
aas
jle
mov
cs
pop
call
orb
and
push
sar
pop
cmp
divl
and
clc
loop
sub
mov
add
add
imul
lret
ret
lods
mov
subl
lcall
xor
pextrw
mov
std
mov
dec
cmp
outsb
les
mov
xchg
add
addl
imul
cmp
push
pop
jp
out
xor
dec
lahf
ljmp
insb
mov
rcll
pop
push
add
jg
push
lods
mov
cmp
into
cmp
insl
sbb
mov
push
mov
inc
ja
pop
or
push
in
imul
mov
mov
sub
push
lcall
cmpsl
jo
nop
out
pop
int
pop
adc
mov
imul
xlat
xchg
mov
outsb
pop
pop
push
or
pop
mov
jbe
cwtl
xchg
add
out
and
pop
inc
sets
rcrb
test
subb
rclb
or
dec
jnp
out
add
xlat
dec
cwtl
scas
sbb
mov
mov
sti
sbbb
push
inc
es
jo
jb
push
mov
idivl
mov
dec
popf
and
mov
jmp
push
sbb
pop
add
mov
loope
jmp
push
cmp
call
std
adc
add
sub
repnz
lea
dec
add
pop
and
cmp
mov
jno
mov
cmp
ja
and
mov
dec
std
jge
inc
pop
jb
orb
jmp
lods
or
hlt
loope
add
cmpsb
pop
fwait
push
lret
cmp
add
sub
adc
mov
add
push
mov
dec
jg
adc
pop
aad
push
pop
int
sbb
mov
mov
or
out
insl
sti
cmpsb
push
je
data16
inc
mov
and
fnsave
scas
sbb
pop
cli
add
shlb
cwtl
rcrl
in
lods
pop
sbb
aam
mov
dec
mov
jl
jb
jle
add
and
dec
aas
mov
add
icebp
or
add
sbb
add
inc
mov
and
mov
bound
je
std
bound
add
je
fisubs
add
aaa
cs
popf
out
dec
setle
pop
in
sub
pop
stos
mov
or
into
inc
sbb
xchg
das
js
mov
xor
decl
call
mov
mov
xchg
sbb
add
enter
fadds
inc
mov
mov
push
fistpll
test
mov
mov
inc
cld
jo
fucomp
test
rcl
pop
sub
or
push
ds
je
or
repz
add
push
loop
pop
cmp
push
jno
stc
repz
xchg
add
ficoms
push
fnsave
jmp
dec
leave
into
pop
add
adc
sub
add
movsl
mov
sahf
and
int3
aam
xchg
mov
cmp
xor
jbe
dec
daa
sub
rol
mov
jle
ljmp
adc
add
jecxz
sub
scas
lret
add
mov
fimuls
push
lcall
fistpll
mov
adc
or
in
pop
and
xor
jb
loopne
pop
clc
loope
shr
stc
sbb
mov
pop
mov
dec
or
ds
add
rcl
jnp
cmpsl
mov
wrmsr
cwtl
pop
mov
stos
xchg
xor
pop
cld
mov
out
sbb
add
gs
push
inc
lahf
clc
iret
jl
jno
clc
test
and
sub
loope
push
xchg
mov
dec
adc
mov
loopne
std
and
cmp
sbb
stos
push
and
add
test
mov
xchg
fs
popa
sub
add
sub
movsb
adc
add
out
lods
aam
addl
add
scas
cmp
pop
sahf
fnsave
fistl
jg
jae
mov
add
inc
mov
add
mov
dec
xchg
movsl
add
mov
rorb
into
inc
es
add
add
ljmp
and
imul
mov
add
inc
mov
adc
mov
leave
test
push
mov
clc
add
call
sbb
cs
stos
popa
or
push
sub
jns
mov
fdivrs
push
push
mov
mov
sub
add
aaa
push
mov
push
mov
mov
add
mov
push
repnz
jae
and
or
xchg
gs
add
push
testl
jle
add
into
outsl
jo
mov
dec
dec
pusha
add
lret
dec
ret
or
mov
addb
mov
outsb
test
cmpsl
add
scas
cmp
mov
mov
in
sahf
int3
add
aaa
sbb
ds
sub
add
popa
xchg
icebp
repnz
adc
fsubrl
cmp
cwtl
dec
sbb
cmp
add
adc
add
push
cmp
mov
pop
lcall
in
add
scas
fiadds
xchg
cmp
dec
jge
dec
enter
or
out
pop
mov
push
jecxz
jbe
stc
or
add
mov
push
imul
xchg
mov
push
or
repnz
and
jle
jg,pn
pushf
lret
push
test
mov
arpl
imul
jnp
inc
add
sub
add
scas
and
outsb
dec
pop
iret
cltd
fwait
xchg
and
loop
inc
insb
sbb
int
add
add
lea
sub
mov
outsl
aam
or
mov
adc
out
shr
bound
mov
or
sub
add
movsl
outsl
repnz
or
addr16
sub
inc
lods
sub
jb
fisttps
add
imul
icebp
scas
out
cmp
in
rolb
call
scas
add
sbb
cs
int
clc
dec
add
add
and
pusha
in
inc
xlat
lahf
rcll
pop
add
add
xlat
mov
push
push
sahf
inc
movsl
jno
xor
ret
stc
jg
xchg
add
inc
loope
cmpsb
fwait
lea
or
outsl
push
in
inc
loop
add
call
sub
add
push
sahf
outsl
xchg
in
mov
ljmp
adc
lds
dec
mov
sti
loope
lahf
mov
lock
adc
ret
hlt
inc
sub
and
jmp
scas
jecxz
pop
or
in
cmp
lods
adc
push
add
add
pop
popa
add
insl
xor
jle
mov
push
dec
fcoms
cmc
jo
mov
sub
xlat
mov
add
inc
dec
jg
mov
and
fdivrl
ret
idivl
and
mov
push
outsb
loope
dec
xlat
adc
jb
jmp
mov
xor
fs
adc
stos
mov
add
mov
push
mov
add
mov
pop
add
movsb
pop
adc
add
xchg
sub
int
xor
mov
movsb
pushf
loope
fisttpll
mov
lods
inc
push
ret
mov
in
xchg
stc
add
xor
scas
add
icebp
push
inc
dec
into
scas
arpl
mov
fisttpl
mov
cmp
fadds
mov
cmpsb
and
cs
dec
lahf
jg
pop
out
lcall
mov
or
add
pop
lret
sub
mov
frstor
add
andl
insl
mov
sbb
mov
pop
clc
jnp
lret
and
leave
cmp
sub
dec
xchg
push
mov
orb
push
jmp
inc
and
xlat
repz
push
stc
out
cmp
sti
sbb
movsl
inc
shl
data16
in
or
outsl
xor
xchg
faddl
sarb
les
jp
repnz
outsb
sbb
add
cmp
je
aas
xchg
lret
push
cs
push
or
out
aas
mov
das
out
enter
or
pusha
sysexit
mov
dec
sahf
cmp
int3
cs
add
lods
cmp
add
push
dec
add
jo
jnp
out
lods
mov
adc
popa
icebp
lods
add
lea
sbb
jecxz
leave
inc
xchg
ret
mov
pop
bound
outsl
test
divl
sarl
mov
repz
js
sbbb
aaa
fstpl
pop
push
mov
ror
out
shr
dec
hlt
stc
loopne
mov
mov
xor
lahf
lds
insl
sub
dec
jae
cmpsb
int3
test
fdivrs
mov
dec
add
addr16
frstor
aas
call
movsl
fiaddl
lea
call
pop
pop
sub
mov
popf
rclb
std
dec
dec
inc
mov
outsl
sub
imul
pop
mov
mov
pop
enter
popa
dec
pop
leave
scas
inc
movb
jae
pop
ds
decl
inc
std
mov
repnz
adc
outsb
inc
call
pushw
int
inc
in
mov
push
add
movsb
or
leave
dec
movsb
pop
int3
popa
repz
adc
lret
int
in
xchg
cmpsb
push
shl
push
in
xchg
mov
test
popa
mov
adcl
aam
repnz
ja
jg
sub
ret
idivb
mov
lods
in
leave
or
mov
gs
aas
pop
in
pop
or
sub
dec
imul
mov
add
mov
iret
xor
adc
out
scas
addr16
repnz
scas
jne
test
xchg
adc
jb
pmaxsw
add
and
jae
lret
jle
fadds
cmc
imul
add
xchg
push
add
and
das
arpl
cmc
scas
mov
xchg
pop
mov
inc
in
dec
inc
loopne
push
xor
dec
int
repnz
or
mov
push
sub
pop
adc
lea
lods
add
movsl
push
and
add
add
mulb
add
sub
pop
mov
mov
add
ja
or
fisubs
add
enter
fsub
cmp
aam
or
lods
sbb
std
jmp
lret
adc
popa
daa
adcl
pop
add
call
mov
daa
xor
cmc
mov
cld
addr16
mov
in
mov
subl
ss
test
xchg
xor
sub
sbb
mov
sbb
inc
shll
add
mov
jge
daa
imul
cli
jnp
pop
sbb
mov
push
pop
fwait
enter
jmp
cmp
das
arpl
outsb
push
mov
push
jle
dec
xchg
jb
xorb
xor
mov
and
push
sbb
add
jecxz
jns
arpl
cli
mov
mov
or
push
sbb
rcl
lock
mov
mov
push
das
scas
xlat
clc
sbb
adc
lret
fs
in
jecxz
sub
std
or
fidivrs
adc
cli
rorb
inc
fidivrs
mov
or
imul
add
add
xchg
in
dec
mov
rcr
ret
mov
rolb
inc
pop
pop
add
add
inc
test
fs
cmpsl
jnp
push
or
xor
mov
jg
das
rcrl
pop
test
sbb
mov
add
xor
pop
fwait
cmpsb
scas
jle
sub
add
dec
inc
ret
add
dec
cld
push
es
mov
dec
ficomps
sti
and
jle
jmp
cmpb
add
adc
cli
int
or
xlat
arpl
outsb
inc
es
push
jb
pushf
dec
ret
test
add
test
mov
imul
cmp
mov
and
sub
rcrb
mov
addr16
xor
dec
aas
jnp
gs
into
dec
xor
sub
mov
add
or
mov
mov
fwait
push
push
iret
mov
add
in
out
jmp
jp
lret
pop
xchg
dec
sub
js,pn
sub
in
jmp
sub
push
leave
mov
pop
insl
mov
xor
add
out
xorl
add
test
pusha
test
lcall
sahf
inc
sarb
out
xchg
pusha
rorb
push
xchg
hlt
jmp
std
dec
leave
out
mov
add
outsb
pushf
es
out
inc
icebp
jmp
mov
repz
pop
mov
clts
mov
mov
int
xchg
aad
or
pop
call
mov
repnz
out
pusha
and
and
push
stc
cmp
pop
popf
popa
les
outsb
mov
add
clc
and
lret
or
pop
paddsw
pop
mov
insb
cmp
out
in
jg
aas
mov
dec
pmaddwd
mov
cmc
lcall
adc
sub
flds
ficomps
cmp
xchg
stos
lds
mov
pop
int
inc
mov
sarl
pop
adcl
add
push
cmp
adc
mov
test
cwtl
rolb
add
ds
stc
add
daa
mov
xchg
mov
xor
inc
jg
cmp
add
outsb
or
mov
push
std
push
arpl
jns
repz
aam
fildl
jns
lret
or
data16
outsl
addr16
aad
out
mov
mov
dec
loop
das
dec
jge
add
push
pop
je
or
cmpsl
jmp
out
shlb
lock
adc
mov
inc
mov
lret
sub
adc
in
js
mov
mov
pop
mov
xor
add
psllw
or
arpl
dec
in
push
fucomp
pop
orl
mov
fs
arpl
cmp
mov
mov
add
fxch
clc
inc
in
mov
mov
imul
shrl
mov
jg
pop
test
js
mov
jne
shlb
mov
jo
jae
mov
cmp
bound
or
sbb
loopne
pop
test
cmp
sub
loop
lret
xor
fistl
xor
add
mov
das
xor
or
add
loopne
pop
lea
cmpsb
shrb
mov
int3
scas
xchg
add
add
ds
pop
ja
jmp
mov
cmpsb
outsb
jmp
dec
in
out
push
sub
and
add
popa
arpl
popa
push
lret
repz
pop
jmp
or
mov
rcrb
push
in
movsl
std
jnp
jbe
or
shlb
fsubl
in
lcall
add
ss
pop
xchg
test
pop
or
movsb
fisttpll
jo
xchg
add
dec
dec
dec
fistl
dec
sub
and
out
test
test
in
xchg
jnp
and
jmp
add
iret
lret
lahf
je
lret
push
inc
jns
aas
add
jno
and
and
arpl
xchg
mov
icebp
mov
add
pop
push
pop
push
add
lea
arpl
sub
mov
adc
jg
out
outsb
cmp
mov
and
mov
cmc
push
mov
lret
mov
add
fwait
les
pop
mov
jo
pushf
loopne
scas
pop
sub
stc
int3
dec
jge
iret
dec
subl
loop
adc
repz
cmp
push
popf
add
dec
je
cltd
ret
push
divb
mov
mov
sarl
dec
mov
add
stos
push
in
add
sub
es
pop
addl
movsb
bound
push
push
das
jmp
add
pop
and
dec
repnz
mov
push
mov
push
shll
mov
int3
cli
add
pop
inc
adc
inc
bound
nop
add
dec
stos
test
add
add
adc
jae
hlt
xor
xor
mov
pop
es
pop
add
daa
sub
jmp
xchg
rcrb
add
sub
inc
sub
add
lcall
pusha
lock
add
mov
arpl
add
xchg
add
jne
inc
lcall
negb
ljmp
aas
loop
add
sbb
xlat
pop
lret
mov
jl
cltd
add
cmp
sub
cs
movsl
fbld
stos
pop
xor
leave
mov
and
lods
decl
ja
daa
xchg
cmc
call
xorl
and
in
cltd
mov
std
xchg
test
loopne
mov
dec
cmp
gs
outsl
add
mov
aas
pop
add
cmp
inc
out
sarb
cmp
lods
jg
pusha
in
push
insb
pusha
outsl
sbb
movsb
xor
inc
add
mov
cmp
stos
mov
add
mov
lahf
std
inc
push
aam
add
mov
add
or
scas
dec
add
lds
jge
mov
or
add
add
dec
sub
stos
icebp
stos
xchg
popf
adc
pop
inc
in
ja
xchg
jmp
inc
or
insl
sub
int
add
fldenv
loop
mov
imul
sub
ds
aaa
and
loopne
mov
mov
dec
aad
mov
or
andl
std
jecxz
push
jle
mov
mov
out
jae
ss
js
cmp
or
jle
jne
ret
jle
mov
sbb
iret
mov
mov
data16
rorl
movsb
mov
adc
push
sbb
pop
ds
subl
mov
lcall
shll
ljmp
inc
adc
mov
aas
shll
fiaddl
cmp
add
xchg
jo
lret
push
daa
scas
jb
iret
outsb
addr16
sbb
outsl
push
add
popa
addl
int3
mov
and
cmp
test
les
mov
pushf
cmp
xor
dec
leave
leave
xor
lods
jmp
sub
inc
mov
pop
data16
pop
lahf
xchg
push
add
pop
inc
add
movsb
int3
movsb
lret
andl
dec
in
dec
inc
das
add
mov
enter
daa
enter
cmp
adc
insl
xchg
cmp
sbb
sub
rolb
add
pusha
jnp
test
aad
or
jb
add
jle
movsb
sti
push
mov
int3
insb
call
dec
mov
xor
sub
add
ja
loopne
sbb
pop
aas
out
ficoml
fdivs
add
push
sbb
adc
xchg
dec
lea
mov
add
int3
aaa
pusha
jns
inc
fidivs
mov
sub
add
lret
xchg
jmp
dec
aad
stc
neg
fs
mov
stos
mov
push
js
and
aam
adc
daa
or
adc
add
xchg
mov
sub
inc
movsl
add
outsl
lret
add
imul
call
js
insb
mov
xchg
lret
xchg
cli
add
daa
inc
adc
inc
or
sub
mov
subb
sbb
mov
lods
lods
xor
xchg
icebp
mov
add
out
daa
in
add
insb
dec
dec
loop
pop
push
add
add
dec
in
nop
sbb
jle
mov
adc
add
pusha
insb
xor
dec
jnp
ret
roll
fwait
ret
xchg
hlt
mov
loop
jmp
imul
iret
dec
enter
add
sub
inc
add
or
sub
adc
das
inc
mov
dec
imul
mov
aad
pop
aas
imul
inc
adc
mov
mov
adc
dec
add
nop
sbb
inc
jmp
shrb
rol
mov
ds
shl
add
inc
insb
fimull
mov
sbb
insl
push
and
punpcklbw
decb
hlt
rorl
outsl
nop
test
ret
and
push
cmp
insl
inc
cmp
cmp
jecxz
add
test
cmp
fxch
rep
out
popa
mov
xchg
add
lret
or
std
add
in
push
lds
add
ljmp
outsl
in
push
jecxz
mov
mov
pop
add
gs
enter
std
cwtl
scas
stos
xchg
and
and
out
inc
ja
mov
inc
cmp
add
inc
sub
rol
cmp
push
xor
sbb
cmpsb
jge
pusha
incl
pop
mov
dec
or
add
and
test
push
cmp
and
ret
dec
notl
inc
mulb
dec
add
pop
jno
aam
add
hlt
std
fisubs
xchg
pop
inc
add
jmp
add
or
add
in
xor
push
jp
dec
pop
mov
in
pop
mov
inc
je
or
das
adc
adcl
push
shrb
lcall
in
das
or
and
add
pop
aad
fnstcw
daa
loope
xchg
loope
test
or
add
ja
repnz
dec
stos
sub
adc
mov
jecxz
ds
add
or
cmp
dec
mov
pusha
and
push
mov
daa
xchg
mov
and
or
pop
into
add
popa
sub
add
add
enter
mov
fucomp
fstpt
add
or
stc
adc
in
adc
test
and
out
dec
pop
add
inc
cmp
leave
negl
push
push
push
push
js
in
std
loope
rclb
jmp
xor
push
dec
add
movsl
fstps
xchg
int3
test
cmp
andl
outsb
mov
out
scas
adcl
ja
js
test
es
mov
test
cmp
out
imul
scas
fstps
sub
or
stos
ss
addl
inc
fs
pop
jns
jl
dec
push
sbb
mov
pop
sti
call
mov
iret
outsb
cmp
aam
lds
jmp
test
xchg
mov
dec
and
inc
insb
pop
aas
sbb
mov
cli
out
mov
data16
push
cltd
movl
js
sbb
xor
dec
adc
int3
or
xchg
hlt
pop
cmp
mov
outsb
dec
jecxz
orl
inc
adc
outsb
aas
jmp
loopne
hlt
dec
das
sub
add
mov
ret
push
pop
mov
pop
out
adc
sub
mov
fimull
push
clc
mov
add
notl
ds
fmuls
fsubs
cld
mov
push
mov
and
inc
dec
push
cmpsb
xchg
fiadds
repnz
das
inc
push
pop
addl
fcomps
fsubrp
mov
dec
adc
out
insb
or
jg
ss
bound
into
addr16
sti
sahf
inc
out
imul
and
add
or
or
push
ret
jecxz
pop
push
xlat
int3
dec
in
into
dec
xchg
mov
push
pop
cmpsb
lds
aas
pop
xor
pop
sub
sub
outsb
or
pop
daa
movsb
xor
xchg
add
mov
pop
imul
xchg
fstpt
mov
int
cmc
or
inc
popa
sbb
dec
scas
or
lods
movsb
iret
dec
cltd
in
inc
stc
imul
aad
addl
add
sahf
sbbb
ja
add
inc
add
xchg
data16
out
loopne
xchg
mov
sbb
mov
ret
and
aam
roll
movsl
push
mov
and
and
cs
push
lods
shll
xor
enter
sbb
daa
test
mov
cwtl
sub
mov
cltd
int3
movsb
sbb
decb
push
loope
add
inc
loopne
pop
dec
iret
add
inc
arpl
clc
inc
xchg
dec
lea
pop
iret
sti
lret
in
add
push
cmpsl
aas
shrb
and
das
out
jge
fucomp
sahf
jle
loopne
mov
rol
cmpsb
sarl
sbb
jge
dec
mov
fcoml
cmp
add
test
adc
jnp
pop
jp
push
mov
lret
stos
lock
aad
insl
mov
mov
add
push
push
xchg
fnstenv
lcall
jb
nop
out
inc
sub
aaa
lods
cmp
popf
mov
cmp
cmpsl
call
int
hlt
aaa
fnsave
dec
ss
sbb
sub
out
sub
call
popf
mov
lret
es
push
add
jnp
add
lock
loope
arpl
mov
rcrb
push
jge
sbb
out
add
push
shll
cmp
mov
hlt
pop
inc
movsl
sbb
pop
out
inc
dec
mov
or
dec
add
mov
shrb
add
and
rolb
cld
testb
and
mov
jl
mov
or
out
inc
mov
addr16
lds
jecxz
fwait
jecxz
mov
add
popf
or
jne
mov
mov
jmp
fstpt
adc
push
inc
sbb
adc
dec
dec
mov
xlat
cmp
inc
dec
push
pop
pop
cmc
nop
pushf
xor
xor
ss
stc
leave
xchg
in
lret
test
loope
mov
lods
cmp
jno
call
sbb
pop
mov
loopne
push
push
push
sahf
insl
xchg
push
fistpl
ss
outsl
sahf
pop
xchg
jb
daa
cmp
test
or
cmp
dec
add
cmp
add
imul
push
clc
imull
add
sti
outsl
addb
rcrl
push
mov
repnz
lcall
loopne
cmp
popa
ret
xlat
inc
push
mov
push
repnz
cwtl
push
push
xor
mov
lods
fiaddl
xchg
pop
add
outsb
dec
movsl
out
xlat
add
adc
cmp
fadds
inc
lods
push
mov
repz
xchg
push
ja
aaa
dec
xor
lds
jns
mov
ds
push
clc
into
jb
cs
pop
jbe
test
xor
pop
xlat
loopne
mov
out
jno
mov
xchg
das
scas
lods
push
lods
push
shrl
pop
add
addr16
lahf
and
mov
pushf
adc
mov
lret
xchg
loope
jne
js
xchg
imul
pop
sub
pop
xor
mov
data16
es
xor
mov
stos
sub
and
fs
add
and
imul
push
push
add
pop
or
addr16
icebp
xlat
sub
outsb
sti
pusha
add
test
inc
add
or
pop
mov
xchg
movsl
xchg
xor
push
xor
out
sbb
push
or
or
adc
jmp
lock
pushf
loope
cmpb
or
pop
ret
out
mov
call
add
jg
lret
pop
imul
dec
fisttpll
xchg
inc
xchg
int3
into
aam
into
sbb
int
lret
dec
or
and
imul
movsl
add
or
mov
out
mov
scas
fdivs
das
cmp
sbb
out
push
popa
pop
sbb
add
xchg
nop
fwait
imul
push
dec
popa
or
addr16
push
add
sahf
mov
pop
add
inc
pop
jg
xor
xchg
add
jle
add
xor
add
nop
adc
and
add
shlb
add
dec
dec
movb
js
add
dec
adc
icebp
or
pop
add
add
add
sub
add
add
rcrl
cmpsb
add
add
shll
fistl
add
rorl
xchg
jne
scas
popf
inc
add
sub
add
jg
test
push
add
aaa
jb
lahf
add
scas
jecxz
mov
sar
add
int3
add
add
lds
and
add
add
xchg
mov
add
dec
or
or
add
test
add
mov
jge
out
xchg
and
scas
lds
rolb
jg
add
add
dec
mov
outsl
repz
mov
rcrb
cmp
je
push
aaa
jl
xchg
sbb
testl
dec
call
or
add
jno
sub
pop
sbb
fisubs
xor
dec
and
daa
add
lret
and
ja
push
push
push
or
das
dec
cmpsl
and
jo
sarb
push
mov
movsl
add
adc
frstor
dec
clc
or
mov
andl
dec
xor
sbb
repnz
jecxz
cmp
stc
hlt
sti
loope
mov
sub
inc
xor
lret
mov
in
mov
bound
ret
cli
pop
dec
leave
lods
mov
mov
loope
sub
in
dec
fcomps
mov
out
mov
fsubl
cltd
test
cltd
push
cmpsb
pop
aaa
movsb
xchg
dec
add
inc
xor
sub
add
xchg
pop
test
inc
push
add
fnsave
add
mov
lret
add
add
add
out
push
lods
ljmp
imull
stos
pop
add
add
add
out
add
xor
scas
xchg
xchg
in
mov
nop
xor
imul
lret
add
in
push
das
pop
add
clc
add
rcrb
xor
pop
sarb
stc
insb
sbb
call
push
add
nop
movsbl
aaa
aas
ljmp
mov
dec
and
stos
dec
sub
inc
sub
ficoms
aas
mov
shll
adc
sub
jg
sbb
sub
fidivl
into
pop
clc
jne
decb
xor
lods
int
fldl
mov
sbb
test
push
insl
mov
adc
sbb
in
jmp
cmp
cmp
pop
movsl
loopne
mov
add
add
cmp
aam
cli
cli
addl
dec
fs
or
sbb
sub
scas
repz
mov
es
cltd
cmp
sbbl
pop
push
cmp
int3
mov
into
sbb
mov
rclb
cmp
add
add
and
jo
incb
insl
adc
movsl
rorb
inc
loop
sarb
pusha
jo
scas
sub
out
push
push
cmpl
nop
js
mov
add
cmp
and
add
dec
adc
out
adc
adc
notl
test
add
in
pop
in
sub
add
pop
push
add
add
fiadds
in
fistl
lds
idivb
push
add
pop
out
fimuls
pop
les
clc
sub
add
sub
and
ficompl
insl
mov
lock
add
in
incl
adc
cs
mov
sahf
out
stc
xchg
jg
aam
jo
cli
icebp
imul
push
repz
cs
fs
inc
arpl
addb
mov
add
frstor
rcrb
cwtl
mov
lret
addr16
popa
outsb
jae
xor
out
das
fsubr
dec
in
sub
sub
outsb
ljmp
mov
pop
push
imul
fisttps
ja
add
hlt
jg
enter
repnz
scas
lret
out
push
jmp
push
mov
fists
loopne,pn
pop
call
pop
sbb
mov
xor
mov
xchg
cmp
into
push
lds
mov
enter
fdivrp
push
lret
dec
inc
clc
add
aaa
shlb
jbe
ds
push
cli
in
ljmp
repnz
jmp
call
popf
ja
jg
lea
jno
addr16
xor
fisubs
cli
or
das
add
arpl
dec
push
lods
cwtl
add
dec
cmp
xchg
insb
add
jl
scas
outsb
fs
into
xchg
in
or
and
pop
jae
cli
cmp
dec
push
and
in
mov
xchg
mov
xorb
dec
pop
pop
or
jno
movsb
fiadds
add
cmpsb
bound
fadds
outsb
sub
addr16
jno
mov
lds
jmp
pop
pusha
inc
out
repnz
cmovp
aas
ret
int
call
xchg
mov
xor
cmpsl
jmp
iret
call
add
push
adc
gs
mov
mov
xor
cld
or
inc
xchg
mov
mov
pushf
mov
dec
jae
adc
or
repz
lds
and
fs
mov
aas
jae
lret
dec
xchg
cmp
testl
xor
cli
sub
add
xor
pop
xor
pop
das
add
aam
fildll
insl
repnz
inc
sub
or
scas
sub
sbbb
cwtl
mov
iret
cwtl
adc
lods
adc
sti
cmp
int
outsl
in
and
lahf
rcl
xor
mov
dec
or
cltd
sub
pop
movsl
test
sub
cmp
out
and
rolb
add
add
pop
jo
xor
aad
mov
mov
push
xor
lahf
dec
shlb
mulb
add
cmpsb
jg
jbe
mov
dec
movsl
cmp
imul
lahf
xor
lret
and
push
test
mov
push
fsubs
jle
cli
cmpsb
xchg
negl
into
scas
fwait
int3
stos
cli
jns
das
std
or
mov
jbe
mov
xchg
and
pushf
lret
cli
add
sbb
out
xor
mov
cmpsl
cmc
sub
sbb
pop
movsl
jb
add
cs
and
cmpsl
xchg
rclb
sbb
jne
mov
add
jl
inc
cmp
inc
push
sbb
dec
push
add
out
clc
cs
arpl
add
fimull
adc
pop
mov
add
daa
jo
jb
jp
mov
leave
dec
pop
add
pusha
sbb
jmp
pop
pop
inc
clc
adc
xrelease
dec
pop
add
sub
lahf
sar
xorb
fidivs
mov
sub
insb
and
push
in
dec
lret
sbb
in
das
aam
add
nop
nop
jge
sbb
xor
int3
stos
cmp
ss
add
xor
add
ljmp
inc
cs
into
rcll
mov
jmp
mov
repnz
mov
sub
xor
push
sahf
leave
add
popf
pop
cs
addb
push
cmp
push
mov
add
gs
daa
pmaxsw
jae
pop
fimuls
add
jnp
dec
test
adc
cwtl
ljmp
lds
xor
jle
stc
and
inc
push
xchg
pop
adc
sahf
lods
or
jg
arpl
jg
pusha
push
jns
or
jae
jle
cmp
mov
sub
loopne
negb
insb
in
xchg
ljmp
mov
add
xchg
incb
fldcw
push
xor
jecxz
out
sti
or
push
fcom
pop
mov
mov
or
daa
add
pop
cmpsl
pop
lock
push
xchg
ret
or
lahf
sub
jno
add
add
xchg
sbb
xchg
or
mov
push
addr16
mov
mov
and
mov
inc
add
mov
add
jl
cmpb
or
sahf
pushf
jo
lods
cmp
push
add
fstp
inc
outsl
dec
push
dec
mov
add
mov
inc
enter
cmpb
add
and
pop
jno
mov
les
pop
stos
pop
push
xor
loop
insl
lods
aam
cltd
out
sarl
stos
rcrb
iret
adc
outsl
sbb
mov
fsubrl
idivl
and
mov
sbb
pop
mov
in
cld
lods
outsl
pop
lret
cmp
notl
dec
cmp
pusha
inc
inc
out
push
in
xchg
popf
rolb
iret
cld
test
mov
push
mov
mov
scas
mov
sub
xchg
push
shrb
popa
std
pop
pop
scas
ljmp
popf
jns
in
dec
into
ror
sub
push
outsb
xor
lea
rolb
mov
inc
push
jae
jno
aas
xchg
push
or
mov
pusha
dec
out
pushf
sbb
jge
outsl
arpl
adc
cmp
pop
push
add
aam
dec
mov
add
or
pusha
adc
test
mov
mov
add
xchg
adc
mov
mov
mov
jne
adc
jmp
in
add
mov
adc
or
daa
mov
mov
les
push
push
test
mov
leave
inc
and
fildll
pop
dec
outsb
sti
and
sub
outsb
pop
xchg
adc
jmp
lea
mov
cld
inc
and
lret
jge
cmp
js
jmp
xchg
push
out
scas
orb
ljmp
test
push
add
insl
mov
pop
nop
sub
outsb
fcoms
add
nop
cmp
xchg
ss
ss
fcoml
pushf
fsubrl
or
cld
dec
add
jno
gs
mov
dec
add
addr16
out
jnp
pop
and
js
cmp
inc
mov
mov
mov
scas
ja
es
mov
inc
jne
jg
enter
xchg
in
insb
jns
pop
dec
cmp
adc
flds
stos
pop
and
jle
inc
aas
out
stos
dec
and
mov
xor
pandn
dec
cmp
cmp
ret
sub
aas
jecxz
adc
jne
lahf
ljmp
pop
sahf
mov
fcmovne
adc
out
mov
xchg
cmp
mov
rorb
scas
sub
das
cld
leave
adcb
mov
jp
out
and
dec
loop
dec
mov
pop
push
sbb
dec
mov
js
push
or
pop
repnz
jg
push
arpl
jns
js
jae
hlt
std
jecxz
sbb
dec
and
subl
or
xchg
push
add
jne
dec
daa
sti
pop
loop
adc
mov
mov
das
or
hlt
scas
int
cmp
mov
idivl
mulb
pop
adcl
inc
xor
or
jle
mov
pop
mov
adc
xchg
xcrypt-ofb
cmpsl
in
mov
shrl
pop
scas
xor
sbb
imull
hlt
adc
mov
cmp
cmp
loopne
outsl
lods
bound
ret
mov
fdivs
fimull
divl
inc
dec
in
mov
clc
loop
lds
jae
out
insb
mov
dec
addl
loopne
adc
jbe
roll
test
jb
pop
out
int3
data16
cmp
add
lcall
enter
popa
jmp
sbb
stos
lcall
dec
ja
add
xor
mov
sbb
roll
insb
or
xchg
jno
and
inc
inc
inc
mov
mov
dec
out
sti
push
adc
fwait
sbb
or
push
mov
fnsave
daa
add
lahf
add
leave
and
pop
add
add
fadds
and
mov
imul
or
addl
or
add
clc
cmp
or
sbb
dec
dec
add
sarl
fdivp
push
add
jno
cwtl
sbb
and
mov
pushf
call
lahf
push
push
sti
lret
nopl
mov
inc
inc
in
ldmxcsr
scas
xchg
imul
xor
leave
test
insb
push
mov
mov
andl
cmp
out
dec
sbbl
adc
lcall
js
dec
in
jo
add
int
movsl
cmp
add
pop
push
loope
std
into
popa
hlt
mov
or
out
dec
leave
outsl
hlt
pop
enter
das
jle
scas
add
fs
jne
stos
int
mov
pop
lret
ret
push
or
out
add
mov
xchg
jg
cmc
mov
in
jle
mov
mov
call
sub
mov
jp
mov
mov
lock
add
cmpsl
fildl
adc
pop
add
clc
in
jnp
ret
addr16
and
mov
je
inc
and
ret
add
add
and
clc
push
lds
or
pop
and
popa
mov
mov
test
movb
jecxz
ficompl
inc
mov
xor
std
mov
sbb
std
add
add
add
xchg
or
arpl
mov
js
js
jnp
pop
xor
add
popl
add
push
xchg
add
jmp
add
movsl
decl
pop
pop
incb
test
inc
vmsave
mov
out
xchg
ljmp
into
pop
cltd
or
xchg
subl
inc
adc
ret
out
sub
add
lods
lahf
outsl
outsb
jne
inc
xor
adc
xor
das
into
dec
pop
iret
mov
sbb
pop
add
add
add
addr16
mov
ret
pcmpgtd
mov
cmpl
cltd
or
ljmp
cld
jnp
mul
fisttpll
push
sbbl
dec
pushl
mov
lods
push
sti
lret
sbb
mov
sbb
test
xchg
xor
les
jne
add
mov
add
lahf
xor
test
xchg
outsb
or
add
test
cmp
jge
xchg
scas
popa
ja
in
add
ja
daa
sub
cmp
pop
add
pop
or
adc
add
lahf
dec
out
pop
shl
mov
cld
insl
xor
or
sub
test
or
push
jg
imul
cmp
int3
add
cmp
jnp
jbe
aaa
ss
stos
mov
lret
pop
mov
lahf
sub
xor
or
repz
into
dec
add
test
icebp
pop
push
pop
cmpsl
xchg
pop
or
aam
sahf
dec
mov
lcall
lods
sbb
jg
gs
add
jg
sti
mov
pushf
stc
push
push
push
enter
push
mov
daa
push
fiadds
popa
add
gs
add
mov
pop
inc
inc
mov
mov
cmovae
cwtl
cmp
push
int
stos
sbb
cmpb
sub
or
jo
and
dec
jo
dec
sub
aam
movsl
mov
push
adc
sahf
push
notb
jns
inc
jnp
jb
insb
jnp
dec
push
inc
call
push
cwtl
popa
ds
stos
nop
jl
aad
addr16
sbb
push
push
add
inc
fldenv
mov
jge
adc
mov
out
out
mov
iret
out
data16
or
xor
insl
dec
sbb
pop
add
jns
jo
fsubp
mov
sbb
fmuls
or
push
mov
test
dec
pushf
add
int
or
inc
cmp
imul
aad
lahf
inc
lea
push
mov
mov
add
add
jge
mov
pop
shr
js
cli
inc
or
es
sbb
xchg
inc
nop
jge
xor
push
jp
lock
stc
insb
dec
or
stos
stc
repnz
and
pop
movsl
mov
add
shrb
pusha
mov
dec
les
mov
xchg
orl
add
call
stos
aad
sub
jne
pushf
pop
fistpl
sbb
add
clc
enter
sub
enter
ds
jp
and
adcl
mov
push
jmp
out
call
aas
jle
mov
pop
add
ret
aad
add
cmpsb
sub
dec
dec
dec
xchg
push
or
pushf
mov
sub
ds
int3
cmpsb
mov
dec
add
mov
inc
push
jg
out
jle
inc
outsl
fbld
add
fists
or
xor
jecxz
push
jae
ja
gs
lea
xchg
inc
pop
jg
shll
cltd
push
mov
add
loope
jb
pushw
mov
push
arpl
jge
add
mov
pop
das
dec
sbb
inc
or
andb
leave
and
out
dec
pusha
cmp
sti
dec
mov
jnp
and
ds
xchg
insl
aad
sub
sbb
fstps
mov
and
cmpl
xchg
dec
popf
mov
fistpl
cwtl
add
push
adc
rclb
dec
mov
sbb
fwait
dec
outsl
push
fidivl
popl
insb
add
push
pop
fs
mov
das
pusha
ficoms
or
stos
test
rorl
cwtl
push
test
dec
pusha
or
sahf
scas
icebp
jecxz
and
xor
or
add
sbb
movsb
push
dec
xorl
mov
movsl
sahf
mov
scas
loop
js
fisubrl
stos
push
push
or
call
add
es
insl
xor
inc
adc
jge
pushf
pop
inc
ds
faddl
dec
mov
push
jns
sahf
mov
mov
ret
sbb
aad
inc
mov
aas
es
out
popf
mov
lret
mov
out
pop
sub
outsb
sub
sbb
lods
cmp
jp
out
loopne
sahf
mov
xchg
jo
mov
cld
inc
mov
int
add
inc
mov
iret
add
add
mov
outsl
add
in
fistpll
xchg
decb
fcompl
sub
clc
mov
addr16
pop
cmpb
jmp
addr16
mov
adc
addr16
pop
je
daa
add
inc
jg
pop
mov
xlat
adc
adc
int3
decb
into
pusha
pop
nop
cmp
cmpsb
outsl
jg
jg
repnz
std
ja
mov
push
dec
lods
lcall
mov
call
movsl
icebp
repz
rorb
repz
sub
rcrl
xchg
push
pop
fcmovne
pop
scas
sbb
test
daa
cmp
pop
shll
jle
aas
sbb
xor
cmp
add
iret
lret
mov
push
out
aad
aam
dec
out
or
fwait
mov
pusha
fsub
fisubl
jae
dec
jbe
sbb
out
dec
in
mov
rorl
mov
scas
out
xor
outsl
cmpsl
outsl
mov
into
add
mov
dec
push
mov
or
lahf
or
mov
adc
lds
lods
push
ds
pop
hlt
insl
popa
lods
add
and
xor
mov
and
sbb
xor
add
mov
cli
movsb
lock
xchg
mov
mov
cld
push
cmp
aad
lahf
icebp
push
mov
add
jae
cmc
add
subl
mov
jp
in
leave
xlat
out
fcom
insb
sub
push
pop
pop
adc
pop
jbe
cmpsb
in
mov
adc
add
mov
mov
fcompl
and
add
std
add
imul
js
out
mov
add
jp
fsubrs
dec
cltd
aam
add
adc
fistl
sbb
outsl
pop
lods
sbb
fxch
fistpl
ja
mov
popf
add
pop
or
pop
add
xchg
xor
aaa
adc
add
out
mov
add
inc
add
push
pop
add
and
and
mov
lret
mov
mov
or
dec
pop
in
jne
jp
push
mov
sti
cli
incl
lds
mov
in
lods
mull
inc
lods
ja
or
ja
cmpsl
addb
sar
cld
ss
loope
mov
and
add
int
popa
inc
pop
dec
or
lret
repnz
imul
add
outsb
jg
out
or
pop
jl
lods
pop
sbb
addb
imul
scas
sub
or
jb
add
orl
jmp
mov
enter
xlat
rcr
jmp
outsl
pop
jle
int
adc
test
fidivl
test
insl
ret
jp
jecxz
call
add
push
aas
push
lldt
fisttpll
iret
repz
int
xchg
lret
scas
xchg
push
cmp
push
mov
in
insb
shlb
add
jmp
fidivrs
xchg
addr16
inc
mov
add
in
jbe
sub
nop
xlat
data16
clc
mov
frstor
and
dec
and
adc
daa
jnp
and
in
cltd
mov
pusha
daa
push
lods
mov
fisubl
pcmpgtd
pop
movsl
xor
add
aas
dec
cmp
add
cmc
dec
push
add
pop
dec
xor
mov
call
lods
cmpsl
dec
lea
clc
jg
leave
xor
xchg
outsb
shll
cmp
push
leave
out
pop
xor
pop
addb
js
push
jmp
push
or
sub
ds
popf
or
sub
out
cmp
dec
imulb
sbb
ret
jae
jns
pop
outsl
cmp
cwtl
pop
insb
add
xor
mov
test
jbe,pt
and
cli
aaa
jb
add
dec
xor
fbld
add
xchg
add
inc
dec
lea
sub
add
add
add
enter
or
out
add
and
pop
add
inc
jl
or
add
xlat
jno
xchg
xor
insb
xchg
add
add
or
mov
or
add
rdtsc
lea
cld
sti
xchg
dec
pop
sbb
add
add
clc
rcl
aad
xchg
inc
mov
push
add
popa
sub
inc
roll
push
dec
cltd
push
or
or
test
gs
in
add
fdivrs
pop
adcb
xlat
add
fdivrl
jae
faddl
xchg
push
mov
addr16
add
add
add
lret
mov
cmpsl
rcrb
sahf
sbb
mov
jne
or
je
lds
imul
out
mov
aam
jmp
pusha
cwtl
mov
lods
mov
adc
add
xor
cltd
add
and
test
adc
cli
mov
lods
adc
fisttps
sarl
sbb
test
inc
inc
rcl
repnz
in
data16
inc
jmp
sub
pop
fidivl
mov
ret
or
cmp
inc
std
notl
repz
mov
mov
out
call
out
out
sbb
xchg
xchg
mov
nop
xchg
mov
in
fwait
lret
call
movsl
pop
pop
mov
std
adc
stc
and
mov
xor
or
cs
cltd
popf
stc
jl
cmpsl
lahf
sub
orl
and
mov
in
out
cmp
xchg
pop
sub
mov
sbb
sub
and
shrl
push
into
adc
pop
in
popf
je
das
sahf
std
fstl
add
stos
cmp
scas
lods
push
mov
test
pop
outsl
mov
lods
insb
mov
and
mov
xor
xchg
decb
push
das
push
mov
cltd
or
adc
inc
scas
fists
cwtl
aad
mov
push
aas
jb
outsl
push
pop
and
negb
push
inc
mov
add
mov
add
mov
lret
mov
mov
mov
and
subl
sbb
inc
sub
es
fwait
ljmp
mov
xchg
fisubrs
nop
test
push
or
mov
mov
mov
adc
add
stc
xchg
xchg
bound
ret
push
repz
in
in
repz
sbb
inc
cwtl
sti
out
pop
scas
mov
lds
mov
adc
adc
stos
inc
movsl
adc
sub
adc
sbb
repz
sub
fwait
lods
scas
scas
fwait
adc
xor
and
std
sub
jne
push
popf
sub
cmp
add
aaa
push
mov
mov
sub
das
and
addl
jae
pop
add
out
inc
push
or
outsb
sub
xor
mov
loopne
dec
push
daa
jmp
xor
mov
je
mov
cmc
out
lret
ret
xor
ss
imul
rep
xor
ljmp
sub
shl
xchg
scas
imul
and
mov
bswap
pop
repnz
add
xchg
movsl
or
insl
mov
mov
xchg
fldl
push
in
and
inc
push
out
push
out
out
sahf
clc
push
ja
out
ljmp
leave
cmpsl
arpl
cld
std
outsl
roll
cs
mov
push
add
pop
jle
add
jl
dec
add
dec
add
fdivr
cmp
and
outsl
adc
fcomps
daa
inc
mov
js
push
fisubrs
cmp
add
inc
das
mov
call
dec
inc
popa
mov
out
inc
imul
test
in
push
sahf
cmpsb
pop
ljmp
cld
pop
xor
adc
sbb
and
push
adc
in
pmulhw
mov
aam
cltd
inc
inc
test
and
pushf
push
pop
xor
jg
test
mov
popa
mov
adc
mov
popa
push
fwait
or
sub
pop
test
addl
adc
push
scas
shrl
mov
sbb
lret
cld
jnp
out
out
add
jecxz
xchg
out
jno
lret
rcrl
in
mov
js
add
inc
lea
adc
dec
leave
and
in
ljmp
mov
sbbl
mov
stc
cli
mov
adc
mov
enter
cli
ss
inc
outsl
cli
adc
pop
inc
bound
in
ja
mov
sub
sti
inc
xchg
ljmp
cmpsb
iret
imul
loop
mov
test
mov
aas
outsl
addr16
xor
lock
xchg
aam
aas
sarb
loopne
cmpsb
xchg
and
clc
or
in
shl
pop
pop
ds
popf
mov
stos
jg
mov
ss
mov
in
adc
cli
rclb
mov
or
ds
shl
out
cmc
jbe
bound
jp
mov
push
popf
cmpsb
jecxz
loop
je
add
sub
push
imul
add
icebp
test
sub
adc
jge
lret
xor
mov
push
pop
sbbl
adcl
mov
addb
push
jns
jb
test
cmp
iret
jae
push
add
mulb
or
push
aas
jmp
mov
movsb
xchg
lds
mov
add
adc
sti
add
inc
rorb
mov
test
clc
and
andb
sbbl
jmp
pusha
and
sbb
decb
mov
add
sub
add
mov
add
stos
fwait
call
pop
dec
mov
fcmovbe
mov
xchg
scas
dec
pop
shl
xorb
inc
es
push
pop
in
and
fists
pop
daa
add
or
push
loopne
add
into
sub
inc
out
mov
faddp
test
shlb
sbb
add
pop
cmpb
jb
jo
out
int
in
jbe
out
dec
and
mulb
push
dec
iret
sbb
jae
into
and
push
dec
movsl
xchg
mov
jl
dec
mov
pop
mov
jle
lret
stc
cli
jne
xor
jnp
lods
repz
adc
mov
sbb
dec
int3
cmp
hlt
test
subl
dec
jle
sub
test
movsl
repnz
add
add
das
cmp
les
inc
pop
add
rcr
xor
daa
addl
inc
aam
xor
sbb
mov
push
fnstsw
pop
das
mov
inc
jg
sbb
dec
add
xorb
add
add
dec
add
cmp
aad
daa
xor
xchg
bound
push
sbb
enter
mov
aad
ljmp
rcrb
cmpsb
xchg
ret
scas
cmpsl
lret
scas
icebp
sub
add
sarl
icebp
add
xchg
mov
cld
mov
xchg
mov
mov
imul
sub
ljmp
sbb
push
push
pop
add
pop
mov
test
mov
lret
dec
mov
lret
cmp
mov
mov
cmpb
jg
scas
int
ret
ljmp
jno
mov
sti
dec
xchg
push
out
pusha
push
inc
loop
cld
insb
repz
cmp
sub
leave
push
jp
movsb
jb
mov
jbe
and
push
daa
into
insl
sarb
pop
lods
sarb
out
ret
adc
cmp
popa
add
jnp
cmp
mov
lret
push
mov
mov
scas
les
hlt
jnp
imul
add
or
xchg
lock
dec
imul
daa
iret
inc
push
xchg
jae
cmpl
add
lods
cmp
arpl
and
jg
into
mov
repnz
push
rol
sbb
mov
fsubrs
mov
cli
cltd
orb
fwait
pop
add
add
add
xor
sti
dec
or
movsl
jb
das
insb
lock
inc
or
pop
jle
pop
add
fildll
xchg
push
mov
inc
outsb
push
add
xor
mov
and
ljmp
add
mov
mov
repz
jp
outsb
lds
daa
mov
push
mov
pop
jbe
mov
jb
xchg
xchg
shrl
sub
cmpsl
sbb
mov
jp
inc
jg
mov
scas
add
shrb
or
dec
nop
and
cmp
les
mov
adc
outsb
cmpsl
jae
push
push
sbb
lds
add
mov
mov
leave
mov
stos
scas
inc
addr16
inc
pop
icebp
das
xor
jnp
cwtl
repz
sahf
mov
sub
pushf
cmc
jg
nopl
lds
mov
add
add
push
aaa
or
pop
mov
popf
sub
movsb
xlat
mov
inc
pop
mov
inc
test
sbb
rcr
call
lahf
dec
inc
mul
xchg
mov
mov
add
inc
and
sub
out
pop
iret
jbe
stos
es
dec
shlb
in
push
mov
dec
pusha
pop
repnz
mov
roll
mov
outsl
in
xchg
mov
xchg
sub
mov
dec
mulb
insl
cld
fs
les
add
mov
jp
or
pop
pop
movsb
jmp
lds
imul
sbb
data16
mov
add
fdivs
inc
xlat
adc
rorl
jne
ljmp
lret
and
out
rorb
xchg
mov
add
clc
mov
popf
fisubl
aaa
mov
add
std
addl
adc
or
stos
addr16
xchg
insl
lods
push
jnp
jle
out
cwtl
and
pop
jns
push
sbb
push
daa
dec
sbb
inc
repnz
arpl
js
push
sti
xchg
push
xor
xrelease
add
and
dec
adc
add
inc
inc
fs
xchg
pop
sbb
xor
fdivrp
dec
jno
pop
movsl
ljmp
es
add
int3
vpshaq
popf
jecxz
dec
popl
sbb
add
test
push
aas
and
mov
lahf
add
inc
add
sub
popf
dec
ret
pop
and
sbb
add
arpl
push
pop
mov
inc
push
cmp
jnp
out
aas
mov
mov
aaa
scas
or
mov
adc
jle
ret
pushf
movl
dec
les
xchg
jg
jle
lock
mov
mov
inc
sbb
xchg
cmpl
in
dec
jle
lods
xchg
jo
iret
dec
dec
inc
xor
dec
inc
adc
popf
ror
sub
call
mov
jns
dec
shrb
sbb
ds
mov
clc
nop
in
ljmp
jecxz
dec
mov
mov
sbb
data16
js
repz
mov
sub
test
add
inc
mov
jp
imul
add
add
adc
clc
arpl
lods
rcrl
inc
or
data16
mov
add
int
adc
pop
jb
movsl
add
xor
inc
xchg
add
cli
cmp
sub
imul
add
cmp
adc
add
sub
add
orb
add
add
movsl
dec
adc
jo
jbe
icebp
mov
and
mov
jmp
nop
xchg
pop
xchg
cmp
add
add
xor
pop
scas
add
sbb
adc
clc
jo
sar
imul
mov
sbb
mov
add
dec
inc
inc
ljmp
push
sbb
sub
pusha
out
add
dec
popa
mov
or
mov
xchg
add
cmc
xor
repz
mov
jne
sbb
cmp
aad
add
sbb
outsl
cmpsb
push
and
and
outsb
dec
mov
mov
pusha
pop
and
xchg
mov
push
add
push
mov
add
xor
outsb
pop
mov
mov
xor
jmp
mov
outsl
rcll
jecxz
mov
mov
mov
mov
fsts
scas
arpl
in
inc
ret
je
pop
mul
or
mov
je
add
inc
stos
pop
inc
loopne
pop
jle
mov
jns
pop
add
push
xchg
add
test
or
rorl
mov
jb
ja
int3
mov
in
sbb
scas
cmp
inc
xchg
mov
add
cmp
cmp
push
rcrb
lea
jge
lock
push
in
inc
jmp
test
inc
cmp
dec
inc
fwait
lcall
cmp
pop
out
movsl
jo
repnz
add
jp
add
fs
mov
sbb
lds
mov
scas
popf
cmp
lods
addl
add
inc
jnp
add
js
orb
enter
notl
mov
mov
push
shrb
add
xchg
jo
out
or
jmp
push
lods
es
xlat
lret
push
aaa
aam
daa
je
in
mov
xacquire
pushf
cmp
xchg
int3
fwait
std
iret
cltd
sbb
add
jp
inc
rcrl
inc
mov
sub
hlt
fs
cmp
addr16
test
or
outsb
mov
les
inc
or
add
xchg
fstl
dec
push
xchg
leave
arpl
add
repnz
mov
or
fwait
xchg
das
scas
sub
jl
cmpsb
fisubs
jno
xor
push
fimuls
pop
loop
sub
add
or
pop
xchg
xchg
dec
or
or
shrl
push
xchg
rolb
xchg
int
or
cltd
jecxz
incl
mov
es
mov
mov
aad
mul
mov
mov
dec
lret
mov
into
add
outsb
add
adc
jl
sub
daa
xor
inc
inc
imul
jmp
xchg
int3
mov
mov
mov
and
xchg
frstor
out
jb
aad
or
mov
mov
fistpl
dec
sbb
push
xchg
add
pop
imul
stos
test
int
mov
fildl
sahf
or
pop
js
inc
mov
dec
jle
jnp
lahf
mov
add
fisttpll
push
add
pop
inc
jne
xchg
xchg
jecxz
out
add
out
jae
dec
mov
dec
or
lret
stc
outsb
js
andb
int
pop
xchg
add
lret
add
aam
jnp
jg
add
inc
stc
cs
mov
loopne
jge
or
sbb
lea
into
dec
mov
add
xchg
mov
gs
jns
or
hlt
insb
adc
jg
addr16
add
stos
push
out
shlb
or
out
subb
jnp
mov
stos
cmp
mov
mov
push
mov
add
pop
dec
addr16
test
add
jp
mov
sbbl
push
dec
ss
pushf
add
inc
mov
push
inc
add
sahf
mov
and
aas
jb
lret
add
movb
cmpsb
push
out
inc
pop
dec
lret
test
sub
das
aaa
setg
loope
pop
xchg
add
or
mov
cmp
and
or
add
imul
out
cmp
sub
loop
push
sarb
add
aas
aas
iret
jne
add
sbb
out
subl
jg
jp
sbb
shlb
and
push
in
add
cmp
lds
ljmp
aam
xchg
xor
repnz
fistpl
or
loopne
test
mov
ljmp
push
push
in
xchg
loopne
push
outsl
xchg
dec
data16
insb
mov
mov
add
adc
jo
std
jle,pt
enter
cs
dec
inc
pop
movsl
jge
arpl
xor
loope
add
xchg
fildl
out
add
fcoml
sub
cmpsl
push
add
je
pop
outsb
sar
push
add
gs
jo
xchg
sub
dec
push
jno
cmp
dec
push
lcall
ds
dec
sahf
iret
cmc
shll
sub
sub
inc
out
xor
push
and
test
sbb
cmc
lds
ret
loopne
xchg
ljmp
sub
stos
push
out
fwait
in
shl
outsb
xchg
cmp
incb
pop
rcrl
xchg
pop
xchg
pushf
pop
out
sbb
or
mov
xor
js
and
add
dec
add
mov
inc
popf
lret
or
add
sbb
add
push
out
push
mull
sub
fs
push
add
jle
enter
add
adc
add
inc
sub
sub
lock
es
gs
repnz
jecxz
mov
mov
pop
imul
mov
into
or
orb
add
in
add
addr16
cmp
mov
aam
out
out
call
pop
pop
add
xor
ljmp
xchg
xchg
aam
lea
imul
jns
pop
push
and
xlat
pop
push
scas
les
xor
inc
sub
mov
loopne
cmp
pop
adc
cmpsl
fldenv
xor
inc
js
ss
arpl
mov
mov
jo
and
mov
lods
mov
mov
xchg
lret
lea
mov
das
cmpsb
and
jmp
leave
hlt
aaa
inc
int
push
out
push
mov
add
lock
add
mov
dec
adc
cltd
sti
mov
dec
arpl
jp
jl
add
int3
sbb
dec
bound
sbb
add
rolb
jecxz
stc
out
and
dec
or
mov
cmpsl
pop
sbb
mov
add
lret
add
rcrb
cmp
and
mov
repz
str
in
xor
out
lods
out
mov
jnp
orl
lds
dec
push
pop
pusha
fstl
aaa
mov
cmp
mov
add
push
aam
nop
in
dec
lcall
add
in
add
out
es
xchg
inc
aas
push
hlt
sub
cmp
mov
ljmp
pop
test
sub
lret
ja
jle
stos
pop
jg
adc
inc
jle
mov
add
adc
scas
cwtl
in
sub
mov
push
test
clc
cli
pusha
push
add
push
jb
pop
jae
mov
jmp
inc
dec
mov
sbb
mov
mov
jb
pop
addr16
fisttps
or
scas
mov
xor
aas
ret
jle
jle
bound
pop
sbb
movsb
in
pusha
mov
add
or
sti
jbe
push
enter
dec
mov
movsl
add
mov
in
lods
mov
icebp
test
or
mov
andb
and
cmp
mov
push
fstps
shlb
leave
fdivrp
data16
ficomps
fmuls
jnp
ljmp
push
repnz
test
fs
frstor
test
ret
push
scas
lods
inc
mov
pop
scas
mov
popf
sbb
or
mov
jo
pop
and
inc
and
rcl
sbb
mov
or
and
movb
mov
push
stos
mov
shll
adc
out
add
js
cmp
cltd
daa
loopne
ret
lea
pusha
pusha
test
push
mov
and
push
int3
jo
cmp
out
iret
jnp
adc
adc
add
pop
mov
movsb
jo
inc
jb
insb
add
in
mov
jbe
inc
add
add
arpl
lds
scas
adc
or
mov
rorl
sti
xchg
jecxz
and
lea
jnp
sti
fdivs
and
xor
mov
imul
mov
add
add
jns
les
mov
out
inc
gs
mov
or
pop
or
fistpl
mov
inc
cmp
js
add
in
pop
jge
jecxz
in
mov
fbld
xchg
add
pop
inc
push
std
and
jge
xor
add
les
dec
inc
sbb
jno
jnp
add
leave
mov
add
mov
movsl
cmp
mov
mov
mov
cwtl
xor
fnsave
and
aad
test
push
jb
or
pusha
cmc
sarb
lds
das
dec
xor
insl
xor
inc
icebp
inc
divb
sti
iret
xor
in
mov
cld
dec
add
ss
shll
fsubl
push
xchg
mov
test
cmpsl
cs
add
jecxz
sbbl
fstpl
sub
xlat
vmovups
out
sar
and
or
mov
enter
and
pop
addr16
and
inc
mov
push
add
ds
insl
sti
cmp
push
xchg
dec
sbbl
mov
xchg
loope
gs
leave
add
push
xchg
sbbl
out
pop
inc
in
push
add
push
or
je
frstor
push
test
xchg
lcall
inc
pop
add
in
stos
mov
mov
popa
jecxz
push
xor
adc
std
cmp
jns
mov
cmc
cmp
and
lahf
pop
jle
scas
int
add
and
js
cmpsl
sbb
pop
loop
mov
mov
sub
xchg
jle
filds
sbb
adc
subb
pop
jno
xor
scas
or
xchg
cmp
xor
sti
mov
cmc
pop
or
rorb
int
outsb
cmp
lods
mov
clc
nop
push
sarl
scas
lcall
mov
out
loopne
call
das
hlt
ror
out
mov
inc
sub
mov
mov
repz
ds
jbe
stos
jb
xchg
in
sub
jmp
sub
push
xor
xor
fs
dec
dec
pusha
in
imul
pop
movsl
mov
test
jb
push
lock
pop
sbb
dec
mov
fwait
inc
cmc
mov
int
xchg
hlt
sbb
mov
adc
movsb
aad
mov
cmp
sub
push
xchg
sbb
hlt
sbb
mov
add
sub
js
in
pop
insl
xchg
hlt
pop
mov
mov
mov
add
addl
cmp
cmp
leave
inc
leave
fs
mov
adc
add
out
push
les
imul
sbb
xchg
add
cmpsb
idivl
sbb
and
pop
call
sbb
and
mov
fwait
stos
add
into
stc
push
mov
mov
rolb
or
inc
push
add
leave
ret
test
push
jns
setge
in
add
pop
addl
test
test
sub
lods
call
add
xchg
jecxz
out
in
add
sub
add
mov
fs
sbb
pop
xchg
or
jp
add
jo
sahf
insb
add
call
add
scas
add
pop
popa
mov
dec
dec
inc
sbb
add
mov
inc
add
push
bound
popl
jmp
int
add
mov
sbb
mov
add
jmp
cmp
and
jns
mov
add
ret
outsb
popa
sbb
push
cwtl
add
lock
add
dec
adc
cmc
insl
stos
adc
add
push
ljmp
push
enter
sti
or
sbb
inc
add
cmp
push
add
test
pusha
es
mov
sub
ret
add
outsb
add
cmp
add
pop
insb
loopne
ljmp
add
lcall
inc
add
or
pop
sub
les
mov
lock
push
movsl
add
test
push
stos
lods
out
ljmp
push
ljmp
stos
pusha
mov
push
mov
jecxz
sbb
or
pop
insl
add
mov
mov
mov
imul
test
out
insl
mov
into
sbb
push
sbb
and
jg
mov
push
push
aad
dec
dec
aad
inc
imul
add
inc
dec
sbb
jne
in
ror
sbbb
repnz
ljmp
inc
add
xor
sar
push
jb
xchg
push
movsl
mov
sbb
aas
adc
orl
mov
dec
movsb
sbb
cld
adc
in
add
arpl
iret
push
mov
jae
aaa
out
jl
call
outsl
or
sub
ljmp
xchg
fsubrp
jle
cmp
and
sti
popf
pop
out
add
sub
jge
xlat
aas
xchg
inc
int3
add
add
sbb
add
iret
inc
daa
inc
xchg
add
mov
sahf
add
movsl
jae
add
pop
orb
mov
dec
mov
mov
mov
add
add
rorl
ja
in
jnp
and
in
push
jmp
inc
or
mov
stos
jb
pop
inc
add
daa
mov
xor
hlt
xchg
fcmovnb
aaa
xor
andb
jb
jl
jp
add
xlat
gs
mov
mov
out
lds
enter
and
add
shlb
rcl
add
inc
dec
mov
pop
dec
mov
scas
xlat
lret
ds
dec
add
push
lret
cli
mov
and
sbb
ljmp
bound
mov
aam
add
add
mov
and
fiaddl
adc
jge
xor
call
in
cmp
sub
xor
inc
imul
pop
rcr
inc
or
pop
push
inc
and
ret
ror
mov
int
mov
xor
push
inc
fisttpll
pushf
and
outsl
mov
jmp
mov
sub
pop
mov
gs
add
xchg
mov
aam
test
dec
mov
push
out
inc
jl
cmp
sub
fstps
xchg
lea
mov
and
call
insl
mov
movsl
divb
lds
stos
std
ljmp
sbb
and
dec
xchg
pop
aaa
dec
xchg
das
test
out
cld
adc
jecxz
fsubrl
fucomp
or
pop
cmp
xor
aam
leave
or
daa
call
fistps
leave
dec
add
pop
out
pop
or
pop
dec
sub
xchg
sti
in
js
outsb
ret
fidivs
aas
sahf
pop
inc
outsb
int
stos
fwait
pusha
stos
pop
xor
cmp
clc
push
gs
out
iret
loope
into
ss
fiadds
xchg
inc
mov
test
xor
jmp
and
xor
jp
or
js
cmpl
nop
ljmp
loop
xor
or
jmp
aam
pusha
or
push
imul
daa
adc
test
adc
frstor
fisubs
dec
test
shr
jmp
imulb
test
dec
pushf
mov
jo
ja
fiadds
jne
push
inc
ja
mov
add
sbb
stos
lretw
mov
das
add
clc
xchg
pop
and
add
add
xchg
add
pop
fistl
add
sub
add
cmp
xchg
push
push
or
push
outsb
xchg
mov
movsb
mov
stos
add
add
out
cmovae
out
imul
dec
das
mov
sub
push
add
scas
pop
add
push
push
add
mov
sub
and
cmc
sub
add
jl
decb
les
ja
loop
jae
out
repnz
or
fdivrl
inc
and
and
bound
sbb
pushf
dec
fsubrs
xor
in
insb
stos
fs
pop
xor
loop
mov
or
es
in
jae
ret
scas
add
sbb
loopne
pop
and
pop
ss
pop
xor
iret
bnd
add
outsl
loop
outsl
cld
push
int3
jnp
cli
and
adcl
iret
movsl
add
mov
cmp
sub
fmuls
mov
push
cmp
addr16
mov
ljmp
ret
enter
inc
loop
xlat
xlat
pop
cmp
orb
adcl
add
cmpsl
cs
jne
ljmp
ret
jbe
inc
in
xchg
adc
test
addr16
jbe
sbb
dec
out
sbb
dec
add
add
out
cmp
ja
add
divl
out
cmpsl
add
mov
add
mov
cltd
js
add
nop
and
jne
cmp
fdivrp
jle
sbb
inc
inc
xchg
cmp
fadd
icebp
and
insl
or
andb
dec
add
add
sub
push
mov
and
pop
sti
add
ja
sub
add
repz
test
lret
dec
orl
dec
mov
cmp
fbld
inc
jle
inc
or
push
jne
adc
mov
mov
mov
and
addr16
lahf
hlt
add
adc
cmpsl
and
or
dec
lret
ds
fstl
cmp
out
fsubl
dec
fisttpl
sarb
mov
jge
sbb
nop
rolb
sub
jmp
push
insl
jmp
dec
cmpsl
xchg
outsb
in
lret
pop
scas
shll
jle
lods
js
repz
add
out
ljmp
push
sub
jmp
in
add
test
lcall
int
pusha
clc
sti
jmp
dec
and
jb
fistpll
and
fisubrs
sbb
lods
les
inc
push
fisubrl
add
cltd
jbe
push
xchg
sti
iret
cmpsl
movsb
add
mov
out
xchg
jge
mov
iret
aaa
std
add
test
add
or
sysret
cmpsb
orl
ljmp
insl
dec
lock
dec
mov
mov
insb
fucomp
dec
pop
mov
dec
popa
push
pop
mov
sub
dec
ljmp
aas
scas
jge
ljmp
in
pop
jecxz
aas
mov
push
es
sbb
out
dec
cmpsl
add
lock
pop
sub
add
jg
daa
inc
sub
push
sti
pop
or
and
arpl
test
and
inc
insl
test
add
cmpsl
scas
add
je
lret
out
shrl
popf
in
call
sar
aam
lea
add
mov
aad
inc
leave
jb
loopne
lret
mov
insb
addr16
lods
ds
aad
pop
ja
xchg
add
push
out
mov
xchg
and
pop
into
sub
jno
lds
ficomps
sbb
add
push
es
cli
pop
add
orl
xchg
subl
mov
inc
sbb
fwait
or
xor
in
cs
stos
jns
mov
sti
inc
dec
aas
sti
add
xchg
fiaddl
mov
xor
pop
repz
ret
stc
pop
cmp
rorb
mov
add
jns
dec
pop
inc
add
xchg
add
repz
and
push
add
add
cmpsb
fiadds
bound
pop
sub
jns
xchg
push
insl
add
add
sub
add
fildll
iret
dec
ja
inc
lods
sub
popa
inc
cmp
lret
pop
adcl
psubd
or
push
and
mov
push
adc
fstpt
insl
mov
dec
and
out
idivl
divb
mov
dec
ds
shlb
sub
mov
push
sbb
cmp
lcall
jne
xchg
fldcw
orl
subb
mov
push
mov
fs
int
call
sub
cmp
lods
lock
jge
gs
xchg
adc
jno
pushf
sahf
sub
sahf
jle
add
sbb
movsl
psubq
int
xchg
inc
shlb
imul
mov
cmp
dec
test
mov
add
sub
push
add
bound
cmp
mov
cmp
stos
out
sub
ud2
add
ss
iret
pop
or
mov
jg
stos
popf
push
lret
mov
lcall
jle
add
mov
aas
add
sbb
dec
adcb
and
adc
movsb
add
sbb
mov
mov
stc
fdivrl
lcall
mov
test
ficoms
lret
ret
es
repnz
adc
or
sti
mov
gs
adc
fidivs
cmpsl
push
push
xchg
popa
xor
add
insb
cmp
jg,pn
lea
nop
jl
nop
stos
outsb
in
cltd
add
divl
adc
jb
ss
jae
aad
je
aas
mov
mov
lahf
mov
popf
sub
in
inc
inc
js
sub
pop
es
cmp
fadds
roll
push
out
shll
pop
add
jp
push
adc
pushl
sbb
outsb
jmp
std
xchg
jnp
sahf
push
fisubrs
outsb
inc
add
out
pop
fcomip
nop
add
mov
movsb
xor
pop
iret
push
test
jo
add
fisttpll
mov
mov
sarb
pushf
cwtl
test
push
or
sub
pushf
add
test
cltd
idivb
and
loope
sbb
mov
jno
xchg
orb
and
mov
icebp
mov
dec
pop
repnz
lods
push
std
add
sub
add
shrb
shrb
sub
jb
mov
data16
jg
lret
inc
aam
rorl
cltd
fimuls
insl
xor
add
in
and
outsl
xor
pop
dec
rcrb
aam
mov
adc
sub
mov
testb
add
and
adc
jp
mov
xchg
fsubs
push
jo
sbb
movsl
in
js
int
fcmovb
push
stos
add
jne
adc
sub
mov
imul
push
fcomps
adc
cmp
mov
rcrb
fnsave
fisubrs
sbb
push
sub
stos
mov
jnp
inc
add
sub
mov
scas
jns
or
test
xchg
loopne
jbe
add
jns
ja
int3
cmp
cltd
fstps
pop
sub
inc
ret
and
scas
sub
ret
mov
cwtl
sbb
mov
pop
pushf
pop
add
jecxz
repnz
stc
dec
mov
push
mov
adc
mov
arpl
test
sub
cmp
add
mov
add
test
enter
in
dec
mov
sub
cmc
inc
ret
push
out
adc
xchg
insl
sbb
add
add
adc
cmp
xchg
dec
add
add
dec
mov
repz
imul
jnp
in
mov
mov
pop
pop
lret
pop
jp
push
add
pop
push
fmull
inc
or
movsb
push
out
ds
shlb
in
add
add
sub
xchg
pushf
outsb
add
sti
cli
es
cmpb
add
fdivrp
bndstx
cmp
add
mov
sub
popa
push
mov
jo
push
roll
icebp
mov
pusha
hlt
pusha
movsl
adc
in
add
xor
add
push
push
jae
add
roll
add
call
mov
add
ss
xor
dec
add
add
push
daa
out
cli
pop
in
addb
pop
in
push
sbb
fcomp
pop
das
scas
jp
inc
and
or
add
decb
mov
or
clc
or
or
add
jnp
xchg
movsl
pop
flds
cmp
ja
call
sub
ret
stos
clc
aam
out
loop
sub
das
dec
add
aam
pushl
sti
inc
pushf
add
mov
add
add
adc
adc
mov
lock
fsubrs
cltd
push
lea
mov
pop
pusha
push
cs
fadds
mov
call
xor
ljmp
sbb
add
jo
sti
test
jo
enter
sbb
inc
jl
lods
cmp
dec
ret
das
push
push
repnz
out
std
cmp
ds
test
adc
sahf
addb
in
sbb
gs
add
xor
add
sti
sbb
outsl
push
or
add
push
dec
or
xor
inc
or
add
aas
sahf
outsb
add
movl
sub
pop
xor
cs
jecxz
mov
test
faddl
add
mov
push
jnp
addb
out
add
lcall
or
push
add
loope
stc
daa
jge
test
xchg
cmpsb
jg
jmp
and
sub
mov
mov
xchg
stos
cltd
cmp
je
lret
jae
jbe
add
push
push
xor
dec
imull
mov
int
mov
sub
mov
ret
jno
lret
adc
int3
pusha
out
mov
dec
imul
fildl
repnz
mov
xor
rclb
setp
sub
imul
pop
pushf
xchg
std
in
add
push
mov
daa
add
mov
dec
aaa
xlat
ret
adc
in
xchg
rcrl
inc
adc
push
mov
and
ds
cltd
cmp
adc
dec
push
out
fidivl
push
stos
in
add
mov
outsb
rcrl
out
scas
and
add
aas
and
icebp
cs
filds
push
inc
add
fisubrs
mov
jb
jle
pop
iret
aas
add
lret
or
mov
fs
popf
mov
lret
into
mov
push
mov
fiadds
stc
and
das
lret
sbb
push
movsl
add
dec
dec
loop
pop
dec
testl
add
sbb
fs
inc
push
jge
mov
test
ret
add
xor
test
stos
pushf
je
fisttpl
push
lea
call
cmpsl
cld
sub
push
and
shlb
sbb
cmp
sub
mov
gs
inc
push
add
push
pop
dec
mov
add
imul
push
lea
ret
notb
pushf
push
outsb
movb
fldenv
push
add
add
pop
pop
push
and
repz
push
rolb
jnp
pop
xchg
add
xchg
int
pop
mov
cltd
or
pop
mov
xchg
add
loopne
add
push
lea
add
pop
sti
in
arpl
cs
jle
add
and
inc
subl
mov
adc
adc
pop
mov
ja
add
insb
test
xor
or
mov
mov
sbb
mov
mov
xchg
leave
mov
fadd
sahf
sahf
push
shrb
gs
outsl
add
or
fcoml
pop
out
or
icebp
ds
ljmp
cli
pop
outsl
dec
hlt
push
std
test
lahf
or
cwtl
dec
shrb
lret
and
push
xor
das
and
leave
cmp
lahf
push
in
insb
mov
sahf
test
fildl
inc
pop
xor
inc
das
or
sub
shrl
mov
pop
ds
scas
les
or
push
dec
stos
rcll
jae
icebp
ja
in
mov
lret
push
jmp
ret
cmp
dec
lds
mov
int3
incl
int
imul
push
fldl
xchg
mov
inc
sub
or
cmpsb
test
xchg
lea
jle
mov
cli
sbb
sahf
das
iret
push
in
xor
test
scas
xchg
xor
out
fildll
add
dec
ret
ljmp
mov
jae
lcall
jb
dec
outsl
loope
push
xor
mov
ljmp
jmp
filds
dec
cvtpi2ps
loopne
call
mov
xchg
ss
addr16
add
sbb
iret
dec
or
iret
ljmp
ljmp
and
dec
and
out
mov
mov
enter
leave
mov
cmpl
shrb
nop
xchg
repnz
jo
in
sub
pop
pop
out
push
std
mov
add
mov
fcos
xor
mov
mov
cmp
push
xchg
dec
mov
mov
lret
dec
adc
pop
push
add
and
mov
xchg
in
enter
xor
jno
sti
add
pop
add
cmp
pop
enter
or
and
stc
call
xor
xchg
and
lods
lock
loop
insl
scas
xchg
aas
and
mov
jno
mov
sbb
scas
adc
cmc
cmp
jecxz
aam
dec
dec
lock
into
mov
xlat
shll
mov
mov
and
add
xor
mov
or
fstpl
sarl
mov
mov
stc
pop
push
out
das
vmwrite
xorl
add
incb
xor
add
mov
aas
jge
in
movsl
sub
add
add
mov
cld
sbbb
cmpsl
aas
add
test
ret
inc
clc
stos
addb
enter
xor
int
xchg
mov
aaa
inc
add
out
add
lahf
jb
push
test
pop
xor
pop
cmpsb
mov
pop
enter
adc
pop
add
jbe
lahf
jnp
aas
pop
fldl
lds
or
mov
insb
sbb
test
movsb
clc
dec
fdivp
or
cmp
lods
push
mov
sahf
sub
xchg
stos
add
fstps
imul
cmp
add
inc
jbe
aas
bound
pop
popf
movsb
imul
mov
mov
lret
push
adc
movsb
jno
dec
movsl
sbb
sbb
jnp
outsb
xor
jae
sbb
push
lea
jecxz
addl
jecxz
arpl
pop
xorb
push
dec
imul
sbb
jmp
add
jb
push
popf
sbb
adc
sbb
imul
sbb
ss
jbe
hlt
test
lcall
std
fs
js
mov
and
push
addr16
ja
fimuls
leave
mov
scas
daa
in
aaa
mov
in
add
test
sub
gs
adc
mov
push
arpl
mov
sti
rcrb
jl
sub
rolb
pop
pop
add
adc
push
mov
sbb
adc
add
add
pop
or
test
push
cmp
push
lret
xor
or
iret
xor
fisttpl
push
pusha
jmp
add
js
int3
cmp
out
mov
dec
xchg
jle
add
aad
fadd
sti
scas
testl
test
mov
insl
data16
inc
push
xchg
outsl
scas
hlt
ds
sarb
aad
sbb
enter
iret
add
inc
std
push
lods
lods
pop
out
jb
mov
sub
jo
daa
xor
stos
push
rcrl
mov
push
pop
pop
lea
add
push
dec
addl
inc
xchg
in
xchg
dec
mov
testb
repnz
and
push
inc
test
out
xchg
mov
or
push
repnz
sbb
cs
test
lods
hlt
jecxz
push
sbb
loopne
movsb
inc
movb
sbb
js
in
imul
pop
sbb
mov
ljmp
sarb
addb
in
or
clc
mov
cs
das
xchg
mov
out
call
movl
add
scas
lods
out
aad
mov
fldl
push
pop
push
stos
adc
xchg
test
mov
add
xchg
outsl
sub
xchg
lock
fiaddl
mov
mov
push
scas
mov
cmp
xchg
test
mov
lods
in
or
mov
into
mov
mov
call
push
and
xchg
cwtl
or
add
jl
in
ds
mov
lods
mov
adc
outsb
in
addl
push
ret
add
lcall
movsb
inc
movsl
daa
clc
or
iret
sbb
in
fs
fdivrl
movsb
pop
adc
dec
adc
cs
xor
jnp
mov
xchg
dec
outsb
outsb
lds
gs
jns
mov
pop
pop
or
add
push
enter
cs
stos
sub
cmc
add
mov
add
lock
fucom
lcall
dec
inc
aaa
adc
mov
movsb
repnz
lcall
sub
das
pop
jge
adc
push
jb
jmp
add
cmc
dec
enter
add
pop
xorb
scas
adc
lcall
dec
xchg
adc
add
or
call
fxch
stos
jle
fildl
mov
xchg
inc
jl
mov
xchg
lods
loope
xor
mov
inc
inc
gs
xchg
vandnpd
or
or
pop
movb
lods
cld
roll
sub
add
xor
inc
jle
mov
lcall
stos
movsl
test
add
fldenv
add
adc
jecxz
cmp
stc
rolb
lea
add
add
xchg
cmp
inc
lods
out
jmp
cmp
lock
lods
sub
add
divl
inc
xchg
add
jbe
pop
test
jle
das
fs
ljmp
iret
cmp
lret
leave
je
test
mov
and
jl
cwtl
or
jnp
adc
sub
jle
popa
test
popf
pushf
aas
dec
sub
in
xchg
out
imull
dec
mov
add
orl
inc
xchg
cmp
and
dec
sub
add
repz
out
jae
and
es
and
rcr
xor
ss
add
inc
pop
inc
jo
int3
int
add
ret
enter
movsl
js
out
ja
scas
add
jmp
dec
loope
dec
loopne
sub
and
add
adcl
outsb
subl
xor
jnp
ds
jecxz
mov
popf
jecxz
and
add
cwtl
cwtl
rcrb
fcmovnb
nop
pop
jnp
outsl
and
push
sbbl
je
dec
sbbl
sub
cwtl
aaa
push
sbb
xor
dec
lret
negl
pop
mov
push
std
push
pop
mov
scas
and
sub
std
popa
pop
es
mov
mov
jge
inc
mov
jb
loop
pop
fnstcw
popa
push
jle
add
mov
xchg
push
ja
out
test
cmp
or
inc
push
xchg
sub
mov
pop
fsubrp
mov
xchg
fisubrs
jl
mov
add
add
rorb
or
mov
add
mov
ret
call
iret
rcrl
jl
roll
rclb
testl
pop
mov
loope
adc
push
les
leave
push
add
gs
rcll
add
jnp
ret
rcrl
lret
call
test
icebp
add
faddl
roll
pop
xchg
jp
je
sub
add
pop
sti
mov
adc
dec
dec
add
add
leave
packsswb
out
dec
mov
add
movsl
sbb
ja
test
jb
mov
mov
jle
adc
lcall
int3
fadds
lods
mov
pop
js
sti
xorl
add
dec
add
jp
js
or
add
cwtl
ds
xor
push
jg
sbb
or
cmpsb
fldl
add
pop
mov
cmpsl
mov
inc
jp
mov
adc
inc
add
imul
xor
fidivl
add
test
xchg
xorl
jle
push
jb
rcrb
push
sub
xchg
jge
pop
aaa
and
fs
add
bnd
fwait
pop
push
repz
add
mov
outsl
mov
add
jne
push
jmp
out
out
mov
pop
lods
cltd
bound
push
aaa
add
incb
add
pop
clc
push
add
cld
xchg
leave
decl
pop
dec
add
push
add
stos
push
fcoms
ficomps
mov
das
mov
sub
mov
bnd
pop
lods
add
inc
xor
out
or
lock
lea
aas
add
mov
movsl
arpl
add
cwtl
stc
das
sub
test
add
xor
inc
sti
popf
cmp
and
push
inc
int
cmovns
or
dec
sub
xor
mov
inc
add
in
pop
and
int3
outsb
das
and
test
aam
xchg
faddl
dec
in
or
out
lock
mov
push
lock
add
jle
adc
mov
add
aad
jg
shrb
jmp
add
inc
jno
xlat
fwait
pop
pop
fldenv
orb
lret
hlt
daa
dec
and
testb
add
scas
lahf
mov
clc
adc
lock
xchg
and
and
sub
lea
inc
xor
or
out
inc
lea
cmpsl
aas
push
mov
lods
addl
inc
arpl
add
clc
ds
ja
pop
pop
fistps
int
addr16
stos
add
sub
addl
add
outsb
lret
xchg
pop
pop
outsl
add
push
mov
add
dec
add
add
lahf
ret
test
cmp
mov
sarb
je
sub
insb
pop
jl
sub
push
scas
into
xor
push
fwait
ss
std
and
or
fwait
and
mov
mov
pop
or
rolb
push
mov
addb
data16
push
dec
scas
mov
imul
pop
movsb
lahf
lret
add
inc
push
xor
cmp
iret
or
xlat
fadds
add
iret
mov
push
arpl
std
pop
scas
mov
pop
dec
xchg
in
fsubrs
add
sub
sub
pushf
cmp
dec
fcompp
mov
arpl
or
scas
out
xor
xchg
sub
imul
sub
push
in
in
fnstenv
int3
dec
inc
cmp
loopne
nop
sbb
test
or
ficomps
jo
rorb
nop
sti
dec
inc
les
cmpsb
inc
fbld
shl
and
jnp
outsb
dec
add
ja
mov
cmp
int3
jno
out
ret
push
inc
push
lods
out
xor
sub
adc
add
stos
pusha
enter
cmp
jne
inc
ds
inc
call
sbb
psllq
mov
adcb
popa
jo
add
out
mov
adc
add
int
sub
cmp
sub
ljmp
out
fisubl
in
daa
jmp
add
lcall
das
ljmp
nop
push
fldt
imul
push
into
test
int3
sti
adc
sarl
mov
or
add
xlat
iret
or
pop
dec
dec
dec
fdivs
add
cmp
cmp
sbb
mov
jno
lods
mov
icebp
push
mov
and
mov
inc
aad
lcall
roll
in
popa
mov
push
add
cmpsb
mov
loop
jg
ss
leave
jae
sbb
test
add
lock
sub
lret
int3
mov
xchg
sbb
mov
dec
insl
mov
add
mov
dec
out
mov
loopne
negb
test
test
repnz
call
adc
sahf
aad
shll
pop
sbb
lahf
test
pop
into
arpl
jp
cmp
cmp
leave
add
pop
outsl
clc
dec
mov
dec
ror
push
push
add
roll
add
mov
dec
add
imul
add
imul
jbe
xor
nop
lock
sti
arpl
mov
data16
add
addb
or
in
add
lds
mov
js
jmp
cmpsl
fildll
sub
push
inc
push
les
imul
inc
sub
aam
icebp
mov
lods
and
and
shlb
xlat
push
lea
outsb
into
cmpsb
ljmp
mov
xor
mov
lcall
or
repz
push
shll
pop
mov
jnp
bound
and
mov
gs
in
add
sub
sbb
cmp
jg
test
ret
inc
and
rcl
jp,pn
jae
in
add
push
cmp
lret
add
lahf
add
xchg
lods
lss
mov
push
enter
push
mov
repnz
inc
loop
mov
jb
mov
stc
scas
je
call
cwtl
mov
mov
fs
add
push
dec
imul
subl
stos
js
int3
inc
shll
int3
add
cmpsl
jge
lret
cmp
iret
minps
or
push
test
push
mov
dec
inc
test
incb
or
push
pop
call
lahf
sbb
arpl
mov
xchg
mov
fs
cmp
out
mov
jle
push
std
int
hlt
mov
adc
std
inc
loope
add
push
sub
jno
dec
jns
lock
out
mov
mov
test
mov
cmp
jo
iret
dec
aaa
leave
mov
dec
inc
outsl
cmp
or
jecxz
je
lods
lds
lea
das
mov
ljmp
sbb
in
add
xor
add
movsb
add
mov
adc
sub
iret
or
sbb
fsubrs
jl
adc
shlb
jge
sub
sbb
inc
imulb
add
or
inc
xchg
sbb
sarl
add
push
arpl
dec
inc
jo
xchg
mov
mov
je
cmp
and
js
xchg
jge
pop
daa
les
or
dec
lods
insl
jg
add
xor
mov
jns
scas
ret
dec
aad
mov
jo
adc
lahf
addb
adc
push
call
inc
jmp
fmuls
idiv
mov
sti
add
test
and
push
add
clc
mov
add
mov
add
jmp
cltd
ljmp
outsl
cmpsb
adc
mov
add
push
jae
pushl
cmp
mov
xorb
arpl
mov
outsl
jge
sbbl
pusha
rclb
add
jle
icebp
lock
xor
out
lahf
or
das
jle
push
add
insl
into
dec
dec
lret
cmp
inc
lds
fs
enter
addr16
mov
es
shll
xor
insl
sub
inc
adc
push
sub
add
xchg
test
dec
out
mov
pop
jns
add
imulb
add
int3
lea
jge
enter
dec
sbb
add
adc
mov
iret
in
rolb
push
sub
adc
jle
dec
imul
xchg
cmp
dec
sahf
fiaddl
mov
sub
or
pop
pop
inc
push
scas
outsl
push
or
mov
pusha
add
gs
test
fwait
mov
cltd
scas
mov
inc
xchg
aad
jne
xchg
or
xchg
cli
xchg
rcl
arpl
mov
scas
inc
mov
iret
add
or
sub
jle
sbb
sub
add
dec
dec
jg
sbb
aas
jo
push
ret
pop
lcall
sbb
insl
or
xor
add
jo
push
push
and
stc
in
rorb
add
inc
jmp
pusha
pushl
dec
add
add
cmp
in
das
push
insl
sti
add
lock
fdivrs
out
pushf
inc
ret
std
mov
mov
dec
sub
div
xchg
pop
sbb
add
mov
add
dec
mov
out
imul
cmpsb
add
ret
movl
mov
inc
mov
clc
add
sub
sti
out
adc
adcl
fwait
xor
adcl
fildl
push
inc
loop
movb
clc
xor
adc
mov
jecxz
decl
ss
mov
push
scas
cmc
mov
dec
jge
cltd
xchg
pop
jmp
add
call
fdivp
lods
fists
add
test
cmp
call
arpl
dec
enter
or
and
pushf
sub
mov
or
outsb
cltd
pop
cmp
popa
mov
icebp
lock
cwtl
add
dec
cs
pop
mov
hlt
or
lret
pop
xlat
lahf
mov
ret
leave
dec
icebp
mov
push
call
flds
int
in
lret
lods
lds
aaa
add
stos
movsl
scas
sub
ficoms
int
popf
or
xor
add
xchg
scas
mov
sti
push
aam
pusha
sbb
mov
enter
xchg
pop
ja
sub
sub
mov
lcall
fcoml
scas
shrb
popf
mov
xor
mov
dec
je
jle
ljmp
stos
in
mov
mov
scas
push
fldt
dec
inc
add
daa
jmp
mov
dec
outsl
mov
clc
rclb
sbb
mov
inc
test
pop
rcrb
push
imul
adc
cs
popa
cmp
mov
orb
or
mov
test
mov
cmp
dec
adc
mov
insl
inc
js
jg
scas
subl
pop
mov
xlat
loope
mov
cld
call
imull
fcomps
inc
dec
jb
mov
out
xchg
loopne
fsubrp
into
cwtl
sbb
mov
sbb
sub
jne
in
rcll
stos
dec
or
mov
cmp
fidivrl
push
jge
push
sti
add
mov
cmp
add
add
xchg
or
mov
push
push
or
cmp
mov
dec
mov
sub
bound
push
push
shr
fisttps
popa
sbbl
mov
xchg
xchg
cmc
jne
lea
je
lock
sqrtps
sbb
in
lret
nop
inc
faddl
pop
add
ljmp
mov
fldcw
add
int
jo
popf
add
sahf
inc
cs
repz
xor
adc
jbe
sbb
add
inc
add
sbb
mov
push
add
rorb
das
or
add
sarl
imull
leave
and
in
push
loope
sub
cmp
sbb
push
lret
cmpsl
pop
ret
daa
test
dec
ss
push
add
loope
dec
imul
xchg
stc
iret
dec
popf
test
xchg
push
lahf
dec
shl
outsb
popf
cmpsl
mov
pop
scas
mov
call
test
add
dec
xlat
outsl
push
popf
clc
enterw
or
add
stos
inc
les
fidivrl
or
xchg
cmc
xchg
inc
cmp
add
les
push
incl
mov
xchg
lret
stos
lds
mov
mov
mov
push
popf
sub
add
insb
pushf
add
pop
pop
add
mov
jle
aam
sub
inc
stos
pop
mov
add
sbb
pop
iret
je
add
iret
and
sar
repz
aas
andl
or
movsl
mov
mov
add
iret
adc
add
mov
mov
fsub
add
sub
orl
enter
das
xor
or
and
dec
dec
testb
out
push
stos
fsub
loope
add
cmp
or
cmp
mov
mov
xor
movsb
jge
sbb
pop
xor
lret
push
bound
gs
xchg
xchg
xchg
gs
lret
adc
addb
mov
and
cs
jbe
ja
imul
and
add
mov
rcrb
mov
out
scas
mov
add
mov
cmp
lret
hlt
mov
loope
in
aas
mov
je
js
dec
add
rcrb
cmpsl
fisttpll
add
mov
push
pop
mov
add
add
repz
fiadds
pop
add
ror
inc
add
addl
add
je
ljmp
fcomp
ret
pop
rcpps
mov
or
pop
add
add
popl
movsb
lret
je
add
jp
sub
mov
mov
add
add
add
insl
add
inc
mov
cld
sti
push
fcomi
and
mov
add
mov
lcall
jmp
stos
dec
orb
add
pop
sbb
inc
pusha
fs
insl
shll
incb
push
test
inc
add
sti
xor
push
sbb
fidivs
rcrb
iret
cld
cmp
js
fistpll
nop
xor
add
pop
add
or
push
add
sub
dec
inc
cmp
ds
cmp
or
or
push
mov
cmpsb
cmp
add
jp
sbb
popf
arpl
mov
cmp
in
mov
push
mov
and
add
les
testb
cmc
sbb
insl
faddl
js
dec
xchg
sub
xchg
ds
dec
in
dec
mov
xchg
aaa
fildl
mov
es
add
jae
jg
les
cmp
in
push
mov
mull
sbb
scas
out
add
add
bound
xchg
outsl
outsl
ud2
dec
clc
ret
pop
call
pushf
or
or
ds
hlt
lret
push
inc
jno
and
test
jo
sub
lahf
loop
pop
adc
fnstcw
int
scas
add
test
dec
femms
imul
cli
dec
add
cmp
mov
sahf
jbe
mov
inc
add
and
xchg
add
nop
push
jg
mov
movsl
jno
mov
ss
fs
stc
mov
hlt
cmc
fistps
stos
sarl
inc
pop
push
dec
lahf
cmp
lahf
sbb
loop
stos
into
adc
add
sub
add
xchg
shlb
sub
aas
xchg
xchg
sbb
popf
inc
mov
ret
jnp
fisttpl
push
filds
inc
sub
or
push
fnstcw
ljmp
add
pop
js
add
adc
ret
cmp
add
mov
int3
cli
mov
out
shrl
scas
add
push
add
movb
ljmp
inc
test
js
add
arpl
gs
or
mov
inc
add
insb
sahf
add
jns
lods
in
push
xor
xchg
inc
lret
inc
sar
data16
or
mov
xchg
arpl
ret
lahf
out
adc
inc
sub
inc
les
leave
dec
dec
mov
or
sbbb
mov
add
in
sbb
add
or
adc
dec
loopne
pop
ficomps
scas
cmp
push
jno
mov
sbb
sbb
insl
mov
imulb
pop
fildl
xchg
and
rolb
hlt
test
jge
mov
inc
mov
xchg
jbe
xchg
xchg
mov
test
out
add
mov
add
and
shlb
aam
lret
xchg
test
mov
sbb
scas
xchg
xchg
outsb
add
push
idivl
das
testb
outsl
inc
xchg
xchg
les
loopne
inc
mov
mov
into
add
mov
ret
js
cmpsb
movsl
mov
loopne
lock
mov
pop
data16
push
add
cmc
push
jbe
pop
idivl
loope
sbb
sub
mov
jp
sbb
inc
add
addr16
movsl
push
cmp
cld
adc
mov
push
std
mov
gs
pop
or
lret
xchg
bound
in
and
pushf
or
int
addl
test
into
mov
ror
dec
jge
int3
in
jnp
call
adc
jp
call
push
sub
iret
dec
testl
push
mov
mov
xor
cmpsl
movsl
and
and
lods
and
cltd
iret
fwait
mov
sub
xor
stos
mov
pop
inc
xor
ljmp
mov
mov
mov
cs
test
jbe
imul
mov
outsl
inc
minps
out
insb
mov
daa
xchg
pop
out
lea
dec
test
insb
sub
push
or
fisubrl
fstps
or
bound
sbb
cmp
pop
jae
cld
sub
push
movsb
or
rorb
pusha
out
dec
and
leave
push
push
ss
sbb
jle
jmp
and
clc
mov
rolb
mov
inc
clc
ss
sahf
jmp
pop
mov
lock
add
fdivl
jo
xlat
add
push
add
mov
xchg
insl
add
sub
push
out
jb
push
enter
dec
outsb
or
sub
pop
adc
and
mov
mov
add
cs
push
ficoms
add
cltd
inc
mov
ret
mov
test
fwait
push
outsl
ds
in
mov
xor
add
sti
xchg
movsl
addr16
inc
jnp
push
aas
cwtl
lret
ret
outsl
loopne
test
in
xor
aad
sbbb
pop
out
inc
xchg
add
cmpsl
fsubrl
cwtl
xchg
add
mov
movsb
push
and
addb
inc
and
hlt
addl
outsb
cmp
mov
sbb
push
imul
adc
sub
in
and
lahf
jmp
scas
ffreep
andb
aas
lea
jnp
loope
xchg
fadd
cmp
push
incb
xchg
mov
and
inc
into
inc
xchg
fs
jmp
push
out
test
in
lods
mov
bound
cmp
lea
mov
jmp
call
sbb
jns
and
jecxz
jge
dec
cli
in
mov
mov
in
daa
inc
sbb
adc
sti
lds
std
inc
and
vfpclassps
mov
and
cmp
sub
fmull
cli
ret
xchg
sub
lret
nop
adcb
inc
pop
addr16
jg
scas
pop
sub
fiaddl
inc
mov
test
cmpsb
orb
shll
enter
cmp
xor
pop
jne
fsubl
mov
adc
cwtl
dec
xor
loope
repz
movsbl
aaa
faddl
adc
xor
cmp
inc
fwait
add
aad
add
jecxz
add
repnz
fdivrl
add
pop
shlb
mov
add
out
jno
sahf
ror
daa
adcb
and
test
sbb
into
jo
dec
add
orl
into
lret
pop
and
jmp
inc
nop
into
pop
ja
cmp
mov
int3
or
xchg
mov
lods
add
imulb
mov
jae
pusha
popl
sbb
add
add
mov
popf
je
scas
out
subb
mov
or
sar
jge
add
pop
stos
add
into
or
movsb
inc
or
jmp
or
add
and
fwait
call
adc
dec
pop
mov
inc
pop
fdiv
xchg
and
add
fsubp
nop
daa
or
clc
sbbl
test
jb
and
sti
add
imul
dec
mov
int3
add
xchg
sbb
sub
in
sbb
jne
clc
mov
sbb
inc
push
clc
jmp
movsb
loop
lahf
mov
mov
enter
push
xchg
lock
ss
jo
add
sub
push
js
mov
push
std
cli
sub
xchg
xor
scas
fldl
dec
out
inc
xor
cli
int
lock
mov
add
add
sbb
decl
ret
mov
je
imul
mov
add
mov
or
jbe
mov
ss
adc
mov
out
cli
push
add
roll
jnp
inc
inc
push
out
shll
add
lods
xor
mov
jns
scas
into
fucomp
adc
pop
push
fisttpl
or
dec
push
out
gs
sbb
or
out
popf
in
xchg
filds
mov
jae
lcall
test
push
mov
dec
or
sahf
test
rcll
sti
fs
lock
inc
cli
add
int3
add
cmpsb
iret
sarb
xor
std
lea
push
lods
pop
cmp
jnp
iret
shrb
and
lods
stos
jg
xchg
inc
xor
mov
flds
and
das
mov
sar
rcrl
add
dec
mov
sbb
add
frstor
jne,pt
adc
stos
mov
push
jnp
push
imul
push
lcall
push
mov
push
add
mov
icebp
mov
pop
shr
jne
dec
sbb
or
add
add
mov
stos
pop
inc
sub
pop
mov
aaa
scas
cld
pop
aaa
xchg
sar
lret
clc
or
adc
jp
or
clc
sub
dec
jne
and
add
jg
pop
sbbb
rorb
mov
add
sbb
out
mov
mov
jb
add
ljmp
out
xchg
inc
inc
sub
jl
push
mov
icebp
and
cmpsb
xchg
mov
and
sub
mov
dec
add
insl
add
iret
add
out
adc
pop
xchg
notl
test
lods
or
ljmp
sbb
dec
mov
scas
ja
sbb
push
and
push
adcb
cli
int3
cmp
pop
daa
or
outsb
inc
add
sub
subb
je
icebp
icebp
pop
and
push
hlt
pop
add
xchg
jp
cmp
clc
enter
lahf
das
cmpsl
sbb
jns
lret
and
ss
sahf
jp
ds
insb
lahf
js
push
das
clc
cmp
lret
dec
jmp
shrb
loope
mov
daa
mov
xor
bound
nop
in
mov
jnp
mov
and
mov
dec
sbb
inc
mov
xchg
sub
xor
push
sbb
sub
leavew
mov
mov
stos
test
mov
cltd
popf
mov
mov
test
iret
nop
out
decl
cld
sub
sbb
fwait
adc
andnps
and
nop
and
das
cwtl
jge
push
outsb
cmp
out
out
jnp
clc
inc
mov
dec
test
push
inc
sbb
das
push
ret
lea
inc
out
sub
orb
mov
aam
into
sub
ret
outsb
lahf
cmp
add
mov
pop
add
stos
sub
xor
stos
pop
mov
or
insb
mov
inc
insb
push
xchg
fldl
push
xchg
adc
push
mov
mov
jmp
mov
imul
push
jne
jecxz
dec
in
mov
inc
mov
add
mov
mov
mov
pop
out
adc
mov
mov
pop
add
mov
movsb
xchg
lret
faddp
int
add
push
cli
and
add
pop
jnp
jno
or
les
mov
inc
in
add
ja
pushf
movsl
cwtl
add
aaa
mov
mov
add
add
xchg
int3
mov
add
mov
mov
add
add
rclb
pushl
shlb
sub
pushf
ret
loope
std
jae
in
aaa
std
or
add
add
xor
add
jb
std
cmc
jbe
out
dec
or
add
pop
stos
fisttpll
mov
push
fwait
leave
iret
jne
out
imul
push
std
sub
loope
out
popa
sbb
and
addr16
add
inc
sbb
inc
sbb
pop
hlt
sbb
in
rcrl
mov
lea
mov
mov
ss
movb
fwait
xchg
jo
push
je
add
cmp
sbb
cwtl
jg
mov
lret
mov
leave
dec
add
bound
add
stc
and
ja
mov
add
cwtl
lahf
addl
add
mov
jmp
add
fstl
or
das
add
push
mov
scas
iret
xor
pop
dec
mov
sub
jne
mov
cwtl
push
lret
or
out
and
int3
imul
inc
xchg
das
dec
adc
rolb
scas
repnz
push
dec
lea
xchg
adc
sbb
mov
xchg
fdivs
bound
inc
add
inc
arpl
bound
adc
movsl
aaa
rolb
pop
add
dec
or
dec
xchg
cmp
popl
dec
ret
inc
dec
iret
in
push
push
jnp
inc
mov
push
call
rcl
rcrb
in
imul
mov
sbb
xor
scas
adc
stos
jns
out
add
mov
arpl
mov
pop
add
jns
cmp
sbb
inc
out
cmpl
add
in
andb
js
rorb
push
movsb
lret
dec
insb
das
sub
int
or
dec
cmp
pop
push
push
inc
jecxz
inc
sbb
enter
sub
insb
inc
push
fcoml
loope
ffreep
push
fs
adc
lods
push
ljmp
sbb
jge
sub
enter
pop
jp
or
repz
mov
imulb
cli
jg
jg
fstl
dec
je
jbe
call
cs
sub
add
xchg
mov
jmp
mov
in
push
lret
adc
inc
lock
frstor
jmp
mov
add
testl
push
addr16
and
xchg
jp
out
xchg
addr16
mov
or
sahf
pusha
imul
inc
sub
enter
jnp
gs
dec
sar
xchg
inc
je
mov
jl
mov
inc
popf
or
or
xor
or
mov
push
jno
push
arpl
mov
mov
nop
push
push
push
dec
movsb
add
or
jo
mov
push
loopne
ljmp
adc
ja
mov
push
lods
addb
out
bound
in
add
out
cmp
xchg
gs
or
xchg
enter
mov
adc
and
push
scas
adc
xor
repz
adc
mov
pushl
push
add
gs
es
add
out
jne
iret
pop
dec
int3
cltd
mov
mov
mov
pop
adc
and
add
std
and
mov
mov
scas
dec
and
leave
ret
add
pusha
sbb
pop
cmpsb
popa
add
cmpb
jg
xchg
je
or
ret
fistps
xor
rcrl
xor
cmpsl
push
dec
in
jns
insl
imul
clc
mov
fcomps
outsl
test
pusha
cmpsb
mov
pop
and
or
pop
in
add
mov
aas
ja
out
adc
scas
int3
and
mov
cs
push
add
shrb
outsl
mov
push
add
add
shlb
sbb
dec
mov
jno
or
popa
popa
add
popf
aaa
incl
pop
xchg
aad
lods
mov
fwait
dec
int3
scas
xchg
int
nop
in
loopne
cs
mov
adc
inc
adc
sub
ret
lret
sti
outsb
mov
mov
call
xor
fwait
push
add
add
or
mov
inc
test
or
scas
or
sub
add
pop
fcompl
das
das
add
xor
cmp
push
add
mov
stos
inc
or
lods
add
jp
out
add
sub
jle
into
push
pop
js
push
lock
out
cmpl
jl
ret
inc
mov
xchg
sub
iret
and
sub
aaa
pop
scas
and
add
dec
pop
mov
lret
sbb
outsb
add
sbb
in
rcl
inc
sub
imul
jnp
add
inc
cmp
aam
add
mov
cs
sbb
mov
cld
mov
sub
sbb
pop
sbb
fs
lods
enter
fs
xchg
xor
add
jne
mov
pop
add
aam
mov
xchg
leave
inc
push
dec
test
fisubl
xchg
ret
add
add
stos
mov
and
add
add
mov
inc
pop
clc
iret
mov
pop
les
dec
icebp
add
stos
cmp
lret
xchg
add
movsb
outsl
outsl
inc
dec
fcmovnu
add
clc
inc
loope
mov
jno
jle
adc
add
xor
adc
and
xor
rcll
into
jno
push
pop
movsb
xlat
jge
mov
inc
mov
rorl
add
mov
imul
xor
ror
xor
or
add
scas
jmp
add
sbb
xor
mov
mov
push
push
mov
movsb
pop
mov
pop
fistps
add
mov
je
pop
jno
sub
mov
lods
xchg
pop
mov
add
mov
aam
leave
cld
xchg
ss
xchg
out
dec
loope
inc
repz
inc
out
aaa
xor
ljmp
sub
and
outsl
add
dec
dec
sbbb
mov
mov
clc
les
call
iret
lret
imul
jecxz
sbb
mov
xchg
xchg
fstpl
mov
pop
cmpsb
xchg
mov
scas
mov
add
fnstenv
ljmp
das
add
out
dec
xchg
add
xchg
jo
sub
pop
add
jmp
sarb
lods
idivb
ljmp
add
lea
filds
ret
or
scas
sahf
es
push
jl
cwtl
and
cmp
pusha
arpl
add
pop
adc
sahf
or
push
sbb
xor
jg
repnz
xlat
sbb
incl
push
out
fists
pop
popf
popf
jle
iret
test
jl
and
mov
dec
pop
mov
idiv
daa
rcl
shrl
pop
repnz
popf
mov
xlat
inc
insl
or
push
in
mov
mov
mov
test
cmp
test
cmpsl
pop
xor
cmp
or
ret
mov
dec
mov
add
add
inc
mov
out
dec
fwait
pop
sbb
cmp
rcrl
movsl
sub
add
sub
pop
lea
jmp
out
xor
dec
sbb
mov
rclb
xor
jmp
rorl
inc
and
aad
test
mov
in
data16
ja
scas
inc
jne
mov
dec
inc
orb
arpl
leave
clc
cwtl
jae
sahf
mov
adcb
movsb
hlt
sub
mov
sub
mov
inc
int3
out
bound
xchg
and
and
cmp
adc
cmp
lret
fcmovb
mov
mov
in
inc
or
adc
mov
mov
loop
jns
or
out
xchg
sub
hlt
mov
jmp
jg
mov
mov
jmp
orb
nop
jmp
push
pop
jnp
jmp
fs
pop
add
or
es
mov
adcl
ja
dec
push
iret
stos
add
daa
ja
inc
js
incl
stc
inc
arpl
xor
add
mov
dec
push
inc
pop
loope
adc
scas
adc
inc
sahf
into
and
ret
xlat
mov
movsl
mov
dec
push
xlat
jo
popa
inc
imul
out
xor
push
dec
in
or
pop
adc
mov
xchg
inc
hlt
lock
data16
movaps
mov
add
ss
add
in
sbb
mov
jns
inc
mov
shlb
sahf
and
leave
and
into
cmp
mov
lods
add
xchg
sbb
mov
popf
cld
sahf
jns
xchg
push
hlt
cli
sub
xor
out
stos
jne
cmpsl
in
xchg
and
xchg
je
or
icebp
decb
icebp
mov
push
push
inc
push
mov
jbe
and
mov
inc
jge
pop
fisubs
cli
mov
mov
pop
lock
inc
daa
pop
dec
dec
incb
data16
repz
adc
aaa
cmp
bound
out
test
dec
sbb
ljmp
out
adc
and
shrd
cmpsl
loopne
mov
or
mov
bound
rolb
adcl
mov
mov
jae
fcoms
aam
dec
fs
testb
icebp
inc
arpl
fisttps
add
mov
pushf
mov
push
pop
int3
push
push
add
fmuls
movsl
out
xchg
mov
loop
adc
push
out
or
mov
cltd
in
jo
inc
lea
push
add
sbb
out
popa
sbb
mov
add
cmp
test
push
add
lds
movsl
and
push
fsubrl
mov
jmp
inc
push
adcb
out
aaa
ljmp
out
and
push
sti
data16
in
pop
mov
es
cmp
push
dec
jbe
test
adc
add
stos
inc
add
clc
push
pop
mov
fldenv
dec
add
add
xchg
push
roll
add
cmc
lods
add
add
out
add
sahf
lock
xchg
inc
xchg
incl
add
fs
fdivr
xchg
scas
or
daa
mov
into
int
add
jmp
rcrl
mov
lock
scas
mov
fucomi
inc
mov
pop
cmp
pop
sti
xchg
movsl
and
hlt
out
sti
pshufw
add
stos
mov
add
imul
push
pop
add
fisttps
jbe
xchg
cmp
ss
add
push
xchg
add
pop
adc
dec
add
in
add
dec
add
aam
fimuls
into
in
add
stc
pop
mov
add
add
add
jb
fstpt
jns
jp
aas
jmp
or
or
loope
pop
add
outsl
ret
sahf
pushf
add
sub
push
dec
add
shlb
ja
or
add
ret
add
imul
or
fcompl
in
ret
repz
mov
lock
dec
xor
out
ljmp
mov
into
and
cmp
aad
push
dec
scas
add
pop
cmp
inc
push
pop
jae
add
add
add
ljmp
testb
mov
outsl
fdivrp
add
andl
xor
sbb
mov
loope
push
add
pop
add
popf
xchg
adc
add
pop
ror
pop
pop
mov
mov
int
add
in
out
lds
pop
xor
stos
mov
cli
push
mov
in
inc
adc
test
std
fs
pop
iret
add
cmp
cld
dec
int
nop
or
sub
xor
and
pusha
pop
add
cmp
fwait
add
xchg
add
clc
sub
mov
mov
lods
movl
sbb
inc
ds
cld
pop
and
sub
pushf
xchg
adc
inc
fdivrl
cmp
cmc
dec
scas
ljmp
push
mov
or
mov
sub
popf
shlb
mov
xor
aas
sbb
addr16
rclb
add
inc
loop
les
lea
dec
outsl
das
clc
out
xchg
add
jle,pt
jmp
mov
movsl
pusha
xchg
xlat
dec
notl
jno
leave
rol
movq
push
or
ds
mov
pusha
inc
xchg
inc
insb
iret
pop
fsubrs
xor
outsb
sub
aad
gs
add
popa
adc
lret
inc
adc
int
cmpsb
sbb
xchg
test
lock
push
add
add
sub
testb
cmc
jge
mov
mov
incw
pop
sbb
inc
jl
pop
iret
add
cltd
push
in
inc
jg
js
fs
cli
lds
lret
call
roll
fwait
dec
loopne
cmpsb
add
in
mov
fildl
cmp
pop
mov
sub
add
adcl
adc
add
push
dec
jae
std
xchg
jecxz
pusha
in
mov
jno
pushf
mov
nopl
dec
add
das
cmp
push
ffreep
mov
pop
cmp
pop
push
mov
je
in
jge
add
sub
inc
add
lods
mov
or
ja
pop
dec
outsl
ja
dec
cmpsb
mov
xorl
inc
sti
lahf
mov
shll
imul
cmp
lock
mov
ret
adc
stc
jnp
mov
add
sub
cmp
add
int3
sbb
stos
and
dec
jg
stc
push
xchg
adc
xor
add
fs
add
in
pop
in
enter
sub
add
push
and
jecxz
in
or
ljmp
push
dec
nop
or
dec
divb
push
stos
mov
loopne
pop
ljmp
cli
cld
and
sub
inc
imul
add
leave
and
addb
popl
pusha
addr16
dec
sub
orb
in
push
std
insb
jg
or
push
cmp
dec
xor
jae
orl
add
mov
rcrl
push
pop
jae
or
enter
push
push
mov
jne
or
add
pop
cmp
out
loope
pushf
out
add
iret
das
dec
adc
jge
inc
sub
daa
push
in
jne
add
ds
xor
dec
xor
mov
cld
or
adc
add
je
popf
mov
dec
add
inc
and
shlb
cmpsl
push
movsb
jmp
xlat
aad
outsl
imulb
lret
sub
repnz
mov
testl
inc
mov
testb
and
das
cmp
inc
inc
movsb
pop
out
pop
or
lods
mov
lret
xchg
int3
data16
mov
sbb
pop
lret
push
lret
inc
das
xor
leave
imul
mov
add
xchg
in
hlt
sarl
mov
pusha
test
add
inc
pop
shlb
add
aaa
dec
ljmp
mov
add
adc
push
test
divps
and
arpl
aad
or
fwait
sbb
fadds
sub
test
adc
or
shlb
shr
adc
lods
hlt
or
in
out
aas
inc
mov
xor
mov
out
push
and
dec
sub
adc
push
fiaddl
mov
add
inc
push
inc
pop
imul
fcos
sbb
cmp
xor
jecxz
es
jmp
push
gs
mov
mov
mov
cmp
cmp
pop
inc
or
int
fstp
lahf
js
call
add
or
cmp
add
ficomps
push
fbld
scas
lods
push
les
xchg
lods
insl
and
icebp
out
outsb
inc
lods
popf
and
sbb
outsb
shlb
xchg
call
dec
push
add
pop
or
int
sbb
lods
subb
aas
out
cmp
pop
insb
leave
mov
enter
push
jmp
shrl
adc
xor
pop
add
mov
dec
xchg
add
cmpsl
in
loopne
pop
mov
cmp
into
repz
mov
adcl
or
xor
xchg
or
cmp
sti
jp
lret
add
cmpsb
fldl
in
test
jmp
sub
mov
out
pop
adc
add
add
js
mov
mov
pop
out
lcall
cld
fdiv
push
or
jmp
testb
test
loopne
xor
xchg
shll
std
ljmp
pusha
mov
in
pop
pop
fildll
add
adc
std
add
add
std
pop
xchg
or
ja
xchg
add
or
ja
stos
jg
repz
sub
daa
mov
data16
mov
xor
dec
mov
sahf
mov
jg
dec
add
jl
ficomps
mov
or
mov
cltd
dec
adc
dec
adc
jp
mov
cmp
ds
sti
adc
andps
push
or
jp
imul
push
add
mov
sbb
lahf
pop
jae
sti
sbb
cli
dec
inc
push
and
out
pop
cs
push
sar
sti
mov
es
add
rcll
mov
out
push
dec
mov
add
hlt
lods
and
add
and
mov
dec
in
outsl
dec
into
icebp
lret
add
aaa
jns
test
js
aas
mov
mov
incb
cwtl
xchg
cld
mov
or
pop
cmpsl
push
mov
lret
jl
pushfw
mov
push
pop
arpl
es
call
enter
pop
push
pop
jg
sub
cmc
fwait
add
xchg
cmp
inc
dec
arpl
pop
xlat
in
insl
in
push
adc
add
les
imull
subl
fimuls
xor
push
or
add
pop
loopne
pop
out
add
xor
xor
xchg
and
loope
lahf
add
pop
lds
popa
mov
dec
mov
frstor
repnz
dec
int
sub
imul
sub
int
roll
and
lock
pop
and
inc
add
add
mov
push
es
ljmp
mov
sub
add
outsb
cmp
mov
js
aas
fnstenv
ja
xor
inc
test
stc
push
xor
lods
push
insl
loop
xchg
test
mov
test
sahf
and
enter
add
adc
jo
dec
or
push
xchg
roll
in
add
addr16
mov
sub
adc
mov
mov
mov
push
ss
adc
testl
sbb
mov
sub
xchg
mov
add
or
ret
add
jnp
add
daa
adc
xchg
aam
je
shlb
push
test
push
orb
mov
enter
inc
or
insb
lods
gs
gs
add
cwtl
dec
xor
push
test
add
nop
out
aad
inc
wrmsr
or
jo
ret
frstor
jne
inc
and
cmpb
jns
enter
or
jne
or
fdivs
adc
cmp
or
dec
out
add
jnp
push
jbe
xchg
dec
jp
mov
or
sti
in
pop
xchg
push
push
subl
mov
mov
movsl
add
push
in
pushf
in
add
and
int3
testb
pop
xor
xor
insb
ljmp
inc
sub
add
jmp
mov
jmp
outsb
sub
ljmp
and
addb
mov
inc
iret
and
sbb
xor
xchg
adc
and
xchg
rolb
pop
lret
fcmovnu
lock
jnp
cltd
mov
sldt
imul
or
fnstsw
gs
mov
push
iret
movsb
lret
inc
shlb
dec
popa
add
and
add
push
outsl
aad
lods
repnz
cmp
inc
inc
add
add
add
add
fwait
addb
sub
add
jle
int3
sbb
out
lret
push
jge
pusha
mov
add
add
adc
pop
adc
cmp
insl
inc
movsl
loop
add
inc
mov
out
cmp
xor
mov
or
push
cmp
popa
mov
sub
xchg
mov
adc
popa
nopl
mov
insb
aam
pusha
add
add
xchg
sub
add
or
add
adc
add
testl
pop
stos
add
mov
mov
adc
sub
add
lock
push
sbb
mov
add
in
mov
add
daa
pop
test
insb
and
dec
and
xchg
arpl
addr16
int
adc
stos
lods
gs
xor
cmp
sbb
sbb
orl
inc
pusha
adc
and
dec
inc
movsl
movsl
sbb
data16
xor
loopne
icebp
and
add
mov
and
sub
gs
in
stos
sub
add
adc
mov
gs
andb
adc
outsl
arpl
xchg
cmp
jo
insl
stos
dec
xchg
stc
sub
je
sbb
scas
in
imul
insl
jmp
pop
sbb
pop
mov
jl
mov
push
cmp
iret
push
sub
icebp
sbb
mov
add
int
ficompl
pop
mov
mov
add
xchg
movsl
jmp
xchg
ret
stos
xor
iret
imul
sub
pop
push
add
mov
popf
test
popf
xchg
mov
mov
push
ret
add
outsl
add
icebp
xchg
mov
std
dec
jmp
fwait
add
cs
loope
out
dec
mov
adc
sub
movsb
cmp
push
fisubrl
mov
jo
jecxz
les
test
add
add
xor
mov
aam
roll
in
data16
pusha
xor
mov
stc
addr16
xchg
invd
shrb
dec
cmpsl
xchg
std
add
cmp
mov
mov
xchg
and
pop
mov
outsb
cmp
add
shrb
fcomp
in
outsl
sub
cmp
daa
movsl
and
add
faddl
xor
mov
das
ret
cs
cmp
mov
add
scas
mov
das
repnz
es
push
push
cwtl
cltd
add
sub
loopne
add
iret
arpl
add
xchg
pop
movsl
sub
idivb
outsl
push
mov
ret
fsubrl
pop
adc
aaa
pop
add
je
and
xchg
push
rclb
add
xor
in
add
fsubrs
add
dec
cs
xor
push
inc
fistpl
add
sbb
pop
cmp
sub
sbb
pop
push
add
mov
add
jmp
into
add
push
imul
sbb
adc
add
stos
test
inc
mov
sub
add
es
push
add
test
xor
stos
aam
jmp
iret
add
and
rorb
adc
sub
das
nop
out
bound
popa
lret
faddl
aad
add
sub
add
mov
subl
cmp
xor
test
arpl
push
add
pop
cs
add
and
add
dec
inc
roll
enter
cli
out
inc
xor
add
dec
aad
mov
push
add
fmuls
insl
add
out
aaa
lret
add
inc
movsl
and
adc
mov
inc
popa
fwait
mov
add
aas
enter
and
mov
sub
add
dec
cld
add
xor
inc
sbb
add
mov
nop
jb
les
add
aad
adc
inc
or
pop
add
mov
incb
add
leave
dec
add
dec
outsb
add
add
lahf
or
add
scas
clc
insl
xchg
push
testb
repnz
mov
int3
pop
or
pop
inc
add
jae
sub
into
push
jne
leave
xor
jmp
into
loop
mov
std
xchg
rcr
xchg
movsl
das
and
cmpsl
stos
mov
std
sub
fdivrp
fs
inc
add
outsb
cli
aad
out
jb
outsl
add
dec
sarb
and
adc
cmp
add
sbb
nop
fidivl
sub
adc
lods
inc
inc
repnz
xchg
lcall
push
sub
mov
adcl
or
add
lahf
fists
xlat
xor
das
inc
push
push
in
add
js
aas
mov
add
add
fs
imul
inc
add
sbb
aad
jno
jg
movb
cmp
dec
test
add
scas
jb
mov
loop
idiv
loopne
jb
aad
adcb
mov
sub
cmp
jmp
mov
inc
xchg
or
and
out
mov
mov
jbe
sarb
inc
mov
pop
insl
and
pop
push
mov
ja
fdivr
and
push
sub
stos
cli
lcall
sub
mov
xchg
dec
dec
pop
imul
mov
xor
inc
popf
arpl
mov
and
add
inc
cli
test
movsb
inc
mov
fwait
jmp
mov
filds
add
add
add
andb
pshufw
mov
add
addr16
rorb
pop
shlb
out
sub
gs
sti
cmp
push
cltd
in
mov
cmp
or
xchg
hlt
inc
add
sahf
push
movl
iret
bound
lahf
pop
lods
scas
lret
add
test
mov
mov
xchg
jg
mov
jmp
dec
lods
inc
in
mov
das
mov
inc
add
fst
mov
push
jp
add
mov
inc
add
scas
std
add
push
lods
lods
cmp
je
pop
lcall
repnz
dec
push
int
sub
neg
int3
icebp
add
sbb
mov
add
add
or
xor
cmpsl
sub
rolb
lea
add
or
mov
aam
inc
mov
dec
xchg
sub
test
es
push
xlat
ret
pop
daa
mov
std
loop
xchg
pop
mov
out
movsb
dec
repz
lods
dec
lds
lret
add
cmp
sub
ja
jmp
shlb
daa
inc
mull
jp
add
ud1
add
mov
adcb
and
xchg
fxch
dec
int
lea
cli
or
add
insl
ret
mov
sbb
sbb
sbb
add
lcall
daa
jmp
sub
or
out
add
mov
add
mov
cmpsl
jo
mov
shll
das
ds
fisttpl
and
das
in
push
or
xor
nop
in
icebp
or
icebp
pop
in
repnz
add
bound
lock
inc
push
out
cld
sub
sbb
sub
es
adc
decb
pop
scas
out
xchg
or
cmpsl
adc
ret
iret
movsb
mov
lret
dec
enter
push
add
lret
ds
aam
mov
in
push
js
mov
repnz
lea
mov
stos
push
lods
movsb
ss
fcompl
pop
pop
std
insl
call
mov
insb
or
or
jne
ds
cs
jmp
inc
loopne
add
in
push
orl
push
es
ficomps
fimuls
insb
add
jg
sarb
push
mov
cmc
test
orl
adc
repz
imul
add
inc
xor
inc
add
add
cmp
and
mov
lahf
mov
insl
mov
clc
popa
out
jl
ret
gs
mov
inc
fcoms
leave
pop
mov
cld
push
loopne
mov
or
mov
and
dec
jmp
sub
test
push
xor
or
hlt
lret
mov
test
jns
int
sahf
test
insb
mov
mov
xchg
repz
lahf
push
and
inc
lods
push
xor
pop
ss
dec
dec
inc
ficomps
out
mov
in
ss
mov
pop
outsb
mov
dec
add
addr16
pop
mov
lds
add
mov
cltd
and
push
add
add
sub
mov
lcall
cs
pop
sbb
sub
inc
sahf
cmp
xor
dec
lret
sbb
add
gs
inc
int3
dec
add
jb
stos
and
mov
or
out
roll
outsl
push
mov
rcr
jle
dec
mov
jbe
bound
test
xor
or
sbb
mov
xchg
sbb
scas
adc
push
mull
push
aaa
movl
outsl
add
dec
mov
xchg
imul
adc
dec
out
ss
dec
leave
jl
jne
sbb
pop
stc
aaa
loopne
call
xchg
cmpsl
cmp
movsb
out
sub
add
fidivl
cmp
add
out
pop
decb
lods
out
test
jb
dec
cmpsl
adc
in
outsl
pusha
pop
or
add
in
in
jge
jecxz
mov
push
and
outsb
sahf
mov
test
data16
mov
push
das
in
testb
add
add
dec
lock
mov
addb
in
xchg
cli
mov
cld
and
or
fcompl
cli
es
add
repz
daa
xchg
incl
jo
enter
lahf
mov
xchg
out
or
jne
push
mov
insl
add
outsb
in
je
push
cmpsb
sbb
dec
pop
pop
rcl
std
movsl
cmp
and
inc
dec
aas
pop
push
or
lds
inc
sbb
lret
and
ljmp
inc
inc
mov
add
jb
add
xchg
fistpl
add
add
mov
fidivrl
sete
int
dec
or
nop
inc
inc
mov
dec
lea
add
xchg
fs
jns
mov
cmp
add
lds
jg
mov
inc
lea
push
xor
scas
mov
jmp
rorl
mov
add
add
sub
dec
add
pop
cmp
addb
pop
dec
inc
xor
icebp
das
lods
and
jg
insb
or
push
dec
add
jg
sbb
aas
jmpw
pop
das
xor
not
mov
dec
orl
stos
int3
push
xchg
in
insb
imul
dec
nop
mov
or
xor
xor
jle
lods
loop
adc
push
push
es
and
push
inc
dec
jp
scas
in
in
inc
inc
shrb
and
cld
testl
mov
pop
mov
inc
push
dec
mov
cmpsb
xor
call
imul
sahf
push
mov
out
cmpsl
addr16
lods
dec
adc
lods
jg
add
incb
mov
pop
and
cmp
pop
ror
sub
ljmp
mov
push
cmp
aam
jle
push
leave
js
data16
pusha
fmull
mov
cld
mov
push
add
mov
cmpsl
mov
ror
mov
movsb
aas
stos
pushf
xchg
add
lea
scas
xor
mov
mov
cmp
cmp
popa
jo
fcoml
jo
xchg
into
out
add
scas
add
and
add
pmuludq
mov
inc
xchg
cmp
xlat
and
xor
insb
sub
xor
fs
cli
mov
rol
adc
inc
mov
lock
std
dec
adc
lods
sub
inc
test
xchg
add
add
jbe
add
add
fwait
add
movsb
push
jp
mov
cmp
mov
icebp
sti
aaa
xlat
dec
pusha
ret
push
sbb
jp
inc
jg
rorl
lret
imul
mov
pushl
add
pop
js
adc
jmp
pop
ja
lahf
cmp
je
or
cmc
add
jnp
aas
pop
mov
xor
or
mov
rol
fsubr
in
test
inc
scas
cli
mov
add
jno
in
add
jle
sub
xor
nop
inc
popl
adc
arpl
lret
and
mov
cs
inc
ja
sahf
push
jae
and
jb
cltd
out
test
not
mov
cwtl
add
add
inc
sbb
xchg
dec
and
les
imul
in
xchg
sub
gs
mov
dec
adc
setg
pop
loope
fimuls
push
add
add
and
outsb
xchg
daa
out
jns
lret
mov
mov
mov
lds
movsl
stos
sub
and
out
xchg
nop
mov
mov
out
stos
mov
std
fwait
cmp
insb
je
lret
jp
mov
jae
test
jge
test
add
cmc
push
lock
cltd
mov
pop
mov
and
daa
enter
mov
ds
mov
add
sbbb
sbb
lods
mov
jmp
xchg
sbb
nop
gs
add
roll
add
dec
cs
fwait
insb
jb
dec
xor
cmp
filds
sbbb
add
mov
or
ret
push
sbb
add
push
add
outsb
jne
repnz
fldl
sbb
add
lds
xchg
fiaddl
add
pusha
dec
and
into
mov
outsb
add
or
sub
movswl
add
dec
aas
or
pushf
push
popw
sets
push
insl
cmpl
cld
data16
mov
in
jmp
rolb
cmp
push
out
insb
mov
std
jb
test
cmp
into
pop
xlat
ret
jbe
or
add
mov
jle
and
xor
jg
pop
scas
out
lods
pop
gs
pop
lock
hlt
outsl
xchg
sbb
xor
call
call
add
pushf
add
gs
dec
je
inc
push
add
add
or
sarl
mov
add
imul
add
stos
fldcw
pop
jo
xor
je
add
rorl
arpl
lret
jae
fstl
out
lret
adc
in
add
dec
stos
inc
add
mov
add
adc
ljmp
repz
cli
adc
mov
or
add
lods
fcmovnb
xorb
subb
sub
jmp
std
jmp
xchg
jae
xchg
and
scas
stos
lds
in
dec
mov
das
inc
add
negb
pop
add
insl
ss
mov
mov
cld
lods
outsb
add
push
push
push
add
xor
mov
sub
sarb
xchg
pop
mov
fstpt
add
stc
aaa
icebp
adc
sub
adc
test
mov
aas
push
lods
out
lret
icebp
in
out
dec
mov
push
notl
mov
aaa
xchg
mov
jae
mov
insl
fisubrl
cmp
add
add
add
mov
xor
add
xchg
jge
mov
das
push
out
add
nop
in
add
daa
jg
mov
lods
mov
out
add
mov
add
rol
cmp
or
and
push
test
outsl
add
push
push
mov
hlt
push
pop
and
and
arpl
faddl
sub
test
inc
mov
or
pop
cmp
xchg
mov
sti
inc
lds
xchg
xchg
out
pop
or
es
mov
adcb
and
movsb
and
xchg
cmpsb
stos
outsb
jnp
and
add
adc
add
movsb
std
adc
mov
push
and
icebp
xor
xchg
xchg
add
push
push
ficoms
test
or
fstpt
out
fstps
push
sbb
lea
shrb
jecxz
xchg
add
mov
cmp
test
jnp
sub
sub
lret
pop
fistpl
add
pop
mov
add
inc
sub
pushf
jmp
or
into
or
add
cmp
add
fs
loope
jecxz
cmp
pop
fsubs
out
add
shrb
add
mov
lret
lds
mov
add
out
xor
adc
lahf
es
adc
mov
sub
insb
stos
sub
jmp
add
in
rclb
adc
add
or
add
in
data16
jne
loop
lods
jl
add
sub
push
call
add
jp
clc
pop
fwait
lods
dec
gs
sub
or
add
lret
out
sub
test
repz
fisttpll
pop
add
rcrl
mov
add
out
in
push
adc
add
mov
sub
test
scas
add
addl
add
xchg
cmp
sbb
mov
add
sbb
or
loope
cwtl
cld
adc
add
or
das
lods
sti
sub
xchg
ljmp
roll
adc
out
test
jle
add
push
and
fldl
lea
mov
adc
xchg
push
ret
mov
pop
std
mov
pop
popf
stc
add
xchg
fadds
sbb
jge
jecxz
popa
jb
out
js
mov
in
xor
add
jnp
mov
inc
cmp
push
jno
dec
outsl
lcall
repnz
or
mov
insb
repnz
and
mov
imul
add
pop
jg
into
sbb
mov
mov
dec
arpl
push
dec
rcrl
outsl
fidivs
scas
into
sub
pusha
les
inc
adc
sbb
xchg
push
sbb
add
xchg
movb
int3
inc
add
test
adc
add
pop
jp
adc
adc
add
stos
sbb
into
xchg
mov
or
int
pop
fwait
mov
jo
cmp
movsl
and
inc
sbb
push
or
out
xlat
out
mov
or
xchg
and
xchg
test
xlat
mov
dec
lcall
shr
mov
cwtl
push
cmp
pushf
scas
stos
lcall
enter
into
inc
loopne
pop
das
sbb
pusha
fsubp
addr16
out
outsb
out
jecxz
pop
cld
insl
addr16
sbb
push
jp
add
or
jne
imul
dec
inc
arpl
xchg
lds
sti
mov
pop
sbb
loopne
add
outsb
outsb
lods
lock
jo
pop
sub
xor
adc
mov
cmp
pop
add
push
push
std
data16
sbb
enter
sub
aam
sub
adc
jecxz
pmuludq
mov
enter
scas
pop
aam
pop
adc
inc
ret
push
sbb
dec
repz
inc
add
jge
push
mov
mov
pop
cmp
or
mov
cmpsb
jg
jne
push
cwtl
outsl
inc
mov
add
add
scas
int3
popa
add
addl
mov
js
imul
es
sbb
pushf
lret
add
int3
pop
addl
popf
in
loope
in
in
add
adc
ljmp
fstpl
pusha
insl
shlb
add
cmp
dec
jo
pusha
push
enter
dec
pop
add
push
jbe
and
ret
adc
add
sti
daa
add
and
pop
xor
mov
adc
cltd
ja
pop
add
out
lock
xchg
int
push
iret
add
sahf
and
xor
pushf
stos
cmpsl
movb
out
push
repnz
add
lret
xchg
mov
add
scas
add
inc
sub
std
jmp
cmp
outsl
add
fdivrl
and
sub
sbb
ds
rcrb
aad
roll
jge
push
add
mov
insb
pop
dec
jae
fadds
push
pop
out
out
call
push
push
cwtl
sahf
test
lea
lret
lret
dec
pop
push
add
in
pop
les
add
sti
xchg
stos
cmpsl
aam
push
add
add
into
lret
xchg
mov
adc
or
xchg
fucom
cmp
bsf
out
sub
jge
add
fiaddl
add
pop
add
add
add
add
jecxz
add
add
ltr
lret
aas
add
jno
cmp
loope
add
sub
xchg
cmc
add
add
mov
cmpsl
sahf
add
add
add
mov
add
iret
add
test
iret
das
loopne
adc
add
cli
add
xlat
add
add
pop
das
dec
rclb
divl
add
lahf
add
add
outsb
aaa
aaa
fmull
and
add
add
shll
cmp
mov
jl
pop
add
into
add
add
test
icebp
pop
ja
add
pop
add
fwait
out
push
sub
jmp
fwait
rcr
add
ret
add
add
ja
addr16
add
push
add
add
xchg
stos
dec
add
xor
push
sti
add
and
shlb
add
adcb
inc
fldl
in
add
mov
dec
or
cmpsl
aas
add
mov
add
out
add
add
push
dec
jg
scas
cmp
add
add
inc
pop
fwait
add
sbb
ficomps
mov
pop
add
cmp
xor
add
loopne
inc
incb
inc
sti
add
cmp
cld
or
add
add
mov
pop
add
lahf
add
stc
fwait
add
add
add
stos
add
ljmp
popl
push
dec
add
mov
lock
dec
add
add
testb
push
push
popa
pop
add
add
add
pop
imul
dec
add
dec
add
add
jle
nop
jnp
adc
pusha
lret
out
add
nop
add
mov
ja
sub
xchg
pop
add
xchg
pop
add
fldl
mov
add
jns
jge
decb
add
fsubl
add
or
mov
jp
cld
lahf
sub
or
fdivrl
add
rolb
pop
add
insb
push
push
add
add
add
nop
add
std
add
loopne
in
mov
adc
pop
cwtl
test
pop
popf
add
cld
add
xor
add
addb
sahf
add
lret
js
add
out
add
add
push
add
add
dec
mov
xchg
add
dec
ret
add
add
rolb
stos
testb
hlt
push
adc
jno
pop
add
sahf
xchg
add
call
dec
add
xlat
add
adc
fsubs
lret
lret
jp
hlt
int3
out
cltd
push
decb
mov
add
sti
add
add
add
add
fadds
cli
fldl
mov
lahf
sbb
add
cmp
fmul
add
jle
adc
add
fadds
jmp
add
mov
inc
sahf
mov
add
pop
lock
add
inc
add
add
add
hlt
dec
nop
add
lret
add
cli
add
xlat
add
push
add
mov
pop
arpl
jne
mov
or
or
dec
divl
icebp
mov
dec
jnp
add
notl
add
loopne
push
mov
push
xchg
add
setge
add
and
lret
pop
jo
aaa
pop
add
add
pop
add
aas
flds
mov
out
add
jo
add
xchg
add
adc
outsl
jge
je
jg
insl
jl
push
stc
add
add
or
outsl
outsl
add
nop
add
mov
iret
sub
add
add
and
and
fdivrp
pop
add
add
sub
mov
add
aad
add
add
aas
add
pop
ds
cmp
inc
js
pop
std
add
scas
dec
add
mov
das
add
add
rolb
fiadds
inc
fildl
int
aaa
add
add
ficomps
verw
add
add
addr16
sti
add
mov
mov
push
scas
incb
dec
fldl
outsb
out
add
stos
add
pop
addb
sahf
add
add
in
mov
daa
push
fs
into
lret
scas
push
jnp
mov
and
sti
mov
add
xchg
add
add
add
and
xchg
cmp
pop
push
add
sub
xchg
addr16
fs
add
fstpl
add
adc
xchg
mov
mov
add
push
cmpl
jp
inc
xchg
mov
add
add
pop
add
add
dec
xchg
inc
add
add
xchg
pushf
and
add
add
push
add
rolb
push
lea
add
add
mov
cmp
add
ljmp
xlat
lock
add
pop
add
add
in
cmpsl
add
xchg
inc
dec
inc
add
pop
add
loopne
out
std
add
cli
add
xlat
add
iret
add
add
add
add
out
add
adc
push
cltd
fldl
sub
cmpsl
ret
and
add
add
add
ja
inc
movsb
add
add
adc
mov
add
imul
add
add
push
add
arpl
mov
add
jne
inc
fldl
push
faddl
dec
lds
dec
into
pushf
add
sub
mov
cmc
add
testb
insb
add
add
dec
add
add
inc
dec
add
out
add
scas
add
dec
add
xor
push
xor
or
add
popa
add
add
bnd
inc
es
push
add
imul
out
ret
or
faddp
or
addr16
cltd
jmp
fadds
add
and
sbb
out
or
or
je
insl
push
jmp
dec
imul
xchg
mov
push
inc
into
sahf
fidivs
fs
dec
cmp
aas
sub
pop
mov
test
or
loopne
je
jle
cmp
jge
mov
out
cli
lock
cmp
insl
out
call
enter
pop
jle
movsl
shl
cmpsl
or
cld
adc
pop
xchg
rorb
int
icebp
lret
xor
lcall
test
imul
js
sub
in
adcb
orb
shll
jno
adc
add
add
add
or
popa
filds
lahf
mov
add
add
sub
sub
add
add
sbb
sub
add
aas
add
adc
in
push
add
or
push
enter
push
rorl
push
mov
push
jo
push
outsb
add
push
sbb
add
add
movsl
add
repz
add
push
add
inc
dec
add
add
add
add
add
pop
addb
lods
add
mov
les
add
add
js
rolb
data16
add
lea
add
add
add
sti
add
add
fiaddl
dec
out
add
add
add
add
sub
adc
lea
and
add
cmp
aaa
iret
add
pop
into
add
lret
add
add
scas
mov
jle
add
daa
add
xor
loope
add
sub
outsl
jge
add
insl
add
mov
or
add
or
daa
add
add
aas
add
adc
insl
add
add
insl
add
push
pop
xchg
testb
push
add
add
add
add
push
add
fmuls
leave
add
add
mov
js
pop
add
and
insl
push
add
add
cmp
add
push
add
mov
add
pop
add
add
pop
add
das
add
das
add
sbb
add
add
pop
add
scas
add
add
jp
or
add
add
push
adc
push
add
add
jo
hlt
pop
insb
add
jmp
push
xchg
add
add
add
add
popl
aas
mov
and
add
and
add
mov
sbb
add
xor
jg
add
lods
stos
add
add
enter
lahf
add
in
mov
add
int
cmp
add
int
sub
add
xchg
push
outsl
mov
add
add
mov
in
add
lock
fsubr
add
imul
adc
or
add
cmpsb
add
pop
pop
cmp
add
add
add
add
cmp
mov
add
repz
add
pop
add
add
add
sub
ret
call
aaa
pop
add
xchg
mov
test
dec
add
push
add
dec
add
dec
add
jne
inc
aas
add
add
in
add
outsb
add
jmp
aaa
sub
sub
add
push
add
add
jg
popw
jno
add
add
jge
add
test
push
add
add
pop
adc
jge
add
cmpsl
add
lods
add
add
enter
lahf
add
test
add
repnz
loop
add
add
xchg
ja
add
loope
sub
push
lods
add
filds
push
sbb
mov
out
add
add
sub
add
add
incl
dec
sysret
add
add
add
out
fldt
add
add
fcoms
fsubs
add
sub
pop
pop
add
dec
add
jmp
add
add
add
push
add
ret
add
add
test
xlat
out
add
add
insb
add
xchg
xchg
add
jg
mov
add
es
mov
add
add
add
add
and
cmp
add
fiaddl
scas
add
scas
add
cltd
stos
add
add
fildl
aad
add
lea
and
add
rolb
mov
add
mov
cmp
call
mov
sbb
dec
add
popa
out
add
ljmp
add
and
dec
imul
pop
add
or
push
out
xchg
sbb
add
and
add
sub
shrb
add
mov
mov
add
add
add
add
add
dec
add
add
add
xchg
bound
add
sldt
add
mov
add
add
add
add
js
sar
add
add
xor
add
ljmp
fiadds
lret
dec
sbb
push
outsb
add
pop
add
add
iret
add
loopne
int
add
sti
out
mov
xlat
add
add
add
jle
lret
add
jnp
js
add
add
popf
add
add
testl
add
popl
jl
add
add
xor
add
add
sub
dec
scas
add
scas
add
add
pop
add
cwtl
add
sbb
add
add
add
outsl
ja
repnz
add
jle
stc
jnp
js
push
add
add
incb
incb
sub
jo
inc
cmp
push
imul
cmp
outsb
insb
add
lods
pop
dec
movsb
loop
add
push
and
sbb
mov
dec
dec
fadds
adc
jl
pop
out
and
fwait
inc
push
shlb
push
sub
mov
adc
insl
xchg
xchg
cli
subb
int3
mov
xlat
int
xor
add
add
mov
pop
fimull
and
add
mov
mov
imul
add
popf
mov
in
repnz
sub
add
popf
or
jl
and
inc
add
lea
or
int
inc
cltd
dec
or
std
imul
add
ret
mov
insb
add
icebp
mov
in
and
fwait
lods
dec
xchg
mov
add
lret
loop
cmp
jge
es
insb
jae
pop
and
stos
add
dec
sub
lods
int
mov
dec
push
pop
jmp
add
les
psraw
xchg
icebp
sub
dec
push
lcall
lods
xchg
sarl
push
sbb
nop
sbb
dec
in
mov
cltd
js
add
stos
pop
aam
pop
push
repnz
mov
cmp
das
das
lahf
lds
fwait
add
pop
mov
mov
dec
and
cld
sti
xchg
mov
loope
test
orl
add
jge
jg
ret
add
cmp
sub
test
pop
lea
jne
jl
cmp
lock
mov
inc
js
and
outsb
out
adc
mov
fsts
ljmp
out
out
xchg
jae
add
dec
pop
push
into
pop
dec
sbb
ja
in
enter
pushf
es
mov
add
jle
cmovg
sub
repz
popf
cs
mov
stc
mov
pop
mov
int
mov
mov
repz
add
add
mov
pop
cmp
fadds
xor
pop
in
std
xchg
mov
in
add
outsb
cmc
lea
pop
add
xor
mov
in
jge
stos
imul
in
mov
cmp
cmc
add
dec
subl
je
daa
cld
cltd
dec
stc
mov
scas
or
fidivl
pop
int3
mov
sub
mov
mov
xchg
insl
dec
xchg
jge
xchg
mov
add
iret
or
aaa
cld
adc
xchg
jecxz
pop
outsb
insb
jb
add
ja
push
imul
pop
rcrb
sbb
and
dec
mov
dec
dec
inc
les
push
stc
sub
int
icebp
insb
mov
outsl
sub
push
je
cmp
cs
add
mov
and
dec
mov
orl
pop
adc
adc
and
addr16
add
data16
add
cmp
sti
fistpll
jmp
mov
mov
into
xlat
fcomps
push
push
jno
push
dec
fs
loopne
jbe
add
pop
jg
push
add
add
add
aas
pop
or
add
pop
outsl
stos
sbb
pushf
lds
dec
call
lret
dec
out
xor
mov
jmp
jno
mov
add
mov
lret
dec
inc
popf
pop
lcall
add
mov
popa
or
xchg
pop
jbe
cmpsb
test
outsb
aas
jle,pn
sub
test
adc
adc
sbb
or
inc
sub
fidivrs
loopne
int3
sub
dec
loop
push
xchg
xchg
add
add
ret
push
push
xchg
stos
or
not
repz
mov
idivb
ret
jns
add
shl
lods
hlt
repz
add
xor
sbb
add
popa
add
scas
out
clc
pop
repnz
jecxz
stos
adc
add
inc
out
out
pop
add
arpl
out
dec
lods
ret
lea
cmc
cwtl
and
dec
dec
jecxz
pop
add
pop
jno
add
add
scas
push
mov
movsl
lods
flds
shll
sbb
mov
xor
push
xchg
popa
jg
cmp
scas
add
cltd
arpl
push
enter
mov
inc
outsl
jae
adc
pop
jge
imul
packssdw
push
movsl
fdivp
and
push
cwtl
fwait
jb
push
xchg
gs
je
inc
or
dec
lds
pop
insl
dec
pop
jnp
mov
inc
cmp
mov
mov
add
and
in
fcom
les
ss
fcmovnbe
and
add
mov
add
add
into
insb
cmp
mov
leave
or
add
outsl
pop
in
push
add
jecxz
add
sbb
inc
adc
pushf
push
loop
jecxz
jns
in
add
imul
je
aaa
nop
sti
jge
mov
lea
dec
and
in
add
out
les
jecxz
mov
add
sti
and
inc
dec
mov
lods
cwtl
in
mov
inc
and
das
arpl
sbb
pop
cmpsl
sub
inc
aas
in
sub
sti
subb
jge
fwait
add
sbb
inc
icebp
lret
popf
in
in
push
add
add
popa
aam
cmc
scas
jmp
repnz
jbe
dec
in
ficompl
rorb
xor
jnp
add
jae
cmp
out
cld
inc
ljmp
push
dec
sbb
inc
cmpsb
addb
js
sub
test
sub
aaa
sub
adc
xchg
sbb
add
and
jno
add
dec
ja
cmp
inc
mov
jle
add
add
jecxz
jb
jmp
test
sub
test
in
add
imul
xlat
scas
lods
es
or
daa
inc
icebp
cmp
incl
xor
mov
pop
add
shlb
cmpsb
out
inc
leave
stos
sub
fsubs
outsl
aaa
loop
lret
imul
mov
mov
in
dec
das
aam
cmp
repz
inc
and
pop
xchg
jle
and
sub
dec
ss
jle
xor
shrb
lock
cmpsb
xchg
int3
dec
lret
adc
add
incl
add
or
cmpb
and
les
cmp
les
push
inc
dec
mov
arpl
movsb
pusha
jno
clc
add
or
xor
xchg
lret
cli
cld
jle
testl
xlat
inc
lret
lret
test
xor
jl
ret
sbb
int
adc
or
mov
lods
jnp
ljmp
enter
andl
lea
clc
mov
mov
in
mov
jae
xorb
mov
inc
jmp
push
mov
iret
lods
lret
insb
ljmp
sub
lret
push
pusha
lahf
sbb
in
pusha
adc
fisttpll
jne
add
xchg
fwait
out
in
into
add
ljmp
mov
dec
add
add
pop
mov
mov
lods
add
loopne
add
cmpb
mov
mov
push
cmp
sbb
fisttpl
popf
pop
arpl
mov
add
xchg
call
push
fwait
jb
testl
xor
lahf
adc
call
cmp
lods
lret
dec
add
div
sub
inc
std
mov
pop
lea
int3
imul
fucomi
pop
add
add
add
xchg
add
add
add
fldl
add
add
xor
mov
add
add
add
add
sbb
aas
into
add
add
cmp
lret
iret
inc
add
pop
add
mov
repz
mov
lcall
or
inc
jg
cmp
add
add
or
pusha
or
nop
add
add
push
sub
icebp
pop
add
pop
add
sbb
and
sbb
fldl
xor
add
add
cmp
or
add
cmp
or
add
dec
add
add
xlat
add
push
icebp
add
fldl
inc
int3
pop
add
add
add
fbstp
in
push
add
nop
add
incl
sub
add
jns
cmc
mov
push
add
jle
je
add
lods
add
rolb
add
add
xchg
in
lods
sub
xor
add
mov
loop
add
dec
add
scas
add
rolb
mov
push
lahf
pop
add
inc
jbe
add
cwtl
add
sbb
xor
mov
data16
jnp
add
add
add
mov
xor
pop
dec
add
xor
add
jo
sub
test
sbb
cld
cltd
add
add
jae
add
add
jg
mov
add
lret
add
add
das
add
ljmp
add
add
add
aaa
add
add
das
add
xchg
add
add
mov
add
lahf
mov
add
add
inc
push
add
add
addb
pop
pushf
add
add
gs
xchg
inc
push
add
data16
add
and
mov
add
pop
flds
add
scas
add
cltd
jo
loope
add
inc
add
pop
add
flds
rol
add
gs
xor
pop
mov
addl
fwait
add
ja
in
pusha
add
jge
loope
add
push
add
dec
add
add
std
xor
xchg
sub
xor
pop
add
pop
add
or
icebp
scas
add
addl
fwait
add
add
cmp
ds
add
lds
es
cmc
add
jo
jmp
out
add
fildl
mov
add
add
cmp
add
inc
mov
cmpsb
std
add
data16
add
dec
stos
icebp
fiadds
pusha
stos
add
add
sbb
movsl
fadds
inc
pop
add
lds
add
push
add
std
add
popl
stos
data16
xchg
mov
add
add
add
and
in
add
add
inc
add
sub
add
add
add
scas
add
adc
test
jge
dec
pusha
inc
loopne
add
jp
and
out
inc
add
mov
add
xor
fcmovnu
fbstp
xor
test
sbb
loopne
add
xchg
test
add
verr
add
push
add
rolb
lods
dec
aas
add
aas
add
cmp
adc
add
lret
jp
das
mov
adc
cmp
or
add
fildl
lds
add
popf
add
stos
push
dec
mov
mov
push
xchg
fnstsw
add
mov
add
int3
add
add
cwtl
add
add
arpl
xchg
jnp
stos
xchg
add
popf
add
sub
lret
mov
add
add
xchg
sarb
xchg
incl
lods
rorl
mov
leave
lds
and
add
lretw
mov
sub
push
fbstp
pop
add
pop
add
hlt
xor
sub
add
adc
pop
mov
data16
sbb
dec
imul
add
or
and
pop
rcl
add
popa
inc
pop
arpl
add
dec
gs
add
aad
jl
es
sbb
cmpsb
add
rcll
xchg
scas
outsl
add
jno
add
xor
add
and
repz
insb
jp
les
pop
cli
sub
test
repnz
orb
mov
fidivl
jl
add
rorb
dec
nop
add
stos
aam
mov
add
scas
and
ficompl
add
cs
rolb
ret
add
add
jmp
loope
add
fucomi
fadds
in
and
mov
jae
inc
xor
xchg
fiaddl
add
and
adc
lahf
roll
push
test
dec
shlb
add
push
sbb
sub
cmp
mov
dec
and
sbb
add
lock
add
and
cmp
cmp
cmp
cld
xlat
inc
cmp
lret
adc
int
shrl
bswap
stos
sbb
pop
inc
mov
inc
pop
inc
jl
jle
inc
add
cmp
add
and
xor
adcl
or
movsb
lcall
xchg
add
daa
jge
lods
cli
jecxz
add
mov
mov
jmp
fiadds
add
push
daa
inc
repz
rcrb
sbb
xchg
sub
mov
loop
add
roll
xchg
sub
adc
ret
fstps
int
xchg
jp
fldcw
add
ret
add
insl
adc
loop
out
loop
out
push
add
std
lret
mull
push
push
lea
jle
add
or
and
or
outsl
or
scas
mul
int3
add
cmc
pusha
mov
cltd
and
add
or
cmp
out
scas
jge
dec
mov
mov
jb
sbb
pop
inc
inc
dec
inc
add
dec
int3
add
mov
add
into
sub
add
cs
lret
add
add
pop
jl
insb
push
inc
mov
add
sub
xchg
mov
mov
xor
mov
adc
add
dec
pop
fmuls
insl
xchg
sbb
inc
dec
repz
mov
xchg
cwtl
mov
add
mov
xor
and
call
fcmovb
fld
imul
pushf
mov
add
sti
sub
outsl
lods
push
stos
add
or
push
movl
mov
and
push
or
dec
jmp
xor
jge
sub
add
addl
daa
decl
and
inc
mov
add
sub
mov
add
or
rclb
add
bound
xor
add
xor
in
or
jmp
pop
lret
xchg
repz
add
imulb
enter
pop
js
jnp
lea
mov
orl
sti
xor
inc
aam
insb
loope
jg
mov
add
mov
lcall
jl
mov
mov
add
cmpsb
inc
fimull
les
adc
movb
jge
mov
loopne
lods
jb
dec
or
add
fmul
call
inc
mov
sbb
inc
mov
adc
loop
in
cli
stos
add
sbb
add
jae
add
vprotd
add
ss
add
pop
out
add
sbb
pop
or
in
stc
pop
gs
xchg
mov
add
xchg
nop
pop
int
sub
and
xchg
insl
movsb
fstpt
int3
sbb
ja
add
xor
bound
add
stc
pop
fcomps
add
mov
dec
and
mov
imul
in
add
fstp
sub
xor
xor
movsl
enter
scas
mov
mov
out
stc
add
xor
mov
or
daa
jle
outsl
xchg
scas
lcall
add
add
and
fcmovu
aad
outsl
mov
pop
push
cltd
insb
mov
vpaddusb
test
mov
sahf
dec
lods
pop
inc
adc
push
mov
into
adc
add
mov
insl
xchg
add
xchg
dec
sub
inc
sub
add
pop
daa
sub
push
jmp
xchg
int
std
adc
fists
in
or
imulb
pavgw
dec
lret
mov
sub
sbb
or
inc
outsl
push
inc
inc
push
scas
cmp
pop
lret
scas
int3
pop
repnz
enter
pop
imul
add
in
ffreep
xchg
lahf
add
adc
dec
or
sub
idiv
pusha
ficoms
aam
pmulhuw
fwait
add
pop
adc
mov
lods
add
lret
adc
mov
shll
lret
dec
fldl
popa
leave
and
vpsrld
stos
pop
xchg
push
es
jecxz
scas
jo
ffree
ror
jp
sti
jb
movsl
out
fdiv
scas
push
dec
mov
es
imul
add
adc
in
jns
imul
mov
in
jo
mov
out
aaa
repnz
cmp
add
cltd
out
xchg
pop
pop
xor
jg
add
jge
jno
dec
mov
aas
daa
and
es
rol
icebp
imul
test
in
popf
ret
adc
xor
dec
inc
pop
add
mov
push
es
pop
mov
inc
pop
leave
movsb
shlb
imul
das
outsb
inc
push
imul
jecxz
lea
ds
inc
icebp
dec
sub
mov
adcb
cltd
sub
lret
cmp
daa
data16
jbe
nop
sbb
enter
mov
pusha
leave
sahf
cmp
cmp
aad
mov
sub
js
popf
repz
mov
test
pop
outsl
in
loop
xor
out
jg
add
into
loopne
mov
sahf
scas
xchg
in
sub
add
out
je
in
pop
lcall
add
jae
inc
sub
cli
clc
call
pushf
mov
jmp
sar
add
inc
sbb
lods
pop
jnp
outsb
or
sar
mov
mov
shll
sub
jb
cs
int3
sub
sub
mov
inc
add
cltd
lock
mov
add
inc
push
xchg
repnz
or
sbb
lods
or
push
cli
cmp
sub
popl
add
xor
jmp
clc
stos
into
loopne
jg
es
lret
mov
jbe
data16
pop
push
lods
pop
adc
mov
sub
xorl
add
fidivs
ds
jmp
das
cmp
ds
mov
imul
sub
arpl
das
add
movsl
fldenv
push
mov
scas
jle
xchg
mov
jae
add
sub
add
add
xor
or
mov
insb
sub
push
jmp
or
clc
inc
ljmp
scas
dec
pop
push
dec
xchg
orl
jnp
sub
bound
push
xlat
sbb
lahf
push
xor
add
mov
pop
push
mov
dec
pop
dec
add
sbbl
sbb
sub
jp
pop
int3
mov
or
outsl
sbbb
out
push
push
add
pop
out
test
add
mov
cmp
mov
popa
inc
push
les
imul
aaa
dec
cwtl
mov
and
iret
pushf
cmpsl
mov
mov
add
mov
jmp
outsl
out
dec
push
xchg
arpl
dec
sti
push
scas
inc
es
ret
cmp
outsl
sub
ficomps
filds
mov
add
mov
loop
push
js
jo
shrd
add
enter
jmp
test
pop
xor
push
sbb
in
cwtl
pop
add
popf
inc
mov
jne
jp
hlt
lods
divl
dec
sbb
and
out
int
sub
sbb
cmp
sbb
and
add
fdivrs
mov
jbe
fwait
pop
pop
ret
add
cwtl
or
or
fdivs
pinsrw
cmp
ss
push
or
xor
jle
bound
xor
cmp
push
scas
test
test
mov
push
aam
lock
cmp
mov
enter
mov
int
sti
xor
dec
jmp
mov
dec
stc
jecxz
add
cltd
jmp
sub
mov
push
lods
roll
mov
jle
pop
cltd
add
aad
arpl
pop
mov
mov
lcall
fwait
out
add
mov
int3
and
mov
jo
sbb
das
or
sbb
popf
ja
xor
stos
mov
jne
dec
lods
fwait
push
mov
sti
orl
xor
add
pushf
dec
cmp
mov
xor
mov
mov
cmp
sub
or
in
sti
or
lds
mov
shr
adc
cld
add
jle
inc
jp
ret
cmp
inc
push
iret
lea
pop
sub
sub
mov
test
pushf
add
mov
out
stos
cmpsl
mov
ficomps
test
rcr
add
mov
psraw
test
rorb
pop
ljmp
sub
mov
and
cld
add
int3
inc
or
loope
mov
int3
arpl
pop
cmp
sahf
pop
sti
addb
cmpb
jp
lods
xchg
add
jne
iret
add
rolb
or
jp
dec
lcallw
mov
flds
xchg
adc
mov
jbe
ds
dec
sub
xor
daa
es
xchg
push
outsb
lret
inc
in
int
call
add
push
xor
push
pop
inc
jg
jno
sub
in
cmp
ss
out
cmc
shlb
add
loope
or
sbb
fs
scas
pop
adc
sub
nop
lods
divb
mov
push
xchg
mov
orb
bound
push
or
or
pop
add
incb
fbld
dec
sbb
xchg
cmp
ror
pop
sahf
fstpt
loopne
mov
out
xchg
aam
fstl
ror
add
add
sub
cmpsl
lcall
pop
jge
lea
and
sti
out
push
sub
adc
fwait
out
add
add
int
push
mov
ret
mov
fs
dec
stc
jns
nop
jle
std
addr16
cwtl
call
daa
cmp
mov
sbb
add
mov
add
xor
aaa
cmp
and
or
lods
aaa
mov
jo
sbb
jns
pop
add
dec
inc
push
and
mov
jo
xor
lea
arpl
addr16
outsb
addr16
pusha
or
add
out
sbb
add
pop
add
add
xor
mov
mov
test
add
fiaddl
add
popf
add
ficoms
into
andl
imul
rcrb
popf
or
pop
mov
dec
add
push
and
add
fnsave
add
sub
stos
push
add
flds
rcrl
stos
inc
add
in
cld
cld
lret
jmp
inc
inc
add
mov
add
adc
cmp
adc
mov
push
fmull
mov
pop
sub
sub
push
add
out
xchg
jns
push
push
xlat
add
add
pop
push
sub
mov
inc
inc
dec
add
jmp
sbb
lret
push
jnp
icebp
add
jl
sub
lahf
add
imul
es
nop
cwtl
xchg
pop
pop
jae
add
inc
out
jle
add
add
mov
orl
inc
bound
xlat
lahf
test
jae
xchg
jmp
cmpsb
mov
mov
jnp
lds
addb
iret
mov
add
add
aas
add
aad
jmp
add
fsubrl
in
add
jecxz
adc
sub
gs
xor
rorb
pop
shll
sti
xchg
lret
add
and
lcall
sbb
sbb
cmpsb
mov
sqrtps
xchg
fisttpl
add
mov
xor
aas
add
add
sub
mov
add
ljmp
mov
pop
dec
popf
push
fs
sub
call
imul
add
outsl
out
or
add
mov
inc
int3
dec
adc
cmp
mov
add
mov
xchg
mov
adc
and
add
add
repz
scas
out
test
push
outsb
mov
lods
sub
repz
xchg
cmp
leave
mov
dec
mov
dec
les
dec
dec
mov
mov
popf
dec
rorb
push
xchg
pop
repz
cs
repnz
mov
fcmovnb
imul
ds
fldt
pop
add
mov
mov
inc
int3
ret
fimull
mov
bound
jnp
mov
imul
push
into
adc
add
lods
loop
inc
fwait
repnz
cmpsl
movsl
popf
ret
jge
loop
add
xor
cmp
and
add
xchg
insl
jae
in
mov
add
fwait
add
insb
popf
and
es
sti
sbb
cmpsb
xchg
sbb
leave
cmp
out
inc
pop
jnp
fs
insl
dec
push
in
add
fbstp
jp
popa
pop
xchg
mov
mov
out
or
sub
or
imul
push
incl
cmp
cwtl
out
aad
test
test
leave
xchg
mov
rclb
adc
js
subb
mov
mov
cmpsl
xor
sbb
add
out
fwait
ljmp
fcmovne
outsl
push
dec
mov
adc
xchg
mov
icebp
cli
jp
insb
insl
fs
cmpsl
add
add
dec
insl
xor
sub
sbb
push
dec
add
das
imul
into
jl
daa
xor
add
jno
add
or
jb
mov
mov
add
mov
sub
fdivl
mov
addl
or
jb
cmp
pop
addr16
mov
sti
adc
or
pop
sahf
bound
add
jmp
mov
xchg
jo
pusha
cmpsb
or
mov
jp
out
mov
inc
leave
ss
pop
ja
test
std
repnz
mov
int3
inc
jmp
xor
divl
out
jno
bound
stos
leave
jne
and
add
push
add
jge
add
je
jne
add
sahf
add
pushf
add
sbb
into
repnz
mov
and
inc
pushf
inc
mov
xor
lods
gs
jns
add
pop
or
addb
addl
add
mov
cmpsl
pusha
ljmp
orb
mov
dec
icebp
add
sbb
sub
lcall
out
mov
pop
jns
insb
or
add
pop
xchg
adc
xor
add
xchg
inc
mov
xchg
pop
ret
add
sub
shll
xor
movsb
pop
cmc
adc
incl
adc
bound
add
jecxz
aam
leave
mov
add
adc
add
ljmp
negl
jmp
or
add
xchg
push
addb
out
mov
add
mov
add
adc
mov
add
fadd
adc
inc
add
mov
stos
adc
jl
stos
ja
dec
add
test
cltd
fimull
add
mov
fwait
push
imul
push
jns
ja
int
add
push
jl
addr16
inc
add
fxch
cli
inc
sbb
sub
imul
jbe
jno
mov
in
test
lret
fs
fs
add
pop
cmp
sbb
adc
fcoml
push
rclb
cs
add
stc
xor
daa
mov
mov
pop
jnp
add
sub
xor
pusha
aaa
jle
xor
adc
add
ljmp
aas
jp
mov
out
roll
cmp
cmp
xor
add
cmp
arpl
repz
mov
adc
ret
xchg
lock
xchg
repnz
xor
mov
add
popa
outsb
xchg
loop
mov
lea
adc
aad
or
xor
aaa
fadds
daa
pop
outsb
mov
add
aaa
mov
inc
mov
mov
les
push
in
repz
leave
push
add
xlat
sbb
dec
adc
sar
gs
mov
add
aam
jno
push
jnp
add
pop
jmp
stos
insl
push
aaa
add
xor
adc
sbb
and
or
sbb
push
jp
push
ret
add
pusha
sub
mov
xchg
jp
add
pop
add
clc
pop
je
data16
fwait
in
pushf
ljmp
call
push
subl
loopne,pt
xor
mov
js
pop
cli
and
jg
shrl
add
mov
imul
jae
mov
adc
xchg
cld
xchg
push
xchg
sub
adc
and
test
fdivrl
test
mov
loop
adc
outsl
add
sbb
sbb
mov
push
dec
pop
mov
shrl
add
pop
scas
mov
int
mov
add
adc
mov
adc
sarb
popa
add
or
sti
sub
stos
sbb
cld
add
pop
dec
mov
incl
add
dec
add
add
call
mov
test
fwait
popf
xor
add
cmp
aaa
cmp
cli
cmp
or
dec
pop
add
pop
aam
adc
dec
adc
xchg
and
orb
push
push
lret
cmc
or
dec
sub
aaa
icebp
push
jne
pop
inc
add
mov
mov
mov
pushf
xchg
mov
push
popf
mov
pop
icebp
mov
add
aad
pop
add
mov
add
popa
aas
inc
nop
xchg
out
dec
pop
mov
cmp
inc
cmp
push
adcb
push
jb
adc
sarl
int3
add
xchg
pop
pop
push
enter
mov
repnz
imul
lock
xor
or
mov
stos
fsubr
dec
sbb
and
adc
or
push
add
notb
mov
das
andl
add
ds
adc
sub
xor
mov
es
sub
cs
shlb
test
pop
or
decb
jbe
jne
dec
ljmp
aas
jmp
add
ret
jg
dec
cmpsl
add
push
repnz
add
pop
jle
sar
or
aas
test
push
dec
out
divb
out
add
addl
lcall
mov
cmc
push
loope
sub
idivl
push
sub
sti
movsl
es
add
dec
jg
push
cmp
aam
mov
sub
test
pop
add
push
pop
add
pop
add
out
sbb
call
mulb
out
cli
mov
addr16
sbb
add
loop
dec
pop
sub
out
sub
add
adc
sbb
mov
pop
push
mov
push
mov
fldl
mov
fnstenv
add
ss
add
shll
pop
mov
xchg
std
mov
and
shl
int
roll
mov
popf
push
scas
cmp
nop
call
xor
add
roll
stc
xor
mov
mov
cli
add
stos
mov
mov
pop
mov
pusha
arpl
add
jmp
add
mov
enter
int
out
int
repnz
add
sarb
mov
add
mov
push
lret
jle
aam
daa
inc
stos
xchg
pop
clc
inc
out
pop
lret
add
pushf
xor
xchg
jl
add
push
dec
aas
adc
mov
adc
negl
gs
add
jns
jg
mov
xor
loop
add
mov
in
int
sbb
add
sub
lahf
pusha
jno
cli
cwtl
sub
fwait
int3
push
xor
cmp
daa
or
cmp
push
sbb
lea
loope
add
stos
push
cld
mov
pop
add
mov
sbb
lret
rcl
push
imul
add
les
xor
add
loope
adc
or
xor
imulb
push
xchg
or
mov
add
add
aaa
xchg
pop
add
add
add
add
xor
mov
int3
add
mov
mov
mov
inc
add
out
jne
cmp
test
push
testb
cmpsl
add
push
cmc
xchg
ret
int3
jno
outsl
sub
pop
imul
arpl
sbb
insl
je
jbe
jo
add
xor
addl
push
cmp
push
pop
mov
sbb
add
and
push
adc
shlb
add
pushf
fbstp
mov
add
add
dec
data16
push
sub
xchg
movl
cmpsl
rclb
adc
xor
les
or
dec
jg
into
pushf
psubq
in
in
nop
lock
add
mov
mov
and
jo
push
jmp
jbe
je
sbb
dec
xchg
add
call
stos
add
xor
xlat
add
mov
mov
dec
xchg
add
pop
xlat
dec
inc
mov
add
stc
lock
cmp
insl
add
pop
inc
das
pop
sub
add
shlb
add
int
popf
testl
or
add
outsl
je
jb
mov
mov
frstor
iret
cwtl
cltd
jmp
repnz
bound
or
mov
add
adc
add
movsb
add
in
ja
push
add
push
xor
fwait
xor
xor
ret
mov
cmc
stos
cmp
repz
jb
add
clc
iret
adc
sbb
int
roll
add
add
nop
add
in
and
push
mov
add
loopne
cld
test
add
out
lods
icebp
mov
xchg
jge
add
xchg
aad
mov
ss
dec
add
cs
xor
cltd
dec
sbb
cmc
and
add
dec
xor
push
xor
jmp
add
dec
mov
xchg
pop
jnp
inc
cmp
fildl
cmp
loope
mov
flds
insl
andnps
dec
notl
sub
nop
pop
mov
jle
fwait
icebp
loop
fs
mov
mov
cmc
sbb
xchg
mov
outsl
mov
in
mov
movsb
movsb
cmp
add
daa
arpl
cmp
or
pushw
jae
push
and
xorb
add
inc
jo
es
movsb
add
and
and
pop
xor
xor
jbe
test
add
cmp
and
mov
lods
mov
jo
mov
sar
add
not
repz
aad
sub
inc
in
dec
scas
in
and
add
es
jg
clc
xor
mov
add
add
fisubs
cwtl
in
push
pushf
out
and
out
insb
mov
xchg
xchg
sahf
repnz
sbb
rep
jb
int3
push
add
mov
mov
sbb
add
cltd
pop
lods
add
pop
scas
out
push
pushf
in
scas
divb
push
fs
pusha
add
pop
dec
pop
sub
out
mov
mov
add
xchg
jmp
add
bound
add
xchg
push
hlt
sub
adc
aas
xchg
sub
insb
sub
outsb
jnp
sbb
popf
sub
add
das
in
cmpsl
lcall
dec
aam
xor
dec
and
and
into
add
cli
clc
imul
mov
lods
sub
in
fstp
push
add
aas
fldl
mov
lods
addr16
mov
testl
bound
xor
fcomi
jmp
data16
int3
add
add
les
in
add
jnp
jg
nop
dec
xchg
rcl
or
test
and
int
fildl
lahf
cmp
lret
add
adc
inc
push
jnp
fstps
xor
sub
mov
push
add
inc
mov
inc
dec
inc
mov
enter
xchg
add
xchg
repnz
rclb
sbb
jp
addr16
jns
add
lock
pop
lahf
aaa
push
add
pop
inc
sbb
add
or
adc
sbb
cltd
test
xlat
in
push
or
xchg
xor
daa
and
in
cmp
pop
lods
cld
shrl
adc
add
mov
add
inc
fildl
add
ret
pop
adc
xor
sub
int
cmp
dec
lock
xchg
cmc
mov
add
nop
push
adc
add
jb
add
scas
xchg
sbb
adc
mov
sub
cli
inc
ss
stos
pop
add
repnz
push
lds
imulb
mov
jae
repnz
mov
push
outsb
add
mov
imul
push
cld
sbb
push
add
filds
push
jne
or
sub
sub
pushf
std
pop
push
add
icebp
repz
or
outsl
push
jmp
lret
jnp
pop
js
rclb
jg
loope
mov
add
fwait
mov
mov
sarb
cmp
add
dec
les
fistpll
pop
ja
mov
xchg
pop
fcoml
shl
idiv
faddp
dec
and
enter
insb
addr16
xchg
enter
int
jmp
cmc
pop
std
shl
int
in
mov
mov
iret
or
add
pusha
clc
in
dec
mov
xchg
sub
rcrb
jmp
cmp
xchg
sbb
xor
add
dec
push
mov
add
mov
adc
add
test
and
test
ja
pop
leave
add
inc
out
pop
jecxz
pop
loope
mov
int
push
arpl
cmpsl
std
cltd
add
inc
jmp
adc
jbe
imul
push
mov
in
pop
enter
add
xchg
and
adc
or
mov
mov
xchg
cmpsl
mov
add
jae
aaa
jnp
mov
and
cli
mov
or
dec
push
addl
out
xchg
test
lds
sahf
fisubrl
mov
xor
lcall
pop
sub
inc
xor
jne
xor
repz
mov
fs
fs
fbstp
cmp
shlb
sbb
adc
loopne
mov
add
mov
ret
add
mov
mov
pop
rcr
mov
dec
mov
stos
test
imul
fiaddl
sbbl
fsubl
push
adcb
pcmpgtd
mov
mov
sbb
scas
push
fiadds
lods
cltd
xchg
adc
push
pop
cli
xor
sarl
jge
jmp
pop
mov
push
sahf
adc
adc
sti
les
add
pop
xor
push
cmc
sbb
negl
in
add
leave
sahf
push
mov
addb
lcall
add
aas
adc
add
dec
add
or
sub
ja
mov
mov
cltd
fiadds
adc
jp
das
stc
push
ljmp
cmp
xchg
fs
decl
cli
or
fwait
sub
and
scas
mov
faddl
in
out
mov
sahf
add
popf
stos
lahf
cmpsb
cltd
movsl
sbb
roll
mov
cmp
add
lea
pusha
cmp
mov
add
cmp
inc
add
shlb
and
or
fisubrl
pop
enter
into
stc
rcrb
fstpt
mov
in
fwait
dec
lret
push
add
adc
add
arpl
jl
jle
js
add
jg
mov
cli
and
add
adc
sbb
add
sbb
not
add
mov
add
xchg
sbb
ss
jno
imul
andl
lock
pop
loopne
jg
jg
cmc
inc
pop
rcll
mov
fcoml
inc
fstpl
add
xor
cwtl
pop
loopne
add
repnz
mov
out
push
je
ds
mov
in
icebp
ljmp
stos
lods
mov
mov
jnp
cmp
jbe
movsb
das
xchg
pop
mov
lock
xchg
movsl
xchg
push
popf
xchg
xor
test
xchg
jnp
lds
mov
std
add
es
ret
pop
out
dec
pop
mov
xchg
push
lods
and
outsb
push
pop
pop
inc
fistpl
sub
popf
in
or
inc
outsb
movsl
stos
cld
jle
push
mov
adc
jle
ja
fnsave
jb
mov
xchg
incb
insb
arpl
inc
lock
daa
lock
jo
and
add
jg
ror
mov
mull
fisubrl
xchg
add
xchg
dec
sub
add
ds
cmp
sbb
int3
mov
call
inc
mov
ljmp
mov
lcall
inc
cli
mov
int3
xchg
repnz
dec
or
inc
in
cli
xchg
mov
ljmp
jmp
mov
add
ljmp
test
lcall
add
rcrl
mov
sbb
pushf
add
std
add
jo
mov
xorl
pop
in
add
test
jb
lcall
pop
inc
incl
add
push
and
nop
add
insl
sub
xor
sbb
inc
mov
shlb
jbe
jo
xor
aas
aaa
aam
cmp
nop
pop
pop
mov
sbb
adc
movsb
adc
cs
and
mov
pop
cmp
xor
add
mov
pop
mov
scas
dec
stos
mov
add
fiadds
clc
and
sbb
cld
stc
in
sbb
rcll
movb
mov
shll
clc
ss
jg
inc
into
fdivl
cwtl
ret
pop
scas
mov
jl
es
cmpsb
add
in
mov
cmp
add
add
adc
xchg
add
or
mov
in
pop
push
daa
je
dec
test
outsb
mov
push
rcrl
cmp
adc
jp
ja
lods
xor
jns
idivb
add
xchg
jne
jge
bound
popf
aaa
mov
lds
push
pop
lea
imul
add
xor
shll
sub
pop
mov
or
sbb
lahf
dec
lods
and
sbb
adc
push
adc
adc
xchg
dec
cmp
popa
ds
fisubl
mov
mov
in
lock
out
out
icebp
in
repz
leave
lret
push
loopne
mov
loopne
mov
ror
into
ror
ror
aad
idiv
push
xchg
test
rorb
repnz
sbb
mov
fwait
mov
scas
mov
mov
mov
test
lcall
enter
sbb
mov
mov
mov
mov
xor
shr
addr16
mov
bound
cmp
add
push
push
push
sbb
popf
int
orb
sub
jmp
into
jno
call
push
aaa
dec
push
and
xor
add
imul
test
mov
inc
pop
push
fisttps
cmp
cmp
mov
pop
inc
pop
inc
dec
dec
pop
inc
inc
dec
add
lahf
addr16
mov
mov
testl
jne
aaa
sub
lahf
pushf
xchg
sbb
mov
pop
sbb
and
int3
int3
rcl
ror
rorl
es
cwtl
xchg
lahf
sbb
sub
sbb
bound
mov
xchg
xchg
fwait
mov
clc
hlt
jp
xchg
or
js
adc
add
in
jmp
stc
loope
cmc
hlt
sti
jmp
lods
mov
fcom
fistps
icebp
imul
xlat
int3
lret
aam
ror
aam
lret
dec
mov
pop
or
xor
mov
mov
inc
push
sbb
cmp
sub
in
into
mov
lcall
mov
cmp
or
add
adc
int3
cs
dec
js
jg
adc
ret
dec
pop
ja
imul
jne
jnp
in
sub
clc
stos
pop
push
pop
ficoml
jno
mov
jnp
scas
mov
pop
inc
dec
push
push
pop
dec
int
outsb
fmuls
and
sub
xchg
xor
mov
in
cmp
stc
cmp
scas
mov
ret
push
call
shrb
push
fs
sub
cmc
push
lds
fsubrl
ljmp
popa
scas
out
sti
lock
aaa
cmp
pop
sti
pusha
cmc
push
and
sbb
aas
and
pop
mov
xchg
push
xchg
cmp
pusha
dec
gs
dec
push
loop
pop
mov
adc
pushl
jno
sahf
arpl
sti
xchg
or
fiaddl
cmp
ret
es
push
mov
subl
cld
adc
or
xor
inc
cmp
inc
push
pop
test
sarb
push
jno
mov
cwtl
and
js
pop
jno
jge
sub
mov
into
loop
add
outsb
aas
dec
mov
out
mov
int3
mov
push
loopne
fwait
int
sbb
xor
leave
clc
lret
leave
dec
dec
xchg
jns
setp
jl
aas
and
out
in
and
fs
xor
mov
out
dec
lds
sub
enter
cmp
cltd
xor
or
cmc
jb
shlb
ljmp
lods
pop
cmpsb
pop
pop
pop
pop
insl
sub
and
addr16
gs
sub
add
sti
mull
or
imul
movsl
fsubs
mov
jle
xchg
mov
test
cmp
das
inc
push
loopne
inc
sub
sub
rcl
aas
cmp
into
fwait
sti
sbb
mov
out
sub
movsl
stos
stos
xchg
sub
cs
jno
lods
ret
ficoms
sbb
cmp
lock
sahf
inc
popf
popa
lds
