add
add
sub
mov
mov
pusha
call
add
push
mov
sub
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
pop
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
ret
add
add
add
add
add
add
add
add
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
add
add
inc
mov
and
sub
lods
mov
mov
shl
lea
mov
mov
add
stos
mov
push
pop
cmp
je
sub
sub
je
sub
mov
add
mov
cmp
je
mov
sub
jne
lea
jge
popf
pushl
pop
dec
call
jmp
add
stos
add
add
add
add
add
add
add
add
add
add
in
and
add
inc
add
add
or
push
subl
lea
push
pushl
subl
pop
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
mov
mov
push
mov
addl
pop
push
pop
push
pop
test
je
add
lea
xor
push
popl
add
and
addl
clc
adc
pushl
lea
pop
repz
jmp
mov
pop
ret
add
add
add
add
add
add
push
mov
sub
push
push
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
add
add
add
add
add
in
xor
pushl
push
push
call
add
pop
lea
pop
mov
ret
push
mov
sub
push
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
add
add
add
add
add
add
add
add
add
.byte
nop
lcall
add
and
add
and
add
add
add
push
and
add
and
add
add
loop
add
mov
add
sbb
add
hlt
and
add
add
test
add
and
add
and
add
and
add
add
add
add
aam
add
xchg
and
add
add
stos
and
add
add
mov
add
add
add
andb
add
and
add
add
jbe
add
sub
add
add
add
add
add
adc
add
sub
add
and
add
add
add
and
add
and
add
and
add
add
and
add
add
test
add
cmp
add
add
add
and
add
and
add
and
add
add
add
push
and
add
and
add
add
loop
add
mov
add
sbb
add
hlt
and
add
add
test
add
and
add
and
add
and
add
add
add
add
aam
add
xchg
and
add
add
stos
and
add
add
mov
add
add
add
andb
add
and
add
add
jbe
add
sub
add
add
add
add
add
adc
add
sub
add
and
add
add
add
fs
outsl
outsb
jae
insb
gs
add
das
add
outsb
fs
je
insl
push
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
inc
gs
jb
arpl
jae
gs
imul
gs
je
jb
jne
dec
outsb
outsw
inc
add
gs
jb
arpl
jae
gs
jo
add
gs
popa
jae
inc
jb
outsl
jb
add
outsl
insb
jne
gs
popa
je
dec
popa
insl
gs
add
enter
jae
gs
popa
insb
jne
add
add
imul
jb
je
arpl
aam
inc
gs
jb
jbe
push
jns
gs
add
add
gs
inc
imul
gs
je
imul
push
add
roll
dec
gs
jo
jb
add
add
fs
imul
add
dec
add
insb
outsb
inc
add
inc
add
outsl
jae
dec
popa
outsb
fs
add
jae
inc
jbe
outsb
je
add
fs
outsl
outsb
jae
insb
gs
add
mov
push
gs
fs
outsl
outsb
jae
insb
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
or
inc
push
gs
outsl
jb
inc
popa
je
jae
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
insl
push
insb
jne
dec
imul
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
je
jo
jo
outsb
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
je
jo
jo
outsb
add
add
je
jo
jo
outsb
add
add
insl
push
insb
jne
dec
imul
add
add
insl
push
insb
jne
dec
imul
add
inc
inc
inc
push
push
cs
insb
add
inc
js
outsl
jb
push
push
outsl
push
inc
popa
je
add
imul
jae
inc
outsl
jb
push
dec
add
outsb
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
push
inc
inc
dec
push
cs
insb
add
add
add
add
xor
add
pop
add
orb
add
jo
add
mov
add
add
add
add
add
mov
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
inc
add
test
add
cmp
add
add
add
add
add
ja
add
add
add
add
add
add
add
add
add
xor
add
cwtl
roll
add
add
add
add
add
add
add
add
and
add
add
andb
add
imul
xchg
xchg
xchg
add
lods
lods
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
lods
mov
mov
fwait
pop
xchg
xchg
xchg
or
jle
jp
jnp
stos
lods
lods
add
cmpsl
push
mov
mov
mov
ret
leave
leave
leave
lret
into
rcl
in
rcl
shl
iret
iret
shl
int3
int3
int
leave
leave
enter
enter
in
mov
mov
lods
lods
stos
lea
fwait
cltd
and
jae
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
lahf
add
mov
jae
mov
out
lret
rcl
sar
fcom
fdivr
xlat
xlat
xlat
fdivr
aam
aad
rcl
iret
dec
int3
int
aad
aad
ror
sar
mov
mov
lods
iret
movsl
mov
xchg
cs
add
push
add
add
add
add
add
add
add
add
lods
lods
lods
add
scas
sbb
mov
jnp
mov
mov
dec
leave
lret
dec
iret
iret
aad
xlat
fdivr
call
dec
int3
int
int3
int3
int3
call
aam
dec
int3
into
inc
rol
mov
mov
scas
std
test
cmpsl
ljmp
pop
or
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
push
pop
push
add
inc
add
push
add
push
or
or
sbb
push
add
add
add
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
call
rcl
call
call
xlat
fdivr
aad
dec
int3
int
lret
dec
into
int3
inc
inc
sarl
mov
mov
cmpsb
test
jmp
fwait
lcall
and
push
add
add
add
cmp
add
sub
add
and
add
push
add
add
add
add
pop
pop
pop
add
bound
push
push
bound
pop
fs
ds
das
prefetch
sbb
sbb
aaa
cmp
and
adc
add
add
add
add
add
mov
pop
mov
mov
mov
mov
mov
mov
dec
leave
enter
iret
call
aam
call
aad
call
rcl
dec
enter
ret
mov
mov
ljmp
movsl
movsb
popf
popf
sahf
xchg
cwtl
cwtl
lcall
addl
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
jno
jge
jle
jle
jg
jb
jo
arpl
mov
cmp
inc
mov
outsb
outsl
outsb
nop
bound
pusha
inc
inc
inc
xor
add
add
add
add
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
dec
mov
dec
lret
mov
ret
mov
mov
scas
lods
scas
jmp
cltd
call
xchg
xchg
xchg
xchg
lcall
lahf
cmp
or
add
add
add
add
add
add
add
add
add
add
add
outsl
outsb
jo
pop
pop
pop
or
jnp
xchg
lea
incb
jnp
idivb
jnp
jo
jo
push
pushw
jne
ret
jle
js
jns
fs
inc
inc
cmp
sbb
sbb
adc
or
lods
stos
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
test
test
sahf
pushf
sahf
call
xchg
decl
xchg
xchg
mov
mov
xchg
mov
jns
jns
das
xor
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
test
lahf
in
mov
mov
addb
decb
mov
loope
jno
enter
mov
test
jl
addr16
cmp
and
and
jle
jg
fwait
lcall
stos
test
stos
sti
lods
stos
lods
stos
lods
stos
test
movsb
movsb
std
lcall
decl
jge
js
jns
jnp
jns
mov
xchg
mov
mov
sti
mov
mov
mov
mov
mov
lods
scas
stos
xchg
sbb
add
add
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
xchg
xchg
incl
xchg
mov
xchg
std
xchg
cwtl
xchg
stc
xchg
xchg
xchg
in
mov
or
mov
mov
or
push
xor
inc
dec
insb
insl
imul
test
lcall
out
fwait
fwait
cltd
stc
xchg
nop
std
mov
xchg
mov
mov
mov
lcall
scas
lods
mov
mov
mov
mov
mov
std
mov
mov
movsb
movsb
mov
or
add
add
pop
pop
adc
test
mov
incl
test
decb
xchg
popf
popf
popf
std
movsl
mov
mov
in
in
xchg
push
jne
cmovp
add
or
es
daa
push
dec
dec
dec
data16
jno
mov
xchg
rclb
xchg
xchg
std
lea
xchg
call
mov
test
stos
test
lods
pushl
mov
stos
std
mov
xchg
lods
mov
mov
ljmp
sahf
adc
add
add
pop
adc
mov
jmp
popf
xchg
lcall
mov
xchg
call
xchg
xchg
popf
popf
pushf
movsb
movsl
mov
movsb
mov
cwtl
fstpt
jnp
push
push
push
outsl
dec
dec
dec
pushaw
pusha
bound
je
mov
jle
orl
int
nop
xchg
in
nop
xchg
testl
mov
jmp
lahf
pushl
insb
xchg
mov
dec
xchg
mov
sub
mov
movsb
mov
mov
mov
mov
movsl
mov
add
pop
pop
adc
mov
jmp
lea
call
xchg
xchg
call
xchg
cwtl
fwait
lcall
mov
movsl
movsl
std
mov
cwtl
fwait
out
xchg
xchg
nop
xchg
xchg
les
cltd
lcall
mov
stc
xchg
test
std
xchg
je
lcall
jmp
jnp
mov
jnp
mov
je
mov
insl
ljmp
adc
lods
or
ljmp
inc
jge
mov
mov
lods
pushf
mov
mov
add
shll
adc
mov
ljmp
popf
call
xchg
xchg
lcall
popf
sahf
lcall
sahf
pushf
lcall
xchg
xchg
decl
xchg
xchg
call
lcall
fwait
mov
cld
popf
mov
xchg
push
xchg
pop
jle
cwtl
dec
jp
fwait
cmp
push
pushf
and
sahf
pop
jmp
ljmp
packuswb
stos
packuswb
scas
adc
mov
imul
mov
imul
aas
cmp
fwait
lods
mov
scas
lods
scas
mov
mov
movsl
add
pop
pop
adc
mov
ljmp
popf
call
popf
pushf
lcall
mov
movsl
jmp
cwtl
xchg
decl
mov
decl
js
cltd
jno
lcall
call
sub
decl
adc
xchg
or
pop
call
pop
lcall
adc
stos
sbb
pushl
pop
jno
mov
outsl
mov
and
and
shll
inc
inc
cmp
xchg
lods
mov
scas
scas
mov
lahf
mov
mov
add
add
add
pop
pop
adc
lods
mov
mov
cltd
sahf
lcall
movsb
movsl
jmp
cmpsb
cmpsb
ljmp
cmpsl
cmpsl
lcall
decl
dec
outsl
decl
decl
adc
incl
add
push
decl
add
xchg
add
xchg
add
cltd
add
mov
or
pushl
es
mov
sub
mov
sub
jle
xor
dec
inc
mov
mov
cld
mov
scas
lret
movsb
dec
mov
mov
add
add
add
stos
movsb
stos
add
push
adc
cmpsl
scas
ljmp
popf
jmp
test
ljmp
lods
pushl
scas
scas
jmp
jb
incl
or
push
incl
add
push
incl
add
mov
push
decl
add
xchg
add
lcall
jmp
adc
mov
aaa
cmp
cmp
dec
cmp
dec
cmp
call
cmp
dec
mov
std
mov
mov
movsb
mov
mov
add
dec
dec
adc
mov
mov
sahf
fwait
sahf
ljmp
scas
scas
pushl
mov
pushl
mov
ljmp
ja
decl
or
mov
pop
decl
or
xchg
push
incl
add
lea
push
call
add
popf
add
mov
add
lods
add
pushl
cmp
dec
inc
call
inc
mov
rorb
call
dec
xchg
call
dec
xchg
fisttpl
fistl
call
xchg
std
mov
mov
mov
sahf
lahf
or
add
add
add
add
dec
dec
adc
jnp
movsl
sahf
mov
lcall
test
pushl
mov
pushl
mov
mov
mov
jmp
aaa
insl
decl
sbb
decl
adc
decl
or
add
nop
add
xchg
add
pushf
add
add
cmpsb
add
test
pusha
pushl
and
mov
aam
cwtl
call
push
lcall
pop
pushf
ficoms
jmp
pop
popf
jmp
pop
lahf
jmp
pop
mov
call
xchg
mov
mov
cmpsl
cmpsl
cmpsl
jne
mov
sahf
add
inc
inc
adc
ja
sahf
lcall
sahf
cltd
sahf
ljmp
mov
pushl
mov
mov
pushl
xchg
mov
call
and
call
pop
call
or
popl
push
call
pop
jmp
add
lods
add
mov
gs
mov
xor
fstps
fbld
jmp
arpl
jmp
data16
jmp
addr16
jmp
stos
faddl
ret
mov
test
mov
lahf
mov
add
add
add
inc
aas
adc
jp
xchg
cwtl
call
sahf
fwait
popf
ljmp
mov
pushl
mov
mov
mov
mov
jle
xchg
sub
fwait
xor
lcall
call
or
xchg
add
lcall
ljmp
add
mov
pushw
adc
roll
jmp
outsl
lods
jmp
jo
call
jb
in
je
in
jne
out
jbe
out
jne
out
jb
jmp
xchg
mov
test
lcall
sahf
add
jg
cmp
aas
adc
outsl
js
mov
popf
lcall
mov
mov
mov
mov
mov
mov
movsl
scas
lcall
xor
mov
cmp
xor
fwait
push
callw
pop
lcall
add
stos
add
mov
popa
pushl
add
enter
ficoml
jmp
ja
jmp
jle
jmp
mov
out
cmpb
repnz
push
test
jmp
mov
inc
mov
test
sahf
popf
popf
daa
lahf
mov
sahf
add
add
add
popa
add
aaa
cmp
jne
jg
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
sarb
rol
pushl
outsb
mov
lcall
jmp
cmp
lcall
lcall
add
add
scas
add
mov
fs
mov
add
shlb
movsb
ljmp
in
mov
push
mov
push
nop
sar
nop
sar
xchg
nop
xchg
clc
pop
out
mov
fidivl
clc
stos
stos
test
xor
sahf
add
add
add
inc
add
xor
push
inc
inc
inc
jb
pop
dec
in
imul
pushl
mov
mov
inc
ret
ret
inc
mov
jge
lcall
dec
cmp
dec
cmp
xor
lcall
add
mov
add
stos
add
mov
mov
add
leave
push
outsb
call
xor
jmp
js
out
xchg
push
lcall
repnz
push
fwait
enter
lret
popf
lret
sahf
into
sti
popf
into
cld
cltd
lret
xchg
ret
fidivrs
enter
mov
sahf
mov
xchg
add
add
add
xor
outsb
push
dec
dec
jecxz
pop
decl
mov
mov
mov
sar
ret
ret
inc
inc
mov
mov
ljmp
dec
xchg
mov
pop
pop
lcall
add
lods
add
mov
popa
mov
add
leave
add
or
inc
xchg
in
mov
push
movsl
int
mull
into
sti
test
cli
cmpsl
into
cld
test
test
iret
std
cmpsl
sar
cmc
sahf
jmp
mov
dec
lret
mov
mov
mov
xchg
xchg
add
fwait
cltd
add
add
add
sub
inc
inc
inc
bound
pop
xlat
jae
jb
mov
mov
ret
mov
ret
inc
ret
inc
enter
ret
rol
mov
cmpsl
jmp
push
mov
lods
dec
test
sahf
sbb
pop
jmp
popa
pushl
add
ret
dec
add
add
adc
in
pop
test
negl
sar
cli
scas
aad
cli
mov
cld
mov
mov
mov
mov
cld
mov
pushl
sar
mulb
call
enter
mov
ficompl
xchg
xchg
or
add
add
xor
sbb
dec
dec
dec
outsl
outsb
outsb
mov
fcom
jmp
xlat
not
rcl
std
lret
into
int3
dec
lret
leave
dec
lret
lret
inc
leave
mov
scas
ljmp
push
mov
stos
cmp
lcall
add
stos
add
mov
fs
mov
add
iret
add
fadds
je
loopne
je
ljmp
cli
scas
sar
std
mov
cld
mov
fdivr
std
mov
xlat
std
mov
fdivr
std
rcr
std
mov
int3
jmp
mov
call
lret
into
mov
mov
xchg
or
add
add
xor
add
add
pop
or
mov
pop
out
call
test
in
leave
fstp
fsubp
fdiv
fcomp
xlat
cli
aam
xlat
std
into
ror
mov
push
ljmp
sub
mov
add
mov
mov
add
lret
add
add
fildl
ja
jecxz
ja
out
das
xchg
clc
mov
cli
mov
loope
inc
loope
std
std
fdivrp
inc
dec
loopne
dec
fdivrp
dec
inc
fdivrp
dec
sti
mov
lret
lret
mov
mov
xchg
adc
add
add
incl
std
std
add
std
add
div
or
in
in
pop
jmp
out
sub
in
in
dec
call
call
jmp
aad
fcmovnu
jmp
mov
xchg
cmpsl
cmp
mov
add
test
pusha
pushl
add
movb
dec
add
add
add
jmp
inc
popf
sti
mov
jecxz
dec
in
dec
in
dec
in
std
int3
loop
dec
loope
dec
loopne
call
loop
shl
call
jecxz
call
jecxz
cld
in
mov
inc
ret
out
cmpsb
cmpsl
test
xchg
xchg
xchg
sbb
fwait
cltd
add
std
add
incl
idiv
testb
hlt
lock
hlt
repnz
out
lock
pop
out
repnz
cmp
out
in
pop
fsubp
loopne
les
xchg
sti
mov
add
pop
ljmp
gs
mov
add
add
fiaddl
jne
in
jns
in
push
pop
test
cld
mov
std
shl
std
shl
shr
call
out
std
shl
call
call
call
call
fucomi
std
cld
iret
loopne
hlt
ret
jecxz
fcos
lret
leave
leave
repz
test
and
xchg
xchg
add
sti
add
std
testl
repnz
hlt
or
aam
xor
jae
negb
add
cmpsl
add
scas
add
mov
add
lret
call
add
faddl
ja
out
jns
in
sbb
sti
ret
fdivrp
cld
fsubr
fldl2e
fldlg2
std
fucomi
std
fucomp
fsubr
std
fucomp
fsubrp
fsubrp
jmp
in
aam
push
jmp
aam
dec
ror
clc
stos
lods
stos
lods
xchg
xchg
xchg
outsb
jo
add
add
mov
loopne
add
enter
mov
cwtl
repnz
and
lahf
add
add
mov
mov
add
int3
add
add
filds
jne
call
sub
shl
fdivp
std
fsubr
fldpi
fucomi
call
jmp
cld
shl
cli
shl
cli
iret
loope
clc
iret
fdivrp
clc
int
push
rcl
out
mov
xlat
sti
mov
mov
cltd
cltd
cltd
cmp
cltd
lcall
add
add
fcom
add
mov
lahf
jmp
sub
sahf
add
stos
add
mov
fs
mov
add
iret
add
add
loop
jns
ljmp
cli
xchg
enter
loopne
sti
int3
loope
cli
stc
rcr
cmc
mov
sar
icebp
mov
into
in
mov
int
jmp
ret
iret
std
jmp
shl
ljmp
in
mov
mov
xchg
add
add
add
int
add
shrl
loopne
xor
jmp
add
mov
data16
mov
add
int
jo
rorb
jbe
fsts
jns
loopne
cmp
dec
xchg
jmp
scas
lret
mov
out
enter
ret
cld
fidivs
neg
mov
lret
vpmulhw
leave
into
iret
shl
aad
call
in
test
out
out
popf
jmp
leave
leave
push
lods
stos
lods
adc
test
cmpsl
add
ret
mov
ret
mov
stos
aam
dec
jg
sahf
sbb
cmpsl
sbb
scas
and
mov
ja
mov
inc
xchg
ret
push
stc
leave
fs
test
mov
out
mov
enter
lret
ror
int3
mov
into
shll
xlat
aam
jg
jb
fsubp
gs
in
out
call
xor
cmc
cmc
mull
repnz
lock
fstp
or
mov
into
add
add
add
mov
rolb
mov
test
lcall
jne
ljmp
mov
sarb
mov
ret
cmpsl
leave
mov
mov
lret
iret
int3
shlb
rcl
push
rcl
rorl
fcom
inc
rcr
xor
daa
ficompl
fchs
fstl
fucom
jecxz
loope
in
out
ljmp
cld
testl
std
std
std
add
std
add
mov
shrl
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
ret
inc
ret
mov
daa
int3
rcl
and
aad
sbb
aam
adc
aam
or
fcom
push
aam
fadds
add
in
add
in
ljmp
std
std
add
mov
add
ret
ret
lds
mov
mov
mov
push
ret
or
mov
add
into
leave
add
roll
rcl
add
aad
aad
aam
aad
add
fsub
add
aad
add
loop
add
fsubp
add
in
add
repnz
std
incl
std
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarl
les
ret
ret
mov
mov
mov
stos
stos
stos
dec
test
cmpsl
and
add
add
add
add
add
add
add
add
mov
mov
aam
iret
shr
rcl
aam
rcl
sar
into
iret
into
cli
lret
lret
int3
stc
int3
lret
mov
mov
iret
lods
lods
lods
fwait
xchg
xchg
xchg
dec
ds
aas
and
add
sbb
add
adc
add
push
add
add
jg
addb
inc
inc
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
leave
cld
ror
sar
aad
call
aad
dec
rcl
dec
into
iret
dec
int3
lret
sarb
stos
lods
stos
icebp
cwtl
xchg
xchg
mov
or
or
add
add
add
add
add
add
add
add
add
add
jne
jne
je
jae
fs
dec
dec
dec
cmp
sub
sub
ss
dec
sub
adc
sub
add
add
mov
mov
mov
mov
mov
mov
ret
lret
rcl
sar
aam
aam
int3
lret
inc
mov
mov
test
sahf
lahf
xchg
xchg
xchg
jmp
jo
xchg
adc
add
xor
add
add
add
add
addb
addl
aam
imul
pop
pop
movsb
push
push
push
stos
push
insb
insb
push
pop
pop
cmp
aaa
cmp
jo
outsl
adc
mov
fstpt
mov
sar
mov
mov
mov
ljmp
pushf
pushf
call
xchg
xchg
lcall
xchg
dec
dec
dec
dec
adc
adc
add
add
add
add
add
pop
cltd
cltd
lcall
xchg
lcall
addb
jge
jnp
jp
js
jns
jp
jnp
jp
jb
jae
push
push
push
cmp
jae
sahf
popf
sahf
mov
lods
scas
repz
scas
scas
sti
scas
scas
scas
std
test
test
sahf
popf
pushf
call
xchg
call
mov
lods
jmp
scas
scas
leave
movsl
cmpsb
cmpsb
cltd
jae
jb
adc
adc
add
add
add
add
outsb
outsl
outsb
pop
nop
mov
loop
cltd
sahf
incl
mov
sti
xchg
xchg
xchg
lock
xchg
xchg
fimuls
mov
jp
pop
and
inc
inc
dec
outsl
outsb
outsl
orl
lcall
mov
call
popf
popf
ljmp
test
mov
mov
mov
xlat
movsl
mov
addl
add
add
popa
pusha
popa
or
scas
mov
cmpsb
lahf
movsb
decl
lea
call
sahf
sahf
sti
lahf
mov
cwtl
call
push
push
push
jo
push
pop
outsl
insl
outsb
insl
xchg
subb
xchg
lock
mov
lcall
mov
pushl
pop
mov
mov
jge
mov
lods
lods
insl
stos
stos
stos
or
add
add
add
add
popa
or
mov
in
mov
xchg
call
cwtl
call
cltd
cltd
lcall
cli
xchg
xchg
cltd
jmp
xchg
lea
jecxz
orb
xchg
imul
popf
dec
jp
movsl
inc
jns
scas
aaa
js
scas
daa
je
mov
outsb
ljmp
sbb
pop
mov
scas
scas
jle
movsl
movsb
push
popa
pop
pop
or
mov
in
movsb
test
cwtl
xchg
cwtl
lcall
mov
mov
decl
orl
xchg
jae
cld
cwtl
pusha
cmp
dec
js
xchg
cmp
xchg
daa
push
lcall
push
pusha
ljmp
sbb
sbb
pushl
sbb
jne
rcrb
mov
scas
scas
xchg
sahf
popf
lahf
adc
add
add
pusha
pop
popa
or
mov
stos
mov
lahf
ljmp
stos
stos
ljmp
xchg
cltd
decl
cmp
mov
arpl
mov
pop
incl
add
pop
call
add
cmpsl
or
mov
je
mov
jl,pn
ret
jge,pn
das
cmp
xor
xchg
inc
test
divl
test
sbb
add
add
pop
pop
popa
or
movsl
test
test
cmpsb
jmp
mov
pushl
mov
jmp
jno
mov
pop
decl
or
xchg
decl
add
xchg
add
mov
add
mov
insb
inc
ss
lret
call
inc
mov
aam
mov
aad
nop
fiaddl
call
popa
lahf
inc
test
stc
mov
mov
mov
std
std
add
add
add
popa
or
mov
ljmp
mov
pushl
mov
ljmp
push
jge
pop
popa
call
adc
push
decl
add
mov
add
lods
add
ja
rorl
xlat
pop
pushf
fistpl
fistps
jmp
pop
mov
jmp
outsb
test
int
mov
ret
cmpsl
xor
add
add
dec
pop
jle
jl
popf
xchg
lcall
scas
scas
pushl
mov
mov
jmp
sub
imul
and
call
add
popf
add
test
pop
pushl
push
imul
fsubl
jmp
insl
test
jmp
jb
in
jno
jmp
jp
call
cmpsl
mov
shll
jg
add
add
add
dec
pop
outsl
outsl
imul
xchg
fwait
lcall
mov
mov
mov
jmp
cmp
mov
sub
cwtl
or
lcall
add
lods
add
mov
gs
or
xchg
jmp
js
ljmp
push
xchg
hlt
xchg
mov
push
cltd
cltd
lcall
sub
push
push
dec
pop
gs
xchg
mov
mov
mov
mov
ret
mov
sahf
jmp
inc
jg
mov
or
add
test
add
mov
push
ja
fbld
out
pop
push
xchg
push
cwtl
push
cwtl
stc
cltd
enter
lret
xchg
jmp
stos
inc
mov
stos
popa
mov
add
add
inc
pop
pop
pop
push
fisttpl
mov
mov
ret
inc
ret
mov
cmpsl
jmp
dec
cmp
pop
push
mov
add
mov
fs
mov
add
fldenv
cmp
jl
push
mov
iret
stc
test
sti
stos
sar
cld
stos
iret
lods
sar
sti
cmpsb
int
out
leave
inc
rol
stos
stos
stos
jne
sahf
sahf
or
add
add
dec
dec
push
aaa
je
je
stos
stos
stos
ror
int
out
iret
int3
cmc
lret
sti
lret
std
enter
mov
pusha
mov
lods
inc
jg
mov
add
mov
arpl
rolb
dec
add
flds
xchg
push
xchg
std
mov
mov
cld
mov
xlat
cld
mov
fcos
std
mov
ljmp
repz
lods
lods
mov
add
add
add
add
pop
or
rcl
dec
loopne
loop
loopne
loopne
fadd
fcmovnu
fcmovnu
aam
fsubr
shll
test
jb
movsb
pop
pusha
ljmp
add
lret
call
add
jecxz
jp
repnz
mov
cld
ret
loop
inc
loope
dec
loopne
dec
fdivrp
dec
fdivrp
dec
cld
lock
lret
mov
xchg
popf
sahf
sahf
sbb
add
add
std
add
std
add
jmp
out
sbb
jmp
xor
loope
in
mov
mov
mov
add
mov
fs
add
into
add
faddl
je
ljmp
std
fdivrp
sti
shl
std
shl
std
shl
std
shl
out
call
call
push
enter
int3
sar
mov
mov
add
std
std
add
std
incb
cld
std
pop
aam
aad
mov
pop
xchg
sahf
or
ljmp
add
ret
add
rolb
outsl
fiadds
jbe
out
and
std
shl
std
fldl2t
fld1
std
xlat
call
std
fsub
std
fsubr
std
aad
push
enter
rcl
sti
mov
lahf
lahf
das
add
add
int
into
or
arpl
ljmp
add
movl
jb
loopne
ja
in
xor
sti
lret
loop
stc
lret
loopne
test
repz
repz
aam
out
ret
sar
out
out
aam
ljmp
ljmp
test
add
add
add
aam
mov
jae
push
addr16
mov
insb
inc
pop
jb
lret
and
xlat
sub
sti
ficoms
loop
mov
out
in
leave
jmp
fdivrl
lret
enter
int
scas
jecxz
ficompl
in
call
rorb
mov
add
stos
lods
lods
add
xchg
movsb
les
xchg
mov
nop
fidivrl
andb
into
mov
ret
ror
aam
lret
insl
ror
into
pop
rcl
iret
dec
xlat
cmp
das
jecxz
frstor
in
lock
jmp
or
std
add
add
add
std
incb
mov
mov
outsb
scas
mov
lods
mov
push
mov
mov
shrb
mov
pop
mov
rcl
or
loopne
or
int
add
std
add
std
add
add
add
int3
int
or
into
int
add
std
add
add
add
add
add
lock
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
lcall
daa
ret
mov
leave
mov
rol
mov
scas
mov
insb
stos
stos
stos
xor
je
add
add
add
add
add
add
add
add
add
add
add
add
stos
lods
stos
add
mov
jmp
aam
aad
rcl
sar
int
iret
std
stc
mov
test
jg
sbb
push
add
add
add
add
add
add
add
add
jae
jb
push
inc
inc
das
cs
inc
inc
inc
and
add
add
mov
mov
cmpl
dec
int
call
rcl
dec
iret
int
enter
mov
scas
scas
lcall
mov
push
add
add
add
add
jae
jae
xchg
aad
outsb
outsb
ret
bound
insl
outsb
insl
jb
popa
popa
cmp
pop
sbb
mov
in
mov
mov
mov
stos
lods
lcall
xchg
lcall
cwtl
cltd
lds
jae
es
das
add
add
add
add
jae
je
fwait
xchg
lcall
xchg
clc
mov
or
addb
dec
push
push
inc
mov
popf
into
mov
lahf
lahf
sti
xchg
xchg
xchg
decb
lcall
cmpsl
stos
cld
mov
mov
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorb
lods
movsl
test
test
mov
xchg
xchg
xchg
cld
pushf
pushf
pushf
cmc
cltd
lcall
push
push
push
imul
jge
mov
xchg
notl
mov
mov
lcall
jo
mov
lods
lods
push
stos
stos
lods
add
add
add
test
test
xchg
xchg
xchg
call
fwait
cltd
lcall
fwait
cltd
std
xchg
xchg
xchg
out
xchg
mov
loope
jne
out
nop
fs
push
jp
fwait
inc
jne
cmpsb
cmp
scas
sub
pushl
sbb
mov
jnp
mov
mov
imul
int
add
add
xchg
pop
lods
movsb
lods
test
popf
popf
sahf
jmp
mov
xchg
decl
push
jbe
popl
mov
push
mov
call
or
mov
sbb
je
mov
sub
les
inc
lcall
test
add
add
popf
mov
cld
cmpsl
test
pushl
mov
lcall
sub
decl
or
mov
decl
add
mov
adc
shll
dec
aas
mov
rolb
call
inc
call
push
xchg
dec
lcall
movsb
mov
add
imul
test
mov
lods
pushl
mov
ljmp
aaa
jo
nop
sbb
pop
decl
add
mov
add
mov
push
xchg
fstpl
fistps
jmp
pusha
movsb
jmp
cmpsw
call
lcall
cmpsb
cmpsb
cmpsl
pop
add
add
popa
bound
mov
pushf
cld
mov
scas
mov
mov
scas
lcall
xor
lcall
jmp
add
mov
push
jmp
outsl
lods
call
jl
push
jl
out
jg
fistpl
mov
and
add
add
dec
adc
push
cmp
mov
mov
rol
mov
bound
lcall
add
add
mov
fs
pop
insb
fmull
in
mov
hlt
xchg
push
xchg
enter
jmp
cmpsl
mov
cmpsb
movsb
sub
inc
aas
inc
adc
push
xchg
xchg
cld
rol
inc
ret
inc
mov
cwtl
ljmp
sbb
movsl
add
mov
fs
add
aam
jns
ljmp
cli
stos
sar
cli
lods
sar
sti
scas
sar
std
scas
iret
in
mov
inc
mov
movsb
ds
std
incl
xor
xor
inc
scas
mov
mov
aad
mov
aam
fnop
rcl
out
leave
lret
mov
mov
jmp
add
ret
add
aad
jno
call
nop
cld
mov
inc
fdivr
inc
fdivr
cld
rcr
lock
shl
cmpsl
test
add
add
add
in
jmp
call
jmp
jecxz
fcomp
fldenv
movsl
and
popa
mov
add
fldl
jne
out
aaa
xchg
sti
mov
dec
in
dec
in
call
in
std
aam
std
shl
push
leave
ror
int
lods
lods
scas
popa
cmpb
std
incl
std
incl
lret
lret
shrb
lahf
sbb
lods
add
mov
add
jecxz
js
cmc
push
movsl
std
loopne
cld
xlat
call
std
shl
std
aad
sti
shl
push
leave
fdivr
fmul
shl
mov
mov
xchg
xchg
xchg
pop
ret
mov
cld
lods
push
fs
mov
or
fstpl
cmp
out
mov
shl
ljmp
jmp
out
aad
call
fcmovu
scas
vsqrtps
add
add
popf
lods
xchg
dec
and
push
mov
ret
int3
lret
jbe
mov
fdivrs
adc
int3
outsl
fxch
iret
pop
xlat
dec
jecxz
fistpll
out
call
sbb
sarb
cmp
movsb
lods
arpl
stos
mov
ret
cs
mov
int3
sbb
fstp
bswap
int
or
aam
std
std
add
incb
stos
std
incb
sarb
add
incl
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
call
mov
rcll
sub
stos
inc
jl
into
gs
sub
out
and
or
je
sub
xchg
xchg
and
in
and
aaa
cmp
imul
mov
cmp
fidivrs
adc
rclb
cltd
xor
jne
test
xchg
xlat
fcom
insb
or
sbb
pop
dec
cmp
jl
adc
into
shrl
movb
je
and
sub
imul
xchg
mov
enter
sti
jmp
test
dec
cmp
subl
pop
mov
ret
in
cmc
loope
mov
dec
xor
imul
sti
mov
aas
in
xlat
sbbb
push
pop
cmc
aas
sub
adc
mov
xor
rcr
jae
pop
mov
xchg
push
pop
xlat
outsb
mov
scas
cmpsl
lods
cmc
mov
enter
add
xor
push
in
dec
push
xor
subl
movsb
push
out
mov
outsb
add
pop
dec
rcrb
add
push
movsl
stos
and
sub
js
hlt
movsb
pop
push
out
dec
jnp
adc
into
cltd
xor
pop
xor
dec
inc
mov
insl
lcall
mov
xchg
xchg
sub
or
test
sbb
mov
dec
in
or
outsl
push
inc
pusha
xchg
sub
mov
inc
in
stos
inc
flds
into
gs
fnstenv
pop
in
orl
adc
aam
pushf
xor
testb
pop
dec
test
outsl
scas
pushf
pop
lret
mov
push
jmp
xchg
pop
jo
mov
and
aaa
add
pop
mov
bound
test
inc
ficoml
pop
sub
dec
push
call
js
outsl
push
into
cltd
jbe
lret
out
lea
in
xchg
sub
inc
stos
push
mov
lods
arpl
pop
adc
loope
loopnew
adc
in
and
cmp
sub
mov
les
mov
pop
ret
repz
test
fs
inc
mov
mov
lock
and
enter
outsl
arpl
push
out
jl
lea
lret
adc
cld
scas
mov
loopne
xor
dec
add
xorb
mov
ret
lods
inc
cmc
cmpsb
daa
mov
dec
clc
inc
fsubrl
push
sbbl
sbbl
inc
out
lahf
and
fcoml
mov
cli
in
push
sbbb
call
mov
scas
insb
lods
mov
int3
mov
fists
adc
xchg
jno
arpl
es
aaa
into
sub
lods
inc
or
jge
lret
bound
jae
sarb
xorb
pop
sahf
add
inc
ja
and
fs
fisubl
leave
popa
clc
cli
or
dec
nop
daa
mov
mov
ret
hlt
xor
cli
gs
sbbl
lcall
scas
in
sub
push
pop
push
ss
jg
jb
pusha
push
jmp
sar
nop
add
jb
in
pop
scas
push
push
xchg
sub
ja
int3
test
scas
inc
mov
push
ljmp
jb
dec
jmp
xor
daa
mov
ret
hlt
movsb
daa
mov
inc
testb
imul
cli
jns
or
int3
push
sub
pop
popa
inc
fstl
mov
sti
in
add
stc
nop
sbb
cmp
lods
mov
int3
mov
ficoms
or
subb
cmpsb
pop
mov
or
sub
sub
outsb
jp
scas
inc
dec
cltd
inc
fcmove
outsl
sbbb
in
testl
jo
pop
repnz
xchg
add
rclb
mov
sbb
inc
gs
js
push
xor
movsl
cmp
push
xor
xor
shlb
movsb
cs
adc
es
and
cmpsl
jge
cmp
jae
xor
sub
out
cmp
sbb
jnp
shlb
das
mov
fcomi
xchg
es
jmp
adc
ds
nop
insb
les
test
mov
mov
push
fmul
pushw
jb
push
sub
pop
pusha
shl
mov
mov
jb
and
mov
and
test
shrb
push
mov
outsb
or
push
call
inc
and
stos
inc
adc
or
pop
repnz
fcmove
or
mov
inc
xor
shlb
ret
mov
dec
out
sub
pop
jecxz
inc
adc
cmpsl
ds
or
lds
inc
ficoms
data16
or
jne
cli
adc
aam
and
js
shll
into
add
xchg
sub
and
lret
dec
in
iret
ljmp
and
pop
cmc
clc
ret
or
pop
sub
ret
test
bnd
and
pop
sub
roll
repnz
fs
push
pop
shlb
repz
dec
in
xor
fs
repnz
inc
fstps
lds
lret
repnz
insl
in
fsubrs
cmp
ret
xor
icebp
mov
mov
aaa
fs
in
repnz
fdivl
aaa
nop
daa
mov
in
mov
test
arpl
mov
pop
mov
es
arpl
lock
mov
sub
fs
mov
xchg
bound
xchg
sub
out
and
imul
cmp
and
or
mov
pop
lock
popf
pop
aam
dec
or
ljmp
sub
jg
fistpl
jmp
dec
sub
cltd
pop
ficoml
or
sbbb
push
inc
fisttpl
dec
loope
fisubl
or
pop
cmc
repnz
and
add
or
push
repnz
inc
fistl
adc
repz
aas
pop
mov
jns
ret
call
push
dec
and
add
imul
or
sbbl
sbb
push
dec
out
push
in
sbb
or
mov
sbb
pop
icebp
sbb
or
cmp
addr16
and
pop
icebp
push
repnz
pop
cmp
sbb
or
or
lods
rcrl
inc
fcomps
std
fbstp
xor
addr16
mov
js
pop
mov
cltd
cmpsl
mov
adc
ds
push
xor
ljmp
jno
mov
lcall
call
add
jo
sbb
repz
push
or
testb
cmp
imul
scas
xchg
xchg
int3
and
mov
dec
xor
push
lea
lahf
mov
filds
or
imul
pop
pop
sbbl
lods
lods
sbb
add
sub
gs
push
inc
fmull
lods
icebp
mov
shrl
push
std
shrl
and
ja
jge
loop
test
lret
sti
push
dec
loopne
and
mov
int
pop
out
cld
push
insl
add
sbb
test
xor
inc
aas
jne
inc
xlat
dec
stos
shrl
aam
rorl
add
add
stos
xor
rcrl
pop
mov
push
pop
push
popf
cmp
or
fstpl
push
cmp
pop
push
xchg
jo
jnp
cmpxchg
xor
or
dec
jecxz
and
lcall
popf
xor
jge
inc
stos
xlat
outsb
cmc
ret
pushf
xor
sbb
mov
lea
mov
push
jmp
cmp
sbbl
lea
xchg
sub
cmp
ret
push
test
inc
fidivs
movsl
jno
rcll
movsb
cmp
icebp
test
jb
scas
inc
je
sbbl
call
pop
jbe
cmp
fldt
stc
adc
das
inc
rorb
push
push
fldl
cwtl
or
mov
mov
mov
fists
push
xor
fs
jne
pop
test
xorb
or
pop
daa
inc
fcoms
xchg
pop
cmpb
jno
enter
je
iret
or
pop
sbb
dec
jbe
dec
movsb
addr16
cwtl
clc
lea
mov
insb
insl
lcall
or
loope
lret
ret
xor
popa
jo
cmp
mov
sbb
ret
rolb
pop
out
out
and
jb
xor
shll
lods
test
inc
jns
lock
pusha
pop
sbbl
mov
cmp
xlat
xor
and
out
jg
jecxz
mov
es
mov
and
lock
xlat
jl
add
dec
or
insl
lahf
popf
push
nop
inc
call
enter
cmp
adc
out
arpl
divb
cmpsl
icebp
ja
jle
sahf
scas
lret
and
lret
js
dec
jbe
xor
fsts
sbb
fstps
mov
stos
mov
test
jbe
pushf
mov
aaa
jns
enter
dec
mov
insb
fmull
in
insb
ficomps
jecxz
dec
adc
xor
iret
es
inc
in
pop
cmp
icebp
mov
push
adc
and
and
clc
pop
add
out
xor
push
test
mov
mov
clc
sub
loope
inc
jne
jb
lea
pop
adc
stc
add
sub
lods
pop
jecxz
ljmp
pop
jb
fldt
repnz
andl
lock
adc
flds
test
pop
bound
dec
pop
push
iret
cmpsb
jge
xor
jo
and
xchg
xor
pop
mov
sub
sbb
rcrb
pop
push
dec
rcrb
dec
mov
mov
nop
aam
test
sbb
xchg
or
mov
push
int
add
rcll
inc
and
push
cmp
pop
inc
out
pop
mov
mov
int
les
or
xlat
in
imul
add
std
ret
imul
dec
add
dec
testb
push
xor
out
adc
dec
aaa
and
mov
sbb
les
aas
in
dec
mov
daa
shrb
test
push
jbe
push
xor
sbb
movsl
into
mov
cmp
pop
xor
pop
adc
and
cmp
inc
mov
sub
sbb
push
outsb
mov
mov
popf
or
mov
nop
ss
lcall
daa
and
mov
cltd
leave
ja
push
sbb
adc
cli
testb
in
test
pop
stos
sbb
dec
repz
push
inc
mov
mov
or
leave
mov
dec
fs
adc
dec
mov
jns
jns
lock
negl
xchg
inc
jmp
clc
jp
jp
jo
pop
xchg
mov
test
cmp
sub
push
ljmp
cmp
mov
and
mov
adc
jl
push
scas
movsl
xchg
sub
iret
fidivl
jbe
sub
test
mov
stos
inc
ret
fsubrs
mov
repz
scas
inc
out
ret
pop
leave
pusha
dec
pop
shlb
lock
sahf
adc
lea
daa
hlt
mov
pop
bnd
xchg
sub
adc
aas
dec
xchg
iret
imul
data16
lcall
sbb
and
inc
mov
cmp
test
mov
cmpsl
lods
test
das
rorl
repnz
pop
insl
sbb
ss
insl
sub
inc
hlt
mov
loopne
mov
add
inc
xlat
lods
sub
mov
pop
cmc
jbe
addr16
jl
mov
sub
and
rorl
cld
ljmp
pop
int3
mov
out
mov
jb
shrb
popf
cmpsb
cmp
xchg
xlat
les
mov
loop
adcl
push
lods
add
or
mov
das
addr16
lods
lahf
cmp
mov
aad
in
adcl
dec
lret
and
out
loope
mov
aad
xchg
scas
mov
pop
ror
mov
ljmp
scas
or
lcall
and
test
aas
sti
shlb
ficoms
cmc
pop
testl
push
sbb
fnstenv
cli
mov
mov
mov
lods
jp
hlt
mov
scas
adc
out
inc
fistl
jb
mov
lret
nop
daa
inc
xchg
adcb
addr16
xor
mull
cli
xchg
aam
fidivl
std
sbb
mov
push
lods
std
mov
adc
jbe
dec
mov
ljmp
jno
repnz
pop
lods
sbb
jbe
mov
xchg
js
int3
arpl
xchg
sbb
sbb
or
jo
data16
jge
push
jmp
xchg
test
sarl
jb
es
mov
ss
dec
rclb
mov
jne
ja
jb
push
std
xchg
jp
stc
nop
rclb
sahf
cmp
sub
and
out
pop
enter
jno
or
adc
std
test
jg
cmpsl
or
popf
xor
jge
movsl
mov
push
imul
test
fmull
or
es
push
sbbl
out
call
add
cld
and
stos
scas
je
dec
xchg
xor
xchg
scas
shrl
mov
repnz
insl
add
xchg
adc
pop
in
lds
dec
dec
jecxz
and
popa
mov
push
sub
mov
test
cmc
mov
scas
cmpsb
cmp
jne
les
lahf
xor
inc
and
jns
jo
out
mov
xchg
jecxz
jge
mov
pop
mov
fistpl
les
test
pop
fwait
in
add
mov
xchg
inc
es
mov
xlat
adc
mov
fsub
js
xchg
pop
cmc
add
xchg
arpl
jl
in
sbb
es
and
rclb
lods
inc
push
jp
lock
js
je
mov
push
int3
jo
xchg
cld
out
sub
push
sbb
lods
in
iret
push
vpunpckhbw
js
std
pop
adc
xchg
sbb
xchg
enter
mov
push
in
jle
xchg
jae
out
cli
xchg
loope
xchg
sub
sbb
pop
shll
into
data16
mov
int3
in
orl
sbbl
and
mov
mov
sub
rolb
repnz
loopne
arpl
gs
popa
mov
xchg
insb
mov
mov
frstor
rcr
loop
push
sbb
dec
xor
je
mull
sub
jne
pop
or
xchg
sub
xchg
mov
aam
lods
and
loope
dec
dec
xor
jp
call
add
sbb
pop
pop
or
mov
and
jo
lods
inc
push
cltd
jl
sbb
lret
xor
jg
inc
stos
inc
pop
int3
push
popf
adc
enter
and
bound
inc
fprem1
in
pushf
dec
sbb
sbbl
addr16
test
ret
mov
push
inc
mov
gs
cmpsl
ds
mov
andw
cmpsl
std
xchg
stc
mov
jp
adc
in
add
mov
fcomps
push
cmp
incb
push
pop
repz
xor
adc
mov
mov
cmp
mov
repnz
loope
addr16
insb
gs
call
mov
sbb
test
dec
cmp
lock
das
and
dec
loope
dec
dec
in
xchg
push
ret
jae
jmp
add
dec
insl
sbb
push
stos
xchg
imul
lock
cld
xchg
fs
push
movsl
xor
sub
test
dec
loope
dec
inc
fldl
punpckhwd
mov
push
out
cmpsl
xchg
int
outsb
add
and
sahf
xor
xchg
repnz
js
xchg
fidivl
add
xchg
jg
clc
into
xchg
push
mov
ljmp
sub
inc
dec
in
notl
mov
imul
fbstp
xlat
mov
push
insl
mov
ds
push
push
add
pop
xchg
sub
je
mov
sti
xchg
inc
pop
add
jo
pop
mov
cltd
daa
mov
jns
xor
push
xchg
pop
repz
out
icebp
jp
adc
jnp
ret
das
dec
jmp
xor
mov
aam
cs
aad
lods
dec
repnz
add
mov
fldcw
sbb
xor
jae
mov
xor
pop
stos
inc
test
enter
pushf
xor
aad
jge
add
fwait
cltd
jo
mov
mov
or
inc
fmuls
add
idivb
adc
popf
lret
lds
fwait
xor
popa
pop
cmc
inc
or
adc
jb
outsl
scas
das
lcall
cld
mov
stos
add
mov
cmp
aam
add
add
add
sub
sub
or
push
test
loope
scas
shrl
orl
xchg
les
ss
and
jmp
add
js
shlb
sbb
call
push
popa
push
movsl
cmp
inc
xchg
ret
adc
dec
loope
add
cmpb
xor
xchg
cs
daa
mov
mov
int3
lcall
ljmp
jno
add
mov
inc
jge
roll
lods
inc
mov
leave
lret
bound
fldl2t
addb
jne
fwait
sub
sahf
bound
mov
daa
cmp
cmp
jp
push
popa
clc
jbe
out
xchg
lahf
jg
in
push
movsl
jmp
sahf
xor
mov
rorl
pop
insl
fidivl
jg
adc
clc
or
xchg
cs
and
lds
aas
test
jecxz
ss
pop
hlt
push
repnz
jnp
push
lea
cmpsl
pop
sub
lds
ja
dec
inc
dec
jecxz
nop
aad
leave
icebp
jp
fsub
repz
negb
test
mov
pop
add
xchg
sub
ja
mov
in
andl
add
and
and
sub
repz
inc
fst
sbb
pop
push
repz
jmp
jns
jnp
jb
xor
ret
pop
mov
ja
mov
xchg
hlt
mov
sbb
test
cmpl
mov
or
rcr
lock
shll
ja
pop
push
pop
out
cmp
or
inc
push
mov
push
xchg
scas
out
xchg
mov
bound
adc
movsl
outsl
daa
jmp
ret
mov
rorb
into
mov
mov
sbb
outsl
push
xor
or
test
cmp
inc
mov
inc
in
xchg
mov
les
in
cmp
and
jae
xor
iret
cmpb
mov
sub
testb
or
fcoms
cmp
xor
mov
dec
xchg
loope
xlat
sbb
and
mov
and
fcoms
add
sbb
hlt
mov
jno
adc
mov
imul
fwait
xor
fcmovnb
pop
or
je
mov
fsts
sbb
xchg
xlat
in
mov
orl
icebp
inc
outsl
adc
outsl
std
jo
xor
push
dec
in
mov
mov
sbb
neg
sub
jg
cwtl
mov
pop
bound
or
insl
jo
jmp
das
jno
sub
leave
bound
xlat
cmc
std
xor
mov
shl
pusha
pop
sub
nop
pop
inc
mov
inc
shlb
jo
inc
push
dec
iret
sbb
mov
mov
xchg
xchg
notb
sbb
xor
lahf
dec
xchg
cmp
pop
pop
mov
fcomp
pushf
xchg
mul
loop
mov
xchg
mov
and
pop
xor
pop
adc
scas
scas
stos
mov
outsl
in
mov
push
dec
sbb
and
icebp
int
popf
dec
clc
xchg
testb
lret
movsb
into
cmp
pop
mov
mov
mov
loop
arpl
mov
leave
daa
in
test
cmp
add
inc
mov
scas
cmp
idiv
xchg
mov
jae
xor
mov
push
out
popf
xlat
or
in
add
fidivl
movsb
mov
sahf
mov
mov
test
sub
movsl
dec
addr16
mov
dec
popa
add
stos
loopne
int3
mov
adc
lcall
or
pmullw
insl
insb
jmp
mov
xchg
cmp
roll
push
int
cmp
faddp
fiadds
xorl
test
mov
rcll
jmp
fs
inc
mov
repz
add
dec
out
push
push
jg
test
push
mov
je
inc
jl
int3
adc
ret
test
daa
xchg
xorl
and
jecxz
stc
mov
pusha
xchg
movl
and
sub
inc
mov
out
je
addr16
jmp
and
andb
adc
stc
lods
std
adc
cmpl
aam
push
pop
sub
iret
aas
mov
hlt
pop
int
insl
les
dec
jns
inc
rcrl
ds
test
movzbl
adc
xchg
fneni(8087
andl
outsb
movsl
adc
xor
fcom
or
xor
mov
or
incl
cmc
popa
xchg
addr16
add
dec
sub
cmp
push
nop
iret
sbb
lret
xchg
fwait
mov
outsl
cmp
jnp
jmp
pop
test
dec
cltd
in
jne
adc
push
jbe
sbbb
and
loope
xchg
push
mov
in
fnstenv
add
add
iret
add
dec
xchg
cs
repz
les
jno
pop
adc
repz
cltd
cmp
lret
mov
mov
and
push
addb
ss
pop
push
or
fidivrl
push
mov
cmpsb
out
pop
lcall
add
mov
xor
pop
int
ljmp
out
cmc
mov
sub
pushf
and
cli
pop
imul
arpl
mov
mov
outsl
push
clc
mov
hlt
mov
mov
jne
mulb
pop
jne
or
test
push
cmpsb
les
mov
lea
mov
dec
jo
test
rcll
inc
push
xlat
dec
mov
and
ljmp
popa
fcompl
into
pusha
inc
dec
or
or
hlt
outsb
sbb
lcall
pop
int3
nop
push
dec
xchg
dec
sbb
and
call
jl
or
xchg
insb
pop
flds
xor
leave
inc
mov
sub
xchg
data16
push
repnz
dec
sbb
mov
jecxz
leave
push
push
push
mov
lret
and
jge
xor
add
jp,pt
fcoms
push
mov
in
dec
mov
inc
daa
mul
aaa
in
and
jmp
fwait
clc
data16
iret
push
jmp
sbbl
jg
dec
test
test
sub
pop
push
cmp
iret
mov
xor
xchg
pushf
xchg
enter
fldenv
push
outsl
push
ret
push
dec
xor
popa
pop
out
test
lds
testb
or
xor
sbb
push
cmp
aad
ret
mov
add
mov
insb
incl
jg
push
push
cmp
sub
fcompl
loop
xchg
add
cmp
enter
sahf
test
sub
sub
or
sbb
cmp
loopne
cs
xchg
cmp
int3
cltd
mov
insl
xlat
xor
jo
lea
iret
daa
repnz
mov
outsb
mov
sub
and
mov
pushl
fmull
jb
test
cmovae
or
icebp
mov
sbb
lret
cli
aam
mov
and
mov
mov
dec
daa
testb
sub
pusha
or
test
das
mov
push
sahf
imul
stos
add
iret
and
aaa
clc
and
in
dec
pusha
xchg
lea
sbb
and
fiadds
repnz
adc
test
loope
movsl
dec
sub
adc
and
loope
sbb
fnstenv
pop
jns
loope
aam
add
out
inc
movl
jno
mov
sbb
fmuls
fnstcw
adc
ret
rcrl
mov
mov
dec
pop
dec
lea
push
int3
cmp
aad
pop
rcrl
mov
sbb
ret
in
push
jb
cmp
imul
sbb
inc
mov
loope
movsl
fisubrl
out
add
xor
cmc
jne
cld
pop
jo
scas
lods
inc
xchg
rorb
inc
xchg
test
and
sti
mov
push
dec
jno
mov
dec
addr16
jl
mov
arpl
push
push
fcmovnbe
mov
std
push
je
lret
enter
mov
gs
shrl
mov
cs
testb
push
testb
stos
fmuls
xchg
xor
sbb
out
jne
jns
pop
push
pusha
inc
clc
loope
mov
repnz
push
and
xchg
mov
fcomps
adc
lds
mov
sar
inc
ljmp
xor
cmp
addr16
test
jnp
xor
and
sub
xor
lret
out
dec
pop
lret
aaa
inc
lock
in
jbe
mov
jp
xor
ds
sbb
stos
pop
or
cwtl
nop
push
in
add
arpl
pop
inc
enter
xchg
mov
daa
std
sub
xchg
mov
cmpsb
sbb
cmp
cli
dec
pop
pusha
xor
dec
and
inc
and
pop
bnd
or
lods
test
enter
sahf
xor
fwait
cmp
in
imul
insb
mov
test
sbb
push
pop
push
and
xchg
mov
adc
mov
dec
sub
mov
sbb
dec
mov
sub
xchg
xchg
add
fs
lret
mov
cmp
push
or
jne
lea
and
movsb
push
cmp
jp
lret
stos
jge
pop
icebp
loop
pop
cwtl
inc
mov
imul
decl
cmp
ss
lret
pop
aad
daa
mov
mov
xor
mov
mov
fisubrl
in
stos
dec
std
bound
es
mov
ret
push
xchg
and
jmp
inc
cmc
jbe
in
xchg
in
sub
mov
mov
mov
cli
xchg
enter
repnz
jnp
mov
scas
shlb
mov
mov
outsb
lods
inc
lcall
pop
clc
bound
jnp
clc
and
or
data16
fs
jmp
ds
test
mov
mov
adc
sub
push
pop
stos
and
mov
mov
in
cmpsb
xchg
inc
mulb
ret
jp
into
adc
sbb
divb
shrb
fwait
pusha
repz
sbb
cmpsb
push
in
inc
jo
mov
rorl
mov
fwait
sbb
clc
mov
sbb
inc
clc
rolb
je
out
loope
push
jl
faddl
or
mov
mov
mov
push
and
push
xor
movsl
cmpsl
cmp
adc
mulb
je
lods
das
sbb
arpl
daa
jecxz
cmp
fildl
repz
mov
cwtl
outsl
das
jecxz
scas
das
in
mov
cmp
outsl
jbe
roll
popf
xchg
add
sub
mov
jno
push
sbb
xor
and
bound
out
in
cli
pop
test
push
lods
ja
rol
mov
loope
inc
pushf
xor
dec
add
data16
ja
orl
incb
xor
ja
add
test
inc
test
xchg
loop
pusha
shlb
cmp
pop
xchg
lcall
das
gs
push
mov
rclb
or
out
movsl
jae
jbe
mov
cmp
cmp
in
ljmp
mov
loop
ja
or
or
pushf
and
cmp
aaa
je
adc
mov
ss
pop
jnp
lcall
lods
out
das
jno
cmp
jbe
sbb
inc
add
push
enter
cmpsb
insb
xor
scas
xchg
and
hlt
pop
cmc
ret
xchg
faddp
dec
sbb
or
or
js
push
icebp
rcll
lods
lret
lds
test
lods
pop
mov
daa
xchg
iret
sbb
mov
out
sub
sbb
xor
fstps
loope
adc
and
test
or
sbb
xlat
fs
insb
flds
std
aam
push
and
or
mov
sub
ret
mov
divb
dec
jb
in
mov
and
cld
cmp
or
pusha
mov
inc
sub
add
dec
cmp
push
mov
aaa
pop
pop
inc
xor
xorl
test
sub
lcall
push
stos
add
mov
outsb
in
repz
addr16
jmp
and
mov
mov
fcomip
adc
sub
or
inc
push
mov
aam
shrl
jle
or
push
pushf
aam
push
push
xchg
lods
xor
cmc
dec
fbld
loop
outsl
pop
xlat
inc
enter
leave
push
jbe
mov
mov
and
jno
pop
cs
inc
cmp
cwtl
add
sahf
sarl
xor
jno
sbb
lret
lret
psadbw
add
sbb
fadd
pop
movsb
mov
add
mov
mov
loopne
sbb
lret
ljmp
pusha
mov
xchg
pop
inc
xchg
sbb
add
push
repnz
dec
jns
pop
insl
je
mov
pop
jge
sbb
adc
push
rcll
cmp
and
nop
stc
out
pushl
add
push
lds
mov
mov
insl
xor
xchg
adc
and
std
xlat
xchg
push
sbb
icebp
or
les
call
xor
mov
xchg
and
inc
insb
pop
cmp
gs
inc
fsub
fistpl
jns
dec
xchg
ret
test
jge
jno
mov
mov
xchg
bound
lret
mov
dec
mov
orb
xchg
jbe
xor
es
jmp
cmpsl
xchg
ljmp
push
or
ret
lahf
inc
mov
mov
icebp
add
adc
jae
jbe
rcr
pop
push
or
pop
jbe
das
dec
es
in
sub
lcall
rcrb
mov
jg
xor
lcall
fs
xchg
xor
mov
rcl
pushf
inc
sub
punpcklbw
out
vpor
lock
adc
call
sub
sbb
and
sub
jo
cmc
not
and
cwtl
sbb
mov
fnsave
mov
jg
adc
cmp
sub
stos
mov
fnstsw
icebp
xchg
sahf
ret
aam
or
inc
outsl
outsl
jae
jp
int3
push
loop
adc
push
out
adc
repnz
aas
jmp
imul
sbb
es
xchg
push
push
dec
lea
cmpsl
mov
daa
add
outsb
das
lret
cltd
lcall
test
or
scas
xchg
or
or
xchg
lret
inc
inc
idivl
dec
cmpsb
js
push
adc
lret
inc
popf
lods
imul
xchg
sub
dec
cmpb
sahf
repz
aad
mov
ret
or
inc
enter
daa
shr
in
out
jecxz
xor
adc
insb
adc
lock
ss
cwtl
dec
pop
push
or
mov
sahf
inc
icebp
lods
adc
push
jns
push
and
shll
sarl
adc
adc
push
cs
lahf
sub
xchg
cltd
pop
hlt
hlt
repz
sbbl
test
aas
loope
mov
rcr
cmpsb
test
xchg
pop
xor
dec
jmp
sbbb
neg
pcmpgtw
cmp
sub
mov
and
mov
mov
sbb
pop
pusha
jno
cmpb
lock
push
sbb
mov
jp
jmp
jg
sbb
popf
insl
imul
call
jge
and
in
scas
push
addr16
cmp
lods
push
invd
mov
test
inc
cmpsl
jns
or
ret
pop
rcrl
cmpsl
lds
gs
in
dec
test
cwtl
jmp
fdivl
dec
jo
xchg
aaa
mulb
dec
repz
insb
and
lret
pop
xchg
mov
fwait
dec
mov
gs
pop
mov
or
outsb
add
and
pop
jge
or
into
mov
mov
cmp
mov
jae
jl
push
icebp
cli
mov
mov
jno
sti
popf
je
aam
dec
js
mov
mov
ret
push
sub
push
int3
lret
imul
and
adc
hlt
hlt
decl
cmp
pop
and
aaa
mov
and
hlt
xchg
icebp
and
int
mov
movsw
cmpsl
push
inc
imul
sub
and
mov
jecxz
test
mov
stc
cli
mov
rorb
mov
les
fisttps
dec
into
shl
imul
sub
jl
dec
and
es
mov
js
andl
imul
pushf
xor
stos
xchg
mov
stc
stc
mov
aas
aam
popf
mov
push
jl
xchg
test
outsb
mov
xchg
pop
cld
add
xchg
mov
pop
add
aam
jg
push
leave
dec
xchg
in
int
lret
lcall
pop
push
scas
xchg
daa
jmp
aas
inc
inc
je
ret
popf
adc
lahf
mov
mov
shrb
mov
in
stc
sarb
xlat
fldenv
jg
and
dec
clc
pop
mov
mov
jmp
inc
pusha
test
xor
sti
outsl
sahf
out
insb
movsb
inc
daa
mov
mov
push
lods
in
rorl
outsb
sbb
xchg
enter
enter
cmp
push
jno
push
xchg
bound
test
into
jmp
jp
lock
sar
loopne
pop
data16
fwait
shrb
stos
lods
data16
lds
mov
xor
imul
test
fdivp
fistl
shrl
adc
cwtl
inc
inc
aas
and
mov
fbstp
dec
hlt
cwtl
pop
push
add
in
out
sub
cli
mov
adc
pop
inc
loop
mov
mov
and
adc
int3
lds
lret
sbb
lahf
ljmp
fldl
mov
out
rol
addr16
repnz
cmp
test
and
inc
dec
fldenv
dec
cmpl
insl
repz
and
xor
cmp
das
out
sbb
mov
or
xlat
mov
insl
rcrb
push
jl,pn
stc
pop
cmp
test
xchg
pop
cltd
push
jge
add
xor
or
xor
lret
lret
mov
lea
add
frstor
and
dec
pusha
jns
cmp
dec
inc
jb
mov
imul
or
stos
add
cmp
nop
fsts
mov
xor
insl
out
aaa
xchg
mov
notl
lea
pop
add
sbb
mov
lret
or
loop
sub
adc
mov
and
add
cmc
mov
imul
shl
js
mov
test
cmp
inc
dec
sbb
jb
pusha
pop
imulb
fwait
pop
jns
mov
cltd
or
jne
shl
scas
xor
rolb
push
cmp
jnp
fsub
test
loop
xlat
xor
mov
repz
cli
sbb
insl
inc
push
into
popa
movsb
clc
add
cmp
das
jbe
iret
or
sti
loop
fistl
out
stc
cmpsb
mov
pop
in
in
push
or
lahf
and
and
sub
rcll
inc
adc
jns
fwait
clc
mov
or
ja
repz
cmp
cmp
and
or
icebp
fisttpl
sahf
ljmp
movsb
fsubrl
cmp
xchg
mov
inc
pop
mov
ficoml
sahf
adc
sub
fwait
xchg
mov
xchg
xchg
int3
das
pop
iret
movsb
xchg
jp
xchg
mov
mov
ss
sbb
sub
stos
ja
sbb
jb
jns
ljmp
fs
fs
cwtl
jle
push
jae
sub
aad
push
mov
xor
xor
inc
fcomp
cmp
or
pushf
dec
lods
iret
in
fsts
leave
or
mov
movsl
je
dec
inc
repnz
cmp
pop
sahf
inc
inc
shrl
cmpsb
jg
and
mov
and
and
test
xor
lret
sbb
jne
inc
fisubs
fsubl
mov
and
outsb
lods
rcl
push
push
jo
jbe
andb
shll
rcll
loopne
mov
sub
insb
rcrl
lock
sbb
aas
bound
pop
dec
insb
enter
icebp
loopne
movsb
mov
sbb
xor
pusha
loope
mov
cwtl
mov
mov
mov
xor
jne
idiv
xor
xor
dec
hlt
mov
jg
insl
in
pusha
mov
push
mov
pushw
inc
or
xor
ss
mov
add
ljmp
cmpsb
call
pop
inc
sarl
add
sbb
and
xchg
ret
cmp
cmc
and
mov
in
mov
lock
and
pop
jecxz
pusha
sti
loop
into
fisubs
scas
shlb
add
lds
repnz
fs
mov
cmpsl
jb
xchg
pminub
push
mov
xor
bound
std
shl
and
pop
cli
ret
mov
mov
mov
lret
dec
je
into
loop
mov
mov
adc
loop
or
xor
in
out
cmc
ret
jp
nop
in
adc
shl
adc
dec
loop
inc
arpl
mov
add
cmp
fcom
insl
sub
jnp
std
call
jne
mov
rolb
lret
inc
and
mov
leave
ret
hlt
je
fcoms
cmpb
out
add
xor
stc
out
pop
stos
lods
xor
aad
in
mov
jnp
xor
push
aad
xor
jb
push
movsb
mov
lret
outsl
scas
shlb
lea
cwtl
cld
lea
push
data16
or
outsb
out
std
dec
in
int3
pop
add
xchg
repnz
and
in
mov
xchg
jmp
cli
and
in
xor
leave
dec
push
mov
push
sbb
into
imul
push
hlt
neg
mov
lods
jp,pn
xchg
mov
jle
sbb
ds
jae
sbb
inc
pop
adc
bound
ja,pt
sub
dec
mov
in
out
je
in
sub
lahf
or
hlt
fiaddl
xor
inc
lret
mov
imul
xor
outsl
fsubrs
xchg
inc
jl
adc
and
movsl
les
clc
dec
sub
setle
aad
mov
adcl
fadds
xchg
xchg
test
mov
lods
mov
ret
sub
sbbb
jg
xchg
adc
test
inc
rorb
arpl
fucom
outsb
nop
leave
push
test
xchg
jno
jae
rol
sub
sub
add
out
cmp
pop
rclb
sbb
push
push
pop
sub
aad
jle
cmpsl
dec
sub
mov
jmp
lods
enter
add
jmp
dec
mov
sti
and
les
push
pop
pushf
mov
jmp
dec
icebp
dec
xchg
and
dec
je
test
pusha
or
lods
sub
insl
mov
jno
das
push
mov
fldl
mov
shll
cmp
mov
mov
cmp
add
out
daa
sbb
inc
mov
rcll
dec
push
inc
int
adc
push
adc
std
in
sbb
adc
jle
mov
sar
aad
iret
rolb
test
dec
subl
jo
test
scas
shlb
push
jnp
outsb
inc
in
sbb
or
out
lahf
fimull
push
push
add
arpl
stos
fdivp
out
data16
jecxz
push
test
xchg
loop
outsb
aas
in
push
inc
out
push
pop
mov
in
das
mov
cli
push
adc
fcom
xchg
not
mov
adc
adc
int
xor
arpl
pusha
and
scas
cs
js
call
aaa
sahf
jnp
scas
popf
addr16
rep
and
lret
sbb
mov
cwtl
cmp
sub
or
cs
cld
sub
dec
mov
cmp
test
xchg
mov
pop
adc
rcll
rorl
mov
mov
add
mov
and
int3
xchg
sahf
or
dec
subl
mov
enter
popa
es
fstpt
pop
mov
or
jg
or
add
orb
mov
insl
clc
test
in
mov
mov
decb
call
scas
es
push
mov
and
mov
std
xchg
jg
mov
pushf
shll
jnp
int3
mov
leave
sub
mov
mov
fstps
mov
stos
xchg
aas
add
in
out
sub
test
rol
outsl
sets
ja
sub
lret
dec
lret
je
xor
ret
pop
sbb
xor
xchg
cltd
int
pop
mov
inc
testb
add
shrb
in
hlt
jne
int
inc
jae
mov
xchg
fadds
std
sub
mov
adc
mov
cwtl
in
sbb
xor
sbb
cmp
cmc
push
mov
xor
imul
ja
mov
pop
inc
repnz
das
in
xchg
popa
mov
bound
push
cmp
sbb
inc
loope
fidivrs
jno
xchg
mov
xor
enter
insb
test
adc
daa
cli
mov
sbb
in
subl
pop
fmul
out
xchg
addr16
js
je
and
add
fcompl
out
xchg
jns
add
call
inc
aad
orb
outsb
stos
popa
gs
mov
test
andl
jae
inc
ss
cmp
jo
mov
sub
test
xlat
cmp
mov
cwtl
pop
test
mov
cltd
xchg
add
sub
jb
jbe
push
or
mov
into
das
push
xchg
push
loop
ret
cmp
arpl
insb
xchg
test
push
shll
mov
push
inc
or
or
cmovge
and
and
dec
jl
ret
test
mov
fadd
add
fidivl
hlt
call
lods
shr
jo
inc
cmp
mov
sbb
stc
adc
loope
mov
cmc
inc
and
fs
mov
scas
cmpsl
bound
int
jge
or
roll
out
in
cmp
mov
in
test
pop
inc
ficoms
clc
js
jmp
sar
out
adc
inc
cmp
les
icebp
push
shrl
cmpl
movsl
popa
jle
cmp
xor
and
inc
dec
fmuls
outsl
mov
ret
mov
insb
or
and
sbb
sbb
outsb
dec
sub
lcall
stos
xor
mov
or
setae
test
jbe
mov
pop
mov
sub
adc
pop
adc
sbb
xchg
pop
call
sbb
push
test
aas
dec
sbb
xchg
stos
inc
or
mov
test
xchg
mov
push
mov
pop
pop
orw
int
pop
pushf
jecxz
inc
sbb
hlt
adc
mov
into
popa
xor
aam
mov
pop
add
inc
lcall
or
or
or
ret
dec
out
adc
in
clc
sub
xchg
decb
cs
xchg
stos
in
mov
pushf
sub
cld
mov
mov
stos
jns
in
sub
mov
aad
fnstsw
test
insb
nop
lods
movsb
cltd
push
jae
xor
jb
lods
rcrb
aaa
aas
and
imul
shrl
les
cmp
mov
cli
mov
add
mov
sbb
subb
adcb
add
inc
sbb
pop
test
add
js
add
jecxz
mov
into
movsb
mov
push
inc
pop
in
fwait
mov
mov
xor
push
movsb
pop
or
add
inc
or
inc
aad
out
mov
inc
fdivrl
cmpsl
int
out
sarb
arpl
cltd
mov
mov
cwtl
outsl
in
scas
mov
test
dec
pop
enter
outsl
jl
inc
dec
dec
push
stc
jl
iret
cmpsl
mov
outsb
imul
mov
out
jle
sub
loope
mov
daa
and
std
fwait
clc
insb
dec
or
mov
out
adc
in
loope
adc
xor
push
pop
mov
ljmp
cmp
gs
push
push
fucomi
sub
insl
lcall
adc
cmp
pusha
jp
push
fbld
in
insl
inc
cmp
inc
sbb
mov
mulb
mov
cmp
cmp
add
add
pop
int3
and
push
cmpsb
sbb
mov
aaa
pushf
add
lea
pop
add
lcall
push
inc
xchg
jbe
cltd
pop
inc
and
lret
hlt
pusha
loopne
mov
out
es
xor
dec
and
shlb
and
out
jns
mov
cmp
test
or
cmp
cltd
cli
add
jecxz
das
sub
lods
popf
push
mov
mov
sahf
int3
out
hlt
dec
push
jg
add
fists
fistps
mov
inc
inc
movsl
add
sbb
hlt
pop
popf
mov
test
imul
enter
pop
lret
mov
xchg
xorb
fcmovu
andb
inc
push
call
imul
and
adc
jp
or
sbb
xor
jge
sbb
and
inc
mov
push
mov
pop
repnz
pop
push
and
lcall
addr16
jmp
dec
stos
in
xor
int
add
rclb
scas
cld
pop
sahf
jo
icebp
mov
and
in
jg
jae,pt
or
or
push
fwait
enter
dec
sub
ds
nop
jne
adc
adc
sub
add
stc
adc
ret
sub
inc
fisubrs
and
jbe
mov
add
das
push
in
and
arpl
je
out
lods
add
mov
mov
and
and
loopne
sbb
ja
pusha
into
mov
and
lret
insl
sti
iret
int3
test
dec
inc
int3
and
or
mov
cmc
fwait
add
scas
pop
and
mov
scas
jbe
xlat
cmpsl
rclb
leave
pop
cmc
cli
and
push
sbb
dec
jne
daa
cmpsl
outsb
pushf
xor
sarl
dec
adc
jno
outsb
in
test
rorl
jmp
das
movb
cmp
pop
pop
hlt
mov
add
loop
mov
cmp
xchg
sub
push
mov
mov
aam
in
adc
xchg
dec
or
xchg
imul
xchg
push
adc
call
or
cmp
dec
in
pop
jge
lea
add
cmpsb
xchg
fadds
mov
cmp
push
fidivl
dec
pop
jle
cld
xchg
ficompl
sbb
mov
inc
adc
rcrl
test
and
dec
loop
inc
cltd
xor
outsl
push
outsl
cltd
rcrl
xchg
sub
in
fidivl
in
inc
push
inc
add
jno
iret
imul
mov
fimuls
mov
push
mov
mov
fcoml
cld
push
xor
sbb
shrl
jp
cmp
mov
movsb
pop
and
jb
jl
lds
into
dec
jecxz
es
inc
and
pop
fs
pusha
sahf
jl
inc
cmpsb
mov
mov
add
mov
pop
push
inc
xlat
mov
inc
cmpsl
scas
xchg
sub
enter
cli
sbb
and
insl
add
inc
insl
jle
lea
lahf
jbe
leave
mov
push
in
adc
insl
outsb
pop
lds
test
pop
add
lds
dec
jle
js
cmpsb
cmp
ret
lret
repz
lods
sbb
outsb
add
stos
mov
fdivp
aam
inc
push
push
mov
jge
jno
out
jp
inc
movsb
lret
les
lds
popf
push
imul
dec
jno
sbb
int3
and
jbe
push
add
dec
jo
pop
stos
imul
hlt
mov
dec
lock
mov
test
lret
hlt
mov
js
adc
xchg
dec
outsl
mov
cltd
insl
stc
xchg
mov
pop
cmc
lock
sub
adc
mov
mov
ret
add
out
repz
sub
dec
popa
clc
ja
fs
xchg
cwtl
lea
mov
sbb
jecxz
ret
sbb
loope
dec
cmp
loopne
xchg
mov
lahf
mov
popf
xor
rolb
inc
dec
sub
sub
pushf
xor
mov
xor
or
jo
sub
push
push
pop
add
mov
gs
rcl
mov
repz
dec
and
mov
ret
or
cld
loop
add
push
add
addr16
test
in
ror
arpl
lods
inc
pop
pop
inc
fadds
mov
mov
pushf
and
daa
cmpl
adc
mov
add
sub
daa
and
jae
dec
mov
pushf
cmpsb
xchg
pusha
test
out
rcrl
dec
loopne
cmp
jl
stos
movsl
test
aam
fisttps
lahf
or
adc
push
jnp
mov
je
sti
lods
lds
dec
lea
pop
xchg
dec
sbb
stos
xchg
fs
jecxz
mov
push
in
shlb
cli
push
dec
in
sbb
cmp
pop
pop
cmc
andl
fs
and
xor
inc
dec
dec
in
movsb
cmp
ret
std
out
or
in
cmp
arpl
int
test
mov
fists
pop
adc
fs
insl
or
xchg
je
sub
in
rorb
or
xchg
sub
sub
push
xorb
lods
movsb
push
in
fmulp
xchg
cmp
dec
in
pop
xchg
sub
cmpsl
xchg
loopne,pn
into
gs
or
in
mov
in
stos
popf
xor
mov
add
cmc
mov
movsl
ss
pop
hlt
mov
add
mov
in
clc
popf
xor
or
xor
xor
fs
sahf
sbb
and
ljmp
xor
push
jns
xchg
xchg
stos
inc
lret
movsl
in
in
pop
hlt
push
push
jp
cmp
sub
bound
in
test
icebp
fstp
mov
or
int
sub
sbb
xor
dec
loope
xchg
dec
in
lret
popf
xor
in
jb
pop
pop
ret
pop
push
cmp
rep
xorl
into
inc
fisttpll
add
es
jmp
mov
rcrl
add
arpl
inc
and
pushf
xor
shll
hlt
sbb
hlt
inc
adc
xor
xchg
outsl
dec
jecxz
mov
xor
mov
xchg
sub
add
fs
sbb
test
cmp
cmpsl
dec
in
add
add
pop
sti
xchg
xchg
pop
stos
inc
mov
adc
mov
outsl
jmp
or
jle
bound
xchg
cltd
mov
inc
adc
push
cmovp
cmp
push
mov
ret
imull
mov
push
sti
mov
arpl
mov
outsl
into
adc
mov
outsl
dec
loope
cmp
arpl
dec
loop
add
add
fimuls
lahf
pop
pusha
push
mov
in
cmp
stos
add
pop
cmc
cli
push
cmpsl
mov
sbbl
fidivs
cmp
enter
dec
icebp
mov
fidivs
fwait
and
cltd
scas
lock
rcrb
mov
dec
pop
out
jle
inc
fstl
jge
int3
je
mulb
les
and
mov
push
fs
push
loop
push
pushf
push
lea
mov
push
adc
add
cs
fcompl
cmp
and
push
dec
fimuls
mov
jns
dec
repz
sub
sbb
mov
sub
xchg
mov
int
test
aas
loop
sub
push
mov
inc
jae
int3
push
mov
loop
sub
add
sub
mov
inc
xor
jns
inc
out
xchg
fs
out
push
sbb
xchg
xor
xor
bound
aam
mov
roll
lahf
adc
and
pop
inc
sbb
push
xchg
sub
mov
iret
imul
ss
xlat
imul
mov
xchg
xlat
xchg
xor
mov
ret
or
cmp
pop
mov
cld
stos
into
pop
xlat
adc
repz
stc
fisubrs
andl
dec
out
js
mov
push
in
xchg
decb
ds
cwtl
sbb
pushf
je
pop
mov
les
ret
adc
adc
and
cwtl
fs
push
movsl
mov
movb
rcrb
cmp
push
sbb
outsb
xor
mov
jle
pop
divb
outsb
dec
sbb
xchg
xor
mov
fucomi
mov
mov
sbb
daa
jnp
stos
xchg
pop
xchg
and
cmp
rcrl
sub
xor
cmpsl
push
and
sbbl
repnz
jne
push
std
cmp
push
sub
fs
shll
pop
fnstenv
int3
dec
out
cs
mov
xor
mov
mov
cmpsl
lret
or
repz
sahf
inc
imul
cmpsl
jg
scas
xchg
clc
scas
cmp
dec
pop
sub
xor
cs
dec
push
loope
movsb
mov
xor
cmp
scas
dec
sub
imul
outsb
adcl
and
sub
stc
mov
inc
push
repz
or
xchg
subl
rclb
add
shll
adc
pop
adc
sbb
neg
adc
dec
movlps
lcall
mov
test
sub
sahf
cmp
dec
cmpxchg
mov
jecxz
adc
and
lret
fs
insl
or
popf
pop
fnstenv
iret
dec
out
testb
pop
pop
mov
jae
mov
scas
mov
xchg
xlat
loope
add
adc
push
je
repnz
outsb
or
jecxz
inc
repz
sbb
add
shll
jbe
sbb
mov
lea
icebp
lock
mov
sbb
lcall
pop
jmp
or
cmp
inc
out
pop
inc
jns
addr16
cltd
lods
add
in
lcall
xor
mov
aad
popa
mov
cld
xchg
out
adcb
or
mov
jp
cmp
inc
int
inc
out
out
and
dec
loopne
inc
in
je
dec
out
xchg
shrb
mov
mov
sbb
xor
daa
cmp
inc
outsb
dec
inc
fdivrs
dec
jecxz
lcall
adc
std
xchg
and
sbb
mov
fildl
popf
or
pop
lock
and
push
inc
fnsave
rclb
fbstp
jmp
arpl
test
sbbl
sti
xlat
pop
testb
in
test
std
xchg
pop
insl
or
mov
sub
in
fdivrs
rorb
push
dec
fbstp
es
out
push
dec
data16
jns
jne
mov
mov
sub
or
mov
aam
rclb
aam
das
mov
jmp
test
lods
fsubs
mov
stc
cmp
mov
and
jle
insl
leave
in
test
into
gs
sarb
xor
dec
jecxz
push
sbb
jbe
sub
mov
xchg
mov
fsts
sbb
push
rcrl
xchg
sub
cmpsb
lahf
rclb
push
popf
add
leave
pusha
inc
and
stos
push
push
xor
mov
les
or
sbbb
fidivs
jge
jbe
pop
jnp
or
call
pop
sbb
mov
movsb
test
fisubl
and
sbb
xor
dec
cmp
push
xchg
jle
cwtl
sahf
mov
add
fcomi
xchg
cs
std
inc
ficompl
cmp
push
push
cmp
loopne
je
insb
mov
sar
xadd
cmpsb
mov
in
jbe
mov
cld
and
mov
mov
hlt
imul
mov
inc
jge
dec
test
inc
and
mov
lahf
roll
lods
shrl
hlt
adc
out
xor
sub
mov
cmp
xor
xchg
pop
add
insb
sub
sbb
out
jecxz
insl
mov
jbe
or
and
cs
les
mov
sbb
inc
xchg
shlb
adc
push
pop
test
data16
popf
xor
aam
push
movsl
repz
jb
cwtl
popa
push
xchg
sub
mov
xchg
icebp
inc
insl
add
mov
js
mov
cld
xchg
outsb
xor
pop
test
jno
lret
push
popf
insl
mov
adc
inc
fdivrl
rorl
mov
stc
stc
cmpsl
ds
jle
mov
ret
cmp
jl
mov
mov
lcall
and
fistpl
sarb
lods
inc
jl
stc
insl
jns
outsb
stos
popf
jp
lods
inc
push
dec
mov
jbe
jb
push
fs
out
pop
mov
cli
xchg
push
outsl
stc
nop
lahf
pop
and
mov
decl
aam
stc
out
incb
xor
jb
loope
push
call
bound
dec
xchg
xchg
in
mov
mov
leave
pusha
xor
mov
shlb
or
clc
xchg
nop
jbe
ret
add
mov
fs
aaa
mov
imul
in
sahf
fdivp
lea
mov
andb
dec
in
and
mov
cld
xlat
and
enter
lods
or
mov
pop
jg
mov
dec
jae
mov
cmp
mov
loope
aaa
es
xchg
fisubl
mov
mov
and
or
sbb
and
and
sbb
mov
xchg
fbstp
int3
and
mov
and
popa
mov
mov
jmp
and
adc
sbb
lret
aad
sbb
or
mov
hlt
jg
mov
jae
pop
movsl
jae
mov
push
sbb
cli
xchg
inc
fwait
or
cmp
mov
mov
or
stos
xchg
sbb
push
push
adc
push
xlat
sbb
dec
cli
adc
aaa
sbb
mov
shr
repnz
push
in
lods
pop
sbb
lds
adc
push
arpl
mov
sbb
dec
xchg
jl
or
fnstenv
mov
mov
je
scas
lcall
and
xchg
xchg
dec
icebp
mov
pop
hlt
leave
cli
and
jle
xor
mov
sahf
pop
not
insl
sbbl
xchg
imul
adc
ret
xchg
xor
inc
xlat
outsb
jae
add
sub
pop
cmc
fldt
inc
fimull
lret
mov
mov
jns
jo
xlat
outsb
mov
movsl
ret
pop
pop
mov
push
jecxz
nop
daa
dec
data16
pop
cltd
mov
xchg
std
pusha
shrl
add
push
add
gs
adc
mov
sub
sbbl
fimuls
pop
inc
cltd
jnp
lret
and
lea
xchg
ljmp
call
push
sbb
mov
lret
adc
std
mov
das
lods
xor
xchg
cmpsb
sub
lock
movsl
jns
pop
sbb
push
stc
nop
dec
or
ss
mov
std
mov
std
xchg
jb
jno
packsswb
test
dec
pop
scas
jle
decb
cli
inc
fsubrs
sbb
ljmp
test
xor
scas
movsl
cwtl
es
test
loop
mov
lods
dec
xchg
bound
inc
std
xchg
jae
cmp
xor
cmp
mov
fistpll
cmp
lret
cmp
stos
mov
sarb
push
mov
mov
jno
dec
in
stc
mov
scas
dec
lods
int
fimuls
testl
mov
cmp
push
add
push
popa
addr16
push
fistpll
mov
or
data16
pop
imull
pop
andb
mov
jae
imul
adc
scas
inc
clc
push
inc
fiaddl
fnstenv
xchg
fbstp
sub
subb
adc
sbb
mov
stos
daa
mov
dec
imul
lods
lahf
dec
out
sub
cli
insl
inc
call
or
das
jle
mov
mov
mov
mov
mov
cmpsb
cmp
jb
mov
jecxz
push
out
test
testb
mov
push
sub
sub
xor
pop
cmc
fnstcw
call
sub
jb
lret
fucom
jp
mov
orb
mov
loopne,pt
jno
lods
inc
sub
ljmp
lods
sbb
fstp
add
into
or
pop
out
mov
inc
sbbb
outsb
ret
pop
pusha
notb
push
mov
pop
jecxz
int3
arpl
shlb
dec
xchg
nop
cmp
sahf
stos
push
or
xchg
ds
pop
or
daa
xchg
pop
push
mov
sbbl
xchg
test
lds
aas
cmpsl
test
xchg
sbb
rcrb
mov
push
ja,pt
mov
add
mov
pop
cmc
inc
call
fsubrl
xor
popa
das
jecxz
mov
movsl
push
out
push
fimuls
arpl
mov
in
push
iret
into
add
pop
inc
xbegin
push
cmc
jg
mov
jmp
in
xchg
sub
dec
sbb
jb
inc
int
daa
mov
mov
scas
inc
lock
ja
jo
mov
jmp
arpl
aaa
dec
out
mov
lea
sahf
fbld
mov
sbb
adc
mov
sbb
divb
daa
mov
mov
repnz
es
push
popl
dec
inc
daa
mov
aas
cmp
add
test
xchg
cs
pop
ret
pop
dec
pop
rcrl
pop
mov
dec
shrl
cli
cld
xchg
in
stc
add
jbe
mov
scas
loop
cmp
push
gs
xlat
xchg
sbbb
xchg
jns
jmp
in
pop
neg
testb
xchg
scas
mov
mov
push
add
jb
jb
dec
es
pop
xor
das
pushf
lcall
dec
test
fwait
insb
add
dec
push
ljmp
ret
inc
stc
nop
jae
adc
sub
add
fistps
inc
fmulp
into
inc
fdivrl
mov
sbbl
xor
sub
test
mov
pop
dec
leavew
pusha
cltd
mov
mov
xchg
cli
add
mov
int3
arpl
dec
aaa
into
jg
inc
fstl
aam
and
stos
jae
faddl
movsl
cmp
jbe
sbb
scas
inc
mov
cmp
jo
mov
jmp
pop
push
sbbb
ficompl
sbb
lret
daa
mov
jmp
xor
mov
sbbl
addr16
xchg
xchg
loop
or
aad
adc
aam
ss
pop
test
ret
cmc
jl
adc
je
jb
insl
xchg
push
sahf
js
adc
imul
mov
cli
mov
in
loope
push
jmp
jg
lcall
jnp
shrb
roll
je
xchg
sub
repz
cmpsb
sub
fsubs
daa
pop
lahf
pop
repz
fwait
pop
lock
outsb
add
inc
cmp
icebp
cmc
jmp
pop
sbb
nop
daa
jmp
aam
or
gs
fmul
push
popf
sti
pop
mov
mov
gs
lds
cmp
or
loop
jecxz
jp
add
adc
mov
cmc
xchg
push
push
jg
jb
daa
mov
pop
sar
nop
add
cmpsb
cmp
jb
les
js
lods
test
scas
inc
fcmovnu
je
xchg
movsl
sbb
jmp
testl
mov
fwait
lock
adc
daa
lret
setns
inc
jp
jge
bound
sahf
std
mov
addr16
and
dec
or
xchg
insl
inc
fistpl
mov
cs
fisttpl
dec
out
popa
lahf
xor
jl
mov
and
pop
fsubrl
in
cmpsl
cmp
push
icebp
mov
scas
adc
rolb
leave
xor
push
push
out
mov
pop
mov
lods
jb
fildl
nop
sub
rcrl
or
xchg
jge
pop
cmpsl
shrl
jl
xor
sarb
cmpsb
jg
xlat
outsb
push
mov
cmc
mov
lret
sti
inc
imul
dec
xchg
xchg
leave
outsb
push
out
ljmp
rcr
scas
inc
unpckhps
std
test
mov
mov
sbb
jl
sbb
mov
sub
lret
sbb
in
jl
insl
insb
outsl
push
lahf
jo
in
popa
pop
cltd
xor
dec
stos
inc
jg
nop
daa
pop
sti
fnsave
mov
cmp
int
scas
pushf
icebp
mov
mov
and
push
ds
push
call
pop
hlt
add
xor
adc
add
cmp
add
stos
ret
pop
sbb
sahf
xor
push
and
xchg
notb
mov
inc
or
mov
mov
aad
mov
xchg
stc
push
jmp
sbb
fistl
xchg
xchg
sub
mov
ljmp
add
jb
loop
std
xchg
push
movsb
cmp
push
mov
test
aad
inc
loopne
je
jl
push
hlt
ljmp
mov
stc
nop
cmc
xchg
cs
cmp
jmp
in
jl
fidivs
sbbb
or
push
jle
xchg
sub
aam
dec
push
xor
aam
shl
repnz
sbb
jbe
xchg
xor
mov
mov
cltd
sti
in
ret
cmp
in
aam
hlt
add
les
cmc
clc
mov
or
and
shrl
adc
pop
inc
sub
aam
xor
mov
popf
out
add
test
cmpsl
xchg
das
mov
mov
dec
jecxz
cmp
ja
cld
xchg
int
cltd
xor
sub
out
cmpsb
stos
inc
fldz
sbbl
shl
test
aad
out
leave
sbb
mov
leave
cmpsb
cmp
mov
mov
sub
xor
inc
lods
jecxz
notb
add
clts
jecxz
rcl
mov
lahf
xlat
jbe
dec
test
gs
fsubrs
out
popa
ljmp
sbb
es
push
out
adcb
leave
sub
cli
adc
jno
jge
cmc
scas
mov
push
sub
push
xor
or
call
dec
andb
adc
je
in
aaa
xchg
divl
jg
jns
and
sti
push
sub
test
mov
repz
mov
add
andb
and
push
lds
aam
mov
sbb
popf
gs
decb
in
cmpsl
push
cmp
cmp
add
es
mul
jno
jno
adc
fisubl
mov
pop
in
mov
sub
xchg
sub
dec
adc
xchg
xchg
push
out
mov
inc
fmuls
adc
movsb
insl
pop
aas
mov
dec
loopne
aas
add
cs
jge
mov
lea
mov
mov
shrl
jle
fwait
cwtl
loope
lret
sbb
sub
and
and
mov
or
stc
pop
cwtl
call
pop
or
popf
xor
lret
lcall
jl
inc
scas
xchg
outsb
pop
or
js
sbb
cltd
dec
mov
cmp
in
jg
aas
in
lcall
inc
enter
fs
insb
xor
dec
in
cmpsl
lds
pusha
imul
pop
mov
dec
imul
rclb
pop
rep
test
in
sub
mov
out
in
in
inc
xlat
imul
push
rcrl
push
jmp
lret
test
mov
ror
mov
push
out
mov
ss
popa
clc
lods
daa
shrl
sub
fcompl
sub
stos
dec
fucomip
ret
lcall
cmpsl
cmp
sbb
or
jno
mov
or
stc
stos
inc
sub
lods
push
imul
lret
loopne
mov
mov
push
in
test
and
idivl
xor
out
pop
negb
out
insb
imul
int
xor
into
adc
inc
stos
mov
xlat
outsb
popa
xor
shll
out
sbb
adc
dec
xlat
inc
fmull
jg
sahf
jo
dec
out
adcl
stc
add
mov
mov
aam
cli
xor
xchg
jle
pop
adc
adc
push
xor
add
enter
cmpsb
cli
testl
nop
adc
xor
flds
insl
add
jmp
xchg
cs
outsl
rcrl
adc
pop
lock
popf
dec
adc
in
test
adc
cmp
shrl
mov
push
ljmp
iret
data16
push
nop
push
dec
in
push
leave
pusha
mov
sti
xchg
orb
sbb
or
icebp
aaa
into
and
add
clc
ret
mov
or
mov
movsl
cmp
and
rcll
add
sub
mov
and
xchg
lcall
mov
ret
enter
dec
jae
arpl
jae,pn
sbb
jne
fldt
enter
rcrb
inc
lret
dec
inc
addl
enter
scas
sbb
push
popf
aam
inc
pop
or
int3
shrl
popa
test
push
jns
pushf
stos
xchg
mov
pop
out
mov
loopne
cmp
dec
mulb
in
xrelease
in
ja
jmp
sub
mov
daa
mov
pop
cli
gs
jmp
in
push
stc
les
pop
testl
inc
sbb
xchg
mov
xor
jne
mov
aaa
into
das
insl
imul
scas
pop
jb
jl
mov
out
sti
stos
inc
sub
lods
fsubl
jge
movsl
outsb
cltd
incb
adc
pop
xchg
xchg
cltd
mov
aas
adc
jo
push
popf
jmp
sbb
jno
scas
adc
rcrb
lea
dec
jecxz
js
jge
jle,pt
jno
xor
pop
sub
xchg
sub
dec
push
inc
les
jno
cmc
bound
test
pop
ja
pop
mov
repnz
testb
stos
fidivs
xchg
montmul
cmpsb
les
int3
push
cmpl
mov
xchg
cs
aaa
dec
loop
inc
jp
aaa
loop
adc
aaa
push
in
test
xchg
pop
lods
mov
push
dec
les
fiaddl
lds
push
inc
ss
sarl
add
mov
test
jb
clc
stos
das
sbb
movsb
cmp
xor
lds
dec
test
xor
jno
mov
mov
dec
sub
aad
mov
dec
filds
imul
imul
fidivl
cmpsl
lods
inc
fnstcw
es
rcr
fnstenv
xchg
add
rolb
testb
call
lcall
fdivrl
xchg
loope
pop
sti
adc
addb
sti
xchg
push
cmp
imul
subl
add
add
out
out
loop
clc
and
xchg
jg
mov
cmp
mov
xchg
in
xor
push
cmpsl
fdivl
ficompl
or
adc
dec
lret
insb
add
outsl
jne
aas
cmpsl
cmp
mov
jnp
stos
adc
loop
fisttps
rorl
pop
push
in
rolb
push
sarb
shlb
add
mov
call
dec
and
test
xor
ret
dec
xchg
inc
jl
jnp
mov
pop
adc
sub
cmpsb
addr16
push
call
jmp
imul
jle
into
xchg
cmp
mov
rcrl
stos
test
jns
and
or
mov
lock
outsb
movsl
mov
cmp
push
hlt
popf
cmp
scas
daa
out
pop
stc
lret
hlt
pop
pop
jge
gs
outsl
cmp
adc
push
lea
and
call
pop
push
xchg
xchg
arpl
push
and
std
pop
fdivrl
dec
gs
xchg
pop
loop
bound
add
incl
popf
push
mov
and
idivl
shll
push
std
aad
sbb
jo
xor
test
push
pusha
pop
sahf
sbb
loope
sub
out
cltd
dec
or
inc
mov
cmpsl
cs
fstps
shll
clc
lcall
sub
cmpsb
lret
call
pusha
cwtl
xor
sub
xchg
mov
or
sarb
stos
orb
jne
idivl
fdecstp
out
xchg
pop
call
add
push
repnz
and
xor
sub
aas
movsb
ret
aas
aaa
pushf
movsb
adc
jg
dec
adc
outsl
sbb
inc
pusha
out
in
sbb
rorl
call
mov
or
mov
and
mov
insl
lret
xor
icebp
pop
aaa
jp
dec
mov
add
popa
ljmp
pop
xor
shlb
push
in
add
mov
scas
pop
jle
shl
repnz
mov
pushf
cmp
fldl
sub
jmp
jecxz
pusha
jmp
in
in
xchg
jo
rcrb
loope
ss
insb
notb
lret
jns
inc
aaa
and
mov
ljmp
icebp
fistpll
hlt
adc
decl
cmp
xorb
sti
andb
out
imul
ja
ds
add
cli
daa
push
push
mov
push
rolb
jbe
out
sub
out
jno
add
es
test
das
std
les
fs
stc
inc
xor
sbb
icebp
lret
mov
fdivr
hlt
pop
sti
mov
xor
mov
cmc
imul
adc
rolb
add
sahf
stc
imull
daa
rolb
inc
sti
and
out
stc
jp
mov
fld
test
push
repnz
pop
sub
cmp
push
mov
int3
add
add
push
scas
sub
jns
pop
clc
mov
out
aam
daa
dec
dec
xchg
add
gs
in
loopne
clc
out
aam
lods
add
jne
and
mov
shrl
jmp
shufps
cmp
mov
jecxz
out
add
scas
add
add
rorb
pop
sbb
ret
mov
mov
or
push
push
cmc
xchg
pop
stos
das
in
test
lcall
sarl
cmpsb
mov
in
pop
ret
sub
ret
xor
and
jge
pop
cld
movsl
jmp
xchg
aam
adcb
jmp
ret
mulb
xchg
push
hlt
pop
sti
push
mov
je
mov
inc
mov
cltd
shrb
out
movsb
out
mov
mov
icebp
sbbb
fidivrl
jno
lcall
out
enter
call
mov
sbb
inc
negl
jns
cmpsb
add
imul
je
fidivrs
mov
add
leave
push
daa
push
test
in
scas
inc
cmp
leave
pop
xor
adc
xchg
sub
mov
push
sbb
sbb
imulb
pop
jmp
sub
es
xchg
sub
mov
leave
jle
push
aam
xchg
push
mov
aas
test
pop
int
cmpsl
mov
jo
pop
adc
pop
adc
das
subl
adc
pop
jmp
mov
cmpsl
loope
stos
mov
insl
lds
sub
adc
xor
sbb
bound
mov
mov
cmpsl
push
cmpsb
nop
add
mov
jb
out
paddusb
pushl
mov
mov
cmp
and
int3
jo
in
add
pop
pop
pop
nop
dec
lahf
repnz
xchg
add
dec
aad
jae
or
mov
pusha
mov
int3
lcall
adc
das
lock
push
in
fwait
leave
sub
hlt
cmpsb
test
inc
lock
jge
mov
andb
inc
sub
xchg
or
dec
mov
pop
cld
push
rorl
ret
scas
nop
iret
xlat
sbb
sbb
push
mov
leave
dec
addl
inc
push
sbb
inc
fwait
sub
and
test
xchg
or
cld
xchg
sbb
outsb
and
lea
repnz
sarb
fs
lret
add
pop
pop
and
je
js
ret
jne
cwtl
lods
bound
push
into
lahf
adcl
sub
push
ret
loope
test
pusha
jnp
add
fsts
ss
xor
lahf
pop
cwtl
scas
jae
ds
and
add
loope
lock
xchg
pop
sbb
pop
dec
jp
scas
stos
outsb
loopne
mov
ret
hlt
and
adc
jo
cmpsb
addr16
cwtl
enter
mov
scas
inc
dec
or
cmp
bound
ret
stos
mov
mov
pop
fistps
dec
xor
orb
fwait
les
adc
daa
mov
cmpsl
notl
mov
mov
bswap
shrd
lea
jae
jo
jecxz
inc
int3
jle
dec
shl
sub
sti
xchg
cs
in
and
lret
pop
add
adc
and
negb
jb
jno
shr
sub
jo
xchg
fdivp
jnp
lea
cmp
or
icebp
xor
sub
int3
lock
test
pop
xchg
fildl
and
mov
adc
mov
lods
ss
jno
movsb
lahf
mov
les
jecxz
daa
int
adc
scas
cld
push
cld
lock
arpl
icebp
ss
mov
jmp
push
pop
push
out
insl
and
and
push
push
add
or
push
std
in
lods
cmp
adc
pop
inc
or
jbe
std
lea
xor
filds
dec
repnz
sub
add
scas
jge
and
lds
push
mov
in
jb
mov
roll
cmpsl
std
dec
ret
mov
cmc
fincstp
mov
icebp
jecxz
into
lret
inc
sub
lods
cmp
cmp
repnz
loopne
xor
mov
rclb
shr
cs
out
icebp
xchg
out
and
cmp
push
in
or
ds
dec
jb
int3
sub
mov
jno
test
pop
xchg
movb
adc
xchg
aad
out
mov
lea
in
repnz
roll
cmp
and
std
int
divl
imul
repnz
fisttpl
aas
fisubrl
test
adc
and
loop
outsb
cmp
rcl
cs
or
daa
ljmp
xor
fnstenv
das
mov
popa
xor
bound
push
lods
mov
enter
xor
pop
sub
jge
sub
pop
jl
sahf
mov
jo
lods
aad
incb
into
add
pop
and
mov
jp
cmp
rcrl
pop
repnz
test
ja
push
jp
dec
fdivr
xchg
or
das
pushf
sub
pop
mov
cmp
scas
adc
imul
inc
lock
imul
push
movsl
sbb
mov
sub
sbb
test
cmp
push
das
mov
call
or
pop
cmp
fs
adc
sbbb
mov
sbb
or
push
shrb
mov
and
inc
cmpsb
cmp
pop
test
dec
mov
mov
insl
xchg
cmp
enter
shr
out
sbb
pop
sahf
adc
or
std
mov
sbb
push
mov
mov
popa
cmc
xchg
daa
andl
jp
iret
pop
cmpsl
dec
dec
fldcw
push
les
shlb
jnp
loop
dec
out
test
imul
xchg
and
test
je
mov
xor
push
dec
in
sbb
dec
test
add
push
xchg
pushf
sti
mov
sub
sbb
adcb
roll
lds
pop
icebp
xchg
hlt
jecxz
es
push
call
mov
shll
inc
aaa
ret
push
in
jl
gs
popf
je
mov
les
jmp
cmp
mov
subb
push
cmp
lret
inc
icebp
add
jb
pop
pop
repz
outsl
insb
adc
xchg
mov
out
lods
inc
push
or
movsl
cmp
bound
jmp
loope
pop
or
das
push
mov
cmpb
aad
arpl
aas
test
sub
sbb
mov
ss
xchg
into
pop
mov
mov
pop
fdivl
inc
cmp
jb
cli
xchg
loopne
pop
out
les
sbb
pop
push
aaa
into
test
xchg
sub
push
in
xlat
mov
or
adc
sub
mov
pop
in
push
mov
add
ds
fwait
in
int
pop
mov
out
add
lods
mov
mov
ljmp
xchg
mov
fldenv
inc
xchg
sub
rcrl
pop
dec
int3
cmp
sti
insl
lcall
subb
push
adc
jb
xchg
cmpsl
ds
imul
sti
cmp
adc
int3
mov
mov
fistps
shrb
pop
mul
rclb
test
add
bound
xchg
cs
loop
add
sub
rcrl
mov
mov
pop
inc
lahf
mov
jge
aad
jl
jbe
addr16
testl
and
lea
scas
sbbl
das
inc
mov
sbb
push
shrb
push
movsb
cmp
pop
inc
fimull
add
jo
and
outsb
xchg
or
xor
and
test
imul
adc
or
mov
insl
lea
lock
xchg
das
cmp
popa
stos
adc
jle
repnz
sbb
clc
lods
or
or
xchg
cmp
int3
loop
mov
repnz
mov
out
dec
loope
pop
jp
jns
fs
repz
out
sahf
mov
cmp
xor
test
inc
les
lahf
add
push
push
popf
push
enter
imul
sub
sti
movsl
mov
jecxz
ret
adcb
scas
ljmp
inc
push
and
push
adcb
sahf
jle
addr16
pop
fstpt
jnp
stos
insb
mov
mov
fistps
fidivs
ret
pop
cli
mov
xor
cwtl
das
aam
sbb
ss
or
jae
xchg
js
mov
in
xchg
daa
jle
sbb
mov
xchg
or
mov
and
pop
xchg
push
mov
js
push
popf
sub
outsl
push
imul
clc
push
pop
data16
dec
dec
mov
push
pop
adc
loop
repnz
loopne
mov
dec
popa
and
lods
inc
popf
cmp
mov
jno
mov
loopne
sub
and
in
or
ja
cwtl
das
mov
outsl
push
pop
sub
inc
insl
add
mov
xchg
cs
push
mov
inc
dec
mov
inc
push
sub
xchg
push
jbe
shll
sub
xchg
xor
inc
sbb
mov
aad
lods
xor
push
sbb
je
aas
lcall
rcrb
ret
and
mov
aad
xchg
sub
and
mov
jns
mov
xchg
pop
repnz
sub
popf
xor
mov
dec
filds
lock
inc
mov
pop
push
sub
arpl
icebp
mov
repnz
mov
std
enter
push
enter
xor
ret
mov
andl
push
fdivl
push
fbstp
add
cmp
cmpsb
pop
jnp
call
ret
test
arpl
mov
xchg
push
pop
hlt
xchg
call
testb
dec
sahf
pop
sahf
int3
push
push
pop
insl
add
out
outsb
adc
xchg
inc
cmp
add
adc
xchg
mov
cmpsl
jmp
mov
mov
lods
mov
sti
xchg
cmp
mov
pop
xor
adc
pop
loopne
das
jg
add
stos
inc
push
xchg
int3
arpl
es
xchg
pusha
loop
pushf
mov
pop
repz
cmp
cmp
shrl
pop
leave
pusha
dec
fidivs
enter
xchg
loopne
dec
in
adcb
adc
mov
mov
jecxz
fcomps
cmp
das
scas
mov
sub
rolb
rcl
add
in
jno
push
push
pop
divb
testl
out
sub
stos
iret
mov
cltd
xor
cmp
xchg
push
or
push
jne
mov
cmc
mov
xchg
mov
sbb
mov
ja
lods
test
imul
push
mov
inc
push
data16
sub
mov
push
mov
popl
cmpsl
pop
lock
out
xchg
js
dec
cmpsb
mov
pop
es
or
fwait
cmp
scas
inc
dec
add
xchg
ds
aas
pop
fdivp
xchg
jle
fsubrl
adc
add
xchg
and
xchg
xor
insb
mov
pop
daa
or
nop
cmp
scas
cmp
xchg
add
jmp
test
fsub
insl
adc
lcall
mov
cmpsb
add
pop
scas
push
or
push
movsl
sub
fdivl
dec
sbb
cmp
mov
dec
mov
fsubs
ds
sbbl
jne
pop
shrl
cmpsl
cmc
mov
in
subb
add
lods
int3
and
shlb
rcrl
adc
dec
icebp
mov
scas
inc
push
cwtl
sbbl
clc
sbbl
popf
test
xlat
mov
insl
add
push
push
lods
inc
sub
ja
pop
mov
inc
jbe
sbb
loope
inc
daa
mov
jp
ret
or
lods
add
and
mov
xor
push
push
in
inc
out
cmp
sbb
sti
pop
mov
dec
in
nop
cs
mov
jle
xlat
mov
inc
testb
pop
int
pop
inc
inc
fdivl
sti
inc
fisubl
pop
ds
int3
push
call
pop
xchg
jnp
lret
jge
loopne
fs
insb
add
jle
and
xchg
sbb
pop
inc
mov
scas
es
cwtl
das
sbb
mov
mov
xchg
out
pop
xor
dec
mov
mov
sub
pop
pop
add
jo
movsl
cmp
xchg
or
mov
xchg
into
cltd
xor
mov
mov
mov
fsubrs
cltd
dec
loopne
pop
ja
dec
push
sub
inc
pop
lock
cli
xchg
repz
test
mov
sbb
test
stos
jbe
xchg
mov
and
test
push
in
iret
cs
pop
lock
loop,pt
sub
sub
jne
ret
pop
cwtl
fsubrs
mov
fnstenv
jo
test
push
in
mov
and
and
mov
xchg
je
daa
scas
out
loope
loope
mov
andl
pop
lahf
jne
cmp
test
jne
ds
jecxz
mov
sbb
iret
mov
jle
sbb
and
xchg
lock
es
jg
imul
mov
fldcw
popf
sub
test
pop
sub
mov
aam
or
and
mov
pop
push
test
pop
mov
je
sbb
cmpsl
ds
enter
sahf
push
popf
push
mov
loope
outsb
loop
out
insb
sbb
adc
xor
movsb
and
inc
push
fidivrs
and
xchg
dec
sbb
adc
xchg
lret
test
sbb
test
out
xor
std
push
call
mov
movsb
gs
in
xor
repnz
jge
rolb
sub
pop
inc
rclb
test
xchg
leave
out
rolb
mov
pop
or
sarl
cwtl
push
adc
pop
lahf
inc
or
nop
les
mov
cmc
gs
mov
test
or
jns
and
enter
mov
lds
adc
pop
stc
sub
repz
adc
lods
and
test
xchg
sti
imul
xchg
pusha
repnz
inc
adc
daa
fnstcw
or
lds
xchg
jne
stc
lock
add
cmp
inc
adc
push
mov
mov
fistl
or
push
lods
inc
sub
xor
xchg
orb
in
lods
and
loope
das
std
in
inc
std
icebp
mov
cmc
in
notl
loop
inc
adc
testb
or
pop
cltd
sbb
sbb
cltd
cli
hlt
sbb
call
mov
fisubrl
xchg
xchg
mov
repz
mov
xchg
jp
jmp
mov
sub
adc
jl
lds
lds
dec
jecxz
lock
and
push
cmove
cwtl
jne
mov
bound
cmpsb
cmp
sbb
les
cmp
insb
sub
jns
lea
mov
loopne
cs
push
mov
xor
dec
data16
push
xchg
push
je
icebp
movsl
mov
js
stc
sub
xchg
cs
jg
les
rorl
add
shrl
and
push
adc
movsb
sbb
xchg
gs
mov
mov
rol
cmp
data16
lcall
pop
mov
test
mov
pusha
mov
ja
bts
and
push
nop
idiv
fwait
cs
negl
out
out
push
cmp
mov
or
iret
jo
jnp
inc
fwait
mov
lds
lds
out
aad
jp
dec
xchg
jmp
dec
push
out
xchg
idivb
pop
icebp
push
xchg
cs
mov
mov
ficoms
push
xor
inc
test
imul
mov
push
movsl
pop
or
cmp
lods
pop
imul
into
dec
loope
scas
mov
loopne
imul
xor
push
movsl
push
pop
xchg
movsl
cmp
cmpsl
in
fstps
les
cli
add
lahf
dec
and
icebp
sahf
ds
adc
mov
lock
repz
aam
inc
jp
out
mov
sub
jp
xor
mov
pushl
imul
jno
or
les
xor
mov
ja
lcall
iret
in
pusha
mov
xchg
or
adc
popl
in
test
push
mov
xchg
sub
xor
adc
mov
adc
sub
pushf
add
mov
xorps
sbb
aad
add
cld
sbb
shlb
mov
test
inc
mov
mov
mov
and
mov
push
subl
loope
cmp
dec
sbb
xchg
dec
lret
out
pop
into
dec
sub
rorl
dec
xor
loop
mov
sbb
jns
adcb
lret
xor
mov
or
imul
dec
pop
cmpsb
pop
repnz
adc
mov
flds
in
and
dec
add
fsubr
xchg
stos
es
pop
daa
adc
sub
ret
fistl
fcomip
mov
push
xor
push
cmpsl
sub
lcall
clc
push
jg
test
movsb
jns
and
cmp
sbb
cmp
xchg
in
inc
lcall
mov
pop
xor
mov
shll
fcmovnb
dec
mov
int
mov
inc
cmp
mov
sub
sub
push
dec
xchg
sub
dec
loopne
popf
scas
inc
into
jl
add
rorb
js
and
pushf
ja
pop
cmpsl
out
mov
cmc
cmp
imul
xchg
dec
mov
mov
fiadds
shr
xor
lock
fidivl
fs
cltd
mov
xchg
in
lcall
adc
dec
inc
pop
cmp
nop
gs
xchg
mov
in
out
icebp
mov
pop
xchg
cmp
daa
mov
int
lods
mov
clc
fiadds
shrl
incl
inc
mov
pushf
xor
pop
sahf
xor
pop
outsl
mov
add
push
testl
mov
loopne
lret
mov
rclb
inc
fucomp
mov
cmp
jbe
sahf
addl
and
fwait
inc
dec
mov
push
jb
mov
xor
clc
jno
popa
lahf
mov
inc
fnstenv
jns
jne
es
daa
cmp
pop
dec
or
jl
push
mov
lock
and
adcb
mov
mov
mov
lock
dec
outsb
mov
pusha
mov
push
in
push
fstpl
rcrb
pop
negb
xor
xor
fbstp
dec
mov
call
pushf
push
popf
xor
inc
fnsave
out
cmp
and
pop
lahf
ss
imul
ja
and
sub
add
out
pop
cwtl
stos
inc
out
jge
jge
adc
fwait
enter
jae
outsl
push
xchg
aaa
into
lds
std
lods
xlat
inc
add
jecxz
popa
shl
es
test
dec
mov
scas
pop
loopne
stos
pop
dec
cmc
iret
dec
out
mov
addr16
mov
nop
mov
mov
pop
sub
mov
xchg
lods
push
mov
sbb
mov
call
pop
xor
pop
ja
add
pusha
mov
test
pop
adc
rolb
std
xchg
insb
in
test
lea
mov
sti
fistl
popa
fstpt
in
mov
xchg
movsl
xchg
cwtl
push
jmp
in
scas
inc
push
jo
iret
aas
icebp
mov
scas
inc
mov
xor
mov
ret
ret
pop
fwait
jecxz
hlt
adc
jmp
das
enter
inc
push
out
xlat
mov
xchg
out
out
xlat
dec
mov
sub
dec
push
movsl
aas
rol
mov
mov
loopne
dec
inc
xlat
cmp
into
gs
mov
cli
jl
sbb
mov
fldl
test
into
adc
mov
outsb
pop
jmp
sub
add
pop
adc
call
aad
repz
and
rcrl
and
aam
imul
div
mov
cmp
jns
dec
pop
hlt
insb
mov
cmp
sbb
loope
js
and
jmp
insl
test
out
xchg
int
adc
and
mov
xlat
jne
lock
loope
enter
push
jmp
gs
imul
sbb
push
sub
xorl
mov
cltd
movsl
cmp
sub
push
pop
outsb
sahf
push
testl
cmp
sahf
xor
imul
mov
xorl
or
rcl
fnsave
scas
inc
mov
lock
mulb
jmp
jge
xor
lret
xchg
mov
fnstenv
int
inc
mov
inc
in
xor
mov
mov
ss
call
xor
cmp
sbb
sbb
cli
pusha
cli
pop
inc
mov
stc
pop
xor
jbe
xor
mov
add
xchg
imul
xchg
ja
shlb
fwait
jg
pop
cmp
mov
mov
stos
ljmp
pop
loop
cli
adc
push
lods
xor
stos
into
lds
adc
cmp
sbbb
pop
pop
lock
in
enter
push
jmp
pop
xor
fisubs
cmp
js
ficoml
cmpl
xchg
testw
and
enter
cld
jmp
push
call
mov
mov
mov
loopne
cmpsl
aam
into
gs
out
stc
xchg
cmp
fprem1
ljmp
in
scas
out
fidivs
mov
mov
cmp
push
aas
and
adc
cs
push
comiss
and
cmpl
test
mov
stos
jne
mov
cltd
or
jnp
js
cmpsl
mov
push
mov
insb
daa
jo
outsb
test
ja
inc
leave
inc
sahf
pop
icebp
inc
aas
push
push
pop
sbb
sub
pop
and
sub
js
dec
loope
cltd
push
push
jecxz
addl
call
pop
inc
ret
repz
mov
rcll
test
xor
dec
loopne
pop
pop
xor
lods
popf
cltd
fwait
out
imul
testl
add
clc
add
scas
push
add
mov
inc
jbe
aad
pop
pop
adc
cmp
sahf
xor
mov
subb
test
mov
aas
jmp
sub
mov
push
push
call
fucomi
int3
fldt
mov
les
dec
jl
adc
jnp
fistl
or
int
sahf
push
cmp
rcll
inc
mov
add
or
xchg
pop
inc
fnstsw
mov
es
mov
lea
inc
add
inc
cmp
mov
pop
es
pop
jl
bound
adc
gs
sti
add
mov
jle
push
inc
or
lods
lahf
lods
inc
ror
dec
repnz
mov
xchg
xchg
sub
lods
leave
jns
add
cmpsb
mov
xor
arpl
aaa
pop
lea
aaa
rclb
les
sub
cltd
enter
inc
fidivrl
push
out
hlt
dec
in
adcb
sbb
insl
xor
orl
mov
lods
movsb
cmpsb
inc
repnz
push
add
or
pop
jns
pop
stos
pushf
test
ljmp
sub
pop
sub
in
test
xor
pop
sbb
mov
lods
jne
fbstp
cli
cmpsb
add
std
repnz
dec
jns
dec
fnsave
rcl
mov
cmp
mov
mov
add
xor
mov
popf
lahf
jo
mov
sbb
xlat
jp
aam
out
and
pop
movb
xor
push
movsl
push
push
repnz
add
js
ja
adc
stos
and
sub
adc
mov
inc
jne
mov
ret
or
imul
xchg
rcl
dec
fcoml
std
xchg
dec
std
mov
rclb
xchg
adc
shll
sbb
data16
xchg
inc
popf
ss
add
cs
movsl
cmp
cs
cmp
iret
xor
dec
hlt
mov
imul
fwait
cld
cmpsb
cmp
out
dec
les
push
pop
cltd
sbb
icebp
or
pop
lds
fldl
sub
sub
inc
adc
cmp
push
add
add
jb
pop
stos
pop
addr16
loop
mov
es
xchg
mov
fcoml
xchg
jnp
inc
pop
pandn
lods
popa
add
outsl
in
cmp
mov
mov
lcall
or
cwtl
dec
scas
and
out
shr
cwtl
sbb
add
cltd
xchg
loopne
loope
push
int
adc
mov
pop
fwait
xchg
insb
stos
or
push
cmp
leave
sbb
ds
movsb
cmp
pop
jne
jno
mov
stc
leave
in
fbstp
or
cmpb
pop
lods
mov
rorl
mov
adc
pop
mov
or
mov
inc
and
mov
mov
add
push
cmp
call
out
aas
div
and
lock
fnstcw
out
out
loopne
arpl
ljmp
daa
xor
dec
lret
loopne
push
xchg
and
and
fdivrl
adc
shlb
mov
mov
popa
in
mov
xor
inc
fwait
add
in
inc
adc
sbb
insl
andl
sbbl
pop
loope
mov
pop
div
mov
insb
or
out
sub
pop
adc
mov
sahf
xchg
mov
repnz
sarl
inc
fstl
sbb
mov
add
pusha
js
and
rorl
or
adcb
ret
gs
inc
icebp
mov
inc
jl
inc
fcompl
dec
mov
lret
or
and
enter
outsb
mov
sbb
jns
or
hlt
or
pop
and
and
aad
je
cmp
or
clc
or
inc
sub
lock
push
jns
mov
in
xor
jge
pop
loope
xchg
scas
xlat
pop
int
add
xor
clc
jne
xchg
ss
fidivs
int
push
lahf
pop
push
outsb
adc
or
mov
addr16
or
sub
mov
les
mov
sar
and
fiaddl
gs
out
xchg
int3
push
int
inc
fcoml
cmpsb
sbb
jo
fisubl
xor
sbb
insl
dec
call
iret
cld
addr16
xrelease
mov
scas
mov
out
sbb
out
shlb
xor
sub
test
jne
push
push
cmp
xchg
scas
mov
pop
cli
and
popa
add
and
inc
loope
dec
add
xor
jne
add
push
push
sub
dec
sub
adc
shlb
mov
pop
scas
iret
data16
into
test
xlat
outsb
testb
jp
inc
sub
jne
add
jge
gs
push
xorb
ja
xchg
lret
adcb
dec
call
lret
fildll
mov
loop
orb
mov
imul
adc
and
dec
xor
adc
sbb
js
addb
in
adc
movsb
movsl
dec
shrl
stos
push
push
xchg
jb
insb
shlb
jecxz
out
sahf
and
fisubrl
cmc
fdivrl
cmp
jle
mov
cmc
insl
xchg
push
loope
sbb
sub
inc
out
xchg
shll
push
lcall
mov
dec
out
lock
mov
mov
out
nop
int3
jg
aam
add
ljmp
add
adc
add
clc
popa
dec
pop
fidivrl
mov
and
insl
adc
into
adc
xor
mov
ffree
adc
mov
cs
adc
out
adc
jnp
in
add
push
push
mov
lock
push
negl
push
scas
sub
or
jne
sahf
and
mov
pop
rorb
or
jge
pop
in
push
pop
movsb
xchg
push
mov
pushf
sbb
leave
out
xor
add
push
pop
lcall
sbb
jge
mov
lea
cwtl
cmc
sub
data16
cmp
lds
sub
mov
jge,pn
cmp
cmp
and
xor
add
testl
rcl
cli
xchg
ds
xchg
aad
push
jbe
fstl
sbb
std
xchg
es
ret
mov
jbe
mov
xor
scas
inc
xchg
mov
imul
adc
xchg
xor
sbb
mov
scas
pop
mov
add
gs
ret
mov
adc
and
xor
pop
xchg
xchg
add
xchg
inc
xlat
jns
cmc
pusha
iret
cld
dec
ret
pop
sub
inc
scas
mov
and
cmp
jg
xchg
hlt
pop
fdivrl
out
imul
inc
add
imul
popf
addr16
inc
mov
ja
jl
mull
pop
dec
sbb
inc
pop
mov
addl
into
jae
and
or
std
xchg
sbbb
insl
scas
imul
dec
jbe
jecxz
dec
mov
aad
test
xchg
pop
mov
inc
ljmp
jbe
hlt
jae
divl
push
jmp
jle
imulb
or
aas
sbb
enter
filds
lock
mov
or
jo
jbe
ljmp
xchg
loope
sub
lcall
outsb
mov
cs
test
mov
mov
push
mov
jg
int
scas
in
dec
inc
jne
aas
sbb
out
outsb
mov
jo
push
push
ljmp
mov
xor
jnp
mov
cmp
data16
mov
mov
xor
push
sub
jle
cmpsb
aam
jnp
cld
xor
push
in
pusha
testl
es
lods
hlt
jmp
repnz
fwait
jnp
filds
jo
inc
mov
push
mov
repnz
adc
or
cmp
in
cmpsl
outsb
dec
jne
or
out
test
aas
stc
pop
icebp
sub
mov
sbb
insl
sub
outsb
adc
sahf
inc
popl
pop
and
xor
dec
cmp
and
sub
cli
xchg
dec
mov
or
sub
cmp
mov
ret
sub
in
jno
jns
dec
fadd
call
lods
add
push
int
es
add
or
dec
test
sbb
cld
pop
inc
mov
hlt
dec
arpl
cli
pop
xchg
mov
xlat
jg
std
mov
pop
xchg
insl
out
and
xchg
dec
rorb
mov
cld
and
inc
xor
inc
je
jo
pop
cmp
movsb
sti
inc
pushf
lock
stos
add
pop
mov
add
push
and
mov
bound
movl
xor
push
or
adc
aas
arpl
jo
lcall
aam
loopne
nop
mov
pop
call
adc
and
mov
loop
mov
adc
shlb
cwtl
pop
leave
test
jge
inc
or
shlb
fildl
or
mov
ret
nop
inc
mov
test
cmp
andb
and
jle
xchg
enter
pop
mov
add
dec
stos
mov
jecxz
mov
lock
std
std
into
and
pop
xor
adc
and
mov
fisttpl
daa
or
and
push
dec
out
inc
into
jb
mov
mov
aas
jmp
vmulss
int3
int3
insl
or
call
cmp
jns
xchg
imul
outsl
in
repnz
sub
in
pop
nop
insl
dec
mov
adc
bound
sarb
and
test
mov
jg
rcr
es
sbb
xchg
inc
push
les
inc
jae
mov
je
xchg
test
inc
pusha
div
lods
ss
aad
adc
inc
sub
inc
push
imul
push
leave
mov
pop
or
aaa
int3
inc
xchg
or
dec
test
out
pop
insb
idivl
push
mov
mov
push
out
outsb
popf
mov
mov
xor
data16
xchg
icebp
xchg
push
push
sbb
cmpsb
repnz
loope
jle
jae
mov
addr16
leave
pop
dec
add
xor
and
xchg
inc
fidivs
lret
or
movsl
pop
lea
push
mov
sub
into
pop
xchg
mov
orb
mov
push
add
fsubs
stc
ljmp
loopne
pop
mov
test
jae
or
outsb
sbb
fld
push
jne
ljmpw
pusha
out
ret
insb
push
cmc
jge
pop
mov
nop
fldcw
jae
cmp
cmp
aas
pop
xor
lods
and
cmp
cwtl
mov
pop
mov
icebp
in
cmp
mov
dec
ja
pushf
push
daa
mov
imul
mov
jp
ret
lret
popf
xor
in
sub
stos
dec
mov
jp
ret
loop,pn
pushl
mov
in
or
jns
imul
int
cmpsl
ljmp
xchg
out
fs
jp
imul
in
imul
rcrb
dec
aaa
jmp
push
pop
cmpsl
mov
pushf
mov
mov
std
sar
mov
in
xor
jecxz
or
mov
sub
sbb
xor
and
dec
cmp
xchg
sub
lret
cmpsb
add
mov
pop
shlb
movl
add
or
fs
das
and
int
div
jl
pop
arpl
adc
mov
notb
imul
popf
push
in
inc
pop
mov
pop
pop
sahf
sbb
mov
jns
int
aaa
mov
dec
in
sub
sbbl
pushf
xor
js
lea
mov
shlb
popf
cmp
mov
jnp
inc
jbe
cmp
test
or
lock
xor
ja
ss
xchg
dec
loopne
push
ds
call
or
cmp
outsl
cli
out
jnp
out
repz
rclb
inc
fwait
xor
hlt
jnp
outsl
jg
ffreep
pop
push
mov
sub
jo
dec
in
stos
dec
dec
mov
add
xchg
cmp
enter
lret
sub
pop
mov
andb
fsubrs
add
push
mov
jge
movsl
xchg
xchg
popf
mov
enter
jecxz
sahf
js
mov
fcoms
sbb
jnp
arpl
pop
std
movsb
xchg
ljmp
inc
neg
fwait
in
sub
outsb
add
es
dec
out
sbb
push
mov
jb
pop
repnz
fistpll
clc
insl
fnsave
mov
iret
jne,pn
xchg
add
inc
xchg
add
push
jbe
pop
negl
xchg
sub
jne
inc
mov
fildl
sbb
mov
lock
dec
testb
mov
loop
jecxz
sub
mov
cmp
mov
inc
lock
lods
xchg
scas
pop
mov
mov
inc
testl
pop
cwtl
xlat
sbb
jmp
rcrl
xchg
fdivr
scas
or
xor
movsl
mov
subl
rcll
cmp
inc
call
inc
jb
fsubrs
fwait
repz
mov
std
inc
les
cltd
insb
adc
je
loopne
ret
mov
pop
lret
in
mov
jno
or
add
xor
mov
pop
in
or
jb
xor
lahf
sub
adc
out
cmp
cmpsb
and
push
scas
lock
xor
ljmp
les
and
setae
negl
pmullw
popl
xor
lods
decb
ret
pop
inc
and
inc
cwtl
sub
imul
mov
imul
pop
popa
mov
bound
in
stos
orl
sti
mov
test
movsb
or
testl
sub
adc
out
jmp
loop
mov
test
mov
sbb
notb
std
inc
fucomp
test
ja
mov
dec
in
mov
pushl
push
insb
repnz
mov
cmpsb
mov
popf
inc
sarb
sbb
fadd
dec
sub
stos
arpl
inc
dec
sub
lods
inc
mov
addb
sbb
gs
mov
sub
or
fidivs
xchg
sbb
mov
popf
cmp
push
or
int
stc
sub
in
and
pop
cmp
out
aam
loopne
loopne
ss
mov
clc
lds
nop
daa
mov
arpl
scas
and
xchg
aas
les
mov
imull
lret
mov
sub
sbb
enter
js
in
rol
jae
or
dec
cmc
and
mov
das
lds
sub
fwait
imul
mov
fimull
mov
jp
pop
scas
jns
mov
pop
sub
dec
imul
cs
pusha
push
ljmp
and
insl
nop
fs
rorl
repz
mov
jo
jp
lret
pop
fimuls
sti
xchg
cmp
jecxz
enter
pop
jmp
sbb
ljmp
loop
and
test
xchg
ret
pop
and
add
xchg
mov
sbb
aas
sti
xchg
mov
or
jp
sbbb
pushf
or
pop
inc
pop
cmc
push
jp
or
add
into
xchg
adc
fisubs
lods
inc
mov
sbb
jae
cltd
stc
nop
or
rorb
shrl
sbb
mov
sarb
or
mov
ficomps
test
xor
or
sahf
in
movsl
cmp
mov
ret
pop
and
imul
mov
les
cmpsb
cmc
repnz
and
lds
repz
xor
andl
iret
cmpsl
ds
add
cmc
ja
cs
or
stos
ljmp
out
addr16
cmp
test
stos
pop
pop
in
sbbl
inc
push
xor
inc
cmpb
xchg
push
pop
and
js
lds
jb
mov
pop
sahf
fldenv
loopne
std
ds
lods
xchg
sbb
cmp
cld
xchg
int3
rcl
imul
or
gs
lea
inc
test
jl
or
jne
subl
mov
mov
xor
dec
in
fnstcw
or
add
mov
mov
jb
and
sahf
xchg
xchg
jle
add
pop
hlt
xchg
mov
iret
and
add
int3
es
es
jns
aaa
insl
and
pusha
xchg
sbb
mov
fwait
cmp
pop
mov
xor
xchg
dec
xchg
sub
out
cmp
xchg
sub
jno
repz
and
jno
or
push
push
pop
mov
mov
insl
rcrb
inc
faddp
js
push
push
dec
sahf
outsb
dec
mov
test
cwtl
cwtl
int
lret
scas
sbb
xor
daa
jmp
ret
icebp
mov
fldt
jecxz
loope
in
fistpll
adc
call
cli
rcr
push
psrad
add
imul
and
cld
xchg
daa
xchg
in
repz
enter
and
ljmp
inc
pushf
mov
movsb
xchg
iret
push
loopne
je
movsl
out
sub
out
test
enter
mov
sbbb
or
xchg
pop
loope
mov
sub
mov
addr16
inc
xor
xchg
xor
gs
or
mov
adc
cltd
sarl
jecxz
add
loope
dec
mov
test
aas
loop
push
adc
loope
add
sar
xchg
add
sti
sub
xchg
imul
aas
mov
aas
in
les
sarl
stc
cmp
call
add
fwait
mov
dec
mov
jg
xchg
ss
cmpsb
int
aam
mov
pop
jmp
into
xchg
into
sbb
push
xchg
hlt
add
bound
divl
xor
pop
stos
and
movsl
pop
sahf
push
mov
jg
xor
mov
mov
mov
ret
push
ficompl
int
fmull
stc
mov
and
bnd
scas
outsb
inc
loopne
or
pop
xchg
or
shr
ja
pop
imul
out
shr
rolb
in
out
or
push
lods
sub
dec
test
pop
mov
mov
jp
nop
inc
and
test
lret
mov
dec
aad
inc
add
xchg
mov
jb
sub
cmp
out
popa
daa
mov
scas
jg
dec
cmp
jo
pop
dec
in
mov
insb
push
mov
xchg
sub
and
inc
push
popf
ja
shrl
cwtl
aaa
into
sbb
aad
cmp
push
test
lahf
mov
or
jne
jbe
popa
enter
pop
cmp
and
stos
mov
push
sbb
fimuls
cltd
mov
pop
shrl
push
sarb
test
and
scas
jns
mov
inc
popa
sbb
push
cwtl
mov
mov
fnsave
rcr
mov
dec
aas
mov
cld
xchg
inc
hlt
pop
sbb
push
ret
or
test
push
xchg
popa
movsb
call
cli
outsl
mov
sub
arpl
xor
jle
fimull
ss
ja
cmpsl
jge,pt
pusha
testl
xor
inc
fnstenv
imul
rcr
mov
xchg
shl
pushf
mov
jnp
adc
and
mov
jmp
or
les
push
jmp
dec
sub
lahf
pop
sahf
add
mov
repz
mov
hlt
mov
add
xor
lods
and
pop
xchg
cmpl
pop
fimull
ja
in
mov
dec
add
lahf
push
mov
mov
repz
lret
lcall
mov
repz
sbb
mov
negl
fildl
negb
mov
jmp
movsb
mov
jecxz
or
push
ret
xor
leave
pop
flds
or
mov
cld
xchg
pop
adc
pop
ret
adc
mov
xor
jo
and
sub
test
js
ds
nop
xchg
gs
mov
mov
cmpxchg
iret
sbb
pop
hlt
imull
leave
mov
jmp
add
xchg
push
test
ret
imul
imul
add
sbb
out
pop
test
mov
xchg
pop
repnz
outsl
push
cltd
dec
sub
pop
nop
stc
das
sub
lea
push
scas
hlt
mov
js
int3
push
adc
xor
arpl
sub
mov
das
push
insb
hlt
or
enter
mov
or
sbb
push
scas
mov
fwait
add
movsb
jl
xchg
sbbl
adc
ss
out
cli
testl
jae
sbb
sub
dec
loopne
dec
dec
loope
outsb
or
fistl
mov
cmp
jl
and
repz
or
adc
ja
or
popf
xchg
mov
jo
cld
inc
fdivl
sbb
mov
in
fiaddl
adc
test
insb
add
movsl
loop
mov
out
and
xchg
sub
inc
mov
push
stc
into
gs
jbe
inc
jno
xchg
mov
fldl
xchg
in
dec
mov
add
shlb
mov
xchg
and
pop
and
mov
shrb
scas
cmp
adc
xchg
sub
xor
loopne
mov
fsin
xchg
ljmp
sbb
sti
xchg
out
cmp
mov
loopne
aam
rolb
ljmp
mov
nop
mov
std
or
sbb
test
push
jmp
leave
pop
out
fldcw
movsb
lcall
lock
js
lret
mov
jmp
sub
xor
lret
iret
push
adc
ret
movsb
push
jmp
in
add
loopne
or
and
iret
repz
clc
lret
lock
repz
in
adc
sbb
fs
fnstsw
arpl
jge
push
mov
sahf
adc
pop
dec
push
out
cmp
mov
test
std
cli
addr16
fiadds
and
cmp
pop
repnz
sbbl
cmp
jmp
cmp
bound
push
movsl
ljmp
stos
lcall
enter
pusha
clc
and
insl
scas
xchg
inc
fcmovb
iret
hlt
mov
call
insb
add
lret
loope
jae
xchg
add
mov
sub
call
xchg
jae
adc
sub
add
jnp
outsl
push
add
cld
xchg
mov
mov
adc
pop
scas
inc
outsl
in
mov
adc
push
popf
xor
addr16
and
inc
pop
mov
mov
jp,pn
jecxz
dec
sbb
jo
pop
cmc
lods
xchg
jb
and
sbb
pop
or
sbbb
inc
jmp
jb
rclb
pop
sahf
lds
imul
movsb
pop
js
nop
insl
push
pop
pop
push
push
mov
jl
xor
iret
mov
icebp
sub
fidivl
dec
js
jl
clc
vpmacswd
lock
and
imul
lock
shlb
stc
dec
loope
fmuls
jge
lods
inc
pop
sahf
xchg
sbb
int
incb
xor
push
cmp
mov
aas
in
in
xchg
shrl
mull
popa
popa
dec
outsb
add
cmc
adc
in
insl
lock
pop
lock
les
sbb
popf
mov
dec
add
push
scas
jge
jb
push
mov
xlat
lea
mov
xchg
ficoms
lds
jnp
inc
dec
repnz
andb
bound
ljmp
xor
push
adc
repz
push
movsb
sub
ret
ret
shrl
add
cli
jbe
aas
mov
fadds
jge
jnp
gs
push
sbb
inc
hlt
dec
and
mov
add
fdivs
inc
mov
and
test
add
das
xchg
mov
push
xchg
sub
aad
inc
repz
ss
cli
xchg
jmp
sahf
push
jmp
mov
or
rcr
pop
out
lret
jl
xor
bnd
loop
push
lcall
push
movsl
push
or
aas
pushf
xor
test
aas
sub
test
dec
push
outsb
mov
mov
adcl
in
pop
cmp
lea
sbb
pop
lock
pushf
mov
sbb
pushl
int
pop
ds
cmp
push
jmp
mov
jae
xchg
dec
and
mov
jmp
ss
fwait
test
xor
popa
fidivl
dec
xor
mov
mov
lea
cs
pop
sub
in
add
aam
test
iret
test
push
and
call
xlat
push
imul
cmp
gs
and
icebp
loopne
in
mov
or
fnstcw
add
xor
mov
mov
pop
push
add
mov
scas
nop
xor
rcr
xchg
loopne
pop
in
add
sub
jp
jno
inc
xchg
scas
inc
add
loop
lods
cmp
shr
cmp
xchg
hlt
mov
fisttpll
rorl
adc
lea
daa
cmp
xor
push
mov
adc
data16
in
pop
and
jne
cld
dec
sub
xchg
pop
pusha
int3
mov
adc
rol
loop
mov
sbb
xor
mov
inc
ljmp
sbb
fwait
jo
loopne
leave
mov
fbstp
cmpsb
mov
fs
andb
scas
xor
push
imul
call
loop
ljmp
mov
sbb
dec
pushf
lods
data16
sub
inc
enter
mov
fwait
loope
inc
adc
inc
movsl
push
mov
xlat
subl
push
xor
push
jle
in
pop
arpl
cmpsb
test
fsubrs
push
lods
sti
mov
jl
mov
ja
xor
pop
scas
mov
loopne
xchg
sbb
loop
ss
and
imul
add
shrl
mov
bnd
or
cmp
jmp
repnz
movsl
scas
inc
xlat
cmpsb
sbb
fisttps
sub
jns
stc
add
mov
sbb
insb
lahf
leave
jns
or
inc
aaa
add
pop
and
into
loop
pop
jbe
add
xor
dec
jmp
push
je
gs
push
enter
xor
divl
cli
xlat
pop
call
or
cmp
imul
movsl
mov
in
lret
rcr
orl
push
shrb
mov
fwait
mov
test
mov
cmpl
inc
mov
in
xchg
addr16
fcom
mov
rorb
ret
outsl
pop
test
cltd
lock
addr16
xchg
lods
push
lods
and
mov
mov
add
sub
pop
push
sub
mov
arpl
ja
cmp
mov
or
cs
add
jbe
popf
mulb
dec
cmpsb
cld
xchg
loopne
call
out
adc
inc
pop
movsb
adcl
dec
jecxz
stc
sahf
les
call
nop
or
in
shll
rorl
mov
int
push
js
imul
pusha
and
sbb
mov
gs
stos
xchg
inc
in
pop
imul
negb
sarl
sub
enter
cmp
jge
xchg
jmp
lea
xchg
lret
fdivs
mov
cmp
push
divl
xor
int3
in
adc
dec
aam
jle
lret
pop
sti
dec
fwait
pop
jmp
mov
or
inc
pusha
imul
adc
mov
shll
sbb
aam
adc
jp
rclb
popf
insb
push
or
fdivrs
daa
stos
fiadds
cmp
in
inc
mov
mov
jns
subl
aaa
and
sub
inc
scas
orb
rcl
push
mov
mov
cmp
cmp
lds
rorl
fistpll
data16
orb
cmpl
repz
std
fdivl
sub
xchg
imul
jae
pop
fstpt
dec
add
mov
inc
xchg
jl
test
sub
mov
ret
lret
or
out
inc
outsl
sar
add
jle
inc
rcrl
leave
in
lret
fucomp
mov
and
sbb
xlat
add
dec
lret
dec
pop
inc
movsb
daa
popfw
in
and
push
fs
sbb
push
clc
movsl
jl
add
repz
pop
stos
xchg
pop
sarb
cmp
clc
lds
xchg
jg
aaa
cwtl
jae
inc
ficompl
sbb
arpl
movb
jle
loope
rorb
inc
sub
sbb
in
fnstsw
shrl
icebp
sbb
mov
out
sahf
cwtl
shlb
ret
dec
pop
and
bound
mov
ljmp
sub
loope
mov
mov
sub
mov
adc
add
add
cltd
outsb
mov
stos
and
inc
xor
mov
lods
inc
cltd
add
icebp
ds
push
mov
fisttpl
or
mov
push
xchg
xor
pop
cmc
xchg
pop
pop
mov
jecxz
and
xchg
add
addr16
cmp
loop
scas
inc
out
jo
pusha
je
cmpsb
fcompl
rcll
cmp
andl
addl
ja
rcr
clc
adc
repz
sub
daa
cmp
js
sub
mov
jl
jg
jp
scas
out
jns
jmp
and
push
movsl
sahf
gs
aaa
mov
push
sub
push
push
xor
imul
xchg
xor
pop
icebp
js
fbld
sbb
mov
push
mov
repz
test
push
and
jecxz
jae
lea
mov
scas
stc
popf
push
jae
stc
xor
mov
mov
xor
add
fists
inc
cmp
imul
pop
pop
ret
lret
psubusw
jecxz
pop
push
scas
push
push
lcall
or
ja
inc
jecxz
inc
xchg
sbbl
or
cmp
mov
aaa
mov
mov
into
loop
or
mov
pop
inc
aas
push
jmp
xor
jo
lahf
fabs
sti
or
add
pop
xchg
mov
rclb
jns
jnp
decl
out
insb
sbb
xor
inc
or
pop
test
arpl
jl
sbb
add
adcl
sub
mov
cmp
pop
adc
cmp
cmp
adc
mov
iret
enter
jl
js
xchg
pusha
mov
call
jle
jbe
pop
test
or
push
mov
out
and
cmp
inc
push
imul
imull
xchg
mov
push
push
push
adcl
add
jae
push
push
adc
es
adcl
jl
pusha
cmp
leave
int
rolb
adc
xlat
aam
and
pop
jg
inc
subl
jg
xchg
push
jge
iret
push
jecxz
pop
jnp
ret
pop
jns
xor
or
pop
stos
jns
test
mov
push
add
mov
and
jbe
bound
add
mov
pop
adc
aam
add
cltd
loope
mov
pop
in
cwtl
pop
andb
adc
pop
jno
pop
test
mov
xlat
ret
rol
pop
add
loop
push
mov
sbb
sub
mov
das
pop
jo
xchg
aad
stc
outsl
out
iret
mov
fnsave
mov
or
movsb
in
push
aaa
pop
fimuls
push
mov
add
scas
lock
movlps
aaa
jne
inc
pushf
xor
in
arpl
jecxz
out
ficomps
jo
aas
mov
and
cmp
popf
lods
in
pop
stc
nop
cltd
mov
fimuls
and
in
sbbb
test
add
sbb
shrl
mov
mov
mov
pop
mov
mov
stos
mov
adc
lods
mov
dec
inc
enter
adc
lcall
mov
jecxz
ljmp
sub
or
clc
dec
rorl
and
inc
push
rorb
push
push
adc
test
cmpsl
ds
loop,pt
adc
movb
add
and
je
inc
aas
dec
in
xchg
sub
and
jmp
sub
or
stc
push
xchg
xorps
aas
rcl
ret
jns
loopne
xor
mov
xchg
xchg
mov
cmp
sub
pop
popa
sub
notb
imul
sbbl
ljmp
imull
lods
repnz
clc
push
jnp
cwtl
imul
lea
push
xchg
pushf
sub
cwtl
aam
sbb
es
mov
aam
icebp
fistl
mov
rcrl
cmp
out
scas
and
xor
mov
daa
inc
into
or
and
sub
pop
test
or
push
add
and
xor
dec
jecxz
dec
cli
mov
sub
sbb
jno
cs
sbb
inc
or
push
xchg
sbb
pop
stos
cmp
inc
inc
xorb
mov
int
sub
dec
ja
add
in
and
loope
sub
hlt
adc
insl
jmp
push
imul
mov
mov
sarb
push
push
mov
addr16
cli
or
or
sbb
and
rol
jnp
scas
inc
add
jl
clc
push
xchg
hlt
mov
mov
pop
je
jnp
test
inc
cld
or
xor
sarl
int
stos
mov
adc
or
and
xchg
add
and
fmuls
bnd
popa
mov
cmp
xchg
push
das
dec
fwait
mov
int
ss
xor
cmp
cmc
dec
loopne
mov
dec
leave
lock
mov
adcb
jle
clc
and
mov
xor
lods
dec
cmovns
xor
xchg
ljmp
mov
mov
and
xchg
xchg
daa
xchg
push
xchg
sahf
repnz
add
icebp
movsb
jnp
jge
adc
add
xchg
xchg
xor
stc
mov
movsb
xorb
jle
xor
mov
mov
ficompl
leave
push
aaa
orb
sahf
adc
pop
jle
out
lret
mov
xchg
das
in
cltd
ret
ret
jl
and
sahf
jbe
cld
in
jp
push
mov
in
ds
and
cld
inc
leave
mov
notl
out
add
xor
notl
lea
es
je
lahf
not
xor
push
add
mov
lods
loopne
pop
adc
sarl
jecxz
mov
sbb
or
out
mov
xchg
adc
outsb
xchg
pop
or
jmp
sbb
cmp
cmovae
pop
adc
push
lock
loop
cmp
adc
push
into
and
fmuls
sbb
mov
jge
jge
push
push
fistpll
fsubrl
popa
stc
cmp
mov
js
cmp
add
cmpsl
inc
inc
mov
push
jae
cmp
xchg
add
push
stos
out
pop
popf
outsl
jge
movb
pop
dec
jg
and
sbb
push
mov
stos
stos
xor
jne
mov
out
stc
dec
jnp
pushf
scas
lea
push
stos
ds
loope
pop
mov
sbb
dec
movsl
xor
push
jmp
fmull
je
subb
jg
push
dec
xchg
cld
push
inc
pop
lret
ljmp
xor
pop
lock
push
jb
lcall
mov
sbb
out
test
mov
leave
xchg
adc
cli
xchg
pushf
leave
movsl
cmpsb
mov
jmp
sub
jne
mov
inc
push
fucomi
test
inc
scas
cwtl
arpl
add
leave
test
into
shrl
pop
mul
cmp
nop
mov
fidivl
loop
fnop
fisttps
sub
xlat
addr16
push
in
lret
cltd
sbb
fimull
rcrb
enter
pop
movsb
pop
scas
mov
test
shrl
sbb
xchg
jbe
mov
repnz
xor
fdivs
push
cmp
or
mov
mov
mov
mull
and
scas
and
fsubl
data16
dec
sahf
xchg
nop
in
mov
adc
xchg
xlat
mov
xor
lea
ud0
xchg
cs
pusha
mov
xchg
outsl
sub
lcall
lock
rcl
pop
idivb
shrb
push
divl
jl
inc
rorb
sahf
mov
jne
xchg
xchg
popa
lods
dec
aaa
add
mov
xor
sub
fucomip
and
fwait
xchg
jbe
mov
std
xor
rclb
dec
xchg
inc
or
sub
sbb
jo
and
ljmp
inc
pop
sbb
lods
adc
xor
arpl
int3
xchg
xor
push
mov
inc
shl
mov
xor
aam
call
lds
scas
cmp
es
outsb
push
xor
push
mov
icebp
sbb
mov
pop
repz
xchg
call
mov
ss
jno
out
xchg
sbb
rorl
jb
imul
xchg
jge
pusha
pop
mov
mov
inc
ja
mov
pop
inc
jae
sbb
inc
shrl
add
imul
scas
jp
xor
int
faddp
push
pop
or
pop
daa
sbb
pop
sub
iret
dec
lods
dec
in
test
sarl
add
rcl
mov
xchg
cld
jmp
inc
add
sarl
cmp
imul
gs
addl
shufps
mov
pop
pop
in
sub
sbb
inc
lods
aaa
aas
lock
jmp
scas
add
je
loop
and
xchg
cmpsb
cmp
loope
fidivs
cmpsl
xchg
sbb
mov
or
push
pushf
repz
test
fxtract
scas
pop
jmp
xchg
mov
sub
jns
push
cmc
mov
jp
jns
fld
stos
inc
test
mov
test
test
rclb
xchg
mov
iret
cmpsb
dec
bound
sbb
xchg
movb
in
mov
mov
aam
cmp
dec
pop
push
adc
in
jnp
mov
inc
mulb
pop
xchg
shrl
cmc
data16
mov
int3
xchg
sbb
int
rclb
sahf
cmc
push
testb
push
test
and
cmpsl
mov
fdivs
push
push
xchg
nop
mov
mov
mov
inc
sahf
push
cmpsl
popa
lret
push
and
subb
mov
arpl
sarb
fcoms
mov
insl
xchg
leave
adc
jne
stc
gs
outsl
sub
jge
sub
in
pop
movsb
pop
cmp
or
pop
bound
setbe
lock
add
add
or
or
imul
push
xor
add
mov
dec
inc
out
hlt
push
push
cltd
pop
imul
cs
xor
push
adc
cmpsl
in
shll
push
leave
adc
shll
leave
pusha
stos
stos
sbb
dec
je
pop
cmpsl
fidivl
test
lea
mov
repnz
mov
sub
pop
mov
inc
lds
inc
test
pop
aas
out
mov
ficoms
mov
mov
add
in
mov
mov
jecxz
push
lret
xor
push
mov
jmp
es
cli
les
mov
push
cltd
and
push
test
mov
fimuls
in
jp
pop
imul
testb
add
and
sub
roll
push
inc
jb
fs
iret
inc
fdivr
out
dec
ljmp
pop
cmp
xchg
push
pushl
stc
subl
push
jnp
dec
inc
cmp
sub
xchg
js
cli
test
lea
add
mov
mov
mov
jg,pt
or
add
and
flds
movups
push
lret
jbe
enter
mov
dec
test
mov
lret
jo
mov
jb
shrl
mov
rcr
jno
mov
pop
inc
sub
xchg
and
lcall
mov
into
cld
dec
push
mov
sahf
or
aad
shlb
rcrl
sahf
aaa
xor
jecxz
jp
xchg
xchg
jg
adc
les
fs
shll
repz
mov
rclb
jo
subb
sahf
dec
mov
out
dec
mov
jle
lods
fcmovbe
je
sbb
pop
dec
scas
sti
test
les
divl
clc
test
cwtl
jle
cltd
dec
push
je
xor
iret
loope
mov
stos
clc
lods
out
mov
mov
sbbl
push
cs
inc
aam
jae
je
mov
ret
popa
sub
push
xchg
out
cmpsl
cmp
ret
divb
ret
sbb
mov
sub
cmpsl
mov
add
push
cmp
bound
cmp
lea
std
xor
xchg
mov
cwtl
lahf
jno
pop
lret
and
cmpsl
or
adc
test
and
mov
test
sub
xlat
stos
jle
jmp
lea
push
outsb
popf
and
mov
mov
inc
lods
sbb
mov
call
test
and
loope
mov
xor
mov
jl
ret
cmp
lods
mov
xor
pop
rol
push
push
adc
xchg
rcr
xor
xchg
mov
push
fnstenv
sub
jne
repnz
push
lods
ret
push
movsl
aaa
or
sub
cmp
mov
vmovq
or
sub
xor
cmovno
push
out
pop
adc
in
push
sbb
pop
stos
add
lcall
icebp
aad
hlt
sbb
call
inc
cmp
mov
test
arpl
sub
xor
js
stc
mov
or
push
das
mov
or
fs
jbe
stc
sbb
jg
or
pushf
inc
sbb
dec
mov
nop
daa
popa
repz
dec
sub
dec
fistl
xchg
inc
cld
xchg
sub
mov
add
out
sub
in
hlt
inc
pop
es
xchg
cli
sub
sub
xor
cmpsb
bound
or
rcrb
xchg
icebp
scas
mov
shlb
scas
ljmp
push
and
in
xorl
stc
nop
add
adc
push
mov
shl
xchg
mov
and
fsubs
add
in
jno
xchg
adc
pop
xor
xchg
xchg
call
and
jb
xor
mov
cmp
outsb
loopne
mov
push
dec
cmpl
inc
inc
xor
shll
pop
dec
jno
sub
inc
pop
lock
cmc
xor
in
ja
or
jnp
std
mov
mov
enter
sub
xor
cmc
rcl
rolb
dec
sub
jge
dec
sub
sbbl
mov
push
popa
or
and
sbb
les
ss
outsb
dec
add
add
stc
cltd
sub
fistl
subl
orl
insl
push
mov
andl
gs
and
xor
and
movsl
ficoms
mov
mov
icebp
inc
jecxz
jecxz
in
js
jo
sahf
push
and
ficompl
in
mov
jp
jg
mov
sbbl
adc
xchg
sub
sbb
or
daa
sbb
mov
out
in
sbb
in
test
adc
inc
aas
clc
mov
sbb
xor
pop
loopne
das
inc
loopne
inc
inc
inc
sti
insb
add
sahf
sub
dec
or
inc
stos
fmuls
add
adc
inc
dec
mov
cmpl
jge
mov
dec
dec
xor
test
or
mov
xor
aaa
ja
jno
arpl
or
daa
mov
cmpsl
cs
jno
xchg
divl
adc
notl
je
outsl
xor
pushf
xchg
lret
sub
mov
fidivs
xchg
xchg
cmpl
lock
mov
mulb
jp
nop
mov
lret
adc
mov
and
adc
scas
mov
pop
repnz
sbb
sbb
inc
mov
imul
ficompl
imul
fnstsw
ficompl
jle
bound
inc
or
dec
and
andl
and
jae
sub
std
aad
push
dec
lock
pop
push
ja
pushf
out
push
xchg
xchg
add
popf
push
cld
mov
in
sar
fbstp
insl
sbb
xor
cld
cmpsl
dec
or
daa
icebp
sub
sub
mov
xchg
inc
test
enter
adc
incl
cmc
repnz
fmul
es
int3
std
push
popf
sbb
mov
xor
ret
dec
dec
add
jb
stos
push
push
or
stc
jae
sub
xchg
in
pop
out
rolb
dec
sub
xor
xor
nop
pusha
lods
cmp
mov
cmp
mov
or
rorb
mov
xlat
inc
arpl
repnz
aam
into
cmp
idivb
adc
divl
jne
inc
cmpsl
inc
mov
fsubl
xchg
insl
stos
mov
shr
addb
scas
xor
stos
cmp
push
sub
shll
dec
mov
push
dec
push
cmp
popf
push
lods
jno
xchg
xchg
adc
mov
iret
mov
cld
rcrl
decl
lock
test
inc
iret
inc
lods
lret
out
bound
js
adcb
out
push
pop
cmp
aad
adc
or
xchg
rorb
mov
and
enter
or
insb
push
in
mov
test
fucomi
testl
cmp
repz
jl
sub
popl
mov
stos
jb
fnstcw
out
icebp
das
test
sarb
xchg
lods
hlt
mov
rclb
insb
clc
scas
xchg
pop
outsb
imul
xor
or
jmp
aas
std
test
fidivs
mov
or
push
mov
xchg
and
mov
fimull
dec
cmp
push
or
shlb
push
test
mov
jge
mov
shll
insl
mov
test
out
dec
fnsave
loope
jne
mov
mov
sbb
lds
fwait
in
stos
mov
add
into
imul
subb
dec
sbb
outsb
mov
jp
in
jne
jle
mov
and
adc
out
cmp
mov
fsubrs
mov
mov
adc
dec
mov
lods
cmp
loope
ret
adc
aad
mov
or
mov
sub
inc
adc
push
xor
adc
mov
push
cwtl
mov
mov
adc
aad
mov
ja
pop
push
adc
xor
sbb
mov
outsb
out
cmpsl
enter
mov
push
sbb
mov
and
outsl
lret
mov
sbb
loopne
adc
xchg
addr16
inc
fidivl
xchg
mov
sbbl
aas
lods
or
fsubr
rcrb
adc
pop
test
or
rclb
sbbb
jl
pop
and
data16
arpl
rolb
xlat
ljmp
aam
jo
test
or
or
jp
jbe
xchg
xor
cwtl
xor
mov
jle
xor
pop
imul
push
lods
push
jb
lcall
sbb
xor
mov
xchg
cmc
out
xchg
mov
aad
mov
add
mov
add
sbb
mov
jmp
sub
mov
cwtl
das
dec
out
pop
xchg
insb
loope
dec
add
mov
adc
sbb
sbb
aam
jg
sub
daa
adc
aaa
pop
fs
nop
nop
std
repnz
and
negb
push
jg
inc
arpl
xor
lret
push
mov
add
into
movsb
iret
and
jp
movsb
mov
jne
sbb
pop
push
insl
ja
sbb
add
mov
jmp
inc
arpl
dec
sahf
inc
mov
inc
es
stos
mov
cmp
jge
jecxz
inc
pop
add
xor
fs
dec
push
jns
jbe
test
sbb
or
xor
xchg
sub
jae
jg
add
adc
movsl
aaa
rclb
mov
mov
sarl
sarb
xchg
cli
jmp
sarb
dec
mov
jae
out
pop
dec
outsb
iret
jl
mov
and
pop
or
ret
xchg
out
daa
push
jmp
stos
repz
aaa
or
inc
xchg
imul
xchg
adc
and
add
stos
push
repz
decl
pop
cwtl
adc
adc
and
pushf
scas
pop
fwait
push
rcrb
popa
stc
inc
sbb
push
mov
inc
cmp
add
sbb
jo
pop
lock
sbb
sub
adc
and
and
aas
ja
dec
test
scas
xchg
sbb
adc
jo
addb
jne
lcall
push
popf
inc
movsb
jmp
mov
fwait
sub
xchg
jp
lret
xor
pop
movsl
jbe
jecxz
ds
into
mov
pop
jg
mov
xchg
and
shrb
cmpsl
dec
test
xor
imul
add
inc
clc
imul
in
repz
lret
cmp
push
mov
and
aam
test
pop
repnz
out
mov
fsts
stos
in
roll
bound
mov
lcall
sub
sbb
pop
mov
xor
mov
push
mov
cmpb
fldl
fisttpl
add
xor
xchg
fmull
mov
lock
add
cmpsb
cmp
cld
and
call
es
pop
dec
fiaddl
cld
fidivrs
mov
popa
mov
imul
cmpsl
mov
clc
les
imul
pushf
ss
sbb
imul
stc
xchg
pop
jnp
cmp
testb
lock
addr16
jns
mov
jl
aas
idivb
or
xorb
mov
push
dec
jecxz
enter
jo
add
jle
mov
push
jno
sti
orb
outsb
mov
lcall
enter
int
test
and
xor
xor
mov
jp
lcall
xchg
mov
scas
pop
icebp
and
adc
xor
roll
in
add
addl
rcl
inc
addr16
mov
imulb
xchg
pop
cmpsl
adc
pusha
mov
loope
add
icebp
sub
stos
dec
fistl
pop
imul
jae
je
movl
add
xor
sbb
in
cmpsb
and
xlat
hlt
std
xchg
scas
clc
push
loop
ret
add
xor
adc
mov
fsubr
addl
add
mov
or
mov
outsb
js
popa
outsl
push
adc
pop
flds
lahf
daa
dec
stos
xlat
and
pop
mulb
adc
popf
ds
pop
out
mov
out
aam
xchg
stos
sti
stos
sub
outsl
push
sbb
add
movsl
loope
into
cmp
mov
mov
lock
sbbl
shl
dec
repz
aaa
fwait
shlb
fsubp
jns
icebp
jge
fdivr
inc
and
stc
fwait
lock
packsswb
cmpb
sub
iret
adc
pop
sub
fsubr
pushf
or
imul
sub
mov
adc
hlt
jl
imul
add
std
xor
sbb
xchg
sub
inc
scas
xchg
in
andb
in
fcoml
cwtl
mov
test
inc
mov
fsub
test
aas
scas
ret
sbb
mov
and
stc
popf
sbb
es
fiadds
fwait
mov
in
arpl
jo
rol
sbb
mov
and
jne
js
rorl
push
ret
cs
jne
out
loopne
insl
cmp
sbb
and
mov
outsl
gs
dec
fwait
insb
icebp
movsl
les
in
add
xchg
adc
and
shlb
mov
mov
or
pop
in
jmp
lock
pslld
daa
popf
jbe
nop
push
cli
notl
add
mov
sbb
insl
sarb
sub
push
stos
pop
repnz
sbb
jle
std
mov
ljmp
xor
adc
jl
hlt
xchg
sub
mov
jle
inc
repz
xchg
cwtl
mov
stc
mov
dec
fdivrp
adc
pop
sub
push
loope
cmp
xchg
dec
xchg
in
pop
neg
je
push
push
sbb
xchg
fisttpl
test
out
push
push
mov
or
lds
push
mov
fcompl
mov
iret
cmp
pop
cmp
mov
test
push
xchg
loop
shrl
sbbl
sub
sbb
cmp
out
scas
pop
gs
nop
adc
push
movl
push
mov
pop
dec
test
xchg
ljmp
jge
and
xchg
sbb
sbb
pushf
pop
xchg
sti
add
call
mov
xchg
nop
aad
je
adc
push
pop
xor
push
mov
pop
mov
sti
cmpsl
adc
mov
add
lahf
and
stc
popf
push
jns
cmp
xor
jbe
dec
dec
and
loope
cmp
fwait
push
or
fdivp
or
mov
mov
je
adcb
jle
in
bound
sbb
scas
incb
repnz
adc
into
js
in
xchg
mov
outsl
call
push
lcall
cwtl
sbb
stc
xchg
sub
mov
dec
adc
push
push
insl
inc
psubusw
ljmp
dec
xor
shll
int
or
js
insl
xchg
pop
daa
add
pop
cmp
or
clc
mov
ljmp
jno
sub
sub
mov
jmp
fnstcw
rolb
xor
sahf
mov
mov
js
bound
lret
jecxz
call
jno
sahf
sub
sbb
aam
jo
inc
push
or
dec
cmp
shrl
stos
inc
test
push
enter
xchg
mov
es
addr16
cmp
movsb
mov
jnp
push
scas
and
ret
hlt
add
cmc
mov
xor
adc
and
int3
cmp
ret
mov
pop
test
adc
add
cmp
test
jle
in
imul
mov
xchg
jnp
cs
test
ja
xor
mov
dec
add
data16
xchg
dec
test
pop
call
push
jmp
enter
ret
pop
mov
out
enter
test
dec
sub
cmp
inc
adc
xor
mov
int3
mov
cli
mov
aam
std
jo
in
or
mov
fidivrl
nop
mov
jno
out
mov
mov
adc
cmp
rol
pop
add
pop
mov
add
stos
adc
into
out
mov
adc
mov
sbb
ds
inc
mov
mov
push
and
fidivl
ds
jo
cli
push
fwait
xchg
push
mov
xor
add
ds
outsl
mov
fs
push
jmp
xor
leave
ret
ror
push
sub
jae
dec
fcompl
mov
fidivl
or
mov
cltd
xor
adc
mov
xchg
xlat
adc
enter
pop
jge
and
dec
out
add
out
adc
lods
or
push
and
push
inc
xor
jmp
xchg
xchg
jns
ret
in
xchg
xor
xchg
xor
cltd
sub
inc
jbe
add
jnp
test
jle
push
pushf
push
testb
jmp
jge
cmc
xor
push
filds
cmpsl
mov
inc
lret
js
test
int3
in
xor
out
cld
inc
mov
xchg
dec
jecxz
aam
jp
fsubrs
fwait
dec
pop
jo
dec
push
ja
jge
in
setle
jge
sbb
dec
nop
stc
dec
dec
subl
test
scas
push
cs
mov
push
inc
fnstcw
daa
rorb
jbe
aaa
add
gs
xchg
int
mov
int
arpl
out
pop
stc
mov
out
stc
xchg
imul
push
in
movsl
fs
and
repz
ja
cmp
push
repz
adc
aaa
in
jb
adc
inc
inc
mov
out
push
sub
dec
je
mov
fcoms
movsl
push
out
and
sub
push
cmc
int3
sahf
mov
xor
addr16
loopne
jecxz
mov
mov
sahf
repz
mov
push
in
ret
pop
movsb
out
les
xor
inc
stos
mov
daa
mov
test
jg
jo
adc
icebp
ja,pt
in
push
lret
gs
push
addr16
cli
sbb
or
mov
sub
push
push
idiv
mov
add
xchg
push
sub
or
js
fidivrs
mov
into
popa
test
leave
mov
pop
xchg
mov
mov
jp
push
loopne
stc
addr16
adc
int3
out
cmp
clc
push
and
inc
sbb
add
and
sub
outsl
xor
mov
cmp
jbe
jno
fisubl
xor
dec
mov
and
pop
lahf
aas
aam
stc
psraw
out
inc
jp
xchg
fildl
int
pop
outsb
mov
mov
dec
aam
repz
test
adc
xchg
hlt
jl
rcrl
loope
xor
outsl
jnp
jnp
inc
addr16
or
mov
xor
adc
dec
fwait
xor
loop
fildl
mov
insl
jge
cli
fiadds
add
cmp
or
fldcw
push
push
push
and
clc
cmpsb
mov
jne
push
xchg
sub
std
pop
lret
lods
mov
sub
pop
xor
xlat
pop
addr16
and
insb
je
push
xlat
ret
push
outsb
aad
sub
in
insl
adc
cmc
mov
adc
test
mov
scas
clc
inc
cmp
les
pop
push
pop
dec
out
dec
fcoms
mov
jae
and
shr
sub
dec
pop
xor
out
lea
sbb
xor
xor
js
cmp
add
mov
lock
test
sub
sub
inc
clc
shlb
sbb
fs
ds
mov
repnz
ja
xchg
jp
sub
scas
mov
out
mov
add
jae
sbb
xor
sbb
jge
push
mov
jnp
cmp
stc
dec
and
mov
xor
push
outsb
shl
shrb
inc
dec
rcrl
nop
mov
jecxz
in
enter
in
daa
in
std
pop
push
xor
std
daa
ret
leave
push
push
pop
int
mov
or
test
lock
aas
out
pop
push
mov
mov
cmp
test
dec
cwtl
in
outsb
pop
cmp
insb
adc
jns
and
lret
jae
ret
sbb
bound
in
insl
ret
dec
jecxz
loope
fcmovnu
out
mov
rorl
inc
cmp
cmpb
js
mov
dec
int3
mov
stc
shrb
aam
mov
repz
fsubrp
daa
popf
jns
jmp
inc
fcoml
push
xor
xchg
ds
adc
imul
or
icebp
mov
push
inc
dec
out
mov
and
fs
pushf
loopne
adc
and
push
jp
mul
jp
daa
insl
loopne
mov
jge
push
push
out
das
lods
mov
lds
pop
sahf
sbb
mov
mov
lds
add
sarl
test
dec
and
das
mov
jg
jne
jns
dec
and
add
insl
push
cmp
sbb
xchg
cmp
mov
jl
inc
sbb
loope
roll
xor
scas
test
fwait
das
mov
out
mov
mov
jmpw
inc
int3
push
imul
das
adc
cmpsl
add
add
bound
sbbb
pusha
or
addr16
sub
and
jmp
mov
mov
lahf
rorl
mov
push
stos
daa
mov
mov
mov
mov
push
adcb
pop
push
push
lods
and
jne
inc
dec
push
stc
das
test
add
inc
in
push
xorl
shlb
es
daa
scas
inc
xor
mov
cmp
int
ret
call
addr16
insb
push
stc
in
jg
sbb
inc
push
xchg
and
push
mov
xor
push
into
fadd
pop
or
in
xor
into
dec
nop
add
xor
imulb
mov
ret
aad
ds
jmp
jg
jp
test
popw
pushf
adc
pop
sahf
ss
cltd
addr16
adc
arpl
pop
imul
pop
fbstp
pop
mov
adc
adc
lret
xchg
pop
js
inc
xor
jb
pop
scas
xchg
insl
in
xchg
mov
scas
inc
in
or
addr16
inc
out
bound
repz
hlt
addr16
xchg
movsb
sub
ficompl
or
pop
and
rcrl
adc
pop
mov
push
outsb
test
xor
lods
mov
jg
xchg
mov
clc
sahf
jmp
adc
xlat
mov
ss
xchg
or
hlt
pushl
cmp
les
pop
xor
insl
repz
xchg
dec
push
mov
cld
dec
mov
inc
inc
scas
repnz
xor
fadd
gs
or
xchg
cmp
push
rcrb
out
icebp
js
sbb
out
jae
push
jbe
sub
add
xor
pushl
or
jae
mov
cli
sub
stos
inc
push
mov
popf
popa
std
enter
or
mov
add
frstor
or
push
inc
xor
aas
shrl
pop
or
or
hlt
push
jo
cmp
mov
jle
aas
mov
enter
scas
fldl
dec
pop
cwtl
inc
frstor
jge
push
or
fadds
jae
shr
loopne
popf
jmp
xor
dec
add
mov
ss
inc
or
mov
nop
lods
fimuls
outsb
and
addr16
lret
lcall
imul
and
test
lret
out
popa
test
dec
clc
jg
clc
jae
mov
lret
clc
pushf
and
dec
lahf
in
inc
fdivrs
or
rorl
push
mov
add
arpl
scas
shrl
fistl
jae
xor
imul
scas
push
mov
add
mov
xor
loope
push
call
dec
and
adc
mov
ja
fsubrs
mov
sub
adc
dec
pop
dec
xor
xor
lods
cmc
adc
cld
cmp
sbb
idivb
es
mov
cltd
xchg
ret
outsl
mov
je
insb
lahf
in
or
sub
adc
sbbl
cwtl
mov
sub
inc
dec
pop
js
cmp
jle
inc
push
mov
icebp
sti
add
pop
xor
push
inc
xchg
sbb
xchg
sub
pop
cmc
fwait
sbb
or
jmp
xchg
fcompl
ljmp
xor
movsb
lock
scas
int3
push
subb
cmp
jp
fldcw
lods
inc
pop
fdivp
ret
inc
and
ret
jmp
sahf
mov
inc
sbb
stc
lahf
pop
push
lcall
dec
or
shrb
adc
add
es
pop
test
mov
mov
or
jno
test
xchg
popa
imul
mov
push
push
scas
mov
mov
adc
push
push
insb
mov
cwtl
stc
mov
pop
inc
mov
std
movsl
xchg
xchg
and
or
imul
cmp
mov
or
mov
stos
xchg
sub
rolb
dec
fstpt
mov
xor
je
ss
ja
fisubrs
fmull
mov
xchg
stos
cmp
mov
inc
add
lods
mov
xor
push
lods
and
lcall
jo
push
mov
test
lods
xor
mov
xchg
ret
mov
mov
iret
int3
lret
out
es
xchg
lods
mov
int3
sub
mov
pop
mov
mov
test
sub
sub
push
and
inc
lret
fucomip
or
sbb
xor
notb
lcall
rclb
sahf
test
sar
adc
mov
mov
mov
scas
pop
mov
popa
out
xchg
pop
ljmp
cmp
repnz
iret
push
fwait
jle
into
enter
out
xchg
inc
fcmovnb
jp
je
into
bound
xor
inc
je
push
xor
aad
filds
push
cmp
out
flds
inc
adc
fbld
aas
fisubrs
jae
dec
out
and
dec
pop
lods
jle
inc
mov
dec
int3
xor
loopne
xchg
jb
xchg
jne
sti
daa
ret
jmp
or
shlb
pusha
xchg
fnsave
addb
mov
inc
sbbb
sbb
leave
int
imul
daa
adc
cld
mov
imul
sub
subb
pop
sbb
add
lcall
push
aaa
dec
inc
dec
jne
push
jne
adc
ljmp
fcoms
ss
movsb
fcompl
cltd
sub
inc
pop
sbb
mov
jnp
ss
pop
rclb
les
adc
fistpl
xor
pop
mov
inc
mov
les
enter
mov
outsb
add
inc
sbb
jns
jno
int3
jecxz
inc
arpl
call
lods
push
pop
cmp
pop
pop
es
repz
dec
mov
sbb
jo
fnstenv
sbb
inc
dec
fnstcw
mov
and
inc
fidivl
test
lahf
jl
into
gs
enter
movsl
push
call
and
jne
cmpsb
std
and
push
mov
icebp
sarl
mov
fwait
cmp
and
push
push
test
out
adc
testl
repnz
xchg
cs
lods
sub
outsb
lcall
and
add
push
pop
jp
adc
inc
in
lods
lret
xchg
sarb
add
in
push
stc
sub
loopne
mov
push
lea
mov
dec
shrb
push
or
popf
mov
jns
pop
stos
push
cmp
sti
dec
sbb
ret
ja
or
daa
out
add
mov
lods
clc
dec
repnz
mov
adc
xchg
push
jg
lahf
outsl
loope
adc
xor
arpl
pop
sbb
popf
jns
mov
or
dec
scas
les
rorl
mov
das
sbb
xor
or
pop
inc
push
mov
in
pop
pushf
in
test
xchg
mov
mov
mov
adc
xchg
mov
sbb
xchg
outsl
mov
push
aas
add
sbb
mov
fdivl
adc
les
xor
test
in
pop
dec
push
jle
cwtl
scas
lock
mov
mov
gs
lea
xchg
les
out
inc
movsl
or
sub
rorb
xchg
icebp
es
scas
pmaxub
adc
push
rcll
xor
cmp
xchg
test
xor
jmp
stos
or
and
sahf
sar
nop
mov
push
jb
jg
js
cmp
xor
cli
push
sub
fdivrs
jmp
inc
add
ss
xchg
sbb
test
js
mov
push
mov
fidivrl
or
icebp
inc
lahf
stos
int3
hlt
adc
loopne
inc
and
fsubrs
les
int3
mov
mov
inc
cmpsb
subl
cmp
cmp
push
dec
stc
pop
adc
add
add
pop
loope
adc
cli
and
dec
lahf
push
sub
adc
scas
es
cld
sbb
aad
inc
adc
test
dec
mov
xchg
mov
mov
jo
pop
out
inc
pop
jmp
cltd
sbb
ret
inc
cmp
sub
and
jb
mov
add
rclb
ja
sbb
popa
push
ljmp
mov
or
jl
popf
pop
fcomi
ret
repz
repnz
decl
out
sarb
mov
and
fdivp
testl
xor
lahf
xor
lcall
adc
lds
bnd
push
mov
pop
jne
insb
xor
in
inc
or
jb
dec
mov
scas
push
pushf
cld
scas
test
mov
insl
xor
or
xchg
push
mov
in
add
addr16
repz
or
js
fnstenv
outsl
cwtl
je
arpl
shll
pop
scas
stos
mov
xor
js
into
scas
jg
in
divb
gs
mov
add
or
ja
mov
push
jle
cvtpi2ps
mov
sbb
sub
call
test
fidivrs
dec
xor
aas
push
and
xlat
push
js
fs
cmp
mov
cwtl
lahf
push
call
adc
hlt
push
dec
bnd
mov
ret
inc
jbe
out
cmpsl
enter
xchg
push
shll
cmc
icebp
cmp
adcb
std
adcl
add
fs
lock
loop
nop
lods
bnd
adc
hlt
mov
pop
aam
clc
dec
repnz
sub
sub
xlat
mov
leave
pop
inc
pop
mov
data16
fiaddl
xchg
out
mov
xchg
cmp
xchg
dec
pusha
push
jmp
daa
inc
icebp
mulb
cmp
and
inc
loop
sub
push
xor
rclb
int3
fs
sbb
das
sbb
xor
mov
popa
cmp
test
mov
inc
push
add
jmp
push
shlb
xchg
sub
dec
pop
add
shrl
bound
aam
out
mov
addr16
cmp
dec
pop
cwtl
loope
es
in
pop
cmp
cli
xchg
inc
orb
daa
push
andl
sub
lret
rolb
das
mov
enter
mov
mov
arpl
into
addr16
sub
mov
pop
mov
in
pusha
sarb
nop
add
push
out
xor
sbb
fidivs
xchg
cmc
mov
es
sbb
fmull
daa
inc
sbb
scas
ret
push
shl
bsf
jl
jge
scas
movsb
enter
pop
sahf
pop
push
and
dec
pop
mov
mov
mov
mov
cwtl
pop
int
es
imul
xchg
in
dec
push
adc
add
jns
xchg
lds
aas
roll
jo
stos
xor
xor
cmp
mov
sub
jmp
xchg
je
cmpsb
lods
inc
inc
das
enter
mov
mov
sti
sub
mov
jae
dec
mov
jo
sub
add
jo
xchg
and
push
call
repz
jnp
jecxz
ja
sub
inc
fsubrl
mov
iret
jecxz
fnstcw
mov
imul
test
ds
daa
add
dec
adc
jnp
std
les
adc
adc
pop
hlt
or
shlb
or
in
js
out
nop
aam
orb
pop
mov
mov
stos
mov
stos
cmpsl
jns
mov
mov
inc
test
cld
ret
hlt
mov
sbb
not
loop
jno
push
cs
orl
and
inc
jmp
xchg
pop
pop
out
arpl
jae
test
mov
cli
adc
pop
pushf
test
sub
pop
je
push
jmp
push
loop
xor
pop
xlat
cld
pop
nop
jnp
icebp
mov
mov
cltd
jecxz
pop
ficoms
rcr
outsl
imul
cmp
xor
ja
insl
es
xchg
add
repnz
iret
es
pop
xor
push
jns
inc
push
mov
fidivl
es
xor
push
lcall
push
test
scas
popf
xor
mov
outsb
frstor
push
test
bound
shll
mov
in
popl
test
inc
mov
xchg
mov
aad
pop
fdivrl
divl
fsubrs
cwtl
test
xor
fbstp
sti
ret
ja
ret
pop
ficoms
xor
data16
lea
loop
pushf
jecxz
stc
push
adc
mov
aas
xor
xchg
scas
inc
test
mov
pushf
iret
mov
arpl
inc
mov
ljmp
xchg
sti
xchg
enter
inc
sub
les
jne
mov
pop
popa
and
add
mov
les
jl
cld
das
xchg
cmpsl
fcoml
push
scas
sbbl
mov
adc
xchg
add
lret
xlat
add
sub
movsl
lret
testb
ljmp
mov
mov
adc
idivl
fsubrs
mov
fdivrl
xchg
and
inc
push
jecxz
inc
adc
cmpsb
pop
jg
jge
cltd
mov
or
xor
push
mov
stos
xlat
xchg
loopne
jne
cmp
push
aas
push
scas
popf
xor
aam
xchg
inc
sarb
fldl
and
aas
mov
pop
adc
mov
rclb
std
rcrb
cmp
mov
sbb
test
imul
out
rcrb
inc
mov
jbe
imul
mov
push
scas
mov
push
jb
repz
mov
je
inc
pop
xlat
iret
or
cmp
add
addl
movsl
daa
sarl
lahf
rolb
and
cmpsb
push
lods
xchg
leave
fidivrl
inc
sbb
dec
pusha
inc
lea
xchg
fdiv
sahf
xchg
mov
inc
mov
push
scas
inc
xchg
xchg
and
jbe
mov
mov
push
sbb
xchg
ret
ss
data16
loopne
test
fists
xor
xchg
push
enter
push
call
inc
stc
xchg
stos
mov
idiv
addl
mov
inc
inc
out
daa
outsl
cmpsb
cmp
hlt
gs
fstl
std
repnz
jge,pn
pop
mov
mov
test
loope
jl
lods
xchg
mov
mov
stc
aam
jp
sar
shl
repz
push
cltd
adc
add
imul
add
sbb
pop
insb
imul
xor
mov
sbb
out
xchg
outsb
inc
into
or
jnp
xor
dec
jmp
mov
lods
cmpsb
stos
outsb
clc
xchg
into
sub
clc
not
insb
mov
cmp
and
repz
mov
mov
inc
gs
mov
mov
arpl
das
dec
push
pop
push
mov
dec
imul
mov
or
sbb
jp
or
inc
mov
cwtl
dec
sub
mov
push
jb
push
scas
push
mov
mov
xchg
pop
icebp
shll
push
arpl
adc
add
and
das
les
mov
xchg
out
jecxz
cld
cmp
in
inc
pop
pop
cltd
scas
in
aad
rcrb
testb
dec
jmp
sub
cmp
add
adc
inc
js
ret
push
addl
and
popa
push
add
add
leave
xchg
push
jns
adc
or
test
sbb
dec
sub
xor
fs
lahf
add
mov
xor
and
push
cmpsl
cmp
fdivs
gs
out
adc
scas
jmp
or
add
sub
mov
mul
dec
fistl
stc
aam
sbb
sbb
out
popf
es
mov
dec
or
or
or
mov
cltd
rcll
push
pop
pushf
dec
gs
xor
idivb
pop
call
push
setno
scas
mov
daa
fwait
repnz
dec
fwait
lods
pop
or
ficoml
cltd
shll
sahf
sbb
arpl
dec
jp
jmp
cmpps
dec
fsubrl
jbe
xchg
lcall
sub
cmpsl
cmp
fsts
xchg
lea
daa
mov
push
inc
mov
stos
sahf
ss
mov
cmp
mov
sub
loope
inc
mull
add
stos
movsl
and
push
das
inc
jo
cmpsb
mov
xchg
or
addb
xchg
inc
arpl
rclb
loop
sub
in
and
loope
mov
or
sbb
push
test
sub
repz
outsl
stc
je
loope
or
pop
insl
mov
or
lds
hlt
addr16
outsl
jb
and
shrb
rcrl
cmpsb
mov
aam
cmp
mov
shrb
fwait
clc
js
xchg
sub
rclb
lods
inc
and
xlat
outsl
daa
xchg
push
popf
lds
jb
xchg
fcmovb
test
popa
pop
mov
cmp
and
and
sub
and
repnz
sub
sub
pop
test
pop
jbe
lea
sahf
fnstenv
mov
enter
loopne
sub
mov
pushl
sub
fmull
add
std
xchg
shll
dec
test
mov
push
or
pop
in
mov
lock
sub
sub
pop
sbb
mov
dec
xor
lret
push
loopne
popf
mov
mov
lret
adc
dec
in
shll
fcmovbe
lods
mov
idivl
popf
cmp
xor
dec
dec
xchg
pop
arpl
push
jmp
mov
inc
cwtl
mov
mov
sti
and
pop
outsb
sub
addr16
cmpl
addr16
gs
aad
mov
add
push
je
cmp
out
or
jbe
cs
and
call
cmp
mov
sub
iretw
loope
jle
das
jmp
negb
std
or
lret
cli
inc
rcrl
cmpsl
fcoml
mov
nop
ss
or
rolb
shrb
xor
sub
pop
xor
mov
fimuls
jl
push
fnsave
adc
push
cmpsl
mov
ret
rorl
dec
dec
imul
dec
enter
cmp
in
cmp
loop
xlat
xchg
xchg
xchg
dec
out
xor
mov
lods
insl
ja
push
adc
das
cmp
ret
call
loope
mov
push
jbe
rcll
cltd
push
xchg
mov
push
or
adc
xchg
jae
dec
fldl
outsl
loope
out
xchg
mov
push
pop
sub
sub
es
je
andb
mov
inc
pop
sbb
sub
pop
jb
xor
push
pushf
xchg
insb
mov
cmp
jmp
popa
xor
lods
scas
clc
mov
adc
addr16
xchg
aam
imul
dec
push
shll
sbb
int
cmp
rorl
add
add
mov
mov
or
pop
iret
out
push
jns
sbbb
lds
inc
or
xchg
test
sbb
lret
xchg
jmp
dec
sbb
cmp
xorb
mov
int3
jbe
mov
cmp
pop
cmc
cmp
push
out
sahf
scas
andl
jp
jo
fstps
notl
pop
mov
repnz
sbb
sbb
hlt
cmp
hlt
xlat
rolb
jp
sub
int
test
fistpl
mov
adc
xlat
mov
pusha
sti
je
push
jnp
call
mov
adcl
sub
sbb
fisttpl
jo
movsl
sbb
jmp
pop
xor
jecxz
push
lods
pusha
inc
xchg
adc
sub
sub
cli
in
subl
or
push
mov
xchg
mov
cmpsl
pusha
decl
or
jp
xchg
sub
shrl
enter
in
xor
dec
or
cltd
jmp
cwtl
daa
mov
and
and
jecxz
mov
call
dec
cmpl
insl
out
add
inc
or
xchg
inc
jno
ljmp
jno
jnp
xchg
sub
decl
filds
adc
mov
mov
lahf
dec
clc
pop
jne
imul
out
roll
std
ljmp
pop
pusha
loop
xchg
andb
and
xor
adc
mov
add
push
iret
mov
inc
jbe
out
in
aaa
into
push
inc
xor
xchg
add
or
shll
int3
fdivp
loop
es
outsl
mov
add
add
lods
or
push
std
sub
lret
stc
je
hlt
push
call
stos
xchg
sahf
test
mov
mov
pop
or
sbb
mov
add
mov
jmp
sbb
pop
jl
dec
cmpsl
aad
sbbl
cmp
imul
push
rcll
inc
aas
push
push
nop
mov
sub
gs
mov
jge
jns
outsb
or
dec
bound
and
pop
hlt
in
push
jo
mov
mov
lock
inc
jno
std
add
mov
mov
sahf
jne
xor
mov
mov
test
mov
mov
out
mov
adc
sub
sub
dec
add
push
push
clc
pminsw
mov
cmp
xlat
sbb
and
push
icebp
mov
mov
outsl
push
clc
pop
push
scas
xor
and
jb
shrb
mull
and
movb
hlt
inc
inc
fiadds
cmp
cmp
gs
aad
in
sbbb
ficoml
mov
mov
jecxz
sub
push
gs
xchg
jnp
test
mov
test
iret
xchg
out
add
inc
and
je
or
jl
cli
xchg
inc
out
push
or
pop
movsb
cmp
and
or
jmp
sarb
ficoml
into
inc
xchg
sbb
into
inc
popa
arpl
into
pop
push
push
js
sub
mov
adc
mov
repz
loopne
lea
add
mov
inc
mov
mov
push
jecxz
xor
push
jp
js
repnz
les
mov
call
xchg
mov
lea
and
sti
or
cmp
mov
loopne
imul
call
pop
enter
in
mov
in
push
iret
int3
daa
sbb
lods
mov
pop
sti
xchg
dec
iret
sbb
xor
mov
gs
jg
iret
adc
mov
mov
testl
stos
jg
jae
fdivl
dec
lods
scas
inc
adc
shll
mov
xchg
sbb
int
test
scas
scas
in
js
lahf
test
push
add
popa
xorl
aas
fucomi
pusha
xor
out
jge
in
and
dec
in
inc
aas
dec
jb
cmc
adc
push
andl
mov
adc
add
jo
lods
aas
hlt
xchg
cwtl
mov
and
mov
mov
lret
lods
push
ljmp
sub
sahf
jp
es
mov
inc
imul
and
lcall
sbb
adc
xchg
sub
sub
mov
push
stos
adc
rcll
push
scas
fwait
cmpsl
sbb
mov
xchg
jb
add
ret
mov
dec
out
sub
push
test
js
pop
icebp
pop
jge
mov
mov
mov
fldl
cmc
imul
sbb
jns
test
adc
add
je
jnp
test
ficomps
xchg
dec
sti
xchg
mov
lret
push
or
mov
clc
jnp
std
cmpsb
lea
mov
adc
xchg
jb
jno
or
jne
add
and
jns
cmpsl
mov
mov
pop
fmull
push
ret
ficoml
fadds
xor
lods
mov
add
mov
notl
fisubrs
insl
outsb
jnp
fisubs
mov
fcos
xchg
mov
fsubs
fcomps
fnsave
nop
in
ja
in
jp
mov
sub
mov
jg
imul
mov
jp
mov
add
mov
stc
lret
mov
dec
lods
push
test
xor
shr
xor
subl
xchg
sub
adc
loopne
inc
push
ret
inc
inc
sahf
sti
jnp
out
push
lahf
mov
lea
adc
cltd
xor
adc
mov
pop
mov
lahf
testb
addb
andl
movsb
sub
xchg
mov
jle
push
jmp
aad
bound
inc
pop
out
mov
jbe
loopne
test
ret
incl
cltd
xor
es
cld
cmp
pop
adc
adc
fidivl
dec
xor
test
xchg
jge
lds
or
xor
repz
fimuls
sbb
fimull
data16
fdivrl
xor
push
push
call
push
push
ja
or
xor
jp
fdivrl
fsubl
scas
push
jbe
imul
lcall
daa
mov
xchg
ret
inc
enter
and
mov
push
test
ret
lods
push
or
test
shl
cmp
pop
sbb
jns
pop
dec
mov
fs
icebp
xor
add
or
pop
icebp
data16
jge
push
js
xor
enter
out
xchg
mov
jp
inc
fdiv
stc
mov
sbb
sub
fstpt
fstpt
cmpsl
and
push
mov
ud0
das
inc
insb
sub
out
outsl
push
xor
mov
push
or
leave
es
adcb
leave
mov
cld
adc
xor
dec
in
int3
cmpsb
loopne
in
enter
inc
jmp
cwtl
cs
inc
mov
mov
shrb
pop
repnz
pop
inc
pop
negb
xor
outsb
test
push
jmp
push
jo
test
mov
pop
test
pop
cmpsb
or
in
lahf
out
shll
dec
dec
sti
jae
or
add
ljmp
fidivrs
push
daa
cli
test
mov
and
jg
xor
cwtl
cmpsb
in
test
push
loopne
in
inc
lret
shr
sub
mov
shlb
nopl
mov
shl
lock
sbb
sbb
mov
pop
mov
stc
hlt
inc
std
in
insb
add
es
push
xor
movsb
dec
dec
pop
xor
adcl
pop
dec
mov
ljmp
inc
gs
nop
lock
icebp
jne
stc
das
mov
cwtl
and
push
xorl
icebp
rcll
and
xchg
jo
sbb
adc
stos
mov
push
ljmp
jb
cmp
push
mov
push
jae
out
mov
add
lret
xlat
or
bound
pop
testl
test
xchg
movsl
ret
push
lret
repz
ss
cmp
adc
call
hlt
ja
mov
mov
js
sub
or
fsubr
pop
stc
fnstsw
ss
ret
mov
fistpl
pop
sbb
pop
jb
mov
add
call
rcl
outsb
add
add
sub
or
fsubrl
and
push
fadd
sbbl
test
mov
cld
inc
cltd
test
xor
dec
mov
shlb
std
xor
cmp
scas
shrl
es
mov
stos
fcoms
add
push
aad
sbb
pop
testb
add
mov
hlt
inc
jecxz
inc
cwtl
jmp
enter
mov
xlat
mov
sbb
dec
stos
ss
mov
cmp
mov
mov
or
aaa
lock
or
push
push
sub
pop
imul
cmp
dec
js
std
mov
stos
rorl
cmpsl
mov
nop
dec
or
jecxz
pop
xchg
push
sub
cmpsb
dec
or
mov
push
shlb
in
lret
xor
pop
jns
mov
mov
sub
dec
or
jb
xor
xchg
jle
rorl
push
mov
out
gs
xlat
insb
call
add
aas
int3
lret
ljmp
repz
cmp
mov
idivl
xor
shrb
and
or
or
int
pop
mov
out
add
pop
add
popa
dec
mov
sub
and
adcl
roll
xchg
cld
xchg
lret
loopne
scas
push
testb
daa
xlat
in
mov
aas
jns
dec
fbld
xchg
jb
inc
dec
data16
or
ss
test
push
divb
in
stc
pusha
push
xchg
fwait
or
jae
scas
mov
add
test
jae
adc
loopne
mov
pop
shlb
sub
or
jp
mov
fiadds
xchg
cmp
out
pop
stc
mov
dec
gs
in
dec
xchg
mov
jmp
jp
push
xor
xchg
sahf
sahf
sbb
jle
cmp
or
mov
cmp
adc
mov
dec
mov
iret
repz
cmpsl
loope
mov
addl
pop
lea
outsl
inc
adc
sub
sbb
dec
add
arpl
adcb
sbb
call
and
out
lea
add
fcoms
fadd
mov
faddl
sbb
imul
mov
jmp
inc
in
jo
add
bound
inc
cmp
testl
pop
xchg
pop
out
mov
fnstenv
loopne
inc
loopne
inc
mov
cwtl
sub
mov
push
or
out
cmp
mov
ds
ret
sbb
xor
pop
repnz
jg
mov
pop
mov
adc
fmulp
cmp
mov
popf
fucomp
rolb
sbb
fucomp
push
ja
mov
push
std
fnstenv
outsl
aad
test
dec
out
sti
and
jge
loope
jle
cli
xor
mov
push
or
push
push
cmp
icebp
sarb
out
sahf
inc
aad
cmc
jo
loop
lahf
daa
es
adcb
sub
adc
sub
and
popa
jmp
movsl
bound
or
lods
sub
into
shlb
jg
jo
cmp
pushf
outsl
push
rcrl
clc
ja
divl
imul
jo
cmp
mov
hlt
fisubrs
lds
cltd
sarl
push
dec
rorb
add
and
inc
fidivl
jo
mov
les
dec
das
cmp
ljmp
outsb
cwtl
vpavgb
icebp
and
cmp
leave
mov
xchg
sbb
lcall
shr
mov
pop
bound
pushf
addr16
pop
add
aaa
dec
mov
cwtl
or
movsl
or
adc
xor
jns
mov
sub
sub
xchg
inc
push
outsl
mov
dec
sub
dec
push
lcall
int
inc
sar
stos
dec
xchg
lcall
cmpsb
adc
vpsubusb
push
sub
xor
dec
arpl
cmpsl
lods
and
lret
pop
sbb
stos
nop
mov
shll
dec
mov
sub
and
pop
fsubs
or
test
scas
push
loopne
xor
mov
push
dec
and
out
jl
pop
mov
test
cmp
fwait
mov
js
jmp
mov
pop
push
fwait
inc
cmp
mov
jae
or
pusha
or
sahf
mov
cmc
jb
sbb
jl
push
mov
mov
lods
mov
ljmp
dec
pop
seta
fsubs
rorb
test
fdivl
les
jl
gs
sbb
jge
mov
pusha
sbb
test
cwtl
push
popa
dec
inc
and
push
mov
fistpl
leave
and
or
push
mov
popf
outsl
dec
mov
repz
or
pop
cmp
rcr
and
jecxz
ljmp
jp
mov
ja
adc
adc
ss
xchg
call
pop
bnd
push
scas
adc
int3
stos
in
addr16
push
mov
cmpsl
jne
pop
sbb
mov
scas
inc
ja
ds
arpl
xacquire
shrl
sbb
mov
and
pushf
push
mov
ja
fs
mov
sti
inc
pop
sub
lods
push
icebp
mov
pop
hlt
cmp
fildll
push
mov
hlt
push
sbb
leave
lock
rorb
sub
loopne
sub
inc
push
stos
repnz
sti
adc
cmp
xchg
xor
repnz
frstor
and
xor
push
fdivl
leave
xor
and
dec
lret
call
xor
fwait
je
add
or
sub
scas
mov
popa
dec
ret
es
loopne
cli
lcall
push
rcrb
pop
xchg
hlt
jmp
cmp
pop
cmc
xchg
orl
adc
cmp
jmp
fwait
xor
or
repnz
ljmp
add
inc
inc
push
or
in
lea
and
jl
jnp
test
mov
ret
hlt
sbb
and
mov
lods
shl
decl
xchg
jle
cmp
shrb
jno
dec
dec
xor
inc
inc
adc
pop
cmp
mov
jg
nop
inc
iret
jl
mov
or
and
push
mov
dec
ss
mov
fisttpll
dec
xor
pop
testl
sub
fiadds
pop
pop
sahf
push
inc
sub
push
sbb
mov
loopne
andl
jno
xor
jne
cmp
pop
icebp
out
jae
fstpl
mov
xchg
cmp
dec
cmp
jb
imul
adc
pop
clc
mov
jmp
inc
pop
mov
add
fidivrl
test
outsb
icebp
adc
orb
test
sub
cmp
mov
xor
mov
leave
arpl
shrl
or
push
jns
dec
dec
jle
shrb
lret
push
jb
xchg
imul
or
pushf
sub
inc
in
adc
sbb
into
add
pop
inc
xor
add
lret
cwtl
dec
mov
imul
jb
je
cwtl
jno
repz
fucomp
mov
jae
or
lods
mov
or
and
aam
push
mov
jno
aaa
iret
lods
push
mov
xchg
add
lret
idiv
rol
xor
repnz
mov
xchg
jbe
in
icebp
mov
jne
or
xor
ljmp
fwait
mov
in
ret
jns
inc
pop
sbb
lret
mov
xchg
outsl
cld
dec
sub
cmp
stos
mov
loop
sbb
movsb
cmpsl
ret
in
pop
nop
mov
add
mov
in
popf
adc
ljmp
test
int
pushf
sarb
mov
shrb
mov
scas
fcomi
push
test
or
push
xlat
push
dec
xor
mov
mov
mov
nop
adc
sub
cli
scas
out
dec
in
inc
jno
xor
outsb
loope
fists
lea
mov
ja
gs
outsb
fcompl
pop
fsubr
inc
xchg
ret
enter
fisubs
inc
cmpsb
aam
sub
or
jge
mov
int3
xchg
sbb
inc
fiadds
les
popf
gs
mov
in
jecxz
repz
jb
das
lcall
sub
mov
ljmp
lock
jge
xor
push
or
jno
cmc
mov
jg
cmp
clc
in
add
xchg
scas
in
add
mov
icebp
sbb
testb
or
jns
std
push
outsb
push
outsl
jnp
fdiv
rorb
adc
jno
adcl
mov
jno
sub
je
jno
iret
xchg
cmpsb
sbb
lret
bound
popf
mov
mov
xor
int
push
push
stos
daa
stc
adc
ja
sbb
pop
push
aaa
sahf
imul
pop
mov
inc
xchg
imul
das
nop
xor
push
xchg
fcomps
movsl
sub
ja
je
sbb
push
aaa
mov
das
cmp
lcall
xor
je
popa
push
pop
scas
leave
shl
jnp
cli
mov
pushf
adcb
ret
push
fwait
xor
ficompl
xchg
enter
idiv
cmp
add
mov
push
mov
insb
fistpl
addl
cmp
std
loopne
pop
stc
jno
jns
mov
push
imul
arpl
cmpsl
xor
ljmp
push
dec
jbe
pop
ret
jmp
aas
xor
insl
jmp
or
imul
xchg
or
movsl
nop
pop
fnstsw
sbb
faddl
push
dec
sub
xor
enter
push
push
hlt
sub
dec
jnp
subl
xchg
shll
call
or
sbb
mov
sbb
pop
push
jae
fidivl
mov
call
rolb
popa
add
mov
push
cmpsb
leave
pusha
fnstenv
out
xchg
out
out
into
scas
inc
cmp
outsb
int3
mov
cmp
stos
xchg
ljmp
jo
adc
push
test
test
enter
loop
clc
push
scas
iret
cwtl
or
leave
cmp
sbb
add
adc
xchg
das
adc
scas
ret
xchg
scas
xor
in
mov
xchg
adc
loopne
mov
lods
push
lods
dec
pop
or
mov
cs
cmp
scas
iret
and
mov
stc
or
xchg
fwait
mov
pop
xor
jo
je
or
push
hlt
inc
push
imul
fwait
jbe
pop
xor
and
shlb
inc
lret
or
pusha
and
push
sbb
xchg
pushf
sti
jmp
pop
jl
cmp
pushf
push
aaa
inc
out
inc
arpl
jne
icebp
insb
adc
addb
jnp
fsubrl
out
mov
cs
or
ljmp
test
xor
xlat
pop
jp
ja
test
and
or
repz
lcall
mov
xor
or
pop
stos
dec
mov
xor
pop
xchg
fldenv
or
jnp
out
jae
dec
mov
push
cld
sbb
daa
sbb
popf
dec
out
in
lcall
fs
sbbl
xchg
out
test
dec
xor
cwtl
sub
pop
push
jl
mov
xchg
dec
addb
mov
jne
stos
xor
aas
les
fsubrs
test
pop
xor
xor
sti
jecxz
sbb
xor
daa
push
cmc
sbbl
inc
pop
imul
jmp
daa
pop
cmp
cld
sub
add
pop
ds
lea
das
lods
pop
xor
mov
push
fwait
jnp
dec
mov
push
jmp
sti
mov
mov
mov
test
ss
fdivrl
sub
scas
jno
fdivrp
je
sbb
loopne
je
pop
cmpsb
ja
xchg
add
popf
js
test
pop
adc
push
add
sub
inc
cltd
dec
or
hlt
cli
or
add
adc
data16
in
rorl
cltd
scas
imul
jle
loopne
and
js
ret
cmp
sub
out
jae
mov
ja
cmp
or
das
pop
adc
mov
ftst
lods
hlt
gs
cmp
push
ret
pushf
mov
fcoml
rcr
xlat
outsb
or
and
adc
jbe
fsubs
push
mov
pop
dec
fbstp
pusha
mov
cmpb
jmp
or
test
ret
imul
rcll
mov
mov
fucom
jle
lods
sub
popa
cmpl
cltd
fadd
lods
pop
repnz
mov
add
add
pop
ljmp
lock
mov
push
mov
fs
sbbb
pop
mov
stc
ret
cmp
ja
dec
loopne
mov
addr16
adc
mov
xor
add
in
push
mulb
mov
je
xchg
and
adc
dec
jecxz
or
xchg
sbb
lds
mov
data16
cli
cmpsb
sub
mov
inc
push
jae
call
test
ss
aam
iret
jp
or
xchg
inc
mov
mov
xchg
bound
subb
dec
lock
fwait
push
sub
ficoms
loope
imul
push
push
cwtl
fmuls
pop
ret
repnz
cmpsl
xor
rcrl
mov
sbb
mov
imul
and
push
dec
pop
adc
int
jmp
pop
xchg
mov
notb
movsl
push
xchg
insb
clc
aas
leave
mov
mov
rcll
jle
mov
mov
orb
aad
call
mov
add
sub
mov
and
inc
cltd
cli
mov
and
into
adc
cwtl
inc
out
pop
sahf
sub
mov
push
jno
or
daa
push
jnp
in
fidivs
lea
outsl
sbb
xor
arpl
cmp
push
add
notb
bound
inc
stos
lds
shl
jmp
lret
call
or
shll
int3
outsl
js
outsl
idivl
sbb
add
pop
jle
mov
pushf
popa
in
jge
pop
mov
inc
lods
lods
lea
je
scas
movsl
insb
mov
pop
scas
sub
sub
cmp
insb
pop
mov
in
in
imul
inc
fdivrp
xorl
leave
cli
xchg
inc
add
xor
dec
inc
mov
sub
int3
xlat
setns
je
jo
fsubrs
loopne
pop
cwtl
jle
sub
es
out
xor
movb
shl
test
or
push
xor
stos
mov
mov
xor
dec
out
sti
fs
in
and
mov
sbb
dec
xor
jp
dec
out
je
cmp
lret
test
pop
xchg
cmpsl
xor
decb
gs
jge
jo
stc
cld
adc
fisttpll
sbb
and
clc
testb
stos
sub
lea
test
lock
add
push
adc
xchg
loope
mov
shll
sarb
test
lock
mov
adc
mov
inc
rcrb
enter
mov
add
inc
sub
inc
inc
jnp
stos
and
into
fsubrl
js
jns
mov
push
jle
jb
fidivrl
adc
sbb
fnstenv
mov
fnstcw
lret
sub
ds
push
nop
sub
mov
pop
pop
ljmp
insb
subb
pop
jecxz
insl
in
push
ret
scas
fwait
ret
rcll
cli
fists
repz
mov
mov
push
xor
insl
js
cmp
inc
scas
shrl
dec
gs
dec
or
mov
gs
pop
in
test
imul
sahf
mov
ja
or
stos
out
xlat
shlb
dec
cwtl
push
xor
push
jmp
sbb
ficoms
dec
sbb
outsb
sbbb
push
loop
sti
dec
dec
ss
cmpl
cwtl
movsl
jge
and
lret
out
scas
xor
das
mov
push
xor
mov
cmc
adc
sbb
iret
add
divl
pusha
or
out
adc
or
push
mov
add
sbb
mov
sub
fstl
xchg
cld
inc
in
and
call
sbb
xchg
vmovsd
mov
out
inc
xchg
xchg
push
jg
addl
test
rorb
xor
xor
jp
enter
xor
rclb
pop
repz
sub
push
pop
pop
cmpl
mov
loop
dec
fstps
cmc
test
cmp
arpl
stos
pop
xchg
adc
jmp
mov
cli
add
pop
mov
pop
lods
daa
sub
cmpsb
cmp
lahf
les
shlb
gs
inc
push
mov
mov
enter
and
xlat
dec
out
subl
sbb
int
imul
lock
cld
mov
xor
jmp
ja
sbb
sbb
clc
adcl
jle
pop
push
out
xor
loop
cmpsb
cmp
stos
loopne
cld
insl
jns
mov
cmp
test
adc
cltd
jae
sbbl
dec
sub
hlt
ja
xor
pop
push
mov
jnp
jne
subb
or
fsubrs
ja
repnz
int
dec
aaa
and
lods
xor
hlt
in
fs
daa
mov
fcomps
mov
push
jle
push
ljmp
jb
xorl
adc
xchg
dec
fbstp
sti
sbb
fisubl
mov
push
js
fadds
daa
add
mov
not
push
cli
pop
sub
int
xor
test
xchg
sub
repz
jae
aam
pushf
sub
sub
ljmp
nop
pop
xor
fdivl
mov
in
pop
orl
fldl
cmp
dec
movsb
jbe
or
scas
xchg
sub
mov
test
sbb
addr16
mov
cmp
and
xor
sahf
lods
mov
pushf
call
stc
cmpl
ja
nop
test
mov
and
scas
push
fwait
inc
push
cmp
into
fadd
outsb
jno
stc
push
in
sub
sahf
das
jecxz
pop
cmp
call
jle
loop
aad
imul
or
adcl
cwtl
and
jecxz
rcr
cmovle
std
pop
lock
das
int3
add
push
inc
flds
or
dec
mov
ret
jns
jnp
ljmp
in
repnz
cmp
stc
lret
and
mov
out
mov
ja
mov
nop
dec
es
sbb
xchg
test
or
adc
xchg
rcl
mov
sbb
aaa
shrb
dec
cltd
jp
fsubrs
aam
test
enter
dec
jns
dec
lcall
movsl
outsl
xchg
add
adc
sub
mov
cltd
sti
into
sub
and
in
add
imul
test
popa
fs
syscall
xchg
pop
sbb
dec
xchg
daa
dec
inc
xchg
dec
push
lods
jp
sub
xlat
mov
push
mov
inc
jo
and
push
add
insl
cmp
notb
pop
test
fcoms
scas
or
fs
push
and
aam
mov
lcall
enter
hlt
mov
lcall
incl
push
nop
adc
inc
pushf
push
inc
es
xor
frstor
lods
cmp
push
inc
pop
or
les
jno
fsubrl
sub
dec
stos
jg,pt
dec
aas
cmp
insb
inc
std
or
sub
dec
ret
mov
insb
jl
loope
popf
inc
iret
andb
call
shlb
mov
mov
mov
clc
daa
lea
push
mov
xlat
outsb
ret
jp
fnsave
jae
cmp
fwait
clc
in
fnstsw
add
imul
cmp
pop
repz
jp
or
and
jp
outsb
inc
mov
shll
push
loop
or
jg
in
xor
loope
cmova
lret
cld
pop
jb
mov
ja
repnz
and
jns
stc
sahf
cmp
xchg
xchg
sub
and
mov
leave
decb
jmp
jl
scas
adc
loope
rcrb
in
xchg
xor
sub
lcall
fldl2t
xchg
mov
subb
mov
pop
xchg
js
inc
jmp
add
es
adc
test
xor
xchg
and
fnstenv
insb
daa
push
mov
std
gs
shrb
out
aad
push
xor
jo
dec
out
push
add
dec
dec
adc
icebp
jg
in
out
rorl
mov
lods
sbb
jne
ja
push
xchg
xlat
push
int
and
jae
in
insb
xor
fmull
movsb
call
or
sub
inc
in
cmp
adc
fdivs
lret
div
xchg
pusha
lock
jns
xor
xchg
cltd
pop
popf
out
std
sbb
adc
int
mov
mov
js
ret
dec
jge
call
or
imul
or
ss
lahf
mov
dec
out
push
inc
scas
mov
rcll
cmpsb
mov
pop
cmp
mov
nop
push
movsl
mov
cmp
and
std
cltd
int
test
cwtl
es
pop
mov
jne
mov
cwtl
push
je
mov
xor
sub
inc
daa
iret
shlb
fidivrl
xchg
in
add
clc
push
popf
jne
outsl
outsb
in
out
insb
inc
sbb
ret
repz
adc
adc
jmp
mov
lods
data16
xlat
lods
aam
inc
pop
adc
or
ret
rcll
fisubrs
icebp
fcmovnbe
lret
test
jmp
mov
cwtl
testl
je
mov
jno
pusha
cs
pop
dec
in
add
jbe
decb
mov
bound
ret
jle
or
and
mov
sub
jno
shll
stc
mov
fistps
lahf
ss
add
push
pop
adc
lret
in
gs
mov
fcom
fistpll
xchg
inc
cmp
int3
jae
cs
dec
cmp
iret
pusha
add
enter
out
shll
leave
pop
sti
dec
cs
aas
sbb
imul
insb
nop
push
roll
nop
daa
cmp
pop
aam
push
mov
pop
cltd
push
and
push
jno
shl
lret
or
sbbl
cmpsb
push
into
mov
les
in
or
pop
ja
jle
sbb
dec
cmp
pushf
pusha
cmp
mov
or
movsl
clc
dec
mov
mov
pop
xor
xor
outsl
arpl
xor
add
and
push
and
rol
or
or
push
in
sub
fneni(8087
mov
push
mov
insl
sub
add
mov
mov
cli
sub
or
out
pusha
push
rcrl
int
icebp
mov
popa
mov
rorb
push
das
add
xchg
fists
pop
push
movsl
aaa
add
xor
loope
sbb
add
inc
mov
xor
mov
loop
jl
ja
and
rcl
add
fidivs
rcll
cld
sbb
movsl
push
and
aaa
sub
push
pop
or
sbb
sarb
inc
ficoms
push
andb
in
aas
jnp
sahf
mov
add
or
mov
loope
fcomip
stos
mov
arpl
lods
xchg
sub
imul
das
jae
or
movsl
cmp
scas
mov
push
ds
xor
inc
fs
sbb
mov
inc
pop
movsb
push
in
push
ret
dec
arpl
je
jns
outsl
sbb
xchg
mov
mov
icebp
add
int
std
jecxz
mov
das
call
jne
imull
sbb
lahf
fadds
test
xor
push
mov
mov
cmp
jmp
push
lcall
push
sbb
xchg
add
lahf
pop
push
xlat
cmc
mov
push
dec
pushf
in
ja
sbb
xlat
bound
pop
and
popf
adc
jl
cli
push
sbbl
sarl
addb
pop
push
dec
dec
cmpsb
repnz
or
push
xchg
scas
jg
out
int3
adc
rorb
pop
adc
int3
loop
cmpsb
sub
fisubrl
xor
jbe
mov
mov
mov
mov
imul
enter
fchs
gs
out
dec
xor
mov
or
test
push
add
push
sub
and
xchg
sbb
cmp
sbb
call
ss
lahf
push
loopne
xor
into
pop
sub
mov
mov
push
lds
push
out
jg
je
out
push
jmp
adc
mov
stos
inc
jnp
xchg
pop
pusha
adcb
xor
cld
and
jge
sub
fisttps
pop
addr16
rol
aas
sbb
sbb
insl
sbb
add
ret
adc
adc
out
adcl
push
sbb
hlt
loop
movsl
cmp
add
shufps
xchg
sub
lock
sub
jb
push
dec
adc
dec
decb
lahf
rorl
cmp
push
sbbl
inc
and
or
mov
bound
push
std
lods
xorl
insb
rol
mov
adc
or
sarl
lds
sti
ret
xchg
push
insl
jnp
pop
and
cltd
inc
shr
xchg
stos
out
sub
inc
and
leave
xchg
jne
dec
and
pop
fists
ss
mov
rorl
dec
mov
push
sbb
xchg
cs
mov
mov
test
jae
fdivrl
pop
inc
inc
xor
mov
fwait
enter
mov
inc
daa
out
mov
mov
fucom
push
adc
es
imul
mov
inc
call
add
mov
mov
dec
dec
out
shr
xchg
outsb
aad
mov
add
mov
mov
jg,pt
stos
inc
imul
xchg
pop
clc
ja
repnz
mov
mov
cmc
mov
add
xor
and
adcl
jg
adcb
dec
loopne
xorb
xor
bound
test
adc
sbb
push
sub
mov
scas
ret
xchg
fidivrs
sbb
jge
insb
stos
sahf
fiaddl
push
lock
push
je
in
xchg
loope
stc
jp
push
lret
sub
push
xor
push
mov
jno
mov
ret
sub
mov
lods
jmp
aad
jmp
int
add
test
outsb
sub
lods
and
test
xchg
icebp
mov
push
mov
out
cmpl
push
sub
testb
movsb
mov
pop
or
loop
xor
ret
jl
shll
jg
repnz
ds
pop
add
sub
jbe
xor
inc
dec
adc
leave
dec
testb
sahf
adc
repz
stc
mov
xor
push
jg
adc
cmpsb
jp
lock
push
adc
xchg
pop
insb
ss
pop
icebp
or
xchg
sub
shll
loop
push
fiaddl
push
imul
xlat
ficomps
push
fstps
add
mov
leave
pusha
pushf
or
out
mov
test
pop
mov
rorb
jno
xor
stos
std
movsb
sbb
dec
mov
or
sub
mov
mov
mov
mov
dec
mov
mov
inc
pop
push
mov
inc
dec
gs
xchg
push
test
jns
je
ja
push
jno
mov
stc
lods
adc
scas
sbb
sbbl
sbb
lahf
mull
popl
call
push
jg
fisubrs
outsl
push
sbb
addb
mov
mov
js
cmp
ret
stos
insb
push
cmp
pop
xor
dec
push
jge
imul
fwait
ret
cmpsl
dec
inc
cwtl
jecxz
lock
mov
repnz
cld
outsl
les
fcompl
mov
push
repz
inc
inc
fwait
cli
inc
xchg
roll
enter
xchg
insb
xor
rcrl
ljmp
pop
cmc
dec
mov
inc
add
jns
gs
dec
jae
js
xchg
fistl
lea
pop
movsb
mov
loop
and
jg
mov
cmpsb
mov
sub
dec
jbe
outsb
test
xchg
loope
test
add
mov
movl
int
sarl
push
push
shr
jne
push
jbe
jb
notl
mov
lds
das
push
out
push
stos
mov
lds
loope
stos
mov
xlat
dec
jecxz
xor
jle
es
lods
pop
push
xor
into
mov
push
push
adc
hlt
mov
jb
sbb
and
inc
jecxz
jmp
mov
cmp
pop
cmc
pop
aad
xchg
jb
fsub
das
sbb
push
xor
insl
xor
gs
out
mov
inc
nop
push
mov
jne
lea
xchg
mov
jns
jae
daa
cli
mov
mov
rorb
xchg
mov
push
sbb
or
test
xchg
sti
testb
jecxz
mov
mov
add
pop
adc
ret
and
imul
xor
and
jl
adc
sbb
mov
jne
push
insl
add
mov
and
movsb
pop
cmp
cs
mov
loop
add
inc
or
mov
mov
mov
popf
add
mov
movsb
ja
cli
stos
mov
insb
push
out
pop
inc
ret
cmpsl
mov
sub
aam
sbb
arpl
fs
repnz
dec
cmp
jo
in
push
lds
cmpsl
mov
iret
data16
mov
enter
cs
inc
rcrl
int3
arpl
clc
outsl
push
ljmp
out
popf
pop
lgs
shlb
mulb
mov
xlat
and
rcrl
pop
repnz
sbb
jp
loopne
insb
mov
std
xchg
sbb
out
test
sbb
in
lea
dec
mov
mov
lods
jl
mov
insb
xchg
sub
popa
clc
sbb
test
enter
addl
xor
add
nop
jb
in
subl
repz
sahf
xor
push
pop
pop
mov
call
aam
xor
mov
cwtl
shrl
stos
insl
sbb
mov
test
jne
mov
pop
cmp
dec
mov
testb
pop
jno
dec
inc
xchg
sub
in
xor
frstor
jl
inc
sub
xor
push
inc
xlat
cmpb
leave
imul
outsl
mov
or
add
pop
jne
sbb
fisttpl
pop
sub
mov
mov
jmp
and
cld
mov
push
in
adc
or
aas
mov
dec
inc
push
shlb
jg
mov
xor
sbb
pop
xor
and
js
imul
fsubrs
lret
movsl
dec
dec
loopne
imul
out
jno
les
shlb
pop
sub
out
adc
mov
shrl
jle
jno
sbb
jb
mov
cmp
push
add
xchg
mov
pop
sahf
repz
mov
mov
xor
sub
out
test
sub
test
pushf
xchg
cwtl
das
add
pop
xchg
sub
xchg
dec
in
xchg
call
mov
and
or
cmpsl
xchg
and
adc
or
jnp
mov
push
push
push
sbb
pop
mov
lret
sub
call
lea
sub
insl
loop
arpl
bswap
sbb
mov
or
cld
xchg
sti
pop
mov
mov
sbb
add
das
cld
jle
rol
adc
int3
jns
fistl
adc
imul
bnd
jae
mov
jns
mov
pop
enter
xor
jno
pop
pop
lcall
jmp
mov
mov
mov
sub
adc
xchg
inc
fidivs
jle
cmpsb
cmp
xlat
in
std
xchg
es
mov
mov
inc
popf
pusha
fsubrl
leave
or
in
out
enter
sbb
fldt
or
or
iret
sbb
inc
out
adc
adc
cmpsl
mov
pop
loop
xchg
mov
or
mov
xchg
pushl
lret
mov
mov
loope
lock
insb
imul
clc
nop
in
push
addl
out
std
test
inc
sbb
xchg
bound
dec
and
ljmp
lea
call
and
fldt
ret
add
imul
das
ret
jle
data16
cwtl
pop
cwtl
or
xor
sub
mov
cs
aas
add
fistl
dec
mov
cmp
jp
pop
popf
push
mov
fisubs
or
add
into
andl
sbb
in
jle
push
stos
test
in
subl
xor
pushf
xchg
scas
and
lock
cmp
jmp
test
sub
fbstp
fnstsw
hlt
mov
push
adc
shll
in
data16
jle
push
insb
std
in
jp
pop
and
fiaddl
push
dec
pop
test
gs
jge
add
out
cmpsb
add
adcb
push
lret
lahf
mov
in
push
les
adc
sub
dec
jno
mov
fisttpll
and
mov
lahf
mov
and
jge
xchg
jle
leave
push
push
jnp
sbb
add
cmpsb
cmp
xlat
mov
dec
repnz
push
cmp
xor
or
or
mov
inc
sbb
idivl
or
int3
fcompl
or
pop
jp
rcrb
scas
dec
mov
xchg
mov
fldt
and
push
mov
test
inc
cmpsb
pop
mov
les
and
das
das
repnz
movsl
mov
xlat
jle
cmpb
outsl
in
xor
jns
pop
aaa
fsubrs
push
push
bound
insl
aas
loopne
imul
lcall
clc
andl
aam
add
nop
sub
dec
pop
insl
rcrl
mov
adc
in
leave
cmp
or
addr16
imul
iret
data16
icebp
sbb
pop
jne
add
adc
mov
and
fcmovb
pop
lock
dec
mov
pop
push
inc
in
inc
roll
out
pop
dec
aaa
cmp
jl
sti
addr16
ret
sbb
shr
out
xor
loop
mov
mov
add
and
or
rclb
lcall
dec
pop
outsl
ret
test
jg
outsb
cld
sbb
sar
push
add
ret
in
inc
jmp
sub
inc
xor
je
mov
fsts
lahf
cs
and
mov
fidivs
xor
xchg
dec
addr16
out
outsl
sbb
sbb
cmpsl
ds
inc
or
insb
dec
fistps
mov
in
orb
loop
sub
inc
mov
in
inc
fs
mov
stos
inc
adc
addr16
pop
cmp
ret
stos
push
test
adc
push
dec
out
cmp
sahf
xchg
cmc
cmp
data16
push
jo
inc
enter
jbe
stos
adc
dec
neg
test
fwait
mov
add
popa
imul
arpl
jae
cmp
mov
js
insb
add
inc
data16
jbe
mov
push
sbbl
sub
sbb
aaa
xchg
stos
aam
xchg
push
push
stc
aaa
movsb
and
pop
push
aas
xchg
dec
mov
test
push
xchg
aam
fcoml
jp
out
pop
cmp
and
jbe
jecxz
clc
stos
es
xchg
xlat
movsl
out
sbb
outsl
and
shl
in
push
dec
mov
jecxz
pop
lcall
icebp
add
mov
mov
cmp
cmpsb
pop
xor
movsb
repz
mov
push
fiadds
stc
icebp
ljmp
push
aaa
leave
push
rcl
cmp
adc
adc
xchg
mov
sbb
ljmp
out
pusha
loope
mov
lret
and
push
js
xor
mov
pop
pop
cmp
push
lahf
xor
es
inc
adc
push
push
insb
add
popf
xor
pop
and
xchg
or
cmpsb
leave
pusha
cmp
pop
out
nop
int
xchg
hlt
mov
pushf
loop
xchg
mov
mov
mov
pop
cmc
aad
fadd
fwait
idivb
adc
push
jne
out
stc
and
in
dec
and
fwait
cmpsl
dec
push
sbb
adc
les
scas
imul
loopne
push
add
sbbl
int
pop
push
out
clc
aam
sbb
test
leave
push
add
mov
in
into
shl
aam
xorb
test
jp
ret
dec
insb
arpl
inc
test
leave
inc
int3
cld
pushf
stos
pushf
call
xor
stos
daa
xor
scas
xchg
stos
in
xchg
inc
dec
mov
xchg
cmpsl
mov
xor
push
cmc
push
xchg
inc
xor
test
dec
aas
jl
xchg
push
jne
dec
iret
mov
test
xchg
imul
push
ja
jl
add
cmp
pop
scas
aaa
xchg
add
jne
or
and
jo
xchg
push
push
and
sbb
cld
xchg
outsl
lock
imul
push
mov
mov
mov
jnp
mov
mov
fiadds
mov
sub
jmp
pop
sub
sti
push
into
adc
push
add
and
mov
lds
or
xchg
and
and
imul
addr16
adc
sbb
xor
shr
cmp
stc
mov
cmp
mov
pop
call
add
aam
cmp
inc
repz
addr16
into
inc
sahf
outsb
and
ret
jo
cmp
fisubrl
testl
cmpsb
data16
lcall
cmpsb
push
enter
shrb
jge
jmp
popa
imul
fidivrs
lods
mov
int3
hlt
int
repz
pop
scas
jbe
out
pop
and
pop
ss
push
ljmp
orb
add
aad
adc
clc
sbb
shrb
dec
loopne
into
push
cmp
addr16
loopne
mov
sbb
test
xor
add
mov
cmp
int
or
xchg
in
das
inc
js
test
xchg
inc
dec
pop
add
or
lcallw
cmp
lahf
dec
mov
or
outsl
es
call
insl
stos
mov
and
test
cltd
inc
mov
ljmp
add
call
dec
subl
ret
pop
add
test
fiadds
stos
movsl
cmp
pop
mov
insl
sbb
mov
repnz
filds
nop
xchg
std
clc
fnstenv
arpl
scas
mov
test
bound
cmp
and
mov
pop
xchg
mov
leave
cmp
jnp
xchg
jge
jne
push
ljmp
imul
jae
out
sbb
cmp
dec
or
mov
xchg
int
loop
mov
hlt
pop
mov
push
or
adc
mov
icebp
cmp
dec
leave
xlat
jnp
rcrb
dec
sbb
out
dec
imul
movsb
aad
fwait
pop
xchg
push
call
cli
ljmp
xor
mov
add
adc
and
aas
scas
lods
inc
inc
cmp
lds
lret
sbb
test
call
ret
jl
jo
and
xchg
pop
insl
negb
jmp
mov
or
sub
sbb
inc
lret
or
jl
mov
push
aad
out
out
cmpsb
mov
xchg
or
out
sub
out
add
aad
lock
adc
cmp
cmp
dec
ljmp
xchg
xor
mov
xor
movsl
sub
or
mov
std
push
gs
xchg
xor
in
and
xlat
push
loop
sub
push
cli
xor
enter
scas
mov
in
scas
add
mov
cmc
mov
sbb
sub
rcrb
add
mov
fdivl
enterw
mov
sbb
mov
call
outsb
inc
je
aad
push
mov
dec
insl
mov
lock
imulb
scas
adc
mov
push
fdivrs
mov
cwtl
pop
or
shrb
adc
sub
sbb
insl
mov
mov
xlat
adc
xchg
mov
sbb
cmp
es
cs
xchg
mov
loop
dec
xor
rorb
std
dec
cld
outsl
rcrl
jecxz
mov
dec
aad
cmp
stos
ret
mov
sbb
test
mov
loope
mov
fst
mov
bnd
adc
pop
adc
dec
sub
fdivrs
and
and
rorb
aaa
fdivl
lds
addr16
xor
and
loop
ljmp
xor
addr16
lcall
sti
xchg
sbb
sbb
loopne
adc
adc
lods
popf
lods
psubq
repnz
mov
cs
sbb
sbb
sbb
js
movsb
orl
or
and
testb
or
jle
pop
out
in
pusha
test
int
sahf
sub
pop
xorl
aam
add
jo
dec
cli
sbb
lahf
movsb
cmc
sarb
out
aam
dec
sarb
pop
data16
shlb
add
pop
cmp
add
dec
lea
lods
in
inc
xor
jge
loopne
aad
sub
decb
inc
push
mov
mov
add
push
decb
data16
fildl
sbb
xchg
insl
inc
jg
test
fisubs
fdivl
aam
cmc
mov
lods
test
ja
stos
xor
dec
add
in
push
lcall
adc
xchg
js,pt
jnp
or
mov
sub
icebp
xor
push
das
repnz
popa
cmp
xor
iret
xor
xor
insb
bound
into
pop
xchg
sub
lret
jns
lds
inc
fstpt
push
arpl
jns
inc
in
das
inc
aad
jnp
jae
les
xor
cmp
test
mov
imul
and
cld
mov
fucom
jno,pt
jns
insb
sub
dec
add
enter
sbb
sarl
cmp
pop
lds
fistpll
call
xlat
fidivrl
mov
call
adcl
adc
xchg
leave
and
mov
aad
mov
xor
mov
lret
idivl
push
test
jae
xor
in
add
aas
push
cmpsb
test
or
xor
sub
cmp
in
insb
or
add
cli
adc
dec
loop
test
push
rorl
testb
cmpsl
xchg
int3
call
xchg
sub
adc
ja
cmc
dec
xchg
je
cmp
xor
cmp
push
pusha
cmp
push
bound
push
cmp
movsl
hlt
mov
push
xchg
mov
bound
lea
pop
adc
xorl
dec
jg
mov
push
pop
int3
fdivrl
ds
ss
push
std
mov
insl
push
dec
pop
mov
jge
mov
xor
sbb
int
or
pop
mov
or
clc
clc
aas
pop
pop
mov
lock
pop
fidivl
push
add
mov
push
lea
sbb
out
adc
xchg
sub
lret
mov
dec
ja
lods
leave
jp
shrb
fwait
sarb
stc
cmpsb
in
xchg
das
mov
das
inc
mov
fsubl
cld
xchg
test
mov
push
repnz
and
in
fwait
rclb
call
mov
daa
push
mov
dec
xchg
mov
lods
add
popa
jne
xchg
lods
fbstp
jno
pushf
mov
andb
mov
and
movsl
jp
xlat
std
xor
and
or
mov
clc
mov
inc
add
mov
out
inc
pop
mov
add
cmpsl
in
jmp
jbe
add
or
call
movsl
inc
repnz
mov
sbb
scas
jle
sub
outsl
sub
cs
add
dec
sti
test
cld
negl
add
push
xor
imul
pop
in
popf
cmpsb
aad
jno
inc
cmpsb
or
lret
in
clc
hlt
mov
inc
pop
fiaddl
imul
inc
lcall
push
cmp
or
scas
ljmp
pushf
bound
popf
arpl
popf
scas
test
hlt
push
es
dec
mov
imul
add
xor
inc
mov
push
fcomip
dec
int
popf
iret
fnstsw
mov
loopne
sub
adc
jb
sbb
push
outsl
sar
jno
ud1
shlb
out
mov
iret
jbe
int3
mov
push
cmpsl
adc
or
xor
mov
cmp
imul
test
out
dec
sbb
scas
inc
bound
es
fwait
inc
int3
jl
outsb
loope
sbb
pushf
mov
rorb
insl
shr
out
cmc
sbb
push
mov
push
or
imull
or
iret
aad
and
sub
mov
mov
sahf
push
lds
push
dec
loope
dec
sbb
aas
sub
rcl
out
mov
int3
xor
in
imul
outsl
push
js
cmpsb
and
movsb
add
mov
test
stc
int3
subl
inc
xor
pop
xchg
incl
dec
sti
and
pop
lcall
mov
mov
pop
pop
xchg
and
lock
xor
jecxz
iret
push
mov
mov
pop
stc
clc
push
fs
xchg
stc
adc
xchg
add
jmp
mov
rorl
and
shll
aad
mov
mov
sbb
add
cltd
jb
leave
cmpsb
xor
nop
and
mov
insb
lods
sahf
adc
jle
ret
jle
sbb
adc
test
add
decb
sub
push
sub
push
je
mov
mov
cmp
rolb
inc
je
dec
cmc
push
sbb
stos
popf
jbe
fiadds
push
mov
push
mov
sbb
pop
jg
mov
mov
pop
hlt
sub
jns
aas
enter
rorb
xchg
sub
pop
mov
jge
inc
mov
shlb
mov
testl
dec
xchg
push
call
or
lahf
add
rorb
xchg
and
mov
cltd
fldl
jno
and
push
add
enter
lods
jns
xchg
add
dec
or
fs
dec
mov
pop
ret
adc
xchg
mov
les
add
jp
insb
mov
cmp
lahf
scas
out
lods
pop
mov
xchg
rorl
adcl
testl
sbb
outsb
mov
mull
xchg
fucomi
sbb
push
fdivrl
loopne
xchg
test
fnstcw
lea
das
sbbl
xchg
lcall
fsubs
bound
inc
pushf
inc
dec
cmpsb
gs
xchg
lds
inc
or
subb
mov
mov
adc
notb
mov
mov
mov
out
roll
lock
das
cmpsb
fbstp
pop
and
pop
pop
cmp
adc
mov
cli
bound
mov
jb
sbb
lods
movb
xchg
imul
fldcw
cs
stos
and
jb
xor
cmpsl
push
sub
out
cmpsl
dec
dec
out
dec
mov
mov
testb
jbe
jmp
mov
push
add
xchg
test
dec
in
xor
cmp
jno
mov
xor
insb
sar
movsl
stc
dec
loop
or
cmp
test
daa
mov
fbld
sahf
int3
rcr
fnstsw
dec
in
addl
mov
mov
or
mov
das
sub
ret
dec
repnz
test
push
fnsave
fists
cwtl
das
pop
icebp
fnstenv
cli
scas
cmp
notl
cli
adc
pop
mov
call
cmp
jecxz
fnsave
pop
jmp
pop
or
js
clc
clc
out
fcomi
repz
shrb
jecxz
addb
dec
sbb
mov
insl
inc
in
and
data16
jmp
sbb
fstps
jae
sbb
arpl
pop
jns
out
imul
dec
outsb
adc
dec
mov
dec
mov
int3
lret
outsl
adc
dec
fcoms
xchg
mov
int3
hlt
cmp
out
inc
fimull
or
lds
shrl
es
add
test
test
ret
ss
push
jo
popf
stos
push
mov
pop
xchg
lret
sbb
cmc
dec
xchg
sub
std
xchg
clc
gs
sbb
sbb
in
imul
mov
or
loopne
mov
mov
cltd
cltd
mov
mov
push
outsl
out
ja
mov
scas
inc
jl
cmpsb
mov
push
lcall
push
stos
std
cltd
jge
cmp
jbe
addr16
je
pop
or
mov
jmp
mov
sbbb
cmp
shrl
or
add
jle
cmpsl
mov
movsb
dec
sbb
or
xor
and
mov
and
adc
nop
cmp
mov
mov
imul
xor
dec
xchg
cmp
xchg
imul
cmpsl
fwait
test
xchg
js
mov
scas
push
aad
ds
xor
inc
sbb
pop
outsb
mov
pop
mov
rolb
xor
mov
gs
jne
into
xchg
mov
test
dec
or
repz
adc
ds
pop
cmp
lret
pop
cmc
or
fbstp
xchg
test
scas
je
mov
push
pop
nop
nop
adc
repz
and
sub
mov
push
fidivl
sbbb
pop
lock
loope
mov
fisttpl
stos
push
arpl
movsl
nop
push
mov
and
jo
jb
push
push
into
lret
cmp
mov
out
stc
es
orl
rcll
call
pop
jg
je
jg
xor
lret
jae
jns
push
and
inc
movsl
pusha
arpl
sbb
mov
mov
pusha
mov
ret
mov
int3
dec
inc
lcall
and
in
jg
inc
pushf
xor
jle
std
fsubrl
sbb
add
mov
fmul
cltd
fwait
inc
bound
mov
jle
ljmp
push
icebp
jl
dec
cli
arpl
cli
lea
mov
cmp
pop
mov
mov
add
mov
outsl
sub
pop
cli
das
mov
inc
pop
xchg
jbe
sub
stos
jnp
mov
insb
sub
into
push
pop
lcall
mulb
push
out
rolb
test
mov
jb
test
addb
lods
jae
sbb
mov
dec
in
lods
push
push
add
mov
xchg
out
mov
sbbb
or
fdivrl
add
std
insb
sub
jo
into
pop
mov
adc
mov
mov
repnz
mov
cli
inc
ljmp
inc
xrelease
push
lcall
pop
jo
stc
push
lock
out
cld
fisubrs
cmpsl
pusha
cmp
push
dec
mov
jns
scas
mov
shlb
xor
xlat
xchg
outsb
sbbb
jl
lods
mov
shll
add
xchg
ja
mov
jno
cmp
ret
pop
sbb
ds
mov
mov
in
icebp
push
aaa
sbbb
imul
idivb
loop
pop
cmp
popf
cmpsl
lock
push
mov
jo
mov
lea
aam
mov
jmp
push
cltd
stc
xchg
imul
lahf
sub
test
sar
iret
std
mov
into
add
notl
cmpsb
cmp
das
jl
std
cltd
decb
jbe
dec
push
sbb
pop
aam
sub
sub
add
dec
pop
mov
out
sub
loopne
cmc
cwtl
das
out
das
iret
cld
sti
sub
lcall
cmpsl
jmp
mov
dec
dec
jne
pusha
mov
dec
in
cmp
ds
int
or
jae
push
push
inc
push
lcall
ds
push
mov
sbb
jb
cmp
jge
dec
scas
mov
adc
inc
add
cld
in
sub
mov
jno
jg
mov
outsl
xchg
add
sbb
cmp
fsubr
scas
test
ret
mov
and
jbe
mov
sub
loop
dec
push
lea
cvtps2pd
out
pushf
mov
loopne
dec
repnz
push
mov
rcrb
mov
pusha
jne
pop
cmpsl
cmpl
add
add
mov
and
movsb
and
rcl
xlat
cmp
je
fsubs
mov
mov
test
out
jbe
mov
pop
add
sbb
xchg
cmp
pop
clc
mov
xchg
in
loop
push
mov
xor
jg
imulb
sti
mov
adc
dec
mov
popf
mov
test
adc
das
lds
shll
mov
in
sub
leave
lret
outsl
push
clc
rorl
lea
jle
add
sbb
xchg
push
pop
in
cmp
out
pusha
sti
pop
faddl
jns
jb
pop
mov
push
jne
aaa
fwait
in
icebp
xchg
rorl
dec
ja,pn
mov
xchg
jnp
es
cmpsl
adc
sbb
inc
or
pop
test
outsb
leave
mov
mov
xchg
mov
mov
loope
fldenv
inc
and
out
popa
pop
shl
push
rcr
lahf
mov
cmpl
icebp
fwait
call
push
or
cmp
or
je
or
mov
cmc
sbb
andb
inc
dec
sub
jg
mov
and
jnp
cmp
jns
cmp
shlb
pushf
add
lret
es
repnz
sarl
int3
jle
decb
and
inc
lret
out
adc
fwait
pop
sub
dec
push
xchg
mov
mov
outsb
push
outsl
lock
mov
adc
sbb
add
out
or
stos
and
sub
int3
push
push
mov
or
push
mov
pop
loop
push
std
xchg
mov
inc
push
subb
fwait
mov
pop
outsl
mov
and
xor
movsl
ljmp
and
adc
out
xchg
pop
mov
sbb
scas
sbb
jb
add
inc
sub
push
gs
mov
or
les
in
dec
pusha
mov
pushl
int
and
mov
insl
jmp
inc
fldt
pop
repz
jmp
adc
arpl
pop
repz
scas
lahf
jb
or
inc
cmp
in
or
xchg
mov
loope
mov
push
enter
bound
ja
pusha
pop
out
xchg
outsl
mov
ficompl
mov
sbb
in
pop
rclb
dec
jbe
xlat
jmp
push
out
outsl
xchg
mov
call
cmp
punpckhdq
mov
or
or
cmp
scas
and
repnz
hlt
and
inc
arpl
xchg
dec
aas
fidivrs
dec
fcmovnbe
pop
adc
xor
jo
loope
sub
mov
mov
xlat
add
mov
js
hlt
push
bound
pusha
testl
scas
jle
pop
movsb
int
enter
enter
addr16
shlb
dec
mov
out
sbb
test
fwait
mov
or
stos
xor
add
xor
mov
pop
adc
fiaddl
clc
out
pop
cmp
sbb
push
in
out
push
ret
pop
sub
xor
xchg
jmp
mov
arpl
jae
movsb
stos
mov
fldl
jb
divb
xchg
add
es
repnz
pushf
jg
cwtl
test
subb
xchg
pusha
jb
ret
cmpsb
sub
cmp
fadds
aaa
imul
ja
jmp
and
xor
jle
fisttpll
sahf
stos
leave
add
mov
bound
xchg
rol
sbb
push
shrl
lahf
imul
cmp
ucomiss
mov
add
sub
popa
imulb
mov
int3
imul
or
insl
mov
pop
gs
xlat
in
dec
pop
cmc
jns
in
inc
pop
decl
ss
pop
mov
or
adc
xor
inc
push
dec
sub
outsb
xor
bound
cvttps2pi
lea
mov
add
int
in
out
push
xlat
adc
and
hlt
xorl
pop
mov
fistps
jns
push
in
inc
icebp
push
movsl
push
out
js
and
sub
pop
cli
dec
repz
repnz
add
pop
in
aam
gs
sbb
fdivp
adc
mov
xor
outsl
mov
jnp
ss
mov
clc
add
int
xchg
enter
xor
mov
ds
mov
dec
rcll
in
jp
ficomps
xor
loop
inc
js
out
jge
mov
cmovg
out
test
movzbl
daa
mov
leave
rcr
jge
arpl
adc
sahf
add
pop
sti
or
rcrl
push
adc
jge
jl
jge
insb
add
xchg
cmp
sahf
dec
jecxz
jo
and
jae
loopne
or
dec
es
pop
dec
lods
fsubrl
add
push
dec
add
sbb
xor
arpl
pushf
arpl
jnp
bound
add
mov
pop
pop
adc
xchg
add
add
or
lea
and
loope
xor
add
outsw
jo
imul
or
xchg
mov
cmp
lahf
insb
xchg
mov
dec
cltd
stos
rclb
scas
fsubrs
push
mov
loopne
lods
inc
adc
ss
lret
lds
arpl
xchg
ds
dec
cli
xchg
cs
mov
out
scas
mov
out
lods
xor
mov
sahf
and
daa
xchg
cld
dec
dec
cwtl
arpl
cli
popf
repnz
notb
call
or
movsb
fwait
lahf
mov
mov
into
data16
inc
push
cld
out
lcall
cmpsb
and
mov
and
aad
loop
sbbl
sbb
lahf
stos
scas
ds
fsubl
outsb
scas
adc
xor
inc
push
add
sub
cmpb
fistl
jnp
inc
xor
jo
push
inc
std
dec
inc
cmpsl
in
mov
and
xor
loope
in
arpl
gs
popf
xor
push
fwait
gs
inc
adc
pop
mov
inc
fistpl
out
pop
inc
aam
mov
adc
or
repnz
arpl
rcr
sub
aad
loop
xchg
cmp
mov
insl
sarl
repz
filds
hlt
sbb
mov
stos
outsl
mov
cmp
add
mov
or
mov
inc
divb
int3
jnp
push
jns
mov
xchg
sbb
ds
pop
xchg
mov
dec
jecxz
fiaddl
sub
popf
int
iret
cwtl
in
xchg
ret
aas
push
adc
in
mov
mulb
inc
dec
sub
fcom
dec
popa
pop
dec
data16
push
in
fidivrl
lahf
cmpsb
push
testb
sub
fwait
dec
scas
push
aad
jmp
or
es
mov
ss
dec
stos
mov
sub
or
pop
sahf
sub
push
inc
lahf
stc
add
sbb
mov
insl
sbb
leave
ljmp
mov
hlt
enter
adc
hlt
int3
arpl
push
pop
outsb
popl
stos
leave
mov
mov
jmp
rcll
daa
jno
fwait
popa
mov
or
sbb
sub
sub
adc
test
xor
jo
and
xchg
xor
mov
xchg
test
pop
push
outsl
stos
fiadds
mov
xchg
mov
or
insb
cmpb
cmp
xchg
inc
loop
pusha
dec
pop
push
test
sbb
nop
ret
cmp
imul
scas
sbb
cmp
jne
out
xchg
xchg
mov
fwait
jmp
mov
or
mov
bound
jns
adc
cwtl
pusha
jmp
loopne
enter
dec
in
mov
pop
repnz
fldcw
jns
loopne
stos
push
mov
cmpsl
and
jo
xor
sub
sub
outsb
jae
int3
movsb
dec
stc
into
cmc
leave
and
pop
jge
push
out
pop
je
mov
stos
cmp
pop
ror
dec
gs
cmp
lds
pop
pop
movsb
mov
bnd
pop
daa
adc
xor
jbe
fs
ja
jp
sub
mov
rorb
loopne
xor
fistpll
xchg
cld
or
cmp
xor
pop
cwtl
pop
addb
aam
mov
fdivrs
das
inc
arpl
loop
mov
ds
sti
sahf
aad
mov
scas
dec
call
mov
inc
stos
inc
jne
loop
push
adc
mov
lock
and
dec
push
xor
lods
dec
jg
aad
pop
stos
push
lods
icebp
jecxz
mov
and
je
jbe
push
xchg
sub
pop
or
or
xchg
and
fxch
cmp
ss
pusha
fistl
lea
cmp
sbb
pop
test
scas
testb
notb
lods
filds
cwtl
arpl
mov
add
xchg
cmpl
sbb
mov
cmpb
jge
cmpsl
and
add
and
dec
push
jns
mov
push
rcll
cmp
mov
mov
notb
pusha
dec
cmpsl
adc
add
aad
lods
adc
xchg
les
and
insl
loopne
std
and
mov
mov
cmp
cmc
test
out
push
cwtl
mov
jo
ljmp
rcrl
sbbb
sbb
sahf
imul
sbb
jle
lcall
rorl
sbb
test
pop
mov
addr16
sub
je
mov
divb
subl
push
aam
or
mov
and
pop
lods
adc
fisubrs
cmpsl
jp
ret
into
cmp
out
mov
rclb
mov
inc
push
push
sbb
or
stc
ss
stc
int
sub
and
mov
mov
dec
pusha
jp
int
or
inc
cmpsl
or
cmpsl
jle,pn
sub
sub
mov
imull
insl
aam
jl
push
pop
call
aam
pop
jmp
jne
shll
shrb
pop
loop
add
mov
movsl
dec
lock
loop
cmpb
mov
push
or
enter
inc
lahf
push
push
pop
enter
aad
nop
dec
ljmp
into
incl
pop
or
pop
inc
daa
out
aam
jp
xlat
outsb
mov
mov
nop
mov
cmp
cmp
jb
jnp
sub
add
mov
pop
lret
cmpsl
lahf
popa
cmpl
mull
cmp
add
fbld
std
repz
rcr
idivl
mov
in
xchg
icebp
fdivl
aaa
shll
xchg
test
repz
fucomp
popa
mov
and
cmp
cmp
cmpsl
cmpsb
fsts
scas
cmp
ljmp
mov
iret
add
dec
adc
push
es
cmpsb
lcall
xchg
xchg
add
push
add
mov
repz
xchg
xchg
cld
jge
push
push
in
lret
adc
and
lea
jmp
imul
movsl
js
adc
pop
sub
test
add
stc
or
push
xchg
jle
jae
mov
pop
lea
cltd
lods
mov
and
sti
adc
dec
int3
fsubrs
ja
dec
in
mov
jo
jle
inc
dec
rcr
mov
dec
lods
lcall
test
jge
sahf
cltd
adc
inc
cli
adc
mov
rcrl
pop
ds
adc
fisttpll
fwait
aas
sbb
pop
insb
lcall
and
and
test
and
sbb
rcrl
aaa
nop
ret
dec
sub
xlat
cmp
ret
insl
test
add
xchg
es
in
mov
loope
pop
insl
xchg
aad
js
xlat
test
and
sarl
addb
std
sahf
push
dec
inc
mov
insl
sub
xor
sbb
mov
stos
sti
out
lds
dec
movsl
into
jb
adc
mov
ret
adc
movsb
lock
jbe
cmp
dec
or
out
adc
dec
pop
cs
cmp
setb
fcomip
sbb
fcomip
inc
mov
and
mov
shl
cs
out
xchg
mov
or
sub
pop
lock
stos
cmp
add
and
pop
inc
push
loopne
aas
icebp
into
inc
pop
int
jmp
xor
cmp
loopne
stos
mov
xor
dec
mov
cli
xchg
jne
dec
push
xor
dec
dec
ret
xor
jno
inc
cmp
pop
iret
mov
mov
cmp
push
pop
add
mov
push
inc
cmc
addr16
lcall
cmp
std
xchg
iret
inc
aad
repnz
imul
adc
or
pop
cmp
pop
xor
jg
test
mov
ret
lret
sti
lret
test
cmp
cmpsb
mov
outsl
test
addr16
cmp
lods
sub
sbb
scas
sub
call
jns
hlt
fsubr
push
mov
aaa
into
xor
push
add
fdivs
add
jbe
fiaddl
dec
daa
xchg
test
cltd
aas
add
faddl
jg
mov
call
or
imul
aam
loop
movsb
shl
dec
sbb
mov
outsl
push
fadds
xchg
mov
xchg
dec
gs
insb
mov
or
jne
aad
cld
mov
lods
nop
mov
xchg
sub
repz
in
mov
stc
mov
loope
inc
insl
mov
xchg
push
mov
push
mov
xchg
xchg
jbe
jb
jge
sub
adc
test
clc
add
jae
imull
jbe
aad
xchg
xchg
mov
push
stos
jne
cmp
jmp
push
ja
adc
fbld
or
loopne
mov
orb
andl
imul
sbb
lret
push
insb
pop
rolb
inc
aaa
testl
pop
mov
in
rorl
xchg
push
ds
jb
jns
gs
lret
je
sbb
ljmp
mov
sbb
outsb
sbb
roll
aam
repnz
adc
jnp
ja
sbb
aad
or
in
and
in
sbb
push
or
mov
or
arpl
mov
sbb
loope
cli
push
pop
les
sbb
pop
push
push
pop
or
in
test
test
fidivs
or
pop
push
test
outsl
push
mov
pop
dec
add
data16
inc
adc
or
clc
pop
in
xor
test
sbb
adc
fmul
mov
mov
out
and
std
incb
jg
mov
push
fs
mov
hlt
dec
mov
xor
or
push
push
fldl
xor
pop
mov
popa
popf
cmc
shlb
add
sarb
mov
sarl
out
push
pushf
xchg
es
ret
xchg
ficoml
push
cmp
sub
and
pop
jp
jg
mov
cmpsb
js
mov
scas
call
pop
out
mov
add
or
dec
dec
aam
pop
xchg
adc
jne
xchg
sub
xchg
pop
mov
in
jl
test
sti
mov
pop
dec
jp
mov
xor
ljmp
hlt
xlat
outsb
daa
lea
shll
dec
pop
stos
cmp
mov
jb
loop
pushf
sub
aad
ljmp
mov
push
movsl
cmp
xchg
std
in
out
movhps
leave
dec
push
in
xchg
lods
sbb
xchg
inc
fdivrl
xchg
pusha
jne
jne
fsubrl
imul
aam
inc
rcrl
daa
add
xor
fidivs
pop
stos
inc
dec
insb
std
pop
lahf
pop
dec
repnz
dec
arpl
dec
adc
mov
push
push
cs
mov
jbe
sbb
in
rcr
repz
dec
ds
andb
mov
fistpl
into
xchg
pop
mov
add
mov
adc
push
repz
pop
and
jo
test
test
orb
push
loopne
stos
jmp
fsubrs
loopne
dec
mov
bound
jo
call
loopne
ljmp
mov
pusha
iret
inc
inc
fstps
insl
sahf
insl
lods
inc
sahf
mov
xor
pusha
fidivs
in
mov
xor
std
inc
push
push
arpl
es
mov
daa
or
add
fbstp
mov
ret
scas
in
clc
movsl
outsb
loopne
push
mov
sbbl
xor
and
insl
xor
push
fiadds
cmpb
aam
cmc
push
imul
xchg
pushf
add
xchg
inc
ss
push
nop
std
or
mov
shll
gs
xor
testl
inc
stos
add
fdivrs
mov
pop
sub
and
fwait
jb
cmp
js
mov
test
xchg
pop
xchg
adc
mov
add
push
movsl
pop
push
mov
push
or
dec
mov
clc
pushf
inc
call
shlb
cs
inc
sbb
cli
push
cmp
lock
xchg
and
dec
push
sub
add
dec
stos
add
cwtl
cmpxchg
lods
aam
jmp
lret
sbb
pop
fwait
outsb
xchg
das
mov
push
lret
cld
jno
and
pusha
std
or
outsb
out
popf
stos
lret
xlat
outsb
std
int3
rol
or
in
push
cs
sbb
aam
or
lea
out
jmp
cmp
pop
mov
pusha
arpl
sbb
test
cmp
mov
xchg
xchg
inc
push
clc
out
insb
xchg
jmp
mov
iret
inc
cs
out
sub
jnp
add
sahf
jbe
adc
repz
cmp
and
pop
decl
mov
cs
xchg
pushf
scas
cmc
mov
in
ret
jmp
push
insb
dec
inc
xchg
sub
rcrl
pop
je
xlat
cmpsl
xor
fadds
test
mov
fistl
shrb
xchg
test
xchg
or
xchg
mov
jmp
pop
add
cmpsb
inc
pop
xor
sarl
sbb
sbb
jl
jg
sbb
jne
jecxz
stos
pop
leave
sub
aam
push
scas
sbb
jae
xchg
xchg
scas
and
shl
jnp
repz
adc
lds
fcomps
int3
orl
xchg
push
repnz
xor
push
xchg
xor
xchg
mov
fdivrs
out
sbb
xor
ljmp
and
lods
scas
dec
xchg
ror
jbe
and
pop
xchg
push
mov
mov
mov
js
pushf
in
mov
incl
popa
out
push
fucomp
push
mov
mov
jg
mov
push
sub
mov
call
jne
sbb
fdivrs
fidivrl
jb
addr16
dec
cwtl
fs
lock
nop
in
fcoms
xlat
cmp
inc
add
in
jge
adc
sub
and
push
ss
daa
aaa
sbb
cmp
lahf
ss
bound
mov
les
and
js
jo
insl
lods
inc
sahf
pop
jg
lds
lret
in
push
mov
leave
cmp
subl
cmpsl
pop
or
sbb
jne
into
cmpsb
push
test
arpl
mov
subl
sub
loope
popl
lea
xor
mov
cwtl
xlat
lahf
sub
jl
dec
xor
loop
pop
dec
sbb
cmp
adc
lret
mov
lods
mov
mov
add
movsl
add
sbb
sti
int
mov
sbb
in
hlt
in
adc
rcr
jl
mov
dec
mov
cmpsl
adc
and
push
call
fcmovnbe
outsl
jge
std
pop
insl
cmove
push
ja
jno
xchg
pop
fistpll
cmp
add
loopne
outsb
push
out
jo
lea
rcll
or
mov
or
lcall
ret
push
jmp
mov
jb
sbb
inc
in
mov
call
mov
cmp
xchg
adc
rcl
or
imul
shrb
addl
add
push
mov
mov
cmp
in
lods
jecxz
cmp
mov
jno
add
mov
adc
xchg
sbb
ret
pop
int3
sub
movsl
ds
push
mov
inc
cli
add
jns
pop
stos
sbb
jge
xchg
sub
sbb
ljmp
insl
jge
sarl
adc
mov
push
test
adc
sub
pop
not
push
loope
out
cld
sub
xchg
mov
cs
push
insb
inc
dec
pop
xchg
adc
inc
push
out
jb
lea
mov
lds
mov
cmp
inc
loope
fsubr
ds
fcompl
std
or
push
out
ja
ret
pop
dec
roll
mov
pop
lods
jae
mov
add
xor
xor
mov
jl
das
mov
or
cmp
xor
pop
mov
lds
jmp
sub
cmp
adc
inc
inc
decl
mov
fs
cwtl
cs
or
test
mov
fld
pop
pop
lcall
pop
mov
ret
jbe
aam
xchg
add
push
arpl
xor
inc
mov
mov
pushf
xor
leave
and
aad
ret
pop
orl
loope
divl
mov
imul
outsb
add
test
leave
push
push
sbb
or
push
ret
sbb
and
outsb
push
adc
sub
subl
sbb
adc
mov
jnp
mov
jmp
dec
fldt
cwtl
cwtl
iret
adc
or
dec
sti
xchg
inc
mov
insb
dec
rcrb
cwtl
clc
or
je
lahf
xor
or
out
inc
out
or
imulb
inc
sahf
jg
push
mov
push
stc
xor
mov
pop
mov
ret
xor
insb
inc
push
in
ds
outsb
rcr
or
imul
mov
jmp
iret
push
mov
xor
lret
mov
and
sbb
mov
mov
out
outsb
jne
in
cltd
pop
call
xchg
arpl
data16
cmp
js
loope
push
shll
icebp
mov
int3
mov
or
test
scas
xchg
mov
aaa
jge
cmpsb
imul
fs
jbe
insb
test
stc
or
sbbb
sub
cmp
in
js
sbb
outsl
add
stos
cli
lcall
xor
call
mov
and
xchg
fcomip
add
stos
ljmp
and
and
faddl
lds
push
pop
inc
fimuls
cli
adc
adc
xchg
in
jmp
scas
sbb
idiv
jno
bound
add
mov
fidivrs
jbe
jb
jecxz
std
xchg
clc
dec
ds
inc
mov
cltd
push
adc
lods
sub
push
ljmp
out
xlat
cmp
imul
add
or
adc
cmp
xor
test
ss
mov
rorl
stos
push
out
fcoml
mov
jne
dec
or
mov
lret
fstpl
in
mov
test
xor
inc
shrb
enter
or
sbb
jg
mov
and
inc
lods
xlat
or
push
dec
push
jge
pushf
mov
movsb
flds
cmp
pop
divb
xor
arpl
insl
jge
aaa
push
jmp
mov
jno
stos
lcall
xchg
daa
clc
pop
mov
push
push
test
iret
cltd
imul
insb
testl
xchg
jl
mov
lcall
push
js
std
fwait
adc
test
out
repz
fistps
mov
mov
push
inc
sbb
es
mov
cld
scas
test
lea
or
or
xchg
stos
cld
push
pop
jge
dec
stos
fwait
xchg
aaa
sbb
imul
mov
loopne
repz
clc
mov
mov
das
lds
jl
jae
sbb
and
test
lods
inc
es
push
or
add
cmp
inc
jecxz
dec
mov
movsl
outsb
add
dec
fstpt
pusha
movsl
out
add
dec
loopne
add
addr16
rcll
icebp
mov
mov
movsl
xlat
insl
out
stc
jno
in
stos
lds
inc
mov
push
and
xchg
cmp
dec
inc
popf
stc
jno
jl
mov
jge
repz
repnz
test
add
inc
in
les
imul
mov
arpl
jbe
pop
jp
lret
sub
sub
pop
dec
jle
aam
push
inc
jbe
int
push
das
fstpt
subl
dec
jecxz
pusha
adc
popa
jo
shl
out
jl
push
int3
frstor
insl
andb
mov
cmc
ret
fistps
sub
pop
xor
cmp
jno
test
mov
pop
pop
and
xchg
aas
iret
data16
inc
pop
sbb
in
inc
pop
ret
push
sahf
int3
lret
ljmp
xor
or
aam
fsts
add
loop
loope
daa
fildl
mov
lds
mov
mov
lea
pop
xor
mov
stc
loopne
mov
sbb
lahf
jo
ret
dec
fwait
xor
xchg
ds
jle
xchg
xor
xor
loopne
fcoms
insl
mov
or
dec
mov
jle
xchg
mov
push
mov
push
loopne
add
pop
pop
rcr
sahf
xor
add
icebp
inc
popa
jmp
xor
testl
mov
push
fdivrl
pop
stc
insb
xchg
fidivs
imul
lcall
fisttpl
jns
add
mov
bound
movsb
test
xchg
lret
shrb
cs
xchg
es
inc
andb
xlat
sub
fiadds
push
and
sahf
clc
loopne
popa
rorl
and
out
xchg
fwait
aas
ret
iret
js
movsb
jge
into
xor
xor
push
push
sbbb
add
cs
cmp
xchg
fsubrs
mov
xor
popf
notb
scas
subb
cmp
stos
jmp
jecxz
push
cmp
lret
sub
pop
leave
push
jno
sub
rep
push
lea
shll
scas
xchg
pop
mov
dec
sub
fwait
stc
pop
arpl
dec
cli
or
cmpsb
stc
jmp
daa
outsl
jo
or
in
sarb
rcrl
mov
xor
shlb
push
push
enter
pop
add
movsb
loope
rcrl
sti
adc
lahf
xchg
pop
xor
jg
cmp
dec
fsts
daa
lahf
pop
out
dec
cwtl
and
and
push
mov
mov
dec
stc
push
pop
dec
je
xchg
sub
pop
aas
test
daa
cli
mov
mov
lds
pusha
imul
clc
and
xlat
mov
lds
mov
int
xor
into
fnstsw
xor
or
mov
ret
ja
daa
cmp
xor
xchg
test
shl
mov
cld
cmp
test
push
aaa
adc
loop
test
push
enter
mov
xlat
inc
popl
in
popf
lock
iret
mov
sarl
or
jg
es
lret
lahf
popf
push
inc
lods
arpl
add
into
lods
mov
xchg
test
aad
and
jnp
pop
fsubrs
pop
cli
int3
add
stos
ficoml
outsl
dec
int3
and
rcl
fidivrl
outsl
jmp
push
shrl
lret
push
rol
xor
xor
fsubs
inc
mov
add
mov
mov
pandn
dec
stc
cmp
sub
mov
outsb
push
xor
xchg
je
pop
jae
rolb
fisubrs
push
cmp
pop
pop
xlat
mov
xchg
test
rcrl
sub
je
mov
mov
sub
fnstcw
inc
xchg
mov
jmp
stc
outsl
arpl
pop
xchg
stos
aam
mov
out
leave
push
sub
cltd
or
mov
insl
dec
cmp
push
mov
mov
mov
sbb
sbbw
inc
mov
out
sbb
in
subl
idivl
cltd
or
jmp
sti
stos
inc
sub
std
cmp
cs
js
stos
mov
lea
push
adc
mov
mov
pop
lcall
and
aas
leave
pop
xchg
sub
push
lods
mov
mov
pop
sbb
xchg
add
xchg
dec
fdivrs
xchg
sbbl
aas
mov
es
or
pop
stos
sub
loope
sbb
les
gs
push
cmc
xchg
sub
xor
mov
sub
fwait
push
lahf
testl
sbb
lcall
sti
mov
outsl
adc
stc
aaa
mov
ja
pop
adcb
xor
lret
dec
into
jo
jecxz
mov
mov
cli
test
lock
mov
daa
mov
loopne
inc
rolb
mov
push
aaa
sbbb
add
jnp
xor
pop
mov
pop
add
cmp
inc
xor
arpl
into
adc
adc
and
jno
cmp
lret
cltd
or
out
loopne
inc
adc
ret
ret
mov
int3
xor
add
jp
xor
std
inc
sbbl
mov
xorl
cwtl
cmp
out
or
cmpxchg
iret
mov
out
iret
data16
mov
or
jb
jns
leave
mov
jb
push
int
adcl
jbe
xchg
dec
push
sbb
or
push
jno
stos
adc
hlt
ja
lds
js
inc
pop
cmp
xchg
push
dec
add
jge
int
std
xchg
xchg
sub
sti
test
xor
ret
in
xchg
outsb
add
xor
frstor
inc
dec
call
or
push
out
xlat
mov
sub
jne
fiaddl
push
jne
sbb
pop
outsb
mov
xchg
push
jle
dec
aam
push
pop
cmp
pop
enter
pusha
fwait
xchg
pop
shrl
inc
xchg
cmp
inc
fcoms
adc
mov
cmp
sub
data16
out
jge
in
and
pop
cmp
das
jns
xchg
lea
lahf
inc
mulb
mov
and
cmp
shll
cmp
mov
inc
iret
loope
and
xchg
jne
in
popf
cld
ds
test
insl
add
and
fisttpll
xor
cmpsb
bound
push
subl
cmp
push
subl
aas
cmp
lea
mov
inc
pop
stos
cmpb
jmp
add
mov
fucomp
repz
aaa
stos
shl
pop
xor
mov
cmpsl
loopne
push
pop
sbb
rcrl
jno
insl
loop
fdivs
xorb
into
idivl
sub
fstpt
mov
cmp
and
xlat
outsl
inc
inc
std
loopne
movsl
pusha
not
adc
jnp
jb
adc
jns
pushf
xor
mov
mov
lret
and
cmp
aas
mov
adc
push
clc
test
fcmove
out
xchg
inc
xchg
mov
xor
mov
ret
aam
pushw
dec
loope
ret
call
test
mov
je
mov
adc
mov
popa
xchg
jmp
or
lods
cmp
and
fldcw
out
sbb
pop
fsubrl
mov
mov
fucomip
mov
mov
iret
fdivrl
inc
data16
icebp
inc
fstpt
loopne
cmpl
pop
loope,pt
xor
sub
xor
lods
add
sbb
dec
les
sbb
sbb
jmp
cmp
jmp
pop
rolb
xchg
stos
cmp
test
jno
repz
xorb
ficomps
shll
dec
xchg
dec
and
in
inc
inc
and
or
xchg
jmp
xchg
sbb
pop
jbe
out
push
sub
cmp
outsl
jo
outsb
adc
mov
fnstsw
jb
imul
inc
mov
lcall
mov
test
fildl
stc
push
les
pop
shrb
sarb
pop
repnz
scas
ljmp
andb
push
mov
mov
sbb
outsl
lcall
mov
sbbb
mov
mov
pusha
arpl
inc
cmp
in
push
mov
out
mov
jbe
fistpll
fidivl
dec
loop
jne
or
das
imul
movsl
sbb
xchg
jecxz
add
jl
sbb
sub
sub
test
lock
and
inc
jbe
int
std
dec
cmpsb
cld
inc
cmp
xlat
insl
inc
sub
add
dec
or
pop
mov
das
add
stos
vmulpd
jbe
jg
or
ljmp
inc
jp
sbb
bound
iret
dec
mov
pop
sub
sbb
std
mul
jns
push
xchg
popl
jbe
rcll
dec
sarl
mov
shll
xchg
fcomip
add
jbe
push
out
test
mov
mov
or
hlt
push
mov
fyl2xp1
cmp
fstps
or
lock
in
in
and
sub
mov
xor
push
sbbb
sub
sbb
repz
push
fstl
test
sub
adc
push
push
lods
fsubl
pop
data16
cwtl
or
mov
jae
insb
mov
out
sbb
mov
rcrb
iret
jbe
in
mov
xchg
std
pop
jg
sub
xlat
mov
popf
and
sti
and
xor
jmp
pop
adc
mov
xchg
add
jne
divl
leave
movsl
stc
nop
or
push
movsb
bound
xchg
cmp
push
push
dec
gs
and
lods
and
xor
vfrczps
daa
mov
mov
jnp
sub
add
dec
sub
cwtl
int
das
shll
hlt
arpl
je
and
xchg
and
test
jmp
or
dec
mov
mov
fadd
sub
pop
js
xchg
xchg
and
jg
fld
adc
adc
data16
lods
outsl
js
sahf
cld
pop
ss
sbb
cmp
jmp
icebp
and
sbb
xchg
jb
push
mov
aam
shlb
out
cwtl
shrb
lds
cmp
xor
rorl
push
xchg
scas
cmc
push
push
shlb
cmpl
sti
nop
cwtl
xchg
mov
mov
mov
jecxz
ljmp
data16
push
stos
out
sbb
pop
xor
cmp
aaa
inc
jae
push
push
fs
std
outsb
add
stos
movsbl
cmp
rcrl
xor
or
movsb
pop
sahf
adc
cwtl
sub
test
adc
mov
sahf
shrl
and
sbb
and
fldenv
scas
data16
popf
sbb
arpl
mov
out
jbe
xor
mov
stc
xchg
adc
aad
mov
push
int
inc
or
fnsave
imul
adc
sbb
jae
repnz
xchg
int3
lahf
inc
adc
sbb
mov
mov
repnz
xor
aad
adc
cmp
adc
mov
out
pop
or
sbb
pop
pop
hlt
lret
sti
adc
repz
adc
add
and
andb
mov
and
shr
add
jmp
xor
lods
adc
ret
ret
mov
mov
pop
sbb
aas
cwtl
jne
test
cmpsl
repz
repz
add
sub
lret
sti
and
sub
pop
inc
cmp
push
jg
lret
sbb
xchg
std
cmp
mov
jp
lods
ljmp
pushf
cli
dec
sahf
lahf
and
in
or
or
fstpt
mov
enter
pushf
lock
cltd
sbb
nop
jg
inc
mov
cmpsb
inc
ret
push
push
pushf
push
imul
push
or
cmpsl
xchg
mov
cltd
leave
push
jecxz
cmp
arpl
pop
mov
jge
mov
shrb
lahf
xchg
push
mov
jge
movsb
scas
repnz
sub
pop
mov
notb
shlb
rcll
sarb
aaa
data16
jae
jmp
into
inc
sbb
lods
and
orl
sub
cmc
adc
aas
shrb
mov
mov
dec
lock
imul
inc
lods
je
insl
daa
ret
xor
hlt
inc
fdivrl
xor
xlat
cmpsl
adc
cmp
and
fld
movsb
addl
cmpsl
ljmp
mov
dec
jecxz
xor
or
xchg
inc
iret
inc
pop
xchg
js
fs
pop
sti
icebp
push
arpl
jo
mov
push
loope
or
xor
mov
mov
into
mov
test
out
bound
jo
pop
bound
leave
jmp
subl
test
xor
xchg
lcall
push
loopne
inc
cld
dec
and
stc
mov
repz
jl
clc
or
cmp
adcb
mov
xor
shlb
pop
mov
fsubrs
adc
mov
imulb
cmp
pop
push
imul
pop
ficoms
cmp
pop
lods
out
int3
pop
rcrb
mov
mov
fiadds
or
jp
mov
imul
js
ret
push
jbe
adc
pusha
push
mov
xchg
test
mov
inc
cli
or
jle
in
fwait
gs
mov
lea
jmp
fstl
inc
aaa
push
pop
sub
ljmp
mov
or
movsb
jno
lahf
out
jae
js
loopne
adc
push
lret
aas
psubd
mov
mov
adcl
mov
packssdw
fnstcw
testl
rolb
xor
xor
pop
outsl
jge
mov
popf
js
sub
aad
jecxz
cmp
sub
push
jg
or
inc
pop
icebp
ret
ja
sub
jp
pop
mov
aad
and
das
lods
jne,pn
jl
jnp
loope
lret
mov
cmp
cwtl
int3
outsl
push
fwait
inc
sti
lock
adc
test
cmp
adc
das
adc
fsubs
scas
jmp
or
xchg
std
aad
stos
mov
push
shll
or
testl
dec
push
push
cmp
xchg
push
add
adc
dec
fstl
stos
cmp
cs
rcrl
jge
dec
mov
dec
sarl
pop
rol
mov
popf
pop
xchg
add
add
ret
scas
jg
aaa
lods
xor
push
xlat
aaa
and
cmpsb
loop
mov
jne
sub
les
sti
pop
push
clc
dec
jbe
sbbb
not
jecxz
insl
or
pop
dec
popa
cltd
int3
arpl
or
adc
int3
jno
js
aad
lret
test
loope
xorl
mov
mov
rcpps
xchg
sub
popf
sbb
hlt
mov
push
pop
int3
mov
sbb
out
insb
and
into
xchg
pop
test
add
in
sub
cmpsb
cmp
jecxz
sub
aas
rcr
mov
rorl
xor
and
and
imul
jo
jno
pop
sbb
lds
outsl
int
loopne
sbb
addl
jb
arpl
xchg
lahf
dec
popf
inc
hlt
mov
addr16
leave
xor
shlb
sbb
pushf
mov
adc
xlat
xchg
and
scas
cmp
jp
aam
jl
push
add
push
xor
pop
insb
mov
fsubrl
aad
dec
bsf
push
cltd
jns
sbb
xor
jns
adcb
aas
sahf
sbb
adcb
decb
bound
inc
shrb
imull
mov
jmp
mov
xchg
mov
sub
pop
out
mov
les
out
lret
test
fcmovne
dec
jecxz
cli
push
sbb
scas
push
rolb
add
pushf
inc
sub
push
leave
cwtl
sub
pop
out
fs
loopne
aaa
dec
pop
iret
notl
and
insb
add
int3
xchg
std
cmp
fisttpll
fldt
movsb
mov
sbb
pop
mov
jae
inc
cltd
lcall
test
jo
inc
movsl
jo
pop
loop
int3
xor
test
inc
pop
or
lcall
int3
mov
js
out
mov
out
xchg
test
or
fdivp
inc
in
popf
adc
or
jne
jo
mov
popa
adcl
insb
jmp
sahf
mov
vpsllq
or
scas
mov
aad
enter
popa
inc
cli
inc
cmpsl
push
lds
mov
int3
cmp
mov
data16
pop
fcmovne
or
loop
out
push
sbb
xor
and
sub
test
pop
repnz
and
jbe
ficoms
pusha
mulb
ss
jg
repnz
int
xor
cmp
dec
mov
and
fists
push
js
adc
inc
push
hlt
sbb
out
sti
aam
popf
ljmp
mov
in
add
adc
sahf
movsb
ja
lock
rclb
leave
cmpsl
pop
out
dec
lret
lock
adc
xchg
and
sti
hlt
inc
outsb
sahf
enter
ljmp
hlt
mov
aaa
mov
push
test
lret
xchg
fidivrl
dec
mov
xchg
sub
mov
push
or
adc
mov
int
pop
shll
sbbb
jg
push
inc
cmp
in
dec
adc
jg
adc
sti
inc
cs
cmp
adc
lods
push
xor
ja
ljmp
fisttps
cltd
enter
out
sbb
fsubrs
mov
mov
push
or
pop
xor
and
pop
push
jae
les
xchg
dec
fistl
xchg
jo,pn
sbb
push
xor
fildll
pop
in
sti
push
xchg
mov
mov
repz
or
scas
push
or
push
cmp
inc
xchg
in
int3
fmuls
cmp
cmp
insl
aad
pop
insb
mov
lods
inc
jg
outsl
shll
mov
jmp
inc
aam
inc
es
outsl
lods
inc
push
repz
dec
jns
pushf
lcall
stc
lcall
and
hlt
mov
imul
fldenv
leave
data16
lretw
in
fwait
inc
andb
and
inc
jb
popa
fcompl
xor
ficomps
sbb
add
cltd
xor
int3
adcl
mov
dec
loope
pop
scas
addl
stos
or
adc
adc
adc
fwait
shll
cmp
imul
mov
loopne
push
xchg
xchg
cs
push
sub
stos
dec
xor
shll
test
pop
outsb
mov
test
xchg
sub
insl
ret
fs
inc
popa
xor
fsubs
ret
orl
loope
cmp
movsl
imul
cmpsl
imul
iret
add
pop
inc
fdivs
mov
sub
and
push
jne
addr16
mov
mov
test
push
xchg
jae
std
cltd
shll
jne
in
cmpsb
data16
out
mov
cmc
gs
mov
xchg
jmp
and
vcvtss2sd
addb
dec
mov
push
jae
pop
xor
push
push
jge
cmp
dec
xorl
add
dec
xor
test
push
shl
jae
shr
jg
mov
addr16
shrl
in
jl
mov
or
dec
mov
jle
cmpsb
std
outsb
xchg
mov
rorb
pop
mov
or
fwait
mov
std
jbe
cmpsl
mov
ja
enter
jns
dec
stos
or
into
mov
push
inc
icebp
arpl
dec
arpl
lret
repnz
fsubr
ja
call
add
mov
jne
enter
sub
mov
addr16
xchg
sub
xor
sub
cmpsl
add
sbb
inc
add
cmpsb
out
movsl
mov
xlat
adc
pop
inc
xchg
jns
push
fwait
test
popa
jecxz
insb
jmp
sub
mov
imul
in
ja
fcoml
xor
ja
out
jle
adc
int3
sbb
movsb
ficompl
sub
popa
cld
or
sbbl
loope
ja
divb
int3
gs
dec
add
outsl
adc
mov
fwait
hlt
and
daa
adc
je
xchg
xor
sahf
mov
or
dec
dec
mov
loopne
jl
jge
insl
or
leave
lds
sub
inc
fcmovnbe
fildl
cltd
sbbb
sub
mov
add
or
adc
imul
jp
jecxz
inc
jge
adc
push
stc
ljmp
dec
test
or
vmovq
pop
cmpsl
mov
mov
fnsave
or
lea
adc
scas
outsl
mov
andl
jl
mov
cs
out
push
movsl
push
mov
jge
mov
shr
clc
roll
loope
repz
rolb
push
mov
repz
xlat
inc
jno
daa
jecxz
pop
lret
and
push
xor
je
cmpsb
cli
mov
push
dec
or
popa
or
adc
out
xchg
inc
inc
daa
cltd
scas
inc
lret
call
dec
adc
jle
push
push
pop
sbb
lds
mov
xor
arpl
ljmp
rcll
sbb
fnstenv
mov
fdivl
int
push
cmpsl
or
and
aad
fiadds
xor
add
into
sbb
arpl
das
push
mov
ret
inc
jecxz
or
scas
xlat
lret
loop
lcall
or
push
xchg
dec
test
cmovns
leave
femms
sub
divb
test
add
add
push
inc
stos
mov
in
insl
add
xchg
pusha
add
xor
fwait
int
outsl
jnp
out
add
cltd
or
jmp
pop
or
ja
outsb
xor
jge
lcall
pop
mov
aad
les
sbb
xchg
pop
stos
pop
or
sub
and
ss
daa
stos
sbb
xor
xchg
loop
sti
testl
lcall
sbb
popf
inc
and
mov
xor
inc
stc
faddp
pop
test
ret
mov
mov
mov
fbstp
jo
dec
arpl
mov
adc
push
adc
mov
dec
dec
sahf
and
jecxz
fcomip
cmp
inc
fmulp
cmp
jno
mov
mov
fucomip
adc
xchg
inc
ja
fisubl
fwait
jbe
jns
addl
imul
sub
pop
dec
sbb
push
inc
inc
clc
ds
sub
ss
test
jbe
inc
and
xchg
inc
xchg
add
add
jne
sbbb
ds
outsl
mov
vcmpss
sbb
xchg
mov
ljmp
push
jp
xor
andl
out
push
cwtl
sti
fistl
sbb
push
jne
mov
mov
pop
fisubrl
roll
dec
clc
jp
data16
fwait
scas
ret
inc
pop
pop
mov
call
test
repz
sub
insb
popf
decb
cmp
enter
cmc
push
or
fstl
lret
add
pop
rcll
inc
adc
gs
inc
inc
and
inc
fidivrl
mov
clc
pop
repz
push
or
mov
push
xlat
enter
mov
mov
xchg
or
and
fidivs
dec
jg
inc
inc
arpl
hlt
sbb
ret
gs
out
xchg
clc
dec
add
xorl
sub
or
cmp
test
inc
push
shrl
pusha
das
out
lea
xor
xor
xchg
dec
push
movsl
out
sbbb
sub
pop
imul
movsb
lods
sbbl
jmp
sbb
rorl
mov
inc
loope
inc
adc
cltd
stos
pop
mov
or
ljmp
xlat
clc
hlt
mov
adc
call
xlat
add
movsb
js
and
in
outsb
or
jns
insb
daa
cmp
cwtl
or
aas
jo
mov
insb
clc
pop
xchg
or
mov
lods
add
std
dec
and
jae
mov
sub
movsl
js
xor
mov
mov
cmc
add
pop
inc
stos
movsb
mov
sbb
repnz
adc
nop
inc
shrb
stos
pop
jmp
fucomip
jb
loopne
outsb
push
jo
fnsave
iret
cmpsl
fdiv
jns
jns
mov
icebp
imul
aas
scas
cmp
dec
xchg
outsl
leave
cli
xor
ja
pop
sbb
mov
or
mov
outsb
leave
pop
out
cld
push
aad
imul
adc
sar
mov
cltd
xor
dec
mov
call
sbbl
and
mov
xor
xor
cwtl
ljmp
adc
or
inc
cwtl
stc
fcom
pop
pop
loop
fcmovbe
insl
repnz
cmpsl
cmp
add
sar
inc
neg
out
sub
lea
mov
xchg
out
addr16
mov
pop
sti
sub
sub
xlat
pop
xor
aad
xchg
xchg
inc
ficomps
sbbb
sar
icebp
into
mov
mov
push
sub
xor
dec
ljmp
pop
xchg
repz
mov
loopne
ja
pusha
insb
insl
jnp
imul
jns
jae
out
or
mov
push
ret
rol
pop
dec
adc
ljmp
add
stc
or
mov
jnp
dec
es
insb
mov
sbb
ljmp
add
lds
pop
sbb
call
lods
or
sbb
movsl
lds
pop
mov
sub
test
inc
fisttps
test
or
and
dec
js
in
leave
popf
lret
bound
shrl
and
jns
adc
bound
xchg
movsb
inc
and
xchg
add
xchg
ja
push
jno
push
cmp
dec
mov
xorb
cmpsl
push
sbb
push
repnz
push
jnp
mov
test
fs
jbe
jecxz
ss
push
xchg
jmp
push
add
shl
push
lods
inc
loopne
clc
cmpsl
jo
lret
bound
sarb
cli
and
clc
adc
pushf
xlat
icebp
mulb
mov
mov
push
or
add
push
ret
repz
xor
sbb
outsl
notl
jg
pop
mov
and
scas
test
addr16
lahf
jns
hlt
fs
lcall
mov
sub
aam
sub
add
mov
sahf
sbb
xchg
push
cld
and
and
mov
sbb
mov
in
dec
xchg
sbb
lcall
xor
mov
xchg
mov
adc
or
mov
sbb
xor
xchg
negb
mov
pop
sbb
inc
idivl
xchg
shrl
popf
pushf
repnz
inc
mov
lock
dec
cmp
mov
push
out
int3
jae
jmp
into
rclb
out
sub
jl
outsl
mov
das
xor
adc
hlt
fucomp
add
inc
and
out
pop
pop
cmc
dec
sbb
add
std
xchg
fnstsw
stos
jbe
cld
movsb
andl
testl
mov
or
out
loope
loope
lds
je
hlt
lahf
push
add
pop
icebp
ja
jle
fstpl
jns
enter
cmpsl
add
mov
jle
pop
cmpsl
jns
xor
addl
inc
mov
dec
in
cmp
divl
jmp
pop
hlt
adc
fsub
mov
dec
or
jmp
mov
or
pushf
fstpt
and
mov
mov
ja
jle
push
fdivrs
or
xor
pop
fstpt
inc
push
jmp
loopne
ljmp
or
idiv
mov
inc
in
es
lahf
cmp
stos
test
xor
dec
data16
int3
nop
xchg
xchg
repnz
into
mov
lret
test
rcrl
mov
add
cs
popa
xor
mov
fsub
mov
cmpsl
cwtl
lea
div
push
jl
dec
lahf
jle
cld
cmp
cmc
dec
stc
repz
jge
je
add
pop
sbb
icebp
cmpl
loope
enter
cs
mov
in
add
imul
adc
dec
aam
sub
movsb
or
aam
cld
insl
mov
sbb
push
jg,pn
ss
push
push
sub
jg
adc
call
mov
cld
aam
movsl
rcrl
mov
in
inc
mov
aaa
out
inc
and
and
nop
mov
inc
nop
mov
insl
je
pop
test
xor
push
cmp
mov
lret
lds
sarb
xchg
mov
sub
fldenv
dec
or
dec
aad
dec
pushf
cmc
nop
or
mov
in
pushf
xchg
mov
shll
inc
jb
mov
adc
rorl
or
int3
fsubl
push
jge
add
jecxz
insb
and
and
pop
lock
cld
into
enter
or
xor
xor
adc
or
arpl
xchg
ljmp
outsb
or
inc
lret
call
mov
divb
mov
mov
inc
push
jl
add
jecxz
and
add
lock
xor
push
jl
pop
mov
in
stos
inc
aad
jne
rolb
popf
cld
mov
jbe
in
cmpsl
imul
pushf
stc
je
sbb
jle
sbbb
xor
loopne
dec
mov
lret
rorb
cwtl
and
lds
aad
fucom
adc
mov
test
jmp
loope
sub
pop
les
test
ret
push
mov
push
mov
sub
xchg
rcrl
out
pop
inc
xchg
sahf
lahf
js
orl
push
dec
pop
fisubs
ret
and
or
lea
int3
mov
fstpl
imul
cld
outsl
cli
mov
inc
xchg
mov
out
movsl
push
sbb
mov
mov
or
outsl
or
pop
dec
jo
and
insb
cmpsb
lods
mov
sub
pop
or
js
subb
out
ret
shll
sbb
mov
adc
rcll
ja
push
aad
cmp
or
in
popf
jnp
adc
ficoml
lret
sub
jp
or
pop
dec
and
sub
sub
sti
call
loope
fdecstp
mov
ljmp
xor
sub
out
mov
or
roll
mov
lea
pop
ja
pop
clc
xlat
repz
movsb
inc
rorb
fidivs
or
subl
jle
insl
xor
lds
adc
lret
test
dec
add
sub
or
cmp
xlat
push
mov
jae
mov
stos
or
jle
das
mov
outsb
loope
pop
mov
sahf
or
sbb
hlt
in
push
movsb
sbb
push
shrb
jb
nop
subl
in
xchg
ret
call
add
push
pop
inc
test
loopne
xlat
jno
pop
rcl
adc
and
aam
into
and
data16
pop
ja
adc
arpl
pushf
rolb
push
mov
and
or
fimull
and
es
cmp
xlat
sub
mov
jne
jbe
mov
mov
xchg
test
pop
jecxz
int3
sub
pop
or
cmp
ret
add
mov
loopne
adc
xchg
inc
pop
movsb
dec
or
cmpsl
in
cmpsl
pxor
xchg
jns
shlb
ret
imul
es
ficomps
jae
mov
cmpsl
inc
sub
sub
add
push
jb
xchg
sbb
push
lret
rcrl
add
mov
xor
pop
pusha
fsubrl
shlb
idivl
in
das
push
dec
fnstsw
call
test
repz
clc
or
aad
cltd
cwtl
jp
andl
daa
insl
add
sahf
sahf
xchg
bsr
cmc
lea
push
scas
and
and
jle
shlb
jle
jbe
addr16
cmp
les
mov
cwtl
jns
push
pushf
iret
xchg
or
out
mov
xchg
xchg
dec
out
adc
loope
mov
cmp
pop
ret
insl
fcomps
inc
pushf
outsl
out
insb
daa
adc
or
mov
ffreep
jle
out
and
jae
push
js
incb
pop
leave
enter
subb
outsl
add
mov
aaa
loope
and
pop
data16
jl
imul
sbb
push
xchg
sbb
iret
lahf
ss
inc
sti
out
std
popa
and
inc
mov
jecxz
mov
mov
cmc
repnz
aad
imul
pop
xor
xchg
push
sub
xlat
call
popf
xchg
sub
dec
ja
divl
lcallw
mov
sub
mov
push
test
mov
fidivrl
orl
sbb
clc
daa
out
out
push
and
inc
in
push
test
sbb
mov
cmp
out
hlt
cmp
arpl
jne
arpl
imul
dec
ljmp
cli
loop
hlt
push
xchg
add
scas
push
add
imul
das
inc
and
or
mov
out
movsb
adc
mov
cmp
les
cmc
roll
mov
or
imul
mov
jbe
popa
fcompl
add
or
fbld
imul
sbb
xor
jp
pop
push
movl
sub
inc
in
lods
xor
cmpsb
xor
ljmp
inc
adc
pusha
cld
enter
and
clc
sub
cmp
out
lahf
notb
es
repnz
lods
sub
add
ljmp
add
sbb
pop
xor
in
dec
jns
jno
sub
shlb
jnp
in
push
sbb
push
adc
push
ds
fdivs
xchg
xchg
cmc
in
dec
jns
stos
outsl
roll
outsb
xchg
sbb
rcr
je
je
pushl
xor
adc
cmc
add
out
pushf
and
add
jo
mov
pop
insb
inc
mov
sbb
cmc
in
dec
pop
pop
loop
push
xchg
imul
cmp
dec
imul
dec
dec
mull
filds
out
mov
daa
scas
and
aaa
mov
repz
push
dec
or
mov
loopne
mov
gs
push
call
mov
fiadds
push
mov
jne
and
call
adc
cmpsb
ret
xor
in
inc
or
addb
jns
adc
leave
sbb
adc
pop
or
pop
sti
or
call
movsb
xor
adc
sub
cmpsb
fiaddl
mov
outsb
and
leave
xchg
mov
popw
sahf
xchg
out
pushf
cld
lret
jmp
and
call
pop
test
sub
icebp
nop
mov
fstpl
aam
fnstsw
push
inc
repnz
xor
mov
mov
jnp
dec
movsl
cld
add
add
mov
dec
in
jecxz
dec
add
or
push
lahf
rorl
stos
push
loope
xchg
cmp
and
or
std
fldt
out
scas
jle
adc
jle
fcoml
scas
aad
pop
scas
scas
mov
mov
push
fldt
into
push
int
jnp
or
inc
cmp
ljmp
outsb
mov
mov
xchg
mov
ficomps
subl
mov
lock
dec
or
cmp
popf
pushf
sbb
sub
imul
shlb
movsb
int3
add
aam
and
sub
sub
xor
int
jb
fistl
sbb
aam
jmp
mov
xchg
jns
lds
es
add
das
out
sbb
pop
test
mov
xlat
int
push
ror
cmpsl
imul
fbld
push
push
addr16
imul
out
add
cld
aas
inc
ret
outsl
add
hlt
pop
adc
mov
enter
lods
jbe
leave
lahf
cli
xor
pop
push
sub
insl
ja
loopne
mul
fistpll
subl
cmp
test
push
sbb
xchg
and
mov
pop
or
fs
pop
je
pop
outsb
orb
mov
ror
pop
dec
dec
ffreep
add
cmpsl
push
scas
cmp
xchg
sbb
in
hlt
aad
cli
push
sarb
inc
sbb
push
cmpsl
and
gs
inc
aaa
in
sbb
pop
int3
sub
jns
fimuls
xor
jae
dec
test
mov
and
fsts
aas
xchg
mov
fwait
pushf
cmp
mov
or
out
lcall
dec
gs
jl
or
roll
inc
ds
sti
push
lret
test
pop
sbb
sahf
mov
jmp
imul
imul
cmp
push
shll
sarl
inc
cli
push
loopne
xchg
insl
sub
or
jecxz
and
xchg
mov
out
pusha
ljmp
xor
pop
mov
into
add
pop
xchg
sbb
lock
or
leave
nop
push
imul
mov
mov
push
stos
xchg
mov
adc
pushf
push
cs
andl
sub
jae
in
adc
sti
pop
ret
inc
in
pop
xchg
mov
hlt
pop
jae
jmp
out
out
lea
test
into
lods
add
dec
shlb
add
adc
in
xchg
test
xchg
sbb
imul
jae
or
push
and
leave
pop
and
push
and
dec
pop
cmc
sub
pop
ljmp
sti
push
ret
shl
and
push
xor
in
popa
adc
aad
sbb
mov
jle
push
jmp
cmp
sub
es
fwait
mov
inc
adc
inc
cltd
stos
jnp
adc
cltd
cmp
cmpb
mov
fnsave
ds
jmp
je
xor
xchg
or
repnz
fstpl
or
sbb
insl
daa
inc
movsb
rcrb
cmp
dec
add
frstor
add
repnz
into
test
or
mulb
sub
ror
mov
dec
insl
sbb
leave
das
pop
jl
arpl
or
sbb
and
mov
xchg
add
push
cli
cmp
cmpb
test
mov
jne
xchg
cs
jp
sets
jno,pt
and
test
mov
repnz
lret
xor
or
aas
cwtl
rolb
or
repz
push
and
test
mov
jle
pop
jge
imul
bound
adc
sub
lods
push
shll
loope
jecxz
xor
cmp
mov
lods
add
inc
push
fs
dec
and
mov
mov
pusha
and
arpl
xchg
mov
cwtl
jb
jns
negl
out
add
add
or
mov
mov
shlb
call
mov
icebp
outsb
insl
mov
daa
pop
outsb
jae
xchg
leave
sub
cli
mov
add
xlat
shlb
or
in
addb
in
push
clc
cmp
lcall
adc
stos
mov
data16
andb
loope
mov
out
stc
fs
fildll
ds
and
and
and
aad
pop
cmc
fwait
push
and
xchg
pop
aad
adc
adc
xchg
jp
les
cmp
les
dec
repnz
mov
lds
xor
cmp
dec
add
dec
pop
mov
mov
push
add
enter
ljmp
ljmp
lcall
int
mov
cmc
addr16
cmp
inc
xor
ja
dec
adc
lret
shlb
xchg
mov
lret
jbe
xlat
inc
std
and
test
jle
std
jl
xor
outsl
loop
int
insb
leave
fmull
and
enter
mov
popa
push
jb
mov
lods
vmovhpd
inc
out
or
pusha
in
lock
shr
sbb
cmpsl
sbbb
push
scas
adc
xor
lock
push
shl
xchg
jmp
imul
fwait
sub
add
jge
push
mov
xchg
jecxz
fsubrl
pop
into
mov
mov
push
mov
mov
pop
xchg
push
inc
cmp
stc
mov
dec
addr16
clc
stos
dec
aaa
int3
xor
push
inc
lds
fdivp
sbb
stos
iret
or
std
sub
das
lods
cmp
sub
cmpsl
cmpsl
imul
pop
dec
adc
sub
mov
and
pop
in
scas
inc
cmp
jno
adc
inc
shrl
insl
sbb
sub
dec
test
call
mov
jb
cmp
or
jnp
jnp
ret
mov
sbb
mov
cwtl
stos
xlat
sbb
dec
push
add
in
dec
es
mov
lods
out
mov
stos
outsl
and
fildl
fiadds
aad
cmp
bnd
loope
mov
sub
pop
adc
and
and
jno
mov
xor
mov
or
out
mov
jns
sti
ret
pop
loope
mov
out
out
pop
sbb
rorb
mov
push
sbb
bound
popf
xor
enter
les
pop
fisttpl
int3
mov
mov
pop
xor
dec
clc
or
mov
xor
aad
je
iret
subl
shlb
mov
outsb
mov
scas
leave
mov
or
mov
pop
cmpsb
les
ss
push
fs
cltd
popw
sub
lcall
clc
jl
insl
test
jmp
push
popf
push
mov
daa
jns
push
dec
fimuls
nop
fldenv
popa
mov
fwait
mov
xor
js
and
mov
or
aam
lcall
clc
pop
dec
mov
inc
in
test
mov
imul
sub
or
ret
sub
repz
cltd
sbb
and
push
insl
inc
int
xchg
sbb
or
out
jmp
dec
loope
sbb
lret
lods
nop
cmp
cmp
mov
negb
lock
roll
add
sbb
push
pop
ds
mov
loope
and
xchg
sti
and
rep
das
insb
inc
pop
popa
icebp
loop
add
and
lret
cli
xchg
hlt
xor
cmp
cltd
test
add
les
popa
ljmp
mov
xlat
or
mov
add
and
cmp
jmp
shl
imul
dec
out
mov
and
shlb
inc
loopne
xchg
pop
aad
sbb
sub
push
sbb
js
sarl
aam
out
into
mov
jle
sbb
mov
xchg
jecxz
mov
mov
daa
and
test
rclb
push
push
data16
xlat
xchg
jne
pop
aad
lahf
jp
and
fisttps
xchg
xchg
outsb
dec
cmp
push
pushf
cmp
mov
out
dec
push
cmp
and
xchg
stos
inc
movsb
out
pop
jecxz
enter
pop
lock
lahf
xchg
jge
fsubrp
xor
scas
xor
in
and
xor
and
fiaddl
frstor
pop
jo
dec
fucomi
orb
jb
in
call
jno
mov
xchg
add
rcll
add
jmp
leave
xor
das
outsb
arpl
xchg
insb
lahf
inc
movb
pop
cmc
fldenv
dec
scas
cli
shll
adc
out
aad
sahf
push
aas
gs
jmp
outsl
push
lcall
sahf
xor
push
cmp
into
mov
and
xchg
adc
jmp
pop
ja
mov
fcom
fucomi
jl
jae
add
xor
loop
imul
sbb
mov
mov
mov
push
cld
inc
cld
pusha
ss
jmp
sti
pop
sub
out
inc
xchg
fnsave
jbe
rolb
fdivp
sub
pop
pushf
dec
pusha
lret
roll
xchg
mov
cld
ret
xchg
test
aas
fs
out
in
jle
nop
lods
inc
lock
push
jns
sahf
lret
lret
push
inc
sbb
mov
mov
ds
sarb
out
xor
imul
popa
test
scas
lods
ret
mov
jmp
mov
filds
repnz
or
inc
mov
bound
test
sbb
pop
lds
inc
mov
push
sbb
out
jae
cltd
pop
lods
inc
or
mov
pushf
pop
sbb
jge
insb
inc
jno
sub
cmp
pusha
fistl
mov
and
fdivrl
mov
test
sub
mov
negb
imul
adc
xchg
xor
mov
ret
cmp
mov
mov
sbb
xor
stos
leave
movsb
pop
lret
push
or
cmpsl
mov
popa
adc
lods
and
xchg
fldl
loop
dec
sbb
inc
fcompl
pop
sub
xor
popf
leave
cmpsb
ret
pop
mov
push
mov
push
mov
lock
mov
cmp
jle
test
push
dec
and
lods
outsl
xor
fsubrs
fcomps
xchg
scas
sbb
sbb
imul
shl
pop
stc
push
idivl
and
negb
and
popf
cmp
outsl
movb
fimull
dec
pusha
mov
cmpsb
repz
das
out
mov
mov
mov
sbb
or
dec
ja
stos
aam
mov
sbb
mov
xchg
dec
aad
lret
jb
gs
imul
mov
push
inc
cwtl
adc
sub
outsl
sub
xor
xor
outsl
mov
roll
int
fistpl
fidivrl
stos
xchg
lahf
add
mov
jle
pop
and
jns
jne
sub
jb
in
xchg
call
xchg
div
imul
and
das
mov
leave
stos
loop
fucomp
fs
cltd
test
aad
and
movsl
scas
push
jmp
ret
pop
outsb
lods
cmp
jg
lcall
jo
mov
hlt
jns
lcall
and
mov
cli
test
inc
pop
adc
lea
leave
mov
jl
ret
aam
imul
mov
or
imul
pop
mov
aam
push
jmp
dec
dec
add
cwtl
jae
inc
push
mov
out
cli
pushf
pop
or
ret
aam
addb
cli
movsb
xchg
es
mov
fistl
test
sub
inc
lods
mov
iret
xorb
xor
pop
scas
rcll
mov
cs
jg
addr16
cmpsb
ds
call
inc
test
lds
add
psrld
jne
int3
xlat
mov
mov
repnz
das
aad
adc
cmc
mov
cmp
pop
lock
nop
push
imul
mov
mov
sti
push
lock
mov
add
push
arpl
pop
fldenv
and
sti
mov
std
mov
jmp
popf
add
loope
push
and
xor
xor
mov
mov
xchg
mov
jecxz
iret
clc
and
cwtl
inc
ss
in
pop
adc
lret
xor
int
mov
adc
insb
or
xor
adc
gs
movsb
je
mov
test
or
add
xor
sub
jecxz
jmp
dec
push
pop
mov
and
sbb
fnsave
xor
sub
xchg
les
push
push
cmp
icebp
insb
movsb
sbb
mov
je
adc
stos
outsl
cmp
cmpsb
inc
daa
movsb
adc
mov
lret
xor
std
mov
arpl
lcall
roll
cmp
add
and
xchg
add
sbb
mov
xchg
clc
lahf
inc
mov
push
fwait
xor
cltd
jmp
add
mov
mov
xchg
mov
cmpsb
lea
pushf
repnz
jnp
and
enter
out
push
xor
repnz
jno
call
mov
mov
and
scas
out
enter
jl
adc
or
push
or
imul
push
push
sub
jb
jb
cmp
test
xor
movsb
cmp
mov
mov
je
movb
popf
fwait
xchg
lods
repz
and
iret
movsl
loopne
mov
xor
add
xchg
and
cs
mov
sub
push
loope
add
into
mov
dec
in
push
dec
mov
lret
fs
sbb
cmp
repz
cmp
scas
dec
into
sti
push
jmp
sbb
jle
movsb
jecxz
lahf
push
aad
mov
inc
je
adc
cmpsb
xchg
stos
sub
jl
cmpsl
lea
les
adc
sub
adc
push
xor
push
call
fwait
pshufw
add
sub
xchg
pushf
leave
jb
repnz
push
scas
push
sbb
popa
push
mov
push
push
fadd
cmp
jge
lahf
test
cmpl
xor
and
or
lods
imul
pop
ds
xor
jmp
and
jmp
clc
sbbb
ljmp
adc
cmpsl
add
cltd
xchg
mov
pop
mov
sub
pop
xor
jnp
outsl
sbb
push
andb
pop
clc
cmp
lods
popf
cli
gs
stc
cmp
push
fwait
xor
movsb
lahf
scas
adc
push
jno
test
mov
aas
pop
adc
roll
sub
bound
xchg
cmp
dec
adc
pop
ds
mov
pop
mov
push
call
mov
imul
cmc
mov
xor
test
inc
mov
fnstenv
inc
or
nop
addr16
mov
adc
jecxz
movsl
adc
sub
je
lock
sub
pop
jecxz
adc
clc
lret
xchg
and
adc
out
cmp
dec
adc
int
pop
hlt
iret
es
fwait
push
jnp
pusha
mov
jg
test
loope
xchg
inc
and
test
stc
sbb
ljmp
call
ja
lret
xchg
cmp
jmp
pop
mov
mov
and
addb
mov
mov
sub
pop
fs
push
jb
and
shlb
rorb
imul
imul
sbb
mov
mov
sbb
movsl
mov
sbb
cwtl
sub
xchg
mov
addr16
int3
out
scas
stc
push
push
shrl
jno
mov
mov
jnp
flds
ror
xor
and
mov
loope
enter
dec
pop
aas
leave
inc
mov
rcrb
cmp
lcall
out
rcrl
cmp
sub
fucomip
push
test
outsl
stc
inc
inc
sub
adc
mov
icebp
call
dec
mov
mov
push
xchg
sub
push
arpl
scas
xor
mov
insb
or
cmp
leave
fstpt
loopne
pop
data16
mov
jne
fistps
fisttps
lods
ds
push
xor
xor
sub
sub
pop
stos
lret
inc
test
repnz
xor
pop
fidivl
add
out
iret
dec
int3
push
pop
negb
addl
iret
inc
pop
push
icebp
cmp
inc
fbld
push
in
or
sar
decb
cmpsb
bound
pop
adc
pop
imul
sti
mov
and
push
mov
pop
scas
loopne
xchg
push
pop
jmp
mov
repnz
sarb
xchg
sbb
fsubrs
mov
dec
mov
inc
xor
rcr
lea
mov
sbb
push
inc
movsb
shlb
ffreep
je
fstl
and
sbb
mov
mov
sbb
scas
iret
fs
gs
bound
mov
push
jne
pop
cmpsl
xor
cmovbe
pop
add
and
lods
cmp
bswap
sub
test
in
mov
sbb
leave
sbb
push
mov
loopne
xchg
scas
mov
or
adc
fldcw
lea
cmp
lahf
adc
shl
mov
mov
call
adc
dec
nop
lds
jmp
insb
fistpll
mov
mov
test
xor
call
stos
jne
rolb
scas
pop
out
xchg
repz
or
mov
xor
cmp
lds
test
ja
cs
scas
fldl2t
push
scas
jb
adc
or
arpl
jg
lods
loopne
push
xchg
fmulp
dec
out
stos
jne
add
lods
cmp
inc
jp
and
movsl
mov
test
test
js
jo
inc
xor
fimull
sbb
pop
out
dec
add
insl
andb
mov
xor
sbb
shrb
mov
test
sbb
xor
add
mov
lahf
sbb
mov
push
inc
push
fdivrl
icebp
mov
fs
test
inc
ret
pop
adc
into
jg
adc
repz
and
and
jno
cmp
push
mov
cmpsl
pushf
mov
lock
lods
or
add
xchg
and
sahf
and
test
filds
cs
divb
inc
test
or
xlat
outsb
scas
cmp
dec
dec
add
in
push
inc
inc
scas
xchg
jbe,pt
push
cmp
mov
int
leave
sbb
mov
push
mov
mov
mov
imul
or
sub
mov
adc
jp
xchg
pop
adc
fdivs
add
cld
inc
stos
sub
fldt
insl
loop
pushf
in
fs
loopne
int
mov
mov
test
in
ret
es
mov
loop
lods
shrb
mov
repz
fisttps
and
insl
leave
sub
xchg
inc
sub
dec
ljmp
cltd
js
stos
mov
lret
sub
push
xchg
and
ss
inc
mov
adc
sti
xchg
ret
xor
adcl
and
xchg
mov
push
sbb
sbb
mov
xchg
in
jne
cmp
sbb
sub
push
mov
cmp
mov
lods
fsub
jge
into
jbe
sbb
adc
test
bound
outsl
in
stc
or
cmp
call
xor
ret
aam
or
fstpl
enter
lock
jl
push
and
jnp
out
test
sahf
xor
int
mov
ficoms
push
or
jae
cmpl
scas
call
cs
stos
stos
mov
and
push
imul
out
shrb
and
sbb
dec
xchg
dec
ficoml
popl
mov
adc
jge
xchg
mov
shl
cmc
jmp
aam
addl
subl
movsb
cmpsb
cmp
repz
aas
dec
gs
int3
cwtl
rcr
bound
dec
jecxz
stc
hlt
cmp
fisubrs
mov
mov
adc
sbb
mov
ret
leave
das
out
mov
fcmovb
push
lods
loop
pop
repnz
dec
pushf
push
nop
cmpsb
jns
pop
mov
pusha
test
jb
mov
and
psrad
sub
cmp
dec
jbe
pop
push
jmp
iret
jg
adc
jmp
ljmp
lods
fsubp
imul
pushl
decb
movsb
pop
xchg
out
and
adc
pop
jb
xor
and
popf
push
lock
sbb
xor
mov
dec
dec
dec
or
xchg
pop
adc
hlt
inc
ljmp
loope
mov
imul
daa
pop
int
xor
jmp
push
fisubl
test
repnz
mov
add
or
sahf
sbb
mov
mov
clc
insb
leave
inc
dec
lret
pop
aaa
push
adcb
sbb
aad
push
icebp
and
ss
and
and
or
int
lret
ja
jnp
push
mov
aas
ffree
xchg
sub
inc
jmp
jns
es
imul
dec
xor
jae
shll
aam
mov
jbe
push
das
dec
xchg
sub
outsb
mov
dec
rep
jo
mov
xlat
push
lods
and
icebp
movsl
mov
mov
sti
or
mov
sti
cmc
outsb
xor
out
ds
out
dec
bound
cmp
js
push
push
jp
xor
sbb
jnp
test
lea
fisubrl
push
imull
iret
add
lds
into
lods
jp
ret
pop
fdivl
pop
fnsave
jp
mov
out
dec
loopne
adc
das
dec
sub
cli
jle
mov
pop
roll
push
xchg
arpl
test
push
xchg
cmc
dec
daa
sti
mov
clc
and
data16
xchg
sub
pushf
mov
js
in
cmp
jl
mov
pushf
push
mov
aaa
fs
jae
loopne
mov
shll
xor
pusha
les
hlt
push
mov
vmread
push
pop
sub
int3
adc
or
and
enter
push
aad
and
jno
movsl
push
add
or
jle
pop
scas
mov
scas
lea
push
in
add
sahf
js
mov
xchg
pop
jl
mov
mov
loope
insl
fadds
xchg
adc
fwait
xchg
fsts
sub
test
ret
aam
xcrypt-ofb
cmpsl
insb
orb
aad
sub
dec
pop
pop
mov
cmp
xchg
mov
push
or
mov
imul
or
pop
rcll
cld
push
xor
push
adc
lret
mov
enter
sbb
jae
jmp
mov
cli
pop
loope
push
mov
sub
ret
nop
daa
cmc
sub
pop
iret
sbb
clc
jge
or
xchg
xchg
adc
push
mov
subl
jns
cmp
cmp
popf
cmp
xor
or
loop
push
mov
lock
cmp
jno
insb
jl
shl
fmull
pop
ret
fwait
fwait
xor
mov
icebp
insl
xor
imul
adc
jbe
jns
les
sbb
test
adc
sbbb
adc
test
or
jne
or
mov
das
out
scas
and
scas
popf
lods
jmp
out
les
enter
sahf
xor
inc
imul
test
mov
jb
movsb
adc
idivl
jnp
or
mov
mov
pop
rol
dec
xor
adc
stos
popa
push
cmp
mov
xorb
shl
out
push
mov
and
xchg
inc
inc
jg
xchg
test
loop
dec
xchg
and
jg
add
testb
sahf
sahf
inc
es
adc
bound
or
jns
adc
aam
insl
xchg
mov
inc
pop
outsb
pop
xor
mov
push
cwtl
pop
dec
mov
scas
push
dec
sti
inc
xlat
in
jle
push
movsb
dec
fistpl
mov
cmpsb
out
jecxz
dec
cli
and
xchg
mov
inc
in
mov
addr16
movsl
xchg
pop
movl
addr16
shrl
sub
adc
sbb
test
outsb
imul
decl
jae
popf
or
ror
cs
inc
push
jb
dec
aaa
fs
stc
sbbl
xlat
lahf
stos
inc
mov
add
fidivs
fbld
xchg
clc
daa
dec
nop
or
push
hlt
out
scas
mov
frstor
dec
add
mov
or
jns
add
insb
pop
cld
push
add
lret
fxam
aad
pusha
mov
and
cmp
xor
or
push
pushf
pop
lods
xchg
sarb
or
dec
repnz
or
jmp
mov
mov
in
xchg
pop
std
data16
aad
cmpsb
sbb
ds
xchg
dec
dec
pop
push
mov
jmp
push
add
mov
mov
int
mov
test
and
dec
shr
jae
loop
mov
adc
add
dec
jl
cmpb
mov
lock
pop
mov
adc
sarl
xchg
in
push
js
arpl
push
aad
setle
mov
mov
mov
lds
jbe
mull
sub
outsb
sbb
mov
enter
inc
mov
push
aam
push
xchg
push
clc
push
jne
inc
add
subb
test
or
movsb
adc
ss
orl
jbe
les
xchg
mov
and
xlat
js
ret
push
repnz
into
and
add
mov
ficomps
or
add
shlb
xchg
js
dec
jnp
sti
addb
and
lock
and
shll
fnstcw
fidivs
dec
add
or
sbb
and
push
ds
push
stos
test
cmp
dec
sbb
iret
mov
in
das
push
sar
inc
jecxz
jne
push
and
or
xor
fldenv
cmc
shll
orb
out
jp
or
inc
bound
xchg
dec
inc
mov
adc
push
mov
int
leave
int
adcb
mov
daa
inc
insb
aas
xchg
mov
xchg
dec
fmull
ljmp
jbe
cmpsb
push
mov
push
es
xchg
sub
sti
fwait
jl
call
xchg
mov
mov
mov
popf
aad
popf
push
dec
pop
outsl
mov
mov
insb
gs
jo
cmp
xchg
int3
jnp
arpl
mov
adc
rcll
mov
iret
push
sbb
or
jno
andl
or
pop
jmp
jb
lods
jns
aad
stc
nop
mov
test
xor
jno
lret
addr16
mov
imul
and
pop
jmp
cli
inc
push
dec
ficomps
pop
insb
dec
lcall
and
and
xor
stc
lea
movb
int
loope
call
mov
jns
mov
in
insb
xchg
hlt
mov
lahf
mov
adc
xchg
push
js
std
cmp
sbb
xchg
xchg
std
jle
imul
mov
das
cwtl
pop
push
cltd
add
inc
enter
push
lret
out
pop
cmovl
mov
or
icebp
adc
inc
or
sub
imul
stc
and
mov
fsts
test
or
xchg
dec
push
and
xor
arpl
mov
or
mov
mov
pop
dec
mov
rcrb
stos
fstpl
sahf
stc
rcrb
and
jp
fisubrs
gs
and
mov
or
repz
mov
xchg
add
cmp
cmpb
fadd
clc
test
dec
fstpl
jg
push
ja
je
xor
stos
inc
pop
add
loope
mov
into
scas
cmp
lea
stos
cmc
aam
mulb
dec
pop
pop
enter
mov
push
fdivrs
ficompl
mov
cmp
cmp
js,pt
xchg
das
cwtl
cmpsb
inc
push
mov
xor
xorl
das
push
jmp
sbb
jo
nop
mov
sbb
movsl
hlt
inc
sub
mov
decb
imul
adc
or
inc
sbb
jg
mov
cwtl
and
add
ds
pop
outsl
push
mov
lods
aam
and
jmp
lods
push
int3
and
frstor
jne
pop
xchg
fs
je
mov
bound
rclb
mov
enter
loop
adc
shlb
sub
xor
add
pop
xor
inc
cmc
stc
fsts
or
jle
dec
mov
data16
fisubs
shl
and
lcall
sbb
icebp
pop
dec
jno
cmp
sahf
sarb
cs
daa
push
jmp
xchg
add
cli
movsl
xchg
adcb
insl
clc
xchg
inc
push
sbb
add
mov
and
stc
and
cmp
sahf
mov
xchg
pop
lret
or
rcr
adc
inc
fdivs
xor
cmp
mov
mov
mov
lss
and
add
jns
stos
or
xchg
iret
push
and
push
pop
dec
and
cmpsb
sbb
lds
ficoms
mov
cltd
and
push
ljmp
lock
xchg
cmpl
xor
hlt
pop
adc
mov
outsl
outsl
shl
or
rcl
jge
or
addr16
mov
movsl
dec
bound
addr16
mov
int
scas
add
sub
std
movsb
adc
mov
insb
sbb
pop
push
or
inc
aas
inc
std
xchg
inc
scas
inc
dec
lods
jge
jns
cmp
mov
dec
pop
fwait
stos
xchg
aad
adc
inc
fistl
push
fcomip
addb
inc
inc
das
pop
movsl
sbb
imul
cwtl
lret
lret
je
add
push
cs
or
mov
push
movsb
pop
push
jle
cmp
movsl
movsb
add
xor
ss
jle
inc
lret
mov
jmp
lods
pop
jge
jg
int
xchg
inc
jmp
nop
cmpsl
incb
jno
iret
test
in
ret
push
jae
adc
mov
xchg
inc
jnp
mov
popa
pop
sub
shlb
movsl
sub
or
push
sbbl
lock
pop
fisubrs
mov
pop
sbb
test
test
and
pop
mov
stc
nop
jne
or
sti
pop
test
addl
pop
mull
sub
in
inc
ret
inc
adc
xchg
data16
push
dec
in
jg
neg
or
xchg
iret
data16
addl
pop
mov
stos
cmp
cmpsl
fisubrs
xor
and
cli
mov
push
testb
pushf
xor
lock
addr16
movl
imul
jno
pop
push
fwait
jle
mov
ljmp
jno
popf
fisttps
sti
fadd
cmpl
mov
insb
shrb
or
mov
cmp
xchg
sbb
xchg
sub
ret
adc
jle
mov
sbb
hlt
pop
fldenv
jae
hlt
adc
data16
sbb
js
js
addr16
mov
jne
imulb
push
xchg
sbb
in
in
mov
loopne
jge
push
decb
or
dec
adc
outsb
clc
sub
mov
cli
testb
mov
xchg
int
jge
xor
aam
mov
jo
add
cmpsb
xchg
ljmp
repz
lahf
jmp
pop
jle
cmp
and
pop
mov
stc
cmc
xchg
and
repz
inc
data16
rcrl
cmp
fisubl
or
gs
cmpsl
xor
pop
mov
jp
xlat
movsb
cld
or
fdivr
sub
push
mov
test
mov
jmp
and
negl
add
xchg
add
adc
clc
adc
cld
or
jno
test
cmp
cmp
push
test
mov
les
insb
int
adc
call
lahf
mov
clc
std
out
iret
jecxz
js
outsb
inc
push
or
mov
mov
cmc
inc
popf
fadds
pop
inc
xchg
aas
xchg
xchg
xchg
fnstenv
inc
adc
das
mov
imulb
jnp
rol
call
loope
into
pusha
je
jbe
lahf
jb
ffreep
and
ret
adc
pop
leave
cwtl
add
fidivs
or
jae
and
jo
adc
xlat
insl
xchg
pop
cmc
push
and
and
out
and
cld
inc
subl
shll
cmpsb
push
cs
imul
insb
xlat
or
adc
dec
in
test
xchg
es
sub
aas
cmp
jp
lret
leave
leave
pop
out
outsl
addr16
ret
pop
cmp
xchg
cmpsl
pop
cmpsl
dec
pop
dec
out
push
mulb
cld
xchg
ret
outsl
cmp
cmp
in
lock
jl
xor
sbb
lea
nop
cmc
dec
in
dec
dec
xor
aad
sub
and
mov
xchg
dec
ja
cmp
pusha
out
ror
lret
pop
adc
xlat
std
mov
lahf
cmp
or
xchg
cld
ja
xor
in
pusha
push
fistl
ja
pop
shlb
sub
and
cld
repnz
outsb
push
in
jbe
mov
sub
ret
dec
arpl
je
mov
stos
mov
shl
push
mov
push
lret
xchg
cld
xchg
loop
inc
call
scas
aaa
lret
inc
mov
jb
aaa
lret
shrl
xor
and
mov
jae
push
popf
sbb
pop
je
cld
and
sub
and
pop
push
outsb
jmp
gs
out
aad
xchg
pop
test
stos
and
ret
loopne
insb
scas
fstps
jp
div
and
sub
ja
int3
cs
sbbl
and
push
mov
cli
mov
daa
mov
dec
xchg
inc
inc
mov
adcb
mov
popa
pop
pop
daa
add
dec
repnz
pop
push
dec
mov
add
inc
mov
inc
pop
in
xor
jp
jmp
leave
aam
bnd
cmpsb
adc
pop
dec
hlt
xchg
sub
xchg
ljmp
repnz
cs
add
mov
jmp
dec
add
inc
das
out
scas
xor
mov
movsb
cmp
repnz
lods
ret
mov
cmp
mov
jl
xor
adc
jne
xchg
sub
mov
cmp
xchg
xchg
fidivrl
sbb
xchg
mov
das
jne
call
mov
bswap
into
mov
inc
pop
mov
shrb
shl
js
push
daa
mov
xchg
cmp
cwtl
leave
xchg
out
js
mov
adc
cmpsl
inc
leave
fdivl
pusha
lods
cmp
push
sbb
xchg
cmp
cmp
mov
mov
dec
loopne
jl
jecxz
sahf
cwtl
outsb
adc
mov
aad
pop
pop
popf
imul
cli
dec
in
push
pop
push
bound
jle
cs
dec
in
mov
xor
mov
daa
jo
out
inc
lds
icebp
imul
popf
adc
js
or
xor
cmp
mov
dec
xchg
in
mov
sub
in
add
or
scas
cmc
sbbb
hlt
pop
in
loope
loope
dec
pop
icebp
mov
lcall
mov
cmpsb
mov
aam
lock
mov
loope
aas
adc
and
in
dec
xor
jne
in
mov
mov
mov
adc
xor
pop
add
ss
mov
sub
mov
fstpt
lods
xchg
sti
pop
mov
int
lcall
test
push
push
xor
scas
gs
cmp
bound
pop
adc
movsl
inc
mov
xor
lods
push
xchg
sub
push
scas
mov
or
lds
jnp
mov
jns
mov
cmp
add
fwait
sbb
inc
adc
sub
lock
ret
xor
lahf
mov
je
and
pusha
push
mov
pop
xlat
add
ret
dec
adc
xor
jecxz
sub
pop
xor
les
lahf
mov
mov
xchg
sbb
mov
jp
in
push
cs
cmp
dec
lea
lahf
stos
fdivrp
jle
mov
xchg
add
fsts
pop
mov
hlt
mov
dec
movsb
das
cmp
cld
jle
add
jo
push
mov
and
adc
cmc
cmp
movsb
les
out
xor
jecxz
pop
pop
mov
mov
xchg
pop
aad
pop
outsl
cmp
inc
mov
dec
leave
fs
test
pop
loop
pusha
mov
gs
pop
fstl
in
stc
ret
or
cmp
mov
fists
cmp
int
sub
cmpsl
addr16
adc
dec
pop
cmp
loop
xchg
xchg
cmp
or
mov
cmpsb
add
iret
popa
gs
cltd
stos
push
jbe
xor
out
ja
pop
mov
shrb
ljmp
sub
sti
dec
pop
dec
hlt
push
jnp
or
insl
adc
jle
popa
out
xchg
in
ss
and
inc
sub
sbb
sub
mov
fcoml
sub
mov
push
inc
sub
pop
outsb
inc
mov
sbb
test
cs
mov
xchg
mov
test
shlb
mov
dec
mov
cmpsl
sbb
outsl
mov
in
xchg
fisubs
in
or
jne
idiv
mov
adc
and
movsl
mov
jbe
dec
pushf
test
add
inc
ret
cwtl
push
xchg
adc
lcall
cmpb
cmpl
lods
movsb
shlb
mov
sbb
sbb
jne
cld
sbb
mov
pop
xor
dec
add
push
inc
gs
push
imul
fs
inc
mov
mov
ljmp
sti
dec
insb
out
fwait
mov
arpl
in
inc
movsl
xchg
sub
scas
jp
hlt
lock
ror
add
push
cmpsb
pop
stos
push
pop
adc
lods
xor
push
mov
pusha
and
bound
or
or
data16
fstps
inc
mov
cmp
mov
into
and
shll
cld
or
jle
fistps
add
cmp
cmp
jg
js
or
lea
cld
or
pop
outsb
pop
outsb
mov
andl
in
inc
sbb
aad
mov
pop
jl
dec
fwait
movsb
popf
loope
cmpsb
flds
or
sub
add
je
mov
sub
js
dec
mov
or
imul
push
add
ss
pop
fs
ret
js
aas
push
sahf
cltd
cld
mov
mov
mov
xchg
arpl
in
aad
insl
pop
aad
jne
pop
jbe
mov
arpl
lahf
mov
xchg
pop
mov
sahf
les
fwait
cmp
adc
jb
test
xchg
mov
add
sub
mov
stc
xor
insb
adc
cltd
gs
jmp
cwtl
add
lods
push
pop
ss
shl
xchg
jns
test
xchg
xchg
mov
aad
cmp
ljmp
daa
mov
dec
ja
nop
test
jl
cmpsl
push
adc
sub
pushf
dec
mov
in
nop
rol
push
add
ret
add
mov
sub
cmp
jbe
rclb
and
pusha
faddl
fmulp
loopne
notl
and
mov
jecxz
cwtl
hlt
inc
dec
add
rcrl
add
dec
cmp
mov
xchg
inc
jl
cld
xor
xchg
scas
outsl
and
xchg
insb
imul
sbbb
cmp
push
push
xchg
jge
pop
scas
clc
notb
loop
nop
mov
call
imul
or
sub
mov
xor
fnsave
xor
bound
push
or
out
arpl
popl
add
mov
out
rcr
jmp
test
mov
mov
and
jbe
xor
and
clc
inc
lods
cmp
fadds
dec
or
scas
inc
iret
shll
ficomps
movsl
cmp
insb
hlt
pop
push
lret
idivb
fnstenv
sbb
insl
dec
orb
stos
sub
lods
jo
call
shlb
in
cli
mov
xor
xchg
xor
fwait
push
push
cmpsb
ret
dec
pop
popa
lea
add
sub
mov
jb
jge
cmpsb
sbb
leave
insl
add
adc
testl
dec
xor
xchg
cmc
xor
popf
bnd
hlt
fidivrl
or
inc
cmpsl
jp
xchg
xchg
ljmp
es
fiaddl
push
sti
inc
fsubrl
cli
dec
jmp
arpl
cmpsb
enter
cmp
clc
sbb
mov
nop
pushf
insb
add
adc
push
mov
sub
mov
pop
clc
jns
popf
repnz
in
mov
inc
cmpsb
xchg
mov
mov
add
and
loopne
insb
scas
nop
lds
int
xchg
or
aad
ret
jp
stc
stos
jl
lcall
cli
test
xor
xchg
pop
sub
les
inc
xchg
aad
insl
out
ret
mov
cli
pop
mov
xor
jns
mov
fnstcw
add
pop
pop
pop
jns
or
cli
adc
xlat
xchg
adc
fcoms
andb
aad
incl
push
lods
add
push
or
sbb
and
mov
and
aas
out
orl
push
std
in
sbb
and
xor
push
cmp
mov
rorl
mov
test
xchg
ss
push
pop
or
pop
fwait
pushf
pusha
adc
inc
ss
xsaveopt
adc
mov
mov
or
push
inc
push
adc
xor
addr16
fs
jbe
push
mov
je
scas
xor
fadd
xor
adc
push
push
push
push
dec
xchg
add
jb
xchg
arpl
or
sti
aam
imul
daa
cmp
subl
test
or
test
xchg
aam
scas
sbb
and
adc
sbb
gs
push
dec
jbe
out
insl
in
jp
jg
test
push
or
or
stos
es
mov
arpl
or
adc
push
cmpsl
or
cli
push
mov
ja
lret
jns
mov
xchg
sbb
stc
push
imul
ss
bound
pop
cmpsb
xchg
inc
scas
cmp
push
xchg
and
mov
lahf
mov
rorb
xor
push
rcll
cmp
in
pop
mull
testl
and
adc
outsl
test
jge
and
xchg
xchg
mov
mov
jp
lret
iret
push
xor
addr16
sbb
subb
add
mov
adcl
adc
and
in
cli
jl
adc
das
mov
lret
inc
inc
test
loopne
icebp
pushf
in
adc
inc
sub
scas
inc
cmp
imul
xchg
jne
addr16
lea
mulb
pop
pop
jecxz
rcrl
call
divl
outsb
push
jp
mov
add
pop
not
add
dec
out
movsb
mov
xor
jl
xor
arpl
sbb
inc
data16
loope
xor
subb
mov
addr16
inc
cld
shll
jb
push
cmpsl
aad
cwtl
push
insl
fcompl
sbb
ret
int3
lcall
mov
inc
pop
add
fstpt
sub
push
int
add
xor
fs
loopne
and
popf
mov
mov
fnstenv
cmp
lret
mov
sarl
bound
sub
cli
jge
movsl
in
mov
jnp
test
iret
mov
arpl
sub
xchg
nop
addr16
or
out
and
cs
and
int
xor
scas
cmp
sti
mov
xor
xor
test
ds
lods
mov
push
int
out
out
movsl
mov
mov
push
cld
pop
sub
ret
mov
out
aaa
mov
sub
push
or
xchg
mov
rorl
mov
and
imul
inc
lods
pop
inc
mov
pop
xchg
inc
mov
add
jbe
jp
in
jne
lret
loope
sub
xchg
sbb
ret
add
stos
mov
clc
nop
add
cwtl
and
sub
dec
loope
jge
das
mov
repnz
repnz
push
push
clc
sbb
cmc
inc
scas
shl
jmp
cmp
sahf
hlt
inc
inc
cmp
xlat
ret
fidivrs
insl
push
push
push
jg
test
jo
cmc
jp
pop
inc
sub
push
xor
inc
dec
arpl
mov
mov
pop
wbinvd
jp
adc
shl
mov
pop
inc
sarb
lea
sbb
test
mov
cmpsb
cmp
add
les
mov
hlt
cltd
sub
bnd
outsl
cs
xlat
js
cmp
addr16
cmp
rol
mov
pop
add
or
jnp
or
js
test
fldcw
cmpsb
stos
enter
mov
push
imul
fsubrs
or
fwait
mov
arpl
dec
outsl
cli
and
and
dec
in
adc
call
pop
imul
js
imul
decl
nop
mov
cmp
addr16
lret
jno
in
or
xchg
stos
imull
sub
lods
cmp
scas
mov
xchg
out
inc
es
or
inc
stc
pop
repnz
movsb
mov
pop
sub
out
cmp
es
add
mov
rcrb
jg
xchg
lea
fsubs
test
jmp
hlt
js
or
adc
pop
xor
outsb
mov
jl
aas
xchg
push
xor
mov
adc
adc
loope
out
out
lea
mov
and
xor
push
jb
cmpsl
push
cltd
lock
ror
and
imul
jp
mov
xchg
test
add
add
call
outsb
jp
pop
jno
scas
lds
mov
js
aad
jae
shll
jmp
testl
sbb
add
pop
mov
cmp
xor
repz
rcrl
add
pop
push
insl
addr16
xchg
push
or
loope
nop
mov
mov
movsb
xorb
in
jo
pop
cmp
push
push
data16
dec
dec
lahf
sahf
clc
dec
mov
lock
mov
and
jnp
and
mov
mov
shrb
ss
out
or
in
add
xchg
inc
push
das
xor
inc
idiv
in
add
cmc
repz
loopne
mov
sbb
out
jmp
fisubrl
cmp
jo
add
push
sbb
lods
mov
pop
mov
mov
mov
pop
imul
out
lods
lds
test
push
mov
and
fidivrl
cld
ds
inc
data16
mov
cmp
mov
add
outsl
lds
add
adc
adc
sub
xchg
sbb
in
les
shl
cli
test
or
mov
in
jns
push
ljmp
sub
cmc
cwtl
mov
mov
stos
sbb
sub
shr
mov
lcall
jo
nop
push
xor
mov
sbb
leave
lret
fst
mov
frstor
mov
lret
add
mov
insb
adcl
mov
or
stos
or
fisttpl
js
jns
mov
dec
ds
clc
dec
arpl
imul
movsb
leave
jne
in
into
mov
dec
jecxz
xor
pushf
call
push
mov
or
adc
pop
sub
pop
jns
xchg
mov
mov
and
cmpl
mov
sub
xor
popa
add
inc
xlat
shll
jge
inc
and
ja
fists
mov
xor
mov
dec
mov
aam
mov
repnz
mov
cli
pop
push
adc
mov
ret
and
sbb
popa
andl
xor
pop
es
or
ds
sbb
mov
push
add
popa
jecxz
js
lcall
mov
fs
sub
mov
sbb
fldenv
jae
sti
xchg
mov
or
pushf
daa
sahf
xorl
addr16
insb
sbb
aas
outsl
andb
stc
and
loop
sar
cwtl
xor
xchg
xor
lock
jmp
pusha
sahf
js
inc
test
hlt
mov
std
cmpsb
mov
mov
pop
jae
cmpsb
mov
push
or
cltd
cmp
jp
dec
jecxz
add
xchg
mov
imul
insl
xchg
sbb
les
out
movsl
cmp
pop
mov
fsubp
cmp
sbb
add
cmp
js
mov
popa
and
jbe
pop
test
bound
mov
jnp
xlat
lods
fwait
aad
dec
pop
cmc
jns
fidivrs
mov
rol
pop
lea
mov
popf
inc
xchg
jo
ljmp
xor
and
adcb
mov
and
push
xchg
dec
fstenv
xchg
add
bound
andl
nop
je
out
jmp
and
mov
mov
or
int
pop
push
pop
lret
push
roll
dec
cmp
insb
inc
stc
nop
cmc
imul
fs
jns
or
dec
addr16
xchg
cmpsl
movsl
mov
insb
mov
pusha
rep
push
push
mov
cmp
pop
adc
adcb
rol
xor
and
out
adc
mov
shl
bound
jecxz
adc
inc
gs
leave
pop
push
mov
pop
adc
int
lods
pusha
mov
pop
call
cmp
js
daa
hlt
jae
inc
push
aad
bound
dec
loope
adc
mull
mov
cld
pop
pop
pop
sub
out
hlt
mov
cwtl
dec
and
jle
lock
jg
jmp
mov
sub
and
fisubrl
addr16
lahf
arpl
mov
imul
in
dec
lret
or
or
in
test
push
xchg
cmp
adc
icebp
pop
mov
orb
xchg
jns
js
push
and
dec
mov
aad
sub
xor
lds
divl
add
xor
les
add
pushl
mov
mov
adc
push
mov
in
outsl
xchg
pop
jge
xor
lds
lret
dec
push
add
mov
cmp
insl
imul
sub
pop
add
mov
test
pop
out
sub
pop
lds
jg
in
in
sbb
out
jo
xchg
fbld
clc
xchg
fldl
push
movsl
push
mov
mov
pop
call
push
jmp
mov
adc
aas
xchg
hlt
cmp
fs
popf
test
mov
ret
push
rclb
mov
or
xchg
xchg
jp
dec
mov
sub
jae
jmp
cli
and
mov
mov
mov
in
xchg
lods
sbb
aas
xlat
push
dec
jo
xor
jno
add
or
mov
mov
mov
cmpsb
cwtl
pop
mov
inc
fwait
inc
outsb
mov
pop
pop
sub
jg
cltd
cmpsb
sbb
and
xchg
or
aad
jno
or
dec
in
sub
hlt
cmp
aaa
repnz
lods
aaa
sub
mov
decb
mov
rclb
pop
out
and
or
pop
bound
xor
enter
fucomi
test
dec
and
xchg
jnp
cmp
ss
inc
addl
xchg
push
mov
jb
or
fildl
xchg
mov
int3
imul
rcr
flds
rcrl
insl
lock
mov
in
iret
das
push
nop
popl
lods
leave
dec
repnz
adcb
xchg
adc
inc
mov
rcll
cli
push
icebp
xchg
roll
mov
pushf
mov
ror
xchg
add
shrl
add
nop
outsb
pop
mov
add
mov
sub
lea
mov
call
dec
dec
cli
mov
clc
sub
push
push
pop
lcall
push
xor
adcb
mov
fstp
int
roll
lret
adc
and
sbbl
mov
test
xlat
or
pop
jb
scas
fiadds
dec
and
test
addl
jb
ss
lret
push
lea
cmp
cld
mov
stc
add
mov
push
cmp
push
in
lret
lods
push
cmc
inc
test
incl
mov
push
cld
push
cli
test
or
daa
mov
and
inc
fdivl
addr16
xlat
mov
push
or
insl
imull
adc
sub
adc
sti
or
dec
mov
int
ljmp
mov
lahf
lret
outsb
cmpsb
cmp
cmpb
rclb
sbb
movb
in
mov
xchg
adcl
mov
int
addr16
enter
push
mov
xorl
push
subb
xchg
pop
inc
fcomp
and
xor
outsl
push
sti
dec
mov
jb
and
push
ss
push
lds
imul
andl
xor
lds
inc
cmp
xor
lahf
sub
xor
push
stc
icebp
ds
mov
push
adc
mov
sbb
add
cmpb
pop
sbb
xlat
pop
add
mov
dec
cmp
iret
fstpl
lret
mov
out
sub
xchg
mov
out
sahf
cmp
sti
pop
or
lds
loope
mov
daa
in
add
sub
jb
jbe
lcall
lock
fidivl
adc
push
cmp
ds
xchg
mov
std
add
addr16
pop
dec
jle
out
push
or
add
daa
out
adc
sbb
roll
pop
and
rcl
adc
pop
dec
inc
sbb
mov
dec
out
xlat
sbb
mov
stc
or
push
dec
dec
xchg
js
loope,pt
push
adc
fldenv
and
xchg
xchg
sub
sub
lds
and
mov
xchg
imul
sti
dec
dec
movsb
js
imul
mov
pop
inc
xor
push
push
add
imul
test
fwait
lock
das
adc
mov
xlat
mov
pop
bswap
xchg
in
lds
push
in
lods
adcl
or
sbb
bnd
and
outsl
jnp
jb
lahf
jb
rcrl
mov
insb
sti
stos
ret
mov
pop
jecxz
sub
jbe
movsb
sti
stc
xchg
inc
popa
loope
inc
xor
lret
jae
lret
pop
mov
pop
imul
loopne
fs
mov
mov
lds
clc
mov
and
outsl
or
out
or
inc
iret
es
cwtl
stos
mov
dec
in
mov
pop
andl
mov
inc
jmp
outsl
leave
mov
insb
and
ljmp
fs
ffreep
mov
mov
sbb
lea
jle
jl
lcall
push
mov
mov
inc
push
ljmp
cmc
mov
fstp
and
mov
pop
loop
dec
pop
xchg
add
xchg
test
lods
dec
ficompl
or
loopne
je
pop
pop
push
xor
cmpsl
and
or
xchg
dec
loope
adc
inc
jecxz
mov
subb
fwait
lcall
cmp
shlb
jae
insb
add
in
xchg
dec
lret
pop
dec
lret
fisubl
je
mov
loop
mov
jne
inc
fidivl
pop
movsl
fists
mov
hlt
pop
jne
cmp
pop
or
push
je
outsb
out
imulb
nop
aad
mov
popf
mov
adc
cmp
inc
mov
xchg
rcrb
cmp
adc
mov
sub
cmp
sub
and
push
mov
xchg
push
daa
addr16
xor
in
adc
mov
test
movsb
ss
aas
dec
fs
xchg
mov
mov
mov
outsw
cmc
int3
pop
lret
std
shlb
pop
lahf
dec
pop
cld
sub
enter
add
inc
enter
repz
shl
pop
mov
ds
rcl
insl
lods
sbb
and
mov
pop
push
mov
mov
mov
mov
jmp
cmp
mov
dec
sub
xor
shll
sub
mov
test
imul
in
mov
sub
mov
call
jg
xor
rcl
cli
xchg
dec
je
xor
cmpsb
mov
push
jle
bound
mov
cmp
pop
mov
sbb
push
lcall
jle,pn
mov
mov
or
add
ror
test
mov
lahf
jecxz
test
cli
dec
mov
sarl
or
call
mov
call
repnz
cmc
aam
shl
push
sbb
push
dec
pop
ss
mov
stos
sarl
decl
fwait
sub
push
ljmp
lock
and
pop
dec
mov
push
leave
cmp
mov
and
icebp
dec
arpl
add
cmp
mov
push
ljmp
ret
lcall
ret
or
dec
inc
pop
cmp
icebp
or
nop
and
and
jmp
mov
xor
sti
cmp
cmp
adc
fidivrl
adc
ljmp
fidivs
rolb
testb
shrl
es
ja
pop
test
ja
lret
test
in
loopne
or
xor
mov
fstl
fld
jns
getsec
sbb
arpl
jle
xchg
inc
sbb
mov
lcall
mov
mov
pop
imul
aam
sysret
and
xor
arpl
punpckhdq
je
pushf
movsb
sub
mov
xchg
jecxz
imul
cmp
idivb
arpl
cmc
sahf
xor
pop
mov
push
inc
rcrb
inc
add
fidivrl
and
loop
jp
sbb
imul
cmp
sub
fsts
fistpll
jmp
imul
in
push
sub
mov
int3
test
xor
sti
ret
adc
insb
add
inc
cmp
sub
vphaddwq
cmpsb
jns
into
leave
push
arpl
in
mov
mov
dec
and
inc
in
and
sti
lock
das
in
dec
and
push
or
add
sti
ds
loopne
fwait
pop
dec
shlb
insl
mov
push
clc
and
sbb
lcall
dec
movzbl
add
xor
sub
loop
cwtl
cs
test
xchg
jge
add
push
and
jg
fs
clc
adc
mov
push
mov
xor
stos
fcomp
jecxz
aas
loopne
pop
cmp
aam
dec
and
mov
cmp
sub
mov
mov
mov
loopne
pushf
adc
cmpsb
inc
in
or
movsb
cwtl
daa
outsl
lret
sub
outsl
out
jo
mov
xor
mov
lods
fidivrl
mov
int
test
or
adc
or
pop
lret
ss
repz
xchg
cwtl
sub
mov
pop
sbb
test
and
adc
dec
icebp
insb
cmp
rcll
fdivr
sbb
rclb
jne
ljmp
hlt
pop
mov
cltd
xchg
ja
sub
popf
icebp
cmpb
pop
mov
in
fmull
jo
jb
loop
nop
add
push
fld1
adc
clc
inc
enter
inc
fdivrp
push
ss
jle
movsl
scas
fisubrs
cld
js
fwait
xor
fistl
mov
cmp
ja
mov
inc
xchg
into
mov
or
adc
insb
adc
push
out
sbb
inc
dec
cmp
arpl
or
xor
push
fbld
push
and
scas
aad
mov
das
divl
setns
sbb
xor
cmp
and
xlat
sbb
int
add
jp
push
cmpsb
in
repz
int3
test
loopne
aas
out
aas
test
incb
mov
sbb
les
in
js
std
jg
mov
add
rcrb
cld
push
mov
pop
fwait
mov
movsl
icebp
imul
and
inc
ret
in
jg
pop
cltd
lea
or
insb
sub
cli
and
rorb
popf
mov
xorl
mov
ficomps
jl
pushf
movsb
xor
jb
mov
and
cltd
or
xorl
mov
mov
cmp
xor
inc
mov
dec
pop
aad
cmp
or
daa
mov
fstpt
test
xor
inc
fisubrs
in
pop
pop
dec
je
or
jecxz
shrl
and
sahf
jmp
fwait
sub
xchg
and
jge
call
sbb
fdivrs
int
shrb
ja
fs
out
nop
xchg
sbb
sar
sub
xchg
dec
sbb
cmp
shll
frstor
dec
cmc
and
daa
mov
mov
sbb
inc
lahf
xchg
xchg
push
scas
mov
stc
imul
push
xor
fwait
testb
push
pop
sahf
lods
mov
lock
and
push
sbb
arpl
imul
mov
nop
addr16
or
shl
mov
mov
outsl
push
lahf
push
add
pop
repz
fmull
dec
cmp
mov
ja
fcmovne
fdivrs
fstpl
mov
mov
sbb
pop
dec
pop
daa
xchg
or
outsb
rolb
jae
jns
jnp
jne
add
cmp
add
sbb
cltd
xor
pop
insl
xchg
cmpsl
imul
cmc
lock
movsb
jb
jge
data16
sahf
or
lret
inc
inc
loopne
in
insb
xchg
mov
mov
add
outsb
cmp
arpl
sbb
jb
std
stos
mov
mov
push
push
mov
adc
pop
aas
dec
outsl
xlat
fwait
pop
stc
insb
test
stos
mov
mov
icebp
push
cmpb
mov
ret
sub
mov
popa
int
int3
int3
jo
fidivrl
rorl
test
lcall
imul
lods
xor
adc
push
jno
sbbl
cltd
js
mov
adc
mov
xor
pop
mov
cwtl
out
xchg
out
add
xchg
out
out
mov
mov
subl
sbb
or
xorb
mov
adc
lea
mov
xchg
scas
mov
jne
xor
cmpb
lcall
adc
fimuls
sub
inc
cmp
inc
in
or
jmp
mov
push
inc
and
fs
add
sbb
cmp
dec
mov
jmp
cmp
mov
xchg
sub
jbe
adc
aad
add
leave
cmc
sub
adc
fsubrp
pop
pop
push
lea
mov
mov
cli
mov
imul
or
push
loopne
int
pop
frstor
cmp
xor
adc
cli
jmp
test
int
inc
xlat
xchg
cltd
fdivrl
addr16
jne
stc
pop
mov
sbb
daa
insl
pop
cmp
loop
hlt
cmp
testl
sbb
aam
jno
or
stos
mov
xchg
sub
xchg
xor
sahf
xchg
cwtl
sbb
xor
jge
sub
xor
push
sahf
adcb
xchg
daa
or
add
add
mov
lds
cmp
pop
mov
inc
jb
push
out
rclb
push
xchg
mov
das
fidivs
imul
xor
xor
cli
xchg
or
sbb
shll
addl
dec
xchg
xor
adc
mov
xchg
jg
xchg
sub
jns
sbb
int
call
jp
mov
cmpsl
call
data16
test
gs
jae
pop
cmpsl
scas
aas
push
aam
mov
push
stos
or
inc
out
jns
push
inc
sahf
inc
scas
add
in
js
test
adcl
hlt
test
insb
nop
push
lds
mov
mov
sub
xor
lea
outsb
sbb
inc
daa
lret
out
jae
mov
xlat
clc
sbb
loope
lods
cli
xchg
jns
sub
sub
aas
outsb
das
popf
pop
hlt
into
pop
lret
sub
popf
pop
push
imul
sahf
idiv
xchg
adc
rcrl
pop
jne
fwait
cmpsb
pop
cli
mov
movsl
inc
aad
clc
push
ds
jmp
incb
inc
mull
pop
sahf
jns
mov
clc
ficoml
push
sub
test
xchg
incl
test
xchg
cs
adc
cmovbe
aad
lret
or
mulb
call
mov
push
dec
push
jne
int3
lock
or
iret
in
mov
fidivs
enter
les
ret
jmp
inc
test
sub
ret
fbld
mov
sbb
aam
mov
loopne
sbbl
in
and
call
push
pop
icebp
jg
push
sub
pop
out
add
mov
mov
and
sub
iret
iret
mov
fcoml
cli
pop
outsb
or
stos
addl
out
mov
sbb
add
jns
ds
pop
mov
push
dec
dec
push
mov
mov
dec
sbb
mov
lock
repnz
cmp
mov
pushf
jae
adc
aad
and
mov
cmp
xchg
add
jecxz
loop
xchg
clc
push
fisttps
sub
sub
inc
lcall
test
xchg
dec
sub
fistps
mov
cs
popa
repnz
iret
stos
outsb
movdqu
fiaddl
push
jb
adc
lods
push
int3
xlat
out
sub
sub
sarb
sbb
sub
stc
or
xchg
pop
imul
addr16
mov
mov
clc
inc
cmp
inc
mov
pop
imul
out
rep
jmp
add
daa
lods
movsb
pop
sbb
and
ret
adc
aam
sbb
mov
mov
insl
add
jp
mov
push
xor
scas
add
pushl
jecxz
add
fdiv
dec
mov
aas
nop
call
fwait
cmp
movsb
jecxz
in
mov
test
mov
loop
mov
add
sbb
in
cmp
cmp
adc
lods
es
sbb
rol
lods
pop
jge
enter
add
or
outsb
loope
adc
push
mov
dec
and
bound
and
popf
imul
fsubl
movsb
pop
cmpb
jge
and
or
inc
sbb
out
or
lret
mov
lods
inc
pop
test
add
adc
rcrl
mov
in
test
loope
fdivrp
lret
and
xchg
in
inc
pushf
outsl
mov
adc
jb
pop
or
cmp
test
adc
pop
cwtl
scas
cmp
cmpsb
cmp
jnp
sbb
xchg
test
pop
lods
pop
push
xor
outsb
xchg
cmp
pop
push
shlb
rorl
iret
mov
subb
shl
xchg
cmpps
fistps
movsl
rorb
int3
ja
fnstcw
mov
mov
inc
or
int3
fidivs
adc
sbb
fwait
push
pop
leave
subb
out
xor
fsubl
mov
inc
or
lods
movsl
xchg
notl
dec
dec
repz
add
jle
aad
loopne
mov
sbb
ds
fmuls
rcll
mov
xor
inc
ret
aad
jbe
cmp
mov
mov
mov
leave
aad
dec
pusha
adc
jb
cmp
mov
enter
in
pop
cmp
sub
rcll
adc
mov
xchg
out
movsl
stos
mov
fstpt
aad
sub
cmp
dec
mov
mov
sarb
sbb
ja
aaa
std
lret
adc
jno
push
mov
popa
inc
movsl
pop
sahf
aaa
leave
les
repz
popf
frstor
sub
repz
mov
call
pop
mov
xchg
jle
loop
test
dec
push
test
or
in
cwtl
pop
in
push
push
stos
inc
mov
xor
filds
int3
mov
push
mov
push
lods
jno
mov
pop
mov
xchg
push
mov
push
daa
outsl
lods
mov
inc
xor
and
cltd
cmp
cmp
mov
push
stos
cltd
sbb
int3
fwait
mov
push
mov
xlat
and
mov
inc
xlat
pop
aad
scas
pop
shrb
push
or
dec
mov
or
and
ljmp
insl
jg
fsubrs
push
xchg
inc
inc
adc
subl
test
sub
sbb
push
js
into
push
outsb
pop
inc
or
xchg
inc
arpl
lcall
xlat
add
fidivl
cmp
xchg
clc
mov
jmp
mov
cmpb
out
mov
movl
loope
xlat
and
add
jl
fmull
rcll
mov
cmp
pusha
mov
pop
ret
fdivrs
push
sub
mov
in
cmp
pop
ficoms
xor
cs
mov
jmp
shrl
jne
movsb
xor
jbe
push
adc
mov
jbe
sahf
mov
dec
push
fwait
dec
and
xor
jnp
inc
pop
mov
and
jp
repz
xlat
insl
xchg
push
xchg
lcall
int
mov
mov
jo
sub
aam
shl
pop
rorl
inc
or
lcall
or
mov
mov
inc
sub
cltd
jb
xchg
xor
sbbl
sbb
loope
or
xchg
jl
cld
cli
adc
test
pop
lock
je
mov
decl
mov
mov
sbb
xchg
sahf
mov
mov
filds
dec
repnz
int3
stc
pop
jmp
leave
jno
pop
sub
into
les
call
inc
ret
and
cmc
data16
push
inc
push
jno
movsl
xor
cmpb
jns
js
push
enter
xchg
hlt
clc
cmp
insb
cmovbe
or
xchg
push
jmp
std
insb
jle
mov
das
push
inc
loope
dec
sub
cmc
sbb
mov
outsb
call
ret
fists
aad
xor
dec
mov
addr16
shr
xchg
lods
xor
fidivs
shrl
jmp
mov
xor
movsb
roll
aam
mov
add
daa
xor
out
push
sub
push
adc
cwtl
gs
loope
cmp
daa
ljmp
pop
lock
cmp
jg
cld
push
movsb
cwtl
jmp
in
xor
add
lods
fnstenv
and
insb
movb
jb
scas
push
imul
test
jl
inc
scas
mov
das
and
mov
bound
and
jne
dec
dec
and
inc
sbb
dec
pop
cltd
cmp
pop
loop
repnz
and
adc
addr16
pop
insb
push
jmp
adc
nop
cwtl
jle
jo
or
imul
loope
jge
es
mov
mov
ss
or
push
jg
in
popf
fidivrl
xchg
mov
test
loopne
inc
pop
outsb
mov
addb
xchg
push
push
dec
rcrl
jns
cmpsb
and
or
jge
pop
insb
stos
outsl
cli
lods
sbb
mov
icebp
adc
sub
mov
cli
jne
mov
lods
hlt
mov
xchg
sub
fidivl
push
add
cld
outsl
js
pop
cmp
sub
or
test
dec
in
scas
and
lds
into
or
iret
inc
dec
dec
lock
mov
lret
mov
outsb
test
mov
jns
push
cli
fcomi
mov
shrb
jg
das
mov
cmp
js
dec
popf
arpl
call
push
lock
adc
pop
hlt
sbb
mov
scas
mov
scas
mov
jne
stos
jbe
cmc
daa
loope
and
dec
jl
jmp
and
in
scas
ret
lcall
and
out
dec
add
mov
cmp
jecxz
data16
insl
push
xchg
xchg
ffreep
mov
mov
ret
mov
outsb
adc
mov
cmp
pop
cmc
out
mov
addb
fildll
pusha
ret
inc
aad
aaa
or
xchg
icebp
push
or
imul
inc
push
mov
mov
addr16
mov
int
fstps
pop
mov
pop
sti
push
jmp
push
mov
cmp
pop
adc
push
ds
hlt
sbbl
push
jmp
inc
popa
add
leave
testb
sarb
je
xchg
cmp
and
lahf
dec
pusha
roll
daa
mov
out
iret
inc
int
rclb
dec
mov
and
in
push
xor
xchg
scas
outsl
subl
mov
data16
and
or
adc
xchg
bound
mov
gs
test
outsb
or
sbb
test
movsb
cli
sub
or
mov
adc
sti
inc
lret
or
ret
dec
fsubrs
hlt
iret
add
pop
icebp
xchg
test
adc
and
and
and
sub
sub
lock
mov
mov
push
insl
mov
and
xchg
les
dec
test
sahf
jp
fbstp
jle
xchg
push
xchg
std
hlt
push
cs
sbb
cmpsb
inc
lds
push
movsb
in
push
and
negb
addr16
gs
loope
push
mov
cwtl
add
xchg
mov
arpl
outsl
call
cli
sbbl
sub
mov
sub
cs
mov
andb
and
push
frstor
popa
stc
xchg
iret
push
out
push
mov
arpl
insl
js
xchg
xchg
add
vminsd
pusha
sbb
pop
loop
sahf
cltd
mov
mov
adc
inc
push
insb
sarb
insl
sub
nop
jmp
jg
outsl
inc
cmc
loopne
mov
mov
pop
and
cmp
mov
scas
fisubrl
call
cmp
out
mov
shll
insl
jecxz
mov
dec
movsb
scas
adc
dec
mov
mov
lock
adc
push
adc
inc
sub
xchg
mov
fsubrs
xchg
fadd
nop
xchg
pusha
fisubs
add
sbb
adc
addl
dec
jae
fsubr
add
and
inc
push
mov
push
mov
pop
add
push
sub
divl
mov
shrb
mov
scas
incl
aad
adc
scas
xor
movaps
and
addr16
imul
sbb
jns
xchg
jnp
les
dec
and
mov
cmp
cli
shll
push
enter
jns
mov
testb
add
fwait
mov
lods
and
fld
xchg
aam
fsubrs
add
fiadds
fidivl
jmp
jnp
mov
ret
loope
outsl
mov
pop
mov
add
sub
daa
in
pop
xchg
mov
pop
insl
inc
dec
push
cltd
dec
xchg
mov
mov
fbld
pcmpgtd
xchg
lods
das
dec
notb
dec
cmp
xor
ret
inc
or
repnz
lds
imul
fwait
sarl
mov
stos
jo
pop
jbe
dec
out
aad
add
adcb
mov
outsl
push
add
or
lahf
fdivs
or
es
xor
shlb
jecxz
or
push
mov
fs
xchg
jmp
stos
fldlg2
adc
jge
stc
je
mov
jg
stos
test
push
inc
movsb
popa
and
lret
sbb
gs
xchg
adc
add
pop
stos
ss
es
repnz
jecxz
add
int
or
dec
mov
rcrb
mov
jl
adc
dec
mov
insl
push
pop
scas
jmp
inc
and
xchg
jge
sub
sub
iret
pop
daa
cmp
testb
push
ret
clc
negb
inc
pop
iret
bound
in
push
sub
cld
sbb
jae
inc
dec
mov
xchg
lods
aad
frndint
je
cs
pop
jle
aam
mov
or
out
lret
fnsave
sbb
push
adcl
bound
imul
popf
xor
mov
jecxz
sbb
xor
ss
lods
loopne
int3
adc
stos
cmc
out
jle
leave
cmp
mov
inc
sub
jne
icebp
sahf
mov
shlb
mov
stos
rorb
xor
cmp
sub
xchg
or
dec
lahf
inc
sub
and
imul
clc
sub
leave
lcall
je
adc
add
mov
mov
sarb
jb
imul
lcall
jmp
cmp
cmpsb
cltd
mov
sub
sarb
iret
or
ljmp
jno
xchg
repnz
in
test
out
lds
ja
adc
add
dec
xor
fwait
jbe
push
rol
xor
fldenv
push
aaa
into
inc
mov
mov
fstp
stc
addr16
pop
cltd
ficoml
and
lahf
and
mov
test
in
out
cli
push
mov
out
xchg
dec
xchg
jp
jmp
mov
hlt
in
pop
sub
mov
jl
dec
rol
pop
lea
std
xorl
cltd
test
test
and
lods
inc
lods
fs
push
jg
out
repnz
push
arpl
jge
mov
sbb
mov
sbb
rol
hlt
imul
and
mov
push
xor
cmc
jnp
inc
push
add
cwtl
jae
adc
xor
iret
and
pushf
xor
enter
mov
push
iret
sub
lods
push
lcall
cmp
push
sbb
push
push
inc
inc
jne
ljmp
sub
xchg
fs
shrl
mov
ss
fs
mov
call
icebp
sub
ja
inc
outsb
int3
push
dec
test
das
and
ja
add
jg
aaa
fildl
loope
jp
lods
mov
nop
gs
pop
xor
mov
and
xchg
mov
ljmp
mov
inc
ret
inc
push
in
xchg
dec
sub
aad
add
add
add
lods
test
ja
clc
or
cwtl
mov
cmc
mov
or
xchg
and
pusha
sahf
aad
sub
sti
pop
ficompl
xor
stos
int
sti
pop
ljmp
sbb
mov
into
adcl
adc
ret
sbbb
pop
dec
in
outsb
fwait
xor
mov
scas
outsb
cmp
mov
fsubrp
mov
or
or
cmp
imul
bound
pop
lock
lock
insb
mov
repnz
xor
mov
adc
ss
mov
dec
cld
sub
xor
loope
pop
xchg
cmp
push
cmp
push
into
mov
dec
icebp
stos
and
shr
mov
hlt
mov
loope
test
jo
sbb
xchg
ret
repnz
mov
test
sbbb
loopne
lds
mov
mov
push
mov
pop
subl
dec
insb
aas
adc
or
je
insb
fwait
cli
push
pushf
or
jns
adc
xchg
add
jecxz
add
rorl
add
jnp
fidivl
int
pusha
notb
jecxz
jns
dec
je
jae
out
xchg
aad
fimull
fidivs
push
pop
leave
je
jnp
xchg
les
mov
adc
cmp
ja
jecxz
push
leave
pusha
xchg
jb
inc
inc
iret
repnz
into
xchg
inc
cmp
push
xchg
fcmovbe
push
sub
push
jmp
pop
xor
ss
sbb
lds
cmp
out
imul
sub
and
push
lcall
pop
xor
mov
sub
aaa
cld
xchg
push
add
cmp
fcomip
mov
into
jne
add
jmp
fisttpll
pop
notb
jge
jae
and
xchg
lret
adc
jmp
dec
loopne
add
insl
aaa
dec
lea
xchg
das
mov
push
jmp
sahf
dec
das
test
jb
lcall
xchg
repnz
mov
scas
daa
test
xor
dec
ss
jnp
mov
ss
aam
dec
cmp
sbb
xlat
add
dec
dec
jecxz
xchg
push
inc
mov
dec
inc
dec
fsin
jl
stc
mov
mov
xor
jp
repz
rorl
xor
testb
xchg
pop
aam
xchg
xchg
jg
mov
cmpsb
sahf
jbe
xchg
xchg
sub
leave
std
push
je
mov
sti
xorl
adc
xchg
aas
xchg
xchg
cltd
xor
cmpsb
ret
mov
mov
lret
push
scas
pop
mov
xor
add
push
enter
mov
daa
mov
xchg
inc
hlt
cmp
cltd
lods
fnstcw
not
insb
call
jo
imul
adc
sub
pop
add
stc
ds
pop
rsm
push
decb
xor
stos
cs
fidivrs
xchg
add
mov
sbb
dec
ss
xchg
pop
cld
js
pop
idiv
or
test
push
or
icebp
adc
lahf
gs
lret
mov
icebp
mov
test
xorl
jb
sbb
and
loop
lds
out
add
mov
add
inc
or
adc
test
adc
std
or
mov
cmp
rcl
repz
dec
xchg
mov
repnz
ja
and
dec
sti
xchg
pop
or
insl
addr16
lahf
sub
into
pop
incl
mov
les
inc
andb
cmp
mov
push
mov
sub
cwtl
mov
out
inc
mov
imul
cmc
pop
aaa
pop
mov
inc
sarb
stc
mov
lcall
wrmsr
inc
sub
cli
test
pop
xorl
add
jae
lahf
and
xchg
leave
cli
rorl
outsl
push
xlat
xchg
pop
xchg
int
loope
sbb
in
add
sbb
and
mov
push
scas
popf
jmp
vcomisd
call
jg
xchg
ret
sarl
in
mov
sbb
push
test
xor
in
cmp
subl
arpl
shlb
pushf
imul
inc
popa
jae
idiv
loope
sbb
add
pop
int
cmpsb
arpl
inc
jmp
push
or
mov
mov
pop
repnz
mov
xchg
jmp
dec
aam
rclb
sar
adc
or
or
jno
adc
inc
cmp
fsubrs
jmp
push
push
cmp
and
pop
pop
jns
adc
lcall
popf
in
pinsrw
fucom
sub
cltd
jnp
aad
or
loope
inc
inc
fidivs
sarb
cmp
pop
dec
fsubs
call
cltd
test
adc
leave
inc
jb
inc
push
lcall
mov
pop
dec
loopne
orl
scas
iret
outsb
lods
and
xchg
push
into
mov
std
mov
scas
in
lahf
push
mov
icebp
xchg
mov
or
stos
out
jge
inc
mov
push
push
jp
mov
sbb
mov
ljmp
push
lret
pop
cmpsb
adc
shrl
and
mov
mov
push
inc
stos
or
jge
cs
jmp
stc
or
lods
jmp
add
cmp
push
sbbb
push
cmp
dec
mov
aam
fdivrp
mov
cmp
push
vmwrite
mov
addb
add
repz
dec
adc
and
hlt
jae
stos
dec
xchg
and
adc
repz
cmc
mov
sbbl
jl
inc
push
xchg
dec
push
popa
pushf
ret
cmpb
in
push
lods
mov
mov
stc
or
inc
arpl
pop
cmpsl
enter
dec
loope
outsl
bound
add
mov
loope
ds
cwtl
mov
sarb
sbb
scas
data16
in
adc
sbb
call
and
test
pop
push
lret
xchg
mov
lahf
or
mov
out
sbb
jo
fs
inc
mov
sbb
icebp
ja
pop
or
jle,pt
shlb
fs
addl
ljmp
or
pop
iret
scas
sub
sarb
bound
adc
popf
dec
or
mov
subl
or
add
cmp
and
fcoms
imul
inc
pop
mov
shr
es
fistpl
lea
adc
sbbl
jmp
mov
ss
aam
and
or
aam
aaa
push
inc
cli
or
repz
fsubr
dec
repnz
negl
iret
dec
mul
pop
xchg
dec
pop
jge
xor
dec
mov
lret
icebp
psubq
mov
sbb
popw
inc
jmp
scas
cs
push
les
mov
js
mull
lds
fs
ss
inc
xor
jbe
and
cmp
push
in
cld
dec
pop
aas
cmp
mov
fstpl
dec
addr16
scas
mov
jno
and
jb
scas
dec
jmp
inc
xor
add
xor
adcl
aad
inc
arpl
mov
sbb
and
mov
lds
jmp
jb
rcrb
ljmp
sarl
pusha
sub
sbb
or
sbbl
fs
cmp
out
sbb
mov
push
adc
cli
xchg
jb
mov
mov
repnz
pushf
cmp
xlat
ljmp
leave
add
or
xchg
imul
int3
roll
or
scas
mov
mov
adc
ret
pop
fcomps
aam
mov
movsb
js
xchg
in
sbb
in
fcoms
and
fs
mov
xor
inc
jae
jae
jae
mov
fists
push
fistpl
data16
adc
pusha
into
mov
je
ret
xor
lret
sti
leave
sbb
icebp
mov
sbb
ud1
arpl
test
icebp
inc
adc
jl
lods
lods
hlt
mul
mov
dec
adc
xchg
add
js
dec
aaa
add
and
xchg
jae
sbbb
mov
stc
and
roll
sti
mov
dec
xchg
xor
popf
mov
iret
jbe
push
orl
enter
mov
outsl
dec
arpl
push
lods
lock
xor
cmpsl
jle
push
and
test
loope
ja
mov
push
mov
push
fisubrl
and
insb
mov
sahf
xchg
rcrl
adcb
cmp
daa
mov
inc
aad
push
pop
inc
sahf
ficomps
data16
aaa
gs
pusha
std
popa
inc
inc
enter
jg
pop
je
mov
int3
shrb
mov
xchg
jp
sub
push
mov
stc
xchg
adc
call
mov
mov
je
test
add
adc
cmpsb
div
loopne
and
adc
push
mov
lock
and
adc
out
add
shrb
lods
push
mov
fcmovbe
fs
sbb
jp
push
dec
movsb
jmp
sar
and
inc
cmpsl
insl
add
sub
das
dec
xor
out
insl
divb
scas
dec
fdivp
jb
pop
sahf
rclb
adc
dec
ds
cmp
test
or
hlt
aaa
in
out
push
out
inc
fidivl
in
pop
jge
adc
sahf
mov
xchg
js
shr
jle
data16
int3
int3
pop
mov
repz
pushl
pusha
jp
roll
lods
movsl
jns
dec
stos
add
das
pop
xor
fwait
adc
dec
cwtl
hlt
je
fwait
push
push
int
cmp
sti
mov
data16
push
push
or
jge
jecxz
std
mov
movq
adc
rorb
sub
jno
xor
or
add
nop
stos
jne
jmp
add
or
mov
inc
xchg
pop
adc
jnp
clc
nop
mov
xchg
mov
pop
and
loope
xchg
dec
push
je
sbb
mov
cli
mov
mov
mov
addl
mov
adc
test
or
add
leave
jbe
icebp
or
xlat
shrl
cmc
cmp
pop
xchg
xor
mov
cmp
cmp
insb
jmp
add
das
or
mov
sbb
xor
in
mov
gs
or
inc
cmc
or
jnp
in
mov
aam
xorl
arpl
fnstcw
pop
addb
sbb
push
push
mov
pmulhuw
jo
lret
or
adc
mov
push
xchg
fs
mov
loopne
jmp
and
pop
adc
ss
fs
sub
push
add
movsb
mov
std
dec
fisubs
into
jns
rclb
and
pop
and
por
sbb
pop
mov
hlt
mov
sub
into
scas
mov
cmpsb
or
dec
pop
add
dec
mov
xorb
and
aam
mov
enter
inc
cmp
shr
xor
cli
cmp
or
call
or
sbb
jmp
mov
add
dec
push
pop
movsl
mov
lds
cmpsb
dec
loope
imul
aad
jl
jmp
movsl
add
sbb
mov
inc
in
jg
push
lds
imull
je
push
movsb
jbe
aad
imul
loope
push
aam
repz
pop
xor
shrb
leave
adc
ljmp
pushf
lock
leave
xchg
std
or
imul
lret
xor
push
loope
push
mov
aad
add
insb
and
sub
clc
jo
mov
xchg
and
in
data16
inc
test
rep
je
xlat
pop
mov
mov
xchg
pop
pop
rcl
jge
dec
add
cmpsb
ret
add
jge
clc
add
sub
dec
jp
aad
testl
movsb
fcoms
xchg
and
push
mov
mulb
jne
int
jmp
imul
pop
xchg
enter
cmpsl
mov
in
jae
bnd
cmp
test
add
or
push
lods
mov
xor
inc
icebp
xchg
sub
and
adcb
inc
xor
lret
sbb
arpl
sub
mov
mov
das
pop
movsb
or
xorb
jns
lcall
mov
lods
outsl
clc
cld
out
xchg
cli
push
test
or
insb
pop
nop
add
pop
cmc
adcl
outsl
inc
ljmp
add
sarb
inc
bound
fisubrs
mov
push
shl
outsl
mov
bound
cltd
rcl
pop
xor
pop
pusha
cmc
aam
daa
inc
enter
sbb
cmp
xchg
jge
cmp
xlat
imul
pushf
mov
fcmove
lret
sub
out
sbb
lret
xor
pop
dec
push
out
into
ret
xchg
in
lcall
cwtl
stos
loope
mov
cmpl
mov
out
incl
in
fiaddl
sbb
fcmovu
sbb
mov
xchg
and
cmpsb
imul
shll
add
fldcw
mov
adc
test
mov
cld
mov
add
jp
pop
xchg
sbb
iret
mov
push
fcomps
js
push
lahf
fs
stos
loopne
iret
sti
aas
cmc
pushf
in
shrl
pusha
sti
movsl
mov
push
lods
cmp
ret
shl
call
jbe
or
cmpsb
les
loop
scas
mov
and
mov
pusha
filds
push
out
fwait
mov
jmp
dec
mov
je
inc
stos
jbe
mov
sbbb
in
mov
mov
scas
fstpt
push
jge
and
adc
dec
out
sarl
pop
push
movsl
dec
rcrl
out
cmp
cmp
lret
jle
push
cmp
inc
imull
insl
add
loop
inc
mov
mov
mov
lahf
mov
aad
inc
test
xchg
fistl
push
or
xchg
lahf
aad
inc
mov
push
imul
or
int
sub
movsl
push
or
mov
mov
not
shlb
pop
inc
xor
and
pushf
mov
pop
out
push
sbb
inc
leave
mov
mov
or
aas
push
mov
outsl
mov
and
test
pop
sub
sbb
in
push
adc
loopne
jae
in
fcmovnu
pop
inc
mov
in
add
sub
sub
push
cmc
imul
cmpsl
fcompl
sarl
pop
in
out
fists
jmp
cmpsl
neg
cmova
stc
int3
arpl
leave
ljmp
mov
fwait
pop
aad
pop
lret
and
icebp
push
inc
ss
inc
and
jnp
dec
jge
sub
pushf
lods
push
sbb
pop
sbb
jmp
xchg
jmp
dec
in
lds
arpl
xchg
sbb
mov
insl
jg
inc
sbb
lcall
dec
jp
pop
mov
pushf
pop
xchg
imul
addr16
divb
es
inc
pop
mov
rol
or
pusha
ret
xchg
fiaddl
pop
pop
pop
test
cmp
push
outsl
flds
sub
mov
and
das
sbb
lret
cld
stc
inc
sbb
add
fdivrs
pop
fistpll
dec
shrb
add
lcall
rol
jl
cltd
out
in
push
call
adc
cmp
jmp
test
addr16
sti
or
pop
xor
push
ret
call
push
inc
jae
arpl
jecxz
inc
pop
aam
ss
negb
jne
insl
mov
bound
cmp
test
rorb
inc
or
cmp
xlat
loope
mov
xor
push
test
adc
rcrb
pslld
leave
push
xchg
data16
test
int3
push
mov
popa
sub
push
popf
cmpsl
cmp
add
stos
imul
mov
push
adc
inc
add
lahf
and
sahf
push
mov
push
pop
cwtl
out
inc
inc
jns
jbe
out
into
test
dec
mov
dec
out
xorl
pop
and
lret
push
aam
out
int
iret
ret
mov
pop
add
xor
push
loop
mov
and
cmp
cltd
imulb
sub
loope
and
fidivl
pushf
addr16
mov
and
repz
test
xor
insb
imul
and
adc
dec
xlat
xchg
adc
outsb
fisubrl
pop
gs
adc
mov
test
dec
and
xchg
ret
jae
pop
xor
lods
jle
rcrb
or
std
lods
popf
mov
push
fcmovbe
adc
fsubrs
out
sub
sti
ret
ret
pop
cmp
outsl
mov
sbb
int3
mov
rclb
fs
js
fdivp
in
inc
lods
add
lods
mov
and
fwait
ret
cmpl
push
call
mov
pop
dec
dec
add
push
jne
fisubrl
divl
pop
repz
sahf
mov
je
dec
sub
jbe
push
cmc
cmp
mov
scas
repnz
jle
jl
int
mov
sub
mov
or
into
mov
or
out
inc
fistpl
leave
jl
inc
xor
sub
addr16
or
cmpb
xlat
cld
pop
enter
jb
push
test
pusha
add
cmpsl
fimuls
orb
nop
sub
sub
cmc
cmpb
xchg
sarl
cli
or
daa
shlb
lds
pusha
out
arpl
fcmovnb
in
mov
inc
frstor
test
dec
push
inc
fs
aaa
outsb
sbb
xchg
cld
std
ja
out
popf
repnz
mov
fadd
cmp
xchg
sbb
fcmove
lahf
cmp
mov
xor
push
in
jle
int
cmpl
sub
test
xchg
jno
rcl
aad
in
fistpll
mov
sub
lock
ljmp
aaa
and
sti
dec
fldenv
fimull
xchg
insb
pop
inc
sahf
repz
repz
and
inc
hlt
jns
inc
stos
rcr
insb
lret
jns
add
dec
clc
mov
int3
xchg
pop
bound
fldl
jle
shlb
icebp
lcall
fcompl
mov
sbb
stos
cmp
xchg
insl
mov
nop
loop
fcompl
movsl
repz
roll
xor
fldcw
jbe
xor
push
inc
and
cmpsb
cmpsb
shrl
adcb
sub
movsb
test
fwait
push
outsb
cmp
mov
push
loopne
fcoms
inc
fnstcw
mov
inc
mov
fadds
pop
push
mov
hlt
pop
sub
int
pusha
nop
jb
adcb
mov
sahf
pop
pop
loope
mulb
xchg
add
mov
loop
aas
call
lods
inc
jecxz
shlb
sahf
mov
jbe
pop
sub
mov
sub
add
jb
popa
cmpsb
or
fcoml
pop
sbb
mov
sub
int3
push
lea
pop
sbb
and
jne
in
or
in
aam
pop
or
or
jae
add
mov
out
cli
leave
push
daa
outsb
mov
fnstcw
shl
sub
cmp
popa
xor
fwait
sbb
fidivrl
sti
lret
add
sbb
jbe
jl
adc
stos
inc
add
jmp
pop
sbb
mov
mov
stos
cmp
fwait
xchg
xor
mov
popf
xor
scas
out
push
jns
gs
enter
xchg
mov
ret
xor
sub
outsb
scas
lods
fsub
dec
fidivrl
inc
mov
adc
push
outsl
ds
imul
and
and
mov
and
outsb
es
ss
adc
imul
jbe
or
jl
xor
xlat
mov
orb
mov
hlt
and
inc
push
pop
insl
outsl
ss
mov
pop
bound
loope
movsb
and
inc
icebp
sbb
xor
push
pop
cs
ljmp
xchg
xchg
mov
stc
fistps
sbb
mov
jns
inc
sahf
pop
mov
mov
fidivl
shll
or
mov
xchg
dec
iret
outsb
ficoml
movsb
les
xor
add
popa
and
insl
out
int3
sbb
ds
mov
loop
ret
sbb
adc
push
inc
or
cs
sbb
fisubs
hlt
inc
fucomp
mov
test
iret
push
mov
incl
push
out
test
xchg
push
rorb
jge
xchg
mov
sub
adc
or
mov
addr16
and
adc
and
pusha
mull
push
nop
and
ret
hlt
or
push
jns
loop
pop
cmpsl
filds
shr
push
push
jmp
xlat
mov
pusha
int3
lcall
stc
sahf
aas
cwtl
or
and
xor
dec
js
dec
push
dec
mov
mov
loope
je
dec
test
xor
xchg
test
inc
incb
das
dec
xchg
inc
repz
and
push
shll
pusha
ljmp
jbe
or
lret
jp
mov
sti
insl
jg
pop
out
cli
jp
inc
data16
jg
mov
cmpsb
push
in
call
test
pop
shll
xchg
out
popl
dec
popa
ret
loopne
test
fsubrs
mov
movsb
pop
jb
je
mov
push
mov
loopne
xchg
mov
in
js
aad
pop
adcb
adc
and
enter
jo
hlt
push
lock
aaa
cmp
mov
ljmp
pop
mov
lahf
mov
negl
push
add
and
gs
lods
add
es
push
pop
sbb
and
bound
std
inc
jo
jl
test
pushf
add
push
and
push
push
je
xchg
push
or
repnz
pusha
in
jno
or
sbb
mov
mov
lret
mov
xchg
sbbl
pop
fbstp
or
pop
les
cwtl
das
push
cmp
push
fnstenv
cs
fcompl
add
mov
jl
js
jnp
lret
push
popa
subl
outsl
movsb
inc
in
inc
fcoml
dec
roll
lret
push
enter
mov
loopne
push
jmp
and
out
dec
xor
jmp
pop
je
cmp
in
ja
cli
data16
push
adc
push
sbb
dec
cltd
imul
test
mov
pop
pop
sbbl
and
mov
mov
push
scas
movsb
mov
xor
xor
in
ja
rcll
scas
mov
stos
arpl
pop
jb
dec
xlat
cmp
mov
add
mov
loope
popa
leave
jle
aas
jge
dec
es
or
inc
push
bound
push
scas
aas
cwtl
out
lret
jg
add
push
mov
pop
loope
imul
sub
hlt
mov
scas
sti
or
jg
mov
lea
mov
daa
test
in
lods
ret
int3
pop
xchg
pop
pop
push
jo
pop
lret
push
loopne
daa
inc
mov
push
jmp
jns
lret
into
cmp
sub
cmp
jns
ret
inc
lret
add
mov
lock
xchg
icebp
jecxz
mov
into
mov
lods
inc
cwtl
sbbb
daa
jne
jb
mov
mov
sahf
inc
out
xchg
mov
stc
outsb
aam
hlt
nop
jl
or
out
das
sti
or
inc
pop
enter
rclb
ret
sahf
fisubrs
ret
out
sahf
push
dec
popa
notl
xchg
shrb
jle
and
fs
or
xor
sar
clc
adc
movsl
inc
loopne
mov
and
pop
xchg
shlb
sbb
mov
jne
push
data16
int3
in
push
jns
cld
lds
pop
loopne
inc
mov
sbb
int3
dec
xchg
add
jo
lea
dec
xor
cmp
push
sub
movsl
add
jmp
sbb
jecxz
jp
push
and
loop
stc
loop
notb
pop
xchg
mov
mov
test
mov
jmp
in
mov
mov
ljmp
mov
arpl
ror
xchg
add
mov
lods
pop
xchg
imul
dec
cmp
xor
out
mov
xchg
mov
in
and
mov
pop
sub
into
pop
mov
xor
insl
cmp
fmulp
cmp
outsb
mov
add
into
cltd
adc
inc
pop
lods
imul
testb
addr16
cs
pop
out
pop
out
sub
dec
sti
sbb
insl
sahf
aaa
pop
inc
push
pop
xchg
fcomp
pop
dec
or
push
das
in
mov
ja
in
adc
cwtl
mov
xchg
mov
xor
pop
jne
jg
es
ss
idivb
push
movsl
add
xchg
lret
add
and
and
adc
push
sti
mov
jl
in
out
sarl
or
ja
mov
mov
jno
mov
mov
sbb
add
adc
inc
sub
push
sbb
inc
icebp
nop
loope
fs
inc
cmp
mov
fwait
sub
and
adc
imul
arpl
sahf
sub
cwtl
stos
mov
inc
mov
dec
fcoml
test
mov
ja
cmc
adc
insl
nop
inc
les
push
push
mov
or
jno
mov
adc
or
out
imul
aas
or
std
adc
xor
cwtl
pop
xor
jns
xchg
popa
adc
loopne
mov
das
mov
out
pop
rorl
jno
shl
and
int3
cld
loop
or
jns
lahf
scas
pushfw
shlb
std
xchg
sub
loop
outsb
mov
lock
cs
mov
into
sub
repz
inc
or
out
stc
pop
mov
jo
addr16
push
jae
test
ss
je
mov
cmp
int3
xchg
das
dec
inc
fsub
mov
pusha
adcb
adc
fadd
or
sub
mov
push
out
fwait
in
inc
stc
jno
inc
fsubs
push
xor
das
rorl
or
pusha
lret
mov
mov
pop
jge
cwtl
das
fdivrl
mov
or
scas
inc
push
or
jo
push
ljmp
jb
les
mov
add
xor
adc
jp
cmp
or
and
mov
mov
sbb
das
dec
push
mov
cmp
clc
xchg
in
mov
push
cmp
shl
dec
add
icebp
pop
sub
mov
leave
add
js
popf
pop
jno
outsb
adc
inc
jo
cmpsl
inc
arpl
cltd
test
mov
in
call
cmp
movsl
adc
nop
std
and
lods
hlt
xchg
mov
cmp
sub
dec
nop
aas
add
mov
mov
stos
aam
scas
iret
push
lods
add
pop
adc
movsl
mov
xor
pop
or
mov
or
inc
mov
outsl
loop
movsb
mov
cmpsb
dec
dec
mov
test
ja
cmp
loop
cltd
fcmove
mov
cmpsb
and
inc
ret
sbb
cmp
adc
aad
ret
das
mov
aam
repnz
ljmp
jo
mov
ret
nop
jns
mov
sahf
pop
out
daa
dec
ret
roll
inc
cmp
xor
sti
xchg
daa
adc
or
mov
ljmp
adc
out
aaa
hlt
add
or
mov
jmp
fsts
popf
and
xor
movsl
mov
ljmp
sub
and
dec
jl
jp
cltd
sbb
aaa
and
mov
adc
or
xchg
imul
push
push
push
jmp
sahf
push
mov
add
shll
pusha
adc
out
inc
jbe,pn
test
lds
or
push
cli
shlb
js
imul
mov
adc
data16
loope
add
in
jmp
or
test
push
scas
lods
cmp
clc
fldcw
inc
pop
lods
jmp
btsl
push
cli
rcrb
sub
jne
cmp
pop
xchg
mov
mov
imul
adc
out
iret
outsb
popf
jg
rcrb
aam
outsl
lret
and
mov
jg
cmpl
incb
sub
imul
pop
in
inc
xor
cmp
and
sub
jle
shl
les
sub
sbb
negl
out
jno
cmp
or
pop
out
pop
jo
mov
repnz
adc
cmpsl
fildll
lds
in
lods
mov
mov
pop
cmp
dec
add
xchg
shl
jle
repnz
mov
lds
lods
push
jle
orl
shrb
add
inc
xchg
pop
popf
mov
push
mov
push
push
pop
in
mov
mov
mov
les
out
test
mov
mov
cwtl
dec
mov
fiadds
cmpsb
mov
jns
add
iret
rcrb
lock
xchg
fdivr
inc
lahf
or
pop
ljmp
repnz
inc
imul
inc
mov
sarb
push
icebp
sub
lds
std
jmp
sub
sti
jge
push
ret
negl
jnp
jb
aad
pop
inc
fdivr
insl
dec
jns
mov
insb
hlt
mov
in
xchg
loopne
test
insb
xor
lea
mov
sub
pop
dec
xchg
daa
jg
fdiv
cld
mov
enter
inc
pop
mov
ret
jmp
cmp
xchg
adcb
andb
sub
mov
xor
iret
sub
jns
mov
or
cs
aam
add
mov
sbb
mov
push
scas
push
sub
jo
movb
push
add
mov
xchg
movsl
fiaddl
out
rolb
mov
cltd
fnstenv
dec
neg
lea
daa
inc
call
sbb
and
sbb
push
cmp
fisubl
pop
decb
leave
sbb
push
sub
jg
dec
lods
jle
lcall
add
shlb
push
mov
in
cmp
test
mov
mov
or
sub
test
xchg
cmpsl
repz
cmpsb
mov
inc
addb
je
mov
stos
jae
lods
cmpl
or
fstps
push
dec
imull
jb
xchg
pusha
sub
test
jnp
iret
dec
xor
xchg
dec
cmp
rclb
mov
adc
sbb
ss
bound
iret
and
jl
sahf
xor
xchg
push
and
jmp
enter
stc
push
sub
mov
mov
leave
dec
std
cmp
sbb
fcoml
sub
mov
and
dec
lods
inc
mov
in
lock
scas
jnp
in
ljmp
sbb
cmp
pop
pop
sti
and
jl
dec
mov
fdivrs
sbb
insl
sub
insb
sub
cmc
or
addr16
pop
mov
mov
scas
adc
ffreep
ficoms
je
inc
movsl
mov
inc
movsl
test
xchg
add
push
mov
or
roll
or
pop
in
dec
loope
inc
dec
call
cmpsl
call
leave
cmp
les
or
push
cs
jecxz
arpl
jae
es
inc
xor
mov
in
cmpl
add
jmp
xchg
fld
pop
or
ss
test
bound
jle
jmp
cmp
sti
cmpsl
ret
cmp
hlt
mov
push
adc
inc
aad
popf
shrb
popf
xchg
test
cmp
ljmp
xchg
imul
dec
fldcw
test
sbb
xchg
outsl
ljmp
mov
mov
in
imul
sti
adc
inc
stc
shlb
ret
mov
addr16
push
cwtl
testl
pop
cli
ja
xlat
daa
lcall
or
jg
lock
adc
pop
add
lahf
dec
in
jmp
mov
mov
pop
psadbw
pushf
xor
les
std
jg
dec
testb
xlat
ss
or
pusha
xchg
jp
xchg
pop
mov
jl
ja
cs
shl
cmp
mov
or
sub
arpl
or
pop
call
push
xchg
inc
ffree
jne
push
iret
push
fucomp
xor
inc
int3
lock
in
int3
arpl
dec
ljmp
pop
out
call
or
pushf
adc
sbbl
sub
xchg
or
std
pushf
xor
sbb
mov
cmp
repnz
jns
jae
add
testl
pop
xor
mov
arpl
outsb
dec
adc
xor
daa
aas
mov
aaa
icebp
mov
pushf
push
nop
add
ret
inc
aas
pop
mov
push
std
gs
or
ret
and
dec
loope
ljmp
push
xchg
adc
xchg
lods
jg
lret
out
adc
and
stc
shl
mov
pop
cmp
insb
mov
add
lret
dec
xor
sub
xchg
push
cmc
out
sub
ret
mov
push
aad
addl
push
sub
pop
lock
jbe
ret
dec
out
inc
sbb
and
add
mov
sbb
mov
out
adc
out
iret
fdivs
or
sub
sub
mov
test
dec
mov
ja
and
aam
rcrl
movsl
xor
xchg
fisubs
lret
push
call
les
imul
inc
mov
fsubs
xchg
dec
popa
xor
fmull
test
jge
add
jmp
test
les
push
push
out
cmc
ret
jp
adc
jmp
dec
sbb
jge
mov
adc
cs
and
test
je
push
in
dec
cmp
jg
mov
xchg
incb
in
das
mov
mov
inc
push
mov
cld
mov
loopne
in
popf
cmp
negb
pop
mov
push
je
mov
adc
ja
dec
xor
xchg
cmp
cmp
dec
test
ss
cld
jecxz
mov
mov
mov
dec
ret
push
or
movsl
rorb
xor
imul
stos
mov
jno
adc
cmp
pop
jae
mov
jno
and
xlat
adc
jbe
loopne
cld
inc
int
push
loopw
mov
leave
jno
inc
dec
pop
mov
cmpsl
pushl
adcl
mov
jbe
adc
negl
cmpsb
sbb
aas
add
loop
es
mov
xchg
sub
push
mov
out
mov
add
mov
mov
fdivr
or
movsb
test
ret
mov
xchg
and
xchg
cltd
lds
jae
xchg
scas
call
in
imul
cli
sbb
outsl
mov
shll
imul
adc
sahf
out
es
cwtl
das
jns
cld
outsl
mov
jle
ljmp
sub
mov
fsubrl
aam
fsubrp
push
push
xchg
in
aas
inc
sub
addr16
mov
jnp
pop
mov
aam
adc
sub
dec
mov
cmpsl
mov
or
xor
inc
jno
scas
inc
mov
je
inc
loopne
push
jb
test
inc
int3
dec
dec
mov
lret
addb
in
or
cmc
adc
imul
jo
in
mov
add
mov
pushf
xor
std
inc
fldcw
cmc
pop
out
mov
cmp
out
push
cmpsl
fs
lock
out
xchg
fs
mov
jb
les
or
inc
fstl
sbb
cwtl
adc
sbb
mov
mov
dec
out
dec
sub
mov
out
xchg
clc
or
mov
mov
rcrl
push
stc
lret
or
mov
in
mov
jb
test
jae
pop
leave
in
inc
sti
jp
mov
push
or
xchg
daa
and
lret
ss
xor
inc
xchg
in
jb
sbbl
test
cmp
or
rcll
xchg
xchg
les
or
cmpsb
out
shrb
loope
dec
cmp
les
lahf
notl
xchg
es
test
cwtl
clc
jnp
pop
inc
bound
inc
fisubs
cs
xor
in
jp
and
mov
push
test
mov
repnz
xchg
xchg
lock
idivl
dec
cmp
mov
shl
ret
mov
jno
push
adc
nop
ret
bound
pop
pushf
in
jne
jnp
push
sarb
push
mov
pop
or
push
int3
stos
clc
rclb
test
scas
cs
sahf
out
add
imul
mov
mov
pop
daa
ja
push
in
pop
pushl
sbb
push
addr16
stos
mov
cmc
mov
les
scas
ficomps
xchg
rol
mov
and
inc
sbb
pop
cmpsb
mov
push
popa
add
fldl
iret
mov
xchg
jnp
ret
pop
mov
mov
in
popa
gs
inc
clc
je
in
mov
aad
mov
mov
ljmp
call
or
cltd
push
nop
lret
jae
mov
cmp
cwtl
mov
pop
imul
sbb
leave
jmp
es
push
jp
je
lods
jmp
faddl
pop
push
sahf
sub
dec
mov
jmp
sar
daa
arpl
pop
lahf
out
into
mov
dec
xor
or
mov
sub
mov
and
lods
xchg
repz
dec
stos
ficoml
jmp
aaa
xor
adc
aaa
adc
pop
into
imul
mov
cmp
xchg
imul
movsl
jg
lods
xlat
stos
or
push
imul
call
push
cs
gs
cmpsb
cmp
pop
movsl
popf
cmp
mov
lea
push
xchg
xchg
cmpsl
ds
nop
shlb
mov
fdivrs
int
xor
loop
jg
fcomi
popa
mov
or
lods
jmp
lea
mov
frstor
fistpl
cmp
pop
push
push
cmp
mov
dec
testb
incb
test
jle
add
mov
mov
fidivrs
push
jo
xchg
in
in
sbb
movsb
mov
adc
push
and
xor
ljmp
cmpsl
shll
fcmovnb
int
insl
sub
leave
shr
xchg
jnp
pushf
lret
cmp
je
push
sub
mov
in
test
inc
fcmovnb
sbb
and
fdivl
mov
push
clc
inc
out
ja
sarb
xchg
sti
push
mov
sub
adc
and
mov
ja
jae
nop
and
sbb
push
dec
int3
test
cltd
loop
jl
and
scas
add
dec
dec
lods
jecxz
repz
dec
je
push
pop
into
cmp
jbe
frstor
push
rclb
xchg
shlb
int
movsl
std
add
in
ja
push
out
mov
sub
pop
jmp
test
mov
in
fwait
sarl
add
push
fcmovnu
jecxz
vmovntps
and
dec
es
jmp
les
pop
int
add
sbb
cmp
loope
cmp
out
mov
pop
push
jmp
popf
or
jo
lea
scas
jb
add
and
scas
jbe
mov
jbe
push
sub
pop
cli
push
xlat
arpl
insl
sub
mov
out
xchg
shlb
lret
data16
ja
jo
sbb
cli
dec
inc
test
lret
test
fisubl
outsl
mov
xor
dec
add
movsl
mov
movb
jns
stos
sub
mov
sbbl
pop
mov
aam
push
cld
fwait
lcall
cmc
loopne
into
adc
dec
hlt
sbb
jnp
jl
mov
xor
jns
jmp
sub
fnstcw
clc
xchg
sub
hlt
mov
jae
xchg
mov
fnstenv
xlat
mov
mov
mov
mov
daa
or
add
mov
test
jge
mov
push
xor
jae
leave
test
aaa
push
ror
xor
pop
pop
xchg
arpl
inc
xchg
sbb
iret
xchg
xchg
and
shld
scas
hlt
sbb
das
out
sahf
jbe
sbb
xorb
xor
mov
pop
xchg
mov
movsl
cli
or
inc
add
sub
or
cmpsb
sbb
mov
subl
out
aaa
adc
dec
add
push
fbld
mov
fstp
jbe
and
pop
mov
add
and
sub
shlb
mov
scas
mov
adc
sarl
sbb
sbb
adc
imul
add
jmp
push
xchg
mov
into
loope
push
pop
repz
insb
loop
cmpsl
inc
jns
jns
jno
in
sbb
sub
dec
cmp
sahf
inc
push
cmpsl
fstpt
jbe
imulb
push
jae
std
and
ljmp
arpl
pushf
std
jbe
outsb
mov
mov
dec
push
pop
into
inc
loope
mov
cmp
lds
mov
add
nop
fs
aam
out
add
xchg
cwtl
rorl
test
insb
dec
xor
movsb
pop
push
sbb
aas
lds
mov
or
iret
sbbl
xchg
popf
sbb
movsl
addr16
push
mov
rcrl
jmp
ret
mov
repnz
sub
jns
pushf
dec
scas
pop
jmp
or
jne
dec
xchg
outsb
popf
mov
cmc
aad
add
mov
jnp
mov
lods
les
loop
jb
stos
ds
out
into
dec
sub
rorl
cmc
mov
ret
xchg
push
insb
xchg
ja
cld
fdivrl
aas
aad
mov
xlat
mov
mov
or
and
push
in
sti
xchg
pop
mov
mov
xchg
mov
adc
mov
test
jg
js,pt
jnp
ret
push
fistpll
push
push
push
fcmovnbe
push
add
test
mov
sbb
test
ja
outsl
test
jb
mov
xor
adc
insl
jge
aaa
xchg
jle
jne
jae
dec
mov
shrl
or
push
stos
mov
imul
jne
out
into
loopne
pop
push
push
cwtl
and
daa
xor
cwtl
out
fistps
jecxz
lret
lock
repz
sub
mov
in
xor
cmp
add
movsb
ljmp
mov
mov
aas
bound
out
or
mov
int
decb
stc
and
movsb
aaa
loop
lea
test
ljmp
aam
mov
decb
fcomi
test
aad
ss
aas
dec
fstl
call
ss
imul
popa
and
clc
push
add
mov
or
sub
pusha
pusha
pop
sti
jp
inc
lds
adc
sub
jmp
push
sbb
clc
sarb
insb
jle
iret
add
mov
push
mov
mov
cs
hlt
addr16
or
sub
xchg
scas
xchg
sub
mov
in
dec
and
jo
and
xor
mull
push
sbb
pop
mov
push
xchg
mov
out
push
push
cltd
jg
jg
jl
ja
sub
pop
cmp
incb
sbb
ret
jns
jecxz
and
in
sbb
cmpsb
jg
leave
jecxz
sub
and
mov
das
in
adc
subl
popa
mov
sub
xor
lds
out
xorl
push
cli
daa
xor
test
xor
stc
lea
xchg
push
inc
adc
push
out
scas
or
mov
enter
mov
ret
outsl
clc
call
push
add
ds
fs
xchg
inc
out
ljmp
xchg
in
or
pop
shrl
or
or
xchg
dec
aas
push
xchg
dec
test
out
lret
xor
std
mov
cmpsb
inc
cmp
loope
pusha
lret
or
imul
jp
jne
push
pop
sub
test
sbb
inc
mov
pop
leave
xlat
mov
add
ret
inc
imull
sub
add
test
xchg
sub
cs
inc
mov
inc
mov
bound
daa
mov
adc
push
dec
pushf
sub
lods
inc
dec
xchg
lret
aam
pushw
sbb
adc
inc
pop
into
add
daa
testl
push
inc
sahf
movb
xor
arpl
test
xchg
pop
dec
stos
push
inc
fcomps
iret
rolb
push
aaa
jecxz
mov
lods
test
loopne
aas
adc
into
push
decl
lret
popa
in
rorb
jmp
shrb
and
clc
mov
adc
sub
in
scas
and
mov
jno
sub
adc
es
aas
roll
out
in
rorb
sub
ljmp
sub
adc
sahf
clc
cmp
mov
add
push
sub
and
int
fistpl
int
arpl
xchg
mov
lcall
xchg
shll
mov
dec
gs
jle
or
ret
sub
push
lock
dec
lods
ss
jl
push
inc
jge
inc
jbe
cmpl
add
shlb
add
in
scas
bnd
loope
adc
adc
add
xor
pop
mov
cmp
outsl
add
mov
pop
mov
mov
lds
cmp
pop
movsl
bound
adc
push
or
fmul
arpl
nop
scas
fisttpll
mov
pop
push
in
loop
cltd
jno
repnz
call
inc
movsl
sbb
pop
jno
inc
je
dec
out
jg
push
repnz
cmp
mov
fisttpl
mov
cmp
xor
push
std
xor
enter
fdivrl
test
mov
pop
dec
pop
into
inc
aam
add
xor
cmpsl
jle
cmc
mov
les
ds
mov
repz
xchg
sbb
or
arpl
push
repz
in
mov
lods
insb
rol
fsubp
imul
inc
jg
bnd
loopne
ret
sarl
popf
xorb
enter
adc
cmp
cwtl
dec
fs
mov
mov
adc
pop
cs
pusha
stos
jo
mov
popf
inc
fmuls
lcall
inc
clc
cmc
sbb
ret
push
xchg
mov
repz
dec
cmc
adc
inc
gs
xor
negl
and
jge
xchg
pop
xchg
insb
sbb
aaa
mov
in
mov
je
hlt
mov
orb
aas
push
out
mov
outsb
fdivrl
jp
pop
lret
int3
jne
cmpsb
sub
mov
jge
sub
jg
push
push
mov
ja
out
and
mov
fwait
cli
je
and
xor
addl
push
popf
and
adc
add
cmpsl
sti
sbb
and
mov
lods
cmp
lahf
add
mov
sbb
lods
dec
icebp
ss
pop
frstor
xlat
test
lds
xchg
shufps
dec
test
inc
aaa
jb
mov
jae
adc
enter
mov
sbb
das
enter
sub
aaa
xlat
sbb
fwait
and
jl
push
ret
pop
movsl
out
sub
inc
fs
insl
xchg
mov
cmp
in
push
jns
xor
adc
das
fistl
enter
stos
mov
jae
cmp
testb
in
sub
insb
jmp
pop
hlt
mov
stc
inc
dec
sub
adc
pop
push
lds
incl
jmp
sub
fsubrs
adc
sub
inc
push
rorb
call
cmp
jmp
ss
out
mov
fdivrl
pusha
int3
push
lahf
arpl
push
fmulp
adc
push
cmp
or
fists
aad
les
cmp
fildl
movsb
mov
jecxz
into
pop
mov
adc
fildl
mov
xor
fldenv
push
push
fcoms
push
pop
loopne
dec
mov
pop
outsb
cs
add
daa
dec
cmp
jle
sub
mov
gs
pop
xchg
pop
daa
adc
mov
mov
sbb
lods
adc
mov
mov
pop
scas
mov
jge
out
push
mov
inc
mov
imul
sbb
mov
jo
repz
iret
push
movsl
insb
test
pop
xor
jl
in
xchg
jae
add
ds
and
mov
out
jmp
and
data16
inc
hlt
ja
mov
mov
jge
add
mov
xor
and
daa
rolb
lea
leave
jo
cmc
xor
leave
aad
sahf
bnd
movsb
out
and
int3
ret
lods
ret
cs
and
arpl
adc
outsb
inc
sbb
jge
xlat
cmp
mov
or
mov
xlat
leave
mov
or
addb
pop
lock
mov
mov
popf
pop
negb
cmp
mov
js
xlat
sub
incb
dec
mov
mov
data16
out
xchg
mov
subb
sbb
shr
xor
mov
out
or
gs
and
push
lahf
mov
mov
cmc
xchg
sahf
negl
and
out
dec
xchg
pop
add
int3
mov
fistpll
test
hlt
xchg
mov
je
or
adc
xchg
pop
in
jae
stc
test
mov
adc
lea
nop
cwtl
jae
and
sbb
fidivs
cld
jp
and
inc
cltd
push
xchg
dec
or
popa
lods
daa
inc
int3
mov
lea
icebp
cmpsl
sbb
xlat
sti
neg
sub
shll
insb
ja
lods
dec
pop
fists
popf
push
adcb
ret
sub
cmp
push
or
dec
pushf
or
cmp
inc
jnp
adc
hlt
les
jl
lods
push
sahf
xlat
hlt
sbb
data16
jge
inc
mov
push
inc
stc
nop
adc
dec
les
imul
inc
mov
stc
test
sbb
sbb
jo
fidivs
or
xchg
dec
cmp
cld
leave
rcrb
lock
and
out
fildl
and
and
in
test
lcall
dec
pop
sub
mov
sbb
sbb
mov
or
cmp
xchg
mov
sbb
sarb
mov
push
mov
stc
pop
movsb
xchg
xor
enter
adc
add
stos
arpl
orl
mov
push
sarb
sub
inc
mov
cmpsl
fistpll
jge
cs
sub
push
sub
imull
das
lea
mov
pop
mov
stc
cmp
sub
arpl
pop
neg
jmp
loop
sbb
loopne
loopne
inc
stos
jne
mov
push
fistl
sbb
imul
test
xchg
shll
dec
xchg
ds
add
lods
lret
mov
jmp
push
mov
out
jle
add
lods
add
cmp
mov
cmpb
movsl
sub
shll
aas
mov
je
bound
sub
fs
sahf
sarb
xlat
sbb
sbb
iret
dec
adc
pusha
sahf
popa
dec
lods
sbb
shld
sub
and
sbb
xlat
xor
lea
lahf
clc
push
mov
pop
enter
add
push
or
lcall
inc
clc
lods
mov
aas
push
inc
add
inc
mov
pop
and
pusha
or
popa
aaa
addr16
dec
mov
mov
out
xor
pop
lea
mov
les
jmp
call
xor
outsb
sahf
pop
adc
push
shrl
and
data16
mov
jns
xchg
int
repnz
fcomps
arpl
lcall
push
lret
push
daa
repnz
xor
arpl
jns
in
scas
cs
fsubl
mov
enter
cli
sti
enter
pop
add
imul
into
movsl
inc
xorl
xchg
or
xorb
push
shll
add
cmp
jo
lods
pop
mov
xchg
stos
adc
mov
and
gs
into
out
mov
fucomi
aad
dec
aam
js
repz
fsubrs
iret
dec
mov
or
mov
jl
add
ja
mov
or
sub
add
cli
push
pop
leave
lea
adc
lahf
jb
popa
adc
sbb
insl
pop
in
mov
mov
fsubrl
cmc
add
in
jne
sbb
dec
cltd
hlt
cmp
mov
testl
je
jae
shlb
pushf
sub
pop
jecxz
aas
xchg
xor
mov
mov
imul
js
and
out
cwtl
lea
xchg
mov
push
jmp
push
icebp
outsl
fstp
loope
sbbb
outsb
rclb
add
out
lods
hlt
add
dec
add
push
inc
dec
mov
incl
cmp
jg
pop
js
add
fwait
xor
cmpsl
andl
inc
and
sti
into
sbbl
dec
jo
pushf
arpl
adc
les
and
or
lods
nop
jne
xchg
dec
out
inc
xor
sbb
mov
xchg
push
cmp
dec
inc
xchg
insl
sbb
xchg
pop
dec
push
sbb
imul
lods
inc
push
mov
mov
jle
mov
fcoms
subb
and
fwait
push
mov
pushf
adc
xchg
mov
mov
test
add
andb
push
clc
shl
cmp
leave
mov
outsl
mov
inc
dec
fimuls
out
push
lahf
jecxz
movsl
jne
and
jp
ret
stos
shll
js
bound
lcall
pop
into
mov
movsl
push
sub
inc
addr16
jae
push
sahf
and
fnstcw
lret
in
fstpl
es
jno
inc
push
or
xchg
xchg
into
fldl
les
mov
dec
test
ljmp
ret
pop
ja
and
xchg
aas
out
xor
xor
shll
xchg
call
mov
and
sbb
lds
push
pop
fwait
jb
aad
push
xchg
cld
test
mov
lret
mov
int
shld
push
jge
repz
mov
addr16
mov
addl
and
xor
insb
inc
rorl
mov
daa
out
test
ret
xor
pop
mov
jb
and
call
cmp
pop
test
test
or
test
mov
xchg
fidivrs
loope
ljmp
call
ficoml
mov
sti
out
cltd
or
mov
and
xor
sub
inc
push
jle
xor
and
mov
out
aad
pop
and
xchg
xchg
cmpb
inc
lcall
sbb
mov
mov
xor
mov
mov
ss
or
loopne
fcomi
lret
add
andl
xchg
cmp
clc
and
pushf
xlat
sbb
fmuls
and
imul
jne
ror
push
insb
hlt
lock
pushf
sbb
sahf
push
lahf
out
fld1
jo
xchg
mov
jbe
cmpsb
fidivl
adc
sbb
jmp
lahf
in
out
sub
mov
mov
mov
xor
jnp
lret
sub
push
add
inc
shlb
add
xchg
ds
jno
cmp
shl
repnz
push
xchg
and
mov
add
or
addr16
sub
lahf
sbbb
sarb
pusha
ret
lods
cli
or
xor
jp
push
or
adc
mov
cmp
xor
mov
jb
cmp
setp
data16
mov
inc
aaa
and
mov
mov
pop
xor
jo
fs
aaa
lret
nop
stos
addr16
jg
mov
pop
mov
mov
movsl
sub
les
cmpsl
cmpsb
pop
cmp
test
sbb
pop
lahf
inc
mov
pop
sarb
movb
sub
cmp
inc
push
out
aam
push
pop
xor
mov
pop
cmpsl
and
shl
push
into
and
push
jp
and
cmpsl
stc
pop
inc
cltd
jl
sbb
push
dec
jecxz
fcompl
mov
pop
jge
mov
or
inc
fdivs
pop
je
fadds
jae
adc
or
mov
nop
push
jns
fistps
lret
ret
fadd
jae
and
push
jl
or
sbb
outsb
adc
or
push
inc
je
in
rcl
push
push
mov
roll
jmp
scas
jae
punpckhdq
push
js
arpl
inc
ljmp
or
xchg
imul
add
push
sbb
scas
pop
xchg
and
test
pop
inc
adc
mov
sbb
push
jmp
mov
shrb
fcomp
outsb
mov
movb
rclb
movsb
cmp
mov
inc
loop
ret
test
leave
lods
inc
inc
jge
js
inc
clc
xchg
add
pop
or
add
cmp
adc
sbb
pop
add
dec
dec
cwtl
xorl
lods
pusha
negl
add
ljmp
xor
and
inc
jmp
mov
pusha
int
js
imul
scas
xchg
cmp
test
imul
addr16
iret
jg
leave
lods
add
push
popa
clc
cld
jns
insl
es
orb
call
mov
xor
or
data16
inc
adc
mov
cltd
mov
jo
cmp
lcall
sbb
mov
insl
imul
dec
mov
fimull
xchg
stos
mov
test
cmp
xor
scas
movsl
out
sahf
fdivrl
sbb
mov
sub
xchg
jmp
mov
and
imul
subl
push
aam
add
and
testl
mov
jo
aam
inc
stos
push
std
sbb
push
and
xor
into
into
pop
out
sahf
jp
dec
sub
fwait
and
xor
mov
rorb
popf
mov
mov
cmc
outsl
loope
shlb
mov
fistl
add
push
icebp
popa
je
push
int
push
and
fucom
addr16
push
ss
loop
outsb
fwait
push
scas
js
jl
and
idivl
call
fidivrs
pfcmpeq
scas
xchg
pop
push
jo
adc
fbstp
mov
xchg
push
and
jb
cmp
mov
stos
push
mov
add
mov
jo
xchg
clc
push
xor
daa
pop
cld
decb
inc
insb
vpmadcsswd
xchg
int
in
ja
sti
adc
cmc
mov
jecxz
and
xchg
das
add
jne
addl
test
push
stc
xor
xlat
pop
sub
andl
les
or
jmp
sbb
mov
inc
pop
insl
xchg
cltd
fs
lods
pop
jne
jecxz
xchg
in
int3
push
daa
add
jmp
lods
shlb
pop
movsb
xorb
jns,pn
pop
mov
cmp
add
mov
dec
loop
aam
sbbb
nop
mov
push
fmulp
push
mov
lcall
outsl
xor
ss
jbe
inc
mov
into
scas
ret
mov
inc
bound
inc
dec
mov
sub
dec
adc
cwtl
xlat
outsl
push
push
testb
js
fnstsw
or
pop
mov
add
lahf
test
ljmp
xchg
sub
nop
adc
cmp
dec
in
mov
or
push
into
add
dec
test
loop
pop
das
cmpsb
pushf
fidivs
movsl
jmp
ret
xor
insb
add
lret
into
cs
les
in
test
and
int
dec
test
sarb
push
lcall
sbb
pop
add
jmp
jmp
mov
sbb
andl
mov
fildll
pop
add
ja
inc
and
pop
xor
sub
add
inc
jmp
sbb
hlt
or
cs
add
rolb
clc
pop
iret
pop
cmpsb
mov
xchg
mov
fwait
push
xchg
cmpsl
add
mov
fstpl
or
push
hlt
adc
or
xor
loopne
enter
nop
lahf
xor
jp
mov
aas
adc
xor
xchg
arpl
xlat
jbe
xchg
jne
enter
xor
pop
out
into
scas
mov
mov
imul
seta
test
pop
aam
jno
ljmp
mov
mov
cmp
sbb
mov
inc
pop
cmpl
lahf
inc
sahf
dec
popa
int
outsb
add
and
popa
jo
loop
pop
mov
ljmp
and
add
testl
jp
ret
xchg
out
or
in
or
ds
pop
lods
mov
or
ljmp
hlt
dec
xchg
fsts
lods
push
pop
sub
addr16
lods
or
inc
cmp
out
inc
and
sbb
and
lods
in
out
call
in
mov
orl
pop
je
lea
mov
or
insb
xchg
or
into
mov
dec
cs
repnz
clc
or
cmp
mov
or
mov
call
dec
orb
xor
lods
pop
lock
repnz
dec
fs
sub
icebp
xchg
fdivrs
je
mov
adc
fstpl
dec
scas
dec
fdivrs
mov
fnsave
push
andb
stos
rolb
sub
je
fnstcw
in
dec
and
pushf
inc
sbb
inc
popa
insb
fistpl
out
adc
add
push
outsb
add
add
jne
push
sub
cmp
loopne
mov
or
es
jb
adc
and
pusha
out
mov
dec
push
cltd
sub
add
pop
cmp
test
repz
pop
pop
jmp
cmpsb
pop
lretw
stos
fmul
pop
sub
lret
push
rorb
shl
jmp
sbb
lahf
nop
cmp
sbb
mov
js
jne
out
test
push
stc
push
sti
jae
mov
add
mov
mov
xchg
jmp
or
es
cmc
push
push
jmp
popf
filds
movl
lea
shrl
stos
mov
sub
add
pushf
das
cmp
push
xchg
test
or
out
push
rcrb
fnstsw
jne
dec
mov
mov
xor
xor
or
cwtl
dec
es
shll
mov
mov
int3
sbb
dec
out
in
iret
bound
cmp
xor
dec
push
push
pop
pop
in
scas
cmp
scas
cmc
mov
mov
push
xchg
repz
pop
cmp
add
cmp
cld
sub
sbb
cmp
or
adc
and
std
std
aam
and
pop
jl
daa
sub
popf
mov
sub
cmp
sub
xchg
inc
mov
in
es
and
in
or
jns
jo
mov
pusha
jge
insl
ficompl
repz
sbb
es
add
mov
adc
movl
jl
sub
mov
push
repz
sarl
xchg
cs
int3
rorl
daa
jge
jns
mov
mov
cmpb
iret
out
dec
inc
pusha
xor
xchg
popa
dec
mov
je
inc
loope
inc
popa
xor
mov
pop
sbb
mov
cli
cmp
jle
rcrl
lea
inc
scas
out
enter
xchg
jns
test
fistpl
icebp
imul
stc
out
fwait
jmp
xchg
xchg
mov
std
xchg
int
test
mov
xchg
jge
cli
inc
loop
pop
adc
idivl
add
mov
xor
mov
cmp
xchg
sub
push
mov
jns
mov
fldenv
or
hlt
ja
std
xchg
jmp
jnp
in
fsubs
xchg
mov
cmc
in
cmp
sub
js
inc
pop
out
cmp
pop
test
mov
mov
ljmp
lea
movsl
rol
iret
sbb
and
loopne
insl
scas
lods
cmp
imul
push
dec
adc
loope
cmp
call
mov
std
add
test
in
jl
dec
cltd
add
fwait
jl
sbb
sbb
mov
clc
xchg
pusha
jp
sahf
jp
sbb
stc
leave
push
adc
cltd
aaa
and
movsl
lahf
push
add
mov
pop
repnz
and
xchg
stos
mov
sub
cmpsb
xchg
sub
pop
or
hlt
bound
and
sbb
cmp
sub
push
push
inc
jne
push
push
mov
fists
nop
jecxz
stos
pop
mov
xchg
sub
push
scas
mov
subb
adc
jge
xor
or
add
imulb
popf
pop
lock
out
sbb
mov
pushf
xor
aam
mov
dec
mov
ficompl
xor
xor
jecxz
mov
sub
imul
cmp
xchg
inc
jecxz
jge
data16
fldl
add
jl
sub
vpunpcklqdq
sub
loop
mov
dec
lock
pop
xchg
inc
scas
add
fistpl
mov
cltd
push
jg,pt
push
and
daa
or
adc
add
dec
mov
addl
testb
in
dec
mov
stos
jg
decl
nop
adc
or
and
stc
nop
rol
scas
js
pop
scas
pop
lret
cmc
xchg
pop
ret
mov
dec
sbb
das
xlat
enter
push
pop
inc
mov
cmpl
movsl
cmpsb
inc
adc
in
sbb
or
xchg
jno
push
or
fiaddl
mov
add
ss
cmp
cmp
and
push
mov
int3
and
test
xchg
push
inc
lods
mov
iret
ja
loopne
stos
idivl
shll
imul
jl
arpl
xor
or
jne
outsl
pop
jae
cmp
sarb
addb
enter
adc
andl
mov
imul
jmp
sbb
icebp
cmp
scas
xor
mov
dec
mov
loope
sbb
ds
jmp
shlb
out
push
out
insb
enter
loope
int
mov
addr16
pusha
xor
or
inc
movups
push
fwait
jle
and
push
sub
andb
jb
sbb
cmpl
sbb
pop
popf
push
jmp
and
dec
mov
aas
dec
cmc
mov
in
pop
xchg
and
addb
out
inc
lahf
sub
xor
adcl
mov
lahf
jp
in
jmp
gs
xor
pop
outsl
lret
lret
xor
mov
xor
jns
inc
pusha
mov
in
jno
mov
icebp
mov
inc
fldenv
js
lods
or
mov
add
enter
pop
leave
xorb
frstor
push
jmp
mov
mov
cltd
jle
push
push
nop
daa
jae
cltd
sbbl
sub
xor
fnstcw
jo
shrl
inc
push
and
push
arpl
and
cmp
push
int
rcl
cmp
sahf
jp
ret
pushf
and
lahf
dec
mov
loopne
mov
lret
insb
sub
lret
mov
add
cmp
adc
ret
fists
push
cli
mov
xchg
and
xchg
scas
cli
mov
fnsave
cltd
test
jo
shlb
cmc
test
xor
inc
mov
sbb
adc
mov
es
and
inc
lods
call
into
imul
sbb
mov
cmc
cmpsb
jne
push
inc
xchg
int
jp
add
or
test
fisttpll
or
fnsave
or
sub
push
push
mov
or
push
test
fxch
movsb
mov
int
clc
inc
or
pop
mov
dec
arpl
mov
jecxz
jbe
adc
orb
pop
push
mov
adc
lret
cmp
subl
xchg
js
mov
add
xchg
movsl
insl
out
enter
dec
or
xor
sub
pop
pop
push
xor
movsb
ret
das
pushf
dec
insb
pop
jp
dec
loope
mull
aad
xchg
cmp
cld
jg
dec
cmp
idivb
cmpsl
in
icebp
adc
push
mov
xchg
xlat
dec
cmpsl
push
lock
vpblendd
cld
sub
iret
std
pop
call
cmp
leave
fnstenv
outsb
pop
push
xchg
adc
fisubs
popa
jle
push
add
adc
jmp
fwait
pop
lea
lea
jae
lcall
push
sub
shll
cmp
ret
sbb
into
out
mov
xor
hlt
cmp
cmp
dec
insb
cwtl
inc
in
xor
lods
adc
pusha
xchg
adc
jnp
lea
aas
xchg
jnp
lret
xchg
add
cld
ret
les
inc
push
pusha
aad
in
repz
xchg
data16
and
mov
push
repz
cmp
clc
leave
inc
in
mov
inc
cli
sbbl
movsl
cmp
daa
stos
lock
sub
add
data16
shrl
inc
shl
bound
into
xor
add
js
add
sarb
iret
add
aaa
ret
rolb
pushl
sub
arpl
mov
xor
cmp
mov
mov
into
pop
jo
adc
jecxz
cmp
divl
dec
outsb
mov
or
mov
test
fiaddl
xor
xor
xchg
pop
sti
jbe
mov
mulb
mov
push
addb
add
and
scas
es
ffree
mov
jae
pop
jmp
jmp
in
mov
sub
aam
mov
stos
lcall
jle
movsl
lock
add
insl
filds
icebp
xchg
add
fdivl
enter
iret
out
stos
add
ficoml
xor
mov
aad
mov
ret
clc
mov
cmp
sbb
push
xor
lahf
add
out
shll
dec
in
sub
iret
mov
xor
testl
mov
jnp
ret
movsb
scas
mov
les
adc
ja
xchg
pop
test
inc
nop
push
xchg
push
inc
inc
test
movsl
xor
jnp
push
out
jns
inc
in
dec
cs
mov
push
fiaddl
js
xor
lret
mov
enter
adc
fldenv
andl
adc
xor
cltd
and
outsb
fistpll
data16
outsl
inc
push
push
mov
sub
jo
movsl
mov
pop
mov
pusha
sbbb
loope
cmp
js
inc
and
push
popf
dec
mov
push
jmp
je
loop
xchg
insl
rolb
imul
cs
pop
xchg
jle
xor
mov
stc
xchg
out
push
clc
pop
mov
lods
sbb
xchg
int
push
inc
add
sub
in
jne
xor
andb
push
inc
cwtl
aad
call
jl
push
xchg
adc
sub
push
setg
in
fs
bound
sbb
bound
pop
ljmp
and
iret
lret
lret
fs
mov
adc
fwait
mov
push
cmpsb
or
jg
cmpsb
arpl
adcb
out
cmpsl
xlat
fwait
pop
outsb
cld
push
rcll
stc
mov
leave
jg
or
incl
cmpl
fldenv
incb
repz
mov
divl
inc
sti
in
pop
out
inc
loope
inc
adc
cmc
leave
leave
imul
inc
jne
lretw
push
mov
xlat
jne
scas
lea
les
icebp
mov
decl
add
jg
push
lock
inc
call
or
fmull
lahf
lods
or
int3
or
mov
shl
sub
cs
das
inc
inc
and
imul
out
push
or
lods
push
mov
dec
lahf
xor
mov
adc
mov
dec
adc
adc
mov
sti
fimull
or
push
pop
dec
movsl
aam
adc
xor
push
and
mov
adc
daa
mov
or
fnstsw
pop
or
cmp
outsl
inc
inc
jp
pop
xor
add
int3
loope
push
mov
nop
mov
cs
mov
stos
in
test
aam
pop
cmp
mov
cmp
dec
fists
pop
push
jge
test
cmpsb
stos
inc
adc
ret
pop
cld
fsubrl
stc
cmpb
sub
xchg
aas
xor
arpl
adc
adc
lock
rorb
mov
mov
xor
pop
dec
loopne
pop
adc
mov
jle
inc
and
mov
int3
sub
adc
cmp
addr16
jae
push
fimull
mov
movsl
cmp
jp
and
xchg
fsubr
xchg
mov
adc
aaa
test
mov
xchg
dec
xor
mov
aam
xlat
ffree
xchg
xor
pop
pop
cld
outsl
cmp
add
cmp
mov
xchg
stos
nop
out
fucomp
fdivr
lret
out
ss
das
add
xchg
mov
stc
dec
lods
nop
andl
pop
dec
rol
fwait
in
or
mov
cmp
movsl
icebp
xchg
stc
push
fimuls
jecxz
clc
xchg
fdiv
lods
sbb
jmp
int
adc
mov
add
cmp
out
or
std
mov
mov
sarb
fwait
push
sbb
xchg
dec
jns
rorl
cmpsl
pop
mov
shll
and
cmp
push
mov
pop
std
aam
inc
mov
cli
pop
vmovups
pusha
idivl
movsb
sbb
inc
inc
inc
imul
push
fmull
mov
aaa
lret
add
mov
ficomps
xchg
pushf
mov
js
mov
mov
sub
pop
pop
xor
cmp
inc
les
imul
sbb
jge
repz
xchg
push
js
pop
mov
or
repnz
mov
xor
js
and
in
les
sub
mov
je
inc
pop
lcall
arpl
shrb
mov
push
rol
les
add
fwait
out
clc
xchg
cli
push
or
mov
sahf
lock
in
clc
mov
jnp
inc
lods
mov
and
xchg
mov
iret
jecxz
cmpsb
cmp
sbb
xlat
pop
cmp
iret
cmpl
loopne
sbb
jl
into
pop
inc
sbb
pop
pop
scas
sahf
out
out
lret
mov
jno
pop
scas
cmp
hlt
repnz
inc
push
mov
rcrb
out
inc
jmp
lock
fdiv
cmp
adc
inc
loope
mov
repz
mov
dec
sbb
pop
cli
pop
lea
sub
stos
mov
ret
aad
push
int3
pop
dec
fldl
ret
into
jns
inc
pop
cs
dec
out
sub
push
push
add
fistl
js
xor
or
push
dec
inc
mov
sahf
fnstsw
mov
push
stos
jmp
push
xor
pop
aad
test
insb
decl
mov
lcall
push
in
jle
leave
jo
adc
out
inc
cmpsl
cmp
xor
ljmp
adc
in
mov
xchg
int3
sbb
out
ss
call
int
cmp
es
dec
push
jns
loope
dec
adc
add
pop
scas
push
out
addr16
sub
jle
mov
or
dec
rcll
scas
xchg
mov
int3
idivb
pop
sub
pop
push
jmp
push
scas
gs
lods
cmp
gs
in
jae
rorb
orl
repnz
sub
jg
orb
mov
xchg
jmp
sbb
jo
loop
jae
mov
das
cmp
fcmovne
inc
xor
xchg
arpl
push
movsl
icebp
cmp
dec
test
xor
sbb
jge
hlt
cli
push
ds
and
jo
mov
ljmp
pop
cmp
sahf
mov
flds
outsl
fdivr
rcrl
mov
pop
pushf
dec
pop
mov
push
lock
movsb
push
movsb
aaa
clc
aad
das
rcrl
sbb
scas
out
je
jmp
cmc
mov
pminub
stc
clc
cmp
cmp
sub
or
scas
inc
cmp
leave
gs
xor
cli
ret
stc
jns
mov
lcall
es
pop
push
add
arpl
mov
pop
fcompl
push
push
pop
jl
lods
jmp
nop
cli
cmpl
xor
xchg
cmp
and
xchg
enter
fcomp
out
xchg
fldl2t
in
sub
bound
shr
inc
into
mov
test
dec
jno
cmp
xchg
test
test
popf
mov
loopne
and
pop
add
icebp
stc
mov
ljmp
mov
js
aaa
fldt
lock
jp
pop
add
pop
jmp
push
cltd
test
push
out
push
mov
and
xlat
cmpsl
xor
dec
mov
jo
aam
pop
push
fucomip
mov
imul
lods
jg
or
or
jo
or
add
mov
ret
dec
std
xor
lods
jno
xor
and
cli
and
and
int3
les
cmp
fistpl
mov
xor
and
imul
inc
and
add
and
popa
xor
mov
cmp
das
outsl
rcl
add
imul
in
test
lods
mov
ret
inc
push
daa
and
cli
xchg
bswap
shlb
rol
roll
ret
pop
incb
sub
dec
aad
mov
outsl
xchg
add
push
rcrb
iret
test
and
std
sub
rcll
adc
jecxz
sub
sub
xor
add
pop
enter
and
stos
inc
pop
mov
push
mov
pop
ja
jge
push
sbb
sub
bnd
and
pop
mov
sub
lahf
push
or
scas
add
dec
jecxz
dec
xlat
loope
inc
lcall
std
dec
call
cmp
sbb
dec
push
int
push
push
icebp
in
pop
jnp,pt
sti
sbb
pop
dec
cmp
call
hlt
movsb
or
mov
iret
or
xor
call
adc
subl
in
mov
mov
shrl
outsl
mov
lahf
pop
cmpsl
add
inc
mov
xchg
push
add
iret
xchg
sub
mov
xor
movsl
xor
lods
push
repz
sarl
mov
pop
xor
ss
cmp
idivb
xchg
arpl
fdivrl
cmp
ret
sbb
outsl
loop
inc
fists
mov
cmp
jmp
lahf
adc
add
js
mov
in
adcl
mov
mov
xor
jmp
cmc
jp
cmp
idivb
lds
jb
lds
call
jb
push
mov
fdivrs
fisttps
pop
sbb
add
xchg
in
cltd
les
mov
pop
mov
fists
push
push
les
mov
lock
fsubl
stc
inc
ja
cwtl
fidivs
test
lods
mov
xchg
shlb
dec
mov
jnp
movsl
fidivl
call
lea
inc
addr16
stos
aad
push
mov
sbbl
xchg
ss
movsl
and
in
orl
lods
pop
and
insb
add
mov
push
aam
mov
dec
test
enter
in
mov
or
jl
push
lods
cmp
or
mov
mov
ss
adc
jnp,pn
fistl
jmp
sub
clc
lock
mov
push
adc
xor
xchg
mov
mov
insb
inc
daa
aad
mov
xor
fldl
into
mov
sub
lods
jne
jno
sub
clc
push
jge
lock
enter
insb
fcmovne
data16
add
sbb
imul
add
sbb
xchg
sahf
cmpsb
jp
scas
pop
cmp
into
stc
dec
jne
aad
sbb
leave
in
cmpsb
push
xor
push
stos
xchg
jge
testl
lea
xchg
pushf
fucomp
int
js
push
inc
test
xor
in
xor
or
pop
push
addr16
xchg
subb
cmp
popf
cmp
push
mov
sub
cmp
xor
jae
jo
jl
popa
adc
into
xchg
subb
repnz
mov
mov
mov
xchg
pop
notb
or
stos
adc
jae
or
in
int
mov
jae
fs
decb
daa
test
dec
test
push
fucomi
shr
ss
fists
xchg
pop
cmp
fsubl
mov
es
mov
mov
adc
push
add
push
nop
stos
fucomp
jb
sbb
push
fbld
in
jnp
inc
loop
jno
mov
mov
ret
test
js
xor
adcl
cmp
loope
testb
inc
out
fwait
and
bswap
add
inc
iret
dec
inc
push
xchg
mov
push
lret
test
leave
pop
lcall
and
daa
inc
stc
test
test
hlt
xor
sahf
xlat
mov
pop
ffree
pop
aam
pop
add
in
insl
lret
mov
and
xchg
sbb
add
clc
ljmp
and
cwtl
incb
dec
add
rorl
in
mov
or
mov
jnp
sub
ss
xor
sbb
or
jl
add
ds
mov
xor
mov
leave
loopne
sahf
lea
pop
jne
or
call
jmp
aam
inc
scas
adc
repz
jne
xlat
dec
inc
call
popf
pop
xchg
js
aam
push
inc
sub
xlat
outsl
cmpsl
jb
ljmp
jno
clc
inc
or
fimull
mov
mov
movsl
shrd
mov
lods
inc
or
pop
push
xor
inc
into
pop
dec
movsb
leave
addr16
es
pop
stos
inc
cmp
dec
ficoms
inc
frstor
out
loop
and
adcl
mov
ds
dec
lahf
std
aam
punpcklbw
test
sub
cli
ss
mov
pop
incb
aaa
sahf
fldcw
sar
xor
adc
pop
inc
in
mov
cmp
dec
in
mov
sbb
add
loopne
repz
cmpsl
les
add
aas
mov
push
push
sbbb
or
xchg
imul
andb
inc
aas
nop
jle
push
dec
fisubrs
push
lcall
jno
sub
dec
dec
sbbl
ja
stos
jbe
loopne
decb
cmp
pushf
xor
jne
push
adc
dec
pop
or
outsl
jg
aaa
xchg
bound
xchg
aam
insl
or
xchg
sbb
and
notl
cld
inc
test
xor
push
mov
push
lahf
mov
dec
cmpsb
int
outsl
adc
scas
push
mov
mov
arpl
push
mov
xchg
sub
jl
xchg
jnp
enter
or
das
mov
xor
insl
add
addr16
inc
lea
xlat
mov
int3
scas
add
sub
xor
mov
cmp
push
dec
cmp
or
and
or
shll
or
lahf
jns
fwait
lods
mov
mov
jmp
dec
add
mov
mov
out
or
xor
pusha
lds
mov
cs
ror
sub
mov
mov
imul
dec
pop
xor
inc
xchg
lcall
nop
dec
mov
out
jo
insl
lds
mov
shll
stos
inc
sahf
lds
rol
jmp
outsl
cmp
sub
popa
jae
test
cmp
cmp
dec
mov
jge
lret
addr16
cmp
push
cmpsb
clc
and
mov
lahf
cs
enter
scas
jmp
fdivl
aas
xchg
sub
pushf
lods
push
cmp
lret
repnz
fwait
pop
add
stos
xchg
sub
lds
jae,pt
mov
mov
inc
sti
push
pop
shl
mov
cld
inc
adc
rorb
jecxz
or
sub
pop
xchg
push
stos
sub
mov
hlt
xchg
pop
mov
pop
ds
ja
outsl
add
rorl
pop
jns
clc
aas
fistpl
cmp
lds
popf
hlt
mov
cmp
pop
xchg
daa
fsubrs
outsb
stc
scas
inc
jne
pop
jno
xchg
lret
jnp
fwait
loope
mov
sub
or
nop
hlt
lcall
xlat
mov
out
sbb
popl
add
lcall
add
xor
dec
lcall
push
loop
pop
jae
push
movsl
and
sub
mov
rcrb
xchg
mov
sbb
and
sub
mov
sbb
add
push
clc
loop
pusha
adc
fnsave
je
pop
es
xchg
push
mov
sbb
cmp
insl
js
jb
or
sbb
jne
fsubr
rcll
push
inc
enter
icebp
mov
or
aas
inc
fisttpll
test
sahf
add
mov
lock
std
and
jnp
fnstenv
shll
push
push
mov
fisubrl
shlb
je
fisubrs
inc
xchg
sub
pushl
inc
sbb
pushf
out
sub
jle
push
aad
mov
push
lret
arpl
xor
cmp
insb
push
xchg
push
add
and
push
fwait
repnz
adc
out
or
xor
mov
xchg
bound
shr
mov
and
push
push
gs
das
enter
outsl
jns
cmp
jle
insl
test
les
pushf
dec
repnz
fistps
cwtl
and
aam
inc
push
stos
lcall
and
popf
xchg
lds
mov
std
pop
hlt
call
sahf
ss
pushf
and
outsb
mov
cmpsb
mov
fcmovu
sub
mov
fimuls
pop
sbb
iret
jp
mov
dec
fmuls
shl
mov
aad
xchg
sub
dec
mov
out
mov
jle
xlat
mov
into
push
lock
xchg
in
test
jae
jle
xchg
mov
lcall
idivb
dec
jnp
add
iret
xchg
out
loop
insb
fistpll
or
rcrl
and
mov
inc
xchg
mov
xor
bnd
mov
or
mov
adc
sub
push
jecxz
push
sbb
or
add
sub
dec
cmpsb
test
cmp
ss
iret
mov
std
cltd
pop
jnp
adc
pushf
out
mov
fidivrs
xchg
sbb
cmp
add
lret
bound
jns
fnstsw
js
dec
adc
jnp
xchg
rcrl
xor
and
sbb
fiadds
sbb
cmp
rorl
lahf
and
loop
adc
ret
cmc
xchg
pop
fsubrs
jp
in
mov
mov
leave
in
test
pushf
mov
int3
push
cmc
movsb
mov
in
mov
in
mov
pop
jbe
es
cli
out
mov
sbb
mov
pop
mov
pop
lea
stos
lret
pop
xchg
int3
jmp
loopne
jbe
lea
dec
call
xchg
out
loopne
out
add
test
enter
push
out
adc
scas
jo
and
mov
aas
jmp
inc
inc
aas
mov
cwtl
das
cmpsb
in
into
gs
stos
dec
cmp
in
push
jle
inc
pusha
mov
jno
test
xlat
sub
mov
cmp
pop
and
call
lds
stos
lods
xor
aaa
xor
and
iret
pop
lcall
or
mov
mov
testl
and
lahf
sub
mov
daa
out
mov
fidivrl
fdivrl
rcrb
inc
lret
mov
mov
js
aas
mov
xchg
add
cmp
mov
ds
mov
pop
and
aaa
xor
stc
testb
xorb
imul
inc
inc
sbb
inc
pop
cltd
mov
cwtl
jmp
iret
inc
mov
lret
xlat
pop
out
xor
inc
sub
adc
aaa
mov
xchg
fisubrs
dec
adc
lret
xchg
sarb
cld
pop
jbe
cmpsb
out
mov
push
jne
repnz
pop
popa
or
pop
cwtl
out
loope
mov
sub
sbb
push
out
aas
pop
frstor
mov
jge
and
sbb
inc
lods
aaa
cmp
or
aaa
in
push
sub
lds
jmp
lods
fisttpll
mov
data16
loop
add
out
jle
scas
shrb
jl
or
sub
daa
cmp
lret
in
sub
push
neg
xor
stc
push
xor
or
sub
push
add
push
test
pop
mov
test
pop
mov
add
and
mov
xor
lret
inc
fstpt
icebp
mov
push
mov
insb
add
decb
xor
jnp
xchg
out
mov
sbb
mov
pop
out
cmp
insl
int
fwait
lds
sub
out
pop
sbb
xchg
sub
adc
jp
mov
test
inc
xlat
push
scas
leave
test
pop
icebp
stos
adc
xchg
scas
inc
test
jge
pop
mov
add
imul
rcrb
shrb
idiv
ficoml
rcr
jle
fistl
xchg
lahf
and
lcall
shrl
sbb
sbb
or
cmp
and
cmc
push
repz
or
add
xchg
fcmovnu
lahf
jp
icebp
shll
ret
in
cmc
shlb
pop
mov
cmp
clc
mov
lret
in
leave
xor
sbb
mov
and
aaa
push
push
push
lods
jg
sahf
sbb
push
mov
push
out
pop
cmc
pop
jns
push
addr16
pushf
scas
nop
push
cmp
stc
js
enter
lea
and
jne
int3
enter
rorl
scas
and
out
jp
mov
lds
cltd
add
sub
aas
lods
mov
xchg
xor
mov
sti
mov
mov
adc
or
push
pop
or
pop
cmp
cmp
shll
ss
xor
test
xchg
insb
jno
jns
mov
hlt
js
aam
insl
and
int
popa
inc
out
in
mov
out
and
sub
aas
arpl
jge
lds
in
push
jmp
add
movsl
jae
pop
out
insl
inc
lods
adc
and
jmp
mov
fwait
sar
jnp
shlb
ficoml
fldenv
mov
cmc
ret
jo
imul
jmp
push
dec
push
or
out
push
mov
orl
pop
lea
arpl
dec
adc
pusha
or
xor
adc
fwait
sub
sahf
cmp
jmp
pop
mov
or
xlat
pop
push
rorb
repnz
mov
repnz
adcb
add
mov
xchg
cwtl
inc
test
jecxz
jb
es
xchg
frstor
cmp
outsl
cmp
jns
mov
jmp
rcr
aam
and
push
dec
add
mov
lea
push
pop
and
push
sbb
add
xor
push
or
out
mov
mov
aad
cwtl
lea
inc
gs
fs
jns
test
shll
fnstenv
mov
notl
jp
aad
jge
into
push
sbb
xchg
mov
mov
popl
jl
mov
ljmp
call
sbb
ds
mul
rclb
subl
sti
xchg
adc
mov
lea
lods
inc
lds
adc
push
inc
dec
lods
and
or
inc
lea
lret
xchg
pop
xor
cltd
jle
cmp
sbb
or
pop
dec
out
inc
xchg
repz
bound
pop
adc
mov
dec
popa
mov
mov
pop
addr16
ror
xchg
mov
sahf
or
mov
loope
or
mov
or
pop
ret
mov
and
mov
icebp
xchg
mov
lret
ret
xchg
repnz
shr
mov
ss
mov
cltd
or
ja
or
and
add
sbb
xchg
mov
int
or
pushf
mov
test
jnp
fwait
rorl
repnz
setno
sarb
aam
jecxz
xor
pop
popf
or
sbb
loope
sub
int3
insl
stos
xchg
mov
xor
mov
clc
xchg
in
adc
jg
sbb
insl
fmul
xchg
ss
add
outsl
add
inc
jp
iret
push
je
sub
mov
or
sahf
imul
mov
add
into
cmp
test
movsb
addps
inc
in
inc
sub
inc
xchg
mov
lret
and
fisubrl
sub
add
inc
dec
hlt
jns
dec
decl
dec
nop
je
jl
std
push
jo
jp
pushf
sarl
test
aas
int3
and
stc
repz
testb
or
push
test
jne
lds
xchg
sbb
xchg
iret
in
pop
jmp
xor
xor
out
test
inc
repnz
mov
sub
je
aam
mov
jae
mov
repnz
push
or
xor
jecxz
inc
lds
dec
sahf
out
int3
xchg
mov
roll
inc
aad
pop
xor
adc
aaa
add
or
jb
mov
mov
lock
stc
sub
aaa
inc
imul
adcl
out
adc
adc
mov
testl
dec
jns
xchg
push
lret
cmpsb
or
push
pop
imulb
frstor
popf
hlt
cmpsl
mov
unpcklps
or
add
cmpsl
adc
mov
test
inc
sti
adc
inc
dec
test
jae
pop
fmull
int
inc
gs
test
cmpsl
ds
push
sbb
cmc
cmp
cmp
pop
cmc
shrl
jbe
addr16
jecxz
mov
cmp
lods
mov
sub
inc
leave
jne
das
addr16
dec
loop
enter
mov
mov
cmpsb
jl
xchg
jg
testb
cli
gs
sbb
shrl
test
xor
or
xchg
movsb
pop
test
dec
dec
ja
out
xchg
sub
cwtl
sub
std
movsl
mov
dec
sbb
jge
jb
stc
mov
adc
xchg
add
imull
insb
add
call
push
in
xlat
mov
inc
or
mov
inc
lcall
inc
fnstenv
sti
test
xchg
cmp
add
rcrl
ret
fcomip
jg
cmpsl
ds
shufps
das
mov
lods
mov
xchg
xor
imul
inc
or
mov
inc
ret
cmp
int
cltd
jno
pop
mov
inc
and
inc
and
movsb
xor
push
es
imul
mov
mov
popa
or
stos
jbe
shrb
and
adc
and
cmp
xor
or
mov
int
inc
sbb
mov
clc
les
push
push
pop
mov
adc
cmp
sbb
jl
mov
mov
call
rcl
mov
loope
out
adc
popf
push
mov
lret
bound
mov
mov
cwtl
cmpb
jg
pop
add
mov
and
notl
loope
inc
jle
int3
scas
push
pop
sub
add
add
and
repnz
and
pop
test
add
lcall
mov
pop
outsl
std
int3
lret
cmp
push
es
sahf
sub
iret
in
and
mov
xchg
cs
sbb
das
daa
cmp
nop
pop
hlt
inc
sahf
inc
fbld
sbb
imul
in
jp
je
pop
mov
xchg
adc
stos
xchg
or
sahf
jbe
and
shl
mov
sbbb
stos
add
or
and
xchg
sub
dec
dec
inc
xor
xor
iret
or
in
pop
sub
cmpsl
pop
adc
mov
mov
pop
stc
xor
push
ret
hlt
jg
fs
or
mov
loop
jo
outsl
add
shll
into
push
inc
jecxz
fstpt
jo
and
xchg
out
lods
inc
jo
jb
sbb
add
sarl
fildl
adcl
add
jp
xor
rcl
xchg
add
outsb
addr16
mov
adc
inc
sbb
jle
out
sub
mov
lcall
cwtl
and
in
pop
jbe
dec
xchg
pop
cmp
pop
jbe
mov
fldenv
fldenv
xrelease
loop
pop
lds
ret
orl
mov
icebp
vmovq
mov
scas
inc
popf
je
scas
fs
int3
mov
lods
repnz
movsb
jo
jne
int
repz
cld
xchg
ja
sub
test
adcb
and
cli
add
ja
insb
clc
cmpl
pushf
cwtl
dec
pop
lock
aas
add
ja
add
mov
arpl
dec
or
aad
and
cmp
pop
les
cmp
leave
cmpsl
scas
dec
adc
fwait
vpsubusb
inc
jno
mov
add
push
popf
and
hlt
leave
into
and
jmp
fisubrl
and
push
nop
push
stos
mov
fidivl
leave
iret
cmp
dec
cli
sti
mov
lods
dec
lock
in
aam
mov
test
bound
lahf
mov
lret
pop
cmp
mov
push
sub
inc
lcall
fnstenv
jle
aaa
sub
xchg
push
fmull
add
jb
insb
movsb
push
addr16
jg
les
sbb
je
lea
pop
xor
fwait
test
push
add
loopne
cli
loop
sub
repz
jp
sbb
mov
in
jl
scas
mov
enter
addb
mulb
rorb
push
mov
sub
inc
cld
xchg
idivb
sbb
dec
xchg
xlat
outsb
pop
cmp
imul
cmpsl
sbb
arpl
dec
jge
sbb
jecxz
enter
mov
or
mov
nop
dec
inc
aad
int3
mov
ffree
pop
mov
mov
or
pop
sbb
dec
jecxz
push
xchg
lods
pinsrw
sub
and
lds
mov
pop
or
iret
les
es
jb
jns
adc
jg
mov
pusha
jl
adc
xor
pop
dec
and
sarb
jl
dec
inc
popf
sahf
arpl
dec
andb
fdivrs
stc
nop
aas
jp
fwait
stos
pusha
sbb
or
push
andl
fcomp
stc
fidivl
stc
xlat
scas
inc
lret
cmp
std
addr16
out
or
lods
rolb
cmpsb
cmp
push
jmp
movsl
leave
test
push
test
cmp
ja
pushf
mov
adc
pop
movsb
fimuls
lea
repnz
outsl
cmp
into
loope
int
jbe
pushf
cmpsl
out
sbb
or
push
jo
mov
push
data16
into
xchg
adc
mov
sub
inc
mov
leave
inc
les
mov
aad
add
sub
movsb
cmpsl
inc
fs
pop
push
cmpsl
cmc
stos
inc
daa
inc
mov
std
push
dec
push
test
outsb
xchg
sbb
adc
add
xchg
adc
sbb
loopne
push
lods
xchg
inc
outsb
das
testl
jge
fwait
shr
jo
add
clc
and
lods
inc
cmpsl
inc
jp
dec
fwait
push
push
mov
push
movsl
mov
rol
out
jecxz
inc
xchg
and
push
leave
and
xor
mov
mov
shr
aam
jg
sbb
lea
add
orb
scas
or
jae
nop
mov
ret
lret
aaa
call
push
inc
pop
movsb
enter
mov
mov
cmc
sub
daa
lods
js
es
mov
pop
in
testl
hlt
add
clc
mov
rolb
push
jp
add
fsubr
lods
xor
das
into
mov
popf
lods
faddl
or
jmp
inc
pop
cs
mov
jae
xor
xlat
mov
or
cmp
out
icebp
pop
fnstenv
cmp
iret
movsb
test
call
stos
jp
popf
gs
das
cmp
mov
push
insl
inc
mov
daa
es
xor
mov
or
push
lret
ja
mov
jo
iret
cmpsb
xchg
mov
inc
insl
rcrl
mov
rcrl
ds
inc
clc
in
cmp
fwait
imul
sub
xor
sub
push
sbb
les
pop
mov
mov
or
sti
adc
lcall
and
mov
xor
inc
sub
add
das
imul
int
push
inc
sbb
fcmove
push
pop
stc
popf
rcrl
das
push
cltd
dec
stos
lds
movsl
inc
pop
inc
cmp
inc
mov
or
jbe
xchg
adc
cmp
jg
cmpsl
shlb
movsb
inc
arpl
imul
xchg
lret
imulb
xchg
xchg
enter
int
jne
fsqrt
lds
cmp
das
cmp
xchg
mov
add
fsubs
and
and
in
std
jmp
sbb
std
cmp
ljmp
aam
orl
adc
adcl
adc
jae
xor
pop
std
and
test
outsl
mov
cwtl
js
pop
lcall
mov
cwtl
mov
enter
pusha
in
cmpsb
fcmovb
sub
and
cmpsl
push
into
mov
call
ret
test
mov
mov
lock
mov
mov
xchg
int
stc
dec
lods
es
in
out
int3
jbe
mov
push
adc
test
sub
and
jp
mov
loop
dec
andb
ds
add
sahf
out
add
cs
and
mov
xchg
xor
imul
nop
push
xor
cltd
mov
movsb
in
aas
dec
push
add
fsubr
iret
loope
lret
jbe
sbbl
pop
or
jmp
cld
int
out
sub
mov
inc
int3
xor
xor
and
orl
mov
into
push
jbe
sub
or
std
clc
rcl
xchg
movsl
icebp
jne
rorl
add
js
test
stos
popa
stos
test
xor
mov
mov
lds
pop
arpl
fsts
add
notb
es
ss
fdivs
faddl
jns
push
jnp,pt
inc
push
out
in
mov
cs
xchg
scas
mov
adc
sbb
pop
fsubs
loop
pop
stc
movsb
add
repz
inc
stc
push
fadd
fcoms
cli
mov
pop
cld
push
push
cmp
inc
jmp
in
sbb
pop
xor
hlt
jne
cmp
push
xor
fcoms
dec
ret
xor
jae
cmp
lret
push
jle
xor
and
addl
sbb
lret
jbe
dec
inc
mov
iret
shlb
xlat
push
jecxz
pop
dec
test
int3
inc
addr16
pop
into
iret
test
cltd
fsub
inc
push
jmp
add
test
add
std
stos
adc
push
mov
push
xchg
std
add
mov
jo
in
mov
mov
test
sti
push
lea
sbb
dec
xchg
or
ds
imul
xor
fists
adcb
adc
lods
sahf
jno
mov
mov
jbe
cmp
shlb
inc
icebp
sti
pop
inc
in
and
movsl
or
xchg
lods
test
jecxz
cmp
push
sub
push
call
dec
fdivl
xor
cwtl
scas
sti
movsb
je
das
lds
ds
into
jnp
xchg
inc
and
test
sub
dec
aas
xchg
sub
pop
mov
fiadds
data16
and
lea
sub
ds
jp
push
mov
loopne
jmp
or
mov
dec
dec
sahf
into
mov
dec
cmp
pop
lahf
stos
mov
enter
outsl
sbb
mov
addl
cmp
push
imul
inc
aaa
into
push
jb
cs
push
and
push
mov
xchg
xor
fstpl
dec
pop
sub
in
pcmpgtd
sub
andl
aaa
pop
xor
dec
pop
fistps
mov
cwtl
cs
lods
inc
fistpll
xor
sarl
mov
and
aam
hlt
dec
and
fs
call
sbb
jecxz
andb
add
jns
inc
sahf
xchg
inc
stos
inc
data16
mov
popa
scas
jb
and
je
jl
fs
mov
jmp
fisttpl
rorl
inc
and
or
iret
xchg
push
mov
push
push
dec
sbb
pop
adc
mov
shrb
pop
cmpsb
pop
int3
cmpsb
sbb
xchg
les
inc
push
dec
cwtl
inc
loop
out
mov
push
or
mov
imul
sahf
adc
mov
dec
lock
jns
adc
iret
sub
pop
mov
push
jno
aad
out
mov
lahf
cmc
nop
cmp
dec
mov
dec
shrb
mov
icebp
or
out
xor
xlat
sbb
iret
xchg
mov
sub
xor
out
push
addr16
pop
or
jno
cmp
imul
call
push
stc
push
xor
cmpsl
ret
es
mov
jmp
sar
xor
cmp
cli
push
in
sub
lahf
hlt
sahf
inc
pop
xchg
mov
xor
ja
adc
sub
ss
xor
cmp
xchg
ja
std
ficoms
sbb
xchg
cmp
repz
mov
xchg
sub
adc
mov
sbb
adcl
and
jo
adc
inc
stos
inc
arpl
mov
arpl
xchg
push
sbb
fstpl
or
fidivrs
sub
mov
repnz
xchg
test
adc
enter
pop
mov
out
clc
sub
stc
cmp
xchg
mov
sbb
fisttpl
out
push
negb
dec
push
jmp
inc
pushl
adc
hlt
lret
or
aad
cmp
inc
add
sbb
mov
loopne
daa
adc
jns
clc
cli
push
incl
sbb
jo
xchg
repz
ret
xor
in
adc
cmp
jmp
or
mov
lret
xchg
add
mov
pop
pop
aaa
enter
roll
aaa
insl
push
test
mov
or
sahf
les
lret
gs
sub
decb
mov
shll
js
mov
jle
fsubl
jl
mov
mov
cmp
popa
lahf
ja,pt
inc
ret
aas
and
mov
ljmp
and
or
pop
aam
adc
cmp
sbb
push
dec
mov
and
mov
iret
adc
ja
js
pop
hlt
popf
fnsave
add
mov
mov
sahf
lods
lods
inc
in
fldt
xor
or
cmpsl
cltd
mov
lret
fwait
push
adc
stc
pop
testb
fwait
fs
in
sbb
mov
push
fistl
dec
mov
cmp
fs
pop
jg
xchg
adc
mov
pop
pop
test
pop
test
shlb
jnp
testl
xchg
push
int
and
mov
mov
iret
xlat
mov
ds
push
lods
pop
push
ljmp
xchg
sahf
xor
sub
mov
or
aam
rorb
sub
cmp
push
mov
push
xchg
xor
aas
pop
in
mov
int
addr16
sub
adc
xor
cmp
aam
insb
jecxz
sbb
adc
sbb
sbb
push
les
push
cmp
mov
movsl
dec
pushl
enter
pop
jno
xchg
pop
std
aad
xchg
jnp
adc
popl
lock
adc
xchg
sub
xchg
cltd
inc
push
jmp
cpuid
jge
or
xorl
xlat
ljmp
mov
mov
xlat
imul
xchg
inc
mov
mov
js
lock
mov
lcall
popf
xor
xlat
outsb
out
cltd
fisubrl
icebp
scas
pop
sub
or
push
mov
xchg
add
shlb
arpl
mov
lret
mov
lret
xor
add
and
jmp
xchg
sbb
int3
mov
dec
mov
enter
add
das
mov
stos
xchg
sub
test
jl
adc
inc
les
nop
insl
mov
pop
and
push
cmp
or
fs
push
ss
inc
imul
push
inc
xor
mov
call
xchg
daa
js
mov
mulb
lods
cmp
out
inc
call
out
xchg
xor
rcrl
test
es
pop
shll
shrl
or
jae
repz
pop
inc
cli
or
out
xchg
das
jge
xchg
mov
das
inc
mov
jmp
lahf
xchg
cmp
cmp
add
cmp
mov
iret
jg
mov
movsl
dec
fwait
pop
leave
imul
mov
shlw
fcomps
add
xor
shlb
mov
fldenv
xchg
insb
inc
xor
or
xor
stos
scas
sbb
ss
push
test
jp
data16
mov
adc
push
pop
sbb
les
aas
xchg
mov
adc
or
je
xchg
js,pn
push
das
cmp
rol
dec
test
sahf
mov
daa
mov
out
mov
add
mov
mov
daa
pop
in
or
inc
mov
leave
mov
mov
sahf
fcoml
add
mov
leave
xchg
pop
leave
mov
mov
lcall
addb
pop
clc
and
seta
clc
dec
fstps
mov
jno
mov
into
fdivrl
mov
pop
mov
pop
inc
push
fsubrl
adc
cmp
outsb
xchg
insl
adc
push
pop
cmp
or
in
fsubrs
mov
ret
std
pop
lds
std
sub
dec
test
test
xchg
jb
sbb
scas
in
fst
and
mov
add
jmp
pop
lds
xor
fs
ljmp
adc
in
sbb
test
cmc
sbb
mov
cwtl
mov
fucomp
test
imul
fdivl
fistpl
mov
ds
dec
dec
push
push
in
and
sar
shrl
add
jg
fs
leave
pop
lcall
and
lds
addl
sub
ret
and
addr16
cltd
push
stos
xchg
inc
ficoms
sub
mov
mov
lods
inc
mov
mov
push
cmp
mov
dec
sub
mov
ljmp
push
xor
mov
jb
jg
andl
jbe
sbbl
aad
lahf
push
jp
fisubs
add
shll
loop
pop
dec
rorl
mov
sbb
push
out
and
lea
inc
add
and
add
or
mov
mov
fst
push
outsb
jle
mov
insb
daa
xchg
rcl
dec
xor
push
outsl
xchg
sahf
inc
mov
loope
inc
gs
imul
cltd
xor
push
jmp
or
jge
shll
push
or
lea
fistpl
out
lret
push
push
jp
cmp
out
add
mov
outsl
subb
push
fucomi
add
mov
dec
pusha
pop
nop
lea
ret
cmp
mov
push
cmp
dec
rolb
mov
sub
inc
jnp
dec
jnp
sub
scas
xchg
or
imul
out
push
hlt
cmp
cs
adc
xor
gs
push
push
push
scas
push
xchg
pop
xchg
xchg
xor
dec
jmp
sbb
in
repz
fcomi
testb
shll
rcr
les
popa
aaa
add
lret
pop
lret
loop
fcmovne
sub
and
pop
pop
pop
mov
dec
out
mov
fsubrl
movsl
pusha
lcall
arpl
data16
adc
test
test
jl
es
sarl
push
es
es
xchg
mov
movl
test
sub
inc
jl
inc
testl
jp
ds
shrb
mov
mov
cmp
and
loopne
clc
int3
sub
mov
sahf
into
sbb
cmp
lds
sahf
pop
outsl
push
in
pop
test
push
cld
imul
mov
fnstsw
mov
push
mov
mov
adcl
insb
jle
jecxz
add
vpunpcklbw
shrl
xor
jb
push
or
add
enter
pop
xlat
push
lret
or
sbb
sbb
xor
and
jle
fwait
daa
adc
out
ret
xor
fidivrl
ret
jle
xchg
push
xor
pop
adc
xchg
mov
cmp
jnp
and
dec
scas
lahf
out
inc
iret
shrl
aaa
mov
cli
jno
inc
addr16
lret
pop
mov
dec
shrl
in
stc
lcall
inc
popf
jbe
or
mov
mov
mov
clc
popa
enter
dec
mov
jne
xor
mov
cmp
pop
and
add
xlat
push
fisttpl
mov
push
mov
and
push
ss
lock
sbb
add
push
in
push
test
cmpsl
icebp
ss
ja
pop
xlat
cmc
mov
mov
scas
push
loopne
sbb
mov
int
xlat
mov
pop
or
jl
xchg
inc
data16
sub
push
jo
out
jnp
in
test
jmp
out
pop
xor
mov
int
xchg
lods
jo
mov
mov
jae
pop
adc
int3
add
hlt
xchg
leave
test
mov
cmp
mov
adc
inc
mov
popa
mov
dec
sbb
push
or
or
divb
jne
inc
rcr
sub
sbb
xchg
xchg
lahf
mov
push
jle
les
loopne
mov
nop
xor
imul
mov
push
jmp
jmp
lods
pop
mov
rorl
test
and
mov
loopne
ret
ja
fstpt
js
inc
push
fdivrs
es
xchg
push
test
rcl
cli
add
stc
jg
dec
jle
mov
in
and
fwait
inc
fmul
std
pop
mov
loope
sub
ja
inc
cli
iret
pop
cmp
push
out
test
popf
decb
mov
imul
xchg
cmpsl
sbbl
add
lcall
mov
bound
add
cmp
xchg
xor
xor
or
fmulp
xchg
add
fidivs
xchg
lods
mov
push
data16
mov
ds
mov
test
movsl
sbb
aaa
popa
sub
pop
dec
cli
xchg
int3
dec
adc
test
jb
lds
arpl
fwait
and
jne
int
mov
mov
adc
lds
mov
mov
cli
push
push
iret
sbb
cmp
in
sbb
xor
push
das
xor
cmpsl
arpl
xchg
inc
push
out
fwait
inc
xchg
inc
or
cmp
mov
dec
fld
mov
rclb
enter
and
adc
mov
and
jne
mov
test
out
adc
sub
jno
dec
into
mov
jmp
add
scas
add
cmp
movsb
scas
les
or
xor
movsb
fwait
sbb
test
mov
add
fidivrl
sbb
jp
inc
inc
inc
lds
xchg
inc
xor
stc
insb
push
jo
cmp
jle
cmp
test
scas
jl
out
adc
xchg
push
imull
movsl
and
mov
faddp
and
rorb
dec
mov
pushf
lods
inc
and
adc
incl
sahf
mov
ljmp
test
into
push
and
pop
cmp
lret
ror
mov
out
xchg
jbe
and
sub
ret
mov
jns
jle
lock
call
out
shll
jp
jnp
add
movsb
pop
mov
loopne
push
mov
push
loopne
or
mov
scas
sarb
clc
fldcw
pushf
pop
xor
fisubl
jnp
or
cmpsl
mov
fcompl
in
out
dec
in
sti
sbb
mov
mov
xchg
adc
cli
shrl
push
mov
mov
fadd
push
pusha
fistl
fidivrl
ror
and
cmp
push
mov
xchg
add
xchg
jecxz
xchg
cmc
rcl
dec
gs
lods
sub
pop
aas
push
mov
loop
mov
pusha
push
and
inc
fistl
int
and
ret
push
sub
dec
sahf
dec
and
jnp
mov
inc
movsb
jmp
jecxz
ljmp
into
xor
add
push
adc
popa
mov
xor
ret
shll
or
or
xlat
jno
push
cwtl
in
inc
jle
xchg
lret
mov
push
mov
punpckldq
jl
dec
pop
jg
dec
pop
lret
outsb
out
jo
enter
dec
movsl
addr16
int
inc
mov
xchg
cli
mov
cld
loope
sbb
mov
jae
pop
pop
xor
lret
lret
xchg
dec
lahf
mov
adc
rcll
inc
jp
cmp
or
pop
lcall
icebp
push
movsl
loop
inc
decb
xor
loop
push
or
mov
push
mov
les
and
lcall
cmp
push
lcall
dec
mov
notb
int
mov
add
jl
jno
jae
adc
sbb
insb
pop
xor
inc
sbbl
cltd
inc
lods
test
test
mov
clc
jle
xchg
std
inc
and
mov
or
aas
jl
hlt
jbe
movsl
cmp
popa
pusha
cmp
aaa
xchg
scas
test
bndstx
test
test
cli
sahf
cmp
fld
xchg
call
xorb
and
mov
jno
push
or
sbb
xchg
xor
inc
repz
in
in
xor
mov
in
mov
in
mov
out
fimull
fsubl
je
mov
add
add
out
adc
int3
jg
mov
ljmp
scas
and
aam
push
dec
bound
aam
shlb
xchg
pop
mov
adc
jns
lret
and
pop
test
cmp
mov
lods
cmp
lret
data16
mov
or
sbb
int
jns
pop
jns
push
or
jmp
sub
jmp
iret
mov
cmp
pop
les
rcrb
pop
adc
xchg
jo
pop
sub
lret
dec
push
xorl
or
fisttpll
cmp
pop
dec
je
sub
xchg
sub
push
ds
fidivs
pop
popf
xor
pop
scas
mov
add
inc
scas
inc
mov
mov
xchg
fdivrp
pushf
and
inc
lahf
xor
add
gs
loop
add
cmc
adc
cltd
jp
and
rdtsc
out
mov
fisubrs
data16
dec
call
addr16
out
push
mov
outsl
bound
mov
cmpsb
test
adc
sahf
jne
scas
xchg
es
push
pushf
int3
dec
push
rcll
aaa
jno
imul
inc
nop
mov
out
push
inc
pushf
jbe
pop
call
dec
xchg
outsl
adc
insb
adc
sub
call
sbb
cwtl
cmc
adc
xchg
jle
jno
cmpsb
ss
lret
in
pop
sbb
dec
iret
imul
push
sbb
popa
cmp
pusha
dec
rcrl
jo
xorb
mov
dec
inc
cmp
hlt
cmp
cs
cmp
inc
out
inc
sbb
mov
jno
lods
ds
test
arpl
imul
sub
mov
stos
dec
pop
mov
mov
cmp
cwtl
out
adc
gs
outsb
push
add
popf
test
or
mov
mov
sub
mov
rcrb
lret
add
jge
jg
popf
pop
xchg
xor
dec
fucomi
mov
xrelease
mov
xor
stos
pop
sarb
mov
jl
xorb
adc
aam
sub
insl
gs
test
lret
mov
addb
pop
jmp
pop
pop
cmpsl
push
push
fidivrs
aam
mov
ja
lret
jg
lret
mov
push
mov
cmp
mov
adc
or
sti
mov
jp
push
push
sub
xchg
shll
jmp
jge
jae
nop
mov
pusha
pop
add
lock
sti
mov
scas
cmpl
cmp
mov
sbb
mov
sahf
fisubs
pop
loope
jb
mov
out
push
mov
jp
and
jmp
sti
pop
popa
inc
or
cmpsl
add
jb
lods
lds
mov
xchg
mov
pop
push
fmulp
mov
ljmp
call
mov
cmpsl
xchg
loope
fsts
jnp
test
fwait
mov
or
add
xchg
pop
pop
ja
aam
pop
add
xchg
mov
inc
and
ljmp
pop
mov
xchg
movsl
sub
stos
and
gs
outsb
xchg
stc
pop
push
xor
and
jp
aad
xlat
xchg
cs
or
dec
in
jne
mov
sub
xchg
outsl
cmp
insb
push
fwait
outsb
push
test
jbe
iret
data16
cmp
inc
sub
pop
or
movsb
inc
cmp
jp
out
jp
adc
add
sbb
inc
lcall
mov
fiaddl
inc
in
dec
sahf
sbb
jp
sbb
insb
mov
pop
ljmp
xor
adc
xor
ljmp
inc
mov
dec
repnz
call
lcall
mov
cmp
cltd
test
push
loopne
pushf
sahf
mov
pop
mov
lock
int3
mov
pop
adc
add
es
scas
or
fadds
cmp
out
subl
in
pop
aad
jbe
jo
xchg
mov
and
mov
xor
pop
mov
int
sbbl
loop
mov
add
pushf
dec
fs
in
fsubrs
inc
adc
cmp
push
sub
imul
xchg
push
scas
out
push
cwtl
or
outsl
mov
cmp
mov
mov
in
lahf
testl
push
xlat
sbb
pop
por
sub
icebp
adc
cs
dec
sub
jne
stc
movsl
ficoml
aad
popa
jp
leave
aas
mov
jo
mov
cli
push
push
sbb
jbe
xchg
adcb
frstor
inc
or
pop
inc
mov
les
repz
or
pop
repnz
cmp
icebp
cmpsb
pop
fsubl
stos
leave
mov
rcrb
test
cmp
loop
sub
loop
lret
mov
lods
enter
stos
das
iret
out
dec
mov
mov
inc
pop
mov
stos
lds
in
scas
adc
xchg
mov
xchg
icebp
xor
popf
bound
mov
sbb
ffreep
xchg
lea
sbb
sbb
lods
mov
sub
add
sub
push
mov
cmp
fmull
dec
shr
add
imul
pop
inc
xchg
int3
leave
loopne
scas
dec
jecxz
or
sbb
std
add
mov
adc
jns
dec
dec
mov
arpl
jecxz
aad
hlt
lods
inc
jmp
lds
adc
sub
out
mov
dec
sbb
inc
pushf
mov
add
in
enter
fcmovne
in
jg
adc
into
popf
xor
jno
adcl
pop
jo
push
test
xor
jne
mov
cld
xchg
in
or
mov
mov
sahf
imul
sbb
mov
mov
das
lcall
sbb
lret
mov
inc
sbb
mov
jecxz
test
scas
cltd
push
dec
cwtl
into
test
inc
or
sbb
mov
mov
xorb
jnp
xchg
add
movsl
mov
loopne
mov
add
sbb
shll
arpl
inc
shl
mov
stos
shll
div
mov
cmp
lret
shlb
popf
jle
jle
xchg
mov
loope
imul
arpl
push
sub
mov
xchg
addr16
add
nop
imul
in
inc
loopne
jg
pop
repnz
xchg
xor
push
popf
cmp
push
inc
lahf
mov
dec
mov
or
mov
xchg
das
or
jb
sbb
xor
in
les
in
lret
dec
repnz
mov
cwtl
mov
pop
movsl
rcll
inc
add
fsts
lock
jge
jmp
xchg
xchg
insb
sbb
ss
xor
lds
loope
pop
out
pop
aas
mov
jl
xchg
cmp
dec
jge
std
imul
xor
jns
jne
adc
inc
sbb
and
pop
push
or
add
mov
jb
shll
jae
jl
lret
adc
test
fcomps
fsubr
jp
push
popa
std
subl
fbstp
mov
cmovnp
xchg
leave
aaa
es
out
jno
mov
mov
hlt
aam
pusha
lret
cmp
inc
and
push
mov
es
mov
and
out
stc
imul
rcrl
in
add
mov
loope
push
or
cmp
cmp
fnstsw
dec
enter
outsl
mov
and
sub
pusha
push
int3
jg
or
adc
out
incb
daa
sub
leave
dec
aaa
push
cli
out
outsb
mov
ljmp
adc
sub
jmp
lods
insb
jl
dec
leave
jecxz
fwait
xchg
ret
lods
dec
jecxz
lahf
adc
lret
xchg
shlb
pop
shll
popa
arpl
cmp
fdivr
in
sub
pop
mov
stos
mov
das
aaa
jns
jbe
pop
jo
fists
cltd
fistpll
fbstp
inc
in
test
cmpsl
mov
in
loope
adc
leave
ret
inc
fs
cli
push
cmpsl
incb
or
sahf
and
adc
and
aaa
pushf
sub
std
xchg
out
jns
mov
jne
inc
jmp
outsb
js
xor
cmp
mov
insl
dec
fnstenv
out
in
pushf
push
inc
lods
inc
jbe
add
xchg
rclb
sub
enter
cmp
lret
push
aaa
mov
pop
jge
and
sarl
inc
ljmp
mov
mov
out
test
jmp
test
mov
lret
popl
hlt
xchg
movsb
xchg
or
cwtl
imul
outsl
add
mov
dec
outsb
les
and
jb
fwait
outsl
arpl
mov
inc
sbb
sbb
cld
sub
cmp
push
js
sub
mov
nop
aad
cmp
and
fstl
adc
insl
jnp
lock
mov
mov
inc
stc
jb
shrl
adc
popa
jne
outsb
repz
and
push
cmpsb
fdivrl
pop
fildl
stos
hlt
js
xor
hlt
push
pop
sub
inc
xor
movsl
aad
loope
lds
test
ret
adc
mov
sti
dec
cmp
pop
iret
shlb
iret
push
mov
push
imul
inc
sbb
repz
hlt
inc
int3
int3
std
les
add
jecxz
aam
in
push
aas
and
sub
loop
fildl
fstpl
aad
stc
lock
cwtl
push
mov
push
mov
test
dec
push
sbb
and
or
xchg
scas
add
mov
ja
push
jmp
xorl
xchg
jno
pop
cmpsl
adc
shll
insb
pop
mov
jae
das
movsl
dec
mov
shll
dec
test
add
or
mov
pushf
scas
insb
aaa
icebp
xchg
sbb
pop
hlt
xchg
call
jbe
je
int
mov
pop
out
enter
mov
movsb
imul
loop
sbb
xchg
fistpll
clc
dec
test
jg
std
push
mov
aam
rcrb
jp
int
mov
addr16
cli
insb
jl
addl
cmpsb
rcr
sbb
adc
daa
imul
push
push
cmpsb
sbb
imul
and
test
mov
sahf
fidivrs
mov
test
inc
pop
aaa
out
mov
mov
inc
inc
fidivl
dec
cmpsl
lock
add
mov
cmpsl
sbb
xchg
xorl
add
mov
jle
fidivl
testb
test
jmp
push
je
out
cltd
test
add
add
xor
scas
push
mov
mov
andb
insb
xor
lea
mov
out
adc
int
xchg
imul
mov
xchg
pop
and
sub
push
push
xchg
lock
iret
adc
xlat
scas
pushf
xor
mov
xchg
cwtl
xor
cwtl
rol
sbb
mov
mov
adc
inc
insb
or
dec
cmp
ror
gs
xchg
inc
jecxz
sbb
movsb
lahf
ss
push
imul
out
sub
fnsave
mov
xor
pusha
leave
cld
cmpl
dec
pop
ds
out
sti
cmc
dec
movsb
push
dec
sbb
or
ret
jae
dec
popf
adc
scas
inc
sub
push
push
xlat
jae,pn
xchg
loopne
mov
mov
add
xchg
pop
adc
mov
aam
loope
nop
xchg
sbb
scas
aaa
std
cwtl
pop
iret
mov
xchg
push
add
test
mov
lds
jns
adc
leave
xchg
cmpsl
mov
loope
fcomp
mov
pushf
inc
xor
xchg
and
out
dec
loope
or
mov
cmp
iret
es
fidivrl
daa
push
mov
mov
leave
ror
insl
or
pop
int3
lret
in
cmp
enter
lea
mov
push
mov
add
repnz
and
mov
push
sub
cmpsb
cmp
push
pop
out
and
das
pop
lret
stos
or
cmpb
call
sub
int3
rcrl
mov
out
jns
addr16
or
xchg
rcrl
inc
add
out
sahf
aad
push
inc
dec
test
mov
js
xchg
shrl
std
lret
push
outsl
jae
jne
add
push
mov
cmp
pusha
xchg
scas
ss
adc
jno
sbb
adc
pop
loop
sub
sbbl
mov
inc
lds
ror
out
arpl
ljmp
sub
push
repnz
or
int
leave
xchg
sub
pushf
xor
jmp
cltd
jmp
xor
or
fcoml
fidivrs
inc
or
mov
pop
mov
mov
sarl
stos
mov
sub
mov
pop
mov
rcrl
push
pop
mov
xchg
jecxz
cmp
ret
cmc
mov
cmp
pop
jae
mov
xchg
lods
push
xchg
andl
pop
cld
or
dec
push
jl
push
xchg
jno
jp
xor
mov
xchg
fdivrp
mov
cmpsb
dec
dec
mov
or
xor
dec
pushl
dec
mov
xchg
sub
out
xor
stos
pop
lea
mov
jle
xchg
add
lods
lcall
cmc
lcall
enter
mulb
jle
fistpl
mov
push
and
dec
mov
adc
push
push
subb
in
mov
push
and
mov
movsl
mov
popa
sub
into
push
push
nop
push
out
inc
add
add
or
ficoml
push
mov
divb
dec
popa
mov
stos
pop
adc
xchg
or
and
mov
loop
rol
adc
add
lret
loope
cmc
mov
jl
pop
fmulp
movsb
aaa
push
test
sub
xor
pop
sbb
dec
test
xor
jo
aam
scas
jmp
cmp
pop
push
fstps
jl
push
outsb
sub
add
fistpll
ud1
fcomp
stos
add
jne
shrl
mov
aas
push
fcomi
scas
push
mov
add
fwait
outsl
lea
jno
adc
fsubrp
mov
xor
sbb
add
xor
pop
js
jb
jge
adc
pop
cmp
lahf
xor
mov
mov
adc
data16
cmp
mov
mov
popl
push
orl
paddb
popf
out
cmpsb
jae
push
movsl
or
push
cmp
jns
negb
sbb
add
dec
cmp
inc
add
cmp
cmp
cmp
mov
add
and
or
xor
sar
xchg
xchg
mov
xor
mov
daa
sub
mov
sub
js
adc
or
xlat
pavgw
ret
push
call
add
xorb
xchg
push
adc
fxch
xor
sbb
lock
jo
icebp
sub
cltd
out
pop
pop
movsb
cmp
mov
in
cmpsl
test
sub
ljmp
and
xchg
cmpsb
and
rol
inc
pop
das
sarb
jnp
and
fsubs
ljmp
je
push
add
testb
repz
daa
insl
add
sti
push
mov
leave
sub
add
hlt
fwait
rol
cmp
shll
daa
jo
and
mov
add
insb
xor
hlt
insb
mov
mov
add
scas
out
inc
jae
push
movsl
and
mov
xor
mov
mov
inc
mov
pop
repnz
mov
jge
cmpb
imul
jg
bnd
pop
addr16
xor
jge
stos
push
mov
add
mov
out
xchg
test
xorb
cmp
jmp
xor
shr
xor
std
and
sbb
xchg
lods
xor
enter
jl
pop
leave
dec
and
inc
in
mov
adc
cmpsl
ret
es
fadd
inc
call
or
inc
addr16
sub
pop
test
inc
xchg
insb
add
or
inc
mov
incb
fsubr
and
mov
sub
and
test
iret
push
popa
addl
mov
cmpsl
iret
and
pop
fsubrl
movsl
mov
sbbb
out
std
or
stos
fldl
and
dec
jns
data16
test
dec
lret
cmp
std
xchg
push
nop
lds
sbbl
cmp
add
test
jp
push
or
add
push
cmp
push
mov
and
pop
mov
adc
add
lods
and
jmp
add
push
mov
jbe
test
xchg
add
lcall
sub
lret
dec
push
fs
push
cmpsl
iret
sub
jnp
jne
mov
stc
or
jae
je
push
shrb
ud0
xchg
out
cmpsb
test
test
jnp
jb
out
adc
mov
shl
adc
pop
imul
mov
jmp
shlb
cmp
add
les
ss
sbb
mov
mov
jmp
loopne
push
inc
and
xor
pushf
sahf
js
js
jg
cli
mov
inc
cs
ja
repnz
ds
movsb
lahf
stos
loop
dec
adc
adc
movsb
push
call
stc
xor
mov
sbb
push
orb
lock
into
daa
adc
mov
push
xchg
sub
or
dec
jg
out
lock
outsb
pop
jecxz
scas
push
clc
xchg
or
mov
loop
cmp
push
mov
testl
dec
cmp
fisubrl
loop
dec
mov
xor
insb
xchg
scas
popf
xor
sub
icebp
iret
add
push
js
pop
imul
fnstcw
xchg
cmpsl
pop
lcall
jo
out
aaa
flds
and
adc
pushf
push
adc
mov
cld
mov
or
add
mov
incl
push
out
xchg
mov
lock
call
mov
sbb
or
jne
jge
pop
adc
jb
call
cmp
scas
dec
pop
ss
int
test
jl
push
mov
push
repz
fwait
xchg
loop
aam
jl
in
test
movsl
ja
outsb
mov
push
pop
push
sub
orl
sarb
xchg
jne
xchg
das
mov
lret
cmp
xor
jb
lods
xchg
and
and
hlt
mov
or
imul
xchg
popf
repz
jmp
shlb
add
adc
or
fwait
stos
xchg
cld
sti
or
inc
cmpsb
lea
fcoml
push
and
sub
cmpsl
pop
xor
xor
cld
ret
bound
out
and
sub
loop
out
jmp
repnz
out
daa
push
es
fistl
xor
inc
jno
ja
cmpsl
jle
lea
out
inc
stos
ljmp
mov
loope
add
movsl
jge
jge
xchg
test
cwtl
jge
mov
fcomi
mov
push
dec
mov
pop
mov
lret
push
mov
arpl
jmp
dec
add
pop
add
or
push
and
dec
dec
adc
push
push
pop
or
out
cmpsl
aaa
jmp
fbld
jle
rclb
aas
sbb
shll
adc
out
out
icebp
insb
cmp
cwtl
pop
mov
sbb
fucompp
shr
jmp
mov
jno
add
xor
dec
mov
inc
and
outsl
movsb
subl
ljmp
mov
popf
addr16
ds
cmpsl
repnz
fxch
leave
fbstp
push
enter
and
leave
arpl
cmpl
cmc
pusha
imul
mov
or
cmc
push
sub
negb
push
pop
xorb
cmp
mov
mov
les
cltd
movsl
js
nop
rcrl
repnz
mov
dec
adc
xchg
sub
sub
cs
ret
jne
mov
loope
cmp
lods
cld
xchg
stc
mov
dec
loope
pop
insb
xchg
repnz
ja
leave
int
test
aas
dec
mov
and
fstl
adc
jge
mov
sub
movsb
inc
adc
lds
adc
fmull
mov
call
jns
in
xchg
mov
push
scas
mov
movsl
cmp
fld
ja
pop
loop
mov
mov
xchg
jge
mov
cli
jne
jne
lods
sub
pop
adc
mov
movsl
add
add
add
jbe
gs
cmpsl
mov
jns
inc
stos
fstps
frstor
xor
lcall
fsubs
jne
or
lods
jmp
xor
jne
xor
lcall
rorl
xor
pop
ret
ds
std
lcall
int
popa
sbbb
push
lods
outsl
ret
call
mov
stos
jge
sahf
mov
pop
fisttpll
icebp
lret
mov
and
lods
sbb
out
cld
xorb
insb
adc
push
inc
and
xor
cmpsl
add
xor
shlb
sbb
adc
leave
arpl
or
fdivs
repnz
xchg
shll
inc
jnp
imull
or
hlt
test
out
jb
lds
popa
lret
lea
in
pop
mov
and
fisttpll
cmpsl
adc
sti
fs
scas
popf
sbb
push
inc
aaa
xor
xchg
cld
push
sbb
je
jge
cmc
mov
stc
and
jle
xor
lods
inc
xor
scas
mov
mov
stos
lcall
cmpsl
sub
push
dec
imul
aaa
insb
sbb
mov
icebp
cwtl
pop
ror
aam
mov
dec
out
push
rcrl
push
icebp
inc
lret
mov
nop
sub
outsl
psubw
in
test
inc
data16
mov
mov
or
jg
sbb
add
jns
mov
hlt
mov
outsl
fcomps
pop
mov
push
fadds
mov
and
aas
inc
lea
xchg
insb
shlb
pop
outsl
daa
xor
pop
mov
mov
ds
jae
push
outsb
jp
leave
mov
mov
push
pop
inc
dec
outsb
mov
cli
mov
dec
xor
inc
and
sbb
and
jne
sbb
orl
xchg
or
dec
test
and
mov
aam
mov
out
es
rep
mov
xchg
sub
adc
add
scas
nop
testl
pop
inc
lret
xchg
sbb
cwtl
pop
jo
vpaddsb
mov
jmp
mov
xchg
add
fmul
and
or
aad
shrl
cmc
pushf
mov
add
jecxz
xchg
mov
lea
cmpsb
push
sbb
inc
lahf
ja
cmp
or
ret
sub
jns
inc
xlat
cld
and
pop
and
loopne
inc
pop
leave
cmpsl
push
out
in
mov
jns
or
je
fimuls
push
cmp
add
loope
outsb
add
xor
xchg
pop
imul
cmp
xchg
jo
add
clc
fwait
scas
and
in
call
lds
pop
inc
jmp
mov
loope
sub
hlt
dec
mov
inc
jb
std
mov
or
addr16
scas
pop
push
sbb
sub
inc
fstl
fisubl
add
push
lret
inc
cs
aas
in
sahf
icebp
mov
or
xchg
inc
inc
jg
mov
dec
test
mov
dec
dec
leave
adc
sbb
add
shrb
addl
stos
imul
cli
adc
cmc
sub
dec
repnz
call
pop
fldl
pop
cmp
inc
cltd
in
pusha
mov
xchg
or
into
gs
adc
mov
fisubrl
mov
sbb
pop
add
clc
or
or
ret
int3
xor
addl
rcll
loope
test
jmp
cmp
jo
mov
adc
aaa
ret
dec
add
push
out
iret
outsl
dec
scas
pop
cmpsb
cmc
jae
mov
mov
out
xchg
adc
mov
jne
fisubs
rcl
push
ljmp
inc
push
stc
mov
call
cmpb
js
mov
hlt
mov
jbe
pop
ficompl
icebp
adc
jmp
ficoms
mov
cmp
sbb
adc
insb
and
in
lret
fnstcw
das
lahf
add
es
push
and
push
push
aad
sar
out
push
push
enter
movsb
mov
mov
rol
test
pushf
or
inc
push
ljmp
call
mov
or
lahf
pusha
mov
mov
fdivrs
push
jae
loop
imul
enter
mov
out
sbb
in
sbb
and
lret
xor
loope
nop
push
adc
leave
test
pushf
adc
jp
scas
pop
xchg
push
add
xor
push
sahf
js
xchg
insb
rol
nop
imulb
adc
pop
xor
jne
ret
pop
mov
pop
mov
testl
pop
icebp
dec
mov
cmp
aaa
or
jne
cltd
gs
bnd
mov
or
jle
clc
sbb
in
push
cmpb
cmp
push
pop
add
ds
push
aas
inc
cmp
es
mov
pop
movsb
add
std
cs
inc
mov
test
sub
or
or
pop
xor
int
stos
outsl
int3
jo
sbb
mov
insl
gs
mov
pop
cmc
aaa
jle
add
repnz
mov
push
xchg
mov
sti
lcall
or
lret
adc
or
xor
call
movsb
aas
and
xchg
lret
add
xor
fsubl
sbb
sbb
or
push
and
add
notl
push
cltd
ds
mov
jns
rcll
shrb
jae
fistpl
mov
add
ret
lods
xchg
jmp
mov
jo
mov
insl
push
jg
push
mov
jle
push
popa
jp
add
sbbl
xchg
popa
dec
cmp
adc
mov
push
push
pop
repnz
add
xchg
sbb
dec
rcl
jnp
push
mov
and
or
lcall
mov
test
sub
aad
inc
push
mov
push
notl
mov
lock
mov
insl
fldenv
xchg
mov
push
mov
push
bound
jae
pop
sub
and
mov
xchg
clc
inc
fdiv
rcrb
mov
les
std
std
inc
xlat
cs
and
cmpsl
dec
jecxz
jnp
cmp
imul
xchg
xor
imul
aas
mov
lahf
fsts
test
xor
inc
xchg
jmp
test
in
jnp
cmp
push
imul
sub
dec
mov
mov
ja
xchg
mov
push
mov
cmpsl
push
orb
mov
popf
stc
lds
xor
in
in
and
cld
outsl
xor
mov
push
fdivr
push
dec
repz
fsts
xlat
xchg
inc
or
ljmp
insb
mov
push
jb
adcl
jl
lret
xor
mov
cmp
test
mov
pusha
mov
mov
pop
inc
push
dec
idivb
dec
rorb
xchg
dec
xchg
xor
push
in
addr16
fucomip
pop
xchg
enter
adc
jae
add
push
cmpsb
jb
das
fnstenv
dec
cmp
aaa
subb
or
jge
movsb
cmp
sahf
jle
jmp
or
sbbl
int
adc
nop
scas
fs
in
aad
aam
mov
rcpps
ss
push
jmp
inc
int
xchg
decb
xor
loop
cld
sub
andb
in
rcll
scas
sub
or
mov
adc
mov
xchg
adc
mov
mov
icebp
enter
pushf
pushf
sti
inc
jp
test
mov
out
jg
fcomps
add
jl
daa
mov
imul
pusha
addl
das
mov
sbbl
aam
mov
stc
shr
push
pop
aad
fyl2x
lea
mov
notw
daa
loop
jnp
inc
xlat
push
iret
pop
scas
xor
xor
mov
insb
xchg
pop
mov
stc
aas
cs
movsb
adc
dec
movsb
test
cmp
sbb
sub
pop
mov
outsl
sbb
testl
movsl
fistl
aam
popa
and
shlb
jns
into
xor
pop
inc
push
fwait
xor
gs
jo
mov
mov
test
rolb
arpl
call
test
cmpb
pop
call
sbb
adcb
and
adc
incl
xor
lock
adc
and
int
imul
cmpsb
in
movsl
aas
enter
and
sub
inc
dec
pop
jns
cltd
std
adc
mov
cwtl
dec
ficompl
scas
repnz
in
cmpsb
cmp
cmp
shrl
sub
add
in
pop
out
test
dec
mov
cltd
adc
sbb
pop
adc
addl
aad
int3
pop
xor
adc
nop
loope
pop
xchg
mov
out
cli
add
loope
testb
aas
xor
push
pop
push
call
bound
add
mov
hlt
xchg
push
insl
jecxz
jecxz
repz
inc
mov
jnp
fdivl
inc
psadbw
daa
int3
ja
nop
sub
adc
mov
dec
pop
shll
leave
inc
cli
insb
add
sub
enter
mov
mov
loopne
xchg
dec
imul
pop
mov
fldenv
rcll
int
dec
fmull
aaa
adcl
int3
mulb
scas
mov
js
sbbl
mov
lret
rol
cmpsl
jle
int3
cmpsl
cmp
pushf
xor
dec
pop
fmulp
push
adc
dec
lcall
lods
adc
in
cwtl
pushf
ror
into
rcrl
lret
imul
outsl
cli
fucomp
mov
cmp
xor
hlt
cmp
jnp
adc
loope
sti
jae
cmp
push
push
pop
div
mov
inc
shl
push
rorb
add
sbb
inc
shll
sub
ret
jb
pop
std
jge
call
das
pop
jne
xchg
loopne
xchg
popf
mov
scas
adc
mov
sbb
adc
inc
cmc
mov
int
sarb
imul
sbb
jo
sub
fwait
aas
mov
dec
cmp
pop
hlt
mov
mov
loope
scas
fwait
idivl
out
xchg
mov
popf
pop
inc
fs
fdiv
out
cmpsb
jo
arpl
dec
popa
jle
inc
mov
mov
es
lret
push
pop
cmp
sub
div
shrl
sbb
js
lret
jo
test
dec
ret
sub
fisubs
cmp
addr16
sub
pop
stc
dec
cmpsb
movsl
sub
out
sbb
inc
lahf
mov
xchg
lret
cmp
dec
in
stos
jnp
mov
cli
add
mov
xor
mov
cmpsl
es
insl
add
and
test
outsb
mov
cmp
loopne
out
or
lock
xor
adc
das
fadds
xlat
ficoms
or
push
fldl
jecxz
iret
push
push
fs
clc
rolb
inc
ljmp
mov
fistpll
xor
xor
ds
lock
mov
pushf
lods
sbb
pop
mov
in
jl
jo
aaa
xlat
jne
test
adc
adcl
dec
push
les
cmp
iret
xor
nop
mov
add
pop
sbb
inc
lret
mov
dec
xchg
xor
imull
push
sbb
xor
sub
lds
ss
push
out
stc
or
ret
pop
dec
mov
jp
xchg
test
int3
cmc
repz
mov
pusha
leave
xor
rorb
mov
sub
popa
mov
jne
pop
ss
inc
ret
mov
xchg
inc
in
test
inc
dec
repz
jae
sti
mov
add
add
mov
adc
or
pusha
mov
ret
je
pop
or
cmc
test
leave
push
jo
mov
in
mov
lea
xchg
push
sbb
mov
adcb
push
shlb
jae
in
dec
out
cli
push
fistpll
std
jecxz
jmp
addr16
call
mov
fildll
mov
mull
or
lods
popf
out
cmp
inc
in
and
test
insb
sub
and
mov
dec
mov
cmp
cmp
cmpsl
jp
mov
cmpsl
jns
cs
fadd
or
mov
mov
mov
leave
int
lods
das
rcrb
cmp
ljmp
shrb
pop
and
xor
sub
sbb
xor
std
adc
sbb
inc
fisubl
dec
ljmp
fbstp
call
fs
addr16
xchg
aaa
loop
jge
push
cwtl
add
pop
data16
push
or
or
hlt
icebp
out
mov
ds
sbb
pop
mov
dec
les
jecxz
cmc
dec
test
mov
psubsb
or
popa
in
cli
push
xchg
push
xchg
mov
stos
clc
aas
int
jnp
cwtl
add
outsl
pop
fstpl
movsl
das
js
sahf
mov
sub
test
in
pop
leave
dec
lahf
push
inc
dec
mov
xchg
push
xor
imul
ror
xchg
ja
loopne
inc
mov
dec
mov
imul
mov
int3
arpl
cmp
imul
fsubrl
je
stos
test
xchg
aas
mov
fcmovu
and
xchg
add
stos
cs
pusha
lret
dec
data16
daa
fadd
fs
xor
cmp
sbb
mov
or
mov
jno
and
adc
jae
pop
adc
out
daa
push
into
jno
lock
ret
lods
clc
sub
fistl
sub
mov
out
stc
inc
or
inc
push
repz
sbb
shll
leavew
lret
scas
sub
add
shl
push
fwait
lds
pop
and
lret
push
jae
jle
movsb
addl
int
lcall
pop
mov
jnp
cld
adc
sub
loop
loop
cs
mov
pusha
imul
es
jecxz
fstps
cmp
roll
fwait
mov
and
movsb
xor
add
xor
in
test
xchg
lods
mov
jae
lods
outsb
ljmp
shll
adc
adc
clc
test
pop
hlt
mov
lret
xchg
loope
rcl
lahf
push
rcrl
mov
outsl
inc
jne
and
sbb
lret
clc
push
leave
xor
aaa
mov
fisubs
adcl
mov
xchg
testb
push
dec
test
popf
mov
test
pop
jmp
fwait
adc
adc
mov
bound
push
jmp
jb
add
cmc
adc
inc
push
cwtl
lds
scas
js
sub
pop
mov
and
xor
stmxcsr
mov
loop
inc
lcall
inc
xor
xchg
loopne
dec
push
mov
out
jnp
and
sub
shlb
outsb
stc
repz
movsl
roll
loope
sti
xchg
rclb
aad
adc
andb
cmp
loopne
mov
sar
jo
jae
arpl
inc
inc
xor
xchg
sub
sub
sbb
sbb
adc
and
fidivrl
adc
inc
clc
cwtl
das
sub
sub
mov
adc
daa
icebp
mov
mov
lods
cs
jne
insl
jge
mov
into
sbb
subb
jo
or
mov
gs
mov
push
dec
arpl
mov
ljmp
les
ror
and
xchg
pop
pop
mov
js
subl
xor
mov
and
mov
lods
inc
insl
fdivs
call
cmp
jo
and
inc
dec
and
iret
test
daa
cmpsl
dec
pop
mov
rcrl
cmpsb
pop
push
les
adc
ret
cmpsb
cmp
sti
push
roll
pop
clc
iret
push
xchg
test
lds
lods
or
imul
into
xchg
xchg
inc
jnp
rolb
push
push
arpl
mov
pop
push
xlat
test
mov
inc
pop
pop
or
add
mov
jno
imulb
mov
pop
inc
push
imul
pop
lock
cmp
xchg
mov
push
inc
gs
loop
nop
shll
adc
dec
jle
daa
int3
inc
fdivr
dec
adc
hlt
add
or
cmc
jp
mov
mov
mov
mov
jns
cmp
add
pop
xchg
cltd
xchg
scas
pop
cmp
shlb
lea
sahf
stc
inc
incl
push
jmp
inc
stos
jo
xlat
push
shlb
xchg
pop
xchg
lea
pop
mov
nop
lret
ret
cmp
add
mov
fldenv
cmpsl
and
xorl
testb
lock
lret
adc
popa
xchg
ss
push
cwtl
cmp
scas
cwtl
ret
jp
popa
clc
pop
jl
adc
icebp
jg
and
cli
test
mov
xchg
dec
jno
add
fsub
loope
cmp
cmp
jno
mov
divl
mov
jae
xor
mov
jo
jne
outsl
sbb
call
cmp
push
lock
or
ret
adc
adc
enterw
add
test
push
and
data16
imul
adc
leave
mov
arpl
ss
test
ss
popf
loope
jmp
inc
sbb
dec
mov
xor
aas
mov
and
inc
je
lds
lcall
add
mov
test
push
mov
xchg
mov
jmp
pop
xchg
inc
stos
orb
mov
jae
pop
subb
ficompl
lret
xlat
inc
imul
inc
insl
xchg
enter
inc
cmpsl
sahf
aad
push
outsl
je
sarb
lahf
push
cmpsb
jl
mov
dec
test
test
pop
jge
into
and
iret
cmp
adc
push
out
shrb
js
sbb
ss
aaa
push
cwtl
out
cmc
cltd
add
iret
neg
lcall
add
mov
dec
xchg
jnp
dec
push
jl
sbb
nop
xchg
icebp
pop
dec
cmc
push
jmp
pop
leave
mov
sub
xor
xor
push
mov
cmp
fldt
jecxz
je
loop
lods
pop
adc
popa
push
mov
sbb
dec
cmp
cli
cmp
cltd
repnz
popa
adc
leave
addr16
loop
test
mov
inc
ret
adc
xor
ret
adc
arpl
or
pushf
mov
cmpsl
mov
ja
sbb
mov
repnz
leave
ret
mov
pop
mov
sub
mov
enter
cmpsl
aam
push
out
mov
inc
dec
mov
push
push
inc
cld
push
lret
xor
les
shl
push
inc
pop
aaa
aad
incl
sbb
and
mov
dec
push
mov
jl
jmp
xchg
nop
into
jecxz
ja
dec
or
inc
les
movsl
iret
pusha
add
gs
sbb
adc
js
fs
stos
jb
test
cwtl
sbb
std
stos
inc
jo
test
and
push
call
xlat
imul
loopne
scas
xor
inc
push
stos
sti
fwait
sub
xchg
insl
imul
cmc
sbbb
shr
dec
pop
sahf
mov
xor
push
fnsave
or
pop
int3
sub
pop
xchg
dec
dec
push
or
or
sbb
and
mov
rcll
andl
jbe
fcoms
adc
cmpsl
dec
mov
filds
cs
xchg
mov
arpl
sbb
roll
out
jo
mov
lahf
xor
lods
jo
mov
aad
rcrl
lds
sbb
adc
or
cmp
int
push
xchg
add
sbb
mov
movsb
push
pusha
push
jecxz
or
sub
leave
je
fidivs
std
adc
jge
and
fsubs
mov
ljmp
xor
mov
push
push
jge
pusha
inc
push
shll
in
xor
add
cmp
adc
xor
lcall
jbe
push
lcall
sahf
movsb
pop
sahf
mov
jecxz
imul
jb
jmp
mov
push
and
mov
nop
add
dec
shrb
jge
or
testb
lea
mov
jecxz
sub
inc
insl
jl
mov
shr
add
loope
movsb
pop
jae
lods
dec
rclb
xlat
mov
mov
gs
push
insl
pop
sbb
mov
adcb
pop
out
inc
push
dec
adc
pop
enter
mov
inc
xchg
xchg
or
lret
movsl
test
lahf
dec
repz
movsl
xchg
pop
mov
incl
lret
xchg
popf
fildll
add
scas
push
cmp
inc
push
xchg
lock
adc
xchg
jb
mov
mov
ret
push
fwait
out
and
inc
mov
ret
adc
test
ret
hlt
ret
adc
out
ret
jns
fcmovbe
shll
inc
sbb
lahf
bound
fwait
ja
or
call
mov
loope
jno
or
xchg
in
sti
dec
loopne
xor
insl
add
leave
shrl
ljmp
xor
jp
jp
mov
imul
jecxz
pop
jmp
dec
pop
sahf
sbbb
xchg
pop
mov
sbb
aad
or
lret
aaa
cmp
cmp
xor
out
cwtl
out
mov
mov
mov
sahf
mov
mov
stc
push
mov
cmp
loop
leave
sub
dec
jnp
out
in
int
push
adc
and
rcrl
push
fstpt
ja
dec
aam
fnstenv
rcll
adc
cwtl
jno
inc
pop
stos
sbb
in
scas
cmp
xor
or
and
dec
push
xchg
inc
dec
pushf
push
dec
cwtl
push
cmp
mov
rclb
xor
xor
cmp
fsubrl
in
push
sub
gs
leave
push
pop
sub
subb
ljmp
fcmove
add
mov
add
shlb
repz
mov
xchg
insl
and
data16
pop
sbb
adc
xor
xor
stos
adc
stc
lret
and
push
outsb
mov
pop
cli
outsl
decb
btr
xor
in
fcompl
stos
jg
fwait
jno
inc
inc
cmp
nop
push
enter
mov
out
cltd
in
stos
cwtl
inc
js
addr16
loopne
inc
stos
dec
inc
adc
les
mov
mov
push
mov
push
xchg
test
sub
pop
dec
and
jge
arpl
sbb
insl
and
daa
nop
repz
pop
push
stc
loopne
arpl
call
arpl
test
decb
mov
rclb
fnsave
xor
mov
jmp
add
shll
cmp
sbb
shl
cmp
aad
icebp
lds
push
repnz
sbb
mov
in
jns
loope
pop
xor
xchg
pusha
xlat
loop
je
int3
mov
xchg
add
stos
sbb
push
cmp
stos
ss
fwait
mov
lcall
scas
subl
test
xlat
loopne
daa
push
arpl
sbb
sbb
sbb
sub
xlat
mov
dec
mov
sbb
push
mov
mov
push
das
pop
movsl
fs
inc
lret
jge
cmp
jne
pop
hlt
lret
jl
or
lock
or
sbb
xor
insb
or
xorl
loop,pt
out
pop
repz
sub
mov
shll
cmpsl
mov
clc
test
fimull
jle
adc
mov
push
jp
lret
in
cmp
sub
std
lods
in
loop
cld
clc
mov
nop
or
scas
sahf
add
ret
loop
stc
les
add
shlb
dec
mov
lret
push
sub
cmp
mov
int
out
or
testb
ljmp
mov
pop
push
inc
clc
push
shll
ljmp
in
mov
xor
ret
sub
sbbb
pop
fbld
adc
out
pop
or
xor
loope
aaa
jmp
aas
in
test
xchg
in
mov
fistps
into
dec
and
sub
xor
pop
sbb
ss
insl
mov
xor
push
inc
or
fdivs
scas
loop
loopne
movsl
lret
pop
loope
jl
testl
xor
cltd
pop
aaa
jecxz
ds
sub
test
mov
sub
test
scas
rol
sub
dec
dec
xlat
xor
pop
xchg
adc
aad
shll
adc
xchg
xchg
repnz
call
cmp
jne
jno
cwtl
dec
jecxz
xchg
loope
dec
add
loope
addl
and
mov
xor
jmp
test
mov
testl
sub
mov
pop
jmp
fsubrp
jne
test
xor
std
leavew
bound
adc
lock
push
pushf
jle
test
pop
popf
push
inc
test
sbb
and
pop
jp
pop
dec
mov
cmp
lods
adc
dec
add
jne
xchg
andl
shll
call
jecxz
out
jnp
mov
popa
test
mov
or
xor
sarl
fimull
dec
stc
jge
or
xchg
dec
mov
popa
mov
and
pop
xchg
jae
pop
addr16
push
mov
mov
or
mov
push
call
pop
loope
shl
sub
aas
mov
cmc
stos
aad
sbb
sub
or
ret
ds
scas
inc
cmpl
popf
in
mov
std
jo
pop
xor
push
mov
dec
lcall
shll
or
mov
dec
ret
gs
movsb
outsl
movsl
cmp
movsl
jmp
out
or
jecxz
or
cmp
pop
lods
jb
scas
testl
lret
pop
data16
jns
add
cmp
push
hlt
mov
ja
fisubrl
addl
push
cli
sbb
mov
add
xchg
inc
lea
add
outsl
and
insb
xor
and
je
popa
int3
lods
and
test
clc
iret
ss
hlt
push
icebp
fidivrs
loope
jecxz
rorb
cmpsl
out
jge
xchg
call
and
adc
mov
jmp
andb
sbb
incb
xchg
adc
aas
arpl
imulb
mov
add
pop
lods
les
js
adc
mov
xchg
add
lock
dec
shl
sti
fwait
cmp
dec
loopne
nop
mov
in
xor
icebp
shlb
mov
sbbl
je
movsl
dec
mov
jl
out
rol
loopne
xchg
sbb
ds
rcrl
cltd
std
and
jmp
xchg
adc
fwait
out
int3
xor
lods
sub
out
inc
push
xchg
lcall
sbb
cli
subl
xchg
sub
jl
movsl
pop
push
lret
mov
and
je
stos
sti
sar
xor
pop
pop
mov
cld
inc
out
sti
jnp
loope
pop
push
inc
leave
or
push
push
subl
cmpsl
imul
clc
mov
mov
mov
je
jnp
or
mov
sarb
cmp
testl
jmp
jae
sbb
push
dec
lahf
ss
cmc
repz
mov
pop
cmp
rcl
jbe
add
aad
into
adc
test
mov
push
xlat
scas
mov
sbb
pushf
pop
pop
fmul
dec
test
cs
adc
into
fisubl
push
lock
stos
notl
jp
repnz
ds
xrelease
cmp
js
xor
shl
in
stc
inc
out
sub
and
int3
rol
mov
repnz
and
or
das
or
cmp
sbbl
lods
fdivrl
jge
mov
fisubl
sbb
es
test
and
push
fimull
gs
ds
xchg
inc
mov
mov
scas
jl
imul
sbb
xchg
jne
mov
testl
mov
aaa
ja
or
mov
ret
fwait
pop
aaa
repnz
dec
lods
testl
pop
arpl
jae
js
jno
add
mov
pop
xor
inc
pushf
jo
sub
inc
sti
inc
cmp
dec
inc
pop
gs
aas
sbb
cmp
bound
push
dec
dec
mov
xchg
xchg
jle
lahf
mov
call
xor
push
cmp
cltd
data16
arpl
cmp
ss
out
std
dec
dec
fcoms
inc
jbe
cmpb
xchg
repnz
mov
jne
push
xchg
adc
pop
mov
mov
adc
lds
fs
iret
int3
fcmovnbe
sbb
bnd
aas
stos
add
sub
push
lods
mov
inc
push
inc
ljmp
aas
sub
cwtl
inc
cmpsl
movsl
jno
sbb
jnp
dec
xor
out
enter
xlat
and
rcl
push
push
lds
pop
mov
mov
les
push
icebp
pop
loop
cmp
jg
stos
sbb
rorl
sbbb
aad
adc
hlt
andb
imulb
movsl
and
add
movsl
mov
xchg
test
pop
movsl
sbb
rorb
fldcw
mov
dec
jg
mov
data16
sbb
sbb
sub
dec
inc
jbe
mov
orl
movsb
add
lea
in
mov
lock
in
arpl
je
sub
push
in
pop
iret
sbb
mov
repz
sbbl
aad
jmp
mov
pop
aas
call
fdivs
out
xor
xor
fistl
xchg
xor
imul
outsb
ret
gs
in
dec
cmc
int3
cli
xor
cmp
cmpsb
cli
mov
mov
and
into
gs
out
jb
in
addr16
and
or
mov
lea
lret
adc
mov
fwait
jo
dec
fcomp
test
iret
or
mov
push
mov
push
or
dec
cmpsl
fstl
push
jns
imul
xchg
ret
hlt
bound
xchg
adc
pop
scas
leave
add
pushf
dec
data16
aam
pushf
mov
nop
pop
es
in
nop
jb
movb
mov
sub
sti
insl
mov
sbb
test
dec
and
jns
pop
sub
fcoms
popf
ret
in
jb
inc
cltd
es
aad
xchg
ss
adc
sub
gs
mov
pop
mov
push
mov
sbb
out
sbb
pop
jle
dec
movsl
stc
inc
fldt
add
jg
dec
bnd
cmp
jecxz
ret
icebp
leave
cwtl
in
lea
cltd
inc
adc
icebp
mov
or
cmp
lds
sahf
aas
push
shrb
pop
pushf
and
fildll
mov
cwtl
bound
pushf
mov
mov
xor
xor
dec
leave
xchg
cmpsl
out
push
xchg
dec
dec
pop
jg
xchg
inc
fnstcw
sub
fidivl
sub
or
or
xchg
sub
dec
loopne
fisttpll
incb
cmpsl
sbbl
push
mov
cmp
and
call
pop
es
mov
rolb
mov
jp
or
add
out
sub
les
dec
or
mov
inc
dec
or
stos
push
jg
jbe
test
fwait
aas
cs
fcmovu
add
into
jb
or
outsb
push
jo
into
pop
push
inc
enter
lretw
out
into
cmpsl
mov
popf
xor
int
icebp
or
xchg
dec
aam
insb
jg
lahf
clc
push
incl
cltd
mov
add
mov
popf
jnp
hlt
pop
out
xor
int3
ds
inc
lods
xor
cmpsl
inc
pop
loope
mov
inc
outsb
fbstp
adc
push
out
insb
and
xchg
sbb
sbb
jmp
adcl
mov
jmp
sahf
pop
in
cld
jb
fisubs
test
test
pop
jnp
ficompl
std
fwait
outsl
decb
flds
into
gs
stos
xchg
sbb
mov
sbb
sahf
xchg
cmp
lcall
bound
sub
gs
sub
shl
pop
bound
or
or
jbe
lods
aaa
or
inc
jne
in
push
aad
ljmp
and
sub
mov
jne
lods
shlb
imul
dec
movsb
enter
mov
push
test
xchg
loope
inc
mov
push
pop
bound
cmp
ds
sub
xchg
add
test
sbb
je
out
xchg
pop
add
add
out
cld
push
push
rorl
ds
cld
test
cmp
pop
stc
or
std
or
mov
xchg
xchg
mov
or
jbe
mov
cmc
movd
loope
xchg
xor
sbb
cmp
dec
lret
and
dec
loope
pop
cmp
pop
sub
fldl
in
ss
pop
addr16
or
scas
nop
repz
pop
pop
and
mov
push
pop
hlt
jno
sti
pop
xchg
cwtl
mov
gs
push
jnp
dec
wbinvd
popf
rorl
sahf
add
fwait
outsb
pop
xchg
mov
ret
and
call
fidivs
mov
sbb
mov
jmp
fidivrs
pop
ja
xchg
xchg
ret
repz
or
cs
rcrb
fdiv
in
arpl
push
insl
mov
scas
inc
inc
push
mov
bound
or
ret
or
call
loopne
fisubl
xchg
push
cmpl
or
mov
mov
insl
ss
sub
cwtl
add
pop
daa
cmp
xchg
xchg
adc
data16
jo
cmp
pop
inc
xor
mov
push
mov
into
jae
and
push
in
mov
pop
je
jbe
jae
xchg
and
xchg
push
fs
and
sub
sbb
or
test
xor
std
nop
out
test
fadds
popf
xchg
sbb
bound
lcall
push
orl
push
sbb
sub
jnp
dec
popf
xor
lcall
in
outsl
shrl
imul
dec
or
xchg
ror
aas
inc
mov
enter
sbb
jmp
jl
inc
mov
loopne
pop
rclb
hlt
and
jg
or
es
or
insb
ret
inc
scas
hlt
lea
add
mov
ljmp
imul
sarl
push
hlt
xor
ss
xchg
pop
scas
testl
je
repz
push
sbb
mov
mov
pop
pushf
iret
lahf
ss
cmp
cmp
mov
jp
pusha
aad
out
popf
js
pop
mov
adc
pushf
xor
xor
adc
outsl
dec
pop
lock
adc
or
cmp
push
jmp
paddusw
mov
les
adc
test
adc
add
inc
xor
cmp
dec
out
mov
stos
pop
push
add
out
and
loope
arpl
ljmp
mull
lret
xchg
mov
sbb
ret
std
jo
rol
imul
push
icebp
jbe
mov
or
pop
dec
test
lock
dec
cmp
add
inc
sub
out
popa
repz
roll
and
jle
pop
icebp
inc
adc
add
cmp
loop
les
std
jl
aad
int
outsl
sar
popa
imul
or
mov
loope
mov
inc
mov
shl
addr16
insb
sub
fs
inc
lea
pop
lock
leave
fcmovnu
int3
mov
sbb
lret
leave
add
sbb
ret
jp
scas
mov
dec
mov
mov
fimull
and
lock
fwait
pop
mov
cmc
push
pop
jae
mov
adc
or
sahf
stos
push
push
push
insb
lods
jbe
sbb
pop
xor
sahf
out
lds
leave
xlat
lods
ret
mov
outsl
inc
imull
mov
fs
shrl
jne
push
aaa
and
xchg
jmp
add
mov
icebp
inc
insl
fsubrs
pop
mov
xor
jnp
jl
addl
push
pushf
js
sbb
cli
rorl
sub
clc
ret
add
push
add
xchg
sbb
test
lock
xor
ret
ja
jbe
call
push
test
je
pop
out
mov
pop
push
mov
cmp
mov
mov
sub
xor
mov
pop
out
add
mov
cmpsb
jg
ror
hlt
cmc
cmp
das
adc
movsb
loope
adc
push
jmp
sarl
cltd
cmc
testl
push
aad
adcb
or
xor
adc
or
cmp
xor
xchg
push
pop
lods
ljmp
repnz
xchg
and
call
flds
mov
mov
lret
shlb
arpl
jge
adc
mov
outsl
rcrb
jo
adc
pop
arpl
clc
xchg
loope
or
clc
sti
inc
rolb
std
mov
dec
add
mov
orb
or
cmp
xchg
sub
jl
mov
or
sub
pop
ret
add
mov
mov
repz
rcrl
rcl
data16
add
scas
dec
adc
mov
mov
lcall
lret
cs
cmp
out
daa
arpl
push
sub
test
xchg
or
jg
int3
push
fs
lods
faddl
cli
out
mov
popf
jge
dec
in
movsl
shlb
pop
flds
sub
ljmp
sbb
xchg
sub
mov
jb
rcll
pop
or
push
mov
pop
push
xor
push
aas
push
jle
sbb
test
inc
and
cmp
jnp
scas
push
xor
test
pop
add
cmp
sub
mov
pop
shlb
push
push
in
or
mov
push
sub
jae
inc
dec
popf
dec
mov
mov
jecxz
scas
jge
mov
cmpsb
fistpll
fbstp
push
or
mov
sbb
sub
push
inc
push
std
addr16
fidivl
movsb
cld
push
fistpl
or
jl
inc
cmpsb
sbb
cli
xchg
pop
cwtl
insb
out
mov
pop
sbbl
add
in
cwtl
xor
pop
mov
dec
cmp
adc
mov
orl
arpl
int
dec
repz
out
mov
jno
jae
jb
insb
addl
adc
add
sarl
es
sbb
pop
dec
mov
inc
shl
in
in
pop
xor
in
pusha
dec
iret
mov
mov
pop
sbb
dec
mov
movsb
loopne
pop
mov
jle
cmp
fucom
mov
mov
cmp
aas
push
mov
push
inc
loope
aad
and
xor
mov
dec
xor
jnp
sbb
int
cmpb
mov
mov
out
lret
sbb
test
cmp
cmp
stos
mov
cmp
mov
andb
xchg
imul
sbb
rcrb
sub
and
imul
test
movsl
adc
sarl
test
xorl
mov
add
orb
add
cmpsb
loop
movsl
adc
mov
jo
add
lcall
incl
sub
in
sbb
xorl
cmc
pop
outsb
sbb
test
adc
out
add
sbb
in
cmp
xor
ljmp
jo
out
dec
lahf
mov
xor
add
cmpb
or
repz
jno
add
mov
imul
xchg
fmuls
sahf
mov
adc
xor
dec
ja
jno
cmp
push
adc
clc
mov
negl
into
sbb
xor
scas
popf
loopne
jno
daa
shlb
out
sbb
xor
push
push
lods
adc
jmp
in
mov
xchg
adc
in
push
pop
xchg
dec
aaa
jl
test
xor
test
stos
outsl
push
in
test
test
pop
sbb
mov
mov
lea
outsl
pop
test
stc
or
cmp
xor
mov
rcl
clc
mov
lcall
cmpsb
cmp
fwait
arpl
adc
fisubl
adc
jg
popa
loope
xor
xor
dec
je
adc
cld
jnp
sub
test
push
sbb
addr16
pop
movsb
pop
add
cwtl
lock
inc
out
mov
int
cltd
cmp
shrl
ljmp
cld
rcr
mov
cmpsl
jp
sbb
outsb
fidivrl
arpl
dec
sub
imul
sbb
sahf
cmp
arpl
sbb
sti
popa
xor
jbe
push
lcall
cwtl
sub
mov
dec
xchg
add
and
iret
pushf
inc
push
loop
lods
jo
xchg
test
add
inc
sbb
pop
sub
sbbb
mov
aad
adc
aas
and
push
inc
lea
lret
cmp
mov
imul
cmp
sub
fldl
data16
jmp
mov
jne
dec
lcall
decb
mov
in
imul
sub
sbb
push
push
pop
add
repz
or
add
xchg
in
pop
ljmp
mov
jg
jne
mov
adc
dec
orb
in
jecxz
outsb
or
mov
mov
jo
in
inc
sub
push
sar
or
sub
outsb
aaa
xchg
test
dec
insl
jecxz
mov
cmp
pop
lods
adcb
jecxz
int3
lret
push
jp
xchg
lret
cmp
xchg
dec
rcl
les
jg
adc
andb
pop
pop
mov
popf
adc
sub
pop
loope
rol
repnz
mov
push
cs
pop
dec
push
call
sbb
outsb
mov
adc
pop
mov
adcb
fisubrl
add
xor
out
or
jg
xor
fnstsw
mov
lret
mov
lret
add
xor
xorb
or
adc
or
outsb
rorl
push
not
lds
rclb
mov
sbb
jo
mov
scas
inc
dec
push
sahf
adc
hlt
cmp
sub
in
lods
cmp
inc
mov
mov
test
in
mov
loopne
lret
bound
lret
popf
xchg
cmp
pushf
push
rcrl
fbld
push
push
fistps
mov
xchg
shl
jg
sbb
or
jl
pop
jnp
jl
xor
hlt
push
jle
lds
les
mov
push
out
cld
faddl
neg
and
pop
shl
int
and
push
adc
inc
fbstp
test
stos
pop
push
lahf
mov
dec
pop
scas
in
fdivr
sbb
or
adc
lea
insl
adc
sahf
ja
scas
push
leave
pusha
idivl
bound
pop
xchg
sbb
gs
insb
or
inc
cmp
sbb
jg
push
sar
mov
xor
push
hlt
sub
es
push
jecxz
push
out
aas
add
pusha
cmpsb
repnz
fcmovnbe
mov
inc
dec
adc
xchg
adc
push
inc
testl
mov
cmp
xchg
in
dec
aam
sub
pop
fmul
gs
xchg
xor
and
mov
test
notl
rorb
sbb
test
cmp
orl
and
push
dec
xlat
sbb
cwtl
mov
mov
cmpsl
cmp
push
mov
adc
jne
sbb
xor
fidivrl
xlat
and
or
cwtl
out
inc
pop
ds
movsb
mov
sarl
fstpl
mov
ljmp
mov
jg
int
sbb
ja
xchg
jmp
sbb
into
pop
mov
mov
mov
es
and
test
or
ljmp
jmp
subb
fwait
mov
ficompl
mov
lock
push
push
or
inc
xor
pop
xchg
dec
outsl
je
jl
lahf
call
lret
pop
popa
push
data16
movsb
jecxz
loopne
or
and
stos
ret
fs
mov
sub
or
jnp
xor
push
push
pop
inc
pop
out
mov
paddsw
or
add
mov
xchg
icebp
pxor
out
xchg
and
xor
xor
dec
in
push
push
aam
loopne
and
add
jbe
bound
setne
jb
fs
jg
or
loope
jg
es
fisubrl
fidivs
sbbl
inc
fiaddl
outsl
add
test
clc
sub
in
aad
ss
hlt
enter
enter
xchg
lock
shrb
jne
cld
and
xchg
sub
sub
pop
pop
loopne
xchg
dec
inc
add
cmp
xor
lcall
sahf
jb
push
inc
pushf
test
int
mov
ja
in
aad
jecxz
mov
enter
in
pop
stos
cli
xor
inc
or
outsb
dec
icebp
ret
xchg
push
clc
xor
adc
out
add
icebp
mov
repnz
test
repz
cs
push
ljmp
std
xchg
dec
sbb
pop
cmpb
sub
cli
xchg
scas
shll
add
sbb
test
inc
sbb
lock
dec
mov
mov
push
dec
stos
add
fidivs
lret
loope
add
xor
push
ror
pop
in
in
xorl
aaa
stos
push
sub
repz
adc
fdivrs
xchg
pop
pop
out
mov
inc
mov
aad
xchg
pop
xchg
outsb
or
sbb
outsl
mov
aaa
mov
lret
lret
into
mov
gs
jns
fldt
and
push
or
add
inc
pop
gs
mov
mov
in
subl
shrb
sbb
cmp
lods
addr16
inc
mov
xchg
adc
aaa
std
mov
adc
sbb
mov
jmp
repnz
and
adc
rorl
mov
or
fnstcw
lods
add
js
sub
aam
pop
push
mov
hlt
lea
jecxz
mov
mov
movsb
lret
aas
inc
jle
repnz
push
cmpsl
mov
mov
push
mov
jl
push
xchg
mov
cmp
divl
nop
pop
popa
bound
sbb
pop
popf
lea
xor
push
iret
les
cmp
dec
cmp
inc
scas
and
imul
mov
outsl
cli
sub
add
gs
stc
nop
dec
xchg
inc
fcmovb
outsb
xor
outsb
shll
add
jp
lret
fwait
std
fs
adc
xchg
scas
movsb
and
rcrb
mov
sbb
imul
and
dec
bound
in
gs
fsts
mov
mov
pop
sahf
or
push
mov
imul
repnz
movsb
aam
lea
mov
loop
push
sahf
aad
xchg
in
mov
pop
movsb
mov
ja
xchg
aaa
sti
ret
xor
movsb
sub
mov
fmul
movsb
mov
jb
bound
std
mov
in
mov
pop
cmp
dec
std
pop
dec
rorb
jae
add
mov
xchg
imul
pop
or
fsubrp
inc
popa
xchg
cmp
inc
dec
sbbb
pusha
xchg
dec
mov
or
loopne
idivb
cmp
jl
xor
xor
idivb
mov
jle
fsubrl
push
push
std
xchg
pusha
insl
sti
shlb
shll
dec
outsl
ret
mov
lea
je
add
xchg
loope
jne
jecxz
cmp
inc
sbb
in
sbb
fistl
jge
and
ja
xchg
sbb
loope
pop
cmp
js
mov
dec
pusha
fwait
sbb
or
lds
enter
loop
xchg
jo
mov
mov
pop
out
into
mov
in
outsl
stos
mov
je
mov
inc
sub
and
mov
sar
lret
lret
mov
outsl
jns
mov
les
lret
fnstenv
jbe
out
push
imull
push
fwait
ljmp
out
push
jae
or
in
mov
rcl
push
mov
rcll
push
mov
and
and
pop
and
aaa
je
andb
cmc
mov
and
subl
mov
imul
imul
shll
sahf
xor
sti
sbb
sbb
sub
adc
mov
js
repz
inc
adc
orb
adc
dec
out
jo
shl
sub
out
bound
stos
subb
inc
cmpl
sbbb
mov
loopne
inc
test
or
dec
into
lods
sbb
test
cmpb
dec
cmp
sub
das
mov
lahf
gs
ret
lds
or
aam
xchg
popa
subb
cwtl
dec
std
jmp
flds
mov
jmp
mov
pop
andb
mov
sbb
mov
jo
movsb
aaa
rcll
inc
adc
or
popa
push
pop
or
sti
pop
popl
jo
addb
adc
sub
loop
jb
push
lret
ljmp
rcl
aad
dec
cmp
daa
sbbb
test
ds
mov
add
xor
pusha
in
jno
sahf
xchg
pop
xor
mov
jmp
imul
push
xchg
pop
dec
scas
mov
outsb
repz
daa
add
dec
mov
add
sbb
dec
jecxz
imul
imulb
xor
repz
aad
add
adc
dec
jle
xor
mov
push
and
dec
jno,pn
jbe
sub
dec
mov
loope
lcall
add
fs
clc
fcmovnbe
test
mov
je
cwtl
int
mov
xor
xor
test
inc
push
out
ltr
xor
jnp
test
add
dec
push
or
xor
in
and
enter
inc
mov
xchg
inc
imul
das
xchg
popa
mov
dec
test
mov
cwtl
pop
aad
jl
and
stos
test
leave
jecxz
sbbb
add
call
pop
xlat
cmp
sbb
fists
addb
push
jbe
in
fbstp
pop
mov
push
mov
pop
fidivs
add
lods
mov
or
icebp
mov
pusha
or
xchg
in
in
jb
inc
cwtl
loopne
das
push
scas
mov
in
sbb
shrl
popf
ss
xor
or
cmp
mov
or
arpl
cmp
fsubs
or
sub
icebp
int
mov
pop
out
js
sahf
rcrb
testb
jle
push
pop
add
mov
in
into
jp
arpl
lcall
pop
adc
lea
xor
mov
fisubrl
or
add
sub
add
incl
cwtl
xor
jb
out
pop
mov
test
xor
loop
jle
adcb
sub
aad
mov
js
sbb
pusha
ss
mulb
sbb
inc
lods
cmp
aad
into
scas
out
jecxz
sub
imul
loop
test
and
lods
xlat
addl
popa
cmp
pushf
jno
imul
mov
mov
out
icebp
adcl
mov
jmp
jae
xchg
sbb
pushf
cmpb
mov
imul
jmp
jmp
repz
mov
jo
xor
jae
test
adc
mov
jbe
aam
test
imul
imul
ss
and
adc
data16
mov
test
mov
je
push
mov
nop
out
or
in
roll
into
jg
jge
push
xchg
mov
mov
xchg
and
cwtl
push
mov
fwait
bnd
test
int
addl
je
add
or
call
and
mov
dec
ret
cmp
fcom
push
xor
out
xchg
ret
clc
push
call
xchg
push
pop
repz
cltd
stos
rorb
jp
xor
cmp
add
outsl
jns
mov
shl
test
dec
push
int
arpl
andb
adc
sub
mov
nop
pop
xchg
stc
aad
pop
mov
jns
outsl
sub
mov
or
and
push
fisubl
mov
mov
into
sbb
sbb
ss
popa
push
xor
ja
inc
and
xor
xchg
mov
je
aam
or
add
in
dec
adc
adc
adc
sbb
mov
int3
imul
ljmp
mov
test
out
inc
rorl
or
fcmove
xor
aaa
pop
sbbb
aaa
lock
pop
and
sarb
scas
popf
push
xchg
test
sbb
pop
jo
fadd
push
adc
ret
aad
bnd
gs
loop
or
ficoml
pop
push
pop
inc
xchg
lcall
mov
int
adc
fsubrp
pop
add
scas
sub
pushf
inc
push
xchg
xchg
sbb
movsb
aas
xchg
loopne
cwtl
aad
addr16
mov
mov
mov
loopne
mov
js
std
movsl
lahf
mov
xchg
notl
int3
adc
insl
rolb
xor
mov
popa
xor
movsl
sbb
add
popa
sahf
pop
out
stos
xchg
sub
pop
mov
in
scas
pushf
xor
jp
pop
inc
add
lea
sbb
fcompl
mov
cmpsl
lret
lret
jno
addl
mov
pop
and
sti
outsl
mov
call
pop
dec
mov
test
jo
data16
fsubl
push
tzmsk
or
sbb
arpl
in
insl
sbb
pop
pop
or
push
insl
enter
mov
pusha
pushl
xor
jb
test
cmp
lods
sbb
out
je
icebp
mov
popf
bound
test
push
and
shll
mov
sahf
xchg
push
cmpsl
cltd
xor
mov
inc
pop
mov
ss
mov
jae
inc
jbe
std
sbbb
pop
jne
dec
cs
std
mov
popf
sub
add
subb
mov
mov
mov
movsl
fmuls
mov
enter
dec
sub
mov
scas
sub
pop
std
and
mov
test
inc
mov
mov
pop
cli
push
inc
add
enter
pushf
repz
xorb
adcl
lret
fnstenv
mov
lods
xlat
dec
mov
jnp
pop
sub
cmp
dec
rol
out
lret
outsl
outsl
push
jno
adcb
pop
mov
fmull
addr16
inc
mov
mov
cmp
add
pop
out
xor
and
cmpsl
sbb
ror
push
lahf
pop
push
sub
lea
cmp
fprem
xor
jnp
pop
fsubs
sub
mov
jne
mov
ret
pusha
mov
fst
pop
or
lahf
cmc
push
das
mov
aam
dec
xchg
mov
sub
aam
jmp
aaa
ret
shrl
lea
ret
mov
sbbb
shrl
into
loope
rcr
cmc
mov
stos
mov
adc
testb
jne
imull
or
cwtl
xor
mov
imul
dec
icebp
movsl
push
jp
jns
cwtl
ret
fs
push
push
mov
xchg
incl
movsb
adcl
ret
outsl
jb
add
nop
popa
out
mov
mov
mov
dec
out
cmp
cmpsl
or
jmp
inc
xor
cld
jb,pn
pop
or
nop
lods
imulb
pop
cmp
sbb
dec
repz
xchg
fldcw
dec
fbstp
dec
jo
in
std
xchg
pop
and
lods
sub
sbb
pop
lock
adc
ja
dec
mov
cs
fidivl
pop
mov
dec
cmp
pop
idivb
ret
add
jmp
fstps
test
daa
sub
sub
add
test
loope
mov
add
cld
ja
data16
xchg
scas
test
inc
lods
pop
xor
or
jbe
sub
in
mov
out
pop
mov
xor
add
inc
shll
add
std
jle
movsl
and
push
sbbl
cmp
dec
cmp
pop
jo
outsb
inc
push
xchg
cmpsb
cmp
cwtl
dec
inc
imull
sti
fwait
lock
mov
popa
adc
xor
repz
jns
xchg
sub
fwait
mov
cmp
lret
lock
adc
xor
lock
adc
xor
add
cmpsb
or
inc
sub
mov
cld
or
xor
jp
fs
mov
sbb
cmpsb
xorb
mov
push
xchg
xchg
xchg
sarb
decb
and
xor
push
aad
pop
mov
mov
xchg
adc
push
cmpsb
and
jns
je
cli
xchg
repz
push
iret
loope
imul
mov
lods
inc
inc
lods
rolb
fisttpll
mov
ljmp
andl
mov
and
popa
and
shlb
je
js
jecxz
aad
push
inc
cmpsb
or
scas
jecxz
mov
jle
mov
mov
ljmp
xchg
push
xchg
insb
push
push
xchg
out
jmp
aas
mov
dec
dec
add
sub
cs
add
mov
add
pop
ss
enter
inc
and
adc
shll
cwtl
mov
pop
test
lods
pop
mov
pop
daa
sub
stos
cmp
mov
inc
pop
push
insl
xchg
lret
adc
adc
daa
ja
jmp
sahf
inc
fcmove
inc
subb
mov
jle
or
push
pop
dec
pop
add
mov
add
mov
add
lods
mov
mov
push
cltd
test
in
les
pop
push
movsb
testl
push
dec
lret
fs
mov
adc
or
and
mov
cmc
popa
add
cmp
add
rcrb
sti
push
out
mov
xor
enter
inc
shlb
enter
mov
cmp
ss
and
sub
ds
pushf
test
mov
and
pop
mov
sub
xor
aad
arpl
jecxz
subb
call
data16
inc
or
nop
adc
in
sbb
jle
push
lcall
popa
sbb
cmp
dec
push
das
sbb
or
pop
movsl
cmp
pop
jl
jmp
inc
fisubrl
rcrb
mov
push
cmpb
push
mov
xor
scas
and
jae
or
xlat
xor
xor
cmc
in
dec
mov
jae
or
aam
rclb
ret
sub
in
jecxz
scas
test
mov
arpl
movsb
popa
insb
loop
stos
mov
add
inc
shl
jge
ffreep
xor
lcall
ds
stc
push
inc
add
hlt
gs
cwtl
xor
stos
mov
lds
sahf
cmc
sti
push
adcl
lahf
andl
clc
push
cbtw
add
inc
mov
fsubr
push
ret
pop
and
and
ljmp
sysexit
add
sub
sbb
scas
loop
popa
and
scas
sbb
lret
ja
call
mov
test
andb
pop
push
adc
test
icebp
pushf
jmp
loop
mov
mov
ret
popa
add
jne
add
inc
adc
or
and
cmpl
jg
and
pop
ret
hlt
jp
jl
fiadds
stos
idivl
shrb
xrelease
icebp
or
outsb
adc
and
xor
pushf
jle
push
or
into
mov
imul
mov
rclb
mov
in
or
and
xchg
jp
test
leave
adc
push
adc
sub
les
clc
adc
scas
mov
mov
mov
adc
scas
add
andb
cmp
dec
lock
sub
and
ja
and
lret
cld
les
xchg
jb
jns
les
js
inc
dec
mov
in
jne
inc
aad
popf
and
xor
mov
insl
mov
ljmp
popf
mov
adc
popf
mov
iret
pop
cmp
inc
shrb
ds
or
scas
test
or
aas
xchg
push
out
repnz
stos
mov
mov
push
fldt
mov
mov
push
insb
cmp
in
mov
out
cmp
cwtl
fisttps
mov
das
lret
pop
popf
imul
xchg
in
and
xchg
cld
cmp
andl
add
mov
iret
push
leave
pop
out
mov
outsb
shl
test
cmp
sub
imulb
and
mov
outsb
fcompl
mov
push
cmpsb
cmp
sarl
aad
rol
in
ret
cwtl
mov
add
push
mov
pop
mov
push
cmp
insl
cmp
push
rcrl
mov
outsb
mov
push
mov
lret
clc
test
xchg
fsub
inc
xchg
jp
imul
cli
ss
es
mov
adc
and
outsl
es
out
daa
lds
ja
in
xor
lret
pop
jp
cmp
mov
inc
push
lahf
mov
rcrb
notl
sbb
jg
mov
jnp
inc
pop
sub
cmp
push
leave
into
add
sub
add
mov
mov
mul
mov
in
into
push
or
cmp
das
imul
sub
inc
pop
lret
dec
push
jmp
sbbl
xchg
shll
movsl
in
and
mov
mov
stos
ret
sahf
dec
pop
inc
add
xchg
jge
lcall
xrelease
repnz
cs
loope
mov
and
xor
incl
je
jno
daa
xchg
cli
xchg
mov
dec
mov
icebp
dec
ret
aad
mov
push
test
or
test
std
shll
leave
hlt
pusha
jbe
dec
cwtl
pop
sub
outsl
insb
xchg
pop
cmp
stc
sbb
sbb
mov
add
mov
push
dec
call
pusha
sti
aas
cld
push
or
or
cmpsb
insb
scas
xchg
xchg
jnp
add
daa
ret
jo
lds
std
sbb
adc
xchg
adc
xorb
lcall
push
cmp
in
sub
iret
ret
push
jle
in
add
add
pop
push
xlat
xor
adc
sbb
mov
dec
nop
jl
push
stos
inc
scas
out
enter
inc
push
push
xor
xor
xchg
ja
addr16
sbb
push
dec
pop
fisubs
jno
stos
xchg
setb
jp
pushf
cmc
mov
jge
in
add
jmp
push
xchg
pop
cmp
inc
cltd
std
mov
cmpsb
adc
xchg
mov
mov
sub
xchg
arpl
cmc
lret
xsave
mov
adcb
pop
arpl
mov
sahf
mov
leave
ss
xor
jnp
xchg
call
cltd
mov
dec
sub
pop
and
es
nop
or
popa
and
aas
mov
in
sarl
aas
add
out
shll
shl
pusha
cmp
ss
xchg
out
cmp
ds
and
mov
int
bound
cmp
sbbl
nop
in
lret
daa
push
inc
aaa
icebp
cltd
push
add
adc
inc
and
dec
cwtl
jmp
dec
in
inc
jno
push
or
adc
sbb
pushf
lahf
inc
add
jecxz
adc
push
mov
les
adc
xorl
pop
jns
mov
lcall
push
push
loop
les
mov
lods
inc
clc
cwtl
repnz
xor
hlt
push
mov
mov
cld
sub
aad
sbb
gs
jne
pusha
sti
sub
stc
and
mov
sub
sbb
push
sbb
cmp
imul
jg
add
mov
mov
push
lods
sbb
imul
fsubrp
dec
pop
xor
iret
cs
push
xchg
gs
and
sti
insl
hlt
pop
stos
xor
pop
es
shrl
mov
adc
sub
aam
orb
xor
xchg
dec
pop
add
dec
es
push
shl
rcrl
fsts
jns
cmp
dec
add
push
jb
sbb
cmp
or
lahf
inc
cmc
push
dec
aaa
sbb
cli
rorb
clc
push
mov
std
movsb
cmp
cld
rorl
adc
pop
mov
inc
cmp
ss
lahf
daa
and
mov
xor
adc
ss
lcall
dec
out
xchg
ror
mov
outsb
aam
rcll
scas
sti
or
int
push
xor
mov
arpl
nop
sub
dec
push
test
shl
cmpsb
xchg
and
push
and
cmp
add
movsl
mov
xor
daa
sub
iret
std
lods
std
sbb
iret
rolb
in
aaa
in
sysexit
adc
lds
pop
das
scas
frstor
inc
fisubrl
xchg
stos
ret
dec
fsubr
jl
icebp
mov
jp
scas
jmp
cmp
add
sti
out
or
sub
addr16
gs
fs
mov
pushf
mov
inc
jmp
push
mov
or
dec
mov
or
lret
cmp
mov
test
or
shlb
cli
mov
push
ja
stos
inc
jle
lret
push
pop
push
fdivs
into
mov
xor
jns
repz
jle
loopne
repz
loop
mov
arpl
adc
mov
aam
rcll
ret
add
adcl
mov
fisttps
mov
popf
test
ret
dec
data16
dec
cmc
xlat
mov
cmp
icebp
add
and
int
inc
cmp
cmpsb
and
shlb
sbb
cmp
in
dec
aam
jp
push
mov
add
jecxz
stc
cli
or
xor
nop
stc
outsl
cld
test
xchg
pop
pushf
add
jg
adc
push
leave
dec
jne
test
xlat
in
incl
adc
aad
out
add
mov
lea
movsb
stos
test
push
cmpsb
faddl
aad
inc
pop
xor
outsb
fistps
mov
mov
push
lea
xchg
jmp
or
rol
push
fnstenv
hlt
sbb
ljmp
inc
stos
xchg
dec
mov
lcall
add
and
mov
fimuls
xchg
push
loop
outsb
push
push
cltd
test
pop
lods
aaa
mov
out
adcl
lea
sbb
cmp
or
inc
xlat
fldcw
test
imul
pop
ljmp
rcll
inc
dec
xchg
jge
sbb
push
pop
test
inc
mov
pop
arpl
inc
dec
mov
cld
push
pusha
jg
sbb
imul
adc
push
stos
pushf
gs
ficoms
fldl
loopne
adc
mov
xchg
xchg
pop
cwtl
jmp
cmp
inc
push
jb
xor
in
cld
jmp
lcall
or
jg
shlb
xchg
repnz
push
mov
lahf
jle
sti
sub
sbb
push
add
add
mov
cmp
inc
jns
stc
xor
cmp
scas
call
mov
pop
test
and
mov
scas
stos
cltd
pop
pushf
or
xchg
mov
cmpsb
cmp
fidivl
int3
loope
incb
vcomiss
fists
test
jmp
jb
sub
pop
imul
lock
ljmp
pop
push
jno
test
lods
sub
int
xchg
or
lret
cmp
daa
xchg
xchg
and
xchg
mov
inc
fidivl
out
outsb
in
pushf
push
clc
aas
loopne
lcall
lret
adc
push
mov
mov
rorb
lock
shlb
jb
sbb
push
xlat
outsl
push
movsl
loop
xlat
call
add
mov
pop
xor
and
fldt
pop
pusha
testl
jle
mov
ret
push
cmp
and
out
push
push
loope
out
std
add
mov
cmp
outsl
data16
and
test
lcall
push
lods
sub
nop
inc
repz
pop
stos
push
add
fsubrl
mov
in
test
cmp
fisttpll
xchg
repnz
mov
mov
cmp
rorb
xor
sub
dec
pop
mov
sub
jbe
mov
int
inc
dec
dec
jnp
xchg
sub
addl
sbb
push
movsl
imul
js
mov
cmc
mov
cmpsb
dec
jno
stc
cwtl
scas
cmp
mov
scas
mov
pop
mov
dec
dec
adc
mov
mov
add
sbb
push
loope
push
xor
aas
pop
add
xlat
jge
dec
in
mov
cmp
dec
pop
ljmp
ja
subb
inc
fstl
fwait
adc
inc
fsubs
mov
lcall
fldcw
mov
pop
ret
jecxz
clc
inc
sbb
or
jle
sub
pop
rorl
push
lods
popa
cs
in
push
sub
out
jg
xlat
or
or
xchg
mov
xor
dec
icebp
push
inc
fadds
or
scas
xchg
and
jb
data16
shrl
mov
cmp
and
push
mov
cs
sub
lods
test
cmp
push
push
jae
jmp
lods
inc
loopne
aas
sub
mov
das
add
and
cs
out
icebp
adc
and
shlb
ljmp
gs
or
push
cmp
sbb
popf
inc
inc
add
adc
sub
cmp
xchg
sarl
dec
lea
add
or
sbb
sbb
dec
rcrb
into
stos
xchg
xor
inc
in
and
adcb
pop
inc
fistps
xchg
jp
and
pop
sbb
sbb
jns
xchg
xchg
gs
scas
sbb
cs
jo
push
xchg
mov
pushf
in
int3
cmp
insl
xchg
mov
out
je
mov
lds
push
fistpll
mov
fdivr
pushf
dec
push
push
imul
mov
mov
pop
mov
or
test
inc
leave
in
flds
andl
mov
test
cli
rcrb
outsl
xchg
push
movl
pop
xor
in
std
rclb
lea
les
mov
aas
mov
mov
xor
sub
imul
fstl
jmp
mov
jne
push
push
xor
dec
push
xchg
mov
pop
jle
insb
pop
testb
mov
push
mov
mov
pop
in
aaa
lret
fdivrl
jnp
std
push
outsb
xor
pop
adc
popa
xor
or
mov
int
xchg
cmp
lcall
and
cli
or
lahf
pop
mov
cmp
cld
outsb
push
dec
and
mov
mov
aaa
int3
xor
sahf
insb
push
push
ljmp
pop
pusha
jae
adcl
adc
jae
sbb
adc
fs
pop
insb
movsb
pop
shl
vhsubps
clc
mov
sub
inc
add
rcl
or
adc
loop
sbb
shlb
mov
fwait
int
push
fs
cmc
lcall
jne
roll
aaa
inc
int
add
cmpsl
cmp
jmp
iret
popf
das
fwait
cmpsl
pop
dec
out
hlt
sub
or
sahf
dec
jecxz
iret
or
jne
and
pop
mov
stc
mov
mov
sbb
jge
xchg
pop
mov
or
lea
mov
outsb
imul
mov
push
setne
jae
cs
dec
cmp
pop
jns
jns
cs
les
sbb
imul
pop
jb
jmp
adc
test
dec
loop
cmpsl
mov
jle
lock
inc
pop
xor
scas
pushf
jne
sahf
out
leave
push
sti
sarb
repz
popa
sahf
jge
mov
fbstp
mov
sarl
outsl
outsl
push
lahf
popf
mov
jmp
mov
pusha
adcl
fisttps
push
xor
addr16
xor
clc
insl
pushf
mov
xchg
je
pop
clc
into
mov
xchg
add
mov
int3
fimuls
aas
mov
or
leave
daa
pushf
inc
or
sbb
jbe
sbb
fsubl
sbb
aad
mov
dec
rcr
or
or
stos
dec
scas
add
jmp
fiaddl
cld
jl
in
cwtl
push
or
cmp
sub
xor
testb
icebp
lret
xchg
mov
call
gs
sbb
gs
jae
adc
cmp
push
pusha
or
mov
shrl
mov
mov
lcall
notb
inc
shrl
xor
int
push
inc
fdivs
fstpl
paddsw
mov
jb
pop
sub
aam
pusha
cmp
add
in
decl
inc
push
xchg
lds
cmp
mov
mov
mov
iret
and
iret
shrl
push
js
sbb
jp
pop
push
sbb
sub
pop
mov
inc
cmp
outsb
rcrl
mov
mov
or
ret
xor
repz
adc
cmp
les
pop
and
int3
mov
fiaddl
imul
add
repnz
outsb
repz
push
push
pop
aaa
and
pop
js
hlt
inc
pop
xor
lea
push
cli
inc
mov
lods
and
xchg
fwait
es
mov
sub
fnstenv
pop
sti
es
dec
stos
ljmp
pushf
pop
mov
push
inc
xor
jle
dec
loopne
dec
add
mov
adc
out
pop
dec
or
out
imul
outsl
dec
test
pop
test
pushf
sub
mov
ror
lea
jmp
xorb
jg
roll
je
add
in
test
shrl
mov
jbe
ret
xchg
call
in
aas
fdivrs
xchg
leave
fsubrp
int
xchg
sub
add
jg
mov
push
lcall
test
lahf
cmp
scas
js
pop
cmc
jecxz
adc
pushl
xor
push
or
movsl
nop
shrb
dec
dec
xchg
mov
xor
mov
xchg
xlat
xchg
inc
cmc
clc
sbb
xchg
ss
in
test
fld
sbb
leave
sub
xor
rcll
mov
in
pop
sub
aam
jae
mov
test
sub
xlat
gs
les
jae
les
addl
sahf
push
cld
mov
rclb
arpl
jb
sub
mov
dec
jecxz
lret
mov
jecxz
gs
adc
push
popa
bound
outsl
push
fbld
nop
fistpl
ret
cmp
cltd
addr16
inc
push
ret
jbe
push
inc
push
sub
and
fcomps
adcl
lods
rcrl
out
int3
or
xchg
test
fxch
fnstenv
stc
inc
fbld
repnz
cmp
xchg
sub
mull
and
inc
insl
cmpb
rclb
loopne
dec
shrb
test
push
sub
stos
mov
fmull
mov
mov
dec
dec
sub
bound
jns
mov
clc
or
or
xchg
cmpsl
dec
mov
mov
add
ds
dec
push
pop
fidivs
iret
mov
std
cmpsb
and
push
mov
mov
mov
cld
jg
ret
pop
or
lahf
xor
test
mov
aad
jne
test
outsb
inc
pop
xchg
test
cmpsl
fnstenv
scas
sub
outsl
dec
in
pmulhw
not
jl
test
jmp
xor
xchg
stos
pop
cmpsb
sbbl
ficompl
and
sub
jp
add
sbb
jge
or
iret
xor
pop
mov
movsl
jae
mov
pop
sub
adc
imul
pop
add
cwtl
lcall
ljmp
or
xchg
mov
mov
cmp
push
insb
pop
imul
push
mov
data16
lahf
jecxz
inc
cmp
mov
jns
iret
pushw
jge
push
icebp
mov
out
in
or
adc
aaa
cmp
adcb
adcb
mov
jmp
lods
mov
ja
dec
ss
mov
mov
filds
rcl
fs
cltd
dec
rclb
lods
mov
popa
add
lods
jbe
ficomps
mov
push
inc
pop
xchg
lods
sub
jecxz
cmp
shrl
fnstsw
aaa
idivb
xchg
data16
cs
mov
pop
cmp
popl
mov
dec
xor
mov
push
fbstp
push
jle
dec
call
movsb
cmp
pop
sahf
xor
pusha
sbb
fsubp
pusha
push
jmp
jno
inc
add
je
fwait
scas
or
push
jo
fisubs
test
or
and
jnp
mov
addr16
xor
mov
insl
pop
inc
outsl
jg
mov
cmpsb
jbe
pop
call
push
out
xor
fistpll
inc
repnz
xor
bound
mov
mov
mov
inc
loopne
lds
xlat
negb
aam
fildll
aad
ja
call
dec
repnz
mov
sbb
test
add
jb
push
pop
xor
scas
or
out
push
dec
xchg
cmpsl
sbb
cld
jo
adc
in
sahf
addr16
fwait
xor
add
mov
in
mov
shrb
xor
jno
div
jp
push
push
inc
cmp
add
xchg
pop
mov
std
mov
adc
xchg
jg
in
cmpl
movsb
lds
cmpsl
cmp
jne
out
scas
outsl
aas
push
xchg
add
movsl
mov
outsl
fidivs
test
adc
xchg
mov
int3
add
pop
ret
arpl
jo
pop
adc
mov
mov
in
scas
cmp
or
and
mov
mov
das
clc
mov
sub
mov
jle
add
push
rcrb
rol
add
jae
insl
ret
mov
push
sbb
cli
fcomi
push
in
push
lahf
sbbb
fnstsw
sbb
mov
inc
mov
mov
and
dec
dec
mov
roll
lret
out
loop
push
or
nop
jge
shrl
dec
mov
enter
sbb
loop
mov
aad
insl
xchg
fiaddl
imul
mov
aad
cltd
cmp
adc
pop
rcrb
scas
imul
stc
les
xchg
cmc
xchg
stos
adc
sti
or
data16
insl
mov
scas
or
add
stos
lahf
rclb
shll
das
cmp
fbld
inc
dec
pop
lock
mov
inc
insl
rolb
mov
cmp
gs
mov
outsb
outsl
loope
xor
sahf
out
xor
lods
jmp
lea
arpl
sub
cmp
mov
movsl
cmp
add
lods
pop
mov
add
xor
jne
imul
mov
pop
cmp
dec
and
into
xor
sbb
movsb
lret
cltd
adc
push
repnz
push
adc
xchg
pop
xor
jg
sbb
jl
cmp
xchg
fnstcw
or
add
add
mov
mov
sub
int
dec
iret
out
ja
push
fsubrs
scas
dec
push
test
fistpll
in
arpl
clc
mov
aam
mov
ja
xlat
insl
outsl
mov
add
push
add
mov
and
cmp
inc
fildll
push
or
jmp
cltd
adc
mov
add
mov
mov
mov
mov
mov
mov
in
das
lods
add
xchg
movsb
enter
dec
push
clc
mov
jle
aad
pop
ljmp
push
movsb
das
aad
bound
daa
mov
outsl
xlat
jmp
mov
ffreep
mov
jno
push
push
sub
insb
in
test
repz
dec
mov
push
dec
pusha
push
fildl
pusha
mov
or
nop
shrl
and
in
imul
sbb
xchg
push
idivl
fcomip
and
stos
add
nop
mov
cmp
sbbb
ret
xor
popf
je
stos
enter
sti
xchg
mov
push
sbb
loop
lcall
pusha
cld
xchg
pop
pop
sub
out
inc
inc
mov
sbb
and
rclb
inc
gs
jmp
negl
mov
pop
repnz
inc
adc
pop
ja
divl
enter
mov
sub
test
xor
xor
nopl
sbb
int
xchg
aad
xorb
mov
push
mov
sarb
mov
loope
fdivrs
mov
popf
push
adcb
inc
sahf
jb
inc
inc
addb
push
mov
sbb
hlt
cmpsl
sarb
call
sub
sbb
jne
add
fdiv
mov
movsb
xor
add
pop
data16
mov
je
jns
lods
sub
mov
lret
fmul
sub
out
popf
dec
sahf
aaa
stos
mov
stos
insb
add
cmpsl
mov
inc
data16
push
mov
cmp
jns
pop
cmpsl
add
pop
mov
push
cltd
shlb
add
push
rorb
cltd
fldenv
lret
ds
pop
int3
dec
mov
push
dec
sub
decl
dec
fisubl
sahf
inc
push
dec
mov
mov
pop
adc
or
dec
lock
movsl
cmp
pop
mov
inc
xor
adc
jne
push
addr16
dec
fcmovnb
repnz
out
pop
cs
das
push
fwait
or
movsl
icebp
loop
add
loope
xchg
push
ja
hlt
xchg
aad
xchg
lcall
shrl
mov
pushf
cwtl
jb
sub
cli
xor
pop
inc
fimuls
sbb
jnp
mov
fdivl
mov
shrl
or
inc
mov
and
scas
leave
inc
loope
fists
lods
and
xchg
es
add
icebp
dec
test
mov
and
je
jg
ja
add
mov
xchg
push
cmp
rcrb
lret
pop
push
cld
mov
push
neg
mov
jl
cmp
movsb
jge
mov
mov
or
ss
jns
sub
mov
test
pusha
add
jl
nop
ss
ret
dec
inc
pop
repnz
lret
loopnew
shr
iret
ljmp
popf
push
outsb
andl
test
mov
sub
imul
xor
pop
repnz
aaa
int
jns
lock
dec
dec
adc
push
out
cmpsb
divl
repz
xchg
cmp
out
jno
in
test
mov
fwait
adcl
pop
xor
sbb
movsl
lret
or
in
xor
roll
int3
pop
push
push
leave
pusha
inc
pop
data16
dec
out
sub
mov
popf
or
inc
fstl
aam
outsl
sahf
push
adc
push
in
inc
adc
out
pop
clc
fdivrs
test
lret
movsb
xor
mov
dec
push
imul
into
shrl
add
pop
add
aaa
inc
and
fdivs
sub
xchg
pop
push
push
push
in
in
rolb
mov
shl
jecxz
cmpsb
out
call
rolb
fisttpll
push
jl
scas
pop
outsl
jecxz
cmp
repz
jmp
fwait
mul
mov
test
in
shll
pop
aaa
mov
stos
xor
dec
pop
add
mov
ret
or
sbb
cmpsb
jge,pn
xchg
dec
xchg
sbb
add
lds
sub
pop
pop
pop
add
push
das
sbb
mov
mov
adc
fidivrl
fdivr
into
pop
movsl
sbb
xchg
repnz
fldt
adc
add
xchg
dec
mov
push
mov
add
push
lahf
out
xchg
or
cmp
and
adc
dec
dec
incl
nop
out
mov
imul
sub
cmpsb
pop
dec
dec
dec
loop
jb
cmpl
ja
mov
jl
xchg
lods
test
scas
ret
fidivrs
ja
add
push
dec
mov
xchg
xchg
out
loope
pop
mov
pusha
test
outsl
daa
sub
pop
out
roll
pop
or
ss
aaa
pop
ss
cld
mov
daa
je
push
jp
or
std
repnz
cltd
mov
das
mov
sub
mov
lods
cli
aaa
aad
dec
xor
movsb
lahf
pop
in
popa
inc
jbe
jge
jae
cmc
fsubl
mov
push
andl
push
dec
mov
insl
sub
sbb
out
and
bound
mov
mov
xchg
push
fisttpl
lea
mov
mov
push
pop
add
add
std
push
add
ljmp
mov
in
mov
push
push
adc
inc
div
xor
cs
cmpsl
inc
loope
jge
js
cmp
call
into
and
stc
sbb
rclb
mov
hlt
leave
out
adc
addb
cmp
dec
lret
in
mov
arpl
cmp
push
dec
call
push
aam
popf
push
jne
subb
cmpl
pop
jb
insl
jle
xchg
movsl
stos
int
xchg
push
lcall
clc
lock
adc
test
lret
mov
sub
mov
dec
dec
ss
in
pop
in
mov
popf
xor
add
popf
inc
mov
mov
pop
xchg
add
popa
test
sbb
out
das
jg
add
push
mov
add
xchg
mov
sbb
pop
xor
push
mov
lret
dec
sbbb
test
fdivr
fstpt
sti
mov
dec
aad
std
xchg
adc
fs
or
pop
into
ret
jp
xor
hlt
mov
repz
dec
loopne
stos
rcr
addr16
scas
shll
push
aad
addr16
xor
addb
pop
mov
movsl
push
out
sarb
movsb
loopne
pop
stos
jg
or
shlb
dec
mov
clc
mov
call
fcmovnbe
cwtl
addb
jecxz
mov
bound
popf
cld
rcrl
lret
and
not
fwait
xor
adc
fwait
bound
sbb
aaa
arpl
stos
fsubs
pusha
jmp
fadds
data16
andl
stc
cmp
pop
test
cmp
cs
adc
es
add
scas
aad
shlb
test
nop
neg
int3
sub
mov
add
push
xchg
lret
or
enter
inc
jae
inc
pop
test
stos
sub
fsubr
dec
and
out
push
shlb
shl
inc
cmpsb
lret
sub
test
add
xchg
mov
pop
iret
jg
dec
add
dec
lret
mov
ret
xor
lcall
pop
stos
or
insb
stos
loop
jbe
aad
mov
mov
dec
pop
mov
adc
daa
ret
lds
push
or
enter
insb
mov
push
cmp
cwtl
arpl
and
andl
mov
ss
cmp
mov
test
push
dec
jp
cld
adc
leave
adc
test
stc
gs
int3
das
push
mov
pop
daa
mov
fisubrl
dec
xchg
push
pushf
add
sub
xchg
pop
addr16
jne
pop
cmp
aas
in
shlb
jb
arpl
mov
add
cltd
cmp
testb
add
call
pop
jnp
or
add
push
repnz
dec
dec
insl
xor
out
jnp
mov
push
cmp
push
and
dec
out
popf
xchg
mov
lods
jnp
test
loop
stos
aas
pop
mov
sub
pop
andl
in
int3
cmp
pop
push
jo
je
push
cbtw
dec
leave
rclb
add
imul
fsubrs
push
jle
int3
in
idivl
xor
and
cld
push
mov
mov
lods
fdivr
xchg
push
inc
push
bound
shl
mov
mov
mov
sbb
dec
cmp
mov
into
dec
loopne
aad
mov
xor
push
sbb
popa
stc
test
and
adc
ja
stos
orl
ds
mov
push
insl
jle
insb
ss
mov
sub
pop
sti
test
xchg
insl
insl
or
les
outsb
clc
xchg
push
nop
push
sub
push
pop
xchg
dec
andb
bound
mov
daa
inc
fstl
mov
and
lds
insb
pusha
out
data16
jmp
xor
xchg
cmc
sahf
adc
sbb
adc
lret
fdivrs
cmovnp
cli
xor
mov
push
fwait
mov
or
mov
push
jge
cmp
addr16
push
xchg
xor
scas
and
movb
xor
enter
adc
and
sub
adcl
jmp
or
push
sbb
adcl
push
aam
add
into
pop
aad
push
outsl
pop
cmp
stos
testl
sbb
inc
add
pop
push
xchg
imul
dec
sub
fstpt
fcompl
js
pop
out
push
mov
add
cltd
sbb
dec
arpl
mov
or
lahf
lods
jo
mov
inc
adc
leave
jns
mov
inc
sbb
aam
pop
nop
pop
hlt
adc
xchg
ret
sub
lods
xor
push
rorl
gs
sbb
adc
icebp
xlat
std
pop
out
movsl
add
pop
jl
pop
cs
xlat
test
jl
int
adc
sbb
fidivl
mov
clc
push
cmc
sub
fstpt
gs
mov
xchg
and
mov
fidivrl
fisubrs
insb
pop
scas
adc
sbb
sbb
into
outsl
sarb
adc
mov
dec
dec
call
mov
out
js
xchg
cwtl
xchg
outsb
subl
cmp
jbe
fidivs
lds
dec
test
or
cli
push
movsb
imul
rcrl
xchg
lahf
cmc
pop
insb
mov
mov
xor
push
lods
lds
pop
int
jmp
call
iret
cmpsb
cmpsl
icebp
aaa
xor
inc
xchg
jno
nop
lock
call
and
sbb
sbb
icebp
sti
fs
fwait
pushf
xchg
add
inc
test
mov
fmul
mov
hlt
jl
rclb
lods
push
out
xlat
outsl
dec
or
sbb
add
and
icebp
xchg
jnp
pop
test
push
sub
movsl
adc
mov
sub
mov
into
mov
sbb
nop
ss
add
jnp
jb
adc
pop
add
jmp
loope,pt
adc
or
jno
leave
mov
mov
ja
pop
shlb
int3
xchg
psubd
mov
or
pusha
dec
in
pop
xchg
sbb
imul
and
mov
add
stos
pop
test
es
cmp
mov
jl
adc
mov
add
cmpsl
aam
xchg
orb
jnp
xchg
in
sahf
ja
sbb
pop
jae
jae
inc
cmp
adc
adc
mov
add
not
shlb
mov
jl
fcomip
popf
xchg
mov
cltd
jo
jmp
mov
and
rdtsc
push
or
jbe
push
mov
popa
cmpb
cmc
or
rclb
or
out
push
sbb
aas
sub
add
mov
out
cmp
dec
dec
les
dec
mov
pop
sbb
xor
movsb
cmp
js
int
mov
aam
pop
mov
jb
stos
in
cmp
into
cmc
xor
push
lock
or
add
shlb
fildll
lds
push
adc
mov
pop
movsb
and
dec
popa
int
incl
aam
jae
rorb
idivl
pop
scas
mov
scas
call
push
loop
cmpsl
inc
or
and
rcr
icebp
adc
stc
sbb
jl
mov
les
push
popa
xor
add
xchg
xor
adc
mov
jno
mov
jge
stc
or
shl
jns
jne
and
call
movsl
test
fsubl
hlt
mov
mov
scas
pop
push
int
mov
test
loope
xchg
xor
dec
xchg
mov
imul
sbb
decl
aas
fidivl
xchg
pushf
mov
jle
fldcw
mov
or
nop
nop
aad
out
loop
add
push
cli
cmp
mov
fisubrl
mov
lcall
cmp
and
mov
cmp
jl
shr
jmpw
xchg
push
mov
imul
jns
jo
or
popa
clc
aam
shrb
jg
movsl
cmp
push
cmpsl
add
cld
adcb
push
popf
pop
stos
bnd
mov
fbstp
mov
xchg
lods
lcall
scas
ja
ljmp
test
mov
test
cltd
or
push
stos
push
jb
repnz
out
sbb
call
es
sbb
sbb
jmp
and
cmp
cmpsl
movsl
push
push
adc
cli
dec
negl
aad
movsb
pop
adc
test
je
jnp
add
lea
inc
pusha
jbe
push
inc
subb
mov
into
jge
jne
mov
dec
xor
push
lock
cmp
mov
and
xchg
sub
or
jb
rcr
fbstp
mov
cli
mov
addl
aad
push
fistpl
lret
sub
adc
add
sub
mov
iret
mov
sti
xchg
mov
or
fcoml
adc
ret
and
lcall
fst
montmul
cmpsb
movb
or
aam
mov
jae
lcall
aad
sahf
enter
cmc
xchg
mov
pop
insl
and
pusha
fiaddl
mov
xchg
in
push
out
outsb
add
lret
popf
icebp
xchg
inc
faddl
shr
xchg
dec
loop
jge
cmp
jmp
mov
enter
cli
sahf
loopne
push
pop
int
dec
jmp
xchg
mov
aas
and
lds
test
jne
pop
adc
repnz
loope
inc
ficomps
dec
sahf
xor
mov
ds
outsl
ds
insl
and
cmpsb
cs
mov
cwtl
das
jg
mov
sub
in
sub
movsl
cmp
test
mov
shlb
sarb
addr16
xchg
pop
mov
push
aas
int
fidivl
outsl
out
or
lea
nop
out
inc
mov
ss
or
test
lahf
stc
mov
rcr
lock
into
dec
adc
jno
rcrb
cmp
push
mov
sbb
mov
rorb
cli
dec
push
js
xor
imulb
push
fs
push
loope
add
jle
push
ret
out
inc
cmp
cmp
sub
lret
data16
add
inc
lds
lods
dec
fnstsw
mov
loope
out
sub
mov
outsb
xchg
xchg
mov
shl
cmc
mov
div
loop
mov
pusha
hlt
movsl
adc
das
mov
pop
mov
xor
test
xchg
in
xor
mov
scas
in
cmp
and
add
fimuls
fistps
aaa
loope
data16
out
scas
pop
sbb
js
je
jae
std
push
ja
gs
test
push
mov
lea
pop
stos
orl
pop
adc
fadd
jp
cs
dec
pop
dec
inc
push
std
leave
mov
test
cli
sbb
dec
jmp
fmulp
jnp
mov
stos
outsb
mov
xchg
aas
pop
push
repnz
or
dec
push
lret
mov
lret
add
push
popa
push
sub
jmp
add
lods
les
pop
pop
sub
mov
sub
aam
jb
jle
inc
fistl
scas
lret
add
cwtl
or
dec
dec
cmp
mov
aam
ljmp
ljmp
pop
nop
mov
add
mov
in
pop
adc
push
int3
dec
into
gs
pop
imul
in
mov
dec
fstp
testb
enter
sub
cltd
mov
shll
push
jp
push
adcl
adc
push
push
leave
ret
push
pop
push
xchg
movsl
cmp
sbb
lods
inc
mov
cmc
jecxz
push
push
xchg
lds
test
into
mov
out
push
and
aas
add
test
mov
pop
out
inc
enter
lcall
sbb
ljmp
inc
sbb
cmp
mov
or
mov
out
inc
lret
pop
pop
push
dec
add
mov
icebp
xor
ficomps
or
jb
sub
filds
and
pop
movsl
loop
jne
icebp
dec
fisubrl
iret
aaa
push
and
mov
stc
push
in
test
arpl
push
pop
sub
or
jns
movsb
mov
ja
fidivs
pop
jns
mov
imul
xchg
fxam
jl
mov
xchg
out
sub
push
iret
push
jg
push
cmpsb
rcrb
pop
daa
jae
icebp
iret
cmc
ja
out
cmc
stos
add
jns
mov
sti
imul
fcmove
mov
xchg
fwait
inc
pmuludq
fs
repnz
xorl
mov
dec
jne
mov
jnp
and
lods
repz
sbb
dec
fimuls
test
pop
rep
inc
xchg
es
cmpsl
mov
stos
in
jecxz
xor
sub
push
test
ficomps
mov
sub
fimuls
outsb
fs
adc
xor
movq
pop
xchg
sbb
push
out
jecxz
jp
lahf
jmp
stc
cwtl
mov
mov
rcrl
adcb
add
jge
nop
xchg
sbb
push
adc
mov
dec
aaa
sbb
and
repnz
leave
ja
push
pop
insb
jle
xchg
xor
jbe
stc
mov
xchg
push
mov
lea
sbb
jle
cmpsb
or
or
push
or
mulb
adc
sahf
pop
inc
jne
mov
loope
lcall
dec
push
inc
cwtl
movsb
stos
mov
fidivs
pop
xor
aas
jecxz
pop
lcall
mov
mov
mov
ret
sub
cmp
sbb
mov
mov
lods
xlat
scas
aaa
dec
mov
dec
mov
clc
inc
sub
add
icebp
dec
loopne
push
nop
pop
xor
addr16
test
dec
push
pop
scas
inc
dec
sti
shl
cmpsl
mov
pop
in
cld
cmp
out
and
xor
mov
dec
cmp
testb
adcl
cmp
push
daa
mov
call
sub
mov
and
xchg
dec
cmp
mov
push
shl
ja
or
leave
imul
lcall
bound
cmp
es
scas
dec
sbb
pop
xor
std
mov
xor
cmpsl
jg
adc
test
sub
jns
rorb
pop
lods
jae
ds
inc
xchg
xor
push
or
js
push
mov
jmp
fldcw
dec
fidivrl
jecxz
inc
xlat
push
rcll
es
loope
or
lret
cmp
loop
dec
aam
or
push
mov
repnz
sub
add
sti
or
sar
loopne
frstor
insl
shrb
adc
lods
xlat
mov
cmp
pop
jno
les
pop
repz
pop
xchg
mov
sub
test
pusha
arpl
mov
sbb
sbbl
or
ja
mov
add
sbb
push
or
push
in
in
loopne
sbb
mov
lahf
xchg
jge
jb
mov
fsts
mov
mov
add
xchg
test
xor
lock
fidivrs
xchg
push
sbb
sbb
sub
sahf
jbe
dec
lea
mov
popa
mov
fucomi
xchg
int3
mov
sbb
pop
add
aad
xlat
fprem
stos
dec
push
mov
ljmp
mov
dec
mov
inc
xchg
mov
adc
sar
andb
jb
mov
pop
or
loopne
sub
lret
fdivs
xor
push
pop
xor
sub
inc
dec
mov
test
or
pusha
pop
les
mov
push
in
es
cmp
sub
repnz
mov
bound
addr16
push
mov
inc
or
int3
pop
inc
jnp
mov
shrl
cld
cwtl
stos
and
jmp
mov
sbb
shrl
sub
ret
or
mov
test
lods
and
out
mov
mov
or
push
add
mov
push
lcall
fnstenv
mov
pop
xchg
add
rcrl
xor
or
in
jbe
fs
divl
fwait
jmp
cld
jne
xor
pop
sub
xchg
or
xchg
jnp
lds
rcrl
test
mov
and
or
int3
jmp
xor
popa
js
mov
out
xchg
fnsave
push
dec
inc
scas
daa
cmp
insl
push
inc
push
test
mov
add
xor
popa
bound
lock
inc
lret
outsb
inc
push
sub
mov
push
iret
lret
push
sahf
dec
negb
jp
call
shlb
sti
jb
mov
dec
mov
jb
add
cmp
shr
jge
dec
cmp
in
test
pop
and
push
shlb
mov
stc
inc
mov
adc
iret
movsl
xchg
out
hlt
in
jb
mov
lods
addr16
mov
pop
insl
push
iret
cs
mov
add
push
sub
outsl
push
mov
aas
imul
imul
scas
mov
push
and
xchg
push
adc
cmc
mov
xor
pop
fbstp
sbb
outsb
incl
mov
xchg
mov
fcmovb
pop
sti
cmp
imul
ljmp
fisttpll
rcll
jle
and
stos
jbe
iret
jle
mov
pop
push
xchg
dec
cs
pop
sbb
lahf
jnp
mov
push
pop
fwait
repnz
cmpsl
mov
lods
fistpl
sbb
mov
xor
dec
mov
push
lahf
pop
mov
imul
and
jmp
ret
push
popf
sbb
jg
cmp
dec
lea
jnp
lret
xlat
sub
mov
aaa
sbb
inc
pop
push
js
dec
and
xchg
cmp
lea
dec
movsb
pop
adc
pop
cmc
arpl
dec
jp
mov
lds
xor
mov
xrelease
out
inc
rorl
cmpsl
dec
xor
push
aam
into
stos
nop
jnp
call
add
testb
adc
ljmp
gs
mov
cmc
sub
dec
and
xlat
jmp
inc
xor
daa
fbstp
dec
push
rolb
lea
nop
decl
pop
data16
pop
pop
inc
repz
mov
jmp
lcall
mov
cmovp
jae
ja
loop
ds
jb
push
sub
sub
jnp
or
sbb
xchg
icebp
pop
adc
pop
idivb
push
daa
cld
xchg
sbb
mov
mov
mov
mov
imulb
ret
inc
mov
lahf
addps
push
fidivrl
sbb
subb
add
mov
testl
jp
cmp
adc
push
add
scas
push
inc
test
inc
frstor
rclb
cmp
mov
aas
and
dec
rcrl
push
push
push
cmp
stc
popf
mov
mov
cs
jne
mov
jo
loop
xchg
mov
andl
cmpsl
add
int3
mov
rcr
popa
sub
jp
out
lock
sub
sbb
out
daa
inc
in
pop
cld
fwait
and
ss
leave
jmp
dec
inc
xor
out
popa
jbe
aas
or
mov
enter
mov
xchg
inc
inc
cmp
ljmp
les
outsl
stos
sbb
and
or
add
cmpsl
sbb
xor
sub
fadd
rorb
adc
mov
mov
and
out
sub
jg
popl
stos
push
sbb
xor
inc
fsubl
imul
mov
popa
daa
jmp
sub
popa
pop
pop
loope
fdivrl
shrl
repz
push
outsb
mov
clc
inc
inc
ljmp
add
orb
jae
mov
hlt
xor
and
mov
adc
sub
adc
testl
addl
add
push
mov
pop
mov
pop
in
fisttpl
ds
inc
rorb
jg
push
shr
dec
repz
pop
mov
jp
cmc
cmp
rclb
dec
test
mull
adc
jae
sub
dec
adc
jp
aaa
xor
psraw
inc
lret
lods
mov
rcr
stos
inc
or
push
ret
into
mov
cld
outsl
mov
push
popf
filds
and
and
sub
cwtl
movsb
jb
ds
and
je
xchg
add
pushf
cltd
push
mov
add
aam
inc
pushf
inc
mov
aas
mov
or
and
or
push
sbb
dec
loope
cmp
test
aam
in
stc
xchg
mov
subl
sub
rolb
imull
lea
sbb
push
mov
lcall
int
clc
imul
cwtl
push
call
loope
loope
adc
jb
dec
jecxz
scas
push
outsl
sub
adc
fwait
les
movb
movsb
pop
fdivr
dec
cmpl
pusha
mov
xor
dec
cmp
fidivrl
mov
adc
sub
mov
xor
mov
jbe
in
mov
mov
mov
out
sti
mov
cmpsb
push
leave
adc
je
ja
stos
xchg
xchg
ds
movsl
repnz
push
or
inc
sub
xchg
rcll
jmp
xor
pop
jmp
into
xchg
repz
push
sub
movsl
cmp
test
sarb
jne
scas
das
loop
loop
push
into
mov
je
imul
sub
daa
inc
enter
cmc
lretw
lret
lds
inc
insl
mov
rclb
xor
push
out
aas
daa
lea
jmp
sbb
shrb
popa
or
cmp
jmp
lea
sbb
inc
sub
push
pop
test
mov
popa
addr16
xchg
aaa
mov
out
mov
pop
pop
pop
adc
imulb
add
xchg
hlt
mov
sbb
adc
test
roll
in
sub
mov
and
and
repnz
bound
mov
or
test
aas
push
cmpsb
xchg
mov
test
cmpsl
push
xchg
pop
test
adcb
inc
xchg
mov
push
adc
cmp
add
pop
sahf
push
std
iret
jnp
arpl
mov
shlb
shll
lret
sbb
xor
insb
rorl
test
cmp
push
or
sbb
mov
fidivrl
mov
bound
mov
ss
fstpt
pop
addr16
je
iret
ret
hlt
lock
dec
inc
lea
mov
ja
daa
cs
sub
push
repnz
cmp
mov
sti
push
cmp
test
test
cmp
loopne
jns
or
hlt
sbbb
mov
dec
push
lock
addr16
jecxz
jne
outsb
shlb
pop
loope
push
mov
call
sbb
mov
cmp
inc
movsl
jge
mov
pop
cmp
leave
hlt
mul
add
adc
inc
and
es
fnstcw
xor
jle
loope
jecxz
xchg
sbb
ds
jl
and
cmp
dec
pop
insl
jno
lods
sbb
das
mov
xor
lods
xor
sbb
xchg
fxtract
dec
lcall
cmp
in
jl
jg
dec
sbb
scas
mov
push
test
sbb
jg
cmp
outsb
roll
insb
push
pop
xor
xchg
jle
pop
daa
test
fmul
pop
add
arpl
movsl
push
rcrl
jns
jmp
rcrb
fldcw
sti
jo
push
xchg
add
out
pop
xchg
pop
push
sbb
and
dec
add
jge
stos
in
aaa
mov
call
sbb
addb
cmp
mov
and
mov
or
rorl
in
push
outsb
loope
lods
scas
mov
pop
les
xor
xor
mov
add
push
jbe
lcall
popa
call
pushf
cmp
dec
dec
pop
xor
stos
sub
pop
mov
ret
add
sub
arpl
cld
pop
mov
push
adc
arpl
mov
cmp
xor
js
push
imul
sbb
fmuls
out
jnp
scas
mov
lahf
mov
daa
imul
mov
mov
adc
inc
pop
push
cmp
pop
sub
mov
adc
mov
mov
lods
mov
add
jl
jmp
sbb
or
jge
pop
sub
add
testb
test
das
and
inc
xor
dec
jecxz
jl
jbe
sbb
jle
fiadds
mov
mov
mov
push
inc
push
push
pop
dec
outsl
lods
loop
ljmp
stos
fcmove
shll
into
cmpsb
fsubrs
inc
sub
mov
into
cmp
iret
push
adc
dec
icebp
push
jmp
push
push
fucomp
adc
cld
sbb
adc
fwait
xchg
push
and
inc
ficoml
xor
mov
mov
ret
cld
push
lods
dec
mov
push
pusha
idivl
cli
cltd
pop
cltd
mov
test
arpl
push
pop
out
into
std
or
jno
fcoml
data16
das
cmp
and
xchg
insl
fiaddl
mov
psadbw
dec
cs
stos
push
out
out
leave
mov
mov
in
in
or
rolb
cmp
xchg
sub
dec
dec
mov
mov
mov
cmp
dec
fisttps
cmpb
and
mov
pop
push
divb
jo
int
iret
jl
mov
ja
lods
call
add
pop
ds
pop
jge
out
sbb
add
inc
sbb
dec
out
sub
dec
push
xchg
into
cmp
fldenv
ss
dec
nop
dec
cmp
lods
out
icebp
mov
dec
lahf
cs
enter
loope
sub
dec
fwait
sti
loop
lahf
outsl
xlat
idivl
dec
xor
in
outsb
mov
aaa
sbb
ds
bound
lret
in
xchg
jmp
stc
mov
jle
sahf
fwait
sub
push
test
leave
icebp
cld
push
or
popf
pop
movsl
jb
dec
push
pop
jl
xchg
push
aad
sub
cmp
fdivrs
roll
or
cmc
mov
cli
ds
inc
sbb
mov
in
lock
mov
sbb
cmp
sbb
or
or
lret
jle
int
push
inc
mov
xchg
pop
and
inc
push
cld
cmpl
mov
int
mov
lods
mov
aaa
dec
push
pop
out
sub
mov
lldt
or
je
fldenv
add
jnp
inc
call
inc
jge
aad
cmp
jbe
aas
das
pop
jmp
push
add
sbb
icebp
adc
add
inc
rcr
jo
xchg
int
stos
push
call
mov
xor
mov
mov
inc
pop
ljmp
out
fadd
xor
mov
xchg
mov
jbe
shrl
xchg
jae
dec
xchg
push
mov
dec
sti
push
stc
inc
sub
or
xchg
xchg
sbb
push
inc
fwait
xchg
pushf
pop
dec
dec
cmp
adc
les
xor
rorb
into
les
cs
mov
cwtl
pusha
inc
cwtl
std
ljmp
inc
movsl
out
pop
lahf
xlat
jb
xor
movsl
jno
adc
fwait
push
aaa
sti
sarl
mov
in
jge
xlat
push
imul
jne
xchg
mov
loope
pop
adc
jl
mov
pop
lods
jmp
int
pop
cwtl
push
leave
in
cmp
mov
mov
rol
out
cmc
push
or
jns
out
adc
or
out
dec
movsl
xchg
das
push
call
test
inc
fidivrs
jns
jno
aad
xor
cmp
fcmovb
or
xchg
sub
imul
add
mov
lret
cmpsb
les
bound
mov
ja
inc
or
out
insl
hlt
mov
stos
mov
sahf
cmp
and
sbb
or
sub
mov
inc
pop
aad
xchg
sub
adc
jmp
lea
lods
subb
cwtl
mov
mov
cltd
fidivrl
push
push
sub
and
sbb
sbb
push
jns
dec
cmp
call
inc
hlt
fwait
outsl
daa
adc
js
and
adc
lods
sbb
jmp
movsb
add
outsl
dec
mov
mov
mov
mov
shr
shl
mov
xchg
jns
adc
or
ja
fcoms
mov
aaa
pusha
imull
sub
lea
scas
or
sub
int
mov
push
push
inc
pop
push
mov
push
flds
or
sbb
fs
fwait
xor
mov
and
rolb
push
es
mov
mov
jne
clc
mov
pop
imul
adc
mov
cmp
xchg
xor
clc
pop
test
lret
push
mov
cmpl
cmc
cmc
jnp
sti
shll
mov
push
dec
pop
and
mov
and
and
mov
ret
add
subl
or
cmp
loop
jns
cmc
clc
push
cmpsl
sahf
mov
jno
mov
fmuls
or
notb
rorl
rcrl
pop
adc
testb
xchg
into
ja
mov
cmp
adc
mov
in
add
mov
loope
push
out
xchg
or
aas
outsb
mov
mov
fistps
jmp
jle
or
push
sub
push
add
jge
out
nop
lcall
fimull
adc
mov
pop
dec
iret
fstpt
adc
je
xchg
out
xchg
scas
mov
dec
stos
xchg
jp
int3
add
mov
xor
mov
test
mov
sbb
dec
sbb
hlt
fstps
add
sbb
or
rcll
sub
mov
fstpl
cmp
push
push
movmskps
out
in
sahf
push
in
pop
cmp
sub
dec
mov
cmp
lods
and
xor
cmp
adc
xor
xchg
and
jg
das
imul
sbb
nop
push
or
push
push
inc
fwait
cmp
leave
mov
xor
xchg
xchg
fcmovbe
rcrb
js
add
and
out
subb
jl
or
add
and
hlt
jecxz
cmp
xchg
fsubl
sti
out
popf
scas
in
mov
jg
sbb
inc
imul
jne
push
dec
repnz
and
enter
rorl
cltd
cwtl
lock
leave
add
aas
cwtl
jg
inc
hlt
mov
out
dec
sbb
pop
jp
pop
cmp
push
xor
mul
mov
push
lret
stc
cmp
mov
ret
sbb
sub
arpl
xchg
dec
push
call
and
jno
sub
adc
cmp
inc
jecxz
lahf
or
cltd
rcll
sub
or
sub
mov
sbb
arpl
xchg
aad
mov
scas
or
and
mov
sbb
pop
adc
and
adc
lock
and
insl
sub
cmp
add
clc
je
and
fdivs
shlb
leave
in
subl
mov
repz
outsb
or
movsl
sbb
lret
jle
sub
push
adc
adc
inc
dec
pop
inc
faddl
sti
mov
test
popa
cmp
lahf
aas
add
pop
and
movsb
mov
jge
insl
cmp
jg
dec
sbb
cs
cmp
jl
sbb
push
dec
push
or
sub
push
repnz
add
lock
shr
shr
inc
dec
movsb
cmp
mov
fwait
push
or
lcall
lock
inc
xchg
xor
neg
xchg
int
add
cltd
push
test
xor
jns
jmp
or
xor
or
add
push
dec
mov
adc
nop
sub
fsub
scas
out
or
cli
cmpb
test
inc
sub
jg
ds
notb
mov
jo
testl
jp
lods
xchg
mov
lret
sbb
mov
push
cmp
inc
lods
outsb
push
scas
lods
shr
addb
fs
mov
cmp
ja
adc
xchg
scas
mov
adc
push
inc
mov
add
out
or
push
jae
cmp
ret
scas
xchg
or
push
outsb
outsl
jnp
test
xorb
ja
cwtl
stos
lret
pop
mov
cmp
insb
jbe
sbb
xchg
mov
pushf
jecxz
fiaddl
notb
pop
movsl
sbb
ret
iret
xor
jae
or
stos
jle
aaa
xchg
or
adc
xor
cmc
orb
shrl
cmovl
out
lods
push
imul
lret
xor
jae
adc
sub
lods
inc
adc
add
cmpsl
test
push
stos
add
ss
lea
xchg
mov
gs
lret
and
int
outsl
xchg
outsb
std
jb
out
pop
mov
roll
xchg
cwtl
rcrb
rol
xor
push
and
jo
sub
cmp
mov
dec
sub
xchg
pop
cmc
xor
shll
fdivrs
add
lds
push
icebp
cwtl
jp
mov
pop
clc
pop
dec
hlt
cmp
icebp
adc
dec
dec
push
scas
pusha
fdivl
jp
stos
mov
sbb
xchg
into
xor
dec
push
cmp
stc
ljmp
push
shrb
daa
cli
aam
mov
loop
pop
mov
add
jne
cwtl
sub
push
mov
outsb
or
adc
or
mov
andl
add
sbb
pop
aas
ss
add
es
sbb
add
test
cld
xlat
movsb
lahf
ss
test
popa
movsl
jl
nop
jmp
mov
sbb
or
test
loope
sub
mov
xorl
add
cmpb
xchg
pop
ljmp
cmc
cmp
jmp
pop
pop
stos
mov
fmull
aad
pop
bound
je
insb
or
pushf
xor
cld
xchg
add
xlat
inc
fiadds
mov
loop
sub
jbe
aam
cmp
test
stc
scas
inc
sub
cmp
int
bound
pop
xor
daa
add
push
ss
adcb
nop
daa
xor
push
outsb
xor
mulb
jge
mov
push
mov
mov
adc
test
dec
add
jg
lahf
repnz
xor
cmp
insb
cmp
aad
sbb
int
test
jno
mov
mov
inc
sbb
xor
mov
xchg
xchg
in
mov
pop
ret
int3
in
arpl
aad
gs
clc
and
push
rclb
mov
push
out
popa
xor
inc
push
jge
push
test
push
rorl
mov
mov
xchg
mov
pop
ljmp
call
ljmp
inc
sbb
daa
sahf
jp
inc
pop
cmp
or
popf
mov
add
mov
inc
and
sbb
gs
stos
insb
data16
sbb
jmp
gs
jle
pop
lods
mov
fidivrl
push
fcmovne
jbe
lds
dec
mov
aam
pop
repz
dec
stos
jmp
inc
mov
gs
js
mov
rcrb
inc
shl
repnz
and
subb
push
fdivp
xchg
lods
ss
ret
pop
push
out
adc
out
pop
and
subb
pop
cmp
ds
jno
xor
cmp
xlat
and
scas
and
int
push
jb
rolb
ja
jg
popf
cwtl
mov
inc
cmpsb
insl
adc
dec
rol
dec
adc
inc
add
pop
pminub
stos
push
xchg
pushf
push
mov
pop
and
call
push
jb
fwait
fwait
inc
lods
sub
add
and
dec
negb
in
outsb
jno
mov
cmp
sub
call
cmp
das
push
insl
aam
outsl
repnz
sbb
pop
sahf
pop
mov
out
mov
or
jae
xor
adc
jg
fs
inc
mov
cmp
subl
nop
mov
mov
and
mov
ficompl
cmp
popa
pop
xlat
or
xor
in
pop
cmp
push
jne
mov
repz
inc
popf
add
and
scas
cmp
or
xchg
arpl
bound
out
push
nop
test
add
add
lcall
push
jno
or
mov
pop
mov
test
leave
pop
loope
inc
arpl
dec
sbb
lock
adc
xor
sti
mov
dec
lods
pop
mov
imul
and
dec
das
add
xchg
stc
cwtl
pop
mov
pushf
jne
push
std
inc
test
out
sub
or
dec
push
sub
sub
cmp
jb
push
test
sbb
call
testb
negb
adc
scas
imul
cmp
dec
call
fs
shrb
push
xor
fs
scas
in
mov
in
sbbb
js
daa
inc
adc
dec
test
push
fsub
jne
mov
test
mov
inc
loope
or
mov
mov
or
sarb
test
jne
push
sub
sbb
repz
sub
xor
loop
xor
aaa
ret
jle
arpl
xor
test
xor
sbb
das
mov
shrb
nop
adc
and
sbb
mov
jecxz
adc
dec
orb
iret
pop
in
mov
xchg
dec
in
mov
push
mov
sbb
in
out
stos
xor
fistl
push
dec
ja
and
jecxz
mov
xor
out
cld
lds
loope
bnd
into
hlt
mov
in
in
push
pop
cmp
ss
mov
sbbb
movsl
xor
loop
bound
daa
out
or
add
iret
push
mov
test
leave
pop
je
dec
popa
jb
fwait
sub
fwait
jo
jne
mov
adc
sbb
xchg
or
xor
sub
ljmp
and
mov
xor
rcrl
xchg
pop
cmp
push
decl
sbb
lods
lds
jge
dec
sub
mov
loope
xchg
leave
hlt
mov
stos
inc
sub
subb
dec
jne
mov
cli
in
adc
cmp
adc
xchg
pminub
inc
or
pop
addl
leave
les
cmp
push
out
jae
jne
es
das
or
mov
jnp
in
cmc
pop
mov
dec
addr16
cmp
xlat
pop
dec
lahf
add
ss
icebp
inc
add
movaps
pushf
frstor
add
adc
add
push
daa
icebp
ret
mov
inc
adc
vpackssdw
int3
mov
jp
push
cs
fwait
popa
push
aas
arpl
unpcklps
js
mov
xlat
ret
fsubrs
jmp
dec
pop
mov
jecxz
or
loop
jne
add
cmp
jb
std
inc
mov
addr16
xchg
jecxz
mov
cmp
sbb
sub
jmp
aaa
test
mov
jecxz
xchg
xor
jae
lods
mov
xchg
xor
inc
xchg
mov
outsl
xorb
fs
loop
sarl
shrb
xchg
outsb
mov
mov
loope
imul
pop
mov
ss
cmp
hlt
out
enter
adc
ficompl
notb
es
inc
sbb
dec
mov
jge
loop
shlb
mov
rcr
add
push
push
mov
ljmp
scas
or
add
sbb
mov
popf
pop
imul
pushf
xor
xchg
cli
lahf
cli
call
aaa
orb
pop
push
xchg
sbb
pop
sub
or
xchg
xchg
cs
hlt
sbb
imul
push
jnp
shrb
imul
push
mov
lret
inc
jmp
loop
inc
aas
add
cmpsb
ss
dec
flds
jb
pop
mov
icebp
push
sub
xchg
inc
in
inc
add
xchg
sub
inc
pusha
mov
addr16
xchg
xchg
sub
rorb
inc
push
sub
add
scas
mov
loopne
jnp
in
jg
movsl
imul
jge
pop
xor
data16
sub
cmp
push
push
roll
pop
cmp
pop
sub
jno
icebp
mov
jns
mov
inc
xchg
test
lret
sub
mov
das
rolb
ret
rol
in
pop
aas
iret
push
jno
and
pop
mov
dec
addr16
push
cmp
jl
mov
lea
scas
or
cwtl
mov
inc
jae
ljmp
cmp
jae
sbb
mov
nop
lea
cwtl
sub
push
push
out
ds
lock
scas
mov
add
cmp
mov
nop
jmp
cmpsb
add
xor
jb
ret
dec
fadds
or
dec
dec
mov
push
cmp
or
leave
ficoml
mov
adc
fildl
cmp
lods
lret
popf
jo
je
das
and
cmpsl
adc
lcall
jns
outsb
vmaxsd
ljmp
xchg
neg
test
xchg
dec
pop
jg
hlt
mov
xchg
xchg
jne
call
fiaddl
mov
xorb
cli
or
dec
outsb
aam
add
xchg
xor
sub
mov
loop
std
sarb
pop
mov
shll
pushf
enter
and
sahf
sahf
xor
jbe
and
add
aaa
hlt
pop
inc
mov
adc
mov
and
insl
ja
inc
cmpsl
jmp
insb
xchg
xor
push
enter
or
jo,pn
into
or
into
xchg
das
ljmp
push
gs
jb
in
xchg
pop
sti
jbe
inc
mov
fisttpl
xor
sub
arpl
xor
jbe
sub
cmpl
push
sbbb
loop
lock
cli
insl
mov
push
xchg
push
dec
xchg
cmp
mov
leave
sub
aam
adc
les
adc
mov
xor
adc
add
subb
loope
cs
push
out
int
imull
cli
push
xchg
add
pop
sbb
insl
sub
in
dec
xchg
add
sub
out
addr16
rolb
pop
lahf
push
add
jns
pop
test
imul
cmp
inc
add
mov
in
sub
out
cltd
dec
mov
loopne
dec
dec
push
push
hlt
xor
shll
out
imul
ss
mov
mov
std
shlb
and
xor
cmpsl
or
mov
jp
aas
xchg
js
jg
mov
add
pop
xchg
mov
in
nop
shlb
aad
xchg
mov
fimuls
subb
fsubs
adc
mov
mov
nop
push
test
jno
xchg
push
xchg
repnz
cmpsb
mov
mov
mov
push
stos
push
fildl
sbb
lods
push
pop
outsl
lret
cmpsl
dec
cli
pop
and
nop
adc
add
mov
das
mov
push
dec
sbb
repz
aas
adc
jp
popa
mov
arpl
or
decb
pusha
pop
sub
loopne
test
lock
cli
mov
xlat
insb
sbb
sbb
sahf
inc
dec
test
pop
enter
mov
or
pop
sbbl
and
dec
sub
mov
lods
push
cltd
aam
jbe
xchg
dec
sub
mov
es
outsb
pop
decb
mov
mov
mov
cmp
cmpsl
stos
inc
sbb
pushf
sbb
jle
add
or
les
xchg
mov
leave
pusha
fisttpll
jo
ja
pop
cmpsl
fistl
push
mov
sbb
and
out
pop
mov
test
ljmp
imul
fiadds
loopne
das
jle
cmp
pushf
cmpsl
ds
sbb
xor
jmp
cmp
push
cmp
xor
int
ret
mov
pop
shl
dec
fiaddl
cmp
das
popa
call
sahf
sub
out
inc
jge
mov
dec
pusha
orb
popf
jmp
mov
lods
xorl
xorl
mov
repz
gs
cmpsl
inc
js
jbe
xor
loopne
repnz
sub
repnz
imul
adc
adc
mov
inc
hlt
add
mov
pextrw
pop
fidivs
loopne
cmpsb
lcall
mov
enter
jns
mov
jbe
jle
mull
inc
loope
clc
pop
jns
lea
lcall
xor
xchg
dec
out
pop
cmpsb
adc
lret
mov
icebp
add
arpl
in
mov
cmp
testb
cmp
push
inc
lret
sbb
shrb
and
test
push
inc
dec
and
jecxz
outsb
or
mov
pop
lods
or
lods
addb
sub
jg
aam
or
inc
or
sub
in
daa
bound
adc
les
jmp
ficoml
jp
inc
cmp
test
xchg
shll
stos
jnp
mov
clc
pop
scas
call
mov
sahf
imul
stos
jno
je
cmp
stos
cs
outsb
lods
adc
push
int3
jae
or
popa
and
lret
icebp
icebp
jmp
enter
mov
cmp
cmpsb
cmpsl
push
dec
adc
add
or
mov
jmp
int3
adcb
cs
fdivrs
fs
testb
ss
mov
cmp
push
lods
js
sahf
mov
aaa
into
addr16
adc
gs
mov
mov
and
in
lret
loopne
xchg
imul
pop
ja
mov
outsl
mov
pop
les
andl
arpl
xor
nop
push
cmpsb
jmp
test
out
cmp
adc
shlb
pop
loope
int
push
js
jo
sbb
mov
mov
ljmp
adc
dec
scas
inc
sbb
ffree
arpl
cmp
push
cwtl
jbe
dec
mov
outsl
imul
or
in
std
jbe
push
xchg
dec
xchg
outsb
jmp
movsl
push
sti
mov
mov
push
test
add
jne
imul
insb
jle
pop
ficoml
xor
clc
into
test
adc
xor
incl
rclb
inc
cld
push
inc
and
add
imul
cmp
jg
popf
mov
stc
pushf
fisubs
dec
daa
sub
cs
mov
pop
out
jp
in
sbb
fdivrs
and
mov
cmp
push
ljmp
insl
ja
test
and
sub
xchg
lods
leave
cmp
push
int
jmp
jnp
mov
dec
cwtl
std
inc
inc
movsb
inc
stos
out
rcl
adc
push
inc
sbb
xchg
mov
push
inc
iret
sub
jmp
push
jle
mov
test
addl
jnp
hlt
dec
nop
fadds
je
imul
inc
lock
pop
ret
xchg
test
data16
xor
inc
out
mov
cmp
push
mov
adc
ds
push
pop
negb
nop
lret
int3
sub
cmp
adc
test
xchg
mov
in
lods
cmp
xchg
pop
sub
pop
sub
test
cmpsl
jle
repz
adc
lret
lret
repz
test
sub
sbb
loop
test
lock
jbe
inc
sahf
cltd
cmp
mov
aam
push
mov
imul
xor
in
arpl
xor
xor
ret
push
or
jmp
subl
or
and
test
dec
or
jbe
je
adc
xchg
dec
sub
leave
in
cmp
add
rcrl
xchg
push
or
sbb
sbb
shrl
into
push
push
add
js
push
and
mov
push
push
adc
out
addl
rcrl
add
cmp
sbb
aad
jne
jl
cmc
pop
xchg
lahf
cld
pop
dec
adc
shrl
aad
inc
flds
push
or
lahf
dec
push
arpl
stos
aas
decb
fldl
iret
adc
push
mov
sti
push
and
int
jl
and
jg
fstl
xlat
popf
rcrb
jne
mov
in
std
bswap
movq
inc
in
cmp
fidivs
mov
negb
mov
mov
inc
scas
inc
in
sub
test
iret
mov
cmp
imul
dec
into
outsl
scas
push
insb
das
into
jns
mov
test
leave
pop
ret
call
daa
add
adc
cmp
jle
int3
mov
aas
push
fbstp
test
rcll
repnz
xor
aaa
test
mov
dec
mov
ja
call
inc
mov
jo
mov
ret
es
scas
stc
push
enter
int
testl
push
ficompl
xor
or
or
jne
push
daa
mov
pushf
xchg
mov
add
xchg
test
push
test
aam
or
pop
sub
push
pop
xor
lret
xlat
xor
or
and
xchg
sbb
outsl
lea
sbb
in
pop
push
mov
dec
scas
mov
or
nop
mov
mov
inc
jmp
out
mov
repz
pushf
scas
xchg
fwait
ja
loopne
jno
leave
mov
popf
out
sbb
es
jbe
or
jge
mov
frstor
jp
andl
mov
testl
mulb
inc
scas
movsb
out
pop
addl
cmp
add
js
es
mov
ds
cli
sbb
ret
push
sbb
imul
push
ds
hlt
imul
mov
mov
xchg
push
scas
pop
mov
lcall
dec
xor
jmp
aam
or
mov
je
mov
adc
aam
out
ss
ret
fistpll
mov
mov
mov
mov
movsl
subb
loope
in
orb
dec
out
ds
pop
jmp
pop
jmp
pusha
decb
mov
pop
out
clc
xchg
sub
scas
ror
pop
insb
jae
jns
out
mov
sbb
jmp
je
lods
fsubrl
aam
pop
stos
jg
addb
in
xchg
pop
xchg
adc
jge
push
adc
push
and
movsl
and
fisubs
dec
sti
xchg
cmp
hlt
push
xchg
sbb
hlt
lcall
or
outsl
add
daa
outsl
mov
fdivrl
and
es
xor
in
mov
aam
cmp
cltd
repz
sub
xchg
fstps
push
fwait
int
int
test
jb
lea
mov
dec
cmp
insl
jae
mov
jb
pop
in
iret
into
popa
nop
mov
jbe
out
push
sbb
loop
or
sbb
pop
mov
iret
sub
sbb
in
js
pop
jecxz
inc
lret
xchg
jne
and
adc
xorb
mulb
and
out
adc
xor
push
xchg
mov
jmp
push
sub
mov
fildll
lock
mov
dec
jmp
or
fidivl
push
shll
inc
sbb
inc
pusha
ss
shl
adc
test
xchg
add
pop
outsb
push
enter
bnd
jecxz
mov
lock
aad
aad
mov
push
rep
imul
movsl
rorb
stos
sbb
test
fnstenv
pop
or
cmp
push
iret
popf
call
das
cmp
repz
lahf
dec
movsb
jnp
aam
stc
call
in
inc
fists
cmp
mov
movb
cmc
pop
jecxz
mov
xchg
imul
and
scas
mov
xchg
jecxz
shrl
dec
ljmp
ss
mov
cmc
push
in
add
aad
mov
subb
and
iret
cli
ret
push
test
arpl
adc
fdivl
push
test
cmp
inc
popf
push
adc
js
lcall
mov
sub
lret
mov
sahf
xlat
mov
movsb
cmp
leave
fld
xor
in
lcall
cmp
lods
sub
sbb
ficoms
fstl
popf
cmp
inc
test
mov
leave
int
inc
ja
je
push
xor
or
into
jl
cmp
popf
jns
mov
int
push
call
or
xchg
or
sub
out
inc
mulb
inc
sub
jno
or
inc
mov
popa
sbbl
je
cmp
mov
fiaddl
mov
divb
les
or
fidivs
push
in
fildll
adc
mov
mov
xchg
iret
cmpsb
fcomps
call
sbb
fstl
push
push
mov
sbb
push
cs
fsubrs
sahf
lods
frstor
leave
sub
jmp
adc
fildll
dec
push
add
loop
cmp
insl
pop
jl
lret
lds
mov
in
lds
aas
push
ljmp
and
lea
dec
in
mov
adc
pop
sbb
push
pop
jecxz
mov
stos
xor
out
test
nop
leave
mov
pop
and
mov
cmp
rorw
mov
shrb
jg
or
fneni(8087
xor
lcall
pop
pop
ret
jae
jnp
push
or
test
gs
jge
mov
iret
fsubs
xor
cmp
mov
dec
cmp
out
out
and
scas
inc
sbb
js
ror
jl
lock
dec
clc
and
jno
in
stos
test
lret
sub
mov
bound
mov
leave
inc
mov
sbb
out
notl
testb
ds
lods
cmp
and
es
cmp
notb
sbb
popf
or
add
xchg
mov
xchg
daa
inc
fcmovbe
add
jmp
loope
push
dec
cmp
mov
test
int3
popa
add
in
mov
jl
xorl
lret
xor
dec
aam
in
and
adcl
jl
push
and
subb
nop
mov
mov
pop
js
leave
mov
sbb
scas
mov
push
adc
mov
inc
cmpsl
jmp
dec
jne
or
xchg
mov
test
dec
or
out
sti
out
js
fisubrl
sbb
enter
inc
pop
add
jno
int3
fisubrs
dec
pop
icebp
inc
cmp
pusha
xchg
push
cmp
pushf
sbbb
push
mov
outsl
mov
lcall
push
out
cltd
add
add
and
loop
outsb
mov
scas
stos
xchg
mov
fwait
sbb
jl
test
fcomi
pop
lcall
cmp
iret
cmp
cwtl
pop
and
xor
pop
hlt
aas
movsb
lock
sub
or
add
int
repz
fdiv
fnstcw
add
mov
test
cmp
loope
xor
pusha
or
jg
sahf
xor
jle
xchg
xlat
xchg
and
scas
out
out
mov
mov
js
lea
daa
jno
inc
in
popf
adc
sub
sbb
xchg
ret
jecxz
and
pop
and
xor
pop
bound
cwtl
pop
cmp
scas
cmp
inc
xor
inc
cmp
outsl
aaa
lcall
xchg
xor
gs
rcl
mov
mov
in
mov
cli
cmp
cmp
sub
cmp
push
pop
outsb
cltd
in
dec
movsb
repnz
pushf
dec
pop
mov
add
add
daa
divb
aad
rclb
lods
ret
pop
push
sbb
pop
bound
es
loopne
and
xchg
push
xor
cmp
adc
and
fwait
jo
inc
arpl
push
xchg
inc
sarb
mov
filds
adc
cld
and
cmp
loopne
aas
adc
lahf
sbb
arpl
inc
pop
and
ja
movsb
mov
add
mov
pop
jmp
in
push
test
in
jl
stos
dec
enter
jmp
xor
leave
mov
xchg
mov
push
scas
jb
and
xor
pop
add
add
push
xor
jne
ss
pusha
push
push
rcrb
aaa
lret
add
fnstenv
or
adc
sub
test
inc
and
xlat
sub
xchg
popf
push
mov
mov
test
int
fsubrs
ret
xchg
jge
mov
cmp
les
adc
cmp
arpl
jbe
movlps
mov
push
cmp
xchg
sbb
sbb
imul
push
addl
sbb
cmc
cmp
jecxz
sarl
jmp
movsl
pusha
adcl
mov
push
and
sti
jbe
mov
int
and
sub
xchg
sub
movsb
sub
cmpsb
popa
xor
xor
imul
into
jbe
inc
test
scas
mov
jns
fwait
pop
inc
cmpsl
outsb
test
cmp
pop
xor
jecxz
xchg
insb
adc
out
push
and
push
inc
cmp
std
lret
daa
imul
ret
flds
cld
lock
or
cmp
sub
add
js
imul
dec
mov
mov
fwait
ret
jp
jnp
int
int3
mov
scas
cs
ljmp
or
mov
sti
jl
mov
xor
adc
jg
jg
xor
imul
mov
pop
cmp
lods
cmc
xor
stc
mov
inc
jne
add
or
mov
repnz
repz
aad
addb
movsb
or
mov
ss
xchg
add
test
ret
sub
bound
dec
cmp
inc
ds
inc
pop
adc
inc
sbb
es
test
and
cs
push
or
mov
data16
lea
cmpl
shrl
mov
pop
and
ss
pop
xor
enter
dec
fstpt
cld
pop
fsubrs
cmp
mov
jg
lods
lret
jns
jb
jnp
pusha
mov
repnz
dec
pop
jle
sub
les
xchg
xchg
fldenv
test
bound
test
mov
jge
or
les
inc
mov
test
pop
mov
mov
sbb
push
lds
jg
add
mov
loopne
jno
into
mov
out
loop
repz
inc
gs
xor
sub
nop
dec
jmp
sbb
lods
lds
mov
iret
mov
test
pop
rcrl
mov
inc
add
dec
scas
dec
jnp
idivl
or
addr16
imul
or
dec
mov
xchg
stc
lret
jne
rorw
clc
jae
insb
rcll
sbb
leave
lods
cld
addr16
lret
dec
leave
mov
out
arpl
and
xchg
dec
cmc
or
mov
mov
mov
stos
negl
icebp
pop
xchg
call
shll
popf
andb
test
cmc
lds
insb
aaa
xor
stos
jbe
shll
sbb
jle
adc
dec
and
xchg
popf
inc
dec
pop
in
pusha
mov
data16
pop
or
mov
bound
sahf
and
sbb
jae
test
int3
xor
repnz
dec
arpl
mov
pop
outsb
xor
push
cld
stos
popa
clc
ficompl
jg
pusha
icebp
mov
aas
cltd
push
fwait
or
pop
in
push
push
mov
jns
lea
cmp
inc
cmp
jle
dec
sbb
push
fsub
inc
inc
push
cmp
mov
mov
ljmp
jmp
mov
push
mov
inc
test
sbb
aad
sub
dec
add
out
jmp
push
mov
pop
xchg
push
mov
mov
mov
jbe
jl
mov
orb
xchg
imul
scas
jbe,pn
xchg
push
mov
ljmp
out
adc
pop
lock
and
dec
pusha
testl
sub
lahf
inc
xchg
out
fwait
divl
adc
ja
sub
jmp
adc
fiaddl
or
into
dec
inc
xchg
ret
dec
jo
lods
subb
out
or
leave
and
stos
sbb
es
cmp
mov
cmp
add
loope
les
mov
push
push
fnsave
xchg
rcrl
gs
dec
mov
cmp
stos
cmp
xchg
push
in
mov
adc
lret
stos
mov
scas
push
add
clc
push
push
and
lods
and
or
sbb
call
fstps
enter
dec
lahf
test
mov
repz
xchg
daa
inc
and
xor
cs
shl
outsl
loopne
push
loopne
addr16
je
in
enter
or
xchg
in
jp
mov
fmuls
mov
test
mov
test
andl
xchg
mov
xor
lahf
cmc
sbb
push
stos
out
out
xchg
inc
daa
scas
pop
cwtl
or
pop
pop
mov
push
push
cs
test
lock
pop
sub
int3
or
in
sub
jge
mov
cld
push
ljmp
out
cwtl
outsl
sub
and
add
negb
adc
outsl
imul
mov
adc
adc
sbb
aam
ja
popf
cmpsl
pushf
xchg
cmp
add
inc
cli
sarl
jbe
xchg
push
cmpsb
cmp
mov
cmp
push
fucomp
and
ja
adc
aad
jnp
fsubp
push
mov
jb
jmp
lret
push
dec
push
cld
xorb
mov
dec
push
push
cld
pop
mov
loope
pop
shrl
xor
pop
pop
push
adc
mov
out
inc
jecxz
jmp
adc
dec
pop
jae
cwtl
stos
loope
mov
xor
jl
mov
push
inc
sti
jo
jbe
xchg
sbb
pop
mov
sub
jecxz
xchg
enter
aas
mov
mov
pop
and
adc
popl
mov
fucomp
sub
sub
or
lahf
dec
jecxz
repz
mov
xchg
scas
daa
jae
jp
inc
out
test
in
addb
pop
push
mov
dec
pop
mov
sbb
lret
mov
int
fs
cmp
es
xor
call
pop
sbbb
add
mov
inc
xchg
mov
arpl
or
mov
into
and
stos
mov
mov
aas
outsl
push
popf
push
cwtl
shlb
push
stos
sub
push
cmp
hlt
icebp
stc
fisttps
test
aas
push
xchg
stos
xchg
cmc
push
stos
test
add
subb
mov
adc
fcoms
adc
push
push
loope
mov
push
xor
add
adc
lock
pop
add
cmpsl
mov
dec
dec
jg
mov
sbb
daa
pop
pop
and
rcll
arpl
enter
sub
or
mov
xchg
pop
add
push
clc
or
push
inc
inc
ds
iret
stc
icebp
cmc
jo
pop
sarb
mov
lds
adc
add
sub
stc
test
sub
mov
sub
ds
cld
cmp
or
cvtps2pd
or
dec
ss
push
lds
data16
jo
sub
repz
fcomi
lahf
sub
mov
cmpsl
sub
out
nop
mov
out
cmpsl
adc
cmpsb
les
pop
fistpl
cmp
push
push
call
jbe
inc
rorb
lahf
clc
cmp
scas
mov
or
pop
das
push
sub
test
fstps
jbe
push
fisubrs
push
mov
pop
xchg
push
xchg
scas
out
and
push
sarl
add
test
lret
mov
adc
jae
outsl
out
xchg
xchg
adc
sub
fbstp
sub
jb
jp
pusha
aaa
cli
sarb
mov
jae
mov
inc
ficomps
jne
jae
jge
out
inc
add
aaa
sub
adc
add
mov
rcr
mov
dec
and
aaa
lret
or
lret
mov
jbe
lret
pop
shl
adc
pop
sub
aam
cltd
cmp
in
add
aad
sbbb
push
sarl
shl
mov
test
xchg
hlt
inc
pusha
or
call
repnz
mov
fcoml
addr16
out
mov
xor
or
mov
call
dec
mov
test
shl
sub
or
inc
cs
push
clc
test
xchg
mov
rcrb
sbb
dec
movsl
xor
pop
addl
fs
enter
or
mov
std
cltd
add
scas
in
adc
xor
in
push
jae
jmp
dec
scas
addr16
ja
leave
jecxz
loope
inc
mov
pop
inc
test
pop
inc
cmp
fdivrl
int3
out
jns
loop
jg
shrb
imul
test
sbb
sahf
lret
lret
mov
nop
jle
jo
cmp
in
pop
xor
adc
cmp
pop
mov
add
in
nop
adc
mov
fs
pop
ss
push
xchg
mov
jle
ds
adc
data16
lret
dec
or
stc
sub
push
lock
sbb
mov
jmp
mov
loope
rcr
mov
cmp
push
cmp
inc
pop
lret
push
pop
das
cwtl
aam
rorb
das
dec
dec
ja
cmp
sti
push
dec
movsl
repz
int3
addb
add
sbb
lcall
clc
shll
and
mov
pop
mov
mov
mov
xchg
shlb
or
cmp
inc
leave
shll
add
dec
xchg
lods
cmp
andb
cli
inc
cmp
imul
mov
jnp
stos
jge
dec
lock
mov
jl
out
mov
xchg
outsb
dec
ret
push
hlt
in
cmc
ja
ss
popf
cmpsl
imul
outsl
in
imul
stos
jmp
fmuls
jno
test
popa
movsb
cld
scas
out
dec
adc
out
mov
lods
and
out
push
aas
inc
add
and
cmp
xchg
push
or
push
lcall
inc
inc
cmp
xchg
xchg
pop
cmp
mov
fsubrl
aaa
cli
cli
jne
sti
das
adc
repz
push
mov
lahf
push
sti
lcall
pop
das
dec
cld
cmp
loopne
in
xchg
sbb
inc
ja
filds
sbb
sub
mov
jecxz
inc
add
sti
aaa
in
mov
lcall
and
mov
rorb
fisubl
lret
fwait
int3
mov
cmpl
jecxz
mov
sub
rcrb
mov
xlat
push
mov
inc
stos
adc
xor
fnstenv
mov
clc
hlt
sbb
shlb
or
repnz
xchg
push
outsl
sbb
jnp
mov
push
cmp
push
ds
adc
add
push
dec
int3
mov
rcll
mov
sub
std
repz
adc
fdivs
xor
shlb
mov
popa
xlat
popf
scas
mov
insb
push
test
fdecstp
cltd
and
push
notl
cmp
mulb
add
test
es
inc
in
stos
divb
adcl
sbb
xor
rol
call
and
cmp
dec
data16
hlt
dec
dec
lods
daa
leave
addl
xor
adc
inc
push
xlat
push
fnsave
mov
lea
adc
das
ljmp
push
aaa
adcl
mov
pop
repz
adc
into
gs
add
dec
xor
add
roll
dec
adc
mulb
fistpl
add
movsb
push
cmc
aad
pusha
or
loope
in
xchg
xchg
sarl
fwait
aaa
addr16
xor
xor
aad
addl
sbbb
rcll
aas
or
call
cmpl
jns
pusha
or
mov
lcall
push
sub
hlt
lods
push
mov
fldenv
stc
popa
lods
aaa
nop
adc
les
mov
stos
mov
nop
jecxz
loop
mov
sbb
pop
cli
movsl
dec
and
sub
aas
call
iret
mov
pusha
xchg
fnsave
stc
mov
xchg
or
lret
scas
aad
adc
dec
push
jle
divb
sub
call
lods
mov
in
pop
lods
dec
out
jns
cmp
push
cmp
fcomip
jle
std
scas
inc
out
fs
jnp
lret
push
jbe
mov
test
jge
xchg
cmp
mov
jno
imulb
inc
in
lock
int3
mov
xchg
push
loope
test
adc
pop
ds
cwtl
fdivrl
pushf
push
in
mov
out
xchg
test
outsl
and
push
repnz
push
mov
test
ss
mov
je
jns
xchg
test
pop
jns
sbb
or
cmp
test
rorl
inc
hlt
shld
ljmp
mov
popl
xchg
mov
push
cs
outsl
mov
cmp
push
imul
dec
pop
mov
outsb
mov
in
adc
call
roll
out
push
andb
popf
fdivrl
fildll
lods
aad
test
xchg
int3
adc
cmc
or
clc
sbbl
mov
cmp
test
sti
das
arpl
fwait
and
jmp
out
adc
inc
adc
inc
popa
inc
or
iret
mov
daa
cmp
test
les
and
sahf
or
pop
cmc
push
mov
add
jl
mov
jae
mov
loope
out
nop
fists
mov
test
adc
mov
scas
lock
jl
or
scas
enter
and
clc
inc
dec
lret
inc
pop
push
fisubs
push
ds
pop
mov
push
aas
push
insb
in
inc
add
movsl
xor
aam
adc
push
sarl
aam
or
push
jno
cmp
cli
mov
xchg
fs
add
cs
adc
pop
andl
fldt
xchg
into
int
movsb
aas
mov
cmp
outsb
xor
cmpsl
push
roll
mov
popa
jns
shlb
mov
je
leave
movsl
lahf
adc
sub
jmp
pop
dec
cmc
xlat
mov
loopne
xchg
std
in
mov
movsb
xchg
xchg
and
jno
cmpsb
mov
iret
mov
cmp
jae
fsubrp
mov
cmp
loope
adc
push
js
xchg
sub
in
jno
push
test
xor
lods
xor
inc
push
adc
repnz
lret
imul
adc
incl
lock
movsl
dec
loopne
jb
jae
aam
call
mov
std
inc
mov
adc
xchg
stos
xchg
push
xor
fsubrs
fs
insb
cs
pop
outsb
dec
dec
mov
gs
call
xchg
sahf
xor
popf
sub
push
inc
test
or
push
ret
add
jo
mov
mov
or
and
test
lret
pop
leave
or
push
ljmp
pushl
sub
mov
scas
fnstcw
stos
jmp
or
fwait
xor
int3
or
cs
repnz
out
pusha
push
push
clc
and
movsb
icebp
push
faddl
scas
xchg
and
or
xchg
mov
pop
pop
in
xor
mov
mull
loop
pushf
inc
cmpsb
mov
aaa
mov
sub
insb
pop
inc
sbb
mov
adc
out
bound
loopne
cmpsl
movb
subb
roll
xchg
inc
aaa
nop
push
call
dec
movsb
out
inc
xchg
lahf
xor
in
mov
mov
mov
in
mov
mov
lahf
pop
sbb
repnz
pop
imul
pop
dec
movsl
jp
xor
add
mov
mov
call
mov
adc
lock
cmc
pop
mov
cltd
pop
test
add
imul
pop
addr16
xor
lods
in
hlt
xor
mov
lods
xchg
pop
aam
lods
dec
std
movsl
icebp
fisubrs
fstpt
inc
fistpll
ja
add
xor
push
inc
push
mov
sbb
cmp
or
rorb
cli
pop
lock
test
arpl
push
outsl
sub
mov
movsl
cwtl
mov
pushf
xor
adc
xor
fsubrs
jl,pt
clc
push
imul
pop
xor
sub
dec
out
mov
rol
push
jb
addr16
out
pop
mov
mov
adc
aam
jae
cmp
adc
mov
mov
xor
mov
sahf
sub
int3
mov
jne
push
movsl
xchg
xchg
jp
inc
aas
jl
jo
sahf
icebp
push
mov
push
jl
ja
mov
decb
cmc
jno
aam
leave
test
sti
dec
mov
ror
sbb
leave
push
pop
int3
test
xchg
scas
out
pop
repnz
mov
lds
lock
jp
clc
and
pop
shll
sbb
inc
sarb
fidivrl
orb
divb
mov
xor
popa
clc
cmp
push
pop
sbb
push
mov
stc
mov
cmp
mov
imul
aaa
ret
cmpsb
pop
js
and
rol
jnp
fidivl
pushf
mov
inc
jae
psraw
jnp
sbb
adc
rclb
lahf
scas
jmp
fnsave
cltd
pop
mov
sti
inc
adc
lcall
xor
pop
inc
dec
lock
lods
testl
xor
xchg
ss
lahf
or
lcall
pop
shl
cmpsb
pusha
sub
sbb
cs
sbb
xor
and
adc
jnp
stos
push
or
add
pushf
sub
mov
test
jbe
dec
loopne
inc
gs
shlb
add
std
cmp
cli
pop
sbb
cwtl
test
int3
not
hlt
cmp
add
icebp
inc
xlat
dec
rorl
jne
xlat
pop
push
mov
inc
sub
in
pop
jnp
scas
jecxz
push
sahf
cmp
and
dec
test
mov
nop
imul
addr16
shlb
mov
cmp
fs
sub
dec
repnz
mov
arpl
sub
cmc
cltd
mov
push
mov
jo
add
ret
push
mov
dec
pop
stc
and
int
mov
ja
ljmp
mov
cmp
out
das
adc
dec
xor
push
test
bound
mov
jbe
add
jbe
sbb
int3
addl
stos
cwtl
scas
xchg
inc
iret
jb
and
pop
and
scas
nop
test
das
lcall
dec
lea
dec
push
xchg
icebp
xor
jp
add
rolb
mov
pop
dec
cmp
mov
mov
popfw
ja
lahf
jle
in
out
sbb
fwait
push
aaa
mov
out
loope
cmc
subl
loop
mov
push
lea
jl
jmp
pop
add
mov
pop
cmpsb
int3
pop
pop
inc
loop
jl
mov
jl
arpl
es
dec
or
push
sub
insb
mov
orb
repz
dec
dec
shr
pushf
ret
nop
rep
push
jecxz,pn
add
lods
jge
iret
andb
or
xlat
ja
aam
push
or
mov
pop
mov
fstps
into
cmp
outsb
or
lret
cmp
insl
rcll
inc
xor
cmpsl
cmp
adc
jle
movb
lock
push
outsb
cltd
daa
test
inc
imul
ss
inc
int3
cli
jmp
incb
push
mov
adc
into
cli
ds
sub
jns
mov
cld
scas
icebp
push
test
out
xchg
out
neg
shll
hlt
imull
pushf
xor
sub
fcoml
ret
repz
lcall
xor
js
pop
xor
nop
mov
dec
es
pop
sbb
enter
stc
fldenv
cmp
sbb
cmp
and
xor
sbb
jno
add
sti
jns
push
dec
fadd
jbe
cmpsb
cmpsl
in
cmp
enter
test
mov
mov
lods
ja
mov
fcmovbe
daa
mov
in
cmpsb
inc
clc
add
xor
sbb
test
sub
icebp
xchg
lret
mov
sub
mov
ffreep
xor
data16
mov
shll
hlt
icebp
aas
dec
sub
pop
cmpsl
stos
push
xor
or
test
jle
ret
call
cmp
lea
out
cltd
mov
mov
arpl
inc
leave
adcl
leave
xchg
mov
mov
mov
mov
movsl
and
stos
mov
int
push
cmpb
pushf
pop
fisttps
out
lret
aam
xchg
incl
mov
pop
negb
data16
popa
and
or
sbb
int
pcmpgtb
stos
jmp
sbb
dec
cli
and
rcrb
pop
mov
jle
mov
rorb
sbb
sbb
or
jmp
fnstsw
sub
fadd
in
sbb
mov
fistl
outsb
pop
ljmp
in
aam
test
addb
xchg
pop
jo
mov
adc
flds
pop
jne
push
adc
pushf
hlt
test
and
out
sti
lcall
cmpsb
adc
cld
or
loope
int
out
out
adc
xchg
push
shll
ret
sbbb
fmul
jae
add
jnp
jmp
pop
inc
add
sub
je
cltd
int
xchg
out
mov
and
lods
imul
mov
adc
pop
inc
out
xor
mov
jns
ror
push
clc
jl
push
sub
rcrb
enter
mov
xlat
mov
cltd
aad
jns
add
cmp
or
mov
mov
int
test
cmp
sub
rolb
loope
mov
outsl
ret
shrb
out
fildl
mov
fwait
divb
mov
les
and
clc
add
sub
es
icebp
jp
jecxz
jo
dec
adc
pop
add
scas
nop
add
pop
or
test
enter
or
sub
sub
int
cs
push
movsb
xchg
cmp
sti
pop
lahf
push
fcomi
lds
xchg
pop
popa
aam
movsb
mov
fstl
cmpsb
mov
int3
jg
push
mov
jbe
pop
sub
imul
scas
add
push
sbb
dec
popf
sbbb
mov
in
testl
sub
adc
adc
mul
mov
inc
out
test
js
mov
xlat
mov
pop
sub
xchg
inc
add
ret
outsl
push
outsb
pop
adc
pop
mov
pop
inc
in
in
shrb
out
xor
imul
daa
pop
movsb
subb
mov
data16
mov
cmpsb
xor
imul
fcoms
mov
cmpsb
clc
leave
inc
or
pop
pop
dec
mov
shlb
cmp
movl
dec
loopne
out
pushf
jo
pop
scas
in
xchg
incl
das
push
xchg
lods
and
test
pop
pusha
lret
add
lds
stos
iret
dec
push
in
das
aam
shrl
mulb
into
add
and
dec
xor
ljmp
sahf
mov
or
mov
push
sub
add
call
xor
loope
movsl
mov
adc
pop
jnp
mov
jb
xchg
pop
adc
cmpsb
jmp
rorl
aam
jae
sahf
mov
dec
popf
andb
jbe
incl
sub
sahf
js
rol
dec
out
sbb
mov
out
or
jmp
push
outsl
rol
mov
paddd
pop
sub
xlat
sbb
outsb
imul
aam
into
xchg
mov
mov
add
add
jbe
mov
stos
push
mov
xchg
jno
mov
dec
lret
andb
pusha
inc
cld
cmpsb
adc
or
mov
push
in
inc
pop
dec
test
pusha
bound
lds
outsb
add
fwait
pop
scas
cmp
adc
mov
mov
out
loopne
lret
loop
cmpsb
lock
out
jns
clc
jbe
call
loopne
sbbl
push
lcall
inc
arpl
sbb
or
cmpsb
insl
rolb
loopne
insl
lahf
adc
sbb
and
movsl
iret
add
imul
xor
nop
sub
lds
mov
add
mov
aad
push
stc
cwtl
loopne
fnstcw
mov
dec
movsl
scas
sbb
and
and
push
roll
push
cmp
nop
sub
pop
jmp
cmp
mov
push
pop
jg
call
push
lods
test
fwait
nop
mov
xor
repz
incw
or
xchg
pusha
popf
gs
ret
clc
xchg
jno
adc
inc
rol
jmp
out
mov
mov
shl
cltd
popa
mov
xor
in
cmc
cli
inc
dec
mov
outsl
dec
jmp
sub
cld
outsl
int
dec
cmp
call
push
jb
and
push
jg
fistpl
and
cld
jge
inc
xorb
mov
rcll
cmp
loop
fldcw
mov
push
insl
push
jmp
iret
bound
mov
mov
out
dec
inc
jg
jno
or
mov
cltd
sbb
ret
pop
je
aas
ret
dec
repnz
not
adc
dec
push
mov
js
shrb
sbb
clc
inc
ja
je
sub
jle
in
stc
xchg
shll
scas
stos
cmp
cmp
insb
faddl
or
pop
std
jns
xlat
pop
repz
xchg
sbb
sub
fwait
dec
sbb
jge
jecxz
mov
mov
ficomps
mov
mov
imul
sub
sarb
leave
sahf
jno
clc
cmpl
jns
xchg
or
xor
pop
in
pusha
cmp
mov
enter
and
sbb
push
lock
lds
repz
lret
leave
insb
imul
or
push
jo
imul
repnz
lods
xchg
jns
dec
push
sarl
jecxz
insb
icebp
push
sub
loopne
jge
jle
jmp
mov
xchg
adc
push
fs
xchg
sub
aas
ja
push
xchg
mov
pop
decl
repz
and
cmc
mov
aam
testb
das
add
jge
movsb
push
dec
mov
mov
scas
clc
dec
fstps
pop
leave
je
jl
and
shll
call
les
addr16
add
pop
ds
sahf
jns
mov
sti
std
cltd
fsin
addr16
nop
mov
dec
push
push
sti
or
fsubrl
pop
test
sub
jne
add
sub
icebp
inc
outsl
movsb
dec
roll
add
pop
adc
ss
dec
and
adc
insl
stos
pop
outsb
mov
xchg
rolb
cwtl
dec
sbb
xor
pop
mov
sbb
add
cmp
add
rep
into
push
in
fists
pushl
dec
inc
jmp
subb
int
push
lcall
clc
dec
repz
scas
jno
xchg
pop
lcall
adc
mov
push
fs
lods
push
inc
mov
loope
push
inc
fdivrs
xor
lahf
adc
cmp
rcrb
ds
jns
aam
jl
mov
imul
lds
cwtl
clc
cs
push
pop
inc
pop
or
inc
loopne
out
jl
lret
lret
pop
push
mov
clc
and
xor
mov
sbb
popa
cmp
inc
push
aam
pushf
inc
mov
out
ljmp
mov
imul
stc
sbb
xchg
mov
jmp
nop
push
xor
inc
cmp
inc
leave
outsb
movsl
mov
daa
adc
mov
pop
je
jmp
dec
sbb
nop
sub
repz
rclb
mov
adc
xor
loop
mov
add
cld
lcall
in
dec
pop
inc
pop
divb
jle
sub
push
icebp
adc
scas
inc
aaa
pop
cmp
ss
cs
fdivrs
push
mov
dec
rcl
push
das
jg
pop
pusha
clc
sbb
pop
jae
cmp
test
jo
dec
stos
xchg
sbb
js
test
mov
sar
xchg
outsl
push
popf
jbe
push
repnz
jo
addr16
aam
repz
and
or
mov
and
int3
push
movsl
enter
sbb
rcl
repnz
dec
jb
sbb
pusha
into
inc
mov
fmulp
arpl
rcll
xor
jg
dec
scas
and
inc
fldl
ljmp
idivb
iret
lods
add
rclb
iret
in
xorb
push
mov
mov
push
cwtl
int
sbb
mov
lods
aam
xor
ret
fstl
push
out
jb
subl
mov
imul
push
pop
ret
lock
jp
sbb
ljmp
jg
pop
ds
push
call
or
cmp
sub
mov
jl
in
pushf
jmp
push
push
jg
jmp
rcrl
scas
inc
xchg
sti
arpl
mov
cli
pop
adc
push
mov
aaa
decl
xor
cmpsl
cwtl
mov
repnz
arpl
xchg
xor
pop
and
fs
inc
fisttpll
fs
outsb
fs
sbb
aas
mov
clc
mov
in
shlb
add
call
imul
insl
in
inc
lret
inc
stc
cmc
and
lcall
mov
inc
fstpl
outsb
xchg
xchg
lea
movsl
push
pop
jle
aas
push
jb
jecxz
dec
sahf
pop
sbb
insb
imul
cmpsl
push
inc
aas
mov
cwtl
jo
xchg
add
out
stos
xchg
and
pop
push
test
iret
or
add
xor
popa
std
fisttpll
sahf
inc
sarl
rolb
dec
mov
out
xacquire
loope
out
pop
mov
dec
cmc
pop
jmp
aas
into
gs
cmc
mov
in
xchg
lcall
sar
mov
jecxz
data16
xchg
ret
and
shll
inc
rcrb
lcall
cmpsl
imul
add
fldcw
nop
sub
jmp
fwait
xor
fwait
test
dec
mov
shrl
stc
out
mov
jne
or
mov
je
jecxz
stos
test
adc
ss
fbld
inc
jle
cmpl
stos
in
add
divb
jg
pop
stos
vpsrlq
in
xchg
mov
std
inc
arpl
rcll
daa
lock
dec
mov
xor
adc
scas
pop
sub
scas
jo
or
xlat
mov
push
test
cmc
ss
sub
js
dec
mov
decb
pusha
sbb
cmp
loopne
xchg
mov
rorl
and
rcl
enter
pop
pushf
aad
pop
xor
dec
push
sarb
and
adc
push
sub
cltd
xchg
outsb
aad
ret
addb
mov
mov
dec
pop
dec
fistpl
loopne
mov
or
in
in
mov
pop
pop
ja
daa
pushf
scas
xchg
stc
and
mov
jecxz
xchg
xchg
add
lods
outsl
enter
popf
ret
loopne
lock
pop
push
cmp
lds
push
pop
mov
cmpl
lret
adc
ja
addr16
ljmp
test
pop
popa
test
nop
mov
sbb
lret
push
leave
sub
push
outsb
push
mov
mov
xchg
push
xchg
fadd
nop
xchg
sub
cwtl
mov
inc
enter
stos
adc
test
inc
cmp
idivb
lods
int
cmp
sbb
inc
movl
dec
mov
cwtl
daa
jl
gs
pop
into
add
ss
or
add
sub
hlt
xchg
fs
cmpl
aas
int
scas
push
pop
add
xor
mov
adc
cmp
mov
cmp
enter
cmc
divl
fisubrl
iret
pusha
add
popf
xchg
inc
mov
or
sarl
mov
fsts
sbb
cli
mov
mull
movsb
mov
mov
jns
push
leave
aas
adc
xchg
pop
jb
adc
mov
adc
je
mov
add
and
call
sbb
scas
dec
cwtl
push
fwait
or
bound
enter
cmc
jmp
mov
add
movsb
cld
out
aad
das
cwtl
add
pusha
decl
mov
dec
lea
dec
loope
adc
hlt
add
dec
lea
or
outsl
xchg
mov
fdivrl
daa
lret
adc
add
push
push
push
bndstx
push
sub
inc
jecxz
add
mov
outsl
xor
cld
xchg
mov
insb
enter
rcr
das
sbb
sbb
push
and
or
mov
aas
mov
stos
jo
sahf
and
fs
std
out
mov
add
xor
shrb
cli
inc
xchg
inc
lret
scas
sub
gs
sub
pop
xor
scas
push
inc
cli
xchg
out
cmc
out
adc
mov
sub
mov
std
adc
mov
inc
xlat
outsl
mov
call
aas
shrl
push
shl
scas
inc
inc
out
std
cmp
imul
test
nop
mov
mov
out
push
jecxz
pop
adc
aaa
test
add
inc
mov
test
xchg
out
stos
insl
sub
mov
call
sbb
ljmp
pusha
xor
sbb
jo
ficoms
adc
cmp
cli
jmp
mov
scas
fs
cmp
mov
cmp
jp
jle
mov
push
incl
out
push
mov
dec
shl
je
or
ljmp
pop
rcl
stc
push
sbb
jnp
dec
pop
test
into
mov
popf
outsb
adc
mov
jecxz
cwtl
sub
test
dec
sub
shll
je
scas
cmp
loope
cmp
mov
add
lock
push
fbstp
or
iret
jle
mov
test
jo
pusha
jo
in
cmp
sub
dec
jle
inc
lods
jnp
xor
jbe
cwtl
stos
rcl
or
mov
int
sbb
inc
test
addr16
cmpsl
push
and
shr
add
mov
mov
int
xor
outsb
repnz
clc
in
add
cmp
xchg
movsb
icebp
push
repz
shlb
xlat
leave
jne
mov
movsl
mov
push
orb
dec
mov
test
dec
loopne
fcmove
arpl
pop
in
test
add
mov
dec
inc
scas
mov
leave
stc
sti
es
or
gs
sub
push
insb
and
lods
pop
jo
mov
in
fwait
aam
pop
stos
lret
jbe
push
pusha
jp
gs
mov
mov
adc
xchg
mov
in
rcll
sahf
dec
sbb
mov
test
push
jl
jb
add
pop
mov
cmpsb
xor
cmp
push
jmp
jl
jne
jne
inc
cmp
inc
lods
test
aam
lock
jmp
adc
xchg
xchg
ss
xchg
xor
mov
jg
test
sahf
xor
fs
insl
mov
sub
bound
int
mov
sbb
xor
push
sub
aaa
and
inc
ljmp
dec
mov
lcall
or
fdiv
xlat
leave
xlat
adc
faddl
or
xor
xor
lret
popa
test
push
pop
sbb
inc
into
loope
fsubr
mov
div
adc
int
lahf
ret
ror
flds
test
add
cmp
std
or
into
xor
or
repz
lock
mov
insl
or
ss
and
iret
xor
inc
pop
add
xchg
scas
dec
inc
fidivrl
mulb
out
lds
cmp
adc
push
mov
hlt
and
adc
cmp
shlb
sbb
cmpsl
ds
ljmp
xchg
cmpsb
adc
lods
js
lret
es
add
arpl
in
adc
cmpsl
out
fucomip
out
mov
aaa
fdivs
scas
jbe
movsl
xlat
jge
ret
je
jecxz
fcomps
mov
pop
pop
cmp
femms
shll
push
cmp
pop
hlt
add
dec
cmp
dec
in
mov
mov
mov
ljmp
fwait
xchg
jecxz
orl
push
out
icebp
rcl
repz
inc
scas
jmp
outsb
std
inc
ds
daa
jae
leave
jecxz
push
mov
test
and
out
loope
imul
outsl
aam
dec
lret
jo
aas
mov
in
pushf
mov
dec
adc
pop
loope
fcomps
xor
add
adc
jecxz
xchg
aad
scas
xlat
shll
iret
test
icebp
orb
test
out
outsb
hlt
hlt
imul
repnz
std
sub
xchg
push
and
cmp
sbb
std
aam
fxch
cmp
movsl
add
pop
inc
shlb
lock
shlb
pop
adc
jl
xor
xor
xchg
inc
mov
pop
repz
icebp
xchg
cmp
fwait
std
inc
sbb
mov
sbb
stos
lcall
jne
add
scas
stos
inc
loopne
int3
out
xchg
mov
data16
stc
je
test
xor
cmpsl
adc
daa
stos
inc
pop
push
adc
cmpsb
ds
cmp
icebp
dec
and
enter
addb
pop
mov
ror
fiaddl
cmp
mov
ret
fcoml
incb
inc
out
xchg
movsb
rcrl
loope
fst
mov
fildll
fcomps
pop
pusha
int3
shlb
das
cmp
sbb
mov
movsl
call
or
mov
loopne
dec
and
inc
imul
jne
xchg
jmp
ret
push
inc
sub
cmp
cli
push
out
aad
cld
inc
inc
mov
mov
sbb
out
fdivl
push
push
lods
or
gs
jae
jmp
pusha
pop
xor
inc
divl
outsl
lret
lea
nop
xchg
sub
outsl
add
xchg
lods
xor
fnsave
rol
cmp
add
ds
add
sbb
and
lock
push
or
sbbl
mov
push
idivb
hlt
data16
loopne
and
or
mulb
add
mov
arpl
add
sbb
pop
cmp
or
jno
cmp
push
mov
mov
out
cmp
and
inc
xchg
xor
test
cmp
repz
cmp
rcrl
pop
dec
dec
fsubr
out
xchg
jecxz
sub
lock
bound
shlb
stos
ja
mov
loopne
sub
pop
mov
jmp
out
add
jecxz
cmp
leave
jl
inc
lret
adc
leave
jae
arpl
push
mov
pop
ret
push
loop
jmp
jge
and
jp
mov
xlat
pop
add
sbb
subb
mov
and
xor
jecxz
dec
repz
pop
mov
out
cmp
arpl
adc
sub
fcomip
pushf
cwtl
je
ret
or
jle
jecxz
xchg
jb
aam
imul
test
scas
ficomps
sub
gs
sub
in
mov
cmp
test
add
jl
fdivrl
sub
icebp
test
mov
test
sub
fucom
shl
or
call
inc
sbb
sub
and
out
cmp
or
bound
daa
sub
pop
mov
sub
mov
and
stos
xchg
sbb
pop
sbb
add
sbb
and
jns
inc
inc
decb
pop
xor
pop
scas
mov
xor
stc
push
in
sub
stc
lret
loope
jle
sahf
sbb
dec
or
fwait
pop
lea
jnp
pop
int3
arpl
mov
mov
pop
push
or
lds
mov
jo
mov
fwait
xchg
and
jb
and
inc
das
jo
or
dec
mov
and
aam
xor
jns
inc
pop
inc
jg
mov
xchg
sahf
pop
sbb
add
stos
int
ja
mov
add
out
xor
adc
setbe
push
loope
fwait
add
loopne
jecxz
leave
out
push
repnz
jae
je
orl
shll
mov
dec
sbb
test
lods
cmp
xchg
mov
insl
adc
or
xor
outsl
outsb
mov
mov
imull
mov
pusha
dec
cli
int
mov
sub
mov
aas
in
scas
jno
cmpl
lods
xchg
test
dec
jae
inc
sub
xchg
test
fnstcw
xchg
sub
leave
test
lahf
mov
test
push
xor
push
ljmp
pop
sbb
mov
sahf
das
test
push
inc
in
lret
xchg
mov
insl
mov
sub
in
cld
outsl
mov
out
lahf
aad
pop
lret
mov
into
push
setno
pop
bound
insl
lea
jae
out
outsb
inc
inc
sarb
or
ret
mov
jp
push
mov
jnp
inc
sub
pusha
call
stos
rcl
or
push
sbbb
adc
sub
out
not
xchg
es
push
xor
mov
pop
jns
int
jo
sbb
xchg
cs
mov
hlt
cmpsb
push
and
mov
push
andl
scas
sahf
test
int3
and
jb
mov
adc
xchg
dec
and
mul
jnp
cmp
jle
sbb
pop
xor
dec
ss
jo
push
stc
or
imull
mov
leave
cmp
pop
loopne
movsb
pop
cld
mov
push
jp
mov
lea
icebp
xchg
stos
repnz
sub
xchg
stos
sti
cmp
sbb
jecxz
subb
jge
sub
mov
add
cmp
cmp
xchg
push
push
cmpxchg
out
sbbl
js
xorb
jecxz
enter
adc
dec
and
fucomip
cwtl
je
pop
xchg
push
and
js
mov
scas
jl
push
imul
push
inc
xor
in
test
mov
test
pop
jbe
jo
push
dec
pop
inc
repnz
pop
neg
jg
lcall
jb
mov
cwtl
lret
jae
outsl
shlb
pop
cmpsl
inc
xchg
jge
jne
push
and
xlat
test
fdiv
jl
push
jmp
popf
icebp
xchg
mov
dec
xchg
push
xor
shl
aas
mov
mov
mov
pop
imul
xchg
sbb
inc
shrb
push
mov
scas
lock
xor
mov
jae
or
pop
or
push
sti
pop
test
lret
sub
cs
sbb
xlat
or
pop
or
popa
sidtl
cwtl
push
shr
xchg
or
mov
xor
push
dec
xlat
push
xchg
test
jge
jbe
imul
mov
inc
cld
dec
cld
adc
jl
repnz
push
rcl
inc
pusha
aaa
clc
dec
adc
xor
pusha
push
rcrb
aaa
xchg
add
dec
shrb
add
or
mov
xchg
push
pop
pop
jb
cs
clc
push
pop
xchg
sub
adcb
icebp
sub
leave
push
pop
stos
and
rcll
cmpsb
xor
or
enter
adc
je
in
popf
loop
fisttpll
sbb
imul
push
lea
jae
mull
jle
ljmp
inc
add
rolb
mov
es
or
sbb
lock
mov
mov
clc
stos
orl
cmp
scas
in
sbbb
lcall
adc
sarb
pop
in
out
mov
mul
push
idivb
inc
es
out
jbe
dec
das
push
cs
test
mov
aad
clc
mov
and
push
fsubrs
or
or
dec
xchg
jns
inc
scas
add
xchg
sub
mov
bound
sti
sub
or
jg
int
je
sbb
push
mov
out
mov
cmpsl
adc
sahf
jns
fwait
sti
test
jnp
je
clc
xor
insb
mov
or
xlat
pop
mov
and
xchg
sbb
lock
push
mov
insb
decl
cmp
je
arpl
testl
add
pushf
mov
into
fsubrl
mov
mov
movsb
bound
jle
jecxz
mov
cmp
jl
les
inc
jno
daa
dec
sub
ret
sub
insb
and
dec
repnz
xor
mov
xor
mov
fstl
jecxz
out
pusha
or
popa
mov
ja
jno
pop
stos
dec
test
in
and
sub
xchg
scas
xchg
data16
js
dec
data16
lods
jae
dec
movsl
movsl
mov
jecxz
mov
xchg
ja
iret
or
sub
jnp
je
mov
sbb
mov
jns
xor
push
jmp
les
cmpsl
pop
fsubp
ret
adc
fists
ret
orl
push
fs
jo
inc
sbb
lods
bound
and
icebp
xchg
dec
cmc
int3
test
test
cmp
lcall
xchg
mov
or
adcl
inc
inc
sbb
adc
sbb
cmp
jmp
add
cmpsb
andl
mov
xchg
jle
icebp
out
out
repnz
push
les
pop
and
repnz
ficomps
jl
jnp
nop
aaa
jg
push
xchg
lea
fidivrl
jle
jg
push
loope
pop
out
xlat
mov
mov
mov
pop
scas
jecxz
cmp
add
fdiv
aaa
jne
jmp
std
mov
ja
subb
js
push
inc
hlt
test
mov
inc
fldl
mov
sub
fists
jl
adc
lcall
mov
iret
or
pop
push
es
scas
sbb
sub
daa
inc
ret
jle
imul
mov
mov
fisttpl
add
dec
xor
mov
xchg
mov
fsts
adc
adc
xchg
subb
cmc
pop
adc
ret
shlb
xchg
fistl
and
fs
inc
imul
jae
test
or
movsl
dec
loopne
pop
rclb
sbb
ret
fidivrs
adc
xchg
cmp
cmp
xchg
cwtl
jae
xor
adc
test
mov
inc
mov
lfs
inc
sbb
jnp
xor
or
mov
or
neg
orl
sub
mov
into
iret
sub
inc
insb
scas
inc
mov
ret
int
hlt
sbb
push
dec
mov
jo
pop
add
xor
popa
scas
add
adc
jo
cmpsl
and
or
pop
xor
je
sbbb
in
cld
sarl
stc
sub
mov
ret
aad
pop
mov
ret
fwait
sti
fnstsw
add
mov
into
push
dec
dec
adc
bound
or
push
xlat
pop
cmp
gs
dec
bound
das
je
cmpsb
lea
in
movntps
or
sbb
dec
nop
mov
push
mov
push
push
jno
mov
lahf
fildl
add
cld
and
push
inc
shll
shlb
pop
mov
incl
lret
pop
loopne
mov
jbe
xchg
mov
add
cli
daa
sbbl
add
or
pop
adc
clc
push
mov
mov
xchg
pop
leave
push
aas
fisttps
inc
dec
jae
mov
inc
fnstsw
out
mov
sahf
cmp
iret
ss
adc
ret
incb
imul
cltd
in
inc
das
jg
cwtl
cmpsb
jl
out
dec
and
or
mov
shr
shll
lcall
stos
jns
and
je
cwtl
inc
cltd
std
jmp
sarl
cltd
int3
xor
push
rol
mov
jmp
or
lock
imul
xor
stos
jmp
aaa
out
jmp
mov
sbb
mov
jnp
cli
pushf
xor
cmpsl
sub
cs
and
mov
cmp
movb
xchg
dec
fsubp
mov
jae
push
sahf
add
dec
fidivs
stos
push
inc
ret
aad
add
sbb
int3
in
imul
test
xor
cltd
roll
stos
hlt
lods
mov
push
shlb
cli
mov
stos
xchg
fdivs
jns
inc
bound
push
fistps
popf
repz
repnz
in
push
divl
cli
ret
sub
ja
mov
incb
inc
lret
pop
and
push
jbe
movsl
dec
sub
loope
movd
push
in
pop
jno
ja
test
je
dec
inc
scas
inc
in
mov
sbb
jbe
adc
push
cmp
push
lea
jmp
js
dec
std
icebp
mov
js
movsl
fcomip
loop
dec
cmp
mul
das
shl
dec
dec
adc
add
jnp
push
and
fsubrl
ss
push
push
scas
addb
or
roll
sub
loop
imull
mov
mov
inc
and
imul
inc
fdivl
aaa
stos
pop
sbb
sti
cmp
sarb
pop
fsubr
push
pop
dec
xchg
xor
or
mov
pop
scas
call
mov
cmpsl
rorl
pop
sbb
cmpb
lret
sub
ds
dec
mov
xchg
call
popa
dec
and
movsb
dec
mov
insl
rcll
in
fwait
xchg
daa
mov
push
push
aas
xor
fildll
fdivs
sub
movl
sub
cmpsb
mov
xlat
mov
in
ficoms
out
inc
gs
out
movsl
adc
inc
divl
lret
dec
mov
and
sarl
in
pusha
fbstp
pop
and
push
jnp
popf
fs
push
jmp
adc
push
pop
push
mov
mov
and
jg
call
addr16
neg
pop
stos
jle
loope
xchg
push
mov
fsubrl
cmp
ss
jg
sti
das
stos
xchg
xor
jmp
arpl
out
bound
sub
ds
ljmp
imul
pusha
cmp
icebp
insb
sub
sub
pop
js
dec
scas
mov
sarl
xchg
jge
pop
pop
int3
dec
xor
adc
rcll
jae
daa
sub
cmp
loop
pop
and
leave
mov
jle
daa
scas
dec
jmp
loope
mov
shrl
bound
inc
and
in
leave
shr
testl
aaa
push
repz
cmpsb
or
movsb
movsb
adc
jg
sbb
scas
pop
push
popf
fwait
jge
rcl
aas
repnz
aas
fs
push
sbb
inc
fadd
fldl2t
repnz
enter
xor
movsl
sub
sbb
incl
dec
and
jae
cmp
pop
cmp
shl
std
fs
aam
push
pop
pop
outsb
add
repnz
xor
or
mov
fs
mov
mov
and
scas
dec
xor
insl
pop
ljmp
push
pusha
inc
pusha
stos
xchg
rol
test
and
cmp
mov
pusha
ret
rcll
outsb
out
pop
subl
shrb
cmc
ja
loope
cld
daa
lcall
xor
add
in
push
sahf
inc
mov
sti
adc
adc
dec
fldl
mov
clc
mov
std
sbb
dec
and
or
mov
stos
adc
lods
add
inc
push
add
adc
int
jle
add
in
add
push
push
testl
pusha
cmpb
pop
mov
scas
mov
cmpsl
adc
call
and
mov
inc
and
popa
insb
mov
adc
movb
xchg
mov
xor
and
cwtl
xchg
mov
mov
js
xchg
and
icebp
enter
mov
ret
dec
cmp
popf
fidivrs
xchg
arpl
popa
push
jnp
inc
ljmp
mov
push
cmpsb
imul
adc
lea
jns
decl
negl
pop
clc
xor
add
inc
stos
aaa
gs
cmpsb
xchg
xchg
repz
ret
mov
add
sub
repz
decb
stos
xor
inc
inc
and
mov
or
cmp
cmp
sub
lods
adc
fstps
in
shrl
or
mov
jl
imul
xor
inc
dec
ds
add
scas
setle
jns
push
pop
push
jb
xor
jmp
mov
dec
leave
popa
jo
dec
scas
xor
fnstenv
dec
sarb
data16
aaa
shlb
pop
cmc
jl
pop
mov
int3
inc
scas
inc
into
push
cli
enter
lret
adc
and
movsb
mov
stc
test
rorl
and
in
dec
pop
fdivl
les
inc
sbb
add
mov
mov
sub
mov
ljmp
add
loop
adc
cwtl
inc
int3
loopne
stc
xor
add
jbe
out
les
les
arpl
cmp
sub
inc
and
pop
inc
cmp
cmpsl
dec
xor
sub
push
stc
dec
iret
push
andl
xor
data16
adc
dec
push
flds
std
movsl
icebp
sub
data16
inc
int
xchg
or
vmovd
iret
int
gs
jae
cmp
out
rcrb
inc
out
sub
loopne
iret
xor
out
fmul
pop
xor
mov
jmp
gs
jo
mov
pop
mov
and
arpl
sti
stos
dec
pushf
and
mov
lret
or
js
pop
sarl
lret
jns
lahf
filds
test
and
insl
adc
mov
mov
pop
cmp
idivb
lret
cmp
add
or
mov
adc
cmpsl
dec
dec
pop
and
add
fistpll
es
sbb
negb
adcb
add
sub
pop
xlat
or
adc
call
call
sti
cmpxchg
leave
mov
enter
fimuls
and
sbbb
lds
insb
mov
mov
mov
gs
test
es
xor
loop
mov
adc
jecxz
fisubs
xlat
jae
push
xor
jg
lds
cmc
and
mov
sbb
scas
inc
jecxz
imul
xchg
mov
icebp
enter
dec
in
inc
lcall
and
fbstp
mov
ret
fisttpll
sbb
in
sbb
cmp
movsl
movsb
icebp
icebp
xchg
pop
icebp
stos
insb
xchg
scas
adc
js
gs
xor
pop
insb
scas
pop
add
aaa
adc
into
inc
push
rol
and
mov
std
push
mov
push
iret
call
loopne
sub
cmpsl
out
mov
cmpsb
adc
xchg
xorl
push
loop
mov
xlat
xchg
xlat
ret
and
mov
aam
pop
insb
adc
popf
mov
clc
or
popf
jmp
test
mov
mov
jnp
lods
pop
push
push
jle
ja
adcl
ljmp
sbb
push
mov
je
xchg
lds
pop
aaa
add
push
pop
nop
mov
pop
cmp
out
pop
dec
cmp
hlt
ja
lods
fs
fnstenv
add
in
inc
sbbb
mov
aam
pop
cs
orl
mov
es
dec
das
aam
dec
dec
add
loope
fnstsw
lahf
fidivrs
pop
fdivrp
pop
fidivl
leave
pop
mov
push
test
jecxz
gs
sbb
mov
enter
mov
pushf
jae
sbb
shll
addr16
inc
movsb
jg
jb
aaa
int
shlb
lds
incb
mov
sbb
add
push
mov
fsubrl
pop
xor
dec
divl
in
out
or
dec
ja
aad
mov
gs
pop
ja
pop
into
shr
je
mov
mov
jnp
or
ret
popa
mov
ret
sbb
adc
cmpsl
orl
gs
inc
push
fisubs
mov
pop
push
inc
xchg
movsl
mov
shlb
dec
jo
or
inc
ret
jl
jmp
adc
das
cmp
mov
decb
or
aas
mov
out
push
dec
pop
insl
push
imul
ss
mov
jle
sahf
insl
jge
bound
mov
aam
ret
mov
lods
cld
call
test
lcall
and
stc
sbb
bound
mov
ret
in
cmc
scas
enter
jge
and
insb
shll
xchg
imul
mov
pop
jnp
loop
mov
loopne
cmp
add
push
addr16
push
or
adcl
sti
mov
mov
push
rolb
inc
jp
into
outsl
push
sbb
or
cltd
repz
dec
pop
and
aad
pop
aas
mov
addb
mov
lds
das
fcmovnbe
aas
push
pop
jno
aas
lahf
dec
xor
dec
mov
je
xor
jecxz
or
movaps
pop
dec
fwait
stos
mov
xchg
aad
and
hlt
cmp
push
mov
mov
ficomps
leave
test
sbb
push
loopne
push
call
and
ljmp
rcrb
mov
xlat
dec
xchg
fistpll
iret
je
mov
mov
test
cmc
cmpsl
xor
imul
adc
loope
mov
cltd
adc
and
cwtl
fldenv
cmpsl
sbb
xor
gs
or
mov
popf
jp
cmpsb
add
push
mov
sti
push
or
xchg
cmpps
lea
adc
popf
dec
fisttps
das
data16
daa
fucomip
or
popa
jnp
dec
xor
aaa
inc
pusha
pop
rcrl
negb
mov
add
pop
xchg
out
mov
xchg
xor
mov
mov
std
fiadds
add
sbb
daa
sbb
jne
xor
insl
bound
testb
xor
test
mov
out
adc
and
inc
int
das
xlat
xor
arpl
mov
imul
arpl
or
cmp
dec
jecxz
arpl
adc
sbb
and
xchg
xchg
fs
fcoml
test
movsl
mov
sub
andb
fucompp
mov
in
and
mov
pop
mov
sbb
insb
jne
dec
pop
cmpl
add
xchg
mov
and
xor
inc
sbb
movsl
testb
push
adc
adc
adc
fldt
seto
pop
cmp
imul
orb
add
out
rorb
dec
fisttps
mov
fnstcw
fbstp
int
test
int
add
movsl
mov
xchg
std
cltd
repnz
in
inc
ss
rcrb
jp
or
or
ret
xchg
out
test
inc
and
inc
dec
xchg
pop
in
mov
lret
mov
sbb
daa
fwait
mov
cwtl
movsl
jmp
mov
dec
dec
dec
dec
jge
cld
mov
in
xchg
xor
scas
shlb
dec
in
push
jecxz
lods
jo
xchg
andl
cmp
scas
mov
sbb
sbb
lahf
aam
mov
dec
in
outsb
jbe
mov
cmp
push
shl
les
pop
pop
std
lret
xor
push
push
push
inc
mov
lds
inc
inc
and
stos
jmp
push
cmpsb
dec
das
fcoms
mov
sbb
rep
mov
dec
loop
sarl
xorb
loop
mov
or
mov
lret
mov
testl
or
scas
nop
repz
dec
jns
dec
sbb
xbegin
xor
mov
inc
rcr
xor
fdivrs
fists
dec
out
sub
mov
inc
mov
xor
fnstsw
inc
pop
insl
add
test
xchg
fsts
mov
push
inc
push
not
aad
pop
sub
leave
fwait
jmp
jbe
popa
sbbb
fucom
mov
and
and
fcmovbe
stos
scas
popa
xorl
data16
popf
or
sbb
aas
adc
push
imul
adc
lret
int
bound
push
and
leave
and
inc
ss
or
pop
jae
pushf
gs
nop
scas
ficompl
sahf
shrl
cmp
cmp
xchg
out
cmc
mov
push
mov
cmc
jnp
scas
shrb
mul
dec
lods
sbb
addl
xor
pushf
adcb
mov
repz
sbbb
scas
fstpt
xchg
mov
aaa
lret
loop
xor
and
and
xchg
add
sbb
push
sti
scas
add
sub
ljmp
add
loopne
out
ss
or
int
add
sub
mov
clc
popa
mov
adc
or
pop
daa
xchg
lcall
ror
mov
insb
jle
idivl
scas
xor
cmp
push
js
mov
xor
cmpsl
leave
cmp
loopne
jae
mov
call
test
enter
orb
mov
test
mov
bound
or
cs
ss
dec
aam
pop
adc
jmp
lds
inc
cmpl
mov
mov
jp
pop
and
xor
daa
add
lea
mov
xchg
gs
repz
arpl
sbb
loopne
cli
cmp
movsl
vpmulhuw
mov
jmp
push
jmp
test
inc
push
ljmp
jno
int3
test
sahf
inc
push
lret
test
sub
and
faddp
xor
xchg
in
adc
lods
cmp
cltd
testl
cld
xchg
aas
or
dec
and
fwait
cpuid
nop
lea
aaa
sbb
cmc
nop
loope
dec
dec
adc
ljmp
push
mov
inc
mov
push
push
pop
mov
in
jo
push
rcrb
jnp
cmpsb
xor
adc
push
lds
mov
pop
dec
mov
sbb
std
or
xchg
pop
or
inc
push
mov
inc
push
jle
inc
mov
dec
ss
int3
and
in
cmp
in
xchg
xchg
ja
sbb
and
push
rcrl
fimull
in
arpl
pop
pushf
mov
dec
loopne
mov
xchg
mov
dec
pop
out
push
fdivrl
pop
outsb
test
mov
addr16
fucomip
sub
pop
jl
xor
les
insb
adc
mov
out
xchg
add
mov
insb
cwtl
pop
push
xor
mov
dec
test
inc
leave
mov
mov
fld
loop
mov
sahf
push
out
lea
out
cli
jbe
xor
in
aad
dec
out
dec
sub
cmpl
push
inc
jne
sti
movsb
cmpsb
push
xor
pop
out
inc
fists
andl
out
rorl
mov
aad
cmp
test
addr16
dec
xchg
mov
jno
mov
in
les
xchg
xchg
sub
test
aaa
sbb
mov
daa
andl
in
mov
xchg
dec
enter
sub
fstl
xchg
mov
sbb
dec
fcmovu
adc
push
int3
mov
jp
shrl
arpl
add
lret
shlb
loope
cmc
dec
xor
inc
repz
out
pop
mov
dec
mov
mov
out
add
dec
lock
inc
frstor
pop
ss
push
xchg
shrl
inc
ficoml
sahf
add
jb
xor
jmp
xor
pop
orb
nop
push
loopne
dec
aad
mov
lds
pop
pop
aad
gs
xchg
cld
test
xchg
mov
or
scas
mov
push
mov
fstpl
sub
sbb
addr16
enter
movsl
inc
fcmovbe
inc
cltd
xchg
negb
add
fdivr
xchg
or
cmp
sbb
push
mov
sar
jns
insb
jnp
popf
test
aad
cmpsl
add
jmp
add
pop
scas
gs
insb
and
movsb
addr16
out
ret
cltd
loope
cmc
adc
xor
fiaddl
dec
jmp
in
call
add
xor
test
flds
dec
jno
mov
fnsave
shll
popf
mov
js
xchg
jl
cmp
inc
xchg
lahf
pop
inc
add
loop
jae
call
pushf
iret
lcall
and
aaa
stos
add
mov
mov
nop
sbb
inc
jp
add
imul
fcompl
call
rol
sub
push
lds
jp
sub
jmp
sbb
inc
div
popf
push
fsubl
ficomps
jno
xor
test
pop
fsubp
cmpb
js
push
cltd
adc
xor
sub
cli
mov
mov
xchg
lods
popl
int
stos
or
arpl
lahf
xchg
jecxz
cwtl
fisttpll
adc
ja
int
or
mov
inc
push
pop
arpl
adc
inc
inc
jns
mov
push
das
pop
cli
cltd
je
out
pop
ret
imul
clc
sub
xchg
mov
pop
adc
dec
xchg
popa
outsl
cmp
sub
enter
ja
test
in
call
xor
or
aad
or
sti
testl
lret
and
fisttps
shll
lods
mov
out
fcmovbe
cmc
or
push
fwait
jae
cmp
lea
or
fdivr
push
into
or
in
mov
sbb
rol
xor
lahf
fs
outsb
sub
fwait
stos
rcrb
sbb
lods
loop
fisttpll
mov
sub
out
pushf
jnp
addb
adc
js
xchg
aaa
clc
ret
sahf
js
adc
mov
xor
shll
inc
neg
jmp
sub
mov
mov
mov
out
push
inc
mov
incl
xor
mov
dec
and
pop
divb
inc
aas
movsb
dec
gs
and
fldcw
popf
dec
mov
shl
jno
insb
sub
jbe
push
ss
cmp
int3
mov
dec
push
fcmovbe
push
cwtl
mov
mov
mov
adc
pusha
test
out
in
cwtl
dec
repz
mov
pop
adc
xor
pop
loop
pop
loope
fwait
sub
cmp
xchg
or
insl
dec
add
test
icebp
je
mov
mov
mov
loopne
mov
aaa
jo
pop
imul
adcl
lods
cmp
jno
push
xchg
loope
inc
add
xor
rclb
cli
lret
and
mov
idivb
fdivrs
xor
insl
in
fcomp
lods
xchg
lcall
lcall
pop
test
jns
sbb
shlb
fidivs
test
ds
mov
ret
jnp
cmc
test
and
fwait
jmp
xor
mov
dec
pop
mov
inc
xlat
insl
out
ds
sub
scas
sub
ficoml
or
add
test
pop
cld
stos
xor
mov
push
jmp
mov
mov
add
sub
mov
push
xor
adc
and
out
jne
data16
inc
push
xchg
xor
out
rcll
in
cmc
lahf
mov
jle
out
enter
adc
pop
or
repnz
pop
sub
das
jecxz
add
clc
ljmp
int3
jb
imul
sub
sti
or
ss
xchg
sbb
adc
orb
xchg
push
ja
outsl
dec
dec
add
jp
loope
gs
out
adc
inc
out
cmc
mov
sub
jb
cli
mov
mull
sbb
pop
pop
mov
leave
pusha
fstpt
outsl
sub
dec
mov
shld
adc
adc
and
cmp
sub
cli
add
add
enter
cmp
stos
pop
out
mov
dec
daa
mov
iret
push
sbb
enter
rclb
idiv
nop
imul
xorl
fisubrl
push
or
cmp
xchg
fcmovnu
hlt
addl
dec
mov
jmp
aaa
outsb
adc
ja
push
jg
jo
jb
movsl
dec
scas
lds
sbb
scas
jl
mov
dec
mov
aam
lods
int3
ss
decb
sub
test
jbe
mov
out
or
fdivl
inc
loopne
test
fcomip
dec
ljmp
jg
popf
shrb
adc
xor
popf
xchg
xlat
mov
mov
bound
cld
shll
mov
push
push
popf
inc
hlt
mov
mov
pop
jne
pop
fsubr
xor
mov
sbb
sbb
sbb
mov
popa
cmp
jle
mov
scas
mov
sub
mov
fcmove
pop
pop
mov
addr16
xor
and
jo
xchg
sbb
jle
and
add
popf
or
push
sub
sub
popf
xor
adc
dec
aad
movsb
add
stc
sub
icebp
jae
arpl
mov
fcomps
ror
pop
cmp
mov
dec
dec
lock
idivb
loop
and
mov
movsb
popa
fwait
dec
inc
jae
pushf
dec
xor
push
adc
add
divb
push
mov
out
add
pop
stos
mov
pop
out
fcmovbe
mov
mov
lahf
arpl
mov
xchg
xchg
mov
and
push
pushf
mov
in
cmpsl
out
out
xorl
or
cmp
sub
fisttpll
fcomip
loope
roll
ja
dec
sub
clc
or
push
repz
jnp
add
out
test
aam
fwait
inc
cld
fsubp
sub
sbbb
add
sbb
add
inc
into
jnp
in
data16
int
orb
insl
inc
cmc
sbb
xchg
or
shlb
pop
pop
mov
push
add
xor
pop
repnz
jmp
mov
dec
movsb
cs
insb
mov
mov
push
fnstcw
xor
jecxz
inc
in
adc
loop
add
or
into
mov
push
jecxz
push
cmp
mov
mov
in
xchg
push
inc
pushf
test
mov
adc
adc
add
push
fnstenv
mov
pusha
jp
sub
and
jo
push
cmpsb
addr16
nop
mov
pop
mov
mov
sahf
scas
in
sub
and
sub
mov
jp
mov
mov
dec
pop
add
mov
lahf
sahf
pop
mov
dec
jb
xor
mov
fwait
mov
dec
in
gs
stos
fisubl
push
inc
push
adc
cmp
mov
fwait
mov
cmc
dec
dec
cmpsb
ja
and
dec
sbb
mov
shl
jae
mov
clc
jmp
sub
jge
mov
pop
loopne
add
je
xlat
mov
testb
jbe
call
movsb
cmp
dec
sub
jns
cmp
mov
sbb
out
sbb
push
insb
pop
cmp
pop
inc
mov
cmp
imul
dec
adc
mov
hlt
inc
xchg
das
inc
mov
sub
xchg
mov
cmpsl
jnp
sub
cmpsl
adc
fstpl
push
orl
rol
and
imul
jae
push
push
mov
adc
inc
clc
mov
test
add
add
jmp
mov
sbb
mov
push
roll
hlt
cmpsl
add
jns
dec
jecxz
mov
xor
aas
mov
cmp
or
xor
mov
insb
mov
scas
or
push
push
sti
push
push
sub
loopne
jne
dec
mov
stos
fsubr
fsubr
cmc
outsb
push
test
jmp
push
jnp
nop
push
sub
fnstenv
xchg
pop
cmpsb
repnz
nop
inc
jo
mov
pop
push
jbe
dec
out
and
mov
and
mov
pop
je
mov
aaa
or
and
push
push
mov
div
or
movsb
stos
inc
push
scas
sti
int3
push
and
adc
and
pop
lock
lret
mov
sti
imul
or
data16
insb
mov
mov
jl
aaa
imul
aad
cltd
pop
jg
enter
mov
jecxz
vpcomuw
xchg
dec
out
stos
testl
mov
push
in
and
cmp
mov
addr16
sbb
sbb
sub
lret
xchg
xrelease
rcrl
jno
mov
in
sbb
loop
aam
dec
cmpsl
sub
xchg
adcb
inc
sbb
inc
daa
sahf
std
hlt
out
out
dec
cmp
in
fwait
jo
inc
sub
or
clc
xchg
out
movsb
add
jb
outsl
sub
and
cltd
rep
mov
mov
ficoms
cmova
pop
addb
jp
loopne
aad
jge
jae
rcrb
inc
mov
inc
dec
dec
jo
cmp
imul
aam
fs
xchg
pop
or
and
pop
loop
xchg
dec
ret
mov
lcall
cltd
sub
out
xor
mov
push
xor
addl
mov
dec
dec
push
popa
fldenv
xchg
imul
add
dec
sbb
jge
jne
pusha
iret
fcoml
inc
inc
icebp
sub
inc
sub
dec
aam
pop
movb
push
cs
out
cld
scas
pop
outsb
cmc
adc
scas
cmp
add
xchg
sub
cli
add
mov
fmull
scas
inc
cmp
mov
sub
repnz
out
xchg
sbb
inc
dec
icebp
and
stos
stc
out
xchg
xchg
cmp
push
cltd
std
pusha
cmpsl
jmp
push
shlb
das
xchg
adc
fidivs
dec
dec
aaa
jbe
jo
xchg
add
int3
std
or
cmp
and
xchg
movsl
push
jae
jmp
adc
sbb
mov
lret
jo
cmp
xchg
arpl
test
pop
into
dec
jo
adc
in
negl
xchg
stc
test
cmp
scas
insl
push
sub
repz
and
orl
sti
jge
xchg
outsl
mov
fs
ret
xchg
test
lahf
mov
cmpsl
orb
repz
iret
mov
pop
leave
int
cmp
sbb
pop
inc
and
lahf
pop
cmp
inc
out
xor
sbb
xchg
test
test
rorl
cld
leave
push
in
pcmpgtw
lds
and
leave
and
pop
adc
add
andb
outsb
dec
test
mov
cmc
jmp
push
pop
or
or
mov
pop
jmp
push
montmul
cmpsb
xchg
inc
popf
jnp
pop
xor
je
jae
pop
push
movsb
lea
pop
call
sarl
dec
pushf
daa
xchg
arpl
dec
bsr
add
cltd
mov
or
jns
mov
jmp
lods
inc
add
addr16
adc
rcl
jno
mov
sub
sub
add
enter
sahf
dec
addr16
adc
mov
adc
sub
jp
sub
rcrl
rorl
pop
roll
shl
push
call
gs
fucomip
cmc
mov
push
xchg
mov
inc
jno
ja
arpl
mov
push
mov
xorl
pop
dec
mov
sarl
adc
xchg
leave
dec
sahf
and
ljmp
addr16
pop
ret
push
xchg
ds
lcall
cmp
repnz
ds
sub
fdivl
lds
loopne
loop
lods
xor
mov
jge
cltd
xlat
xor
or
jnp
add
jbe
dec
mov
lahf
push
jg
mov
stos
jno
jp
sub
mov
pop
arpl
ret
movsb
xor
ljmpw
cmp
fisubs
test
xlat
jb
jne
clc
push
fdivrl
adc
popf
test
mov
ja
dec
stos
and
mov
aad
mov
cmpsl
in
lock
loopne
lret
inc
pop
and
hlt
mov
inc
sahf
clc
out
out
popa
ror
add
cltd
pop
jg
test
imul
adc
xlat
imul
xor
inc
fwait
lods
ljmp
stc
push
mov
fistps
fbstp
fnsave
and
cmp
mov
mov
add
cmpsb
mov
jl
ret
popf
stc
inc
repz
lret
inc
adc
adc
lret
push
fs
out
jnp
xor
arpl
jge
add
lea
fildl
sbb
fidivs
pop
aas
daa
jmp
aaa
arpl
push
fldl
pop
mov
loope
std
pop
xor
bound
adc
scas
aaa
and
mov
cmc
je
dec
pop
ja
mov
sub
repnz
out
js
dec
pop
std
insb
xchg
and
jle
daa
mov
ljmp
xchg
or
mov
shll
cwtl
cli
lock
inc
and
shrl
mov
filds
sbb
dec
enter
sub
push
mov
lods
repz
loopne
insl
and
add
es
adc
insb
bound
les
test
sbb
fmul
inc
insl
idivb
add
sar
jno
xor
into
jb
dec
in
js
mov
stc
pusha
sti
pop
movsb
inc
icebp
lods
int3
and
int
mov
fsubp
adc
lcall
push
mov
ds
subb
loope
and
out
pop
les
jbe
mov
lods
pop
mov
stc
push
add
stos
or
or
call
fldenv
push
jecxz
imul
mov
dec
mov
xor
mov
mov
fmuls
mov
mov
sti
or
or
or
ljmp
push
mov
or
stc
outsb
or
in
dec
jb
insb
in
sub
loopne
dec
pop
inc
arpl
ja
add
mov
dec
movsl
std
sub
scas
push
mov
outsb
mov
cmp
imul
fs
rcll
out
dec
je
insl
lahf
sub
mov
add
cs
fisubrs
cwtl
sti
popa
add
or
xor
xchg
cmp
nop
daa
fimull
mov
mov
stos
or
pop
and
dec
cmpb
scas
pop
sar
xchg
test
mov
sti
cmpsl
daa
jg
sub
decl
mov
mov
les
divl
sub
clc
lahf
dec
mov
cld
fmull
in
lret
and
int3
inc
sbb
mov
dec
dec
scas
jp
adc
inc
mov
pop
ja
xor
cmpsl
jb
push
cmpsl
movsb
stos
mov
movb
das
jle
sbb
push
push
shrb
jb
js
cmp
int
pusha
jns
jb
idivb
inc
pop
repnz
inc
lea
std
adc
repz
fcoms
mov
sub
cltd
push
adc
mov
notb
popa
pop
push
dec
mov
xchg
dec
xor
inc
push
lods
adc
cli
xlat
popf
xor
xchg
jg
sub
jl
rcrb
xor
sbb
testl
outsb
test
fcompl
xor
int3
mov
lahf
inc
pusha
sbb
pusha
mov
inc
bound
movsb
jmp
stos
cmp
mov
inc
outsb
cmp
pop
mov
dec
mov
mov
and
jg
inc
pop
cmp
push
fmuls
adc
push
call
xor
xor
pop
cs
adc
sbb
cmp
pusha
aaa
sbb
repnz
pop
xorb
cltd
pop
fs
lods
pop
mov
fidivrs
inc
fisttpl
bound
adc
movsb
dec
jecxz
mov
lcall
ds
add
arpl
dec
test
add
fnstenv
inc
loope
ds
js
jb
test
mov
push
push
push
cltd
mov
stc
cmpsb
jns
daa
adc
or
and
dec
pop
enter
inc
into
push
in
add
pop
mov
cwtl
pop
pop
xor
sti
mov
insl
pusha
pop
pop
es
cmp
jmp
sarl
mov
jecxz
mov
cmp
or
data16
mov
and
in
fimuls
dec
imul
sub
test
xchg
xchg
cmp
mov
imul
adc
movsl
aas
mov
mov
sbb
out
push
inc
sbb
pop
push
inc
dec
mov
xor
out
in
xchg
mov
and
add
jle
add
mov
mov
push
jbe
cwtl
ds
adc
fdivrl
sarb
and
insl
lods
mov
sub
add
loope
fs
xchg
xchg
hlt
test
scas
push
out
ja
jl
xchg
arpl
data16
xor
enter
xor
cwtd
outsb
in
pop
jmp
test
hlt
cli
push
add
pop
mov
iret
and
into
push
cmp
xchg
out
test
negb
pop
in
negl
pop
inc
loop
and
stos
fmulp
xor
push
jmp
cwtl
mov
sbb
adcb
test
jb
outsb
xor
jns
stc
cmpb
mov
aaa
pop
dec
dec
fdivs
mov
pop
mov
gs
pop
xchg
jns
testb
push
scas
cltd
lea
adc
xchg
iret
sbb
lret
jb
fsubrs
xor
mov
pop
adcl
pushf
inc
inc
dec
pusha
pop
mov
out
shl
cmp
out
pop
mov
jbe
sub
nop
call
inc
mov
xchg
xchg
call
lds
dec
aad
out
jg
pop
dec
sub
addb
mov
sahf
cmc
fwait
lret
fwait
inc
or
bound
xchg
sbb
sbb
int3
leave
push
lods
pop
sub
mov
mov
sti
add
and
jbe
nop
mov
inc
scas
mov
cltd
test
sub
lahf
rol
or
inc
sbb
push
jg
scas
xchg
push
fcomip
xor
xchg
outsl
push
les
mov
pop
xchg
jl
push
es
arpl
add
incl
jmp
push
xchg
scas
aas
outsb
es
nop
xor
mov
in
ss
jb
inc
mov
xor
negb
dec
test
adc
fsubl
and
lods
sahf
or
iret
lret
jae
sub
dec
and
add
stos
outsb
pop
adc
sub
imul
jge
add
mov
add
sbb
mov
repz
adc
inc
mov
push
jno
ja
movsb
shr
mov
sarb
neg
repnz
cmpsl
in
jns
daa
sub
insb
jns
dec
cmp
popa
sub
movsl
clc
clc
sub
test
ret
hlt
adc
ret
aam
gs
in
daa
pop
lahf
pop
in
testb
clc
dec
or
iret
and
rcll
push
and
and
decl
outsl
mov
and
or
or
ljmp
pop
mov
lods
push
in
mov
cmpsb
repz
popl
sbb
in
or
mov
call
mov
mov
movsl
dec
dec
adc
ljmp
jno
lret
hlt
cmp
stos
xchg
and
add
sub
movsb
pop
add
add
and
push
sbb
and
cmp
bound
mov
dec
lds
cmp
mov
jmp
mov
mov
or
pop
dec
push
popf
stc
ficoml
jl
adc
add
xor
or
pusha
aas
stc
or
aad
pop
jl
mov
jp
cmpsb
in
sub
jl
sub
add
inc
push
mov
aaa
push
fwait
jb
push
jnp
lds
cli
xchg
sbb
fcomps
outsb
jle
push
scas
rorb
stc
mov
loopne
push
jns
pop
cmp
and
aam
out
mov
add
mov
fsubrp
push
arpl
rcl
sub
mov
test
movsl
jmp
cmpl
shlb
lahf
add
xor
adc
xor
mov
das
mov
mov
aaa
clc
inc
mov
repnz
hlt
test
and
xchg
int
shlb
pop
rcl
pop
clc
pop
call
aaa
outsb
mov
push
jle
sub
and
decl
pop
dec
hlt
xchg
pop
aaa
pushf
sub
push
cmp
scas
testl
sbb
lcall
lcall
mov
cmp
shrb
outsl
jnp
inc
sbb
jmp
adc
fs
mov
dec
mov
mov
dec
cli
pushf
out
cs
imul
sub
pop
in
sbb
adc
orb
lahf
push
mov
cmp
int
cli
or
sbb
sub
push
cltd
add
fdivr
addl
cwtl
cmp
loopne
fistps
xlat
fistl
xor
pop
dec
enter
jp
lock
test
jbe
pusha
add
mov
gs
cmpsb
and
loope
outsb
push
aam
fnstenv
scas
call
mov
fsubrl
out
mov
mov
adc
jmp
andb
rcr
xor
fldenv
push
push
jg
fidivrs
jmp
jp
shlb
mov
mov
test
jl
fwait
in
jno
mov
insb
sbb
xchg
mov
xor
js
mov
jge
mov
add
notb
add
jmp
push
or
jle
push
mov
aas
fidivs
mov
cs
mov
xchg
pop
clc
or
mov
xchg
cmp
fidivrl
faddp
jl
jnp
in
nop
jb
dec
repnz
jge
xchg
mov
addr16
rcll
sub
mov
inc
push
es
xchg
mov
mov
push
mov
idiv
decb
popf
mov
dec
ret
inc
call
int
sbb
addr16
mov
dec
mov
aam
fsubs
add
or
sbb
dec
jns
and
popf
cs
sub
xchg
sti
push
pop
ss
push
mov
mov
repnz
cmp
fdivrs
jbe
enter
mov
data16
mov
or
mov
or
xlat
and
sahf
or
mov
sub
insb
test
pop
pop
mov
lcall
inc
mov
sbb
out
out
fmulp
adc
inc
push
jecxz
movsl
sbb
shlb
and
lret
outsb
cmp
stos
push
rorb
mov
data16
neg
mov
add
lahf
jecxz
stos
mov
and
or
stos
js
and
inc
pop
lea
jg
lret
xlat
jle
push
stos
stc
orl
add
cmp
inc
mov
lds
push
rorl
jns
aaa
outsb
data16
mov
test
xchg
add
add
cmpsl
cmc
out
mov
cltd
or
in
es
lods
shrb
mov
add
inc
jmp
mov
cmp
pushf
sub
and
push
mov
inc
xorb
jne
movsl
ss
sub
and
cltd
enter
lock
out
sbb
cmp
pop
push
mov
push
cmpsb
ret
jb
shr
rcrl
push
jno
mov
fadd
rcll
pop
xlat
cmp
movsl
loop
and
sub
lret
sarb
std
repz
mov
mov
jns
clc
ljmp
xor
lds
mov
js
xor
jg
dec
icebp
cmp
aas
xor
mov
pop
pop
scas
cmp
mov
inc
dec
stc
fdivp
inc
loope
data16
lahf
test
dec
pop
jae
dec
lods
aaa
into
jmp
js
popf
mov
cmpsb
jg
pop
inc
clc
adc
sub
dec
push
mov
mov
incl
sub
das
test
mov
mov
cltd
add
cs
in
imul
fldl
jns
clc
inc
or
rclb
mov
enter
pop
push
add
test
outsl
inc
movb
dec
lock
sbb
insb
mov
shrb
mov
jns
adc
xor
sub
fwait
cmc
aaa
dec
jecxz
aam
cmp
mul
mov
mov
push
and
aas
loop
pop
cltd
call
mov
and
mov
xor
and
mov
jns
repnz
mov
repnz
cltd
xor
add
daa
mov
sbbl
cmp
data16
pop
cli
enter
rcl
cmc
mov
push
into
pop
mov
or
or
insl
jge
xchg
or
mov
fsubrs
jns
out
mov
insb
loopne
in
enterw
add
lret
jg
push
pop
cs
stos
add
fwait
test
and
std
push
insl
add
aam
repnz
mov
call
cwtl
std
cmp
call
adc
into
pop
mov
xchg
scas
adc
push
pop
jmp
dec
out
jle
insl
decl
push
push
testl
dec
ja
xlat
test
mov
lcall
and
xchg
lods
xor
filds
mov
dec
add
js
int3
and
add
and
outsb
dec
mov
sbb
movb
aad
into
test
pop
mov
xor
stos
mov
repnz
cmp
sub
xchg
xchg
mov
fldt
jo
cwtl
ja
cmpsb
sbb
stos
xchg
scas
idivb
mov
push
mov
pop
push
dec
in
and
std
shlb
andb
lea
mov
femms
movsl
inc
mov
lods
mov
jno
jo
jns
cmpsl
ret
jl
ret
sub
adcb
scas
jp
and
or
outsb
inc
rclb
xchg
into
adc
cmc
ja
mov
jle
leave
mov
jo
xchg
or
pop
cmp
xor
mov
imul
test
or
cltd
jae
mov
pop
and
adc
add
shll
int
jg
in
and
sub
dec
add
jg
jmp
lods
inc
cltd
push
decb
scas
sbb
cli
jae
mov
jle
clc
adc
lret
into
mov
imul
mov
pop
pop
arpl
add
push
mov
mov
add
mov
adc
mov
clc
dec
sbb
push
pop
pop
scas
inc
dec
mov
lcall
stos
dec
jb
dec
dec
lods
fwait
les
je
clc
cs
out
jecxz
xchg
shlb
in
sbb
and
mov
adc
add
sbb
nop
and
test
lret
gs
cmp
xchg
and
shrl
mov
mov
sahf
push
dec
push
stc
add
adc
fisubs
or
out
int3
test
pop
and
fnstenv
aad
fadd
inc
jge
lret
scas
notb
lods
mov
stc
fistpll
lods
sub
add
fbld
dec
cltd
idiv
cli
cltd
xor
jnp
rorb
jge
cltd
test
sub
push
jne
dec
dec
stos
lds
sbb
push
jae
ljmp
xchg
sbb
push
mov
testb
outsl
mov
fs
jo
push
out
xchg
sbb
dec
push
jp
outsb
es
push
inc
jbe
sbb
or
mov
push
jecxz
adc
mov
ljmp
jmp
lods
sub
mov
bound
in
int
pop
ret
je
test
pop
jo
test
pop
push
lret
jb
sub
std
cmp
mov
or
push
pop
push
adc
shr
jno
pop
dec
rcrb
mov
adc
repnz
inc
test
ja
bound
mov
push
pushf
enter
jno
shl
stos
sub
mov
mov
test
out
shl
sbbl
mov
jbe
jae
xchg
rcrb
sub
sub
fsubrs
lds
ret
in
fldcw
or
pop
push
fcmovne
xor
jmp
es
pop
cmp
jmp
test
jno
cmp
cld
lcall
in
subl
adc
ret
dec
lock
pop
or
or
add
sub
es
pop
and
fwait
in
or
lcall
rorb
inc
movsl
xor
jp
mov
xchg
xchg
jns
inc
mov
shll
jbe
hlt
sub
inc
xchg
and
sarl
fnstenv
test
jp
adc
and
mov
dec
lods
test
lods
push
in
mov
mov
xchg
sahf
jl
jg
stos
sbb
jl
push
int3
inc
sbb
hlt
xchg
mov
push
ret
lds
mov
cmp
jns
stos
aam
sti
mov
aas
or
jle
xchg
mov
jl
and
fstp
cmp
out
loope
mov
xchg
mov
cmpsb
mov
dec
mov
out
adc
into
imul
inc
incb
sti
stos
mov
cltd
mov
jle
xchg
scas
cli
push
jno
pop
push
and
cltd
push
fdivrl
xor
rcr
popa
mov
jbe
outsl
jno
shrl
int
push
dec
aas
push
jnp
shr
adc
sbb
jmp
stos
leave
jae
dec
cmp
and
movsl
shr
sar
jl
xor
mov
jne
in
xlat
sbb
or
mov
adc
rol
push
loop
adc
cmp
adc
sub
pusha
cmp
push
test
jo
arpl
pop
and
mov
mov
add
shll
je
daa
jb
mov
or
sbb
adc
in
in
push
fiadds
insb
fdivrl
push
push
sti
fwait
testb
out
xchg
mov
jae
xchg
sub
jge
in
mov
jge
mov
mov
push
fcomp
stos
mov
lret
fsubl
inc
into
cmpsb
fsubrl
fsubrs
aam
arpl
xchg
out
fimuls
and
jo
mov
mov
cli
rcrl
in
cmpsl
fdivl
sub
xchg
dec
and
lret
jg
bound
push
fdivs
and
stc
adc
mov
into
in
push
stc
mov
scas
sti
sarl
xchg
pop
push
out
mov
mull
dec
add
sbb
add
mov
ret
icebp
leave
or
xchg
sub
xchg
das
rcr
jo
add
or
das
jnp
aad
nop
jmp
push
popf
inc
or
and
push
sub
pushf
popa
leave
or
dec
or
ds
sbbb
testb
mov
xor
xchg
add
lods
cmp
jnp
mov
cmp
mov
xorl
repz
sub
xor
movsl
into
push
xchg
testb
add
test
stos
mov
mov
scas
aaa
push
rcll
and
movsb
mov
bound
cli
push
lahf
ror
pop
and
roll
mov
sbbl
test
mov
or
test
andl
dec
outsl
xor
dec
dec
sahf
mov
ss
int3
les
adc
adc
cmp
adc
mov
cmc
sarl
movsb
mov
sbb
in
lret
sub
dec
pop
in
jae
xchg
mov
ljmp
pushf
xor
xlat
cmp
sahf
jnp
jae
lea
sti
xor
and
adc
xchg
imul
ja
mov
mov
ret
lods
xor
and
push
jns
repnz
mov
mov
sti
mov
cmp
lret
pop
xor
stos
add
mov
int
jae
scas
dec
pop
mov
push
lods
std
mov
mov
mov
js
jno
mov
inc
push
faddl
cld
push
pop
mov
outsl
xchg
push
shrl
push
ret
inc
popa
and
pop
cmp
loop
add
xlat
jmp
sbb
stos
into
mov
test
adc
call
or
fdivrl
int
int3
arpl
imul
stos
cmp
xchg
mov
inc
push
cmc
mov
mov
push
int3
or
add
xchg
scas
inc
dec
pop
sti
sbb
xchg
xchg
mov
pop
jmp
out
cmp
pop
js
xor
mov
aas
push
push
lods
jb
outsl
mov
inc
repnz
add
fidivl
in
push
fsubrp
xor
push
sub
pop
sbb
inc
lahf
repz
ret
icebp
test
mov
addr16
push
into
inc
out
loope
arpl
adc
notb
repnz
inc
lret
flds
cmpsb
sbb
das
lods
movsb
jmp
lea
cmpsb
ret
sbb
inc
les
imul
jo
mov
in
lcall
add
and
js
sbb
insb
mov
mov
sbb
or
cmp
daa
or
imul
push
test
jge
mov
jmp
scas
cld
dec
push
sbb
mov
mov
cmc
mov
sub
or
mov
out
push
fsin
xchg
or
add
fstpt
test
iret
mov
loopne
or
testb
cli
mov
sbb
enter
js
jp
sbb
cmc
cmp
mov
cmp
dec
fs
rcrb
xchg
mov
cmc
outsl
shrb
jge
mov
imul
mov
hlt
subb
les
lcall
call
mov
cmp
adcb
xor
dec
ljmp
popa
adc
pop
mov
push
in
loop
mov
dec
mov
lock
mov
adc
movsl
test
and
cwtl
or
mov
ret
cmp
insl
dec
pop
outsb
stc
rclb
push
sub
lcall
imul
pop
gs
mov
xor
shlb
xchg
push
enter
sti
out
push
add
cmpsl
inc
loopne
jg
aam
cwtl
sub
cmpb
cld
sub
not
xchg
loope
lea
sub
mov
xchg
cmp
stos
xchg
dec
sub
dec
outsl
rorl
nop
sarb
adcb
and
aam
xchg
inc
lods
lcall
lds
loope
ficoms
cltd
test
sti
mov
add
das
mov
and
pusha
push
pop
outsl
sub
jne
jbe
xor
mov
cmp
xor
aad
push
pop
addr16
jle
jp
imul
rcrl
push
ret
outsl
add
xor
cs
push
jno
jge
clc
scas
test
jg
outsb
xor
mov
mov
rol
pop
test
lcall
push
pop
movsl
dec
and
out
xor
mov
push
cmp
loopne
repz
lea
insb
sub
jae
rclb
ja
test
xor
mov
test
add
cmpsb
es
gs
popa
mov
sbb
pop
aam
mov
mov
pop
adc
in
aaa
cwtl
pop
cmp
cmp
inc
jmp
mov
pop
sbb
dec
mov
xlat
outsb
adcl
pop
fdivrl
cltd
jbe
int
cmpsb
mov
int
push
pop
jle
aas
push
cmc
xor
cmp
sbb
jp
jle
jbe
rorl
adc
xchg
scas
sub
shrl
dec
xchg
cmpsl
mov
ret
gs
rolb
loopne
outsl
daa
add
inc
mov
jl
push
push
mov
in
insb
rolb
xor
jp
out
xor
ljmp
jb
lret
sbbl
xchg
andb
sub
jp
mov
pop
xor
in
cmp
push
mov
dec
out
xchg
in
push
shl
inc
jb
push
and
mov
jb
js
sbb
dec
dec
adc
mov
jg
aam
inc
into
in
nop
or
dec
adc
jae
int
insb
vpmulhw
xor
jae
inc
movsl
pop
jns
icebp
ss
cmp
adc
and
inc
in
dec
pop
xor
add
push
mov
jae
scas
mov
fildll
insl
cmc
movsb
notb
sbb
lods
mov
iretw
aad
jno
test
arpl
ficomps
rorl
and
push
mov
mov
ja
ja
jb
dec
pop
xchg
xor
lahf
je
xor
sti
arpl
xchg
inc
push
sahf
and
cmp
inc
pop
pop
push
out
cs
fldt
stc
fbstp
enter
pushf
cld
adc
sahf
int3
arpl
out
xor
mov
inc
fs
arpl
daa
repz
push
fdiv
mov
push
mov
and
inc
aam
int3
hlt
pop
cmc
mov
or
cmpsl
daa
daa
jp
dec
or
test
lret
int
sbb
pop
popa
loope
xchg
jle
dec
jno
daa
lret
shr
dec
mov
insl
mov
aad
add
cmp
shlb
fwait
xor
sarl
add
mov
adc
or
xor
pushf
lods
cmpsb
rcll
fisttps
popa
mov
fldt
popl
rolb
sti
xchg
push
fidivrs
rcl
dec
add
adc
mov
adc
jp
xchg
push
dec
lods
movb
or
je
xchg
and
sbb
push
and
lcall
repnz
icebp
test
push
mov
insl
shll
cmp
into
inc
or
and
mov
in
push
and
or
inc
xlat
or
dec
pop
sbb
cs
mov
aad
add
jbe
inc
in
xlat
pop
mov
enter
mov
xor
lret
cmp
ds
adc
push
mov
in
ficompl
push
cmp
fadds
sub
mov
adc
fidivl
lds
cmp
mov
pop
or
sub
movsb
add
add
dec
hlt
in
xchg
and
jecxz
loop
aam
or
int3
lock
adc
add
imul
loope,pn
push
mov
pop
arpl
pop
outsl
sbb
jne
push
jns
lret
pop
daa
pop
bound
mov
dec
cld
and
pop
dec
add
aaa
hlt
jecxz
es
jl
jge
dec
dec
imul
jo
imul
mov
ret
adc
xchg
or
cmp
sti
dec
insb
or
adc
fldt
lret
cmp
rorb
stos
pop
and
imul
push
test
repnz
int
xor
cwtl
mov
sub
xlat
pop
mov
or
out
lods
mov
fdivl
mov
aam
jbe
dec
mov
mov
inc
push
jge
into
lea
in
jle
sub
xchg
cltd
into
mov
mov
inc
push
mov
inc
pop
je
sbb
data16
call
repz
xor
and
adc
mov
imull
enter
pop
insb
leave
mov
dec
mov
pusha
or
sbb
ret
mov
add
jo
jbe
gs
cld
and
mov
mov
loop
mov
fs
add
xchg
adc
sti
jo
mov
lods
popa
aam
xor
and
ljmp
test
sbb
xchg
pop
rcll
bound
nop
jns
in
mov
mulb
mov
pop
imul
inc
outsb
jl
mov
xchg
jle
addb
adc
xchg
lret
int3
lods
push
lock
fisubl
lods
xchg
aas
lods
insl
add
pop
shll
loope
push
jg
lea
sbb
mov
and
aad
stos
testb
sub
xrelease
aas
fldl
jno
js
lods
scas
inc
int
dec
fidivrs
xchg
push
mov
push
mov
push
xchg
loope
push
inc
fldt
dec
fs
mov
cmc
stos
ss
xchg
jne
add
je
xor
gs
lods
push
sub
adc
loopne
jo
xor
pop
sbb
xchg
add
xor
mov
xor
bswap
pop
mov
fisubrl
mov
repnz
data16
jnp,pn
add
mov
mov
daa
pop
fcmovnbe
rcll
jne
loopne
cwtl
xchg
add
std
icebp
xor
jae
xchg
test
sub
test
cmp
gs
mov
sti
jl
jae
add
xchg
aam
dec
adc
mov
fldcw
fstps
xorl
mov
fwait
out
mov
lds
lret
xchg
push
cmp
fidivs
andb
stos
outsb
xchg
aam
inc
xchg
lcall
cmpsl
out
pop
push
inc
fnstsw
stos
mov
xlat
xor
sub
in
stos
in
cmp
or
fcompl
enter
xor
pop
ljmp
shrb
sub
add
adc
mov
sub
or
mov
andb
xchg
push
aad
movsb
mov
add
add
and
imul
es
mov
sbb
ret
arpl
dec
xchg
lcall
xor
std
inc
fistps
outsl
xor
cmp
inc
aam
scas
ss
inc
inc
mov
push
inc
mov
aaa
mov
dec
data16
in
rcrb
int
loope
jno
sub
sub
std
lods
xchg
daa
or
pop
ret
or
movsl
icebp
xor
dec
pop
test
xchg
add
add
cwtl
xor
test
ss
scas
movntps
sbb
adc
mov
shr
pop
cmp
jp
scas
mov
cmp
push
lods
mov
sub
fldcw
cmpb
mov
lea
cmpsb
cltd
rcrl
adc
rcl
das
lea
inc
rcll
push
jo
dec
adcb
movsb
out
test
fldt
cld
in
sahf
testl
xor
xchg
jbe
mov
xor
std
sbb
int
mov
mov
mov
addr16
in
ret
pop
and
sbb
test
xchg
sub
push
aam
jno
scas
leave
adcb
xor
mov
xchg
mov
gs
mov
sbb
dec
and
pop
test
rclb
ds
jb
dec
or
add
loope
adcb
adc
sub
je
mov
nop
pusha
out
mov
ret
filds
jge
or
mov
ret
stos
and
adc
lret
addr16
pop
cmp
push
xor
pop
imul
mov
xchg
movsb
out
in
adc
cmp
pop
sub
add
push
test
jnp
and
fnstsw
lcall
or
sar
xchg
sub
lea
in
lods
sahf
xor
xor
shll
fldt
xor
jmp
dec
sbb
xorb
mov
or
cmp
cli
xchg
dec
std
popa
mov
je
add
push
push
test
add
xchg
int
mov
adc
sbbl
sub
cltd
push
sbb
pop
test
sub
xchg
insl
jl
cmp
sbb
mov
frndint
push
xchg
sbbb
dec
out
sti
add
aaa
jmp
shl
adc
stos
in
out
test
cmp
sahf
icebp
xor
sub
adc
cmc
scas
mov
jmp
ss
add
and
daa
and
dec
out
cmp
cmp
inc
inc
cmpsb
xor
adc
mov
push
mov
fwait
icebp
lods
icebp
mov
adc
inc
xchg
shrd
ret
and
xchg
pop
push
out
sbb
push
xor
dec
push
pop
cwtl
test
repz
mov
inc
int3
icebp
jg
movsl
sbb
lret
mov
adc
xor
fidivl
icebp
pop
inc
inc
jmp
daa
fwait
cs
pop
jb
dec
adc
cmp
scas
inc
out
dec
and
int3
lcall
jne
ret
call
push
test
mov
bound
mov
mov
cmp
in
aas
cltd
repz
movsb
pusha
add
pop
mov
mov
adc
inc
inc
inc
imul
push
push
cmp
xchg
cmpsl
pop
dec
pop
imul
bound
adc
fidivs
jecxz
pop
pop
fdivl
mov
cli
or
cli
dec
in
call
sbb
mov
adc
unpcklps
cli
lock
inc
and
add
or
cs
pop
lock
insb
adc
test
lds
xchg
fwait
mov
jecxz
icebp
aam
out
fnstsw
ud0
xchg
pop
pop
xchg
sub
push
mov
out
mov
mov
shl
dec
mov
test
in
nop
bound
test
adc
jae
lea
fdivp
repz
xor
mov
loop,pt
xlat
adc
rep
cld
sub
mov
mov
testl
jo
cli
push
or
or
out
push
in
pop
or
xchg
out
inc
int
jns
sub
addr16
pop
dec
dec
adc
adc
dec
lcall
push
mov
xchg
add
in
sarl
cmpsl
ret
add
sahf
divb
or
mov
lods
push
aas
push
mov
aam
ret
mov
dec
xor
or
outsb
dec
adc
adc
dec
mov
mov
ret
sub
out
enter
cltd
xor
adc
jle
adc
sbb
flds
jae
std
jne
lods
out
xchg
sub
xor
push
mov
and
lcall
xchg
test
xchg
sarb
jns
fdivrl
xchg
xchg
xchg
pop
icebp
push
imul
mov
mov
jnp
mov
jg
pop
lret
jb
pushf
push
cwtl
adc
dec
or
outsl
fldt
or
jmp
cs
cmp
push
mov
jp
imul
and
pop
and
jmp
ret
jb
sub
pop
mov
jbe
in
outsl
pusha
into
enter
mov
push
mov
cmp
insl
rorb
mul
mov
dec
movsl
in
std
sub
movsb
jmp
xchg
lahf
ljmp
lods
clc
loop
dec
scas
out
xor
xor
test
add
xchg
stc
out
stos
out
pop
mov
jnp,pt
xchg
lods
lahf
push
aas
sar
xor
jecxz
cs
sarb
cmpsl
test
inc
or
int3
xchg
out
jb
ja
inc
loop
mov
push
pop
mov
mov
adc
sub
adc
or
popl
std
inc
jns
push
pushf
sahf
cmpsl
pushf
mov
call
and
testl
scas
aad
into
cmovb
test
lods
notl
loop
mov
nop
stos
mov
ja
push
fmulp
xchg
mov
pop
icebp
popa
fadds
push
cmp
sbb
add
sub
into
int
or
xchg
daa
ror
add
pop
xchg
xchg
scas
test
xor
sub
mov
cmp
repz
out
sbb
fisubrs
lock
fwait
xor
push
dec
movsl
lea
jnp
xchg
pop
shll
xor
push
inc
push
add
pop
stos
les
jns
adc
in
and
jbe
imul
sub
sti
or
repnz
clc
mov
or
pop
xor
jp
or
les
mov
incb
mov
std
int3
cmp
push
sub
or
movsl
add
call
fsubl
filds
ja
inc
out
xor
or
pop
jl
pusha
mov
lock
inc
mov
aad
gs
push
mov
add
gs
push
in
mov
data16
sti
into
sbb
jmp
xor
mov
dec
addr16
push
push
nop
xchg
orl
stos
push
cmpsl
or
cs
cmp
cmc
scas
adcl
add
xor
cmp
xchg
jl
std
ret
adc
iret
lock
inc
stos
or
or
dec
fnop
xchg
mov
into
cmp
jmp
lods
add
ss
adc
push
xor
and
bound
lds
pop
mov
mov
leave
lahf
and
fldt
fsubrs
mov
clc
cwtl
sub
test
cli
mov
sbbl
xchg
xchg
jae
or
xor
lods
outsb
push
js
les
stos
mov
dec
in
outsb
test
push
call
cltd
aam
mov
adc
imul
aaa
adc
out
stos
pop
jle
xor
xor
insl
jecxz
lahf
lahf
lods
mov
leave
leave
jne
ljmp
jns
mov
mov
test
mov
inc
outsb
repnz
push
xchg
mov
pop
push
mov
pop
mov
subl
wbinvd
sbb
mov
movsl
cmp
call
iret
jbe
push
and
loop
pop
addr16
and
mov
xchg
pop
sub
ret
dec
mov
cmp
sbb
les
mov
ret
cmpsb
pop
cli
or
jl
jbe
testl
mov
cmpsb
inc
xchg
sub
lcall
adc
or
mov
or
push
movsb
adcl
mov
dec
shlb
mov
out
mov
pop
mov
sbb
or
or
daa
cmp
rolb
pop
pop
and
pop
mov
dec
mov
xchg
stos
push
jg
mov
test
xchg
neg
insl
gs
pop
push
insl
mov
xor
jmp
cmp
test
or
xchg
sub
aas
int3
ret
in
mov
nop
jge
vpunpcklbw
pop
loope
shlb
repz
arpl
mov
cld
pushf
push
xchg
aad
cmp
xlat
stos
mov
lcall
or
ds
repnz
rorl
mov
mov
dec
jg
dec
adc
push
pushf
mov
sub
in
sub
pop
mov
popf
std
mov
add
rclb
add
movsl
push
sub
mov
out
and
lea
xorl
or
es
xchg
sbb
fdivrs
notl
dec
cltd
dec
sbb
push
xor
outsl
in
mov
mov
aam
je
push
mov
and
inc
cltd
xor
push
pop
xchg
xchg
mov
or
dec
nop
add
lahf
cmpsb
push
bound
xchg
jb
int3
sub
dec
adc
add
lret
or
out
mov
incl
or
idiv
mov
sub
mov
dec
stc
sub
lds
pusha
adc
dec
pop
jb
push
test
inc
cmc
scas
outsl
jns
fistl
loopne
sbb
int
scas
lock
cmpsl
mov
cmpsl
lea
dec
mov
inc
sti
push
xor
mov
pop
inc
imul
mov
jecxz
mov
fidivs
or
mov
repz
mov
xchg
fistpl
mov
mov
cmpsl
scas
rolb
pop
enter
pop
notb
aas
mov
jno
mov
stos
loop
call
pop
shlb
mov
outsl
icebp
xchg
pop
and
add
inc
mov
ret
jae
cmpsl
ret
mov
icebp
sbb
out
jno
aam
pop
js
add
push
out
outsl
clc
and
ds
decb
fsubrp
xor
cmp
loop
cmpsl
xor
adc
and
sub
add
mov
jmp
xor
bound
test
outsb
in
mov
mov
std
or
xor
les
add
pop
shr
sbbb
inc
ljmp
cmp
sbb
es
or
mov
adc
add
call
daa
out
orl
add
movsb
mov
arpl
andb
push
sub
jo
mov
notl
mov
adc
mov
pop
hlt
aam
and
rcll
dec
xchg
sub
loopne
lea
nop
add
mov
sbbl
in
out
pop
imul
adc
out
stos
xor
adc
cmp
ja
mov
push
into
jg
and
inc
outsl
sub
xchg
sub
adc
frstor
or
add
mov
inc
jae
fs
das
jmp
xchg
mov
lret
jns
dec
mov
sbbb
or
aam
outsb
xor
in
cmp
xor
sub
dec
dec
mov
mov
lods
mov
push
xchg
cld
dec
je
mov
push
jecxz
popa
cmpl
ficomps
sub
sub
jmp
filds
gs
adcb
mov
shr
add
outsb
inc
sbb
xchg
mov
xor
push
jo
outsl
cmp
loope
mov
pusha
and
cld
es
outsl
mov
loope
push
call
sarb
iret
adc
test
lahf
mov
sbb
shr
add
and
sub
fsts
or
icebp
enter
mov
movsb
cmpb
lcall
mov
in
cld
mov
xchg
push
popa
clc
inc
popa
cmp
notb
roll
sbbb
in
jp
mov
mov
cmpsb
cs
iret
mov
xchg
push
ja
and
es
push
mov
inc
push
bound
and
adc
fnstsw
fdivrs
dec
ds
fdivs
lods
lret
cmp
xor
sub
arpl
xchg
ret
hlt
dec
fdivrl
xchg
aam
dec
push
mov
add
inc
ret
shr
pop
je
mov
xor
loop
jne
idivl
push
lock
fnstenv
fcoms
test
dec
pop
inc
call
loope
sbb
fs
jae
das
xchg
mov
mov
sub
in
es
out
inc
lods
insl
cld
jne
and
insl
rorb
cmpsl
sbb
sbb
dec
shrl
and
rcl
call
popa
loopne
nop
popf
cmpsb
mov
or
fildl
push
popa
and
pushf
aad
into
pushf
jg
sub
fld
push
addr16
sti
xchg
test
add
mov
dec
or
cmc
ret
scas
lahf
or
add
cmp
sub
adc
cs
fisttps
cld
shrl
out
dec
xorb
aad
leave
inc
xchg
into
fisubrl
add
int
and
outsb
push
enter
mov
in
out
cmp
push
mov
inc
lret
imull
shlb
push
push
dec
pop
sbb
mov
xchg
imull
mov
push
test
ljmp
dec
mov
pop
imul
aaa
add
outsl
rcrb
push
cmpb
xor
xor
sahf
mov
or
add
loopne
pop
insl
xchg
fucomip
repnz
mov
push
popa
jge
push
and
mov
ja
loopne
or
enter
outsb
ljmp
dec
in
and
mov
xchg
ss
cmpsl
data16
mov
adc
jno
shlb
gs
fdivs
sbb
pushf
push
jp
aaa
bnd
fucomi
pop
into
add
lods
orb
pop
or
jbe
outsl
adc
add
sbb
or
pop
iret
ret
lcall
sbbl
cmp
sbb
push
repz
and
aaa
popf
aam
sub
mov
dec
fwait
and
iret
jbe
jl
fnsave
ret
push
sarb
adc
add
mov
jne
arpl
pop
xchg
xor
stos
fistps
lea
aam
ffree
ret
insb
in
mov
mov
and
mov
jl
mov
jle
mull
jmp
std
mov
xor
and
ds
xor
jmp
movsb
sub
outsb
insl
mov
sbb
xchg
pop
outsl
adc
xchg
fldcw
icebp
push
mov
sahf
mov
jl
ljmp
sub
push
pop
xchg
push
mov
rorl
movsl
mov
push
in
push
aam
scas
and
xor
sahf
xor
cmpsl
and
push
jge
lock
push
xchg
xor
add
dec
mov
adc
addr16
sub
mov
scas
loope,pt
pop
repnz
jnp
cmpsb
and
ds
mov
ret
pop
std
or
shrb
adc
les
mov
int3
out
fildll
test
xor
icebp
or
push
sub
imul
pop
mov
gs
cmp
test
xor
add
mov
cmp
cmpsl
inc
mov
ss
out
or
xchg
std
push
enter
mov
mov
std
lds
inc
mov
jne
scas
pusha
ljmp
mov
dec
inc
push
mov
insl
mov
xor
xor
movsb
push
dec
pop
inc
clc
push
mov
dec
xchg
lods
shlb
int3
push
pop
cli
aas
outsb
fisubrs
jmp
jnp
rorb
out
and
test
imul
inc
push
adc
arpl
adc
adc
cmpsl
jbe
aas
cmpsl
orb
mov
inc
mov
stc
jp
inc
dec
sbb
scas
inc
cwtl
jne
jmp
inc
xlat
xchg
mov
inc
cmp
ror
inc
leave
pop
push
and
lahf
iret
mov
int3
cmp
xlat
es
or
pop
push
inc
sbb
mov
lea
lahf
gs
add
dec
sub
fisttps
imul
std
sbb
sbb
cmp
fimull
int3
adc
xchg
stos
loope
stc
popf
flds
lea
adc
ds
jno
or
xor
mov
mov
ljmp
push
inc
bound
pop
lods
push
data16
adc
mov
jl
mov
repnz
inc
mov
cwtl
daa
fwait
je
cmp
movsl
dec
ret
cmpsl
stos
sbb
test
adc
ret
xchg
sti
dec
push
mov
xor
into
popa
mov
mov
ret
fadd
and
imul
sub
scas
dec
cmpsl
imul
popa
clc
mov
repnz
xchg
sbb
xchg
dec
sbb
jmp
insb
sbb
fnsave
cli
mov
cli
adc
or
pusha
shlb
push
mov
or
mov
lret
xchg
or
imul
stos
mov
popa
fstpl
xor
fisubrl
cmp
sbb
fbstp
cmp
jecxz
pop
adc
mov
popa
pop
imul
hlt
xchg
inc
adc
jno
xchg
stos
inc
mov
jbe
pop
fcmove
divb
loop
mov
jmp
xchg
xor
mov
jne
mov
mov
add
push
push
and
mov
rcr
jb
pop
push
cmp
repz
test
inc
sbb
sti
inc
movsl
call
lock
mov
jle
xor
xchg
mov
push
or
or
imul
xchg
and
dec
gs
in
in
test
sbb
orl
stc
stc
hlt
arpl
int
sub
mulb
mov
cld
mov
inc
orw
push
movsb
jno
addr16
push
cmpsb
mov
and
inc
je
ja
test
xor
cmpxchg
fstl
aaa
dec
fildll
and
add
sbb
adc
or
cwtl
jg
adc
add
mov
cmpsb
mov
mov
mov
out
mov
sbb
lret
sti
dec
xchg
pop
hlt
in
out
addr16
mov
push
jno
pop
out
mov
sub
popf
aam
xchg
sub
mov
iret
mov
fucomip
aad
xchg
inc
jbe
orl
push
cwtl
sub
int3
add
insb
aaa
jb
xchg
icebp
push
filds
lahf
test
mov
ja
push
call
xchg
xchg
outsl
push
leave
mov
arpl
fcoms
or
inc
push
xor
movsb
aas
fsubs
sub
adc
xor
xor
dec
fnstcw
push
sbb
scas
mov
fs
jg
and
mov
stos
mov
scas
mov
pop
icebp
movsl
clc
inc
cmpsl
js
dec
lds
insb
and
xchg
push
mov
imul
int3
sub
cltd
lods
jmp
lahf
or
and
xlat
cmpsl
cmp
pop
sbb
hlt
pop
sub
jl
in
out
cltd
add
inc
sahf
cmp
pop
sub
xchg
repnz
jmp
push
cld
outsl
jo
arpl
aaa
jp
pop
divb
or
fcmovnb
pop
mov
cmp
add
rcr
sub
pop
imul
sahf
xor
mov
push
push
mov
pushf
and
mov
fldenv
lret
cwtl
jno
aas
repnz
ja
arpl
cs
add
xchg
dec
outsl
jo
bound
jl
pop
stc
nop
mov
sahf
adc
pop
scas
pop
aaa
lea
or
shl
hlt
ret
outsb
jl
adc
jns
std
fistps
lret
sub
push
jmp
adcb
jmp
mov
xchg
mul
add
sbb
dec
andl
mov
daa
inc
jl
push
pusha
or
inc
mov
cmp
pop
add
js
and
cmp
movsl
dec
dec
ljmp
push
or
or
loope
dec
push
jns
imul
decl
sar
sbb
pop
out
mov
adc
add
pop
call
jno
or
add
inc
in
cs
test
in
stos
adc
or
mov
inc
xchg
jge
mov
jne
add
adc
mov
outsl
cltd
pop
fmull
inc
stos
das
in
out
test
or
aas
mov
jo
and
adcl
jmp
dec
jae
aad
faddl
sti
gs
push
nop
jne
adc
jl
adc
xchg
loope
sti
add
daa
add
test
or
insl
vpcomuw
cs
push
xchg
dec
xchg
xor
fsubr
nop
sarl
jecxz
in
std
pop
fbstp
xor
int
adc
cmpsl
push
mov
cmp
sbb
dec
sbb
shrl
icebp
ficoms
sub
out
jl
imul
push
sub
movsb
inc
jl
cmpb
jge
fs
mov
into
dec
push
lods
adc
xor
fwait
sub
sbbl
popf
outsl
fsubrs
jb
insl
movsl
dec
negb
xor
mov
fcomps
daa
or
roll
cs
gs
adc
filds
dec
mov
call
je
lds
outsl
add
xor
mov
mov
stc
pop
push
push
test
addb
pop
and
mov
mov
adc
imul
loope
xchg
pop
mov
push
mov
dec
in
sbb
bound
js
je
sub
mov
fdivrl
insl
mov
mov
pop
jecxz
movsb
stos
fisubrl
std
icebp
movsl
xor
fnsave
gs
xlat
xor
jne
xchg
cwtl
jbe
xorl
js
cld
dec
xchg
das
cmp
mov
ret
jo
push
mov
add
es
aad
rcrb
test
mov
sti
stos
scas
call
cmpsl
mov
aas
add
loopne
add
xchg
dec
or
nop
outsb
icebp
mov
shll
pop
leave
push
popf
inc
mov
stos
rclb
dec
sbb
ds
push
add
inc
imul
aaa
push
and
lcall
jno
sub
sbbl
sub
dec
xlat
and
fs
pop
je
sub
or
les
mov
movsb
push
daa
cmp
into
loop
ja
loopne
dec
fwait
xor
into
and
dec
int
mov
lods
mov
fisubrs
lods
mov
in
pop
ljmp
adcl
lret
bound
push
push
movsl
jns
jmp
leave
test
pop
sahf
xchg
leave
sub
sbb
mov
pop
shll
mov
xor
lds
pop
mov
in
int
adc
xchg
and
or
in
fldcw
cwtl
lahf
shll
xor
fldt
jl
pop
fld1
mov
lret
mov
adc
xchg
inc
xchg
scas
orb
repz
loop
mov
je
into
xchg
sahf
cmp
inc
cmpsb
setle
mov
and
fdivrs
lcall
or
repz
test
dec
inc
pusha
jl
sub
xchg
sahf
stos
inc
dec
dec
fdivrl
jp
enter
mov
aaa
cmpb
mov
mov
add
and
scas
pop
mov
add
cmp
pushf
xor
cmp
std
fsubs
mov
adc
div
sbb
and
pushf
adc
or
ljmp
sub
mov
pop
cwtl
or
popf
sub
add
xchg
jae
daa
mov
fimuls
push
andb
mov
cmpsl
xor
mov
fstpl
and
xorb
cwtl
lods
rcrb
pop
lods
jno
dec
js
xor
inc
adc
mov
cmp
jnp
cmp
movsb
xor
pop
pop
add
jo
jno
arpl
out
repz
outsl
jnp
ret
jp
les
adc
cmp
jmp
adc
loopne
sbb
sbb
mov
shrb
and
lret
repnz
enter
mov
enter
ret
es
test
leave
pop
cwtl
into
mov
lret
cmp
arpl
aas
daa
lret
sbb
sahf
movsb
inc
in
aaa
imul
dec
repz
cmc
insl
out
push
mov
mov
jmp
adc
scas
push
lock
loop
add
sub
push
jo
add
pop
test
inc
xor
push
sbb
mov
andl
dec
mov
lods
xchg
adc
xor
inc
add
fincstp
fwait
push
jmp
xchg
push
sub
mov
data16
dec
fdivs
xchg
aam
sbb
sub
inc
rcr
add
inc
xchg
jl
cwtl
jmp
in
mov
jae
xchg
fmuls
sub
pusha
dec
push
pop
cs
iret
addr16
or
test
bound
lahf
mov
insb
xchg
shlb
sti
shrb
cmp
pop
repnz
cmc
mov
repz
dec
ja
jbe
imul
or
in
pushf
cli
jnp
and
mov
dec
jb
lods
lret
xchg
xor
dec
popa
inc
inc
inc
lret
mov
mov
mov
dec
jecxz
aad
shl
cmp
cs
add
mov
mov
xchg
inc
out
mov
les
pop
jecxz
add
cmp
mov
xchg
cmp
or
xchg
push
mov
push
aad
adc
push
clc
idivb
ljmp
fnstenv
fwait
push
pop
lret
or
mov
jecxz
push
rcrl
push
adc
xchg
cmp
loope
outsl
cmpsl
ds
dec
cs
jns
xlat
cmpsl
push
or
std
adc
cltd
cmp
mov
mov
rolb
adc
sahf
push
es
inc
xchg
ja
or
shl
ljmp
pop
insb
mov
into
bound
std
cwtl
dec
rol
fsubl
popf
ret
outsl
ja
movsl
mov
dec
pop
int
mov
fwait
sub
push
andl
adc
aad
das
lcall
and
test
xchg
pop
mov
mov
lahf
getsec
loopne
imul
mov
push
ja
sbb
dec
mov
fwait
loope
and
aam
gs
cmc
push
jmp
mov
push
mov
jbe
xchg
cmp
jmp
jecxz
mov
and
dec
mov
mov
mov
jbe
rcll
cltd
insb
aaa
pop
push
mov
shll
push
xor
or
cmp
imul
out
in
pop
cmp
daa
sub
sahf
mov
rol
cmpsl
lock
cmovg
mov
inc
pop
jge
inc
sbb
mov
cmp
loope
mov
shll
add
jge
or
sub
cltd
jg
cmpsl
jo
mov
sti
packssdw
in
xchg
push
sub
incb
push
xor
popa
lret
out
mov
aaa
lock
sbbl
mov
pop
mov
mov
cltd
jns
fiadds
mov
pop
xchg
cmp
lods
jge
push
scas
into
bound
repnz
inc
jmp
rcrb
rorb
cmp
cmp
mov
jecxz
sub
cmp
popa
clc
pop
and
pop
push
cltd
add
inc
xor
into
into
dec
mov
mov
ljmp
ret
std
and
sub
movsl
out
repnz
xor
inc
push
mov
out
fcmovnb
sub
push
test
mov
push
sbb
int
in
loop
adc
int
fdivrs
aad
push
fdivrs
stos
xchg
mov
jo
add
mov
decb
sar
mov
jo
out
sub
lds
push
lds
jae
hlt
seta
lahf
lcall
fs
xchg
cli
adc
mov
or
std
fistpll
sub
sub
inc
pop
addr16
mov
cmp
push
loopne
mov
sub
hlt
sbb
nop
xor
inc
push
bswap
pusha
inc
mov
mov
inc
sbbl
faddl
or
and
scas
push
daa
inc
sbb
jb
pop
data16
jge
sub
pop
js
arpl
loopne
cmpsb
test
outsl
dec
outsl
test
push
outsb
notb
mov
adc
add
outsb
inc
push
insb
iret
shll
jb
xchg
push
dec
in
ja
addr16
imul
mov
decb
xor
iret
mov
xor
push
movsb
jg
and
pop
es
stos
mov
imul
aaa
les
insb
mov
sub
mov
loop
fidivl
add
jae
mov
lods
xchg
cmpsl
pop
dec
adc
cmpb
and
mov
or
sahf
mov
in
outsl
pusha
nop
out
xchg
xchg
std
loop
lcall
movsl
sbb
sarl
adc
lea
divl
std
lret
pop
adc
dec
xor
cmp
addr16
out
fwait
scas
inc
lds
xlat
xchg
repnz
cmpsb
sub
mov
lcall
push
repz
and
dec
pop
cmp
jbe
inc
push
push
ljmp
cmp
or
adc
push
lds
insb
aam
test
ljmp
testb
icebp
pop
mov
mov
mov
lods
inc
cmp
into
call
mov
rorl
insl
inc
mov
aad
or
iret
divb
test
adcb
pop
pop
sub
push
rolb
popf
add
pushf
scas
icebp
loope
les
adc
sbbl
outsb
cmp
repz
push
sub
adc
push
popa
xchg
fdivs
dec
stos
dec
repnz
das
ret
and
scas
popf
stc
cmpl
lea
in
sub
push
popf
add
jge
and
xchg
push
imul
mov
icebp
inc
data16
jne
insb
adc
sbb
cmp
inc
outsl
jg
pop
dec
fists
jle
mov
pop
mov
test
sahf
scas
cmpsb
adc
and
das
lods
pop
inc
das
aas
jl
addr16
cmpsb
sahf
loop
mov
add
xlat
push
stc
cltd
or
and
lahf
sbb
pop
xchg
pop
movsl
sub
insl
cmpb
aad
add
fwait
out
push
push
mov
mov
pop
mov
rcr
jl
movsb
cmp
add
adc
jg
cmpsb
scas
sub
inc
sti
fidivs
sbb
xchg
test
test
jp
push
andl
fnstenv
push
mov
xchg
xchg
mov
or
cltd
xchg
mov
mov
out
out
xchg
cmp
pop
and
les
mov
push
fmull
js
dec
pop
adc
pop
xor
in
jbe
xchg
jp
xor
xchg
jmp
lcall
jo
sbb
std
icebp
lea
xchg
psubq
cmpsl
movsl
lret
enter
pop
mov
xor
fisttpll
int3
jp
data16
xlat
testl
cltd
cmp
or
and
jnp
add
int
sti
cmovs
fmull
jl
cmpsb
cmpb
mov
nop
daa
xchg
pop
or
push
mov
mov
in
rolb
inc
pusha
mov
fwait
dec
inc
sahf
mov
insb
or
inc
inc
insb
push
nop
vmovdqa
mov
repz
sti
pop
jecxz
lret
xchg
loope
dec
mov
xchg
ret
lods
dec
sbb
sbbb
sbb
ret
pop
stos
sbb
insb
xchg
mov
cmp
loop
inc
neg
mov
mov
add
loope
arpl
fwait
add
push
add
sub
push
jp
and
mov
test
xchg
xchg
in
arpl
pop
xchg
outsl
mov
lea
icebp
movsl
pop
adc
sbb
adc
in
aam
push
lret
cmp
repnz
lods
cmp
or
adc
mov
add
fadds
xchg
pop
mov
jae
leave
pop
movsb
in
test
mov
imul
inc
and
lds
gs
imul
and
data16
dec
push
lock
mov
xchg
mov
pop
jo
out
xchg
sub
lret
inc
sub
dec
push
jbe
push
mov
in
jecxz
cltd
bound
mov
adc
jno
js
outsb
icebp
lods
loopne
bound
into
js
ret
mov
adc
cld
cmp
data16
push
vpmaxub
adc
lcall
pop
movsb
pusha
ljmp
mov
sarl
jg
pop
xor
xor
aam
call
or
or
push
mov
xlat
cmp
stos
xchg
dec
es
adc
loop
jb
sub
movl
leave
mov
pop
mov
dec
in
and
push
or
lock
pop
cs
dec
jo
pop
dec
ja
dec
dec
loope
shlb
add
adc
xchg
mov
xchg
outsb
insl
lret
stos
mov
ret
enter
rol
add
sub
jle
push
or
xor
notl
pop
push
test
mov
inc
ret
pop
jg
dec
and
inc
and
cmpb
ds
arpl
mov
popa
inc
xchg
jae
inc
fisttpl
xchg
sbb
dec
or
insb
jecxz
bound
fnsave
and
jbe
aad
sarb
fwait
push
mov
mov
pop
mov
out
mov
push
jmp
xor
lds
pusha
mov
or
jne
jge
ret
jl
inc
popf
xchg
inc
push
in
jne
xor
cmpsl
addr16
insb
arpl
das
test
ret
icebp
and
cmp
out
data16
xchg
pop
xchg
cmp
jp
test
bound
icebp
sbb
xchg
mov
xor
mov
fistpl
out
test
hlt
and
adc
jle
add
pop
scas
jl
mov
shrl
add
jecxz
insl
and
out
fildl
mov
les
add
nop
enter
and
mov
and
cmp
xor
pop
jmp
dec
loop
jns
lods
xor
xor
nop
gs
pop
inc
mov
xchg
out
bound
repz
xor
out
inc
gs
fstl
ds
pop
cmpsb
add
scas
xchg
mov
mov
mov
sbb
lds
push
xchg
shl
aaa
mov
push
in
das
fisubs
nop
xor
fs
and
cmp
xchg
lock
outsl
push
dec
into
mov
adc
sbb
daa
xchg
mov
in
pop
xlat
cmp
push
dec
and
pusha
test
imulb
mov
mov
pop
lcall
jge
or
pop
in
mov
cmp
jg
lahf
jno
rorl
dec
je
addb
pop
out
push
test
mov
aaa
jl
imul
lcall
mov
mov
push
cmp
imul
xor
fcoms
aaa
pop
rcll
mov
pop
jo
mov
pop
loopne
or
cmp
in
cmp
jae
fcmovnbe
add
or
push
in
pop
outsl
loope
pop
xor
or
adc
xor
subl
jb
incb
push
mov
pop
cmp
adc
addr16
pop
xchg
mov
es
pop
scas
jmp
adc
inc
sbb
out
xchg
insb
add
and
push
js
inc
scas
sbb
fidivs
jne
cs
in
hlt
ret
pop
je
xor
pop
cs
sbb
inc
dec
pop
jbe
fstpl
add
cwtl
out
ret
mov
movsl
cld
sub
sub
movl
xchg
movsb
ja
jl
add
ret
aas
push
inc
jecxz
and
mov
aas
idiv
adc
mov
aaa
xor
sahf
loopne
cmp
sti
dec
icebp
jecxz
cmp
xor
push
cmp
jmp
in
jo
adc
mov
push
outsb
lahf
pop
out
popf
addr16
mov
sti
dec
leave
enter
fwait
inc
mov
jo
push
inc
sbb
loopne
jge
and
jnp
lea
xchg
mov
mov
js
adc
mov
loop
lcall
lahf
popa
sti
inc
inc
fdivs
fstpl
xchg
adc
dec
int3
pop
fnstsw
jne
mov
ficoms
aas
lcall
pusha
call
or
notl
icebp
push
xlat
dec
dec
mov
adcb
cmp
sbbb
mov
adcl
test
add
dec
mov
popa
jmp
adc
or
xor
movsl
movsl
data16
cmp
jae
test
stc
aaa
into
sbb
mov
std
loopne
loop
icebp
hlt
lods
inc
es
inc
ljmp
jno
push
popfw
mov
inc
mov
out
inc
push
in
and
insl
jge
nop
cltd
jb
or
dec
xor
out
mov
mov
fdivrl
loop
fistl
call
aam
jg
xchg
rcrl
lahf
pop
outsb
iret
jns
and
dec
inc
leave
dec
cs
aaa
lahf
stos
push
mov
dec
fwait
cmp
inc
sbb
pusha
mov
hlt
mov
adc
dec
in
fadd
fisttpll
cwtl
imul
sub
icebp
lcall
int3
ja
lahf
lods
jbe
push
sub
mov
scas
js
and
data16
cmp
xchg
pop
or
mov
mov
ret
pop
push
sub
fwait
cmpsl
xchg
mov
add
push
xchg
fisubrl
lret
popa
xor
mov
cmp
data16
stos
xchg
xchg
movsl
jecxz
jg
jle
andb
test
jns
scas
pop
lds
scas
addb
popa
gs
test
mov
or
mov
movsl
mov
loopne
ret
adc
mov
mov
dec
push
inc
ficoms
mov
mov
push
fldenv
shll
and
test
icebp
pmaxub
inc
dec
cmc
push
dec
add
xlat
clc
pop
mov
add
sbb
stos
sbb
in
and
push
push
adc
insb
mov
lea
fsub
mov
adc
in
aaa
mov
push
dec
mov
pop
and
andl
jl
cld
std
pop
inc
ljmp
stos
fidivs
ror
js
aaa
inc
loopne
and
xor
int3
popf
addr16
cwtl
mov
push
out
ljmp
sbb
mov
clc
out
push
stc
test
clc
push
sbb
cmpsb
int3
mov
sub
loope
outsb
push
cmp
and
dec
mov
dec
idivb
xor
movsb
pusha
jp
inc
lods
shl
stos
xor
mov
pop
xor
xor
add
mov
ja
push
bound
inc
icebp
dec
out
arpl
js
mov
in
fistl
fs
stos
cmpl
jecxz
adc
mov
cwtl
push
dec
pop
mov
shll
shrb
pop
sbb
punpckhdq
adc
push
in
jo
fnstenv
xchg
je
ret
add
mov
bound
cmp
pop
inc
fidivrs
dec
mov
jg
mov
in
mov
pop
xchg
jns
jbe
out
fsubs
mov
inc
fildl
jnp
cmp
mov
shll
pop
sub
leave
mov
fwait
mov
ficompl
add
mov
fcompl
das
mov
fidivs
push
or
das
or
add
dec
data16
int3
xchg
sub
xchg
test
sti
adc
cmp
mov
iret
test
shr
out
xchg
cmp
pop
xchg
add
out
pop
scas
test
jp
xchg
lea
lcall
pop
subb
hlt
cmc
pop
inc
clc
push
or
or
lods
sub
testb
pushf
dec
jb
mov
loopne
scas
or
bound
add
dec
jo
jl
mov
cwtl
and
mov
imulb
and
push
jmp
pushf
fbstp
std
or
test
cmp
cmc
inc
addr16
adc
mov
pop
push
push
dec
add
jne
and
dec
mov
jg
lret
int3
pop
push
orb
test
dec
add
or
cmp
push
insl
das
push
xlat
cmp
test
aas
mov
and
add
les
and
sbb
add
addr16
push
push
mov
cmc
mov
and
loop,pt
inc
rcrb
push
push
jle
popa
clc
pusha
xchg
repz
lds
out
jle
jne
mov
cld
lahf
mov
outsb
add
inc
sti
mov
sub
jae
add
enter
jb
std
push
or
test
add
es
test
mov
callw
sbb
ret
pop
shll
ret
sub
fs
movsb
cld
mov
jp
dec
popa
mov
adc
xchg
insb
mov
repz
data16
push
mov
xor
cmp
test
lods
xchg
xor
test
fidivl
stc
repz
mov
dec
sub
insl
push
mov
or
jo
scas
add
jecxz
es
and
xor
mov
jno
or
dec
addl
test
xor
aaa
mov
ja
jge
push
jp
cmp
sti
je
push
cmc
mov
stc
xchg
xor
fcompl
fidivs
dec
inc
add
fsubrl
mov
imul
push
adc
pop
dec
and
int
stos
jnp
das
mov
divb
mov
xchg
js
and
ret
outsb
addr16
pop
cmc
sbb
mov
or
mov
int3
inc
adc
ljmp
or
outsb
add
int
mov
push
es
dec
cmpsb
xchg
cmp
adc
cmp
and
mov
repnz
aas
sbb
jns
xchg
int3
arpl
in
fstp
push
je
sarb
adc
xor
jbe
stc
cs
stc
ss
add
jmp
iret
jle
inc
daa
mov
sti
in
pop
ljmp
mov
insb
sub
mov
loopne
cs
fsubs
stos
or
pop
sbb
decl
iret
ds
mov
shrl
mov
adc
outsb
mov
jg
mov
std
and
shrl
xor
movsl
imul
and
stc
sub
mov
cwtl
jae
inc
scas
jns
jp
addr16
loope
jnp
aas
adc
jae
aad
aaa
out
testl
jecxz
outsl
outsb
inc
int
and
notb
inc
ja
xchg
ja
mov
addl
es
push
jo
lahf
cs
ret
add
xor
lcall
fdivrs
push
test
and
call
cld
xchg
xlat
cmpb
pop
ds
sbb
and
sub
xor
jmp
repz
mov
in
dec
cmc
loope
and
xor
dec
in
aam
test
cmc
add
ja
and
fs
inc
push
insb
cmp
xor
or
aam
sub
pop
or
pop
lods
flds
aam
test
imul
insl
mov
sti
aad
or
or
mov
call
pop
cmp
mov
dec
cs
cmp
loopne
insb
std
fidivs
lods
cmp
insb
mov
xchg
sub
jle
or
push
xchg
insb
js
adc
jl
rcl
imul
mov
push
clc
fwait
push
test
jb
mov
sbbb
jne
or
into
dec
or
or
mov
push
and
pop
push
add
int
ret
stos
addb
mov
in
or
push
mov
jge,pt
cwtl
scas
pop
scas
jns
int
std
xor
or
imul
lods
cmpl
or
divb
flds
fdivs
test
cmc
and
and
lea
cmpsb
loope
repz
or
push
jp
xchg
dec
loop
sbb
dec
test
mov
sahf
jp
aam
imul
adc
and
or
xchg
mov
dec
es
and
dec
inc
ficomps
je
jbe
and
or
adc
pushf
add
es
and
push
sahf
mov
or
and
add
lods
inc
and
int3
and
fwait
aam
sti
jb
xchg
movsb
adc
or
pop
sbb
scas
mov
jecxz
pusha
arpl
cmp
inc
mov
lahf
sub
bound
data16
mov
fists
fld
dec
sub
loop
or
insl
mov
dec
adc
aaa
int3
cltd
arpl
pop
test
stos
dec
dec
sub
clc
and
dec
in
fmull
shl
inc
lahf
stos
jae
ss
sbb
sbb
lahf
jnp
xor
rolb
and
insb
mov
xchg
adc
frstor
mov
pop
inc
mov
or
mov
shl
sbb
aaa
incb
clc
adcl
inc
jecxz
or
inc
stc
dec
fdivl
xchg
push
and
inc
test
cmp
iret
sbbb
sub
or
xor
imul
push
cli
stos
sub
fildl
in
xlat
outsb
pop
push
and
ret
fcoml
xchg
loop
fsubl
test
into
xor
pop
push
or
adc
gs
pop
push
loope
mov
in
dec
push
cwtl
in
enter
pop
jb
mov
adc
rorb
pop
adc
dec
pop
arpl
jecxz
ret
mov
sbb
and
cmp
loop
lahf
pop
mov
xor
jmp
or
adc
jb
clc
jp
push
and
dec
cmp
jnp
lcall
and
hlt
ret
cmpsl
push
add
imul
in
out
xor
xchg
enter
mov
mov
jb
sahf
imulb
aam
lret
push
gs
test
sub
in
sbbl
fisttpll
stos
fs
xchg
int
mov
ds
clc
inc
dec
xchg
pop
cmp
les
lods
fimuls
scas
les
aas
mov
dec
addl
maskmovq
idivl
mov
addl
xor
mov
jecxz
fisttps
ja
leave
int
fs
mov
shll
jecxz
in
dec
dec
xor
aam
add
jg
mov
je
xor
outsb
add
cmp
and
hlt
push
add
cwtl
dec
dec
pop
repnz
jns
int
xchg
push
xchg
out
nop
daa
and
push
push
push
les
mov
add
xor
xchg
fidivrs
cld
push
sub
push
insb
aam
into
push
or
xor
jmp
mov
mov
pop
cmp
outsb
push
test
out
aaa
pop
lea
cmpsb
sub
ret
and
mov
stos
add
fcoml
and
ljmp
mov
mov
mov
mov
loopne
test
pop
stos
xor
lock
mov
into
mov
push
adc
and
xchg
mov
sbb
cmc
cmp
fisttps
adc
xor
push
or
or
push
mov
into
in
insb
adc
mov
push
sub
mov
mov
push
and
jl
and
pop
sbb
gs
testb
push
push
mov
enter
mov
jmp
jg
sub
jg
dec
es
dec
lahf
dec
dec
push
inc
aaa
and
jo
push
jbe
sar
inc
fstps
imul
dec
out
jno
hlt
scas
insl
push
dec
inc
jge
cmp
cmp
push
cwtl
dec
adc
imul
xchg
pop
xchg
in
pop
movsl
xchg
pop
mov
ljmp
das
cmp
inc
fiadds
into
jecxz
cmc
push
pushf
adc
int3
ljmp
in
mov
mov
push
push
ja
jp
dec
idivl
lret
mov
sbb
xchg
clc
js
dec
lods
lds
xor
and
aam
ss
inc
cmpsb
aas
loopne
xchg
sub
inc
add
push
mov
cmpsl
int
or
or
push
sti
xchg
jb
jne
shr
ficoms
fmul
daa
jmp
sbbb
pushf
pop
jbe
sbb
cmp
add
movsb
sbbl
test
in
cmpsb
cmp
ja
fimuls
cltd
insb
cli
lret
ret
add
pop
inc
js
mov
and
adc
popf
stc
mov
les
jl
imul
push
incb
mov
jo
movsbl
xchg
xlat
xchg
xchg
arpl
shl
or
xor
dec
fwait
js
in
fcoml
cmp
cmp
lods
leave
push
divps
push
pop
scas
mov
push
cli
pop
aad
out
les
imul
mov
stos
adc
push
ljmp
pop
mov
cld
scas
or
mov
push
test
lret
hlt
aam
fimull
loope
cmp
push
rolb
mov
pop
testb
cmpsb
in
fistpl
je
daa
outsb
std
dec
push
icebp
pop
mov
rclb
subl
andl
cs
cmpsl
mov
push
pop
int3
arpl
icebp
addr16
sarl
movsl
repnz
icebp
jnp
in
pusha
or
mov
lcall
jae
icebp
addr16
and
js
add
jnp
test
stc
adc
cwtl
pop
add
mov
xchg
jne
and
or
imul
in
or
jns
inc
and
movsb
dec
out
ret
mov
push
mov
outsl
add
push
ss
jmp
adc
sbbb
icebp
rol
and
and
pop
mov
fistpl
xchg
sbb
fisubrs
add
jno
cmp
ljmp
cmp
cmpsl
ds
inc
mov
outsl
int
loop
andl
in
imul
test
or
insl
push
pop
cmp
pushf
std
adc
out
cmp
adc
xor
push
adc
notb
repnz
dec
rcrl
mov
jnp
jmp
jg
push
inc
lds
inc
sbb
icebp
add
stos
xor
addr16
push
popf
shll
outsb
mov
leave
sub
call
mov
push
ret
fistpll
sbb
mov
ja
pop
test
xchg
movsb
cmp
adc
leave
leave
dec
add
popa
test
ret
cmp
das
cmp
mov
hlt
inc
jb
xor
nopl
out
ss
scas
sbb
adc
fidivrl
xor
inc
clc
mov
pop
sti
lea
add
call
sbb
and
xchg
jo
test
push
sub
out
mov
jl
fmulp
jle
idivb
sub
dec
mov
repnz
xchg
ds
adc
ss
mov
iret
andl
push
mov
mov
scas
stos
inc
lds
fsubrp
dec
xchg
bound
mov
adc
cld
cmpsl
stc
adc
sbb
jo
and
mov
jmp
dec
or
mov
ja
inc
jno
jg
insb
cli
mov
inc
pop
push
mov
jne
dec
mov
lahf
lock
and
sbb
pop
insl
pusha
mov
inc
fldcw
arpl
jno
clc
mov
add
sub
lahf
xor
inc
mov
mov
out
out
lods
inc
das
inc
cmp
roll
lcall
sbb
push
adc
pusha
cmpb
bound
scas
imul
mov
mov
iret
mov
andb
sub
mov
and
int3
cmc
mov
call
outsb
cmp
pop
jge
shrb
scas
inc
xchg
mov
fisttpll
imul
mov
int
int
je
stos
fwait
xor
adc
jae
sbb
push
out
out
cs
mov
jmp
fcmovne
pop
cs
test
and
sarb
or
jp
sub
adc
fwait
ja
sbb
pop
into
sub
lcall
sarb
xlat
push
cltd
and
push
push
imul
jle
idivl
push
call
push
xchg
lods
or
and
add
cmp
and
or
jmp
sbb
loope
int
sbb
dec
cmp
ljmp
shl
jl
rclb
je
fwait
out
cmp
adc
stos
std
add
scas
das
add
mov
pushf
sbb
es
imul
dec
adc
dec
pusha
pop
adc
sarb
sub
shlb
mov
mov
or
lea
cmp
push
sub
popf
and
roll
dec
sub
arpl
movsl
jno
fwait
cld
ss
bound
sub
or
out
cmc
dec
xchg
mov
adc
lret
arpl
lret
out
mov
cld
sub
mov
ret
adc
cmp
andl
pmullw
stos
mov
ret
jle
sub
mov
ds
je
sbbl
fisttpll
pusha
lds
aaa
iret
sbbb
mov
lahf
aam
lret
divb
dec
sbb
notl
ss
adc
cmp
mov
sbb
push
std
mov
pop
aaa
push
push
aam
std
and
and
xchg
and
imul
das
mov
leave
dec
pop
sti
mov
lcall
popa
ja
iret
in
add
sbb
inc
test
cltd
fwait
in
lret
mov
jg
daa
jle
shlb
jnp
cmp
fildll
fcmovnu
xor
mov
daa
xor
addr16
ds
test
adc
pop
mov
push
or
rolb
push
mov
aad
mov
pop
sub
nop
pop
push
xor
into
or
hlt
add
stc
mov
dec
popa
cmp
pop
xchg
ds
dec
xor
jae
ror
xchg
add
cli
push
mov
mov
out
scas
and
inc
jo
mull
dec
psubw
hlt
dec
int3
shll
stos
mov
xchg
js
mov
sbb
xor
ss
or
dec
and
out
add
sarb
es
mov
mov
js
pop
push
mov
movsb
insl
aas
dec
lahf
lds
cmpsb
cmp
mov
add
sbbb
xchg
dec
mov
sahf
incl
pushf
cwtl
jae
dec
in
jae
inc
mov
loopne
and
lret
jno
cmp
bound
xlat
fmul
inc
mov
pusha
testl
adc
push
xchg
inc
ja
and
cltd
fcom
inc
cmp
mov
sbb
filds
add
cmpsl
std
adc
es
scas
push
mov
repz
mov
lret
push
aas
mov
stos
push
xchg
popf
cmpl
shlb
dec
mov
xor
outsb
enter
mov
std
loope
dec
and
mov
xor
push
sub
fdivs
int3
out
out
and
lahf
movb
stc
aas
iret
fdivl
std
lcall
test
push
dec
cmp
jnp
inc
push
stos
xchg
jmp
xor
jns
cmpsl
cmp
ljmp
jb
das
lcall
out
loopne
and
add
les
out
push
mulb
ljmp
xchg
out
and
add
or
and
mov
mov
je
jecxz
mov
or
popf
and
inc
and
movd
enter
jmp
outsb
es
jno
std
stos
adc
sbb
cmp
cmp
pop
inc
les
xchg
stos
arpl
jo
mov
and
daa
pop
mov
nop
dec
out
sahf
adc
aad
jnp
out
out
jecxz
test
popa
add
jp
or
imul
shll
push
add
into
pop
cmpb
or
adc
push
cmp
cld
or
and
push
shlb
in
or
in
clc
mov
fisubl
and
dec
fildl
dec
jae
es
mov
push
push
jbe
fsubrs
aaa
pusha
jg
shl
lea
clc
stos
mov
or
dec
call
or
dec
add
pop
es
dec
loope
fildll
bound
xor
lahf
jge
iret
jb
xchg
ljmp
push
shrl
stos
mov
cmpsl
lret
and
fwait
xor
fwait
dec
pop
out
mov
sub
mov
sbb
sbb
sti
cmp
or
mov
dec
loope
movsb
xchg
or
inc
stos
adc
fisubrs
mov
mov
add
xor
adc
pusha
inc
and
das
add
adc
sti
sbb
pop
and
sbb
push
pop
mov
shr
push
or
sub
dec
int
repz
lds
cmp
cli
ds
bound
sbb
loope
sbb
add
cmpsb
xor
icebp
xchg
in
fdivl
mov
scas
and
adc
rcr
xor
in
stos
push
mov
pmaddwd
push
cmp
adc
loopne
rcl
in
or
add
test
and
sub
xlat
mov
mov
rcrb
push
pop
out
gs
mov
dec
xchg
sub
sbbb
jb
cmc
pop
inc
push
pop
jecxz
add
hlt
iret
pop
cmpsl
test
int3
mov
adc
lock
imul
ds
rcll
push
dec
call
mov
mov
dec
dec
int3
iret
sbb
les
dec
inc
dec
mov
dec
xor
push
in
cmp
and
push
test
mov
int
jmp
cmp
xlat
cwtl
adc
out
fistps
mov
xor
cwtl
jg
cmp
pushf
sub
lods
sub
cld
scas
inc
cs
push
mov
in
cmp
cmp
movsb
pushf
cld
xchg
into
lds
into
mov
fisttps
inc
std
xchg
jae
xchg
mov
xchg
mov
cmpsb
mov
lods
loope
ficoms
aam
mov
aam
cs
shrl
mov
repnz
jnp
cmpsl
movsl
out
imul
pop
loop
push
jne
dec
lock
inc
jg
lock
mov
inc
ja
ljmp
sarb
dec
enter
movsl
adc
cmp
mov
dec
sbb
ja
loopne
jns
jb
stc
fdivrs
dec
negl
das
mov
lcall
mov
and
out
cmp
jmp
fsubrl
jp
sub
push
mov
bound
xor
daa
xchg
add
xchg
fbstp
dec
push
xchg
mov
dec
sbb
sbb
ret
cmp
pushf
lock
insl
and
xchg
xor
xchg
or
outsb
insb
es
or
inc
xor
jae
call
or
jge
sub
lods
mov
add
xchg
lret
out
repz
or
scas
in
jge
inc
or
bound
jp
xorb
test
add
loop
mov
sarl
jo
outsl
hlt
pop
cmp
pop
nop
xor
bt
arpl
inc
cltd
iret
pusha
push
jo
jge
enter
rcl
inc
dec
loop
mov
inc
je
movsb
xchg
int
dec
pop
inc
dec
movsb
pushl
fwait
mov
inc
inc
aad
or
push
pop
push
xor
mov
mov
jle
out
scas
mov
push
test
push
cmpsb
iret
out
in
hlt
hlt
dec
loopne
push
out
andl
scas
ret
or
cli
ffree
fimuls
sbb
imul
mov
jle
repnz
jl
adc
cmp
cmp
rorl
dec
popa
pop
icebp
pop
repnz
test
leave
xor
es
add
nop
inc
xchg
sub
push
fidivrs
sbb
rcl
pop
gs
clc
pop
mov
xchg
lea
mov
add
sahf
adc
xchg
movsb
stos
je
or
sti
pop
push
in
or
xchg
in
aaa
js
imul
or
sub
in
jg
and
cld
fwait
sbb
and
jg
mov
pop
and
xor
test
add
test
int3
sub
sbb
pop
jmp
call
cmc
mov
ret
js
adc
push
xor
sbb
jp
aas
lods
pop
movsb
jno
inc
cmova
add
dec
jecxz
sbb
mov
mov
sbb
fldenv
test
lret
push
outsb
psubsb
rcrl
out
xchg
mov
fistl
adc
aam
out
rcr
cltd
cmovbe
inc
mov
add
jne
jae
outsb
sbb
pop
adc
cwtl
jns
inc
ljmp
stos
lcall
fcoml
sti
js
adc
mov
xchg
mov
mov
jl
lock
cmp
mov
shll
mov
jg
popa
mov
shrl
shl
repnz
pop
cli
add
mov
and
fstps
push
cld
pop
insb
rcrl
pop
cmp
push
sahf
pop
loop
outsl
ljmp
mov
add
or
mov
das
ficompl
lods
mov
sbb
inc
fcmovne
inc
aas
out
lret
ffreep
cmp
mov
leave
jo
iret
sub
sub
cltd
push
ret
loope
xchg
sbb
sub
fs
cld
or
mov
ds
fsub
testl
mov
jecxz
xchg
mov
xchg
ss
pop
cld
xor
sub
rcrl
insl
xchg
jecxz
sub
and
shl
clc
cmp
pop
cs
mov
lods
xchg
in
jno
sub
xchg
imul
sbb
pop
jno
mov
push
scas
xchg
in
pop
movsb
pop
push
push
pop
lods
cltd
aam
test
inc
les
xchg
das
mov
cmp
out
pushf
dec
dec
push
adc
sarb
pop
mov
jmp
and
wrmsr
dec
xor
jne
inc
mov
je
cmp
ret
cli
inc
test
pop
ss
or
push
shr
push
mov
xlat
repz
or
fidivrs
push
rcl
or
andl
pop
jb
cmpsl
pop
jl
pop
mov
mov
call
mov
cmc
loopne
daa
xor
sub
push
mov
clc
pop
loop
xchg
sbb
out
divb
fwait
adc
pop
cmc
cmp
xlat
add
sbb
daa
sub
loopne
in
cmpsb
fsubs
mov
or
popa
clc
popa
rorb
mov
subb
pop
mov
jae
push
xor
dec
jo
clc
adc
imul
cmp
call
dec
xor
inc
sahf
in
cmp
xchg
sbb
fcoms
fldcw
jnp
stos
dec
sti
idiv
and
data16
int3
mov
adc
xchg
dec
cli
je
mov
cmp
fdivl
dec
xchg
cmpsl
cmp
shlb
testl
repz
stos
dec
cltd
mov
and
sub
mov
push
dec
loop
mov
inc
loope
icebp
push
fdivrl
bnd
lcall
mov
je
push
in
sub
sbb
mov
mov
loop
aad
cmovle
pop
dec
scas
cltd
inc
ljmp
mov
and
fistps
test
outsb
out
inc
stos
cmpsb
cmp
inc
xchg
fidivs
mov
cltd
sbb
mov
stos
push
repz
out
lds
jae
sahf
iret
cmc
js
shlb
neg
enter
cwtl
stos
ret
hlt
data16
adc
test
fbstp
shr
fs
in
push
into
mov
cmp
je
adc
and
cltd
es
cmp
mov
sub
inc
cs
push
sbb
sub
jne
cs
jecxz
loop
aad
fiaddl
or
mov
or
stos
rclb
xchg
sub
in
aad
xor
ds
pop
arpl
movsl
and
bound
nop
jo
mov
jge
xchg
ret
xchg
shll
sbb
rol
sub
insl
add
adcb
lods
daa
mov
cli
xor
dec
fsub
iret
and
pop
mov
sbbl
xchg
sbb
shll
pushf
lret
inc
jo
xsha256
cmpsb
pop
mov
into
push
add
xchg
std
pop
stos
arpl
cmp
add
insb
mov
jno
das
test
dec
pop
and
aas
push
xchg
in
test
and
cwtl
or
outsl
inc
subb
dec
inc
mov
xor
mov
and
pop
movsb
pop
enter
pop
hlt
std
cmp
jg
sbb
jl
aad
cltd
sub
jg
xor
fldt
pop
enter
lock
stos
mov
push
cmp
pop
in
mov
mov
in
sbb
pop
inc
dec
repnz
jns
adc
shl
ljmp
call
aas
cwtl
xchg
and
or
in
enter
mov
stc
xor
inc
inc
inc
mov
jbe
sbbl
xchg
xor
jle
pop
pushf
leave
jne
jae
loopne
rcrl
insb
shlb
popa
cltd
repz
dec
cld
stos
lret
pop
xchg
sub
insl
clc
cmp
fs
pop
and
lds
dec
in
hlt
es
and
dec
or
xor
push
or
cmp
mov
cmp
dec
gs
test
mov
push
je
rol
mov
sub
je
add
lods
fisttpl
mov
ret
faddl
mov
or
push
xchg
mov
and
neg
leave
xor
cli
in
shll
adc
ss
push
inc
jp
pop
shll
mov
xor
jle
lock
push
test
cli
xchg
into
ret
imull
push
jle,pt
mov
test
xchg
fadds
and
dec
cmc
push
insb
bound
stos
andl
cmp
mov
push
mov
leave
mov
mov
pop
in
fwait
iret
pop
jns
rcrl
bound
out
mov
sar
xchg
repnz
repnz
add
clc
cmp
into
cmpsl
lds
lret
mov
int
rcrb
jecxz
jnp
mov
dec
leave
test
dec
jecxz
push
sub
mov
mov
jo
xor
or
movsb
es
fisubl
arpl
sub
cmp
shll
loope
xchg
cwtl
inc
test
push
fidivl
mov
mov
add
cmp
shl
cmc
fldenv
dec
mov
jb
adc
fbld
dec
mov
es
jne
lahf
inc
mov
sub
jge
mov
test
je
fcoms
cmc
out
stc
or
xchg
adc
sub
in
inc
notb
cmc
scas
data16
and
add
cmpsb
and
mov
mov
mov
xchg
jae
rolb
pusha
fdivl
jae
insb
idivb
sub
xchg
ds
push
cmp
push
loop
popf
or
idivl
mov
ret
rcrl
jp
pop
in
adc
dec
repz
movsl
loope
pop
inc
stos
into
scas
stos
ja
cmpsb
push
jne
inc
in
push
out
aad
jb
inc
popa
sub
iret
push
sub
addr16
jno
cmp
lcall
daa
in
xchg
lds
into
dec
lds
adc
lea
sbbl
test
sahf
lods
fcmove
sub
jb
subl
scas
data16
js
mov
xor
jns
repz
jb
test
cmp
es
xor
in
push
fisubl
lock
inc
sar
scas
fldt
insb
inc
ficomps
and
loop
jg
lcall
jl
into
int
movsl
lret
cld
push
fstl
shll
stos
sub
push
and
xchg
out
sbb
mov
sub
decb
out
cmpsl
mov
xor
fcoms
add
push
scas
imul
push
incl
mov
call
sub
jne
fsubrp
jecxz
shlb
sbb
mov
repz
xchg
loop
push
mov
in
mov
pop
inc
dec
xchg
adc
xor
push
mov
test
leave
fsubp
jnp
jmp
xchg
mov
xor
mov
enter
mov
arpl
popf
mov
jno
lods
inc
and
mov
imul
stos
pop
cs
dec
out
int3
pop
mov
movsl
je
cmc
gs
fcomps
arpl
js
loope
jmp
or
fisubs
arpl
in
jl
or
call
adc
xor
push
mov
inc
in
dec
subb
arpl
pushf
xchg
or
adc
rcrb
mov
sbb
sbb
pop
dec
loopne
test
addr16
jne
sub
or
xor
test
orl
jns
daa
mov
scas
jbe
mov
ret
fstl
not
popf
ret
jmp
imul
or
cs
outsl
enter
loop
negb
mov
aad
jae
adc
test
ret
std
add
addb
xor
pop
and
add
fmull
fdivp
std
out
dec
test
insb
addr16
enter
stc
popf
sub
cmpb
push
icebp
inc
cmp
pop
sbb
dec
mov
scas
lcall
and
cmp
data16
enter
sbb
in
pop
pop
ficompl
mov
mov
int
stos
mov
pop
lds
pop
repz
dec
sub
loopne
daa
mov
fcomip
dec
fldenv
xchg
inc
xlat
dec
pusha
jp
push
sub
aas
leave
dec
add
pusha
dec
fists
cmp
je
mov
roll
dec
iret
inc
and
mov
das
dec
aam
sbb
dec
sbb
mov
ret
arpl
loopne
push
inc
mov
and
inc
adc
sbb
aad
orl
sub
fstps
sbb
mov
cwtl
cmpsl
and
popa
or
nop
jecxz
shrb
ret
add
cmpsl
test
aam
mov
sbb
mov
adc
icebp
pop
and
lret
lret
rorl
push
fisttpl
xor
fwait
sub
bound
or
and
lods
sub
jbe
addl
lret
loop
xor
cmpsb
int
jecxz
mov
cmpl
cmp
adc
xor
xor
ret
push
jbe
aaa
mov
out
add
xor
aad
push
pop
jmp
inc
mov
rol
imul
jp
call
jg
stc
push
jmp
xorb
pushf
out
dec
cmp
jl
into
xor
sbb
inc
jmp
imul
adc
stc
aaa
clc
sub
mov
jg
enter
shll
lret
lahf
testl
aaa
ds
shrb
push
test
sahf
and
jmp
dec
or
outsb
outsb
inc
daa
xchg
repnz
add
adc
outsb
add
pop
adc
sub
notb
push
in
loopne
shlb
lret
std
pop
sub
pop
insl
testl
rclb
adc
mov
lret
and
add
jg
sub
add
inc
in
mov
imul
add
lret
and
and
lods
test
insb
subl
add
push
cmp
add
mov
push
mov
fnstenv
inc
mov
sub
cmc
loope
in
and
lcall
test
lds
inc
rorb
movsl
jnp
push
add
mov
push
push
sub
dec
xchg
cs
pop
push
out
lret
aaa
dec
xchg
lods
rcr
or
xchg
jecxz
cmc
jb
out
bound
inc
dec
pop
loope
movsb
int
sbb
xchg
sub
mov
mov
inc
ret
repz
clc
gs
inc
fucomip
scas
out
mov
cld
jbe
sbb
adc
ja
xchg
mov
cwtl
push
out
cmc
xchg
mov
push
push
ja
ret
mov
or
adc
clc
and
ds
jbe
inc
xchg
sub
scas
les
scas
inc
lea
xchg
sbb
dec
loop
imul
shrb
add
fdivrs
pop
pop
rorb
mov
stc
popf
arpl
adc
imul
adc
cmpsb
into
pop
push
mov
xchg
lods
lds
push
outsb
pop
insb
cwtl
je
push
lock
mov
jle
test
jnp
sar
outsl
inc
or
cmp
xlat
pusha
cmp
pop
into
push
push
jmp
out
out
icebp
add
add
shl
das
adc
xor
mov
xchg
push
idivb
cmp
fnsave
sarl
cmp
popf
popa
mov
in
adc
cld
popa
or
mov
xchg
sub
pop
leavew
incb
jne
gs
cmp
out
not
sbbl
push
sub
movsb
add
loop
lods
popa
lret
dec
xchg
ljmp
fnstenv
cltd
xor
push
repz
les
lret
data16
xor
add
dec
mov
fstpl
ds
call
or
fdivrs
push
pop
icebp
nop
jnp
jae
bnd
lods
cmpsb
jg
gs
mov
out
aaa
ds
cmpsl
add
lods
jns
lds
dec
aad
mul
inc
fstl
push
inc
bound
out
jge
xchg
je
mov
imul
addr16
mov
jmp
cmc
push
cmp
leave
loope
fwait
pop
test
sub
shll
add
fimull
ljmp
nop
popf
std
daa
inc
xor
add
sbb
or
daa
and
int3
dec
addl
adc
inc
into
add
xchg
inc
xlat
popa
je
cmp
scas
xor
pop
sbb
pop
dec
inc
cmp
imul
xor
out
dec
movb
incb
in
jae
cmp
lods
and
popf
cmp
inc
push
das
rep
lods
mov
adc
push
out
roll
rorl
xor
adc
mov
pop
pop
jge
roll
out
fisubs
dec
pop
push
push
pop
js
xchg
cs
icebp
push
xor
adc
test
aaa
stc
arpl
fnstsw
mov
pop
mov
jl
sbbb
call
scas
cli
xor
lds
scas
push
push
xchg
iret
jno
or
mov
loop
scas
push
sub
pop
xor
xchg
jp
pop
pop
inc
mov
mov
push
fcoml
jmp
nop
std
sub
mov
or
stos
cmp
icebp
sbb
adc
mov
dec
adc
fmull
cmpsb
cmp
out
lds
mov
icebp
clc
loopne
lahf
ss
pop
enter
inc
push
cmpsl
mov
xchg
in
dec
popf
call
mov
xchg
xchg
mov
and
jb
fnstcw
pop
insb
lods
clc
shll
xor
and
jbe
xchg
jne
push
add
stc
push
btr
in
and
js
mov
loop
pop
mov
jge
ds
jno
jae
mov
daa
dec
mulb
adc
xlat
sti
pop
xlat
and
in
mov
test
mov
adc
stc
add
inc
jo
and
mov
fstp
jbe
jnp
out
clc
test
in
int3
sbb
sub
adc
dec
and
aaa
adc
xchg
stc
inc
std
sbb
jno
sbb
mov
push
cmpsb
lds
mov
js
hlt
xchg
pop
mov
in
cs
iret
mov
lds
mov
fidivs
adc
in
pushf
push
and
xchg
insl
cmp
pushf
jnp
andb
out
mov
dec
repnz
pusha
inc
loop
ds
jmp
jmp
loope
xor
popa
inc
push
xlat
cmp
mov
jae
jno
sbb
js
nop
push
fwait
jo
dec
xor
subb
into
enter
cmpsb
xlat
jns
ss
xor
jl
movl
dec
dec
fwait
icebp
add
push
adc
orl
insl
jge
jle
test
jae
mov
repz
mov
lds
les
pop
xchg
stos
ret
pop
fstpt
or
cmpsb
mov
fcmovbe
mov
pop
cld
add
and
inc
cmp
sub
cmp
mov
in
daa
push
pop
shr
mov
daa
lock
lds
icebp
mov
lret
in
shrb
cmpsb
pushf
in
ljmp
jge
sub
lea
pop
jge
mov
xchg
xchg
popf
mov
outsl
bound
jo
out
sbb
into
movsb
pop
xchg
mov
lds
add
test
adc
xchg
cmp
mov
or
pop
shrl
fcos
sub
pop
and
pop
addr16
or
mov
jno
mov
test
filds
mov
mov
push
das
addr16
in
hlt
ja
mov
lahf
call
dec
jbe
test
test
jmp
push
mov
ret
shr
fwait
cmpl
mov
bound
test
inc
lock
fadd
mov
and
dec
loop
sahf
and
mov
mov
cwtl
gs
inc
push
or
fldenv
fisubrl
bound
out
pop
xor
aaa
mov
test
ja
pop
xchg
xchg
stos
sbb
mov
out
add
popa
ds
jg
fdiv
ds
movsb
inc
push
daa
add
mov
arpl
push
movsb
pop
mov
adc
push
ret
fbld
arpl
xlat
popa
dec
sbb
dec
xchg
adc
test
repnz
in
jb
arpl
int
xchg
fs
inc
pop
divl
sbb
adc
into
adc
aaa
dec
aaa
xchg
test
inc
jae
dec
arpl
jnp
ss
jne
xchg
lahf
inc
mov
jno
pusha
pop
loopne
mov
and
add
jnp
andb
rcrb
sub
xor
ljmp
ret
hlt
cmc
rcrl
mov
xor
inc
pop
pop
cld
cmp
dec
mov
test
push
stos
xchg
stos
cli
xchg
fsubs
popa
or
inc
xchg
lods
jl
xchg
sub
sahf
add
jo
mov
and
pushf
or
or
fidivl
lods
pop
cmc
jmp
add
pop
fbstp
lcall
lods
cmp
pusha
xor
imul
test
add
shrl
divb
nop
inc
xchg
sub
mov
test
push
sub
or
and
jmp
and
stos
aas
das
dec
ljmp
push
loopne
pop
add
cs
mov
mov
sub
mov
xor
mov
push
or
sbb
into
fs
sbbl
sub
repnz
mov
int
jecxz
lods
sbb
xor
fwait
inc
int3
lods
fnstsw
ret
inc
js
icebp
mov
push
sub
jg
or
int3
push
andl
int
or
call
xorb
addr16
imul
xor
addr16
mov
add
and
or
stos
inc
push
orl
and
test
arpl
orb
xchg
pop
and
imul
es
adc
xchg
sub
xchg
cmp
imul
cmpl
in
test
frstor
mov
jo
sti
in
xchg
xor
cmp
xchg
cmp
mov
clc
xchg
mov
mov
xor
sbb
stc
rcrl
inc
cmp
sbb
lret
pop
loop
pusha
ja
jnp
xchg
mov
jne
mov
lahf
lret
loop
sbb
mov
jl
enter
jb
outsb
js
addr16
repz
and
push
fstpl
in
cmpsl
sahf
es
movsb
dec
sbb
cli
leave
nop
insb
je
mov
inc
dec
movsb
js
mov
hlt
arpl
popa
loope
mov
and
xchg
dec
shlb
lea
mov
push
frstor
out
insl
subl
je
sub
adc
scas
inc
dec
jle
leave
cmp
push
jbe
push
movsl
stos
push
shrl
pushl
jl
adc
push
fs
xchg
outsb
gs
pop
pushf
pop
icebp
lret
push
addb
in
js
adc
add
les
xor
ja
add
pushl
and
inc
nop
or
push
in
sbb
stc
push
das
hlt
xchg
in
mov
imul
xchg
push
mov
lods
leave
fldenv
cmpsl
and
xlat
into
mov
xor
add
lret
inc
push
dec
test
lods
shlb
lret
mov
call
mov
outsl
mov
jge
ret
xchg
sub
add
push
inc
xchg
xor
jno
mov
cmpsl
stos
sub
sar
out
enter
shl
inc
push
std
and
adc
pop
outsb
cs
lahf
stc
pop
mov
out
adc
and
push
cmp
js
insl
and
in
shlb
cwtl
test
pop
inc
lret
xorb
aad
mov
jbe
push
sbbb
cmp
cmp
aaa
mov
data16
ljmp
sti
add
inc
nop
mov
call
ja
dec
mov
dec
lock
sub
jecxz
mov
int3
arpl
push
ljmp
insb
or
insl
mov
pop
lock
loopne
or
xchg
xor
nop
gs
adc
test
lea
sar
nop
add
adc
or
adc
inc
mov
jb
or
adc
ds
testb
pop
stc
nop
rcll
push
loopne
testb
cli
mov
das
js
add
pop
add
sbb
imul
ret
sbb
push
insl
or
push
xor
sub
and
xchg
mov
pushf
stc
xorl
cmp
inc
movsl
mov
pop
call
fiaddl
dec
cmp
aam
jp
imul
inc
mov
xchg
add
jmp
shrl
add
inc
cmpsl
lret
cmp
sti
xchg
and
inc
sbb
xchg
outsl
dec
std
pop
aas
xor
aaa
std
push
lock
lea
in
inc
sahf
addb
cmp
jmp
test
loopne
adc
mov
xor
pop
xchg
test
jae
test
jl,pn
setno
aam
pushf
addr16
mov
mov
inc
xchg
inc
sbb
jbe
pop
sbb
cmp
aas
cltd
test
mov
orb
or
adc
fnstenv
inc
test
out
jle
out
jp
push
mov
roll
cmpsl
pusha
dec
es
dec
pop
pushf
nop
pop
inc
dec
cmpl
test
hlt
dec
mov
pop
push
jmp
adcb
inc
ror
mov
cmp
aas
js
cmpsb
clc
or
test
fwait
negb
jge
mov
fadds
mov
lcall
mov
gs
inc
dec
inc
leave
loopne
ret
pushf
inc
aam
inc
cmp
pop
test
jno
scas
ljmp
std
mov
inc
aam
scas
out
cmc
sbb
mov
or
rorb
loop
mov
into
lock
mov
xchg
or
test
sbb
cmp
bound
pop
inc
add
cmp
xchg
push
push
sbb
push
and
xlat
xchg
lea
sub
jg
into
xchg
xor
lds
pop
lds
sbb
ret
mov
out
mov
xor
sbb
ficoml
outsb
leave
sti
fnstcw
fsubrp
stc
add
sub
ss
xchg
scas
rcr
aad
aas
loope
rcrb
out
ds
sbb
push
fwait
loop
test
sahf
push
mov
inc
add
dec
dec
gs
ret
xchg
js
loop
pop
inc
divb
add
addr16
dec
pop
jns
scas
int3
cltd
cmpsb
cmp
jo
xor
ret
xchg
jbe
xchg
mov
or
enter
pop
xor
xchg
mov
pop
out
xchg
sub
pmulhuw
aas
mov
lret
mov
jae
fdiv
sub
xchg
sbb
or
hlt
std
fiadds
xchg
xor
fstp
leave
push
out
stc
pop
sub
in
dec
or
js
aas
mov
sbb
xor
test
pop
movsl
pushl
or
pop
jne
lock
clc
and
in
or
lea
out
dec
loop
xor
mov
stos
outsb
insl
inc
dec
pop
inc
inc
mov
inc
push
dec
pop
daa
sarl
sub
in
xor
and
mov
test
fwait
inc
add
mov
sbb
mov
ljmp
push
int3
andl
xlat
in
faddl
call
jo
rclb
push
sbb
arpl
imul
shrl
lock
pop
mov
push
fsubl
jp
inc
adc
inc
mov
iret
jecxz
mov
xor
jb
inc
mov
test
fisttps
jecxz
xchg
xor
mov
xchg
and
jb
xor
inc
sbb
xchg
and
lods
mov
lcall
pop
jae
rcrb
rcll
unpckhps
dec
shlb
adc
mull
ljmp
lock
fldenv
ds
mov
mov
shlb
and
pushf
inc
jg
mov
mov
test
bound
shrb
adc
adc
outsl
sbb
fstpt
loope
and
or
or
mov
test
mov
loopne
or
loop
add
cmp
or
hlt
cld
dec
pop
cs
roll
mov
xchg
imul
lods
dec
cmpsb
idiv
iret
jb
mov
push
or
out
jp
jl
hlt
mov
js
push
push
imul
ret
mov
pop
adc
sbb
jl
add
mov
enter
push
push
inc
sti
mov
ljmp
ss
adc
dec
loopne
mov
push
ja
mov
jne
cmp
xchg
imul
add
lods
xchg
adc
pop
jno
sbb
pusha
lea
sbb
int3
ss
pop
pushf
or
dec
sbb
cli
ret
mov
data16
insl
adc
add
push
in
add
in
and
jbe
push
ss
jecxz
push
inc
into
mov
lcall
mov
lds
add
fcmovnb
cmp
cmp
rorb
cmovl
sbb
cmp
shll
mov
xchg
popf
dec
pop
cld
test
add
flds
and
mov
mov
pop
inc
dec
lds
jo
pop
movsb
add
sahf
outsb
repz
and
fwait
and
jo
mov
testl
nop
xchg
sub
mov
mov
loop
or
lcall
xor
jg
ret
imul
jae
mov
xchg
out
sub
rcrl
mulps
shlb
les
stc
or
sbb
xchg
add
lods
and
push
inc
fistpl
lods
outsl
mov
dec
fld
jo
loopne
and
stc
subb
stos
cmp
dec
bnd
rcrb
jnp
add
fistpll
imul
mov
in
ss
push
cmp
imul
mov
jg
inc
lods
cmp
adc
and
aas
xor
push
mov
fidivs
cmp
and
arpl
or
cltd
push
test
mov
sbb
test
aaa
mov
sub
sbb
shlb
outsl
jae
sbb
add
ja
inc
adc
ja
test
cmp
ror
movsb
xor
stos
loopne
push
stos
sahf
mov
je
mov
push
adc
outsb
cwtl
sub
mov
or
sub
xor
jmp
lret
jae
push
insl
sbb
mov
mov
fsubrl
out
jg
mov
or
xlat
out
lds
lret
aaa
xchg
ds
fwait
out
popf
mov
nop
adc
xchg
addr16
sub
out
pop
cmc
and
mov
fildl
dec
mov
cmpsl
mov
js
add
cmp
ds
lret
ss
inc
mov
jge
lods
lods
cmp
pushf
loope
xor
sbb
dec
decb
dec
movsl
bound
jo
mov
es
nop
dec
inc
fsubrl
sarb
mov
add
mov
lea
ss
xor
adc
decb
xchg
jbe
mov
and
cli
dec
aas
es
jge
sub
pop
mov
mov
cmp
xor
add
stc
mov
sbb
dec
mov
push
push
lods
adc
std
ss
pusha
and
cld
popa
nop
dec
adc
mov
lahf
jae
mov
rcrb
outsl
repz
push
push
cmp
test
js
subb
cmp
push
out
xchg
call
sbb
sub
insl
mov
stos
jp
leave
xor
jne
fimull
scas
out
xorb
out
cmp
dec
dec
inc
int
cs
mov
dec
pop
add
mov
in
sbb
cmpl
or
and
dec
adc
mov
mov
dec
insl
sbb
test
push
sub
sub
and
xor
insl
adc
add
dec
lcall
xor
mov
sbb
mov
or
and
ret
lahf
aam
aas
add
sub
movsb
lods
loopne
ror
lds
mov
ss
loope
ret
iret
mov
shlb
das
mov
aam
cmp
out
fldcw
cmp
sarb
imull
shrl
lds
movsb
mov
xor
inc
scas
inc
movsl
push
ret
xor
fsts
lods
or
pop
mov
aad
dec
ss
les
and
pop
jne
dec
cmpsl
jns
adc
aam
jmp
cwtl
xor
or
fnstcw
dec
filds
mov
pushw
enter
mov
or
das
rorl
and
cmc
sbb
mov
mov
sahf
dec
in
test
loope
fnstsw
test
fistpll
loope
mov
shlb
push
sbb
sbb
into
adc
add
dec
in
testl
mov
cmc
mov
add
stos
cld
test
and
push
jmp
fwait
es
jns
xchg
loopne
repnz
push
jbe
fistpll
cltd
sub
add
jge
sbb
push
mov
ret
xor
fildll
push
iret
fmull
xchg
and
cli
and
cltd
mov
adc
clc
xor
add
jae
xchg
cmpsb
in
and
inc
fisubrs
ficompl
xor
mov
jmp
dec
es
rcr
push
je
add
mov
lcall
repnz
and
insb
shlb
sti
scas
out
loop
fiadds
push
flds
pop
insl
mov
pusha
jl
insl
scas
out
aam
jne
outsl
cmc
notl
out
test
mov
adc
xchg
mov
and
mov
or
out
hlt
adc
dec
shll
sub
fistps
mov
cld
lcall
in
stos
xchg
mov
roll
mov
lcall
or
mov
lods
loope
orb
popf
ja
daa
jbe
mov
mov
xchg
cmpsl
fs
adc
js
jp
cwtl
aad
mov
add
cmp
xchg
and
mov
jbe
mov
jecxz
imul
lods
repnz
and
adc
dec
and
cmp
mov
mov
sahf
sahf
shl
add
push
ret
sub
push
dec
hlt
sub
cmpsb
leave
fldenv
jl
insl
xchg
mov
mov
or
or
cmpsb
mov
lods
testb
movsb
lods
jno
cli
cmpl
sub
jne
mov
sub
cli
cmpsl
add
push
jbe
imul
std
out
cld
es
orl
xchg
test
push
sbb
dec
xchg
call
adc
or
loopne
cltd
jo
mov
xor
jl
and
bound
ds
mov
lock
mov
sbb
hlt
iret
inc
cmc
scas
mov
jno,pt
sbb
pop
sbb
push
jbe
cmpsl
cmp
in
test
insl
ficoml
cwtl
adc
lret
and
sbb
ds
test
inc
popa
sbb
and
iret
sbbl
sbb
xchg
mov
jmp
or
cld
xchg
adc
cmp
lret
div
inc
mov
push
iret
rcll
jo
push
cmc
and
xor
xchg
sub
mov
mov
gs
jno
xchg
cs
lahf
pusha
sbb
addr16
xchg
push
sub
xor
adc
cmp
loope
xchg
cmp
test
mov
xor
hlt
cmc
cmp
cmc
enter
xchg
cmp
sbb
out
jo
mov
inc
cmp
push
and
cmp
adc
shl
jns
dec
in
mov
lea
pusha
icebp
cmp
sub
mov
cmp
inc
pop
push
mov
jg
pop
jg
mov
lret
xchg
jl
mov
enter
sub
mov
or
stc
xchg
cmp
push
outsl
xchg
mov
mov
xor
repnz
cmp
gs
in
pop
ret
xchg
add
xchg
hlt
cmp
mov
repnz
push
jmp
mov
dec
push
jne
push
repz
or
cmpsl
add
imul
mov
rclb
add
add
mov
pop
adc
insl
ds
in
stos
inc
push
sbb
inc
push
hlt
data16
inc
inc
scas
and
enter
or
dec
adc
inc
jns
loop
pop
cmpsl
cltd
mov
mov
cli
test
push
cmp
nop
stos
xor
push
adcb
xor
hlt
fdivp
or
ret
jns
push
test
popa
fadd
sbb
sbb
mov
lcall
or
pop
clc
adc
pop
lods
les
push
shll
loope
mov
adc
mov
jg
stc
inc
fs
std
sub
cmpsb
or
jbe
int
cmc
arpl
mov
test
adc
mov
fcomip
lods
lock
mov
cli
or
xchg
test
popf
fsubrp
xchg
call
out
push
jecxz
repz
xor
mov
bound
fcmovnbe
or
jnp
daa
data16
xlat
daa
mov
add
inc
jae
sub
rcrl
cli
test
xchg
push
dec
push
in
stos
and
js
jno
inc
arpl
sbb
lods
es
loope
loop
fstp
js
xor
add
mov
sbb
rclb
sarb
mov
lret
mov
iret
xor
jmp
outsb
bound
shlb
cs
imul
pop
push
push
out
test
out
fucomp
pop
out
dec
mov
cs
sbb
push
cld
out
mov
lret
push
mov
ret
or
inc
in
inc
call
xor
sbb
push
add
clc
outsl
fadd
fistpll
push
mov
adc
jnp
jno
jmp
call
jecxz
mov
adc
mov
cli
mov
xchg
xor
cltd
cmp
inc
cwtl
je
lods
out
sar
jmp
xor
arpl
aaa
dec
pop
imul
cmpsb
sbb
inc
fwait
gs
xor
outsb
test
adc
push
popf
jge
loope
adc
rcrb
fnsave
push
cmovo
cmpsw
push
sbb
negb
aad
jl
shlb
xchg
mov
cmpsb
sub
test
icebp
push
dec
test
std
jb
xchg
mov
mov
xor
sub
xchg
nop
and
xchg
jl
jmp
inc
lret
repnz
ja
ss
notb
scas
jp
add
out
push
xor
pop
test
movsb
fisttps
outsl
jae
movl
arpl
into
cltd
mov
sti
mov
xlat
repz
mov
mov
xchg
jnp
mov
rcrb
fcompl
add
aas
shll
pop
pop
mov
ja
cmp
mov
fidivl
add
dec
mov
aaa
push
hlt
add
out
sub
dec
jne
adc
dec
pop
fimuls
pop
inc
xchg
sub
shrb
inc
jmp
dec
adc
sub
test
inc
leave
fldcw
lods
adc
or
xchg
push
stos
sbb
mov
xor
stos
mov
xchg
gs
icebp
insb
pop
dec
out
dec
mov
insl
loopne
lahf
inc
adc
das
mov
js
repnz
pop
fldl
xchg
in
stc
jnp
movsb
nop
out
jg
repz
and
push
popf
push
inc
jg
incl
jle
add
dec
dec
add
movsb
repnz
negl
lea
hlt
sbb
adc
pop
ljmp
push
in
xor
mov
enter
dec
or
inc
push
std
std
mov
inc
imulb
and
push
mov
xlat
cmpsl
in
mov
aas
pusha
lds
add
sub
test
cmp
or
and
adc
lds
sbb
out
pusha
xor
cli
in
xchg
dec
mov
add
push
lcall
mov
out
repnz
push
xor
jge
sbb
shlb
push
stos
shlb
shrl
inc
cmpsl
jb
loope
push
mov
mov
scas
inc
xor
or
leave
stos
enter
out
and
cmpsb
test
ret
sbb
push
into
push
lods
leave
stc
insb
idiv
daa
xor
cmp
jecxz
xchg
test
xchg
mov
cld
and
sub
mov
push
aaa
add
jle
fnstsw
push
arpl
mov
mov
in
mov
shl
push
js
add
mov
out
dec
stos
vorps
adc
mov
add
mov
sbb
into
loopne
jecxz
sub
pop
jno
insb
test
loopne
es
test
mov
sbb
lret
cmp
cmovle
mov
pop
pop
inc
out
sbb
test
pushaw
mov
sbb
iret
fldt
fwait
cmp
fwait
and
je
and
das
push
iret
data16
mov
jne
adc
ds
mov
and
cmp
cmp
ret
fists
cwtl
into
arpl
sub
ljmp
pop
xchg
adc
repnz
shl
fnstsw
outsl
xchg
fstpl
add
popf
call
lds
fwait
pop
cmp
mov
js
inc
je
or
cmp
fcomps
cs
and
in
out
sbb
shr
repnz
push
xchg
movsb
ds
dec
or
rol
mov
cmp
popa
pop
mov
mov
push
and
xchg
cmpb
sbb
ja
mov
data16
push
rclb
int
sti
cmp
rcrb
cld
enter
xor
add
imul
push
dec
decl
ljmp
nop
mov
mov
sbb
imul
fstpt
mov
lea
xchg
dec
out
pop
inc
adc
push
scas
and
das
ret
mov
ljmp
push
arpl
movsb
cwtl
rcrb
jbe
cltd
add
stos
mov
cmp
iret
inc
mov
fisubs
addr16
pop
test
dec
pop
out
jp
imul
std
xchg
cs
jl
mov
push
test
mov
lret
mov
xchg
push
pop
test
adc
jne
aaa
sbb
mov
addr16
pop
or
push
cltd
jmp
or
push
adc
adc
scas
js
sbb
cltd
je
xor
sti
push
xchg
cld
mov
cmp
mov
pushf
sub
fdivl
jmp
sub
iret
pop
outsb
xchg
jp
call
cmc
mov
out
add
int3
arpl
xor
fs
jo
rolb
add
inc
xor
or
enter
ds
push
xchg
and
xchg
sub
nop
iret
push
mov
jno
inc
sbb
loop
in
rorb
bound
push
std
jo
xchg
cmc
out
cmpsl
out
jo
faddp
aaa
jne
sbb
popa
popa
sbb
dec
into
mov
jge,pn
mov
pop
fstpt
add
cmc
das
mov
bound
in
or
add
in
sbb
push
repz
xchg
or
jge
mov
loopne
lahf
and
shlb
bound
icebp
pop
and
jg
xor
xor
pop
jb
in
lods
popl
fidivl
inc
xchg
out
inc
pop
out
xor
dec
fnstenv
lahf
xlat
push
dec
incb
loopne
out
xchg
fidivl
adc
out
jmp
js
pop
dec
stos
std
mov
push
pop
stos
lcall
imul
mov
enter
outsl
xchg
add
sub
jg
push
out
outsb
arpl
push
sub
mov
lret
sahf
jecxz
and
ss
push
pop
fisttps
cmp
lahf
int
jmp
ucomiss
mov
ror
int
test
inc
in
adc
mov
and
pop
lock
mov
cmp
sbb
bound
ds
mov
rorb
pop
testb
jno
pop
jb
mov
call
into
jns
lret
int3
jbe
aas
xchg
add
push
imul
push
jle
mov
mov
scas
sub
stc
jp
sub
in
pushf
pop
popf
clc
jae
xchg
mov
lea
enter
in
lods
adc
jnp
sbb
out
je
cmp
das
outsl
and
mov
xor
roll
repnz
mov
mov
mov
test
jle
roll
lods
sbb
movsl
js
lods
push
out
xor
incl
pushf
mov
in
imul
dec
dec
sub
das
mov
pop
cs
rcrb
repnz
js
out
pop
sbb
arpl
xchg
stos
jb
arpl
popa
cwtl
sahf
push
in
mov
mov
dec
ret
sbb
adc
mov
loope
cmp
stos
lea
lahf
mov
mull
mov
push
xlat
mov
movsl
mov
push
fstpl
sub
and
fs
outsb
loope
jl
jno
cmpb
mov
jo
aaa
mov
arpl
push
sbb
mov
mov
xor
jecxz
inc
and
scas
inc
and
sahf
int
add
pushf
out
in
lock
mov
aas
mov
int
mov
in
inc
lret
pop
mov
jae
pop
jb
push
pop
cmp
and
and
push
fmuls
aaa
mov
xchg
sarb
mov
mov
xor
inc
jge
mov
das
xlat
push
inc
push
pop
xor
jb
sub
push
nop
fisttpl
ljmp
adc
sub
call
sbb
stos
es
cwtl
sbb
push
jno
push
dec
ljmp
movsl
enter
xchg
mov
lret
push
push
pushf
sub
lret
repnz
fisubl
clc
mov
clc
dec
lret
dec
dec
data16
and
mov
ret
test
dec
leave
dec
dec
push
mov
les
xor
test
pop
idivb
sub
pop
mov
lds
es
shlb
cmp
mov
push
and
in
aam
inc
push
nop
dec
lcall
xor
pop
cmp
mov
rcrl
mov
in
test
cmp
mov
ss
xor
lret
mov
jnp
adc
cltd
std
pushl
in
test
cmp
pop
push
lock
mov
sub
sub
pop
lock
pop
jbe
scas
inc
mov
cmp
xchg
cmp
or
icebp
inc
daa
outsl
lock
jg
mov
xor
pop
cmp
cwtl
stos
inc
or
lahf
ss
leave
int
in
push
out
add
lret
adc
mov
ss
movsl
scas
jae
loope
test
imul
adc
sahf
mov
shr
int3
lret
ds
mov
shrb
mov
in
push
aas
call
add
adc
push
movsl
repz
mov
int3
mov
loope
popa
clc
xchg
out
cmp
adc
jbe
xor
pop
xchg
scas
inc
int
sub
hlt
cltd
xor
xor
arpl
dec
jl
test
mov
ja
sti
inc
xchg
sub
xchg
sub
shrb
xor
sbb
pop
mov
les
mov
xor
push
pushf
push
lret
bound
mov
fsubrs
inc
call
lahf
xchg
sbb
and
repnz
and
mov
inc
test
xchg
jnp
ret
cld
nop
daa
xor
js
push
scas
inc
test
call
lock
popl
ss
or
rclb
out
inc
inc
lret
bound
pushf
cltd
xchg
jmp
cli
jecxz
mov
sub
dec
test
mov
fadd
test
jo
sbb
pop
dec
mov
repnz
sbbl
aas
addr16
jo
cmp
add
scas
bound
out
xchg
xorl
mov
jne
call
sbb
xor
jns
jno
ljmp
xchg
sub
sub
pop
daa
mov
pop
jge
xor
loopne
sub
stos
ss
push
test
xor
jb
or
nop
daa
pop
fstpt
rorb
scas
inc
lods
xor
mov
push
mov
mov
es
test
mov
scas
das
shrl
int
fwait
cli
addb
sbb
nop
push
outsl
gs
pushf
sub
adc
mov
shll
into
or
inc
xchg
sub
pusha
mov
fnsetpm(287
adcb
xor
daa
mov
test
imul
movsl
jge
push
stos
repz
outsb
sub
fbstp
dec
and
push
mov
out
test
leave
mov
incl
data16
std
xchg
push
xchg
cmpsl
ds
ja
mov
lock
nop
es
cmp
cld
dec
add
cmp
ret
insb
sub
sbb
jns
jo
gs
xor
jge
test
pop
hlt
push
movsl
sbbl
outsl
idivb
sahf
mov
xlat
xchg
sub
xchg
jns
ret
mov
pop
pop
repnz
hlt
mov
xchg
lahf
ss
cwtl
inc
pop
mov
cmpsb
or
es
xchg
fldcw
or
adc
inc
fs
xor
adcb
mov
jbe
inc
insb
iret
mov
jge
lcall
pop
lock
ficompl
mov
adc
pop
inc
jne
pop
test
push
out
je
sbb
je
cli
test
sub
xor
jae
push
mov
jnp
lcall
dec
loop
pop
mov
jl
xorb
mov
lcall
lods
mov
jns
dec
imul
lcall
jbe
sbb
cmp
lods
inc
xchg
into
in
cmp
mov
lds
daa
pop
pop
pop
repnz
push
lods
notb
insl
pop
pop
cmp
mov
repnz
xchg
inc
faddp
and
push
pop
ja
mov
sbbb
cwtl
leave
pusha
int
into
gs
push
mov
psubb
cmp
push
pop
jmp
int3
test
add
mov
push
pop
inc
fimull
xchg
and
loope
pusha
arpl
xchg
lret
sbb
stc
mov
cmpb
mov
adc
xchg
mov
outsb
xchg
sub
lret
stc
stc
mov
xchg
mov
sub
lret
jbe
cli
push
call
pop
imul
cld
mov
mov
imul
imul
cmp
scas
fwait
mov
adc
lea
shlb
ds
rcr
cmc
fwait
lds
sbb
iret
xchg
sub
lcall
pop
pop
xor
leave
cltd
das
lret
sub
scas
pop
pop
adc
lcall
movsb
cmp
in
mov
pop
repz
pushf
and
inc
pop
inc
call
sti
mov
push
lods
pop
dec
arpl
jl
data16
sti
stos
daa
mov
pop
push
adc
sti
xchg
das
mov
mov
inc
xchg
or
xor
pop
std
xchg
mov
loopne
stos
sbb
ret
in
jmp
insb
adcl
sub
mov
and
or
inc
pop
popa
fidivs
xor
sub
mov
ljmp
sbb
bound
inc
fidivl
pop
scas
push
pop
cmp
mov
fnsave
pusha
neg
jge
mov
sarb
in
test
mov
jmp
stos
hlt
je
and
inc
inc
xor
ja
fsubrs
xchg
mov
test
push
mov
shlb
bsr
out
test
gs
scas
xchg
out
inc
adc
mov
scas
arpl
fidivl
test
mov
imul
mov
fiaddl
rdtsc
testl
ljmp
data16
mov
scas
inc
or
add
lcall
sbbl
or
or
daa
xor
push
push
dec
in
jg
xor
fdivl
and
and
fcoms
jg
lea
xor
sbb
sub
push
out
inc
mov
aad
pushf
repz
mov
adc
cmp
mov
lahf
push
push
loop
in
add
add
ss
adc
test
in
aam
outsb
add
sub
jp
dec
adc
out
dec
gs
pop
lods
inc
xor
push
imul
ret
loope
into
adc
dec
jg
arpl
push
nop
daa
mov
sbb
inc
fistl
or
lea
mov
fwait
mov
fistl
stos
or
fbstp
and
push
xchg
nop
mov
pop
lock
loopne
cmpsb
adc
aas
insb
sbb
imul
bound
leave
xchg
mov
mov
fidivl
xchg
pop
mov
xor
adc
add
lea
mov
xchg
jmp
or
mov
cmp
call
jle
jmp
adc
popaw
xchg
cs
orl
pop
sub
xor
shrl
jle
loopne
loopne
xor
mov
sbb
fdivl
mov
mov
add
leave
xchg
jmp
dec
ljmp
pop
shlb
pop
mov
sub
bound
jnp
orl
and
cmp
imul
push
pop
adc
push
insb
cmpsb
outsb
and
iret
sbb
mov
lahf
inc
mov
push
inc
lahf
push
or
adc
in
jl
jnp
out
inc
adc
inc
cwtl
inc
pop
add
stos
xchg
pop
jmp
jo
sbb
sarb
imul
cltd
xchg
lcall
scas
scas
mov
inc
mov
cs
dec
iret
fnstcw
sbb
adc
cs
inc
mov
je
arpl
mov
push
mov
ljmp
ret
add
mov
fdivrs
out
push
mov
icebp
mov
or
stos
nop
imul
iret
xor
xchg
pop
idivl
and
in
xor
pop
push
push
xchg
js
dec
mov
cmp
sbb
sub
testb
movsl
rorb
mov
push
adc
mov
and
cmpsb
imul
xchg
xchg
loop
sub
push
enter
push
jmp
pusha
mov
cli
mov
push
push
and
xor
xchg
jge
roll
rcrl
daa
in
add
pop
addb
inc
or
and
cld
cmpsb
and
fs
call
mov
imul
imul
push
adc
in
jb
scas
je
xchg
orb
mov
sbb
xchg
nop
orb
mov
sbb
pop
lret
lods
pop
jge
inc
mov
arpl
aas
call
sarb
in
imul
mov
and
in
int
add
scas
inc
sahf
into
or
and
sub
stc
xor
jl
xchg
inc
enter
xor
mov
sbb
cmp
daa
lahf
loop
and
out
aaa
push
arpl
jo
push
rolb
adc
ret
dec
jecxz
ret
call
mov
fisubrs
in
lret
fidivrl
pop
add
pop
mov
icebp
xchg
pop
mov
add
rcll
lcall
jnp
push
into
aad
jecxz
cmp
pop
sarl
std
inc
fchs
jl
popa
adc
inc
hlt
pop
insb
sub
sahf
xchg
and
fs
xchg
gs
enter
push
cmpsl
push
xor
push
leave
mov
mov
adc
das
jl
movsb
inc
add
sub
inc
push
pop
push
and
push
jae
cmp
ss
add
pusha
orb
roll
mov
mov
std
in
pop
repnz
test
out
imul
sub
dec
scas
in
sbb
sti
test
sbb
lret
fcmovb
push
or
fcmovb
pop
adc
andl
sub
test
jne
fisttpll
mov
jae
imul
jns
scas
cmp
imul
mov
xor
pop
dec
ret
bound
dec
aad
push
test
jo
daa
flds
test
jb
inc
mov
sub
push
lods
lea
lea
loop
pop
jl
cmp
cmpsl
push
dec
lahf
and
insb
ja
sahf
pop
inc
sarl
mov
mov
push
out
std
adc
xchg
push
mov
mov
jmp
xor
mov
xchg
lods
clc
jne
enter
scas
lret
call
loope
repnz
outsl
mov
adc
add
and
je
lret
xchg
push
test
rcrl
mov
aam
pop
out
mov
mov
out
aam
mov
mov
pop
into
push
dec
shrb
std
ds
lds
in
lret
aad
or
inc
mov
jp
hlt
repnz
fbld
ret
fadds
sub
fisubs
or
or
xchg
mov
sbb
sbb
movsl
push
stc
insl
in
inc
cmp
roll
sbb
add
sub
rcrl
inc
loop
xlat
dec
call
fadd
daa
jecxz
sbb
inc
sbb
fimuls
jp
jne
cmpsl
scas
sti
push
rcrb
mov
push
adc
cltd
adcl
mov
ret
loop
insb
lods
xchg
test
push
xor
fs
test
pop
divl
lret
pop
inc
int
into
xor
int
sub
xchg
in
fmull
sbb
mov
std
lea
sarl
dec
mov
ljmp
fsubr
cmc
mov
ficompl
into
out
js
mov
inc
fwait
repnz
int3
mov
sbbb
sub
incb
or
aam
cmp
cmp
xor
push
scas
or
xor
add
daa
ja
call
pop
imul
fwait
push
stos
dec
sbbb
dec
insl
lahf
pop
lahf
inc
fcmovu
jp
stc
aas
fisubl
loop
pop
fstpt
test
push
std
jns
leave
pop
cmpsb
rorb
jle
mov
rcrw
push
dec
shlb
clc
sub
xor
jge
cmp
filds
sarl
test
in
or
and
scas
inc
sub
dec
dec
dec
aaa
ljmp
sub
xchg
mov
call
iret
mov
loope
xchg
sub
les
in
sbb
sbb
adc
pop
adc
icebp
sbb
xchg
jl
jno
data16
sub
fimuls
and
push
inc
mov
popa
xor
arpl
loop
sbb
xchg
fsts
sbb
lret
test
arpl
loope
inc
xchg
test
or
xor
pop
xchg
push
shrl
dec
cmp
push
inc
xor
lahf
xor
fisubl
push
shrl
xor
icebp
push
dec
or
push
pusha
or
pop
dec
inc
mov
les
dec
int3
dec
shr
pop
cmc
sbb
sub
jmp
loope
add
cmc
mov
sbb
rol
pop
push
adc
mov
std
and
rcrb
sub
lahf
fistpll
repz
lock
add
cmpsl
ficoms
aaa
fdiv
fldl
in
cmp
hlt
xlat
sub
loop
cmp
bound
loope
jl
xor
push
mov
add
cltd
pop
push
jmp
mov
in
sbb
in
lock
fcmovnb
cmp
adc
loop
lods
add
sarl
imul
sub
xchg
lcall
mov
arpl
pushf
and
cmp
mov
jnp
xchg
add
cltd
pop
dec
loope
mov
aaa
fmull
add
xchg
dec
fimull
sbb
ds
ret
dec
ret
daa
scas
mov
roll
in
push
jecxz
sub
add
cmp
popa
int
in
loopne
xlat
mov
pop
and
repz
addr16
ja
cmp
pop
lcall
lea
hlt
push
stos
aaa
lret
mov
in
gs
mov
fistl
mov
pushf
cmpsb
fs
or
pop
movsb
and
push
gs
gs
pop
jae
pop
cli
and
xor
xor
mov
inc
pop
adc
xchg
jo
mov
pushf
outsl
mov
sbbb
aad
add
rorb
add
and
adc
cmp
jp
gs
xchg
cmp
jno
test
mov
or
or
inc
mov
jno
cmp
popa
sbb
dec
adc
xchg
xchg
sub
sub
js
cmp
das
stos
pop
mov
imul
mov
pop
fiadds
cltd
out
push
jb
or
lea
daa
xor
xchg
inc
dec
mov
cmpsl
inc
push
mov
cmpsl
jge
ret
imul
imull
mov
sub
inc
stc
inc
vucomiss
rorb
scas
inc
sti
loope
mov
hlt
xor
shll
mov
mov
fisttps
mov
inc
mov
xor
pop
int
jle
addb
scas
sub
outsl
inc
mov
inc
push
inc
mov
push
pop
push
mov
push
test
push
sub
push
nop
sub
loop,pn
inc
ljmp
rorb
insb
push
stc
xor
aas
mov
cmpb
std
xor
add
jno
mov
scas
xchg
test
inc
sbb
xchg
rcll
cmp
xchg
and
push
jae
movsl
outsl
push
cmp
pusha
orb
cmpl
inc
rorb
inc
xor
push
xor
mov
addr16
scas
sbb
jno
mov
jno
out
lcallw
push
cmpsb
outsl
push
fsubs
mov
jo
loop
js
leave
mov
cmc
mov
xchg
rcll
loop
imul
adc
jno
movd
outsl
push
add
orl
shll
and
dec
test
lods
jbe
xchg
lds
add
notl
sahf
mov
test
filds
xor
dec
cmp
cmp
mov
inc
jmp
inc
test
jo
and
movsl
nop
cwtl
data16
loop
repz
push
in
inc
push
cmpl
and
pop
pop
xchg
and
cmp
test
dec
xchg
xchg
pop
insb
js
push
xchg
jl
ret
pop
mov
roll
iret
pop
rcrl
cmp
xor
in
out
shll
pop
loop
xchg
enter
popa
fdivrl
fidivl
xchg
nop
xchg
outsl
push
sbb
int3
inc
push
lods
xor
frstor
jae
std
jne
ret
xchg
jl
cmp
cmp
pop
pop
aam
dec
ret
mov
fucom
sub
and
fcoms
adc
mov
ret
negb
aam
lea
jne
rclb
xchg
sarb
rcll
repnz
shll
out
loope
mov
pop
pushf
ficompl
push
or
loopne
mov
cmc
enter
pop
test
mov
fwait
rolb
push
mov
xchg
fstl
out
adc
inc
adc
stos
pop
and
popa
in
int3
enter
ss
or
inc
scas
or
sub
add
push
cmp
jo
js
xor
sub
out
das
mov
fnsave
pop
lcall
dec
sub
ds
jnp
addb
add
repnz
mov
test
or
rclb
mov
ljmp
inc
in
jae
pop
shlb
xor
ds
nop
mov
adc
mov
cmp
add
dec
jne
data16
mov
loopne
or
sbb
push
test
repz
xchg
rcr
jl
mov
xchg
mov
push
adc
movsl
and
mov
out
sub
pop
stos
xchg
ja
dec
xor
pop
jnp
mov
pop
or
jb
je
in
xor
iret
aaa
xchg
popa
inc
adc
and
dec
xlat
dec
pusha
adc
addr16
add
sub
pushf
ret
daa
pop
inc
mov
inc
adc
ss
jle
ret
nop
jnp
out
pop
rcr
mov
icebp
ret
rclb
stc
and
cmc
mov
je
outsb
jmp
push
fimull
mov
ljmp
push
movsb
sbb
pushf
xchg
repnz
into
xlat
jns
aad
inc
fimuls
add
or
mov
ljmp
fldl
loope
mov
clc
testb
dec
pop
les
in
inc
cmp
rcrl
cmp
stos
mov
and
shll
adc
fstl
mov
clc
cld
jl
lret
sub
fsubrl
inc
lret
negb
outsl
cmp
aaa
jno
call
dec
push
outsl
rcll
jp
imul
cmpsb
mov
sub
push
lret
scas
pop
fbstp
cs
mov
jae
clc
push
loope
mov
imul
lret
mov
into
stos
das
in
lock
rol
shrl
fistps
adc
mov
sti
mov
dec
adc
test
mov
mov
insl
mov
test
dec
js
gs
cs
inc
jb
push
sub
cmp
adc
lods
push
sbb
mov
es
sbb
jg
xchg
outsb
pop
mov
outsl
mov
es
mov
popa
cltd
pop
ret
adc
loope,pt
loop
lods
movsl
insl
pop
in
cmp
xchg
inc
lds
out
and
and
das
adc
push
and
push
jns
test
fdivl
inc
lock
push
add
arpl
sahf
xor
bnd
lods
xor
jno
rcll
js
cmp
fisttpl
adc
fidivl
cmp
inc
mov
nop
imul
push
ret
pop
lods
imul
test
in
add
test
in
adc
inc
pop
and
inc
xlat
dec
aas
push
adc
xor
inc
push
push
sahf
xchg
int3
arpl
dec
shll
in
adc
pop
sahf
pushf
jo
mov
xchg
pop
arpl
xchg
jo
mov
adc
roll
mov
and
mov
cwtl
dec
sbb
mov
lahf
or
jo
das
outsb
xor
xor
adc
addl
outsl
or
psllw
out
push
mov
xchg
es
fldl
test
fs
test
stc
xchg
dec
sbb
jle
xchg
pop
xor
add
mov
xchg
sub
cwtl
ret
dec
std
aas
mov
pop
and
jae
sub
xchg
inc
arpl
test
mov
clc
sub
pop
arpl
push
inc
mov
cwtl
jbe
into
xor
data16
sbb
sahf
sbb
and
ljmp
inc
mov
imul
mov
cmp
lcall
scas
mov
inc
push
in
icebp
cmp
repnz
inc
shll
test
mov
push
jmp
repz
adc
jmp
mov
push
in
ds
cld
cs
or
ret
gs
fimull
shl
or
xlat
mov
xor
fisubs
cmp
leave
aaa
lock
imul
adc
xchg
lcall
lcall
xchg
push
jmp
outsl
add
adc
pusha
loope
xchg
filds
dec
mov
call
mov
adc
add
push
pushf
je
adc
lods
inc
xchg
push
mov
fwait
pusha
jne
inc
fidivs
mov
dec
xchg
xor
sub
mov
mov
aam
adc
mov
jns
in
sbb
and
lock
cmp
push
clc
aaa
mov
aaa
sub
arpl
sub
mov
daa
jle
cwtl
orl
jb
jmp
movsl
pusha
movsl
std
fcmovbe
sub
lret
in
mov
das
ficompl
cmp
pop
pop
loope
mov
inc
adc
mov
arpl
cmp
jl
pop
jb
les
les
loope
adc
or
in
bsr
icebp
sub
dec
lock
addr16
dec
ljmp
jg
jbe
mov
out
pop
xchg
mov
or
jo
jns
adc
or
lahf
adc
push
fisttpll
xor
adcl
mov
sarl
stos
test
cmpsb
pop
fimuls
dec
out
jmp
es
mov
pop
stc
mov
jmp
test
xchg
jno
jecxz
int3
inc
mov
stc
mov
std
pop
adc
scas
mov
cmc
in
aad
jg
and
jbe
addr16
push
sti
mov
stc
pop
lret
mov
adc
sub
jecxz
jns
jnp
sarl
mov
lea
cli
push
rclb
cmp
cmp
jle
mov
push
push
xor
insl
push
dec
adc
and
fidivs
lods
inc
mov
ja
insb
and
ds
mov
std
cmp
movsb
cmp
and
pop
imul
les
and
cmpsl
pop
das
jl
rcrl
rol
imul
repz
mov
cwtl
cs
filds
insb
jns
xchg
or
inc
lahf
add
das
jb
mov
push
adc
xchg
xor
jle
ret
aaa
popf
fnstenv
mov
sbbl
mov
jbe
roll
mov
lcall
les
jo
jne
mov
enter
xor
xor
dec
pop
and
aad
jnp
sub
push
test
cld
cli
xor
popf
iret
out
test
or
mov
out
arpl
or
cs
xor
sbb
popf
and
and
scas
inc
repnz
cmp
push
mov
ds
adc
cmp
cmp
adc
sbb
add
ja
outsl
xor
dec
or
add
add
pop
or
repz
inc
jl
fistl
pop
lods
inc
mov
hlt
sub
xchg
lock
lahf
int
cs
pop
rorl
sub
nop
jne
push
into
cmp
xchg
js
pop
sarl
popa
lea
cmc
movsb
repz
sbb
xlat
outsb
or
push
jno
fisttpl
pop
out
mov
ret
lods
jmp
sbb
movsb
pushl
enter
adc
and
js
pushl
xchg
dec
xlat
adc
aam
test
adc
out
mov
jns
jecxz
xor
fcmovnb
enter
sarl
fidivs
es
movsl
cmp
mov
out
xor
or
lcall
push
xchg
popl
arpl
mov
js
or
jl
xlat
cmp
cmp
dec
test
mov
jae
nop
daa
and
xchg
inc
or
shlb
cltd
lods
xor
and
sbb
xchg
int
or
or
sbb
loop
cmp
mov
and
pop
test
pop
xchg
jnp
sahf
xor
cmpsl
outsb
mov
lock
out
test
jnp
adc
dec
pop
test
adc
xchg
mov
imul
pop
lock
pop
jns
or
int
push
sub
mov
mov
lods
jnp
arpl
ljmp
inc
fwait
xor
sub
xchg
sub
mov
popa
stos
mov
inc
test
adc
xor
cmpsb
ljmp
rcll
xchg
adc
push
or
mov
or
mov
mov
jl
inc
mov
mov
mov
movsb
dec
stc
outsl
lds
in
mov
popf
xchg
movsl
push
jmp
mov
add
mov
in
test
mov
push
sub
stc
pop
dec
lock
mov
pusha
bnd
mov
shlb
rcrl
fmul
mov
sub
jecxz
sahf
xor
mov
lock
rcrb
sbb
fildll
stc
cs
movsl
addr16
out
mov
add
bound
sbb
sub
in
inc
mov
sbb
add
pop
mov
jbe
movsl
add
or
mov
popf
inc
fxch
test
pop
add
push
call
xchg
sub
sbb
mov
shlb
pop
push
inc
sbb
popf
xchg
xchg
fiaddl
call
push
into
or
adc
orl
decl
in
ss
cmc
dec
in
hlt
cwtl
jne
insb
sub
cmp
mov
sub
xchg
sub
pop
aam
aas
stc
ret
cmp
or
sbb
fistps
sub
shlb
dec
xor
xchg
xchg
mov
cld
jae
filds
dec
inc
mov
sbb
dec
mov
inc
das
rcll
push
movsl
cmp
xchg
fcoml
mov
jae
jae
pop
push
or
jmp
fidivl
xchg
fdivl
push
rcll
shr
add
ds
xlat
lea
xchg
or
popf
xor
mov
fbld
inc
int
lret
iret
data16
sub
xor
cltd
out
or
mov
sub
xor
and
sbb
sbb
cmp
pop
std
and
out
fimull
movsb
fwait
ss
sahf
aam
and
in
sbb
mov
fpatan
in
arpl
mov
hlt
sub
and
inc
pop
shrl
mov
or
mov
sub
xchg
add
popf
mov
xor
mov
pop
rcrb
inc
mov
jno
pop
shrb
push
in
push
jnp
in
outsb
pop
shlb
jo
pop
cltd
pushf
xchg
mov
shrl
call
jb
imul
or
mov
popa
clc
shl
stgi
icebp
daa
out
clc
mov
lcall
mov
rolb
mov
insl
add
cmc
ja
daa
push
mov
xchg
sub
test
inc
ficompl
pop
sub
dec
in
addl
lcall
and
sbb
js
dec
loopne
cltd
pop
hlt
lret
mov
filds
xor
mov
dec
les
aad
pop
jbe
cmp
mov
std
xchg
pop
mov
test
jg
mov
fisubrs
psrld
rolb
xor
bound
out
push
subl
jbe
or
mov
or
xchg
sub
sub
dec
dec
jl
pop
scas
jo
addr16
jp
out
test
and
cwtl
push
pop
or
mov
imul
aam
mov
pop
repz
or
jp
pushf
pop
xchg
out
mov
cmp
adc
pop
aaa
arpl
insb
xchg
pop
loope
mov
call
cmp
sbb
lea
rolb
mov
insl
add
hlt
ja
es
mov
xchg
sub
cmpsl
test
dec
int3
cli
pop
sub
shrl
dec
in
addb
jae
add
mov
sbb
ja
dec
loopne
cwtl
pop
hlt
leave
mov
mov
fiadds
xor
mov
dec
ret
test
pop
mov
aad
push
fcomp
jbe
cmp
mov
std
xchg
pop
mov
test
jle
mov
push
sarl
rolb
xor
popa
and
push
subb
jne
or
aad
and
leave
xchg
sub
sub
dec
dec
jnp
pop
lods
outsl
shlb
into
jecxz
add
out
test
and
cwtl
push
push
or
mov
and
lea
mov
rcrl
jbe
jl
pop
negb
jge,pt
jo
aam
in
mov
mov
adc
lret
shlb
inc
pop
lock
push
jg
mov
push
in
sti
push
pop
popf
repnz
push
jmp
adc
or
enter
mov
mov
fnstsw
pmaxub
or
add
adc
push
adc
roll
movsl
gs
fcoml
mov
mov
stos
pop
inc
fnstcw
lret
xchg
outsb
add
popa
clc
inc
and
mov
jg
popf
lret
sti
mov
xor
inc
xchg
cmp
lds
daa
xchg
out
mov
js
xchg
stos
cmp
into
insb
lret
sbb
or
jp
pop
or
mov
mov
inc
pusha
divl
or
xchg
jle
rcll
pop
fisubrs
je
scas
fldenv
jbe
je
mov
inc
xor
push
in
jge
xor
sub
fsubrs
enter
inc
and
or
aam
lahf
mull
movsl
lcall
fdivl
mov
insb
ja
cwtl
jecxz
orl
hlt
mov
into
shrb
jo
nop
xor
or
into
lock
rcrl
jb
mov
inc
div
xchg
das
lods
dec
xchg
outsb
loop
jno
nop
data16
mov
dec
cs
mov
fbstp
iret
cmp
arpl
les
add
stc
fs
mov
cmp
inc
and
aam
sti
push
adc
mov
shrl
pop
ljmp
and
loope
cmc
inc
das
sub
cld
lret
push
ficoml
adc
out
xchg
or
mov
movsl
jnp
insl
call
inc
sub
adc
add
orb
jns
sbb
dec
mov
fdivrl
push
loopne
stos
adc
jl
mov
into
loope
push
in
and
es
adc
xchg
push
std
test
push
push
stos
push
inc
jo
sbb
sub
dec
sbb
repz
dec
adc
add
je
push
xchg
pop
test
mov
mov
mov
cmp
hlt
add
jns
mov
mov
add
mov
mov
cmp
aas
fiaddl
pop
dec
pop
cmpsl
out
adc
jo
jbe
out
mov
enter
icebp
sbb
adc
push
add
ljmp
pop
xchg
xchg
dec
loopne
popf
pop
aam
in
jle
inc
loope
in
inc
dec
or
jnp
mov
sub
test
xchg
mov
cmpsb
int3
outsl
inc
sub
mov
inc
push
inc
int3
insl
xchg
pop
cmpsl
dec
sbb
std
push
push
hlt
stos
shrb
popf
add
jge
xor
add
test
sbb
xchg
es
adc
fmul
aas
aas
pop
xor
xlat
into
inc
in
jbe
movsl
mov
es
std
stc
mov
mov
adc
stos
shrb
and
xchg
pop
lea
stc
push
inc
sbb
in
fcompp
jo
sbbb
jge
outsb
lahf
clc
adc
cmpsb
cmp
mov
and
mov
inc
ficoml
cmp
subb
shrl
jp
std
imul
test
pop
popf
xor
insb
fbstp
adc
add
adc
ss
int3
add
xchg
cmp
je
mov
push
push
lods
inc
rclb
ret
repnz
in
add
push
pop
mov
mov
inc
cld
xchg
in
jl
push
mov
mov
das
lcall
jp
cmpsl
decl
xchg
inc
imul
out
insl
lock
pop
sahf
cmp
iret
jns
dec
mov
pop
std
int3
xlat
push
add
stc
pop
mov
mov
movsl
das
mov
sub
mov
loope
jmp
sub
push
mov
ss
push
inc
xor
mov
adc
es
stos
push
icebp
data16
fcomi
jns
inc
das
out
cmpsl
lods
xor
enter
cmp
xor
das
pop
negb
xor
clc
cmc
cmp
aas
pop
mov
cmp
sbb
mov
mov
je
pushf
and
jle
scas
aas
xchg
aas
int
lret
mov
adc
mov
das
pop
pop
out
xor
div
cmp
and
jle
sbb
pop
lock
pop
jle
jl
cmp
jge
sub
adc
pop
xchg
fdivrs
mov
sub
int3
xchg
sti
jb
fwait
pop
in
mov
push
lea
gs
ja
or
mov
pop
sbb
sbb
add
adc
mov
out
dec
jmp
mov
sbb
dec
inc
or
in
jns
ss
and
pop
fdivs
loope
and
adc
add
jge
push
pop
push
subl
sbb
pop
pusha
dec
std
inc
jae
cmp
mov
test
jge
dec
pop
push
add
pop
sub
xchg
dec
std
data16
mov
sbb
push
clc
xchg
arpl
sbb
sub
push
pushf
pop
call
mov
jle
inc
add
adc
jno
mov
mov
pop
scas
cmp
rclb
adc
jmp
aam
lmsw
jne
pushf
rorl
push
sti
test
dec
adc
fucomp
outsl
orl
cmpsb
pop
inc
pop
fnsave
dec
push
or
jns
shrb
push
inc
ret
add
and
orb
pop
mov
ljmp
add
rclb
movsl
das
pop
lret
cmp
xor
and
push
in
fadds
sarl
and
jae
sbb
stos
gs
nop
xor
orl
pop
push
stos
add
and
repnz
inc
sub
push
enter
lods
stc
and
sub
fdivs
mov
popa
xor
mov
sub
xchg
inc
cmp
and
jmp
outsl
mov
aaa
cmpsb
in
jp
dec
xchg
inc
insb
cwtl
in
imul
ret
ds
les
mov
push
sbb
mov
fbld
add
dec
pop
mov
jecxz
insl
fdivrl
inc
push
int
xchg
inc
fsts
push
call
stos
test
adc
jns
mov
pusha
cmp
mov
rorl
cli
push
lret
add
popa
pop
adc
sbbb
test
addl
in
add
stos
hlt
gs
mov
loope
xchg
push
add
aam
rcll
subb
push
add
xor
gs
test
jge
bound
rcl
test
xchg
inc
push
cmc
sbb
roll
addr16
test
jge
loope
mov
add
push
aam
enter
sub
rolb
cmp
outsw
in
push
and
addl
cmpsb
loopne
mov
mov
dec
or
in
addr16
jge
imul
cmp
mov
cmpsl
mov
subb
inc
adc
fidivs
sti
jne
jle
out
push
add
pop
mov
sbb
enter
aad
xlat
jb
pop
std
icebp
jo
xchg
in
fdivrs
rcll
js
cmpb
add
shrl
loope
out
xchg
in
xor
test
push
add
movsl
add
shll
hlt
mov
out
pop
sbb
jae
xchg
push
add
fistps
test
scas
sub
hlt
mov
and
mov
jl
shll
jmp
sub
add
lahf
cmp
ss
jl
shlb
jae
test
lods
push
pop
or
pop
mov
pop
sbb
jno
xchg
mov
mov
add
sub
sbb
lcall
icebp
out
and
xor
cld
pop
fwait
xor
push
scas
push
and
mov
out
shl
outsl
cmc
and
push
fwait
aaa
sub
es
and
push
addr16
or
dec
cltd
cmp
jbe
jb
stos
sbb
or
pusha
repz
push
add
mov
orl
popa
mov
stos
sub
pop
mov
test
mov
jb
xchg
sub
mov
cmpsb
fidivrl
repz
jge
repz
fidivs
lods
jle
loop
jmp
ds
jp
repnz
js
in
es
loop
mov
loopne
push
add
scas
push
arpl
imul
bswap
sub
lahf
push
ja
sarl
pop
clc
jmp
mull
cld
push
mov
in
cwtl
jmp
testl
clc
jo
mov
jae
sahf
or
and
cwtl
outsl
frstor
sarl
out
pop
icebp
and
mov
push
xor
pop
nop
aaa
popf
cwtl
push
std
or
pop
cmp
pushf
jl
loope
into
push
mov
hlt
pop
rcr
push
clc
lcall
xchg
push
out
sbb
es
repz
xchg
cmp
rorb
scas
je
repz
xor
adc
movsl
sub
inc
pop
mov
mov
scas
xor
mov
mov
sbb
pop
add
ret
push
sbb
sub
mov
testb
fstpt
push
jno
lods
push
in
xchg
mov
add
test
xchg
mov
out
insl
or
push
call
cmp
push
cmpsb
and
call
daa
sbb
xchg
loop
dec
or
cld
jmp
adc
ss
mov
lcall
ljmp
insl
dec
xor
inc
js
add
add
jge
pop
sbb
std
mul
jne
call
or
push
pushf
fdivrs
pop
stc
fsubrl
pop
stc
insl
movsb
enter
dec
or
push
add
addr16
sbb
xchg
push
nop
mov
inc
hlt
pop
cmp
iret
mov
and
std
mov
shl
xchg
cmpl
pop
iret
dec
or
scas
inc
push
js
movsl
loope
push
add
sbb
mov
lcall
dec
out
imul
lods
jmp
push
cmp
test
inc
ret
rolb
or
stos
cmp
inc
mov
fistpll
test
adc
insb
fiadds
lods
dec
hlt
lds
sbb
jo
loope
cli
xchg
jbe
mov
add
stc
pusha
test
movsl
push
mov
jnp
sti
dec
mov
fiadds
jbe
mov
std
fs
aad
xor
add
imul
pop
sahf
cmp
or
lods
test
mov
push
in
pop
dec
push
sbb
sarb
xlat
adc
int3
mov
je
sbb
sbbl
jno
adc
inc
clc
push
sub
push
into
jne
mov
outsb
aad
sub
mov
mov
cmpsl
fidivl
cmpsb
jge
addr16
and
cmp
adcb
sbb
add
mov
adc
aaa
lods
aas
xchg
outsb
sub
pop
jb
imul
dec
push
orb
cli
pop
dec
shrb
mov
stos
pop
mov
dec
mov
mov
stc
gs
test
shll
dec
xor
sub
test
mov
shll
out
outsb
rorb
or
add
mov
lea
jo
outsb
fsubs
fstps
ret
hlt
or
cmp
xlat
sbbl
jp
xchg
outsb
call
cmc
mov
or
je
xor
jle
rorl
pop
repz
leave
jecxz
push
repz
clc
mov
sbb
mov
scas
mov
push
mov
fadds
mov
scas
filds
xchg
xchg
xchg
les
fstps
sbb
lds
mov
roll
enter
or
nop
iret
push
pusha
icebp
les
lods
cs
pop
scas
sub
popf
ret
cs
dec
mov
mov
xor
push
dec
or
or
dec
inc
push
mov
setl
pushf
dec
scas
daa
out
cwtl
jo
jne
cmp
and
sahf
adc
inc
mov
jns
call
arpl
pushf
in
jecxz
scas
lret
add
mov
mov
pop
stos
repnz
testl
push
sbb
fcomps
and
mov
ds
std
pop
mov
mov
outsl
jmp
lcall
int
cmp
and
std
fs
adc
xchg
fmull
leave
nop
pop
mov
scas
jge
fsubs
dec
punpckhbw
ja
inc
jp
sub
xchg
cmp
inc
mov
xor
movsb
shll
jo
lea
ret
or
out
sub
or
cmp
in
mov
sbb
inc
shlb
test
bound
sbb
cmc
enter
int3
sbb
xchg
push
stos
xor
out
push
and
xchg
or
fcompl
mov
jge
daa
lods
aaa
jo
stos
adc
cmpsl
sub
inc
mov
in
pushf
jle
mov
daa
outsb
mov
or
ss
sub
lds
out
sbb
push
inc
or
loop
popf
cmp
jbe
xor
clc
popa
add
mov
push
push
and
nop
mov
mov
sbb
subl
sahf
test
cs
mov
pop
rcl
aad
lcall
sub
repnz
pop
or
ret
xchg
mov
dec
loopne
out
adc
loope
dec
mov
adc
jle
xor
in
lods
das
hlt
inc
mov
negl
sahf
aaa
lahf
dec
inc
or
sub
mov
sahf
fwait
lods
inc
int
mov
pop
xchg
cmp
pop
mov
shr
out
adc
insb
push
outsb
sarl
test
pop
xchg
push
sub
nop
mov
xlat
cwtl
stc
gs
shll
mov
stos
pusha
xchg
inc
mov
mov
dec
or
daa
xor
sub
rcll
nop
inc
testb
inc
movsb
dec
ljmp
dec
xchg
pushf
pop
xchg
inc
mov
mov
adcb
inc
adc
pop
xchg
inc
push
rclb
ret
scas
pop
pop
std
int3
mov
pop
rcrb
lahf
cmp
int3
mov
mov
lods
js
lods
daa
ss
mov
mov
jp
and
mov
int
sub
push
push
add
pop
in
imul
and
sub
mulb
and
int
in
cli
arpl
and
sbbl
xlat
mov
or
in
popf
ljmp
xor
fisubrl
loop
adc
mov
mov
fnstsw
pusha
les
lahf
adc
or
push
arpl
sub
fwait
cmp
xlat
or
cmpsb
and
dec
adc
or
test
sahf
inc
mov
xchg
cmp
movsb
pushf
inc
daa
xchg
test
xor
dec
xlat
add
lret
xor
push
jg
pop
test
mov
daa
pop
jl
cmp
adcb
cmp
fdivl
sub
pop
imul
aam
leave
pusha
test
or
jg
pop
pop
call
out
mov
hlt
pop
cmp
pop
mov
jo
mov
cltd
fs
adc
pop
leave
jno
cmpsl
ss
sahf
inc
fs
push
stc
mov
mov
lahf
in
aas
sahf
xchg
std
push
lds
movsl
lods
sub
cmp
inc
pop
popa
icebp
pop
lahf
xchg
pop
scas
xchg
xor
adc
pushf
gs
inc
adc
jl
inc
mov
or
xor
mov
sbb
test
cmp
sub
inc
sbb
mov
scas
test
jge
adc
and
dec
mov
xor
mov
xor
dec
out
iret
mov
push
add
int
dec
mov
cmpsl
mov
inc
scas
pop
clc
pushf
fwait
and
push
fistpll
mov
or
add
leave
pop
xchg
dec
movsl
inc
push
mov
inc
adc
movsl
xor
jae
sbb
xor
jl
lds
xor
fcoml
jo
push
add
outsl
lods
inc
mov
jecxz
popa
adc
inc
sahf
inc
lret
push
fcompl
xor
inc
sti
mov
xchg
push
mov
rolb
lock
pop
xchg
push
mov
sarb
addl
scas
mov
into
mov
fcoms
incl
nop
inc
push
jne
inc
cld
in
addr16
mov
xchg
inc
into
sub
cmp
jne
sub
insl
test
dec
pop
mov
ljmp
hlt
dec
icebp
pop
jae
mov
adc
lret
cli
orb
ss
mov
bound
or
scas
lea
test
mov
pop
add
jae
and
or
jns
and
mov
mov
mov
xor
mov
add
xor
cmp
shlb
aaa
pop
push
inc
or
push
lods
xor
cmpsb
inc
or
call
cmp
jl
ds
jno
popf
and
pop
sbb
push
je
pop
pop
out
insb
mov
daa
mov
stos
int
cmc
or
lcall
or
mov
jbe
sbb
ja
stc
repz
cmpsb
cmp
shrl
in
jno
inc
sbb
shll
push
sbb
mov
popl
ljmp
mov
aas
fwait
out
dec
or
sub
xchg
sub
dec
loop
jl
pop
add
jmp
jl
movsl
sub
outsb
jecxz
test
movsl
sub
mov
or
mov
jecxz
lcall
fildl
lods
sarl
push
jo
ret
push
clc
adc
sub
ss
push
jnp,pt
cld
inc
flds
mov
mov
add
push
lods
xor
ret
mov
cld
bound
mov
dec
fbld
lret
leave
xchg
rcrb
cmp
xchg
in
sub
repnz
rclb
fbstp
ljmp
iret
int3
ss
out
push
cli
sub
push
cli
in
fs
cmc
and
fwait
repnz
std
xchg
cmp
pop
in
ror
dec
sarb
push
filds
cmp
test
leave
fistps
cmpsb
jne
or
mov
hlt
int
imul
push
or
movsl
mov
aaa
movsl
test
pop
sti
xor
xor
scas
inc
sbb
clc
xchg
pusha
icebp
sbb
pop
cltd
inc
stc
pop
add
mulb
pop
dec
push
lds
mov
inc
adc
cmp
insl
mov
dec
push
push
mov
sbb
add
dec
jp
ret
repnz
in
insl
nop
ljmp
pop
jns
stos
mov
insl
call
mov
movsb
adcb
sbb
and
cmpb
mov
cmp
je
xchg
rolb
inc
mov
lret
repnz
pop
and
and
jle
and
xor
sub
roll
das
pop
adc
cltd
sub
lds
les
cwtl
cmp
int3
gs
push
pop
jp
mov
mov
dec
fcmove
outsl
call
pop
pop
push
jmp
test
jb
into
xchg
dec
out
mov
nop
fs
adcb
daa
scas
dec
inc
adc
addr16
dec
xchg
aad
sbb
jge
jp
mov
jne
fwait
xor
pop
imul
adc
loopne
sbb
push
hlt
jno
stos
pop
cmp
mov
mov
mov
sbb
pusha
cmpsl
lock
xor
mov
in
mov
jns
adc
inc
cmp
es
cmpsl
lcall
addr16
inc
orl
push
in
jecxz
cmp
aad
int
xchg
mov
jb
and
xor
std
pop
and
rolb
jp
pop
cld
outsl
push
pop
stc
pop
xlat
lock
insb
jmp
mov
jno
aam
in
inc
pop
iret
es
js
int
xchg
inc
add
pop
inc
repnz
arpl
sbb
ss
sub
mov
mov
test
test
mov
dec
adc
jmp
lods
xor
sti
mov
les
lea
fnsave
cmpsl
jge
roll
cmp
movsl
jl
add
dec
adc
push
and
adc
inc
jmp
jo
xor
push
lahf
dec
pop
dec
mov
ret
aas
pushf
popa
jns
popa
hlt
jl
sub
out
inc
adc
dec
or
xchg
je
mov
movsb
js
sub
mov
mov
loopne
pop
stc
std
jg
in
addr16
mov
cmpsl
mov
adcl
cmp
xlat
cmp
pop
iretw
xchg
test
jp
js
push
stos
cmp
pusha
cltd
mov
outsl
cmc
sub
insl
repz
cs
inc
cmpsb
sub
rorb
test
lods
xor
pop
mov
scas
pop
mov
dec
in
outsb
icebp
xor
xchg
cmp
into
and
mov
xchg
lods
fbld
scas
and
sbb
in
cmp
sbb
dec
mov
xchg
sbb
cmp
jb
mov
xchg
inc
mov
xchg
jnp
push
mov
fwait
aad
mov
ret
dec
or
jmp
ret
xchg
dec
or
loopne
shlb
sub
xor
aad
push
sub
pop
rcrl
cmp
mov
fs
pop
cli
mov
or
sti
pop
xchg
push
and
int3
popf
test
sbb
and
push
in
lock
sbb
pop
add
adc
iret
mov
dec
roll
jecxz
xor
cs
xchg
cmp
sti
push
cli
add
push
push
cli
sbb
dec
movsb
sub
pop
data16
adc
test
jg
push
roll
xor
mov
scas
and
cmp
jns
jl
movsl
fs
pop
mov
cmp
enter
mov
imul
lods
mulb
cwtl
pop
mull
mov
sub
push
cs
pop
jbe
scas
insl
mov
ljmp
mov
and
iret
fisttps
push
mov
pusha
in
lret
fistpl
jecxz
mov
cmc
fs
rclb
add
adc
insb
in
jae
dec
pop
ljmp
inc
xchg
xchg
and
into
mov
fldcw
and
sarb
dec
adc
add
jne
and
ret
iret
xchg
adc
loop
adc
popa
mov
stos
popa
jmp
jecxz
repz
mov
incb
and
jbe
les
loope
iret
inc
adc
repnz
add
xchg
dec
or
movsb
lods
sub
xchg
inc
fidivl
xchg
add
sbb
decl
adc
imul
flds
les
aaa
sbb
inc
test
mov
push
out
in
mov
xor
lods
sub
rcrl
scas
add
outsl
push
inc
ss
jno
loope
gs
jne
jmp
add
pop
cmp
addl
cmp
pusha
and
jae
inc
push
les
mov
rorb
and
mov
mov
sarl
movsb
push
sti
das
out
movb
mov
lea
outsb
mov
adc
test
cmpsb
popa
adc
jmp
icebp
imul
pop
add
pop
or
notb
leave
mov
jmp
lock
push
stc
stos
mov
push
pop
pop
in
pop
lea
cmpsb
dec
and
out
rcll
les
rcrl
xchg
push
mov
push
add
test
int
orb
cwtl
js
pop
sahf
popa
cltd
jnp
inc
jb
fildl
xchg
loop
stos
pop
mov
mov
les
jp
fwait
aas
mov
scas
pop
push
sub
negb
into
cmp
mov
mov
add
mov
xchg
inc
or
jl
pushf
rolb
pop
rorb
into
mov
test
push
lret
inc
mov
int3
leave
mov
jcxz
xchg
hlt
stc
pusha
arpl
pop
add
fwait
inc
into
subl
jno
xor
nop
subb
cld
iret
xchg
shl
outsb
hlt
enter
mov
scas
mov
push
filds
lcall
loop
cs
lret
dec
push
popf
fwait
daa
test
add
or
pop
faddl
lock
mov
call
adc
jns
or
dec
ljmp
ret
dec
jae
cld
sbb
sahf
cmp
mov
clc
pop
mov
repnz
pop
xor
sbb
inc
insb
jmp
cmpsb
rorb
enter
mov
enter
out
sbb
fsubrs
pusha
or
jno
ja
cmpsb
lret
adc
lea
into
in
das
andps
movsl
cmp
out
mov
sbb
lret
push
push
mov
mov
bound
fucomp
jne
pop
flds
shr
stos
mov
sbb
repnz
mov
inc
xchg
icebp
pop
iret
xchg
lds
mov
mov
xchg
pop
in
scas
cs
outsb
jmp
imul
ret
pop
insb
test
jge
and
xlat
ds
dec
decl
mov
daa
lret
fstpt
out
outsb
cli
add
xchg
pop
loope
mov
pop
testl
mov
cmc
pop
lret
inc
test
add
and
fistpll
andb
xchg
dec
or
rorb
insl
hlt
negb
enter
out
pop
xor
int
add
std
sbb
int
push
psubd
pop
xor
js
gs
adc
call
mov
jp
aas
gs
andb
aad
dec
adc
xchg
dec
adc
fistpll
loopne
and
mov
pop
mov
sub
cmpsl
cli
and
test
ljmp
inc
inc
adc
es
cmc
gs
imul
jge
in
dec
ds
enter
dec
sbb
inc
scas
push
fnsave
leave
pusha
xchg
stos
push
cli
mov
repz
in
mov
pop
call
jbe
xchg
or
mov
int3
xchg
orl
mov
ror
hlt
orl
insb
nop
shll
mov
scas
xor
cmpsb
dec
adc
mov
scas
mov
jg
adc
dec
test
fnstcw
fadds
nop
repz
cmp
or
cmc
insb
fs
cmp
jl
cmp
jmp
pop
fwait
push
repz
test
mov
gs
fdivrs
inc
mov
call
cmc
xchg
mov
jmp
or
lods
enter
mov
lahf
in
dec
loop
es
or
sbb
imul
dec
jmp
xlat
adc
lret
inc
inc
or
push
sub
into
xchg
imul
sbb
outsb
repnz
ret
cmpsl
out
jb
roll
push
push
inc
adc
sbb
dec
jg
push
test
dec
loopne
lds
xor
sbb
mov
xchg
cmp
mov
loopne
int
mov
pop
xchg
push
stc
push
outsl
repz
jg
fxch
lea
gs
scas
mov
pushf
ss
cmpl
push
idiv
add
dec
scas
push
popf
inc
pop
mov
push
divl
add
jecxz
jb
dec
sub
inc
mov
fldl
sub
fwait
inc
adc
inc
sub
adc
xchg
push
loopne
rcll
push
decb
loopne
icebp
cmc
lret
sbb
pusha
out
add
push
lahf
push
pop
add
cwtl
inc
mov
sarb
mov
lods
xor
cmp
insl
cwtl
ror
xchg
pushf
inc
xchg
cltd
inc
mov
push
std
ja
pop
sti
mov
in
insb
mov
xlat
test
inc
leave
xchg
push
add
pop
clc
pushf
jnp
or
shll
add
sub
daa
mov
xor
test
jne
loop
fidivrs
jp
scas
stos
movsl
or
int
dec
adc
pop
push
sti
xor
pusha
sarl
test
add
stos
movsl
adc
inc
ja
inc
in
xchg
inc
or
stc
filds
sar
adcl
xor
popa
jle
sub
push
push
lea
arpl
pop
sahf
andl
cld
pop
cmpsl
mov
cmp
insl
add
sub
xlat
jge
sbb
sbb
int
sti
shl
push
nop
dec
test
jmp
mov
xchg
clc
mov
imul
test
ds
and
sbb
mov
shrb
data16
clc
or
js
sub
gs
xchg
mov
orl
sub
mov
out
cmpsb
push
std
clc
les
xor
and
sbb
in
mov
sbb
imul
cmpsl
lahf
arpl
into
adc
jnp
jge
loop
and
insl
lahf
mov
roll
js
push
push
imul
mov
mov
in
out
sub
xchg
data16
mov
lret
lea
pusha
and
add
inc
cmc
arpl
faddl
lock
xchg
fnsave
push
xchg
ljmp
repz
in
pop
sbb
out
push
inc
enter
cltd
cmp
pop
rcll
jge
cmp
fstpl
sti
pop
test
mov
or
inc
fnsave
aam
sub
xor
shr
jo
mov
les
fadd
push
push
dec
add
mov
xchg
popa
icebp
xchg
mov
and
pop
insb
mov
insb
dec
lods
daa
gs
mov
les
push
cmp
mov
dec
push
jo
cwtl
mov
test
inc
pop
inc
push
add
xchg
sbb
arpl
filds
pop
rcl
jle
mov
repnz
dec
adc
pop
and
out
decl
clc
int3
in
mov
sbb
jbe
les
jo
adc
xchg
xchg
hlt
pop
cmp
cmpsb
pop
cs
pop
mov
jl
mov
jecxz
clc
jno
mov
data16
idiv
adc
popf
lock
leave
mov
ja
fiadds
into
ja
les
pop
loopne
clc
mov
test
pushf
cmp
rcr
mov
xchg
or
jp
leave
jne
cmc
sub
cltd
jmp
jns
sub
ds
test
mov
xchg
cmp
xchg
mov
into
and
lods
sub
aaa
push
add
dec
mov
loopne
lea
vxorpd
jbe
pop
dec
mov
jae
dec
imull
dec
dec
out
mov
adc
addr16
vorps
and
xchg
mov
mov
jbe
repz
dec
or
xor
imul
adc
adc
dec
jecxz
popf
xchg
push
add
rcr
mov
mov
mull
pop
and
fimull
inc
adc
pop
mov
sbb
pop
stc
xchg
dec
mov
into
les
mov
or
pop
int
push
out
in
mov
jmp
mov
fistpll
xchg
cmp
fcoml
sbb
sub
mov
push
stc
jbe
cmp
or
mov
xchg
push
or
fwait
inc
mov
stos
filds
rolb
push
enter
dec
sbb
push
jle
nop
int3
popf
cli
arpl
sbb
lods
mov
sarl
fnstsw
xchg
std
jg
pop
enter
mov
popa
scas
xor
sbb
pop
cmp
popf
xor
stos
xor
and
cs
cli
das
scas
popa
adc
adc
pop
mov
mov
repz
enter
inc
adc
bound
push
enter
dec
out
insl
xor
inc
push
pop
sub
and
cwtl
cmp
lea
ja
xchg
xchg
fidivrl
loope
push
pop
xchg
ds
jae
sub
cld
mov
ss
sub
sub
inc
jae
iret
mov
imul
sbb
inc
test
test
data16
xchg
test
loopw
push
add
add
and
push
add
cmpsl
xor
mov
jge
ds
mov
adc
mov
xchg
arpl
cmpsb
ljmp
call
or
je
scas
inc
or
loopne
cmp
loope
xor
aad
into
mov
pminub
push
jecxz
outsl
cmp
dec
or
movsl
cmpsl
xor
cmpsl
or
sbb
inc
es
sbb
dec
movsl
xchg
mov
lea
xchg
inc
cmovno
jbe
rclb
aaa
std
xchg
imul
mov
cmp
xchg
xor
into
dec
mov
jo
popf
test
mov
adc
adcb
xchg
movsl
mov
adc
xor
movsb
sub
and
scas
pop
pop
sub
pop
mov
lods
adc
jle
in
shrb
repnz
xor
xchg
ds
and
cltd
gs
mov
mov
insl
fcomps
les
orb
fwait
sub
sbb
add
jg
push
add
adc
fiaddl
xchg
mov
insb
out
ret
mov
data16
out
jno
cmc
mov
cmp
inc
or
jno
movsb
mov
sbb
fwait
sahf
xor
ds
pop
ret
subb
mov
lock
inc
push
or
mov
frstor
mov
mov
mov
test
or
dec
xor
lods
push
jb
xchg
pop
repz
mov
adcb
push
mov
call
mov
das
lcall
dec
into
xor
js
sbb
jno
sub
cwtl
inc
rcl
add
lahf
or
icebp
leave
xchg
cmp
mov
aaa
cltd
addr16
and
adc
xchg
inc
hlt
dec
push
jns
fists
adc
aad
dec
dec
lret
xchg
data16
adc
adc
pushf
mov
jl
adc
mov
fdivp
cmp
popl
fisubs
jecxz
and
sbb
jecxz
inc
mov
cltd
cmp
and
jae
loope
cli
ds
xchg
inc
pop
pusha
inc
adc
mov
and
test
insb
es
sti
dec
cmp
sub
adc
shl
push
sti
pop
add
ja
dec
jbe
inc
sahf
loop
xor
aaa
xchg
cs
aad
nop
xchg
push
fwait
aas
js
lods
xor
daa
out
ret
xchg
ret
mov
inc
cwtl
daa
imul
int
mov
push
xchg
out
mov
repz
loopne
push
movsl
aam
sub
and
inc
dec
fistpll
dec
loope
cltd
data16
lret
dec
jmp
sbb
aas
mov
cmp
rclb
ret
in
jne
out
ja
cmp
xchg
imul
xchg
insb
mov
mov
lea
mov
loopne
rcll
xor
bound
pop
out
arpl
jbe
mov
xchg
sub
fcoms
pop
sub
gs
jle
addr16
in
addl
out
test
or
push
jbe
mov
test
inc
leave
dec
sbb
dec
sbb
dec
insb
sbbl
insl
test
mov
mov
push
inc
adc
pop
inc
fidivs
data16
cwtl
mov
xchg
jmp
sbb
cmp
pop
cmp
scas
push
out
loopne
pop
lock
jbe
xor
js
xor
xchg
sub
cmpsl
mov
fldcw
shlb
cld
shrb
dec
out
test
mov
push
movsl
shl
sub
and
sub
es
dec
fbstp
dec
loope
cwtl
data16
leave
cltd
push
sbb
xchg
jo
movsb
cmp
rclb
ret
in
jne
out
ja
cmp
xchg
push
xchg
imul
mov
fnstsw
iret
push
fistpll
rcll
xor
popa
xor
bound
jbe
mov
xchg
sub
xlat
xchg
sub
sub
dec
pop
jl
gs
jge
scas
iret
in
addl
out
test
and
mov
push
jne
mov
cmpsl
movl
stc
sbb
dec
sbb
dec
imul
sahf
mov
mov
push
inc
adc
pop
inc
fidivs
gs
xchg
mov
xchg
jmp
or
mov
or
rorb
scas
push
out
fildll
jbe
xor
js
xor
sub
cmpsb
mov
fsubs
shlb
sti
shrb
dec
out
test
lock
mov
sub
and
sub
and
inc
dec
loope
xchg
data16
enter
leave
jmp
xchg
outsl
movsb
cmp
rclb
ret
jecxz
jne
in
ja
aaa
cld
xchg
imul
sbb
mov
fidivrs
rorl
das
push
in
pusha
xor
popa
xorl
aam
sub
xchg
sub
sub
dec
pop
jnp
lods
jl
scas
into
in
addl
out
test
and
mov
push
je
mov
cmpsb
movb
dec
sbb
dec
sbb
dec
push
sbb
mov
cmp
adc
push
inc
adc
pop
inc
arpl
jne
fs
xchg
mov
xchg
call
or
mov
or
rorb
push
out
fisubrs
jne
xor
js
xor
sub
mov
xlat
cmpsl
mov
fprem
iret
data16
shrb
dec
in
test
lock
mov
sub
and
sub
and
inc
dec
loope
xchg
gs
cwtl
push
sbb
jmp
sbb
outsb
movsb
cmp
mov
pop
ret
loop
je
in
ja
ss
xchg
push
mov
mov
mov
mov
fidivrs
rorl
cs
in
pop
xor
popa
xorb
xorb
rcll
sub
daa
scas
inc
pop
sub
lods
jl
scas
int
cmp
out
test
and
mov
push
jae
mov
movsl
lds
test
fcomip
pop
gs
dec
sbb
dec
imul
cmp
mov
rclb
ret
fidivs
arpl
ja
mov
xchg
out
xchg
call
or
rorb
lods
push
out
jne
xor
js
xor
sub
movsb
mov
cmpsb
mov
fdiv
iret
sub
shrb
dec
in
test
lock
or
shl
sub
and
sub
and
inc
fidivs
loope
xchg
gs
xchg
push
sbb
ljmp
insl
cmp
mov
pop
ret
je
in
ja
xor
xchg
imul
aaa
into
or
cmp
push
sub
pop
out
pusha
jg
or
rclb
sub
es
inc
pop
sub
fs
jnp
lods
int3
jmp
dec
out
test
and
mov
push
jb
mov
movsb
les
cmc
lds
notb
gs
inc
pop
decb
sbbl
imul
cmp
push
rclb
ret
popa
fidivs
loopne
xchg
mov
xchg
out
xchg
out
sbb
cmp
rorb
stos
push
out
fsubrl
or
pushl
xor
sub
movsb
mov
movsl
mov
xlat
test
push
jge
out
xchg
or
shl
sub
and
sub
and
fidivs
loopne
xchg
gs
xchg
addr16
out
sbb
jmp
mov
cmp
mov
pop
shl
je
jecxz
jbe
xor
std
xchg
push
mov
mov
fidivl
into
or
cmp
or
cs
out
pop
jg
or
rclb
sub
es
inc
pop
daa
mov
pop
jns
fs
jp
data16
int3
jmp
dec
in
test
pop
or
push
jno
mov
mov
les
cmc
adc
incb
sbbl
push
mov
cmp
or
ret
pusha
fidivs
popa
loopne
xchg
mov
xchg
in
xchg
out
sbb
cmp
rorb
stos
push
out
fldt
jne
cs
ja
xor
sub
mov
mov
test
sub
shrl
dec
in
test
xchg
or
iret
out
sub
and
sub
and
fidivs
dec
loopne
xchg
gs
lds
sbbl
call
mov
cmp
mov
pop
shl
je
loop
jbe
xor
xchg
xor
xchg
mov
mov
mov
fnstenv
into
or
cmp
or
push
in
pop
sub
jae
mov
jne
mov
xchg
sub
rcll
inc
push
es
pop
js
fs
jns
stos
lret
jmp
std
int3
in
test
push
or
push
jo
mov
mov
ret
dec
fcomip
adc
cld
inc
adc
sbbl
test
cltd
mov
mov
push
ds
fidivs
pusha
loopne
xchg
mov
xchg
in
xchg
in
sbb
aaa
push
cmp
mov
rorb
stos
pop
lock
jne
sub
dec
xchg
sub
mov
mov
aad
iret
data16
not
push
jnp
out
xchg
mov
into
out
sub
pop
lock
and
fidivs
dec
loopne
xchg
gs
les
sbb
out
sbb
cmp
cmp
push
mov
je
loope
jbe
xor
xchg
gs
xchg
data16
mov
xchg
mov
fdivs
into
or
cmp
or
push
in
pop
sub
out
pop
jge
or
rclb
sub
scas
inc
push
and
int
test
lret
cld
lret
in
test
sbb
or
dec
outsl
sub
mov
ret
repz
inc
adc
incb
sbbl
test
mov
mov
push
cmp
pop
fidivs
pop
loopne
xchg
mov
xchg
jecxz
xchg
in
sbb
ss
cmp
xchg
rorb
test
jne
sub
ja
cs
xchg
sub
mov
mov
aam
iret
data16
push
jp
out
xchg
or
int
sub
push
out
sub
and
fidivs
dec
loopne
xchg
gs
ret
xchg
addr16
in
sbb
out
sbb
cmp
cmp
mov
pop
mov
loopne
jbe
xor
xchg
fs
xchg
test
mov
xchg
mov
xlat
aaa
into
or
cmp
or
push
in
pop
sub
pop
jl
or
iret
xchg
sub
rcll
inc
push
and
dec
push
jbe
fs
iret
test
cmp
in
test
sbb
mov
dec
outsb
sub
mov
rorl
adc
inc
adc
inc
sbbl
test
mov
cmp
mov
rclb
ret
pop
fidivs
pop
loopne
nop
mov
xchg
loop
xchg
jecxz
sbb
xor
push
cmp
xchg
pop
lock
jne
sub
ja
sub
dec
xchg
sub
mov
mov
shl
iret
and
push
jns
out
xchg
or
int3
in
sub
sbb
aas
inc
fidivs
dec
loopne
xchg
gs
ret
inc
jecxz
sbb
aaa
mov
cmp
mov
pop
mov
jbe
xor
xchg
arpl
std
xchg
test
mov
test
mov
aaa
into
pop
fdivrs
rorb
sub
pop
sub
pop
jnp
or
into
xchg
sub
rclb
inc
push
and
cmpsl
jbe
data16
jmp
cli
leave
in
test
sbb
mov
dec
insl
sub
lahf
mov
dec
fcomip
adc
inc
adc
inc
arpl
sbb
mov
cmp
mov
cmp
or
push
cmp
ret
pop
fidivs
pop
loopne
scas
cld
xchg
loope
xchg
loop
sbb
xor
cmp
test
rolb
cmpsl
pop
lock
jne
sub
ja
sub
xchg
sub
xchg
sub
lahf
mov
shll
iret
data16
shrl
inc
in
test
out
xchg
or
lret
jmp
rcrb
fisubrs
dec
loopne
nop
gs
rcll
sbb
test
mov
cmp
mov
pop
mov
jbe
xor
xchg
bound
std
xchg
arpl
sbb
push
xlat
cmp
or
push
in
pop
sub
pop
jp
or
xchg
sub
into
xchg
sub
and
dec
push
je
cmpsb
je
data16
in
cmp
in
test
sbb
mov
dec
insb
sub
popf
insb
sub
popf
mov
dec
fucomip
adc
inc
adc
inc
bound
xchg
mov
cmp
mov
cmp
or
pop
cmp
ret
pop
fbstp
pop
loopne
lea
xchg
loopne
sbb
xor
sbb
roll
pop
out
movsl
pop
lock
divl
sub
ja
sub
sub
xchg
sub
sahf
mov
rcrb
shlb
repnz
inc
out
test
out
xchg
or
leave
cwtl
or
rcrl
sub
sbb
dec
fildll
dec
loopne
data16
rorb
sbb
loop
sbb
xor
mov
push
mov
fcmovnu
jne
jbe
das
cld
xchg
popa
das
std
xchg
popa
sbbb
mov
sbb
add
daa
push
in
pop
daa
push
out
pop
jns
or
int3
xchg
sub
int3
xchg
sub
pop
mov
push
pop
mov
push
jb
data16
jb
movsb
test
or
dec
sbb
rcrl
dec
fucomip
mov
addr16
aas
push
push
sbb
pusha
xchg
in
movsb
cmp
push
ret
push
ret
pop
cmp
ja
pop
loope
mov
xchg
fdivrp
sbb
xor
push
mov
push
cmp
adcb
andl
icebp
aad
jbe
daa
idivl
sub
sub
xchg
sub
into
popf
mov
iret
out
shlb
icebp
shrb
inc
out
test
lock
or
xchg
push
movsl
enter
sbb
sub
sbb
dec
fildll
loope
lea
mov
filds
adc
mov
cmp
rclb
ret
jne
fneni(8087
ja
sub
xchg
pusha
sbbb
mov
sbb
mov
cmp
add
cmp
add
es
out
push
ja
or
lret
cld
lret
xchg
sub
sbb
mov
push
jo
data16
ret
in
test
out
xchg
push
or
inc
pop
push
movsl
dec
push
sub
lcall
loope
or
cmp
pop
test
pusha
xchg
xchg
mov
cmp
mov
cmp
add
pop
ss
les
push
loopne
mov
jns
stos
xchg
fsubrl
mov
lcall
mov
push
cmp
adcl
out
shll
jbe
idivb
sub
sub
xchg
sub
int
mov
into
out
shlb
lock
inc
out
test
xchg
or
xchg
push
movsl
out
rcrl
sub
sbb
dec
fildll
dec
loope
mov
mov
fiadds
adc
mov
cmp
rclb
ret
fcomp
jne
ja
sub
xchg
pop
sub
sbb
mov
cmp
add
cmp
add
push
in
push
and
je
test
jbe
test
lret
cld
sbb
dec
dec
sbb
iret
mov
ret
hlt
ret
out
xchg
adc
push
movsl
inc
addr16
cwtl
push
dec
fucomip
mov
addr16
cmp
imul
pop
xchg
xchg
mov
cmp
mov
cmp
add
pop
xor
push
loopne
mov
jns
test
add
sub
dec
cmp
adcb
andl
jbe
and
inc
xchg
sub
xchg
sub
int3
fwait
mov
int
shlb
out
shrb
inc
out
test
lock
mov
out
rcll
sub
sbb
dec
fildll
dec
loope
mov
mov
fldl
adc
mov
cmp
push
mov
ret
xlat
fidivs
fchs
ja
sub
xchg
pop
sub
xchg
pop
jle
mov
jg
mov
sarb
iret
add
cmp
add
push
in
push
and
out
push
jne
or
enter
leave
xchg
sub
sbb
dec
dec
outsb
iret
data16
shr
repz
hlt
adc
mov
inc
data16
xchg
addr16
cwtl
mov
dec
loope
or
cmp
imul
mov
push
nop
scas
mov
cmp
add
pop
xor
les
push
loopne
xchg
jns
test
xchg
fisubrl
sbb
sub
push
mov
dec
cmp
jg
cmp
andb
icebp
shl
jbe
and
js
es
xchg
sub
xchg
sub
lret
lcall
push
out
shrb
inc
out
test
lock
or
les
rcll
sub
sbb
dec
fildll
dec
loope
mov
mov
faddl
adc
mov
cmp
rclb
ret
fidivs
fsub
ja
sub
xchg
pop
sub
xchg
pop
jge
mov
jle
mov
iret
cmp
add
cmp
add
push
in
push
and
push
je
or
xchg
sub
enter
sbb
dec
dec
insl
iret
data16
outsb
shrl
shr
repnz
repz
inc
adc
movsl
inc
gs
xchg
data16
xchg
mov
fucomip
mov
addr16
cmp
imul
lea
push
scas
mov
cmp
add
pop
xor
les
push
loopne
xchg
jns
cmpsl
xchg
fldcw
sbb
sub
push
mov
dec
cmp
jle
cmp
jg
pop
out
shlb
jbe
and
js
and
inc
xchg
sub
lret
dec
lret
jmp
addr16
aas
out
test
lock
or
ret
xchg
push
movsl
in
rcll
dec
fildll
dec
loope
mov
mov
fildl
comiss
cmp
rclb
ret
aad
jne
xlat
loopne
or
cld
xchg
pop
sub
xchg
pop
jl
mov
jge
mov
into
cmp
dec
cmp
add
push
out
push
and
push
jae
or
jae
or
clc
xchg
sub
sbb
dec
dec
insb
shlb
insb
shrl
mov
out
xchg
adc
movsl
inc
fs
xchg
fs
xchg
mov
loopne
mov
loope
or
cmp
imul
mov
push
lea
movsl
cmp
add
pop
xor
les
push
loope
test
xchg
add
sub
push
mov
dec
cmp
jge
cmp
jge
pop
lock
sahf
pop
icebp
iret
lock
and
js
and
jbe
xchg
sub
leave
xchg
mov
leave
ljmp
sbb
lock
or
movsl
ret
ret
sub
adc
ss
loope
mov
mov
fiaddl
sbb
pusha
movsb
cmp
rcrl
ret
aam
jbe
aad
ja
sub
xchg
pop
sub
xchg
pop
jnp
mov
jnp
mov
int
sar
int
sar
pop
pop
out
push
pop
pop
lock
jno
or
mov
les
dec
dec
pop
mov
dec
push
push
pushf
mov
lock
adc
movsl
inc
adc
cmpsb
inc
bound
xchg
bound
loope
mov
loop
push
imul
cmp
push
mov
pop
mov
cmp
xor
lds
loope
test
jp
movsl
call
xlat
clc
sbb
mov
dec
cmp
jl
cmp
lock
popf
pop
repnz
out
ja
and
jns
and
sub
inc
xchg
jne,pn
mov
enter
enter
sbb
shrl
cmp
icebp
mov
or
cmpsb
shl
ret
sub
loopne
xor
addr16
mov
flds
push
or
movsl
cmp
add
mov
ret
pop
mov
fbstp
aad
js
daa
std
xchg
pop
sub
xchg
pop
jp
mov
jnp
mov
int3
cmp
std
int
sar
push
pop
out
dec
pop
pop
icebp
push
jo
or
mov
les
dec
dec
pop
mov
dec
imul
push
mov
icebp
mov
femms
movsl
inc
adc
cmpsl
inc
popa
sub
xchg
bound
lds
mov
jecxz
add
imul
pop
xchg
mov
and
lods
cmpsl
ds
ret
pop
xor
pop
xor
js
push
in
test
cltd
xlat
negl
mov
dec
cmp
jnp
ds
pushf
pop
lock
pop
repz
out
ja
and
jp
and
sub
inc
cwtl
das
jne
mov
xchg
mov
enter
sbb
aam
sbb
out
xchg
repnz
or
cmpsl
shl
ret
lds
dec
loopne
xor
addr16
mov
push
mov
fisttpl
cmp
cmpsb
cmp
mov
les
rcr
jbe
aad
jns
es
xchg
pop
sub
mull
xlat
gs
test
loope
insb
loopne
lea
xorl
rolb
or
cmpsb
test
lret
inc
jp
mov
lods
sti
and
adc
dec
pop
xor
stos
int
mov
shl
out
mov
cli
mov
in
jmp
pop
add
outsl
bound
ds
xor
int
xchg
test
cmp
addps
cmpsb
hlt
jl
push
popa
mov
clc
ffreep
sti
add
stos
add
adc
out
jg
out
pop
jo
add
imul
mov
push
ja
data16
jecxz
sub
adc
sub
cmc
mov
mov
prefetcht1
jmp
adc
or
xchg
jnp
jno
loop
stos
scas
stos
loopne
mov
loope
cmp
cwtl
jne
jae
ja
int3
aas
adc
inc
inc
or
push
mov
push
cs
lods
xor
lods
dec
and
dec
mov
xor
sub
and
adc
jb
dec
adc
and
or
xor
cmp
movsb
hlt
popf
sub
adc
mov
stos
push
adc
dec
loope
xchg
mov
pop
cmp
adc
lods
aas
jle
sbb
xchg
pop
enter
mov
jo
xor
cmpsl
or
sbb
jbe
jns
sarl
xchg
cmc
mov
outsl
xor
xor
les
lahf
movsl
popf
sti
movsl
mov
movaps
cmp
and
adcl
icebp
push
adc
fsubrs
mov
cmp
cmpsb
mov
lock
pop
and
fcoms
push
stos
jle
mov
xchg
push
aad
add
sub
cmc
cwtl
add
jge
push
add
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
cmp
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
add
mov
or
push
adc
sub
js,pn
ljmp
outsl
mov
stos
gs
lea
out
jns
repnz
out
adc
push
or
in
cmpl
jl
inc
in
sbbb
outsb
xlat
xchg
in
or
or
daa
in
popa
push
arpl
sahf
imul
test
es
cld
dec
xor
jnp
mov
fisubrl
push
xchg
insb
sbb
mov
sub
and
jne
and
frstor
adc
cli
shl
cmpsb
and
fnstcw
fimull
lock
fimull
in
mov
jge
sbb
xchg
dec
mov
pop
and
mov
fmull
nop
sbb
arpl
fisttpll
push
loope
xchg
je
repz
in
cmp
test
mov
out
pop
fisubrs
or
rolb
sbb
cmp
ret
ds
insl
sarl
mov
cltd
stos
stos
shl
popf
mov
mov
in
jb
adc
mov
gs
mov
je
data16
xor
fimull
sub
inc
add
pop
xor
stos
inc
cmpb
jp
jg
and
nop
loop
addb
sti
adc
inc
adc
call
aas
sbb
mov
mov
cmp
arpl
mov
dec
in
mov
pusha
in
lret
sbb
fisubs
pop
pop
movsl
mov
fsubrl
or
push
scas
loopne
jbe
fcomps
push
mov
mov
mov
pop
pop
fists
in
dec
mov
in
fcmovnb
add
xchg
aad
jnp
xchg
cld
push
mov
lret
imul
fdivs
ljmp
out
bound
inc
mov
mov
mov
inc
stos
and
cwtl
loope
mov
ss
popa
adc
cmpsb
enter
pop
test
sbb
adc
movsb
imul
mov
xlat
fisubl
lea
mov
stc
mov
push
jecxz
push
mov
lock
inc
jl
dec
out
push
adc
shr
mov
call
and
jle
dec
add
pushf
sbb
and
nop
xor
int
out
xor
dec
pop
inc
push
inc
mov
iret
xor
xor
loop
test
jmp
xchg
popf
lods
pusha
repnz
loope
jae
fwait
inc
dec
stos
xor
sbb
stos
bound
ljmp
pop
ja
orb
mov
fdiv
int
je
data16
ljmp
pop
cmpsl
stos
ret
lahf
pop
mov
adc
in
dec
sub
cld
mov
mov
mov
sbb
xchg
dec
aas
js
push
call
loope
pop
ljmp
adc
fldl
fnstsw
cltd
movsl
inc
imul
pop
mov
jecxz
xchg
fldcw
imul
js
push
nop
cmp
sbb
or
scas
push
lods
repnz
jae
test
cmpsl
jnp
ja
mov
mov
mov
sub
dec
push
incl
pop
test
push
lods
stos
jp
jnp
jmp
and
jmp
fwait
ljmp
and
ret
sbb
mov
push
aam
jg
inc
sub
enter
outsl
sub
ss
dec
mov
call
call
dec
mov
les
inc
cmpsl
push
mov
pop
mov
shll
jnp
notl
stc
enter
or
push
lods
stos
adc
mov
aaa
out
adc
push
inc
int
xchg
aas
jnp
sti
xor
in
adc
xchg
adc
scas
xor
mov
nop
ja
pop
pop
pop
inc
jb
mov
cli
nop
jno
js
mov
dec
pop
call
xchg
inc
pop
push
shlb
xor
adc
and
add
imul
outsb
into
cmpsb
in
daa
inc
inc
xchg
jo
dec
push
pop
cmp
add
push
testb
xchg
pop
addr16
stos
dec
repz
push
dec
lods
push
or
negl
pop
pop
add
repz
dec
in
popf
cmc
sbb
cwtl
outsb
push
insb
pop
cmp
cmp
mov
sarl
fidivs
fdivl
xor
jmp
popf
idivl
fldl
cmp
imul
lds
mov
sub
in
mov
imul
lret
xchg
repnz
adc
cli
scas
enter
mov
imul
sub
icebp
jno
sbb
pop
js
adc
orl
xchg
push
lods
pop
jge
cld
loop
cltd
rclb
ja
stos
out
imul
pop
pusha
mov
loop
mov
cmpsb
movsl
sub
shlb
mov
stc
dec
rol
jnp
mov
insl
mov
jp
push
stc
mov
push
adc
clc
adc
pop
xor
push
cld
pop
js
push
jp
inc
test
push
js
lock
gs
push
clc
lret
mov
stos
ja
ljmp
and
and
jle
pushfw
mov
sbb
or
mov
xchg
push
mov
fwait
data16
push
push
out
push
push
and
push
cmp
pop
push
cwtl
cmp
mov
test
xchg
pop
jae
es
fnstcw
cmpl
sbbl
mov
jno
sub
clc
xchg
cmp
cmp
cmp
mov
mov
ret
sub
dec
cmpsb
dec
and
out
sub
loope
fsub
lods
xchg
push
in
pop
int3
out
mov
cmpsb
iret
scas
leave
add
push
mov
jo
cltd
in
fstps
addb
xchg
stc
jge
mov
or
cmc
imul
ljmp
cmp
rcrl
ljmp
sbb
add
sbb
dec
adc
and
push
fiadds
pop
push
sub
nop
pop
or
pusha
pop
aaa
cmpsl
sbb
inc
fstl
mov
mov
push
xor
inc
xchg
cmp
xchg
outsb
icebp
push
std
shrl
fsts
fwait
daa
and
add
xchg
mov
andb
das
jb
sbb
jb
sbb
jb
sbb
xor
xchg
iret
incl
jo
js
call
das
lahf
adc
xchg
rcrb
adc
hlt
inc
out
xchg
dec
inc
sbb
lahf
adc
mov
inc
bound
xor
sbb
cs
sbb
ja
jmp
mov
or
stc
es
xchg
xor
push
jl
mov
in
sub
loope
sub
fadds
xchg
or
adc
aad
cmpsl
pop
adc
dec
mov
aaa
stos
push
lds
popf
ss
lret
or
mov
repnz
popa
lcall
stos
sub
ret
adc
push
xor
sub
pop
enter
test
test
addr16
imul
loop
xchg
loope
inc
jbe
movsb
pop
sbb
imul
dec
jle
movsb
or
pop
or
xor
cmpsl
inc
cmp
lahf
or
repnz
call
or
and
inc
sahf
mov
dec
xor
es
cltd
push
xor
stos
stc
xor
xor
fs
and
cld
xchg
shrl
stc
sub
jle
out
xchg
data16
insl
sbb
push
cmpsl
adc
or
mov
push
dec
inc
cli
jge
lahf
lods
sub
sub
daa
sbb
in
xchg
adc
mov
test
mov
ret
or
cmp
scas
clc
push
and
test
pop
repnz
inc
out
sub
int
fidivrl
loopne
inc
sbb
pushf
xlat
xchg
cmp
jle
xor
lods
sub
rclb
xchg
js
or
shl
xchg
fdivl
stos
jmp
pop
cmpb
aas
int3
mov
pop
out
in
push
loop
pushf
inc
cmpsl
int
mov
stos
out
push
loopne
bound
sbb
push
add
jle
push
ds
mov
divl
jge
pop
add
cld
scas
add
cwtl
mov
in
mov
dec
cmp
cwtl
dec
pop
inc
movsl
js
in
jp
daa
sarl
mov
