add
add
pusha
sbb
add
insb
sbb
add
mov
inc
add
and
cmp
inc
add
and
inc
add
add
inc
add
add
add
add
inc
inc
add
or
push
add
inc
add
or
insb
inc
add
or
jne
add
add
int3
addb
add
add
inc
add
add
inc
add
push
inc
popl
add
adc
mov
inc
add
add
xchg
inc
add
add
inc
add
sbb
inc
add
and
push
and
sub
add
js
inc
add
add
xor
add
xchg
xor
add
add
add
inc
add
add
addl
add
add
add
enter
jmp
bound
inc
sub
dec
dec
dec
dec
nop
jmp
mov
shl
mov
push
push
call
mov
call
pop
call
call
push
call
pop
push
push
call
mov
push
jmp
jmp
xor
mov
ret
mov
ret
pusha
mov
push
push
ret
mov
or
je
cmpl
jae
mov
call
mov
push
push
call
push
call
or
jne
mov
call
push
push
pushl
call
pushl
call
pop
ret
mov
or
je
call
mov
cmp
jae
mov
call
ret
cmpl
jb
pushl
call
or
je
push
push
call
push
call
pushl
call
ret
ret
cmpl
jb
call
pushl
call
ret
mov
mov
mov
ret
nop
push
push
push
add
xor
xor
mov
xor
movl
mov
xor
movl
fldl
fdivl
mov
xor
movl
mov
xor
movl
fstp
fldl
fdivl
mov
movl
mov
movl
fstp
fldl
faddl
add
fstpl
call
add
fstp
xor
mov
imul
add
xor
inc
inc
cmp
jl
lea
mov
movl
movl
mov
cmp
mov
jge
dec
cmp
jl
lea
mov
mov
lea
rep
movl
movl
add
pop
pop
pop
ret
add
add
add
xchg
inc
push
push
push
push
mov
add
push
dec
jne
mov
add
movl
mov
movl
mov
xor
mov
imul
add
xor
inc
inc
cmp
jl
lea
mov
mov
mov
rep
mov
mov
fildl
lea
mov
mov
lea
fstpl
mov
fildl
fstpl
rep
movl
movl
lea
movl
imul
mov
lea
movl
movl
mov
mov
mov
shl
add
lea
shl
add
add
mov
call
lea
mov
mov
cltd
idiv
mov
mov
cmp
jge
inc
cmp
jl
xor
xor
mov
movl
mov
movl
fldl
fdivl
add
fstpl
call
add
mov
fstp
cmp
jle
cmp
mov
cmp
jle
cmp
add
pop
pop
pop
ret
nop
push
mov
add
push
push
push
mov
xor
mov
mov
cmp
jle
lea
movl
movl
mov
push
push
push
call
xor
add
mov
xor
movl
mov
mov
movl
fldl
fdivl
movl
fstp
inc
add
cmp
jg
lea
movl
addl
mov
cmp
jge
dec
cmp
jl
xor
xor
mov
add
movl
mov
movl
fldl
fdivl
fstpl
call
mov
add
fstp
mov
add
fildl
fstpl
call
add
fstp
mov
mov
cmp
jge
cmp
lea
imul
mov
jmp
cld
stc
add
mov
shl
add
lea
shl
mov
mov
mov
mov
mov
mov
jmp
ror
nop
nop
adc
cmp
jge
inc
cmp
jl
xor
pop
pop
pop
mov
pop
ret
nop
push
mov
push
push
mov
imul
push
call
pop
mov
test
je
push
push
push
call
add
mov
pop
pop
pop
ret
nop
push
mov
mov
push
call
pop
pop
ret
nop
push
mov
mov
push
call
pop
pop
ret
nop
push
mov
mov
mov
mov
pop
ret
nop
push
mov
add
mov
push
push
push
lea
mov
call
test
jne
mov
jmp
cmpl
je
call
jmp
lea
mov
push
push
push
push
push
push
push
mov
movw
mov
incl
mov
incl
push
push
call
add
push
call
pop
mov
test
je
mov
mov
mov
pop
pop
pop
mov
pop
ret
add
add
add
xor
add
add
ja
add
inc
add
add
add
add
add
aam
inc
add
add
je
cmp
bound
pop
popa
insb
insb
outsl
arpl
add
add
add
add
add
in
add
mov
call
movw
mov
mov
mov
incl
mov
mov
mov
mov
mov
mov
mov
pop
ret
nop
nop
add
add
nop
add
call
popa
fs
popa
insb
insb
outsl
arpl
sub
add
add
add
xor
add
add
jae
add
inc
add
add
add
add
add
add
add
dec
add
cmp
gs
gs
imul
add
push
mov
mov
pop
ret
nop
nop
push
mov
mov
pop
ret
nop
nop
push
mov
mov
push
call
pop
pop
ret
nop
push
mov
add
mov
call
lea
mov
push
push
push
push
push
push
push
mov
movw
mov
lea
incl
mov
incl
push
push
call
add
mov
pop
ret
push
call
pop
ret
push
mov
add
mov
call
movw
incl
incl
mov
mov
mov
mov
mov
mov
mov
pop
ret
nop
push
mov
add
mov
call
subl
push
push
call
add
mov
mov
mov
pop
ret
nop
nop
nop
push
push
push
mov
mov
cmpl
jne
mov
cmp
je
cmp
jne
movl
jmp
movl
mov
mov
add
dec
dec
not
and
push
push
push
push
call
mov
test
jne
xor
jmp
mov
mov
pop
pop
pop
ret
nop
nop
push
push
push
mov
mov
push
push
push
mov
push
call
mov
mov
test
setne
and
pop
pop
pop
ret
nop
push
push
push
mov
mov
test
mov
je
push
push
push
push
call
test
jne
mov
mov
sub
call
xor
jmp
add
sub
test
jne
mov
pop
pop
pop
ret
nop
push
push
push
call
dec
je
xor
ret
mov
ret
push
push
push
call
dec
je
xor
ret
mov
ret
nop
nop
nop
push
call
cmp
je
push
call
pop
ret
nop
nop
push
mov
push
push
push
mov
mov
test
je
test
je
cmpl
jne
xor
jmp
push
call
mov
test
jne
xor
jmp
push
push
call
mov
push
push
call
mov
push
push
call
mov
mov
cmpl
je
cmpl
je
mov
cmpl
jne
xor
jmp
mov
pop
pop
pop
pop
ret
xor
ret
nop
push
mov
mov
push
call
pop
pop
ret
push
mov
mov
push
call
pop
pop
ret
push
mov
mov
push
mov
push
call
add
pop
ret
nop
nop
push
mov
call
test
jne
movl
movl
movl
movl
movl
mov
mov
pop
ret
push
mov
push
call
pop
mov
push
call
pop
pop
ret
push
mov
push
call
pop
mov
push
call
pop
pop
ret
push
mov
push
call
pop
mov
push
mov
push
call
add
pop
ret
nop
nop
ret
nop
nop
nop
movl
ret
nop
cmpl
je
call
ret
ret
nop
nop
nop
push
push
call
add
ret
nop
mov
push
call
pop
ret
nop
nop
nop
mov
push
call
pop
ret
nop
nop
nop
mov
jmp
mov
add
add
add
mov
mov
add
cmp
jl
mov
xor
add
add
add
xor
mov
mov
ret
push
mov
push
push
push
mov
mov
mov
xor
cmp
jae
or
jmp
movl
mov
mov
mov
mov
xor
mov
mov
mov
mov
test
je
mov
jmp
mov
mov
lea
xor
mov
and
add
add
cmpl
jne
mov
add
add
and
lea
mov
mov
mov
and
add
add
call
add
mov
sub
sub
sub
lea
mov
and
movl
cmp
jae
mov
add
add
add
jmp
mov
mov
mov
mov
mov
mov
mov
lea
mov
xor
pop
pop
pop
pop
ret
nop
push
mov
push
push
mov
mov
and
mov
mov
add
add
cmp
jbe
testb
je
sub
mov
sub
mov
and
sub
cmp
jbe
or
jmp
sub
mov
and
mov
add
mov
mov
and
movl
mov
and
cmp
jae
mov
mov
mov
mov
mov
mov
and
add
mov
mov
mov
mov
and
add
add
add
mov
mov
mov
mov
and
add
mov
mov
jmp
or
jmp
mov
sub
mov
sub
add
mov
and
xor
mov
add
push
call
pop
add
xor
pop
pop
pop
ret
nop
push
mov
add
push
push
push
mov
mov
add
and
cmpl
jne
call
mov
cmpl
jne
mov
add
add
and
add
mov
test
je
mov
mov
sub
cmp
jae
mov
add
cmp
jae
mov
jmp
mov
mov
dec
add
add
cmp
jae
mov
jmp
mov
dec
not
and
add
cmp
jae
mov
jmp
mov
add
cmp
jae
mov
jmp
mov
mov
dec
add
add
cmp
jae
mov
jmp
mov
dec
not
and
add
mov
mov
mov
sub
add
call
test
je
mov
sub
add
push
push
call
add
xor
jmp
mov
mov
add
call
test
je
addl
mov
add
push
push
call
add
xor
jmp
or
jmp
mov
test
jne
lea
lea
lea
cmp
jae
mov
jmp
lea
call
test
jne
or
jmp
mov
add
cmp
jae
mov
jmp
mov
dec
mov
add
add
add
cmp
jae
mov
jmp
mov
dec
mov
not
and
test
mov
je
mov
mov
add
cmp
jne
cmpl
jge
mov
mov
sub
test
je
mov
mov
add
call
test
je
add
mov
push
push
call
add
jmp
or
jmp
mov
mov
sub
call
test
je
mov
sub
add
mov
incl
mov
mov
mov
add
add
sub
push
push
call
add
xor
jmp
or
jmp
mov
test
jne
mov
mov
call
test
jne
mov
call
or
jmp
add
mov
push
push
mov
push
call
add
xor
pop
pop
pop
pop
pop
pop
ret
nop
nop
push
mov
push
push
push
mov
mov
and
add
add
mov
cmp
jbe
mov
jmp
mov
mov
sub
cmp
jbe
xor
jmp
dec
not
and
mov
mov
test
je
mov
mov
add
add
cmp
jne
mov
sub
push
push
call
add
jmp
decl
mov
mov
mov
mov
sub
sub
mov
mov
call
sub
mov
mov
call
mov
mov
sub
mov
mov
mov
mov
add
cmp
jbe
mov
sub
mov
add
call
mov
sub
sub
mov
mov
jmp
mov
test
jne
xor
pop
pop
pop
pop
ret
nop
nop
nop
push
mov
mov
test
je
mov
and
cmp
jb
add
call
pop
ret
push
call
pop
pop
ret
nop
push
mov
push
mov
test
je
call
lea
mov
test
je
mov
sub
and
add
add
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
jmp
orl
mov
and
add
add
testb
je
mov
and
add
add
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
and
orl
mov
and
cmp
jae
mov
add
add
add
jmp
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
and
cmpl
jne
mov
cmp
jbe
mov
jmp
mov
cmp
jbe
push
call
pop
call
pop
pop
ret
nop
nop
nop
push
mov
push
push
mov
xor
mov
add
and
lea
mov
call
test
je
addl
sub
mov
mov
mov
pop
pop
pop
ret
nop
push
mov
mov
test
jne
xor
pop
ret
cmp
jb
push
call
pop
pop
ret
push
call
pop
pop
ret
nop
push
mov
push
push
mov
test
jne
xor
jmp
call
cmp
jae
mov
jmp
lea
and
cmpl
jne
push
call
pop
cmp
jae
mov
add
mov
add
add
mov
cmp
je
mov
andl
lea
mov
and
andl
mov
mov
mov
mov
mov
call
mov
jmp
mov
mov
cmp
jne
mov
add
add
add
jmp
add
cmp
je
mov
test
je
mov
jmp
mov
jmp
mov
mov
mov
cmp
jbe
movl
mov
jmp
mov
cmp
ja
mov
mov
cmp
jne
mov
cmp
je
mov
and
mov
sub
cmp
jae
andl
mov
and
andl
cmp
jb
mov
mov
mov
mov
lea
mov
mov
mov
call
mov
jmp
mov
sub
mov
and
mov
add
add
lea
mov
lea
mov
cmp
jae
add
add
add
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
lea
call
mov
jmp
jmp
lea
push
call
pop
test
jne
call
push
call
pop
jmp
call
xor
pop
pop
pop
ret
nop
nop
add
movl
push
call
mov
add
ret
push
push
push
push
push
mov
test
je
mov
mov
decl
mov
lea
test
jl
mov
mov
mov
sub
push
mov
pop
mov
sub
sub
mov
mov
mov
call
mov
call
dec
add
test
jge
mov
test
jne
pop
pop
pop
pop
pop
ret
push
mov
push
push
push
push
mov
call
mov
add
mov
and
add
add
cmp
jae
mov
jmp
lea
and
mov
and
cmp
jne
call
mov
jmp
mov
and
test
je
mov
and
add
add
cmp
ja
xor
test
mov
je
mov
and
cmp
jb
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
andl
mov
and
add
mov
mov
sub
cmp
jb
sub
mov
mov
and
add
mov
and
add
add
mov
lea
mov
and
orl
cmp
jae
mov
add
add
add
jmp
cmpl
je
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
call
mov
jmp
call
xor
pop
pop
pop
pop
pop
ret
push
mov
push
push
push
mov
mov
add
and
mov
mov
and
sub
cmp
jne
mov
jmp
mov
sub
cmp
jae
call
mov
push
call
pop
mov
test
je
push
push
push
call
add
push
call
pop
call
mov
jmp
jmp
mov
sub
cmp
jae
mov
push
call
pop
mov
call
test
je
mov
push
push
push
call
add
push
call
pop
call
mov
jmp
jmp
lea
mov
add
sub
add
call
sub
mov
mov
pop
pop
pop
pop
ret
nop
nop
nop
push
mov
push
push
push
push
mov
mov
test
jne
push
call
pop
xor
jmp
test
jne
push
call
pop
jmp
mov
and
cmp
jb
push
push
call
add
jmp
push
push
call
add
test
je
mov
jmp
lea
mov
call
push
call
pop
mov
test
je
mov
mov
and
cmp
jb
mov
mov
and
push
push
push
call
add
push
call
pop
call
mov
pop
pop
pop
pop
pop
ret
push
mov
mov
test
jne
xor
pop
ret
add
mov
and
mov
pop
ret
nop
nop
ret
nop
nop
nop
ret
nop
nop
nop
push
push
push
call
add
push
push
push
push
call
add
push
call
add
ret
nop
nop
nop
push
mov
add
mov
call
movw
push
call
incl
incl
incl
incl
movl
mov
mov
mov
mov
incl
mov
mov
mov
mov
mov
mov
mov
pop
ret
nop
nop
push
mov
add
mov
call
decl
decl
push
push
call
add
decl
decl
push
push
call
add
decl
cmpl
je
xor
push
mov
call
mov
mov
mov
pop
ret
nop
nop
add
add
add
xor
add
add
ja
add
inc
add
add
add
add
add
clc
sub
add
push
add
cmp
bound
pop
arpl
je
add
cwtl
pop
inc
add
add
add
add
add
add
add
xor
add
add
ja
add
inc
add
add
add
add
add
mov
inc
add
add
je
cmp
bound
pop
je
jo
imul
add
add
add
add
add
add
xor
incl
add
add
inc
add
add
add
add
add
add
push
push
push
push
inc
dec
jne
gs
push
mov
push
mov
test
je
cmpl
je
xor
mov
push
call
testb
je
push
call
pop
pop
pop
ret
push
mov
add
mov
push
mov
call
test
je
decl
push
push
call
add
testb
je
push
call
pop
mov
mov
pop
mov
pop
ret
nop
nop
push
mov
add
mov
push
mov
call
test
je
decl
push
push
call
add
testb
je
push
call
pop
mov
mov
pop
mov
pop
ret
nop
nop
push
mov
add
mov
call
movw
push
call
movl
incl
mov
mov
mov
pop
ret
nop
push
mov
add
mov
call
decl
cmpl
je
xor
push
mov
call
mov
mov
mov
pop
ret
push
mov
mov
test
je
mov
mov
testb
je
push
call
pop
pop
ret
push
mov
add
mov
call
movl
cmpl
je
movw
mov
mov
mov
decl
push
mov
push
call
add
testb
je
mov
push
call
pop
mov
mov
mov
pop
ret
push
mov
push
push
mov
mov
mov
mov
mov
shr
shr
cld
rep
mov
and
rep
pop
pop
pop
ret
push
mov
push
push
mov
mov
mov
mov
cmp
jb
je
std
lea
lea
and
rep
mov
shr
shr
sub
sub
rep
cld
jmp
cld
shr
shr
rep
mov
and
rep
mov
pop
pop
pop
ret
nop
nop
push
mov
push
mov
mov
mov
mov
test
je
mov
lea
mov
mov
shr
je
mov
mov
dec
je
mov
mov
dec
je
mov
mov
dec
je
mov
mov
dec
je
mov
mov
dec
je
mov
mov
lea
dec
jne
mov
mov
mov
pop
pop
ret
mov
mov
pop
pop
ret
and
je
mov
dec
je
mov
mov
pop
pop
ret
nop
nop
push
mov
push
mov
mov
mov
cld
rep
mov
pop
pop
ret
push
mov
push
push
mov
mov
xor
cld
repnz
lea
mov
mov
repnz
not
sub
xchg
mov
shr
shr
cld
rep
mov
and
rep
mov
pop
pop
pop
ret
mov
test
jne
mov
add
mov
sub
and
je
not
and
je
test
jne
test
jne
test
jne
jmp
add
testb
je
testb
je
testb
je
dec
and
jmp
dec
dec
dec
mov
dec
sub
ret
nop
nop
push
mov
push
push
mov
mov
xor
cld
repnz
mov
lea
and
mov
jecxz
mov
mov
test
je
inc
inc
dec
jne
mov
shr
jecxz
mov
mov
test
je
mov
mov
test
je
mov
mov
test
je
mov
add
mov
add
test
je
dec
jne
movb
mov
pop
pop
pop
ret
nop
nop
push
mov
push
push
mov
mov
mov
cmp
jl
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
cmp
jne
sub
add
add
cmp
jge
test
jne
xor
jmp
mov
mov
cmp
jne
inc
inc
dec
jne
xor
mov
xor
mov
sub
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
call
pop
mov
inc
push
call
pop
mov
test
je
push
push
push
call
add
mov
pop
pop
pop
pop
ret
nop
nop
push
mov
xor
mov
jmp
inc
add
cmpw
jne
mov
pop
ret
push
mov
push
push
mov
push
call
pop
mov
xor
mov
mov
mov
cmp
jbe
mov
mov
inc
add
add
cmp
ja
mov
movw
mov
pop
pop
pop
ret
nop
push
mov
add
mov
lea
mov
movl
movw
movw
movl
addr16
mov
mov
pop
ret
addr16
ret
sub
inc
inc
inc
js
xor
rolb
push
push
push
push
push
pushl
pushl
pushl
pushl
call
add
pop
pop
pop
pop
add
ret
push
mov
add
push
push
push
mov
testb
jne
push
push
push
call
add
mov
testb
jne
push
push
push
call
add
mov
testb
jne
push
push
push
call
add
mov
movzwl
add
mov
test
je
testb
jne
cmpl
je
mov
and
cmp
je
xor
jmp
mov
mov
push
push
call
add
test
je
cmpl
je
mov
jmp
testb
je
pushl
pushl
push
push
call
add
test
je
mov
jmp
add
jmp
mov
movzwl
add
mov
test
je
cmpl
je
mov
and
cmp
je
xor
jmp
mov
mov
push
push
call
add
test
je
cmpl
je
mov
jmp
testb
je
pushl
pushl
push
push
call
add
test
je
mov
jmp
add
jmp
xor
pop
pop
pop
pop
pop
pop
ret
push
mov
add
push
push
mov
call
xor
mov
test
je
test
je
mov
test
je
push
push
mov
call
add
mov
test
jne
inc
cmp
jl
mov
mov
pop
pop
mov
pop
ret
push
mov
add
xor
xor
xor
push
push
push
mov
mov
mov
cmpl
je
mov
testb
jne
push
push
push
call
add
cmpl
je
mov
testb
jne
push
push
push
call
add
cmpl
je
mov
testb
jne
push
push
push
call
add
cmpl
je
pushl
pushl
call
add
test
je
push
push
push
call
add
pushl
pushl
call
add
test
je
xor
jmp
cmpl
je
pushl
pushl
call
add
test
je
push
push
push
call
add
mov
testb
jne
xor
jmp
xor
mov
mov
movzwl
add
mov
test
je
testb
jne
cmpl
je
mov
and
cmp
je
xor
jmp
mov
mov
mov
mov
add
mov
testb
je
mov
mov
push
pushl
call
add
test
jne
testb
je
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
push
call
add
test
je
mov
mov
mov
mov
jmp
jmp
cmpl
je
cmp
jne
mov
jmp
cmpl
je
cmpl
jne
push
push
push
call
add
push
push
pushl
push
push
pushl
pushl
push
push
call
add
test
je
cmpl
je
cmp
jne
mov
or
jmp
incl
mov
mov
mov
add
jmp
cmpl
jne
incl
mov
movzwl
add
jmp
mov
mov
mov
cmpl
je
xor
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
push
push
push
push
mov
mov
cmpl
jne
push
push
push
call
add
mov
test
jne
xor
jmp
mov
add
mov
cmpl
je
mov
mov
mov
pushl
push
call
add
test
je
mov
mov
mov
jmp
testb
je
movzwl
add
test
je
lea
push
pushl
push
push
call
add
test
je
mov
mov
mov
jmp
add
jmp
pop
pop
pop
pop
pop
ret
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
push
call
add
push
push
call
add
ret
nop
nop
nop
push
mov
push
mov
test
jne
mov
pop
pop
ret
cmpw
jne
push
push
push
call
add
movzwl
add
pop
pop
ret
nop
push
mov
push
push
push
mov
mov
test
jne
push
push
push
call
add
test
jne
push
push
push
call
add
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
je
xor
jmp
mov
or
test
je
xor
jmp
movzwl
add
cmpw
jne
push
push
push
call
add
movzwl
add
cmpw
jne
push
push
push
call
add
movsbl
movsbl
inc
inc
cmp
je
xor
jmp
test
jne
mov
pop
pop
pop
pop
ret
nop
push
mov
push
push
push
push
mov
mov
mov
cmp
jne
mov
jmp
movzwl
movzwl
mov
mov
and
test
je
and
andl
cmp
je
test
jne
mov
mov
and
and
cmp
je
mov
and
not
and
test
je
xor
jmp
or
orl
cmp
je
xor
jmp
mov
mov
mov
jmp
mov
and
test
je
mov
cmp
je
test
jne
mov
or
je
xor
jmp
mov
mov
mov
jmp
push
push
call
add
test
je
mov
jmp
test
je
testb
je
testb
je
push
pushl
push
push
call
add
jmp
xor
pop
pop
pop
pop
pop
ret
nop
push
mov
mov
test
je
mov
mov
testb
je
push
call
pop
pop
ret
push
mov
push
push
mov
mov
mov
cmp
jne
mov
jmp
cmpl
je
mov
testb
jne
cmpl
je
mov
testb
je
xor
jmp
push
call
pop
push
push
call
pop
mov
pop
mov
cmp
jne
test
je
mov
cmp
jne
add
add
test
jne
sete
and
pop
pop
pop
ret
nop
nop
nop
push
mov
add
mov
push
push
push
mov
call
cmpl
mov
jne
lea
mov
push
push
push
push
push
push
push
mov
mov
lea
mov
push
push
call
add
test
je
testb
je
xor
jmp
sub
cmpl
je
push
push
push
call
add
mov
jmp
mov
mov
add
sar
and
mov
mov
mov
test
je
cmp
jne
cmp
je
mov
test
jne
test
jne
push
call
pop
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
mov
mov
mov
pop
ret
nop
nop
push
mov
push
push
push
mov
mov
cmpl
jne
cmpl
je
mov
jmp
cmpl
jne
mov
jmp
mov
mov
movzbl
lea
push
call
pop
mov
push
inc
push
pushl
call
add
mov
movb
mov
jmp
pushl
call
pop
pop
pop
pop
pop
ret
nop
push
mov
push
push
mov
mov
cmpl
jne
mov
jmp
movzwl
add
lea
push
push
push
push
call
add
test
je
mov
jmp
movzwl
add
lea
push
push
push
push
call
add
test
je
mov
jmp
mov
test
je
push
push
push
call
add
xor
pop
pop
pop
ret
nop
nop
or
add
add
xor
add
add
jae
add
inc
add
add
add
add
add
add
add
ss
add
add
jae
cmp
je
jo
pop
imul
add
add
add
add
xor
add
add
ja
add
inc
add
add
add
add
add
inc
cmp
add
push
add
gs
imul
jae
add
mov
add
add
add
add
in
push
mov
test
je
push
push
call
add
testb
je
push
call
pop
pop
pop
ret
nop
nop
cmpl
jne
movl
cmpl
jne
movl
ret
nop
push
mov
add
mov
push
push
push
call
mov
cmp
je
movw
call
movw
jmp
call
call
mov
mov
pop
pop
pop
mov
pop
ret
nop
call
andl
mov
cmp
je
call
call
ret
nop
nop
nop
push
push
call
push
call
mov
cmpl
jne
movl
ret
nop
push
mov
add
mov
push
push
push
call
call
andl
mov
cmpl
jne
pushl
push
push
call
add
call
mov
movw
call
movw
jmp
call
call
mov
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
call
andl
mov
cmpl
jne
pushl
push
push
call
add
mov
call
call
ret
nop
nop
nop
push
mov
add
push
mov
test
setne
and
test
jne
test
jne
lea
push
call
pop
mov
push
push
call
add
push
call
add
call
pop
pop
pop
pop
ret
nop
push
mov
push
mov
call
add
mov
movl
movl
pop
pop
ret
nop
push
mov
mov
pop
ret
nop
nop
push
mov
add
push
push
push
mov
mov
mov
cmpl
jne
xor
jmp
mov
cmp
je
cmp
jne
mov
mov
call
call
cmpl
jne
cmpl
je
push
call
pop
cmpl
je
mov
push
push
push
push
call
add
test
jne
xor
jmp
cmpl
je
mov
push
push
push
push
call
add
test
jne
xor
jmp
cmpl
je
mov
mov
cmp
je
cmp
jne
mov
cmp
jb
cmp
jbe
push
push
push
push
push
call
add
mov
mov
lea
push
call
pop
pop
pop
pop
pop
pop
ret
nop
nop
nop
push
mov
mov
xor
mov
movl
push
call
pop
pop
ret
nop
nop
push
mov
mov
push
call
pop
pop
ret
nop
push
mov
mov
mov
mov
pop
ret
nop
movl
ret
nop
movl
movl
ret
nop
nop
nop
mov
test
je
push
call
pop
ret
nop
nop
nop
mov
test
je
push
call
pop
ret
nop
nop
nop
push
mov
mov
mov
mov
addr16
pop
ret
push
mov
mov
mov
cmp
jne
mov
addr16
pop
ret
cmp
je
cmp
je
mov
jmp
mov
mov
jmp
jmp
nop
nop
mov
mov
jmp
push
push
push
push
push
push
push
call
pop
pop
pop
ret
push
mov
call
pop
ret
nop
nop
push
mov
push
mov
cmp
jb
xor
pop
pop
ret
mov
push
call
cmp
sete
and
pop
pop
ret
nop
nop
nop
push
mov
mov
push
call
cmp
sete
and
pop
ret
nop
push
mov
push
push
push
mov
cmp
jb
push
call
pop
jmp
mov
sub
jb
je
dec
je
jmp
xor
jmp
mov
jmp
mov
jmp
push
call
pop
jmp
push
call
pop
andl
push
push
mov
push
mov
push
call
mov
inc
jne
call
push
call
pop
mov
pop
pop
pop
pop
ret
push
mov
add
push
push
push
mov
mov
cmp
jb
push
call
pop
jmp
mov
inc
cmp
jae
xor
jmp
mov
push
call
pop
mov
testb
je
push
push
mov
push
call
add
mov
testb
jne
mov
push
push
mov
push
call
add
mov
jmp
mov
xor
mov
xor
mov
jmp
lea
jmp
mov
inc
cmp
jne
incl
movb
inc
movb
inc
jmp
mov
inc
lea
mov
sub
cmp
jge
mov
sub
cmp
jb
lea
mov
sub
lea
push
push
mov
push
call
add
lea
sub
cmp
je
cmp
jne
or
jmp
mov
sub
add
jmp
add
mov
sub
cmp
jb
mov
sub
mov
push
call
pop
mov
pop
pop
pop
mov
pop
ret
nop
nop
push
mov
mov
test
je
movb
xor
pop
ret
nop
nop
nop
push
push
push
call
xor
mov
mov
jmp
testb
je
cmpl
je
push
call
pop
inc
add
mov
add
test
jne
call
mov
pop
pop
pop
ret
nop
nop
push
mov
push
mov
cmp
jb
push
call
pop
pop
pop
ret
push
lea
push
mov
push
mov
push
mov
push
call
dec
je
call
pop
pop
ret
mov
pop
pop
ret
nop
nop
push
mov
mov
push
mov
push
mov
push
call
add
pop
ret
nop
nop
nop
push
mov
push
push
push
mov
mov
mov
testb
je
mov
push
call
pop
andw
xor
mov
lea
mov
mov
cmpl
je
test
jbe
movl
test
jne
push
call
pop
mov
test
je
orw
jmp
or
jmp
mov
mov
mov
cmpl
jne
orw
xor
pop
pop
pop
pop
ret
nop
nop
nop
push
mov
push
push
mov
test
jne
call
xor
jmp
cmp
je
or
jmp
push
call
cmpl
pop
jl
testb
jne
lea
cmp
jne
xor
mov
lea
cmp
jne
mov
mov
xor
jmp
mov
add
inc
sub
push
mov
mov
push
movsbl
push
call
add
cmp
je
testb
jne
orw
or
jmp
xor
push
call
pop
mov
pop
pop
pop
ret
nop
push
push
push
push
call
xor
mov
mov
jmp
mov
test
jge
mov
add
inc
sub
push
mov
mov
push
movsbl
push
call
add
cmp
je
testb
jne
orw
inc
add
mov
add
test
jne
call
mov
pop
pop
pop
pop
ret
push
mov
mov
mov
pop
ret
nop
nop
nop
push
mov
mov
test
je
mov
mov
pop
ret
nop
push
mov
push
push
push
push
mov
mov
mov
testb
je
mov
cmpl
je
push
movsbl
push
call
add
inc
jne
xor
jmp
decl
inc
cmpl
jne
mov
jmp
jmp
mov
test
je
cmp
jb
mov
mov
add
test
jl
test
jne
or
sub
mov
jmp
push
call
pop
test
je
xor
jmp
push
push
mov
push
call
mov
add
add
mov
mov
add
jmp
cmpl
je
cmpl
je
push
call
pop
test
je
xor
jmp
push
push
movsbl
push
call
add
cmp
je
cmp
jbe
xor
jmp
mov
pop
pop
pop
pop
pop
ret
nop
nop
nop
mov
push
call
pop
ret
nop
nop
nop
mov
test
je
push
call
pop
xor
mov
movl
ret
nop
mov
push
call
pop
ret
nop
nop
nop
push
mov
push
push
mov
mov
test
je
cmpl
jne
call
cmpl
jne
mov
shl
push
call
pop
mov
test
jne
push
call
pop
push
push
mov
push
call
add
mov
cmpl
jne
push
mov
shl
add
push
call
add
call
mov
mov
push
call
pop
pop
pop
pop
ret
push
mov
cmpl
jne
push
push
push
call
add
mov
mov
mov
push
call
pop
cmpl
je
call
pop
ret
nop
nop
nop
push
mov
xor
mov
jmp
cmpl
je
inc
add
cmp
jl
cmp
jne
or
pop
ret
mov
mov
mov
mov
pop
ret
push
mov
mov
mov
cmp
jne
xor
mov
jmp
inc
add
cmp
jge
cmpl
jne
mov
cmp
jbe
cmp
ja
or
pop
ret
mov
test
je
cmpl
je
or
pop
ret
mov
mov
mov
pop
ret
push
mov
mov
cmp
jae
xor
mov
pop
ret
nop
nop
nop
push
mov
add
mov
test
push
mov
lea
je
cmpl
jne
dec
add
test
jne
test
jne
test
jne
xor
jmp
lea
add
mov
jmp
mov
xor
mov
add
movl
cmp
jle
mov
mov
mov
test
je
or
test
jne
or
test
je
or
mov
inc
incl
addl
cmp
jg
shl
push
push
push
call
add
xor
pop
pop
pop
pop
ret
nop
nop
push
push
push
add
push
push
call
add
mov
push
call
mov
cmp
jae
mov
movl
xor
mov
lea
push
call
movzwl
mov
test
je
mov
mov
add
mov
lea
add
cmp
jne
movl
xor
mov
cmp
jge
mov
inc
xor
test
je
or
test
je
or
test
je
or
jmp
or
mov
inc
and
or
mov
add
cmp
jl
mov
lea
jmp
xor
inc
mov
add
cmp
jb
mov
shl
push
push
push
call
add
cmpl
jne
push
call
mov
push
call
mov
push
call
mov
xor
mov
push
call
pop
test
jne
cmpl
je
orl
cmpl
je
orl
jmp
andl
inc
add
cmp
jle
add
pop
pop
pop
ret
nop
call
add
ret
nop
nop
nop
push
mov
push
mov
test
jl
cmp
jle
mov
call
mov
movsbl
mov
jmp
neg
cmp
jge
call
movl
call
mov
or
pop
pop
ret
push
call
mov
and
mov
and
push
call
pop
mov
pop
ret
call
and
push
call
pop
ret
nop
nop
push
mov
push
push
push
push
mov
mov
mov
mov
mov
neg
cmp
jle
push
lea
push
mov
push
call
add
add
add
testb
je
cmp
je
cmp
jne
push
call
pop
test
je
or
jmp
xor
mov
jmp
mov
test
jne
test
jne
orw
or
jmp
orw
cmpl
je
cmpl
je
push
call
pop
test
je
or
jmp
mov
lea
neg
mov
push
push
mov
push
call
add
lea
add
add
testb
je
cmp
je
cmp
jne
push
call
pop
test
je
or
jmp
xor
mov
jmp
push
lea
push
movsbl
push
call
add
cmp
je
testb
jne
orw
or
jmp
xor
mov
pop
pop
pop
pop
pop
ret
push
mov
push
push
lea
call
pop
push
push
push
mov
push
push
push
call
add
mov
push
call
pop
mov
pop
pop
ret
nop
push
mov
push
push
call
add
xor
lea
mov
inc
shl
lea
add
mov
add
cmp
jl
mov
lea
jmp
mov
movb
shl
inc
lea
add
mov
add
cmp
jb
movsbl
testb
jne
andw
push
testb
je
mov
jmp
xor
push
push
push
call
add
lea
movsbl
testb
jne
lea
andw
push
lea
testb
je
mov
jmp
xor
push
push
lea
push
call
add
pop
ret
nop
nop
push
mov
call
testb
je
push
call
pop
mov
push
call
pop
xor
mov
xor
mov
lea
testb
je
lea
push
call
pop
lea
mov
push
call
lea
pop
xor
lea
mov
xor
mov
call
pop
ret
nop
mov
push
call
pop
ret
nop
nop
nop
mov
push
call
pop
ret
nop
nop
nop
push
mov
push
push
mov
sub
mov
cltd
idiv
mov
mov
test
je
cmpl
jne
call
cmpl
jne
mov
shl
push
call
pop
mov
test
jne
push
call
pop
push
push
mov
push
call
add
mov
cmpl
jne
push
mov
shl
add
push
call
add
call
mov
mov
push
call
pop
pop
pop
pop
ret
mov
test
je
push
call
pop
xor
mov
movl
ret
nop
push
mov
cmpl
jne
push
push
push
call
add
mov
sub
mov
cltd
idiv
mov
mov
push
call
pop
cmpl
je
call
pop
ret
push
mov
push
mov
mov
cmpl
je
mov
test
je
mov
cmp
ja
xor
push
mov
push
mov
push
push
call
add
test
jne
movl
xor
mov
pop
pop
ret
nop
nop
nop
push
mov
push
mov
cmpl
jl
push
call
pop
mov
test
je
mov
cmp
jbe
mov
mov
mov
incl
incl
pop
pop
ret
push
mov
push
mov
mov
mov
add
mov
and
cmp
jge
add
mov
jmp
add
mov
shr
dec
dec
test
jge
pop
pop
ret
push
mov
add
xor
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
je
lea
jmp
xor
mov
mov
inc
test
je
cmp
jne
mov
cmp
jne
inc
xor
mov
testb
je
cmpb
je
lea
push
push
call
add
mov
inc
lea
push
push
call
add
jmp
lea
xor
mov
xor
mov
or
movb
mov
mov
xor
mov
mov
mov
inc
cmp
jl
movsbl
cmp
jg
mov
add
xor
mov
xor
mov
cmp
ja
jmp
loopne
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
add
push
inc
add
push
inc
add
add
add
dec
inc
add
dec
inc
add
rorb
movsb
pop
add
or
jmp
test
jg
or
jmp
test
jg
cmpb
je
mov
jmp
and
mov
jmp
or
mov
jmp
test
jg
test
jne
or
mov
jmp
addl
mov
cmp
mov
mov
jge
cmpl
jge
mov
neg
mov
or
jmp
mov
mov
mov
jmp
cmp
jne
mov
inc
mov
jmp
cmp
jge
mov
incl
jmp
add
cmp
jg
cmpl
mov
jne
movsbl
mov
jmp
mov
add
lea
movsbl
add
mov
jmp
cmp
jne
mov
add
lea
movsbl
add
mov
jmp
or
mov
jmp
or
mov
and
jmp
or
mov
and
jmp
cmpb
jne
cmpb
jne
add
or
and
mov
jmp
cmpb
jne
cmpb
jne
add
or
and
mov
jmp
cmpb
jne
cmpb
jne
add
or
and
mov
jmp
cmpb
jne
inc
and
mov
jmp
movl
jmp
movl
jmp
movl
lea
mov
movb
xor
jmp
movl
mov
test
je
addl
mov
mov
mov
mov
mov
jmp
test
je
addl
mov
test
mov
mov
je
mov
cltd
mov
mov
jmp
mov
xor
mov
mov
jmp
test
je
addl
mov
test
mov
mov
je
movswl
cltd
mov
mov
jmp
movzwl
xor
mov
mov
jmp
addl
mov
test
mov
mov
je
mov
cltd
mov
mov
jmp
mov
xor
mov
mov
lea
mov
cmpl
jne
cmpl
jne
cmpl
jne
mov
movb
jmp
or
mov
push
push
mov
push
mov
push
pushl
pushl
call
add
cmpl
jl
mov
push
call
pop
mov
mov
mov
cmpb
jne
decl
jmp
cmpb
je
incl
decl
mov
mov
mov
mov
cmp
jle
mov
sub
mov
jmp
addl
mov
lea
mov
mov
push
mov
push
call
add
movb
and
lea
mov
jmp
test
jne
or
test
je
addl
mov
lea
mov
mov
movw
movl
mov
movl
jmp
addl
mov
lea
mov
xor
mov
movb
mov
mov
movl
jmp
test
jne
or
test
je
addl
mov
mov
mov
movl
cmpl
jne
movl
jmp
addl
mov
xor
mov
mov
mov
cmpl
jne
movl
cmpl
je
cmpl
jl
mov
jmp
mov
mov
xor
mov
jmp
dec
incl
add
test
je
cmpw
jne
jmp
cmpl
jl
mov
jmp
mov
mov
xor
mov
jmp
dec
incl
inc
test
je
cmpb
jne
jmp
test
je
mov
jmp
mov
mov
push
and
lea
push
push
mov
push
cmpl
jge
mov
jmp
mov
push
mov
push
call
add
mov
and
push
mov
push
call
add
mov
test
je
cmpl
jle
mov
push
call
pop
mov
mov
cmpb
jne
decl
mov
cmp
jle
mov
sub
mov
mov
cmpb
je
cmpb
je
mov
cmpb
je
decl
mov
mov
mov
cmpl
jle
decl
mov
push
call
pop
mov
test
je
cmp
jne
cmpl
jg
movl
jmp
cmp
je
cmp
jne
or
subl
subl
jns
xor
mov
mov
add
test
jne
mov
cmp
jle
lea
push
push
call
add
decl
mov
cmp
jg
test
je
lea
push
push
call
add
lea
push
push
call
add
cmpl
jle
mov
sub
mov
sub
mov
cmpb
je
mov
cmpb
je
mov
cmpb
jne
lea
push
mov
incl
mov
push
call
add
decl
decl
jmp
lea
push
push
call
add
mov
addl
test
jne
cmpl
je
mov
xor
mov
mov
mov
mov
jmp
mov
addl
mov
push
lea
push
call
add
mov
cmpl
jle
xor
mov
lea
lea
cmp
jge
mov
inc
mov
inc
incl
inc
cmp
jl
mov
addl
test
jg
lea
mov
mov
mov
cmpl
je
mov
sub
jmp
lea
push
mov
incl
mov
push
call
add
mov
addl
test
jne
jmp
lea
push
push
call
add
mov
addl
test
jg
jmp
addl
mov
test
mov
mov
je
mov
mov
mov
jmp
test
je
mov
mov
mov
jmp
mov
mov
mov
jmp
lea
push
push
call
add
mov
incl
mov
test
jne
lea
push
call
cmpl
pop
je
or
jmp
mov
pop
pop
pop
mov
pop
ret
push
push
call
xor
mov
jmp
testb
je
push
call
pop
inc
add
cmp
jb
call
pop
pop
ret
nop
nop
nop
push
mov
mov
mov
cmp
jg
je
sub
je
dec
je
jmp
sub
je
dec
je
jmp
mov
mov
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
xor
pop
ret
nop
nop
nop
push
mov
push
mov
push
call
add
pop
ret
nop
nop
push
mov
cmpl
setb
and
pop
ret
nop
nop
push
mov
push
mov
push
call
add
pop
ret
nop
nop
push
mov
push
mov
push
call
add
pop
ret
nop
push
mov
push
mov
push
call
add
pop
ret
nop
push
mov
push
mov
push
call
add
pop
ret
nop
nop
push
mov
push
mov
push
call
add
pop
ret
nop
push
mov
push
mov
push
call
add
pop
ret
nop
nop
push
mov
push
mov
push
call
add
pop
ret
nop
push
mov
push
mov
push
call
add
pop
ret
nop
push
mov
push
mov
push
call
add
pop
ret
nop
push
mov
push
mov
push
call
add
pop
ret
nop
nop
push
mov
push
movzwl
push
call
add
pop
ret
nop
push
mov
movzwl
cmp
setb
and
pop
ret
push
mov
push
movzwl
push
call
add
pop
ret
nop
push
mov
push
movzwl
push
call
add
pop
ret
push
mov
push
movzwl
push
call
add
pop
ret
push
mov
push
movzwl
push
call
add
pop
ret
nop
push
mov
push
movzwl
push
call
add
pop
ret
push
mov
push
movzwl
push
call
add
pop
ret
nop
push
mov
push
movzwl
push
call
add
pop
ret
push
mov
push
movzwl
push
call
add
pop
ret
push
mov
push
movzwl
push
call
add
pop
ret
push
mov
push
movzwl
push
call
add
pop
ret
nop
push
mov
mov
mov
cmp
jbe
xor
pop
ret
mov
cmpl
jne
cmpl
jne
movswl
movzwl
and
pop
ret
mov
movzwl
and
mov
pop
ret
nop
push
mov
push
push
cmpl
mov
jne
xor
jmp
mov
cmpl
je
cmpl
jge
movswl
movzwl
and
jmp
lea
lea
push
push
push
push
call
movzwl
and
pop
pop
pop
ret
nop
nop
nop
push
mov
mov
mov
test
je
cmpb
je
test
jne
xor
pop
ret
xor
mov
testb
je
cmp
jl
push
push
mov
push
push
push
mov
push
call
test
jne
or
pop
ret
mov
pop
ret
push
push
mov
push
push
push
mov
push
call
test
jne
or
pop
ret
mov
pop
ret
nop
nop
push
mov
push
push
mov
mov
mov
test
je
test
jne
xor
jmp
cmpb
jne
test
je
movw
xor
jmp
mov
cmpl
je
test
je
xor
mov
mov
mov
jmp
xor
mov
testb
je
cmp
jl
test
je
mov
jmp
xor
push
push
mov
push
push
push
mov
push
call
test
jne
cmp
jl
cmpb
jne
or
jmp
mov
jmp
test
je
mov
jmp
xor
push
push
mov
push
push
push
mov
push
call
test
jne
or
jmp
mov
pop
pop
pop
ret
nop
nop
nop
push
mov
push
mov
test
jne
xor
pop
pop
ret
mov
cmpl
je
cmpw
jbe
or
pop
pop
ret
mov
mov
mov
pop
pop
ret
xor
lea
mov
push
push
push
push
lea
mov
push
push
push
mov
push
call
test
je
cmpl
je
or
pop
pop
ret
pop
pop
ret
nop
nop
nop
push
mov
push
push
push
push
mov
mov
xor
test
je
cmpl
jne
xor
jmp
test
je
mov
cmpl
je
cmp
jae
xor
mov
mov
cmpb
jne
mov
jmp
inc
add
cmp
jb
mov
jmp
mov
mov
push
push
push
push
push
mov
push
call
mov
test
je
mov
dec
jmp
call
cmp
je
or
jmp
mov
mov
jmp
xor
mov
testb
je
inc
inc
mov
add
test
je
cmpb
jne
sub
mov
mov
push
push
mov
mov
push
push
push
mov
push
call
mov
test
jne
or
jmp
mov
jmp
jmp
mov
cmpl
je
push
call
pop
jmp
push
push
mov
push
push
push
mov
push
call
mov
test
jne
or
jmp
mov
dec
pop
pop
pop
pop
pop
ret
nop
nop
nop
push
mov
push
mov
mov
lea
mov
jmp
add
dec
je
cmpw
jne
test
je
cmpw
jne
sub
sar
jns
adc
inc
pop
pop
ret
mov
pop
pop
ret
nop
nop
nop
push
mov
add
xor
push
push
mov
xor
cmpl
je
cmpl
jne
xor
jmp
cmpl
je
mov
cmpl
je
cmp
jae
mov
cmpw
jbe
or
jmp
mov
mov
mov
mov
mov
addl
cmpw
jne
mov
jmp
inc
cmp
jb
mov
jmp
lea
push
push
mov
push
mov
mov
push
push
mov
push
push
mov
push
call
mov
test
je
cmpl
jne
mov
dec
jmp
cmpl
jne
call
cmp
je
or
jmp
cmp
jae
lea
lea
push
push
push
push
push
mov
mov
push
push
mov
push
call
mov
cmpl
je
cmpl
je
or
jmp
mov
add
cmp
jbe
mov
jmp
xor
mov
lea
lea
cmp
jge
mov
mov
test
jne
mov
jmp
inc
inc
inc
inc
cmp
jl
addl
cmp
jb
mov
jmp
mov
cmpl
je
mov
push
call
pop
jmp
lea
mov
push
push
push
push
push
mov
push
push
mov
push
call
mov
test
je
cmpl
je
or
jmp
mov
dec
pop
pop
mov
pop
ret
push
push
mov
mull
mov
mov
mull
add
mov
mull
add
pop
pop
ret
push
push
push
push
xor
mov
mov
or
jne
or
je
or
je
or
jns
neg
neg
sbb
or
or
jns
neg
neg
sbb
xor
mov
mov
push
xor
xor
shl
rcl
rcl
rcl
cmp
jb
ja
cmp
jb
sub
sbb
inc
loop
pop
test
je
neg
neg
sbb
pop
pop
pop
pop
ret
div
xor
jmp
push
push
push
push
mov
mov
or
jne
or
je
or
je
mov
mov
xor
xor
shl
rcl
rcl
rcl
cmp
jb
ja
cmp
jb
sub
sbb
inc
loop
pop
pop
pop
pop
ret
div
xor
jmp
push
push
push
push
xor
mov
mov
or
jne
or
je
or
je
or
jns
neg
neg
sbb
or
or
jns
neg
neg
sbb
mov
mov
push
xor
xor
shl
rcl
rcl
rcl
cmp
jb
ja
cmp
jb
sub
sbb
inc
loop
mov
mov
pop
test
je
neg
neg
sbb
pop
pop
pop
pop
ret
div
xchg
xor
jmp
push
push
push
push
mov
mov
or
jne
or
je
or
je
mov
mov
xor
xor
shl
rcl
rcl
rcl
cmp
jb
ja
cmp
jb
sub
sbb
inc
loop
mov
mov
pop
pop
pop
pop
ret
div
xchg
xor
jmp
cmp
jl
cmp
jl
xor
xor
ret
mov
shl
xor
ret
shld
shl
ret
cmp
jl
cmp
jl
sar
mov
ret
mov
cltd
sar
ret
shrd
sar
ret
cmp
jl
cmp
jl
xor
xor
ret
mov
xor
shr
ret
shrd
shr
ret
push
mov
add
push
push
mov
mov
mov
mov
mov
mov
test
jne
fldl
jmp
fldl
fstpl
fwait
test
jne
fldl
jmp
fldl
fstpl
fwait
mov
lea
mov
mov
mov
push
call
pop
test
jne
mov
push
push
push
lea
push
call
add
add
sub
jb
jmp
call
movl
jmp
call
movl
lea
push
call
pop
fldl
pop
pop
mov
pop
ret
push
mov
add
push
mov
cmp
jge
fldt
jmp
cmp
jle
mov
fldt
jmp
test
jne
fldt
jmp
mov
test
jge
mov
neg
mov
and
sar
test
lea
mov
mov
mov
mov
mov
mov
je
fldt
fldt
fmulp
fstpt
fwait
sar
test
je
test
je
fldt
fldt
fmulp
fstpt
fwait
sar
test
je
mov
fldt
fldt
fmulp
fstpt
fwait
sar
test
je
mov
fldt
fldt
fmulp
fstpt
fwait
sar
test
je
mov
fldt
fldt
fmulp
fstpt
fwait
sar
test
je
mov
fldt
fldt
fmulp
fstpt
fwait
sar
test
je
mov
fldt
fldt
fmulp
fstpt
fwait
sar
test
je
mov
fldt
fldt
fmulp
fstpt
fwait
sar
test
je
mov
fldt
fldt
fmulp
fstpt
fwait
sar
test
je
mov
fldt
fldt
fmulp
fstpt
fwait
test
jge
fldt
fdivrs
jmp
fldt
pop
mov
pop
ret
add
add
add
cmpb
mov
lea
fnstsw
fnclex
movzwl
mov
pop
ret
nop
push
mov
lea
fstcw
mov
mov
jecxz
mov
and
not
fwait
movzwl
and
or
mov
fldcw
mov
pop
ret
nop
jmp
jmp
jmp
jmp
push
call
pop
ret
push
call
pop
ret
push
call
pop
ret
push
call
pop
ret
fninit
push
pushl
call
add
ret
nop
nop
push
mov
lea
mov
testb
jne
fildll
mov
pop
ret
mov
mov
mov
mov
movw
fldt
mov
pop
ret
nop
nop
nop
mov
mov
cmpw
je
fldt
fistpll
fwait
ret
mov
mov
mov
mov
ret
nop
nop
nop
mov
fldt
fxam
xor
fstsw
fstp
fwait
ret
nop
nop
nop
push
mov
add
push
push
push
mov
mov
cmp
jl
cmp
jg
cmpl
jne
cmpl
jae
jmp
jge
cmpb
je
movb
inc
mov
mov
neg
adc
mov
neg
mov
lea
mov
cltd
push
push
mov
mov
call
mov
mov
cltd
push
push
mov
mov
inc
call
mov
mov
cmp
jne
cmp
jne
jmp
dec
mov
cmp
jge
add
mov
inc
jmp
add
add
mov
inc
lea
cmp
jne
movb
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
push
mov
add
push
push
push
mov
test
jne
mov
mov
jmp
mov
mov
lea
mov
mov
and
mov
and
cmp
jne
fldt
fstpl
fldl
jmp
cmp
jae
mov
mov
mov
mov
jmp
cmp
jne
push
push
call
add
mov
push
push
call
add
test
jne
fldt
fstps
flds
fstpl
fwait
jmp
fldt
fstpl
fwait
push
mov
push
call
fldl
add
jmp
mov
or
or
or
or
jne
fldt
fstpl
fldl
jmp
cmp
jbe
xor
mov
mov
call
movl
cmpw
je
fldl
fchs
jmp
fldl
jmp
fldt
fstpl
fldl
pop
pop
pop
mov
pop
ret
push
mov
add
push
push
push
mov
mov
mov
cmp
jl
cmp
jg
test
jge
cmpb
je
movb
inc
neg
lea
mov
xor
div
mov
inc
mov
xor
div
mov
test
jne
jmp
dec
mov
cmp
jge
add
mov
inc
jmp
add
add
mov
inc
lea
cmp
jne
movb
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
push
mov
push
push
push
mov
push
mov
push
call
add
pop
ret
nop
push
mov
mov
cmpl
jne
xor
mov
mov
mov
pop
ret
cmpl
jne
mov
pop
ret
xor
pop
ret
nop
nop
push
mov
mov
cmpl
jne
xor
mov
mov
mov
mov
pop
ret
cmpl
jne
mov
pop
ret
xor
pop
ret
nop
nop
push
mov
mov
mov
mov
mov
pop
ret
nop
nop
push
mov
push
mov
mov
mov
xor
or
je
div
mov
mov
div
mov
mov
pop
pop
ret
nop
nop
nop
push
mov
push
push
mov
mov
mov
mul
add
adc
mov
mov
mov
mul
add
adc
mov
mov
pop
pop
pop
ret
nop
nop
push
mov
push
push
push
mov
mov
mov
push
call
pop
cmp
je
cmp
jne
jmp
dec
cmp
jb
mov
jmp
cmpb
je
mov
cmp
jne
dec
mov
pop
pop
pop
pop
ret
nop
nop
nop
push
mov
add
push
push
push
push
call
pop
mov
mov
cmpl
jle
movl
mov
mov
mov
and
mov
cmp
jne
mov
neg
test
jle
xor
mov
mov
jmp
mov
test
jg
mov
jmp
cmpb
jne
inc
incl
mov
push
lea
push
lea
push
push
mov
push
call
add
mov
mov
cmp
jne
cmpl
je
mov
jmp
mov
mov
xor
or
mov
repnz
not
sub
mov
xchg
shr
mov
rep
mov
and
rep
jmp
cmp
jne
cmpl
je
mov
jmp
mov
mov
xor
or
mov
repnz
not
sub
mov
xchg
shr
mov
rep
mov
and
rep
jmp
cmpl
je
movb
inc
cmpb
je
cmpb
jne
cmp
jl
cmpl
jne
mov
jmp
mov
cmp
jg
cmp
jg
test
jg
movb
inc
mov
mov
inc
test
je
movb
inc
inc
test
jne
xor
lea
jmp
mov
inc
dec
jne
mov
mov
inc
inc
inc
mov
test
jne
add
cmp
jge
mov
sub
mov
add
push
push
push
call
add
add
dec
je
jmp
dec
je
cmpb
jne
push
mov
push
mov
push
call
add
mov
cmp
jne
movb
inc
movb
jmp
lea
mov
inc
mov
inc
mov
inc
test
je
mov
mov
inc
test
je
mov
inc
mov
inc
test
jne
cmpb
jne
push
mov
push
mov
push
call
add
mov
jmp
cmpb
je
mov
mov
inc
mov
and
or
mov
inc
dec
jns
neg
movb
inc
jmp
movb
inc
cmp
jl
mov
jmp
cmp
jl
mov
jmp
mov
movb
lea
mov
test
je
mov
mov
cltd
idiv
dec
add
mov
mov
mov
dec
cltd
idiv
mov
test
jne
pop
pop
pop
mov
pop
ret
nop
nop
nop
push
mov
cmpl
mov
je
add
jmp
add
pop
ret
nop
nop
movl
movl
ret
nop
nop
nop
push
mov
push
push
push
mov
mov
mov
push
call
pop
cmp
je
cmp
jne
jmp
sub
cmp
jb
mov
jmp
cmpw
je
mov
cmp
jne
sub
mov
pop
pop
pop
pop
ret
nop
nop
push
mov
add
push
push
push
push
call
mov
pop
mov
cmpl
jle
movl
mov
mov
mov
and
mov
cmp
jne
mov
neg
test
jle
xor
mov
mov
jmp
mov
test
jg
mov
jmp
cmpw
jne
inc
incl
mov
push
lea
push
lea
push
push
mov
push
call
add
mov
mov
cmp
jne
cmpl
je
mov
jmp
mov
push
push
call
add
jmp
cmp
jne
cmpl
je
mov
jmp
mov
push
push
call
add
jmp
cmpl
je
movw
add
cmpw
je
cmpw
jne
cmp
jl
cmpl
jne
mov
jmp
mov
cmp
jg
cmp
jg
test
jg
movw
add
mov
mov
add
test
je
movw
add
inc
test
jne
xor
lea
jmp
mov
add
dec
jne
mov
mov
add
inc
add
mov
test
jne
add
cmp
jge
mov
sub
mov
add
push
push
push
call
add
add
add
dec
je
jmp
dec
je
cmpw
jne
push
mov
push
mov
push
call
add
mov
cmp
jne
movw
add
movw
jmp
lea
mov
add
mov
add
mov
add
test
je
mov
mov
add
test
je
mov
add
mov
add
test
jne
cmpw
jne
push
mov
push
mov
push
call
add
mov
jmp
cmpw
je
mov
mov
add
mov
and
or
mov
add
dec
jns
neg
movw
add
jmp
movw
add
cmp
jl
mov
jmp
cmp
jl
mov
jmp
mov
movw
lea
mov
test
je
mov
mov
cltd
idiv
add
add
mov
mov
mov
dec
cltd
idiv
mov
test
jne
pop
pop
pop
mov
pop
ret
nop
push
mov
cmpl
mov
je
add
jmp
add
pop
ret
nop
nop
movl
movl
ret
nop
nop
nop
push
mov
add
xor
xor
lea
push
push
push
lea
movl
movl
movb
movb
movb
movb
movb
mov
mov
movl
mov
mov
mov
mov
push
call
pop
mov
mov
incl
mov
push
call
pop
mov
inc
jne
movl
jmp
test
jne
push
call
pop
test
jne
decl
js
cmp
jne
movb
jmp
cmp
jne
mov
mov
mov
decl
js
incl
mov
push
call
pop
mov
cmpb
jne
cmpb
je
cmp
je
cmp
je
movb
movsbl
cmp
jne
cmpl
jne
test
jle
mov
jmp
xor
mov
jmp
cmp
jl
cmp
jg
sub
inc
test
jg
mov
test
mov
je
mov
jmp
or
cmpl
je
decl
jmp
cmp
jg
mov
add
lea
add
mov
jmp
cmp
jg
mov
lea
mov
mov
mov
push
push
call
add
test
je
lea
mov
jmp
mov
mov
mov
mov
jmp
mov
cmp
je
cmpl
jne
mov
xor
cmp
je
cmp
jne
movl
decl
js
incl
mov
push
call
pop
mov
cmpl
je
xor
cmp
mov
jne
movb
jmp
cmp
je
cmp
jl
cmp
jg
mov
add
lea
add
add
mov
cmp
jle
movb
jmp
mov
push
push
call
add
decl
cmpb
je
neg
negb
test
jge
xor
mov
mov
mov
jmp
cmpb
je
cmpb
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movw
jmp
xor
mov
mov
mov
movl
jmp
cmp
jle
mov
jmp
mov
mov
lea
sub
push
add
call
pop
fstpt
fwait
test
je
test
jle
mov
jmp
mov
neg
push
call
pop
fstpt
fwait
test
jge
fldt
fldt
fdivrp
fstpt
fwait
jmp
fldt
fldt
fmulp
fstpt
fwait
cmpb
je
fldt
fchs
fstpt
fwait
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
xor
mov
cmpl
jl
mov
push
push
call
add
decl
xor
mov
mov
mov
jmp
incl
mov
push
call
pop
mov
decl
js
cmp
jne
incl
mov
push
call
pop
mov
decl
js
cmp
jne
cmpb
je
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
incl
mov
push
call
pop
mov
decl
js
cmp
jne
incl
mov
push
call
pop
mov
decl
js
cmp
jne
cmpb
je
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
pop
pop
pop
mov
pop
ret
nop
nop
nop
push
mov
add
push
push
mov
mov
mov
test
je
pushl
pushl
mov
push
pushl
pushl
push
call
add
fstpl
fwait
jmp
test
je
mov
mov
mov
mov
mov
mov
jmp
mov
fldt
fstpl
fwait
pushl
pushl
mov
push
pushl
pushl
push
call
add
fstps
fwait
pop
pop
pop
pop
pop
ret
movl
movl
ret
nop
nop
nop
push
mov
add
xor
xor
lea
push
push
push
lea
movl
movl
movb
movb
movb
movb
movb
mov
mov
movl
mov
mov
mov
mov
push
call
mov
pop
mov
incl
mov
push
call
pop
mov
inc
jne
movl
jmp
push
call
pop
test
jne
decl
js
cmp
jne
movb
jmp
cmp
jne
mov
mov
mov
decl
js
incl
mov
push
call
pop
mov
cmpb
jne
cmpb
je
cmp
je
cmp
je
movb
movzwl
cmp
jne
cmpl
jne
test
jle
mov
jmp
xor
mov
jmp
cmp
jl
cmp
jg
sub
inc
test
jg
mov
test
mov
je
mov
jmp
or
cmpl
je
decl
jmp
cmp
jg
mov
add
lea
add
mov
jmp
cmp
jg
mov
lea
mov
mov
mov
push
push
call
add
test
je
lea
mov
jmp
mov
mov
mov
mov
jmp
mov
cmp
je
cmpl
jne
mov
xor
cmp
je
cmp
jne
movl
decl
js
incl
mov
push
call
pop
mov
cmpl
je
xor
cmp
mov
jne
movb
jmp
cmp
je
cmp
jl
cmp
jg
mov
add
lea
add
add
mov
cmp
jle
movb
jmp
mov
push
push
call
add
decl
cmpb
je
neg
negb
test
jge
xor
mov
mov
mov
jmp
cmpb
je
cmpb
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movw
jmp
xor
mov
mov
mov
movl
jmp
cmp
jle
mov
jmp
mov
mov
lea
sub
push
add
call
pop
fstpt
fwait
test
je
test
jle
mov
jmp
mov
neg
push
call
pop
fstpt
fwait
test
jge
fldt
fldt
fdivrp
fstpt
fwait
jmp
fldt
fldt
fmulp
fstpt
fwait
cmpb
je
fldt
fchs
fstpt
fwait
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
xor
mov
cmpl
jl
mov
push
push
call
add
decl
xor
mov
mov
mov
jmp
incl
mov
push
call
pop
mov
decl
js
cmp
jne
incl
mov
push
call
pop
mov
decl
js
cmp
jne
cmpb
je
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
incl
mov
push
call
pop
mov
decl
js
cmp
jne
incl
mov
push
call
pop
mov
decl
js
cmp
jne
cmpb
je
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
pop
pop
pop
mov
pop
ret
nop
nop
push
mov
add
push
push
mov
mov
mov
test
je
pushl
pushl
mov
push
pushl
pushl
push
call
add
fstpl
fwait
jmp
test
je
mov
mov
mov
mov
mov
mov
jmp
mov
fldt
fstpl
fwait
pushl
pushl
mov
push
pushl
pushl
push
call
add
fstps
fwait
pop
pop
pop
pop
pop
ret
movl
movl
ret
nop
nop
nop
push
mov
fldl
mov
shl
je
jb
fsqrt
pop
ret
fstp
pushl
pushl
push
lea
push
push
push
call
add
jmp
nop
nop
push
mov
add
push
push
push
movw
mov
sub
je
sub
je
sub
je
jmp
mov
flds
fstpt
fwait
jmp
mov
fldl
fstpt
fwait
jmp
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
and
mov
test
setne
and
mov
mov
lea
push
call
and
pop
cmp
jne
mov
test
jg
neg
inc
cmp
jle
mov
push
push
mov
push
call
add
mov
movb
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
movzwl
and
mov
add
imul
mov
xor
mov
add
and
mov
lea
lea
lea
movswl
and
add
mov
sar
test
mov
je
incl
mov
test
jg
mov
sub
test
jl
cmp
jle
mov
mov
sub
test
je
mov
test
jge
mov
neg
cmp
jle
mov
push
call
pop
fstpt
fwait
test
jge
fldt
fldt
fdivp
fstpt
fwait
add
jmp
fldt
fldt
fmulp
fstpt
fwait
sub
test
jne
push
call
pop
fstpt
fldt
fldt
fcompp
fnstsw
sahf
jae
incl
inc
cmp
jg
cmpl
jle
movswl
mov
fildl
fldt
fdivp
fstpt
fwait
dec
jmp
lea
push
call
pop
fstpt
fldt
fldt
fcompp
fnstsw
sahf
jbe
decl
dec
cmpl
jle
movswl
mov
fildl
fldt
fmulp
fstpt
fwait
inc
test
jl
lea
push
lea
push
call
mov
add
add
xor
mov
mov
movb
dec
test
jne
mov
movzbl
and
xor
test
jne
jmp
lea
push
call
pop
movsbl
or
add
mov
dec
dec
je
jmp
test
jne
incl
cmpl
jg
mov
movb
incl
movb
mov
test
jg
mov
sub
cmp
jle
mov
mov
movb
mov
sub
sub
test
jle
push
push
mov
push
call
add
mov
movb
mov
pop
pop
pop
mov
pop
ret
nop
nop
push
mov
add
push
push
push
movw
mov
sub
je
sub
je
sub
je
jmp
mov
flds
fstpt
fwait
jmp
mov
fldl
fstpt
fwait
jmp
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
and
mov
test
setne
and
mov
mov
lea
push
call
and
pop
cmp
jne
mov
test
jg
neg
inc
cmp
jle
mov
push
push
mov
push
call
mov
add
mov
movw
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
movzwl
and
mov
add
imul
mov
xor
mov
add
and
mov
lea
lea
lea
movswl
and
add
mov
sar
test
mov
je
incl
mov
test
jg
mov
sub
test
jl
cmp
jle
mov
mov
sub
test
je
mov
test
jge
mov
neg
cmp
jle
mov
push
call
pop
fstpt
fwait
test
jge
fldt
fldt
fdivp
fstpt
fwait
add
jmp
fldt
fldt
fmulp
fstpt
fwait
sub
test
jne
push
call
pop
fstpt
fldt
fldt
fcompp
fnstsw
sahf
jae
incl
inc
cmp
jg
cmpl
jle
movswl
mov
fildl
fldt
fdivp
fstpt
fwait
dec
jmp
lea
push
call
pop
fstpt
fldt
fldt
fcompp
fnstsw
sahf
jbe
decl
dec
cmpl
jle
movswl
mov
fildl
fldt
fmulp
fstpt
fwait
inc
test
jl
lea
push
lea
push
call
mov
add
add
xor
add
mov
mov
movw
sub
test
jne
mov
movzbl
and
xor
test
jne
jmp
lea
push
call
pop
movsbl
or
movsbl
add
mov
sub
dec
je
jmp
test
jne
incl
cmpl
jg
mov
movw
addl
movw
mov
test
jg
mov
sub
cmp
jle
mov
mov
movw
mov
sub
sar
jns
adc
sub
test
jle
push
push
mov
push
call
add
mov
movw
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
push
mov
add
push
push
mov
cmp
jne
call
mov
jmp
cmp
jne
call
mov
jmp
cmp
jne
mov
mov
test
je
lea
push
push
call
test
jne
push
call
pop
or
jmp
xor
mov
movb
inc
inc
cmp
jl
test
je
cmpl
jbe
lea
jmp
and
lea
jmp
movb
inc
inc
xor
mov
cmp
jle
add
mov
test
je
cmpb
jne
mov
mov
orb
inc
inc
cmp
jl
cmp
jne
xor
mov
lea
jmp
orb
inc
inc
xor
mov
cmp
jle
xor
mov
lea
jmp
orb
inc
inc
xor
mov
cmp
jle
mov
jmp
xor
mov
xor
pop
pop
mov
pop
ret
nop
nop
nop
mov
ret
nop
nop
call
push
call
pop
ret
nop
nop
nop
push
mov
mov
cmp
jbe
xor
pop
ret
push
call
pop
pop
ret
nop
nop
push
mov
push
push
mov
mov
xor
xor
mov
testb
je
cmpb
jne
inc
test
jne
mov
jmp
xor
mov
shl
movzbl
or
cmp
jne
mov
inc
jmp
xor
mov
cmp
jne
mov
mov
inc
test
jne
mov
pop
pop
pop
ret
nop
nop
push
mov
push
push
push
push
mov
movb
lea
mov
jmp
push
call
pop
mov
sub
dec
test
jle
push
push
push
call
add
addl
mov
mov
test
jne
pop
pop
pop
pop
pop
ret
nop
nop
nop
push
mov
push
push
mov
push
push
mov
push
push
push
push
call
add
push
call
pop
add
push
mov
push
call
add
push
call
pop
call
pop
ret
nop
nop
add
push
call
movzwl
push
movzwl
push
movzwl
push
movzwl
push
movzwl
push
movzwl
push
movzwl
push
push
push
call
add
mov
add
ret
nop
nop
push
mov
push
push
push
push
mov
push
push
push
push
push
push
mov
push
call
mov
test
je
call
mov
lea
push
push
push
call
pop
push
push
push
call
push
lea
push
push
call
pop
push
push
push
call
push
call
pop
pop
pop
pop
pop
ret
push
push
call
mov
call
mov
push
add
call
mov
pop
pop
ret
nop
nop
push
mov
mov
movl
xor
pop
ret
nop
nop
push
xor
mov
call
shr
movzwl
test
jne
mov
pop
ret
mov
push
push
call
push
call
cmpl
je
mov
jmp
mov
pop
ret
push
mov
add
cmpl
push
push
mov
jne
cmpl
jne
cmpl
je
push
lea
push
push
call
push
lea
push
call
add
mov
test
jne
push
lea
push
call
add
mov
test
jne
lea
jmp
inc
call
or
push
push
push
push
call
jmp
push
call
mov
lea
push
push
push
push
push
call
push
lea
push
push
call
pop
push
push
push
call
push
lea
push
push
push
push
call
jmp
cmpl
je
cmpl
je
push
call
pop
mov
test
je
cmpl
je
cmpb
je
push
push
call
add
pop
pop
mov
pop
ret
nop
push
mov
mov
push
call
pop
pop
ret
nop
push
mov
mov
push
call
pop
push
call
pop
pop
ret
nop
push
add
push
call
mov
push
push
call
push
push
call
test
je
movl
jmp
movl
push
call
mov
sub
jb
je
dec
je
jmp
movl
jmp
movl
jmp
movl
jmp
movl
add
pop
ret
nop
nop
nop
push
call
pop
push
call
pop
ret
push
call
pop
call
ret
nop
nop
ret
nop
nop
nop
push
mov
push
mov
call
test
jne
cmpl
je
call
call
call
jmp
xor
mov
cmpl
jne
test
jne
call
call
call
call
call
mov
push
call
pop
call
pop
pop
ret
nop
nop
push
mov
mov
push
push
push
call
add
pop
ret
nop
nop
nop
push
mov
mov
push
push
push
call
add
pop
ret
nop
nop
nop
push
push
push
call
add
ret
nop
push
push
push
call
add
ret
nop
push
mov
mov
mov
mov
mov
mov
mov
pop
ret
nop
nop
push
mov
push
mov
push
call
add
pop
ret
nop
nop
nop
push
mov
push
mov
push
call
add
pop
ret
nop
nop
nop
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
nop
push
cmpl
je
xor
xor
mov
mov
mov
mov
push
call
pop
mov
mov
push
mov
push
push
call
add
test
je
push
push
call
add
decl
jmp
xor
xor
mov
mov
mov
mov
mov
mov
pop
ret
call
cmpl
je
mov
push
call
pop
mov
push
call
pop
xor
mov
ret
nop
nop
nop
push
mov
push
push
push
mov
mov
cmp
jne
addl
mov
shl
push
mov
push
call
add
mov
test
jne
push
call
pop
cmpl
je
push
call
pop
inc
push
call
pop
mov
test
jne
push
call
pop
xor
push
mov
or
repnz
not
sub
mov
xchg
mov
mov
shr
rep
mov
and
rep
pop
jmp
mov
mov
mov
mov
incl
pop
pop
pop
pop
ret
push
mov
add
push
push
push
lea
lea
mov
mov
push
mov
push
call
add
jmp
incl
mov
mov
cmp
je
cmp
je
mov
cmpb
jne
incl
jmp
incl
mov
mov
cmp
je
test
jne
mov
cmpb
jne
incl
jmp
incl
mov
mov
cmp
je
cmp
je
test
jne
mov
push
call
pop
inc
push
call
pop
mov
mov
test
jne
push
call
pop
jmp
xor
jmp
incl
mov
mov
cmp
je
cmp
je
mov
cmpb
je
mov
mov
jmp
cmp
jne
incl
jmp
push
push
call
add
mov
mov
cmp
je
test
jne
mov
cmpb
jne
incl
jmp
mov
mov
cmp
je
cmp
jne
mov
push
push
call
add
mov
mov
cmp
je
cmp
je
test
jne
mov
movb
incl
test
je
mov
push
mov
push
call
add
jmp
push
mov
push
call
add
mov
cmpb
je
incl
mov
cmpb
jne
mov
pop
pop
pop
mov
pop
ret
mov
test
je
push
call
pop
xor
mov
ret
nop
nop
nop
push
mov
push
push
mov
mov
mov
cmpb
jne
cmpb
jne
mov
movb
addl
jmp
cmpl
je
mov
cmpb
jne
cmpb
jne
mov
movb
addl
jmp
mov
mov
xor
mov
testb
je
cmpb
je
mov
mov
incl
incl
mov
mov
mov
mov
incl
incl
pop
pop
pop
ret
nop
nop
nop
push
mov
add
push
push
push
lea
lea
mov
mov
push
mov
push
call
add
jmp
addl
mov
mov
cmp
je
cmp
je
mov
cmpw
jne
addl
jmp
addl
mov
mov
cmp
je
test
jne
mov
cmpw
jne
addl
jmp
addl
mov
mov
cmp
je
cmp
je
test
jne
mov
push
call
pop
add
add
push
call
pop
mov
mov
test
jne
push
call
pop
jmp
xor
jmp
addl
mov
mov
cmp
je
cmp
je
mov
cmpw
je
mov
mov
jmp
cmp
jne
addl
jmp
push
push
call
add
mov
mov
cmp
je
test
jne
mov
cmpw
jne
addl
jmp
mov
mov
cmp
je
cmp
jne
mov
push
push
call
add
mov
mov
cmp
je
cmp
je
test
jne
mov
movw
addl
test
je
mov
push
mov
push
call
add
jmp
push
mov
push
call
add
mov
cmpw
je
addl
mov
cmpw
jne
mov
pop
pop
pop
mov
pop
ret
nop
mov
test
je
push
call
pop
xor
mov
ret
nop
nop
nop
push
mov
push
mov
mov
mov
cmpw
jne
cmpw
jne
mov
movw
addl
jmp
cmpl
je
mov
cmpw
jne
cmpw
jne
mov
movw
addl
jmp
jmp
mov
cmpw
je
mov
mov
mov
mov
addl
addl
mov
mov
mov
mov
addl
addl
pop
pop
ret
nop
push
push
call
pop
mov
mov
test
jne
push
call
pop
push
mov
push
push
call
pop
ret
nop
mov
push
call
pop
ret
nop
nop
nop
mov
push
call
pop
ret
nop
nop
nop
mov
push
call
pop
ret
nop
nop
nop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
xor
xor
mov
mov
ret
nop
nop
nop
push
push
push
push
push
cmpl
jne
cmpl
jne
call
mov
test
jne
push
call
pop
xor
xor
mov
jmp
lea
inc
add
add
push
call
pop
mov
test
jne
lea
push
call
pop
mov
mov
test
jne
xor
jmp
push
mov
push
push
call
add
jmp
xor
mov
jmp
push
call
pop
test
jne
dec
inc
add
mov
test
jne
lea
push
mov
inc
push
call
add
test
mov
jne
xor
jmp
cmpl
jne
xor
mov
mov
mov
jmp
mov
add
inc
inc
add
push
call
pop
mov
test
jne
jmp
xor
mov
mov
mov
jmp
push
call
pop
test
je
mov
mov
jmp
dec
add
add
inc
add
mov
test
jne
mov
test
je
push
call
pop
mov
mov
mov
pop
pop
pop
pop
pop
ret
nop
nop
call
test
jne
push
call
pop
ret
mov
mov
push
push
call
add
ret
nop
nop
push
mov
xor
mov
mov
cmp
je
inc
add
cmp
jl
or
pop
ret
nop
push
mov
add
push
push
push
mov
mov
mov
mov
xor
mov
call
mov
test
je
mov
test
jne
mov
jmp
xor
mov
cmp
jg
je
cmp
jg
je
sub
je
dec
je
jmp
sub
je
sub
je
jmp
add
cmp
ja
jmp
sub
inc
add
mov
jp
inc
add
mov
movsb
mov
mov
movl
mov
jmp
mov
movl
mov
jmp
mov
movl
mov
jmp
mov
movl
mov
jmp
mov
movl
mov
jmp
movl
mov
jmp
movl
mov
jmp
movl
mov
jmp
movl
mov
jmp
movl
mov
jmp
movl
mov
jmp
mov
jmp
mov
cmp
jne
xor
jmp
test
jne
mov
jmp
xor
cmp
mov
je
cmp
je
cmp
jne
call
push
mov
push
call
add
lea
push
mov
push
mov
push
call
mov
add
not
and
jmp
lea
push
push
mov
push
call
add
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
push
mov
cmpl
jne
mov
jmp
mov
push
call
pop
mov
pop
ret
nop
nop
nop
push
mov
push
push
push
cmpb
mov
jne
movl
push
push
call
movb
push
call
pop
mov
inc
jne
call
movl
or
jmp
cmp
je
cmp
jne
mov
jmp
call
mov
test
jne
or
jmp
mov
test
jne
push
call
pop
mov
test
jne
call
movl
or
jmp
xor
mov
xor
inc
mov
add
cmp
jl
mov
mov
mov
mov
pop
pop
pop
pop
ret
nop
push
mov
push
push
push
mov
cmp
je
cmp
jne
mov
jmp
call
mov
test
je
mov
test
jne
mov
jmp
push
call
pop
mov
inc
jne
mov
jmp
mov
cmp
je
test
jne
add
sub
jb
sub
je
sub
je
jmp
call
jmp
push
call
pop
jmp
xor
mov
xor
mov
push
push
push
call
add
xor
pop
pop
pop
pop
ret
push
mov
mov
push
call
pop
ret
nop
nop
xor
ret
nop
xor
ret
nop
push
mov
add
push
push
push
cmpl
je
movl
movl
mov
jmp
movl
movl
xor
mov
cmp
je
xor
mov
mov
lea
mov
jmp
mov
cmpl
mov
je
mov
jmp
mov
cmpl
je
mov
jmp
mov
mov
cmpl
jne
mov
cmp
jae
mov
cmp
jne
call
add
cmp
jb
jmp
mov
add
cmp
ja
mov
cmp
jne
call
sub
cmp
jbe
incl
addl
mov
mov
cmp
jg
add
cmp
jne
pop
pop
pop
mov
pop
ret
nop
nop
push
push
push
cmpl
jne
movl
push
push
call
add
push
push
call
add
call
mov
test
je
push
push
call
add
xor
lea
jmp
mov
mov
push
push
call
add
inc
add
cmp
jl
pop
pop
pop
ret
nop
mov
push
call
pop
ret
nop
nop
nop
mov
push
call
pop
ret
nop
nop
nop
push
push
call
add
ret
nop
push
mov
add
push
push
push
mov
mov
and
mov
call
mov
push
mov
push
call
add
mov
push
call
pop
mov
push
call
pop
movl
mov
lea
mov
call
call
mov
call
mov
mov
push
mov
push
call
add
mov
push
mov
push
mov
push
mov
push
call
add
call
mov
test
je
mov
movl
push
push
call
add
xor
mov
lea
jmp
mov
mov
push
push
call
add
incl
add
mov
cmp
jg
push
push
call
add
testb
je
mov
jmp
inc
mov
cmp
je
cmp
je
cmpb
jne
mov
inc
jmp
mov
jmp
inc
mov
test
je
cmp
je
cmp
jne
cmpb
jne
inc
jmp
inc
mov
test
je
cmp
je
cmp
je
call
push
push
push
push
call
push
call
add
push
call
pop
jmp
mov
push
mov
push
mov
push
call
add
push
call
pop
pop
pop
pop
mov
pop
ret
nop
add
push
call
testb
je
movzwl
jmp
mov
add
ret
call
mov
ret
call
mov
ret
push
add
xor
movl
lea
push
call
cmpl
jne
mov
push
lea
push
lea
push
call
call
add
mov
add
pop
ret
nop
call
ret
nop
nop
push
mov
mov
push
call
pop
ret
push
mov
mov
push
call
pop
ret
push
mov
mov
push
mov
push
call
pop
ret
push
mov
pop
ret
nop
push
mov
pop
ret
nop
xor
ret
nop
push
call
mov
test
jne
call
mov
call
mov
mov
pop
ret
nop
nop
push
mov
push
call
pop
mov
test
je
mov
mov
jmp
push
call
pop
mov
test
je
push
push
push
call
add
test
je
movl
xor
xor
mov
xor
mov
xor
mov
mov
cmpl
jne
mov
push
call
pop
mov
test
jne
push
call
pop
xor
jmp
mov
push
push
mov
push
call
add
mov
push
call
pop
mov
pop
ret
nop
nop
nop
push
mov
push
mov
mov
push
call
pop
mov
mov
mov
mov
push
call
pop
pop
pop
ret
nop
nop
nop
push
push
call
add
ret
nop
push
push
mov
call
mov
test
je
push
call
pop
jmp
mov
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
mov
push
call
pop
mov
mov
test
jne
pop
pop
ret
nop
push
mov
push
call
cmpl
jl
mov
push
call
pop
mov
shl
lea
add
push
call
mov
mov
shl
lea
add
mov
push
incl
call
pop
ret
push
mov
mov
push
call
pop
ret
nop
nop
push
mov
mov
push
call
pop
ret
nop
nop
push
mov
add
push
push
mov
lea
mov
mov
rep
movsb
mov
push
lea
push
call
add
lea
push
call
pop
pop
pop
mov
pop
ret
nop
nop
push
call
movl
ret
nop
nop
nop
push
push
call
push
call
mov
cmpl
jne
movl
ret
mov
mov
jmp
ret
push
mov
push
mov
push
call
pop
test
jne
cmp
ja
call
testb
je
call
call
orl
call
mov
pop
pop
ret
pop
pop
ret
push
mov
push
mov
call
cmp
jne
call
andl
pop
pop
ret
push
call
pop
pop
pop
ret
push
mov
push
push
push
push
mov
mov
pushl
push
push
push
call
add
test
je
mov
jmp
movzwl
mov
movzwl
test
je
pushl
push
pushl
push
call
add
test
je
mov
jmp
mov
movzwl
test
jne
xor
jmp
pushl
push
push
push
call
add
test
je
mov
jmp
test
je
testb
je
mov
jmp
testb
jne
xor
jmp
test
je
test
jne
testb
jne
test
jne
testb
jne
mov
jmp
xor
pop
pop
pop
pop
pop
ret
push
mov
push
push
push
mov
mov
test
mov
jne
test
je
push
push
push
call
add
test
je
push
push
push
call
add
test
je
and
dec
je
dec
je
dec
je
sub
je
jmp
push
push
push
call
add
jmp
push
push
push
call
jmp
mov
xor
mov
call
jmp
push
push
push
call
jmp
mov
test
je
push
push
push
call
add
jmp
and
dec
je
dec
je
dec
je
sub
je
jmp
push
push
call
add
jmp
push
push
call
jmp
mov
mov
call
jmp
push
push
call
jmp
mov
test
je
push
push
push
call
add
pop
pop
pop
pop
ret
push
mov
mov
xor
test
je
jmp
inc
mov
inc
test
jne
pop
ret
push
mov
push
lea
push
mov
inc
inc
push
push
push
call
pop
pop
ret
push
mov
push
push
push
cmpl
mov
je
mov
jmp
xor
testb
je
or
mov
cmpl
jne
pushl
call
pop
mov
push
call
pop
push
push
pushl
push
push
call
add
test
je
push
push
push
call
add
and
dec
je
dec
je
dec
je
sub
je
jmp
push
pushl
call
add
jmp
push
pushl
call
jmp
mov
mov
call
jmp
push
pushl
call
jmp
mov
test
je
push
push
push
call
add
pop
pop
pop
pop
ret
push
mov
push
mov
test
je
push
push
push
call
add
and
dec
je
dec
je
dec
je
sub
je
jmp
pushl
call
pop
pop
pop
ret
pushl
call
pop
pop
ret
mov
call
pop
pop
ret
pushl
call
pop
pop
ret
mov
test
je
push
push
push
call
add
pop
pop
ret
push
mov
add
mov
push
push
push
call
mov
call
orl
call
test
je
movzwl
add
jmp
xor
mov
call
mov
mov
call
mov
mov
mov
movzwl
test
mov
je
mov
jmp
xor
test
mov
je
mov
mov
mov
lea
push
call
pop
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
mov
movb
push
pushl
mov
add
push
call
add
mov
cmpl
je
mov
cmpl
jne
push
call
pop
mov
mov
pushl
mov
pushl
mov
pushl
mov
pushl
mov
pushl
mov
pushl
mov
pushl
mov
cmpb
je
mov
add
jmp
mov
mov
push
push
call
pop
push
push
mov
sub
push
push
push
call
add
testb
je
cmpl
jne
push
push
push
call
add
mov
mov
movw
pushl
pushl
pushl
mov
add
push
call
movw
add
jmp
call
movw
call
mov
mov
call
mov
mov
lea
mov
mov
mov
mov
push
push
push
push
call
mov
addr16
pop
pop
pop
mov
pop
ret
mov
add
push
push
push
push
push
push
push
push
pushl
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
add
ret
push
mov
push
push
push
push
mov
add
push
pushl
push
push
push
push
push
mov
mov
mov
call
mov
test
jne
call
cmpb
je
lea
jmp
mov
pushl
push
push
push
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
call
add
pop
pop
pop
pop
pop
ret
push
mov
add
mov
test
jne
movl
movl
xor
lea
mov
orl
mov
mov
mov
mov
call
mov
pop
ret
push
mov
add
mov
push
push
push
mov
call
test
jne
push
push
push
call
add
movw
push
pushl
push
push
pushl
pushl
call
movw
add
jmp
call
movw
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
push
push
mov
cmpb
je
testb
je
mov
mov
lea
movzwl
push
pushl
push
push
call
add
mov
movb
cmpb
je
mov
test
jne
push
push
push
call
add
testb
je
testb
je
movzwl
push
pushl
push
pushl
call
add
movb
pop
pop
pop
ret
push
mov
add
push
push
push
mov
mov
mov
call
cmpl
jne
push
push
push
call
add
call
mov
call
mov
mov
mov
mov
mov
test
jne
push
push
push
call
add
cmp
je
push
push
push
call
add
mov
mov
movzwl
mov
mov
mov
mov
push
call
pop
push
call
pop
mov
cmpl
jne
pushl
push
push
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
ret
pop
pop
pop
mov
pop
ret
push
mov
add
push
push
push
mov
mov
cmp
je
push
push
push
call
add
mov
cmp
je
push
push
push
call
add
cmpb
je
push
push
push
call
add
mov
mov
mov
test
je
mov
testb
jne
mov
mov
testb
sete
and
lea
mov
mov
movb
mov
mov
add
mov
movzwl
mov
mov
test
je
mov
movzwl
mov
test
je
testb
je
push
push
pushl
call
movl
add
jmp
testb
je
test
je
test
je
testb
je
push
push
push
call
add
movl
jmp
test
jne
push
push
push
call
add
testb
jne
push
push
push
call
add
mov
mov
mov
push
pushl
call
add
test
jne
mov
mov
push
pushl
pushl
call
add
mov
mov
cmp
je
movl
push
lea
push
pushl
call
add
jmp
testb
je
mov
cmp
je
push
push
push
call
add
push
pushl
call
add
test
jne
push
pushl
pushl
call
add
mov
movl
testb
je
mov
cmpl
jne
push
push
push
call
add
mov
pushl
mov
pushl
pushl
pushl
call
movl
add
jmp
push
pushl
pushl
call
add
jmp
test
je
push
lea
push
pushl
call
movl
add
jmp
cmp
je
push
push
push
call
add
push
pushl
pushl
call
add
cmpl
jne
testb
je
testb
je
movzwl
push
pushl
push
pushl
call
add
movb
pop
pop
pop
mov
pop
ret
push
mov
add
xor
push
push
push
mov
mov
mov
mov
mov
mov
sub
mov
mov
movzwl
jmp
mov
mov
mov
movzwl
add
mov
movzwl
mov
add
sub
jb
sub
jb
je
dec
je
jmp
jmp
mov
mov
mov
mov
movw
push
push
push
push
mov
mov
mov
mov
call
pop
pop
pop
pop
mov
movw
jmp
call
add
mov
jmp
mov
cmp
jne
cmp
je
mov
mov
mov
test
jne
test
je
mov
cmp
je
push
push
push
call
add
mov
mov
mov
push
call
pop
push
call
pop
jmp
mov
mov
mov
add
mov
pushl
pushl
add
push
push
call
add
mov
jmp
mov
test
je
push
push
push
call
add
mov
test
je
cmp
jne
pop
pop
pop
mov
pop
ret
push
mov
pushl
pushl
call
add
pop
ret
push
mov
push
mov
push
push
call
add
mov
addr16
pop
pop
ret
push
mov
push
push
mov
mov
add
jmp
mov
test
jne
mov
jmp
push
pushl
push
pushl
pushl
call
add
test
je
mov
jmp
add
cmpl
jne
xor
pop
pop
pop
ret
push
mov
add
push
push
push
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
cmpl
jne
xor
jmp
call
mov
testb
je
push
pushl
call
add
mov
cmpl
jne
mov
test
je
jmp
push
mov
pushl
pushl
mov
pushl
mov
pushl
call
add
test
jne
add
cmpl
jne
mov
mov
mov
mov
call
mov
mov
jmp
mov
movzwl
test
je
mov
movzwl
mov
add
movzwl
mov
add
mov
cmp
ja
jmp
movsw
inc
add
movsb
inc
add
mov
inc
add
inc
add
sub
je
jmp
mov
mov
add
pushl
pushl
call
add
mov
cmpl
je
mov
cmpl
je
mov
cmpl
jne
mov
cmpl
jb
mov
cmpl
jbe
pushl
pushl
pushl
push
push
call
add
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
pushl
call
add
push
pushl
call
add
mov
mov
mov
cmpl
jne
pushl
pushl
pushl
pushl
pushl
call
add
call
andl
mov
cmpl
jne
cmpl
jne
mov
pushl
call
mov
mov
pop
cmpb
je
mov
add
jmp
mov
mov
push
push
call
pop
push
push
push
push
push
call
add
mov
mov
mov
mov
mov
mov
call
jmp
mov
cmpl
je
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
push
push
push
push
mov
mov
mov
mov
call
pop
pop
pop
pop
jmp
mov
cmpl
je
mov
mov
mov
mov
mov
test
jge
mov
testb
je
mov
mov
mov
xor
jmp
test
je
mov
xor
mov
add
mov
mov
mov
mov
jmp
mov
test
je
push
push
push
call
add
mov
test
jne
mov
pop
pop
pop
mov
pop
ret
push
mov
add
mov
push
push
push
mov
mov
mov
call
testb
jne
push
push
push
call
add
cmpl
jne
push
push
push
call
add
movw
movw
mov
mov
cmp
jae
test
jne
push
push
push
call
add
test
jne
test
je
mov
jmp
mov
mov
sub
push
movzwl
push
pushl
push
push
pushl
call
movw
add
jmp
call
movw
call
movw
jmp
call
movw
call
mov
addr16
pop
pop
pop
mov
pop
ret
push
mov
push
push
push
mov
mov
mov
jmp
mov
add
cmpl
je
mov
mov
testb
je
pushl
pushl
push
push
pushl
push
push
call
add
xor
sub
cmp
jae
pop
pop
pop
pop
ret
push
mov
add
push
push
push
mov
mov
testb
jne
push
push
push
call
add
cmpl
je
mov
mov
jmp
mov
mov
test
je
cmp
ja
pushl
pushl
pushl
pushl
pushl
call
add
jmp
cmp
ja
push
push
push
call
add
mov
mov
movzwl
add
mov
mov
cmpl
je
mov
mov
test
je
testb
jne
push
push
push
call
add
testb
je
mov
cmp
ja
pushl
pushl
push
push
pushl
mov
add
push
pushl
pushl
call
add
jmp
sub
addl
jmp
mov
movzwl
add
mov
mov
mov
mov
test
je
testb
jne
push
push
push
call
add
testb
je
mov
cmp
ja
pushl
pushl
push
push
pushl
mov
add
push
pushl
pushl
call
add
cmpl
je
pushl
pushl
push
push
pushl
pushl
pushl
pushl
call
add
jmp
sub
addl
jmp
mov
movzwl
add
mov
mov
test
jne
push
push
push
call
add
movl
testb
je
mov
mov
mov
testb
jne
push
push
push
call
add
mov
imull
cmp
jbe
sub
jmp
mov
add
mov
movl
testb
je
mov
mov
mov
cmpl
jbe
pushl
pushl
push
pushl
push
call
add
jmp
pushl
pushl
push
push
push
push
push
call
add
xor
sub
cmp
jae
pushl
pushl
push
push
pushl
pushl
pushl
pushl
call
add
cmpl
je
pushl
pushl
push
push
pushl
pushl
pushl
pushl
call
add
jmp
add
jmp
pop
pop
pop
mov
pop
ret
push
mov
add
push
push
push
mov
mov
testb
jne
push
push
push
call
add
mov
testb
jne
push
push
push
call
add
mov
mov
mov
mov
test
jne
push
push
push
call
add
cmpl
jne
mov
imull
mov
mov
xor
div
mov
mov
cmp
jbe
cmpl
je
push
push
push
call
add
mov
imul
sub
cmp
jae
push
push
push
call
add
mov
imul
add
cmpl
je
pushl
pushl
push
pushl
push
push
push
call
add
jmp
sub
pushl
pushl
push
push
push
push
push
call
add
mov
addl
test
jne
pop
pop
pop
pop
pop
pop
ret
push
mov
push
push
push
mov
mov
mov
testb
jne
push
push
push
call
add
mov
and
cmp
je
mov
jmp
cmpl
jne
mov
jmp
cmpl
jne
mov
add
mov
mov
jmp
mov
sub
sub
cmpl
je
push
push
push
call
add
mov
mov
mov
pop
pop
pop
pop
ret
push
mov
add
xor
push
push
push
mov
cmpl
jne
xor
jmp
mov
mov
mov
mov
sub
mov
testb
je
mov
testb
jne
push
push
push
call
add
mov
mov
testb
jne
push
push
push
call
add
mov
mov
mov
testb
jne
push
push
push
call
add
mov
mov
mov
mov
mov
mov
testb
je
mov
mov
testb
je
mov
mov
testb
jne
push
push
push
call
add
mov
mov
mov
jmp
cmpl
jg
mov
testb
jne
mov
mov
and
cmp
jne
mov
incl
jmp
xor
jmp
mov
cmpl
jne
sub
jmp
testb
je
mov
testb
jne
push
push
push
call
add
mov
mov
mov
jmp
mov
mov
mov
mov
testb
je
mov
mov
mov
mov
testb
je
mov
testb
je
testb
je
xor
mov
testb
jne
push
push
push
call
add
testb
je
mov
add
mov
jmp
mov
mov
mov
mov
mov
testb
je
mov
testb
je
addl
push
lea
push
pushl
call
add
mov
mov
mov
testb
je
mov
mov
testb
jne
push
push
push
call
add
imul
cmp
jae
sub
add
jmp
mov
mov
mov
test
je
mov
add
mov
jmp
mov
mov
test
je
mov
testb
jne
push
push
push
call
add
mov
mov
mov
test
je
xor
mov
testb
jne
push
push
push
call
add
mov
test
mov
mov
mov
mov
mov
je
mov
mov
mov
and
mov
cmp
jne
addl
mov
testb
je
mov
testb
je
test
je
push
lea
push
pushl
call
add
mov
mov
mov
cmpl
jne
test
je
mov
cmpw
je
mov
movzwl
add
test
jne
push
push
push
call
add
mov
mov
jmp
xor
mov
cmp
jb
mov
jmp
mov
jmp
xor
mov
testb
je
pushl
pushl
pushl
pushl
pushl
call
add
jmp
pushl
pushl
push
pushl
push
pushl
pushl
call
add
test
je
mov
testb
je
mov
cmpb
je
mov
mov
mov
mov
mov
call
mov
and
cmp
jne
and
cmp
jne
subl
mov
testb
je
mov
mov
mov
mov
cmpl
je
mov
movzwl
push
mov
pushl
pushl
call
add
jmp
pushl
call
pop
jmp
mov
cmpl
je
mov
movzwl
push
mov
pushl
pushl
call
add
jmp
pushl
call
pop
xor
mov
mov
add
cmp
ja
xor
pop
pop
pop
mov
pop
ret
push
mov
push
mov
cmp
jne
or
pop
pop
ret
mov
cmpw
jne
mov
add
mov
mov
add
mov
jmp
mov
add
push
push
push
call
add
test
je
or
pop
pop
ret
movzwl
pop
pop
ret
nop
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
inc
outsl
jb
popa
outsb
and
sub
sub
jns
imul
xor
and
jb
popa
outsb
and
jb
outsl
jb
je
outsl
outsb
add
add
add
inc
add
adc
in
inc
add
inc
add
inc
add
add
add
in
inc
add
inc
add
add
test
nop
xchg
adc
inc
add
add
in
inc
add
in
inc
add
ljmp
add
xor
inc
add
mov
add
inc
add
mov
add
add
mov
add
mov
add
inc
add
inc
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
inc
add
mov
add
mov
add
scas
inc
add
scas
inc
add
mov
add
mov
add
mov
add
mov
add
inc
add
mov
add
inc
add
mov
add
in
push
mov
add
push
dec
jne
mov
add
push
push
push
lea
lea
movb
movb
movb
mov
mov
mov
mov
mov
mov
call
pop
mov
movb
movb
movb
xor
inc
mov
add
add
mov
add
mov
dec
mov
cmp
jne
mov
cmp
jne
mov
inc
mov
cmp
jne
mov
add
add
mov
mov
test
jl
inc
lea
mov
mov
inc
inc
dec
jne
movw
movw
mov
mov
mov
add
mov
cmp
je
add
mov
cmp
je
mov
test
jl
inc
lea
xor
mov
xor
mov
inc
dec
jne
movw
movw
mov
mov
mov
add
mov
cmp
je
add
mov
cmp
je
lea
call
pop
pop
pop
mov
pop
ret
pop
sub
push
or
add
push
add
add
add
push
or
add
add
add
mov
mov
sbb
outsb
mov
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
fsubrs
bound
jmp
jmp
scas
pop
pusha
scas
pop
pusha
stos
out
scas
arpl
arpl
out
scas
outsl
pusha
scas
outsl
in
stos
iret
outsb
sub
mov
sub
jae
adc
pusha
cmpsb
outsl
pusha
mov
adc
and
pusha
loop
stos
push
mov
or
pop
pusha
mov
pusha
mov
pusha
lock
lock
mov
frstor
sbb
pop
pusha
test
call
bound
bound
call
dec
sub
scas
push
stos
sub
scas
dec
pusha
stos
repz
pusha
mov
call
or
call
call
shll
mov
sahf
shll
sarl
mov
call
and
cmp
sub
pusha
mov
call
sub
jmp
dec
pusha
mov
adc
add
mov
ja
outsb
sbb
outsb
mov
outsb
lea
outsb
mov
outsb
sbbl
sbbb
sbbl
adc
data16
mov
mov
adc
adc
iret
adc
lahf
ljmp
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
data16
out
adc
mov
scas
or
inc
adc
adc
bound
adc
adc
bound
adc
adc
mov
add
repnz
adc
mov
pcmpgtd
adc
adc
mov
data16
ficoms
adc
mov
pop
data16
xor
mov
aaa
data16
inc
adc
adc
bound
adc
lea
popa
sbb
lea
addr16
lea
jnp
adc
fwait
jmp
pusha
jle
sbb
jle
sbb
popa
jle
adc
or
adc
sahf
hlt
lea
dec
sbb
jle
sbb
popa
jle
adc
or
ljmp
outsb
xchg
sbb
lea
xchg
sbb
lea
dec
sbb
outsb
xchg
sbb
lea
dec
sbb
outsb
xchg
sbb
pusha
mov
fidivl
daa
bound
adc
mov
dec
adc
sub
lea
rcrb
rolb
loope
outsb
jno
adc
mov
shlb
adc
push
ljmp
adc
adc
jmp
jmp
outsb
lahf
adc
adc
mov
mov
sbb
mov
scas
push
mov
mov
adc
or
jg
push
adc
jmp
xchg
loopne
ljmp
adc
adc
xchg
push
sti
int3
jmp
popf
pop
sub
jmp
scas
push
mov
aaa
pusha
cmp
jmp
jmp
mov
scas
pop
sub
scas
gs
fs
sub
and
mov
data16
sbb
shll
xor
fs
xor
xchg
adc
pop
xchg
adc
sub
push
pusha
cmpsb
jg
and
arpl
jmp
inc
mov
push
adc
jmp
fdivs
arpl
jmp
inc
in
xor
jmp
jmp
sahf
and
data16
sbb
inc
mov
mov
mov
push
mov
pusha
sub
jmp
imul
mov
outsb
outsb
xor
adc
adc
xchg
ljmp
xchg
adc
jmp
outsb
mov
mov
xor
adc
mov
ljmp
outsb
jmp
adc
adc
and
adc
cmp
popa
cltd
adc
iret
bound
adc
bound
pusha
mov
call
adc
inc
data16
mov
mov
adc
adc
adc
adc
sub
sub
adc
mov
adc
adc
adc
adc
lahf
subb
ret
pusha
sbb
daa
dec
bound
outsb
adc
adc
jnp
sub
scas
or
xchg
jmp
adc
sub
sub
cwtl
jmp
sub
adc
jmp
or
outsb
mov
cmp
sub
lea
adc
inc
adc
adc
jg
sub
adc
adc
xchg
sbb
adc
sub
scas
adc
adc
sub
cltd
adc
mov
fcoms
outsb
adc
adc
adc
pusha
scas
test
fwait
mov
stc
sahf
mov
xchg
adc
adc
mov
adc
adc
outsb
sub
adc
dec
adc
add
scas
adc
adc
in
adc
dec
adc
adc
add
jno
sub
sub
into
adc
sbb
jmp
lea
das
adc
jmp
xchg
adc
adc
mov
stos
scas
sub
sub
sub
sub
unpcklps
adc
dec
outsb
adc
sub
out
xchg
repnz
adc
dec
test
outsb
adc
test
adc
sub
rcl
adc
sub
xchg
outsb
cmp
jmp
lea
adc
jmp
xchg
outsb
adc
xor
adc
mov
xchg
outsb
sub
mov
mov
shrl
outsb
sub
adc
sub
lea
call
mov
sub
adc
adc
lea
aaa
outsb
lahf
mov
sub
outsl
adc
outsb
outsb
outsb
adc
pusha
outsb
adc
outsb
pop
shrl
jmp
sbb
adc
adc
adc
sub
sbb
adc
out
adc
adc
mov
sbb
adc
addl
mov
inc
adc
sub
mov
adc
jmp
adc
outsb
inc
xor
subl
adc
adc
adc
adc
shll
mov
mov
outsb
or
adc
sbb
add
adc
adc
cwtl
call
sub
add
outsb
lea
bound
data16
out
xchg
mov
mov
jmp
mov
mov
outsb
stc
mov
cltd
xor
popa
adc
adc
sbbl
scas
scas
adc
adc
pusha
fisubrl
sub
sahf
mov
mov
adc
lret
adc
jmp
xchg
adc
sub
adc
adc
adc
shrl
pusha
out
adc
adc
sbb
adc
sbb
pusha
lea
iret
call
adc
sub
sahf
pusha
scas
cvtps2pi
adc
push
test
outsb
adc
pop
test
sahf
rclb
adc
data16
adc
lea
sahf
out
adc
out
adc
adc
call
lea
sub
fsubrs
adc
outsb
push
out
jmp
cmpsb
push
adc
sahf
adc
adc
adc
outsb
xor
sahf
outsb
adc
cmc
lahf
sub
sbb
adc
bound
outsb
pusha
adc
adc
add
adc
mov
adc
adc
adc
push
outsb
sub
xchg
adc
data16
adc
ljmp
adc
outsb
adc
test
call
sub
outsb
mov
adc
sub
mov
adc
jle
xchg
adc
lret
add
sbb
and
jmp
adc
pusha
inc
adc
pop
pusha
pop
jmp
lahf
or
mov
data16
adc
lods
sahf
adc
adc
adc
adc
adc
outsb
adc
sub
sbb
adc
mov
adc
sbb
adc
sub
add
mov
outsb
adc
outsb
sbb
adc
ljmp
adc
test
mov
lahf
adc
sbb
jle
leave
arpl
adc
add
sub
adc
adc
outsb
bound
sahf
scas
stc
sbb
adc
bound
adc
mov
fcoml
repz
in
jmp
mov
ljmp
mov
adc
adc
repz
fistl
adc
adc
sub
cwtl
cli
sahf
adc
adc
adc
jmp
adc
lea
add
add
inc
add
iret
inc
add
iret
inc
add
iret
inc
add
iret
inc
add
iret
inc
add
inc
add
add
add
insb
insb
outsb
add
jae
add
outsb
imul
outsl
arpl
add
jb
outsl
jae
jne
ja
jb
add
add
ja
imul
arpl
and
jae
add
add
push
inc
add
add
cld
incl
add
add
add
add
incl
add
add
add
add
add
add
add
incl
add
add
inc
add
add
add
add
add
inc
add
push
inc
add
sub
lock
inc
add
push
inc
add
add
cld
incl
add
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
iret
inc
add
push
inc
add
add
add
add
incl
add
add
iret
inc
add
add
add
incl
add
add
jb
outsb
fs
insl
add
imul
and
fs
imul
and
insb
insb
and
jb
outsb
fs
insl
and
imul
insb
outsb
fs
insl
add
outsl
jb
outsb
fs
insl
inc
push
jns
inc
gs
gs
and
jno
imul
insb
outsb
fs
insl
inc
push
jns
inc
jb
gs
gs
and
jno
jo
add
outsl
jb
outsb
fs
insl
inc
push
jns
push
gs
insb
insb
outsl
arpl
insl
and
jno
jo
imul
add
add
add
adc
inc
add
inc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
or
inc
add
inc
add
inc
add
gs
je
outsb
and
popa
jo
insb
outsl
arpl
add
inc
add
add
add
inc
add
add
add
sub
add
add
mov
inc
add
incl
add
add
roll
add
add
fdivr
incl
add
add
incl
add
add
call
add
add
add
add
inc
add
add
add
add
add
sub
in
inc
add
inc
add
rolb
cmp
inc
add
inc
add
add
add
inc
add
add
add
add
add
add
add
incl
add
add
roll
add
add
fdivr
incl
add
add
add
add
and
insl
gs
arpl
je
outsl
outsb
and
outsl
ja
add
and
arpl
je
outsl
outsb
and
outsl
ja
add
and
insb
outsl
arpl
gs
gs
imul
outsl
ja
add
jb
jb
jb
jae
fs
add
add
adcb
add
add
add
incl
add
add
inc
add
cmp
outsl
je
jo
add
sub
popa
insl
add
je
jo
arpl
add
add
je
jo
arpl
add
add
je
jo
arpl
add
sub
popa
insl
add
je
jo
arpl
add
sub
popa
insl
add
je
jo
arpl
add
pop
push
push
push
push
inc
sub
jae
sub
popa
jae
sub
js
je
jo
arpl
add
pop
push
push
push
push
inc
sub
jbe
je,pt
dec
popa
jae
sub
js
je
jo
arpl
add
jbe
je,pt
inc
insb
popa
jae
je,pn
arpl
popa
addr16
and
pop
dec
inc
push
pop
inc
inc
push
inc
push
add
je
jo
arpl
add
sub
jae
outsb
gs
popaw
jb
sub
jbe
popa
bound
je
sub
xor
cmp
js
je
jo
arpl
add
outsl
je
jo
add
push
jns
push
je
and
cmp
and
pop
push
push
push
push
inc
sub
push
jns
push
je
sub
popa
jae
sub
js
je
jo
arpl
add
push
jns
push
je
and
cmp
and
pop
push
push
push
push
inc
sub
push
jns
push
je
sub
popa
jae
sub
js
je
jo
arpl
add
arpl
push
je
and
jl
and
pop
push
push
push
push
inc
sub
arpl
push
je
sub
popa
jae
sub
js
je
jo
arpl
add
imul
jns
gs
inc
sub
arpl
push
je
sub
je
je
jns
push
je
sub
cmp
js
je
jo
arpl
add
push
jns
push
je
and
cmp
and
imul
jns
gs
inc
sub
push
jns
push
je
sub
je
je
jns
push
je
sub
cmp
js
je
jo
arpl
add
arpl
push
je
add
je
jo
arpl
add
sub
jae
outsb
gs
popaw
jb
sub
jbe
popa
bound
je
sub
xor
cmp
js
je
jo
arpl
add
fs
js
je
jo
arpl
add
outsb
daa
je
popa
fs
jae
and
popa
jae
and
fs
jae
and
outsb
outsl
and
jae
and
popa
jae
and
je
jns
outsw
jne
sub
and
inc
popa
outsb
daa
je
popa
fs
jae
and
popa
jae
and
fs
jae
and
outsb
outsl
and
jae
and
popa
jae
and
je
jns
outsw
jne
sub
add
je
jo
arpl
fdivr
in
cmp
inc
cmp
mov
add
add
add
add
ss
add
cmp
fdivr
incl
add
add
aad
add
add
pushf
add
add
pop
inc
push
push
fs
dec
outsl
outsl
imul
add
add
add
add
add
add
incl
add
add
inc
add
add
add
add
push
je
arpl
dec
jbe
jb
insb
outsl
ja
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pusha
add
add
add
pusha
add
add
add
add
add
insb
outsl
arpl
imul
fs
and
imul
popa
bound
arpl
popa
je
outsb
and
outsb
fs
and
imul
insb
outsl
arpl
add
outsb
fs
gs
arpl
arpl
popa
je
outsb
and
outsl
bound
and
outsb
fs
and
imul
add
add
add
push
or
or
add
sub
sub
sub
sub
sub
add
push
push
push
push
push
push
push
push
push
push
push
push
push
cvttps2pi
add
sub
sub
adc
sbb
add
sub
sub
push
push
push
push
push
push
and
add
adc
sub
adc
adc
adc
adc
sub
sub
adc
adc
push
add
add
push
adc
adc
adc
adc
adc
adc
sbb
push
adc
adc
adc
adc
adc
xor
adc
adc
adc
adc
adc
adc
adc
adc
add
adc
adc
adc
adc
adc
adc
sbb
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
and
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
clc
fiadds
adc
inc
add
filds
cmp
inc
add
inc
add
inc
add
inc
add
inc
add
filds
filds
ljmp
add
loopne
add
loopne
add
loopne
add
inc
add
inc
add
inc
add
inc
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
loope
add
inc
add
inc
add
inc
add
inc
add
loope
add
loope
add
loope
add
loope
add
loope
add
loop
add
loop
add
inc
add
add
add
inc
add
add
add
add
jb
jb
xor
dec
outsb
jbe
insb
imul
imul
bound
add
and
arpl
imul
and
arpl
jns
push
popa
je
and
je
outsw
jne
add
and
outsb
jns
outsl
jo
outsb
and
insb
gs
push
gs
imul
fs
imul
and
insb
and
insl
bound
add
insl
outsl
jb
and
outsb
popa
and
jae
gs
je
outsb
outsl
jne
push
outsl
jb
add
jbe
insb
imul
jns
bound
imul
fs
jae
add
jbe
insb
imul
outsl
outsb
insl
outsb
je
dec
outsb
jbe
insb
imul
je
dec
outsb
jbe
insb
imul
jae
arpl
add
jbe
insb
imul
inc
popa
and
fs
jae
add
and
arpl
fs
arpl
inc
je
gs
jo
gs
jb
insl
outsl
jbe
and
jb
outsb
je
imul
jns
dec
outsl
je
jae
insl
and
imul
insl
outsl
jb
and
insb
gs
dec
outsb
jbe
insb
imul
outsb
je
inc
jb
and
je
je
outsl
and
add
arpl
outsw
jb
popa
je
gs
outsl
jb
inc
jb
jae
sub
arpl
insb
imul
and
outsb
jns
outsl
jo
outsb
and
insb
gs
dec
outsl
and
imul
gs
gs
dec
outsb
popa
jo
jb
jo
imul
dec
and
outsb
je
outsl
insb
and
gs
je
outsl
outsb
add
arpl
popa
bound
imul
and
add
insb
and
and
add
and
popa
arpl
insb
gs
outsl
outsb
and
imul
gs
insb
and
imul
gs
fs
and
insb
and
jae
gs
add
and
outsb
jns
insb
imul
outsl
imul
jo
jo
add
je
and
addr16
outsb
je
push
gs
insb
je
je
outsl
and
add
insb
and
jb
popa
fs
gs
jae
jae
push
outsl
jae
imul
popa
fs
outsl
arpl
dec
jo
jb
je
outsl
outsb
and
je
jo
jb
imul
and
arpl
jo
outsl
arpl
jae
dec
outsb
je
jb
jne
je
and
outsb
arpl
outsb
and
insb
insb
add
jo
je
outsl
jne
jo
je
gs
outsl
jb
dec
outsl
and
arpl
fs
arpl
outsl
jb
popa
fs
jae
add
jae
jne
arpl
je
insl
jo
jb
jb
insb
jns
jne
popa
jbe
imul
insb
outsl
arpl
fs
arpl
jb
jno
imul
jae
jne
arpl
bound
jns
dec
outsl
je
popa
and
arpl
jns
dec
jae
popa
and
arpl
jns
add
arpl
jns
outsb
outsl
je
gs
jo
jns
push
outsb
imul
outsb
and
jb
jb
cmp
add
add
add
add
arpl
popa
je
outsb
and
outsl
bound
and
jb
popa
insl
and
imul
insb
insb
outsl
arpl
imul
gs
insl
and
imul
popa
bound
arpl
popa
je
outsb
and
jb
popa
insl
and
imul
je
insl
pop
insb
outsl
arpl
add
jb
popa
insl
jae
arpl
add
outsb
jne
insb
sub
add
add
jne
insb
add
add
add
push
push
add
pop
push
push
push
push
add
push
add
or
add
push
push
push
push
push
push
push
push
adc
nopl
or
push
push
pop
push
sbb
push
push
push
adc
push
push
push
or
push
push
push
push
push
push
adc
invd
or
push
push
push
adc
push
push
push
adc
or
push
or
push
push
push
nop
nop
add
and
and
and
and
and
and
and
and
and
sub
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
add
out
add
out
add
out
add
out
add
out
add
out
add
inc
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
add
inc
add
inc
add
inc
add
inc
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
add
in
add
add
add
in
add
out
add
out
add
add
add
add
sub
add
add
add
add
cmp
das
and
add
inc
and
pop
add
add
add
outsb
fs
jns
push
jne
jae
popa
jns
push
gs
gs
popa
jns
push
push
popa
jns
inc
jb
fs
jns
push
popa
je
jb
popa
jns
push
jne
fs
jns
dec
outsl
outsb
add
add
add
add
imul
push
jne
add
outsb
jne
jb
add
bound
popa
jb
add
jb
push
imul
jne
add
insb
jns
inc
jne
jne
je
push
gs
gs
bound
add
je
bound
add
jbe
insl
bound
add
gs
bound
add
outsb
add
bound
dec
popa
jb
inc
jo
add
jns
dec
jne
add
insb
add
add
jo
dec
arpl
outsl
jbe
inc
arpl
inc
add
add
and
jae
gs
outsl
jb
add
cmp
add
add
add
add
add
add
add
add
add
add
cli
or
add
add
add
or
add
add
add
push
ret
cmovo
add
add
add
adc
add
add
adcb
add
add
mov
add
add
add
leave
sbb
jo
test
lds
iret
decl
js
roll
mov
or
mov
fdivrp
popf
sti
jmp
stos
push
inc
xchg
push
cmpsb
scas
mov
pop
or
addl
lds
mov
and
and
add
add
cmp
xor
add
bound
cmp
inc
add
inc
add
imul
data16
outsl
popa
je
outsb
and
imul
insl
popa
je
and
je
insb
imul
arpl
data16
and
outsl
popa
je
outsb
and
imul
insl
popa
je
and
je
insb
imul
add
dec
bound
dec
bound
push
bound
push
bound
jo
imul
data16
outsl
popa
je
outsb
and
imul
insl
popa
je
and
je
insb
imul
arpl
data16
and
outsl
popa
je
outsb
and
imul
insl
popa
je
and
je
insb
imul
add
xor
add
add
cmpb
add
add
lock
add
add
add
cmp
jg
out
jg
jg
add
jg
add
add
add
addb
lock
add
add
add
incl
add
add
lock
jg
add
add
lock
incl
add
add
lock
add
add
lock
add
addb
add
add
add
cmp
inc
add
inc
add
ljmp
cmp
inc
add
inc
add
inc
add
inc
add
inc
dec
dec
add
dec
inc
add
inc
push
inc
dec
dec
push
add
inc
inc
push
inc
dec
dec
push
add
push
push
add
dec
push
push
add
sub
sub
inc
add
sub
dec
add
add
add
sub
dec
add
inc
add
add
add
add
sub
dec
add
dec
add
cmp
add
add
add
add
add
add
add
jg
add
add
add
sar
add
add
add
add
add
add
add
add
add
add
jg
add
add
add
sar
add
add
and
clc
jg
jno
je
add
add
jb
outsl
jb
and
jae
gs
and
fs
and
arpl
jae
popaw
imul
inc
inc
push
and
insb
and
je
imul
imul
jae
gs
imul
insb
gs
add
imul
and
and
add
and
and
and
and
and
and
add
add
add
jb
gs
xor
cs
insb
add
je
jb
arpl
fs
jae
add
jb
popa
outsb
xor
add
add
outsb
outsl
jb
popa
insb
and
outsl
addr16
insl
and
insl
imul
jl
inc
add
add
add
inc
add
add
test
nop
xchg
add
add
dec
outsl
and
popa
arpl
outsw
jb
arpl
insl
popa
outsb
and
and
addr16
outsb
je
jbe
arpl
add
and
popa
arpl
outsw
jb
arpl
insl
popa
outsb
and
and
addr16
outsb
je
add
add
add
add
and
popa
arpl
outsw
jb
arpl
jns
outsl
data16
insl
insl
popa
outsb
and
add
add
and
popa
arpl
outsw
jb
arpl
jns
outsl
data16
insl
insl
popa
outsb
and
add
add
inc
add
add
add
add
je
outsl
data16
insl
outsl
jb
and
and
gs
jb
jbe
add
add
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
imul
insb
and
je
popa
insb
insb
outsl
arpl
and
insl
outsl
jb
and
jb
outsb
jbe
jb
outsb
insl
outsb
je
bound
imul
jb
popa
je
outsb
and
jbe
jb
outsb
insl
outsb
je
insb
outsl
arpl
add
add
add
add
or
add
or
add
sldt
add
add
add
add
add
add
adc
add
add
adc
add
add
nop
nop
add
add
add
add
arpl
popa
je
outsb
and
gs
je
insb
outsl
arpl
add
add
gs
je
outsb
and
jb
popa
and
popa
and
imul
add
insl
popa
jo
outsl
jb
and
jb
jb
dec
lcall
fdivr
incl
add
add
in
inc
add
add
aam
inc
add
incl
add
add
inc
add
add
cmp
add
add
inc
add
incl
add
add
inc
add
add
or
add
push
out
inc
add
add
pop
pop
pop
inc
push
push
fs
dec
outsl
outsl
imul
arpl
dec
popa
jae
and
and
js
xor
xor
and
cmp
jl
sub
outsl
jb
popa
jae
and
and
js
xor
xor
and
js
arpl
add
arpl
dec
popa
jae
and
and
js
xor
xor
and
js
arpl
add
popa
je
add
and
popa
je
and
js
arpl
add
popa
je
add
and
popa
je
and
js
arpl
add
fs
jb
popa
jae
and
and
js
xor
xor
and
js
arpl
add
popa
je
add
and
popa
je
and
js
arpl
add
insl
data16
dec
popa
jae
and
and
js
xor
xor
and
js
arpl
add
popa
je
add
and
popa
je
and
js
arpl
add
je
inc
fs
js
arpl
add
jb
fs
js
arpl
add
addr16
jns
add
arpl
add
inc
push
push
gs
gs
imul
add
arpl
add
add
arpl
add
jb
je
sub
push
push
popa
fs
cmp
add
arpl
add
push
je
sub
push
push
popa
fs
cmp
jb
je
add
arpl
add
push
je
sub
je
bound
jb
cmp
je
je
add
arpl
add
push
je
sub
jb
inc
outsl
jo
and
js
arpl
add
fs
push
je
sub
popa
jae
and
and
dec
push
pop
push
push
push
sub
cmp
js
arpl
add
jae
and
and
dec
push
pop
push
push
push
add
arpl
add
push
je
sub
popa
jae
and
and
dec
push
pop
push
push
push
add
arpl
add
push
je
sub
jns
gs
inc
and
arpl
jb
js,pt
inc
popa
jae
add
arpl
add
je
je
sub
arpl
fs
js
arpl
add
push
je
sub
imul
jae
jp
add
arpl
add
jb
je
and
and
jb
je
and
fs
push
push
add
arpl
add
addr16
and
outsb
je
js
and
and
popa
insb
pop
jne
ja
outsb
sub
add
and
addr16
and
outsb
je
js
and
and
popa
insb
pop
jne
ja
outsb
sub
and
js
arpl
add
addr16
and
outsb
je
js
and
and
js
gs
imul
insb
gs
sub
and
bound
jne
and
outsb
je
js
and
and
js
gs
imul
insb
gs
sub
add
arpl
add
jb
jns
gs
insb
popa
jae
je,pn
arpl
popa
addr16
and
pop
dec
inc
push
pop
inc
push
dec
push
add
arpl
add
jb
jns
gs
insb
popa
jae
je,pn
arpl
jb
fs
js
arpl
add
gs
push
je
sub
arpl
imul
and
jb
jns
gs
insb
popa
jae
je,pn
arpl
jb
outsl
jne
je
and
data16
popa
addr16
js
arpl
add
jb
jns
gs
insb
popa
jae
je,pn
arpl
popa
addr16
and
pop
dec
inc
push
pop
inc
push
dec
push
add
arpl
add
jb
outsb
je
cmp
jbe
jb
outsl
jne
je
js
arpl
add
pop
push
push
push
push
inc
sub
push
jns
gs
popa
jae
sub
js
arpl
add
pop
push
push
push
push
inc
sub
push
jns
gs
popa
jae
sub
js
arpl
add
insl
push
jns
add
arpl
add
insl
push
jns
gs
insb
popa
jae
je,pn
arpl
popa
addr16
and
pop
dec
inc
push
pop
inc
push
dec
push
add
arpl
add
jb
jns
gs
popa
jae
and
and
dec
push
pop
inc
push
push
inc
pop
add
arpl
add
jb
jns
gs
jb
je,pn
popa
inc
insb
gs
push
jns
gs
insb
popa
jae
je,pn
arpl
popa
addr16
and
pop
dec
inc
push
pop
inc
push
dec
push
add
arpl
add
je
outsl
jne
je
js
arpl
add
fs
outsl
jne
je
cmp
and
gs
inc
outsl
jne
je
jl
and
gs
inc
outsl
jne
je
cmp
js
arpl
add
inc
outsl
jne
je
cmp
and
je
outsl
jne
je
js
arpl
add
pop
inc
dec
inc
push
push
sub
jb
jns
gs
popa
jae
sub
js
arpl
add
sub
jae
outsb
gs
popaw
jb
sub
jbe
je
fs
pop
sub
cmp
js
arpl
add
push
je
sub
inc
insb
popa
addr16
and
inc
push
inc
push
inc
pop
push
push
push
push
inc
dec
jl
push
inc
push
inc
pop
push
inc
push
push
inc
dec
sub
js
arpl
add
push
je
sub
push
jns
gs
popa
jae
and
and
dec
push
pop
push
push
push
add
arpl
add
push
je
sub
push
jns
gs
je
je,pn
jo
popa
jae
push
jns
gs
insb
popa
jae
je,pn
arpl
popa
addr16
and
pop
dec
inc
push
pop
inc
push
dec
push
add
arpl
add
pop
inc
dec
inc
push
push
sub
push
je
sub
push
jns
gs
popa
jae
sub
es
fs
push
je
sub
push
jns
gs
insb
popa
jae
je,pn
arpl
popa
addr16
and
pop
dec
inc
push
pop
inc
push
dec
push
sub
js
arpl
add
je
je
sub
push
jns
gs
popa
jae
and
and
dec
push
pop
inc
push
push
inc
pop
add
arpl
add
jb
jns
gs
insb
popa
jae
je,pn
arpl
popa
addr16
and
pop
dec
inc
push
pop
inc
push
dec
push
add
arpl
add
gs
push
jns
gs
insb
popa
jae
je,pn
arpl
popa
addr16
and
pop
dec
inc
push
pop
inc
push
dec
push
add
arpl
add
jb
jns
gs
popa
jae
and
and
dec
push
pop
inc
push
push
inc
pop
add
arpl
add
jb
jns
gs
popa
jae
and
and
dec
push
pop
push
push
push
add
arpl
add
add
arpl
add
sub
inc
js
xor
add
inc
add
inc
add
inc
inc
push
push
add
adc
add
add
add
add
add
add
push
add
jo
add
sub
add
push
add
xor
push
add
popa
push
add
jne
add
lea
add
push
add
mov
push
add
fistl
add
add
add
push
add
popa
push
add
jne
add
lea
add
push
add
mov
push
add
fistl
add
add
add
push
add
add
push
add
and
cmp
push
push
add
addr16
add
jne
add
jg
add
mov
popf
push
add
mov
add
lret
push
add
jecxz
add
icebp
push
add
add
add
push
add
daa
push
add
cmp
add
add
pop
push
add
imul
jg
add
xchg
push
add
mov
push
add
ret
push
add
rcll
add
push
add
icebp
push
add
pop
push
add
adc
add
push
add
cmp
add
add
arpl
add
add
mov
add
push
add
rcll
rcll
add
push
add
cmc
push
add
pop
push
add
adc
add
push
add
cmp
add
add
gs
add
jae
add
adcl
cltd
push
add
movsl
push
add
mov
add
add
push
add
add
push
add
and
cmp
push
push
add
addr16
add
jne
add
jg
add
mov
popf
push
add
mov
add
lret
push
add
jecxz
add
icebp
push
add
add
add
push
add
daa
push
add
cmp
add
add
pop
push
add
imul
jg
add
xchg
push
add
mov
push
add
ret
push
add
rcll
add
push
add
icebp
push
add
pop
push
add
adc
add
push
add
cmp
add
add
arpl
add
add
mov
add
push
add
rcll
rcll
add
push
add
cmc
push
add
pop
push
add
adc
add
push
add
cmp
add
add
gs
add
jae
add
adcl
cltd
push
add
movsl
push
add
mov
add
add
push
add
aad
add
in
push
add
add
add
pop
add
sub
pop
add
dec
pop
add
pop
pop
add
outsl
pop
add
jg
add
xchg
pop
add
cmpsl
pop
add
mov
add
lret
pop
add
loope
add
out
pop
add
add
pop
add
add
add
push
add
aad
add
in
push
add
add
add
pop
add
sub
pop
add
dec
pop
add
pop
pop
add
outsl
pop
add
jg
add
xchg
pop
add
cmpsl
pop
add
mov
add
lret
pop
add
loope
add
out
pop
add
add
pop
add
add
add
inc
inc
push
inc
push
dec
xor
cs
dec
dec
add
push
dec
inc
dec
xor
cs
dec
dec
add
inc
push
xor
cs
dec
dec
add
add
insb
imul
imul
add
add
jne
inc
gs
outsb
fs
je
gs
imul
add
inc
imul
je
jb
gs
arpl
add
add
je
jne
jb
outsb
je
ja
jb
imul
add
push
gs
jo
outsb
dec
gs
add
add
addr16
jo
outsb
dec
gs
js
add
add
addr16
jo
outsb
dec
gs
add
add
addr16
gs
popa
arpl
gs
add
add
push
gs
gs
popa
insb
jne
push
add
add
push
imul
jb
imul
dec
popa
outsb
fs
gs
add
add
outsb
arpl
dec
outsl
add
add
inc
insb
outsl
jae
dec
popa
outsb
fs
add
add
gs
je
inc
imul
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
jb
jb
je
arpl
push
arpl
outsb
add
add
inc
outsb
jne
push
gs
jne
arpl
popa
insl
gs
add
add
inc
js
je
jb
arpl
jae
add
inc
gs
inc
push
add
add
inc
gs
push
dec
outsb
outsw
add
add
je
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
jne
jb
outsb
je
push
dec
add
add
inc
gs
gs
jne
je
outsl
insl
insl
inc
outsl
outsb
imul
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
gs
imul
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
add
je
outsl
arpl
push
imul
inc
gs
outsl
fs
gs
imul
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
inc
dec
inc
push
add
add
inc
gs
jb
arpl
fs
jae
add
add
inc
gs
jb
arpl
jae
gs
jo
add
add
je
jb
imul
imul
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
je
je
dec
popa
outsb
fs
add
add
inc
gs
je
imul
push
add
add
inc
gs
jns
je
insl
dec
outsb
outsw
add
add
je
gs
jo
popa
je
push
add
add
inc
gs
gs
imul
inc
gs
gs
imul
add
inc
insb
outsl
bound
dec
gs
outsl
jb
push
je
je
jae
add
add
popa
jo
insb
insb
outsl
arpl
add
dec
gs
jo
jb
add
add
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
jbe
inc
jb
je
arpl
push
arpl
outsb
add
add
dec
outsl
popa
fs
imul
add
add
dec
jne
je
inc
jns
gs
outsl
push
imul
add
dec
jo
outsb
dec
outsl
bound
push
arpl
add
add
imul
jo
imul
push
je
push
outsb
ja
outsb
add
add
je
outsl
outsb
jae
insb
gs
je
insb
dec
popa
outsb
fs
gs
add
push
gs
imul
gs
add
add
je
popa
outsb
fs
gs
outsl
jne
je
add
add
je
popa
jae
inc
jb
outsl
jb
add
add
jp
outsl
push
gs
jne
arpl
add
add
inc
insb
insb
outsl
arpl
add
add
inc
jb
add
add
inc
gs
popa
insb
jne
add
add
push
gs
popa
insb
jne
add
add
push
gs
js
gs
imul
gs
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
jb
jne
insb
push
jne
jb
add
add
push
imul
outsl
dec
jne
je
inc
jns
add
add
imul
add
push
jb
je
push
jb
imul
je
outsl
outsb
inc
add
add
pop
insb
jb
popa
add
add
inc
imul
add
add
inc
push
imul
outsl
insl
push
outsl
imul
inc
jb
popa
je
inc
imul
jb
insl
push
add
add
inc
fs
bound
outsl
outsb
push
jb
outsb
jae
arpl
outsb
add
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
add
fs
outsb
jne
add
inc
outsb
jne
push
push
push
imul
add
inc
gs
insb
popa
jae
dec
outsl
outsb
addr16
add
add
je
insb
imul
dec
ja
gs
add
inc
gs
jne
jae
jb
outsl
jae
add
add
je
gs
je
jo
imul
add
inc
gs
gs
outsl
popa
jb
dec
popa
jns
jne
add
add
jae
popa
addr16
outsl
js
add
add
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
add
outsb
fs
gs
popa
addr16
imul
add
add
je
outsb
jne
outsb
outsw
add
add
je
outsb
jne
je
insl
inc
imul
add
push
outsb
jo
arpl
inc
inc
insb
push
popa
jb
insl
add
add
jo
imul
cmp
add
add
add
add
add
add
add
sub
add
pusha
add
cmp
add
add
cwtl
rolb
dec
pusha
add
pop
pusha
add
add
add
push
jb
push
arpl
push
cs
add
inc
gs
js
gs
inc
dec
dec
imul
pop
inc
push
push
fs
dec
outsl
outsl
imul
add
add
add
add
add
add
sub
add
inc
add
adcb
add
pop
add
addb
add
add
add
add
add
add
add
xlat
add
add
add
add
add
add
add
add
add
call
add
addb
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
enter
add
add
add
add
inc
inc
add
fadds
add
clc
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
push
add
add
dec
add
dec
add
add
lds
and
mov
xlat
mov
jbe
and
mov
mov
xor
pop
jp
mov
push
inc
push
mov
enter
xlat
add
xlat
mov
lods
test
iret
xchg
or
fs
and
pop
shll
push
add
pop
ljmp
pop
xchg
inc
ljmp
push
sbb
cmp
sub
clc
inc
cmp
mov
sub
push
icebp
mul
repnz
sarb
fstpl
lret
icebp
cmp
sahf
stos
inc
lahf
arpl
mov
aaa
rcll
dec
lods
arpl
and
jbe
aas
cmpsl
repz
sti
or
mov
xchg
jbe
xchg
ja
cmpsb
add
roll
sahf
jg
scas
dec
jg
sub
pushf
and
std
adc
popa
lret
and
sub
lcall
sbb
cmc
push
out
xrelease
aam
das
sbb
add
subl
push
mov
nop
std
or
jae
xor
cmp
scas
in
aas
cwtl
popa
outsl
flds
loopne
adc
push
sti
stos
jae
cmp
out
or
testb
sub
pop
mov
xchg
ljmp
ja
adc
in
gs
lods
repnz
gs
rolb
mov
cmpb
dec
sub
cmp
mov
aad
mov
inc
cmp
out
mov
bound
and
or
and
or
mov
mov
sbb
xor
xchg
xor
xchg
loopne
xchg
shlb
jg
sub
cld
popf
and
push
push
imul
arpl
mov
pop
push
fdivl
sbb
inc
out
xchg
repnz
sub
pop
clc
hlt
psubw
int
addr16
andb
ljmp
pop
jae
dec
push
mov
aam
and
icebp
push
mov
pusha
fnstcw
adc
pop
aas
iret
push
mov
adc
xlat
jno
aad
fbld
sub
mov
lds
push
mov
push
sarl
sub
cmp
rcr
xor
inc
mov
leave
lret
dec
pop
leave
ja
xorb
mov
loope
adc
pop
add
dec
sbb
xchg
sahf
jnp
jp
xchg
inc
and
xchg
xchg
in
fnsave
push
mov
mulb
xchg
movsl
or
cmp
xor
test
push
imul
mov
ffree
stc
pop
cmp
push
insl
dec
loope
rol
jecxz
jo
pop
push
outsb
jne
lcall
das
sbb
jb
lcall
or
cmp
pop
std
std
mov
cmp
gs
push
ss
call
jbe
jg
outsl
or
loop
xor
push
pop
jne
aas
push
enter
insl
mov
pop
mov
xor
adc
jae
scas
jnp
fisttps
or
in
add
mov
negl
sbbb
stos
das
enter
xchg
sbb
xor
xchg
xor
jg
dec
lods
fs
icebp
jle
add
repz
shll
inc
clc
rcll
cs
outsl
pop
lahf
js
cmp
xchg
test
cmpsl
add
test
adc
mov
lea
cmc
push
xchg
and
mov
xchg
call
pop
ja
leave
cld
mov
mov
pop
cmp
dec
mov
shlb
inc
sub
jno
pop
push
cld
popf
fucomp
or
into
imul
arpl
or
mov
inc
dec
or
add
xchg
mov
xchg
cmp
jne
dec
jne
int
std
stc
ret
jmp
movsb
add
inc
adc
mov
push
icebp
push
xor
fldcw
iret
push
cmp
xchg
in
aad
pop
subl
push
cli
xchg
fidivrs
lds
rcl
and
pop
icebp
test
sarl
xor
inc
mov
fs
clc
sbb
fnstsw
mov
hlt
adc
mov
in
shrl
popf
inc
cmp
jmp
and
das
add
imul
pop
in
xor
inc
movsl
or
sarl
repz
inc
dec
ljmp
and
push
xor
mov
fnstsw
xor
xchg
notl
add
jne
sub
jmp
test
shlb
pop
push
cmp
ret
or
or
push
mov
data16
outsl
or
jg
mov
loop
stos
shl
and
mov
insl
or
sbb
aas
fwait
les
es
add
aam
dec
out
orb
pop
jp
lods
push
daa
xor
roll
pop
pop
jl
jge
mov
ljmp
xchg
jecxz
and
cmp
mov
test
mov
ror
test
imul
jns
mov
out
mov
jp
inc
jmp
aaa
shll
lcall
in
xor
fldenv
sbb
jbe
xor
or
fwait
insb
xorb
jbe
xchg
ja
cmpsb
add
into
add
jge
sub
pushf
and
ljmp
jae
lret
aas
int3
sub
lcall
pop
jae
cmovo
xor
or
push
clc
push
lods
mov
shlb
xor
cwtl
cmp
mov
xchg
shrb
jne
push
loop
push
mov
sub
ds
pop
sbb
test
es
inc
or
adc
xor
pushf
jnp
mov
mov
pop
inc
movsb
cld
lds
sarb
outsb
mov
dec
jmp
stos
jecxz
pushf
xor
add
sbb
cmp
rcr
cmpsb
sbb
xor
call
adc
inc
cld
jp
test
repnz
xchg
cmp
pop
insl
shrb
stos
fxch
loopne
sbb
mov
loopne
das
and
clc
or
mov
ja
lock
xor
jmp
ret
pop
sahf
jp
pop
cmp
fists
aad
loopne
push
bound
lock
mov
pop
mov
jae
and
and
in
xlat
js
inc
pop
std
add
jae
lret
mov
subl
mov
push
sti
ss
sbb
test
xchg
xchg
xor
pop
adc
outsl
outsl
fldenv
mov
jmp
inc
cmc
lds
dec
jb
cmp
out
or
testb
sub
jns
and
ret
cs
push
jne
push
lock
repz
jg
imul
push
inc
popa
jne
repz
pusha
stos
mov
sub
lods
cmpsb
pop
jle
pusha
dec
pop
lret
or
mov
mov
sub
push
sahf
mov
sbb
adc
stos
push
cmc
xor
and
repnz
mov
stos
pop
cmc
cmp
scas
xor
xchg
mov
lahf
push
sbb
aas
and
cmp
or
pop
imul
jle
sbb
xor
push
fxch
jmp
movsl
jae
std
jmp
add
ja
add
adc
sbb
std
dec
das
fisttps
loopne
scas
and
test
jb
sub
inc
imul
push
adc
push
sub
out
inc
fwait
or
pop
jo
xor
mov
xor
mull
movsl
movsl
xor
push
add
adc
ds
add
fstpt
mov
fidivrs
enter
jno
cmp
adc
data16
inc
cmp
mov
mov
scas
mov
mov
cmp
or
cmp
xor
dec
dec
and
mov
cwtl
out
sbb
cmp
push
rcll
xchg
pop
and
subl
inc
in
mov
lahf
or
inc
jae
xchg
leave
in
inc
das
outsb
pop
cmp
jge
stos
out
pop
xchg
aas
lea
inc
sahf
xlat
fidivl
mov
add
sub
ja
in
mov
mov
xor
dec
das
jnp
jne
cmp
insb
lea
cld
lret
fs
movsl
add
mov
mov
jl
mov
addr16
pop
pusha
jbe
les
clc
mov
andl
mov
dec
inc
sub
aad
ror
cmp
stc
in
in
das
or
stos
or
je
mov
mov
call
scas
or
cmp
test
mov
arpl
das
dec
hlt
mov
pop
add
dec
mov
jnp
lcall
xchg
test
movsl
add
dec
xchg
adc
push
xor
popf
repz
in
jne
lods
in
cmc
mov
dec
or
sub
mov
int
aaa
push
cmp
jmp
shr
fadds
shlb
sbb
pop
mov
jne
jmp
mov
xchg
loopne
pop
in
sub
ret
stos
cmpsb
scas
lret
je
cmp
sub
call
add
adc
adc
mov
loop
push
mov
lret
fdivrs
fwait
imul
out
dec
clc
test
jbe
movsb
shrb
jl
and
pop
das
js
mov
mov
std
scas
push
repz
dec
aad
fdivs
in
inc
lods
repnz
fsubrs
std
adc
arpl
aaa
std
push
loopne
adc
les
dec
adc
out
dec
and
mov
shl
inc
jbe
pop
mov
push
add
loopne
sbb
mov
push
xor
loopne
mov
mov
stos
mov
insl
xor
sbb
outsb
cli
and
adc
jne
mov
mov
pop
scas
pop
or
mov
aad
mov
push
aas
fwait
in
stos
inc
sub
incb
int3
adc
fcmovb
ja
pushf
adc
cmp
lcall
insl
xor
bound
inc
adc
shlb
pop
inc
mov
mov
jmp
lret
test
sub
xchg
fisubs
frstor
or
stc
adc
jae
push
push
cmc
jnp
xorl
stc
xor
sarl
pusha
in
lret
clc
ja
dec
cs
dec
mov
inc
mov
push
js
mov
dec
and
arpl
divps
or
test
out
stos
adc
mov
xchg
xlat
jbe
push
icebp
rorb
ds
jecxz
pop
inc
dec
xchg
ret
add
push
pop
sbb
mov
test
pop
repz
push
push
outsl
scas
cmp
in
fisubl
or
push
xor
pop
dec
push
xor
jg
call
adc
cmp
nop
adc
loopne
push
xor
sarl
push
dec
dec
xchg
jg
pop
test
cld
out
sub
js
inc
cmp
das
fsubr
adc
fbld
test
mov
cmp
mov
test
aad
std
jno
loop
adc
sub
xlat
rcrl
js
fimull
insb
add
and
imul
or
daa
mov
mov
pusha
repz
mov
xor
ljmp
imul
mov
mov
adcb
stos
xor
movsl
push
xchg
clc
jns
sub
push
mov
cli
lock
push
iret
add
fstps
jae
or
sbb
mov
sub
mov
sbb
test
incl
cmp
in
insb
sub
es
jmp
out
sbb
cmp
mov
mov
sub
stc
cmc
inc
cmp
stos
pop
and
lret
inc
dec
jne
lahf
add
pushf
mov
inc
and
or
fcmovnu
or
leave
ja
adc
add
ljmp
dec
das
xor
lods
sub
xor
dec
lock
jmp
or
lahf
xchg
jle
sbb
pop
mov
aam
pop
sbb
loop
cwtl
and
out
hlt
mov
fcmove
std
add
jne
aam
scas
es
or
mov
scas
sbb
jmp
push
adc
ss
je
scas
cmp
or
add
adc
cmpsb
add
push
sub
push
sub
notl
aas
dec
ljmp
jno
pop
inc
xor
push
pop
jno
test
mov
ret
push
leave
enter
js
xchg
adc
add
aaa
dec
or
pop
xor
pop
loopne
repnz
int3
xchg
xor
pushf
imul
stos
and
rolb
add
int
and
xchg
scas
mov
fldenv
jae
iret
pop
mov
out
orl
push
lods
mov
sbbb
push
xor
cmp
inc
repz
roll
push
dec
pop
mov
dec
and
in
and
dec
jmp
insl
mov
add
push
insb
sbb
test
outsl
mov
jge
and
aaa
popf
call
jmp
daa
cld
mov
sbb
jle
sbb
mov
shr
jmp
mov
in
jge
pop
mov
push
mov
and
aas
test
mov
enter
iret
test
test
mov
jmp
js
mov
pop
addr16
les
jo
outsl
and
adc
test
xchg
mov
icebp
andl
imul
dec
mov
and
cmc
dec
scas
sbb
aad
xchg
stc
dec
cmp
movsl
stc
add
lods
ja
ret
bound
sub
sub
in
add
js
sti
mov
inc
cmp
pop
js
loop
popa
shlb
pop
and
mov
enter
aaa
jne
sar
cli
push
out
sub
xor
sarb
sub
mov
mov
push
or
out
xor
les
gs
lret
arpl
and
xchg
aas
push
add
jp
or
xor
mov
push
xchg
lods
sub
push
inc
je
test
mov
mov
jle
mov
cmc
push
scas
mov
xchg
xlat
mov
push
cmp
arpl
xorb
and
mov
scas
push
sbb
and
dec
push
sbb
mov
das
ret
and
mov
aad
clc
push
mov
in
arpl
je
mov
in
xor
pusha
mov
sti
cmp
lcall
mov
or
xlat
mov
cmp
adc
iret
cltd
sahf
into
dec
mov
sbb
jns
mov
pop
test
lock
adc
data16
adc
jp
jb,pt
sub
cmp
lret
sub
jns
movsl
adc
or
inc
decl
aad
iret
mov
out
jae
sbb
leave
add
sbb
pop
push
rorl
mov
sbb
add
fisttps
add
mov
jb
scas
mov
mov
jo
add
lods
shl
adc
testb
lock
xchg
xchg
sub
jmp
dec
xchg
mov
stc
push
cmc
xchg
retw
sub
jl
lds
mov
xor
and
or
pop
mov
sbb
mov
fcoml
add
fidivl
xlat
daa
outsl
add
cmp
imul
push
out
call
mov
xchg
mov
sbb
les
stos
xchg
xor
cld
ud0
loopne
or
sub
js
xor
jmp
fisttpl
or
daa
test
mov
out
pop
ret
iret
cmp
or
shrb
dec
insb
test
shlb
shlb
shll
cmpsb
or
add
cmc
jae
dec
shll
ret
and
pop
sub
test
mov
mov
add
imul
fiadds
inc
cmpsb
pop
mov
jnp
xor
fistps
cs
pop
or
addr16
mov
call
in
mov
fnstenv
cmpsb
or
das
stos
pop
js
sbb
mov
dec
mov
adc
in
pop
std
inc
cmp
gs
sbb
pop
push
xor
test
iret
test
mov
aaa
les
add
mov
inc
fdivs
fldt
jmp
jb
or
add
loopne
sbb
mov
mov
popa
fisubrs
test
adc
nop
repnz
mov
outsl
les
push
inc
jo
jge
mov
andb
xchg
insl
das
int3
inc
cltd
mov
aaa
push
out
inc
add
sbb
dec
mov
lods
sbb
outsl
scas
cli
pop
and
adc
insl
ret
out
sbb
inc
idivb
dec
call
add
dec
ret
imul
sub
dec
es
jg
shrl
lahf
mov
push
jno
xchg
call
aam
cli
test
inc
sub
mov
movsl
or
sub
jle
or
push
mov
jg
adc
shll
xchg
jmp
mov
imul
clc
addr16
pop
movsb
add
push
inc
sbb
gs
xor
mov
into
fimull
aam
or
nop
xor
pop
or
jne
ss
inc
pop
fucom
mov
andb
push
dec
test
sti
push
inc
mov
or
add
int3
je,pn
inc
roll
cmp
lahf
jl
xchg
jb
or
data16
dec
icebp
mov
and
out
xor
movsl
sbbb
mov
cld
scas
and
dec
ja
pop
dec
mov
or
jns
xchg
jo
repnz
adc
jne
adc
arpl
loopne
out
ret
lock
fldz
mov
or
xchg
sub
sbb
in
cmp
jne
les
mov
pop
int
outsb
mov
popf
cmp
mov
cmc
push
push
cld
popa
pop
jg
jp
je
rolb
xchg
popa
fsubl
or
loop
and
inc
stc
mov
pop
imull
fwait
daa
push
mov
fdivrl
xor
test
pushf
cmp
rol
sbb
adc
xor
xchg
mov
mov
or
loope
insb
lret
ja
test
pop
scas
insl
dec
fwait
cmp
adc
push
enter
push
repnz
ss
mov
adc
aas
out
idivl
or
adc
cld
inc
hlt
sahf
mov
jae
mov
mov
fcompl
pop
scas
mov
mov
rcrl
outsl
movb
xchg
aaa
xchg
mov
xor
aam
mov
dec
leave
roll
shlb
lcall
daa
outsb
cmc
inc
lahf
ss
xor
out
mov
xor
pop
sarl
sahf
jmp
lods
mov
inc
jne
test
ret
mov
adc
lods
in
clc
iret
gs
mov
add
test
mov
insl
mov
test
jg
cmp
jno
xchg
testb
push
pmuludq
sbb
lahf
std
enter
in
or
and
lret
push
pushf
or
cvtpi2ps
xchg
insl
jecxz
fs
xor
fdivrs
lods
or
adc
popa
push
mov
lret
xchg
sbb
or
std
dec
test
imul
cmpsb
fsubr
dec
cmp
sbb
test
cwtl
jne
cmpb
sbb
leave
cmpsl
dec
divl
push
cmc
test
push
xchg
gs
pop
adc
scas
add
add
es
add
pop
ja
imul
xchg
sbb
inc
mov
dec
lret
or
popf
outsl
ja
add
outsl
xchg
movd
add
daa
mov
fimuls
stos
sub
movsl
stos
out
test
lods
xchg
sbb
mov
sti
and
ds
jecxz
push
mov
sahf
lcall
lcall
sti
add
pushf
insl
iret
leave
outsl
aam
sub
aas
aas
xchg
cld
adc
pop
xchg
pop
mov
fadds
stos
aam
cmpsl
xor
push
cmc
push
daa
fidivl
mov
cmpsb
and
aas
aad
and
push
dec
or
pop
sbb
jns
sub
fwait
ror
and
mov
std
bound
enter
das
or
mov
lods
arpl
adc
pop
cld
scas
add
or
ficomps
cmp
mov
outsb
push
mov
sbb
fsub
fbld
aam
loope
jns
pop
fidivrs
xchg
pop
sbb
sbb
pop
and
mov
popa
inc
ds
es
ret
add
roll
mov
sbb
hlt
lods
scas
push
jp
jae
cmpsl
loop
push
scas
push
mov
mov
jge
add
push
mov
xor
lcall
fldcw
xor
test
jg
in
dec
outsb
xchg
push
inc
jecxz
push
push
out
adc
sti
cmp
clc
int3
sbb
push
leave
scas
lds
fbstp
xor
paddd
hlt
cmp
dec
inc
sub
in
hlt
lahf
inc
sub
mov
out
xchg
or
sbb
sar
pop
pop
sti
or
aas
cmp
fucomp
or
repnz
and
jb
movsb
scas
mov
jns
arpl
out
js
mov
call
sahf
xor
imul
push
mov
dec
and
or
xor
icebp
ss
dec
fdivrs
fs
and
shlb
mov
mov
xor
es
mov
test
sbb
sbb
in
or
dec
mov
aam
sbb
js
sub
dec
inc
hlt
outsb
shrl
ret
popf
pop
cmp
sbb
adc
and
fnstsw
ds
xchg
xchg
fcoms
inc
mov
cmp
dec
es
jnp
fwait
insb
les
mov
push
push
aas
cmp
data16
popf
fisubl
imul
xor
adc
out
test
pop
les
mov
mov
inc
jmp
or
mov
movsl
dec
dec
dec
lcall
sub
lock
mov
xor
popa
sbb
dec
fs
test
pop
mov
and
aas
dec
les
inc
push
lea
cwtl
sub
in
mov
pop
inc
rcrb
lret
sub
push
cmp
movsb
inc
jnp
shll
adc
sub
add
mov
or
in
jbe
movl
push
testl
aad
fstpt
and
sarl
repnz
mov
mov
in
into
arpl
insw
std
dec
and
or
cmpl
ds
fdivrl
subb
inc
movsb
sbb
and
scas
xlat
js
cmp
nop
out
jae
pop
xor
xchg
add
dec
sarl
dec
in
ljmp
xlat
je
ljmp
push
repnz
mov
addr16
add
sub
fs
aad
jg
rol
mov
and
pop
sub
iret
scas
adc
sbb
inc
sbb
mov
mov
int3
addb
sarb
mov
adc
stos
push
fistl
mov
inc
icebp
sub
mov
fstp
aaa
js
aas
outsb
jmp
icebp
lock
aad
fisttps
adc
pop
cs
push
aaa
push
mov
pop
ss
mov
ret
xchg
shrl
sbb
mov
and
in
lods
push
sbb
bound
cwtl
mov
popa
xchg
sub
jnp
lods
xchg
rorb
push
repz
stos
jnp
mov
enter
cmpb
ja
sahf
or
pop
hlt
mov
mov
cli
mov
in
push
lea
cmp
ja
in
and
and
jmp
mov
cltd
testb
mov
cmc
addb
daa
adc
and
ret
fbld
ret
sbbl
jns
dec
outsb
dec
push
add
push
std
push
sti
adc
jno
sbb
push
out
mov
pop
and
inc
pushf
lahf
pop
scas
fldcw
out
adc
mov
ljmp
add
test
inc
or
pop
aam
push
jbe
mov
fcoms
adc
or
hlt
push
push
mov
mov
insl
or
dec
loope
mov
bound
cmp
mov
mov
xchg
mov
and
mov
lret
mov
mov
and
rclb
fwait
mov
cmp
cmp
gs
pop
jbe
and
and
or
sub
in
adc
hlt
fs
scas
stos
dec
push
mov
mov
push
aaa
add
popf
cmp
xchg
cltd
outsb
bound
into
push
add
in
adc
icebp
push
mov
mov
mov
pop
shlb
arpl
sbb
mov
cli
pop
xor
and
xlat
aaa
mov
inc
ja
pop
jecxz
jl
mov
cmp
fcomps
repnz
sub
inc
jmp
push
daa
or
or
xchg
cmpsb
sbb
mov
fwait
lods
pop
ficomps
adcb
repz
aas
bound
xorb
pop
xlat
jae
stc
sar
push
lret
popf
and
cmpsl
leave
dec
mov
jb
fidivrs
sbb
mov
clc
dec
lods
add
outsl
pop
loopne
mov
sub
push
mov
jge
sbb
or
cltd
and
mov
jmp
xlat
outsb
orb
jmp
cmp
dec
mov
xchg
lret
in
lods
lds
cmpb
nop
scas
insl
stc
adc
sbb
sbb
rcr
cwtl
or
out
jnp
adc
sbb
cmp
dec
testb
out
data16
aas
fimuls
push
movsl
fldenv
movsl
sub
pop
push
jmp
cs
rorb
xchg
add
jg
lock
or
sub
cmp
xchg
mov
cli
push
sbb
adc
int3
testl
xchg
inc
lds
rcll
cld
pop
cmpsb
or
insb
xchg
cmp
inc
pop
push
inc
cltd
xor
mov
dec
imul
mov
mov
fidivrs
nop
jg
jnp
xlat
xchg
mov
flds
push
jbe
gs
mov
dec
in
addr16
or
add
pop
cwtl
sub
push
inc
out
sbb
jno
mov
pushf
shlb
sub
pushf
push
cmc
mov
pop
imull
subl
or
stc
xchg
mov
std
jp
push
nop
out
stc
mov
cmp
mov
enter
sbb
push
sbb
push
sub
sbb
arpl
push
int3
add
shlb
push
lods
push
out
mov
xchg
out
div
jo
sub
cmp
add
xlat
xor
cli
sub
imul
dec
xchg
pop
icebp
dec
cmp
jp
addb
xchg
xchg
push
dec
pop
inc
mov
ljmp
cli
pop
mov
lcall
xor
xorb
jns
pop
lcall
test
ss
xchg
jno
sbb
movsl
outsb
std
mov
cmpsb
xchg
or
sbb
xor
adc
repnz
test
xorb
push
lds
shlb
and
xchg
jae
outsb
inc
dec
cmc
dec
out
mov
pop
mov
mov
testl
push
inc
or
xchg
dec
mov
sbb
ljmp
xchg
repz
lea
addl
mov
mov
xchg
iret
orb
sahf
ss
test
dec
ljmp
fistpl
sti
inc
cmp
in
and
or
push
sub
aas
cltd
add
xchg
daa
shrb
pop
enter
or
inc
pop
sbb
dec
divb
cmp
fs
jbe
xorb
xchg
sub
clc
testb
mov
xchg
jl
daa
add
pushf
ja
fcoms
sahf
js
xor
mov
xchg
xchg
call
rcr
call
jb
popa
pushf
mov
cmp
enter
cmp
es
insb
movsl
insb
scas
stc
push
xlat
xchg
rcrb
jl
mov
ret
test
fwait
pusha
lea
ss
hlt
add
push
inc
add
int3
pop
jb
inc
pop
in
push
roll
lds
divl
loope
mov
ljmp
popa
cwtl
xor
dec
loop
jg
mov
and
in
xchg
int3
jge
dec
inc
push
xchg
push
mov
pop
cmpsl
add
mov
fisubrs
iret
inc
pop
int
xchg
mov
mov
push
xchg
sti
inc
pop
call
jmp
insb
into
mov
xchg
leave
push
aam
mov
mov
lret
mov
or
mov
clc
iret
and
ja
xor
cli
fnstcw
sbb
outsl
jl
xchg
aad
loopne
out
or
cmpb
pusha
sub
es
aas
inc
sbbb
testb
pop
add
lods
test
and
stos
cs
js
out
xchg
and
ja
cmp
lea
aad
pop
adc
push
test
cli
mov
sbb
xchg
outsb
and
pop
mov
test
loopne
xchg
out
lcall
pop
js
iret
jle
leave
pop
sub
movsb
lods
push
ds
jno
inc
std
test
arpl
dec
xchg
jecxz
sub
pusha
rcrb
mov
mov
into
lahf
pop
jnp
mov
idivb
stos
dec
jge
jne
aam
jbe
ret
jg
xchg
xor
cmpsb
jae
inc
mov
div
sbb
stos
push
xor
mov
stc
and
cmpsb
dec
enter
rorb
orl
sub
jecxz
push
js
fdiv
inc
movsl
iret
inc
nop
ds
out
push
mov
and
sub
rcrb
dec
or
xchg
orl
inc
sbb
push
mov
sti
je
push
mov
loopne
cli
or
jae
loopne
push
sub
stos
xchg
push
sti
pop
dec
jae
adc
add
sbb
arpl
fs
hlt
mov
push
in
pop
std
push
dec
mov
daa
add
hlt
sbb
div
es
scas
or
mov
imul
xchg
test
mov
sub
inc
loopne
xlat
jle
jmp
dec
mov
mov
loopne
adc
data16
scas
sbb
add
fstl
mov
pop
jno
dec
mov
loop
stos
mov
xchg
mov
das
loopne
dec
pop
orb
and
push
dec
adc
ret
out
fs
insl
and
add
fidivrs
dec
lcall
sbb
xchg
jns
xchg
inc
lret
js
jecxz
js
mov
pop
jmp
lods
jl
inc
ss
mov
pop
mov
jns
and
xchg
cmp
lea
inc
mov
scas
aad
popf
push
xchg
subl
push
xor
xor
bound
mov
pusha
insb
aam
push
pop
sub
pop
and
adc
adc
mov
cmpb
mov
mov
or
sahf
addr16
in
adc
lcall
xor
das
cmp
pop
adc
lret
shrl
and
std
push
mov
inc
xchg
int3
push
pop
adc
mov
xor
jne
lret
lods
pop
inc
or
cli
push
push
mov
testb
rcrl
cmpsl
outsl
dec
mov
mov
clc
mov
into
lcall
adc
cmpb
add
adc
push
arpl
andb
mov
inc
inc
sub
scas
sarb
sarl
cmp
add
or
ds
hlt
test
dec
push
jae
insl
enter
pop
adc
inc
mov
cmp
pop
out
cmp
or
ja
dec
mov
jle
dec
add
rcl
sub
xchg
xchg
mov
adc
mov
pop
cmp
fldenv
sub
xchg
add
ds
fs
xchg
sbb
lcall
mov
jno
std
cwtl
cli
sbb
add
aas
xchg
and
daa
pop
push
or
cld
pop
and
bswap
jb
out
mov
pop
xor
out
stos
mov
mov
test
pop
dec
in
and
xchg
push
push
and
aas
or
cmp
cltd
xchg
pop
cmovae
dec
insb
pop
je
adc
popa
in
push
pop
imul
movsb
rcl
xchg
jns
mov
xlat
lcall
jg
mov
imul
les
roll
bound
lcall
push
sbb
out
xor
mov
cmc
xchg
jnp
add
cmp
lock
out
xchg
sbb
shll
mov
out
sub
fistl
imul
sub
jmp
std
fists
push
mov
push
mov
repz
push
lods
out
jb
and
dec
std
mov
pusha
sbb
bound
mov
out
test
and
les
scas
insl
cld
jle
rorb
fcoml
jo
lock
add
cmpsb
cmp
arpl
mov
push
mov
out
clc
adc
daa
add
dec
popa
push
mov
or
loop
mov
xor
jecxz
loop
dec
jno
sbb
jecxz
rcrb
xor
in
push
xchg
pop
mov
pop
xchg
pop
mov
cmp
fucom
out
imul
insl
mov
push
sar
mov
jecxz
mov
inc
xchg
xor
aas
paddusw
push
jbe
pop
cs
mov
or
mov
jns
adc
xchg
leave
ss
test
ret
xor
pop
addr16
jbe
mov
das
xor
cmp
push
int3
scas
xor
js
dec
mov
lret
js
push
subps
adc
sub
imul
insb
or
dec
fwait
xchg
xchg
push
cmpsl
dec
test
jns
cmp
adc
sahf
hlt
icebp
mov
into
ss
mov
xchg
mov
out
gs
stc
jbe
xchg
jle
sub
jmp
outsl
adc
inc
clc
jne
dec
addr16
cmp
mov
or
adc
jns
adc
clc
cmpxchg
mov
outsl
out
push
mov
jo
fs
add
sub
movsl
or
pop
adc
pop
insb
jmp
jne
xor
adc
fsubrs
add
mov
jle
xor
mov
mov
or
sbb
scas
in
cmp
js
xchg
in
and
jle
cwtl
adc
push
test
mulb
mov
das
out
xchg
cmpsb
mov
lock
mov
fmull
mov
pop
arpl
rclb
mov
fisubrl
fnsave
xchg
or
fisttps
xlat
add
dec
mov
out
cmp
out
call
popf
xlat
adc
stos
mov
push
jg
xor
jecxz
lods
jle
push
fpatan
fwait
jnp
add
rol
scas
jae
cmp
push
unpckhps
pop
dec
xchg
mov
fdivrp
adc
push
loope
adc
mov
imul
jo
sbb
dec
fwait
mov
pop
xor
xchg
mov
out
cmp
push
pop
repz
adc
fcos
mov
out
mov
jns
or
lds
repz
imul
fsubr
push
push
push
cltd
clc
sub
gs
scas
push
dec
mov
fwait
push
push
or
xor
mov
ds
mov
jge
and
mov
xlat
sub
jnp
mov
pop
jmp
std
pusha
pop
mov
and
mov
repnz
push
fldt
mov
aaa
lret
stc
movsl
mov
mov
jae
sub
fninit
insl
and
pop
sbb
pop
call
pop
jae
xor
dec
and
dec
pop
push
pushf
add
std
add
add
mov
int3
imul
adc
in
mov
iret
push
fcomps
xchg
std
inc
cmpb
loope
mov
sub
push
sbb
nop
inc
jg
dec
frstor
mov
jmp
pop
pushl
aam
fimuls
loop
mov
jg
inc
and
sarl
and
mov
jg
je
test
pop
sbb
add
mov
outsb
inc
xchg
jle
inc
xchg
mov
cld
icebp
ss
xchg
sub
push
out
cmp
inc
mov
adc
xchg
mov
bound
ret
outsb
sbb
push
and
xor
lds
jnp
sub
push
testb
mov
ret
adc
cltd
xchg
mov
push
mov
pop
inc
shl
dec
je
repnz
jne
mov
sbb
mov
or
into
rorb
xchg
xlat
or
cmp
inc
lea
adc
outsl
insb
gs
clc
sub
aam
shrl
or
cmp
lods
aad
mov
and
cmp
dec
pop
mov
sbbl
gs
sub
xorb
adc
decb
movsb
dec
push
push
push
ret
jecxz
xchg
push
xor
or
mov
jg
aaa
enter
pop
ret
and
lock
movsb
adc
fidivl
mov
push
rorb
loop
lock
stos
imul
adcb
push
int3
je
mov
mov
and
pop
pop
test
mov
mov
cs
adc
frstor
push
push
faddl
pop
adc
push
addr16
in
sub
xor
jle
mov
loop
sub
inc
cli
das
fisubrl
xor
jbe
test
mov
push
lahf
pop
or
mov
lret
test
jmp
mov
inc
xor
jecxz
iret
push
leave
es
pop
mov
into
adc
daa
loopne
adc
cmp
mov
xlat
jl
mov
lret
fwait
ret
sbb
in
fs
out
sbb
jae
std
insb
rdmsr
inc
leave
mov
imul
mov
ja
push
xchg
cmp
outsl
mov
popa
jmp
push
rclb
xchg
leave
dec
rclb
inc
rcrb
mov
jo
dec
aam
sbb
push
bound
sahf
js
ss
subl
cltd
sarl
dec
imul
popa
xchg
xchg
sbb
sbb
mov
jmp
mov
xchg
pop
sub
and
lods
and
sbb
or
incl
popa
add
rorb
mov
popf
sahf
mov
push
mov
xchg
adc
dec
in
mov
xchg
cmp
jo
dec
xchg
aam
out
repz
and
fistl
pop
leave
cltd
push
push
sti
in
punpckhbw
out
imul
loope
pop
test
and
jae
jae
out
fidivrl
xchg
loopne
call
dec
sub
shr
mov
sbb
ret
push
lds
cli
mov
vpmacsdqh
mov
pusha
shlb
pop
lock
aam
mov
pop
pop
das
pop
lcall
ds
test
dec
sti
sub
push
pushf
es
adcl
xor
jecxz
add
sub
push
jge
sub
arpl
ret
xor
fs
push
dec
inc
or
cmpsb
inc
pushf
push
test
mov
sbbl
stos
xchg
das
push
fdivs
dec
cwtl
cli
es
int3
push
popf
repz
ljmp
and
subb
pop
push
mov
cmpsl
dec
xchg
sbbl
jno
push
and
cmpsl
int
daa
inc
jnp
mov
dec
push
dec
push
jle
loop
xor
dec
stos
xchg
jg
jge
mov
cmp
aaa
in
pusha
out
xor
bound
sub
hlt
aaa
xor
int
mov
loop
dec
test
std
in
loop
xchg
sub
pushf
fs
push
std
outsl
xor
loope
cmp
fsubs
lods
or
das
add
jnp
movsb
mov
loope
xor
jg
lods
sbb
mov
mov
movsb
mov
test
push
test
inc
mov
sub
daa
ret
mov
test
scas
popa
orl
or
repnz
aad
pop
fwait
mov
mov
ret
out
dec
mov
or
push
adc
daa
mov
push
mov
std
sti
dec
xchg
sbbl
test
outsl
jg
xor
fisttpl
test
stc
ds
dec
pop
xchg
das
cmp
je
mov
orl
mov
lods
scas
inc
push
dec
add
mov
inc
leave
sub
mov
insl
dec
push
adc
divl
mov
add
ficomps
popf
int3
cmp
lock
mov
rorl
es
leave
shlb
out
std
inc
nop
lods
push
loop
push
out
xchg
aam
sub
add
mov
les
lcall
cmp
xor
into
mov
or
pop
xchg
hlt
sbb
push
stc
addb
xlat
ret
mov
and
lea
xchg
pop
es
adc
dec
sub
jbe
cmp
repnz
mov
inc
cwtl
in
dec
int3
dec
and
mov
dec
xor
mov
movsb
faddl
mov
mov
repnz
fst
inc
push
jbe
les
or
out
xor
scas
and
xchg
fmuls
daa
or
ret
xchg
jle
xor
mov
dec
mov
rcrb
dec
stc
in
cmp
pusha
xchg
nop
jp
test
push
test
idivb
pop
jb
and
out
iret
test
cmpsb
cmc
dec
mov
pop
lock
mov
xchg
mov
add
add
push
daa
movsb
push
clc
repz
jbe
sub
pushf
mov
dec
sub
sub
mov
pusha
imull
les
pop
pop
mov
in
mov
inc
inc
xor
mov
enter
sbb
push
xchg
sbbb
mov
push
insb
inc
mov
pop
xchg
js
aaa
sub
repnz
mov
and
mov
adcb
push
dec
pop
or
enter
inc
inc
outsl
mov
mov
xchg
leave
shlb
push
push
test
xchg
int
adc
pop
loopne
scas
ss
hlt
sbb
or
ret
mov
xor
mov
dec
movsl
push
js
sub
jne
mov
cmp
dec
xchg
push
out
mov
mov
pusha
lret
jecxz
xor
pushl
and
add
int3
jl
add
imul
jmp
cmp
dec
iret
daa
add
insl
sbb
lds
cmc
mov
sbb
icebp
cs
pop
lcall
pop
inc
sbb
sar
cli
mov
or
xchg
rcrb
int
out
cli
data16
gs
jg
std
mov
lret
mov
pop
xchg
in
js
push
lret
gs
xor
lret
out
mov
dec
cmp
cmp
mov
loop
inc
into
test
fsts
cwtl
stos
mov
and
xor
ja
insb
out
imul
sbb
cs
xor
icebp
in
nop
jmp
cmpsb
shlb
xor
icebp
fdivrs
subb
sub
ret
inc
inc
mov
sub
mov
dec
aas
xor
hlt
aam
das
or
or
sahf
out
rolb
shrb
mov
mov
rorb
add
mov
gs
fidivrl
jno
dec
xchg
int3
daa
shlb
scas
sarl
xchg
dec
inc
gs
sti
mov
xor
sub
xor
je
cli
sub
cmp
fadds
in
ror
sbb
gs
jbe
out
gs
in
insl
sbb
aam
loopne
cltd
clc
jne
jp
sbb
mov
stos
stc
lods
orl
or
in
arpl
jp
inc
lods
jns
dec
in
xchg
in
xor
xchg
xchg
decl
sbb
mov
test
sub
sub
in
test
and
add
xchg
in
cwtl
pop
hlt
lret
adc
jns
daa
push
outsb
mov
push
cmc
lea
lret
mov
fisttps
or
inc
lret
arpl
test
push
push
mov
mov
sub
push
jmp
inc
add
dec
int
push
andb
sahf
sbb
jl
dec
jno
push
sub
hlt
stc
mov
dec
rclb
ret
outsl
cmp
outsl
sbb
lods
int3
fstpt
xchg
jb
popa
testl
out
add
scas
das
lods
or
lahf
cli
scas
bound
cmpsl
insl
loopne
xor
addl
sub
enter
les
mull
js
push
aam
adc
push
push
int3
pop
aaa
push
loope
adc
orb
cli
cmp
mov
and
movsl
scas
mov
inc
sarl
cwtl
lcall
push
push
add
jp
mov
and
jbe
pop
gs
cmp
cs
mov
sub
icebp
add
mov
xor
cld
jl
cmpb
out
fmull
mov
push
shll
xorl
sbb
jbe
hlt
xchg
inc
test
cmp
pop
outsl
fildll
dec
or
pop
mov
lret
mov
xor
rorl
push
push
sar
xchg
test
sub
cmc
sti
mov
push
sbb
dec
out
js
lcall
cmp
iret
mov
in
mov
sti
roll
test
hlt
jecxz
xchg
lcall
outsl
lret
orb
mov
andb
jmp
push
xor
xor
insb
pop
xor
push
pop
jmp
nop
cmp
jo
into
lods
push
scas
sarl
repz
jae
lar
pop
int3
push
sub
test
pop
and
pop
fbstp
cmp
or
sbb
outsl
mov
cmp
shl
lret
popa
int
adc
aad
adc
adcl
dec
pusha
add
enter
das
aaa
mov
icebp
lret
push
ror
push
push
loopne
ret
jmp
mov
sarl
xor
push
adc
mov
data16
sub
fmuls
jb
pop
es
sbb
mov
jp
mov
cli
or
call
lods
xchg
inc
fistl
in
mov
xchg
fnstcw
mov
pop
inc
dec
dec
and
adc
sbb
enter
aam
out
jle
sar
movsb
mov
stos
fcom
push
mov
mov
inc
lods
data16
jo
aad
stos
inc
sub
mov
sbb
stos
jmp
pop
or
push
pop
or
ja
xchg
rcl
inc
push
or
in
adc
sbb
cmp
mov
adc
lock
jns
addr16
and
lahf
sbb
cmp
mov
sti
mov
mov
aas
test
ret
nop
and
sbb
mov
outsl
xchg
cwtl
add
mov
or
nop
mov
repz
dec
mov
fsubr
xor
xchg
push
rdpmc
mov
mov
mov
jbe
mov
or
xchg
jecxz
js
pop
and
and
mov
inc
and
pop
sub
pop
inc
mov
jmp
aam
jmp
repz
mov
lods
dec
leave
pop
gs
adc
push
pusha
cmc
cmp
fstl
jne
mov
push
mov
inc
gs
aad
sahf
sbbb
iret
jl
adc
js
push
xchg
push
sbb
in
fs
mov
pop
or
inc
stos
repnz
sbb
adc
filds
arpl
inc
daa
andl
pop
idiv
cli
mov
inc
adc
jb
cmpl
adc
pop
xor
or
fstl
adc
jl
pop
push
inc
and
fstps
nop
inc
mulb
push
add
insb
inc
fcmovnb
dec
push
cmc
lock
adc
rol
push
dec
shll
es
dec
pop
add
ffree
pop
xlat
jno
bound
add
pusha
shlb
jo
adc
add
cli
push
daa
shlb
mov
sbbl
mov
stc
mov
js
das
mov
mov
pop
xchg
cmp
sbb
inc
sub
mov
lock
xor
in
mov
inc
mov
push
loopne
movsl
lods
pusha
sar
incb
gs
popa
clc
xchg
ss
cmp
sarl
pop
mov
adc
stos
push
cs
sbb
jmp
xor
lret
xchg
adc
xor
xlat
shlb
int
addr16
xchg
jnp
and
and
cmp
leave
jnp
icebp
or
and
push
cld
sbb
jne
or
jno
xor
pop
out
cmp
adc
xor
inc
and
lods
add
jge
cmp
out
ret
les
ret
mov
popf
sub
call
into
test
xchg
mov
adc
cli
jmp
cmp
mov
lcall
jno
movsb
or
lods
mov
scas
adc
and
mov
out
jae
je
into
test
sub
dec
mov
inc
repnz
arpl
mov
fcomip
push
push
add
sarl
in
dec
jp
inc
in
xchg
daa
cltd
xchg
push
fmull
add
push
test
or
jecxz
shlb
stos
bound
lahf
push
lds
shrl
or
mov
data16
je
cwtl
mov
bnd
or
shlb
push
jno
aam
ss
push
fbld
xrelease
rorb
popf
int
push
xchg
iret
or
test
stc
ret
pop
mov
pop
dec
xchg
andl
cld
movsl
xor
fs
stos
ja
es
nop
jl
mov
jns
jno
dec
dec
aad
lahf
inc
xor
and
dec
iret
jb
xor
xchg
xor
mov
mov
inc
adc
jne
mov
roll
loop
xor
scas
je
sub
ja
aas
xchg
cmpsl
mov
push
cmpsl
pop
push
lret
sbb
jecxz
xchg
in
push
xchg
add
mov
sahf
data16
out
dec
scas
lahf
inc
ss
pop
jg
in
dec
in
jne
push
sarb
dec
ljmp
leave
lea
dec
and
push
dec
stos
in
jp
fcoms
pop
jge
pop
cli
insl
movb
sbb
addb
inc
iret
xchg
add
ret
sub
mov
mov
std
mov
and
xchg
imul
or
dec
jmp
sub
and
inc
and
pop
popf
add
ja
std
lret
or
arpl
mov
mov
push
lahf
and
add
adc
adc
push
cltd
out
mov
sub
rolb
out
sbb
mov
gs
loopne
xlat
icebp
idivl
sub
cli
jae
push
cmp
and
ret
mov
sbb
movsl
testl
mov
inc
movsl
shrl
push
lock
lock
addl
mov
push
cs
scas
call
shll
rorb
sbb
into
mov
addr16
push
movsl
aad
test
insb
les
fs
dec
or
sti
xor
je
add
jmp
leave
outsl
mov
push
xchg
cs
lret
shrb
pop
stos
pushf
fisubrs
xor
lea
and
add
sbb
and
outsl
gs
mov
call
pop
stc
into
and
loope
cli
cwtl
rorl
push
pop
stos
or
cmpsb
dec
arpl
jge
inc
add
pop
hlt
ds
out
mov
fstl
cli
xor
jecxz
js
sbb
insb
lcall
xor
jmp
leave
xchg
and
test
fwait
lea
popa
arpl
ljmp
outsl
sbb
std
setg
adc
or
ljmp
cld
insl
data16
data16
adc
movsb
int3
arpl
cmp
dec
loope
shll
ss
push
push
add
push
loop
sbb
lods
adc
rsqrtps
pop
cmp
cmp
and
add
pop
hlt
and
shll
push
scas
jmp
xlat
int3
push
outsb
sbb
inc
push
dec
and
call
fdivrl
mov
ret
int
xor
and
sub
imul
sbb
xchg
imul
lea
xchg
jmp
sbb
push
sub
dec
dec
sub
inc
out
mov
faddl
mov
lea
sbb
mov
sqrtps
addr16
add
xor
xchg
lods
jmp
lret
adc
call
push
mov
inc
repz
movsb
pop
mov
test
mov
out
jl
and
cmp
cmp
movsl
xor
mov
inc
stc
pop
push
fsubr
test
push
mov
cltd
lcall
int3
push
or
shl
in
lcall
les
xor
mov
or
sub
insb
cs
ficompl
push
and
lret
cmpsb
test
dec
mov
cmp
add
pushl
inc
mov
or
pop
cli
dec
jne
xor
outsb
aas
test
rclb
subl
lea
mov
lock
popf
sbb
cmp
lret
dec
mov
je
outsl
and
pop
add
pop
lret
xchg
mov
popf
cmp
orb
aaa
inc
adc
lods
pop
jnp
lea
dec
dec
loope
jge
jo
cmp
shlb
adc
mov
adcb
mov
cmp
mov
cmp
inc
cmpsb
ja
out
ror
ret
and
movsb
mov
jle
adc
test
adc
sub
or
mov
push
mov
stos
pop
mov
xlat
popf
push
xchg
test
mov
xlat
popa
or
inc
sbbl
lds
daa
xor
fcmovu
pop
dec
xchg
mov
fcoml
xor
pop
cld
adc
in
movb
insl
mov
shl
into
popf
enter
test
imul
into
scas
mov
cmpsb
cmp
lea
arpl
ljmp
fdivs
test
aad
scas
fnstcw
clc
je
adc
push
push
push
and
inc
add
lds
cmpsl
jnp
xor
dec
and
push
add
ret
mov
push
cmc
leave
sarb
pop
mov
pop
add
fldl
mov
insb
push
imul
add
adc
in
mov
stc
mov
mov
sub
sbb
imul
and
test
jmp
test
mov
and
arpl
xchg
jo
decb
dec
arpl
push
fdivs
cs
bound
mov
mov
aaa
xchg
add
mov
sub
std
jl
mov
adc
dec
addr16
rcl
std
push
push
pop
in
mov
outsl
or
shrl
lods
adc
mov
fimuls
pop
fdivrs
fimuls
or
mov
xor
pop
js
aas
adc
pop
push
loope
jmp
in
jo
mov
push
mov
jle
xor
cmp
add
les
mov
sub
pop
cmp
push
cmp
test
cmp
sbb
xchg
ret
push
push
jbe
fisttpl
push
adc
mov
inc
inc
sti
push
outsl
dec
mov
fs
mul
fidivrl
fisttpll
push
scas
mov
sbb
add
dec
and
push
addl
mov
mov
xchg
orl
fsts
popf
mov
add
add
push
in
in
push
jle
outsb
icebp
mov
push
in
arpl
ss
inc
sub
pop
iret
sub
int3
sarb
xchg
ds
das
sub
or
int3
mov
cmpsb
mov
int3
ljmp
push
out
daa
push
pop
push
jmp
and
dec
adc
mov
adc
mov
dec
jo
sbb
push
faddl
add
mov
inc
pop
adc
movsl
push
test
lcall
shl
mov
push
mov
jae
mov
movsl
dec
push
adc
mov
ficoms
jl
arpl
lahf
xor
out
addr16
cmp
lds
and
jp
sbb
cmp
mov
inc
fdivs
cltd
mov
push
sub
jg
mov
lds
daa
aam
pop
pop
fstl
ljmp
sbb
out
jo
outsb
outsb
push
or
iret
scas
jg
xchg
xor
bound
out
arpl
fwait
add
daa
add
es
xlat
data16
cwtl
xchg
out
jb
and
adc
lods
pop
pop
stos
je
loope
jae
jge
mov
lods
mov
fisubl
pop
mov
sub
inc
in
lahf
popf
adc
loop
cltd
rolb
and
pop
mov
xor
xchg
push
xor
and
dec
daa
mov
add
enter
in
pop
push
mov
dec
test
xchg
data16
clc
and
incl
dec
call
jno
lds
incb
addr16
push
mov
mov
fsubrl
mov
jp
outsl
push
fstl
mov
loop
repz
out
xor
add
jae
daa
out
int3
xchg
aas
push
aaa
setg
mov
fisubs
jbe
fimuls
or
addr16
mov
fs
repz
mov
or
iret
lea
xor
pop
sahf
xchg
lock
aas
push
out
shl
dec
in
divl
outsb
popf
outsl
jle
mov
roll
mov
sub
inc
pop
imul
push
or
or
outsb
cmpsb
pop
inc
fdivr
mov
push
and
in
or
scas
jecxz
mov
dec
xchg
aad
scas
out
xchg
sub
ret
addr16
test
xor
cmp
adc
dec
pop
cmp
movb
push
in
adc
inc
sbbl
loop
lahf
mov
push
pop
ficomps
repnz
adc
mov
jo
bound
pop
repnz
sbb
mov
and
cmp
pop
xchg
fsubl
repz
push
enter
mov
lds
cmp
dec
loope
cmp
fisttpll
mov
in
cmp
int
pusha
sub
cwtl
fdivr
cld
xchg
add
sub
add
outsb
stos
pusha
xor
sub
add
je
arpl
fs
ljmp
enter
outsl
in
fcomps
sub
mov
mov
mov
mov
mov
lock
out
into
aaa
imul
push
or
in
aad
lds
and
mov
pop
rcrl
mov
fwait
dec
in
imull
jge
lods
dec
and
sub
mov
lods
xor
sub
stos
imul
jns
jns
sbb
ljmp
jne
lea
sub
sub
push
aaa
aad
push
jecxz
cwtl
add
int3
lahf
or
aaa
cld
ljmp
sub
dec
in
inc
adcl
out
xor
cmp
cs
out
ficoml
outsl
and
lret
out
mov
imul
scas
int3
add
iret
out
mov
and
out
xor
push
xor
mov
xchg
cmpsb
outsl
xchg
daa
in
mov
dec
shr
xchg
int
fadd
in
mov
xsha1
cmpsb
int
fwait
lret
lock
mov
mov
leave
dec
mov
out
xchg
lods
stos
jmp
sbb
push
inc
leave
stos
cs
mov
repz
mov
dec
popa
ret
pop
mov
jmp
sarl
test
mov
and
or
int3
mov
add
xor
pop
mov
dec
mov
pop
fiaddl
inc
xchg
rclb
sub
sub
ds
lods
pusha
sub
add
jmp
mov
sahf
and
in
dec
ljmp
add
or
call
lcall
xor
adc
stos
movsb
mov
add
sbb
gs
das
and
mov
cmc
sbbl
or
repz
jno
or
repnz
lret
cli
adc
sbb
mov
insl
push
call
fs
sbb
inc
xlat
push
dec
adc
andl
mov
stos
cld
xchg
sub
mov
mov
mov
mov
test
lcall
mov
dec
xor
outsb
dec
cmpsl
shlb
clc
xchg
lcall
xchg
xor
scas
or
pushf
xor
fdiv
add
cmp
stos
fcmovnb
ret
mov
pop
mov
fistps
arpl
jno
jmp
cmp
les
xlat
sti
xor
fidivs
mov
adcl
aam
pop
jl
popf
aad
fcoms
push
and
insb
std
sbb
lods
push
movsl
cli
sbb
in
dec
cmp
out
add
clc
mov
push
ret
cwtl
out
and
inc
dec
mov
fwait
hlt
jg
jg
mov
and
push
push
sub
pop
xchg
ljmp
fwait
adc
add
sbbl
mov
dec
dec
sbb
lock
dec
int
movsb
jecxz
mov
jle
jg
daa
scas
xchg
aam
fisttpl
clc
out
or
or
insl
or
cmp
testb
mov
add
jnp
icebp
jmp
pop
lock
test
mov
xor
jne
adc
inc
out
xchg
jmp
and
shrb
cs
cld
fisubrl
es
jle
lret
fsub
xchg
gs
clc
frstor
fsts
dec
add
ss
mov
movsb
stos
push
xchg
fisttpll
adc
inc
dec
cli
xor
in
add
inc
push
js
sub
cmpsl
jmp
cmc
sbb
cmp
bndstx
daa
sbb
xor
rorl
mov
cmp
jae
and
dec
jge
and
hlt
jo
lahf
sbb
les
rcr
js
lahf
inc
cmp
js
lods
sbb
sub
mov
iret
shl
out
xchg
inc
mov
cmc
in
add
notb
adc
stc
out
or
hlt
movsb
shrl
fldenv
dec
ds
xorl
in
xchg
hlt
xor
orl
pop
xchg
mov
jp
aas
int3
imul
jg
mov
mov
lock
imul
push
and
les
or
xor
scas
scas
mov
shlb
jne
or
insl
push
fcomps
sub
in
and
mov
pop
xor
sub
aam
hlt
cli
jb
jbe
imull
lea
int
aaa
int
fwait
lea
aam
push
mov
insb
pop
lea
pop
add
pop
pop
and
scas
dec
test
mov
es
push
push
loop
mov
mov
sbb
xchg
fcmovne
dec
push
push
mov
cmp
gs
pop
ja
adc
adc
cltd
dec
cmpsl
ljmp
into
sub
dec
inc
fsubs
dec
clc
gs
jecxz
notl
xchg
pop
dec
dec
inc
pop
mov
icebp
fmuls
jl
mov
test
cmpsl
xor
lcall
xchg
adc
fwait
jbe
xor
sub
mov
jmp
out
sbb
loope
clc
mov
sub
jno
jae
out
push
loopne
notl
arpl
xchg
mov
mov
les
mov
sarl
push
and
dec
addr16
push
imul
mov
jl
loopne
lods
cmp
dec
mov
adc
and
ret
imull
mov
sti
cli
pop
imull
clc
fistps
pop
mov
and
ret
pop
ret
sbb
lea
push
in
test
in
xor
repz
and
dec
clc
frstor
pop
sbb
out
xchg
rcrb
stos
fadds
cmp
divb
scas
jge
cmp
aad
rcrb
push
xchg
test
jecxz
insl
mov
lock
and
or
test
and
mov
inc
and
jmp
arpl
fcmovbe
loope
stos
push
shrl
popf
xchg
aam
arpl
mov
or
pop
pushf
jmp
mov
cwtl
mov
test
cmp
stos
jno
mov
xchg
pop
add
jl
lods
and
xchg
pusha
fists
loop
mov
sub
xlat
test
data16
in
lods
jecxz
mov
dec
fldenv
or
sub
lret
sbb
cwtl
or
in
inc
aam
mov
jmp
jg
test
por
in
push
jnp
insl
adc
ret
dec
mov
inc
mov
xor
add
cmpsl
icebp
fstpl
adc
sub
jecxz
ja
out
lahf
loopne
test
dec
mov
in
jg
sub
dec
gs
stos
inc
sarl
roll
repnz
push
and
loop
movsl
dec
mov
lcall
xchg
das
jmp
addr16
push
lret
cmp
mov
mov
std
push
and
fimuls
negb
test
mov
mov
pop
mov
and
push
movsb
xchg
mov
imul
in
pop
mov
rolb
das
hlt
jo
xlat
pop
fcmovb
popf
les
ret
outsb
dec
daa
jge
sub
fwait
jno
sub
cmpsb
mov
es
xchg
out
sbb
rorl
mov
clc
fstpt
stos
or
sahf
sbb
adc
cmpsl
jb
enter
out
lock
push
and
ljmp
add
call
jo
out
sub
cwtl
incl
dec
push
rorb
in
and
imul
jg
int3
lea
jg
lret
dec
mov
adc
mov
mov
aad
mov
in
xlat
sub
aas
in
jecxz
jmp
mov
ficoms
xchg
lea
fsubr
sub
mov
addb
inc
jg
and
xor
iret
and
mov
cmp
or
mov
pop
push
or
mov
lods
outsl
push
in
xchg
and
mov
xor
add
jge
outsl
in
lret
stos
xchg
or
push
dec
orl
sbb
nop
mov
mov
int3
inc
lret
lcall
sub
xchg
aad
fsubrs
mov
inc
dec
cmp
push
scas
inc
shll
test
push
xor
daa
xor
nop
jmp
sub
sbbb
jae
fldl
xchg
iret
popf
inc
jmp
inc
or
out
and
pop
pop
adc
mov
add
cmpsl
into
push
lcall
sub
adc
sub
into
jnp
arpl
mov
pop
inc
sbbl
mov
leave
add
aaa
fisubrl
xor
inc
jns
jge
frstor
mov
cld
push
pop
ja
loopne
icebp
shll
pop
add
pop
sub
cmp
xchg
hlt
into
dec
xlat
test
mov
cli
dec
lret
inc
rorl
jl
dec
test
sbb
xlat
jle
mov
loope
mov
sub
pop
pop
enter
sub
adc
cmp
dec
aam
lds
js
xor
xor
cmp
js
mov
sbb
mov
ja
pushf
xchg
ss
fsubs
ja
jbe
inc
popa
pop
js
mov
xor
int3
xchg
sub
push
mov
cld
rcrb
sub
sub
mov
aas
pop
push
and
mov
dec
add
jbe
fnstsw
jl
mov
stos
inc
lds
sarb
int3
aam
dec
xor
mov
xor
scas
insb
adc
lea
jo
mov
and
jmp
data16
dec
inc
xchg
mov
mov
pop
dec
clc
push
jg
test
movsb
into
mov
mov
jne
cmp
out
and
xlat
sub
dec
mov
jno
pop
inc
ficomps
jo
cmp
sub
shll
push
sahf
add
xchg
imul
adc
cmc
in
add
jae
jns
xor
xor
repz
mov
cmp
mov
xor
sub
jo
insl
popl
cmp
sub
ds
loope
pusha
cli
sbb
hlt
fnsave
mov
xor
or
mov
xchg
mov
inc
mov
sub
jo
mov
dec
cmp
sub
out
call
mov
scas
repz
push
jp
sbb
pop
push
mul
cmp
rol
sbbl
push
push
pop
or
or
fisubs
jns
jl
adc
fwait
out
pop
pop
jp
out
movsl
stos
bound
mov
sarb
and
shlb
mov
into
cmp
push
cmp
adc
adc
mov
gs
cmp
jge
lods
mov
gs
shlb
inc
pop
cli
xor
sbb
mov
je
sbb
imul
lods
mov
jns
dec
lret
mov
xchg
adc
popa
lock
xchg
ljmp
mov
adc
lea
xor
inc
clc
nop
xor
fdivrs
adc
flds
jns
dec
data16
xchg
lock
push
add
mov
ljmp
jg
adc
pop
enter
orl
cmp
ds
mov
ficomps
push
xchg
mov
rolb
mov
push
fimuls
xchg
pushf
mov
ret
sti
imul
pop
inc
fisubl
inc
push
push
js
in
sub
sub
jge
add
mov
or
mov
add
rorb
shlb
hlt
xchg
dec
iret
jns
and
cmp
fstpt
nop
mov
xlat
cmp
mov
insl
inc
hlt
test
or
inc
aas
dec
arpl
mov
mov
fcoms
xchg
add
fs
mov
add
jo
mov
mov
sub
int
rcrb
cmp
lret
push
inc
push
shll
loopne
xchg
pop
xor
ret
jb
scas
adc
popf
test
dec
pop
fs
jle
pop
jle
movsb
dec
lea
lods
mov
lods
jae
mov
ret
aas
jno
and
jl
xchg
or
or
or
fistpl
outsl
cwtl
les
outsl
lret
mov
loopne
mov
setno
int
mulb
test
push
jns
ficoml
movsl
hlt
repnz
out
cmpsb
pop
dec
cmp
mov
ret
movl
insl
mov
fsubrl
aad
and
push
mov
stc
cltd
dec
pushf
inc
das
mov
pop
leave
adc
inc
ljmp
push
lret
test
xor
cmp
cs
je
sbb
cmpsl
in
daa
popf
cmpsl
sbb
pusha
outsl
and
cmp
fsubrs
push
out
or
add
jp
mov
or
dec
push
push
xor
addr16
xlat
jl
insl
xchg
push
addr16
outsb
sbb
mov
ret
jge
xor
pop
sub
mov
sbb
jo
sbb
adc
mov
cli
jb
jnp
cwtl
xchg
dec
add
push
test
xor
xor
jno
int
ret
adcb
xor
pop
push
imul
in
mov
lcall
jle
cli
je
cs
call
icebp
mov
mov
data16
lods
pop
sub
xchg
or
add
int
cli
or
fdivr
ja
movhps
outsl
jmp
sub
dec
fs
xor
loope
mov
fcoml
xchg
mov
jl
cltd
push
outsl
jl
iret
pop
mov
dec
mov
sbb
int
inc
stos
add
arpl
jge
adc
adc
ret
in
stos
add
aad
jo
cmc
and
mov
sub
out
addw
cmp
cmpsb
push
ds
pop
jmp
push
lea
jne
pop
loopne
test
xor
fisubrs
test
rorl
push
jns
out
out
ljmp
sahf
fs
rcrl
push
lahf
subl
push
jno
inc
stc
ret
and
inc
scas
lret
shrl
pop
divps
add
mov
pop
fcmovb
xor
push
movsl
cmp
cmp
rolb
je
cmp
lds
adc
cmp
adc
adc
jg
add
mov
into
xor
arpl
test
roll
cmp
cmp
dec
bound
pop
or
push
sahf
mov
stos
inc
insb
popa
data16
rep
in
gs
fnstsw
out
add
lret
xchg
aas
lock
stc
loop
mov
push
add
inc
adc
mov
int
call
out
inc
and
rcr
fldt
stos
jg
nop
es
jne
cmpsb
sti
or
fisubrl
jl
mov
andl
movsl
adc
mov
daa
push
mov
outsb
push
js
cltd
lea
or
and
aas
in
jb
pop
dec
outsl
mov
fimuls
fs
lods
cmpsb
adc
mov
jae
push
movnti
pavgw
orb
ret
xchg
insl
fstpt
ret
daa
and
jg
or
mov
xchg
enter
or
push
iret
shll
jo
push
mov
xchg
sub
int
shrl
in
cmc
movsb
in
cli
mov
out
test
repz
push
pop
adcb
cmp
mov
cld
out
xchg
orl
movsl
cltd
xor
mov
addr16
xchg
push
sub
pop
dec
fisubrs
dec
sbb
std
push
je
xor
outsb
rorl
mov
movsl
addr16
xchg
sahf
mov
mov
pop
lds
sub
fwait
out
and
cld
jg
stos
or
inc
inc
mov
out
fadds
cld
rcll
roll
cmc
les
push
insl
aam
jae
lahf
and
lods
ret
insl
push
add
lret
mov
mov
test
sahf
inc
add
mov
dec
mov
jns
fdecstp
jbe
xchg
fwait
push
or
in
shlb
inc
inc
adc
enter
in
pop
cmp
es
inc
xchg
jo
push
test
xor
ds
xchg
inc
fnstenv
mov
jmp
fucomip
fiadds
pop
mov
rcl
add
sub
lcall
mov
ds
ja
inc
cs
jae
mov
add
xchg
pop
xor
icebp
jecxz
dec
xlat
pop
ja
cmpsb
scas
push
ljmp
fdivrs
aam
mov
daa
sti
mov
hlt
cmp
mov
dec
lds
cmp
clc
jg
in
mov
fisttps
iret
scas
test
xchg
cs
mov
inc
rorl
pushf
imul
dec
lret
mov
xor
pop
rcrb
adc
lds
repnz
dec
mov
mov
jle
daa
movsl
pop
push
inc
xor
scas
shr
bound
shll
and
pusha
pop
add
in
jns
cmc
fwait
mov
inc
push
sbb
popf
scas
mov
into
push
xchg
dec
sub
add
xchg
xor
dec
or
pop
xor
repnz
sub
or
push
scas
jecxz
sahf
or
and
jle
mull
inc
mov
dec
iret
sub
pop
or
push
stc
leave
les
sub
xchg
jne
dec
leave
xor
repnz
mov
ja
pop
jno
mov
insb
pop
gs
cmpsl
add
push
stos
stos
dec
xor
jge
cmp
push
into
rorl
xchg
adc
shll
add
imul
adc
or
sarb
cmpl
cmp
cwtl
adc
pop
mov
punpckldq
xchg
ja
sub
int
add
jecxz
xchg
sub
dec
mov
add
jp
in
loop
ljmp
jecxz
or
lahf
outsl
sub
mov
cmc
jmp
pop
fistps
pusha
xor
fdivrs
xchg
cs
dec
fimull
and
addb
stos
pushl
outsl
js
sbb
push
std
mov
xchg
fwait
adc
xchg
lahf
pusha
js
hlt
loopne
fnstenv
xchg
ror
das
xchg
xchg
faddp
add
jg
dec
fwait
mov
jg
cli
cltd
test
sub
pusha
movsb
sub
mov
pop
in
jge
in
add
or
repz
sub
pop
mov
xor
mov
mov
andl
adc
pop
ljmp
xor
or
mov
lret
jae
mov
unpcklps
in
div
and
push
dec
add
and
rorl
or
fisubs
jne
rclb
and
push
sarb
pop
loop
push
les
stos
imul
xorb
insb
in
jmp
mov
sub
lcall
pop
push
inc
loopne
push
pop
mov
repz
mov
stc
sbb
jmp
rcrb
cmp
sahf
add
stos
mov
jo
mov
jecxz
push
push
push
pop
out
call
pop
jle
sub
ljmp
pop
jle
rclb
sub
clc
dec
pop
or
ljmp
int3
stc
inc
sub
or
xchg
das
mov
repnz
movsb
ss
cli
push
xchg
or
js
mov
pop
xlat
leave
fwait
rorl
fstps
mov
dec
es
or
jbe
icebp
pop
jmp
adcb
pop
push
xor
adc
pop
std
mov
adc
sub
outsl
mulb
ja
xchg
je
hlt
and
sahf
mov
bound
adc
ss
fwait
mov
call
jl
into
ret
xor
jae
pushf
mov
cmp
mov
mov
ds
and
aam
pusha
stc
jae
test
and
shll
jb
orb
repz
ss
adc
imul
sbb
jnp
loope
fisubs
sub
push
test
add
ljmp
rcrl
mov
inc
icebp
ja
and
xor
sti
das
lods
lds
loop
push
and
int
ficomps
out
mov
cmc
xorb
cmpsl
out
sbb
repz
adc
xor
push
lock
in
cmp
stc
mov
mov
loop
ret
and
enter
sbb
xchg
sub
pop
repnz
dec
add
mov
sahf
and
out
cs
sbb
xchg
je
push
imul
inc
lods
push
loopne
pop
cmp
xorl
movsb
loope
insl
sbb
loopne
popl
mov
add
mov
fsubr
ficoms
mov
cmp
inc
cli
test
jg
iret
push
or
pop
xor
aad
cwtl
adc
mov
ja
lods
cmp
pop
in
sub
movsl
fdivrl
sub
stc
xchg
cld
pop
enter
dec
sbb
mov
mov
test
and
add
add
sub
jo
cmc
pop
mov
and
mov
mov
mull
cmp
xor
push
lods
dec
push
or
aas
iret
cwtl
pop
data16
xchg
sbb
jne
lea
push
xchg
mov
pushf
adc
pop
dec
lock
xchg
pop
xchg
sbb
lret
movsb
mov
dec
outsl
dec
jnp
mov
fsubr
stc
gs
pop
mov
pushf
loopne
aam
lock
inc
mov
or
xlat
call
xor
int
outsl
aas
sub
lahf
pop
add
mov
and
push
push
int
cmpsb
mov
ret
xchg
adc
pusha
sarl
mov
fdivl
cmpsl
mov
pop
inc
fsubr
mov
mov
sbb
inc
mov
dec
jo
lret
aad
mov
push
mov
mov
mov
sub
test
into
cmp
mov
pop
inc
xor
fcmovnbe
aaa
jle
push
dec
adc
push
aaa
out
nop
repz
pop
loop
je
mov
stos
mov
push
xorl
rorl
or
add
adc
push
into
pop
push
push
jne
cs
adc
cld
sbb
jmp
sub
xor
mov
inc
pop
pop
mov
lret
loop
xlat
pop
jno
push
ror
xchg
ds
adc
psubd
sbb
xchg
cmpsl
inc
push
out
popl
js
stos
mov
push
push
mov
pusha
scas
popf
test
mov
sub
push
push
mulb
pop
out
xor
lcall
jno
jp
dec
jae
mov
mov
lods
in
adc
cli
ret
in
jbe
into
movsl
lock
imul
gs
pop
enter
pop
mov
and
jne
cmc
mov
xor
add
push
hlt
int3
sbb
push
sub
fstl
mov
xchg
cmp
cs
clc
jmp
test
clc
addl
ds
jo
fldz
or
add
lret
jg
jecxz
bound
inc
ficompl
mov
in
xchg
shr
mov
lock
cmpsb
fsub
in
iret
jo
into
notl
and
cmpsl
pop
mov
mov
sbb
jp
pushf
fwait
fwait
jge,pt
xor
out
xor
mov
push
mov
xor
cmc
int
and
lds
mov
xchg
adc
into
test
or
ja
xor
sbb
das
cwtl
push
pop
repz
es
inc
ret
out
lds
mov
movsb
jecxz
dec
clc
shlb
std
pop
or
je
in
cmp
aaa
or
les
bound
adc
fcmovbe
rorb
mov
dec
cmp
xor
icebp
clc
mov
sub
divb
dec
shll
aad
mov
xchg
add
test
inc
jbe
int
aaa
adc
adcb
push
in
inc
push
outsl
sub
js
roll
or
roll
cltd
xchg
sbb
or
xor
and
mov
test
jo
cmp
xor
mov
into
jne
xchg
xlat
loope
sub
sbb
mov
inc
ds
jecxz
sub
enter
mov
cwtl
loop
xchg
and
fildll
ljmp
fistl
les
loope
mov
test
jns
and
fidivs
cmp
cmpsb
and
loopne
pop
fmull
pop
fildll
cmc
les
movsb
add
aas
or
mov
sbb
add
pop
push
push
jg
std
mov
out
cmp
or
push
cmc
pop
jne
stos
jb
orb
xor
mov
out
ret
fimuls
in
cltd
pop
js
cmp
jnp
pop
arpl
rcr
jne
sub
cmp
roll
ja
sbb
mov
lret
sub
xchg
in
adc
mov
adc
mov
pop
popf
loop
add
enter
sar
mov
sub
imul
jl
rolb
clc
mov
jmp
cli
decb
push
jo
and
push
lcall
lahf
shll
mov
jnp
sub
inc
in
scas
xor
lcall
mov
and
cmp
stc
outsl
mov
mov
ja
and
xor
popf
mov
and
pop
mov
fwait
stc
dec
adc
jmp
adc
mov
push
shll
ret
out
mov
loopne
adc
or
cmpsb
jle
andl
mov
fs
pop
js
push
cmpsl
or
push
dec
add
insb
loope
cmp
mov
ljmp
inc
jnp
aad
jmp
cmp
cwtl
arpl
sbbb
dec
in
adc
cmpsl
xchg
in
fst
loop
mov
daa
sbb
loopne
sbb
test
cmp
push
or
fldt
mov
inc
push
es
cltd
jb
mov
rclb
inc
movsl
cli
cmp
clc
lret
mov
dec
jp
mov
sub
pushf
movsl
sbb
fistl
fisttps
loopne
aam
or
stc
adc
mov
fwait
add
in
or
mov
jns
mov
ret
fcmovbe
mov
outsl
testl
ja
jns
push
out
test
fstpl
fucomi
ror
fstpt
add
das
push
and
dec
xchg
mov
xchg
pop
int
sbb
ficompl
in
icebp
scas
adc
dec
fdiv
sub
repnz
adcl
xchg
cmp
lret
shrl
mov
jl
or
add
mov
shrl
imul
mov
test
sti
jmp
cmp
cmp
push
xchg
orb
inc
jne
xchg
andb
add
mov
jo
adc
fidivrl
jno
test
jae
aad
rol
lods
ret
lods
xchg
push
push
and
push
jns
xchg
dec
add
or
daa
and
fxch
and
mov
in
test
repnz
ds
xorl
imul
xchg
mov
cmc
push
cmc
insl
xor
jecxz
arpl
das
mov
dec
arpl
imul
mov
push
pop
out
and
inc
cltd
lahf
popf
jg
mov
inc
mov
scas
fisttpl
test
lret
cmp
cwtl
sbb
dec
data16
inc
adc
sbb
adc
inc
mov
cltd
jecxz
dec
mov
je
cwtl
call
fxch
test
jo
lea
pop
test
cmpsb
popa
into
and
negb
test
stos
push
jo
out
movsl
gs
js
push
sub
jge
cmpsl
mov
pop
fcomi
push
push
pop
push
or
addl
stc
jp
imulb
mov
and
and
pop
cmp
hlt
add
and
pop
xchg
rolb
shll
mov
shll
cld
push
jns
adc
xchg
hlt
jne
mov
fs
dec
imul
icebp
pop
clc
sbb
gs
in
and
outsb
lods
cmc
sbb
mov
inc
rclb
adc
negb
scas
or
xor
leave
call
jns
dec
scas
mov
fisttpll
xor
lret
inc
pushf
outsb
lods
in
xor
leave
test
xchg
dec
mov
lret
and
pushf
mov
push
push
lds
rorl
or
jns
loopne
xchg
push
jno
call
add
repz
or
jno
jns
idivb
mov
lcall
sarl
mov
push
sub
add
sbb
mov
push
outsl
daa
fwait
daa
pop
mov
pop
cltd
int
daa
mov
inc
xor
push
mov
les
add
aas
sub
adc
or
push
ret
repz
out
fscale
sub
inc
mov
mov
adc
imul
sub
cli
pop
insl
cmpsb
xor
xchg
loopne
cmp
cltd
fcmovnb
adc
push
mov
xor
faddp
and
sarb
ficoms
sbb
sbb
loop
scas
jne
lret
jne
dec
or
xor
sti
add
pop
or
xor
hlt
mov
out
sub
xor
cmpsb
ljmp
mov
mov
pop
testb
fimuls
test
ret
cmp
dec
inc
mov
pop
mov
lods
loopne
jbe
add
xchg
imul
pop
pop
jno
jle
cmp
mov
ja
jno
dec
mov
jge
push
outsl
fcompl
inc
loope
enter
aaa
lahf
dec
add
sub
in
sbb
rorl
ret
loop
fistl
inc
loop
in
mov
je
push
adc
adc
push
cmpsb
ret
mul
ret
mov
cmp
psadbw
or
sti
xchg
mov
dec
cwtl
hlt
push
repz
push
add
test
inc
bnd
loopne
sub
mov
push
outsb
notl
insb
rcll
jge
add
sub
or
lds
xchg
sbb
lods
cs
out
lahf
adc
mov
loop
inc
jp
pop
mov
mov
mov
lods
xor
add
adc
xchg
into
les
dec
iret
jg,pt
xor
leave
gs
out
or
pop
mov
call
inc
inc
test
pop
jns
pop
xchg
sub
test
pop
dec
mov
add
ret
les
lds
cmp
scas
mov
ss
cwtl
mov
mov
pop
mov
push
lods
outsl
or
test
jmp
in
sbb
mov
out
loope
push
addr16
dec
pop
repnz
lahf
dec
inc
hlt
insl
bound
sbb
hlt
das
push
in
leave
push
mov
iret
inc
xchg
fdivl
push
repnz
pop
mov
in
dec
cmpsl
lret
push
fstps
jno
repz
mov
out
and
jb
cmp
mov
mov
mov
and
outsl
orl
rcll
arpl
inc
push
adc
mov
mov
xchg
xor
popa
xor
fisubl
inc
pop
out
pusha
cmc
cmpl
cmpsb
cld
dec
push
xor
shrl
ror
push
and
test
inc
gs
js
push
cmpsl
lods
adc
xchg
cmp
mov
pop
adc
scas
xchg
mov
cmp
out
out
call
dec
test
stos
dec
lret
cmp
gs
dec
es
sub
fs
push
pop
mov
fs
cmp
add
push
es
jns
cmp
imul
pop
push
jbe
aad
sti
xor
sahf
fcomp
popa
pushf
scas
rcrb
je
in
jnp
sub
jb
and
lods
and
xor
xchg
repnz
jp
roll
movl
cmc
aaa
dec
repz
sub
jg
fistpl
rclb
hlt
sarl
push
cmp
aas
xchg
enter
mov
test
add
jge
and
or
adc
scas
xchg
leave
adc
mov
xchg
mov
sub
adc
movsb
repnz
lahf
sub
sbb
jecxz
inc
roll
stos
jge
mov
sub
clc
arpl
pop
pusha
out
mov
mov
cli
mov
pop
das
sbb
sub
flds
adc
aas
jmp
stos
mov
adc
jo
iret
in
mov
dec
xor
iret
imul
mov
inc
adc
fwait
je
gs
jp
cmp
test
iret
jne
lcall
mov
sbb
jb
add
and
mov
inc
aad
arpl
jge
xorb
enter
fucomip
rcrl
rol
cmp
mull
or
fdivr
ja
sti
popa
pop
cmp
in
jae
jns
arpl
inc
mov
mov
fistps
mov
dec
stos
js
pop
push
andl
cmp
push
jl
lret
or
pop
mov
xchg
sbb
dec
inc
movsb
aam
test
je
shlb
inc
cmp
fsub
xchg
lcall
cmpsb
in
sub
sbb
or
xor
test
xchg
sti
loope
iret
mov
rcl
xchg
leave
sbbl
cmp
outsb
xchg
lret
push
icebp
jl
sub
add
call
mov
pop
mov
pushf
lds
repnz
sub
xorl
sub
fs
add
loope
pop
dec
and
sahf
mov
fs
mov
dec
inc
gs
frstor
or
fcompl
pop
pop
xchg
out
inc
repnz
pop
mov
adcl
idivb
mov
cld
cmp
clc
sbb
mov
icebp
divl
sub
lret
ds
mov
in
adc
outsb
ret
sub
dec
jl
pushf
dec
leave
fsubrl
lcall
push
and
pop
sbb
jle
loopne
cmp
cmp
push
cmpl
add
and
lahf
pop
shrl
push
cmp
adc
push
loopne
lcall
add
inc
cmp
mov
xchg
pop
outsb
inc
push
jb
orl
mov
loop
outsb
pop
mov
push
add
push
sar
xorl
push
xor
movsl
cmp
cwtl
std
scas
inc
loope
adc
dec
xchg
stc
popa
divl
testl
fbld
jb
hlt
outsb
pop
ret
in
pop
nop
in
xchg
fld
add
push
sbb
adc
into
addr16
das
mov
pop
push
fstps
jo
ss
add
push
aad
test
clc
loop
cltd
gs
lods
jb
jl
xor
js
mov
jnp
fstpl
ds
test
insl
pop
bound
inc
pop
add
xor
xchg
iret
mov
mov
negl
mov
mov
mov
and
dec
insb
mov
dec
inc
stos
inc
push
xor
push
push
jno
imul
fimull
mov
int
popf
mov
hlt
hlt
int
int3
stos
mov
outsb
es
push
int3
fs
cs
orl
ret
sbb
sbb
cmpb
lods
xor
pop
xchg
scas
repnz
aaa
mov
lret
jbe
shlb
aad
lcall
aaa
out
arpl
mov
inc
imul
testl
sub
push
daa
mov
loop
inc
dec
inc
lds
mov
leave
sub
xchg
repnz
push
and
scas
loopne
in
cltd
popa
fnstsw
insl
adc
jg
pop
insb
dec
iret
cmpsl
fwait
lcall
incb
dec
scas
incl
xor
out
jp
xlat
sbbl
add
mov
mov
aam
aas
dec
mov
mov
inc
jge
or
gs
and
push
sub
push
xor
adc
divb
movsb
or
out
adc
mov
mov
jmp
fsubrs
ds
sbb
fcompl
shrb
inc
xchg
leave
icebp
push
enter
pop
jg
push
leave
xor
addr16
shll
and
inc
jp
mov
inc
int
in
push
ds
addr16
mov
fimull
movsb
out
fwait
stos
outsl
sbb
scas
sub
jns
std
xor
lret
mov
mov
dec
xchg
inc
inc
xorl
pusha
lods
pop
lea
mov
aad
data16
aas
enter
fisubs
xor
out
sbb
dec
xor
clc
jne
pop
pop
push
or
roll
shlb
sbb
outsb
cmp
lds
mov
jno
enter
inc
cmp
loop
xor
sbb
pop
cli
mov
loopne
xor
sub
pop
in
or
ds
les
int
mov
jbe
fstl
movsl
mov
mov
mov
mov
test
je
xchg
xor
clc
mov
pop
dec
mov
sbb
push
jge
aad
arpl
pop
add
push
fdivl
loope
mov
mov
jo
or
imul
inc
pop
push
dec
cmp
mov
or
sub
or
xchg
jle
add
imulb
fnstenv
push
jle
and
xchg
fldt
xchg
ss
sarl
jnp
cmp
and
add
jl
pop
dec
cld
ret
dec
or
into
fdivs
imul
adc
add
pop
and
cmpsb
in
lahf
aad
repz
je
jae
scas
iret
ret
sub
pushf
lcall
cmc
adc
out
mov
add
outsb
repz
in
cmp
fmull
in
jnp
pop
arpl
or
inc
stos
mov
cs
mov
es
test
mov
lea
call
or
dec
pop
xchg
jg
addr16
leave
mov
pop
mov
xor
sub
or
jb
mov
jbe
daa
movsb
and
inc
jb
jge,pt
cmc
cmc
cmpsl
mov
jae
imul
pop
js
test
jecxz
sbb
jp
mov
mov
repnz
lods
jo
repz
ss
imul
lcall
inc
rclb
mov
movb
imul
sbbb
popf
pushf
test
pop
mov
add
ljmp
xor
xchg
xlat
out
add
hlt
lods
out
and
sahf
jl
std
xor
and
cmp
cltd
push
aam
mov
aad
inc
sti
out
mov
test
dec
mov
add
lods
mov
cmp
mov
movsl
sub
sarb
shlb
cmp
test
push
lea
das
or
jge
sub
jl
sbb
sub
add
js
inc
mov
adcl
rcrl
popf
push
mov
xchg
sbb
cs
lahf
and
mov
repnz
sub
push
push
jne
sub
pop
xor
mov
push
jno
mov
int
inc
ret
mov
and
mov
dec
sbb
adc
dec
pop
xchg
push
dec
inc
jns
sahf
jo
pop
dec
sbb
fnstsw
xor
and
push
std
lods
pop
cwtl
xchg
adc
out
xor
pop
adc
mov
xor
xor
out
xchg
loop
or
arpl
cmp
push
mov
jne
out
lret
mov
test
cmc
mov
adc
mov
push
jmp
stos
clc
sarb
sbb
ret
mov
adc
repz
dec
xchg
lods
cs
sub
push
adc
outsl
addl
push
mov
loop
and
fwait
cmpsb
inc
fnsave
gs
cld
xchg
push
popf
push
cld
jo
fstpl
pop
xor
in
and
push
jmp
mov
xlat
negl
xchg
sub
insl
test
lods
mov
sarl
mov
hlt
js
xor
and
loopne
andl
mov
lds
cmp
lods
mov
dec
test
icebp
xor
xchg
rcrb
in
fnsave
xor
xchg
lret
pop
push
mov
mov
jb
sub
mov
jmp
inc
push
sarb
fst
sub
cli
dec
xor
lock
sub
or
xchg
ljmp
dec
stos
fimuls
sarl
fdivrl
push
lods
lods
lea
cmc
imul
add
jg
sub
insl
ja
fistl
mov
push
mov
lods
flds
shl
lds
xlat
sar
adc
xchg
subb
mov
jp
xor
into
sub
inc
dec
xor
pushf
inc
out
jno
sbb
mov
orb
and
stos
scas
iret
and
dec
jae
pop
and
cmp
mov
and
adc
pushf
cs
lods
das
mov
xchg
sbb
pop
mov
loope
pop
out
popl
mov
pop
add
loopne
ss
mov
sub
adc
clc
out
insl
out
xor
pushw
xchg
lods
jno
pusha
out
push
stos
adc
mov
scas
push
out
inc
ljmp
out
sti
and
lahf
ds
mov
mov
test
and
js
cmp
movsb
lds
push
add
push
pop
popf
mov
lcall
test
sbbl
mov
sub
xchg
push
push
sub
inc
pop
adcl
push
jb
in
ds
inc
xor
repz
mov
ficoml
or
push
jbe
dec
stos
jo
lods
sahf
inc
sahf
mov
test
fisubs
xor
sbb
sbb
jno
push
cld
ljmp
imul
loopne
mov
cmp
xchg
jmp
cmp
mov
or
ds
loope
lret
jle
aad
insl
scas
in
cltd
loopne
fsubrl
mov
xor
inc
popa
insl
jbe
into
pop
ret
frstor
pop
xor
fdivs
fdivs
mov
and
mov
js
sti
sub
jb
sbb
mov
fistl
xchg
mov
pushf
xlat
call
outsl
movsl
mov
xchg
add
lcall
cmpsb
jae
mov
sub
jmp
enter
adc
dec
jmp
into
mov
and
cmp
jge
lcall
jnp
xchg
xor
or
loope
xor
lods
leave
scas
lcall
movsl
sub
xchg
or
in
jmp
add
cmp
ja
jge
sbb
sbb
shlb
sub
ja
adc
adc
push
pop
in
fcoms
cmpsl
scas
js
add
addr16
pop
test
adc
and
jnp
data16
push
dec
jp
ret
sbb
inc
in
cltd
icebp
hlt
inc
mov
sbb
jbe
lods
out
int3
jmp
psrld
xchg
mov
daa
jecxz
xor
sbb
in
fldl
add
cmp
pop
call
addb
outsb
jl
jo
and
fwait
push
jmp
pop
ja,pt
mov
push
push
lcall
mov
aad
pop
push
sub
and
adc
les
mov
fucom
push
dec
scas
pop
mov
pop
in
push
mov
mov
aad
mov
cmpsb
cltd
enter
push
rcl
lret
cmp
xchg
fstps
sbb
mov
fisttps
insl
cmc
fidivrs
push
mov
mov
mov
shrl
call
cs
mov
pusha
push
hlt
pop
adc
arpl
scas
das
add
add
leave
mov
popf
mov
sub
scas
mov
dec
sbbb
mov
pop
inc
cltd
int3
out
jmp
aad
inc
mov
sbb
sahf
push
call
mov
in
and
fmuls
ret
and
pop
dec
inc
or
and
dec
inc
mov
in
jp
jns
cmp
jecxz
or
das
cli
or
stc
test
xchg
xchg
in
add
aaa
aam
sbb
sbb
mov
fwait
sub
dec
jg
test
shrb
aad
test
push
iret
push
pop
xchg
bound
insl
pop
sub
xchg
adc
les
fbld
push
cwtl
jae
sub
sub
lock
mov
sarb
jno
repz
mov
iret
mov
jle
push
inc
sub
lahf
scas
push
xchg
pop
and
div
lock
ds
fisubl
adc
int
lods
mov
xchg
mov
stos
mov
jmp
inc
aam
or
mov
fcom
test
js
add
dec
xchg
jo
add
movsb
das
and
scas
lea
cmp
mov
or
sbb
or
mov
add
push
pushf
fstps
xor
sar
lods
insl
xor
push
or
cmp
sbb
jge
les
out
repz
push
mov
lock
iret
xchg
pusha
jnp
add
jmp
mov
xchg
lds
pop
and
ret
insb
mov
mov
andb
xchg
out
testl
inc
aas
andl
or
xor
mov
pop
shll
mov
lock
mov
inc
fs
mov
lret
sub
mov
pop
das
sub
lods
call
and
in
sub
xchg
push
arpl
arpl
push
cmp
add
addr16
in
jmp
or
aad
and
repz
test
fists
scas
push
push
push
xor
cmpsl
inc
int
sahf
cmpsb
aad
pop
and
jo
pop
jnp
cmp
das
cs
icebp
sub
loop
mov
xor
rclb
and
std
mov
dec
js
push
or
in
inc
mov
add
aad
push
push
das
sbb
sub
mov
cld
inc
mov
xchg
pop
push
jmp
inc
xor
mov
mov
and
shrl
xchg
ljmp
and
hlt
cmp
fidivl
ret
xor
popa
mov
popl
jmp
xlat
not
enter
mov
xchg
test
inc
add
shlb
loopne
xchg
int3
cltd
movsb
addr16
mov
xorl
mov
mov
call
sahf
xorl
pop
testb
xchg
lcall
test
pop
fsubl
pop
loope
sti
and
inc
sbb
xchg
lret
cmp
xchg
lahf
mov
imul
movsb
fdivs
ret
jbe
mov
das
add
fcomi
adc
pushf
and
sub
lods
sti
and
pop
dec
xchg
or
mov
pushf
subb
movsl
dec
jecxz
insb
fimuls
jnp
data16
bound
cmc
mov
mov
dec
sahf
cwtl
clc
in
sbb
and
hlt
mov
mov
jge
mov
mov
and
dec
mov
mov
icebp
cmpb
addr16
mov
call
cmp
pop
ss
xchg
or
mov
xchg
addr16
push
cmp
cltd
and
xchg
cli
sub
pop
pop
or
jecxz
popa
stos
inc
xlat
mov
xor
add
das
out
sarb
xorl
cmp
ret
and
cmp
pop
xlat
mov
mov
or
inc
cli
push
pop
adc
test
add
sbb
lret
xchg
jg
sahf
aaa
test
scas
out
dec
dec
int3
sbb
jb
xchg
lods
jns
or
sahf
out
out
mov
jo
aad
andb
outsl
pusha
sbb
pop
inc
add
push
dec
xchg
xchg
jl
inc
mov
and
sub
sub
mov
xchg
clc
in
jo
or
mov
ret
mov
pop
lret
mov
data16
xchg
mov
imul
mov
inc
adc
jge
sahf
mov
int
in
ja
ss
push
pop
xor
and
imul
out
jb
cltd
cmp
shl
loope
add
fldt
data16
pop
mov
pop
push
mov
orb
lds
fimull
sbb
or
outsb
pop
aad
jmp
dec
cmpsl
add
aaa
push
popf
mov
sarl
cltd
jo
clc
fldl2t
ret
xlat
outsb
icebp
int
pop
mov
jnp
inc
mov
adc
mov
inc
into
test
ret
int3
fisttps
leave
mov
add
arpl
aad
pushf
jg
addr16
loope
loop
pop
inc
outsl
xchg
arpl
rorb
xlat
fidivrl
lds
sti
movsl
es
into
frstor
mov
ja
out
cmpsb
xadd
and
sbb
adc
cwtl
add
mov
bound
cmp
dec
mov
inc
lods
or
sub
pusha
jno
cmpsl
xor
cmp
pop
sbb
adc
adc
jno
cltd
mov
sub
xchg
adc
mov
das
or
lcall
imul
jle
out
sub
inc
adc
imul
mov
pushf
sub
sbb
ja
xor
mov
mov
jl
sbb
xor
mov
test
jae
pusha
cltd
out
popa
sub
insb
dec
mov
pop
imul
and
arpl
into
jb
lods
adc
int
sub
add
cld
add
loope
cld
lods
pop
lret
adc
inc
popa
mov
xchg
bound
jecxz
xlat
cli
jecxz
push
add
imul
jbe
or
or
pop
scas
sbb
lret
and
cmp
or
push
and
cmp
aam
inc
aam
insl
shrl
enter
jmp
jbe
cmp
mov
repnz
daa
sub
jl
xor
adc
ret
enter
pop
inc
fbstp
mov
std
ret
jne
shlb
inc
jae
adc
sbb
cmp
notb
xlat
cmpsb
mov
xlat
rorl
inc
sub
test
repz
xor
pop
add
scas
mov
pop
xlat
mov
daa
out
dec
inc
and
dec
movsl
sub
sub
shlb
aam
and
idivl
xlat
aam
nop
push
mov
jmp
mov
mov
push
adc
js
lret
xorl
mov
add
dec
ror
movsb
mov
pop
and
or
inc
jne
dec
push
stos
bound
stc
inc
sar
mov
adc
xchg
sbb
mov
clc
loope
inc
mov
jb
movsb
mov
pop
jge
xchg
dec
arpl
fucomip
out
loopne
pop
movsl
cs
sub
and
cwtl
leave
test
inc
mov
mov
popl
xor
add
leave
xlat
nop
jecxz
and
es
in
cmp
xchg
sahf
pop
and
push
push
pushf
out
out
jl
inc
xor
test
out
sbb
mov
in
out
push
mov
inc
sbb
add
mov
xchg
fcompl
jg
push
inc
xchg
ret
jl
jno
orb
clc
push
jae
cmpsl
es
into
ja
lret
adc
push
ds
lcall
mov
mov
das
cmp
stc
out
mov
fwait
out
stos
mov
ret
leave
aas
fisubl
arpl
dec
fwait
fwait
add
mov
mov
inc
test
fstpl
popf
mov
scas
addl
test
xchg
mov
xchg
mov
push
or
xchg
out
testb
jl
xchg
mov
pop
mov
lock
xchg
outsb
add
loopne
mov
mov
or
add
sub
data16
lods
adc
pop
shl
pop
inc
sub
add
add
inc
cwtl
rcr
add
pop
lahf
and
in
cs
addr16
loopne
mov
in
cmp
ret
lods
sub
or
cmpsl
cld
sub
lock
js
fdivs
in
repnz
imul
stc
test
jno
xchg
fdivs
mov
and
mov
ja
hlt
test
je
sub
pushw
divb
pop
adc
dec
cs
movsl
gs
rolb
adc
cmp
test
stc
lret
lea
das
sbb
xchg
lret
shrl
add
push
inc
cmpsb
adc
sub
cmp
or
dec
inc
fiaddl
xchg
repz
cmp
sbb
add
testl
push
push
sub
dec
xor
scas
push
scas
adc
js
jnp
sbb
sub
pop
in
xchg
shrl
hlt
imul
jg
or
sbb
mov
or
inc
outsb
xor
push
xchg
bound
pop
add
xchg
stos
or
xor
out
pop
adc
jmp
out
insl
mov
sub
jge
sub
aas
sub
pop
das
pop
lock
es
mov
adc
aaa
out
xor
inc
inc
addl
mov
test
inc
mov
inc
jmp
xchg
jge
lret
push
xor
xor
repnz
test
lods
xlat
mov
das
es
cltd
push
sbb
movsb
js
push
pop
pop
and
outsb
and
inc
arpl
mov
mov
xorl
xor
cmp
or
cli
jle
and
insl
stos
xchg
mov
sti
sarl
or
mov
add
lea
or
dec
sbb
mulb
js
jg,pn
mov
cs
cs
cltd
js
dec
data16
fmulp
pop
shll
jno
dec
jbe
outsl
fs
pop
repnz
push
pop
dec
call
push
call
and
push
sub
sub
mov
shl
jecxz
shll
in
jecxz
adc
call
aad
and
test
jb
add
lock
mov
cmpsl
mov
gs
dec
inc
xchg
nop
jle
add
fs
jmp
mov
repz
cmp
add
test
fdivrp
xor
cmp
repnz
cmp
jecxz
in
jl
pusha
cmpsb
out
test
inc
stos
mov
rcll
sahf
mov
or
sub
jmp
pop
mov
pop
push
sub
sahf
inc
rcll
cld
lock
push
cmpsb
movsl
stos
leave
sbb
sti
adcb
lcall
mov
mov
push
sahf
pushf
sbb
fmul
jp
mov
xlat
adc
orb
lcall
sub
test
xchg
adc
movsb
cmc
cmp
ja
xchg
sbb
pop
dec
loopne
jl
stc
int
push
js
push
scas
mov
fwait
mov
loope
xchg
mov
pop
rcr
enter
iret
divl
hlt
cmp
pop
jg
jp
mov
xchg
xor
pop
aas
out
cld
or
sbb
sarl
push
mov
ja
je
cmc
fnstsw
insl
rcll
push
fcomps
pop
gs
add
push
cwtl
mov
imul
sbb
cli
sbb
lea
fmull
jp
aas
testl
cs
fildll
daa
pop
fs
xchg
enter
jg
jle
dec
cli
sbb
xchg
imul
mov
sub
lods
mov
pop
mov
mov
stc
divl
repz
mov
imul
rcl
dec
cmc
mov
push
adc
adc
das
or
mov
add
pop
int
mov
mov
mov
loopne
mov
lret
pop
cmp
repz
mov
sarl
movsb
mov
aas
xor
popa
jbe
fisubrl
adc
leave
out
mov
or
repz
imul
lcall
pop
xor
xchg
dec
testl
pop
xchg
inc
jb
pop
or
and
cltd
popa
mov
sti
sbb
cmp
mov
rcrb
insb
loopne
shlb
adc
mov
ret
std
les
fdivrl
sbb
jecxz
pusha
mov
sbb
add
pushf
movsb
pop
pop
out
imulb
es
stc
jb
pop
fstpt
int3
push
orb
xlat
jb
sbb
or
xor
fdivr
xor
callw
dec
dec
fwait
add
js
dec
int3
outsb
les
outsl
mov
cmp
add
sahf
or
sub
imul
decb
mov
mov
and
or
mov
mov
pusha
push
test
insb
jo
lahf
add
stos
stos
subb
sub
jns
mov
inc
inc
push
jmp
lods
cmpsl
stc
mov
mov
popa
decb
flds
or
lret
iret
lret
pushf
and
imul
movsl
mov
rcl
lea
and
sub
fnsave
cmpsw
pop
jno
cli
sub
mov
xor
jle
outsl
or
inc
add
cmpsb
adc
dec
push
cmpsl
inc
test
repnz
fsubs
jmp
mull
xor
cmp
add
nop
pop
mov
push
aaa
clc
sub
mov
xlat
insl
jnp
dec
out
sbb
test
sbb
insl
push
push
es
push
scas
sbb
cld
fcmovbe
daa
and
clc
adc
repnz
or
xchg
or
js
stos
add
aas
in
add
out
or
loopne
sbb
jmp
sbb
inc
fiadds
add
dec
jp
add
stos
fwait
and
out
cmp
fwait
roll
jp
jns
mov
xor
sbb
pop
loopne
stos
jb
clc
pop
xlat
mov
pop
into
fwait
adc
ss
push
jmp
mov
xchg
mov
pop
add
test
cli
outsb
aaa
push
push
bound
out
idivb
xchg
push
or
cmpsb
lock
mov
jmp
mov
icebp
sar
sbb
leave
mov
jo
leave
inc
loopne
insb
inc
mov
mov
push
jmp
push
xchg
test
jno
sbb
scas
jbe
insb
and
into
es
mov
sub
mov
sbb
insb
enter
dec
ja
add
arpl
push
cli
mov
roll
add
add
mov
mov
inc
add
sub
pop
lea
stc
cmp
or
inc
repnz
ss
in
mov
rcrw
cld
inc
cmpsb
jge
jbe
and
pushf
xchg
jnp
push
inc
pop
aas
repnz
scas
insb
out
pop
jmp
fildll
in
outsl
push
adc
inc
mov
adc
mov
add
and
insl
loope
jbe
xchg
jb
stos
cmp
dec
inc
leave
iret
out
cltd
mov
sub
popf
mov
push
and
sahf
outsl
fs
push
faddp
or
out
cmp
mov
push
sub
sbb
and
xlat
enter
out
mov
or
sub
in
es
inc
aad
shr
aam
iret
shrb
test
mov
push
in
xchg
pop
mov
pop
push
pop
mov
neg
xchg
iret
popa
xchg
push
fsub
mov
enter
dec
rorb
in
rcr
jle
hlt
sub
lea
jbe
mov
mov
movsl
out
mov
xchg
add
int3
lods
push
mov
addr16
cmp
sbb
adc
lods
mov
pop
fwait
sbb
cmp
jnp
add
cmp
test
xor
getsec
loop
jnp
xchg
push
repz
roll
inc
mov
mov
inc
lock
inc
lds
jle
xchg
push
das
mov
push
sar
add
lret
push
pushf
cwtl
pop
stos
cmpsb
or
aas
andl
push
es
dec
mov
or
or
or
ja
psrld
popa
sub
and
push
leave
push
ficoms
ror
xchg
sub
js
jne
add
xor
jae
add
push
mov
add
push
lcall
sahf
mov
mov
stos
and
adc
shll
xchg
shl
sbb
xchg
outsl
test
sahf
xor
xor
mov
outsl
cmc
cli
les
repnz
movsl
add
aad
jno
jb
in
pop
adc
mov
fsubrs
sbb
jmp
imul
fsubp
xchg
lock
aas
sti
add
push
hlt
aas
add
iret
cli
int3
dec
push
xchg
pushf
inc
ret
jno
clc
rorb
cmpb
fildll
andl
lret
mov
pop
mov
repnz
inc
jg
jae
lahf
ss
mov
inc
je
repnz
mov
mov
dec
cmpsl
push
jnp
or
push
xchg
lds
addl
imul
push
sahf
pop
inc
scas
fadds
dec
mov
pop
dec
jns
out
ljmp
push
leave
out
mov
pushf
aas
movsl
sbb
sbb
add
int3
inc
in
jle
xor
std
mov
push
jo
loope
mov
pop
inc
loope
into
push
add
adc
shrb
xor
mov
mov
or
ss
mov
and
inc
fs
adc
xchg
xchg
jo
int
aas
push
adc
cmp
cmp
jmp
jle
xlat
mov
imul
dec
int
add
fmull
xor
pop
mov
lock
jge
ja
and
or
add
icebp
das
loopne
rorb
idivl
xchg
mov
scas
or
rcl
jb
xchg
mov
mov
inc
into
roll
fs
enter
popa
mov
in
loop
or
mov
add
dec
out
mov
lea
movsl
mov
shll
lret
dec
xchg
movsb
mov
fs
jno
sub
xor
xchg
mov
fucom
jmp
mov
test
cli
fcompl
je
lods
js
sbb
ss
inc
xchg
mov
mov
ret
cmp
gs
call
rolb
mov
lods
cmpsl
dec
xchg
fs
dec
in
mov
sbb
and
ljmp
pusha
dec
mov
mov
jmp
enter
or
dec
repz
jecxz
xchg
and
repnz
addr16
loop
jne
clc
pop
lahf
pushf
mov
xor
pusha
fsubrs
jmp
lret
mov
jle
inc
jmp
lea
subb
enter
adc
sbb
dec
cmp
adc
pop
xchg
dec
xchg
cmpsl
sub
jmp
inc
loop
mov
test
gs
or
out
dec
ret
mov
pop
push
stos
shlb
mov
mov
mov
stc
inc
fsubrs
das
iret
out
mov
jle
into
enter
mov
mov
add
adc
fdivs
stos
rorl
inc
mov
dec
mov
cmp
adc
push
loop
xchg
adc
fs
pusha
jbe
and
int3
fistpl
mov
cmpsl
add
add
inc
push
push
mov
jmp
dec
pop
out
sbb
adc
or
sahf
popa
pop
sub
xor
inc
test
ficoms
ds
cli
inc
mov
lock
std
xor
jnp
inc
xor
fisttpll
adc
xchg
adc
bound
mov
add
fwait
xor
loopne
fcmove
xor
push
ss
dec
xchg
ss
push
sarb
fwait
xorb
inc
bound
aaa
pop
int3
xchg
pop
imul
mov
les
jo
dec
lret
mov
add
ret
mov
stos
outsl
push
pop
push
mov
ljmp
xchg
mov
adc
jb
or
or
mov
lods
ss
jp
adc
and
pop
pop
in
std
xchg
lret
push
repnz
inc
cwtl
push
mov
out
cmp
repnz
stos
lock
push
dec
stos
add
incb
das
lods
daa
fwait
mov
dec
dec
push
sbb
jle
rorl
fisubs
int3
adc
inc
mov
pop
push
inc
cwtl
daa
out
add
xchg
xchg
test
loope
aaa
fldt
jmp
jns
in
sar
test
shlb
sarl
xchg
xchg
sbbb
xor
lahf
cmpsl
dec
fst
jmp
int3
lret
ds
mov
mov
mov
xor
xchg
in
push
cmp
cmp
out
js
push
rorl
out
xor
jbe
fwait
push
fiadds
imul
test
sar
leave
sub
mov
xchg
sbb
sbb
sbb
sub
aad
push
flds
psubq
sbb
sbb
dec
xchg
xchg
push
pop
inc
ljmp
dec
loopne
xchg
js
out
cmp
fsts
inc
ss
inc
ss
xchg
das
mov
sbb
dec
and
scas
add
cmp
subb
cmp
cmpsb
ret
je
outsb
int
dec
pop
mov
mov
orl
insl
jg
test
arpl
imul
jnp
sbb
jge
gs
sub
cmpb
loope
mov
push
fstpl
mov
cmc
filds
fwait
push
dec
fsubr
lds
imul
or
loopne
xchg
test
fimuls
loope
daa
cmpl
int
inc
xor
outsb
iret
int
in
int3
sbb
cmp
xchg
push
push
dec
mov
out
popw
xchg
jae
mov
addr16
mov
jae
pusha
inc
sbb
fsubr
push
lcall
jbe
push
aaa
push
mov
push
clc
lds
cmp
mov
clc
xor
inc
xchg
filds
add
mov
jg
je
jl
in
mov
dec
ror
adc
pop
or
pushf
xor
ret
cmp
pop
std
in
call
call
insl
pop
add
gs
dec
jns
shll
imul
or
das
mov
fnstenv
dec
mov
or
fldl
xor
outsb
mov
shl
jne
inc
fimuls
inc
inc
out
add
dec
mov
cwtl
dec
mov
hlt
push
notb
out
mov
push
sbb
mov
fdivl
push
adc
cmpsb
cmp
movsl
sbb
cld
jle
into
cmc
scas
lahf
in
or
dec
inc
xlat
xchg
pop
dec
insl
sub
adc
xchg
and
imul
mov
dec
arpl
cmp
push
push
dec
test
mov
dec
mov
sub
cwtl
xchg
les
or
ret
mov
shll
lds
xor
or
xchg
cmp
xlat
sti
push
lcall
push
adc
xor
add
popf
xchg
fnstcw
xchg
imul
xchg
xchg
mov
sub
enter
inc
insl
xchg
movsb
fisubrs
test
inc
dec
cld
jo
nop
lret
mov
pushf
lret
cmp
xchg
xor
lret
lds
fbld
xor
mov
flds
jg
xor
dec
jnp
roll
sub
jmp
mov
pop
dec
adcb
loopne
xchg
sub
cmpsb
clc
ss
js
test
iret
inc
add
dec
pop
ss
addl
arpl
sbb
mov
loopne
test
dec
in
inc
inc
imulb
xor
out
hlt
nop
sbb
shll
aam
out
sbb
jle
mov
push
dec
dec
arpl
out
jmp
mov
aaa
mov
and
add
cmpl
cld
sbb
cmp
pop
xchg
ficoms
sbb
pop
ljmp
mov
lock
cmp
stos
add
cmp
in
push
xchg
pop
jbe
imul
jmp
sub
in
fstpl
lret
cmp
out
andl
xor
out
xchg
jns
daa
stos
shl
jne
push
outsl
jp
popf
fdivp
pop
inc
out
inc
xchg
add
in
je
iret
dec
lods
cmp
sarb
cmp
flds
xchg
pop
jae
jl
icebp
aad
cmpsl
mov
jg
test
cmp
jl
decl
fwait
sub
rolb
ret
push
pop
dec
adc
and
lock
lret
das
xchg
sahf
add
leave
in
jne
sbbl
cmp
cmp
adc
push
pop
xor
dec
jnp
push
sub
in
xor
out
lods
push
cli
xor
pop
pop
fdivrs
xchg
pop
mov
ljmp
shrl
das
xchg
leave
js
out
push
in
sub
call
pop
repnz
hlt
cmp
cmp
gs
ja
pushf
xchg
sbb
push
jge
insb
out
ja
cmp
xlat
adc
sbb
or
incb
mov
movsl
jno
int
mov
push
or
sahf
dec
inc
rol
loop
push
insl
and
aad
cmc
mov
loop
shll
add
cli
sbb
loopne
mov
test
inc
sbb
out
imul
outsl
pop
sub
imul
mov
push
mov
inc
xchg
ljmp
icebp
pusha
inc
fmull
in
push
adc
fidivl
das
sub
in
in
pusha
lods
xor
or
sbb
repz
xor
stos
push
ds
scas
inc
add
or
jnp
mov
stos
testb
jb
push
mov
mov
inc
shll
fs
add
cmp
push
push
repnz
pop
dec
push
and
scas
sub
xor
push
push
add
or
sbb
xchg
inc
pop
jecxz
clc
adc
movsb
jge
and
std
pop
pop
pop
adc
ret
lret
and
inc
pop
jns
scas
xor
adc
pop
test
adc
fdivrl
stos
cmp
adc
std
fwait
dec
inc
jg
adc
pushl
sub
push
mov
or
mov
rclb
arpl
sub
mov
cmp
jbe
dec
sbb
cmpsb
test
mov
aaa
insb
mov
add
pop
fsubrs
jns
xchg
sub
mov
es
loopne
add
dec
jae
cmp
into
sbb
scas
imul
xor
and
jnp
or
in
push
and
int
cmp
orl
inc
lods
push
lea
and
pop
jnp
add
jge
cmp
aam
addr16
adcb
jg
jnp
inc
imul
pop
fsub
lcall
xchg
bound
xchg
subl
or
ss
outsl
sbb
mov
movsb
mov
out
data16
loop
sbb
adc
xchg
inc
xchg
mov
push
fsubrl
je
sbb
mov
adc
or
cmp
push
mov
daa
frstor
aas
add
push
jbe
cmp
inc
repnz
xor
jecxz
dec
push
jno
jb
pop
add
jecxz
lret
xor
cmpsb
and
pop
add
or
shll
in
fstps
mov
xchg
pop
jnp
cmp
mov
and
pusha
fadds
mov
cltd
dec
lret
or
jbe
int
aad
jmp
mov
es
out
bound
xchg
int3
adc
shrl
xchg
mov
sbb
fisttps
xor
lea
and
dec
jo
ja
ficoml
push
pop
add
jp
int
scas
push
lock
cmpsl
cmpsl
xchg
jae
add
mov
cwtl
in
or
gs
sub
and
pop
lock
mov
int3
mov
dec
cmpsb
jbe
test
shll
fstl
mov
lods
inc
cmp
in
aas
push
inc
aas
add
jno
hlt
push
adc
lock
mov
add
bound
lret
lods
mov
xor
test
imull
mov
idiv
adc
add
mov
and
out
xchg
icebp
les
jb
out
dec
push
setl
xor
inc
pop
ds
lods
jnp
mov
mov
cmpsb
cmp
cltd
mov
inc
out
mov
ret
xor
xor
scas
inc
and
call
aad
cmpsl
sti
push
push
xchg
mov
or
movl
push
dec
xchg
adc
mov
push
ljmp
mov
mov
jne
pushf
ljmp
lods
lcall
gs
cltd
lahf
or
cmp
jno
cltd
movsb
pop
sub
inc
cltd
xchg
in
test
stos
push
outsb
cmp
inc
clc
pop
inc
aam
in
fprem
mov
daa
repnz
imul
aam
sbbl
out
mov
call
fmull
sbb
jns
sahf
sub
cld
mov
sbb
ret
pusha
fdivl
insl
xchg
repnz
fs
int
jle
loopne
and
mov
jmp
or
imul
ss
div
mov
rcrb
and
out
or
sub
fwait
leave
fidivrs
insb
cmp
pusha
gs
cmp
jbe
lahf
cmpsl
jle
cmp
cmp
loop
pop
test
lds
enter
push
mov
rol
adc
cltd
das
inc
test
sahf
or
fnstsw
ret
push
adc
lock
add
cmc
inc
out
inc
or
mov
aad
rcrb
jmp
sub
test
movsb
stc
pop
inc
xor
mov
lea
imul
xchg
push
cs
jbe,pn
scas
xor
shl
inc
fmuls
jbe
fs
movsb
insb
outsb
dec
movsb
jns
mov
push
push
or
arpl
inc
insb
ljmp
test
push
push
fdivrp
xor
push
sbb
sub
leave
xchg
ja
mov
mov
sub
adc
jecxz
stos
add
xchg
mulb
mov
adc
push
jecxz
sub
test
ljmp
std
dec
sub
loope
mov
ds
pop
sbb
stos
andb
outsb
lea
mov
jnp
sub
xor
mov
mov
pop
in
push
mov
in
pushf
mov
xchg
mov
adc
sarl
push
cli
ret
dec
inc
movsb
incl
sahf
inc
scas
fisubrl
or
xchg
movsl
aas
pusha
scas
sti
gs
mov
lods
dec
cwtl
repz
and
movsl
sarl
xlat
xor
adc
sub
cmp
mov
clc
in
lret
push
push
add
xchg
aas
loope
int
js
xchg
gs
popa
push
fbld
ljmp
cmp
xchg
mov
pop
lods
ret
mov
push
leave
rcr
xor
aas
and
xor
ret
pop
stos
lcall
adc
scas
sub
movsl
push
je
rcll
idivb
xorb
nop
mov
jp
jo
inc
add
rorl
aaa
push
test
aad
adc
jo
test
fimull
sbb
pushl
popf
nop
loop
in
mov
shrl
mov
bound
lods
add
inc
or
test
mov
shlb
ficomps
popf
aas
aaa
mov
shlb
rcrb
daa
push
inc
dec
inc
jns
push
or
mov
lods
xor
aam
call
arpl
in
xchg
inc
push
int
add
pop
sub
mov
xor
out
dec
aaa
xor
jg
lahf
mov
jb
rolb
sbb
jg
mov
pop
addb
jmp
push
fwait
jl
dec
fsts
dec
js
dec
fstpt
daa
mov
ds
ss
jns
and
jbe
scas
xchg
jl
mov
push
push
dec
add
pop
mov
xchg
mov
mov
inc
outsb
cmc
push
es
lods
mov
ljmp
or
jnp
push
loop
or
in
daa
cld
es
cmp
ljmp
add
cli
push
inc
xchg
lcall
and
mov
lahf
inc
fidivl
and
mov
out
cmp
push
outsb
lods
cwtl
or
xor
loope
out
pop
mov
or
pop
inc
incb
sbb
mov
or
repnz
or
mov
fsubr
mov
ret
push
xor
rorl
mov
stc
mov
jmp
jae
sbb
xchg
cmp
cmp
mov
lock
outsb
mov
stos
dec
jnp
and
mov
mov
xor
mov
or
in
in
and
push
add
icebp
loope
hlt
jecxz
pusha
or
ljmp
fwait
cmpsb
neg
in
aad
mov
jl
adc
xchg
jg
int3
pusha
xchg
stos
mov
mov
addr16
adc
xor
adc
push
inc
int
inc
jo
inc
lods
jle
cmp
imul
mov
mov
xchg
cmp
pop
dec
xchg
sbb
mov
cltd
jp
sub
pop
jle
or
loopne
pop
add
lock
mov
cltd
push
fsubs
jecxz
inc
xor
incb
pop
mov
jbe
cltd
movsb
mov
shrl
sahf
sbb
sbb
fildl
daa
faddp
jl
lods
popf
repnz
pop
int
or
adc
iret
mov
mov
or
mov
adc
mov
incb
cmpsb
gs
dec
push
adc
dec
push
mov
outsb
dec
adc
push
xor
shl
fcoml
and
sti
cmc
xchg
adc
push
jae
mov
cli
adc
adc
ja
or
adc
std
jb
mov
mov
sub
es
xchg
pop
out
and
out
cmp
xchg
pop
add
pop
daa
dec
xor
cltd
xor
or
ss
rcrl
sub
xchg
inc
dec
lods
or
mov
inc
addb
push
mov
pop
in
fsub
xorb
icebp
lret
and
incl
lahf
dec
pop
ja
flds
cmp
xchg
loope
pop
mov
xchg
xchg
xchg
adc
aaa
add
bound
ljmp
lock
lds
mov
fidivs
mov
mov
sahf
mov
arpl
push
icebp
xchg
inc
push
in
mov
push
sbb
mov
mov
aam
inc
movsb
stos
fisubs
or
pusha
lcall
daa
ret
ret
xchg
rcrl
aas
es
movsl
out
fidivrl
in
lcall
pop
add
mov
cmpl
jne
jge
adc
ljmp
sbb
pop
or
mov
xor
pushf
push
cmp
rclb
adc
adc
scas
in
mov
andl
hlt
cltd
lahf
aad
mov
ficompl
mov
xor
push
pop
push
mov
push
mov
bound
mov
scas
mov
inc
rcr
ror
push
adc
mov
into
pop
cmp
jmp
lds
xor
push
jge
mov
pop
xlat
stc
fnsave
aam
repnz
xor
xor
dec
jge
mov
stos
in
adc
adc
aas
xchg
mov
jne
pusha
lret
xor
mulb
enter
pop
adc
mov
xor
lods
or
pop
or
lret
insl
enter
jae
pop
add
iret
mov
push
mov
add
loope
push
push
in
outsb
scas
jne
inc
or
nop/reserved
loop
mov
rcrb
fcmovnu
enter
nop
xchg
pop
lock
jecxz
imul
addl
mov
cmp
mov
int
pushf
pop
hlt
sbbb
js
cwtl
lods
mov
jmp
pushf
nop
and
lods
inc
fstps
je
repz
aaa
sub
xor
xor
ljmp
mov
mov
pop
inc
addb
mov
inc
pop
or
pop
adc
shrl
xor
lds
adc
shll
movsl
xor
sbbb
addl
jne
dec
mov
xor
and
insl
dec
scas
sahf
jl
adc
test
in
xchg
mov
test
cmpsl
dec
or
shl
xlat
jno
sbb
xchg
xor
arpl
pop
mov
sarl
insb
xor
push
mov
jmp
lds
jb
cmpsl
and
mov
push
cmp
mov
xor
and
jge
jmp
add
mov
xor
push
into
dec
mov
push
mov
jno
sbb
aam
push
aas
pop
lret
xchg
dec
sub
cmp
leave
jp
fistps
push
test
inc
outsb
xor
cld
outsl
xchg
push
outsb
sub
or
and
or
movsb
sbb
ds
adc
mov
add
push
test
inc
in
fsub
pop
mov
mov
and
jmp
lods
mov
mov
lods
or
iret
fldl2e
arpl
ja
jb
cmpsb
test
rol
int3
das
mov
jae
rorb
fidivl
cmp
jno
mov
test
cmp
pop
fs
outsb
fimuls
pop
jnp
in
outsl
test
xchg
jbe
mov
push
ret
sti
popf
dec
dec
pop
cmp
mov
dec
roll
push
repz
repnz
adc
push
pop
add
xchg
jmp
icebp
push
and
and
mov
test
xchg
dec
in
dec
jno,pn
into
out
push
daa
cltd
jge
fcmovnb
pushf
mov
push
ror
stos
xor
and
sahf
lret
scas
mov
aad
push
shlb
inc
out
jmp
jg
mov
xchg
scas
push
xchg
lahf
sahf
cmpsb
mov
enter
cmp
mov
imul
mov
lods
addr16
jae
mov
insb
jbe
fs
push
jle
adc
cli
inc
test
push
add
ds
xchg
adc
int3
or
aad
lahf
inc
popa
add
xchg
add
jg
push
aaa
sub
sub
add
sbb
imul
dec
loopne
dec
outsb
mov
adc
lcall
sbb
xchg
popa
enter
push
repz
addr16
pop
clc
aad
mov
ficomps
pop
fadd
fidivs
ret
in
cld
and
enter
out
mov
push
xor
fsubrs
and
in
xor
sub
push
adcb
jne
push
fs
aad
aam
inc
fdivrp
xchg
shlb
xor
cmp
pop
fcom
pop
xor
inc
imul
xor
cli
imul
flds
jle
mov
inc
add
or
call
sub
mov
mov
outsl
fcoms
xchg
lret
add
lods
push
andl
fwait
inc
je
rcl
aad
xlat
lcall
test
sbb
sbb
bound
mov
mov
cltd
cwtl
cmpsb
mov
sbb
addb
inc
mov
or
xor
out
push
rol
adc
das
aad
in
and
in
adc
or
inc
in
pop
push
ss
mov
sbb
clc
rcll
push
inc
mov
jmp
sbb
cmp
stos
lds
xor
mov
addr16
mov
mov
std
pop
add
push
in
into
mov
jle
stos
int
mov
xchg
cmp
jo
in
cmpb
dec
xor
into
cmp
jge
andb
cmpb
pop
aaa
and
test
out
dec
dec
mov
mov
insl
mov
std
in
push
sti
mov
xchg
sbb
mov
movb
insb
xor
jns
xor
xor
pop
scas
pusha
xchg
popa
sbb
sbb
ret
mov
jo
mov
push
dec
fwait
lock
cmp
add
andl
xchg
ds
mov
dec
inc
xchg
in
sti
mov
mov
xchg
test
jecxz
adc
out
mov
in
ljmp
xchg
jb
jb
jl
les
and
or
sub
loope
rcll
jno
std
xchg
das
mov
mov
pop
aam
inc
lds
pop
add
sub
sbb
adc
mov
movsb
mov
shl
xchg
cmp
jp
pop
and
jno
in
inc
std
or
xor
inc
and
push
sub
mov
sub
imul
xchg
and
movsl
pop
fcompl
jno
and
sbb
cmp
and
mov
xor
dec
push
cmp
nop
pop
mov
lret
pop
test
rcl
ss
lds
xor
cmpsb
sbb
xor
pop
push
sub
fnsave
jecxz
adc
in
test
cmp
rclb
jecxz
xchg
cli
adc
dec
ss
nop
in
xlat
jge
xchg
inc
ss
push
cmp
insl
sti
add
es
testb
test
sub
addr16
out
cmp
pop
or
cmp
add
addr16
push
pop
test
and
stc
insb
je
sbb
movsb
mov
and
out
push
sub
hlt
ficoml
loop
sub
js
pop
or
inc
aad
cmp
xchg
adc
aaa
sbb
pusha
and
subb
orb
test
add
popf
imul
push
adc
adc
jo
xor
and
dec
jg
lods
sub
rcrl
push
push
push
pop
fldl
ficoms
and
cltd
xor
dec
xor
adc
jbe
lret
add
rorl
scas
cld
sub
sbb
add
pop
ljmp
int3
bound
jnp
or
jbe
jo
stos
cvttps2pi
ljmp
adc
mov
cmc
mov
mov
push
and
out
pop
mov
pop
jb
mov
push
push
dec
xor
in
mov
dec
addr16
adcl
or
jae
cmpl
subl
mov
lcall
jns
sbb
push
push
jecxz
mov
das
daa
fldt
sbb
push
scas
icebp
sub
out
lea
out
sbb
cs
mov
add
inc
or
rclb
inc
ja
fidivrs
shrb
stos
mov
ljmp
mov
out
xlat
mov
adc
cmp
cli
incl
test
jb
mov
add
dec
scas
mov
cmp
das
nop
mov
sbb
ds
xor
xorl
adcb
xorl
imul
ret
add
mov
and
leave
stc
add
push
sbbl
jge
add
xlat
jmp
xor
ret
jg
ret
fmul
xor
fwait
add
jp
xchg
insb
adc
push
inc
pop
jns
imul
jno
out
mov
fldenv
dec
mov
in
icebp
pop
jnp
and
xor
mov
sub
mov
xor
ret
adc
xor
push
mov
push
roll
lock
xor
dec
loope
mov
int3
sbb
push
push
stos
fisttpl
outsb
ja
mov
lret
jle
inc
jae
pop
jbe
rorb
sbb
xchg
idivl
sbb
filds
dec
aas
ret
lret
ss
fidivs
addb
cld
mov
push
push
cltd
loop
xchg
rorl
pop
lock
inc
js
into
adc
in
jnp
xor
les
lahf
int
adc
and
jno
add
xchg
popaw
fcoms
stc
mov
lock
int
sbb
xor
or
jle
cmp
sub
scas
stos
les
pop
xor
sub
sub
out
and
pushf
mov
shll
cmp
and
repz
dec
adc
adc
add
andl
cwtl
dec
mov
xchg
stc
sahf
xchg
mov
adc
push
iret
into
sub
xchg
imul
xor
fadd
mov
inc
je
jnp
mov
movsb
xchg
and
jecxz
and
ret
orl
mov
xor
inc
or
out
jbe
jae
sbb
sbb
mov
mov
fnstenv
cmc
push
cwtl
xor
fstpt
mov
push
aaa
inc
push
add
mov
push
aad
and
xor
inc
sbb
jns
std
jl
jnp
mov
fists
xchg
insb
pop
nop
pop
mov
out
popf
bound
jbe
sub
dec
arpl
push
mov
test
mov
ret
repnz
pop
jns
fsubl
outsl
popa
xchg
adc
ja
lds
dec
sbb
dec
inc
xchg
decl
mov
lret
cmp
xor
mov
in
arpl
stc
call
inc
dec
stos
xor
in
mov
cmp
push
sarb
sbb
inc
xchg
fwait
test
add
test
push
push
sub
popf
sub
mov
pop
push
jo
add
stc
inc
fidivrl
mov
sub
or
sbb
retw
ds
sbb
xor
pop
out
push
cmc
sahf
mov
cmp
fisubrl
cs
dec
jp
mov
push
jl
pop
in
repnz
lret
test
icebp
cld
push
jl
lahf
cmp
popl
rol
xor
div
das
aam
rclb
loopne
arpl
mov
pop
xchg
fsubp
add
xchg
mov
lret
scas
js
bound
jl
iret
xchg
xchg
xchg
and
leave
popl
inc
ja
inc
cmp
ja
jg
gs
aas
lods
mov
movb
pop
xor
fisubrs
xchg
push
out
push
dec
xchg
pop
push
sbb
je
add
jmp
imul
inc
and
fmulp
mov
xchg
mov
cmp
loope
mov
imul
add
addr16
pop
dec
clc
negb
cltd
cmp
cli
ja
std
push
mov
insl
mov
test
sub
out
clc
or
add
mov
push
dec
dec
push
cmp
cmc
iret
dec
ficoml
dec
je
sbb
cs
mov
lea
add
shll
xor
dec
in
inc
ret
push
inc
call
cltd
inc
xor
fnstsw
inc
das
dec
inc
sbb
jbe
mov
adc
adc
rcl
insl
int
popf
fs
bound
or
mov
or
mov
mov
pop
imul
xorl
cli
xor
lahf
sbb
fisttpll
mov
negl
add
aam
mov
jle
and
cld
ljmp
pop
mov
mov
lahf
pop
mov
jp
pop
xor
nop
psrad
or
and
pop
and
sub
int
push
lea
jno
in
incb
scas
fdivrs
cmp
push
aas
call
xor
insl
ss
xor
je
sbb
jmp
mov
xchg
sbb
aaa
test
jge
jae
add
xor
lret
addl
mov
mull
add
inc
das
jb
std
rol
pop
sub
out
adc
ds
dec
pop
mov
mov
adc
xlat
lret
sub
loop
hlt
cmpsl
cmc
mov
mov
dec
dec
and
sub
mov
imul
arpl
jle
adc
adc
and
xchg
mov
push
dec
and
and
addr16
fisttps
popa
push
out
dec
or
and
mov
gs
repz
xor
push
jb
test
scas
xlat
mov
jp
inc
cli
negb
fsubrp
pusha
inc
lret
stos
mov
or
fwait
add
pushf
sub
outsb
xor
push
and
or
pop
and
rorl
clc
sbb
push
mov
or
imul
mov
push
pop
in
loope
andl
and
sub
pop
xchg
mov
dec
ljmp
sbb
push
aam
js
aad
pop
sbb
in
cmp
mov
insb
jne
out
loopne
data16
sbb
aam
icebp
sbb
insb
adc
or
lods
je
and
lds
cmp
pop
iret
inc
fistpl
aas
lahf
enter
xchg
icebp
out
push
sbb
bound
adc
scas
mov
inc
iret
pop
aam
pop
xchg
call
out
loopne
add
test
adc
into
jg
sahf
mov
and
push
and
in
aas
pop
jg
xor
rorl
sbb
outsl
loop
lcall
cmp
sbb
movsb
jle
cld
mov
clc
push
movsb
mov
mov
xchg
data16
add
xchg
inc
jl
mov
mov
lcall
xor
out
es
arpl
pop
inc
repz
std
push
push
fdivl
sub
add
data16
ja
fisubrl
xor
in
push
fiaddl
cmpsl
mov
dec
push
pop
mov
inc
hlt
mov
std
lods
outsb
mov
xchg
xchg
inc
scas
xchg
insl
ret
lods
pop
popl
mov
push
sub
fstl
jb
cwtl
or
pop
xor
call
mov
ss
shl
jno
das
pop
pop
rcr
filds
push
adc
in
xor
cmpsb
or
mov
movb
fidivrs
pop
mov
mov
mov
mov
xchg
add
out
xchg
addl
and
test
imul
lret
je
xor
fisttpll
jne
lea
loopne
fs
aad
sahf
sub
cmpsb
push
and
js
cmp
hlt
lods
mov
sarb
fs
data16
test
nop
mov
insb
xor
incl
push
cmp
cmp
in
push
and
add
movsl
lods
inc
mov
or
lret
or
sub
divb
test
mov
mov
leave
outsb
mov
jno
sahf
mov
lret
cmp
das
push
test
scas
adc
mov
out
xchg
inc
icebp
add
xor
adc
push
add
inc
ljmp
arpl
fldcw
xchg
cltd
inc
cld
and
or
dec
sub
loope
in
inc
out
mov
out
xchg
lds
inc
jnp
jp
xorps
iret
iret
pop
ja
dec
movsb
in
ljmp
or
lds
stc
mov
push
mov
mov
lcall
cli
inc
and
aas
popf
inc
and
stc
add
ret
cmp
imul
sbb
dec
mov
mov
xor
mov
ja
pop
bound
hlt
js
cmc
push
out
cld
mov
mov
mov
rcl
jmp
xchg
shll
jle
xchg
push
mov
adc
add
jge
push
adc
cmp
mov
sbb
mov
jbe
daa
imulb
sbb
outsb
or
jno
dec
into
je
xchg
adc
movsb
inc
inc
es
hlt
xor
mov
or
sub
xor
jne
aam
xchg
mov
cmp
das
and
lahf
fnstcw
mov
mov
sbb
adc
pop
mov
push
arpl
dec
cmp
stos
mov
lret
pop
pop
stos
aam
inc
adc
loopne
adcl
mov
xor
cltd
or
jbe
pop
arpl
mov
or
pop
test
adc
gs
sbb
adc
xchg
push
ljmp
sbbb
icebp
sub
adc
sbb
sub
mov
lea
jno
pop
movsb
pop
test
jo
inc
xchg
adc
and
pop
pop
test
push
xor
ljmp
hlt
out
clc
cmp
add
stos
mov
mov
push
test
jne
push
hlt
movsb
push
lock
repnz
cmp
sarl
cmc
jl
mov
cli
insb
scas
mov
loop
pop
pusha
out
or
dec
pop
mov
loope
out
fwait
add
test
push
es
jno
xchg
or
xchg
sub
rcl
mov
sahf
push
es
sbb
and
les
adc
xor
adc
adc
sub
loop
popa
xlat
adc
insb
cmp
enter
call
daa
hlt
push
rcll
cmp
lret
ja
lods
cwtl
int
cmp
loopne
jnp
and
mov
jb
xor
adc
pop
leave
sub
ljmp
cmpsl
xlat
add
pop
ja
insb
jns
movsb
jecxz
les
pushf
leave
loop
xchg
adc
lock
cmp
jo
mov
cmp
cmp
inc
dec
jnp
ret
imul
or
insb
lds
cli
ds
jl
test
xchg
pop
pusha
das
aaa
push
jmp
in
lods
jnp
pop
pop
outsl
push
dec
mov
pop
divl
insl
adcb
mov
aad
shr
xlat
test
xchg
push
dec
aas
mov
inc
sbb
ljmp
test
jns
into
clc
sbb
inc
dec
js
pop
and
popa
fistpl
inc
inc
pop
jp
or
pop
and
sbb
test
adc
mov
add
jle
push
fstps
xor
iret
xlat
dec
xor
out
daa
jne
mull
xchg
cmp
sbb
addr16
ljmp
in
lods
scas
jmp
jp
sub
gs
pop
xchg
lods
int3
nop
cmp
cmpsl
outsb
jmp
push
add
adc
lret
std
lock
mov
or
stos
std
pop
sbb
in
jp
sbb
mov
imul
movsb
jns
sub
sub
and
int
sub
in
cld
dec
xor
fstpl
outsl
sbb
lock
imulb
cmp
scas
pop
fistl
scas
aaa
out
mov
adc
scas
call
test
adc
std
imulb
inc
mov
pop
repnz
mov
lea
pop
inc
push
sub
jg
lea
std
pop
aam
lahf
push
sahf
test
jo
call
mov
cltd
adc
xchg
fcompl
aaa
ds
cltd
lret
loope
push
mov
dec
xchg
les
ficoml
xchg
mov
cmp
stc
inc
jb
push
test
jg
lock
iret
orl
dec
out
mov
xchg
subb
fstpl
stos
jmp
jmp
xchg
inc
leave
loop
repz
push
in
icebp
jmpw
adc
cltd
scas
cmp
xchg
fdiv
inc
or
lret
aas
inc
out
cwtl
mov
popa
or
loope
rcrl
loopne
rcrl
pop
inc
jge
sbb
jle
js
pop
pop
adc
enter
fldl
fdivl
nop
mov
ja
lea
outsb
pop
repz
mov
adc
push
insl
subl
xor
push
xlat
int
and
icebp
dec
aad
sub
repnz
loope
in
test
sbb
ss
sbb
jae
scas
ljmp
fsubrl
pop
push
ja
sahf
test
mov
cmp
or
mov
imul
loope
test
add
ds
sub
xchg
mov
adc
adc
and
pop
ret
mov
jge
mov
mov
sub
inc
das
and
iret
fdivrl
mov
pop
xor
mov
sbb
into
cmpsl
lods
jb
addb
fisttps
pop
cmc
dec
jg
or
xor
mov
or
rcrb
jne
fwait
sti
lahf
aam
js
lock
jnp
xchg
adc
addr16
js
data16
pushf
in
sar
icebp
cmp
sbb
jecxz
mov
jns
push
adc
cmpsb
bound
enter
in
scas
popa
lahf
cmp
or
push
xlat
cmp
negb
addr16
pop
cmc
xchg
inc
roll
in
adc
sahf
sub
add
imul
mov
xchg
sti
pmaddwd
cmpb
jmp
xchg
cmp
xor
popf
in
pop
repnz
xchg
test
imul
mov
cmp
mov
pop
mov
mov
inc
pushf
loop
arpl
movsl
pop
cmp
sti
fcoml
dec
pcmpgtw
imul
mov
adcb
lahf
adc
loope
cld
cmpsl
push
xor
mov
fs
dec
pop
mov
shlb
sti
or
in
in
push
mov
movsb
ffree
mov
aaa
inc
mov
pushf
jae
xor
mov
popf
data16
or
call
call
inc
incb
mov
xlat
pop
dec
xor
in
cmc
enter
stos
sub
pop
dec
mov
dec
push
mov
sbb
daa
loop
pop
daa
ljmp
pop
mov
mov
jp
sbb
test
cltd
xor
dec
dec
inc
inc
orl
mov
movsl
xor
in
jae
inc
scas
jp
loop
or
cmp
loop
movsb
rcr
and
dec
addr16
push
repz
mov
les
clc
iret
sbb
xchg
push
int
mov
scas
dec
pusha
aam
inc
mov
sub
sbbl
enter
jmp
push
mov
jnp
lock
xchg
insl
lcall
cmp
ffreep
adc
cmpsl
nop
test
aad
mov
imul
jno
push
xor
aad
mov
inc
lods
push
add
jbe
cs
in
pop
inc
fiadds
inc
jmp
push
mov
fidivrl
inc
daa
cli
cmpsl
xor
mov
imul
adc
cmpsl
cmp
in
xchg
in
gs
in
inc
or
sarl
js
jae
or
cmp
es
pop
add
ret
push
scas
les
mov
mov
test
cmc
scas
scas
gs
push
adc
mov
add
sub
repnz
adc
shll
faddp
mov
das
mov
push
arpl
sar
cmpsb
imul
sti
jmp
sub
dec
jae
js
or
pop
mov
test
and
adc
jg
cmp
or
aaa
push
push
outsl
mov
mov
push
jbe
mov
add
call
cmp
xor
mov
push
aad
cld
push
sarb
fcmovne
data16
aad
mov
ret
pop
rorb
pop
fcompl
aad
mov
int3
cs
fisubrl
das
aaa
in
mov
sub
pop
sub
popa
jg
dec
enter
push
mov
sbb
push
jmp
call
pushf
mov
lock
sbb
sub
lods
das
outsl
fistl
and
dec
adc
testl
mov
mov
mov
sbb
jl
js
dec
inc
xchg
aas
mov
or
call
outsl
mov
xchg
pop
push
cs
icebp
cmp
out
mov
sbb
adc
sbb
xchg
and
and
pop
cmp
movl
push
cmpsb
or
loop
shlb
cmp
es
xlat
out
jecxz
mov
aam
in
lea
outsb
mov
mov
mull
test
sub
mov
out
sbb
lahf
lcall
sub
fnstenv
out
push
arpl
in
outsl
stos
clc
pop
xor
adc
or
movsl
and
mov
sub
lret
mov
mov
fadd
inc
xor
or
mov
mov
shll
into
out
and
iret
stos
fs
inc
adc
mov
jmp
mov
iret
lds
inc
fmuls
movsb
rorl
xorl
lods
ffree
add
bsr
rcl
cmp
and
xchg
jbe
rcrl
jne
xchg
dec
xchg
aam
mov
and
adc
push
js
push
jns
pushf
mov
repnz
mov
mov
fs
mov
jns
ret
lret
insb
mov
idiv
imul
lea
negl
clc
shlb
lcallw
adc
mov
cmc
stos
rcll
pusha
cmp
out
or
xchg
push
pop
and
into
mov
sbb
xchg
xchg
stos
xchg
test
in
push
out
xchg
mov
pop
push
sahf
rclb
jnp
filds
in
pop
push
or
xor
mov
lret
out
jo
fsubr
std
cwtl
aaa
add
lret
add
fimuls
mov
lock
testl
jmp
mov
popa
lret
push
jnp
scas
je
ficomps
mov
addl
incl
push
aam
pop
jmp
jb
xorb
cmp
lds
xchg
insl
push
sbb
xor
push
cmp
add
adc
add
jmp
xchg
mov
inc
push
pop
rcl
jne
dec
insb
jle
sub
arpl
repz
dec
add
shrb
jmp
dec
outsb
cmc
sbb
fstps
fisttpl
loope
les
lea
mov
add
jl
pop
add
shlb
push
es
faddl
inc
or
mov
aam
test
dec
xchg
and
cmp
mov
negl
loopne
setno
pop
and
rolb
sbb
jbe
pop
mov
xchg
call
pushf
daa
int3
push
sbb
ljmp
pop
fsubs
testl
cltd
mov
cmp
sub
test
mov
mov
inc
sbb
mov
outsl
test
in
lret
add
or
int3
jne
lea
int
pop
or
jbe
xchg
push
xor
movsb
sbbl
jmp
dec
push
mov
movsb
dec
pop
sub
pop
loop
mov
mov
inc
cmpsb
hlt
pop
sub
loopne
cmp
out
cltd
sub
xchg
adc
cmp
frstor
mov
out
sbb
push
dec
adc
out
cmpsb
lret
data16
jge
jae
adc
sbb
lock
dec
and
xchg
push
or
mov
pop
loopne
or
push
in
add
ficompl
push
cmp
xor
xor
dec
shl
adc
ss
dec
inc
ja
retw
adc
adc
in
dec
push
inc
pop
decl
pusha
sub
insb
jg
leave
xchg
cmp
fidivrs
sbbl
into
jno
sub
and
push
icebp
int3
cmpsb
hlt
sbb
sahf
repnz
xchg
jne
sbb
ret
adc
mov
in
adc
cmp
mov
loope
sbb
in
shrl
sbb
cltd
ja
cwtl
cmpsl
flds
mov
stc
fdivl
dec
rcrl
outsb
mov
add
lock
mov
xchg
fwait
ds
sbb
clc
and
movsl
push
or
mul
lret
imull
cmp
jg
or
cltd
inc
ja
cltd
pusha
popa
js
push
hlt
xor
mov
push
push
sbb
stos
cld
sbb
loope
xor
xor
sub
mov
mov
rolb
fisubrl
les
call
inc
mov
mov
push
ret
or
mov
inc
cmp
mov
jns
jge
pop
popa
ret
into
in
ret
scas
and
pop
inc
rclb
cmc
jmp
enter
push
push
adc
mov
stc
and
jecxz
call
popa
mov
insl
mov
cld
push
xor
stos
add
shll
push
push
mov
nop
subb
inc
adc
inc
fs
mov
fadds
mov
pop
call
xchg
outsb
jns
repz
pop
mov
mov
testb
inc
popa
loopne
jne
pop
inc
dec
pop
mov
lahf
jge
cmp
mov
cmpsb
inc
iret
ror
cmpsb
sbb
jg
je
sti
adc
or
push
jp
mov
push
sub
lcall
leave
adc
or
fnstenv
mov
out
aam
lods
cli
xchg
inc
push
xor
mov
in
loop
ret
xchg
out
mov
xchg
or
das
popa
out
push
mov
cmp
loop
addr16
outsl
or
adc
das
popa
cmpsl
call
push
or
movsb
in
ret
adc
mov
aam
mov
xchg
rcr
push
ret
mov
adc
outsb
fcomps
xchg
mov
xor
jns
mov
fdivp
stc
sbb
mov
sbb
sub
stc
mov
test
jle
mov
cmp
add
push
into
sbb
sbb
mov
jmp
shl
jge
repnz
pusha
jne
cmp
pop
mov
notb
jle
decb
and
outsb
fdivs
shld
xchg
xchg
dec
add
out
in
mov
jbe
cmpsb
push
sti
mov
sub
lcall
repz
sbb
sbb
pop
or
mov
push
inc
testb
popl
pusha
xchg
movsl
jg
dec
jb
shl
xor
fimuls
push
scas
dec
jbe
push
pop
hlt
or
push
and
sbb
push
pushf
imul
pop
out
clc
nop
jge
inc
mov
std
dec
lock
ficoms
sbb
mov
nop
loope
shlb
test
adc
xor
push
lods
sbb
mov
pushl
mov
jecxz
stc
cs
lds
es
idivl
mov
inc
aam
aaa
sub
es
cmp
lds
pop
sbb
jle
lcall
inc
push
mov
push
adc
jecxz
pusha
pop
ficompl
fwait
sub
push
xchg
pop
mov
mov
addr16
mov
push
fcomps
sub
das
inc
mov
inc
push
lods
dec
loope
push
rcrb
enter
dec
imul
lcall
loop
pop
pop
scas
xchg
sub
lahf
jle
mov
pop
fldcw
fsubrp
lcall
add
je
add
jecxz
cld
imulb
and
sbb
xor
sbb
xchg
ss
mov
mov
add
mov
adc
pop
inc
in
shll
pop
adcl
jge
test
jg
inc
test
cmc
ja
jge
jns
adc
les
sbb
inc
cli
lret
jecxz
push
jl
insl
sbb
scas
sub
scas
push
pop
in
mov
mov
test
sti
and
fidivrs
out
hlt
pop
addr16
mov
sbb
addr16
in
cmp
jge
ja
sbb
push
lret
pop
es
mov
sahf
adc
and
lods
push
scas
shlb
xchg
push
out
xchg
jno
add
pop
inc
fwait
ljmp
repz
xchg
jno
mov
divl
adc
and
into
jle
xchg
sub
jle
cmp
cwtl
pop
dec
ja
mov
test
add
sarb
push
cmpsl
xor
xchg
or
mov
jns
scas
addl
sub
loopne
dec
sbb
xchg
clc
push
cmp
pxor
mov
mov
je
call
pop
xchg
fdivl
pop
mov
shr
dec
jb
fwait
repz
dec
mov
and
xchg
xor
xchg
fwait
cmc
pop
xor
xor
out
or
fidivs
add
flds
in
sbb
dec
dec
pop
loop
push
mov
lds
add
hlt
dec
ss
pop
rcrb
into
pusha
enter
stos
popf
movb
dec
dec
xchg
mov
pop
pop
ror
cs
lret
sub
jae
or
pusha
repz
movsl
mov
pop
sub
pop
sbb
test
xlat
cwtl
mov
lods
sbb
mov
add
lods
or
pop
push
aad
lret
pop
movsb
push
pop
add
inc
clc
les
xor
jl
sbb
fdivs
mov
cmp
enter
sub
dec
jbe
xor
pop
mov
test
call
ror
and
and
icebp
sbb
fsubl
jmp
jmp
arpl
push
out
and
or
inc
pop
sahf
arpl
stc
daa
sub
jle
cltd
clc
mov
lea
ret
mov
adc
and
das
jns
xchg
push
sub
test
jmp
lods
push
fsts
psllq
rorb
imul
inc
fs
dec
bnd
push
sti
lock
aaa
aam
popa
inc
pusha
push
pop
in
lods
inc
push
mov
cs
sbb
hlt
mov
dec
push
mov
dec
pop
push
pop
push
jp
xchg
test
xchg
inc
je
outsb
dec
add
mov
and
dec
push
andl
fiaddl
std
dec
mov
jl
adc
cmp
push
enter
and
xchg
push
inc
in
shll
inc
mov
nop
mov
insl
xor
test
dec
sbb
test
lds
adc
lods
out
jp
subb
cmp
pop
fsts
adc
add
adc
test
fdivrs
add
jae
add
cmpsb
mov
addb
inc
push
jns
lea
adc
clc
add
daa
insb
in
jp
into
xorb
test
sbb
inc
in
rcrl
sub
jne
pusha
sub
dec
mov
imul
cmp
adc
pop
xchg
cmc
xor
mov
xchg
mov
dec
inc
es
mov
mov
xor
pop
imul
add
push
lea
and
sbb
cmpsl
sub
dec
sub
and
aaa
add
fsubp
into
jo
je
jb
arpl
mov
jp
and
xor
pushf
aas
lret
arpl
lods
sub
mov
xchg
mov
jo
pslld
std
or
sub
adc
cmp
dec
jno
rorl
mov
mov
xor
mov
int3
mov
icebp
add
push
mov
pop
test
lret
fiaddl
jge
leave
or
cmp
or
mov
dec
dec
mov
div
mov
mov
pusha
xchg
stc
stos
clc
cmp
xor
aad
dec
push
adc
in
sbb
cmc
adc
add
leave
fwait
imul
rclb
cld
pop
filds
fcomps
xchg
jmp
loop
jno
scas
dec
sbb
imul
push
mov
and
add
sub
cmp
bswap
xor
mov
push
iret
mov
push
cmpsb
dec
jmp
cmp
test
xor
or
loope
bnd
and
and
outsb
pop
or
and
mov
scas
adc
mov
lahf
scas
mov
push
call
jp
ror
jl
ljmp
lcall
std
clc
nop
mov
xchg
xor
cmc
into
push
mov
divb
push
mov
dec
arpl
add
xor
in
les
insb
test
das
lods
insb
je
dec
outsb
sbb
bound
and
adc
or
lcall
and
push
sub
cmp
xchg
sbb
je
add
cmp
addb
das
hlt
roll
cmpsl
xor
xchg
test
fbstp
cmp
sub
and
add
inc
test
jl
xchg
movsb
gs
or
movl
fdivl
adc
and
mov
iret
je
push
cmpsb
outsl
sahf
lock
lods
mov
in
add
leave
lahf
pop
cmpb
bsf
shll
lds
mov
cltd
and
xchg
push
popf
inc
sub
adc
sbb
jle
aas
lea
out
or
mov
adc
movsb
jbe
mov
add
movsb
idiv
xor
mov
dec
push
adc
push
js
mov
lahf
das
fsubrl
std
push
inc
push
out
mov
add
idivl
jno
sti
in
into
pop
push
lods
cwtl
mov
imul
aad
cmc
adc
iret
ljmp
lods
inc
sbb
adc
jno
mov
push
test
shll
scas
sahf
out
int
pop
rolb
andl
in
cli
or
xchg
clc
jne
mov
push
outsl
inc
push
cmpb
sub
repz
inc
sub
push
mov
out
mov
mul
inc
mov
rcl
add
mov
scas
jo
sahf
lcall
movsl
xor
call
mov
in
adc
subl
out
cmp
jo
fbstp
ss
stos
xchg
pop
sti
sub
pop
or
sub
and
imulb
mov
scas
cltd
repz
insb
xor
sub
popa
adc
sbb
addr16
lock
add
lods
out
ljmp
ret
fldcw
push
inc
inc
dec
mov
shrl
sahf
hlt
shl
xor
pop
xor
test
dec
bound
stos
stos
in
shrl
bnd
lock
dec
cmp
sbb
out
jnp
aad
or
push
shlb
mov
cmp
xor
sarl
ud1
xchg
rcrb
sbb
mov
ds
lds
push
scas
jo
insl
add
cmp
insl
aaa
sbb
movsl
sbb
and
inc
popf
in
add
xor
add
clc
std
stc
mov
and
jle
sbb
jecxz
pop
add
cmc
fs
pop
je
pop
jg
call
fucom
adc
inc
fdivp
daa
add
add
cmp
andb
mov
in
xchg
in
or
pop
mov
sbb
push
inc
xor
mov
xor
shrl
xchg
push
rorb
test
lock
aam
push
jecxz
addb
cmp
ljmp
out
fbld
repnz
pushf
xlat
out
pop
mov
sar
lcall
mov
in
pop
xor
mov
or
mov
xchg
stos
scas
dec
jp
inc
or
inc
lcall
push
inc
sbb
xor
mov
stos
test
and
mov
lock
push
xchg
mov
pop
and
and
iret
adc
in
add
jb
hlt
imul
movsl
fnstsw
fisttpl
mov
lods
mov
cmp
push
subb
sub
popa
push
movsl
push
mov
shlb
push
loopne
mov
je
or
mov
sarl
ds
jecxz
xor
jmp
push
cmp
insb
aaa
jmp
pop
cmpsl
push
jnp
and
xchg
pminsw
pop
push
mov
adc
repz
frstor
push
cmp
sbb
lahf
push
push
aad
daa
pop
outsb
xor
in
inc
mov
ljmp
popf
pop
nop
je
fs
out
ret
cmp
pop
mov
mov
bound
out
out
in
addr16
mov
in
push
fs
xlat
dec
sub
inc
cltd
pop
bound
ja
fidivrs
pop
insl
or
lock
mov
or
sub
ret
adc
out
addr16
shrl
adc
mov
nop
jne
sahf
mov
adc
jge
fs
and
bound
cli
leave
lods
sbb
pop
pushf
mov
adc
inc
stos
pop
ljmp
in
call
push
or
xor
addr16
cmpb
xchg
pop
jmp
in
in
aam
mov
daa
cltd
repz
cli
int3
call
leave
repz
push
fidivl
push
hlt
stc
mov
jg
jo
mov
pop
in
mov
mov
jle
dec
pop
mov
jbe
repz
stos
add
daa
push
lock
das
repnz
mov
out
movsb
in
jb
dec
lea
fyl2xp1
lcall
shll
es
dec
adc
fsubl
mov
xchg
add
jge
jp
mov
stc
inc
sub
cli
cmp
insb
inc
xchg
jb
xlat
stos
cmp
iret
scas
subl
mov
and
andb
scas
sbb
inc
pusha
aas
dec
pop
push
rcll
xchg
push
cltd
sbb
lock
lods
dec
andl
add
mov
mov
decb
test
cmp
push
inc
sbb
cmp
aaa
stos
mov
cmp
pop
jp
imul
pushf
adc
and
jp
sbb
into
xchg
mov
push
fdivl
mov
xchg
aad
jp
jo
das
jne
fidivl
sub
int
push
js
andw
xlat
mov
mov
lcall
fidivrl
dec
cmpsb
aad
mov
call
push
mov
popa
cmp
sub
hlt
out
lret
loope
nop
add
aam
xorl
addr16
popf
adc
sbb
fucomip
cmp
daa
fstl
cmpsl
pop
inc
mov
jbe
int3
stc
insb
mov
cmpsb
mov
lcall
arpl
loope
pop
lahf
lock
xor
and
fidivrl
inc
negb
sti
mov
lods
xchg
inc
in
add
jmp
pop
ss
dec
inc
pop
lods
mov
add
fcomps
or
sti
mov
in
std
mov
test
insb
out
adc
bound
popf
mov
and
adc
test
in
jo
jecxz
mov
out
mov
shlb
push
xor
pusha
pop
adc
stc
and
xchg
lods
cmpsl
push
add
mov
mov
popa
jb
mov
repz
loop
scas
pop
xchg
jb
or
fwait
sti
push
jmp
aas
aam
mov
and
xchg
xchg
leave
sbb
dec
inc
push
cmp
fisttpll
sbb
mov
jp
js
rol
mov
push
das
cmp
in
bound
out
ja
jnp
int3
cmp
adc
insb
std
mov
push
es
pop
stos
lret
orl
mov
cltd
push
js
fwait
push
in
test
das
lret
stos
push
push
cmpxchg
jge
bound
jmpw
rcll
mov
loopne
aaa
imul
cmpsb
ljmp
fs
and
sub
push
hlt
push
movsb
call
call
pusha
adc
pop
das
pop
dec
loope
sbb
hlt
pop
data16
movsl
adc
sub
std
fsts
mov
pop
lahf
xchg
inc
or
adc
xchg
or
and
mov
imul
cld
sti
xchg
nop
jne
insl
loop
mul
jle
push
fldcw
test
and
xor
xor
imul
push
cmp
jb
repz
sub
test
xchg
pusha
inc
jno
movsl
pop
adcl
fistps
ljmp
addl
mov
or
jno
hlt
sub
les
adc
jne
or
sbb
sahf
xor
sub
aas
loope
sbb
xlat
add
dec
cvtps2pd
jecxz
xchg
xor
stos
pop
add
pop
push
sahf
sbb
bound
cmovbe
xchg
inc
cmp
rcl
cli
mov
mov
mov
pop
lahf
gs
add
add
pushl
sbb
mov
push
mov
pop
scas
adc
outsl
aam
mov
mov
inc
adc
add
pop
mov
bound
fbstp
cli
push
stos
cmp
stos
xchg
out
loop
test
jmp
xlat
das
or
int
sub
push
xor
dec
mov
add
lcall
mov
cmpsb
push
xchg
stos
mov
pop
adc
in
enter
jne
insl
inc
push
mov
iret
pop
or
lcall
push
jmp
negb
mov
ds
push
faddl
jnp
xor
imul
push
lcall
jp
sub
push
and
call
jp
adc
pusha
scas
scas
daa
add
test
sub
jp
dec
or
push
jg
int
push
popf
hlt
ja
popa
in
jns
mov
inc
ret
mov
sbb
mov
cmpsl
mov
fstpl
lcall
lods
pop
scas
pop
push
or
sub
mov
fwait
push
mov
subl
cwtl
push
push
mov
and
dec
arpl
lods
sar
testb
aad
or
inc
aas
lret
arpl
push
lret
xchg
sub
cld
push
ds
mov
flds
movl
cs
push
dec
sbb
add
aad
xchg
mov
xlat
pop
sub
mov
adc
xchg
test
pop
iret
pop
das
xchg
sbb
out
mov
in
jl
xor
cld
dec
sbb
or
out
xchg
xchg
sbb
cmp
mov
xor
lret
adc
push
push
push
jmp
stos
xchg
xchg
jmp
insl
adc
pushf
aam
sub
mov
jl
sub
test
push
add
gs
jge
out
stos
dec
jbe
imul
xchg
jecxz
adc
in
mov
fisubl
add
xlat
mov
and
pop
arpl
outsb
cmp
and
sbb
dec
hlt
hlt
out
xor
and
cwtl
cld
jne
enter
jno
add
lea
xchg
mov
repz
imul
adc
insb
pop
dec
leave
push
jne
sub
mov
loope
shlb
mov
add
cmpsl
divb
xor
sbb
lods
push
mov
xor
daa
fisttpl
mov
add
shr
sti
lods
or
sahf
xor
cli
dec
xchg
mov
enter
lret
jnp
in
in
int
add
or
test
add
cmpsb
cmp
gs
movsl
cmpsl
mov
jbe
addb
rolb
mov
gs
inc
cmp
pop
cwtl
xor
mov
int3
mov
jge
lcall
jge
push
fstpl
mov
mov
fidivrs
std
loop
int
data16
and
inc
dec
data16
or
pushf
cs
jl
lret
mov
mov
dec
mov
pop
mov
jnp
nop
add
inc
loop
out
cmp
jb
movsb
divb
addr16
xchg
sub
ficoms
nop
faddl
rorb
out
adc
ljmp
scas
mov
sub
test
mov
jg
inc
and
jp
sbb
sub
aaa
jmp
mov
jnp
cmp
les
mov
dec
mov
das
push
das
pop
mov
cmpsl
xchg
add
mov
cmp
jge
sahf
fistps
inc
mov
js
sub
enter
push
cmp
js
xor
arpl
mov
mov
xchg
jo
push
clc
xor
pushf
les
add
mov
lea
sbb
call
adc
pusha
imul
mov
dec
lods
sbb
aad
mov
insl
mov
movsl
cmp
adc
in
leave
inc
jg
xchg
mov
stos
xor
or
mov
or
test
cmp
sbb
or
sti
nop
xchg
xchg
mov
cmc
add
shll
adc
jle
int3
shlb
xchg
inc
add
mov
sbb
cli
ds
shl
mov
out
incl
pop
inc
xor
adcl
inc
mov
pusha
cmp
imul
mov
aad
inc
or
adc
inc
adc
jnp
jl
out
mov
out
cli
adc
add
push
adc
jge
int
js
push
xchg
test
adc
mov
das
sub
add
stos
cmc
xor
out
adc
mov
cltd
mov
jge
in
cli
iret
loope
jp
pop
cli
sbb
and
dec
cmp
sbb
negl
mov
jge
ljmp
out
pop
add
lock
sti
xor
jmp
sbb
loopne
add
insb
cmc
enter
sarl
js
add
mov
mov
inc
xchg
jo
shrb
pop
cmp
or
fcomps
mov
xor
mov
repnz
pop
fwait
push
xor
or
notl
movsl
leave
cmp
fs
dec
adc
movsl
scas
cli
sbb
pop
test
sub
add
pop
arpl
int3
add
xor
ret
pop
inc
out
decb
inc
xchg
sub
or
cmpsl
pop
lods
sbb
dec
jp
icebp
add
rolb
insl
mov
xor
lds
add
cmp
and
test
lods
push
fcomi
ds
mov
loope
popa
test
faddl
push
jb
add
mov
je
mov
cmpsl
sub
movsb
movsl
push
js
lret
bound
sar
xor
aaa
mov
jbe
xchg
imulb
add
stos
push
aad
xchg
scas
xlat
push
sbb
outsl
add
clc
cld
js
cmpsb
push
cmp
push
cmc
mov
jmp
sub
cli
into
das
movsl
ds
sbb
mov
adc
dec
data16
inc
imul
add
fildll
mov
sub
xchg
pop
in
cltd
repz
fdivrl
inc
fisubrs
push
pushf
out
hlt
cmp
fcoms
sbb
shr
mov
inc
dec
es
popf
add
out
cld
sbbb
fdivl
or
xchg
sub
rcll
popf
push
subl
jo
mov
dec
into
jge
test
mov
adcl
cmp
add
sub
jge
mov
pop
nop
mov
adc
mov
cmp
fldcw
cmpsb
out
fnstsw
lret
pushf
fmull
testb
fisttpl
inc
in
xchg
sbb
mov
push
pop
cwtl
or
fistl
jo
mov
mov
or
das
lcall
pop
xchg
push
dec
sahf
outsl
pop
cmc
jb
inc
cmp
push
mov
clc
clc
cmc
pushf
cld
ljmp
pop
mov
xchg
sub
push
add
sbb
in
arpl
adc
jnp
repnz
jbe
ret
dec
cmpsl
sub
jge
push
shll
pop
sub
or
xor
sub
push
and
mov
lahf
mov
and
and
das
mov
adc
lea
mov
jmp
inc
jo
mov
xchg
cmpsl
mov
xchg
cmp
cmpsb
and
cmp
dec
mov
xchg
das
inc
push
jae
gs
push
ss
or
daa
dec
inc
pop
popa
jl
cmp
jo
jg
movsb
unpcklps
mov
xchg
xchg
shl
add
in
sub
cmpsb
movsb
pop
ficoms
xor
and
push
mov
xchg
add
gs
and
sub
aad
sub
fwait
cmp
in
mov
sbb
pop
aaa
dec
xor
push
in
mov
push
push
adc
push
fisttps
jo
cs
call
push
outsl
or
dec
adc
movsb
or
jne
pop
pop
pop
xor
xchg
shll
mov
das
addb
js
adc
popf
inc
push
outsl
or
popa
xchg
sahf
jns
int
iret
mov
loop
xchg
push
mov
dec
or
fwait
testl
aas
in
sbb
cltd
ret
scas
jbe
hlt
cs
xlat
mov
push
dec
lods
and
shlb
xchg
jp
xchg
jae
fidivrl
outsb
jecxz
gs
add
leave
rcll
das
lret
ficoml
mov
outsb
mov
xchg
or
sub
loop
sub
xor
jle
xor
push
cmp
jae
dec
dec
sbb
dec
pop
xor
fsubrl
mov
adc
mov
ja
jae
and
rcll
gs
clc
loopne
mov
daa
or
bound
xlat
int3
push
push
or
and
dec
bound
pop
ret
ret
push
or
es
sar
add
pushf
or
ret
or
int
in
jmp
adc
ja
testl
add
push
insl
ss
pop
and
das
adc
cld
lret
test
leave
std
notb
jecxz
jl
neg
int
mov
data16
shll
daa
sub
inc
push
lcall
mov
lahf
popa
cmp
or
add
loope
mov
pop
fstps
gs
call
adc
into
cltd
adc
sub
and
push
pop
sub
or
add
or
sub
aad
or
sbb
jp
dec
ss
mov
movsl
loopne
imul
add
fnstcw
out
je
mov
in
sarl
faddp
or
lds
inc
cld
in
mov
xchg
lea
jge
and
dec
add
jb
mov
and
jg
xchg
jmp
xchg
sub
adc
push
test
or
and
jle
pop
push
fstpl
aas
mov
fwait
psubd
and
and
pop
cmpsl
scas
aam
pop
repz
stos
mov
nop
xchg
jo
int
rcll
lock
fmull
push
scas
cld
or
push
add
stc
shrb
fstpl
push
aaa
push
stc
mov
es
mov
push
aas
bnd
dec
fucomip
ds
cmp
dec
std
lea
shll
and
jmp
fwait
jnp
xlat
xor
fs
fnstsw
xor
sbb
cmp
or
sbb
and
mov
lods
and
fucomip
fstpt
pushf
mov
ljmp
mov
pusha
sbb
adc
add
jo
inc
imul
data16
jge
movsb
mov
cmp
mov
or
xor
add
inc
bound
loopne
je
and
jge
lea
pushf
mov
aam
cmp
jns
hlt
daa
sub
adc
aaa
adc
popf
xor
jne
rclb
sub
imul
test
cmp
flds
xchg
leave
inc
mov
jns
cmp
aam
sbb
stos
dec
sub
mov
add
daa
mov
sbb
in
xchg
adc
testl
xor
adc
lods
popa
inc
jmp
scas
movsb
repz
lock
add
mov
arpl
aam
out
daa
mov
fdiv
cmp
pop
sub
sub
insl
in
sbb
mov
mov
clc
test
cmp
jbe
bound
sbb
call
stc
jmp
jg
mov
mov
pop
sub
xor
jle
xor
fsubp
xorb
inc
adc
ror
mov
repz
mov
add
sub
xor
or
ret
mov
add
repnz
mov
test
inc
inc
js
cmpsl
call
and
cs
sahf
lret
jp
lods
scas
out
out
dec
xchg
rcll
pop
dec
fwait
adc
push
pop
fwait
add
jg
ret
sub
jge
sbbb
aaa
mov
push
cmc
inc
out
cmp
jmp
jmp
or
jo
and
imul
cmp
cwtl
and
insb
cmp
adc
cmp
jbe
in
movsl
adc
sbb
jecxz
arpl
lahf
sub
xor
xor
in
or
add
add
inc
inc
shlb
stos
pop
sbb
cltd
lock
and
xchg
mov
outsb
imul
add
or
pop
mov
add
shll
sbb
jecxz
dec
mov
jns
adc
nop
cli
inc
stos
mov
stc
fcmove
mov
lret
incb
pushl
cli
fisubrs
fdivrs
sbb
cmp
adc
sbb
jno
push
cmpsl
les
imul
or
xchg
lods
dec
cli
push
xchg
lods
xorb
rcrl
dec
out
cmp
sub
popf
and
gs
in
leave
out
arpl
fdiv
paddq
add
push
jl
pop
lea
add
adcl
loopne
call
pop
jmp
frstor
pop
lods
push
mov
jne
mov
cmp
add
pop
add
sbb
dec
les
pop
mov
cs
jo
fcomps
push
dec
movsl
mov
hlt
mov
mov
addl
rclb
jecxz
popl
movsl
sub
adc
ret
or
mov
inc
out
fdiv
into
clc
dec
xchg
das
movsb
mov
xor
adc
popf
or
cmp
leave
sbb
ret
jmp
push
arpl
xor
test
mov
cmp
aas
push
xchg
jl
mov
jge
xorb
add
mov
dec
fldenv
addr16
mov
cmp
mov
cld
cmp
daa
adc
gs
push
or
aam
push
mov
scas
dec
mov
jge
add
mov
pop
les
sbb
jo
sarb
mov
pop
testb
dec
aam
push
movsb
int
xor
xchg
jns
pop
mov
and
stc
jl
pop
xchg
lret
iret
outsl
das
push
es
and
mov
shlb
scas
scas
lcall
adc
adcb
add
stos
dec
push
lods
neg
push
ficomps
insb
sub
aam
clc
dec
iret
clc
mov
dec
out
fbstp
loopne
sti
jmp
stc
inc
jb
pop
mov
or
and
xor
ficomps
push
mov
push
cld
add
out
in
pop
mov
mov
in
rcll
push
std
lcall
push
cmp
fisubl
ss
insb
xchg
into
pop
mov
rolb
inc
in
xor
jmp
jle
push
mov
divl
pushf
jg
and
inc
insl
mov
fdivrl
xchg
sbb
das
cwtl
insb
mov
cltd
fs
adc
or
inc
jmp
cmp
jecxz
and
jg
out
mov
cmp
inc
rolb
and
addl
or
sbb
jns
push
int3
xchg
stos
clc
push
jp
adc
lea
sub
cli
pusha
sub
mov
jnp
outsl
xor
test
test
das
mov
jl
xchg
loopne
mov
push
lock
or
xchg
testl
sbb
call
jmp
out
int3
loop
and
push
leave
das
js
and
add
jbe
divl
aam
pop
fs
stc
mov
dec
orb
out
scas
and
aas
xchg
mov
mov
shlb
repnz
shlb
or
inc
push
cmp
cld
les
test
add
jp
fs
mov
repnz
stos
xchg
push
lret
test
call
scas
in
mov
push
rolb
mov
push
subb
sbb
scas
push
push
divl
shlb
testl
cli
mov
mov
mov
imul
dec
ret
adc
push
in
sub
cmp
das
stc
ja
push
xchg
xchg
mov
ret
pop
fcoml
out
call
fdiv
jmp
and
push
adc
orl
mov
dec
or
cmp
enter
inc
ss
popf
xchg
push
inc
cwtl
lcall
or
mov
roll
imul
shrb
std
sub
sbb
pminub
stc
sarb
jmp
pop
add
sub
dec
inc
bound
xor
mov
loopne
ja
add
in
adc
mov
sarl
sbb
inc
adc
outsb
add
sbb
sub
ror
xchg
pop
adc
lret
fs
push
add
cltd
sub
adcl
inc
sti
push
fildll
aaa
out
leave
cli
pop
outsl
xor
adc
or
xor
in
mov
test
xlat
aaa
fdivp
sahf
popf
es
lret
dec
inc
sub
daa
shll
shld
stos
and
dec
and
and
test
mov
mov
mov
jmp
test
inc
mov
and
lods
loope
inc
mov
add
imul
mov
jg
lods
lahf
jge
mov
xchg
rcl
or
aam
adc
hlt
or
inc
pop
adc
loop
xchg
push
or
cwtl
popa
dec
ud0
cld
rclb
sub
push
mov
inc
sub
or
lret
mov
lock
push
js
mov
clc
and
pop
jmp
mov
push
and
inc
xor
cmc
sti
dec
inc
stos
shl
sbb
jbe
add
dec
mov
iret
sub
jl
cmc
das
ret
mov
pop
aaa
add
mov
inc
push
dec
stos
pop
std
push
addr16
call
outsl
stos
hlt
xchg
jae
rcrb
push
dec
sti
add
xchg
movsb
inc
rorl
stos
addr16
mov
adc
xchg
movsb
pop
loop
mov
sbbb
pop
pop
push
popa
out
jnp
shrl
push
add
dec
mov
pop
lods
jmp
ja
mov
inc
ss
fsts
jecxz
hlt
push
mov
xchg
scas
jae
inc
loop
pusha
or
push
cmp
and
out
xchg
bound
scas
or
loopne
outsb
adc
mov
lea
testb
in
and
das
fs
mov
out
call
mov
cli
and
cmp
stc
stos
in
bound
xchg
adc
subl
cmp
scas
sub
cmp
icebp
push
out
sbb
mov
in
je
cli
stos
icebp
add
xchg
jno
imul
pop
xor
push
scas
sub
cmpb
fstpl
in
xchg
mov
sbb
push
xor
jno
mov
nop
cmp
jmp
sub
inc
pop
call
inc
loopne
rcll
inc
push
jno
pop
push
mov
scas
rep
and
popa
mov
or
mov
inc
aaa
and
inc
mov
xor
push
cmp
mov
stc
incl
xor
lea
mov
or
leave
out
pop
cmp
scas
pop
aam
dec
mov
scas
fwait
scas
movb
mov
sahf
jb
mov
pop
pop
adc
push
pop
mov
push
andb
mov
js
sarl
in
push
mov
aam
xor
sbb
sbb
fimuls
lock
mov
loopne
xor
je
mov
push
xchg
ds
in
mov
jmp
mov
testw
shlb
xchg
jo
ljmp
insb
sbb
rolb
push
sarb
or
das
clc
mov
stos
jge
jae
mov
mov
sahf
neg
mov
cmp
inc
fdivs
cltd
dec
fdiv
test
xchg
jb
loopne
push
mov
push
insb
ss
imul
jo
into
in
enter
fidivs
imul
dec
lods
pop
ror
mov
push
xor
or
mov
fbld
call
in
jecxz
btc
mov
test
mov
rsqrtps
jno
rorl
jae
lods
push
jo
push
lahf
sub
pop
adc
leave
es
in
or
mov
fdivrs
mov
and
in
mov
and
xor
imul
cmpsl
cmp
test
in
jnp
rcrb
rcl
xchg
movsb
ret
mov
adc
lea
shrb
jmp
clc
out
or
daa
dec
fs
movl
jp
fbstp
or
cwtl
das
cmp
cmc
mov
jle
cwtl
std
sbb
jg
adc
in
test
jnp
repnz
sub
push
mov
adc
icebp
shlb
inc
repnz
scas
pop
pushf
lret
push
or
cld
movsl
daa
mov
add
fstps
fistpll
sbb
jg
outsb
dec
add
mov
cmc
or
daa
and
rcrl
pop
outsl
jne
mov
xor
pop
sbb
arpl
dec
test
jecxz
out
lret
and
les
fwait
js
xchg
add
iret
jb
movsb
imul
mov
cs
sub
ss
dec
enter
jno
lods
insl
lods
push
lods
lret
inc
pop
cmp
fisttps
in
inc
sub
nop
or
and
insb
out
shr
sbb
add
and
push
stos
lock
outsl
mov
jmp
lahf
xor
or
in
insl
adc
adc
dec
negl
into
jmp
cmc
nop
inc
ljmp
mov
mov
loopne
insl
test
loope
and
add
sti
lods
ljmp
push
dec
push
jl
sar
push
cmp
ss
cs
dec
dec
ljmp
in
xlat
xchg
pop
cmpsb
fadds
inc
fisttpl
jbe
cmp
xor
in
mov
popf
stc
adc
filds
inc
xchg
jae
mov
jp
rol
xchg
mov
fistl
jge
aas
dec
sbb
loopne
dec
pop
and
and
sarb
fsubl
sbb
inc
or
cmpb
out
inc
cmpsb
adc
cmp
mov
xor
inc
and
xchg
andl
mov
fstps
stc
sub
xor
sbb
cmp
out
js
daa
jae,pn
add
pop
and
lret
sbb
mov
repz
movsb
mov
test
cmp
call
cld
push
loopne
push
int3
ucomiss
outsb
cmp
cli
outsb
ds
dec
adc
outsl
push
enter
fs
mov
mov
fstl
mov
xor
xchg
aad
add
adc
cmp
nop
test
cltd
cmp
inc
jno
xchg
jne
decb
andb
dec
fs
sub
sbb
pusha
cs
adc
sub
jns
mov
push
cld
dec
cmc
ljmp
cld
loope
jecxz
mov
mov
test
stos
mov
das
ss
aam
sbb
pop
jmp
lcall
iret
in
call
mov
ja
shlb
or
or
adc
push
add
cmp
jo
sbb
ss
cltd
cli
pop
jbe
fadds
leave
repz
xchg
xor
mov
pop
or
xchg
cmp
fbstp
das
xchg
mov
mov
adc
mov
shrb
out
leave
in
jge
jp
loop
sahf
dec
cmp
repz
pop
adc
out
mov
mov
jmp
adc
pop
add
add
cmp
mov
mov
lods
and
cwtl
shl
out
inc
popf
sbb
push
loope
adc
mov
cmpsl
jnp
popf
push
and
add
cmp
cltd
inc
popa
stos
and
sub
js
in
pop
loopne
or
dec
xchg
sub
inc
pop
cmp
jb
mov
or
iret
cmc
mov
in
scas
cmp
loop
mov
popf
or
pop
arpl
fdivs
xor
das
pop
add
stos
dec
jo
je
mov
xchg
aaa
adc
and
imul
pop
std
push
aam
adc
cltd
mov
fst
add
mov
test
jo
mov
call
lahf
xor
xchg
adc
dec
std
fistpll
int3
sub
jb
sbb
inc
rol
or
aam
push
in
sbb
xor
cmp
mov
xor
inc
mov
sub
mov
cmpsl
add
insb
dec
push
push
jmp
mov
mov
leave
lcall
test
mov
and
sub
std
xor
push
cld
popa
xchg
add
mov
jne
jno
cmc
and
cli
cmpsb
mov
cmc
jb
mov
push
loopne
cmp
pop
popf
xchg
loop
xor
inc
ret
ljmp
aas
mov
out
fimull
adc
scas
and
out
sbb
sbb
sbb
sahf
sbb
pop
fwait
mov
jbe
or
mov
out
mov
daa
jle
ja
leave
movsb
fdivr
movb
jbe
rcl
sub
add
pop
jmp
test
cwtl
lret
aas
sbb
aas
add
and
neg
test
push
sarl
rcrl
push
mov
push
stc
decl
adc
call
and
inc
mov
push
or
push
out
loope
addr16
in
jge
or
les
xchg
addb
mov
xor
add
push
pop
mov
inc
xchg
dec
sub
pop
icebp
movsb
sub
rorb
sub
push
cmp
pop
nop
cwtl
add
imul
cmp
dec
mov
mov
xorl
push
xor
xchg
xor
imulb
inc
adc
mov
or
mov
mov
inc
divb
lret
cmpsb
add
cmpl
cld
scas
sub
mov
or
scas
call
sbb
add
test
push
dec
xchg
push
sub
inc
inc
addb
and
mul
pop
hlt
in
adc
icebp
xchg
fsubrs
adc
jae
add
jecxz
out
js
jp
pushf
mov
stos
mov
sbb
js
jp
pop
mov
jno
or
or
movsl
mov
or
rclb
xlat
mov
fabs
jmp
push
jne
scas
es
cmp
jo
xchg
je
inc
mov
pop
push
mov
add
adc
or
divl
cmp
jecxz
mov
stos
in
mov
xchg
mov
dec
mov
mov
test
sbb
pop
ret
mov
es
lds
rcll
add
pop
les
sbb
add
ror
add
or
jae
fadd
notl
in
cmp
and
cmpsb
test
adc
xor
dec
movsb
cmpsb
fwait
je
lds
das
add
test
jecxz
movsl
or
adc
mov
dec
jns
xchg
or
sbb
inc
and
cltd
jns
xchg
pop
inc
clc
fidivrs
mov
dec
push
mov
jge
scas
bound
pop
dec
and
bsf
mov
xchg
out
in
sub
lods
ds
mov
mov
leave
inc
push
xlat
loope
fsubr
test
jp
jae
mov
sahf
xchg
or
sahf
cmp
mov
push
mov
push
clc
out
call
mov
sarb
test
cmp
cmc
jmp
sti
push
lret
sarb
pop
les
cmp
loope
lods
popf
cmp
pop
push
ret
mov
push
outsb
jg
dec
out
stos
sbb
in
mov
xlat
notl
cmp
inc
fwait
jo
adc
mov
enter
das
mov
add
pop
rcr
bound
repnz
dec
out
scas
push
xchg
sub
jecxz
sbb
pop
cmp
scas
pop
jmpw
add
pop
call
or
push
dec
pushl
inc
sub
and
stc
sub
mov
cmp
insb
pop
negl
out
daa
xlat
outsb
cmc
popa
dec
mov
xchg
daa
lahf
and
xchg
iret
mov
in
and
lret
jp
sahf
lcall
das
add
or
mov
or
or
cs
xor
fldt
jg
mov
or
fdivrl
mov
out
xchg
dec
movsl
xchg
xor
daa
and
cmp
stos
adc
and
aam
fdivp
dec
enter
aas
stos
std
push
cmpl
mov
push
mov
mov
cmc
mov
sbb
into
cwtl
dec
pop
and
sub
cmpsb
test
push
hlt
cli
fdivrs
pop
sub
in
lahf
pop
inc
repz
enter
pop
imul
in
cmp
xor
mov
add
sub
outsb
and
ds
rol
lds
lods
rep
sbbb
mov
mov
pop
loop
sahf
cli
cmp
push
sub
xchg
cli
jge
lcall
mov
jne
pop
jne
inc
push
dec
aam
in
popf
sbb
dec
xchg
movsl
lahf
mov
pop
push
ret
mov
push
inc
aas
sahf
push
call
out
jne
cltd
jnp
xchg
xchg
addr16
inc
xor
mov
xchg
pushf
test
jo
and
mov
mov
das
jl
ljmp
sbb
mov
jb
and
sub
mov
jg
push
push
int3
pop
popa
inc
fiaddl
in
adcb
inc
cmp
out
cmp
cld
inc
hlt
inc
sbbl
mov
scas
ret
xorl
sahf
push
mov
mov
pop
inc
push
mov
sbb
add
dec
xchg
push
push
mov
ja
cwtl
cmp
aas
cmp
mov
xor
movsb
adc
insb
mov
pop
test
outsl
mov
in
push
jecxz
jae
jp
adc
add
push
fwait
ss
and
mov
sbb
dec
sub
or
xchg
xchg
inc
add
xor
addr16
push
push
mov
nop
cmp
cmc
pop
sbb
cmpl
or
mov
and
dec
push
mov
add
adc
lock
xchg
fildll
jno
mov
scas
test
test
jnp
fwait
mov
push
add
and
imul
inc
and
ret
sbb
adc
into
sti
jne
pop
cltd
adc
fildll
pop
into
push
test
out
or
fistps
add
insb
mov
adc
mov
xchg
test
cmp
push
jbe
cmp
scas
sbb
pop
or
jo
adc
addr16
ret
fsts
test
adc
xor
aas
repz
test
lods
rorb
loopne
xor
sarl
add
and
aaa
incb
rclb
aam
stos
fs
mov
push
std
push
popf
sbb
jno
mov
jne
outsb
aas
dec
cmpl
cltd
cmpsb
clc
sub
in
pop
es
push
sub
pop
lret
orb
adc
sbb
ret
imul
out
pusha
push
pop
popl
scas
les
xchg
inc
sbb
bound
jl
repnz
inc
aas
sub
fwait
push
sub
cmp
mov
sbb
and
add
adc
xchg
and
lahf
imul
pushl
mov
setge
test
mov
xchg
xchg
scas
mov
jg
test
fstl
es
xor
imul
or
repnz
jb
mov
das
pushf
mov
lahf
lret
imul
pusha
add
xchg
mov
cmp
sub
out
fstl
mov
pusha
leave
lea
pop
xchg
jle
lods
cmp
popa
hlt
mov
dec
sarb
fs
daa
daa
sbb
leave
jecxz
leave
cld
inc
jno
ljmp
mov
mov
test
popf
sub
stos
jo
in
test
push
imul
inc
aam
dec
sub
cmpsb
inc
dec
cli
mov
mov
xchg
mov
fidivrs
pop
mov
stc
sub
and
rorb
pop
cli
sub
jge
or
cmp
cltd
sub
aam
and
pushf
into
icebp
fptan
cvtpi2ps
movsb
popf
xchg
lahf
add
jg
mov
rcr
jno
and
sub
push
sub
xor
jns
lahf
jb
and
jp
pop
mov
or
outsb
aam
scas
push
push
test
addb
std
and
mov
aaa
pop
lahf
rclb
stos
jnp
ja
pop
dec
daa
fstps
hlt
cmp
xor
push
das
mov
pushf
and
jp
push
xchg
cmc
mov
cli
mov
test
push
mov
arpl
or
jle
dec
repnz
out
xor
dec
aad
jne
stos
lret
push
xor
mov
xchg
orb
push
pop
mov
xchg
xor
add
hlt
lock
push
xchg
push
cmp
mov
and
arpl
mov
sbb
js
pop
xchg
pop
sub
inc
adcl
push
jp
ss
ret
mov
int3
push
mov
push
jmp
inc
jecxz
adc
ret
test
xor
sbb
call
stc
add
loop
push
sbb
mov
pop
repnz
mov
mov
pop
cld
daa
dec
insb
fcoml
sub
outsl
dec
sbb
push
mov
cmp
or
fnstsw
jmp
call
dec
xchg
push
pop
pop
inc
adc
add
mov
sub
dec
pop
sub
xor
sub
jg
pop
out
jb
add
xor
mov
mov
mov
add
imul
fsubs
cld
int
pop
insb
xor
outsl
push
and
clc
js
loope
fists
cmp
dec
pop
lods
shrb
cmpsb
std
xchg
loopne
xchg
dec
mov
xchg
loope
pop
cld
lds
aas
aaa
fadds
test
mov
and
jmp
sbb
sub
xor
sbb
sub
mov
push
in
mov
jge
mov
inc
loopne
in
aad
das
or
push
dec
loope
adc
notb
dec
lahf
test
mov
jb
cmp
mov
adc
adc
mov
xlat
mov
subl
pop
lret
pop
xorl
sub
and
add
inc
and
stos
cmp
xchg
dec
add
out
mov
push
fildll
fnstenv
aad
imul
popf
xorl
sbb
or
jmp
xchg
shrl
sti
test
arpl
mov
lret
cmp
aas
xchg
jg
rcrb
xchg
pop
sbb
or
pop
test
jnp
je
into
aaa
jecxz
call
in
movsl
inc
mov
xor
arpl
and
mov
pop
push
jo
outsb
int3
outsl
pop
xchg
or
mov
hlt
mov
shll
jl
mov
std
jge
inc
xchg
aaa
mov
aad
lahf
hlt
out
pop
in
jmp
and
xor
mov
push
adc
es
push
mov
fdivrl
sub
test
cmp
shrb
dec
jo
scas
aas
inc
inc
mov
dec
arpl
cwtl
inc
jae
mov
shrl
fcomi
xchg
stc
jbe
cli
lahf
xchg
pusha
pusha
pop
or
inc
scas
roll
or
stos
mov
sbb
std
sub
bnd
fstl
daa
je
push
cmp
adc
dec
mov
push
xchg
inc
xchg
aam
mov
dec
popa
dec
je
mov
mov
or
ret
mov
rorl
xor
into
inc
mov
lea
and
cs
xchg
ret
cmc
das
mov
push
fstl
retw
leave
jge
push
or
dec
mov
decb
dec
imul
cld
stc
insb
mov
arpl
fmull
xor
imul
int3
mov
push
nop
in
lds
add
add
add
mov
mov
ljmp
repnz
adc
enter
imul
jl
add
pop
mov
add
pusha
loope
mov
pop
imul
test
adc
mov
jae
leave
imul
push
pop
push
xchg
out
mov
push
out
xchg
xor
fldcw
sub
out
es
dec
into
xor
ret
call
ja
stos
jno
mov
out
sub
ss
cmpsb
sbb
fsts
mov
lds
fisubrl
mov
scas
int
imul
and
xabort
mov
or
mov
push
mov
dec
inc
lcall
sub
out
in
out
mov
cmp
outsl
cltd
xor
in
sbb
test
pop
ficompl
in
ja
fnstsw
in
push
dec
push
hlt
mov
push
test
sbb
rorb
pop
enter
mov
add
or
scas
xchg
dec
pushf
xchg
stos
fs
jno
xchg
cld
ds
jge
adc
enter
pusha
std
mov
dec
and
sbb
outsl
dec
cmpsl
mov
rorl
hlt
js
sbb
aas
pop
arpl
xor
daa
repnz
pushf
inc
insb
and
mov
out
cwtl
loopne
cmp
pop
into
pop
insb
stc
dec
inc
mov
add
cmp
jg
aaa
mov
lret
mov
xchg
sti
ret
pushf
mov
inc
xor
pusha
mov
jmp
adc
incb
sbb
push
xor
ss
adc
lods
cmpl
sbbl
and
dec
jnp
scas
movsb
fwait
dec
jns
cli
sbb
add
je
aad
push
push
fs
lret
leave
xchg
inc
in
or
jg
mov
or
add
adcl
push
hlt
add
lret
int3
push
jp
vpminub
add
andl
addr16
jecxz
shll
fcomps
sub
int
cmp
push
imulb
jp
movsl
lcall
mov
js
addl
jg
std
add
adc
imul
adc
mov
sbb
pop
lcall
lds
xlat
sub
fwait
ret
fs
add
daa
push
adc
int
lock
adc
ficompl
aam
fildl
adc
xor
ljmp
idivl
jnp
adc
mov
pop
cmp
outsl
push
xchg
pusha
cs
xchg
je
pop
push
div
sahf
pushl
sub
xchg
outsl
imul
sbb
dec
sbb
mov
or
dec
frstor
aam
mov
sbb
sub
mov
rorl
pop
bound
cmp
sbb
mov
aam
mov
and
ret
pop
ss
push
aad
leave
adc
dec
clc
test
dec
ja
test
jmp
lret
cmp
ds
jns
cltd
loope
sub
inc
and
sahf
jb
and
jno
add
sahf
mov
mov
dec
xchg
mov
in
dec
aam
enter
add
fstl
sbbl
push
pop
shlb
adc
in
out
orb
push
add
sti
imul
mov
scas
stc
pop
pop
sub
addr16
fdivl
dec
dec
daa
add
cmp
cmp
mov
mov
fs
mov
loop
xor
dec
xchg
jecxz
sub
std
or
mov
data16
aas
jle
ds
mov
in
es
dec
add
stc
xchg
sbb
js
add
faddl
scas
dec
aaa
mov
and
inc
loope
sub
push
pop
sbb
jo
inc
pop
pop
imul
data16
jmp
xchg
pop
ret
rcrb
fwait
adc
pop
cs
add
addl
cs
orb
mov
test
xchg
test
int
lock
lret
push
inc
ret
sbbl
xor
adc
push
cmp
mov
cmp
jns
out
iret
push
sub
xor
mov
mov
push
test
pop
push
daa
fldenv
cmpsb
add
insb
mov
xchg
sub
cmp
cltd
in
dec
push
sbb
cwtl
push
jge
rcll
sbb
imul
sbb
rol
test
mov
xchg
rcrl
sub
sahf
cld
mov
int
add
insb
add
pop
sbb
jle
es
std
xchg
pop
and
ret
std
mov
dec
flds
imul
ret
jp
addr16
add
push
dec
push
xor
stos
movsl
nop
rolb
addr16
xor
mov
xlat
int3
test
jl
fisttpll
data16
or
mov
dec
pop
mov
test
and
and
in
ret
jne
insb
fmuls
addr16
dec
pop
xchg
movsb
sub
jge
lea
mov
flds
dec
mov
imul
std
jmp
arpl
mov
cwtl
popa
in
movsl
sbb
fs
fisttps
xchg
insl
leave
mov
inc
scas
xlat
outsl
add
adc
xor
orb
stc
inc
dec
pop
call
xor
das
dec
mov
xchg
xchg
add
inc
fisubl
jmp
or
xor
add
xor
xrelease
jns
push
out
push
xchg
mov
xchg
in
cli
add
aaa
or
pop
in
sub
sub
outsl
adc
outsb
ret
mov
xlat
xor
jbe
sbb
nop
outsl
les
int
imul
in
dec
clc
int3
movsb
stc
dec
and
mov
test
adc
hlt
sbb
stos
sbb
dec
add
shlb
jmp
dec
rcrl
loope
mov
lcall
call
bound
sub
xchg
test
push
cmp
lret
sub
daa
and
lea
inc
jnp
xchg
mov
pop
and
in
xchg
xchg
jno
push
mov
ja
xchg
push
pop
test
pop
imul
popa
rolb
sbb
shrb
ja
sbb
xor
jle
shll
in
jmp
dec
inc
or
rcrl
mov
inc
lahf
cmc
inc
pop
and
xchg
in
es
push
jle
mov
in
jns
mov
das
inc
xor
jp
divl
test
sub
movl
fwait
adc
sub
loop
cmp
out
or
push
movl
add
in
jge
jg
lea
jnp
lahf
sti
mov
and
inc
push
cmp
lds
xchg
outsb
leave
push
mov
push
das
in
mov
cmp
push
xor
daa
lods
inc
and
scas
adc
adc
mov
aad
in
fwait
iret
add
lods
adc
jg
adc
ja
outsl
mov
push
pushf
call
addl
push
sahf
or
loope
scas
sbb
adc
bound
mov
mov
jns
mov
jbe
xchg
jo
nop
push
iret
pop
sahf
pop
pop
repnz
cli
mov
cmp
data16
mov
and
lcall
repnz
cmc
sbb
inc
cmpsb
das
sbb
push
sbb
jle
sub
mov
dec
pop
out
inc
add
flds
add
int
mov
ret
stc
daa
xor
xorb
jl
dec
xchg
xchg
adc
sub
dec
aad
xor
mov
dec
fcoml
xor
xor
cmpsb
pushf
mov
sbb
adc
jo
aaa
push
insb
push
push
mov
movsb
adc
add
fdivrl
xchg
das
lahf
outsl
in
pop
insb
jmp
fnstcw
aam
lret
jmp
xchg
sti
pop
xlat
cmp
jne
cmp
mov
sbb
ja
int3
pop
pop
jnp
cmp
and
in
dec
mov
cmp
nop
jmp
out
outsl
inc
nop
add
mov
stos
mov
sub
shlb
into
js
je
mov
loopne
std
mov
mov
stc
sbb
sbb
sub
mov
cmpb
fisubrl
in
or
add
adc
and
jne
push
rol
out
jno
imul
mov
inc
shlb
xor
lods
add
mov
cmpsl
inc
fs
pop
vmovupd
mov
mov
sub
push
or
push
insl
push
adc
mov
xchg
pop
push
nopl
add
cmp
jns
aas
jl
ret
mov
dec
data16
cmc
mov
push
push
gs
add
sbb
mov
into
inc
out
mov
dec
mov
dec
hlt
dec
lret
scas
aas
sbb
addr16
shrb
inc
pop
jbe
mov
movsb
jg
xor
cmc
adc
adc
cmpb
movsb
xchg
push
xor
das
pop
or
fldcw
mov
popf
lahf
mov
outsl
xorb
xor
mov
shl
pop
sub
jmp
and
icebp
jnp
pop
lret
nop
mov
sub
pop
iret
jecxz
push
dec
popf
stc
adc
cmp
jae
and
mov
xchg
sti
ds
mov
jp
inc
arpl
jl
jecxz
mov
xlat
popa
lds
xor
adc
and
stos
cmpsb
mov
sub
cmpsb
dec
in
sbb
daa
loopne
sbb
idivl
sahf
imul
jecxz
cltd
xchg
sub
mov
out
insb
push
push
idivl
and
mov
pushf
mov
lret
xor
leave
test
fsubp
inc
lahf
fidivrl
mov
xchg
sub
adc
cli
ret
in
push
jo
fmull
add
adc
sahf
mov
cld
cmp
sbb
sub
push
insl
in
stos
dec
or
shlb
xchg
ljmp
popa
dec
pusha
subl
cmp
inc
or
mov
cmp
mov
pushf
mov
sbb
lcall
in
inc
lea
push
inc
sarl
mov
xchg
test
xchg
mul
cmp
mov
loop
loop
dec
std
into
cmp
bnd
xor
or
enter
adc
jmp
jge
leave
lcall
sbb
incl
add
std
xchg
xor
mov
cmc
and
or
jecxz
out
adc
cmp
fyl2x
pop
or
sbbl
mov
dec
mov
sub
mov
int
add
mov
test
and
stos
into
jns
inc
jge
cld
mov
push
ss
sub
xchg
push
sbb
aam
incb
add
adc
inc
cmp
mov
mov
les
push
xchg
das
mov
setnp
jns
jp
xchg
aad
mov
or
je
das
outsl
out
add
jne
aas
mov
es
add
lods
loop
int3
and
mov
std
loope
pop
dec
mov
data16
or
enter
das
jmp
adc
pop
push
bound
sub
in
xchg
cmpsb
aad
push
jns
jns
mov
push
pop
dec
in
bt
push
inc
cwtl
insl
sub
imul
and
lods
lret
add
mov
ljmp
pop
mov
jno
xor
pusha
cmp
insl
xlat
sub
inc
lds
pop
inc
pop
icebp
shll
pop
pop
and
inc
jbe
and
pop
mov
test
xchg
lods
icebp
cli
jge
mov
pop
mov
add
jg
lea
mov
push
popa
sbb
mov
mov
dec
inc
mov
in
mov
xchg
lcall
outsl
lds
inc
xchg
lret
sbb
sar
inc
pop
stc
add
lock
inc
shll
adc
push
cli
xchg
cmp
add
inc
ja
outsl
xchg
xor
mov
xor
xchg
cwtl
and
xchg
fwait
orl
imul
lds
not
loope
adc
mov
inc
lret
push
lods
xchg
out
fstpl
pop
mov
leave
out
add
mov
jo
mov
aas
xor
sbb
push
xor
mov
mov
sub
and
in
orb
sbb
inc
adc
push
data16
xor
xor
out
in
je
movsl
mov
rorb
aam
enter
aas
pop
mov
pusha
and
xchg
sub
adc
fists
sarl
and
pushf
test
inc
movsl
pop
scas
sub
inc
fdiv
mov
sbb
movsl
xchg
mov
jmp
cmpsl
fisttpl
xchg
pop
xchg
mov
out
enter
jnp
xchg
aaa
addb
fisubrl
xchg
std
adc
cmp
sti
ret
cmp
jbe
adc
bnd
jbe
mov
sub
xchg
xchg
cmpsl
loopne
pushf
arpl
cmp
push
movsb
ljmp
sbb
inc
clc
lods
imull
dec
jg
xor
loop
jbe
add
inc
xor
sbb
test
xchg
inc
inc
mov
cmp
push
stos
dec
and
icebp
jge
movsb
sahf
jb
jmp
shrl
mov
mov
lret
push
xchg
imul
xchg
or
rolb
and
testl
mov
fdivrl
push
sar
adc
add
dec
push
cld
push
stc
faddl
xor
jns
hlt
push
sbbb
dec
cmp
sbb
insb
addl
orl
incb
mov
cs
pop
sub
inc
insb
dec
xlat
dec
sahf
dec
sub
imul
lock
clc
xor
push
xchg
loope
fidivs
xchg
ficoms
cmpsb
pushf
add
inc
int
mov
sbb
notb
cmp
sbb
mov
add
insb
cmpsb
pushf
mov
adc
and
xor
ret
cmp
adc
insl
mov
int
push
imul
icebp
push
sarl
mov
mov
pop
jmp
push
mov
sarb
jmp
push
sub
clc
dec
stc
outsl
sti
sub
decb
lret
push
or
js
xchg
sbb
adc
xchg
lret
test
pop
pop
xchg
jne
insl
pop
cmp
lret
arpl
jb
movsl
shlb
adc
test
icebp
ja
lds
testl
add
movl
add
orl
xchg
stos
or
adc
pusha
jno
test
std
dec
mov
cmp
pop
cmp
imul
call
into
loop
mov
aaa
mov
pop
cmp
lock
xor
mov
fistpl
or
idivb
mov
shll
xchg
ds
hlt
cmp
xor
incb
xor
adc
jg
pop
mov
push
mov
sarb
dec
inc
rol
inc
or
in
js
push
sub
int
lret
subb
outsb
mov
insl
testb
adc
lret
jo
int3
mov
cmc
stos
mov
adc
pop
lods
add
rorb
cmc
lret
aad
or
pop
adc
movsl
lods
aad
add
insb
or
inc
pusha
push
out
stos
dec
pop
mov
push
mov
and
push
cmp
xor
sub
push
call
push
pop
xor
shlb
dec
inc
or
sub
in
jnp
or
out
cli
jae
sub
sbb
cmc
jmp
xor
aam
jge
or
in
pusha
ret
cld
add
sarl
loopne
inc
lods
jg
cwtl
push
popa
xor
imulb
push
lcall
adc
jg
inc
pop
xchg
xor
mov
mov
cmpsb
clc
sti
lea
mov
insl
sbb
or
out
fcom
push
sub
xchg
out
cmpsl
pop
cmp
test
outsb
cmp
add
test
or
out
xchg
js
add
out
imul
xor
dec
andb
mov
sub
mov
and
cmp
adc
sbb
ja
mov
inc
jp
loope,pn
pushf
xor
sub
test
or
test
dec
push
xchg
stos
cs
dec
cmp
mov
jb
popa
decb
or
or
pop
test
xchg
cmp
bound
push
sbb
inc
mov
shlb
xchg
ret
fcompl
sub
in
pop
xchg
lcall
lock
ja
sbb
mov
jle
mov
pop
aad
dec
stc
call
ret
pop
rolb
sub
add
ss
lods
cli
lahf
shll
adc
dec
insl
mov
jp
mov
xchg
mov
data16
add
loope
out
jo
and
and
imulb
mov
cwtl
xlat
cmp
fcmovne
xchg
aaa
inc
pop
imul
and
cmp
fs
cmc
out
mov
mov
out
or
mov
fidivrl
xchg
sub
or
ds
lahf
cmpl
std
sub
mov
loopne
cmp
arpl
repz
cld
or
lds
add
mov
cwtl
ficoms
rcrl
or
lods
jo
push
lods
or
push
mov
lahf
cmovae
sbb
mov
insb
and
iret
adc
test
add
jge
push
pop
push
pop
push
fisttpl
pop
fisttpll
cmp
and
out
fstp
lcall
iret
daa
test
iret
add
pop
jb
shl
test
inc
inc
imul
and
int3
pop
mov
add
loopne
jp
mov
mov
jle
cmpsl
pusha
or
sub
insb
mov
inc
add
cmpsb
test
add
shl
jl
mov
notl
pop
stos
pusha
lods
mov
cmp
fldt
add
mov
cmpsl
xchg
or
pusha
fwait
dec
adc
or
fistpll
jns
fstp
or
jo
push
push
dec
cmp
pop
aam
or
ljmp
or
mov
mov
add
aad
hlt
cmp
add
xor
jle
rorl
dec
or
arpl
cmpsl
sub
push
lret
jg
cld
int
gs
cmp
cwtl
mov
dec
rorl
out
xor
mov
out
fdivl
lods
dec
mov
call
cmc
mov
movsb
and
ljmp
lcall
xchg
jmp
lds
adc
popf
lret
jo
data16
cmp
mov
adc
rclb
fisubl
shlb
add
cmpsl
push
mov
xchg
sub
dec
pop
mov
sbb
mov
adc
fimull
sti
and
stos
push
jp
rorb
clc
or
mov
out
jbe
popa
lock
lret
adc
aad
mov
bound
idivl
mov
ret
xor
leave
loope
out
sarb
mov
dec
test
scas
clc
test
and
fs
arpl
insl
mov
sbb
fs
pop
jo
push
es
jne
or
pop
dec
sbb
lds
sbb
incb
adc
cmc
adc
push
aam
mov
inc
or
fwait
inc
sub
push
fisubrs
mov
rcr
inc
pop
sbb
lahf
or
jbe
push
test
sbb
push
add
sbb
repz
xchg
cld
mov
cmpsb
mov
jp
psubsb
dec
cs
and
repnz
adc
cltd
jne
stos
push
cwtl
int
in
adc
pop
cmp
ds
cmpsl
lds
cmp
sbb
xchg
movsl
push
js
ja
aam
mov
adc
dec
fisubrl
xor
aad
mov
xor
daa
xchg
pop
inc
mov
daa
jg
mov
cmp
sbb
stos
test
mov
push
ret
xchg
pop
jle
jnp
xor
movsl
sbb
adc
addb
fdiv
movsb
jae
jbe
loope
xor
jnp
pushl
divl
cmp
push
cmpl
bound
sarb
outsl
xchg
add
popa
push
in
aaa
mov
mov
aam
out
mov
or
inc
pop
daa
dec
mov
loopne
sarb
test
mov
fcmovnbe
lret
inc
cli
cli
mov
out
les
xor
in
out
xchg
sub
mov
out
cmpsb
pop
lods
leave
jmp
jne
or
pop
pop
or
iret
lcall
mov
cwtl
inc
mov
mov
cmp
pop
push
xor
data16
sbb
pop
dec
sub
dec
imul
lds
cld
mov
and
sub
data16
sahf
xchg
lret
add
lahf
pusha
jae
push
jge
fdivs
fisttpl
dec
repnz
jmp
adc
es
arpl
and
mov
cmp
sub
cmpsb
push
and
inc
xor
jg
jae
lds
push
test
out
dec
rcr
aas
jne
outsb
jl
sti
subb
dec
and
insl
pop
shlb
sub
mov
shll
adc
and
mov
or
mov
cmp
dec
mov
pop
in
mov
addr16
fs
dec
dec
mov
mov
dec
mov
cmp
stos
inc
push
sbb
sbb
movsb
jno
push
test
dec
lret
clc
inc
out
ret
test
mov
dec
cmp
leave
negl
jne
movsl
js
mov
fnsave
aas
das
adc
push
es
loop
jmp
pop
add
pushf
stos
outsl
push
pop
pop
jb
loopne
dec
adc
jl
mov
xlat
ret
and
test
repnz
cmp
in
push
push
mov
pop
sub
arpl
adc
outsl
mov
sub
outsb
mov
jge
xchg
hlt
mov
mov
in
push
push
dec
fstpt
xchg
clc
pop
fimuls
call
jae
insl
sbbl
inc
shlb
jne
jmp
mov
adc
jmp
fcoml
add
mov
sti
add
loope
int
xchg
addl
out
dec
jecxz
insb
jge
xor
push
imul
dec
movsb
jae
or
jmp
out
jae
push
xor
cld
insl
mov
xchg
mov
fcmovnbe
into
mov
andb
or
popa
outsb
aam
fsubrs
xchg
push
test
loopne
enter
push
xchg
fs
adc
jmp
cmp
outsb
inc
lret
inc
jae
icebp
xchg
in
test
aas
andw
inc
icebp
js
aam
shrl
push
out
pop
cmp
or
dec
ret
lret
mov
loopne
mov
cmp
mov
xchg
out
cmp
push
mov
pusha
or
xchg
cmc
popf
inc
mov
pop
movsl
jecxz
lods
jns
js
loopne
fcmovb
xchg
incb
bound
roll
gs
adc
lock
pop
jge
cmpsb
lcall
mov
mov
push
jae
mov
incb
sub
inc
lds
push
fwait
or
jnp
daa
flds
push
popf
sbb
scas
mov
sbb
rcll
in
adc
jbe
sub
dec
test
adc
imul
fsts
repnz
cltd
js
push
pop
out
mov
dec
sub
adc
dec
jno
inc
pop
xchg
push
cmp
fidivl
cmp
ret
xchg
xchg
leave
mov
dec
test
mov
in
sti
or
xchg
mov
call
insb
mov
add
rcrl
lcall
add
inc
xchg
fucom
ss
xor
mov
xor
jae
es
xchg
pop
add
push
jg
mov
xchg
jmp
lret
or
jge
cmpsb
testl
stos
xchg
inc
clc
jmp
mov
or
fisttpl
mov
roll
jp
js
mov
fs
sbb
push
mov
dec
push
inc
ret
mov
mov
inc
push
sub
dec
sbb
dec
mov
mov
jno
nop
data16
test
addr16
or
loopne
int
js
adc
popf
cwtl
push
incb
push
or
fisubl
dec
or
push
neg
xchg
xor
sub
loopne
adc
and
sbb
scas
mov
push
or
xchg
cwtl
lret
and
sti
xor
push
cmp
fisttpl
push
or
push
idivb
adc
mov
scas
outsl
scas
jno
xchg
pusha
sysenter
and
in
cmc
mov
cmp
jmp
and
jp
pop
test
xchg
pop
add
pop
mov
and
xor
sbb
lea
das
xlat
ret
mov
cmp
sub
negl
sbb
leave
sub
add
pop
test
xor
adc
popa
inc
jae
mov
aad
loop
rcrl
test
mov
insl
push
xchg
mov
dec
int
jecxz
push
and
sbb
repnz
push
jno
fwait
push
lcall
adc
sarb
cmpsb
fldl
idiv
mov
aam
cmp
pop
sar
push
pop
lock
lret
lods
sub
in
test
dec
xchg
clc
push
mov
mov
jmp
das
fisubrs
pop
lret
jp
xchg
mov
jnp
jo
in
movsl
pop
inc
cmp
cmpsl
pop
push
cmpsb
pop
sub
rcrb
stc
pop
pop
jne
mov
ret
jae
pop
cs
mov
push
bound
xor
faddp
pop
cmp
xor
jne
inc
inc
outsb
mov
adc
mov
push
push
pop
cmp
ja
sbb
je
je
scas
cs
xor
pop
fnop
mov
pop
in
sbb
test
and
rorl
andl
idivb
push
ret
push
out
test
push
jns
jns
dec
ss
sub
xlat
movsb
inc
jne
stos
push
inc
scas
das
push
pop
sub
xor
vmread
pop
mov
je
sti
xor
jne
and
inc
pop
int
gs
dec
movsb
and
movsl
pop
jmp
adc
jge
cmc
incb
sbb
mov
sub
ret
cmp
jb
les
aaa
shlb
pop
cld
std
jno
jnp
dec
cld
jnp
gs
subl
mov
inc
test
iret
mov
movsl
hlt
sub
pushf
adc
adc
mov
push
ret
adc
or
push
mov
mov
std
push
xchg
jbe
std
fbstp
mov
add
jle
xchg
pop
testb
scas
lods
data16
adcl
dec
mov
outsb
aad
pop
cmp
lods
mov
test
xchg
ljmp
lahf
cmpsb
cs
aad
pop
out
into
pushf
jae
cltd
inc
adc
and
ja
push
xchg
sub
cli
add
sub
and
mov
mov
ja
fistl
or
push
lock
dec
adc
stos
pop
iret
push
lock
xor
filds
bound
fsubl
lea
mov
add
pushf
insb
dec
push
test
orb
scas
inc
mov
mov
xor
icebp
ficoml
push
ja
dec
in
test
call
lret
cmpsb
push
inc
sbb
das
js
dec
inc
into
andl
imul
jmp
iret
aas
cmp
jo
pop
and
mov
nop
mov
xchg
ja
inc
xor
fcmovnbe
dec
add
jg
rcll
jbe
loopne
leave
ret
les
jp
mov
enter
int
cmp
push
cmp
fstp
adc
cmp
ss
jmp
add
mov
mov
test
ja
push
or
or
adc
jno
insl
in
and
imul
jge
nop
scas
jns
push
sub
cmpsb
pop
in
lods
push
fistpl
in
shr
xor
movsl
mov
or
and
cmpl
data16
or
push
xorl
dec
mov
and
stc
jbe
push
push
add
mov
pop
sbb
xor
stos
sub
inc
mov
repnz
es
je
je
push
call
clc
mov
jl
dec
hlt
lods
adc
xor
call
in
add
addl
xchg
jno
or
std
int3
mov
jle
mov
jno
aad
lods
and
inc
xor
and
out
data16
lahf
adc
cmp
push
aad
lcall
cmp
or
sub
cmpsl
inc
fisttpll
mov
sub
push
scas
dec
int
pop
sub
imul
les
add
push
mov
cmpsb
mov
sub
pop
inc
xchg
mov
fldt
fnstenv
pop
mov
or
sub
cld
aas
call
idiv
pusha
sbb
push
push
sub
cmp
dec
push
mov
std
xchg
in
adc
cmp
ja
divb
clc
adc
xor
add
jmp
loopne
mov
daa
jl
dec
ja
pop
mov
push
sub
sub
mov
jb
xor
lret
xchg
clc
ret
divl
insl
and
daa
or
inc
add
jl
data16
mov
pop
aad
sahf
fisubs
js
push
mov
jecxz
inc
xchg
ds
stos
je
mov
mov
rcl
sbb
lods
xchg
arpl
sub
mov
std
in
sbb
push
adc
add
push
add
cmc
sbb
dec
push
loope
dec
test
mov
clc
xchg
fldcw
mov
mov
cmpsl
push
push
pushf
or
pop
inc
int3
test
xor
or
ds
popa
ljmp
pop
sbbl
loope
push
jo
add
and
and
or
add
je
ds
pop
xor
jp
cld
adc
inc
addr16
icebp
dec
fsub
pusha
clc
jl
subb
or
daa
roll
pop
mov
jp
dec
push
dec
add
pop
xchg
ffreep
cmp
push
lret
mov
sbb
sbb
sbb
je
xor
mov
or
faddl
push
pop
sub
jnp
int
scas
iret
pop
dec
ret
xchg
mov
jmp
insb
adc
hlt
mov
adc
xor
jne
nop
leave
push
int
cmp
call
lret
imul
punpckhwd
loope
out
cmp
xchg
pop
scas
jg
mov
lods
sub
dec
inc
out
loopne
fs
lds
stc
pop
jle
out
inc
inc
pop
addr16
jle
adc
sub
mov
shlb
push
push
out
cmpsl
inc
clc
sub
das
jecxz
mov
popf
xor
in
ljmp
inc
and
adc
mov
mov
lcall
jle
inc
push
in
je
dec
add
xchg
inc
lahf
mov
in
jb
adc
cwtl
aad
out
data16
je
xlat
mov
inc
shlb
pushf
adc
sahf
dec
pusha
fsubl
pop
pop
hlt
cld
push
push
lods
test
dec
fwait
ja
push
sti
es
in
inc
jmp
xor
mov
ss
dec
mov
add
shrl
mov
pop
cmc
inc
or
jno
inc
lods
jns
ljmp
jg
jne
pop
add
dec
pop
pop
xchg
adc
inc
inc
pop
jle
push
mov
std
popa
pusha
ljmp
mov
or
outsb
inc
divl
mov
loopne
pop
fsubl
jmp
sub
xor
and
pop
mov
shrl
xchg
mov
push
imul
out
cmpsb
stos
lods
mov
nop
fs
push
jp
int3
test
dec
adc
cmp
test
pop
jnp
aam
pop
pop
sti
fwait
pop
inc
cmp
stos
push
adc
xchg
xlat
jo,pn
mov
sti
orb
pop
cmp
ss
std
jns
into
inc
jb
sub
mov
cmpsb
mov
hlt
mov
inc
aaa
into
aas
leave
movsb
adcb
sub
loope
and
sbb
les
mov
adc
dec
mov
loopne
xchg
aad
jle
add
jp
es
or
notb
add
jno
xor
inc
rolb
stc
cmp
dec
sahf
sbb
idivb
ret
lahf
and
xchg
mov
mov
adc
loop
leave
xchg
push
div
jns
mov
adc
iret
outsl
xchg
add
cli
aas
pop
fildll
sbb
loope
dec
and
jmp
jg
sahf
in
push
lahf
jns
mov
dec
fsts
fdivrs
hlt
mov
test
jg
pop
jmp
pop
mov
adc
repnz
in
rcl
jae
mov
gs
and
sbb
adc
inc
mov
push
shrb
lcall
mov
sbb
rcrl
shrl
jl
mov
testb
inc
mov
mov
push
les
lcall
inc
or
xor
fildl
jle
push
or
fs
inc
xchg
rcll
pop
jb
and
leave
loopne
aas
in
mov
mov
mov
call
test
sti
addr16
outsb
test
cmp
insb
movsb
cmp
sarb
mov
inc
ror
dec
in
xchg
in
iret
jecxz
adc
ficompl
and
mov
fwait
jnp
cli
pop
pop
jns
pop
dec
jge
cmpsb
loope
mov
push
lret
jecxz
fadd
sub
pop
shrb
int
rorb
inc
ret
hlt
fsubrl
lret
imul
xorl
aas
shll
lret
mov
ss
mov
sbb
add
or
lods
pop
lahf
xchg
add
idivl
arpl
in
cltd
mov
pop
xor
push
aam
out
xor
xchg
inc
scas
jmp
rolb
mov
hlt
ss
outsl
js
and
adc
ds
test
mov
scas
inc
push
inc
sub
bound
pop
fcomip
lcall
mov
adc
into
iret
inc
icebp
pushf
decb
add
xchg
pop
arpl
mov
out
push
dec
xchg
pop
inc
leave
aam
shlb
push
xor
cmc
xor
inc
out
pop
add
or
ret
adc
sbb
fwait
sub
mov
mov
pop
and
or
call
dec
mov
push
std
add
sbb
xchg
xor
jb
and
arpl
loopne
aam
out
mov
xor
leave
xchg
mov
test
mov
nop
sub
and
mov
ss
jmp
dec
sub
gs
loope
jns
push
mov
xchg
leave
ja
lahf
fs
test
jns
inc
test
push
pop
jge
and
lcall
cltd
fdiv
int
and
rorb
xchg
jp
add
mov
jl
pop
push
adc
sub
das
filds
or
out
push
andl
sub
jo
xor
jp
push
mov
mov
mull
xor
jns
cli
mov
lock
jo
cmp
sub
cwtl
cld
fldt
adc
in
lret
int
shrl
insb
rcrl
outsb
cmpsb
mov
mov
xchg
jo
mov
ja
xchg
mov
mov
mov
loop
fnstcw
dec
stos
aaa
jnp
sbb
leave
xlat
shll
pop
repnz
pop
pop
fiaddl
pusha
cmp
xchg
mov
scas
scas
fwait
clc
push
xor
lret
mul
inc
call
hlt
call
mov
pop
pop
adc
sahf
xchg
fimull
pop
or
add
xchg
mov
push
ret
adc
push
push
adc
repz
popw
mov
int
fidivs
rcrl
test
out
jb
enter
rcr
mov
cmpsl
enter
addr16
fidivl
or
xchg
jb
imull
cmp
xor
jne
mov
outsb
fwait
sub
jae
mov
pop
fnsave
inc
inc
je
jg
fs
dec
mov
pop
mov
inc
pop
test
xchg
xor
sahf
jp
hlt
or
sub
aad
inc
lcall
scas
mov
mulb
dec
icebp
mov
outsb
dec
lahf
jns
pop
jns
xlat
push
dec
inc
xchg
inc
add
ret
push
push
xlat
test
jecxz
aad
dec
stos
dec
sbb
out
jmp
push
or
stos
mov
in
data16
rorb
mov
aad
adcb
mov
cltd
xor
mov
daa
fs
mov
adc
pop
xchg
xchg
mov
sbb
int3
shr
mov
testb
add
std
add
loopne
sbbl
push
cmpsl
out
data16
popf
int3
adc
mov
out
add
inc
pop
stc
push
lds
dec
add
xchg
mov
loopne
adc
push
fldenv
jno
in
adc
pop
fimull
push
cld
push
and
fyl2xp1
sahf
lea
cltd
rcll
into
data16
and
xor
adc
test
mov
sti
inc
pushf
mov
das
daa
sub
out
lahf
sub
jns
push
mov
mov
fnstsw
out
ret
call
and
xlat
mov
lret
jo
int
jo
loope
rcrl
mov
mov
ljmp
stos
dec
pop
jb
sub
inc
push
lret
adc
lock
fmulp
pop
pop
je
test
imul
loope
cwtl
nop
icebp
sahf
and
sbb
mov
cltd
test
xchg
push
stos
cmp
in
shr
sbb
add
es
outsl
ret
ja
call
fcoml
in
mov
mov
into
dec
jecxz
cmp
pop
nop
xchg
xchg
dec
mov
dec
xchg
pop
out
mov
jns
pop
pop
inc
jb
and
inc
xchg
xor
push
repz
outsb
mov
and
shlb
add
sbb
pop
mov
jbe
jb
add
mov
push
and
xchg
jnp
sub
inc
cmpsl
inc
mov
xchg
ja
xor
mov
ljmp
push
mov
in
add
push
cmp
stc
mov
mov
xchg
xor
mov
jmp
fdivs
push
pop
aad
movsb
add
pusha
mov
test
mov
lea
sbb
jne
push
sbb
xchg
push
dec
mov
xor
loope
out
icebp
add
ss
fbstp
out
mov
mov
fnsave
xchg
jp
jmp
mov
sbb
das
jmp
insb
push
or
lods
inc
or
sbb
add
adc
jae
call
pop
ds
lods
aad
pop
or
cli
push
inc
leave
cs
xor
fstps
orl
jg
fmul
loop
add
jno
sbb
clc
sahf
adc
jno
loope
inc
push
xor
dec
adcb
inc
ds
add
mov
push
call
cmp
xchg
call
je
shl
pop
ret
sbb
out
sbb
cmp
repnz
sti
lea
cwtl
hlt
pop
xchg
or
shrl
das
cmp
test
jo
leave
es
loop
inc
xchg
push
addl
rcrb
push
enter
sub
sub
daa
xor
loopne
cltd
movsb
addl
dec
outsl
mov
cmc
mov
mov
ss
jne
mov
dec
popa
jae
bound
jbe
test
aad
adc
fs
repz
xchg
jno
sbb
pop
shrb
jae
in
out
pop
push
xlat
sbb
test
mov
insb
aam
inc
cmpsb
out
test
jns
loop
out
pop
in
loope
out
push
enter
cmp
mov
repz
mov
xchg
imul
test
cmpsl
add
push
vcvtsi2sdl
iret
jns
insl
jge
dec
lea
in
aaa
sbb
add
insl
lods
arpl
movsl
shl
jl
mov
dec
in
push
mov
dec
repz
xchg
cwtl
arpl
mov
dec
jmp
pop
lcall
sub
and
insb
pusha
jns
out
mov
and
pop
out
cmp
jbe
cltd
and
inc
push
outsb
adc
cli
mov
popa
fbld
jl
mov
or
jno
mov
stos
imul
mov
lret
clc
or
in
ljmp
js
and
fwait
cmp
scas
xor
jno
lcall
repnz
jae
ret
lods
cs
pop
stc
push
ror
pop
fistl
mov
andl
push
lods
xchg
cmp
cmpl
xchg
cmp
jg
xchg
mov
jnp
push
jbe
aaa
sub
pusha
clc
add
ss
xor
inc
icebp
outsl
fsubrs
icebp
fadds
pop
call
mov
rcrb
dec
dec
sbb
lods
outsb
mov
imul
sbb
push
outsl
movsl
repnz
ficomps
popa
fwait
sbb
jl
out
ja
fs
adc
notl
shlb
imul
pop
or
sbb
mov
and
aad
xor
imul
dec
adcb
jmp
push
pop
add
lods
cmp
ss
inc
pop
psllq
adc
test
mov
shlb
push
lahf
movsb
mov
and
rorb
stc
ficoms
loop,pn
repz
in
aaa
push
daa
out
sahf
ret
nop
fidivrs
shrl
shrl
enter
sbb
adc
or
out
cmpl
out
pushf
enter
jmp
jb
je
xor
shrb
sub
imul
mov
pop
pushl
mov
out
lret
sbb
cld
adc
and
jle
int
cld
out
fildll
sbb
inc
mov
adc
sub
cld
test
aas
outsl
jne
stos
stos
loop
sbb
cli
popf
mov
gs
inc
add
fbstp
arpl
sub
adc
push
cmc
loopne
pop
in
sub
sbb
popa
sbb
cmp
push
cwtl
or
rorl
jecxz
bound
rcrl
addl
push
lahf
nop
loop
lret
rcrw
adc
sbb
lcall
jno
push
adc
aad
mov
movsl
call
aas
push
aad
jp
inc
jo
push
xchg
mov
insl
repnz
inc
cmpsl
inc
or
mov
mov
or
fnstenv
xlat
mov
shr
xlat
cmp
push
dec
setge
ds
out
imul
je
dec
lahf
cmp
adc
mov
mov
push
cmpsl
pusha
rol
jae
jno
test
rol
and
cmp
bound
divb
mov
loop
adc
inc
movsb
jecxz
fstpl
into
pusha
adc
or
into
jmp
add
or
pop
ljmp
push
xor
popa
fcomps
out
push
sub
adc
ss
and
mov
shll
mov
enter
mulb
aas
jmp
enter
mov
fs
std
push
pop
xor
mov
cmp
add
das
cmpsl
bnd
push
xor
adc
adc
cmovge
xorl
in
mov
push
push
popl
push
sub
je
fsts
xor
mov
xor
pop
push
es
movsl
loope
lret
rorb
scas
incl
ret
inc
xchg
ljmp
and
pop
xor
xor
and
or
insb
das
inc
inc
popa
mov
nop
mov
repnz
dec
and
inc
adc
xchg
call
adc
dec
aas
aas
jae
inc
aaa
xchg
es
cmp
sbb
cmp
xchg
in
nop
mov
iret
cmpsl
sub
mov
inc
ss
in
loope
ljmp
das
scas
add
andl
ret
sub
stos
pop
loopne
orb
fs
dec
dec
or
bt
xchg
ss
push
div
mov
imul
sbb
cs
imul
pop
fidivl
popa
in
jecxz
testb
cs
mov
push
xchg
in
inc
daa
and
xor
xchg
xchg
sti
pop
sbb
mov
lds
dec
fcompl
xor
es
les
scas
movl
push
out
fildl
sbb
inc
stos
pop
adc
xor
test
mov
xor
push
shll
lret
cmc
cmpsb
stc
xor
xchg
divb
mov
shlb
add
sti
addr16
mov
and
stos
xchg
pop
add
xchg
and
jg
or
add
fsubrs
hlt
incb
mov
orb
mov
imul
xchg
or
stos
test
rclb
sub
cmp
imul
loope
add
cmc
sbb
mov
pusha
pop
movsl
xor
jge
pushf
notb
cli
sbb
jns
mov
or
xchg
sbb
mov
sub
je
arpl
pop
cmp
fwait
mov
push
cmp
cmpsl
pop
into
into
aaa
xor
sub
push
or
loopne
int3
adc
loopne
insl
je
sbb
mov
push
cmpsl
mov
les
in
or
cmp
xchg
push
mov
outsb
out
in
adc
ja
repnz
lcall
aaa
xchg
leave
inc
repz
sub
lods
jmp
lea
adc
xor
je
adc
leave
jl
nop
stc
jae
pop
mov
push
push
mov
dec
mov
ljmp
push
push
out
pop
inc
cmp
inc
mov
insb
jmp
push
xchg
mov
mov
mov
pop
sub
sub
jmp
outsb
stc
mov
xor
mov
pop
dec
jae
mov
hlt
xor
mov
xorb
inc
push
inc
jae
insb
movsb
or
or
fsubrs
shr
fucomp
cmovnp
addl
add
addr16
jg
jmp
and
push
out
adc
pop
adc
and
data16
lods
inc
out
cs
mov
jmp
mov
test
mov
mov
jecxz
sbb
cs
scas
sub
sub
xchg
dec
loop
std
stos
stos
data16
das
jmp
push
out
imul
xchg
inc
push
and
hlt
ret
mov
mov
adc
addl
fdiv
inc
xor
push
repnz
mov
mov
mov
mov
in
and
fcos
imul
stos
mov
dec
sbb
push
pop
ds
imul
movsb
cmp
movsb
adc
sub
add
fucomip
jno
inc
test
push
iret
loopne
sub
cmp
pop
mov
testl
add
add
imulb
sbb
daa
push
aaa
icebp
sbb
addl
iret
loope
mov
repnz
jl
out
pushf
cmp
test
mov
in
or
rorl
xchg
ja,pn
loop
loope
mov
xchg
and
int3
jg
cs
in
cmp
das
imul
pop
test
jle
sbb
push
add
mov
lret
lcall
in
lods
inc
mov
aas
mov
or
cmp
jmp
mov
adc
dec
dec
sti
jbe
pop
xchg
movsb
imul
cld
jg
adc
nop
sbb
lods
loop
int
iret
jl
out
pushf
jbe
je
ret
xchg
pop
dec
mov
push
shlb
dec
cmpsl
mov
sub
cmp
stos
dec
add
add
lea
push
mov
add
sti
pop
mov
in
ljmp
jle
mov
fcomps
pushf
arpl
mov
jb
fcoms
mov
ja
ja
inc
shlb
dec
pop
sbb
mov
fsubrl
in
adc
add
sub
mov
movsl
fldl
scas
aad
push
xchg
sub
push
xorl
aas
sbb
insb
rcrb
ss
push
repnz
flds
test
js
loop
mov
and
test
push
or
repnz
jo
das
inc
fisubrl
cmc
jle
and
and
sub
push
imul
mov
sbbb
mov
ja
lock
nop
ficomps
int
mul
lcall
jae
fs
pop
or
mov
sub
loope
add
dec
ds
mov
sub
fiadds
inc
mov
push
fdivr
scas
mov
xchg
pop
out
clc
scas
adc
iret
pusha
idivb
add
add
lock
and
orl
add
inc
mov
push
popa
andb
jae
cld
idivb
gs
addr16
mov
je
sub
mov
pop
mov
sub
insl
in
gs
aam
gs
stos
inc
add
sahf
jnp
rolb
sub
cmp
cltd
pop
pop
loope
out
adc
push
aaa
jg
aam
dec
cmpsb
int3
aad
xor
es
xchg
mov
or
add
out
adcb
mov
push
and
mov
popf
cmp
movsl
fimull
dec
mov
out
enter
pop
sbb
xchg
fldpi
out
cmpsb
cmpl
je
cs
and
lret
fs
jbe
movsl
jp
aad
imul
call
mov
rcll
aam
jo
push
sub
mov
insl
in
pop
lret
stos
mov
xlat
test
or
sti
aaa
out
pop
mov
fs
fwait
mov
or
push
xor
mov
outsb
sub
inc
or
lret
mov
xor
and
mov
inc
jmp
cld
aam
mov
mov
cmp
mov
mov
and
cli
out
pop
call
inc
mov
add
fbld
mov
test
fstl
les
scas
loopne
mov
ljmp
cmpsl
imul
gs
adc
aas
or
mov
mov
lcall
out
mov
cmpsb
mov
xchg
xor
mov
cmp
dec
fisubl
dec
add
cmp
pusha
mov
add
pop
movsb
mov
mov
sbb
das
daa
pop
push
lds
push
inc
push
push
outsl
add
lds
jle
fcmovb
aam
cmp
xchg
xchg
pop
jne
jo
sub
mov
or
push
or
sbbb
and
sbb
enter
daa
sbb
sahf
mov
mov
xor
mov
imul
cs
fadds
loopne
push
aas
outsb
fdivrs
jns
cmpsb
fisubs
out
mov
dec
cli
jecxz
aad
cmp
addr16
and
or
shrl
mov
ret
leave
iret
adc
jae
xlat
mov
mov
pop
cmpsl
fincstp
xor
lret
jecxz
int3
ja
xchg
or
sbb
cmp
adc
negb
out
fcmovnu
pop
xor
dec
and
in
xchg
inc
ffreep
adc
jg
fisubl
insb
out
lea
in
test
sbb
aaa
mov
repz
dec
pop
adc
mov
push
cwtl
lock
dec
jecxz
xchg
lahf
adc
push
aaa
stos
idiv
shll
jle
sti
mov
in
or
mov
int
or
add
push
or
bound
cwtl
mov
mov
mov
fistpll
sub
sbb
mov
fs
xor
ljmp
aaa
js
or
mov
cli
std
fadd
push
cltd
js
repz
or
nop
pop
cmp
pop
sbb
sub
hlt
cmp
inc
fisubrs
movsl
lods
movb
xchg
rcrl
sbb
jg
pusha
dec
mov
fdivrs
mov
mov
imul
xor
fcoms
and
or
push
call
out
mov
or
rcl
push
js
dec
pop
jge
divb
call
pushf
adc
sbb
ljmp
push
out
movsl
pop
imulb
dec
je
sbb
out
or
cmc
push
inc
fs
push
dec
ficompl
arpl
and
add
cld
mov
dec
aas
adc
mov
cltd
popf
adc
and
bound
lcall
out
addr16
lock
push
push
ret
shr
fistpl
mov
clc
cmp
pop
add
inc
pusha
adc
into
xchg
pop
mov
ss
incl
xor
sbb
pop
mov
outsb
inc
ds
mov
and
sbb
inc
out
mov
mov
adc
ret
cli
lock
sbb
adc
adc
push
popa
sub
hlt
jne
loope
add
xor
xchg
jno
adc
sub
fcmovbe
cmovg
into
or
shr
adc
and
lcall
add
inc
jle
rol
mov
jae
test
sarl
inc
mov
or
push
scas
outsb
mov
dec
mov
jg
jp
mov
xchg
loopne
mov
pop
vcvtdq2ps
imul
push
dec
sub
les
or
push
imul
mov
cmp
add
ret
and
fdivl
clc
or
or
stos
dec
jnp
test
jmp
push
lret
inc
pop
shll
pop
pop
lock
xor
loopne
sahf
and
push
pushl
je
push
mov
jne
ljmp
int
stc
xchg
or
xor
xor
jbe
fsubrl
js
xor
add
adc
aaa
stos
insb
push
sbb
xchg
vsubss
rorl
adc
push
scas
jne
mov
mov
test
push
outsl
nop
fwait
in
out
ret
push
aad
or
mov
lret
in
jg
or
aad
jb
inc
movsb
stos
mov
jns
pop
cmp
or
daa
fs
add
cmp
push
or
push
fsubr
cmp
js
fstl
fcompl
mov
pop
repnz
into
xor
pushf
xlat
mov
mov
inc
xchg
out
test
cwtl
stmxcsr
inc
in
dec
push
jne
dec
push
dec
loope
adc
cltd
test
sub
mov
inc
jge
pop
xor
out
movsl
push
push
cmp
mov
sbb
dec
sbb
sbb
daa
into
adc
cwtl
fadds
and
enter
mov
outsb
inc
mov
outsl
pop
mov
or
xor
mov
dec
lds
and
jge
dec
inc
jns
test
in
imul
lock
outsb
test
std
cltd
ret
adc
popf
fwait
add
popl
adc
fbld
jle
xchg
jecxz
sbb
mov
sti
and
cmpl
fsts
inc
lret
out
std
add
je
mov
int3
xchg
sbb
or
cli
loope
hlt
mov
dec
xor
mov
cmpsb
lcall
loop
ficoms
push
dec
sti
or
sahf
push
xchg
sbb
dec
push
clc
mov
xchg
cli
cltd
sbb
push
mov
inc
xchg
repnz
pop
mov
cmp
lock
jge
loope
out
xchg
rorl
cld
dec
mov
push
push
mov
pop
mov
test
sbb
add
enter
or
fists
sbb
sbb
shll
jae
loop
mov
enter
cmp
mov
stc
sti
xorb
mov
add
mov
ljmp
loopne
int
mov
out
or
xor
dec
pop
xchg
adc
fiaddl
loopne
sub
pushf
pusha
js
and
xor
lds
add
addr16
lahf
jp
sahf
or
clc
fstp
dec
sub
lock
lods
mov
ljmp
fmull
and
sub
xchg
sbb
outsl
adc
mov
mov
pop
pop
out
mov
pushf
popa
or
sbb
mov
mov
mov
pop
mov
lods
cmc
inc
lret
xchg
xor
push
jmp
xlat
or
add
push
subb
push
jmp
into
xor
orl
sbb
jge,pt
loop
xor
fldl2t
fxtract
add
fisubs
int
repnz
add
pop
push
add
sbb
mov
add
jo
sub
push
lock
loopne
sbb
sub
shrl
test
mov
sub
es
icebp
cld
inc
or
movsl
pop
lret
or
loope
add
test
hlt
mov
out
jae
das
inc
and
add
and
mov
adc
std
cmp
testl
movsb
sub
jae
and
loopne
pop
test
loopne
mov
in
adc
addb
xchg
push
out
cmp
insl
mov
stos
sti
add
lcall
imul
in
cmp
cmpsb
pushf
push
cltd
inc
decl
jae
cwtl
push
mov
and
xchg
inc
xor
adc
in
cmp
cmp
or
xchg
int
inc
and
movntps
jl
push
and
js
lea
std
outsl
inc
cmpl
jnp
repnz
adc
and
cmp
push
leave
imul
movsl
mov
push
fwait
xchg
cmp
jns
enter
jo
or
push
negl
jne
fwait
hlt
mov
repz
jno
push
xchg
mov
jmp
sub
das
adc
popf
jmp
insl
cmp
lock
out
das
cmp
loope
add
shrb
xchg
push
xor
add
cmp
test
xchg
jno
mov
push
hlt
pop
in
test
repnz
inc
pop
dec
push
mov
sub
inc
scas
or
mov
inc
jno
std
mov
sarl
jg
push
ret
addr16
push
cs
cli
jae
and
xor
sbb
ss
mov
gs
adc
cmpsb
inc
inc
or
add
dec
add
dec
and
in
lods
cs
fs
jo
xor
in
das
fistpl
repz
fisubrs
and
arpl
ficoml
lock
jle
lock
sbb
pop
lea
in
mov
popf
inc
test
jp
push
xchg
cmpsl
mov
xchg
into
hlt
fistps
mov
mov
jg
push
mov
ret
popa
fwait
xor
push
insb
ja
hlt
notl
mov
jb
daa
sbb
jle
sbb
jne
ret
cmpsb
jno
out
test
iret
dec
fcomps
enter
push
add
out
xchg
loope
or
pop
and
insb
jo
push
fucomi
aaa
push
pop
sub
cltd
dec
dec
addr16
rol
ljmp
inc
dec
inc
push
lea
rorl
mov
pop
rcr
mov
data16
imul
shrb
test
mov
iret
and
lods
aas
sub
stc
pushf
lods
pop
call
inc
aam
jo
adc
mov
pop
inc
inc
push
fsubrl
mov
sbb
jnp
xor
jmp
cmp
sub
jg
adc
jmp
idiv
icebp
push
outsb
or
cld
clc
mov
dec
movsl
push
pop
ja
loope
and
data16
jecxz
cli
jo
sub
cmp
adc
aam
sbb
jmp
sub
stos
adc
push
pop
fisttpl
lods
adc
push
xor
mov
ss
daa
dec
in
mov
push
xchg
or
cmpsb
std
pop
adc
sub
mov
cmp
or
sbbb
xor
mov
xor
dec
push
idivl
add
and
fldl
push
fdivl
and
aas
xchg
outsb
mov
push
cmp
sbb
std
mov
insb
bound
lcall
lret
leave
add
xorl
inc
cld
lea
add
cmpb
out
sub
in
cmp
cmp
ret
jbe
and
cli
out
mov
push
xchg
jne
dec
pop
sbb
int3
cmp
repz
insl
pop
add
jge
aaa
mov
mov
ficompl
mov
cmp
leave
cmc
push
pop
sbb
fstpt
ficoms
and
subb
loope
stos
leave
or
stc
push
shll
cli
push
test
jle
mov
add
cmp
mov
arpl
push
and
xchg
or
dec
cmp
das
inc
and
adc
mov
out
je
cmpsl
imul
rcll
push
scas
mov
jle
cmp
loop
pusha
test
lcall
cmp
or
jecxz
repnz
inc
mov
rol
pop
movsl
shrl
mov
mov
pop
jb
mov
ss
int
mov
mov
arpl
test
cli
push
nop
rcl
bound
ror
cwtl
clc
jle
and
insl
daa
add
gs
imul
outsl
fisubrs
mov
dec
xor
jbe
xor
cmc
jl
mov
cmp
jae
aad
or
mov
out
out
xchg
ret
pop
inc
mov
or
or
xor
jle
pop
pop
loop
xchg
lods
push
sarl
mov
fstpt
adc
and
jle
clc
bound
xor
mov
ljmp
xor
sbb
pop
movsb
std
in
cmpsl
cmpl
and
inc
xchg
into
repz
lods
adc
ss
jl
jb
cmp
fiadds
sbb
and
pop
repnz
test
dec
push
shll
fisttps
testl
out
in
mov
ds
sbb
mov
popa
mov
inc
jbe
mov
xor
sti
imul
out
push
cli
addr16
cmc
lea
xor
mov
test
jp
or
movsb
pushf
add
fsubl
push
fucom
lret
daa
int3
imul
ljmp
mov
imul
jae
rorl
sbbl
outsl
les
scas
data16
insl
xor
call
pop
aas
fwait
test
loope
fnstenv
cs
sbbb
decb
push
mov
xchg
xlat
push
imul
mov
popf
jle
movsb
int3
cli
cmpsl
sbb
flds
and
jno
imul
rcrb
movsb
mov
es
push
cmp
jge
scas
in
loope
mov
gs
jl
shlb
jle
mov
lret
mov
fbstp
ret
dec
push
frstor
mov
movsb
dec
sbb
mov
sbb
mov
jmp
cmp
and
aam
loop
jno
mov
in
mov
popf
sbb
dec
xchg
mov
out
mov
dec
test
popf
pop
enter
sbb
fldt
xchg
inc
daa
xor
orb
adc
test
dec
push
movsl
xchg
mov
movsb
cmp
fisttpll
jns
and
iret
mov
push
xlat
pop
cld
addl
cs
xchg
inc
mov
sahf
or
cltd
xchg
and
xchg
fcom
sahf
outsb
mov
cltd
test
mov
sbb
clc
fsub
mov
rclb
mov
mov
bound
push
or
iret
mov
jne
dec
es
inc
adcl
mov
popf
mov
add
jl
xchg
mov
or
sub
sbb
test
xchg
push
sub
xchg
push
fldcw
xor
sub
push
popf
loopne
adc
push
mov
and
sub
fwait
sahf
pop
mov
fldt
or
movsb
cmc
dec
out
mov
movsb
xchg
pop
jge
divb
jmp
rclb
je
inc
adc
aas
stc
add
lret
mov
sbbl
in
push
lret
push
add
popa
and
repnz
popaw
mov
out
lcall
daa
pop
rclb
ljmp
das
xchg
xchg
jne
mov
out
dec
loopne
jl
iret
sbb
adcb
inc
lahf
jns
mov
ja
shlb
pop
dec
mov
sbb
push
adc
sbb
adc
xlat
loopne
cmp
mov
cmp
dec
mov
sub
test
dec
sbb
mov
lret
push
sarl
mov
mov
adc
xor
test
jbe
popf
std
sbb
xchg
jo
shlb
cs
xchg
testl
in
inc
mov
sbb
ret
insb
pop
movsl
mov
rorb
mov
xor
and
add
mov
fistps
jge
mov
les
push
test
sub
xor
jno
fbstp
mov
push
mov
mov
dec
popf
aam
in
jbe
pop
sahf
andb
inc
hlt
and
cltd
inc
push
mov
call
adcl
inc
insl
dec
cltd
pushf
outsl
xchg
mov
sbb
mov
mov
rolb
cmp
rolb
sbb
push
jbe
aad
and
idivb
les
xchg
mov
aam
clc
int3
dec
mov
shr
mov
popa
popf
lock
jae
lcall
cmpsb
cmp
xchg
aad
pop
inc
mov
xchg
jle
shll
icebp
rclb
inc
or
xchg
orl
scas
jns
adc
sub
stos
rorb
insl
jbe
nop
jmp
daa
add
push
out
es
lods
iret
out
dec
ret
aad
xchg
das
je
xor
jbe
adc
push
mov
shl
xchg
mov
jecxz
sbb
xor
inc
jno
mov
cmp
adc
cmp
xchg
test
outsl
add
in
jo
add
pushw
mov
out
lcall
cmpsb
or
sub
loop
rcpps
pusha
mov
popf
lret
jecxz
jne
movsl
jnp
or
scas
mov
xchg
cmp
rolb
ja
xor
stos
jae
sti
inc
nop
out
sub
fs
sarb
mov
mov
movsl
sub
sbb
mov
sbb
movsl
pop
add
mov
insb
push
inc
jo
or
jnp
sub
sbb
add
or
mov
cmp
jae
fiadds
cs
push
lds
push
pop
std
pop
adc
int
lcall
and
clc
push
add
cmpsl
fcomi
into
xor
add
popa
cmp
add
insb
popf
sbb
int3
sbb
arpl
aad
into
ret
test
dec
sub
mov
scas
icebp
mov
xchg
mov
cltd
rcl
mov
sub
ja
fmull
or
and
iret
pop
sti
rcrl
jl
fs
stos
sbb
cmpsl
and
pop
adc
mov
mov
lret
pop
mov
rcrl
aam
sbb
mov
push
and
mov
push
mov
or
popf
and
add
out
imul
sar
in
testl
mov
xor
daa
pop
push
lea
inc
repz
outsl
xchg
xchg
in
push
bound
dec
push
ss
hlt
sti
mov
jp
lret
lcall
notl
jo
ja
movsl
aas
ret
mov
mov
cld
stos
rolb
jae
int3
cmp
stc
pop
xchg
aad
jecxz
push
fs
sbb
sub
divb
ss
adc
mov
xor
bound
mov
adc
adc
int
lahf
pop
and
pop
arpl
imul
or
xchg
inc
jb
ss
mov
rclb
add
int
xorl
pushf
mov
cmp
sbb
fildl
sub
cmp
xchg
dec
fildll
xchg
lahf
add
popa
jbe
xlat
and
jmp
sbb
dec
movsl
mov
lcall
add
pop
jae
test
xchg
xrelease
lds
addr16
sti
inc
ds
sub
xor
fisubl
mov
push
stos
int3
inc
mov
nop
jl
sbb
cli
xor
enter
nop
mov
and
cmp
mov
and
imul
sbb
stc
mov
test
mov
lods
mov
mov
cli
add
scas
jmp
and
and
or
decb
jmp
xchg
shl
jecxz
mov
adc
and
mov
stos
push
xor
roll
mov
ret
dec
test
push
cmp
inc
mov
inc
bound
lcall
mov
js
les
out
in
xchg
push
fisttpl
xor
mov
shrl
pusha
dec
push
jmp
sub
pop
pop
mov
in
dec
fsubrl
cmc
clc
clc
je
rcll
jb
enter
inc
rorb
mov
pusha
int3
adc
xor
cmpsb
in
xchg
ljmp
pop
sbb
es
mov
inc
imul
mov
push
movsl
push
mov
jo
ficoml
cli
and
ljmp
fnstenv
mov
outsb
iret
mov
shrl
mov
mov
and
fldl2t
xchg
push
pop
shr
cltd
inc
mov
ss
push
mov
mov
daa
jae
stos
loop
roll
mov
call
adc
call
and
sub
lods
into
xor
mov
xor
fists
fldt
js
les
stos
sbb
pop
cld
xchg
jnp
and
add
pushf
push
repz
xor
jne
out
in
jmp
rol
or
mov
addr16
mov
xchg
pop
repnz
push
jae
xchg
imul
fistpl
xchg
mov
fildl
sbb
inc
lock
sbb
sub
repz
xchg
ss
pusha
pop
testb
rorl
cmpsl
stos
ret
stc
bnd
fucomp
mov
pop
mov
iret
sbb
mov
adc
test
icebp
nop
loopne
mov
jecxz
and
leave
jl
cmpsl
in
inc
sbb
inc
and
hlt
and
adc
mov
test
dec
fistps
mov
stc
xorl
xchg
cwtl
xor
xor
jne
iret
lods
ja
sub
ljmp
or
sbb
cmpsb
mov
pop
scas
adc
in
sub
lods
dec
push
fnstcw
and
bound
push
stc
addr16
cld
jle
cmp
std
ljmp
push
pop
jle
adc
movsb
lds
dec
push
mov
mov
stos
mov
push
bound
mov
mov
stc
and
aaa
push
call
mov
sti
addl
les
ds
add
popa
fcomps
mov
out
in
int
cmp
mov
shlb
cmp
push
int
popa
mov
pop
mov
mov
js
gs
clc
mov
loope
adc
push
and
jg
iret
insb
mov
outsl
sub
adc
xor
lcall
jp
arpl
mov
and
pop
lods
push
enter
xor
cmp
mov
pop
movsb
jmp
jg
call
jae
mov
xor
and
test
adcl
xorl
js
fiaddl
pusha
clc
mov
rorb
and
mov
loope
enter
lret
stc
adc
andb
sahf
xor
cmp
cvtps2pd
fnstcw
dec
std
add
iret
sub
dec
fdivp
fcoml
inc
push
roll
imul
sbb
and
into
xchg
dec
cmp
int
mov
stc
stos
mov
sahf
out
pop
jnp
mov
adcb
and
mov
cmpsl
dec
ret
add
mov
inc
or
in
stc
xadd
mov
push
xchg
inc
jmp
test
pop
push
std
ja
sub
aaa
or
jbe
mov
loopne
stc
popf
mov
jo
push
in
inc
pushf
cltd
repnz
rcrl
pop
or
jae
cltd
fisubrs
repz
pop
mov
and
or
pop
mov
xor
dec
and
cmp
enter
pop
push
out
jne
notb
mov
adc
or
insl
fistpl
imul
push
imul
cmc
pmullw
popf
sbb
test
pop
fidivl
sub
test
xlat
notb
dec
cmp
dec
xchg
adc
bound
inc
inc
jb
fsubr
and
clc
decb
and
mov
enter
rcl
loop
icebp
das
dec
data16
inc
popf
roll
decl
pop
sti
push
mov
aaa
int
jae
ja
push
mov
push
cs
nop
mov
mov
push
xchg
mov
push
hlt
and
mov
ljmp
cmp
push
mov
xchg
xchg
adc
cmp
sbb
or
jns
mov
push
in
sbb
inc
loope
and
jg
fwait
push
jecxz
shll
pop
pushf
xchg
out
jne
mov
or
repz
push
dec
adcl
lret
test
fld
xchg
fadds
and
rorb
pop
aas
jns
xchg
out
lret
push
scas
je
pop
pop
cmp
lret
je
scas
imul
in
add
fsub
jmp
mov
mov
subb
out
cmp
pop
pop
orl
outsb
inc
push
mov
inc
sub
mov
cwtl
jb
pop
mov
lret
fdivs
adc
je
outsl
lea
cmpsb
jl
xchg
pop
sbb
jecxz
sbb
cmp
sub
add
bound
jmp
mov
mov
call
jecxz
fcompl
ja
fisubs
mov
aaa
js
out
sti
jbe
push
iret
icebp
aam
and
sti
and
fcomps
in
stc
add
out
jo
addr16
popa
rclb
inc
in
mov
mov
add
dec
test
push
rorl
lret
rorb
andb
test
hlt
test
pop
mov
je
xchg
push
mov
xchg
pminub
jns
add
stos
test
cmpsb
dec
call
mov
sti
dec
sub
add
lods
ret
inc
rcl
js
jp
sbb
dec
movsl
inc
fimuls
dec
pop
pop
call
cmp
fsubrs
dec
xorb
jo
dec
rolb
push
shll
mov
shr
jno
sbb
add
fstpt
adc
jg
das
mov
cmpsl
iret
lea
sbb
sub
test
ljmp
mov
rcll
mov
or
cltd
pop
rcr
into
frstor
inc
bound
pop
jb
jle
sub
rorb
xor
in
test
loope
inc
pop
mov
ja
ret
fnstenv
dec
mov
mov
dec
xchg
mov
dec
cwtl
es
insb
and
push
fmull
das
sarl
pop
xchg
lock
fdivrs
cs
aas
sbb
dec
dec
icebp
xor
cmp
mov
aam
inc
mov
dec
dec
test
mov
jo
add
adc
pop
mov
jne
test
mov
and
out
cld
push
scas
add
cmp
sbb
test
inc
mov
push
in
jo
shrl
pop
mulb
push
mov
jecxz
cmp
mov
movsl
push
push
xchg
jae
test
jne
int3
mov
and
xchg
xchg
aas
add
dec
cwtl
les
push
hlt
andl
jbe
mov
add
ret
add
add
test
cmp
rcrb
movsb
or
ds
int3
lods
gs
pop
mov
lahf
imul
fldl
neg
inc
mov
sbb
dec
push
shl
fiadds
push
shll
ret
loop
pop
mov
in
cli
shrl
enter
mov
popf
inc
mov
fdivrp
jb
sub
cmp
mov
cmp
fnstsw
arpl
push
ficomps
and
nop
cmc
popa
mov
mov
push
push
or
pushf
cmc
add
loope
shll
and
subb
inc
push
repz
aad
pop
pushf
testl
sarl
add
fsub
mov
lret
sub
mov
push
sahf
pushf
lods
xor
xor
pop
stos
cli
dec
jo
in
pop
mov
lcall
mov
inc
mov
movsb
inc
sub
das
inc
sbb
cmpsl
or
fidivrs
rcll
dec
sub
rorl
add
cmp
mulb
dec
adc
sbbl
sbb
int
and
scas
stc
dec
leave
jae
dec
scas
push
jg
dec
pop
call
sti
ljmp
in
cmpsl
sbb
and
mov
popf
jmp
push
sarb
ljmp
cmp
loope
fisttpl
jge
insb
inc
cmpl
adc
xlat
jo
and
xor
jp
xlat
lea
pop
fcompl
ret
js
sbb
data16
test
jns
jecxz
xor
out
dec
cs
mov
and
dec
xchg
into
xlat
or
cs
dec
dec
out
and
mov
push
lods
pop
sub
mov
ds
test
lcall
bound
sbb
push
fldt
xlat
out
mov
stos
movq
sub
jns
lret
xchg
fs
or
negl
in
clc
push
dec
cmp
adc
arpl
push
jle,pt
mov
jecxz
mov
fists
ret
adc
pop
adc
lods
cs
pop
push
pop
xor
add
jo
mov
xorl
shrd
rep
mov
adc
inc
mov
push
push
push
or
ret
push
push
test
mov
mov
rcrl
data16
out
or
in
hlt
mov
arpl
push
test
inc
clc
xlat
scas
cvtps2pd
fimuls
inc
push
pop
divl
mov
xor
sub
jnp
andl
stos
ret
stc
aaa
mov
adc
xor
mov
mov
negl
pushf
mov
mov
pop
jb
mov
mov
add
push
jg
inc
add
negb
addr16
mov
loopne
push
inc
in
les
cltd
add
repnz
pop
lahf
out
xchg
mov
stc
cmp
lahf
jmp
jmp
adc
pop
popf
and
cmpsl
movsl
sbb
out
loop
movsl
pop
repnz
add
cmpsb
scas
fstpt
add
jecxz
shll
fucomi
insb
dec
pop
mov
ja
jns
movsb
dec
mov
inc
cmpl
mov
mov
lahf
in
sub
xchg
sarl
push
dec
dec
and
ss
iret
lahf
mov
pusha
mov
sarb
sub
or
cwtl
ret
and
arpl
bound
std
xor
les
xchg
movsl
fcomps
jp
lods
nop
sahf
inc
adc
and
hlt
faddl
push
mov
push
sbbl
movb
sahf
cld
mov
shrb
xor
mov
add
mov
pop
hlt
movsl
fldt
xchg
data16
repz
pop
test
mov
mov
jno
dec
mov
inc
lods
sahf
sub
aas
sub
je
jle
adc
jecxz
mov
lcall
xchg
push
arpl
mov
inc
stc
sub
sti
loop
dec
xor
andb
xor
push
mov
jb
add
sahf
out
je
fisubl
jle
adc
jb
aaa
mov
dec
xor
and
cmpl
repz
mov
jecxz
or
or
sti
pop
adc
popa
lods
push
shl
or
int
loop
mov
jge
mov
cs
dec
jne
pop
ds
arpl
add
jl
mov
xor
ret
jge
xor
xchg
cmpsb
xor
sti
iret
in
out
repz
sbb
jecxz
sti
xor
add
adc
sbb
pusha
adc
xor
mov
jns
push
cmpl
push
cmc
ljmp
lret
and
cmovno
sbb
pop
imul
dec
xlat
cli
lcall
sbb
adc
xchg
dec
mov
xchg
fcoms
xchg
cli
mov
xchg
mov
inc
adc
out
movq
dec
leave
out
inc
pop
or
or
pop
nop
or
mov
push
jnp
adc
lods
sub
in
cwtl
fwait
jl
leave
push
push
mov
jp
jmp
push
push
sbb
pop
stos
clc
divl
and
mov
mov
ljmp
stos
mov
loop
mov
mov
lret
sti
ljmp
xor
dec
movsb
fmul
adcb
fistpl
pop
es
mov
cmp
addr16
push
out
jmp
xchg
cltd
popa
dec
mov
imul
lret
xchg
push
das
shrl
daa
fistpll
pop
shl
pop
roll
add
mull
outsl
mov
test
xchg
in
sbb
mov
or
mov
push
movsl
add
and
stos
push
adc
mov
icebp
rcrl
jecxz
pop
fbstp
jo,pn
insb
dec
out
and
ja
push
cmpsl
push
in
mov
ds
movl
mov
int
xor
mov
test
mov
aam
aam
and
cmp
jge
jmp
mov
lret
or
lds
adcl
bound
hlt
adc
popw
out
dec
out
xor
mov
mov
pop
test
dec
out
jb
mov
mov
mov
int3
mov
lcall
inc
mov
jecxz
add
call
insl
lret
pop
mov
dec
inc
jne
push
repnz
add
jmp
pop
cmp
adc
push
push
or
inc
and
stc
mov
xchg
push
add
jle
lods
popf
or
sub
add
sarb
mov
dec
mov
jnp
and
aas
fs
xchg
mov
gs
aaa
mov
mov
push
lds
loopne
adc
scas
sub
jg
xor
inc
enter
pop
gs
mov
into
ja
jns
xor
ss
xor
loop
test
push
addr16
mov
out
les
jb
cmp
push
adc
aas
adc
inc
mov
sbb
pop
adc
jle
jl
scas
mov
or
dec
fs
notb
je
and
jbe
cmp
repnz
mov
js
cs
in
es
int3
push
adcb
aam
add
dec
dec
mov
fadd
adc
xorl
xor
pop
jb
push
sbb
stos
xchg
push
add
jle
lods
scas
or
jbe
add
rorb
ret
cld
jle
xor
mov
mov
loop
sub
fiadds
mov
in
cmp
mov
dec
mov
cmp
jge
scas
jo
into
arpl
push
lret
dec
or
jle
test
data16
popf
add
stc
scas
ret
hlt
adc
mov
insb
insl
adc
rorb
aaa
cmp
sti
or
xchg
outsl
add
push
push
int
aas
adc
push
mov
jp
sbb
sbb
loopne
sahf
addl
enter
pop
lods
mov
jae
test
mov
sub
and
mov
out
and
add
xor
fs
sub
sbb
loop
mov
inc
cli
sub
in
pop
pop
mov
shll
faddl
mov
icebp
adc
loopne
insb
push
das
enter
mov
and
insl
lcall
cmp
dec
add
ja
mov
push
mov
and
mov
cld
fcoms
sub
sbb
and
jl
add
mov
mov
push
in
inc
jb
and
sub
jno
mov
ds
cmp
into
push
cmpsb
mov
out
scas
jne
iret
ds
sbb
xchg
lds
mov
push
xor
push
out
sub
inc
movsl
mov
sub
mov
mov
scas
fiaddl
lea
div
adc
aas
scas
outsl
jl
push
sub
xchg
jnp
popf
jb
and
out
xchg
sahf
hlt
sbb
mov
lea
jecxz
mov
and
inc
mov
scas
test
lds
dec
int3
dec
das
sub
dec
xor
ja
push
out
hlt
push
scas
popa
cld
faddl
sub
xchg
scas
cmpsl
jmp
les
jbe
xor
fildll
orl
scas
sub
adc
es
inc
pop
das
lret
loope
push
inc
sub
lods
sub
mov
cwtl
lds
test
push
pushf
fisttpll
push
stc
flds
add
xor
xchg
lds
adc
push
or
fdivl
mov
movsl
decb
jmp
add
test
add
lret
pushf
dec
std
mov
or
fwait
mov
add
ds
loopne
mov
dec
ds
fimull
xchg
inc
xchg
dec
clc
bound
jecxz
es
scas
dec
test
das
daa
jns
lret
je
repz
sbb
push
cmpsb
inc
push
jnp
cmp
insb
push
dec
add
insb
std
gs
daa
shrl
stos
add
std
outsl
lods
mov
jle
mov
lock
jne
loopne
out
mov
xchg
dec
fwait
or
sbb
movsl
push
adc
adc
cmp
fmull
test
adc
je
sub
movsb
das
loopne
sub
xor
jbe
dec
ret
push
add
sahf
scas
cmp
xchg
or
stc
and
cmpb
mov
sub
adc
fldl
pop
int
out
test
mov
ficoml
js
imul
lods
pop
add
stos
out
lods
gs
xor
mov
pop
dec
lret
and
in
mov
movsl
or
adc
pop
rcrb
sti
mov
pop
cmp
sbb
sarl
cld
out
cmp
ss
gs
add
jmp
pushl
mov
inc
iret
in
xchg
or
divb
bound
mov
iret
xor
jbe
mov
ret
outsb
bound
inc
sub
incb
xchg
dec
mov
pusha
mov
clc
push
jnp
xor
jmp
xchg
lcall
outsl
sar
popf
xlat
sbb
not
cmp
jb
adc
stos
mov
clc
ds
out
mov
insl
inc
push
sub
clc
jb
test
dec
gs
inc
mov
out
adc
xchg
and
inc
adc
arpl
fwait
js
push
test
mov
fiadds
dec
and
cltd
inc
pushf
mov
add
popf
leave
xor
lea
xor
mov
xchg
sbb
ljmp
jno
int
push
lock
jge
es
out
dec
xchg
mov
jne
mov
les
cmp
adc
stos
and
or
jnp
push
jl
loopne
jbe
fdivrl
movsl
mov
mov
outsb
sbb
inc
sbb
push
outsl
mov
lock
sbb
pop
push
imul
ljmp
lock
stos
xchg
cmp
ljmp
ljmp
pop
ja
and
clc
jo
sub
sbb
inc
cmp
mov
or
fwait
mov
frstor
sbb
aaa
or
cltd
ljmp
sar
fs
jbe
jbe
cs
mov
sahf
divb
push
jne
shr
xor
dec
xor
push
test
lret
mov
xchg
sbb
int3
dec
dec
daa
adc
cmpsl
cmp
popf
ret
cmp
gs
iret
ficoml
repz
lea
scas
dec
pop
fwait
or
icebp
jg
mov
imul
inc
lret
orl
lds
jo
test
fmulp
mov
out
pop
cmpsl
lock
mov
fs
or
test
dec
arpl
jge
mov
sbb
mov
loope
subl
mov
and
ja
cli
mov
xchg
loop
mov
xor
push
dec
sub
aas
and
xchg
mov
xchg
jecxz
clts
inc
repnz
mov
mov
push
xor
push
dec
out
adc
xlat
in
cmp
and
inc
iret
out
xchg
leave
imul
push
sbb
push
movl
ret
mov
cwtl
sbb
mov
xchg
xor
xchg
and
add
ds
lret
mov
mov
and
ja
leave
mov
aas
push
arpl
xchg
mov
popf
jo
lock
repnz
push
xor
call
testl
add
ja
and
scas
nop
pop
ds
cwtl
std
push
mov
dec
popf
in
int3
cli
add
mov
adc
cli
lahf
xadd
stos
xchg
outsb
enter
xor
jns
jnp
inc
stc
dec
jno
add
into
into
xor
pop
dec
and
push
dec
mov
jb
out
stos
xchg
push
push
mov
insl
add
inc
push
jp
xchg
sti
loop
and
ret
sbb
hlt
push
mov
aaa
data16
orps
xchg
jns
dec
cmp
xorb
xor
movsl
inc
cli
nop
js
and
outsl
push
and
fidivs
jg
cmpsl
dec
repnz
mov
push
add
cmp
scas
aad
or
fbstp
or
outsb
es
fstl
arpl
out
scas
cli
xchg
sub
xchg
xor
bound
mov
cmp
xchg
push
test
pop
inc
lods
jecxz
lahf
shll
and
dec
xor
out
xchg
insb
aam
jo
dec
lahf
add
sbb
sbb
and
adc
divl
dec
subb
imul
dec
mov
cli
or
out
sbb
sahf
cmpsb
ja
test
in
shll
dec
sarl
pusha
dec
add
jp
movsb
rcrl
clc
sub
xor
add
mov
push
lods
shrb
or
or
and
add
or
jns
fidivl
decb
sbb
mov
cltd
and
mov
sbb
dec
fcompl
pop
sbb
imul
dec
loopne
cmp
repnz
jbe
sub
xor
ja
lds
cltd
mov
imul
mov
inc
imul
int3
pop
aam
jmp
movsb
and
sbb
mov
mov
cmpsb
popa
lods
add
in
push
adc
outsl
movsb
or
push
mov
fldt
repnz
cmp
loop
xchg
mov
add
ja
icebp
dec
jbe
enter
jo
jge
cmp
loop
xor
fdivs
add
mov
pop
imul
xchg
and
inc
fsubrl
pop
xchg
inc
lea
popa
and
sub
stos
dec
nop
lcall
sbb
dec
jne
xchg
ret
xchg
cli
jns
xchg
in
scas
xchg
sbb
push
mov
popa
gs
insl
push
lahf
gs
js
fidivl
mov
jae
sub
lret
mov
daa
ss
pop
pop
xchg
lcall
mov
lods
dec
and
and
leave
adc
fildl
hlt
mov
lret
cmpsl
leave
aad
sbb
sbb
xlat
push
pop
and
ret
xchg
lock
xchg
and
sub
pop
dec
fsubrs
or
push
aam
lret
lcall
jb
and
stos
and
push
fcoml
cwtl
out
fstps
push
dec
aad
dec
loopne
mov
xchg
enter
sub
xor
icebp
jbe
lahf
cs
mov
or
idiv
jns
add
jno
cmp
pop
inc
mov
mov
dec
xlat
call
test
dec
sub
xchg
adc
mov
sub
sbb
fcomp
lcall
das
inc
lcall
and
lock
cltd
sub
mov
neg
loop
xchg
stos
inc
jmp
lds
ret
dec
seta
outsl
mov
push
inc
pop
sbb
cmp
jnp
aas
jp
and
push
cmc
inc
fwait
add
sbb
xor
dec
iret
negl
or
daa
cmc
mov
push
es
repz
dec
cmp
xchg
xchg
loope
insl
cmp
aam
cmpsl
mov
jl
ss
lcall
dec
xchg
sub
inc
out
jnp
mov
icebp
jmp
pop
nop
out
dec
out
adc
das
es
push
mov
sarl
add
sbb
sub
repnz
add
mov
xchg
push
cmp
jb
lock
shll
nop
das
mov
push
xchg
insl
test
inc
jp
xchg
sub
cmpsb
fdivrs
rorl
xchg
mov
pop
xchg
in
push
dec
loopne
mov
jge
std
rcrb
aaa
test
out
push
movsl
scas
cmp
in
into
dec
sub
insl
frstor
jmp
pop
nop
adc
push
jne
test
popf
les
pop
mov
mov
out
sar
int
adc
cs
push
mov
jecxz
insl
pop
mov
add
loop
mov
cmp
call
dec
loopne
push
xchg
sbb
dec
adc
out
stos
stos
and
pop
mov
lret
sahf
push
sub
mov
xchg
movsb
sbb
xchg
mov
outsl
lahf
mov
add
jp
gs
mov
cmp
xor
cmpsl
cmpsl
jmp
or
hlt
leave
into
in
jne
mov
popf
aaa
dec
jle
mov
jecxz
sub
pop
leave
repz
int
xchg
inc
ljmp
adc
das
fadds
dec
fsts
js
jmp
or
inc
dec
adc
dec
push
cmp
inc
les
xchg
add
jmp
lret
stos
xchg
add
cli
push
inc
jae
fs
lods
mov
push
dec
pop
mov
sbb
clc
cmpsl
jns
fs
push
add
stos
pop
fwait
xchg
ljmp
cmp
mov
adc
xchg
inc
movsl
mov
aad
and
cmovp
jg
fwait
das
pop
inc
mov
faddp
sub
mov
fisttpll
int
jno
addl
sub
gs
decb
and
pop
pop
xchg
ret
lds
repnz
aaa
or
pop
jae
sub
and
cli
mov
dec
test
orl
jne
xchg
xor
loopw
sub
jne
fstpl
inc
push
out
pop
push
dec
push
push
and
fidivl
call
int
hlt
mov
enter
and
and
mov
les
xor
xchg
fisttpl
cli
inc
movsl
or
mov
mov
inc
inc
xchg
shlb
sahf
bswap
mov
xchg
adcb
xor
outsb
imull
out
push
fmuls
xor
int3
fiaddl
sub
sub
js
bnd
movsl
aad
sub
shll
sbb
inc
inc
mov
es
pusha
or
and
jl
test
cs
mov
out
add
mov
jae
or
add
testb
fimuls
xchg
pushl
call
push
aas
int3
pushf
icebp
fistps
push
xchg
testb
xor
xor
or
xadd
mov
inc
pop
xchg
push
add
jnp
adc
aad
jmp
add
sbb
sbb
dec
mov
sti
call
pop
in
and
test
or
fistpll
ficompl
sub
xor
inc
push
sbb
sub
push
cltd
push
fadds
mov
lods
sbb
stos
or
mov
inc
adcb
shll
cmp
cmp
mov
fldl
lds
cmp
sbb
inc
loopne
jno
adc
lahf
cmp
or
cmp
shll
xor
loopne
sub
nop
xchg
push
repnz
xchg
clc
jg
cmpl
ja
loopne
sub
stc
cmp
leave
in
jne
add
xchg
ret
fcoms
dec
mov
sbb
fucomp
or
mov
push
out
adc
mull
and
push
sbb
fldl
push
or
lret
dec
call
xchg
xor
jle
and
sub
insb
xchg
jnp
xchg
cmpsb
or
push
rcr
mov
jl
ret
idivl
and
stos
mov
loope
mov
pop
ret
xor
ss
push
xlat
aam
dec
push
popf
fwait
shrl
repz
cs
cltd
mov
or
jp
xor
push
ljmp
pop
jge
inc
testl
js
in
incl
sbb
cli
popf
and
ret
call
movsl
mov
push
mov
imul
dec
xchg
jbe
les
test
out
or
sub
cmp
iret
aam
lcall
subl
jnp
rcll
sub
sti
inc
ss
jecxz
cmp
mov
xchg
pop
jmp
repnz
xor
mov
iret
adc
cwtl
xchg
adc
out
dec
sub
std
aad
push
xchg
loope
nopl
add
add
xchg
xchg
jecxz
js
pop
or
mov
loopne
repz
clc
sbb
cwtl
pop
sahf
and
adc
repz
out
add
mov
mov
lock
sbb
loopne
fisubl
pop
ret
je
imul
sbb
pop
aas
mov
sub
sub
inc
arpl
dec
rcll
or
out
push
sub
loope
jg
lret
xchg
dec
filds
cwtl
std
subb
cs
adc
xchg
insl
lahf
pop
ficoms
push
xor
pop
push
fsubr
js
and
xor
popf
je
cli
out
pushf
int
sahf
in
mov
mov
push
jge
jnp
lcall
fisttpl
fwait
sub
xor
int3
or
icebp
arpl
sub
add
aas
hlt
hlt
jecxz
add
sti
arpl
push
stos
loope
xchg
and
push
jge
sub
popf
out
pusha
push
mov
icebp
push
inc
xchg
les
cmpsl
cli
pop
add
and
mov
arpl
idivb
xlat
or
scas
jne
xchg
jle
pop
lds
inc
pusha
insb
nop
outsb
jp
in
loopne
xchg
mov
mov
fdivrs
fs
xchg
inc
adcl
pusha
sub
lret
outsl
insl
adc
mov
sbb
cmc
or
div
mov
loopne
outsb
cli
inc
pextrw
stc
or
pop
pop
xchg
stc
scas
cmp
scas
and
in
lock
jecxz
xor
push
sbb
out
and
daa
iret
add
mov
pop
movsb
mov
fwait
pop
movb
jle
test
outsl
test
rcrb
xor
ds
mov
in
xor
ja
aas
scas
int
mov
lahf
fadd
and
xchg
loopne
mov
insl
mul
scas
jmp
cmp
jp
fs
iret
mov
cmpsb
lret
loope
pushf
iret
insb
leave
sub
xchg
sbb
loope
xor
out
inc
iret
lods
cld
or
push
movsb
int3
pop
shlb
xchg
stos
pop
fwait
xor
insl
in
mov
or
xchg
outsl
adc
outsw
aas
stc
mov
test
adc
inc
clc
stos
mov
inc
adc
movsb
cmp
mov
pop
int3
inc
xor
adc
lcall
insb
lods
xor
mov
loop
xchg
mov
sbb
jno
push
xor
xchg
std
push
imul
push
lds
mov
inc
or
cmp
dec
addr16
in
mov
repnz
jnp
adc
shl
and
mov
inc
jo
pop
stc
shlb
inc
test
jg
push
mov
in
jle
scas
call
add
loop
loope
cmp
mov
out
insl
jns
mov
push
xchg
cmp
push
ficompl
mov
add
mov
into
insb
bound
rcr
addr16
xor
les
inc
movsb
insb
stc
xor
xor
adc
mov
jle
and
sbbl
in
popa
mov
adc
pop
xlat
jne
mov
lods
pop
cmp
mov
and
dec
xor
decb
lahf
xlat
fisttpll
xchg
jb
mov
call
mov
int
outsb
jno
cmp
lret
and
adc
mov
ja
mov
jge
jns
cltd
fdivl
pusha
mov
es
mov
incl
inc
fisttpl
dec
int
sti
pop
jg
test
leave
cmp
dec
aaa
sarb
fsts
or
scas
popf
mov
push
loop
xchg
fisttps
push
jnp
jmp
icebp
xor
mov
dec
add
loopne
int3
das
dec
pop
insb
and
lods
sub
movsl
cwtl
push
mov
mull
mov
dec
data16
fs
pmullw
inc
cld
push
icebp
and
jg
sbb
repnz
jne
lods
fisttps
and
cmpsb
and
sbb
dec
clc
mov
push
mov
lods
stos
fucomi
lds
xor
dec
in
and
repnz
fcoms
and
out
mov
and
movsb
and
cwtl
cmpl
inc
lcall
iret
jmp
gs
nop
jb
sarb
mov
out
jbe
or
jl
sub
leave
xchg
xor
adc
rcrb
pushf
pop
pop
push
and
dec
pop
fisubl
pop
pop
aaa
test
pushf
sub
pop
psrld
hlt
pop
jae
push
cmpsl
dec
test
xchg
pop
idivb
or
pop
scas
sbb
pop
lods
cmp
and
movsl
lods
mov
adc
shrb
push
xchg
popf
sbb
mov
add
add
enter
in
or
jmp
insb
pop
ja
std
popa
inc
jp
jo
xlat
ss
dec
pop
sbb
inc
adc
cli
push
push
repnz
and
cmp
addl
xchg
xlat
outsb
aas
add
jb
pop
pop
pushf
or
and
xchg
inc
scas
pop
inc
mov
push
outsl
pop
jb
jbe
in
xchg
jl
add
mov
cmpsb
push
mov
fs
or
jbe
lock
jl
xchg
push
sbb
dec
repz
sahf
mov
ret
pop
sbb
push
or
imul
mov
arpl
pop
xor
cli
sbb
inc
pop
loop
ret
sbbl
jno
push
sub
call
xor
mov
pop
cmp
movsb
fsubl
xchg
adc
jmp
outsl
adc
test
inc
push
dec
push
outsl
rclb
push
jmp
fldenv
xchg
pop
sub
cmp
xchg
push
mov
rclb
lods
out
call
cld
imul
fmull
xlat
fidivs
lret
repz
sbb
and
hlt
rcll
cwtl
push
add
sti
adc
pop
adc
int
inc
mov
es
call
add
mov
add
icebp
je
iret
push
mov
pop
or
push
mov
push
xlat
mov
and
sti
stc
loopne
in
mov
shrb
rorb
dec
mov
lahf
rcrl
inc
mov
xor
inc
adcl
sub
sbb
add
inc
cmpsb
in
or
jnp
mov
adc
gs
inc
push
popa
mov
adc
xor
nop
xor
inc
fs
mov
pop
enter
pop
loop
lods
push
dec
add
int
ljmp
and
add
jp
mov
pop
or
push
push
push
cld
add
das
addl
cltd
je
cs
aad
mov
jae
adc
mov
adc
jnp
xchg
xchg
mov
pop
clc
sti
in
test
xchg
mov
inc
cld
in
mov
push
mov
ljmp
popa
aaa
orb
sbb
mov
and
dec
scas
mov
lret
adc
sbb
inc
aaa
pop
les
push
xor
in
xchg
daa
mov
cmp
arpl
add
push
inc
es
aaa
mov
pop
fwait
cmp
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rolb
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
lods
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
add
add
add
outsl
add
insl
add
outsb
add
add
add
inc
add
and
inc
add
and
inc
add
push
add
add
je
add
jae
add
add
cmp
or
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
ja
ja
ja
add
popa
add
add
outsl
add
add
inc
add
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
push
add
add
je
add
jae
add
test
xor
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
sub
arpl
sub
and
xor
xor
xor
xor
and
jae
popa
add
add
outsl
add
and
and
inc
add
add
add
imul
je
jae
and
push
add
jae
add
jbe
add
add
or
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
add
add
ja
ja
add
popa
add
add
outsl
add
add
inc
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
push
add
add
inc
add
add
push
add
sub
add
je
add
jae
add
add
sub
push
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
push
add
sub
add
je
add
jae
add
cmp
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
jae
add
add
add
js
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
inc
xor
add
add
insb
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
repnz
sbb
and
ss
ds
ds
js,pt
test
lcall
ds
ds
aas
pop
aas
arpl
cmpb
aas
xchg
aas
pushf
aas
lods
aas
mov
add
dec
ss
ss
xchg
xchg
ss
cmpsb
ss
aaa
inc
aaa
push
aaa
fs
mov
shlb
aaa
hlt
aaa
cmp
popa
cmp
cmp
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
popf
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jbe
jg
mov
popf
cmp
xor
xor
xor
sbb
and
xor
xor
cmp
xor
xor
push
xor
xor
outsb
xor
xor
xor
xor
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
cmpsb
xor
xor
xor
xor
and
sub
xor
nop
xor
xor
xor
add
mov
cmp
mov
cmp
cmp
mov
cmp
push
cmp
lea
xchg
cmp
cmp
cmp
aas
int3
aas
sarl
in
aas
icebp
aas
add
add
xor
mov
shll
xor
xor
xor
xor
xor
xor
xor
push
jbe
xorl
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pushf
ss
cmp
inc
ss
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
cmp
xor
add
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
cmp
push
cmp
cmp
cmp
cmp
sarl
loop
repnz
cmp
mov
cmp
mov
ds
arpl
lahf
ds
idivb
sub
pop
aas
jl
or
adc
adc
mov
nop
xor
xor
xor
xor
xor
push
xor
xor
xor
xor
xor
push
xor
xor
js
mov
xor
xor
xor
xor
xor
and
cwtl
xor
jae
aaa
popf
aaa
cmpsl
aaa
mov
fdivl
loope
dec
cmp
cmp
cmp
cmp
cmp
xchg
mov
enter
sub
jnp
outsb
cmp
add
add
add
add
cmp
cmp
cmp
mov
cmp
cmp
push
cmp
cmp
mov
mov
cmp
cmp
cmp
sub
cmp
cmp
cmp
cmp
jb
ja
cmpsb
cmp
cmp
cmp
pop
cmp
push
cmp
jl
cmpb
cmp
cwtl
cmp
movsb
cmp
mov
mov
mov
cmp
lods
xor
xor
dec
xor
xor
xor
xor
xor
xor
xor
ss
lea
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
fnstenv
xor
xor
add
getsec
sbb
mov
xor
xor
push
xor
jle
leave
and
xor
inc
aaa
add
add
add
xor
xor
xor
mov
cmpsb
cmp
cmp
cmp
cmp
cmp
cmp
mov
cmp
xchg
cmp
cmp
cmp
cmp
cmp
into
aas
in
aas
clc
aas
aas
add
add
add
jb
cmpsb
xor
xor
xor
xor
xor
cmp
push
xor
jl
xchg
xor
xorl
xor
xor
xor
xor
xor
xor
cmp
xor
mov
ss
sbb
and
out
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aas
loopne
add
add
add
add
fwait
xor
xor
xor
xor
xor
xor
jnp
xorl
mov
out
lock
adc
ss
cmp
cmp
cmp
cmp
mov
sarl
cmp
cmp
imul
sbb
daa
xor
inc
mov
xchg
ds
ds
mov
xchg
aas
movsl
aas
add
add
inc
aas
addr16
test
aas
mov
add
xor
nop
ss
aaa
movsb
aaa
shll
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
insl
cmp
lea
popf
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
fdivrl
mov
aas
and
xor
xor
xor
ja
jge
xchg
aam
loopne
jmp
clc
xor
xor
xor
xchg
xor
xor
xor
mov
nop
xor
fdivl
stos
xor
xor
xor
xor
xor
xor
ret
xor
xor
cmp
inc
xor
pop
xor
xor
xor
xor
sbb
outsb
xor
xor
xor
xor
xorb
add
add
xchg
adc
lahf
cmp
mov
cmp
cmp
cmp
cmp
cmpsb
cmp
enter
jnp
lcall
ds
cmp
cmpl
aas
lock
cmc
aas
add
xor
mov
mov
xor
mov
fidivl
out
repz
mov
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
arpl
xor
aaa
cmpb
cmp
cmp
or
cmp
jecxz
cli
xor
popa
ss
ss
aaa
scas
aaa
mov
aaa
jmp
cmp
or
add
add
pop
cmp
cmp
cmp
cmp
xchg
cmp
push
aas
idivb
cld
aas
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
test
mov
test
pop
xor
ret
xor
fidivl
fbstp
sub
aaa
jo
loopne
in
jo
jne
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmpl
cmp
cmp
add
add
xorb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
sbb
and
xor
xor
cmp
xor
xor
push
xor
xor
outsb
xor
xor
xor
xor
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
adc
push
xor
and
sub
xor
cmp
inc
xor
dec
xor
pop
xor
xor
jo
jbe
jl
add
add
movsb
add
add
fs
mov
mov
cwtl
aas
pushf
aas
mov
aas
fdivrs
mov
cld
aas
aam
clc
aas
xor
cmp
cmp
inc
xor
xor
xor
xor
insb
xor
je
js
jle
xorb
xor
mov
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
enter
sarb
aam
call
ds
ds
aas
add
add
mov
mov
mov
nop
ds
ds
ds
mov
lods
ds
mov
mov
les
enter
sarb
aam
fdivrs
fdivrl
loopne
in
call
xor
xor
xor
xor
xor
xor
sbb
cmp
inc
xor
inc
xor
xor
cwtl
xor
mov
xor
xor
xor
xor
xor
xor
xor
mov
mov
xor
or
int3
ss
xchg
cmp
ds
xor
xor
cmp
cmp
inc
ds
ds
ds
ds
ds
ds
ds
ds
ds
je,pt
js
jl
cmpb
loopne
add
add
add
cmp
cmp
cmp
sub
sub
adc
adc
sbb
sbb
and
and
sub
sub
in
call
cmp
cmp
cmp
cmp
cmp
js
adc
dec
ds
ds
add
pushf
xor
test
lods
xor
mov
xor
int3
xor
fdivl
call
ss
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
js
jl
xorb
mov
mov
nop
ss
lods
ss
mov
les
add
add
add
add
xor
or
or
mov
mov
mov
and
.byte
