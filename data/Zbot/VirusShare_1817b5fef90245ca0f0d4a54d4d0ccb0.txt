repnz
mov
ljmp
divb
mov
fistl
mov
enter
mov
int
xchg
decl
sub
or
and
rdmsr
out
and
adc
pop
packsswb
je
xchg
icebp
push
gs
fs
xlat
jg
pop
fsubrs
outsl
jge
cmp
push
mov
xlat
pusha
fcoms
jb
imul
imul
je
imul
ljmp
testl
jmp
xor
mov
xchg
lods
iret
mov
in
rorb
fstpl
xchg
fcoms
mov
sbb
data16
adc
xchg
push
pushf
filds
push
fadds
xlat
push
push
fcmovnbe
pusha
fdiv
popa
pop
dec
fadds
xlat
mov
inc
gs
pushf
sub
lods
mov
into
pop
leave
push
pusha
fadds
popa
fadds
aad
fs
or
pop
fsubs
stc
push
flds
cmpsl
pusha
fadds
test
jmp
dec
jo
lea
dec
out
cmpsl
cmc
sbb
adc
xlat
adc
js
aad
pop
data16
push
popa
subb
sarb
arpl
adc
lods
test
or
not
sub
dec
flds
fsubs
or
dec
fcmovnu
test
pusha
jbe
push
push
adc
xchg
mov
pop
cmp
jg
and
daa
pop
pop
jnp
dec
in
mov
bound
mov
or
aam
iret
not
xor
lcall
arpl
xchg
out
mov
jg
cmp
sub
push
adc
xchg
inc
aad
iret
aad
jg
pop
dec
ds
ja
adc
fsubrs
lret
popa
bound
fadds
mov
xchg
pop
iret
sahf
roll
adc
pusha
fadds
mov
fisttpll
lcall
fcompl
add
xor
ljmp
dec
sbb
sbb
ljmp
dec
sbb
notl
push
and
ret
rcll
jbe
or
stc
xorl
xchg
dec
jecxz
mull
pushf
mov
sub
ljmp
shll
push
xlat
pusha
fdiv
andb
push
outsb
jns
pop
testb
bound
push
xlat
cmc
mov
inc
mov
jbe
adc
and
in
enter
repnz
shlb
dec
pop
mov
out
out
xchg
mov
bound
or
je
jge
fwait
push
rcl
add
addb
lret
negl
push
sub
lock
loope
setp
fadds
out
add
adc
mov
aam
sub
adc
adc
sbb
loopne
cwtl
fsubr
mov
xor
or
lcall
sub
out
jmp
outsl
push
jne
icebp
mov
stos
adc
fwait
sbbb
bswap
loopne
jge
pop
push
mov
aad
xchg
lret
dec
mov
fbstp
xor
in
hlt
aam
bound
dec
xchg
jo
popf
movsb
mov
xlat
pusha
les
xlat
in
in
stos
in
pop
dec
in
data16
adc
xchg
push
pushf
out
dec
sbb
pop
xlat
jo
xorl
xor
xchg
mov
push
fadds
fwait
pop
mov
pusha
fcoms
out
pop
fadds
dec
inc
cwtl
cmpb
mov
outsl
fildl
sbb
pop
dec
push
mov
push
test
xlat
movd
int
bound
xlat
xchg
xchg
push
pusha
dec
add
roll
dec
out
inc
cwtl
sbb
dec
iret
sahf
inc
cwtl
sbb
stos
push
pusha
sbbb
frstor
std
mov
fadds
xchg
pusha
outsb
inc
outsl
das
fs
push
popa
bound
xlat
xchg
mov
mov
fadds
out
in
adc
push
dec
mov
jb
adc
sbbl
xchg
pusha
leave
std
sti
pop
fadds
pop
insb
push
inc
xlat
pusha
fmuls
daa
data16
dec
or
shl
fwait
jg
and
notl
dec
dec
xor
insl
pusha
test
xchg
popa
data16
ljmp
fsubr
out
stos
arpl
cmpl
jp
jmp
testl
pop
test
aam
pushf
jae
adc
ret
cmc
bound
sub
aad
jp
loop
testl
mov
adc
insl
sub
mov
add
aad
outsb
aam
jecxz
pop
pop
in
jge
push
mov
popa
insb
outsl
in
cmc
je
popa
jo
mov
dec
adc
insb
idivl
loopne
adc
jnp
dec
in
lret
ja
jmp
jg
pop
sbbb
mov
dec
lds
ja
xchg
pusha
int3
ret
dec
mov
in
mull
aad
jg
pop
aad
iret
mov
ret
leave
enter
jge
sbb
inc
xchg
push
mov
outsl
popa
mov
xchg
out
add
sub
outsb
in
rorl
jp
aam
pushf
push
test
xor
push
pop
shll
push
movsl
xor
cwtl
aad
jp
lods
aaa
adc
dec
inc
aam
iret
testl
mov
sbb
cli
andb
fadds
call
fnsave
adc
aad
xor
sbbb
adc
cmc
jp
ljmp
jb
cmpsl
adc
dec
inc
lret
aad
jbe
sbb
testl
daa
nop
push
insb
in
push
dec
adc
dec
cmp
and
sbb
sbb
xorb
fadds
mov
fadds
adc
fcomps
xlat
clc
or
cmp
or
xlat
pusha
mov
jge
mov
popf
shlb
pop
aam
popf
dec
xrelease
mov
inc
push
popf
jo
jnp
fs
icebp
stc
inc
inc
enter
roll
push
dec
rcrl
bound
int3
jle
cwtl
add
or
enter
jae
jbe
lret
jns
push
dec
xor
mov
pop
test
mov
sti
pop
adc
orb
rcrb
adc
add
outsb
mov
xlat
cs
mov
cmp
lea
cmp
xorl
aad
push
cmp
shlb
push
sbb
gs
push
xor
int
dec
les
dec
cmpb
les
cli
push
popa
arpl
sbb
xlat
mov
cmp
cmp
iret
roll
mov
test
sahf
aas
jp
dec
lahf
jl
push
jp
mov
adc
shll
rol
lods
es
fs
cmpsl
pop
pusha
pop
shlb
pop
sarb
popa
pusha
xlat
inc
shll
jns
stos
and
mov
pop
fbld
mov
push
popf
movsb
inc
pushf
lds
or
pop
push
ret
mov
pop
jmp
repz
div
rcr
pop
cmp
jge
cmp
iret
pop
fmul
mov
and
call
sbb
hlt
add
pop
mov
xchg
adc
scas
mov
jo
imul
adc
es
mov
pop
push
fiadds
or
push
adc
insb
outsb
jbe
sbb
in
push
add
mov
push
out
or
adc
xlat
sbb
ret
test
jno
cmp
add
jae
mov
dec
ds
arpl
iret
or
add
je
adc
dec
jmp
push
fdivrs
sti
cltd
or
jle
add
test
rcrl
mov
test
pusha
test
imul
fsubs
or
int3
adcl
outsl
icebp
dec
xlat
or
pop
aad
mov
addr16
push
pushf
test
inc
out
out
sbb
iret
add
mov
dec
jg
push
add
daa
cmp
inc
mov
push
rolb
jo
or
lods
sar
loope
mov
mov
pusha
mov
cmp
cli
jmp
or
jns
pusha
sub
push
jmp
jnp
push
lds
roll
and
stos
pop
hlt
ror
ret
out
cmp
imul
ret
gs
xorl
xor
test
scas
cmpb
xchg
adc
push
lods
xchg
mov
daa
and
lahf
idiv
sti
leave
in
cmpsl
adc
mov
idivb
inc
adcb
in
and
movsl
pop
mov
fistps
insb
jg
mov
testl
inc
xor
cmp
xchg
mov
adc
mov
pop
cli
out
andb
push
dec
mov
xor
mov
mov
sbb
adc
lret
stos
sbb
inc
orb
and
repz
mov
and
mov
lcall
add
adc
call
pusha
call
push
push
inc
jnp
mov
loop
mov
lret
aaa
dec
push
xlat
outsl
into
addl
adcb
xchg
jbe
sbb
bound
and
dec
ds
adc
aaa
inc
adc
sar
outsl
loop
add
scas
outsl
pop
rol
jecxz
xlat
mov
sbb
xorb
mov
xor
pusha
inc
lret
andl
sbb
faddl
mov
dec
ret
mov
or
nop
daa
pusha
and
icebp
nop
fwait
inc
add
xchg
xor
and
pop
push
bound
cmp
fcomps
loop
fs
das
fdivrs
orb
xchg
lds
dec
pusha
iret
jo
lea
and
lock
adc
sub
pusha
xchg
xlat
adc
adc
xchg
pop
add
pop
mov
iret
in
movsb
popf
sbb
and
xlat
std
xchg
leave
mov
jae
ja
fcoml
jecxz
mov
aad
sbbl
cmp
mov
inc
stos
jo
xlat
dec
pop
jns
cmp
jp
sub
xor
mov
dec
add
lahf
call
inc
fbld
push
jg
pusha
adc
insb
mov
dec
bound
rorl
cmpps
mov
xchg
outsb
xlat
ljmp
pop
sbbb
inc
cmpsb
aad
add
sub
out
andl
or
orl
pop
jge
add
mov
daa
push
or
dec
outsl
sub
gs
cli
mov
jae
cli
movsb
add
das
pop
push
mov
or
jmp
pop
int3
dec
shr
or
pusha
lock
sbb
xlat
mov
stos
fsubr
je
shlb
mov
je
or
inc
xchg
fdiv
push
ficomps
movsl
jnp
xchg
cld
iret
mov
in
xlat
pusha
adc
cmpsl
ret
es
xlat
mov
int
xlat
fstps
stos
mov
xchg
adc
insb
xlat
and
dec
fwait
pop
jnp
stos
mov
jge
pop
sub
enter
xchg
mov
dec
mov
or
scas
les
add
inc
imul
jo
inc
or
fmuls
inc
cwtl
in
dec
mov
sbb
push
xor
dec
xchg
and
xlat
jae
pop
jb
sbb
pop
jecxz
jae
imul
and
inc
inc
push
in
vsubsd
out
test
mov
jmp
add
nop
pusha
pop
sbb
cmpsl
adc
or
iret
xor
data16
aas
pop
xchg
les
fwait
mov
adc
push
push
cmp
das
test
js
mov
adc
pop
adc
jge
push
popl
insl
in
loopne
xchg
mov
mov
out
jbe
ss
push
jb
stos
imull
lods
movsl
and
adc
and
repnz
inc
xchg
inc
sar
xor
pop
pusha
push
sbb
xchg
testl
mov
xchg
shll
inc
cltd
xchg
out
xor
scas
cmp
fwait
xlat
pop
pop
mov
jge
ds
or
pusha
and
ds
cmp
push
pusha
mov
ret
in
jne
xchg
push
or
jnp
mov
pusha
into
and
in
scas
hlt
xchg
xlat
jecxz
mov
popa
xor
ret
cmpps
sahf
fimull
and
jae
and
int3
pop
cld
popa
aam
inc
daa
push
or
repz
andb
mov
out
imul
aas
fsubs
in
sub
add
adc
mov
mov
mov
pop
pop
inc
icebp
leave
cld
push
push
or
arpl
int
pop
mov
ja
dec
mov
xchg
xchg
into
sub
test
pop
add
dec
enter
xchg
mov
imul
or
jl
jle,pt
and
push
push
or
repz
mov
int3
roll
jl
pop
sbb
loop
flds
mov
mov
stos
pop
inc
xchg
cwtl
mov
and
xlat
and
mov
pop
insb
and
sub
rcr
or
lahf
adc
icebp
jae
and
add
mov
jne
addr16
pop
pusha
loopne
sbb
shll
das
sub
push
xor
negb
lret
adc
or
mov
loopne
pusha
sub
fs
adc
mov
in
cmp
cmp
pusha
scas
xchg
fstps
jge
xor
mov
xlat
mov
into
and
mov
mov
mov
dec
pop
loopne
adc
xorb
push
aas
sub
pop
adc
insl
aas
cwtl
outsb
rorl
sub
cmp
push
jne
hlt
imul
pop
cmp
add
mov
jne
hlt
ja
mov
outsb
addr16
push
pop
mov
cmpsl
sbbl
mov
mov
int3
xor
inc
inc
adc
mov
mov
xlat
popa
call
push
test
push
loopne
stc
push
xlat
shlb
mov
cmp
and
roll
fdivrs
gs
pop
testl
enter
adc
fdivs
fdivrl
cmpsb
andb
pop
push
inc
fcom
mov
mov
lcall
dec
adc
xor
pop
mov
test
out
aaa
arpl
lods
xlat
lds
sbb
pusha
and
mov
daa
mov
cmc
les
xor
adcb
in
sub
lea
sbb
xchg
add
outsb
sub
pushf
xor
xlat
xchg
sub
dec
xchg
push
sub
jae
add
fst
es
add
orb
aam
push
xlat
adc
or
fistpl
rcr
xchg
and
add
clc
jnp
sub
les
lahf
and
jns
inc
pop
test
pop
fmuls
dec
sti
push
leave
mov
andl
fists
mov
stos
or
jmp
cli
in
pop
push
lea
mov
movsb
push
arpl
mov
fsubr
mov
iret
jle
xchg
out
loop
in
pop
jbe
adc
jb
pandn
sub
mov
lret
divl
popf
or
fsubrl
mov
xlat
xor
leave
sub
pusha
bound
adc
cwtl
or
mov
jno
sarb
dec
xchg
std
es
icebp
mov
and
pop
adc
mov
enter
aad
mov
mov
jo
negb
roll
pop
enter
push
aas
push
inc
pop
dec
dec
enter
mov
sub
movsl
cwtl
mov
outsb
sbb
loop
dec
pushf
add
jbe
xchg
shrl
shlb
or
or
xorb
lods
sahf
int3
repnz
lods
mov
stc
pop
out
xchg
mov
xlat
cmp
jne
push
andb
idivb
adc
inc
in
xlat
pop
push
jbe
inc
pop
mov
inc
push
jecxz
arpl
cmp
test
incb
cld
into
xor
sbb
es
adc
xlat
cmpsb
mov
bound
mov
jle
inc
push
mov
repnz
pop
pop
pop
fs
imul
mov
dec
test
int
dec
imul
push
xlat
fwait
sub
pop
cmpsl
cmp
std
push
jo
int
pop
test
sub
push
fmuls
sarl
pusha
jmp
xchg
pushf
ljmp
std
pop
push
hlt
loop
test
pusha
xchg
dec
jle
movsb
cwtl
xlat
mov
push
out
push
inc
ret
je
mov
push
rcl
pop
sarl
mov
and
bound
cmp
scas
pop
mov
popa
fistpll
in
push
lret
inc
mov
inc
loopne
inc
jecxz
adc
sbb
sub
xchg
ds
pop
ret
fwait
mov
push
sbb
das
sbb
inc
cmp
mov
je
addr16
mov
mov
dec
fcoms
ss
aam
cltd
and
pop
fsub
sbb
dec
insb
xlat
push
les
adc
inc
mov
pop
fadds
inc
loop
jo
andb
xchg
inc
in
in
lret
mov
cmc
push
xlat
lods
icebp
stos
pop
das
mov
jmp
ja
popf
jnp
sub
addr16
shl
in
xchg
xlat
je
xlat
mov
jae
fists
push
das
scas
jnp
mov
xor
push
xlat
fs
je
xor
pop
cmp
cmp
pop
xchg
call
mov
ljmp
push
jge
jne
and
adc
push
clc
sbb
inc
scas
or
sub
jecxz
mov
dec
into
pop
push
add
pop
lret
fsubs
shll
jae
fdivrs
add
cmp
xchg
push
push
imull
and
cltd
data16
or
mov
xlat
dec
pop
inc
pop
or
cwtl
aas
pusha
mov
fdivrl
icebp
in
fcomps
jns
test
pop
vminss
in
in
mov
xor
xorl
mov
scas
inc
mov
or
mov
mov
loope
lahf
and
mov
add
pop
movsb
call
bound
pop
sarl
dec
mov
lock
or
pusha
int
shl
loop
jmp
fcoms
inc
xor
sub
cmpsl
add
lods
pop
notl
push
mov
pop
or
sahf
fldt
fistps
xlat
lock
inc
jne
cmp
cmc
jg
pop
pushf
xchg
and
cmpsl
int3
dec
dec
cmp
cli
or
fistps
add
cmp
jbe
xlat
cmpsl
sbb
orl
fistps
xor
inc
dec
loope
repnz
push
mov
lods
xchg
divl
in
fcomps
fcmovb
es
in
pusha
or
lret
dec
inc
adc
das
xor
mov
pop
fsubrs
lea
push
jns
in
sbb
mov
add
push
sub
loop
jae
jae
inc
cmpsb
lahf
pusha
arpl
into
out
notl
pop
movsb
pusha
xchg
ficoml
jge
mov
adc
in
jne
mov
add
xchg
das
mov
xlat
ds
adc
test
call
mov
xor
push
movsb
fsubrl
popf
rcll
inc
and
out
xchg
xchg
jnp
mov
stc
les
mov
push
push
mov
ss
cld
test
in
insl
add
push
push
push
xor
push
mov
xor
lcall
mov
jmp
into
xchg
stos
push
lds
jnp
dec
loop
arpl
xor
or
lods
or
xlat
pop
jns
mul
xlat
cltd
push
loopne
push
cmp
pusha
pop
cmpsb
pop
cmp
xchg
inc
pop
fdivs
sahf
fisttpl
ret
push
push
jecxz
cmp
push
xlat
inc
rcll
sbb
pusha
movb
adc
adc
pusha
fs
pop
aas
inc
insl
adc
inc
aad
mov
rclb
push
adc
bound
pop
inc
or
shll
inc
inc
mov
sbb
mov
sbb
jbe
adc
cltd
test
sbb
int
hlt
sbb
orb
stos
inc
mov
fisubs
cmpsl
pop
add
in
xlat
xchg
mov
jmp
pop
pop
ds
adc
mov
lret
dec
fsts
clc
ds
jp
sub
xor
jbe
repnz
insb
xlat
xchg
cmp
je
out
in
sub
inc
or
push
inc
pop
mov
jno
in
cwtl
xlat
mov
clc
adc
adc
push
lods
cmp
in
fdivs
sarb
mov
jg
loop
lahf
addb
out
mov
dec
xlat
mov
into
xor
std
fstpl
jg
pop
adc
jmp
cmp
int
pusha
or
movb
mov
jl
mov
mov
jo
repz
sbb
jp
lret
addb
ss
mov
test
lods
lea
test
gs
inc
leave
pop
fcomps
je
cltd
sbb
mov
cmp
and
pop
mov
shlb
int
jecxz
addr16
cmp
jo
pusha
data16
lock
adc
jg
and
rcrl
dec
pop
inc
mov
push
loopne
out
dec
pusha
dec
sahf
push
and
insb
push
and
sub
mov
rorl
sub
sarb
xlat
xor
push
or
xchg
andb
mov
sub
sbb
shl
add
loopne
sti
insb
push
adc
test
lahf
mov
out
gs
cld
jp
fcoml
xor
incl
clc
cwtl
cwtl
pop
fnstsw
mov
enter
aaa
mov
fdivs
fs
inc
sbbb
pusha
ljmp
sub
jbe
ds
jle
cltd
cwtl
fadds
hlt
insl
stos
add
testl
cwtl
nop
insb
rorl
xor
or
xchg
addb
ja
test
fdiv
scas
imul
mov
adc
out
push
dec
aad
push
sbb
xlat
inc
pop
arpl
mov
stos
xor
jecxz
dec
lcall
inc
jae
push
add
xchg
mov
xlat
lret
loop
outsl
call
sub
sbb
xchg
sbb
sub
lahf
push
push
pushw
lock
sbb
mov
sar
arpl
push
cld
fs
cmp
jle
pushf
cmp
xlat
je
mov
pop
xchg
mov
fwait
pop
sbb
mov
ljmp
shll
ds
mov
push
inc
pop
test
jnp
mov
xchg
scas
sub
daa
pushf
mov
je
icebp
jp
pusha
mov
or
aad
mov
pop
sub
add
aam
adc
fcoms
lock
mov
xchg
lds
pusha
iret
gs
jle
out
sub
cs
je
stc
pop
ss
div
inc
pop
mov
xlat
jle
out
or
in
xor
cmova
test
mov
mov
popa
fdivrp
mov
pusha
sbbb
pop
mov
fdiv
imul
pusha
sti
jns
cmp
push
cmp
add
lcall
clc
jb
mov
mov
movsl
int
call
pop
pop
clc
xor
scas
ds
jp
and
cmp
jg
lahf
sti
push
jae
jecxz
idivb
fmuls
push
fs
in
jbe
add
mov
xorl
and
jge
xor
inc
xlat
data16
lret
sub
xchg
mov
pop
jmp
xor
and
out
das
cmp
in
cmpsb
mov
jae
xlat
popa
shlb
fwait
lds
out
jle
pop
ljmp
jmp
lret
adcb
xchg
mov
lahf
scas
pusha
push
and
mov
loopne
jp
subl
mov
hlt
add
icebp
mov
test
xchg
xchg
cs
aad
pop
push
dec
imul
es
ljmp
push
nop
fadds
mov
xlat
std
pushf
or
dec
adc
js
jbe
outsb
lds
dec
push
aad
ret
mov
and
jnp
push
or
mov
or
mov
mov
call
sbb
mov
cmpsl
and
pop
test
into
dec
push
insb
jg
jge
lods
jne
js
adc
jmp
adcb
pop
mov
shrl
mov
mov
sbb
xlat
inc
and
pusha
lcall
fisubrs
pusha
aad
shll
xlat
inc
mov
or
popf
pop
sahf
pusha
or
jge
inc
fcoms
or
mov
stos
arpl
and
fsubs
add
mov
push
jg
sub
dec
movsb
insl
or
pop
out
movsl
stos
test
adc
push
je
xchg
test
pusha
jecxz
mov
sarb
xchg
dec
out
mov
xchg
cmpsb
sahf
lds
mov
mov
pop
sub
les
repz
loope
add
mov
pop
and
loopne
dec
sub
imul
sub
mov
jnp
outsb
xlat
shlb
fistps
je
and
or
pop
pusha
cld
mov
inc
outsb
xlat
and
mov
cmpb
pop
mov
test
xchg
je
lods
in
pop
js
loope
neg
pop
xchg
jmp
xchg
outsb
push
aad
or
sub
sub
fsubs
cmp
stos
xor
mov
pop
sar
adcl
adc
outsl
shlb
xlat
mov
sub
xchg
shr
jno
repnz
mov
push
fsubs
in
lea
test
push
xor
out
imul
and
cwtl
xlat
jo
mov
mov
rclb
adc
rcl
pop
xchg
lret
adc
or
pop
fdivs
mov
insl
push
jle
mov
ja
int3
mov
pusha
dec
xchg
adc
fdivs
lds
add
jb
test
clc
and
imul
fnsave
jns
xorb
cwtl
adc
jb
scas
push
hlt
rcr
data16
ficoml
aas
aaa
xchg
adc
cmp
adc
pushf
add
stc
insb
sbb
mov
push
data16
push
dec
xlat
int3
push
repnz
test
mov
test
addr16
int
jb
pop
cmpb
xor
aam
mov
jmp
pushf
int3
jnp
mov
ljmp
inc
mov
xchg
pusha
inc
pop
lahf
fldcw
add
xlat
shl
jo
repnz
cwtl
in
cmpsl
sbb
mov
fwait
xchg
inc
loop
cmp
inc
icebp
sub
xor
out
repnz
inc
sbbb
sbb
sbb
test
ret
dec
leave
pop
aas
pop
xchg
jp
and
lock
lcall
std
andl
xchg
push
pusha
in
ret
push
xlat
pop
jg
mov
subb
in
out
lods
daa
shrb
xchg
sbb
jle
xorb
nop
add
dec
js
sbb
dec
ret
ror
xlat
inc
mov
lods
imulb
fiaddl
push
sbb
push
ret
sub
cmp
cmp
xlat
push
adc
cld
push
aam
rcll
movsb
imul
ret
or
cmp
mov
pop
adc
repz
pop
push
mov
push
js
pop
xlat
inc
dec
push
cmpsb
and
jp
lods
sbb
rclb
push
call
ja
mov
cmp
ja
stc
insb
test
out
sarb
mov
cwtl
and
fidivrl
mov
es
xlat
sbb
movsl
das
mov
xor
enter
in
jmp
shll
dec
jno
imul
adc
iret
jb
rep
in
frstor
adc
fdivs
cmc
xchg
test
cmpsl
es
or
int3
notl
roll
cmpsl
mov
mov
lods
loope
sub
inc
mov
es
xchg
pop
mov
and
repnz
test
inc
shl
cmp
addr16
bound
aam
inc
mov
pop
sbb
cmp
lcall
aam
pushf
in
popf
xchg
jp
into
mov
xorb
xor
jmp
cs
xor
or
mov
das
dec
mov
pusha
lock
jecxz
sbb
dec
add
xlat
loopne
in
and
jns
sbb
repnz
call
bound
inc
div
loop
xchg
lods
inc
xlat
push
lea
mov
pusha
jecxz
inc
mov
jmp
jmp
stos
xor
pop
fstpl
pusha
pop
cmp
push
xor
xlat
orps
sbb
dec
jl
shlb
ficompl
or
aam
pop
imul
mov
scas
xchg
xlat
pop
shrb
add
cs
cmc
inc
push
cmpsl
jb
shll
loop
mov
lock
enter
js
ficoms
inc
xor
pop
adc
repnz
popa
sub
loop
ljmp
mov
insl
pop
test
outsb
rcll
inc
rcl
movsl
loop
xorb
xor
sahf
push
cmpsb
inc
iret
ficomps
aas
sahf
or
stos
adc
inc
scas
push
pop
int
pop
push
jb
lret
inc
lret
icebp
sbb
dec
shr
ss
lock
cs
push
sub
sbbl
adc
rorl
ss
jmp
mov
loope
out
pusha
lret
mov
pop
dec
std
lds
faddp
rolb
dec
lock
sbb
aam
out
cld
mov
add
mov
jmp
jae
pop
sub
aad
pop
mov
data16
cwtl
sub
jb
xchg
iret
push
xchg
mov
pop
in
lret
cmpb
lahf
dec
pop
leave
pop
nop
fimull
mov
adc
out
inc
orl
sub
mov
jmp
int3
data16
mov
adc
out
ljmp
movsb
mov
xchg
dec
mov
push
jl
dec
lods
add
jge
jg
add
xchg
add
push
cld
sbb
out
mov
pop
roll
fwait
negb
ja
stc
push
lret
mov
cmpsl
cwtl
push
pushf
push
cli
test
dec
call
adc
add
mov
sahf
pusha
loope
inc
jb
not
xlat
loop
xor
movsbl
ret
outsl
push
inc
mov
adcb
aam
push
xor
aad
imul
cmpsb
insl
insb
fdivrs
xchg
sahf
xchg
push
lods
iret
les
orl
mov
fbstp
and
pushf
push
outsl
in
lds
pop
fdivrs
outsb
sub
popf
pusha
mov
lods
push
dec
inc
in
xlat
popf
sbb
add
std
dec
sbb
inc
cmc
jp
iret
test
pop
mov
mov
push
xchg
xchg
or
imul
cs
negl
pop
jmp
lahf
je
sarb
or
xchg
xlat
mov
adcb
das
pop
jne
jl
loopne
hlt
sbb
push
pusha
push
inc
movsb
in
fs
fs
add
mov
imul
cs
daa
stos
sub
dec
outsb
sbb
repz
mov
sub
adc
and
pop
fxch
xor
andl
je
dec
xlat
push
inc
imul
popa
mov
jg
sbb
xchg
rcl
orb
xchg
icebp
jnp
mov
inc
jbe
cmp
or
decb
dec
rorb
test
sbb
idivl
orb
add
push
push
ret
dec
mov
mov
adc
and
jp
mov
mov
rcrl
mov
test
mov
jae
shlb
cwtl
incb
lock
adc
daa
mov
ds
cmp
mov
pop
sbbb
mov
mov
leave
add
aam
pushf
mov
imul
jae
cmp
adc
mov
lods
mov
jg
inc
test
add
inc
inc
mov
out
outsl
dec
out
sbb
xlat
out
jae
into
rcrb
cmp
xor
or
stc
sub
mov
andb
lret
push
push
ja
push
inc
int3
movsb
ret
divb
sbb
inc
push
mov
mov
sar
push
cmp
shlb
pop
jnp
cmp
jne
loopne
fimull
add
lods
jg
push
jns
enter
es
inc
adc
sub
mov
into
fiadds
xlat
rorb
mov
js
arpl
sti
adc
pop
popf
mov
sub
ljmp
pop
mov
mov
xor
xchg
mov
sbb
call
inc
jle
repnz
push
jge
aam
movlps
pop
subb
mov
fs
push
sbb
xlat
movsl
mov
and
or
test
fwait
jbe
outsb
cmc
pushf
sbb
fisubrl
outsb
fwait
pop
mov
in
add
repnz
mov
xor
jmp
mov
lods
shrl
cwtl
sarl
cmp
loop
sar
and
xlat
in
cmp
fcomi
stos
mov
mov
pop
aad
das
jae
les
icebp
orb
arpl
ds
mov
push
sub
pop
lds
or
adc
mov
lahf
cs
adc
xlat
pop
repz
in
push
pop
push
adc
addr16
jg
add
cld
aam
ret
pushf
movsb
jbe
adc
pop
xchg
movsl
sub
pop
mov
and
jo
sub
rolb
add
das
cs
pop
fcomps
add
xrelease
xor
pop
mov
in
cwtd
mov
add
cmpsb
and
cmp
insl
xchg
pusha
add
insl
xlat
pop
mov
mov
mov
adc
sbb
jp
lock
aam
frstor
pusha
rorb
add
scas
repnz
inc
xor
adc
hlt
xlat
mov
jae
lea
add
fwait
mov
push
jo
call
in
movsl
ficomps
mov
pusha
ret
mov
dec
add
mov
addb
lea
fmuls
ret
cmp
pop
mov
lcall
mov
pop
push
aam
jp
cmp
repnz
jae
jmp
inc
jbe
ljmp
cmp
sub
sub
adc
xchg
jbe
xlat
add
adc
fadd
pop
test
lock
imul
sub
ret
and
dec
dec
fsubs
jo
cwtl
int3
daa
outsb
jno
in
into
sarl
push
add
adc
leave
mov
mov
in
inc
pusha
test
push
add
sbb
aaa
popf
pop
lods
ret
xlat
add
std
out
jl
mov
aam
pop
and
push
js
xchg
cli
push
fsubl
inc
cwtl
and
dec
pop
mov
pop
popl
pop
or
mov
out
xor
pop
orb
cmc
in
mov
faddp
lret
push
inc
gs
cltd
and
mov
lahf
or
js
lds
jne
mov
adc
xlat
mov
add
dec
fsub
sbb
lea
sub
push
sub
mov
jle
pop
ja
jne
mov
cmc
imul
mov
mov
push
shrl
daa
aam
out
ljmp
cmpb
pop
inc
jp
iret
rcr
fs
mov
ljmp
and
mov
mov
testb
pop
or
and
out
sbb
dec
popa
mov
pusha
mov
out
aas
mov
insl
lds
lea
adc
data16
arpl
pop
jae
fistps
fnstsw
into
cltd
xor
fdivrs
jne
loop
dec
pushf
pushf
jnp
dec
and
sti
incl
mov
fbld
orb
sbb
xlat
pop
lods
mov
out
pop
mov
test
mov
sahf
out
xchg
call
aad
pop
pop
sti
repz
fsubrs
xchg
adc
in
out
ljmp
and
inc
dec
xchg
repnz
cmpl
outsl
push
sbb
xchg
pop
stos
int
adcb
xlat
data16
insb
ds
inc
mov
cmc
fst
scas
mov
dec
and
nop
loope
mov
mov
loope
sbb
mov
lods
cmpl
in
jbe
andl
xor
cmpsl
pusha
fwait
cli
or
addl
and
psubb
daa
or
out
fst
sar
jbe
mov
stos
xchg
mov
jl
jb
pop
hlt
mov
and
xorl
fsubs
fidivrl
xor
xchg
cmpb
push
and
int3
push
mov
xchg
leave
cwtl
mov
xchg
andl
mov
icebp
jno
fstl
push
cwtl
adcb
dec
adc
xchg
push
fiaddl
mov
shll
mov
lods
xlat
jg
call
dec
cwtl
mov
inc
cwtl
xchg
ret
and
lock
arpl
inc
mov
hlt
pop
sbb
pop
and
stos
ficoms
jae
pop
popf
xchg
push
jmp
jl
jmp
in
mov
es
jbe
addr16
pop
insl
shlb
pop
jmp
inc
xor
mov
and
sbb
fdivl
push
mov
push
xchg
mov
pushf
ja
pusha
push
das
mov
sbb
jb
xchg
dec
or
fcomi
es
pop
push
mov
xlat
adc
ljmp
or
jle
faddl
xor
fstps
push
adcb
sbbb
mov
mov
xor
inc
or
clc
ffree
repz
dec
cmc
dec
xlat
repnz
pop
or
pusha
out
lods
cmpsb
lods
and
add
lea
popa
pop
xor
inc
mov
js
inc
jae
xchg
in
mov
pop
and
inc
in
or
adc
out
addl
mov
xlat
mov
stc
inc
inc
push
pusha
xor
leave
sbb
jl
add
testl
stos
adc
mov
aad
mov
dec
pop
int
xchg
push
imul
sti
int3
add
push
dec
push
cmp
sub
inc
fsubr
fldt
mov
cltd
inc
mul
mov
in
jmp
loopne
push
jl
push
xorb
xor
je
inc
shrb
pusha
or
cmpsb
lods
add
jns
roll
xchg
sbb
jo
rcr
orb
pop
int
insl
xlat
fmul
mov
jge
shll
inc
leave
cmp
out
cltd
lock
inc
fcoms
pop
mov
clc
adcl
rolb
pop
mov
aas
push
jae
pop
stos
jbe
iret
jmp
or
daa
lods
fsts
clc
addb
cmpb
cmp
jp
stc
lcall
mov
mov
and
xchg
les
cmp
loop
outsb
xchg
mov
ret
jnp
mov
lahf
jae
int
sub
inc
inc
orb
sub
movsb
adc
repnz
js
gs
hlt
mov
sarb
xlat
pop
mov
arpl
and
mov
icebp
mov
lea
xor
arpl
inc
test
mov
popf
xchg
packsswb
xchg
mov
push
lds
repnz
in
pop
fmull
shr
push
in
sub
xchg
sbb
xorb
xchg
xor
inc
shlb
mov
xchg
adc
mov
cmp
add
sub
je
subb
outsb
mov
cmp
jae
std
cmp
jae
pop
inc
mov
or
stc
jae
shl
push
and
fwait
ja
lods
push
out
idivb
pusha
fnstcw
loope
and
pop
fmuls
scas
inc
out
jbe
mov
ljmp
in
icebp
mov
xchg
and
mov
adc
negl
mov
pop
jno
dec
je
out
dec
add
jo
ret
repz
out
pop
sub
mov
ja
leave
xor
sub
and
aas
lret
xchg
or
test
call
and
add
fcoms
addl
xchg
aad
aas
mov
xchg
outsl
cmp
test
stc
idivb
fwait
cwtl
insb
loopne
mov
jbe
repnz
pop
add
cmc
das
jne
aas
int
imul
sub
loop
xchg
repz
shrl
lds
sbb
ljmp
sti
fsubr
sub
or
dec
jmp
sti
mov
je
orb
test
ja
nop
call
xor
pop
pop
sbb
jmp
xor
inc
stc
add
cmpsl
addb
outsl
es
rcl
or
rorl
pop
and
and
mov
in
xlat
stc
mov
mov
or
pusha
fcoml
aam
cmpb
out
aam
pusha
shl
pop
sbb
push
xlat
repnz
in
inc
mov
add
movsb
imul
je
out
push
cwtl
cmp
mov
repz
in
xlat
loopne,pn
cmp
adc
push
andb
dec
and
inc
mov
leave
mov
stc
loop
push
pop
pop
inc
loop
jae
loopne
xchg
cwtl
jmp
shrb
clc
inc
dec
pop
lret
repnz
push
dec
or
jbe
push
int3
mov
and
jp
dec
adc
aad
add
xlat
rcrl
inc
push
sbb
dec
pop
popf
aam
xor
lods
mov
iret
stc
test
dec
filds
mov
incb
adc
add
mov
mov
pusha
adcb
outsb
dec
jo
nop
iret
xlat
add
xor
movsb
ret
sub
test
fdivs
sti
push
cmc
and
cltd
xorl
mov
push
cmp
push
pusha
scas
jecxz
out
sbb
inc
lds
push
jecxz
stos
pusha
sub
mov
mov
leave
cmp
inc
shrb
out
mov
jmp
sti
mov
cmc
and
pusha
cmp
adc
sub
or
stc
pop
sbb
test
jl
sub
jmp
sti
mov
cmp
push
andb
and
shlb
lcall
dec
jae
lods
jo
adc
aaa
push
aad
ret
loopne
int
jbe
xchg
inc
pop
sbb
jle
repz
pop
xchg
or
jg
sub
inc
cmpsb
fs
cmp
repnz
test
ljmp
mov
xor
jnp
pusha
jns
sahf
addr16
push
sbb
dec
and
cs
ret
sub
jae
aad
and
inc
inc
jge
ficompl
dec
jnp
addr16
ss
sub
outsl
adc
fnstsw
cmp
jp
jbe
sub
adcl
testl
es
lcall
push
pop
jbe
cmp
cli
cmpsb
dec
fcomi
fisubs
jp
aad
in
xlat
sub
mov
xchg
push
pusha
in
and
xlat
push
pop
das
iret
in
push
lcall
ja
stc
iret
leave
xchg
test
std
xchg
jecxz
fistl
repnz
movsl
adc
popf
jmp
in
xor
pop
and
mov
xlat
lahf
or
xchg
xlat
lret
lea
neg
cltd
cltd
jbe
out
ret
jecxz
outsb
adc
jb
loopne
scas
clc
in
pop
in
mov
xchg
jl
lcall
cmpsb
out
sub
aaa
shll
fst
add
decl
adc
hlt
jbe
xchg
xor
cmpb
jno
jmp
pop
push
test
shrb
fwait
fwait
add
loopne
and
data16
jmp
sbb
fisttps
mov
pusha
outsb
sbbb
push
and
in
xchg
out
sub
and
das
jmp
adc
addr16
inc
call
or
xor
nop
mov
and
fcoml
pop
negl
xor
jb
leave
cwtl
mov
jae
out
jecxz
xor
sbb
hlt
adc
cld
aad
inc
and
sbb
scas
push
xchg
or
xor
or
xlat
fistpl
das
mov
pop
sbb
dec
and
or
pushl
xor
ljmp
xlat
int
push
mov
mov
pop
xchg
idivb
sub
arpl
push
gs
repnz
roll
cmc
mov
addl
cmpl
nop
bound
mov
inc
adc
mov
jae
and
push
or
mov
push
fadds
roll
push
mov
jmp
dec
fisubs
ficompl
xlat
push
leave
mov
sbbb
mov
jne
adc
ds
test
lea
xor
sti
lahf
mov
dec
push
adc
subl
int3
inc
sarl
in
int3
pop
stos
add
sbb
lods
incl
mov
xor
pop
jmp
mov
xchg
push
dec
imul
fidivrs
inc
fsubrl
arpl
aas
xlat
push
lcall
stos
pop
mov
fmul
mov
adc
nop
xchg
pop
js
push
adcb
add
mov
icebp
push
push
mov
inc
aad
pop
pusha
mov
adc
xchg
xlat
insb
adc
mov
daa
mov
pop
mov
xor
sbb
or
or
pop
or
ret
dec
mov
mov
jp
jns
inc
dec
sti
jno
stos
xor
sub
adc
inc
cmp
cmp
int
push
mov
loop
add
icebp
stc
jle
inc
mov
pop
mov
mov
leave
bound
daa
cs
pusha
mov
pop
mov
xlat
cwtl
stos
cmp
lcall
lcall
dec
add
jo
addl
shlb
or
cmc
mov
addb
jns
arpl
fs
xor
cmp
adc
scas
mov
enter
and
neg
data16
jae
sahf
mov
jl
cmp
push
cmp
std
cld
dec
pusha
and
js
movsl
sub
push
movsl
mov
gs
pusha
inc
mov
call
mov
adc
adcb
jb
imul
mov
pop
pushl
lock
aaa
jmp
test
enter
in
xlat
xorb
or
pushl
sbb
jne
mov
and
jmp
xor
xchg
pusha
lock
lahf
push
movsb
int
out
idivl
call
dec
xchg
mov
push
mov
pop
and
pop
and
cltd
xor
pusha
cmpb
dec
clc
jle
cld
inc
fs
ljmp
enter
rcr
aam
insb
dec
cmpsl
xor
pop
pusha
and
and
cmp
shlb
fmuls
mov
insb
push
add
test
stos
dec
daa
and
push
test
ds
xchg
insb
xchg
dec
mov
xchg
out
pop
cmp
stos
cmp
or
push
insl
loope
push
pop
pop
out
sub
adcb
dec
mov
nop
adc
push
xchg
loop
daa
mov
sahf
out
js
test
inc
xlat
loope
es
sub
pop
pop
test
sbbl
and
and
mov
ja
dec
xchg
mov
pusha
dec
mov
lret
inc
sbb
ret
lcall
das
sub
ljmp
pop
in
movsl
push
push
lcall
add
gs
xlat
aad
mov
repnz
or
adc
cld
xor
cld
mov
in
jne
sub
push
fsubrl
data16
or
stos
mov
sub
lret
hlt
lahf
add
and
cwtl
mov
test
cltd
mov
addr16
stos
jbe
in
dec
xchg
aam
adc
test
dec
sahf
out
jo
cld
data16
lahf
stc
lret
sub
lea
jl
adc
dec
add
gs
fmul
lret
insb
shr
movsb
adc
inc
arpl
mov
jne,pt
subl
fimull
call
or
sub
add
loop
xor
xchg
and
repnz
aam
mov
jo
inc
insl
int3
mov
rcl
lods
in
enter
mov
pop
pop
add
mov
divl
jbe
mov
sub
push
dec
push
or
lds
orb
jne
sbb
jae
adc
xchg
pop
cmp
addb
pop
popf
loope
mov
xlat
in
mov
lods
fadds
scas
adcb
add
adc
inc
mov
mov
ss
pop
test
jae
fistps
add
addr16
pusha
lahf
push
sub
xchg
mov
xchg
dec
sbb
sbb
loopne
lcall
inc
adc
out
aad
in
ficompl
xchg
xor
dec
imul
lahf
in
fs
sub
xlat
xchg
cmp
inc
mov
xchg
cli
je
aad
cli
mov
or
out
push
cmpb
jle
mov
ret
lock
jge
and
sbb
jecxz
xlat
sar
jp
subl
fistps
jmp
inc
xchg
insl
mov
add
mov
stos
mov
iret
sbb
and
cmpsl
fildl
aad
add
or
lock
cmp
les
leave
xlat
mov
sahf
mov
js
cwtl
add
fwait
divl
sub
dec
stos
imul
jmp
inc
push
push
xchg
push
jbe
inc
pop
pop
daa
fcomp
sub
sahf
and
stos
push
jnp
popf
mov
loope
add
mov
leave
and
pop
dec
inc
mov
subb
xchg
fldt
xlat
sub
movhps
pop
jle
pop
dec
pop
fsubr
and
pop
adc
fs
xor
and
push
or
mov
push
sub
insb
jmp
das
jnp
xchg
loopne
jno
popf
add
arpl
inc
xlat
lahf
lea
outsl
test
out
add
cmp
cld
xchg
sub
mov
or
daa
cmpb
lahf
mov
pop
inc
xlat
cmpsl
outsb
pop
push
jnp
pop
xlat
cli
xchg
or
add
and
mov
int3
sbb
in
das
popl
jl
pop
scas
adc
or
popf
xchg
ljmp
push
cmpsb
subb
cld
or
ljmp
dec
int3
jae
sbbb
push
notb
test
aam
lods
xchg
xchg
or
sbb
cmpsl
aad
adc
inc
daa
sbb
inc
movsl
pop
push
mov
stc
fcmovnb
sub
pop
or
jo
clc
fwait
push
rcl
dec
add
xchg
std
nop
mov
lahf
mov
mov
and
mov
aam
sbb
push
nop
nop
inc
nop
daa
pusha
inc
addr16
jmp
xchg
mov
movsl
cld
sub
pop
add
fucomp
pop
inc
mov
mov
sbb
xlat
push
aad
in
cmp
cmp
pusha
fisttps
mov
push
dec
lret
mov
pop
mov
test
and
loopne
push
je
mov
negb
or
je
and
mov
jno
push
test
pop
insb
subl
mov
lods
lods
mul
pop
decb
mov
fs
cmc
xlat
insb
jo
insb
or
sub
mov
dec
xchg
add
adc
out
punpcklbw
mov
lahf
xlat
xlat
popf
jb
jmp
or
imul
cmp
add
cld
jmp
jmp
mov
subb
pop
pop
lods
test
in
cmc
mov
or
pop
mov
cmp
xlat
cmp
ss
cmpsb
xor
icebp
mov
xchg
cmc
enter
jb
cmp
xchg
out
mov
jae
ja
mov
lds
fbstp
int
lds
addr16
jp
addb
sbb
movb
jnp
adc
dec
xchg
pop
popf
pop
iret
xchg
mov
inc
mov
adc
inc
xchg
jmp
ret
outsb
out
pop
gs
fwait
jbe
xor
imul
mov
push
xchg
mov
or
dec
fcomps
pop
add
addb
iret
cmpb
mov
dec
xchg
push
es
inc
fcomps
sti
imul
or
pusha
movsl
xchg
pop
pop
add
jbe
outsl
into
add
mov
xchg
add
rorl
ret
xchg
fsubs
imul
fwait
enter
jmp
jg
aaa
jne
aad
lock
cwtl
cld
jnp
mov
mov
movsl
in
mov
jnp
push
daa
or
out
inc
loopne
add
jecxz
cmpsb
adc
dec
aas
mov
jbe
insl
push
fcom
pop
dec
mov
pushf
push
icebp
jl
bound
mov
pop
jo
inc
adc
xorb
ficoms
inc
jno
in
lods
out
push
ret
push
mov
or
jmp
dec
jb
sub
xchg
mov
fcomps
fildl
push
sbbb
and
sarb
mov
mov
andb
cmp
fnstsw
jp
clc
in
mov
pop
mov
arpl
add
jne
repz
jb
lods
lea
ret
pxor
xlat
int3
pusha
fisubrl
push
cld
jo
clc
mov
call
leave
sahf
movsl
pusha
pop
inc
aaa
and
mov
mov
jl
pop
push
mov
ss
xchg
arpl
jbe
add
inc
push
dec
imul
push
fwait
or
fidivrl
out
sti
cmpsl
cmpsb
addb
push
mov
orl
out
xlat
shll
iret
mov
add
out
jge
xchg
adc
sub
fwait
arpl
fcmovnbe
lret
dec
dec
fmul
sarl
aaa
adc
mov
js
fcomps
xchg
push
pop
cmp
push
mov
lods
mov
ror
push
adc
xlat
cmpsb
in
mov
sbbb
mov
jp
lods
movsb
adc
js
xor
jne
loopne
pop
pop
xchg
aam
cmp
inc
or
mov
out
or
pop
sti
test
aad
adc
jnp
cmp
popf
mov
inc
sub
xlat
push
cmp
arpl
pop
mov
pusha
out
xchg
jno
imul
repnz
adc
dec
add
sahf
in
xchg
cs
jge
aas
mov
push
push
fwait
xchg
fsubs
sbbb
fldcw
adc
push
dec
pop
in
adc
fmuls
inc
insl
lea
mov
pop
xchg
std
rclb
add
aad
je
notl
pop
in
xlat
sbb
in
xor
mov
shrl
add
inc
aaa
adc
fistpl
or
hlt
mov
add
mov
mov
in
rol
mulb
sbb
push
xchg
sbb
mov
xlat
jmp
iret
test
mov
xchg
je
cmpb
adc
daa
scas
cmp
sbb
sbbb
adc
decl
cmp
mov
cld
cmp
repz
mov
xor
ss
cmp
shll
and
dec
push
ljmp
mov
xchg
imull
jle
inc
fisttps
lods
stos
mov
movsb
jle
jg
pushf
mov
shl
sti
aaa
cmp
scas
in
xchg
mov
mov
in
push
mov
inc
gs
jbe
push
mov
inc
or
adc
pop
mov
cmpl
lea
ss
sbb
aaa
movsl
pop
sub
and
cmc
xor
xchg
ljmp
pusha
sbb
jl
add
loope
xlat
lahf
mov
pop
roll
jp
jns
mov
inc
dec
sub
call
test
aas
mov
loop
bound
adc
jle
insb
inc
in
xchg
out
mov
xchg
push
fs
flds
cmp
adc
pop
inc
xlat
or
pop
mov
push
lea
lahf
xlat
mov
lahf
pop
popf
repz
mov
xchg
jmp
adc
add
fs
shlb
loopne
movsl
aam
js
mov
mov
mov
pop
lods
not
call
jp
mov
aam
mov
sub
sbb
shrl
adc
mov
sub
std
out
ljmp
scas
int3
scas
pop
adc
in
xchg
pusha
and
jne
jo
movd
fstl
xchg
lock
xor
js
wbinvd
cmp
fisubrs
pop
mov
incb
shrl
push
cmpl
std
push
adc
ret
push
imul
enter
movsb
fwait
jmp
or
adc
out
and
loope
iret
adc
push
sbb
pop
movsl
mov
lds
dec
fs
std
iret
cld
xorb
sbbb
fcom
ja
and
jnp
subb
mov
jno
and
movsb
jb
int3
cmp
ret
push
mov
push
fldt
mov
xlat
icebp
int
xchg
insb
push
scas
pusha
or
movsl
mov
xlat
outsb
fwait
jmp
dec
in
mov
cmp
ljmp
pop
push
iret
jp
sub
mov
add
push
and
outsl
daa
leave
lret
data16
xor
jns
xlat
loopne
movsl
jl
push
adc
mov
and
xor
shlb
daa
xor
roll
jno
push
jo
push
test
sub
pop
xor
shll
push
add
loopne
push
cld
sub
and
sbb
fiadds
sarl
inc
lcall
and
mov
push
repnz
push
push
pop
pop
fisubrl
xchg
xchg
add
lcall
jae
addb
loope
mov
xchg
xchg
cmp
cmp
lds
je
push
in
jno
lods
xchg
add
ret
adc
lret
adcb
and
pop
popa
pop
fmul
in
and
xor
push
je
add
das
xlat
shll
mov
push
xchg
es
xlat
lahf
lock
mov
lret
out
xchg
or
ficoms
pop
inc
imul
jb
xor
and
bnd
mov
into
pop
enter
int3
lcall
mov
leave
clc
push
cwtl
outsl
inc
dec
cmp
inc
jmp
rcll
jecxz
inc
or
fstpl
mov
mov
cltd
int3
gs
cmpsb
push
popl
mov
fcomps
int
pop
punpckhwd
mov
and
fcoms
cmc
add
xchg
jns
mov
les
xlat
mov
xchg
adcb
mov
xor
nop
push
xchg
je
push
inc
push
fucomip
mov
stos
pop
stos
jo
js
mov
loopne
sahf
out
or
xlat
lods
inc
test
popf
mov
mov
call
push
fildl
cmp
adcb
ss
negb
movl
iret
pop
cmp
movsb
mov
xchg
js
pusha
push
add
add
and
pop
data16
mov
iret
lcall
adc
pop
mov
jl
sti
pushf
mov
pop
into
iret
ficomps
inc
push
outsl
xchg
mov
rcrl
adc
mov
cltd
jb
es
and
jl
jmp
outsl
xchg
cld
xlat
xor
sarb
mov
or
orb
xlat
icebp
inc
push
jno
out
push
sub
xchg
rorb
sub
push
inc
imul
cs
subl
sbb
lahf
jnp
popf
mov
bound
and
pop
bound
sub
fcoms
fs
xor
dec
sbb
stc
enter
pop
jp
les
leave
push
test
jge
nop
aad
dec
jl
or
call
jbe
dec
add
pop
mov
and
dec
mov
jae
stos
mov
loope
mov
nop
mov
and
out
outsb
jno
dec
inc
push
pusha
cmp
je
and
cwtl
lret
dec
mov
mov
adc
ljmp
add
push
mov
dec
cmc
lea
addb
jo
xchg
lods
loop
push
bswap
jns
sbb
adc
outsb
jmp
fs
icebp
loopne
pop
dec
std
std
xor
fwait
xchg
iret
mov
fists
xchg
mov
push
sbb
out
movsb
xlat
js
les
mov
js
incl
add
insb
sarl
xchg
out
dec
pop
xor
dec
mov
jecxz
orb
jl
mov
aam
pusha
pusha
fdivr
adc
movsl
int3
test
cmpsl
pop
mov
jge
jge
inc
sbb
lret
lea
dec
pusha
mov
jnp
dec
cmp
and
xor
icebp
mov
jl
pop
shr
pop
fs
mov
add
jae
push
sub
sbb
pop
dec
popfw
push
push
add
pop
xor
push
pop
mov
add
sbb
push
push
jg
out
out
popa
xlat
fsubr
rcrl
xor
xchg
mov
ljmp
or
mov
jge
call
cmp
push
sub
rol
daa
mov
add
and
add
pop
and
andb
and
inc
mov
pop
popl
lock
push
push
rolb
xchg
popf
inc
idivl
fucom
dec
inc
ds
push
imul
push
xlat
jle
pop
cli
and
adc
sbbb
cmp
xlat
mov
xor
addl
lret
mov
cld
pop
xor
orb
ss
cwtl
popf
in
or
lods
sub
sub
xchg
pop
ret
sbb
jns
call
or
cmc
cmp
mov
jne
mov
mov
xchg
push
das
jle
xlat
adc
pop
jae
insb
call
xchg
jnp
xlat
fcmovne
jge
pop
push
out
adcb
mov
mov
xlat
xor
daa
test
scas
mov
ret
gs
std
jp
mov
imul
orb
ret
subb
fimull
inc
inc
or
ret
stos
or
addb
sub
aas
cmp
dec
sbb
adc
pop
js
push
mov
roll
and
push
xlat
out
aam
out
cwtl
xor
pusha
outsb
or
rorl
mov
imul
mov
dec
test
mov
insl
mov
stos
and
insl
mov
loopne
sbb
xlat
jl
dec
or
repnz
pusha
ss
nop
pop
loope
dec
call
movsb
ds
lcall
and
xor
inc
jb
push
inc
jne
pop
out
enter
or
and
add
cmp
pusha
cmc
int
addr16
jns
les
and
push
adc
or
pop
xchg
and
xor
jg
cli
ja
adcb
or
lock
add
mov
pop
push
push
adc
sbb
pusha
adc
mov
xor
aam
sbb
ret
inc
mov
mov
push
push
leave
sbb
push
cmpsb
and
and
mov
jg
pop
lods
cli
jno
aaa
popf
js
xlat
ret
sahf
sbb
sbbb
push
mov
add
in
stos
cld
inc
in
test
subb
inc
fwait
scas
lahf
xlat
out
out
scas
mov
push
dec
adcl
cmc
enter
addl
and
inc
rcll
sbb
daa
imul
scas
test
pusha
adc
shll
mov
jp
pusha
addb
loopne
xlat
outsl
dec
lods
repnz
cmp
or
inc
or
sbb
sbbb
mov
js
xchg
mov
cmpsb
xlat
sbb
mov
mov
mov
icebp
out
paddd
inc
fnstsw
mov
in
ret
insb
div
pop
pop
xor
sbb
imul
aad
stc
jae
addr16
cmp
cs
iret
int3
rcll
cmpsb
lods
popa
cmpsl
fiaddl
sbb
xor
sahf
jbe
fistps
pop
pop
clc
popa
in
jg
inc
sbb
xlat
mov
push
adc
fs
icebp
data16
jo
lock
andb
inc
jnp
addr16
sbb
inc
or
ds
mov
mov
sub
lret
mov
pusha
out
std
push
out
pop
out
iret
aad
sub
sub
cmc
pop
roll
pop
int
mov
mov
xor
inc
inc
sbb
mov
hlt
pop
jne
rolb
je
push
filds
jecxz
lret
pusha
jp
shlb
or
and
add
cmp
loop
pop
dec
cs
xlat
or
pop
dec
jae
jle
pop
aad
or
ret
xlat
and
push
mov
cmp
fdivr
sbb
lret
ljmp
aaa
mov
lock
inc
jmp
jp
lret
pop
push
into
jne
and
or
push
scas
outsl
mov
mov
cmp
stos
stos
xchg
jge
sbbl
push
add
pusha
pop
out
cmp
fcomps
jae
mov
cmpsb
loope
pop
loopne
int
fwait
adc
or
and
dec
cld
push
aas
lock
xchg
xlat
cmpsb
movsb
gs
in
cwtl
in
sbbb
pop
inc
xlat
jle
fistps
xorb
mov
inc
pusha
nop
push
inc
out
and
in
insl
mov
jp
adc
push
pop
fistps
lahf
mov
push
inc
lock
sarl
pop
sub
push
sbb
es
ss
mov
push
mov
outsl
or
pop
ss
push
mov
add
xchg
pushf
not
jmp
push
testl
dec
jne
aad
sbb
lcall
stos
andb
sbb
push
stc
xchg
cld
mov
aas
pusha
pop
imul
and
cmpsl
xchg
es
push
mov
lods
not
jo
cmp
iret
jno
decb
mov
lret
dec
xlat
es
or
sbb
fisttpl
xor
mov
and
jg
or
imul
push
in
cmpsl
xchg
jnp
loop
loop
popf
inc
clc
and
pushf
pusha
cmp
add
hlt
inc
shl
ja
enter
push
das
out
push
sub
call
adc
xchg
xlat
add
aad
dec
sarb
mov
std
mov
mov
or
and
xlat
in
add
aam
call
xor
fwait
nop
jae
xlat
push
rolb
push
jmp
adc
adc
push
dec
push
aam
int
fadds
xchg
push
lcall
push
add
cmp
mov
sub
out
std
sbb
std
ret
push
push
jmp
nop
cmp
push
dec
push
movsb
cmp
lahf
add
cmp
stos
enter
push
adc
addl
pushf
pop
fwait
clc
mov
push
push
jecxz
adc
lds
push
jle
xchg
mov
pop
push
in
add
addb
and
mov
cmc
subb
repz
jbe
mov
or
aam
roll
out
inc
sti
aad
imul
pop
lahf
cmp
je
stc
fdivl
jmp
and
or
subb
push
add
aam
adc
movsb
xchg
pop
cmp
sub
xchg
cs
shll
cld
dec
adc
shr
jbe
xchg
pop
xchg
add
imul
lock
mov
mov
cltd
subb
and
movsb
outsl
lret
shrb
pusha
loop
arpl
xlat
cmp
fwait
cmpsb
jo
lock
enter
fcomp
mov
cmp
xchg
scas
into
pusha
aam
sub
out
xlat
mov
lcall
imul
shr
dec
leave
fsubrs
in
adc
jmp
pop
fists
xor
clc
adc
cmpsb
jbe
jae
adc
ja
out
pop
mov
cmpsl
sub
in
je
xchg
pop
test
cli
push
ret
xlat
sub
push
test
andb
mov
lret
stc
adc
mov
push
pop
mov
mov
and
jb
mov
inc
and
xchg
push
xor
es
mov
lods
dec
sbb
cltd
pop
pop
cmp
push
outsb
and
adc
push
js
test
jbe
cltd
jmp
insb
fwait
lret
scas
fisttps
push
cs
movsl
retw
dec
fwait
outsb
lahf
pop
push
in
daa
mov
icebp
out
insl
mov
xlat
les
mov
inc
gs
sbb
or
les
test
aad
enter
test
sub
mov
inc
mov
add
jle
xorl
xchg
push
cmp
repnz
push
push
mov
gs
xlat
push
scas
stos
add
adcb
ja
sbb
sub
in
add
fisubrs
cmp
adc
hlt
push
inc
repz
ficoms
mull
jbe
xorb
fs
adc
pusha
xor
roll
and
push
and
mov
jb
jg
cmc
scas
ret
xor
fisubrs
sub
pop
sbb
push
mov
stos
jp
and
stos
test
mov
cmpsb
cmpsl
mov
xchg
mov
adcb
jno
mov
rclb
inc
ret
sarl
pop
mov
lret
imul
jl
xor
lods
repnz
mov
pop
ret
cmc
cmc
mov
cmp
xchg
dec
mov
mov
adc
stos
outsb
xlat
dec
mov
test
sahf
outsl
add
inc
cmpb
movb
cmp
dec
jb
xor
and
and
ret
mov
repnz
shld
mov
and
or
xlat
sub
idivl
adc
pop
std
out
movsb
xchg
sub
imul
cwtl
push
mov
addb
test
mov
xchg
pop
pushf
andb
cmp
mov
leave
call
adc
pop
sbbb
insb
loope
mov
data16
add
mov
mov
sub
out
inc
das
add
shlb
jo
js
pusha
dec
cwtl
mov
aam
cmp
and
rcll
fistpl
subb
and
inc
mov
xlat
add
mov
cmp
or
xor
mov
dec
sbb
mov
push
imul
xchg
movsl
xchg
dec
adc
sbb
cmp
jo,pn
xlat
stc
mov
sub
les
mov
aad
leave
data16
add
cmpsb
data16
xchg
xor
mov
adc
xlat
push
mov
int3
jnp
inc
call
mov
mov
lock
ficoml
cmp
and
mov
push
enter
scas
inc
dec
add
pusha
mov
jle
arpl
rol
mov
jg
inc
pop
pusha
test
xchg
xchg
aam
jle
push
mov
out
sbb
push
andl
mov
movsb
jge
xlat
sub
cmp
jg
or
jo
adc
and
adc
mov
test
or
loope
outsl
jge
mov
cli
aam
xchg
les
pop
add
outsb
rolb
pop
fildl
push
add
push
jb
aas
cmp
mov
cmp
inc
gs
pusha
inc
lahf
btr
rcr
sbb
mov
ds
push
adc
arpl
push
push
jecxz
loopne
sbb
dec
adc
mov
scas
lods
adc
bound
test
cmpsb
divb
pop
xchg
fildl
sub
leave
mov
call
outsb
shll
mov
fldl
mov
mov
sar
xchg
insb
call
js
aad
or
mov
sbb
or
int
pop
xor
mov
pop
pop
mov
inc
subl
inc
push
sub
shr
nop
and
dec
pop
push
fcomps
insl
outsb
push
dec
mov
andb
lahf
jae
jg
out
xor
adcb
add
sarb
loope
popf
pusha
or
sub
aaa
ds
mov
icebp
mov
xorb
or
pop
add
aas
and
outsl
movsb
inc
iret
adcl
bound
and
sub
cmpsl
xchg
add
mov
mov
mov
dec
sbb
add
or
inc
in
pop
lret
dec
iret
stc
sub
sbbb
push
and
mov
and
push
in
popl
cmp
addr16
xlat
gs
mov
aad
sahf
pop
stos
into
loopne
add
push
sbb
das
pop
fnsave
inc
int
xor
xchg
cmp
loopne
pop
jmp
xlat
pusha
sti
sar
cmp
insb
pop
push
adc
ds
leave
jmp
inc
dec
shrl
mov
arpl
sub
sahf
xor
pusha
test
repnz
clc
xlat
outsl
dec
jbe
adc
xchg
rolb
xchg
and
into
inc
and
fnstenv
out
cmpb
hlt
fbstp
insl
loopne
push
fstp
stos
rorb
jp
sub
xchg
xlat
mov
pushf
ds
cmp
enter
shl
clc
ret
inc
jg
and
inc
pop
xor
cmpsl
sbb
rorb
pop
inc
ja
in
mov
push
mov
adc
ja
xor
xorb
xchg
xor
pop
xor
js
arpl
xchg
ret
cmp
fucom
rcrb
dec
movsl
cmpb
incb
mov
enter
shlb
inc
lahf
insb
pusha
fisttps
xchg
jmp
fadds
fmull
mov
xor
fisttps
add
in
shrb
pop
mov
push
dec
sbb
jno
and
lahf
xor
ds
xor
pop
jecxz
data16
pushf
xor
enter
insl
add
cmp
jno
iret
mov
clc
dec
je
mov
arpl
gs
sar
push
sbb
xor
inc
fisubrl
add
mov
sti
cwtl
outsb
pusha
shrb
dec
lret
mov
andb
sbb
pusha
sub
aam
xlat
pop
pop
sub
gs
cmp
nop
movsl
test
jae
iret
rorb
pop
clc
xor
dec
frstor
les
jecxz
pop
test
lcall
jl
push
out
call
mov
aad
inc
jl
xlat
jo
mov
shll
mov
xchg
xchg
insl
test
sahf
adc
mov
and
mov
mov
cmp
fadds
or
mov
aam
imul
dec
cmp
sbb
pop
push
pop
xchg
inc
vpshuflw
mov
inc
call
or
mov
enter
rol
xlat
xchg
test
push
in
insb
adc
out
inc
lcall
xor
stos
sti
push
xlat
test
aad
cmp
pop
pusha
aas
mov
adc
fwait
ret
mov
sarb
inc
mov
sbb
cmpsb
adc
cmp
push
cmc
inc
pusha
jne
sub
inc
or
cli
leave
dec
test
jbe
cmc
cmp
or
sub
fdivrs
aam
clc
sahf
movsb
fwait
cmp
dec
adc
push
in
mov
aam
cmp
lcall
ja
xchg
js
mov
sbb
test
mov
inc
inc
mov
pop
add
sbb
mov
int3
xchg
je
sub
inc
pop
les
shlw
or
addr16
test
pop
ret
mov
data16
mov
ret
lcall
iret
add
inc
pusha
dec
fnsave
mov
aad
adc
nop
dec
mov
fs
shll
ljmp
insl
out
jb
test
add
cmp
xor
cmp
aam
in
outsl
das
pop
outsb
or
cltd
xchg
and
int
xlat
jecxz
and
xor
sub
jns
cmc
pop
std
adc
sbb
les
fdivrs
or
or
lahf
pusha
js
cltd
xor
pushf
shl
jb
pusha
xchg
sub
test
outsb
jp
mov
ret
mov
pusha
aam
xchg
lret
stos
jne
loope
mov
movb
int3
imul
test
and
mov
sbb
add
add
dec
pusha
psubq
pop
cmp
push
lock
jnp
mov
cmp
sub
in
out
xlat
ja
and
and
cmpsl
sbb
or
cmp
mov
dec
je
addb
jbe
shlb
mov
sbb
arpl
xlat
xchg
lds
adc
sub
cmp
fisttpll
cmpsb
dec
pusha
iret
leave
mov
mov
lahf
sbb
mov
jae
lcall
jne
mov
jns
cmovp
adcb
inc
mov
ds
jmp
repz
pop
mov
add
sub
mov
mov
push
cwtl
sarl
push
lock
fidivs
aas
fsubrs
adc
imul
repz
mov
push
rolb
adc
mov
add
adc
ja
cmp
rorl
or
mov
es
sbb
xchg
or
sahf
fst
popf
setbe
push
adcb
shll
sub
lock
outsl
jnp
shll
int3
add
andb
dec
mov
js
into
adc
aad
std
pusha
idivb
lcall
add
push
push
fdivrs
push
ja
jnp
jns
or
jg
xchg
xor
aad
or
mov
push
cmovno
test
mov
rcrl
xchg
ds
pop
ds
mov
push
rorl
insb
bound
pusha
push
jecxz
lea
loopne
test
push
inc
addr16
push
dec
pusha
push
js
and
insl
inc
imul
push
ret
into
pop
dec
scas
repnz
adc
cld
cmpsb
and
ja
jmp
xchg
push
shlb
xor
icebp
subb
orb
addr16
movsl
aaa
xchg
sub
xlat
out
aas
jns
enter
movsl
aam
adc
mov
xchg
gs
jno
dec
ret
sbb
xlat
sub
push
dec
lock
cs
pop
loopne
jo
fcoms
shrl
xchg
sti
or
sbb
in
pop
push
lock
mov
sbb
test
mov
std
xchg
cmp
lock
jge
and
movsb
test
inc
cwtl
xchg
mov
inc
mov
lds
sbb
loop
movsb
mov
popa
mov
and
das
mov
sub
and
xchg
test
xstore-rng
cmpsl
add
xchg
xlat
rcrb
mov
int3
cwtl
int
pusha
mov
fldl
imul
cwtl
loopne
and
adcb
inc
xlat
lds
or
adc
js
jbe
stc
sahf
in
fcomps
imul
push
and
pushf
cmp
out
pop
inc
push
cmp
xlat
mov
test
movsb
add
lahf
fldt
enter
mov
xchg
popf
or
xor
fcoms
fcoml
les
mov
popa
mov
je
xor
cmp
les
or
sarb
fucomip
data16
inc
lods
clc
jnp
subps
ret
loope
jno
dec
xlat
pop
pop
stos
mov
push
jle
enter
push
adc
mov
push
shlb
hlt
cmp
jle
jge
and
jge
fwait
es
loopne
lds
clc
js
pusha
mov
cmpsb
lods
mov
mov
or
inc
mov
sbb
fs
call
push
addr16
out
sub
jp
cmp
and
sarl
aam
clc
sbb
cmc
push
pusha
xor
xor
ljmp
pop
or
xor
test
sarl
aam
push
add
in
jg
push
mov
loopne
das
or
xlat
notl
mov
fs
mov
xlat
mov
outsb
xor
subb
push
cltd
fdivl
dec
dec
in
push
aaa
adc
adc
mov
xor
push
in
mov
push
and
and
test
inc
lock
jo
aaa
sub
pop
rolb
xchg
add
xlat
add
mov
test
jbe
and
cmpsb
hlt
push
xchg
push
sub
out
lds
cwtl
int3
sbb
push
fists
pop
fbstp
roll
push
enter
gs
push
repnz
loopne
divl
xchg
pusha
adc
push
jl
pusha
mov
push
cmpb
cmpsb
dec
xlat
push
mov
popa
pop
rcrl
data16
push
sbb
and
rclb
mov
xor
fistps
movsb
mov
push
xor
addr16
pop
mov
cmp
fsubs
mov
negl
sarl
mov
clc
pop
sub
dec
fmuls
dec
jle
pop
push
lock
lret
jno
data16
int
jns
shll
jno
daa
add
hlt
inc
int
cltd
sub
xlat
daa
cmp
adc
rcl
xlat
repz
mov
pusha
clc
push
gs
cwtl
add
cltd
mov
mov
cmp
aas
jecxz
shl
dec
mov
cmp
push
mov
mov
pop
dec
insb
adc
rcl
sbb
xchg
xchg
cmpb
repz
aad
inc
movsl
fsubs
jnp
ret
dec
xor
faddp
sahf
js
adc
sub
out
sbb
sbb
lret
xlat
divl
cmp
maxps
jmp
xlat
std
sub
or
mov
and
ret
push
mov
loope
and
test
adc
lods
jecxz
ret
stos
shlb
pusha
xor
pop
lahf
pop
mov
js
xor
push
test
sarl
push
shlb
push
in
xlat
mov
jg
dec
xor
push
loope
lahf
int3
aas
add
in
xchg
mov
ret
pop
fsub
or
sarl
push
inc
jmp
sub
push
in
cltd
pop
add
xlat
and
sbb
ja
push
fildl
clc
mov
fwait
mov
sbb
mov
addb
pusha
push
mov
or
aad
lods
inc
addb
lret
push
lea
addl
leave
dec
mov
push
sub
push
fsubrs
mov
push
je
sbb
aad
xchg
cli
jge
fdivs
pushf
xchg
and
pop
cmpsw
adcb
stos
enter
cmc
repz
adc
test
mov
lret
movb
shlb
sti
mov
sahf
push
sahf
add
and
sub
adc
push
imul
cmp
outsl
jae
pop
aas
ficoml
xor
push
xchg
inc
mov
mov
data16
cmpl
into
test
into
or
addr16
mov
pusha
fcoml
sub
mov
test
pusha
testl
into
mov
pop
and
cs
pop
mov
sbb
lcall
or
aam
jne
fistpll
ss
cltd
add
je
into
les
int3
inc
bound
inc
jo
aad
cld
fnstcw
into
dec
cmpb
push
add
sarb
xchg
xor
adc
xchg
add
jne
mov
scas
andl
add
mov
push
pop
and
push
rcr
sub
add
pop
nop
cmc
sub
xlat
vmread
cmp
jmp
push
cli
jns
je
adc
sarl
mov
enter
mov
rcll
repnz
lock
jo
dec
imul
mov
das
jmp
rorb
sbb
push
xchg
push
aaa
and
insl
subl
pop
mov
fwait
and
xchg
pop
or
xlat
mov
and
dec
jae
push
js
fsubrl
sub
fwait
test
ja
sub
xor
push
lock
xor
loop
add
ja
std
jl
dec
adc
add
ret
stc
mov
sbbb
dec
xchg
test
jl
dec
jmp
adcb
jo
dec
sahf
aaa
mov
mov
decb
mov
enter
cli
in
aad
adc
aam
mov
jne
test
cwtl
out
pop
dec
dec
mov
mov
pushf
xlat
push
fcom
jecxz
orb
dec
imul
pop
ss
cmc
mov
xorl
and
xchg
lret
jmp
sbbb
and
fwait
mov
cltd
stos
jne
pushf
add
sar
in
loope
xlat
push
inc
mov
pusha
mov
ja
mov
mov
mov
push
xchg
pusha
je
jnp
icebp
push
xchg
push
mov
xchg
adc
jnp
cmpsl
pop
dec
mov
lret
je
loop
mov
pusha
jg
push
mov
pop
xlat
das
push
or
push
mov
xchg
or
pusha
mov
mov
pop
insb
push
mov
mov
mov
rcrb
outsl
ja
loope
xlat
bound
addl
lret
lcall
js
rclb
jg
andb
pop
mov
daa
xlat
mov
cmp
cltd
andl
addl
pusha
mov
mov
jle
lea
inc
negb
adc
adc
and
icebp
call
dec
mov
xlat
add
jns
sarb
into
mov
ss
xor
cmp
addb
xchg
in
repnz
inc
sub
jecxz
faddp
and
cli
in
xchg
fldenv
sbb
xchg
pop
lea
iret
pop
fsubrs
adc
pusha
popa
fs
push
jne
mov
cs
dec
pop
mov
push
repz
icebp
inc
pop
push
or
out
aaa
xchg
aad
fbld
ja
push
add
xor
mov
mov
mov
into
pusha
inc
cmp
push
shll
cld
pop
push
xor
dec
push
xchg
jbe
les
in
xchg
xchg
jp
fcomps
arpl
mov
cmp
into
cltd
xchg
nop
jae
andb
jno
nop
insl
fcmovnbe
int3
adc
push
test
pop
fs
sbb
mov
fwait
add
mov
pop
pop
adc
pusha
jge
mov
pop
xlat
mov
adc
xchg
inc
jl
cltd
outsl
xor
xchg
and
inc
dec
mov
stos
sub
sbbb
dec
shll
inc
bound
inc
orb
imul
shll
jno
jl
sbb
test
pop
in
movsl
pop
pusha
or
movsl
push
notb
call
jo
out
stos
fadds
movsb
and
or
into
stos
movd
cwtl
clc
sbb
jle
lcall
mov
pop
icebp
xchg
xlat
scas
rcll
adc
pop
aas
ljmp
cmp
xorb
aam
stos
push
mov
test
mov
add
lret
cmp
divl
push
sbb
inc
dec
or
shrl
push
inc
mov
xchg
sbb
mov
iret
mov
call
repnz
mov
mov
iret
jmp
xchg
jbe
into
cltd
pop
sahf
xlat
add
ficoml
pop
pop
cs
aaa
xor
mov
add
ret
andb
loop
cmc
movsb
ja
mov
add
daa
ljmp
lcall
and
adc
dec
movsb
inc
imul
pop
jb
inc
scas
fldl
pop
jl
inc
sbb
add
lods
xchg
clc
fcomip
push
fmul
andb
aaa
nop
xor
insl
mov
jmp
fwait
and
sub
cmp
lahf
rolb
jns
mov
jnp
in
inc
push
das
aam
pushf
add
cmc
pop
fcomps
jle
cmpsl
pextrw
push
xor
aam
cmp
adc
cmp
xlat
adc
dec
xchg
and
incl
or
mov
cmp
lret
and
ret
push
dec
mov
add
movb
mov
pop
push
repz
xorb
fdivs
or
push
sbbl
lock
test
adc
stos
mov
sahf
push
xor
call
clc
mov
jmp
mov
mov
push
mov
pop
ds
xlat
cmpb
je
mov
jo
les
in
lock
fnstcw
int
lock
dec
mov
push
inc
jl
xlat
in
lods
fsts
sub
sub
ret
aam
popf
imul
pop
addb
adc
adc
icebp
mov
jae
jg
clc
aam
cmovns
repnz
das
xor
sbb
cmp
pusha
sub
pop
cs
fldl
xor
lock
mov
mov
aaa
ljmp
cli
cmpsb
lret
cmp
mov
imul
rol
sbb
push
mov
mov
xlat
add
push
in
sub
push
movsl
pop
mov
jns
push
dec
pop
xchg
adc
add
fsubr
std
imul
call
add
xor
iret
or
mov
icebp
mov
adc
popl
xchg
sahf
imul
mov
lock
jg
adc
sbb
divl
int
sbb
cli
sbb
lcall
in
push
lea
or
orb
add
jp
aam
mov
ljmp
cmc
cmp
ljmp
popa
fcompl
data16
iret
and
xchg
sbbl
push
pop
mov
sub
les
rclb
out
fistps
ret
lods
add
fmul
in
or
pop
xchg
pop
daa
pop
lods
les
pop
xor
enter
lds
scas
jg
sbb
mov
mov
icebp
test
inc
adc
icebp
cltd
fstpl
pop
ja
sbb
repz
mov
ret
addr16
andnps
lahf
pop
xchg
dec
test
add
or
clc
cs
and
fiaddl
cmp
jae
imul
push
popa
lock
in
mov
adc
push
andl
enter
insb
xlat
das
sub
xor
or
and
jmp
pusha
add
sub
cmc
aaa
pop
scas
mov
xor
cs
mov
dec
stos
fwait
xchg
enter
int3
pop
insl
ret
xchg
jb
nop
cmovb
stc
and
jne
cmp
add
jl
add
rcl
dec
das
xlat
inc
test
add
cmp
sbb
lock
xlat
xchg
int3
std
inc
pop
and
pusha
test
test
rcr
sti
push
shll
mov
cli
pushf
push
pusha
inc
sub
enter
mov
fsts
jge
je
cli
push
sbb
pop
xlat
mov
add
push
push
test
inc
andb
or
mov
add
pusha
cmp
js
mov
sub
sub
es
push
fadds
ror
test
xor
testl
shrl
pop
xchg
adc
pop
pop
nop
inc
mov
push
lret
test
testb
adc
pop
sbb
xor
cmc
push
xchg
leave
and
repnz
data16
sbb
xchg
pop
push
cmp
push
pop
insb
push
inc
arpl
out
lcall
stos
jle
cld
xor
pop
or
mov
mov
leave
pop
int3
adc
loop
faddl
adc
lock
fimuls
lret
xor
cmp
sbb
daa
jne
movsb
add
dec
test
inc
or
stos
in
cld
mov
sbb
adc
mov
mov
cmc
xchg
ljmp
mov
mov
mov
mov
sahf
popf
iret
jmp
mov
cmc
pop
xlat
mov
idivb
fbld
pop
dec
adc
push
inc
iret
out
imull
jmp
aam
movsl
repnz
popf
fisttpl
loop
cs
pop
daa
push
xor
mov
sahf
icebp
mov
clc
sarl
jg
bound
mov
sbb
cmp
and
rcll
or
fisubrl
int3
scas
xorb
cmp
lret
movsb
add
mov
std
cmpsb
jge
mov
sahf
imul
call
and
mov
push
stc
push
addr16
sub
sbb
cwtl
dec
nop
mov
add
jae
cmp
ss
inc
push
out
xlat
mov
roll
in
mov
repz
mov
rcl
lods
aas
push
mov
pusha
scas
jnp
jp
ja
or
adc
scas
jg
js
roll
rolb
cwtl
insl
cmp
pop
lods
dec
pop
andb
adc
mov
popf
mov
es
xchg
inc
je
clc
xor
insl
dec
sub
mov
mov
push
pop
or
pop
cmp
or
push
cmp
mov
mov
incl
xchg
lret
subb
fistpl
and
in
cmp
push
cmp
and
xlat
call
sahf
mov
push
push
ljmp
push
fbstp
or
lcall
xchg
hlt
adc
lcall
aad
jecxz
repnz
add
pop
enter
mov
or
pop
mov
test
adc
aas
hlt
dec
sbb
and
jmp
xor
clc
and
fistl
imul
daa
sub
jae
and
cmp
adc
push
push
sbb
sub
mov
outsb
out
mov
and
aam
mov
aaa
mov
pushf
cltd
test
iret
icebp
js,pt
test
mov
scas
mov
fistl
aam
pop
pop
dec
rorb
or
inc
aaa
xlat
fadd
je
mov
lods
push
test
jmp
cwtl
and
mov
popa
xor
gs
pusha
aas
inc
sbb
test
mov
js
lods
sbb
ja
xlat
rcll
xlat
mov
xchg
jp
inc
push
or
data16
inc
dec
jo
xorb
push
leave
adc
dec
pop
add
add
andb
aaa
push
ret
or
rcr
pop
in
pop
inc
jp
stos
sbb
mov
fsubs
cmp
test
jb
inc
or
stos
pop
mov
addb
xor
insl
pusha
and
lock
xchg
sarl
xor
pop
jl
push
movsl
jo
adc
cmpsl
xlat
ret
or
orb
adc
loop
push
fsubs
popa
mov
imul
dec
mov
xlat
mov
jecxz
mov
shll
stc
stc
push
mov
fxch
inc
mov
dec
push
pop
in
sub
cmc
cld
cmc
add
xor
aam
sub
push
dec
aas
jns
fidivrl
dec
mov
adc
outsb
xchg
pusha
cmpsb
jne
xor
fs
imul
dec
fsubl
mov
dec
call
popa
addb
or
cwtl
and
mov
push
add
mov
sub
shl
push
jae
movsb
and
or
jecxz
xlat
int3
jge
cs
and
cmp
icebp
sar
cmp
sub
aam
leave
int
inc
sbbb
xlat
mov
jp
mov
inc
in
mov
test
xchg
and
adc
loop
outsl
pop
xlat
out
mov
stos
sbb
das
sub
pusha
icebp
je
sub
stos
mov
cli
xor
and
add
sub
scas
out
mov
jb
and
fsts
xlat
mov
push
subb
aam
cld
sbb
cli
mov
jo
xor
mov
outsb
xchg
xchg
icebp
cmp
add
mov
rorl
enter
push
icebp
pushw
pusha
stc
jl
jg
ret
xchg
add
nop
stc
shl
push
or
js
icebp
or
lahf
sbb
gs
loop
imul
outsl
inc
xchg
adc
xor
pop
das
dec
loope
xchg
push
jnp
xlat
push
filds
in
ja
xchg
xchg
mov
adc
cmc
or
adc
xlat
ret
rorl
inc
ss
scas
xchg
xor
leave
jge
sub
ret
aad
out
mov
mov
lds
mov
stos
filds
and
mov
pop
pusha
cld
es
in
push
hlt
xlat
push
ljmp
rcl
into
push
xchg
or
inc
xlat
xchg
and
or
gs
pusha
das
in
cmp
sub
test
mov
jmp
cwtl
daa
dec
cmp
xor
sbb
cmp
xchg
bswap
adc
xor
push
andb
fwait
jns
jno
into
sbb
xchg
lods
sbb
test
mov
adc
stos
stos
push
fistpl
mov
pop
in
test
mov
pusha
scas
ret
dec
add
add
in
xor
jge
loop
and
int3
jecxz
idivl
lds
shll
adc
jno
jge
push
mov
icebp
cmp
jne
sbb
fistpll
rorl
fiadds
pop
cmc
or
sti
aas
lret
nop
movsb
loop
insl
push
mov
pusha
test
mov
in
add
ss
pusha
repz
adc
cwtl
sub
rol
xorb
pop
test
hlt
fistpl
scas
and
cmp
inc
lods
testl
sub
cmp
rcrl
or
mov
xor
mov
sub
test
mov
in
xor
xchg
xchg
xor
mov
sub
jl
or
lret
pop
dec
lods
icebp
add
and
xchg
mov
lahf
cmp
mov
inc
jb
fistpl
inc
sahf
fdivr
popf
add
lea
aad
mov
imul
pop
lcall
cmpsb
sahf
xor
xchg
ret
dec
pop
xor
adc
test
fs
xor
aad
xor
mov
test
jl
pusha
popf
pop
jmp
sarl
lret
mov
pop
cmp
test
and
lcall
and
insl
fs
imul
das
push
adc
out
addl
dec
fsubrs
xchg
dec
movsb
ss
fdivrs
stos
orb
ljmp
mov
lods
xor
jl
lret
pop
sub
enter
sub
sahf
outsb
mov
in
fucomi
jnp
mov
mov
mov
mov
movb
pop
cwtl
xlat
lea
mov
in
xor
in
test
xchg
imul
pop
fiaddl
pusha
pop
je
jg
pop
xorb
lahf
subb
cli
jno
cli
jmp
rcl
or
sub
aad
and
sbb
fisubl
sbb
rorl
xlat
test
int3
push
xchg
and
xchg
xor
aas
push
cs
movsl
add
jne
addl
jnp
loope
jo
hlt
test
aaa
insl
mov
je
or
loop
stos
fisubs
mov
in
sahf
iret
inc
push
fsubrl
pop
pusha
mov
or
or
lock
dec
addr16
insb
add
pop
cmpsl
inc
mov
out
cmpsl
hlt
or
outsb
ja
pusha
add
jl
push
out
xlat
lahf
xlat
dec
movb
gs
and
jg
cwtl
xchg
fwait
add
jg
xchg
xchg
inc
subb
orl
fmull
sti
pop
add
aad
mov
sahf
movsl
enter
and
sub
jg
xor
mov
je
outsb
mov
or
fsubs
sub
ret
add
push
stos
mov
scas
enter
pop
pop
dec
push
inc
paddusb
mov
dec
in
mov
and
stos
dec
dec
jnp
and
ds
fidivrs
or
fimuls
fdiv
cmp
stc
fstp
mov
xchg
lret
loop
sub
pop
fistpll
dec
aam
xchg
fwait
jns
ds
iret
mov
xorb
gs
adc
in
push
scas
inc
or
fldenv
adcb
popf
adc
inc
and
jmp
repnz
push
aaa
cmp
movsb
jg
xlat
jo
in
dec
mov
add
jge
in
push
pop
xlat
dec
ss
inc
ljmp
and
jp
jmp
jo
sbb
fcomp
and
cmp
mov
mov
xlat
into
gs
xchg
dec
jecxz
icebp
arpl
dec
nop
xlat
in
mov
mov
insl
push
imul
aaa
jle
ss
sub
or
into
add
inc
or
dec
push
xchg
in
dec
shl
inc
sarb
rcrl
sahf
mov
pusha
mov
cs
inc
xchg
add
push
xor
sbb
outsl
jg
push
xchg
inc
sub
pop
mov
cmpl
pusha
or
jl
fmul
test
loopne
dec
push
lock
enter
ja
and
xlat
movl
dec
dec
mov
mov
std
nop
xlat
stos
mov
mov
sarl
and
test
in
mov
in
push
add
inc
andb
data16
xlat
std
jmp
mov
inc
ret
repz
jno
fadds
fadd
and
das
pusha
fidivrs
cmpb
mov
leave
mov
xor
push
xchg
add
cli
dec
iret
mov
rcl
clc
in
jae
sub
sub
jmp
mov
daa
gs
push
jne
add
push
dec
popf
sub
out
popa
insl
adcb
outsb
lods
mov
xlat
mov
jne
jecxz
sbb
mov
push
cmpb
sub
jg
call
inc
repz
fst
inc
sbb
xorb
ljmp
test
hlt
andb
xor
ds
popf
pop
sub
xchg
cmpsb
data16
add
fldenv
xchg
inc
pop
movsl
cmp
jmp
jg
lcall
cmp
mov
and
adc
hlt
adc
cmp
adc
mov
subl
jmp
pop
xor
cmp
ret
sub
mov
pop
sar
push
gs
cmp
mov
inc
ljmp
xor
aad
popa
adc
xor
cwtl
ja
jne
mov
push
fcomp
push
pop
lcall
popa
psraw
xchg
push
int
sub
call
xchg
dec
and
pop
out
es
lods
xchg
imul
pop
mov
adc
pushf
pusha
ja
orl
sbb
out
out
pop
jbe
loope
mov
add
pusha
pop
jge
xor
pop
xor
std
addr16
mov
xlat
adc
inc
repnz
xchg
mov
inc
xor
and
fisttps
dec
xchg
orb
shlb
pop
inc
push
lret
xor
add
pusha
lcall
fwait
outsb
cmc
in
test
hlt
scas
push
dec
jnp
pop
inc
inc
rcrb
fcomi
jb
jl
not
icebp
movb
push
lret
out
daa
and
fwait
jge
in
in
imul
pop
adc
push
and
test
mov
rclb
or
sbb
xlat
lcall
pushl
nop
loopne
adc
test
sub
cmp
fnsave
xlat
xor
lret
int
pop
mov
sbb
and
fisttpll
mov
fnstcw
pop
pop
and
push
push
into
adc
mov
fcmovb
sbbb
sbb
fwait
ja
lods
in
jl
adc
out
jge
mov
addr16
movl
xor
gs
cmp
mov
dec
add
insb
scas
int3
fimuls
inc
fsubrp
mov
mov
pop
mov
pop
loop
inc
in
cmp
ds
adc
inc
mov
pop
insl
push
icebp
push
inc
inc
mov
adc
xchg
push
xlat
fldt
inc
dec
fistl
and
push
mov
mov
xlat
dec
rcl
outsl
inc
adc
sahf
andl
xchg
fstpl
xchg
divb
jbe
xchg
cmc
loope
orb
pop
hlt
iret
mov
ds
in
push
xor
cmp
or
and
fadds
int3
lods
sub
mov
loopne
and
xlat
mov
and
inc
xchg
rolb
mov
jp
and
arpl
cmp
inc
cmp
stos
dec
jl
push
or
xchg
mov
jge
or
push
adc
mov
cmp
daa
les
pusha
enter
lds
inc
mov
insl
jle
iret
insb
aam
daa
push
pop
adc
iret
cmc
add
sbb
int3
cld
jl
test
arpl
or
iret
inc
dec
pop
ljmp
mov
xlat
aaa
jecxz
adcl
cmpsl
pop
xor
add
popf
test
imul
in
cwtl
scas
xor
cmp
mov
pop
in
xlat
mov
into
xchg
popa
subb
sub
arpl
push
ljmp
lret
popa
fisubrs
sub
xor
xor
push
push
push
fmuls
sub
jp
dec
pop
dec
xchg
inc
and
insl
push
and
leave
aas
fmul
mov
movsb
xor
mov
lcall
les
pop
in
jnp
sub
mov
shll
mov
add
jp
orb
maxps
mov
int3
dec
xchg
divb
lods
mov
pop
test
out
addr16
call
fcom
push
xor
mov
pusha
pop
pop
mov
fcompl
into
jns
outsl
jnp
jnp
push
push
mov
pop
mov
inc
shl
in
ficompl
or
mov
ret
dec
imul
pop
inc
push
jns
pusha
xor
les
subb
das
jnp
cmp
aad
lret
pop
jmp
jb
movsl
outsl
sbb
roll
push
fsubrs
int
daa
jg
xlat
xor
cld
inc
int3
xlat
cmpsb
mov
mov
cltd
ret
in
aad
add
cs
xor
xchg
cmp
sbb
mov
adc
mov
inc
xchg
addr16
mov
and
or
cld
and
pusha
lods
lods
push
push
inc
push
aad
xor
lea
mov
lret
rorl
push
pop
fdivs
jns
hlt
rorb
cmpb
cmc
test
or
lcall
pusha
fistps
fisubs
pusha
jno
repnz
add
jp
pop
pop
dec
shll
push
mov
adc
xlat
mov
and
arpl
arpl
stc
into
pop
icebp
cli
xchg
pop
xor
adc
pop
idiv
nop
movzwl
cmpsl
xlat
dec
pusha
bound
dec
pop
mov
dec
shll
and
bound
fstps
mov
clc
push
cltd
mov
xor
push
jnp
sbbl
outsl
xchg
cmp
push
xchg
mov
inc
cmc
pop
rcl
bound
jmp
sub
pop
pop
xchg
lret
add
cltd
test
shll
pusha
ds
inc
arpl
sub
je
roll
test
push
rcl
nop
xchg
xchg
mov
xchg
mov
xchg
ret
mov
jb
mov
jae
adc
mov
xor
enter
movsl
popl
xor
repnz
lret
ss
fdivrl
sbbb
adc
inc
xlat
popa
jno
cmp
xchg
mov
pusha
mov
push
xor
or
fmuls
adc
shll
mov
pop
sbb
imul
or
iret
xor
and
jbe
nop
push
lods
cmp
out
sbb
imul
aaa
enter
mov
ljmp
nop
fbld
xlat
pop
lock
aas
xchg
jae
inc
addb
add
sbb
mov
addl
or
adc
ds
das
xor
in
or
add
dec
push
xchg
dec
leave
in
call
jae
xor
and
lahf
shll
lcall
addr16
pushf
mov
pop
add
and
jg
scas
jb
shlb
stos
ja
add
pusha
and
xchg
dec
repnz
sub
fadds
mov
xchg
add
mov
cmpsb
leave
dec
arpl
mov
jnp
xor
out
iret
popf
int
dec
mov
jbe
push
adc
lock
enter
pop
sbb
and
movsb
pop
dec
mov
sahf
out
jae
push
lock
dec
roll
jle
test
sti
insb
lahf
ss
adc
mov
lcall
pop
xchg
loop
fs
stos
mov
jnp
jno
mov
mov
sahf
mov
pop
out
cmp
push
inc
mov
sets
faddp
sti
sbb
fdivrl
jle
out
mov
arpl
insb
lea
push
fsubr
mov
add
jg
mov
jo
in
and
xlat
les
loop
xchg
jge
ds
andb
xchg
mov
rcl
test
stos
sti
sub
mov
xchg
pop
loope
ja
and
mov
pop
lcall
add
test
xlat
mov
mov
inc
sbb
mov
xor
in
std
inc
scas
into
jmp
ss
mov
pop
fmuls
jne
mov
in
subb
aaa
jno
mov
xlat
push
dec
jns
pop
push
ret
or
fwait
pop
aam
adc
jbe
jae
test
shlb
inc
cmp
mov
nop
out
jp
pop
and
and
or
mov
mov
in
push
test
lock
add
adc
dec
jecxz
lret
xorb
cmp
ds
sub
or
rcrb
iret
dec
pushf
sbb
mov
jg
ljmp
jae
ret
mov
mov
adc
fstpl
popf
push
inc
add
das
xor
mov
pop
sbb
lea
sahf
mov
cltd
xchg
xchg
mov
xlat
iret
inc
pop
adc
dec
or
stos
xchg
inc
sub
leave
inc
in
loop
adcb
or
jecxz
jbe
scas
cmpsb
xchg
adc
popa
out
push
out
push
inc
in
or
push
xlat
mov
cmc
and
or
enter
xchg
shlb
daa
mov
jne
sbb
jecxz
int3
ds
subb
xor
aam
ljmp
fsubrs
das
int
sahf
xorb
inc
out
cmpsl
scas
aad
jb
inc
mov
outsb
cmpb
inc
les
and
stos
xlat
mov
pusha
dec
stos
inc
or
xlat
mov
dec
mov
aad
mov
rorb
fdivrs
fdivs
pop
push
je
jbe
gs
int3
jbe
xor
shll
xchg
dec
out
xlat
mov
jg
sbb
jne
in
add
pop
pushf
ss
int3
or
or
cmp
dec
fidivrl
movsb
into
mov
lods
out
not
mov
insl
loop
pusha
xchg
sub
enter
add
push
pop
cs
in
dec
ljmp
push
div
cmp
jnp
shl
call
xlat
sub
mov
pusha
inc
enter
dec
stc
cs
ret
jp
fadds
dec
cmpb
xchg
add
mov
inc
movsb
aad
xchg
popf
xchg
dec
jecxz
insl
cmpb
push
idivb
mov
pop
inc
sub
inc
pushf
adc
clc
mov
xchg
jmp
ds
push
sub
and
dec
int
or
add
inc
mov
negl
xor
je
inc
aam
sub
data16
out
sbb
xchg
cs
rcll
int
orb
add
call
push
jl
jle
cmp
fstpl
lcall
adc
shrb
mov
push
mov
sbbb
jb
mov
call
jmp
ret
mov
not
inc
push
jne
push
jecxz
lods
cs
stos
lret
sub
fstpt
fs
addb
in
lahf
sub
sub
mov
or
clc
cmpb
and
loopne
mov
xchg
and
sbb
lods
aam
inc
cmpsb
sbbb
jge
push
es
lahf
pop
mov
addb
cli
push
mov
add
ljmp
pusha
ficompl
loope
xlat
mov
jae
pusha
pop
mov
xlat
inc
stos
jecxz
push
xor
fdivrs
or
in
jg
xchg
sub
in
shl
jbe
test
js
js
cmpb
out
dec
cli
lods
ss
mov
and
dec
push
pusha
and
or
sbb
outsb
xor
push
pop
sbb
jg
add
mov
mov
jmp
xor
sbb
add
xlat
ljmp
shlb
shll
outsl
aam
mov
push
and
pop
xlat
dec
jge
imul
leave
pop
insl
cmp
jno
mov
mov
jp
fmuls
call
pop
addb
inc
das
popa
inc
mov
andb
addb
xchg
shll
xchg
and
jge
cmpb
shlb
shlb
mull
cmp
subl
mov
adc
push
push
clc
stos
fdivrs
push
jne
jmp
jbe
xlat
pop
in
outsl
ffree
push
jne
imul
cmpl
fsubs
test
cmp
push
inc
in
jmp
cli
sahf
jns
dec
popf
loopne
cltd
or
hlt
lret
insl
push
testb
hlt
test
xlat
adc
mov
cmpsb
dec
pop
lret
adc
and
ja
rcrb
push
and
jbe
dec
pop
mov
subb
pop
cmp
notl
pop
and
lret
jns
add
pop
mov
push
in
je
sti
cwtl
pop
loop
sbb
jae
test
pop
test
mov
xchg
ret
adc
stos
push
js
movsl
push
ret
and
xchg
aad
add
bound
das
lcall
and
lods
xor
sbb
xchg
add
adc
divl
pop
test
sbb
cpuid
lock
add
xchg
push
mov
repnz
pusha
pop
cld
leave
pusha
xlat
insl
jge
popa
das
aam
add
pop
push
jp
dec
pusha
sbb
cld
popa
call
sbb
add
inc
loope
xchg
fstpt
test
je
out
adc
pushf
pop
stc
mov
xor
aas
fmul
push
push
and
dec
pop
pusha
mov
and
fcmovnbe
lods
inc
pop
lahf
ss
addb
mulb
cmc
inc
sbb
adc
sbb
jns
mov
mov
dec
push
aas
jae
in
jp
addb
repnz
mov
and
pop
aad
jge
sbb
test
push
pushf
xorb
xchg
stos
rolb
or
mov
ds
inc
inc
xlat
mov
mov
aad
sub
push
loope
or
pop
mov
push
xchg
xlat
pop
mov
mov
jnp
sbb
mov
and
shl
inc
test
iret
add
cltd
jno
loopne
sti
adc
mov
negb
xlat
sbb
stc
and
out
into
stos
stc
mov
pushf
lods
pusha
push
test
mov
lods
aam
xlat
mov
sbb
leave
subb
in
xlat
ss
sub
pop
mov
leave
xchg
mov
mov
or
pusha
add
cwtl
jg
inc
jns
aad
xchg
pusha
sub
mov
fsubr
daa
lret
fwait
jo
adc
fistps
ja
aam
mov
or
jno
arpl
leave
adc
aad
test
leave
dec
dec
dec
ret
sarl
sti
outsl
rcrl
mov
xlat
mov
repz
je
add
pop
xlat
in
cmp
adc
cwtl
pushf
xchg
fwait
xor
and
in
adc
mov
andb
cwtl
jmp
not
pusha
xchg
add
imul
and
or
aad
push
push
mov
negb
push
dec
inc
aad
fbld
ret
mov
std
sub
adc
hlt
test
fdivl
repnz
dec
pop
loopne
cld
inc
lcall
sub
mov
ja
xlat
ds
popf
cltd
mov
rclb
lahf
ss
dec
pusha
xchg
and
repnz
cltd
lret
movsl
or
mov
mov
sbb
mov
xor
xchg
or
pop
jne
jne
enter
xlat
mov
push
cmpb
loop
std
lahf
inc
sbb
testl
push
int3
or
rcrb
xchg
sbb
push
lret
lock
mov
jecxz
xlat
mov
jns
jecxz
mov
icebp
cmpsl
dec
stos
pop
pop
push
add
stos
es
mov
jns
inc
fcompl
adc
mov
std
jae
inc
add
jne
les
and
push
loopne
sar
mov
add
jnp
lcall
jb
sub
sahf
mov
or
leave
out
mov
cmc
scas
lods
xchg
inc
cmp
stos
data16
cmpsb
and
cmpb
cld
add
ja
xchg
add
jne,pt
test
dec
cmpsl
or
scas
dec
pop
adc
fstpt
push
jecxz
pop
push
xor
xor
or
xchg
inc
inc
stc
push
pop
fwait
sub
or
cld
xchg
mov
stos
dec
pop
jo
nop
sbb
movsb
and
mov
aad
mov
shll
icebp
repnz
andl
sub
lcall
pop
jno
mov
jmp
sbb
adc
jb
inc
and
loope
mov
or
jle
and
fisubl
gs
push
xor
test
ljmp
sbb
insl
xor
and
mov
shrb
pop
jmp
sub
sub
sub
cld
xchg
addl
mov
leave
shll
inc
les
test
push
insb
cmp
rcll
repnz
sbbb
adc
mov
inc
fdivrs
push
adc
sub
adc
pusha
mov
xor
jno
mov
pop
push
push
sub
aad
mov
mov
movsl
ret
or
or
rorb
dec
out
and
push
iret
push
lods
hlt
ret
pushl
cld
jbe
clc
push
pusha
in
adc
aam
fistpl
cmp
aaa
pusha
dec
dec
inc
addb
xchg
fbld
fcoms
mov
sub
fnsave
mov
cli
jb
imul
pusha
inc
out
sbb
add
ret
repnz
ficomps
cmpb
push
inc
nop
inc
sub
std
xchg
sti
xlat
in
lock
or
pusha
jmp
jo
mov
cld
iret
cmpsb
fbld
test
sti
mov
add
ss
mov
dec
ret
stos
jmp
pop
mov
testb
and
mov
inc
adc
xchg
xchg
mull
iret
in
jns
pop
rolb
popa
test
xchg
xchg
clc
hlt
jo
pop
push
outsl
pusha
pop
cmpl
sbb
adc
imul
clc
lahf
adc
scas
stos
or
dec
scas
roll
pop
xor
or
mov
out
iret
add
sbb
aam
hlt
enter
jns
repz
cmpsl
insb
jno
jp
lods
pusha
repz
pop
push
pop
pop
mov
xchg
stc
cmc
cmpsl
shlb
xchg
add
xlat
es
mov
outsb
std
xor
fimuls
loop
cmp
push
fidivrs
push
mov
xchg
iret
pop
shlb
and
popa
lock
push
xlat
dec
jmp
or
lcall
mov
lds
adc
int
popf
or
sub
cmpsb
adcb
aam
or
mov
lret
jne
leave
pusha
fldt
in
dec
dec
push
xlat
or
ja
lcall
xor
xlat
and
or
in
ret
sub
repz
pusha
xor
repnz
or
lock
cmpsb
andb
jge
adcb
mov
aad
sbb
into
ds
jp
jnp
sbbb
bound
mov
je
in
fildl
mov
inc
sbb
fidivrs
mov
xlat
sti
mov
pop
loopne
gs
xchg
sub
sbb
xchg
inc
pusha
sbb
jl
dec
pop
push
dec
roll
pusha
fcomps
ss
shlb
push
fstpl
loopne
outsl
jecxz
adc
lcall
inc
in
push
and
cmp
int3
xchg
and
adc
and
mov
adc
jo
outsl
daa
add
mov
rolb
xchg
mov
jg
sbb
cmpsl
popf
mov
ficoml
daa
xlat
fcompl
sti
xchg
jl
sahf
das
jle
cmpsl
mov
mov
mov
test
test
fildll
push
fs
in
or
pushf
jl
mov
push
or
sbb
pop
gs
mov
and
ja
hlt
ficoml
sbb
jp
adc
jge
leave
bndldx
pop
out
add
ret
jle
mov
mov
inc
sbb
cwtl
jge
shl
pop
pop
idivb
dec
fadds
jae
or
lret
push
fmuls
pop
loope
pop
pop
fmuls
xchg
fidivs
or
inc
pop
and
mov
in
std
pop
pop
test
out
pop
mov
stc
incb
push
xlat
std
and
xor
pop
test
xor
fcoms
lds
test
orb
mov
fninit
iret
lret
pusha
pushf
xchg
push
cmpsl
push
jg
cmp
sbb
stos
xlat
cmpsb
stc
mov
pop
orb
mov
xlat
lcall
ds
push
movsl
aam
int3
xor
mov
cld
mov
stos
push
fsubs
and
call
fstps
aaa
popf
xor
leave
lcall
loop
push
cmp
inc
hlt
xchg
das
mov
ja
mov
sahf
movl
jmp
lea
pop
andl
sub
pop
fcomp
jae
add
jl
fwait
cmpb
int3
les
popf
sarb
cmp
or
mov
lahf
cmpb
and
call
cmp
sbbb
push
in
mov
xlat
mov
fwait
xor
lahf
or
js
jl
pusha
xchg
lret
ffreep
mov
imul
cmp
adc
out
aas
dec
aam
fistl
jb
jbe
cld
or
cmp
jno
das
push
xchg
cmpsl
insb
out
shrl
jns
or
and
aaa
stc
call
inc
xchg
mov
les
pop
sub
aaa
pop
inc
fdiv
xor
push
cwtl
and
push
pop
cmp
xchg
pusha
mov
jno
mov
mov
mov
mov
pusha
cltd
or
dec
xchg
push
push
pusha
push
in
push
dec
mov
pop
testl
outsl
pop
andb
add
gs
test
iret
xchg
add
pusha
and
data16
or
fcomps
imul
xchg
jmp
sbb
mov
es
call
pop
fsubl
pop
inc
pop
sub
add
std
pushf
xchg
push
pop
ljmp
pop
hlt
enter
xlat
stos
inc
adc
scas
pop
and
lret
adc
mov
jge
xlat
mov
add
sbbb
mov
xlat
arpl
mov
jecxz
cmp
out
mov
in
adc
push
pushf
xlat
lea
xor
jg
mov
movsb
push
push
push
xor
mov
mov
out
cmp
jbe
jp
stc
xchg
clc
cmp
std
mov
mov
insb
xor
cmpsl
dec
lret
addr16
int3
xlat
mov
push
xor
out
cmpsl
add
mov
in
idivb
std
in
fistl
fmuls
aas
mov
jle
cltd
icebp
dec
mov
xlat
pushf
and
dec
subb
and
pop
pop
xlat
mov
test
xchg
cwtl
fcompl
mov
mov
xchg
mov
lds
pop
adcl
roll
mov
inc
iret
cmc
into
mov
mov
dec
out
test
inc
jp
enter
mov
rol
inc
in
dec
and
sub
adc
push
frstor
ja
jecxz
pushf
scas
xor
inc
xchg
int
add
dec
jle
add
sbb
pusha
mov
pop
pop
shl
xor
test
es
or
mov
leave
cmove
fildll
sbb
or
dec
adc
cmovae
xlat
jb
xchg
das
loop
dec
adcb
fbld
into
sbb
xlat
stc
ret
leave
mov
pop
cwtl
std
mov
jo
rcrb
add
sub
lods
xorb
add
or
push
les
mov
pop
mov
andl
mov
mov
adcb
out
add
iret
dec
inc
subl
mov
dec
sub
push
aad
adc
push
add
mov
ja
cmp
push
imul
lret
jge
test
mov
add
dec
repnz
fcoms
pop
sub
adc
jnp
inc
jae
xor
push
mov
mov
pusha
scas
add
sub
xlat
push
xor
insb
int3
add
mov
icebp
pop
pop
leave
outsb
in
xchg
mov
fisubl
jne
pop
fdivs
adc
dec
and
pushf
and
jmp
ret
bound
add
into
repz
push
lods
jno
add
pop
cmp
jno
inc
jnp
lods
mov
dec
shlb
psraw
xor
xchg
xchg
gs
or
ret
ja
loop
pop
adc
cmp
lock
popa
push
push
popf
repz
int3
mov
daa
push
xlat
or
adc
jle
and
add
cmpb
sar
loop
nop
aas
push
pusha
adc
pop
mov
iret
mov
outsb
dec
push
push
push
xchg
jne
fcomps
jl
jle
outsl
imul
inc
and
ret
cmp
ja
fidivs
adc
mov
and
subb
mov
pop
push
es
adc
int3
push
mov
inc
jecxz
pop
pop
add
popa
lods
and
mov
sbb
add
sbb
out
xchg
or
pop
addr16
sti
aas
mov
filds
xor
popa
orb
jp
lods
mov
mov
or
test
subl
jb
add
cmp
jb,pn
fdivrl
dec
lods
in
push
loopne
sub
in
fdivs
push
mov
jg
push
fwait
rep
es
fcompl
push
pop
pop
jmp
pop
push
test
je
lret
mov
pop
ret
xchg
mov
std
divl
dec
fmul
jp
xchg
sub
movsb
fldl
sahf
mov
test
and
fldl
dec
push
sahf
movsb
lods
jb
movsb
push
movsb
out
sti
pop
xchg
push
das
cmp
adc
shlb
pop
gs
ss
xchg
andb
xlat
fistpll
subl
imul
aaa
jbe
mov
lret
or
addb
mov
mov
insb
inc
mov
xchg
js
push
cmp
add
push
ret
repnz
inc
divb
mull
jne
imul
pop
cwtl
movsl
pop
nop
jnp
or
adcl
repnz
outsl
pop
push
lods
mov
fwait
insl
sahf
adc
cltd
enter
inc
sahf
mov
jg
mov
mov
lock
or
cmp
jecxz
lcall
jle
xchg
pusha
loopne
jae
mov
xchg
push
adc
popa
inc
pusha
cli
movsb
xchg
sahf
jmp
in
xlat
ljmp
push
mov
adcb
sbb
cmpsl
enter
xchg
imul
mov
push
ret
cwtl
rorb
pop
lret
pop
dec
xchg
add
sub
test
pop
rcll
mov
pop
mov
popf
cli
das
loopne
mov
push
adc
pop
pop
fsubs
icebp
xchg
shlb
mov
es
cmp
outsl
xchg
arpl
push
pop
jp
push
inc
and
pop
xlat
push
rcrb
dec
adc
call
insb
and
adc
xchg
inc
xchg
pusha
xor
cmp
push
and
leave
adc
lcall
daa
fmuls
inc
ret
xor
pusha
inc
repz
cmc
popf
inc
fcomp
adc
adc
mov
adc
add
sti
xlat
jl
scas
pushf
and
or
or
incl
fnstsw
push
push
mov
push
sti
cmc
xlat
pushf
sbb
mov
xchg
rcrl
and
add
mov
mov
xlat
cmp
mov
pop
ret
mov
cmp
out
jle
cmp
or
adc
lret
cmpb
jo
loopw
imul
pop
push
dec
mov
in
push
cltd
xor
das
mov
pop
push
and
dec
cmp
dec
pop
aaa
stos
sub
pusha
ss
xor
pop
das
mov
lods
sub
arpl
adc
sarl
jbe
xor
pusha
mov
sub
into
add
jl
and
ja
cld
push
add
cltd
fdivrl
testb
dec
cs
push
sub
push
mov
push
stc
faddl
xchg
mov
cmpb
cmp
lock
cmc
sub
inc
and
cmp
sbb
pop
jo
push
inc
lea
lret
mov
les
fistpl
aam
push
push
aad
mov
pop
push
ret
fistl
shrl
cmp
cmpsl
in
mov
adc
pusha
js
jnp
pop
add
dec
fdivrs
cmp
push
dec
ds
push
mov
adc
aad
cmp
insb
sub
pusha
xor
and
pop
into
pusha
pop
fdivs
loopne
ds
lock
loop
push
addb
pop
and
scas
dec
lods
int
inc
addb
popf
call
sahf
lret
and
out
mov
mov
xchg
stc
jl
mov
fistl
verr
sbb
pop
sbbl
js
push
inc
adc
fisttps
sbbb
mov
jle
stos
lods
sbb
xchg
mov
outsb
jmp
push
push
add
xor
jmp
ss
cmpsb
ret
xchg
loopne
and
sub
fs
mov
push
jno
scas
lcall
xchg
cmp
jmp
cmp
jmp
lea
pop
lods
lods
mov
xor
xor
dec
jno
xlat
ror
fidivs
adc
testb
clc
push
repz
mov
popa
or
leave
xchg
inc
aad
fs
inc
test
ljmp
nop
push
out
push
rolb
sbbb
mov
fcomp
aad
sbb
ljmp
mov
popa
inc
dec
lds
fstl
and
sbb
loope
inc
sub
dec
jb
dec
repnz
fsubr
or
mov
or
jbe
jne
mov
test
loop
adc
popf
push
mov
push
xor
push
roll
repz
rolb
sub
xlat
mov
pop
test
jl
andb
mov
xlat
popf
aas
dec
addb
dec
push
andl
ficomps
pop
dec
adc
xlat
ja
lock
adc
or
jnp
pop
inc
ret
fwait
es
lcall
test
push
push
loope
cmpsl
loop
adcb
sbb
xlat
pop
ret
xor
pusha
shr
pop
xchg
add
inc
fcomps
int
push
jg
sbb
std
sbbb
pop
int3
xlat
jl
xchg
addb
and
dec
xorl
inc
lods
ss
jmp
lds
jns
mov
push
pop
nop
cmc
out
mov
popa
inc
cltd
xor
push
cwtl
pop
pop
std
mov
daa
loope
pusha
fwait
adc
stc
jg
in
and
testb
or
inc
jae
inc
cmp
out
rcrb
add
and
or
or
mov
inc
aad
inc
xchg
or
adcb
pop
cmp
cmp
idivb
rorl
cld
fwait
cld
and
mov
and
or
sbbb
cltd
mulb
mov
sti
xor
xchg
mov
in
nop
push
mov
aam
lods
sub
lahf
sub
adc
scas
push
sub
sbb
cwtl
xchg
adc
pusha
daa
lcall
xlat
lods
ret
lods
push
and
ficoml
xor
pop
ret
andb
aaa
xor
add
in
jmp
mov
mov
orb
repz
scas
xor
adc
mov
xor
jmp
insl
and
shll
mov
fists
andb
out
loop
fnstenv
mov
inc
inc
cmpb
mov
xlat
cmp
dec
test
out
lcall
inc
adc
adc
mov
xchg
fistpll
sbb
stc
push
or
xchg
dec
cmp
adc
test
xchg
jle
stos
fcmovbe
and
ds
ja
out
adcl
mov
in
mov
movsl
pop
popf
out
je
pusha
sar
cs
jno
lods
lcall
aam
rorl
pusha
shlb
ljmp
push
cmpsl
insb
inc
cmp
fidivs
int
dec
fcomps
xor
pusha
popf
jae
jl
or
sub
fs
movsb
mov
jp
iret
das
les
dec
push
push
add
mov
in
call
xlat
adc
dec
je
pop
xlat
sti
aam
mov
pop
push
mov
fildll
sbb
test
adcb
mov
shrl
notl
cmp
cmp
xlat
mov
mov
mov
or
cmp
rcrl
sub
test
xor
int
sbb
pusha
or
insl
mov
xlat
inc
inc
jmp
mov
js
push
and
jae
adc
popf
cmp
mov
jecxz
push
and
nop
inc
jl
dec
xlat
mov
sub
push
mov
jnp
mov
movsl
push
inc
xorb
je
inc
mov
mov
in
inc
mov
add
femms
mov
into
pop
and
faddl
xlat
mov
xlat
stos
fcoml
lock
shrb
jecxz
xchg
rol
adc
pop
jb
add
add
lcall
or
lds
enter
fisttps
add
movsb
jnp
aam
stos
popa
mov
cli
pop
js
mov
adc
mov
out
xchg
jmp
add
sub
in
xor
pop
adcb
mov
mov
popf
pusha
lock
popa
pop
mov
frstpm(287
sbb
shll
icebp
ret
rol
insb
fbld
leave
std
or
int
orb
jb
push
stos
fidivrl
movsl
push
xchg
jl
arpl
repnz
inc
or
inc
pop
inc
inc
aaa
orl
pop
pop
add
sub
subb
dec
clc
jno
xlat
add
jg
pop
lea
mov
fs
xchg
rcl
rolb
fwait
addb
testb
and
cmpsl
push
mov
xchg
sahf
jg,pt
sub
mov
or
push
and
xor
jb
or
test
jne
xchg
push
sbb
mov
xlat
xor
jl
jae
fildl
dec
lret
xor
imul
dec
stc
call
push
mov
push
mov
pop
jnp
inc
mov
test
sbb
fsubl
adc
out
pop
xchg
shr
sub
stc
xor
xlat
adc
pop
bound
or
jne
cmp
jp
push
mov
sbb
mov
movb
mov
jecxz
mov
lea
out
xchg
pop
or
lahf
pusha
inc
mov
cltd
lods
mov
rclb
inc
in
inc
fadd
fs
push
movsb
stos
xchg
sbb
subb
jl
add
mov
jb
sub
enter
pop
xor
cmpb
pop
push
and
pop
insl
addr16
mov
push
addb
sub
adc
and
pop
mov
add
fwait
pop
pusha
inc
fdivp
scas
testb
daa
cmpl
mov
cld
pop
add
enter
out
inc
dec
inc
mov
aad
dec
inc
ret
adc
inc
cmp
push
arpl
push
dec
inc
loop
xchg
mov
scas
sub
fcomps
xchg
sub
inc
push
js
mov
into
sbb
and
popf
xlat
or
decb
sbb
inc
addb
lret
aad
dec
xlat
sti
es
jae
popa
nop
pusha
fidivl
xor
jmp
cmp
jg
movsl
pop
adc
xlat
xor
inc
lcall
insl
rol
push
ljmp
int
je
cmp
sbb
push
dec
mov
fcomp
sbb
fwait
add
das
stc
aaa
ret
xlat
in
adc
adcb
add
lea
pop
cli
clc
jmp
jns
js
fcoms
lret
cs
jg
jbe
cmp
pusha
mov
test
pop
ficomps
xlat
mov
mov
inc
pushf
jmp
jb
mov
flds
arpl
xlat
mov
sub
fsubl
pusha
in
pop
sub
pop
cmpsb
xlat
dec
push
jnp
jne
daa
cwtl
sbb
cmp
sub
xor
mov
sbb
rorl
jp
lods
aas
xchg
icebp
push
xor
cmpsb
gs
push
ja
sbb
iret
adc
mov
sahf
and
sub
jmp
adc
pushf
sbb
sub
lock
pop
pop
fwait
cmp
push
loope
mov
out
inc
cmp
inc
mov
xchg
subb
test
imul
bound
loopne
js
sub
aam
and
clc
ja
in
xlat
jg
in
rcl
pop
fxch
cmpb
lods
testb
xchg
into
adc
pop
dec
ffree
add
bound
je
mov
fidivl
pop
xchg
int
xor
fisubl
aam
ret
sbb
inc
cmp
mov
cwtl
jbe
addb
lods
stos
mov
pop
pop
ds
shlb
fmuls
mov
mov
loopne
jno
mov
xchg
sub
pop
movsl
jae
stos
xor
push
aas
xor
fidivrs
idivb
add
bound
inc
sbbb
add
adc
dec
aas
dec
jle
movsb
push
dec
in
push
test
or
jmp
lret
adc
ret
cli
cmp
stos
cs
mov
test
outsl
loope
nop
ja
pop
jmp
data16
pop
in
aad
leave
mov
pop
add
fucomip
inc
repnz
js
aad
fmuls
push
insb
gs
in
outsl
ljmp
xlat
cmp
mov
adcb
mov
clc
add
js
mov
pop
pusha
int
jecxz
mov
mov
dec
cmpsb
fnsave
mov
mov
push
xlat
push
cld
jns
dec
xchg
and
shr
and
fists
xorb
push
enter
and
loop
movsl
in
jnp
addb
out
pop
lea
in
mov
popf
push
jecxz
loopne
xor
repnz
mov
cmpl
bound
int
test
dec
cmp
lret
sbb
xchg
inc
popf
mov
cmpb
jne
mov
inc
aad
and
sahf
cltd
sahf
inc
push
loop
sahf
ljmp
sub
cmp
mov
pop
or
xlat
push
sti
or
inc
dec
repz
lret
and
and
hlt
xchg
jg
cli
pop
jb
mov
push
daa
cli
arpl
imul
popl
mov
xlat
es
lds
mov
adcb
xor
das
fdiv
cmc
daa
int
repz
dec
sbb
aaa
inc
mov
shrl
dec
mov
push
pop
sub
jo
or
gs
jmp
xchg
xchg
and
mov
jg
pusha
shll
movsb
add
pop
cmp
clc
enter
xor
out
push
sbb
into
lret
aad
ja
or
loop
pop
es
adc
sub
mov
jnp
adc
add
mov
inc
loope
cld
fbstp
add
not
dec
inc
push
push
pop
inc
out
and
bound
mov
and
call
mov
daa
shrb
jb
pop
push
xor
pusha
cmpb
adc
cmpb
jns
bsr
mov
xor
mov
pusha
cmpsl
shll
cmp
mov
lock
lods
mov
and
imul
push
fpatan
cmp
mov
jle
mov
ljmp
inc
xchg
mov
into
and
xchg
pop
adc
pop
mov
push
out
fcomip
lcall
leave
loope
rorl
sbb
cltd
mov
sub
cmpsb
js
popf
add
loopnew
in
xlat
cmpsb
sub
inc
inc
cmpl
pusha
pop
mov
aas
xchg
mov
xlat
lret
int3
sub
and
in
push
addl
xchg
lcall
and
cs
data16
int3
into
outsl
addr16
push
subb
ret
in
jae
jnp
stos
ds
xlat
cmp
test
xchg
jg
incb
push
sbb
sbb
test
fwait
arpl
loope
fstps
sub
sub
shrl
outsb
xchg
enter
subb
sbb
xchg
das
adc
pop
test
cmp
repnz
pop
sbb
mov
cmp
cwtl
add
arpl
mov
jg
lcallw
mov
cs
inc
pop
enter
ret
ret
subb
adc
movsb
push
pusha
imul
inc
xor
mov
stos
dec
mov
pop
in
pop
cmpsb
xchg
call
scas
pop
push
jge
add
clc
mov
outsb
mov
test
or
push
push
or
ret
adc
push
dec
push
sub
xchg
xor
lahf
cmp
pop
cli
jle
cmpsb
xor
loop
test
add
fsub
pusha
out
xlat
int
ss
test
inc
add
or
pop
sar
push
mov
sbb
jmp
flds
xlat
and
ficoms
push
pop
test
sbbb
int3
jle
sbb
fwait
and
imul
push
addr16
clc
and
out
push
pop
outsl
xlat
inc
push
sbb
testb
or
daa
and
sbb
aam
fcmovnbe
xchg
inc
push
in
js
in
int
mov
mov
xchg
xchg
cli
aas
ja
adc
inc
xor
ficoml
mov
sub
cmpsl
mov
xchg
rorb
mov
or
inc
dec
xchg
addl
xor
enter
imul
cmp
arpl
std
xlat
sub
movsl
fcmovbe
and
sbb
addb
add
sbb
xlat
pop
or
in
cmc
push
cmc
lcall
negl
and
sbb
int3
add
cmpl
imul
aam
cs
inc
or
and
pop
movsb
int3
outsl
and
insb
sahf
push
lar
or
jg
mov
lcall
lods
xor
shlb
cmp
mov
inc
sbb
sbb
push
add
lds
dec
mov
push
sahf
sti
or
cwtl
mov
jns
xor
inc
adc
xchg
inc
ljmp
cmp
fwait
ret
hlt
in
sbb
jb
xorb
dec
push
fmull
xlat
jmp
rcr
arpl
push
jle
dec
pop
js
dec
clc
stos
push
xlat
adc
dec
xchg
inc
sbb
scas
pushf
ljmp
aam
add
lock
mov
rcrb
xlat
cmp
arpl
or
or
fcom
xlat
xor
dec
jg
pop
and
push
add
push
sub
je
mov
jae
cld
pop
pop
push
jo
push
mov
je
ret
xor
pop
add
out
pop
cmpb
mov
mov
mov
jge
cmp
aam
loopne
int3
xchg
xchg
sbb
xchg
lcall
jb
pusha
rclb
jle
push
addr16
rolb
pusha
ds
ret
jns
pop
adc
cmpl
pop
sub
jecxz
xchg
subl
adc
fcmovbe
les
leave
xor
xor
pusha
lret
test
push
int
and
pop
hlt
hlt
nop
sbb
lahf
jle
test
fistpll
lods
pop
add
int
lret
imul
xlat
add
into
and
dec
jle
or
jns
sets
cld
ljmp
mull
cmp
iret
aad
cmp
rcrl
movsl
push
dec
cmp
rolb
testl
inc
aas
lret
leave
add
ficomps
mov
adc
repnz
test
test
ror
popf
dec
andb
mov
mov
jb
and
and
inc
outsl
inc
sbb
push
imul
repnz
pop
cmp
out
lds
andb
popa
inc
mov
sub
pop
xor
out
mov
shll
mov
cld
add
jb
dec
movsl
cmp
xchg
lods
pop
fdiv
rorb
mov
je
pop
sbb
sbb
jmp
cltd
movsb
jmpw
xorb
fdivrl
pop
add
addr16
pusha
ret
mov
std
sbb
pop
pop
mov
aad
hlt
pushf
pushl
mov
push
fcomps
cwtl
xor
xlat
cmp
jge
cmpb
inc
fstl
rcr
sub
adc
inc
mov
xor
test
aam
push
mov
add
enter
adc
pop
xchg
adc
add
sub
push
sbbb
mov
mov
das
mov
push
cmp
icebp
pop
lcall
js
adc
xchg
es
dec
mov
or
cmc
je
mov
jo
cmp
jne
punpcklbw
xlat
xor
mov
mov
inc
jbe
push
push
ret
dec
lcall
add
dec
xchg
jl
xchg
loop
in
and
rcl
push
stc
mov
mov
mov
addr16
aas
pop
inc
popl
repnz
pop
mov
mov
std
mov
adc
add
push
mov
mov
dec
cmc
ja
mov
addb
ds
js
lret
nop
mov
arpl
xor
mov
adcb
jo
lods
mov
pusha
inc
dec
cld
adc
icebp
ljmp
sbb
shr
push
fistpll
or
pop
inc
xor
cli
cmp
add
stos
out
addr16
pop
push
scas
and
pop
cld
sub
iret
cmpsl
mov
fwait
push
pusha
popf
pop
std
dec
adc
or
mov
pop
xchg
xlat
cmp
es
inc
mov
sub
or
ja
aaa
popf
jp
leave
jne
cs
lret
stos
pusha
pop
data16
arpl
insl
and
mov
lock
dec
xchg
push
rolb
or
pop
push
aas
add
idivb
pop
inc
sub
out
xchg
lret
and
push
lods
gs
das
in
dec
aaa
xchg
icebp
jmp
cmp
inc
mov
andb
xchg
and
xchg
mov
pusha
and
test
fdiv
xlat
mov
mov
andb
data16
fsubr
into
xor
mov
pop
rcrl
xchg
das
xlat
pop
jg
add
ss
push
jp
mov
mov
adc
fsubs
xlat
jne
stc
push
xchg
aad
pop
je
mov
pop
push
loop
outsl
les
enter
push
mov
in
vmwrite
sbb
or
cmp
sub
pusha
leave
mov
dec
outsb
xlat
ret
decb
fsubl
jg
loop
rol
clc
loop
js
movsl
sbb
into
pusha
inc
adc
sub
test
sbb
lcall
dec
out
push
jns
call
add
mov
stos
push
dec
cmpsl
pusha
shl
or
jp
xlat
insl
lret
adc
fsubs
outsb
andb
pop
nop
shl
mov
xlat
xchg
incb
aad
movsl
cmp
jbe
imul
cmpsl
imul
cwtl
adc
push
jne
scas
insl
mov
in
stos
sub
je
xchg
jmp
ss
imul
insb
xchg
andb
xchg
icebp
pusha
xlat
mov
movsl
in
out
fstps
dec
je
and
sbb
lods
cmpsl
pop
pop
sub
xchg
dec
xchg
or
mov
fbstp
pop
adc
jecxz
es
iret
lods
insl
xlat
ficomps
xchg
movsb
sub
push
mov
aam
and
cltd
cmp
push
fstp
xor
mov
mov
inc
dec
iret
mov
lds
inc
es
inc
orb
mov
pop
mov
insl
mov
or
cmp
repz
and
cmp
jecxz
pop
xchg
jo
imul
and
and
jp
aam
jle
push
inc
sahf
or
test
sbbb
inc
in
pushf
aam
call
mov
mov
je
lahf
sbb
sbb
fimuls
push
xchg
jmp
ds
pushf
sub
cmpsb
jo
aad
or
mov
aad
mov
jmp
and
out
pop
push
test
pushf
xlat
lret
sub
cmpl
or
and
in
ja
pop
mov
popf
fs
mov
mov
mov
cmp
cli
dec
mov
cmpsl
iret
out
xchg
sub
lret
inc
jns
jb
movsb
clc
loope
jp
sub
adc
inc
or
dec
jecxz
repnz
test
dec
mov
add
jne
inc
and
mov
xor
sub
fs
lahf
mov
cmp
mov
jnp
jae
bound
pusha
mov
jo
aas
rcrl
cmp
aam
imulb
pop
ljmp
sbb
xlat
addr16
call
rcr
pop
ret
and
mov
clc
subl
bound
or
mov
pop
call
imul
dec
xlat
stc
popa
mov
popf
dec
lods
mov
loopne
loopne
cmpl
mov
in
out
arpl
mov
push
ret
call
fcoml
fucom
gs
imul
xchg
int
mov
jae
dec
xor
cmp
jge
jge
into
sbb
popa
cltd
clc
sub
lret
or
push
loope
outsl
xlat
insl
or
lahf
bound
rolb
daa
mov
rorb
rcrb
fs
test
rolb
xlat
sbb
fdivs
in
mov
fdivs
xor
mov
cmp
leave
aad
mov
add
pusha
add
pop
outsb
inc
std
sahf
push
pop
xlat
out
call
sti
xlat
and
sub
lahf
xor
adc
addr16
sub
xchg
cmp
xor
in
inc
insb
pop
fcompl
dec
or
add
icebp
fistps
lret
fdivrs
addr16
push
pushw
adc
and
fcomip
mov
lcall
adc
stos
leave
xchg
icebp
fwait
sub
add
sbb
pop
fiadds
mov
sub
nop
call
xchg
cli
fs
nop
ret
fidivrs
gs
mov
jb
push
adc
bound
pusha
dec
movsl
loop
dec
xchg
sarl
stc
or
pop
pusha
pushf
pop
clc
ja
xor
mov
nop
dec
fldcw
call
xlat
pop
outsl
xor
loopne
scas
outsl
je
sbb
aaa
pop
xchg
dec
in
xlat
lahf
int
sbb
cmpl
leave
cmp
imul
sub
push
test
pushaw
sti
clc
xor
test
fwait
xlat
enter
or
in
div
push
lahf
lds
xchg
adc
adc
out
mov
insb
dec
jp
lahf
pusha
jg
sbbl
fscale
mulb
fldenv
dec
pop
and
testl
ljmp
mov
jbe
fcom
outsb
gs
pop
lret
inc
into
loop
sub
jmp
mov
adcl
or
in
pop
mov
leave
mov
mov
orl
push
out
mov
lcall
in
dec
neg
inc
xlat
subb
pusha
cmc
daa
subb
in
mov
push
inc
in
aam
pushf
push
iret
or
cmp
fisubrs
mov
out
push
aas
inc
test
adc
aam
mov
dec
add
shll
add
out
loop
les
and
mov
iret
mov
push
cmp
sbb
mov
mov
xlat
cmp
int
in
xor
test
jmp
aaa
pop
inc
cmp
lcall
mov
repz
subb
mov
inc
xlat
stos
jae
or
sti
jl
fcompl
pushf
push
cmp
jp
cmpb
push
adc
insl
pop
sbb
das
push
popf
sahf
xchg
icebp
orb
fcomip
push
jns
stos
xchg
pushf
push
hlt
sbb
aad
mov
call
inc
push
sahf
xor
lret
and
sbbb
insb
fbstp
aam
pop
jecxz
ret
sbb
les
leave
mov
stos
shll
sub
add
movsb
sbb
nop
sub
pop
mov
fmull
testl
negl
sbb
xlat
xchg
adc
cltd
sbb
xchg
pusha
cmp
lods
pop
ret
dec
jnp
mov
fmuls
test
lahf
sti
mov
iret
push
in
inc
bound
cld
pop
push
call
xchg
loope
dec
inc
sbbb
pop
add
and
mov
mov
push
pop
pop
cwtl
loopne,pn
xchg
inc
outsb
jbe
xlat
imul
inc
fcomps
adc
cltd
adc
adcb
cmpsl
fidivrs
cmp
mov
popf
sbb
pusha
mov
jns
mov
cmp
pop
mov
dec
nop
lock
aaa
xor
je
mov
mov
push
aaa
mov
inc
inc
xor
pusha
out
loope
imul
pop
xchg
ffree
pop
inc
xchg
push
inc
pop
ret
push
clc
xlat
sahf
popa
dec
cli
sub
js
in
mov
pusha
push
aam
mov
mov
ss
sub
mov
pop
jo
out
imul
rcll
push
loop
dec
lock
mov
mov
push
stc
lods
or
fidivl
jg
orb
mov
jno
xlat
pop
xchg
fwait
pop
mov
push
push
std
adc
test
sti
fbstp
test
pop
inc
in
add
fidivs
aad
ljmp
jp
ret
add
inc
imul
or
add
test
pusha
aad
pop
int
cmp
xlat
pop
inc
sbb
iret
mull
loopne
in
pusha
daa
call
push
mov
out
test
or
jmp
stos
xchg
mov
call
and
adc
ret
jnp
leave
pop
shrb
mov
lret
loope
jl
pop
adcl
repnz
into
mov
icebp
pushf
fisubrs
pop
inc
popa
xor
xchg
in
in
popa
into
lret
cmpsl
xchg
mov
sub
rcl
nop
aam
mov
sbb
bound
fadds
pop
sbb
inc
idivb
lods
bound
sub
daa
test
dec
pushf
xor
xlat
lods
pop
push
xor
xchg
sahf
adc
pop
mov
add
jge
orb
cmc
xlat
movsl
int3
fimuls
and
jae
ret
pop
int3
push
xchg
inc
mov
lds
loop
lcall
shl
clc
and
ss
xlat
mov
inc
inc
aaa
aad
pop
or
cmpl
push
lock
xor
xchg
dec
fdiv
rcr
iret
or
sub
aam
pushf
pop
aas
aad
stos
cwtl
shrl
jae
aaa
arpl
cli
xor
dec
xchg
pusha
mov
sbb
popa
and
aad
leave
push
xchg
leave
adcl
dec
mov
lods
cltd
fs
adc
lods
and
cmp
jmp
fmul
movsb
sarb
ja
lahf
out
leave
dec
in
pop
in
add
xor
pop
insl
decl
nop
cmp
jae
xchg
arpl
dec
inc
inc
cmp
cmp
push
push
cmp
fmuls
icebp
lods
cmp
ds
sbbl
mov
push
pmulhuw
pop
mov
sbb
pusha
and
xor
fisubs
daa
adc
mov
inc
loop
pop
sub
push
hlt
jne
push
and
pop
into
sbb
rclb
loop
pop
jge
dec
gs
iret
in
push
or
pop
pop
add
xlat
lds
sahf
fsubrs
sbb
fs
lcall
adc
push
pusha
iret
in
lods
xor
pop
movl
andb
out
out
or
sar
inc
pop
mov
cmp
ret
je
dec
ljmp
xor
aam
push
js
mov
stos
jns
not
subb
mov
or
sbb
jmp
cmpb
mov
subl
addr16
ret
xlat
mull
pop
aad
mov
inc
int3
repz
mov
test
in
xchg
adc
mov
sbb
movsl
insl
xchg
hlt
movsl
sahf
aaa
adc
mov
outsl
lds
dec
std
jle
and
loope
and
push
shlb
xchg
and
lret
jp
fsubrs
mov
je
cmpb
fldt
loopne
mov
sbb
mov
jbe
shlb
data16
into
sub
pop
or
fistpl
ljmp
xlat
jne
test
xorb
xchg
ja
jne
repz
xlat
pushf
jnp
mov
andb
std
jg
or
or
test
mov
lds
inc
loop
xor
es
insl
xchg
mov
pusha
clc
xchg
hlt
fbstp
xor
std
sbb
insb
xchg
pusha
sahf
outsl
dec
jb
jge
jo
mov
adc
pop
jnp
cmp
negl
inc
imul
lds
data16
subl
mov
test
mov
sbb
fidivl
mov
arpl
mov
mov
test
cld
inc
xchg
push
in
shll
adcb
leave
add
push
fwait
andb
push
cmpsb
pop
fldlg2
jno
shr
jae
adc
mov
cmp
jl
mov
je
push
movb
fistps
dec
mov
out
ja
add
mov
sbb
aas
add
adc
adcb
stos
mov
cmp
stc
cwtl
int3
scas
pusha
push
fnstcw
add
ss
test
jnp
pusha
add
sub
adc
bound
lahf
lcall
ret
mov
sbbl
pop
rcl
fcomi
jmp
dec
lods
push
ror
and
popfw
dec
enter
and
stc
xlat
lcall
cmc
sbb
adc
sub
pmaxub
scas
push
push
pusha
mov
and
sub
fldl
nop
add
mov
add
lock
cmpsb
lods
pop
lahf
aad
div
inc
call
gs
pop
jnp
sti
daa
xor
pushf
push
mov
jmp
xor
js
mov
push
inc
scas
iret
push
icebp
dec
arpl
cmpsl
mov
inc
sbbb
mov
cwtl
jbe
mov
popa
xor
test
cmpsb
pop
fldpi
sahf
push
dec
testl
sub
filds
shll
lret
mov
lds
mov
mov
ret
ss
inc
int3
sahf
ret
loop
xlat
push
js
dec
pusha
clc
bound
jg
jno
aad
sub
mov
push
pop
dec
cmp
cmpsb
cwtl
shl
aas
xor
fistpl
pop
mov
out
mov
mov
mov
adc
xor
gs
call
dec
pusha
test
int3
ror
jge
or
bound
stos
push
adcl
lahf
sti
subl
out
xor
mov
cs
inc
and
pusha
cmp
test
and
xchg
xlat
dec
hlt
dec
sub
dec
popf
mov
lods
adc
int3
aam
dec
xlat
pop
xor
pusha
push
and
push
xor
xchg
loopnew
xchg
rol
xchg
aad
sbb
fistpll
hlt
shr
add
mov
mov
mov
mov
mov
pusha
icebp
das
mov
repnz
xlat
and
push
push
inc
pop
test
enter
jns
lret
add
bound
xchg
push
jg
mov
loopne
mov
in
mov
add
dec
fadds
cmpsb
xchg
imul
cmp
lret
cmp
push
push
fwait
test
lcall
cs
adc
rcrb
lahf
out
fstp
mov
inc
sub
jecxz
lods
cmp
lahf
mov
daa
cld
in
pop
js
xor
push
bnd
ljmp
dec
sbb
or
lds
add
xlat
aad
aad
inc
fisubl
add
in
popa
ror
in
setns
fsubrp
mov
outsb
dec
das
jmp
dec
fnsave
push
inc
add
movsl
cmpl
xchg
shlb
inc
leave
sub
cmpsb
pusha
jno
popa
mov
xlat
xchg
jae
pusha
mov
and
stc
inc
pop
gs
mov
rcl
bnd
out
int3
fcmovu
pop
and
add
mov
test
mov
ja
and
dec
mov
das
sti
pop
addl
stos
xchg
push
cmc
dec
jbe
add
xor
mov
daa
mov
cmp
jae
pusha
dec
or
add
lahf
adc
js
fsubs
dec
pusha
inc
xchg
insb
pop
das
xchg
cmp
enter
inc
int
mov
push
das
and
sbb
ret
enter
xorb
sub
js
sub
popa
pusha
or
adc
xlat
xor
and
int
mov
jne
aas
out
sbb
test
xchg
add
rcr
pop
mov
nop
fistpl
test
pop
jp
and
mov
daa
or
jle
xor
xlat
mov
pop
mov
mov
push
adc
mov
or
adc
sbb
cmpb
subb
loop
aad
mov
test
ret
pop
repz
pop
jns
xlat
sbb
ret
out
dec
repz
adc
adc
sahf
xlat
or
popa
jmp
insl
jg
mov
jge
and
ss
xor
dec
stos
mov
addb
inc
stc
popf
movsl
and
scas
cmc
pop
in
sub
push
push
pop
pop
xchg
jle
pop
push
and
mov
cmp
push
daa
jns
repz
fcmovne
xor
push
cmp
scas
xor
sahf
icebp
out
gs
sti
sti
pop
out
and
int
movsl
call
or
mov
lret
jnp
xor
cmc
push
pusha
into
scas
imul
jecxz
ljmp
mov
push
rolb
idivb
adc
inc
jge
pushf
cmp
out
dec
into
sub
js
jb
mov
arpl
fsubrs
mov
in
jecxz
or
push
enter
ror
sbb
rol
loopne
lock
orb
mov
mov
mov
pusha
scas
stc
arpl
out
mov
push
push
mov
mov
outsb
xor
push
sub
inc
pop
dec
jmp
jae
jg
sub
mov
push
adc
enter
lods
aas
push
dec
pop
mov
mov
pop
lods
in
sbb
cmp
mov
pop
addb
xchg
push
sub
push
adc
pop
adc
aad
andb
cltd
fsubrs
mov
orl
enter
loopne
mov
cmp
mov
movsb
xchg
sub
push
rorl
aad
ss
cmp
adc
lds
bound
sub
lret
push
jo
xchg
or
cmp
fsub
xchg
bound
mov
mov
and
sub
filds
std
xchg
xlat
jecxz
mov
mov
inc
inc
cmpb
jbe
sbb
xchg
or
jo
pop
or
jp
mov
xor
dec
adc
xor
popa
mov
test
mov
or
dec
xchg
shlb
pop
sub
rorl
add
enter
xor
dec
mov
mov
popf
aas
mov
in
xchg
ljmp
cmp
add
sub
or
outsb
insb
not
dec
xorb
inc
nop
fisubrs
pusha
mov
test
fadds
and
movsl
ds
adc
push
push
xor
cs
rclb
enter
xchg
or
sti
adc
in
sub
inc
mov
roll
and
pop
sub
xlat
test
aas
ss
cli
pusha
pusha
dec
hlt
sbb
enter
scas
loop
std
loope
in
adc
adc
jb
sbb
and
pop
std
decb
scas
and
dec
and
int
es
mov
test
xlat
cmpsb
xor
stos
mov
pushf
fldcw
subl
and
lock
pushl
xchg
sub
fcoms
mov
lods
std
lret
jbe
xchg
arpl
sbbb
stc
sub
inc
arpl
adc
sub
in
popf
test
imul
jecxz
inc
lock
int3
mov
dec
cmp
cmp
adc
outsb
push
mov
inc
fucomip
sahf
loopne
mov
aaa
adc
nop
xlat
lock
mov
outsl
decb
clc
fnsave
std
xacquire
cmpsb
pop
pusha
daa
xchg
xchg
xchg
icebp
popa
fs
repz
lret
sub
nop
pusha
sub
inc
push
fsubr
das
adc
mov
sbb
ja
cmpb
pop
jae
pop
scas
aaa
push
test
add
sbb
hlt
arpl
das
data16
jmp
popf
int
insl
in
fbstp
stc
pop
xrstor
cs
xchg
inc
cmp
dec
adc
mov
repnz
popf
enter
jns
sbb
ljmp
movsb
sub
inc
push
or
inc
outsl
jecxz
jae
push
jg
mov
int3
pop
adc
push
movsl
ljmp
mov
outsl
icebp
gs
rcrl
ljmp
xchg
pusha
ret
jg
lds
fsub
mov
aaa
dec
xchg
mov
jp
mov
pop
popa
adc
lods
add
jb
jns
dec
fs
jne
idiv
fcom
cmc
ljmp
xorb
push
lcall
int3
push
cmp
push
mov
push
das
pop
mulb
scas
sahf
cli
mov
push
adc
inc
sbbl
outsb
adc
push
pop
xorl
xor
lcall
mov
insb
sbb
cmp
push
push
fldenv
into
push
xchg
mov
add
mov
imul
js
sbbb
jnp
ja
imul
xor
xchg
cmpsb
jp
in
sbb
dec
popa
sub
ret
icebp
and
jl
cs
dec
xorb
cmp
rcll
sub
inc
aam
rorl
lret
add
loopne
int3
sbb
pop
cltd
mov
test
xor
add
stos
repnz
add
jne
test
insb
pop
outsl
xlat
gs
jmp
cld
cmp
pop
jbe
shrb
xlat
loop
and
jae
jp
icebp
sub
mov
pop
xor
xchg
test
mov
push
pop
mov
adc
xchg
jg
lock
dec
sub
pusha
xchg
mov
push
adc
and
rorb
aaa
sbb
mov
cmpsl
add
xchg
jl
lcall
adcb
dec
imull
adc
push
mov
push
in
push
jbe
xlat
call
sbb
mov
adc
push
or
rcrb
outsl
mov
cwtl
fwait
pop
add
sub
inc
inc
int
push
cmp
jl
cmp
mov
dec
out
mov
daa
push
xchg
outsb
scas
mov
mov
pop
sub
out
inc
jg
lret
out
fnstenv
scas
push
add
cli
pop
jle
orb
lods
dec
fdivr
dec
mov
jnp
mov
rcrl
je
fsubrs
int
fdivl
idivl
in
add
ficoml
loop
in
incl
stos
mov
jmp
pop
inc
ret
mov
inc
add
pop
pop
xlat
pop
cwtl
xchg
addr16
push
lock
inc
ljmp
add
and
jmp
dec
inc
orb
lcall
sub
loope
idivb
pop
xor
daa
push
jl,pt
jno
xlat
mov
jne
mov
mov
andb
adc
push
pop
xlat
pop
push
fs
pusha
sahf
sub
and
sbb
pop
cmpsl
xorb
adc
xlat
repz
imull
mov
stos
loop
xlat
xor
imul
jle
aas
int
stc
jne
ss
cs
inc
rcll
fcoml
ret
push
sub
mov
or
pop
test
mov
mov
adc
sbb
fcmovne
fmuls
sbb
in
xchg
cs
sbb
mov
push
xchg
xlat
stos
mov
push
pusha
push
les
push
dec
adc
fsubrs
je
sbb
dec
sub
mov
mov
push
push
movsl
mov
nop
shlb
cmp
bound
negb
jl
adc
mov
pminsw
push
inc
xlat
mov
mov
push
fisttps
xlat
cmp
mov
bound
out
imul
pop
xlat
pop
sbb
pushf
jle
xchg
mov
mov
jb
leave
mov
cwtl
sbb
arpl
jne
test
adcl
adc
push
lret
xlat
xor
movsb
aaa
ds
mov
jmp
push
pop
mov
cmp
cmp
lds
andb
xlat
cmp
sub
ds
sub
push
loope
pop
rclb
inc
es
xchg
push
adc
xorl
or
add
pushf
aad
mov
mov
lea
mov
push
notb
dec
fdivs
and
push
fstpt
mov
test
sbbb
or
mov
sub
cmc
cmp
xor
adc
rcll
push
sahf
mov
pushl
jmp
mov
in
mov
mov
or
scas
rolb
jp
fsubs
mov
adc
cmpsl
push
imul
icebp
lcall
fs
out
fs
dec
addb
add
xchg
xlat
mov
inc
dec
jnp
mov
popa
pushf
sbbb
cwtl
add
pop
insb
or
subb
sub
adc
popa
xchg
and
jb
adcb
push
das
rcll
das
xchg
dec
out
lods
push
out
cli
jge
cmpb
bnd
adcl
cs
subb
in
js
push
jmp
sbb
push
ret
push
pop
lock
es
xlat
xlat
leave
mov
push
sub
add
xor
dec
leave
lcall
iret
mov
out
rcrb
and
int
and
icebp
sbb
aam
repz
cmp
pushf
push
orb
cmp
imul
mov
loopne
cltd
push
pop
ja
cwtl
aaa
pusha
pop
sbb
xor
test
jg
aad
daa
and
fwait
iret
andb
mov
in
mov
into
add
ljmp
outsl
push
jne
xlat
pop
adc
sub
loope
pop
outsb
push
sbbl
cld
jae
mov
icebp
xchg
adcl
lock
notl
mov
xor
pop
push
fmuls
lret
pop
imul
pusha
leave
aaa
insb
dec
rorb
lock
loop
cmpsb
lahf
dec
mov
cltd
ficompl
pop
bound
sbb
add
test
or
sub
inc
jmp
shll
push
xor
stos
cltd
mov
xlat
jl
xlat
jae
sub
or
lock
imul
repz
xchg
dec
pusha
jecxz
add
xchg
fisttpll
leave
hlt
sub
bound
nop
cmc
or
push
push
xchg
mov
pop
inc
dec
cltd
gs
cmp
scas
js
adc
dec
xlat
mov
adc
pusha
cwtl
cmpsb
mov
loopne
sub
dec
rcr
shlb
mov
pop
fwait
push
stos
adc
add
cmpsb
push
pop
mov
pusha
mov
xchg
xlat
inc
jmp
and
cwtl
mov
xlat
pop
jae
or
fistpll
push
add
ljmp
jge
dec
leave
mov
data16
addr16
imul
stc
or
mov
mov
pop
or
es
mov
jmp
popf
in
fsubp
inc
add
loopne
add
lock
outsb
lret
sbb
xlat
push
mov
outsl
ret
or
nop
push
aaa
lock
leave
arpl
push
inc
jno
pusha
mov
cmp
out
xchg
push
out
sarb
add
movb
mov
insl
push
data16
pushf
int3
push
pop
lahf
cmp
push
bound
repnz
ss
cld
push
sbb
pusha
lock
dec
jnp
xlat
fnstsw
stc
jns
mov
sbb
xor
and
std
loop
cli
nop
pop
addl
cmpps
fcoml
sub
fs
shll
add
xlat
sbb
push
inc
xchg
mov
push
pusha
and
insb
popa
shl
mov
imul
out
cmp
push
aad
mov
mov
daa
enter
push
jp
sub
movsb
ret
add
mov
stc
fcmovnbe
roll
lds
or
mov
sub
fdivs
mov
or
lret
sti
es
xchg
xchg
shlb
arpl
jecxz
inc
mov
mov
xlat
push
lahf
ret
sbb
jbe
lret
fs
icebp
xchg
dec
lcall
or
pop
xlat
xchg
jmp
xor
adc
pop
mov
pop
mov
sti
aas
stos
mov
outsb
xor
cmp
mov
rol
push
cld
push
sbb
mov
scas
or
mov
pop
mov
cmp
clc
adc
cmp
es
or
mov
icebp
sub
pop
ja
mov
inc
cmp
jno
pusha
popf
cmp
popa
cmpb
lds
jp
cmpsl
sbbb
dec
aam
pop
push
loope
fmul
ds
pusha
inc
fucomip
jecxz
add
test
dec
mov
shl
cmp
decb
out
int
sub
or
lock
jo
dec
pop
mov
jae
and
add
pop
mov
mov
dec
popa
cmp
sbbb
rol
inc
adc
imull
mov
push
sub
pop
push
stos
loop
in
aas
ret
pop
enter
pop
or
repnz
push
jp
out
popl
outsl
mov
add
jp
or
pop
and
sbb
mov
outsl
xlat
xlat
shlb
jmp
addb
pop
inc
add
outsb
les
xchg
cmp
jno
fcomps
xchg
lock
jns
pop
fistl
out
clc
cmc
addb
mov
out
mov
sbb
pusha
icebp
loopne
add
fcomp
insb
aam
popa
jle
xor
or
and
mov
pop
cmp
push
jmp
sbb
pop
xchg
cs
inc
inc
mov
les
enter
push
ror
and
jg
daa
and
lret
fisttps
ja
push
lods
mov
pop
aad
popa
xchg
es
mov
xlat
test
test
adc
mov
dec
rorl
mov
sbb
sbb
mov
inc
mov
sbb
inc
jne
rcl
in
jno
pop
enter
mov
popf
jo
jbe
dec
dec
ss
js
and
adc
shrl
push
jl
subl
mov
je
or
repnz
jbe
lock
pop
mov
loope
loope
shl
test
pop
imul
mov
pop
inc
bound
mov
jne
xorl
into
xlat
mov
rcl
roll
push
addr16
mov
lret
pop
dec
cmp
xchg
jl
leave
fadds
or
dec
daa
in
pusha
push
and
push
sbb
out
mov
aam
pop
push
dec
jbe
fwait
and
lret
xlat
int3
ja
mov
imul
insl
push
xor
xor
push
aas
pop
xchg
or
lret
pusha
fisubs
sub
or
pop
out
cmc
adc
daa
lahf
mov
push
fcmovnu
xlat
xor
jb
outsl
dec
push
into
sbbb
aad
pop
and
aad
out
mov
jo
addb
std
push
or
popa
mov
xor
sub
sub
mov
mov
mov
mov
or
pop
mov
xchg
xchg
pop
adc
aaa
cmp
jo
repz
dec
push
dec
in
fstpl
aad
pop
push
andb
or
and
push
in
push
pop
dec
or
xor
push
xchg
mov
jg
pusha
push
pusha
fdivrs
nop
sti
jp
les
shlb
inc
mov
fstps
jne
loope
cmpsb
int
cmp
lcall
xor
mov
xchg
sbb
leave
inc
es
pop
movsl
sahf
mov
pop
sbb
xor
out
xchg
and
cmc
shrb
jae
icebp
jbe
inc
fwait
test
push
adc
xchg
pushf
adc
mov
jle
je
cmpsl
push
pop
inc
iret
adc
jns
add
adc
fldenv
fistl
or
dec
mov
imul
sti
xlat
or
insl
mov
inc
insb
es
xchg
jg
cmp
push
mov
mov
jne
hlt
cmpb
aas
ret
std
mov
jae
sbb
sub
pop
and
cwtl
push
lock
call
jg
xchg
pop
add
je
sbb
popa
enter
dec
rorb
rcll
mov
cmc
xlat
xor
push
rcr
inc
inc
adc
mov
test
push
test
xchg
adc
ret
push
call
fcompl
jl
imull
addl
clc
xlat
lret
xchg
pop
xor
sti
addb
adc
sub
outsb
stos
and
in
or
mov
into
xor
jbe
jns
ss
xor
inc
and
rorb
pop
sub
fs
mov
mov
imul
sub
jno
cmp
lea
jbe
in
push
ret
popf
inc
call
je
push
adc
int
gs
hlt
push
hlt
mov
mov
repz
inc
add
mov
xor
pop
in
ret
fiadds
and
inc
orb
jge
scas
pop
mov
xlat
mov
jmp
push
mov
xorb
xchg
aad
adc
das
add
jmp
mov
into
iret
sbb
mov
rclb
jae
rolb
pop
push
les
inc
cmpb
or
fs
jne
pusha
icebp
loop
dec
out
mov
jle
arpl
xchg
int3
popf
cmp
lcall
xor
jne
sbb
pusha
mov
xchg
and
insb
mov
stos
sub
hlt
pushf
add
inc
jb
lock
sbbb
jl
xlat
outsb
outsb
mov
inc
fildl
notl
pop
mov
pop
leave
cwtl
mov
push
test
and
xchg
cld
mov
ds
push
test
xor
icebp
mov
addr16
cmp
leave
add
push
sbb
inc
iret
rcr
xlat
test
in
mov
ret
jae
nop
sub
nop
mov
ljmp
ficoml
stos
jbe
lret
nop
xchg
push
xchg
aas
hlt
pop
push
inc
mov
pop
fcomps
mov
inc
addb
push
mov
ffree
rcl
mov
loop
dec
jmp
hlt
or
es
rolb
xlat
push
sahf
lret
fadds
pusha
shlb
loopne
insb
inc
pusha
loopne
gs
inc
lods
adc
push
rolb
cmpsl
inc
push
iret
stc
sbb
lock
cmp
jo
inc
push
andb
or
cmp
js
scas
push
jno
dec
pop
dec
dec
in
xlat
leave
pop
ret
dec
inc
and
jl
loopne
push
sub
fsubs
fistps
dec
mov
loope
mov
je
add
rol
push
push
pop
push
xlat
int3
ljmp
add
sub
aad
cmp
int3
popa
jl
push
add
pusha
mov
gs
xor
mov
pop
cwtl
jle
add
xchg
pop
sbb
mov
out
lahf
lods
mov
aas
mov
imul
mov
cmp
cmp
lods
lock
jnp
fst
and
pop
ljmp
cld
test
or
repnz
lock
mov
mov
xchg
xchg
ljmp
mov
int3
jnp
loopne
sub
outsb
mov
mov
frstor
mov
insl
xchg
pusha
daa
cmp
mov
aaa
cltd
aam
adc
insb
pop
push
sahf
push
insb
push
imulb
dec
cld
jb
push
push
lret
pop
add
inc
fbld
repnz
xor
popf
ret
andl
mov
add
scas
popf
mov
fs
pusha
nop
mov
and
pop
cmp
fmulp
fucomip
into
movsl
dec
test
bound
out
xor
das
adc
xchg
inc
cmp
fs
mov
and
fimuls
add
jnp
push
sub
andb
addr16
and
push
jge
idivl
mov
push
ret
cmpsb
cmpsl
jle
or
xor
aaa
loope
xchg
insb
jmp
xchg
mov
push
push
out
adc
int
pop
insb
adc
xchg
lcall
fimull
inc
inc
test
fld
aam
test
mov
xlat
es
pop
mov
pop
cmpsb
pop
dec
push
pop
adc
dec
sbb
xchg
jns
adc
push
and
pusha
mov
cmc
add
pop
shr
inc
xlat
rcll
lret
add
out
stos
std
daa
mov
faddp
dec
test
push
pop
lahf
insb
stos
pop
and
lahf
xor
insb
sbb
mov
xchg
fndisi(8087
aad
arpl
addr16
mov
push
test
rclb
sbbl
mov
add
out
sbb
je
mov
push
adc
jl
xchg
loop
pusha
dec
pop
imul
in
jo
sahf
push
daa
xlat
dec
aad
mov
sbbb
fucomp
rcll
das
xchg
insb
into
lret
cmp
clc
flds
sub
xchg
push
xlat
mov
add
pop
testb
sbb
fstpl
in
mov
mov
jno
fwait
mov
data16
ljmp
add
fnstcw
push
jae
mov
fwait
lfs
loopne
scas
movl
xor
or
mov
std
sub
or
enter
mov
jo
sub
in
hlt
fucom
insl
cmc
pop
inc
mov
lods
lret
rorl
mov
sub
or
insl
inc
scas
and
fists
fnstcw
sub
inc
xlat
jb
imul
iret
sbb
mov
lahf
pushf
sbb
xlat
pushf
jne
cmp
add
push
out
sub
xchg
and
and
dec
daa
cwtl
fwait
inc
add
xchg
xor
cmp
je
roll
jae
rcrb
sbb
imul
mov
loopne
xchg
ret
jg
pop
pusha
and
rcll
or
orl
cmp
push
ret
mov
pop
inc
xor
jmp
fwait
mov
out
repz
fldt
pop
bswap
mov
add
xlat
push
ret
insb
addr16
pop
dec
xchg
in
out
xor
ja
pop
xchg
bound
jmp
sbb
cmp
push
lahf
sbb
adc
and
push
pusha
ret
push
xlat
sub
cmp
subb
cs
std
cmp
pushf
push
dec
divl
add
ret
xchg
pop
sub
jmp
inc
subb
cmp
popa
sti
fsts
les
push
fcom
jecxz
or
ja
pop
dec
or
and
xchg
ftst
mov
jecxz
mov
hlt
xchg
dec
inc
out
cmc
pop
cmp
out
sbb
jne
sub
movsb
jns
add
sbb
inc
and
mov
mov
inc
loope
mov
xchg
sbb
repz
fiaddl
sbb
or
cmp
jecxz
add
test
xlat
xor
data16
cmpb
jbe
scas
sub
mov
sub
xchg
mov
push
rcr
testb
cmp
gs
rorb
pop
push
pusha
rol
movb
dec
dec
inc
out
pop
cmpb
inc
mov
xor
lods
pcmpeqb
sbb
mov
pop
sahf
sub
dec
or
pop
lahf
inc
dec
bound
subb
sbb
es
push
inc
imul
imul
pop
cmc
jae
mov
xlat
ja
xor
mov
aaa
push
jnp
pop
stc
adc
pusha
push
cs
jb
xchg
jno
sti
cmc
push
mov
je
clc
sub
incl
jbe
cs
push
xchg
ret
push
testl
mov
pop
pusha
xor
mov
jnp
jmp
fwait
adc
fisubl
hlt
repz
scas
xlat
movsl
and
shrb
pop
mov
adc
push
arpl
outsl
fmull
lret
in
shll
cmp
ds
fistpl
push
push
dec
adc
std
jne
fiadds
or
lcall
les
cmpb
add
in
outsb
sbb
mov
xor
negl
loopne
out
andl
add
xor
popa
sub
sub
or
xor
dec
adc
daa
push
popf
lods
adc
jbe
or
or
mov
mov
les
mov
fildl
push
add
pop
sbb
iret
cmc
adc
or
xchg
rol
pop
add
shrb
cs
adc
pusha
xor
cmp
push
fiadds
and
and
mov
sub
jnp
dec
cmp
in
inc
je
ljmp
lahf
xor
mov
shrl
lods
pusha
cmpsb
dec
push
mov
addr16
je
inc
cmpl
repnz
lock
sub
add
push
shr
std
jmp
test
or
dec
pop
xchg
outsl
repnz
fimuls
pop
jg
jno
adc
jo
sub
stos
stc
pop
sub
js
dec
inc
scas
xlat
js
jne
cwtl
jg
sub
scas
mov
loop
aaa
repz
movsb
mov
iret
ss
push
adc
inc
ret
mov
push
mov
pop
sti
push
sbb
push
adc
nop
dec
into
insl
mov
jb
iret
lcall
jge,pt
test
fldenv
mov
mov
cld
mov
aad
sti
push
fxch
scas
jnp
lahf
inc
inc
xchg
mov
fstps
hlt
inc
xlat
push
subl
repz
mov
aam
xor
cli
cmp
jge
cmp
sbb
sbbb
aaa
mov
imul
add
inc
push
push
fwait
pop
mov
lret
pop
out
sbb
inc
aas
pop
outsb
out
in
jne
dec
mov
xor
pusha
lods
push
test
leave
movsb
jno
adc
ret
xchg
fcoml
aad
ja
clc
dec
aaa
push
or
pop
add
mov
xchg
sbb
adc
jnp
aas
sbb
in
fisttpll
dec
push
inc
out
loopne
js
scas
mov
sub
fs
pusha
stos
cmpsl
dec
cmpsl
pop
loop
mov
dec
sahf
lods
cld
xor
mov
sbb
and
loopne
cltd
lods
sub
sub
sbb
push
hlt
pop
pminub
idiv
in
dec
ss
andl
sbb
mov
dec
add
push
or
daa
jbe
in
bound
sar
pop
std
sbb
pop
int3
mov
mov
bound
or
mov
mov
out
push
jmp
xlat
pop
fs
aas
stos
add
imul
push
cmp
jl
aaa
dec
and
pusha
outsl
mov
xchg
cwtl
shrl
enter
inc
loop
lea
push
mov
loope
lods
ficoms
loop
movsb
xlat
leave
xor
lret
xlat
aad
cmpsl
add
push
mov
mov
mov
add
nop
js
ja
in
add
add
push
dec
repnz
mov
and
jp
mov
mov
lcall
push
ret
push
insb
xor
jmp
mov
test
jns
outsl
mov
push
mov
ret
mov
fdivs
xlat
xchg
icebp
int3
sub
mov
ja
cmpb
dec
lods
push
adc
je
loope
push
inc
cmc
pop
imul
fcoms
pop
add
add
adc
shlb
or
dec
loop
pop
cwtl
xor
fadd
xlat
inc
adc
xor
andl
push
adc
dec
cltd
xchg
out
pusha
push
inc
mov
fcomp
dec
loopne
push
out
popl
outsl
mov
ss
or
jle
cmp
popa
sub
push
test
pop
hlt
jnp
pop
inc
test
sarb
adc
imul
jg
lock
inc
and
stos
shll
mov
mov
dec
fnsave
dec
fmuls
das
imul
rcrl
jp
out
xor
clc
sahf
push
mov
adcb
pop
pop
fstl
and
inc
inc
inc
mov
mov
pop
popf
add
loop
fdivp
push
mov
adcb
testb
fildl
xchg
pop
cmp
xlat
push
dec
pop
fisttpll
or
pop
rcr
inc
rclb
xlat
adc
testl
sbb
inc
dec
aam
adc
adc
sbbb
mov
ret
das
cmp
addl
pusha
pop
or
xor
xlat
flds
lods
xchg
sub
jns
cmp
pop
test
movsb
pusha
mov
out
mov
fadds
pop
xchg
sbb
jecxz
sbbl
cwtl
cltd
pusha
ficomps
jnp
lds
dec
sbb
nop
or
and
les
xlat
mov
xchg
xor
sub
and
xchg
cmp
mov
outsl
mov
xlat
push
jns
jbe
adc
sub
addb
xor
fucom
sub
out
push
ja
popa
es
push
pop
dec
dec
cmp
les
pop
xlat
gs
enter
sbbb
mov
xchg
out
mov
xlat
aaa
test
scas
enter
push
mov
jle
mov
lds
out
orb
insl
mov
aam
sbb
out
cwtl
mov
xlat
inc
lea
movsb
testl
and
aam
andb
xlat
dec
pop
jae
cwtl
lret
movsb
pop
cmp
inc
xor
repz
jnp
aaa
jp
adc
adc
push
cli
sub
aas
sub
dec
fidivs
add
inc
mov
inc
xchg
daa
xchg
push
in
lock
add
push
dec
mov
loopne
pop
enter
dec
ficoms
xor
cli
dec
pop
sub
inc
arpl
mov
jae
lock
popa
into
mov
pop
push
xchg
fsubs
aam
in
and
jae
mov
shrb
daa
jne
shll
int
xchg
jns
xorl
popa
push
pop
rolb
dec
aas
mov
leave
inc
mov
mov
cmpb
and
push
in
jp
es
mov
cmpsb
mov
add
push
push
outsb
cmp
jns
jb
fidivl
icebp
loopne
sub
shrl
mov
and
mov
int3
adc
or
int3
movb
movsb
adc
pusha
outsl
sub
cmc
rorl
icebp
rclb
mov
test
cmc
pop
sub
fisubs
xchg
stos
pushaw
sbbb
push
imul
mov
xchg
out
xlat
xor
int3
fwait
mov
jle
sbbb
and
scas
outsl
imul
cs
inc
sub
loope
fidivs
push
jmp
pop
gs
mov
mov
std
cs
int
in
push
sbb
mov
in
cltd
clc
out
pop
pusha
sbbb
dec
loop
jge
pop
repnz
sub
xchg
inc
fadds
pop
or
xchg
or
inc
jg
mov
pop
dec
inc
adc
shlb
inc
imul
iret
xlat
lret
jg
or
or
mov
data16
push
jmp
jae
loope
mov
jb
push
or
into
inc
jnp
cmp
mov
pop
push
sub
mov
clc
arpl
cmp
fisttps
loope
dec
cmp
xchg
cmpsb
mov
inc
jae
movsl
dec
stc
xchg
mov
mov
xchg
enter
and
push
xchg
sbb
decl
shlb
pusha
int3
idivb
dec
fmuls
fsub
stos
lods
movsl
pop
orb
dec
jae
cmp
rol
pusha
std
and
shr
inc
aam
stos
lcall
frstor
mov
insl
adc
mov
xor
jb
xor
push
dec
push
xchg
mov
inc
decb
ljmp
aad
stc
rcl
xchg
mov
push
jbe
fcmovne
outsl
imul
loop
int3
stos
imul
cmpsl
cmp
jbe
jnp
aam
aam
into
sbb
out
sub
orb
fcoms
fildll
inc
subb
leave
lahf
xchg
rcl
pushfw
push
sub
pop
add
decb
mov
xlat
or
movsl
sbb
out
dec
rcrl
popf
insb
inc
sub
dec
inc
lods
dec
ljmp
and
push
stos
mov
stc
and
aam
aas
insb
pusha
jg
sti
mov
push
mov
mov
pop
addr16
xor
repz
data16
cmp
adc
fcomps
pop
test
mov
inc
fsubl
ror
arpl
insl
sub
mov
movsl
inc
insl
gs
cltd
jmp
or
lds
cmp
xor
roll
lret
inc
testb
push
xor
fcoms
arpl
xlat
mov
loop
xchg
test
cmpsl
pop
xor
dec
rclb
lcall
and
xchg
std
sub
dec
shrl
ret
faddp
and
add
movsb
lcall
inc
sarb
repnz
push
cmp
movsb
pusha
insb
xlat
cmpl
pop
or
add
xchg
inc
sbb
xchg
mov
sub
fildll
pusha
cmpsl
imul
xlat
clc
subb
cmpxchg8b
enter
jnp
out
xor
aam
repnz
jo
loopne
daa
lock
test
adc
lock
scas
mov
inc
outsb
repz
add
adc
in
in
mov
pop
icebp
imul
repz
adc
decb
test
shl
stos
adc
push
cmp
fildll
stc
push
push
ljmp
int3
in
imul
sbb
xlat
pop
cmp
sbbb
or
push
addl
sbb
cmp
aam
mov
cmp
or
inc
lods
lret
jecxz
mov
test
sbb
or
pop
sub
inc
sbbb
out
sbb
push
lea
out
std
ja
push
xlat
cmp
aam
pop
lods
outsb
aam
sarl
cwtl
adc
ds
cmp
and
dec
enter
pop
push
insb
insl
push
fnsave
lret
pop
aad
test
xchg
mov
pusha
iret
das
outsl
pop
js
push
jmp
pop
iret
into
xor
fwait
aad
lds
popf
inc
div
testl
test
pop
mov
mov
pusha
stos
xor
call
lret
gs
addl
ss
nop
sbb
ffreep
pusha
jae
icebp
outsb
mov
inc
hlt
xlat
sub
sub
inc
cmpb
cld
fs
rcr
sbb
test
sbb
jo
xor
fdivr
popa
push
xor
addb
jno
sub
xlat
pop
popf
mulb
inc
push
pop
push
add
push
imul
hlt
or
mov
jl
lahf
mov
sbb
and
fsubrs
scas
jge
pop
adc
icebp
jg
shr
fdivs
loop
xchg
jo
cmp
out
aam
scas
mov
and
cltd
aad
mov
cmpsb
pusha
sub
ret
dec
pop
fsubs
dec
lods
faddl
mov
adcb
fsubl
inc
aad
add
fbstp
mov
mov
and
nop
inc
dec
les
inc
push
cltd
mov
sti
je
dec
idivb
push
test
jbe
pop
cmp
adc
add
fsubl
imul
xlat
sbb
push
xor
shll
fstl
cmp
push
or
push
sub
jb
mov
clc
test
pop
mov
scas
pusha
push
mov
pop
inc
insb
mov
jne
pop
orl
xor
aam
std
mov
mov
xor
mov
int3
insl
cmp
jns
sbbb
pop
inc
sti
mov
add
mov
sbb
int
pushf
push
enter
iret
out
stos
daa
sbb
loop
xchg
add
pop
into
pop
je
and
scas
adc
adc
cmpsb
sahf
mov
xchg
or
subl
movsb
inc
cs
cmp
push
jecxz
push
or
sbb
lret
pop
dec
addb
imul
sti
shlb
repnz
mov
in
imulb
aas
inc
andl
or
ficoml
test
jbe
mov
lods
aaa
out
pop
test
je
lock
xchg
pop
sbb
stc
jl
stc
dec
fwait
jo
push
cwtl
cmpb
xor
xlat
sbb
clc
pop
mov
arpl
push
mov
xlat
inc
and
add
addr16
add
fldl
fsubs
jns
and
or
icebp
push
daa
movsl
in
cmp
mov
dec
int
and
mov
leave
pop
fcompl
orb
fmul
push
fmuls
push
mov
fisttpll
out
out
jle
fwait
adc
pop
pop
dec
lea
mov
orb
cmp
push
inc
push
mov
pusha
mov
or
inc
mov
and
jmp
div
mov
loopne
loope
dec
rclb
aaa
arpl
test
jg
xchg
cmp
sbb
insl
leave
sbb
cli
jp
and
inc
outsl
jge
pop
insb
mov
lea
dec
mov
roll
push
roll
push
mov
add
pop
mov
aam
pop
push
sbb
rcrl
push
ret
mov
sahf
lahf
mov
jmp
stos
mov
fldt
sar
push
lock
push
lcall
or
shlb
add
shrl
and
sub
bound
into
pusha
lods
lods
outsb
in
jl
movsl
cmpsl
cs
std
ret
pusha
mov
mov
mov
popa
ret
fldl
pop
lea
cli
decb
pushf
shlb
sbb
arpl
or
cmp
fcoms
cmp
pop
int3
jnp
js
out
inc
mov
xchg
fbstp
cmc
xchg
or
es
add
rclb
xor
or
push
enter
xorb
and
pop
xor
mov
scas
ljmp
int3
jo
pusha
popf
mov
dec
out
or
repnz
gs
sbb
jecxz
out
arpl
mov
fs
mov
add
or
jb
jno
pushf
xlat
fildll
lahf
and
mov
sbb
push
xlat
call
movsl
pop
popf
sbb
jp
cwtl
lcall
mov
rol
inc
pusha
push
sbb
je
push
mov
in
clc
jnp
mov
jp
inc
in
and
mov
mov
xchg
movsb
pop
pop
out
ja
fistpl
test
repz
notb
fisubl
add
movsb
push
scas
das
test
into
push
and
icebp
test
adcb
arpl
xlat
clc
add
pop
das
pushf
lret
mov
int3
push
sub
push
mov
aad
push
lds
out
mulb
add
incl
mov
push
iret
in
cmp
jecxz
in
xor
scas
cld
xor
fidivl
mov
push
lods
cmp
jno
and
cmp
xor
es
push
dec
or
popa
pop
loop
mov
inc
sbb
push
push
pushf
repnz
pusha
mov
jbe
jp
xor
xchg
fnstsw
cmp
pop
mov
jmp
ja,pn
mov
jecxz
arpl
mov
adc
lret
popf
fcomip
cmp
and
sbb
pushf
ss
inc
and
jge
mov
andb
adc
andb
jmp
jbe
and
insb
add
fildll
test
mov
mov
js
cmp
shrl
je
scas
cmpsb
cmpsl
xchg
mov
dec
rorl
rclb
adc
push
push
xlat
adc
into
mov
jmp
jg
aam
je
xchg
cmpl
jnp
inc
pusha
nop
fisubrs
call
or
cmp
sbb
stos
aas
xlat
push
adc
test
jecxz
mov
mov
shll
aas
add
loope
addb
inc
rorl
fwait
sahf
adc
fs
in
adc
cltd
xlat
push
dec
mov
js
fwait
jp
cmc
pop
test
sti
stc
hlt
fdiv
dec
jne
mov
sub
and
insl
inc
fimull
xlat
repz
std
mov
cmpb
mov
inc
xlat
test
mov
and
fsubs
cmp
in
and
inc
movsl
mov
rol
add
std
test
dec
jecxz
jle
xor
es
call
gs
lods
int
subb
add
leave
fistpl
es
idivl
push
jg
sub
in
cmp
repnz
das
ficomps
aad
fstpt
mov
xchg
xlat
sub
cmp
inc
jle
adc
lahf
notb
pop
jo
rcrl
jns
push
out
adcb
adcl
jl
in
cmp
test
jle
dec
xor
loope
enter
dec
sbbl
mov
enter
mov
int
scas
out
test
in
adc
mov
fdivrl
push
xor
jae
xchg
js
pop
dec
inc
push
inc
out
lret
adcb
test
cwtl
rcr
dec
aaa
xchg
pusha
or
add
dec
repz
and
bndldx
lret
les
push
loopne
jnp
cmp
sbb
andb
mov
jle
fs
movsb
add
xlat
add
sahf
pusha
repz
cmp
jmp
push
xchg
jp
leave
xorl
mov
jp
hlt
shrb
xor
lahf
push
xor
fs
jle
mov
dec
fwait
add
push
and
inc
cmp
mov
fs
pop
arpl
jle
je
aaa
sahf
movsl
out
xchg
fninit
test
xor
xchg
push
xor
add
mov
lret
scas
push
sub
aam
dec
mov
fsubl
push
sahf
inc
sbb
xlat
mov
das
mov
test
inc
xchg
pop
loop
aas
testb
outsb
ja
jo
hlt
loopne
xlat
shlb
imul
pop
arpl
ds
push
xlat
xchg
adc
cmpsl
addl
push
loopne
xlat
xor
sbb
pop
or
dec
fcmovbe
lea
das
mov
stc
addl
cmp
es
aam
movsl
dec
call
push
and
mov
fimuls
sbbl
inc
jg
push
mov
imul
mov
pusha
ret
jns
popl
lods
rcl
mov
in
mov
adc
scas
mov
scas
pop
addl
and
shrl
pop
xor
shrl
push
adc
shr
in
xchg
pop
rcll
pusha
lcall
jb
xor
mov
leave
arpl
xor
sarb
les
cli
mov
repz
sub
inc
nop
dec
adc
js
lods
scas
lds
mov
clc
fists
into
pop
or
push
les
ror
jle
scas
dec
cmc
pop
pop
inc
pop
insl
pop
bound
mov
setge
stos
add
cmpsb
jg
fsubr
dec
orb
sbb
xlat
adc
mov
xor
popa
cmpsb
fmuls
mov
test
nop
inc
fadds
and
fcomps
filds
pusha
scas
shl
test
jne
sti
rcrb
cmp
sub
shl
xchg
push
sahf
xlat
push
loope
shr
push
mov
lds
cmp
lea
jmp
cmp
cmc
pop
mov
test
jns
lock
stos
es
mov
mov
mov
push
rol
sub
sub
jl
mov
add
pusha
dec
out
mov
xlat
inc
daa
or
cmp
test
in
mov
fsub
push
lahf
inc
scas
pusha
shlb
fstpt
cmp
dec
dec
inc
cmp
hlt
outsb
pusha
xor
lock
repnz
push
mov
outsl
aaa
pusha
sub
mov
cmp
test
mov
mov
push
adc
add
xchg
stos
push
xor
mov
xor
jmp
pop
xchg
xchg
push
add
mov
fcmove
mov
push
ds
pop
jg
inc
dec
dec
push
testb
scas
jl
and
test
les
and
push
xlat
or
pushf
sbb
in
sbb
insl
jb
push
mov
xchg
outsb
jnp
outsb
mov
jp
rorb
mov
ret
mov
mov
push
daa
lret
mov
enter
xchg
loop
or
ret
push
or
xchg
mov
cmpb
jnp
les
aad
cmpsb
es
fstpl
push
push
divl
leave
pushf
dec
sbb
adc
xor
call
loope
jg
int3
pusha
stos
cmp
into
cli
pusha
push
jbe
leave
jecxz
jbe
add
enter
pusha
add
jl
inc
rcl
pop
fadd
std
push
repz
shll
lods
ja
repz
ret
mov
or
stc
aam
sbb
lret
scas
ss
pop
or
dec
daa
xchg
and
pop
jno
out
ret
pusha
or
lock
pop
fcomps
push
daa
push
mov
je
cmpb
push
mov
sbb
and
cmp
pop
pop
xlat
inc
xchg
insl
sbb
arpl
jbe
data16
sub
fdivl
not
cli
fs
xor
cmp
insb
xchg
fwait
into
rclb
adc
inc
mov
pop
and
aad
shrb
push
or
imull
loope
xlat
insb
push
outsl
call
and
push
push
divl
divb
or
xchg
lea
xor
sbb
mov
jmp
stos
sub
aam
mov
pop
mov
dec
xlat
cwtl
aas
fcoms
pop
adcl
test
ja
out
test
std
pop
pusha
push
sbb
lret
aas
fcomps
pop
push
sahf
adc
sbb
mov
cwtl
mov
fwait
fdivp
out
or
dec
dec
mov
mov
and
xorl
cmpsl
and
xlat
pop
aam
out
mov
mov
inc
push
test
sub
xlat
push
sbb
lahf
cmc
adc
iret
call
mov
sarw
adcb
pop
mov
mov
out
daa
inc
mov
sbb
std
lea
fdivrs
xlat
xor
push
jp
sbbb
or
sar
shl
loop
mov
xorb
cld
xchg
fsubrs
lods
dec
gs
mov
fsubrs
ljmp
out
jl
lock
jmp
xlat
lock
insl
xor
into
dec
stos
push
sub
jne
shl
test
sbb
add
jl
xor
popf
jae
and
les
fucom
rcr
jns
cmp
cli
xor
mov
pop
scas
mov
xlat
notl
ja
add
sti
inc
pusha
push
inc
imul
test
je
pusha
or
jle
idivl
andb
and
xorb
mov
repnz
loop
into
or
pop
cmp
mov
xchg
mov
rol
sahf
rcr
pop
rolb
xorb
jne
adc
cld
iret
add
push
mov
inc
test
cmc
fdivs
sbbl
ficompl
push
add
adc
mov
ficoml
jp
lds
pop
pop
jmp
sub
enter
and
sbbb
cltd
lret
xlat
and
mov
mov
xor
lret
fdivrs
pop
pusha
or
lahf
mov
loop
pusha
inc
or
or
lahf
lret
out
pop
test
movsl
push
sub
loope
lds
in
roll
shrb
adcb
mov
push
pop
rorb
enter
mov
int3
inc
xchg
add
and
outsb
sub
stos
jg
mov
pusha
loop
into
pop
jmp
dec
pop
fcom
cmpsl
add
addb
enter
cmp
test
mov
xlat
mov
lahf
sub
push
xlat
cld
dec
sbb
cltd
mov
loop
push
lock
clc
sub
hlt
xlat
les
lds
lods
or
inc
xlat
sub
pop
add
and
jno
jg
icebp
arpl
inc
pop
xlat
out
inc
and
pop
push
inc
pop
popa
bound
mov
inc
pop
gs
or
in
push
and
mov
cli
andl
pop
ret
repz
or
dec
data16
add
mov
int
and
movsl
outsl
mov
in
inc
fsubrp
mov
mov
cmp
push
into
jp
dec
outsb
xchg
js
sbb
dec
push
fcoml
add
mov
jnp
sbb
jecxz
mov
cld
inc
jmp
sub
pop
dec
jo
or
mov
lret
jns
inc
pop
inc
push
pop
cmp
fidivs
sub
or
xchg
cwtl
jl
mov
pushf
pop
lret
sbb
cmpb
outsb
push
sbb
push
std
mov
jbe
xor
addb
add
cmpsl
add
push
outsb
or
mov
adc
jnp
mull
dec
adc
loopne
xlat
fsub
incb
add
test
dec
aas
inc
xlat
adc
sahf
or
and
andb
jle
pop
movsl
test
fcompl
sub
mov
push
pop
add
fdivl
adcb
sub
shll
bnd
lret
push
push
xchg
pushf
loope
xchg
adcl
cmpb
mov
imul
cmpb
cmp
in
aad
jns
lods
shr
into
adcb
das
repz
sahf
xor
xor
loopne
popw
mov
xor
aam
or
cmp
xlat
xor
sbb
pusha
cmpsl
arpl
push
movsl
fnstsw
pop
and
pop
jns
pop
in
vmovq
adc
jp
jecxz
icebp
pop
bound
mov
mov
xchg
inc
rcrb
dec
sbb
repz
pop
ss
loop
adc
xor
jl
add
mov
mov
fwait
dec
fdivs
and
mov
jecxz
ds
sub
cmp
sbb
push
adc
pop
out
xor
mov
push
lret
call
xchg
cltd
addl
test
jns
aad
in
in
push
arpl
shlb
test
ret
int3
pushl
cltd
xlat
xchg
xchg
lret
fisttps
push
and
mov
je
lods
xor
cmp
fs
ljmp
lahf
cwtl
dec
push
aad
flds
mov
cmp
mov
out
mov
jnp
les
fildl
mov
pusha
out
fwait
repz
and
push
pop
xor
xor
mov
mov
jns
adc
sbb
sbb
aad
mov
mov
data16
sbb
push
mov
or
jo
pop
addl
mov
hlt
lods
es
jecxz
and
mov
xor
mov
ja
enter
push
pop
pop
jae
stos
xlat
dec
jo
shll
jmp
sbb
adc
fsubs
lahf
lds
xchg
f2xm1
pop
xchg
test
jecxz
fisttpl
dec
leave
hlt
js
test
iret
and
mov
or
sbb
xchg
xor
fldt
subb
fdivrp
cmc
xchg
mov
inc
cmp
test
jp
aas
fsubrs
bound
adc
into
pop
xchg
mov
addb
test
push
pop
push
fldcw
dec
push
inc
cmp
out
xlat
or
popf
sar
std
cmp
push
sarl
add
mov
cvtpi2ps
inc
xchg
outsl
or
inc
das
pop
mov
mov
movsb
clc
lcall
lods
pop
cmpsb
mov
xchg
ds
aam
jo
fisttpll
aaa
jl
pop
pusha
cld
loop
call
leave
pop
pop
or
xorb
sbb
aad
call
cmp
cs
xor
xchg
test
int3
adc
mov
out
and
rclb
push
mov
stc
mov
xor
pusha
xchg
out
sbb
jo
inc
fsubrs
insb
fsubr
je
sbb
jnp
xchg
rcl
jnp
mov
js
jg
dec
daa
jge
loope
int
movl
mov
pusha
dec
jmp
stos
xlat
ret
xor
mov
clc
inc
push
push
or
aas
notl
inc
ljmp
lret
mov
insb
cmp
add
cmp
jp
push
pusha
aam
lret
push
cld
mov
incl
dec
arpl
jg
clc
mov
mov
jae
outsl
mov
add
in
pop
add
loopne
arpl
addb
mov
pusha
pop
inc
test
xor
imul
pop
imul
xchg
cmp
xlat
inc
out
movsb
or
push
jg,pt
lret
mov
inc
mov
pop
ljmp
jecxz
test
inc
push
pop
jg
insl
xlat
xor
dec
cmpsl
push
add
bound
push
push
lock
outsb
fldl
jmp
cmp
roll
popa
push
rcll
icebp
arpl
pusha
call
jb
and
or
xchg
bswap
out
cld
jnp
xchg
push
push
adc
mov
jnp
ret
pusha
lds
dec
pusha
cli
lcall
sbb
lds
mov
pop
subb
mov
or
enter
loop
outsl
insl
cmpl
fisttps
xchg
repz
int
cmpsb
adc
jnp
adc
xor
xor
pushf
pop
dec
fcoms
loope
sbb
cmc
inc
push
orb
mov
xchg
jnp
ret
jle
jmp
jae
dec
dec
sbb
adc
xlat
and
inc
xor
jae
sbbb
inc
sbb
mov
repz
sbb
aad
adc
pop
mov
sub
push
leave
add
adc
pusha
les
fsubrl
lods
adc
sahf
and
or
fimull
rol
ja
out
jle
cs
outsl
fisubs
xlat
stos
mov
xchg
in
mov
add
sbb
and
and
rcl
movsb
enter
cmp
inc
ret
pop
mov
pop
pop
fmul
jno
mov
inc
sti
xchg
push
enter
add
sahf
or
sbbb
jnp
in
push
fldl
movsl
xlat
xchg
jge
push
in
mov
or
jb
ror
loop
xor
mov
sub
xchg
jg
dec
jb
aam
aas
daa
cmp
fadds
aas
ficoms
orb
pop
inc
xlat
jbe
mov
push
push
sahf
negl
xchg
fistl
jne
xlat
dec
hlt
scas
scas
push
pop
fwait
mov
pop
or
mov
icebp
fcomip
fsubrs
mov
out
aaa
inc
xchg
arpl
ljmp
pop
xor
mov
pop
mov
pop
inc
arpl
or
iret
cmp
push
mov
cmp
out
lret
add
jecxz
fwait
cwtl
mov
pop
in
dec
arpl
and
stc
or
and
inc
and
cltd
mov
jne
cld
pusha
inc
cs
adcb
mov
xbegin
mov
or
inc
mov
mov
xchg
enter
jmp
xchg
or
cmp
inc
fs
rolb
cmp
ret
adcb
mov
orb
into
cmp
sub
jp
dec
inc
cmpsl
mov
jp
jo
scas
cmp
pop
es
xchg
xor
dec
in
sub
cli
adc
cmpb
xchg
xor
push
mov
cmpsb
jp
jp
subb
roll
pop
idivb
pop
mov
lret
cmpl
jl
arpl
xchg
xchg
mov
xor
iret
clc
jle
sbb
xlat
ret
mov
add
sbb
leave
int3
fisttpll
out
sub
gs
fwait
mov
addb
dec
sbb
jg
sub
xlat
xor
pushf
out
pop
or
pusha
xorb
adc
inc
xor
mov
push
push
enter
loope
stc
sbb
inc
pop
hlt
repz
adc
xchg
mov
lcall
pop
sbb
jecxz
mov
push
dec
mov
add
roll
in
xchg
inc
xlat
mov
in
scas
jnp
mov
push
mov
imul
push
hlt
fucomip
mov
data16
mov
push
xchg
sub
iret
lds
cwtl
inc
movsb
in
rcll
cld
xchg
mov
orb
sbb
mov
movsl
in
lods
loopw
je
push
xor
xchg
fldt
xorl
out
out
xor
pop
or
jns
xlat
movsl
mov
ss
pop
mov
clc
mov
adc
jecxz
dec
add
jle
jmp
je
cmp
adc
mov
cld
fwait
lcall
mov
xlat
pop
adc
in
lret
pusha
mov
lahf
bound
testb
pop
loop
mov
in
pop
ret
fs
rcrl
sub
les
mov
cmpsb
mov
pop
sbb
stc
jbe
jbe
aam
repnz
inc
stos
sti
mov
sahf
out
lods
mov
in
mov
int
in
out
pusha
sbb
jno
mov
push
jne
cmp
and
shrb
cld
pop
xchg
cmp
cmpsb
mov
call
and
or
pop
add
sahf
push
push
dec
mov
mov
xlat
ret
xchg
xor
jnp
fnsave
adc
xor
or
pop
mov
int
lret
lcall
mov
enter
pop
cmpsl
xchg
fwait
push
add
or
pushl
sahf
mov
adc
call
mov
mov
rorl
jb
js
pop
out
sub
cmp
dec
dec
sub
mov
pop
dec
pop
pop
pusha
fcoml
xor
inc
rcrl
in
into
pop
std
jg
cmpsb
push
mov
dec
js
test
xchg
push
add
hlt
gs
shrb
mov
adc
ja
xchg
lcall
ds
xchg
cs
pop
aam
and
sti
pop
test
sbb
stc
xchg
add
rcll
cmpsb
out
xlat
jge
adc
shll
out
lahf
sub
in
call
fistl
movsb
mov
sub
adc
repz
push
pop
jmp
pusha
jmp
test
xchg
nop
iret
pop
popf
rolb
inc
cmp
js
imul
popa
addr16
pop
insb
subb
adc
cmp
aaa
push
andb
mov
xlat
rcll
xchg
xchg
xor
movsb
scas
pop
fcoms
push
cmpsl
sub
mov
dec
rolb
xlat
jno
sub
call
and
aaa
jae
adc
ljmp
cmp
mov
add
pop
jne
sbb
add
inc
jnp
dec
fnstsw
mov
pop
imul
rcl
mov
jle
fcompl
loope
scas
cmp
aam
shl
ja
fdivs
cmpsl
adc
mov
pop
cmp
repz
mov
fbld
pusha
cs
mov
xlat
xchg
ds
sub
std
inc
and
fimull
sbb
sti
fisubs
mov
pusha
pop
lret
push
mov
aas
ss
jns
pusha
sti
pop
or
sbb
cmpsb
sbbl
and
loope
in
outsb
mov
out
pop
shll
movsb
fcmovbe
xchg
jns
and
and
fucomip
mov
pop
pop
mov
adc
push
jmp
ret
sbb
lock
add
mov
out
fs
xchg
sbb
push
mov
mov
fidivrl
jge
jb
hlt
mov
mov
rolb
cwtl
or
xlat
mov
movsb
rcrb
xor
incl
mov
js
in
mov
mov
jnp
and
push
cld
dec
dec
bound
xorb
in
push
dec
mov
xor
pop
xor
sbb
sbb
jg
mov
xor
mov
addb
fdivrl
test
shl
movups
add
movsb
hlt
push
cmp
dec
pop
stc
inc
xor
mov
outsb
lcall
xchg
icebp
and
decl
lret
rorb
xchg
fcmovne
cmp
pop
mov
cmpsl
mov
fdivrs
pop
sub
cld
push
add
rclb
in
add
cli
int3
popf
jle
jne
loopne
cmp
ja,pt
dec
mov
rclb
js
std
daa
push
push
dec
cmp
clc
loopne
lret
loope
xlat
lcall
movsb
xorb
out
dec
pop
and
mov
cltd
ret
addl
add
xchg
iret
jg
mov
iret
or
xchg
movl
cmp
or
out
cwtl
cltd
jge
loopne
xor
scas
add
pop
add
xchg
pop
sbb
push
dec
out
xor
dec
push
lods
in
xchg
jecxz
rcrb
addr16
fildll
shl
jle
addb
out
push
mov
adc
adc
pusha
sub
push
sub
movsl
xor
lea
or
push
pusha
ds
ja
mov
pop
push
loopne
mov
movsb
pop
pop
adc
fwait
hlt
std
cmp
mov
icebp
out
lea
addr16
ffreep
pusha
xchg
mov
mov
xlat
je
aad
sub
insb
repz
push
mov
ret
mov
jecxz
cmpb
imul
pop
aaa
ds
aad
in
push
ljmp
adc
aam
sbb
stc
call
and
incl
sub
sbb
aad
or
fnstcw
or
mov
into
xchg
xlat
push
lods
sahf
ficoms
imul
cmc
xchg
jmp
scas
sbb
imul
and
mov
stos
repz
sub
push
ficoms
dec
shll
pop
inc
orb
add
loop,pt
loope
jno
dec
test
pusha
bnd
ret
push
rcl
sbbb
subb
jo
sahf
addr16
push
inc
sarb
test
iret
xchg
scas
popf
aad
mov
cmp
in
into
pusha
test
mov
test
or
inc
push
arpl
sbb
lock
mov
test
add
ss
push
pop
outsl
fwait
adc
pop
sbb
inc
nop
inc
push
xchg
jge
sbb
cld
sbb
aam
pop
cmp
dec
dec
dec
fs
addr16
shrb
mov
cmp
cmpsb
pusha
dec
cld
lcall
mov
push
adc
orb
add
sub
mov
push
rcll
ficoml
pop
sbb
repz
inc
pop
cmp
jmp
sbb
ljmp
mov
push
lods
pop
pop
clc
shrl
ret
lahf
cwtl
push
fisubrl
dec
sbb
mov
fmuls
lret
add
xchg
jg
je
rcll
out
jecxz
mov
or
addb
pop
push
mov
fisubl
pop
xlat
inc
mov
lods
lcall
pop
adc
test
iret
mov
ja
push
aam
pop
pusha
pop
pop
arpl
jnp
in
xchg
dec
int
ja
pop
test
push
xchg
cmpsl
mov
movsl
jle
adc
push
push
imul
ret
dec
xchg
lock
jg
fs
cmp
mull
insb
ljmp
js
shrb
fnstcw
test
mov
xor
pusha
je
stos
popa
dec
adc
aam
push
sahf
xchg
lret
jp
or
dec
push
popf
inc
ja
jne
push
pop
das
sbb
cltd
mov
pop
pop
pop
fildll
je
pop
sub
mov
inc
xor
jmp
adc
mov
xlat
and
xor
in
push
xchg
stos
jo
push
test
cmp
aas
fmuls
ret
test
mov
or
pop
mov
mov
enter
punpckhbw
sub
lahf
shrb
pushf
mov
ret
sub
and
xchg
movsl
cli
mov
daa
jecxz
fcoml
mov
out
pshufw
push
sub
pop
and
mov
xlat
aas
addb
cmpsb
in
add
shrb
fistl
cwtl
jbe
xor
adcb
repz
repz
adc
xor
pop
ljmp
adcl
jg
dec
mov
andl
or
arpl
add
jno
fwait
and
cmc
inc
xchg
popa
fwait
dec
pop
pxor
push
fs
nop
inc
popa
sbb
jl
inc
fwait
lahf
dec
in
push
addr16
jmp
sbbb
cli
add
aaa
cwtl
adc
addl
inc
arpl
inc
jp
adcb
push
jmp
mov
pop
lcall
add
push
mov
or
push
jmp
and
leave
pop
out
or
adc
repnz
out
lahf
or
lea
fsubrs
mov
pop
xchg
inc
cwtl
jnp
add
popa
cmp
dec
xlat
mov
pop
fimuls
xchg
adc
dec
pop
jp
es
xlat
sub
imul
movsl
jo
xchg
data16
test
popa
shlb
leave
pop
scas
xchg
xor
push
inc
je
ret
rcl
mov
andb
fcompl
xchg
xlat
xorl
ffree
push
sti
mov
imul
cmp
mov
pop
aaa
jl
push
mov
mov
dec
cld
mov
pop
lock
sub
jns
repnz
inc
jl
sbbb
xchg
leave
adc
dec
and
es
dec
inc
adcb
popf
les
mov
mov
inc
bound
adcb
fists
dec
jmp
repnz
or
andb
int
xlat
ret
es
out
push
aam
movsl
mov
jno
seta
roll
loop
das
in
add
mov
aaa
jmp
lods
shlb
movsl
shll
daa
rcll
lret
in
push
xlat
pushf
mov
and
test
scas
sub
adc
push
jbe
testl
in
push
std
add
cmp
out
lods
add
push
subb
sbb
sbb
sar
inc
repz
dec
mov
lods
xlat
insl
nop
movsb
inc
lret
inc
into
ror
and
fdiv
xlat
dec
mov
cmp
pop
std
lcall
sub
lea
jg
sbb
aad
or
subb
cmp
dec
mov
jecxz
daa
sub
pusha
add
sbb
jnp
mov
shl
lods
jnp
dec
jae
mov
or
mov
lea
add
jl
mov
scas
pop
shrl
sbb
int
ds
sub
fsubr
gs
andb
rolb
sbb
leave
push
lods
std
mov
call
mov
xorb
es
mov
cmpsl
pusha
mov
icebp
lret
cmpb
dec
movsb
test
in
andb
jp
addb
jmp
enter
push
adc
mov
or
inc
stc
push
lcall
and
xchg
lcall
push
lds
stc
mov
cs
insl
test
xlat
repnz
test
add
jns
or
push
fs
mov
inc
mov
sub
and
dec
push
push
stos
movsb
or
sub
pop
mov
ljmp
orl
fbstp
enter
mov
jbe
sub
cmpl
pop
jno
xlat
mov
mov
xor
fldcw
lcall
or
cmpb
add
mov
leave
adc
push
lods
das
addl
and
sub
por
mov
mov
jnp
mov
add
jge
and
cmpb
pop
repnz
xlat
xchg
adc
push
push
pop
sbb
push
or
add
mov
ljmp
jge
loopne
or
daa
lret
xlat
mov
pusha
sbb
pop
adc
cmc
push
xlat
js
jmp
or
jg
test
pop
shll
add
stc
inc
mov
xor
mov
push
insb
mov
adc
in
subb
aad
pop
xor
push
and
sti
test
mov
xlat
pop
cld
lcall
shrb
lret
jmp
in
pop
mov
pop
xchg
aad
or
aaa
sub
lret
xchg
out
or
jns
jae
stos
iret
addr16
push
lcall
jp
sub
push
xor
icebp
pusha
jl
out
nop
mov
jl
push
pusha
je
cmp
fs
or
push
mov
mov
lret
adc
xchg
test
or
leave
push
or
and
outsb
push
dec
orl
sbb
shl
out
pop
pusha
and
add
hlt
sbb
sub
aam
jb
loope
cltd
loop
dec
lds
cmp
xor
xchg
sub
mov
xchg
ficoml
push
int
pop
cltd
leave
and
ljmp
sub
dec
not
jbe
jmp
cmp
outsb
cmpl
and
fbstp
pusha
inc
pop
std
xor
xchg
push
dec
fsubs
mov
in
outsb
cmc
jbe
mov
lcall
pusha
sbb
das
outsl
cmc
in
xlat
clc
shr
or
imul
jl
mov
outsl
xlat
aad
filds
jb
push
jmp
xchg
mov
or
pop
nop
mov
and
adc
int
je
sbb
movsl
loope
sbb
jb
repnz
lock
fldenv
and
aam
push
sub
fisubrs
sahf
jb
mov
dec
and
push
xlat
mov
xor
and
mov
pushf
int3
jp
xlat
pop
test
packuswb
rorb
leave
and
cmp
je
mov
jnp
repz
push
inc
and
adc
les
sub
inc
lods
shlb
mov
pusha
or
inc
push
and
rcll
or
push
loopne
dec
sub
push
cs
jo
in
es
rorl
out
pop
inc
test
insb
inc
sahf
inc
mov
rcll
test
hlt
rol
pop
aas
or
adc
cmp
adc
mov
pop
aas
sbb
shr
xlat
test
push
cmp
xorl
push
push
int3
dec
jg
jecxz
inc
pop
lock
add
xchg
and
iret
dec
imul
adc
rcrb
movsl
dec
leave
aaa
lods
pusha
test
cld
sbb
loop
pop
cmp
fwait
out
add
cmpsb
pop
mov
in
sbb
jae
xchg
mov
lcall
andl
popa
call
adc
pusha
xor
cs
mov
aas
in
jg
fs
mov
out
cld
cwtl
xlat
loope
rorl
inc
xor
sbb
push
mov
xor
clc
ret
and
jmp
mov
stos
popa
xlat
pop
fistps
popf
pop
jne
aam
pop
pop
xor
rorl
out
inc
lahf
mov
fbld
movl
out
and
fucomip
push
out
fwait
pushf
pusha
into
fsub
into
in
push
dec
mov
push
sahf
shll
adc
push
sahf
push
mov
mov
mov
mov
and
pusha
xlat
add
je
sbb
add
xchg
add
xchg
jge
inc
clc
xlat
sbb
ljmp
xor
xchg
dec
xlat
cltd
in
pop
inc
loope
enter
out
xchg
xchg
test
call
inc
jle
xchg
push
dec
pusha
lea
fdivl
cltd
movsb
jmp
negb
xlat
ljmp
imul
and
inc
loop
xchg
pusha
pop
movsb
iret
jnp
pop
jge
iret
loopne
dec
fcmovnbe
loop
mov
out
jle
leave
and
inc
pop
push
xlat
and
nop
negb
xchg
mov
mov
das
subl
je
lea
ret
loope
mov
push
inc
adc
and
sbb
faddp
mov
insl
mov
test
adc
pop
cmc
out
jg
outsb
in
adc
or
fucomip
popf
leave
pop
notl
push
sub
cmp
js
les
ret
gs
push
inc
enter
xchg
inc
xchg
test
in
pushf
lret
and
iret
fcompl
jg
cmc
xchg
mov
sti
cld
mov
clc
jnp
call
or
inc
dec
mov
push
repnz
adc
mov
or
xor
inc
lahf
hlt
pop
mov
out
jmp
add
outsb
orb
cmpsb
jge
fwait
mov
stos
shrb
pushf
std
or
jp
out
mov
pusha
xor
and
jmp
cld
xlat
adc
or
sbbb
jl,pt
inc
or
push
lea
jmp
cmp
lea
push
fwait
sti
mov
aam
cltd
cwtl
jbe
and
insb
ljmp
xor
pop
jp
sbb
scas
inc
pop
mov
mov
enter
pusha
pop
out
mov
aas
into
mov
sbb
dec
into
and
orb
dec
cmp
fdivs
jp
mov
lret
cmp
jl
xlat
mov
mov
adc
push
inc
shrb
jo
xlat
mov
mov
nop
pop
gs
in
jmp
xlat
or
inc
jecxz
stos
mov
jnp
dec
repz
mov
loop
aad
imul
mov
ds
xor
leave
sbb
fdivrs
gs
gs
in
cmpsb
orb
add
mov
lcall
dec
rclb
jmp
pop
int3
push
cmp
fldl
mov
mov
mov
fdivr
push
dec
aam
ret
mov
mov
inc
push
lea
cli
les
fnsave
dec
pusha
lds
and
mov
inc
pop
fisttpll
into
xor
stos
add
out
sti
xchg
fistpl
arpl
sub
mov
repz
mov
jle
fnstenv
mov
out
sub
mov
js
inc
fmulp
jl
mov
mov
inc
sbb
int3
push
je
add
xlat
cwtl
add
mov
xchg
aam
ror
divl
call
stc
shl
xchg
and
dec
out
and
pusha
and
pop
in
cwtl
iret
dec
rcrb
imul
fildl
je
add
fmuls
xchg
mov
push
mov
std
and
lahf
push
adc
sahf
xchg
loopne
ljmp
int3
test
loope
lods
mov
or
int
ficoms
hlt
das
adc
sbb
sti
loope
adc
std
jecxz
xor
aam
pop
rolb
or
adc
cmp
push
cmp
in
dec
stos
sub
mov
add
lret
xlat
lds
adc
adc
arpl
pusha
call
aam
mov
je
pop
lret
push
orb
ljmp
add
aam
ljmp
pop
fdivrs
mov
imul
and
outsl
sahf
adc
ljmp
stos
addr16
cwtl
ss
xor
in
inc
jbe
cmpsb
push
cltd
out
push
in
fstpt
mov
in
out
mov
outsb
and
fwait
mov
mov
mov
imul
pop
mov
fimull
cmp
ret
mov
nop
mov
fcmovnbe
fdivl
jo
ljmp
leave
rorl
testl
js
add
add
push
pop
inc
lret
mov
stos
mov
pusha
mov
cmp
pop
xchg
sub
cltd
js
pusha
out
cltd
mov
push
push
mov
test
cmp
add
mov
ljmp
xorb
xchg
repnz
in
fs
rolb
call
cli
dec
dec
sbb
fistl
enter
mov
pop
test
xor
lock
jg
roll
outsb
mov
out
inc
fcomp
jl
jp
jecxz
dec
dec
cmpsl
and
clc
ficompl
cli
jno
mov
aad
mov
call
les
popf
pop
icebp
je
add
adc
inc
xchg
fsts
loopne
push
gs
into
jne
cmpsb
loope
fsubrs
rep
divb
lahf
aam
imul
mov
cld
aam
pop
sbb
dec
inc
bound
orb
decl
cmpsl
lods
ret
addr16
addr16
test
jg
or
push
es
lret
cmp
or
sub
inc
pop
addr16
xor
sbb
nop
jp
enter
xchg
or
lods
data16
fldl
mov
xor
dec
add
pop
mov
xchg
das
rcrl
xor
mov
nop
sbb
test
adc
fadds
imull
fs
inc
fisttps
push
bswap
lods
jp
aam
jp
jmp
lret
add
cld
sti
xor
in
and
jge
pop
mov
pop
pop
jae
loope
adc
sbb
out
dec
lods
pusha
cld
aas
xchg
movsl
cmp
or
aam
adc
fcomip
lret
cli
push
sbb
adcb
stos
and
xchg
mov
andl
mov
pusha
ret
mov
xor
cmc
xchg
les
pusha
add
push
jae
pop
xchg
jb
lds
push
outsb
mov
jle
sbbb
in
repnz
or
scas
icebp
ja
xorb
fwait
rclb
mov
fs
jne
or
inc
pushf
adc
lret
lret
dec
push
scas
jo
pop
sbb
sbb
outsl
das
adc
inc
lods
mov
jne
call
mov
out
mov
or
leave
das
dec
jb
mov
movsb
mov
sbb
add
jbe
push
jne
mov
leave
adc
add
or
xchg
xor
popa
or
cmc
pushf
dec
imul
sarb
inc
mov
or
es
into
loopne
aad
hlt
jp
cmp
jae
cmpsb
pop
dec
pop
sti
aad
sarl
or
xchg
aam
sbbb
loopne
push
scas
lahf
pop
mov
sti
jg
testb
push
jae
es
cmc
call
test
jge
inc
inc
add
pushf
mov
xlat
std
out
mov
hlt
dec
pusha
sbb
sub
fidivrl
ret
mov
push
negl
ret
xor
pop
or
out
mov
rorl
dec
scas
push
cmp
fsubl
xchg
push
movups
pusha
pop
mov
mov
in
scas
jbe
mov
pusha
inc
arpl
xchg
xlat
mov
shll
int3
pop
mov
or
xchg
jecxz
jo
jle
jnp
mov
mov
repz
xlat
out
divl
mov
xchg
test
cmpsl
xor
in
pop
mov
pop
jg
xlat
mov
mov
add
mov
rorb
adc
sub
ret
lea
repnz
test
push
mov
cmp
popa
sbb
jnp
xorb
or
mov
mov
cli
add
mov
addr16
rclb
ss
adc
fcomps
xchg
inc
pop
icebp
fwait
xor
lods
push
test
push
xor
xlat
mov
xor
inc
fwait
pop
jg
ret
cmp
adc
inc
fsubrs
adcb
mov
cmp
pop
sbb
lcall
inc
repnz
in
pop
loope
add
push
cmp
int
dec
push
jecxz
jns
pusha
jecxz
addb
inc
movsl
fcmovbe
adc
outsb
push
xorb
aam
loope
xchg
je
push
dec
mov
inc
push
bound
sub
push
mov
enter
loope
push
bound
push
jp
jns
andl
pusha
inc
add
inc
shlb
xor
adc
data16
jg
in
aam
adc
andb
in
sub
pusha
mov
repnz
push
xlat
jae
inc
ss
xchg
or
xor
inc
sbb
in
arpl
mov
enter
jnp
pop
rcrl
aaa
ljmp
daa
inc
shll
aam
cmp
aaa
pop
or
xor
mov
sbb
movsl
xlat
sub
in
push
mov
ja
les
bound
and
push
adc
pusha
sarb
add
out
push
pushf
cwtl
cmp
bound
outsb
add
push
xlat
adcl
data16
push
add
cmpsb
fists
aad
pop
mov
hlt
push
pusha
xor
int3
push
fcomp
movsl
jb
or
jle
jnp
lods
inc
dec
addl
scas
in
xchg
addr16
stc
xor
cmp
inc
sbb
movsl
inc
jnp
fdivs
in
or
mov
iret
rolb
xchg
sub
xlat
adc
push
jecxz
cmp
adc
dec
adc
ret
adc
xchg
mov
je
and
daa
sub
mov
add
pop
pop
mov
leave
mov
in
rcrl
cmp
or
mov
loopne
add
mov
adcb
xor
ds
fdivrs
cmp
sbb
mov
sbbb
ror
sahf
jle
iret
push
sbb
ljmp
lcall
cmpsb
out
xlat
jo
movsl
mov
ret
fs
mov
mov
mov
sahf
or
out
loop
or
movsb
and
mov
les
insl
xchg
xchg
xchg
fidivl
xlat
sub
push
xorb
jp
dec
dec
loop
les
pop
shlb
pushf
xchg
xchg
jg
pop
das
jmp
aad
pop
repnz
out
xlat
clc
mov
sub
and
andl
push
and
aad
push
sub
adc
addb
aaa
xor
sar
push
jg
push
inc
push
inc
ja
loopne
push
lret
in
push
add
ljmp
ss
push
fcom
push
je
aam
push
imul
ret
xchg
add
push
sub
xchg
in
in
add
ljmp
fnsave
movsl
jmp
lods
andb
mov
lods
aam
xchg
xchg
sub
cmp
mov
lods
aad
sub
mov
insb
scas
jnp
jge
pop
lds
push
rcr
out
add
push
stos
sub
inc
pop
bound
inc
sub
pop
xlat
inc
inc
ffreep
push
into
ljmp
dec
push
add
push
shll
push
popl
hlt
movaps
push
shrl
add
notb
inc
adc
sbb
dec
ja
push
pusha
ja
testl
sub
mov
sub
mov
sbb
cwtl
mov
loopne
pop
out
enter
xlat
xchg
out
aas
push
inc
lcall
std
mov
xlat
cli
mov
pop
push
jne
pusha
pop
stos
sub
xlat
cwtl
mov
inc
inc
or
mov
pusha
addr16
mov
push
pop
mov
mov
andl
mov
mov
dec
cmpsl
inc
mov
sub
and
mov
mov
mov
xchg
or
xor
loopne
jp
cmp
adc
jg
push
and
push
fs
sub
sahf
xor
push
dec
pop
sbb
out
push
xchg
cmp
mov
addb
xchg
loop
lods
cmp
sub
cmp
jle
xlat
in
mov
cltd
or
mov
test
xor
mov
pop
enter
fwait
je
cwtl
sub
jb
xchg
mov
and
inc
sbb
pop
mov
mov
mov
fs
push
movsl
xchg
roll
adc
mov
push
imul
icebp
xchg
ret
mov
imul
xlat
cmp
psrad
pop
mov
sysenter
push
sub
fs
pop
dec
or
test
xor
inc
aas
mov
cmpb
ret
jmp
aad
cmp
sub
addb
outsb
in
sti
mov
mov
outsb
popa
adc
mov
jg
pop
jmp
jge
mov
icebp
jbe
adc
xchg
das
add
xlat
xor
movb
inc
pusha
pop
and
adc
or
pusha
xlat
xor
dec
aaa
stos
daa
scas
push
ljmp
inc
or
push
movsb
pop
movsl
mov
or
mov
std
sbb
dec
add
arpl
fwait
add
and
scas
adc
in
pop
cltd
mov
inc
imul
xchg
xor
inc
sub
fwait
add
dec
dec
shrl
sbb
das
cli
jmp
mov
sbb
fdivrs
dec
push
sar
xchg
into
pop
sub
jo
lods
inc
in
mov
xchg
mov
push
pop
cmp
pop
pop
sti
dec
in
mov
inc
inc
xor
xlat
int
mov
pop
cmc
pop
mov
add
cs
xchg
js
xchg
xchg
dec
pop
cmp
and
mov
xlat
ljmp
js
sahf
and
cltd
lcall
mov
mov
jo
mov
lds
dec
mov
loope
inc
push
add
mov
sbb
mov
inc
pop
pop
mov
loop
jge
in
lret
jecxz
sub
insl
pusha
and
adc
pop
es
mov
pusha
adc
in
jnp,pt
out
xchg
push
aas
mov
or
fmul
sub
mov
mulb
out
leave
data16
fs
jne
inc
pop
mov
loope
adc
mov
or
xchg
aam
sbb
sti
ja
pusha
std
sti
test
rorb
das
lahf
jo
add
jnp
rolb
and
pusha
add
pxor
shrl
jae
cmc
enter
arpl
inc
idivl
sub
pusha
in
or
cmp
pop
mov
adc
mov
inc
pop
jb
mov
cmp
xlat
sbb
stc
loop
scas
inc
xor
imul
jno
push
pop
and
leave
ret
mov
mov
inc
pusha
xchg
dec
cmp
shlb
sbb
push
add
insl
inc
sahf
gs
cmp
pop
inc
insb
pop
leave
cmp
push
popf
jae
outsl
fidivl
lea
xchg
adc
cwtl
mov
js
adc
mov
out
push
cmp
lods
mov
popf
adc
imul
lods
hlt
mov
mov
mov
add
lds
mov
lahf
sbb
fbstp
mov
mov
ret
pop
in
pop
cmp
adc
addl
and
add
jno
nop
add
shll
mov
or
or
and
jp
stos
jecxz
leavew
cwtl
scas
cmpb
push
xchg
push
inc
mov
hlt
push
or
jge
add
mov
pop
inc
mov
and
daa
or
push
fists
fcoms
incl
push
mov
hlt
or
rcl
addr16
daa
push
mov
lcall
cmp
andb
add
jge
sub
cltd
testb
xor
sub
sbb
gs
loopne
sub
xor
xlat
sub
xlat
cmp
mov
out
xor
adc
mov
cmp
je
imul
lret
iret
outsb
adc
jle
inc
loope
loopne
dec
mov
testl
das
mov
jae
pusha
out
sbb
sti
lea
mov
movsb
leave
jecxz
pusha
push
xor
cmpsb
fdivr
in
aam
mov
test
out
daa
leave
in
iret
jp
fisttpll
xor
addb
ss
aam
cmp
push
or
push
mov
test
mov
mov
jbe
jbe
das
jecxz
xor
insb
cltd
jl
and
xlat
out
js
pop
push
out
in
cmp
outsb
ja
push
aaa
cltd
fisubrl
pusha
in
outsl
mov
pop
rcl
push
mov
cmp
pusha
sub
lret
or
cltd
xlat
xchg
push
jne
outsb
inc
sbb
push
mov
cltd
push
loopne
inc
hlt
adc
sbb
jae
lock
pop
call
scas
jno
lds
subl
adc
nop
or
xlat
lret
daa
out
loop
mov
cmp
cwtl
outsb
movsl
call
imul
mov
fmul
mov
dec
mov
cmpb
ja
les
in
in
dec
fistpl
loopne
lds
cmpsl
std
es
xchg
mov
ja
xorb
jge
xlat
imul
xor
das
out
fs
inc
mov
mov
mov
mov
pop
pushf
inc
rcrb
stos
pusha
ret
cli
loop
addb
outsl
out
gs
aas
fisttpll
call
xor
loop
call
inc
sub
outsb
daa
pop
jmp
adc
cmp
sub
pop
cmp
mov
popl
mov
jo
adcb
je
out
jns
xchg
outsl
xchg
popf
and
les
xchg
cmpsl
xlat
imul
lret
scas
ljmp
xor
mov
inc
mov
push
cmp
mov
aas
push
cmp
mov
outsl
or
xbegin
and
xor
and
test
mov
pushf
aaa
cmp
xchg
sahf
add
fstpl
xchg
cmp
mov
popa
lcall
andl
xchg
addl
adc
cltd
mov
adc
or
testl
pop
out
inc
pop
push
orb
mov
out
aad
add
js
mov
mov
insl
xchg
jmp
push
mov
inc
shll
aas
rolb
ja
jge
cmp
cmpsl
fstpl
out
pop
sbbl
leave
adc
sahf
lcall
mov
push
push
fwait
xlat
addr16
jg
mov
lods
xchg
out
test
xor
mov
and
cmpl
and
fildll
xor
sub
es
push
pop
mov
pop
pop
js
movsb
inc
aaa
adc
fsubs
push
loope
sub
sbb
out
push
dec
pop
xlat
hlt
pop
push
mov
out
lcall
dec
or
inc
push
and
xchg
enter
push
popa
sbb
xor
add
ret
stc
out
jp
pusha
rcll
adc
pushf
mov
loopne
mov
pop
pusha
pop
imul
cli
ja
fcmovnu
pop
adcb
popf
clc
stc
insb
add
xor
add
lock
mov
xor
dec
idivb
mov
hlt
mov
mov
loope
fisubrl
scas
jae
ds
je
out
cmp
mov
fcoms
repz
fldl
cmp
andb
or
js
pusha
jno
ss
nop
pusha
or
mov
addr16
inc
sbb
cmp
cltd
mov
push
cmp
xor
push
pop
outsb
mov
push
adc
and
jle
jno
mov
out
cmp
jne
push
mov
adc
or
push
movb
dec
inc
mov
mov
mov
or
xlat
pop
loopne
lds
test
mov
ja
in
push
adc
rolb
xor
pop
addr16
mov
nop
mov
push
pusha
scas
loopne
dec
sub
xlat
lock
xchg
pop
mov
push
addr16
je
fwait
popf
gs
aaa
bound
dec
xor
mov
cmp
bnd
push
push
dec
inc
lahf
cmp
jmp
insb
pop
push
lods
cs
mov
pop
cmp
mov
lods
sbb
adcl
pusha
xor
adc
xor
jmp
in
and
jge
pusha
out
xchg
ljmp
mov
sbb
push
cli
cmp
dec
add
lahf
testb
push
and
jbe
mulb
mov
pop
push
cmp
ljmp
lds
pop
bound
fcom
or
sub
outsb
and
pop
jnp
pop
mov
sbb
shll
enter
rolb
andl
push
adc
popf
sbb
pusha
dec
sbb
add
pop
call
xor
sub
test
lea
cmp
lcall
fwait
and
or
into
mov
jg
dec
test
scas
sbb
aam
lret
mov
xor
adc
add
pop
fcomps
xor
mov
daa
sub
xchg
push
dec
pop
and
xor
fiaddl
in
test
sub
sti
jmp
jg
mov
mov
repnz
push
das
mov
mov
out
sbbb
fimull
lahf
add
int
cs
test
popf
mov
xchg
cmp
mulb
lods
test
fisttpl
ja
push
rorl
jae
setle
and
mov
mov
inc
add
pop
and
lds
mov
pop
inc
xor
aad
or
sti
sub
xor
cmc
xor
icebp
stos
or
jge
dec
jns
pop
insb
mov
je
xchg
adc
adc
inc
pop
mov
inc
mov
pop
push
data16
cmp
pop
mov
ret
xlat
inc
and
push
xor
arpl
and
scas
xor
aam
sti
dec
aam
or
cmpsb
add
mov
xchg
mov
jg
inc
jge
sub
and
mov
stc
lahf
movsl
sbb
cmpb
ret
xchg
jle
xlat
addb
rorb
testb
xlat
pop
mov
mov
dec
in
ret
cwtl
in
and
mov
mov
sub
fdivrs
shl
xchg
dec
jge
add
pop
mov
arpl
lahf
cmpsl
das
add
loopne
xchg
inc
adc
cmc
leave
cwtl
movsl
push
sbb
out
inc
add
mov
shll
aam
sub
jno
mov
jecxz
mov
inc
pusha
dec
dec
add
add
lahf
xchg
cmp
loop
loopne
or
outsl
and
rolb
test
pop
add
mov
mov
mov
mov
sbb
addb
and
lock
sbb
xor
pusha
cltd
dec
in
aad
jns
dec
xlat
outsl
fnstenv
lret
inc
sbb
dec
push
test
movl
inc
push
cmp
aas
adc
xchg
arpl
mov
push
lcall
or
sbbb
fs
xlat
add
xorb
popf
lods
pop
rcrb
shll
xchg
cwtl
cmp
in
fisubl
pusha
push
push
push
fstl
fsubs
aad
xchg
xor
push
push
test
and
fnstcw
inc
jne
xchg
mov
imul
test
jecxz
xchg
shl
adc
jo
mov
cmpl
lret
dec
or
jmp
pop
aas
mov
lahf
xchg
fs
ret
sti
out
sahf
pusha
inc
jbe
push
lret
xlat
inc
inc
jbe
mov
push
scas
xor
push
out
and
xchg
xchg
mov
inc
addb
shll
cmp
dec
push
mov
and
in
pop
out
pop
fdivl
daa
in
jecxz
jbe
stc
sub
jle
lahf
dec
push
xlat
outsb
mov
dec
dec
imul
sub
dec
push
pop
mov
pusha
and
imul
insb
gs
std
sbb
cmp
repnz
push
je
xorb
cwtl
mov
sub
ficomps
sahf
push
fwait
inc
ret
and
out
in
jne
pushaw
mov
pop
xchg
pop
cld
mov
fwait
sub
adc
jnp
cmp
push
shrb
or
xchg
imul
vpshlb
inc
push
pushf
mov
lahf
int3
sub
push
lahf
xchg
xor
mov
adc
inc
xchg
or
mov
mov
sbb
mov
sbb
fs
repz
pop
pusha
adc
jecxz
or
inc
push
gs
je
adcb
ja
clc
xchg
xchg
pop
sahf
mov
mov
test
sahf
adc
addr16
mov
mov
in
jns
sbb
les
sbbl
mov
js
jo
xlat
xor
dec
popf
andb
das
jne
inc
dec
mov
xor
test
cmp
aas
loopne
dec
mov
cmp
mov
sbbl
pop
shrb
sub
dec
popf
sti
push
pop
stos
lret
cwtl
insb
xlat
lea
push
xchg
stos
xchg
xlat
das
filds
xlat
sub
pop
out
pop
xor
call
aam
les
and
lahf
les
adcb
flds
in
jb
lds
mov
orb
mulb
into
cmc
pop
add
mov
push
faddl
pop
rcrb
fcmovnbe
dec
jg
jge
repz
sub
lods
mov
xlat
fcoml
pop
insl
xchg
lds
andl
psubq
fisubl
jnp
popa
or
cmc
jnp
or
mov
adc
push
mov
or
and
add
cld
sbbb
pusha
add
ret
leave
or
xchg
aad
add
adc
sub
loop
sbb
xlat
es
aas
loope
xchg
add
stc
inc
xchg
iret
cmp
push
bound
inc
and
cmp
mov
jae
rorl
repz
inc
pushf
aaa
pushf
xlat
jne
mov
fnsave
jne
out
inc
fistps
testb
fcomps
jne
xorl
mov
sub
sbb
jmp
push
mov
pop
int3
test
push
fidivrl
aad
jb
xchg
shl
rclb
pop
sbb
fs
nop
test
int
fdivr
aaa
cld
ret
push
lret
xchg
sbb
test
dec
int
jl
ja
xlat
inc
push
pop
dec
cmp
pusha
mov
push
jmp
mov
imul
fidivrs
subb
ljmp
jmp
fsts
sbb
mov
in
mov
inc
mov
pusha
call
dec
xor
repz
xchg
and
insb
mov
sub
pop
mov
sub
fsubrs
cld
xchg
xchg
sbb
push
add
and
fdivrs
repnz
pop
dec
adc
das
xchg
xchg
int3
pop
adc
ret
jbe
jg
sahf
cmpsl
les
mov
inc
test
sub
out
xchg
cmpl
jne
lods
test
lods
dec
sub
loop
pusha
or
jle
test
cmpsb
push
data16
and
jnp
add
dec
fcompl
imul
jl
jo
cwtl
inc
sahf
fwait
cli
movq
pushf
xor
lret
in
add
inc
loopne
mov
push
add
inc
gs
fbstp
push
ds
out
dec
pop
loop
push
mov
shll
ss
pop
lea
mov
dec
xor
push
outsb
repz
dec
cli
subb
inc
mov
pusha
xlat
cmp
adc
cmp
cli
aaa
int
add
xor
ret
out
cmc
scas
movl
and
inc
xorb
hlt
fwait
and
lods
ljmp
xlat
lods
lret
mov
iret
and
lock
idivl
jnp
mov
or
dec
paddusb
test
xlat
adc
sbb
je
xchg
jae
push
xlat
dec
inc
adc
xchg
dec
jnp
dec
xchg
sbb
pop
ror
sti
fnstcw
xlat
jbe
std
lock
loope
mov
in
inc
dec
inc
xor
xorl
filds
dec
adc
pop
xchg
testb
aam
xchg
cltd
sbb
mov
xchg
dec
out
pop
fcoms
or
jb
cmp
shll
xor
bound
test
subl
adc
and
xor
and
sti
fldt
dec
adc
add
cmp
inc
repnz
sbb
sbb
mov
mov
xor
sbb
movsl
or
loop
lret
jnp
pop
cmpsl
pop
in
xlat
loope
jle
loopne
leave
inc
andb
fcmovnbe
pop
cs
lods
rolb
lahf
xchg
mov
out
ds
inc
add
sub
push
mov
xchg
pop
sub
adc
addb
ret
repz
push
pop
cmc
sub
push
arpl
and
sbb
mov
lods
lods
dec
les
pop
stc
cwtl
add
add
bound
mov
inc
cmp
add
aas
pusha
sbbl
mov
push
shlb
incb
fldcw
call
push
mov
aas
cmpsl
add
pusha
inc
mov
mov
pusha
and
out
ds
adcb
jge,pt
or
lock
mov
out
jae
scas
xlat
cld
int3
sbb
push
inc
in
in
mov
test
cli
jmp
fmulp
mov
sub
lock
insb
sbbb
idivl
sbb
or
xchg
stos
cld
enter
test
push
inc
sahf
mov
lea
mov
out
pop
movq
in
bound
imul
faddl
popa
inc
jmp
mov
xchg
sub
clc
and
mov
fsubs
loopne
cmp
into
cmp
pop
jo
mov
test
sbb
add
movsl
ljmp
out
jmp
dec
sub
mov
sahf
scas
pushf
fxch
cmp
in
mov
cmpsb
adcl
mov
loop
mov
mov
mov
xlat
stos
movsb
xchg
fisubs
mov
and
repnz
and
in
xchg
pop
dec
scas
lcall
sbbb
xlat
in
adc
mov
cmp
leave
fnsave
push
push
xchg
sbb
icebp
test
jnp
cmp
ljmp
scas
and
leave
sti
pop
add
fucom
and
pusha
orl
lods
aaa
out
fbstp
jle
xor
scas
jg
clc
or
add
fst
bound
mov
je
xchg
pop
aaa
xor
iret
sarb
pop
and
mov
sbb
out
push
bound
push
sbb
lret
and
dec
jmp
jae
fnstcw
jnp
pop
fisubs
enter
test
adcb
lret
mov
push
loope,pt
gs
and
mov
testl
cmpsl
pop
pop
and
adc
aam
jp
lret
test
and
pop
jle
mov
mov
xchg
mov
test
sbb
jl
or
dec
lock
enter
jge
adc
sub
loop
rcrb
bound
ret
inc
rcl
pusha
aas
ja
adc
out
pop
and
shl
pop
or
shlb
jno
dec
push
mov
jmp
iret
xor
and
jae
sbb
dec
enter
xlat
lahf
imul
cmp
pop
outsb
xlat
add
in
das
sbb
rcl
xor
jae
cwtl
cmpsb
inc
mov
sbb
or
lahf
mov
or
and
add
mov
popf
sbb
sub
rol
jmp
popf
fs
ss
lds
loopne
mov
pop
dec
xlat
rorl
out
movsl
pusha
and
xor
rep
out
inc
sti
mov
inc
cmp
pop
mov
jae
imul
and
test
rcrb
jnp
adc
flds
pop
scas
inc
sbb
mov
andb
inc
out
mul
or
adc
xchg
push
inc
fs
add
ja
and
arpl
out
push
push
fs
movsb
sbbb
push
push
jno
sbb
mov
pop
ss
loop
dec
and
fcomps
push
dec
addl
sbb
mov
loope
and
pop
add
es
bound
push
incl
in
bound
call
test
repz
lea
pop
or
pusha
add
cmc
clc
dec
fsub
jg
dec
pop
bound
jg
daa
xor
and
popf
inc
dec
pusha
shrb
lods
out
xor
and
iret
outsb
movsb
mov
imul
scas
xor
lods
push
xor
cmp
adc
pop
rolb
int3
cli
inc
cs
mov
loopne
pusha
sub
adc
pop
fwait
mov
sbb
pop
movsb
cld
pop
in
pop
and
pop
icebp
loopne
ret
inc
sbbb
idiv
dec
jnp
dec
data16
pusha
pop
jl
outsb
push
nop
inc
fcoms
jo
aaa
jne
scas
inc
int
fsubs
cmp
adc
out
dec
fsubr
testb
fmuls
in
sbb
sbb
loope
dec
in
test
pop
bnd
pop
scas
rolb
lret
push
shl
into
into
jo
xorl
pop
mov
or
xor
lock
pop
sbbl
push
push
pop
push
xlat
cmp
and
push
ljmp
shll
add
or
ficompl
sarb
push
movsl
xchg
xchg
out
andb
loop
pop
mov
adc
addb
or
leave
out
and
jecxz
dec
push
mov
in
jl
mov
sub
add
xchg
inc
add
lahf
jg
arpl
pusha
es
lea
aam
mov
xchg
cmpb
call
xlat
scas
mov
adc
sbb
fcmove
mov
jb
ret
in
pop
hlt
jnp
out
test
rcll
bnd
les
fldcw
sub
push
imulb
jg
sub
lsl
and
cmp
popa
dec
push
pop
cs
rcrb
nop
lods
pusha
mov
ss
shrb
xchg
ss
js
subb
mov
lret
std
fdivr
clc
mov
andb
test
jle
mov
iret
mov
idivl
push
mov
cwtl
pusha
mov
add
xlat
fbld
pop
in
shrb
push
cmp
in
pop
aam
push
cwtl
push
std
shl
mov
pusha
jnp
mov
dec
sub
das
fcoms
inc
push
sbb
mov
adc
and
add
push
mov
insl
jb
push
inc
pusha
push
mov
xlat
test
ds
mov
inc
sti
jae
pop
mov
xlat
dec
in
dec
cmp
pop
adc
cmp
adc
xchg
shrb
inc
imul
push
add
ret
lea
lock
inc
push
je
pusha
icebp
xchg
mov
aad
cmpsl
cli
push
adc
xor
push
in
or
xlat
pop
dec
or
and
sti
or
or
inc
mov
in
jns
inc
dec
jbe
addb
mov
xlat
popl
rcl
sbb
loope
orb
push
mov
lock
movsl
cmc
in
push
addb
add
jecxz
jno
xchg
or
cmc
pop
dec
mov
mov
xlat
scas
cmpsb
je
test
cltd
out
xor
sbb
cli
adc
pop
cwtl
insl
push
scas
inc
scas
cmp
aas
es
xlat
scas
inc
inc
push
pop
loope
xchg
lock
test
mov
je
out
clc
xor
call
fistpll
inc
push
xchg
pop
sub
mov
stc
sbb
xlat
aas
adc
jo
shrb
jns
adc
mov
lret
xchg
je
inc
adc
adc
rcl
inc
jb
insl
bound
cmpb
mov
nop
jbe
inc
jecxz
scas
je
int
rolb
push
jmp
mov
or
pop
in
push
sub
ret
pop
lock
jp
cmpsl
popf
xor
mov
out
cmp
ret
cmp
mov
sub
push
sbb
xor
or
loopne
or
aas
add
dec
adc
jno
rclb
cltd
ljmp
lahf
pop
dec
cmp
dec
xlat
in
stos
hlt
daa
add
adc
sahf
mov
mov
into
scas
sub
sahf
xor
fmul
sub
out
pop
sbb
or
aam
sahf
sbb
loopne
push
add
fildl
loopne
cld
movsl
lds
popf
cmc
pop
popa
dec
mov
gs
data16
shl
test
das
mov
nop
xor
push
jmp
in
jns
add
fstp
gs
xorb
jg
rorb
xchg
cmp
pop
push
jno
or
or
sti
cmp
dec
fiadds
cmc
xchg
jge
jle
push
mov
cmp
xlat
push
jo
mov
into
cmp
js
movsl
and
jno
stc
or
cmp
push
out
add
imul
imul
je
cmp
aad
lods
dec
push
and
and
or
pop
clc
out
enter
pop
mov
xlat
in
dec
pusha
fs
add
test
ret
es
outsb
stos
subb
inc
mov
mov
iret
pusha
jle
lods
jns
insl
mov
xor
sbb
dec
hlt
or
ljmp
or
xlat
sti
imul
mov
pop
jns
xor
rorb
adc
jl
sub
popf
into
js
pop
add
xor
mov
xchg
jne
sbb
in
cmpb
cmpsb
sahf
popa
rcl
repz
jge
mov
xchg
cli
loopne
out
jg
jo
adc
fcoms
loope
pop
mov
lret
iret
xlat
fistps
inc
fiadds
ficomps
scas
push
out
fwait
push
pusha
sbb
rol
sbbb
push
mov
dec
xchg
sbb
mov
jge
outsb
fsubrl
scas
and
fbstp
pusha
adc
xlat
leave
push
add
stos
jo
rcl
pop
ret
inc
push
out
in
andb
scas
add
sbb
pusha
aad
insb
mov
sub
adc
ja
mov
push
push
std
popf
loope
jbe
enter
pusha
movb
lahf
mov
dec
dec
inc
xor
test
shll
xchg
cli
test
xor
lock
bound
je
cmp
add
push
add
cmp
pusha
movsl
xchg
dec
scas
fisttpll
lock
mov
mov
push
mov
dec
stos
mov
mov
cmp
cmp
mov
mov
insl
mov
inc
pop
xlat
lret
jge
mov
pop
ja
ss
into
and
sub
test
mov
in
dec
and
in
dec
fadds
mov
push
gs
pop
lds
pop
inc
fdivrs
rclb
fcmovb
inc
orb
fldcw
lock
data16
cmpsb
gs
sub
inc
pop
jae
lahf
les
cmc
clc
pop
xlat
jns
sbb
in
pop
xchg
dec
in
shrb
mov
sbb
lea
and
xlat
jnp
aas
pop
xor
mov
cs
pushf
dec
adc
or
leave
movq
xlat
push
insl
aaa
orl
neg
mov
mov
insb
xor
inc
pop
dec
int
in
dec
mov
adc
ret
loopne
xlat
mulb
or
orb
add
scas
cmp
fs
adc
xlat
out
js
sbb
rclb
pop
pop
and
bound
mov
cmp
push
incb
ret
not
add
sahf
xchg
or
xchg
xor
pop
fmuls
add
xchg
or
cwtl
scas
bound
loopne
adc
pop
add
js
jecxz
pop
cmpsb
das
lods
loopne
push
sti
mov
inc
adc
aas
call
add
or
mov
bound
pushl
loopne
pop
cmp
jp
sbb
push
adc
xchg
out
mov
in
mov
xlat
xlat
cmp
fbld
xor
and
sbbb
scas
xlat
and
mov
stos
mov
add
mov
addb
jnp
and
mov
sti
xor
bound
mov
lock
sub
int3
cmp
mov
mov
popa
cmp
jmp
push
adc
adc
jns
in
adc
xor
cwtl
enter
pop
ret
popf
mov
dec
ret
push
fcoms
rorl
nop
adc
fsubrs
push
clc
testl
xlat
cmc
mov
or
push
xor
fsubrs
insb
push
adcb
lds
cmp
and
push
lods
test
testb
repnz
scas
pop
jno
ds
mov
inc
dec
sbbb
gs
lea
shll
pop
repnz
in
jns
pop
fimull
fsubrs
xlat
mov
ds
jno
and
hlt
fs
xlat
scas
rorl
jmp
or
mov
dec
push
adc
andl
jb
mov
mov
mov
push
xchg
jmp
addb
pushf
inc
lods
cld
cmp
iret
pushf
scas
mov
test
lret
sbb
mov
fmuls
inc
pop
jo
sahf
lahf
subb
adc
mov
sbb
xor
and
add
loope
mov
inc
mov
mov
subb
mov
orl
add
pusha
pop
lods
movsb
adc
lahf
lret
lea
xchg
pusha
sub
js
xorl
dec
insb
xchg
jbe
jne
xchg
psrlw
shl
pop
xlat
stos
dec
sarb
pusha
pop
in
scas
pop
mov
enter
pop
push
fcomps
mov
sub
adc
and
adc
cmp
out
andb
call
loope
push
sbbb
and
cmp
in
ja
inc
push
adc
jnp
fsubs
cmpsb
loop
in
or
jp
pusha
in
call
inc
and
loop
scas
mov
cli
inc
testb
cmc
hlt
imul
xlat
mov
xchg
pop
xorb
jns
xor
sbb
pop
xlat
aad
ss
insb
xor
arpl
mov
lods
jb
ljmp
popf
call
test
mov
pop
mov
xchg
sahf
cwtl
ljmp
aaa
ja
fiadds
ds
cwtl
insb
arpl
pop
mov
cwtl
in
or
sarb
shl
sbb
lret
and
mov
ja
jnp
gs
adc
cmp
ljmp
hlt
or
cmpsl
inc
jns
int
movsb
xor
dec
sub
mov
or
cmp
cltd
sahf
outsb
cs
sub
mov
add
mov
fcoms
sub
jo
stos
dec
andl
int3
xchg
aaa
dec
or
jo
addb
mov
xlat
test
insl
sti
cmp
mov
mov
addr16
enter
and
call
push
add
imul
pusha
jecxz
pop
lcall
andl
inc
fcomps
cmp
sbbb
fmuls
sbb
lcall
cmp
repz
sahf
int3
cmp
std
mov
into
addr16
pop
pushf
jp
loopne
js
sarl
dec
cld
sbb
jbe
adc
pop
or
inc
mov
icebp
pusha
push
psrlw
aad
lods
call
push
loopne
and
mov
push
jl
ja
faddl
stc
xor
je
push
mov
and
rcll
push
add
xchg
fcomps
aad
inc
frstor
fdivs
ljmp
inc
push
shll
xchg
pushf
sub
test
adc
ss
stos
les
jns
or
test
xor
bound
mov
outsb
xchg
js
pop
pusha
ljmp
fwait
aam
lret
pop
movsl
mov
jo
add
mov
dec
jbe
xchg
pop
mov
sbb
fsubl
fbld
push
test
lret
sbb
inc
and
js
movsb
xorb
xor
or
out
inc
xor
push
int3
test
mov
xlat
ds
xchg
lret
ja
jg
sub
mov
addl
inc
push
fimuls
inc
call
xlat
fwait
push
sbb
mov
jo
sbb
icebp
rcr
push
popa
xchg
pop
pop
mov
jg
movsl
mov
jmp
psubsb
orl
mov
jp
roll
mov
ss
jmp
cmp
adc
cmpsb
out
enter
pop
inc
clc
pop
pop
mov
pusha
add
inc
xor
sarb
pushf
xchg
hlt
jge
and
and
xchg
out
and
sbb
cld
ds
pop
mov
fsubs
inc
imul
subb
mov
xlat
push
and
gs
dec
fmul
or
mov
cmp
jns
or
dec
dec
xchg
xlat
rolb
xlat
bnd
aam
inc
cwtl
add
sub
cltd
js
jb
push
dec
in
ja
aaa
pop
lahf
jae
pop
cmpsb
mov
fcmovu
stc
shll
mov
stos
sub
subl
jbe
int3
shlb
cwtl
jo
mov
lea
xchg
mov
arpl
xchg
movsb
pop
push
and
adc
fists
mov
cmp
jne
aaa
ret
rcrb
sub
cli
xchg
hlt
adcl
dec
mov
out
sbb
mov
push
test
mov
mov
movsb
mov
adc
xchg
hlt
push
call
push
sub
xor
jnp
sub
clc
testb
in
js
lret
popa
pop
xlat
add
adc
loopne
jecxz
xor
out
push
jno
mov
or
cmpsb
sbb
push
shrb
loopne
stc
dec
sub
jne
fs
in
xor
or
mov
xlat
popf
mov
or
or
and
in
sbbb
aaa
aam
xlat
test
xchg
das
stc
andb
adc
fsts
arpl
notb
cltd
jl
push
mov
push
jecxz
sbb
repnz
pop
aaa
icebp
and
inc
and
mov
pop
pop
call
mov
inc
out
bound
pusha
push
insb
clc
dec
pop
adc
call
fxch
jp
fdivl
push
add
mov
lea
xor
loop
push
sbb
mov
mov
or
fisttpll
movsb
push
mov
icebp
call
scas
cmpsb
imul
test
ss
popf
call
and
xlat
rolb
and
test
mov
cmpsl
pop
push
mov
cmp
jle
test
idivl
mov
enter
rol
cmpsb
add
pop
dec
popf
inc
test
pop
cmp
ret
mul
hlt
es
xlat
push
mov
cmp
and
inc
jne
dec
jb
sbb
adcb
mov
icebp
test
inc
or
pusha
mov
mov
not
scas
pushf
lcall
jge
jbe
cmp
ret
notl
ss
sbb
cmc
lods
fidivs
jae
push
dec
pop
lock
stos
ret
insb
out
pop
xlat
gs
jge
xor
les
frstor
sub
jbe
jle
jae
sbb
ret
scas
movsl
fs
add
add
jmp
pop
add
push
mov
push
pop
lret
pusha
pop
xchg
xor
cld
sub
es
sbb
xor
adc
inc
out
xlat
dec
dec
sbb
loope
or
pusha
mov
mov
mov
pop
je
cmc
mov
mov
push
cwtl
jo
les
jg
push
aas
jge
and
movsb
and
clc
notl
mov
call
out
insl
pop
rolb
test
sbb
repz
loope
fwait
xorb
push
pop
inc
jg
xchg
int
xchg
ffreep
fwait
nop
aam
lret
std
add
into
cmp
lcall
shlb
jo
fistpll
ja
rcr
mov
leave
and
mov
sbb
das
push
xchg
pusha
repz
jo
adc
xchg
jmp
xlat
lock
in
push
cwtl
jno
cmpb
xor
jo
cmc
mov
push
cmp
cs
inc
fsubl
mov
rcrb
sub
jecxz
mov
imul
xchg
ds
mov
notl
mov
xchg
push
int
mov
inc
mov
push
pop
push
shll
imul
popf
sub
pusha
loopne
into
bound
int
or
sahf
cmp
repz
aaa
pusha
stos
inc
add
push
cmp
and
xchg
push
hlt
pop
sub
pop
ret
cli
rclb
add
das
push
in
outsb
inc
mov
xchg
lock
fbld
jno
pop
dec
xlat
adc
andl
std
dec
pusha
sub
stos
iret
jae
aad
pop
rcl
add
adc
pusha
pop
adc
adc
fists
into
pop
test
inc
pop
sub
sarl
in
pop
subb
lcall
fsubr
and
stc
ljmp
hlt
aaa
pop
aad
mov
icebp
movsb
add
lahf
stos
xor
shlb
push
lea
mov
fdivs
enter
pusha
xlat
lea
iret
jae
addr16
or
dec
pop
hlt
stc
push
fwait
aas
and
cmp
xlat
dec
mov
push
push
in
stc
or
or
add
jmp
ret
test
or
imul
mov
push
cmpb
aaa
add
fwait
mov
mov
mov
pop
sub
shr
out
stc
imul
jge
test
xchg
sbb
es
ss
pop
xchg
pop
out
jg
xor
out
inc
in
mov
lea
outsb
pop
push
or
xor
outsl
cwtl
test
out
xlat
pop
aad
xchg
sub
add
pop
iret
jmp
iret
inc
dec
out
mov
lret
shll
cltd
mov
sahf
dec
das
xor
pop
inc
hlt
cmp
pop
and
es
out
lret
sub
je
xchg
lret
sbb
clc
pop
sbb
loopne
jecxz
mov
xlat
cltd
into
mov
sbb
pushf
add
aam
stc
or
dec
pusha
pushl
jnp
cmpsb
rorb
loope
inc
cmp
orb
das
add
push
fdivrs
insl
repnz
mov
shl
jge
mov
push
mov
sbb
pop
mov
mov
cwtl
xor
inc
xchg
fsts
into
fsubrp
lcall
stos
and
mov
inc
cmpsl
stos
jae
mov
in
jnp
shll
mov
mov
pop
test
fistps
dec
in
xlat
out
cs
adc
aas
outsb
mov
dec
sbb
je
lea
xchg
das
sub
je
add
movsb
mov
mov
insl
int
cs
dec
xlat
into
fwait
jecxz
jne
aad
out
push
jle
xor
test
shll
ficoms
cli
xchg
adc
mov
scas
adc
mov
push
sti
lret
dec
gs
pop
xor
inc
xlat
out
inc
dec
sbb
xor
push
inc
test
dec
sbb
dec
push
jp
je
mov
mov
scas
sbb
imul
loope
pusha
mov
cmpsb
xlat
sahf
pop
jne
dec
mov
daa
mov
adc
mov
push
not
and
inc
adc
pop
fucomip
js
inc
xor
movb
out
pop
pop
iret
sbb
loope
add
jbe
fdivs
push
enter
sub
leave
sbb
popf
jecxz
add
je
dec
ficoml
andb
stos
sbb
pop
mov
jae
and
and
push
lahf
sbb
int
xchg
in
ljmp
mov
pop
test
gs
pop
hlt
dec
test
test
aam
scas
push
add
jl
mov
andb
or
iret
lds
mov
add
mov
pop
lds
jae
daa
sub
adc
ror
or
sub
addr16
inc
add
loopne
mov
jle
mov
xor
addr16
sub
cmpsl
jno
sub
cmp
jnp
gs
out
orb
xchg
mov
mov
sub
pusha
or
fdiv
cwtl
ja
aam
xchg
mov
lahf
adc
pusha
mov
mov
nop
leave
push
inc
or
addl
sbb
fcoms
imul
orl
pop
xlat
pop
sub
inc
aaa
inc
mov
jmp
lods
jnp
movhps
rcll
push
push
sub
pusha
sarb
push
push
cwtl
jo
enter
mov
pop
mov
stos
loopne
push
pop
leave
cmc
cltd
mov
pop
fdivrl
ret
inc
dec
mov
popfw
movl
pop
jg
pusha
sbb
mov
es
add
aam
jnp
jp
pop
xor
std
sbb
in
ja
test
in
adc
nop
into
sbbb
or
or
movl
aas
pop
sahf
ret
add
pop
shlb
fsts
push
les
xlat
pop
inc
cli
or
insb
pop
mov
dec
mulb
jae
scas
ficoml
xchg
xlat
add
xchg
xor
cmp
repz
lods
pop
stc
xlat
and
sbb
mov
loope
lret
out
add
mov
and
jae
nop
lahf
insl
lods
fisttps
int
std
xor
inc
xor
inc
pusha
inc
addr16
mov
xlat
cmp
pop
cmp
clc
mov
sub
mov
int3
mov
cmp
dec
push
addb
add
in
xlat
lret
push
in
mov
mov
in
sub
sbb
xlat
or
stc
shrb
stos
inc
xchg
addb
adc
cli
ds
dec
loop
push
inc
shlb
imul
ss
imul
nopl
cwtl
xor
mov
xchg
xor
mov
insl
mov
mov
jmp
cld
nop
cmc
rcl
and
fstl
sub
xlat
clc
inc
paddusb
cmp
sub
jnp
add
or
jmp
fcoms
xor
lahf
orb
out
or
ja
or
pop
push
add
inc
add
pop
xlat
leave
mov
daa
pushf
insl
inc
repz
addl
adc
cmove
add
rclb
or
enter
cltd
cmpb
dec
mov
mov
js
cmc
xchg
icebp
xlat
loope
leave
shrl
push
mov
jg
test
ss
sbb
add
mov
xor
insb
mov
mov
adc
mov
push
aaa
in
dec
dec
in
lcall
pop
popa
xlat
push
jnp
int3
int3
pop
shrb
mov
jbe
dec
ficoms
in
out
pop
jmp
xor
aam
ret
lret
mov
mov
and
mov
sbb
clc
daa
add
insb
addl
xor
add
cmpsb
fs
ds
dec
push
sbb
stos
push
scas
adc
mov
mov
sbb
dec
xchg
fstl
push
outsb
rcl
dec
inc
flds
sbb
push
and
mov
sbb
inc
inc
and
das
mov
mul
cmp
inc
mov
xchg
js
stos
pop
in
loop
xchg
test
and
jbe
mov
fstps
test
rorl
add
cld
loope
add
push
jp
aas
fildll
add
inc
or
out
andb
in
ficomps
fidivs
sbb
enter
gs
imul
and
push
ret
nop
mov
cmpsl
lock
jp
mov
out
pop
xor
fbld
mov
insl
das
nop
or
push
mov
aad
sub
cmpb
add
xchg
cmpsb
loopne
pushf
mov
jbe
sti
jne
jp
mov
fdiv
arpl
sbb
fcmovb
lds
jle
mov
add
cwtl
addb
mov
sub
mov
sbb
inc
mov
imul
jecxz
pushf
inc
xchg
lret
add
movsl
ss
ss
pop
fisttps
mov
in
aas
cmp
rorb
addr16
push
mov
cmc
pmulhw
fmul
sub
leave
jno
push
imul
outsl
xchg
sbb
fisubl
or
dec
rolb
repz
mov
outsl
in
flds
movsl
aad
jecxz
out
lahf
sti
aam
cmpb
add
rorb
pusha
out
das
fmuls
lods
add
xchg
rcl
pusha
lret
or
inc
lock
push
add
leave
and
mov
push
dec
push
mov
icebp
fcomip
mov
iret
out
pop
imul
shll
adc
mov
push
mov
xlat
pop
dec
inc
iret
and
pop
sbb
lods
dec
adc
xor
sbb
sub
pop
je
push
cmc
cmc
jnp
repnz
int3
add
aas
sbb
xchg
lock
fists
imul
cld
inc
sahf
and
mov
sahf
sub
pop
and
pop
imul
iret
mov
sahf
pop
pop
cmpsb
movsb
aas
dec
mov
lods
enter
pop
and
sub
mov
ljmp
mov
mov
jns
jle,pt
stos
pop
jae
or
pushf
roll
mov
or
and
js
arpl
xlat
mov
in
lock
sbb
cmpsl
sub
nop
pushf
test
stos
jnp
aad
push
xor
pop
inc
and
mov
insb
in
or
xchg
mov
dec
mov
inc
fmull
xorb
pusha
pop
mov
in
sbb
into
and
adc
sub
sbb
pop
xchg
add
adc
lret
mov
repnz
movsb
arpl
xchg
lcall
das
clc
aad
pop
or
in
insb
cwtl
jbe
xor
xchg
mov
leave
data16
mov
andb
mov
popf
sub
into
push
pop
cmp
test
out
test
ret
mov
cmpsl
mov
push
push
sbb
jae
loop
addb
xor
sbb
and
inc
push
jecxz
in
loopne
mov
out
into
jmp
cmp
repz
lret
lahf
push
test
ret
jl
xlat
cltd
pop
push
xchg
push
roll
push
inc
fdivs
ljmp
out
hlt
mov
fisttpl
and
in
out
stos
sarb
adc
jb
or
pop
inc
popw
test
int3
cmp
xchg
pushaw
pop
or
movb
jne
xor
outsb
dec
out
mov
das
loope
inc
cltd
mov
mov
add
ret
jmp
movsb
jl
in
mov
jb
jno
mov
xchg
push
sub
pusha
sub
cmpsb
jo
push
fmul
adc
mov
jecxz
xor
in
push
fidivs
inc
test
fsubs
es
cmpb
movsl
mov
enter
xchg
pusha
icebp
jp
test
subb
ja
sub
push
push
and
cld
mov
loope
pusha
dec
mov
mov
ficoms
fistpl
lock
mov
sahf
cmp
jb
xchg
and
inc
add
mov
lods
or
addr16
data16
mov
add
pop
or
leave
insl
xor
subb
xchg
and
ds
mov
movsb
push
shl
les
pusha
mov
pop
xchg
nop
loopne
test
testb
ja
and
adc
lret
inc
inc
rolb
inc
push
imul
jbe
xlat
xor
sbb
rcl
cmp
outsl
jb
adc
and
xchg
dec
adc
jae
movntps
inc
loopne
push
sub
aas
xchg
pop
cld
xlat
xchg
jne
jne
cmpsb
cmpb
lods
out
adc
movsl
rcl
rcr
out
add
cli
je
cmp
shr
stos
pop
xlat
fcmovne
or
test
ffree
mov
add
sbbb
loope
pop
sub
push
pop
sbb
and
mov
inc
xlat
mov
test
icebp
pop
test
sahf
push
push
adc
enter
adc
fsts
data16
push
ja
aad
and
fidivrl
cmp
jnp
sbb
subb
leave
int3
and
pusha
add
popa
outsl
inc
fadds
xor
insb
imul
jmp
dec
mov
inc
push
mov
pop
jno
out
test
rcl
ja
adc
in
mov
jmp
inc
xor
or
push
mov
and
subb
pop
das
xlat
adc
jmp
sub
hlt
push
sbb
mov
enter
jbe
sbbb
hlt
cmp
mov
imul
jne
lea
xlat
inc
rclb
in
test
aad
lods
out
xor
cmpsl
adc
iret
mov
dec
push
enter
mov
scas
jp
fdivrs
mov
mov
fs
test
insb
xchg
mov
sti
movsb
and
inc
call
arpl
sub
cmp
mov
sub
push
push
scas
or
jp
mov
repz
into
push
xor
mov
shll
mov
or
mov
nop
sbb
pop
mov
xlat
stos
pusha
sub
and
mov
inc
addl
je
xor
or
iret
mov
ljmp
xchg
xor
mov
mov
jp
outsl
pusha
dec
cmp
adc
test
lock
dec
mov
in
dec
mov
xchg
sub
xlat
popa
jae
lret
test
lcall
mov
ja
sbb
pusha
out
pop
jmp
in
push
or
lret
pop
cmpsb
jmp
cmpsb
lods
adc
jbe
in
cwtl
testl
movsb
lret
pop
and
cltd
pusha
jno
pop
mov
pusha
in
push
lahf
iret
fdivl
push
mov
add
jne
movsl
popa
pop
loope
movsl
clc
cltd
leave
xchg
xlat
sbb
enter
insb
add
fidivl
sbb
inc
stos
xchg
inc
cld
cmpsb
sti
jecxz
xlat
dec
or
push
adc
imul
and
lea
hlt
stos
adc
pop
hlt
jo
in
pop
dec
mov
adc
xchg
cbtw
test
mov
cmc
jb
das
and
inc
in
mov
out
cmp
rolb
inc
pop
jns
call
cld
inc
jae
and
mov
js
out
xorl
pop
jge
mov
mov
mov
push
divl
cltd
add
mov
pop
lock
lock
xlat
push
icebp
into
pop
pop
outsl
or
clc
cli
ss
pushf
shlb
sarl
mov
and
es
jge
int3
jl
add
cmpsl
lock
enter
and
gs
clc
dec
fstpl
dec
test
das
dec
pusha
rep
cli
ja
push
test
cld
stos
cmp
xchg
jg
ret
shll
das
xor
in
ret
adc
cmpsb
fbstp
mov
imulb
adc
popa
mov
test
cmpsb
cmp
gs
pusha
mov
jmp
rcr
fs
xchg
jno
mov
ret
mov
sub
pop
mov
or
jnp
sbb
sbb
ja
insb
dec
js
ds
xor
int3
lcall
decl
clc
cmp
movsl
xlat
pushf
cmc
movsb
mov
push
push
pop
ja
ret
xorb
lret
sub
pop
push
test
sub
sarl
stos
and
es
and
sub
dec
add
xchg
popf
push
aad
push
mov
aam
out
jge
lods
inc
ljmp
cmpsb
test
pop
inc
pusha
push
inc
adc
popa
push
cmp
mov
xchg
rclb
aas
popf
add
insl
xlat
stos
jl
sbb
repnz
jb
ss
rclb
pop
leave
jle
xchg
dec
iret
in
subb
jns
loope
sub
stos
xlat
pop
stc
push
loop
and
addl
fcomps
push
loopne
xchg
int3
sbb
push
push
xor
iret
gs
pop
lods
mov
jl
inc
inc
sbb
jns
stos
lods
sbb
out
pop
pop
sub
inc
inc
xlat
push
int3
or
repnz
jns
adc
push
out
jne
pusha
mov
push
and
sub
sti
fstps
cmpsl
pop
pusha
ss
test
xlat
imul
dec
std
mov
push
jnp
test
sbb
popf
jg
clc
push
or
fs
cmp
jl
pop
sbb
pusha
rcll
inc
add
jns,pn
push
xchg
xor
in
xlat
in
cmp
push
and
js
xorb
cmpsb
jno
jp
jns
xor
ja
mov
add
rcl
mov
testb
sti
push
dec
shlb
and
mov
mov
pop
lahf
mov
mov
aaa
fmul
ret
fisubrl
mov
and
add
pop
mov
inc
cmp
jb
lret
mov
dec
push
push
in
aad
sbb
fldenv
xor
add
data16
outsb
sti
popf
cmp
rolb
push
in
lret
pop
popa
out
fisubl
pusha
cltd
add
cmc
jo
dec
fdivs
fistps
gs
jle
shrb
mov
loop
out
in
jo
xor
dec
pusha
addb
mov
lret
adc
fdivrs
and
test
fwait
add
rolb
mov
gs
push
test
orb
scas
mov
pop
pop
arpl
mov
in
mov
mov
add
mov
gs
inc
nop
lods
inc
xlat
jno
adc
jne
pop
push
imul
push
pusha
lds
test
mov
xlat
adcl
fnstcw
je
pop
in
and
pop
xor
fcoms
sub
mov
and
xor
shr
or
inc
bound
popa
fs
dec
popl
add
xchg
xchg
cltd
cwtl
test
xor
push
push
in
imul
jnp
notl
imul
shl
jmp
sub
push
rcl
or
sub
jmp
fmuls
push
add
fadds
ss
jmp
add
jb
xlat
lcall
sbb
aas
loope
mov
cmp
sbb
jl
aaa
and
imulb
popf
jmp
fcoms
xor
arpl
xlat
mov
xchg
rclb
jecxz
adc
insb
sahf
fmul
push
add
pusha
fcompl
inc
loopne
pop
lods
pop
and
jecxz
or
cmp
dec
fstpl
xor
xchg
int3
pop
in
and
jl
dec
cmp
shlb
sbb
das
fs
fadds
in
ja
add
int
iret
pop
sub
out
sbb
ror
lcall
cmp
mov
aaa
imul
sub
into
and
and
jo
push
test
mov
push
cwtl
mov
mov
mov
add
mov
and
fcompl
test
shll
in
jmp
fnstcw
movntq
adc
push
idivl
or
mov
pop
xchg
adc
jge
clc
xlat
popl
sarl
jmp
adcl
push
insb
xlat
aam
jb
enter
pusha
push
jo
adc
or
fsubp
jne
hlt
sbbb
jle
mov
jmp
aam
add
xchg
push
push
cmpsl
or
inc
xor
fdivrs
je
xlat
mov
add
pushf
push
rcl
je
xor
sub
inc
fdivrs
icebp
mov
mov
push
adc
inc
xlat
adc
lret
dec
lea
and
pushf
loope
ror
inc
jb
in
sahf
dec
lds
pop
mov
call
xchg
or
mov
fcomps
push
cmp
xor
inc
addr16
add
lods
xchg
push
xchg
xor
add
xlat
loop
jb
popf
mov
jns
lock
or
das
stos
roll
xlat
push
cmp
push
addb
dec
popa
push
sub
roll
xor
ret
movl
jns
cmp
aam
pusha
in
or
push
mov
aam
leave
lds
pop
test
dec
cmp
ja
mov
adc
loop
mov
nop
push
rol
push
adc
fcompl
cld
lahf
or
enter
xlat
cli
jmp
out
mov
int3
jg
xchg
mov
test
pushf
aaa
cmp
mov
nop
jecxz
les
int
ret
in
out
add
pusha
adc
mov
popa
mov
jnp
adc
loop
outsl
lahf
test
enter
sbb
ret
xchg
loopne
xchg
inc
mov
dec
fs
jo
pop
mov
push
pushl
test
mov
js
loop
mov
jb
mov
shr
jmp
push
adc
dec
fs
fdivrp
aas
and
into
push
arpl
jmp
in
jl
add
aaa
adc
pushaw
test
shrb
jnp
insb
or
rolb
loope
jne
add
shl
mov
call
mov
mov
pop
iret
xchg
or
std
out
scas
leave
aam
psubusb
sub
nop
adc
mov
cli
mov
adc
fiadds
pop
mov
stos
ret
mov
mov
push
sbb
cmpsb
icebp
cmp
lods
mov
add
push
jge
push
out
ss
iret
mov
adc
mov
mov
jae
ds
push
addl
mov
push
cmpb
pop
push
xchg
xchg
jbe
fildl
mov
loopne
test
data16
sbb
push
push
roll
mov
inc
pusha
adc
ret
sbb
andb
cltd
fmuls
iret
out
mov
fmul
xchg
lods
xlat
or
pushf
rcll
sub
shrl
loop
ret
xorb
rcll
pusha
test
pop
sahf
sbb
mov
jne
mov
adc
mov
jecxz
ja
das
mov
sub
inc
add
mov
mov
add
iret
mov
push
jo
inc
push
inc
jbe
adcb
jns
xlat
jne
xor
out
outsb
xchg
pop
cltd
loope
insl
sarb
vcvttsd2si
jmp
stos
addl
enter
inc
mov
xlat
add
mov
fs
sbb
push
push
stc
jecxz
add
cmc
leave
and
mov
jnp
arpl
loopne
imul
or
push
movsl
sti
and
andb
addb
leave
bound
mov
pop
inc
inc
inc
je
in
push
data16
xlat
lcall
xor
mov
scas
inc
lods
xchg
cld
out
lahf
lahf
nop
loop
outsl
fisttpl
loop
or
in
test
jnp
loopne
es
sub
fbstp
xlat
pushf
pop
lods
iret
fstps
lods
xchg
pop
push
jno
pop
addb
jo
leave
cld
mov
into
cmp
lret
adc
mov
in
das
xlat
pop
rcrb
jecxz
incb
outsb
jo
push
pushf
jl
jns
cli
rcrb
icebp
mov
xlat
in
hlt
cmc
adc
movsl
addb
fst
dec
shrl
js
adc
mov
aam
sbb
ja
cmpsl
aad
sub
add
imul
xor
xlat
push
sbb
dec
enter
cltd
bound
fwait
stos
dec
fcmovbe
fwait
nop
das
xor
test
cmp
add
ss
cld
mov
stc
loope
mov
jg
imul
mov
lret
addr16
or
ja
mov
cli
sub
ss
adc
dec
iret
repz
mov
hlt
leave
pop
stos
rorb
mov
lcall
jge
loop
push
mov
pusha
out
xor
out
leave
cmp
cmp
fwait
lcall
push
inc
lods
dec
and
fmuls
ret
cmpb
add
shrl
int3
sahf
pop
decl
rcr
pusha
loop
dec
loope
int
or
xchg
fistpl
push
adc
lahf
inc
imul
mov
jae,pn
inc
or
notb
sbb
mov
sub
push
outsb
fsubp
mov
in
inc
test
sti
mov
add
fnstsw
in
fimuls
jl
je
push
fsubrl
fcomps
xchg
add
dec
mov
dec
push
mov
xor
mov
aad
test
add
loopne
inc
mov
out
sbb
inc
adcb
inc
dec
jl
pop
xlat
adc
mov
pusha
xchg
lods
rclb
fcoml
mov
orb
push
leave
mov
imul
adcb
outsb
fdivp
and
cmpb
push
pop
cmpl
xor
std
ret
pop
xchg
into
push
arpl
jae
aaa
pop
pushaw
mov
pop
or
xlat
in
xor
add
inc
ja
add
inc
xlat
mov
jno
shll
jnp
cmp
jbe
sub
adc
and
or
mov
mov
add
enter
movsl
pusha
iret
sahf
jge
pop
rcl
lods
xlat
repz
ljmp
xor
xchg
dec
cmp
cltd
js
jl
add
push
clc
das
stos
stc
shlb
fildll
in
mov
and
sbb
shrb
data16
fdivrs
neg
addb
mov
dec
mov
frstpm(287
xor
pusha
mov
fcmovne
xlat
sbb
dec
stos
loop
pop
fsubrl
xchg
lahf
stos
movsb
sub
ret
jge
and
dec
adc
scas
mov
iret
int
push
sub
xchg
les
shufps
push
inc
stos
sub
dec
cmp
ret
or
xlat
xchg
aas
mov
frstor
mov
xchg
xchg
flds
in
roll
fsub
cmpsl
aam
hlt
sub
cmp
jecxz
daa
iret
push
jns
ja
xlat
xlat
jle
xor
popa
add
es
xlat
cmp
daa
fimull
or
cwtl
bound
ficomps
mov
outsl
aas
mov
sub
cli
aaa
xor
jnp
inc
pushf
jge
jns
pop
xor
lds
daa
pusha
pop
jno
add
outsl
arpl
push
inc
cmpb
dec
cmpsl
stos
mov
cmp
fadds
jno
push
pop
pop
stc
inc
lea
outsl
xlat
loopne
outsb
lahf
hlt
jecxz
xlat
pop
std
pop
pop
and
mov
inc
adc
clc
dec
rorl
sbb
push
rcrb
adc
cli
dec
xchg
or
push
mov
xchg
cmc
sub
mov
xor
lcall
pop
in
shrl
scas
dec
imul
xlat
fistps
sbb
pusha
jmp
push
pop
jmp
fistpll
sbb
shll
cwtl
mov
fs
xlat
add
and
scas
sub
jmp
or
push
lcall
mov
es
push
test
sbb
pop
gs
xchg
mov
adc
pop
jb,pt
cmpb
mov
mov
pop
xor
jp
aam
push
lcall
jge
mov
enter
dec
sbb
mov
inc
cmp
mov
stc
mov
stos
pop
add
repz
aad
stos
mov
in
xchg
xor
daa
cli
push
jmp
cwtl
mov
add
lahf
mov
jbe
adc
pusha
dec
mov
dec
gs
fsts
xorb
push
mov
push
push
sbb
lock
pop
fmuls
xchg
sbb
inc
clc
inc
push
mov
dec
pusha
mov
mov
inc
jmp
stc
js
fmuls
pusha
adc
mov
xlat
fwait
jb
rorb
xchg
xor
adc
lock
rolb
or
mov
fwait
mov
jns
ja
dec
jge
push
xor
sub
mull
sub
sbbb
jno
pop
jmp
out
push
stos
dec
add
pop
pusha
pop
ljmp
cmp
xchg
mov
lea
subb
stos
mov
fsubs
inc
jne
push
repnz
push
inc
shr
lret
push
or
adc
pusha
adc
jl
xor
or
sbb
jmp
negb
les
xlat
les
addl
data16
mov
xor
out
repz
pop
mov
push
cmp
dec
pop
movsb
cmp
jle
mov
pop
es
lret
jb
and
cmp
out
loop
nop
pop
fwait
sub
mov
jae
into
xchg
or
xchg
dec
inc
xorb
sbb
cmpb
daa
outsb
shl
pop
adc
arpl
inc
xlat
adc
and
sbb
sti
inc
pop
clc
loop
imul
jns
jmp
xchg
ret
pusha
shrl
and
push
imul
xor
mov
cmp
lods
subb
enter
push
outsl
jle
movsl
shll
inc
out
iret
adc
sub
cmp
pop
sbb
lea
pop
dec
add
pop
dec
xor
adc
mov
test
jnp
dec
cmp
or
xlat
or
inc
imul
stc
cmp
pop
jo
xlat
adc
sbb
js
mov
pop
sub
sbb
sub
notl
outsl
loope
pop
and
cmp
adc
ja
cmp
push
ret
xlat
dec
sbb
int
sbb
lock
pop
sbb
pop
loopne
das
repnz
push
jno
iret
dec
mov
lods
xchg
ds
push
arpl
lret
cmp
add
or
fxch
out
lea
call
dec
mov
xlat
stc
cmp
mov
fldcw
inc
dec
lods
movsb
cltd
daa
rolb
jae
js
xchg
push
enter
loope
ja
jp
pop
outsl
lret
push
popa
push
daa
push
cmp
xor
mov
rcl
hlt
data16
jne
mov
push
repnz
jl
push
inc
les
mov
add
scas
sbb
hlt
leave
std
cmp
pop
add
imul
loop
adc
xor
sti
adc
mov
pop
mov
jg
fadd
sub
call
mov
inc
cmpb
add
jno
pop
dec
sub
jns
pop
push
adcb
scas
add
jae
mov
sahf
pusha
loopne
int3
xchg
lods
cltd
mov
rol
shlb
mov
cmp
and
push
mov
lcall
rclb
cmp
js
cld
sbb
inc
xlat
inc
fbld
ljmp
cmp
push
sub
enter
int
cmp
xlat
pop
pop
pextrw
add
bswap
jp
das
aaa
shlb
ja
rclb
lods
inc
cmp
lret
dec
or
adc
iret
fiaddl
jo
jns
mov
test
cmp
mov
push
inc
and
xchg
mov
pop
pusha
insb
dec
xor
lret
mov
sub
cmp
decb
das
fsubs
pop
dec
in
lret
inc
cmpb
mov
in
xor
pusha
mov
adc
mov
dec
xchg
push
sub
sti
adc
cmp
push
insl
stc
je
xlat
repz
jno
jl
mov
lock
movb
cwtl
rolb
pop
and
lods
test
cld
xlat
popa
pop
and
inc
dec
jbe
xchg
lods
addr16
ret
outsb
rcrb
scas
in
call
cmc
add
fwait
push
sbb
pop
xor
push
scas
and
push
mov
adc
cmp
mov
lods
dec
repnz
push
push
push
ja
in
adc
js
int3
mov
ja
orb
push
cmp
cmp
imul
test
in
push
into
pop
sub
bound
push
mov
pop
leave
pcmpeqw
add
stos
testl
mov
insl
fwait
dec
dec
add
mov
popf
jne
pusha
sub
cmpsb
imul
mov
gs
sub
pop
dec
mov
dec
sub
adc
nop
fsubr
sahf
rclb
je
es
jge
sbb
rorb
or
mov
pop
mov
sbb
fsubrs
push
dec
fwait
cmpsb
dec
adcb
cmpsl
int3
jmp
sub
sub
push
add
ds
sbb
cld
mov
xchg
rclb
jnp
add
mov
hlt
out
icebp
cs
mov
call
pusha
mov
or
daa
adc
movups
das
fcmovne
push
add
enter
test
fimuls
adc
jns
mov
jmp
rcrl
dec
xchg
dec
lods
bound
cmp
fadds
push
inc
mov
adcb
lock
mov
aam
pop
bound
mov
sarl
jbe
stos
cld
movsl
loop
pop
xor
in
jno
push
lret
iret
out
sub
xor
push
daa
int
xchg
mov
rclb
ss
out
jae
shr
testb
fidivs
cmp
out
and
push
popa
mov
mov
cmp
stos
insl
xlat
int
and
sub
sub
adc
pop
cmpsl
dec
out
lds
xchg
cwtl
movsb
lock
test
pop
inc
aam
sub
adc
pop
cltd
add
out
add
xorl
push
jo
adc
pop
mov
outsb
loopne
or
fstpt
mov
fisubrs
jp
xlat
hlt
pop
gs
cli
sbb
pusha
mov
stos
lock
mov
es
jo
ret
adc
and
xor
jmp
push
sub
ds
xchg
loopne
notb
mov
pusha
and
shll
pop
jp
scas
xor
pop
fmul
push
cmp
adc
or
add
popfw
dec
adc
in
es
xchg
or
pop
pop
and
mov
xlat
xlat
lds
bound
cmp
mov
lcall
rcl
jb
or
jg
or
ss
jmp
jecxz
adc
sbb
aad
mov
cmp
push
mov
push
nop
and
rcrl
imulb
mov
orb
adc
scas
adc
lods
inc
mov
add
pop
aas
pop
push
and
sub
push
mov
popf
xlat
push
push
adc
ss
push
add
lahf
mov
mov
cltd
cld
jp
gs
xchg
mulb
jno
clc
test
push
insb
aam
ja
sbb
stos
test
pusha
test
aaa
mov
int
sub
nop
push
lods
mov
sbb
inc
inc
sbb
fsub
jns
in
jl
ret
cmpb
inc
xchg
pop
enter
in
mov
imul
fmul
repnz
pop
inc
adc
jg
jnp
pop
mov
sbb
pop
sarl
das
pusha
dec
jnp
ds
jo
inc
fsubs
loop
dec
ficoms
inc
push
fldcw
in
hlt
mov
lahf
cmp
dec
cmp
adc
pop
movsb
data16
xlat
mov
pop
std
in
jo
or
pusha
sub
dec
xor
jle
fdivs
push
cmpb
ja
dec
jbe
stos
and
test
and
bnd
popf
dec
cltd
push
push
sbbb
fldl
mov
push
push
bound
lret
lar
pushf
sub
js
cmp
sub
xor
lea
cltd
pop
imul
pop
in
or
pop
xchg
ljmp
fcomp
pushf
test
or
jns
es
push
mov
in
gs
xchg
xchg
adc
cmp
xchg
cwtl
mov
mov
cmp
sbb
pop
sub
jbe
ret
arpl
dec
xchg
rcll
sbb
lock
fwait
push
clc
push
rcl
jg
xor
pusha
shlb
xlat
sti
push
mov
mov
adcb
pop
add
ret
loope
and
fsub
dec
jg
inc
xchg
adc
adc
inc
mov
icebp
adc
rcrb
xorl
mov
mov
jmp
pop
adcb
cld
frstor
fildl
rol
popa
jnp
mov
decl
push
dec
lcall
push
jbe
jbe
sahf
cmpsb
cmp
xlat
scas
mov
dec
outsb
andb
test
add
push
loopne
jl
add
subb
sub
cmp
ljmp
and
data16
xlat
inc
and
xchg
sub
call
xor
into
std
inc
out
pop
push
fs
mov
xchg
fcoml
std
in
inc
cs
xchg
or
mov
pop
sbb
lea
jae
push
cmp
das
inc
mov
notl
dec
int
sub
or
imul
pop
js
mull
lods
out
jne
fdivs
shll
cmp
sbb
push
jns
out
cwtl
add
outsb
xlat
jbe
lods
pop
inc
loope
jg
add
inc
orb
sub
ret
fsubr
dec
xchg
or
popf
cmpb
add
mov
scas
std
cmp
cmpsb
pop
jle
xchg
and
and
jbe
mov
pusha
mov
inc
jmp
in
jbe
inc
push
mov
pusha
xor
js
lock
push
cmc
xchg
loopne
cmp
iret
sub
mov
xlat
inc
mov
cwtl
enter
inc
imul
in
xlat
lds
jb
mov
stos
stos
xlat
outsl
notl
mov
arpl
jnp
cmc
cmp
aam
pusha
scas
xorl
jbe
push
dec
aaa
jg,pt
cltd
data16
mov
les
push
mov
and
mov
jle
rcrl
mov
xlat
in
mov
aam
xor
jmp
mov
shlb
std
cs
je
ja
mov
dec
push
cmp
xor
fdivrs
sbb
push
movsb
adc
mov
adc
movsb
icebp
jnp
dec
add
or
test
xlat
cmp
rorb
xchg
sbb
push
adc
in
ja
outsl
push
mov
inc
push
das
mov
sbb
pop
lret
cmp
sbb
xlat
dec
fwait
ret
cmpsb
into
rcrl
push
rcll
cmc
sub
mov
in
movb
loop
out
sub
mov
fsubrs
les
push
mov
adc
movsl
movsb
xchg
ljmp
rcl
pop
push
lret
jecxz
stos
vsubsd
xchg
sbb
cs
loop
add
dec
and
pusha
imulb
xlat
ret
mov
dec
sti
and
lock
xchg
clc
xchg
in
push
clc
loope
lods
adcb
mov
insb
aaa
xor
mov
xor
xlat
or
dec
pop
xchg
xchg
jbe
jge
cltd
sahf
jb
mov
rcll
xchg
inc
mov
sbb
pop
cmp
test
push
movsl
jne
andb
lret
sub
outsl
xchg
shr
xlat
adc
xchg
push
push
jnp
cmpsl
jno,pn
fs
ret
test
int
in
mov
jnp
mov
repnz
pop
sub
dec
or
iret
pusha
sub
addb
insb
enter
adc
repnz
fisttpll
stc
jle
clc
and
shl
lcall
push
xchg
fisubrs
orb
pop
inc
xor
lahf
cmp
and
xchg
dec
dec
push
inc
inc
jle
xlat
shrb
xlat
jns
adc
cmpb
inc
stc
addr16
mov
leave
ret
das
and
and
imul
imul
adc
mov
xchg
and
push
call
aam
dec
jae
xor
rcll
mov
and
xchg
in
dec
shl
ljmp
and
pop
fistpll
out
subl
push
add
xor
adc
mov
outsb
lods
xlat
loopne
dec
iret
jnp
mov
in
mov
es
mov
movsl
pusha
inc
jnp
fidivrl
nop
dec
or
push
xor
adc
movb
push
pop
xlat
add
insl
add
stos
add
popa
xlat
mov
test
mov
leave
sbb
notb
repnz
loope
pop
fdivrl
loope
insl
and
xlat
cmpsl
push
adcb
pop
out
mov
pop
stos
pop
pop
mov
mov
cmp
dec
mov
scas
push
push
fnstsw
inc
ror
stos
loope
adc
into
or
and
adcb
sar
stc
adc
lock
dec
push
xorl
stos
cmp
push
ret
jnp
andb
fstpt
xor
sub
cwtl
sbb
cmpb
mov
pop
das
ret
aaa
js
pop
imul
xor
and
xlat
filds
es
and
xorb
fisubl
mov
pop
ja
push
jg
movsb
inc
pop
hlt
xchg
out
or
push
xlat
js
pop
inc
inc
jnp
mov
or
sbb
leave
clc
mov
jno
clc
jmp
inc
inc
sti
push
jo
fadds
sahf
dec
add
lods
bound
pop
movsb
fidivl
jmp
sub
aas
mov
lret
loopne
pop
sbb
pushf
cmp
cmp
dec
in
mov
test
mov
orb
xor
jb
rolb
insb
push
call
arpl
push
cmp
jp
sbb
test
outsl
cld
addb
sahf
sbb
inc
test
jmp
leave
lahf
cmp
pop
rcll
adc
pop
pusha
push
lods
movl
arpl
add
out
pop
mov
rcr
and
pop
sti
or
imul
es
lods
scas
pop
add
lahf
leave
mov
ror
xlat
stos
jne
cwtl
stc
cmp
cld
fwait
aam
dec
iret
insl
fists
dec
sub
cmpb
xchg
aad
pop
call
push
pop
sti
xlat
cmc
mov
test
inc
xor
repnz
add
sub
cmpb
cltd
cld
lock
nop
push
inc
outsl
add
adcl
divb
arpl
repnz
add
mov
in
lret
cmp
sub
fisubrs
lcall
cs
shrl
out
inc
dec
cltd
inc
shlb
push
andb
sbb
xchg
sbbb
fbstp
and
fsubl
test
push
mov
xchg
sbb
mov
shll
jb
dec
jp
and
inc
xor
pusha
ss
jnp
ja
push
je
fcmovu
mov
jo
dec
test
jp
roll
enter
lret
and
mov
fmull
shl
int3
push
inc
repz
cmpsl
xchg
xchg
mov
or
addr16
mov
cmpsb
dec
pop
fsubrs
cmp
and
dec
je
pop
push
andl
mov
inc
mov
lsl
jnp
push
xchg
dec
mov
xor
es
testb
jb
jbe
mov
pop
push
loopne
ret
mov
dec
cmp
xchg
xor
out
xlat
jne
cltd
jae
xor
jmp
pop
push
jl
fcmovu
das
sbb
adc
arpl
jl
mov
xorl
sbbb
xor
pusha
mov
lcall
pop
cmp
int3
cmp
fldl
mov
es
clc
aad
sub
mov
sub
incb
adc
stos
pop
sahf
jl
sbb
mov
mov
hlt
or
rol
pop
fmuls
shlb
push
dec
repnz
ljmp
test
stos
cmp
jle
sub
or
pop
and
fstpl
aas
aas
mov
mov
daa
push
decb
ljmp
movsl
adc
arpl
lock
jo
movsl
mov
daa
or
fcomps
lret
cmp
xchg
mov
mov
mov
inc
out
xlat
cmp
iret
sar
lcall
add
and
xchg
ret
loop
sbb
xchg
jne
jo
jl
cmp
movsb
mov
pusha
dec
mov
dec
aas
xchg
mov
adc
inc
lret
hlt
xorb
dec
pop
xor
loopne
jmp
insl
add
add
gs
pop
add
jge
jne
fadds
in
mov
cmpsl
mov
sub
xor
push
sar
cmp
xchg
sti
and
mov
pop
es
lret
xlat
adc
incl
mov
or
shll
dec
push
ljmp
scas
adc
xchg
pop
sub
loop
decl
rolb
cltd
ret
sub
cmp
push
inc
repnz
sub
popf
dec
subl
xchg
sub
ja
pop
daa
xchg
and
aaa
arpl
mov
repz
xor
in
pusha
addr16
aad
mov
mov
dec
mov
arpl
pop
xor
inc
sahf
cmpsl
lds
xor
jnp
imul
xlat
call
in
xchg
inc
sub
mov
cmp
or
lcall
xchg
or
dec
xor
add
adc
mov
pop
ljmp
cmpb
repnz
shlb
xchg
rcrl
xlat
ss
pop
ja
pop
les
and
cwtl
jmp
mov
pop
stc
sub
xlat
test
cmc
cmp
loope
or
push
inc
cmc
enter
repnz
andl
mov
int
fistps
push
cli
xlat
icebp
je
mov
mov
xchg
dec
fdivrs
or
xor
orb
ret
pop
enter
push
mov
push
fs
cmpl
mov
loopne
and
pop
fsubr
fstp
mov
sbb
mov
outsb
push
fsub
and
inc
push
jb
dec
jnp
cmp
in
cmp
push
lret
adc
movsb
pusha
scas
out
test
outsl
dec
in
lods
les
mov
add
enter
jno
not
or
mov
pusha
popf
mov
push
jo
and
out
incb
mov
fisubs
ss
jne
sub
hlt
xor
xor
ss
and
dec
orl
imull
add
pusha
jmp
enter
push
stos
fs
out
jp
ss
mov
add
xor
pop
jo
fsubl
sahf
sarb
std
in
loopne
addl
sti
dec
in
sbbb
add
mov
xlat
out
fs
inc
repz
insb
jge
jg
test
or
push
sub
mov
and
xor
xchg
subb
scas
jae
jbe
and
jl
lcall
mov
sub
sub
mov
lcall
popa
int3
xor
mov
lock
cmpsb
nop
xchg
and
mov
mul
jecxz
sbb
adc
jmp
imul
mov
dec
xchg
fwait
sub
mov
xlat
xor
test
xchg
fnstenv
sbb
xlat
sub
xor
test
sbbb
iret
inc
roll
test
xlat
or
rclb
xchg
pushf
pusha
xchg
outsb
xor
push
imul
pop
int3
das
adc
mov
je
dec
fbstp
xor
fwait
xchg
sub
jg
fcomps
mov
mov
xchg
pusha
lret
cmpsl
xchg
pop
ffree
bound
mov
or
mov
lods
pusha
lret
inc
fbld
scas
xlat
and
pop
stos
or
in
sahf
hlt
add
xchg
jbe
add
sbb
push
xchg
cwtl
xchg
pop
pop
xchg
cltd
jge
ss
jge
inc
repnz
scas
xor
faddl
outsl
xlat
adc
sub
es
cmp
pusha
adc
pushf
cmpsb
mov
jge
sub
outsb
jmp
add
push
or
push
fucomip
pop
jnp
cmp
mov
or
cwtl
bound
addb
outsl
push
dec
xlat
inc
out
jmp
ret
sbb
pusha
insb
aam
fs
adc
xchg
aam
mov
mov
push
add
cmpsb
sbb
in
popf
addr16
push
leave
nop
cltd
loopne
out
out
pop
and
dec
ljmp
cmp
cli
sub
pop
or
and
push
jmp
jb
jmp
pop
fdiv
mov
jle
fxch
pop
mov
push
jno
add
pop
add
data16
xchg
in
add
rcrb
pop
sbb
add
es
inc
fs
pop
and
or
push
andb
scas
inc
push
push
inc
daa
daa
mov
sahf
add
aam
xchg
push
iret
addr16
popf
dec
outsl
xlat
mov
push
out
mov
jg
sub
mov
out
aaa
add
repz
jno
es
sbb
xlat
inc
leave
insb
cmp
test
aad
xchg
addr16
sbb
stos
jmp
fidivrl
ret
call
popa
cmc
pop
inc
xlat
pop
xchg
cmp
or
jg
sbb
sbb
icebp
add
adc
inc
inc
jae
test
jge
inc
pop
jecxz
sbb
js
fiaddl
rolb
rolb
xlat
jmp
cmpsb
jb
sbb
mov
fildl
sub
lahf
mov
mov
push
lods
mov
add
push
out
and
mov
xchg
test
dec
jl
jne
out
les
hlt
sub
andb
jno
pop
xorb
mov
test
add
pop
add
inc
adc
testb
outsb
pop
pop
xlat
out
es
cltd
insb
popa
inc
hlt
or
test
pusha
shlb
lock
call
push
je
into
pushf
das
adcb
pusha
rcr
mov
call
jge
sub
mov
pop
rolb
mov
xor
pop
clc
flds
pusha
mov
mov
fisubrs
pop
pop
and
xor
jg
scas
push
pop
andb
sbb
mov
aad
xor
pop
iret
mov
loop
jg
or
push
xor
xchg
pusha
pop
cld
in
test
jg
sbb
jecxz
dec
mov
ljmp
and
inc
sahf
fsts
mov
push
call
fistpl
in
mov
repnz
push
mov
cmpb
push
cmp
jg
rorb
xchg
in
call
sub
jnp
cmpxchg8b
ret
repz
subb
dec
mov
mov
mov
dec
jmp
mov
dec
in
jae
daa
je
subb
pop
cltd
or
pop
pop
xlat
bound
xor
and
xchg
xchg
xlat
daa
xor
inc
sub
dec
push
sbb
cmp
adc
outsl
popa
cmpsl
aad
push
sub
imul
pusha
sbb
rcrl
or
jne
mov
pop
daa
jne
xlat
lods
idivb
sbb
cld
inc
aam
aaa
xchg
mov
es
inc
cmpsl
xchg
lods
add
mov
jmp
imul
sbb
xchg
add
lods
jns
mov
xor
daa
fst
popa
fsubrs
xor
lds
dec
mov
movsl
xchg
sbb
xlat
pop
into
ret
pop
outsl
imul
int
push
test
xlat
jae
iret
loopne
ja
push
subb
scas
xchg
mov
pusha
jmp
pop
rcrb
jmp
xlat
mov
dec
arpl
andl
div
gs
mov
cltd
fcom
mov
push
fcoml
ljmp
mov
xchg
dec
sti
je
pusha
push
sahf
pusha
call
mov
cwtl
pop
int3
and
xor
jae
loop
push
mov
mull
lods
orl
jnp
insb
lea
or
cmpl
cmp
in
pusha
movsb
les
test
stos
dec
lods
jae
ds
xchg
adcb
test
fs
inc
jb
cmc
js
shlb
mov
mov
add
inc
mov
in
jl
xlat
lahf
inc
sbb
mov
pusha
xor
mov
aam
mov
je
pop
or
lds
jae
pushf
push
push
jb
push
insl
gs
sub
jno
pop
xor
in
push
mov
fsubr
iret
xchg
std
addr16
lcall
cwtl
outsl
push
mov
test
mov
adc
jp
lods
inc
mov
clc
test
mov
les
xchg
cmp
sub
shl
jge
aad
orb
sbb
enter
xchg
cmp
test
shll
rcrb
push
add
dec
popf
jmp
out
sbb
cs
sbb
rcl
fcoml
xchg
pusha
repz
cmpsl
lcall
dec
das
fisttpl
push
out
es
insb
loopne
dec
or
pop
pop
mov
hlt
bound
js
mov
std
das
ret
push
iret
bound
xchg
loope
adc
adc
sub
into
sub
push
push
popl
dec
cmp
sarl
pop
outsb
imul
aaa
push
les
adc
aas
sti
shr
imul
cmp
lahf
mov
push
lods
push
movsl
daa
sti
data16
inc
xchg
mov
or
lcall
jl
into
mov
pop
push
adc
ja
pop
dec
fsubs
je
hlt
insl
inc
lea
and
mov
and
lock
pop
faddl
adc
mov
in
je
pusha
push
push
arpl
pop
push
testl
lahf
xchg
into
xchg
lret
lods
xchg
pop
pushf
push
sub
jg
push
push
repz
add
and
sarb
scas
mov
ret
mov
shl
push
jne
pop
xor
ret
insb
adc
shll
idivb
jp
sbb
push
mov
mov
mov
adc
push
hlt
push
pop
pop
cmp
pop
mov
gs
inc
ss
scas
aaa
xchg
jg
cmovge
dec
jno
jbe
mov
jbe
pop
xchg
jp
push
xor
xchg
test
xchg
xchg
adc
xorb
xchg
daa
bound
jecxz
sub
int
iret
js
xlat
imul
add
mov
test
fstps
push
inc
jp
adc
sub
mov
shll
or
in
pop
ret
xchg
xchg
sbb
jmp
pop
push
bound
pop
sub
xor
pop
push
mov
mov
cmp
sarb
lret
inc
xchg
ret
mov
mov
add
pop
aad
xchg
jne
ret
pop
jo
push
js
lahf
dec
push
leave
nop
xchg
pop
ja
in
arpl
jle
orl
jecxz
sub
adc
pop
inc
push
jae
mov
std
loopne
cmpsl
push
push
mov
and
mov
or
jp
dec
ds
rorl
rorb
out
outsb
movsl
incb
xchg
sti
ret
adc
loope
rol
jmp
fs
ss
inc
mov
adc
lcall
es
leave
dec
lahf
jge
push
test
mov
sub
push
dec
mov
lret
cmp
std
insl
add
pop
test
sbb
loopne
pop
dec
or
jg
stos
ret
jno
nop
push
mov
cltd
js
out
ror
test
ficomps
fisttps
jp
rcr
mov
dec
cmp
or
and
mov
fadd
pop
rolb
sar
lret
insb
aad
adc
jg
cmp
mov
inc
lret
inc
mov
dec
add
dec
sbb
pop
pusha
sbb
xor
movsl
sbb
jg
jbe
and
negb
dec
or
es
mov
enter
push
sub
push
push
js
outsb
push
pushf
adc
cmp
adc
pop
movb
mov
cmc
pop
shl
mov
jbe
andb
fidivrl
jns
sbb
enter
je
or
ret
mov
fs
dec
ret
and
fs
jp
outsb
es
mov
push
push
js
popf
lcall
bound
mov
dec
in
mov
ljmp
enter
sbbl
cmp
push
jbe
mov
mov
adc
inc
pop
mov
dec
fsubrs
sbb
pop
xlat
mov
test
dec
dec
xlat
xchg
pop
push
push
mov
push
jmp
cmc
xchg
sti
filds
pushf
jl
and
repz
outsb
jmp
jb
enter
add
jl
psubusw
out
das
mov
inc
insb
bound
add
bound
jl
int
sbb
fisubs
jmp
in
js
xor
cwtl
rorl
scas
push
cmp
xchg
adc
cwtl
ficoms
mov
cltd
pusha
xchg
inc
sbbl
pushf
add
inc
lock
mov
fidivrs
test
jg
cli
sahf
jnp
dec
leave
or
cli
pop
cmpsl
js
js
loopne
xchg
insl
addb
push
cmp
sar
and
inc
clc
arpl
pushf
andb
test
lock
aam
adcb
jl
sbb
jnp
shlb
sbb
insb
jle
mov
test
push
mov
xchg
inc
mov
mov
test
jp
mov
and
mov
daa
mov
sbb
push
push
add
lea
lcall
push
test
mov
adc
sub
push
inc
mov
jo
xchg
xchg
ljmp
les
jae
leave
mov
sub
adc
scas
iret
and
sarl
ja
jl
mov
mov
lahf
out
outsb
inc
mov
push
xchg
inc
testl
dec
mov
mov
pop
out
shlb
loope
or
int3
mov
xor
shrb
sbb
scas
out
iret
dec
popf
mov
mov
xor
push
jg
hlt
leave
jle
xchg
push
jmp
add
mov
call
jl
mov
and
push
push
push
or
jge
jmp
adc
aam
bound
sub
push
sti
fmul
bts
jecxz
and
sahf
jl
sub
jns
sub
insl
aaa
mov
push
outsb
outsb
repnz
mov
cmp
adc
hlt
adc
adc
cmp
pop
mov
ja
addr16
imul
jmp
push
mov
cmpsl
push
push
add
lcall
lahf
mov
inc
jg
aad
push
pushf
cmp
push
pushf
andl
aam
mov
mov
and
bswap
popa
ja
push
lahf
cmpsl
pop
sahf
push
data16
jmp
mov
jp
es
add
sbb
sub
mov
mov
sbb
pop
mov
aam
fs
mov
inc
pop
ds
call
adc
repnz
add
fnstcw
cli
ret
cmp
sahf
shrl
popa
int
mov
jb
cmp
data16
pop
or
sub
push
mov
outsb
push
leave
xor
push
arpl
lcall
stos
and
jns
lcall
push
sub
mov
sahf
or
push
sbb
or
push
subb
push
mov
jge
or
pop
hlt
frstor
sbb
fxch
or
lds
call
nop
mov
mov
bound
push
add
mov
decl
pusha
stos
fs
daa
mov
sbb
pop
cmp
addr16
mov
mov
jbe
bound
cli
add
xchg
addr16
dec
lret
fs
jl
mov
xchg
movsl
xchg
mov
je
movsl
ds
mov
push
pusha
outsb
xor
push
jne
stos
popa
jns
das
out
or
dec
mov
enter
outsb
pop
loopne
neg
ja
fisubl
inc
push
mov
add
mov
pop
pushf
in
dec
mov
pop
mov
mulps
xor
mov
dec
les
arpl
sbb
outsb
mov
sarb
lock
mov
cmp
pop
repz
jle
mov
insl
sahf
rol
lahf
dec
or
mov
or
dec
lahf
or
fimull
lcall
pop
or
testl
pop
add
sub
jle
dec
or
aas
dec
shr
inc
into
adc
dec
int3
sub
rol
aam
dec
sub
sbbl
adc
add
mov
mov
inc
aas
loopne
stos
in
mov
mov
inc
int3
or
sahf
sbb
ja
lock
mov
sbb
mov
mov
out
out
xor
push
sub
inc
mov
or
mov
leave
ja
imul
jb
sub
inc
jb
out
inc
loope
popf
fnstsw
push
sbb
addb
dec
mov
int3
mov
jae
inc
xchg
xor
fstps
cmc
push
jp
inc
ret
sub
out
jp
adc
sub
add
insb
lahf
push
xchg
jb
add
xchg
or
in
call
aam
lods
into
adc
imul
pop
mov
push
pushf
andl
aaa
fadds
int3
push
xchg
sub
jnp
jne
and
jmp
sti
inc
pop
adc
adc
jp
push
adc
inc
jno
pop
cwtl
hlt
aam
mov
popa
dec
pop
adc
or
sti
pop
sbb
jmp
or
addl
push
ds
dec
sysexit
ljmp
adc
jp
pop
sarb
or
lahf
in
fs
inc
incb
mov
cmc
lods
cwtl
orb
in
mov
jp
gs
sbb
les
ret
pop
ja
lret
in
popa
mov
mov
jp
push
ffree
mov
ret
pop
je
push
mov
aam
out
dec
js
fidivrs
push
inc
xchg
arpl
jl
push
pop
dec
pop
insb
leave
iret
pop
rcrl
icebp
scas
inc
loope
jge
test
sub
xchg
stc
xor
mov
test
test
enter
push
or
jmp
mov
insb
xchg
mov
popf
push
or
add
lcall
xor
or
repz
xor
mov
clc
in
daa
push
insl
dec
push
dec
mov
test
fisttpl
or
movsl
pop
xor
push
sub
pop
mov
cmp
mov
jge
sub
mov
stc
negl
jmp
pop
in
sub
dec
sbb
or
out
iret
add
movl
cli
sbbb
fstps
out
add
outsb
adc
aas
mov
shrl
fldcw
dec
aam
leave
fidivrs
rcrl
xor
mov
aad
xchg
fdivrp
mov
push
test
or
enter
push
push
btr
mov
sarl
je
dec
pop
push
push
dec
xchg
dec
xchg
movsb
ljmp
jle
ficoml
mov
out
mov
pop
mov
adc
je
notl
inc
push
rolb
pop
aad
lret
xlat
jp
decb
cmp
lods
js
mov
out
jo
cld
jg
ret
push
jg
adc
sub
call
sbbl
mov
inc
test
out
mov
mov
dec
addl
pop
mov
test
cld
lea
or
lds
lea
inc
lahf
imul
xor
aam
xor
es
cli
dec
ja
xor
xchg
jle
insb
sti
scas
nop
add
ljmp
daa
fadds
iret
inc
ficompl
jp
push
aad
sahf
inc
push
sbb
or
lret
mov
fwait
int3
dec
adc
xchg
dec
xlat
jbe
lds
icebp
sbb
or
stc
jno
cmpb
ret
jns
dec
push
push
mov
into
sbb
push
nop
xor
and
clc
aam
ss
pop
test
aaa
iret
add
int3
adc
cmp
shr
push
sbb
inc
xchg
add
jb
jne
out
pop
fcom
out
adcb
bound
sbb
mov
pop
adc
rcrl
in
outsl
xor
push
mov
aad
adc
push
mov
sbb
pusha
enter
movsb
inc
dec
lods
push
movsb
cmp
cld
push
sbbb
push
push
dec
imul
inc
mov
roll
or
push
pop
add
pop
or
lret
and
fcomps
adc
sti
outsl
sbb
jg
andl
push
cmp
dec
mov
push
lods
pop
call
push
in
roll
and
movsb
sub
bound
mov
dec
cwtl
push
and
cli
mov
mov
and
mov
outsl
andb
push
adc
mov
push
xchg
push
adc
out
mov
xchg
scas
std
mov
xchg
imul
cmp
or
repnz
cmpb
sti
lock
jp
push
jle
push
lods
addr16
rcrb
dec
rcrb
cmp
push
push
aam
dec
js
dec
dec
lods
addb
push
mov
cli
adc
adc
mov
test
lret
je
push
or
orb
stos
sub
repnz
xchg
xchg
sbb
and
mov
imul
xor
and
scas
push
stos
outsb
pushf
xchg
jae
pop
jno
add
fisubs
bound
popf
mov
or
mov
fwait
pop
cmp
push
test
jp
outsl
mov
imul
aas
xchg
jmp
call
addr16
test
inc
pusha
push
adc
push
jo
xchg
es
aas
mov
adc
xchg
sbb
pop
dec
mov
in
neg
mov
cs
sub
adc
je
fwait
xor
pop
mov
xor
cmpsl
mov
bound
arpl
push
dec
and
fsts
ret
filds
in
adc
int
in
sub
push
cld
orb
outsb
repnz
gs
repz
ret
fs
sub
in
int
sbb
popf
sub
dec
test
cmpsl
in
xor
and
xchg
ret
xchg
imul
mov
push
mov
mov
inc
lahf
pusha
xor
and
adc
add
sbbl
das
in
fistps
sub
fucomi
fistpl
mov
and
scas
pop
sub
jmp
fdivrs
jge
jne
out
shl
push
sbb
lcall
pop
or
out
add
das
dec
xchg
daa
mov
dec
nop
jns
js
sbb
jb
inc
adc
inc
add
add
add
inc
adc
add
int3
add
or
adcb
or
orb
push
inc
add
add
push
push
mov
add
and
or
inc
add
add
sub
adc
add
add
sbb
add
addb
add
add
add
std
add
add
adc
addb
rclb
add
add
add
adcb
and
add
test
inc
and
sub
add
inc
add
pop
inc
add
addb
add
test
shlb
ret
inc
and
add
andb
add
inc
push
loopne
orb
add
test
add
adc
adc
adcb
inc
pop
xchg
and
xchg
add
add
adc
and
add
add
adc
adcb
add
mov
and
add
and
add
adcb
or
inc
inc
mov
cwtl
or
inc
and
or
nop
xor
add
add
inc
les
add
add
add
and
orb
add
pusha
xchg
sub
add
inc
and
dec
add
inc
orb
add
add
inc
addb
inc
xor
add
addb
add
loopne
inc
addb
je
pop
or
add
add
andb
inc
inc
mov
add
addb
and
inc
add
inc
add
adc
addb
adcb
pop
add
mov
inc
inc
or
adc
add
push
add
add
add
add
or
add
add
rcll
inc
or
adc
sbb
add
dec
dec
and
add
adc
add
adc
add
add
pushf
or
xor
adc
orb
inc
add
add
add
add
sbb
test
add
mov
sub
and
add
inc
adc
and
and
adc
push
shlb
mov
add
add
sbb
inc
inc
push
add
push
mov
dec
adc
or
add
sbb
add
addl
inc
mov
adc
push
inc
mov
and
add
adc
add
add
es
add
and
add
add
and
and
add
nop
test
adc
add
add
test
mov
mov
push
jo
add
add
and
add
inc
adc
push
and
add
add
adc
and
or
mov
push
and
add
les
xchg
or
adc
adc
or
adc
add
adc
and
add
add
add
test
add
add
add
bound
add
sbb
mov
addb
or
or
or
add
push
add
add
or
add
cltd
adc
andb
xor
addl
add
add
stos
imul
mov
xor
rolb
add
add
add
and
inc
or
add
add
pusha
or
adc
add
add
or
xor
and
inc
add
adc
pusha
add
add
or
add
loope
cmp
add
add
add
add
or
and
add
and
xor
add
mov
add
or
adc
or
or
pop
andb
inc
adc
add
and
inc
inc
add
add
add
andb
push
mov
add
inc
add
addl
and
add
add
jb
add
and
cmp
cltd
movsb
add
adcb
subl
add
or
inc
push
inc
add
adc
adc
adc
add
inc
inc
lret
add
add
add
inc
add
inc
lea
adc
add
add
roll
add
xor
adc
or
rolb
add
dec
add
xor
add
add
or
or
adcl
push
rolb
addb
movsb
and
add
lock
inc
add
push
and
add
inc
add
or
and
out
add
mov
addb
add
orb
add
mov
mov
add
or
add
add
addb
inc
pop
push
push
add
add
addl
and
je
inc
add
pusha
add
cmp
add
add
adc
test
adc
pop
or
add
sub
inc
adc
adcb
sbb
add
adc
or
xchg
add
addb
test
adc
adc
add
mov
lret
add
pusha
add
add
add
add
add
or
fisubl
push
inc
andb
add
add
inc
add
inc
jl
sub
add
adc
jb
add
and
dec
adc
and
add
test
inc
add
adc
xor
push
adc
test
add
inc
sub
add
inc
add
or
add
inc
add
rorb
inc
inc
mov
and
call
add
dec
add
dec
add
inc
mov
or
add
gs
and
or
push
add
add
mov
add
push
and
add
or
inc
add
inc
hlt
or
add
add
and
add
add
adc
nop
mov
xchg
add
add
add
adc
orb
add
or
rolb
add
mov
add
or
add
add
adc
xor
or
inc
or
jo
dec
add
add
and
cs
or
or
add
add
add
les
add
and
and
inc
add
test
add
sbb
or
add
inc
add
add
rolb
nop
inc
mov
add
add
dec
inc
xor
add
add
sub
add
test
add
add
push
add
adc
rolb
pusha
push
push
and
dec
add
add
add
add
xor
rorb
add
adcl
add
and
lcall
add
add
sbbl
inc
add
cmpsb
add
add
sub
add
inc
orb
add
adc
xor
sbb
push
or
addb
inc
addb
mov
add
or
inc
or
inc
mov
and
add
add
mov
inc
adc
inc
add
or
lds
add
add
nop
test
add
or
add
roll
xor
dec
add
xor
or
push
add
add
xor
push
add
add
push
clc
add
inc
add
push
cwtl
mov
push
add
pop
orb
push
push
add
inc
and
inc
add
pusha
inc
add
sbb
int3
sub
mov
inc
add
adc
fildl
movsb
add
dec
add
add
adcb
add
addb
add
add
and
add
add
add
data16
add
test
addb
add
pop
add
add
adc
add
and
adc
add
mov
add
pop
test
push
adc
add
addl
add
add
add
adcb
inc
orb
add
and
inc
add
andb
and
mov
push
push
push
push
add
add
dec
add
add
add
andb
add
or
add
add
add
and
nop
addb
adc
dec
add
add
add
add
dec
add
mov
or
or
inc
add
add
and
inc
sub
pusha
add
add
or
add
add
add
mov
add
add
inc
add
inc
inc
push
enter
or
and
addb
adc
adc
add
adc
addb
sub
or
push
mov
sub
xchg
adc
add
rol
add
test
xor
dec
jl
inc
mov
add
sbb
les
add
add
adc
add
push
pop
or
add
dec
and
jno
mov
add
or
add
andb
test
mov
dec
add
add
add
shlb
add
add
mov
inc
adcb
or
sub
add
dec
add
and
and
or
dec
add
add
dec
or
adc
add
add
xor
and
xor
add
add
sbb
add
inc
and
add
or
push
push
add
xor
adc
add
add
inc
adc
push
inc
and
add
add
xor
insb
or
out
and
orb
inc
loopne
nop
add
orb
add
xchg
and
inc
adc
add
add
adc
outsb
insb
add
push
mov
add
cmp
push
mov
add
add
roll
adc
or
and
add
sbb
inc
add
lret
dec
adc
test
cmp
or
add
addb
cmpsb
popa
dec
inc
add
add
and
movsl
add
test
add
add
add
add
xchg
test
sbb
addb
xor
adc
add
add
or
addl
adc
add
adc
add
pop
add
add
dec
inc
addb
add
and
and
add
mov
addb
adc
inc
add
adc
sbb
add
adcl
add
mov
add
pop
dec
and
inc
push
adc
js
add
add
mov
add
bound
add
add
add
adc
push
adc
push
into
sub
loop
add
and
add
add
addb
adc
test
and
and
add
add
or
add
or
or
add
and
mov
add
inc
xor
add
add
push
add
add
or
add
sub
xchg
add
add
add
inc
and
inc
adc
inc
movsb
and
or
add
add
dec
add
xchg
gs
add
add
or
cmp
adc
and
and
add
addl
dec
inc
adc
add
dec
add
add
sub
add
loopne
inc
and
adc
movsb
rolb
dec
add
add
mov
add
add
adc
or
add
adcb
inc
mov
inc
add
dec
add
add
adc
inc
inc
add
and
mov
inc
add
pop
pop
add
adc
sub
add
add
inc
or
test
add
add
add
push
add
add
add
adc
add
inc
pusha
pop
sub
movsb
or
and
adc
dec
add
add
cltd
les
pop
adc
addb
xchg
dec
add
in
addb
and
dec
add
add
and
add
add
addb
or
adc
and
add
xor
add
pusha
add
or
add
add
rclb
inc
add
add
push
inc
sbb
and
add
xor
lock
add
addb
add
mov
add
add
add
and
add
and
add
mov
inc
add
add
dec
and
ljmp
andb
add
inc
inc
or
rclb
add
add
repz
push
inc
sub
sub
and
inc
les
add
or
and
add
jle
add
push
add
add
mov
add
inc
mov
inc
adc
adc
or
and
add
nop
and
and
push
les
add
add
and
add
add
push
add
add
mov
push
adc
add
add
add
or
mov
adc
add
or
dec
and
add
xchg
adc
inc
add
and
add
andb
add
sub
add
add
and
push
add
adcl
add
pop
test
ror
add
add
add
mov
add
rolb
xchg
add
inc
add
jno
adc
adc
add
inc
inc
xchg
add
and
add
andb
add
or
inc
pop
inc
add
sbb
add
push
and
shll
add
add
inc
add
inc
dec
push
add
inc
mov
addl
push
add
inc
test
add
add
add
inc
add
add
add
push
xor
adc
and
and
add
in
sub
push
call
add
push
push
push
push
push
call
add
push
xor
mov
push
add
cmp
je
mov
sub
test
je
test
jne
test
je
mov
cmp
jne
mov
sub
push
push
push
call
add
mov
sub
push
push
push
call
add
call
mov
cmp
je
mov
and
cmp
je
mov
add
mov
test
je
mov
test
jne
cmp
je
or
mov
cmp
jne
mov
mov
add
test
je
mov
mov
sub
cmp
jne
cmp
je
mov
cmp
jne
mov
cmp
jne
xor
mov
mov
cmp
jne
cmp
jne
add
mov
mov
mov
mov
mov
cmp
je
xor
mov
mov
push
push
push
call
add
push
call
add
mov
mov
mov
mov
push
call
add
cmp
jne
sub
mov
mov
push
push
push
push
push
call
add
lea
push
call
sub
cmp
je
or
mov
mov
cmp
jne
push
push
call
add
call
push
push
push
call
add
push
call
add
cmp
je
push
push
push
push
push
call
add
call
push
push
push
push
push
call
add
cmp
jne
cmp
je
mov
mov
cmp
jne
push
push
call
add
cmp
jne
cmp
je
push
push
push
push
call
add
mov
cmp
jne
mov
push
push
push
call
add
mov
and
push
push
push
call
add
push
push
push
call
add
mov
push
push
push
push
push
call
add
push
push
push
push
push
call
add
mov
call
mov
or
cmp
jne
mov
sub
mov
mov
push
call
add
cmp
jne
mov
push
call
add
sub
cmp
jne
push
push
call
add
mov
test
jne
mov
sub
mov
mov
push
push
push
push
push
call
add
mov
push
call
add
mov
push
call
add
push
call
add
cmp
je
mov
mov
call
mov
xor
mov
cmp
je
sub
push
push
call
add
mov
mov
push
push
push
push
push
call
add
mov
cmp
jne
xor
mov
push
push
push
call
add
push
push
call
add
cmp
jne
xor
mov
mov
sub
cmp
jne
cmp
je
and
cmp
jne
push
call
add
sub
push
push
push
push
push
call
add
mov
lea
mov
mov
xor
cmp
jne
cmp
je
cmp
jne
mov
mov
xor
mov
cmp
je
add
mov
push
mov
push
cmp
jne
cmp
je
push
push
push
push
call
add
mov
call
push
call
add
mov
add
mov
mov
mov
mov
mov
mov
shr
cmp
jne
mov
mov
cmp
jne
mov
sub
cmp
je
push
push
push
call
add
push
push
push
call
xor
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
add
mov
mov
mov
mov
mov
pushl
push
pushl
call
call
addl
add
cmp
jne
cmp
je
mov
mov
cmp
je
add
mov
push
push
push
push
call
add
cmp
je
sub
mov
push
push
call
add
mov
push
push
push
call
add
cmp
jne
mov
mov
add
call
push
push
push
push
push
call
add
call
add
call
push
push
push
push
call
add
cmp
jne
mov
mov
mov
test
jne
push
push
push
push
call
add
mov
sub
push
call
add
test
jne
mov
push
call
add
cmp
jne
push
call
add
mov
call
cmp
jne
sub
cmp
je
mov
cmp
jne
mov
push
push
push
push
call
add
mov
push
push
push
call
add
cmp
jne
push
push
call
add
mov
mov
mov
sub
mov
mov
sub
mov
pop
cmp
jne
mov
xor
mov
cmp
je
mov
xor
mov
pop
add
mov
mov
cmp
je
cmp
jne
xor
push
push
call
add
mov
cmp
je
add
mov
push
push
push
push
push
call
add
mov
pop
sub
mov
cmp
je
mov
leave
ret
mov
xor
mov
mov
push
call
mov
add
call
push
push
push
push
push
call
add
push
push
push
push
call
add
push
push
push
push
push
call
add
mov
test
jne
xor
push
push
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
call
mov
sub
mov
cmp
je
mov
sub
mov
mov
mov
push
push
push
call
mov
push
push
push
push
call
mov
cmp
jne
xor
push
push
push
push
call
add
test
je
mov
add
push
push
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
call
mov
push
push
push
call
add
push
push
push
call
mov
xor
push
push
push
push
call
add
push
push
push
push
push
push
call
mov
call
push
push
push
push
push
call
mov
add
cmp
je
mov
mov
push
call
cmp
je
mov
sub
mov
add
mov
cmp
je
sub
mov
cmp
je
mov
add
call
pop
test
jne
push
push
push
push
call
add
pop
mov
pop
mov
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
call
add
push
cmp
je
add
mov
push
push
push
push
call
add
push
add
mov
push
push
push
push
push
call
add
add
call
movl
cmp
je
sub
mov
cmp
je
mov
sub
mov
push
push
push
push
push
call
add
mov
call
mov
cmp
je
mov
xor
mov
mov
mov
cmp
jne
or
cmp
jne
push
call
add
xor
mov
call
mov
cmp
je
mov
call
cmp
je
mov
sub
push
call
add
cmp
jne
sub
mov
cmp
jne
mov
test
je
mov
mov
mov
mov
sub
push
push
call
add
cmp
je
mov
push
call
add
xor
push
push
push
push
push
call
add
push
push
call
add
cmp
jne
push
push
push
push
call
add
mov
push
push
call
add
cmp
je
mov
or
call
push
push
push
call
add
mov
call
cmp
je
cmp
je
xor
mov
cmp
je
sub
mov
cmp
je
or
mov
mov
mov
mov
add
cmp
jne
mov
cmp
je
mov
add
mov
mov
mov
push
call
sub
mov
mov
mov
cmp
jne
sub
mov
cmp
je
mov
cmp
jne
add
mov
cmp
jne
add
mov
mov
or
je
xor
mov
cmp
je
cmp
je
mov
mov
add
cmp
jne
sub
mov
mov
cmp
jne
mov
cmp
je
sub
mov
mov
mov
mov
mov
addl
cmp
je
sub
mov
mov
cmp
je
cmp
je
add
mov
mov
cmp
je
mov
add
mov
mov
cmp
je
sub
cmp
jne
mov
mov
mov
mov
lea
test
jne
test
jne
cmp
je
cmp
je
and
mov
mov
mov
mov
mov
inc
sub
mov
mov
mov
sub
and
cmp
je
xor
cmp
je
cmp
je
add
cmp
jne
mov
mov
cmp
jne
sub
cmp
jne
and
mov
mov
mov
mov
mov
cmp
je
or
mov
mov
cmp
je
mov
cmp
je
mov
cmp
je
sub
mov
mov
cmp
je
xor
mov
cmp
je
mov
cmp
jne
cmp
jne
add
mov
mov
mov
mov
xor
push
push
call
add
push
push
push
push
call
add
push
push
call
add
mov
sub
mov
call
mov
mov
mov
mov
mov
add
mov
test
je
mov
mov
mov
cmp
jne
xor
mov
call
pop
add
mov
pop
mov
cmp
jne
mov
push
push
push
call
add
pop
mov
add
test
je
and
test
jne
xor
mov
mov
push
push
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
call
push
push
push
push
push
push
call
add
push
add
push
push
push
call
add
sub
mov
mov
rdtsc
xor
mov
mov
mov
mov
xor
mov
mov
mov
push
push
push
push
push
call
add
cmp
jne
call
push
push
push
push
push
call
add
push
push
call
add
sub
cmp
je
mov
mov
rdtsc
mov
add
mov
mov
test
je
mov
mov
mov
mov
mov
sub
sub
mov
test
jne
mov
mov
xor
mov
xor
test
jne
mov
or
mov
mov
pop
cmp
je
add
cmp
jne
mov
cmp
jne
mov
mov
test
je
mov
mov
cmp
jne
xor
cmp
je
or
test
je
mov
cmp
jne
mov
cmp
je
add
cmp
jne
mov
mov
cmp
je
mov
cmp
jne
mov
mov
test
jne
cmp
je
cmp
je
xor
mov
cmp
jne
xor
test
jne
mov
mov
mov
cmp
jne
mov
xor
cmp
jne
cmp
jne
mov
mov
mov
sub
test
jne
mov
cmp
je
mov
mov
pop
or
mov
cmp
jne
xor
mov
test
jne
xor
cmp
jne
mov
and
cmp
je
mov
xor
mov
cmp
jne
sub
mov
mov
cmp
je
cmp
jne
or
cmp
jne
cmp
jne
add
cmp
je
mov
sub
cmp
jne
mov
pop
mov
add
cmp
je
add
mov
cmp
je
add
mov
mov
mov
cmp
jne
mov
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
add
push
push
push
call
add
push
add
mov
mov
test
jne
mov
push
call
push
mov
push
push
push
call
add
mov
mov
mov
test
je
mov
sub
cmp
je
mov
mov
cmp
je
cmp
jne
mov
xor
mov
mov
mov
or
mov
cmp
je
xor
mov
cmp
jne
add
mov
mov
cmp
jne
mov
xor
cmp
je
mov
mov
mov
xor
mov
mov
cmp
je
mov
sub
cmp
jne
mov
test
jne
mov
mov
decl
cmp
jne
mov
sub
cmp
jne
add
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
negl
mov
mov
sub
mov
addl
sub
test
jne
cmp
jne
mov
add
mov
mov
mov
add
xor
cmp
jne
mov
jmp
call
mov
mov
cmp
je
mov
cmp
jne
mov
or
mov
push
push
push
push
push
call
add
pop
mov
call
pop
sub
push
push
push
push
push
call
add
mov
push
push
push
call
add
mov
mov
pop
cmp
je
mov
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
mov
mov
mov
cmpl
je
mov
mov
add
mov
mov
add
mov
jmp
mov
push
lea
push
call
lea
push
call
mov
mov
push
lea
push
call
lea
push
mov
push
call
mov
movl
mov
sub
mov
movl
mov
sub
mov
movl
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
cmpl
je
mov
test
je
jmp
mov
mov
mov
movl
jmp
mov
add
mov
mov
mov
cmp
jae
mov
add
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
cmpl
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
je
mov
movzwl
mov
movzwl
cmp
jle
mov
mov
mov
cmpl
je
mov
test
je
mov
mov
mov
movsbl
cmp
jl
movsbl
cmp
jg
movsbl
add
mov
mov
mov
mov
movsbl
cmp
jl
movsbl
cmp
jg
movsbl
add
mov
movsbl
movsbl
cmp
je
jmp
movsbl
test
jne
mov
mov
jmp
mov
add
mov
mov
add
mov
jmp
mov
mov
mov
mov
cmp
jne
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
cmpl
je
cmpl
je
cmpl
jbe
mov
movsbl
test
je
mov
mov
mov
mov
add
mov
mov
cmpl
je
mov
cmpl
je
mov
mov
mov
cmp
jae
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
ja
mov
mov
cmp
jb
mov
mov
mov
add
cmp
jae
mov
mov
sub
mov
mov
add
mov
jmp
jmp
movl
jmp
mov
add
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
add
mov
mov
movsbl
mov
movsbl
cmp
jne
mov
movsbl
test
jne
mov
mov
movzwl
mov
mov
add
mov
jmp
mov
add
mov
mov
add
mov
jmp
jmp
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
cmpl
je
cmpl
je
mov
mov
mov
mov
mov
test
je
mov
movsbl
mov
movsbl
xor
mov
movsbl
add
mov
mov
mov
movsbl
test
jne
jmp
mov
add
mov
mov
add
mov
jmp
mov
sub
jmp
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
and
push
push
push
push
push
call
add
push
mov
push
push
push
push
push
call
add
mov
add
mov
push
mov
add
cmp
jne
mov
mov
mov
push
mov
push
push
call
add
add
mov
cmp
jne
xor
cmp
jne
mov
mov
cmp
jne
mov
cmp
jne
sub
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
cmp
je
mov
sub
mov
mov
pop
add
push
push
push
push
push
call
add
pop
mov
mov
cmp
jne
mov
add
cmp
je
add
cmp
je
cmp
je
mov
cmp
jne
sub
push
push
push
call
add
pop
mov
xor
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
call
add
push
and
mov
cmp
je
sub
cmp
jne
mov
cmp
je
mov
push
mov
cmp
je
mov
add
mov
cmp
jne
mov
or
mov
mov
push
mov
mov
push
push
push
call
add
mov
test
jne
mov
push
push
call
add
add
push
push
push
push
push
call
add
mov
pop
mov
pop
cmp
jne
mov
xor
test
je
mov
push
push
call
add
pop
cmp
jne
mov
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
call
add
push
cmp
je
cmp
jne
mov
mov
xor
push
push
push
push
push
call
add
push
call
add
mov
push
cmp
jne
push
push
push
push
call
add
push
cmp
je
mov
mov
sub
mov
mov
cmp
je
xor
mov
mov
push
push
push
push
call
add
mov
mov
mov
xor
push
push
call
add
pop
push
push
call
add
pop
mov
cmp
je
push
push
push
call
add
pop
cmp
jne
xor
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
xor
mov
push
mov
add
mov
push
mov
cmp
je
add
test
jne
mov
push
cmp
je
xor
mov
mov
mov
sub
mov
cmp
jne
mov
mov
mov
mov
mov
pop
mov
pop
xor
mov
cmp
je
cmp
jne
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
pop
mov
add
mov
test
je
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
xor
mov
push
mov
xor
mov
push
mov
push
add
mov
mov
mov
mov
mov
mov
or
mov
mov
mov
sub
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
xor
mov
cmp
jne
mov
sub
mov
mov
pop
mov
mov
xor
mov
pop
cmp
je
test
je
mov
xor
mov
test
je
sub
mov
mov
cmp
jne
cmp
jne
mov
leave
ret
add
add
or
inc
add
add
adc
add
add
add
xor
adc
and
cltd
and
ret
xchg
inc
or
lds
inc
xor
or
in
inc
movsb
cwtl
add
inc
push
or
dec
xchg
add
enter
adc
add
test
add
addb
adc
in
roll
adc
xor
add
mov
addl
and
add
xchg
adc
xor
push
mov
or
or
adc
add
or
adc
xor
add
or
adc
dec
or
jecxz
pop
or
add
addb
dec
xor
inc
scas
xor
add
add
push
mov
rclb
sbb
xor
and
or
jo
adc
add
mov
or
or
movsl
add
cwtl
adc
inc
adc
adc
xchg
xchg
or
add
add
adcb
inc
adc
or
add
add
jae
inc
sbb
addl
add
add
add
xchg
push
inc
ljmp
push
add
leave
addb
inc
sbbb
and
add
ret
subb
add
pop
add
add
in
adc
addl
mov
add
add
adc
add
or
add
cmp
add
enter
mov
add
adc
add
mov
and
inc
xchg
mov
adc
inc
xchg
add
add
add
add
adc
js
cwtl
add
inc
add
or
xor
andb
add
add
mov
test
add
movsl
or
jb
add
inc
xchg
dec
add
sub
pop
and
rorb
push
nop
addl
add
push
roll
add
add
and
push
mov
add
add
and
and
add
and
or
or
adc
adcl
pop
rcll
sbb
add
push
addb
xor
test
or
add
add
rolb
and
push
add
push
or
add
pusha
push
pop
xor
add
add
or
into
adc
or
add
in
mov
add
add
add
add
enter
xchg
push
add
push
push
rorb
and
push
and
add
xorb
pusha
ret
add
in
aad
orl
add
add
xchg
mov
addb
sub
and
add
roll
add
add
and
add
dec
add
add
xchg
inc
addl
add
loopne
add
and
pop
inc
or
add
sub
les
and
pop
add
add
or
add
or
inc
aaa
xchg
pusha
adc
add
push
or
adc
xor
dec
xor
sub
add
and
add
nop
xor
push
shlb
pusha
and
pop
xor
and
and
add
sahf
inc
push
mov
adc
adc
inc
push
add
and
adc
cmp
xor
add
add
sbbb
test
lcall
or
or
and
add
adc
push
add
add
add
rolb
add
adcb
adc
adc
add
inc
addb
add
jecxz
sbb
mov
push
add
mov
into
inc
subb
inc
inc
cmpsb
add
add
add
enter
push
add
and
add
add
mov
xchg
adc
or
sub
addb
les
add
add
stc
inc
add
push
add
mov
test
cltd
mov
sub
add
add
adc
adc
sbb
xor
adc
roll
adc
adc
add
jp
push
inc
pop
adcb
or
add
adc
add
mov
cmp
test
adc
or
add
nop
adc
or
adc
or
inc
add
dec
and
addb
repnz
inc
xchg
orl
addl
addl
sbb
adc
fwait
or
add
add
add
sbb
add
xor
dec
adc
inc
or
inc
inc
or
cltd
add
or
inc
add
mov
cwtl
inc
add
insb
in
or
aam
and
or
add
add
push
add
add
push
js
jle
mov
test
and
xor
adc
add
and
dec
sbb
mov
add
add
push
mov
add
inc
or
or
sub
pusha
push
addb
mov
or
test
xor
and
sbb
add
and
add
mov
test
adc
dec
add
mov
add
and
sbb
adc
adc
add
or
push
dec
or
add
adcl
nop
sub
sub
add
or
or
mov
or
shll
dec
add
dec
adc
and
inc
add
and
add
and
mov
mov
xor
add
or
dec
or
inc
aad
loopne
or
adc
adc
add
rol
adcb
or
adc
andl
add
add
add
or
inc
add
add
or
add
add
add
lret
mov
sub
and
adc
and
sbb
add
add
add
orb
jecxz
adc
add
test
sub
add
add
mov
add
pop
adc
xor
add
sbb
and
rorb
inc
add
jno
mov
cwtl
add
or
add
sub
lods
add
cltd
add
and
or
add
add
add
sbb
orb
add
xor
hlt
nop
and
add
add
mov
adc
roll
inc
add
inc
bound
add
in
xor
inc
adc
sbb
enter
sbb
sub
pusha
add
adc
or
inc
les
addb
xor
roll
add
or
shlb
hlt
rclb
orb
or
adc
sub
mov
add
xor
mov
add
mov
sub
add
dec
add
xor
dec
xor
xor
xor
add
and
add
nop
add
add
orb
inc
or
mov
pusha
addb
pusha
cmp
inc
and
adc
push
add
add
xchg
and
daa
add
or
add
dec
inc
xor
add
push
jo
or
add
dec
call
les
add
xchg
add
add
xchg
test
mov
pop
andb
add
mov
add
and
and
adc
inc
cmpl
push
rolb
sub
or
and
fwait
mov
and
add
add
nop
add
add
adc
or
add
cmp
add
inc
test
add
add
add
and
add
xor
push
inc
add
popa
test
adc
inc
add
and
adcb
add
add
andb
sub
inc
jge
sbb
adc
inc
inc
add
inc
and
dec
leave
push
inc
call
push
addb
inc
aaa
xor
fs
dec
xchg
add
adc
adc
xor
inc
adc
inc
psrad
inc
inc
xchg
and
or
sbb
add
adcb
adc
sbb
and
inc
pusha
mov
add
and
and
sbb
add
add
add
add
adc
push
push
inc
and
inc
xor
push
add
adc
sbb
add
daa
dec
add
addb
adc
add
sbb
mov
add
addb
mov
inc
adc
and
xchg
and
nop
nop
push
xor
add
bound
xor
add
add
adc
xor
xchg
add
movsb
and
or
add
and
rolb
add
dec
inc
or
or
inc
or
xor
xchg
sbb
adcb
add
mov
add
add
add
mov
adc
addl
add
and
andl
inc
inc
push
inc
push
add
xorb
inc
inc
sub
or
adcb
mov
inc
adc
add
add
inc
add
shr
mov
xor
sub
inc
add
or
aad
test
add
xor
adc
dec
add
andb
adc
and
cwtl
aas
dec
inc
and
inc
add
call
les
sarb
lds
or
and
add
and
adc
call
xchg
inc
or
or
orl
add
add
xor
sub
add
mov
inc
add
dec
movsl
inc
fcoms
or
and
push
and
loope
inc
adc
or
or
add
or
adc
enter
adc
and
pusha
push
cwtl
add
xchg
and
inc
mov
jo
xor
das
add
xor
push
sub
pop
add
adc
lock
add
bound
cs
push
add
ret
xchg
mov
cmp
aad
adc
dec
push
sub
adc
add
inc
loopne
push
adc
sbbb
sbb
add
rolb
push
push
mov
sbb
adc
add
andb
pop
push
mov
mov
and
inc
push
adcb
movups
add
and
add
and
inc
sbb
subb
sub
and
sub
add
push
addb
add
cwtl
push
add
xor
dec
test
mov
dec
add
jno
movsb
adc
inc
adc
inc
sub
adc
add
pop
add
or
adc
xor
and
add
or
and
and
pusha
or
mov
inc
add
or
inc
sub
and
adc
or
add
add
or
xor
push
addl
movsb
pop
adc
add
add
push
and
adc
leave
add
xor
and
and
and
add
inc
add
add
xor
add
ret
mov
or
lock
or
pop
loop
sub
shl
sbbb
add
add
xchg
nop
add
and
inc
mov
inc
add
and
adc
or
and
add
lcall
adc
or
shll
subb
add
add
add
add
add
add
xor
rcll
and
mov
add
addb
add
sub
and
addb
orb
scas
push
xchg
sbbb
sbb
pop
inc
add
push
add
loopne
add
test
dec
sbb
adc
add
push
mov
mov
add
xor
inc
adc
inc
inc
ret
and
rolb
call
adc
add
bound
push
add
inc
adc
add
inc
add
add
sbb
in
add
dec
add
xchg
inc
adc
add
add
mov
ret
addl
inc
inc
nop
add
add
inc
inc
inc
add
add
or
adc
or
inc
add
les
inc
add
pusha
or
or
dec
xchg
add
pop
or
rolb
add
add
or
sbb
nop
add
xchg
cltd
add
inc
sub
and
sbbb
les
inc
add
and
inc
inc
add
adc
mov
sub
bound
adc
adc
mov
push
and
add
or
orb
mov
or
add
add
notb
add
add
add
sub
add
dec
add
xor
push
xchg
xorb
call
sub
add
inc
and
add
adcb
inc
or
mov
or
cwtl
or
mov
push
or
or
add
add
and
andl
dec
popf
add
xorb
adc
inc
mov
movsl
add
and
mov
add
or
mov
adc
add
add
or
dec
push
sbb
loopne
or
sbb
add
add
or
add
push
mov
add
inc
inc
add
add
adc
add
orb
mov
inc
add
sbb
shrb
adc
mov
andb
and
add
add
add
in
or
add
orb
xor
inc
mov
xor
bound
inc
add
pop
and
xchg
or
xor
add
andb
add
push
adc
add
adc
inc
mov
nop
cmp
orl
add
add
add
sbb
push
and
xor
mov
mov
or
xchg
add
or
add
xchg
adc
mov
add
inc
enter
jno
les
nop
inc
add
adc
inc
add
or
add
or
sbb
mov
sbb
dec
adc
add
and
pop
rclb
add
sbb
add
adc
sbb
les
or
lods
inc
mov
sub
add
or
orl
inc
adc
mov
add
dec
sub
or
lcall
and
or
rolb
push
ret
add
or
add
adc
inc
adc
leave
add
or
adc
mov
or
and
adc
loopne
or
add
adc
subb
inc
dec
cltd
add
add
add
fadds
pusha
sub
and
add
mov
add
lret
sub
add
mov
add
and
add
addb
mov
inc
in
rolb
inc
inc
add
add
adc
mov
les
add
add
and
inc
sbb
adcb
push
pusha
adc
adc
adc
mov
enter
add
and
inc
adc
push
addb
add
push
add
adc
and
add
push
loopne
add
and
addb
mov
or
add
and
imul
mov
and
adc
and
addb
push
sub
and
test
add
add
or
push
push
and
adc
inc
adc
sbb
add
je
sbb
and
ret
add
adc
add
add
movsb
and
adc
adc
mov
popa
or
add
add
addb
test
shl
push
roll
or
jo
or
inc
add
sbb
xchg
rclb
nop
xchg
and
orb
and
or
and
adc
adc
adc
rorb
addb
mov
or
add
jo
add
addb
add
add
cmp
pop
nop
and
add
bound
pop
adc
mov
add
add
sbbb
add
push
xchg
sub
add
pushf
inc
mov
xor
add
adc
lcall
adc
push
adc
add
addl
or
adc
es
and
bound
add
add
push
or
push
or
and
adc
dec
inc
push
test
add
and
xchg
sbb
or
sub
and
icebp
add
and
add
jle
and
add
or
rolb
adc
add
add
add
cmp
loope
add
xor
add
add
push
inc
and
adc
adc
test
add
sub
add
and
xor
orb
add
shlb
jo
or
or
add
inc
add
or
dec
aaa
push
xor
add
test
cmpsb
inc
inc
pop
add
xchg
test
and
xor
push
or
add
and
dec
and
add
add
nop
pop
mov
cwtl
andl
adc
and
inc
orb
pusha
add
cld
pusha
pop
cmp
sub
add
push
and
add
add
jl
inc
inc
jl
pusha
and
add
xchg
add
adc
sbb
xchg
add
sbb
andb
add
dec
xchg
dec
add
add
push
mov
pusha
inc
and
mov
or
adcb
adc
add
inc
add
or
add
add
add
adc
sbb
or
add
or
adc
mov
push
and
add
add
xchg
clc
js
mov
jo
and
add
addb
add
rorb
addb
or
in
nop
mov
adc
dec
ret
or
mov
add
mov
push
or
or
andb
test
mov
add
add
pop
sbb
sub
and
shlb
pop
popa
add
add
add
add
and
inc
adc
add
rclb
jno
or
sbb
add
and
add
adc
add
xor
andl
mov
pusha
sub
add
jg
or
sub
dec
jl
inc
lock
and
add
rolb
xor
inc
add
orb
and
and
adc
add
or
andb
add
push
add
add
ret
or
bound
movsb
push
adc
add
or
addb
cs
addb
sub
andb
orb
add
into
add
and
add
lret
rclb
add
add
inc
dec
and
pusha
andb
imul
inc
mov
add
sub
jo
push
add
inc
cmp
adc
and
xor
cmpsb
and
xor
add
add
inc
inc
repz
add
dec
mov
popa
mov
daa
push
rorb
orb
add
inc
and
sbb
mov
add
enter
or
adc
pop
push
cmp
sub
or
addb
add
addl
inc
adc
adcb
and
or
add
mov
and
add
adc
add
and
or
add
pop
and
add
bound
movsb
popa
xor
dec
and
nop
insb
add
inc
add
inc
or
add
push
or
sub
mov
push
cwtl
add
dec
adc
cwtl
sbb
add
add
cmp
movsb
push
sub
push
or
sub
or
mov
add
xchg
add
lret
push
or
adc
add
inc
mov
cwtl
or
and
add
and
sbb
dec
and
adc
add
sbb
mov
cmpsb
addl
sbb
xor
dec
nop
addb
pusha
add
orb
fs
add
and
inc
mov
add
and
adc
add
fwait
add
add
add
add
mov
nop
or
mov
addb
pop
or
sbb
inc
add
or
push
add
ljmp
adcb
out
push
inc
nop
add
or
adc
and
push
test
subl
addb
jb
add
adc
add
add
inc
or
sbbb
or
or
add
inc
addl
adc
mov
cmp
mov
pusha
adc
test
inc
add
adc
add
inc
jb
xchg
adc
or
mov
andb
adc
add
or
ret
and
in
call
inc
push
and
adc
adc
or
add
and
adc
sbb
or
sub
xchg
add
or
fs
inc
mov
add
lods
adc
nop
mov
or
inc
add
les
inc
adc
and
or
and
or
sub
bound
add
call
adcb
or
sbbb
or
andl
inc
add
dec
add
and
push
xor
xchg
adc
push
adc
add
sub
rolb
add
inc
add
xor
add
and
add
lea
addb
or
imul
pop
and
add
or
pusha
add
orl
or
add
or
adcl
add
or
xor
or
add
inc
push
inc
xor
add
rorb
adc
add
and
add
loope
sbb
dec
sbb
sub
stos
or
and
orb
pop
push
mov
mov
or
add
add
adc
and
rolb
add
adc
mov
dec
or
push
sbb
xchg
sbbl
add
push
mov
addb
inc
or
orb
loop
jno
add
loopne
inc
inc
or
add
inc
pop
test
popa
test
add
push
xchg
push
inc
xchg
add
jmp
test
nop
add
inc
test
ret
adc
mov
add
sub
add
and
dec
xor
add
xor
add
inc
add
add
and
adc
inc
sbb
ret
or
xor
mov
add
adc
adc
xchg
xor
mov
add
or
test
add
add
push
adc
adc
insb
pop
adc
or
and
or
mov
xor
orb
adcb
mov
movsb
rdtsc
add
mov
cmp
or
push
test
add
add
sub
or
sub
adc
inc
xor
add
push
cwtl
add
sbb
or
mov
or
add
movsb
sbb
add
add
add
or
add
add
mov
add
andl
sbb
or
adcb
adc
add
xchg
or
or
add
sbb
mov
add
addl
and
scas
sub
push
add
inc
inc
inc
add
inc
bound
add
push
inc
fs
cwtl
add
sub
addb
jbe
xor
add
or
enter
add
pop
add
or
mov
ss
xchg
add
add
test
add
add
dec
mov
add
add
add
push
addb
sub
push
shlb
add
xor
and
xorb
sbb
push
add
ret
xor
and
mov
clc
jae
nop
ds
jo
sbbl
and
ds
inc
lea
push
lods
add
adc
or
push
add
or
mov
adcb
mov
and
outsb
add
or
inc
movsl
sub
mov
adc
or
push
add
inc
xorb
pop
add
push
push
add
cmp
xchg
inc
subb
test
adc
dec
add
inc
add
inc
das
mov
and
ss
adc
add
test
or
inc
or
xor
add
add
sub
push
andb
inc
inc
add
add
and
add
or
adc
or
add
and
adc
add
xchg
repnz
add
dec
add
adc
xor
or
xchg
test
add
shl
add
push
pop
and
adc
and
addb
xchg
add
push
or
mov
push
adc
and
adc
add
and
add
rolb
add
and
add
push
add
mov
inc
push
and
mov
fs
and
xorb
sbb
and
test
adc
or
adc
pusha
pusha
mov
add
pusha
add
dec
mov
or
lds
andb
inc
add
push
dec
test
add
and
add
test
adc
or
adc
or
popa
inc
mov
pusha
cmp
add
adc
dec
add
ss
adc
lldt
or
inc
bswap
xor
push
sub
add
push
add
and
add
hlt
addb
inc
and
xor
adcb
sub
push
or
push
enter
xor
and
and
add
inc
mov
xor
xchg
bound
mov
or
add
dec
push
add
add
xor
and
repnz
and
add
or
inc
add
add
or
add
add
add
inc
rolb
add
dec
lds
push
inc
add
loop
push
inc
and
and
or
addb
mov
xor
push
das
inc
inc
xor
add
mov
and
adc
nop
movsb
inc
sub
add
add
and
inc
add
add
add
pusha
and
push
cmc
adc
add
add
xchg
push
and
nop
mov
or
stos
sbb
sub
fcoms
add
or
add
orb
add
or
add
adc
add
push
add
add
add
nop
add
adc
inc
add
inc
les
or
add
add
ss
add
inc
je
test
inc
inc
dec
inc
add
add
dec
inc
loopne
or
sub
nop
add
push
bound
mov
ss
push
and
add
adc
mov
pusha
fs
adc
and
adc
adc
inc
or
sbb
mov
adcb
xor
add
or
orb
add
in
push
add
add
push
and
or
push
add
push
addl
xchg
cmp
out
add
or
add
add
adc
inc
add
sbb
add
adc
push
xchg
inc
js
jo
test
shll
or
add
and
popa
int
adc
inc
and
mov
xchg
adc
inc
and
or
ret
mov
add
or
inc
add
stos
add
jae
sub
add
mov
mov
push
jne
add
mov
fs
adc
add
add
inc
mov
mov
andl
mov
adc
and
add
sbb
push
orb
or
add
add
or
mov
jmp
add
add
adc
and
xchg
add
or
test
or
xor
subl
inc
add
add
mov
loopne
or
add
adc
inc
inc
addl
add
sub
add
cwtl
fcmove
or
pusha
popa
add
or
add
add
inc
dec
xchg
orb
push
add
loopne
add
add
add
inc
addb
inc
adcb
js
sub
mov
adc
push
inc
mov
add
inc
and
add
or
adc
inc
shlb
dec
add
and
push
sarb
pusha
test
inc
xor
jb
cs
ljmp
add
adc
pusha
or
xor
inc
es
push
mov
inc
movsl
sbb
adc
inc
add
sub
or
test
scas
add
dec
adc
adc
mov
add
or
add
adc
xor
dec
pop
adc
je
add
adc
adc
movsb
ds
add
addb
add
loopne
and
sbb
mov
adc
xchg
aas
or
and
and
add
dec
add
rclb
adc
and
adc
xor
push
xor
push
and
orb
adc
test
adc
adc
xchg
add
or
sbb
add
pop
add
jecxz
add
add
xor
sbb
popa
add
or
add
inc
shlb
or
add
mov
add
leave
cwtl
push
and
add
push
adc
adc
and
inc
and
and
jb
add
pop
adc
and
and
push
inc
push
data16
inc
daa
adc
add
mov
add
cwtl
aam
and
adc
adc
and
add
nop
push
and
nop
add
push
jo
nop
jg
dec
add
mov
and
add
push
cmp
adc
or
mov
aaa
or
add
add
inc
add
stos
insb
add
inc
rclb
or
add
invd
xor
add
and
add
pusha
adcb
add
adc
or
or
add
or
inc
loopne
and
rorb
addb
inc
test
mov
and
arpl
adc
and
add
inc
sbb
imul
cmp
adcb
icebp
inc
dec
movsb
or
or
add
addb
or
add
add
and
add
add
or
inc
addl
orb
sub
add
inc
adc
or
nop
add
pop
jbe
add
addl
inc
add
add
inc
add
inc
jne
les
and
inc
add
subb
or
or
add
push
and
add
or
jo
and
jp
shll
inc
add
test
inc
adc
inc
add
sub
inc
add
call
add
rorb
push
add
push
push
adc
addb
push
add
pop
lds
add
inc
inc
mov
add
add
mov
mov
sub
xor
or
nop
int3
pusha
add
add
add
add
add
mov
popa
sbb
test
addb
inc
push
enter
adc
cwtl
adc
inc
inc
add
add
pusha
add
sub
adc
add
and
push
xor
fidivrl
add
push
inc
xchg
inc
inc
or
add
mov
cmp
and
xor
pusha
or
or
popa
inc
add
sbb
add
add
xchg
dec
cmpl
sub
dec
repnz
mov
sbbb
add
sub
add
xchg
add
add
jp
add
add
adc
add
addb
mov
sbb
pop
sub
adc
adcl
mov
cmp
mov
add
sub
addl
test
add
xor
add
and
inc
dec
add
or
add
inc
add
adc
ret
push
add
inc
mov
xor
xchg
add
test
adcb
mov
or
add
add
sub
adc
ret
rolb
add
push
inc
inc
add
and
loopne
addb
sbb
inc
or
add
enter
ret
add
jo
cmpsb
jo
xor
add
push
adcb
and
or
add
mov
fs
sbb
add
stos
sbb
xor
sub
addb
lret
test
rorb
add
and
rorb
adc
bound
jns
add
add
xor
add
add
orb
call
or
add
xchg
outsl
addb
adc
add
pusha
push
push
inc
add
addb
orb
pusha
inc
add
inc
or
and
add
or
add
adc
add
xchg
add
sbb
push
nop
andl
push
add
add
sub
add
and
ret
adcl
add
push
or
add
sub
or
add
add
xor
ret
and
push
and
int3
and
test
push
add
add
add
or
addb
or
nop
test
loopne
shlb
add
push
or
loop
xor
adc
add
cmp
push
sbb
dec
and
push
add
sbb
add
rorb
add
and
add
sbb
adc
adc
and
mov
sub
pop
xchg
addb
add
add
test
sub
addb
adc
xor
and
add
add
push
adc
xchg
add
xor
or
or
xor
lods
rorb
add
push
and
add
add
adc
lods
add
and
or
addb
xor
add
loopne
add
mov
push
add
adc
and
aam
or
add
add
cltd
or
bound
inc
and
ljmp
pop
push
adc
pop
addb
adcb
adc
xor
cmp
add
push
xchg
add
or
addb
and
mov
push
add
aad
adc
adcl
add
push
xchg
or
adc
add
jp
inc
cmpl
addb
add
inc
sbb
inc
add
add
add
xchg
add
add
test
mov
data16
mov
popa
mov
push
or
sbb
add
add
adc
and
fs
adc
add
xor
add
xor
and
add
mov
or
sbb
and
push
sbb
mov
or
lret
add
mov
add
or
adcb
inc
mov
inc
inc
xchg
add
andb
mov
or
and
cmc
cwtl
pusha
nop
add
sbbl
and
mov
or
xchg
fs
data16
adc
cmp
and
and
and
adc
and
or
and
add
add
or
xchg
or
rolb
inc
add
add
and
rolb
add
dec
add
adc
add
mov
sbb
push
fcompl
and
push
adc
bound
inc
cmp
loop
movsl
inc
add
or
xor
mov
add
test
and
sub
adc
or
or
popl
add
orb
adc
xor
sub
cltd
pop
adc
adc
pop
or
or
inc
addb
addb
cmpb
inc
add
rolb
add
test
push
dec
add
adc
inc
dec
or
adc
adc
sbb
sub
add
xor
adc
push
adc
or
addb
inc
sbb
or
sub
sbb
addl
xor
push
inc
nop
push
add
inc
add
and
and
movsb
lea
addb
xchg
xorb
inc
mov
add
add
inc
inc
mov
sbb
add
stos
adc
lea
es
add
add
addb
add
and
and
rorl
or
adc
les
mov
xchg
inc
orl
push
add
add
inc
add
push
add
add
add
add
add
and
shll
mov
inc
sbb
add
add
loopne
add
inc
fs
add
add
inc
add
rolb
adc
add
nop
cmovo
add
add
or
or
pop
inc
add
sbb
je
sub
roll
or
add
aaa
push
test
xor
push
and
mov
movsl
add
adc
ret
xor
mov
cltd
xor
nop
add
mov
or
add
sub
stos
in
add
add
add
add
addb
or
fs
addb
and
addb
add
inc
add
xor
or
movsb
and
rclb
or
add
mov
or
clc
sub
inc
push
and
adc
or
add
add
xor
add
andb
dec
xchg
mov
andb
add
mov
dec
lods
sub
pop
push
add
sbb
sbb
rolb
adc
rol
push
xor
inc
adc
mov
adcb
xor
push
or
inc
or
inc
xor
inc
add
add
adcl
int3
sub
add
sbb
pusha
test
add
sbb
and
inc
sbb
sub
add
xor
add
or
sbb
cmp
mov
or
sbbb
addl
and
and
adc
ret
pop
push
and
and
add
add
and
nop
add
sub
sub
xor
add
add
mov
inc
addb
or
add
popl
cmp
sbb
inc
add
add
mov
and
test
sub
bound
inc
adc
pop
or
add
and
sbb
or
and
or
add
add
inc
test
add
inc
or
and
adc
add
and
add
test
adc
inc
add
mov
adc
add
push
add
or
bound
sub
test
and
add
push
cwtl
or
add
sbb
or
add
add
add
add
add
adcb
stos
adc
and
inc
adc
push
add
adc
inc
sbb
add
add
and
push
test
add
inc
or
push
xchg
shlb
add
add
nop
cmp
test
adc
or
xor
push
xor
dec
test
add
lea
mov
and
addl
or
add
sbb
add
inc
add
or
pop
popa
add
add
add
and
adc
and
xor
sub
or
test
andb
mov
movsb
and
add
push
push
jo
or
and
and
pusha
enter
mov
or
add
or
push
adcb
xor
inc
inc
xor
and
add
add
adcb
and
add
add
sbb
fldenv
add
or
push
sub
push
adcl
sbbl
push
push
inc
add
adc
xchg
mov
add
add
xchg
dec
add
add
or
adc
sub
add
sbb
adc
xorl
xor
mov
add
dec
in
mov
andb
orb
inc
adc
xchg
lods
add
inc
and
aam
adc
sub
add
dec
or
sub
inc
test
addb
subl
rorb
mov
rolb
orb
pusha
mov
adc
add
add
lcall
add
add
mov
pop
or
add
add
xor
sub
mov
push
push
dec
pop
les
jo
imul
or
add
add
xorb
add
adc
bound
nop
inc
adcl
adc
mov
inc
lret
push
push
mov
add
icebp
pop
test
or
mov
popa
adc
adc
or
add
or
push
sbb
inc
and
or
loopne
and
add
int3
rclb
leave
fstl
sub
add
cmpsb
nop
inc
or
mov
adc
movsb
xor
xor
pop
add
or
xchg
add
sbb
addl
add
outsb
push
adc
and
xchg
mov
add
cmp
add
cmp
adc
mov
xor
add
add
mov
cmp
and
inc
nop
add
add
add
add
or
add
or
add
push
inc
jne
nop
or
add
add
adc
rcrb
push
cltd
add
inc
inc
push
add
lock
or
sbb
pusha
or
and
ret
push
add
xorl
subb
add
mov
adc
add
and
test
orl
inc
or
inc
add
or
and
add
push
push
test
add
add
adc
add
add
add
inc
xor
or
mov
add
add
xchg
or
add
add
mov
adc
add
dec
movsb
adc
and
sub
add
add
add
add
cmc
sub
push
inc
or
mov
add
inc
push
addb
popa
and
addl
adc
xchg
es
and
nop
add
and
and
or
add
fimuls
sub
and
or
lds
add
push
or
cltd
xor
push
or
mov
xchg
or
add
inc
addb
add
or
and
rorb
adc
add
or
sbb
push
sub
addl
shlb
adc
adc
and
adc
or
push
or
add
push
and
adc
inc
sbb
add
inc
add
rclb
icebp
adc
add
push
and
add
add
out
fs
andb
int3
push
add
addb
adc
sbb
test
or
or
inc
inc
inc
xor
add
adc
adc
add
add
mov
or
xchg
or
add
xor
inc
mov
add
or
add
or
inc
push
stos
rolb
adc
andb
and
xchg
inc
xchg
dec
mov
add
add
pusha
loopne
inc
add
mov
subb
add
subb
add
adc
sbb
pop
addb
andb
add
adcb
and
cwtl
inc
add
addb
add
add
inc
mov
mov
inc
call
pusha
orb
sub
mov
or
xchg
adc
add
or
adc
or
rclb
dec
or
or
inc
mov
adc
push
inc
add
into
test
xchg
push
andb
inc
mov
add
add
adc
adc
or
lock
and
adc
inc
pop
inc
or
mov
and
andb
and
mov
and
push
les
mov
inc
add
inc
add
inc
adc
push
adc
jo
enter
addb
add
dec
and
mov
adc
add
rclb
push
cwtl
xor
add
inc
xor
push
dec
mov
inc
and
inc
arpl
shlb
add
add
adc
or
sbb
inc
add
mov
add
in
enter
push
xor
inc
adc
addb
pusha
add
mov
lcall
add
add
mov
xchg
push
mov
dec
sbb
and
add
pusha
addb
add
adc
inc
xchg
inc
add
addb
adc
sbb
fs
add
add
push
and
shlb
dec
sub
add
and
add
nop
add
inc
add
test
add
adc
sub
addl
add
inc
add
add
add
and
add
inc
mov
adc
es
and
sbb
pusha
adc
addb
adc
adcb
add
stc
or
add
add
addb
int3
inc
and
nop
inc
and
add
push
mov
adc
add
add
add
xor
leave
xor
pusha
or
push
or
add
lods
adc
sbb
add
add
bound
and
sub
data16
adc
adc
mov
dec
adc
add
add
add
or
inc
add
xor
xor
add
xchg
mov
loop
and
add
mov
push
and
inc
orb
push
addb
mov
sub
add
les
add
add
fwait
mov
and
inc
adc
cltd
cmp
add
or
add
add
add
pop
icebp
dec
sub
add
pop
orb
xchg
adc
ja
and
xchg
add
adc
nop
inc
inc
pop
inc
add
ficoms
sbb
add
inc
add
adc
add
push
cmp
and
add
and
adc
xchg
xchg
test
nop
or
adc
roll
inc
add
add
enter
push
add
add
add
add
adc
inc
inc
add
test
dec
pop
push
add
movsl
push
pop
or
add
and
push
pop
add
adc
add
inc
sub
inc
add
and
add
pusha
add
and
push
and
push
or
data16
and
xchg
push
mov
jb
add
add
xor
adc
add
pop
dec
lds
cmp
sub
inc
pusha
sbb
add
test
and
daa
and
sbb
adc
inc
add
cmp
and
push
adc
or
add
fsts
add
arpl
xchg
inc
dec
add
add
add
adc
or
and
inc
xor
add
add
popa
adc
sbb
inc
mov
add
adc
adcl
and
mov
and
sbb
xor
addl
add
or
add
add
or
and
add
add
and
add
inc
add
add
jp
add
xorl
adc
pusha
add
dec
enter
and
inc
cmp
push
mov
inc
or
loope
xchg
and
inc
popa
adc
mov
sub
addb
inc
test
add
adc
add
add
mov
or
les
and
es
add
add
adc
addb
cwtl
add
shlb
mov
add
inc
mov
lds
add
mov
add
rorb
addb
inc
and
mov
pusha
push
sbb
and
or
adcl
add
and
pusha
movsl
add
xor
rolb
add
je
pusha
inc
xor
mov
and
and
add
add
inc
sbb
add
mov
add
mov
add
adcb
dec
add
jae
and
and
insb
test
add
bound
and
push
orb
add
inc
xor
add
loop
and
pusha
add
sub
sbbl
and
or
mov
shlb
add
addl
addb
or
test
cmpsb
andb
or
ret
add
dec
add
add
push
test
es
movsb
sub
and
xchg
adcb
inc
inc
adc
adc
addb
pop
adc
xor
add
adc
adc
and
inc
or
adc
add
or
mov
mov
adc
adcb
stos
test
add
or
inc
adc
add
and
sub
les
mov
add
add
inc
addb
adc
addl
and
inc
and
cwtl
add
and
add
xchg
add
adc
add
inc
inc
or
add
sbb
add
or
xor
sub
sbb
es
test
sbb
inc
pusha
jb
ret
or
test
and
sbb
sbb
dec
push
push
inc
dec
add
add
adc
or
and
push
dec
push
add
dec
ret
adc
mov
add
inc
add
inc
and
loopne
andb
cmc
add
shrb
and
call
add
roll
es
xor
add
and
inc
push
mov
add
add
addb
ret
add
sbb
adc
or
xor
addb
sub
add
add
inc
inc
test
dec
or
adc
pop
adc
jbe
inc
test
add
movsb
xor
nop
xor
adc
inc
add
adc
mov
dec
push
add
inc
push
or
subb
add
add
dec
or
or
inc
or
add
hlt
mov
ds
dec
add
popf
mov
cmpl
adc
add
addb
push
add
and
push
adc
xchg
call
adc
dec
movsb
add
add
popa
shlb
and
and
inc
mov
sbbl
mov
inc
inc
addr16
add
push
add
push
adc
bound
xchg
inc
and
adc
inc
add
add
or
add
andb
add
addb
sub
mov
add
mov
add
jae
and
pusha
add
add
and
addb
inc
int
add
sbb
add
dec
xchg
mov
inc
inc
adc
fimull
add
or
addb
or
nop
adcl
push
inc
add
and
add
add
adc
add
les
sbb
mov
add
or
or
sbb
adc
push
addb
push
adc
pop
adc
mov
and
pushf
pusha
or
add
add
add
xchg
mov
adc
xorb
dec
adcb
inc
jo
adc
or
add
lds
and
add
add
adc
cmp
add
push
add
xor
inc
and
xor
cwtl
orl
inc
or
and
adc
xchg
or
inc
or
addb
rorb
inc
add
pop
mov
sbb
addl
sbb
pushf
add
sub
nop
or
add
push
and
or
add
push
mov
xchg
inc
adcb
or
add
or
add
insb
adcb
addb
inc
sbb
les
add
adc
pop
mov
subb
add
and
mov
add
inc
add
mov
add
add
and
or
add
test
inc
adc
add
add
pusha
add
andb
add
push
test
or
add
and
nop
aad
push
add
or
pop
or
add
dec
adc
add
addl
dec
mov
and
mov
and
push
xor
add
add
add
sub
add
sbbb
push
or
xor
add
add
adcb
xchg
adc
dec
adc
dec
add
andb
inc
inc
rolb
mov
cmp
adc
test
sub
add
inc
xchg
mov
inc
movsl
inc
push
push
xchg
add
add
and
inc
andb
add
cmp
add
inc
cmp
call
or
and
and
add
adc
push
or
add
les
and
and
dec
adcl
mov
push
and
or
mov
add
adc
dec
add
add
push
and
and
inc
adc
inc
add
add
inc
mov
sbb
adc
or
cwtl
or
inc
es
push
pusha
and
pop
orb
inc
shll
add
andb
nop
add
sub
add
and
addb
inc
mov
push
adc
or
mov
inc
xchg
bound
dec
test
inc
and
and
xorb
mov
mov
lds
or
add
or
sbbb
inc
leave
add
and
test
movsl
inc
push
pop
mov
and
adc
add
or
add
dec
mov
addb
pusha
sbb
mov
lcall
sbb
or
and
test
dec
push
sbb
add
mov
add
xchg
add
adc
pushf
popa
and
and
add
adc
inc
add
add
xor
add
add
dec
sbb
push
adc
inc
inc
addl
add
lods
in
add
and
add
inc
adc
or
adcb
sbbb
sbb
ret
inc
test
add
add
adc
rolb
add
and
sbb
add
inc
aas
or
and
sub
inc
inc
xor
orb
add
add
test
add
cmp
inc
cwtl
add
nop
adc
or
add
and
add
addl
sub
sbbb
add
xor
sub
popa
loope
or
xor
mov
and
push
or
mov
mov
les
inc
push
add
add
mov
add
bound
sub
inc
mov
cmp
and
stos
movsb
subl
add
and
test
and
inc
sub
ret
adc
pusha
push
add
sub
add
inc
or
add
and
cmp
and
add
inc
and
sub
xor
insb
adc
add
and
add
addb
or
add
and
sbb
add
add
cmp
xor
call
test
or
add
add
pop
or
rolb
cmp
push
or
adc
inc
push
adc
addb
add
nop
inc
adc
popa
adc
adc
push
or
xor
add
nop
adc
js
adc
add
adc
orb
push
mov
add
dec
sub
xchg
and
add
loope
mov
test
sub
sbb
lods
add
add
add
add
mov
add
movsb
add
or
add
movsb
test
xor
or
inc
add
mov
adc
es
add
add
and
sbb
enter
inc
adc
adc
or
add
test
push
push
or
xchg
mov
jno
test
and
pop
add
adc
sub
adc
andb
inc
adc
push
add
adcb
add
add
sbb
add
xor
add
add
sub
pop
loop
adc
sub
adc
inc
inc
popa
inc
test
pop
add
xchg
add
mov
adc
add
pusha
or
nop
cwtl
add
push
andb
sbb
mov
add
pop
and
dec
adc
popa
add
mov
and
roll
inc
dec
or
and
sbb
addl
and
adc
add
addl
inc
mov
and
add
and
addb
or
and
mov
das
and
pop
xchg
xor
subb
add
test
add
addb
add
add
enter
add
add
add
add
cmp
add
sbb
add
sbb
add
add
inc
add
add
dec
push
inc
dec
inc
dec
xor
cs
insb
add
add
insb
inc
gs
gs
insl
popa
add
add
push
gs
gs
data16
add
insb
dec
imul
add
ja
insb
inc
gs
popa
jns
jb
popa
insb
gs
gs
outsb
je
imul
insb
inc
outsl
addr16
add
insb
inc
outsl
insb
outsl
jb
outsl
imul
add
insb
push
gs
outsl
outsl
jb
xor
add
insb
dec
popa
jo
jb
xor
add
dec
outsb
fs
jbe
add
insb
dec
outsl
jb
popa
insb
xor
add
add
inc
jbe
insb
inc
outsl
outsl
jb
xor
add
add
dec
popa
jo
add
add
inc
gs
outsb
je
addr16
add
add
dec
jae
outsb
popa
bound
add
add
inc
jne
insb
inc
popa
arpl
add
add
insb
inc
gs
gs
inc
outsl
outsb
je
js
add
add
ja
insb
push
ja
jo
jne
je
jo
gs
jne
data16
add
add
insb
push
popa
jae
gs
outsl
jae
jae
add
ja
insb
inc
gs
gs
jne
je
jb
arpl
fs
jae
add
add
insb
push
gs
outsl
outsl
jb
xor
add
add
dec
outsb
je
jb
gs
jbe
fs
jb
popa
jns
add
add
inc
jbe
insb
inc
outsl
outsl
jb
xor
add
add
insb
push
popa
jae
gs
outsl
jae
data16
add
add
inc
popa
insb
insb
dec
imul
insb
push
popa
jae
gs
outsl
jae
imul
dec
outsb
imul
add
insb
inc
outsl
imul
insb
push
popa
jae
gs
outsl
jae
jae
add
add
insb
push
imul
outsb
jae
gs
add
add
insb
dec
outsb
fs
outsl
imul
add
insb
push
outsl
imul
add
add
inc
outsl
insb
outsl
jb
bound
add
insb
inc
insb
gs
jb
outsb
fs
add
add
inc
gs
jb
outsl
jb
add
add
inc
gs
popa
jo
jbe
add
add
inc
insb
imul
add
add
inc
insb
gs
jb
je
outsb
arpl
add
add
ja
insb
push
ja
jo
jne
data16
add
add
insb
inc
imul
insb
imul
je
add
add
insb
push
imul
outsb
jae
gs
add
add
insb
push
gs
gs
jae
add
add
inc
gs
push
add
add
push
arpl
add
add
insb
inc
jbe
insb
dec
gs
xor
add
insb
inc
insb
outsb
fs
jne
arpl
add
insb
inc
gs
popa
je
jb
popa
insb
data16
add
insb
dec
popa
je
jb
popa
insb
data16
add
add
push
gs
outsl
outsl
jb
xor
add
add
inc
popa
insb
insb
dec
imul
insb
inc
gs
outsl
outsl
insb
gs
outsb
jbe
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
inc
gs
gs
jo
popa
je
inc
add
add
inc
gs
inc
push
add
add
dec
insb
jae
gs
popa
arpl
push
jo
popa
je
inc
outsl
jne
je
add
add
popa
jo
xor
je
gs
add
add
inc
popa
insb
insb
dec
popa
insl
gs
imul
add
fs
imul
add
add
push
imul
jb
gs
js
add
push
gs
jb
outsl
jb
je
inc
insb
popa
jae
add
add
inc
gs
je
jb
jne
dec
outsb
outsw
push
add
add
je
jb
add
add
je
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
add
inc
gs
jae
jb
gs
jne
je
popa
outsb
addr16
inc
add
dec
push
dec
push
inc
dec
xor
cs
insb
add
add
push
push
dec
push
gs
outsl
outsb
outsb
arpl
je
outsl
outsb
add
add
dec
dec
popa
je
jbe
push
jno
add
add
push
push
dec
inc
gs
jne
jae
jb
popa
insl
add
add
push
push
dec
inc
insb
insb
outsl
arpl
jbe
add
inc
insb
insb
push
outsb
jb
imul
jb
gs
add
push
push
dec
push
je
je
jae
imul
push
dec
push
jo
arpl
insb
inc
outsl
insb
jne
outsb
jae
add
push
push
dec
inc
imul
add
add
dec
inc
insb
insb
outsl
arpl
insl
je
add
add
dec
push
gs
arpl
insb
insb
dec
jo
imul
push
push
dec
inc
js
arpl
arpl
add
dec
inc
jb
gs
outsb
jbe
add
add
dec
inc
gs
jb
bound
popa
jb
insl
add
add
push
push
dec
push
jb
jo
jb
add
add
push
push
dec
dec
jne
push
popa
jb
insl
jae
add
add
dec
inc
gs
push
push
push
dec
push
jb
arpl
jne
gs
outsl
insb
jne
outsb
jae
dec
push
inc
inc
push
push
cs
insb
add
add
aas
push
gs
fs
jb
jb
je
push
outsb
insb
outsl
arpl
inc
push
jo
outsb
dec
outsl
arpl
inc
push
inc
inc
pop
pop
dec
inc
pop
add
add
aas
dec
jae
gs
fs
outsl
arpl
fs
inc
inc
jb
je
arpl
push
inc
inc
pop
dec
pop
pop
add
add
dec
jae
jae
bound
inc
dec
dec
push
dec
imul
jae
push
popa
bound
inc
push
inc
inc
pop
dec
pop
pop
add
add
aas
aas
xor
push
insl
popa
insb
insb
push
jo
outsb
dec
outsl
arpl
inc
push
inc
inc
inc
inc
push
xor
inc
push
xor
pop
add
add
aas
pop
inc
outsl
outsb
je
popa
arpl
dec
dec
push
dec
imul
jae
push
popa
bound
inc
inc
inc
inc
aas
inc
push
xor
dec
pop
push
inc
push
inc
dec
inc
inc
inc
inc
pop
pop
add
add
aas
xor
dec
outsl
arpl
fs
imul
jae
inc
inc
push
inc
inc
inc
inc
push
xor
inc
push
xor
pop
add
add
pop
inc
js
jb
arpl
jns
inc
dec
dec
push
dec
popa
jae
push
popa
bound
inc
inc
inc
inc
aas
inc
dec
push
inc
pop
inc
pop
add
add
dec
jae
jb
je
push
outsb
insb
outsl
arpl
fs
inc
inc
jb
je
arpl
push
inc
inc
pop
dec
pop
pop
add
add
aas
pop
inc
gs
gs
dec
gs
inc
dec
dec
push
dec
imul
jae
push
popa
bound
inc
inc
inc
inc
aas
inc
push
xor
dec
pop
push
inc
push
inc
dec
inc
inc
inc
inc
dec
dec
inc
pop
add
add
aas
dec
jae
imul
fs
gs
imul
inc
inc
push
inc
dec
pop
pop
add
push
dec
dec
dec
dec
cs
insb
add
add
jbe
dec
outsb
inc
gs
inc
add
add
imul
push
gs
popa
jb
add
add
imul
outsw
add
add
imul
inc
insb
outsl
jae
add
add
imul
push
popa
jne
add
add
imul
add
add
insl
imul
inc
gs
popa
jo
inc
add
add
outsb
inc
jb
jbe
jb
add
add
imul
gs
popa
jo
push
add
add
imul
popa
add
add
js
jb
gs
imul
push
add
add
jns
gs
jne
inc
gs
add
add
popa
jns
outsl
jne
fs
add
add
ja
xor
dec
gs
popa
add
add
insl
imul
je
jb
outsl
jb
gs
push
add
add
push
jns
gs
outsl
jae
add
insl
insl
imul
add
add
imul
add
add
js
gs
outsl
insb
jne
add
add
insl
imul
jo
gs
jb
dec
gs
fs
add
add
imul
push
outsl
insb
jne
add
add
insl
arpl
gs
jb
jbe
jb
popa
je
add
push
inc
dec
inc
inc
push
push
cs
insb
add
add
dec
outsb
imul
add
add
inc
jb
fs
je
popa
insb
push
jo
popa
je
dec
outsl
je
data16
add
add
push
jae
jb
outsl
fs
outsb
imul
add
add
push
jo
outsb
jae
popa
outsb
arpl
outsb
imul
gs
je
popa
insb
push
jo
popa
je
push
imul
add
inc
jb
fs
je
popa
insb
push
jo
popa
je
inc
jb
add
add
push
jo
jae
dec
outsl
fs
outsb
imul
add
add
push
and
add
sbb
add
and
add
add
mov
add
and
add
add
and
add
add
add
add
add
add
add
sbb
add
sbb
add
and
add
add
loop
add
cli
adc
add
add
add
add
je
add
sbb
add
push
adc
add
add
inc
adc
add
adc
add
add
push
add
fcoms
add
jbe
add
test
add
notb
add
xchg
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
test
add
mov
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
xchg
add
xchg
adc
add
adc
add
adc
add
adc
add
add
add
call
adc
add
adc
add
add
and
add
mov
add
add
adc
add
adc
add
add
lret
add
add
rclb
add
adc
add
add
notb
add
sbb
add
adc
add
add
add
adc
add
add
jle
add
push
add
lods
adc
add
adc
add
mov
adc
add
adc
add
pushf
adc
add
dec
adc
add
add
add
push
pop
add
lret
add
adc
add
pushw
add
push
push
add
inc
push
add
push
pop
add
push
add
lock
add
add
add
jle
add
rclb
add
pop
add
pop
sbb
add
sbb
add
pop
add
push
sbb
add
add
add
add
sbbb
add
sbb
add
sbb
add
sbb
add
add
movsb
sbb
add
add
loop
add
rclb
add
add
add
jb
add
inc
sbb
add
add
add
add
adc
add
mov
add
sub
add
add
dec
adc
add
adc
add
adc
add
add
add
add
je
add
sbb
add
push
adc
add
add
inc
adc
add
adc
add
add
push
add
fcoms
add
jbe
add
test
add
notb
add
xchg
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
test
add
mov
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
xchg
add
xchg
adc
add
adc
add
adc
add
adc
add
add
add
call
adc
add
adc
add
add
and
add
mov
add
add
adc
add
adc
add
add
lret
add
add
rclb
add
adc
add
add
notb
add
sbb
add
adc
add
add
add
adc
add
add
jle
add
push
add
lods
adc
add
adc
add
mov
adc
add
adc
add
pushf
adc
add
dec
adc
add
add
add
push
pop
add
lret
add
adc
add
pushw
add
push
push
add
inc
push
add
push
pop
add
push
add
lock
add
add
add
jle
add
rclb
add
pop
add
pop
sbb
add
sbb
add
pop
add
push
sbb
add
add
add
add
sbbb
add
sbb
add
sbb
add
sbb
add
add
movsb
sbb
add
add
loop
add
rclb
add
add
add
jb
add
inc
sbb
add
add
add
add
adc
add
mov
add
sub
add
add
add
and
add
js
push
jae
push
cmp
push
xor
xor
addr16
fs
dec
push
xor
dec
gs
jae
dec
arpl
dec
inc
popa
inc
pop
dec
push
xor
popa
inc
dec
push
push
data16
addr16
outsl
push
inc
gs
jno
xor
dec
dec
push
dec
push
jp
push
push
inc
dec
xor
inc
pop
xor
pop
xor
dec
xor
dec
push
xor
insb
inc
js
push
jno
outsb
push
inc
outsl
addr16
inc
inc
inc
insl
push
xor
inc
arpl
pop
gs
push
dec
xor
push
insl
push
jb
dec
push
inc
cmp
je
dec
push
dec
jns
push
inc
xor
dec
bound
inc
insl
xor
inc
xor
xor
bound
dec
dec
xor
jb
dec
pop
add
add
popa
adcl
imul
inc
inc
jo
bound
dec
insb
pop
cmp
insb
insb
arpl
inc
xor
aaa
jae
jo
dec
cmp
ss
xor
jb
inc
dec
pop
ss
jb
push
jo
push
aaa
dec
dec
dec
fs
je
push
ss
inc
pop
gs
bound
arpl
push
imul
bound
inc
push
dec
inc
gs
push
pop
addr16
cmp
jbe
pop
xor
inc
push
imul
inc
outsl
add
dec
outsb
aaa
xor
pop
push
dec
xor
je
add
add
push
je
pop
arpl
dec
push
xor
outsb
inc
push
xor
addr16
dec
push
inc
jo
pop
push
inc
xor
xor
push
push
dec
dec
imul
insl
cmp
arpl
js
inc
dec
xor
jae
js
ja
push
dec
inc
inc
insb
popa
addr16
push
push
jae
push
dec
inc
dec
inc
pop
fs
data16
push
insb
push
addr16
jbe
dec
pushw
aaa
pop
dec
push
arpl
imul
ja
dec
popa
push
cmp
inc
dec
aaa
dec
insb
insl
jae
outsb
jbe
push
push
dec
aaa
jp
jp
push
ja
pop
push
inc
cmp
inc
dec
popa
push
gs
xor
add
cmp
push
js
inc
inc
push
dec
imul
inc
inc
pop
xor
arpl
push
push
ja
dec
jns
push
jb
outsb
fs
aaa
dec
push
dec
inc
dec
dec
js
push
dec
popa
bound
push
popa
push
jno
dec
dec
push
jp
je
imul
inc
outsl
xor
outsl
inc
popa
inc
insl
dec
dec
insl
inc
imul
dec
xor
addr16
dec
push
gs
jae
jne
push
xor
push
jp
je
push
push
insl
imul
cmp
inc
push
push
inc
cmp
add
ss
popa
xor
addr16
jbe
jo
push
inc
je
xor
outsb
push
push
js
cmp
arpl
outsb
jbe
push
push
push
dec
xor
jns
jp
push
outsb
pop
xor
xor
push
jb
jbe
arpl
push
addr16
imul
je
jae
jo
insb
inc
push
outsl
pop
imul
jne
jb
pop
jo
push
jae
jp
pop
inc
popa
push
cmp
jp
push
popa
jns
inc
push
xor
dec
jb
bound
imul
pop
xor
push
pop
js
jp
pop
xor
push
dec
jns
jp
dec
data16
dec
push
jns
arpl
inc
imul
xor
add
add
ss
dec
outsb
inc
jno
gs
xor
pop
inc
cmp
cmp
cmp
jae
xor
ss
jo
xor
push
pop
inc
xor
addr16
outsl
pop
dec
aaa
inc
pop
outsb
inc
dec
popa
insl
xor
pop
ja
ss
xor
popa
dec
xor
inc
ja
dec
bound
gs
dec
add
add
xor
pop
jp
push
fs
xor
push
jne
dec
jo
fs
dec
jno
inc
jns
inc
push
push
cmp
xor
pop
push
inc
dec
inc
push
data16
inc
jne
dec
dec
outsb
imul
xor
inc
jne
pop
inc
push
push
inc
pop
inc
insl
cmp
push
inc
je
dec
outsb
push
ja
inc
inc
push
inc
imul
push
push
add
add
pop
jb
jp
jne
outsl
xor
push
inc
push
push
ja
inc
js
dec
dec
jb
xor
ja
inc
dec
jbe
inc
dec
push
dec
dec
xor
insl
push
push
jne
dec
inc
popa
inc
xor
jns
inc
fs
xor
push
inc
xor
insb
inc
dec
outsb
push
xor
xor
xor
push
outsb
xor
pop
dec
imul
je
add
add
inc
imul
jae
dec
push
dec
jo
add
add
or
add
aaa
addr16
inc
je
pop
pop
ss
dec
cmp
popa
inc
ja
gs
dec
jns
outsl
jo
jo
xor
popa
xor
aaa
push
dec
push
push
arpl
imul
aaa
inc
inc
inc
dec
data16
cmp
popa
xor
xor
push
dec
jns
gs
aaa
js
push
pop
push
jbe
jo
pop
inc
xor
outsl
dec
jns
insl
dec
dec
arpl
inc
jo
xor
pop
gs
xor
outsl
aaa
push
dec
xor
push
dec
dec
push
dec
dec
xor
bound
jp
je
push
popa
jo
inc
xor
dec
pop
push
jb
jo
dec
pop
jp
imul
bound
cmp
jae
je
inc
inc
addr16
inc
jbe
push
xor
push
inc
xor
pop
imul
outsb
dec
jne
inc
xor
push
addr16
add
dec
jno
jno
xor
inc
dec
dec
jns
push
pop
bound
xor
push
imul
xor
ja
jo
outsb
gs
cmp
bound
imul
push
jno
imul
imul
imul
xor
jno
push
dec
aaa
push
inc
outsl
cmp
ja
xor
inc
xor
xor
ss
dec
imul
dec
jo
jp
jno
pop
inc
gs
push
xor
bound
inc
dec
jae
dec
fs
imul
ja
push
jb
push
imul
pop
jno
pop
ja
push
je
dec
dec
jo
push
xor
insl
je
add
add
push
push
inc
insb
cmp
dec
push
push
inc
jp
ja
push
dec
dec
cmp
dec
push
push
ja
insl
add
add
insl
xor
jo
jno
addr16
dec
dec
push
gs
imul
xor
outsb
push
je
add
add
outsl
je
inc
push
push
imul
inc
push
dec
outsb
ja
push
bound
push
xor
imul
jp
addr16
pop
jbe
inc
xor
outsl
arpl
dec
ss
cmp
cmp
outsl
xor
push
push
jb
ja
xor
jp
xor
push
addr16
dec
dec
dec
xor
jo
xor
dec
push
xor
inc
outsl
push
jns
je
outsb
dec
dec
jp
push
jne
xor
xor
gs
insb
outsb
jo
cmp
xor
ja
inc
push
imul
aaa
inc
add
add
gs
push
bound
insl
inc
outsl
pop
push
dec
imul
arpl
jbe
dec
jno
dec
inc
pop
jns
xor
imul
xor
jb
ss
inc
bound
inc
jb
xor
dec
push
arpl
xor
jno
dec
jbe
xor
push
insb
inc
outsl
ss
push
arpl
dec
xor
js
push
dec
inc
inc
imul
push
insb
inc
popa
pop
arpl
jp
push
jno
push
imul
xor
outsl
dec
push
inc
push
dec
push
jae
dec
jbe
jne
jae
xor
dec
inc
dec
cmp
jb
dec
dec
xor
push
add
add
dec
inc
inc
inc
je
inc
dec
dec
add
xor
adc
addr16
xor
add
imul
imul
ss
imul
insb
jne
jns
xor
outsb
xor
inc
xor
push
ss
outsl
xor
push
cmp
insb
dec
push
outsb
outsl
push
inc
insb
je
dec
imul
addr16
gs
push
ss
imul
inc
push
xor
dec
jae
xor
xor
add
add
inc
jbe
addr16
pop
dec
push
push
inc
xor
inc
pop
jne
xor
inc
pop
push
inc
ja
outsl
pop
jb
dec
inc
fs
push
addr16
xor
dec
push
outsb
cmp
outsl
push
push
bound
add
inc
dec
data16
aaa
dec
xor
popa
pop
outsl
dec
insl
inc
inc
push
arpl
xor
jb
pop
push
dec
push
push
push
cmp
imul
xor
push
ss
outsl
dec
insl
push
cmp
jb
push
xor
inc
dec
push
inc
popa
dec
dec
push
ja
push
insl
inc
dec
dec
xor
pop
jno
push
inc
dec
pop
imul
add
add
dec
push
ja
push
xor
xor
inc
js
push
aaa
jns
jae
pop
push
jae
push
arpl
ss
jno
je
push
inc
inc
insb
cmp
dec
jae
inc
xor
pop
add
xor
je
jbe
insl
dec
gs
jbe
bound
dec
dec
outsb
push
jns
push
aaa
xor
push
js
xor
jns
push
outsb
push
jns
push
dec
arpl
inc
jns
inc
je
inc
jno
jbe
inc
aaa
imul
push
jo
gs
imul
push
xor
inc
push
popa
pop
outsb
aaa
xor
cmp
jo
xor
gs
push
jp
arpl
inc
fs
jno
add
cmp
ja
xor
jp
xor
je
imul
xor
aaa
inc
inc
dec
inc
insl
jno
je
jo
je
push
dec
jb
push
jbe
xor
dec
imul
aaa
push
ja
arpl
dec
inc
jbe
push
dec
outsb
data16
outsl
pop
xor
push
xor
xor
imul
cmp
imul
push
popa
xor
push
push
dec
ja
cmp
arpl
dec
jns
add
add
dec
dec
pop
xor
insb
pop
dec
inc
push
inc
jb
push
inc
pop
push
push
jne
dec
push
ss
push
imul
gs
inc
popa
arpl
aaa
inc
dec
pop
inc
arpl
dec
cmp
imul
inc
pop
pop
gs
jno
push
inc
inc
inc
js
dec
push
arpl
jbe
push
xor
cmp
ss
insb
pop
jae
insl
arpl
aaa
inc
cmp
push
inc
inc
dec
ss
jae
ss
pop
inc
pop
jb
push
pop
imul
push
xor
pop
push
xor
outsl
push
push
dec
jno
push
pop
dec
push
push
xor
pop
xor
xor
push
add
inc
arpl
dec
inc
push
arpl
outsb
xor
outsb
jbe
push
insb
bound
xor
dec
jp
insb
xor
dec
push
insb
push
je
inc
dec
dec
push
inc
fs
push
inc
jo
push
outsl
ss
jp
add
add
jo
push
dec
inc
push
imul
ja
dec
push
push
popa
insl
xor
popa
imul
push
push
dec
popa
xor
push
imul
xor
cmp
inc
bound
xor
outsb
outsl
pop
xor
push
push
jo
pop
dec
fs
dec
inc
inc
push
push
push
push
aaa
aaa
xor
je
push
push
je
ss
xor
jae
ja
inc
insl
xor
xor
jb
dec
bound
jns
dec
gs
js
imul
xor
arpl
inc
jne
inc
dec
push
push
pop
ss
dec
jo
dec
push
push
inc
xor
jne
outsb
bound
jp
aaa
inc
jp
push
add
add
add
add
shrb
mov
enter
jb
jne
outsl
popa
dec
push
inc
imul
pop
xor
push
jo
dec
dec
dec
ja
outsl
dec
dec
ss
outsl
xor
je
pop
push
insl
add
add
add
push
add
add
add
adcb
add
inc
add
sbbb
add
pop
add
addb
add
pop
push
add
jo
add
add
add
add
add
mov
add
add
add
add
add
or
add
rolb
add
or
add
loopne
add
sldt
add
add
add
add
add
add
add
add
add
add
adc
add
or
add
add
add
xor
add
add
inc
xor
add
add
pop
xor
add
insb
aaa
add
adc
add
cmpb
add
add
mov
add
add
add
add
popa
add
add
and
jb
pop
add
pop
add
jno
jns
xor
push
add
add
dec
add
jp
and
imul
add
push
add
push
add
jns
add
add
add
add
data16
add
jae
xor
cmp
jns
push
add
add
add
push
add
add
and
xor
aaa
add
jo
push
add
push
add
add
inc
add
add
add
bound
push
add
add
add
add
inc
add
push
add
add
dec
add
popa
add
inc
add
jae
jb
and
jne
cmp
jae
insl
add
add
add
data16
jo
cmp
jb
inc
add
pop
add
add
add
xor
inc
add
add
xor
pop
add
add
jns
data16
cmp
xor
add
add
add
pop
add
pop
add
cmp
dec
add
add
insl
add
add
js
dec
add
add
push
add
push
add
add
add
inc
add
add
pop
add
arpl
push
add
add
add
add
inc
add
xor
add
inc
add
jp
xor
push
add
pop
add
add
inc
add
add
add
xor
push
add
add
add
push
add
push
add
and
jno
cmp
aaa
add
push
imul
dec
add
inc
add
add
ja
dec
add
push
add
xor
push
add
push
add
add
and
push
add
data16
add
cmp
inc
add
bound
adc
dec
add
bound
push
add
add
and
dec
add
js
push
add
ja
inc
add
add
add
add
add
and
add
popa
add
add
and
jb
pop
add
pop
add
jno
jns
xor
push
add
add
dec
add
jp
and
imul
add
push
add
push
add
jns
add
add
add
add
data16
add
jae
xor
cmp
jns
push
add
add
add
push
add
add
and
xor
aaa
add
jo
push
add
push
add
add
inc
add
add
add
bound
push
add
add
add
add
inc
add
push
add
add
dec
add
popa
add
inc
add
jae
jb
and
jne
cmp
jae
insl
add
add
add
data16
jo
cmp
jb
inc
add
pop
add
add
add
xor
inc
add
add
xor
pop
add
add
jns
data16
cmp
xor
add
add
add
pop
add
pop
add
cmp
dec
add
add
insl
add
add
js
dec
add
add
push
add
push
add
add
add
inc
add
add
pop
add
arpl
push
add
add
add
add
inc
add
xor
add
inc
add
jp
xor
push
add
pop
add
add
inc
add
add
add
xor
push
add
add
add
push
add
push
add
and
jno
cmp
aaa
add
push
imul
dec
add
inc
add
add
ja
dec
add
push
add
xor
push
add
push
add
add
and
push
add
data16
add
cmp
inc
add
bound
adc
dec
add
bound
push
add
add
and
dec
add
js
push
add
ja
inc
add
add
add
add
add
and
add
popa
add
add
and
jb
pop
add
pop
add
jno
jns
xor
push
add
add
dec
add
jp
and
imul
add
push
add
push
add
jns
add
add
add
add
data16
add
jae
xor
cmp
jns
push
add
add
add
push
add
add
and
xor
aaa
add
jo
push
add
push
add
add
inc
add
add
add
bound
push
add
add
add
add
inc
add
push
add
add
dec
add
popa
add
inc
add
jae
jb
and
jne
cmp
jae
insl
add
add
add
data16
jo
cmp
jb
inc
add
pop
add
add
add
xor
inc
add
add
xor
pop
add
add
jns
data16
cmp
xor
add
add
add
pop
add
pop
add
cmp
dec
add
add
insl
add
add
js
dec
add
add
push
add
push
add
add
add
inc
add
add
pop
add
arpl
push
add
add
add
add
inc
add
xor
add
inc
add
jp
xor
push
add
pop
add
add
inc
add
add
add
xor
push
add
add
add
push
add
push
add
and
jno
cmp
aaa
add
push
imul
dec
add
inc
add
add
ja
dec
add
push
add
xor
push
add
push
add
add
and
push
add
data16
add
cmp
inc
add
bound
adc
dec
add
bound
push
add
add
and
dec
add
js
push
add
ja
inc
add
add
add
add
add
and
add
popa
add
add
and
jb
pop
add
pop
add
jno
jns
xor
push
add
add
dec
add
jp
and
imul
add
push
add
push
add
jns
add
add
add
add
data16
add
jae
xor
cmp
jns
push
add
add
add
push
add
add
and
xor
aaa
add
jo
push
add
push
add
add
inc
add
add
add
bound
push
add
add
add
add
inc
add
push
add
add
dec
add
popa
add
inc
add
jae
jb
and
jne
cmp
jae
insl
add
add
add
data16
jo
cmp
jb
inc
add
pop
add
add
add
xor
inc
add
add
xor
pop
add
add
jns
data16
cmp
xor
add
add
add
pop
add
pop
add
cmp
dec
add
add
insl
add
add
js
dec
add
add
push
add
push
add
add
add
inc
add
add
pop
add
arpl
push
add
add
add
add
inc
add
xor
add
inc
add
jp
xor
push
add
pop
add
add
inc
add
add
add
xor
push
add
add
add
push
add
push
add
and
jno
cmp
aaa
add
push
imul
dec
add
inc
add
add
ja
dec
add
push
add
xor
push
add
push
add
add
and
push
add
data16
add
cmp
inc
add
bound
adc
dec
add
bound
push
add
add
and
dec
add
js
push
add
ja
inc
add
add
cmp
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
push
addb
or
cmp
push
addb
add
add
add
add
add
add
add
pushf
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
js
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
add
inc
add
add
push
add
add
add
inc
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
xor
xor
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
xor
xor
push
outsl
add
add
add
xor
push
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
add
dec
add
add
add
add
outsl
add
add
je
dec
add
insl
add
add
add
push
dec
add
inc
add
inc
add
add
inc
add
dec
add
add
add
adc
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
cmp
xor
add
add
xor
xor
xor
xor
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
aas
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
gs
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
