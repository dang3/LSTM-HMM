push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
pusha
mov
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
push
lea
push
call
mov
push
lea
push
call
lea
push
call
push
push
push
push
push
mov
push
lea
push
call
mov
cmpl
je
cmpl
jne
int
xor
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
push
mov
push
push
call
test
je
mov
xor
jmp
movzbl
cmp
je
int
xor
jmp
movl
movl
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
movl
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
mov
mov
mov
push
call
add
mov
push
mov
push
mov
add
push
call
add
mov
sub
push
mov
push
mov
push
call
add
popa
mov
pop
mov
add
push
ret
pop
pop
pop
mov
pop
ret
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jge
mov
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jae
mov
jmp
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jae
mov
add
mov
add
mov
add
mov
mov
add
mov
mov
add
mov
xor
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
jmp
mov
add
mov
mov
cmp
jae
movl
mov
add
movzbl
mov
movl
mov
add
movzbl
cmp
je
mov
jmp
jmp
xor
mov
pop
ret
int3
int3
push
mov
sub
mov
cmpl
je
movl
mov
mov
sub
shr
mov
mov
add
mov
movl
jmp
mov
add
mov
mov
cmp
jae
mov
mov
movzwl
sar
cmp
jne
mov
mov
movzwl
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
jmp
mov
add
mov
mov
cmp
jge
mov
add
movzbl
mov
movl
mov
add
mov
mov
movl
jmp
mov
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
.byte
add
add
add
sub
inc
add
je
cmp
inc
inc
jnp
cmp
pop
jo
divb
jb
insl
jns
adc
add
outsl
popa
divb
jb
insl
jns
repnz
add
in
je
aad
jne
push
popa
outsb
into
jb
inc
sub
add
jmp
jns
imul
imul
je
sub
add
insl
jp
push
add
insb
inc
imul
jns
sub
add
insl
jp
dec
dec
jnp
insb
dec
push
popa
outsb
inc
jae
push
sub
add
es
add
sbb
add
sbb
add
inc
add
sbb
sbb
or
add
sbb
add
jns
push
clc
outsl
arpl
jnp
fldcw
add
outsl
popa
fs
bound
insb
jns
add
pop
add
sarl
outsb
iret
jb
xor
jp
insb
sub
add
push
jbe
cwtl
push
cs
add
xchg
inc
insl
jae
push
add
xchg
arpl
cs
dec
add
dec
inc
insl
arpl
add
je
jb
aas
inc
insb
inc
dec
dec
outsl
arpl
pop
add
push
dec
jb
pop
inc
insb
inc
push
dec
outsl
arpl
pop
add
testl
add
insl
inc
add
add
inc
jb
fistpll
insb
push
fmuls
gs
push
add
loop
popa
jo
dec
insb
outsl
leave
push
add
roll
dec
xor
push
inc
insb
insb
sub
add
insl
inc
je
cwtl
dec
arpl
push
dec
mov
add
pop
rolb
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
movb
sub
add
sub
add
sub
add
sub
add
sub
jmp
add
sub
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
add
add
sub
jmp
add
pop
jmp
jmp
sub
add
sub
add
sub
add
and
cmp
ss
jmp
sub
add
sub
add
sub
add
xchg
pop
add
stc
push
add
sub
add
xor
pop
add
mov
pop
add
sbb
add
daa
pop
add
sub
add
add
pop
add
sub
add
sub
add
sbb
add
cmp
pop
add
sub
sub
cmp
add
add
adc
add
add
adc
add
jecxz
add
add
add
add
add
negl
add
push
add
ret
push
add
rcrl
add
rcrl
add
ret
push
add
ret
push
add
xchg
mov
add
add
push
add
xchg
push
add
xchg
push
add
sbbl
add
push
add
push
push
add
inc
push
add
inc
push
add
push
push
add
push
push
add
inc
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
outsl
gs
add
sub
adc
sub
fwait
add
sub
inc
movl
add
enter
sub
or
pusha
popa
push
addr16
sub
add
enter
enter
enter
enter
enter
enter
or
push
jno
mov
pushf
push
add
enter
pop
jmp
popf
sub
jmp
add
pop
jmp
add
sub
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
jmp
add
add
add
pop
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
pop
add
sub
add
sub
add
sub
add
sub
add
inc
sbb
add
add
push
sbb
add
add
inc
sbb
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
ret
and
add
and
add
and
add
and
add
and
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
enter
or
add
sub
add
lret
sub
xchg
add
loopne
add
add
add
push
add
insb
nop
add
dec
nop
add
pushf
nop
add
dec
nop
add
lods
nop
add
pop
xchg
nop
sub
in
sub
icebp
nop
sub
ret
nop
sub
lds
sub
pop
xchg
sub
icebp
nop
sub
jno
sub
adcl
add
pop
xchg
sub
daa
xchg
sub
dec
xchg
sub
inc
xchg
sub
sti
xchg
sub
lahf
xchg
sub
xchg
xchg
sub
popf
xchg
sub
jns
sub
dec
xchg
sub
dec
add
pop
xchg
cmpsb
sub
lods
cmpsb
sub
pop
cmpsl
sub
in
cmpsb
sub
frstor
sub
test
sub
add
sub
add
and
and
xchg
add
add
and
mov
and
stos
xchg
add
and
dec
xchg
add
pop
add
pop
add
iret
pop
add
pop
add
sub
add
pop
add
pop
add
pop
add
mov
pop
add
sahf
pop
add
xchg
pop
add
sahf
pop
add
mov
pop
add
pop
add
mov
scas
add
movsl
scas
add
sti
scas
add
lea
add
ret
scas
add
inc
test
add
test
add
pop
lods
add
and
add
xchg
test
add
cmpsl
test
add
dec
test
add
mov
stos
add
sub
add
out
stos
add
stos
add
mov
stos
add
adc
stos
add
sub
xchg
add
mov
add
lock
add
enter
lock
add
in
add
notb
add
or
add
es
add
inc
xchg
add
bound
add
or
add
push
test
sub
test
add
sub
test
sub
test
add
fcoml
add
in
xchg
add
xchg
xchg
add
call
xchg
add
sarb
sub
addb
pop
mov
jg
pop
xchg
pop
outsl
jg
pop
ja
sub
imul
cmp
pop
dec
jg
pop
xor
pop
fnstsw
pop
idivl
pop
in
sub
jge
sub
xchg
jle
sub
popf
jle
pop
sub
jle
pop
jne
sub
popa
jle
pop
xlat
jge
pop
sarl
pop
mov
jge
pop
in
jge
pop
fnstcw
pop
lret
jge
pop
sti
jge
pop
jmp
sub
adc
sub
add
stos
sbb
cmp
sbb
subl
sbb
push
stos
sbb
and
stos
sbb
icebp
stos
sbb
aad
sbb
ljmp
sbb
out
sbb
cmpl
sbb
aaa
movsl
sbb
xchg
sbb
xlat
lea
lret
test
lahf
jge
add
stos
sbb
inc
pusha
sbb
lcall
add
mov
pop
add
testl
add
add
sbb
sbbb
add
xchg
sbb
add
jp
add
add
push
jnp
add
add
push
jnp
add
add
mov
add
xchg
mov
add
xchg
mov
add
lret
pushf
add
mov
pushf
add
negl
add
xchg
fwait
add
leave
fwait
add
fistps
add
add
add
add
fwait
add
rcrl
mov
sub
mov
sub
mov
sub
mov
sub
add
out
add
stos
mov
mov
add
jo
add
pop
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
add
test
sub
add
push
xchg
add
mov
add
sub
xchg
add
notb
sub
mov
sub
add
pop
sbb
sub
decl
sub
mov
pop
fwait
mov
pop
lea
sub
imul
pop
mov
sub
lods
lea
pop
mov
lea
pop
sub
popl
sub
cmp
sub
mov
mov
pop
fisttps
sub
arpl
sub
ja
sub
inc
mov
pop
and
mov
pop
add
mov
add
mov
and
lds
and
stos
lcall
popf
lcall
popf
mov
and
adc
cwtl
and
jecxz
and
jmp
and
mov
and
leave
mov
and
gs
and
jno
and
pop
fwait
and
pop
cwtl
and
sti
fwait
and
or
pop
add
mov
pop
add
pop
add
mov
lcall
lods
cltd
add
test
add
mov
lret
cltd
add
cmp
scas
add
arpl
add
rcrl
add
gs
add
mov
add
fistps
add
and
add
add
imul
mov
add
xchg
jle
add
jg
add
add
xchg
jg
add
loopne
add
xchg
add
add
add
sub
add
sbb
add
mov
movsl
add
adc
add
pop
movsl
add
bound
add
mov
add
mov
add
roll
stos
or
stos
mulb
add
je
add
mov
cmpsb
add
and
cmpsb
add
sub
add
sub
add
stos
ljmp
stos
push
jmp
sub
out
add
lahf
cmc
add
lahf
or
movsl
sub
fldenv
sub
cli
add
lahf
xchg
sub
jmp
sahf
sub
sti
popf
sub
in
popf
sub
out
popf
sub
stc
popf
sub
repz
sub
pop
sahf
sub
adc
popf
add
pop
sub
sub
cmp
sub
or
sub
pop
sahf
sub
addr16
sub
add
sbb
push
mov
add
movsb
sbb
xchg
pushf
sbb
and
add
les
inc
mov
pop
add
xchg
or
sbb
push
mov
dec
xchg
in
sbb
jmp
add
add
add
pop
add
sub
add
or
pop
adc
adc
cmpsb
or
les
not
in
adc
enter
or
aam
cmc
cmp
adc
pop
add
jecxz
inc
loopne
or
mov
xchg
imull
mov
dec
xchg
inc
mov
fiaddl
outsb
xor
repnz
clc
imul
lahf
jbe
repz
jge
sub
fadds
idivb
aam
notl
loop
inc
add
dec
mov
sub
jo
push
call
mov
or
cwtl
mov
push
adc
sub
sbb
popa
aaa
fs
arpl
lret
mov
jo
xchg
outsl
outsl
dec
stc
and
xchg
out
outsl
imul
test
and
lods
inc
sub
stos
inc
sub
add
sub
add
sub
push
jne
lods
sbb
sub
addl
mov
jge
stos
incb
cli
test
enter
aaa
addl
mov
cmp
stos
pop
out
cmc
push
fsts
xchg
jmp
xorl
or
add
out
imul
jae
pop
loope
sub
jmp
add
pop
jmp
add
pop
jmp
or
in
es
loope
cs
mov
imul
flds
xor
mov
jmp
pop
or
pop
dec
incl
call
pop
stc
add
pop
sub
jmp
pop
add
cs
ljmp
sub
icebp
sub
add
lahf
add
sub
loope
ljmp
pop
add
sub
leave
sub
add
sub
or
and
jmp
pop
adc
sbb
cs
sub
add
and
add
and
jmp
xor
sti
add
and
jmp
xor
add
filds
fldenv
sbb
jmp
xor
call
and
add
and
inc
add
loopne
jae
push
add
pop
add
sbb
push
adc
add
js
adc
cmp
adc
rolb
repnz
add
sbb
adc
sub
adc
mov
add
or
add
sbb
add
adc
add
sbb
ret
pop
push
add
pop
adc
mov
jecxz
mov
sub
ret
pop
je
xchg
pop
xor
xchg
adc
add
or
add
sbb
add
mov
test
mov
inc
sub
or
sub
or
mov
cwtl
sub
or
mov
jl
sub
or
sub
or
sub
or
mov
or
mov
or
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
jmp
or
pop
jmp
or
call
pop
and
push
jmp
or
push
jmp
or
jmp
or
pop
jmp
or
jmp
or
pop
jmp
or
jmp
or
pop
jmp
or
test
or
push
jmp
or
or
pushw
add
and
add
xor
add
xor
call
and
add
xor
add
es
fldenv
add
xor
jmp
mov
add
xor
jmp
es
add
xor
add
xor
call
and
add
xor
add
es
add
add
add
xor
jmp
and
jmp
xchg
adc
add
sbb
add
adc
add
adc
add
addl
inc
adc
add
push
add
pop
add
sbb
inc
adc
add
adc
add
adc
add
adc
add
sbb
add
adc
add
adc
add
adc
add
adc
add
adc
add
sbb
rcll
push
add
adc
add
lds
sub
mov
jne
mov
xor
sub
push
or
sub
or
sub
or
mov
ljmp
or
sub
or
sub
or
enter
enter
fiaddl
sub
or
enter
enter
enter
enter
enter
enter
fadds
sub
or
pop
jmp
or
pop
cli
add
pop
jmp
or
jmp
add
pop
jmp
or
dec
pop
jmp
or
pop
jmp
or
push
jmp
add
pop
jmp
or
pop
jmp
add
pop
jmp
or
jmp
add
pop
jmp
or
jmp
or
pop
jmp
or
jmp
fldcw
and
jmp
and
add
add
add
add
pop
add
cs
call
and
call
cs
xor
jmp
push
lea
jmp
xor
add
push
int
fldcw
sub
jmp
and
add
push
popf
add
sub
jmp
and
call
sub
add
xor
and
jmp
add
sub
jmp
ret
sub
ret
sub
add
and
add
sub
ret
sub
add
and
add
sub
add
and
add
sub
add
sub
add
addb
sub
inc
sub
add
push
add
pop
add
sbb
inc
sub
add
adc
js
add
cmp
add
roll
loop
adc
adc
push
add
sub
or
or
sub
or
sub
add
or
or
mov
jecxz
mov
or
or
or
sub
add
sub
or
or
sub
or
add
add
sub
or
or
sub
add
sub
or
or
or
sub
or
or
enter
add
sub
or
jmp
or
pop
jmp
or
jmp
add
pop
jmp
or
pop
hlt
or
pop
cli
add
jmp
or
pop
pop
jmp
add
pop
jmp
or
jmp
or
pop
jmp
or
push
jmp
add
push
jmp
or
pop
jmp
or
jmp
fldt
push
add
and
jmp
xor
xor
add
and
jmp
add
add
add
mov
fldcw
and
jmp
and
add
sub
call
and
call
sub
add
and
jmp
mov
jmp
and
add
ss
add
cmp
add
and
jmp
ss
and
add
add
fldl
add
mov
outsb
add
and
mov
add
and
add
and
add
sub
add
mov
push
add
and
add
mov
jno
andl
xchg
sub
add
or
andl
andl
push
sub
add
addl
push
sub
add
add
add
add
add
inc
and
add
sbb
adc
xchg
add
mov
cmp
or
or
sub
or
sub
adc
or
or
sub
or
sub
or
sub
or
sub
or
sub
incb
sub
or
or
sub
or
or
sub
decb
or
sub
or
sub
or
sub
or
or
sub
cld
pop
sub
or
pop
jmp
or
pop
std
cld
js
jmp
or
jmp
cld
sbb
jmp
or
pop
jmp
or
pop
jmp
or
jmp
cld
sub
jmp
or
cmp
hlt
or
cli
cld
dec
pop
jmp
or
pop
jmp
cld
and
jmp
or
pop
jmp
or
pop
jmp
or
push
jmp
fnstenv
sbb
add
xor
add
xor
add
and
add
xor
call
notb
add
and
jmp
add
outsb
add
and
add
and
add
xor
add
and
jmp
xor
add
xchg
lock
call
xor
call
jbe
add
and
add
popa
cld
call
push
sbb
jmp
push
mov
out
add
or
inc
mov
push
add
mov
add
pop
sub
add
add
mov
add
sub
add
mov
cs
mov
add
mov
mov
sarl
incb
shll
add
aam
add
mov
add
xchg
daa
add
add
daa
inc
add
add
daa
add
pop
daa
add
addr16
and
pop
daa
add
sub
add
add
add
add
mov
add
aam
subl
or
sub
or
sub
or
xor
or
sub
or
rorl
add
into
or
sub
or
sbb
or
ss
shrl
or
sub
add
sub
add
sub
add
sub
add
add
stos
add
sub
add
sub
add
pop
jmp
adc
sub
arpl
loopne
iret
sbb
shrb
cmpsb
leave
lds
jnp
and
idivb
neg
idivl
sarb
mov
cmp
mov
mov
int
xchg
adc
and
inc
mov
inc
test
add
add
add
add
adc
cwtl
xchg
stos
xchg
mov
pushf
add
xchg
lret
std
mov
sub
and
add
sbb
aas
pop
inc
dec
int
ds
fnstcw
mov
es
dec
mov
and
inc
mov
imul
shlb
sub
jb
mov
xor
add
inc
cmpsb
in
lret
fcoml
xor
fsubs
and
rcll
sbb
enter
mov
or
insl
push
push
xor
iret
fmulp
jae
xchg
sbb
pop
shlb
lds
mov
or
outsl
das
push
icebp
addr16
call
adc
jecxz
fdivl
dec
fildl
mov
rcrl
mov
xchg
mov
add
imul
jne
inc
push
loope
push
push
out
insl
or
xchg
rolb
arpl
jg
push
loope
insb
sbb
or
movsl
sbb
repnz
ss
insb
call
xlat
or
dec
xorb
sub
mov
jle
lock
outsl
and
pop
mov
roll
mov
aas
aam
pop
gs
jg
mov
push
add
mov
adc
loopne
js
out
pop
enter
xlat
stc
or
imul
jl
xlat
jne
pusha
loopne
and
fwait
lock
or
nop
jle
or
jp
inc
add
aaa
and
and
outsl
or
out
add
int3
je
cmpl
xlat
ficoms
mov
add
pop
mov
rcll
jl
jae
jnp
add
les
and
add
sti
clc
mov
or
sbb
sub
ret
pop
int
xchg
into
popf
sub
cmp
sub
jo
and
cmpsb
rcl
or
movsb
xor
mov
gs
lahf
add
and
outsb
lahf
adc
or
rorb
sbb
push
mov
fsubrl
rorl
iret
mov
cmp
dec
mov
imull
xchg
das
je
and
dec
ret
xor
sub
add
add
add
sbb
or
inc
stos
fists
inc
test
addr16
inc
jne
aas
lret
add
cmp
push
add
or
shlb
sbb
push
or
cmpsb
mov
sub
fcmovbe
ret
shlb
outsb
mov
pop
mov
fs
and
mov
xor
add
femms
jmp
inc
pop
jb
repnz
in
mov
loop
or
jnp
mov
rclb
and
fdivrl
fisttpl
pop
jne
xchg
dec
xchg
fstl
xchg
adc
andl
mov
jne
mov
sbb
or
add
push
add
incb
sbb
cltd
bound
lret
imul
mov
or
ljmp
repz
and
jne
pop
cli
add
jae
push
outsb
push
lock
sarl
fisubrs
push
fdivrs
subb
mov
mov
lahf
lret
pop
add
lds
dec
xchg
add
add
add
in
adc
push
add
jl
outsb
bound
dec
add
popa
cmp
add
stc
mov
jns
loopne
stos
daa
dec
pop
fisubrl
cli
call
adc
push
imul
test
mov
popf
sub
mov
imul
repz
xor
or
mov
add
add
add
add
je
addr16
xchg
xchg
push
enter
mov
jnp
mov
cs
je
push
lods
xchg
stos
sahf
add
add
cld
scas
jae
icebp
test
inc
xor
cmp
push
xor
dec
push
dec
int
sub
mov
movb
add
add
add
add
lods
call
inc
mov
dec
pop
xchg
xchg
popa
inc
shll
jbe
push
dec
xor
mov
sub
out
push
or
adc
inc
fbld
stc
outsl
in
adc
hlt
in
shrb
mov
fisubrs
mov
mov
test
lcall
cmp
push
repz
out
push
mov
ficomps
lock
punpcklwd
int3
pop
dec
ret
push
fildl
adc
lea
jp
mov
push
iret
mov
xchg
and
add
xchg
adc
addr16
xor
push
push
mov
mov
push
lea
xchg
test
pushf
int3
gs
loope
xchg
cli
xchg
loop
clc
stos
fnstsw
lock
push
ljmp
or
sub
dec
inc
and
cltd
pop
std
iret
fildll
out
sbb
lret
or
fcoml
mov
mov
mov
dec
jp
mov
jae
sbbb
std
xchg
and
xchg
lock
sarb
inc
mov
xchg
cmp
icebp
fsubr
and
adc
sbb
cmp
repnz
mov
or
daa
rorb
xchg
je
ror
mov
mov
inc
mov
insl
mov
test
insb
test
cld
lahf
lret
popa
mov
adc
pop
add
loope
sub
clc
dec
repz
pusha
ljmp
fsubrs
xchg
in
xchg
out
hlt
lea
or
mov
push
xor
hlt
adc
out
or
or
or
cmpsb
cmp
mov
or
cmp
insb
xchg
fbld
les
loope
adc
not
lods
push
scas
xchg
add
fwait
add
test
pop
imul
jmp
pop
clc
or
adc
data16
les
out
out
loope
repz
mov
mov
loopnew
sbb
test
in
lahf
sub
cmp
std
sbb
fcomp
call
sbbb
cltd
popf
test
mov
sbb
and
add
add
add
add
sub
nop
push
xor
daa
shll
jo
push
xchg
sahf
inc
jp
pop
arpl
leave
cli
lret
dec
ja
shrb
jl
int3
xor
xlat
or
adc
mov
jle
mov
scas
hlt
pusha
and
mov
add
adc
fwait
dec
inc
mov
mov
bound
leave
cmp
sub
add
cltd
adc
xchg
bound
push
jns
movsl
push
loope
imul
and
icebp
jmp
lea
push
inc
lods
mov
sub
aad
mov
pop
inc
xchg
loop
arpl
sar
cmp
inc
pop
inc
pop
add
inc
push
lea
xchg
nopl
mov
mov
mov
nop
cli
mov
loop
fmulp
mov
lds
lea
push
xchg
jecxz
out
cs
sbb
repnz
test
cmp
ret
adc
or
mov
sti
in
stos
cmp
addr16
mov
pop
jecxz
jnp
cli
xchg
jmp
add
add
lcall
add
push
jnp
xchg
add
and
popa
pop
push
push
outsb
test
or
or
mov
test
lods
jb
or
inc
stc
sbb
bnd
add
push
xchg
das
repnz
mov
sub
aaa
sbb
mov
adc
xchg
stos
adc
outsl
adc
sub
cmp
add
std
adc
mov
pop
jae
dec
cmp
cmp
mov
cmp
insl
inc
aas
sbb
mov
cmp
and
fwait
aaa
int
fidivl
dec
lahf
push
xor
leave
xchg
xor
sbb
xor
imul
test
daa
dec
inc
sub
and
lahf
and
and
and
pop
sub
je
mov
cld
adc
push
jno
cmc
cmp
adc
fs
or
enter
cltd
pop
push
cltd
das
repz
or
mov
jle
lcall
icebp
jne
insl
mov
and
pop
push
cmp
push
jl
add
inc
xor
movb
mov
aas
call
xchg
cli
or
test
add
repnz
icebp
lds
mov
xlat
mov
or
or
pop
sub
pop
push
mulb
daa
pop
jns
push
cmp
dec
mov
cs
pop
jbe
push
test
add
pop
dec
mov
pop
lahf
dec
push
test
stos
pop
sub
pop
sbb
pop
int3
mov
mov
add
dec
pop
sbbb
loopne
aad
jne
xchg
dec
subb
add
and
aas
popa
push
adc
pop
ds
pop
outsl
lcall
mov
nop
cmc
pop
xchg
repnz
pop
jl
jb
imul
add
add
adc
loopne
stc
cmpsl
loopne
not
loop
test
jecxz
fwait
pop
out
icebp
popf
out
dec
xlat
in
sub
in
arpl
out
or
in
or
dec
call
arpl
ljmp
jo
ja
mov
andb
add
xor
cli
mov
sti
shll
stc
mov
pop
clc
mov
mov
xor
repz
icebp
mul
or
loopne
lret
mov
negl
fmull
jecxz
ja
hlt
xchg
mov
fidivrl
sarb
scas
aam
ficomps
xor
out
ss
sub
test
aam
adc
rclb
push
out
cmp
mov
pop
lds
pushf
les
sub
fldenv
sbb
push
push
push
test
stos
adc
imul
jo
cmp
jb
adc
arpl
add
pop
enter
jno
shrb
add
scas
fwait
hlt
mov
mov
jmp
mov
mov
fs
fsubrs
loopne
mov
imul
mov
push
mov
jns
ja
inc
jg
mov
pop
sbb
mov
stos
mov
das
lods
rorb
test
imul
je
outsl
cmpsl
jno
nop
mov
pcmpeqb
cmp
jbe
popf
mov
mov
fdivl
dec
jbe
dec
cmpsl
incl
into
movl
push
int3
lret
lret
sti
ret
into
scas
sbb
pop
push
push
ret
sub
pushf
shrl
add
mov
cmp
bound
xchg
or
mov
bound
mov
ljmp
mov
xor
mov
dec
test
xchg
xchg
icebp
xor
fdivrs
lahf
jl
push
cmp
cld
inc
mov
jmp
dec
fstpt
mov
mov
jns
xchg
arpl
and
xchg
dec
lds
daa
jge
xchg
outsl
call
imul
dec
cmpsb
jnp
repnz
sbb
lock
xchg
movsb
call
jb
lods
inc
pop
arpl
add
es
sub
push
lods
xchg
pop
adc
lds
xchg
sbb
add
or
jns
add
imul
rcrl
dec
das
pop
imul
xchg
icebp
int
test
xchg
mov
dec
in
jmp
push
or
in
movsb
xor
pop
sbb
push
jns
mov
mov
xchg
repnz
push
sahf
mov
dec
add
shlb
pop
outsl
ret
cld
call
rcrl
scas
dec
sbb
add
sbb
inc
sub
xchg
sbb
pop
adc
fdivp
cmpsl
dec
mov
scas
mov
push
mov
into
addr16
jle
mov
and
and
mov
xorl
aaa
jmp
lahf
call
push
out
loopne
add
mov
aaa
fs
or
mov
shlb
pushf
adc
fwait
mov
or
shr
push
icebp
mov
mov
shrl
cmpsl
lcall
jae
sahf
jle
lds
cmp
inc
cmc
push
add
inc
xchg
rcrb
pop
mov
sar
cmc
sub
xchg
sub
cmpsb
xchg
cld
lods
jo
dec
inc
push
and
inc
in
inc
jno
jno
test
loope
test
pop
imul
sar
inc
push
rcr
movsl
jns
xchg
cli
jecxz
fnstcw
test
mov
add
add
add
add
dec
push
adc
pushf
add
insb
pop
mov
test
repnz
inc
fs
and
clc
in
aas
stc
jl
cltd
pop
out
inc
mov
cmp
pop
cmpb
cli
push
xchg
in
xor
sbbl
push
nop
sbb
jecxz
stc
xchg
push
cmp
cmpsl
movsl
cmp
xchg
mov
inc
mov
add
add
add
cld
add
leave
fdiv
scas
inc
inc
and
aad
sahf
mov
jns
and
cld
inc
rolb
std
shl
xor
push
in
xchg
imull
movsb
lahf
pop
xor
and
push
cmp
jae
xlat
cmc
sub
shll
popa
insl
fisubs
xchg
call
scas
cmp
mov
mov
dec
arpl
sbb
mov
push
ficompl
rol
jne
and
or
mov
jmp
jnp
imul
cwtl
scas
jne
inc
adc
xor
movsl
stos
mov
movb
gs
fcoms
lret
imul
lods
das
xor
outsl
pop
out
mov
sbb
ljmp
add
add
roll
pop
sub
cltd
ficoms
fcmovb
mov
outsl
sub
add
ss
jbe
inc
push
mov
fwait
mov
mov
inc
subb
pop
rolb
mov
aaa
loop
xchg
cmp
sub
fcomps
mov
inc
out
repnz
add
add
add
add
enter
movsl
and
push
inc
push
dec
jle
addr16
cmp
popa
outsb
lcall
les
xor
jle
loope
sbb
repz
ds
stos
xor
repz
imul
and
mov
ss
xor
sub
ds
push
jo
cmp
cmpsb
sbb
push
ret
mov
and
mov
insl
inc
int3
out
sti
sub
sti
push
add
int3
test
cmp
ficoms
pop
add
jl
xor
jp
push
mov
xor
hlt
xor
aad
mov
or
movsb
mov
imul
sub
mov
jl
pushf
add
xchg
sbb
fs
and
lock
inc
fimuls
popa
in
das
ja
push
shrb
pusha
xor
shrb
es
sar
leave
dec
je
pop
in
or
add
pop
cmp
sbb
insb
shll
inc
push
cmpsb
sub
sbb
in
dec
or
add
incb
jae
test
inc
jbe
ds
leave
fcoml
stc
push
lret
insb
leave
cmp
pop
aaa
lods
add
lret
xor
roll
push
inc
fcoms
mov
js
mov
cmp
ret
movd
xchg
mov
push
mov
int3
pop
cld
push
cmp
and
das
sub
add
aaa
sub
pop
shrb
call
rorb
mov
jne
cmpsb
out
mov
push
outsl
into
mov
and
jecxz
out
add
dec
jg
lea
push
sbb
aam
and
inc
pop
sub
test
and
sbb
std
pop
or
imul
ja
and
loope
add
adc
imul
xor
pop
pop
push
mov
jne
sti
aam
push
aam
ljmp
xor
aam
inc
dec
gs
adc
repnz
loop
xor
push
and
pop
je
nop
dec
loop
in
inc
cld
loope
xlat
pop
insl
lcall
push
das
jbe
inc
or
inc
mov
xlat
shrb
sub
in
mov
adc
mov
add
add
add
push
cmp
sub
test
and
xchg
xchg
xor
mov
cmp
or
popa
stc
push
jp
leave
cwtl
jecxz
cwtl
and
test
mov
andl
lods
sti
andb
cld
mov
adc
rcrb
dec
jno
scas
xlat
push
es
mov
push
aaa
cmp
sub
cmpsl
into
or
popf
mov
scas
daa
mov
sahf
mov
mov
shrb
xchg
add
adc
ret
and
mull
addr16
pop
ss
sbb
dec
inc
fcomps
aam
shrl
dec
mov
jp
movsb
into
dec
popw
imul
std
insl
out
and
mov
dec
aad
add
add
add
add
add
int
pop
cmpsl
push
push
dec
xchg
jbe
aas
jb
popa
pusha
sub
fdivr
sbb
add
or
lds
out
jmp
sbb
mov
fstps
or
pop
mov
xor
clc
in
and
add
xchg
push
or
sub
adc
pop
outsb
xor
ret
loopne
lods
jo
and
aam
lds
cmc
dec
cwtl
xchg
int
sub
daa
clc
inc
pop
push
leave
stos
jmp
cltd
sbb
daa
mov
cli
pop
dec
cmp
inc
mov
jl
pusha
mov
adc
mov
pop
pushf
test
shl
sbb
cmc
gs
loop
insb
and
jno
pop
pop
addl
add
outsb
push
xlat
inc
pop
fsts
loope
fsub
jbe
dec
out
push
inc
imulb
sub
clc
sbb
lods
incl
dec
mov
rcl
cmp
jle
mov
outsb
out
daa
sub
ret
inc
popa
cltd
or
dec
out
xor
push
idiv
dec
rcr
fldt
icebp
pop
data16
loope
lock
pop
add
push
lds
jg
push
jmp
cmp
rorl
bt
push
jno
xchg
mov
pop
addr16
cmovae
jbe
sbb
imul
mov
mov
and
lea
pop
add
sub
inc
and
push
ret
pop
daa
lds
es
hlt
inc
cmp
ficoms
or
scas
cltd
call
loope
outsb
dec
ss
pop
jle
icebp
test
pop
into
lds
fcmovnb
lret
jo
jo
push
cwtl
inc
cwtl
xor
call
mov
mov
or
jecxz
add
and
stc
push
fcomip
lret
xor
mov
insb
add
sub
aas
cmc
sub
lods
or
enter
or
pop
ja
fwait
loope
outsl
mov
lds
mov
pop
inc
inc
xchg
mov
inc
popf
jne
sbb
scas
idivl
fldl
jp
add
cmp
pop
push
cld
inc
inc
cmp
daa
inc
and
andnps
dec
sbb
xchg
mov
imul
pop
add
push
decb
scas
int3
pop
push
pop
int
cmp
mov
mov
inc
dec
fldcw
jl
stos
aaa
inc
mov
pop
adc
mov
addb
dec
bound
jecxz
rorb
loop
or
std
mov
add
in
leave
mov
push
sti
adc
repz
js
sbb
mov
test
xor
push
xchg
fwait
or
xchg
push
sbbl
fistps
cs
out
cmp
int
clc
fldcw
repz
pop
pushf
in
ds
and
add
mov
mov
shr
lret
and
idiv
pusha
add
loopne
push
or
sub
fiaddl
stos
ret
in
adc
sbb
sub
cmpb
jg
mov
mov
je
sub
mov
mov
fidivs
inc
out
xor
repz
sbb
imul
nop
or
cli
mov
push
js
in
cmp
cwtl
dec
add
xchg
test
cli
jecxz
push
lret
mov
xchg
pop
insl
ds
and
lret
dec
ret
test
inc
and
mov
jo
shrb
in
in
roll
mov
xor
test
jo
mov
xchg
rclb
flds
je
jge
adc
sub
decl
fadds
add
add
add
flds
push
bound
cmp
hlt
jge
ret
lret
push
xchg
cld
shll
cmpsl
mov
repnz
stc
arpl
aam
mov
arpl
bound
cmp
hlt
jg
mov
push
add
cmovno
jno
jnp
pop
push
std
mov
mov
xchg
xchg
mov
pop
dec
push
fwait
or
rol
pusha
jno
cmpl
inc
cmpb
aad
push
iret
aam
push
nop
neg
out
out
pushf
adc
sbb
mov
jae
mov
ja
pushf
insb
dec
mov
fcmove
int3
leave
mov
xor
mov
bswap
gs
add
clc
push
fdivs
cmp
inc
lcall
add
mov
sbb
pop
pop
pop
orl
stos
fmull
sbb
add
cltd
pop
daa
lock
mov
aam
mov
jo
xchg
mov
and
add
scas
mov
filds
out
or
inc
repz
dec
ss
rcll
das
add
lea
test
loop
sub
in
movsl
pop
or
data16
mov
mov
lcall
mov
sbb
or
mov
xorl
imul
sbb
or
dec
cmp
add
add
add
add
xlat
hlt
sahf
sbb
loope
cmp
out
js
add
sub
push
jne
aam
jbe
mov
idivb
ret
mov
push
push
cmpsl
mov
push
jb
mov
popf
jnp
test
out
mov
mov
sub
aas
sbb
mov
in
gs
jb
sbb
xchg
popa
add
outsl
sub
cmp
cwtl
xchg
cmp
dec
mov
jae
aad
pop
fistps
add
sbb
insb
jg
xchg
ds
lret
mov
movl
mov
in
jmp
pop
cld
fiadds
out
jg
repnz
rcrb
mov
jbe
int
mov
adc
repnz
scas
add
popf
mov
pop
out
add
es
or
add
nop
cmpsl
and
push
mov
ror
pusha
pop
rol
inc
rorl
jno
cmp
hlt
int
or
pushf
push
lcall
xchg
rcrb
negl
out
pop
ljmp
aaa
pop
shrb
cmp
add
arpl
popa
leave
dec
adc
pop
push
or
scas
or
sub
push
std
aad
xor
movb
jmp
insb
jns
in
pop
imul
push
cmp
mov
je
data16
rcll
aam
aaa
mov
mov
add
enter
xchg
dec
or
jne
sbb
arpl
std
push
or
cmovne
movsl
add
sbb
scas
push
fisttpl
inc
popf
and
inc
outsb
xor
pop
jae
shl
sub
mov
mov
add
rcrl
sbb
push
and
fldcw
dec
cmpsb
pop
jle
pop
mov
add
add
add
inc
pop
jecxz
add
mov
xchg
ret
stos
xchg
push
pushf
in
cli
sub
jo
xchg
sbb
push
iret
int3
imul
mov
gs
fsts
pop
addr16
arpl
or
repnz
test
xor
cli
and
or
scas
mov
imul
mov
fs
mov
pop
mov
js
push
jne
pushf
dec
aaa
sub
inc
cli
sbb
sbb
jle
loope
inc
test
sbb
out
ret
sbb
jge
std
or
hlt
enter
mov
imul
dec
inc
pop
sbb
sub
aaa
cmpsl
adc
mov
xchg
xchg
or
aam
test
push
mov
add
add
add
xorb
and
lcall
pop
sub
jge
and
mov
cmp
lret
sub
mov
xor
int
xor
clc
lds
and
icebp
xor
scas
or
jmp
mov
js
xchg
inc
jns
jnp
jnp
fisubrs
add
add
add
xchg
pop
dec
cmp
stos
pop
les
lds
inc
lret
jle
xchg
insb
mov
mov
and
adc
dec
fsts
xor
pop
lds
mov
mov
neg
lret
or
and
xchg
cmp
mov
xorb
add
add
add
jg
lret
push
mov
cmpsb
arpl
jb
lcall
xchg
test
fldt
mov
js
mov
adc
dec
lods
adc
pop
and
in
push
ljmp
jecxz
aas
jmp
lcall
call
pop
xchg
lcall
inc
fwait
inc
cmpsl
xchg
xchg
test
mov
ss
or
enter
xlat
add
inc
jge
xor
pushf
pop
in
mov
xor
xor
mov
add
rcrb
sahf
or
mov
icebp
and
lock
sub
cmp
lods
push
push
mov
in
movsb
push
push
mov
mov
movsl
and
mov
mov
add
add
add
add
add
mov
sbb
mov
pop
sbb
hlt
mov
stos
addr16
lock
rolb
sbb
mov
out
lret
repnz
jne
cld
fstpl
dec
adc
dec
lret
loope
gs
add
dec
mov
subb
push
xor
or
pop
sub
insb
add
outsb
loop
mov
sarl
jmp
aas
xchg
movsl
push
xchg
repnz
int
or
pop
push
jno
mov
cltd
les
rcl
dec
lock
lods
es
sbb
sarl
pop
sbb
mov
mov
jbe
pop
stc
lahf
inc
pushf
loopne
jmp
aas
jl
movsl
test
inc
add
testl
shrl
roll
out
iret
push
gs
cmp
pop
pusha
test
add
movsl
ja
mov
or
cmp
pop
out
sbb
and
gs
push
shrb
imul
cpuid
adc
bound
sub
fistpl
cmc
ljmp
push
jle
mov
sbb
sbb
push
inc
sub
out
lcall
mov
ljmp
xchg
push
inc
pop
hlt
or
add
data16
in
mov
stc
ds
push
mov
test
lahf
xchg
iret
loopne
jno
mov
out
mov
cli
ja
dec
shrl
cmpb
inc
out
dec
lahf
add
inc
int
xor
jmp
movsb
push
test
stos
cwtl
dec
into
mov
cmp
addl
lods
pop
inc
ljmp
js
add
mov
pop
aam
xchg
cmp
sti
aad
xor
scas
into
test
dec
dec
add
rol
jle
xchg
jns
add
aad
cmp
cmp
xor
in
imul
fimull
mov
decb
inc
jle
hlt
call
jae
sbb
or
adc
repz
cmp
mov
jmp
jbe
xchg
add
outsb
repnz
sbb
into
add
push
mov
jl
jmp
xor
aaa
inc
es
cltd
std
aas
mov
mov
mov
xchg
add
aam
mov
inc
fldl
aam
sub
cmp
cltd
test
lcall
xchg
pop
cmp
adc
mov
icebp
xor
inc
imul
adc
add
data16
add
xchg
inc
idiv
cmp
jge
in
push
test
and
call
add
sbb
fisubrl
mov
cwtl
out
mov
fisubrs
addr16
xor
xor
sub
xchg
fdivrp
sub
push
ja
lcall
stos
inc
push
in
cwtl
pushf
andl
call
mov
cmp
mov
or
pusha
inc
jg
nop
add
test
mov
inc
adc
outsl
lret
jns
mov
aad
addr16
mov
pop
jns
js
imul
les
inc
cli
pop
incb
stos
pop
clc
cwtl
xchg
out
push
int3
add
push
lea
scas
jno
sbb
ficoms
ljmp
cmp
dec
out
test
dec
mov
pop
stos
mov
out
and
add
fwait
mov
jne
fcomip
mov
invd
and
jmp
add
pop
jmp
add
pop
jmp
add
sub
jmp
add
pop
call
add
pop
call
add
pop
jmp
sub
jmp
sub
jmp
sub
jmp
sub
ljmp
pop
ljmp
pop
in
add
pop
in
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
clc
verr
add
sub
jecxz
es
cs
out
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
cmp
add
or
add
add
add
add
sbb
add
sbb
add
or
add
lcall
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
push
sbb
add
inc
sbb
add
add
sub
add
sub
or
add
sub
add
sub
or
loop
or
lcall
sub
or
rolb
or
mov
or
and
sub
add
sub
add
sub
or
test
or
add
or
inc
add
sub
add
sub
add
in
or
and
or
movsb
add
sub
sub
add
sub
or
xchg
add
sub
sbb
pop
fwait
add
pop
fildl
xor
pop
add
pop
repz
pop
jae
xor
mov
add
pop
roll
and
push
add
pop
addl
pop
add
and
jecxz
and
arpl
xor
xchg
add
pop
adc
and
and
pop
mov
add
add
add
xor
push
add
pop
roll
pop
out
add
pop
addr16
pop
das
add
pop
cmpsl
add
pop
iret
add
pop
inc
add
pop
xor
xchg
pop
filds
and
push
add
pop
add
es
add
es
add
sub
add
pop
add
sub
add
pop
add
cs
add
sub
add
pop
add
add
add
add
pop
add
sub
add
sub
add
pop
add
cs
add
es
add
es
add
sub
add
sub
add
pop
add
es
add
sub
add
pop
add
es
add
push
and
add
and
add
or
mov
or
xor
or
mov
and
add
shlb
or
cmp
or
lcall
add
or
cli
and
add
or
stos
and
add
and
add
and
add
or
mov
and
add
and
add
and
add
and
add
and
add
or
into
and
add
or
out
and
add
sbb
sub
add
add
add
add
dec
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
or
sti
add
sub
add
sub
add
sub
or
fildl
or
mov
add
sub
add
sub
add
sub
or
mov
or
roll
or
pop
add
sub
or
sub
or
leave
add
sub
add
sub
cmp
pop
cmp
and
mov
add
pop
mov
add
pop
cmp
pop
fiaddl
xor
fiaddl
pop
pop
add
pop
pop
add
pop
repnz
pop
repnz
pop
bound
and
bound
pop
mov
xor
mov
xor
and
and
and
pop
rolb
xor
rolb
xor
inc
add
pop
inc
add
pop
push
add
pop
push
add
pop
ret
pop
ret
pop
loop
xor
loop
xor
add
sbb
push
sub
add
sbb
inc
sub
add
sub
add
sub
add
sub
add
sbb
xor
sbb
loop
sbb
loop
sbb
push
sbb
push
sub
add
sub
add
sub
add
sbb
sub
add
sub
add
sbb
sub
add
sub
add
sub
add
sbb
inc
sub
add
sbb
inc
sub
add
sub
add
sub
add
test
or
hlt
sbb
or
inc
and
add
or
mov
or
mov
or
movsb
sbb
or
adc
or
add
or
push
sbb
add
sbb
or
sbb
or
or
or
mov
add
add
or
dec
sbb
add
or
in
sbb
or
or
or
pop
and
add
add
popa
add
sub
add
sub
or
roll
or
flds
add
loope
or
sub
or
mov
add
sub
add
sub
add
or
dec
add
sub
add
sub
add
sub
pop
sub
add
sub
pop
sub
pop
sub
add
sub
add
sub
add
sub
add
and
pop
adc
pop
in
add
pop
or
add
pop
std
add
pop
fldl
and
pop
ljmp
pop
sub
pop
stos
add
pop
or
pop
mov
and
lret
pop
dec
add
pop
jmp
add
pop
loope
daa
pop
roll
das
pop
in
add
pop
cmc
add
das
pop
in
daa
pop
in
add
pop
jmp
daa
pop
fildl
das
pop
add
sub
shrl
sbb
out
sub
imull
sbb
out
sbb
out
sub
call
sub
loopne
sbb
shrb
sbb
in
sub
hlt
sub
in
sbb
in
sub
ljmp
add
sub
shrb
sbb
out
sub
imulb
sbb
jmp
add
add
add
and
in
sbb
out
sbb
or
add
or
add
or
lock
or
repz
or
jecxz
or
fldenv
or
or
enter
enter
mov
data16
insl
or
insl
or
insl
or
insl
or
insl
or
insl
or
insl
or
insl
or
insb
or
add
insb
or
inc
insb
or
inc
insb
or
data16
or
ss
or
inc
insb
or
inc
imul
adc
imul
in
or
push
add
jl
or
sub
cmc
or
sbb
cmc
or
sub
adc
and
adc
sbb
adc
xor
sub
jne
nopl
sysexit
inc
adc
sub
jne
nopl
sysexit
inc
adc
sub
jne
nopl
sysexit
inc
adc
sub
jne
nopl
adc
push
pop
adc
dec
sbb
sbb
sbb
adc
sbb
or
sbb
icebp
sbb
loope
add
pop
loope
xor
rcrb
push
rcrb
push
add
adc
repz
inc
or
sbb
xor
rcrl
and
add
adc
add
adc
repnz
inc
or
push
inc
or
push
xor
loop
xor
rcrb
and
rcrb
and
add
adc
add
adc
cmc
pop
inc
add
pop
ds
pop
ss
pop
add
add
aad
add
dec
add
inc
add
xor
add
sbb
add
inc
add
in
cmp
sbb
fsubrl
sbb
int3
sbb
sbb
cld
or
sbb
in
cmp
sbb
fsubrl
sbb
add
add
add
and
sbb
add
add
cld
or
sbb
in
sbb
add
push
or
sbb
or
adc
ficoms
or
push
cld
push
pi2fd
adc
jecxz
adc
repnz
adc
or
adc
or
adc
or
adc
or
adc
or
ja
adc
ja
adc
data16
add
add
add
push
or
adc
gs
push
push
push
pop
push
push
jne
push
push
jne
push
push
fs
pop
pop
push
push
pop
pop
xor
pop
pop
xor
pop
pop
sub
sbb
sbb
xor
sbb
jle
sbb
dec
sbb
and
sbb
push
sbb
adc
sbb
inc
outsl
sbb
inc
outsl
sbb
xor
sbb
jg
sbb
dec
sbb
and
sbb
adc
sbb
sbb
sbb
inc
insb
sbb
xor
xor
and
and
adc
sbb
sbb
sbb
sbb
inc
insl
sbb
xor
sbb
jge
sbb
dec
sbb
and
sbb
pop
add
adc
sbb
jmp
add
pop
jmp
sub
ljmp
pop
in
sub
out
add
sub
out
sub
loope
sub
jecxz
sub
cmc
add
pop
out
add
pop
flds
sub
aad
sub
add
pop
std
add
pop
or
pop
add
pop
stc
add
pop
add
pop
sub
pop
sbb
pop
or
pop
sbb
pop
imul
sub
test
add
pop
add
sub
add
sub
add
sub
add
add
pop
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
cs
add
sub
add
sub
add
sub
add
pop
add
sub
add
sub
add
pop
add
sub
add
sub
add
and
pop
add
xor
add
and
pop
add
inc
pop
add
add
pop
add
sbb
add
inc
call
jmp
push
aas
add
push
aas
add
push
aas
add
push
aas
add
aas
add
aas
add
aas
add
aas
add
and
into
and
add
and
add
and
add
and
add
and
add
and
add
and
add
cmp
push
and
add
and
add
mov
add
and
add
adc
arpl
adc
sub
adc
pop
add
sub
adc
ja
adc
jp
adc
jp
adc
pop
add
sub
adc
pop
add
push
add
jnp
adc
sub
dec
sub
add
sub
add
dec
add
dec
add
sub
add
add
add
add
ja
sbb
add
sub
add
sub
subl
inc
incl
sub
or
push
inc
adc
and
add
inc
ret
add
inc
add
sub
stc
add
pop
stc
add
pop
clc
add
pop
sti
add
pop
fiaddl
sbb
aad
push
pop
faddl
pop
pop
xlat
add
incb
cmp
pop
lock
pop
repz
pop
loop
add
pop
fldl
push
pop
aam
pop
pop
test
add
pop
aad
push
adc
pop
mov
add
pop
std
xchg
push
int
das
pop
cmc
xchg
push
push
add
pop
int
ljmp
xchg
ljmp
xchg
ljmp
jno
fdivrp
xlat
sub
in
sub
add
fdivrp
pop
sub
add
fdivrp
cmp
xor
pop
fdivrp
cmpsb
sub
call
and
int
inc
sub
add
sub
add
and
push
add
sub
add
sub
add
sub
add
mov
and
stc
mov
sub
in
mov
stos
inc
add
jl
adc
stos
inc
add
and
add
and
sti
test
and
xlat
test
xor
and
and
aas
stos
inc
add
sbb
inc
add
test
add
test
or
aaa
scas
inc
add
sbb
inc
add
add
sbb
adc
add
scas
inc
add
and
add
xchg
add
sub
add
sub
add
sub
mov
or
sub
mov
mov
add
xor
pop
sub
inc
sub
add
sub
or
xchg
popl
fwait
add
sub
inc
sub
pop
sub
add
add
sbb
or
pop
popl
add
sub
inc
sub
add
sub
inc
sub
add
sub
inc
sub
mov
pop
mov
add
pop
mov
add
pop
test
add
pop
jno
ljmp
xchg
ljmp
xchg
ljmp
xchg
ljmp
xchg
push
outsb
add
fs
test
add
pop
inc
xchg
push
add
pop
jge
push
and
pop
jns
push
xchg
add
pop
popf
xchg
push
xchg
add
pop
xchg
add
pop
xchg
xchg
push
add
sub
add
sub
adc
jecxz
enter
pop
and
xchg
cltd
fdivrp
xor
and
popf
mov
and
add
add
add
add
and
push
cltd
fdivrp
sbb
add
pop
cltd
fdivrp
jo
and
popa
mov
push
add
imulb
and
int
out
cs
cltd
and
add
sub
lods
mov
sub
aad
ljmp
inc
add
inc
add
sbb
add
jge
push
add
inc
add
add
addr16
inc
add
das
add
fwait
inc
add
fwait
inc
add
sbb
add
fwait
inc
add
verw
pushf
inc
add
pushf
inc
add
sbb
add
lcall
sti
lcall
pop
fwait
inc
add
add
iret
lcall
aaa
popf
inc
add
add
add
push
test
sbb
sub
xchg
jo
push
sub
xchg
or
or
addb
sub
push
sub
xor
cmp
or
cld
test
sub
sub
sub
add
sub
sub
test
lods
add
cmp
add
loop
inc
add
pop
add
or
add
adc
add
add
add
pop
cmp
and
pop
add
pop
cmp
add
pop
insl
sub
pop
imul
ljmp
sub
pop
add
add
pop
sub
add
cs
adc
add
pop
sbb
add
pop
and
xor
std
subb
add
pop
or
sub
add
stos
fdivrp
jns
sub
icebp
stos
fdivrp
sub
sub
or
cs
cmc
sub
sbb
std
sbb
daa
add
or
daa
add
sub
js
in
fdivrp
jl
sub
test
fdivrp
mov
int
decl
mov
add
stos
fdivrp
jbe
sub
std
popf
ret
sub
add
sub
mov
sarb
add
push
add
iret
sarb
add
sarb
add
add
jecxz
aas
add
sarb
add
pusha
push
sbb
adc
add
sbb
add
sbb
add
aas
add
push
add
push
add
add
sbb
add
push
add
jnp
aas
add
add
xchg
aam
add
sbb
lret
sarl
add
aam
add
call
jge
sub
jge
sub
add
add
add
add
sarb
add
sub
add
sub
or
mov
add
cmpb
add
sub
or
cmp
sub
jl
sub
add
sub
add
sub
or
test
inc
sub
add
sub
push
sub
add
add
add
add
pop
inc
add
pop
sub
pop
xchg
add
pop
xchg
jge
pop
dec
add
lea
pop
insb
add
test
pop
das
add
pop
cmpl
pop
popa
jge
pop
add
pop
cmpl
pop
xchg
jge
push
ret
add
pop
cmp
push
inc
add
pop
and
push
sbb
es
sub
push
repnz
pop
in
jns
push
xor
and
push
xchg
add
pop
mov
add
pop
fnstsw
pop
add
sub
add
xchg
xor
sbb
and
sbb
in
pop
es
add
xchg
sub
add
push
pushf
sub
cli
sub
add
sub
add
es
add
sub
add
pop
cmp
sbb
cmp
fdivrp
inc
xor
stc
out
pushl
xlat
fdivrp
mov
fdivrp
inc
sub
fnsave
sbb
add
int3
aas
add
and
add
or
outsl
lret
pop
and
add
push
add
aas
add
adc
add
and
add
mov
or
add
lret
fbld
or
scas
lret
mov
or
jmp
aas
add
lret
aas
add
and
add
aas
add
adc
and
aas
add
and
add
aas
add
mov
sub
push
sub
adc
mov
inc
sub
add
sub
adc
sub
add
sub
add
sub
add
sub
add
sub
sbb
pusha
test
xor
sub
sub
add
sub
test
xchg
add
sub
sub
test
pop
aas
add
pop
pop
test
push
jge
push
pop
insl
test
ljmp
test
js
and
popa
test
mov
xchg
aaa
add
loope
push
sub
pop
sti
add
pop
cmp
xor
add
add
pop
xor
xor
sub
add
pop
sub
ss
cltd
sub
pop
imul
add
add
add
pop
xor
mov
das
add
push
sbb
xor
sbb
and
and
sub
xor
mov
cs
decl
sbb
push
stos
fdivrp
mov
sbb
inc
stos
fdivrp
push
cs
add
stos
fdivrp
cmp
sbb
xor
xor
pop
stos
fdivrp
scas
sub
add
stos
fdivrp
movsl
sub
add
fdivrp
push
sbb
imul
sub
dec
stos
fdivrp
lcall
lahf
inc
add
pop
add
xor
add
push
pop
add
inc
pop
add
inc
pop
add
adc
add
adc
add
add
add
add
add
adc
add
adc
add
add
and
add
daa
rcrl
sub
shll
add
rcll
xor
xlat
aaa
lret
sti
call
push
add
ret
inc
popa
arpl
imul
insl
outsl
adc
jae
dec
jne
or
jns
xchg
push
pop
pop
sub
loop
or
fisubs
out
fisubrl
fcmovnbe
insl
lds
repz
adc
jne
ljmp
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
sub
jmp
add
pop
xchg
push
and
dec
jle
adc
dec
outsb
push
std
dec
pop
push
in
dec
dec
push
fisttpll
push
sub
cli
mov
dec
push
std
and
fdivr
xor
push
push
xchg
dec
add
add
dec
jmp
add
dec
call
jo
or
pop
sbb
mov
mov
lds
scas
int
jmp
int
jmp
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
pop
add
sub
add
sub
add
xchg
sbb
add
sbb
add
sbb
add
sbb
add
add
push
sbb
add
add
inc
sbb
add
add
push
sbb
add
add
inc
sbb
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
aaa
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
sub
jmp
add
pop
jmp
add
pop
jmp
add
pop
xor
lods
aam
or
cld
mov
je
dec
mov
adc
pop
or
loop
push
lock
cmp
jns
xchg
cwtl
sbb
dec
movups
pop
addl
fldl
aad
js
test
insl
push
push
cmpsl
xor
cmp
add
add
add
add
cmp
lahf
sbb
or
dec
and
out
in
push
cmc
aam
cmpsb
add
aas
xchg
pop
sub
and
leave
and
mov
fxam
xchg
jo
cmp
out
jmp
int3
shlb
fisubrl
and
in
cmc
dec
pand
mov
mov
jne
jae
orb
nop
mov
mov
sbb
add
add
add
add
adc
aas
scas
xor
mov
imul
xor
jb
lahf
dec
sub
test
mov
into
jge
out
cmp
mov
cld
jmp
mov
insl
gs
mov
lock
inc
test
nop
aad
and
xorb
iret
adc
pusha
jg
dec
enter
push
cmp
push
fnstenv
jle
add
je
mov
jno
mov
int3
dec
xchg
jns
pop
dec
test
and
mov
dec
xor
ljmp
jbe
jo
cmpsl
xlat
call
addr16
jecxz
sbb
xchg
push
push
in
pop
pop
xchg
icebp
dec
push
add
mov
into
jns
into
inc
sahf
and
add
or
mov
add
add
add
add
dec
xchg
pop
mov
pop
mov
push
fwait
in
push
popa
in
jl
add
in
mov
cmp
mov
insb
or
clc
cli
lret
jecxz
call
aas
xor
add
pop
adc
add
in
sub
insl
push
inc
popf
imul
test
jb
int
lds
cmp
xor
mov
rcrb
sbb
js
fisttps
notl
or
jmp
addr16
jl
inc
ret
dec
and
push
xchg
inc
xchg
addr16
adc
pop
cmp
les
mov
xor
and
xor
sbb
adc
jecxz
cmp
lock
insl
mov
lods
jge
mov
cmp
cmp
pop
add
cmp
xor
notb
les
iret
outsb
push
add
enter
push
or
xor
jg
mov
daa
pushf
xor
daa
lods
xor
daa
mov
outsl
add
mov
in
cwtl
add
movsb
cs
jne
dec
and
bound
xor
daa
les
es
xor
daa
add
mov
mov
and
iret
sub
sub
push
jg
add
xchg
stos
pop
daa
and
into
and
cmp
pop
ret
add
mov
data16
xchg
in
add
cs
add
pop
sbb
push
mov
scas
push
add
dec
mov
add
adc
ss
xchg
jbe
jmp
add
sbb
lcall
lahf
jmp
pop
inc
sbb
les
fwait
pop
sub
adc
cmp
mov
fimuls
iret
hlt
push
dec
cmp
add
add
add
scas
les
flds
jle
adc
dec
sbb
cmp
imul
jno
popf
repnz
mov
dec
jnp
cmc
stc
aam
push
sahf
mov
imul
sbb
into
lea
clc
cli
pusha
and
cld
movsl
push
inc
cld
nop
pop
cld
sti
add
push
cmp
push
outsl
mov
cmpsl
mov
push
cltd
movsb
lret
flds
add
out
dec
adc
out
jecxz
sub
out
push
cmc
test
cmpsb
movsb
mov
out
sub
push
mov
out
jmp
sbb
xor
sbb
xor
jp
pop
cmp
xor
mov
push
outsb
sub
jl
jne
pop
lcall
jae
lds
ds
aaa
xor
inc
xor
cmp
and
xor
out
je
mov
stos
cmp
mov
and
and
inc
nop
cltd
call
daa
fistpll
or
cli
ds
cs
cmp
mov
mov
inc
jge
mov
adc
jno
jl
dec
subb
sub
push
sub
xor
push
out
xor
mov
orl
xor
add
outsl
mov
push
scas
or
idiv
xchg
fisubs
adc
push
cmp
sbb
stos
sbb
cmp
sbb
cmp
and
fmull
mov
lret
lock
jnp
add
pop
aas
fists
stos
aas
sub
push
and
add
dec
xor
ficoms
dec
fsubrp
inc
mulb
and
adc
lea
add
fldcw
xor
adc
rdmsr
cmpsl
adc
test
ds
adc
and
push
dec
mov
out
inc
jno
es
add
push
sar
fists
pusha
cmc
bound
add
dec
arpl
sub
add
sub
loope
adc
in
xchg
sub
sarb
add
add
add
clc
mov
sbb
adc
in
in
xor
push
fucomi
imul
or
sub
sahf
mov
inc
push
jbe
dec
rcll
inc
xchg
out
sub
adc
movsl
in
test
in
cwtl
mov
pop
jp
aam
mov
fmul
aad
test
and
andl
adcl
add
mov
into
mov
adc
push
cwtl
lret
and
mov
jbe
fwait
jnp
pop
scas
push
jne
cmp
repz
fsubrl
jmp
sub
add
sub
add
sub
add
sub
pop
icebp
xor
psubw
cmc
adc
pop
loope
pop
sbb
cld
sbb
leave
dec
std
and
inc
add
adc
adc
das
sbb
in
xor
and
cmp
sbb
ds
test
xchg
nop
push
mov
outsb
cltd
js
jb
je
jbe
stos
push
jns
xchg
jno
pop
mov
pop
gs
dec
imul
push
jno
fisttps
ja
pop
jns
notl
jg
mov
xchg
add
mov
xchg
jg
xchg
xchg
mov
popf
lahf
arpl
cmpsb
cmpsl
mov
test
mov
lea
mov
add
rol
faddp
pop
ljmp
sub
xor
pop
icebp
xor
push
std
cmp
push
sbb
fimuls
gs
and
inc
dec
insb
ljmp
add
add
add
add
push
push
divb
jns
sub
cmp
push
and
inc
or
sbb
sub
adc
adc
or
pop
and
add
and
cs
pop
adc
ss
pop
sbb
ds
xchg
popa
or
add
lret
inc
cwtl
aam
sti
mov
shl
lods
sbb
fstps
jmp
movsb
shl
xor
jecxz
sub
cmp
xlat
int
mov
scas
mov
subl
jno
mov
movsl
jns
cwtl
xchg
jne
xchg
lea
nop
cltd
pop
ja
xchg
dec
mov
test
stos
orb
xchg
js
xchg
popl
je
sbbl
jmp
pop
xor
push
iret
cmp
push
shll
xor
sbb
leave
inc
jecxz
std
cmp
rol
dec
jmp
les
fdivs
repz
sub
rcl
sti
mov
aas
pop
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
pop
add
sub
add
sub
add
sub
out
pop
add
sub
add
sub
add
sub
add
ret
and
add
and
add
and
add
and
add
and
add
and
add
add
push
and
add
incb
inc
and
add
add
push
and
add
add
add
add
adc
add
adc
add
add
add
lods
iret
incb
adc
add
adc
add
add
add
add
add
rcrl
add
rcrl
incl
dec
sar
xchg
incb
sub
add
inc
add
sub
add
inc
add
sub
add
add
call
adc
incl
inc
add
sub
add
inc
add
add
inc
add
sub
call
push
decl
push
inc
inc
add
sub
add
inc
add
sub
add
dec
add
sub
add
adc
add
dec
add
sub
add
dec
add
sub
add
sub
jmp
add
lahf
jmp
add
pop
jmp
add
pop
imul
add
add
add
pop
jmp
add
pop
call
add
pop
jmp
add
pop
jmp
add
pop
imul
stos
lahf
jmp
out
and
in
out
adc
in
sub
lahf
jmp
in
xor
sti
cmc
sbb
sti
cmc
sbb
imul
pop
sbb
add
pop
adc
xlat
movhlps
mov
movhlps
mov
jo
jmp
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
pop
add
sub
add
sub
add
sub
add
add
add
rcrl
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
test
inc
inc
fst
add
scas
inc
inc
push
mov
inc
inc
lfs
cli
outsb
aam
mov
cs
sbb
leave
stos
lahf
icebp
jg
sub
add
ds
sbb
sbb
dec
mov
inc
mov
xchg
xchg
lea
pop
xlat
mov
jg
pop
sub
repz
mov
call
lahf
cwtl
outsb
cmp
fldt
jmp
jnp
scas
cmc
cmp
cmp
xchg
iret
ss
push
cmc
cmp
daa
loop
and
add
add
add
add
jmp
add
hlt
or
xor
pop
pop
jb
je
and
or
cmp
imul
arpl
mov
sub
sbb
pop
insb
lea
rcrb
ret
xor
scas
data16
jo
cmp
or
xchg
push
cmp
pop
ljmp
dec
cld
repz
jecxz
xchg
push
popf
add
add
add
add
add
jmp
xchg
enter
xor
xchg
push
popa
dec
mov
sbb
rclb
jp
lock
mov
add
pop
imul
sub
incb
sub
leave
std
inc
cs
sub
flds
pop
leave
std
sub
pop
mov
imul
pop
add
sub
add
sub
add
add
add
add
pop
add
pop
add
sub
add
pop
add
cs
add
sub
add
sub
add
adc
call
add
lcall
add
decl
jno
out
sub
add
sub
add
popa
in
out
sub
add
popa
in
fisubrl
pop
add
cs
add
in
clc
sub
add
sub
add
add
aas
add
and
add
and
add
pop
aas
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
push
add
rcrl
add
rcrl
add
and
add
push
add
push
add
sbbl
add
xchg
push
add
xchg
push
add
and
add
and
add
inc
and
add
inc
pop
add
push
and
add
sub
push
add
aaa
add
sub
push
add
aaa
push
add
aaa
push
add
outsl
add
sub
dec
inc
sub
dec
inc
sub
add
dec
dec
inc
sub
dec
inc
sub
add
sub
dec
inc
sub
add
adc
inc
sub
add
sub
inc
add
push
add
sub
add
jl
inc
sub
add
sub
add
xchg
sub
add
sub
mov
dec
ljmp
add
sahf
add
pop
mov
imul
add
pop
xchg
add
rolb
pop
mov
add
pop
mov
add
pop
rolb
xchg
add
sub
and
imul
add
pop
lahf
add
pop
aaa
add
pop
push
add
push
add
pop
sti
add
sub
repz
and
push
sbb
inc
add
and
add
push
add
pop
add
leave
add
ret
add
sub
cwtl
sub
jnp
inc
add
fldl
jl
jmp
add
add
add
add
movb
sub
pusha
sub
add
lret
sub
add
movsl
add
dec
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
iret
add
or
pop
add
push
outsb
add
push
jo
xor
jae
push
add
add
pop
sbb
add
sbb
or
add
sbb
smsw
sbb
dec
add
sbb
outsl
add
jno
push
sbb
flds
mov
and
stos
and
add
and
adc
daa
add
and
add
or
pop
add
rolb
sub
add
sub
add
sbb
sbb
pop
sub
or
pop
add
sub
and
pop
add
sub
pop
sub
push
sub
add
sub
add
sub
add
sub
add
sub
add
in
push
sub
add
sub
add
add
lea
and
lcall
sub
add
sub
add
sub
xor
add
cmp
out
sbb
sbb
sbb
and
fcomps
lsl
sbb
movb
sbb
mov
add
add
mov
add
movsb
add
and
add
and
inc
ljmp
out
dec
jmp
out
dec
lcall
out
dec
ljmp
out
inc
inc
out
mov
mov
out
cmp
out
jg
out
xchg
dec
out
xchg
inc
out
incl
cmp
push
jne
xor
popa
xor
sub
pop
pop
xorb
push
xorb
dec
jl
cmp
cmp
jp
xchg
sub
sub
nop
add
jo
subl
xor
sub
insb
sub
sub
pop
sub
sub
test
pusha
xor
sub
lods
sub
movsb
sub
das
sub
sub
and
push
xor
sub
add
iret
xor
shlb
dec
pop
aad
push
pop
fdivs
cmp
pop
fidivs
and
fbstp
and
loopne
add
pop
loope
xor
loop
daa
pop
in
push
pop
out
jne
out
je
call
xor
and
xor
and
xor
and
xor
and
xor
and
xor
or
js
sbb
insb
and
and
xchg
and
and
pop
and
and
sub
std
and
sub
std
daa
add
std
sub
sub
sub
std
sub
std
sub
cld
std
sub
sub
das
and
xor
xor
xor
or
imul
sub
or
and
or
sub
or
and
or
sub
or
and
or
xchg
or
cwtl
or
cltd
or
lcall
and
or
sub
or
sahf
or
pop
push
or
push
or
sbb
or
sbb
or
sbb
or
sbb
or
sbb
or
sbb
or
sbb
or
sbb
or
sbb
or
sbb
stc
sbb
sti
sbb
ficomps
dec
or
sbb
fcompl
mov
aad
xchg
or
sbb
or
lea
sbb
add
add
add
sbb
dec
sbb
cmp
pop
or
sbb
sub
cmp
sub
xor
cmp
sbb
aaa
and
add
and
add
xor
add
xor
add
and
add
xor
add
xor
add
and
add
xor
add
xor
add
and
add
and
add
xor
add
add
fildl
scas
and
add
xor
add
and
add
xor
add
and
add
xor
add
mov
inc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
aaa
add
adc
dec
add
adc
inc
add
in
dec
add
adc
adc
adc
es
adc
adc
add
pop
adc
push
and
add
push
sbb
push
sbb
push
sbb
push
sbb
mov
sbb
add
push
pop
add
xchg
das
test
and
movsl
or
cs
or
mov
or
rorl
add
mov
or
cs
or
fisttpll
sub
loop
sub
lock
es
or
xlat
pop
xchg
aam
mov
aad
mov
rolb
mov
fildl
stos
sub
pop
mov
fiadds
mov
popl
stos
sub
pop
test
mov
push
lods
sub
scas
sub
pop
pop
lock
add
sbb
fistps
inc
pop
icebp
sbb
jp
xor
in
test
fwait
sbb
pop
mov
sbb
pop
mov
das
pop
pushf
sbb
pop
xchg
sbb
pop
xchg
sbb
pop
xchg
sbb
pop
rcrb
pop
rcrl
pop
mov
sbb
scas
sbb
pop
movsb
sbb
pop
popf
sbb
pop
mov
sbb
mov
mov
push
and
add
add
add
and
push
int
mov
nop
sub
add
and
add
and
add
and
add
and
add
and
add
flds
push
and
add
fildl
cmp
faddl
push
sub
add
fiadds
cmp
add
and
add
sub
add
and
add
add
add
das
in
mulb
out
icebp
das
out
lock
call
and
es
and
add
sub
and
stos
sub
and
cmpsb
and
fwait
and
sub
and
mov
and
sub
mov
sub
pushf
sub
and
push
sub
push
sub
and
pop
and
sub
sbb
inc
and
sub
and
sub
adc
sub
and
sub
and
sub
and
aam
daa
dec
int
sub
or
dec
aam
xchg
sub
or
or
or
or
or
push
cmpsb
or
xcrypt-ecb
cmpsl
or
add
add
add
test
or
test
or
inc
outsb
or
pop
or
inc
pusha
or
dec
jno
adc
or
arpl
adc
pop
or
xor
or
pop
cmp
mov
or
or
sbb
and
adc
xor
pop
fimuls
sub
push
sub
mov
sub
mov
es
test
add
aas
mov
and
aas
dec
push
xor
push
push
and
inc
push
ss
inc
push
sbb
push
push
or
push
or
inc
push
pop
aas
cmp
stc
cmp
fwait
push
cmp
xchg
push
fnstsw
ja
sarl
jno
das
bound
cmp
pop
push
add
push
cld
push
dec
push
adc
push
loope
and
sub
sbb
and
xor
and
daa
cs
pop
loopne
pushf
aaa
shlb
das
out
scas
daa
lret
pop
aaa
and
das
cmp
mov
pop
cmp
mov
dec
and
daa
cmp
xchg
pop
lret
and
aaa
fbld
das
shll
daa
ljmp
aaa
add
dec
daa
int3
and
pop
into
and
add
fsubl
das
and
pop
daa
cmp
and
aaa
int
add
sub
and
sub
es
sub
imulb
es
gs
daa
loop
and
shrl
and
sub
daa
sahf
sub
mov
sub
mov
sub
es
sub
and
sub
and
sub
and
add
sub
popf
sub
add
sub
and
scas
add
movsl
and
sub
and
sub
and
ds
xchg
or
movsb
or
lret
pop
xor
or
orl
orb
mov
dec
roll
dec
out
shlb
out
shrl
in
shlb
movsl
push
roll
das
mov
push
aad
mov
push
xlat
das
scas
push
fsubs
lahf
push
fldcw
pushf
push
fisubl
insl
pop
fldt
push
fsubl
arpl
pop
pop
fisubs
jno
fildll
push
pop
loopne
push
pop
loope
push
pop
loop
pop
sbb
dec
and
pop
dec
and
pop
inc
and
push
dec
and
pop
inc
and
push
adc
repz
adc
mov
sub
mov
add
sub
or
sub
and
mov
sub
sub
and
push
or
sub
xor
cmp
or
sub
sbb
inc
or
sub
or
sub
or
sub
sub
adc
add
xor
jno
aaa
push
pusha
and
push
arpl
xor
add
add
add
add
xor
dec
xor
push
inc
and
push
aas
and
push
xor
push
sub
aas
push
test
inc
push
stos
and
stos
xor
movsl
xor
push
lods
and
cmpsl
and
push
mov
and
mov
dec
push
mov
xor
mov
inc
push
scas
and
cmpsb
xor
cltd
xor
cmp
push
push
cmp
push
push
cmp
push
push
xor
add
add
add
dec
push
add
daa
xor
push
inc
daa
aaa
push
cmp
cmp
ljmp
push
std
es
or
aas
push
and
inc
push
and
inc
push
xor
inc
push
xor
inc
push
out
inc
push
out
inc
push
cmc
sbb
inc
push
fistpl
dec
push
jmp
sbb
dec
push
sahf
sbb
push
push
mov
xor
push
push
xor
push
push
daa
push
push
push
push
push
push
push
cmc
sbb
push
push
sub
pop
sub
pop
pop
and
add
xor
test
add
xor
sti
fs
aaa
sti
pop
push
cmp
outsb
push
cmp
jno
cmp
push
cmp
push
cmp
stos
add
pop
movsb
add
cmp
add
cmp
add
add
add
add
cwtl
add
inc
sbb
add
inc
sti
je
inc
sti
insl
add
dec
sti
pop
add
dec
pop
inc
add
add
hlt
dec
xchg
add
fimull
add
clc
dec
sub
decb
add
fmull
add
rorb
add
add
dec
sbb
add
scas
add
add
mov
add
dec
lcall
sub
mov
nop
sub
mov
xchg
mov
xchg
sub
adc
sub
adc
sub
adc
sub
adc
lret
adc
lret
sub
adc
sub
adc
xlat
adc
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
mov
sub
xor
sub
xor
sub
adc
stos
and
adc
and
add
add
add
out
sub
cmpsb
sub
xchg
sub
mov
lahf
and
mov
and
std
mov
and
std
movsl
and
std
cmpsb
and
std
cmpsl
and
test
push
stos
and
dec
add
sti
sbb
add
or
add
clc
dec
add
xlat
sbb
add
negb
add
add
add
add
dec
add
rcrb
add
or
xor
sub
add
sub
xor
sub
add
sub
das
add
sbb
add
das
add
sbb
add
mov
add
sbb
add
mov
add
and
add
shrl
add
out
add
shrb
add
out
add
mov
add
in
add
cmpsb
das
add
filds
add
xor
add
and
sub
sub
xor
sub
add
sub
sub
add
sub
adc
sub
ljmp
pop
leave
add
pop
jo
sub
lock
pop
xor
pop
faddl
sub
js
sub
flds
sub
jnp
sub
fadds
sub
pop
xor
pop
mov
xor
pop
mov
xor
pop
lds
add
pop
jg
sub
les
sub
pop
xor
pop
movl
sub
movb
pop
subb
pop
adc
pop
jne
sub
or
pop
arpl
sub
or
pop
add
pop
add
es
add
pop
add
pop
add
pop
add
sub
add
pop
add
es
add
sub
add
add
add
add
add
adc
pop
add
sub
add
pop
add
add
pop
add
push
pop
add
inc
pop
add
push
pop
add
pop
add
es
add
cmp
and
add
add
and
add
add
add
pop
cmp
add
add
add
add
and
add
cmp
add
and
add
add
xchg
and
add
cmp
add
inc
cmp
add
adc
add
add
add
adc
add
pop
cmp
add
push
cmp
add
inc
cmp
add
aam
add
mov
add
sub
sub
sub
add
sub
sub
sub
add
ret
sub
add
shrl
sub
add
sub
sub
sub
add
sub
sub
sub
sub
sub
add
push
sub
add
dec
sub
add
daa
sub
add
sub
add
dec
sub
add
dec
sub
add
sub
add
add
add
sub
sub
add
pop
lret
sub
pop
mov
sub
lret
pop
mov
sub
int
sub
mov
sub
shrb
test
sub
xchg
sub
pop
inc
add
pop
subb
xor
pop
xchg
sub
pop
sbb
sub
sub
jmp
sub
sub
sub
call
add
pop
stc
mov
push
or
add
pop
stc
mov
or
add
pop
jmp
add
pop
jmp
sub
call
add
pop
add
sub
add
sub
add
pop
add
pop
add
add
add
mov
pop
add
jmp
add
fisubrl
mov
xor
sub
add
test
dec
or
test
leave
cmpb
add
pop
add
xchg
ljmp
int3
vprotq
stos
mov
adc
insl
mov
fs
xchg
jae
ja
addr16
mov
lahf
aam
outsb
lods
push
add
add
add
adc
add
dec
and
xor
push
add
inc
add
and
add
bound
stos
push
jo
add
jno
sbb
shlb
mov
inc
add
cmp
inc
add
iret
jb
dec
out
ja
int
bound
gs
imul
push
add
jnp
jb
pop
in
ja
int
addr16
movsl
gs
scas
call
fcos
and
sub
aas
sub
add
lahf
add
sub
je
inc
add
sub
add
clc
add
sub
movb
ret
aas
mov
dec
pop
inc
push
pop
push
rclb
dec
into
pusha
or
pushf
push
cld
and
hlt
call
repz
sub
xor
or
clc
add
sub
fisubs
push
mov
pushf
mov
mov
inc
int
dec
inc
vmaxsd
ret
movsl
mov
jae
popf
mov
pop
cmp
pop
insb
xor
loopne
inc
add
int
push
leave
insl
jle
movsl
dec
addb
jbe
popf
inc
jp
cltd
cmp
pop
mov
add
pop
jmp
add
pop
sbb
pop
faddl
push
lds
add
push
fiadds
aam
mov
add
push
rolb
mov
addb
sub
add
jb
fidivs
call
cmc
pop
decl
sub
add
movsb
mov
test
push
inc
pop
lret
jle
dec
cs
add
jmp
popa
imul
push
inc
cmp
jge
jnp
imul
push
movl
cs
sub
add
jbe
sbb
or
sub
add
mov
inc
and
add
push
sbb
add
add
inc
sbb
add
add
add
cmp
add
add
xchg
and
xchg
and
add
and
out
xor
dec
sbb
sbb
sbb
add
sbb
sbb
add
sbb
shll
add
sub
add
xlat
lods
aas
add
addr16
shlb
daa
cmpsl
push
inc
mov
jno
xchg
inc
cmpsb
addr16
iret
jno
sub
scas
jae
les
push
lret
ret
lahf
inc
ror
xchg
pusha
mov
iret
rorb
ret
dec
sub
add
add
add
add
xchg
mov
jae
mov
add
xor
lahf
jae
pop
mov
bound
lahf
jno
sub
add
cmp
lahf
jae
adc
bound
clc
add
sub
mov
pusha
or
jno
mov
jg
add
pop
xchg
and
and
add
add
add
lcall
inc
out
xchg
incb
vpshufd
jnp
lods
sarl
sarb
int
sub
nop
xchg
xchg
jp
scas
std
add
add
pop
add
pop
adc
add
pop
cmp
stc
push
sbb
add
pop
stc
divb
adc
add
pop
int3
stos
lods
add
jecxz
add
pusha
jmp
add
pop
sti
add
push
add
add
pop
add
sub
aad
jae
jmp
lcall
mov
jp
decl
cmp
mov
sub
add
sub
add
sub
add
pop
add
jb
xchg
mov
test
jp
push
xchg
pop
outsb
pop
lea
fwait
jp
cmp
xchg
add
sub
add
add
add
xchg
nop
jbe
push
fdivs
pop
ret
dec
js
add
or
das
mov
and
jno
push
adc
and
push
and
lods
and
insb
shlb
and
popa
add
add
xorl
lods
das
or
scas
mov
das
mov
cld
or
adc
add
add
and
sbb
xor
add
add
outsl
add
push
add
sbb
jo
add
adc
pop
dec
adc
push
outsl
sub
add
sub
mov
jmp
clc
add
sub
mov
scas
imul
mov
clc
shlb
pop
cmc
lds
add
sbb
add
fadds
sub
sub
add
fildl
jo
roll
jae
clc
add
sub
add
sub
add
sub
stos
insl
dec
pop
pushf
sub
aad
add
sub
add
sub
add
sub
add
sub
add
and
pop
jmp
jecxz
add
add
pop
mov
adc
push
mov
add
push
fiaddl
add
push
rolb
fstps
fldl
cld
push
rolb
push
mov
add
pop
movsb
add
push
mov
add
pop
popf
add
pop
stos
add
pop
jnp
lea
pushf
add
xchg
add
add
pop
pop
add
pop
inc
add
pop
jmp
add
pop
dec
add
pop
add
jae
inc
es
add
add
add
add
jo
push
cs
add
sub
cli
sub
lret
add
cs
add
sub
add
sub
sub
lds
jo
mov
pusha
push
add
pop
add
fidivrl
int
gs
movsl
mov
jge
dec
mov
pop
add
add
mov
daa
mov
gs
decl
mov
arpl
lods
insl
arpl
lods
jno
sub
lods
ja
sub
mov
dec
jb
mov
add
xchg
cmpsl
push
jo
jo
pop
lods
arpl
int3
jb
jno
decl
ret
bound
dec
jo
add
ljmp
mov
and
add
and
add
cmp
add
sub
sub
arpl
cmp
sub
add
sub
add
sub
push
sub
add
sub
outsl
sub
add
call
add
sub
jne
fiaddl
jb
jecxz
outsb
sub
add
jecxz
jb
sub
add
xchg
add
mov
add
lods
add
les
imul
les
and
sub
add
pop
push
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
sbb
pop
xor
add
pop
jmp
xchg
push
sbb
inc
jp
std
inc
jp
sti
loopne
rcll
jge
adc
jne
add
insl
std
add
gs
rcl
pop
std
rcl
push
std
rcl
std
les
cmp
std
rclb
std
ljmp
and
add
and
or
aas
repz
sub
or
sub
jp
outsb
imul
jno
and
pop
add
mov
dec
into
cld
dec
and
mov
pop
rcrb
pop
mov
aad
std
gs
ds
into
or
in
adc
cld
mov
mov
mov
adc
cld
mov
sbb
mov
adc
cld
mov
push
fwait
sub
sbb
into
adc
pop
rcrb
outsb
or
mul
iret
adc
mov
rol
push
repz
add
adc
cmp
sub
dec
add
and
add
and
adc
dec
add
dec
add
and
add
and
push
add
inc
and
and
add
and
jno
imul
mov
pop
jbe
push
insb
add
add
add
nop
pop
cmp
sub
dec
add
push
cmp
rcrb
dec
add
push
dec
add
int
dec
sub
add
rolb
sub
add
add
pusha
pop
inc
sub
add
sub
add
sub
pop
aas
push
insl
cmp
ss
outsb
sbb
test
jno
sub
add
inc
mov
fstpl
lret
dec
mov
sub
mov
pop
add
aam
outsl
lret
rclb
add
shlb
fld
mov
jno
in
pop
pop
xchg
lahf
mov
mov
xchg
mov
xchg
jmp
mov
pop
lcall
stc
inc
stos
dec
mov
test
dec
aas
cmp
dec
ja
lahf
dec
jae
mov
push
insl
pop
mov
add
add
add
aas
sbb
sub
and
pop
sub
lret
sbb
ljmp
mov
mov
ds
insl
mov
mov
insb
jb
roll
pop
mov
push
inc
movsl
lock
pop
stos
repnz
popf
call
pop
add
nop
jl
dec
xchg
dec
add
xchg
xchg
jae
mov
fs
mov
xor
arpl
pusha
push
inc
and
outsb
push
dec
xor
clc
incb
nop
jb
std
nop
jl
lret
jb
xchg
dec
xchg
xchg
insb
je
arpl
cmpsl
data16
cwtl
pop
cmpsb
xchg
fldt
add
add
add
add
in
inc
lahf
in
pop
shl
push
in
pop
mov
jp
je
pop
lret
jo
pop
jb
mov
push
popa
idivl
inc
pop
pop
loope
inc
aas
ljmp
inc
lods
pop
push
cmp
inc
dec
sbbl
add
mov
jo
pusha
cmpsl
arpl
mov
mov
add
add
add
loope
add
scas
mov
int
mov
inc
imul
arpl
nop
pusha
test
insl
jle
add
sub
les
xchg
lret
inc
jne
mov
gs
rorl
add
sub
jne
dec
lods
arpl
aaa
xchg
sbb
in
push
cmp
add
xor
jmp
int
add
push
mov
fdivrs
mov
sbb
dec
in
add
sub
shlb
leave
fldenv
pop
mov
out
mov
jg
movsl
int3
imul
add
pop
nop
movsl
jg
test
imul
sub
mov
outsb
push
mov
int3
imul
add
pop
inc
cmpsb
aaa
cmpb
add
imul
sub
and
pop
xor
jmp
cmpsb
jg
stos
or
adc
icebp
push
add
xchg
pop
pop
and
mov
popa
pop
mov
imul
mov
jge
push
or
jnp
rol
add
out
inc
lods
lock
pop
movsb
mov
hlt
nop
push
lea
nop
andb
lea
leave
mov
jno
dec
popl
add
jle
pop
xor
dec
inc
sub
ficompl
adc
hlt
adc
push
or
mov
jnp
add
insl
outsb
push
and
add
stos
inc
pop
or
push
inc
xchg
jmp
push
push
mov
dec
add
jb
and
je
add
lcall
fists
jo
xchg
jb
scas
jmp
jne
arpl
leave
insl
outsb
jmp
mov
push
xchg
jno
enter
stos
inc
pop
adc
dec
push
push
out
inc
hlt
loopne
inc
push
mov
dec
inc
sbb
add
insl
and
mov
arpl
and
jae
stc
loop
iret
sbb
add
add
add
add
add
sbb
fs
loope
add
mov
movl
xchg
push
insb
xchg
rcll
xchg
jno
cmpsl
lahf
pop
xchg
mov
pop
pop
mov
movsl
jae
pushf
loop
inc
dec
test
inc
pop
aas
ret
adc
inc
dec
inc
ret
inc
add
inc
add
sub
add
add
add
add
add
push
mov
clc
jg
test
std
orb
or
enter
lret
test
push
mov
out
stos
les
test
mov
mov
mov
xchg
xchg
mov
cmpb
movsb
addl
lea
outsb
push
stos
lds
test
inc
pop
push
pushf
inc
aas
inc
mov
dec
jl
xchg
add
dec
lahf
or
jp
dec
leave
test
jl
leave
sarl
add
mov
pop
sub
add
jge
sti
mov
subl
jp
mov
les
push
int
jnp
lret
insb
lret
enter
sarl
lea
les
mov
push
push
jnp
push
test
and
push
push
pop
jnp
imul
push
icebp
mov
pop
imul
inc
pop
push
fstps
es
imul
xchg
arpl
sub
pop
push
mov
jb
jo
push
add
popa
imul
pop
imul
stos
inc
pop
rcr
sarw
add
mov
push
arpl
mov
insb
cmpsb
mov
sti
stos
inc
pop
adc
pop
jne
push
mov
fs
dec
sahf
pop
sbb
test
jae
pop
sahf
dec
and
movsl
bound
out
pusha
add
repnz
arpl
cs
std
inc
ret
repnz
jno
and
data16
lcall
out
addr16
fldenv
bound
lods
cmpsl
arpl
mov
inc
pop
mov
xchg
sub
or
xchg
jb
popf
cmpsl
pop
dec
mov
or
dec
addb
addb
push
sub
sub
xor
jnp
xchg
clc
jg
test
add
add
pop
sbb
fcomps
xor
out
sbb
fldenv
add
pop
mov
fcoms
mov
push
mov
mov
bound
add
pop
lahf
mov
std
in
stos
loopne
fs
push
pop
mov
add
movsb
add
pop
add
test
jmp
jae
inc
cmp
shr
sbb
dec
sbb
in
sbb
pop
dec
sub
in
cmp
push
inc
and
pop
add
cwtl
pop
push
das
mov
pop
add
push
inc
jmp
andb
sub
add
sub
add
add
pop
add
sub
add
mov
add
ljmp
add
and
add
jecxz
jmp
insb
outsb
pop
mov
jmp
insl
js
lret
popa
outsl
in
arpl
mov
xchg
and
add
mov
lea
lds
pop
mov
lcall
pop
outsb
add
arpl
lds
les
insb
and
add
gs
ret
arpl
lock
clc
les
call
shrl
jmp
fwait
add
sub
add
cwtl
add
push
add
push
add
sub
gs
add
sub
add
pop
add
sub
add
sub
add
add
add
add
sub
add
sub
add
sub
outsl
sub
add
sub
add
sub
add
sub
xor
lods
xchg
add
sub
jne
stos
xchg
dec
and
dec
jle
mov
insl
jbe
xchg
sahf
je
sahf
nop
push
pop
repz
cmp
ljmp
or
fiaddl
xor
rolb
sbb
inc
sbb
pop
mul
cmp
push
or
add
pop
mov
ss
mov
ds
lret
test
mov
sub
dec
popa
mov
jl
jg
call
add
es
add
pop
hlt
movsb
ds
push
aam
test
fcmovnb
push
add
mov
mov
add
ret
or
mov
pop
add
adc
sub
aad
icebp
or
add
fdivp
mov
dec
loop
lret
xor
cld
mov
push
lret
xlat
ffree
cs
inc
loopne
mov
pop
add
cs
mov
dec
sub
ret
pop
inc
add
lret
jecxz
lahf
mov
add
add
add
into
call
xchg
cmpsl
add
popf
mov
adc
lea
jbe
xchg
add
dec
inc
mov
gs
test
mov
je
pop
test
jmp
inc
dec
push
mov
dec
fistpll
inc
sbbl
inc
test
dec
ret
jb
push
fwait
arpl
sbb
add
or
xor
jle
sub
lods
jmp
jmp
add
add
shrl
sub
in
sub
loopne
inc
sbb
and
bswap
sub
mov
stos
inc
imul
aas
dec
testb
sub
inc
sub
mov
xchg
mov
je
dec
nop
nop
xchg
pusha
lods
int3
xchg
add
jnp
mov
jl
pushf
dec
pop
cmpsb
stos
pop
add
sub
rclb
int3
jo
add
jnp
sbb
insl
sbb
movsl
sbb
push
xchg
cmp
push
jecxz
adc
in
jle
scas
cld
jo
jmp
std
xchg
jns
sti
outsb
sbb
add
add
iret
cmp
data16
add
add
add
add
pop
popa
imul
pop
push
inc
jmp
pop
or
mov
fstps
loop
sbb
push
test
mov
mov
je
call
rcrl
sub
or
addr16
xchg
rolb
pop
orl
lods
mov
lcall
mov
dec
add
jmp
or
sub
add
xor
rcl
es
mov
sub
iret
mov
sub
out
pop
adc
sub
add
lods
mov
ljmp
cli
icebp
mov
shl
mov
mov
or
decl
out
mov
adc
and
add
add
add
add
and
add
pop
mov
movsl
lret
push
std
mov
push
mov
movsl
add
add
rol
jne
inc
das
iret
rcrb
pusha
fmulp
dec
xor
movb
push
xchg
popf
inc
jns
pushf
pop
push
xchg
imul
ja
cwtl
shrl
or
mull
pushf
lahf
cli
pop
add
add
jmp
add
cmc
push
sbb
sub
sti
adc
add
push
fmuls
ret
push
push
lcall
mov
jnp
test
ficoms
add
sub
push
test
mov
dec
add
pop
popa
mov
orb
and
sbbl
xchg
pop
add
sub
fdivl
add
or
xor
bound
xor
sub
test
jbe
mov
dec
mov
pop
ficoml
sub
repnz
adc
add
pop
pushf
insb
int
les
mov
add
pop
jne
xchg
mov
pop
test
jns
pop
pop
pop
mov
pop
pop
jmp
and
sbb
sub
pop
adc
fidivl
add
jmp
outsl
imul
dec
aas
jo
add
pop
jne
fmull
imul
fdivrs
cmc
jbe
pushl
cmp
lea
pop
add
lcall
mov
stos
aas
xchg
scas
mov
jo
decb
aam
pusha
ret
add
dec
inc
mov
iret
mov
mov
mov
jnp
lret
jnp
pop
push
add
inc
jns
jp
pop
add
aam
sbb
out
mov
sbb
mov
mov
lcall
add
cmovl
or
dec
add
and
add
pop
pop
sub
daa
pop
dec
adc
add
popa
sub
and
add
xchg
cltd
xchg
sbbl
sbb
stos
mov
add
jno
lea
xchg
inc
push
inc
addb
test
lahf
jae
imul
push
jmp
lahf
push
push
add
xor
imulb
push
dec
repz
add
sub
adc
leave
pop
adc
loope
adc
call
push
pop
jmp
push
and
and
or
and
jno
fwait
sbb
and
adc
sub
and
and
sbb
sbb
sub
push
lret
sub
or
sub
lahf
mov
movsb
cwtl
cmc
add
add
outsb
shrb
inc
mov
add
test
rdpmc
pop
jmp
and
push
loop
sbb
add
add
pop
xchg
aam
lea
sub
loop
and
repz
pop
xor
pop
leave
sbb
jmp
pop
and
jmp
mov
sub
sbb
and
sbb
cmp
or
and
sbb
and
or
push
daa
iret
or
pop
jo
mov
test
mov
sti
in
pushf
stc
std
mov
push
mov
fdivrp
in
xorl
fdivrp
jle
loop
push
popf
lahf
test
pop
dec
fdivrp
gs
int
jl
test
sub
add
mov
dec
add
das
sub
push
add
push
sbb
sub
add
mov
sub
pop
add
cli
shl
inc
clc
loope
and
shl
lock
mov
fsubrp
cli
daa
rol
add
xchg
cmp
rol
test
fsubr
lret
cmc
test
push
out
icebp
add
add
xor
imul
sbb
inc
jae
xor
popa
push
and
add
and
add
jno
push
dec
addr16
inc
adc
add
ja
jecxz
jne
std
notb
and
add
clc
fisttps
hlt
in
out
sar
in
or
jmp
sub
fsubr
sarl
clc
out
sub
or
sbb
add
add
clc
or
pop
aaa
cmp
and
enter
fsubrl
add
lret
daa
sub
inc
and
sub
pushf
mov
scas
leave
xlat
arpl
add
sub
sub
push
movb
sub
dec
push
jg
add
sub
add
sub
xor
cmp
dec
js
jmp
arpl
sub
jle
loop
add
sub
pusha
insl
push
pop
mov
pop
xchg
or
and
mov
mov
jns
or
pushf
ret
test
int
out
shll
mov
les
call
add
push
mov
add
pop
pop
mov
mov
add
pop
clc
daa
or
aad
add
pop
sub
jle
add
iret
pusha
cli
adc
sbb
and
cmp
dec
pop
adc
pop
mov
pop
add
icebp
int3
ds
mov
xor
sti
iret
xor
out
imul
test
imul
jp
movsl
mov
stos
cwtl
jb
mov
push
not
cwtl
push
pop
mov
xchg
pop
stos
mov
jl
mov
mov
push
adc
mov
jmp
mov
popf
xchg
jmp
pop
and
jecxz
and
add
push
add
sar
rcrl
int
imul
cmpsl
test
xorl
iret
mov
jecxz
mov
pop
je
or
inc
add
in
insl
mov
call
push
push
inc
js
push
cmp
add
stos
cltd
lea
mov
add
das
adc
inc
push
add
pop
pop
sub
add
sub
jbe
sub
sahf
xchg
inc
fwait
nop
in
inc
orb
ret
jns
push
call
add
add
add
add
imul
add
in
adc
jecxz
popa
push
mov
xor
cmp
adc
pushl
jo
and
aas
icebp
lds
add
in
cli
sahf
test
lods
orl
insb
push
mov
inc
pushf
stc
std
ja
mov
hlt
gs
xchg
in
ss
fldcw
pop
pop
fildll
sub
cmp
add
pop
xor
ret
cmpl
xlat
cmc
xor
sub
cld
xor
push
add
pop
mov
dec
jmp
mov
hlt
sub
jecxz
imul
call
movsl
mov
nop
mov
aaa
or
or
xor
jmp
adc
adc
add
jmp
addl
add
add
add
add
stos
jno
sub
add
ficoms
rolb
dec
mov
stos
mov
mov
stos
xchg
sti
mov
movsb
cwtl
sub
xrelease
sar
push
mov
lock
mov
mov
andb
shl
rolb
add
add
add
add
int
mov
imul
and
and
adc
sbb
pop
add
push
push
imul
push
jge
sbb
add
pop
clc
push
lds
test
fcmovnbe
xor
andb
jbe
test
add
mov
nop
shll
add
or
repnz
ret
and
add
mov
cli
dec
insb
mov
push
js
hlt
push
push
je
dec
popa
jl
pop
push
pop
bnd
and
dec
ljmp
push
push
and
add
xor
dec
aad
dec
pop
loopne
push
push
jb
inc
data16
push
pop
jp
inc
adc
test
iret
scas
mov
in
xchg
cmpsb
sahf
mov
add
add
add
movb
sub
dec
dec
daa
popf
dec
pop
push
adcl
pop
mov
xor
mulb
daa
dec
mov
and
sbb
and
inc
aaa
sub
xchg
jne
mov
mov
xchg
mov
pop
outsl
xchg
mov
push
sbb
push
or
ds
jp
pop
or
pushf
inc
or
dec
imul
bound
aas
lock
mov
fmuls
pop
cwtl
cmp
or
scas
xor
or
inc
sub
int
and
imul
sbb
and
add
pop
dec
lods
aam
imul
cli
sbb
es
or
sbb
add
pop
or
xor
aas
pop
add
int
xorl
ret
push
test
cltd
arpl
mov
jmp
aam
mov
pop
add
mov
nop
out
mov
jl
pushf
xchg
jo
xchg
dec
enter
clc
imul
mov
push
outsl
push
loope
and
mov
add
inc
adc
mov
jl
add
cmp
aaa
sbb
dec
and
xor
push
or
add
cmp
xor
es
push
dec
jnp
pop
add
sbb
pop
add
bound
add
or
add
dec
inc
add
add
and
adc
add
adc
add
jbe
mov
movsb
sbbl
sbbb
mov
add
mov
xor
mov
xchg
cwtl
shlb
add
xchg
pushf
sub
int3
mov
sub
or
sbb
cmc
adc
and
add
sub
jo
mov
dec
jnp
sbb
mov
and
imul
outsl
jbe
xchg
cmp
out
dec
add
push
pusha
movb
sub
add
into
adc
rorl
or
int
sbb
loop
or
lock
adc
lock
and
pop
loopne
push
fstps
sbb
daa
xor
sub
inc
stc
sbb
adc
or
add
push
scas
adcl
cmpsb
cmp
bound
push
add
jne
jo
insb
sub
fs
push
lahf
sub
jno
dec
pop
pop
lret
push
push
addr16
jbe
stos
push
outsb
dec
int3
add
pop
jnp
mov
jns
jmp
xchg
inc
mov
jp
mov
loope
outsb
sbbb
call
pop
mov
subl
xlat
mov
mov
add
add
add
add
mov
nop
arpl
in
pop
lret
out
mov
ljmp
sbbl
lods
sbb
in
les
popl
imulb
enter
int3
repnz
mov
les
je
fwait
fwait
imul
lds
xchg
lods
lret
xor
fstp
dec
jge
cmpsb
ds
mov
add
sbbl
jp
mov
nop
mov
lock
mov
mov
xchg
xchg
fstps
mov
scas
xchg
mov
int
mov
and
aaa
pop
insl
sub
add
outsb
or
sub
fnstcw
js
iret
imul
add
push
lea
add
mov
pop
inc
jmp
pop
push
pop
pop
push
mov
push
inc
jne
pop
dec
sub
sbb
inc
mov
and
pusha
insl
inc
repnz
aas
push
pusha
pop
in
and
mov
jb
inc
mov
adc
in
mov
or
repnz
adc
push
add
and
push
adc
pop
or
fprem1
or
mov
mov
cli
add
inc
scas
mov
push
repz
insl
mov
outsb
xlat
iret
in
sub
aam
cld
ret
fucom
push
int
fildll
fsub
add
fstp
pop
inc
leave
xchg
scas
adc
xchg
int3
push
mov
or
pop
dec
mov
cltd
fs
mov
jle
enter
xchg
mov
mov
ret
mov
add
add
add
add
call
mov
arpl
repz
into
sub
inc
push
mov
or
mov
add
pop
push
cmc
test
xor
pop
int3
mov
lea
push
add
popf
cld
ja
jle
dec
sub
add
pushf
out
jmp
xchg
loope
or
js
dec
gs
add
add
add
inc
push
inc
jmp
xchg
xchg
xchg
jl
mov
in
ret
sti
mov
icebp
std
lds
out
lea
cld
xchg
es
add
popa
pop
dec
in
cs
dec
and
jmp
dec
pop
cmp
jmp
test
cmpsb
lea
dec
inc
xchg
jb
add
cmp
mov
fwait
add
push
mov
mov
push
add
xchg
sub
xor
aaa
outsl
mov
aas
sub
sbb
add
push
pop
adc
adc
jg
add
cmpl
movb
movsb
xchg
mov
in
add
or
bound
dec
arpl
adc
dec
inc
dec
and
add
sub
aas
push
and
jmp
imul
push
sbb
add
sub
addr16
enter
pop
loope
les
lock
mov
add
adc
mov
add
lret
ss
repnz
dec
add
jmp
aaa
inc
inc
rclb
add
push
out
cs
arpl
push
addr16
mov
mov
and
add
push
and
or
and
or
sbb
sti
or
or
mov
or
pop
test
dec
sub
jns
scas
xchg
dec
test
je
mov
cmpb
jl
mov
jbe
pop
cltd
mov
in
mov
pop
mov
mov
rcrl
and
jge
daa
rcrl
mov
fs
cmpsl
shrl
addl
add
add
add
add
jmp
lret
mov
mov
fs
aad
in
add
pop
popa
mov
jg
add
pop
leave
add
and
adc
in
cld
sub
in
xor
sbb
push
sbb
popa
jo
add
xor
jmp
js
dec
cmpsl
pop
pop
adc
loopne
xor
or
add
enter
sbb
incb
add
add
es
in
mov
push
mov
pop
add
mov
lcall
dec
and
adc
or
aaa
adc
cli
leave
hlt
sub
push
add
inc
roll
inc
cmp
jb
cmc
and
sub
add
add
mov
std
cmp
add
xchg
shll
add
push
dec
xchg
lods
lret
mov
add
add
add
mov
mov
lods
idivb
pushl
dec
mov
push
add
pop
mov
int
scas
xchg
pushf
dec
xchg
incl
xlat
in
xchg
testb
fisubl
std
add
out
add
gs
add
add
pop
sbb
add
add
jb
repz
mov
add
or
incl
add
push
push
daa
pop
mov
mov
xchg
jmp
fs
jae
add
sub
add
sub
iret
js
test
bound
test
pop
xor
dec
xchg
fnsave
cltd
mov
pop
cmpl
sub
cmpsl
add
jne
mov
icebp
mov
xchg
mov
jo
mov
fsubrl
andb
popf
mov
rcll
stos
test
xchg
mov
inc
add
pop
faddl
sub
scas
ds
call
xor
push
add
pop
or
in
jmp
pushf
js
andl
loope
ljmp
ds
outsl
push
xor
add
pop
add
sub
ret
cltd
aas
in
pop
subl
sub
and
mov
dec
sbb
aad
jmp
loopne
mov
loop
jae
aad
cmc
aad
mov
push
push
mov
aas
mov
add
add
add
sub
rorb
fs
push
std
stos
mov
jmp
out
xchg
inc
xor
faddl
mov
pop
cs
lea
adc
cs
addl
add
push
xlat
add
pop
or
mov
inc
in
add
inc
hlt
stos
push
add
enter
mov
xchg
mov
xchg
ljmp
mov
in
inc
ds
in
dec
pop
les
push
adc
ret
ss
call
pop
in
sbbl
call
xchg
mov
les
push
adc
sbb
add
mov
ljmp
mov
mov
mov
call
scas
ja
sbb
test
lcall
dec
or
addr16
add
ret
mov
add
mov
stc
mov
adc
lds
and
shll
test
mov
add
sub
mov
mov
ret
je
pop
dec
test
loop
adc
mov
das
bound
rol
sbb
mov
movsl
pop
mov
outsb
iret
cmc
cwtl
xor
pop
nop
dec
and
add
pop
xor
testl
rol
rolb
test
xchg
add
or
xchg
imul
shrb
pushf
shrb
rclb
add
add
add
pop
jmp
cmp
pop
test
std
cs
aaa
inc
pop
pop
jmp
sub
lea
mov
sub
test
movsb
adc
sahf
or
shrl
push
xor
mov
push
mov
xchg
dec
dec
mov
mov
xchg
add
add
add
add
add
adc
and
lcall
xchg
cmp
jge
add
xchg
xor
call
movzbl
mov
dec
decb
push
mov
adc
add
dec
xor
add
inc
sbb
out
jb
push
inc
and
mov
or
push
dec
or
inc
nop
call
add
add
add
cld
test
cmc
mov
jne
stos
inc
lock
decb
out
lea
dec
call
cmp
xorb
jae
test
push
jg
pop
or
mov
add
mov
add
dec
mov
inc
jbe
ret
jae
xor
push
dec
testl
mov
sub
rorb
pop
ljmp
adc
paddq
sbb
test
xor
or
mov
inc
ret
jae
mov
jb
xor
mov
mov
sub
dec
jne
inc
pusha
sti
sub
out
das
xor
sub
rolb
sub
add
pop
scas
cmp
in
add
icebp
std
sbb
in
push
jl
cld
push
xchg
ss
adc
inc
repnz
lods
push
cs
test
imul
lock
or
mov
popa
inc
cmpsb
sub
mov
bound
adc
dec
jo
in
call
mov
jge
xlat
cli
inc
sub
mov
add
test
xor
cmpsb
ljmp
add
mov
test
in
test
loop
push
cmp
arpl
test
in
ljmp
mov
ljmp
and
mov
call
addr16
popa
xor
pop
stos
cmp
push
lea
inc
enter
cmp
and
mov
add
add
add
mov
call
mov
push
push
add
jmp
jne
pop
add
sar
ljmp
add
push
out
mov
ror
sbb
push
pop
je
ror
cmpxchg8b
out
xlat
sbb
inc
inc
jae
call
inc
lret
sti
add
std
jae
adc
add
jmp
pop
inc
daa
add
jl
scas
cli
es
pop
push
cmp
negl
add
or
in
mov
add
repnz
std
pushf
sbb
pop
add
push
mov
pop
std
sub
jg
neg
roll
and
sub
add
add
add
add
add
inc
pop
jo
pop
cmc
out
lret
add
mov
filds
adc
sbb
mov
mov
clc
ficoml
mov
add
or
mov
sbb
nop
fmull
mov
push
push
sbb
ds
push
lock
test
int3
call
lret
cmc
movsl
xor
sbb
add
sub
pop
inc
and
fidivrs
push
jmp
xchg
mov
fldenv
mov
xor
arpl
fstps
xlat
cli
inc
sub
outsl
jnp
mov
bound
movsl
hlt
mov
xor
lea
insb
les
add
mov
jmp
mov
bound
adc
or
pop
add
adc
adc
call
adc
test
test
add
je
scas
arpl
shr
sbb
arpl
jb
mov
scas
or
movsb
je
sahf
loop
mov
int3
dec
jmp
mov
jae
cmpsb
inc
or
pop
mov
jmp
mov
popa
adc
dec
mov
pushf
and
sub
push
fistpll
add
fidivrs
add
neg
inc
imul
add
rorl
push
dec
mov
push
sbbl
rcrb
call
test
or
loop
lods
push
sbb
pop
movsl
in
xor
out
jne
std
movsl
jne
lock
add
add
add
add
xor
jae
stos
sbb
inc
sbb
xor
pop
cmp
dec
or
jecxz
in
xlat
pop
enter
sbb
push
mov
cli
adc
inc
mov
std
pop
mov
push
pop
aas
ss
mov
rorb
in
xor
or
notb
adc
mov
repnz
sub
and
mov
push
pushl
ds
ds
mov
pop
xlat
aam
add
adc
enter
movl
jl
gs
pop
jmp
add
pop
fs
push
jmp
scas
test
in
ss
scas
cmp
sbb
mov
mov
int
sti
loopne
ds
jmp
roll
add
add
add
add
pop
lcall
pop
popf
inc
sub
cmpb
jmp
jno
add
adc
sub
push
sub
sbb
pop
xor
in
add
sbb
loop
sub
repnz
dec
jb
mov
pop
lea
push
dec
mov
jae
add
mov
pop
fs
pop
sbb
decl
enter
lea
movsl
popf
mov
sub
push
dec
jl
jbe
xchg
sub
sub
cs
fdivl
sub
mov
movsb
pop
cmp
mov
int3
adc
jle
call
jbe
push
push
mov
test
cli
pop
imul
arpl
push
add
test
add
lea
lock
adc
mov
push
mov
test
subl
add
lret
pop
vmovsldup
jmp
sub
mov
mov
sahf
mov
pushl
mov
out
lds
and
hlt
pop
rcl
sbbl
test
clc
cmp
loopne
jne
mov
ret
and
mov
or
inc
lds
dec
xchg
test
mov
adc
add
out
lods
xchg
jp
sbb
sub
xor
addr16
add
je
sbb
cmpl
pop
mov
fistpl
add
add
add
sar
call
rcll
mov
add
out
lds
sub
es
fcompl
fdivl
out
mov
pushf
int
sub
push
jmp
add
mov
pop
sub
and
sub
rclb
jb
and
jb
sub
fs
inc
pushw
ret
xor
mov
mov
add
pop
ds
ds
repz
fstp
xchg
dec
jmp
mov
arpl
stc
adc
push
and
add
pop
insb
pop
add
sub
pop
shrb
pop
mov
inc
loope
mov
fst
jb
push
push
ja
jmp
pop
pop
add
mov
xorps
roll
dec
mov
add
movsb
jl
pop
enter
mov
jmp
outsl
daa
mov
mov
sub
call
movsl
movsl
cmp
xchg
lock
sub
add
ret
popf
imul
aam
andb
pop
jo
std
and
inc
sub
lea
dec
push
iret
aad
push
sbb
orl
jmp
add
add
add
inc
je
cmp
dec
add
ss
xor
into
std
mov
pop
pop
mov
xor
andl
push
pop
int3
mov
sbb
fcoml
adc
dec
call
aas
fdivl
inc
mov
fisttpl
add
sbb
adc
mov
sub
add
add
add
add
and
jb
or
xor
mov
leave
push
inc
hlt
popf
popf
jp
xor
xchg
in
lret
add
add
stos
rclb
push
xchg
rorb
jns
sub
aam
fdivrl
add
out
add
scas
clc
dec
aas
mov
mov
add
add
clc
push
pop
add
add
fdivs
inc
es
fidivrs
and
incb
pop
jmp
sti
ret
pop
lahf
fistpl
xchg
add
push
rcrb
sahf
imull
es
inc
and
cltd
cmpsb
out
cmpsb
ficomps
hlt
hlt
jno
es
sub
pop
gs
pop
and
adc
add
add
add
add
push
cmp
ss
insl
jg
lods
call
icebp
push
pop
imul
outsl
add
lods
jmp
insb
mov
mov
push
lods
adc
pop
in
jmp
mov
push
pop
cltd
call
dec
cwtl
out
inc
hlt
hlt
add
jae
push
insb
pop
cmp
jg
add
test
cmp
and
call
sub
out
cmp
add
test
sub
sbb
sub
lret
call
or
ficoml
shll
mov
cli
pop
pop
cmp
add
cmpsb
daa
jmp
pop
call
push
push
add
arpl
incl
push
js
inc
inc
xadd
jae
mov
adc
add
das
push
jge
mov
lea
call
xchg
or
add
stos
mov
inc
pop
add
int3
sub
add
pop
testb
je
fsts
lea
mov
push
popf
mov
adc
xchg
cmp
or
push
add
add
sar
jg
pop
int
adc
cmpsl
inc
add
cmp
fisubrl
out
fiadds
add
mov
inc
loop
mov
add
add
add
nop
cmc
aas
sub
ret
mov
mov
jle
pop
int
and
sti
sti
mov
addr16
add
push
add
add
add
add
add
in
shl
out
adc
add
cs
pop
and
inc
jge
bound
pushf
mov
sbbb
add
test
adc
jg
cmpsb
imul
sbb
xor
in
mov
add
into
add
mov
jo
pop
arpl
dec
bsr
push
jmp
jnp
in
call
inc
sub
mov
jne
imul
and
mov
lret
jmp
sub
add
push
aaa
adc
in
add
mov
cmp
cld
dec
adc
lods
fisttpll
insb
imul
inc
mov
das
ret
jge
call
add
seta
stos
shll
call
jmp
cmp
sub
mov
lock
mov
inc
mov
add
movsb
add
sbb
leave
fisttps
mov
or
add
lods
adc
andl
ret
mov
ret
sahf
sub
sbbl
jg
addr16
add
mov
fistpl
add
fcom
std
adc
dec
and
sub
and
inc
sub
and
add
ljmp
sbb
add
dec
add
adc
lea
sbb
call
mov
daa
add
add
or
xor
inc
addr16
mov
add
cmpsl
and
sub
aas
and
jg,pt
into
mov
add
mov
sbbl
and
mov
add
out
jnp
inc
test
add
mov
push
xor
test
aad
stc
imulb
dec
aas
and
in
cld
cmp
or
js
dec
test
pop
inc
lock
dec
hlt
fucomi
jae
add
add
jmp
jl
pop
orb
call
dec
add
sahf
push
mov
movsl
cmpsb
call
movl
push
jmp
mov
sub
adc
sbb
add
ljmp
jp
mov
lds
insb
les
pop
jmp
xor
cmpsb
repz
pop
jmp
testl
add
add
and
call
hlt
imul
loopne
clc
or
ds
in
movsb
mov
push
and
xchg
jg
dec
outsb
int
mov
pop
add
and
lcall
and
jae
add
out
pop
movsb
incb
popf
pop
add
inc
adc
sub
sbb
mov
add
cli
or
add
shr
sub
add
mov
and
mov
mov
fldenv
and
jmp
jbe
fdivl
adc
and
inc
rolb
aaa
mov
and
fstpt
ret
int3
and
mov
sti
loop
add
daa
pop
jl
enter
and
add
andl
testb
cmp
setne
sbb
jne
sub
add
xchg
sub
add
arpl
int
sub
sarl
ja
mov
cmp
push
mov
add
sarl
mov
mov
mov
lahf
adc
mov
add
add
add
add
lods
jle
pushf
inc
les
notb
dec
movzwl
or
xor
in
jae
mov
aam
gs
mov
push
push
je
dec
adc
jae
xchg
pop
or
lock
sub
and
pop
call
fisubl
pop
adc
push
cmp
push
cmc
lret
inc
push
xor
dec
add
lret
push
jno
nop
imul
imul
mov
ljmp
push
mov
in
inc
bound
xchg
dec
xchg
mov
mov
inc
cs
jmp
push
push
sub
mov
push
sbb
or
stos
fistl
jmp
sub
xlat
pop
add
sub
sbb
jmp
jo
push
mov
adc
adc
icebp
call
dec
push
add
adc
cld
xor
adc
es
inc
in
fdivl
repz
add
jb
scas
in
ret
dec
push
jb
mov
mov
inc
pop
add
pop
mov
add
add
add
addb
xchg
mov
xlat
shlb
inc
sbb
call
nop
cmc
pop
add
dec
mov
subb
add
cld
subl
add
insb
mov
je
lahf
notl
or
pop
mov
inc
xchg
xor
jne
and
je
sbb
scas
add
push
inc
push
push
hlt
xor
pushl
dec
pushl
fists
je
mov
or
sub
dec
or
dec
push
in
or
sub
pop
inc
sub
xchg
mov
mov
cmp
lret
inc
add
mov
jne
mov
mov
mov
mov
lds
add
add
add
add
push
popl
jno
or
mov
add
mov
mov
sub
cmovb
lods
enter
sar
mov
test
daa
rclb
data16
add
sub
stos
das
lahf
cmc
sub
test
adc
call
enter
cmp
je
add
cwtl
mov
sbb
in
push
test
movsb
cmpb
daa
xchg
test
in
add
xor
mov
cs
fimuls
xchg
jbe
mov
push
fwait
call
adc
divl
xor
jne
xchg
adc
push
adc
push
adc
call
adc
ljmp
outsb
pop
jne
mov
ljmp
dec
sarb
cli
enter
push
int
push
sbb
mov
cmp
cmpsb
jb
add
dec
sahf
cmp
pop
cmc
hlt
and
or
xchg
mov
push
into
xchg
sub
test
pop
add
add
mov
push
sub
adc
add
push
add
inc
and
mov
out
push
sbb
or
pop
adc
je
test
jb
add
testl
mov
mov
enter
add
movsb
mov
cld
pop
and
dec
pushl
cmpsl
inc
cld
inc
or
push
daa
jmp
add
mov
and
call
sub
mov
sub
ret
add
sbb
pop
add
ret
fildl
push
fnstsw
push
rolb
add
xchg
add
xchg
xchg
jp
pop
adc
inc
add
add
mov
push
test
jbe
add
inc
sub
add
add
add
add
cmpb
add
je
pop
mov
in
sbb
cmp
pop
xor
mov
es
xchg
push
xor
pushf
repz
pop
fucomip
xchg
mov
rcr
call
mov
mov
mov
push
sub
pop
insb
ret
cltd
xor
inc
sbb
test
cltd
mov
sti
jae
fucomip
shrl
mov
outsb
pop
jmp
push
push
inc
cld
outsb
lcall
xchg
shr
add
push
jmp
popf
jmp
cld
lock
pop
sub
shll
pop
test
cmp
xor
cmpsb
sbb
jmp
and
in
add
je
pushf
adc
push
add
xchg
pushf
test
subl
xor
jl
jl
movsb
loopne
in
cwtl
subl
adc
shl
call
fsub
call
jne
shl
hlt
mov
cli
fdivrp
lea
ret
adc
add
mov
sahf
mov
push
cmp
js
ret
sbb
adc
add
add
add
lahf
fnstenv
add
push
sbb
mov
adc
mov
mov
rorl
in
or
mov
pop
jae
cwtl
pop
cld
cmp
es
int
pop
add
sbb
incl
jae
xchg
sub
fs
enter
ljmp
sub
xor
jnp
add
or
cld
cli
sbb
dec
or
or
int
inc
jle
inc
lcall
sbb
inc
sub
lea
xor
add
or
fisttps
arpl
andb
sub
test
adc
mov
mov
mov
stos
pop
push
pop
testl
dec
inc
lret
shll
dec
mov
test
push
mov
pop
jno
push
xchg
cmp
sub
icebp
mov
pop
push
sub
sbb
push
mov
xchg
loop
dec
movsb
stos
mov
pop
ljmp
pop
jb
cmpsb
xchg
mov
push
cmc
xchg
fwait
pop
inc
adc
mov
mov
es
stos
add
loop
add
xchg
pop
jecxz
loopne
ja
aam
pop
mov
ds
cmc
or
mov
pop
fiaddl
xchg
xor
mov
add
popa
out
mov
je
xor
jmp
push
xchg
aad
outsb
or
ret
adc
mov
mov
bound
fnsave
xchg
sub
mov
arpl
push
sbb
push
cmp
test
mov
sti
mov
je
or
hlt
mov
mov
stos
dec
in
sbb
or
cmp
add
loopne
pop
pop
or
ret
out
mov
inc
mov
xor
loope
push
sub
pop
lea
xlat
dec
lea
dec
push
int3
jae
add
idiv
pushl
loope
ljmp
jb
into
out
push
fsubp
repz
jns
push
mov
int3
aam
cmpsb
sub
sbbl
pop
pop
pop
pop
add
mov
ljmp
and
pusha
addr16
xor
fadds
sub
push
push
add
jg
inc
add
sub
aas
clc
jp
incl
jp
cs
xor
aam
ret
je
lods
push
lods
sbb
andl
mov
pop
call
add
jae
jo
out
in
push
push
insl
imul
fisttps
add
add
adc
lret
mov
ljmp
add
ljmp
adcl
xor
add
pop
je
pop
xchg
fnsave
std
popa
mov
fstl
jmp
dec
stc
mov
sub
jmp
call
insb
mov
jl
in
xchg
sbb
je
jge
das
ss
dec
sub
cld
popa
ljmp
cmc
sub
adcb
test
pop
add
pop
jmp
mov
pop
cmc
insl
in
mov
test
call
dec
fildl
jne
insl
xchg
xchg
jmp
in
int
lahf
in
add
sub
cli
inc
cs
mov
leave
mov
sub
movsl
inc
push
adc
dec
imulb
pop
lahf
je
negb
jmp
add
leave
mov
in
push
cmc
jecxz
into
data16
movl
fldt
leave
shr
and
rorl
add
mov
sbb
add
mov
test
xchg
shll
add
push
add
dec
iret
push
push
hlt
push
or
decb
inc
ret
aam
sbb
popf
jnp
rorl
call
add
adc
pushw
pop
jb
sbb
psadbw
xorb
cld
xchg
sbb
cld
push
pop
sbb
add
in
pop
leave
adc
jg
cmp
add
popf
hlt
ficoml
add
or
mov
and
xchg
push
xchg
iret
jecxz
sbb
sub
mov
add
jbe
fucomp
add
int3
xchg
xchg
mov
ss
lods
jne
add
xchg
jmp
sub
dec
xchg
mov
ljmp
inc
add
aam
repz
aam
push
fdivrs
movb
pop
push
lret
xchg
incb
ret
jae
pop
push
cmp
add
pop
jmp
out
fucomi
add
je
fcmovne
cmp
call
add
fucomi
mov
pop
cli
inc
sub
sbb
sub
add
pop
cmp
pop
lahf
call
pop
mov
mov
push
fcmovb
pop
lcall
sub
out
jl
cmpl
pop
in
add
mov
imul
sub
popf
add
add
add
add
add
rcr
enter
lahf
jp
fcomp
jmp
pop
inc
jmp
rorl
imull
pop
add
sub
lds
adc
sub
stc
add
stos
adc
shl
call
mov
and
jmp
xchg
dec
insb
jmp
repz
xchg
adc
add
cli
call
sbb
sbb
jmp
lcall
inc
fstpl
adc
add
mov
ljmp
hlt
mov
stos
pop
mov
and
pushl
mov
xor
andl
adc
and
add
push
sub
mov
pop
ja
pushl
xchg
mov
and
icebp
mov
push
lea
and
cmp
sbb
subl
mov
and
adcl
je
aaa
aaa
jo
shl
pop
sub
fisttpl
mov
adc
ret
sub
add
cmp
xor
add
add
add
sbb
mov
jecxz
add
mov
cli
out
sub
push
cmpsl
dec
call
inc
add
and
add
and
adc
out
jae
add
mov
mov
xchg
or
add
popf
jl
sub
jmp
cwtl
xor
insb
call
cli
jbe
jbe
mov
ret
in
xchg
js
ljmp
add
add
add
hlt
imul
addb
jnp
lods
adc
sub
cmp
in
dec
out
add
xor
jmp
push
rcr
push
add
push
test
jns
popf
int3
repz
jmp
inc
sub
cmp
adc
icebp
in
push
add
pop
pop
jbe
mov
add
lcall
repnz
dec
push
add
jae
mov
inc
jle
fiadds
cs
push
repnz
rcrb
call
xchg
sub
add
sbb
jne
pop
xor
adc
pop
insb
xchg
stos
data16
ficoms
jmp
pusha
pop
data16
movb
mov
xor
dec
xchg
add
into
call
rcrl
clc
add
clc
lea
push
push
adc
add
and
mov
or
shll
lods
cmpsb
je
push
push
lea
xchg
cmpsb
insb
mov
push
mov
in
pop
leave
push
pop
add
cmpsl
dec
push
xchg
loopne
push
cltd
and
loopne
mov
mov
sahf
std
je
or
and
add
sbb
jae
in
mov
repnz
mov
sbb
std
lahf
or
add
roll
add
mov
jge
test
ljmp
rclb
pop
out
nop
incb
jg
mov
ja
push
push
add
cmpsb
pop
mov
add
jbe
lea
adc
jae
mov
std
mov
add
sti
aas
and
faddl
push
aad
or
push
add
sub
xor
push
mov
pop
in
add
in
ss
cmpsl
pop
in
and
jmp
add
pop
add
rcrb
jmp
sub
sti
mov
fucomip
jl
push
sbb
test
unpckhps
push
mov
fsubrl
pop
jmp
test
adc
out
xchg
add
insl
ja
cmpsl
hlt
xchg
sbb
roll
pop
insb
jle
mov
test
lcall
and
outsl
jmp
pop
out
rolb
jmp
das
jmp
pop
mov
rclb
clc
insb
cmp
push
pop
fdivp
ljmp
push
call
jno
mov
sub
out
push
xchg
insb
mov
xlat
out
mov
jae
xchg
dec
sub
add
shlb
shlb
call
call
pop
getsec
jns
jae
mov
mov
mov
incb
in
add
mov
jg
std
push
dec
mov
mov
mov
push
pop
jae
push
mov
dec
call
lcall
jo
loop
add
cld
mov
std
jmp
mov
push
pop
inc
nop
mov
jmp
arpl
mov
dec
push
stos
sbb
add
loope
mov
add
add
add
pop
fistl
pusha
out
shll
mov
mov
rcll
push
push
repnz
aas
sbbb
out
mov
jo
xchg
lods
jns
cmpsl
lods
das
add
mov
test
jb
sub
add
cld
cld
das
or
adc
ljmp
stc
add
mov
cmpsb
mov
mov
cmpsb
push
push
jge
inc
cld
jp
mov
insb
adc
cmpsb
mov
rep
jae
adc
xorb
mov
pop
jmp
movsl
pop
sbb
jmp
inc
repz
adc
sahf
fsubrl
pop
jmp
push
hlt
jmp
ss
inc
sbb
call
xchg
cmp
lahf
mov
add
rclb
add
cwtl
es
inc
or
movsl
dec
xchg
mov
addr16
pop
imul
add
push
roll
out
add
pop
insb
aas
repnz
incl
adc
call
jb
lcall
mov
inc
jo
push
add
scas
dec
fcmovnb
js
jmp
add
add
add
jecxz
into
test
int
cmp
inc
ret
dec
adc
pop
dec
subl
xchg
les
push
xchg
pop
cs
mov
jnp
sub
subl
dec
sbb
ljmp
in
stos
rolb
and
inc
sub
sub
ds
push
movzbl
or
add
cltd
cld
add
mov
dec
lea
cmp
mov
dec
mov
mov
xchg
test
sub
lea
mov
jmp
add
adc
fcomip
mov
pushl
scas
inc
mov
push
loop
add
adc
inc
xchg
inc
or
fcomip
je
dec
call
lea
sub
xor
mov
add
mov
or
push
xor
mov
nop
inc
pop
repz
add
scas
cmpb
fildll
xor
add
cmp
push
xchg
lcall
mov
jo
test
inc
mov
jne
pop
stc
gs
xlat
push
xchg
inc
xchg
sub
mov
add
add
add
sub
cmpb
xlat
xor
lods
mov
cmpsl
lcall
mov
ja
fdiv
xorb
xchg
sbb
stos
test
lret
aad
push
pop
inc
sbb
lods
pop
dec
mov
jbe
cmc
ljmp
pop
sar
pop
jmp
sbb
push
push
sub
fisttpl
add
add
add
xchg
scas
arpl
out
popa
lds
arpl
ja
fimull
popa
xchg
scas
mov
clc
scas
lcall
mov
call
lret
orb
lret
or
fs
ret
push
mov
idiv
inc
outsl
pop
call
arpl
sbb
bound
jmp
mov
call
add
add
add
push
shr
ljmp
sub
sbb
imul
in
push
ss
addr16
pop
mov
add
cld
outsb
mov
xchg
sub
lea
pop
add
iret
out
frstor
jae
mov
mov
inc
add
add
mov
add
mov
add
add
add
add
add
call
lods
xorl
push
pop
fcom
sti
in
sahf
out
daa
and
mov
mov
fildl
add
and
jbe
dec
add
ss
add
push
push
mov
decl
nop
push
loop
or
jne
mov
add
dec
mov
out
pop
fildl
es
add
mov
jne
test
adc
scas
sub
popf
mov
mov
pop
clc
cmpsl
dec
pusha
push
jne
sub
xchg
call
mov
xor
push
xchg
ja
lcall
les
incl
xor
shrl
and
fimuls
add
add
add
add
rcll
push
rcl
cmc
popa
mov
push
lahf
inc
inc
sub
jmp
xor
rcrl
add
stos
stos
fwait
pop
xchg
ret
sub
es
pop
jb
and
arpl
into
cwtl
mov
shlb
aad
fisttpll
push
test
lods
sbb
add
xchg
popf
jl
xchg
add
imul
outsl
loop
add
cli
jl
outsb
imul
repz
in
jmp
repz
daa
dec
push
fs
pop
add
sub
add
or
stos
sub
ja
sti
pop
call
mov
clc
cmp
insb
out
or
mov
out
repnz
add
sti
jl
sub
pop
adc
out
fdivrl
sti
jb
je
shrl
ret
push
add
pushf
mov
pushf
cmpsb
jl
int
jl
pop
in
dec
add
call
mov
scas
sbb
jns
inc
fwait
das
push
addr16
pop
add
rcrl
mov
pop
mov
fildl
jmp
incb
and
dec
lea
cli
jmp
ret
pop
mov
mov
incl
inc
ret
push
jbe
pop
and
pop
xchg
xchg
xchg
jae
ss
push
cmp
push
out
and
add
mov
push
push
sub
xchg
jb
sub
or
inc
push
xchg
out
stos
sbb
inc
cltd
sub
test
xchg
jmp
add
mov
inc
lods
xlat
dec
mov
iret
jae
push
test
sub
outsl
mov
xor
aad
ret
xchg
mov
xchg
mov
mov
test
cltd
scas
or
cld
xchg
enter
pop
push
add
mov
jl
push
add
add
add
sbbb
or
repz
aas
xor
add
jb
lcall
sub
cmp
mov
xor
pop
cwtl
sbb
stc
mov
outsb
daa
pushf
das
stos
cmp
adc
sub
cmp
test
dec
xor
repnz
mov
mov
add
add
add
add
mov
jmp
fucomi
or
sahf
push
test
bound
ret
ret
lahf
pop
pop
daa
daa
shl
stos
inc
mov
cmpsb
pop
mov
repnz
stos
je
xchg
dec
xchg
rclb
inc
inc
push
js
adc
mov
out
jb
orl
lahf
pop
add
outsl
mov
add
add
mov
scas
in
pop
test
and
xor
jmp
xchg
ficoml
repnz
add
imul
pop
fcoms
out
push
mov
add
pop
inc
add
push
cs
fsub
pop
push
xor
jae
nop
pop
out
cmpsb
sbb
test
sub
push
into
adc
call
xchg
bound
add
pusha
inc
sti
add
push
lea
and
mov
std
jne
pop
inc
sti
int3
notb
cmp
ret
xor
leave
xchg
add
and
ljmp
pusha
ret
mov
je
icebp
mov
decb
popa
adc
scas
cmp
mov
sub
add
adc
pop
inc
add
mov
xchg
xchg
ret
xchg
cli
push
mov
mov
add
fistpll
sub
add
je
sub
push
add
lock
jo
inc
mov
push
inc
sub
or
mov
cmp
sbb
jmp
cwtl
pushf
jne
lods
pop
leave
call
add
add
add
stos
repz
pushf
lds
jp
enter
jg
addr16
shlb
cmp
sub
popa
mov
inc
in
add
es
pop
popf
ljmp
mov
mov
push
adc
xor
cmpsb
push
push
icebp
je
stos
int
jmp
lea
jbe
aam
jmp
pusha
cld
out
add
je
rcrb
repz
cs
mov
jne
mov
mov
mov
inc
jmp
mov
and
xchg
mov
add
lods
xor
dec
inc
and
decb
lret
cmp
pop
lds
cmpsb
inc
sbb
add
add
add
mov
jmp
add
or
mov
xor
mov
jle
rcrl
test
pop
jg
inc
out
and
ret
pop
mov
push
mov
sub
jne
mov
imul
xchg
dec
mov
ret
cmpb
jne
mov
hlt
call
adc
jmp
cmpsb
ljmp
xor
push
add
incl
mov
je
mov
dec
xor
add
fincstp
push
dec
rorb
mov
divb
mov
fdiv
pop
sub
test
lcall
dec
in
aas
sub
pop
or
cmpsb
ljmp
pushf
mov
mov
mov
shlb
loope
lds
sub
jg
add
mov
push
and
mov
add
mov
mov
xchg
mov
sti
scas
je
jbe
call
stos
push
aam
mov
ja
pop
das
dec
and
adc
sahf
jp
xchg
faddl
imul
subb
call
sarb
ljmp
add
add
add
lds
sub
push
loope
jno
xchg
jne
call
dec
bound
push
xlat
bound
cmpsl
sbb
rcrl
adc
dec
jmp
lahf
xorl
inc
xchg
loopne
mov
mov
mov
push
sub
add
add
add
sub
insb
mov
loopne
sbb
rolb
jo
fisubrs
insl
mov
je
sbb
mov
sbb
pop
mov
loopne
pop
mov
xor
out
jle
pop
movsl
jl
xchg
outsl
arpl
and
jno
jo
jae
and
cmpsb
test
pop
add
add
clc
decb
mov
mov
movsl
add
icebp
inc
mov
rcrl
mov
mov
mov
add
fcos
rcrb
add
add
mov
test
mov
cltd
ret
rclb
ret
sbb
sbb
lahf
sub
push
fdivr
push
sub
call
cmpsl
lock
mov
add
add
add
xchg
jb
enter
cwtl
sbb
add
test
adc
dec
add
outsl
fcoml
mov
icebp
enter
lcall
gs
call
and
push
je
inc
cld
jp
es
mov
xchg
ss
jnp
mov
leave
xor
cs
cmc
scas
stos
sbb
arpl
jno
icebp
cmp
mov
xchg
xorb
iret
insl
add
cmp
add
and
ja
add
popa
mov
or
jle
mov
push
shrl
mov
adc
cmc
sti
sahf
adc
cmp
and
popw
fidivs
mov
clc
inc
rorl
ret
sbb
mov
sub
call
daa
cmp
jnp
push
adc
sbb
sbb
push
iret
out
xor
icebp
aas
inc
and
shrb
and
xor
add
repz
push
add
sbb
mov
sbb
mov
and
lret
xchg
cmovno
sbb
add
dec
inc
jo
sbb
sub
in
ds
mov
call
int
fsub
push
inc
jmp
pop
and
test
aaa
pop
orl
repnz
push
sar
cmp
jmp
adc
cmpsb
adc
cmp
push
andl
xchg
or
lea
call
test
add
xor
xor
add
add
fs
and
mov
orb
pop
jmp
inc
add
insl
les
pop
incl
out
add
insl
les
pop
incl
iret
lcall
pop
add
out
in
addb
inc
arpl
popa
pop
lcall
lds
jae
push
xchg
jae
push
pop
jmp
add
add
add
and
lock
sub
cmp
lahf
cmp
xlat
scas
insb
cli
add
xor
mov
mov
jb
add
push
mov
jg
push
mov
sti
xor
fwait
sub
js
and
roll
add
es
mov
negl
xorl
add
sub
xorl
add
test
mov
cmpsl
xor
pop
dec
lock
sub
mov
aam
push
jmp
ret
push
gs
test
push
pushf
mov
in
xor
add
fnsave
cwtl
and
imul
pushf
xchg
mov
gs
arpl
cli
jbe
fsubrp
imul
fwait
stc
or
add
and
fucomip
xchg
pop
je
scas
jecxz
xor
imul
ret
aam
xchg
sbb
add
ja
filds
jo
cmp
test
aaa
movsb
jmp
mov
xchg
pop
icebp
mov
pop
insb
ljmp
sub
push
call
jae
fwait
inc
pop
in
jae
add
clc
adc
test
pop
add
stos
fdivrp
es
mov
mov
incb
mov
mov
daa
add
add
pop
fsubs
in
fdivr
push
sub
add
adc
push
mov
lret
mov
sbb
xchg
rorl
xor
lods
lock
mov
popa
add
push
ljmp
add
add
add
mov
push
push
enter
dec
sbb
add
sbb
add
xchg
adc
call
mov
clc
test
pop
xor
test
rcrl
cmpb
push
pop
xor
test
add
sbb
ljmp
mov
mov
sub
mov
das
xchg
pusha
xchg
add
add
jge
fisttpl
cli
inc
add
jbe
add
ss
jb
stos
mov
dec
cmp
lcall
jne
add
xor
or
js
pop
add
scas
mov
loopne
sub
js
sub
add
push
jnp
add
xor
stc
xchg
xor
sarl
inc
js
rol
call
dec
int
push
inc
sub
pop
inc
xor
jae
popa
arpl
mov
sub
jno
inc
mov
mov
jo
cmc
js
jnp
xchg
nop
outsl
mov
jmp
xchg
pop
pop
adc
xchg
stos
inc
js
mov
add
xor
add
xchg
stos
cli
add
les
adc
adc
adc
jmp
xchg
into
add
mov
jmp
adc
incb
arpl
jmp
pushf
fwait
rcl
movsb
mov
daa
mov
jne
negl
scas
sbb
xchg
lods
mov
aad
jmp
daa
pop
add
or
push
mov
add
add
add
dec
pop
call
pop
mov
dec
lds
jmp
add
and
jmp
sbb
push
jb
adc
add
test
jle
add
lcall
lcall
push
add
out
popa
xor
push
add
xchg
mov
incl
sub
xor
push
incl
push
in
mov
mov
std
call
out
mov
incl
les
in
call
inc
mov
rcrb
add
and
inc
add
negl
out
sbb
sub
ret
cmp
mov
add
jbe
lea
test
popa
cmp
scas
movsl
add
clc
mov
ja
add
testb
daa
rolb
pop
orl
push
mov
icebp
mov
out
imul
mov
add
xor
or
dec
mov
cmpsb
sti
sbb
les
dec
mov
fwait
sti
inc
js
mov
sti
cmpsl
je
sti
jge
out
test
pop
adc
rolb
int3
bound
push
xor
sti
cmpsb
fdivrl
push
iret
addb
fsubrp
fwait
movsl
sbb
icebp
ds
pop
or
jbe
sub
mov
fnsave
movsb
bound
xor
jl
mov
and
pop
testb
lods
mov
mov
mov
jmp
add
add
add
mov
mov
andl
add
popa
callw
andb
rcll
test
gs
vsubsd
std
sub
lahf
jmp
mov
enter
push
jb
lahf
jmp
and
pop
add
pusha
enter
fwait
cmp
sub
test
sub
imul
ja
shrb
mov
mov
sub
add
test
pusha
frstor
sub
jmp
test
out
outsl
mov
mov
call
xchg
les
jmp
ljmp
std
jne
popl
xorl
sbb
add
sbb
incl
xchg
imull
les
push
ficompl
add
sbbl
inc
nop
mov
sahf
std
call
fdivrs
testb
add
ret
movl
pop
jmp
sub
orl
pop
sub
inc
imul
jl
add
mov
sbb
cmc
xor
cli
pop
sti
lds
mov
mov
add
add
add
add
jbe
mov
jmp
jecxz
inc
jg
xchg
xor
pushl
mov
std
pop
and
cli
or
push
sub
out
cmp
popa
or
dec
sub
sub
test
pop
into
jg
add
cmc
mov
xor
jnp
pop
add
subl
adc
add
pop
out
stc
pop
sub
jle
pop
adc
pop
jmp
jmp
pop
jmp
imul
jg
in
rorl
out
sub
sub
ja
pop
mov
pop
test
add
stos
or
hlt
popa
jo
inc
nop
test
ljmp
repnz
add
test
fisubrs
movsb
out
lods
sbb
jmp
fstpl
addl
or
sub
rclb
push
add
test
pop
call
and
add
mov
lock
jmp
dec
out
imul
inc
dec
mov
loope
fnstsw
pushl
callw
add
add
add
add
pop
andb
stos
xlat
sahf
loopne
vaddsubps
std
add
and
mov
popl
add
and
lahf
add
add
and
out
and
mov
add
mov
icebp
call
inc
mov
and
jns
leave
andl
xchg
add
pop
sbb
push
aas
jp
add
add
and
lea
sbb
cmpsb
and
and
mov
push
xor
inc
and
mov
add
adc
ss
xchg
mov
int
mov
jns
sbb
jns
sbb
mov
sar
and
sub
fisubs
add
mov
push
shlb
and
push
movl
lcall
bound
call
xchg
je
ljmp
jge
lret
insb
fs
fisubs
fsub
pop
icebp
add
cmpsl
add
sbb
push
adc
mov
cmp
xchg
jl
loop
pop
fcmovb
call
add
pop
imul
inc
je
cmpsb
sbb
loope
push
inc
or
movsl
sub
xchg
jno
jle
in
add
cmp
roll
sub
mov
sub
push
or
add
daa
jmp
cvtpi2ps
or
jnp
sub
lea
sub
pop
ds
cmc
pop
cmp
inc
sbb
es
mov
mov
jmp
pop
jmp
dec
cmc
xor
je
mov
data16
call
jmp
push
shll
jmp
popa
movsl
out
fs
into
iret
jmp
push
inc
lock
add
mov
sti
data16
mov
sub
je
xor
and
cmpsb
cs
push
mov
pop
dec
jb
and
int
add
add
testb
in
jge
sbb
sbb
push
lds
or
add
nop
aas
cli
add
ret
add
add
std
push
insl
std
adc
mov
adcl
push
push
stc
and
add
stos
jno
sbb
add
test
mov
add
sbb
adc
xor
inc
xchg
mov
mov
sub
pop
imull
inc
rorl
adc
rorl
mov
clc
mov
popa
push
push
cmpsl
sbb
adc
adc
xchg
sub
jno
add
scas
test
and
or
inc
push
ja
dec
es
and
pop
sub
add
add
ret
fadds
add
jns
inc
push
push
test
inc
mov
pop
jle
sbb
inc
in
add
fstps
and
out
test
test
jb
jge
jo
sub
les
push
jno
inc
add
sub
ja
or
xor
xor
adc
insb
loop
adc
inc
jecxz
imul
jle
add
fs
adc
add
leave
or
cmpsb
lret
or
lahf
fildl
in
fisttpl
sub
jmp
add
stos
in
xchg
cmpsl
call
jmp
int3
call
xchg
cli
int3
imul
jl
push
jae
and
push
cmp
jmp
inc
inc
popf
insl
es
push
rcrl
je
xor
call
dec
push
cmp
icebp
push
xchg
push
lea
ds
call
cli
add
fdivl
lds
dec
fsubl
pop
mov
flds
add
mov
stos
aas
movsl
in
cmp
xor
stos
push
push
outsb
out
hlt
pop
add
push
add
sti
push
push
add
mov
inc
decb
int3
std
mov
roll
enter
add
lea
adc
push
mov
stc
adc
push
mov
sbb
es
dec
pop
cmpl
loop
mov
pop
push
call
dec
loopne
inc
sub
inc
hlt
push
test
add
add
add
add
dec
imul
sub
movsl
mov
lock
and
scas
push
out
pop
xchg
jo
jne
adc
gs
adc
ljmp
inc
cmc
mov
fcompl
push
add
sub
jg
push
inc
jg
sub
adc
aas
aad
repz
lcall
add
out
sahf
cld
in
in
mov
sub
add
and
inc
test
cmp
mov
repz
add
jmp
jl
lret
lock
shrb
push
in
je
fistl
aam
sub
hlt
sub
lds
bound
sub
es
and
call
add
add
add
add
mov
adc
pop
pop
xchg
mov
mov
sub
lods
lea
imulb
and
and
lret
loop
add
cs
xchg
sub
es
jo
push
adc
aaa
imul
cmp
icebp
shl
in
mov
pop
out
push
lahf
mov
adc
in
jae
add
pop
call
insb
push
sub
ljmp
mov
jg
call
hlt
push
adc
cmp
pushl
and
push
add
out
dec
pop
add
dec
mov
cmc
push
adc
movaps
inc
push
testb
pusha
push
push
pop
js
jne
cwtl
arpl
ret
jne
jne
sbb
add
add
add
add
cmc
pop
xchg
pop
mov
push
test
cmc
dec
xchg
or
clc
fcomps
push
xor
sbb
mov
je
add
lahf
push
or
rcl
call
vunpckhps
sbb
mov
insl
pop
pop
lret
add
clc
pop
push
sub
sbb
mov
imul
inc
jge
es
leave
pop
cmp
dec
inc
push
add
stc
mov
inc
jae
stos
add
jae
adc
inc
das
add
inc
add
xor
fisubs
adc
aaa
adcb
in
das
iret
pop
jecxz
adc
mov
add
in
sbb
daa
and
popf
scas
push
sbb
inc
xor
add
mov
xor
push
andl
dec
call
add
mov
cmp
test
clc
or
xchg
jo
movsb
lods
daa
cli
push
repnz
mov
sahf
jnp
push
push
and
test
sub
lret
test
loopne
aam
fnstsw
mulb
inc
inc
add
dec
std
imul
pop
and
out
fwait
popf
call
daa
mov
andb
idivb
xor
ljmp
jae
pushl
dec
jmp
cmp
push
test
data16
lret
loopne
lods
or
std
hlt
call
xor
pop
aas
jmp
sub
xchg
cld
add
pop
test
jge
mov
into
dec
std
repz
sub
pop
jmp
adc
cmp
scas
xor
cld
mov
adc
cmp
dec
je
add
dec
push
decb
adc
mov
clc
inc
adc
pop
rorl
pop
add
mov
push
cmp
jae
add
or
scas
cltd
adc
enter
mov
std
jne
enter
mov
cmp
add
and
sbb
add
roll
decl
pop
mov
test
call
enter
push
loope
pop
push
xlat
mov
mov
insl
je
int
les
testb
jg
aam
add
imul
sub
testl
push
cmpl
adc
inc
xor
fs
arpl
sub
dec
push
std
mov
insl
je
dec
push
les
jbe
mov
add
notl
mulb
sti
mov
push
pop
js
cmpsl
gs
and
mov
negl
femms
add
pop
jb
add
dec
sbb
mov
aaa
sti
insb
add
jno
adc
mov
iret
jmp
jmp
shlb
push
imull
dec
fisttpl
aad
in
sub
loope
sub
call
inc
xchg
sbb
call
sub
sub
add
shr
js
daa
dec
pop
cld
cmpsb
and
fisttpll
xchg
sbb
call
mov
call
xchg
add
in
xchg
movb
in
pop
mov
and
pop
fisttps
out
data16
adc
outsb
dec
add
sub
pushl
push
negb
sub
jae
cmp
int
cmp
xlat
xor
xchg
outsl
mov
xor
add
and
in
shl
icebp
mov
mov
nop
shrb
pop
and
in
icebp
sbb
mov
cs
or
pop
xor
mov
cs
mov
xchg
push
roll
pop
dec
and
xor
rclb
out
and
xor
xchg
jecxz
add
mov
jb
xchg
dec
jl
and
and
sbb
add
cmp
jne
inc
inc
ljmp
imul
inc
ret
ret
add
ljmp
add
mov
pop
inc
aas
add
cmp
orl
add
je
inc
inc
ljmp
imul
inc
ret
es
sub
inc
jae
cs
sbb
ss
cmp
mulb
dec
push
pop
in
push
sub
aas
inc
sub
cmp
mov
mov
add
add
add
add
xchg
fisttpl
sub
xor
and
int3
adc
adc
clc
inc
lcall
sub
insl
inc
jns
pop
add
rolb
cmpsl
and
add
out
sub
sub
sub
shl
xchg
inc
jge
ror
jl
arpl
ret
test
out
add
add
ficoml
jb
lcall
sub
test
push
dec
jae
sbb
sbb
mov
jmp
daa
adc
loopne,pt
shr
in
hlt
mov
inc
jmp
aas
pop
xor
xor
mov
clc
mov
subl
mov
add
mov
add
fwait
enter
mov
xlat
mov
andl
mov
jne
mov
repz
test
mov
add
jno
call
and
push
sbb
dec
mov
xchg
xchg
mov
mov
test
lea
gs
mov
dec
mov
je
cmp
mov
fidivl
lret
sbb
or
add
add
sbb
xchg
call
jae
pminub
sub
add
sub
pop
loope
rorb
test
lods
jns
xor
testb
cmp
mov
outsl
sub
sub
aaa
jns
sbb
outsl
ljmp
add
add
shr
pop
mov
aaa
jns
jle
jns
inc
icebp
or
inc
aas
and
repz
sbb
push
mov
mov
jns
sarb
pushl
or
ss
mov
pop
jmp
or
pop
insl
inc
xor
inc
add
pop
insb
data16
sub
push
popa
cwtl
mov
add
xchg
in
cmpsb
pop
in
mov
jmp
add
cwtl
scas
jns
xchg
in
test
jmp
int
sub
inc
jg
mov
inc
outsl
sub
outsl
and
pop
imul
sbb
int3
pop
adc
sub
xchg
cwtl
cmpsb
jo
mov
cltd
or
test
ret
call
add
add
add
test
fisttpl
aad
jg
lcall
add
add
cs
inc
loope
adc
inc
inc
mov
sti
push
fs
mov
xchg
std
xchg
ljmp
andb
jge
or
dec
lcall
fcoml
aad
jmp
push
push
add
push
push
sbb
or
pop
jl
sahf
testl
mov
cmp
mov
mov
xor
je
shll
jnp
js
mov
ret
jecxz
je
sahf
testl
ds
add
loope
ljmp
aaa
pop
ss
xor
jle
std
jmp
pop
inc
addb
add
add
add
add
xorl
push
push
cmp
loope
cmp
sbb
dec
dec
xchg
mov
mov
lock
or
lock
pop
sub
xchg
pop
ds
aas
sub
add
mov
mov
or
cs
mov
push
int3
mov
in
mov
imul
push
popa
mov
out
pop
insl
or
cli
pop
mov
sbb
ss
adc
jne
mov
mov
or
and
lea
mov
pop
ficomps
and
pushf
xor
sub
out
and
adc
in
xchg
pop
ljmp
cmp
inc
xor
push
add
pop
ficomps
add
pushf
out
and
and
mov
adc
fcomps
pushf
iret
or
leave
in
in
sbb
pop
fwait
cmp
inc
addr16
xor
mov
or
nop
push
test
jle
pop
je
scas
pop
add
outsl
into
frstor
addr16
add
inc
add
cmc
pop
inc
lahf
shl
insb
add
xchg
add
sub
shll
push
js
jmp
and
or
cmp
xor
jl
mov
into
adc
out
lret
jb
inc
mov
mov
inc
inc
shll
sbb
mov
ds
scas
cmpsb
jecxz
xchg
sbb
inc
mov
add
push
cmp
mov
add
sti
push
xor
hlt
cmp
cmp
jbe
cmp
mov
sub
into
mov
mov
sbb
je
lods
mov
subw
jbe
shl
add
sbb
test
in
call
std
adc
mov
cmp
pop
xlat
xchg
ror
out
add
test
pop
jge
jge
nop
add
subb
mov
flds
xor
pop
inc
call
add
mov
adc
xor
push
clc
movsl
cld
add
loopne
sub
dec
pusha
in
cs
add
sub
mull
dec
or
mov
icebp
outsb
inc
pop
sub
repz
pop
idiv
xor
fs
and
leave
dec
sbb
inc
push
adc
daa
jmp
mov
ss
shlb
mov
mov
mov
sub
jg
int
call
adc
fistpll
jae
cmp
adc
inc
outsl
add
pop
lcall
mov
imul
add
add
add
cmp
and
sub
xor
jnp
adc
fxch
lods
mov
das
pop
adc
xor
xor
fidivs
pop
pop
test
or
das
imul
jne
lcall
in
mov
clc
icebp
adc
mov
rcll
sbb
push
aaa
xlat
or
hlt
and
inc
test
add
sub
data16
pushf
shlb
xlat
loop
fmuls
iret
fstps
pop
push
jb
rcll
shrl
test
jge
test
jne
andl
inc
sahf
jmp
pop
sub
test
sub
xor
adc
push
mov
mov
inc
add
cmpl
jae
or
add
add
add
add
push
or
sub
xor
mov
add
sub
jmp
xchg
rorl
push
mov
jnp
in
push
pop
push
pop
out
mov
movsl
inc
or
jno
cmp
push
and
xor
xor
sarb
sub
sub
or
push
pop
cmp
jmp
xor
arpl
push
push
lds
mov
or
jecxz
pop
sub
or
aas
jle
pop
mov
adc
adc
adc
das
loopne
jecxz
push
gs
into
add
inc
push
mov
mov
out
aas
mov
jle,pt
lds
jae
mov
ds
lock
gs
or
cmp
sti
stc
cwtl
pop
adc
push
ret
push
mov
mov
push
pop
xlat
popf
rcrb
daa
ss
ds
fcmovb
sbb
rcrl
test
fcmovne
or
addr16
mov
xor
jmp
pop
jp
sbb
testb
call
or
cmp
aas
cmp
call
add
add
add
push
aam
mov
add
mov
mov
pop
jge
les
xorb
mov
sahf
mov
jno
cmpsl
loop
in
cmp
pop
mov
shll
push
and
fidivrl
cmp
jmp
lcall
bound
pop
push
jb
iret
addb
add
add
add
add
push
lea
push
outsb
cmc
and
push
push
cmp
jecxz
mov
push
jnp
add
push
and
loope
push
mov
shlb
cmpsb
inc
push
push
xor
mov
mov
add
mov
repz
test
or
out
das
sbb
jmp
movsb
inc
cld
cwtl
pop
push
mov
movsb
les
lret
add
adc
sub
and
push
jno
push
out
and
ret
sbb
testb
data16
push
inc
xchg
adc
sbb
daa
push
data16
dec
fbld
mulb
add
push
and
mov
ss
adc
cli
pop
push
mov
inc
imul
or
sub
enter
push
loopne
add
into
or
enter
cmp
test
or
xchg
fisttpll
mov
add
sub
xchg
lret
cmp
mov
inc
imul
push
aas
push
or
in
pop
push
mov
adc
and
adc
shll
stos
push
or
enter
dec
mov
add
push
jo
push
inc
imul
sub
mull
sahf
mov
dec
cwtl
imul
int3
data16
pop
sbb
aad
int
test
or
pop
outsl
shl
cs
push
pop
pop
enter
fs
fwait
test
aaa
aad
mov
mov
jo
xor
inc
jmp
mov
outsl
pop
cltd
add
jmp
inc
pop
xor
mov
push
push
cmpsb
xor
call
cmpsw
dec
sbb
and
stc
sbb
fldcw
int3
jmp
inc
out
mov
stos
adc
add
lods
aas
call
in
cmp
out
mov
xor
test
stos
inc
lahf
imul
add
add
add
movsb
call
ja
test
je
adc
add
push
lret
mov
xor
aad
repz
and
dec
pushl
adc
cmpsl
inc
decl
je
mov
imul
mov
aad
jne
lahf
clc
or
cmp
dec
adc
decl
dec
aas
pop
pop
cmp
adc
inc
in
jno
jmp
fwait
clc
or
push
dec
lret
jle
sbb
mov
iret
cmp
sbb
mov
push
cmp
jne
or
hlt
test
inc
clc
sub
mov
xstore-rng
cmpsl
inc
push
incb
arpl
mov
pop
shlb
xchg
repnz
mov
pop
and
das
mov
lods
lods
add
insb
aas
jb
jo
add
das
jge
cmp
std
sbb
stos
ror
push
bound
sub
inc
push
leave
xlat
mov
lods
leave
or
cmpl
addl
mov
pop
ss
pop
gs
xor
rclb
xor
add
add
add
adc
mov
push
test
aas
jae
xor
add
pop
mov
lret
psubsw
imul
sahf
mov
push
popa
in
jle
es
mov
stos
clc
push
mov
rcrl
cli
push
jmp
int3
pop
int3
rcrb
cmp
jmp
cld
xchg
sbb
nop
or
pop
jmp
jle
xor
sbb
dec
add
aas
ljmp
pop
mov
iret
ss
push
mov
cmpsb
push
rcrl
out
add
int
xchg
sbb
addr16
lock
cmp
cld
test
inc
jmp
in
test
pop
add
jns
adc
xor
jmp
sub
mov
cmpsl
pop
mov
ror
add
outsl
and
jne
ret
cmp
xlat
cmp
test
sub
push
add
push
cwtl
mov
fisttpl
inc
ret
mov
mov
mov
incb
xchg
sbb
sahf
iret
push
inc
xorl
in
sbb
add
jle
subl
push
push
jle
sbb
pop
mov
inc
inc
mov
hlt
push
outsl
scas
push
xchg
into
adc
push
or
dec
fisttps
push
mov
mov
hlt
mov
push
sub
aam
fldenv
inc
sub
aad
mov
push
pop
punpckhdq
jns
jno
jae
mov
loopne
js
push
popf
dec
dec
jl
vsqrtsd
pop
adc
add
ljmp
add
add
add
jne
data16
testl
dec
aaa
lock
sub
inc
jae
pop
lods
repz
popa
mov
mov
incb
adc
mov
add
jnp
fdiv
or
cmp
xor
rcl
cmc
repnz
out
pop
ja
sub
orb
sub
jge
jmp
mov
dec
add
dec
clc
ret
movsl
aam
stc
orl
xor
sub
pop
fstps
fistpl
imul
cmp
ds
dec
cwtl
stos
pop
in
mov
adc
or
add
cwtl
clc
jp
pop
mov
push
mov
lcall
and
test
outsl
loope
sbb
xchg
or
movsl
loope
imul
stc
sub
add
xor
aad
sbb
pop
in
lods
mov
adc
lea
loope
stc
sub
sub
das
sbb
lea
loope
jno
dec
out
les
xor
mov
lock
inc
jmp
leave
addr16
jmp
sub
jl
add
pop
jge
lea
xchg
add
mov
js
xor
inc
xor
cmpsl
testb
mov
je
fscale
rcrl
sahf
mov
movb
jl
sbb
rcrb
mov
xor
lds
push
cmpsb
rcr
popf
filds
jo
lea
andb
nop
pop
pop
mov
add
add
add
in
add
mov
ret
push
pop
mov
mov
loopne
or
mov
mov
sub
fbld
sbb
fbld
ja
adc
ja
push
mov
mov
inc
fadds
cltd
cmc
jecxz
clc
add
pop
shl
sub
inc
je
shl
cmp
jmp
mov
add
add
add
add
test
leave
imul
adc
inc
ret
mov
add
stc
mov
add
lods
or
jne
repnz
jmp
push
imul
sub
dec
test
and
addr16
popa
sub
rcrl
int
lea
add
movsl
xchg
shlb
mov
popa
inc
dec
leave
adc
jecxz
add
adc
dec
and
cmp
sti
test
sbb
xchg
sub
out
add
test
sbb
iret
iret
or
xchg
and
sbb
enter
mov
add
sub
mov
xor
adc
cmp
ror
shl
sub
mov
lods
xor
pop
popa
mov
rcll
cmpsb
pop
cmp
xchg
pusha
sub
std
mov
lods
aas
jmp
jne
call
popa
inc
dec
lods
lods
aas
jmp
jne
lcall
in
xchg
pop
fstps
push
addr16
pop
add
fsub
pop
push
pop
mov
push
jne
push
call
add
add
add
xor
cmpsl
add
add
inc
in
mov
addr16
mov
in
inc
in
cmpsl
dec
ds
addr16
test
arpl
subb
addb
jae
stos
shrl
cmp
push
aad
cmp
mov
ret
and
sbb
jne
stos
dec
or
sti
push
data16
pop
mov
pushf
xchg
sbb
test
push
je
jo
fnstenv
int
or
dec
daa
call
sub
lock
add
sbb
mov
push
inc
repz
and
xchg
test
xor
ljmp
jle
mov
adc
jae
cmp
xchg
ljmp
sub
pop
mov
add
out
das
add
pushl
mov
test
sti
mov
inc
loopne
jg
pop
xor
inc
and
adc
dec
pop
pop
push
add
push
popa
arpl
loope
push
into
xor
ljmp
and
idivb
xor
clc
mov
pop
inc
xchg
push
sub
cmp
and
add
repnz
dec
outsb
pop
out
mov
push
push
cld
test
pop
shlb
mov
push
test
cmp
adc
lods
mov
stos
test
xchg
rorb
add
and
add
pusha
and
shl
int3
mov
sub
push
lahf
test
push
imul
in
add
pop
movd
ret
pop
fs
mov
mulb
add
jno
jne
sbb
and
test
ret
je
sub
jle
cmp
loopne
pop
mov
movsb
aaa
jmp
imul
fldt
movl
pop
es
dec
iret
xor
xor
jbe
sbb
xor
add
add
cmpsl
pusha
gs
jmp
adc
test
push
or
pop
adc
xor
gs
test
push
jnp
mov
jns
pop
mov
push
add
adc
add
test
aaa
add
add
adc
adc
aad
decb
jg
sbb
push
pushl
push
incl
sub
add
pusha
push
ljmp
jne
adc
inc
test
loopne
push
jmp
mov
into
cmpxchg
pop
pop
xor
add
sbb
mov
repnz
out
mov
sub
xor
loopne
std
cmp
mov
jne
bound
inc
aam
js
sub
push
sub
sbb
inc
aam
push
fs
test
in
push
lods
dec
ljmp
adc
dec
jmp
xchg
push
cmp
push
aam
jne
out
lods
test
add
xchg
movsl
imul
lods
mov
sbb
jmp
push
add
mov
pop
mov
jge
stos
clc
sub
lock
scas
pop
pop
or
hlt
into
lock
and
scas
and
jne
scas
and
pop
jb
inc
and
les
idivl
stos
or
int3
jno
pop
lret
scas
sub
sti
and
pushf
fnsave
sub
test
outsb
inc
add
mov
leave
addr16
loop
ret
nop
sub
pop
test
sbb
jmp
add
mov
imul
enter
jmp
cmp
lret
push
pop
inc
jmp
pusha
push
imul
ss
add
jmp
addr16
jmp
arpl
mov
jmp
push
sbb
add
addb
inc
or
or
out
mov
call
pop
incl
push
cmpsb
inc
dec
push
mov
ljmp
mov
dec
out
adc
std
test
addr16
jle
jle
and
jb
sub
mov
jbe
out
call
inc
xchg
rcrl
push
mov
sub
push
sub
call
cmp
movl
or
sub
call
or
push
hlt
add
add
jp
jmp
xor
jmp
sub
jmp
inc
pop
adc
xor
cs
in
pop
push
lods
fdivrp
in
js
cmp
je
push
sub
sub
out
dec
aas
scas
dec
mov
negl
mov
mov
cmp
and
add
pop
cmp
aas
mov
inc
sub
add
add
add
add
aas
inc
int
addr16
push
jb
mov
push
cmc
sbb
out
imul
movb
lea
xor
pop
push
dec
and
fldenv
xchg
or
test
insb
loop
mov
sub
sub
ret
mov
adc
in
call
inc
add
and
imulb
mov
push
add
add
inc
and
sub
and
sub
add
sub
int
jmp
cs
test
jmp
addr16
jmp
or
pop
sub
in
pop
call
add
fwait
aaa
push
sub
cmpsb
push
test
sub
je
cmpsb
pop
es
sub
jle
cmpsb
pop
sub
cs
jge
fs
add
sub
jmp
add
pop
or
jbe
cmp
add
and
jmp
adc
and
rorb
sbbb
or
xchg
call
and
rolb
xor
loopne
or
testl
add
adc
mov
gs
jne
std
stos
xor
sti
pusha
mov
xor
test
cld
inc
and
mov
push
incl
test
nop
sti
and
add
push
push
fdivl
add
jnp
insb
adc
cmp
vcvtsd2ss
adc
push
and
mov
jg
cmp
inc
gs
cmp
mov
stos
movsb
adc
mov
sub
data16
fwait
lds
add
xchg
or
fcompl
dec
xlat
enter
jmp
sub
push
inc
inc
xor
cmp
mov
pop
sbb
pop
daa
add
daa
aas
cmp
add
iret
push
push
cs
add
fs
xchg
lods
sbb
pop
sahf
xchg
adc
les
les
add
sahf
hlt
aaa
mov
mov
add
ret
insl
lcall
sub
shrl
movsl
sub
jb
jmp
xlat
movsl
or
mov
jo
cmp
jne
insb
inc
cltd
and
adc
add
jno
cltd
xor
push
jb
outsl
dec
ds
push
mov
and
jmp
cmpsb
push
call
stos
out
je
lods
push
shlb
xchg
cmpsb
push
loope
sbb
shll
movsb
sub
push
aaa
jae
mov
mov
and
add
add
sbb
jmp
aas
and
std
lods
and
push
mov
add
adc
test
mov
mov
stc
adc
decl
push
push
dec
push
sub
pop
sub
mov
decl
mov
sbb
mov
fmull
pushf
negb
shll
push
sbb
inc
add
xlat
or
fs
aam
xchg
sbb
lea
in
mov
imul
mov
cmc
cmpb
jbe
leave
daa
or
inc
adc
adc
sub
je
adc
adc
mov
sub
int
test
and
jmp
add
fisttpl
add
add
add
jl
push
mov
dec
ds
inc
loope
sub
inc
adc
incl
or
add
adc
mov
jnp
loopne
jl
daa
ffreep
add
sub
add
jo
int3
jle
push
je
pushf
cs
cmp
je
lea
insl
sbb
inc
and
sbb
ja
mov
outsl
lret
sub
fildl
sub
push
pop
fidivl
sub
repz
add
xchg
test
and
rcrl
bound
pop
jnp
fs
lea
call
push
inc
neg
leave
cmp
arpl
pop
addr16
pop
popa
or
sbb
sub
jmp
sbb
gs
add
int
jae
pop
jae
sub
add
jo
xchg
and
test
popf
fdivrp
and
fidivrs
push
mov
test
pop
sahf
dec
cld
and
shrl
xchg
scas
insb
add
dec
jae
or
push
mov
incl
test
mov
sbb
repz
rorl
loope
sbb
mov
add
add
add
add
mov
stos
jae
mov
or
out
dec
inc
hlt
fistl
cmp
xlat
ljmp
dec
pop
mov
icebp
sub
sub
pop
popa
add
mov
sbb
jle
add
shlb
push
xor
dec
test
add
je
sub
pop
je
and
mov
shlb
jmp
cmpsb
dec
adc
repz
andl
xchg
and
je
and
adc
sub
aas
add
stos
mov
fstpt
mov
enter
mov
sub
add
sub
mov
lock
cs
xorb
mov
push
mov
add
push
add
add
icebp
add
outsl
int
sbb
jl
xor
pop
add
jmp
xor
into
cmc
cmp
enter
mov
mov
stc
fmulp
jae
pop
push
sub
bound
fdivrl
loope
adc
das
adc
or
test
mov
add
or
mov
call
sub
fs
mov
addb
pop
clc
bound
and
mov
fmulp
pop
adc
sub
test
int
cmpsb
mov
cs
xor
adc
or
loope
mov
cmpsb
cmpsb
mov
add
sahf
shr
movsl
jb
stc
cmp
adc
add
add
add
ljmp
xchg
jo
push
stc
lea
mov
cmp
mov
push
test
mov
loopne
lock
push
add
or
shlb
insb
data16
jb
cmp
add
cmpsb
lds
das
pop
add
jmp
adc
add
add
add
fwait
cwtl
call
je
cwtl
call
rolb
push
fdivs
cmc
dec
jmp
dec
insl
or
push
jo
nop
ret
mov
dec
ljmp
pop
in
cmp
add
testb
add
cmp
enter
xor
je
and
add
in
ljmp
add
add
pop
sbb
add
push
mov
inc
call
dec
insl
or
jge
sbb
jle
or
incb
movb
ljmp
push
mov
jle
loop
fimull
push
mov
shrl
push
add
jge
inc
out
sub
scas
inc
mov
mov
dec
mov
add
jecxz
add
sbb
iret
pop
call
push
call
ja
lds
testb
pop
insb
inc
push
das
adc
pushf
dec
push
dec
call
sub
pop
sahf
and
pop
out
push
xchg
stc
ret
gs
mov
fwait
ret
out
pop
mov
cmp
aas
mov
add
add
add
pop
adc
mov
push
mov
sahf
push
mov
push
lret
sub
stos
sbb
sbb
outsl
addl
push
xor
add
fists
pop
mov
ja
call
into
add
mov
std
fcoml
xor
imul
add
mov
xor
std
lea
push
add
push
mov
hlt
xchg
xor
out
and
push
inc
add
jge
std
mov
and
cli
push
mov
cld
inc
jmp
xchg
incb
mov
aam
sbb
or
icebp
ds
in
fimuls
outsb
mov
xor
mov
notl
pop
sbbl
add
add
add
add
adc
and
push
pop
or
mov
dec
mov
mov
jbe
pop
ret
push
pushl
or
jnp
fcoms
divb
std
je
pop
std
je
pop
push
call
push
inc
inc
mov
pop
ret
mov
aad
in
add
cltd
sbb
add
adc
push
pushl
or
daa
adc
adc
add
add
add
add
and
add
mov
shrl
rcll
int3
in
jnp
add
mov
add
cmp
cmp
les
push
loop
jno
leave
inc
pop
fdivl
dec
push
mov
fcmovb
push
addr16
push
cwtl
call
or
or
ljmp
push
mov
ljmp
aaa
rcll
adc
adc
push
push
add
inc
add
sub
inc
shll
fmuls
xor
out
je
out
sub
add
cmp
sub
ret
or
sub
push
xor
mov
lcall
test
repz
lea
je
insb
popf
mov
ljmp
add
pop
fs
and
mov
lret
inc
sbb
add
cwtl
lods
sti
lock
jecxz
dec
sbb
ljmp
bound
scas
pop
icebp
rcrl
add
or
cmp
testb
imul
add
idivb
rcrl
jmp
add
imul
sub
mov
xor
xchg
sbb
loope
add
or
push
jo
jle
js
ret
add
push
or
sub
add
push
mov
test
out
sbb
test
arpl
push
or
push
adc
je
mov
clc
orps
jmp
ljmp
add
add
inc
and
lcall
addl
add
add
shl
push
push
inc
cmp
add
sbb
add
mov
mov
bound
adc
xchg
into
sbb
outsb
add
sti
shl
push
test
pop
iret
cmc
call
shlb
inc
jne
xor
or
xchg
sub
add
mov
sub
add
int
repz
dec
cmc
mov
call
fnsave
push
mov
xchg
cs
rorb
lea
xor
jl
pop
push
mov
aad
popa
jg
repz
js
add
xchg
shl
sub
testl
adc
add
arpl
incb
stos
cmc
jne
adc
xor
mov
repnz
std
addr16
adcl
lods
sub
lea
js
pop
cwtl
sub
imull
fdivl
dec
push
push
fisubrs
les
iret
jmp
push
out
dec
test
sbb
pop
xor
mov
mov
repnz
mov
xchg
sub
add
push
repnz
mov
sbb
inc
or
scas
mov
daa
jg
or
ss
pop
add
sub
sub
add
add
sub
decb
lock
ret
insb
mov
scas
orl
insb
push
pop
mov
pop
cmc
test
rcl
pop
jne
aas
orl
sub
sbb
es
add
add
add
add
insl
jmp
lcall
jle
fscale
sbb
je
out
loopne
adc
outsb
mov
cmp
pop
data16
jnp
pop
or
sbbl
add
inc
add
and
add
fwait
rclb
lret
add
pushl
push
xlat
pop
pop
mov
push
mov
fwait
jmp
jne
lea
inc
inc
xor
and
rclb
jne
cmp
or
add
push
int3
cmp
jae
lods
cmp
enter
add
push
mov
add
add
sub
mov
xor
sub
rclb
test
int3
cli
push
mov
stc
add
adc
pop
pushf
clc
repnz
add
add
add
jmp
cld
cmp
stc
je
xchg
mov
add
xchg
dec
push
loop
or
dec
loopne
ret
inc
jae
je
mov
adc
push
std
jb
jae
jns
add
lods
cli
lea
sub
icebp
add
int3
in
ds
out
nop
es
mov
mov
daa
add
xchg
lods
sti
cmp
fistps
loop
inc
es
cmp
adc
lods
and
xchg
lods
sti
add
insb
bound
loop
es
lahf
add
sbb
loope
pop
fucomip
adc
aad
jecxz
out
fbld
repnz
add
imul
and
xor
out
add
push
call
add
add
add
xchg
loop
int
mov
add
mov
sub
jbe
aas
adc
dec
add
shl
adcl
std
fstpl
call
jb
lcall
sbb
inc
fstl
fs
insb
mov
sub
imulb
xchg
jnp
sahf
mov
sub
xor
stc
lcall
add
add
add
cmp
fistps
cmpsl
jmp
pop
cmp
sahf
cmp
mov
sub
shll
mov
mov
testl
add
inc
cmp
mov
notl
push
jae
sar
mov
and
test
ficoms
and
mov
add
rcll
or
lahf
add
addl
add
add
and
lock
inc
add
pop
andl
xchg
xor
lock
and
addr16
out
push
sbb
adc
or
pop
xchg
xchg
mov
ljmp
clc
nop
outsl
push
mov
add
mov
cld
mov
iret
std
xor
push
ljmp
mov
lea
addl
add
add
add
add
out
enter
mov
sub
adc
and
sub
testb
sub
inc
mov
jge
add
push
lea
rorb
mov
adc
ss
mov
in
subb
aas
out
aas
sub
push
xor
shrb
add
and
scas
cmp
add
pop
fisubrs
scas
pop
pop
mov
test
xlat
insl
divl
and
imul
subb
sub
xor
xchg
cmp
incl
pop
sub
out
fmull
cli
cmpsb
or
and
testb
and
inc
sub
or
cmp
add
add
add
xchg
aad
aaa
clc
adc
adcb
cmp
cmpsb
clc
xchg
dec
rcrb
fs
stos
pop
call
and
addr16
or
test
mov
xchg
lock
and
imulb
ss
mov
ss
mov
adc
xor
lds
out
std
jmp
aad
movb
cmp
xor
std
std
aaa
push
pusha
clc
or
shrb
and
add
jmp
add
mov
clc
push
cmp
test
and
add
out
cmp
pop
cmpsl
mov
push
and
add
in
jne
mov
call
enter
dec
cmpsb
xchg
add
and
cmp
lea
dec
dec
int
sbb
test
xchg
sub
cmp
sbb
sti
fsubl
add
movsb
je
test
mov
popl
ret
movsl
jo
adc
xchg
inc
test
dec
aam
mov
adc
push
fisubl
or
movzwl
dec
mov
mov
aas
fdiv
aas
sub
xchg
sbb
rolb
sub
push
sbb
orl
add
xchg
add
cmpb
add
cmc
adc
mov
push
mov
and
mov
pop
jb
sbb
mov
daa
bound
jmp
arpl
clc
scas
fistpll
pop
fsubs
dec
setb
xchg
icebp
xchg
push
add
call
loopne
insb
cmp
inc
add
pop
or
pusha
ret
in
mov
push
jo
sbb
sbb
inc
test
mov
push
inc
dec
push
cmp
paddw
std
test
mov
stos
mov
cli
das
daa
sub
mov
mov
cld
add
fsts
inc
jmp
jb
andl
add
add
add
cld
ss
in
std
cmp
pop
add
jmp
and
sahf
pop
and
mov
loope
xor
pop
testb
icebp
jae
nop
pop
call
fs
outsl
add
push
or
sbb
sarb
dec
call
cli
imul
sub
pop
push
bound
dec
push
mov
sahf
subb
push
add
sbb
std
xor
cmpsb
pop
cld
icebp
jne
add
mov
sbb
push
test
push
add
sbb
rcll
inc
and
xor
add
xchg
sbb
lea
incl
xor
push
push
push
push
xor
add
nop
sbb
ds
xlat
into
pop
push
test
sbb
sbb
push
bound
add
add
add
adc
jae
cwtl
fldenv
push
ret
sbb
pop
js
push
mov
sub
fldcw
rorb
rolb
or
sahf
loope
xor
pop
push
lock
pusha
mov
mov
scas
in
or
and
add
push
insb
xchg
or
outsb
ret
xor
cmp
push
mov
push
repnz
xlat
xlat
mov
inc
repnz
pop
cmp
aas
sub
sti
icebp
inc
nop
add
adc
hlt
adc
mov
sbb
pop
test
dec
pop
mov
jmp
out
mov
imul
dec
cwtl
xchg
jmp
pop
sub
rcll
cmp
or
aaa
sub
mov
sbb
jb
xchg
add
sub
test
ja
gs
adc
mov
insb
movsb
popl
fisubrs
out
and
hlt
or
xor
mov
es
sbb
push
call
ficoms
jb
or
push
jge
stc
mov
dec
and
call
fldt
pop
bound
pop
ret
sub
test
add
test
sub
sbb
or
stc
push
rcrl
add
lahf
in
insl
cs
add
mov
jb
fisubrl
dec
andl
and
andl
sub
dec
andl
inc
cmc
mov
push
stos
jno
adc
pop
and
sub
add
add
add
and
cmp
and
add
shl
cmova
add
ret
ficompl
push
pushl
pushl
in
call
dec
xor
xchg
and
mov
sub
decl
sbb
sti
jl
adc
andl
je
or
je
in
mov
add
daa
call
add
add
add
add
jne
cvtpi2ps
cmc
push
jno
mov
add
test
jg
and
outsl
mov
mov
pop
mov
adc
add
sub
add
sub
mov
in
insb
cmpsl
inc
loopne
cli
pop
cmp
sub
repnz
add
add
add
ljmp
inc
push
clc
mov
out
jecxz
aaa
mov
enter
shlb
push
rorb
out
sub
aas
cld
std
hlt
dec
adc
adc
xchg
cmp
xchg
xor
bound
or
hlt
stos
fisttps
inc
mov
sub
cmp
ljmp
stos
fildll
out
mov
or
call
add
add
add
dec
psubsb
push
pop
or
sbb
sub
test
addr16
dec
and
es
sbb
adc
pop
dec
fs
popa
cmp
fnstcw
push
imul
inc
or
inc
mov
call
popfw
inc
and
lock
push
xor
and
inc
div
inc
xor
je
fdivrp
out
cmp
pop
jb
push
ret
dec
mov
add
add
add
mov
push
adc
notb
or
mov
imul
stos
clc
jmp
es
inc
idiv
mov
jmp
dec
dec
adc
mov
nop
push
std
xchg
jmp
dec
add
mov
mov
pop
das
rclb
std
setae
roll
rep
add
inc
ret
addb
adc
push
xor
les
mov
or
cmp
push
add
lret
sbb
mov
fdivrp
or
or
add
cmp
faddp
or
add
or
jmp
inc
hlt
popa
sub
add
xlat
cmpsl
sub
or
lods
adc
push
jle
das
jns
dec
mov
xchg
mov
inc
jae
cmc
inc
dec
std
mov
mov
mov
mov
dec
sarb
jae
sbb
fcmovnu
les
mov
xchg
xchg
sub
clc
adc
lcall
iret
pop
lock
add
add
add
add
fists
and
pop
jmp
sub
insb
mov
xchg
adc
icebp
push
or
pop
testb
out
mov
pop
pop
mov
insb
mov
sbb
pushf
daa
adc
es
push
pop
nop
sub
lock
in
pushf
or
test
mov
mov
push
mov
dec
clc
add
or
add
lock
cli
clc
dec
cmp
mov
pop
sbb
mov
add
repnz
std
pop
push
inc
out
cmpsb
cmp
and
push
pop
mov
sub
mov
in
test
adc
test
cmpb
rcll
add
aam
push
ret
sub
adc
add
insb
xor
insb
inc
cwtl
stc
jmp
add
mov
jmp
sbb
mov
adc
cmc
movsb
lock
inc
imul
jecxz
call
popf
xchg
adc
es
pop
add
pop
shrb
std
out
and
call
xchg
std
out
and
incl
loope,pt
push
sbb
adc
mov
add
push
mov
jnp
add
insb
lds
inc
outsb
mov
inc
pop
mov
ret
push
imul
add
mov
jne
and
pop
shl
std
subb
inc
add
mov
dec
jmp
and
push
sub
xchg
add
inc
add
xchg
cld
jle
jle
adc
fcmovu
lret
sub
mov
add
test
push
daa
mov
fdivl
and
nop
test
sub
jl
inc
sub
and
push
mov
sub
push
add
jecxz
std
lea
push
andl
ljmp
or
test
stc
out
pop
add
mov
sbb
testl
out
pop
xor
add
add
add
sub
fistps
call
cwtl
stos
stos
mov
sbb
sbb
scas
call
add
scas
call
inc
call
and
out
push
not
sub
pop
xchg
out
sub
pushf
cmc
jb
add
cmp
inc
push
pop
addr16
add
call
mov
adc
std
push
mov
jge
ja
jmp
sub
mov
imul
in
push
sub
sbb
push
push
fs
sbb
ljmp
push
sub
test
sub
mov
inc
xor
pop
and
pop
jmp
mov
iret
mov
jae
popa
add
jmp
add
add
add
clc
push
push
pop
std
mov
daa
in
std
inc
mov
inc
mov
std
push
xor
call
inc
in
add
add
sahf
mov
mov
call
sbb
push
ljmp
jge
pop
repnz
add
push
in
push
cmp
daa
add
xor
std
adc
incl
iret
bound
mov
popf
mov
dec
decl
cmovo
scas
mov
roll
std
ss
jmp
je
sarb
push
mov
pop
leave
adc
add
aas
sub
mov
sbb
lret
pop
xchg
xchg
shrd
mov
cmp
add
inc
pop
sub
xchg
add
aam
out
scas
mov
and
stos
pop
or
xchg
xchg
add
sub
jle
jbe
sbb
jno
or
ljmp
popa
dec
or
or
add
adc
ljmp
jne
out
jnp
out
pusha
test
in
test
pop
testl
sbb
sbb
je
add
insb
das
test
fistpl
pop
mov
or
repnz
pushf
pushf
push
out
xchg
push
xchg
or
jge
out
adc
insl
add
pop
jb
pop
je
jnp
scas
lods
cmp
fs
push
add
pop
ljmp
and
xchg
mov
out
mov
pop
fsub
xchg
adc
dec
je
sub
icebp
add
adc
test
stos
test
repnz
arpl
jo
loope
loop
hlt
bound
and
sbb
xor
push
sub
and
loope
sub
jbe
xor
icebp
notl
mov
sbb
fnstsw
in
sub
push
popf
inc
cltd
push
popf
loope
icebp
jb
test
mov
pop
push
lds
clc
inc
jp
std
dec
stos
cmpsl
jae
sbb
adc
lcall
add
or
push
call
mov
fcomip
lea
push
cmp
cmc
test
and
dec
xchg
roll
sbb
pop
and
call
idivb
ljmp
mov
shll
add
out
adc
test
ss
mov
mov
add
std
adc
add
ret
and
sbb
push
inc
call
lahf
jnp
std
in
mov
xchg
dec
or
aad
mov
int
jnp
ret
out
pop
pop
stos
sbb
test
pop
lock
add
jns
add
ss
add
fadd
sbbb
mov
sub
ljmp
jno
divl
jnp
sti
xor
imul
imul
adc
sbb
adc
in
aam
mov
mov
cld
in
sbb
and
add
ds
cltd
lods
sti
insl
dec
xchg
jbe
lahf
mov
add
test
sub
sub
jnp
push
notl
sbb
in
jle
jecxz
pop
in
mov
in
xchg
jge
cmpsl
sbb
xchg
neg
pop
insb
in
sub
adc
fistps
in
and
xor
pop
xor
cmpsl
cmpsl
iret
dec
mov
sub
add
clc
jg
jbe
add
fmuls
jb
push
xor
mov
fwait
call
inc
jmp
mov
xchg
stos
add
sub
call
icebp
test
or
mov
subl
xor
iret
jo
je
repnz
add
xor
inc
test
jp
lock
imul
out
shr
push
clc
add
add
add
add
add
pop
mov
cs
inc
cmpsl
or
xchg
sbb
test
out
hlt
jne
imul
decl
pop
mov
lahf
mov
clc
dec
cmpsl
icebp
lea
xchg
push
mov
pop
mov
inc
sub
pop
cld
xchg
popf
imul
fwait
sbb
mov
add
xchg
and
add
or
sarl
jmp
int
cmp
adc
xchg
add
mov
add
mov
popa
ja
push
loopne
pop
sub
stc
js
and
lret
jl
std
clc
mov
pop
jo
aas
sub
jmp
xor
jge
push
cmpsl
mov
out
daa
add
mov
jg
mov
clc
add
add
bound
push
mov
push
decb
clc
js
mov
sbb
jne
add
mov
scas
mov
add
fmuls
mov
push
add
add
fists
jbe
cmpsb
mov
sub
fdiv
mov
pop
js
pop
cs
sub
add
add
add
add
jb
lds
inc
add
js
xchg
loope
mov
mov
movsb
pop
gs
or
add
insb
pop
mull
loope
mov
out
xorl
inc
bound
fsubrs
bound
in
cmpsl
repnz
sub
push
aaa
loope
add
xchg
mov
adc
sub
add
add
add
add
sar
pop
out
es
add
pop
addl
shlb
fsts
mov
arpl
mov
pop
add
aam
mov
and
pop
add
cld
xchg
cmc
adc
std
mulb
ret
pop
push
rcrl
std
lods
push
and
sub
mov
mov
fistl
and
add
add
add
add
dec
adc
cwtl
call
add
cmp
pushf
sbb
je
push
icebp
or
mov
call
sete
push
call
dec
mov
add
adc
std
jmp
std
inc
mov
orl
sbb
sbb
adc
cmpsl
aaa
cmp
or
and
loop
inc
xchg
xchg
inc
and
nop
inc
and
mov
lea
mov
mov
push
mov
add
sub
sub
repz
add
sub
adc
inc
add
mov
add
ds
mov
dec
decl
inc
fmuls
insl
incl
ljmp
xor
push
std
add
das
addr16
dec
and
std
ret
std
movsl
and
movsb
mov
in
lods
pop
mov
pop
xor
xchg
addr16
xor
mov
jmp
pop
mov
out
icebp
iret
inc
stc
xor
lods
adc
xor
pop
inc
sbb
jp
imul
dec
push
sub
imul
das
mov
fs
fidivl
iret
xlat
add
pop
bound
test
repnz
pop
es
loopw
cmpsl
lods
add
sahf
test
and
sub
add
cmp
pop
fidivrs
inc
sbb
cmpsb
or
mov
std
notb
xor
insl
push
or
jg
mov
neg
rcrl
add
add
jecxz
std
and
push
lods
faddp
in
pop
or
push
mov
add
or
fcoms
cs
push
jae
sub
mov
jp
ss
jae
in
pop
nop
xor
jmp
inc
sub
add
outsb
lods
dec
add
leave
sub
adc
pop
pop
aad
rcr
sub
add
in
arpl
push
and
mov
outsb
gs
push
mov
pop
outsl
push
and
ret
jge
xor
mov
push
pop
fcmovu
add
ds
andl
call
call
je
cwtl
xlat
pop
rcrl
cmp
addr16
adc
subl
std
mov
add
add
add
mov
or
aaa
cmovo
and
std
test
inc
add
enter
jae
mov
loope
rclb
popf
icebp
mov
fisttpll
pop
xor
sti
std
out
mov
sahf
leave
mov
dec
into
call
test
add
inc
inc
clc
stos
sti
stc
call
mov
les
jl
ret
pop
add
aam
js
fimuls
std
negl
sub
imul
pop
xor
mov
es
jnp
xchg
push
ret
pop
add
divb
outsb
loope
add
pop
adc
push
stos
push
mov
sahf
movl
fidivrs
das
js
cmp
stos
out
ljmp
out
push
jecxz
sub
out
adc
add
add
add
sub
mov
xor
das
pop
out
call
pop
and
outsl
pop
test
pop
call
sub
arpl
sub
add
cmp
push
ret
in
xchg
sbb
ljmp
add
adc
pop
add
pop
ret
xadd
flds
scas
push
add
stc
inc
add
jno
xor
push
fcoml
jge
pop
add
lahf
std
cmpsb
mov
or
xchg
and
jae
js
adc
neg
pop
packsswb
or
xchg
xchg
icebp
dec
or
or
add
xchg
stos
inc
or
add
add
jge
mov
insl
xchg
test
pop
add
add
aad
rcl
jge
or
xor
add
test
sti
call
rcr
add
xchg
insl
jg
mov
aam
inc
cmp
mov
mov
ret
iret
in
aad
rcl
dec
push
sub
add
mov
cli
std
test
or
std
add
xchg
add
dec
mov
add
inc
shll
inc
std
sub
in
int3
ret
push
mov
jmp
xchg
cli
dec
cmp
std
inc
dec
les
insl
or
dec
cld
sti
sub
scas
idiv
xrelease
push
mov
dec
cld
std
jbe
jle
add
or
inc
dec
out
jno
mov
outsl
push
mov
sub
adc
ds
aas
and
jb
mov
stc
test
out
test
jnp
je
fisttps
and
push
add
push
add
dec
jmp
jns
out
rcrb
and
outsb
sbb
cmp
aas
dec
jecxz
sbb
add
add
add
add
pushf
cmpsl
outsl
sub
push
pop
jne
lds
pop
xor
sbb
adc
hlt
icebp
xor
loop
call
lahf
shll
sub
push
bound
pop
push
shll
int
shrb
movb
cmp
icebp
icebp
push
sub
filds
sub
sarb
mov
and
mov
sbb
ss
push
add
dec
or
fcomps
add
lahf
enter
push
bound
cmpsl
dec
loope
ret
or
add
add
je
xchg
enter
int3
test
jmp
test
sti
call
and
or
jg
add
mov
in
fwait
push
add
add
cmpsl
cmp
sbb
xor
push
add
xor
adc
pusha
add
into
xlat
stc
jmp
inc
and
add
daa
push
mov
and
outsl
mov
adc
popf
adc
mov
std
cmc
pop
add
hlt
inc
add
ss
insb
xor
add
jl
pop
fs
cmpps
test
xor
or
mov
xor
hlt
inc
jo
std
mov
jae
mov
push
aad
or
inc
stc
andl
jg
pop
jno
mov
jns
std
aad
hlt
adc
testl
cmpsl
cli
sti
push
lahf
push
sub
jp
hlt
aas
cmp
hlt
cltd
das
pop
aas
add
sar
pop
pop
rcl
dec
sbb
mov
bound
sahf
inc
sbb
pushf
or
add
pop
aam
and
jo
movsl
push
xor
and
outsl
adc
inc
movsb
rcrb
andl
lods
lret
mov
mov
leave
pop
out
add
pop
inc
sub
hlt
lahf
cmp
mov
adc
idivb
lods
pop
out
aam
add
subl
std
mov
sti
jne
cs
ror
pop
add
faddl
imul
push
outsb
cmp
lds
push
std
aas
inc
pop
jbe
sub
xor
xchg
mov
faddl
mov
pop
add
pusha
push
sub
ljmp
es
add
add
add
add
add
push
je
xor
je
fiadds
jmp
inc
inc
adc
cs
in
cmp
xchg
push
adc
ss
adc
insb
mov
inc
add
or
pop
add
into
xor
les
call
adcb
ror
xor
add
jo
inc
ret
fsts
insb
repz
rolb
add
add
add
add
cwtl
out
ret
sbb
push
mov
in
add
js
rcrl
lock
aad
test
add
into
movsb
ds
xchg
hlt
mov
movb
push
test
movsb
clc
or
sub
pop
add
movb
aas
push
push
inc
sub
rorl
cmp
std
std
push
jb
repnz
add
add
add
add
aas
stc
xor
xchg
mov
and
or
xchg
mov
fldcw
lret
or
push
fsubrp
jae
lds
add
sbb
push
push
adc
sub
pop
icebp
pop
xchg
push
sub
call
aas
and
pop
sbb
sub
fwait
repnz
sub
std
in
push
pop
dec
add
aaa
cltd
add
aaa
icebp
cmp
lods
inc
sub
insb
les
jb
add
sbb
icebp
sarb
jb
ja
mov
or
lcall
mov
jecxz
imul
es
pop
jo
xchg
or
add
into
jl
jle
jo
jle
add
sub
add
in
add
add
int3
jae
popa
clc
fs
call
insl
imul
test
cs
add
push
setle
add
jle
jmp
insb
cli
push
cmp
pop
mov
pop
add
loope
dec
addr16
gs
push
add
mov
mov
add
add
int3
xor
xor
lds
jae
rorb
fs
cmpb
call
je
sbb
fbstp
jne
ljmp
fs
pop
leave
or
jge
or
add
pusha
sahf
inc
sub
cmpsb
clc
std
mov
push
mov
and
out
enter
dec
push
lea
clc
std
je
push
lea
ds
call
test
inc
jge
pop
mov
pop
and
daa
mov
ret
inc
test
in
xor
lock
ja
std
ja,pt
pop
lret
mov
ljmp
jbe
cmpl
jp
xor
or
mov
push
push
cmpb
add
add
add
mov
fsts
pop
mov
aaa
jg
jae
mov
jmp
add
sti
sub
lds
add
cmp
je
add
std
sub
lock
lds
popf
push
cld
aaa
outsl
pop
out
hlt
mov
int
lret
ljmp
or
popf
mov
xor
inc
sub
jmp
adc
outsl
pop
out
add
stc
sub
mov
daa
sub
out
add
push
test
add
cmpsl
dec
fs
add
lret
add
incl
jb
in
sbb
fs
push
stos
add
push
in
inc
sub
lret
push
inc
shl
lret
imul
xor
jbe
add
mov
mov
or
int3
test
cli
jecxz
jmp
sub
std
in
in
inc
jmp
push
je
mov
and
cmpsb
pop
imul
cmpsb
push
push
jb
sahf
shl
cwtl
adc
out
pop
add
inc
icebp
ror
std
insb
dec
sbb
pop
lret
adcl
inc
in
or
ret
sbb
divl
lret
imul
mov
call
cli
clc
pop
mov
jno
in
shlb
add
dec
call
adc
mov
adc
out
std
push
xchg
xchg
add
mov
add
es
in
lods
mov
test
dec
adc
test
std
add
sti
test
sbb
testb
insl
push
scas
scas
add
mov
mov
into
add
xchg
mov
mov
cs
orl
sarl
je
sub
jno
shll
and
jg
add
mov
mov
int3
add
in
and
add
add
add
add
imul
add
add
ljmp
out
decl
and
inc
ljmp
mov
add
push
sbb
das
mov
inc
sub
outsb
sub
add
push
hlt
sbb
dec
rcr
xlat
add
cltd
jne
push
test
lods
and
add
sbb
add
sbb
enter
mov
sbb
add
cmp
push
add
repz
pushf
cmpsl
outsl
fldenv
push
mov
outsb
xchg
shlb
daa
add
inc
add
loope
je
ret
icebp
icebp
nop
sti
pop
shll
mov
jnp
inc
ret
insb
std
aam
xor
repz
in
mov
in
add
pop
test
cli
pop
push
mov
sub
popa
xor
push
dec
and
orl
insb
pop
dec
sbb
fadd
std
cmpsb
adc
xchg
and
jmp
and
std
rcll
std
cmpsb
jp
adc
jo
and
push
inc
in
push
fs
sti
jne
mov
or
adc
add
add
add
sarb
imul
add
inc
shlb
push
push
xor
in
inc
mov
mov
pop
ret
push
mov
xchg
outsb
sti
jne
inc
jns
push
xor
ficomps
push
out
sub
faddp
cld
adc
lret
test
dec
cmp
out
and
decl
cmc
dec
xor
sahf
divb
add
add
add
add
fildll
pop
sbb
and
or
mov
and
out
or
outsl
or
fwait
out
mov
sbb
or
mov
add
sbb
stos
jp
hlt
cld
outsb
adc
stos
adc
idivl
pmuludq
jbe
mov
out
js
push
addb
mov
rcl
jg
mov
fiadds
add
add
add
xor
mov
std
lahf
mov
jae
fiadds
adc
pop
inc
ret
xor
push
jo
jnp
sub
out
pushl
ss
hlt
pop
fisttps
dec
xlat
dec
xlat
dec
iret
dec
out
out
mov
inc
sub
aam
test
clc
jmp
outsl
cld
xchg
cmc
xor
sbb
adc
push
call
movsb
and
xor
jns
lods
dec
pop
sub
jl
push
dec
push
decl
out
fstpt
ret
jmp
pop
and
jmp
and
ret
xor
add
dec
dec
and
xchg
repnz
je
push
dec
or
arpl
push
fs
mov
push
or
iret
loopne
aad
pop
call
add
add
add
jae
std
sub
add
mov
mov
cld
adc
je
mov
and
out
cli
pusha
call
sbb
jmp
fidivs
push
add
mov
push
call
add
ret
dec
call
mov
mov
jg
pop
push
mov
in
fistps
add
add
add
add
sahf
popa
clc
ret
push
push
mov
decl
lock
mov
dec
jmp
pop
add
push
call
test
sub
push
clc
add
inc
jae
inc
or
ret
addr16
inc
jno
add
clc
add
add
aas
sbb
mov
cmp
in
mov
push
and
add
add
add
push
fbld
or
pop
lret
ret
cmp
es
push
jl
mov
adc
xchg
int
pop
test
loop
mov
outsb
les
mov
push
push
pop
mov
mov
rclb
mov
shlb
in
xchg
loopne
mov
xor
sti
insl
adc
sub
push
hlt
xchg
mov
add
sub
rcl
sub
out
test
outsl
inc
add
fnstenv
xchg
test
outsl
mov
add
fidivs
add
les
clc
xor
mov
fistpll
out
iret
dec
fnclex
cmp
mov
add
pop
negl
lahf
inc
or
dec
pop
out
cmp
add
add
add
add
shrl
out
mov
add
insl
fdiv
add
xchg
or
adc
adc
shll
je
add
call
gs
xor
pop
daa
jae
or
adc
sub
xor
mov
sahf
or
call
xchg
fs
adcl
mov
lock
gs
push
pusha
pop
add
sub
jecxz
std
jmp
push
paddsw
pop
test
loop
std
pushf
jns
mov
mov
call
pop
pop
mov
cmc
xchg
rol
clc
andl
push
in
dec
sbb
pop
jp
jmp
mov
xchg
mov
adc
add
clc
addr16
add
imulb
cmp
add
cmpl
adc
je
icebp
out
int
add
iret
add
and
cmp
or
jge
inc
push
mov
inc
and
cwtl
loopne
mov
dec
and
adc
mov
add
movb
ljmp
ret
adc
inc
or
or
dec
jle
sub
cmpb
jae
inc
inc
and
jns
or
xchg
pop
push
into
mov
sbb
and
adc
aad
jb
and
dec
jne
jg
sub
incl
pop
xchg
add
mov
fucomp
add
out
cmpsb
fistpll
rcrb
dec
push
seta
stos
mov
adc
movsl
cmp
adc
adc
repnz
pop
insb
ret
cltd
mov
mov
pop
push
scas
push
inc
jmp
adc
sub
xchg
xlat
mov
fadds
mov
data16
hlt
jne,pt
push
out
add
imul
mov
add
test
or
mov
out
push
mov
clc
push
std
sub
bound
ss
push
jecxz
test
ja
std
jb
fstl
cmp
or
sub
lcall
pop
sub
scas
es
add
es
xchg
add
jo
ret
adcl
add
lock
sbb
jmp
mov
add
into
icebp
xchg
pop
xchg
mov
ret
jmp
cmp
je
imul
dec
pushl
adc
cmpsl
inc
adc
xchg
adc
lahf
les
movsl
inc
lock
push
fldenv
mov
out
cli
ss
jb
shlb
jge
and
add
stos
inc
clc
and
jno
int3
push
or
aad
roll
push
sysexit
inc
mov
fdivr
ljmp
jno
dec
adc
mov
adc
mov
add
aad
add
clc
push
in
jp
std
xor
jg
sub
xchg
or
xor
cmp
push
adc
sbb
fstps
inc
add
sub
add
add
dec
aaa
jle
or
pop
and
ret
or
mov
and
cmp
hlt
xchg
icebp
cmp
and
sub
iret
inc
push
rolb
cs
jae
sbb
push
pop
pop
data16
sbb
push
and
out
sti
movsl
mov
pop
add
dec
roll
arpl
neg
mov
mov
add
fidivl
daa
push
mov
pushf
xchg
adc
fcmovb
mov
aas
mov
pop
inc
rcrb
aas
dec
getsec
fistl
icebp
lds
mov
or
inc
arpl
hlt
js
adc
repz
mov
pop
inc
push
pop
jo
xor
pop
add
or
sub
mov
cmpsb
jecxz
outsl
and
pushf
pushf
lret
popa
popf
in
aad
pusha
or
call
cmpsb
pop
lds
clc
push
xor
std
mov
sub
shll
sbb
dec
mov
add
push
mov
sub
dec
sub
pop
test
push
add
and
cmp
push
and
into
gs
adcb
adc
jo
jbe
add
or
cmp
and
iret
push
adc
mov
inc
das
mov
decl
adc
adc
andl
sti
ss
lds
inc
outsl
and
push
inc
data16
add
and
hlt
psubsb
inc
sbb
mov
incl
pop
js
pop
ret
add
push
mov
pop
test
add
and
subl
out
sub
dec
push
mov
inc
sub
xor
cmp
ljmp
pop
add
mov
inc
sub
shrl
rolb
push
mov
adc
fadds
scas
pop
dec
add
adc
imul
add
add
add
mov
or
mov
addl
in
aas
test
pop
mov
xor
hlt
les
cs
aas
outsb
repnz
sub
shr
or
ja
jmp
test
pop
sbb
stos
cli
mov
imul
mov
sub
push
xlat
sbb
flds
push
bound
mov
sub
mov
sbb
push
sbb
cmp
xlat
inc
sub
loopne
sub
icebp
and
loopne
mov
mov
and
cs
mov
jg
sub
adc
mov
pop
adc
pop
fildll
jmp
repz
jns
cmpsb
inc
sbb
imul
pop
cld
ljmp
std
sbb
mov
mov
fisubl
adc
mov
sbb
hlt
and
jmp
inc
jmp
imul
and
fdivl
xchg
sub
daa
or
cmp
pop
mov
pop
leave
flds
out
dec
in
roll
inc
arpl
ret
dec
mov
pop
test
loope
gs
add
cmp
je
nop
lds
je
imul
rcrl
add
les
cld
rcrl
add
dec
pop
add
lret
mov
add
cld
push
adc
add
ret
rcrl
jg
andb
jbe
je
sbb
or
fsubp
or
sbb
rorb
mov
add
mov
in
dec
out
push
lea
int3
sti
incl
mov
xchg
cmp
or
daa
leave
sti
call
je
jnp
leave
aam
cmpsb
xchg
mov
jge
inc
fbstp
in
xorb
jmp
enter
inc
in
sub
add
jl
cmp
dec
or
jmp
std
xchg
scas
xor
pop
mov
add
out
ds
inc
xchg
test
je
shr
iret
cld
add
rol
xchg
fucomip
push
popa
movb
lahf
cmp
mov
xchg
cwtl
jmp
sub
mov
pop
aaa
mov
clc
mov
xor
rcrb
push
aam
sub
lods
out
sti
fildl
inc
mov
mov
jle
push
mov
sbb
adc
pushf
addl
add
add
add
add
add
cmp
cmp
inc
push
push
in
aam
jl
call
xor
fisttpl
add
repz
mov
sti
in
cmp
es
jle
jno
sub
arpl
mov
movsb
jnp
push
mov
es
mov
pusha
std
pop
inc
movl
cmp
scas
jae
dec
mov
bound
jb
push
and
lahf
clc
mov
das
rcrb
xchg
push
aam
jg
shrl
fdivl
fucomip
fxch
scas
std
dec
jecxz
mov
pop
sub
cltd
pop
int
ret
jno
mov
adcl
rclb
push
std
xchg
inc
inc
lcall
int
pop
or
add
rcrb
add
add
add
pop
call
dec
xor
adc
out
js
and
jns
std
sub
push
add
je
and
cmp
push
or
jne
xchg
push
out
repnz
gs
orl
mov
stc
add
leave
xor
or
or
repz
adc
pop
xchg
sti
roll
adc
loope
add
jo
mov
add
lds
xor
mov
sub
fcmovne
aaa
mov
lds
aaa
jge
inc
cmp
jmp
sub
xor
rol
cmp
adc
push
ret
std
lds
je
std
jp
rol
ds
lods
push
inc
popa
sub
popa
dec
push
sub
std
sbb
add
xchg
mov
push
ss
pop
cs
pop
add
mov
jb
push
jb
add
push
es
jl
stc
and
xor
loope
jl
mov
mov
out
lods
ss
push
int3
mov
mov
jnp
mov
sub
je
lods
hlt
push
fcmovb
ja
inc
mov
add
xchg
cld
iret
jb
out
sub
jmp
lcall
imul
out
iret
clc
pop
pusha
dec
jle
iret
sub
add
stos
sub
stos
jmp
adc
std
push
mov
pusha
or
repz
lods
gs
rcrb
push
add
pop
call
loope
rcl
jno
arpl
add
add
add
add
xchg
jae
inc
mov
mov
pop
xor
es
enter
inc
scas
push
push
cld
cmp
pusha
inc
stc
xchg
sbb
push
push
sub
loop
mov
pop
test
into
dec
insb
xchg
inc
add
inc
or
lret
inc
decl
in
pop
fisttps
test
and
add
rorl
test
pop
and
add
pop
inc
push
shr
jae
jle
lods
push
jns
mov
out
out
cld
push
add
out
movsb
add
pop
jg
int3
stos
test
out
and
and
jp
add
jle
arpl
sub
or
pushf
xchg
inc
adc
dec
or
imul
adc
cmpl
xorb
dec
test
adc
mov
or
hlt
xor
std
inc
mov
into
fdivs
sub
adc
mov
and
mov
fsubs
in
xchg
pop
push
fcomps
sbb
xchg
adc
popl
inc
ss
add
gs
or
add
add
add
add
push
into
pop
jae
jno
dec
pop
test
loop
cmpsl
add
std
cmpsl
add
std
cmpsl
add
std
cmpsl
add
std
cmpsl
add
std
cmpsl
add
std
cmpsl
add
std
cmpsl
add
std
cmpsl
add
cmpsl
add
cld
cmpsl
add
xchg
roll
sub
mov
leave
imull
out
pop
sbb
add
lods
fisubrl
jo
mov
test
inc
mov
cmpsl
push
out
cmpsl
hlt
div
xchg
add
sub
mov
pop
jno
mov
pop
nop
inc
jmp
pusha
or
fucompp
push
push
loop
loopne
jno
vmovaps
inc
repnz
inc
adc
push
add
loopne
lock
add
add
mov
sub
jae
jb
loopne
dec
adc
jb
call
push
sbb
jge
pop
add
testl
test
sti
call
paddusb
test
sbb
add
js
push
imul
add
adc
adc
add
mov
add
aad
jne
aam
lods
xor
subl
jo
and
sti
adcl
pop
xchg
in
mov
jmp
lcall
push
dec
lcall
lret
or
sbb
das
sbb
pop
mov
dec
idivb
sub
adc
lret
bound
sti
jb
cmp
xchg
xor
or
add
inc
dec
clc
xchg
cmp
or
mov
pop
je
sub
aam
add
add
stc
divl
pop
std
push
mov
add
cmp
aas
sub
inc
cmpsb
nop
shlb
out
fneni(8087
out
add
test
paddusw
jp
lock
lahf
push
and
sarb
enter
add
add
add
mov
movsl
fidivrs
and
add
movsl
pop
jge
xchg
dec
mov
cmc
pop
out
cmpsb
fsubp
jg
and
add
movsl
xchg
jbe
shlb
enter
out
std
adc
add
movsl
fidivrs
push
out
mov
sub
pop
movsl
xchg
jbe
jg
setae
xor
add
scas
jg
pop
out
sbb
push
add
lahf
mov
std
sahf
mulb
lcall
scas
addl
jbe
cmp
sub
push
inc
mov
dec
cmp
fstl
icebp
scas
movsl
add
mov
jne
rcrb
mov
inc
adc
std
push
rol
ss
push
pop
add
mov
lahf
pop
mov
dec
fldt
subl
sub
mov
xor
push
push
out
mov
ss
cmp
aam
out
fdivr
call
dec
pop
or
xchg
pop
testl
mov
adc
lahf
jns
xchg
push
or
push
insb
idiv
sbb
out
fstps
add
mov
jno
push
lahf
je
push
call
sti
adc
add
add
add
mov
add
fisttps
test
sti
cld
dec
in
incl
adc
es
sub
add
es
hlt
cmp
ljmp
test
incl
movb
add
ljmp
add
mov
adc
outsl
add
lds
or
xor
adc
add
add
add
testb
sbb
ret
push
test
sbb
lret
ret
imul
xchg
mov
scas
xor
xchg
imul
jge
je
sub
rep
bound
mov
xchg
repz
mov
cmc
or
or
icebp
sub
mov
into
lods
out
xchg
jecxz
and
pop
push
or
adc
sub
out
add
xchg
push
lock
cmp
add
enter
pop
sbb
js
push
ljmp
mov
es
test
hlt
mov
pop
add
adc
push
out
repz
jb
inc
xchg
cmpsb
inc
sub
dec
sub
js
push
ljmp
push
inc
repz
cltd
int
hlt
ret
or
cmp
sub
repnz
sub
enter
or
in
xor
mov
push
rcl
xchg
adc
loopne
repnz
sub
add
sbb
or
mov
inc
stos
cmp
push
jb
sahf
in
mov
pop
out
cld
scas
je
xchg
dec
fsubs
mov
mov
pop
add
push
xchg
add
add
gs
dec
adc
shll
fs
outsl
xchg
xchg
or
mov
cmp
sbb
add
jnp
call
sbb
jge
nop
jns
dec
pop
hlt
mov
xchg
mov
xchg
fdivrs
adc
nop
pop
hlt
imul
jne
push
aaa
jge
fcomip
dec
mov
cli
pop
call
jge
pop
decl
repz
sub
jl
pop
out
shl
filds
mov
addr16
cmp
adcl
mov
test
iret
imul
push
push
add
push
pop
mov
out
sbb
repz
or
push
nop
mov
decl
xchg
add
inc
push
jae
sti
dec
add
xor
cmp
nop
mov
mov
std
out
cmpl
mov
jnp
mov
in
mov
dec
mov
or
add
cmp
xor
push
and
sub
add
sbb
cs
lods
sbb
mov
pusha
pop
ficompl
aas
imul
add
frstor
stos
mov
rcrb
cmp
rorl
test
pop
pop
pop
loopne
dec
jbe
lea
pop
and
mov
jb
lock
jecxz
ja
pop
mov
adc
sub
inc
hlt
jnp
lods
fisttps
incl
inc
aad
stos
jle
push
mov
mov
mov
mov
pop
xor
aaa
add
mov
cmp
mov
movsb
dec
fnstenv
cmpsb
push
fldcw
addr16
fsts
and
pop
xchg
movsb
jnp
lahf
loopne
shrb
mov
pop
add
popa
out
xchg
xchg
data16
push
push
jno
or
jmp
add
add
fsub
iret
push
sti
test
stos
dec
fdivrl
arpl
mov
insb
aaa
sarl
pop
fcompl
push
in
mov
pop
push
or
hlt
call
call
shrd
mov
das
xchg
mov
popa
loopne
scas
cmp
add
push
mov
inc
lret
popa
inc
call
andl
andb
xchg
cmpsb
xlat
jle
mov
add
sub
add
out
aaa
add
movsl
jmp
sub
push
out
add
adc
sub
fsubrs
inc
fsubrs
cmovs
test
in
aad
mov
push
mov
push
mov
ja
test
mov
cmp
cmp
stos
mov
xchg
add
lahf
xchg
jnp
mov
lods
mov
add
push
cmp
and
sbb
sbb
add
hlt
cmc
aaa
sub
mov
mov
pop
sbb
movsb
mov
in
out
lods
mov
cltd
jae
or
je
add
adc
mov
jns
iret
insl
out
cltd
fiadds
fisubl
push
loopne
shlb
iret
adc
mov
jbe
out
add
fwait
pop
inc
pushf
xchg
xchg
cltd
jb
push
out
jge
jp
add
mov
add
fucomp
stc
mov
jmp
or
adc
in
pop
or
ds
fucom
flds
mov
out
add
adc
in
or
push
cmp
daa
ja
ret
in
mov
push
repnz
cli
fwait
inc
sbb
mov
repz
jnp
xchg
push
frstor
test
mov
mov
out
jb
das
xchg
push
lret
sbb
call
cmpsl
test
lock
imul
add
and
push
push
sbb
mov
stos
pop
aam
repnz
jle
std
call
xchg
cmp
adc
test
testl
hlt
dec
dec
mov
out
jge
test
sbb
sbb
jl
add
in
jne
stos
jns
pop
push
hlt
cmp
iret
jns
dec
push
hlt
addl
add
mov
and
sub
mov
test
push
popf
aas
cmp
jns
test
mov
dec
data16
aas
call
shrb
pop
push
sub
or
mov
jl
jle
adc
mov
popf
jmp
mov
je
mov
xor
cmpsl
mov
mov
or
add
add
add
add
and
pop
ljmp
addb
mov
jl
or
pop
fimuls
and
xchg
pop
mov
and
or
test
cmpsl
mov
and
pop
jmp
aas
push
test
iret
add
ds
dec
loope
ljmp
jg
dec
add
mov
mov
add
stos
adc
mov
push
std
popa
das
adc
dec
mov
repnz
std
jo
push
mov
imul
lcall
cmpsl
dec
stc
mov
lcall
in
add
jg
adc
lods
add
outsb
mov
inc
cmc
mov
test
mov
repz
sub
lahf
in
cltd
cmpsb
jmp
push
mov
sub
ljmp
inc
ljmp
pop
inc
imulb
pushf
dec
cmp
cmpl
and
pop
sub
jnp
decl
aas
mov
or
js
test
enter
inc
addr16
dec
mov
xlat
cmp
push
decl
sbb
inc
fmul
cmc
xlat
out
pinsrw
mov
dec
pushl
sti
jne
ret
dec
int3
or
pop
inc
hlt
cmpb
add
ds
add
or
xchg
std
mov
test
rorb
add
les
sub
fnstcw
or
call
fstl
outsb
add
inc
fcoml
jnp
inc
xchg
mov
cmp
add
out
add
out
das
adc
out
mov
pop
or
add
ret
outsb
loopne
lds
add
push
mov
or
mov
xor
outsb
push
into
or
sub
jo
decb
in
adc
cmpsb
xor
lahf
fiadds
mov
cmc
add
outsl
test
and
and
movsl
cmpsl
cmp
stos
pop
jmp
add
mov
add
lahf
testb
adc
add
sbb
repnz
adc
fisubs
clc
clc
fucomi
push
lret
sbb
mov
sbb
add
add
and
lods
and
lods
mov
cmpsl
mov
stos
pop
jmp
mov
daa
xchg
je
mov
or
std
pop
sahf
out
cld
push
lcall
flds
add
fsubr
inc
out
mov
xchg
or
sbb
cmpsl
jae
xlat
sbb
popa
push
daa
mov
cmpsb
inc
xchg
test
jle
cmpsl
inc
in
sub
outsb
adc
add
stc
xchg
sub
fucomp
stc
mov
out
push
arpl
add
rorb
cs
fsubr
stc
mov
jmp
dec
addr16
dec
iret
or
add
pop
mov
push
mov
adc
sub
cmc
push
xor
pop
test
adc
cmp
fisttpl
iret
sbb
add
add
add
add
xchg
xchg
adc
or
jns
je
addb
sbb
dec
testl
add
pop
orl
push
sbb
dec
jmp
push
decl
out
inc
sbb
mov
inc
adc
loop
dec
imul
clc
sub
or
jle
decb
cmp
xor
mov
dec
aaa
push
add
das
adc
inc
cmp
repnz
mov
das
hlt
aaa
test
add
call
pop
mov
add
lods
add
mov
xchg
in
inc
add
jl
cld
das
in
mov
mov
out
stc
jmp
jl
ds
push
hlt
adc
lods
mov
jmp
int3
inc
mov
dec
out
fstpl
add
add
add
add
jo
add
jle
addr16
pop
adc
scas
add
sub
xchg
adc
mov
jmp
mov
imul
aaa
push
adc
jl
xchg
push
cltd
xor
mov
fcmovnu
add
out
push
ljmp
pop
mov
xor
add
cltd
mov
push
pop
daa
mov
add
add
add
pushf
mov
lret
mov
std
add
jp
pusha
insl
xchg
movsb
outsb
cwtl
push
adc
movsl
push
xor
jecxz
pop
ja
jecxz
add
adc
jl
mov
pop
loope
pop
xchg
out
out
in
cs
sub
lea
loop
jae
mov
add
sbb
sbb
push
lea
insl
add
sbb
inc
and
xor
push
loope
arpl
push
add
or
pop
fcmovb
ret
das
shrb
mov
mov
or
mov
mov
cmc
or
or
cli
xor
push
inc
inc
bound
ret
or
dec
dec
rorb
add
add
push
stos
aaa
sarl
enter
jmp
or
sbb
mov
rorb
daa
ret
lret
jmp
or
sub
push
mov
movl
hlt
sub
inc
enter
add
mov
fisubrs
push
inc
aaa
lock
sub
or
add
add
add
mov
add
dec
xor
inc
push
add
dec
pop
add
and
movb
cmp
addr16
inc
jp
ret
inc
cmp
rclb
jnp
jne
add
add
cmp
mov
movsb
jmp
sub
cli
add
push
adc
loope
scas
loope
push
add
mov
pop
lcall
lods
cmpsl
push
in
xor
mov
sub
mov
mov
aaa
sub
pop
cmp
sub
test
xor
xchg
ret
shrb
inc
outsb
pusha
mov
add
in
add
cs
test
out
sub
add
add
add
add
or
cltd
es
add
adc
and
and
jb
lret
mov
lret
mov
sbb
sub
popa
push
add
insl
mov
imul
sbb
lods
mov
mov
xchg
std
push
repnz
mov
lock
std
mov
add
xor
sbb
xchg
xchg
push
test
or
movb
sbb
jge
add
cli
call
fsub
mov
repz
push
lcall
mov
mov
inc
in
add
inc
in
subb
adc
loop
seta
call
inc
call
subb
adc
loope
cmova
add
aam
gs
shr
xchg
dec
fimuls
cmp
xor
xchg
add
inc
in
xchg
and
nop
pop
xor
mov
mov
mov
cmpsb
repnz
mov
add
subl
out
mov
loopne
rorl
xlat
mov
jmp
inc
or
sub
stos
faddl
jae
lea
mov
xor
scas
jmp
jg
out
icebp
jns
jnp
mov
inc
aas
and
test
cmp
mov
decb
inc
imul
or
inc
clc
xchg
sub
je
push
cmpsb
stos
in
inc
and
out
push
jp
cmp
sbb
push
sub
into
notl
add
add
add
add
insb
out
jg
sbb
add
rcr
add
inc
cmp
test
push
jle
adc
jno
push
repnz
jno
sub
jmp
jl
pop
jo
push
cltd
pushf
xchg
movsl
in
jle
lcall
ljmp
and
mov
movsb
or
popf
sub
jbe
movsl
fdivr
mov
xchg
lahf
jge
sub
pushw
inc
popl
out
or
jmp
sahf
adc
es
adc
inc
add
push
movsb
popf
cwtl
inc
sub
push
lcall
push
push
jno
nop
repnz
sub
xchg
adc
out
cmp
addb
add
ror
push
cmc
ror
inc
icebp
ret
out
cmp
loopne
add
std
ficoms
or
jne
xchg
clc
sbb
paddusb
dec
ret
xchg
pop
and
mov
inc
and
add
mov
or
cltd
and
add
ficoms
mov
test
lds
leave
test
jae
jae
add
fmul
dec
jns
std
cmp
xchg
add
add
add
add
add
inc
shlb
jae
cwtl
lret
jbe
sub
cmc
add
xchg
sub
rorl
adc
add
sarl
push
sbb
jae
add
rolb
add
add
ret
add
mov
clc
cmp
mov
std
jbe
add
sub
add
sub
mov
sub
jbe
mov
jp
adc
add
cmpb
inc
es
mov
rorl
shl
jb
stc
ret
add
pop
test
clc
repnz
pop
aam
mov
add
adc
ds
mulb
orb
jecxz
xor
sub
lret
mov
sub
jp
sbbb
jo
add
and
mov
sbb
dec
inc
addb
insb
sub
out
imul
push
or
daa
shll
pop
adc
sub
cwtl
mov
test
sub
inc
cwtl
xchg
decl
add
cld
xchg
mov
out
pop
push
roll
pop
adc
push
call
add
add
add
iret
push
mov
scas
iret
js
testb
xor
inc
dec
sbb
fs
arpl
add
test
ret
mov
addb
mov
xchg
inc
cmp
std
mov
xchg
push
xor
sub
cwtl
repnz
test
add
je
movb
in
aam
int3
lea
push
or
push
cmpsl
xchg
sbb
in
dec
or
inc
in
mov
call
push
std
les
add
test
xor
daa
add
push
xchg
dec
test
nop
test
mov
ficoms
sbb
test
xor
test
jne
mov
das
add
add
je
push
nop
repz
sbb
das
notb
fsubr
sub
push
in
mov
pop
je
mov
sarl
call
cmp
push
push
jb
xchg
std
inc
and
push
or
and
mov
scas
or
daa
cmp
sub
sub
fwait
mov
ss
pop
sti
cltd
or
sub
push
or
sub
add
jns
xchg
jge
mov
jp
inc
sbb
mov
test
add
xor
pop
mov
hlt
sub
es
adc
out
xlat
or
nop
sub
sarb
mov
insl
xchg
sub
xchg
push
out
mov
xlat
in
mov
jbe
mov
in
dec
out
pop
push
inc
les
or
xchg
push
es
sub
nop
fdivrl
outsl
push
mov
cmp
lds
mov
cmp
call
jo
andl
bound
add
sarl
sub
sub
add
xchg
sbb
scas
insl
daa
add
add
pop
std
jmp
lret
pop
add
pushf
in
sbb
loop
xchg
mov
std
sahf
popf
in
cmp
loop
xchg
bound
jle
in
sbb
loop
push
sarb
cld
push
push
fs
push
inc
xorl
xor
jmp
or
lds
test
add
add
fsqrt
decl
pop
test
pop
push
call
cld
ss
and
je
addr16
call
mov
add
mov
rcll
and
pop
fsqrt
call
xchg
sbb
push
leave
xchg
and
sti
ss
je
adc
and
jbe
mov
push
jge
add
mov
add
add
add
sbb
lahf
std
or
std
lahf
std
push
fisubrs
push
mov
fwait
or
aas
sub
nop
and
xchg
out
add
add
mov
call
and
mov
loopne
mov
leave
xor
ljmp
jge
xchg
test
cld
adcb
add
or
imul
jb
mov
pop
push
add
pop
mov
cmp
and
add
pushf
subps
popa
and
or
sub
cmpsb
add
in
imul
mov
popl
sbb
sub
stos
lods
lret
pop
xchg
ret
pop
mov
inc
or
iret
pop
push
int
sub
adc
out
xor
fimuls
mov
dec
and
and
inc
pop
out
add
stos
cld
test
loope
cwtl
xchg
mov
jmp
subb
lods
les
mov
sub
shr
jnp
ds
add
sub
cmp
and
mov
sub
mov
test
out
clc
jnp
movsb
and
xchg
add
add
add
add
fsubrp
test
test
movq
cs
std
jmp
hlt
push
std
jmp
into
wbinvd
cltd
push
and
icebp
push
out
pop
loop
mov
das
add
test
and
cmpsl
pushf
xchg
lahf
call
pop
adc
dec
jle
inc
inc
ja
push
push
mov
and
add
add
add
add
call
test
test
int3
sbb
add
and
or
sbb
popa
loopne
test
mov
push
loopne
cs
lret
mov
push
add
loope
call
clc
mov
fistl
push
sub
pushf
adc
inc
add
out
and
add
add
add
jg
mov
jmp
mov
push
push
dec
and
loopne
pusha
or
mov
inc
add
xor
int
daa
icebp
mov
gs
lock
test
or
incl
inc
jbe
inc
dec
xchg
lods
cli
fildll
imul
or
aas
cmpsb
xor
ret
jle
sbb
lahf
pop
sub
cli
ja
or
cmc
lds
sub
in
add
mov
jne
dec
js
or
adc
or
movsb
or
aaa
pop
pop
js
add
pop
xor
outsl
lcall
movsb
mov
fnsave
xor
jo
andl
stos
decl
fwait
dec
pushf
sub
insl
mov
sub
add
ljmp
fsubrs
pop
adcl
cmp
sub
xor
into
sub
or
jmp
sub
repnz
mov
test
lods
daa
std
cltd
stc
cmpsl
jnp
movsb
add
jmp
add
pop
bound
mov
mov
dec
xchg
push
fisubrs
xchg
cmc
into
mov
clc
add
sbb
sub
mov
jno
fdivs
clc
jne
xchg
dec
clc
rol
add
in
stos
pop
scas
mov
xor
jp
xchg
sti
incl
jno
inc
adc
inc
clc
shr
jge
and
test
cwtl
sti
decl
adc
push
cmovo
enter
cwtl
xchg
dec
inc
ja
and
dec
ss
push
sub
add
popa
add
sub
test
sub
sbb
mov
dec
loop
jge
sub
out
sub
add
add
inc
pop
test
test
mov
push
xchg
mov
sbb
add
xchg
push
addl
add
xchg
test
test
xchg
mov
mov
sub
mov
rclb
mov
pop
push
add
dec
test
and
or
xor
inc
data16
jg
sbb
add
test
adcl
sub
jmp
add
stos
cs
scas
lret
add
fwait
cmpsl
pop
cmpsb
sub
add
test
pop
mov
and
cs
sbb
jne
xchg
mov
in
roll
push
sbb
into
push
push
push
pop
out
ljmp
sbb
add
add
add
testl
cwtl
es
js
mov
ficomps
mov
idiv
fists
inc
push
loopne
cmp
std
mov
cld
ss
ljmp
mov
outsb
mov
mov
mov
xor
out
out
test
subl
out
aaa
dec
fiaddl
sub
mov
push
sbb
sbb
lahf
fucomip
test
jmp
add
je
jo
cmp
sbb
adc
jmp
dec
cmp
or
shl
jle
mov
lea
add
sbb
xor
iret
or
mov
testb
je
add
adc
adc
add
in
inc
lock
add
add
push
add
jo
inc
xor
mov
sub
test
jl
out
push
xchg
sbb
mov
mov
mov
xchg
push
adc
repnz
lods
push
inc
jne
mov
add
subb
test
rorb
or
xchg
sub
rolb
add
add
add
add
inc
imul
ja
loop
mov
imul
add
mov
mov
or
std
or
pop
push
mov
fsts
inc
jne
add
sarl
add
pop
out
ljmp
sbb
dec
pop
movsb
les
stc
daa
jne,pt
test
add
dec
out
adcl
out
mov
jo
dec
outsb
ss
cld
adc
dec
jle
cmpsl
or
xor
or
dec
stos
pop
loopne
shlb
add
jle
sbb
loop
pop
in
and
sub
les
fwait
push
add
and
es
dec
fmulp
lcall
mov
mov
push
add
mov
fwait
shr
dec
call
inc
fbstp
add
push
rcll
jmp
shrb
jmp
lods
std
dec
jmp
sub
add
inc
es
bt
gs
push
add
sub
fisubrl
int
add
std
push
lods
pop
or
add
or
or
push
jmp
in
js
imul
add
cmpsb
rorb
inc
std
call
movsl
popa
adc
push
mov
add
xor
push
jl
dec
adc
ret
ds
or
xchg
sarb
testl
push
popa
out
xchg
mov
or
sub
add
xlat
xchg
or
add
jmp
pcmpgtd
sub
jb
mov
mov
sub
inc
dec
mov
icebp
xchg
and
cmpb
or
pushl
xor
cmp
pop
add
sbb
test
push
add
xor
mov
add
add
add
add
or
ljmp
or
pop
pop
pop
add
js
jno
nop
in
inc
xchg
test
js
xlat
xor
call
sahf
push
daa
sub
out
ljmp
jl
pop
mov
sbb
jp
loop
pop
stc
pushw
xchg
aas
xchg
incl
pop
repz
add
add
add
add
jl
stos
ljmp
jmp
loop
cld
pop
pop
and
xor
idiv
cwtl
pop
outsl
dec
mov
and
cli
cltd
sub
in
fs
push
test
dec
jle
jg
mov
daa
popf
stos
ljmp
inc
adc
aam
push
inc
jmp
mov
xchg
icebp
inc
inc
jb
inc
add
mov
mov
mov
hlt
es
jne
push
and
pushf
roll
cmpsl
add
sub
mov
mov
je
adc
xor
and
pop
ret
sub
in
out
jnp
xorb
jae
es
scas
or
pop
loope
fildll
mov
add
adc
or
or
out
and
shlb
mov
xchg
lds
or
add
lds
rorl
ljmp
pop
ret
jge
rcrl
adc
adc
or
or
push
pop
push
mov
push
sti
cmp
fbld
das
rcrb
call
push
mov
push
imul
call
inc
add
lret
sub
inc
add
sub
mov
mov
cld
or
cmp
mov
ss
ja
add
test
xor
push
shr
adc
clc
into
dec
out
xor
adc
push
mov
mov
into
add
xor
add
add
add
and
cmpsb
ret
adc
clc
into
or
xor
xchg
ljmp
clc
into
les
jo
sbb
push
cmp
xchg
mov
mov
jg
clc
hlt
add
inc
sbb
cmp
xchg
cwtl
ret
or
add
adc
xchg
cmp
xchg
movsb
pushl
cmp
ret
loop
add
out
test
xchg
fdivl
popa
nop
mov
dec
std
mov
and
es
mov
xchg
and
lea
mov
sub
sub
int3
mov
sub
adcl
push
add
mov
fdivr
sbb
imul
add
add
add
sbb
movsb
movsl
sahf
add
sub
adc
adc
fstps
add
sub
or
add
push
and
sub
mov
std
cltd
adc
fistps
mov
hlt
add
cld
into
mov
mov
cli
ljmp
cmpw
jb
add
jae
test
xchg
sti
push
in
loopne
popa
inc
sysret
mov
pushf
cltd
push
outsb
lahf
pop
decl
push
call
push
push
jnp
test
adc
push
or
xchg
imul
add
and
or
push
xchg
and
mov
jb
inc
outsb
add
lea
dec
lea
push
movb
add
add
add
add
xor
add
decl
pop
std
pop
icebp
cmp
test
cmp
out
pop
add
stc
mov
rorb
or
stos
fwait
xchg
add
js
push
mov
stc
push
push
shlb
sub
jp,pn
xchg
jmp
lods
push
push
ja
inc
roll
mov
add
jp
add
repnz
or
sub
inc
xchg
mov
mov
push
aaa
pushf
fnstsw
out
scas
pop
out
mov
add
lods
sub
push
sbb
int3
mov
pop
xchg
xor
add
xchg
sti
pop
xchg
stos
adc
add
fs
sub
ljmp
ds
sarb
scas
pop
out
iret
push
out
add
lahf
pop
emms
add
dec
call
cltd
arpl
mov
pop
mov
mov
add
inc
pop
out
push
add
arpl
jmp
je
cmpsb
call
fs
movsb
loopne
fisubrs
pop
add
sub
jmp
jmp
pop
add
sub
or
jb
sti
jmp
sub
pushf
pop
xchg
adc
pop
dec
mov
aad
out
stos
std
call
sbb
pcmpeqb
into
out
lret
gs
adc
leave
cmc
pop
push
add
cmp
cmp
pop
xor
jnp
adc
push
mov
add
push
call
add
add
add
add
or
mov
xchg
push
call
iret
pop
or
testb
lcall
popf
sub
clc
call
add
pop
add
mov
pop
adc
adc
mov
cs
push
data16
adc
add
push
mov
sti
adc
sub
shlb
cmc
cs
add
sub
shll
out
or
scas
ja
lahf
nop
leave
inc
cs
in
ljmp
ret
add
mov
or
adc
ja
gs
sbbb
addr16
mov
cmc
jbe
fisttpl
jns
inc
ljmp
add
sub
and
dec
push
add
clc
fdivrp
mov
fcoms
iret
loope
stos
add
and
lods
mov
enter
cmc
loop
loope
push
shlb
pushf
aam
movb
fs
mov
jg
jmp
test
pusha
mov
ffree
and
in
pop
jecxz
in
jno
inc
ret
add
stc
jno
ljmp
add
test
arpl
sub
add
add
test
mov
sbb
movsb
sahf
sbb
push
movsb
pusha
std
push
test
fsubrl
lods
fxch
mov
std
out
lret
cld
hlt
or
jmp
sbb
jmp
mov
bound
test
imul
in
sub
pushw
xor
xchg
xor
jbe
jmp
pusha
lret
test
sbb
xor
dec
test
sbb
mov
or
rcrb
lcall
aam
add
js
ret
sbb
or
hlt
add
jnp
add
clc
add
in
imul
add
das
add
sbb
in
mov
sti
decl
mov
adcb
add
mov
sti
jmp
sub
testl
int
imul
ljmp
add
xchg
xorb
add
add
add
add
xor
add
sub
std
lcall
nop
adcl
jg
insl
or
dec
add
pushf
daa
add
cmpsb
mov
test
add
lret
das
std
cmp
test
sub
adc
mov
iret
hlt
rcll
push
mov
int
or
sub
lds
ffreep
ja
pop
movsb
fwait
add
ret
adc
pop
loop
pop
pop
push
adcl
das
insb
xchg
pop
testb
pop
iret
pextrw
pop
fiadds
sub
out
xlat
and
adc
das
movsb
roll
dec
rcr
sbbb
mov
add
add
add
insb
xchg
adc
rorl
pop
pushw
mov
data16
xor
mov
lods
push
stos
pop
xchg
std
inc
sahf
loopne
jo
inc
push
pop
lods
or
es
out
dec
push
cmp
push
test
cs
cmc
popa
sub
jno
cmp
sub
sbb
daa
pop
add
mull
add
enter
and
mov
out
les
cmp
jmp
xchg
pop
push
out
lret
adc
mov
movsb
rorb
push
incl
sub
add
subb
ret
push
push
insb
add
scas
xchg
cld
hlt
fisttpl
cmp
std
cmpsb
add
jnp
xor
dec
int3
mov
dec
mov
into
jmp
test
sahf
sti
call
pop
std
test
pop
add
xchg
adc
mov
out
ss
ljmp
or
mov
xor
jne
mov
pushl
scas
jle
sub
dec
sbb
mov
leave
lock
lahf
lret
sub
in
shl
pop
test
mov
adc
add
jle
mov
add
jbe
sbb
aaa
mov
jmp
sbb
dec
out
loop
mov
add
sbb
std
cli
add
cmp
add
cmpsb
std
cmp
mov
stos
add
test
cs
pop
mov
js
data16
pop
insb
xchg
pop
jbe
add
aaa
std
ret
in
jno
push
pop
push
jge
test
sbb
pop
inc
or
lods
jl
mov
mov
psadbw
out
jmp
sub
mov
xor
jl
pop
sub
popf
pop
adc
outsb
and
jns
add
dec
pop
add
popa
rcr
jl
dec
add
std
scas
add
push
mov
ss
cld
adc
pop
adc
cld
inc
std
out
cltd
add
sub
push
mov
adc
pop
pop
call
imul
add
push
mov
std
es
fnstcw
sub
mov
push
int3
jmp
pop
mov
test
sbb
adc
ficomps
in
pop
pop
inc
lahf
sub
cmpl
or
mov
inc
nop
push
fsts
mov
or
lea
sti
jl
or
jne
dec
add
jl
mov
jb
mov
shll
cli
push
dec
addr16
xchg
ret
movsl
movsl
dec
aam
jne
daa
cmpsb
mov
and
push
movsb
aam
call
ret
sbb
add
adc
orl
xchg
sub
jp
test
jno
std
xor
cli
sbb
and
rolb
push
jns
xchg
pop
cmp
jae
jmp
mov
gs
add
add
add
daa
add
shll
lds
add
sub
xlat
clc
push
loopne
movsb
movsl
std
lea
das
jo
sub
inc
xchg
inc
insb
out
sub
xor
xchg
sbb
lret
pop
push
pop
je
and
push
insl
sub
iret
lods
pop
pop
out
cmp
scas
or
push
adc
jnp
cmp
add
add
add
sbb
jns
push
push
std
lret
imul
pop
insb
jnp
out
mov
ss
shlb
pop
add
mov
xchg
imul
out
mov
and
or
test
jl
jg
adc
leave
xor
jmp
imul
out
idiv
into
add
lahf
std
call
mov
jmp
or
add
sahf
sahf
add
sub
and
xlat
fstpt
repz
std
hlt
mov
push
jbe
sbb
addps
push
push
je
cmpsb
clc
pop
mov
sub
push
push
jae
imul
call
es
loop
sub
std
xchg
icebp
inc
fisttps
push
mov
je
mov
je
jg
insb
and
test
cli
incl
inc
imul
gs
into
fimull
xchg
add
stc
je
push
mov
lahf
in
and
sbb
inc
nopl
inc
scas
push
jne
adc
add
fistps
adc
dec
inc
jecxz
jmp
int3
adc
ficomps
ljmp
add
add
call
or
jmp
mov
shlb
mov
mov
push
out
cmpsl
jp
push
insl
rorb
out
dec
add
or
add
sbb
inc
mov
aas
adc
xor
ljmp
inc
lret
push
jns
aaa
add
dec
xor
dec
inc
push
xchg
jmp
imul
mov
cmp
add
add
add
mov
add
cmpsb
or
or
or
dec
add
push
int
push
inc
inc
mov
mov
add
jb
enter
and
pop
push
add
sub
addr16
out
jge
repnz
xchg
inc
out
inc
dec
daa
loop
repnz
and
loopne
lds
pop
out
jl
pop
out
add
mov
pop
out
ljmp
cmpb
jge
out
lcall
fistps
out
push
imul
imul
xchg
out
lcall
inc
std
aam
sub
je
dec
fdivp
mov
adc
push
sbb
jbe
and
add
sub
das
lds
push
sbb
test
push
rorl
mov
inc
adc
cs
cmc
xor
repz
inc
mov
sub
add
push
movsb
inc
cltd
add
jle
aaa
push
sub
sahf
fst
push
pop
iret
mov
fsub
mov
sub
dec
add
movb
out
xchg
sbb
in
out
add
sbb
mov
movsl
jno
adc
cli
je
lret
jo
cltd
jbe
push
sbb
std
lcall
orl
fisubs
push
mov
rcrl
lock
repz
push
adc
dec
push
or
mov
out
adc
push
stos
pop
add
in
js
add
push
je
call
add
jle
sub
pop
mov
cmp
add
push
jno
scas
cmpsl
jb
les
stc
inc
inc
inc
addl
pop
arpl
or
int3
mov
shll
xchg
jl
pop
pop
aaa
sbb
inc
jle
test
sbb
and
cmp
std
lahf
mov
pop
je
pop
jo
pop
mov
addl
mov
sbb
cmp
test
xchg
hlt
jno
push
pop
in
popa
add
dec
hlt
add
lahf
int3
outsb
mov
bound
mov
aam
fstl
dec
push
mov
jl
xchg
mov
or
cmp
sub
fs
push
out
jle
sub
out
cmp
ret
inc
push
scas
or
add
add
add
popa
shll
daa
push
xor
add
or
dec
imul
negb
gs
loope
fadds
xor
push
push
addr16
or
add
aam
pop
cwtl
dec
add
mov
add
loopne
adc
or
das
and
dec
push
inc
adc
in
mov
sbb
inc
icebp
pop
jecxz
loope
in
bound
loopne
or
push
xchg
in
push
sub
call
sbb
bound
mov
push
cs
jae
sbb
rcrb
fdivrp
rcr
add
inc
and
push
fs
mov
jo
test
cli
incl
and
and
incl
outsb
dec
mov
mov
mov
inc
add
fbstp
mov
iret
cli
push
jo
adc
shl
or
inc
pop
pop
je
mov
cli
adc
decb
dec
call
add
mov
add
sub
sti
mov
jl
mov
cs
dec
add
fs
mov
add
cmc
inc
push
xlat
push
sarl
jmp
add
outsl
xor
sar
pop
inc
adc
imul
sbb
lret
add
cmp
jle
insl
xchg
shrb
lods
pop
testb
in
mov
mov
dec
outsb
adc
jae
incl
cmpsb
js
add
sub
stos
outsb
jl
sahf
sbb
shl
cmp
jp
sahf
jg
push
xor
add
aam
cmp
out
cld
dec
hlt
imul
out
and
lds
movsb
daa
divl
out
cmp
add
hlt
jno
add
pop
fs
mov
mov
and
pop
jg
add
out
fsts
scas
movl
cld
cmpsl
sbb
out
push
repz
jb
insl
pop
aaa
add
sub
add
sub
add
mov
dec
sbb
cmp
adc
out
adc
out
and
je,pn
sti
pop
rcrl
sbb
test
loope
add
jmp
pop
push
add
or
xchg
jge
call
sub
mov
mov
ljmp
add
dec
std
out
mov
fnsave
xchg
dec
adc
pop
call
iret
dec
call
cld
ss
and
fsubrs
jecxz
leave
shll
call
testl
xor
adc
clc
fdivrl
ret
add
add
add
add
sbb
mov
in
xor
push
mov
xlat
call
pop
fdivl
imul
cli
call
fdivl
mov
jno
test
pextrw
subl
or
sarb
pushl
je
inc
sub
add
sbb
sub
lcall
lods
xor
add
jle
pop
mov
cld
test
std
jg
imul
in
sub
or
add
dec
push
xor
mov
and
add
and
xchg
dec
std
lcall
imul
cmp
enter
inc
or
test
lock
cmpl
rorb
cmc
jbe
inc
push
push
sub
add
add
add
add
aam
das
mov
cmpsb
push
sahf
loopne
mov
mov
adc
cmp
ss
mov
test
and
out
sbb
inc
fmull
sub
incb
daa
mov
hlt
mov
push
loop
xchg
cmp
push
pop
aad
test
push
push
inc
cld
fwait
add
xor
stc
cltd
or
pop
push
adcl
pop
roll
push
cs
out
xchg
inc
std
in
mov
push
lahf
in
jno
mov
mov
std
cmpsb
ficoms
xor
pop
call
push
push
add
dec
bound
pop
data16
int
pop
inc
cwtl
inc
loope
stos
je
add
inc
call
gs
shll
ss
or
sub
jae
add
imull
dec
xor
fiadds
jae
call
mov
in
stc
inc
hlt
rcll
ret
xchg
std
ljmp
out
mov
xor
leave
inc
and
mov
pushf
out
pusha
std
mov
filds
dec
push
cmp
adc
out
pusha
std
push
sub
call
cmp
xor
push
dec
shl
mov
arpl
add
xor
out
je
bound
pop
sbb
sti
call
mov
push
fildl
add
xor
cld
pop
dec
or
jno
std
pop
or
rorl
push
gs
je
lods
cltd
add
sahf
cmovo
dec
inc
pop
pop
loope
rcrb
cmp
shrl
rorb
insl
xor
pop
lret
sub
dec
sub
aad
add
add
pop
sbb
fldcw
pushl
cmp
mov
cmp
add
pop
fs
fcos
cld
sarb
add
adc
lcall
xlat
out
inc
es
aas
icebp
dec
pop
out
cmp
ret
adc
inc
cmp
adc
jnp
icebp
jno
add
out
cwtl
sub
mov
fisubrs
daa
cmpsl
js
inc
lret
inc
cld
sti
push
pop
call
cmp
pop
xor
sub
adc
push
and
pop
pushf
jp
sahf
dec
pop
sti
call
mov
add
mov
pop
adc
sub
dec
sub
cld
mov
imul
icebp
and
push
cmp
std
hlt
sub
inc
jmp
sub
sub
add
out
mov
mov
std
jmp
jl
shr
aad
aaa
and
into
push
insb
arpl
stos
cmp
in
adc
pop
or
add
pop
jmp
pop
sbb
cmp
jmp
mov
and
imul
sti
xor
in
xchg
sbb
cli
psadbw
rorl
mov
shl
or
hlt
mov
adc
pop
enter
mov
add
mov
sbb
add
add
add
add
mov
test
mov
rcr
rorb
leave
inc
hlt
sub
push
call
inc
cld
adc
sub
add
movb
inc
je
mov
lock
sbb
out
push
insl
jae
loope
ss
xor
add
jno
sti
add
sbb
and
cmp
adc
xor
fdivrp
sub
or
jg
popa
adc
dec
sar
mov
adc
jg
outsl
cmpl
daa
mov
inc
pop
pause
imul
jnp
leave
fimuls
dec
call
leave
jge
push
add
pop
movsb
pop
mov
sub
add
pop
cmpsl
dec
push
xor
xchg
icebp
inc
cwtl
ret
in
in
bound
aas
cld
xor
pop
repnz
add
stc
ds
loop
and
data16
adc
movsb
fst
clc
std
adc
add
cld
xchg
pop
add
loop
call
insl
imul
add
add
add
add
pop
dec
test
cmpsl
sbb
xchg
or
imul
call
jb
and
test
icebp
iret
push
push
adc
push
xchg
das
aam
add
push
mov
scas
cmp
pop
and
pop
xor
jmp
aam
xchg
jmp
pop
arpl
shl
rorb
cmp
pop
push
rcr
pop
sub
cs
add
les
ja
adc
jnp
ffree
andb
sbb
xor
hlt
cmpsb
shlb
in
fs
daa
mov
rol
andl
ljmp
adc
stos
inc
or
fsqrt
pushl
popa
std
mov
push
add
or
mov
xchg
adc
js
push
jbe
stc
push
add
lods
dec
in
and
mov
sbb
xchg
test
jle
sub
add
push
push
push
or
rol
icebp
mov
sub
sti
ja
movsl
scas
lds
popa
or
and
js
inc
mov
aad
fstps
pop
cmpsl
push
aad
gs
or
dec
mov
or
xlat
sbb
add
add
add
add
sar
mov
pop
aam
dec
ret
mov
cmp
mov
call
push
inc
inc
sub
pushl
popa
imul
popl
cmp
inc
sub
ret
lds
sbb
mov
add
cmp
aas
cmp
out
mov
push
mov
mov
mov
roll
outsl
loope
adc
sub
out
jne
cs
fidivrl
pushf
or
pop
stc
sbb
adc
aam
out
mov
adc
add
mov
xor
xor
push
lahf
ret
mov
pop
testl
pop
cmp
or
sub
dec
push
test
jmp
cmp
sub
mov
lock
andb
jmp
add
add
add
filds
jo
push
mov
mov
ds
sub
subl
sub
inc
sub
add
test
repz
sub
imul
in
jecxz
jb
add
cmp
testb
sub
or
jmp
cmp
cmp
sub
mov
inc
sub
lea
out
dec
push
add
pop
stos
test
jne
cmp
sti
adc
push
jecxz
test
and
add
popa
test
inc
add
inc
hlt
ljmp
adc
in
push
fcomps
cld
jne
fdivl
movsl
fimull
test
sub
mov
sbb
add
lea
cld
jne
test
lock
sbb
add
ret
sub
incl
adc
adc
cmp
jmp
and
lcall
push
add
stc
pusha
add
pop
push
push
inc
into
fcomps
mov
push
test
sub
mov
jmp
pop
adc
sar
push
dec
add
adc
add
sub
mov
xchg
pop
jae
dec
repz
cmp
daa
add
sbb
insb
pop
or
into
inc
imul
sar
cmp
pop
sub
push
inc
insl
sahf
mov
sub
out
xchg
and
flds
inc
imul
ja
aaa
jbe
xor
out
pop
aam
or
mov
pop
add
xchg
ret
lea
xlat
add
shlb
fbld
add
and
lods
pop
mov
mov
push
pop
sti
sub
push
mov
addr16
out
sbbb
rclb
sahf
pop
loope
stos
and
mov
add
sub
add
stc
or
jmp
add
mov
add
pop
push
pop
int
mov
call
push
xor
sbb
mov
sbb
sub
std
cld
jge
inc
jmp
inc
ss
jmp
stos
ret
cld
add
std
es
add
out
jnp
es
push
mov
add
adc
jne
loopne
fcomps
add
scas
incl
fwait
mov
add
add
add
hlt
xlat
cli
add
daa
xor
incl
mov
ljmp
cli
push
push
dec
lea
fdivr
mov
in
add
ds
push
and
cmp
and
jmp
sbb
mov
sbb
rorb
add
sbb
std
mov
lock
adc
subl
into
push
arpl
into
push
in
imul
fs
jne
pushl
aas
add
jmp
push
std
sub
addl
std
andb
cmc
fisubrl
push
leave
sbb
inc
sub
sbb
adc
mov
inc
imul
add
add
mov
pop
mov
cmp
stc
ret
dec
mov
push
pop
les
dec
jmp
aaa
add
mov
dec
imul
dec
shlb
fiadds
mov
out
xor
in
jmp
adc
lahf
movsb
fsub
pop
stos
test
pop
cmpsb
ret
int
sbb
pop
jne
imul
push
sbb
ret
add
add
sbb
xchg
xor
push
idivl
sub
es
jge
movsb
les
in
addr16
call
adc
xchg
xor
ret
pop
lds
test
imul
adc
push
loopne
call
pop
xor
imul
pop
sub
cs
add
sbb
jmp
test
adc
mov
push
dec
shll
mov
mov
xchg
loopne
dec
mov
add
test
pop
std
pushl
icebp
add
pop
std
jg
push
ret
inc
push
push
jno
sub
mov
add
pop
std
aaa
add
push
ret
inc
add
adc
insb
popf
push
push
test
push
inc
adc
push
imul
push
cmp
push
call
and
adc
cmp
jle
sbb
xor
cs
je
dec
push
je
outsb
mov
cmp
jae
xchg
push
adc
pop
rolb
cltd
inc
stos
cld
add
lock
aas
sub
push
mov
and
xor
jl
shll
scas
mov
cwtl
mov
outsl
sub
cmp
push
cmc
outsb
out
adc
or
push
in
fldl
std
pop
cs
adc
add
ret
test
add
test
cmp
add
push
fucomi
add
into
or
sbb
ljmp
out
sub
xchg
lods
push
or
repnz
pop
fwait
rcl
pushf
or
das
jge
jne
daa
or
inc
sahf
adc
and
or
leave
xor
out
push
sbb
ret
in
xor
in
dec
pop
addr16
enter
or
cmc
std
push
mov
sub
adc
in
add
adc
pop
je
popa
das
jge
sub
mov
imul
idivb
adc
std
xchg
or
stos
and
fsubrs
and
js
adc
jmp
xchg
shrb
mov
add
add
add
add
sub
xor
jns
pop
mov
push
adc
mov
inc
xchg
inc
shl
xorb
lret
popa
movl
sbb
dec
push
push
push
cmc
push
add
add
inc
xchg
xchg
shlb
clc
or
jmp
movsl
lret
jecxz
ret
push
ljmp
cmovo
jae
add
adc
std
test
xchg
rclb
push
mov
jl
adc
add
inc
imul
jb
testb
add
imul
cmc
ret
and
ja
adc
lcall
sub
mov
mov
jl
push
es
add
cmpsl
cli
dec
sti
les
add
dec
andl
push
std
add
xor
lret
pop
hlt
pop
mov
cmp
test
and
nop
addl
ret
aaa
lds
add
ljmp
adc
test
or
dec
cmp
sub
rcll
push
outsl
inc
or
push
dec
adc
dec
sar
aaa
pop
out
ja
jb
inc
cmp
pop
sub
cmp
mov
xchg
add
add
add
sub
mov
push
xor
add
mov
adc
aaa
sti
test
mov
movsl
mov
add
xorb
sub
pop
mov
es
push
mov
sub
stos
daa
push
xlat
add
jl
mov
insb
outsb
sbb
testb
jecxz
sub
out
jns
stc
and
daa
add
pop
cmp
outsl
mov
add
add
add
add
add
imul
add
cltd
sub
xchg
mov
je
iret
sahf
cmp
out
fs
mov
push
cld
jb
xchg
add
jmp
aam
and
call
sub
imul
sub
je
or
jmp
jno
mov
std
jge
dec
pop
std
jne
pop
std
pop
push
pop
push
fiadds
pop
adc
cs
shlb
roll
daa
lds
adc
pop
mov
addr16
push
lret
rcrl
dec
push
shl
push
inc
dec
into
xchg
mov
fwait
shrb
movsb
xchg
add
mov
daa
rcrl
or
cmp
imul
add
sbb
cmp
inc
std
add
mov
mov
sahf
xchg
cwtl
adc
in
push
and
call
lahf
enter
in
std
sub
xchg
pop
xor
dec
mov
mov
jp
test
iret
js
push
pop
xor
dec
mov
ja
sbb
xor
xor
inc
dec
cmpsl
ja
push
add
enter
mov
inc
jae
lods
ds
hlt
mov
ret
mov
stc
fsubrl
add
xor
imul
bound
inc
sar
es
and
pop
int3
fst
dec
pop
cmp
ret
in
cmpsl
mov
xchg
stos
dec
cmp
ret
int
pusha
inc
arpl
add
pop
shlb
or
cmp
dec
cmp
ja
pushf
mov
js
sbb
add
xor
xchg
cli
js
in
es
xchg
in
cmp
fadd
dec
popf
das
dec
mov
daa
hlt
lcall
xchg
jmp
in
daa
jae
xchg
add
mov
incl
les
add
add
add
lds
jmp
dec
daa
jg
mov
add
pushf
rorl
bound
addr16
out
in
das
pop
add
mov
pop
stos
add
jmp
pop
push
insb
push
or
loope
xor
imul
std
aad
xchg
test
add
inc
icebp
mov
inc
or
or
add
sub
mov
sub
test
add
mulb
lar
adc
adc
dec
and
lret
xchg
adc
out
jbe
and
xor
dec
cld
aam
mov
jb
decb
adc
lahf
shlb
cld
adc
sbb
cld
adc
inc
ficoml
clc
jb
std
test
js
xchg
shll
in
fstl
out
in
add
arpl
push
and
mov
sbb
add
dec
cmp
sbb
or
ljmp
cmp
xor
cmp
dec
inc
mov
cmpsb
push
aad
sub
mov
pop
or
aas
sub
dec
std
xor
cmp
dec
sar
or
in
in
push
mov
xchg
idivb
sub
jmp
jnp
add
cmpsl
sti
pop
inc
sbbb
or
sub
arpl
fidivrs
into
or
dec
inc
push
jb
add
pop
popf
or
ljmp
push
or
push
pop
fs
cltd
pop
lods
or
pop
jns
adc
out
sbb
mov
inc
push
stos
imul
add
add
add
stos
push
dec
fildll
sbb
fisubl
dec
mov
add
iret
jae
dec
xlat
mov
push
mov
add
out
sub
out
dec
push
into
inc
cwtl
mov
inc
and
out
xchg
add
sub
add
repnz
pop
cs
adc
pushf
cmp
jae
loop
pop
add
push
xchg
loope
and
std
and
sar
jmp
adc
decl
fcomi
adc
es
push
inc
pop
stos
ret
bound
in
fnstsw
loopne
insb
outsb
stos
or
lods
sahf
inc
xchg
sub
cmp
adc
xchg
fldt
push
outsb
dec
and
icebp
cs
ss
xlat
pop
pusha
imul
and
addb
dec
add
add
add
cmp
js
dec
in
fs
fidivl
clc
in
or
movsl
lds
or
scas
add
imul
xlat
cmpsl
adc
gs
jl
std
jp
xchg
push
fisubrl
leave
sub
pcmpeqd
inc
shr
ss
push
add
out
je
jo
push
stos
jne
ljmp
pushl
dec
pop
pop
xor
lds
sti
jne
lds
cmpsl
sub
inc
pop
cld
ds
push
sub
dec
cmp
xchg
add
dec
icebp
adc
push
push
shrl
cmp
mov
hlt
scas
mov
mov
sub
adc
cmp
push
cmp
jmp
inc
ds
clc
mov
mov
adc
cmp
stos
aaa
add
add
inc
subb
mov
push
mov
adc
cwtl
fisubl
lahf
repnz
sub
pop
xchg
lods
push
inc
add
pop
iret
sub
and
mov
push
inc
pop
mov
iret
xor
mov
push
push
pop
shlb
push
iret
and
and
mov
push
negb
mov
inc
mov
out
add
mov
js
aaa
cltd
fisubs
fimuls
pop
lret
jl
inc
mov
pop
jo
fcompl
out
adc
bound
xchg
adc
sub
push
jb
lds
fabs
sahf
jl
out
adc
jo
dec
call
adc
jmp
xchg
call
sub
cld
cld
inc
or
add
xchg
orl
sbb
sbb
xchg
je
inc
xor
add
ret
jmp
repz
sub
out
fsubl
std
cs
je
pop
add
sub
mov
push
add
jns
add
sbb
call
sbb
push
xchg
nop
add
cwtl
les
add
mov
mov
mov
push
sbb
push
cwtl
enter
incl
adc
adc
mov
mov
dec
lcall
cmpsb
loopne
add
push
lea
cld
orb
sti
mov
imul
incl
adc
add
addl
xor
xchg
filds
sub
add
sub
push
incl
stos
cmp
in
xor
pop
xchg
ss
add
jg
add
sub
xor
add
mov
std
in
inc
or
jb
pop
cmpsl
shlb
je
sbb
or
pop
scas
lea
mov
sub
lahf
push
insl
push
sbb
insb
xchg
xchg
sbb
sub
xor
scas
jge
sti
push
stos
out
sub
mov
stos
sbb
mov
lods
fldt
sbb
add
pop
in
inc
sbb
push
sub
inc
daa
fcomps
add
pop
incl
test
out
in
or
jl
xchg
icebp
test
push
add
inc
mov
xchg
in
popf
test
in
loopne
lea
sbb
fldcw
scas
call
xor
cmpsb
ljmp
adc
pop
je
sahf
jo
jb
and
divb
loopne
jmp
or
and
mov
sub
les
sub
mov
insb
call
or
sbb
fsubl
mov
adc
mov
mov
fldl
jmp
nop
push
pop
insb
stc
pop
andl
and
add
pop
push
lea
pop
add
pop
pop
call
sbb
js
or
or
xchg
and
add
xor
add
add
add
add
add
adc
add
je
add
add
push
out
mov
xchg
pop
addl
push
lea
out
mov
cltd
push
jg
cld
inc
sub
pop
push
lea
std
call
out
mov
sub
xor
fnstcw
add
lahf
test
movsl
or
mov
mov
add
bound
cmp
add
jg
sti
and
inc
mov
sbb
andb
subl
in
mov
mov
into
mov
inc
add
clc
jg
sub
add
mov
adc
in
cltd
rolb
add
pop
mov
add
cmovo
sbb
mov
and
fistps
popf
cmp
insb
xchg
jo
xchg
xchg
lods
fldt
outsl
sbb
xchg
cmpsl
add
jno
mov
sbb
or
sbb
aaa
sbb
clc
outsl
cwtl
iret
ljmp
pushf
sldt
add
add
add
add
xchg
jecxz
mov
lods
dec
call
add
mov
pop
sbb
pushf
sub
in
sbbl
sub
outsl
call
insl
imul
decb
fsubr
xchg
ret
sbb
sbb
xchg
sub
std
test
std
aam
sub
jmp
ss
sub
jno,pn
out
sbbl
dec
sbb
push
test
negl
je
cmp
gs
push
or
or
mov
push
sbb
adc
rcrl
add
into
push
adc
sahf
int
pop
pop
pop
ret
push
test
push
adc
push
xchg
bound
jnp
incl
add
or
sti
jne
stos
js
sbb
hlt
lcall
sbbl
lcall
in
xchg
dec
mov
into
or
jge
sti
jbe
inc
in
test
push
test
inc
jae
hlt
int3
or
fnstsw
call
mov
pop
xchg
or
hlt
jg
cmp
sbb
add
in
inc
je
xchg
cmp
pusha
push
call
add
cmpl
sbb
lahf
xchg
mov
scas
sti
sub
std
test
cmp
xchg
aas
pop
int
dec
ret
iret
push
mov
or
sub
cmp
cs
sar
pop
xchg
xor
out
cmp
jb
push
push
mov
mov
ret
add
lcall
out
sub
push
fs
push
cmp
cvtpi2ps
into
cmp
pop
hlt
ret
mov
sub
add
in
fnstenv
mov
mov
pop
out
fisubrs
out
jg
add
stc
mov
cmp
js
mov
ret
cmp
loop
or
loope
push
add
sti
jl
in
pop
mov
std
push
stc
fs
cld
push
xor
mov
push
xchg
mov
std
out
stc
adc
adc
cld
hlt
jmp
xchg
cmp
jl
mov
push
addl
std
cmp
cmpsb
inc
sub
int
std
sahf
jnp
orb
fildl
jmp
sub
add
xchg
outsb
and
aad
adc
insb
test
std
push
bound
and
ffree
add
push
mov
mov
add
in
add
cwtl
push
xchg
pushf
dec
add
xchg
shlb
mov
in
xchg
enter
pop
add
add
sahf
idiv
in
dec
push
mov
dec
incl
faddl
or
xor
ret
push
pushf
int
lea
push
ljmp
sti
xor
in
sbb
add
add
jnp
hlt
cmp
xor
adc
sar
dec
scas
adc
cmp
test
enter
sub
pop
repz
or
test
aad
std
push
push
xchg
add
add
add
add
std
ret
std
int
inc
jae
inc
cmp
fmull
iret
mov
enter
xor
sub
std
test
mov
aaa
stos
fnstsw
add
pop
jmp
adc
push
out
imul
addb
rcrb
ret
sub
sub
add
and
add
clc
test
sub
testl
pop
inc
jb
push
das
stos
fiadds
aam
push
psrad
daa
add
ficoms
pop
adc
cmp
pop
out
ja
bound
test
cli
add
pop
xchg
rorb
scas
daa
imul
fs
add
cmpsb
ljmp
faddl
insb
add
mov
jb
outsl
std
mov
sub
add
hlt
cmpsl
jmp
clc
lahf
js
sub
shrb
add
sub
in
aam
std
bound
pushf
cmc
jne
cmpsl
add
insb
in
adc
aas
imull
imul
loope
insb
clc
sbb
dec
add
add
pop
cld
bound
outsl
std
add
and
or
shl
pop
into
pop
je
fcmovu
add
test
mov
in
jb
aas
or
mov
add
out
dec
pushl
jo
inc
pop
gs
inc
add
in
xchg
sbb
mov
rcll
sti
je
pop
sti
adc
add
add
add
sub
dec
inc
cmp
cmp
sti
push
xor
mov
pop
sub
push
sub
xchg
decl
xor
jge
cld
nop
aam
cmpsl
lds
push
js
aas
scas
inc
mov
cld
cmc
cmc
aad
stc
xor
clc
jge
jge
inc
or
mov
in
jnp
movl
std
xor
add
add
add
add
cmpl
fs
sti
sub
aam
pop
hlt
add
lds
sub
or
and
xor
xchg
enter
xchg
push
out
jge
add
cmpsb
roll
lcall
lods
movsb
test
mov
xchg
fldcw
outsb
mov
inc
push
jb
test
fiadds
add
adc
mov
jecxz
repnz
cli
jle
jbe
xor
bound
and
xor
insb
dec
aaa
mov
jle
jbe
shrb
insl
mov
sbb
xor
into
outsl
cmp
pop
lcall
lea
mov
jbe
ss
push
out
mov
cmp
mov
inc
cmpl
add
add
add
add
outsl
push
sbb
mov
in
mov
testl
mov
pop
cmc
mov
pop
add
outsl
push
std
les
test
xor
test
in
clc
sbb
mov
or
inc
ljmp
mov
inc
push
sti
nop
inc
test
sti
fimull
pop
adc
call
movsb
sub
andl
pop
movsb
and
push
and
inc
mov
mov
mov
movsb
mov
call
mov
sub
test
add
aad
seta
add
adc
stos
jg
dec
xchg
fsubrs
test
add
rorb
add
sar
pushl
cli
xor
lea
jno
cld
cmc
fdivl
adc
cmc
xchg
push
add
andb
jb
daa
sbb
pop
xor
dec
add
add
aam
xlat
cli
lods
push
jge
mov
cmc
stc
popf
js
inc
test
jb
cld
xchg
out
aam
and
hlt
js
push
xchg
add
lods
mov
ja
jmp
push
stos
call
je
clc
jg
sahf
test
mov
mov
cltd
mov
sub
loop
sub
enter
shrd
jg
aad
rolb
sub
mov
pop
shll
xchg
fsts
xchg
inc
movsb
cmpsb
jp
push
sti
cli
mov
cmc
push
jo
xor
jo
bnd
push
js
inc
cmp
cli
inc
outsl
imul
ret
pop
lods
out
or
inc
mov
outsb
cmp
add
xlat
inc
jmp
stos
cli
and
jmp
dec
lds
push
or
fldl
mov
mov
pop
vpcmpgtw
add
add
add
and
lock
clc
cmpl
or
je
jmp
or
orl
and
ret
daa
insl
or
fcompl
cwtl
inc
fbstp
xchg
pop
or
adc
icebp
dec
pop
clc
loopne
adc
jae
adc
or
add
pop
or
dec
and
out
jg
rcrl
cmp
push
inc
or
or
add
les
add
pop
add
xchg
pop
or
mov
repz
inc
push
mov
xchg
ret
add
jae
loopne
mov
les
lret
ret
jo
nop
and
je
sahf
out
iret
xor
jecxz
addb
aas
add
sub
ret
lods
test
roll
mov
inc
xor
not
es
push
lea
inc
cmp
adc
addb
inc
add
testb
add
jmp
testb
and
pop
mov
clc
mov
test
push
adc
subb
push
sbb
jecxz
fiaddl
add
add
add
add
sub
inc
in
sub
mov
shl
hlt
insb
cld
add
sub
addr16
frstor
fsubrl
ljmp
mov
addr16
sti
ficomps
rol
ljmp
loope
add
shll
stc
cltd
lret
xchg
ljmp
test
jle
pop
fs
stc
sbb
ljmp
add
add
sub
add
das
stc
push
out
mov
jg
shlb
sub
mov
psadbw
add
add
cmc
mov
movsb
or
add
sub
add
lcall
rcll
clc
cmpsl
hlt
pop
or
add
cwtl
fdivl
in
and
mull
test
add
pop
std
xor
cwtl
aad
sub
rcll
std
cmpsb
stos
fimuls
adc
add
cs
jl
add
test
sub
std
fcompl
ja
inc
dec
or
dec
stos
fisttps
xchg
incl
test
jmp
mov
sti
incl
sbb
add
call
inc
add
mov
push
cmp
push
sar
inc
cmp
lret
or
orb
add
lock
std
incl
popa
add
xchg
add
and
add
cmp
aad
std
call
mov
add
mov
test
jne
dec
mov
jne
cld
std
push
sub
add
imulb
mov
sbb
sub
cmpb
lods
sub
and
out
sub
push
cmpl
std
int
sbb
mov
movsl
sbb
mov
cmp
add
cmp
dec
lahf
inc
pusha
xor
mov
shlb
ja
push
lods
and
sbb
sbb
out
test
addb
add
add
add
add
push
mov
das
js
pop
jl
xchg
fwait
pop
gs
cltd
or
add
insb
std
add
andl
test
out
mov
inc
pop
jo
sar
insb
shl
addl
push
add
es
add
sub
adc
push
fs
sbb
jb
jns
and
mov
sbb
ret
add
and
stc
and
sub
pop
out
inc
fadd
es
xchg
xor
sub
push
fimull
adc
add
mov
or
ljmp
push
sub
add
adc
sbbb
test
xchg
sub
add
bound
add
cmp
lods
or
call
add
clc
adc
mov
cmp
sub
je
out
mov
or
push
insb
imul
inc
xchg
jle
cmp
or
call
insl
cmp
lcall
decl
inc
xchg
push
fmuls
inc
test
or
mov
add
cmc
pop
hlt
mov
push
mov
and
psrlq
aaa
jp
lock
xchg
add
xor
cmc
mov
decl
pop
je
sbb
cmp
nop
add
mov
data16
enter
and
sub
cmpsb
pop
mov
out
mov
xorl
insl
mov
add
add
add
xchg
ja,pn
push
pop
dec
push
sub
xchg
pop
mov
insb
push
mov
in
push
int3
and
mov
test
pop
and
pop
add
sar
jne
jbe
nop
push
sub
and
mov
cmp
jg
aaa
mov
lret
add
and
push
lret
mov
fmul
push
inc
mov
stc
xchg
addb
add
add
inc
data16
mov
daa
mov
imul
pop
out
scas
ss
scas
ds
add
movswl
jns
out
mov
pop
sub
jge
and
out
jno
std
dec
jb
in
pop
add
sbb
insl
std
xchg
imul
pop
out
in
fcoml
bound
pop
or
dec
add
add
add
add
jae
ret
xchg
lock
call
movsl
out
sub
mov
sub
pop
jmp
xchg
es
jle
in
jmp
pop
add
sub
jmp
dec
aad
cli
imul
jb
lcall
push
lods
xorb
mov
pop
add
add
add
add
xchg
insb
repnz
mov
dec
cld
xchg
mov
pop
call
sub
decb
inc
sti
mov
mov
loopne
mov
and
add
fstpt
hlt
test
call
mov
adc
rorb
or
jp
call
xchg
and
add
call
cmp
and
test
and
add
daa
mov
mov
addl
ret
sar
jmp
movsb
les
xchg
push
test
dec
push
adc
push
fildl
sub
or
lahf
add
cmp
sbb
mov
xchg
mov
push
stos
out
loopne
add
ret
sub
cmpsl
mov
push
xchg
mov
inc
mov
push
add
adc
mov
cmp
ret
outsl
sub
pop
mov
adc
es
inc
mov
xor
stc
ret
popf
test
adc
sti
sbb
imul
adc
sti
mov
sub
mov
or
push
aaa
and
daa
mov
sarl
mov
sti
jne
push
mov
fistl
adc
mov
mov
inc
jo
inc
loope
sbb
movsl
stos
daa
mov
jb
pop
mov
pop
mov
lcall
out
and
push
add
cld
mov
add
add
inc
or
aas
dec
popa
jne
xor
shlb
push
stos
sub
jp
jmp
ret
sbb
add
push
rclb
sub
lcall
lods
call
lock
sub
sbb
and
adc
or
pop
popa
add
xchg
adc
in
pusha
or
mov
cltd
add
scas
jg
out
pop
lock
or
test
ret
and
cld
sahf
cmp
inc
andl
test
and
add
out
push
push
sbb
call
mov
das
jg
scas
and
jnp
inc
fadds
push
fmul
loope
call
arpl
test
add
add
push
add
adc
sti
call
jmp
pop
add
add
pop
call
sub
push
shlb
out
jg
push
test
xchg
lea
adc
sbb
cmpsb
xchg
inc
mov
int
jge
iret
cmc
mov
xor
cld
gs
jg
test
adc
cmpsl
iret
mov
add
add
add
jle
call
mov
xor
mov
jmp
sbb
mov
mov
subl
sbb
jp
pop
dec
sub
sub
dec
cmp
pop
ljmp
adc
jae
shl
add
push
es
push
sub
push
movsl
pusha
bound
xchg
jo
mov
adc
add
add
add
inc
pop
aaa
xlat
mov
lock
in
ss
sbb
in
daa
arpl
dec
mul
lret
mov
das
nop
sub
or
pop
jbe
stos
cli
call
cmp
subl
ljmp
jno
out
and
pop
imul
inc
and
jb
in
sub
add
jo
xchg
sub
movsb
stos
adc
subl
and
bound
sbb
jge
cmc
cld
jb
sbb
popf
fmull
scas
inc
mov
inc
enter
in
in
push
fldenv
dec
addl
or
lea
inc
sbb
mov
add
xchg
add
shlb
shll
push
pop
dec
in
sub
pop
call
sub
sub
add
cmpsb
inc
call
mov
jg
xchg
dec
nop
add
mov
inc
test
adc
les
sbb
pop
sti
mov
jg
inc
xlat
stos
data16
sti
jbe
pop
inc
test
inc
and
add
jg
add
xor
sub
push
cmc
pop
test
jp
out
jae
push
sub
aam
pop
addr16
pop
std
mov
int3
cmp
jb
aaa
and
imul
sbb
int3
movsl
decb
les
out
cmp
std
test
push
roll
push
pop
jae
imul
andb
mov
or
das
push
dec
inc
sub
push
std
lahf
sahf
sub
xchg
test
orl
mov
pop
out
jno
inc
mov
lahf
sar
push
test
out
daa
in
stos
sbb
imul
sub
xchg
adc
imul
adc
out
or
sub
repnz
or
push
mov
mov
push
call
mov
fcoms
lret
sub
pop
xchg
subl
out
insl
xor
add
add
imul
sbb
testb
pop
jmp
xor
stos
shll
inc
leave
lahf
js
add
and
es
add
jle
lret
pop
mov
jbe
pop
mov
xor
inc
stc
test
lock
sub
orl
add
adc
repnz
mov
mov
loope
pop
add
xor
add
lahf
mov
adc
add
test
lahf
shll
jg
lret
std
outsl
pop
fscale
push
pop
add
pop
out
cmp
sbbb
push
and
fcoms
xchg
sbb
ds
sbb
sti
mov
jp
add
lcall
subl
add
pop
or
into
scas
sti
incl
or
add
add
add
scas
sti
ljmp
mov
jno
mov
add
and
mov
aad
mov
adcl
imul
cmpsl
adc
add
out
mov
jno
jge
xchg
dec
nop
aas
sub
mov
inc
fiaddl
mov
push
or
pop
lea
scas
ret
pop
std
pop
imulb
mov
jge
iret
mov
insl
frndint
imul
test
cli
fnsave
subb
mov
mov
add
adc
out
jle
cwtl
lock
adcl
ret
sbb
out
fldt
add
xlat
adc
call
clc
mov
cmpsl
cmp
lcall
sub
mov
addb
add
add
add
add
xor
mov
test
add
and
adc
popa
fisttps
jg
iret
jg
push
add
jno
pop
dec
sbb
in
sub
int
sbb
or
mov
cmpsb
pushl
inc
inc
call
sub
mov
sub
adcb
add
add
add
add
sbb
jb
push
mov
cld
mov
testb
in
cmp
nop
icebp
cmc
sub
sbb
push
cs
add
das
jae
jl
call
cmp
jb
jno
ljmp
mov
cld
add
sbb
push
iret
arpl
add
inc
adc
add
xchg
lahf
add
enter
inc
int
add
pop
out
push
mov
imul
adc
bound
test
insb
fsubr
xchg
js
add
sbb
xchg
xchg
outsb
sahf
adc
cmp
adc
shrl
or
int
mov
adc
jno
push
loope
out
xchg
sti
call
arpl
pop
xchg
sub
xchg
out
test
in
repz
add
add
add
add
sti
rorl
fists
jne
jno
repz
cmp
shl
push
out
std
jns
xchg
idivl
sysenter
ss
out
repnz
add
jo
push
jnp
push
jg
mov
jnp
scas
mov
cld
cmpsl
mov
cld
fs
pop
or
mov
mov
ret
sarb
mov
xchg
cmc
sbb
testl
cmp
mov
in
pop
pop
jo
inc
cwtl
adc
int3
imul
adc
cmp
add
lds
les
adc
loop
ljmp
adc
movsl
lret
fdivl
cmp
arpl
mov
addr16
push
mov
add
add
add
inc
or
inc
inc
push
out
imul
push
adc
mov
sbb
xchg
ljmp
add
movsb
rorl
dec
std
fdivp
outsl
or
mov
fidivrs
jg
jmp
mov
notb
cmp
out
xchg
xor
sub
mov
clc
insb
jecxz
dec
sbb
jmp
cwtl
dec
icebp
jo
subl
jb
add
addr16
std
call
loopne
cld
cs
int3
out
sub
cld
jae
jmp
mov
loope
loope
dec
mov
aaa
sahf
jmp
mov
push
mov
mov
jne
gs
mov
out
jb
aad
hlt
sbb
bound
sbb
jno
sub
add
add
add
add
inc
xor
stos
insl
std
call
popf
mov
cli
int
sti
add
adc
pushf
mov
outsl
push
sbb
sub
add
xchg
adc
inc
hlt
sbbl
sub
push
mov
adc
std
push
cmpsl
cmpl
testl
mov
lret
mov
add
pushl
jae
xor
jae
iret
add
push
test
rcrb
ja
ss
mov
out
or
pusha
add
sub
xorb
or
lahf
mov
idivb
add
xor
addl
add
sub
and
sub
ja
ss
adc
ljmp
sub
out
outsl
idivl
and
movsl
out
sub
mov
sti
push
aaa
or
insl
xchg
in
add
push
push
cs
mov
cmc
add
xchg
xor
add
imul
sbb
js
xchg
sti
repz
jmp
or
std
pushf
sub
imulb
sbb
jns
or
lods
imul
arpl
sub
lods
stos
imul
bound
xchg
jge
xor
shlb
push
add
fdivr
dec
jg
ljmp
pop
push
mov
and
inc
out
cmp
xchg
add
or
mov
out
sbb
push
add
xor
and
imull
add
movsb
sbb
add
add
add
add
fldl
out
pop
pop
xchg
and
addl
inc
sub
out
bound
jmp
xchg
dec
xor
add
inc
in
loopne
cmp
add
cmp
call
je
int
call
test
sub
decl
std
incl
scas
or
mov
sahf
add
sti
test
and
mov
sti
pop
hlt
mov
pop
jg
add
and
mov
popf
testl
adc
aaa
inc
add
add
sub
in
jae
js
add
outsb
cmp
jecxz
cmp
or
push
mov
std
mov
aaa
or
jmp
lea
jmp
inc
mov
fcmove
mov
clc
sub
idiv
jne
pop
push
jne
pop
push
pop
jae
cmpb
cmp
mov
push
test
add
std
addr16
sub
sbb
jg
jnp
inc
pop
lods
pop
sub
imul
stos
bound
add
sub
add
add
add
add
loop
add
sahf
mov
scas
cwtl
jg,pt
imul
sbb
or
mov
out
sub
pop
int
in
sbb
jb
or
xlat
sbb
jb
or
clc
test
ja
cmp
push
adc
add
and
and
mov
fistpll
jecxz
or
jno
jge
mov
add
add
add
add
add
push
outsl
inc
push
adc
cmp
jno
pop
add
add
in
mov
cld
gs
xchg
or
pop
add
xchg
fwait
enter
dec
testb
add
adc
jecxz
aad
jmp
sub
lds
movl
sub
loop,pn
lds
and
sahf
jmp
mov
mov
inc
add
ljmp
rcl
inc
in
idivb
adc
add
or
jbe
push
jp
fs
jbe
push
jb
hlt
sbb
jbe
push
push
add
sti
jbe
push
bound
sbb
jbe
push
pop
imul
jbe
push
push
imul
ret
lahf
cmc
je
jbe
ss
sbb
sbb
fs
add
aas
test
pushl
call
test
ljmp
mov
mov
jnp
je
add
xchg
push
add
hlt
addb
into
in
js
dec
pop
dec
mov
cld
aad
jns
test
lock
cmc
add
pop
mov
je
dec
int3
sbb
mov
sarb
add
popa
cltd
cmp
ljmp
cltd
fdivr
gs
adc
pushf
xor
adc
add
add
rol
sar
jle
and
pop
pop
nop
loopne
lret
cmpl
out
sub
sub
jbe
pop
add
jbe
sbb
add
xchg
stos
fbstp
and
cmc
test
xchg
mov
mov
pop
out
sub
fidivrl
stos
arpl
lds
dec
imulb
push
push
add
aad
or
fwait
aaa
mov
outsl
out
fwait
sbb
add
imul
neg
cmp
std
sbb
jmp
fisttps
ret
pop
mov
add
add
add
pop
pop
adcl
fbld
pop
mov
mov
daa
leave
imul
xor
mov
pushl
outsl
sbb
in
dec
mov
fincstp
aas
mov
loop
sub
xchg
ja
jmp
sub
adc
imul
leave
cld
pop
add
call
add
add
add
mov
data16
pop
mov
inc
and
repz
push
push
lea
dec
push
sub
add
mov
and
add
push
and
jl
jo
andl
call
dec
addr16
xchg
lret
cld
and
mov
push
dec
push
aad
adc
add
add
add
add
add
nop
scas
inc
and
jb
inc
aaa
decl
pusha
and
and
push
leave
inc
push
adc
add
enter
xor
adc
nop
add
inc
jge
ss
add
sub
push
or
enter
cld
add
mov
inc
add
shll
in
adc
incb
flds
or
add
pop
repnz
or
je
cld
call
pop
hlt
clc
rcrb
pusha
ret
add
call
cld
mul
xor
jae
dec
add
add
push
or
in
adc
add
jl
xor
and
pushl
lea
xlat
pop
add
add
jne
dec
dec
decl
lea
imul
repnz
fsubl
lds
jb
push
aaa
or
fdiv
add
jecxz
inc
sub
dec
push
cmp
cmp
movl
cmp
push
lea
add
jmp
inc
incb
mov
outsl
mov
in
xor
lock
jo
sub
mov
push
jb
push
insb
std
mov
add
imul
and
ret
or
push
test
sub
mov
and
xor
fldt
xchg
test
gs
call
bound
cmpsb
dec
dec
mov
decl
push
and
mov
fsts
imul
sub
sub
and
add
fldt
rclb
add
add
add
add
aad
and
sub
das
sarb
ror
adc
xor
addl
sahf
inc
cmpsb
or
enter
jno,pt
lret
movsb
push
rclb
cld
incl
test
je
movsl
sub
sbb
mov
sahf
ss
sub
cld
adc
or
ret
push
add
pop
cmpsb
aam
add
and
add
jb
enter
xchg
add
std
subl
mov
cmp
inc
sub
pop
aam
add
testb
xchg
leave
inc
sub
push
fsubr
sub
xchg
mov
hlt
xor
mov
inc
push
dec
inc
sbb
adc
add
inc
cmp
sti
push
in
xor
mov
pop
ret
mov
cmp
les
cmp
mov
mov
mov
jno
push
adc
add
js
pusha
or
lods
jns
subb
ja
cmpsb
test
std
add
and
sbb
mov
es
loope,pn
add
jno
jae
or
push
test
mov
sub
xor
jmp
sub
call
sub
leave
sbb
jbe
sub
pminsw
rcl
pusha
push
xchg
sbb
mov
mov
cwtl
jae
stc
xor
rorb
cs
push
cld
es
neg
xor
popf
frndint
out
out
frndint
add
frndint
push
jo
adc
frndint
scas
das
sbb
push
jb
inc
std
jno
pop
add
inc
out
enter
jmp
jle
xchg
add
data16
fidivl
and
mov
sub
add
cmp
dec
cli
cmc
ss
sub
cmp
add
push
dec
fstpt
addl
pop
xchg
dec
jmp
fldl
cmpsb
mov
clc
roll
adc
fsubr
gs
add
into
cmpsb
or
subl
jno
ret
add
and
loope
clc
je
lahf
sti
jne
insb
call
and
repnz
inc
lds
ret
out
add
pusha
ljmp
aam
add
pop
xchg
add
mov
jmp
fs
sub
dec
push
jae
jae
std
clc
push
adc
incl
and
push
push
add
push
std
aas
cwtl
adc
or
or
xchg
fiaddl
mov
lock
and
cmp
call
sub
std
jb
pop
repz
stc
dec
add
dec
cli
sub
jl
sub
out
mov
aad
cli
sbb
stc
inc
sub
inc
add
pop
sarl
pop
pop
andb
mov
mov
add
sbb
jbe
jl
and
shr
out
daa
lea
stc
frstor
loope
mov
stos
in
cmc
gs
stc
aam
push
add
arpl
test
mov
stc
mov
push
push
mov
ss
sbb
fadds
test
test
aam
in
scas
call
rcl
cld
mov
sub
cld
cltd
test
insb
gs
dec
fs
repz
cs
mov
addb
nop
imul
jae
lret
popf
aaa
movb
add
add
add
add
sbb
lock
icebp
cmpsb
xchg
add
lds
test
sbb
lods
mov
mov
cld
cmpsb
add
sahf
add
mov
cwtl
sbb
sti
decl
or
sti
pop
add
aas
loopne
or
testb
std
cli
jmp
pop
pop
fiaddl
add
push
cmp
incl
pushf
jno
mov
stc
in
and
into
mov
xchg
sub
fdivr
inc
sahf
mov
call
notb
lcall
jns
push
lea
imul
pop
sub
aas
cld
test
dec
add
sub
push
scas
or
xor
icebp
jo
pop
sub
dec
mov
scas
adc
jae
clc
pop
cltd
cmp
mov
mov
int
push
sub
ljmp
outsl
sub
stc
in
jb
rorl
les
mov
push
cmp
push
push
inc
imul
mov
cmc
aad
mov
pop
cld
jb
push
add
sub
frndint
lahf
test
adc
push
stc
inc
add
rclb
clc
sub
adc
xrelease
outsb
jg
clc
shrl
lcall
out
ret
lock
xor
and
push
movsb
mov
add
inc
push
outsb
ljmp
add
push
out
test
popf
mov
idivb
mov
inc
sub
add
fcmovb
xchg
shll
test
cmp
call
jmp
pop
aam
pop
jge
xorb
rcll
mov
andl
push
cwtl
adc
rcrb
sub
jb
mov
dec
insb
std
rorb
enter
stos
fmull
insb
outsb
and
ss
pushf
fdivs
xchg
sti
push
ja
jb
add
movl
push
rcrl
xlat
rclb
push
ss
cmc
addr16
bound
bound
cltd
sbb
ret
out
add
sbb
adc
js
or
mov
or
arpl
aas
add
adc
dec
adc
lahf
out
add
adc
push
jle
lret
sbbb
jge
imul
out
add
ds
add
cmpsb
xor
xor
out
add
dec
lock
cmp
push
add
ret
push
pop
add
lahf
mov
push
add
inc
rorl
and
aam
enter
aad
lret
icebp
stc
add
sbb
add
mov
pop
jo
inc
sub
mov
adc
mov
imul
je
repz
je
fs
pushf
enter
cmp
push
mov
je
inc
sub
pop
add
inc
loopne
push
mov
push
rolb
icebp
cld
rorb
fdivl
call
jo
addr16
jle
cwtl
das
jb
es
sub
pop
cmp
pop
pop
mov
std
int
ret
mov
add
jne
sub
mov
xor
ret
repnz
fisttpll
mov
dec
push
inc
and
add
cwtl
stos
xlat
test
in
xchg
and
add
mov
insb
dec
subb
aam
dec
mov
fisubl
add
mov
add
mov
cmc
movsl
lahf
add
sub
inc
test
les
fsubrs
test
pop
add
iret
in
lods
push
jmp
jle
add
xorl
sub
mov
add
sub
and
inc
xchg
call
push
jecxz
lahf
add
mov
call
scas
dec
clc
jmp
sub
addl
int3
sbb
xchg
dec
jb
pop
mov
call
hlt
enter
and
add
add
add
mov
and
sub
out
cmpb
add
pop
xchg
incl
ret
pop
add
add
add
add
daa
push
or
loopne
ret
pop
add
loopne
xor
into
adc
sbb
test
and
dec
jp
imul
pop
sbbb
dec
sub
pop
pop
mov
fstps
push
sti
imul
mov
add
push
inc
lock
jmp
mov
cld
cmpsb
js
add
cmp
or
js
or
mov
mul
mov
js
lret
push
sub
cmp
jp
ja
sub
fadd
push
imul
dec
jle
sub
and
or
sub
out
adc
mov
sub
push
push
test
out
pop
and
jp
push
sbbl
mov
mov
add
ds
jne
movsl
push
pop
push
xlat
out
cwtl
sbb
or
lds
jp
imul
sbb
jnp
mov
inc
out
pop
inc
cmp
stos
jns
add
jmp
sub
push
call
test
dec
out
sahf
popf
ret
fldt
sbb
leave
pushl
jecxz
mov
loope
cld
fs
dec
bound
jl
int3
jb
jno
xchg
jmp
and
jae
fsts
std
into
mov
decl
mov
sar
scas
dec
jne
jb
enter
xchg
inc
xor
push
xchg
das
addr16
call
inc
jecxz
outsb
xor
shrb
pop
mov
lods
shlb
stos
inc
clc
add
or
shrb
push
pushl
pushf
xchg
add
inc
inc
clc
xchg
in
inc
sub
test
in
and
test
inc
inc
or
mov
sti
pop
dec
test
in
sub
push
mov
xchg
push
mov
repnz
bnd
les
shr
sbb
add
push
call
ds
cld
push
cmp
dec
push
sub
or
dec
inc
clc
cmpsl
cmc
je
adc
jb
add
sub
jbe
subl
jmp
outsb
jecxz
add
mov
push
call
fidivrl
aaa
in
jnp
clc
xor
lock
add
push
aas
cld
push
mov
fsubrs
sti
jmp
pop
dec
add
pop
mov
pop
in
jbe
fimuls
pop
add
mov
mov
lds
les
fmull
cli
ficoms
cmpsl
dec
imul
sbb
mov
fbld
mov
lcall
sbb
dec
gs
add
cltd
add
scas
pop
je
add
fcmovne
jb
out
fstpl
and
dec
jmp
call
pop
mov
add
jno
xor
inc
sub
sbb
shlb
add
fwait
cmpsb
outsl
xor
scas
repnz
add
pop
les
xchg
pop
pop
add
nop
imul
gs
inc
jmp
outsb
push
jb
adc
xor
inc
fisubs
cmc
popf
sbb
add
xor
test
int
push
cs
inc
jmp
cmp
add
add
cld
into
scas
int3
cld
cmp
adc
push
mov
jecxz
sub
bound
out
shll
dec
je
push
inc
je
push
inc
and
xlat
inc
inc
jo
or
add
add
add
add
sbb
sbb
sti
je
sub
shl
sti
add
xchg
repz
je
push
cmpb
je
imul
mov
fdivl
add
dec
mov
je
enter
dec
mov
subl
jo
sub
idiv
inc
jecxz
rorl
ss
pop
pop
push
popa
adc
mulps
in
mov
push
sbb
adc
add
cld
mov
inc
mov
mov
cld
mov
out
stc
aaa
lret
sarb
iret
bound
shll
idiv
push
inc
aad
mov
jmp
mov
add
stos
jnp
xor
or
movsl
jns
inc
sbb
adc
inc
add
jnp
xchg
rcrl
mov
fstps
mov
sbb
cmpsl
xor
add
add
add
shr
sub
sub
push
mov
arpl
jp
xor
mov
and
mov
and
in
imul
sti
jp
pop
jb
ss
es
push
lret
xor
fwait
mov
sub
insb
inc
inc
daa
mov
pushf
mov
out
fcomip
jg
and
add
cld
arpl
add
add
mov
mov
sbb
ret
add
jb
lods
push
bndldx
ret
and
outsl
dec
or
adc
daa
add
fcmovu
pop
inc
xchg
inc
and
iret
mov
jb
and
push
cwtl
les
int
std
xlat
add
mov
int
outsl
std
aam
das
inc
jmp
rcrl
data16
add
add
add
add
xchg
inc
add
fld
xor
dec
mov
pop
sub
std
div
xchg
addl
vpcmpgtd
mov
sar
std
cli
pop
cltd
mov
and
fsts
pop
insb
jg
sub
call
add
dec
jle
aas
decl
mov
call
push
mov
mov
inc
jno
out
fmull
out
dec
dec
cmp
in
pop
or
add
or
add
movsb
jae
xchg
insb
call
mov
push
inc
and
cmp
aaa
mov
in
pop
cmp
xchg
cmp
and
lret
mov
inc
inc
sub
pop
pop
ljmp
jmp
add
add
add
add
pop
add
mov
rclb
mov
adc
add
add
test
cmp
clc
lcall
lock
jg
scas
mov
inc
cmpsb
test
hlt
insl
sbb
mov
cmp
push
jne
push
and
push
fisttpll
pop
stos
sbb
call
add
dec
in
inc
sub
dec
jp
cmp
cli
xchg
out
jnp
and
movsb
fs
in
mov
vhsubps
out
and
mov
mov
fcoml
cmp
add
pop
popa
mov
and
mov
dec
fs
ljmp
ljmp
stos
loop
mov
mov
add
add
add
mov
jno
in
mov
mov
pop
es
fists
inc
sub
ds
jmp
pop
loop
jl
test
loope
push
xor
mov
das
xchg
bound
push
cmp
imul
cld
jmp
pop
mov
adc
sub
mulb
leave
mov
add
add
add
add
mov
or
adc
adc
sub
jne
mov
jl
jmp
sub
repnz
add
inc
mov
jmp
push
std
add
inc
or
cmc
icebp
pushl
inc
or
add
pop
mov
fs
push
pusha
call
pop
dec
mov
add
add
add
add
iret
mov
incb
mov
or
clc
sub
mov
cli
call
sub
add
sub
inc
xchg
sbb
in
or
into
sub
js
test
je
or
jl
sub
nop
in
cmp
push
shll
mov
or
add
add
add
into
mov
xlat
xor
add
push
xor
addb
xor
jbe
inc
inc
inc
dec
add
das
ss
mov
les
inc
fiaddl
jae
adc
mov
stos
cmp
daa
pop
add
sub
int3
xchg
inc
cmp
fcmovu
clc
pop
scas
jp
out
xchg
cld
test
jno
mov
insb
push
jb
mov
mov
es
or
nop
add
cwtl
sbb
mov
ljmp
xor
add
jmp
push
into
fildll
fs
pop
loop
or
pop
add
gs
adc
cli
fisubs
or
dec
sbb
mov
iret
mov
and
add
aaa
repz
sbb
je
adc
push
ljmp
jmp
mov
jb
test
cld
add
inc
in
push
sbb
ljmp
incl
mov
jecxz
out
pop
pop
inc
call
pop
adcl
stc
add
mov
cmpsb
ja
sbb
push
sahf
add
pop
pop
insb
jmp
mov
shl
sub
sbb
jns
jmp
aam
jno
test
arpl
xor
add
clc
repnz
inc
test
lds
inc
inc
sbb
xchg
ror
adc
inc
sbb
test
adc
add
push
add
add
mov
jg
rcrl
mov
add
dec
push
or
pop
cmc
ljmp
call
cmpsl
cmp
rcrl
mul
aas
add
shr
dec
leave
sti
lcall
pusha
cld
orl
or
ffreep
xchg
movb
daa
push
movl
jae
adc
add
push
adc
or
add
inc
mov
mov
in
adc
cld
adc
xchg
outsl
fimull
push
mov
icebp
div
sub
push
push
jp
push
in
ret
cld
int
rorl
ljmp
cmp
xchg
sub
subl
add
negl
testl
outsb
add
pop
dec
push
add
cli
xor
push
add
out
call
push
out
test
outsb
add
pop
fdivs
imul
lea
or
push
aaa
in
decl
mov
jne
iret
push
adc
inc
sub
jecxz
cmp
mov
shr
sub
mov
pushf
call
sub
push
fldenvs
ljmp
mov
inc
push
and
add
enter
sbb
cmp
add
arpl
xchg
int
call
out
call
push
push
into
pop
and
dec
add
call
cli
sti
cmpsb
divl
mov
loopne
stos
jne
lods
push
aaa
add
add
je
cmpsb
inc
in
or
dec
push
xchg
jl
xchg
and
cmp
sub
mov
add
mov
mov
mov
jmp
rcrb
add
jmp
inc
in
add
ljmp
adc
cli
push
aam
xchg
and
xor
lret
aaa
pop
std
fiadds
popf
je
sub
daa
ret
std
lods
inc
les
aad
add
inc
cmp
xor
jle
sub
add
insb
aad
jg
movb
jb
add
les
add
add
add
add
mov
cld
mov
rorb
inc
aas
inc
jo
adc
push
mov
aas
inc
je
jp
xchg
jl
jl
inc
inc
in
xor
jnp
cli
roll
fimuls
fwait
inc
pop
push
dec
and
lea
scas
lea
fisubrs
cmpsl
mov
ds
flds
mov
push
sbb
iret
fnstenv
inc
fdivs
fs
aaa
clc
xor
clc
sub
leave
idivl
fisttpll
dec
mov
fcomps
outsl
xor
mov
dec
push
fnstenv
push
das
adc
cmpsb
es
pusha
push
mov
popa
inc
cmpsb
xor
lods
pusha
xor
jle
mov
fdivrl
and
add
add
add
test
lea
rorl
mov
push
mov
jns
push
test
out
jb
cld
jb
mov
mov
mov
shll
jmp
ljmp
pop
adc
mov
or
push
mov
pop
dec
std
cmovo
hlt
sub
out
and
push
add
mov
mov
pop
add
and
pusha
push
add
js
cwtl
mov
adc
push
add
imul
mov
scas
cwtl
lret
inc
sbb
orl
jo
mov
adc
jno
add
cmp
sti
call
aad
jne
inc
or
cmp
adc
add
out
stos
fldl
inc
in
add
imul
arpl
cli
ss
dec
ljmp
leave
imul
in
out
sub
arpl
bound
fldcw
rcll
out
inc
add
xor
jmp
cmc
sub
insb
sub
ds
push
add
sub
pop
push
add
add
add
fimuls
jle
inc
add
sub
in
fistpl
xchg
mov
iret
push
and
sub
fwait
loope
add
xor
aad
xlat
clc
inc
sub
dec
ljmp
fisubrl
inc
push
jmp
scas
icebp
mov
push
xor
ret
pop
add
add
sbb
cmp
dec
outsb
out
popa
or
add
push
jb
rcr
fiadds
fldenv
addr16
push
out
sti
jmp
sub
jb
out
cmpsb
insb
out
sub
sti
pop
sub
arpl
mov
shlb
push
add
scas
cld
jmp
stos
call
xor
subl
add
add
sub
mov
push
fsts
fdivr
imul
cld
movsl
jae
xchg
lahf
std
xchg
dec
addr16
scas
cld
jmp
in
push
aaa
dec
xor
mov
dec
decb
mov
add
aaa
jbe
aam
adc
repz
adc
cld
push
push
std
pushf
cmp
jb
pop
shll
add
aad
call
inc
and
movsb
hlt
lcall
xchg
in
call
leave
mov
in
push
jge
inc
ret
shlb
xchg
inc
or
push
stos
sti
adc
inc
out
pop
push
incb
inc
fwait
adc
cmp
testl
xchg
sahf
inc
and
icebp
out
cmp
sti
mov
push
pop
lea
push
rclb
faddl
add
test
ljmp
adc
inc
add
adc
xchg
hlt
cmpsl
sub
add
in
jp
cmpsl
cmp
add
mov
ljmp
jae
mov
jnp
push
ss
sub
dec
add
mov
subl
fnstcw
mov
push
loop
call
jne
daa
subb
add
cmpsb
sbb
mov
dec
inc
cmc
into
jg
and
ljmp
imul
lods
out
das
lods
lcall
pop
out
cltd
add
fstpt
not
push
xor
adc
adc
dec
inc
sti
imul
mov
je
push
push
iret
mov
jo
bound
push
or
dec
and
jmp
dec
adc
sub
xchg
mov
rorl
lods
repz
xchg
mov
push
inc
lods
xchg
daa
stos
push
out
mov
stos
call
pop
les
ljmp
inc
lds
aam
cli
stos
xchg
test
pop
or
add
pop
push
pop
adc
cmp
testb
sub
sub
fimuls
inc
call
stos
pop
and
pop
lods
jb
insb
cs
jno
mov
sub
jnp
xchg
push
call
jb
pop
push
push
add
and
mov
and
or
out
mov
add
add
sub
decl
bound
pop
push
push
mov
sbb
mov
xchg
les
mov
notl
lea
notl
push
in
push
and
pop
je
inc
push
call
mov
insb
cmp
sbb
pushf
js
ja
jno
push
sub
and
sub
ja
pop
cmp
jo
add
imul
mov
sbb
orb
mov
sbb
rclb
mov
mov
pop
mov
hlt
xchg
inc
cmp
inc
insb
sub
dec
pop
mov
fs
ret
lret
add
dec
rorb
dec
and
sub
js
push
js
insb
sub
adc
mov
xor
mov
cmc
add
add
cmp
or
or
pop
sub
sbb
jnp
mov
fldl
sub
fwait
mov
jge
cmpsl
add
mov
enter
push
mov
rcrl
push
ss
jl
test
add
iret
xor
pushf
outsb
push
sub
stos
cmpl
push
xor
scas
push
pop
add
push
call
dec
sub
jbe
sub
adc
icebp
in
push
sahf
push
cmp
repz
bound
subb
jecxz,pn
add
cs
adc
out
sbb
gs
in
add
insb
fwait
sub
inc
fwait
mov
pusha
hlt
jb
rcrl
adc
test
cmpsb
ds
lods
call
add
add
add
test
aaa
mul
fs
pop
pop
adc
and
sub
insl
lahf
xor
push
movsl
movsb
jmp
and
lahf
inc
jmp
stos
movsl
sti
incl
dec
rcll
cmp
cmpsb
sub
je
movsb
adc
sbb
mov
ficoms
add
sldt
mov
out
xchg
sti
mov
lock
add
loop
inc
inc
lahf
mov
add
mov
add
faddl
je
popf
hlt
add
cmp
add
xorb
ret
inc
fstpt
inc
pop
and
ret
push
push
ljmp
mov
inc
rcr
add
push
es
add
pop
cld
push
sub
cmp
sub
add
ljmp
add
add
add
add
ja
add
push
add
push
ret
imul
test
xor
clc
xor
out
pop
sbb
sub
pop
std
xchg
mov
add
dec
cmp
sub
and
es
jb
int
daa
cmp
add
shrb
cmp
mov
aas
mov
stc
inc
sub
fiadds
stc
xchg
jp
addl
adc
and
mov
rorb
mov
dec
xor
add
shl
std
push
inc
lock
push
pushf
add
mov
out
xor
cmpsl
add
movsb
sarl
out
inc
lea
add
add
add
sbb
cs
imul
rorb
lods
jp
pop
leave
sbb
fadds
dec
add
mov
inc
mov
arpl
ljmp
xor
imul
lds
dec
lds
mov
jmp
das
pop
lcall
push
add
add
add
add
add
hlt
sub
bound
loop
lods
fldt
subl
sbb
clc
out
ficoml
sub
xchg
rolb
add
sbb
mov
push
rorl
dec
sti
xor
pop
add
xchg
push
add
sbb
adc
mov
jmp
push
sbb
test
push
jb
data16
inc
add
hlt
jp
inc
xchg
adc
out
js
sti
mov
adc
inc
cld
jecxz
jno
aad
adc
xlat
xchg
jo
sub
sti
adc
mov
sbb
ret
test
or
sub
lds
cs
add
jne
adc
or
add
xor
out
add
mov
std
test
les
and
sbb
add
je
imul
cld
sub
mov
adc
inc
add
push
dec
inc
sub
inc
add
jnp
dec
adcb
iret
scas
testb
idivb
lcall
rol
pop
cmp
rcrl
adc
aam
pusha
aaa
in
dec
and
sbb
scas
or
in
gs
push
xor
and
pop
aas
ja
mov
ljmp
dec
pop
vmovlps
decl
xor
lahf
repz
xor
out
jge
adc
mov
push
pop
aas
push
dec
es
cmp
add
push
sub
jns
cmp
fadds
mov
push
mov
push
xor
sub
in
cmc
pop
add
aaa
cmp
sub
mov
pop
pop
add
xchg
xor
jb
std
sbb
mov
je
es
call
push
cmpsl
out
add
inc
cmc
outsb
sub
push
fcoml
call
inc
add
adc
ss
lds
dec
test
push
push
push
push
or
imul
sti
adc
mov
cmp
add
and
push
sbb
loop
addr16
push
je
hlt
mov
iret
aaa
filds
aaa
cmpsb
xchg
xchg
and
add
mov
repnz
popa
iret
test
pop
decl
xchg
xchg
mov
cld
mov
xchg
push
xchg
popa
adc
dec
loop
mov
sub
jno
lcall
add
inc
push
mov
push
mov
pop
push
sbb
add
mov
add
mov
pop
push
push
push
mov
sub
inc
add
or
jae
int
loopne
jp
adc
xchg
aad
cmp
cld
pop
add
mov
mov
negl
mov
jb
add
mov
icebp
add
in
ret
pop
sub
inc
add
adc
enter
sub
add
mov
mov
adc
stos
out
out
ret
xchg
mov
stos
stos
adc
jp
out
pop
das
out
es
push
or
pop
pop
stos
xor
add
pop
cmp
pop
pushf
ror
sbb
out
call
pop
inc
and
xor
sbbl
imul
pushf
jge
outsl
adc
sarb
rolb
stos
imul
pushf
pop
push
cli
push
lahf
cmp
push
mov
sub
out
js
cmp
cs
cmpsl
push
fwait
cld
push
repnz
pop
lods
fstpt
pushf
mov
dec
add
pop
add
lods
jns
jmp
sub
pop
push
jb
sbb
dec
and
test
xchg
jl
cld
sbb
or
xchg
push
subl
pop
mov
cld
xchg
fldenv
cld
sbb
loopne
jmp
xchg
cld
outsb
stc
cltd
jb
add
inc
jmp
imul
clc
in
test
dec
push
or
sub
out
pop
sti
call
ja
in
mov
cld
call
test
sti
push
jnp
je
rcll
mov
fistpl
sbb
jp
cmp
std
incl
subl
push
sub
jne
sbb
add
fdivrp
inc
sahf
and
call
inc
push
sti
lea
icebp
push
sbb
add
les
inc
in
jge
inc
mov
mov
or
dec
in
jl
sub
add
sub
mov
hlt
repnz
or
add
add
add
push
lods
inc
jl
mov
push
fildl
sub
shll
push
push
scas
cs
out
sbb
subb
mov
femms
mov
push
jmp
addr16
mov
push
cmp
or
xchg
sub
aad
nop
cwtl
sub
add
pop
push
add
in
or
mov
push
insb
ret
pop
and
inc
shr
fnsave
ret
push
push
cwtl
int
cs
add
sbb
inc
pushf
pop
push
and
stos
cmp
mov
mov
sub
shr
push
add
hlt
xchg
sbb
pop
xor
push
leave
daa
cmp
push
jae
mov
daa
cmp
jmp
subl
pop
test
in
mov
push
sub
inc
sti
pusha
cmp
xor
mov
out
repz
mov
aas
push
daa
cmp
adc
ds
addr16
pop
add
push
sub
cmpsb
div
rorb
dec
jo
lcall
cs
stc
testl
add
add
add
out
inc
push
repnz
jbe
ret
cli
dec
inc
sbb
ds
sar
inc
xlat
mov
sti
cmp
aaa
inc
pop
push
mov
es
mov
enter
movl
stos
and
repz
pop
sbb
add
into
inc
ret
popf
mov
aam
fdivrp
rcl
fdivr
ljmp
ret
add
add
add
add
and
mov
sti
xor
push
sbb
add
dec
cmovo
jmp
arpl
dec
add
sub
add
test
arpl
enter
adc
lret
pop
cmovo
test
arpl
enter
jmp
add
ret
cmovo
jmp
arpl
enter
dec
push
inc
add
test
arpl
pop
dec
add
stos
stos
inc
add
test
arpl
dec
add
lret
inc
sub
sahf
adc
push
dec
jae
loope
fs
daa
add
pop
xor
shlb
push
dec
rcrl
sub
inc
sub
cmp
ljmp
shrl
add
lret
pop
jne
sub
dec
adc
cmpsl
add
aas
cmp
punpckhdq
dec
repz
loopne
fs
fists
push
mov
out
xor
daa
add
jle
push
lahf
push
cmp
decl
int
jmp
cs
lahf
shll
decl
lret
enter
add
mov
lahf
std
sub
decl
enter
sub
lahf
loope
mov
leave
inc
jmp
sub
lahf
add
sahf
leave
inc
jmp
sub
lahf
mov
sbb
inc
jmp
es
jmp
mov
add
adc
push
sbb
mov
loopne
mov
push
add
pusha
adc
jmp
mov
mov
push
add
adcb
add
mov
ret
push
lahf
mov
andl
add
mov
add
and
adc
jmp
pusha
outsb
mov
sar
fcoml
add
sbb
add
movsl
mov
jmp
dec
add
sub
inc
add
rorb
inc
sub
adc
push
dec
add
or
inc
add
in
mov
xchg
sbb
add
jo
mov
xchg
jb
add
sub
mov
mov
adc
pusha
insb
ja
mov
aam
enter
add
add
add
add
dec
mov
in
sub
enter
cmpsl
js
sub
pop
inc
sub
mov
jb
out
xlat
push
ret
cmp
push
push
arpl
push
outsb
inc
sub
je
xchg
xchg
mov
mov
or
out
outsb
xchg
mov
mov
push
lahf
inc
sub
out
add
testb
push
xchg
pushf
mov
hlt
sub
jns
mov
sbb
inc
sub
andb
das
adc
add
nop
roll
xlat
bound
xchg
pushf
sub
xor
mov
loopne
push
jnp
jmp
jmp
cld
xor
xchg
xor
insb
adc
lea
je
mov
call
fbld
jb
jbe
loopne
jmp
push
ja
subb
fwait
ret
jmp
xchg
xchg
call
mov
mov
push
mov
out
sbb
xchg
push
loope
pop
lds
dec
aam
call
add
ret
cwtl
cmp
pop
nop
sti
cmp
mov
jae
pushl
in
sbb
sub
aam
mov
imul
les
sti
mov
lret
inc
ret
push
mov
scas
leave
sti
decl
add
test
add
rorl
je
adc
mov
sti
incl
cmp
push
adc
add
sub
jg
lods
test
add
add
add
xchg
mov
jp
sub
js
ret
es
ds
lods
test
jmp
imul
mov
pop
mov
add
xor
mov
js
push
std
ljmp
into
xor
mov
std
sbb
daa
js
mov
add
mov
push
push
test
cs
int3
jae
pmaddwd
add
cli
mov
pop
repz
sub
and
add
ja
ja
lea
subl
fadds
out
in
push
xor
add
adc
mov
add
jle
add
shrb
stc
ss
push
adc
popf
sbb
xor
add
pop
adc
mov
ljmp
pop
out
add
imul
push
movsl
out
mov
and
lock
sbb
or
adc
cmp
popf
xor
push
icebp
sub
push
out
push
andl
cld
aam
sbb
xlat
mov
adc
gs
cmp
repz
cmc
push
push
into
xor
sahf
ret
in
adc
lret
mov
mov
add
add
add
decl
cld
sahf
mov
cmp
rorb
mov
mov
pop
mov
lahf
dec
gs
jb
jnp
sub
imul
adc
pop
xor
fsubrp
adc
incl
add
aad
movsl
cltd
xchg
push
ret
cltd
outsl
xchg
es
adc
insl
test
fists
dec
nop
stos
mov
rcll
push
je
inc
and
rolb
jge
adc
pop
jp
pusha
cmp
mov
movsl
test
dec
pop
pop
adc
push
adc
jne
jnp
jge
rclb
push
ret
rcl
push
negl
add
sub
cld
popf
add
sbb
test
negl
xor
xor
jns
dec
es
test
push
xor
sub
add
mov
ret
cmpsb
ret
push
outsl
ss
inc
roll
jp
or
pop
lret
jne
sbb
ret
in
sub
movsb
add
in
xchg
lret
js
test
hlt
out
insb
adc
sub
xor
inc
lds
les
xchg
sahf
and
push
out
mov
addr16
out
pop
icebp
mov
ss
stos
lret
inc
fistpll
inc
sub
outsb
int
out
pop
cwtl
xchg
stos
movsb
adc
scas
sbb
std
inc
sub
cmp
pop
out
mov
mov
add
mov
repz
out
jne
sbb
add
in
cmp
sub
test
add
daa
add
jecxz
jo
pop
jb
stos
or
push
adc
or
cld
dec
sbb
pop
cmpsl
pusha
pusha
shl
divl
cmc
or
inc
jmp
push
andb
mov
cld
mov
lahf
ret
frstor
fbstp
ret
xchg
cmp
jbe
cmp
sub
xor
push
ja
push
adc
xor
jecxz
in
fmull
in
inc
mov
aad
push
add
or
push
mov
add
sti
adc
mov
jbe
mov
lcall
mov
mov
repz
dec
mov
adc
mov
sub
add
inc
mov
rolb
les
jne
mov
xchg
or
xorl
push
push
sbbb
imul
inc
mov
cmp
sub
add
xor
mov
cmc
test
cmc
mov
out
mov
sar
out
mov
fisubrl
cmp
add
add
add
stos
ret
cld
pushl
jg
adc
mov
ja
ja
xor
xor
cli
lds
inc
add
mov
push
cld
movsl
cld
ret
jae
inc
push
mov
sub
push
filds
push
divb
out
imul
jbe
test
aaa
xchg
arpl
add
add
inc
xchg
inc
stos
cmp
pusha
xchg
push
pop
sub
or
repnz
lods
ja
add
pop
mov
adc
sub
bnd
and
xor
inc
and
pushf
scas
das
inc
pushf
mov
das
ljmp
test
clc
fildl
out
and
es
mov
jmp
ljmp
ja
add
jmp
fiaddl
out
sub
hlt
cmp
mov
flds
pop
push
pop
stos
pop
call
inc
and
call
sub
add
sub
push
neg
cltd
lea
es
add
sub
in
pop
add
cltd
xchg
mov
push
enter
insl
jno
stc
scas
jo
orl
push
fsubrs
xchg
inc
and
in
pop
call
rorb
add
iret
jne
repnz
je
pop
das
rcl
push
or
add
call
mov
loop
add
xchg
dec
scas
aam
add
pop
or
mov
mov
xor
in
mov
jmp
add
ret
add
add
jbe
lock
sarb
dec
push
or
bound
push
sbb
or
push
sub
dec
jae
xor
pop
sub
jne
cli
push
cmp
xor
add
sub
cli
fucom
mov
push
addl
inc
jbe
sti
aas
pushf
or
pop
xchg
cmp
scas
mov
pop
sub
fwait
les
jge
jne,pt
sub
out
pop
imul
aas
ret
adc
mov
sub
inc
addl
inc
sub
sbb
mov
cwtl
insb
and
inc
xchg
add
out
add
je
xorb
pop
es
test
insl
cmpsl
mov
mov
mov
pop
cmpsl
jle
push
cmpsl
mov
addb
sub
push
insb
cltd
jns
xchg
sub
jno
lds
cmpsb
jmp
adc
sbb
js
fdivr
call
int3
xorb
aas
lcall
add
pop
add
push
cmp
add
imul
or
sbb
out
out
les
cmp
jmp
or
mov
adc
add
lea
pop
add
and
dec
mov
std
dec
fsts
mov
cmp
hlt
pushf
xchg
jmp
test
lods
mov
push
jmp
xorb
aas
xor
sahf
jns
sti
mov
push
clc
dec
outsb
jo
xor
sbb
and
push
xorb
std
mov
dec
push
mov
push
testl
inc
lahf
mov
shrl
sti
cmpl
add
cld
addl
push
test
or
add
mov
inc
mov
cmp
xor
jno
sub
lret
out
insb
mov
cmp
xor
push
imul
push
fsubl
jae
outsb
ret
fsubrl
call
mov
jge
fistpll
mov
sub
or
sub
movsl
cld
and
push
jbe
push
and
adc
enter
cwtl
icebp
lcall
cmp
idivl
movsb
dec
mov
fdivs
pop
xchg
sbb
inc
out
cmpsl
pushl
jge
rcrl
jne
or
repz
sub
in
add
mov
outsb
in
lcall
out
loope
sahf
mov
xor
fiadds
scas
pop
in
xchg
xor
pop
pop
je
and
mov
std
pop
aam
mov
mov
stos
jbe
ljmp
lcall
push
fldcw
mov
fldl
mov
rcll
mov
push
and
sarl
push
xorl
pop
mov
cld
mov
jl
bound
push
shlb
test
xchg
stc
push
sbb
sub
std
mov
mov
jbe
cmpsb
xlat
fsubrl
test
das
pop
add
mov
add
jb
mov
cwtl
dec
push
sbb
in
add
sar
imul
rcll
aas
lea
int3
in
sar
xchg
lods
ret
jl
add
jle
decl
mov
into
add
jo
add
push
test
notl
jl
add
xor
adc
mov
movsb
cmpsb
add
and
inc
or
test
andl
std
ljmp
xchg
cld
pop
push
add
pop
jp
aas
sub
inc
clc
cmpsl
inc
sbb
sahf
ret
lds
cld
pop
mov
and
xchg
cld
popf
mov
decl
xor
subb
lahf
cld
fcmove
add
aas
sub
shll
inc
clc
add
mov
or
xor
sti
lahf
cld
jp
jmp
mov
loopne
jnp
mov
mul
fsubp
jns
roll
out
xor
loope
xor
stos
hlt
jnp
mov
mov
xor
sub
fld
push
mov
cmpsb
sar
iret
push
jp
orl
ret
out
aad
ret
add
add
add
add
pop
cmp
xchg
mov
out
mov
movsl
xor
movsb
aam
test
and
mov
xchg
sahf
lods
adc
ret
dec
dec
xor
mov
repnz
mov
lret
cld
add
cld
pop
fldl
subl
adc
negl
sub
fbstp
std
mov
mov
add
add
add
add
sbb
jl
cmpsb
mov
jp
add
cld
out
inc
sbb
adcb
loop
cmp
push
mov
xor
jae
sbb
jb
lcall
andl
inc
add
pop
mov
xor
daa
call
js
add
pop
adc
add
add
add
cmp
incl
popa
push
add
sbb
call
lock
cmp
test
call
mov
xor
mov
out
mov
mov
cli
push
call
jb
pop
and
sti
lcall
inc
or
xor
test
call
mov
sub
mov
mov
fwait
xor
rcl
cld
sbb
or
sbb
fstps
icebp
mov
pop
hlt
xor
in
int3
xor
fidivs
mov
imul
test
addb
ljmp
aas
sub
add
pop
imul
test
and
add
in
adc
mov
sbb
and
dec
push
imul
and
ret
push
pop
bound
mov
mov
daa
ja
and
pop
push
add
cld
pushw
ja
les
bound
fwait
addl
sub
lcall
aaa
in
xor
mov
sub
fidivrl
sbb
xor
sub
jo
add
insb
ret
sbb
mov
ret
cmp
data16
xor
mov
pop
mov
jmp
mov
add
push
ljmp
and
push
lds
addr16
xchg
in
cmp
mov
daa
jbe
jmp
and
mov
add
add
add
add
pop
or
in
movsb
jge
pushf
mov
loope
loope
jne
jmp
les
adc
sub
lds
sub
mov
xchg
inc
ljmp
movsb
inc
and
inc
shlb
add
push
add
lret
sbb
cmc
and
add
xor
adc
add
pusha
jg
test
out
mov
sub
frstor
or
in
roll
xchg
xchg
aam
adc
cmp
add
push
cmp
lcall
decl
test
inc
and
inc
xor
push
or
cld
and
syscall
scas
cmp
aas
cli
pusha
out
addr16
roll
inc
mov
shrb
sub
popa
dec
add
sahf
in
mov
lea
adc
jp
add
jmp
xchg
sbbb
sbb
add
cmpsb
fiaddl
add
xchg
test
mov
mov
fsubl
mov
xchg
adc
ja
add
rcr
pop
outsb
jge
sub
test
sbb
push
out
add
ss
adc
jae
mov
cmp
xchg
cmp
xor
jae
and
jle
ljmp
lcall
mov
mov
loop
imul
sti
xlat
sbb
out
mov
shll
add
loope
sub
int
fstpl
stos
sti
lret
or
xchg
xor
shrl
test
stc
loop
mov
loop
pop
add
cmpsl
inc
in
mov
xlat
popa
repnz
stos
mov
repz
out
adc
cmp
mov
stos
mov
in
pushf
inc
call
ss
xchg
xor
cmp
sub
pushf
in
and
rorl
jb
add
jae
sub
cld
cld
xchg
dec
inc
jmp
imul
add
cmp
jb
int
jns
jecxz
pop
xor
and
test
xchg
mov
inc
outsl
jne
into
inc
xor
push
adc
inc
addl
dec
scas
aas
add
sub
or
sti
mov
sub
xor
add
add
int
mov
and
add
movsb
mov
push
xchg
nop
mov
add
push
or
cmp
ret
les
add
mov
stos
mov
sub
adc
inc
stos
add
inc
inc
jmp
in
cmp
xlat
in
cmpsl
addb
sub
out
dec
add
add
xchg
and
xchg
jne
or
push
inc
push
fdivr
sub
push
jl
sub
outsb
pop
sub
xchg
mov
mov
adc
jae
add
pop
clc
jbe
xchg
add
pop
out
sub
mov
frstor
xor
jae
and
outsl
adc
xchg
pop
daa
je
add
daa
incl
mov
jb
inc
jb
call
xchg
adc
lds
push
movsb
xor
test
xor
aas
daa
fdivr
outsl
popf
sub
cmp
sbb
mov
outsl
xor
movsl
in
test
outsb
repz
add
lcall
sub
mov
add
add
arpl
jo
mov
or
inc
lahf
insb
cld
insl
imul
and
mov
lds
sub
mov
inc
stc
movd
inc
inc
and
lea
inc
add
cmp
pop
int
movsl
pop
lds
and
sub
xchg
add
daa
shl
into
dec
data16
test
lods
mov
call
daa
xorl
xchg
push
call
push
imul
mov
nop
insb
adc
mov
xor
xchg
push
and
sti
cmp
add
sub
mov
jmp
daa
call
xor
fs
add
xor
and
hlt
xchg
adc
rolb
adc
aaa
ja
lea
and
cwtl
mov
inc
jge
sti
mov
jo
inc
daa
jnp
repz
pop
sti
ss
xchg
das
fstp
ss
test
stos
testl
push
jb
dec
movsl
adc
cmc
mov
out
pop
in
pop
and
add
add
add
add
sub
mov
movb
xor
test
mov
jge
pop
loopne
push
xor
jne
ret
add
jp
hlt
jecxz
ss
xchg
outsb
cwtl
xchg
jp
add
pop
pop
mul
adc
mov
mov
popf
dec
test
imul
sti
inc
movlps
out
add
inc
out
add
add
stc
fdivrl
inc
fistpl
test
push
out
mov
or
shll
pop
inc
and
dec
out
pop
out
push
push
stc
nop
mov
out
sub
es
cli
sbb
out
jg
inc
aam
imul
mov
add
lcall
add
add
add
loop
add
and
adc
sub
aaa
xchg
mov
punpckhbw
ret
push
mov
and
mov
lahf
call
cltd
mov
push
jmp
jb
rcll
jae
dec
cmpb
daa
ja
mov
push
js
call
jmp
insb
cld
bound
mov
icebp
adc
fildll
lea
push
push
push
sbb
and
std
jo
incl
sti
jmp
adc
xlat
and
imul
incl
jle
add
sti
je
jno
scas
lea
add
cmp
cmpsb
incl
xor
xchg
dec
sti
ljmp
inc
das
test
pop
pop
add
out
pop
xorl
push
rorb
std
mov
decb
add
xchg
arpl
add
adc
adc
incl
xor
mov
rcll
mov
aas
clc
pop
sub
clc
push
mov
jb
inc
sbb
std
or
or
fwait
out
pop
mov
add
pop
cld
rcrl
add
adcb
bound
das
push
cmpsl
inc
in
dec
dec
sub
mov
test
mov
test
push
cmpsb
pop
es
push
push
mov
push
rorl
addr16
out
ljmp
addr16
jp
jbe
jmp
add
add
add
addr16
rcrb
ret
push
les
rcrl
adcl
mov
xchg
add
add
pop
sub
mul
or
add
sub
add
pop
out
cmpsl
push
out
mov
addr16
sbb
idiv
or
pop
movsb
inc
clc
cmpsb
mov
cld
hlt
pop
adc
lods
cmpsb
jae
mov
dec
xchg
add
mov
jbe
cmpsb
jae
lahf
icebp
pop
je
jle
pop
scas
jle
cmpsl
cmpsb
arpl
call
scas
arpl
sbb
xor
xchg
mov
xchg
xchg
cld
fs
repnz
arpl
mov
out
negb
adc
sub
in
arpl
shll
into
shll
sti
push
mov
mov
pop
insl
ss
and
scas
sub
mov
inc
cld
and
push
add
and
call
std
cmovo
in
je
out
cld
inc
pop
jo
xor
in
or
mov
inc
xchg
sub
cmc
pop
mov
push
fidivrl
test
add
adc
je
xchg
mov
add
mov
add
out
subl
mov
lret
add
sub
xor
rcrb
mov
add
mov
fs
punpckhdq
inc
dec
data16
sbb
ja
xor
push
aad
in
mov
rcrb
std
push
sbb
inc
aad
into
rclb
clc
aas
jo
inc
push
jne
out
ja
add
loop
add
sub
and
xor
and
ss
test
f2xm1
mov
aas
sub
pop
xor
jmp
in
dec
imul
fwait
stos
add
pop
jb
push
or
lds
sbb
jnp
cmp
int3
ljmp
sbb
inc
cmp
ja
cmp
xor
ljmp
add
fwait
jp
sub
mov
test
arpl
push
jecxz
lcall
sub
add
arpl
mov
jbe
cmp
add
pop
mov
jmp
call
mov
cmp
cmp
inc
or
cmc
cmp
sbb
pop
add
xchg
sahf
and
sub
add
pop
dec
add
mov
adc
call
mov
popf
mov
add
sbb
xor
sub
add
push
jae
imul
imulb
xor
push
and
aaa
std
push
ds
outsl
jb
adc
or
and
mov
push
mov
mov
xchg
add
xchg
add
push
push
xchg
cltd
jno
or
fdivrp
mov
add
add
repz
aaa
sbb
add
push
add
rcrl
or
inc
sbb
in
fadds
rcrl
add
sbb
inc
dec
rcrl
inc
add
mov
xorb
sbb
push
cmp
cmp
sub
and
js
adc
test
push
jmp
dec
inc
out
cmc
mov
cmp
mov
xor
or
sbb
popa
jmp
rolb
out
cld
in
cmc
mov
imul
adc
xor
xor
test
add
add
add
add
pop
xchg
mov
shlb
vmread
or
lds
xlat
imul
adc
add
pop
iret
cld
fsubp
js
fldenv
xor
ret
sub
push
lods
xlat
out
sub
insl
pusha
mov
xorb
test
pop
xor
jp
adc
add
mov
out
push
pusha
sub
add
add
add
add
add
adc
cs
imul
push
leave
arpl
adc
jmp
mov
fstp
cltd
and
repz
add
push
adc
xchg
inc
pop
add
jnp
inc
fldlg2
lahf
jb
dec
fdivr
add
adc
and
mov
pop
iret
cld
hlt
xchg
or
pshufw
add
add
add
add
jle
cs
cmpsb
inc
lea
fdivr
imul
inc
adc
and
sub
out
inc
test
rol
and
out
aaa
test
add
inc
dec
inc
fisttps
push
xchg
test
mov
clc
imul
xchg
push
sbb
mov
jne
jo
jmp
xlat
cmp
add
add
add
mov
out
add
inc
cld
loop
sub
std
jae
scas
inc
or
bound
mov
fstpt
sub
jne
lods
inc
or
and
add
lods
mov
ret
push
mov
call
push
sub
dec
out
mov
add
add
popf
inc
call
mov
mov
xchg
stc
jne
add
arpl
add
jnp
mov
decb
sub
mov
in
cmp
sbb
inc
out
repz
mov
test
adc
jae
sbb
scas
sarb
cmc
aaa
cmp
scas
dec
jl
add
pop
in
or
negl
mov
shlb
cmp
nop
repnz
inc
stos
pusha
sahf
adc
sub
pop
xor
inc
sub
arpl
fistpl
xor
sub
xor
popa
pop
test
pop
sbb
inc
cmp
pop
popa
jne
loop
imul
out
mov
loope
sub
cmpsl
loope
clc
scas
inc
add
pop
xor
adc
out
mov
das
jbe
jg
add
push
bound
out
adcl
mov
dec
mov
adc
dec
mov
pop
roll
jmp
pop
mov
lahf
call
test
call
sub
icebp
sahf
pop
out
add
pop
cld
jmp
pusha
pop
cld
inc
scas
push
sbb
jo
fnstsw
pop
mov
pop
mov
jb
jb
sbb
ret
mov
pop
and
dec
addl
push
and
dec
jmp
lcall
imulb
xchg
stos
xor
xor
lahf
xchg
cmp
add
xchg
push
aaa
ret
test
lret
add
pop
push
sti
push
cmpsl
or
ficoml
lret
mov
sti
adc
and
jg
pop
stos
inc
in
sbb
sbb
adc
je
mov
mov
iret
jecxz
ret
inc
jb
lds
push
out
mov
lahf
insb
add
dec
imul
out
jecxz
jb
outsb
sub
cmpsl
push
cld
cmpxchg
jb
sub
pop
push
int
repz
mov
out
int
cmp
inc
cld
lcall
jge
inc
pop
and
jge
mov
orb
pop
outsl
enter
jl
rcr
mov
jo
imul
pop
popa
add
shrl
pop
fmull
push
push
roll
push
inc
outsl
sbb
pop
push
add
movsb
nop
out
xchg
imul
jle
shrl
pushf
stos
jg
pushf
and
mov
sub
mov
negb
pop
or
popa
pushf
test
je
xor
jmp
add
in
ljmp
sbb
or
add
mov
sbbb
inc
xchg
iret
pop
out
pop
pop
cld
in
pop
mov
bound
jae
inc
push
inc
cs
std
aam
inc
jbe
daa
pop
mov
adc
push
ss
pop
call
addr16
cs
push
cli
sahf
jecxz
mov
fsubr
sub
sub
add
es
add
or
mul
jle
pop
cld
gs
and
add
sbb
sbb
es
dec
pushf
jmp
iret
popf
mov
lea
pop
or
inc
stos
cmp
xor
roll
pop
xchg
movsl
inc
and
jb
mov
push
dec
dec
data16
push
and
dec
push
or
inc
jg
scas
mov
jl
bound
jne
dec
or
xchg
dec
push
stos
push
jb
inc
rcl
adcl
cli
shrb
add
jae
xchg
inc
rorb
sub
call
adc
xchg
je
mov
sarl
call
add
jle
add
roll
sub
movb
sbb
pop
call
scas
pop
or
inc
xchg
inc
rorb
insl
dec
adc
ljmp
xchg
inc
fimull
mov
add
out
mov
into
jp
rorl
adc
lret
xor
ret
add
std
mov
xor
xor
test
out
or
test
fstps
testw
lock
jp
daa
bound
xchg
addr16
sub
jp
daa
fs
and
inc
cld
push
jg
adc
stos
inc
mov
and
and
inc
cmpsl
lcall
cli
fsubs
push
jae
sbb
add
add
add
add
rolb
rcll
push
std
push
repnz
std
pop
add
imul
push
jb
add
mov
cmpsb
pop
in
loope
cmpsb
andl
subl
push
push
xchg
mov
icebp
xor
in
cmpsb
jmp
cmpsb
fiadds
mov
cs
mov
popf
sahf
bound
jnp
adc
sbb
pushl
mov
add
add
add
add
cmpsb
jl
cmpsb
adc
xchg
cs
inc
add
lcall
push
and
adc
fscale
incl
xor
sbb
xlat
xchg
mov
jo
cwtl
xchg
add
add
sub
cmpsb
pop
add
push
add
pop
or
stos
mov
mov
adc
xlat
sti
mov
and
ljmp
add
add
add
add
pop
push
jbe
leave
push
push
cld
push
sbb
das
fistpl
push
adc
pop
dec
ja
rolb
inc
push
scas
or
cs
add
int3
mov
out
push
add
mov
cmp
xchg
loope
leave
aas
xchg
je
clc
into
mov
sub
out
mov
add
cmp
sub
add
add
add
fsts
js
jmp
cmp
xor
lock
mov
xorb
adc
imul
roll
or
arpl
add
std
cs
lret
fimuls
sub
mov
add
push
popa
roll
fisubl
add
movsl
lret
xor
or
add
add
add
add
je
mov
pop
mov
sub
cmpsl
cmp
lcall
daa
jb
int
xchg
jne
fwait
cmpsb
out
inc
sub
mov
add
sbb
add
push
out
test
add
sub
push
es
inc
cmp
notl
adc
inc
data16
sub
mov
sar
ja
cmpsl
int3
add
verw
push
lahf
mul
es
enter
mov
sub
cld
fmul
and
sbb
shlb
aas
push
push
jb
ja
std
imul
cld
xchg
mov
test
movsl
test
call
mov
int3
add
add
add
ret
sbb
data16
add
hlt
rolb
je
adc
jne
sahf
cmp
mov
cmp
lock
ljmp
inc
inc
adc
lret
popa
cmpsb
jns
jle
hlt
call
cwtl
push
in
test
cmp
std
mov
out
shrl
cmpsb
mov
and
call
push
cli
decl
clc
cmp
mov
xchg
inc
adc
rol
mov
mov
hlt
test
push
loop
add
js
adcl
cmp
addr16
shlb
xchg
scas
lret
mov
lods
out
loop
int
inc
and
inc
jae
mov
and
add
cmp
and
add
cmpsl
xchg
jbe
jge
out
mov
out
mov
testb
mov
lds
and
jle
dec
pop
sub
push
jg
dec
jbe
test
sbb
inc
aam
add
and
jae
pop
fstpl
stc
cltd
or
hlt
cmc
cmp
lret
out
lret
add
add
es
pop
cmp
add
dec
mov
fidivs
lcall
in
dec
jno
jne
sbb
lds
cmpsb
clc
xchg
dec
incl
negl
jmp
push
mov
sbb
imul
lods
pusha
or
adc
add
xchg
sarb
jmp
add
cmc
jge
lahf
cmp
ja
pop
jae
cld
pop
gs
adc
and
shrb
cmp
cld
xor
xor
and
jb
inc
cltd
loope
pop
jmp
add
in
mov
and
leave
sub
inc
add
add
add
add
cmpb
push
push
cmpb
jne
adc
jmp
outsl
in
xor
sti
data16
pop
inc
dec
cld
push
fdivrs
call
push
fcomps
mov
mov
xchg
into
inc
jns
incl
push
mov
adc
cmp
jno
pop
xor
push
sbb
or
adc
roll
add
add
add
add
cwtl
clc
and
out
jbe
or
pop
or
sub
add
sub
and
popa
cli
incl
cli
out
mov
scas
orb
mov
pop
mov
gs
les
cmp
or
mov
add
test
js
dec
insb
cld
mov
adc
cli
shrl
xor
push
sub
pop
js
dec
es
aam
jle
or
sub
pop
pop
add
imul
add
daa
xchg
rolb
test
rcrl
mov
or
rorb
xor
ret
dec
pop
pop
outsb
pop
out
mov
pop
roll
loop
pop
ficoml
sub
rsm
lret
sub
dec
arpl
add
add
add
dec
xor
out
pop
mov
lret
in
outsb
inc
faddl
sub
dec
mov
xor
out
xor
sub
es
or
dec
cld
jmp
sbb
dec
cld
je
cld
push
subl
dec
cld
jmp
dec
dec
call
add
pop
test
jl
das
call
xchg
das
inc
jmp
gs
or
loopne
pop
lds
dec
sub
add
daa
xor
inc
cld
jmp
sub
jmp
inc
out
cld
add
or
inc
adc
andb
add
and
ret
testl
test
pop
pop
push
xor
inc
and
jb
jmp
sahf
rorb
and
xlat
decl
call
push
push
push
and
push
mov
jae
je
push
in
pop
mov
and
sub
and
xor
adc
das
xchg
sub
cld
xchg
sbb
std
fdivl
and
pop
sub
sub
add
inc
add
push
cmpb
add
xchg
mov
bound
add
scas
mov
add
jbe
insb
jmp
sub
dec
sub
cld
push
sbb
xor
xor
les
jp
vrcpss
push
xor
vrcpss
vrcpss
out
push
shl
add
jp
lds
or
sub
add
out
test
pop
iret
adc
pop
out
push
pop
lock
movsb
ret
inc
popf
jg
sti
cli
pop
mov
lea
aaa
pop
or
pop
adc
jecxz
add
in
jno
sbb
push
push
sub
mov
pop
add
add
leave
mov
add
aaa
fwait
outsl
add
cmp
inc
xchg
pop
iret
cltd
test
imul
push
scas
enter
inc
jb
cwtl
pop
in
xchg
mov
xchg
sub
std
cld
gs
jmp
jmp
pop
add
clc
cmp
push
inc
push
adc
xchg
fistpll
out
xchg
inc
cld
pop
stos
inc
cli
data16
add
add
add
add
aam
aam
sahf
push
icebp
popa
pop
dec
adc
adc
push
std
mov
inc
inc
or
add
cwtl
dec
in
add
dec
mov
inc
in
sub
add
dec
fmuls
or
stc
push
push
lds
mov
cld
incl
cld
imul
or
call
add
test
mov
jns
sbb
jno
ret
popa
add
in
xchg
sti
decl
insl
lcall
pushf
sub
negb
call
or
push
or
test
dec
outsb
paddw
in
or
jge
push
fs
incb
fiadds
insl
jecxz
mov
enter
out
imull
and
mov
pop
loopne
inc
sub
jo
hlt
add
mov
ja
push
mov
xor
into
imul
inc
add
cs
out
sub
jl
pop
cmp
out
sbb
cld
xchg
imul
addr16
stos
push
ljmp
mov
cld
jne
jl
jb
pop
xchg
gs
cmpb
out
sub
jmp
imul
add
add
inc
inc
lods
jbe
xchg
int
pop
out
mov
pop
out
add
xchg
movsb
pop
repnz
out
fs
cmpsl
lret
in
ljmp
lret
sbb
jle
loope
pop
push
ds
popa
sub
add
inc
out
daa
and
add
fstps
xchg
jmp
mov
dec
push
in
inc
pop
jns
daa
mov
ret
add
popf
js
dec
jno
test
add
pushf
xlat
dec
je
dec
mov
out
dec
inc
push
int
jb
ret
fmul
push
cmp
jl
inc
jb
stc
mov
xchg
adcl
stc
test
sbb
stos
mov
call
rolb
sub
pushl
es
inc
icebp
stos
orb
sub
cmp
add
pop
add
mov
jb
or
enter
or
xchg
inc
jo
arpl
imul
inc
pop
cld
push
xor
inc
push
or
pop
mov
sub
inc
inc
data16
xchg
inc
dec
lea
add
ret
add
notl
call
lds
sbb
xchg
cmp
mov
jnp
add
xor
push
cmp
pop
adc
adc
cmp
or
jecxz
shrl
lods
add
adc
add
push
int3
cld
pushl
fistpl
sub
int
xchg
push
cld
mov
or
sub
jns
push
dec
jge
mov
shl
add
rolb
add
push
sar
dec
or
call
scas
mov
xorl
add
add
sub
int3
and
pusha
stc
call
test
push
dec
jg
lds
mov
dec
insb
and
inc
sbb
dec
pusha
in
lahf
jecxz
sub
out
adc
pop
subl
jecxz
repz
fadd
mov
add
add
add
add
lret
popa
sub
jmp
pop
sbb
std
mov
addl
jmp
iret
cmp
ljmp
push
test
mov
jns
filds
pop
or
dec
movsl
mov
mov
dec
imul
out
ds
jb
and
cmc
pop
mov
dec
cmp
or
mov
idivl
cld
push
lods
loope
fldl
xchg
push
inc
or
out
jp
cld
fs
sub
insb
jb
sbb
leave
cmpsb
xlat
insb
in
mov
jb
add
insb
mov
arpl
fwait
loopne
add
call
inc
test
or
shrb
sub
es
ret
in
lcall
mov
addb
sbb
fidivl
adc
sti
push
add
shlb
sti
adc
es
test
sar
lahf
add
call
jo
pop
pop
push
and
push
enter
jg
push
push
and
or
or
sti
incl
nop
inc
hlt
add
repz
in
aam
inc
sub
inc
inc
jae
rolb
std
lock
mov
aam
ret
std
lods
add
mov
dec
shll
mov
enter
lret
pop
jae
lret
fidivl
cmpsl
test
cmpb
jmp
inc
jb
insb
mov
xor
icebp
xlat
das
out
in
inc
out
add
sbb
dec
xor
pop
sbb
mov
push
cwtl
ljmp
add
addr16
add
adc
sub
cmc
mov
adc
fnsave
jb
pop
popl
push
inc
ljmp
dec
mulb
cmp
insb
daa
pop
outsb
pusha
pop
push
dec
in
cmp
mov
imul
add
add
add
add
mov
jno
test
in
pop
adc
lahf
xor
and
mov
mov
in
sub
jo
mov
push
adcl
jbe
xchg
movsl
xor
aas
loop
sub
orl
mov
and
hlt
inc
sub
ja
jns
in
push
lret
inc
xor
mov
pop
jbe
add
add
jns
in
push
lret
inc
push
fidivs
cmpl
push
andl
mov
out
shll
roll
sbb
xchg
outsl
out
mov
in
pop
pop
adc
lahf
not
add
ds
cmp
call
popw
enter
sub
mov
test
fcoml
cmp
aas
fiadds
and
mov
test
jae
dec
sbb
data16
pop
ret
loopne
data16
cmpsl
bnd
movsb
or
inc
pop
cld
xor
lds
adc
pop
cld
cmp
pop
inc
rcr
cmp
dec
lock
mov
and
popf
call
push
mov
adc
add
add
add
add
movsl
or
xor
xor
jo
lret
push
cld
xchg
sub
or
jg
cmp
repz
call
mov
jge
sub
dec
daa
insb
jns
inc
sub
xchg
pop
xchg
mov
shr
inc
xchg
add
sub
aaa
cmp
inc
sub
push
stc
xchg
scas
xchg
add
mov
adc
inc
jg
push
sbb
or
push
mov
scas
mov
mov
cmpsb
mov
pop
sub
jno
subb
shl
mov
lahf
icebp
or
inc
into
cmc
mov
stos
sub
lds
inc
pop
cmpsb
ss
sti
test
daa
add
inc
cmp
jg
xchg
pop
loop
mov
xlat
call
loop
mov
pop
sub
clc
out
daa
mov
sbb
xor
hlt
mov
dec
rcrl
add
and
lahf
inc
dec
inc
jmp
sbbl
push
bound
dec
pop
add
xor
jo
sub
add
sbb
test
sub
mov
sahf
idivl
push
shll
sub
dec
frstor
pop
jmp
mov
sti
mov
shll
sub
out
lock
cmp
push
push
das
int3
inc
adc
adc
add
add
add
sub
call
or
cmp
jo
pop
daa
sub
add
shrb
pop
or
fs
pop
and
mov
mov
adc
pop
test
jne
push
add
fs
sti
jne
fdivs
aam
or
dec
sbb
lcall
inc
cld
push
mov
xchg
push
aaa
fnstsw
xor
sbb
add
add
add
inc
dec
in
iret
sub
repnz
sub
sub
push
jle
scas
push
xchg
inc
add
push
in
sbb
xor
jmp
addl
loope
add
mov
inc
adc
add
adc
inc
sbb
push
jl
sub
inc
push
xchg
jmp
mov
add
mov
into
inc
adc
insl
int3
jg
xor
inc
mov
mov
cmp
inc
sub
or
sbb
cmpsl
add
enter
sahf
adc
add
mov
pop
mull
mov
xor
in
and
add
dec
popa
push
and
es
or
push
add
leave
lods
add
fldpi
jmp
ftst
sub
loopne
inc
add
and
imul
call
or
hlt
test
inc
jmp
adc
or
fsubp
pop
js
rolb
push
in
out
xor
push
add
adc
or
stc
fdivrp
lds
out
cs
cld
pop
adc
scas
frstor
repnz
push
sub
push
xchg
scas
in
pop
cld
jmp
test
ss
sti
cmp
mov
repz
xor
repz
jae
mov
rep
scas
push
xchg
xorb
xchg
stos
jno
out
mov
sti
sbb
or
pusha
arpl
jae
test
imul
pop
sbb
sbb
inc
add
rcrl
pop
pop
mov
mov
mov
jo
inc
sbb
in
rcrl
xor
adc
add
sbb
fcomps
sbb
cmp
or
addr16
mov
iret
adc
push
call
xor
inc
ret
popf
rorb
rolb
rcrl
or
inc
cmc
jo
xor
or
push
dec
dec
pop
mov
inc
cmp
popf
sbb
pushl
xor
ljmp
xchg
out
add
add
add
test
xchg
inc
add
ror
push
jb
fmuls
sub
inc
mov
adc
mov
push
stos
mov
mov
mov
jmp
outsl
repnz
sub
sbb
pop
roll
sub
xchg
ret
jmp
sub
mov
xor
add
add
add
add
adc
insb
inc
sbbl
loop
lock
fisttpl
fistpl
jns
dec
mull
push
out
jmp
inc
fadds
xor
into
nop
add
mov
lods
lods
lods
jp
cmp
ret
add
lcall
into
cmp
add
and
inc
test
in
mov
in
mov
mov
rcrl
out
jne
jmp
cmc
mov
ss
push
push
mov
scas
mov
xchg
pop
add
xchg
loope
hlt
xchg
out
and
cld
shll
inc
mov
scas
movsb
mov
mov
sub
inc
jb
movsb
inc
mov
enter
mov
std
jl
cwtl
inc
inc
mov
push
add
add
add
add
out
pop
sub
inc
xchg
mov
add
pop
jb
into
mov
cld
mov
jne
call
dec
cs
fs
mov
push
mov
inc
add
jae
add
mov
sti
push
stos
imul
andl
mov
dec
jae
pushf
pop
test
imul
push
enter
arpl
cld
incl
jo
das
fneni(8087
shll
xchg
mov
fsub
push
movsb
sar
test
test
and
push
test
jo
jne
lods
inc
call
in
in
mov
jne
enter
sarl
test
test
ret
push
cmp
das
shrb
roll
xchg
incl
xor
cmp
insl
push
mov
add
add
add
out
test
fstpt
add
sbb
jnp
and
push
or
incb
add
sarl
imulb
push
or
int
add
mov
add
ss
mov
jnp
or
push
or
xchg
add
sub
jbe
aad
jnp
mov
ret
mov
dec
test
stos
push
popf
mov
sti
xchg
mov
push
test
cli
adc
imul
lea
gs
dec
aam
push
pop
lds
mov
pop
xchg
jle
sub
ss
mov
popf
jl
jno,pn
add
inc
mov
pop
pop
out
mov
sub
sub
sub
test
sbb
out
mov
jge
shrb
loope
movsl
push
add
sub
pop
or
sub
xchg
lcall
cmpsl
hlt
cld
cmpsb
cli
or
cltd
sub
push
pushl
xor
sub
es
ret
add
xchg
xchg
jmp
cmc
and
jmp
and
sub
fwait
mov
out
movsl
sub
insl
imul
je
add
dec
adc
fldl
imul
jmp
and
add
in
repz
sti
test
sbb
or
jno
arpl
fimull
mov
fdivs
fwait
mov
cld
js
pop
cmpb
into
xchg
hlt
std
int3
pop
sti
pushl
pop
add
mov
mov
add
jo
dec
sahf
inc
and
les
add
and
js
add
movl
inc
and
insb
push
push
jns
push
mov
sub
int
adc
push
xchg
cmpsl
ljmp
sub
mov
cmc
mov
fimull
cmp
incb
scas
adc
sub
add
push
xorb
gs
and
data16
push
sbb
push
sbb
loope
subl
push
fisttpll
mov
nop
cmp
scas
jno
sub
cld
pop
shrl
cs
jae
lods
les
adc
jns
push
pop
add
pshufw
leave
xor
leave
test
sub
jno
stos
cmp
add
arpl
mov
pop
cltd
into
adc
xchg
negb
or
sub
mov
mov
inc
lods
out
fiadds
sub
mov
add
sbb
inc
cmc
cltd
stos
mov
xor
inc
sub
mov
mov
mov
in
mov
adc
xchg
fldt
verw
add
cwtl
mull
push
orl
repz
std
sbb
pop
inc
jmp
jmp
leave
rep
add
test
adc
and
and
lds
fs
imul
sub
rcrl
ljmp
pop
andb
es
sub
adc
dec
lahf
fidivs
add
add
add
add
sbb
inc
jmp
add
push
add
sti
adc
dec
loop
sbb
das
test
add
cmp
shlb
jne
test
or
ret
mov
mov
js
test
iret
xchg
leave
xor
mov
add
test
sti
jne
ret
hlt
fnstcw
sbb
add
pop
or
xor
jle
hlt
flds
pop
cli
fcoml
add
sarb
pop
sahf
dec
and
fimull
push
stc
push
inc
sub
scas
push
xchg
sub
inc
sub
adc
push
cs
or
add
sub
add
push
ja
xor
cmp
fs
stc
test
aaa
add
test
sub
add
aas
mov
inc
dec
mov
add
mov
and
xchg
mov
jg
sub
add
cs
xchg
pop
jns
push
mov
inc
and
push
dec
jb
pop
je
dec
jmp
sarb
iret
adc
mov
add
pop
mov
mov
into
mov
and
jge
mov
fwait
pop
add
pop
addr16
clc
test
mov
shlb
ljmp
inc
out
sbb
dec
ss
jbe
ja
imul
cli
ret
mov
das
dec
dec
xchg
stos
pop
adc
or
adc
xchg
ljmp
decl
xchg
fisubs
leave
add
and
jmp
jb
out
and
jb
out
push
sarl
or
cld
cmp
fisubrs
sub
repnz
sbb
dec
notl
sbb
std
mov
fisubs
loope
pusha
jae
sahf
and
sub
aad
loop
mov
sub
mov
jns
cld
add
and
inc
outsb
cld
call
xlat
adc
negb
test
push
mov
and
bound
sti
push
or
ja
xor
ja
xor
sub
jne
int3
jno
leave
fcomp
sti
pushl
pop
call
in
dec
and
fistl
jo
sub
stos
or
flds
inc
sub
inc
sbb
popa
sbb
add
add
add
arpl
fisttpl
orl
je
inc
cld
cmovae
add
push
loope
std
xor
hlt
or
imul
lahf
add
mov
push
pop
or
pop
adc
ret
jnp
sub
incb
ds
add
sub
out
iret
imul
sar
repnz
adc
dec
add
adc
mov
and
ss
sbb
push
stc
cld
jge
inc
cld
sub
imul
or
mov
push
lock
cmpsl
add
fwait
jp
pushf
dec
repz
stos
lods
mov
arpl
and
std
add
out
movsl
fsub
xor
mov
out
stos
and
int
sahf
lods
fcmovnbe
stos
out
cmp
lods
mov
aad
mov
loop
inc
scas
xor
jbe
pop
sbb
fwait
andb
pop
and
jle
push
push
insb
inc
clc
pop
mov
call
pop
iret
andb
mov
or
pop
orb
call
xchg
mov
fstpl
push
pop
aad
push
xchg
xor
jbe
inc
popa
cld
loopne
pop
add
add
mov
cmp
push
push
pop
jecxz
jge
lds
lea
push
outsl
push
mov
pop
sbb
pusha
xlat
cmp
sahf
test
cld
xchg
jbe
jae
repnz
outsl
push
fcmovbe
pop
mov
in
add
adc
mov
int3
sbbl
je
pop
add
mov
rcr
bound
jp
daa
mov
xor
cmp
std
lcall
or
lea
cld
ljmp
jg
in
cld
adcl
cmovle
std
jmp
push
push
aam
dec
call
add
movsl
or
ds
mov
inc
dec
shll
test
sbb
push
fnstsw
out
aas
das
mov
jae
mov
and
out
inc
aas
cld
scas
inc
je
mov
sbb
cld
mov
jecxz
mov
aam
cmp
cld
mov
xchg
pop
mov
push
outsb
out
pushl
inc
add
push
and
add
sahf
add
add
pop
cmpsw
dec
das
jmp
dec
sub
std
mov
fstpl
test
nop
roll
insl
mov
mov
hlt
insl
pop
adc
adc
inc
adc
sub
jns
flds
out
ret
in
test
out
cmpsb
movsl
out
mov
jne
cmp
dec
test
ljmp
sub
jecxz
and
faddl
pop
xchg
fnstenv
inc
jmp
or
scas
pop
sbb
ljmp
leave
addl
mov
sub
cmpb
sbb
add
icebp
data16
add
call
push
ret
cltd
push
or
pusha
lahf
push
stos
shrb
push
xor
test
sub
push
xchg
and
and
sbb
and
push
aas
push
insl
icebp
into
push
mov
lock
int3
inc
or
sub
sub
push
xchg
lcall
add
add
add
add
std
je
ss
mov
rol
sbb
daa
rclb
sti
mov
lcall
inc
add
inc
push
add
rcl
sbb
orb
sub
jecxz
mov
daa
and
jecxz
outsl
and
cmpsb
jg
push
and
add
loopne
fwait
lods
call
add
add
add
add
pushl
fnstcw
ret
mov
sar
pop
in
inc
sub
mov
pop
cs
mov
jecxz
mov
testl
mov
cmp
push
adc
pop
call
popa
inc
mov
out
or
out
out
lret
ljmp
in
mov
or
mov
add
add
add
add
enter
adc
outsb
pop
repz
sbb
pop
sbb
nop
imul
ds
add
mov
jb
das
test
add
mov
xor
ds
hlt
pmaxub
add
pop
dec
ds
sbb
or
xor
mov
mov
loope
add
sbb
roll
sbb
jp
call
sbb
add
sub
das
xlat
mov
adc
push
jne
fnsave
mov
cmp
sbb
inc
sub
mov
mov
sbb
mov
adc
je
jbe
pop
loopne
jo
ljmp
fsubl
je
add
sub
jmp
cld
cmpsl
in
push
push
orb
call
outsb
xchg
jne
aaa
mov
insb
loop
or
mov
jne
jmp
add
cmp
inc
ret
lahf
mov
or
and
add
paddw
repnz
mov
push
adc
jo
jae
sbb
mov
add
add
add
into
pop
sbb
into
pop
sbb
cmovo
outsl
and
test
aas
and
xacquire
dec
push
int3
add
cli
dec
push
clc
je
pop
iret
std
add
add
adc
mov
repnz
jne
push
push
push
sub
sar
andl
push
mov
mov
sub
sub
add
add
add
or
imul
inc
and
jb
push
adc
aam
sbb
add
outsb
repz
inc
adc
pushl
sub
insl
xor
push
push
iret
add
pop
fisubrs
ss
jecxz
je
and
sub
aaa
jae
adc
jb
adc
incl
xchg
and
mov
in
scas
pop
lods
filds
adc
daa
dec
int
push
cmp
mov
insb
rorb
incb
mov
fnstsw
cmp
loop
sbb
or
sub
cvtpi2ps
stc
cmp
sarl
or
pop
test
add
fwait
test
pusha
jmp
adc
push
adc
xchg
inc
xlat
inc
cmp
insb
dec
adc
xor
inc
jb
add
sub
cmp
sub
rcl
daa
je
fisubs
jg
dec
inc
aad
sub
add
sti
pop
push
adc
add
arpl
pop
jne
adc
fldcw
jo
mov
sub
xchg
fwait
rcrb
add
add
push
mov
push
fst
in
je
movsb
pop
sbb
mov
jbe
xchg
mov
push
sbb
dec
arpl
or
and
jne
lock
jne
pop
push
inc
neg
sti
pop
scas
pop
or
cmpsb
mov
cld
incl
outsl
sbb
rorl
xchg
es
roll
ret
sti
out
push
cld
call
push
cld
jne
test
cld
and
cs
or
movsb
out
repnz
cld
incl
pop
outsl
inc
xor
push
lods
and
adc
sbb
in
mov
rcrl
pop
imul
test
mov
test
or
addr16
cld
pop
pop
adc
pop
in
jg
push
sub
push
or
test
mov
mov
pop
call
mov
clc
adc
sub
push
or
test
or
call
test
enter
rorl
sub
or
cmp
jl
ja
in
cmp
pop
loope
ljmp
scas
push
ss
mov
pop
jmp
add
add
add
add
pop
roll
fwait
sub
push
push
adc
cs
mov
clc
add
ret
mov
pop
ss
clc
repnz
movsl
adc
andl
jecxz
pop
jmp
dec
ljmp
es
jo
rorl
scas
add
dec
test
shlb
lea
add
sub
adc
in
inc
jmp
lds
push
inc
cmp
jmp
imul
push
xchg
sub
mov
adc
nop
shrb
pop
lea
push
cld
out
add
jae
mull
std
push
dec
rol
mov
mov
mov
mov
mov
push
scas
and
cmpsb
ret
cmp
sub
mov
clc
lret
sbb
test
mov
add
fcomi
testl
and
sti
mov
mov
fcompl
cmpsb
js
clc
dec
outsb
xor
testl
daa
cmpsb
jle
es
cld
push
cltd
and
incl
xchg
movsl
ds
repz
ficoml
addr16
adcl
mov
mov
sti
jmp
mov
lcall
cwtl
out
sub
push
mov
div
fcomp
sub
mov
clc
call
lock
in
imul
xchg
daa
mov
addr16
stos
pop
inc
cmp
add
cmp
mov
shlb
jle
inc
ljmp
test
addb
mov
sbb
mov
nop
insb
ljmp
add
cmp
outsl
jge
jg
scas
pop
das
cld
insl
push
cmp
pop
xor
inc
fsubs
cmp
xor
call
ret
xor
js
popf
add
je
mov
or
jmp
subb
pop
mov
in
clts
sbb
insl
inc
pop
sbb
in
mov
push
sub
pop
push
cmp
cmp
sbb
xor
cmpsl
test
test
jmp
idivb
or
scas
adc
push
sub
or
loope
stc
pop
add
movsb
inc
cmp
jmp
fdivrl
jmp
jmp
pop
add
sub
push
and
pop
add
subb
sbb
or
or
sub
xchg
pushf
aam
out
sub
call
insl
imul
xchg
loop
mov
xor
mov
jg
or
jns
call
call
and
je
pop
dec
call
and
loope
ljmp
cld
mov
mov
cmp
sti
mov
adc
and
rcrb
je
sbb
lods
add
data16
inc
rclb
in
pop
adc
ret
fistpl
fs
call
push
push
call
push
adc
lods
addps
shrb
xor
push
inc
sub
clc
jl
hlt
mov
imul
xor
adc
xorb
cmp
xor
hlt
dec
inc
sub
add
push
mov
sub
call
leave
jl
and
add
add
add
add
jo
daa
sub
cmpl
idivl
jmp
add
clc
add
push
mov
push
fcomps
mov
jmp
jmp
mov
xchg
das
mov
jmp
push
ljmp
sbb
ljmp
loopne
sbb
clc
xchg
das
movsb
fdivrp
mov
add
add
add
imul
add
divl
mov
adc
push
ljmp
mov
cmp
sbb
and
pop
repz
add
outsl
dec
or
or
addb
add
push
add
out
and
jb
push
call
bound
jno
sbb
jge
add
or
lea
pop
add
sub
jne
test
jl
sub
adc
movaps
pushf
shl
jbe
rcrl
xchg
inc
add
add
outsl
or
sub
add
inc
fisttpl
test
lret
call
rcrl
add
sbb
push
add
adcw
or
add
leave
in
addl
mov
and
jmp
imul
push
mov
mov
inc
and
cmp
add
ds
mov
or
mov
mov
clc
mov
add
decl
pop
loop
add
add
adc
add
xorb
pop
add
cs
adc
jae
jae
addl
sub
testb
adc
adc
jno
andb
pop
insl
out
sub
and
push
adc
sbb
mov
inc
fstpt
idivl
push
dec
cmpsb
sub
cmp
test
push
call
add
add
add
xchg
not
out
sub
jecxz
cld
pop
int3
push
inc
sub
js
and
call
or
pop
jmp
mov
sub
adc
aad
push
fcomps
jmp
cltd
sub
push
mov
insl
sub
std
cmp
imul
shlb
mov
adc
clc
adc
mov
jl
cmp
jl
loope
add
cmp
test
cwtl
mov
bound
ljmp
cmp
rcrl
mov
testl
pop
sarl
add
out
sub
sub
xchg
add
negl
inc
sbb
add
cmp
mov
stc
aam
pop
int
add
bound
sbb
jmp
add
add
add
pop
push
inc
outsl
sti
mov
xchg
or
gs
and
dec
sub
inc
adc
cld
adc
add
and
sti
mov
or
incb
jne
and
mov
add
jecxz
mov
sub
add
bound
popf
out
nop
test
call
sbb
mov
iret
push
addl
add
add
add
add
movsb
jne
test
and
add
call
iret
dec
sti
call
les
fcompl
sub
fidivrs
jle
sub
xor
adc
mov
incl
xchg
dec
xor
out
xorb
je
jmp
je
push
in
push
xor
aas
and
or
incl
std
and
decl
mov
imul
jl
jae
cmp
and
and
daa
sub
inc
push
add
lds
jl
dec
lock
sub
hlt
fwait
cmp
stos
and
sub
mov
cld
stc
sti
pop
mov
push
add
out
rorl
andl
stos
and
mov
add
add
add
add
jb
push
in
pop
stos
and
pop
repnz
int
cmc
sub
std
sbb
add
or
sub
xchg
sub
jg
pop
push
jo
mov
outsl
das
pop
jmp
shrb
jo
xchg
xchg
xchg
das
movsb
arpl
leave
jns
cmpsb
mov
adc
jge
ljmp
stos
push
out
test
jmp
clc
mov
pop
jmp
mov
mov
pop
data16
adc
pop
cbtw
inc
xor
xchg
insl
lock
popa
fldl
lods
lds
add
add
je
popa
negl
or
pop
add
xor
insb
push
add
in
cld
andl
ret
lock
push
xor
loope
dec
sbb
push
rorb
sbb
add
push
jbe
insb
push
push
bound
xchg
sub
mov
xlat
cmp
xor
adc
std
incl
std
mov
cmp
rcrb
add
subb
dec
iret
out
jp
sti
lcall
mov
cmpsb
pop
cli
lds
test
hlt
sbb
rorb
iret
jecxz
push
xor
inc
sbb
out
mov
subl
mov
pmullw
add
push
xchg
or
out
push
or
sub
add
sub
lret
sub
xor
lahf
mov
stos
jmp
pushf
in
jb
rorb
mov
int
std
sti
or
push
add
xor
mov
sub
call
xor
daa
or
insl
ljmp
jecxz
jmp
pop
add
cmpsl
rorl
pop
in
addl
add
pop
mov
fldt
leave
iret
cld
aaa
fmuls
or
dec
pop
sub
stos
loop
jp
les
test
pop
or
movsb
test
add
push
push
sub
jmp
hlt
std
jmp
sbb
fsubp
jle
and
add
jnp
icebp
inc
adc
scas
jno
sbb
jmp
jle
sub
jmp
les
sub
mov
mov
dec
ret
adc
add
xchg
imul
push
cmp
lahf
or
inc
popa
jbe
add
cs
jno
add
jmp
mov
cld
sti
jmp
sub
xor
cli
inc
mov
clc
push
std
jl
movsb
out
call
jb
hlt
out
add
test
xchg
and
call
jns
add
fisubrs
pop
or
out
repnz
mov
repz
mov
add
cmp
stos
ds
out
push
das
decl
add
lods
lds
push
and
add
cld
dec
fwait
xchg
fimull
pop
jns
add
aad
inc
add
sbb
inc
pushf
pop
mov
lods
inc
jl
mov
iret
decl
jle
lcall
not
pop
add
fwait
mov
sub
cmp
andl
or
jecxz
add
mov
jae
in
xchg
cmpsl
push
mov
inc
jbe
mov
fbld
mov
cld
test
dec
cmp
add
add
add
lods
aad
and
nop
test
mov
inc
push
fimull
cld
ja
sub
repnz
and
repnz
lret
ret
mov
push
mov
mov
pop
out
add
xchg
xchg
jg
insb
lret
push
incb
test
stos
mov
xor
insl
roll
shl
stc
lret
dec
cmp
and
xor
dec
xor
and
dec
mov
cmp
lcall
sub
sahf
test
stos
or
mov
push
adc
sbb
mov
cmc
mov
mov
jmp
cmp
std
or
add
cwtl
in
add
cmpsb
sbb
shlb
mov
sbb
stc
insl
inc
add
inc
xchg
aam
push
add
and
cmpsb
inc
in
jns
jmp
dec
and
sbb
stc
test
lods
cmovo
scas
pop
and
add
jmp
inc
insb
mov
inc
sub
add
add
cmp
jmp
push
fs
inc
cmp
fldt
mov
mov
in
sub
shlb
or
loop
and
sub
add
push
decl
add
stos
addr16
movsl
inc
add
clc
test
ud0
call
sbb
lea
sub
and
sti
dec
pop
outsb
fs
xchg
pop
push
inc
xchg
adc
fwait
sbb
add
stos
adc
add
lods
cld
adc
mov
js
decl
das
add
rolb
adc
jle
lcall
test
nop
sbb
call
adc
das
push
jle
xchg
clc
xchg
dec
ret
and
clc
add
insl
inc
mov
aas
sub
lret
or
cld
aaa
insb
inc
call
and
and
ret
or
cld
mov
cs
rcrb
add
data16
cmp
xchg
or
push
mov
pusha
into
lret
mov
mov
push
and
cld
pop
jl
aas
sub
into
or
faddl
push
dec
mov
sub
test
int
fidivl
add
clc
loop
test
dec
aas
add
pop
cmp
pop
test
test
pop
or
call
dec
cmp
sbb
sub
xor
adc
add
pop
in
mov
xchg
sbb
add
ret
in
sub
in
inc
sbb
or
mov
add
push
sti
aam
cmovo
add
pop
ret
pop
sub
sub
les
adc
add
jp
and
lods
sub
or
daa
pop
or
out
pop
push
sub
bound
outsl
pop
bound
jo
cmpsb
lahf
dec
push
sahf
cmp
sub
mov
bnd
add
scas
push
sub
test
inc
lahf
dec
pop
add
das
rolb
add
xchg
add
enter
dec
fldenv
and
mov
sbb
or
sbb
add
and
mov
and
add
lahf
fmuls
pop
pushf
sti
call
push
or
xor
add
mov
sub
pop
adc
adc
adc
sbbb
cmp
pop
les
or
loope
jp
sub
mov
lock
mov
fcmovbe
pop
or
mov
cltd
pop
cmpsw
pop
mov
stos
addr16
or
push
add
sub
ficoml
cwtl
icebp
subb
cmp
or
mov
scas
mov
add
add
xor
sbb
add
add
add
loope
xor
inc
mov
int
dec
inc
lods
sarb
xor
jmp
add
daa
sbb
jmp
adc
mov
jnp
sbb
test
sbb
dec
mov
pop
daa
dec
out
jne
test
fucomp
imul
mov
outsb
dec
movsb
fs
mov
dec
pop
scas
add
and
mov
gs
stc
adc
mov
insb
or
mov
pop
jmp
adc
sub
dec
insb
popf
sub
ljmp
sbb
sbb
repnz
mov
pop
jmp
movb
add
shl
mov
sub
cmc
sti
sbb
mov
in
add
test
roll
dec
call
mov
add
xor
andb
bnd
sahf
js
xchg
imul
cltd
jne
scas
xor
pop
mov
inc
in
sub
push
fwait
sbb
cmp
cld
cmpsb
inc
fldcw
fmull
lds
cmp
or
sti
jmp
add
add
adc
dec
or
pop
outsl
and
fisttps
push
add
sub
adcl
push
xor
fcmovnb
mov
or
shrb
bound
sbbl
mov
out
mov
sbbl
push
cld
fcomp
aaa
mov
and
rorl
jo
incl
push
add
fisttps
mov
xor
cmp
jnp
pop
mov
outsb
rcr
repnz
ss
emms
out
xchg
outsl
out
lds
add
in
stc
jle
es
xor
stc
inc
mov
lds
incl
out
daa
jle
pop
add
and
xchg
jnp
jae
xchg
adc
add
aad
jmp
rcll
mov
loope
subl
push
mov
or
sub
push
stc
ret
and
pop
sbb
test
sub
jp
dec
or
notb
hlt
sub
and
add
and
scas
mov
cwtl
mov
pop
in
push
sub
insb
inc
sbb
add
pop
adc
sbb
fld
jge
sub
sub
call
and
inc
mov
loope
sbb
fsubs
sbb
mov
fcoms
push
dec
mov
sti
jb
mov
rolb
aas
xchg
lret
outsl
adc
fsubs
mov
mov
pop
test
sbb
in
ret
sub
es
dec
mov
jae
push
test
pop
push
ss
push
and
jmp
add
cld
cli
out
mov
filds
mov
idivb
inc
dec
push
add
adc
push
insb
jbe
bound
into
pop
or
lea
lea
inc
notl
push
sub
push
call
rcl
inc
adc
ja
xlat
and
pop
and
xchg
push
push
add
call
inc
arpl
insb
xchg
and
adc
ret
insl
roll
xchg
mov
scas
sub
add
xchg
roll
pop
lahf
and
and
add
push
xchg
add
ret
and
add
sub
dec
incl
mov
pop
scas
cmc
aas
sub
in
lahf
and
jb
xor
cwtl
or
into
xor
mov
adc
sub
jnp
stos
push
cmp
sub
mov
pop
push
jnp
and
sub
stos
xlat
cld
aaa
and
jb
xor
out
pop
ljmp
stc
adc
sub
js
incl
sub
cmc
sbb
idiv
addl
add
mov
insl
inc
cmp
push
jmp
xchg
pop
jmp
testl
pop
jmp
cli
cmc
ljmp
scas
mov
add
push
mov
adc
mov
loope
add
sub
sbb
imul
add
xor
xchg
dec
adc
or
inc
in
push
sub
sub
add
sub
adc
insb
jmp
idiv
cmp
add
cmp
hlt
add
fsts
in
cmpsb
pushf
popf
xor
cmp
push
xchg
repnz
sti
scas
add
add
sub
adc
insb
imul
jmp
int
das
inc
mov
adc
sbb
pop
push
pop
sub
push
loopne
jmp
jns
add
xchg
mov
cld
and
shlb
repnz
ds
inc
push
mov
jne
push
fs
out
push
std
jne
sbb
cmp
fdivr
mov
xchg
cld
jns
xchg
fdivrs
xchg
cmc
je
pushf
cmp
jge
sbb
inc
adc
mov
adc
insl
push
je
nop
sbb
je
mov
adc
push
arpl
sbb
jecxz
clc
pop
cld
jmp
hlt
sarl
test
cmc
add
add
sub
ljmp
pop
push
jl
addb
andb
push
sub
aad
push
sub
mov
mov
add
or
dec
push
aam
sub
mov
jbe
repz
add
xchg
cld
in
aas
jb
test
add
ljmp
jmp
sub
mov
ss
out
mov
push
jns,pt
pop
je
movl
outsb
pop
stos
cli
loope
lock
movsl
lods
jno
jp
cli
pop
cli
ret
and
movsb
popa
shll
sbb
call
push
shll
xchg
and
pop
out
cld
or
fwait
test
push
jns
loop
out
dec
push
add
inc
rorl
fwait
sub
shlb
testb
in
add
add
cli
add
sub
dec
mov
sub
lea
sti
push
mov
jne
adc
aad
out
adc
jecxz
fbld
lods
jl
data16
addr16
inc
jmp
es
jb
std
enter
test
add
outsl
imul
jmp
jae
orb
in
jl
xchg
in
push
sub
roll
jmp
pop
adc
call
xchg
or
push
cld
jne
iret
mov
add
push
popf
dec
push
sbb
push
fs
adc
sub
loope
mov
add
cmp
out
imul
fucomi
xchg
mov
add
adc
xchg
stos
push
push
pop
cmp
inc
sbb
push
xor
inc
or
pop
outsl
lods
sbb
xchg
stos
arpl
jmp
adc
xor
fidivrs
sub
aas
sub
adc
cmp
inc
cmpsb
xchg
out
ljmp
add
add
add
fidivs
test
adc
mov
lds
lds
push
cmp
cmc
lret
jp
cld
and
sti
xlat
adc
push
ds
add
push
adc
jmp
adc
in
jnp
sub
decl
sub
iret
sti
pop
xchg
fildll
add
add
add
add
js
or
jmp
movb
adc
xor
jl
cs
test
test
lock
dec
mov
ljmp
or
ljmp
sub
test
lds
dec
shr
jno
sub
adc
add
xchg
and
xchg
xchg
add
mov
xor
add
mov
daa
sahf
mov
stos
filds
in
cwtl
cltd
aas
mov
cwtl
in
and
icebp
sub
inc
push
sub
je
repz
inc
xor
idivl
sub
data16
mov
aam
sub
cltd
std
and
lea
in
incb
popa
divb
xchg
sbbb
pop
add
push
xchg
xor
push
je
lods
adc
lea
push
call
adc
xchg
inc
gs
or
mov
loope
add
jg
mov
sub
inc
icebp
sti
adc
sbb
add
pusha
or
mov
cld
decl
sti
mov
hlt
je
scas
cld
adc
cli
lcall
lahf
int
add
jle
or
sbbb
cmp
push
fs
dec
add
std
adc
mov
sbb
ret
sbb
out
adc
sbb
pop
jecxz
add
pop
insl
jmp
push
mov
ja
or
cld
fldcw
or
testb
jge
mov
add
add
add
test
xchg
adc
mov
decb
sub
sbb
jae
xchg
adc
mov
mov
pop
jbe
and
testb
sub
repz
cld
aam
add
fistpll
pop
sub
cwtl
cmp
inc
jns
cmp
ficoml
jmp
mov
or
jge
push
jmp
add
xor
sahf
call
dec
jne
mov
or
add
jne
cltd
jne
testl
sub
aam
cmp
test
call
arpl
cmp
mov
push
jmp
popf
pop
add
add
push
cmpsl
inc
sub
cmc
jl
int
push
push
lds
cmp
je
dec
gs
addb
sub
cmp
add
data16
jno
movsl
inc
fildl
test
fdivrp
jmp
or
sti
jmp
adc
xchg
out
sbb
adc
xchg
dec
es
add
xchg
dec
es
add
add
add
add
add
adc
shrb
test
popa
push
insb
add
and
inc
and
sbb
test
pop
je
nop
sbb
test
outsl
add
shrb
push
sbb
ret
dec
mov
ss
add
and
mov
or
xchg
cld
adc
push
bound
push
xchg
pop
add
mov
lea
pop
push
incl
jbe
adc
pop
mov
and
xchg
outsb
inc
mov
aad
push
pop
movsb
adc
push
dec
dec
lea
or
or
cmp
je
fs
ss
call
cmpsb
xchg
test
movb
xor
add
jmp
push
pop
xchg
sub
mov
or
incb
mov
xchg
sub
sti
sub
daa
sti
sbb
test
mov
xchg
pop
mov
mov
mov
fsts
dec
ds
inc
push
pop
roll
xor
shlb
and
add
add
xor
ret
jle
cmp
cmp
xchg
add
loopne
xor
int
dec
cmp
cmp
sub
jmp
add
outsb
iret
movsl
fcoms
push
adc
mov
fs
push
sub
inc
sub
test
les
jmp
mov
popf
daa
push
fcoml
inc
xlat
push
jmp
sub
pop
in
scas
popa
or
cmp
dec
aas
rcrl
int3
add
mov
or
and
jmp
mov
add
sub
jne
sub
adc
imul
or
and
jmp
sub
aam
sub
div
mov
and
push
and
imulb
aam
xor
movsl
fistpll
jecxz
push
es
es
hlt
jns
inc
jmp
out
adc
outsl
jl,pn
loop
rolb
pop
mov
push
push
add
mov
ja
jne
pop
adc
pop
add
add
clc
add
push
dec
push
sbb
adc
add
aaa
pop
adc
int
adc
add
push
xor
jne
push
adc
rcrb
sub
loope
add
and
test
test
bound
arpl
push
mov
pop
add
xor
enter
rorb
shlb
inc
repnz
mov
and
enter
je
sti
xchg
sub
sti
sahf
and
push
pop
mov
or
push
add
test
pop
add
xor
das
ljmp
and
ss
add
ret
dec
push
or
sub
cli
pop
mov
aas
add
pop
in
adc
pop
pop
lds
sbb
cmpsb
lods
daa
adc
add
push
sbb
stos
movsl
daa
push
cmpsb
popf
daa
push
cmpsb
popf
daa
cli
in
mov
pop
into
rdtsc
adc
gs
lret
xor
add
adc
dec
pop
mov
add
sub
ret
pop
movsb
test
es
out
inc
shr
or
pop
jmp
inc
xor
jmp
push
stos
movsb
lahf
pop
inc
fs
pop
push
inc
mov
pop
jmp
dec
scas
xlat
add
rcll
adc
jne
fs
or
loop
sti
fdivl
cwtl
or
aas
and
sbb
call
imul
sub
test
xchg
add
push
std
xlat
aad
pop
push
cli
roll
in
pop
sahf
jne
jne
call
gs
sbb
sbb
shrb
es
adc
das
xchg
fidivl
rorl
sbb
jno
add
sub
adc
popf
jne
adc
adc
and
enter
jb
xchg
inc
and
shr
cmp
mov
divl
cmpsl
dec
adc
dec
or
insb
idiv
call
shlb
xor
sub
adc
sbb
shll
push
js
out
add
imul
sbb
je
js
adc
and
add
mov
jnp
sti
pop
shl
xchg
pop
cld
out
adc
rsqrtps
pop
sti
pop
push
adc
xchg
pop
mov
dec
sub
incl
hlt
push
jb
mov
enter
jae
aaa
testl
sti
xchg
mov
fnsave
add
clc
sti
add
ljmp
and
add
add
add
add
push
add
jg
adc
jg
call
aas
sub
push
xchg
imulb
ret
or
pop
les
aaa
push
xor
das
inc
jno
test
sbb
shrl
sti
lea
and
aam
psubb
pushf
pop
popa
dec
loope
aas
and
inc
sub
lds
pop
pushf
mov
in
fs
jmp
adc
inc
outsl
add
pop
jmp
ds
lahf
cltd
inc
sub
cli
ja
pop
dec
adc
sbb
add
cli
loope
idiv
push
aaa
mov
insl
xorb
hlt
or
sub
push
sub
xchg
adc
pop
pushf
in
push
sub
into
stos
sub
push
bound
and
sti
or
sub
xor
pushf
sbb
jne
mov
adc
fisubl
call
add
add
add
pop
xlat
sti
adc
fdivs
inc
dec
adc
and
jns
stos
ds
push
bound
into
add
in
jnp
jne
xchg
add
int3
xor
add
dec
sbb
cmp
shrb
cs
adc
cmp
jne
fcmovnb
fsub
adc
adc
mov
notl
aad
mov
in
add
add
rcrb
add
or
je
ret
xchg
or
push
test
mov
ljmp
outsl
mov
or
mov
idiv
sub
jne
fdivs
pop
fdivs
hlt
inc
or
push
ss
ret
push
mov
iret
add
add
movsb
jne
aas
out
sub
sbb
xchg
jg
add
push
mov
lock
jne
jo
mull
repnz
sti
pop
int3
push
sti
pop
int3
clc
jne
adc
sbb
mov
pop
xlat
add
or
mov
add
aas
add
xchg
mov
ljmp
sub
aas
add
mov
sbb
das
add
mov
pop
shr
das
daa
mov
sub
cmp
ret
add
fwait
test
jo
movsb
and
ret
mull
inc
add
bound
push
orb
xlat
scas
pop
adc
xchg
notb
sti
inc
sub
ret
mov
sub
icebp
roll
dec
loope
add
push
ret
sahf
cli
arpl
xchg
pop
cmp
adc
insb
ret
jle
dec
sub
mov
call
jo
repz
outsb
out
addr16
loope
pop
add
notl
in
push
push
repnz
loope
jmp
xor
inc
inc
sbb
jmp
stos
int3
je
test
cwtl
inc
loope
adc
rclb
popa
sarb
cmp
inc
and
sbb
adc
cs
bound
dec
in
sbb
and
add
cwtl
jne
aaa
adc
loop
and
test
dec
push
cmp
jne
dec
or
idiv
inc
jecxz
adc
push
repz
call
add
add
add
idiv
sbb
fmuls
sbbb
das
inc
add
xadd
jb
inc
pop
cltd
ds
or
lea
mov
add
and
add
pop
mov
sbb
or
sub
push
mov
mov
or
jle
dec
call
mov
push
mov
add
add
add
mov
std
sti
push
clc
add
mov
mov
or
movsb
inc
mov
add
jne
sub
or
gs
cli
pop
sub
inc
sub
cmp
add
mov
inc
ss
sub
mov
lods
dec
adc
mov
push
mov
aad
push
add
pop
add
lcall
add
pusha
dec
out
lcall
sub
jmp
and
rorl
add
bound
push
mov
and
pop
sbb
xor
pop
mov
sbb
lcall
xchg
sbb
bnd
sub
cmp
sub
mov
out
daa
int3
adc
add
add
add
fldl
xor
cli
xchg
add
iret
xor
or
add
add
fwait
inc
fnstcw
ret
frstor
adc
push
lea
mov
pop
inc
lahf
mov
push
iret
call
fiadds
push
add
xor
repz
mov
addr16
pop
mov
cmpsb
iret
sti
arpl
add
add
das
adc
mull
fyl2x
pusha
lcall
and
sub
push
call
cmp
add
not
shl
jmp
out
call
bound
inc
sub
add
sbb
xlat
nop
xlat
or
inc
loope
add
cmp
or
and
xor
notb
cmp
and
and
and
add
add
add
add
shl
je
cs
into
inc
mov
call
push
jecxz
or
jno
sub
aad
mov
and
pop
sbb
jg
pop
mov
testb
xlat
jecxz
sub
or
jmp
xchg
xor
ljmp
push
jne
lea
dec
sti
xchg
shl
sbb
sti
aam
mov
add
add
add
inc
mov
or
pop
or
cld
cli
aas
and
inc
sub
mov
out
call
xor
aaa
call
fldcw
push
push
push
div
cli
push
mov
fs
das
add
mov
push
adc
test
mov
sbb
and
jp
into
sbb
and
faddl
mov
cmp
add
add
add
les
je
subl
loopne
mov
out
add
xchg
pop
jmp
xor
mov
add
pop
mov
xor
ss
stc
inc
sub
add
rcrl
mov
jmp
in
xchg
out
arpl
xchg
xchg
sbb
pop
pop
jmp
inc
sub
outsb
add
in
add
add
add
add
outsl
call
insl
outsb
push
add
imul
mov
adc
out
jmp
clc
idiv
mov
aas
jmp
mov
adc
or
in
push
cmpsb
adc
into
sub
test
mov
popa
arpl
les
dec
inc
fnstcw
jmp
add
add
add
add
add
stos
sub
sti
add
sbb
xor
mov
lret
mov
inc
add
and
nop
sbb
call
and
cmp
jbe
cmp
adc
cmp
aaa
sub
cmp
daa
ret
xor
pop
pop
mov
add
push
push
leave
xchg
pop
add
sarl
ret
call
pop
movb
shlb
push
aam
dec
shrb
jns
mov
andb
pusha
js
lcall
clc
jb
sbb
dec
mov
shrb
jb
sub
in
cmp
dec
loop
mov
in
sti
enter
add
cmp
jne
loopne
inc
std
aam
add
mov
aas
sub
enter
add
addr16
push
jmp
mov
mov
mov
sti
int
mov
push
sti
pop
xor
test
roll
mov
outsl
popa
jmp
shrl
mov
clc
pusha
lds
icebp
loope
ret
lea
filds
stos
mov
add
pop
adc
and
fwait
add
and
cltd
pop
sub
jmp
ljmp
test
fildll
je
bnd
jp
inc
sbb
cmp
inc
sub
adc
sub
aaa
in
sub
je
mov
jp
cli
cmp
jmp
jmp
ret
fbstp
add
add
add
add
cmp
stos
sub
xchg
sub
fwait
in
push
sub
inc
icebp
cs
push
mov
sub
add
ljmp
es
add
mov
fs
mov
lahf
sub
lea
sti
mov
hlt
mov
stc
inc
pop
add
shrl
xor
imul
add
add
add
add
cld
mov
ds
add
xchg
clc
std
add
call
test
or
push
aas
lret
inc
mov
adc
testb
mov
jb
in
mov
inc
orb
add
push
int
adc
or
push
int
add
je
xchg
lret
push
sbb
lsl
push
pop
add
push
leave
xchg
pop
add
out
in
xchg
sbb
add
inc
sbb
push
sub
pop
inc
add
flds
mov
fcompl
cmp
jmp
mov
shr
mov
mov
adc
aas
sub
call
add
add
jmp
sti
xor
dec
mov
add
add
add
sub
push
adc
push
push
mov
jmp
shlb
aas
call
mov
dec
call
inc
pop
lods
outsb
push
outsb
rcrb
inc
and
jmp
xor
push
incl
add
jmp
push
imul
call
sub
mov
add
xchg
lods
out
shll
sarl
ljmp
ds
movsb
jmp
rcr
and
jmp
in
add
sub
xor
out
shll
cmp
outsl
iret
mov
insb
faddp
sti
scas
out
or
cmpsb
int
test
movsb
inc
sti
mov
ret
sub
xchg
xor
pusha
add
ret
sub
iret
push
dec
sti
pop
fisubrs
adc
add
stc
pop
dec
out
sbb
test
mov
out
aas
jmp
inc
les
fstps
xchg
repnz
add
sub
addl
call
lds
lds
or
push
ret
jecxz
mov
pushl
and
add
sbb
xchg
sbb
add
adc
mov
dec
fdivl
fsubrl
jo
ret
sbb
mov
mov
lds
mov
or
cmpl
rcr
dec
xchg
mov
xor
mov
into
push
add
lea
push
push
sub
add
add
aaa
mov
inc
sub
or
shl
lds
test
stc
push
sub
inc
into
jmp
fidivrl
add
in
data16
inc
or
adc
in
xorb
dec
les
cmpsb
in
push
cmc
push
inc
dec
call
or
cmpsb
fucom
sti
xor
mov
sahf
sahf
sbb
add
imul
add
imul
loop
xor
mov
in
shll
popa
jmp
ja
add
in
mov
mov
jmp
rcrl
inc
jnp
popa
jmp
add
adc
cmpsb
cmp
add
pop
push
outsb
and
pusha
out
mov
sub
push
mov
loope
mov
in
std
push
andl
and
add
sbb
call
pop
jmp
ret
xor
push
jb
cmp
shll
pop
push
push
mov
pop
add
dec
mov
and
into
test
leave
movsb
andb
add
add
daa
pop
add
sub
mov
lods
mov
jne
mov
aaa
aam
sub
push
cmp
pop
xchg
movl
shrl
inc
inc
sbb
push
sti
aam
sub
jmp
rclb
sti
cld
jge
inc
jmp
adc
jne
mov
pop
add
std
pusha
add
lods
in
shll
push
mov
jnp
add
mov
add
pop
and
jmp
cli
call
shlb
dec
or
sysret
dec
push
xchg
push
adc
push
and
aam
and
fnsave
pop
ret
push
mov
movsb
in
push
push
addr16
push
in
or
movsb
shl
cbtw
push
imul
add
ds
or
mov
scas
adc
add
sub
aas
sub
je
mov
sub
push
or
sbb
add
ljmp
ret
xor
aaa
in
mov
sub
cmp
mov
loope
stc
insb
xchg
int
jne
jne
jmp
add
xor
mov
or
aad
push
or
push
repz
mov
test
add
add
clc
mov
test
push
cmc
cmp
push
mov
xor
cmpsb
add
in
push
pop
popl
or
sub
xchg
xor
loope
mov
es
and
mov
pop
dec
or
bound
xor
mov
adc
mov
xchg
loopne
mov
add
mov
out
out
mov
cmpsb
add
mov
pop
fcoms
add
xor
cs
cmp
dec
xor
jmp
bound
rdmsr
mov
divb
jns
jmp
ljmp
sti
imul
repz
add
stos
cmpl
imulb
inc
add
je
mov
jmp
sub
jmp
mov
add
pop
adc
test
add
inc
in
sub
into
movsl
jo
or
dec
push
or
jnp
aas
popl
push
mov
notl
xchg
jecxz
or
mov
fincstp
jmp
inc
add
rcrl
lea
xor
not
inc
loopne
lea
mov
call
ds
inc
mov
stos
loop
add
data16
push
add
adc
add
cli
pop
lea
fistl
mov
inc
aas
scas
add
dec
dec
jo
fildl
xor
nop
inc
add
test
pop
push
push
mov
xchg
fsts
lea
das
lea
in
fdivrs
dec
int3
sti
test
and
jb
sbb
jne
cmp
push
lret
push
fdivr
lods
or
jbe
sti
mov
outsl
mov
daa
mov
pop
faddl
sub
out
pop
enter
pop
insb
push
add
pop
xor
and
push
inc
repnz
movsb
aas
fimull
mov
sbb
fnsave
sub
mov
adc
dec
pop
lods
sub
mov
sbb
add
jo
xchg
fldt
xor
fwait
jecxz
jmp
add
push
data16
ds
imul
pop
jmp
inc
add
dec
xchg
imulb
and
push
roll
sub
ss
frstor
or
sbb
dec
fdivl
mov
push
and
push
fs
mov
adc
jmp
notb
mov
sti
push
jns
xchg
xchg
jbe
sub
movsb
aad
call
jb
xor
add
add
add
add
sti
xor
and
test
sub
dec
icebp
and
xchg
cmpsb
dec
cltd
mov
push
addl
leave
adc
mov
mov
inc
data16
je
mov
loop
call
iret
fiaddl
test
sbb
add
call
and
jecxz
sub
add
add
add
testl
hlt
scas
mov
inc
or
decb
jmp
add
cld
call
dec
idiv
iret
adc
inc
inc
push
clc
add
divb
mov
hlt
cli
pushf
lock
add
mov
jb
push
hlt
rcrl
push
mov
inc
lock
out
push
mov
hlt
aad
scas
jl
lea
sti
aad
ljmp
call
add
sti
add
xchg
dec
inc
sub
cmp
jmp
cmp
add
in
xor
xchg
enter
call
les
pop
jmp
fldenv
mov
or
movsl
sub
add
add
jle
sub
fldenv
mov
fcoms
push
lods
pop
mov
subb
fdivr
movsl
es
lret
and
out
ljmp
mov
lahf
adc
xor
mov
sub
push
je
loop
fcmovu
shlb
movsl
sbb
jp
sub
shrb
xchg
flds
shll
shlb
push
sahf
in
push
xchg
mov
test
jmp
dec
leave
stos
jns
push
jb
lahf
in
and
pop
add
sub
add
enter
mov
cli
cs
dec
ret
lods
add
cmp
filds
insl
sub
cli
testb
add
add
add
add
pop
jg
in
sub
sbb
pop
aaa
fidivrl
das
test
mov
enter
sbb
call
movsb
mov
incl
jno
and
mov
jbe
mov
lret
xchg
add
movl
into
push
call
incl
fidivl
loopne
mov
enter
shl
or
call
inc
loope
lea
inc
add
scas
adc
adc
jnp
sub
ss
call
loope
in
into
ret
push
or
xchg
lods
scas
cli
popf
cmp
call
xchg
ret
push
ror
mov
sub
or
sub
lods
loopne
decl
cmpsb
pushf
ljmp
incl
sub
dec
daa
ret
ljmp
push
add
cmpsl
shlb
mov
rolb
cld
push
sti
int
mov
jecxz
fsubs
mov
pop
or
pushf
mov
mov
stos
mov
mov
push
jmp
out
add
incl
add
add
pusha
jmp
lods
sub
jnp
and
xor
jmp
mov
pop
and
mov
pop
imul
scas
imul
hlt
in
gs
adc
rcrb
jmp
add
sbb
push
leave
push
jmp
sbb
test
add
or
in
cmp
sbb
fs
das
mov
xchg
pop
xchg
mov
pop
mov
pop
jg
jg
dec
dec
call
xchg
fsubrl
add
pop
into
sub
punpckhbw
sub
addb
xchg
pop
gs
mov
jmp
xor
inc
push
nop
cli
inc
mull
bound
in
pop
add
push
push
fs
ret
negb
sti
hlt
cmp
inc
add
shlb
ljmp
mov
shlb
add
pop
inc
add
hlt
std
hlt
shr
inc
mov
negl
xchg
sarb
addr16
bound
mov
repz
xchg
and
add
loop
sub
fcomi
je
sub
outsl
adc
dec
lcall
add
rcll
dec
jmp
cmp
or
inc
push
inc
or
dec
sub
inc
adc
push
mov
ror
ret
push
mov
and
call
scas
cmc
push
adc
mov
add
lcall
in
jns
aam
in
test
icebp
and
idivl
testb
out
pop
add
or
divl
aaa
cmp
flds
add
mov
je
xor
add
mov
dec
push
into
sti
push
or
mov
push
cmp
push
and
inc
dec
cwtl
jp
adc
sub
adc
mov
jno
adc
push
add
mov
call
rcrb
mov
stos
insb
inc
mov
shl
pop
jmp
roll
jne
mov
sub
test
test
stos
mov
ss
in
cmpl
sub
mull
fildl
and
xor
clc
mov
ret
sti
movsl
xchg
dec
and
pop
jne
subb
stc
jl
and
rcr
cmp
add
roll
add
push
sub
add
movsb
and
jmp
in
add
adc
add
pushf
inc
add
cwtl
cltd
cmp
add
and
cmp
adc
fdivrs
jmp
jmp
getsec
sub
sti
cld
movsl
sbb
sub
add
inc
sbb
and
add
adc
sbb
jl
lods
cmp
push
test
and
add
ds
sub
and
or
adc
and
ret
sbb
call
push
jecxz
sbb
and
rcrl
inc
decl
xchg
and
xchg
call
jo
call
testb
outsl
or
roll
add
adc
inc
inc
add
sub
or
sbb
xor
out
adc
jge
add
aaa
push
cmc
aas
sub
std
push
add
mov
sti
pop
out
in
aas
sub
sti
fnsave
and
in
stc
daa
adc
leave
clc
sbb
add
dec
mov
ljmp
mov
jmp
pop
inc
xor
mov
mov
mov
fldpi
ss
mov
mov
mov
ret
icebp
decl
test
lcall
hlt
cmc
push
insl
ret
mov
and
adc
cmpsb
add
mov
inc
pop
lretw
sub
fildl
pop
lds
sarl
call
xor
inc
pop
push
push
and
pop
dec
push
out
sbb
sbb
fistpll
add
dec
bswap
push
cmpsb
mov
push
ljmp
jg
add
or
sti
jmp
cmp
sub
jne
pop
or
jnp
xchg
or
cs
sub
add
add
add
add
test
test
mov
add
lahf
ss
stos
sub
pop
pop
xchg
and
sub
add
jg
sti
fsubp
addr16
sub
inc
or
ja
inc
or
lods
fidivs
and
pusha
sub
in
ds
add
pop
push
mov
icebp
jp
pop
stos
sti
jae
shrb
add
dec
or
inc
mov
inc
inc
dec
imul
and
scas
inc
shl
fisubrs
mov
xchg
push
mov
and
push
and
xor
out
divb
addl
adc
call
fdiv
test
test
xchg
and
call
divb
sbb
push
add
xor
cli
insl
pop
pop
into
jmp
jle
add
inc
mov
add
stc
pusha
jl
push
mov
add
cmpsl
xor
sub
inc
and
xchg
push
jns
andb
lcall
jmp
shlb
and
sub
sub
inc
and
xchg
jns
sbb
sub
sti
scas
icebp
pop
xor
pop
add
inc
divb
sarl
testb
push
sbb
out
int
mov
movsb
into
call
xlat
inc
sub
int
in
out
aaa
iret
testl
pop
jmp
dec
sub
lret
or
clc
dec
sub
add
add
lahf
mov
sub
lret
add
add
add
add
cmp
inc
sub
xchg
fnsetpm(287
shl
leave
lods
pop
add
jge
inc
cmpsl
cld
lods
dec
outsb
fdivr
dec
adc
mov
mov
sbbl
add
lahf
add
bound
fsubr
push
lea
dec
das
xchg
arpl
fsubr
push
push
push
testb
sub
push
adc
sbb
add
add
add
out
inc
iret
scas
out
mov
push
mov
das
and
xchg
jle
imulb
je
and
leave
scas
fiadds
cmpsb
out
pop
mov
or
in
popw
out
fwait
lcall
mov
jne
pop
stos
push
int3
mov
adc
push
test
je
stos
mov
aaa
sahf
push
sbb
add
add
add
add
cmp
inc
and
je
inc
add
jmp
loopne
fadd
push
mov
call
add
rol
sbb
xor
out
sbb
testl
inc
pop
add
push
test
mov
sbb
jp
sub
sub
cmpsl
or
xor
aas
sub
xchg
mov
mov
jl
jbe
add
mov
mov
push
repz
enter
pop
push
and
mov
cmp
adc
push
add
js
xlat
jg
push
leave
cmpsl
out
dec
aaa
mov
mov
cmp
and
add
pop
jns
add
pop
call
fistpl
push
std
sti
lahf
fdivrl
xchg
hlt
stos
jp
adc
lods
fmuls
sub
loope
xlat
xchg
jge
push
loop
das
vmaskmovpd
dec
sbb
pop
pop
sti
inc
sub
sub
jl
pusha
inc
push
test
and
repnz
test
mov
add
xlat
ret
add
jmp
sub
rcrl
inc
adc
lods
out
test
and
adc
ret
inc
fldcw
cltd
dec
mov
in
lock
xchg
jae
add
sti
jb
xchg
lea
sub
adc
dec
rclb
lcall
inc
cltd
xor
fs
pop
add
sti
fcompl
cli
aam
out
out
loopne
sti
ds
xchg
out
adc
je
daa
add
out
inc
in
push
sub
pop
pop
add
negl
mov
sti
addb
mov
push
inc
rolb
sti
jae
pop
je
sbb
cltd
fstpt
push
xorl
mov
inc
push
leave
rcrl
add
add
add
or
in
arpl
lcall
mov
cs
movsl
arpl
dec
popa
je
mov
imul
inc
fnstenv
inc
hlt
iret
popf
jnp
add
hlt
orb
je
shlb
shrb
add
bound
or
cs
lods
int3
xchg
jae
scas
xchg
dec
es
xchg
cvtpi2ps
add
pop
mov
add
add
add
push
cltd
aas
add
in
lods
std
sub
ret
cmpsb
jl
mov
fsubrl
mov
leave
pop
movsl
mov
leave
dec
adc
int
xchg
cmp
cmp
popf
cmp
fs
pop
sti
aaa
scas
adc
add
jne
pop
outsl
or
mov
leave
aaa
cmp
xor
add
add
add
pop
hlt
cmp
pop
mov
cmp
iret
call
popa
je
jmp
scas
cmp
pop
dec
pushf
jo
sahf
cmpsb
sub
mov
xchg
lock
xor
stc
sub
jmp
int3
and
xchg
aaa
xor
icebp
ret
adcb
pop
jmp
or
pop
ljmp
in
ret
insb
ret
add
movsb
aaa
add
pop
add
daa
daa
ss
jecxz
call
xor
xorb
pop
add
inc
or
add
adc
add
dec
xchg
fsubrp
xchg
test
sub
ret
pop
jmp
inc
xor
ss
cs
nop
push
xchg
sti
xchg
mov
je
jae
stc
call
add
pop
inc
jbe
es
imul
mov
lea
ljmp
add
xor
idiv
xchg
or
testb
int3
push
pcmpeqw
testb
lret
mov
jne
push
pop
testb
jmp
or
pop
jecxz
or
push
cmp
push
mov
addl
add
add
add
add
and
dec
jecxz
mov
add
xor
adc
test
push
sub
lock
addr16
jae
or
mov
lret
mov
lahf
testb
push
cld
jl
mov
pop
mov
mov
in
test
dec
dec
lds
fmuls
aad
inc
and
mov
dec
add
xchg
or
insb
mov
es
loope
stc
pop
push
push
adcb
ljmp
mov
xor
push
sti
ljmp
push
inc
cmp
add
aam
push
cmpb
pop
imul
sub
imul
sub
add
add
add
add
and
call
sbb
popa
pop
sbb
out
push
dec
mov
pop
xor
ds
call
pop
loope
movsl
loop
or
pop
out
clc
adc
stos
andl
mov
sub
lcall
xchg
mov
clc
cmpsb
or
bnd
pop
in
mull
aam
lcall
bound
sti
jmp
pop
and
lcall
enter
mov
out
push
dec
lcall
cli
divb
mov
repz
push
cmp
stc
push
in
dec
and
adc
jmp
loopne
xor
adc
scas
cmp
das
sti
hlt
add
es
jmp
mov
push
sti
cmp
push
sbbl
fnstenv
mov
ret
jnp
and
jne
mov
testl
xchg
pop
mov
cwtl
shll
test
outsl
or
or
stc
or
rorl
mov
lods
hlt
inc
lea
repnz
or
jge
mov
push
adc
dec
das
jnp
arpl
jne
or
testl
cmpsb
inc
clc
adc
sti
mov
inc
mov
mov
mov
sbb
fimuls
fbstp
cmp
jl
xor
jnp
leave
test
mov
sysret
xchg
out
and
std
dec
push
xchg
mov
xor
in
ret
push
push
mov
and
inc
clc
mov
jl
repnz
push
xchg
popa
lds
nop
push
sti
aas
sub
inc
sub
rorb
mov
mov
shrb
xchg
shr
test
loop
mov
adc
adc
mov
sbb
imul
fucomp
popa
xor
xchg
hlt
pop
sub
or
out
add
xchg
xchg
mov
sub
pop
movsl
adc
xchg
and
cmp
mov
mov
into
mov
test
lcall
test
xchg
or
mov
testl
das
jo
xchg
add
mov
icebp
mov
mov
dec
ret
mov
jmp
add
mov
hlt
mov
sti
pusha
ljmp
jmp
fists
dec
pop
das
sti
fsubl
inc
jmp
test
std
xchg
je
movsb
in
sti
call
mov
inc
icebp
cli
and
sbb
cmp
jp
pop
and
push
ljmp
idiv
add
dec
cld
add
pop
add
jae
jne
add
add
adc
rol
popf
fdivr
jl
movsb
inc
or
sti
imulb
clc
add
into
add
movsb
pop
hlt
cmp
cmpb
or
repnz
push
mov
out
dec
push
pop
cmpb
mov
not
sbb
or
mov
add
mov
mov
jl
shlb
push
mov
push
cmp
scas
cmp
std
scas
sub
or
cli
gs
test
jnp
push
stc
lahf
push
les
cmp
fnstcw
repz
lds
ficomps
mov
es
mov
add
add
add
add
pop
leave
call
sbb
cmp
push
data16
scas
pop
in
ret
mov
or
cmp
adc
add
popa
rcll
or
loopne
pop
add
es
add
addl
push
sbb
xor
mov
and
jmp
mov
jbe
fstpt
ja
add
mov
add
test
sub
ret
mov
mov
outsl
add
ret
dec
je
xchg
xchg
cmp
push
mov
rcr
hlt
push
mov
and
jb
cmp
in
or
mov
and
add
jle
and
fcmovu
sub
addb
pop
pop
hlt
sub
sbb
inc
popa
mov
idivl
sub
call
and
mov
rcll
std
out
int
jmp
mov
out
cli
add
sub
inc
ret
mov
sbb
push
in
push
and
add
add
add
rcr
in
or
add
dec
adc
dec
push
jbe
add
andl
loop
and
mov
sbb
dec
cmp
lret
call
and
adc
cmpb
rolb
add
and
xor
shl
mov
nop
icebp
push
jp
lock
mov
cmp
mov
jnp
add
xorb
push
adcb
in
push
jge
adc
or
adc
ja
les
add
mov
inc
int
fiadds
jbe
ljmp
push
mov
test
out
xchg
mov
shrb
ss
adc
cld
mov
mov
mov
clc
inc
fistpll
stos
add
add
inc
add
xor
xlat
add
ljmp
pop
jmp
push
jmp
or
adc
mov
mov
shr
repnz
popl
fsubrl
in
cmp
popa
in
lods
loop
xorl
push
jmp
mov
daa
roll
sbb
dec
cmp
out
ret
and
call
and
push
out
jno
xor
sub
jnp
hlt
adc
fucomip
xchg
sbb
sub
jmp
xor
fwait
xchg
push
and
shrb
mov
call
js
hlt
je
dec
xor
js
push
testb
test
mov
add
ss
xchg
add
jne
add
pop
call
arpl
jne
roll
cltd
jne
mov
adcb
xchg
xchg
mov
dec
pop
sbbl
popa
mov
insb
mov
andb
inc
cld
mov
cs
push
imul
or
testb
bound
xchg
out
je
lahf
aas
or
xlat
testl
add
mov
orb
divb
sub
push
cmpsb
jae
xchg
push
xor
lds
loope
mov
or
call
bound
loop
add
or
lods
dec
cld
jne
call
testl
add
sub
in
dec
push
sub
jl
sbb
mov
lea
in
add
cmp
pushf
jle
sub
outsb
es
sti
mov
es
sub
push
sub
cmp
mov
aad
push
xchg
cmc
jmp
pop
add
mov
push
call
stos
cmp
inc
sub
je
mov
push
sub
adc
fidivrl
inc
sub
jge
add
stc
out
out
pop
shll
pusha
in
lds
pop
mov
push
lahf
push
fwait
sub
jmp
inc
out
inc
outsb
mov
xchg
movsb
iret
std
pusha
pushf
or
add
addr16
jp
jg
xchg
arpl
xchg
mov
xor
into
add
dec
in
dec
adc
repz
inc
mov
cmc
out
enter
add
and
out
imul
xchg
sbb
xor
add
cmc
andb
jmp
pop
push
sub
int
push
jb
cmp
sbb
fsubrl
pop
add
daa
out
sub
std
cmpsb
ret
cmp
popa
jo
iret
data16
stos
inc
mov
test
adc
imul
test
int3
cmp
stos
loope
cmp
scas
mov
aam
mov
sbb
add
sub
xor
sti
mov
out
push
pop
adc
insl
jle
addl
sub
sti
add
addl
xchg
jg
add
add
sahf
pop
idiv
bound
test
sbb
add
jmp
and
mov
stos
rorb
inc
hlt
cmp
sbb
jg
shll
add
cmpsb
cmpsb
pop
xchg
and
add
repnz
repnz
adc
test
inc
adc
pop
roll
andl
jge
push
fucomp
fstps
add
test
pop
addb
neg
sub
ljmp
adc
push
mov
mov
ljmp
jns
hlt
lahf
or
add
js
call
add
add
add
jp
mov
in
fwait
xchg
cwtl
outsl
sbb
inc
ret
jne
das
xrelease
lds
xor
sbb
jp
sub
pop
push
push
lea
add
repz
ret
push
jbe
jmp
dec
pushf
outsb
dec
pusha
jmp
pop
mov
ljmp
pop
out
ds
adc
int3
sub
add
test
sub
jmp
jge
push
jmp
insb
adc
gs
jbe
push
add
cmp
lods
loope
cmp
lods
lahf
or
fwait
add
sbb
jg
rcl
jmp
cld
pop
sbb
stos
xchg
js
jle
push
push
stos
ficoml
fs
jno
fnstcw
idivl
mov
sub
or
call
neg
out
cli
hlt
sub
pop
or
or
cs
pusha
xlat
call
adc
filds
sub
or
jnp
lods
icebp
pop
inc
loope
ja
pop
nop
xchg
mov
jbe
je
xchg
movsl
xchg
xchg
movsb
mov
pop
dec
addb
add
add
add
aam
pop
mov
cli
fwait
in
push
out
dec
aas
fstps
xchg
push
add
out
fldpi
add
fsubp
push
jnp
pushf
add
pop
jne
popa
pop
jmp
mov
mov
jnp
adc
lea
mov
notl
nop
aas
hlt
add
aad
mov
cmpsb
jnp
fsubl
push
add
mov
adc
fdivrp
addb
test
cmpsl
testl
push
add
xchg
mov
loope
and
lock
xor
pushl
or
fwait
gs
xchg
or
sub
ret
or
or
mov
js
scas
das
push
popa
mov
jo
cmpsl
sub
sbbl
int
sub
incb
jbe
ja
or
test
js
and
mov
mov
popa
mov
loopne
jmp
sti
popa
and
push
mov
jae
or
addr16
xchg
test
ja
and
call
imul
aam
in
popa
mov
cs
pusha
enter
test
mov
cmp
cli
xchg
and
cli
sbb
add
add
add
cmp
call
test
lsl
hlt
test
adc
jp
cld
rcll
loope
test
cmp
sbb
push
push
stos
pop
adcb
or
test
jae
dec
cs
sub
mov
fwait
sarb
and
lods
fimull
ljmp
icebp
jbe
daa
xchg
test
addr16
jmp
scas
rorb
mov
sub
jmp
fwait
sarb
adc
in
adc
imul
push
sub
xchg
jne
mov
sbb
int
jne
vpsllq
cmp
adc
int3
cmp
cmp
jae
lods
fldz
cli
aam
ja
or
addb
in
cwtl
jge
inc
or
mov
add
add
add
data16
test
or
mov
cmpb
push
lcall
or
push
jne
pop
arpl
call
call
fs
push
leave
addl
gs
inc
rolb
jne
mov
popa
cmp
mov
add
jp
jmp
add
das
add
jne
stc
inc
hlt
pop
mov
fwait
mov
into
testl
out
jmp
int
inc
lcall
cmp
and
cmp
mov
add
adc
out
test
dec
insl
jnp
adc
xchg
jne
icebp
cmp
mov
mov
cli
out
ret
fdecstp
xor
out
add
popa
inc
add
cmp
mov
clc
pop
push
xchg
inc
subl
in
mov
leave
jmp
dec
pushf
in
cs
sub
add
insl
orb
push
in
add
movsb
sub
sbb
sub
xchg
add
pop
insl
les
and
ret
ljmp
dec
movsl
mov
push
fcom
imul
into
inc
mov
sub
jmp
movsb
lods
jbe
lods
adc
jecxz
sbb
xor
int
daa
shlb
es
add
aas
movsl
adc
scas
movsl
jbe
data16
sti
adc
and
push
mov
mov
mov
mov
inc
flds
adc
sti
push
stos
stc
add
dec
and
add
add
add
add
push
mov
in
popa
out
testb
test
rolb
sbb
jnp
aas
and
sub
xor
movsl
negl
jmp
movsb
pop
sbb
leave
icebp
pop
mov
adc
sub
cld
ret
in
mov
loope
sub
and
loope
mov
mov
rolb
add
add
add
jg
dec
push
rol
sub
dec
ds
cmp
sub
movsl
movsb
js
xchg
adc
shlb
jne
mov
push
rcrl
jnp
pop
cmpsb
shlb
inc
cld
inc
movsb
mov
jl
lods
inc
cld
or
leave
ret
dec
push
enter
outsl
lods
icebp
push
fwait
inc
idiv
mov
out
call
addl
add
add
add
add
pop
jecxz
rcrb
in
popa
addl
dec
sub
xchg
mov
sbb
mov
loopne
enter
nop
mov
cmp
and
lds
mov
inc
dec
test
xchg
sub
xor
les
cli
add
or
add
sub
push
add
sbb
incb
cmp
lds
mov
lock
adc
insb
test
push
nop
mov
or
xchg
xor
mov
aam
movsb
xchg
mov
pop
fildl
fildl
int3
sub
lea
push
mov
mov
sub
push
outsl
mov
dec
movsl
and
in
stos
mov
idivl
fucomip
test
insb
les
neg
jmp
mov
out
outsb
push
mov
inc
sbb
test
or
sbb
xor
jmp
repz
sub
mov
jae
and
aaa
aaa
scas
and
and
add
mov
push
aam
xor
and
bound
sub
adc
jmpw
test
sub
out
test
int
jb
mov
jge
lret
je
cmpsb
sub
jns
fidivs
mov
add
add
rcrl
pop
je
mov
add
loope
sbb
dec
pusha
fs
add
imul
adc
push
pop
shll
push
add
jnp
xchg
xor
add
sbb
mov
xchg
push
leave
add
add
movsb
clc
mov
push
pop
xor
movsb
mov
decl
arpl
xchg
cmp
mov
cmp
cwtl
adc
orb
mov
mov
sub
cmp
data16
add
xor
add
add
add
int
testb
adc
rclw
sbb
dec
add
cmc
notl
adc
add
out
push
mov
jbe
xor
cltd
jg
mov
popf
ljmp
or
pop
sub
mov
sti
dec
movsl
imul
ljmp
sti
sub
inc
dec
sahf
fdivrl
dec
hlt
or
notl
je
out
aas
or
add
add
add
add
out
jnp
mov
pop
rclb
push
add
aam
popf
adc
test
pop
adc
or
push
mov
xor
fldt
hlt
lock
je
push
iret
imul
push
mull
pop
cmc
lds
call
and
and
in
mov
fadd
add
jne
mov
jne
cmp
icebp
add
outsl
pop
push
lahf
or
mov
sbb
and
test
jp
fisttpll
jmp
mov
sti
imul
add
icebp
aaa
call
das
jmp
xchg
int
dec
push
movsl
lret
pop
pop
add
cli
dec
cmp
mov
add
pop
daa
lea
lea
data16
mov
mov
push
jg
sbb
xor
pop
in
adc
fcoms
insb
sbb
jb
jl
cmp
push
adc
sbb
ss
testb
and
push
jl
and
int3
insl
movhps
jnp
setg
je
fnstsw
add
push
pop
add
mov
enter
ret
add
nop
sub
or
add
and
cmp
push
sub
xor
enter
inc
xchg
adc
int
scas
icebp
dec
pop
cmp
je
add
push
ret
rcrl
xchg
movsb
ljmp
cmp
mov
inc
dec
sub
pop
in
enter
lock
or
test
lea
xchg
mov
add
in
add
xchg
sti
or
mov
lea
das
sti
pop
push
icebp
aas
sub
pop
add
mov
add
stos
lea
cltd
sti
mov
sub
mov
xchg
test
xchg
or
push
ljmp
and
je
cltd
push
mov
pop
jecxz
mov
fwait
test
xchg
iret
insl
ret
lcall
stos
lods
or
sbb
push
or
xchg
into
xorb
push
sub
jmp
icebp
or
fwait
gs
fyl2x
add
push
data16
xchg
dec
or
xchg
jno
xor
ror
cwtl
subl
sub
push
add
mov
aas
mov
fdivr
jmp
pop
aas
jmp
dec
je
scas
movsl
pop
je
cmpsb
cmp
cmpsl
outsb
pop
add
cs
push
xchg
mov
mov
pop
or
pushf
ret
mov
mov
adc
imul
fsub
jmp
loopne
int3
cltd
push
inc
jmp
mov
fnsave
adcl
lea
dec
in
push
or
lret
orl
sbb
lea
sub
inc
inc
sub
rcrl
lea
das
push
jae
inc
add
adc
or
mov
std
jae
adc
outsl
fcomps
adc
sbb
ds
mov
pop
xor
cmp
jecxz
jmp
cs
fidivs
inc
ret
pushf
les
pop
pop
data16
xor
inc
sub
mov
pop
out
adc
test
adc
rolb
cmpsl
mov
push
fs
cli
jg
clc
pop
xor
add
add
sbb
cs
in
das
in
dec
das
sti
push
pop
pop
lea
add
scas
bound
test
jg
lods
jmp
je
mov
das
lea
sti
negl
inc
push
stc
mov
out
lret
cmp
push
js
sti
fyl2xp1
mov
bound
pop
mov
or
popl
add
cltd
sbb
sub
fldln2
sub
pop
pop
inc
cmp
subl
sub
insl
mov
call
mov
into
lea
fimull
xor
inc
mov
repz
loopne
scas
in
xor
push
add
jo
add
lret
shlb
out
ret
stos
iret
add
inc
mov
xor
push
add
mov
std
fucomp
fdivr
mov
or
sbb
push
push
sub
in
push
sub
test
sub
insl
outsl
push
movsl
mov
aam
imul
push
lods
repz
imul
gs
imul
sahf
repnz
es
cli
cld
and
push
pop
imul
addr16
insb
push
bound
jnp
add
and
push
xchg
cmp
test
je
xchg
mov
test
mov
fwait
add
xchg
testl
outsb
jecxz
mov
or
idiv
shrb
add
add
add
add
mov
imul
mov
add
inc
mov
out
add
add
gs
leave
xchg
add
pop
jnp
dec
mov
imulb
cmp
lret
pop
and
into
mov
and
jbe
jle
mov
adc
pop
and
push
push
pop
jge
pushf
cmpsb
cmp
jle
popa
insl
orb
iret
leave
jl
aaa
negb
clc
jae
sub
mov
hlt
out
and
sarl
call
or
aaa
pop
sub
cli
push
xor
push
push
adc
add
pop
add
push
jmp
lahf
sub
call
cmp
aam
add
fucomip
cmp
pop
ret
aam
lahf
add
hlt
lcall
jbe
pop
sub
xchg
pop
rcll
idiv
or
pop
imul
fwait
and
inc
and
xor
test
ret
jo
scas
lds
lea
sub
xor
es
add
xchg
add
add
add
add
mov
fwait
jne
jbe
xchg
cs
lea
sti
dec
xchg
sti
inc
fwait
mov
ret
in
cltd
adc
enter
call
mov
test
in
icebp
daa
pop
add
std
idivb
test
mov
sti
mov
push
mov
int
ficoml
xor
xchg
add
dec
popf
mov
pop
cmp
add
add
add
add
sub
test
sbb
mov
jmp
or
test
ret
jno
lea
pop
test
sbb
add
loope
mov
or
push
sub
xchg
pop
sbb
add
pop
jne
jb
sti
cmp
mov
add
add
add
add
jnp
inc
xchg
divl
aas
mov
test
pop
push
dec
push
popf
enter
nop
inc
jecxz
test
clc
push
test
ret
mov
scas
mov
adc
sbb
aas
call
push
fimuls
stos
mov
mov
in
dec
cld
test
fisttpll
xchg
or
add
adc
xchg
xchg
or
ja
sti
cli
push
mov
in
add
sub
or
push
das
push
scas
mov
cmp
mov
and
push
mov
add
adc
pop
xor
jg
iret
inc
and
pop
jnp
xchg
sub
jp
jno
shrb
push
sub
imul
add
add
mov
pop
pop
cwtd
jmp
pop
mov
mov
push
mov
adc
sub
adc
and
add
lcall
push
iret
movsb
mov
cmpsb
lea
cmp
les
lods
jb
mov
sub
push
inc
push
ljmp
es
or
cmpsl
imul
jmp
push
and
xor
push
data16
adc
out
xor
idivl
pop
push
aad
pop
jne
xor
test
jmp
push
bound
xchg
inc
add
lods
imul
cltd
sahf
jmp
jb
popf
lret
cmpsb
in
inc
jmp
add
push
add
adc
addl
xchg
push
or
testl
pushf
xor
call
pop
adc
int3
add
and
shlb
jmp
scas
shrb
lcall
leave
push
sub
jl
andl
push
mov
incl
xchg
and
push
pushf
std
lcall
divl
out
mov
push
sub
push
ja
shlb
or
xchg
pop
sub
sub
mov
cli
and
jnp
lea
pop
xchg
and
push
push
dec
xchg
outsl
outsb
lcall
in
push
test
ret
test
mov
out
and
js
scas
leave
xchg
pop
aad
sbb
fdivl
adc
cmpsl
xor
jg
lea
push
test
repz
mov
addb
pop
test
test
cli
jle
jno
xchg
je
inc
int
adc
int
xor
lcall
sub
inc
jns
fwait
adc
out
jae
adc
nop
mov
push
pop
push
outsl
pop
fucomip
and
jns
add
insb
mov
fistpl
jle
jmp
js
ja
or
pop
mov
out
fcomi
jle
aas
xchg
xor
in
xor
xchg
in
loopne
out
lcall
and
call
fwait
pop
mov
mov
pop
fisttpll
nop
mov
out
mov
pop
shrl
cli
fdivrp
jbe
test
pop
mov
int
jb
jmp
sub
dec
pop
cmp
mov
popw
push
adcb
cli
mov
das
mov
mov
pop
add
stc
add
mov
adc
add
xchg
dec
dec
pop
stc
or
outsb
adc
add
mov
jmp
xchg
push
add
push
pushl
loopne
add
push
sbb
jg
inc
sbb
orl
sbb
add
das
lea
xor
lock
push
incl
test
pop
pusha
mov
orl
dec
pushf
idiv
movsb
sub
sbbl
testl
inc
icebp
jg
push
xchg
dec
push
ret
xchg
push
adc
pop
je
nop
xchg
jecxz
out
jg
add
push
add
cli
gs
xchg
ljmp
sub
xchg
mov
cmp
stos
xchg
inc
ja
and
out
sahf
insb
sbb
mov
pop
daa
xor
outsl
cli
xor
bound
push
jbe
scas
xor
test
out
lock
push
cli
add
movl
add
sbb
stos
mov
pusha
sub
insb
inc
jb
orb
sbb
int
out
sbb
incl
cmpsl
or
xchg
cmp
into
insl
inc
jbe,pn
mov
pop
roll
and
rorl
test
js
push
cmp
and
add
add
add
test
shlb
adc
fisubl
lods
repnz
sbb
pop
push
divl
push
loope
push
leave
mov
fwait
mov
jmp
xor
icebp
ljmp
adc
lcall
mov
jno
xchg
sbb
cld
out
cmpsl
cmpsb
jne
pop
jne
and
cmpsb
or
add
dec
xchg
pushf
hlt
sti
sbb
push
fldl
sti
cmpsb
jae
jmp
out
in
cli
cmp
movsb
add
cmpsl
out
pop
jb
push
push
add
mul
mov
psadbw
sub
movsl
in
push
sub
push
add
lahf
add
popf
push
push
push
lea
sub
add
add
add
add
pop
test
and
orb
or
dec
push
dec
rclb
rolb
push
movsb
in
mov
push
pop
sbb
sub
mov
add
and
and
jl
adc
out
push
cmp
pop
call
and
bound
sbb
idiv
dec
or
sub
inc
lcall
add
add
add
xchg
in
push
hlt
outsl
push
mov
frstor
call
fstpl
mov
sti
pop
jns
cmp
xor
push
dec
push
inc
mov
sti
sub
inc
mov
iret
loopne
arpl
insb
je
rcr
cmpsl
or
cld
sub
mov
js
pop
xchg
clc
and
fcmovu
imul
cli
push
mov
ret
adc
lahf
pop
lahf
call
arpl
xchg
inc
lret
pop
ret
add
adc
adcl
pop
inc
mov
test
loope
sarb
cmc
lods
pushw
pop
jmp
xchg
test
lret
inc
jnp
jo
jne
in
ss
in
sbb
mov
in
sub
add
test
add
add
add
cmp
xlat
lock
nop
outsl
ss
xor
adc
data16
aam
adcb
enter
cwtl
lods
push
sti
outsb
mov
mov
push
mov
push
sti
roll
push
sti
xchg
adc
outsl
je
xchg
pop
adc
hlt
repz
aaa
sbb
es
sbb
cld
popa
or
xor
mov
stc
jmp
test
std
inc
sti
cmp
out
cli
imull
pop
call
push
cmp
adc
inc
cltd
add
idiv
mov
mov
out
call
fcomps
out
enter
mov
sahf
testl
add
sahf
push
pop
push
jo
in
ror
mov
inc
sbb
dec
fisubrs
pushl
sbb
mov
incl
jg
stos
test
lahf
notl
jmp
inc
stos
clc
mov
iret
test
aam
mov
pop
push
imul
nop
sahf
inc
jmp
inc
pushl
sti
shl
add
adcb
or
nop
in
pop
lahf
fwait
mov
xchg
mov
leave
repz
mov
fisubrl
mov
pop
xor
repz
std
xchg
loopne
jnp
imul
gs
xor
lea
outsb
insb
fs
inc
incl
mov
pusha
dec
mov
into
dec
cmc
notb
mov
ljmp
mov
addr16
mov
mov
js
inc
stos
cld
xchg
push
inc
mov
sub
outsb
leave
mov
jbe
mov
mov
add
mov
mov
jle
movsl
lods
ja
sbb
push
les
jg
notb
orl
adc
mov
xor
xlat
cmp
stc
stos
push
or
push
fcmovb
cli
pushf
test
cmp
lret
jmp
aaa
jl
es
dec
cmp
pop
push
fs
push
addl
pop
adc
ret
jns
imul
adc
pop
sbb
repnz
sub
test
pop
add
mov
xlat
inc
xchg
jg
jmp
test
add
add
pop
call
gs
mov
pop
rcll
fcomi
cmp
pushf
ret
add
mov
shlb
push
cmpsb
jne
imul
mov
mov
push
inc
scas
ret
cmp
add
pop
test
clc
jae
or
repz
sub
cld
ret
add
shl
jne
ret
cmp
je
inc
aas
test
push
or
add
dec
jb
add
insb
sub
into
cmpsl
add
sub
jnp
add
scas
rclb
mov
sub
sti
test
mov
mov
cs
aam
inc
jmp
inc
pushl
and
int
mov
add
add
add
sub
lea
jnp
mov
aas
call
pop
mov
cmpsl
add
inc
cmp
jne
sahf
sub
gs
icebp
mov
fwait
add
lret
shl
scas
push
cmpsl
ret
loop
dec
and
ja
mov
jne
jmp
push
sub
jp
insl
inc
jp
push
jl
fs
add
adc
outsl
add
mov
mov
adc
daa
je
int
cmp
aaa
sti
ret
int
movsl
or
icebp
jns
nop
cmp
pop
test
shll
inc
mov
add
mov
mov
inc
lret
sbb
pop
stc
push
movaps
es
inc
sub
jmp
inc
lret
inc
add
inc
push
lcall
add
add
fsubl
sub
pop
push
bound
pop
add
clc
in
cmp
aas
lcall
pop
das
xchg
aam
ret
xchg
js
pusha
push
mov
addl
es
call
sub
lcall
imul
fiadds
mov
pop
inc
add
add
mov
push
es
sti
hlt
andl
or
pop
add
push
imul
xchg
rorb
nop
add
add
lea
push
dec
mov
shl
push
pop
sarb
add
mov
lea
push
adc
fdivs
inc
push
xor
xor
add
add
add
daa
test
sbb
add
adc
add
and
add
outsb
xor
inc
sbb
xchg
repz
mov
cli
fistpl
rcrb
mov
into
push
lea
aad
or
sbb
test
dec
jp
sub
xchg
xchg
dec
pop
or
movsb
mov
ljmp
iret
shl
mov
inc
sti
mov
xor
xchg
sub
mov
rorb
jmp
fisttpll
add
ss
xchg
in
xchg
dec
in
aas
sarb
sti
cmpsl
pop
sub
repnz
dec
push
mov
bound
movsl
and
orl
adc
pop
jns
lcall
add
add
add
dec
add
shrb
lcall
jle
adc
fldl
jle
dec
outsl
pop
jns
inc
mov
ds
inc
push
aaa
add
leave
mov
movsl
jle
dec
push
cltd
mov
dec
adc
fldlg2
push
add
dec
ja
or
mov
push
cmp
and
push
push
rcl
jb
jae
lods
add
iret
inc
or
stos
or
push
mov
sub
pop
jmp
xchg
stc
dec
push
icebp
mov
out
cli
cmp
cmpsb
inc
lds
jb
out
cli
sbb
inc
leave
mov
push
cmpsb
xchg
cmpsb
or
cmp
push
push
adc
mul
cmp
dec
sti
outsb
lcall
jmp
add
xrelease
andb
push
xchg
pop
arpl
test
sub
cmp
ljmp
clc
mov
into
mov
inc
and
mov
dec
xchg
add
cmp
jbe
push
call
mov
xlat
and
rclb
pop
notb
int3
mov
add
xchg
decl
jb
test
xchg
and
push
cmpsb
mov
sbb
adc
sbb
push
ljmp
xchg
jmp
cmpsl
stos
arpl
or
adc
aaa
jmp
mov
pop
adc
aaa
iret
cli
sbb
add
sub
mov
inc
adc
insb
je
pop
loopne
push
scas
fwait
mov
add
add
add
cmc
gs
cmpl
ljmp
sarl
mov
rorl
roll
sti
mov
shll
rorl
mov
insb
xchg
es
es
insb
inc
pop
jmp
add
push
je
pop
pop
jle
dec
inc
je
es
lds
ljmp
lods
xor
imul
addl
std
pop
fs
sahf
adc
dec
ljmp
pop
add
push
adc
push
or
fucomip
ret
mov
mov
jae
sbb
push
shl
xchg
sbb
mov
dec
repnz
jp
lods
loope
js
pop
push
outsb
jg
xchg
or
push
push
and
cltd
clc
in
pcmpgtb
out
mov
or
dec
sti
es
push
icebp
les
push
push
push
and
jmp
icebp
inc
repnz
cltd
inc
pop
in
mov
fidivrs
add
sub
inc
mov
push
adc
mov
loop
sti
scas
jno
mull
cmp
call
cmp
mov
xorl
add
add
xchg
mov
dec
push
pop
xor
cmp
aam
cmp
jno
sti
test
add
in
inc
sbb
je
call
imul
rolb
clc
inc
push
add
sbb
add
jno
xlat
jp
mov
addl
dec
lea
lret
mov
decl
jae
add
leave
xor
popf
mov
je
push
and
imulb
mov
out
sub
movsl
enter
adc
xchg
lea
sub
cmp
push
mov
sub
out
daa
xor
inc
mov
imul
hlt
rolb
aam
repnz
mov
jns
out
scas
push
hlt
mov
jmp
xchg
shl
mov
outsb
push
cltd
sub
jl
and
rcr
sti
ja
outsl
jp
inc
loop
dec
mov
xor
jp
cmp
rcl
jle
push
add
fucomp
frstor
mov
pop
ss
jo
push
cmpsl
sti
xchg
repz
pop
or
mov
mov
xchg
inc
xchg
jmp
pop
in
xchg
adc
xor
jo
pop
xacquire
dec
push
jmp
negl
dec
xchg
sti
sahf
mov
jmp
outsl
adc
push
add
pop
outsb
cmp
sbb
loopne
aaa
mov
jnp
or
xchg
add
gs
add
stos
mov
add
inc
sti
jmp
jns
pop
lds
adc
sbb
push
mov
add
mov
dec
pop
add
adc
or
add
jae
sti
fcoml
insb
mov
sub
pop
add
pusha
loop
sbb
jg
add
xchg
and
xor
jmp
in
and
pop
dec
pop
cmp
jecxz
cwtl
ret
and
outsb
dec
pop
inc
imul
cwtl
shll
bound
dec
dec
pop
dec
sti
loop
cwtl
xchg
and
push
dec
pop
pop
cmp
mov
andl
fstl
incb
mov
lds
inc
and
jno
push
cld
es
adc
sahf
scas
add
lea
jb
adc
mov
notb
jp
pop
and
div
ljmp
cmp
or
movsl
movl
and
aaa
jp
insl
je
sbb
push
add
dec
push
movsl
adc
sbb
add
scas
push
ja
sub
iret
push
xchg
inc
and
lahf
sti
daa
pusha
flds
adc
mov
je
ror
cmp
inc
call
scas
imul
rolb
out
mov
and
mov
and
cld
sar
sahf
push
and
pop
pop
sarl
mov
fiaddl
jo
pop
imulb
into
insl
rcrl
and
adc
sti
nop
inc
or
jmp
cld
scas
das
subb
daa
ds
dec
sti
or
and
in
mov
call
add
add
add
add
pusha
in
call
in
sub
mov
dec
cmpsl
ficoml
rcr
inc
hlt
or
fucomip
and
out
cmpsb
leave
lcall
cmp
sub
fs
inc
push
mov
jmp
sub
push
je
push
push
insb
jmp
push
adcl
call
mov
dec
je
push
test
jnp
test
add
pusha
push
outsb
sbb
or
popa
pop
xchg
test
inc
sti
mov
roll
gs
leave
mov
loope
xchg
jmp
imul
jmp
jge
add
adc
mov
add
les
rorb
xor
decl
call
adc
sbb
push
add
enter
arpl
push
adc
bound
sbb
mov
cs
dec
lcall
pop
push
or
lret
sbbl
push
push
jecxz
jmp
mov
clc
sti
enter
push
pop
pop
or
push
mov
fwait
in
add
add
andl
ret
xchg
daa
imul
add
add
add
mov
mov
int3
inc
call
scas
ja
inc
test
mov
sub
inc
lea
add
cmp
aas
test
call
repnz
clc
mov
cmp
cli
jge
fisttpll
imul
pop
jbe
aad
cmp
pop
arpl
lret
mov
and
aam
je
push
xchg
sub
add
mov
or
jnp
inc
mov
push
fcmovu
shll
push
inc
pop
inc
pop
clc
cmpsb
ljmp
gs
in
movsb
shl
aaa
psubw
inc
adc
test
jmp
push
xchg
pop
jmp
and
out
xchg
inc
paddb
pop
push
movsl
inc
push
dec
add
push
jmp
jnp
shrl
pop
jmp
cltd
shrb
cld
fldcw
dec
jb
xchg
inc
add
in
xor
dec
xor
add
adc
cwtl
sub
add
fists
sti
sbb
pop
aas
jmp
push
or
jmp
sub
mov
sbb
call
inc
sbb
call
add
add
add
pop
mov
xchg
jne
into
popf
add
sub
aaa
push
es
cld
inc
xchg
sub
call
insb
jnp
mov
inc
pop
stos
add
inc
je
stos
sahf
add
push
jecxz
xchg
push
sbb
add
call
jmp
cwtl
lock
adc
and
call
jg
add
mov
add
add
add
add
outsb
not
inc
loop
test
add
mov
add
adc
pop
iret
push
rep
notb
push
loop
jp
das
add
xchg
dec
push
adc
adc
jae
sti
test
pop
ljmp
pop
testl
cld
paddb
mov
test
mov
mov
push
clc
das
sbb
mov
add
add
add
cwtl
fldt
pop
add
jmp
mov
lret
pop
jns
cli
imull
out
ret
popa
sti
test
std
or
xchg
pop
pop
jge
test
inc
cs
dec
out
pop
ss
dec
incl
scas
jnp
sti
jge
ljmp
cmp
loopne
xlat
inc
inc
jmp
add
add
add
fldcw
inc
xor
pushf
js
mov
icebp
add
pop
mov
lods
xor
daa
pop
mov
add
sub
and
or
jns
dec
add
mov
rol
imul
fs
daa
sbb
mov
pusha
outsl
call
inc
es
xor
xchg
sahf
test
es
jmp
cld
add
in
pushl
pop
adc
cs
or
aaa
mov
inc
mov
add
xchg
add
sub
dec
jb
iret
mov
sti
push
stc
stos
mov
inc
sub
add
iret
jo
sub
test
mov
test
iret
xchg
add
push
pop
mov
iret
out
or
sti
fs
testb
lahf
or
adc
cmp
push
test
add
notb
mov
jmp
mov
inc
mov
mov
jmp
mov
inc
mov
lret
stos
add
adc
pop
xchg
adc
lea
lods
inc
in
xchg
test
incl
mov
add
and
add
mov
call
in
in
and
add
and
push
add
inc
cli
mov
arpl
rclb
mov
xchg
xor
pminsw
sar
cmp
cmp
dec
cmpsl
add
lret
cld
fldcw
sti
sbb
jmp
sti
inc
xor
nop
inc
add
cwtl
out
aad
jmp
mov
lea
nop
lea
sub
add
or
add
mov
jg
dec
je
mov
push
in
popa
mov
ret
add
mov
ret
subb
lea
dec
mov
in
cmp
mov
cmp
popa
rcrb
jmp
sarl
pop
jno
roll
add
add
push
add
pop
popa
cmp
div
or
add
pop
insb
xor
xor
popa
fiaddl
pop
and
data16
and
in
in
jmp
add
inc
cld
data16
cmp
or
mov
imul
pusha
sbb
pop
outsl
dec
dec
in
mov
les
sub
pop
sub
xchg
mov
das
test
je
lea
fsubl
cmp
xchg
call
lock
jmp
int
cmpl
subb
jmp
mov
call
insl
imul
pushl
pcmpeqb
mov
pushf
jmp
lods
xor
fiadds
dec
sub
jmp
fdiv
lcall
add
roll
pushl
fmul
mov
or
cmp
daa
test
sbbb
lea
pop
cwtl
add
xlat
call
dec
push
or
cmp
xor
push
mov
inc
and
stos
jl
inc
stos
pop
and
ret
dec
sbb
test
dec
lahf
mov
adc
push
push
or
xor
inc
sti
and
sbb
add
sub
add
and
sub
jmp
pop
add
sub
shlb
dec
mov
add
dec
addr16
mov
fs
mov
dec
call
ret
shlb
out
out
outsb
add
dec
addr16
dec
decl
dec
incl
inc
stos
outsl
add
stos
shlb
negb
addr16
lcall
ljmp
jne
adc
scas
pop
or
cmpsl
ret
and
movsb
push
loop
sub
xor
sti
hlt
mov
sub
jne
shl
push
sub
pop
loop
jb
jmp
jnp
pop
jmp
enter
mov
orb
repnz
jmp
pop
jo
jmp
add
pop
insb
mov
xchg
jmp
pop
mov
cli
mov
in
xor
xor
test
xlat
scas
fwait
lds
pop
jmp
daa
and
cwtl
mov
or
cmc
stc
hlt
jmp
stos
push
out
add
mov
sub
lcall
add
add
push
mov
sub
je
dec
pushf
jl
dec
cmp
popf
ret
add
push
js
sti
jmp
mov
aaa
jg
pop
fwait
shl
popf
jne
sahf
popf
lret
mov
dec
lods
pop
je
fsubp
add
repnz
shrl
pop
xchg
inc
sub
fs
sti
push
outsb
stos
and
xchg
dec
xchg
add
out
sti
je
hlt
dec
pop
sub
out
inc
ja
mov
je
in
fldl
add
mov
add
ret
insb
push
push
imul
repz
arpl
adc
popf
pop
sti
cmpb
mov
xchg
pop
call
lea
mov
push
pop
add
xor
push
add
inc
insl
mov
push
inc
mov
mov
add
ret
jmp
adc
jnp
xor
and
sub
cmpb
push
push
mov
nop
cmc
aas
sub
shl
stos
jg
rcll
push
ret
sti
lds
mov
jne
mov
addr16
dec
incl
xor
jmp
push
ret
and
sub
inc
jbe
push
lea
scas
enter
js
dec
push
dec
nop
call
sbb
stc
dec
fsts
faddl
pop
popl
lret
adc
lahf
sahf
adc
add
add
xor
aas
xor
hlt
sarb
cmpsb
insb
pop
push
jmpw
ja
add
pop
shl
xor
insl
xor
cmp
ret
pop
mov
adc
add
inc
inc
push
sub
ss
sub
xchg
pop
insb
ret
pop
cmp
loope
popa
lcall
sub
jmp
mov
testl
jmp
ljmp
mov
mov
sarb
call
cs
add
jmp
inc
out
std
call
xchg
pop
add
jns
int
push
xor
shll
or
xor
jmp
scas
xchg
add
sub
pop
sub
xchg
lods
jecxz
fnstcw
xor
add
test
pop
add
cld
punpckldq
mov
dec
push
in
insb
pop
test
test
adc
lea
stos
sbb
add
mov
add
mov
or
dec
out
dec
push
int3
lods
xchg
add
sbb
je
pop
call
mov
call
jmp
pushf
fs
sbb
lcall
add
or
or
and
mov
scas
call
shlb
je
xor
xchg
lea
sub
push
mov
sbb
out
push
inc
mov
xchg
xchg
sub
jmp
and
test
or
inc
mov
mov
fmull
add
sub
iret
and
push
mov
fcom
cmp
xlat
scas
aam
cmp
ljmp
push
cmp
sub
xchg
xchg
cmpsl
in
pop
sub
mov
dec
ficoml
add
add
add
sub
incl
arpl
call
mov
gs
sbb
bound
cmp
sub
cmpsb
xchg
jmp
adc
mov
out
xor
sub
mov
mov
fldl
xchg
shrb
sti
int
fildl
sub
push
or
sub
mov
add
add
add
or
faddl
sub
dec
shll
jb
subb
jmp
add
cs
push
incb
loope
fmul
imul
repz
into
xchg
jge
ljmp
jp
mov
pop
push
pop
add
in
ss
xlat
sub
sbb
aaa
imul
adc
leave
mov
add
add
jecxz
lcall
add
loop
out
jecxz
in
mov
push
js
xchg
movsb
shll
in
fcmovnu
cli
sbb
rcr
ljmp
xor
movsl
or
pop
add
sub
inc
sbb
and
push
mov
jge
in
rol
aaa
add
dec
push
pop
lret
mov
add
addb
xchg
mov
hlt
lock
into
mov
add
and
call
ljmp
les
adc
add
jnp
xlat
adc
lea
cld
jmp
jb
push
in
mov
xor
inc
sbb
imul
add
fldl
lahf
or
mov
push
sti
add
mov
cmp
ret
add
jb
rcl
ret
add
sahf
outsb
add
cmp
std
icebp
dec
out
stc
fdiv
add
mov
jmp
sub
add
cmp
cli
sub
call
mov
scas
out
cmpsl
push
sti
mov
add
mov
pop
dec
sti
mov
imul
xchg
out
jns
rclb
pop
add
subl
mov
mov
xchg
roll
add
add
loop
inc
fists
in
sub
mov
lds
cmc
add
mov
push
push
imul
adc
fucomip
jle
out
cmp
dec
and
je
push
sub
push
mov
aaa
ja
add
pop
je
lret
push
cmpb
sub
inc
jle
pop
je
dec
sub
movsb
pop
pop
data16
in
je
inc
dec
cmp
adc
ljmp
jle
sub
jmp
cs
hlt
lods
data16
jmp
mov
imul
jmp
ret
jmp
add
lcall
in
inc
add
jo
cmp
pusha
in
dec
mov
mov
dec
frstor
add
adc
adc
sbbl
pop
test
add
jb
lea
dec
lea
hlt
sti
lcall
call
mov
testb
testl
add
repz
fsubrl
inc
outsl
les
adc
inc
pop
mov
add
sbb
ret
or
into
add
sbb
jge
data16
insb
mov
mov
inc
cld
sub
add
stos
inc
clc
push
fcomi
je
cmp
mov
out
jne
mov
add
and
ss
xorb
add
add
add
ss
mov
sub
jbe
push
ret
sti
sbb
cld
cmp
jp
sti
pop
jb
aas
sub
dec
jne
mov
xorb
dec
arpl
cmp
test
dec
mov
jg
in
mov
xchg
push
out
xor
arpl
inc
mov
cwtl
dec
rorb
push
aaa
jnp
pop
ret
lcall
cmovnp
mov
and
add
mov
or
clc
xchg
xor
push
shl
dec
push
fwait
test
fs
shrl
cmp
and
jp
mov
inc
outsl
daa
in
add
pop
sub
pop
pop
add
and
dec
icebp
stos
or
add
ret
fadd
frstor
push
push
movsb
cld
sub
jle
ja
sti
out
inc
call
adc
jb
and
jmp
sub
dec
imull
out
out
stos
fistl
mov
lret
xchg
sub
dec
pop
xchg
sub
jg
xchg
sub
jmp
add
pop
lea
sti
ss
pusha
call
insl
stos
jnp
imul
sti
add
cmp
or
sbb
call
mov
test
inc
popf
sti
je
loop
push
popf
add
aam
push
mov
movsl
dec
or
sub
fisttps
call
xor
push
sub
add
and
call
shlb
add
data16
mov
bswap
test
push
or
mov
or
inc
sub
jnp
adc
pop
mov
pop
loop
loopne
push
pop
cmp
add
sub
in
stos
and
fnsave
imull
icebp
mov
dec
adc
test
clc
or
call
ds
xor
xchg
dec
or
add
add
add
xor
inc
or
cmp
sub
jl
dec
cmp
sub
jl
jb
dec
add
ss
retw
cmp
inc
mov
gs
add
cmp
addr16
add
sub
decl
pop
jmp
add
xchg
pop
shl
and
mov
arpl
xchg
jl
add
aaa
roll
jns
jg
sub
shll
jl
sub
iret
ds
hlt
xchg
fs
andb
mov
fcoml
aas
lret
clc
ret
pop
fwait
test
add
into
adc
dec
ficoml
pop
mov
les
adc
add
xchg
les
fmull
pop
add
sub
mov
add
add
jne
mov
sti
push
mov
mov
inc
sbb
dec
push
add
sub
mov
jmp
js
inc
mov
xchg
test
repnz
sti
rcrl
fmul
push
and
add
push
bound
outsl
rcrb
add
fisubs
mov
aad
call
bound
call
add
add
add
push
and
jo
sub
jae
jl
lods
js
cwtl
pusha
lret
add
lock
call
xchg
jne
jle
jae
or
dec
lea
sti
ljmp
addb
test
cmp
add
popf
idiv
int3
sbb
jbe
inc
adc
jmp
idiv
dec
ret
fildl
inc
lret
cmpb
je
clc
jne
mov
sbb
call
rcr
test
push
stc
inc
int3
pusha
jecxz
sub
mov
jns
jb
adc
inc
sti
pop
jmp
inc
ret
outsl
cli
add
ss
adc
cmpsb
cmc
testl
pop
mov
aas
sub
mov
sbb
jbe
add
pop
xchg
and
xchg
push
fadd
sub
pushl
sub
sti
gs
cld
cli
xlat
cltd
pop
xchg
mov
cld
cmp
js
push
loop
scas
inc
test
inc
sbb
inc
mov
call
sub
es
or
add
jmp
scas
sahf
mov
imul
jmp
add
add
add
push
pop
inc
inc
rcrb
gs
xor
repz
and
inc
sub
add
sub
or
push
sbb
inc
add
incl
stos
les
push
sbb
add
sub
callw
and
mov
testl
add
add
insb
mov
call
jecxz
lea
fldl
jb
inc
push
add
cli
push
push
arpl
test
sti
out
inc
xor
call
sub
data16
push
mov
cld
jno
inc
jmp
adc
lret
call
cs
lea
cs
add
fcompl
add
add
add
add
and
add
and
lea
fs
jnp
jnp
adc
je
das
adc
add
add
mov
mov
add
js
xor
xchg
inc
and
sub
aam
jo
shll
xorl
xlat
push
pop
repnz
xor
test
inc
das
jl
mov
aas
and
add
not
or
push
sub
fistpl
xor
xchg
inc
and
arpl
sub
out
out
fimull
inc
and
cmp
flds
push
aas
enter
jnp
sub
cmp
idiv
ljmp
and
ljmp
mov
inc
push
adc
jle
call
int3
and
xchg
out
add
adc
sti
mov
add
xchg
and
mov
sub
popf
jno
jle
or
sti
jge
ss
addb
push
sbb
sbb
fs
push
xchg
hlt
nop
out
inc
sub
jle
lahf
lcall
push
sbb
cs
out
sahf
out
and
adc
icebp
sbb
add
sub
or
hlt
add
pop
pop
enter
cld
int
jl
outsb
inc
loope
add
jge
scas
push
gs
andl
mov
cmp
add
insb
imul
scas
pop
sbb
mov
test
mov
add
std
dec
sub
std
dec
xor
add
add
add
push
adc
adc
sub
push
inc
mov
loop
insb
imul
sub
popf
sbb
cmpsl
and
mov
inc
int
and
xchg
imul
idivb
add
out
bound
scas
lcall
jmp
inc
add
jecxz
and
sbb
inc
pop
ret
add
add
add
add
push
mov
sbb
je
jmp
add
push
inc
cmp
sub
mov
adc
push
dec
push
inc
loopne
add
adc
adc
sti
incl
pusha
adc
addb
sub
dec
mov
push
push
movsl
pop
je
sbb
cmc
adc
inc
arpl
gs
push
lea
inc
pop
push
push
sub
sub
aas
std
jne
es
enter
roll
pushw
jge
push
dec
add
push
ja
sub
jmp
jl
aas
sti
inc
aas
jne
outsb
or
jecxz
rolb
sub
decl
mov
pop
cmp
into
cli
aas
push
push
inc
sub
add
add
add
add
or
sub
aas
sub
adc
mov
idivl
sub
jmp
add
sbb
popf
or
jmp
xchg
lahf
data16
add
pop
or
mov
pop
jmp
add
pop
jmp
add
movsb
fstpt
ror
call
test
pop
insb
mov
sub
inc
adc
adc
jb
mov
or
pop
xchg
add
lahf
stc
sbb
add
mov
add
sub
cmp
inc
sarl
test
jmp
sti
sbb
and
jmp
and
lock
add
jg
inc
pop
jns
test
add
sbb
sbb
jns
jmp
popa
sbb
insl
gs
add
adc
or
pop
add
mov
in
lcall
xor
sbb
repnz
xchg
call
jg
or
test
pop
add
call
and
add
push
push
out
push
push
sahf
aas
std
je
push
mov
pop
call
mov
dec
push
jnp
mov
insb
cmp
int3
push
adc
sbb
inc
mov
mov
and
push
add
testl
add
outsb
add
sub
je
lret
dec
sbb
add
dec
ljmp
push
jne
pop
pop
divl
xchg
adc
sub
decl
sub
add
jnp
out
jle
stc
popf
cmpb
sub
shr
ror
dec
fstps
inc
xorb
test
sarb
sti
fcmove
mov
gs
inc
ret
out
add
sub
cmp
repnz
or
or
sti
pop
sub
sub
test
adc
adc
add
push
ja
sub
jmp
add
cmp
push
adc
adc
fdivl
and
mov
adc
sub
jmp
add
jge
test
pop
inc
out
nop
mov
mov
jno
fdiv
call
mov
jge
shll
or
fistpl
jmp
jl
call
add
add
add
mov
pop
add
jns
sarl
ret
mov
cmpb
jmp
push
data16
cld
jmp
mov
mov
jmp
mov
ds
add
pop
insb
add
lret
cmpsl
inc
dec
push
cld
mov
and
xlat
mov
pusha
push
mov
adc
inc
lahf
pop
mov
jmp
add
add
add
add
jmp
aam
jecxz
es
bound
mov
sbb
add
mov
stos
xor
add
lret
cmpsb
inc
cltd
xchg
loopne
jmp
ja
pop
add
fildll
add
mov
in
add
mov
mov
rcrl
mov
data16
mov
or
add
in
inc
mov
xchg
mov
inc
xchg
pop
mov
lretw
mov
and
pop
xor
push
mov
jno
inc
sbb
mov
lcallw
cmpsl
ljmp
loopne
inc
in
scas
ds
sub
mov
jnp
push
jmp
mov
incl
inc
mov
add
cwtl
test
pop
inc
jge
push
mov
fldcw
push
jmp
inc
pop
mov
or
mov
add
pusha
xchg
sahf
stc
adc
push
mov
rol
add
and
les
jecxz
fwait
ljmp
dec
jne
sub
mov
jnp
test
add
mov
mov
sub
mov
in
lret
mov
jno
ja
jmp
jnp
sbb
add
mov
add
jns
mov
popf
jae
cwtl
insb
push
jmp
jl
aaa
jmp
cmp
jns
shll
int3
push
ud2
out
popa
pop
push
jmp
add
add
add
mov
jmp
add
movsl
and
loop
jmp
pop
bound
and
mov
add
xchg
xchg
inc
icebp
jno
addr16
xor
mov
cs
bound
sbb
scas
or
pop
add
xchg
inc
fldenv
mov
jmp
cmp
pushf
mov
pop
bound
xor
inc
add
push
add
xchg
inc
shl
dec
or
sub
push
sub
bound
sub
add
pop
icebp
add
cltd
data16
sbb
in
lcall
add
add
and
xchg
mov
jmp
add
xlat
and
lods
lcall
add
stos
xchg
mov
mov
and
data16
in
mov
in
cltd
inc
cmp
out
add
xchg
mov
lock
and
adc
mov
sub
repnz
sbb
sub
testb
push
negb
push
in
inc
fs
aam
add
negb
mov
popa
mov
adc
mov
add
pushf
test
pop
cmp
sub
pushf
mov
movsl
jbe
idiv
popa
mov
into
mov
out
decl
mov
jmp
xchg
out
inc
jl
in
call
fidivrl
mov
sub
xor
add
add
add
sub
or
nop
pop
jmp
jnp
adc
add
push
fildl
sub
jle
aad
ret
mov
popa
mov
push
jmp
jnp
push
jmp
test
sub
cmp
sub
dec
jge
jl
lea
popa
pop
insb
push
pop
jmp
mov
fwait
dec
add
pop
bound
bound
dec
ret
and
rcl
lods
inc
xchg
mov
cmpsl
fs
inc
cmpsl
or
mov
add
outsl
mov
cmp
xchg
inc
int3
fs
sbb
shlb
je
lea
stc
add
or
add
cmpsb
addb
sarb
push
lods
lods
jge
sub
mov
aaa
cmpsl
int
cs
in
fsub
add
mov
leave
and
in
rolb
lahf
xor
hlt
lahf
jae
aaa
jbe
add
cmp
pop
call
mov
mov
adc
push
jmp
repnz
sub
dec
call
pop
mov
pusha
push
mov
pop
mov
add
mov
lea
out
sti
ljmp
cmp
call
pop
pop
pop
test
adc
je
add
jnp
loopnew
call
inc
stc
add
sub
jnp
fcmovb
xor
fisubrl
jl
stc
cwtl
jbe
fisttpll
cmpsb
scas
ljmp
jge
lea
iret
dec
add
sub
add
sub
jnp
out
cld
mov
rorb
cmpsl
or
sub
decb
idiv
out
lods
call
adc
jne
jne
sti
mov
clc
das
test
xacquire
xchg
xchg
imul
aas
add
xchg
and
lods
pop
fs
insl
insl
pop
pop
hlt
outsb
mov
add
scas
fistps
jmp
xorl
popa
jns
adc
xchg
mov
add
mov
add
xchg
stos
das
movsl
push
pop
std
insb
outsb
pop
insb
outsl
cmp
cmpsl
fidivs
sbb
popa
add
pop
mov
cmp
push
jmp
jo
pop
xchg
sti
dec
jb
pop
push
add
mov
je
xlat
js
std
lahf
xlat
ret
xlat
je
mov
add
mov
xchg
push
popf
clc
popf
rcrl
testb
push
cs
add
or
jg
or
pusha
repz
out
pop
test
jb
divb
cs
test
sub
loopne
sbb
pop
mov
add
repz
pop
roll
stc
xchg
xor
adcl
mov
jge
shlb
jb
fwait
idiv
xchg
and
jbe
test
pop
shlb
mov
pop
and
js
and
push
push
add
repnz
and
or
xor
mov
or
fs
out
mov
xor
testl
inc
jbe
sub
xchg
popf
sbb
jne
das
mov
lea
out
sub
jge
sub
scas
es
sti
sbb
out
ret
js
cli
int3
into
pop
mov
iret
cli
fimull
int3
pop
jp
enter
push
mov
jg
pop
repz
incl
jns
aad
and
pause
test
pop
push
adc
jns
or
mov
insb
mov
xor
lcall
xor
jmp
add
xchg
fwait
pop
loop
call
mov
add
mov
es
pop
add
stc
push
jmp
sub
xchg
sub
mov
and
dec
xchg
and
mov
xchg
and
and
add
enter
pop
ss
xlat
out
jl
adc
add
lahf
push
jp
pop
jmp
loopne
or
xchg
imul
add
shll
pop
fucomi
add
add
sti
add
loopne
push
aam
jne
stos
cmp
add
add
add
mov
ja
jmp
es
add
mov
cli
into
cmp
divl
jne
mov
or
add
in
stc
push
add
push
add
ss
jle
not
mov
call
push
ret
idiv
pop
push
movsl
ljmp
push
call
jnp
idiv
cld
and
xor
adc
mov
dec
call
ret
or
push
test
add
fildl
mov
addl
dec
inc
push
xor
adc
cmp
sbb
adcl
dec
dec
rolb
xor
rolb
wbinvd
mov
cmp
out
and
xor
div
jns
add
sbb
jp
divb
sub
jl
sub
pop
push
adc
adc
inc
sub
cmc
jle
cmc
jmp
shrb
mov
inc
imul
insl
test
mov
bound
je
loope
dec
jb
je
jne
xor
cmc
cmp
and
jle
xor
add
adc
cli
sbb
idiv
ljmp
test
sub
push
pop
mov
cs
pop
push
push
jbe
ljmp
inc
push
inc
push
push
adc
es
lret
int3
sub
add
jns
sub
xchg
pushf
fwait
adc
xchg
stc
gs
es
and
out
test
lcall
ret
add
pop
loope
add
push
xor
popa
cmpsb
jle
mov
jle
fwait
lahf
scas
push
mov
adc
and
and
les
push
xlat
cltd
add
lock
out
push
pop
push
mov
cmp
cmp
in
sbb
ja
add
pop
test
leave
adc
xchg
pop
jle
pop
add
add
add
add
xchg
adc
and
or
cmp
and
add
sub
pop
stos
test
addr16
aad
push
callw
adc
fs
mov
loopne
dec
adc
push
sti
cld
mov
fbstp
cmp
mov
shll
daa
jl
add
insb
repz
test
scas
aaa
lea
mov
lea
push
jle
mov
inc
adc
test
scas
push
mov
inc
jne
faddl
je
loop
test
or
incb
adc
add
je
mov
push
add
mov
jnp
or
icebp
mov
mov
fwait
jl,pt
dec
add
icebp
lahf
dec
sub
or
mov
cwtl
jnp
or
adc
scas
inc
stos
cmp
ret
lahf
lret
lds
and
cmpsb
inc
stos
sbb
mov
and
and
incb
or
jb
ljmp
add
xor
sti
sbb
add
add
add
add
fdivrs
sti
fisubl
data16
lsl
jae
and
mov
repz
sbb
jmp
aam
bound
ljmp
and
push
sbb
dec
dec
scas
rcll
shll
fsubs
and
and
pop
std
sbb
fstpl
aam
jmp
rolb
add
fldcw
repnz
sbb
xor
idivb
int
int
and
scas
sub
jb
sti
mov
clc
fs
std
outsb
lds
jns
dec
movsb
mull
pop
je
and
int3
repz
add
clc
je
inc
roll
sub
push
pop
bound
pop
leave
sub
sti
dec
xchg
push
jae
in
mov
clc
cli
jb
mov
sti
popf
jne
call
jb
mov
push
mulb
jg
test
sub
mov
xlat
or
lea
loopne
ret
or
add
add
cmc
notb
and
js
idiv
xchg
push
pushf
xchg
push
add
clc
ljmp
and
rolb
add
add
add
add
add
cmpsb
test
dec
push
xor
dec
testb
rcrl
add
jo
add
in
add
xchg
fdivrp
mov
push
xor
push
cmc
dec
push
mov
div
adc
push
mov
fnstcw
add
or
adc
inc
cmp
out
es
mov
test
addb
add
add
sub
incl
and
inc
jne
pop
enter
or
cli
pop
daa
add
or
mov
or
push
jns
sbb
pop
ds
or
jne
xchg
mov
pop
xchg
sbb
jmp
enter
cld
adc
clc
ja
enter
repnz
ljmp
sti
jne
aas
jne
xchg
sbb
ret
add
cmp
scas
ficomps
arpl
add
stc
fildl
pop
pop
jmp
psllq
cwtl
sub
out
lcall
adc
movl
fucomp
add
push
pop
adc
rorl
stc
mov
movsb
mov
and
pop
jmp
mov
inc
cmc
mov
daa
call
add
add
add
sub
hlt
sub
jmp
testb
test
mov
fbstp
sahf
dec
sarb
adc
call
push
sbb
adc
clc
in
dec
adc
jmp
mov
jmp
push
sbb
ret
mov
jno
sahf
xchg
adc
sti
jmp
mov
add
add
add
add
pop
add
bound
sti
mov
cmpsb
dec
xor
pushf
cmp
test
fxtract
je
dec
adc
imul
test
sbbl
data16
xorl
sbb
sub
add
push
and
push
fsubp
add
adc
pop
outsl
inc
inc
setl
repnz
ja
aas
clc
inc
dec
das
in
inc
dec
add
sti
jns
or
stc
inc
jne
dec
and
push
inc
push
je
ljmp
fdivrp
xchg
mov
xchg
mov
mov
dec
decb
sub
inc
xchg
mov
mov
dec
add
sbb
add
add
sub
aas
out
test
mov
sub
add
or
aas
sub
cmpsb
jmp
and
or
jmp
cld
popf
incl
rol
out
jne
jmp
repnz
stos
adc
mov
push
mov
mov
addr16
out
mov
push
mov
sub
in
push
f2xm1
negl
jmp
inc
notb
into
inc
add
pushf
push
add
pop
sub
popa
daa
out
sub
mov
and
and
add
mov
add
or
inc
out
jg
sub
mov
data16
jmp
and
push
xor
adc
add
negl
sub
pop
jmp
lods
sub
jmp
fisubs
jmp
add
add
add
stos
idiv
inc
sub
add
and
loop
or
hlt
mov
sub
pop
mov
pop
add
mov
imul
pop
xchg
cld
push
bound
sbb
cmpsb
mov
pop
add
jp
jmp
sub
add
daa
pop
inc
popa
mov
jmp
mov
ja
jmp
sub
je
test
add
sub
je
test
add
sub
jne
xchg
icebp
stc
add
notl
or
xor
mov
add
inc
pop
mov
fs
dec
mov
adc
push
push
test
adc
test
push
cli
push
icebp
incl
jl
inc
sub
add
incl
es
pop
adc
scas
mov
outsb
adc
sbb
loopne
and
mov
pop
bound
dec
nop
add
adc
jns
rcrl
jne
sub
sub
jge
pop
sti
lods
stos
repnz
dec
mov
pop
int3
adc
stc
lea
mov
rorb
jge
idiv
out
es
insb
icebp
adc
divl
roll
add
add
add
sub
decl
cmpsb
jecxz
ljmp
test
sub
push
add
or
jle
add
jg
pop
mov
addr16
ljmp
adc
cmp
pop
jle
xlat
sahf
sub
pushl
stos
pop
add
or
add
pop
aam
rclb
add
cmpsb
stos
or
add
sbb
mov
inc
mov
add
push
outsb
mov
in
pop
xchg
sbb
ret
sub
jmp
lods
pusha
icebp
jb
dec
cmp
sub
jmp
lods
inc
add
jmp
movsb
adc
aas
ficoml
dec
adc
sub
jmp
xor
cs
mov
jmp
add
fwait
incl
dec
pop
add
popf
cmp
add
pop
add
xor
movsl
jmp
std
push
add
jl
call
fstpl
callw
adc
fstpl
inc
jmp
adc
out
jge
call
xor
cli
jb
and
sub
cli
jmp
imul
pushf
jle
xor
out
gs
scas
xor
clc
mov
jle
adc
push
or
fs
cli
add
pop
test
push
idiv
sbb
jmp
mov
dec
inc
idiv
fs
jmp
call
cmp
scas
add
inc
xchg
mov
add
andl
aaa
and
mull
pop
xor
shrb
add
xor
push
sbb
mov
inc
or
add
add
add
scas
sbb
add
adc
in
add
mov
idiv
les
out
sub
adc
adc
sti
ja
sub
sbb
push
mov
mov
cli
mov
or
repz
clc
mov
push
movl
aas
orl
cli
jae
cmp
test
call
inc
fiaddl
pushl
dec
add
aad
ds
iret
xchg
xchg
jle
jecxz
push
sub
lods
pop
in
mov
pusha
mov
and
add
pshufw
into
fnstcw
and
add
out
out
sub
sub
cmc
and
add
add
add
sbb
xchg
push
sub
sub
mov
sti
enter
call
ret
stc
sbb
sub
xchg
icebp
adc
div
sub
cmc
movsl
hlt
mov
cwtl
mov
push
movsl
mov
fnstcw
scas
add
sub
lea
call
add
lret
mov
jmp
inc
addl
add
add
stos
fcomip
pusha
mov
jno
rcrl
push
sti
hlt
popa
sbb
jmp
jmp
pop
shr
iret
push
sbb
jae
add
add
test
adc
in
subl
and
fs
jae
sahf
add
jle
ss
pop
dec
xor
jmpw
adc
cmp
add
bound
inc
xchg
call
add
add
add
idiv
les
jmp
xchg
pop
hlt
xchg
je
xor
adc
test
pushf
add
pushf
fwait
add
xchg
or
jae
cwtl
pop
cld
add
repnz
pop
add
ficoms
add
imul
sub
sbb
testl
push
movsb
inc
test
mov
cli
incl
inc
adc
test
idiv
lcall
imul
push
bnd
imull
xor
push
adc
cmp
jge,pn
out
jge
movups
inc
or
ffree
mov
jge
sti
not
cmc
jns
and
out
sub
add
iret
arpl
sub
xchg
add
clc
out
xor
pop
add
mov
dec
aad
add
clc
xchg
std
sub
cli
fistps
addl
jge
call
test
jae
mov
jbe
add
pop
inc
or
call
cld
push
jae
mov
ja
add
pop
adc
jmp
arpl
lds
cwtl
loope
stos
sbb
in
adc
addl
dec
ret
call
add
add
add
sub
add
mov
or
mov
sub
add
jge
stos
pop
fucompp
xchg
shrd
add
jmp
call
fwait
mov
add
sub
jmp
pop
sti
pop
cs
inc
xchg
jle
je
scas
fsub
jo
in
mov
sub
je
lods
call
out
movsl
in
out
add
adc
push
fisttps
or
pop
mov
addb
sub
sti
cld
sbb
sub
jnp
leave
sub
fidivrl
jmp
or
jae
push
sbb
pop
test
adc
pusha
es
add
call
pop
mov
inc
inc
push
add
add
jp
maskmovq
testl
adcl
test
sbb
add
add
sbb
mov
push
mov
and
add
fs
add
pop
inc
ret
sub
test
mull
pop
and
rolb
or
cwtl
hlt
push
test
filds
mov
mov
decb
xchg
push
and
push
mov
es
incl
mov
add
sub
sarl
dec
fiaddl
ljmp
ljmp
and
sbb
mov
and
xchg
hlt
cs
sub
pop
push
mov
cmp
dec
js
cmp
sbb
cmpsl
mov
push
mov
clc
punpckhdq
sti
mov
push
popa
xor
push
xor
cld
rorb
mov
repz
testl
jo
out
mov
rorl
aas
addr16
ret
pop
cltd
repz
jmp
add
insb
shlb
in
push
sub
mov
adc
jo
push
inc
test
clc
insl
adc
add
fbld
ret
in
jmp
sti
mull
pop
js
cs
insl
mov
cmpsb
fdivrp
rol
icebp
hlt
std
push
outsb
add
lahf
in
sub
aam
movsb
scas
lock
pop
fs
xor
jo
imul
dec
mov
mull
stos
sub
inc
jmp
ljmp
out
dec
mov
std
imul
add
gs
xor
jae
lods
icebp
jae
add
or
add
call
mov
bound
xchg
inc
aad
xchg
iret
sub
pushf
jg
sub
add
or
in
push
xchg
lea
dec
ret
add
xchg
sbb
sbb
loopne
mov
loop
or
testl
xlat
sti
add
mov
sbb
cmp
push
sbb
sbb
adc
mov
stos
loop
in
adc
mov
mov
ret
push
mov
test
cmc
jne
adc
mov
call
pop
adc
ret
data16
push
mov
addr16
adc
lods
sub
sub
xchg
adc
repnz
pop
ds
add
addl
sti
insl
jo
pop
add
inc
adc
lods
ja
push
out
mov
push
jo
or
popf
in
mov
inc
or
add
mov
jae
jnp
jp
jge
das
push
cmpsl
divb
sbb
call
sbb
or
test
sbb
das
ljmp
pushl
gs
test
neg
roll
scas
loop
adc
stc
adc
jle
mov
jmp
out
fcoms
int3
ljmp
mov
ljmp
pop
rcll
outsb
rclb
and
pop
mov
shlb
icebp
xchg
repz
shl
mov
add
add
add
and
loope
mov
loopne
jo
mov
add
test
mov
sub
fcomip
lods
fidivrs
sub
mov
pop
add
in
stos
sub
or
push
add
jo
inc
in
in
push
insb
jo
test
dec
aam
push
push
les
ret
inc
inc
mov
lods
jb
cmp
out
add
add
sbb
adc
sub
shr
push
or
mov
rorl
faddl
stos
sbb
mov
decb
xchg
add
dec
mov
add
ret
imul
xchg
sbb
mov
pop
notl
push
pop
pop
loopne
call
sub
imul
add
add
add
mov
out
jmp
cmp
add
rclb
push
lods
jns
imul
push
jge
cld
shl
add
add
addb
add
sub
sub
mov
aas
movb
imul
add
idivb
add
std
rcrl
pop
or
scas
jne
jge
adcl
sub
push
inc
cs
push
push
daa
aaa
pop
or
xor
rclb
out
jl
insl
mov
test
inc
push
gs
leave
jge
xchg
jg
sub
incb
push
enter
push
in
mov
pop
xchg
xchg
push
add
jmp
loopne
add
xor
mov
fisubrs
lock
fs
pop
lret
sbb
jnp
xor
mov
sub
jmp
rorl
pop
sarl
fbstp
and
inc
dec
outsb
add
std
xor
add
ja
inc
mov
cs
add
xchg
aaa
add
xlat
and
stc
add
call
sub
jg
cmp
aaa
das
push
mov
ljmp
jns
fs
jg
jge
xor
imul
inc
pop
sub
pusha
push
jle
sub
mov
mov
mov
sbb
out
out
add
or
pop
sub
fbstp
lods
cmp
jb
ja
jg
scas
push
or
add
stos
inc
hlt
jmp
aad
aaa
daa
push
pop
scas
add
push
add
inc
add
add
or
push
clc
orl
add
mov
push
add
and
rcrb
adcl
add
jns
divl
push
iret
pushl
push
pushl
or
mov
loop
add
and
jmp
fmuls
push
and
sbb
pop
mov
faddl
loopne
xlat
mov
decl
add
xchg
ljmp
mov
es
jp
sub
jle
xchg
jle
xchg
fwait
or
push
mov
ljmp
add
jp
aad
or
cmpsb
testb
loopne
mov
push
xlat
incl
jge
adc
sbb
dec
dec
loop
xchg
icebp
movl
or
xchg
xor
pop
sarb
loopne
and
scas
xchg
and
adc
sub
mov
push
or
sbb
jnp
sub
or
fstpl
cltd
pop
jmp
add
add
add
or
ss
jns
push
sbb
cwtl
insl
dec
into
fisubl
sbb
xor
iret
mov
lret
cmpsl
mov
pop
call
sahf
sub
fcmovu
mov
pusha
xor
sbb
push
rcrb
mov
insb
stc
adc
call
sub
pop
sub
sub
daa
sub
into
xlat
bnd
push
adc
jb
xchg
adc
stos
mov
cmp
cli
scas
jb
add
sub
ljmpw
sub
or
jo
or
pop
fnstcw
pop
cmp
cmpsb
andl
xor
pop
cmp
sub
add
push
add
pushf
addr16
dec
fildl
stc
add
xchg
mov
inc
cmc
mov
or
mov
or
lret
add
lock
pop
popl
jecxz
mov
jmp
mov
cli
incl
adc
cmp
and
cmp
pop
test
mov
cmp
shll
divl
pop
adc
mov
mov
movsl
inc
adc
pop
call
inc
pop
lds
sti
adc
pop
mov
sbb
mov
testl
dec
data16
push
sub
int3
cli
lahf
lret
and
ret
cmc
add
sbb
cmp
jbe
cmpl
cmp
scas
jne
add
sarl
add
add
add
stc
mov
pop
and
push
je
pushf
or
and
push
sbb
xabort
dec
jne
sbb
push
push
push
or
sub
pop
mov
cmpl
jo
sbb
push
std
and
pop
inc
inc
pop
cmp
dec
jmp
push
add
sbb
mov
stc
loopne
gs
sub
insl
mov
xor
xchg
pushl
fwait
jbe
sub
les
mov
jns
std
adc
jmp
cmp
nop
dec
add
int
fiadds
rorl
xor
mov
pop
add
lahf
imul
sub
xlat
jg
cmc
dec
xchg
add
sub
mov
sub
fcomip
and
lock
rolb
sub
push
aam
into
fdivr
idivb
push
pop
test
divl
inc
inc
sub
or
add
addr16
outsl
mov
ja
xchg
fists
xlat
adc
jmp
sub
or
std
cmpsl
test
test
cli
out
mov
push
push
idiv
add
inc
push
fwait
aam
fsubrs
sub
mov
cmc
mov
push
idiv
sub
shrl
and
inc
adc
fimull
mov
lgs
or
and
nop
fmull
add
ret
xchg
dec
pop
adc
pop
pop
test
shrl
xchg
add
and
incl
aam
decl
incl
rcll
cld
sub
add
ret
sbb
jg
and
sub
push
std
xchg
pop
lock
and
lahf
cli
mov
aad
sbb
idiv
je
mov
idiv
add
sbb
sbb
xchg
sti
or
sub
mov
sub
mov
sub
push
stos
in
je
mov
xchg
inc
xor
cmp
leave
push
cmp
push
xacquire
cmp
add
lea
add
lock
inc
andl
mov
mov
test
ja
pop
stc
or
mov
cld
xor
movsb
repz
arpl
mov
add
cmpsb
sub
mov
add
rorb
jmp
sub
adc
in
fiaddl
movsl
insb
leave
insl
sub
sbb
rorl
dec
fsqrt
and
xor
fsubl
and
add
sub
lods
sbb
add
mov
gs
daa
dec
sbb
sub
dec
in
adc
cld
cli
push
mov
and
jmp
dec
sbb
pop
aad
loope
fcoms
lcall
icebp
add
repnz
fwait
mov
jmp
daa
es
sub
sub
mov
adc
sbb
rcl
call
es
adc
shl
and
add
popf
xor
orl
xchg
aam
sbb
outsb
sti
pop
xor
jae
and
or
sahf
and
cmc
test
and
add
lock
cmc
decl
scas
dec
adc
fimull
or
stc
testl
add
mov
sbb
loope
and
mov
mov
dec
adc
iret
mov
add
add
add
add
adc
mov
jmp
test
into
jle
add
jg
filds
test
sbb
pop
or
inc
notl
cmp
clc
div
jp
xor
jg
xchg
push
stos
das
bound
scas
dec
add
sub
mov
sub
mov
es
filds
and
adcb
dec
inc
hlt
mov
jnp
std
lds
push
add
bound
ret
fs
ljmp
jmp
mov
pop
xchg
cmp
adc
pop
cmp
lods
sub
sbb
movsl
sub
inc
jo
lods
sbb
xchg
mov
fnstcw
pushf
sub
fwait
stos
call
outsl
xor
scas
fimuls
outsb
std
movsb
pop
pusha
mov
push
stc
ret
mov
jno
shl
adc
sbb
mov
outsb
js
cwtl
stos
adc
sbb
and
pop
inc
push
lahf
or
pop
rorl
push
lret
pushl
and
leave
jg
inc
shrb
jle
sub
and
stos
add
inc
vmovd
jl
sbb
in
int
mov
popa
leave
je
add
push
dec
sar
ss
mov
fs
fs
stos
mov
jl
ds
jmp
sub
mov
aaa
or
daa
add
pop
arpl
jmp
inc
xchg
xchg
fsts
push
pop
add
test
lret
and
mov
add
fnstcw
bound
bnd
push
mov
imul
add
add
add
push
loop
test
testb
ljmp
mov
mov
sahf
loop
inc
and
inc
cmp
xor
and
xlat
xor
add
mov
ljmp
push
push
mov
add
add
push
mov
sbb
jecxz
in
cmp
sub
xchg
fstps
mov
xor
les
pusha
add
mov
sbb
mov
call
daa
jb
aad
movsl
push
or
fmull
ljmp
inc
inc
add
mov
lea
cmp
sub
imul
stos
jge
in
jns
sahf
lds
fldcw
mov
add
jp
dec
sbb
push
cmpsb
jmp
imul
jg
xor
add
cmc
insl
cmp
repz
cmp
jmp
sub
mov
data16
sub
mov
cmp
cmp
jmp
cmp
or
push
push
sbb
out
sbb
jmp
hlt
movsb
pop
int
jae
insl
add
add
es
ret
mov
sub
mov
lods
ficoms
rolb
push
add
pop
filds
test
pop
add
imul
fnstcw
shll
leave
movsl
rolb
xor
minps
add
jno
leave
nop
loopne
cli
jle
gs
sbbb
pop
loope
add
inc
shrl
lea
dec
in
xor
mov
push
jg
daa
adc
mov
mov
pop
loope
adc
cmp
add
clc
mov
incl
adc
jmp
sbb
add
xor
popf
and
shr
jnp
rorb
inc
push
mov
lret
sbb
ret
sub
enter
add
sbb
loopne
int3
cmc
jmp
sbb
mov
test
jg
xor
pusha
stc
popa
add
loope
stc
fwait
iret
cmc
test
sbb
cmc
jmp
dec
inc
sbb
mov
fstps
sub
sub
xor
sbb
mov
inc
aas
roll
jmp
mov
add
add
add
add
icebp
lock
mov
aad
sub
and
mov
les
repz
push
mov
in
cli
movsl
sbb
push
xchg
jns
cli
xchg
fstl
sbb
ds
or
outsl
jecxz
insl
jno
pop
in
or
clc
add
mov
lock
push
pop
push
xor
fstl
dec
dec
add
fcomps
pop
inc
push
pop
sti
pop
and
adc
pusha
cmp
xor
es
sub
call
pusha
xor
mov
add
mov
icebp
mov
fstl
sbb
mov
sbb
pop
pop
jae
and
jle
lods
pop
std
sub
pop
inc
jno
pop
add
adc
xchg
inc
lret
and
ljmp
adc
cmpsl
iret
or
adc
test
sub
je
push
add
jmp
sbb
cli
mov
sub
cs
mov
mov
int
leave
mov
mov
sbb
sub
sahf
mov
inc
xlat
leave
or
add
mov
loope
pop
aas
mov
push
sub
test
lock
mov
jle
push
sbb
dec
cmp
push
lds
push
mov
cmp
sbb
clc
cmp
add
adc
pop
adcb
add
lds
cmp
cld
popf
gs
cld
mov
pop
xor
add
inc
ds
incl
mov
add
shll
jmp
cmp
pop
andl
cmc
decl
add
inc
cli
shlb
jle
pushl
test
cmc
incl
mov
or
mov
cmpsb
call
jle
sub
jmp
pushl
push
xor
dec
mov
or
add
add
add
add
mov
addl
in
cli
das
add
sbb
aad
cmp
inc
in
jmp
insb
sub
jge
mov
stc
xor
mov
in
jle
lret
sti
subl
add
sub
xorb
cld
or
adc
mov
das
add
call
lock
les
jle
xor
sub
shlb
repnz
in
popf
fdivrp
xchg
popf
add
adc
sub
cmc
ret
call
in
loopne
or
pop
fiaddl
push
testb
sub
dec
mov
enter
lea
add
lea
add
loopne
push
test
inc
jp
add
inc
punpckldq
aaa
adc
mov
sbb
cmp
das
sbb
jno
mov
pushf
push
lds
aam
arpl
xchg
push
sbb
repz
dec
pop
jb
inc
push
or
ret
push
xchg
push
in
cmp
cmp
scas
shlb
or
sbb
negb
sbb
stos
aas
push
cld
pusha
imul
icebp
add
cwtl
inc
xchg
sbb
sbb
add
mov
push
add
dec
test
inc
add
bound
pop
cld
mov
add
mov
hlt
mov
mov
inc
sub
inc
mov
rcl
inc
push
adc
xorl
push
sbb
add
mov
fs
add
add
aam
je
rcrl
inc
adc
pop
adc
push
mov
fmuls
cld
mov
mov
enter
out
les
or
dec
inc
cld
mov
ja
out
fisttpl
movsb
ret
jmp
push
xchg
arpl
je
cmp
xchg
push
jmp
add
adc
ss
ljmp
add
add
add
add
xor
ljmp
cmpb
aas
mov
jae
loope
push
es
mov
sub
fmuls
xchg
or
ror
sti
sub
sti
push
call
xchg
and
push
pop
push
jmp
out
shrl
mov
mov
pushf
xchg
mov
xchg
mov
test
add
add
add
cmp
inc
sub
aaa
inc
xchg
mov
adc
mov
lock
pop
outsb
ret
mov
adc
aad
xchg
fwait
aad
xor
xchg
in
call
lods
adc
inc
in
pop
ss
fst
add
sbb
inc
cmpsb
out
jmp
xor
les
push
cld
loopne
sub
push
pop
clc
rolb
rcll
mov
add
lcall
sub
imul
jmp
loopne
and
jo
adc
sub
es
pop
shl
pop
adc
test
pushf
sub
push
add
jno
add
leave
shl
pop
aaa
sub
stos
adc
sub
or
aad
dec
call
adc
add
fcom
add
mov
and
loopne
mov
jns
nop
fldcw
mov
incl
and
mov
and
jmp
shl
mov
mull
dec
scas
mov
sarb
add
lock
add
or
rolb
cld
jmp
mov
mov
inc
sbb
lea
xor
jmp
cmp
and
mov
sub
cmp
ret
je
mov
jl
mov
lods
adc
popf
aas
sbb
das
push
hlt
and
jne
cmp
rorb
outsb
or
add
js,pn
and
pop
push
enter
fdivs
add
les
push
mov
push
and
loop
outsl
mov
aaa
adc
sbb
enter
in
cmc
mov
jl
icebp
test
std
add
cmpsb
cmp
sbb
push
sub
dec
or
jne
js
out
loope
and
lock
xor
inc
mov
adc
ds
mov
sbb
sti
sub
mov
add
add
add
movsl
sbb
fdivp
je
mov
in
cmp
and
std
inc
ds
movsb
cmp
add
outsl
inc
test
pop
sub
outsl
and
outsl
sbb
loope
jmp
test
sub
aaa
xor
dec
aam
popa
mov
movb
cmpsb
hlt
adc
jmp
add
cmp
loop
dec
or
mov
xchg
xchg
insl
push
sub
hlt
idiv
cld
idivl
mov
cld
mov
adc
adc
or
cli
push
stos
cmp
jmp
mov
cmpsb
pop
xor
push
push
insb
lcall
hlt
pushf
sub
cli
movsb
xor
inc
loop
or
inc
jl
fisubrs
cwtl
popa
or
aad
leave
inc
pop
dec
pop
cmp
mov
cli
push
dec
push
in
pushl
cld
test
inc
outsl
pop
mov
mov
add
jae
or
push
or
jle
call
dec
mov
mov
cld
jae
int3
xchg
div
mov
jnp
dec
mov
add
add
add
add
cmp
sub
mov
mov
push
sub
adc
test
or
cli
ret
push
xlat
cli
int
cwtl
inc
sub
std
add
inc
add
out
pop
imul
cld
test
pushl
cli
xor
ljmp
push
pop
push
adc
xchg
push
inc
in
andl
ljmp
sub
mov
mov
push
aad
inc
sbb
mov
mov
dec
sub
xor
popf
mov
in
or
jmp
pop
jmp
insl
shll
sub
jo
dec
pop
jmp
aas
ljmp
inc
xchg
mov
add
add
add
add
ja
loope
cmp
jb
xor
call
cmpsb
adc
xor
outsb
push
sbb
fwait
adc
in
ss
mov
dec
ss
jo
push
hlt
jmp
mov
out
ss
or
push
add
sbb
bound
or
sbb
aas
rcrb
dec
lods
cli
out
lret
jb
mov
aad
mulb
into
add
mov
push
lret
ljmp
adc
insb
adc
add
mov
cld
loop
cmp
loop
dec
outsl
repz
fucomi
or
and
sub
mov
adc
adc
fnstsw
lock
loope
and
add
pop
mov
sbb
jl
fwait
jnp
add
test
mov
fprem1
incl
js
and
jp
and
data16
jne
stos
sar
mov
jmp
cmc
jne
aad
or
sbb
ljmp
movhps
adc
xchg
imul
jmp
or
movl
jnp
adcb
cmp
int
lcall
inc
or
cvtpi2ps
cmp
xor
add
xor
add
mov
cli
adc
das
push
adc
inc
iret
adc
enter
loopne
jl
loope
insb
pop
mov
outsl
dec
hlt
pop
and
sti
lods
sbb
dec
out
and
jl
xchg
icebp
adc
xor
lret
inc
mov
inc
aaa
imul
pop
cwtl
decb
cmpsl
test
cli
jne
aas
cld
sbb
gs
inc
push
or
pop
push
stos
xor
mov
jmp
inc
pop
sbb
loope
pop
sub
scas
fcomip
mov
jmp
fisttps
add
mov
pop
out
lret
lret
lods
fisubrs
add
cmpsb
sub
cmp
in
mov
insl
sub
xor
add
imul
fdivrl
aad
add
mov
ja
mov
lea
rcr
inc
jns
pop
add
cmp
mov
fistpll
pusha
in
scas
out
sbb
inc
cli
jmp
pop
cld
cmpsb
add
pop
pop
push
or
mov
or
add
es
scas
add
sub
pop
xor
mov
shrb
add
add
add
add
push
mov
sub
jmp
hlt
pop
add
mov
mov
mov
jbe
jp
fdivl
mov
lcall
sbbl
ret
hlt
cmove
mull
mov
inc
push
push
lret
loope
mov
in
adc
adc
lret
fs
cmp
and
add
add
testl
push
pop
test
call
dec
fiadds
lcall
cld
jmp
mov
xor
pop
mov
or
gs
jle
hlt
add
test
adc
sub
sub
inc
sti
out
sbb
mov
call
mov
std
mov
add
add
add
lods
push
sar
cmp
jmp
ljmp
movl
or
mov
fiaddl
test
aad
test
inc
fimull
and
ljmp
loopne
jns
enter
jne
cli
popf
add
cmp
lret
pop
rolb
fidivrs
add
addl
mov
out
or
add
pop
data16
and
dec
mov
push
loopne
ljmp
imul
or
popf
and
fwait
iret
adc
jmp
lock
inc
push
imulb
and
mov
ret
call
fsubrl
and
mov
push
inc
fiaddl
imul
or
or
fs
call
pop
mov
mov
ss
inc
pop
add
push
adc
sub
add
pop
or
pop
add
push
push
insb
fisubs
and
mul
jge
jg
and
mov
push
sub
pusha
add
mov
push
and
xor
add
ljmp
push
push
or
push
add
push
push
insb
add
add
cli
mov
mov
cmc
or
jbe
add
addl
sbb
test
leave
cmc
fdiv
adc
push
scas
js
stos
repz
push
or
inc
mov
daa
mov
sbb
jmp
adc
inc
sub
imul
hlt
or
add
scas
or
xor
and
cmc
ljmp
js
sub
lret
lock
xchg
mov
sub
or
insb
sub
mov
sub
mov
ds
xchg
decl
scas
adc
insl
popf
inc
adc
sti
out
jns
orl
into
call
cli
add
mov
xor
mov
sub
sub
lret
rep
push
add
cli
cmc
adc
adc
sub
add
movsl
fnsave
xor
cli
add
mov
push
ss
data16
pop
jmp
sub
add
add
add
in
dec
lahf
movl
lods
cltd
inc
push
call
jge
adc
adc
add
shlb
sbb
cmp
adc
jmp
mov
repnz
pop
cmp
in
sbb
and
lods
xor
adc
inc
push
sub
ss
mov
sub
inc
adc
repz
add
pop
or
xor
sub
jg
inc
fldl
adc
shll
or
ret
stos
sub
jmp
sub
xchg
sub
cld
push
sbb
outsb
icebp
sbb
jmp
cltd
ljmp
aad
xchg
dec
sub
loope
xor
ret
sub
add
add
add
add
movsb
mov
push
insl
insb
je
mov
clc
add
mov
push
div
mov
mov
add
jnp
ret
mov
and
inc
cmpsb
pop
xor
fs
adc
inc
scas
jbe
push
ljmp
mov
xchg
inc
jl
fildll
push
push
leave
inc
lret
cmp
loop
cmc
adcl
push
mov
pop
pop
cld
adc
sbb
push
roll
inc
das
aam
and
jnp
add
sbb
sub
shll
shll
dec
or
xor
call
jno
mov
ljmp
std
xor
cmp
xchg
fxch
incb
rorl
rorl
jp
push
lods
cmpsb
outsb
mov
cwtl
push
add
cmc
or
fnstenv
test
xor
lret
roll
test
xor
xor
mov
ljmp
jmp
or
jl
call
lock
pop
and
fstps
and
gs
and
test
call
add
add
add
sub
insl
sbb
in
dec
jp
or
xor
sbb
subb
int
xor
xchg
adc
stos
movsb
dec
add
pop
ljmp
pop
scas
shll
test
loop
cld
test
aad
pop
push
ljmp
sub
loop
mov
jle
in
adc
add
add
add
add
movsl
cli
push
sbb
insl
jmp
cli
test
pop
or
cmpsb
cli
out
pop
aaa
test
gs
adc
or
cmpsb
cli
mov
je
je
cmpsb
mov
sbb
aad
jg
gs
push
sub
sub
out
shr
mov
addr16
movsl
mov
xor
dec
add
lock
add
push
jnp
dec
into
cmc
jne
pop
pop
test
cmc
inc
cmp
adc
mov
pop
idiv
int3
and
adc
faddl
decl
in
imul
cld
cmc
jl
scas
add
out
testb
idiv
mov
adc
adc
insl
out
into
cmc
mov
cmpsl
xor
jl
adc
add
jnp
mov
and
cmovb
test
sub
cli
imul
jnp
dec
add
mov
or
shll
xor
adc
cmp
mov
leave
cld
mov
movsb
or
inc
stos
call
mov
divl
imul
add
add
add
gs
pop
sti
jle
jae
cli
and
lret
aam
cmp
lret
pushf
dec
adc
repz
lahf
cmp
push
pop
push
lds
xchg
fst
and
data16
cmpsb
inc
outsb
ss
in
repz
movsl
and
pop
cmc
or
or
iret
rclb
xor
add
loopne
cld
and
pop
push
sub
into
and
add
imul
adcl
loopne
xchg
int3
into
adcb
ss
sti
sub
pop
inc
push
and
jg
and
add
cmpsb
incl
ficoml
ret
and
movsl
cli
jmp
xchg
incl
pushf
inc
add
dec
sbb
out
xchg
xchg
mov
pushf
add
adc
test
or
add
jae
sbb
cld
out
out
test
mov
pop
cmpsl
mov
test
cmpsl
or
sbb
mov
imul
and
test
pop
add
push
mov
push
std
lcall
add
inc
cli
mov
jne
ljmp
fs
or
imul
test
test
and
clc
es
and
in
adc
out
divb
es
enter
mov
jne
shlb
incl
add
sbbl
add
sbb
inc
rolb
vmsave
add
inc
clc
jmp
sub
fld1
cmpb
or
inc
fldt
and
sbb
ss
push
sbb
test
or
mov
mov
clc
pop
inc
sub
push
or
stc
dec
add
movl
push
sub
je
mov
pop
push
cmp
jo
mov
call
test
mov
inc
or
xor
jne
jns
sbbl
std
mov
cmp
fdivrp
fsts
xor
fcompl
lret
out
pop
push
mov
dec
lret
adc
add
addr16
lock
and
sti
test
add
sub
cli
fwait
sbb
push
adc
je
cmp
roll
push
sbb
ficoml
mov
stos
nop
mov
lods
cld
test
pushl
pusha
cwtl
inc
int
outsl
push
call
push
push
mov
pusha
sub
fwait
and
or
push
sti
cld
inc
mov
adc
fldenv
cli
faddl
adc
test
add
shr
movsl
cli
push
mov
cli
jmp
sub
sti
jl
adc
out
sub
fwait
nop
mov
pop
xchg
mov
adc
movsl
je
bound
or
pop
adc
mov
adc
add
mov
mov
addl
add
add
cmpsl
mov
push
pop
push
pushl
cld
push
mov
xlat
jae
dec
mov
lock
add
divb
jae
add
jmp
ret
mov
cmc
test
xor
sbb
addl
jle
xchg
sbb
sbb
out
mov
aas
push
mov
sbb
mov
sarl
inc
add
leave
dec
sbb
imul
add
add
add
inc
jnp
jge
idiv
mov
movl
mov
cli
inc
cld
fsqrt
inc
sub
and
call
leave
je
rcll
aam
mov
je
mov
in
pop
dec
or
inc
enter
push
inc
jp
sub
mov
call
add
mov
sub
xor
pop
xor
fsubrs
pop
xor
in
jnp
daa
jo
jb
bound
testb
adc
push
jge
adc
mov
sub
mov
mov
leave
add
jecxz
xchg
inc
ljmp
aad
les
jbe
out
add
adc
jp
hlt
sub
sahf
fwait
mul
adc
fcmovne
jnp
cmpsb
pop
xchg
cli
push
cmp
cmpsl
sub
add
xor
out
sbb
call
das
sub
loope
arpl
mov
xchg
movsb
push
in
ljmp
push
movsb
push
in
rcrb
in
pusha
in
add
ljmp
daa
xor
movsb
push
in
mov
clc
pusha
add
cltd
cli
fstpl
cmpsb
inc
in
xchg
sahf
fwait
jmp
out
add
sub
mov
in
adc
scas
lods
mov
pushf
rcrl
add
fprem1
jne
gs
sub
call
incl
bound
pop
mov
pop
cmp
push
pop
je
pop
orl
add
add
or
in
xchg
mov
xchg
xchg
mov
repz
sbbl
arpl
sbb
cmc
mov
jmp
jmp
lock
cmp
aaa
popf
cli
incl
cmp
add
shrl
cld
push
call
popw
sarl
jg
test
sysexit
push
cmp
add
ds
data16
xor
mov
imul
test
pop
or
shlb
test
cmp
mov
mov
movsl
jg
and
stc
mov
push
xor
inc
jno
jmp
add
aaa
test
sub
cmp
cmpsl
dec
dec
add
mov
xchg
mov
jno
dec
dec
pop
cld
repz
add
add
add
add
fucomip
js
das
pop
ss
test
fbld
and
icebp
dec
les
ljmp
inc
fidivrl
inc
sub
call
ret
idivb
pop
iret
pusha
adc
pop
popa
adc
ret
lcall
lcall
and
mov
es
sub
add
add
add
sub
add
sbb
sub
fucomip
jns
je
jmp
das
adc
sbb
inc
call
out
pop
loop
cwtl
mov
jmp
repnz
cli
vpmovqw
pop
add
stc
scas
push
call
adc
add
pop
add
movsb
ljmp
call
xchg
adc
xchg
pop
add
xor
xor
add
outsl
xchg
mov
sbb
add
ljmp
notl
loopne
cmp
enter
cmp
and
pushf
push
and
push
cmp
jne
les
fisubrs
inc
andl
add
add
add
xchg
sbb
mov
mov
movsb
inc
jo
insl
addl
test
cmc
jne
stos
push
hlt
lods
push
lock
js
call
and
add
stc
repz
das
divl
sub
add
jb
xchg
loopne
sbb
jbe
je
dec
xor
ret
cli
int
les
push
lods
add
xchg
add
add
add
mov
dec
adc
dec
cmp
sbb
xchg
xchg
mov
xchg
and
test
mov
jle
inc
adc
inc
sbb
out
int
fcoml
mov
or
jae
jge
insb
mov
xor
das
push
xchg
pop
or
rcrb
and
xchg
pop
mov
test
ss
stos
sbb
add
add
add
xchg
mov
lods
push
ss
in
sub
cmp
icebp
stos
dec
jns
shlb
jmp
sti
push
xchg
jne
xchg
cltd
add
nop
stos
xor
push
sarl
hlt
jl
mov
xor
cmc
ret
adc
addr16
dec
xchg
xchg
mov
xchg
iret
dec
push
es
inc
xchg
jns
add
imul
ljmp
add
mov
and
stos
lods
or
jp
cs
ficoml
adc
jmpw
sbb
aad
je
mov
cs
je
lcall
aam
mov
ljmp
enter
pop
push
cmp
ja
sahf
cli
add
loope
jmp
fnsave
mov
xchg
sub
jae
call
test
adc
out
jl
leave
adc
dec
filds
sti
dec
push
xor
mov
cltd
mov
jmp
pop
cld
les
addl
aad
and
insl
add
sbb
clc
aam
sbb
dec
or
add
sub
dec
push
cmc
test
and
dec
sbb
sti
jae
enter
rolb
bswap
jb
incl
lods
mov
cli
mov
test
ss
or
mov
pop
aaa
call
in
inc
inc
movb
jp
in
xchg
testl
add
add
lea
ss
lcall
sbb
aad
mov
jle
cmp
mov
test
mov
sti
mull
add
pop
xchg
xor
mov
push
sti
xlat
jne
je
lds
or
push
fildl
arpl
mov
xchg
call
mov
sbb
push
or
dec
dec
mov
add
add
add
push
mov
cmpsl
lock
fnstenv
inc
fisubs
fs
xchg
xor
add
outsb
aam
or
mov
jmp
jnp
mov
jbe
mov
sub
add
cmpsb
and
cmp
test
mov
xchg
incl
and
xchg
pushl
movsb
jp
cmpsb
andl
add
add
or
das
fcomi
mulb
xchg
inc
fst
or
es
je
mov
cli
aam
lcall
cmp
sti
mov
mov
shr
daa
pop
add
cmp
imul
add
cwtl
inc
adc
adc
loopne
pop
test
adc
lahf
sub
cmp
and
inc
add
xchg
cli
into
ljmp
add
jae
enter
es
jne
aam
or
sahf
mov
add
sbb
incl
mov
adc
jo
jmp
pop
fcomip
cmp
mov
imul
and
cmc
sbbl
add
add
add
add
pop
outsb
pop
mov
sub
decb
fdivr
sub
and
cmp
daa
jb
xlat
jb
or
ss
sub
scas
shll
add
aas
jecxz
cmpsb
mov
inc
hlt
sub
or
adc
cmpl
cli
std
sbb
jle
jnp
test
std
test
ljmp
dec
test
push
enter
mov
pop
cli
add
sub
xchg
and
pusha
sub
mov
ss
push
or
mov
or
add
pop
es
mov
xchg
fisttps
cmpsb
hlt
mov
xor
shll
vpmacsdd
add
add
add
xchg
adc
clc
imulb
movsb
sbb
jne
fidivs
xor
sti
jle
mov
lods
bound
sti
movsl
rorb
mulb
pop
insl
dec
push
xchg
in
jp,pn
sub
es
mov
or
sarb
icebp
xchg
jb
in
push
repnz
and
out
mov
xor
mov
loopne
jne
inc
cmc
fcoml
and
mov
jo
cld
xor
adc
sbb
aam
ja
aas
mov
test
sub
mov
ljmp
enter
mov
scas
dec
add
lods
dec
add
movsb
dec
add
lods
dec
add
mov
add
mov
add
mov
mov
add
mov
add
mov
add
mov
add
cmp
mov
cmp
push
scas
cmp
mov
mov
add
mov
add
movsl
cmp
sbb
mov
cmp
lods
scas
cmp
or
cmp
shrl
cmp
lea
cmp
out
lcall
add
lcall
sub
xchg
cmp
sub
xchg
cmp
sub
fwait
cmp
sub
cltd
cmp
sub
cmp
sub
cwtl
cmp
sub
xchg
cmp
sub
test
sub
cmp
sub
test
add
add
add
jg
cmp
sub
cmpb
or
popa
cmp
sub
pop
pusha
negl
out
out
push
cmpsl
pop
addr16
pop
pop
pop
pop
xor
pop
mov
xchg
inc
pop
and
pop
dec
data16
pop
jmp
jmp
and
out
pop
push
pop
pop
xor
adc
xor
sldt
add
add
add
add
xor
out
sbb
in
xor
enter
enter
filds
or
dec
aaa
adc
inc
cmp
ljmp
scas
dec
arpl
scas
dec
add
add
int
xor
push
xor
mov
shlb
xlat
dec
mov
dec
cmp
inc
in
jmp
fwait
dec
add
add
dec
add
add
mov
dec
add
lcall
scas
lret
cmpsl
mov
mov
dec
add
mov
dec
add
add
mov
xchg
dec
dec
add
dec
add
and
cmp
add
scas
cmp
push
scas
cmp
std
cmp
add
cmp
imul
cmp
add
cmp
add
cmp
jb
cmp
pop
cmp
xor
cmp
aas
std
cmp
push
cmp
adc
cmp
adc
cmp
add
cmp
jge
cmp
int
cmp
xor
cmp
jge
cmp
cmp
popf
cmp
cmp
add
nop
ljmp
jbe
dec
add
flds
dec
fimuls
xchg
pop
das
fdivs
lods
mov
jl
jb
push
fdivl
sub
mov
addb
ss
xchg
sbbb
jbe
cmp
test
or
push
sbb
movsl
nop
pop
add
pop
push
adc
js
icebp
push
addb
sub
mov
imul
add
add
add
jae
or
sub
inc
sub
jmp
mov
xchg
arpl
rolb
jo
ljmp
or
loope
je
fucomip
andb
inc
cli
adc
jle
pop
add
mov
lock
xchg
xchg
jae
insl
mov
nop
pop
or
mov
hlt
add
and
lods
push
cmpsl
fwait
das
pop
mov
test
jo
push
pop
dec
xor
sbb
and
xor
jmp
in
or
add
inc
sti
outsb
mov
sbb
icebp
pusha
jecxz
ljmp
mov
jecxz
bound
rcll
ss
test
pop
mov
cli
push
push
loopne
sub
add
jecxz
movsb
cli
cli
out
lds
sbb
outsl
xchg
test
mov
in
push
rcl
shll
cli
mov
popf
inc
mov
lcall
sub
add
add
mov
xchg
xchg
add
mov
jp
jbe
je
xchg
add
movsb
jp
orl
add
jge
xchg
loop
incl
push
sbb
or
mov
inc
mov
and
or
add
daa
cli
pop
cmp
je
mov
jmp
sbb
sbb
xor
adc
add
dec
cmp
jae
daa
jmp
add
xchg
add
add
inc
sub
ljmp
sbb
xchg
mov
pop
mov
inc
sti
add
cmc
jbe
push
std
test
sti
fucomp
xchg
and
addb
jo
out
pshufw
dec
stos
out
jg
lods
cmp
addb
stos
xchg
adc
mov
adc
jne
test
lods
cli
mov
fbstp
add
test
jmp
gs
dec
repz
add
add
add
add
push
je
sub
cltd
add
test
arpl
fucomip
js
xchg
pop
clc
add
sbb
jne
or
pop
and
sbb
fnstsw
das
jo
stc
cmpl
movsb
data16
icebp
movsl
mov
or
push
data16
movb
lods
mov
mov
je
cs
dec
sub
jo
add
and
loopne
pusha
cs
cltd
lods
aaa
add
sub
outsl
insl
pushl
push
push
mov
mov
pop
insl
stc
stos
pop
sti
push
push
aaa
mov
lea
jbe
add
jmp
in
outsb
push
inc
std
push
pop
orb
cli
jmp
mov
mov
adc
push
add
fcomi
pop
out
add
adc
sub
cmp
lods
bound
jo
bound
gs
cmp
push
push
mov
add
int3
enter
push
mov
inc
lret
lahf
shll
inc
in
mov
push
sub
fstpt
jl
repnz
xor
dec
jb
xchg
add
fnstcw
xorl
jbe
orl
mov
lea
fcomip
cmp
mov
decl
lock
test
sub
pop
add
sahf
ds
jl
xor
add
addb
mov
movsl
je
cmc
addr16
inc
pop
movsl
add
mov
sub
xor
jl
and
mov
push
cmp
enter
adc
lahf
cmpsl
cli
in
jo
xor
mov
int
inc
mov
jmp
call
sbb
and
sbb
call
lret
repnz
xchg
das
pop
jge
jmp
dec
mov
jmp
jmp
andl
add
or
in
fisubrs
lds
andl
adc
mov
add
test
xor
cmpsb
fisubl
loopne
mov
aam
and
pop
addb
pop
or
adc
xchg
jae
mov
sbb
mov
cmp
hlt
xor
add
add
add
or
leave
cmpsb
ret
xchg
test
pop
popa
add
jmp
adc
xor
lock
sbb
out
xchg
push
mov
add
cli
loopne
jl
adc
mov
cltd
inc
flds
xchg
es
add
pop
dec
shlb
jge
and
jmp
frstor
out
add
sub
mov
add
dec
cmp
sbb
pushf
sbb
push
ljmp
roll
jmp
jnp
xor
dec
cmp
jmp
push
cmp
push
mov
mov
cli
jnp
enter
xchg
rorl
je
sbb
je
mov
bound
cli
dec
pop
cli
lds
jae
subl
vpsubsb
mov
incl
mov
sbb
fmuls
addl
lret
movb
inc
lret
push
outsb
pop
or
cld
pushl
shlb
icebp
mov
ljmp
jl
or
psllq
add
pop
jbe
sbb
out
imul
ljmp
inc
xchg
cmp
add
lds
adc
dec
mov
das
cld
movsl
jg
and
xchg
jae
icebp
daa
cwtl
rcrl
ss
jecxz
cmpsl
xchg
mov
je
or
popf
pop
and
cmpsb
rclb
cmpsb
subb
das
jnp
xor
adc
pop
cmp
fcom
push
aad
cli
shlb
or
or
mov
mov
add
and
sub
arpl
cltd
add
jl
movsl
push
in
cmp
stc
jl
dec
arpl
sbb
rclb
movsl
shrb
ds
cmp
cs
shl
lds
xlat
addr16
cmp
ljmp
jg
mov
movsb
mov
add
js
push
sbb
add
jae
adcb
repnz
add
xchg
cmp
or
jnp
jmp
in
mov
mov
testl
sub
jg
movb
sbb
out
cmp
push
jl
je
mov
mov
sbb
xor
jne
sub
shr
xchg
jbe
add
sub
add
push
cmp
js
or
pop
decl
lea
cmc
lcall
movsb
mov
mov
dec
add
adc
xchg
sub
and
and
sbb
aaa
cwtl
sub
repz
lahf
and
lods
dec
add
and
imul
pop
add
pusha
or
ss
out
adc
divl
push
rcll
sbb
shll
or
sbbl
jae
mov
sti
aas
je
mov
lcall
sbb
decb
mov
rorl
decb
mov
sti
pop
call
dec
or
inc
sbb
rclb
call
lahf
adc
jne
add
or
add
shl
sub
inc
sti
sub
push
jns
aaa
sti
aas
loop
aas
sub
lahf
adc
je
add
sti
push
cmp
aaa
xchg
add
dec
aad
jmp
cmc
add
js
inc
push
sub
mov
inc
aad
and
cmp
test
sti
mov
int3
cld
jbe
adc
scas
ss
out
iret
icebp
push
push
sbb
inc
push
das
adc
testl
movsb
xor
std
xor
add
xor
pop
fucomi
adc
sub
fildl
movsb
sbb
sbb
in
test
mov
add
neg
and
aaa
mov
fs
cli
push
mov
and
xlat
pop
or
push
js
jmp
bound
add
sub
sti
cld
cltd
push
inc
jmp
sbb
lea
xchg
jmp
xchg
mov
out
icebp
xchg
inc
imul
decb
pop
aaa
in
sbb
jmp
pop
rorb
outsb
pop
xchg
rcll
add
fldl
add
add
add
out
jb
or
push
add
ret
movsl
outsb
and
lret
gs
adcl
orl
cmc
inc
das
ja
inc
pop
addb
pop
lret
and
jle
out
sbb
inc
outsl
lgdtl
dec
sub
out
xchg
incl
sub
je
pop
notl
mov
test
loopne
cmc
inc
push
and
les
add
cli
cmc
movsb
pop
and
nop
jb
in
test
jge
pop
jno
test
and
xchg
mov
enter
xchg
cmpsb
jno
ss
xchg
add
lea
adc
jbe
add
push
xchg
imulb
add
xchg
ret
add
add
add
add
dec
das
push
cmc
ror
xchg
sbb
cs
sub
lock
in
lret
fmull
adc
mov
sub
pop
xor
adc
sbb
sub
jmp
mov
jmp
mov
aam
cmp
mov
inc
jae
xor
push
rcl
lcall
cs
xor
add
or
and
or
mov
ds
insl
jae
fldl
in
sbb
sbb
roll
xchg
out
adc
fsubrs
sbb
cli
jmp
lcall
xchg
js
pop
and
lahf
test
repz
jae
add
sub
aam
std
cmp
sbb
data16
mov
addb
mov
movsb
js
sahf
rcl
cli
push
xchg
aad
sub
push
adc
mov
sti
jmp
sbb
sti
hlt
aad
inc
jmp
fdivl
add
and
rclb
gs
ret
fsincos
call
add
add
ret
iret
cmpsl
dec
or
pop
push
xor
repnz
mov
dec
and
mov
pop
and
dec
or
mov
sbb
ja
pop
lock
jbe
jge
push
mov
or
mov
jle
inc
mov
add
jae
push
or
xor
paddsb
xor
sahf
notl
mov
sub
or
inc
in
dec
clc
scas
jae
out
decb
mov
inc
aaa
in
adc
add
dec
shrl
das
cmp
jae
xchg
test
in
pop
bound
add
add
jmp
mov
push
faddl
inc
sahf
sbb
insl
jne
jmp
es
fiaddl
mov
xchg
insl
sbb
xchg
sbb
in
jle
addl
pop
test
cld
sub
push
movsl
loopne
cmp
xor
pop
jmp
fwait
sahf
and
add
and
mov
xchg
imul
jmp
push
sub
mov
dec
xor
adc
sub
lods
ficompl
pmullw
sbbb
add
sub
mov
iret
sub
cmpsb
ret
cmpsl
mov
sbb
pop
arpl
popa
jo
xlat
pop
jo
lcall
test
sbb
test
sub
add
lods
lcall
push
pop
dec
mov
lcall
pushf
sub
adc
sahf
lcall
add
bound
cwtl
test
jmp
cmpsb
inc
inc
lahf
push
jno
lods
cmc
jmp
ss
fwait
call
mov
push
adc
lret
mov
cli
push
mov
roll
into
pop
add
pop
jo
sub
lret
xchg
cmc
decl
pop
jnp
sub
out
fwait
add
incl
aam
mov
mov
loope
jnp
or
lea
clc
jmp
cmp
dec
mov
sti
in
cmp
inc
xchg
mov
das
dec
mov
xchg
int3
jg
cmp
test
xchg
mov
sbb
ja
xor
adc
sub
cmp
and
or
and
fstpt
mov
add
add
add
add
jne
cli
insb
ret
fwait
add
cmp
js
inc
incl
mov
mov
je
incb
mov
movsb
es
mov
ljmp
incl
mov
js
mov
cmp
js
jl
jbe
cmp
insb
add
pop
xchg
xchg
xchg
adc
dec
add
scas
aaa
adc
push
and
insl
push
test
fldl
jnp
add
int3
clc
mov
stc
adc
jnp
fldt
lahf
sub
push
ss
sar
insl
leave
xor
call
cmp
mov
cmc
and
sub
and
add
repnz
sub
fs
out
ja
xchg
add
insb
popa
adc
pop
add
mov
add
xor
loopne
lret
push
lock
xorl
jecxz
call
pop
sub
pusha
ljmp
lcall
push
out
dec
orb
movsb
inc
icebp
cli
cltd
dec
mov
mov
push
push
sbb
in
mov
cli
cmp
jo
shr
sub
add
sbb
add
push
adc
mov
je
cld
addr16
mov
add
and
mov
pop
mov
and
jnp
stc
incl
jl
adc
jnp
add
aas
xchg
cmc
push
sub
jbe
sbbb
adc
sub
outsb
pop
or
jne
inc
dec
pop
lock
dec
pushl
cmc
jne
cmp
adc
and
loop
iret
xchg
cmc
push
cmp
pop
rcrb
add
ss
notl
cmp
lea
xchg
mov
decl
push
dec
jns
adc
mov
mov
ljmp
push
jae
add
je
mov
loopne
pop
jle
stc
cmp
pop
or
or
sbb
lock
jmp
push
dec
push
lcall
inc
mov
inc
xchg
mov
sub
test
add
or
or
xor
add
in
das
and
xor
xchg
bnd
mov
xchg
ds
xor
mov
mov
cld
dec
sbb
call
sbb
push
es
pop
pop
xor
iret
aad
imul
jmp
jo
es
clc
sub
mov
fwait
mov
loopne
leave
sub
sti
fmul
jmp
add
enter
pop
fisttpl
xor
add
shrl
inc
pop
xor
xchg
add
pminub
call
inc
sub
add
add
add
add
stc
pop
push
and
loope
in
and
repz
outsl
and
mov
xchg
pop
ds
sbb
je
mov
pushf
mov
popf
cltd
sub
push
bound
out
insb
mov
sbb
sbb
jne
mov
push
sti
pop
sub
push
sub
bound
ret
orb
xor
int3
cli
fsub
or
cmp
pop
stos
sub
repnz
pop
ds
ret
add
add
inc
mov
mov
stos
cmp
inc
jo
adc
sbb
jo
adc
movb
std
push
xor
mov
ret
out
add
dec
and
outsb
cmp
add
add
add
add
je
mov
jl
loop
rorl
inc
adc
push
jle
rolb
in
or
pop
dec
fimuls
mov
or
es
push
inc
adc
ret
sti
jae
in
sarl
cmp
pop
shr
sub
mov
or
jnp
mov
test
add
add
add
jge
mov
mov
push
push
add
js
incb
stc
add
or
jecxz
call
cmpsb
cmp
bound
ja
adc
data16
sub
pop
and
jg
je
jae
loop
mov
lea
cmc
xor
jg
loopne
adc
aad
mov
mov
push
fadds
stc
call
add
add
add
cmp
pop
mov
mov
ds
inc
sub
jmp
int
push
and
outsl
inc
sarw
inc
pop
test
sub
mov
push
sbb
rclb
stc
mov
test
shll
xchg
jp
insb
jmp
loopew
pop
fstpl
pop
pushf
cwtl
int3
rorl
adc
inc
mov
pop
mov
sub
pushf
out
add
add
add
add
add
sbb
lods
out
pop
xchg
aas
or
pop
imul
ret
sub
in
fldcw
jmp
mov
mov
std
decl
pop
xchg
or
add
test
imul
mov
pop
and
scas
xor
out
cs
out
lods
jmp
negb
dec
push
sub
cs
push
cmp
pop
add
js
push
push
add
adc
add
pushf
mov
push
mov
adc
sbb
cmova
cli
call
in
jl
pop
add
push
mov
fs
or
loop
mov
cmc
mov
mov
xor
movsl
cmp
xchg
xchg
sub
movsb
in
inc
add
cmc
push
stos
in
aaa
push
adc
xchg
fs
popf
sub
call
adc
mov
or
sub
ds
or
out
inc
mov
dec
cmp
push
jns
cli
or
xchg
sub
add
xchg
cs
cmpsl
mov
xchg
xor
jns
lcall
incl
cld
ffreep
sub
cli
stc
jae
adc
inc
add
cmp
cli
aaa
cmp
aas
sub
mov
jp
sub
xor
mov
push
jge
dec
add
push
pop
cmp
sub
jg
fucomp
jle
ja
inc
sub
jg
jg
inc
sub
adcl
add
add
imul
cwtl
inc
sub
mov
xor
fldl
jne
call
fbstp
sbb
add
pop
rorl
fucomp
fwait
dec
cmp
popa
mov
pop
popa
test
and
add
gs
pop
adc
int3
popa
jae
push
pop
cltd
mov
push
mov
fwait
mov
aas
xchg
jnp
stos
pop
cwtl
jmp
add
rclb
sbb
xchg
mov
mov
pop
fcomi
push
cs
das
daa
pop
add
dec
xchg
pop
sti
aam
adc
stos
mov
mov
mov
cwtl
ds
add
out
mov
fs
call
out
pop
pusha
cli
jno
arpl
in
imul
jmp
add
xor
pushl
mov
add
cmp
andb
add
cmp
or
mov
lods
movlps
inc
lcall
enter
inc
arpl
jne
xchg
adc
incl
xchg
imul
sbb
add
xchg
cmc
test
pop
mov
imul
push
add
sbbl
call
adc
or
sbb
xchg
cmc
jae
jle
scas
mov
cmp
jne
mov
sub
cli
cltd
push
xchg
pop
add
or
jg
sub
ljmp
inc
or
mov
loop
lea
mov
in
aas
sub
jnp
es
and
sub
aas
pop
xchg
das
jg
dec
cs
out
jecxz
sti
aaa
mov
aas
sub
out
cs
mov
adc
gs
in
xor
mov
out
std
xor
sub
popa
loopne
jg
cld
orl
gs
xor
xor
test
call
xchg
jo
inc
das
sbb
add
add
add
not
inc
sub
add
stos
sub
lods
out
mov
push
jmp
js
and
lods
cmp
ret
dec
push
daa
add
pop
stc
cmovl
call
xor
pop
lcall
mov
inc
cmc
test
adc
jmp
in
xchg
sub
mov
add
add
add
cmp
les
out
fistpl
aas
cli
movsl
add
mov
in
movsb
pop
xchg
lods
shlb
in
dec
loopne
std
inc
ficoms
pusha
std
add
xchg
mov
mov
lcall
call
push
adc
adc
pusha
pusha
xchg
lret
mov
test
movb
dec
mov
jno
cmp
adc
jmp
adc
add
incl
popa
insb
out
or
add
js
call
dec
adc
push
pop
rorb
push
dec
mov
inc
decl
mov
cmc
adc
loopne
aaa
pop
lret
sub
push
jo
aaa
push
mov
dec
mov
cmp
addr16
ja
add
in
outsb
mov
sub
or
mov
sbb
mov
ljmp
mov
xor
xchg
out
jbe
mov
fdivrs
jmp
jle
inc
xchg
xchg
sbbl
pop
add
dec
and
push
test
xchg
aaa
das
dec
mov
clc
push
jp
cmp
aad
cmpsb
or
add
adc
or
pop
and
dec
ja
scas
push
cli
mov
pop
je
lea
jp
pop
inc
push
pop
dec
jg
rcl
xor
cmp
cmp
mull
loopne
push
xor
icebp
or
dec
pushf
roll
cld
hlt
paddb
out
fstpl
out
pop
lcall
fucomip
mov
roll
push
mov
ret
add
jmp
xlat
ret
in
repz
add
sub
rcrl
push
ret
add
cmpsb
sbb
stos
pop
loope
mov
cmp
push
je
test
pop
pop
arpl
lock
push
lcall
push
sahf
mov
push
cli
hlt
in
inc
jmp
add
int3
das
jb
add
push
sbb
pop
sbb
sti
sbb
ficoms
and
into
adc
sub
mov
les
sbb
and
sub
test
in
cli
hlt
push
sub
ret
stos
ds
cmp
push
mov
mov
cmpl
sbb
push
in
cmc
jne
dec
jle
adc
inc
stos
inc
cld
rcl
jae
test
mov
pop
xor
ficoml
xor
inc
jecxz
cmc
adc
imul
loopne
sahf
int
xchg
dec
int
bound
adc
pop
cli
out
jecxz
inc
sub
jae
inc
in
incl
decb
add
fsts
les
push
add
push
or
pop
inc
or
xchg
inc
xor
push
icebp
into
dec
cld
lret
sti
pop
std
sub
repz
mov
push
rorb
ljmp
inc
sbb
dec
jge
ret
dec
icebp
or
dec
pushl
cmpl
hlt
mov
je
leave
stc
pop
add
adc
jg
inc
add
jno
insb
pop
ds
inc
dec
test
insb
popa
jo
mov
push
or
pushf
jmp
and
sbb
push
dec
or
gs
int3
incb
out
push
mov
push
xor
push
fwait
adc
in
sbb
loop
test
add
imul
andl
adc
and
xor
xor
adc
aaa
orl
pop
ljmp
add
dec
dec
scas
xor
movaps
pushf
mov
in
lcall
sbb
dec
out
sub
add
add
xor
sbb
lods
and
add
pop
pushl
pop
enter
push
mov
add
add
xor
lret
lret
sub
loope
psubq
and
push
test
and
sub
push
test
sub
xchg
mov
dec
lahf
imul
jno
push
jl
add
add
js
add
test
cmpsb
pop
divl
aad
adc
push
or
push
push
incl
data16
adc
push
loopne
add
aam
pop
andl
add
ret
push
mov
mov
repnz
xorl
loopne
dec
call
insl
cmc
jne
shrb
jne
add
je
iret
rcll
cs
aas
jae
pop
sti
and
jl
inc
add
mov
jge
cmp
xor
xor
jl
inc
je
rol
mov
jb
xor
ret
xorb
in
repz
pop
and
pop
adc
sti
aas
stos
push
inc
sub
ret
pusha
inc
mov
push
into
dec
fisubl
and
xor
aaa
aam
inc
sub
xchg
dec
push
adc
add
add
add
add
add
pop
inc
push
pop
in
mov
roll
sub
jmp
add
ret
cmp
movsb
cmpsl
cmovp
or
sub
push
cmp
fiaddl
stos
dec
sbb
pop
jmp
or
fldl
ds
lea
inc
inc
inc
push
call
mov
add
push
and
lahf
clc
and
add
or
insb
push
cli
jmp
cmpsb
push
sub
stos
mov
adc
arpl
clc
push
and
decb
mov
sub
insl
in
dec
jne
fwait
sar
mov
dec
aad
imul
push
sub
sar
push
jp
jg
add
or
adc
cltd
inc
sub
arpl
out
mov
iret
imul
cli
push
mov
iret
subb
inc
add
sbb
inc
push
jmp
add
iret
cmpb
je
jns
jmp
cmpb
loope
shll
inc
adcl
mov
add
add
add
outsb
cmp
orl
mov
xchg
mov
je
inc
sbb
insb
aad
call
rcrb
je
pushf
idivl
sahf
in
in
inc
mov
cmpb
jne
ret
rcrb
je
jmp
mov
out
and
cmp
testb
jne
add
fiadds
add
testb
mov
add
add
fiadds
add
mov
test
ret
das
mov
cmp
shlb
and
stc
pop
sbb
notl
dec
mov
sbb
stos
pop
sbb
in
nop
mov
ljmp
push
sub
sub
int
orb
pop
imul
sbb
out
add
outsb
roll
add
add
add
add
lcall
in
cltd
and
inc
cltd
in
mov
icebp
insb
mov
xchg
and
std
pop
sub
push
jmp
aaa
add
in
popa
add
aaa
dec
aam
mov
add
aaa
xor
les
ss
aaa
pop
ror
aaa
sbb
add
adc
hlt
aaa
adc
clc
aaa
cmp
shl
aaa
ss
aaa
das
aam
in
add
and
jo
add
jo
add
jno
test
add
pop
das
jb
add
arpl
rorb
out
ljmp
call
sub
sbb
rorl
and
pop
add
call
sbb
and
insl
je
add
test
and
add
add
add
add
jae
int
mov
mov
and
scas
pop
ret
and
jmp
mov
addb
and
xchg
aad
sub
jb
icebp
or
add
cmp
test
and
movb
cmp
call
je
cltd
cmp
cs
fs
adc
push
push
adc
pop
push
adc
cwtl
enter
add
add
add
add
mov
pop
ja
push
pop
or
and
sbb
add
das
add
aad
ljmp
mov
pop
sub
ss
and
inc
in
es
stos
add
or
sar
add
cmpsb
pop
sbb
ss
sub
jle
add
ljmp
jbe
mov
push
cmp
mov
adc
xchg
je
test
incb
stos
push
jle
js
mov
inc
inc
insl
add
xchg
movsb
pop
cmp
stos
pop
push
adc
add
cwtl
stos
pop
add
fsub
add
cs
mov
xchg
lods
pop
add
add
add
add
add
xchg
adc
divl
movsl
outsl
outsl
enter
or
lret
or
insl
lret
add
sub
loopne
popa
add
mov
loope
dec
pop
push
inc
sbb
or
mov
loopne
imul
lcall
push
fiadds
fxtract
add
inc
in
add
popa
ljmp
sub
cmp
scas
dec
cli
pop
mov
adc
add
add
add
add
int
bound
movlps
pop
jb
pop
test
mov
mov
testb
loopne
fists
arpl
sub
xchg
movsb
inc
idivb
jle
adc
inc
cli
fidivs
add
pop
sbb
xchg
sub
xchg
ret
daa
adc
xor
daa
loopne
int
mov
add
add
add
add
push
test
sbb
add
clc
push
push
adc
push
inc
stos
popa
or
sbbl
push
das
rolb
add
adc
dec
ret
mov
or
push
popf
and
or
push
stc
add
call
sub
or
add
add
nop
pop
push
call
mov
jp
sbb
or
push
int3
cmc
call
dec
cmovle
inc
inc
add
sbb
sti
sub
incl
clc
add
xchg
xchg
stc
jge
imul
ss
inc
sub
shlb
ss
jg
dec
std
test
ss
ljmp
or
stc
pushl
dec
cmc
dec
mov
mov
test
enter
add
add
aad
std
mov
sub
dec
inc
sub
xchg
xor
jg
and
es
fdivrs
loopne
mov
loope
add
inc
pop
pop
push
shrl
xchg
sub
sub
jmp
andl
pop
jmp
sti
fdivrs
lret
pop
ret
push
lret
jp
sub
lret
add
add
add
add
sbb
sub
fwait
cli
jmp
out
adc
fiadds
sub
push
ljmp
fsubrp
and
inc
test
cmovnp
xor
das
xor
shr
xor
out
ret
xchg
inc
std
repz
out
add
jmp
sub
xchg
and
mov
add
cmp
sub
lea
adc
xchg
dec
rorb
push
sar
push
addb
sub
mov
and
inc
pop
inc
cli
imul
or
push
lahf
test
shll
inc
cli
imul
add
outsb
xchg
add
sti
mov
and
movb
add
add
add
add
dec
cli
call
mov
inc
pop
scas
push
sbb
xchg
mov
pop
or
inc
jle
pop
and
andb
jns
aas
mov
ret
dec
add
dec
lahf
dec
or
cmp
sbb
inc
or
and
mov
add
inc
add
mov
outsb
inc
and
je
mov
add
stc
jae
subl
mov
mov
scas
cmp
mov
popa
leave
shll
add
sub
add
fistpll
adc
mov
shl
pop
out
jae
adc
mov
repnz
loop
or
dec
mov
aaa
mov
test
ljmp
or
inc
inc
cmp
push
adc
in
adc
add
inc
xor
push
add
adc
inc
inc
sbb
inc
inc
sub
add
push
loop
test
sbb
add
insl
or
ret
lods
and
sub
movsb
adc
imul
stos
sub
subb
jns
pop
ljmp
fwait
jg
sub
imul
push
sbb
mov
adc
sub
imul
pop
jmp
xchg
adc
repnz
adc
stc
jle
ljmp
pop
jne
test
pusha
inc
not
aaa
cltd
jmp
sub
sbb
loopne
fistl
call
xchg
sbb
scas
add
jb
jle
jns
sub
xorb
test
arpl
das
xor
push
dec
ret
push
cld
jg
sub
and
rcl
je
out
fists
in
xlat
jg
cld
lret
out
add
ljmp
jecxz
pop
ret
sub
jmp
popf
testl
add
imul
call
iret
inc
sbbl
inc
add
call
mov
femms
ret
sbb
push
xchg
jnp
mov
orb
arpl
sbbl
pop
dec
sbb
and
sarb
push
ret
xor
rolb
inc
mov
xchg
inc
mov
adc
testl
cvtpi2ps
jl
add
das
lods
or
ss
xor
push
jg
dec
ljmp
pop
inc
jg
cmp
rsm
pop
divl
mov
pop
aaa
ret
sub
pop
pop
jbe
mov
inc
fmull
repnz
or
mov
add
rolb
and
and
ss
cs
inc
jae
mov
mov
sbb
add
add
add
add
imul
add
cmpsb
push
cmc
ljmp
sub
ljmp
test
lock
fisttps
call
add
stos
loope
sub
je
mov
and
xchg
pop
jmp
jle
inc
mov
and
lahf
shlb
lcall
add
jg
sub
jmp
jle
inc
pop
imul
loope
sub
pop
push
call
and
jmp
adc
andl
cmp
xchg
jns
scas
inc
das
xchg
comiss
pop
and
sub
add
test
mov
inc
call
sub
lea
push
cli
or
add
rorb
out
mov
mov
sbb
inc
call
sub
addb
pop
and
test
into
sti
push
rolb
push
sarb
jg
call
cmc
decl
ss
incl
pushl
sub
mov
jns
mov
ror
mov
add
and
push
daa
daa
jne
pop
ja
adc
push
sbb
cmpl
shlb
inc
xchg
sbb
fisttpl
je
mov
dec
movhps
call
fisubl
andl
inc
push
cmp
pop
inc
and
movb
cli
ljmp
push
mov
add
dec
icebp
mov
mov
mov
ljmp
add
add
add
sub
or
mov
dec
test
popa
cld
push
and
mov
cmp
mov
ret
ljmp
push
mov
xchg
ljmp
std
movsl
inc
fs
sub
jae
inc
ljmp
dec
pop
cmp
inc
inc
in
inc
cli
call
fs
test
dec
jle
and
bnd
popw
jmp
sub
insb
lods
sub
es
fisubs
jmp
cld
add
add
cmp
in
repnz
bnd
push
jmp
sub
ret
aad
insb
jle
cmp
add
mov
jns
and
and
and
enter
sub
repnz
add
add
add
add
pop
jmp
pop
add
jmp
jns
pop
add
push
jae
pop
insl
shlb
test
jle
sub
or
add
out
icebp
sbb
jmp
xchg
call
jae
jo
shrl
mov
imul
loopne
fdivl
add
or
sub
ret
pop
jmp
imul
loopne
add
and
sub
xchg
jle
mov
add
orl
lret
enter
mov
pop
das
mov
or
jg
jns
unpcklps
jns
das
daa
add
insb
cmp
call
cld
inc
add
mov
test
sub
add
decl
mov
test
sub
test
add
sub
adc
sub
inc
das
aaa
rolb
mov
sti
sub
dec
or
lds
aas
dec
sbb
or
jmp
pop
sub
out
sub
es
jbe
leave
add
sub
inc
xor
mov
cmc
and
inc
xchg
std
sub
xchg
call
add
sub
pop
add
sub
imul
test
and
out
xlat
and
icebp
repnz
or
add
pop
jmp
push
jl
call
inc
jae
int3
adc
dec
in
imul
sti
fists
test
sub
jge
loope
mov
sub
sub
call
dec
imul
add
icebp
js
cmp
daa
xor
in
sub
add
inc
mov
cltd
arpl
gs
sub
mov
add
adc
pushf
iret
or
xor
add
jb
dec
imulb
inc
jb
xlat
pop
or
cmp
jmp
xor
outsl
and
add
roll
xor
adc
pop
mov
scas
ds
push
aam
cli
jmp
clc
xor
or
cmp
out
dec
xor
jmp
dec
cmp
add
sub
scas
repz
shlb
aaa
or
mov
add
jns
orl
cmc
data16
ljmp
xchg
leave
out
add
movsb
dec
add
fadds
pinsrw
fmull
scas
rcrl
and
test
aad
inc
fdivr
push
jecxz
call
call
mov
inc
add
movsb
dec
add
jl
lcall
scas
rcr
fwait
ljmp
aad
incl
pop
cmovbe
add
ret
sub
jg
inc
or
sub
pop
repz
sub
xlat
or
inc
xchg
dec
jg
cmp
sub
jg
xor
sub
jg
cmp
pop
add
dec
inc
in
sub
fimull
jmp
inc
incb
and
or
push
push
xlat
and
jg
stc
leave
inc
adc
dec
or
add
inc
andb
inc
cli
cli
mov
mov
xor
lds
sti
pop
inc
jbe
mov
and
jae
xor
push
jmp
imul
add
add
cmp
jmp
inc
lods
inc
out
inc
stos
fsubrl
sub
jmp
lds
test
or
cmc
mov
inc
pop
sub
fs
cltd
xchg
push
inc
or
imul
stos
pop
scas
gs
or
fsub
push
add
add
lahf
add
dec
lds
ljmp
cmc
es
imul
jle
pop
add
fs
in
sub
test
cmp
test
out
jle
xor
fdivrp
sahf
xlat
notb
jno
pop
bound
pshufw
jb
jmp
and
add
sub
mov
mov
xor
dec
aaa
fwait
lret
pop
or
xchg
mov
outsl
loopne
nop
jmp
jmp
add
daa
ret
lock
add
mov
inc
rcll
divl
sahf
icebp
cmp
cmp
and
xchg
xchg
push
add
dec
push
xor
sbbb
mov
sbb
loope
movsl
dec
or
cltd
add
inc
push
cmp
and
jmp
sahf
icebp
or
testb
add
add
add
add
inc
sbb
ds
insb
je
sahf
or
push
out
incl
add
les
xchg
daa
inc
push
pop
xchg
inc
rorl
mov
cltd
add
fildl
cmp
mov
dec
xor
je
lods
xlat
and
scas
xlat
and
mov
cli
lds
pop
out
mov
inc
push
mov
pop
out
xchg
imul
jne
cmpl
test
push
cli
addl
sbb
sbb
scas
and
mov
into
dec
pop
movsb
sub
lcall
or
rorl
lods
fcmovnb
or
lcall
or
jmp
or
add
pop
sub
sbb
and
insb
pop
xor
add
add
and
movsb
adc
push
movsb
mov
sbb
mov
popa
push
xor
fcomp
pop
test
jecxz
imul
aas
jmp
jnp
stos
mov
jnp
std
das
outsb
mov
or
and
sti
adc
in
cmpps
pop
pusha
pusha
test
mov
cmpsl
inc
idiv
fstl
inc
and
jle
dec
pushl
cwtl
inc
in
hlt
outsl
jae
sahf
lret
and
mov
and
push
pop
push
jb
xor
fs
add
xor
mov
push
and
pop
jns
cli
push
add
add
pop
sub
add
incl
dec
out
and
mov
enter
mov
pop
out
push
or
or
cmovbe
out
dec
fwait
inc
adc
imul
or
and
es
or
add
or
and
and
add
stc
pop
or
jmp
fstps
and
and
inc
pop
add
push
sbb
push
test
push
cltd
or
das
imul
out
and
push
gs
in
fisttps
sub
jns
jbe
mov
push
cmp
mov
adc
push
ljmp
out
imul
xchg
cmpl
cmpsl
ja
test
push
cli
mov
inc
or
add
push
test
xor
xchg
xor
mov
jmp
mov
repnz
push
mov
loopne
or
push
or
mov
dec
cmpsb
add
cmpsb
add
cmpsb
add
dec
cmpsb
add
dec
cmpsb
add
dec
cmpsb
add
dec
cmpsb
add
dec
cmpsb
add
dec
cmpsb
add
cmpsb
add
cmpsb
add
dec
cmpsb
add
push
es
out
push
es
push
es
push
es
push
es
push
es
push
es
push
es
push
es
push
es
push
es
push
es
push
es
push
es
push
ljmp
es
sub
out
aam
sub
aam
sub
aam
sub
aam
sub
aam
sub
stos
sub
stos
sub
add
add
add
add
mov
stos
sub
fsubrs
sub
leave
stos
sub
stos
sub
sub
dec
sub
xor
sub
ja
sub
sub
fldt
es
sub
ror
es
aad
es
shrl
jg,pn
add
and
adc
not
add
sbb
sbbl
push
add
push
xchg
xlat
rcrl
xlat
rcrl
xlat
rcrl
xchg
xlat
rcrl
dec
mov
fdivrl
shr
push
dec
push
push
dec
jmp
in
call
pushl
mov
lock
mov
lock
xchg
mov
and
mov
jns
push
ja
inc
sub
jnp
imul
xadd
cmc
stc
mov
cvtpi2ps
add
das
lock
mov
dec
push
das
ljmp
out
fcoms
adc
cmc
mov
cmp
das
and
mov
push
cmp
adc
add
and
aaa
add
shrb
sub
call
add
sub
sbb
jmp
xorb
adc
pop
ljmp
or
xor
cmp
push
pop
xchg
pop
sti
jg
jmp
pusha
sbb
insl
push
dec
inc
or
and
in
mov
xor
insl
lcall
stc
aaa
rolb
loopne
mov
insl
lcall
shlb
add
add
add
add
aaa
jb
mov
lods
xchg
andb
fprem
xor
push
in
lret
xor
pushl
fsubs
in
stos
mov
dec
cmp
jecxz
jmp
cs
sub
fldenv
sub
add
ret
add
in
daa
dec
mov
imul
add
add
mov
jmp
lods
or
jmp
ror
sub
daa
xor
fs
jb
fwait
inc
in
and
fstpl
pop
insb
out
stos
pop
ss
mov
sar
cli
into
wrmsr
test
insb
inc
cmp
ss
aaa
mov
and
pushl
daa
xorl
shrl
push
imul
test
cmc
addl
add
add
add
add
sub
jne
imul
push
sub
jge
shl
pop
movsb
lret
cmp
rclb
enter
pop
out
fmull
add
aas
push
lea
and
call
dec
cmp
inc
xchg
test
add
ljmp
jmp
xchg
sub
out
aas
incl
mov
aaa
jnp
cli
test
sti
push
data16
lahf
adc
mov
aaa
call
cmc
pushl
sub
cld
scas
shr
inc
ss
aaa
incl
fs
incl
push
cli
fsubrl
pop
xchg
xor
jae
aas
shr
push
lea
cli
pop
mov
add
clc
push
cli
mov
cmp
mov
push
pop
hlt
dec
push
adc
fldcw
and
dec
mov
shlb
sbb
aad
and
pop
sahf
adc
jp
push
insb
inc
mov
lods
fdivrl
ljmp
xor
sti
gs
inc
cmpsb
adc
hlt
or
mov
lock
cmp
push
das
sub
loope
sti
popl
das
fucomip
scas
jl
pop
inc
and
jbe
leave
sbbb
repz
inc
push
mov
gs
push
inc
mov
or
jae
push
push
lock
out
call
or
pop
and
je
out
and
and
cmpsb
and
add
dec
int3
je
pop
js
ss
jne
add
or
aas
imul
imul
mov
insl
or
adcl
je
gs
push
sub
in
and
push
mov
mov
cmp
mov
scas
int3
xchg
cmp
sub
mov
aam
aad
mov
test
cmpsl
mov
xchg
cmpsl
mov
add
add
add
add
xchg
push
ret
rcl
pop
push
aad
push
mov
ficoml
stc
jp
xor
aam
push
negb
push
mov
mov
aam
pop
mov
cmpsl
lret
ret
cmc
mov
mov
cmp
mov
push
jle
adc
inc
adc
clc
push
pop
sub
cmp
adc
pop
pop
push
enter
jg
lcall
mov
cmp
mov
adc
repnz
adc
int
shlb
scas
pop
mov
push
sar
ljmp
test
sub
roll
push
pop
jno
adc
sbb
sbb
pop
fdivrl
jbe
add
and
mov
inc
dec
mov
fucomp
pop
test
rorl
pop
push
cmc
movsb
pop
sbb
mov
stos
cld
push
cmpsb
add
xchg
arpl
push
and
and
mov
orb
add
in
push
pop
inc
jne
shl
das
fucomip
adc
notb
add
dec
mov
mov
add
add
add
add
xchg
and
out
xor
notl
ja
lods
mov
stc
sub
out
sbbl
sub
addb
adc
jg
dec
clc
insb
fdiv
dec
fs
sub
js
xor
stc
jl
inc
jp
ja
les
data16
xor
jae
popf
add
pushf
cmp
push
stos
xchg
jno
xor
jnp
add
popa
call
or
stc
stos
data16
inc
cmp
stos
data16
add
xchg
in
pop
jo
sbbb
or
xchg
fdivrl
mov
stc
scas
popa
xor
orb
cmp
xor
into
orb
jns
sarb
pop
fistpl
sahf
in
add
adc
test
mov
aad
testb
or
sbb
mov
adc
jecxz
pop
popa
sahf
rcrl
push
sub
dec
and
outsl
ljmp
lret
or
mov
sub
jl
stos
sub
add
or
ljmp
mov
inc
shr
out
cltd
add
jmp
and
aas
sub
dec
mov
repz
and
or
xchg
add
push
insb
cli
call
inc
dec
dec
xor
pop
pusha
repz
sub
aas
jae
xchg
mov
fisttpl
dec
push
mov
dec
cli
cli
push
dec
sub
dec
add
add
aad
xor
xchg
lahf
jbe
scas
mov
sbb
popf
xor
dec
cmpsb
mov
cwtl
jbe
mov
ljmp
ficoms
arpl
jns
arpl
jo
sbb
mov
inc
mov
inc
sub
inc
mov
xor
add
fwait
addb
mov
adc
ret
sbb
faddl
jno
and
out
sbb
lods
popa
insb
mov
insb
data16
cltd
add
push
xchg
push
xchg
clc
add
and
orl
pop
add
push
sbb
jmp
jl
mov
sub
mov
imul
xor
xor
fisubrl
test
add
pop
test
mov
add
inc
and
incl
imul
test
mov
push
lahf
xchg
sti
fs
imul
incb
mov
push
sbb
mov
push
ss
mov
movsb
popa
dec
mov
arpl
sub
add
stc
stc
mov
push
xchg
clc
jmp
add
xor
movsb
sahf
mov
nop
lcall
jmp
adc
inc
sub
inc
cli
sub
or
aas
sub
jne
cli
jg
or
addb
adc
jge
outsb
add
sub
jp
fcoml
mov
fcom
add
faddl
stos
or
push
add
or
pop
xlat
xlat
add
cmpb
or
lahf
mov
test
lods
push
xchg
data16
ljmp
test
test
cmp
lret
push
sbb
push
fs
movsb
shll
inc
movsl
xchg
adcb
in
add
jno
ja
out
imul
les
sbb
mov
fistps
add
movsl
hlt
subl
js
outsb
sub
jge
sbb
xor
sahf
add
xchg
inc
jnp
mov
sbbb
mov
test
ficompl
xchg
sub
add
mov
insl
pushf
mov
inc
in
sbb
faddl
jecxz
cmpsb
jmp
adc
or
stos
mov
add
add
add
imul
mov
rcrl
jmp
bound
push
ds
addr16
dec
xor
je
loopne
push
imul
push
adc
cli
call
push
cli
out
jns
shll
mov
sar
cli
jmp
insl
pop
notb
into
cmpsb
sar
pop
dec
movb
test
idiv
repz
mov
call
scas
mov
mov
push
cld
incl
fiadds
mov
loope
inc
pop
testb
pop
je
stc
sbb
adc
outsb
cmpsl
leave
cld
or
dec
call
jl
add
popa
push
mov
mov
add
mov
scas
jne
hlt
sub
fldenv
mov
sub
je
jge
out
fdivrl
cli
pop
push
adc
testl
aas
cli
push
mov
stc
cmp
test
sti
lahf
hlt
inc
je
xchg
adc
dec
add
ljmp
adc
sbb
jae
mov
outsl
sub
jecxz
sbb
add
xchg
xor
sbb
push
mov
or
stc
mov
idiv
mov
aam
pop
add
add
pop
addr16
pop
pushf
cmpsl
mov
insl
pop
incb
das
daa
add
je
lods
sub
cmp
or
push
xchg
cmp
inc
outsl
fs
cmp
scas
and
push
aad
mov
inc
sahf
pop
jae
cmpsb
fdivp
or
add
xor
mov
inc
data16
mov
mov
les
and
rcrb
xor
scas
pop
and
push
call
fs
or
out
in
insb
xchg
hlt
aad
add
cli
out
pop
gs
push
xchg
gs
xor
imul
inc
jmp
or
pushf
cmp
add
add
add
pop
add
jmp
cli
cmp
pusha
fucompp
adc
adcb
jbe
sbb
sbb
insb
xchg
cmp
sti
push
sub
orb
inc
adc
negb
shlb
ret
xchg
shlb
inc
rolb
out
push
xchg
aaa
js
ret
and
add
bound
add
call
adc
add
mov
std
ljmp
test
addl
sub
jne
test
push
call
shl
jmp
shrl
sub
adc
push
and
push
push
pop
cmp
rcrb
sbbl
push
push
fisttps
add
scas
mov
add
sub
cli
xchg
cmp
stc
popf
scas
or
out
add
xor
in
add
dec
dec
mov
mov
roll
add
pusha
add
addb
lods
fsubrp
aaa
mov
sbb
cmp
sbb
or
pop
jno
ds
je
scas
add
ja
enter
xor
add
add
add
add
fdivr
outsb
inc
mov
dec
add
mov
push
dec
inc
mov
sti
std
dec
push
scas
add
mov
fstps
inc
sub
inc
and
daa
iret
inc
pop
mov
dec
in
dec
stc
in
sbb
jmp
sub
xchg
sbb
lret
and
sti
or
dec
scas
movsl
adc
outsl
cmp
adc
movsl
adc
cmpsb
mov
outsl
in
add
jb
or
loop
pusha
punpckhbw
adc
adc
in
rcrb
mov
fadd
and
cmp
call
xchg
cld
scas
loop
inc
icebp
sbbl
icebp
push
cli
shl
mov
sbb
pushf
mov
xchg
push
repnz
inc
dec
rcrl
frstor
cwtl
fdivrs
add
mov
ljmp
stc
xor
push
adc
sbb
inc
dec
lcall
fstpl
in
cmpsb
jae
rcl
jp
aam
pop
push
loopne
sub
pop
or
cs
loope
fsubp
add
sub
fiadds
call
out
dec
mov
or
mov
mov
push
add
xchg
mov
rorb
push
push
imulb
cmpsl
push
and
mov
push
adc
jne
stc
addb
lcall
jl
stc
movb
fs
add
mov
inc
adc
cmp
inc
cmp
lcall
adc
mov
push
pop
jmp
ljmp
imul
je
lea
out
push
loopne
cli
pop
jg
pop
cmpsl
ret
pop
xor
sbb
std
jle
icebp
mov
mov
xor
add
xchg
push
dec
pop
mov
fxch
inc
fiadds
test
aaa
dec
cs
test
mov
jb
add
sub
addl
mov
imul
mov
add
add
add
addb
outsb
inc
jne
cmpsb
stos
inc
pusha
mov
shll
add
xlat
mov
add
movsb
daa
mov
lods
push
call
fidivl
filds
lcall
xchg
shrb
ljmp
push
fisttpl
jno
mov
cli
imulb
cli
inc
push
out
rcr
add
and
sbb
mov
cmpsl
mov
test
inc
or
or
test
inc
mov
xlat
mov
dec
adc
movsb
xor
sahf
scas
push
cmpsb
jne
cmp
pop
add
insl
add
sbb
cmpsb
inc
fldenv
bound
and
lret
pop
dec
out
mov
inc
push
lea
cli
call
out
inc
pop
mov
daa
or
cli
jmp
xchg
jmp
pop
fldt
cmp
push
test
dec
movq
je
mov
adc
cmp
or
or
dec
mov
call
add
add
add
inc
push
testb
add
mov
mov
cmp
insl
test
ror
divb
cwtl
ds
je
inc
mov
orb
xor
push
jge
jmp
jp
pop
and
add
cmp
xchg
out
xchg
call
enter
out
push
xor
cmpsb
xor
mov
xor
lock
adc
jnp
cli
lds
dec
jns
add
jg
daa
ret
add
loop
adc
sub
mov
mov
xchg
imull
aad
xchg
xchg
mov
add
idiv
cs
lret
fiadds
pop
test
push
data16
xchg
ljmp
add
pop
mov
add
gs
jbe
dec
lock
test
imul
sub
aas
inc
lds
dec
icebp
lea
inc
je
outsb
mov
xchg
test
cmp
xchg
jmp
in
scas
lret
clc
je
aam
aas
mov
stos
fsts
xchg
sub
jmp
jmp
fisubrl
add
sbb
add
mov
jle
lods
dec
or
mov
lea
movsb
pusha
push
cmp
insb
lahf
push
or
loopne
sub
pop
daa
jecxz
add
out
mov
pusha
push
mov
xchg
add
add
mov
sub
mov
flds
jb
incl
sub
xor
sbb
fildll
call
insl
adc
add
add
add
add
call
shlb
shrb
jle
sub
pop
stos
xor
push
bound
mov
cmc
je
push
add
dec
insl
inc
jmp
sbb
cmc
call
mov
icebp
test
sbb
ficoml
sbb
jp
aam
jp
add
int3
pop
je
test
int3
xchg
mov
ret
sbb
push
in
pop
add
mov
pop
std
cld
daa
inc
push
dec
push
sub
roll
push
arpl
mov
push
divl
lret
jne
sti
pop
hlt
add
inc
sub
jp
inc
aam
add
das
cli
stc
mov
inc
xor
or
xchg
enter
mov
adc
lcall
cmpsb
inc
add
add
jge
repz
cmp
add
lds
test
call
std
test
dec
adc
subl
das
xchg
sub
stc
les
xchg
add
imulb
je
jl
sti
push
push
addps
outsl
scas
pop
imul
out
or
xor
xor
add
pop
popa
adc
jns
rorb
fs
outsb
mov
loop
daa
add
fisttpll
jl
pop
popa
lret
lods
das
mov
or
punpcklwd
std
divb
movb
push
mov
or
lret
mov
push
ljmp
mov
outsb
lcall
pop
add
lock
cmp
add
mov
ds
add
sbb
sub
or
inc
clc
insl
in
sti
cmp
sbb
push
sub
xchg
pop
icebp
cmpsb
add
mov
outsl
push
xchg
xor
movaps
pushf
sar
mov
add
mov
stc
mov
jmp
dec
jae
dec
mov
jecxz
cmc
cmp
sub
add
jmp
lods
lds
add
add
subl
xchg
fidivrl
jno
add
cld
lcall
sub
xchg
and
xor
lds
push
imul
je
sar
aad
leave
and
in
enter
out
cli
call
repnz
push
mov
mov
stc
add
int3
mov
stos
mov
push
sahf
inc
les
ret
and
mov
ja
inc
add
mov
inc
xchg
jns
add
mov
jno
adc
mov
mov
push
mov
inc
outsb
inc
pushf
xchg
sub
std
xchg
das
jge
sub
mov
xchg
inc
sbb
pushf
movsb
sub
insb
push
cmp
push
daa
rorl
jae
pop
push
jg
mul
ljmp
adc
aad
push
add
insb
mov
sub
inc
ret
xor
dec
mov
mov
mov
add
dec
pop
sub
fbstp
daa
pop
out
call
sbb
mov
add
xor
push
cmp
inc
mov
sbb
xchg
loop
rcrb
jo
and
add
or
cld
adc
dec
xor
std
sub
sub
adc
aaa
add
sbb
sub
aad
daa
int
fsubs
and
xlat
rcrb
movsb
sub
add
fsubrl
or
pop
add
add
add
xchg
pop
add
cltd
inc
loope
ret
gs
mov
inc
adc
sbb
je
cli
fcompl
fimuls
imul
jnp
sub
pusha
rcrl
jb
lcall
js
divb
pop
add
sbb
inc
in
mov
inc
dec
add
iret
add
xchg
es
xorb
add
xor
inc
or
mov
jb
xor
sub
adc
aad
leave
addl
jp
pop
cltd
in
mov
sbb
add
cmp
cmp
cmpb
inc
mov
adc
sbb
adc
add
add
add
sbb
call
mov
orl
test
add
sub
and
div
mov
xorl
fdivrs
mov
xchg
aad
mov
dec
jae
jae
int
insl
sbb
cli
mov
jg
and
jnp
je
mov
sbb
mov
loopne
test
or
adc
sub
jae
and
or
ljmp
add
jae
or
gs
data16
sub
and
loopne
xor
pop
push
add
xor
cmpsb
incl
mov
xchg
or
int3
imul
pop
decl
decl
divb
insb
xchg
jle
addr16
add
sub
add
orb
clc
mulb
mov
idivl
decl
and
add
xor
xchg
in
sub
inc
sub
std
sti
push
in
add
cld
sub
inc
aaa
pop
add
repnz
push
stos
in
in
push
sub
mov
sub
push
jo
test
push
decb
add
gs
es
mov
add
sub
pop
pop
inc
movsl
lock
cld
je
mov
clc
adc
sbb
daa
cld
cs
xchg
decb
sbb
adc
jle,pn
in
cmpsb
jae
shll
pop
cmpsl
pop
adc
test
adc
push
add
mov
fs
jns
negl
decl
add
add
add
mov
mov
add
ficomps
mov
rorb
inc
inc
dec
push
push
mov
int
and
and
jge
and
in
add
icebp
je
inc
xchg
add
mov
inc
testb
inc
loopne
js
call
jbe
leave
call
add
adc
add
mov
cli
in
movsl
out
mov
xor
cwtl
add
pop
sbb
pop
and
ficoms
or
and
sub
popf
xor
scas
negl
or
out
stos
and
jne
aam
insl
and
add
pop
cmc
jne
ljmp
sub
add
add
add
add
subb
jbe
and
lahf
cmp
sbb
cli
mov
push
xchg
jg
adc
sub
ss
add
imul
pop
pop
mov
lods
and
jae
push
out
cmpsl
push
jnp
std
jno
add
sbb
jg
es
ficoms
movsl
sti
out
sub
mov
sbb
and
out
push
cld
adc
mov
or
imul
outsb
rcrb
frstor
pop
dec
scas
xlat
fidivl
push
out
mov
jmp
inc
sti
mov
jns
out
dec
add
sti
add
xchg
arpl
add
insb
jmp
cmc
test
mov
cmp
in
or
and
outsb
add
repnz
sub
push
mov
adc
push
rdtsc
mov
add
add
add
lods
aaa
pop
cmc
aam
dec
sarl
sti
stc
repnz
out
add
test
push
xchg
clc
push
inc
cmpsl
inc
add
push
adc
arpl
call
push
add
cmc
push
rorl
into
push
jae
add
or
std
fdivl
push
dec
orb
cmp
sar
pushf
out
mov
emms
pop
push
pop
add
psubsb
outsb
mov
adc
xchg
sbb
mov
jmp
mov
sub
mov
xor
cmpsl
int3
orb
or
mov
pusha
pop
jno
cmp
xor
ret
daa
in
es
inc
in
je
sub
test
cmc
jle
or
add
add
add
lds
jp
notl
xor
add
out
repnz
jmp
mov
out
lahf
pop
cli
sub
mov
mov
jbe
hlt
xchg
loopne
inc
adc
enter
dec
pop
movsb
popa
mov
popa
xor
sub
or
je
insl
add
push
stos
psubd
sbb
clc
clc
adc
cmp
std
jle
fimull
enter
fiadds
jnp
mov
and
movsl
pop
sub
repnz
stos
push
sub
mov
js
stos
or
lock
or
shrl
enter
mov
jae
mov
mov
and
add
jmp
mull
lcall
add
add
push
sbb
xorb
jne
xchg
divl
mull
imulb
or
jae
out
lods
out
add
push
and
adcl
cmp
adc
imul
idivb
cmp
and
cmpsl
inc
sub
rcrb
fcomip
ret
sbb
inc
sbb
push
bnd
add
movsb
inc
adc
add
add
add
stc
cld
rcll
jmp
mov
bound
push
or
sub
jnp
bound
dec
push
call
pusha
push
push
inc
mov
push
repnz
mov
pop
enter
ljmp
in
repnz
mov
lret
lret
sub
jae
lcall
or
or
in
push
xchg
mov
fisubs
je
push
icebp
call
cli
pop
or
jle
in
addr16
call
and
push
mov
mov
out
std
inc
mov
out
je
repnz
cs
lahf
outsl
insl
std
mov
in
mov
test
add
dec
call
sub
out
lods
pop
cli
mov
fldenv
cs
bound
mov
mov
push
aad
repnz
cli
mov
jno
outsl
ret
cli
movsl
jp
je
jno
sub
cli
cmp
cmp
mov
out
pop
xor
sub
out
insl
imul
imul
sub
adc
out
or
aaa
xlat
xchg
es
sub
test
movsl
pop
lock
add
lods
cmpsl
test
push
hlt
pop
rcrb
sbb
push
outsb
cmp
add
jl
inc
add
cmp
inc
jne
jl
mov
lcall
add
test
repz
xchg
and
add
push
cmp
cmc
test
or
xchg
and
or
fs
push
push
sbb
in
sub
adc
jb
stc
je
inc
cs
aas
mov
xor
sbb
pushf
or
into
cmpsb
jae
in
mov
push
or
or
xchg
xchg
or
sahf
mov
mov
add
add
add
add
imul
fs
stc
cld
lds
lcall
and
or
fsts
hlt
push
repz
add
icebp
cmp
std
call
and
ja
mov
imul
add
pop
call
push
enter
outsl
lods
dec
mov
adc
push
imul
adc
inc
sbb
jge
sbb
push
testl
jae
call
or
aad
and
pop
push
add
mov
ret
push
test
sbbl
xor
mov
out
pusha
sbb
test
sub
ljmp
jnp
sti
fcmovu
mov
cli
insl
ljmp
sub
pop
test
add
xchg
sbb
and
mov
push
shl
inc
ss
sbb
inc
add
ljmp
push
scas
inc
xor
shll
call
jmp
ljmp
test
pop
outsb
inc
add
jmp
jmp
icebp
in
cmp
dec
stos
add
pop
out
jne
mov
mov
inc
pop
jmp
jecxz
data16
cmpsb
mov
sarl
nop
xor
stos
rcrb
pop
ror
or
fidivl
scas
ficomps
movsb
pop
fucomip
aam
iret
add
pop
fwait
sub
pop
xchg
sub
jecxz
mov
test
lods
mov
or
inc
cmp
pusha
add
repz
lcallw
jns
push
lcall
inc
shl
mov
pushf
lods
add
jmp
sub
pusha
push
xchg
stc
push
sahf
mov
xchg
stc
out
mov
cmc
xchg
stos
int3
int3
xor
bound
idiv
mov
push
jmp
scas
add
lcall
mov
les
scas
sti
add
cld
pushl
xchg
cmp
cld
push
movsl
inc
add
outsb
sub
in
add
xchg
and
decl
jecxz
push
fisubrl
std
xor
notb
fsub
cmc
xor
cmp
add
mov
add
call
int3
cmp
add
shll
jmp
mov
dec
mov
insb
out
je
mov
ljmp
xor
cmp
mov
lock
push
inc
lret
out
inc
lret
fidivs
inc
lret
jbe
inc
lret
outsb
sbbb
mov
out
mov
andb
jno
add
dec
mov
push
clc
orb
mov
mov
fldl
ljmp
add
cli
xlat
out
ret
addl
xor
sahf
lret
xchg
fldl
pop
mov
test
xor
mov
cmp
scas
jmp
pop
cld
scas
adc
mov
push
xor
out
pop
leave
and
push
sbb
ret
mov
add
add
add
add
sbb
dec
jno
sub
fistpl
ficoms
call
mov
and
add
sbb
test
sub
in
in
sbb
in
lret
jecxz
mov
cwtl
les
lcall
and
jmp
les
or
add
jmp
jmp
xchg
jmp
jmp
sub
call
push
adc
loopne
jecxz
call
out
dec
testb
inc
cmp
hlt
jmp
mov
xchg
pop
add
inc
mov
test
movsb
inc
shll
dec
dec
jb
add
fbstp
in
lods
push
clc
lcall
add
add
sub
test
es
call
rcrb
push
out
mov
or
mov
mov
cmp
notb
lahf
mov
or
mov
mov
clc
loope
push
xchg
lods
notb
lahf
mov
or
mov
mov
js
outsl
sbb
push
mov
cmp
out
push
xchg
adc
sub
cmp
lds
loopnew
adc
inc
cld
push
pop
or
push
push
jne
or
hlt
orb
xchg
movups
cld
push
push
pop
adc
cmp
cmpsl
mov
call
mov
in
xchg
loopne
popa
sbb
inc
mov
or
add
add
add
mov
incb
sbb
stos
push
mov
mov
jp
xlat
push
fdiv
xor
call
adc
sub
pop
ficoml
bound
nop
sbb
xchg
sub
pop
push
pop
adc
dec
and
lcall
pop
mov
adc
out
mulb
add
add
add
add
jb
sbb
sub
pop
movsb
lock
ds
out
adc
xor
dec
add
pop
sarl
sbb
stos
insb
add
call
adc
pop
insb
sarb
outsb
cltd
and
mull
cmp
xor
sub
xchg
pushf
mov
mov
sub
hlt
repnz
add
add
add
add
or
jecxz
sbb
xchg
jnp
ss
xchg
cmp
hlt
push
pop
xchg
adc
stc
bound
in
mov
xchg
push
dec
push
arpl
jb
mov
stc
ss
in
bound
push
jb
pop
sub
in
pop
dec
or
dec
in
add
in
add
push
add
dec
push
add
lods
dec
call
adcb
lret
adc
push
pop
cmp
mov
ds
jne
pcmpeqb
and
rcl
mov
sbbl
add
add
and
add
arpl
into
out
dec
ljmp
divb
pcmpeqb
fistl
mov
int3
shrb
add
add
add
lahf
decb
mov
mov
lods
push
fisttpl
mov
ljmp
push
add
imul
call
incl
adc
xchg
jl
inc
sbb
sbb
mov
call
jae
rcll
jno
imul
cmpsl
add
mov
jns
add
ret
cmp
sub
std
jmp
out
inc
idiv
ljmp
jno
pop
xor
jmp
dec
arpl
pop
out
imul
pop
mov
sub
call
aam
pop
or
lods
push
out
shl
notl
add
xor
test
ret
in
hlt
lock
fistpl
and
stos
subps
repz
pop
ret
sti
add
dec
add
pop
out
pop
cwtl
sub
and
add
xor
or
nop
mov
jecxz
xlat
dec
lcall
enter
xor
iret
ret
pop
sub
stc
test
rcr
call
sub
mov
pop
xor
test
fmuls
push
es
inc
add
ds
cs
pop
pop
roll
popa
js
loope
dec
stc
sbb
pop
jmp
pop
stos
shl
mov
xlat
int3
lods
in
xlat
int3
bound
test
negl
jb
sbb
fimull
push
bound
pushf
add
inc
xlat
testb
xlat
in
add
add
or
sbb
into
pusha
jecxz
incl
jbe
orb
dec
or
sub
adc
xlat
or
inc
pop
pop
jbe
bound
test
mov
xchg
push
in
cwtl
adc
mov
push
add
dec
out
mov
imul
add
test
xchg
in
adc
test
leave
jp
jmp
inc
jg
mov
add
or
jg
add
ljmp
aaa
xor
repz
xor
cmp
cs
or
es
ret
and
ret
std
ljmp
clc
sbb
mov
push
insb
lret
jle
sub
ds
xchg
pop
push
sub
sub
add
es
jae
jge
movups
scas
cli
aas
pop
mov
dec
pop
inc
sub
mov
or
xchg
lods
divl
inc
jmp
cmp
pop
xor
sbb
or
xor
sbb
xor
js
sbb
cmp
adc
mov
add
push
clc
aaa
loopne
clc
lods
pop
mov
gs
outsb
xor
int
mov
loopne
test
mov
adc
shl
jg
pop
cmp
mov
jp
dec
loopne
jbe
in
fstps
or
test
js
add
dec
test
hlt
sub
sub
popf
dec
out
and
pusha
push
les
inc
mull
add
int3
mov
sub
add
shll
add
add
add
sub
aam
cmpsl
cmp
int
and
dec
addb
nop
in
fbld
sub
mov
jge,pn
or
cmpsl
cmp
gs
and
jge
sbb
push
in
xchg
and
push
stc
mov
cltd
call
dec
jecxz
hlt
lret
mov
cmp
call
pop
add
lcall
mov
mov
mov
add
add
lret
fdivr
or
rol
pushl
add
stc
scas
shlb
xchg
fisubrs
fsub
sub
push
sub
repnz
addr16
sarb
add
push
dec
cmp
inc
rcll
in
aas
sub
lret
ficoms
lret
outsb
jnp,pt
dec
hlt
cld
mov
add
add
add
xor
dec
fdivrs
aam
jge
jnp
mov
pop
jnp
mov
packsswb
clc
jl
mov
fadds
push
lea
mov
pop
mov
flds
sti
push
sub
xlat
and
jl
cmc
imul
mov
clc
adc
sub
loopne
pop
rclb
add
arpl
repz
ret
out
cld
stc
into
mov
dec
sub
cwtl
mulb
lea
inc
jl
test
out
ljmp
sti
pop
push
or
loop
scas
cld
movsb
das
outsl
add
jge
jecxz
jae
mov
add
jbe
test
and
outsb
pop
pop
test
scas
add
idivl
daa
ret
je
loopne
add
fnstenv
pop
or
lods
rcrl
movsl
stc
cmp
enter
sbb
pop
and
test
xchg
fdivl
arpl
call
sub
dec
loope
call
stc
stos
test
stc
mov
fsts
in
sbb
push
add
shr
fisubs
jge
push
add
pop
aam
sarb
jb
jae
add
es
cmp
and
movsl
inc
loope
arpl
sbb
push
add
add
add
mov
and
and
test
fsubl
sti
mov
push
push
cmp
jne
and
push
test
stc
mov
add
push
imul
add
add
add
fdivrs
test
scas
clc
mov
xchg
add
add
pop
inc
adc
stos
incb
pop
dec
fmuls
mov
pop
adc
push
xchg
cmovo
mov
stc
pop
sub
test
push
das
ljmp
jge
mov
sbb
add
repz
pop
cmp
pop
incl
aad
add
addr16
mov
je
xor
ss
jmp
or
jne
adcl
push
sahf
sub
std
ss
xchg
add
add
sbb
add
mov
jecxz
pop
cld
jmp
sub
mov
jns
or
hlt
add
xor
or
rorb
jne
fsubrl
add
add
add
pop
out
xchg
ja
xchg
push
scas
aaa
sbb
sub
mov
fimull
add
sub
ret
xchg
inc
mov
inc
mov
push
adc
sbb
std
xor
or
sbb
and
fisubrl
add
loop
add
sub
ret
xor
adc
je
sbb
sbb
push
fildl
imulb
pop
fstp
cwtl
test
jne
sbb
jb
push
repz
stc
mov
lods
lret
jg
inc
fyl2xp1
jmp
cs
jo
fildl
xor
insl
sub
fldcw
aad
xor
aam
outsb
mov
mov
xchg
jle
stc
push
lahf
mov
dec
sub
xchg
stc
cmpsl
mov
xor
sub
xchg
stc
es
mov
pop
pop
aam
push
fnsave
repnz
or
pop
add
jne
push
dec
and
add
sbb
cmc
fistps
cmpl
inc
or
sbb
ficomps
clc
orb
xchg
fdivr
xchg
sbb
mov
push
idiv
cmp
mov
sbb
or
lahf
push
or
xchg
sbb
cmp
stos
xchg
mov
pop
movb
push
test
pop
ja
sub
shll
cmp
add
sub
mov
cli
sbb
push
adcl
jmp
add
cmc
dec
cld
or
in
add
cs
add
inc
add
test
mov
xchg
stc
stc
movsl
aas
mov
lahf
popf
incl
lea
mov
xchg
xchg
dec
mov
outsl
insl
jmp
pop
mov
mov
inc
test
dec
in
or
dec
hlt
test
loop
sub
out
lahf
movsb
idiv
adc
out
ljmp
idiv
add
jmp
add
es
outsl
movsb
xlat
jecxz
call
add
mov
rcl
add
pop
rcr
pop
out
mov
and
adcl
enterw
mov
repnz
add
aad
adc
mov
inc
pop
pop
mov
push
aad
inc
mov
add
scas
mov
sub
pop
sub
cmp
and
add
sti
out
std
mov
and
push
and
push
shl
loope
test
fdivr
mov
pop
popa
daa
add
test
call
xor
add
mov
call
test
fwait
pop
or
jne
out
push
pop
add
addr16
je
test
adc
cmp
pop
test
add
ret
std
or
add
adc
loope
or
add
rcrb
add
pop
add
or
lock
cld
aam
jmp
inc
scas
lock
mov
and
repz
add
cmp
push
sub
jnp
or
push
pusha
jns
add
push
idiv
sbbl
call
lahf
jae
adc
inc
rcrb
stc
pop
in
stc
inc
lods
add
sub
popa
or
ret
scas
popf
add
sub
push
scas
pop
add
sub
js
scas
push
add
sub
add
test
scas
inc
add
sub
shl
sti
or
add
add
add
add
xchg
adc
add
cmpsl
mov
mov
mov
adcl
fdivr
xchg
cltd
in
xchg
nop
push
sti
xchg
add
sti
stc
scas
pop
daa
or
sub
dec
mov
movsb
je
inc
shlb
in
rcl
sub
dec
sub
add
and
cmpsl
xlat
mov
sub
add
and
add
out
add
mov
out
and
data16
dec
testl
dec
out
dec
bound
fs
sub
out
jge
mov
cld
lods
shl
add
shll
lcall
jmp
roll
jbe
popf
hlt
insb
jbe
xchg
stc
pop
mov
lcall
pushf
or
add
add
add
add
loopne
inc
cmp
stc
out
pop
add
xchg
sar
jmp
push
xlat
xor
sub
or
add
test
lock
add
add
sub
out
es
add
stos
iret
sti
loope
or
sub
mov
pop
or
sub
stc
push
jae
out
stc
xchg
and
in
pushf
lock
sbb
mov
ss
incl
ja
cli
xchg
in
add
pop
test
stc
cmp
insl
or
mov
testl
inc
aam
add
sbb
jmp
add
jg
fs
je
add
incl
dec
cmovle
add
cwtl
mov
std
test
adc
rcrl
cmpl
add
or
mov
xlat
push
push
sub
hlt
cwtl
notb
cmp
sti
jge
dec
call
test
jmp
clc
stc
push
std
ljmp
insl
adc
ss
stc
insl
cmp
sti
sub
mov
idiv
mov
es
call
and
sti
sar
add
lds
ret
mov
sub
xor
xchg
rcrb
jb
or
mov
hlt
sti
lods
pop
mov
or
loopne
sub
pop
aam
icebp
sub
sub
out
pop
xchg
sbbb
sub
out
cltd
ret
push
stc
push
lock
mov
mov
pusha
mov
int3
sub
movsl
xchg
or
add
into
adc
into
out
cmp
or
add
insb
push
std
xchg
filds
xlat
je
inc
loope
push
out
out
loop
loop
stos
pop
out
and
data16
dec
push
add
int3
stc
jmp
mov
cli
sahf
mov
jl
add
test
stc
push
aaa
or
stc
jmp
movl
add
fdivrl
add
sub
push
inc
push
call
movsb
into
sti
and
fs
stc
push
daa
pop
add
sahf
mov
cmpsl
jmp
jne
call
jne
jge
les
clc
test
insb
mov
inc
and
add
push
idiv
cmp
stos
idiv
clc
jg
add
shl
jle
cltd
lods
call
adc
pop
notl
lcall
mov
xchg
cld
popf
shlb
in
aam
mov
cmc
cmp
push
mov
cmc
ljmp
decb
cld
mov
testl
sub
std
incl
sub
clc
jg
clc
stc
mov
xchg
repnz
ja
clc
stc
movsl
cmp
sti
xchg
mov
inc
mov
sbbb
dec
stc
mov
push
cwtl
addr16
repnz
cli
dec
mov
call
test
sbb
stos
inc
in
sti
sub
mov
repnz
mov
sbb
add
add
add
sub
inc
cmpsb
pshufw
aaa
repz
in
add
cmc
xor
out
lods
mov
not
lret
inc
mov
add
mov
pop
add
mov
movsb
push
add
pop
stos
jg
int3
mov
dec
pop
out
js
ja
jae
addr16
arpl
out
sub
arpl
test
and
add
add
add
test
maxps
int3
sub
jmp
aaa
mull
lret
sub
add
das
out
xor
push
and
movsb
cmc
vpmaxub
mov
shlb
or
lret
sbb
out
lret
rol
fnstcw
mov
lahf
or
sti
mov
je
inc
in
jns
add
and
xchg
stos
fadds
pop
orl
pop
stc
jmp
into
sti
inc
ss
nop
jmp
xor
stc
add
adc
stc
jmp
add
stc
push
sub
add
adc
cmc
push
mov
add
sbb
cmp
cmc
push
dec
decb
hlt
dec
mov
and
cmc
incl
je
insl
repz
testl
or
add
jg
addb
jo
push
cmp
out
hlt
lret
jnp
xor
lods
std
hlt
lret
cmp
fdivs
inc
lahf
mov
push
into
shlb
int
jge
sub
in
stc
sub
sti
cmc
enter
shr
stc
add
mov
push
mov
xor
and
fsubr
test
jg
xor
das
inc
or
sub
xor
cmpsl
cltd
lock
test
out
jae
push
or
orl
stc
mov
loope
push
push
and
xor
scas
popa
lock
sub
imul
jge
fistps
push
lock
out
test
lcall
push
mov
sub
out
pop
sbb
mov
mov
loopne
test
cli
int
lea
xor
call
movb
test
and
add
lcall
mov
cli
pop
aam
jb
test
adc
sbb
push
mov
xchg
dec
icebp
out
cmp
fmull
add
sbb
test
stc
push
lea
mov
stc
push
mov
cli
rolb
loope
dec
adc
sbb
bound
cmp
call
push
adc
loope
stc
cmpsb
sub
push
mov
push
jp
jmp
test
mov
or
cmp
stc
mov
xor
jge
in
push
push
inc
imul
decl
adc
sahf
movsb
std
sbb
je
sub
movsb
std
sub
test
dec
add
idiv
inc
mov
add
jecxz
push
sahf
fdivr
in
mov
jmp
mov
loopne
mov
mov
mov
dec
sahf
jge
scas
mov
call
cmp
testl
jecxz
idiv
inc
dec
or
data16
sub
scas
cmp
jge
lret
outsb
add
stc
sub
out
stc
adc
jbe
jl
imul
add
add
add
std
mov
test
push
scas
fsub
int3
ljmp
in
lock
int
mov
out
in
ljmp
mov
add
std
lcall
dec
push
cli
add
ljmp
mov
push
frstor
out
dec
ljmp
xor
or
ret
pop
push
xor
pop
mov
push
roll
push
cmp
push
and
adc
out
adc
es
sub
cmpsb
add
sbb
add
sbb
add
adc
cmpsb
add
es
ret
sahf
ret
and
xchg
dec
add
ret
and
ret
xchg
addr16
xchg
ret
sbb
cltd
pop
sub
add
pop
icebp
add
pop
mov
add
outsb
pop
push
cli
mov
sub
sub
aas
mov
dec
mov
mov
xchg
inc
dec
jle
jae
mov
mov
jmp
add
stc
out
repz
and
cmp
push
adc
lods
lds
mov
dec
and
mov
mov
js
xor
jno
mov
add
add
add
add
sbb
call
add
in
jecxz
pop
das
jecxz
movl
inc
outsb
mov
and
jmp
outsb
dec
mov
mov
push
or
aaa
push
push
pop
mov
in
mov
int3
push
or
mov
inc
or
push
add
cmp
add
pop
sbb
shlb
mov
add
dec
out
jno
add
ret
sbb
cmp
pop
xchg
roll
pop
rolb
int3
xlat
xchg
int3
sub
jns
and
cmp
mov
mov
loope
push
and
add
mov
int
xorl
test
sbb
dec
or
das
sub
add
in
sub
js
xor
pop
mov
jmp
xchg
inc
add
pop
add
sub
add
push
dec
call
arpl
mov
or
jo
push
xchg
gs
popf
cs
subl
test
push
lret
les
mov
mov
jae
mov
scas
pop
mov
xchg
out
insl
add
add
sub
repnz
cmp
ret
dec
ljmp
out
sub
xor
push
adc
xor
out
jmp
aas
dec
daa
pop
aaa
inc
pmaxsw
pop
sub
push
and
jecxz
movntq
outsb
int3
cmpsl
arpl
cld
mov
outsb
inc
dec
daa
mov
lahf
roll
adc
inc
adc
in
xor
sub
add
add
pusha
rolb
adc
adc
dec
insb
push
push
mov
mov
es
inc
gs
push
jo
stc
faddl
inc
dec
imul
adc
mov
pop
add
xchg
test
pop
push
scas
bound
jb
pop
dec
sub
push
ret
out
sub
push
add
pop
push
jnp
in
fsubl
cmp
cmp
push
inc
cmp
or
enter
popa
add
pop
push
notl
test
add
push
and
dec
add
inc
add
test
out
clc
adc
inc
and
add
and
loop
repz
add
orl
loopne
pop
mov
inc
iret
cmp
or
shl
jnp
addl
aas
inc
cld
sbb
add
sti
xor
add
repnz
jl
push
and
jae
xchg
pshufw
push
scas
xchg
pop
shl
adc
lds
stc
sbb
sub
loope
push
jge
add
dec
mov
add
dec
mov
in
cmc
cmp
std
call
insb
test
cmp
xor
sbb
push
cmp
dec
lds
pop
clc
ret
push
push
mov
and
popa
outsb
inc
mov
data16
xor
jp
aas
stc
inc
sub
inc
inc
ficoms
add
add
add
addr16
insl
fisubrl
jle
push
ljmp
push
int3
and
out
inc
stc
inc
sub
and
jmp
xor
jnp
daa
pop
cmp
cmpsl
sbb
and
pop
lods
movsb
sti
gs
jnp
push
mov
movsb
out
cmp
cmc
cmp
jge
mov
les
jb
es
es
add
repz
stos
add
mov
add
adc
dec
stc
out
mov
jb
repnz
mov
in
test
movsb
dec
in
out
dec
addl
sbb
sub
loopne
mov
adc
sbb
shrl
or
test
add
dec
adc
jb
push
bound
addl
mov
ret
add
add
add
add
sbb
jge
in
scas
add
sbb
jnp
sub
sub
je
jae
adc
inc
je
mov
jnp
in
sbb
add
xchg
add
mov
jmp
stc
mov
mov
test
push
addl
not
sarb
frstor
addl
shlb
and
mov
sub
mov
push
divl
cmp
dec
mov
and
sub
iret
jge
mov
aas
cmp
or
push
mov
ja
les
sub
sub
fsubrl
xor
xchg
add
jne
or
inc
inc
std
ljmp
add
cmp
mov
add
fstpl
add
add
ror
pop
jnp
in
mov
add
pop
sbb
pushf
les
add
push
cmp
lret
jecxz
push
pushf
syscall
pop
sub
scas
push
mov
pop
dec
ds
pushf
filds
cmpsl
push
mov
mov
out
insl
stc
cmpsb
popa
fistpll
hlt
dec
mov
add
add
add
xchg
mov
mov
sub
outsb
ljmp
pop
ljmp
mov
mov
add
and
mov
cmpsl
pop
add
cmp
or
ss
call
jb
arpl
cltd
push
pop
insb
push
and
sahf
or
jo
out
cmpsl
mov
add
add
add
add
inc
add
out
sbb
bound
xor
jb
pop
test
mov
mov
stos
fcompl
and
test
hlt
mov
jge
and
or
pop
add
scas
push
je
repnz
test
daa
push
cmp
fs
add
addr16
mov
jnp
pop
fwait
repnz
mov
ja
sbb
add
pop
jne
push
unpckhps
xor
cld
ds
dec
push
stc
inc
dec
or
les
jge
insb
mov
push
add
loopne
or
add
add
mov
and
jbe
xchg
cli
add
orl
cli
int
sbb
dec
ret
idiv
rcr
add
sub
xchg
add
mov
ljmp
mov
insl
inc
and
jg
enter
rol
xor
fildl
cmp
data16
fnstcw
sar
mov
mov
decl
int3
jbe
test
hlt
in
test
xor
int3
jne
add
dec
cmc
inc
jl
pop
mov
std
ljmp
inc
inc
je
test
mov
dec
xor
les
cmpsb
gs
sub
call
aas
scas
dec
ret
imul
add
pop
je
cmp
xor
sub
movsl
xchg
push
lods
pop
xchg
mov
ss
jnp
in
and
mov
pop
into
les
xchg
jmp
repz
cmpsl
pop
jnp
imul
das
fcomi
jmp
mov
fisubs
cmp
cmp
arpl
mov
inc
pop
inc
dec
or
add
iret
adc
pop
cmpsl
pop
iret
add
dec
out
fimull
addl
xor
stc
mov
pop
inc
jo
stc
dec
mov
mov
fs
stc
ss
rorb
sahf
repnz
clc
pushf
dec
mov
fidivrl
mov
out
mov
fistps
or
popa
test
cmp
into
cmp
call
out
inc
xchg
ljmp
mov
mov
shl
push
jae
stos
mov
out
ficomps
out
loopne
inc
icebp
mov
xchg
xchg
hlt
push
lea
sbb
pop
add
int3
int3
push
iret
int3
int3
fisubs
cmpb
stc
incl
adc
cmp
pop
je
or
jmp
push
inc
aam
mov
incb
ret
sbb
pop
test
fildl
test
sbb
add
sti
jno
cmpsl
aas
dec
or
mov
xorl
loopne
inc
adc
mov
scas
sti
xor
ds
fsubs
and
xchg
mov
ds
dec
les
aas
int3
add
mov
outsl
sbb
ljmp
dec
mov
inc
bound
mov
sub
cld
test
mov
sbb
ljmp
mov
xor
adc
std
ljmp
cmpsb
cmpb
or
rdseed
incl
insb
or
inc
jo
xor
or
std
or
or
add
movsb
push
movsb
cmp
out
push
cwtl
jecxz
dec
xchg
inc
repnz
mov
xchg
push
cmp
daa
add
sbb
out
mov
jp
cs
out
int
inc
add
ja
add
pop
leave
push
loop
fisttpl
mov
aas
mov
or
and
xchg
cmpsl
add
push
andl
add
add
add
add
scas
push
int
fcoml
or
out
cmpsl
push
inc
or
mov
je
test
add
sub
push
push
mov
cmp
xchg
inc
or
push
insb
jb
inc
test
out
cltd
dec
adc
pop
ljmp
mov
scas
sbb
jo
test
aad
sahf
imul
scas
add
dec
mov
push
inc
cmpsb
and
pusha
aas
mov
sub
add
jge
sub
jmp
das
push
insb
jb
inc
shrl
pop
add
sub
mov
xchg
cltd
aas
dec
mov
and
shll
push
mov
jecxz
fsubr
imul
fwait
xchg
aam
push
add
out
lretw
mov
add
add
add
add
fwait
xchg
pop
mov
sahf
mov
stc
decl
shlb
jg
add
add
shll
add
jae
lret
ljmp
xchg
add
inc
je
aad
pop
ljmp
cmc
ljmp
aad
dec
out
inc
js
xor
sub
cmp
push
popa
add
jnp
xor
xchg
add
add
add
sub
insb
mov
cmp
stc
xor
std
or
outsb
aaa
sub
mov
fiadds
test
add
cmp
test
cs
mov
add
xor
push
mov
inc
dec
das
inc
pop
mov
push
lock
lock
sbb
add
lods
jecxz
cltd
fbld
xlat
push
data16
dec
cmpsb
xorl
outsl
push
inc
cmp
fistpll
ds
xor
scas
sub
lcall
pop
inc
mov
jo
and
out
cmp
xlat
fsts
lods
pop
inc
xchg
sahf
push
incb
out
and
mov
es
stos
out
in
sbb
fsubrl
adc
cmp
pop
aas
add
mov
cmpsl
push
mov
mov
dec
clc
sub
mov
es
cs
inc
test
out
inc
xchg
xor
or
or
popa
test
fisubs
jno
fsubl
pusha
cld
cs
jo
daa
xchg
stos
fbstp
cwtl
sub
sub
insl
stos
mov
sti
and
scas
ret
sub
xor
mov
sub
add
std
jbe
or
je
lahf
clc
add
lods
test
testl
xchg
push
outsb
add
pop
pusha
mov
jnp
push
and
push
push
add
or
pop
xchg
cwtl
dec
insb
sub
mov
dec
pop
sub
xchg
xchg
movsb
sbb
adc
pop
mov
cwtl
mov
jp
dec
mov
add
xchg
cwtl
fstpl
add
sub
mov
xorl
std
or
inc
ljmp
add
mov
stc
incl
mov
mov
mov
incl
add
lds
leave
mov
sub
testl
iret
imul
dec
ljmp
pop
sub
std
incl
push
cmp
inc
xorb
shrb
mov
ljmp
inc
and
xor
xchg
mov
not
jp
scas
pusha
scas
mov
pop
xor
pop
int3
pop
mov
out
cltd
out
in
int
sub
scas
pop
and
push
repnz
daa
push
and
jg
push
outsb
cmp
inc
pusha
or
arpl
add
pop
addb
ss
xor
pop
dec
mov
stos
pop
sub
out
jmp
movl
repz
xchg
das
test
mov
add
add
add
add
in
cmp
jmpw
push
mov
sub
test
loop
xchg
js
test
lods
xor
jmp
pop
movsl
pop
das
adc
sub
es
test
pop
add
cmp
icebp
js
xchg
dec
inc
cmpsl
stc
bound
cli
icebp
pop
scas
repnz
bound
pushf
mov
add
add
add
cmpsl
stc
jno
sbb
add
sub
add
sbb
dec
sahf
xchg
shll
add
ret
add
push
add
inc
daa
mov
leave
stos
sbb
jmp
or
bound
cmp
push
inc
ret
xorb
sub
pop
clc
pop
jnp
or
cmc
mov
orl
out
imul
cld
inc
xor
leave
dec
ljmp
inc
je
out
addr16
nop
push
push
push
fbld
aas
cmp
inc
dec
cld
inc
jg
sbb
std
test
test
bound
push
idiv
int
jg
sbb
std
xchg
cmpsl
cwtl
mov
std
lcall
dec
xchg
xor
add
mov
add
add
add
add
inc
inc
pop
cmpsl
jle
add
rolb
sub
sbb
jno
clc
xor
insb
adc
push
aad
call
inc
mov
mov
les
sahf
cmp
adc
lock
faddl
jg
jecxz
cltd
fbld
jecxz
inc
es
sbb
ja
inc
shrl
out
popa
loopne
jl
into
cwtl
mov
push
mov
inc
inc
call
lahf
out
lods
pop
sti
jl
push
jo
and
and
add
xchg
das
add
negb
push
xchg
das
adc
push
fistpll
arpl
out
imul
stos
pop
out
jb
add
dec
xchg
push
subb
movsb
stc
call
cmpsb
ficoml
add
add
add
sub
mov
jno
movsl
stc
sbb
jmp
ljmp
pushf
mov
xorl
sub
jge
push
push
adc
ret
in
add
mov
sbb
std
imul
jge
push
daa
add
adc
mov
cs
or
add
aas
xor
fidivs
dec
and
cld
out
addb
inc
and
ror
mov
cmpsb
jl
or
aas
xor
pop
add
ret
or
and
lret
shl
jmp
cmc
push
pop
adc
idiv
test
mov
int3
push
int3
int3
mov
scas
dec
xor
mov
add
cltd
mov
sbbl
jge
jg
pop
test
sbb
add
iret
insl
or
in
sub
adc
sub
lahf
scas
les
call
sub
push
fisubl
jae
stc
inc
and
outsl
inc
add
sbb
push
push
mov
stc
sti
cmp
jge
stos
or
aas
mov
pop
orb
stc
mov
sub
xchg
add
xorb
and
cli
lea
push
adc
icebp
sbb
insl
xchg
sbb
mov
ja
icebp
push
inc
ret
pop
leave
inc
mov
testl
not
stos
mov
data16
iret
inc
sub
cmpsl
aaa
sub
pop
mov
dec
pop
out
push
in
add
pop
es
add
dec
xchg
js
add
push
mov
ret
js
sti
pop
xor
addr16
jecxz
push
mov
int3
pop
pushf
stos
clc
lods
pop
adc
mov
out
sub
loope
fdiv
ret
adc
adc
call
mov
xacquire
push
cli
je
movsb
pop
sub
icebp
xor
bound
test
add
dec
and
pop
shll
jl
repnz
inc
adc
sub
add
cmp
pop
lret
inc
mov
movsb
in
rcrb
fiadds
mov
dec
xor
jno
jo
dec
frstor
and
in
test
sbb
jmp
call
enter
add
hlt
adcb
rcrb
push
ret
cwtl
loopne
add
xor
out
inc
inc
xor
add
and
jae
es
mov
dec
and
gs
int3
mov
in
mov
push
jge
int3
push
hlt
adc
and
movhps
add
cltd
jge
jo
add
add
jmp
add
test
sbb
dec
add
icebp
call
jl
push
add
xchg
scas
jnp
sbb
inc
add
add
cmp
mov
dec
cmp
inc
aam
ja
jne
or
fsubrs
mov
ljmp
daa
bnd
in
andl
inc
add
sar
shrb
enter
add
add
add
add
mov
daa
and
or
test
test
jecxz
mov
into
add
mov
mov
or
cltd
sarb
xor
int3
push
or
sub
ss
add
movsl
cli
mov
sbb
add
iret
add
test
lret
dec
js
inc
adc
rolb
add
add
add
add
push
out
sub
outsb
inc
or
int
out
test
enter
shrl
call
add
sub
aad
add
push
bound
sbb
pop
icebp
fsubrs
imul
sub
mov
pop
jp
fdivrp
and
add
mov
and
add
add
add
and
push
and
push
mov
dec
or
sub
add
sub
jmp
push
lock
loope
icebp
cmp
and
fldenv
ss
jmp
fcom
outsb
lds
dec
clc
jmp
clc
dec
or
inc
mov
add
rcll
pop
jnp
jae
sbb
iret
orl
add
loopne
nop
fmull
mov
imul
andb
sbb
xchg
or
mov
adc
add
add
add
cmp
xchg
fdivrp
call
cmp
test
ljmp
xor
lret
cmp
jecxz
out
mov
mov
imul
cmp
clc
push
fdiv
xor
pop
jne
xor
sti
std
cmp
add
cmpb
hlt
cmpl
clc
pop
adc
lret
jge,pt
jbe
repnz
fidivl
fildl
xchg
int3
inc
add
mov
ljmp
aam
mov
adc
movsl
ss
lds
sub
cmp
jmp
and
cmpsb
lods
mov
mov
and
aaa
fdiv
xor
add
ss
test
push
cltd
out
inc
and
sbb
add
hlt
test
sub
and
mov
insb
xchg
popa
out
jp
xchg
out
add
movsb
stos
and
fs
add
aas
outsb
rorb
or
cs
sub
je
xor
jmp
andb
jmp
in
jmp
dec
test
add
in
divl
ss
out
sub
fimuls
jmp
pop
sbb
frndint
cmp
add
or
es
sbb
xchg
jnp
test
loopne
xchg
cltd
shrl
outsb
lods
fstpl
jo
filds
mov
mov
sub
push
mov
dec
cli
mov
test
sbb
out
movsl
sbb
mov
roll
xor
jnp
shl
mov
add
add
add
jae
add
andl
sbb
testl
pop
test
sbb
add
in
mov
pop
addl
test
mov
jge
cld
sahf
imul
and
je
movsl
inc
adc
dec
xor
mov
test
xchg
ljmp
lret
mov
jb
and
mov
mov
fmuls
add
add
add
mov
clc
xlat
movsl
dec
andl
rorl
std
jae
adc
mov
push
push
sti
pop
mov
sub
inc
sbb
ret
add
add
xchg
mov
adc
in
inc
inc
add
mov
shrb
inc
adc
pop
out
add
arpl
add
add
add
pop
out
popa
xchg
out
scas
push
icebp
add
push
daa
insl
pop
loop
cs
cmpsl
mov
outsb
dec
or
fwait
loop
out
mov
push
lret
push
outsb
push
ljmp
push
pop
test
test
sbb
shr
pop
push
bound
out
mov
mov
inc
inc
adc
jmp
out
sub
sbb
cmpsl
jecxz
mov
pop
dec
add
xor
add
fildl
sub
call
scas
loopne
shrb
cmpsb
sbb
jmp
movsb
nop
or
sub
jb
aas
subl
sbb
add
sub
test
jb
add
sub
icebp
cmpsb
cmp
adc
sub
test
pop
add
xchg
add
lods
aam
jmp
adc
add
xlat
and
sub
cmpsl
loopne
jb
xchg
mov
dec
add
pop
or
jb
fbstp
push
add
bound
xchg
ds
mov
aam
inc
mov
testl
or
sti
jb
lret
aas
adc
sbb
orl
dec
clc
dec
fcoml
push
xchg
out
out
scas
pop
add
fwait
test
hlt
push
sti
add
xor
dec
clc
test
jecxz
clc
fcompl
test
xchg
incl
mov
add
add
add
notb
adc
add
sub
orl
mov
std
lret
inc
jge
and
pop
clc
sub
jge
cmp
or
mov
add
add
add
rcll
loope
mov
insl
sub
dec
cmp
pop
test
roll
xor
mov
call
mov
add
mov
test
incl
mov
std
ljmp
outsl
push
or
mov
jl
push
mov
adc
pop
loop
adc
sbb
cmpsl
pusha
xchg
movsb
inc
sahf
mov
add
add
add
movsl
jmp
add
popf
imul
scas
pop
sub
push
out
loop
es
shlb
sub
sub
out
cmpsl
jecxz
ret
out
movsl
fldz
mov
fdivrs
mov
add
call
jecxz
and
dec
add
push
dec
add
jecxz
add
cmpsb
xor
movsl
mov
outsb
push
inc
pop
add
add
pop
add
stos
adc
sbb
sub
jge
cmp
add
stos
push
add
xor
jo
lcall
add
sub
loop
pop
jge
sub
es
das
movsb
xchg
jmp
hlt
xchg
add
movsl
jo
jmp
fsubp
sti
bound
loopne
stos
pop
or
xchg
std
and
lcall
add
add
add
lcall
and
xchg
std
push
stc
xchg
and
lcall
test
out
adc
aaa
or
sbb
stos
lahf
out
lcall
call
adc
jne
pop
jecxz
add
call
adc
cli
mov
add
ret
cwtl
out
pop
sub
add
mov
pop
xchg
ja
inc
add
jecxz
add
sti
call
clc
fs
test
mulb
lock
jge
sbb
test
and
add
jns
decb
test
ds
int
fsubrs
adc
test
mov
and
lahf
or
adc
ror
scas
jge
insb
incl
add
std
jmp
js
add
lds
rcrb
mov
add
xchg
xor
jb
adc
xchg
mov
sbb
pop
out
icebp
xchg
outsb
dec
push
lcall
adc
mov
jmp
cmp
and
xchg
add
cmp
inc
add
mov
insb
and
data16
out
push
fidivrl
sbb
add
aad
mov
fistpll
test
push
jo
ret
test
pop
mov
sbb
call
lds
and
jle
test
add
xchg
and
xor
jns
xor
add
add
add
add
ljmp
scas
xchg
out
cmp
scas
loop
inc
adc
pop
add
ljmp
push
push
push
dec
and
lods
in
imul
mov
or
mov
int
addr16
icebp
mov
or
ljmp
mov
push
and
add
push
bound
cli
jecxz
jo
dec
push
jmp
mov
pop
jb
or
add
xor
dec
sbb
dec
xchg
movsb
and
and
add
pushf
pop
dec
lock
xor
sub
push
inc
push
testl
stos
test
xchg
imul
pushf
lock
pop
dec
lea
push
or
incl
rcrl
bound
inc
dec
jo
jmp
pop
add
sub
ret
or
push
sub
inc
into
js
pusha
and
ljmp
add
xorb
sub
dec
sbb
mov
out
xchg
imul
inc
mov
fsubrl
icebp
jl
pushf
std
or
sub
in
inc
mov
test
aas
jge
nop
xlat
xchg
ja
ljmp
inc
popf
test
mov
rcr
mov
jb
lods
or
in
cli
arpl
sub
incl
das
les
inc
clc
xor
jbe
xchg
pop
data16
inc
pop
fidivrl
pop
out
and
in
add
mov
idivl
sub
push
mov
insl
testb
aad
cmp
scas
loope
roll
ss
scas
movsl
fisubrl
stos
pop
and
add
pushf
lods
dec
sahf
inc
adc
imul
insl
ficomps
dec
or
lods
ret
sub
add
mov
fdivrp
flds
jmp
mov
sti
bound
insb
pop
loopne
in
ds
push
std
shlb
fsincos
jno
cs
pop
in
jns
shl
into
add
sub
mov
push
cmc
test
jmp
mov
repz
mov
inc
sub
add
stos
nop
psadbw
xchg
mov
pop
cli
dec
in
les
add
adc
add
jl
flds
sbbl
adc
lret
loopne
loope
inc
add
or
dec
mov
idivl
arpl
sarl
mov
rclb
hlt
xchg
test
mov
int3
idiv
pop
loopne
inc
adc
jmp
cld
add
add
gs
dec
scas
pop
shll
mov
test
or
add
shrl
adc
mov
xchg
ret
in
sahf
stos
stc
movsl
push
fnstcw
sahf
cmp
sub
pushl
cld
inc
sub
xchg
sub
jl
xchg
std
jae
or
addb
cmp
bound
inc
sbb
cmpsl
std
jb
add
sub
add
add
add
add
std
jge
stos
scas
stc
test
inc
pop
add
push
cmpl
sub
out
mov
pop
fs
dec
cwtl
call
lcall
lcall
pop
out
lea
xchg
push
add
lcall
inc
pop
out
data16
jo
sbbb
push
lcall
add
out
arpl
in
sub
insl
inc
mov
or
pop
out
imul
jg
push
push
mov
jg
push
pop
out
out
es
rcrb
add
xchg
aad
test
pop
add
movsl
adc
jmp
sub
add
addl
dec
push
jnp
sub
stc
jmp
sbbl
add
add
icebp
out
pusha
adc
jb
jg
cltd
cmp
in
stc
popf
pop
and
sar
add
mov
pop
jb
adc
icebp
sahf
push
cmp
jl
test
mov
add
pop
jge
popf
dec
cltd
jo
testl
dec
in
call
push
jg
clc
and
incl
jmp
dec
fists
add
and
add
sarb
xchg
and
add
jnp
mov
aas
dec
clc
sbb
or
mov
loopne
call
xor
add
add
push
mov
cld
enter
enter
rcrb
repnz
call
and
loopne
inc
dec
mov
dec
and
pop
add
sub
mov
mov
jecxz
inc
hlt
and
sub
std
incl
jne
pushl
ds
add
xchg
fprem
mov
js
in
mov
std
lcall
jne
xchg
jne
jbe
fwait
adc
aaa
jne
mov
cmp
ffreep
jl
ds
or
xor
jb
jo
mov
sarl
sub
das
cld
sub
pop
daa
pop
out
xor
in
lock
xchg
arpl
lret
xor
movsb
jl
jnp
jne
push
lahf
imul
out
idivl
inc
sahf
sub
lods
in
dec
cmp
pop
push
fwait
xor
lods
int
pop
pop
ds
jecxz
movsl
fcompl
les
push
lods
cmpsl
aas
pop
xchg
pop
and
mov
scas
fdiv
roll
inc
ss
jnp
pop
into
add
xchg
scas
ret
dec
pop
ljmp
pop
out
inc
ss
mov
nop
fdivrs
gs
add
jmp
sub
test
xor
sub
jmp
out
pop
add
or
pop
add
insl
pop
shrl
jp
in
pop
or
add
ficoms
fadds
das
cs
sub
cmpsb
xorb
in
and
sub
add
addl
movsl
inc
add
sub
mov
mov
sti
bound
loopne
stos
pop
or
lcall
dec
push
push
orl
clc
call
sbb
dec
and
sbb
stc
mov
inc
inc
mov
add
ret
pop
call
mov
mov
ret
sbb
shll
sbb
sbb
addl
add
or
mov
leave
cli
fdiv
cmp
inc
nop
add
cld
add
add
pop
mov
mov
cld
enter
enter
rcrb
imul
ljmp
jbe
int3
dec
std
xor
mov
lods
dec
dec
mov
add
cld
mov
mov
repz
aas
hlt
inc
mov
mov
mov
int
out
getsec
aam
inc
mov
mov
je
in
mov
std
js
mov
loop
jns
js
sahf
ss
adc
aaa
jns
mov
dec
test
push
cmc
mov
inc
jnp
jbe
pushf
or
pop
mov
cld
sub
aas
sub
out
add
leave
in
pusha
imul
loope
lret
loop
lret
xor
loop
in
lahf
imul
outsb
cmp
mov
mov
inc
bound
lret
pop
cmp
jecxz
lods
in
shlb
ljmp
rcrb
mov
enter
mov
stos
das
les
insl
and
pop
pop
out
dec
dec
clc
jnp
orb
sub
shrl
xchg
sub
test
rorl
leave
and
inc
scas
sub
add
sub
sub
mov
cmpsb
stc
sti
jmp
sub
or
sub
dec
jne
imul
icebp
inc
shl
ljmp
add
add
add
add
pop
test
sub
int
ja
dec
or
inc
movsl
pop
cmp
push
add
push
sbb
sub
jge
cltd
push
or
iret
cmp
incl
inc
loopne
xor
mov
and
mov
push
outsl
or
adc
add
mov
incl
cld
inc
xor
popa
outsb
psubusb
dec
fbld
inc
sub
mov
and
shlb
mov
scas
orl
xor
or
mov
cwtl
and
sbb
aas
mov
insb
addl
xor
std
mov
cmp
sub
xchg
adc
mov
out
or
xor
adc
xchg
or
js
sub
aaa
aam
pop
add
add
jl
push
aaa
hlt
mov
or
inc
sub
cmp
xchg
shlb
lock
fldl
repnz
pushf
xchg
jne
push
lock
jb
ljmp
iret
adc
xchg
test
and
std
ljmp
inc
insb
and
sub
fidivrl
sbb
add
add
add
add
mov
cmpsb
loope
pop
mov
jle
subb
push
xor
mov
scas
in
fisubrl
outsb
cmp
and
adc
jg
ret
jbe
outsb
cmp
cmpsl
xor
inc
lahf
andb
push
insb
repz
add
and
or
jp
jp
daa
outsb
push
mov
mov
andl
out
jmp
cmpsb
xor
das
inc
add
int3
pop
add
mov
test
data16
mov
stc
jmp
sub
sbb
outsb
xor
rorl
pop
inc
add
shrb
sbb
out
and
add
stos
testl
jmp
push
pop
or
push
add
stos
je
sbb
cli
jp
sub
add
cli
sbb
mov
jge
scas
mov
jge
xchg
fiaddl
sub
sbb
inc
or
xchg
mov
inc
test
add
xor
cmpb
pop
xchg
xchg
idiv
jmp
idiv
dec
jecxz
pop
enter
dec
sbb
inc
call
dec
mov
adc
adc
cmp
hlt
push
cmp
sbb
cli
incl
sbb
mov
xor
sbb
movl
sbb
pop
test
fdivr
dec
ret
testl
cs
xor
mov
out
xor
mov
stc
jl
sbb
jbe
cs
or
sub
insl
call
test
and
int3
in
xor
jno
add
jl
pop
cld
adc
bound
mov
xor
inc
rolb
or
cmp
clc
je
cmpb
mov
jns
and
lock
pop
testl
clc
sub
inc
inc
ss
xchg
sub
dec
adc
push
dec
in
push
pop
add
out
jmp
pusha
dec
sbb
packssdw
out
add
pop
out
inc
sub
loope
add
sbb
mov
xchg
andb
adc
ljmp
mov
out
frstor
xor
data16
mov
movsl
int
sbb
pushf
sahf
pop
sub
dec
lods
loop
fs
js
mov
add
add
add
push
enter
ret
icebp
sub
fidivrl
es
xchg
fidivrl
jle
xor
push
inc
xor
mov
push
xor
les
add
adc
add
rdpmc
add
xor
clc
xor
outsl
pop
xor
jl
xor
mov
cli
xor
test
xor
addb
add
add
add
add
xor
lds
add
addb
add
push
cmp
lds
add
dec
cmp
cmp
dec
cmp
ficoml
add
cmp
es
cmp
dec
pop
cmp
das
pop
cmp
jo
cmp
test
test
xchg
cmp
sahf
mov
or
dec
pop
jge
jg
test
das
pushf
shll
xor
pusha
je
and
leave
cmpl
dec
sub
add
jnp
lahf
shrb
push
std
ljmp
xchg
mov
sub
ds
push
adc
int3
pop
sub
int3
jbe
leave
int3
outsb
xchg
mov
mov
pop
in
push
mov
mov
stc
push
xchg
jl
push
xchg
sub
je
add
stos
outsl
stc
sub
xchg
stc
sub
xchg
stc
sub
xchg
stc
sub
hlt
pop
and
test
andl
adc
fsub
cmp
cs
data16
sbb
and
nop
into
cmp
add
pop
loop
sub
pop
inc
jbe
sbb
jns
inc
xchg
sbbl
adc
sahf
inc
xchg
jae
out
aad
loop
pop
jnp
stos
and
into
roll
les
xchg
or
mov
push
pop
push
add
popf
mov
sub
outsb
lds
and
movsl
int3
jmp
scas
jl
aam
pop
mov
insb
add
or
push
call
add
std
mov
sub
xor
std
and
std
xor
std
and
std
xor
std
and
std
xor
std
and
std
mov
lods
push
in
push
mov
push
icebp
add
or
and
add
push
cmovbe
ljmp
out
loope
les
imul
popf
jg
mov
lret
xchg
testl
mov
jge
pop
cltd
leave
add
jnp
push
and
inc
sbb
call
add
add
or
push
adc
icebp
add
and
imull
mov
add
sub
imull
mov
add
sub
imull
mov
add
sub
imull
mov
add
sub
mov
jnp
imull
cmp
mov
insb
add
sub
mov
jns
imull
cmp
mov
cld
push
imull
sub
mov
ja
imull
cmp
mov
push
and
test
or
jo
mov
sub
inc
pop
ja
adc
mov
test
lahf
mov
sub
pop
out
jecxz
lods
pop
inc
lahf
ljmp
push
xchg
or
jo
pop
mov
jle
cmp
pop
mov
add
add
add
fsubl
out
bound
cmpl
out
sub
cmp
outsl
jmp
or
jl
add
pop
sub
cmpsl
add
loopne
movsl
out
ljmp
or
insl
stc
jmp
sub
test
jne
push
sub
int
sbb
add
sub
sub
movsb
fsubrs
xor
pop
sub
inc
stc
jmp
stos
pop
sub
pushf
lods
mov
jmp
stos
pop
and
xchg
pop
jg
rcrb
jmp
ds
scas
in
dec
push
std
pushf
dec
cmpl
ret
add
and
add
imul
add
or
mov
fadd
fcomps
jns
mov
add
add
add
and
inc
ret
push
or
add
mov
popf
lret
cmpb
fiadds
or
add
xor
inc
call
add
dec
cmp
or
push
and
xor
pop
sub
mov
add
add
add
add
stos
sbb
jnp
sbb
mov
std
ljmp
test
inc
add
hlt
test
mov
adc
mull
test
lret
hlt
and
jle
fnsave
lcall
jb
sbb
ss
loop
lods
sbb
dec
jb
or
add
lods
jbe
lcall
jp
dec
mov
sub
jno
mov
test
incl
mov
jp
dec
mov
test
lods
or
pop
out
sub
pop
mov
sub
push
add
push
sti
push
adc
push
inc
adc
pop
mov
movhps
repz
out
scas
adc
test
imul
sub
sti
js
ss
add
inc
test
add
xor
js
ds
add
insb
out
sub
sti
xorb
cmpsl
add
into
push
mov
pop
aas
hlt
dec
insb
out
sub
add
xchg
push
jg
mov
pop
fwait
icebp
push
sub
bound
pop
fwait
loope
sub
push
sub
jl
ss
jmp
mov
and
mov
sub
in
addr16
sahf
sub
add
movsl
sbb
imul
or
push
cmp
mov
inc
mov
je
or
mov
add
es
push
popf
out
mov
push
test
fmull
xor
mov
add
sbb
sub
xchg
inc
adc
inc
jne
fwait
rcrb
push
int3
int3
inc
cwtl
in
mov
pop
jge
imul
dec
cmp
mov
sbb
and
adcl
dec
push
push
mov
mov
jg
mov
jle
mov
sbbl
pusha
addl
push
jl
push
add
mov
fsubs
movl
add
add
add
sub
xor
mov
jo
outsb
add
cs
and
pushl
inc
mov
test
and
test
loope
sub
and
loop
sub
in
js,pt
cmp
sbb
cmpsb
xchg
add
sub
orl
jb
jbe
in
call
inc
sub
or
fstpl
repz
push
pop
ljmp
je
add
repnz
out
xor
es
jno
stos
fildll
sbb
inc
and
sbb
push
and
dec
aas
out
cmpsl
loop
out
fbld
xchg
adc
out
mov
pop
cld
hlt
addr16
es
fidivrl
sub
jmp
add
pushf
movsl
cld
cmp
adc
mov
out
cmp
data16
movsb
pop
add
fcompl
mov
pop
mov
rcll
stc
jmp
test
test
cmp
test
jmp
mov
clc
push
cltd
mov
inc
lds
mov
and
and
xchg
adc
or
daa
filds
aad
jge
mov
push
shrl
pop
xchg
push
pushf
push
pop
add
jbe
inc
lahf
push
sarl
in
or
push
pop
fs
mov
insl
sbb
add
inc
pop
jae
inc
sbb
push
popa
insl
push
pop
arpl
imul
pop
insb
add
aaa
and
inc
gs
or
movsl
orl
aaa
jnp
jb
pop
je
gs
cmp
push
push
or
pop
int3
int3
xchg
pop
int3
int3
inc
popf
xchg
add
and
push
push
aaa
and
sub
bound
das
adc
mov
jnp
sub
sbb
js
sub
push
jbe
test
ret
add
cmp
ljmp
repz
and
imul
repz
sub
std
stc
aaa
jne
dec
std
pushl
jbe
jle
fs
pushl
jbe
mov
fisubrs
mov
in
jnp
insl
push
ss
out
ja
insl
push
xor
out
add
arpl
add
pop
in
cmpsb
stos
outsl
and
pop
out
sahf
xchg
mov
jne
ficompl
lods
repnz
inc
test
int3
outsb
icebp
iret
push
xor
out
scas
stos
outsl
das
daa
pop
out
cltd
sbb
jp
gs
xor
sbb
add
or
mov
push
push
inc
jns
pop
cmp
cwtl
arpl
add
addl
add
add
aaa
cmp
jns
sbb
jmp
sub
test
pop
xchg
mov
cltd
dec
insl
setae
mov
push
xlat
pop
cmpsl
out
mov
sarb
sub
xorb
adc
int3
sbb
ljmp
add
add
add
ljmp
std
icebp
fwait
dec
in
cmp
cmp
pushf
punpcklbw
inc
test
inc
pop
dec
mov
mov
cmpl
ret
mov
mov
in
shll
cmp
xchg
push
orl
sbbl
mov
in
or
gs
push
or
orl
add
in
adc
push
adcl
ret
and
adc
push
sub
ret
fmuls
xchg
jns
push
sbb
jp
sub
mov
js
push
fsubrp
enter
fmul
sub
cmp
lcall
mov
std
or
xor
ljmp
add
add
add
and
ja
mov
test
mov
xor
or
int3
fadds
lcall
and
ror
jge
out
adc
ja
dec
in
xlat
mov
ror
sub
sti
test
ja
test
jbe
test
add
pop
pop
js
decl
pop
fistpl
ja
sbb
out
popa
arpl
loop
and
cs
and
pop
xchg
fs
add
fwait
stos
add
pop
insb
dec
xor
fiadds
sub
dec
repnz
add
pop
fs
and
add
ljmp
sub
cwtd
insb
xlat
rolb
fwait
arpl
adc
add
mov
pop
mov
xchg
xlat
xor
sbb
insb
xchg
mov
lcall
movsl
adc
add
add
add
add
repz
outsl
mov
sub
bound
arpl
sbb
loope
in
ds
bnd
mov
jl
sub
je
and
div
xchg
cmc
bound
or
cmpsl
pop
mov
js
stc
out
stc
mov
cltd
jnp
aad
fildll
mov
push
and
xchg
add
add
popf
jmp
mov
lret
push
pushf
int3
add
int3
int3
inc
xchg
int3
int3
scas
fucomp
addl
dec
push
cmp
lock
pop
mov
add
push
stos
idiv
in
addl
xor
test
and
add
sti
mov
test
inc
lahf
lea
incl
fdivl
or
add
fdivrl
mov
in
rcll
add
xchg
pop
pop
add
and
das
sub
mov
clc
xchg
push
pop
stc
scas
les
push
sub
stc
lods
or
std
jo
jl
push
or
test
shlb
std
in
out
xchg
sbb
stos
jae
mov
jb
sub
add
add
add
add
cli
mov
dec
std
jmp
ud0
sub
outsl
jg
cmp
cs
xor
test
cwtl
pop
imul
mov
in
test
push
outsb
xchg
and
mov
xchg
and
mov
and
aas
add
add
mov
insl
add
pop
stos
loop,pt
out
add
mov
in
sub
xor
movsl
fimull
add
sub
enter
add
cmpsb
hlt
lahf
movsl
fidivrl
fstps
mov
daa
push
xchg
and
push
das
bound
pop
sub
out
mov
out
sub
add
ficompl
stc
jb
lcall
sub
and
movsb
add
mov
and
mov
test
idivb
add
fmull
stc
jb
xor
fnstsw
stc
jb
xor
clc
and
scas
fchs
pop
stc
jmp
arpl
lcall
xchg
loopne
jecxz
pop
mov
jnp
add
pop
shl
cmp
nop
mov
xchg
and
fiaddl
jbe
mov
jge
or
ret
pop
xor
push
jge
add
add
shrb
mov
cmp
mov
jl
push
jl
push
add
mov
data16
add
add
add
add
push
adcl
jg
jne
add
out
add
int
adc
nop
cmc
test
shr
mov
dec
jbe
push
inc
and
lds
js
xor
nop
mov
sbb
adc
dec
cwtl
pop
inc
mov
std
incl
test
mov
pop
std
ljmp
or
popf
pop
mov
jmp
idiv
test
hlt
jge
fdiv
mov
cmpsb
fwait
out
gs
push
mov
rcr
mov
test
xchg
enter
repnz
aas
dec
shr
jb
out
scas
out
cli
jns
xchg
icebp
add
cmpsl
jmp
cmpsb
loop
add
pop
or
movsb
lahf
sti
add
pop
outsl
out
xor
js
dec
call
rcll
pop
and
icebp
add
movsb
cmp
or
out
xor
insl
dec
and
int3
xchg
and
ljmp
add
shlb
jge
lods
out
sti
xchg
mov
pop
jo
inc
loopne
xchg
adc
sub
mov
in
clc
mov
adc
sub
jmp
xor
test
sub
jmp
loope
scas
flds
popa
bound
mov
mov
pusha
xchg
adc
sbbl
push
xchg
sbb
data16
lcall
add
sbb
call
adc
inc
sbb
pop
sub
sbb
add
mov
sbb
stc
mov
pop
push
add
push
jle
xor
add
in
and
cmp
mov
and
addb
push
or
fbld
add
xchg
stos
adc
add
rorl
lods
add
push
pop
or
jmp
push
insl
xchg
rcl
int3
mov
std
in
pop
mov
int3
cmp
mov
sahf
or
loop
std
ljmp
mov
xchg
roll
call
mov
out
enter
add
clc
mov
push
push
ret
sbb
std
xchg
pop
clc
mov
cmp
fstpt
stos
nop/reserved
outsb
int3
sub
scas
xor
sub
pop
incl
cs
test
out
enter
sbb
out
or
jno
ljmp
inc
pop
dec
clc
add
sub
repnz
sub
lock
pop
mov
fs
jmp
sub
out
jns
dec
push
in
das
or
int3
ret
sbb
add
xor
jmp
fs
jmp
and
pop
arpl
cmpsl
adc
mov
mov
aam
push
push
cmc
cwtl
das
xor
push
arpl
jb
dec
mov
insl
xor
jmp
mov
mov
leave
add
add
mov
add
add
add
cli
dec
xchg
xor
jmp
in
add
lret
mov
iret
pop
shll
frstors
scas
mov
push
movsl
cmpb
add
add
push
pop
add
cmpsl
sbb
fcoms
mov
xchg
push
add
dec
or
ss
mov
pop
push
add
jne
inc
ja
mov
add
jp
xor
nop
mov
mov
jecxz
movsl
in
fldenv
scas
mov
rcl
mov
sti
ja
clc
mov
clc
or
sub
std
call
inc
mov
shl
ljmp
dec
data16
cmp
ljmp
or
ljmp
xchg
or
sbb
mov
data16
in
fstpt
adc
dec
into
add
in
add
sub
divl
rcl
popa
mov
or
sub
dec
sub
cmp
out
js
pop
xchg
sbb
add
pop
xchg
jne
out
scas
sar
mov
outsb
xchg
cmpsb
sti
or
test
push
sub
call
sub
insb
out
pop
je
mov
mov
out
inc
sub
out
test
pop
in
mov
sub
push
sub
lahf
adcb
pop
out
cmp
add
sub
pop
jae
xchg
adc
sub
adc
mov
jmp
mov
push
mov
cs
outsl
sub
stc
push
pop
bound
mov
pop
bound
xchg
adc
add
cmp
loopne
xchg
adc
sub
mov
xlat
sub
test
pop
add
push
jge
and
outsb
bound
mov
cmp
mov
mov
sub
add
or
adc
sub
add
push
or
inc
ja
adc
or
stc
pop
add
cmp
call
fstl
addb
daa
pop
shl
cmp
xchg
flds
mov
xchg
push
add
idivl
jbe
pop
mov
sbb
add
and
push
dec
pop
cvtpi2ps
mov
mov
std
popa
mov
rol
inc
dec
mov
add
mov
rclb
lgs
adc
je
mov
dec
ss
pop
mov
hlt
push
add
out
es
push
call
sub
xlat
adc
mov
mov
push
sbb
aas
sub
xchg
movsb
xchg
or
sub
fiadds
out
pusha
out
add
and
cmp
dec
dec
bnd
fcmovnu
int3
mov
jnp
sub
outsb
inc
ret
jns
cltd
sbb
gs
pop
mov
ss
dec
or
cmpsb
inc
inc
inc
pop
stos
dec
pop
pop
cmp
xchg
mov
and
inc
jno
shll
inc
adc
pop
fidivrl
and
add
insb
loopne
pop
pop
iret
cmp
add
add
add
add
pop
out
jnp
cwtl
mov
add
sub
or
std
cmp
xor
pop
xchg
pop
add
mov
das
add
sub
divb
push
xor
sahf
adc
ror
cmpsb
xlat
pop
jo
dec
loopne
xchg
jmp
cmpsl
cmpsl
mov
cmc
sbb
cmc
scas
xlat
pop
jae
cltd
xchg
adc
sub
sti
popa
sub
xor
jmp
sbb
test
jle
test
adcb
cwtl
mov
adc
and
add
repnz
mov
leave
sub
sti
call
push
scas
mov
mov
dec
stc
lcall
clc
rorl
add
add
add
lret
adcb
ret
jle
and
add
lock
rorl
scas
cwtl
sbb
or
inc
push
and
cwtl
sub
lret
adc
xchg
std
pushl
dec
mov
inc
push
fcmove
adc
pop
lock
cmp
xchg
ret
add
sbb
mov
es
popa
fsts
push
lcall
mull
cmp
aas
sub
iret
sti
mov
sub
and
fcmovnu
inc
ljmp
jmp
pop
jbe
gs
loope
lret
xchg
pop
fnsave
pop
lret
and
xor
add
xchg
pop
mov
add
dec
cmpsl
mov
jg
sbb
out
jb
pop
sti
sbb
cmp
cmp
mov
cmpsl
fcmovnbe
xchg
xlat
fisubs
into
or
rcr
outsl
push
sub
out
lods
xchg
arpl
sub
sub
jp
and
add
sbb
lods
mov
xor
in
pusha
mov
add
add
add
push
push
mov
inc
loope
jmp
mov
scas
jmp
xchg
mov
fldcw
pop
add
ja
jnp
push
bound
mov
or
cmp
and
out
cmpsl
mov
cmp
xchg
sbb
fists
xchg
nop
adc
sub
punpckldq
inc
inc
std
add
das
es
pop
jmp
xor
rorl
dec
cld
sub
sbb
jmp
xchg
push
or
xchg
sbb
insl
out
fisubl
movsb
mov
into
lcall
cmp
jl
inc
add
push
test
pop
lods
fdivrs
nop
push
add
xchg
adc
ret
sbb
testl
insl
enter
mov
dec
lret
xor
add
xchg
test
mov
mov
int3
aas
adc
test
jmp
dec
jne
xor
mov
jno
adc
or
jl
addb
cmpsl
xchg
sub
mov
les
stc
push
mov
cmp
xchg
mov
adc
repz
mov
jge
dec
outsb
stc
and
cmp
test
scas
or
out
mov
push
icebp
or
leave
cld
add
cmp
test
push
fs
sub
dec
sbb
pop
outsb
sarl
cltd
pop
stos
cmp
out
xor
cmp
out
jge
mov
add
sub
bnd
adc
sub
pop
lds
std
cmp
jno
insb
xlat
daa
dec
pusha
xchg
mov
out
mov
out
fwait
cltd
in
sub
mov
movsb
xchg
fwait
sbb
pop
jge,pt
jecxz
ljmp
dec
push
mov
inc
sti
int
add
sub
std
mov
sub
or
inc
std
call
add
lcall
pop
test
jp
pop
mov
push
add
mov
inc
insl
out
ret
sbb
aas
push
sbb
inc
scas
inc
sbb
pop
add
sub
xor
sub
add
jl
push
pop
add
sub
pop
xor
pop
add
inc
cltd
adc
sub
nop
dec
scas
or
push
sub
jl
add
sbb
add
or
ret
sbb
add
xchg
fcmovne
int3
iret
add
int3
push
loopne
mov
inc
sarl
dec
jmp
int3
incl
int3
int3
int3
int3
enter
inc
and
push
ja
or
cwtl
mov
mov
orl
sbb
sbb
or
push
or
scas
cwtl
push
add
add
xor
pop
sub
adc
xchg
mov
sbb
inc
push
push
sub
bound
ss
arpl
push
js
int3
jbe
inc
int3
outsb
jno
int3
data16
jne
mov
pop
mov
push
shrb
std
ljmp
push
test
inc
jbe
and
adc
add
xchg
inc
push
push
int
adc
sub
ss
push
ss
adc
dec
push
mov
cs
ret
sbb
imul
pop
mov
out
sbb
scas
and
sbb
lds
in
inc
pop
push
fwait
aas
jbe
mov
outsb
push
stos
aas
push
sbb
add
sahf
jnp
fcoms
lahf
add
pop
out
pop
xchg
adc
mov
in
mov
cmp
ficoml
jl
faddl
ret
jle
ljmp
mov
lcall
adc
repnz
test
jmp
popa
call
dec
xor
mov
push
xor
movsl
insb
lcall
adc
jge
add
out
test
repnz
bound
test
stos
pop
stc
mov
rcl
sti
scas
movsb
out
adc
sub
add
sub
mov
pop
add
pop
add
xor
stos
add
outsl
imulb
jmp
sub
xchg
jecxz
jmp
insb
fwait
xor
mov
add
ret
mov
dec
addb
adc
cmp
push
add
add
xchg
xor
push
jne
inc
mov
decl
lea
sbb
mov
test
mov
push
sbb
data16
jg
mov
sbb
pushl
cltd
shll
mov
nop
push
and
xorb
add
jnp
lds
imul
add
add
add
mov
xchg
add
iret
pop
mov
test
movsl
js
shr
pop
stc
mov
mov
ljmp
pop
jns
mov
xor
dec
ss
ljmp
mov
std
test
ss
or
jge
ss
gs
cmp
incl
int
cmp
dec
std
incl
test
je
add
mov
push
ds
std
xchg
dec
add
push
pop
sti
add
stos
imul
scas
lods
stos
fnstsw
mov
cmpsb
addl
mov
test
out
movsb
stos
jmp
xchg
std
push
and
testb
scas
imul
mov
add
add
add
lods
shll
enter
push
cmpsl
imul
iret
pop
pop
inc
movsl
in
pop
pop
fs
pop
push
jmp
loopne
repnz
and
js
cmp
lods
add
stos
rclb
jmp
in
cmp
xchg
fiaddl
sub
testb
pop
fwait
cli
add
sub
faddl
pop
xor
inc
pop
stos
add
int3
mov
imul
push
imul
pop
das
test
and
jmp
sub
push
andl
pop
mov
and
aaa
jle
aaa
mov
and
jmp
xchg
ss
and
add
and
jmp
mov
add
mov
xchg
add
pop
or
add
jl,pt
jne
add
shll
insl
cmp
outsb
mov
inc
test
add
icebp
push
mov
mov
jl
in
add
xchg
and
add
add
into
jae
adc
cmpsl
push
inc
and
sbb
test
and
pop
add
cmp
sub
test
inc
std
pop
jmp
sahf
mov
adc
inc
mov
fimuls
xor
idivb
in
mov
cmc
test
leave
or
push
mov
or
jnp
int3
enter
or
lea
fdivrl
jbe
push
mov
mov
ljmp
pop
mov
adc
mov
mov
add
add
add
add
pop
mov
push
test
push
testl
cmpsl
aam
cltd
lret
aas
cmp
cmp
sub
les
cmpsb
mov
dec
dec
add
jl
adc
add
das
push
sub
pop
shll
mov
fisubl
arpl
enter
aaa
imul
jbe
sbb
add
push
cmp
movsw
scas
pop
out
sub
mov
add
mov
add
adc
lods
cmc
les
sbb
sub
push
inc
aam
stc
inc
xchg
movsl
and
sub
dec
inc
push
cmp
cs
or
inc
das
pop
dec
cmp
jmp
sub
jge
ret
mov
std
daa
add
mov
hlt
lds
inc
std
arpl
sbb
mov
call
and
test
rorb
inc
mov
lods
ss
dec
call
in
call
or
testl
add
sbb
dec
add
les
mov
iret
fisttps
add
push
add
xor
add
add
fbstp
scas
sahf
cli
sub
add
or
sbb
mov
mov
dec
pop
adc
sti
pop
rcrl
shl
mov
pop
mov
orl
push
xlat
or
jne
bound
mov
adc
inc
cmpb
inc
std
test
leave
ja
add
add
add
add
add
inc
mov
dec
add
stc
add
inc
std
dec
cmpsl
xlat
mov
sub
test
or
add
pop
ja
sub
mov
mov
mov
xor
shlb
mov
mov
mov
inc
mov
mov
sub
xor
popf
add
pop
out
loopne
pop
mov
scas
nop
cmp
cmp
outsb
xlat
sub
cmpsl
popa
push
lea
mov
out
shll
mov
out
outsl
pusha
out
mov
icebp
add
dec
adc
mov
inc
aaa
pop
ret
ss
and
loop
test
pop
mov
add
add
add
popf
ss
fldcw
loope
stos
dec
outsb
arpl
sbb
inc
test
sub
adc
sbb
frstor
mov
int3
lods
in
int3
sbb
inc
test
iret
out
lds
stc
push
sbb
gs
sbb
jne
int3
sub
jo
add
lcall
call
mov
mov
pop
add
sub
add
sub
add
sub
add
sub
add
sub
add
cs
add
pop
add
insb
sbb
add
add
mov
sldt
mov
lcall
mov
mov
decl
push
add
add
add
insb
mov
testb
mov
testb
mov
negb
cmp
idivb
sbb
idivb
mov
dec
push
pop
lcall
jmp
jbe
sbb
mov
inc
add
test
and
xchg
sbb
test
and
test
push
mov
push
data16
jg
insb
jg
inc
ljmp
dec
dec
xchg
popa
sbb
add
add
add
pop
and
test
adc
and
scas
enter
ljmp
inc
mov
sbb
mov
and
mov
insl
xchg
mov
ror
mov
bound
xchg
or
test
pop
outsb
fmuls
outsb
rorb
push
dec
sbb
inc
das
or
add
dec
pop
fs
adc
inc
dec
mov
adc
or
jle
cmp
sub
repz
pop
pop
push
call
daa
ss
inc
dec
insb
scas
mov
and
pop
in
cmpsb
test
add
stos
mov
jg
sbb
test
sti
out
or
je
je
fsubrs
setl
jnp
shr
jle
xchg
scas
bound
add
xchg
bound
jae
mov
sub
add
lret
jb
icebp
test
or
sbb
xlat
cld
jo
jmp
shlb
in
dec
cmpl
rcrb
shl
cmpl
jecxz
push
rcll
jno
cmp
jl
pop
subb
loopne
sbbl
add
add
add
or
in
push
cltd
int3
rcll
scas
push
sub
cmpsb
add
push
sbb
add
sbb
jo
jp
std
incl
sub
test
mov
shll
cmpsl
loope
xchg
cmp
adc
loope
add
add
mov
fmul
in
adc
adcb
add
add
add
das
xor
add
push
xor
cmpsb
mov
mov
call
mov
or
call
rol
cmp
or
pop
cmp
xlat
mov
subl
pusha
bswap
push
mov
adc
or
xchg
stos
test
int3
mov
ljmp
inc
xor
loop
xor
std
insl
std
xchg
ficomps
test
shll
dec
aas
or
lods
enter
push
and
mov
test
mov
inc
add
mov
jl
inc
push
movsb
mov
push
pop
stc
fstpl
pop
aad
pop
sbb
mov
iret
or
insl
add
inc
out
imul
les
pop
jmp
int3
inc
iret
pop
add
lcall
sub
out
mov
add
mov
daa
outsb
add
inc
pop
pop
push
das
aas
les
lcall
sub
out
dec
out
inc
daa
popa
pop
mov
sbb
xchg
cmp
pop
adc
pop
dec
scas
jecxz
adc
dec
outsb
rorb
std
inc
and
add
outsl
lods
jnp
cmp
jae
cld
insl
std
sbb
mov
and
sbb
jb
add
in
inc
popf
xor
sub
and
cld
addb
mov
and
sbb
mov
cmc
and
and
and
jnp
and
hlt
addb
or
xor
pop
or
jle
cmp
and
add
outsb
in
test
lods
das
and
repz
pushf
je
das
mov
cmp
push
or
popf
jecxz
lods
or
push
outsb
lahf
or
push
out
dec
popf
pop
and
mov
mov
adc
jnp
xchg
jmp
add
pop
punpckhbw
push
jbe
pop
inc
aad
inc
mov
leavew
push
sub
jl
xor
xchg
and
add
sbb
adc
cmp
pushl
mov
or
mov
or
jmp
out
sbb
pop
add
sub
pop
int
mov
or
dec
out
test
dec
test
dec
inc
insb
shll
or
in
dec
or
sar
sub
ja
adc
fsubrp
or
mov
pop
int
inc
out
sub
pop
push
or
and
mov
sti
mov
imull
or
add
cwtl
sbb
test
pop
insl
add
xchg
mov
aaa
gs
imul
mov
cmpsl
mov
pop
iret
dec
sti
insl
mov
subl
mov
push
pop
jne
jle
out
add
rclb
and
push
mov
in
jmp
data16
xor
insb
sub
push
scas
sub
inc
out
orl
sbb
cmp
jp
dec
sbb
jmp
push
pop
cli
add
add
add
add
add
stc
sub
pop
add
sbb
cmp
jp
or
xor
jmp
jno
decb
ljmp
stc
out
mov
inc
or
gs
aaa
add
pop
jle
sub
add
lock
jnp
ds
jae
add
cwtl
and
xor
pop
in
inc
mov
mov
cmp
pop
inc
sub
int3
mov
add
add
add
pushf
cmc
ljmp
push
enter
je
pop
push
lock
cmc
cmp
and
inc
int
mov
or
cmp
pop
adc
add
mov
jmp
sbb
sub
hlt
enter
out
sub
ret
xchg
je
daa
cwtl
pop
and
mov
shll
mov
push
das
pop
mov
push
sbb
std
ljmp
popf
clc
mov
mov
ljmp
popf
hlt
test
pop
sar
sbb
add
fldl
test
mov
xchg
mov
mov
adc
jne
std
ds
std
xchg
mull
daa
fildll
pop
xchg
dec
xchg
lods
inc
mov
out
clc
ficomps
lock
sbb
mov
ds
and
aaa
mov
ss
jo
jg
out
sub
mov
push
xchg
out
push
in
sub
test
jge
test
insl
mov
adc
ss
xor
push
and
cvttps2pi
xor
pop
and
or
fidivs
sbb
xor
cmp
pop
pusha
mov
lahf
das
sbb
sub
daa
jno
leave
cmp
xchg
push
push
jb
cmpsl
pop
add
xchg
mov
mov
sub
lahf
inc
pop
scas
and
sahf
inc
test
push
stos
adc
jmp
add
fisttpl
stos
rorl
out
mov
rorl
mov
addr16
sub
nop
lods
mov
add
negl
jb
push
loop
jb
mov
inc
std
hlt
push
shll
call
orl
add
lret
add
std
add
add
loop
mov
cmpsb
outsl
mov
add
adc
jl
jge
jne
pop
xor
loope
xor
rcrb
jge
nop
stc
call
and
add
mov
sbb
sub
pop
cmovb
push
jbe
movsl
dec
or
jne
push
in
jae
adc
clc
jae
jo
orl
mov
mov
inc
sub
std
in
xor
std
mov
mov
mov
xchg
xor
out
jmp
test
jg
test
ljmp
bound
push
xor
in
push
scas
mov
mov
push
outsb
aad
inc
jge
ss
lods
adc
rorl
gs
clc
loope
std
shl
or
ljmp
adc
repz
sub
jo
andl
push
dec
and
jp
ds
dec
pop
call
jp
ds
add
das
pop
out
scas
jl
xchg
and
lods
sarl
jl
and
xor
lock
scas
rcll
add
add
add
add
pusha
into
fstl
xor
lret
sub
fldl
iret
in
sub
push
and
jmp
jg
xchg
jmp
pop
push
xchg
cltd
jae
inc
push
mov
lcall
push
ljmp
sub
sbb
jmp
fucomip
imul
add
add
add
add
adc
add
bound
adc
rep
fimuls
leave
sbb
pusha
repz
mov
cld
les
pushf
jnp
mov
push
fidivs
push
jmp
lods
icebp
xchg
xor
cs
add
xchg
sbb
cmpl
sub
xor
movsl
dec
clc
push
push
add
mov
xchg
mov
add
aam
rcrb
xchg
std
lock
pushf
cmp
incl
push
pop
add
push
insb
sbb
in
jg
movsl
inc
call
mov
or
sbb
push
xchg
shl
cmp
and
add
dec
fcom
sub
and
pop
xchg
add
add
add
mov
cmp
jp
mov
lcall
std
mov
sub
pop
insl
es
xlat
push
xchg
xchg
cmp
jns
shrb
cld
fstpl
repz
lea
out
mov
mov
sti
mov
shlb
ljmp
rorb
idivb
rorb
stos
pop
sbb
add
add
add
mov
out
outsl
out
sub
imulb
xchg
pushf
dec
mov
add
mov
jne
pusha
jge
pop
mov
push
and
adc
and
std
xchg
sub
lret
xchg
sub
test
sbb
imull
movb
xlat
aaa
xchg
and
cmpsl
sar
js
in
cmp
add
add
add
imul
aaa
js
xchg
sub
ret
rep
adc
outsl
inc
fprem
jno
pop
add
cli
andl
push
nop
cmp
pushf
rcll
dec
sub
jno
xchg
xor
adc
call
pop
sbbb
int3
xchg
bound
scas
pop
stc
jmp
andl
add
movaps
jmp
jb
fmull
jmp
sub
push
jb
inc
adc
inc
adc
adc
inc
insb
push
add
loope
dec
loopne
movl
cwtl
cmp
call
jb
mov
add
xchg
lret
push
pop
cwtl
pop
dec
ret
mov
inc
push
inc
and
int3
and
addl
add
add
add
daa
or
push
or
aaa
adc
je
sbb
fstpl
xchg
jae
shrl
sbb
cwtl
into
sbb
cwtl
ficomps
mov
jnp
fdivr
pop
insl
hlt
push
jne
lock
and
xor
lock
xor
xor
test
insl
sub
mov
dec
pop
pop
jp
cld
rolb
add
es
stc
lea
std
ljmp
xor
jge
std
ljmp
push
inc
stc
insl
shr
cmp
out
cmp
or
ljmp
in
stc
dec
mov
sub
std
ljmp
lds
sub
add
cmp
sub
inc
aas
sub
std
ljmp
pop
bound
sbb
dec
and
pop
out
sub
inc
dec
add
sbb
inc
add
push
out
sub
and
sbb
inc
gs
mov
add
pop
add
sbb
inc
ljmp
add
pop
loop
jae
mov
and
pop
out
sub
ret
sbb
xchg
add
push
out
sub
mov
xchg
gs
mov
add
pop
orb
test
inc
pop
add
in
pop
add
sub
add
sub
add
sub
add
insb
dec
lahf
jno
psubsw
jg
jmp
sub
jmp
sub
push
jmp
sub
psubsw
pop
psubsw
push
psubsw
push
psubsw
arpl
jmp
sub
push
jmp
add
cmp
jmp
sub
psubsw
inc
psubsw
jnp
jmp
add
inc
adc
pop
add
adc
cld
adc
pop
clc
adc
pop
hlt
adc
push
add
rcrl
cmp
ret
push
sub
ret
push
and
rcrl
loopne
rcrl
fcoml
ret
push
fcoms
ret
push
aam
xchg
push
in
xchg
push
sbb
sbbl
adc
push
rclb
push
mov
add
add
add
sbbl
adc
push
les
push
push
cld
adc
jle
inc
push
in
push
push
mov
adc
cwtl
adc
xchg
adc
push
movsb
adc
or
fstpt
or
popa
cmp
std
ret
sbb
std
jg
or
jnp
or
ja
or
jae
or
cmpl
std
mov
cmp
std
mov
sbb
std
or
or
pop
add
or
add
or
cmp
std
sti
cmp
std
idivl
or
repz
std
ret
sbb
std
mov
sbb
std
mov
or
mov
or
scas
cmp
std
stos
cmp
std
cmpsl
sbb
std
das
sbb
std
sub
or
daa
sbb
out
dec
das
out
dec
das
out
ss
out
xor
out
push
das
out
sbb
out
es
out
and
out
add
das
out
sub
out
sub
add
sub
add
sub
add
sub
add
cs
jle
out
shrb
out
int3
das
out
shll
out
xchg
xor
add
out
into
cs
pop
sub
add
das
out
push
out
xchg
sub
add
sub
add
add
sub
or
sub
or
sub
or
add
ret
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
push
jmp
sub
or
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
add
add
add
dec
or
sub
add
inc
adc
xor
inc
sbb
inc
sbb
movlps
and
adc
and
add
sbb
add
sbb
adc
adc
adc
adc
add
or
add
mov
psrlq
add
ret
and
push
ret
and
push
shll
hlt
push
shll
inc
adc
and
ret
and
xchg
and
xchg
and
push
andl
push
add
and
push
xchg
and
push
andl
jae
and
push
push
and
push
sub
std
mov
xor
std
mov
or
mov
or
scas
sbb
std
stos
xor
std
cmpsl
sub
std
mov
sbb
std
fwait
xor
std
xchg
sub
std
fbld
std
fistpl
std
xlat
xor
std
shrl
std
iret
and
std
lret
sbb
std
movl
add
add
xor
std
ret
sub
std
aam
or
rcrb
std
mov
or
arpl
std
andl
or
inc
sub
or
dec
sbb
std
nop
xor
and
add
and
add
and
add
and
add
and
add
and
out
inc
and
out
dec
and
add
out
and
add
add
add
add
and
out
scas
sub
add
out
xchg
aaa
out
or
out
push
ss
loopne
out
or
and
add
and
add
and
add
and
add
out
sbb
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
add
cltd
or
sub
or
sub
adc
sub
jmp
sub
adc
sub
jmp
sub
or
sub
or
sub
psubsw
loopne
jmp
sub
adc
sub
jmp
sub
or
sub
jmp
xchg
pop
push
or
add
pop
sahf
rcpps
inc
or
inc
pop
sub
push
pop
cmp
inc
pop
and
adc
sbb
add
adc
adc
or
add
jge
add
cld
or
push
clc
or
push
hlt
or
push
lock
push
in
or
push
call
or
push
sub
ret
push
and
add
push
sbb
sbbl
cvtpi2ps
std
xor
sub
or
mov
ss
mov
or
mov
or
scas
push
or
stos
ss
cmpsl
cs
mov
push
or
stos
ss
cmpsl
cs
mov
push
or
fwait
ss
icebp
sub
std
in
and
std
mov
xor
std
aam
aaa
or
frstor
std
fstps
std
aad
or
shrl
std
int
or
pop
push
or
pop
ss
push
cs
out
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
out
inc
and
add
ds
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
jmp
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
fadds
sub
add
sub
add
sub
add
sub
psubsw
mov
jmp
sub
add
sub
add
sub
or
sub
or
sub
add
add
sbb
sbb
or
sbb
sbbl
or
xchg
sbb
xchg
sbb
or
sbb
inc
sbb
push
sbb
sbb
inc
sbb
sbb
or
and
adc
sbb
add
adc
add
adc
adc
or
adc
or
add
add
add
add
shll
cld
or
and
or
and
or
and
or
clc
cld
jmp
xor
cld
out
clc
cld
jecxz
clc
cld
out
xor
cld
jmp
clc
cld
out
clc
cld
shll
clc
cld
inc
xor
cld
lret
xor
cld
xor
clc
cld
sub
xor
cld
lret
xor
cld
and
cld
mov
clc
cld
and
clc
cld
stos
xor
cld
addr16
cld
mov
xor
cld
fwait
xor
cld
xchg
and
cld
xchg
and
cld
xor
cld
mov
clc
cld
xchg
and
cld
andl
cld
jg
clc
cld
mov
clc
cld
jmp
pop
out
push
sbb
add
sbb
add
out
inc
sbb
add
out
or
out
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
out
cli
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
negb
out
dec
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
jmp
sub
pop
jmp
sub
pop
jmp
sub
push
jmp
sub
push
jmp
sub
push
jmp
sub
push
jmp
sub
jmp
add
add
add
filds
jmp
sub
push
jmp
sub
push
jmp
sub
push
jmp
sub
push
jmp
sub
push
jmp
add
test
rcrl
orb
pop
jl
ret
pop
js
ret
pop
je
rcrl
jo
rcrl
insb
or
pop
push
or
xchg
pop
pop
or
pop
push
or
pop
dec
or
pop
inc
or
inc
or
cmp
inc
pop
cmp
inc
pop
xor
push
pop
xchg
or
xchg
or
mov
inc
pop
mov
adc
xor
adc
orb
pop
jle
add
jp
adc
and
sub
cld
and
clc
cld
jno
clc
cld
sbb
clc
cld
imul
and
cld
popa
and
cld
pop
xor
cld
out
xor
cld
jmp
clc
cld
out
clc
cld
dec
xor
cld
divb
clc
cld
repnz
cld
out
and
cld
ljmp
cld
loop
clc
cld
xor
clc
cld
sub
xor
cld
shlb
clc
cld
into
and
cld
lret
cld
sbb
clc
cld
adc
and
cld
or
xor
cld
mov
clc
cld
scas
add
pop
out
rcll
out
lds
out
leave
push
out
clc
adc
add
push
out
mov
out
mov
push
out
mov
out
movsl
push
out
test
pop
out
and
out
adc
pop
out
push
adc
add
adc
add
out
xchg
adc
add
adc
add
movsb
adc
add
adc
add
adc
add
sub
add
jmp
sub
push
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
add
inc
push
jmp
sub
jmp
sub
push
jmp
sub
push
jmp
sub
push
jmp
adc
or
sbb
or
sbb
or
sbb
or
sbb
or
sbb
or
sbb
or
sbb
or
sbb
or
sbb
or
sbb
or
sbb
or
sbb
or
sbb
or
ret
sbb
or
sbb
or
sbb
or
sbb
or
sbb
or
stos
or
cmpsb
or
mov
or
lcall
idiv
xchg
and
cld
xchg
xor
cld
lea
clc
cld
mov
clc
cld
test
clc
cld
xorl
clc
cld
jns
clc
cld
jne
and
cld
jno
clc
cld
insl
xor
cld
imul
clc
cld
popa
xor
cld
pop
xor
cld
pop
and
cld
push
and
cld
push
xor
cld
dec
xor
cld
dec
and
cld
inc
and
cld
inc
xor
cld
cmp
and
cld
xor
xor
cld
sub
and
cld
and
xor
out
sbb
out
adc
out
adc
out
add
sbb
add
out
and
out
and
out
sub
out
cld
push
out
lock
out
hlt
push
out
fcoms
out
int3
push
out
rclb
add
push
out
enter
fcoml
out
rclb
out
aam
out
js
out
insb
push
out
pusha
push
out
fs
out
push
push
out
mov
out
mov
out
cwtl
push
out
add
add
sub
pop
jmp
sub
pop
jmp
sub
pop
jmp
sub
or
sub
or
sub
or
sub
jmp
sub
or
sub
jmp
sub
jmp
add
pop
or
sub
jmp
sub
jmp
sub
jmp
push
and
or
or
and
push
and
or
sbb
inc
and
or
adc
adc
push
or
and
or
and
pop
add
and
adc
incb
adc
cli
pop
add
testb
and
pop
rcrl
out
pop
rcrl
ljmp
ret
pop
loop
rcrl
fiadds
rcrl
fiaddl
ret
pop
pop
ret
pop
rolb
xchg
pop
into
pop
xchg
pop
lret
pop
movb
pop
ret
pop
mov
pop
sbbl
pop
sub
cld
mov
idiv
mov
idiv
lods
sub
idiv
pusha
das
idiv
pop
daa
idiv
pop
das
idiv
push
daa
idiv
push
das
clc
cld
dec
daa
clc
cld
and
clc
cld
mov
sub
clc
cld
jge
clc
cld
xor
clc
cld
xor
clc
cld
sub
clc
cld
sub
clc
cld
imul
clc
cld
pop
sub
clc
cld
push
sub
clc
cld
dec
sub
clc
cld
add
clc
cld
cld
es
out
xor
out
xor
out
sbb
out
sbb
out
add
out
add
out
or
out
add
sbb
add
out
adc
out
cmp
out
cmp
out
and
out
and
out
sub
out
sub
out
hlt
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
out
fs
add
mov
add
add
roll
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
jmp
sub
jmp
sub
jmp
add
add
add
gs
sub
jmp
sbbl
sbbl
xchg
sbb
add
sbb
add
sbb
push
push
sbb
push
inc
sbb
push
inc
sbb
push
push
sbb
push
push
sbb
push
inc
sbb
push
inc
sbb
push
adc
push
adc
push
add
push
add
push
adc
push
adc
add
add
add
add
add
add
sbb
add
ret
sbb
add
rcrl
loop
rcrl
fiadds
ret
sbb
add
daa
idiv
shrl
idiv
int
idiv
leave
das
idiv
lds
idiv
shrl
cld
mov
das
idiv
mov
idiv
mov
idiv
lods
daa
idiv
test
daa
idiv
mov
daa
idiv
cltd
das
or
xchg
add
or
xchg
das
or
lea
or
mov
or
test
or
subl
or
jns
or
jne
or
jno
or
insl
daa
or
imul
or
popa
das
pop
out
dec
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
out
and
add
out
add
and
add
and
add
and
add
out
or
add
out
inc
and
add
out
cmp
add
out
xor
add
out
sub
add
and
add
and
add
and
add
and
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
in
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
jmp
sub
jmp
ret
and
add
and
shll
bound
and
ret
and
xchg
and
xchg
and
andl
add
and
xchg
and
xchg
and
andl
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
adc
add
and
add
and
add
pop
testb
push
std
cmc
sub
std
icebp
sub
std
in
sub
std
jmp
sub
std
loope
push
std
push
std
fldcw
push
std
aad
push
std
shrl
push
std
int
push
std
push
sub
std
sbb
push
std
push
sub
std
adc
push
std
or
sub
std
cmp
push
std
add
push
std
sub
std
cli
add
push
std
imulb
push
std
repnz
std
in
sub
std
ljmp
std
loop
or
fisubrs
or
fisubrl
or
sub
out
stc
pop
out
in
pop
out
loope
out
in
out
jmp
pop
out
jno
out
jne
out
fstps
out
int
out
rcrl
add
pop
out
leave
pop
out
loopne
mov
add
add
add
add
add
cmp
ds
pop
sub
sub
out
sub
loop
jmp
pop
pop
rorl
cltd
sti
mov
imul
adc
sub
jae
jp
ds
rcll
adc
jp
push
jecxz
pop
jmp
sub
add
sbb
push
jmp
pop
add
stc
clc
jmp
cs
push
push
push
cli
jae
test
push
call
lea
jecxz
mov
add
cmp
add
sub
mov
mov
and
cmp
mov
aas
call
and
xchg
pop
and
jl
add
mov
aas
jmp
incl
add
or
or
cld
adcb
add
add
pop
aas
pop
jnp
fprem
mov
jne
lahf
cmp
rcrl
cmp
testl
sbbl
inc
xor
adc
adc
cmp
mov
add
sahf
je
push
leave
add
or
ljmp
sbb
sbb
cli
incl
jnp
jo
insl
push
sti
cli
call
pop
testl
add
add
sub
fnstsw
test
inc
dec
add
mov
sbb
lds
sub
test
add
test
xorb
aas
jge
adc
mov
decl
and
mov
mov
mov
push
add
dec
dec
shr
pop
add
aas
jge
iret
aam
jb
and
jg
jecxz
jb
push
pop
jmp
pop
push
adc
daa
or
sbb
xor
mov
mov
push
cmc
and
gs
adc
mov
cmpsl
pop
adc
je
mov
out
ljmp
add
xchg
cmc
pop
and
pop
push
or
pop
cmp
add
add
add
xor
leave
push
and
xchg
xor
add
pop
es
inc
in
xlat
pop
movb
mov
mov
inc
inc
add
sub
mov
out
pop
push
fisttps
jl
sbb
jae
push
stc
dec
mov
fldcw
pop
add
insb
je
out
jmp
adc
stos
movsb
popa
sbb
out
add
adc
test
ret
lods
test
mov
sub
pop
call
sub
call
sub
jae
adc
push
or
out
addr16
add
mov
jne
dec
cmp
adc
mov
add
lcall
jnp
add
rcrb
add
add
add
add
mov
cmpb
inc
push
fcompl
add
shl
adc
mov
sbb
stos
cmc
call
cmp
xchg
fstpl
or
cld
ret
sub
es
ret
add
inc
xor
mov
ret
hlt
ljmp
or
xchg
add
sbb
xor
sub
std
mov
xchg
add
das
mov
sbb
leave
addl
inc
subb
jb
fidivs
fnstsw
jmp
movsb
inc
jge
mov
das
stc
lods
insb
inc
call
test
mov
call
test
dec
sahf
cli
insl
sub
inc
add
or
push
and
push
push
in
push
repz
sbb
xchg
or
pop
fldl
jmp
and
test
pop
mov
adc
movsl
mov
call
jecxz
frstor
notl
cmp
add
pop
popf
and
repnz
cmpsl
pop
in
add
ds
push
sbb
cwtl
sub
add
mov
jmp
sahf
mov
mov
mov
jae
add
and
jmp
sub
icebp
jae
adc
stc
push
sbb
icebp
inc
lret
sbb
in
cmp
out
dec
clc
clc
push
ud0
pop
pop
into
sbb
mov
and
jae
or
mov
and
clc
clc
push
mov
add
and
sti
xchg
and
mov
xchg
adc
mov
mov
inc
cmp
pop
sub
jnp
xor
inc
xor
clc
add
pop
addl
cmp
add
inc
mov
or
call
sbbl
je
inc
and
inc
sbb
add
jge
add
add
incb
in
adc
je
lahf
je
add
sbbl
stc
push
jge
inc
inc
jp
lods
adc
je
lahf
je
shlb
insb
ret
sbb
call
rcrb
add
outsb
es
je
lods
and
jl
sbb
testl
xchg
inc
push
mov
jg
xor
xchg
add
push
lret
cmp
add
std
sahf
fsubl
sbb
sbb
test
lock
xor
iret
aas
jg
jg
sbb
xchg
or
stc
sbb
ffree
and
aam
sbb
outsb
in
inc
or
call
ret
stc
movsl
test
call
xchg
fldt
pop
push
lods
loopne
pop
push
add
out
dec
repnz
out
xor
sub
sub
push
out
and
xchg
sub
dec
push
xor
and
xchg
sub
inc
push
and
and
nop
sub
xchg
add
movsl
xchg
negl
repz
movsl
xchg
ljmp
out
movsl
shlb
sub
mov
mov
adc
incl
call
adc
mov
call
adc
lcall
push
and
mov
xor
mov
xchg
sub
cmp
call
add
ss
add
jl
das
in
insb
mov
xor
out
push
adc
jl
add
pop
jae
adc
divb
sub
or
and
clc
sahf
insb
idiv
xchg
and
mov
incb
mov
incl
xchg
add
call
ret
adc
call
ret
rolb
loopne
sbb
testl
adc
mov
je
cmp
add
add
add
and
mov
je
cmp
jge
and
push
jmp
bound
int
insl
push
sti
xchg
sti
call
insl
adc
mov
mov
ret
stc
lods
mov
pop
mov
out
fadds
call
test
add
mov
add
sti
and
push
cmp
out
std
mov
adc
add
cmpsb
mov
out
sbb
aam
jae
jns
std
xor
iret
pop
stc
test
inc
sub
out
pop
mov
aad
cmpl
jmp
sub
out
ret
jmp
test
adc
jp
mov
adc
add
add
add
add
xchg
xchg
jmp
xchg
das
and
ljmp
gs
sbb
lock
in
fmuls
sub
mull
sbb
jmp
sub
sbb
stos
std
and
movb
out
pop
adc
hlt
sub
insb
fldl
and
xchg
ljmp
add
outsb
adc
test
sahf
sub
pop
call
stos
test
or
clc
push
and
in
stos
addl
push
adc
adc
mov
add
cmp
in
jae
adc
cmc
push
adc
push
jae
add
jl
nopl
inc
or
out
xor
jnp
add
outsb
xor
hlt
repnz
push
insb
sti
and
lcall
adc
lret
add
call
nop
jmp
xchg
sbb
ljmp
adc
ret
sbb
adc
inc
jnp
pusha
pop
mov
call
xchg
add
loopne
aam
testl
sbb
mov
je
xor
add
add
add
add
jnp
dec
sbb
cmp
pop
repnz
insl
adc
dec
out
cld
sahf
je
adc
idiv
sub
mov
shlb
stc
fnsave
add
mov
mov
mov
in
std
inc
or
sbb
mov
inc
dec
sarl
mov
jg
adc
jae
dec
mov
add
aas
test
adc
mov
jae
mov
idivb
xor
out
fdivr
inc
idivb
stc
out
adc
jbe
sbb
pop
sbb
stc
jmp
push
test
jge
sbb
pop
cltd
or
pushf
cmpsb
push
into
pop
mov
into
mov
cmpsb
adc
cmp
mov
xor
sub
sub
add
mov
xlat
leave
jb
xlat
lret
xlat
ret
jb
xlat
ret
xlat
xor
sub
loope
add
stos
loopne
mov
xchg
cltd
in
loop
jp
stos
add
fsubrl
mov
mov
and
push
xor
pop
movb
mov
mov
imul
imul
nop
imul
subl
or
add
add
add
imul
dec
imul
dec
imul
dec
imul
popf
jb
fisttpll
jb
int
jb
lds
imul
and
inc
call
sub
cld
call
ss
call
inc
call
push
out
and
mov
mov
push
mov
pop
add
sub
clc
add
nop
pop
add
xor
inc
loopne
cmp
divps
call
ret
mov
sbb
mov
and
add
sbb
addl
cmp
adcb
pop
jne
or
clc
mov
mov
mov
sahf
orl
and
adc
ret
dec
xlat
adc
andl
mov
sbb
add
add
add
inc
and
jg
or
adc
jnp
cmp
push
clc
ljmp
or
push
stc
mov
ljmp
clc
inc
shrl
ljmp
idivb
dec
cmc
push
inc
sub
dec
add
testb
aad
mov
sub
xchg
jl
int3
pop
jp
mov
cmp
idiv
jmp
sub
mov
imul
add
jns
add
mov
pop
jb
bsr
jns
repz
push
and
add
pop
idivl
in
xchg
sub
rorb
and
and
or
call
adc
or
push
sbb
loope
mov
call
repz
aas
push
and
pop
pop
push
push
xchg
out
int
out
add
pop
call
add
push
jg
cwtl
jecxz
test
or
jbe
xchg
jecxz
into
lds
out
cmp
mov
loop
lods
lahf
inc
add
call
aas
cli
pushl
xchg
sbb
clc
sub
scas
repz
cmp
push
add
sub
push
jmp
add
add
lahf
out
loope
sahf
es
add
cli
aam
sub
push
je
test
adc
popf
sbb
mov
jns
adc
call
stos
jnp
call
call
mov
neg
mov
and
in
repnz
std
aam
cli
push
add
test
dec
popf
lock
adc
test
cmp
cmp
add
cli
ret
adc
adc
add
inc
sbb
mov
loop
pop
hlt
in
adc
cmc
sbb
sti
loopne
jl
xor
jl
bound
rcll
pop
cmpl
out
decl
testl
add
out
cld
ljmp
clc
jne
or
push
inc
sub
dec
add
clc
mov
push
std
adc
xor
mov
jl
loopne
jns
sbb
or
jmp
testb
outsl
cmp
divb
inc
idivl
mov
ret
stc
int
jle
xor
test
stc
jmp
xorl
add
add
add
rcrl
push
idiv
pushl
ss
cmp
pusha
clc
sbb
popa
icebp
add
aaa
dec
mov
loopne
inc
add
out
sub
jp
fimuls
movsl
fisubs
xor
or
jmp
lret
adc
loopne
pop
push
sub
outsb
pop
push
add
fstp
out
scas
pop
push
std
fwait
pop
call
add
mov
xorb
loop
div
xchg
push
mov
push
out
push
pop
jo
in
add
div
xchg
sbb
clc
sub
not
cmp
out
push
adc
pushl
or
clc
sub
adc
popf
and
cmp
clc
sub
mov
inc
add
bound
test
test
clc
jmp
sub
add
mov
fdivr
jmp
sub
add
fdivr
add
aad
jmp
mov
add
andl
add
sar
inc
pop
sti
incl
add
add
add
inc
inc
sti
pushl
aad
incl
and
add
and
add
aam
pushl
pop
sti
call
and
add
and
add
sti
jmp
pop
sti
call
and
add
and
add
inc
sti
ljmp
clc
dec
lahf
cli
inc
and
add
and
add
jl
call
cld
incl
sub
cld
ljmp
sbb
jne
lock
cmp
cld
ljmp
enter
jl
std
dec
ja
incl
jnp
cmp
enter
push
pusha
std
and
lahf
je
adc
cld
ljmp
ds
std
std
out
icebp
push
scas
je
in
cld
ljmp
cld
ljmp
nop
pop
std
aad
repz
add
incl
sub
cld
ljmp
sub
lods
pop
repz
movsl
fsub
add
pop
out
sub
out
sub
out
sub
out
sub
cmpsl
insl
ja
xchg
insl
outsl
fcoml
addr16
addr16
fdivr
addr16
fdivr
addr16
fdivr
addr16
fsubrl
addr16
fdivl
push
pop
fcoml
pop
fdivl
push
pop
fsub
data16
fcmovne
data16
add
add
add
add
fstpt
out
sub
xlat
fisttpl
iret
fldt
fistpl
mov
cmpsl
inc
mov
clc
mov
add
clc
pop
add
clc
adc
std
adc
clc
pop
add
clc
dec
add
clc
fprem
jmp
into
fprem
or
into
fprem
in
fprem
cmp
add
fprem
gs
fdivr
xchg
xchg
clc
jmp
mov
clc
test
fdivr
jns
fdivr
mov
fdivr
stos
inc
fdivr
xchg
clc
mov
clc
add
sti
decl
sti
call
inc
sti
pushl
sti
pushl
sti
decl
push
add
out
push
sti
push
push
sti
pushl
push
sti
ljmp
push
push
sti
call
sti
ljmp
push
sti
cmp
jnp
sti
decl
push
sti
inc
push
sti
jmp
push
sti
jnp
sti
ljmp
push
sti
incl
push
sti
incl
dec
sti
incl
sti
incl
sbb
std
int
outsb
std
lds
outsl
std
mov
outsl
std
lods
mov
outsl
std
add
movsl
outsb
std
lea
je
test
insl
std
jge
insl
std
jne
insl
std
insl
cltd
insl
std
add
pop
mov
push
out
std
dec
out
insl
std
inc
dec
outsb
std
cmp
mov
outsb
std
and
das
outsb
std
adc
iret
push
std
std
xchg
push
std
in
mov
std
in
inc
jo
fsubs
xlat
fmuls
jo
fdivs
jo
fsubrs
pop
scas
fdivr
pop
cmpsl
fdivr
pop
lahf
fsubr
pop
xchg
fcoms
xchg
and
sub
mov
outsl
fdivrs
je
fsubr
jae
fmuls
dec
fdivrs
jne
fcoms
aaa
fadds
jne
fdivs
pop
fsubs
fcoms
add
add
add
psubusb
je
xlat
mov
jbe
clc
in
fstl
clc
rcrl
clc
mov
aas
mov
push
aas
popa
aaa
aaa
sbb
clc
adc
clc
inc
sbb
clc
and
clc
int
fprem
mov
fprem
fcomi
fprem
jmp
fprem
push
aam
clc
cmp
aam
clc
cltd
add
clc
popa
mov
fprem
lods
pushf
aam
xchg
xchg
aam
ret
pushf
aam
scas
xchg
aam
sarl
add
dec
sti
call
dec
sti
call
dec
sti
dec
dec
sti
dec
scas
sti
jmp
scas
sti
jge
sti
lcall
scas
sti
decl
sti
push
scas
sti
push
scas
sti
lcall
sti
incl
sti
lcall
sti
ljmp
pop
cmpsb
sti
push
movsl
sti
push
lods
sti
call
add
pop
mov
decl
mov
call
add
dec
and
cmpb
add
adc
add
mov
jle
cld
add
cld
ljmp
negb
in
popf
cld
fucomp
popf
cld
aad
popf
cld
int
popf
cld
lds
cld
mov
mov
popf
cld
lods
ja
cld
movsl
add
cld
xchg
adc
cld
test
popf
cld
jge
popf
cld
jne
popf
cld
insl
push
lahf
cld
gs
sahf
cld
pop
pop
lahf
cld
push
adc
cld
inc
cmc
cld
ljmp
cmp
cld
sub
mov
push
aad
fwait
push
aad
fwait
push
aad
fwait
aam
fwait
not
aam
add
aam
cltd
out
negb
aam
cltd
into
aam
cltd
aam
cltd
mov
aam
cltd
scas
aam
cltd
cmpsb
aam
cltd
sahf
aam
cltd
xchg
aam
pushf
mov
pushf
pushf
xchg
stos
pushf
jle
je
jbe
push
pushf
outsb
aam
lcall
and
dec
aam
lcall
fs
ss
fwait
cs
mov
rcl
jne
sar
sub
mov
clc
sbb
sar
xchg
xchg
sar
popf
mov
clc
cltd
sar
test
mov
clc
pop
scas
sar
jmp
sar
ret
xchg
sar
out
sar
push
rcl
ret
mov
sar
lods
scas
sar
test
xchg
sar
fistpl
clc
mov
add
sar
mov
mov
sar
add
mov
lcall
mov
stc
mov
decl
mov
sti
pushl
mov
sti
lcall
mov
sti
lcall
sti
jnp
sti
jge
sti
decl
sti
pushl
sti
pushl
sti
lcall
test
sti
lcall
mov
sti
incl
jecxz
sti
std
mov
jmp
mov
decl
sti
incl
sti
lcall
sti
jg
sti
decl
sti
fnsave
sti
ljmp
mov
xchg
cld
xor
pop
xchg
cld
and
rclb
or
enter
mov
cld
cmc
jge
cld
in
xchg
cmpsl
cld
in
cmpsl
cld
cmpsl
cld
aad
mov
add
add
add
int
mov
cld
mov
jno
cld
lods
inc
mov
cld
popf
xor
test
loope
cld
test
mov
cld
jne
popf
cld
insl
test
sahf
cld
pop
pop
sahf
cld
push
push
mov
add
pop
sbb
sub
out
sub
loope
sub
movsb
mov
add
add
add
roll
shlb
not
ljmp
shlb
sub
cmp
sub
push
add
lahf
in
sub
call
add
lahf
lret
sar
mov
jle
testb
lahf
in
sub
incl
sub
sub
pop
add
sar
pop
add
sar
out
xchg
clc
fxch
sar
rol
sar
pop
int3
sar
aad
sar
xlat
iret
sar
test
iret
sar
fwait
sar
xchg
sar
mov
sar
addr16
clc
addr16
sar
jnp
sar
jae
sar
lea
sar
jne
sar
mov
sar
mov
sar
jmp
add
add
add
pop
add
icebp
jnp
pushl
jnp
lcall
jl
jmp
jl
call
add
cmpsb
pop
dec
jns
inc
pop
insl
mov
cmp
imul
inc
add
stos
and
gs
jbe
insl
scas
push
data16
gs
pop
cmp
ret
and
cld
aas
je
dec
push
je
outsw
popa
insl
outsb
and
add
andnps
cmc
dec
pop
jb
push
popa
je
inc
pop
insb
push
inc
pop
je
cmp
sub
jo
std
leave
push
addr16
push
arpl
sar
push
mov
out
cmc
pop
push
mov
jg
addr16
arpl
pop
cmp
mov
pusha
dec
xchg
cld
lods
mov
sub
add
add
add
pop
mov
insb
pop
dec
dec
push
arpl
imul
cld
jmp
dec
push
outsb
inc
or
pop
or
or
imul
es
inc
adc
push
or
jne
add
sbb
push
and
pop
cld
fidivs
mull
pop
lds
inc
shll
pop
cmp
out
inc
mov
jne
push
shlb
jge
xchg
pusha
ja
shrb
mov
inc
cmp
imul
push
mov
pop
out
insb
and
push
push
inc
je
cmp
sub
inc
sbb
push
dec
jbe
pop
add
cli
push
add
inc
inc
inc
add
jbe
or
or
das
add
arpl
outsb
ljmp
rorb
adc
inc
insb
or
in
dec
bound
in
cmp
jmp
fcoml
enter
pusha
movsl
jl
push
mov
insl
cmp
add
es
imul
push
aaa
insl
jge
push
jo
pop
add
lds
insl
push
xor
imul
add
lods
aaa
insl
add
insb
gs
insl
add
jb
dec
imul
add
add
out
cmp
push
push
outsl
dec
cmp
je
gs
and
push
cmp
je
gs
outsl
addr16
sub
pop
inc
pop
inc
push
jnp
dec
outsl
pusha
inc
insb
inc
push
insb
pop
add
jno
out
pop
outsl
roll
outsb
mov
cmp
cmp
push
mov
les
push
mov
cmp
ret
push
lods
add
addr16
push
push
sub
pop
pop
sbb
pop
aas
push
pop
popa
pop
sub
inc
pop
push
je
push
xor
pop
sub
inc
movhps
and
sub
incb
rorl
adc
insl
fcos
pop
pop
mov
nop
pop
pop
mov
in
ja
adc
inc
xchg
insb
cmp
xchg
imul
add
add
add
add
arpl
popa
je
xchg
push
imul
pop
inc
dec
insb
push
sub
imul
pop
jb
inc
push
dec
sub
hlt
add
inc
push
adc
data16
xor
pushw
outsb
xor
cmp
jae
push
movb
add
aaa
cld
pusha
cmp
addr16
bound
jo
jb
imul
inc
fisttpl
cmp
cmp
add
add
add
cmp
inc
int
les
pop
daa
add
pop
push
pop
add
fwait
dec
mov
xchg
push
push
push
jg
sub
ret
add
ss
pusha
jbe
mov
cmp
movsl
inc
push
jge
inc
insb
dec
pop
inc
imul
sub
adc
push
cld
xor
addr16
add
ja
or
add
sub
add
pop
addr16
add
js
es
cmc
push
inc
add
cmp
cmc
aad
addr16
int3
push
arpl
out
add
fs
addr16
pop
add
sub
mov
jp
inc
nop
lea
jmp
push
xor
addr16
sbb
movsl
push
insb
gs
and
add
insb
add
add
add
add
add
dec
pop
dec
pop
dec
pop
js
sbb
add
je
repnz
fs
cs
data16
gs
sysenter
outsb
push
sbb
aaa
dec
je
and
push
inc
sbb
dec
jb
popa
jbe
outsb
jno
dec
push
add
fists
sarb
outsb
into
dec
dec
add
popa
insb
sub
imul
add
add
pop
jae
add
aaa
std
cmp
xchg
pop
je
jl
outsb
inc
pop
js
cmp
push
add
faddl
push
adc
jae
insb
inc
outsb
cvtdq2ps
sub
in
pop
pusha
arpl
cs
arpl
cmpsl
add
and
addr16
sbb
loopne
inc
js
scas
pop
push
ret
leave
jo
lret
ret
inc
insb
into
in
popa
add
mov
pop
jb
jl
outsb
xchg
jo
add
or
inc
mov
mov
mov
xor
add
push
stos
push
push
pop
mov
pop
cmp
dec
dec
xor
push
dec
push
imul
and
imul
xor
xor
pusha
or
add
sub
outsb
adc
imul
xor
ficoms
bound
lret
insl
out
push
and
imul
push
ret
xor
cmp
dec
lcall
pop
add
cmpl
mov
arpl
dec
fs
test
add
add
dec
dec
arpl
cmp
push
jmp
dec
dec
cmp
inc
and
pop
add
lahf
cld
sub
add
xor
add
add
popa
addr16
dec
add
cs
imul
mov
push
add
les
sbb
rcll
sbb
jb
inc
je
cmpsl
ds
jmp
insb
jo
or
mov
dec
add
inc
and
gs
pop
insl
sahf
inc
data16
add
jo
pop
cmp
dec
cmc
pop
popa
insb
out
into
add
inc
gs
push
imul
ljmp
jb
inc
je
adc
inc
jo
cmp
push
inc
pop
call
insb
sub
pop
je
pop
pop
outsb
arpl
sub
add
in
imul
pusha
add
in
inc
xchg
add
add
add
mov
pop
arpl
arpl
cld
cltd
sub
je
inc
bound
xchg
pop
aaa
inc
jno
arpl
push
imul
mov
addr16
outsl
outsb
arpl
pop
push
outsb
adc
testb
add
insl
je
and
cld
or
es
lret
inc
jb
sbb
sub
std
inc
push
shlb
int
stos
pop
xchg
out
jmp
cmp
lret
pop
addr16
sti
sbb
jb
inc
mov
inc
adcl
out
rcrl
mov
inc
dec
jl
ds
jne
dec
pop
outsl
add
sbb
gs
dec
pusha
adc
sub
sub
stc
or
dec
push
js
outsl
xor
jae
cmp
add
out
test
and
fisubrs
jno
aas
add
xor
push
mov
add
rorl
add
aaa
push
xchg
inc
je
sub
movsl
orb
insb
bound
js
fs
jnp
pop
popf
adcb
inc
push
jmp
inc
dec
cmp
cmp
pusha
mov
and
pop
jmp
or
add
in
arpl
ljmp
push
cmp
xor
add
push
arpl
fistl
add
cmp
add
sbb
gs
pop
insl
xor
gs
add
out
push
add
lcall
insb
ficomps
shll
cmp
mov
push
inc
jo
popa
cmp
push
add
sbb
inc
ds
push
movsl
inc
push
jb
aas
pop
jae
add
add
pop
push
add
outsb
loop
pop
push
sti
dec
pop
popa
out
sbb
popa
aas
cmp
push
bound
arpl
sub
push
push
fsubrs
pop
arpl
push
outsb
insl
mov
xchg
mov
outsl
insl
pop
sbb
arpl
sub
inc
xchg
je
outsb
mov
pop
gs
in
push
lcall
sub
incl
xchg
popa
outsb
ds
pop
gs
movsb
inc
arpl
bound
jno,pt
sub
imul
jb
addps
sub
cmp
adc
add
cs
insl
fstps
or
clc
aas
or
push
cmpsl
add
inc
adc
jo
leave
dec
cmc
pop
filds
jbe
pop
in
push
jecxz
int3
pop
jno
shll
push
out
push
and
outsl
inc
inc
mov
js
cmpsb
pop
xorb
push
mov
jbe
dec
mov
inc
out
lea
mov
push
cmp
pop
dec
mov
xor
popa
icebp
dec
push
pop
push
dec
inc
pop
add
xor
pop
sub
arpl
pop
add
popa
add
inc
push
inc
hlt
inc
pop
or
decl
iret
dec
dec
adc
dec
ja
push
add
lret
inc
inc
insl
fisubl
imul
xor
pop
adc
xor
pop
dec
imul
push
dec
lods
sbb
dec
insb
jmp
jo
je
dec
dec
insl
mov
push
jmp
add
add
add
daa
fwait
inc
das
push
push
sbb
jae
add
push
sti
push
add
es
addr16
xor
outsl
xor
push
andl
add
inc
inc
xor
addr16
and
add
je
xor
dec
sub
and
cs
arpl
push
add
jbe
cmp
imul
cld
ja
mov
push
jno
add
dec
push
mov
add
sti
pop
cmp
xor
pop
gs
rcrl
inc
add
dec
pop
jb
push
pop
jae
pusha
add
sub
outsb
or
push
clc
insb
arpl
adc
inc
pop
repnz
sbb
cmc
push
insl
sub
std
inc
and
aam
push
jno
mov
pop
ffree
cld
sbb
or
add
jmp
arpl
lret
cld
cmp
aam
push
xchg
ljmp
mov
pop
popa
push
xchg
push
pop
pop
xchg
dec
add
lods
add
lods
pop
pop
cmp
push
nop
add
pop
and
insb
sub
push
dec
xor
add
arpl
pop
cli
sub
arpl
sbb
xor
jo
inc
and
inc
sti
push
mov
inc
or
out
es
lea
push
mov
dec
sub
outsb
add
inc
rorl
lret
push
jnp
mov
push
pusha
out
mov
mov
arpl
pusha
dec
inc
pushf
pusha
push
mov
pusha
out
adc
add
ljmp
inc
add
arpl
pop
popa
inc
cmc
push
add
es
arpl
or
cmp
bound
push
add
insb
arpl
fisttpll
push
mov
imul
cwtl
cli
imul
dec
inc
loope
pop
add
push
outsb
enter
enter
les
pop
into
mov
add
cs
arpl
pop
dec
arpl
add
sbb
movsl
dec
xor
sbb
add
pop
je
dec
pop
arpl
and
add
pop
imul
das
add
sbb
inc
outsb
xor
inc
out
sub
add
frstor
inc
gs
pop
push
jb
cmp
fisubs
inc
gs
sub
addb
pop
je
loop
je
add
pop
add
popa
sbb
gs
push
outsl
inc
nop
sbb
pop
pop
imul
xchg
cmp
cld
pop
sub
outsl
insl
or
incb
push
dec
jo
addr16
fsubs
add
cld
inc
pslld
arpl
hlt
pop
popa
iret
push
add
sub
push
fs
es
push
vmovaps
add
add
add
add
add
mov
add
xor
push
addr16
pop
arpl
mov
inc
xchg
aaa
arpl
in
je
insb
pop
add
incb
insb
dec
addr16
pop
mov
sahf
add
sbbl
mov
inc
test
lcall
dec
push
jb
inc
push
push
add
cmp
pop
jno
jmp
cmp
add
bound
lret
dec
out
push
and
insl
sarb
pop
call
inc
add
push
xchg
add
in
or
dec
out
test
dec
lret
dec
shll
out
jne
stos
push
jle
add
sbbb
dec
das
pusha
arpl
cmp
push
adcl
imul
add
insl
mov
bound
sti
inc
push
es
cmp
dec
fs
inc
insl
dec
add
jmp
shrl
push
cmp
inc
dec
or
inc
pop
adc
fmull
adc
jge,pn
xor
push
je
lcall
ficompl
push
add
dec
pop
push
add
and
test
dec
cmpsb
cs
dec
mov
gs
lods
push
data16
and
test
dec
cmpsb
cs
push
daa
cmp
and
add
inc
fistpll
imul
gs
in
add
pop
imul
popa
and
gs
cmp
jae
xor
adc
out
add
dec
pop
arpl
jmp
jo
push
inc
gs
and
add
dec
out
insl
dec
idivl
je
cmp
arpl
add
push
jg
arpl
push
imul
xchg
cld
daa
sub
popa
insl
inc
sub
std
sub
je
push
bound
fs
add
xor
dec
pop
dec
dec
arpl
outsl
pop
clc
pop
xor
pusha
add
sbb
inc
add
adc
mov
sbb
sub
inc
iret
mov
push
outsb
and
xchg
mov
add
pop
movb
sub
push
pop
dec
mov
data16
enter
out
adc
mov
pop
ja
mov
inc
jns
sub
cmp
aaa
adc
test
push
push
add
pop
sub
push
or
push
movntps
sub
dec
add
int3
inc
inc
imul
cmp
push
imull
or
inc
stc
add
aas
repz
xchg
dec
jno
jb
je
jl
push
jmp
lea
les
push
jl
dec
mov
sub
dec
pop
add
sbb
mov
push
inc
insl
mov
pop
fs
push
cmp
sub
stos
sti
cmp
arpl
sub
cmp
pop
insl
cmp
push
je
sti
je,pn
cs
and
cs
inc
les
imul
loop
add
movl
int
dec
gs
ljmp
hlt
dec
add
nopl
add
add
add
add
add
pop
data16
dec
je
mov
adc
mov
inc
out
imul
data16
xchg
add
outsl
pushf
arpl
xchg
sbb
add
inc
je
mov
pop
outsb
pop
sbb
add
je
fiaddl
outsl
fsubr
pop
arpl
sbb
add
dec
popa
outsb
pop
ljmp
nop
sbb
push
cs
sub
inc
add
or
mov
sbb
sub
push
inc
xchg
popa
add
dec
add
xchg
fisubrl
in
add
mov
inc
push
jne
pop
push
in
dec
dec
jne
pop
inc
mov
decb
mov
inc
imul
dec
insb
pop
jns
shld
sub
cs
fcoms
sub
pop
jo
sub
inc
add
dec
pop
addr16
jmp
push
arpl
adc
jae
push
or
inc
and
fistpl
stos
add
sub
push
mov
or
jb
imulb
inc
cmc
bound
xor
push
jle
push
jns
aad
aaa
ds
xor
pop
add
xor
outsl
dec
inc
xchg
popw
mov
daa
fwait
add
das
jnp
add
mov
push
mov
pop
xor
dec
xor
bound
xor
loop
push
insb
sub
scas
add
xor
push
add
ss
dec
cli
dec
add
rorb
push
int
insl
sbb
aaa
gs
pop
add
daa
pusha
arpl
pop
inc
sbb
aas
fdivl
imul
sub
push
push
cmp
add
add
add
add
imul
es
arpl
pop
dec
aas
pushf
gs
imul
sub
lods
or
push
jle
inc
push
adc
pop
adc
inc
add
add
in
insl
add
inc
je
inc
push
addr16
push
imul
push
and
pushl
insl
jo
push
popa
jbe
aaa
pop
addr16
pop
insb
add
inc
dec
add
and
je
cmp
in
lock
aas
imul
and
jb
push
je
out
popa
data16
pusha
lods
inc
je
xchg
aas
dec
add
and
jb
push
je
cmpsb
pop
inc
gs
pop
jb
aaa
add
mov
push
je
sub
imul
mov
mov
stc
push
ja
jmp
add
add
add
add
icebp
push
imul
inc
std
inc
mov
add
popf
adc
xchg
sub
pop
je
and
jle
xor
mov
imul
addr16
jecxz
je
iret
pop
push
dec
mov
inc
in
dec
inc
loop
add
xchg
add
movsl
inc
jo
movsb
dec
arpl
adcl
add
movsl
cmp
mov
push
push
add
pop
pop
push
in
inc
inc
inc
push
cmp
pop
out
push
add
sbb
push
arpl
xor
inc
dec
aam
sbb
inc
push
les
out
fcomps
add
cltd
sub
add
addr16
aad
push
ds
add
pop
enter
xchg
pop
ja
mov
push
sub
add
dec
pop
cmpsb
push
ss
xchg
push
or
je,pt
or
ds
mov
inc
jo
add
ds
pop
fadds
push
ljmp
xor
sub
and
leave
sub
inc
or
dec
outsb
add
imul
jno,pn
sbb
outsb
shrb
inc
les
pop
dec
outsb
rcrb
fistpl
dec
pop
aad
repnz
lcall
je
jo
ja
popa
push
add
imulb
pop
add
clc
call
in
pop
je
inc
insb
jne
pop
js
sbbl
popa
imul
pusha
fs
sbb
push
dec
inc
fs
aaa
add
adc
jbe
and
inc
je
cmp
add
pop
data16
dec
popa
outsb
decl
add
sbb
popa
fbstp
jae
out
dec
push
rcrl
add
inc
je
lea
data16
insb
movsl
inc
gs
addl
inc
je
sub
adc
xchg
pop
dec
sbb
cld
dec
or
gs
stc
stc
outsb
andnps
clc
dec
sub
add
and
imul
push
dec
mov
pop
add
lret
or
push
dec
imul
mov
je
push
pop
je
add
mov
das
jo
aad
add
adc
dec
jbe
aas
imul
add
loope
dec
dec
jb
dec
push
loope
arpl
pop
pop
inc
pop
xchg
sub
pop
filds
pop
ds
imul
add
add
add
add
add
xchg
ss
sti
push
insb
add
cmp
push
gs
inc
and
push
sub
dec
add
sub
das
rolb
in
inc
inc
sub
add
out
adc
dec
gs
and
outsl
sub
xor
pop
sub
ja
cmc
xor
mov
sub
xchg
add
stos
pop
push
cmp
pop
js
rorl
dec
dec
out
jg
add
pop
sub
push
cs
jmp
cmc
xor
jl
pop
inc
sahf
sub
lcall
in
mov
cmp
push
sysenter
push
cmp
sub
sarb
inc
inc
repnz
push
out
aaa
push
cs
dec
sbb
or
insb
or
xchg
std
jb
arpl
jae
arpl
add
lcall
inc
pusha
arpl
jae
insb
int
xor
push
jmp
dec
cmp
loop
fs
cli
aas
pop
push
in
pop
push
jne
pushl
cmp
jg
sub
mov
insb
add
out
adc
insl
mov
js
xchg
and
loopne
push
adc
fs
out
sbb
adc
popa
pop
cmp
adc
pop
insl
add
dec
inc
incl
popa
pop
sbb
add
inc
cmp
cmp
inc
imul
add
insb
add
dec
outsb
sub
je
cmp
cmp
add
or
pop
addr16
iret
arpl
addr16
inc
mov
pop
sub
dec
arpl
outsb
cmp
lahf
pop
popa
sub
pop
push
jl
imul
out
cld
push
cmp
pusha
insb
sub
pop
je
clc
pop
imul
pop
addr16
shr
pop
pop
mov
stc
push
arpl
mov
bound
inc
add
movsl
add
mov
mov
test
push
sub
dec
add
cmp
gs
cmp
push
sub
cmc
add
xor
bound
cmp
add
cmp
or
push
lcall
push
add
cmp
inc
sub
testb
ss
inc
sub
add
ficomps
inc
lds
ss
push
es
leave
cmp
and
pop
xchg
xor
add
sub
push
mov
add
sbb
arpl
add
push
arpl
pop
ds
fstl
inc
push
sub
ljmp
pop
xor
jmp
dec
sub
inc
xor
ljmp
dec
fwait
adc
jmp
ss
sub
sub
test
ds
es
add
sbb
dec
dec
leave
sub
popa
cs
fs
fdivrs
push
fstpl
add
inc
arpl
add
pushl
adc
pop
je
pop
outsb
gs
sbb
outsb
gs
dec
dec
gs
pop
je
sbb
cmp
inc
gs
out
dec
outsl
outsl
jno
cmp
jae
sbb
cmp
cmp
adc
outsl
mov
cmp
mov
in
arpl
add
add
dec
push
add
outsl
adc
cmp
add
sub
fs
aas
add
sbb
push
inc
sub
cmp
mov
dec
je
stos
pop
outsb
xchg
data16
jbe
insb
dec
lret
inc
les
dec
fistps
push
roll
push
shrl
add
cld
cmp
test
sbb
push
arpl
pop
gs
imul
cld
cmp
and
cmp
flds
outsb
iret
mov
sub
cmc
pusha
outsb
fdivrp
pop
jae
hlt
pusha
outsb
mov
push
pop
arpl
push
adc
pop
les
pop
cmp
pusha
test
pop
mov
jbe
or
ds
xor
push
dec
daa
roll
cmp
mov
jb
iret
push
add
mov
xor
xor
add
push
cmpsb
push
sbb
das
xchg
pop
push
cmp
bound
pop
cmpsb
xor
dec
fwait
adc
pop
push
inc
add
sub
in
sub
push
cmp
pop
out
aad
xor
cmp
cmp
cmp
xor
or
adc
jmp
je
arpl
insb
add
pop
add
aas
pcmpeqb
push
or
sub
arpl
jg
je
dec
arpl
sub
ljmp
push
add
adc
std
add
add
stc
out
mov
in
bound
add
call
out
pop
pop
fs
adc
outsl
pop
lret
or
std
arpl
div
push
add
push
add
out
jae
adc
fs
add
divb
add
popl
dec
stc
jae
add
pop
je
repz
outsb
inc
and
dec
stc
jae
add
pop
je
cmc
data16
pop
pop
outsb
out
pop
add
inc
outsb
ja
imul
repz
ret
in
pusha
outsl
lods
loop
jmp
and
mov
imul
in
outsl
add
and
sbb
jae
add
pop
je
dec
push
pop
leave
loopne
outsb
inc
add
sub
je
cmp
cmp
lahf
sub
addr16
add
push
add
xchg
xor
xor
dec
xchg
aas
js
xchg
lods
sub
push
je
js
arpl
pop
je
jb
je
flds
dec
push
pop
dec
popa
inc
add
sub
cld
inc
adc
pop
outsb
or
dec
dec
pop
stos
push
ja
cmpsb
dec
pop
jmp
fs
cmpsl
bound
cld
lahf
sub
push
pop
leave
adc
pop
mov
pop
and
adc
push
out
inc
pusha
faddl
cmp
adc
xor
pop
push
add
or
add
ja
sti
xor
repnz
xchg
pop
pop
jle
or
dec
hlt
out
popw
mov
push
paddd
pop
dec
loop
dec
dec
push
mov
dec
or
add
lahf
dec
push
push
pop
push
icebp
adcl
xchg
dec
loop
mov
adc
sub
xchg
cmp
in
cmpsb
sub
sub
and
ds
dec
cs
lret
jmp
fstl
push
cmp
or
dec
imul
es
adc
pop
std
popa
add
pop
pop
add
std
cmp
arpl
and
jae
sub
inc
mov
out
inc
sbb
add
pop
add
add
push
add
xchg
add
jo
sub
fs
ljmp
out
data16
push
cld
add
adc
insb
jb
std
pop
insb
pop
and
repnz
push
addr16
gs
data16
and
and
add
sub
push
ja
repnz
add
addr16
push
adc
loopne
imul
in
insl
arpl
jmp
ljmp
incl
pop
popa
jae
pop
fs
jae
sbbl
add
add
add
sub
pop
imul
rorl
adc
cld
sub
add
icebp
pop
je
loop
add
lret
lret
repz
imul
xor
pop
mov
pop
imul
ss
imul
das
pop
arpl
inc
sub
pop
insl
inc
imul
xor
rorl
add
pop
add
inc
add
inc
aad
je
iret
cld
xchg
mov
pushf
dec
out
add
push
or
pop
out
mov
add
adcb
daa
add
add
push
sar
inc
push
iret
push
xchg
add
or
rolb
pop
mov
cs
mov
sbb
or
pop
jle
or
sub
inc
add
outsl
add
addb
push
xchg
or
imul
rclb
iret
push
push
add
add
stos
pop
inc
cld
lret
push
ds
into
bound
add
add
sub
jmp
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
pop
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
ret
and
add
and
add
and
add
and
add
je
mov
andl
add
andl
add
cmpb
xlat
cmpb
and
mov
inc
and
add
add
push
and
add
add
inc
idiv
and
add
and
add
add
lods
sbb
add
xchg
idiv
or
add
sti
and
add
and
add
and
add
and
add
and
add
mov
xchg
ljmp
mov
ljmp
mov
add
ljmp
ljmp
mov
ljmp
mov
ljmp
enter
xchg
ljmp
mov
ljmp
mov
cld
ljmp
mov
ljmp
sbb
or
sub
xchg
adc
xchg
ljmp
xchg
decl
jg
push
cld
ljmp
xchg
mov
push
cld
dec
stos
enter
rorl
data16
cltd
add
pop
sub
inc
fbstp
pusha
sarl
sbb
fbstp
adc
mov
das
xorb
test
lcall
sbb
in
xor
pop
fisttps
andb
fisubs
sti
mov
push
movsb
shl
fbld
mov
outsb
je
xchg
add
orl
adc
leave
mov
andb
push
mov
inc
add
pop
mov
inc
lahf
add
cs
test
jb
loopne
dec
mov
mov
mov
sbbl
enter
aad
out
dec
xchg
push
inc
mov
lcall
add
mov
push
stos
mov
sub
adc
popa
stos
nop
or
jae
sub
add
lretw
movsl
in
mov
sbb
sbb
add
xor
aas
cmp
fbstp
outsb
rcrl
and
mov
insl
jmp
test
xor
lods
dec
pop
out
ret
or
mov
add
add
add
aas
pusha
xchg
mov
cltd
mov
fistpll
adc
cmc
into
mov
or
add
aas
xor
push
loope
addr16
mov
dec
cmp
out
adc
mov
aas
mov
mov
sbb
movsb
push
jb
mov
out
jl
loop
in
jne
cmp
test
daa
push
push
jmp
jae
pop
jbe
pop
adc
cmpl
add
and
mov
rcrb
shrl
xchg
sub
fists
movsl
xor
jno
sub
xor
jmp
addr16
adc
inc
xchg
xchg
xchg
push
xor
cld
lock
xchg
xchg
aad
push
xchg
xor
pop
ficoml
das
xchg
push
push
dec
xchg
mov
xor
enter
cwtl
dec
test
mov
dec
push
mov
emms
sbb
inc
adc
jb
or
cmp
es
ds
imul
cmpsb
lods
cmc
xchg
xchg
push
shlb
dec
or
adc
lock
sub
sbb
sub
out
sub
out
sub
aas
inc
ljmp
add
add
add
ljmp
add
pop
add
sub
add
fs
dec
imul
add
sub
add
sub
add
sub
add
imul
call
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
add
push
je
dec
add
xor
dec
add
dec
add
add
add
add
dec
add
stos
dec
add
dec
add
stos
dec
add
stos
dec
add
and
cmp
lcall
cmp
sti
lahf
cmp
lahf
mov
cmp
stos
mov
cmp
mov
cmp
mov
cmp
lahf
mov
cmp
cmp
add
add
add
add
mov
cmp
aas
mov
cmp
dec
mov
cmp
mull
cmp
mov
mov
cmp
inc
mov
cmp
sub
cmpl
mov
aas
sub
aas
sub
cmpl
faddl
aas
sub
aas
sub
inc
sub
xor
sub
xor
sub
xor
add
add
add
sub
inc
sub
xor
inc
sub
xor
inc
sub
inc
sub
xor
inc
sub
inc
sub
xor
inc
sub
ss
sub
ss
sub
inc
sub
jecxz
ljmp
cmp
push
ja
push
aas
cmp
inc
cmp
sub
add
lret
cmp
idivl
push
xchg
aaa
push
mov
push
mov
push
stos
aaa
push
dec
aaa
push
out
sub
out
sub
out
sub
out
sub
out
sub
call
add
pop
out
sub
out
sub
jb
inc
pop
out
sub
out
sub
out
sub
fldcw
sub
out
sub
add
sub
add
add
add
xchg
dec
add
sub
add
sub
add
sub
add
int
add
sub
add
sub
add
sub
add
dec
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
add
sub
add
sub
add
sub
add
dec
add
add
pop
add
sub
add
sub
add
xchg
dec
add
push
pop
add
inc
pop
add
inc
pop
add
jbe
cmp
push
pop
add
inc
pop
add
inc
pop
add
ds
add
pop
add
add
add
add
add
cmp
pop
add
add
add
add
add
mov
cmp
rcrl
add
ret
push
add
ret
push
add
shll
cmp
rcrl
add
add
push
add
ret
push
add
jg
cmp
xchg
push
add
sbbl
add
xor
add
push
add
sub
ljmp
aaa
or
sub
ljmp
js
ljmp
js
ljmp
or
cld
ljmp
js
ljmp
js
ljmp
mov
ljmp
js
ljmp
js
ljmp
push
add
ljmp
js
incl
sub
ljmp
in
add
sub
ljmp
js
ljmp
js
ljmp
ja
sub
ljmp
js
ljmp
js
ljmp
roll
sub
ljmp
js
ljmp
js
ljmp
call
out
sub
out
sub
out
sub
xor
sbb
out
sub
out
sub
out
sub
lret
push
out
sub
out
sub
out
add
pop
inc
or
add
pop
out
sub
out
sub
jns
cmp
out
sub
out
sub
out
sub
add
sub
out
sub
out
sub
addr16
sub
out
sub
out
sub
sbb
pop
pop
out
sub
out
sub
add
sub
add
and
add
sub
add
sub
add
sub
add
add
add
sub
add
sub
add
sub
add
dec
add
sub
add
sub
add
sub
add
out
add
sub
add
sub
add
sub
add
call
pop
add
sub
add
sub
add
jmp
pop
add
sub
add
sub
add
jmp
pop
add
sub
add
sub
add
dec
add
add
sbb
add
pop
cmp
sbbl
add
sbb
add
add
inc
sbb
add
add
loop
cmp
inc
sbb
add
add
adc
add
add
add
add
adc
add
mov
add
add
add
shll
add
fsubl
add
add
and
add
and
add
cmp
ret
and
add
and
add
js
ljmp
mov
cmp
sub
ljmp
js
ljmp
jg
sub
ljmp
js
ljmp
js
ljmp
inc
cmpb
js
ljmp
js
ljmp
das
cmpb
js
ljmp
js
ljmp
lret
sub
ljmp
js
incl
sub
ljmp
xchg
mov
sub
ljmp
js
ljmp
js
ljmp
xchg
sub
ljmp
js
ljmp
js
ljmp
fstl
add
pop
out
sub
out
sub
cmp
add
pop
out
sub
out
sub
lock
out
sub
out
sub
out
sub
or
adc
out
sub
out
sub
out
add
pop
add
add
pop
out
sub
pop
movsb
pop
pop
dec
movsb
push
pop
out
sub
lcall
pop
aaa
das
push
adc
push
comiss
or
push
pop
das
push
and
push
pop
das
push
add
add
fdivrp
mov
call
sub
add
sub
add
sub
add
sub
add
add
pop
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
ret
pop
add
rcrl
add
rcrl
add
ret
pop
add
add
pop
add
xchg
pop
add
xchg
pop
add
sbbl
add
pop
add
xchg
pop
add
sbbl
add
pop
add
push
pop
add
inc
pop
add
inc
pop
add
push
pop
add
push
pop
add
inc
pop
add
inc
pop
add
adc
add
adc
add
add
add
add
add
adc
add
adc
add
add
add
add
add
add
push
add
sub
ljmp
js
ljmp
js
ljmp
js
ljmp
js
ljmp
js
ljmp
js
ljmp
js
ljmp
js
ljmp
js
ljmp
js
ljmp
js
ljmp
js
ljmp
js
ljmp
js
ljmp
js
ljmp
js
add
pop
cld
ljmp
lods
imull
pop
clc
add
push
in
repnz
in
dec
loopne
arpl
bound
add
js
add
sub
push
inc
inc
in
inc
fsub
arpl
loopne
imul
pop
jmp
inc
sbb
test
inc
imul
inc
push
lock
cmp
jmp
inc
mov
leave
inc
push
lock
inc
pop
lock
cmp
dec
inc
adc
cmp
jmp
inc
mov
or
flds
lock
mov
inc
push
icebp
jns
cmp
imul
icebp
dec
inc
shl
sbb
lock
in
cmp
in
dec
inc
adc
cmp
in
imul
or
aam
cmp
lods
cmp
mov
cmp
insb
cmp
xchg
mov
pop
sbb
in
sub
in
add
adc
mov
cmp
jl
cmp
dec
pushf
cmp
lods
cmp
mov
cmp
inc
insb
cmp
pop
mov
fisttpll
cmp
jns
add
sub
add
pop
mov
xlat
mov
daa
mov
testl
push
xor
mov
mov
push
mov
mov
mov
push
mov
xor
mov
xor
mov
xor
mov
daa
mov
ja
xor
xchg
mov
mov
mov
mov
mov
out
movsb
xor
mov
xlat
jno
xor
insb
in
jmp
push
in
sti
cmp
add
add
add
cmp
cmp
sub
je
cmp
dec
out
dec
sbb
pop
sbb
imul
out
jnp
or
mov
shr
fwait
clc
jmp
stos
clc
xor
mov
pop
xor
fistpl
out
jmp
aam
sti
cmp
sbb
sub
sub
je
cmp
int3
out
dec
sbb
imul
out
jnp
or
mov
shr
fwait
add
jmp
stos
stc
xor
mov
icebp
xor
testl
xor
out
xor
shr
adc
or
inc
xor
out
and
sub
jno
xor
jno
or
inc
xor
lock
xor
mov
push
lock
xor
xorl
out
sub
mov
sub
jmp
or
mov
div
xor
movsl
xor
add
xor
and
stos
out
icebp
xor
out
shll
out
shll
lock
push
lock
xor
dec
cmp
xor
or
pop
xor
std
mov
aad
jge
jmp
cs
add
std
sbb
fisubl
mov
push
xor
fidivl
xor
cwtl
cmp
cltd
jl
and
cs
add
test
jge
ret
jle
aaa
fs
mov
loope
iret
xor
test
testb
cmp
inc
push
cmp
push
outsl
cmp
jl
dec
aas
mov
cmpb
mov
aas
xor
add
jmp
jo
xor
jne
xor
jae
xor
fnsave
rorb
add
add
add
add
mov
inc
mov
outsb
jno
aaa
roll
xchg
cmp
cmp
mov
cmp
mov
push
mov
cmp
mov
popa
mov
fisttpl
cmp
lret
jmp
add
loop
jb
push
divb
call
in
pop
and
add
loope
dec
nop
loope
inc
and
das
cmp
out
xor
out
sub
out
and
mov
cld
cld
ljmp
sub
cli
and
imul
in
stc
cli
sub
sti
adc
in
addr16
jle
jle
out
in
mov
in
xchg
cmp
in
jmp
xor
repnz
sbb
push
cmc
nop
sub
add
add
add
add
xor
out
xor
out
sbb
xchg
icebp
mov
push
add
cmpsl
lock
push
out
into
xor
in
mov
mov
jecxz
shr
cmp
mov
mov
in
aaa
push
ljmp
ret
xor
xchg
call
xchg
repz
cmp
out
cmp
ret
popf
jns
add
pop
repz
cs
hlt
add
hlt
mov
pop
cmc
xor
fdiv
xor
add
pop
mov
xor
inc
pushf
xor
pop
xchg
icebp
cmp
xor
lret
cmp
xor
adc
xor
or
xor
pop
xor
add
inc
push
repz
mov
push
pop
aaa
cmp
ss
sbb
cs
xor
adc
xchg
xor
shrb
out
lds
fadd
mov
cmp
ret
jns
clc
leave
sub
add
cltd
loopne
sarl
clc
jbe
das
add
jae
xor
xchg
cmc
jb
xor
dec
xor
outsb
push
xor
insb
pushl
cltd
mov
xor
outsb
jnp
inc
outsl
cmp
mov
out
scas
test
cmp
out
lret
jg
aas
outsb
cmp
sarl
add
mov
xor
insb
adc
or
es
jge
push
insb
popf
xor
lds
mov
insl
inc
xor
insl
push
xor
pop
out
outsb
cmp
in
mov
inc
out
rcrb
in
in
xor
std
sbb
push
sbb
cmp
mov
push
stc
enter
fwait
out
jg
stc
out
out
mov
out
rcrl
aad
dec
out
in
pop
sub
cmp
call
xor
jne
lret
call
pop
pop
sbb
jmp
clc
hlt
dec
jmp
std
lock
cmc
test
pop
bound
sahf
loopne
test
pop
pushf
jmp
aaa
and
insl
aaa
and
pop
aaa
sub
xchg
adc
cmp
sti
ljmp
add
add
cmp
ljmp
gs
call
sarl
push
call
cs
out
xor
loope
xor
loop
jbe
xchg
std
jne
add
pop
daa
aad
xor
aad
xor
mov
dec
aad
das
pusha
aad
das
mov
loopne
xchg
aad
das
cld
aad
xor
cmp
addl
loope
in
push
fs
pop
mov
push
xorb
int
mov
es
dec
adc
cmp
dec
jne
jmp
cs
add
pop
outsl
push
das
add
outsl
das
ljmp
cs
lea
sub
faddl
jno
mov
inc
add
xor
add
lret
repnz
adc
add
loopnew
xor
fnstenv
add
push
aaa
cmp
cmp
push
jbe
adc
cmp
jg
cmp
push
popf
cmp
push
push
cmp
or
sub
test
mov
subb
incl
into
aas
cmp
in
add
jge
aas
adc
out
sbb
add
push
add
add
dec
sub
dec
aas
xor
dec
xor
pop
xor
jle
sub
rcr
cli
mov
pop
sti
push
or
pop
addr16
pop
popa
int
pop
ds
cmp
out
fcmovne
in
cmp
int3
std
cmp
shll
out
negb
pop
rcrl
sbb
add
add
add
add
add
lcall
ror
stc
sbb
add
push
jne
cmc
pop
jnp
cmp
shrl
push
rolb
aas
scas
rcrl
xor
xlat
aam
and
insb
adc
std
xlat
fcoml
aaa
dec
fstpt
xchg
fistpl
xor
loope
xor
hlt
fsubrl
std
fucomip
xor
fiadds
mov
and
xorb
adc
or
rdtsc
sti
loope
xor
loope
xor
xor
jecxz
jb
add
pop
into
sarl
aad
cs
aam
sub
cs
adc
aad
sti
sub
in
sub
in
xlat
xor
add
std
cli
xor
loop
xor
jecxz
xor
add
add
add
xor
pop
aam
xor
jns
clc
lds
pop
add
stos
xor
popa
mov
ss
sbb
xor
and
cmp
jno
movsl
sub
add
mov
xor
hlt
jo
mov
repnz
icebp
das
cmp
sahf
aaa
jmp
xor
xlat
xor
add
add
add
ror
xor
fwait
push
push
cmp
push
cmp
push
pop
ds
push
cmpsb
aas
jge
clc
call
sub
fistps
add
mov
dec
xor
push
dec
xor
dec
push
xor
dec
bound
pop
dec
xchg
xor
dec
mov
xor
dec
add
lahf
dec
xchg
xor
dec
aad
sbb
dec
scas
xor
dec
cmp
test
leave
xor
dec
jmp
add
xor
decb
decl
sub
shlb
cltd
rcr
sbb
rcrl
adc
enter
insl
aam
add
repnz
bound
aad
push
aas
aad
push
or
pusha
inc
dec
aad
inc
jg
test
jmp
ret
sbb
push
sub
and
inc
adc
jnp
add
mov
leave
aad
icebp
mov
mov
popa
dec
fcomps
daa
loopne
push
dec
fnstenv
dec
mov
pop
inc
pop
push
pushf
sub
fcompp
sub
fiadds
sub
fcmovnu
cmp
add
add
push
fidivs
fimuls
or
cmp
pop
fnsave
sub
add
add
add
add
sub
mov
fisttpll
sub
neg
cmp
or
or
scas
fmul
sub
adc
and
pop
not
push
das
cmpsl
shrl
rcrl
add
stc
push
das
sub
jecxz
js
mov
mov
decl
cs
hlt
xchg
dec
add
xchg
sub
fnsave
sub
xor
fidivrl
xor
jp
xor
pop
or
mov
ja
push
pop
adc
push
pop
or
sbb
inc
ss
ja
xor
insb
pop
xor
gs
cmp
push
sub
push
dec
cmp
push
sbb
cmp
stc
inc
cmp
cmp
add
dec
fistpll
aad
idivb
cmc
dec
and
das
dec
jp
dec
dec
clc
call
adc
ljmp
add
mov
push
sbb
xor
xorb
push
popf
xor
xor
push
repz
hlt
xor
dec
cwtl
mov
dec
dec
mov
cmp
cmp
inc
and
repnz
pushf
add
add
add
add
add
inc
test
sub
xlat
stc
fs
aad
pop
ljmp
or
mov
mov
cmp
rolb
icebp
shrb
push
xchg
enter
enter
into
add
hlt
inc
into
aaa
cld
pop
iret
push
cmc
or
jnp
cld
into
stos
push
mov
pop
push
add
fcmovne
inc
aad
add
aam
xor
cmp
mov
jle
fsts
adc
adc
ret
rclb
push
ret
sub
fsubr
sub
fnstenv
sub
ficompl
sub
fnstenv
sub
lds
xchg
fdivrs
sub
fadd
sub
jae
push
add
pop
out
das
das
roll
das
rcl
add
and
clc
cs
or
adc
sbb
cs
xor
pop
xor
jle
jmp
cmp
into
sysenter
mov
into
jge
add
je
xor
std
xor
push
pop
aaa
repz
divb
mov
cmc
xor
cmc
cs
fucomp
cmp
push
cmp
cmp
out
cmp
cld
cwtl
cmp
cld
pop
cmp
hlt
gs
fsubrl
cmp
cmp
cmp
mov
push
jge
cmp
or
mov
pop
add
push
mov
movsl
pop
outsb
das
ljmp
sub
add
dec
stos
xor
dec
shlb
dec
pop
cmp
xchg
pop
js
fimuls
xor
dec
sbb
add
add
add
dec
dec
xor
jle
mov
xor
add
push
adc
sbb
ss
ss
fbstp
xchg
pop
out
ss
pop
pop
aaa
inc
pop
test
test
aaa
mov
inc
and
pushf
inc
movsb
cmp
inc
sarb
popf
inc
sbb
outsb
dec
dec
cmp
dec
mov
cmp
cmp
pop
and
or
adc
aad
adc
aad
add
adc
and
and
pop
shrb
dec
shlb
push
scas
rorb
test
push
inc
xchg
rcrb
mov
xlat
jno
std
xlat
jg
sti
xlat
test
leave
xlat
xchg
push
call
cltd
push
xchg
xlat
cmpsl
push
mov
xlat
mov
out
lods
xlat
iret
stos
xlat
aad
mov
xlat
jmp
add
add
add
xlat
testl
rorl
aaa
pop
clc
sbb
inc
sub
pop
sub
sbb
add
adc
cmpsb
in
sub
shrl
mov
lret
sub
xchg
and
test
and
xlat
popf
and
xlat
lahf
and
xlat
shll
mov
and
out
lcall
and
add
and
iret
and
mov
call
aad
and
ljmp
and
add
fidivrl
mov
jg
cmp
ja
cmp
jg
cmp
xchg
cmp
mov
lea
cmp
scas
cmp
push
push
cmp
decl
or
push
or
shl
cmp
add
clc
push
sub
add
fsts
xor
out
jp
mov
xchg
cmpsl
das
shl
sbb
pop
ffreep
cs
xlat
cmpsb
cs
fbld
cs
sub
mov
jl
sub
xor
dec
pop
xor
inc
pushf
xor
inc
fnstenv
dec
push
xor
cmp
ss
inc
jp
fimull
les
cmp
ja
test
fcoml
cli
push
cmp
push
imul
pop
cmp
mov
ja
inc
dec
sarl
cmpsb
dec
pushf
rorl
xchg
dec
push
aas
outsb
push
clc
inc
pusha
stc
call
sbb
add
dec
xor
or
dec
mov
add
xor
and
test
push
inc
xlat
pop
aas
insb
xlat
jle
xchg
xlat
or
js
xor
aad
sbb
push
lret
xchg
leave
iret
adc
addb
iret
call
lods
sub
sbb
negb
shrb
pop
mov
shll
cmp
std
cmp
or
push
popf
xlat
popf
pop
sahf
sarb
cld
out
mov
cld
mov
add
sub
jg
xchg
jbe
mov
ss
int3
jmp
daa
add
clc
daa
xchg
xchg
daa
cmp
inc
daa
clc
iret
xor
dec
sbb
pop
rcrb
and
shlb
and
into
and
add
inc
and
into
pusha
and
into
and
into
fwait
and
iret
lods
and
iret
lret
and
iret
aam
sti
into
stc
and
into
in
repnz
arpl
imul
mov
mov
xchg
and
jmp
sub
add
ja
sub
jle
sub
jbe
sub
pop
or
cld
push
sahf
xor
xorb
push
sub
pop
jl
xor
jae
xor
jo
ss
sub
adc
ss
imul
out
sub
add
xor
testl
xchg
out
xor
fisubs
pop
cli
cmp
cli
push
cmp
cli
cmp
add
mov
cmp
ret
adcb
adc
ds
xchg
ds
into
ds
push
cs
mov
push
cltd
aas
push
aas
out
push
clc
call
stc
ljmp
orl
jbe
xchg
xor
mov
xor
dec
loopne
sub
out
xor
adc
xor
jae
orb
push
dec
xchg
xor
dec
add
sub
adc
push
into
pusha
clc
and
jne
into
mov
mov
icebp
clc
jnp
sub
int
pop
pop
leave
int
pop
lcall
add
add
add
pop
shrb
stc
rclb
xor
inc
lret
and
lret
and
add
rcll
dec
lds
add
movb
addr16
iret
popa
addr16
iret
ret
rolb
stos
leave
test
cld
std
std
pop
add
sub
cmp
int3
test
pop
ja
xchg
cs
aam
cs
aas
cs
cltd
sub
add
add
add
add
sub
add
pop
sub
add
shlb
pop
rcrl
fcmovbe
aaa
sub
fmul
sub
mov
fdivrs
dec
fsubrs
sub
jne
sbb
inc
sub
xlat
and
or
imull
popf
aad
adc
push
stc
adc
sub
or
add
dec
pop
test
add
add
mov
scas
lock
ss
icebp
fnstenv
insb
loopne
ss
loopne
ss
push
ss
adc
das
loopne
xor
xchg
xor
mov
bound
xor
adc
bound
jno
and
gs
cmp
mov
xorb
daa
insl
push
cmp
add
repz
add
add
add
add
ret
hlt
fnstsw
dec
in
mov
xor
inc
cmp
fcompl
out
daa
cmp
fisubrs
loopne,pt
es
insb
mov
aas
sub
pusha
aas
inc
push
aas
xchg
imul
aas
ret
push
cli
jmp
add
lcall
xor
je
xor
xor
dec
jne
xor
jne
xor
in
je
xor
je
xor
jne
xor
je
xor
je
xor
je
xor
je
xor
push
xor
jbe
xor
jne
xor
pushf
rcrl
test
rclb
cmp
rcl
sbb
rcr
sbb
adc
shlb
push
xor
dec
jecxz
xchg
ror
fmul
fdivp
pop
enter
iret
adc
push
and
xor
or
dec
push
sbb
pop
aas
and
data16
xor
iret
mov
pop
ja
inc
adc
into
dec
sbb
into
arpl
into
mov
hlt
cmp
frndint
call
iret
negb
or
sti
rorb
lret
shrb
sahf
shlb
sarb
push
movsb
adc
les
pop
shl
adc
roll
jnp
dec
int3
pop
pop
push
int3
out
mov
lret
sti
lret
cmp
and
gs
lods
adc
cmpsb
lret
insl
adc
out
int
sbb
int
sbb
int3
xchg
pop
and
int
sbb
outsl
sbb
pop
sbb
cltd
sbb
xchg
sbb
and
lock
add
add
fnstsw
mov
repnz
xor
jae
jmp
cs
add
stc
xor
push
call
das
sbb
fdivrs
mov
jl
sub
jno
mov
sub
ss
leave
sub
pop
movsb
sub
push
cmp
sub
insl
adc
es
xor
add
xor
imul
mov
mov
inc
imul
ss
outsl
xor
push
iret
sbb
cmp
or
jmp
push
cmp
gs
cmp
gs
data16
loopew
imul
aas
test
aas
mulb
incl
and
add
push
xor
add
xor
xor
xor
outsb
test
xor
sub
test
ror
push
std
mov
mov
fmulp
xchg
lret
inc
pusha
in
add
sub
movsb
insb
ror
inc
adc
cmpsb
outsl
das
cmc
fwait
daa
in
cmpsb
pop
or
iret
pcmpgtw
repnz
cmp
push
mov
add
inc
rorl
inc
cmp
movsl
ss
sub
int3
rcrb
ficomps
int3
repz
cmp
into
xor
pop
int
cmp
ret
enter
iret
or
or
ror
pop
xor
daa
push
jno
xchg
cltd
sbb
push
adc
add
sbb
mov
out
add
jle
sub
rcl
push
sub
add
or
jo
fisttpl
rclb
or
shrl
adc
rorb
adc
ja
xchg
iret
mov
adc
into
addr16
in
movsb
int3
jnp
or
adc
inc
adc
out
unpcklps
and
xor
arpl
cmp
dec
cmp
clc
jmp
sub
add
add
pop
xor
stc
inc
das
xor
pop
das
push
stc
ret
fcomps
sub
in
xor
ficoml
fincstp
mov
shr
xor
ss
mov
loope
push
ss
test
pop
jecxz
xor
loop
clc
jmp
sub
add
jle
das
inc
jnp
sub
jne
xor
outsl
adc
xor
jo
jg
jmp
add
add
add
add
add
fs
shlb
aaa
sub
mov
aaa
inc
push
cmp
imul
cmp
push
push
cmp
imul
cmp
movsb
cmp
push
ja
notl
out
push
loopne
aas
fs
aas
jl
call
sbb
add
jl
push
xor
or
xor
or
xor
mov
mov
cmp
xor
sbb
xor
ja
jge
into
xor
clc
push
xor
clc
add
in
pop
dec
xor
pop
sbb
xor
mov
xor
ds
aaa
xchg
adc
sahf
xor
and
cmp
cmp
add
sub
std
lds
add
sub
cmp
add
pop
div
ss
pop
and
xor
jmp
movsb
push
scas
cmp
pop
out
xchg
sub
xchg
xor
and
xor
lods
or
cmp
or
cmp
pusha
cmp
pop
sarl
push
das
cmp
pop
mov
inc
stos
adc
inc
mov
adc
inc
add
adc
inc
ret
inc
mov
adc
inc
ljmp
inc
cli
adc
inc
loop
mov
inc
ret
inc
mov
adc
inc
sub
in
ljmp
std
ljmp
int
push
cmp
ljmp
sub
jmp
cmp
add
mov
cmp
push
cmp
imul
jge
mov
jge
pop
add
mov
pop
add
sbb
xor
sbb
das
rcrl
xor
adc
sub
fisubrl
and
loop
cmp
ljmp
repz
or
or
or
push
test
add
push
mov
repz
pushf
xor
or
lods
xor
push
mov
mov
mov
xor
push
int3
xor
or
cmp
aaa
add
push
cmp
adc
xchg
cmp
mov
cmp
adc
cmp
mov
cmp
adc
dec
adc
xchg
cmp
push
cmp
add
daa
aas
int3
addr16
loope
xchg
ds
push
cmp
and
imul
fidivl
cmp
sub
push
cmp
adc
fwait
cmp
sub
std
cmp
cmp
pop
jg
xchg
pop
movsb
xor
pop
cld
cmp
cmp
cmp
xchg
xor
mov
jl
sbb
xor
sbb
fcomps
push
xor
sti
push
cld
xor
or
inc
xor
xchg
xor
cltd
xor
or
xor
or
xor
repz
ud2
shlb
or
cmp
or
aaa
into
or
lock
lahf
or
cmp
push
cmp
or
xor
add
add
add
xor
inc
xor
inc
or
ss
pop
ljmp
pop
sahf
cmp
add
aaa
and
jae
fdivr
and
std
lock
xor
ss
popa
or
xor
ret
xor
jge
mov
ljmp
jl
sbb
repz
add
add
add
add
cmp
add
cmp
std
cld
cmp
cmc
add
push
in
push
add
jns
clc
jns
pop
add
pop
and
xor
sbb
cmc
xor
mov
ss
and
pop
lods
or
movsl
or
ds
or
cmpb
or
ds
or
lods
or
add
add
add
add
add
or
ds
ret
or
ds
or
test
lods
or
movsl
or
ds
or
ds
or
aas
inc
or
aas
sbb
or
aas
sub
or
aas
std
or
aas
add
or
sub
cmp
xchg
pop
adc
cmpsb
cmp
add
cmp
fwait
add
sub
xor
cli
fs
pop
sub
inc
pop
or
xchg
pop
shll
pop
inc
xor
test
fidivrl
pop
xor
cmp
sub
xor
pop
hlt
cs
cs
testl
jbe
test
dec
pop
jge
adcl
rsqrtps
sbb
cmp
inc
mov
add
or
cli
pop
test
cmp
add
or
ds
or
repnz
mov
xchg
aaa
fmull
test
jb
shll
or
movsb
or
ret
pop
out
ja
push
add
pop
sub
nop
push
movsl
xor
push
xorb
pushl
xchg
adc
add
add
add
btrl
adc
lds
aad
adc
fistpll
fdivs
cmpl
xor
pop
xor
std
aaa
and
push
hlt
ss
sbb
mov
add
xor
cmc
add
repnz
cmp
repnz
cmp
lods
cmp
cmp
sub
cmp
cmp
cs
cmp
sub
add
addr16
sbb
xor
sbb
xor
add
xchg
xor
scas
xor
test
xor
pop
pop
xor
pop
insb
xor
jg
jmp
xor
cli
or
xor
daa
xor
ret
stc
outsl
ss
aaa
inc
adc
aaa
addl
pop
cmp
push
cmp
jp
add
add
add
and
add
adc
xor
adc
xor
push
xor
push
xor
xor
stc
jmp
xor
mov
iret
xor
sub
dec
push
mov
das
fsts
sub
cmpsb
xor
mov
aaa
sub
push
cld
incl
sub
xor
sbb
cs
testb
in
aaa
sub
movsl
fwait
add
sub
sub
pop
inc
sub
inc
cmp
inc
inc
cmp
inc
je
sbb
and
and
cmp
and
and
adc
adc
dec
add
push
add
pop
repz
ret
cmp
pop
ret
cmp
push
ret
cmp
push
sarl
xchg
push
ret
cmp
push
arpl
test
outsb
cmp
or
sub
jecxz
xor
or
cmp
pop
cmp
or
cmp
or
push
or
ss
or
stos
or
xchg
or
xor
sub
out
pop
dec
out
add
pop
gs
add
fbstp
mul
cmp
std
dec
cmp
pop
dec
clc
sbb
pop
add
pop
mov
xor
inc
ret
xor
push
jb
lea
xchg
cmp
sbb
cmp
sbb
add
leave
dec
clc
mov
pop
add
stos
cs
jp
sub
shll
sbbl
or
xor
inc
or
sub
push
jmp
dec
dec
mov
xor
fwait
xor
stos
xor
jnp
pop
add
test
call
sti
jmp
sbb
add
or
xor
and
aas
adc
xor
pcmpeqb
jmp
jl
xchg
adc
jae
xchg
xor
adc
adc
mov
imul
xor
adc
les
or
int3
xor
aam
imul
xor
in
imul
xor
pmuludq
imul
xor
testb
jae
adc
nopl
pop
sub
pusha
sub
mov
xor
pop
sub
imull
inc
ljmp
dec
testb
pop
push
pop
sub
sub
sub
sub
sub
add
add
shrb
ss
mov
sub
or
mov
fildll
mov
ljmp
int3
notb
hlt
pop
cmp
adc
adc
xor
cld
ss
push
aam
je
mov
ss
jl
aam
pop
mov
pop
or
cmp
or
and
testb
mov
or
cmp
mov
add
add
add
push
or
cmp
push
jecxz
ss
cmp
mov
cmp
arpl
xchg
or
cmp
or
cmp
or
sub
pop
lret
sub
pop
mov
sub
pop
arpl
pop
inc
sub
pop
aaa
sub
pop
lahf
sub
pop
cmpsl
sub
lahf
sub
mov
jbe
lahf
sub
out
sub
add
sub
add
sub
add
add
pop
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
pop
add
sub
add
sub
add
xchg
pop
add
xchg
pop
add
sbbl
add
pop
add
push
pop
add
inc
pop
add
inc
pop
add
push
pop
add
push
pop
add
inc
pop
add
inc
pop
add
adc
add
adc
add
add
add
add
add
adc
add
adc
add
add
add
add
add
rcrl
add
rcrl
add
add
push
add
ret
push
add
rcrl
add
rcrl
add
ret
push
add
ret
push
add
xchg
push
add
xchg
push
add
sub
cld
ljmp
cmp
ljmp
cmp
ljmp
cmp
ljmp
cmp
ljmp
cmp
ljmp
cmp
ljmp
cmp
ljmp
cmp
ljmp
cmp
ljmp
cmp
ljmp
cmp
ljmp
cmp
ljmp
cmp
ljmp
cmp
ljmp
cmp
ljmp
cmp
incl
sub
cld
ljmp
cmp
ljmp
cmp
ljmp
cmp
ljmp
cmp
ljmp
cmp
ljmp
cmp
ljmp
cmp
ljmp
cmp
ljmp
cmp
ljmp
cmp
ljmp
cmp
ljmp
cmp
ljmp
pop
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
add
pop
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
pop
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
rcrl
add
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
push
sbb
add
add
inc
sbb
add
add
push
sbb
add
add
inc
sbb
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
shll
add
shll
add
ret
and
add
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
incl
sub
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
pop
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
add
pop
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
pop
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
add
rcrl
add
rcrl
add
ret
pop
add
add
pop
add
rcrl
add
rcrl
add
ret
pop
add
ret
pop
add
xchg
pop
add
xchg
pop
add
sbbl
add
pop
add
xchg
pop
add
sbbl
add
pop
add
push
pop
add
inc
pop
add
inc
pop
add
push
pop
add
push
pop
add
inc
pop
add
inc
pop
add
adc
add
adc
add
add
add
add
add
add
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
incl
sub
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
pop
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
add
pop
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
pop
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
inc
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
rcrl
add
rcrl
add
ret
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
push
sbb
add
add
inc
sbb
add
add
sub
ljmp
inc
cld
ljmp
inc
cld
ljmp
dec
cld
incl
sub
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
incl
sub
ljmp
pop
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
add
pop
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
pop
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
push
and
add
add
inc
and
add
add
push
and
add
add
inc
and
add
add
adc
add
adc
add
add
add
add
add
adc
add
add
and
add
and
add
and
add
pop
add
rcrl
add
ret
pop
add
ret
pop
add
rcrl
add
rcrl
add
ret
pop
add
ret
pop
add
xchg
pop
add
xchg
pop
add
sbbl
add
pop
add
xchg
pop
add
sub
ljmp
inc
cld
ljmp
inc
cld
ljmp
inc
cld
ljmp
inc
cld
ljmp
inc
cld
ljmp
inc
cld
ljmp
inc
cld
incl
sub
ljmp
inc
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
dec
cld
ljmp
pop
out
sub
out
sub
out
add
pop
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
xorb
fildll
mov
jns
sti
frstor
add
inc
push
mov
push
rol
and
stos
xchg
adc
pop
rcrl
movsl
fstps
aas
popa
xor
data16
testl
aam
pop
mov
clc
jne
xchg
mov
push
pop
adc
jbe
lea
repnz
sbb
sbb
add
add
add
enter
cltd
stc
popa
lock
pop
xor
pop
outsl
adc
mov
ret
stos
add
xchg
mov
lea
leave
daa
into
enter
push
sbb
add
fwait
sub
xor
push
or
jbe
clc
andb
adc
and
fst
mov
call
frstor
cmp
mov
int
test
nop
popf
lret
dec
sbb
loop
dec
pop
bound
call
mov
xchg
push
out
and
or
xor
xchg
ret
inc
fucomp
sbb
in
fiadds
dec
sbb
inc
add
dec
dec
or
subb
in
mov
stos
jl
or
add
stos
inc
ds
daa
adc
and
sbb
xor
xlat
sub
and
mov
rcll
lds
mov
inc
cmp
jge
xchg
lock
pop
loop
test
mov
xor
push
jae
xchg
cltd
jo
jne
mov
add
and
add
dec
inc
jle
stc
xchg
sahf
out
xchg
scas
mov
mov
rcl
mov
jne
stos
adc
shl
push
fisubl
fabs
shll
testl
ja
push
ds
stos
sbb
or
outsl
incl
js
mov
pop
push
jp
cmp
imul
aas
int3
jbe
lret
int3
outsb
pop
lret
int3
lcall
pop
mov
xchg
dec
pushl
cltd
jmp
aam
sub
into
cltd
outsb
xor
or
cld
mov
pop
mov
sahf
cmp
and
std
ljmp
mov
cmp
test
xchg
inc
loopne
fcmovu
mov
pop
aas
cld
push
cs
push
in
loop
mov
cld
dec
and
testl
mov
cld
push
xor
testl
insl
loop
add
pop
add
and
decb
bound
pop
jae
xchg
push
lock
std
inc
xor
push
add
add
add
sub
decl
jp
add
test
mov
mov
test
sbb
or
xchg
dec
in
mov
sub
rcrl
dec
ficompl
out
jmp
out
mov
int3
ficomps
int3
jbe
lret
int3
outsb
pop
lret
int3
call
call
mov
test
into
out
insl
sub
addl
add
add
add
add
popf
and
addr16
pop
inc
add
adc
jmp
imul
push
inc
add
pop
xchg
arpl
sub
add
adc
test
sahf
mov
andl
jae
xchg
inc
cld
mov
push
mov
out
mov
pop
test
cwtl
add
add
pop
lret
int3
pop
pop
lret
int3
jbe
lret
int3
outsb
pop
lret
int3
fists
cmp
and
aas
xor
xlat
pop
pop
imul
int3
outsb
pop
lret
int3
fists
push
mov
dec
pushl
add
inc
sub
mov
int3
negb
int3
out
pop
lret
int3
pop
xchg
jmp
push
data16
push
incb
aas
mul
inc
sub
cld
aas
sub
mov
lods
sub
cwtl
inc
cld
mov
sqrtps
jecxz
push
test
sti
mov
xchg
jmp
gs
add
pop
add
xor
decb
inc
in
adc
push
push
cld
sbb
sbb
dec
push
sbb
pop
add
push
add
sub
jmp
in
mov
int3
ficomps
int3
negb
int3
out
pop
lret
int3
jg
jmp
xor
add
dec
xchg
push
mov
lahf
out
sub
mov
int3
jbe
lret
int3
outsb
pop
lret
int3
call
test
pushf
ja
sub
test
fists
test
pushf
in
jnp
xchg
xchg
inc
or
out
rolb
add
sub
mov
sub
xchg
dec
cld
mov
sti
cmp
insb
inc
mov
das
or
es
cmc
add
test
xchg
dec
lock
cmp
cvtpi2ps
xchg
xchg
inc
or
xchg
push
clc
mov
push
test
xchg
push
or
push
test
xchg
add
xchg
jne
push
add
xchg
inc
or
fldl
mov
push
out
gs
clc
mov
mov
cmpl
test
xchg
inc
in
mov
inc
cld
push
out
xchg
push
call
mov
ljmp
cwtl
dec
lock
fwait
hlt
add
pop
test
and
mov
aas
jl
cmp
or
pop
data16
pop
std
push
add
sar
adc
mov
sti
mov
jl,pt
sub
test
and
mov
sub
sub
jns
mov
fisttps
cmp
fisttps
mov
es
ljmp
pop
test
mov
or
sub
ljmp
pop
test
mulb
test
cltd
pop
or
stos
sbb
pop
es
pushl
iret
out
cmpsl
and
xchg
cmp
mov
sub
push
push
mov
cli
jmp
ret
or
xor
out
sub
cwtl
inc
hlt
mov
sbb
add
add
add
push
cmp
ret
push
loopne
push
stc
incl
push
lret
int3
pop
cwtl
jmp
pop
push
aaa
out
out
sub
cld
aas
sub
cmp
mov
jl
and
sqrtps
fiaddl
push
lret
pop
mov
int3
fists
cmp
insb
pop
push
add
add
add
aaa
fwait
out
sub
xchg
ret
outsb
push
lret
int3
fists
lahf
adcb
decl
mov
xchg
int
mov
or
mov
adc
clc
mov
sti
mov
cmpsl
pop
jae
test
sbb
dec
mov
dec
sbb
pop
jne
cwtl
inc
clc
add
add
adc
pop
add
addl
push
mov
test
out
cld
xlat
sbb
mov
pop
test
xlat
pop
lret
int3
pop
push
lret
int3
notb
int3
out
push
lret
int3
jg
jmp
incb
roll
xor
sub
lahf
insb
add
decl
into
sti
fstpl
repz
push
dec
clc
pop
xchg
adc
decl
sub
push
hlt
leave
inc
sub
call
sbb
jmp
xchg
or
sub
decl
dec
push
add
push
inc
add
push
jg
sub
add
fdivs
cltd
xor
incl
push
sub
sub
add
sub
mov
aaa
stos
out
sub
call
inc
sub
test
iret
out
and
and
test
sub
pop
mov
test
and
mov
push
lret
int3
call
xor
mov
push
in
sbbl
lret
int3
outsb
push
lret
int3
call
rolb
adc
sub
xlat
mov
inc
test
sbb
cmp
lret
outsl
aas
or
or
inc
call
sub
push
rcl
hlt
call
pushf
ret
or
mov
das
sub
push
push
and
mov
jecxz
idivl
test
into
test
into
test
int
sarl
addl
add
add
add
add
roll
add
sub
mov
sub
xchg
inc
hlt
mov
into
add
xlat
sub
xorl
dec
call
sahf
jecxz
push
add
mov
mov
test
in
int
pop
jecxz
push
lret
inc
push
iret
test
xchg
dec
or
xlat
adc
leave
out
outsl
cmp
inc
add
iret
out
cmpsl
pop
clc
andl
dec
sbbb
jmp
xchg
push
in
ss
jne
jl
es
add
push
lahf
insb
push
dec
inc
xchg
cmc
decl
ret
or
mov
inc
sub
jae
mov
pop
push
pushl
cmpl
xchg
adc
push
add
sub
mov
jno
inc
or
add
add
add
add
dec
lock
inc
sub
push
push
xchg
xor
pop
mov
jno
add
pop
inc
add
push
add
mov
sub
add
pop
notl
ret
jmp
test
fdivs
testb
push
test
loopne
insb
loopne
fldt
mov
add
pop
arpl
inc
sub
xchg
add
push
clc
sub
mov
mov
add
jbe
mov
stos
inc
fsubrs
cmpsl
mov
dec
into
test
call
xor
xchg
call
je
popa
add
xor
jmp
or
push
sbb
ljmp
decb
add
jo
mov
mov
xor
add
fisttps
inc
inc
popa
add
sub
push
push
mov
jg
inc
sub
jne
sbb
mov
push
add
incl
subb
pop
add
sub
push
jecxz
clc
sub
mov
test
inc
shlb
push
mov
loopne
daa
arpl
inc
sub
dec
sub
cmpsl
or
push
orb
add
jg
inc
sub
shl
pop
mov
notl
push
push
mov
mov
stos
call
push
pop
pop
jecxz
cmp
pop
add
sub
int3
out
ljmp
addr16
mov
jp
int3
out
ljmp
push
je
cmp
mov
push
call
bound
inc
add
gs
pop
jmp
test
push
inc
arpl
aas
sub
push
call
test
sbb
mov
push
push
lcall
mov
ffreep
int3
jmp
mov
add
in
fdivl
popa
in
add
pop
add
sbb
add
pop
mov
add
cmpsb
inc
or
mov
pusha
call
cmc
sbb
mov
pop
sbb
add
xchg
add
daa
xchg
inc
sub
add
sub
or
das
xchg
inc
sub
add
sub
add
pop
and
inc
add
pop
add
test
push
add
test
aas
dec
call
call
lret
add
jg
inc
add
cmpsb
cmp
mov
mov
test
dec
add
push
add
pop
mov
daa
fwait
call
aas
sub
mov
pop
pop
ret
idivl
mov
notl
leave
cmpsb
call
call
mov
loop
mov
push
mov
jp
call
andl
fs
pop
add
sub
pop
call
xchg
adc
ljmp
jp
cld
push
jb
jae
movsb
cmp
fcompl
cmpsl
sti
cmc
sbb
imul
inc
add
je
imul
mov
sub
push
ret
incl
movsl
pushf
mov
add
cli
add
cmpsb
dec
in
hlt
add
cli
mov
movsb
inc
loopne
sub
jmp
add
out
push
add
sub
jmp
mov
clc
subl
push
xor
jae
movsb
add
add
mov
sub
mov
sub
mov
movsb
inc
clc
stos
fucomp
add
pop
mov
add
add
add
inc
add
jb
xor
mov
add
movsl
or
jge
and
mov
call
mov
call
mov
jnp
inc
sub
inc
divl
xchg
mov
clc
mov
stos
add
mov
inc
rorl
sub
push
call
test
daa
jnp
inc
sub
aad
pop
clc
test
mov
xor
or
mov
call
add
push
push
je
sarb
pop
mov
call
mov
fwait
call
xor
fstpl
jecxz
int3
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
pop
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
pop
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
pop
add
xor
add
mov
nop
xor
sub
xor
iret
add
push
pop
add
stc
and
cmp
pop
and
ds
sbb
and
loope
cmpl
sub
add
outsb
pop
add
push
das
divl
aas
das
add
xor
sub
or
inc
sub
cmp
add
push
xor
sub
icebp
xor
sub
xor
sub
xor
sub
xor
xor
sub
xor
sub
imul
fbstp
sub
xor
cmp
inc
xor
cmpsb
sub
xor
das
sub
xor
and
add
cmp
cld
sub
sub
sub
xchg
adc
jle
scas
adc
popf
ss
lock
add
push
push
ss
adcl
xchg
mov
push
test
aaa
out
push
shlb
lret
push
cmc
aaa
lods
push
push
cmp
pop
add
sub
add
sub
add
sub
add
sub
add
add
pop
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
pop
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
pop
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
pop
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
pop
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
pop
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
pop
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
pop
add
sub
add
sub
add
sub
add
sub
add
sub
outsl
xchg
and
call
jge
jno
mov
mov
leave
push
popa
leave
pop
xsaves
pop
mov
inc
cwtl
cmp
xchg
popl
xor
adc
sbb
ja
vminsd
mov
sbb
cmpsl
sub
pushf
data16
push
adc
imul
adc
and
scas
jecxz
aam
pop
sub
jp
sub
mov
les
lods
pop
rcrl
js
cmpb
daa
xor
js
jnp
call
xor
pop
and
adc
adc
sbb
loope
es
aam
in
or
ja
cli
xchg
or
ret
stos
sarb
or
lret
jne
adc
sub
or
mov
ret
mov
push
or
sub
cli
pop
mov
cmp
push
loop
xlat
lds
popa
add
xor
call
lret
cwtl
scas
lcall
scas
lods
adc
or
cld
sbb
sbb
je
mov
movsl
andb
sbb
mov
add
mov
cltd
imul
sbb
lea
and
imul
sub
mov
sahf
and
mov
adc
xchg
pop
xchg
push
xchg
jb
xor
mov
in
and
iret
sub
add
scas
jo
mov
cwtl
lods
pushf
jmp
je
xor
daa
je
in
test
jne
iret
iret
popa
sbb
das
dec
sarb
arpl
orl
mov
imul
cmp
pop
xchg
or
fadds
mov
sub
xchg
inc
mov
inc
out
inc
lahf
mov
xchg
scas
sub
mov
ds
inc
inc
adc
inc
add
xchg
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
inc
add
xchg
inc
add
inc
add
xchg
inc
add
inc
add
xchg
inc
add
inc
add
xchg
inc
add
inc
add
xchg
inc
add
inc
add
xchg
inc
add
inc
add
xchg
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
xchg
inc
add
inc
add
add
xchg
inc
add
xchg
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
inc
add
xchg
inc
add
inc
add
xchg
inc
add
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
inc
add
xchg
inc
add
inc
add
xchg
inc
add
inc
add
xchg
inc
add
xchg
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
xchg
inc
add
add
inc
add
add
inc
add
add
inc
add
xchg
inc
add
add
inc
add
add
xchg
inc
add
xchg
inc
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
cwtl
inc
add
inc
add
cwtl
inc
add
inc
add
cwtl
inc
add
inc
add
cwtl
inc
add
cwtl
inc
add
cwtl
inc
add
inc
add
cwtl
inc
add
inc
add
cwtl
inc
add
inc
add
cwtl
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
add
inc
add
cwtl
inc
add
cwtl
inc
add
cwtl
inc
add
cwtl
inc
add
cwtl
inc
add
cwtl
inc
add
cwtl
inc
add
cwtl
inc
add
cwtl
inc
add
cwtl
inc
add
cwtl
inc
add
cwtl
inc
add
cwtl
inc
add
cwtl
inc
add
cwtl
inc
add
cwtl
inc
add
cwtl
inc
add
cwtl
inc
add
cwtl
inc
add
cwtl
inc
add
cwtl
inc
add
cwtl
inc
add
cwtl
inc
add
cwtl
inc
add
cltd
inc
add
inc
add
cltd
inc
add
inc
add
cltd
inc
add
cwtl
inc
add
inc
add
cltd
inc
add
add
inc
add
cltd
inc
add
inc
add
cltd
inc
add
inc
add
cltd
inc
add
cltd
inc
add
inc
add
cltd
inc
add
inc
add
cwtl
inc
add
inc
add
add
inc
add
add
inc
add
add
cwtl
inc
add
inc
add
cwtl
inc
add
cwtl
inc
add
add
inc
add
jp
inc
bound
data16
jb
outsb
jb
ss
add
add
add
imul
add
add
add
sbb
add
call
xchg
add
and
add
add
add
test
add
nop
xchg
add
nop
xchg
add
les
add
cwtl
xchg
add
dec
scas
add
or
add
insb
cltd
add
test
add
pushf
cltd
add
stos
cltd
add
mov
cltd
add
fcomps
add
add
add
and
add
dec
lcall
jbe
add
test
add
sahf
lcall
mov
lcall
hlt
lcall
and
add
ss
add
dec
fwait
add
pop
fwait
add
outsb
fwait
add
sbbb
add
add
in
add
hlt
fwait
add
or
add
pushf
add
inc
pushf
add
push
pushf
add
push
pushf
add
xchg
pushf
add
mov
add
lret
add
pushf
add
cld
pushf
add
push
popf
add
sbb
add
ss
add
dec
popf
add
fs
add
jle
add
mov
add
mov
add
int3
popf
add
ficompl
add
or
add
xor
add
pop
sahf
add
jo
add
jl
add
xchg
sahf
add
mov
add
les
add
loopne
add
negb
add
sbb
add
sub
add
pop
lahf
add
push
add
jbe
add
mov
add
test
add
mov
add
rcrb
add
lahf
add
add
add
adc
add
and
add
mov
add
data16
add
mov
add
cmpsb
mov
add
ret
add
mov
add
mulb
add
sbb
add
cmp
add
dec
mov
add
outsb
mov
add
mov
add
lods
mov
add
shlb
add
mov
add
mov
add
bound
add
andb
add
mov
add
ljmp
add
mov
add
cmp
add
push
mov
add
xchg
mov
add
mov
mov
add
lock
add
push
movsb
add
sbb
add
movsb
add
cmp
add
push
movsb
add
data16
add
js
add
mov
add
add
fsubs
add
movsb
add
adc
add
xor
add
dec
movsl
add
pop
movsl
add
insb
movsl
add
andb
add
add
int3
movsl
add
fisubl
add
cld
movsl
add
push
cmpsb
add
cmpsb
add
cmpsb
add
dec
cmpsb
add
pop
cmpsb
add
outsb
cmpsb
add
mov
add
lods
cmpsb
add
mov
cmpsb
add
in
add
cli
cmpsb
add
push
cmpsl
add
and
add
dec
cmpsl
add
bound
add
test
add
add
add
mov
add
add
add
shlb
add
mulb
add
and
add
inc
test
add
add
fs
add
add
mov
add
mov
test
add
test
add
test
add
add
and
add
ss
add
push
test
add
scas
test
add
aam
add
call
test
add
sub
add
dec
stos
add
jb
add
mov
add
stos
stos
add
mov
stos
add
out
add
cli
stos
add
push
stos
add
sub
add
dec
stos
add
pop
stos
add
jb
add
xchg
add
mov
stos
add
fisubrs
add
or
add
lods
add
push
lods
add
jo
add
xchg
add
lods
add
lods
add
out
lods
add
lods
add
push
lods
add
xor
add
push
lods
add
lods
add
js
add
mov
add
mov
add
int3
lods
add
fsubrl
add
push
scas
add
ss
add
push
scas
add
insb
scas
add
jle
add
xchg
scas
add
scas
scas
add
mov
scas
add
call
scas
add
adc
add
cmp
add
add
add
insb
cltd
add
test
add
pushf
cltd
add
stos
cltd
add
mov
cltd
add
fcomps
add
add
add
and
add
dec
lcall
jbe
add
test
add
sahf
lcall
mov
lcall
hlt
lcall
and
add
ss
add
dec
fwait
add
pop
fwait
add
outsb
fwait
add
sbbb
add
add
in
add
hlt
fwait
add
or
add
pushf
add
inc
pushf
add
push
pushf
add
push
pushf
add
xchg
pushf
add
mov
add
lret
add
pushf
add
cld
pushf
add
push
popf
add
sbb
add
ss
add
dec
popf
add
fs
add
jle
add
mov
add
mov
add
int3
popf
add
ficompl
add
or
add
xor
add
pop
sahf
add
jo
add
jl
add
xchg
sahf
add
mov
add
les
add
loopne
add
negb
add
sbb
add
sub
add
pop
lahf
add
push
add
jbe
add
mov
add
test
add
mov
add
rcrb
add
lahf
add
add
add
adc
add
and
add
mov
add
data16
add
mov
add
cmpsb
mov
add
ret
add
mov
add
mulb
add
sbb
add
cmp
add
dec
mov
add
outsb
mov
add
mov
add
lods
mov
add
shlb
add
mov
add
mov
add
bound
add
andb
add
mov
add
ljmp
add
mov
add
cmp
add
push
mov
add
xchg
mov
add
mov
mov
add
lock
add
push
movsb
add
sbb
add
movsb
add
cmp
add
push
movsb
add
data16
add
js
add
mov
add
add
fsubs
add
movsb
add
adc
add
xor
add
dec
movsl
add
pop
movsl
add
insb
movsl
add
andb
add
add
int3
movsl
add
fisubl
add
cld
movsl
add
push
cmpsb
add
cmpsb
add
cmpsb
add
dec
cmpsb
add
pop
cmpsb
add
outsb
cmpsb
add
mov
add
lods
cmpsb
add
mov
cmpsb
add
in
add
cli
cmpsb
add
push
cmpsl
add
and
add
dec
cmpsl
add
bound
add
test
add
add
add
mov
add
add
add
shlb
add
mulb
add
and
add
inc
test
add
add
fs
add
add
mov
add
mov
test
add
test
add
test
add
add
and
add
ss
add
push
test
add
scas
test
add
aam
add
call
test
add
sub
add
dec
stos
add
jb
add
mov
add
stos
stos
add
mov
stos
add
out
add
cli
stos
add
push
stos
add
sub
add
dec
stos
add
pop
stos
add
jb
add
xchg
add
mov
stos
add
fisubrs
add
or
add
lods
add
push
lods
add
jo
add
xchg
add
lods
add
lods
add
out
lods
add
lods
add
push
lods
add
xor
add
push
lods
add
lods
add
js
add
mov
add
mov
add
int3
lods
add
fsubrl
add
push
scas
add
ss
add
push
scas
add
insb
scas
add
jle
add
xchg
scas
add
scas
scas
add
mov
scas
add
call
scas
add
adc
add
cmp
add
add
add
addb
gs
imul
imul
jns
add
mov
insb
jae
jb
outsb
inc
add
scas
add
jae
jb
jo
inc
add
js
inc
jb
popa
je
inc
imul
imul
insb
insb
outsl
arpl
add
add
imul
outsl
jne
arpl
add
inc
insb
outsl
jae
dec
popa
outsb
fs
add
add
gs
outsl
insb
jne
gs
outsl
jne
je
outsl
imul
add
imul
gs
arpl
add
cmp
inc
imul
insl
gs
outsl
jne
je
outsl
imul
add
gs
fs
outsl
outsb
jae
insb
gs
jne
jo
je
push
je
jb
add
add
jbe
inc
imul
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
pop
add
je
push
inc
outsl
outsb
je
js
add
sbb
inc
popa
arpl
jo
jb
je
add
jb
insl
jo
lret
add
inc
popa
fs
jb
je
push
je
add
add
jne
push
dec
dec
popa
outsb
addr16
addr16
add
popf
add
push
add
mov
inc
bound
inc
jb
popa
imul
imul
jb
popa
je
inc
outsl
outsb
jae
insb
gs
arpl
outsb
inc
jne
data16
sahf
add
je
outsl
insl
insl
dec
popa
jae
add
inc
gs
imul
popa
je
add
xchg
add
jb
je
push
jb
jbe
je
push
jb
imul
imul
add
fs
imul
js
add
aaa
add
jb
outsb
jae
arpl
insl
gs
imul
gs
outsl
insb
jne
gs
popa
bound
push
add
bound
inc
imul
push
add
jne
jb
outsb
je
push
add
addl
outsl
outsb
jae
insb
gs
insb
imul
outsb
addr16
push
add
ljmp
gs
jne
arpl
popa
insl
gs
add
nop
add
jb
je
push
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
push
imul
jb
je
arpl
pop
add
je
push
dec
outsb
outsw
inc
js
add
daa
add
outsb
fs
imul
jne
gs
add
push
add
fs
xor
inc
imul
inc
add
jne
push
inc
jne
data16
add
mov
inc
gs
imul
push
jo
arpl
add
inc
jb
gs
outsl
outsb
jae
insb
add
add
jo
jae
jb
push
popa
insb
push
popa
addr16
add
add
je
jb
imul
je
outsl
outsb
push
add
jmp
dec
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
les
push
gs
jb
je
arpl
push
arpl
outsb
push
jo
outsb
inc
outsl
jne
je
cmp
dec
jo
outsb
push
popa
imul
insl
gs
add
or
gs
push
dec
fs
insb
push
jb
arpl
jae
jb
xchg
add
outsl
bound
dec
gs
outsl
jb
push
je
je
jae
js
add
inc
outsl
jb
popa
je
gs
popa
addr16
add
daa
add
outsb
inc
jbe
outsb
je
add
bound
inc
gs
push
push
jb
outsl
jb
je
inc
outsl
outsl
jae
add
inc
add
je
jns
je
insl
inc
gs
jne
je
inc
dec
inc
add
jge
inc
gs
outsl
insb
jne
gs
popa
je
dec
popa
insl
gs
add
pop
add
gs
push
inc
js
arpl
imul
add
jb
push
inc
add
insb
popa
arpl
imul
inc
jb
popa
je
inc
imul
jns
add
addb
gs
outsl
outsb
jae
insb
gs
insb
imul
outsb
addr16
inc
add
aaa
add
outsb
push
push
add
rolb
inc
outsl
jae
popa
je
push
imul
insb
gs
imul
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
gs
jne
jb
outsb
je
jb
arpl
jae
das
add
je
jb
imul
inc
add
cli
add
je
jb
arpl
jae
outsl
jb
imul
imul
inc
gs
jb
imul
push
add
imul
imul
imul
add
jb
je
inc
imul
je
outsl
insb
jne
gs
outsb
outsw
jb
popa
je
outsl
outsb
push
add
add
outsb
fs
imul
jne
gs
outsl
jne
je
outsl
imul
add
je
outsl
outsb
jae
insb
gs
outsl
fs
lahf
add
insb
arpl
add
inc
gs
popa
jo
push
outsl
jae
je
outsl
outsb
add
inc
outsl
outsb
je
outsb
jne
inc
bound
inc
jbe
outsb
je
add
inc
gs
jns
je
insl
dec
outsb
outsw
add
inc
jb
popa
je
inc
imul
outsb
addr16
add
adc
inc
gs
inc
dec
inc
push
add
test
inc
gs
jne
jb
outsb
je
imul
jns
add
jmp
insl
push
gs
jne
arpl
popa
outsb
addr16
addr16
add
mov
inc
jb
jbe
push
jns
gs
add
add
je
jbe
outsb
je
add
imul
jae
insb
gs
outsb
jo
je
add
gs
add
testb
gs
jb
outsl
jb
je
inc
insb
popa
jae
add
xor
push
insb
jae
gs
popa
insb
jne
add
jae
imul
add
outsb
fs
gs
inc
push
dec
outsl
je
imul
outsl
outsb
add
xor
inc
gs
jb
imul
imul
push
gs
outsl
arpl
gs
outsb
outsw
inc
add
imul
outsl
insl
insl
inc
outsl
outsb
imul
dec
gs
jo
xor
js
add
mov
gs
inc
je
insl
add
adc
dec
outsl
jbe
inc
imul
add
popa
insb
dec
popa
outsb
fs
gs
add
je
jb
arpl
jae
jb
outsl
jb
je
inc
outsl
outsl
jae
add
push
outsb
jb
imul
imul
push
gs
popa
outsb
addr16
addr16
popa
insl
gs
add
and
insb
gs
cmp
inc
imul
jne
arpl
add
add
je
imul
cltd
add
popa
jo
xor
jb
je
lret
add
je
imul
bound
gs
js
add
push
add
arpl
jo
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
jge
push
gs
popa
jae
inc
jb
outsl
jb
js
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
ja
fs
loopne
inc
outsb
jne
inc
imul
gs
imul
sub
inc
push
ja
jb
jne
push
add
or
inc
gs
insb
popa
jae
push
outsl
jb
add
or
inc
insb
imul
je
xor
inc
push
gs
js
add
push
popa
jb
outsb
je
dec
add
je
outsb
jne
je
imul
add
je
push
imul
cmp
inc
push
jo
jb
jne
push
add
add
push
imul
outsl
insl
push
outsl
imul
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
inc
add
push
push
imul
daa
add
je
jne
push
gs
jne
arpl
add
add
je
insb
imul
push
gs
outsb
arpl
jne
bound
add
add
inc
arpl
popa
je
dec
gs
outsl
popa
jb
dec
popa
jns
jne
add
mov
push
imul
outsb
je
js
dec
gs
jo
add
rolb
inc
outsb
popa
bound
arpl
insb
insb
inc
popa
jb
sub
inc
gs
arpl
dec
outsb
outsw
add
add
jne
push
jb
jo
inc
js
add
inc
add
je
outsb
jne
je
insl
inc
outsl
jne
je
add
dec
gs
popa
addr16
jne
jne
add
push
imul
outsb
outsl
ja
gs
popa
addr16
add
jno
inc
gs
popa
bound
fs
gs
inc
js
outsb
je
add
je
push
gs
gs
push
popa
insb
insb
jo
jo
jb
add
push
gs
insb
popa
jae
dec
outsl
outsb
addr16
add
push
gs
outsl
jbe
dec
outsb
jne
add
add
je
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
add
je
insb
imul
inc
outsl
jb
popa
je
popa
insl
gs
add
gs
outsb
jne
je
insl
dec
outsb
outsw
inc
add
popf
add
je
push
inc
gs
je
jo
add
add
fs
outsb
jne
stos
add
jbe
insb
imul
add
push
arpl
insb
insb
push
imul
filds
dec
outsl
popa
fs
outsb
jne
outsb
imul
pop
add
jae
popa
fs
push
imul
jg
inc
gs
imul
add
add
push
imul
imul
add
fs
arpl
inc
add
add
popa
bound
outsb
jne
je
insl
add
dec
add
je
gs
popa
addr16
add
add
arpl
outsl
jo
jo
outsb
jne
add
add
push
arpl
jo
jns
loop
inc
outsb
jne
inc
imul
gs
imul
add
arpl
push
outsb
fs
gs
popa
addr16
add
mov
ja
imul
jns
arpl
and
inc
gs
insb
addr16
je
insl
push
gs
push
add
inc
jb
popa
je
inc
imul
jb
insl
push
add
jo
push
gs
jne
jae
jb
pop
add
gs
je
inc
imul
imul
jb
insl
inc
add
hlt
add
dec
gs
arpl
inc
add
sbb
push
popa
imul
je
jo
add
inc
gs
outsl
outsb
imul
inc
add
add
imul
imul
ja
add
add
jo
outsb
fs
outsb
jne
add
push
jo
popa
dec
jne
gs
arpl
jg
inc
fs
insl
jo
jb
outsl
outsb
popa
je
inc
insb
imul
add
je
imul
js
inc
add
jmp
inc
outsb
jne
push
imul
and
push
outsl
jae
push
push
dec
gs
popa
addr16
add
sahf
add
jo
jb
outsl
outsb
popa
je
inc
fs
insb
imul
outsl
ja
add
push
gs
outsl
arpl
add
mov
arpl
imul
outsb
push
imul
outsl
outsl
imul
add
imul
inc
add
inc
jb
insl
gs
jb
arpl
mov
inc
fs
outsb
popa
arpl
jae
inc
popa
je
add
add
outsb
imul
push
arpl
add
jb
outsb
addr16
arpl
imul
ja
add
or
inc
gs
insb
popa
jae
dec
popa
insl
gs
add
push
imul
outsb
addr16
add
out
add
imul
jae
js
jae
push
gs
bound
inc
jb
outsl
jb
gs
insb
add
loopne
push
outsb
jb
imul
jbe
arpl
outsl
je
imul
outsl
outsb
add
aad
inc
outsb
fs
popa
imul
dec
gs
push
outsl
inc
push
data16
add
sahf
add
je
imul
add
outsb
fs
gs
popa
addr16
popa
insb
insb
bound
imul
test
inc
fs
jne
jb
inc
outsl
outsb
jbe
outsb
outsw
add
add
outsb
fs
outsl
je
data16
gs
popa
addr16
add
add
je
push
dec
push
push
dec
outsb
outsw
add
jp
inc
fs
jb
gs
popa
je
dec
popa
outsb
fs
add
push
imul
outsb
outsl
ja
gs
popa
addr16
add
sbb
inc
popa
insb
insb
dec
jae
inc
imul
jae
inc
gs
push
inc
gs
je
jo
add
add
je
insb
je
popa
bound
outsw
inc
add
pushf
add
je
outsl
jns
jne
jae
jb
dec
add
je
outsb
jne
je
imul
add
push
imul
jae
bound
push
push
inc
push
xor
cs
insb
add
pop
add
addr16
jo
outsb
dec
gs
js
add
push
inc
push
dec
xor
cs
insb
add
fildl
dec
insb
gs
jb
popa
je
add
inc
outsl
dec
jae
popa
outsb
fs
gs
outsl
outsb
outsb
arpl
add
inc
add
inc
gs
jbe
xor
dec
outsb
outsw
add
add
inc
outsl
jae
popa
je
push
imul
insb
gs
imul
inc
inc
inc
inc
dec
pop
push
jae
jb
outsb
insl
popa
jb
push
clc
add
gs
outsl
popa
add
outsl
jo
push
jb
js
add
add
inc
gs
popa
insb
insb
gs
dec
inc
add
dec
add
imul
add
add
gs
jb
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
pushf
add
dec
push
dec
inc
push
pop
push
jae
jb
popa
jb
push
add
inc
dec
dec
pop
push
jae
jb
outsb
insl
popa
jb
push
add
insl
inc
push
insb
push
gs
push
gs
insb
je
stc
add
gs
outsl
popa
fs
jb
insl
push
je
gs
insl
add
add
jbe
imul
popa
addr16
jb
jo
add
inc
inc
dec
pop
push
jae
jb
popa
jb
push
add
je
jne
outsb
imul
arpl
bound
or
inc
outsl
inc
jne
insb
fs
gs
imul
inc
insl
je
fs
outsl
push
jb
jo
je
dec
popa
insl
add
adc
inc
outsl
inc
imul
popa
insb
insb
inc
popa
outsb
arpl
insb
popa
je
outsl
outsb
add
inc
outsl
push
imul
jae
popa
addr16
imul
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
push
add
filds
dec
insb
gs
jb
popa
je
inc
jb
insl
inc
popa
je
add
popa
je
dec
je
insl
dec
outsl
outsb
imul
dec
insb
gs
jne
insb
fs
gs
imul
push
dec
inc
pop
push
jae
jb
popa
jb
push
push
add
push
gs
arpl
popa
je
dec
bound
arpl
cld
add
gs
outsl
je
dec
bound
arpl
jae
bound
add
add
dec
push
inc
dec
push
dec
inc
push
pop
push
jae
jb
imul
insb
gs
outsl
outsb
jbe
jb
dec
push
je
jb
addr16
outsl
dec
dec
inc
push
push
push
inc
inc
dec
inc
js
das
add
addr16
gs
inc
imul
jns
gs
outsb
dec
dec
outsl
arpl
jns
gs
add
popa
je
inc
inc
dec
dec
push
gs
imul
add
gs
jae
jne
outsb
imul
inc
dec
push
dec
inc
inc
jb
insl
push
jb
addr16
inc
add
addr16
inc
inc
jb
insl
inc
dec
push
dec
inc
add
push
push
dec
pop
push
jae
jb
popa
jb
push
dec
add
imul
addr16
je
gs
insl
add
add
addr16
jb
popa
je
inc
outsl
arpl
insb
add
and
inc
outsl
inc
gs
jo
jb
insl
outsb
je
inc
add
aas
add
inc
outsl
outsb
jbe
jb
inc
jbe
xor
je
inc
jbe
xor
add
inc
outsl
inc
popa
outsb
arpl
inc
popa
insb
insb
add
sub
push
je
inc
jb
popa
je
push
jb
jo
je
add
imul
jae
inc
popa
outsb
arpl
add
or
dec
jo
outsb
dec
jb
jb
popa
je
push
je
gs
insl
add
sbb
push
gs
fs
je
imul
popa
insl
add
faddl
dec
insb
gs
jb
popa
je
inc
gs
jne
je
popa
outsb
fs
gs
rolb
push
inc
dec
inc
push
push
inc
pop
push
jae
jb
popa
jb
push
push
add
push
imul
inc
insb
jae
add
pop
push
jae
jb
popa
jb
push
add
je
inc
insb
outsl
bound
inc
jb
insl
dec
dec
outsl
arpl
jns
gs
add
inc
outsl
dec
outsl
popa
fs
imul
aas
add
dec
outsb
imul
push
arpl
imul
dec
inc
push
inc
inc
dec
dec
inc
push
dec
inc
push
pop
push
jae
jb
popa
jb
push
add
dec
push
inc
dec
push
dec
inc
push
pop
push
jae
jb
jb
add
inc
dec
dec
push
inc
dec
push
dec
inc
push
pop
push
jae
jb
outsb
insl
popa
jb
push
push
add
inc
imul
arpl
push
arpl
xor
inc
outsl
inc
gs
popa
insb
insb
outsl
arpl
pusha
add
push
gs
imul
insb
insb
outsl
arpl
jns
pop
add
push
gs
gs
jae
push
gs
gs
jb
arpl
jae
add
dec
inc
inc
dec
pop
push
jae
jb
jb
add
testb
insb
gs
jae
jne
jb
outsb
je
insb
imul
add
outsl
dec
jae
insb
xor
popa
jae
add
add
addr16
jb
popa
je
inc
outsl
arpl
insb
gs
outsb
dec
dec
outsl
arpl
jns
gs
add
inc
outsl
dec
insl
jo
jb
outsl
outsb
popa
je
inc
insb
imul
dec
insb
gs
outsl
outsb
jbe
jb
dec
dec
inc
push
push
push
inc
inc
dec
push
outsl
dec
push
je
jb
addr16
js
jecxz
dec
insb
gs
jb
popa
je
dec
imul
dec
push
dec
inc
inc
jb
insl
push
je
imul
outsl
inc
gs
je
dec
popa
jb
push
add
dec
dec
pop
push
jae
jb
popa
jb
push
add
gs
gs
arpl
dec
inc
imul
insb
gs
gs
outsl
outsb
je
imul
arpl
add
inc
imul
outsl
ja
xor
inc
outsl
inc
gs
outsb
je
jb
popa
arpl
outsb
fs
gs
gs
jae
push
je
gs
insl
add
dec
add
push
jne
jb
inc
jne
push
arpl
imul
imul
push
push
inc
dec
inc
inc
dec
push
dec
pop
push
jae
jb
popa
jb
push
add
addr16
gs
inc
imul
jns
gs
outsb
inc
imul
inc
push
push
push
dec
pop
push
jae
jb
outsb
insl
popa
jb
push
mov
dec
dec
inc
dec
dec
pop
push
jae
jb
imul
inc
outsl
push
jne
jb
push
gs
gs
jae
dec
bound
arpl
test
inc
jb
popa
je
push
je
gs
insl
dec
outsb
dec
inc
insb
outsl
bound
add
inc
insb
popa
jae
inc
imul
jb
popa
je
inc
imul
gs
out
dec
insb
gs
jb
popa
je
dec
imul
insb
add
push
je
gs
jbe
xor
dec
outsb
outsw
add
jb
gs
outsb
jne
gs
imul
jae
insb
add
push
outsb
insb
outsl
popa
imul
add
inc
outsl
push
gs
gs
jae
dec
popa
jb
push
je
add
cmp
push
je
imul
dec
dec
inc
add
xor
cs
insb
add
add
lds
xor
add
add
add
add
add
addb
add
lds
xor
add
add
add
add
add
js
add
mov
or
add
add
cmpb
add
lds
xor
add
add
add
add
add
add
add
sbb
add
lds
xor
add
add
add
add
add
add
mov
add
add
add
sub
dec
add
add
add
add
add
add
mov
mov
add
lds
xor
add
add
add
add
add
add
add
add
mov
add
lds
xor
add
add
add
add
add
add
add
add
add
enter
add
incl
add
add
add
enter
adc
add
add
loop
add
add
add
inc
add
jae
arpl
and
imul
add
outsb
add
pop
add
add
add
or
nop
add
add
push
add
add
push
add
add
add
add
add
add
add
add
add
add
add
incl
add
jb
je
pop
add
add
add
add
push
test
add
add
add
add
incl
add
arpl
add
add
add
add
push
pop
add
add
add
add
incl
add
imul
pop
add
add
add
add
and
add
add
add
add
add
test
add
add
add
xor
push
add
add
addb
add
data16
add
push
add
add
add
add
add
push
pop
add
add
incl
add
add
add
add
add
add
push
pop
add
add
push
add
add
test
add
add
add
popf
add
add
add
addb
add
jb
jb
add
je
and
add
jae
arpl
and
je
jns
jo
add
add
xor
add
add
add
adc
push
pop
add
aam
add
incl
add
add
push
pop
add
aam
or
incl
add
add
je
and
data16
insb
add
and
outsb
add
insl
add
cmp
pop
add
add
add
add
rolb
add
add
addl
add
add
add
adc
push
add
add
addb
add
add
add
add
add
push
pop
add
aam
or
fs
addb
add
insl
add
jb
add
jae
and
add
je
popa
add
xor
add
add
add
push
pop
add
add
add
addb
add
insb
add
je
add
add
insl
add
add
and
outsl
add
and
add
jb
outsl
add
pop
add
add
add
add
push
pop
add
add
add
addb
add
add
add
insl
add
add
and
je
outsl
add
add
jae
add
and
imul
add
jae
and
insb
add
jae
je
pop
add
add
add
adc
push
pop
add
add
add
add
incl
add
add
push
pop
add
add
add
incl
add
jae
ja
outsl
add
add
add
outsl
add
add
je
add
add
add
add
add
addr16
addl
add
add
add
add
or
incl
add
data16
jb
insl
add
add
popa
add
jae
ja
outsl
add
add
xor
add
add
add
add
add
add
add
incl
add
add
incl
add
add
add
dec
or
orb
add
add
push
add
add
add
add
push
add
dec
add
inc
add
push
add
push
add
add
push
add
push
add
push
add
dec
add
inc
add
add
xor
xor
add
add
add
and
push
add
add
add
add
add
add
add
add
add
add
add
push
add
jae
dec
add
jae
je
push
add
add
xor
xor
adcb
mov
inc
add
add
add
insl
add
arpl
je
insb
add
pop
add
jb
outsl
add
jb
add
jae
xor
xor
add
add
add
add
add
add
incl
add
add
push
or
rolb
add
add
add
incl
add
data16
jb
and
jae
je
popa
add
add
cmp
and
pop
add
add
add
add
add
or
inc
add
jae
arpl
je
insb
add
pop
add
jb
outsl
add
jb
add
jae
xor
xor
add
pop
adc
push
pop
add
add
add
add
incl
add
adc
push
pop
add
inc
add
add
add
incl
add
add
push
pop
add
dec
add
addb
add
add
jae
add
add
add
add
add
add
xor
add
add
push
sbb
loop
xor
push
add
add
add
incl
add
arpl
add
add
add
add
add
add
add
insl
add
arpl
je
insb
add
pop
add
jb
outsl
add
jb
add
jae
xor
xor
add
add
add
add
add
add
incl
add
add
push
or
nop
add
add
addb
add
je
popa
add
add
push
add
pop
add
add
add
add
push
or
cmpsl
add
add
addb
add
jb
jb
add
je
and
outsl
add
add
popa
add
add
outsb
add
push
add
add
xor
add
add
add
push
pop
add
add
add
add
add
incl
add
jae
add
add
outsb
add
add
imul
jae
push
add
add
xor
add
add
add
add
add
incl
add
add
add
add
or
add
add
add
add
add
add
add
add
and
push
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
inc
add
inc
add
pop
add
push
add
pop
add
push
add
add
push
add
push
add
add
xor
xor
xor
add
add
add
add
add
incl
add
dec
add
inc
add
dec
add
dec
add
push
add
add
push
add
push
add
push
add
add
dec
add
dec
add
add
xor
xor
aaa
add
add
push
pop
add
add
add
add
add
incl
add
arpl
imul
add
outsl
add
and
jne
jo
add
je
add
add
outsl
add
je
push
add
xor
add
add
add
add
push
pop
add
add
add
add
add
incl
add
pop
add
dec
add
inc
add
pop
add
dec
add
push
add
inc
add
inc
add
inc
add
dec
add
xor
xor
xor
xor
add
add
add
push
pop
add
add
add
add
add
incl
add
add
add
add
add
add
push
sbb
push
add
add
add
incl
add
add
push
pop
add
xor
or
pop
add
addb
add
add
dec
add
pop
add
inc
add
inc
add
dec
add
push
add
add
inc
add
inc
add
inc
add
xor
xor
xor
xor
add
and
add
addl
add
incl
add
add
incl
add
add
add
add
or
add
add
add
add
add
add
add
add
and
push
add
add
add
add
add
add
add
add
add
add
add
add
or
add
incl
add
and
jo
jb
outsl
add
jns
and
jae
add
jbe
add
pop
add
add
add
push
sbb
sbb
add
add
or
add
incl
add
je
cmp
pop
add
add
add
add
push
sbb
sub
and
or
add
incl
add
je
cmp
pop
add
add
addb
push
inc
add
add
or
add
incl
add
add
add
add
add
or
add
incl
add
add
push
sbb
inc
add
or
add
incl
add
bound
insb
add
and
popa
add
je
push
add
add
popa
add
add
add
add
push
daa
add
add
add
or
add
incl
add
jb
and
outsb
add
insl
add
cmp
pop
add
add
add
add
add
dec
add
add
or
add
incl
add
add
push
daa
add
add
add
or
add
incl
add
jae
ja
outsl
add
add
add
xor
add
add
add
add
add
or
add
incl
add
add
incl
add
add
add
add
or
add
add
add
add
add
add
add
add
and
push
add
add
add
add
add
add
add
add
add
add
add
add
or
add
incl
add
popa
add
arpl
add
add
insl
add
insb
add
je
imul
pop
add
add
add
add
add
push
pop
add
add
or
add
incl
add
push
add
add
push
pop
add
add
or
add
incl
add
add
add
arpl
add
add
add
add
or
add
incl
add
jne
push
add
dec
add
add
add
push
pop
add
xchg
add
add
or
add
incl
add
add
dec
add
arpl
imul
add
add
push
pop
add
xchg
add
add
or
add
incl
add
add
add
inc
add
add
add
push
pop
add
fiadds
sub
or
add
incl
add
add
add
add
add
push
pop
add
add
add
add
incl
add
add
test
add
push
xor
pusha
xor
jae
jge
xchg
nop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
insb
xor
mov
xchg
xor
xor
xor
outsl
xor
mov
mov
aaa
adc
push
aaa
sbb
and
sub
cs
xor
cmp
inc
aaa
inc
aaa
dec
aaa
push
aaa
pop
aaa
pop
aaa
fs
push
jo
jbe
jl
xorb
aaa
mov
xchg
aaa
lcall
aaa
mov
mov
aaa
lret
aaa
aaa
fdivl
loop
call
aaa
cli
aaa
add
push
cmp
adc
sbb
push
cmp
sub
xor
cmp
inc
cmp
dec
cmp
cmp
data16
cmp
jle
test
mov
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
and
cmp
xor
cmp
cmp
cmp
push
cmp
cmp
outsb
cmp
cmp
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
push
cmp
and
sub
cmp
cmp
inc
cmp
dec
cmp
pop
cmp
cmp
jo
jbe
jl
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
sbb
push
cmp
sub
xor
cmp
inc
cmp
dec
cmp
cmp
cmp
cmp
jle
test
mov
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
sub
cmp
dec
cmp
pop
cmp
jo
jbe
jl
cmpb
addb
add
add
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
adc
sbb
and
sub
xor
cmp
inc
xor
dec
xor
pop
xor
fs
jo
je
js
jl
xorb
xor
cwtl
xor
movsb
xor
mov
mov
mov
xor
int3
xor
fdivs
in
call
xor
cld
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
js
jl
xorb
mov
mov
nop
ss
ss
ss
mov
lods
add
add
adc
and
