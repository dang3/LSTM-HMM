xor
add
pop
add
pop
add
pop
add
pop
add
inc
pop
add
inc
pop
add
inc
pop
add
inc
pop
add
inc
pop
add
add
add
pop
add
inc
pop
add
add
add
pop
add
inc
pop
add
add
pop
add
pop
add
inc
pop
add
inc
pop
add
inc
pop
add
inc
pop
add
add
add
inc
pop
add
pop
add
add
add
pop
add
pop
add
pop
add
pop
add
pop
add
add
lcall
add
add
add
push
mov
push
ds
mov
cs
cld
repnz
mov
push
ds
mov
aam
inc
pop
inc
mov
into
daa
inc
sbb
sbb
inc
sbb
push
rolb
sub
sbb
xor
sbb
inc
sub
scas
into
into
into
into
into
faddl
lahf
cs
cs
dec
aas
lcall
cs
adc
dec
xor
repz
dec
lods
inc
sub
inc
mov
je
inc
mov
leave
xor
cs
cmp
cs
enter
pop
aad
das
add
sbb
aad
fidivs
ljmp
cmpsb
cmp
dec
inc
sub
dec
cs
stos
xor
cs
xor
xchg
inc
sub
test
out
fwait
lods
inc
or
sar
inc
lret
je
xor
dec
push
enter
xor
cs
mov
icebp
xor
sbb
mov
inc
or
jmp
cs
mov
and
inc
ret
adc
and
xor
xor
add
les
cs
in
loop
loop
sub
mov
xchg
cs
mov
cs
xor
cs
fisubs
xor
daa
test
out
sbb
xor
xor
xchg
daa
addl
xor
cs
and
cs
sbb
push
fs
idiv
or
cs
sbb
push
inc
inc
sbb
inc
enter
iret
inc
enter
xlat
inc
enter
filds
out
in
loopne
incb
cs
ds
rcr
cmpsb
cmp
mov
xor
xor
inc
or
ljmp
push
inc
mov
mov
xor
roll
ljmp
inc
or
xor
xor
sbb
mov
mov
xor
loopne,pt
ds
cs
cs
movl
xor
cs
enter
scas
inc
or
cs
mov
xor
divl
xor
xor
enter
adc
xor
inc
sub
scas
scas
add
out
xor
cs
or
cs
mov
inc
enter
out
and
adc
xor
or
xor
lahf
lea
cs
out
mov
mov
add
jns
cs
call
mov
lret
lahf
mov
cs
mov
clc
out
add
ljmp
or
lcall
xor
xor
sub
sar
lret
add
inc
enter
xor
daa
inc
mov
mov
sbb
fdivrs
andl
inc
sub
dec
fwait
shld
dec
xor
sub
cs
inc
fsubrs
sbb
test
pop
inc
xchg
inc
fadds
sub
mov
mov
cs
xor
adc
mov
cmc
fiaddl
pop
movsb
sbb
testl
xchg
out
inc
sbb
ljmp
scas
mov
ss
pushl
add
xor
mov
or
test
xor
adc
inc
jbe
mov
jbe
movsb
jbe
adc
inc
push
sub
cmc
ds
jbe
inc
lds
cs
inc
dec
ret
mov
pop
inc
loope
cs
mov
cmp
xor
cs
dec
push
jbe
mov
add
add
outsb
test
cli
sbb
xor
xor
jbe
mov
inc
pop
rolb
inc
mov
mov
into
ss
inc
inc
into
ds
inc
inc
shlb
sub
sub
dec
popf
rcrb
mov
mov
cs
push
inc
inc
scas
sahf
mov
shll
inc
cs
inc
mov
ficoms
call
inc
mov
inc
mov
add
mov
cs
call
dec
mov
sub
and
pop
xor
cs
call
divb
cs
call
inc
scas
mov
mov
scas
inc
inc
mov
dec
enter
push
inc
mov
inc
mov
inc
sbb
dec
enter
push
fs
cs
mov
inc
ds
mov
inc
cs
mov
shlb
fsubs
inc
push
add
sub
cs
das
aas
cs
into
sub
daa
inc
sub
inc
mov
mov
push
mov
mov
cli
mov
jmp
cs
inc
mov
inc
pushl
pop
cs
mov
mov
sub
inc
push
mov
mov
call
fs
sub
shld
inc
sub
inc
push
mov
mov
call
fs
sub
cmovne
inc
sbb
xchg
scas
dec
fmul
decl
cs
sub
ds
pop
add
xchg
scas
add
fcoms
fs
sbb
into
xchg
scas
dec
pop
push
sub
fs
sub
xor
mov
inc
mov
movsb
mov
mov
enter
push
cmp
add
sub
dec
mov
outsb
cs
pop
movsb
and
cs
sub
int
mov
mov
into
mov
aam
aas
call
mov
out
stos
xchg
xor
movsb
cmovl
xchg
cs
and
adc
inc
mov
mov
cs
mov
inc
scas
mov
or
cs
into
push
add
mov
cs
inc
mov
aam
into
push
inc
mov
aaa
jne
cs
mov
aaa
gs
enter
sbb
cli
mov
dec
mov
xor
sub
dec
into
fiaddl
scas
inc
call
sub
cs
mov
inc
scas
mov
fisubrl
daa
inc
scas
mov
cs
cs
call
sub
pop
inc
sub
inc
mov
sbb
sub
daa
sub
lahf
into
inc
mov
sub
inc
scas
mov
sub
or
and
daa
inc
scas
mov
cs
cs
sub
in
mov
inc
pop
xor
mov
inc
sub
cs
inc
mov
inc
mov
mov
dec
shr
cli
inc
enter
ret
cli
inc
enter
ja
enter
inc
cli
inc
enter
daa
fiaddl
cli
inc
sbb
paddusb
inc
sbb
sub
cs
sub
inc
sub
and
inc
sub
pop
cli
inc
mov
inc
mov
inc
mov
inc
mov
cli
inc
mov
inc
mov
dec
ret
inc
enter
and
inc
enter
cli
inc
enter
pop
cli
inc
enter
sub
mov
inc
enter
jne
inc
mov
cs
inc
enter
sub
and
cli
inc
enter
sub
mov
inc
and
cli
inc
sub
sub
cld
stc
cs
or
cli
inc
enter
ret
cld
cmp
sub
add
inc
sub
fdivs
jnp
cs
dec
cmp
sub
mov
inc
mov
sub
sub
pop
dec
fcomps
sub
cs
dec
cmp
add
dec
mov
outsb
inc
scas
inc
sub
sub
out
mov
sub
test
sub
and
pop
and
mov
cs
mov
inc
mov
inc
enter
inc
dec
inc
scas
ss
pop
cmp
sbb
mov
jmp
mov
cs
cmpsb
inc
mov
scas
push
movsb
inc
mov
sub
inc
scas
sahf
xor
outsb
sbb
outsb
inc
shlb
sub
xor
cs
das
xor
cs
ds
mov
jb
cs
cmp
scas
dec
cmp
cs
mov
mov
inc
cmp
sub
sub
cs
inc
cmp
sub
sub
cs
inc
cmp
sub
sub
cs
inc
cmp
sub
sub
cs
inc
cmp
sub
sub
cs
inc
cmp
sub
sub
cs
inc
cmp
sub
sub
cs
inc
cmp
sub
sub
cs
inc
cmp
sub
push
cs
inc
cmp
sub
dec
cs
inc
cmp
sub
outsl
cs
inc
cmp
sub
jge
cs
inc
cmp
sub
sub
cs
inc
imul
mov
sub
sub
sub
inc
mov
sub
cs
cmp
dec
cmp
sub
xor
out
sub
mov
sub
sub
pop
cmp
bound
push
clc
jne,pn
bound
xchg
jmp
mov
js
cs
jmp
and
sbb
mov
cs
into
inc
mov
mov
inc
mov
inc
mov
and
cs
into
inc
mov
sub
sub
pop
inc
inc
inc
dec
inc
enter
incl
dec
enter
enter
xor
shrb
data16
inc
mov
cs
into
inc
mov
sub
sub
scas
cmp
daa
cs
js
fsubs
enter
inc
mov
enter
inc
enter
xor
inc
enter
int3
into
adc
add
inc
mov
xor
inc
push
jle
aas
outsl
cs
xor
test
testl
mov
cs
roll
inc
fmuls
push
out
dec
sarb
inc
fdivr
inc
fmuls
inc
fmuls
inc
fdivr
dec
popf
push
inc
fsubr
xor
sub
fmul
inc
fsubr
mov
inc
xor
xchg
and
or
inc
push
xor
iret
xor
xor
push
push
inc
sub
inc
inc
xor
xor
iret
inc
fsubs
cmpsb
push
inc
enter
xlat
xor
enter
inc
fcoms
xor
pop
inc
fadds
movsb
dec
ja
cs
xor
pop
inc
shlb
inc
fcoms
inc
enter
dec
cmp
sub
out
inc
enter
xor
shrb
outsb
sub
xor
add
into
inc
mov
sub
sub
outsb
inc
das
iret
xor
cs
daa
inc
enter
inc
mov
xor
cs
cs
cs
pop
mov
sub
sub
mov
inc
mov
inc
mov
inc
mov
nop
dec
mov
insb
inc
xchg
inc
mov
push
pushf
into
inc
mov
adc
inc
nop
inc
ds
push
test
xor
inc
dec
in
ljmp
inc
pop
inc
scas
ss
fimull
xor
cs
dec
aaa
sub
cs
dec
aaa
sbb
cs
xor
cs
cs
cs
dec
aaa
fldt
cs
adc
lds
cs
ret
test
xor
dec
popf
into
inc
inc
enter
mov
aaa
mov
cs
mov
ljmp
fdivrl
nop
push
sub
push
xor
dec
popf
and
popf
loop
xor
push
add
push
inc
enter
push
mov
inc
xor
lret
xor
dec
popf
and
popf
loopne
xor
push
test
push
inc
sub
inc
sub
inc
lods
cmp
divl
data16
popf
and
popf
loopne
sub
daa
ds
mov
dec
popf
and
popf
loop
inc
enter
pop
xor
inc
enter
pop
adc
enter
into
dec
dec
popf
push
inc
sub
ds
inc
enter
cmovl
lock
xchg
scas
scas
add
shll
push
inc
les
ficoml
nop
dec
aaa
sub
cs
mov
cs
das
das
cs
mov
scas
add
cs
fdivrs
dec
inc
dec
inc
enter
xor
dec
dec
aaa
lods
cs
and
and
pop
movsb
mov
inc
mov
xor
xor
mov
fisubrl
cmp
mov
sub
pop
cmp
pop
pushl
cs
mov
into
jbe
sub
aas
push
cs
sub
xchg
scas
inc
mov
rolb
inc
fadds
xchg
sarl
push
xor
inc
dec
inc
cmp
rcll
and
mov
popf
rcl
sbb
sub
inc
fdivrs
inc
les
into
sub
cmp
daa
add
mov
mov
xor
sahf
xor
xor
fdivrs
inc
enter
add
scas
mov
push
scas
add
shll
xor
sbb
xchg
scas
shll
mov
cmp
in
xor
test
mov
into
ss
fcoms
cmp
push
loopne
inc
fcoms
xor
push
mov
ds
sbb
inc
fmuls
inc
fsubs
dec
popf
push
inc
adc
sub
and
cmp
dec
xor
xor
xor
enter
inc
fcoms
xor
pop
inc
sbb
movsb
xchg
mov
adc
xor
inc
into
ss
fcoms
cmp
sbb
scas
shll
dec
inc
scas
ss
cs
fmull
cs
fadds
rorl
cs
ds
scas
scas
add
adc
xor
ds
mov
xor
ds
lret
sub
call
inc
enter
sbb
inc
sub
xchg
roll
mov
add
movsb
lret
ss
popf
inc
mov
mov
sub
movsb
sub
lret
es
movsb
and
inc
mov
sbb
mov
mov
inc
scas
sub
int
push
dec
cs
dec
inc
scas
mov
sub
push
dec
sub
dec
inc
shlb
pop
inc
mov
cmp
pop
inc
mov
enter
pop
dec
xor
sub
in
ljmp
inc
pop
xor
ds
xchg
sub
sub
mov
sub
test
sub
and
mov
cs
int
aaa
sub
cs
sbb
cs
or
cs
mov
xor
cs
and
loop
cmp
xor
cs
mov
xor
inc
mov
dec
aaa
shlb
cs
mov
inc
ds
mov
fiaddl
cmpsb
xor
inc
sbb
mov
cs
fiadds
push
cli
inc
mov
cli
inc
mov
mov
cli
inc
mov
call
inc
mov
inc
mov
rolb
pop
mov
adc
or
mov
push
adc
mov
adc
notb
clc
cli
mov
sub
mov
fdivrs
ds
enter
inc
sub
mov
nop
inc
inc
inc
into
pop
inc
mov
push
inc
cs
mov
push
inc
inc
push
pop
inc
shll
pop
movsb
push
sbb
ss
fidivrl
push
inc
into
inc
xor
sahf
movsb
sub
mov
enter
enter
mov
mov
shrb
into
inc
mov
test
decl
mov
inc
sahf
inc
mov
sub
sbb
cs
sbb
xor
sbb
xchg
rorl
outsb
cli
movsb
lret
lock
mov
inc
dec
inc
mov
push
dec
inc
lret
mov
sbb
mov
xor
into
inc
mov
xor
into
call
ss
mov
cmp
push
pop
rolb
inc
xor
ds
scas
shlb
cs
mov
xor
inc
dec
popf
mov
adc
xor
sahf
sbb
enter
enter
mov
mov
rolb
pop
sub
into
cmp
cs
incl
scas
push
sub
fcmovu
dec
daa
sub
adc
inc
lret
inc
adc
scas
push
repnz
sub
inc
xor
sahf
sbb
mov
dec
enter
sbb
inc
enter
fsubrl
jle
mov
xor
xor
sub
cmpsb
sub
sahf
pop
mov
cli
inc
fsubrl
xor
cs
fildl
inc
mov
inc
xor
mov
scas
in
in
mov
fadds
dec
popf
sarb
dec
popf
mov
aam
xchg
sub
cmp
push
insb
inc
mov
mov
inc
fidivrs
xor
xor
mov
xor
and
icebp
xchg
scas
in
in
mov
fadds
xor
pop
sub
sub
cs
inc
mov
cli
inc
mov
sub
fiaddl
ds
inc
mov
fdivr
inc
mov
aaa
test
cs
aaa
jo
cs
mov
xor
mov
add
sub
inc
call
xor
cs
aaa
lahf
cs
sub
xchg
pop
dec
popf
cmpsl
sub
ret
inc
sub
inc
sub
xchg
pop
dec
popf
cmpsl
and
ret
inc
sub
cli
inc
sub
cli
xchg
and
xor
cli
mov
cli
inc
sub
cli
xchg
and
xor
cli
mov
cli
inc
sbb
cli
inc
sub
cli
xchg
adc
xchg
and
test
inc
sbb
cli
inc
sub
cli
xchg
and
xor
cli
mov
cli
inc
sub
cli
xchg
and
xor
cli
mov
cli
inc
sbb
cli
inc
sub
cli
xchg
adc
xchg
and
test
inc
sbb
cli
inc
sub
cli
movsb
sub
sbb
xor
inc
xor
ds
sub
xchg
pop
cli
xor
cs
cmp
sub
xchg
pop
cli
inc
cmpsl
sub
ret
inc
jecxz
test
sub
cs
movsb
sub
insb
inc
sub
xchg
pop
inc
mov
push
out
cs
test
movsb
mov
add
in
ljmp
inc
pop
sar
inc
fisubrl
cli
test
stos
mov
cs
xchg
lret
stos
sub
cs
sub
sub
push
call
shrl
mov
sub
cs
movsb
lds
xor
fsubs
dec
fdivl
xchg
fildl
xchg
sub
inc
inc
push
out
cs
mov
cs
test
movsl
mov
cs
xchg
lds
cli
movsb
lds
mov
in
and
or
xchg
lret
dec
aaa
mov
ljmp
fcmovu
mov
sub
sub
sub
cmp
nop
xchg
in
cmpsb
dec
push
lock
mov
sub
cs
inc
movsl
mov
cs
test
cs
xchg
mov
mov
cs
movsb
mov
xor
sbb
dec
adc
xchg
adc
xchg
rorl
fsub
ret
inc
pop
das
add
das
and
mov
or
xchg
mov
sar
inc
mov
inc
mov
fadds
rcr
mov
sub
sub
sub
mov
cli
test
mov
cli
xchg
ret
mov
cli
movsb
ret
push
fmull
mov
lods
mov
sub
cs
movsb
lds
xor
sbb
dec
adc
xchg
sbb
cli
inc
inc
into
out
cs
mov
cs
test
movsl
mov
cs
xchg
lds
cli
movsb
lds
mov
or
push
cmp
scas
ljmp
inc
mov
fimull
shrl
sub
cs
cs
fsubs
cli
movsb
mov
test
xor
mov
xor
cmpsb
dec
inc
int
mov
xchg
sub
cli
movsb
pop
sbb
xchg
scas
in
cli
inc
xor
daa
ljmp
pop
inc
mov
rolb
cmp
ds
dec
inc
enter
dec
inc
inc
aas
ds
fadds
inc
mov
rolb
cmp
ds
inc
mov
call
inc
pop
xor
mov
sub
or
pop
mov
xchg
adc
xor
movsb
sbb
xor
aam
inc
mov
inc
mov
mov
cmp
mov
mov
cmp
mov
mov
cmovl
dec
cs
mov
mov
mov
jecxz
sub
sub
cmovno
cli
inc
mov
xchg
loope
mov
aaa
pop
out
cs
call
jecxz
rcrl
inc
call
loope
push
out
cs
call
mov
js
cs
aad
mov
fcoms
dec
lea
mov
xchg
mov
rorl
dec
mov
cs
mov
mov
cs
mov
mov
cmp
cmp
call
stos
scas
das
adc
das
mov
xchg
filds
daa
xchg
mov
xchg
cmp
insb
movsb
sbb
xor
sub
mov
fadds
xor
pop
sub
cmovno
daa
inc
enter
daa
das
adc
inc
enter
mov
ds
dec
inc
enter
mov
mov
aas
ds
enter
mov
shll
xchg
aam
sub
inc
mov
daa
or
out
lods
mov
js
xor
out
and
jg
cs
mov
and
out
mov
mov
sub
sub
mull
or
fidivs
cs
pop
xchg
sbb
bsr
sub
or
xor
cs
mov
mov
unpcklps
inc
mov
pop
xchg
in
ss
dec
fwait
scas
mov
inc
mov
xchg
cmp
mov
xchg
mov
cmp
lds
cmovne
movsb
mov
mov
pop
xchg
mov
mov
cmovne
lret
test
xlat
inc
mov
pop
xchg
in
ss
aas
mov
inc
enter
dec
pop
das
adc
das
mov
xchg
mov
mov
iret
test
inc
enter
xor
inc
mov
into
add
inc
enter
xor
inc
inc
enter
iret
inc
mov
cmp
sub
inc
enter
dec
aaa
xor
enter
dec
pop
das
adc
das
mov
dec
fwait
roll
test
int
lds
cmovl
dec
xor
inc
mov
mov
lea
inc
enter
pop
xchg
mov
mov
cs
mov
pop
or
lret
sub
xchg
mov
dec
dec
cmp
enter
pop
xchg
mov
mov
cs
mov
pop
or
and
sub
inc
mov
int
aaa
mov
cs
mov
pop
or
subb
sub
mov
fadds
xor
pop
sub
or
daa
inc
enter
pop
mov
sub
pop
or
iret
sbb
xlat
pop
or
fists
mov
sub
or
divl
mov
sub
inc
mov
inc
enter
mov
xchg
mov
cs
xor
xchg
rcrl
xchg
lret
xor
inc
mov
xor
inc
call
cs
enter
inc
xchg
mov
inc
enter
pop
inc
mov
filds
daa
xchg
lret
xchg
mov
daa
xchg
lret
test
dec
inc
push
mov
movsb
mov
cs
mov
xchg
mov
xor
xchg
rcrl
xchg
fildl
inc
mov
mov
mov
inc
fdivr
inc
mov
filds
daa
xchg
mov
inc
mov
mov
enter
xchg
fildl
sbb
xchg
mov
test
inc
enter
daa
xchg
mov
test
movsb
rcrl
pop
inc
mov
filds
daa
xchg
mov
xor
movsb
iret
adc
inc
mov
lds
adc
inc
mov
lds
mov
fists
dec
mov
movsb
mov
push
mov
filds
call
mov
xor
sar
mulb
sub
xchg
mov
sub
inc
mov
mov
daa
dec
xor
xchg
mov
sub
daa
xor
pop
xchg
mov
pop
dec
xor
in
ljmp
pop
xor
movaps
pop
daa
or
mov
sub
mov
cmp
iret
jo
ds
lods
mov
sbb
mov
sub
or
pop
leave
or
pop
xchg
lret
xor
sbb
xchg
mov
inc
mov
mov
call
mov
mov
xor
xor
cs
sub
jmp
sub
xor
cs
mov
mov
sub
sub
mov
sub
inc
enter
xor
aas
enter
daa
inc
mov
cs
enter
xor
dec
lea
enter
cmovne
call
sbb
dec
fcoms
in
das
mov
xor
aas
enter
daa
dec
fcoms
xor
dec
lea
test
add
dec
fcoms
test
test
aas
fcoms
out
inc
fcoms
mov
mov
rol
aas
fcoms
daa
inc
fsubs
xchg
lret
xor
dec
lea
dec
iret
inc
push
bound
daa
xchg
lret
xor
dec
lea
enter
push
xchg
lret
xor
dec
lea
enter
xor
dec
lea
mov
xchg
mov
js
cs
mov
pop
cmp
mov
sub
xor
pop
leave
or
sub
or
sub
inc
mov
lret
dec
aaa
mov
cs
mov
jmp
cmp
ljmp
pop
xor
xor
fiaddl
cmp
sbb
xchg
scas
add
cmp
lcall
sub
inc
pushf
inc
filds
incl
sbb
pop
sub
sub
inc
dec
cmp
sub
sub
dec
cmp
sub
pop
sub
dec
inc
lcall
in
in
shll
add
xor
xor
cs
scas
cmp
push
nop
inc
push
add
sar
inc
push
mov
scas
inc
push
ds
rcrl
pop
xchg
sar
inc
mov
dec
cmp
sub
ds
sub
ss
inc
mov
xor
fcmovu
dec
aaa
lea
cs
cs
popf
scas
outsb
inc
mov
shll
pop
lahf
mov
cs
mov
cs
enter
daa
cs
roll
in
cli
movsb
enter
dec
xchg
shrl
sub
popf
enter
inc
dec
inc
inc
cli
mov
dec
popf
inc
lods
sub
cs
movsb
int
inc
inc
call
das
cmpsb
insb
cs
mov
ds
popf
and
dec
stos
cmpsb
insb
movsl
mov
cs
test
movsb
int
push
add
sub
enter
enter
add
add
inc
sbb
dec
popf
ret
das
cmpsb
nop
cs
push
mov
sub
sub
in
ljmp
enter
shrl
sub
xchg
scas
cli
movsb
enter
scas
add
xor
pop
inc
mov
sbb
scas
add
xchg
sbb
into
inc
mov
dec
mov
dec
cmp
inc
mov
cs
mov
cs
mov
cs
mov
xor
cs
mov
xor
cs
mov
xor
cs
mov
xor
cs
mov
xor
cs
mov
cs
inc
mov
iret
sub
cmp
cs
mov
push
xor
xor
inc
sub
lret
fisubrl
ljmp
inc
sub
mov
pop
inc
fdiv
inc
sub
movsb
and
pop
xchg
in
call
sbb
add
inc
sub
dec
popf
cmpsb
in
movsb
ljmp
adc
inc
data16
ds
cmpsb
mov
fmuls
test
ds
cs
fsub
inc
fsubs
xor
inc
mov
aam
sbb
enter
push
cmp
daa
inc
sahf
inc
mov
ss
inc
call
jmp
in
shll
inc
mov
sub
xor
inc
xchg
shll
mov
inc
dec
fbstp
cs
push
cwtl
mov
cmp
inc
xor
xor
movsl
sub
cs
movsb
mov
out
xchg
scas
cli
inc
xor
fbstp
cs
faddl
inc
cmp
xor
cs
ds
add
das
mov
aas
ds
mov
inc
das
and
or
cmp
xor
cs
in
mov
inc
pop
xor
cs
ss
mov
push
inc
roll
xor
outsb
xor
roll
int3
sbb
inc
inc
cmp
daa
sub
xor
cs
fwait
inc
xchg
mov
cs
ds
aaa
dec
cs
sub
std
sbb
fadds
xor
push
inc
scas
ss
ds
loopne
xor
inc
aam
inc
mov
inc
xor
inc
call
cmp
sahf
dec
mov
mov
mov
cmp
pop
inc
mov
enter
movsb
mov
xor
fsubrl
add
inc
sbb
mov
mov
sub
outsb
inc
enter
inc
test
inc
push
dec
xor
movsb
lret
adc
test
pop
add
add
sub
scas
into
pushl
clc
imull
mov
sub
sub
mov
sub
inc
mov
mov
cs
aas
mov
inc
mov
cs
fcoms
xchg
fnsave
dec
roll
pop
scas
aas
enter
pop
inc
fdiv
xchg
int
lret
movsb
rcrl
mov
sub
das
adc
das
mov
xor
aas
enter
pop
xchg
fnsave
dec
aas
mov
cs
rorl
pop
scas
dec
fsubrs
inc
enter
fsubrs
test
aas
fsubrs
fsubrs
mov
rol
aas
fsubrs
fnsave
dec
aas
mov
cs
rorl
pop
scas
inc
fcomp
inc
fcoms
xchg
fnsave
dec
roll
pop
scas
inc
enter
inc
enter
xor
dec
dec
mov
cs
ret
dec
dec
scas
sub
inc
enter
xor
dec
ret
inc
fsubrs
cs
inc
fcoms
xchg
fisttpll
mov
cs
dec
rorl
pop
scas
sub
enter
dec
aaa
xor
mov
mov
cs
ds
scas
call
sub
push
ds
xor
add
sbb
dec
mov
adc
inc
scas
mov
add
add
enter
iret
add
cs
mov
sub
mov
sub
mov
mov
call
add
cs
fcoms
xchg
fnsave
dec
roll
pop
xchg
enter
pop
inc
fmul
xchg
int
lret
movsb
rcrl
mov
sub
das
adc
das
mov
xor
aas
enter
pop
xchg
fnsave
dec
aas
mov
cs
rorl
pop
xchg
sub
inc
enter
fsubrs
test
aas
fsubrs
fsubrs
mov
rol
aas
fsubrs
fnsave
dec
aas
mov
cs
rorl
pop
xchg
out
fcoms
xchg
fnsave
dec
roll
pop
xchg
out
push
inc
enter
xor
dec
dec
mov
cs
ret
dec
dec
xchg
xor
pop
xchg
int
lret
dec
ret
inc
fsubrs
cs
inc
fcoms
xchg
fisttpll
mov
cs
dec
rorl
pop
xchg
inc
inc
enter
dec
aaa
xor
mov
mov
cs
ds
cmpsl
inc
mov
into
inc
mov
into
jmp
sub
inc
scas
mov
inc
enter
add
sub
iret
add
cmpsl
xor
mov
xor
ds
sub
mov
sub
inc
enter
xor
aas
enter
pop
inc
call
inc
mov
movsb
enter
add
cs
fcoms
xchg
fnsave
dec
roll
xor
enter
pop
inc
fadd
xchg
int
lret
movsb
rcrl
mov
sub
das
adc
das
mov
xor
aas
enter
pop
xchg
fnsave
dec
inc
mov
cs
rorl
xor
sub
inc
enter
fsubrs
test
aas
fsubrs
fsubrs
mov
rol
aas
fsubrs
fnsave
dec
inc
mov
cs
shll
inc
fsub
inc
fcoms
xchg
fnsave
dec
roll
xor
out
push
inc
enter
xor
dec
push
mov
cs
ret
sub
xor
pop
xchg
int
lret
dec
ret
inc
fsubrs
fcoms
xchg
fisttpll
mov
cs
dec
ret
sub
inc
enter
dec
addr16
mov
cs
in
xchg
in
dec
inc
mov
movsb
enter
pop
sub
lahf
inc
enter
add
sub
inc
jmp
enter
dec
xor
xor
pop
inc
call
movsb
mov
and
mov
mov
fadds
rcl
inc
mov
mov
cs
sub
inc
mov
aam
pop
inc
mov
inc
ds
mov
inc
cs
cmpsb
inc
enter
mov
rclb
mov
cs
sub
cs
mov
cmp
mov
sbb
call
and
inc
mov
push
ds
mov
inc
xor
daa
shll
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
mov
sub
movzbl
mov
add
mov
mov
sub
mov
mov
mov
sub
mov
leave
ret
push
mov
sub
cmp
mov
mov
adc
mov
mov
mov
xor
mov
mov
mov
sub
leave
ret
push
mov
sub
mov
mov
or
mov
mov
mov
or
mov
mov
mov
xor
leave
ret
push
mov
sub
mov
mov
or
mov
mov
mov
xor
mov
mov
sub
mov
leave
ret
push
mov
sub
movzbl
movzbl
and
mov
cmp
mov
mov
sbb
mov
cmp
mov
mov
sbb
mov
leave
ret
push
mov
sub
mov
mov
xor
mov
mov
mov
add
mov
movzbl
mov
xor
mov
leave
ret
push
mov
sub
mov
mov
sub
movzwl
mov
sub
cmp
mov
mov
adc
mov
leave
ret
push
mov
sub
cmp
mov
mov
sbb
mov
test
mov
mov
sbb
mov
cmp
mov
mov
sbb
mov
leave
ret
push
mov
push
mov
push
mov
movl
cmpl
jbe
mov
movzwl
xor
mov
mov
mov
xor
movl
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
push
lea
cmp
jl
mov
mov
and
jmp
mov
and
mov
mov
or
and
mov
mov
imul
imul
mov
lea
and
mov
or
xor
mov
mov
cmp
jne
mov
mov
jmp
cmp
jne
mov
mov
or
mov
mov
mov
xor
xor
mov
mov
xorb
lea
xor
mov
imul
movl
cmpl
jge
mov
adc
mov
mov
mov
or
mov
and
mov
xor
add
mov
imul
lea
addl
and
mov
or
cmp
jne
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
sub
mov
mov
sub
mov
mov
sub
mov
mov
mov
add
mov
leave
ret
push
mov
sub
test
mov
mov
sbb
movzwl
mov
or
mov
movzbl
xor
leave
ret
push
mov
sub
movl
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
movl
cmpl
jg
xor
mov
add
mov
movl
mov
xor
add
mov
mov
add
mov
mov
mov
cmp
sbbl
lea
push
movzbl
rcl
mov
mov
xor
add
mov
push
pushl
add
pushl
push
push
mov
mov
pushl
pushl
call
add
leave
ret
push
mov
sub
movl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
xor
movl
cmpl
jb
mov
incl
test
mov
movzbl
adc
mov
mov
mov
shl
push
mov
mov
movzwl
movzbl
or
mov
mov
mov
andl
shl
mov
mov
mov
or
mov
mov
shl
mov
sub
mov
mov
mov
shl
mov
mov
mov
mov
mov
xor
mov
mov
mov
dec
not
and
movzwl
add
mov
mov
mov
lea
mov
mov
mov
mov
sub
mov
jmp
mov
sub
test
mov
mov
adc
mov
mov
mov
mov
mov
add
mov
mov
sub
subl
orl
xor
cmp
mov
jne
movl
mov
pop
leave
ret
movl
movl
movl
movl
mov
ret
push
mov
sub
movl
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
movl
cmpl
ja
mov
mov
mov
add
mov
push
movzwl
sub
push
mov
cmp
mov
sbb
xor
mov
add
cmp
je
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
and
mov
mov
add
cmpl
movl
movb
je
mov
mov
xor
add
mov
mov
xor
sub
movzwl
add
mov
sub
sub
mov
pushl
pushl
mov
mov
pushl
call
mov
mov
movl
cmpl
jg
mov
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
push
push
call
jmp
cmp
mov
mov
adc
mov
xor
add
mov
mov
jmp
mov
xor
pop
add
pop
leave
ret
push
mov
push
push
pop
mov
test
jne
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
mov
dec
mov
jmp
mov
test
movl
orl
sbbl
xor
add
mov
inc
cmp
jb
push
push
push
push
xor
call
test
jne
mov
mov
cmp
jne
call
movl
cmpl
je
mov
mov
mov
xor
lea
mov
mov
mov
or
mov
mov
xor
mov
add
mov
inc
movzwl
xor
mov
cmp
jne
test
je
mov
movzwl
or
mov
push
pop
mov
mov
mov
and
sub
sub
mov
xor
add
mov
adcl
andl
dec
jne
mov
mov
mov
mov
pop
pop
leave
ret
push
xor
inc
mov
cmp
je
mov
mov
mov
cmp
jbe
dec
mov
jmp
test
jne
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
call
cmpl
jb
mov
xor
mov
div
lea
mov
cmp
jne
push
push
orl
call
mov
add
cmp
jne
pop
ret
push
push
movl
call
cmp
je
push
mov
cmp
jae
test
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
mov
xor
mov
div
lea
mov
jmp
test
jne
mov
jmp
dec
mov
cmp
jne
pop
ret
push
mov
sub
movl
movl
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
call
cmpl
jb
mov
movl
cmpl
jl
mov
mov
adc
mov
mov
or
mov
mov
mov
add
mov
lea
mov
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
movzwl
sub
mov
mov
xor
push
mov
add
mov
mov
mov
xor
mov
mov
mov
push
mov
xor
mov
pop
sub
add
cmpl
mov
mov
pop
jne
mov
xor
add
leave
ret
push
mov
sub
push
push
movl
lea
movl
push
mov
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
movl
cmpl
je
movl
cmp
mov
mov
sbb
mov
mov
mov
mov
test
jne
mov
mov
cmpl
je
push
push
add
push
pushl
pushl
call
add
mov
mov
test
je
movl
mov
jmp
cmp
je
mov
mov
xor
andl
xor
xor
add
lea
div
push
push
shl
mov
call
movzwl
inc
mov
pop
pop
test
je
mov
xor
mov
mov
pushl
push
push
push
push
pushl
pushl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
add
mov
movl
cmp
jne
movl
cmpl
je
mov
xor
mov
mov
xor
mov
mov
mov
push
pushl
mov
call
mov
jmp
cmp
jne
mov
mov
push
push
push
push
push
pushl
call
add
mov
mov
mov
and
mov
mov
dec
xor
mov
or
mov
mov
xor
mov
add
jne
mov
mov
xor
xor
xor
add
add
andl
addl
div
shl
mov
pushl
pushl
call
lea
xor
movl
cmpl
ja
mov
mov
add
mov
mov
mov
add
mov
mov
mov
push
mov
sub
xor
pop
div
cmp
jbe
mov
xor
inc
xor
mov
cmp
jne
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
pop
xor
pop
inc
pop
leave
ret
push
mov
push
push
mov
movl
movl
cmp
je
cmpl
jne
push
jmp
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
mov
movl
cmpl
je
mov
sbbb
mov
adc
mov
add
mov
mov
shrb
mov
xor
mov
mov
mov
movzwl
not
mov
mov
cmp
je
mov
mov
cmp
jne
call
push
pushl
pushl
pushl
call
jmp
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
lea
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
addb
mov
add
pop
mov
mov
and
mov
mov
mov
mov
xor
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
push
call
mov
dec
mov
jmp
mov
movl
cmpl
jg
mov
mov
orb
mov
xor
leave
ret
push
mov
sub
mov
mov
push
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
movl
cmpl
jbe
xor
push
mov
mov
sub
mov
movl
mov
add
movl
mov
mov
xor
mov
mov
mov
mov
mov
mov
add
mov
xor
add
cmp
je
lea
mov
mov
mov
add
jmp
mov
mov
adc
mov
mov
and
mov
mov
mov
mov
mov
mov
movzwl
add
mov
mov
mov
lea
cmp
movzbl
shl
mov
mov
lea
mov
lea
mov
lea
cmp
jne
movzwl
or
jmp
mov
mov
sub
movzwl
xor
mov
lea
mov
lea
mov
lea
mov
xor
mov
lea
mov
lea
mov
lea
movl
cmpl
jle
mov
or
mov
mov
or
mov
mov
mov
mov
add
mov
cmpl
ja
mov
add
jmp
mov
mov
adc
mov
addb
mov
mov
cmp
mov
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
lea
add
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
mov
movl
cmpl
jbe
mov
mov
mov
mov
mov
xor
movl
mov
mov
movl
mov
pushl
mov
mov
and
mov
push
push
lea
push
mov
adcl
orl
mov
pushl
pushl
call
push
push
xorl
addl
xorl
lea
push
mov
mov
pushl
pushl
call
test
mov
movzbl
adc
mov
mov
mov
mov
mov
xor
xor
lea
add
cmp
je
mov
mov
mov
sub
mov
mov
xor
mov
and
add
mov
test
mov
mov
adc
mov
mov
mov
cmpl
js
mov
xor
mov
jmp
mov
mov
add
mov
mov
adc
xor
movl
cmpl
jg
add
mov
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
sub
mov
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
push
push
pushl
push
pushl
push
pushl
push
pushl
call
cmpl
jb
movl
movl
cmpl
jb
movzwl
and
mov
add
movl
mov
push
push
cmp
jae
mov
mov
and
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
mov
mov
xor
mov
add
mov
movl
addl
orl
addl
call
test
je
call
mov
mov
movzwl
add
mov
xor
add
mov
mov
movzbl
add
movl
mov
movl
mov
mov
xor
add
mov
mov
movzwl
xor
mov
xor
mov
add
mov
cmp
je
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
mov
movzbl
xor
mov
mov
movl
cmpl
jae
movzwl
and
mov
mov
adcb
xor
add
imul
mov
mov
cmp
mov
mov
sbb
mov
mov
xor
add
cmp
jne
cmp
jo
mov
movzbl
adc
mov
jmp
mov
mov
adc
mov
mov
mov
or
mov
movzbl
movzbl
xor
test
sbbl
orl
orl
add
add
mov
movzwl
mov
sub
mov
mov
movzbl
xor
add
jmp
subl
xorl
sbbl
addl
imul
movzbl
sub
jmp
mov
movzbl
xor
sub
movzwl
neg
mov
sub
mov
mov
mov
xor
mov
xor
add
ror
mov
mov
sub
mov
mov
mov
xor
add
imul
xor
add
imul
mov
xor
movl
cmpl
jle
mov
test
movzbl
sbb
xor
add
imul
test
mov
sarb
incb
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
xor
add
imul
add
mov
xor
add
imul
decb
mov
mov
xor
lea
xor
xor
mov
add
cmp
jne
cmp
lea
mov
mov
mov
sbb
mov
xor
add
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
call
cmp
jle
xor
leave
ret
push
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
lea
orl
subl
orl
call
movl
cmpl
ja
push
cmp
mov
movzbl
sbb
mov
pop
push
mov
mov
add
mov
pop
push
pop
mov
movzbl
and
mov
push
mov
mov
mov
mov
mov
mov
and
mov
pop
push
mov
mov
sub
mov
mov
mov
lea
mov
mov
mov
sub
pop
push
mov
mov
xor
mov
mov
pop
mov
mov
and
push
mov
pop
mov
mov
mov
mov
mov
mov
movzbl
add
mov
mov
cmp
mov
sbb
mov
push
mov
mov
mov
mov
or
mov
mov
mov
mov
xor
mov
pop
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
mov
push
cmp
orl
adcl
xorl
mov
movl
cmpl
ja
mov
shlb
mov
and
mov
mov
mov
mov
pop
push
subl
orl
mov
pop
push
addl
mov
pop
mov
mov
xor
cmp
movl
sbbl
sbbl
push
push
mov
xorl
mov
lea
mov
push
mov
mov
mov
mov
call
add
lea
push
cmp
adcl
call
test
je
lea
lea
call
xor
mov
call
movl
cmpl
jle
mov
call
cmp
mov
sbb
mov
call
mov
call
lea
mov
test
movzbl
sar
mov
mov
lea
call
mov
mov
call
cmp
jl
mov
adc
jmp
lea
mov
mov
mov
sub
movzwl
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
call
pop
mov
xor
pop
test
je
call
mov
mov
mov
mov
mov
test
movzwl
sbb
mov
xor
movl
cmpl
jae
mov
cmp
mov
mov
adc
mov
mov
add
mov
mov
jmp
push
call
push
mov
sub
movl
lea
mov
movl
cmpl
je
mov
and
mov
and
mov
and
mov
mov
movl
movl
movl
movl
orl
movl
mov
mov
movl
call
test
je
push
push
push
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
cmp
mov
mov
adc
mov
mov
add
jmp
cmp
jne
movl
sbbl
xorl
lea
mov
call
cmpl
jp
mov
xor
jmp
mov
xor
movzbl
sbb
mov
mov
mov
mov
xor
xor
sub
sub
xor
cmp
jne
pop
pop
pop
leave
ret
push
mov
push
push
movl
mov
rcr
mov
movl
movl
mov
add
mov
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
mov
movl
cmpl
je
mov
mov
mov
pushl
mov
mov
pushl
lea
push
call
call
test
je
mov
mov
xor
mov
sub
mov
addl
jmp
mov
mov
mov
mov
lea
cmp
mov
sbb
mov
mov
add
mov
mov
mov
leave
ret
push
mov
sub
mov
movl
movl
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
mov
mov
orb
mov
push
movl
cmpl
jne
movzbl
rcr
mov
mov
sbb
mov
push
mov
push
lea
mov
pushl
pushl
call
mov
mov
xor
mov
add
cmp
je
mov
jmp
push
pushl
jmp
xorl
sbbl
orl
push
pushl
call
mov
mov
and
mov
lea
mov
mov
mov
add
mov
mov
xor
mov
xor
pop
add
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
lea
mov
lea
mov
lea
mov
push
lea
push
mov
mov
mov
push
mov
mov
mov
movl
mov
mov
mov
cmp
jne
movl
cmpl
je
cmpl
jne
pushl
push
push
push
call
mov
dec
mov
jmp
mov
andl
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
subl
xorl
push
lea
call
mov
cmp
je
mov
cmpl
je
cmpl
jne
mov
jmp
cmp
je
movl
cmpl
jbe
movzwl
and
mov
mov
adc
mov
shrb
mov
add
xor
cmp
je
mov
cmp
jne
mov
and
mov
xor
add
cmp
jb
mov
cmp
jno
mov
mov
or
jmp
mov
or
mov
adc
mov
addl
mov
cmp
jae
mov
movzwl
mov
dec
cmp
ja
mov
movzwl
and
mov
addl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
andl
mov
movzbl
sub
xor
mov
add
imul
movzwl
mov
lea
push
mov
orl
subl
xor
add
test
mov
adc
mov
imul
mov
add
push
cmpl
jbe
mov
or
mov
jmp
movzbl
sbb
mov
mov
xor
mov
pushl
mov
call
cmpl
je
mov
addl
xor
inc
xor
mov
jmp
mov
movl
cmpl
jbe
mov
rcl
mov
mov
mov
xor
mov
mov
add
xor
mov
mov
cmp
je
mov
mov
add
mov
xor
mov
add
mov
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
imul
mov
mov
mov
cmpl
jae
lea
mov
mov
movzwl
sbb
jmp
movzbl
mov
or
mov
mov
movzwl
xor
mov
mov
mov
imul
xchg
dec
dec
cmp
jne
mov
mov
movzwl
or
mov
mov
xor
lea
mov
mov
mov
add
add
mov
mov
add
cmp
sbbl
xorl
addl
dec
jne
jmp
mov
cmp
jbe
movzbl
sub
mov
jmp
mov
or
mov
and
mov
mov
call
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
push
push
cmp
movl
movl
mov
jne
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
push
push
call
mov
dec
mov
jmp
mov
xor
add
leave
ret
push
mov
push
push
cmp
movl
movl
mov
jne
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
push
call
mov
dec
mov
jmp
mov
xor
add
leave
ret
push
mov
push
mov
push
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
pushl
call
cmpl
jb
xor
movl
cmpl
ja
mov
mov
sub
mov
pop
div
cmp
je
cmp
je
push
mov
mov
or
xor
mov
pop
div
cmp
jae
cmp
je
push
xor
mov
pop
div
cmp
ja
cmp
je
xor
add
mov
div
cmp
je
cmp
jne
mov
mov
mov
add
mov
mov
mov
cmp
jbe
mov
mov
jmp
mov
mov
mov
mov
mov
mov
movl
movl
jmp
movl
cmpl
je
mov
mov
imul
mov
mov
add
mov
mov
add
mov
jmp
mov
mov
mov
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
mov
add
mov
mov
not
mov
mov
xor
inc
xor
cmp
jne
pop
pop
ret
push
mov
sub
movzwl
mov
and
mov
cmp
mov
movzwl
sbb
mov
mov
xor
mov
leave
ret
push
mov
sub
mov
movzwl
add
cmp
mov
mov
sbb
mov
cmp
mov
mov
sbb
mov
leave
ret
jmp
push
mov
sub
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
movl
movl
cmpl
jl
movl
lea
mov
mov
mov
xor
movl
mov
mov
mov
push
push
test
mov
mov
sbb
mov
mov
mov
xor
xor
sub
mov
mov
neg
mov
mov
mov
cmp
lea
mov
mov
mov
sbb
movl
mov
cmp
mov
mov
sbb
mov
xor
mov
add
push
mov
movzwl
movzwl
and
mov
mov
orl
mov
imul
mov
mov
movzwl
add
mov
movl
addl
mov
mov
xor
lea
mov
mov
xor
mov
rcl
mov
mov
add
mov
xor
movzwl
add
cmp
ja
test
mov
mov
sbb
mov
movl
mov
cmp
movzbl
sbb
mov
add
mov
mov
mov
xor
mov
and
mov
add
mov
movzwl
cmp
jne
movl
cmpl
jae
mov
mov
cmp
sbbl
xorl
adcl
xor
add
imul
mov
mov
mov
push
call
test
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
mov
xor
mov
sub
mov
add
movzbl
push
mov
mov
xor
add
imul
mov
mov
call
test
jne
mov
movzwl
or
mov
mov
xor
add
imul
movl
cmpl
je
mov
movzbl
mov
sub
xor
movzwl
push
mov
subb
mov
mov
call
test
jne
movl
mov
cmp
jl
mov
not
mov
jmp
mov
and
mov
mov
and
mov
mov
xor
lea
mov
xor
xor
xor
xor
mov
lea
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
add
movzwl
cmp
mov
jbe
jmp
movl
mov
mov
xor
xor
lea
xor
mov
lea
mov
mov
mov
sub
xorl
mov
mov
add
mov
mov
xor
add
imul
mov
movzbl
mov
sub
xor
cmp
je
addl
mov
mov
cmp
je
movl
cmpl
ja
mov
sub
mov
add
mov
xor
andl
mov
xor
sub
add
mov
or
mov
mov
imul
mov
jmp
mov
xor
sub
mov
mov
and
add
mov
addl
mov
mov
xor
add
cmp
je
addl
jmp
mov
mov
or
mov
mov
mov
xor
lea
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
push
pushl
push
push
push
pushl
pushl
pushl
pushl
call
cmpl
jb
mov
movzwl
sub
mov
orl
mov
imul
mov
and
mov
mov
mov
xor
add
mov
or
xor
cmp
pop
pop
pop
je
movl
cmpl
jle
mov
sub
mov
mov
sbb
mov
xor
add
mov
cmp
mov
jne
mov
sub
mov
xor
mov
sub
movzbl
not
mov
add
mov
mov
mov
mov
leave
ret
push
mov
sub
mov
mov
sub
mov
mov
movzbl
or
mov
mov
mov
or
leave
ret
push
mov
sub
movzbl
mov
add
mov
cmp
mov
mov
sbb
mov
mov
mov
or
leave
ret
jb
and
push
dec
and
dec
add
push
xor
bound
outsb
js
addr16
push
xor
imul
outsb
gs
xor
inc
add
addb
addb
addb
add
adc
adc
add
add
dec
addb
addb
addb
add
add
inc
add
add
add
add
mov
add
add
add
add
inc
add
add
ljmp
add
or
cld
fdivrp
sti
cli
stc
clc
push
push
push
push
dec
call
inc
add
inc
add
add
nop
addb
addb
addb
addl
fs
jge
add
call
test
aam
inc
add
test
in
addb
addb
addb
addb
addb
add
add
add
add
add
add
std
std
xor
cli
push
std
hlt
sbb
icebp
cmp
into
std
dec
fsts
fcoms
idiv
ss
std
xor
cli
push
std
hlt
sbb
icebp
incb
std
into
std
dec
fldenv
fsubs
idiv
ss
std
decb
std
idiv
imul
std
dec
fnstenv
fdivs
sub
inc
aaa
push
ss
clc
xor
std
xor
stc
imul
cmp
repnz
std
icebp
flds
inc
sub
push
aaa
pusha
ss
xor
std
xor
stc
imul
incb
std
repnz
std
icebp
fsts
push
sub
pusha
aaa
jo
ja
incb
std
std
imul
idiv
outsb
std
repz
std
icebp
fldenv
bound
jno
jo
xorb
clc
incb
std
std
imul
idiv
sbb
hlt
std
repnz
fnstenv
jb
andl
xchg
clc
incb
std
std
imul
idiv
imul
iret
flds
daa
nop
aaa
mov
pop
std
std
imul
idiv
imul
std
icebp
fsts
daa
mov
clc
decb
std
std
sbb
cli
insl
std
stc
std
clc
fldenv
daa
mov
shlb
aaa
shlb
xlat
stc
cmp
std
adc
sti
decb
std
hlt
std
repnz
fld
fadd
sub
daa
shlb
loopne
out
incb
add
addl
add
inc
add
add
test
addr16
xchg
gs
add
add
add
rclb
inc
add
fs
push
or
add
aas
inc
add
ja
add
pop
jne
sbb
push
add
gs
push
add
inc
add
jne
push
add
add
inc
add
dec
add
add
add
xchg
xchg
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
sbb
jbe
test
test
mov
mov
mov
mov
sbb
sbb
sbb
jns
dec
xchg
test
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
outsb
xchg
xchg
xchg
xchg
xchg
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
sbb
jbe
test
test
mov
mov
mov
mov
sbb
sbb
sbb
jns
dec
xchg
test
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
outsb
xchg
xchg
xchg
sbb
inc
sbb
adc
add
add
add
add
imul
add
add
add
dec
add
add
add
add
jns
add
jns
add
imul
outsl
add
dec
add
inc
add
imul
add
add
add
inc
test
repz
jmp
inc
add
out
lcall
add
out
js
inc
add
out
decl
and
push
std
incb
add
or
xchg
add
pop
add
pop
add
or
and
add
sbb
push
popa
insl
dec
insb
insb
push
imul
add
data16
std
imul
adc
stc
imul
idiv
push
std
cmc
std
hlt
fsts
fcoms
idiv
add
add
add
fs
bound
add
add
inc
add
push
add
pop
add
inc
add
push
add
push
add
add
add
popa
add
ja
jae
js
add
add
data16
add
add
jne
gs
xor
add
inc
push
imul
jne
imul
inc
imul
inc
dec
add
add
jbe
add
adc
xchg
or
add
jbe
jae
add
push
imul
inc
std
jle
incb
pop
idiv
mov
std
pop
mov
pop
sub
add
pusha
inc
add
inc
add
std
sbb
imul
std
sbb
adc
sub
sub
std
incb
add
std
sbb
adc
sub
sub
std
push
adc
std
sbb
insl
std
adc
std
decb
xor
inc
or
arpl
jae
orl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
xor
jns
pop
xchg
xor
or
cmp
inc
xchg
out
shlb
push
jbe
gs
gs
aaa
pop
ja
sbb
xchg
xchg
test
arpl
out
xor
mov
jg
data16
repnz
int
mov
xchg
enter
add
add
and
aas
push
dec
inc
dec
xor
xor
inc
and
aaa
insl
xor
dec
js
inc
pop
js
xor
cmp
xor
outsb
xor
xor
and
push
add
xor
cmp
add
add
insb
push
sub
and
inc
and
add
xor
inc
jns
xor
jp
push
push
inc
cmp
dec
xor
add
gs
add
outsl
gs
pop
push
xor
jbe
aaa
and
xor
add
dec
inc
dec
cmp
push
add
xor
jns
jae
xor
add
jp
dec
xor
cmp
add
inc
and
bound
dec
ja
add
jbe
add
outsl
add
and
xor
je
inc
jne
jo
and
outsl
data16
sub
xor
js
add
xor
inc
and
cmp
xor
arpl
push
dec
xor
add
jbe
insb
add
jb
cmp
add
and
pop
jns
dec
xor
popa
add
jns
push
xor
xor
xor
xor
dec
xor
cmp
inc
push
dec
add
xor
je
dec
push
je
inc
and
add
add
add
aaa
add
add
push
add
fnstsw
add
add
jmp
adc
cmpsb
rcrl
nop
nop
imul
mov
icebp
imul
xchg
leave
cmpsb
add
out
jg
pop
cs
jne
sub
sub
mov
fs
lock
add
mov
mov
outsb
cmc
pop
xor
daa
pop
in
inc
das
mov
jns
and
adc
stos
loop
push
xor
arpl
jle
push
pop
push
test
and
xchg
sbb
shll
lret
test
xchg
or
jne
xor
outsb
mov
ficompl
popa
mov
xchg
repnz
fdivl
jg
cmp
dec
xchg
fildll
push
push
lods
mov
xor
stos
push
dec
jmp
out
repz
push
xorb
pop
pop
adc
mov
add
dec
xlat
sbb
lret
mov
in
sbb
iret
and
push
out
fisttps
mov
fs
lods
and
outsl
lock
jge
aaa
mov
jae
insb
ss
test
fsubl
adc
sub
fidivrs
mov
cmp
loop
outsl
cmp
subl
inc
or
inc
outsl
enter
pusha
sarb
mov
fiaddl
roll
sub
repnz
mov
adc
ss
mov
mov
cmpsb
sbb
add
dec
pop
sub
scas
lret
aaa
mov
ret
addl
adc
fucom
xor
inc
inc
ja
mov
in
out
pusha
mov
and
mov
cmp
xchg
push
jg
mov
imul
clc
cmp
das
mov
sbb
test
jb
or
adc
je
jmp
push
aam
fbstp
scas
push
orb
xor
sub
pop
and
clc
jb
and
mov
push
jge
pop
ds
fwait
repz
out
aad
or
lret
fistl
sub
sub
sahf
push
cmp
pop
leave
data16
roll
mov
sub
inc
sub
or
jmp
jbe
pusha
push
in
int3
jo
jl
jecxz
popa
out
adc
cld
test
jb
out
cmp
addr16
push
cmpsb
push
mov
dec
ret
jg
pop
mov
fsubrl
fmul
inc
push
daa
mov
sub
pop
adc
out
test
les
cltd
and
dec
arpl
cmc
aam
loope
mov
inc
leave
pusha
jg
out
call
sbb
jae
dec
aad
sbb
sbb
cmp
mov
daa
and
adc
leave
jb
or
jb
int3
shrb
outsb
jge
inc
fdivl
pushf
inc
lret
jb
int3
ret
fbld
jg
fistpll
ss
popf
jne
in
pop
pop
lcall
pushf
mov
lret
cmp
xor
dec
dec
pop
enter
sub
sbb
add
dec
sub
jo
leave
inc
incl
fstps
pop
mov
cmc
sub
imul
fsubrl
and
and
pop
xor
out
lods
in
sbb
stc
nop
es
add
test
sbb
scas
push
cmp
cmp
sub
mov
mov
adc
add
mov
jo
dec
inc
xchg
sarb
imul
pushf
xor
inc
cli
cltd
lret
push
xor
aaa
pop
push
add
gs
mov
mov
mov
decb
enter
stos
or
dec
mov
cmp
cmp
cmp
test
and
pop
ljmp
mov
or
nop
mov
aas
or
leave
hlt
sub
cmp
cwtl
xchg
test
sub
sbb
push
mov
test
mov
shlb
scas
arpl
pop
xor
or
ljmp
into
cmp
lret
adc
adc
sbbb
inc
ret
inc
sub
nop
mov
outsb
out
or
cli
mov
ficoms
or
aam
loope
rcll
sbb
inc
xchg
movsb
loop
cs
push
add
movsb
cmp
inc
mov
push
sbb
arpl
inc
dec
out
cmp
sub
lahf
out
or
or
inc
les
sbb
mov
movsb
mov
out
mov
sub
das
sub
sbb
les
into
xlat
sub
inc
sub
test
test
mov
mov
pop
hlt
sbb
das
jle
xchg
pop
bound
or
xor
jecxz
or
dec
inc
inc
sbb
jo
inc
imul
arpl
cmpsb
push
xchg
test
inc
xor
testb
xchg
aaa
mov
mov
call
ljmp
aam
inc
mov
outsb
mov
popa
mov
mov
mov
mov
xchg
cltd
jb
mov
push
mov
or
ret
cltd
jge
xchg
je
xchg
mov
lea
ljmp
ja
xor
xor
repnz
xchg
cwtl
jmp
inc
xor
and
je,pn
pop
lock
mov
in
adc
dec
push
sub
jge
sbb
out
add
add
daa
jmp
test
mov
stc
push
outsl
gs
adc
xchg
inc
jbe
ds
sub
sbb
lcall
fnstenv
add
xchg
dec
sub
dec
jle
mov
arpl
sbb
push
dec
pushf
dec
xor
cs
inc
out
push
idivb
shlb
stos
std
xlat
xchg
out
jno
xor
jno
and
adc
jno
xchg
mov
xchg
repz
ss
sub
fwait
js
jge
or
xchg
mov
rol
jmp
out
jns
add
testl
jmp
outsl
push
or
xor
ja
lock
mov
js
lods
add
inc
stos
adc
cmpsl
push
mov
mov
test
jno
mov
jl
sub
pushf
movsl
xor
xchg
enter
cmp
int3
and
inc
outsl
add
dec
mov
aam
mov
inc
loope
jle
ds
lcall
stc
jo
movsl
add
loopne
lahf
cmp
mov
xor
or
or
loop
jl
out
cmp
mov
and
not
bnd
sbb
dec
in
lds
jns
pop
idivl
lds
orl
cmc
inc
mov
push
pop
fldcw
mov
mov
or
xor
add
dec
inc
inc
cld
bound
cmp
les
xor
dec
mov
out
in
pop
ds
repz
ljmp
jl
pop
sbb
insb
mov
adc
dec
mov
mov
test
fwait
pushf
test
pop
cmpsb
pop
sbb
xlat
pusha
lea
int
pusha
fwait
outsb
mov
sar
into
lret
inc
mov
adc
std
pop
inc
fs
jl
xchg
lcall
jle
orb
jns
cltd
jo
ljmp
mov
adc
inc
adc
mov
cmp
stc
sbb
sub
ret
jmp
xchg
scas
ljmp
cltd
out
mov
aaa
xor
mov
cmp
and
sbb
pop
jo
ss
arpl
xor
mov
mov
std
sbb
sbb
ficompl
and
andb
shll
push
imull
sbb
call
mov
push
cli
scas
cvtps2pd
pop
stos
in
mov
stos
mov
sub
push
mov
sarb
pop
add
dec
xchg
sbb
mov
stc
jb
and
xchg
or
sbb
lcall
inc
sub
mov
pop
cli
fisubrl
hlt
xlat
in
testl
sbb
insl
mov
pop
jbe
and
xchg
aaa
mov
mov
mov
dec
fsubs
cmp
mov
mov
lods
out
rcrb
mov
scas
sub
outsl
out
loope
cltd
pop
inc
adc
or
xchg
imul
jmp
adc
rorb
add
add
xchg
inc
loope
xchg
sub
test
inc
mov
inc
inc
push
or
pop
add
push
andb
xor
xchg
test
add
inc
add
mov
pop
pop
push
xor
aad
adcl
xchg
pushf
addb
pop
mov
pop
mov
mov
mov
pop
dec
lods
and
aad
adcl
sbb
mov
cmp
mov
sub
pushf
aaa
and
pop
outsb
inc
das
sti
cmp
les
add
pusha
sub
and
mov
mov
fisttpll
cwtl
cmp
andb
sub
test
jo
pop
adc
push
inc
xchg
inc
xor
fsub
push
int3
mov
mov
outsb
flds
push
dec
scas
xor
mov
add
push
stos
push
or
dec
icebp
test
xchg
ret
xor
adc
jle
lods
mov
call
out
imul
lahf
loop
ficompl
jge
sub
cld
lds
addr16
cs
add
jge
xchg
pop
cmp
aaa
filds
aaa
mov
data16
lods
loopne
xchg
pop
pop
cwtl
sub
push
stos
mov
out
dec
push
or
out
test
js
cmp
out
push
push
test
xorb
ret
das
loopne
mov
or
leave
xchg
push
ljmp
mov
out
sahf
push
inc
lds
ja
das
mov
fidivs
cmp
lahf
pop
sbb
div
insl
sbb
lock
cmp
imul
xor
insl
clc
sarb
push
cmp
jae
dec
sti
in
push
lods
add
xor
stos
jne
sub
test
dec
fidivs
sbb
movsl
test
xchg
jmp
mov
data16
scas
mov
xchg
xor
mov
bound
and
or
or
lret
sbb
loopne
or
shrl
pop
xor
inc
in
dec
lods
ret
sbb
sbb
xchg
push
in
nop
mov
test
or
xlat
push
enter
test
sti
mov
in
jmp
pushl
xchg
jle,pt
ljmp
pop
aas
js
add
fisubrl
pushf
inc
mov
outsl
out
mov
lock
daa
cmpsl
add
jmp
jp
mov
dec
hlt
repz
jle
pop
sahf
das
addr16
bound
push
mov
rcrl
cmpl
andb
fdivs
imul
mov
add
pop
xchg
test
push
lock
cmp
jl
add
and
stos
rcrl
xor
mov
inc
dec
adc
das
rorl
std
inc
iret
xor
xchg
push
push
sub
cltd
jl
std
fisubrs
out
or
jno
mov
mov
in
sbb
pop
cmp
xchg
cmp
dec
out
pop
ljmp
loope
mov
jmp
fimull
xlat
sbb
dec
aam
mov
fldcw
fnstcw
cli
xlat
or
in
sbb
push
mov
mov
dec
dec
adc
adcb
leave
cld
repz
call
xchg
adc
adc
lods
and
xchg
xchg
bound
cmp
and
pop
shr
push
adc
push
push
and
jo
cld
cli
dec
pushf
inc
xchg
jle
xor
mov
sbb
xorl
lods
cli
push
stos
cmp
fwait
mov
push
rep
ret
pop
push
sub
jo
arpl
sbb
pop
pop
xchg
adc
aaa
arpl
pop
mov
jecxz
shl
mov
fldlg2
bound
hlt
fistpll
out
add
and
lods
stos
aaa
pop
sub
lods
sub
decb
int
movsl
add
xchg
insb
jns
fadds
ss
dec
ret
push
cli
add
lock
push
shlb
push
sub
adc
ja
mov
fwait
rcll
sbb
clc
and
fnstsw
ds
mov
dec
pop
rcrb
add
mov
sub
add
mov
inc
fcoml
pop
xchg
inc
jl
xlat
jle
inc
mov
fldlg2
mov
or
stos
push
push
cmp
int3
or
movsb
dec
push
loope
xor
jae
loope
iret
loop
push
jg
repnz
out
leave
mov
std
aas
sbbb
add
rcrl
pop
aad
and
out
lods
outsl
std
mov
imul
mov
and
mov
js
loop
leave
adc
or
dec
inc
aaa
adc
push
xchg
leave
pop
jg
lret
iret
mov
mov
dec
stos
cltd
repz
push
lds
xorl
lea
mov
push
and
stos
icebp
out
fldcw
roll
mov
cmc
inc
pop
insl
and
ret
loop
mov
jg
data16
sar
mov
mov
cmpsb
sbb
mov
and
hlt
vpmulhuw
fwait
sbb
call
addr16
mov
or
repz
neg
nop
in
mov
mov
jg
jmp
iret
test
cld
cmpsb
xchg
faddl
test
adc
test
movl
mov
out
mov
pop
loopne
call
popf
and
dec
loope
xchg
cltd
repz
in
mov
mov
sbb
add
nop
jg
fsubl
into
xor
xlat
and
int
movsl
xchg
inc
rcll
xor
clc
xor
pop
fnstenv
dec
jbe
loop
sbb
ljmp
adc
push
sub
out
dec
add
mov
test
or
in
ss
mov
mov
or
lods
and
fiaddl
gs
fstps
in
fidivrl
outsl
icebp
mov
cmp
testb
mov
lock
test
cli
repnz
xor
lea
cmp
sbb
adc
sbb
mov
pop
js
out
pop
rcrb
scas
push
xor
jmp
into
jns
mov
sbb
jno
sub
mov
sbb
movsb
sub
push
es
bound
mov
les
imul
add
ja
repnz
pop
scas
shl
dec
push
or
sahf
into
ja
inc
fidivl
es
and
jb
fidivrs
insl
sbb
rorb
test
pop
cltd
push
pop
out
pop
cwtl
fisttpll
mov
in
inc
dec
idivb
sub
in
movsb
fsubs
xchg
xchg
adc
iret
ss
je
adc
or
repz
fildl
xchg
enter
xchg
pop
mov
aad
dec
out
xor
pop
xchg
jmp
leave
es
and
push
push
je
xchg
lods
icebp
cld
xor
add
test
mulb
hlt
pop
in
je
jmp
js
add
scas
mov
mov
mov
sbb
ss
push
push
loopne
inc
dec
sarl
fisttpl
mov
sub
mov
insb
cmp
adc
mov
cld
mov
adc
mov
mov
lret
mov
or
aad
xor
enter
sub
xlat
scas
insl
dec
mov
and
fnsave
add
cmp
jbe
sub
dec
sbb
ljmp
pop
mov
stos
push
mov
jp
inc
aad
or
mulb
pop
in
rolb
jo
dec
add
pop
call
push
cmpsl
mov
mov
iret
shrb
adc
stos
pop
xchg
jne
sub
aam
aaa
pop
clc
mov
pop
rcr
bound
and
fcoms
adc
cmovo
les
xchg
jno
or
pop
push
dec
xor
inc
jecxz
sbb
mov
push
lea
sbb
mov
mov
es
subb
push
scas
sub
xchg
pop
jmp
mov
test
test
mov
xchg
pop
sub
or
ret
jl
push
push
test
rorb
mov
in
inc
lahf
test
sbb
xor
jp
push
les
mov
rorb
into
mov
push
adc
add
cs
sbb
popaw
ljmp
orl
sub
mov
cmp
sar
pop
mov
js
lods
fucomip
repnz
add
sub
mov
fs
cmc
mov
inc
test
mov
ret
push
enter
sbb
rcrl
int
lcall
mov
mov
pop
xor
and
fiaddl
rcrl
aad
aas
repz
jge
or
cmpsl
mov
adc
mov
lret
inc
stos
cmp
dec
pop
inc
ja
ljmp
mov
mov
and
movsl
and
das
push
mov
int
mov
test
xchg
push
inc
inc
jle
or
loopne
out
lods
cmp
fldpi
pop
push
push
pushf
mov
cltd
adcl
ds
jo
cwtl
xchg
add
xor
mov
xchg
xchg
sbb
cmpsb
cmp
clc
and
inc
add
cmpsb
pop
pop
jp
in
popf
repz
mov
ja
fdivl
inc
mov
and
lret
or
jo
out
ljmp
lods
adc
clc
add
cmp
aad
dec
xor
iret
mov
fsts
add
les
sub
push
jmp
daa
lcall
inc
xchg
insb
loopne
xor
jmp
movhps
sbb
mov
mov
sbb
mov
fnstcw
stos
sub
sbb
enter
mov
mov
cmp
push
out
popf
lds
add
sub
xchg
sbb
push
mov
dec
stos
pusha
cmpsl
fnsave
push
out
cs
xchg
aaa
inc
mov
imul
push
rcl
mov
cltd
outsl
pusha
sbb
popf
pop
mov
add
ljmp
repz
cmc
idivl
mov
mov
andl
xor
arpl
inc
icebp
lock
push
sbb
xchg
repz
shrl
push
dec
cmp
or
test
aas
mov
js
cmp
scas
mov
rcr
sti
cli
popa
sbb
mov
ljmp
dec
mov
cmp
mov
andl
in
push
cmpsb
cwtl
lds
dec
lret
cmc
adc
lods
push
cmpsb
mov
cmp
idivb
jmp
enter
xchg
cmp
arpl
push
fxch
in
adc
mov
idivb
mov
sti
cmp
mov
aaa
inc
push
push
loope
movsl
scas
or
push
bound
lret
mov
leave
xor
pop
scas
in
and
jp
and
aam
sub
inc
pop
lcall
insb
lds
cmp
test
cltd
jg
mov
call
dec
xor
xchg
pusha
cmpsl
lods
jmp
adc
xor
mov
inc
in
xlat
imul
pop
fimull
inc
inc
loope
cmp
mov
arpl
mov
inc
pusha
mov
xchg
into
push
sub
lods
scas
outsl
int
rcrb
cmpsl
iret
inc
xor
rcrb
add
pop
mov
imul
je
jbe
loopne
mov
and
xchg
xchg
lds
and
loopne
cltd
mov
inc
or
push
mov
lahf
outsb
xrelease
orb
sbb
cltd
int
push
sub
aam
inc
adc
scas
mov
imul
pop
mov
loopne
xor
lcall
xor
movsl
ffreep
xor
mov
mov
dec
fwait
adcb
cmpsb
loope
aas
outsb
dec
cmp
adc
arpl
in
cmp
dec
push
mov
and
hlt
cli
mov
lea
ret
std
mov
inc
daa
cmp
fwait
xchg
stc
scas
repnz
mov
mov
inc
lret
push
pop
mov
movl
jge
cmp
out
andb
add
movl
nop
lahf
xchg
or
fbld
xchg
dec
std
stos
xor
sub
stos
ret
es
repz
xchg
shrb
pop
aas
xchg
movsb
mov
cwtl
movsl
inc
lock
xchg
lar
adc
adc
push
mov
pop
loope
xor
lcall
pushf
ljmp
andb
push
adc
mov
push
jp
or
into
mov
xorb
jbe
jle
jge
pop
cwtl
mov
xchg
pop
xchg
mov
popa
aad
mov
aam
sbb
add
in
sbb
dec
ljmp
inc
mov
push
mov
lods
pop
add
pop
jns
hlt
inc
adc
mov
cmp
mov
mov
jl
inc
insb
popf
ja
mov
xchg
mov
stos
lods
and
push
sbb
scas
leave
jge
cmp
cmp
push
and
movsl
fs
jp
cmp
mov
mov
add
mov
mov
adcl
adc
jae
mov
inc
fwait
xchg
inc
pop
out
xchg
mov
push
pop
out
and
cmp
jo
jmp
sbb
jbe
push
pusha
inc
add
cli
fsubp
sbb
cmp
pop
jb
cmpsl
popf
sbb
pop
mov
add
in
sbb
jg
mov
jne
inc
inc
push
adc
cltd
cwtl
mov
lods
mov
je
cmpsb
mov
or
fs
push
or
into
mov
mov
mov
xor
sub
enter
xor
movsb
lcall
dec
ds
int
inc
nop
and
insl
dec
iret
cmp
ljmp
sbb
fstpt
imul
mov
or
cmp
xchg
sbb
and
fnstsw
lock
outsb
mov
ljmp
into
lret
xchg
dec
push
adc
inc
movsb
or
or
add
lret
nop
adc
fisubrs
jno
inc
cmp
add
jb
or
sub
call
insl
fimull
lea
adc
cltd
repz
cld
mov
and
xlat
mov
fbstp
jp
cli
aas
mov
rcl
sub
add
loop
sub
push
test
xor
loop
mov
mov
dec
nop
cli
adc
push
mov
mov
insl
imul
jmp
arpl
std
pop
sbb
je
adc
sbb
push
lods
push
xchg
test
cld
das
sti
inc
inc
sbb
and
and
push
xchg
and
push
push
xchg
es
mov
pop
js
push
aas
xchg
sti
inc
cld
in
gs
xor
adcl
dec
test
imul
push
inc
ss
inc
addr16
enter
sbb
je
ficompl
daa
sbb
fxam
pop
push
in
test
push
adc
imul
lds
mov
imul
jne
shl
sub
pushf
add
inc
repz
stc
sub
dec
fs
or
insl
repnz
xor
jmp
or
mov
lahf
mov
shl
push
inc
addb
pop
xchg
mov
stos
in
push
cmp
mov
jae
hlt
bound
mov
test
inc
mov
push
xlat
xor
lds
mov
daa
jae
pop
outsb
ret
sub
nop
jne
mov
mov
mov
icebp
lds
lahf
gs
sub
cmpsl
ret
jecxz
repnz
jae
xor
dec
imulb
or
js
adc
stos
mov
das
adc
aas
mov
jmp
jbe
lret
add
test
add
jo
xchg
icebp
dec
add
mov
out
adc
test
je
hlt
loop
pop
adc
mov
in
test
adc
lds
sbb
mov
push
bound
cmp
pop
mov
negb
cmp
inc
fsubr
iret
dec
jecxz
aaa
push
scas
repnz
stos
movsb
int3
inc
cld
mov
out
jmp
imul
das
fidivrs
fnsave
jns
adc
mov
jg
or
dec
test
mov
imul
add
adc
cwtl
shrb
sub
mov
xchg
push
cmp
outsl
int3
mov
lods
push
sbb
sbb
clc
jnp
inc
stc
mov
or
or
dec
cli
adcl
xorl
adc
and
jns
pop
outsl
mov
insl
loop
in
fnsave
shrb
inc
jge
mov
or
sbb
lcall
scas
aam
jmp
jg
push
inc
scas
mov
mov
fneni(8087
fisubrs
lcall
lcall
in
push
push
mov
fists
mov
outsb
fdivrl
stos
insb
aaa
loopne
dec
add
lods
fcomps
pop
cmp
inc
sub
cmp
pop
mov
fcoml
aas
repnz
pop
incl
mov
jecxz
sbb
lahf
push
mov
sub
cld
add
xchg
push
lcall
lahf
cmp
out
enter
xor
stc
ds
fldcw
inc
mov
fisubl
shrl
add
inc
das
xchg
or
lods
mov
and
std
mov
pop
adc
cmpsb
push
sub
pop
stc
fnsave
jnp
jp
cmpsb
jl
stos
cmp
flds
xchg
aas
shrl
push
mov
andl
outsl
jo
icebp
test
xor
mov
or
adc
cld
shlb
inc
rcrb
gs
adc
fwait
cmp
mov
dec
test
jae
and
lods
jae
stos
inc
cmp
pop
mov
data16
outsl
jl
inc
test
xchg
and
xchg
out
jo
add
sub
sar
dec
mov
in
xchg
jl
jg
pop
inc
ja
mov
lods
rolb
stc
lods
push
lret
mov
aaa
in
adc
jg
nop
fadds
subb
push
sahf
jecxz
xor
mov
es
sbb
jp
add
jae
ret
jns
fs
push
mov
add
jne
fcoml
mov
jge
xor
inc
cs
xorb
xor
je
enter
sub
jg
cltd
cmpsb
add
cmp
test
mov
xchg
jae
cltd
push
mov
clc
xchg
sub
fldt
sub
into
jle,pn
push
movsb
call
std
xchg
xor
mov
inc
mov
jo
stos
loop
cmp
iret
push
lahf
and
mov
stc
adc
lock
mov
pop
inc
mul
xor
push
mov
movsb
jne
xchg
pop
push
and
mov
dec
mov
mov
arpl
cmpsl
out
call
push
add
mov
and
pop
cmovl
imul
fiaddl
dec
popf
fidivrl
in
daa
aam
rorb
outsb
movsb
jge
cmp
mov
aad
jecxz
test
jbe
push
leave
inc
adc
daa
jns
ss
in
xchg
xor
outsl
aaa
faddp
outsl
les
or
lret
inc
les
nop
lods
addl
stos
inc
cmp
rcrb
add
add
sbb
in
loop
or
dec
movsb
pop
sbbl
adc
sarb
cmpsl
mov
fidivl
pop
cmp
mov
mov
loopne
es
cwtl
add
pop
lret
mov
mov
cmp
push
push
add
test
mov
push
and
loop
mov
lock
hlt
lcall
xor
in
div
xchg
push
subb
xor
hlt
or
cmpsb
jne
push
aad
popf
int
add
rclb
ljmp
or
jo
and
xchg
xor
push
or
dec
dec
outsl
mov
rcrl
pop
push
pop
mov
inc
dec
sbb
mov
test
inc
xor
xchg
je
inc
in
pop
clc
lret
lds
dec
stos
int
pop
push
adc
stos
enter
mov
dec
in
leave
wrmsr
addr16
fs
aaa
mov
int
sti
lret
outsl
lcall
pop
fwait
out
popa
les
pop
sahf
fistpl
mov
mov
addr16
aad
add
dec
addr16
orb
int
divl
xor
jg
ficoml
lock
xchg
addr16
jbe
lock
sbb
cmp
xor
les
jl
icebp
in
mov
jle
dec
imul
mov
call
cmp
mov
cwtl
repnz
loopne
xchg
jp
hlt
xchg
dec
add
gs
push
cmpsl
dec
outsl
cmp
pop
shrb
fwait
dec
ret
inc
mov
sub
aaa
inc
adc
sub
inc
fistps
rcrl
movsl
out
adc
in
jmp
xor
mov
xlat
stos
pushf
mov
fsub
popa
xor
sbb
popa
sahf
je
jp
push
xchg
cmp
mull
rcrb
jno
mov
push
out
call
pop
cmc
xorl
or
cmp
pushf
gs
mov
mov
add
int3
clc
jnp
mov
push
or
push
dec
add
push
push
jo
imul
cmp
stc
addl
mov
or
push
sub
pushf
jl
add
mov
jmp
popf
cltd
jnp
or
in
mov
sbb
pop
sbb
imulb
lods
jnp
and
xchg
sub
das
pop
xchg
popf
jp
sbb
mov
inc
add
test
mov
out
testb
cmp
xchg
mov
xchg
add
mov
fnstsw
add
popa
es
mov
pavgw
or
loopne
testl
ss
push
and
out
or
int3
pusha
mov
sub
loope
fiadds
jg
jbe
das
pushf
jecxz
push
sub
mov
sub
popa
loop
insb
dec
pavgw
leave
xor
repz
clc
mov
mov
or
cmp
test
jg
push
nop
rol
push
iret
lahf
mov
jp
js
ds
jmp
push
gs
hlt
in
mov
jmp
imul
sti
xor
int3
frstor
xchg
cmp
cld
aaa
stos
movsl
lahf
cs
push
pushf
pop
ret
jmp
in
push
orb
jns
dec
add
xchg
gs
xor
aaa
dec
jns
or
adc
sbb
mov
arpl
cli
pop
icebp
arpl
push
jns
ljmp
stos
stos
adc
mov
xchg
lret
jl
xchg
add
pushf
aam
xchg
inc
xlat
lock
push
fneni(8087
addr16
jns
inc
aas
dec
aad
out
inc
push
xchg
ficomps
add
inc
dec
insl
sbb
inc
adc
cmc
call
inc
cmpsl
mov
pop
test
cs
sub
fcmovbe
icebp
arpl
mov
pop
daa
push
out
int
lea
int3
ret
inc
adc
mull
mov
sahf
push
adc
outsb
adc
pop
nop
shll
inc
jle
les
xchg
sbb
loopne
inc
add
frstor
iret
aaa
xchg
sbb
insl
stos
and
push
push
push
adc
mov
mov
popf
mov
jecxz
inc
xchg
adc
subb
add
ljmp
daa
push
jns
pop
push
imul
repnz
out
outsl
jne
popl
insl
pushf
icebp
ja
pop
into
push
jnp
into
insb
push
or
mov
mov
inc
sbb
push
dec
pop
cld
dec
insl
add
arpl
mov
sti
sbb
test
stc
jge
jns
or
mov
insb
dec
inc
inc
and
out
repnz
push
sahf
mov
add
sub
sbb
ja
or
mov
out
adc
push
int3
insb
popa
push
dec
pop
pop
lret
arpl
push
and
addb
ljmp
cmp
xchg
cmpb
sbb
mov
test
stos
inc
sub
fcomp
rcll
add
pop
push
xor
shrb
cltd
popf
negb
mov
dec
nop
pushf
bound
cwtl
sbb
hlt
sbb
cmp
xlat
jnp
lea
push
aaa
andl
xchg
dec
and
or
adc
mov
cs
fcoms
mov
in
iret
adc
sahf
test
mov
cwtl
jle
cmc
cli
dec
inc
mov
mov
mov
xchg
adc
ss
in
push
andw
sahf
arpl
loop
shll
mov
xor
iret
cmpsl
sub
mov
cmp
or
or
ret
ret
add
sbb
mov
push
repz
dec
loopne
in
call
push
or
xorl
add
in
sub
xor
jg
sub
mov
jns
mov
inc
cmc
push
or
insl
mov
mov
or
mov
leave
clc
loop
sub
test
notl
mov
xchg
jecxz
fucomip
dec
sub
xor
inc
sti
adc
pop
jo
sbb
jl
xor
mov
xor
jmp
mov
mov
push
andl
in
xchg
iret
sub
inc
les
inc
cli
lds
or
xchg
xor
fnstsw
xlat
jmp
iret
push
stc
xor
leave
cmpsl
outsl
mov
sti
out
outsb
popa
loope
jl
in
pop
jp
testl
mov
mov
je
pop
jmp
jle
jb
aad
sbb
lods
out
sahf
jnp
jmp
lcall
or
mov
sub
or
jo
jb
mov
roll
push
inc
call
decl
into
pop
xchg
shlb
orb
aaa
pop
iret
add
popa
mov
hlt
jns
mov
cmpsl
bound
ror
and
mov
fnstenv
cmp
jmp
mov
int
test
sbb
jno
sbb
mov
in
jnp
notb
pop
fwait
lods
sbb
dec
arpl
movb
xchg
jae
or
in
or
lea
roll
sub
xchg
loop
and
xor
cmp
push
add
jno
lds
testb
mov
pop
xor
outsl
or
gs
mov
in
dec
cmp
cmpsb
repz
or
mov
fimuls
icebp
mov
out
out
ret
mov
sti
ss
jo
imul
adc
stos
mov
stos
jne
xchg
jo
push
or
jge
rcrb
leave
add
jo
rep
flds
sbb
loopne
inc
adc
das
dec
push
cwtl
test
test
subl
orl
aam
ret
mov
add
aas
xor
xchg
les
mov
dec
cmp
adc
fsubp
lock
xor
sahf
in
sub
shlb
mov
mov
mov
enter
mov
mov
orb
mov
into
sub
jecxz
stos
xchg
nop
xor
rclb
xor
or
push
mov
mull
pushf
pop
jg
pop
out
pop
jnp
lcall
lahf
lcall
popa
jae
push
push
test
subl
mov
mov
ljmp
jl
push
mov
repnz
and
jmp
fmuls
push
stos
dec
ss
mov
mov
addl
fmuls
inc
in
gs
pop
sahf
dec
mov
lcall
rcrl
pop
ja
pop
mov
cmp
call
test
scas
xchg
aam
negb
adc
hlt
inc
push
vmovaps
mov
fs
out
cmpsb
mov
jo
dec
in
mov
fmull
mov
lods
mov
adc
pop
or
push
xchg
xor
or
dec
push
lods
pop
jmp
ret
push
mov
addr16
push
inc
jno
mov
cwtl
push
js
enter
test
stc
jo
push
repz
adc
bound
pushf
add
mov
pop
push
lods
in
jne
stos
sbb
dec
or
add
push
lret
faddp
int
repz
stc
aad
in
cmpsb
cmp
and
lods
int3
push
cmpsl
test
inc
push
insl
push
mov
leave
sbb
ja
in
push
jg,pn
loopne
fcompl
xchg
pop
dec
sbb
cwtl
test
sub
in
ja
adc
cmp
sub
sbb
test
push
sub
cltd
mov
ss
lret
adc
xor
daa
movsb
in
repz
int3
sar
cli
loopne
repnz
pop
fists
loop
jae
mov
ret
jno
jnp
stos
mov
pop
add
jne
jae
pop
jecxz
mov
mov
jle
pop
mov
mov
push
mov
bound
xlat
mov
push
ljmp
out
lahf
and
lcall
mov
jmp
int
sub
push
cwtl
stos
push
push
sub
sub
shll
das
mov
arpl
dec
insl
pop
fidivs
push
shll
sub
push
pop
pushf
nop
mov
cltd
sarl
xor
dec
stos
jb
pushf
push
pop
sub
iret
sub
dec
xchg
ret
pop
std
daa
mov
fisubs
jo
cmp
xchg
dec
repnz
jb
shll
mov
mov
mov
sbb
and
sbb
push
shrl
and
mov
or
mov
testb
jb
xor
das
inc
arpl
negb
pop
dec
lods
adc
pop
pop
sahf
imul
mov
pop
cmp
shrl
lahf
pusha
and
jbe
mov
mov
leave
rcrb
push
std
inc
dec
fisttpl
dec
call
jmp
push
sub
mov
frstor
sbb
loop
int
inc
or
xchg
leave
rorl
dec
sbb
mov
dec
das
xchg
or
lds
inc
std
fiaddl
je
iret
int3
lcall
jne
insb
jae
sarb
add
incb
sub
pop
repnz
daa
sbb
leave
sub
pop
in
jmp
mov
mov
fucomp
in
stos
and
xor
in
mov
rorb
into
leave
popa
arpl
rcl
es
add
adc
outsb
addl
sbb
jmp
mov
sarl
sbb
mov
movsl
push
mov
xchg
push
adc
notl
sub
jns
popf
lea
fwait
and
jmp
inc
sarl
xchg
andb
ret
or
and
cmp
and
cli
jmp
rclb
iret
push
sbb
add
or
or
icebp
jp
sub
pop
and
xor
sbb
xchg
in
shrl
pop
cmp
stc
ds
rcrb
ss
sti
fldl
mov
dec
xchg
mov
xchg
sbb
cmpsb
negl
ds
fimull
nop
dec
lock
dec
or
cmpsl
popa
outsl
rorb
dec
mov
aad
cmp
lea
add
push
imulb
sbb
jne
sbb
inc
push
dec
add
push
mov
test
cld
lds
or
ss
jecxz
test
push
mov
cmc
xchg
mov
cld
xor
fisubrl
sub
popf
dec
push
fbstp
addr16
aad
add
jl
inc
push
dec
xlat
pusha
loopne
and
jmp
into
es
mov
fldl
cli
roll
outsl
int
adc
in
mov
lock
out
subb
test
cmp
mov
add
clc
cmp
fisubs
cld
shrl
mov
mov
adc
lds
repz
mov
mov
daa
int
popf
seto
lret
or
pop
shlb
sub
std
cmp
jle
aam
shrb
push
dec
mov
in
pop
xor
inc
ret
mov
lds
mov
jns
cmp
int
inc
sbb
adc
cwtl
int
out
adc
das
int
xchg
movsb
daa
pop
lret
loope
clc
sub
mov
inc
repnz
leave
mov
fwait
test
fsts
add
or
inc
pop
inc
lahf
push
jg
dec
adc
stos
add
gs
pop
cmp
gs
sub
fadds
dec
and
popf
lcall
popf
xorb
jns
imul
xor
sub
pop
in
sub
pusha
mov
sbb
push
das
mov
mov
sbbb
cmp
lea
or
les
push
cwtl
repz
mov
jl
ja
and
insl
rcl
xor
mov
pop
lods
pop
and
cmp
test
and
mov
arpl
out
inc
mov
icebp
inc
mov
cmp
daa
dec
or
aad
pop
addb
aas
into
jl
lds
mov
repnz
daa
or
lahf
ljmp
call
or
and
lret
incb
jmp
adcl
inc
xor
out
ret
or
sarl
aam
gs
jb
imulb
sub
sub
pop
pop
mov
adc
pusha
out
fbstp
js
push
cmpsl
scas
dec
jae
mov
push
mov
insl
add
pop
test
inc
adc
dec
mov
fdivrs
xor
scas
testl
pushf
ss
mov
filds
cmp
aas
popf
xor
arpl
mull
or
cs
out
pusha
lods
rcll
ret
sti
das
fwait
pop
pusha
sbb
ret
imul
or
pop
cmpsl
sti
js
jbe
or
adc
mov
std
xchg
mov
fimull
mov
inc
decl
movsl
test
mov
push
lds
sbb
jg
jl
or
push
xchg
and
shll
mov
and
nop
fwait
mov
mov
xchg
xor
in
stos
push
inc
mov
sti
aad
int
xor
in
inc
mov
inc
sbb
outsb
xor
lret
mov
out
xchg
in
leave
cmpsl
jo
cltd
jge
iret
cmp
fists
mov
sub
xchg
adc
xor
stc
mov
or
and
hlt
add
sbb
jno
addr16
fisttps
ret
dec
stos
mov
fs
xchg
xchg
arpl
add
mov
mov
push
jns
into
sbb
dec
mov
push
push
sbb
into
das
adc
aas
scas
dec
inc
mov
leave
jnp
or
lcall
inc
jmp
repnz
mov
mov
sbb
mov
xchg
fists
sbb
fiaddl
pop
xor
das
sub
dec
push
out
loopne
mov
enter
shl
cmp
push
sbb
jl
in
push
leave
fs
push
ds
jge
inc
cmpsl
hlt
sbbl
ljmp
leave
inc
std
sub
or
xlat
adc
push
add
sti
adc
in
mov
je
cmp
pop
and
and
mov
and
push
mov
mov
or
mov
sbb
xchg
lock
mov
mov
xlat
and
loope
pushf
scas
ja
inc
cmpsl
mov
xchg
xor
and
inc
or
gs
mov
addr16
mov
idivl
pop
leave
enter
xchg
outsb
shr
int
adc
aam
inc
jne
dec
out
fcmovnbe
inc
xchg
xchg
das
movsb
xor
ret
addb
mov
cmp
out
shll
mov
mov
or
mov
out
aaa
mov
mov
push
cmp
xor
sahf
add
cltd
and
fsubrs
push
ret
test
imul
idiv
jge
out
pmovmskb
in
mov
movl
testl
jge,pt
rcrl
lret
xchg
shll
ja
jno
lahf
and
xor
test
and
mov
sub
out
cltd
add
mov
mov
mov
jbe
jo
mov
icebp
inc
fistl
leave
sarl
clc
jae
mov
push
lock
leave
scas
mov
aaa
addr16
and
enter
fnsave
xor
cmp
and
sub
mov
pop
mov
add
lock
cli
adc
pop
xchg
inc
in
or
inc
jg
mov
mov
mov
jg
cmpsb
fwait
outsl
mov
or
jo
jl
lret
mov
push
les
fsub
adc
lods
inc
movsl
mov
jge
xchg
lds
mov
add
add
add
sbb
add
add
repnz
scas
fists
fsubl
cmp
nop
mov
sahf
xchg
push
adc
dec
adc
and
jge
aaa
lock
mov
sub
dec
mov
jle
jbe
adc
int3
mov
les
xchg
cmp
push
sub
mov
add
or
and
pop
dec
repz
xor
pop
subb
call
sub
mull
sahf
mov
or
inc
imul
push
push
xchg
xchg
sbb
sbbl
stos
sahf
mov
dec
in
add
add
pushf
fcoms
int
shrl
in
notl
jmp
sbbl
xchg
andl
push
in
mov
jmp
es
insb
leave
add
andl
cmpb
add
add
add
xchg
stos
outsl
adc
and
int3
enter
enter
xor
adc
insb
scas
dec
dec
das
and
jo
cmp
mov
popf
leave
je
aaa
jne
cs
xor
pop
mov
inc
mov
pop
popf
push
fidivl
je
pop
ss
fsubrl
dec
in
int3
mov
in
or
adc
xchg
ja
fistps
mov
pop
leave
sub
mov
push
mov
mov
dec
mov
in
js
or
subb
into
stos
fmuls
lea
imul
rclb
orb
xchg
sbbl
push
lods
sub
insb
inc
cld
xchg
movsb
jle
popa
xchg
ljmp
mov
add
movsb
std
stc
and
adc
pop
mov
es
pop
push
mov
jge
lds
adc
xor
aam
add
sub
loopne
repz
sbb
roll
fs
dec
arpl
in
mov
roll
out
out
adc
jbe
aaa
jp
data16
repz
add
test
jge
test
lret
rorl
mov
xchg
or
xor
lea
jge
jl
leave
das
or
jecxz
xor
insl
sahf
xor
inc
cltd
add
movsl
inc
mov
shrb
jl
bound
pop
pop
xor
lahf
cmp
xchg
sub
mov
lcall
add
test
jp
repnz
std
pop
les
or
fwait
jp
int
mov
mov
jmp
add
xchg
mov
rolb
in
fsts
outsl
and
lcall
fcomps
mov
out
enter
jle
jno
clc
sub
cmp
dec
dec
movsb
mov
sbb
bound
gs
aas
int3
fidivs
adc
mov
out
in
push
cmp
loope
mov
pop
ss
ljmp
or
cli
orl
pop
sahf
mov
sbb
sub
adc
loop
push
sbb
mov
outsb
mov
aaa
cmp
lea
js
ret
sti
sub
jg
jnp
aad
mov
fistps
mov
jg
dec
mov
xor
or
jne
push
in
mov
xchg
in
jmp
in
jnp
movsl
fnstcw
mov
sbb
fisttpll
mov
inc
pop
inc
cltd
jl
pop
icebp
inc
sub
mov
xchg
pop
xchg
nop
cmp
fnstsw
popf
xlat
pop
out
gs
xor
mov
ja
xchg
pop
sahf
sti
dec
cmp
pop
lea
repnz
jae
jbe
enter
or
fcomps
inc
cmpl
add
inc
mov
sub
paddusw
into
sbb
dec
cwtl
pop
sub
fnstenv
pusha
cmpsb
inc
sub
ss
mov
lods
inc
iret
call
lock
fwait
or
sarl
jne
xchg
lods
mov
arpl
lret
int3
inc
cli
aad
sbb
fisttpl
mov
leave
mov
mov
sbb
or
xor
cmpsb
sub
fildl
rorl
xchg
xor
mov
test
aam
in
imul
mov
mov
add
dec
jl
xchg
dec
sbb
cmp
mov
adc
jo
dec
and
test
data16
leave
cld
push
dec
adc
pop
mov
outsb
push
popf
adc
cli
adc
or
mov
xchg
into
cmp
mov
push
stc
jl
outsb
add
push
add
mov
sub
std
into
mov
call
push
loop
push
mov
add
xor
mov
in
push
ljmp
add
fucomp
push
pop
js
hlt
xor
aad
jbe
cwtl
xchg
aas
ljmp
mov
loopne
cmc
fisubrl
outsb
xchg
dec
cmp
fsubrl
xor
push
test
push
loopne
and
lds
js
in
push
int3
movsb
out
idiv
cmp
cmpsb
inc
lea
sub
inc
jecxz
pop
mov
sahf
fldcw
jns
sub
or
pop
fmull
or
lea
rcrl
mov
je
ret
lret
out
mov
mov
inc
or
push
mov
mov
push
call
test
gs
xchg
xchg
xor
mov
lds
pop
cmp
insb
popl
adc
xchg
cltd
shll
pusha
addl
mov
cmp
add
ljmp
add
xchg
xor
or
ret
jae
ret
clc
mov
mov
imul
aas
lods
xchg
jb
or
or
mov
ret
sub
jno
pop
sbb
and
movsl
shl
fadds
into
inc
dec
sub
fxch
negl
popa
popa
jnp
mov
stos
mov
test
lcall
cmp
jg
sub
add
cwtl
std
aaa
nop
fisubs
insb
sti
and
push
adc
inc
push
aad
inc
cmp
ficomps
sbb
loopne
jl
pop
and
ds
mov
or
mov
hlt
icebp
dec
mov
pop
inc
and
mov
fs
pop
push
rolb
stc
loope
hlt
xorb
fsubrs
mov
sahf
mov
daa
cmpsl
loopne
fisttpll
push
lahf
push
mov
popf
mov
push
movsl
das
cmp
fs
inc
mov
mov
or
adc
mov
cltd
enter
int3
jmp
dec
xchg
sbbl
and
hlt
fcom
dec
jbe
push
mov
add
xchg
scas
inc
jnp
cmp
jg
mov
loopne
pop
fstpt
jb
es
or
lods
cmp
mov
and
sbb
arpl
in
ljmp
bound
jb
jbe
mov
jecxz
cmpsb
mov
jmp
fiadds
inc
adc
dec
sub
dec
neg
push
hlt
dec
xor
jb,pt
loopne
push
xor
iret
xchg
inc
nop
xlat
xchg
arpl
and
pop
add
pop
cmpsb
inc
cltd
jo
leave
inc
sub
adc
sub
push
gs
push
mov
pop
call
dec
sub
loope
mov
jno
mov
fisttpl
xchg
cmpsl
mov
cmpsl
and
mov
bound
in
inc
repnz
ljmp
fcoms
ficoms
mov
or
inc
and
addr16
out
xchg
jg
pop
addr16
mov
push
mov
inc
xlat
lahf
aaa
adc
int
shlb
adc
es
movsb
adc
sbb
jo
cmp
orl
mov
imul
sub
imul
xor
sbb
cmpl
addl
imulb
sbb
adc
fisubrl
dec
dec
cld
rcll
pop
and
test
es
or
sub
pop
out
cmp
mov
jp
leave
dec
sbb
jne
and
dec
shl
leave
jno
mov
jne
mov
jecxz
and
mov
or
testb
sub
jb
mov
inc
rclb
test
cmp
push
test
call
add
and
xor
leave
push
jecxz
jl
mov
jg
lds
pop
imul
ds
and
dec
inc
insl
adc
and
jecxz
shlb
jmp
lock
cmp
adc
sbb
xlat
add
in
push
push
add
sar
jnp
out
xlat
jp
sub
push
fcomps
jbe
mov
cmp
mov
mov
jp
movsl
icebp
xor
or
add
test
dec
add
inc
add
and
stc
fnsave
xor
mov
mov
push
push
pop
push
lea
loope
xchg
jb
xorb
inc
aaa
lret
jae
cmc
test
jecxz
enter
shrb
mov
sti
outsb
cmp
andb
aas
subb
imul
fs
outsb
es
leave
pop
mov
jne
ret
jecxz
mov
shlb
lds
mov
out
add
adc
sahf
aam
sbb
adc
adc
ficomps
mov
pop
mov
push
pop
lea
pushf
adc
mov
lods
cmp
inc
mov
lcall
pop
imul
inc
outsb
cmp
cmp
cmp
push
adc
mov
imul
jp
fs
jecxz
testl
mov
fstps
or
test
lret
inc
mov
add
mov
adc
pop
xchg
ret
popa
adc
xchg
add
pop
js
mov
inc
xchg
mov
pop
bound
sbb
stos
loop
pusha
adc
gs
mov
sbb
clc
scas
call
repz
pop
stos
ret
mov
in
add
xor
jne
push
mov
xor
lea
lcall
cmp
dec
mov
xchg
clc
popa
daa
js
sbb
jne
fucomi
mov
es
ret
push
xchg
outsl
mov
pusha
xchg
mov
test
sub
stos
mov
and
lea
fwait
stos
cmpsb
jl
push
mov
notb
push
dec
cld
lea
out
jnp
cmpsl
mov
pop
adcl
mov
add
mov
adcb
cmp
and
out
popa
push
xchg
jmp
cs
xchg
jecxz
inc
mov
mov
mov
sbb
dec
adc
inc
pop
pop
shlb
xchg
mov
aam
sub
stc
adc
je
jbe
fucomi
inc
add
js
pop
lods
add
jns
add
cmp
nop
mull
pop
mul
xchg
pop
ficoms
add
test
orb
mov
mov
pop
popa
das
cwtl
mov
and
ljmp
jmp
mov
std
aas
pop
das
hlt
testl
adc
gs
jne
push
loop
push
leave
mov
ss
test
adc
inc
cmc
cmp
push
jae
into
dec
mov
dec
xchg
mov
cmp
inc
mov
int
in
ds
sti
sub
or
or
movsl
pop
test
mov
test
push
pop
cwtl
movsl
pop
pop
mov
scas
jno
pop
iret
cltd
std
sub
mov
pop
mov
shlb
pop
aaa
mov
hlt
xchg
xor
mov
sub
aad
or
pop
dec
mov
lea
mov
aas
xor
dec
lcall
inc
mov
sub
sub
out
gs
or
xlat
icebp
pushf
scas
mov
sbb
aas
sbbb
and
in
and
jl
cmp
jae
mov
popf
mov
xchg
xor
mov
mov
sub
mov
ret
mov
pusha
shrb
pop
sbb
je
cmp
dec
les
leave
or
imul
mov
jle
sarl
inc
loop
dec
xchg
push
addr16
mov
andl
jb
mov
or
add
lods
lcall
dec
and
adc
fdivrs
rcl
fstps
mov
shlb
int3
movsl
adc
lock
lcall
xor
cmp
arpl
sahf
pop
aam
shll
pop
lret
mov
mov
fidivrs
xlat
pop
or
fsubs
divb
fcoms
push
mov
das
cmp
fistps
faddp
sub
insb
test
jno
pop
mov
rep
add
test
sub
inc
jmp
adc
push
pop
daa
incl
bound
or
and
mov
mov
mov
test
mov
fstl
mov
pop
cmp
or
sar
js
jge
lahf
imul
psadbw
ljmp
dec
stos
pop
adc
out
clc
fiaddl
jmp
stos
loope
stos
xchg
adc
inc
sbb
jl
pushf
mov
sbb
fldcw
outsb
mov
sub
dec
sub
sarl
inc
outsl
movsl
inc
dec
sahf
sub
jno
cmc
inc
rcrl
iret
jge
pop
push
pop
stc
dec
jb
hlt
dec
sub
mov
insl
sbb
clc
shll
test
mov
cmp
dec
imul
dec
mov
lds
popa
repz
sub
fidivrl
cmpsl
push
jmp
repnz
add
pop
daa
fwait
or
mov
lret
mov
xchg
jbe
inc
ss
repnz
call
pop
sub
fcmovnb
jecxz
xchg
and
into
in
cld
jae
pop
sub
stos
pop
xchg
enter
mov
jns
or
jmp
jno
sbb
push
adcb
les
sti
outsl
push
ja
push
outsl
mov
pop
out
daa
push
adc
mov
fstl
mov
mov
mov
pop
and
push
fmull
sbb
cmp
or
adc
pop
sbb
frndint
add
in
cmp
fldcw
adc
out
pop
aam
mov
adc
shlb
mov
repz
call
push
decl
out
and
mov
add
xor
add
xchg
xor
enter
out
pop
mov
jns
and
movsb
sti
pop
push
in
mov
lea
xor
es
adc
out
inc
pop
adc
clc
sbb
stos
xchg
js
aaa
xor
and
xchg
jae
mov
lods
inc
add
push
or
sub
sahf
pmaxub
incb
insl
lds
dec
push
movsb
repnz
lods
pop
adc
push
lods
test
nop
xchg
les
jne
sub
rcl
inc
lret
jo
adc
lcall
pushf
fisubl
cmpsb
scas
repnz
lret
dec
or
popa
and
jp
sbb
aas
cmp
adc
pop
adc
std
movsl
in
mov
xorb
mov
int
stc
dec
inc
mov
adc
cmc
test
xlat
xchg
test
mov
fisttpl
adc
jle
xchg
loope
add
out
cmp
and
scas
fdivs
shr
lcall
push
xchg
cmpsb
pusha
adc
filds
inc
pop
fildll
dec
cmp
popf
or
ljmp
popa
cmp
addr16
aaa
jo
sbb
inc
mov
and
std
adc
xchg
out
lea
add
push
cwtl
mov
push
sahf
in
push
cmpsb
mull
rolb
mov
jns
std
push
test
mov
inc
test
cli
jnp
mov
and
js
cld
push
cmp
les
cmp
ja
xor
or
nop
in
jge
lret
mov
xor
jnp
dec
lock
mov
adc
in
xchg
sub
push
pusha
xor
push
cmp
xchg
push
fdivrl
inc
inc
jp
insl
fisttps
addb
dec
movsb
or
pop
or
repz
daa
and
inc
js
mov
sarl
sub
cmp
sbb
add
in
jge
lahf
inc
xor
jmp
xor
adcb
pop
lret
scas
jns
push
arpl
push
lcall
xor
enter
je
rcll
clc
dec
imul
pop
int3
xchg
fisubs
into
jne
in
shll
dec
dec
mov
das
pop
xchg
mull
hlt
and
adc
cwtl
sbb
jo
addl
jecxz
jns
mov
inc
inc
dec
je
mov
mov
in
dec
in
andb
xchg
dec
int
xor
inc
jmp
xorb
mov
cmp
mov
inc
or
cmp
mov
and
sub
jl
cmc
cmp
test
xlat
inc
pop
mov
xor
pop
aas
and
cli
xchg
mov
pop
xchg
test
rcl
push
push
cs
dec
into
addr16
pusha
inc
leave
lret
push
jb
mov
xchg
fnstsw
cld
lods
decl
std
ljmp
test
mov
xchg
add
sbb
xor
and
mov
inc
flds
jb
xor
outsl
in
pop
push
jae
xchg
in
inc
lods
pop
fimull
add
inc
and
lcall
pop
cmp
stos
lret
in
repz
mov
scas
fucomip
add
cltd
rcl
aad
jg
into
cs
xlat
inc
negl
ss
lods
movsl
add
jmp
or
mov
or
jbe,pn
adc
fcoms
or
rorl
int3
and
lods
jg
cmp
shrl
jl
mov
pushf
jmp
pop
sbb
mov
mov
mov
cmp
lods
dec
adc
lods
xchg
dec
sbb
push
mov
inc
push
arpl
add
rclb
sbb
int
test
js
movsl
sarb
test
sbb
ja
or
xlat
mov
test
movsb
icebp
and
ror
enter
jecxz
xchg
cmpsb
loop
ss
cmp
mov
sub
mov
mov
sbb
mov
or
mov
nop
mov
pop
fcomps
dec
fsubs
sub
xor
enter
mov
ret
rcrl
push
subl
pop
jb
add
sbb
ret
adc
jo
sbb
mov
out
out
call
outsb
or
jo
cmp
hlt
loopne
push
sbb
aam
jbe
push
fld
movsl
mov
mov
sti
ljmp
jae
mulb
fnstenv
adc
adc
push
adc
add
add
jne
xchg
fisttpll
fldenv
xchg
cltd
mov
xor
loop
inc
mov
and
or
mov
adc
movsb
xchg
adc
jl
mov
add
pop
mov
adc
in
loope
fcomps
imul
xorb
popa
adc
mov
sub
fld
cmp
fs
add
jne
jns
cmp
or
sub
push
jl
and
push
mov
xchg
cmp
push
jnp
pop
xchg
add
test
sbb
mov
pop
mov
es
push
lret
xchg
jnp
push
dec
cld
clc
mov
xor
pop
add
pop
scas
scas
jae
fmulp
clc
fwait
mov
clc
adc
pushf
rclb
sarl
pop
sbb
jnp
dec
ss
dec
adc
mov
out
jae
adc
nop
dec
xchg
fucomip
or
shrl
push
xchg
add
imul
rclb
addb
insb
push
in
notb
adc
js
mov
jbe
int3
cmc
pop
ret
cld
xchg
sahf
cmp
popl
cli
xchg
sbb
pop
pop
in
mov
or
lods
loopne
inc
lcall
cmpsl
testl
stc
mov
and
push
inc
push
mov
in
mov
out
push
or
icebp
in
jle
leave
xchg
xchg
and
pop
insb
test
es
adc
ret
fcoms
roll
cmc
push
sub
mov
aad
mov
pop
add
in
ffree
lds
lcall
fldcw
inc
mov
mov
insl
imul
xchg
cmp
adc
add
or
jnp
push
cmp
call
cltd
rol
or
sub
cwtl
cwtl
sub
push
sbb
sbb
es
test
fistpll
gs
ljmp
stos
adc
jns
nop
hlt
test
cmp
fsincos
inc
push
dec
add
pop
mov
insb
push
jg
iret
dec
aam
test
loop
aam
mov
cmp
mov
fcmove
aaa
fldenv
in
add
xlat
inc
out
movsb
das
pusha
pusha
mov
sahf
add
xchg
jnp
push
call
sahf
or
sub
mov
sbb
pop
inc
fildl
sbb
or
outsb
out
in
sub
dec
div
sti
or
hlt
inc
add
pop
inc
push
mov
dec
pop
or
movsb
xor
ss
iret
sub
pop
jae
mov
push
push
aam
jb
aas
sar
inc
sti
and
pop
sbb
mov
data16
aas
xchg
sub
das
adc
fdivl
pop
out
mov
xor
aad
pushf
fwait
aas
mov
rolb
ss
jl
inc
adcb
cmp
jg
aam
rolb
mov
idivl
cmp
xlat
mov
sbb
adc
in
aad
add
sti
pop
mov
push
dec
cmp
lcall
pop
scas
movsb
shlb
mov
jmp
jle
push
hlt
ret
push
mull
int
xor
jl
push
jp
out
lcall
mov
or
scas
lahf
push
xlat
lods
enter
jge
pusha
mov
push
mov
decb
int
scas
cmpb
lret
iret
lds
stc
fsubs
cmpsl
repnz
cltd
mov
icebp
sbb
js
mov
cmpsl
sarb
fisubrs
loop
xchg
clc
sub
test
jge
push
mov
lret
imulb
call
or
sub
cmpsb
shrl
push
lret
mov
pop
pop
iret
std
clc
or
adc
add
adc
loope
push
daa
insl
les
lcall
test
lds
dec
sarb
je
xrelease
lock
cmp
adc
lcall
dec
ret
mov
leave
int
push
out
fimull
lret
mov
lahf
xor
mov
pop
stos
jmp
dec
xchg
add
add
std
adcl
inc
imul
hlt
call
movsb
pop
dec
xchg
xchg
push
or
and
jns
jne
sub
addr16
loopne
push
inc
imull
fsts
stos
icebp
shrb
inc
in
std
fdivr
push
adc
inc
mov
stc
inc
addps
xchg
dec
xorl
sahf
or
int
push
fistpll
xor
mov
pop
adc
xor
scas
test
cs
adc
xlat
adc
fisubs
movsb
mov
xchg
push
scas
xchg
push
add
sub
push
cmp
xchg
incb
jp
es
sbb
adc
pop
aam
int3
and
push
jmp
mov
dec
mov
xor
push
pop
xorl
aas
and
cmp
inc
xchg
js
xor
dec
cmpl
pop
xchg
mov
dec
push
stos
mov
out
mov
mov
or
data16
jl
mov
jns
jb
mov
popf
xchg
nop
pop
mov
rcl
xor
sbb
jne
cmp
loop
push
je
test
adc
popf
cli
xor
jg
cmp
fcmovnb
and
loop
fwait
jge
popf
dec
test
xchg
xor
jb
cmp
inc
adc
push
pop
push
xchg
mov
test
pop
push
add
xchg
cli
jmp
xor
fcmovnb
sarl
jmp
in
mov
fidivl
test
daa
in
aas
mov
dec
pushf
jp
cwtl
push
adc
or
cwtl
and
adc
jmp
mov
sbb
aad
stos
fs
imul
push
inc
jmp
enter
hlt
mov
mov
negb
std
popa
cmpsb
rclb
mov
cmp
cmp
dec
lret
mov
sbbl
enter
rorb
pop
pop
lahf
sahf
adc
pop
fsubr
push
jp
js
add
xor
xor
stos
push
sub
jle
pop
repz
inc
enter
jno
and
or
adc
add
or
dec
adc
xlat
add
cwtl
int
xor
pop
pop
xor
sub
jno
xchg
aad
call
adc
mov
ret
lret
jo
int
xchg
leave
push
pushw
lods
incl
out
lcall
mov
or
and
in
sub
sbb
sbb
mov
and
sbb
mov
movsl
jp
add
sbbl
push
xchg
push
push
push
sbb
sbb
aaa
xchg
sbb
push
push
jge
jo
cmp
stos
rcrl
mov
cmp
shl
lcall
popf
mov
push
cs
cmc
and
into
imul
lret
or
xor
les
cld
inc
loop
jmp
std
mov
sub
in
inc
lods
push
movsl
inc
inc
cmp
mov
xchg
mov
pop
inc
mov
dec
jle
mov
sub
adc
lock
fwait
mov
and
pop
enter
xor
push
inc
xchg
lahf
fisubl
jbe
push
sti
cmpsl
mov
jl
mov
mov
leave
ret
xor
out
rolb
push
mov
add
inc
push
xlat
inc
add
dec
arpl
pop
out
inc
in
mov
and
cwtl
jl,pn
fldenv
adc
sbb
push
ja
pop
cltd
in
mov
jl
filds
inc
imul
xchg
data16
mov
imul
test
cld
sub
jecxz
es
sub
push
and
push
add
in
jl
into
push
mov
jo
xchg
jg
lret
aas
and
icebp
mov
and
inc
jl
dec
adc
xor
loop
aam
push
adc
ja
lret
add
or
cwtl
jnp
mov
sbb
jl
jno
icebp
cli
dec
add
xorl
cli
sub
push
adc
jns
add
jl
push
in
mov
das
add
in
mov
in
mov
inc
jb
adc
ret
pop
xor
adc
inc
aam
mov
call
test
fdivrs
cmp
inc
or
cs
dec
movsb
add
xor
mov
insb
and
std
xchg
adc
sub
mov
je
mov
mov
test
inc
shll
xorl
cmp
push
ja
hlt
repnz
mov
add
mov
add
shl
add
fistpl
sub
adc
fcompl
cwtl
jo
push
es
pop
out
mov
push
lock
js
rclb
fs
pop
mov
cmp
nop
add
scas
pop
in
sbb
jl
clc
dec
pop
in
jmp
hlt
out
jmp
mov
cli
xor
sbb
pop
and
dec
pop
jle
pop
sub
pop
outsl
add
add
add
xchg
ret
fwait
jne
inc
mov
insb
xor
dec
xchg
push
fldt
int
ja
adc
mov
je
ret
inc
cld
mov
lea
fwait
sbb
loope
pop
gs
mov
pop
mov
gs
mov
dec
loop
ja
lea
dec
or
jo
push
aad
in
jns
lea
fidivrl
es
loop
aaa
jno
lcall
dec
jnp
jbe
dec
adc
shl
inc
fimuls
sbb
jecxz
xorl
jp
ffreep
and
loop
sbb
ljmp
push
loopne
leave
roll
xor
ret
xor
stc
push
adc
adc
lock
pop
punpcklwd
dec
ljmp
movsb
fcom
dec
test
xlat
xor
xchg
adc
icebp
jl
imul
aad
sti
mov
adc
push
mov
cmp
idivb
clc
addr16
or
in
sbb
jge
cs
mov
mov
out
jbe
je
jno
inc
jns
inc
int
enter
pop
xchg
push
ljmp
lret
mov
mov
and
xor
push
adc
sbb
fadds
dec
mov
pusha
data16
outsb
lret
ds
sub
imul
jae
dec
jmp
mov
jmp
or
pop
outsb
std
and
decl
xlat
ucomiss
jno
jg
sub
push
cmp
push
mov
ja
roll
or
pop
shlb
mov
jmp
popf
fistl
pop
jne
mov
stos
xchg
shrb
jle
push
push
sub
sub
aas
and
fidivrl
cmc
sbb
adc
fistpll
sub
push
pop
daa
enter
icebp
or
adc
xor
fstpt
push
cld
in
pop
mov
xchg
jnp
stos
xor
and
outsl
sti
xchg
sub
and
jns
cs
mov
mov
push
adc
test
mov
rorb
stos
mov
sbb
lods
cli
sub
shll
adc
pop
addr16
cmp
fldcw
and
sub
and
iret
xchg
inc
stos
add
push
clc
lret
mov
dec
mov
and
adc
jae
outsb
in
mov
cmpl
cmpsb
les
push
aaa
lahf
out
out
je
jbe
sbb
push
imul
xchg
jg
sbb
jl
cmp
pop
fnstenv
add
sub
clc
mov
mov
popa
cmp
test
mov
inc
mov
loope
cmpsb
jne
movb
jns
imul
push
inc
nop
rclb
das
mov
rolb
xor
and
xor
push
lods
test
or
outsl
lret
sbb
jecxz
test
push
add
in
pop
sub
mov
jg
jae
rcll
jae
enter
push
mov
xchg
xchg
lahf
push
fsubs
inc
ret
mov
mov
push
adc
inc
lret
lods
cmp
push
fisubl
scas
cld
shr
enter
push
cmp
xchg
jbe
loop
shll
pop
outsl
adc
xor
push
xchg
xlat
inc
mov
rcll
test
lcall
inc
mov
adc
cmp
nop
cs
cwtl
fst
jle
scas
jb
outsl
mov
adc
mov
cmp
or
inc
xor
inc
ret
hlt
push
fwait
pop
pminub
inc
es
inc
mov
mov
aas
mov
aam
fisubrl
js
sbb
jno
pop
aad
xchg
push
add
lret
and
dec
test
sbb
xor
or
pop
clc
shrl
dec
inc
xchg
inc
sti
mov
push
xchg
mov
mov
out
adc
cwtl
scas
or
and
mov
dec
pop
mov
sahf
jmp
xchg
dec
inc
imul
mov
rcrl
pop
or
push
test
mov
shrb
lcall
out
int
in
imul
sbb
mov
dec
lods
mov
mov
add
xchg
scas
call
rolb
int
cltd
jnp
push
fstpl
jne
cmp
pop
fdivl
into
pop
xor
fisubl
dec
inc
dec
jns
jmp
mov
mov
dec
sbb
and
ljmp
or
dec
imul
loope
inc
cmp
jbe
shlb
aam
insl
mov
xor
jmp
push
pop
bswap
lahf
shlb
dec
sahf
xchg
enter
ss
icebp
jg
mov
sbb
arpl
outsb
insl
jge
sahf
ja
push
mov
mov
int
xchg
jae
cmp
mov
fnsave
or
pushf
pop
das
inc
sub
faddp
fidivrs
and
mov
sti
pop
push
lcall
arpl
call
fnstsw
aad
shlb
cs
push
dec
repz
xchg
fmull
lods
mov
push
sahf
pop
cwtl
jle
and
mov
test
iret
ljmp
in
lds
cli
stos
mov
cltd
dec
cmp
leave
mov
mov
ret
dec
xchg
jge
mov
jge
out
and
xor
inc
inc
xor
cmpsb
pop
repz
clc
jb
cmp
mov
nop
incl
andl
repz
fdivs
cs
and
stc
fcomps
jb
daa
loop
rorl
dec
outsl
nop
add
jmp
pop
adc
flds
mov
fildl
push
jle
andl
mov
inc
sahf
mov
mov
jecxz
adc
pop
mov
pushf
iret
sub
hlt
xchg
std
imul
xor
scas
scas
divb
mov
test
inc
sub
xor
xor
stos
inc
iret
sub
inc
lea
outsl
sbb
cmp
xchg
cmpsl
loopne
xor
test
push
fsubl
or
jnp
inc
cmpsl
sti
test
das
cmpb
lods
pushf
fldcw
fsubs
push
arpl
les
or
out
pusha
add
insl
xchg
sbb
jbe
inc
rdpmc
cld
jnp
fwait
std
clc
and
into
in
pop
push
pop
push
lods
inc
clc
mov
das
out
adc
fildll
inc
movsb
xor
fdivrs
pop
mov
pushf
icebp
cmovg
push
xchg
xor
imul
popl
fstps
insb
lcall
bound
lea
push
adcl
inc
pop
addb
cs
les
lds
jnp
adc
loope
mov
mov
cmp
pushf
or
dec
ja
dec
dec
in
jecxz
xchg
adc
idivb
in
call
inc
mov
mov
add
add
push
lahf
xchg
and
or
ss
repz
lods
outsb
fnsave
sbb
fwait
inc
in
push
or
aas
repz
fwait
cmp
ds
cmp
fs
test
out
cmp
adc
dec
push
inc
mov
maxps
call
je
iret
sub
into
int
xor
cmp
out
movb
bound
rcrb
mov
mov
sbb
xor
jbe
or
or
mov
iret
jge
push
js
push
stos
hlt
scas
or
cmp
xor
call
cmp
mov
sbb
aad
nop
and
repz
sbb
inc
jmp
xor
mov
loop
in
idivb
in
xor
mov
mov
mov
push
cmp
icebp
mov
outsb
mov
repz
ficoms
cld
cmp
push
cs
push
loopne
xor
rorb
into
ds
stos
loope
sti
and
dec
and
inc
in
cmpsb
sub
aad
ret
jnp
pop
sti
xchg
outsb
scas
adc
rorb
fwait
ret
xor
cmp
icebp
cmp
pop
gs
cmpl
aam
out
sub
lock
add
sbb
sub
fsubrl
fdivs
push
adc
pop
fildl
pop
sti
mov
enter
out
xchg
scas
in
insl
test
or
jns
pop
cltd
dec
je
sahf
xchg
mov
mov
mov
mov
inc
popa
xor
push
cmpsb
jae
fisttpll
or
orl
stc
adc
xor
into
jb
jns
mov
xchg
mov
daa
mov
pop
daa
sbb
dec
aaa
pusha
cs
mov
pop
int
add
mov
mov
pop
cs
mov
imul
insb
cmc
daa
jne
out
xor
nop
jmp
shl
lock
mov
cmp
pop
andb
popa
push
in
scas
and
std
loope
movsl
scas
lret
movsl
insb
ror
inc
arpl
sbb
inc
aas
cltd
jbe
cmp
scas
xor
mov
mov
fistpl
call
xchg
adc
cmpsb
sub
outsl
aad
lea
ds
loope
into
mov
pop
imul
outsl
repz
mov
mov
xchg
xchg
inc
stc
push
insl
sub
jo
pop
js
notl
andl
dec
das
and
test
mov
aam
aam
mov
mov
and
loopne
xchg
xlat
aad
repz
jbe
sti
or
int
in
mov
dec
dec
push
test
mov
or
xchg
push
sub
aas
test
or
fbld
push
fs
sub
out
ljmp
xchg
jne
mov
xor
orl
movsl
xor
pushf
dec
cmc
dec
stos
lcall
fsubr
push
pop
int
or
mov
insl
xchg
sub
pop
loop
pop
nop
pop
mov
sbb
dec
lcall
icebp
cmp
adc
cmp
loopne
clc
mov
jnp
js
push
xlat
pop
push
divl
lea
inc
loop
fildll
xchg
inc
je
jmp
push
inc
stc
les
xchg
xor
lret
je
mov
mov
pop
adc
xor
or
mov
pushw
ret
lods
les
outsl
insb
and
inc
push
sbb
imul
push
pop
test
je
popa
mov
jecxz
sarb
xor
jne
inc
std
fimull
mov
int
scas
inc
or
mov
pusha
rcrb
push
inc
xor
pop
cmp
sbb
sbb
mov
lock
adc
out
xchg
push
inc
test
and
xchg
fdivrl
or
pop
inc
lret
int3
xor
call
xchg
movsl
mov
dec
addr16
or
and
fimuls
pop
mov
push
movsl
push
jno
in
stos
scas
inc
mov
jb
xchg
xchg
add
mov
xchg
dec
into
lahf
fs
push
dec
mov
sbb
cmp
sbb
cmp
cwtl
jmp
jmp
inc
divl
xor
fcoml
mov
or
push
push
adcb
inc
dec
shlb
das
pop
mov
jp
pop
test
cmp
pop
add
or
sahf
ljmp
in
adc
in
les
or
lahf
jmp
test
sub
inc
mov
cmc
and
mov
adc
push
xchg
pop
js
add
pushf
adc
pop
int
shrl
jg
sbb
pop
std
push
push
je
xchg
and
jnp
cli
into
jnp
jl
lds
xchg
cs
inc
mov
jns
dec
pop
dec
mov
dec
sbb
inc
inc
xchg
xor
and
loopne
add
fwait
pusha
mov
adc
xor
push
inc
jmp
and
pushf
jg
jnp
mov
push
mov
out
cmp
sbbl
loopne
cld
fnstsw
and
dec
fimull
lcallw
dec
in
jmp
mov
outsb
dec
push
mov
xchg
out
ss
popa
mov
xor
xchg
enter
jp
mov
jle
mov
mov
mov
cmp
repnz
and
dec
stc
in
out
mov
mov
int3
pop
sbb
loope
div
and
sbb
pop
push
dec
fldt
adc
or
sub
cltd
jbe
cwtl
sti
and
xchg
fcompl
mov
cmp
int3
pusha
mov
pop
int3
and
cli
test
cs
movsb
movsb
or
mov
test
cmp
sbb
jmp
mov
test
addl
nop
lods
mov
es
sbb
mov
mov
sub
sub
xchg
xchg
dec
outsl
pop
dec
cmp
addr16
jge
fsubrs
or
icebp
jae
sti
pop
inc
pop
pop
out
xchg
xchg
mov
bound
cmp
pushf
xchg
cli
insl
pop
shrb
jge
push
ljmp
pushf
repz
pop
shlb
and
pop
jnp
sub
cmp
in
popa
out
bound
movsb
aas
sbb
xchg
cmp
aad
rcrl
fcoms
cmp
mov
leave
mov
pop
cmc
std
push
cltd
or
dec
and
cmc
sbb
jge
sub
aaa
ds
lods
mov
imul
cpuid
imul
pop
cmp
imulb
push
xchg
je
push
add
push
arpl
adc
fidivrs
mov
cltd
push
lcall
add
push
les
stos
dec
scas
mov
stos
pop
popf
ret
mov
jb
enter
cld
or
inc
dec
pop
dec
adcl
leave
jmp
jbe
imul
pop
add
test
mov
and
fldcw
xchg
mov
sub
addr16
cmp
lods
xchg
and
mov
es
and
xor
hlt
and
stos
dec
push
dec
sbb
rorb
sbb
popa
jp
adc
int3
mov
cmp
xor
pop
arpl
scas
outsl
int
out
popa
cmpsl
iret
jns
mov
or
cmp
xchg
mov
pop
mov
aam
das
adc
cli
mov
pop
dec
cmp
pushf
cmp
mov
pop
dec
test
jne
movsl
fmuls
cld
or
cmp
inc
push
sbb
out
ja
add
mov
push
subl
push
shrb
add
jae
xor
push
ljmp
adc
aam
mov
js
addr16
je
jae
mov
int
push
clc
roll
dec
lahf
decb
or
repz
in
add
add
add
inc
jb
js
dec
mov
fwait
nop
nop
shll
pop
inc
pop
adcb
and
jae
mov
cmpsl
mov
jl
push
sub
inc
outsb
loopne
push
in
push
pop
cs
inc
mov
push
mov
pop
fcoms
mov
mov
int3
adc
jb
rcll
ret
lea
stc
mov
loope
cmpsl
adc
xchg
xchg
out
sub
jbe
cltd
insb
shlb
fwait
add
test
mov
dec
cmp
push
xlat
xor
es
sub
into
adc
and
xchg
push
and
dec
inc
sub
push
and
fs
or
xor
stos
pop
or
clc
or
sub
bnd
jmp
outsl
fisubs
ss
jmp
push
mov
pop
insb
sub
repnz
in
mov
mov
ja
jge
stos
pop
mov
xor
adc
or
add
xor
gs
lods
leave
xor
push
inc
stos
jnp
call
mov
nop
int3
ret
and
scas
loopne
pusha
es
inc
xchg
pop
ret
fcoms
loope
scas
rclb
mov
cmpsl
scas
mov
clc
negb
movsb
mov
xchg
aas
inc
mov
mov
iret
dec
or
cmp
mov
or
mov
popf
sub
jp
and
push
and
mov
divl
sahf
xchg
outsl
iret
fmul
scas
lret
outsl
mov
xchg
dec
sbb
insl
push
mov
jge
mov
test
xor
mov
cmp
cli
sub
in
int
negl
xchg
int
scas
imul
push
mov
insl
mov
sub
ficomps
icebp
mov
in
push
inc
call
or
add
xor
cmc
hlt
xor
movsb
push
adc
dec
ja
rcrb
dec
dec
int3
push
cltd
out
movsl
rol
push
testl
iret
jmp
and
es
inc
lcall
lcall
lds
stos
scas
mov
sbbl
xchg
jae
mov
jo
jp
cmp
out
add
loopne
dec
cs
fcoms
aaa
cmp
ret
pop
xchg
lret
pop
fs
pop
ror
mov
lods
or
inc
adc
shlb
mov
or
out
pusha
xchg
subl
adc
jnp
or
sub
push
es
sti
cli
cmpsb
mov
push
test
add
ds
daa
fists
xchg
or
or
mov
cmp
je
pop
mov
jbe
lea
xchg
pop
scas
cmp
jg
mov
imul
insb
xchg
enter
icebp
push
dec
adcb
cli
jo
pop
jecxz
pop
dec
mov
loopne
pop
jmp
outsl
test
rolb
and
shl
mov
nop
jne
data16
dec
sar
imul
mov
xor
jnp
mov
sbb
sti
popa
lds
sbb
cmpsb
ja
xlat
mov
cmp
inc
outsl
cltd
inc
lret
ret
rorb
mov
inc
stc
mov
scas
and
insb
dec
mov
xor
push
out
test
pop
sbb
inc
dec
sbb
sub
pop
mov
push
mov
inc
lret
fisubrs
push
popf
adc
fmul
adc
cmp
xchg
inc
or
xchg
outsb
lret
or
pop
jl
pop
mov
call
loopne
jg
cld
jmp
outsb
or
push
insl
mov
or
jo
repnz
ss
stc
nop
lea
std
mov
push
pushf
and
add
and
mov
jl
loope
cltd
jns
fistpl
in
aad
insl
addl
or
ret
dec
lock
ja
xor
mov
cmpl
loop
sbb
push
dec
jg
mov
sarl
xchg
popf
divb
std
cltd
pop
push
test
iret
pop
aam
xor
repnz
hlt
xchg
lret
lock
hlt
sbb
cmpsl
daa
call
scas
mov
and
dec
sbb
push
xor
or
push
xchg
fbstp
pop
inc
in
jb
jp
mov
jno
mov
dec
mov
in
push
xor
and
jbe
mov
or
jg
add
push
in
pop
negl
addr16
cmp
in
notl
jge
out
jo
bound
repz
iret
push
dec
int
jbe
or
add
add
pop
and
push
pop
sbb
lret
sahf
gs
aad
jne
inc
sub
std
ret
xchg
push
mov
test
mov
in
mov
hlt
add
jne
adc
or
sti
push
xchg
pop
shrl
aam
or
sbb
in
out
or
add
mov
xchg
add
js
repz
push
pop
push
fsubrs
add
jno
jae
mov
xchg
leave
in
add
int
scas
jne
imul
jle
push
push
pop
cli
das
push
xchg
test
mov
adc
nop
cmpl
xchg
mov
jne
addb
push
cmp
sbb
movsb
sbb
jnp
lret
icebp
arpl
js
xchg
pop
add
out
xor
jecxz
mov
dec
xor
or
out
or
push
addr16
fistps
pop
dec
xchg
xchg
xor
jbe
add
push
popa
outsb
cwtl
repnz
mov
imul
and
pop
stc
aaa
xchg
and
imul
movsb
jnp
pop
inc
adc
shl
mov
aas
jns
shll
into
dec
and
int
mov
outsb
mov
add
pop
dec
lret
push
push
fcoml
pop
pusha
hlt
pop
adc
int3
sub
fmuls
ret
shlb
mov
add
push
cmpsl
ret
call
aas
sbb
push
push
and
mov
cld
loope
mov
cmp
mov
pop
jae
idivb
clc
push
dec
sar
or
stos
xlat
rcl
jns
jp
dec
xchg
pop
enter
ja
push
and
call
cmpsl
mov
movsbl
mov
arpl
popa
or
jns
push
loope
sub
sbb
adc
inc
dec
cmc
inc
clc
mov
sub
mov
jns
dec
xor
dec
and
cmc
jo
imul
push
int3
push
in
adc
lods
cld
hlt
pop
fdivrs
ficomps
popa
std
dec
xchg
lahf
adc
scas
mov
clc
xchg
add
subb
sbb
jne
mov
rorb
and
mov
mov
sbb
sahf
shl
aad
nopl
push
push
add
lods
in
inc
outsb
lock
jle
movsl
daa
cwtl
mov
data16
fbstp
adc
sbb
inc
push
push
cmp
test
mov
pop
mov
cmpsl
jns
mov
and
mov
stc
dec
dec
icebp
rcrb
test
ds
test
pop
fmul
shlb
mov
aad
xor
ds
or
fcom
ja
jnp
sti
sub
xchg
clc
mov
lock
loop
std
test
leave
rorb
cmpsl
sub
sub
pop
mov
pop
add
sub
and
or
test
in
ret
push
ret
push
fwait
pop
add
inc
push
les
loope
push
ret
push
faddp
int3
push
xchg
add
bound
lods
insl
jmp
inc
insl
and
push
or
sub
cltd
ror
sub
cmp
adc
adc
out
pop
dec
repz
xchg
ljmp
mov
insl
mov
sub
or
out
inc
or
pusha
cmp
cwtl
xor
mov
cmp
push
testb
mov
lods
and
jae
and
daa
dec
xor
jb
add
add
ficoms
or
xchg
cmp
adc
cmp
jecxz
push
imulb
repz
out
sub
lea
ds
mov
addr16
insl
cmc
ja
cmp
push
jge
fcomps
dec
sbb
xchg
div
jnp
fsubrp
push
mov
xchg
push
inc
and
and
mov
mov
bound
xor
push
jb
jp
xor
cmp
cltd
je
aad
push
fisubl
adc
xchg
sbb
xchg
pop
ja
add
pop
mov
popa
push
cmp
fcoml
mov
mov
xchg
sub
push
push
jg
lods
jmp
mov
jl
movsb
pop
hlt
mov
xor
sub
push
mov
enter
push
push
xchg
cs
in
sbb
mov
test
loope
mov
xchg
jl
lahf
scas
and
cmpsb
add
add
je
insb
jecxz
or
out
sbb
nop
cmp
mov
rolb
ljmp
or
mov
xchg
xchg
mov
mov
cltd
movb
pop
xor
and
jp
mov
jge
das
jno
call
shrb
cmp
pop
sub
xchg
aam
aam
ss
clc
repz
fisttpl
outsl
lea
scas
in
dec
fisubs
and
mov
jge
jne
lea
mov
daa
lcall
push
inc
inc
sarb
add
cwtl
int
ds
cmp
mov
or
mov
add
data16
pop
sbb
dec
loop
cmp
shll
in
roll
sub
aad
mov
addr16
addr16
mov
sub
jmp
inc
or
xchg
cmp
xlat
scas
xorl
sub
out
and
and
movsl
push
pop
jp
pop
and
push
leave
pop
push
inc
inc
xor
leave
sub
pusha
fstp
mov
jo
addl
movsb
mov
xchg
dec
sub
divl
pop
subb
data16
adc
stc
dec
shrl
nop
imul
lret
jmp
xlat
cmp
dec
idivb
jae
loope
inc
cmp
sbb
mov
push
pop
enter
sbbl
leave
push
xlat
dec
xchg
or
xchg
xchg
xchg
sarl
sub
daa
xlat
loopne
xor
mov
aaa
sbb
jge
inc
out
mov
pusha
cwtl
push
test
js
fidivrl
cmp
iret
dec
push
xchg
fdivr
fisubl
mov
cmp
and
dec
call
std
adc
push
popa
xor
ljmp
inc
loopne
jge
sahf
cmp
mov
mov
xlat
adc
aad
jecxz
pusha
pop
call
into
outsl
mov
inc
mulb
or
push
push
icebp
addl
push
sbb
pop
adc
lea
cmp
sub
inc
adc
dec
mov
sub
loope
mov
xorl
pop
hlt
in
cmp
fs
je
xor
lret
dec
inc
nop
sbb
ret
add
add
adc
add
aaa
jbe
mov
xchg
pop
clc
jge
jle
sub
movsl
dec
js
ret
push
cwtl
adc
add
subb
stc
push
pop
or
lahf
pusha
cld
movsb
rcl
addl
adc
mov
add
imul
xchg
and
lods
pop
lock
outsl
jecxz
lret
test
lea
jns
cmpl
pop
mov
cmp
call
scas
xchg
cmp
mov
addr16
icebp
push
sbb
sub
xadd
imul
mov
cmpsl
arpl
mov
mov
scas
xchg
push
rcrl
mov
inc
subl
test
js
loope
adcl
sub
and
sbb
sahf
xchg
rolb
out
sub
mov
or
mov
sbbb
repz
fsts
sti
jge
mov
or
dec
mov
jns
imul
mov
push
mov
stos
jecxz
int
pop
mov
add
push
pop
shll
out
subl
test
xchg
or
xor
shr
mov
push
add
cltd
cmc
ret
fcom
imul
movsl
push
cmp
into
fdivrl
aam
loope
add
leave
fstpt
push
mov
cmpb
push
js
and
sub
sarb
pushf
mov
les
mov
xor
ss
jne
jle
lods
push
cmp
ss
xor
cmc
pop
decb
jae
lock
ss
jle
inc
sarb
sub
addr16
sbb
test
mov
movsb
xchg
mov
push
shlb
stc
dec
inc
push
imul
xchg
scas
sub
jp
pusha
push
and
cmp
shlb
ficoml
out
popa
dec
repnz
xchg
movsb
repz
call
decl
push
or
scas
test
cmc
shrb
or
mov
into
xchg
and
bound
adc
les
aam
adc
mov
jge
jmp
ja
movsb
sbb
rcll
sbb
lods
aaa
mov
lock
push
lret
sub
mov
ficoml
cmp
fcomps
and
jge
xor
inc
in
cmp
sub
add
cmp
cmp
jl
add
test
pop
pop
inc
call
mov
out
fstl
or
ss
mov
pop
das
lret
cmp
out
push
mov
addr16
movsl
mov
int3
fistpll
xor
cs
mov
pop
fwait
dec
xor
push
push
je
lret
repnz
lret
jecxz
mov
fsubl
push
into
adc
jmp
nop
push
das
popa
cmp
repnz
sub
cmp
movsl
or
mov
dec
push
sbb
adc
add
dec
ja
inc
cwtl
xchg
out
push
cmc
lods
inc
into
inc
shll
shrb
les
gs
sbb
mov
cmpsb
rcrb
cmp
stos
xchg
cmp
sbb
push
push
pushf
push
int3
loopne
out
dec
mov
mov
push
cmc
jns
lds
adc
mov
out
daa
or
xlat
pop
mov
mov
std
mov
sub
aad
pop
iret
rclb
and
pop
mov
aad
call
ret
jns
aad
mov
jp
aas
sub
mov
add
test
mov
fs
and
ljmp
xchg
loop
pop
aas
and
mov
pop
and
out
lods
pop
dec
ss
mov
popa
xchg
add
inc
xor
pushf
adc
repz
inc
push
xor
xchg
pop
add
jmp
jns
insb
push
dec
push
fidivrs
inc
cmp
rcrb
je
add
xchg
in
pop
cmpsl
inc
addr16
in
fistpll
pop
sbb
out
mov
test
clc
jnp
loop
add
outsl
adc
jns,pn
and
test
cld
jnp
sti
dec
dec
pop
cmpsb
negb
lret
pop
xor
gs
add
add
and
in
mov
std
mov
test
mov
lret
loopne
jns
or
in
jnp
aam
loopne
adc
mov
or
lods
jmp
imul
sbb
sbb
fxch
push
mov
scas
outsl
rcl
stos
pop
dec
rclb
cwtl
mov
ss
mov
aas
push
lea
in
mov
rcll
and
or
das
xor
add
jb
mov
adc
push
mov
je
and
mov
bound
dec
and
pop
xadd
sar
jo
sbb
insl
je
xor
xchg
add
and
scas
rolb
clc
dec
inc
cmc
ret
cs
cmc
pushf
sbb
xorl
idivb
aad
mov
jle
out
xchg
fs
sti
jl
mov
mov
sahf
orb
lods
xchg
or
cltd
xchg
scas
mov
mov
fisubs
stos
in
rcrb
pop
mov
xchg
xchg
in
bnd
xchg
mov
aad
sub
outsb
mov
fsubrl
outsb
lcall
loope
pushf
cwtl
xchg
ss
xchg
mov
push
ficoml
jp
in
pusha
xor
mov
cmp
mov
cld
push
or
sub
pop
outsl
jo
fimuls
xchg
jecxz
fbld
imul
fnstenv
adc
cltd
fs
jle
xchg
mov
mov
sbbb
mov
mov
call
or
mov
jle
push
inc
sbbb
xchg
int3
jl
jmp
cwtl
fld
add
mov
adc
or
or
xchg
pop
loop
popa
mul
or
mov
sahf
mov
or
cs
mov
in
clc
mov
add
adc
sbb
mov
jne
es
insb
cmpsb
push
popf
mov
jno
and
mov
pop
jmp
jl
aad
daa
jae
sbb
loopne
pushf
hlt
adc
sub
xchg
xor
pop
xor
push
rcr
mov
popa
mov
lods
imul
int3
xor
stos
lahf
test
fdivrl
push
lret
in
mov
mov
nop
adc
cmp
sbb
into
xlat
pop
sub
cltd
mov
push
in
fs
jbe
pop
test
cmp
fisubrl
sbb
loop
xchg
or
jp
out
push
lds
fcmovne
cmp
mov
cld
inc
loope
movl
jae
inc
mov
repnz
pop
loope
pop
mov
sahf
mov
jno
cmp
add
inc
div
repz
push
or
mov
mov
dec
mov
and
fildl
cmp
lret
sub
test
xchg
insb
pusha
push
pop
dec
inc
ja
bound
xlat
mov
sub
in
xor
dec
pop
pusha
pop
mov
xchg
pop
loope
dec
xchg
jmp
mov
xchg
cmpsb
jge
popa
pop
and
xchg
aas
add
pop
cmp
or
pushf
xor
fsubs
xchg
sub
popf
or
jle
push
fdivr
add
stc
push
or
ror
jb
xchg
fnstsw
scas
in
aad
out
and
into
movsb
push
mov
stos
shrb
imul
loopne
repnz
xchg
icebp
jg
push
pop
push
mov
jge
fadds
in
cmp
fcomi
cmpsb
pop
fwait
dec
mov
getsec
stos
or
jecxz
mov
mov
sbb
push
xlat
int
fwait
loope
cmpsl
inc
or
jp
int3
adc
inc
push
lods
pop
cltd
push
imul
out
inc
cs
xchg
jne
mov
or
insb
dec
repnz
xchg
test
inc
push
loop
jmp
ret
into
sub
jo
mov
xor
sarb
ret
push
pop
xor
popf
xor
jmp
ret
sti
ss
jge
push
push
cltd
ljmp
sahf
rcr
out
add
jge
clc
lahf
fmul
sahf
push
mov
mov
cmc
mov
sub
loop
lcall
and
mov
in
add
fisubl
mov
arpl
cld
xor
or
lcall
push
jg
enter
mov
xlat
and
mov
rclb
inc
jae
sub
add
loop
lea
mov
xor
adc
outsb
pop
stos
rorl
cmpsl
sbb
out
adc
in
inc
sbb
test
frndint
and
pmaxub
inc
add
cmp
das
or
xor
jns
sbb
push
dec
xor
leave
loope
pop
jle
xchg
test
push
sahf
inc
push
push
add
mov
iret
clc
testb
pop
inc
pushf
xchg
mov
push
test
add
jns
cwtl
not
stos
push
push
out
cmp
push
data16
rolb
or
cmc
vsqrtsd
ljmp
jle
push
outsl
in
fildl
mov
wrmsr
or
leave
movsb
fbstp
nop
fisttps
or
sbb
inc
popf
cmpsb
cmpsb
pop
les
aad
xor
lods
xchg
dec
enter
xchg
and
fsubrs
mov
xchg
mov
icebp
das
in
xor
and
jmp
or
loop
and
inc
and
nop
sub
mov
in
jl
pop
mov
or
mov
std
add
clc
pop
rorb
shlb
and
cwtl
add
rclb
sub
inc
and
clc
cmp
add
std
mov
mov
aaa
push
xlat
xor
pop
sub
sub
arpl
xor
pop
and
clc
into
lret
adc
pusha
fs
mov
push
cmp
mov
icebp
sbb
dec
std
lock
jge
outsb
daa
mov
aaa
sub
pop
cmp
inc
pop
cmpsl
or
dec
imulb
jmp
push
dec
fdivs
shrb
cwtl
xchg
fiadds
je
sti
outsb
mov
push
pop
mov
fsubrl
mov
iret
fnsave
ss
dec
add
jle
mov
dec
cwtl
ds
cmpb
xchg
mov
mov
in
cmpsb
add
mov
fstpl
lcall
gs
jae
mov
imul
rcrb
mov
pop
out
mov
xchg
popa
imul
pop
inc
test
aaa
lcall
pop
out
adc
mov
sub
stos
mov
sbb
leave
gs
int
and
mov
test
mov
ljmp
fcoml
arpl
xchg
sub
fcmovnb
mov
ret
subl
mov
mov
push
cmp
lret
test
mull
sub
jg
xor
fiadds
rorl
xor
pop
shlb
testb
std
add
mov
cmp
push
icebp
sbb
and
in
push
pusha
popf
popa
jmp
cmpsb
sbb
mov
dec
cmp
ret
mov
daa
and
add
adc
push
push
shlb
sbb
sub
adc
sub
mov
push
cmp
add
out
sbb
pop
push
jge
mov
repz
fisubs
arpl
ljmp
popf
pop
adc
or
lea
std
cmp
out
pop
push
mov
fnstsw
jg
fwait
mov
and
dec
fidivrl
ds
in
aas
xchg
loopne
mov
xchg
mov
cmp
dec
push
jp
dec
xchg
jo
sti
push
fisttpl
push
xchg
leave
mov
xor
cs
dec
mov
test
xchg
dec
lret
push
out
lock
rorl
push
lods
mov
pop
push
mov
mov
sub
cmpsb
cmc
std
fs
lods
or
mov
push
stos
in
pusha
lock
xor
mov
push
or
pop
std
shlb
js
mov
xor
pop
xchg
add
cmp
repnz
test
mov
adc
je
mov
pop
repz
jo
pop
cwtl
outsl
xchg
fs
leave
dec
lret
enter
jmp
mov
imul
inc
out
imul
les
icebp
add
mov
xor
and
pushf
mov
mov
mov
push
mov
jnp
xor
aam
mov
in
sbb
jb
sub
repnz
sbb
add
mov
cmp
fidivrl
cmp
add
cmpb
cmpsl
insl
xlat
std
push
pop
leave
mov
mov
insl
es
jnp
sarb
jl
push
imul
dec
js
lock
popf
jb
je
mov
lds
lods
mov
popf
adc
adc
aas
mov
mov
mov
enter
mov
shrl
ret
pushf
cmp
push
push
mov
popa
sbb
cmp
mov
xchg
and
lds
mov
clc
sbb
xchg
ret
jnp
cwtl
cmp
outsl
jno
jmp
add
test
imul
insl
mov
aaa
lcall
jb
adc
push
adc
dec
mov
mov
sbb
testb
mov
cmpsb
lock
xor
dec
test
insl
lahf
xlat
adc
push
rolb
cli
fistl
xor
xor
cmp
sub
cmp
mov
xchg
jg
std
pop
cmp
or
sub
jmp
shlb
lret
jl
xorb
ret
int3
enter
push
cmp
fidivrs
mov
mov
mov
xor
pop
insb
cmp
and
repnz
dec
enter
shr
mov
loop
cltd
cli
sbb
or
gs
dec
jb
fcmovb
out
insl
clc
jne
rcrb
push
test
xor
fstps
xchg
mov
xor
add
xor
xor
inc
adc
mov
fildl
mov
daa
std
pusha
add
lcall
sub
mov
xor
xor
sub
inc
cli
mov
enter
cli
bound
inc
jns
pop
dec
sub
fcoms
pop
adc
lods
xor
xchg
lcall
jmp
dec
mov
arpl
add
pop
mov
lret
sbb
clc
pop
xor
lea
outsb
rcrb
dec
mov
inc
cmc
enter
ss
cmp
sub
jmp
or
push
xor
orl
mov
ss
sbb
shll
addr16
fisubl
pop
fnstsw
xlat
adc
in
xor
test
sahf
js
je
fptan
jne
in
js
lea
xlat
inc
jle
adc
es
add
jnp
xor
mov
mov
in
mov
mov
mov
cmp
push
mov
xor
add
mov
dec
insb
sbb
jae
jo
lds
mov
cltd
add
dec
hlt
int
xor
popa
lcall
addl
mov
fistpl
stos
cmc
dec
inc
incl
sub
aam
xchg
es
jno
lret
call
cmp
jnp
lea
sbb
insb
ret
cwtl
sbb
arpl
cli
and
add
jp
sti
mov
leave
mov
and
rcrl
aad
out
daa
inc
out
in
pop
fwait
mov
aas
and
add
or
add
inc
out
pop
popf
cmp
imul
and
sahf
loope
fs
mov
mov
push
lds
jb
adc
stos
ss
adc
into
push
jae
orl
fcoml
mov
movsb
push
jns
aas
and
push
shrl
enter
hlt
push
in
test
mov
push
sbb
jne
cmp
xchg
lds
lods
iret
pop
inc
mov
dec
test
sub
jge
jl
fbld
pop
or
rcll
dec
pop
pop
ja
or
sub
inc
movsb
out
mov
xor
out
ficoml
stc
mov
push
mov
dec
push
inc
xor
imul
jb
mov
push
or
cmp
sbb
mov
cmp
int3
sbbl
mov
sahf
andl
push
inc
fs
insl
ror
pop
xchg
mov
push
or
das
cmp
xor
sbb
ror
sbb
push
push
rol
sti
mov
xchg
pop
mov
inc
mov
cli
mov
inc
fwait
cmc
dec
sbb
iret
test
outsb
and
fwait
mov
in
cmc
dec
in
mov
inc
fwait
xchg
std
mov
xchg
xchg
aam
mov
push
pop
xchg
lods
sti
sbb
xchg
mov
push
popf
mov
outsb
and
mov
das
fs
movsb
push
call
lea
mov
push
cli
ljmp
repnz
sbb
insl
and
adc
push
inc
mov
add
xor
sub
mov
addr16
pushf
cmpsl
add
cmp
shl
xor
jg
mov
xchg
inc
jne
adc
xchg
repnz
xor
lock
icebp
push
and
jbe
jg
or
and
and
rcr
out
test
testl
add
ret
jmp
in
leave
imul
add
and
insl
push
fs
sub
int
mov
inc
das
not
movsb
mov
cmp
mov
das
in
int3
adc
mov
mov
or
pop
mov
xor
sub
stc
cli
call
je
xchg
sub
mov
dec
imul
xchg
int
ja
in
cld
lock
jge
clc
mov
xchg
mov
dec
loopne
movsb
sbb
jg
aam
mov
int3
push
in
xchg
or
aam
mov
push
out
arpl
xchg
test
sbb
cwtl
xchg
adc
out
mov
rcrb
jb
pop
jg
into
mov
inc
in
jl
sub
jno
faddl
jbe
fs
bound
push
cmp
aad
pop
mov
jo
test
xor
mov
xchg
imul
cmc
sub
and
dec
and
add
aam
dec
or
mov
sbb
ss
jns
xor
or
push
repnz
cmp
out
rcrb
lea
dec
aas
fsubrs
lock
mov
push
fmull
sbb
pop
imul
mov
test
les
xchg
or
lds
add
adc
add
lds
lods
and
ret
pop
or
xor
les
fisttps
gs
inc
lahf
popa
push
mov
pop
xor
xorl
push
popf
sub
dec
fdiv
adc
dec
push
lods
mov
fmull
jg
popa
push
sbb
xchg
insb
jle
arpl
or
orb
cwtl
sbb
add
inc
inc
ret
or
and
pop
jecxz
imul
xchg
and
nop
sarl
mov
dec
je
shll
inc
add
scas
dec
mov
cmpsb
pop
cmp
fwait
stc
mov
test
orb
jmp
test
or
xchg
pop
push
lret
arpl
mov
xorb
ret
mov
test
push
cmp
sbb
repnz
mov
xchg
add
pop
push
cmpsl
mov
adcb
xor
mov
mov
dec
sti
clc
sbb
cmp
jno
rcrl
lret
xchg
stc
in
sub
xor
outsb
mov
jl
xor
push
cmpsl
or
xchg
xor
sbb
mov
scas
pop
sbb
fwait
in
inc
sarl
dec
cmpsl
enter
jl
outsb
mov
icebp
push
cs
ja
xlat
mov
pushf
movsb
das
cmp
pop
adc
dec
add
sub
out
loope
insl
loopne
push
push
jl
testb
dec
mov
xor
xchg
movsl
repnz
les
fcmovnu
lret
dec
test
sbb
xor
call
mov
iret
pop
sub
add
jns
sub
cmpsl
test
repz
adc
cs
hlt
adc
insb
cltd
xor
and
test
inc
push
clc
ljmp
js
and
cld
lea
sbb
mov
in
mov
add
xchg
mov
mov
mov
mov
xor
fisttpll
mov
mov
push
or
aaa
ds
cmpsl
xorb
imul
stc
pop
lret
mov
dec
mov
mov
mov
mov
xchg
fdivrl
fld
sub
mov
add
jno
sub
jne
mov
or
lahf
push
lea
daa
fbld
fidivrl
into
push
cld
insl
imul
sbbb
rcrb
pop
or
jl
xchg
mov
testb
lods
fwait
jnp
idivb
mov
push
rcrl
push
add
out
std
xorl
push
jle
sbb
mov
aad
push
xor
or
adc
mov
cmpsb
dec
add
cmp
dec
inc
addr16
adc
cmp
into
mov
fstps
jnp
mov
ja
subl
dec
dec
xor
mov
pcmpgtd
mov
mov
mov
lock
call
fidivl
in
xchg
roll
popa
movsb
add
add
jnp
imul
inc
call
pop
or
dec
mov
xchg
and
jg
and
std
mov
repz
lods
inc
dec
loopne
or
jnp
mov
out
push
and
stos
pusha
add
mov
imul
ljmp
lods
mov
fdivl
or
and
pushf
insl
or
mov
sbb
xor
push
mov
sahf
out
lock
mov
mov
ret
add
xor
inc
mov
imul
ret
jns
incb
dec
jb
sahf
fdivrs
or
in
out
mov
sub
push
aas
mov
nop
lea
test
inc
xor
xchg
jge
fisttpll
pusha
int
cmp
sbb
cwtl
jle
out
iret
divl
mov
lea
jmp
shlb
xor
insl
mov
fldenv
jmp
xchg
ljmp
cltd
push
push
sbb
pop
push
adc
fisttpl
pcmpgtd
xor
mov
mov
push
mov
adc
test
dec
test
loopne
test
xor
inc
mov
sbbl
rcll
int3
scas
fwait
push
jns
pop
pop
or
add
xchg
test
xor
xchg
add
sbb
cmp
xchg
es
push
shrb
fcompl
clc
mov
bound
xor
adc
sbb
das
jmp
stos
jg
or
jne
cmpsl
fwait
out
int
fbstp
push
or
popa
movsl
outsb
mov
push
mov
push
roll
mov
xor
repz
hlt
xchg
ret
inc
cmc
mov
jns
sbb
jg
fucomi
jmp
rcrl
or
fpatan
enter
mov
aaa
clc
xor
cli
sbb
jno
mov
mov
and
xor
test
lahf
push
hlt
sbb
inc
sub
sub
pushf
pop
nop
and
push
inc
and
xor
mov
mov
pushf
das
dec
shll
xchg
xor
mov
inc
cmp
sub
sbbb
jne
mov
int
outsb
pop
pushf
or
sub
mov
mov
cltd
pop
enter
adc
sub
incb
aaa
inc
add
add
push
pop
mov
sub
ljmp
hlt
sbb
sbb
movsb
xchg
mov
into
sbb
insb
hlt
mov
push
xchg
fcomps
iret
dec
iret
and
adc
xor
pop
dec
cmc
call
popf
mov
vorps
fsubrs
lahf
decl
sbb
sub
sub
andb
dec
adc
mov
outsb
sbb
add
mov
xor
fcomip
push
ror
shr
outsl
popf
mov
pop
iret
mov
fpatan
and
nop
mov
and
std
or
cmp
dec
roll
push
and
popf
fld
and
call
sahf
xchg
orb
dec
xor
inc
jmp
in
mov
stos
cmpsl
xchg
fcomi
add
pop
je
push
cmp
pushf
cwtl
clc
sub
shlb
frstor
jg
add
and
add
adc
fwait
lods
lods
lea
inc
mov
ds
ja
js
pop
add
jle
pop
aas
push
sbb
jmp
jnp
mov
insb
lods
sub
jb
sub
or
sub
int3
repz
out
imul
imul
sbb
sarb
xchg
mull
loopne
xchg
lods
fwait
stc
or
ret
iret
scas
jge
push
imul
pop
popf
add
mov
sahf
jge
mov
cmp
fcoml
fwait
sub
inc
mov
frstor
repnz
cs
or
sbb
cmp
cs
xlat
sbb
cwtl
push
mov
test
outsl
or
adc
dec
and
sbb
adc
ds
mov
dec
mov
dec
or
pop
mov
push
fstpt
test
jns
imul
lahf
inc
cmpsb
les
lcall
loope
dec
add
arpl
xchg
data16
xor
jecxz
stos
in
jp
stc
push
leave
ljmp
push
iret
or
add
fwait
stc
pop
push
jmp
xor
and
test
cmp
sahf
and
inc
div
ja
stc
add
in
in
push
jns
cmp
lret
sbb
stos
ja
pop
xchg
movsl
push
push
fucomi
pushf
adc
jp
scas
adcl
or
adc
addb
xor
pop
out
test
adc
test
shl
push
and
push
mov
pop
nop
shll
divl
push
mov
lods
xor
imul
and
mov
sbb
ret
test
push
push
call
jl
and
lea
lret
and
jl
sub
mov
pop
sbbb
in
cmpsb
stos
xlat
setnp
push
and
dec
inc
pop
push
pop
mov
push
cmp
lahf
mov
push
int
push
mov
or
xchg
mov
xchg
inc
in
shlb
scas
mov
mov
dec
mov
cmp
xchg
jle
mov
lock
xchg
inc
sub
and
popf
pusha
lahf
movsl
mov
dec
lea
arpl
dec
and
loope
sub
pop
cld
xor
lea
add
pop
iret
or
mov
repnz
aad
mov
mov
mov
inc
mov
jbe
xchg
je
lcall
push
push
loopne
and
xchg
adc
mov
cmp
jecxz
xor
sub
pushf
lcall
and
dec
fnstsw
cld
add
call
iret
in
bound
scas
imul
lock
jb
fisubrl
jecxz
adc
movsb
out
sub
mov
leave
or
dec
jbe
pop
icebp
pushf
inc
fistpl
add
and
shl
dec
add
sub
dec
cmp
lahf
hlt
push
sti
int3
adc
pop
lea
dec
test
push
cmp
inc
mov
jecxz
jge
ret
add
mov
lea
comiss
loope
adc
cs
pop
imul
xchg
lods
push
das
mov
jmp
adc
mov
adcb
add
sti
int3
add
roll
mov
jne
fwait
jecxz
nop
adc
out
xchg
push
push
mov
sbbl
jb
cmp
or
adcl
pop
mov
sbb
add
inc
loopne
adc
jno
sarb
push
stc
jecxz
pop
mov
mov
push
test
daa
mov
add
jmp
pop
jg
sti
jecxz
cmpsb
or
shrb
lahf
sub
jmp
cmp
xchg
rcll
fidivl
mov
popf
into
pop
jg
jl
sub
jecxz
pop
sbb
xchg
xchg
shll
repnz
jnp
jecxz
pop
in
outsb
pop
mov
into
lret
add
es
inc
pop
pop
scas
jmp
and
loop
xor
cmp
jno
jg
cmp
mov
or
cltd
movb
lcall
leave
roll
mov
adc
cmp
out
sahf
lds
adc
divl
jg
jge
add
adc
test
lcall
pop
sub
sub
xchg
daa
jp
out
cmpb
jae
ficoml
pop
mov
xor
leave
iret
ss
fnsave
cmpsl
pusha
cwtl
adc
jae
imul
xor
xchg
out
cmpl
mov
lret
sub
inc
repnz
sub
aam
rcrb
ljmp
add
cmp
orl
cltd
idivl
in
inc
jns
xchg
aad
loope
daa
push
jl
cs
push
jle
cmp
icebp
adc
lcall
push
xor
jno
lahf
gs
xchg
icebp
jno
aas
int3
push
mov
es
cli
pop
in
fsts
iret
or
outsl
fdivp
int3
pop
cmpsb
add
ficoms
gs
push
in
in
imul
fcmovnb
and
outsb
jg
and
cmp
cmp
and
icebp
and
rcrb
sbb
xor
jg
add
aaa
add
and
sarb
loope
loop
stos
dec
add
fdivl
jbe
aam
lcall
in
sbb
mov
jecxz
in
sbb
add
es
inc
fiadds
sub
or
ret
fwait
imul
inc
fistpll
lods
push
das
jle
xor
call
dec
fldenv
cmpsb
enter
orl
and
stc
and
push
test
cmp
jecxz
je
push
pop
aas
dec
push
cltd
cmp
cmp
not
jecxz
arpl
mov
or
mov
dec
xchg
nop
push
push
insb
xor
or
test
pushf
push
xchg
inc
add
xchg
add
test
push
std
int
outsl
and
sbb
pop
cld
cmpsb
xor
nop
call
pop
mov
ja
or
inc
xchg
mov
mov
test
push
mov
shl
mov
adcb
pop
data16
mov
mov
mov
rorl
shlb
mov
daa
and
out
pop
push
push
das
add
mov
mov
fstl
fldcw
mov
or
xor
movsb
das
js
xor
push
test
dec
int
cmc
rcrb
xchg
scas
repnz
mov
ficomps
mov
movsb
hlt
jne
and
and
pop
outsl
xlat
adc
xchg
lock
jp
fistl
xlat
insb
mov
adc
popa
fists
pop
pop
fs
enter
jne
add
cmc
jnp
mov
test
jp
or
inc
fucom
adc
mov
pop
notl
inc
cmp
cmp
imul
icebp
stos
sbb
mov
stc
jp
mov
cmp
mov
sar
jmp
jae
xor
lds
mov
push
cmpsb
das
fs
mov
inc
loope
loope
call
push
bound
je
mov
or
push
or
xor
nop
sbb
or
pop
pop
data16
xor
sbb
adc
mov
addr16
mov
push
push
sbb
xchg
jp
mov
fwait
add
jp
bound
roll
sub
pop
icebp
mov
push
add
sti
in
out
push
fwait
sub
outsb
mov
test
repnz
fnstsw
pushf
adc
inc
push
and
clc
ret
and
push
or
sub
mov
lods
mov
clc
push
pop
addr16
jge
jmp
xchg
pusha
sub
or
or
pushf
or
rcll
data16
add
add
add
add
pop
add
add
add
add
add
dec
xor
adc
stos
nop
andb
das
repz
ss
pushf
lcall
xchg
notb
in
gs
cltd
mov
or
mov
xchg
movsb
sarb
push
pop
lret
xor
cmp
mov
arpl
les
ret
jb
jae
idivb
or
cli
jg
nop
lods
cmp
outsb
testb
in
xchg
aas
fs
push
popa
xor
mov
sub
outsb
mov
xlat
clc
jmp
add
dec
fwait
sti
xchg
fdivrs
xor
scas
mov
jbe
arpl
cmp
add
mov
push
mov
mov
scas
jne
out
int
fs
cmc
adc
out
cmp
fists
lea
std
inc
or
and
cld
dec
dec
mov
imul
dec
and
fldenv
dec
sub
dec
fidivrs
sub
les
mov
xor
push
shrl
stos
mov
mov
pop
imul
cmc
lds
xlat
inc
cmp
enter
ljmp
pop
inc
sub
sub
mov
lret
mov
xchg
xchg
mov
jno
arpl
jno
inc
xchg
mov
and
iret
outsb
jg
pop
mov
repnz
xor
xor
loope
decl
adcl
repnz
push
mov
mov
pop
adc
xor
xor
add
cmpsb
dec
cmp
in
daa
add
sub
popa
xor
or
test
xor
adc
je
mov
ror
push
mov
mov
lods
fadds
movsb
pop
pop
sbb
in
fildl
mov
mov
lcall
in
adc
pop
push
shl
sahf
js
out
sbb
in
jmp
mov
iret
mov
mov
nop
test
xlat
mov
xlat
out
fstl
gs
sub
aam
ret
cmp
pusha
int3
call
mov
xchg
out
divl
out
sbbl
cmpb
sbb
in
fsubp
test
mov
mov
cmp
mov
mov
addr16
or
dec
or
mov
lea
addr16
subb
imul
scas
sub
fwait
and
jns
or
and
push
push
push
popf
adc
movsb
enter
xchg
inc
nop
mul
les
and
out
mov
enter
pusha
outsb
xor
test
jl
push
imul
icebp
scas
idiv
mov
pop
sub
jmp
fdivs
mov
sbb
or
xchg
push
fisttpl
or
repz
mov
lcall
rorb
ljmp
sub
adc
dec
stos
jmp
pop
mov
or
adc
jge
mov
insl
mov
loopne
fwait
cltd
arpl
in
fldcw
sbb
icebp
push
push
mov
mov
or
jmp
mov
ret
enter
je
popa
xlat
inc
push
clc
insb
jle
sub
xor
mov
or
lods
mov
outsl
mov
cs
add
test
in
jno
fs
nop
sbb
mov
mov
fmulp
jno
or
pop
or
popf
sbb
dec
inc
loope
sub
push
push
adc
mov
test
mov
push
and
cmp
mov
popa
aas
inc
jae
pop
mov
adc
jnp
stos
or
scas
clc
outsb
add
stc
in
add
lock
mov
xor
xchg
stos
movsb
aaa
xor
adc
cmpsl
mov
inc
shr
je
jns
stos
sub
push
jle
sbb
stc
pop
loopne
sti
cmp
add
cltd
sbb
pushl
sbb
inc
sbb
xchg
adc
mov
or
scas
pop
movsb
xchg
pop
mov
jnp
mov
cmp
icebp
pop
mov
xchg
hlt
add
pop
test
mov
mov
test
jno
mov
sub
dec
sub
out
ja
mov
into
sti
cmp
pop
repz
mov
lods
sub
es
pop
mov
pushf
loope
dec
mov
mov
gs
jecxz
or
or
shlb
ss
pop
cltd
xchg
push
mov
sbb
ds
testb
cmp
sbb
loopne
lret
test
push
sub
push
mov
lret
push
cmpsl
jns
negb
pop
lock
inc
inc
adc
test
xchg
pop
inc
popf
and
sbb
jle
stos
xchg
sub
jmp
arpl
scas
call
pusha
or
ja
dec
pop
cmc
adc
inc
mov
out
popf
xchg
mov
dec
mov
fwait
pop
ss
insl
sbb
xor
stc
mov
sub
xor
xchg
repz
dec
mov
bound
dec
jo
ljmp
jg
dec
leavew
outsl
ja
adc
shrl
out
hlt
jmp
mov
or
test
daa
les
cmp
popa
jo
fwait
xchg
mov
mov
jg
mov
sub
iret
je
add
dec
aas
fisttps
sti
push
push
sub
sbb
and
iret
das
test
xor
xor
stos
ljmp
mov
or
or
out
adc
call
dec
cmp
gs
adc
mov
pop
mov
push
scas
jle
ds
push
inc
out
and
movl
int
pop
xchg
or
lods
mov
mov
add
cmpsl
dec
push
and
fwait
xchg
outsb
sub
arpl
mov
test
leave
push
lea
cmp
jae
add
push
fadds
cltd
dec
dec
jl
fstpl
les
and
and
mov
test
xchg
aas
loope
js
xor
scas
push
sti
dec
xchg
lock
stc
mov
shr
notl
hlt
push
mov
andb
sub
pop
add
mov
xchg
mov
xor
xchg
int3
dec
mov
pop
fistpll
pop
roll
or
inc
pop
xchg
adc
inc
into
pop
sbb
imul
rorb
xorl
das
aaa
xor
stc
and
scas
sub
iret
jle
shlb
jl
stc
xor
aam
sub
dec
mov
sbb
xchg
xor
jo
mov
mov
fistpl
mov
mov
sub
stc
lret
mov
mov
push
test
aad
nop
mov
scas
jo
mov
or
les
jb
ja
jmp
push
cmc
jg
sbb
pop
xchg
pop
lcall
stos
mov
jmp
aaa
xchg
pop
sbb
jp
out
mov
add
ficoms
mov
fwait
sti
jmp
sbb
fcmovnu
in
imulb
mov
ror
mov
dec
pop
adcb
xchg
dec
cmp
pusha
adc
insl
movsl
ds
or
add
shll
cmpsb
push
mov
mov
test
fcoms
out
fwait
jb
cld
fst
mov
out
jl
loopne
js
sbb
negl
pusha
and
mov
or
neg
mov
mov
xchg
ljmp
sbb
add
mov
das
js
dec
sbb
in
sbb
sahf
mov
or
dec
inc
push
xchg
jecxz
and
mov
adc
mov
dec
cmp
rcl
dec
pop
rcll
lods
fmul
xchg
or
push
jl
mov
inc
inc
push
and
and
inc
pop
jl
push
push
pop
insb
jp
push
mov
icebp
or
loopne
cmp
lret
jecxz
pushl
enter
sub
in
mov
sbb
std
test
cpuid
test
in
inc
fsubrs
iret
out
mov
in
lds
jns
jl
mov
jae
adc
dec
pop
jne
mov
popa
notl
pop
ja
push
das
mov
and
es
repnz
inc
cwtl
ja
sub
jno
jo
repz
sub
das
inc
in
and
xor
lock
mov
loopne
or
dec
sub
adcb
sbbl
mov
push
stos
mov
lods
das
addr16
adc
or
pop
pusha
mov
aaa
gs
pop
or
and
cwtl
mov
mov
imul
ret
mov
pushf
mov
out
and
sub
scas
test
jg
add
dec
and
adc
adc
add
add
ja
lods
icebp
cmp
subb
mov
pop
jae
mov
repnz
dec
cs
pushf
inc
mov
dec
in
add
adc
fsubl
mov
mov
mov
xchg
pop
mov
cmp
addl
arpl
inc
mov
fsubrl
mov
add
mov
fs
js
shll
je
xlat
rorb
cmp
xlat
aaa
lea
push
stos
aas
outsb
mov
shl
mov
and
fadds
cmpsl
inc
test
lret
dec
fidivs
add
push
mov
add
adc
fistps
ja
int3
mov
cmp
mov
mov
pop
stos
hlt
mov
inc
adc
dec
inc
aas
push
pop
loope
cmpl
xor
add
push
xor
repz
lds
jb
mov
in
push
mov
and
cld
gs
stos
and
mov
bound
scas
xchg
push
cmpsl
mov
out
ret
inc
mov
push
scas
jae
clc
and
sti
sbb
and
arpl
mov
jle
popf
jo
in
jnp
push
jmp
xor
mov
inc
xchg
fs
jns
mov
cmp
mov
repz
xor
xchg
cmp
out
cmp
push
xor
repz
mov
lret
mov
and
push
jg
inc
je
imul
test
push
inc
icebp
in
sbb
or
cwtl
jno
fbld
or
imul
cmp
rorb
mov
mov
mov
mov
jno
outsl
inc
ffree
jb
outsb
out
mov
lods
sub
sbb
sbb
cld
scas
aad
stos
test
and
xchg
adc
ds
jl
jmp
xor
mov
pop
jns
push
inc
gs
ja
idivb
dec
and
fpatan
add
sub
into
cmp
dec
inc
mov
cs
sbb
lods
fcoms
insb
out
push
mov
dec
fldpi
movsb
add
cwtl
mov
fisubs
adc
hlt
gs
fmuls
jb
adc
cs
inc
ljmp
mov
pop
pop
repnz
lock
das
jge
imul
aas
nop
test
push
js
popf
jne
and
sub
pop
xchg
push
push
cmp
sbb
ret
into
test
cmpsb
or
int3
dec
shl
cmp
lcall
push
inc
adc
jne
icebp
add
add
xor
and
pushf
mov
cltd
outsb
shrl
adc
push
aas
mov
cmp
mov
jl,pt
and
cmpsl
nop
mov
insb
jo
lods
push
push
shll
xlat
xchg
hlt
adc
xchg
repz
or
out
lods
iret
iret
adc
mov
mov
add
xlat
scas
daa
cmpsl
in
clc
adc
push
pushf
jle
lea
jl
mov
cmp
adc
aad
fdivr
mov
mov
loopne
inc
cmp
mov
shrl
or
test
mov
fstpl
je
mov
ret
pop
test
xchg
cmp
push
cmp
jg
cld
add
pop
mov
jecxz
dec
int3
iret
pusha
cld
adc
jle
xchg
add
dec
pop
imul
jb
shlb
outsb
les
adc
xchg
dec
clc
mov
hlt
jmp
lds
lret
push
sbb
adc
clc
push
lock
xchg
xchg
popf
stos
lahf
push
xchg
pop
dec
hlt
leave
mov
jns
das
aam
rolb
iret
repz
mov
ljmp
push
imul
in
xor
popf
sub
push
mov
dec
mov
jo
push
ds
std
mov
sbb
repz
inc
jae
test
stos
inc
ret
shll
cli
xor
cmc
sub
sbb
xchg
cmp
movsl
enter
popf
pop
jge
mov
aas
lret
sbb
and
fisttpll
sub
push
mov
and
push
cmp
and
divl
shl
cmp
hlt
mov
jle
hlt
push
jbe
cmp
mov
mov
ret
mov
lods
pusha
jp
mov
dec
pop
jb
dec
inc
and
fldt
fimull
lods
test
dec
jo
push
outsl
mov
sbbb
or
stc
xchg
xchg
lods
aad
sti
inc
nop
fcoml
xchg
jb
and
mov
pop
push
jo
dec
or
iret
mov
xchg
repnz
stos
mov
sbb
adc
in
or
push
jo
imul
iret
xorb
js
adc
push
ljmp
das
scas
jmp
faddl
and
mov
imul
rcll
filds
sbb
pop
or
cmp
xchg
mov
repnz
in
ret
in
sbb
shrb
orb
mov
dec
dec
push
mov
add
popa
gs
negb
shlb
imul
add
lods
je
clc
ljmp
call
mov
jns
dec
dec
adc
inc
add
push
int3
push
out
loopne
je
and
addr16
adc
es
push
xor
mov
or
cmp
dec
fisubrs
mov
cmc
outsb
sahf
add
stc
arpl
ljmp
jg
adc
mov
int
xchg
dec
pop
daa
shrl
fisubrl
jmp
mov
xchg
jmp
rorl
ss
aad
mov
mov
mov
dec
movsb
inc
out
and
idivl
scas
insl
enter
andb
fisubl
insl
cmp
out
cmp
mov
loopne
or
fistpll
cmpsl
sub
outsb
jle
stos
aad
bnd
cwtl
pop
mov
test
sbb
inc
and
jnp
jle
roll
dec
jecxz
je
daa
arpl
inc
insb
mov
mov
enter
mov
pop
mov
pop
loop
mov
mov
loop
mov
sbb
shr
in
icebp
push
cmp
add
into
mov
repnz
add
cwtl
rclb
pop
aad
inc
xor
adc
stos
mov
cmpsb
shll
cmc
adc
call
dec
mov
xchg
inc
and
add
daa
jl
mov
nop
sbb
jmp
adc
inc
sti
mov
inc
lret
scas
sbb
and
fimuls
cmp
add
or
popf
lods
movsb
addl
jnp
mov
pop
aas
popa
js
sbb
pop
bound
push
sub
and
paddusw
dec
fildll
nop
cli
pop
imul
loop
and
call
push
rolb
jle
push
dec
sarl
fcoms
pop
xor
push
sub
lds
sbb
fs
ret
stos
mov
adcb
das
ret
imull
add
jne
push
and
mov
enter
mov
pop
sbb
ds
dec
faddl
fidivl
dec
jg,pt
into
adc
lds
inc
shll
xor
rcll
in
stc
pop
mov
arpl
inc
in
lods
sub
fnstcw
nop
xchg
in
jbe
adc
dec
in
lods
mov
aad
jne
sub
out
sbb
mov
enter
cmp
notl
fisubrl
add
repnz
and
insl
dec
jo
push
test
js
out
cltd
mov
xchg
ds
call
push
icebp
in
and
dec
loopne
jmp
ja
aas
sbb
fildll
mov
sti
not
shll
stos
or
insl
das
imul
outsb
js
push
jns
inc
sbb
mov
dec
fidivl
leave
add
push
push
lea
les
jo
adc
mov
or
lock
adc
dec
dec
push
mov
adc
or
nop
call
pop
cmp
mov
hlt
inc
sub
orl
shlb
add
je
data16
mov
mov
adc
cltd
orl
pop
jp
and
xchg
inc
mov
loope
icebp
inc
inc
xchg
mov
and
cmp
adc
sahf
jne
sub
shl
or
cs
aad
outsl
inc
call
aad
lock
loope
repz
and
xor
xorl
mov
push
dec
test
ret
xlat
push
fnsave
xchg
lret
pop
and
pop
sub
sub
call
lret
test
test
sub
sbb
push
popf
imul
sbb
sbb
incb
jp
mov
dec
mov
mov
jg
lock
and
jmp
out
pop
ret
addr16
push
aad
and
push
nop
dec
adc
rcrb
les
jmp
mov
adcl
inc
out
jno
sbb
jnp
pop
lahf
or
in
xchg
roll
mov
into
cltd
sub
stc
xchg
jmp
ret
mov
aas
adcl
shll
jb
mov
lods
mov
or
idivl
push
fcoml
std
jg
mov
mov
fsub
add
shrl
lods
nop
sbb
lock
pushf
lcall
push
andl
pop
xlat
or
js
cmp
pop
int3
hlt
or
mov
cmp
and
push
push
int3
inc
dec
jl
or
sbb
dec
cmp
pop
jl
les
jmp
mov
daa
mov
fadd
cmpsl
in
cmp
stc
leave
popl
test
cmc
xorb
inc
cmp
xchg
add
pop
xor
add
ss
sti
pop
push
jg
sub
js
test
mov
icebp
aaa
xchg
or
in
pusha
jl
jmp
add
ror
push
sub
cmpsl
imul
dec
push
sbb
or
test
and
lds
xchg
adc
daa
mov
fldt
mov
sbbl
cmp
lahf
lock
add
lret
adc
shl
or
sbb
and
popa
fstl
push
dec
cld
into
in
pop
jne
pop
or
clc
and
adc
test
jb
and
mov
stos
stos
pop
sbb
pop
fildl
icebp
xchg
dec
push
punpcklbw
or
fstl
mov
xorb
ds
inc
jecxz
jae
imul
outsb
push
and
adc
fld
in
mov
sub
fsubl
dec
push
out
bound
mov
inc
loope
shrl
leave
test
iret
fisubs
jno
sub
dec
bound
insl
hlt
jno
outsb
mov
jnp
cmp
xor
adc
mov
add
fbstp
incb
cltd
push
scas
adc
fists
fisttps
pusha
stos
push
adc
ret
call
push
xor
lods
js
imul
std
je
ja
stos
les
mov
pop
jecxz
mov
pop
add
bound
dec
mov
push
lea
call
jae
pop
push
inc
xchg
ret
test
mov
orb
test
stos
fnstsw
les
adc
into
repz
or
std
mov
jge
pop
bound
xchg
sbb
imul
pop
mov
add
mov
jo
jge
insl
mov
into
mov
das
insb
out
cld
adc
xchg
int
clc
xchg
push
loop
imul
lods
stos
test
cmpsb
shll
pusha
scas
test
sub
sbb
push
scas
cmp
adc
add
mov
pop
imul
cmp
pop
adc
jno
pop
mov
push
cli
inc
jmp
jg
mov
jo
pop
fldcw
cld
daa
ds
lea
pop
pop
lds
mov
and
imul
mov
adc
ljmp
jg
add
jae
push
cmp
insb
aad
mov
cli
mov
inc
mov
or
lds
dec
add
mov
pushf
jg
int3
mov
mov
hlt
pop
add
jecxz
jge
cmp
outsb
xor
lock
out
out
inc
cmp
movsb
jns
nop
xchg
in
dec
insl
ljmp
inc
sub
aad
lods
push
sbb
aas
xchg
out
loope
rclb
or
popa
sub
sbb
rorl
jp
arpl
jp
push
pop
lods
push
mov
fdivr
adc
aaa
rolb
push
mov
mov
int3
dec
push
cmpl
sub
rcll
jl
add
push
clc
mov
push
jno
les
ljmp
pop
fdivs
lds
leave
xchg
jo
mov
jb
cmp
fwait
lea
dec
push
movsb
adc
rcr
xor
add
push
repnz
jl
mov
xchg
push
cmp
push
lcall
sbb
std
subl
jmp
or
andl
addr16
lods
stc
or
jg
cld
pushl
cmp
and
rcl
and
dec
sub
dec
repnz
lcall
iret
in
test
leave
mov
sub
arpl
push
adc
adc
sbb
flds
lods
sahf
stos
cltd
dec
fisubrl
mov
orl
ljmp
sti
cmc
mov
jae
inc
int
bound
push
imull
es
hlt
aad
mov
add
dec
jae
mov
test
mov
and
sahf
add
mov
notl
push
into
out
stos
aam
adc
nop
jp
adc
mov
out
arpl
mov
adc
in
mov
scas
lods
shrl
sbb
in
loop
jecxz
fs
and
loop
dec
in
leave
sbb
xchg
add
inc
xchg
xchg
push
sub
inc
pop
pop
dec
lock
rcl
lret
xchg
inc
adc
push
pop
add
push
pop
mov
jecxz
out
jo
fs
fstpt
push
add
dec
and
push
push
scas
gs
icebp
adc
out
jg
dec
loopne
pop
pop
stos
scas
or
pop
adc
pop
xchg
pop
xchg
fidivl
iret
mov
or
pushf
sbb
mov
jbe
adc
shlb
incl
lock
ret
cmc
adc
lahf
mov
loopne
es
adc
mov
dec
fadds
scas
xchg
mov
dec
push
fs
cmp
mov
jbe
out
fmull
pop
mov
or
or
out
les
movsb
xor
lods
inc
mov
add
mov
pop
xchg
pop
mov
or
or
cmp
push
dec
insl
mov
imul
push
push
inc
cmpsl
mov
xchg
daa
mov
movsb
addr16
fwait
lret
push
movsl
jns
clc
cmp
repnz
imul
push
lcall
pop
cld
mov
pushl
xchg
scas
in
push
pop
jl
jns
cmp
or
sbb
sub
push
pop
dec
fisttpll
dec
lods
push
mov
sbb
outsl
lcall
in
xor
bound
inc
adc
cmp
pop
aaa
int
iret
hlt
leave
or
ss
cltd
fistl
inc
sbb
mov
jmp
cmp
or
pop
daa
ficoml
xchg
addb
lds
mov
inc
std
cmp
movsb
adc
inc
imul
mov
jne
and
pop
dec
mov
aaa
or
mov
or
pop
mov
sbb
sahf
and
outsb
fiaddl
xorb
sub
fdivl
and
cmpb
adc
mov
mov
stos
aas
shll
and
aad
out
mov
in
sar
jnp
shl
insl
or
imul
and
insb
insb
shlb
add
xchg
sbb
cltd
fisubl
jae
fdivrs
xchg
mov
addr16
inc
test
aaa
or
iret
push
aam
pop
inc
mov
leave
bswap
push
jl
pop
les
sbb
xor
js
js
jo
adc
loop
add
and
pop
xchg
inc
test
mov
pop
loopne
stc
ja
pushf
xchg
inc
fsts
lock
stos
sbb
jg
jp
imul
jb
dec
mov
mov
inc
mov
movb
xchg
xchg
adc
adc
cmp
fisubs
xchg
sbb
or
xor
aaa
cmp
popf
aad
std
in
js
loopne
push
and
out
and
sub
or
inc
rorl
push
mov
jp
jns
sub
sti
sti
mov
cld
sbbl
out
cmp
mov
xchg
pop
sbb
hlt
pop
lds
mov
std
test
jle
dec
ja
data16
and
cmp
mov
jl
aad
test
sahf
adc
mov
mov
lods
fcmovnb
add
repnz
dec
xlat
add
jmp
adc
iret
and
mov
cmp
daa
sub
xchg
faddl
pop
sbb
je
hlt
adc
test
repnz
aam
lret
loopne
mov
mov
jmp
mov
into
enter
leave
lods
dec
fidivs
lret
dec
xchg
xor
pop
push
je
push
scas
sub
sti
jl
fsubr
push
mov
mov
adc
dec
fs
test
fs
mov
cmpsl
in
lds
sbb
inc
adc
test
cmpsb
mov
iret
push
lcall
jb
cli
lahf
nopl
daa
lods
and
std
orl
cmp
pop
cs
inc
jae
push
popa
add
sbb
nop
add
out
mov
mov
outsl
fdivl
push
shl
xchg
and
jb
ret
and
cmp
bnd
cmp
mull
cmp
mov
out
fcmovu
jo
inc
lahf
pop
push
cmp
adc
pop
aas
sti
jg
pop
dec
dec
pushl
or
add
push
cld
jp
push
jbe
add
adc
jno
inc
or
inc
push
cli
sti
xor
jmp
xor
lret
jo
dec
fwait
repnz
or
jg
ds
or
push
pop
es
xor
divb
das
mov
push
cmpsb
loop
mov
mov
loope
push
sbb
cmp
addl
not
pop
imul
pop
mov
xchg
lcall
xchg
js
xor
fwait
cltd
and
mov
stos
ds
int3
lock
fistps
mov
cld
mov
push
inc
jbe
pop
cmpsl
dec
xchg
jg
adc
adc
pop
lahf
dec
mov
mov
mov
cwtl
or
xchg
loopne
jno
cmp
mov
aad
cmp
lods
dec
dec
add
mov
pop
fiaddl
and
dec
pop
mov
popf
cmc
or
fldcw
loop
cmp
les
fwait
inc
push
pusha
movsl
idivb
push
pop
pop
cltd
pop
testl
mov
aad
lretw
sub
cmp
sub
outsb
addb
adc
mov
fs
jp
cmp
stc
insb
add
roll
repnz
getsec
jmp
lret
outsb
mov
inc
adcb
hlt
cltd
icebp
rolb
jnp
subb
sub
pop
xchg
insl
int3
fsubs
in
or
hlt
ret
push
dec
jnp
ds
jmp
lock
lds
pop
adc
mov
xchg
dec
aas
or
xor
sub
lret
aaa
xchg
popf
jle
push
xchg
shll
stc
rcr
xlat
jbe
dec
and
mov
xor
xchg
push
push
dec
sub
mov
mov
sub
rolb
addr16
mov
lds
fwait
ret
int3
and
dec
or
adc
jl
cmp
test
or
cmp
jge
das
mov
cmp
and
adc
arpl
cmp
push
pop
scas
lds
outsl
cli
mov
or
aad
vpcmpeqw
inc
mov
testl
daa
lods
mov
mov
sbb
adc
mov
mov
dec
pop
jmp
mov
in
fstl
and
outsl
fsubs
jl
icebp
push
je
adc
insb
mov
or
aad
mov
mov
sub
jle
das
pop
cld
sbb
or
mov
cltd
std
sbb
daa
and
add
dec
lds
int
pop
out
test
notb
orb
testb
into
ja
ret
jle
aad
mov
ror
out
lock
in
xchg
push
pop
mov
and
insb
out
data16
daa
mov
jmp
add
sub
xor
aad
sub
addl
cmp
push
sbb
sahf
adc
cmp
push
shll
filds
cmpsb
xor
test
dec
xor
inc
cmpsl
fdivrp
sbb
das
push
mov
jmp
nop
aas
roll
movsl
jp
sub
jl
pushl
lret
enter
cmc
cmp
lods
iret
jmp
pop
aam
inc
testb
mov
in
lds
jae
mov
sbb
aas
adc
rcll
decb
lods
loopne
xor
and
in
dec
mov
int
jle
sub
fdivs
and
xchg
cs
fsubrl
mov
faddl
inc
ficoml
or
xchg
jnp
imul
std
xor
cwtl
dec
sbb
loopne
notb
icebp
jno
out
sbb
outsb
rol
lock
push
lods
stos
pop
and
inc
inc
in
lret
ljmp
adc
xchg
jle
mov
add
mov
mov
aas
mov
sub
cmp
push
lahf
mov
xor
xor
stc
pop
lds
lods
pop
lcall
es
jbe
sub
loopne
jb
rclb
jl
ljmp
inc
push
adc
lret
cmp
dec
icebp
jns
addr16
mov
stos
mov
stc
inc
adc
imul
cmp
inc
sbbb
mov
repnz
shlb
aaa
and
dec
rclb
gs
mov
xor
bnd
add
mov
subl
mov
shlb
lods
push
sub
ret
stos
in
pop
mov
inc
sti
movsl
push
lds
sbb
lea
add
orb
rorl
jl
sbb
outsb
push
push
cli
insl
inc
outsl
pusha
int3
jnp
jle
cmp
imul
js
add
and
cmp
add
dec
in
fimull
adcb
stc
jl
push
cwtl
jge
pop
int
mov
repnz
mov
pop
and
insb
ljmp
xchg
add
lret
test
outsb
std
cli
pop
mov
or
test
cmp
stc
ret
sbbb
inc
es
xchg
xor
mov
mov
imull
fs
jle
daa
or
sbb
repz
jp
sar
pop
mov
scas
pop
orl
cmp
ret
aaa
sbb
pushf
sbb
sti
lea
neg
dec
inc
pop
orb
pop
sbb
popf
rol
cmpsl
repz
insb
mov
iret
pop
fwait
or
dec
clc
xchg
add
imul
mov
fistps
push
mov
push
pop
imul
in
jo
data16
jns
jno
lret
aad
mov
fdivp
stos
das
data16
pop
jge
xor
pop
push
push
arpl
and
shrb
cmp
sub
lea
mov
mov
testb
jns
dec
inc
xchg
cmp
in
pop
aad
push
inc
adc
pop
jp
xchg
das
mov
or
shrb
enter
inc
xchg
inc
cmp
out
sub
and
add
movsl
jmp
cmc
stos
fmull
dec
mov
fnstcw
int3
shll
inc
aam
push
cmp
stos
imull
mov
cmp
sbb
stos
movsb
xor
push
pop
scas
icebp
loopne
sahf
insl
clc
push
cmp
gs
sub
push
orb
cmp
pop
add
cmp
ja
mov
jecxz
dec
stc
push
sarl
fcoml
push
push
jg
jl
sub
cmpsb
adc
jno
inc
sub
fsubl
test
xchg
inc
adc
xchg
cmp
xor
add
sub
lcall
mov
mov
movsb
and
or
test
sarb
mov
ljmp
and
mov
inc
xor
sub
push
inc
rorl
and
sti
rorb
aad
mov
inc
mov
sbb
movsl
and
xchg
cmp
mov
dec
push
push
or
or
mov
push
imulb
jno
cli
ljmp
sbb
push
cli
jmp
lods
or
mov
ret
arpl
dec
mov
push
jle
mov
dec
cmp
movsl
jge
push
pushf
pop
pushf
dec
lcall
adc
pop
mov
xor
out
mov
imul
mov
add
fdivs
sub
mov
cli
pop
dec
clc
rolb
outsb
lea
pop
ret
dec
jbe
mov
add
in
inc
lret
cmpb
mov
movsl
inc
jns
xor
test
and
adc
orl
adc
push
mov
mov
and
std
add
in
js
xchg
clc
mov
movsb
pusha
shrb
pop
lds
jns
pop
daa
jne
roll
xor
mov
inc
cli
pop
xor
xor
neg
pop
bound
mov
xchg
cmovns
arpl
adc
dec
popf
pop
jp
push
in
lret
es
adc
test
mov
cld
pop
mov
pop
mov
xchg
fwait
and
call
and
lcall
insl
fsubs
movsl
mov
lock
push
out
clc
or
and
sub
loop
xor
xor
jp
push
aas
movsl
push
shrl
mov
sub
insb
scas
std
mov
mov
fcomp
inc
or
mov
jmp
dec
test
or
dec
cmp
cmp
in
fndisi(8087
xchg
rcrl
mov
or
dec
mov
lcall
aaa
out
or
fsubl
stc
sbb
stc
push
fwait
rcl
popf
mov
jb
push
inc
and
hlt
cmp
xchg
mov
clc
addl
mov
shrl
adc
pop
bnd
cmpsb
sub
outsb
jb
xchg
xchg
imul
pop
shrl
push
and
or
lahf
pop
mov
dec
inc
inc
sub
add
negb
sub
lds
and
or
fwait
mov
imul
jge
das
xorb
xchg
mov
in
ret
loop
insb
loop
mov
fsubrs
push
scas
mov
pop
sbb
test
jg
mov
pop
repnz
sbb
push
stos
leave
jg
adcl
sbb
int
int3
mov
xchg
fucomip
xor
lock
aad
xor
ljmp
pushf
mov
fs
fists
cmpsl
mov
sub
cmp
sub
fnsave
jle
mov
sub
mov
outsl
cmp
ret
cmp
jne
pop
rcr
test
jl
test
jae
push
sbb
pusha
or
mov
nop
push
ds
sbb
xchg
mov
gs
xlat
fldt
mov
test
cli
dec
movsb
pop
inc
sbb
scas
icebp
mov
pop
ror
add
or
out
xor
test
add
mov
fistps
and
cmp
cmp
icebp
add
jecxz
ja
std
mov
nop
pusha
arpl
leave
test
ds
mov
icebp
and
sbb
clc
jo
xorb
lds
xor
out
mov
shl
inc
loopne
sub
dec
subb
push
mov
fwait
jmp
scas
push
jns
xchg
jb,pt
push
loopne
jg,pn
lahf
arpl
les
mov
leave
cmp
in
and
add
or
dec
inc
jmp
push
pop
mov
popl
test
lea
lods
dec
in
xlat
pop
fidivs
mov
mov
outsl
mov
inc
xchg
jge
aaa
arpl
inc
hlt
je
loop
inc
jbe
pop
cmpsb
add
push
stos
or
xchg
mov
shl
imul
clc
adc
cltd
inc
pop
lods
jmp
push
inc
and
push
xor
push
xlat
mov
aam
fnstcw
mov
push
and
movsb
pop
pop
push
dec
jle
adc
bound
push
subb
mov
sti
gs
add
imul
add
inc
mov
out
pushf
xorl
int
mov
mov
sbb
adc
lods
addb
cltd
cli
and
cwtl
in
push
jecxz
pop
push
mov
push
negb
shl
jb
call
jg
test
push
and
mov
fwait
xor
test
sbb
loope
push
or
into
mov
jnp
call
fdivp
inc
test
or
mov
or
dec
leave
ret
mov
xorb
dec
sahf
push
inc
add
cmp
mov
and
mov
adc
hlt
mov
jnp
mov
fwait
jo
mov
mov
lds
das
sahf
xchg
xor
ficoml
sub
arpl
xor
inc
xor
add
mov
or
sub
dec
jnp
sarb
rcrl
pop
gs
adc
add
pop
push
and
jo
out
jecxz
adc
adc
int
inc
mov
pusha
fbld
addb
adc
sbb
ljmp
push
sub
cltd
cmp
cwtl
nop
push
jmp
out
sub
ret
mov
xor
adc
mov
cmp
and
repz
data16
flds
jnp
add
lods
test
inc
aaa
in
int
std
cmp
shlb
xor
dec
or
dec
fiaddl
cltd
scas
sti
mov
rolb
sub
sub
popf
outsb
mov
cmp
mov
push
movsl
mov
pop
mov
repz
jecxz
sbb
xor
pop
adc
jg
jmp
movsl
sbb
xor
in
call
outsb
enter
push
jl
mov
and
insl
adc
mov
inc
int3
push
lods
addr16
aaa
pop
out
sbb
mov
xchg
mov
ret
xor
into
push
pop
fstpt
insl
mov
xor
jmp
adc
cld
push
sbb
orl
outsb
push
adc
leave
loopne
add
inc
lods
popa
xchg
addr16
sbb
clc
and
incb
sbbl
push
mov
xor
mov
ret
sub
jge
dec
inc
int3
loop
int3
mov
fs
mov
inc
push
dec
insb
std
jmp
dec
lock
std
sti
aam
sub
cmc
jge
test
push
push
push
enter
ljmp
repnz
mov
xchg
mov
cmp
mov
sbb
imul
in
cmp
mov
cltd
cltd
les
fdiv
cld
mov
sbb
mov
mov
xchg
adc
in
or
inc
shll
cmp
pop
xchg
mov
hlt
ret
cmp
or
cmpsb
add
fdivrp
ljmp
xor
dec
mov
pop
imul
hlt
cmp
jle
xor
push
mov
xor
sbb
jp
aaa
cltd
add
xchg
dec
in
cmpsl
stc
std
insb
adc
xor
jne
jp
icebp
arpl
mov
cmp
add
aas
fwait
out
jnp
out
xor
out
out
push
cmp
pop
xor
sbb
mov
pop
and
jns
add
shlb
fisubrl
insl
mov
stos
aaa
mov
inc
sub
push
mov
in
jae
pop
jbe
push
cmp
enter
stos
pop
inc
stc
rol
daa
push
inc
out
ret
sahf
cmp
or
outsl
stos
lock
jo
xchg
icebp
fs
xlat
outsl
push
pop
pop
xchg
adc
or
movsl
cmpsb
sub
sti
adc
xchg
adc
push
fisubl
shrb
jns
clc
andl
fisubl
jl
dec
jp
cwtl
push
cmpsb
xlat
jbe
inc
jb
loope
sub
xchg
imul
push
cmp
or
pop
mov
fstp
inc
test
das
mov
dec
test
dec
add
fbld
aad
cmovbe
stc
and
gs
push
xchg
sub
xor
cmc
xor
testl
mov
in
scas
or
popa
outsl
sub
aad
dec
cmp
mov
pop
mov
and
mov
es
roll
xor
rclb
push
popa
mov
xchg
jl
sbb
bound
mov
cmpsb
or
shlb
inc
lea
xchg
out
in
sub
inc
xchg
or
hlt
jg
xor
mov
int3
es
sarl
fmull
lahf
push
repnz
sub
cwtl
neg
pop
jo
data16
xor
movsb
inc
jge
add
fisttps
xchg
addr16
rorl
cmp
xchg
shll
pop
dec
outsl
sub
outsb
stos
mov
add
scas
cmp
add
add
add
lret
aam
sub
mov
je
jp
nop
rorl
fwait
adc
xchg
lods
int
sub
inc
or
stos
jns
sub
xchg
es
imul
pop
adc
sbb
cmpsl
mov
mov
push
or
mov
cmp
inc
mov
out
add
fiaddl
and
loope
stc
sbb
or
inc
loope
adc
add
es
inc
mov
jns
sub
xchg
sub
ficoms
cli
fs
ffree
pusha
jp
test
pop
lds
aas
dec
sub
adc
or
cmp
int
scas
das
iret
cli
idivl
scas
call
mov
aam
repz
sbbb
sbb
fadd
push
adc
jne
sub
test
sbb
pop
in
jb
loope
sti
jle
test
roll
imul
inc
into
mov
pop
jbe
lock
std
das
rorl
ret
out
cwtl
mov
sarb
sub
fsubr
mov
mov
mov
jg
mov
test
lea
jne
arpl
xchg
push
cmp
xchg
xor
pusha
stos
or
addl
in
xchg
add
inc
fdivr
cmpsb
cmp
in
insb
je
xor
mov
xchg
enter
sub
push
xchg
imul
push
push
lcall
xchg
int3
mov
mov
divb
add
add
in
xchg
clc
scas
sbbb
ja
lahf
mov
cmp
pop
loop
cmp
push
cmpsl
xchg
xchg
lods
mov
xor
cltd
les
xchg
rcll
scas
jecxz
lock
scas
lds
aam
adcl
out
dec
push
add
inc
inc
ret
cwtl
xchg
add
push
sub
pop
dec
repz
fdivrl
sub
dec
loopne
lret
test
dec
outsb
clc
pop
mov
sbb
cmp
pop
stc
nop
les
xor
push
arpl
cmp
jmp
aam
mov
push
xchg
xchg
push
lahf
and
xor
inc
or
pop
sbb
movsl
inc
sbbl
inc
adc
pop
test
in
ss
enter
xor
push
mov
sub
out
pop
inc
cmp
bound
add
mov
aas
jmp
inc
sub
sbb
push
orb
jb
fwait
aaa
ret
push
fnstenv
xlat
adc
lea
es
ss
xchg
loopne
fsts
loop
sub
ds
bound
sbbl
lods
push
jae
ljmp
aaa
pop
aad
pusha
sbb
or
fisubs
mov
jle
bnd
fcomi
arpl
lods
repnz
sti
mov
or
pop
pop
mov
ja
mov
sar
je
popa
or
imul
xchg
clc
mov
ljmp
sbb
xor
enter
sbbl
xor
fdivrl
leave
pop
and
sbbb
pop
shrb
sbbb
pop
adc
xchg
mov
mov
pushf
leave
in
dec
inc
push
or
cltd
jle
and
push
add
jmp
and
cmc
mov
xchg
shl
or
fwait
mov
in
outsb
pop
pushf
mov
jne
pop
out
or
cmpsl
out
fs
dec
pop
pop
xor
dec
xor
add
test
mov
or
push
xor
add
add
add
cmp
add
add
add
add
push
pop
xor
xor
imul
add
and
add
aas
add
xor
and
js
jb
imul
je
inc
dec
js
and
jno
xor
add
push
add
add
dec
add
xor
jo
xor
jae
pop
xor
dec
jb
inc
push
jae
and
pop
push
and
xor
pop
aas
ja
jbe
xor
ss
and
add
pop
and
aas
xor
aaa
adc
mov
adc
repnz
add
add
add
movups
pop
pusha
adc
sahf
cmp
add
js
add
adc
add
adc
mov
adc
in
adc
stos
inc
adc
or
adc
lds
add
adc
adc
dec
dec
adc
mov
adc
arpl
adc
movsb
inc
adc
inc
pop
adc
xor
adc
cs
adc
dec
jp
add
adc
push
push
adc
sarl
adc
mov
adc
xchg
inc
adc
push
xor
adc
push
or
adc
push
push
adc
push
adc
jmp
jns
add
bound
add
pop
adc
jnp
adc
mov
adc
dec
inc
adc
cwtl
adc
into
sbb
add
sbb
add
add
add
push
adc
jbe
adc
mov
push
adc
mov
cmp
add
outsb
adc
mov
adc
andl
add
push
adc
lahf
push
adc
pop
inc
add
xor
push
imul
dec
fs
and
xor
push
arpl
xor
push
dec
push
cmp
ja
xor
push
aas
ss
pop
pop
insl
arpl
push
arpl
dec
cmp
push
dec
ss
pop
add
and
xor
and
xor
jno
push
and
cmp
xor
add
xor
bound
cmp
inc
sub
xor
js
dec
jae,pn
cmp
xor
add
aaa
outsb
cs
inc
pop
and
jo
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
inc
add
add
push
pop
dec
push
xor
push
inc
dec
pop
dec
push
inc
dec
xor
add
dec
pop
pop
inc
dec
xor
inc
cmp
push
push
inc
pop
dec
xor
aaa
push
xor
inc
add
inc
pop
xor
pop
xor
push
xor
xor
inc
xor
inc
inc
dec
pop
push
inc
dec
pop
dec
dec
xor
push
pop
add
inc
pop
push
push
pop
cmp
add
cmp
ss
push
pop
pop
inc
dec
pop
dec
add
inc
pop
xor
xor
pop
aaa
add
push
xor
inc
inc
xor
inc
dec
pop
add
aaa
pop
inc
inc
inc
xor
pop
cmp
push
dec
push
pop
dec
inc
xor
push
pop
dec
push
push
cmp
push
push
inc
pop
dec
push
inc
pop
aaa
aaa
pop
cmp
add
pop
xor
add
dec
pop
dec
inc
aaa
cmp
dec
pop
inc
push
inc
dec
pop
cmp
push
aaa
add
dec
pop
dec
dec
cmp
add
dec
pop
xor
xor
add
inc
xor
inc
add
pop
cmp
pop
cmp
inc
inc
pop
inc
push
push
add
inc
add
xor
cmp
pop
inc
add
add
add
xor
add
add
push
add
add
add
pop
add
xor
add
inc
add
push
add
add
inc
add
add
add
dec
add
pop
add
add
push
add
push
add
pop
add
dec
add
inc
add
push
add
xor
pop
add
add
dec
add
add
add
inc
add
push
add
dec
add
aaa
add
inc
push
add
add
pop
add
add
xor
pop
push
add
add
dec
add
xor
push
add
pop
add
pop
add
inc
add
add
pop
add
add
add
push
add
cmp
pop
add
inc
add
dec
add
push
add
aaa
add
add
add
inc
push
insl
or
mov
cmpsb
xchg
scas
nop
cmp
das
icebp
aaa
or
add
pop
popa
imul
outsb
jne
dec
outsb
ja
jo
push
arpl
pop
je
dec
ja
jo
bound
test
movsb
add
pop
add
push
add
iret
add
or
movb
out
add
add
sahf
add
mov
add
add
mov
jns
add
add
push
inc
add
cmpsl
cmpsb
inc
add
adc
gs
xor
cltd
add
int3
nop
nop
adc
nop
sbb
leave
clc
sarl
adc
shlb
test
dec
inc
enter
lcall
jbe
jns
in
adc
pop
xchg
roll
cmp
or
dec
push
inc
mov
inc
hlt
mull
out
push
push
div
cmp
aas
stos
adc
and
stos
ja
dec
mov
cltd
aaa
popa
jnp
fsub
fbstp
dec
pushf
pop
mov
imul
scas
arpl
movsb
mov
shlb
hlt
mov
xchg
inc
jo
xor
fidivrs
loop
mov
xor
dec
aad
push
cmp
sar
sbb
xor
popa
in
faddl
jp
test
mov
pop
sub
jl
movl
aad
or
xchg
int3
jns
ljmp
insb
mov
dec
nop
sub
mov
sub
mov
dec
in
add
rol
add
xor
dec
stc
jo
leave
sbb
pop
fcom
and
aam
insl
push
jbe
imul
mov
lcall
xchg
pushf
or
test
push
bound
sbb
loopne
cs
test
shrb
mov
roll
sbb
movsb
lret
push
mov
pop
fnstenv
icebp
and
push
pop
cmpl
test
femms
rcll
and
inc
movsl
out
xchg
or
shll
xorb
cmp
jnp
dec
fisubrs
jbe
movsl
pop
sub
notb
mov
sbb
loope
fs
jmp
mov
je
pusha
adc
adc
inc
adc
push
outsl
cmp
sub
bound
js
pop
jbe
notl
bound
dec
inc
push
subb
fwait
xor
jb
clc
push
or
loope
xchg
xor
push
sti
ljmp
outsl
sahf
test
std
stos
sub
mov
dec
or
fs
inc
adc
pop
outsb
lock
adc
subl
push
push
lcall
pop
jmp
fistpll
xor
aaa
dec
mov
cs
movsb
push
push
pop
pop
mov
mov
fsubrs
out
sbb
jo
xchg
and
leave
cli
lds
cltd
mov
dec
pusha
in
push
adc
mov
addr16
rol
sub
fnsave
ror
ss
inc
int3
inc
push
mov
pop
xor
cmpsb
adcl
movsl
sub
pop
sbb
mov
lret
sbb
aam
ret
sbb
pushf
hlt
jmp
add
mov
es
sub
in
scas
xor
jmp
pop
pop
cli
adc
pop
loope
ret
lahf
cli
int3
xor
add
int
lock
sub
pusha
fcompl
xchg
cli
pop
sbb
adc
dec
ja
jecxz
ret
addb
fdivrs
or
or
sbb
aam
push
test
pusha
or
mov
jo
fwait
jnp
push
or
and
jb
into
push
xchg
inc
ret
jecxz
cli
fwait
sahf
mov
jmp
in
push
imul
add
sbb
fdivrl
mov
loopne
stos
mov
mov
and
sub
test
pop
xor
fwait
orb
xor
push
mov
cmp
stos
lock
xchg
push
hlt
pop
xchg
adc
movsb
sti
inc
les
popf
and
jo
sub
pop
pop
and
xchg
loopne
inc
mov
jo
into
arpl
sub
mov
pusha
add
rorb
clc
aam
xor
adc
int
shrb
mov
adc
xor
push
scas
cmpsl
push
pop
test
test
push
ss
lahf
into
pushf
fsub
and
daa
jno
xlat
adc
jne
leave
aas
pusha
dec
test
test
and
mov
mov
pushf
sub
sub
movsb
lahf
arpl
pop
xchg
aad
cli
sub
dec
test
ret
pusha
cmp
sti
adc
repz
jp
push
push
push
scas
bnd
mov
push
push
ds
je
lcall
add
cmp
loopne
xchg
movsb
movsb
loopne
ljmp
icebp
mov
push
jb
sbbb
and
stos
cld
cmp
dec
mov
fs
push
adc
sbb
cld
sbb
jbe
loopne
push
jl
fdivp
dec
imul
inc
adc
icebp
dec
imull
push
inc
sbb
mov
xor
das
pop
fstpl
push
xor
data16
sbb
pop
imul
jmp
jnp
inc
inc
sbb
sub
ss
xor
dec
or
pop
ds
mov
mulb
ret
imul
fdivr
push
mov
mov
jmp
jb
cmp
cwtl
out
movsl
repnz
adc
xchg
idivb
dec
dec
mov
cmpsl
cmpsb
xlat
scas
adc
ret
movsb
andb
mov
xchg
sub
xchg
jmp
inc
stc
jl
push
pop
aaa
fwait
div
mov
mov
jns
sub
xor
and
scas
sti
jmp
daa
outsb
daa
mov
in
mov
mov
inc
xchg
pop
sub
rorl
sub
out
adc
aaa
hlt
xchg
push
mov
or
pop
je
sub
fwait
fnstenv
jb
stos
sbb
ficompl
and
imul
cltd
jae
movsb
push
fiadds
repz
dec
xor
dec
jb
xlat
cmc
pop
fidivl
cld
fcmove
sbb
mov
outsl
ror
popf
or
mov
or
inc
popf
loop
dec
sub
cltd
pop
pop
das
fcomps
je
cld
mov
into
mov
jno
sbb
fucomi
push
ret
dec
pop
or
ja
or
mov
mov
sbb
jbe
ljmp
mov
lret
rclb
jle
sbb
jns
fstl
pop
mov
add
mulb
cmp
nop
testl
lret
int3
hlt
and
jp
clc
test
rcrl
jno
fldt
mov
js
jp
shr
xchg
add
in
dec
sar
inc
gs
push
stos
es
div
add
gs
and
push
addl
mov
pop
push
cmpsl
cwtl
pop
loopne
push
adc
cmp
add
iret
sahf
fldt
scas
and
aas
cs
pop
mov
call
inc
lret
xchg
fidivs
inc
mov
sbb
cmc
fdivrs
dec
xor
or
icebp
push
xchg
jmp
cmp
test
or
push
lcall
push
lret
mov
dec
je
popf
jo
xor
add
movsb
adc
idiv
es
push
jl
movsb
jp
pop
imul
stos
cmpsl
sub
xchg
inc
or
ficoml
lret
jecxz
jns
xchg
imul
daa
mov
jb
mov
mov
sub
pop
mov
jo
pop
test
pop
das
pop
cltd
aas
sbb
outsl
xor
popf
push
aam
push
inc
sbb
lret
inc
xchg
rorl
out
jne
pop
inc
jmp
push
fdiv
add
inc
dec
fisubrl
pop
imul
in
hlt
add
add
xchg
dec
icebp
cmp
out
cmp
add
mov
cmp
and
mov
sbb
in
into
or
loope
mov
and
mov
jp
xor
mov
xchg
xchg
scas
aas
mov
jl
sub
jnp
sub
mov
mov
xchg
pop
or
xchg
and
loop
outsl
test
popf
scas
add
cmpsl
adc
mov
xchg
sub
or
insb
mov
sub
xchg
lret
mov
mov
pop
push
cmp
cld
imul
xchg
mov
lds
movsl
ffreep
imul
pop
mov
or
sub
lods
push
push
sbb
inc
jmp
lds
stos
pushf
imul
lret
ret
ja
ret
cmpsb
sbb
mov
mov
outsl
or
dec
mov
jb
insl
scas
repnz
xlat
dec
mov
or
nop
lret
pop
mov
lcall
xchg
mov
mov
xchg
call
outsb
mov
inc
adc
es
fs
lcall
push
imul
cmp
std
inc
data16
inc
out
incb
xchg
dec
sub
mov
call
rorl
shrl
pop
mov
pop
stos
adc
les
mov
dec
lret
sbb
mov
jnp
mov
inc
xchg
les
mov
add
dec
icebp
push
jl
sub
push
jns
pusha
dec
jle
sbb
ret
pop
cmp
imul
dec
sub
scas
and
mov
in
jg
cmp
iret
pop
fdivs
faddl
xlat
gs
jle
outsl
mov
sub
push
aas
push
jmp
mov
int
hlt
cmp
dec
int
imul
jns
repz
sub
outsl
pop
lret
adc
mov
push
fwait
in
cmp
or
out
mov
sbb
adc
clc
pop
push
lds
pop
mov
aam
dec
sbb
add
popa
lock
movsl
pop
loope
in
inc
xor
sub
add
xor
bound
gs
or
or
xor
mov
and
add
jns
jp,pn
mov
fmulp
sub
cmp
add
cs
rcl
shrl
je
pop
imul
mov
je
repz
in
loope
fwait
imul
push
ja
mov
lcall
mov
addr16
and
cmp
pop
cltd
jo
and
xor
xchg
cmp
pop
sbb
mov
fdivr
sbb
popf
xchg
xchg
gs
sub
repz
sub
push
leave
jnp
and
filds
jne
insl
jb
dec
adc
jp
push
sbb
mov
cmp
and
pushf
xor
push
mov
add
pop
rcrl
sahf
xchg
pop
push
inc
addr16
mov
repnz
cmp
dec
mov
es
lds
imul
fcom
push
fistpll
test
dec
or
adc
jns
in
lcall
jg
mov
jae
adc
icebp
ror
scas
cmp
outsl
mov
mov
repz
in
push
xchg
lret
in
mov
mov
xorl
pushf
push
lret
adc
lret
loope
xor
xor
add
cwtl
lock
fnstcw
scas
gs
dec
decl
pusha
lcall
cmc
filds
inc
or
pop
addl
int3
or
jp
or
inc
shl
inc
shl
out
inc
jp
mov
scas
stc
push
faddp
xorl
repz
rcrl
aam
or
adc
push
dec
adc
lret
sbb
aad
fidivl
mov
mov
jp
push
inc
push
jl
sbb
daa
lcall
jecxz
inc
jns
fcmove
adc
pop
addr16
leave
in
push
sub
ljmp
fcoml
popf
pop
xchg
sub
cmc
pop
sbbl
repnz
mov
aam
jge
add
stos
mov
fildl
add
cmp
jne
leave
add
cmp
adc
ja
mov
or
push
push
cltd
lods
in
popf
cmp
push
add
xor
scas
arpl
or
jo
xchg
cmovp
movsl
call
lock
jae
jbe
cmpsl
sbb
js
push
mov
ror
pop
movsl
or
aad
jge
mov
jns
aaa
in
aam
jl
orl
mov
in
mov
push
xor
cmp
mov
pop
je
aam
xor
imul
xchg
jp
jmp
sub
jle
sbb
cwtl
xchg
pusha
push
dec
popf
fdivl
mov
mov
call
fsubl
mov
dec
mov
fdivs
push
mov
inc
pop
jae
fcomps
dec
or
sub
push
test
sub
and
jns
rcrb
clc
js
sub
dec
pop
movsb
xrelease
je
fadds
adc
outsl
sub
sub
cld
pop
rcr
std
inc
outsb
push
in
xchg
sbb
inc
cmp
lock
dec
add
dec
leave
xchg
subl
testb
fists
ss
cmp
test
imul
adc
mov
aam
lret
sbb
stos
scas
pop
loopne
repnz
dec
cmpb
xor
sub
fimull
lahf
dec
pushl
add
dec
fwait
sbb
cmc
aam
xor
icebp
jbe
xchg
es
inc
cmp
dec
add
jns
add
enter
ret
lret
outsb
fcompl
jno
shrl
insl
rcrl
jae
xor
shll
or
cmp
mov
mov
cwtl
shrb
sahf
push
repz
mov
adc
movsl
cmp
negb
jnp
xchg
pop
in
xor
ret
in
dec
repz
xor
mov
into
adc
dec
mov
xchg
ret
out
cmp
adc
mov
hlt
test
cli
dec
pop
cmpsl
push
movsb
sbb
mov
into
gs
mov
xchg
testl
and
lcall
xor
stos
cld
dec
push
push
sub
mov
lret
dec
inc
pusha
outsb
push
lods
popa
movsl
add
mov
jp
shlb
es
inc
into
pop
clc
adc
dec
sbb
das
subb
cli
pop
gs
iret
in
mov
pop
adc
adc
xchg
pop
in
jge
inc
mov
push
leave
push
mov
mov
ja
arpl
aaa
or
sti
jg
int3
add
mov
xor
sub
xchg
and
fstpl
pop
in
xor
pusha
xchg
or
jmp
shlb
aaa
fisubl
out
fistpll
add
push
xchg
pop
mov
fcoml
movsb
js
mov
shll
mov
mov
mov
cmc
inc
jnp
cmp
lret
mov
in
adc
dec
icebp
mov
fiaddl
pop
sub
imul
jecxz
add
fidivs
gs
fs
test
sarl
add
negl
and
pop
ret
adc
sbb
rolb
jge
mov
iret
in
sbb
bound
mov
xor
mov
push
sub
iret
pop
jle
int
xchg
pushf
sahf
stc
pop
movsb
lahf
inc
xchg
fiadds
int3
cmpsl
sub
movsl
xchg
sub
jl
lods
pushf
push
cmp
mov
xchg
es
iret
xchg
jp
sbb
rep
das
sbb
div
addr16
stos
addr16
jge
adc
js
je
jne
loope
addr16
shl
js
mov
in
adc
pop
bnd
lret
cmp
ljmp
test
aaa
imul
or
xor
push
data16
xor
jecxz
or
or
in
push
mov
pushf
in
popf
js
daa
popa
sbb
popa
jo
insb
sub
mov
xor
cltd
cmp
jg
pop
jecxz
out
ss
data16
push
or
ret
push
shl
jb
jge
xchg
mov
xchg
cltd
adc
leave
pop
add
mov
and
into
outsl
es
and
ljmp
push
stc
dec
stos
lods
sahf
and
sbb
icebp
cmp
xchg
push
xchg
out
add
imul
push
fmuls
jle
adc
cmp
or
xlat
jns
sbb
popf
int3
dec
dec
jg
or
jno
xor
mov
or
mov
xor
push
lcall
adc
mov
mov
inc
movsb
sub
call
rclb
pop
sbb
pop
fwait
xchg
cli
sahf
shlb
mov
inc
daa
ds
mov
or
mov
dec
mov
hlt
jne
leave
pop
stos
mov
out
mov
or
loopne
cltd
jae
jp
testb
add
outsb
sbb
call
hlt
insb
mov
and
sbb
mov
mov
jl
jle
aas
ss
jns
sahf
iret
outsb
cmp
sahf
fs
jge
pop
leave
sub
cmovg
in
stos
stos
clc
jmp
mov
fidivrs
push
orb
xor
movsb
mov
sbb
dec
testb
xchg
ja
ror
sub
adc
or
adc
notl
sub
xlat
sbb
testb
int
mov
fwait
stc
cwtl
cmp
mov
outsl
xor
sbb
mov
add
enter
out
clc
ja
shrl
and
dec
out
and
addl
pop
jne
jmp
sub
jge
lods
lcall
push
jl
mov
ds
mov
xchg
push
out
push
pop
mov
ret
cmc
in
xchg
idiv
js
pop
sbb
jp
add
loop
call
fadd
or
ffreep
insb
cmp
hlt
adc
jo
fst
jge
push
clc
dec
push
orl
aam
jno
pop
mov
mov
xor
xchg
mov
roll
xchg
push
hlt
inc
push
lret
insb
cmc
gs
xor
push
mov
in
je
test
cmp
fsts
mov
loope
adc
and
movsl
mov
ljmp
mov
movsb
xor
push
xchg
xchg
mov
mov
pop
test
adc
jo
jbe
jo
mov
sbb
jae
daa
or
repz
xchg
jns
pop
jge
xchg
dec
xchg
add
mov
loopne
and
imul
repz
das
dec
sbb
push
adc
cmp
cli
orb
cld
mov
inc
je
insb
arpl
push
repz
ds
or
testl
and
dec
jno
mov
cmp
inc
xchg
inc
adc
mov
xchg
fwait
push
ds
daa
jge
popa
or
clc
sahf
jg
mov
int
incl
mov
stos
aad
sub
out
lret
ficomps
jle
jmp
add
sbb
jns
loopne
push
cmp
or
in
sti
push
sub
orb
gs
push
dec
fdiv
xor
pop
fsts
mov
popa
into
jb
in
push
push
or
stc
or
push
add
sahf
jp
lret
scas
xchg
jns
rcrb
sub
addr16
adc
jb
mov
int3
ss
sub
jne
inc
mov
xchg
mov
int3
mov
pusha
sub
pop
je
xchg
or
inc
push
add
cmpsb
inc
mov
pop
cmp
inc
dec
pop
fidivl
and
dec
jmp
mov
inc
lds
dec
ljmp
das
add
push
aas
jo
mov
sbb
push
jnp
add
pop
dec
movsb
je
jg
adc
sub
inc
xchg
inc
mov
jecxz
mov
je
add
roll
shrl
mov
icebp
mov
negb
es
sahf
cmp
in
outsl
sub
outsb
orb
push
cmpsl
frstor
xor
add
jmp
cwtl
ljmp
cmp
jne
pop
inc
xchg
rcl
push
out
mull
cmpsl
mov
cmp
icebp
in
ret
jle
imul
mov
sub
push
mov
outsl
clc
push
xlat
lods
jno
lock
push
fdivr
pop
and
mov
scas
sbb
jno
push
mov
ret
add
ficoml
dec
pop
data16
leave
leave
ja
add
mov
lret
pop
fisttps
mov
es
mov
pop
dec
mov
mov
faddl
cmp
cmpb
sti
adc
add
ds
fnstenv
rolb
xorl
cmp
arpl
xlat
sarl
push
jmp
push
adc
mov
lock
in
mov
lcall
imul
add
inc
fisttpll
cmp
cwtl
hlt
push
shlb
lea
pop
push
xchg
fmulp
rcl
mov
enter
jnp
ljmp
and
std
fwait
cmp
ja
lea
lea
ss
jbe
out
xchg
mov
movsb
or
repnz
xchg
in
mov
sbb
pop
adc
and
mov
xchg
dec
loop
or
pop
jne
inc
pop
mov
sbb
mov
mov
or
fiadds
rclb
addr16
fsubrp
iret
outsb
dec
dec
sahf
xchg
mulb
cltd
jno
dec
pop
sbb
pop
popf
cli
pusha
lcall
sub
rolb
sub
mov
mov
cli
cmpsl
mov
push
insb
out
mov
fmuls
cltd
outsb
jecxz
fistpll
sarl
jb
fisttpll
inc
hlt
imul
dec
and
dec
nop
cmp
pushf
fisubrl
mov
arpl
mov
data16
mov
push
cmp
push
shrl
push
push
sar
ret
add
cmpsb
and
xor
mov
and
mov
and
cmp
jo
jnp
pop
insb
dec
cmpsl
mov
xor
je
mov
xor
jmp
je
cmp
inc
into
or
out
fadds
adc
ljmp
jmp
mov
iret
out
xor
cmpsl
cmp
imull
stos
call
lods
jae
mov
mov
lahf
call
sub
sub
movsb
xlat
or
jl
imul
bound
mov
fldcw
aaa
test
pop
xorl
out
and
jl
rcll
cs
ret
rcll
mov
mov
jmp
pop
addr16
out
repz
sbbb
adc
test
inc
idivb
gs
repz
add
mov
and
rcr
mov
inc
or
cltd
fistl
jle
mov
xlat
pushw
and
fbstp
cld
mov
inc
sbb
pop
out
cmp
stc
leave
cld
dec
mov
mov
fninit
push
or
fdivrs
add
addl
in
mov
mov
fwait
testb
xor
movsl
ja
inc
arpl
pop
inc
sub
jg
les
jae
jmp
jne
test
cmp
gs
adc
mov
test
jno
push
roll
or
stos
les
fwait
add
sub
xor
xchg
and
pop
outsb
sbb
push
cli
rcr
sahf
and
call
and
dec
mov
and
outsb
add
sbb
ficoms
mov
and
jae
call
inc
lea
test
lahf
das
loope
mov
in
outsb
push
sbbb
push
sti
push
mov
gs
les
mov
mov
or
scas
mov
add
dec
xchg
fbstp
ret
xchg
outsb
push
mov
movsb
dec
xor
jl
outsb
repz
shll
mov
adc
xor
jle
mov
stos
icebp
ss
mov
and
jbe
neg
outsl
pusha
jbe
jae
jle
rcll
lods
or
sub
pop
fldcw
jmp
int
jns
pop
xor
jno
jo
sub
in
mov
cmpb
dec
iret
and
data16
push
adcl
dec
mov
sub
inc
repnz
dec
mov
dec
or
leave
mov
mov
lods
in
mov
in
sbbb
sbb
data16
ljmp
mov
ljmp
sbb
mov
scas
jge
push
iret
mov
imul
sti
out
jecxz
rclb
popf
jb
lcall
loopne
fmull
sub
jp
popa
jmp
out
mov
fstl
roll
pop
mov
in
xchg
xchg
xchg
out
adc
or
jb
aaa
movzwl
repnz
sub
pop
push
mov
xchg
loopne
dec
and
mov
mulb
jnp
sahf
sbb
out
call
sub
pause
imul
sub
rorb
les
out
xor
mov
rcl
mov
scas
jg
lahf
push
pop
data16
push
pop
push
outsb
repz
sub
call
lret
ja
pop
fiadds
push
ljmp
mov
out
push
lret
andb
mov
fidivs
or
mov
outsl
sub
icebp
mov
hlt
lret
imull
xor
sub
movsb
mov
jbe
insl
pop
and
sbb
leave
adcl
enter
inc
add
or
sbb
nop
insb
inc
lcall
lahf
popf
mov
adc
cmc
ja
mov
jmp
mov
int3
leave
inc
popf
xlat
loope
xlat
int3
cmp
pop
imul
or
imul
fldt
stos
xor
sbbl
pop
std
jne
mov
loopne
jle
test
stos
jns
xor
out
sub
inc
repnz
mov
push
adc
je
xchg
mov
loope
or
inc
bound
lahf
pop
loop
mov
in
imul
xchg
push
adc
jo
pop
loope
subl
in
in
dec
and
cld
and
dec
dec
xor
xchg
push
cs
std
out
sub
sti
xchg
or
in
dec
push
sub
ret
pop
pavgw
popf
out
and
or
cld
and
mov
fdivp
cld
ljmp
or
hlt
mov
scas
xchg
cmp
mov
and
or
notl
sti
mov
jecxz
lock
push
arpl
outsl
pop
jg
jo
inc
and
int
sti
cli
xor
enter
icebp
enter
and
mov
out
movsl
shll
adc
add
jnp
cmc
sbb
imul
pop
jne
test
sbb
ret
loopne
js
push
dec
jp
idiv
push
push
ss
movb
pop
xor
jo
push
scas
and
mov
pop
int
addr16
sahf
dec
divl
dec
mov
imull
ds
or
in
xchg
sub
and
mov
xchg
cmp
nop
pop
push
ja
or
inc
jo
lea
sbb
mov
js
pop
push
lahf
lods
and
iret
mov
jg
add
mov
enter
mov
mov
mov
mov
and
hlt
and
sbb
bound
jmp
outsb
sbbl
push
imul
subb
jo
aaa
ja
repz
cs
std
fbld
cli
imull
jno
movsb
mov
cmp
fisttpll
cwtl
pop
cwtl
adc
cmp
mov
loope
test
jne
mov
mov
cmp
nop
int
rclb
repnz
scas
mov
stos
cmpl
in
sbb
dec
sahf
xchg
cmp
ret
pop
ja
ret
sub
or
inc
cmp
jne
jmp
push
movsb
jmp
xor
mov
sub
mov
add
fs
jno
fcomp
sbb
xchg
aas
lahf
add
arpl
popa
adc
push
dec
psubsw
cs
gs
push
dec
pop
mov
sbb
pop
lock
or
mov
mov
add
adc
aam
ljmp
pop
imul
xchg
nop
pop
pop
or
jns
fldl
or
ret
xchg
scas
push
stos
les
add
test
inc
leave
and
xor
jl
inc
push
xor
iret
fsub
sahf
nop
in
cmpsb
xchg
push
sbb
jp
out
cmp
mov
mov
mov
sbb
out
dec
jmp
sbb
popf
jmp
daa
fiadds
shrl
inc
dec
or
std
dec
mov
adc
jno
inc
add
and
inc
movsb
mov
cs
nop
mov
jno
inc
sbb
jns
lea
insl
dec
pop
fstl
add
and
inc
sti
or
inc
jns
icebp
mov
inc
cltd
call
push
cmp
xor
aam
inc
arpl
lods
data16
test
fisttpll
repz
fldenv
xor
movsl
push
hlt
pop
inc
loope
jbe
repnz
aad
cmpsl
xor
outsl
push
jnp
add
test
jbe
in
bound
fsubrs
adc
leave
out
lods
adc
pop
inc
jne
movsl
jmp
arpl
imul
pop
pop
sub
push
sub
jp
add
cmpsb
stos
pop
leave
add
mov
sbb
lea
xchg
adc
xor
mov
and
push
push
int3
cmp
cltd
mov
int
and
leave
jmp
add
dec
push
dec
jg
fwait
jbe
cmc
mov
mov
std
insl
lds
jmp
xor
test
push
mov
jp
or
add
popf
mov
pop
loopne
jg
inc
pop
mov
out
or
push
inc
sbb
fcoml
aad
shl
loope
lds
jnp
aam
mov
mov
fidivrl
push
jbe
in
int
jns
pop
pop
fsts
lcall
dec
inc
rclb
xor
jns
push
mov
loopne
shr
imul
xchg
lahf
je
and
mov
leave
shrl
or
ljmp
sub
push
stos
iret
ja
push
xor
dec
fwait
shll
xchg
les
jnp
add
cmp
sub
jge
scas
push
out
cmp
popf
and
daa
xor
and
aam
pop
xor
and
xchg
sbb
fwait
ret
sti
je
popa
lcall
aad
dec
out
fwait
pop
pop
arpl
xchg
dec
ja
mov
test
rcll
fadds
into
lret
fcoms
sub
push
sbb
mov
rcrb
lock
mov
faddp
daa
outsb
and
cmp
xor
xorl
jge
xchg
lcall
sti
outsb
mov
mov
int
movsl
jmp
iret
push
notl
sbb
adc
jns
dec
or
jle
in
je
in
jl
push
push
ret
xor
gs
or
add
jg
lcall
daa
xlat
adc
xlat
pop
or
mov
push
mov
push
mov
data16
in
fs
cmp
aam
les
rcr
arpl
sub
rorb
stos
sbb
movsb
out
jno
inc
and
mov
sbbl
push
or
or
add
xchg
pop
popf
pop
and
repnz
mov
mov
mov
xchg
inc
push
in
pop
movsl
push
int3
mov
iret
leave
xchg
ret
imul
inc
shrd
aam
fdivrl
addr16
and
push
les
or
lods
fwait
and
jnp
test
mov
mov
addr16
and
test
lea
imul
gs
lds
ror
lea
scas
xchg
shrb
scas
inc
dec
call
jp
fwait
repz
mov
cli
or
sub
ror
inc
mov
rcrl
sbb
shrd
ret
or
mov
dec
je
push
dec
jg
sub
mov
jl
movsb
mov
cli
shrl
pushf
jle
lods
and
loopne
mov
negb
arpl
cli
dec
jmp
xor
idivl
inc
aas
adc
mov
out
mov
jmp
outsb
and
fldpi
scas
dec
subl
pop
or
sahf
sbbb
je
and
shrl
sbb
pop
push
or
shll
dec
test
mov
cmp
insl
int
icebp
push
test
add
stos
push
mov
sahf
xchg
mov
sarl
div
adc
adc
jle
lods
xchg
dec
and
popf
pop
mov
and
pop
fs
dec
std
stos
push
and
push
test
xor
in
out
stos
out
dec
ret
jp
mov
mov
xor
jg
push
lods
out
adc
push
aad
test
or
jb
fstl
adc
mov
sbb
and
jecxz
push
addr16
stc
jne
popa
ja
pop
lahf
pushl
mov
gs
fwait
insl
push
adc
xor
shrl
lret
jae
pop
push
sub
mov
lea
jns
mov
mov
mov
or
test
js
jp
mov
mov
adcb
and
push
fs
sbb
repz
jp
out
fs
add
clc
test
add
push
cli
aas
int
jg,pn
xor
inc
adc
pushf
gs
xchg
loope
xchg
inc
imul
cld
add
dec
adc
ret
sub
mov
jl
xlat
cltd
fadd
push
ret
mov
mov
dec
ja
mov
mov
scas
jo
daa
pop
outsl
repz
mov
es
mov
push
inc
imul
test
add
pop
cld
cmp
pusha
cmp
jno
mov
lea
lret
cmpsl
call
mov
push
and
imul
addr16
adc
sbb
jnp
int3
shl
pop
add
jmp
inc
sti
lods
jno
rcr
nop
cmp
fsubrl
and
mov
mov
enter
fldcw
push
jae
insb
cmpsb
fs
je
cwtd
imul
fidivrs
stc
push
gs
xor
or
repz
in
mov
add
aas
notl
dec
sbb
les
xor
xchg
jns
lret
repz
jg
mov
or
cmpsl
rcrl
xchg
orb
push
adc
xor
xor
int3
sbb
fwait
push
das
das
mov
pusha
push
jmp
das
test
std
ret
fwait
out
dec
mov
mov
inc
mov
cmp
xchg
xchg
jg
mov
insl
popa
mov
sub
inc
iret
xlat
lahf
lea
loope
test
test
ja
aad
inc
add
js
icebp
or
lods
jge
mov
jne
hlt
ficomps
lret
aas
stc
mov
sarb
sarb
daa
incb
out
js
xchg
outsl
cmp
clc
add
call
jnp
orb
testl
or
add
clc
sub
cmp
daa
fwait
cs
mov
cmp
iret
push
jecxz
int3
jnp
dec
jbe
and
mulb
rclb
insb
jle
in
adc
jp
incb
mov
push
imul
mov
stos
xor
js
ja
loope
roll
add
fistpll
js
lcall
mov
enter
xchg
mov
sbb
imul
loop
pop
cli
xor
jmp
xchg
lahf
data16
scas
aaa
ss
loope
inc
out
lcall
adc
push
add
or
mov
fildl
adc
adc
push
jle
ret
pop
lock
cmc
std
xor
dec
add
push
rcrb
and
pushf
std
ret
cwtl
mov
fs
arpl
lahf
and
fwait
les
jb
psubq
add
pop
lods
jns
jbe
push
insb
mov
dec
jge
adcl
dec
xor
ja
call
cmpsb
mov
ret
or
push
out
daa
pushf
cmp
outsl
cmpsl
fnstcw
push
into
sub
repnz
sub
sub
mov
xchg
mov
dec
add
mov
push
cmc
cwtl
psubsb
xchg
into
mov
cmp
pop
sbb
push
lock
std
pushf
mov
xor
sbb
ds
imul
stc
iret
sti
cli
fldenv
push
cli
add
lahf
loopne
popa
aaa
push
sub
enter
mov
jmp
or
pop
int3
fsubrs
aad
mov
xchg
aad
inc
push
lret
sbb
pop
int
icebp
and
arpl
xchg
sbb
add
out
shll
push
cs
lcall
aaa
xor
jnp
mov
mov
dec
jo
test
popa
imul
mov
xor
outsb
jbe
sub
lret
mov
sub
mov
pop
ret
test
jle
mov
enter
test
and
mov
mov
cltd
adc
mov
jb
loop
push
sub
adc
repnz
mov
add
pop
jg
inc
mov
sbb
lds
jno
dec
push
jl
int
xchg
mov
repnz
int
popa
std
jno
negl
dec
andb
movsbl
in
imul
lret
xorb
or
xor
sti
gs
aam
jle
xchg
in
mov
jae
test
inc
add
nop
cmpsb
xor
push
push
cmpsl
mov
and
pop
sbb
sbb
cmp
or
call
ja
inc
add
aam
test
mov
pop
adc
xchg
aad
mov
push
push
mov
add
mov
in
stc
xor
pop
or
inc
pop
lret
xor
xor
xor
mov
or
add
and
adc
push
in
test
ret
andb
add
jne
pop
out
jo
push
adc
mull
cmpsb
pop
cmpsb
inc
inc
je
mov
orl
mov
jle
movsl
xchg
mov
jne
ficoml
std
dec
imul
orb
fcmove
pop
lods
dec
mov
xchg
and
lret
lcall
sub
dec
mov
pop
sub
mov
mov
mov
lock
sub
insb
mov
cwtl
mov
xor
or
dec
cwtl
push
mov
adc
cmpb
icebp
pop
dec
rcrl
jae
test
popf
gs
test
addr16
jmp
push
push
repz
cmp
jno
jl
push
testb
adc
js
data16
pop
std
es
mov
loop
std
fisttpll
add
push
mov
lock
lcall
dec
pop
and
je
sahf
into
pop
repz
xor
and
ja
scas
sub
jp
push
push
aad
lcall
insb
es
sahf
pop
pop
nop
cmp
mov
lods
lods
mov
xchg
shlb
popa
dec
fiadds
addr16
leave
or
push
dec
lret
hlt
shr
mov
icebp
enter
mov
lods
pop
mov
imul
je
lock
fs
mov
pop
jnp
clc
loop
mov
dec
mov
popf
ret
inc
loopne
push
jo
outsl
jmp
dec
xor
cmp
mov
sti
jbe
push
or
mov
adc
mov
in
pop
xor
icebp
cmpsl
out
xchg
pop
into
loope
jmp
sbbl
js
imul
and
adc
dec
js
scas
mov
mov
scas
rcrl
cmp
and
or
sbb
ficoml
sub
aad
inc
dec
or
shrb
out
adc
push
lret
mov
rcr
dec
hlt
push
mov
dec
cmp
cmp
xchg
cld
sbb
fimuls
sbb
jle
sub
push
aas
inc
jmp
sbb
sub
jecxz
aaa
nop
xchg
sti
push
and
push
andl
sub
inc
cld
outsb
imul
inc
jecxz
sti
jo
hlt
cmp
pop
shll
loop
adc
lds
push
mov
fsubr
jmp
pop
pop
out
fsts
aad
lods
sarb
adc
js
add
mov
or
shlb
nop
dec
outsb
and
fcoms
lea
push
sti
repnz
dec
adc
daa
in
hlt
sbb
push
arpl
loop
cld
jge
pop
ss
jmp
xchg
adc
push
xchg
adc
or
and
clc
mov
sbbl
xlat
fdivrs
add
mov
sub
js
jp
adc
mov
push
sbb
sub
jmp
pop
cld
jl
popf
cmp
mov
jl
pop
in
adc
add
dec
and
leave
adc
jecxz
dec
sahf
es
rcl
mov
out
inc
jl
out
xchg
xchg
sub
inc
mov
inc
xor
rolb
jle
bound
out
mov
push
ds
mov
andl
ret
push
xor
call
insb
repnz
jp
cmpsl
inc
stc
sbb
stc
pushf
pop
out
mov
and
mov
cwtl
ret
aas
jmp
stos
repnz
adc
ss
adc
cmc
mov
push
xchg
in
nop
insb
jp
mov
sti
cmp
cmp
and
mov
push
inc
gs
lahf
jne
and
ret
lock
fsubrs
cmpl
or
sti
pushf
dec
fcoml
mov
call
dec
popa
gs
insl
xchg
arpl
adc
out
lcall
adc
loop
lods
sub
mov
and
push
mov
loope
pop
mov
or
inc
cmp
or
pop
in
add
roll
lods
rcr
pusha
xchg
push
ja
lea
lcall
je
and
sbb
testb
dec
cmpsb
xor
je
lret
lea
and
fcomps
xchg
scas
pusha
xor
mov
xchg
cmp
push
ss
jbe
es
add
js
or
pop
xchg
fdivrs
sub
mov
mov
aaa
cmp
inc
cmpsb
push
mov
xor
in
xor
stc
lret
jp
adc
mov
adc
push
fmull
loopne
or
xor
mov
jo
xchg
sub
into
mov
xchg
loope
sub
lret
xorl
lret
ljmp
fbld
or
jns
lahf
or
sbb
jb
aaa
arpl
fcmovnb
add
fildl
mov
push
sahf
jmp
pop
xchg
mov
test
push
pop
clc
push
dec
rol
test
mov
sti
and
neg
add
cld
or
jne
add
and
outsl
xchg
pop
push
addr16
jmp
cmp
push
mov
pop
and
repnz
mov
test
stos
and
jg
jbe
das
push
lahf
in
push
xor
add
inc
inc
js
mov
pop
das
mov
and
aad
xlat
in
lahf
data16
repnz
pop
jg
sub
sbb
xchg
add
and
lahf
fldcw
push
xor
aaa
sbb
xor
dec
pop
cld
icebp
mov
shld
fcmove
out
mov
rcrb
jp
sbbb
adc
adc
mov
repnz
nop
jb
gs
xchg
pop
and
jbe
mov
das
push
leave
sti
test
fdivrs
pop
add
bound
push
inc
xchg
mov
mov
mov
and
dec
pop
xchg
rorl
jmp
nop
ror
fbld
add
js
jmp
and
outsb
push
xchg
mov
les
pop
mov
cltd
fsubr
test
adc
mov
push
jnp
cli
insb
xchg
push
cld
aad
lock
and
jae
loopne
aad
xchg
xor
mov
jns
stc
shrl
xchg
lock
mov
push
popl
in
fisttps
int3
add
mov
adc
cs
rcrl
or
jno
mov
dec
ds
cmpsl
inc
out
addl
mov
add
sbb
clc
lea
or
dec
add
rep
shll
into
mov
xchg
dec
pusha
bound
std
push
jnp
aam
push
add
add
add
add
sahf
add
add
add
add
bound
das
enter
or
cmpl
nop
das
mov
and
inc
es
gs
add
fiadds
xlat
das
mov
aaa
xor
out
push
add
inc
jmp
lds
int3
cmp
jb
and
xchg
popa
stos
jp
ja
mov
dec
cmpsb
notb
and
repnz
cmp
int
clc
sub
adc
push
mov
roll
add
stc
push
dec
mov
sarl
dec
data16
ret
cli
test
cmp
pusha
addr16
inc
pusha
add
lret
xchg
xlat
bound
push
add
push
add
mov
jmp
adc
sub
mov
test
mov
sti
stos
sbb
jne
fadd
inc
xchg
mov
loopne
xlat
add
sbbb
fs
lret
aaa
cmc
fsubr
mov
cwtl
mov
cmpsb
push
pop
movsb
pop
lods
divb
sahf
iret
mov
and
lock
cli
pop
jge
jb
adc
pop
ss
mov
mov
es
pop
fwait
or
inc
inc
movsb
xchg
xchg
add
jmp
mov
xchg
mov
sarl
jg
sub
sub
scas
fidivl
push
xchg
push
stos
jl
xor
push
orl
mov
add
adc
enter
pop
cli
out
add
xchg
lds
cmp
test
lds
adc
ljmp
jl
pop
daa
scas
iret
mov
aam
mov
mov
sbb
shlb
fiaddl
and
pop
cmpl
xchg
push
loope
mov
scas
and
xlat
or
and
mov
addb
mov
int
mov
xor
lock
xchg
push
xchg
test
cld
scas
stos
pop
pop
xchg
sbbb
rcll
test
adcl
mov
loopne
xor
data16
hlt
lods
sarb
orl
iret
mov
dec
push
pop
xchg
xor
xchg
in
inc
push
add
andb
je
inc
inc
pushl
out
mov
scas
push
test
dec
pop
add
xchg
pushf
jno
rcll
shr
xor
mov
jae
sbb
sub
leave
sub
xchg
mov
xor
out
std
and
mov
andb
or
jnp
xchg
mov
xchg
dec
aam
mov
mov
push
and
ret
test
rcrb
mov
sbb
or
and
jp
ret
in
xchg
popf
insl
fwait
cmp
add
xor
scas
insb
jo
mov
xchg
in
movsl
ficoml
subl
or
mov
sbb
mul
ret
icebp
loop
xor
outsb
lea
pop
and
pushf
fimull
pop
jmp
push
cmp
fwait
pop
mull
xor
pusha
lret
outsb
addr16
xchg
lahf
push
xchg
fadds
jmp
inc
adc
pop
xor
pop
test
or
pop
adc
movsl
jl
jge
push
inc
fimuls
test
clc
sbb
add
stc
lret
xchg
sbb
push
les
mov
stos
push
pop
gs
and
stos
icebp
xchg
enter
inc
dec
fsubl
sub
out
add
ja
dec
lea
mov
sub
mov
pop
lock
add
je
cltd
add
nop
sbb
and
lahf
orb
jl
and
mov
pop
mov
movsl
jne
push
inc
and
nop
mov
jl
fldt
sbb
rclb
fsubr
bound
add
jle
jge
sub
insl
les
sbb
sub
std
shlb
mov
out
das
mov
push
bound
sub
das
sbb
jge
pop
push
enter
clc
fcom
movsb
xor
aaa
imul
cmp
sub
pop
roll
xchg
dec
cmp
ror
stc
out
adc
push
mov
movsb
insl
mull
inc
jo
pop
je
loope
rcr
mov
cltd
mov
xorb
xchg
insl
out
adc
xchg
into
and
inc
dec
movsb
fcompl
dec
push
xchg
push
push
fs
mov
cmc
in
iret
fs
adc
dec
insb
and
and
push
lcall
ds
lcall
pushf
mov
sub
fildl
or
xor
ror
add
mov
mov
or
inc
cmp
jo
stc
out
ja
or
jno
rcrl
insl
push
das
imul
je
xchg
adc
addl
cmp
mov
and
xchg
loope
jns
shrb
push
mov
out
ja
loope
mov
aaa
loop
mov
call
repz
mov
pop
cmc
in
dec
pop
inc
icebp
lret
xchg
jae
imul
inc
mov
adc
scas
jbe
pop
sub
clc
xor
sbb
or
mov
xchg
mov
push
negb
out
add
sub
nop
mov
jp
cmp
mov
lea
js
scas
out
cli
add
mov
pushf
xchg
in
sbbb
jbe
mov
mov
out
scas
lds
xor
je
sub
xor
adc
push
cli
adc
lahf
aas
xor
cmp
lcall
ja
sub
jo
stos
lcall
call
rol
jecxz
jns
aas
sub
out
hlt
divl
lock
mov
xor
lods
xor
jae
jmp
inc
sbbb
fnstenv
mov
fdivp
mov
test
int
fimull
push
xor
mov
iret
inc
imul
insl
cmp
cli
outsb
lds
js
cmpb
loop
iret
clc
pop
inc
mov
inc
adc
push
aas
outsl
or
add
outsb
hlt
dec
jmp
jnp
pushf
or
mov
popf
scas
arpl
outsb
jb
add
pop
cs
aam
orl
test
cmp
cltd
inc
mov
dec
add
pop
xchg
lcall
jg
sub
std
hlt
and
xchg
mov
aas
pop
je
mov
jae
xor
loopne
aad
cli
sbb
adc
adc
and
jnp
cmp
movsl
push
call
xchg
sbb
jge
in
push
ljmp
jecxz
sub
fisttps
jecxz
sbb
xor
add
mov
pushf
push
jp
aas
imul
incl
mov
mov
cmpsl
adc
sub
aaa
jmp
divb
in
xchg
cmc
faddl
cmp
and
jg
xorl
shlb
pushf
stos
inc
inc
push
ds
imul
push
mov
push
mov
cmp
in
ret
out
xchg
pop
jae
xor
lock
jge
fstps
jle
add
movsb
sbb
jo
xor
test
add
push
sti
loope
mov
loope
push
adc
fisubrl
dec
mov
sub
imul
lock
repnz
inc
xor
insb
sbb
sbb
popa
pop
test
out
dec
mov
push
aam
xor
jg
pop
das
adc
cmp
js
or
jne
ja
sbb
in
adc
popa
jl
fsubl
and
imul
dec
sbb
hlt
push
in
sbb
mov
repnz
rcrl
mov
mov
mov
rcr
lcall
push
jecxz
jge
cmc
xchg
orb
cmpsb
test
sahf
xor
adc
movsl
xor
data16
inc
sub
mov
fildll
add
pop
imul
inc
in
xor
push
test
sbb
fadd
push
das
hlt
out
into
ljmp
pop
push
pop
cmp
jns
rcrl
add
pusha
loope
pushf
fdiv
sub
mov
int
jne
adc
cwtl
loope
lds
ss
xor
bnd
test
fcoms
pushl
ret
xchg
xchg
jbe
cld
xchg
sbb
adc
push
je
push
daa
pop
xchg
push
adc
aas
inc
mov
adc
cmp
mov
out
test
adc
mov
jbe
enter
jo
fisttps
push
inc
mov
pushf
cmp
mov
dec
test
mov
push
outsb
dec
cmp
push
jecxz
test
shr
adc
lcall
mov
je
pop
je
inc
mov
loopne
push
sar
fcoms
adc
push
or
int
pop
ja
js
lods
shlb
hlt
xchg
repz
rcr
sbbb
out
out
cwtl
xor
popf
fisttps
dec
push
ljmp
or
add
scas
shl
hlt
jne
jp
mov
je
inc
shlb
int
mov
stc
pop
sub
popa
cmpl
pop
sbb
jl
clc
push
sbb
fidivl
mov
dec
rolb
cmp
cmp
lahf
mov
ret
adc
in
lahf
orl
mov
jle
inc
xor
cld
adc
pop
cmp
es
in
and
int
or
mov
ljmp
out
pop
xchg
push
mov
dec
dec
in
push
sbb
pop
les
jmp
inc
movsb
sbb
pop
cmc
or
pusha
xchg
add
xchg
dec
xchg
cmp
push
pop
push
pop
fcomip
jne
dec
cmpsl
cmpsl
shr
fdivl
std
cmpsb
cwtl
xor
push
cli
add
jge
out
enter
shll
sub
rcr
ficomps
clc
in
cs
jmp
cmp
scas
dec
into
pop
insb
nop
jbe
jle
inc
iret
mov
test
mov
xchg
pusha
sbb
fwait
jl
and
cmp
jg
stos
shll
dec
push
cmp
cli
sub
dec
cmpsb
outsb
inc
in
data16
lahf
jp
hlt
mov
je
lds
sub
in
push
loope
xor
cmpsb
adc
mov
popf
xchg
jge
or
push
in
jmp
pop
dec
mov
jge
cmp
dec
test
push
sbb
les
push
dec
aaa
sahf
or
adc
sub
lods
loop
dec
push
js
sbb
lahf
xor
aam
out
xor
js
mov
sub
insl
xchg
out
sbb
scas
shrb
mov
add
xor
pop
or
rolb
sbb
inc
push
cwtl
imulb
std
xchg
adc
push
leave
dec
fnstcw
jne
mov
stc
idivb
inc
add
loop
rclb
leave
mov
scas
sub
mov
ret
sub
xchg
mov
lret
xor
aaa
fsubrl
lods
std
mov
pop
dec
les
not
jp
movsb
mov
inc
int3
leave
adc
ret
mov
xor
sbb
mov
scas
sbb
mov
dec
or
sub
mov
sbb
hlt
scas
ds
mov
jnp
popf
jge
xchg
mov
push
aaa
dec
imul
subb
and
lds
pop
and
mov
push
repnz
and
shr
lret
js
aas
mov
push
jp
xchg
stos
pop
lods
mov
mov
sti
adc
pop
jne
adc
ret
nop
aam
outsl
bts
and
popf
adc
outsl
mov
bound
mov
or
sbb
lret
mov
or
or
dec
cmp
push
sub
sbb
shll
sbb
add
pop
lds
jbe
dec
push
cmpsb
jp
inc
testb
test
scas
push
ja
xchg
aam
pusha
xchg
lock
xor
sbb
push
cmp
push
out
sti
xor
les
lock
fcomps
and
shrl
pop
sbb
fbld
ja
mov
scas
sarb
cmp
pop
into
iret
bnd
mov
mov
pop
sbb
pop
inc
fimuls
mov
push
push
ret
fcoml
cmc
cmp
push
outsl
andb
xlat
sbbl
mov
mov
jecxz
lea
push
xor
pop
add
loope
sbb
dec
stc
adc
fucomip
xlat
jbe
shrl
in
jg
jns
jo
cltd
mov
mov
aam
mov
lea
lahf
pusha
incl
adc
outsb
jle
pop
popf
scas
scas
sbb
pop
xor
push
mov
mov
and
mov
outsl
add
nop
iret
mov
repnz
lret
das
in
daa
adc
jo
and
jmp
add
xchg
out
out
out
push
mov
xor
mov
imul
mov
ret
and
push
dec
or
mov
inc
inc
push
sbb
cmpsb
dec
sbb
fmull
add
jp
popa
mov
dec
xchg
jnp
push
inc
jb
les
jbe
test
ds
cmp
sub
fnstenv
fists
mov
je
arpl
mov
sbbl
dec
arpl
xchg
je
int
das
gs
jno
dec
nop
cmp
pop
icebp
icebp
testb
mov
add
ret
or
addr16
xchg
sub
das
cwtl
inc
repnz
popf
mov
cmp
repz
push
pop
adc
dec
mov
loop
sub
adc
push
test
in
push
push
das
clc
test
push
int
adc
mov
cmpsb
dec
sbb
push
sahf
int
int
sbb
push
mov
push
jbe
xchg
aas
imul
jns
stos
push
neg
insl
inc
pop
xchg
lds
cwtl
push
ja
inc
lret
sub
shrb
mov
mov
or
and
ljmp
mov
sahf
jne
in
cwtl
and
call
jbe
push
inc
les
std
and
movsb
push
xlat
cmp
and
out
movsb
push
cmpsb
mov
dec
hlt
sbb
fmull
mov
cmp
mov
xchg
jns
fld1
aad
sub
dec
mov
pop
push
jnp
inc
xor
test
inc
jecxz,pn
or
aam
push
dec
xchg
add
sbb
xlat
jno
push
pop
inc
and
orb
mov
add
aas
iret
daa
je
mov
sub
adc
sub
and
addr16
shll
and
or
jne
mov
aam
cmp
nop
cmp
xchg
cmp
add
aas
test
lods
push
mov
mov
inc
idivb
rcll
mov
in
or
mov
jecxz
inc
pop
dec
mov
out
sbbl
push
in
jae
mov
sbb
adcl
es
cmc
push
xor
jbe
je
fs
push
pop
pop
loop
sub
xchg
sub
pop
lahf
faddl
mov
test
jg
jmp
xchg
and
aas
fs
sbb
mov
cmc
jg
into
sbb
sub
cwtl
sbb
call
push
fcoms
jmp
jno
sbb
cli
mov
lods
clc
mov
xchg
dec
dec
gs
dec
fcmovnb
pop
stos
sbb
pop
jb
and
loopne
and
pop
cltd
int
les
in
stc
je
dec
xchg
inc
addr16
push
sbb
bnd
cltd
stos
cmp
cltd
ljmp
sub
mov
xchg
out
ds
xchg
jbe
imull
dec
add
mov
add
mov
sub
pop
pop
add
or
xchg
fmulp
xor
xor
int
xchg
xor
jbe
fwait
movsl
pop
lods
loop
or
and
leave
insb
add
mov
dec
dec
cmp
jne
aam
mov
test
cmp
inc
and
push
lcall
das
xchg
shll
jl
add
je
pop
out
adc
sub
sub
cmp
mov
push
cmp
imul
lods
psrlq
jae
xchg
ret
popa
pop
mov
fs
in
divb
cmp
lret
in
cmp
dec
inc
pop
push
sbbl
mov
ss
movsl
js
insb
xchg
push
cmpsb
mov
xor
add
ja
sbb
push
mov
in
xchg
xchg
cmp
xchg
adcl
ja
nop
xchg
or
lods
gs
push
dec
fstps
lcall
or
or
sub
in
das
dec
test
lock
shrl
pop
adc
dec
imulb
adc
stos
push
into
lcall
cmp
daa
shrb
scas
or
ficomps
inc
add
cmpsb
adc
push
jnp
mov
mov
xor
or
cmc
sbb
sbb
test
cli
push
mov
xor
push
leave
sbbb
mov
test
idivb
int3
dec
sbb
test
out
lock
mov
imul
xor
jne
loop
lret
push
push
les
scas
pop
jb
xchg
orl
dec
inc
pop
or
out
and
repnz
cmp
add
jnp
pop
xchg
sbb
and
sbb
cmp
mov
push
or
rorl
push
jne
adc
adc
mov
shl
in
call
xor
fnstcw
xchg
outsl
cmp
lea
inc
pop
push
stc
dec
inc
test
mov
sbb
or
add
adc
lds
xchg
pop
mov
or
dec
mov
push
ficoms
cmp
ss
push
xchg
dec
adc
mov
vcvtpd2psy
xorb
xlat
aaa
ds
mov
lods
inc
stc
push
jbe
dec
cmp
mov
add
insl
cltd
insb
mov
test
inc
loop
sub
pop
aas
insb
xchg
call
sub
xlat
sar
cltd
mov
mov
pop
mov
mov
xor
xchg
pop
cld
in
mov
mov
gs
sar
xchg
mov
xorb
push
leave
pusha
or
inc
outsl
bound
ror
jle
or
outsl
fnsetpm(287
xor
push
jle
shll
xchg
dec
imul
pop
dec
shll
jl
xchg
lahf
les
or
lea
aas
pop
sbb
xor
repnz
and
xor
mov
add
xchg
lea
push
outsl
cs
movsb
adc
push
mov
dec
fidivl
cmp
fcoml
xor
mov
inc
popa
pop
in
mov
movsb
and
mov
fcomps
ret
cmpsl
inc
mov
divb
and
mov
test
sbb
fmuls
cmp
inc
mov
test
hlt
roll
cmpsl
insl
add
enter
push
enter
push
iret
dec
sbb
xlat
jp
add
rcrl
push
xlat
add
xchg
testl
push
add
push
ja
loopne
dec
movsl
dec
ss
dec
inc
fisubs
std
pop
and
lock
pop
addb
lahf
sbbl
xchg
pusha
xor
insb
mov
pusha
mov
in
jo
mov
daa
xor
push
out
pop
sub
or
jge
std
inc
inc
pop
fisttpll
mov
inc
test
cmovae
mov
stc
fists
or
rcl
lahf
fsubr
sbbb
push
sbb
movsb
sti
push
fmuls
push
jle
mov
popa
xchg
xchg
or
and
xchg
cmp
xor
ss
insl
rclb
and
xchg
add
mov
int3
mov
xlat
imul
xor
xchg
pop
outsb
lcall
jae
ret
mov
cmp
inc
xchg
cs
fwait
push
lods
mov
push
sbb
xchg
mov
fs
imul
jl
sub
pop
cmp
mov
mov
pop
pop
jae
leavew
mov
xor
dec
test
mov
xchg
pushf
push
mov
pop
push
xchg
clc
mov
int3
jo
sub
xor
and
stos
mov
out
and
xchg
mov
addr16
inc
lret
mov
sbb
fsubr
dec
jle
and
inc
out
xlat
add
xor
clc
sti
xchg
js
repnz
pop
call
stc
sbb
jns
dec
arpl
call
mov
cmc
adc
fld
mov
mov
jmp
xchg
xlat
pop
js
mov
inc
shlb
test
and
jl
push
mov
loopne
push
out
sub
out
dec
lret
jns
sbb
push
aad
out
inc
mov
mov
mov
push
daa
or
ret
add
shrl
mul
mov
cmp
fsubrp
lods
lret
and
cmp
or
lahf
push
mov
iret
in
aad
cmpsb
inc
enter
push
hlt
popf
repnz
and
mov
rorl
aas
add
mov
loopne
and
adc
add
xchg
ret
test
insl
negb
push
jb
scas
cli
shll
ds
jns
cmp
andl
mov
jp
lods
call
pop
addb
mov
xor
jmp
jp
in
outsb
test
xor
xchg
fimull
cli
mov
test
pop
mov
push
sub
inc
mov
fsts
lock
mov
push
pop
out
or
pop
inc
mov
or
inc
mov
jno
outsb
mov
inc
jle
std
dec
push
and
jo
ret
popa
sbb
adc
lods
push
push
add
push
mov
hlt
pop
xchg
dec
data16
pop
pop
ficomps
push
test
xchg
loop
sti
adc
ficoms
insb
pop
rolb
imul
mov
or
fcomps
test
outsb
enter
mov
les
add
xlat
call
out
cmpsl
das
sub
ret
in
dec
rcrl
add
into
cs
sti
mov
adc
movsl
pop
mov
dec
test
jmpw
mov
mov
ret
js
cmp
jbe
jl
fiaddl
inc
sub
repz
jne
into
jne
js
jle
mov
cmp
mov
inc
mov
push
test
adc
xor
dec
fisubl
dec
insb
xchg
adc
and
mov
inc
movsb
sub
pop
shlb
cmp
mov
mov
mov
fs
mov
cmpsl
and
fstpt
stc
nop
pop
hlt
xchg
roll
fld
les
mov
data16
xor
xchg
das
out
sbb
ja
xor
fnstcw
push
add
pop
xchg
ja
add
and
mov
sbb
enter
int3
icebp
push
mov
clc
pop
jb
jg
stos
jo
xor
push
and
das
cmp
rol
sub
cli
xor
movsb
sub
xor
dec
xchg
mov
mov
and
fldenv
in
movsl
lock
sub
or
decl
cmpsl
jg
fs
mov
jge
dec
sub
push
out
test
mov
adc
jmp
push
mov
xor
mov
rol
mov
mov
mov
movsb
in
mov
xorb
push
out
data16
loopne
or
sbb
cltd
jnp
fnstcw
clc
xorb
pop
mov
ja
jbe
add
or
push
loopne
rcrb
gs
pop
xor
and
mov
cli
popa
adc
daa
adc
icebp
push
ds
into
push
jno
inc
sar
push
rorl
push
push
test
stos
cltd
imul
mov
and
adc
mov
sahf
imul
cmp
mov
dec
xlat
sti
sti
movsl
push
callw
jg
test
in
movsl
imul
arpl
ds
pop
adc
out
cmp
mov
push
mov
dec
repz
sbb
into
arpl
xor
cmpsb
mov
dec
jbe
xor
push
xor
dec
dec
mov
insl
nop
or
int
call
mov
mov
or
cmpsl
cmp
jb
mov
ja
cmp
leave
out
stos
cs
mov
cmp
or
loop
mov
cmp
iret
lcall
xchg
divb
int3
mov
push
fs
sbb
xchg
adc
cmc
push
stos
adc
adc
hlt
outsb
pop
test
push
pop
cmp
dec
shrl
xchg
xchg
shll
cmc
aad
inc
xchg
repnz
pop
ss
sub
xchg
int
cmp
call
inc
hlt
nop
push
push
shrb
mov
rep
test
aam
xchg
mov
addr16
push
fcmovne
loop
add
mov
pusha
insl
xchg
rorl
loop
cmc
fcoms
jbe
sbb
int
mov
cmp
sub
jae
pop
jl
xchg
lea
xor
push
call
ds
jno
jae
inc
pusha
pop
inc
mov
jle
push
dec
icebp
dec
mov
sti
cs
scas
dec
cmc
or
mov
push
js
gs
push
ja
bound
adcb
ficoms
bnd
fistps
or
sbb
and
xor
cwtl
dec
std
test
adc
dec
aas
mov
and
sub
cltd
inc
jbe
or
lods
fsubp
cmp
cmp
sbb
dec
movsb
jbe
mov
jno
mov
xchg
sbb
icebp
and
sbb
nop
mov
sar
test
xor
pop
add
push
fsubrl
cmp
aad
jle
pop
cmc
imul
mov
aad
mov
lahf
mov
inc
and
jns
hlt
add
sahf
in
and
cld
aad
loope
mov
jle
data16
xchg
insl
scas
sub
inc
jecxz
jnp
cwtl
dec
fidivl
push
jl
std
fisttpll
push
clc
cmpsl
imul
mov
push
cmpb
mov
and
fdivp
sub
push
pop
dec
das
push
and
fs
pusha
clc
dec
repz
push
adc
outsb
outsb
in
cmc
aam
sbb
leave
push
js
xor
scas
xchg
push
cmc
mov
imul
xor
bound
hlt
or
jo
repz
mov
mov
inc
cwtl
cs
pusha
sbb
jmp
or
push
push
jg
test
rolb
hlt
lods
das
mov
ds
icebp
adc
xor
in
pop
stos
jns
mov
mov
or
sbb
push
push
xchg
movsl
ja
loopne
jae
loopne
and
mov
es
adcb
xor
xchg
out
popa
cs
mov
enter
mov
ret
sub
inc
pop
dec
movsb
cmp
dec
mov
mov
ljmp
mov
mov
je
jne
pop
shl
mov
inc
pop
mov
add
mov
dec
and
scas
addr16
add
jecxz
fstpl
cmc
dec
pop
int3
icebp
out
push
cmp
push
or
xor
jg
int3
int3
jge
push
nop
mov
sbbl
mov
mov
add
xor
push
daa
push
cli
mov
sub
or
push
xchg
movsl
aad
dec
inc
and
hlt
pop
push
pmaddwd
pop
cli
movsb
lds
sbb
push
push
clc
inc
jge
ljmp
inc
sub
in
sti
insb
add
xor
outsb
add
cld
aas
hlt
ret
sub
cld
nop
inc
pushf
sub
jle
nop
pop
rol
jno
fsubrs
xor
push
pop
repnz
test
cld
mov
mov
shr
insb
mov
cmp
pop
cmp
in
out
mov
loope
jns
adc
sub
ret
lock
mov
cli
stc
mov
movsb
pop
rcrb
xor
xchg
sbb
xchg
push
push
hlt
adc
rcll
pop
call
addb
xchg
adc
cmp
pop
dec
loop
in
mov
xchg
mov
jno
aam
lahf
icebp
xchg
fimuls
mov
mov
xchg
outsl
int3
add
mov
and
sahf
and
daa
aad
xor
loop
test
cld
mov
out
js
or
fs
lcall
add
arpl
add
mov
xor
mov
dec
xchg
add
or
fildl
pop
mov
inc
ret
insb
xlat
out
cmp
mov
test
fsubrl
cmc
inc
pop
out
sbb
push
or
mov
jp,pt
mov
movsl
fdivrs
in
dec
adc
mov
jmp
ret
outsb
xchg
iret
out
xor
and
addr16
scas
ror
les
cmp
pop
sub
stos
mov
add
add
mov
cmc
mov
lock
lods
sub
aaa
and
mov
shl
orl
stos
int
pop
jle
rorb
jae
into
loope
mov
mov
sub
fidivrl
das
and
test
ss
repnz
icebp
fs
ss
scas
push
data16
push
cld
xchg
mov
aaa
lods
pop
jnp
sbb
mov
arpl
js
adc
sub
stos
push
inc
dec
adc
or
dec
lret
subl
int
push
add
jbe
mov
aad
in
mov
gs
clc
push
das
inc
dec
mov
mov
leave
cmp
jle
jmp
fucomip
leave
fidivs
cmpsl
cmpsl
jmp
adc
and
ss
inc
loopne
mov
or
mov
inc
inc
pop
outsb
adc
xchg
cld
xchg
push
push
push
pop
lret
mov
pop
testb
or
push
imul
inc
scas
mov
ds
mov
in
jle
ds
fmull
call
cmp
mov
adc
and
inc
test
int3
testl
test
mov
movsb
lret
xchg
js
pusha
jmp
sbb
push
sub
aas
dec
in
stos
adc
or
je
add
adc
adc
mov
inc
add
xor
ds
push
pop
sbb
jnp
in
add
std
stos
aas
int3
sub
adc
pop
stos
push
les
cmp
or
lds
mov
loopne
lock
scas
xchg
pusha
inc
notb
dec
out
iret
jp
enter
pop
inc
sbb
icebp
popf
push
lock
testl
fcompl
jmp
mov
or
mov
das
sbb
pop
mov
or
dec
mov
loop
and
scas
sbb
sarb
out
cmpsb
pop
dec
in
push
sub
mov
in
stos
jbe
xchg
mov
mov
sbb
xchg
insl
insl
subl
mov
sbb
es
xchg
stos
jns
bnd
jb
cli
fwait
stc
pop
add
seto
sbb
popa
insl
loope
imul
lcall
jo
lea
jmp
pusha
loopne
inc
jmp
dec
jle
insl
in
outsb
cmc
jo
add
cmp
adc
sbb
shrb
add
imul
or
cmc
fs
mov
movb
pop
lods
jae
iret
shlb
fisttpl
jb
pop
fcoms
mov
aaa
gs
jecxz
int
push
in
insl
cmp
fstpl
stos
push
mov
enter
sub
imul
adc
xchg
inc
cmp
dec
and
flds
push
fs
cmpsb
fldt
pop
pop
sbbb
or
jno
jmp
or
ret
jl
xor
fsubrl
push
aad
mov
in
jmp
mov
rolb
adc
pop
in
xor
mov
and
nop
imul
add
cmpsl
popa
xchg
int
jo
mov
loop
insb
flds
nop
cmp
lret
stos
jno
fdivrs
inc
xor
mov
aam
cltd
mov
push
divl
insl
repz
jge
dec
shufps
mov
les
adc
dec
loop
leave
les
xor
scas
outsb
leave
and
cwtl
and
sbb
xor
inc
sub
out
mov
neg
xor
pop
inc
jp
aam
sbb
mov
push
jne
lcall
in
and
lods
jecxz
test
jo
sub
adc
ds
gs
xchg
mov
xchg
mov
stc
inc
cmp
dec
mov
cmp
ret
lods
movsbl
popf
lret
jmp
outsb
xor
xchg
inc
je
or
repnz
movsb
adc
push
mov
mov
and
sbb
stc
test
jmp
cmp
fiadds
mov
cmp
mov
aas
out
pushf
mov
or
je
test
mov
popf
jecxz
or
cmp
insb
pushf
xchg
inc
lret
cmpsb
inc
out
test
mov
jp
cmp
loop
or
fcmovb
mov
sbb
xchg
scas
xchg
ficomps
test
scas
std
out
xor
mov
loopne
inc
xchg
adc
fisttpll
ret
cmpsl
jnp
mov
inc
sbb
inc
pop
mov
leave
xchg
sti
sbb
xorl
fsin
add
sub
fiadds
adc
push
hlt
pusha
sti
mov
or
add
mov
inc
push
in
pop
dec
ret
clc
scas
mov
mov
ret
stos
das
sarl
scas
add
or
and
and
push
out
cli
ljmp
sbb
aaa
push
cmp
dec
aas
lods
cli
sbbb
movsb
push
cmp
add
xchg
add
in
push
pushf
adc
rclb
enter
push
mov
cmp
ror
add
std
dec
jo
pop
xchg
pop
dec
insl
aaa
pop
or
dec
mov
mov
cmpb
movsl
int3
pop
sbb
sub
mov
inc
cmp
cvttps2pi
add
scas
and
fadd
and
out
insl
dec
fmuls
adc
mov
mov
jmp
lret
sub
dec
sbb
out
sahf
jae
push
jbe
mov
jmp
jp
sahf
testl
push
jno
notl
pop
loope
loopne
mov
and
shrl
mov
pop
mov
ret
mov
push
inc
scas
or
ss
pavgw
sbb
pusha
inc
xchg
sub
sbb
leave
mov
mov
fisubrs
pop
iret
das
cs
inc
adcl
faddp
cwtl
fwait
bnd
fwait
adc
cmpb
icebp
jno
sub
mov
aaa
scas
and
mov
and
aaa
lea
add
sub
push
into
cltd
js
jns
lods
xchg
or
jl
xchg
out
pusha
addb
into
adc
adc
movsl
orb
fwait
and
daa
fst
in
jge
xchg
sub
dec
pop
ds
bound
mov
pop
fs
add
outsb
stos
lods
mov
dec
pop
mov
aad
inc
into
cli
xlat
mov
xchg
out
mov
rcrl
mov
shrl
retw
js
scas
arpl
cmp
shl
pop
sar
pop
lods
push
dec
xchg
sbb
outsl
call
cli
jns
rolb
inc
insl
bound
inc
data16
push
push
divl
lret
jb
mov
movsl
xor
sti
int3
fcomps
xor
andl
out
loopne,pn
or
inc
fdivs
fiaddl
sbb
test
xchg
and
fists
pop
imul
cmpb
mov
je
or
test
fsubrl
sbb
and
bound
or
rcll
pop
int3
xor
je
lcall
cli
insl
or
and
mov
push
xchg
stos
mov
shr
pop
mov
push
add
cmpsl
imul
mov
add
movsl
vunpckhpd
fsubr
scas
xchg
jb
or
jns
push
mov
addr16
xchg
cmpsb
pop
aaa
push
add
sbb
pop
inc
xchg
dec
sbb
mov
mov
ljmp
xchg
sahf
ret
fs
pop
xchg
jge
xchg
jns
inc
xor
cmpsb
movsb
dec
dec
or
push
sbb
cmpsb
dec
mov
sub
jg
add
sarl
cmp
ret
mov
mov
pop
leave
push
xor
mov
xchg
pop
je
jmp
mov
lea
out
insl
stos
ficoml
pop
or
je
mov
jne
jo
lret
or
cmc
cmp
aad
idivl
insb
add
dec
daa
cmp
into
cmp
movsb
sbb
xchg
sub
cmp
adc
lods
fists
inc
cwtl
sbb
sub
sbb
mov
scas
aas
jmp
mov
jge
mov
add
pop
mov
mov
out
and
lock
sub
adc
test
add
pop
add
pop
lcall
adc
int
dec
push
xor
mov
pop
mov
mov
ret
jns
dec
xor
scas
js
out
insl
mov
cmp
mulb
call
and
adc
test
jg
fistpll
in
inc
sub
jecxz
shrl
adc
imul
dec
ds
fiaddl
call
inc
or
enter
in
dec
inc
mov
int3
roll
add
sub
add
push
or
adc
es
enter
jmp
subl
lods
add
xchg
mov
push
icebp
lret
out
add
mov
xchg
psraw
jge
xor
lcall
adc
stos
add
inc
and
add
add
test
sub
js
or
ret
mov
mov
loope
cwtl
and
mov
fnstcw
cmpsb
and
lea
push
stc
xor
cmp
mov
call
mov
jnp
inc
fimuls
fisttpll
jnp
push
dec
mov
test
xorb
cmpsl
int3
xchg
fldcw
lret
call
mov
dec
xchg
jmp
punpckhbw
mov
sub
xlat
xchg
pusha
jecxz
lret
lcall
nop
es
daa
ja
ja
lds
sub
xchg
sub
jle
repz
dec
or
jns
dec
dec
xor
cmp
jmp
cmp
inc
je
xor
cmp
pop
inc
add
loop
outsl
xor
and
and
mov
repnz
shrl
mov
lea
stc
lahf
shl
cwtl
jmp
or
lock
stos
fisttpl
push
mov
mov
js
mov
sbb
jno
sub
sbb
xchg
ficoms
mov
cmp
repz
lahf
loope
mov
jle
pop
int3
xchg
fcoml
pop
cwtl
enter
lret
mov
es
pushf
add
rcr
ljmp
push
push
leave
jmp
cld
add
mov
mov
xor
inc
dec
sbbb
cli
dec
mov
adc
push
and
mov
cmpsb
movsb
movsl
xlat
or
push
pop
dec
insl
mov
mov
jl
test
dec
cmc
push
out
popa
test
insl
xchg
sub
lock
dec
add
push
sbb
cmp
xchg
fcomip
pop
fcom
fiadds
xchg
pop
jb
test
dec
hlt
add
add
jmp
push
jnp
mov
sbb
ja
daa
mov
xchg
test
int3
xchg
jle
dec
int3
jo
in
sbb
ficomps
sbb
dec
fcomip
popa
imul
gs
hlt
jb
adc
test
je
aad
ss
sub
sub
pop
orb
jo
fldt
fs
cwtl
movsl
lcall
jne
add
mov
adc
ds
xchg
add
gs
cld
insl
pop
imulb
mov
mov
testb
pop
xlat
adc
lds
mov
push
std
gs
into
lock
xor
cmp
lahf
adc
sub
add
adc
mov
pop
fnstenv
fsts
add
cmp
repnz
adc
mov
es
lods
sbb
mov
pop
pop
mov
inc
lods
sysenter
xchg
fwait
pop
cmp
jb
cmp
fldl
add
mov
test
mov
lock
sub
ds
xchg
inc
es
jne
test
lahf
xlat
cmpsb
pop
insl
sub
ds
dec
mov
aaa
movsb
sub
mov
xor
mov
xchg
pop
mov
fdivs
xchg
push
out
or
es
loope
jl
mov
in
sub
xchg
mov
mov
imul
add
xchg
lret
loope
andb
shl
cmp
test
pushf
sbb
gs
or
xlat
mov
adc
in
je
pop
push
daa
push
xchg
xlat
inc
xchg
incl
movsl
inc
mov
jno
ljmp
lods
subl
cs
inc
lods
sub
and
iret
fs
mov
mov
or
in
fs
jns
push
mov
xor
dec
pop
mov
mov
aas
jg
aas
aam
inc
and
inc
data16
and
into
movsb
xchg
sub
or
xchg
mov
cmc
push
nop
mov
jne
sub
mov
sbb
mov
arpl
jmp
dec
xchg
xchg
popf
loop
sub
maskmovq
notl
pusha
pop
iret
fwait
xor
movl
stc
sti
popf
xor
push
sbb
xchg
push
pop
pop
and
pop
pop
mov
pushf
mov
or
test
push
and
pop
or
repz
xor
push
mov
and
outsb
fisubrl
iret
out
fnsave
test
fwait
lods
adc
mov
adc
aas
cmp
mov
out
dec
movsl
repz
jnp
rcl
stos
xchg
push
sbb
orb
lahf
enter
lock
test
push
xchg
inc
mov
stos
fsubrs
add
push
dec
jno
dec
loopne
lods
or
scas
rorb
pop
outsl
in
mov
out
les
inc
dec
lock
bound
jp
add
dec
sbb
push
jp
push
test
pop
scas
add
add
faddl
add
add
add
add
add
add
mov
add
add
mov
mov
add
xor
lods
pop
nop
nop
add
inc
sub
pop
xorl
sahf
outsb
lock
or
not
out
out
dec
inc
add
imul
jp
test
imul
loop
mov
adc
adc
lret
cmp
shl
lret
sarb
out
adc
mov
sbb
mov
fidivs
lock
cwtl
push
jbe
pusha
cmp
xchg
call
roll
mov
push
je
cltd
nop
test
lds
lcall
sti
fisttpll
inc
push
imulb
lods
pop
mov
jmp
cmpsl
mov
lret
pop
cli
dec
in
dec
mov
fistpll
add
jmp
outsb
addr16
push
je
add
std
xor
idiv
or
mov
divl
je
jl
call
fwait
inc
cmp
cmp
mov
jb
xor
cmp
aam
jb
rol
inc
sbb
insb
lcall
pop
popa
add
lcall
pop
jae
or
pop
push
nop
bound
sub
das
data16
insb
lock
aaa
incl
jne
mov
cli
ja
xor
or
or
push
xor
mov
dec
jae
jmp
xor
test
xlat
mov
mov
fistl
icebp
divb
pop
xchg
repnz
push
cmp
sti
dec
add
lds
add
mov
pushf
inc
or
inc
dec
jae
test
in
insb
mov
xchg
xor
mov
push
das
addl
mov
mov
jb
fldcw
dec
ljmp
ret
iret
pop
push
push
mov
ret
sub
in
sub
test
or
enter
test
cs
movsb
sub
call
in
mov
add
adc
mov
sub
nop
rcrl
int3
adc
adc
cmp
push
mov
ja
popa
call
push
or
fisubrs
into
xadd
insl
and
cmp
adc
test
or
xchg
fbld
jnp
pop
fbld
adc
pop
pop
dec
cli
outsl
pushf
dec
and
mov
mov
pop
sub
adc
mov
out
imul
fs
mov
dec
inc
push
out
and
push
push
jl
dec
mov
mov
insl
movsl
adc
sarw
pop
movsb
int3
shr
mov
mov
fwait
jle
jmp
faddl
sti
inc
or
shrl
clc
mov
mov
pop
leave
sub
cltd
push
xchg
sbb
dec
inc
xchg
cmpxchg
icebp
add
push
jo
rorb
mov
add
jmp
js
sub
mov
rorl
loop
mov
repz
mov
pop
adc
int
inc
push
popf
jecxz
or
insb
cmc
mov
push
prefetchwt1
xchg
xchg
push
jl
cmc
sub
fsubr
xor
adcb
mov
jg
shlb
inc
es
cwtl
shll
test
push
sub
mov
xchg
ljmp
out
imul
pop
push
cmpb
dec
mov
fldl
sbbb
push
les
shlb
movsl
add
push
fwait
js
addl
sbb
inc
ret
sbb
sar
lods
mov
daa
mov
pop
lds
cld
popf
sarl
aad
push
test
mov
pop
inc
ret
push
fmull
popf
inc
imul
and
popa
push
mov
mov
jle
cmp
scas
fisubrs
or
addr16
or
mov
idiv
aaa
jecxz
sub
shrl
mov
adc
jecxz
and
push
push
and
inc
sbb
subl
arpl
mov
lods
movsl
bound
add
cld
xor
adc
jle
or
in
imul
dec
in
mov
insl
push
adc
jmp
jmp
cvtdq2ps
inc
cmp
hlt
add
test
add
sbb
xor
imul
aam
mov
xor
das
sub
fwait
jns
xchg
icebp
insb
addl
pshufw
roll
and
aaa
xchg
hlt
cmp
push
imul
adc
int
sub
pop
cltd
aaa
adc
ds
cmp
mov
xlat
xchg
pop
push
xchg
movsb
dec
iret
mov
test
sub
jns
sti
fdivrs
stos
or
repz
jae
push
jns
test
push
fwait
insl
mulb
das
notl
sub
add
dec
into
rorl
add
jo
xchg
mov
mov
mov
scas
mov
cmp
pop
es
lret
jae
sub
or
test
fistps
or
sub
call
mov
jae
and
sbb
sbb
adc
mov
idivl
sub
sti
push
shlb
daa
mov
jnp
inc
dec
hlt
mov
xchg
push
dec
jbe
push
sub
xchg
in
push
cmpl
sahf
jno
faddp
ds
mov
fsubrl
jle
stc
pusha
xor
dec
repnz
call
sbb
outsl
jg
dec
lds
push
push
inc
inc
lds
fucom
stos
daa
adc
jb
inc
std
inc
cld
aas
inc
xor
cltd
popf
out
mov
dec
mov
test
repz
icebp
add
mov
mov
fistps
pop
pop
mov
xchg
push
hlt
shrl
stc
jmp
push
shll
mov
mov
push
inc
pop
movsl
sub
pop
cs
lea
and
ret
add
daa
push
pop
pushf
dec
pop
aas
call
ss
pop
jo
sbb
mov
inc
les
adc
divl
stc
mov
gs
cmpsb
push
xchg
and
shrl
jg
call
and
aaa
push
ret
cwtl
adc
gs
xlat
les
andb
xchg
out
sbb
jae
notb
jl
dec
mov
cmp
insb
lahf
push
mov
mov
adc
pop
arpl
pop
sarl
xor
in
ja
mov
out
idivl
cmp
xor
mov
repz
test
pop
or
cltd
loopne
loopne
sbb
sti
stc
push
outsb
ss
mov
push
or
push
add
adc
daa
push
mov
jmp
aaa
cmpsb
je
daa
insb
lcall
pop
pusha
mov
inc
fwait
xor
xchg
sub
mov
and
mov
fisubs
daa
push
push
lods
pop
and
in
data16
rol
test
push
jnp
pop
arpl
fistpll
adc
jo
int
dec
je
out
pop
fsubl
inc
mov
xchg
clc
mov
dec
jmp
imul
mov
mov
lods
ficoms
ja
lcall
xchg
xchg
mov
adc
mov
stos
adc
test
add
aaa
addr16
and
jle
fstpl
sbb
sbb
inc
dec
dec
push
or
jl
pushf
jle
popa
movsb
add
mov
xor
cmp
adc
cmp
push
or
stos
movb
lret
enter
rol
pop
and
cmc
es
in
jmp
loop
sub
sbb
sub
aas
pushf
jp
push
jno
add
dec
imul
popa
sysexit
xor
mov
mov
fiaddl
adc
mov
pop
mov
xchg
daa
push
sub
sahf
inc
in
add
cmp
dec
lahf
push
xchg
jmp
push
roll
in
push
pop
lods
inc
mov
stos
test
cmp
imulb
mov
orl
dec
jo
ficoms
idiv
xchg
mov
mov
inc
call
loop
xchg
and
cmpsb
and
xor
push
lea
push
mov
push
movsb
pop
xor
jmp
jne
in
sub
mov
stc
xor
jp
lret
or
xchg
adc
pop
ja
enter
in
gs
sti
jnp
and
lods
jl
enter
outsl
xchg
adc
cmpsl
loopne
push
adc
jne
ss
imul
mov
cltd
pop
dec
aaa
idivb
or
push
xor
sub
ljmp
push
sbb
sbb
fimuls
adcb
fadds
jns
or
inc
lret
stc
cmpsb
orb
jns
arpl
mov
and
addr16
enter
shl
sub
leave
mov
lcall
arpl
dec
or
data16
loop
in
pop
sub
arpl
sbb
mov
leave
push
mov
mov
sub
shlb
xchg
scas
jg
rorb
push
push
dec
out
inc
sbb
mov
ja
shrl
psubd
and
cli
ret
out
hlt
loope
andnps
pop
mov
rorl
out
jb
xor
inc
sub
mov
xor
sti
pop
xor
andl
popa
mov
mov
dec
cmp
out
adc
inc
and
fadds
or
fs
js
mov
xchg
pop
mov
jb
test
xchg
test
pushf
fistpl
sub
inc
mov
mov
cwtl
xor
clc
lds
insl
mov
inc
sti
fndisi(8087
push
nop
imul
push
pop
jmp
scas
pushf
jns
mov
popa
ficoms
xchg
pop
pop
inc
mov
sub
sbb
notl
sub
pop
inc
sbbl
push
aas
add
push
outsl
aad
xor
lret
insb
bound
adc
clc
adc
cmpsl
clc
in
sarb
adc
in
ret
sti
inc
insl
into
pop
mov
pop
adc
cltd
sbb
jg
dec
test
push
lods
idiv
hlt
cli
popa
and
adc
call
nop
call
jge
popa
testl
cli
fnsave
inc
or
and
sub
jb
pushf
ljmp
hlt
clc
mov
mov
add
popa
or
mov
in
fmull
push
jle
shll
in
xor
xor
push
in
out
push
mov
int3
cmp
std
outsb
imull
dec
in
dec
out
and
data16
sbbb
xorl
add
inc
in
sbb
xchg
xor
push
and
xor
mov
mov
or
test
push
cmp
leave
sbb
pop
jge
jnp
pop
lods
and
sbbl
push
pop
aaa
sti
outsl
xor
movsb
aam
std
in
cmpsl
push
divl
and
movsl
pop
mov
inc
cmp
dec
mov
subb
adc
push
sbb
mov
mov
movsb
lret
shr
cld
add
outsl
sub
lcall
fdivrs
psadbw
pushw
movsb
inc
insl
mov
xchg
xchg
inc
test
mov
sbb
and
and
int3
std
daa
popa
xchg
jg
mov
js
push
nop
lret
imul
mov
shr
testb
jp
jno
imul
lods
daa
jecxz
outsl
hlt
adc
out
push
div
or
push
dec
popf
push
or
nop
jle
test
pop
mov
sarl
ret
or
aad
cmp
xchg
jmp
mov
outsb
in
dec
sub
pushf
stos
dec
cltd
das
cs
out
mov
cli
ret
or
int
adc
imul
add
push
outsb
mov
mov
dec
ljmp
lods
in
sub
aas
cwtl
out
jae
test
leave
sbb
in
popa
scas
or
xchg
mov
jns
mov
mov
adc
test
xchg
test
jbe
ficompl
mov
test
pop
mov
mov
jb
mov
jecxz
xchg
std
mul
in
imul
mov
fdiv
sub
inc
leave
in
ror
dec
sub
stos
mov
mov
in
int
lods
and
inc
cltd
in
popa
shlb
sub
pop
cmp
mov
scas
push
fucomip
dec
andl
push
aaa
test
or
or
cmp
xchg
and
cs
add
loope
fldt
lods
out
mov
mov
and
mov
outsb
std
mov
popa
icebp
mov
lods
into
stos
xor
mov
lods
add
insl
cmp
mov
icebp
das
outsl
mov
insl
push
outsl
or
pop
lret
shl
mov
nop
iret
shll
imul
negb
mov
sahf
pop
fdivl
mov
loopne
xor
sub
shrb
pop
jp
and
stos
loope
fstps
int
lock
pushf
mov
jo
fisubl
jmp
xor
adc
dec
xchg
pinsrw
or
out
fldenv
mov
int
push
jl
sbb
pop
das
pop
in
adc
dec
cld
addr16
add
or
aas
dec
cli
dec
cmp
scas
dec
or
mov
mov
xor
dec
mov
icebp
fs
mov
xchg
imul
cmp
fwait
lret
rcrl
jge
into
fstpt
xchg
mov
mov
es
cmpsl
jns
shlb
mov
in
mov
push
inc
outsb
xor
or
push
shlb
xchg
add
pop
jl
out
js
and
dec
imul
adc
ss
popa
dec
adc
xchg
es
lahf
push
lds
adc
outsl
insl
xlat
jnp
cmpsb
adc
mov
addb
nopl
into
inc
mov
push
and
shll
lods
cli
cmp
aaa
inc
popa
fwait
add
cmp
cltd
inc
repz
add
out
gs
clc
data16
jae
cmp
mov
sahf
mov
jg
cwtl
call
jg
jb
inc
xchg
inc
test
out
xchg
xchg
jbe
push
push
cltd
jo
push
mov
ds
sahf
cmpsl
or
or
stos
ljmp
daa
les
mov
mov
jecxz
out
lahf
dec
mov
xchg
test
adc
loopne
inc
stc
push
sarb
push
add
jp
ret
out
imul
adc
sbb
jae
data16
mov
cmp
adc
pop
push
scas
pop
je
sbb
mov
pop
insl
rcll
sti
sbb
ljmp
push
test
mov
cmp
fwait
add
lcall
xchg
in
push
jg
xor
and
out
data16
sub
adc
sbb
and
es
cltd
mov
ja
mov
push
stc
adc
int3
mov
pop
int
push
dec
rcrb
lods
in
stos
test
sbbl
fstpl
test
pop
lret
inc
insl
cmp
push
dec
ljmp
lods
jo
sti
push
sbb
pusha
test
das
stos
stos
xor
mov
dec
icebp
mov
xchg
cmpsl
jae
jne
mov
xchg
int3
nop
je
rorl
nop
sbb
jns
or
push
add
addr16
xor
cmp
cmp
mov
pop
pop
adc
loop
cmp
enter
nop
mov
in
jns
jmp
push
adc
fucom
out
les
jle
dec
jp
sbb
jb
out
xor
out
test
repnz
outsl
lods
movsl
push
stos
xchg
js
add
mov
stos
sbb
xor
jns
or
fisubl
mov
pop
cmp
mov
mov
repnz
adc
mov
int
dec
jne
dec
stos
test
shlb
sbb
push
call
or
add
popa
mov
cmp
leave
pop
or
aad
fildll
sahf
or
scas
sub
mov
mov
lock
movsb
cmp
outsl
cmp
jmp
adc
push
mov
mov
test
loope
nop
je
push
lods
or
mov
das
inc
js
nop
pop
cmp
mov
xchg
jg
or
es
nop
sbb
and
loop
inc
pop
popa
js
int3
mov
cmp
mov
adc
pop
ror
cs
or
mov
or
push
lods
sarb
loope
rcll
jmp
push
fnstenv
mov
aad
add
cli
rol
movsb
fcompl
out
and
sub
shl
outsb
mov
xor
rcll
bound
dec
movsb
inc
mov
addl
inc
shll
mov
sub
mov
pop
xchg
ffreep
jmp
jle
mov
adc
mov
inc
pop
lock
inc
aas
cmp
in
popf
sub
xchg
dec
jp
mov
inc
xor
cmp
push
js
mov
in
inc
fistps
or
jecxz
mov
push
cwtl
mov
mov
or
xchg
or
cwtl
cmp
inc
add
icebp
xchg
lods
les
sbb
cltd
mov
shll
arpl
stos
mov
push
nop
mov
repnz
test
sbb
jae
mov
mov
jnp
sti
repz
xchg
pop
ds
stos
imul
pop
sbb
sub
push
xor
mov
sub
adc
shll
mov
movsb
cltd
push
xchg
mov
sbb
lret
lcall
fs
jae
jecxz
xchg
hlt
aaa
jg
mov
shl
cmp
xchg
aaa
fstpt
cld
popl
outsl
bound
std
ds
and
inc
add
dec
inc
rorl
enter
icebp
push
les
adc
sbb
sbb
dec
mov
inc
ss
and
push
mov
fmul
and
push
insl
sbb
xor
in
push
add
jb
push
and
cmp
xchg
mov
repz
dec
pop
cli
dec
lods
add
mov
mov
test
mov
cld
daa
pop
dec
leave
pop
js
gs
stos
xchg
push
leave
xchg
roll
pop
push
sti
jnp
cli
loope
sbb
sub
add
jmp
insl
mov
ja
into
shll
cs
sbb
push
loope
mov
inc
add
in
rolb
dec
cwtl
lock
pop
or
sub
sub
fldl
pop
lds
into
adc
add
sub
rsm
nop
jp
pop
sub
lock
iret
rorb
ret
mov
push
test
testb
dec
xchg
sub
ror
insb
pop
leave
mov
ret
fdivrl
xor
and
mov
pop
cltd
jmp
loop
inc
loopne
insb
mov
adc
iret
xor
pop
aas
jb
mov
cmpsl
es
gs
mov
xchg
lds
das
repz
dec
dec
fisttpll
loop
cmp
dec
mov
sbb
pushl
inc
xchg
je
xor
fwait
lahf
sub
aad
inc
fs
fsubp
out
inc
push
push
in
sub
pop
xchg
leave
data16
loope
mov
fstl
outsb
addb
leave
das
dec
loope
outsb
sbb
pop
sub
mov
loopne
dec
pop
jne
pop
or
loopne
fwait
nop
mov
stos
clc
call
inc
cmp
imul
mov
sub
int
push
jp
mov
cmc
test
mov
scas
test
jns
xchg
inc
aam
sti
adc
add
bound
xor
out
cmp
or
mov
xchg
addr16
scas
stos
gs
jmp
push
sbb
inc
pusha
jl
pushf
jb
les
leave
inc
sbb
fs
das
out
paddb
cmp
fisubrl
cmc
pop
mov
in
or
xor
sahf
mov
arpl
inc
js
jecxz
sbb
insb
jmp
mov
inc
xor
sub
jbe
mov
mov
xorl
lea
xor
insb
jmp
rcr
mov
jl
fs
test
push
xchg
cmp
aad
sbb
cltd
push
cmpsb
mov
lods
js
outsl
pop
cmc
jo
outsb
xor
fwait
adc
pop
cwtl
sub
lock
rol
ss
aad
pop
jl
sub
dec
std
and
pop
inc
push
movsl
sub
adc
lret
add
fmulp
scas
stos
jp
mov
and
sub
sbbl
add
push
pop
adc
cli
imul
or
jno
inc
aad
jmp
in
adc
mov
ss
dec
inc
adc
dec
shl
or
fsubrs
sbb
rcrl
gs
inc
jp
add
push
jns
int
test
add
fcoml
or
fstpl
adcb
sbbb
in
mov
sub
iret
lret
cwtl
pusha
or
mov
sbb
jae
jl
je
jge
adc
xchg
stos
dec
jne
movsl
js
inc
ret
dec
cmp
loop
in
inc
test
adc
fsubrl
jecxz
pop
fstpt
push
cmpsb
cmp
test
jo
push
mov
push
incb
mov
imul
jle
sbb
lret
mov
aas
and
mov
adc
jmp
jmp
repz
dec
inc
arpl
mov
cmpsl
push
or
leave
jno
mov
xchg
and
xchg
push
and
push
repz
loopne
inc
cltd
gs
in
mov
pusha
dec
adc
sbb
rorb
mov
lods
sub
or
xchg
in
jne
xchg
clc
ret
incb
mov
xchg
inc
xchg
dec
adc
in
xor
xorb
sub
int
mov
int3
js
lock
or
xchg
lahf
gs
cli
lods
pusha
inc
daa
and
loop
inc
sbb
or
call
xor
xor
mov
les
add
imul
ljmp
push
out
ret
push
add
or
push
push
push
lods
dec
aad
in
fwait
sbb
sbb
sub
sti
push
mov
mov
dec
sbb
in
lods
xor
jl
jp
xchg
in
out
dec
push
fbld
lahf
rcrl
mov
int3
jp
test
sub
in
xor
daa
dec
loope
fdivrs
mov
outsl
nop
pusha
lret
pushf
sbb
add
outsl
push
out
mov
lock
xor
pusha
outsb
sbb
mov
dec
push
cld
mov
sub
sbb
mov
xchg
xchg
das
push
scas
or
mov
cmp
je
push
out
roll
pushf
stc
movsb
xchg
xchg
pop
repz
jmp
cmp
or
or
push
nop
push
fidivl
or
pop
mov
in
or
repnz
fildll
jo
sub
mov
push
jp
movd
idivb
jne
fucomi
scas
dec
adc
push
mov
icebp
sbb
test
mulps
int3
leave
cmp
add
add
mov
mov
inc
in
mov
rclb
cmp
and
js
jle
ja
stos
inc
ljmp
xor
fwait
roll
mov
ret
jmp
fsub
fldt
mov
lods
lahf
mov
in
iret
cmp
xor
pop
sbbl
mov
lret
cmp
dec
stos
loopne
xorb
dec
enter
or
into
aad
jnp
fsts
out
pop
cmp
lret
leave
ljmp
and
or
pop
cwtl
mov
dec
imul
flds
sub
inc
mov
adc
nop
xchg
cld
ret
xchg
push
dec
out
mov
sbb
xchg
lcall
jno
xchg
insb
imul
ficoms
cmp
pop
pop
mov
mov
or
daa
in
fldcw
pop
ror
ret
orl
enter
int3
arpl
sub
inc
sbb
sub
adc
lret
stos
lret
stos
icebp
inc
imul
stc
rorl
mov
mov
mov
adc
dec
es
lret
shll
sub
cmp
bound
push
fiadds
cmp
lret
bound
or
fisttpl
out
pop
repnz
outsl
loop
jl
sti
xor
cmpl
dec
or
xor
dec
xor
sahf
stc
sub
daa
mov
call
mov
gs
shl
int3
in
inc
or
js
pop
jnp
push
mov
mov
fistps
roll
xor
test
mov
and
cwtl
out
rcr
pop
cmp
push
jge
mov
incb
outsl
jne
cmp
cmpsl
bound
sarb
dec
jbe
inc
add
fdiv
mov
add
add
dec
dec
pop
and
adc
fwait
push
push
jb
lret
cli
mov
inc
cmpsb
repz
mov
adc
mov
pop
cmpsb
jmp
pop
push
cmp
loopne
dec
dec
mov
jge
div
dec
fcomps
clc
sub
lds
repnz
cmp
adc
sub
jmp
js
out
dec
movsb
int
add
roll
push
add
add
cmp
lahf
fadds
inc
dec
cltd
xchg
adc
ss
stc
sahf
sub
sub
and
mov
fwait
inc
cmp
sbb
mov
shl
mov
lods
dec
xor
bsf
ljmp
test
rolb
or
xchg
enter
add
sti
or
xrelease
push
mov
and
mov
and
test
ret
pop
jp
mov
icebp
inc
adc
push
adc
mov
xchg
icebp
mov
daa
add
jb
xchg
xor
sub
add
xlat
pop
rorl
scas
inc
in
andb
cmc
fcmovu
out
ja
je
pop
mov
in
lret
add
or
outsb
sub
add
add
xchg
xor
data16
push
cmp
sub
fcoml
es
jg
outsb
sbb
adc
or
xor
rcrb
xchg
lcall
pop
out
ret
std
xchg
xor
push
jg
lcall
ljmp
bound
adc
aaa
mov
clc
sbbl
inc
or
cmpsb
imul
push
movsl
js
dec
push
jge
stos
mov
jl
andb
pop
xchg
enter
push
xchg
sbb
jecxz
add
call
loope
add
xlat
cs
dec
stos
xor
adc
sub
imull
psrad
lret
in
sub
rolb
and
or
adc
data16
push
std
sbb
leave
add
rcll
inc
outsl
je
shll
sbb
and
add
add
mov
adc
push
rclb
stos
mov
xor
aam
cwtl
stc
in
jle
cmc
movsb
jae
inc
mov
int3
cld
sti
push
jg
or
fisubrs
sbb
and
rcpps
sbb
pushw
dec
sahf
lret
inc
dec
pop
push
clc
mov
mov
je
shlb
pop
xchg
imul
in
xor
jbe
dec
lock
out
aas
addr16
addb
xchg
scas
repz
cmp
mov
push
cmp
lods
adc
push
push
pushf
mov
and
xchg
and
mov
xchg
enter
in
addr16
gs
orb
push
jns
mov
cld
je
push
popa
or
rol
bound
stos
add
push
push
inc
inc
sub
jle
mov
add
out
dec
push
arpl
fmuls
test
and
insl
xlat
mov
sub
xorl
xchg
jns
pop
stc
push
ljmp
sbb
rorl
inc
cmp
jae
ret
pop
popf
xor
stc
sti
jnp
sub
cmpsb
repnz
loopne
int
lea
test
rorl
into
add
mov
enter
ja
push
sub
hlt
call
out
sub
outsl
cs
in
fsubrs
call
mov
pusha
loope
addb
sti
mov
call
fldl
dec
fdiv
sbb
push
aam
adc
add
enter
dec
jmp
push
adc
xor
shlb
scas
xor
jnp
dec
adc
in
ja
imull
cmpsl
cltd
bound
adc
gs
or
mov
out
or
jbe
push
mov
imul
mov
or
pop
add
dec
xchg
inc
leave
jp
cld
andb
inc
add
shrb
std
cmp
pop
out
jp
mov
aaa
shll
cmpsb
int
add
flds
mov
inc
xor
orl
inc
xlat
insl
out
hlt
mov
adc
sti
in
sub
inc
jae
jns
cld
lret
xchg
jg
adc
push
mov
jp
stos
add
mov
fwait
cmp
shll
pop
inc
cmp
adc
push
jo
ficomps
dec
aad
aad
ja
inc
test
inc
inc
adc
cmp
dec
jp
xor
sbb
arpl
mov
ds
fbstp
mov
dec
xchg
pop
lods
out
iret
jnp
and
sub
int
cmp
xchg
ret
cmp
test
popa
jp
scas
and
sbb
nop
inc
fstpt
sbb
add
js
jp
and
loop
xchg
pushf
cmp
xor
daa
dec
aaa
sub
loopne
lods
jle
mov
mov
loopne
imul
and
fldl
mov
cmpsl
push
cmp
mov
adc
jne
jo
jp
add
cmp
add
out
test
jb
push
adc
sti
stc
add
add
and
adc
imul
or
dec
and
ret
xor
jb
ljmpw
sbb
loop
mov
mov
in
sti
jmp
stc
loop
fidivl
shrb
fdiv
inc
cmp
jle
bound
call
loopne
gs
mov
fldenv
pop
ss
std
pop
jecxz
jge
pop
and
pop
insl
clc
cmc
jae
push
xchg
clc
mov
cmp
mov
push
xchg
xchg
pop
mov
popa
ret
mov
add
sbb
mov
pop
lods
mov
test
mov
fsub
inc
sbb
pusha
push
xchg
aam
jg
gs
push
lret
xlat
jbe
stc
lret
fnsave
and
or
sub
lret
out
lret
push
dec
inc
push
jno
cs
inc
cmp
mov
rorl
dec
pop
inc
sub
leave
pop
fcmove
jmp
movsl
dec
leave
pusha
xchg
sbb
sub
aas
and
cmpsb
adc
mov
adc
xchg
adc
jnp
bound
lcall
mov
leave
out
popa
mov
lods
shrb
sbb
ds
sub
lret
pop
cmp
xor
aaa
lahf
or
fdivs
adc
add
inc
orl
cmpl
cmp
sbb
cltd
adc
les
add
daa
int
xor
imul
mov
test
pop
repz
mov
xchg
inc
jns
lahf
jmp
out
mov
popa
adc
fdiv
pop
test
popa
push
sub
push
mov
neg
dec
cmp
negl
push
pop
mov
repnz
mov
lret
or
stc
cmp
aam
push
inc
or
xchg
cmp
jns
dec
rorl
repz
jnp
test
in
xor
repz
arpl
call
cmp
cmp
std
into
dec
pop
add
jg
dec
es
xchg
pop
mov
jecxz
test
sbb
push
push
jbe
xor
mov
xchg
outsl
jnp
xchg
mov
jp
cmpb
xchg
adc
mov
movb
jb
jne
add
lahf
add
fldcw
cltd
fbld
lret
or
repnz
sub
jp
xchg
xchg
pop
movsl
arpl
cmp
cmc
mov
sbb
es
sub
sub
clc
je
and
adc
sub
scas
sbb
out
cmp
sbb
and
lahf
aaa
cltd
jmp
cs
pushf
aam
push
cli
xchg
loopne
dec
and
popf
aad
leave
mov
inc
adc
fwait
sbb
mov
jmp
aad
add
hlt
mov
out
and
sub
mov
lcall
lcall
pusha
fdivl
fs
xlat
lret
jg
scas
xorb
sarl
pop
inc
xchg
xor
test
or
int3
add
push
enter
add
leave
dec
push
fisubrs
iret
jecxz
cmp
lret
pop
or
cmpsb
xchg
loop
js
aam
insl
subb
cld
loop
xchg
jns
push
adc
push
pushf
dec
xor
and
xor
out
cmp
push
push
test
ljmp
adc
enter
mov
mov
jmp
mov
push
adc
xor
jp
dec
loop
pop
fstpl
stos
jl
pusha
in
fsubrs
or
push
xlat
sti
cmp
into
int
jne
bound
imul
dec
jbe
jp
jae
leave
mov
cmp
ljmp
enter
and
jnp
jp
mov
and
enter
dec
push
dec
not
mov
icebp
push
sbbl
es
inc
insb
lods
out
js
fiaddl
jg
mov
dec
out
test
cmp
jle
lahf
push
std
fsubrs
nop
lds
scas
push
adc
jns
sub
loope
cli
ret
mov
pop
xchg
sbb
xchg
aad
imul
fbld
and
lock
testl
adc
icebp
in
xor
adc
cmc
and
rolb
loope
xchg
jb
mov
mov
hlt
xlat
in
lcall
mov
cmpsl
enter
push
mov
test
cmp
dec
das
shrl
nop
icebp
ds
cmp
jp
into
sbb
pop
add
aad
cli
loop
mov
les
outsb
cmp
dec
jae
pop
jae
inc
sti
mov
jmp
adc
dec
dec
lds
mov
movsl
xchg
mov
dec
mov
xchg
push
into
push
call
bound
movsl
dec
and
addl
and
xchg
aaa
push
add
cmp
cmp
movsl
push
jle
bound
cmp
imul
inc
adc
data16
outsl
fs
ret
push
lods
mov
clc
fs
andl
ljmp
ss
scas
or
sub
sbb
lods
mov
mov
adc
out
adc
les
adc
nop
lcall
repz
or
rcr
fwait
xor
mov
mov
jmp
pop
or
out
lea
sbb
adc
mov
mov
cmp
pop
loope
mov
add
pop
movsb
push
aas
mov
enter
push
and
pop
jnp
inc
mov
adc
cs
or
jmp
push
push
mov
mov
clc
mov
dec
push
mov
sub
lods
nop
aad
cmp
add
jns
ljmp
stos
in
out
push
jg
arpl
jo
inc
xor
data16
mov
test
ja
data16
or
mov
sbb
mov
ret
pop
popf
sbb
xchg
mull
cli
stos
je
dec
adc
mov
scas
adc
sub
mov
lods
jno
jae
dec
push
jecxz
push
sub
xor
sarl
pop
enter
mov
pop
jo
aas
jmp
cmp
addl
fstpl
movsb
pop
mov
leave
movsb
lock
xchg
mov
push
xor
or
lods
call
sbb
inc
mov
cmp
cmpsb
into
inc
push
pop
inc
div
push
or
push
ds
cmp
aad
sbb
jge
pushf
in
lahf
sub
dec
cmp
ret
pop
and
xchg
xlat
scas
pop
je
and
cmp
lcall
addl
and
mov
xchg
push
sbb
or
les
out
and
or
pop
out
jecxz
popf
cmp
sub
cmpsb
push
dec
mov
arpl
mov
pop
add
or
mov
mov
fcoms
inc
cmp
into
lods
push
cmp
inc
mov
and
cwtl
mov
iret
sbb
mov
pop
xchg
pop
out
mov
jmp
in
in
add
bound
push
add
cmp
mov
adc
add
mov
cld
addl
leave
inc
add
jno
xchg
add
sbb
inc
es
lock
inc
test
jge
bound
test
cmp
push
pop
ftst
xlat
ss
ficoms
inc
dec
add
fidivrs
mov
cmp
xlat
mov
jge
xor
push
jbe
int
inc
cmp
jne
pushf
mov
jecxz
push
aam
xor
scas
adc
orl
dec
sbb
fwait
mov
mov
jp
push
das
inc
adc
fadds
add
cmp
mov
mov
outsl
aad
sbb
je
roll
push
mov
adc
fdiv
sub
xor
mov
int3
cwtl
shll
or
pop
lods
cmp
push
cmp
ljmp
jo
push
or
pop
cltd
and
adc
int
lods
cmp
and
dec
mov
cmc
sub
into
sbb
sbb
mov
pop
movsb
outsb
ss
mov
iret
and
stos
push
fadds
hlt
andl
aas
enter
jo
fdivl
popf
stc
aam
jle
ljmpw
fcomps
pop
mov
clc
cmpsl
mov
jle
mov
lock
sub
pop
int3
jg
icebp
loopne
dec
mov
push
sahf
pop
or
fsts
stos
mov
fidivrl
mov
sbb
add
mov
add
movsb
mov
ds
pusha
sbb
push
inc
lcall
int3
dec
out
sub
mov
bound
jo
pop
mov
pop
mov
adc
shl
les
inc
xchg
pop
push
mov
fnstcw
xor
fidivrl
sub
scas
cwtl
pushf
or
frstor
dec
jg
daa
sub
dec
pop
sub
add
dec
lock
jmp
pusha
and
mov
jno
fisttpl
shll
addb
ss
into
scas
in
mov
jp
mov
inc
arpl
cmc
hlt
cmpsl
adc
mov
push
jl
cmpsb
add
in
and
es
push
in
xchg
pop
sub
mov
sbb
pop
or
mov
scas
xor
pop
scas
or
dec
and
mov
xlat
bound
cmpsl
imul
clc
lcall
xor
lods
lcall
aad
and
std
jns
in
pop
cmp
cvtps2pd
and
mov
push
mull
pop
xor
mov
and
lock
lea
aam
fidivl
pop
ret
pop
jecxz
out
or
outsb
outsb
pop
or
and
sub
test
loope
sbbb
push
ds
mov
das
pop
sarl
xchg
lea
push
leave
scas
insl
sub
daa
loope
jno
stos
jmp
sahf
clc
dec
mov
shrb
shl
inc
and
clc
incb
jmp
lcall
popf
jp
adc
fwait
mov
fistpll
mov
xor
cmp
popf
hlt
ror
jno
push
jo
xchg
insb
shlb
push
je
adc
outsl
and
pushf
xchg
pop
subl
scas
jo
xor
sti
jge
jnp
push
or
sbb
inc
fidivs
xchg
cmp
cld
jne
movsl
mov
xor
popf
movsl
mov
jge
jl
pop
pop
dec
jne
ljmp
jbe
sub
cmp
cmp
add
xlat
in
xchg
outsb
loopne
push
loope
loopne
out
stc
pop
jne
jecxz
mov
inc
aad
jae
das
or
loope
mov
addb
fildl
mov
fmul
and
jl
push
pusha
xchg
dec
jmp
xchg
sahf
outsb
xor
les
inc
hlt
push
repnz
cmc
jae
sub
stos
and
js
jns
repnz
mov
jnp
ret
ljmp
mov
test
pop
jmp
lahf
rol
mov
popl
push
cmp
mov
jmp
push
sub
adc
lret
mov
enter
lret
mov
mov
cmpsb
push
mov
out
jmp
icebp
fcmovnu
addl
push
fldl
bswap
mov
push
cmp
mov
jle
pop
jne
leave
hlt
pusha
ret
xor
lea
enter
icebp
pop
shlb
lea
adc
repz
push
inc
lret
sbb
adc
popf
jbe
stc
ret
std
inc
mov
fimuls
call
push
xchg
pop
mov
test
stos
ss
inc
movsb
jl
repz
scas
imul
ss
dec
mov
mov
aas
pop
faddp
lock
jns
cmp
pop
cld
or
shl
mov
mov
inc
pop
xchg
dec
sub
mov
sbb
mov
in
jb
test
rol
inc
or
rclb
rorl
mov
addr16
sub
movsb
jae
pop
cmc
pop
pxor
jecxz
leave
test
xor
fwait
dec
adc
push
dec
lahf
aad
lock
jl
outsl
pop
mov
je
sbbl
or
rcrl
daa
and
push
xor
jo
sbb
adc
mov
xor
cmp
out
call
mov
lock
push
xorb
fisttpl
xlat
mov
xor
add
mov
mov
cmp
dec
mov
jl
enter
adc
dec
mov
popa
les
loope
test
push
dec
sub
xchg
xor
push
inc
mov
xlat
rorb
cltd
push
stc
push
jmp
mov
sbb
dec
mov
inc
std
stos
iret
mov
push
dec
pop
and
pop
push
cmp
outsb
sbb
pop
pop
push
sub
mov
push
pushf
xor
out
jne
fs
cmp
xchg
push
push
imul
xchg
xchg
pop
enter
shlb
pop
mov
dec
sbb
lcall
push
mov
icebp
sbb
lods
sbb
andb
inc
pop
push
inc
ja
lcall
pop
aam
outsl
xor
fidivl
andb
dec
sbb
pop
dec
and
stos
daa
pop
fs
testl
fimuls
lea
stc
mov
pop
cmp
mov
andl
xor
negb
int3
lods
add
adc
movsb
pop
jle
xor
and
out
insl
xchg
aas
push
mov
sbb
flds
shll
cmp
imul
sbb
in
sarl
lret
cmp
aad
or
jns
xor
ret
in
xchg
mov
jmp
test
jge
cmpsb
mov
ret
adc
add
or
xlat
movsb
jno
int
mov
adc
repz
outsb
jbe
adc
dec
jnp
shlb
cli
pop
lcall
push
jge
cmc
push
mov
dec
iret
and
enter
sbb
test
stos
cmp
dec
bnd
xchg
inc
jne
xor
pop
rcll
icebp
sti
retw
ja
push
stos
dec
jp
or
cs
es
mov
call
outsl
pop
adc
and
es
inc
pop
inc
cmc
out
cmc
in
aas
scas
inc
add
add
add
add
add
add
add
popl
cmp
push
xor
dec
jbe
jne
push
and
xor
xor
inc
push
and
inc
dec
add
and
xor
outsb
and
inc
add
push
add
cmp
js
push
and
xor
pop
jp
and
insl
push
dec
add
jb
push
dec
jo
jo
add
push
jp
push
jp
xor
xor
inc
inc
push
add
push
and
add
xor
dec
push
dec
pop
fs
je
sub
push
xor
ja
push
xor
push
add
add
inc
and
add
cmp
pop
add
add
add
add
add
add
add
pop
add
pop
add
cmp
add
add
pop
jo
add
cmp
add
push
add
sub
add
push
cmp
add
cmp
add
cmp
add
pop
add
add
pop
add
xor
add
xor
add
xor
add
pop
add
xor
add
pop
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
or
jne
xor
cmp
gs
add
pop
push
inc
dec
pop
dec
dec
push
inc
inc
insb
inc
inc
pop
inc
dec
inc
dec
inc
pop
add
dec
push
dec
dec
push
push
inc
dec
pop
pop
pop
inc
pop
dec
dec
pop
pop
pop
dec
push
inc
inc
pop
inc
inc
push
inc
dec
push
inc
dec
inc
pop
add
pop
pop
dec
insb
dec
jno
pop
insb
inc
push
push
insl
bound
gs
pop
inc
inc
pop
inc
dec
inc
inc
inc
pop
add
jno
jbe
jns
dec
dec
pop
pop
push
dec
pop
inc
push
fs
jne
inc
pop
inc
push
inc
dec
dec
inc
pop
add
pop
pop
fs
insl
jne
jns
pop
inc
inc
pop
inc
push
inc
inc
inc
inc
pop
add
dec
imul
addr16
pop
pop
push
imul
inc
pop
dec
inc
pop
add
insb
dec
pop
inc
pop
ja
imul
inc
inc
inc
push
push
popa
outsl
inc
inc
pop
inc
inc
push
inc
dec
inc
inc
pop
add
ja
jno
data16
pop
imul
inc
pop
inc
push
inc
dec
inc
inc
pop
add
dec
dec
pop
dec
dec
inc
pop
push
pop
push
pop
push
inc
inc
pop
inc
pop
dec
inc
inc
inc
pop
add
dec
pop
pop
pop
pop
pop
dec
pop
push
pop
jae
jp
inc
inc
pop
inc
pop
push
inc
inc
dec
inc
pop
add
js
pop
imul
jb
dec
pop
dec
inc
inc
pop
inc
pop
push
inc
dec
push
inc
pop
dec
inc
pop
add
dec
push
dec
dec
pop
jno
jne
pop
push
inc
inc
pop
inc
push
inc
pop
dec
push
inc
pop
dec
inc
pop
add
pop
inc
push
dec
dec
pop
dec
dec
dec
outsl
pop
pop
pop
jns
push
inc
inc
inc
inc
pop
inc
inc
push
inc
inc
inc
pop
add
addr16
pop
ja
fs
inc
inc
pop
inc
dec
dec
inc
pop
add
cmp
xor
dec
and
push
dec
je
cmp
popa
and
add
cmp
xor
cmp
and
fs
push
dec
jbe
cmp
inc
cmp
pop
and
gs
and
pop
add
push
xor
add
and
jns
push
and
dec
push
insb
and
xor
xor
push
imul
fs
push
inc
and
jp
pop
push
and
and
push
jo
jne
cmp
and
add
and
xor
addr16
arpl
xor
dec
inc
and
pop
and
cmp
insl
push
insb
.byte
mov
add
inc
pop
add
adc
add
inc
pop
add
inc
pop
add
add
int3
inc
pop
add
inc
pop
add
add
cld
inc
pop
add
inc
pop
add
add
or
add
adc
add
pop
add
adc
add
inc
pop
add
pop
add
pop
add
pop
add
pop
add
inc
pop
add
inc
pop
add
inc
pop
add
inc
pop
add
inc
pop
add
add
add
pop
add
inc
pop
add
add
add
pop
add
inc
pop
add
add
pop
add
pop
add
inc
pop
add
inc
pop
add
inc
pop
add
inc
pop
add
add
add
inc
pop
add
pop
add
add
add
pop
add
pop
add
pop
add
pop
add
pop
add
add
lcall
add
add
add
pop
inc
gs
outsb
jne
je
insl
dec
inc
add
push
inc
outsl
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
inc
gs
outsb
jne
je
imul
pop
dec
jae
outsl
outsl
insl
gs
cmp
popa
je
inc
arpl
insb
gs
je
jb
popa
bound
add
push
gs
jne
jae
jb
outsl
jae
add
pop
dec
jae
imul
jae
bound
test
ja
outsl
arpl
push
arpl
pop
dec
imul
jne
je
insl
add
push
or
insl
outsl
jbe
push
jb
jo
add
pop
dec
outsl
popa
fs
outsb
jne
add
or
imul
je
gs
add
inc
push
xor
cs
insb
add
adc
imul
add
gs
add
fs
insb
cs
insb
add
dec
jne
inc
imul
outsb
je
jb
outsl
arpl
fs
js
push
add
dec
outsl
popa
fs
imul
js
add
nop
add
gs
jns
je
insl
push
imul
jae
insl
outsb
je
popl
gs
jns
je
insl
push
imul
insb
outsl
jae
dec
popa
outsb
fs
gs
add
jb
insl
jo
push
add
add
je
jb
outsl
arpl
fs
js
push
inc
fs
mov
je
jb
arpl
jae
inc
add
je
jne
jb
outsb
je
jb
arpl
jae
add
outsb
push
gs
popa
jo
outsl
jb
push
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
adc
inc
jb
popa
je
push
jb
jo
jb
jns
push
popa
addr16
add
push
add
gs
je
push
outsl
outsl
insb
bound
inc
js
inc
dec
dec
inc
push
dec
xor
cs
insb
add
sti
add
fs
outsl
outsb
je
gs
jne
arpl
add
sub
dec
imul
sbb
popa
je
inc
imul
push
push
gs
dec
jne
push
add
push
push
push
arpl
jae
bound
dec
push
push
outsl
insb
jns
imul
dec
xor
cs
insb
add
push
popa
je
dec
popa
imul
gs
jns
add
push
jo
inc
add
dec
push
inc
push
dec
cs
insb
add
add
add
add
add
add
and
add
cmp
add
add
add
add
add
add
add
add
add
pusha
add
addb
add
add
add
add
add
add
add
xchg
sbb
add
add
nop
add
adcb
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
push
pop
add
add
add
add
add
add
add
add
add
add
add
popw
add
add
in
add
add
add
push
jb
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
enter
mov
aaa
ljmp
cmpsb
aaa
mov
nop
mov
aaa
mov
mov
aaa
mov
aaa
mov
aaa
mov
aaa
mov
aaa
mov
aaa
mov
aaa
mov
aaa
mov
pop
mov
cltd
add
mov
aaa
xor
mov
aaa
mulb
mov
loopne
cmpsb
aaa
mov
lods
mov
mov
cmpsb
aaa
scas
jl
mov
aaa
mov
lods
mov
aaa
xchg
bound
cmpsb
aaa
mov
aaa
mov
aaa
mov
mov
aaa
mov
aaa
mov
aaa
mov
aaa
lret
or
cmp
mov
mov
aaa
mov
aaa
mov
aaa
mov
aaa
mov
mov
cmpsb
aaa
mov
aas
mov
push
mov
aaa
push
icebp
jb
add
aaa
sub
aaa
in
pop
mov
mov
aaa
mov
aaa
mov
aaa
mov
aaa
mov
aaa
mov
aaa
mov
aaa
mov
aaa
mov
aaa
mov
aaa
mov
cmpsb
mov
aaa
add
mov
aaa
and
mov
push
mov
jge
cmpsb
aaa
mov
aaa
mov
aaa
mov
aaa
mov
pop
loope
sub
aaa
xchg
jns
cmpsb
aaa
mov
aaa
mov
aaa
mov
xor
cmpsb
aaa
add
mov
aaa
mov
aaa
mov
aaa
mov
inc
mov
aaa
mov
aaa
mov
aaa
mov
aaa
jge
jnp
cmpsb
aaa
mov
pusha
mov
pop
mov
aaa
mov
aaa
mov
fnstsw
aaa
add
mov
aaa
mov
aaa
mov
fwait
mov
aaa
mov
sarb
mov
cmpsb
aaa
mov
aaa
mov
aaa
mov
aaa
mov
aaa
mov
aaa
jbe
xchg
arpl
cmpsb
aaa
loopne
jno
cmpsb
aaa
add
mov
aaa
clc
mov
jbe
mov
aaa
mov
aaa
mov
aaa
mov
aaa
mov
movsb
mov
aaa
mov
aaa
xchg
or
mov
pop
stc
jbe
mov
aaa
mov
inc
mov
aaa
popa
shlb
or
add
mov
or
mov
leave
mov
aaa
mov
aaa
mov
aaa
mov
aaa
mov
aaa
mov
aaa
mov
aaa
mov
aaa
mov
aaa
cmpsb
cmpsl
cmp
aaa
mov
aaa
xor
mov
aaa
mov
aaa
mov
push
cmpsb
aaa
mov
dec
pop
ds
cmpsb
aaa
mov
aaa
mov
aaa
mov
aaa
mov
aaa
xchg
outsl
sub
mov
aaa
mov
aaa
mov
aaa
mov
scas
fs
mov
aaa
mov
aaa
mov
aaa
mov
aaa
mov
test
aaa
mov
push
mov
aaa
mov
aaa
mov
aaa
mov
loope
cmpsb
aaa
mov
inc
mov
sub
push
aaa
mov
aaa
mov
stos
mov
aaa
mov
push
mov
aaa
mov
jge
cmpsb
aaa
mov
aaa
mov
aaa
mov
aaa
mov
sbb
aaa
mov
aaa
mov
aaa
dec
jmp
mov
js
cmpb
mov
sbb
aaa
mov
aaa
lds
mov
aaa
mov
and
aaa
or
mov
les
aaa
jg
push
mov
aaa
mov
aaa
mov
aaa
mov
mov
aaa
mov
aaa
std
insl
inc
mov
aaa
mov
aaa
mov
ss
aaa
clc
repnz
mov
aaa
mov
aaa
mov
aaa
mov
aaa
mov
js
xlat
jle
cmpsb
aaa
mov
dec
mov
aaa
add
mov
aaa
mov
xchg
mov
aaa
mov
aaa
mov
aaa
test
mov
inc
and
cmpsb
aaa
mov
mov
aaa
insl
sar
mov
aaa
mov
aaa
mov
mov
aaa
cmp
aaa
xchg
les
mov
jg
cmpsb
aaa
loop
sub
cmpsb
aaa
mov
ljmp
mov
push
mov
aaa
mov
aaa
mov
aaa
mov
dec
mov
aaa
mov
aaa
mov
aaa
lea
popf
pop
fdivs
cmpsb
aaa
add
mov
aaa
xor
mov
aaa
mov
aaa
and
mov
aaa
mov
jmp
cmpsb
aaa
mov
pop
mov
aaa
mov
aaa
mov
pop
mov
fidivrs
aaa
repnz
fdivrl
aaa
add
mov
aaa
mov
aaa
mov
aaa
mov
aaa
mov
aaa
mov
aaa
mov
and
adc
cmpsb
aaa
sti
dec
or
jo
mov
aaa
mov
out
mov
aaa
mov
test
xor
mov
mov
iret
mov
clc
mov
aaa
mov
mov
cmpsb
aaa
mov
sarl
aaa
mov
aaa
mov
aaa
mov
aaa
mov
mov
aaa
mov
aaa
mov
aaa
pop
lods
push
cld
lea
add
aaa
xlat
mov
mov
aaa
mov
aaa
mov
aaa
pop
xchg
and
aaa
mov
aaa
mov
aaa
mov
aaa
mov
aaa
mov
jne
cmpsb
aaa
sbb
mov
aaa
mov
aaa
mov
aaa
add
mov
std
mov
aaa
mov
aaa
mov
aaa
mov
aaa
mov
aaa
mov
aaa
jne
es
aaa
mov
aaa
mov
in
addr16
mov
aaa
mov
or
aaa
mov
aaa
add
mov
aaa
mov
cmp
jp
cmpsb
aaa
mov
aaa
mov
aaa
mov
loopne
cmpsb
aaa
mov
aaa
mov
lret
aaa
mov
aaa
mov
aaa
mov
aaa
mov
aam
out
mov
aam
push
stos
add
cli
cmp
pop
sbb
mov
aaa
fsubrp
xchg
mov
aaa
mov
aaa
mov
aaa
mov
aaa
mov
aaa
mov
aaa
mov
aaa
mov
aaa
mov
aaa
mov
aaa
mov
aaa
add
mov
aaa
mov
aaa
mov
aaa
mov
aaa
mov
sub
cmpsb
aaa
mov
aaa
xchg
mov
mov
xchg
mov
aaa
mov
aaa
mov
aaa
mov
aaa
fmul
mov
cmpsb
aaa
mov
aaa
mov
mov
aaa
mov
aaa
mov
mov
xor
mov
aaa
inc
pop
pop
mov
aaa
icebp
sub
pop
push
sub
cmpsb
aaa
test
mov
aaa
mov
jl
jae,pt
jbe
mov
aaa
mov
mov
cmpsb
aaa
mov
mov
aaa
pop
add
mov
add
aaa
mov
aaa
mov
aaa
mov
loopne
cmpsb
aaa
mov
aaa
mov
aaa
mov
aaa
mov
aaa
mov
js
xchg
imul
push
mov
aaa
mov
aaa
add
mov
aaa
pop
pop
sarb
shrb
movsb
pop
jecxz
cmpsb
aaa
mov
aaa
mov
aaa
mov
add
cmpsb
aaa
mov
addr16
push
xlat
cltd
cmpl
mov
lcall
mov
aaa
add
rcr
arpl
cmp
aaa
mov
aaa
sbb
fs
cli
mov
aaa
adc
mov
aaa
mov
outsl
push
jg
mov
aaa
and
mov
aaa
mov
aaa
mov
xchg
mov
cmpsb
aaa
add
mov
fwait
mov
dec
mov
aaa
mov
aaa
mov
aaa
mov
aaa
mov
aaa
mov
in
movsl
cmp
popf
xor
aaa
mov
aaa
inc
add
xchg
mov
aaa
mov
aaa
mov
aaa
mov
mov
popa
aam
or
cmpsb
aaa
mov
aaa
mov
aaa
mov
sbb
aaa
mov
aaa
mov
aaa
adc
fnstsw
dec
mov
ss
aaa
mov
aaa
mov
aaa
mov
mov
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
mov
xor
xor
xor
out
lods
stos
add
xor
xor
add
lahf
xor
xor
xor
xor
dec
scas
shll
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
call
dec
sub
dec
sub
dec
sub
sub
sub
dec
sub
push
add
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
or
dec
sub
dec
sub
xlat
sti
test
jb
inc
pusha
xor
xor
xor
xor
xor
cld
add
add
xor
daa
and
xor
xor
xor
xor
imul
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
ljmp
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
cs
ret
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
stos
xor
xor
xor
xor
sti
mov
xor
xor
sub
jns
dec
sub
dec
sub
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
add
add
dec
sub
dec
sub
dec
sub
iret
xor
xor
xor
xor
xor
xor
xor
jl
or
fidivl
dec
sub
dec
sub
dec
sub
dec
sub
rclb
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
inc
lods
xor
xor
add
scas
xchg
call
or
mov
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
sub
sub
dec
sub
call
xor
xor
xor
mov
clc
pop
icebp
xorb
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
xor
xor
xor
xor
xor
ret
xor
xor
xor
dec
sub
mov
call
dec
sub
dec
sub
sub
dec
sub
dec
sub
jl
xor
and
insb
xor
xor
xor
xor
xor
xchg
das
cmp
dec
sub
xor
xor
pop
xlat
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
fists
xor
add
fidivl
dec
sub
dec
sub
dec
sub
dec
sub
xor
xor
xor
xor
cmp
add
sub
xor
xor
xor
xor
xor
test
mov
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
pop
in
xor
xor
xor
xor
and
sub
sub
dec
sub
inc
xor
xor
xor
xor
xor
add
dec
sub
dec
sub
dec
sub
add
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
or
dec
sub
dec
sub
dec
sub
pop
dec
fnstcw
xor
xor
xor
xor
xor
xor
xor
nop
xor
dec
sub
dec
sub
xchg
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
add
lahf
hlt
xor
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
outsb
push
sub
dec
sub
dec
sub
call
sub
dec
sub
shrb
dec
sub
adc
dec
sub
push
sub
dec
sub
dec
sub
pop
fidivs
dec
sub
dec
sub
dec
sub
movsl
imul
sub
jge
out
xor
fstps
xor
xor
dec
or
dec
sub
sub
dec
sub
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
addr16
lret
dec
scas
bound
xor
xor
xor
xor
mov
xor
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
sub
dec
sub
xor
xor
xor
xor
xor
xor
add
shlb
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
sbb
dec
sub
push
rcr
std
add
dec
sub
dec
sub
jp
dec
sub
dec
sub
dec
sub
dec
sub
push
xor
xor
xor
xor
add
dec
sub
dec
sub
sub
dec
sub
sub
xor
xor
xor
xor
xor
add
sub
dec
sub
sub
dec
sub
dec
sub
dec
sub
dec
sub
test
dec
and
mov
sub
dec
sub
dec
sub
dec
sub
xor
orb
repnz
pop
ds
repz
nop
xor
xor
xor
shl
scas
xor
xor
enter
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
pop
xor
xor
xor
test
xor
xor
xor
xor
xor
add
dec
sub
dec
sub
dec
sub
mov
aas
adc
dec
sub
dec
sub
dec
sub
dec
sub
out
xor
xor
xor
xor
xor
xor
cs
je
dec
sub
dec
sub
dec
sub
repz
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
xor
xor
xor
xor
xor
xor
xor
test
sub
dec
sub
dec
sub
in
push
jecxz
xor
xor
xor
xor
sbb
jae
xor
xor
cs
xor
xor
xor
xor
xor
dec
sbb
adc
dec
xchg
dec
sub
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
aas
or
xor
xor
andl
dec
sub
dec
sub
dec
sub
arpl
xor
xor
xor
xor
mov
mov
dec
sub
lock
xor
xor
xor
xor
xor
xor
cmp
les
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
cmp
dec
sub
dec
sub
dec
sub
rorl
out
xor
add
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
mov
dec
sub
scas
xor
xor
jmp
mov
xorl
xor
xor
xor
add
dec
sub
dec
sub
dec
sub
xor
loopne
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
ljmp
cmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
loope
sbb
dec
sub
dec
sub
dec
sub
jne
inc
scas
shrl
cmpsb
push
xor
xor
xor
xor
xor
xor
xor
mov
lock
xor
xor
xor
xor
xor
jbe
cmp
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
xor
xor
xor
xor
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
dec
xor
xor
xor
xor
popf
jo
pop
push
ret
xor
xor
xor
aad
arpl
dec
sub
dec
sub
xor
loope
dec
xor
jns
xchg
xor
xor
xor
xor
xor
xor
xor
xor
lret
inc
mov
dec
sub
dec
sub
adc
je
dec
xor
xor
pop
shll
sub
dec
sub
frstor
movsb
xor
add
sub
xor
xor
xor
xor
xor
xor
xor
or
xor
adc
and
dec
sub
sub
dec
sub
dec
sub
dec
sub
cmpsl
fiadds
mov
test
xchg
cmp
xor
adc
jns
adc
xor
xor
xor
xor
xor
add
dec
sub
lret
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
and
and
sub
dec
sub
and
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
sub
dec
sub
dec
sub
xor
pop
jge
xor
xor
xor
xor
mov
cwtl
fisttpl
xor
xor
xor
xor
xor
xor
xor
xor
xchg
ja
xor
xor
insl
in
xor
xor
xor
icebp
adc
clc
xchg
xor
xor
add
dec
sub
xor
xor
pushf
stos
fidivs
dec
sub
dec
sub
dec
sub
dec
sub
cmp
xor
and
sub
dec
sub
cmc
test
xor
hlt
idivl
dec
sub
dec
sub
jbe
dec
sub
dec
sub
dec
sub
dec
sub
mov
xor
xor
andb
sub
iret
call
rcll
xor
dec
sub
dec
sub
dec
sub
xor
xor
xor
xor
xor
xor
xor
xor
xor
lahf
push
test
dec
sub
dec
sub
dec
sub
dec
sub
push
inc
inc
dec
pop
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
or
mov
les
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
nop
cmp
or
les
cmp
or
les
cmp
or
xor
les
cmp
or
les
xchg
cmpl
or
les
cmp
or
les
cmp
or
add
les
add
cmp
or
les
pop
cltd
push
les
xchg
pop
pushf
cmp
or
les
cmp
or
les
cmp
out
stc
das
cwtl
cmp
or
pop
sub
les
cmp
or
les
cmp
or
ja
cmp
or
les
faddl
cmp
or
les
sbb
fidivrs
les
fimuls
stc
cmp
or
les
add
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
or
les
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
les
add
cmp
or
push
ja
pop
cmp
or
les
cmp
or
les
cmp
or
adc
les
cmp
or
les
cmp
or
les
cmp
or
les
adc
dec
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
add
les
push
pop
sub
les
cmp
or
or
les
enter
les
cmp
or
addl
or
les
cmp
or
les
mov
mov
les
fcomip
int
les
cmp
or
adc
les
cmp
or
scas
cmp
or
add
mov
or
les
lods
or
cmp
stos
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
les
adc
insb
cld
ja
cmp
or
les
cmp
or
js
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
add
les
daa
add
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
les
pop
mov
cmp
or
les
cmp
or
les
cmp
or
les
insl
std
call
les
cmp
or
les
cmp
or
les
cmp
or
les
add
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
push
pusha
pop
mov
aas
mov
cmp
or
les
cmp
or
les
jo
sbb
les
cmp
or
les
cmp
or
les
aas
sub
cmp
or
les
cmp
or
les
add
and
les
les
and
les
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
les
sbb
cmp
or
les
cmp
or
cmp
or
les
cmp
les
cmp
or
les
cmp
or
les
cmp
or
loop
sub
les
add
cmp
or
test
jl
cmp
or
imull
cmp
or
idivl
les
cmp
xor
les
cmp
or
les
das
inc
inc
cmp
or
les
cmp
or
les
pop
ja
cmp
or
idivl
les
cmp
or
les
cmp
or
les
cmp
or
xchg
popf
cmp
or
les
add
fnstcw
les
mov
or
or
les
cmp
or
dec
cmp
or
les
cltd
dec
and
inc
sub
les
mov
or
les
lahf
lret
jbe
cmp
or
cmp
or
les
cmp
or
les
sub
or
add
dec
sahf
loop
cmp
or
les
cmp
or
xchg
les
cmp
or
call
les
cmp
or
les
rcr
cmp
or
les
test
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
les
xchg
jne
cmp
or
add
les
cmp
or
les
outsl
outsl
cmp
or
les
cmp
or
or
les
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
les
cmp
sahf
cmp
or
inc
mov
les
cmp
or
les
out
aad
cmp
or
les
add
cmp
or
les
cmpsl
inc
pusha
adc
cmp
or
les
scas
mov
les
cmp
or
push
cmp
or
les
cmp
or
rcrl
clc
dec
cmp
or
les
cmp
or
les
cmp
or
arpl
cmp
or
les
cmp
or
les
and
and
les
cmp
or
les
cmp
or
add
les
cmp
or
les
cmp
or
jmp
les
cmp
or
les
push
push
cmp
les
cmp
or
or
les
push
cmp
or
subb
cs
or
les
cmp
or
cmp
cmp
or
pop
cmp
or
les
add
cmp
or
les
sahf
mov
les
cmp
or
les
cmp
or
les
cmp
or
les
test
or
inc
cmp
or
les
cmp
or
les
iret
mov
les
cmp
sub
dec
cmp
or
les
cmp
or
pushf
sarl
or
les
add
dec
fcoml
les
cmp
or
jae
cmp
or
les
aam
data16
or
mov
cmp
or
les
cmp
or
cltd
cmp
or
les
cmp
or
cmpsl
in
les
cmp
or
sahf
mov
lahf
test
mov
les
cmp
or
les
cmp
or
les
add
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
mov
cmp
or
add
les
in
inc
cmp
or
mov
les
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
mov
cmp
or
adc
les
cmp
or
mov
les
mov
or
les
cmp
or
das
setnp
mov
add
outsb
cmp
or
add
mov
les
cmp
or
les
cmp
or
les
cmp
or
mov
int
jecxz
les
cli
xchg
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
pop
sbb
les
cli
out
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
les
add
cmp
or
std
push
cmp
or
or
les
cmp
or
les
cmp
or
les
cmp
or
je
movsb
add
push
or
les
cmp
or
or
les
cmp
or
les
cmp
or
les
cmp
or
or
les
cmp
or
les
add
cmp
or
les
cmp
or
les
cmp
or
nop
gs
mov
pop
mov
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
cld
cmp
or
les
cmp
or
les
cmp
or
les
sahf
and
les
cmp
or
les
cmp
or
les
jge
jmp
add
les
cmp
or
les
cmp
or
les
cmp
or
les
and
cmp
or
les
pop
mov
cmp
or
les
cmp
or
cmp
or
les
adc
out
cmp
or
les
cmp
or
xlat
jle
les
cmp
or
les
cmp
or
push
ret
xchg
jp
add
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
cmp
or
les
xchg
mov
and
cmp
or
les
cmp
or
les
and
aad
les
cmp
or
les
cmp
or
les
adc
push
cmp
or
les
cmp
or
les
add
cmp
or
or
les
imul
pop
xor
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
les
pop
cmpb
or
les
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
add
les
mov
or
cmp
or
les
cmp
or
les
cmp
or
or
les
cmp
or
les
pop
xchg
adc
jb
cmp
or
inc
cmp
or
les
cmp
or
pusha
cmp
or
les
cmp
or
les
cmp
or
add
les
push
mov
cmp
or
les
xchg
push
mov
sub
cmp
or
les
xor
push
jns
cmp
or
popf
inc
dec
addr16
or
les
push
pop
outsb
cmp
or
pop
mov
test
mov
pop
jl
les
lea
cmp
or
add
pop
cmp
or
les
jl
sarl
les
cmp
or
les
cmp
or
les
cmp
or
mov
xchg
cmp
cmp
or
les
cmp
or
and
les
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
int3
cmp
or
add
les
cmp
or
les
out
nop
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
les
xor
es
or
les
cmp
or
scas
cmp
or
les
cmp
or
les
sti
fadd
cmp
or
les
cmp
or
les
pop
pushf
fnstsw
les
cmp
or
add
or
les
cmp
or
les
inc
fstpt
les
cmp
or
dec
jg
les
cmp
or
les
mov
in
les
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
les
cmp
or
les
dec
int3
mov
les
mov
dec
imul
les
cmp
or
les
cmp
or
les
sub
or
les
cmp
or
les
cmp
or
mov
les
cmp
or
ret
les
cmp
pushf
cmp
or
xor
cmp
or
outsb
adc
les
cmp
or
les
cmp
or
loop
cmp
or
add
inc
dec
movb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
mov
mov
push
mov
aaa
xchg
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
int
pop
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
fdivp
and
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
pusha
lcall
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
ss
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
jnp
push
mov
push
mov
add
push
mov
push
mov
push
mov
and
mov
mov
inc
mov
sbb
mov
mov
push
mov
push
mov
xchg
nop
jbe
mov
jecxz
dec
push
mov
movsb
and
mov
jae
jmp
repnz
gs
mov
push
mov
push
mov
in
sbb
mov
mov
mov
mov
push
mov
imul
and
mov
push
mov
push
mov
mov
mov
mov
push
mov
push
mov
lock
or
mov
push
mov
push
mov
push
mov
push
mov
push
mov
xor
sti
push
mov
push
mov
cmp
push
mov
mov
mov
mov
mov
dec
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
add
mov
push
mov
push
mov
push
mov
addl
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
and
fcoms
mov
mov
push
mov
push
mov
xor
mov
mov
push
mov
ljmp
sbb
add
lods
loop
push
mov
push
mov
push
mov
imul
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
or
mov
push
mov
adc
push
mov
push
ret
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
mov
xlat
push
mov
push
mov
pop
pop
clc
push
mov
push
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
loopne
das
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
stos
xchg
push
mov
push
mov
das
and
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
shlb
mov
push
mov
and
push
fisubs
std
jmp
add
push
mov
push
add
shlb
mov
push
mov
push
mov
push
mov
in
push
push
mov
pop
inc
xchg
push
mov
xchg
push
mov
push
mov
fildll
es
mov
push
mov
push
mov
push
mov
push
mov
inc
adc
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
mov
nop
pop
stc
rclb
push
mov
jle
cli
push
mov
push
mov
push
mov
push
inc
add
add
and
add
lods
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
sbb
push
cmp
cmp
cmp
cmp
cmp
pop
cmp
jo
jbe
jle
test
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
and
sub
das
cmp
cmp
dec
cmp
pop
cmp
cmp
js
mov
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
cmp
dec
cmp
cmp
mov
pushf
cmp
out
or
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
cmp
call
cmp
xor
cmp
xchg
ds
ds
ds
or
xor
cmp
aas
mov
aas
aas
fdivrl
loopne
jmp
cmc
aas
aas
add
add
add
add
xor
xor
pop
xor
lea
xchg
xor
xor
xor
xor
xor
cmp
inc
xor
push
xor
arpl
mov
nop
xor
xor
xor
xor
xor
and
xor
bound
xor
js
jle
test
mov
mov
xchg
xor
xor
xor
xor
xor
jae
xchg
xor
xor
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
jo
xorl
fidivl
and
ss
bound
imul
ss
test
mov
call
aaa
inc
aaa
dec
aaa
pop
aaa
insl
aaa
jp
jg
mov
mov
enter
fnstenv
loopne
out
push
cmp
cmp
cmp
cmp
cmp
inc
cmp
push
cmp
test
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmpl
mov
cmp
cmp
cmp
cmp
cmp
pop
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
bound
fistpll
adc
data16
lods
ds
sarl
push
aas
xchg
aas
mov
mov
aas
aam
fidivrl
fidivrs
in
call
push
add
rolb
add
add
add
xor
xor
xor
jl
xorb
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
pop
xor
push
xor
xor
xor
xor
xor
xor
xor
push
outsb
xor
xor
xorb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
fs
fdivl
pushl
jae
jns
jge
xorl
ss
iret
ss
aaa
and
aaa
insl
aaa
jae
jns
lea
fdivl
loop
call
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
push
cmp
push
mov
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
adc
pop
cmp
xor
cmp
pusha
cmp
jb
js
jle
mov
cmp
cmp
cmp
sbb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
daa
cmp
xor
cmp
mov
mov
cmp
loop
push
or
adc
sub
dec
ds
ja,pt
mov
xchg
ds
mov
ds
ds
or
pop
aas
and
cs
aas
aas
inc
aas
ja
mov
les
enter
sarb
fdivrs
fdivrl
jecxz
aas
add
add
add
add
or
jnp
pushf
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
xchg
xor
xor
xor
xor
xchg
xor
xor
xor
xor
xor
xor
jno
jne
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
pop
mov
xchg
ss
mov
lds
push
aaa
mov
mov
cmp
popa
cmp
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sarb
cmp
cmp
cmp
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
insb
cmp
jbe
jl
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
cmp
inc
cmp
mov
adc
es
aas
aas
mov
jo
add
add
add
pop
xor
xor
xor
dec
xor
popa
xor
outsl
xor
jge
test
mov
xchg
xor
add
addb
add
add
xor
inc
xor
xor
xor
xor
je
xorb
xor
xor
xor
xor
xor
xor
xor
sbb
sbb
and
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
mov
add
fnsave
loope
in
jmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
dec
xor
push
xor
pop
xor
xor
insl
xor
jne
jns
jge
xorl
lea
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
push
add
add
cmp
inc
.byte
