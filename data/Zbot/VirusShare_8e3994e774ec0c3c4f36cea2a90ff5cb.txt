jnp
daa
xchg
add
jne
lea
push
or
push
sti
jg
push
hlt
push
push
push
push
push
push
call
leave
ret
imul
pop
xor
inc
sub
sub
add
sub
sbb
dec
add
push
jbe
jb
jns
add
sbb
jmp
add
cmp
inc
adc
aaa
inc
sub
aas
mov
add
add
push
ret
add
cmpsl
jno
mov
jl
or
mov
cli
or
mov
stos
sbb
jae
or
adc
pop
mov
mov
jp
xchg
sets
hlt
bound
mov
sub
sbb
loope
push
and
aaa
jmp
xchg
popa
push
lods
push
xchg
add
scas
add
or
movsl
mov
loopne
out
imul
icebp
inc
scas
stc
push
sbb
and
add
mov
flds
fcomi
mov
rcll
out
insb
adcb
sbb
sahf
add
lea
pop
jae
cwtl
in
dec
testb
xchg
in
push
imul
add
dec
push
into
cmp
or
add
scas
add
nop
jg
adc
stos
inc
andl
cld
addl
cwtl
dec
add
add
repnz
or
ret
dec
sbb
add
aas
add
add
add
add
or
push
std
call
push
sbb
push
loop
add
out
lcall
jle
dec
hlt
dec
xor
pop
pop
rcr
movsl
std
jmp
and
gs
pop
sbb
and
xor
mov
jl
sbb
add
xchg
shlb
pop
adc
cltd
rcr
xor
repz
int
xor
sbb
daa
fidivrs
dec
iret
int
mov
sbb
add
mov
insb
mov
add
push
fcoml
repz
sbb
sub
dec
push
or
outsb
pop
inc
xchg
mov
xchg
dec
mov
or
xor
lock
mov
mov
bound
add
push
es
aam
and
mov
insl
or
xchg
ljmp
ja
dec
sti
add
outsb
jo
data16
inc
lahf
sub
lahf
jmp
ss
sbbl
pop
add
nop
popa
ja
jp
mov
adc
fucomp
jecxz
insb
mov
mov
test
ljmp
popf
add
in
xadd
push
add
xchg
insb
pop
pop
aas
movsb
add
lret
ror
iret
in
xchg
add
mov
lahf
xchg
arpl
jmp
int3
lcall
dec
shrb
gs
das
rcll
add
dec
pop
mov
out
jo
add
bswap
in
aam
xor
mov
dec
outsb
dec
mov
inc
xor
cld
sub
mov
dec
ret
mov
pusha
push
or
xchg
pushf
add
int3
mov
adc
cltd
push
insl
nop
xchg
call
lret
ds
inc
aad
mov
xchg
mov
jae
jb
sub
sbbl
cmpsl
scas
xchg
loope
mov
or
idivb
int
imul
mov
cmp
push
add
push
mov
xor
pop
cs
mov
js
and
testl
mov
jbe
mov
scas
dec
xor
dec
int
adc
aad
cmpsl
push
push
add
fcoml
mov
fmuls
gs
in
add
inc
or
add
lods
lock
hlt
push
jne
ljmp
cwtl
mov
lods
imul
and
in
push
dec
inc
add
inc
push
sub
jnp
gs
sbb
scas
mov
clc
popa
int3
mov
push
jb
icebp
test
jl
mov
icebp
daa
mov
mov
adc
jecxz
popf
mov
inc
jg
pop
xchg
pusha
mov
mov
cmpb
fadd
imul
mov
lea
pop
into
jecxz
push
mov
adc
xchg
lret
es
inc
and
inc
popf
in
int
clc
mov
wbinvd
in
push
mov
stos
adc
scas
imul
pop
or
loopne
enter
adc
cmp
test
and
add
cld
mov
aam
inc
mov
fcomp
sbb
inc
mov
or
movsb
inc
ds
filds
mov
or
setnp
add
xlat
mov
movsl
fistpll
cmp
xor
test
and
lcall
jb
mov
jge
add
fdivl
dec
xor
mov
adc
push
adc
inc
mov
ret
aad
add
les
lds
movsb
add
sub
dec
push
pop
pop
pusha
sbb
or
cmp
clc
jle
jle
divl
pop
lods
lods
push
cmpsb
iret
out
mov
sti
jnp
repz
arpl
sar
fistl
sub
mov
ja
repz
mov
gs
mov
cmpsl
loop
inc
in
je
fimuls
mov
aam
gs
addr16
jns
jl
filds
shl
out
and
and
jge
mov
and
add
xor
or
in
movl
imul
sbb
adc
inc
scas
enter
fmuls
je
je
or
or
std
out
loopne
iret
xor
aad
out
repz
mov
rcrb
jl
xlat
mov
nop
pushf
and
or
jle
and
push
or
and
or
jo
push
xchg
add
mov
add
xor
jo
add
bound
mov
push
cld
loopne
xchg
fadds
pop
mov
jmp
sbb
inc
in
std
int
sti
inc
outsb
jb
scas
call
imul
jle
imul
mov
je
xchg
icebp
movsb
pop
inc
add
xchg
sbb
ror
jns
sbbl
sarb
add
pop
bswap
mov
std
leave
out
roll
hlt
ds
pop
push
js
fmul
cmp
mov
sbb
mov
adc
sub
mov
mov
aaa
fsubr
mov
jae
push
into
mov
subb
outsb
inc
xlat
ds
jle
add
subl
cmp
out
sarl
imulb
fsubs
rolb
cmp
pop
pop
dec
mov
lock
xchg
and
sub
add
sti
clc
cmp
in
ss
xchg
and
icebp
test
mov
push
fcompl
or
insb
cmp
ds
aas
fcmovnu
mov
dec
out
push
inc
int3
or
mov
or
push
inc
push
in
mov
inc
std
sbb
xchg
xlat
lock
push
jmp
ja
ret
cmpsb
shlb
xchg
jmp
cmp
mov
out
cwtl
out
push
andb
pop
stos
adcb
incb
lods
mov
cmpsb
mov
fcoms
xchg
inc
sbb
insb
mov
shr
and
ljmp
and
pop
stos
loope
in
xchg
enter
mov
js
xchg
push
mov
sub
inc
mov
mov
push
cmp
dec
outsb
popa
sahf
inc
ret
test
fisubrl
jns
pop
test
sub
jne
mov
pop
nop
adc
push
repz
jo
and
lock
leave
mov
pushf
sub
xchg
sub
jl
or
push
aad
les
inc
test
pushf
shrl
scas
jp
push
pop
test
mov
sbb
int3
lods
lods
mov
cmc
movsb
pushf
add
or
dec
ss
xchg
out
dec
lcall
add
or
loopne
data16
jmp
imull
js
mov
test
adc
loopne
pop
popf
sbb
mov
pop
adc
dec
push
repz
add
xchg
sarl
jne
jbe
clc
fsubs
add
lar
xor
dec
sbb
dec
daa
push
cmp
faddl
jl
out
mov
fisttps
pop
cmp
dec
and
fcmovb
mov
in
bound
xchg
jbe
push
or
scas
jecxz
add
decl
mov
loope
orl
sbb
jge
cmp
insl
inc
repz
movsl
or
adc
imul
mov
fmuls
adc
dec
or
or
out
lds
enter
je
cmp
loope
lcall
or
clc
push
and
jns
xchg
inc
mov
mov
jne
inc
jbe
call
push
mov
jl
pusha
pop
flds
iret
flds
data16
pop
push
int3
test
pop
jp
aad
call
jns
fcoml
jge
lea
cli
xor
sub
in
sub
daa
lods
cs
stc
xor
sbb
in
or
add
sarl
mov
jne
sub
fldenv
scas
movsb
dec
jmp
or
sbb
mov
stos
pop
and
add
or
jg
ljmp
adc
inc
pop
sar
ret
dec
inc
test
lahf
and
cmp
cmp
mov
mov
orl
mov
xchg
scas
cwtl
mull
aam
sbb
adc
loope
ret
mov
mov
mov
mov
sbb
sub
enter
xchg
lcall
push
sbb
push
int3
jecxz
jo
jecxz
mov
inc
lods
push
fdivrs
inc
push
jb
or
fcomi
and
je
sbb
mov
fldl
push
cmp
cmp
pop
stc
icebp
add
rcll
jl
stc
add
push
mov
lds
mov
mov
fstps
add
push
aad
sahf
inc
int
sub
test
inc
mov
jecxz
icebp
xor
fists
iret
in
dec
jo
out
out
adc
in
mov
jno
sbb
xchg
pop
lods
mov
adc
mov
inc
push
pop
js
add
fdivl
mov
jbe
adc
xor
or
popl
cmc
xor
jp
xorb
sbb
js
inc
sub
push
adc
mov
adc
test
nop
sub
inc
push
loope
andl
adcb
flds
cmpsl
jb
cmc
mov
cmp
and
sub
arpl
sbb
mov
test
nop
inc
pusha
ljmp
cld
mov
fdiv
popa
pop
cwtl
jo
adc
mov
in
in
orb
rcrb
mov
jo
lret
pushf
ret
lds
cs
movsb
xorl
mov
clc
add
adc
sub
into
mov
xchg
adc
mov
ror
mov
push
shlb
in
repz
out
in
mull
jmp
add
jmp
mov
jne
jge
data16
dec
icebp
out
cltd
sbb
stc
push
pop
xchg
xchg
es
insl
add
test
sahf
xchg
sbb
movsl
stc
dec
adcb
out
stos
xchg
pop
rcrb
inc
enter
aad
icebp
or
mov
push
and
mov
call
push
pop
jp
push
adc
add
in
add
cmp
movsl
fdivrs
push
mov
iret
xchg
mov
les
adc
int
roll
sbb
test
jl
jo
clc
cmpsl
lahf
cmpsl
je
lret
pop
jno
jb
xchg
hlt
push
loopne
mov
add
jne
mov
mov
sub
add
mov
xchg
test
adc
lods
push
adc
popf
sub
data16
in
xchg
shlb
ljmp
ljmp
cmp
sub
cmp
lcall
les
add
push
mov
sbb
add
scas
inc
sbb
test
adc
loopne
push
push
inc
xchg
dec
push
adc
push
stos
pop
sbb
add
mov
in
and
bound
jns
out
enter
jp
jecxz
inc
and
call
bound
call
lahf
jl
inc
dec
lods
sbb
sti
out
mov
out
push
push
xchg
inc
mull
inc
je
add
mov
int3
daa
ja
add
sub
cmp
mov
cli
adc
aam
xor
xor
jmp
decb
xchg
add
adc
jne
jmp
xor
outsb
cli
push
test
lods
mov
mov
sbb
sbbl
xchg
xorb
and
cli
cmpsb
push
push
es
add
adc
icebp
pop
sbbb
and
out
adc
out
push
add
test
or
pop
sahf
cmpsl
sbb
js
cmp
cmc
push
andb
dec
push
in
pop
lods
add
int
movsl
push
and
adc
ds
push
xchg
mov
dec
imul
adc
fcomps
jns
or
sbb
insl
scas
js
pop
xchg
cmp
pop
mov
jne
stos
cmp
leave
out
dec
ret
jp
imul
push
pop
fbld
cli
mov
mov
loop
repnz
loop
xchg
xlat
scas
cmp
push
pop
xor
xlat
aad
addr16
loopne
adc
jle
and
mov
cltd
or
mov
cmova
add
into
imul
shlb
pop
jno
jge
imul
lea
es
lea
add
arpl
test
cwtl
cmp
stos
fldpi
iret
inc
push
pop
and
ljmp
mov
add
pop
sub
mov
fildl
cwtl
sti
xor
xor
xchg
mov
mov
mov
shl
ljmp
add
or
xchg
clc
push
xor
imul
sbb
xor
dec
pushl
xchg
mov
add
icebp
pop
and
inc
cli
aad
shl
loopne
pop
jbe
adc
loope
movsl
in
pusha
inc
aaa
fdivs
lock
lcall
pop
sbb
fs
or
subl
jmp
add
mov
clc
fimull
inc
stos
scas
fs
stc
mov
push
popf
loopne
cmp
ds
dec
filds
add
adc
add
popf
stos
rcrb
mov
nop
cmp
sar
xor
ficompl
add
inc
sbb
mov
push
insb
pusha
dec
sbb
or
js
cmc
test
aam
cld
dec
cmc
pop
lcall
xor
inc
outsl
jl
add
xor
movsl
and
inc
in
mov
lds
int
add
add
data16
add
add
enter
mov
push
jno
sub
sub
pop
test
xorb
mov
mov
test
rcrb
sub
sbbb
icebp
mov
lea
pop
or
mov
sub
sahf
and
add
das
mov
mov
inc
fsubrs
fsubl
xor
push
pop
lock
int
ret
push
mov
and
lret
cli
or
in
xchg
mov
xor
add
jo
jo
cmp
movb
push
int
mov
jmp
and
aam
ss
cmp
sbb
jecxz
xor
mov
push
imul
fbld
loop
jge
cmp
mov
xchg
inc
loopne
push
dec
loope
cld
ss
ret
push
std
xor
outsb
sub
mov
xchg
icebp
mov
inc
xchg
test
lock
shlb
lock
fdivl
dec
and
add
nop
sub
sbb
data16
sbb
orb
mov
sahf
stos
push
inc
xchg
push
xchg
mov
adc
or
in
out
sbb
iret
xlat
int3
repz
mov
mov
dec
inc
push
loop
pop
mov
insb
cwtl
or
aad
shl
or
push
inc
mov
inc
mov
xchg
out
and
push
loope
mov
push
add
cmpsl
jge
cltd
pop
les
or
push
sub
and
ljmp
scas
and
pop
and
mov
leave
imul
shlb
lret
jge,pn
mov
sub
daa
insb
fidivl
jo
pop
hlt
mov
inc
ret
adc
pop
jbe
jmp
sbb
sub
mov
stos
jecxz
loopne
jne
xchg
daa
inc
in
mov
outsl
filds
subb
pop
jmp
mov
rsm
les
fisubl
aam
lods
pop
add
ret
mov
cmp
adcl
push
mov
lods
sbbb
mov
cwtl
hlt
jno
lds
movsb
psadbw
pop
test
sbb
nop
dec
fimull
bound
mov
enter
outsb
scas
xchg
sbb
cmp
mov
push
cld
sub
adc
pop
out
aad
pop
inc
stc
pusha
jge
sub
add
fwait
cli
xor
cmp
arpl
loopne
lds
fisubs
inc
lods
cltd
push
xchg
pop
pop
mov
xchg
adc
pop
pushf
cmp
jne
sbb
xchg
daa
dec
test
sbb
mov
inc
imulb
nop
clc
ljmp
sbb
cld
loope
push
add
fst
pop
cmp
push
add
add
cmp
inc
inc
je
mov
test
int
aaa
stos
lock
mov
adc
rorl
add
xor
incl
jmp
adc
jbe
and
popa
iret
xor
or
or
adc
dec
leave
loop
xlat
cs
jne
push
pop
xchg
xor
cmovl
std
jo
add
jp
lret
into
arpl
fwait
add
scas
xchg
scas
inc
fdiv
rorl
roll
call
loopne
pop
and
push
cmp
or
insl
aas
leave
into
sbbl
cld
dec
jnp
fwait
lret
sbb
test
les
pop
add
fdivl
inc
repnz
movsl
dec
lock
arpl
scas
inc
jae
cmp
call
mov
and
loopne
pop
and
jns
mov
mov
sub
xchg
push
sbbl
adc
jge
add
mov
xor
cld
sbb
bound
aas
je
inc
sbb
loopne
arpl
cmpb
add
mov
and
adc
sbb
and
pusha
daa
or
xchg
jno
jg
js
ds
inc
inc
dec
jg
xor
push
xchg
lods
je
popa
cmc
xlat
xchg
in
dec
sbb
mov
outsl
add
icebp
arpl
add
inc
cmp
or
setnp
sahf
in
ljmp
movsb
push
xchg
rolb
test
or
shll
rolb
ret
xchg
imul
in
inc
shll
stc
lods
add
pop
test
or
cli
push
xchg
out
push
pop
in
js
and
std
and
in
ret
and
inc
gs
xor
aad
js
sub
mov
sbb
mov
push
dec
sub
inc
cmpsb
das
jbe
cmp
jb
or
dec
jo
fimuls
jne
lods
inc
das
pop
jmp
loopne
int3
dec
aam
pusha
sub
push
add
cli
mov
inc
inc
sahf
pop
or
and
bound
aaa
cmp
les
test
test
stc
mov
sub
xchg
lret
scas
mov
nop
xchg
sub
xchg
xchg
adc
ljmp
jmp
cmpsl
pop
xchg
loope
mov
xchg
cmp
loopne
test
inc
fmul
jno
and
adc
push
add
sbb
sbb
je
mov
int3
pop
test
xor
jno
clc
jle
push
sub
adc
cli
ja
cltd
lock
test
in
outsb
jp
pop
xorl
pusha
add
mov
sbb
dec
mov
cmpsb
push
cld
mov
adc
call
adc
iret
cmc
loopne
xor
sub
mov
call
add
scas
inc
arpl
dec
xchg
mov
inc
jbe
add
push
pop
std
test
push
xor
jge
fistps
or
testb
mov
cwtl
test
sbb
dec
add
sbb
int
and
dec
and
mov
enter
outsb
xlat
nop
jge
and
ds
mov
mov
into
fisttps
rolb
les
mov
loope
leave
popa
or
jge
and
or
std
xchg
sub
sub
inc
inc
jnp
mov
push
rorb
test
outsl
push
mov
cltd
push
lea
jo
and
adc
xor
push
xor
push
adc
dec
adc
stos
sub
movsb
enter
sub
jecxz
cmp
movl
cmp
add
in
repnz
pop
shlb
xchg
xchg
and
dec
orb
mov
outsb
mov
stc
lock
je
push
daa
insb
push
xchg
test
pusha
inc
orl
xchg
repz
jg
pusha
push
pop
scas
stos
mov
lock
roll
cmpsb
int3
dec
inc
ds
cltd
stos
and
cs
add
xlat
sub
inc
jg
mov
push
mov
sbb
cmp
or
imul
jnp
cmp
mov
in
ljmp
lahf
pop
cmp
inc
mov
push
push
ret
btr
jle
insb
pop
pop
sahf
pop
lock
inc
sub
sub
push
jb
test
add
loopne
movsb
xor
mov
stos
out
int
mov
xor
mov
jg
push
jl
mov
xchg
mov
push
add
add
jg
push
add
loopne
mov
cmpsb
lcall
arpl
jno
push
and
pop
add
rclb
fwait
mov
pusha
leave
outsl
jl
data16
xor
movsl
pop
xor
jno
daa
xor
jg
subb
sbb
dec
sbb
push
push
mov
or
insl
sub
mov
dec
jnp
loop
pop
das
ss
enter
lea
mov
pop
xlat
aam
adc
jg
vrcpss
fs
fadds
cmp
dec
dec
ror
mov
xchg
xchg
call
lods
popa
and
in
mov
mov
push
call
dec
add
rcll
stos
xchg
sub
jge
clc
cs
jo
aaa
cld
or
jbe
or
mov
dec
ja
sbb
cli
insb
outsl
rclb
inc
scas
sahf
cmp
les
lock
mov
repz
sbb
xor
mov
jge
jl
daa
xor
dec
cmp
mov
ret
or
mov
mov
ljmp
inc
outsl
xor
mov
test
jmp
pop
pop
popa
ret
sbb
or
or
sbb
fcmovne
loope
sbb
outsb
sbb
or
cmp
xchg
test
mov
pop
jmp
out
clc
out
shrl
pop
test
fcomip
push
xchg
adc
lahf
shlb
push
rolb
leave
pop
mov
dec
or
ror
add
xor
adc
aaa
fcompl
add
push
imul
aaa
jecxz
adc
jle
ljmp
mov
popf
mov
inc
and
sub
lret
pop
sahf
lret
sbb
cmp
je
xor
das
pop
and
movsb
cmp
imul
sub
add
xor
cmp
stos
sbb
dec
mov
xchg
shrl
push
xor
ror
push
mov
movsl
xchg
jle
pop
inc
scas
adcl
aam
lahf
sarl
xchg
mov
add
aam
cmp
add
and
push
adc
imul
mov
sbb
enter
lock
inc
frstor
mov
data16
mov
shlb
xor
cmp
pop
gs
cwtl
rcr
inc
notb
jecxz
or
enter
fistps
pop
imul
cmp
pop
sbb
mov
mov
cmp
prefetchwt1
daa
ret
sbb
sarl
lods
xor
mov
or
add
xor
push
sbb
sub
pusha
sub
cmp
xlat
aad
ss
popf
in
jae
cld
jge
or
sahf
xor
mov
loope
mov
jae
xchg
jnp
stc
push
cmp
repz
or
lods
dec
fldt
ljmp
lea
orb
pop
mov
subw
adc
cld
inc
cmpsb
nop
mov
into
push
mov
pop
mov
clc
adc
roll
pop
scas
jno
test
jmp
shlb
addr16
push
jns
push
sahf
pop
out
xor
add
sbb
mov
push
fsts
idiv
iret
jl
fmull
scas
add
cmp
mov
dec
mov
jne
ret
imul
ljmp
incl
jbe
movsl
pop
add
sub
mov
mov
push
push
std
push
push
addr16
pop
arpl
sarb
cmp
adc
sbb
adc
jg
int3
add
ss
xchg
xor
andl
lcall
js
mov
lods
push
movsb
mov
or
dec
xor
add
in
aad
fsubp
cmpsl
sbb
jns
cmc
jecxz
inc
punpckhwd
or
sbb
insb
push
in
inc
jmp
cli
jp
cmp
aad
pop
cmp
out
and
xchg
aam
sub
mov
daa
incl
loop
enter
inc
mov
js,pt
cmp
mov
cmp
loopne
push
mov
roll
add
add
rorl
cli
jecxz
rorb
sub
push
clc
inc
mov
xchg
orl
in
loope
pop
push
xchg
clc
pop
sbb
test
pop
add
mov
loopne
sti
jecxz
xchg
shrd
popa
mov
loope
sbbb
mov
inc
out
mov
nop
andl
inc
adc
xchg
ret
dec
addr16
pushl
jg
in
orl
fwait
xchg
arpl
loopne
int3
xor
xor
cmp
or
repz
gs
and
push
fisubrl
mov
out
xchg
popa
scas
xchg
pop
fdivrs
test
push
mov
mov
cld
ljmp
lahf
ret
les
dec
shrl
mov
adc
rcrl
out
sbb
mov
jmp
adc
mov
js
push
repz
or
cmp
jg
fwait
dec
test
pop
xlat
mov
ret
mov
psrad
cmpsb
add
and
dec
jns
xchg
popa
adc
lods
xchg
test
mov
xchg
sub
mul
dec
ss
cwtl
sub
fsubrs
cwtl
int
fwait
cmp
gs
outsb
mov
sbb
jmp
and
loopne
lds
out
jno
les
jnp
jl
xchg
sbb
or
pop
adc
dec
mov
or
and
andl
add
add
imul
nop
cmp
imul
lret
cmpsb
lcall
inc
es
dec
jl
ds
sub
aaa
jo
lock
cltd
pushw
and
ja
hlt
sbb
cmp
lret
iret
nop
test
jp
leave
sbb
adc
pop
lods
cmp
xchg
and
add
lods
pop
outsb
mov
mov
test
lcall
roll
xor
push
or
jnp
loope
push
push
mov
push
mov
push
pop
cmp
or
cli
rcrl
scas
inc
adc
jg
inc
mov
fwait
or
pop
mov
enter
mov
push
lcall
mov
cmp
or
orb
xchg
dec
add
addb
cmpsb
daa
pushf
movsl
xchg
addl
daa
pop
out
aas
jo
mov
add
or
inc
hlt
xor
xor
into
xlat
jae
push
mov
jne
outsb
inc
clc
cld
mov
mov
sbb
add
inc
mov
iret
jmp
cmpl
pop
imul
push
aaa
mov
roll
mov
subb
cmp
adc
push
jle
ds
xchg
lods
xor
outsb
popf
mov
lahf
loope
add
push
dec
sub
pop
jp
sbb
js
xor
es
loopne
addb
pop
mov
adc
or
adc
call
loopne
add
loope
mov
pop
sbb
movsl
test
xchg
xchg
das
xor
push
mov
pop
iret
bound
sbb
imulb
movsl
jp
std
or
into
lods
enter
fisubl
stos
push
xlat
add
cmp
inc
dec
cmp
mov
push
cmp
popa
xchg
push
loopne
adc
test
push
fcmovne
mov
mov
cltd
shll
cmc
scas
push
addb
leave
cltd
clc
cmp
xchg
cmp
push
out
sbb
sahf
stc
xchg
sti
pop
mov
loop
inc
das
imul
clc
mov
jae
adc
and
lods
inc
dec
mov
pop
test
xchg
add
in
imul
mov
aam
dec
call
inc
cs
pusha
lods
push
xor
or
jmp
clc
popa
out
fst
dec
cs
lret
jecxz
sub
faddp
xor
rcll
push
fnstenv
sbb
loop
outsl
sti
or
mov
mov
in
push
rolb
push
outsl
sub
int3
cwtl
mov
shl
mov
dec
aad
mov
sbb
clc
pop
and
nop
cmp
pop
or
mov
pusha
sbb
mov
inc
cmp
or
stos
add
es
out
push
dec
cmp
sbb
fldl
dec
xor
inc
out
lcall
and
mov
xor
scas
scas
sbb
xchg
sbb
mov
repnz
mov
add
call
fcmovne
loop
jo
push
pop
sub
mov
daa
xchg
sbb
push
sbb
mov
jl
dec
mov
pop
push
rorb
fwait
movsbl
sub
inc
adc
jp
les
repnz
in
loopne
stc
sbb
jg
ja
and
int3
fistl
daa
xchg
jmp
in
stos
data16
push
ljmp
inc
xchg
das
and
bound
loopne
inc
or
mov
sbb
mov
loope
adc
lcall
outsl
mov
pusha
ret
negl
dec
ret
adc
add
and
fistps
das
out
push
in
test
mov
es
or
xchg
xor
icebp
mov
push
andl
enter
test
jbe
sbb
addr16
inc
cmp
and
jge
cmpsl
stos
adc
jecxz
xchg
jp
xchg
sub
fistl
lds
cmp
inc
and
inc
xor
push
pop
in
push
rcl
imul
movsl
pop
push
jle
insl
dec
pop
incb
pop
insl
fwait
and
mov
clc
sub
inc
das
sub
mov
in
cltd
aaa
pop
inc
daa
les
mov
imul
push
std
adc
movsl
mov
daa
sbb
lds
add
dec
jge
add
xor
push
dec
xchg
pop
sub
adc
call
gs
inc
dec
int
dec
icebp
xchg
sbb
ljmp
rcl
adc
loopne
rcrl
xor
xchg
mov
adc
sbb
mov
into
cld
xchg
adc
leave
add
cmp
lcall
test
push
dec
inc
or
sarb
test
enter
push
and
outsb
or
outsb
and
lock
mulb
and
shrb
mov
iret
sbb
outsb
fiadds
cmp
mov
mov
pop
jl
jno
push
jge
addr16
addl
push
adc
test
jle
pushf
pop
sbb
fs
push
and
cmpsb
into
mov
enter
push
push
mov
sarl
mov
arpl
inc
push
aam
lcall
push
pop
xchg
mov
fiadds
mov
psubsb
icebp
imul
stc
push
scas
stos
incb
or
push
cmp
das
push
call
jp
dec
jnp
add
loope
mov
fiadds
jle
xlat
lods
enter
xor
out
dec
lea
jecxz
in
into
imul
enter
bound
inc
test
sarl
sbb
add
xor
cli
idivb
inc
gs
add
dec
aam
pop
hlt
or
dec
mov
dec
pop
pop
je
lret
add
or
mov
jg
adc
pop
cmp
dec
or
sti
bound
ret
mov
cld
ja
imul
or
sahf
sub
mov
mov
adc
jmp
movsb
jmp
lcall
mov
lock
jecxz
out
mov
and
lods
inc
add
sub
or
lea
shrl
jmp
pusha
mov
sti
imul
sti
hlt
adc
and
popf
xchg
insl
cli
inc
and
push
insb
dec
nop
scas
adc
loopnew
adc
cwtl
mov
scas
repz
or
mov
jl
bound
jnp
sub
ds
jp
popl
or
mov
lcall
loope
cmp
mov
push
pop
fwait
lock
roll
and
dec
mov
xor
inc
cmc
loop
mov
sbb
sarl
inc
in
mov
xor
lret
or
push
sub
jne
add
xchg
movl
dec
movsl
outsb
xor
les
popf
dec
ficompl
ret
pop
int
test
shll
into
cmp
lock
cld
pop
loopne
push
add
lds
jge
cmp
js
pop
dec
and
stc
sub
icebp
mov
stos
sub
stos
loope
or
inc
not
cmp
pop
cmpsl
xor
mov
xor
cmc
xor
aam
jmp
insl
cmpsb
xchg
es
sub
adc
es
adc
lahf
sub
neg
cmp
jecxz
push
or
movsb
adcl
out
cmp
dec
xchg
aaa
arpl
rcrl
xorl
test
cld
popa
inc
sub
data16
and
stos
out
inc
test
xchg
xchg
imul
push
stos
shlb
jg
lds
inc
clc
or
popf
loopne
push
mov
out
ss
adc
mov
mov
jge
lret
ret
push
xchg
push
ds
inc
jl
xor
mov
and
sbb
inc
add
push
mov
jb
adc
out
sbb
inc
mov
orl
mov
gs
insb
ret
call
or
in
push
xor
mov
es
xor
mov
jle
adc
add
add
cs
cmc
and
bsr
mov
scas
int3
repz
popf
mov
adc
or
jmp
loopne
movsb
mov
mov
adc
repnz
iret
cmp
mov
adc
push
mov
or
sbb
outsb
ja
push
xor
int
cmp
scas
sub
pushf
adc
sbb
outsb
addr16
inc
iret
fiadds
incb
mov
adc
inc
clc
insl
clts
push
jno
shll
loope,pt
pop
sbb
pop
sbb
rolb
hlt
or
jl
ret
dec
mov
push
ds
cmpsl
add
jbe
pop
inc
dec
and
addr16
mov
faddl
jne
ljmp
mov
cmp
aam
push
mov
rorl
clc
xor
add
roll
es
jp
jecxz
or
clc
stos
setge
repnz
jo
or
inc
out
pop
add
adc
push
mov
cmp
inc
jne
xchg
push
in
sbb
ss
push
mov
xchg
inc
int3
sbb
in
mov
rcl
jle
inc
pop
pop
test
outsl
jl
adc
mov
push
jl
inc
les
adc
mov
inc
inc
fistps
cmpsl
mov
add
or
push
sbb
insb
ret
sbbb
mov
jb
loop
pusha
ss
jp
call
lret
push
das
mov
lcall
jl
lret
mov
inc
and
mov
mov
jo
dec
push
add
jo
mov
mov
aad
jp
cmpsb
into
ficomps
xor
int
lods
mov
mov
lahf
mov
inc
add
lods
lret
adc
bound
jae
add
cwtl
xor
test
xlat
daa
mov
mov
mov
pop
xchg
pop
cld
xchg
jne
cmp
insl
addb
icebp
les
xor
fisttpl
scas
mov
test
dec
into
jns
loopne
xchg
sahf
sarb
stc
mov
scas
lock
and
dec
movsb
and
add
int3
push
dec
mov
loope
or
loopne
push
loop
jmp
mov
jg
cmp
jns
cmp
data16
popf
push
ficomps
cmp
pop
iret
loopne
cmp
xchg
and
ret
sub
sub
ja
hlt
mov
ja
pusha
mov
mov
pop
jb
xor
rorb
mov
add
out
or
pushf
add
mov
outsb
in
clc
cmp
mov
dec
inc
inc
sbb
push
movsl
aaa
jle
pop
xor
mov
inc
push
or
cmp
cmp
push
rcll
xor
ss
dec
mov
pop
cmp
adc
adc
ds
pushf
and
jge
lea
addb
jbe
lea
adc
mov
inc
adc
xor
mov
jg
mov
sbb
ret
enter
shrl
js
fcoms
nop
add
loop
nop
xorb
dec
xchg
push
fisttpll
mov
jmp
mov
mov
fdivrs
rcll
ds
or
popa
dec
into
hlt
jmp
dec
xchg
push
and
outsb
ret
movsl
or
cmp
lahf
movsl
popf
adc
xchg
shlb
adcl
mov
adc
adc
mov
frstor
incb
dec
ss
movsb
into
ret
push
icebp
rol
pop
sub
xchg
jo
push
sbb
test
push
das
fists
in
rclb
pop
add
xchg
loopne
and
xor
dec
mov
cs
orl
xlat
sub
pop
sub
icebp
cmpsb
rcrb
xor
insl
lds
xorb
mov
lds
mov
std
xor
ljmp
cltd
aam
cld
iret
call
jle
pop
int3
add
repz
iret
mov
jle
stc
mov
inc
or
adc
lods
and
add
lahf
push
daa
hlt
mov
mov
cwtl
dec
add
test
xchg
cmp
dec
les
sub
cmpsb
lods
xchg
dec
pop
xchg
enter
jb
jo
pop
inc
adc
mov
xor
sbbl
ret
push
dec
sti
addr16
in
and
jnp
div
jle
adc
mov
inc
pop
add
les
add
xchg
lock
inc
lret
sub
cli
or
fbld
pop
insb
xor
mov
add
mov
sahf
mov
add
sbb
mov
add
jge
aad
xlat
jne
repnz
xchg
call
in
jae
mov
das
push
add
icebp
inc
xchg
inc
add
lods
int
fnstenv
adc
mov
dec
xcrypt-ofb
cmpsl
in
or
sbb
or
lods
dec
les
add
inc
jno
fbstp
fs
cwtl
push
loop
mov
jecxz
cmp
iret
sbb
arpl
dec
inc
inc
adc
sbb
lds
lea
inc
adc
pop
cmp
leave
jo
mov
cmp
das
push
mov
jbe
cmpsl
jl
mov
xchg
mov
sub
cmc
xadd
lods
lods
xchg
mov
or
jne
or
or
push
pop
outsb
pop
loop
xchg
cld
pop
jmp
mov
xlat
fcoml
pop
stos
xor
xor
cmp
xor
cmp
xchg
dec
rol
sbb
cmp
fcmovnb
loop
or
inc
nop
add
adc
clc
bound
pop
wbinvd
push
lret
sbb
lock
xchg
xor
insl
adc
push
dec
pop
fdivs
or
mov
and
es
adc
mull
pop
mov
adcl
or
xchg
cli
xlat
sub
lock
or
mov
cwtl
mov
dec
mov
push
test
inc
lahf
mulb
mov
int3
test
adc
call
test
and
or
test
ds
imul
and
out
lret
popa
xchg
aaa
imul
imul
inc
jmp
mov
dec
sbb
je
mov
clc
outsb
out
iret
jl
lds
adc
insb
ljmp
cmc
xor
cwtl
mov
iret
cmpl
add
fdivs
test
nop
incl
addb
scas
sub
ss
dec
mov
mov
nop
adc
dec
pop
mov
clc
stos
jge
and
inc
adc
and
test
std
leave
push
sbbb
dec
xchg
adc
mov
int3
popa
fdivr
push
ret
adcb
mov
test
adc
xchg
mov
fcomps
pushf
push
hlt
lds
add
cmc
pushf
or
shl
out
inc
stos
insb
bound
call
sahf
dec
notl
aam
push
and
pop
sarl
je
andb
test
addb
xor
sub
js
lret
adc
xchg
shr
cwtl
std
add
stc
rcl
add
jno
je
bound
je
out
dec
sbbb
sub
mov
aad
mov
add
sarl
sub
ror
inc
cmp
fwait
adc
sub
jecxz
cmp
push
frstor
pop
jl
inc
shrl
jb
test
lods
and
ret
mov
into
insl
jo
stos
xorb
jne
test
xchg
incl
push
ja
js
cwtl
je
or
sub
and
xlat
nop
fnstsw
xor
adcb
je
in
outsb
jmp
jo
sub
dec
mov
loop
js
pop
std
inc
and
push
jp
nop
ljmp
ret
inc
in
into
jo
dec
adc
int
pop
xor
add
movsb
add
sarl
pop
test
push
out
cmpl
mov
rcrl
movsl
mov
sub
mov
cmpsl
pop
movsl
jns
iret
sub
push
test
mov
xor
and
ret
jge
xor
pop
movsb
push
mov
and
mov
repnz
popa
movsl
inc
rorb
xchg
jbe
ss
jle
or
test
add
sar
mov
inc
mov
jbe
inc
les
xchg
in
ja
test
dec
jbe
sub
roll
dec
rcll
aas
sti
xlat
jne
mov
xor
icebp
aam
js
mov
sbb
mov
test
or
mov
stc
and
pop
cwtl
adc
mull
inc
in
and
arpl
sub
xchg
scas
addr16
pop
jge
in
inc
daa
jne
aad
inc
mov
mov
filds
sub
sbb
add
in
add
adc
lret
das
stos
stos
ret
mov
clc
pop
cmp
ljmp
add
cmp
mov
mov
and
add
gs
repz
pusha
jb
mov
hlt
sub
push
fistpll
mov
int3
jno
negl
cs
nop
orl
dec
dec
pop
inc
push
xor
adc
xchg
mov
sub
mov
daa
jg
or
popf
lcall
add
and
jmp
mov
icebp
push
push
xchg
lret
pop
xor
sti
adc
shl
add
popa
and
js
int3
outsl
pop
loope
in
xchg
mov
addb
into
lahf
jo
xchg
mov
xor
mov
insl
xchg
adc
sbb
push
mov
sbbl
je
andb
dec
clc
cmc
sbb
cmp
sub
fidivl
daa
dec
adc
imul
jbe
jnp
mov
xchg
and
and
popa
mov
push
mov
pop
shll
pop
ret
pop
or
lock
mov
es
pop
or
jp
lcall
cmc
xor
testb
jge
repnz
push
jnp
jge
pushf
scas
xchg
int3
push
jp
in
sbb
push
mov
movsb
cmpl
sub
mov
cmp
mov
xchg
adc
fisubs
test
xchg
aaa
mov
ficomps
shlb
jle
loopne
sub
inc
out
sbb
scas
jbe
sbb
cli
sbb
push
add
push
stc
test
xor
shrl
dec
incb
int
add
cmp
add
xor
lods
adc
ss
out
popa
cmc
adc
lock
aam
jle
sbb
icebp
mull
iret
test
xor
inc
test
ds
mov
xorl
xchg
or
mov
imul
stos
mov
jnp
fcomps
inc
sub
aas
pop
xor
adc
imul
or
mov
adc
sub
mov
mov
jmp
rolb
mov
jg
call
cwtl
pop
mov
xor
ret
das
mov
mov
xchg
cs
xor
add
dec
or
sahf
cmp
aaa
mov
xchg
add
jecxz
push
jbe
aad
mov
xchg
iret
lods
pop
jmp
and
gs
shl
popf
movb
icebp
or
lods
cmp
sbb
addr16
xor
imul
and
cmpl
rcrl
cltd
jl
sub
inc
and
stc
in
loop
push
mov
jle
ja
dec
adc
and
aas
add
cmp
xlat
inc
inc
shrb
sub
or
fistpll
cwtl
movsl
into
orl
xchg
push
pop
mov
ljmp
jmp
ja
fsubrl
cmp
sahf
xor
addr16
stos
jg
xchg
ret
sbb
inc
hlt
pusha
jb
repz
fisttpll
dec
adcl
cmp
pop
loopne
imul
out
cmp
loopne
mov
lret
int3
jmp
cmpsb
mov
dec
or
imul
and
leave
xchg
lahf
mov
dec
xchg
adc
cli
les
lds
and
sahf
or
rcr
mov
negl
sbb
mov
lods
add
lock
aas
mov
or
xor
repnz
je
test
jecxz
imul
test
xchg
xor
adc
mov
loopne
sbb
loope
lea
jo
pop
jb
cld
stos
mov
fs
lds
push
call
pop
dec
aaa
and
mov
lret
add
addb
cmp
lds
loopne
aad
sti
or
test
mov
bound
lahf
push
sbbb
mov
xor
inc
pop
and
mov
pop
push
mov
push
mov
adc
lahf
les
push
push
inc
adc
mov
dec
int3
cs
mov
jecxz
and
cltd
imul
inc
out
add
push
inc
add
jle
movsb
add
jge
shll
fdivs
add
dec
loope
test
inc
adc
mov
sbb
inc
mov
mov
popa
fldenv
xorb
fiadds
jo
cltd
sub
lds
sbb
jl
adc
push
jmp
xchg
adc
cld
or
and
push
ja
loop
fldcw
push
add
push
add
les
push
sbb
jecxz
xor
push
ficoml
xchg
sub
push
into
sbb
stos
int3
cmpsl
fcoml
cmpl
inc
jecxz
add
loope
sbb
pushl
inc
daa
mov
pop
clc
rolb
pushf
call
adc
dec
xlat
cmpsl
sub
pop
scas
or
movsb
scas
xchg
cmpsb
sub
xor
cmp
sahf
inc
in
sarb
out
outsl
cmp
das
in
mov
test
loopne
mov
loope
repz
dec
or
cmc
xor
dec
stos
popa
fmuls
mov
sbb
push
push
mov
or
or
loopne
js
jl
sbb
addl
sub
roll
cmp
sbb
push
cmp
testl
sahf
out
test
xchg
mov
xchg
outsb
in
fwait
mov
sbbl
xchg
mov
imul
pop
sbb
add
faddp
mov
push
push
jb
dec
mov
inc
mov
pop
mov
sub
sub
movsl
mov
inc
add
push
adc
loop
sti
mov
xor
fimuls
dec
sub
stc
fiaddl
fadds
sbb
add
in
notl
incl
mov
cmpsl
aam
mov
stos
cmp
jo
jg
inc
scas
popa
mov
cmpl
aaa
cmp
jnp
cmc
pop
in
mov
xchg
add
xor
mov
sub
add
or
jno
fiaddl
repnz
adc
sbb
and
orl
adc
dec
std
andl
les
shll
mov
in
and
push
jecxz
xchg
mov
out
jno
xchg
mov
dec
addl
sbb
je
mov
and
push
jl
loopne
pop
dec
push
aad
adc
addb
sbbl
pop
sub
rcrb
cmp
push
lcall
pop
xor
jbe
sub
inc
fcomps
cmp
jbe
cmp
xchg
mov
aad
inc
je
psubw
cmp
or
je
loopne
cmp
fsts
push
cmp
ja
add
adc
imul
dec
push
hlt
xchg
call
adc
push
jl
and
mov
or
addl
test
lahf
test
lds
lea
mov
test
lcall
stos
bound
rol
fnsave
adc
sub
movsl
iret
rolb
lahf
stos
mov
test
xlat
sub
call
andb
pusha
jge
call
stos
ja
xor
push
je
pop
jmp
mov
xchg
dec
orb
dec
xchg
push
lea
sbb
test
xchg
jno
mov
inc
add
scas
add
and
inc
mov
mov
or
xor
cmp
add
add
xchg
mov
subl
jbe
sub
outsb
sub
dec
mov
push
mov
enter
aad
scas
sbb
push
jnp
pop
sub
int3
xor
or
loope
mov
and
and
cwtl
mov
loope
fistps
stc
xchg
pusha
pand
mov
mov
mov
leave
mov
outsb
ljmp
daa
loopne
ret
add
add
jae
push
pop
loopne
ret
outsl
pop
inc
xchg
sub
jecxz
insl
nop
lahf
aad
jg
sarb
js
lock
inc
pusha
push
mov
sub
daa
xor
jo
ds
ds
int3
pop
rclb
jne
jge
repnz
pop
push
rorl
call
cmc
cmp
je
pop
push
pop
adc
push
xchg
and
push
xchg
mov
cmp
stos
sbbl
or
sbb
nop
cwtl
push
lea
push
xor
push
in
adc
cmp
push
dec
jle
roll
pop
sbb
inc
cmpsb
and
in
lock
pop
inc
lock
pop
je
in
adc
push
bound
sbb
scas
or
jp
ljmp
aad
mov
jne
sbb
add
repz
sbb
jge
mov
mov
cmp
lds
movsl
inc
sub
jne
idivb
xchg
fldcw
pop
inc
arpl
push
sub
das
sbb
cld
ror
adc
or
mov
aam
mov
push
add
jae
xchg
fnstenv
mov
lods
mov
sti
lcall
fimuls
scas
clc
jns
clc
push
xor
xor
or
lcall
or
test
sbbb
mov
adc
icebp
lcall
jl
adc
mov
call
or
jp
xlat
xchg
mov
xchg
mov
loopne
lods
add
stos
xlat
mov
or
cmpsl
xchg
pop
sarl
and
or
inc
pop
adc
testl
xor
add
xor
jnp
call
das
sbb
mov
testb
fmull
mov
test
xchg
cmp
outsl
push
imul
sub
fildll
nop
xchg
fcmovu
loope
outsl
orl
jno
lahf
lea
loop
orl
cltd
pop
clc
je
mov
add
mov
mov
sub
xchg
push
in
add
sbb
add
rcrl
mov
jb
pushf
imul
js
mov
or
push
pop
add
orl
cmp
sti
jno
jg
mov
subl
sbb
je
sub
jg
dec
mov
sbb
fs
or
lds
hlt
sub
adc
test
shl
dec
push
loope
xchg
jo
and
sbb
push
loope
push
outsl
add
jp
das
xchg
xlat
mov
mov
je
mov
dec
mov
stos
mov
subb
lea
sbb
xchg
push
daa
pop
iret
dec
push
lret
loope
and
sbb
jle
sbb
into
add
jne
les
movsl
mov
sbb
pusha
or
test
hlt
lock
mov
test
mov
push
test
loopne
inc
test
mov
and
lea
out
sahf
rep
mov
mov
leave
call
or
popf
and
pop
cmp
imul
or
mov
sub
push
sbb
sbb
dec
adc
or
mov
sbb
mov
lock
cmpsb
dec
and
mov
or
clc
lahf
push
jl
fld
xor
js
fisttpll
xchg
mov
or
dec
xor
cmovs
les
nop
fsubs
dec
add
lds
dec
mov
sub
sub
xor
les
adc
pop
push
pop
lea
pop
and
je
adc
add
stos
add
mov
adc
lahf
lea
push
or
mov
gs
push
xor
out
inc
dec
jge
and
xchg
movl
add
mov
roll
adc
inc
cltd
xchg
and
sub
stos
jge
cli
pop
mov
or
stos
mov
adc
aad
iret
popa
rclb
daa
sti
shl
and
inc
add
es
mov
push
hlt
out
inc
jl
or
inc
mov
mov
or
sbb
outsl
adc
popa
out
xchg
sbb
fsubs
movsl
test
sbb
cs
inc
loope
cmp
fisttps
push
pop
or
adc
jge
pop
popa
je
aaa
nopl
aaa
rclb
inc
leave
jne
call
adc
fcmovnbe
mov
fmuls
push
jo
jl
or
jne
adcb
pop
das
movsb
ljmp
fiaddl
in
add
pop
mov
mov
mov
sbb
add
fdivrl
inc
and
test
sbb
cmovle
cmp
inc
sti
xchg
hlt
ja
cs
mov
shrl
add
push
stos
ret
loopne
jmp
int
adc
fildll
sbb
push
sub
in
jno
jno
or
test
push
mov
xchg
ja
jne
in
jmp
pop
fcoml
push
and
lret
mov
cmpsl
inc
lahf
mov
jbe
js
bound
sub
jo
loope
xchg
lcall
mov
mov
out
fisubrs
sub
jbe
sbb
cmpsl
pop
test
flds
fcomp
inc
jl
es
scas
lret
sub
add
fimull
fs
repnz
dec
jge
mov
sbb
test
fbld
loop
sub
xchg
ja
loop
sbb
or
push
test
or
je
sub
aam
cs
icebp
xor
dec
dec
data16
jp
loop
pop
je
xchg
data16
xchg
data16
pop
xor
and
bts
inc
mov
ret
test
shl
sub
es
push
sub
arpl
loope
pop
insb
lods
dec
dec
cmp
mov
add
js
test
cmpl
xorl
and
dec
mov
mov
adc
adc
jl
mov
push
fcmovnb
mov
shl
sarb
push
jae
cwtl
mov
sub
roll
xchg
push
and
pop
pop
dec
xor
fwait
cmp
xor
repz
mov
inc
stos
ljmp
fcmovbe
ret
xor
push
inc
fucomi
mov
in
decl
jle
mov
or
jb
inc
push
cmp
pop
xchg
roll
cmove
mov
jp
loope
and
or
adc
pop
fistps
fnstcw
jge
stc
xchg
cld
addr16
outsl
into
rorb
fisubrl
add
mov
adc
inc
cmp
les
xor
push
inc
cld
add
push
or
dec
mov
jno
sbb
mov
cmp
sahf
lds
fisubrs
loopne
mov
shr
movsb
jmp
pop
add
dec
inc
sub
loopne
fbstp
cmpsl
sbb
in
mov
loopne
shr
jg
shrb
push
mov
ljmp
or
outsb
jmp
lcall
mov
add
sub
fnop
andb
pop
mov
inc
sub
int
adc
pop
test
inc
push
dec
arpl
cmp
sub
and
mov
mov
out
xchg
adc
mov
xor
cltd
test
imul
bound
sbb
enter
push
call
inc
cld
sbb
or
orl
leave
xchg
jno
mov
xchg
mov
les
mov
or
in
scas
jo
cmpsl
push
cmp
sub
mov
pop
pop
push
pushf
xchg
inc
jnp
shrb
jnp
rcrb
dec
mov
jl
xor
daa
xchg
cmpsl
xor
inc
push
and
or
iret
int3
jne
cld
bound
cmp
sub
sbbl
or
adc
add
negl
dec
pushf
add
data16
mov
scas
push
and
push
orl
pop
mov
lahf
xlat
xor
mov
dec
cmpsb
jmp
outsl
push
es
jmp
adc
pop
push
inc
loopne
leave
outsl
pop
mov
sbb
imul
adc
scas
dec
adc
push
in
jnp
push
jno
mov
ds
mov
and
push
in
repnz
popa
push
xchg
shl
sbb
enter
adc
jl
int
out
adc
inc
and
add
push
jne
dec
or
cmp
pusha
dec
mov
fmuls
or
adcl
fnstenv
and
dec
movsl
xchg
push
add
popa
ja
or
testl
inc
fstpt
xchg
imul
dec
pop
adc
sahf
and
test
inc
idivl
in
or
rolb
movsb
push
pop
lahf
cmp
lret
adc
lret
jo
shll
push
movsl
mov
xchg
loope
int
mov
xchg
xchg
cmp
shlb
jo
aad
icebp
sub
add
ljmp
push
cmc
or
loope
or
imul
jecxz
mov
pop
cwtl
mov
mov
pop
sub
mov
lea
xchg
bound
test
xchg
sbb
repnz
stos
fwait
jns
mov
xor
enter
movsl
inc
sub
stos
xlat
les
jge
data16
xor
pop
pop
mov
jae
shl
add
pusha
pop
add
test
mov
test
xchg
inc
ret
pusha
stos
inc
fsubrl
je
mov
mov
icebp
pop
dec
andb
xchg
jb
mov
or
mov
add
sub
cmc
out
dec
or
or
adc
and
sti
adc
mov
cmp
test
in
jb
push
fistps
xor
cmp
in
push
das
jne
pop
pop
dec
mov
add
adc
fsubp
sub
je
in
lock
loope
stos
fidivl
pop
push
int
pop
clc
mov
push
adc
cld
scas
pop
push
xor
loopne
not
mov
fcomp
pop
xchg
lods
push
mov
arpl
icebp
sbb
or
inc
mov
das
lock
nop
cmpsl
pop
jno
pop
mov
adc
fidivs
popf
or
fsubrs
or
rcrl
mov
push
mov
sub
dec
sti
mov
jl
ficoml
jmp
sub
mov
and
push
pop
xchg
fadds
es
cmpb
adc
push
mov
xor
mov
inc
xor
add
jmpw
dec
sub
rolb
inc
stc
cmp
pop
mov
cmp
repnz
sahf
shll
adc
fcmovne
popa
rcrl
lods
loopne
adc
movsl
xor
or
sbb
mov
bound
mov
pusha
jle
into
fnstcw
xchg
je
push
cmp
push
ret
cltd
mov
cmpsb
xchg
repz
ja
fisttps
xchg
push
pop
add
rcrb
cmp
xchg
push
push
or
push
data16
andl
adc
fdivs
or
mov
xor
mov
pop
aam
add
sub
ja
xor
bound
xor
inc
xor
push
je
inc
test
inc
jbe
call
and
mov
xchg
pop
inc
fcos
int3
add
mov
xor
cmc
cmpsb
int
shrl
xchg
adc
mov
dec
in
stos
out
xchg
sub
sub
xor
xor
pop
movsb
rorl
xchg
pop
add
pop
test
cli
sub
xchg
cmp
cmp
cmp
mov
dec
or
jge
xchg
and
or
fs
call
mov
inc
pop
mov
cmpb
ret
int3
test
or
lods
xor
sbb
test
stos
adc
xchg
xor
push
pop
lret
mov
lds
cmc
or
int
xchg
in
iret
and
mov
cs
or
shrb
icebp
mov
push
lret
mov
mov
stc
ret
inc
adcb
inc
repz
pop
mov
adc
lcall
inc
into
arpl
cwtl
mov
or
loope
and
mov
repz
lock
jbe
dec
cmp
movsl
and
insb
mov
stos
arpl
movsb
mov
aad
mov
pop
cld
jne
out
add
cmp
push
addb
fmuls
xchg
xchg
push
jb
adcb
xor
arpl
lock
icebp
push
add
and
xchg
dec
pop
pop
cmp
push
jns
pusha
iret
mov
scas
or
pop
pop
adc
aad
jg
shll
outsl
sbb
mov
ljmp
pop
div
inc
inc
scas
push
inc
jns
sub
das
mov
xchg
jno
adc
iret
pop
fsubs
mov
mov
ficoml
les
add
sub
xchg
pusha
mov
inc
out
aaa
aam
add
adc
mov
imul
push
sbb
rorl
pop
mov
pop
jmp
repz
push
and
daa
test
nop
push
pop
mov
mov
mov
imul
sti
lahf
js
jo
mov
mov
in
int3
jmp
notb
push
jae
push
bound
ficoms
xor
push
jle
xchg
ja
and
push
ss
fstl
js
pop
jb
imull
and
xor
sbb
mov
push
in
mov
mov
fs
push
or
mov
sub
lcall
cli
mov
jg
imul
popf
push
subb
cltd
push
jnp
lret
pop
in
loopne
pop
sub
or
push
ret
inc
sub
mov
inc
jbe
sub
stc
out
sbb
adc
mov
dec
addr16
test
aam
sbb
xor
jle
mov
fstpl
cmpsl
adc
fldl
gs
xchg
dec
adc
cmpl
sbb
idivl
int
xchg
dec
mov
icebp
inc
rolb
pop
cmp
xchg
popl
aas
subl
and
push
ljmp
xchg
cltd
cmpsb
and
pusha
mov
loop
jle
jo
outsb
les
mov
test
push
or
inc
sbb
inc
aas
inc
xlat
xor
iret
bound
push
shrl
inc
lea
bound
lock
dec
inc
ret
scas
and
jecxz
outsb
add
pop
cmc
mov
in
sahf
pushf
push
popa
jle
test
xor
mov
sbb
mov
cmp
fdivr
js
in
push
test
mov
fiaddl
mov
sti
push
adc
call
jmp
jecxz
cli
insb
cmp
jae
lods
cmp
mov
jecxz
insb
js
rcr
je
add
cmp
push
aam
cld
ret
push
loope
mov
cwtl
mov
inc
int3
dec
nop
add
jmp
lcall
xchg
mov
jecxz
inc
aas
mov
xlat
add
sub
inc
sbb
adc
mov
or
xor
std
ror
sub
jge
out
movsl
xchg
pop
hlt
mov
mov
xlat
push
push
inc
sbb
aas
in
enter
inc
test
mov
or
pop
lea
sub
cmp
aam
fnstenv
or
pop
sbb
xor
and
shlb
add
adc
add
loope
and
jno
out
test
jnp
add
inc
daa
pusha
stos
imul
pop
xchg
fsubrs
js
xchg
out
pop
stos
pop
das
repnz
xchg
pop
lds
xor
sbb
rcll
jns
or
xchg
xchg
cwtl
inc
frstor
test
inc
xor
push
stc
jl
imul
sub
adc
inc
mov
sbb
push
adc
into
push
jle
push
push
loopne
xor
out
push
sbb
outsl
xor
inc
pusha
and
aaa
and
aam
inc
cmp
sub
and
je
xchg
inc
mov
push
xor
fnstenv
xchg
pop
sub
test
push
jl
jo
mov
push
loop
xchg
mov
std
xchg
mov
mov
mov
outsb
fdivr
cltd
jmp
sub
in
jns
xor
mov
je
mov
push
in
adc
je
xchg
inc
imul
jmp
shll
cmp
js
pop
je
daa
ljmp
out
push
and
lcall
cmp
mov
mov
add
scas
loopne
jo
inc
test
orl
sbb
inc
and
repz
cmpsb
sti
mov
fisubrs
jl
push
pop
cwtl
leave
test
mov
out
push
inc
ret
hlt
or
jns
lea
dec
inc
sbb
mov
loop
sub
loop
jle
test
sub
aam
lahf
mov
jne
pop
cli
sub
pop
jmp
bnd
loopne
enter
sub
dec
inc
adc
add
add
pushl
and
adc
nop
xchg
int3
add
shlb
add
mov
pop
mov
loopne
mov
add
add
fsubrs
mov
dec
bound
xchg
insb
push
das
or
out
sarb
or
inc
shl
sbb
cmp
xchg
test
repz
push
popa
push
xor
pop
cltd
daa
and
xor
push
adc
mov
cmpsl
lcall
sub
test
xchg
mov
pop
mov
adc
xchg
pushf
sub
mov
xchg
in
imul
dec
and
inc
or
lcall
add
sub
xor
pop
fadds
cmp
sbb
and
rolb
cltd
sub
hlt
mov
test
add
and
jle
pop
mov
jnp
push
addr16
sub
data16
mov
dec
cld
dec
stc
into
inc
lahf
dec
mov
rcl
pop
inc
ret
cmc
rcrl
das
int
pop
jl
icebp
mov
pop
pop
cmpb
xchg
add
cli
pop
das
ret
addl
and
insb
rolb
xchg
adc
mov
insb
in
xchg
add
test
mov
cmp
xor
lea
imul
adc
adc
or
or
pop
stos
add
repnz
push
out
enter
mov
push
popa
imulb
subb
add
mov
push
nop
out
nop
mov
inc
adc
and
or
adc
push
push
sbb
cwtl
and
mov
aaa
les
loope
movb
and
sbb
inc
mov
mov
xor
or
push
in
push
sbb
or
lods
mov
stos
scas
add
rolb
stc
or
and
cvttps2pi
sub
mov
das
cmpsb
ret
pusha
add
adc
jb
popf
mov
inc
clc
inc
es
int
cwtl
push
push
push
add
leave
enter
add
adc
test
push
jnp
jne
push
test
sub
adc
sbb
pop
cmp
scas
adc
in
dec
sub
movsl
jecxz
xor
stos
paddusw
jns
fsubr
adc
scas
mov
lret
scas
mov
pop
repz
xchg
in
in
out
pusha
sbb
push
cwtl
cltd
rcrb
jne
add
into
repz
jo
push
inc
or
adc
mov
pop
mov
mov
mov
mov
push
cli
adc
xlat
mov
rclb
inc
xor
inc
cs
adc
movsl
push
push
ja
bound
add
or
jno
mov
or
mov
andl
push
andl
xchg
or
fs
push
pop
loopne
push
sub
mov
sub
xchg
or
aaa
dec
inc
push
cmp
pop
emms
shl
adcb
xchg
mov
inc
sub
pop
dec
cli
dec
dec
cwtl
inc
in
inc
inc
xchg
adc
loop
rolb
sub
and
adc
adc
icebp
cmp
push
mov
insb
pop
inc
and
jo
imul
mov
push
mov
lcall
mov
sbb
hlt
sub
sbb
sub
es
movsb
int
cwtl
adc
sbb
testb
inc
subb
mov
inc
lods
jp
std
into
loope
xlat
push
js
addb
xchg
lret
fsubrs
jmp
daa
add
fmull
addl
rcrl
xor
fldl
or
or
cmp
fidivs
call
ja
sub
pop
lcall
and
sbb
push
or
shl
stos
jns
inc
jbe
imul
sahf
add
sti
insb
es
cmp
mov
or
subl
cs
js
pop
add
lock
popa
ss
sbb
cmp
jo
sbb
xchg
mov
adc
aaa
mov
pop
pop
cmp
je
dec
dec
jecxz
xor
mov
xor
int
add
xchg
fdivrl
sbb
cld
pusha
dec
inc
xor
adc
cwtl
and
in
cmpsl
dec
stos
cmp
fisubs
cmp
mov
dec
sub
enter
sbb
inc
cmc
mov
cmp
push
jge
add
pop
sub
adc
sub
cld
cwtl
out
cmp
sub
mov
loope
or
mull
cmp
mov
cwtl
push
das
sbb
lods
pop
inc
push
pop
sahf
pop
push
dec
mov
divb
push
push
add
loope
pushf
outsb
mov
lds
inc
or
shl
xor
mov
sub
sahf
insb
xchg
mov
cwtl
inc
int
cmp
cmc
sub
pusha
xor
mov
sbb
xchg
lea
dec
js
mov
mov
movl
ret
xlat
ljmp
mov
push
insl
xchg
xchg
dec
icebp
push
or
inc
pop
or
ljmp
jp
pop
pop
push
push
cmp
push
xlat
add
add
data16
andb
and
xchg
int3
jmp
dec
sub
daa
mov
or
aas
inc
aam
mov
out
stc
sbbb
in
inc
fists
adc
ds
adcb
mov
and
or
stos
fdivr
and
or
jecxz
mov
sub
inc
add
fucomp
jbe
cmpsl
jp
push
clc
sbb
and
sbb
jno
mov
xchg
xchg
daa
adc
ja
push
push
jecxz
sub
movsl
mov
mov
inc
xor
xor
shlb
mov
or
mov
jmp
pop
lret
pop
adc
xor
mov
lock
xor
int3
sub
and
test
and
rorb
out
or
push
adc
cmp
roll
xor
js
add
insl
dec
sbb
mov
cmp
dec
in
fs
dec
call
pop
fisubs
data16
or
push
mov
inc
imul
mov
push
js
push
les
mov
leave
pop
test
imul
push
cmpsb
repnz
mov
adcb
adc
cmp
mov
shll
mov
mov
inc
loop
push
mov
mov
je
adc
push
fwait
sbb
movsb
inc
push
cltd
adc
shll
xchg
aas
faddp
mov
sbb
or
sub
inc
xchg
lret
sbb
push
push
jns
xor
mov
jp
testb
xor
mov
les
stos
pop
js
clc
dec
daa
push
xchg
dec
mov
negl
cwtl
push
xor
icebp
sti
xchg
iret
pop
or
mov
cmp
test
shl
cmpsb
add
int3
notb
mov
rclb
dec
xchg
push
lret
xor
sbb
out
outsl
cs
adc
dec
loop
mov
enter
popa
testl
pop
fsubr
push
popa
popf
push
and
mov
sub
les
ja
jg
insb
fs
push
lds
xchg
push
insb
cltd
or
mov
inc
inc
lea
in
mov
inc
xchg
mov
push
jne
gs
clc
scas
or
xchg
push
add
xchg
sti
inc
imul
out
mov
insb
cmp
xchg
inc
push
xlat
aaa
jge
xor
les
gs
adc
or
rol
push
in
fiaddl
inc
sub
jo
xor
ja
loope
mov
fistpl
xor
outsb
and
xchg
clc
xchg
mov
mov
loope
and
loopne,pt
cmpb
mov
bound
testb
mov
xor
or
mov
pop
xlat
js
mov
jno
sbb
popf
test
cwtl
sub
cld
rolb
cld
stc
adc
test
js
or
mov
mov
jo
shll
clc
andl
and
jo
cmpsl
adc
lock
lock
clc
into
or
mov
cmp
fiadds
popa
scas
lret
cmp
stos
inc
test
popf
mov
cmp
sub
repnz
push
stc
adc
fsubrs
ss
scas
pop
shl
roll
adc
aam
or
xchg
in
iret
fimull
cmp
das
or
xchg
adc
mov
and
cs
jle
arpl
dec
dec
mov
inc
out
cmc
xor
sub
inc
notb
popf
dec
test
imul
mov
out
imul
call
push
frstor
outsl
clc
loopne
aaa
and
adc
pop
pushaw
push
aas
jns
mov
stc
push
cltd
mov
nop
aas
add
lods
ljmp
mov
fisubrs
xor
aaa
aam
mov
das
pop
outsb
clc
inc
fwait
and
or
or
imul
sbbl
dec
lret
xchg
push
jecxz
imul
adc
mov
dec
adc
loope,pn
ret
push
adc
pusha
outsl
sbb
ljmp
mov
icebp
lock
jbe
or
stos
jno
fists
mov
cmpsb
jnp
out
mov
xor
adc
adc
add
sbb
or
loope
lea
push
jae
sbb
mov
out
add
cmp
addb
or
lret
cmp
js
cmp
add
add
jl
cli
push
adc
fisubrl
push
add
lret
sahf
push
jns
fwait
hlt
loop
ret
adc
rclb
fistl
push
les
mov
roll
xchg
dec
inc
and
jg
fnstenv
mov
or
cli
insl
mov
xchg
nop
fistpll
jns
cmp
push
pop
in
mov
cli
jne
and
lea
fimuls
jne
xchg
inc
add
or
jl
fbld
nop
mov
int
fs
sbb
enter
adc
outsl
cmpsl
repnz
mov
push
xchg
rcrl
shll
push
cld
mov
sahf
aad
aaa
inc
jmp
push
mov
movl
nop
icebp
xchg
in
inc
dec
aas
push
sub
aad
stos
adc
pop
cmp
jg
sbb
push
dec
inc
sub
xchg
lret
mov
pop
xchg
sbb
fsts
push
mov
or
mov
xchg
or
push
jo
testl
aaa
ss
sbb
adc
xchg
jb
pushf
adc
mov
xchg
loopne
mov
xor
mov
add
mov
cmp
xor
ds
cmp
addl
scas
imul
mov
dec
mov
cmp
add
push
or
jbe
sbbl
je
call
push
push
xchg
xor
test
sub
and
xchg
adc
sub
andl
sub
ret
outsl
or
pop
inc
xor
jae
cwtl
cs
aaa
mov
jecxz
xchg
or
cltd
mov
cmpsl
test
push
fistl
or
dec
cld
aas
dec
aas
add
stos
adc
icebp
mov
jnp
je
adc
cmpsb
les
dec
xor
dec
add
adc
pop
jecxz
inc
lock
pusha
dec
sbb
test
daa
xchg
fcmovnb
sahf
jb
pop
mull
cmp
lock
js
dec
sub
or
cs
jp
std
mov
dec
test
js
pop
movsl
add
mov
push
mov
cmp
stos
cmpsl
lahf
ja
fcmovb
or
sarl
xor
orl
ss
ljmp
mov
js
imul
ret
insl
popf
std
mov
inc
fstps
push
fnsave
jmp
or
xor
or
xchg
mov
sahf
test
iret
cmp
clc
rcl
stos
add
loope
scas
ficoml
test
cmpl
es
push
ret
psllq
enter
pop
iret
adc
stos
inc
sbb
dec
xchg
push
xor
cwtl
sub
iret
or
lcall
mov
loopne
push
pop
popa
add
mov
bound
shlb
pop
jo
push
inc
adc
ret
popf
dec
pop
dec
jp
pop
push
ss
sub
cltd
in
xchg
dec
out
fucom
or
mov
inc
push
pop
add
jp
loop
out
stos
push
fwait
imul
lcall
insl
cmp
inc
daa
lret
inc
ret
test
repnz
mov
test
cmp
bound
jne
nop
sarb
ficompl
jbe
push
dec
inc
ja
adc
xor
insb
fiaddl
sub
test
sbb
xor
lock
sbb
call
sbb
push
pop
mov
sahf
repz
cmp
inc
les
or
add
jb
jg
popf
mov
imul
sbbl
iret
push
dec
pop
dec
dec
in
mov
xchg
mov
sub
add
pop
cmpsl
xor
adc
arpl
push
je
nop
cmpsb
add
outsb
ret
cmpsl
arpl
js
mov
sti
mov
aas
out
cmp
sahf
pop
push
sbb
mov
sbb
dec
imul
adc
ja
loopne
lds
pop
and
cmp
rclb
jl
lret
repz
or
and
mov
cmp
and
popf
and
cmp
popf
dec
add
push
sub
mov
test
or
sbb
jnp
pop
mov
js
movswl
mov
jne
lret
je
orl
pop
pop
sbb
sub
mov
rolb
data16
push
jl
dec
inc
orl
xchg
dec
cmc
cli
loop
popf
jbe
bound
lahf
pop
jne
loopne
insb
lahf
mov
fcom
clc
aad
push
int
jg
mov
sbb
sub
or
test
lret
lcall
inc
loopne
nop
pop
mov
jecxz
lods
pop
or
pop
in
adcl
mov
push
pop
daa
icebp
das
sti
push
jns
test
in
and
sub
add
or
and
add
cmp
dec
arpl
or
aad
fxch
xor
pop
jmp
cmpsb
and
push
mov
roll
jle
aas
inc
push
pop
aas
push
cmp
das
cmp
rcrl
test
lret
iret
pop
cmp
jg
and
rorl
es
push
inc
add
repnz
test
pop
add
adcb
pop
add
daa
inc
mov
adc
mov
jecxz
push
jmp
fadds
ret
mov
fwait
loopne
xor
pop
fincstp
movsl
incl
fldl
push
inc
mov
jg
ja
lods
adc
mov
mov
mov
adc
arpl
hlt
daa
loope
jle
mov
stc
mov
pushf
into
add
test
dec
xorb
mov
loop
out
out
mov
add
inc
mov
outsb
sub
ret
inc
push
jb
rol
xchg
into
dec
imul
adc
lds
jne
xorl
mov
xchg
into
push
push
pop
jl
or
test
adc
loope
dec
mov
dec
mov
sbbb
cmpsl
out
ficoms
movl
jge
xchg
push
int3
jle
out
push
adc
add
add
jecxz
jg
adc
dec
xchg
cmp
lret
ja
xchg
les
repz
push
xor
ret
push
js
dec
mov
sbbb
scas
jae
jge
ret
in
es
adc
inc
mov
and
xchg
mov
dec
inc
mov
aas
int3
call
fildl
flds
and
xor
mov
inc
loopne
cmp
daa
sbb
fstl
cmp
adc
inc
sbb
and
roll
mov
lods
mov
fcompl
popa
outsb
std
orb
and
or
mov
push
inc
pop
int
test
fiaddl
mov
stos
aaa
dec
push
cld
aam
clc
push
jne
icebp
in
add
mov
flds
dec
pop
ljmp
adc
xor
dec
in
repz
call
pop
sbb
xchg
xor
sbb
pop
and
push
jne
push
sahf
mov
lds
iret
nop
inc
dec
xlat
notb
push
rcr
dec
lret
sub
pop
pop
orl
das
test
call
or
outsb
sbb
jl
and
cmpsb
sahf
icebp
dec
xchg
pop
cwtl
inc
icebp
inc
imul
addr16
std
rcll
xor
enter
push
adc
negb
sub
and
adc
cltd
mov
mov
loope
cs
xchg
mull
sub
icebp
sbb
or
mov
xor
sub
fwait
mov
cmp
adc
push
sahf
pop
adc
out
dec
mov
das
js
sub
scas
mov
outsl
cld
cmc
addr16
xchg
mov
cmp
adc
movsb
pop
mov
and
pusha
stc
mov
or
mov
inc
stos
jo
pushf
adc
sbbb
mov
jne
pop
hlt
push
orl
xor
sbb
rorb
call
sbb
lods
xor
pop
pop
xchg
cltd
fsts
js
sahf
rcrl
xchg
adc
push
out
dec
sub
sahf
xor
shll
pop
xchg
mov
pop
mov
out
push
arpl
bound
addb
sbb
dec
mov
mov
les
jae
dec
xor
scas
mov
sub
mov
sub
stos
cmpsb
cmp
outsl
push
jmp
xor
or
ret
xor
inc
loop
loopne
xor
lods
sbbl
xor
push
xor
mov
mov
adc
or
push
mov
dec
imul
inc
pop
loope
fistpl
js
add
iret
mov
inc
add
popf
or
add
movsb
mov
add
pop
movsl
xor
push
add
jo
inc
lahf
pop
xor
inc
popf
jl
cmp
push
cli
adc
add
or
insb
add
mov
bound
xor
mov
shl
out
or
mov
sub
pop
int
sahf
dec
push
lock
out
mov
xchg
push
int
adc
nop
dec
je
insb
rcrb
xchg
jns
push
cmp
out
cmp
jmp
shlb
jp
sbb
cmpsb
or
subl
aam
loope
cmpsb
aaa
sbb
xchg
pop
test
addb
fimull
es
xchg
daa
stos
stc
shll
jmp
sub
fcmovbe
cltd
subl
icebp
push
push
lahf
push
les
adc
popa
cwtl
xchg
inc
das
mov
pop
daa
roll
fdivrl
xor
add
and
or
leavew
xchg
pop
pusha
mov
xor
xchg
int
and
push
cli
sub
dec
out
cmpsb
sbb
inc
lcall
test
push
inc
je
push
xlat
in
cmpsb
test
test
lea
mov
dec
sbb
jecxz
ret
jl
add
sub
add
fisubrl
rolb
or
mov
or
dec
xor
adc
mov
sahf
add
lods
inc
push
stc
xchg
sub
out
enter
inc
inc
movsl
xor
jne
in
icebp
ss
test
mov
insl
dec
dec
sbb
or
in
loopne
imul
jb
je
sti
cmp
and
push
add
fsubs
mov
jmp
pop
cmp
sub
negl
add
pop
es
jp
dec
and
cmp
orb
push
fnstsw
ficoms
out
es
jmp
scas
mov
inc
xor
xchg
cltd
stos
in
push
mov
jecxz
jae
lods
paddd
push
cwtl
and
arpl
adc
mov
test
push
inc
arpl
daa
div
sbb
cmp
popf
jno
ja
popa
and
scas
sub
push
pop
mov
xchg
out
inc
sbb
mov
mov
sub
shrl
lahf
shlb
jmp
jmp
cmp
adc
adcb
or
or
addl
rolb
jae
lcall
test
jecxz
adc
inc
movl
mov
add
add
gs
and
lods
into
add
adc
mov
dec
cltd
pop
or
xorb
push
insl
pop
and
int3
or
pavgw
inc
adcb
rcl
sahf
cmp
ljmp
sbb
cmp
out
push
imul
insl
sub
addb
push
hlt
sbb
stc
xchg
dec
icebp
ja
jl
pop
lods
push
cli
mov
repz
cmp
push
sbb
inc
or
push
loopne
inc
jge
imul
mov
jns
adc
dec
mov
push
or
cld
jl
js
mov
pop
dec
cmp
add
iret
hlt
mov
push
test
aaa
and
adcb
xchg
pushf
xor
jno
jo
inc
imul
cmp
push
adc
data16
jnp
clc
test
push
ret
jp
add
in
adc
nop
out
cmp
sub
mov
mov
add
cmp
inc
or
mov
lret
stc
inc
movsb
inc
xor
xlat
add
push
rcrb
add
pusha
test
cmp
into
out
ss
jae
push
pop
ret
sti
jnp
adc
punpcklbw
call
push
ss
out
and
sbb
lahf
lret
jae
mov
mov
test
outsl
ret
push
dec
inc
pushf
and
mov
adc
stos
clc
cmp
idivb
and
add
sarb
mov
push
jecxz
lcall
mov
mov
mov
into
add
inc
sbb
lcall
icebp
roll
fcoms
mov
pop
in
mov
xor
xchg
push
inc
mov
imul
inc
pop
lock
pop
sub
inc
xchg
mov
mov
mov
push
je
pushf
dec
sbb
adc
lods
and
or
jno
cltd
and
repz
ret
push
sub
cmp
jle
popf
cltd
test
dec
seto
mov
out
aaa
in
sbb
and
pop
loop
dec
jno
and
jne
aad
or
xchg
ret
test
xchg
push
popa
or
jl
ss
dec
mov
icebp
dec
add
dec
xor
ja
fmuls
push
and
into
pop
jg
lock
fldenv
and
xchg
xchg
ret
xchg
js
fstl
pop
stc
xchg
mov
mov
add
push
mov
adc
xor
es
scas
mov
sbb
mov
das
xchg
in
cmpsb
fstpt
cmpsb
cmp
adc
push
pop
ss
out
mov
lods
rcrb
rcrl
jle
test
xor
popa
sbb
pusha
orb
loopne
mov
push
mov
xor
mov
pusha
dec
decb
and
pop
and
xor
add
loop
xor
test
add
xchg
jp
scas
mov
outsb
or
or
inc
push
divl
xor
push
out
xlat
jae
pop
das
cmp
jp
movsl
dec
add
je
mov
das
add
dec
jmp
iret
es
dec
scas
add
mov
push
packsswb
imul
adc
pop
notl
das
lods
out
dec
stos
jno
cli
adc
gs
gs
dec
and
pop
mov
nop
mov
stc
jo
xlat
bound
ds
std
ss
mov
inc
add
sbb
push
mov
int
or
push
sub
loopne
sarl
fiaddl
inc
lahf
dec
mov
cs
dec
push
sahf
loopne,pt
je
xchg
pop
cltd
sub
xor
out
rcl
fadds
jnp
ja
mov
sub
inc
subb
scas
and
xor
mov
add
rcl
jl
scas
test
sar
inc
or
pop
mov
mov
jge
inc
pop
mov
rolb
jnp
sbbb
rorl
sbb
aad
sub
sub
cmpl
push
sbb
push
and
add
mov
mov
mov
test
adc
les
dec
ret
sarl
and
jns
and
lret
stos
push
sbb
cmp
pusha
sub
pop
sti
adc
mov
in
ja
xchg
loop
cmp
or
fldcw
stos
dec
cld
jp
or
arpl
ljmp
movsl
shlb
and
xchg
enter
cmp
inc
adc
mov
pop
loopne,pn
test
or
dec
and
jno
sub
imul
and
xchg
pop
ret
mov
ret
mov
push
test
jo
addr16
fistpll
icebp
sub
sbb
andb
mov
cmpsl
out
adc
jl
dec
cs
icebp
cmp
nop
sub
adc
cwtl
dec
lgs
jae
inc
daa
xlat
rcll
out
push
jmp
and
dec
mov
enter
scas
sbb
and
cmc
mov
mov
insl
orb
pop
sub
in
mov
dec
clc
fdivs
clc
cmpsl
test
add
jp
add
jle
je
xor
adc
mov
mov
std
or
mov
dec
in
mov
test
cmp
mov
lcall
lods
stos
arpl
scas
push
jmp
cld
lret
mov
shrl
out
xchg
mov
inc
mov
push
pop
arpl
test
xlat
ret
lahf
ret
fistpl
pop
or
xchg
sub
fldl
xchg
jp
rolb
dec
mov
inc
or
jb
mov
inc
pushf
mov
jnp
inc
xchg
mov
pop
inc
cli
cltd
jb
scas
insl
jo
pusha
loope
repnz
dec
add
dec
jno
lea
cmpsl
rorl
sarb
mov
inc
flds
push
stos
scas
int3
mov
subb
mov
cli
adc
mov
dec
jp
jne
and
cltd
and
mov
fs
push
loopne
lods
in
or
sub
or
ret
data16
dec
outsb
sub
mov
mov
add
jp
jbe
add
int3
mov
adc
call
xchg
mov
add
cmp
hlt
mov
inc
dec
repz
add
imul
das
cmp
sbbl
push
mov
mov
clc
xor
cmc
pop
xorl
gs
test
aam
mov
popa
mov
sbb
loope
test
xor
rolb
and
pop
flds
iret
pop
daa
inc
mov
icebp
rorb
xchg
push
or
mov
jmp
xchg
jo
add
mov
leave
mov
lahf
and
in
rcll
clc
mov
mov
xor
and
int
out
inc
call
mov
lods
mov
fdivrl
push
pop
hlt
in
push
mov
hlt
ret
mov
mov
add
or
mov
or
or
cli
insl
mov
ja
mov
lahf
add
adc
adc
pop
cs
cmp
ss
sahf
mov
aaa
jge
jle
scas
xor
mov
ss
ds
cld
incl
icebp
xchg
fdiv
jecxz
inc
mov
clc
mov
mov
mov
or
jl
rorb
xor
mov
adc
clc
jp
test
ja
enter
pop
lea
std
addr16
rolb
adc
mov
outsb
stos
scas
pop
xchg
sbb
jge
dec
loopne
not
xor
add
clc
xor
jae
push
cmpsb
mov
mov
mov
lcall
popa
inc
push
cmp
mov
add
or
cs
lahf
pop
lock
jne
pop
in
xor
enter
or
aad
in
dec
loopne
push
push
in
or
hlt
jmp
cmp
divl
add
shlb
xlat
dec
pop
dec
iret
icebp
mov
lahf
pop
mov
or
iret
ljmp
cld
pandn
sbb
repnz
les
int
inc
mov
or
ret
sbb
imul
aas
test
push
mov
mov
inc
js
mov
popf
mov
pop
push
pop
cmp
adc
andps
ret
addr16
pop
test
arpl
loopne
add
lret
scas
push
pop
mov
dec
inc
and
add
pop
sbb
xchg
shlb
mov
loopne
test
mov
sub
sub
jge
mov
pop
or
loop
xchg
mov
or
loopne
push
mov
ljmp
dec
cmp
adc
mov
dec
lcall
inc
jmp
js
ja
mov
xchg
shrb
push
jle
xor
sbb
test
lret
out
mov
push
and
jo
and
scas
sbb
pop
fs
loope
enter
sbb
icebp
roll
cld
lods
jmp
jg
xchg
cmpsl
sub
and
dec
scas
repnz
loope
add
scas
inc
sbb
aam
jae
mov
das
fwait
rcll
fidivs
adc
dec
mov
jb
xor
fldenv
adc
scas
xchg
mov
and
inc
xchg
stos
mov
sbb
inc
mov
cs
lods
pusha
push
sbb
mov
mov
mov
add
jno
lds
imul
xlat
dec
jge
sbb
nop
add
and
sarb
mov
loope
ljmp
push
adc
negl
pop
or
das
popa
adc
mov
sahf
cmp
xchg
loope
shrl
sub
adc
jl
mov
mov
mov
or
rcl
xlat
push
xchg
pop
add
test
mov
pop
or
xor
and
sbb
rolb
ss
scas
add
add
hlt
xchg
mov
xchg
and
call
mov
out
test
and
mov
cmp
dec
jb
and
adc
icebp
adc
push
arpl
icebp
adcb
mov
add
fimull
add
cmp
sahf
add
jo
jp
inc
outsb
sbb
mov
lock
push
push
cmc
rorb
xor
repnz
pop
sbb
cmpsb
out
add
cmpsb
ret
jl
fmull
adc
aad
xor
data16
shr
and
push
lock
pop
xor
push
addr16
in
repz
dec
mov
push
sbb
enter
push
gs
ljmp
or
loopne
adc
xchg
jno
lock
lret
popf
dec
or
call
fldenv
bound
add
sub
ret
mov
push
shll
mov
push
sub
movsb
call
add
idivl
or
push
and
and
and
scas
ljmp
fldt
cltd
aaa
ret
jl
je
add
cli
incl
mov
out
btr
icebp
sbb
iret
add
push
push
cmp
push
mov
pop
add
jbe
xchg
bound
rcrb
mov
dec
xchg
repz
lea
jecxz
add
and
jno
cli
or
movsb
leave
jbe
inc
jg
daa
loop
lea
pop
insl
push
xchg
orb
mov
mov
push
jge
push
sub
and
loopne
jmp
mov
sbb
adc
fisttpl
lret
stc
xor
jne
jnp
and
mov
mov
or
call
xchg
fstpl
dec
fnstsw
mov
push
mov
fsubs
mov
roll
push
clc
xor
inc
sahf
or
cmp
imul
push
push
fs
jno
imul
fimull
and
fidivrl
add
out
fcmovu
addr16
cmpsb
arpl
dec
dec
mov
mov
inc
pusha
fst
out
jle
scas
pmaddwd
std
es
hlt
mov
jecxz
popa
testb
cmp
mov
inc
or
mov
sahf
aaa
adc
fidivrs
jmp
sbb
add
aas
jno
ss
add
push
nop
dec
int3
pop
pop
jecxz
push
ljmp
call
cmpsb
push
outsl
push
pop
fwait
scas
sti
inc
into
call
out
pop
sub
mov
inc
cltd
cmp
pop
into
out
inc
mov
cmp
js
mov
inc
xchg
js
out
xor
outsb
cwtl
aam
cltd
or
mov
adc
enter
nopl
outsb
lcall
jle
xchg
scas
mov
push
inc
xor
out
jns
sar
lea
stos
jno
pushf
fisttpl
mov
and
sub
shlb
mov
scas
push
fildl
mov
mov
lods
mov
sbb
cmp
xor
popa
and
incl
sbb
mov
sub
pop
pop
xorb
dec
lods
mov
ficoml
push
gs
in
stos
lret
popf
in
xlat
mov
outsl
pop
nop
add
push
fldcw
daa
sbb
outsl
push
push
mov
repz
or
movsl
inc
stos
orl
out
push
sub
loope
xchg
lret
and
pop
push
shll
in
shlb
roll
clc
inc
aaa
xor
adc
fcmovb
inc
in
ret
sbb
nop
dec
mulb
add
mov
mov
loop
push
gs
sub
mov
jle
sub
xlat
sub
lds
add
or
or
cmp
fs
scas
je
and
jnp
dec
or
ret
or
jp
mov
js
test
dec
jp
inc
jno
adc
dec
das
into
popf
add
in
pop
jge
mov
sbbb
add
out
inc
roll
lret
test
pusha
pop
mov
ds
dec
or
cwtl
mov
push
repnz
dec
inc
and
pop
pop
or
cmp
js
out
mov
jne,pn
sarl
push
pushf
pop
lcall
fs
xchg
psllw
push
subb
sbb
inc
xor
test
leave
js
adc
cltd
push
shlb
inc
mov
movsl
fidivl
jno
test
xor
fsubp
or
stos
out
popaw
shlb
arpl
lds
scas
adc
ds
dec
gs
jmp
mov
loop
gs
loop
orb
rorl
pop
sbb
cmpsb
call
stos
movsl
js
mov
ljmp
add
nop
call
mov
loope
adc
mov
or
setl
mov
mov
aas
test
fiaddl
rol
push
push
sbb
rclb
dec
and
push
insb
cmc
adc
mov
lds
push
mov
xor
push
or
add
cs
lret
test
sbb
or
dec
hlt
jecxz
pusha
int3
mov
push
add
vxorps
xchg
sbb
cwtl
mov
sub
mov
movl
mov
sub
ret
fwait
jno
in
add
xchg
lock
xlat
dec
jno
mov
shll
mov
jo
mov
daa
in
lret
add
imul
push
sbb
movsl
mov
mov
cmp
nop
inc
sbb
lret
inc
cmp
aas
mov
bound
js
lds
shll
and
add
stos
xchg
xlat
outsl
push
scas
sbb
dec
repnz
or
jl
pop
insb
sub
cli
dec
or
push
cmc
add
mov
mov
xor
das
inc
jecxz
jno
in
xlat
push
aam
lcall
bswap
cmp
jp
cmp
pop
daa
ss
xchg
lcall
cmpsb
and
lahf
lea
pop
dec
rclb
mov
push
addr16
movsb
loope
or
add
mov
cmp
sub
dec
out
outsl
cmc
xor
push
mov
dec
adc
dec
mov
mov
ds
xchg
jne
lds
jp
or
xor
xchg
fwait
push
cmpsl
cwtl
mov
js
mov
fwait
lock
mov
adc
mov
xchg
fistpll
outsb
jmp
xorb
adc
xor
cwtl
lods
in
imul
loope
jnp
and
les
or
loop
loopne
test
jl
xchg
int3
test
mov
push
dec
pusha
pop
pop
xor
and
inc
push
js
rcr
push
adc
test
cmpl
xlat
outsl
scas
dec
pop
push
hlt
cmpsl
sbb
bound
or
pop
icebp
add
and
jno
int
push
dec
icebp
ret
ds
and
push
sarl
push
add
inc
pop
lods
cmp
fsubr
inc
pop
lea
mov
lods
mov
push
orb
popl
mov
mov
jno
or
mov
mov
es
pop
cwtl
dec
fistps
lods
insb
pop
or
cwtl
inc
loope
in
or
inc
push
sub
inc
sub
scas
test
inc
addb
add
hlt
inc
bound
jmp
adc
dec
pop
pop
jne
nop
test
or
mov
dec
jae
dec
inc
loopne
icebp
test
fists
aam
mov
call
mov
pop
and
cmpsb
cltd
inc
mov
and
aas
in
fwait
nop
jmp
data16
bound
add
pop
cltd
cmp
add
sbb
ret
lds
jae
stc
in
and
in
inc
cli
lods
mov
das
in
daa
decb
add
test
adc
mov
xchg
jp
cmp
inc
imul
sub
in
or
push
push
xor
cli
push
mov
rorl
push
in
jl
and
sub
push
mov
into
insl
repz
mov
xchg
js
sbb
xchg
mov
pushf
adc
and
cltd
lret
imul
aaa
and
test
cli
leave
pop
adc
adc
notl
xor
cmc
mov
cwtl
xor
call
out
pop
nop
out
mov
js
mov
subb
dec
stos
rcrl
clc
xor
incl
movsl
mov
sti
stc
lds
mov
adc
shrl
lahf
imul
mov
lock
xor
adc
mov
arpl
lds
test
inc
cmp
lret
daa
and
insb
push
fwait
or
cmc
sub
lds
lods
cmovo
test
aaa
call
cmp
adc
pop
test
jecxz
mov
fmul
inc
daa
std
xchg
mov
jg
adc
out
jl
out
cs
adc
scas
push
je
std
aaa
xor
jbe
adc
pop
aas
loope
cmpsb
sub
call
adc
and
lock
jmp
loop
ja
mov
mov
pop
push
seto
in
inc
xor
popf
xchg
ljmp
bound
rcll
add
xor
mov
negl
call
fists
inc
mov
mov
ljmp
cld
dec
mov
xchg
and
dec
and
out
scas
push
or
cmp
sub
iret
inc
outsb
out
or
adc
clc
imul
xchg
mov
fiadds
cmpsl
outsl
inc
push
jle
data16
loopne
sub
push
inc
in
neg
inc
out
mov
dec
dec
or
testl
stos
enter
stc
lds
test
pusha
stos
mov
pop
xchg
mov
les
jge
addr16
outsl
mov
add
xchg
jg
xor
cmp
jp
pop
add
xlat
idivb
sbb
in
dec
or
rcrl
push
push
jnp
repz
divl
add
popf
inc
fs
pop
test
cmpsl
push
dec
push
lock
loope
xchg
add
xorl
adc
pop
shlb
dec
stos
dec
cmpsl
or
sbbb
subl
stos
aam
popf
pop
test
or
cmpsb
dec
xchg
scas
loop
push
clc
add
aam
imul
outsb
test
push
xor
dec
lods
fadds
mov
repnz
mov
and
pop
mov
sbb
shrl
sub
push
dec
in
sub
stc
in
jecxz
ret
mov
push
sbb
lods
mov
out
jg
jo
pop
mov
lods
xor
rclb
pop
testl
scas
push
aas
inc
cwtl
adc
rolb
xor
push
cs
test
ljmp
jl
les
out
loop
sub
jecxz
nop
push
xchg
fwait
cli
mov
js
je
mov
mov
movl
mulb
mov
jmp
dec
push
or
cmp
fmuls
scas
test
pop
lods
push
mov
mov
lock
xchg
sti
ficoml
jno
mov
movsl
sahf
pop
daa
stc
add
stos
add
xchg
subl
mov
adc
cltd
arpl
add
inc
and
inc
aam
push
sbb
add
mov
pop
ds
push
scas
nop
ds
fwait
inc
pop
into
fmulp
pop
xchg
push
lock
shll
cli
lret
xlat
movsb
loope
and
mov
or
lret
nop
sarb
inc
mov
sahf
movsl
mov
js
ret
mov
je
popa
adc
push
fiaddl
mov
add
ljmp
inc
push
lds
shll
mov
push
xor
mov
clc
or
lea
andl
pop
xchg
lods
xchg
push
std
sbb
cmp
test
pop
sub
popa
lahf
or
pop
and
pop
push
pop
mov
cmp
dec
test
push
inc
xor
repnz
xor
andb
inc
dec
cwtl
stos
mov
shl
lret
cli
push
dec
lods
insl
rcl
aas
add
aaa
xor
push
insl
arpl
fcmovb
cmp
mov
push
mov
dec
jo,pn
or
add
and
nop
pop
adc
push
and
dec
push
pusha
enter
cmpsl
xor
iret
sbb
mov
rcrb
in
popf
pushf
jge
push
inc
stc
in
and
fsubp
mov
mov
and
xchg
push
mov
mov
into
ret
push
loopne
testb
out
ds
out
clc
or
sti
adc
or
out
mov
push
inc
loop
and
movsb
stos
test
stos
mov
push
pop
jecxz
xchg
adc
fcompl
sub
lock
mov
mov
das
insb
lock
adc
and
rcrb
or
and
cmpxchg
out
cmovb
hlt
adc
ds
aaa
sbb
pop
sahf
cmc
shl
je
xchg
add
sarb
jo
or
pop
es
cmp
or
inc
ret
scas
ret
roll
fst
pop
and
mov
cmp
add
imul
push
cli
in
push
xchg
or
shrl
mov
push
xchg
shrb
iret
inc
or
push
and
bound
xchg
pop
or
mov
and
call
inc
xchg
in
cmp
mov
pop
sub
shrb
popl
push
mov
fistl
movsb
dec
jp
lock
jo
pop
push
insb
add
test
and
int3
outsb
cmpsb
arpl
push
inc
lahf
mov
popl
jne
push
aas
adc
jno
cmp
xchg
cmp
movsl
movsb
out
lods
add
push
aam
mov
sarl
jecxz
adc
mov
nop
jl
jno
mov
inc
mov
xchg
lock
mov
cmp
sub
add
or
icebp
test
add
and
ret
inc
jns
mov
aad
push
outsb
mov
jns
adc
mov
mov
xlat
pop
icebp
mov
lock
add
and
jbe
pop
ljmp
das
cmp
mov
jo
jne
pop
dec
shlb
fists
js
ja
mov
jb
xchg
jo
cmp
sbb
push
dec
ljmp
dec
fwait
xchg
aaa
xchg
push
jmp
pop
and
push
inc
fs
mov
pop
out
add
hlt
push
or
sub
jae
pop
icebp
jae
and
xchg
jecxz
sub
push
push
jge
and
fsubr
add
push
inc
test
sub
push
popf
pop
cmp
xchg
push
jl
test
mov
inc
lods
inc
cltd
jp
jae
lea
subl
push
mov
nop
dec
pushf
and
add
xchg
test
scas
aam
xor
and
sub
jb
mov
fnstcw
push
mov
jno
inc
inc
sbb
jno
mov
dec
lods
je
push
adc
out
cmc
sbb
fisttpl
or
push
sub
imul
jl
sbb
jle
add
inc
decb
mov
faddl
jge
adc
mov
inc
mov
out
cmp
sub
xor
lds
ret
push
loope
mov
incb
js
mov
xor
sahf
mov
jle
inc
sub
int3
push
test
push
jmp
pop
cmp
adc
dec
add
sub
aas
cmpsb
xor
push
sbbb
mov
mov
mov
bound
jne
lret
clc
dec
mov
inc
adc
push
dec
rolb
mov
stos
adc
xor
jecxz
cmp
cmp
jl
mov
es
loopne
mov
sbb
mov
cmpsb
in
mov
push
fcmovne
push
pop
xor
enter
ss
rolb
popa
and
xor
add
leave
mov
sahf
sahf
stos
jl
cltd
rclb
inc
sub
mov
mov
mov
or
push
fwait
nop
out
aam
adc
aam
sbb
scas
push
out
jo
xor
inc
data16
in
jge
push
icebp
xor
adc
inc
or
leave
cmpsl
icebp
sbb
jmp
push
repnz
sbb
or
shrb
icebp
sbb
or
or
sbb
cmp
jo
inc
pop
inc
in
add
clc
jne
push
mov
xor
sub
stos
push
imul
sbb
jecxz
loope
out
loopne
fldl
shl
bound
lock
push
jae
push
push
mov
cmp
push
adc
loope
test
xor
call
push
out
mov
mov
dec
ret
popa
sti
shrl
push
adc
pop
lock
addr16
xchg
or
jle
fsubs
push
js
push
loop
sub
test
dec
addb
pop
rorb
movsb
sub
jns
lcall
mov
fdivl
pop
or
mov
cmp
int3
fwait
pop
pop
dec
xor
std
inc
add
loope
xchg
dec
out
mov
notb
and
int
cmp
cmc
inc
popf
or
adc
xchg
mov
inc
adc
mov
adc
mov
add
add
mov
jno
jl
cmpsb
mov
pop
add
sub
xchg
lock
pop
ja
pop
aas
fadds
sub
inc
mov
xor
flds
lahf
in
jmp
xor
ljmp
and
sub
pop
lock
ds
in
cmp
push
rdtsc
lea
push
and
adc
imul
dec
dec
and
mov
inc
or
outsl
sub
test
clc
xchg
sub
cwtl
rcrb
sub
dec
loopne
xchg
jp
ljmp
jae
mov
jo
mov
sbb
push
cmp
add
pop
xchg
imulb
fnstcw
rorb
pop
stos
jne
xchg
sbb
scas
push
mov
fmuls
mov
push
or
cmp
jle
fs
xor
push
add
cmp
stos
es
icebp
mov
orb
and
mov
xlat
out
cld
jae
inc
inc
sbb
or
sub
jmp
andb
lods
pop
or
test
enter
push
jmp
testb
pushf
stos
or
add
ss
dec
and
xor
inc
xchg
inc
jnp
rcrb
es
adc
into
test
es
adc
pop
cmp
stos
cmpsb
loopne
popa
xchg
aam
mov
les
sbb
icebp
adc
add
ja
and
jbe
cmpsb
pop
mov
cltd
es
sub
movsl
adc
stos
arpl
es
mov
stos
in
adc
stc
jle
fistpll
jg
in
stc
jmp
dec
icebp
inc
cmp
add
aam
mov
int
pop
loope
cmp
or
dec
cmp
add
cmp
cmpsl
mov
adc
scas
lahf
mov
cmc
mov
lock
shr
or
xchg
lock
addr16
int
sahf
popa
sub
aad
das
ficoml
femms
fldt
inc
xchg
pop
or
rol
cwtl
pusha
cmpsl
sbb
enter
mov
clc
sbbl
mov
add
inc
pop
mov
pop
adc
mov
in
pop
mov
sub
loop
movsl
mov
je
jg
stc
div
push
repnz
add
push
dec
mov
push
lahf
into
adc
dec
scas
repnz
push
mov
sub
sbb
push
out
sub
mov
gs
out
mov
adc
les
push
mov
push
aas
dec
insl
adc
ss
mov
jge
or
ret
jl
subb
inc
mov
mov
sub
pop
jae
mov
push
loope
notl
lcall
xor
sub
movsl
lret
lcall
stc
sub
mov
adc
xchg
cmpsb
and
push
ljmp
add
jl
stos
push
scas
sub
adc
mov
cld
cli
sub
out
lea
pop
xor
stc
sti
inc
and
cli
mov
loopne
mov
sub
jecxz
mov
add
and
jns
fs
xor
inc
xchg
cs
inc
fwait
push
sub
push
cmpb
ja
loope
andb
dec
es
push
mov
cltd
loope
adc
rcr
sahf
imul
iret
push
dec
or
adc
ljmp
sahf
and
mov
sbb
in
mov
xor
push
mov
inc
lea
xor
cli
mov
pop
cmp
es
ss
fsts
cli
sar
and
lret
sbbl
into
sbbl
lock
icebp
iret
push
jmp
pop
subl
push
or
xor
push
pop
sbb
sbb
jle
arpl
repz
push
sbb
jl
add
add
jne
or
mov
imul
xor
xor
outsl
xchg
mov
gs
sub
adc
lods
mov
cmp
xchg
lds
and
cmpps
cmp
mov
hlt
aam
adc
cmp
test
dec
mov
hlt
jb
lret
pop
mov
dec
mov
inc
inc
sbb
dec
cmp
call
int
mov
jl
popa
sar
les
dec
stos
sbbl
pop
nop
add
mov
testb
push
or
out
call
add
movl
popa
pushf
pop
dec
roll
or
dec
sbb
je
bound
stc
sub
shll
inc
call
std
inc
ds
push
jmp
bound
lea
cmp
jmp
or
xor
lret
lds
push
shr
hlt
test
mov
imul
add
cmpsb
pop
orl
icebp
cmp
ljmp
sbb
loopne
out
imul
mov
push
rcl
out
jl
sarl
iret
gs
cmpb
sbb
rorb
lods
ss
cli
ret
lahf
xor
popf
les
xchg
push
cmp
or
mov
mov
adc
sbb
cltd
test
mov
orl
and
lcall
mov
clc
popf
fisttps
xchg
jnp
js
sub
add
and
xlat
dec
cwtl
mov
dec
iret
adc
inc
adc
mov
jne
mov
adc
insl
mov
sahf
lcall
push
jns
pop
loope
rorl
mov
les
or
add
sahf
scas
jne
xor
adc
or
push
cltd
icebp
out
mov
stc
sbb
or
push
push
push
add
push
sub
and
push
add
push
stc
fdivl
push
xchg
mov
popa
add
mov
mov
inc
mov
xor
xchg
repz
mov
call
xor
jae
push
pop
pop
and
jecxz
repnz
fldt
stc
jp
pop
sahf
loop
mov
shll
xchg
es
insb
rcl
cmc
sub
shrb
shlb
xor
pop
xor
inc
jne
inc
lret
shll
sbb
ds
mov
push
loope
testb
push
mov
push
adc
xchg
insl
adc
cmp
lret
ss
call
mov
inc
and
adc
mov
mov
pop
and
and
nop
xor
sub
int3
sub
sbb
xchg
loopne
sbb
in
mov
test
mov
adc
fdivl
iret
in
aaa
js
mov
inc
in
and
ret
inc
insb
mov
in
clc
sbb
mov
sbb
and
jecxz
mov
adc
xor
inc
icebp
nop
fs
cltd
mov
pushaw
adc
out
jl
or
insb
roll
ror
push
dec
imul
push
push
xchg
push
in
shl
or
mov
in
enter
pushl
jns
sub
ds
mov
xchg
shrw
sbb
stos
scas
jnp
pop
dec
pop
or
shl
mov
cmp
mov
pop
or
cld
mov
push
sbb
jne
popa
out
push
mov
movsb
pop
cli
mov
push
inc
cld
lock
idiv
sbbb
add
fcomi
dec
daa
add
xor
mov
mov
pop
fcmovnbe
xchg
in
and
out
shrl
outsl
add
jb
and
pop
sub
and
push
pop
jecxz
jns
cmp
mov
mov
dec
rorb
sub
xor
add
daa
add
cmp
and
pop
mov
jge
ror
add
incl
cs
or
push
fiaddl
pop
cs
and
and
stos
cli
mov
or
test
ljmp
in
movsl
adc
lahf
add
xchg
add
jmp
pop
inc
loop
leave
in
push
add
pop
shrb
and
push
mov
or
sbb
push
add
les
jno
cmp
or
mov
notl
pop
sbb
jb
pop
cmp
in
dec
daa
aam
and
cli
loopne
or
je
xchg
lahf
push
inc
pop
mov
icebp
and
mov
and
lcall
mov
jno
adc
mov
cmp
lock
insb
mov
mov
sub
or
mov
jne
adc
mov
pusha
sbb
les
inc
es
or
rcrl
and
lock
cmp
cld
adc
sub
loope
iret
cmp
mov
into
or
sub
mov
nop
pop
in
or
lcall
cmp
das
popa
popa
jge
aam
movsb
xchg
daa
ret
out
lcall
aam
pop
fs
xchg
mov
imul
addr16
test
lods
pshufw
cwtl
and
fdiv
or
aam
pop
fucomip
add
sub
sbb
mov
adc
mov
jo
cs
push
lea
popf
cmp
dec
add
les
cmp
inc
ret
dec
mov
mov
adc
push
dec
inc
jge
cmp
cmc
inc
imul
jmp
mov
sbb
orl
adc
push
hlt
or
sbb
pushw
icebp
mov
in
adc
sahf
mov
inc
cmpsb
mov
andl
jmp
xlat
sbb
pushf
sbb
stos
xor
insb
xor
test
mov
xor
and
cmp
dec
dec
test
les
pop
js
ds
test
add
rclb
dec
clc
sbb
adc
push
add
aam
jle
xchg
cmp
xchg
mov
push
andl
cli
jp
cld
cmp
pusha
out
lock
or
ss
xchg
rcll
into
movsb
movaps
sbb
test
cmpsb
pop
clc
sbb
dec
out
loop
aas
je
test
sub
pop
mov
jle
jmp
fiaddl
lahf
in
dec
insl
jg
fadds
in
inc
cmpsb
xchg
jb
adc
mov
sub
shll
add
mov
ja
jae
mov
addb
inc
sbb
or
addb
push
xchg
stos
popa
fucomi
clc
adc
inc
fcoml
aas
jo
mov
sbb
push
sub
jecxz
mov
cmp
mov
ss
add
fsubs
and
in
inc
outsl
xchg
xor
push
addb
mov
loope
jo
or
mov
adc
jbe
pop
stos
mov
jb
or
pop
mov
and
or
repnz
cmpsb
das
cmp
mov
dec
and
test
pop
xor
scas
orl
sbb
loope
in
mov
sub
inc
add
insb
sub
mov
daa
jecxz
mov
mov
pop
jmp
test
rorl
push
add
or
mov
cmp
dec
add
mov
push
add
add
les
and
repz
mov
in
inc
push
mov
or
fisubrl
dec
sti
and
ds
and
or
inc
jg
clc
and
outsl
jmp
sbb
jnp
push
inc
out
cmc
mov
adcl
mov
std
rcrb
inc
inc
sub
clc
lods
sub
ja
add
mov
js
push
or
hlt
xchg
scas
mov
lods
fwait
dec
out
xchg
ds
movsb
fxch
xchg
sbb
push
lahf
jl
and
cmpsl
aam
mov
aam
int3
or
sub
dec
rcll
add
lods
pop
pushf
pop
loop
test
sub
ret
inc
lahf
clc
les
lds
fstpl
jne
pop
pop
in
loopne
les
cmp
sbb
cmc
into
test
or
sbb
pop
dec
cwtl
mov
dec
inc
push
lods
movsl
shl
shlb
lods
add
lret
and
dec
mov
pop
lods
inc
push
ds
cmp
dec
jnp
std
out
fsubl
add
je
lcall
or
mov
rcl
test
shr
mov
movsl
clc
cwtl
jmp
add
lds
sub
adc
aam
jae
push
mov
jo
sub
out
outsb
add
adc
imul
dec
shr
data16
mov
iret
xlat
icebp
scas
mov
or
addr16
push
add
scas
mov
out
stos
adc
cmpsl
sti
movb
xor
sub
stc
pop
aas
cli
jo
cltd
cmp
call
or
or
jl
es
push
mov
jl
adc
fistpl
insl
and
lret
or
xor
sbb
icebp
or
adc
mov
inc
push
mov
inc
mov
inc
gs
je
xor
in
lods
cmpsb
jle
arpl
insb
add
xor
dec
or
imul
xchg
in
ret
mov
les
dec
add
stc
xchg
fdivl
mov
es
cmpsb
adc
out
pop
xchg
in
add
inc
inc
mov
adc
push
xor
jmp
add
cmp
fstpl
add
into
int3
inc
xchg
scas
ljmp
ret
adc
mov
inc
subb
mov
add
jecxz
and
idiv
jle
adc
or
call
inc
cmpsl
jg
dec
pop
enter
inc
jbe
push
dec
push
fs
mov
mov
jl
xor
out
mov
je
sub
in
decb
cmp
mov
sub
mov
js
fcomps
pop
call
xor
sub
rorl
or
lahf
add
add
lahf
sar
and
scas
mov
push
je
dec
jp
sbb
rclb
test
andl
test
ret
test
mov
inc
push
mov
or
ja
adc
lret
test
bt
cmp
jle
add
jo
or
out
xor
aaa
sbb
icebp
xchg
jecxz
mov
hlt
inc
jae
add
into
andb
pop
mov
lret
xchg
icebp
or
pop
sbb
xchg
lock
push
jecxz
aam
mov
jle
cltd
filds
shlb
mov
mov
mov
ret
inc
and
mov
jo
movsl
mov
xor
rcr
dec
fimull
xchg
pop
and
mov
das
loopne
push
fwait
push
mov
adcb
and
and
pushf
pusha
lods
and
arpl
popa
out
cli
enter
lods
movsl
lea
cmp
rol
pop
adc
aas
xor
xor
pop
gs
sbb
mov
aaa
xor
les
scas
pop
mov
cwtl
movsb
mov
cli
dec
in
sbb
jmp
adc
xchg
data16
mov
call
mov
clc
xchg
stc
stos
out
add
pop
hlt
or
js
jle
sbb
xchg
adc
pushf
cwtl
and
sbb
mov
pop
xchg
mov
flds
sbb
jo
ds
push
sbb
pop
dec
mov
or
jl
pop
xchg
xchg
add
dec
pop
addl
mov
insb
cmpsb
leave
push
adc
dec
mov
lds
dec
pop
je
clc
jp
jb
sbb
call
or
pop
jl
dec
fadds
mov
aaa
stc
jns
pop
mov
adc
mov
bound
dec
mov
cmc
lods
cmp
pop
out
lods
imul
sbb
sub
push
mov
popa
jecxz
ja
xlat
dec
jge
data16
mov
jmp
rolb
andb
cmp
dec
out
xor
fwait
lret
cli
pop
lods
jp
adc
adc
pop
adc
push
fwait
cmp
les
sub
stos
repz
sub
mov
sarb
icebp
push
dec
in
pusha
mull
xor
pop
popf
negb
xchg
mov
and
ss
inc
in
ret
aas
push
sti
pop
nop
pop
arpl
sti
sbb
imul
cmpsb
cld
test
shll
cmp
jge
push
subb
pusha
bound
movl
add
and
mov
mov
xchg
lods
es
das
int
adc
xchg
add
cltd
loopne
xor
stos
int
fistpl
das
dec
iret
rclb
rcll
call
adc
sbb
cmp
jae
aaa
jmp
mov
aam
mov
xchg
inc
sbb
repz
scas
inc
mov
bound
jno
push
cld
sub
out
adc
adc
fcomps
adc
and
outsb
ss
daa
adc
mov
cwtl
shrl
test
fs
es
mov
mov
mov
pop
cmpsb
pushf
pop
test
andb
jo
jp
xchg
inc
xor
sub
cmpsb
jge
mov
repnz
jg
ds
xor
dec
sarl
jle
add
test
jmp
mov
pop
add
loope
cmp
arpl
jge
cli
mov
xor
xlat
mov
mov
pusha
xor
ret
push
jb
xchg
mov
jmp
aaa
fisttps
mov
hlt
sub
push
lret
mov
mov
cmc
add
xor
sub
nop
dec
imul
push
fwait
hlt
pushf
iret
cs
sub
or
iret
insl
std
imul
inc
cmpsb
adc
or
push
fistpl
ljmp
into
outsl
cwtl
in
pusha
cmp
mov
push
sub
stos
mov
aaa
bound
dec
shrl
cmp
or
xchg
xchg
mov
adc
sbb
and
jns
jne
rcl
pop
fcmovnbe
cmp
jo
and
cmpsb
shr
std
push
mov
sub
mov
aad
scas
cmp
xchg
or
sub
jle
aam
and
jmp
xor
push
test
sub
jns
or
rolb
test
clc
push
cltd
cmpsb
xchg
push
sub
hlt
inc
sub
jp
adc
loopne
add
shrl
lock
ret
addl
xchg
sbb
cwtl
mov
sbb
outsb
cmp
xchg
mov
test
push
mov
outsb
cli
mov
xchg
and
sbb
pop
les
enter
rcrl
cmp
xchg
rorb
lea
aas
cmpsb
addl
add
xor
rcl
dec
push
xorb
out
xor
and
or
dec
cli
mov
aaa
xor
push
jmp
pop
in
mov
mov
fbstp
scas
jl
and
fcoml
dec
jae
inc
sub
enter
xchg
insl
neg
sub
loope
adc
xchg
ficompl
call
inc
add
mov
outsl
popa
movsb
call
add
daa
xor
inc
xchg
adc
pop
sub
cmc
orl
lret
rcrl
and
cs
js
outsl
pop
loopne
inc
mov
fwait
dec
sbb
sbb
ffreep
push
dec
outsb
cmp
xchg
pop
mov
aam
or
imul
leave
orl
lods
and
ds
fcmovnb
scas
shl
push
jb
jno
mov
scas
ret
pusha
or
pop
cld
mov
ss
ja
rorl
sub
mov
and
les
movsl
sbb
adc
or
iret
xchg
mov
popa
shl
mov
stc
or
and
shll
pop
mov
dec
int3
adc
push
popl
jle
xchg
pop
cwtl
test
std
aas
in
add
out
adc
sub
cmp
jo
xchg
popa
pop
xor
rorl
loop
sub
int3
mov
fimuls
pop
xor
es
xlat
push
mov
adc
adc
rol
inc
cwtl
mov
or
ds
and
push
mov
lahf
sub
sahf
push
add
push
add
mov
add
mov
xor
jp
dec
psrlw
push
mov
psubb
loopne
add
jp
sbbb
outsb
scas
mov
shlb
lret
cli
lcall
or
sub
and
push
fnstenv
loopne
sarl
mov
sbbl
aam
mov
in
dec
ds
cli
dec
iret
in
push
icebp
or
and
loopne
in
mov
xor
in
mov
mov
mov
fidivs
cmp
fidivs
push
lcall
loope
clc
push
cli
shrb
push
sbb
or
add
fimull
xchg
je
cmp
mov
lods
mov
jo
push
enter
inc
ret
dec
insl
aam
ds
inc
mov
and
fisubl
out
cmp
stos
mov
movsb
sti
dec
into
int3
cmpl
or
scas
push
adc
xchg
adc
mov
mov
pop
inc
data16
xor
addb
mov
rclb
push
icebp
lret
mov
loop
test
xor
jl
inc
ja
push
in
pop
lock
lea
fabs
jb
mov
and
loop
fisttpll
pop
and
push
les
dec
xchg
pushf
mov
cmc
push
xchg
add
movsl
ja
aam
stos
or
js
sbbb
or
jg
popa
sahf
daa
jg
sub
or
add
outsl
stos
loopne
or
shl
push
adc
clc
sbb
inc
inc
add
shll
push
lret
hlt
pop
add
dec
stos
std
add
andb
js
push
aam
test
mov
icebp
add
push
push
ss
loopne
out
and
inc
repz
jo
into
test
inc
lcall
push
cld
std
bound
xchg
addb
addb
pusha
je
leave
and
jnp
fwait
mov
inc
mov
sbb
xchg
mov
out
sub
int
popa
sar
xor
arpl
or
aas
test
dec
sar
dec
shll
inc
xchg
fists
sbb
xorl
jecxz
test
dec
jmp
loope
push
xchg
cli
and
in
fsubrs
mov
popf
inc
adc
out
or
rcr
xor
vshufps
push
cld
add
or
xchg
inc
stc
inc
jge
jg
inc
jl
xor
lods
inc
dec
jl
sbb
push
inc
sub
mov
sbb
and
popa
and
and
inc
sbb
pop
or
and
add
sub
or
faddl
cmp
popa
add
dec
test
cs
push
rorl
insl
dec
mov
outsb
pop
jecxz
fiaddl
lods
pop
jl
adc
dec
insb
psubw
jae
and
cmpxchg
lock
in
jmp
mov
scas
xor
cmp
aam
adc
adc
hlt
ror
xor
sahf
repz
ret
xor
out
jbe
sahf
push
imul
int3
xor
inc
xchg
inc
test
orl
mov
popf
push
pop
inc
push
push
rcrb
loop
and
cs
mov
jno,pn
cmc
adcl
imul
cltd
jecxz
test
inc
fists
dec
inc
add
push
cmp
sarl
pop
mov
fisttpl
flds
mov
push
dec
loop
idiv
and
fldenv
mov
daa
xchg
and
ficompl
mov
adc
jmp
jmp
sbb
bound
shr
xchg
lods
push
or
rcrb
fdivrs
test
push
jns
scas
cltd
ret
addl
arpl
xchg
test
push
jl
out
pop
sti
loopne
les
cmp
sub
jle
loope
jmp
stos
push
js
push
rolb
cwtl
loope
aas
andl
adc
mov
shll
cmp
push
outsb
adc
mov
ret
dec
push
loop
out
leave
mov
idivb
dec
mov
fisttpl
xchg
das
loope
data16
push
sub
ret
lock
cs
lcall
push
loopne
mov
xchg
add
inc
add
sub
pop
push
xor
ss
inc
fs
fcompl
imul
mov
add
mov
outsb
mov
dec
arpl
add
mov
add
sub
pop
loopne
and
xor
fildll
mov
push
inc
pop
repnz
sub
fs
jge
xor
popf
push
adc
jge
mov
hlt
mov
inc
xchg
sub
andb
add
push
icebp
notb
xor
addr16
lret
stos
adc
popa
pusha
mov
rorb
mov
ljmp
mov
data16
shlb
mov
pushl
xchg
or
push
test
mov
lock
scas
pop
dec
jmp
fnstcw
daa
je
pushf
aas
mov
out
push
imul
mov
pop
pusha
orl
jmp
inc
or
pop
sbb
xchg
pop
push
xor
inc
push
or
adc
and
ljmp
lods
and
in
and
outsb
mov
mov
sbb
or
hlt
mov
pushl
sub
sarb
cs
movsb
add
loopne
adc
or
cld
loope
jbe
pop
or
shr
sbb
test
in
add
fcmovb
adc
js
pop
jbe
pop
push
add
ss
cs
xchg
enter
rcrl
mov
or
jbe
dec
xchg
mov
out
mov
dec
pushl
ret
push
ret
xchg
out
rcrb
fisubrl
pop
ds
and
dec
inc
adc
fimull
add
add
mov
lods
in
xchg
jecxz
loop
mov
mov
lods
pop
stos
pop
push
cli
xchg
cltd
mov
push
mov
rcrb
cmp
adc
call
mov
loope
xor
xchg
sarl
popa
push
pop
mov
loopne
xchg
cwtl
lret
test
xchg
arpl
daa
fcmovne
inc
adc
loop
cmp
imul
adcb
sbb
lret
mov
mov
fwait
pusha
subb
daa
insl
ljmp
shlb
pop
dec
sbb
stos
add
pop
cmp
shlb
int
jbe
loop
and
fwait
jo
fnstenv
inc
jle
cmp
lea
dec
scas
push
fucomi
repz
adc
sahf
and
aaa
mov
push
add
fisubs
adc
nop
js
out
xor
fstl
push
push
ss
and
cmp
ljmp
mov
push
aad
pop
adc
ret
scas
xchg
pusha
cmp
nop
loope
jecxz
cmp
jmp
jne
popf
cli
xor
aad
add
push
inc
lcall
mov
push
inc
cmp
push
cmp
push
lea
dec
pop
and
pop
insb
call
or
icebp
out
add
inc
loope
cli
adc
pop
aaa
dec
bound
loope
and
fwait
clc
mov
mov
or
aam
cmp
stos
bound
je
arpl
mov
insl
pop
or
add
sti
call
das
stc
fs
roll
mov
or
cli
inc
lret
dec
aaa
out
cmp
js
pop
and
inc
inc
cmpl
xchg
pop
insb
fidivrl
push
xchg
ret
push
out
icebp
pop
data16
repz
xor
les
mov
add
das
inc
sub
xchg
hlt
lcall
push
jmp
mov
iret
and
push
ret
cmpb
popa
jnp
mov
cmp
pop
std
fdivrs
sbb
movsl
xchg
push
inc
dec
and
cwtl
jmp
sbb
das
xor
push
call
xor
mov
pushl
jbe
or
mov
lds
mov
or
repz
inc
mov
loopne
adc
jmp
mov
cs
imul
lock
mov
add
push
outsl
inc
jbe
rcll
add
popf
mov
dec
dec
mov
cwtl
call
loopne
jecxz
mov
movsl
pop
shrd
xchg
aas
popa
lds
jecxz
sub
cmpsl
xchg
xor
clc
or
cmc
cmp
cmc
rcrb
rcrb
mov
outsb
xor
jmp
xchg
je
shr
test
mov
push
vphaddbd
inc
popa
push
je
add
add
push
iret
hlt
mov
push
fucomp
cld
inc
scas
push
sub
xor
inc
mov
paddq
jg
lea
push
jnp
adc
icebp
xchg
xor
loope
mov
add
test
inc
orl
leave
dec
xchg
outsl
add
adc
xchg
loope
inc
cmp
mov
shlb
inc
push
es
cmp
stos
inc
mov
dec
fmull
std
cmp
push
lock
lods
sub
pusha
xor
pop
push
out
cltd
clc
addl
sbb
cwtl
shll
sbb
jbe
int3
jmp
sub
mov
test
mov
pop
test
orl
xor
adc
mov
ja
xchg
dec
xor
sbb
sahf
rcl
pop
and
je
mov
loop
pop
cmpsl
aas
mov
mov
out
inc
mov
push
cmp
icebp
dec
fwait
xor
bnd
jp
int3
xchg
lret
clc
xorb
add
inc
clc
in
iret
and
popa
or
xchg
xor
xor
add
cmp
je
sub
add
inc
and
inc
mov
sbbb
push
psraw
loopne
stc
cmpsb
xor
inc
imul
inc
je
mov
out
aam
enter
ds
inc
fcomip
sub
push
pop
std
push
cmp
push
fwait
jg
inc
imul
sub
and
sbb
xor
pop
mov
xor
mov
shl
inc
subb
imul
jne
stos
push
test
xchg
mov
mov
push
scas
push
jae
inc
lret
insl
add
mov
mov
xchg
xchg
sub
js
push
in
pop
mov
sub
xor
popf
push
fldenv
cmc
pop
sbb
icebp
mov
cwtl
mov
sbb
movsb
ljmp
mov
push
in
cli
sub
xor
lret
sti
test
xor
aaa
and
adc
and
vmovaps
add
jge
mov
push
or
mov
loop
xor
and
out
fucomip
xlat
jp
mov
testb
xor
xlat
pusha
loop
das
lock
or
mov
stos
cwtl
scas
lahf
pop
rcll
jnp
mov
shl
mov
pop
aaa
lahf
push
sbb
xchg
pop
add
or
sbb
stc
pop
or
loop
add
and
shrl
mov
xor
inc
or
sbb
inc
dec
lds
test
mov
and
popa
dec
test
xchg
cmp
fwait
lods
andb
sbb
popl
outsl
add
jo
push
sub
cs
push
popl
push
fwait
and
dec
add
subb
mov
lcall
xlat
adc
sub
xlat
jp
or
add
cmp
or
xor
pop
cmc
push
xor
mov
xor
test
jl
gs
mov
cmp
mov
andl
shll
or
test
sub
fimull
push
add
push
pop
push
push
cmp
or
ds
mov
outsl
clc
test
push
popa
pop
sbbl
pop
sbb
imul
lods
loopne
pop
insl
jnp
dec
outsb
mov
jno
clc
sub
push
jne
stc
dec
mov
adc
ss
or
arpl
popa
mov
nop
jnp
inc
test
jno
mov
inc
fsubl
dec
stos
insb
fdivrl
xchg
adc
fstps
adc
gs
push
or
dec
int
cmp
pop
ja
cwtl
stos
out
in
adc
mov
sbb
mov
icebp
pop
lock
mov
les
stos
adc
dec
fimull
out
testl
add
jg
sub
dec
cmp
cmp
stos
cmp
push
fs
sbb
in
flds
push
dec
in
fs
xchg
lock
add
cmpsl
dec
lahf
pop
aam
pushf
sbb
xlat
rorl
sub
add
jb
jp
mov
sub
jmp
ret
push
les
inc
fprem
sub
je
mov
jl
jl
ds
std
test
push
jns
add
mov
lcall
sub
sti
scas
dec
xchg
jmp
pop
jg,pn
jno
push
ret
in
cmp
mov
loope
ljmp
or
mov
fdivrl
pop
stos
and
sub
sbb
inc
xchg
push
mov
movsb
adc
sbb
pop
and
cmp
xchg
repnz
jmp
addb
add
cmp
mov
jbe
cmp
es
jo
mov
mov
push
dec
push
lock
cmc
push
shll
mov
mov
sub
mov
cmp
lret
lahf
cs
mov
add
data16
sbb
push
pop
sbb
ret
add
pop
mov
insb
ret
mulb
push
mov
decl
jns
sarl
inc
adc
mov
aas
mov
sub
push
mov
add
cltd
push
cli
and
sub
pop
xor
sbb
or
int
arpl
sub
dec
cli
sbb
cltd
pusha
test
cmp
outsb
loope
jne
shl
mov
pop
dec
aas
out
xchg
mov
jb
jp
mov
add
push
cmp
adc
out
clc
or
in
loopne
push
inc
mov
std
or
cmpsl
sarl
cmc
or
mov
jle
push
shll
insb
call
add
cmovp
clc
in
inc
fnsave
inc
sub
jl
mov
rcrb
and
adc
mov
pushf
aam
fisubl
stos
call
rorb
jmp
push
inc
xor
or
pop
mov
sbb
ss
ja
sbb
loope
stc
int
popa
iret
adc
dec
dec
call
pop
jg
in
xchg
cmp
adc
xchg
xchg
leave
mov
outsl
outsl
dec
es
push
inc
movsb
add
es
cmp
xchg
xlat
orl
xor
bound
nop
adc
shl
out
cs
mov
dec
pop
lcall
pusha
lods
cmpsb
dec
pop
xlat
rol
push
adc
pop
adc
mov
mov
jp
and
icebp
lahf
lods
out
jo
outsl
call
hlt
mov
jmp
dec
or
in
sahf
mov
mov
imul
std
adcl
lret
mov
push
sub
and
mov
lods
add
pop
inc
mov
nop
movsb
xchg
aaa
jmp
and
jge,pn
movsl
test
cli
pop
inc
leave
loopne
mov
pusha
xor
push
xchg
in
test
jo
add
dec
subb
popa
adc
loope
fcoml
or
gs
or
dec
rcrb
xchg
jp
or
adc
push
aas
hlt
out
lock
fld
mov
repnz
xchg
fidivl
inc
or
mov
pop
add
push
or
rorb
adc
fmuls
adc
std
roll
jge
xchg
sbb
add
icebp
hlt
or
mov
jle
or
lds
fnstenv
jae
testb
out
mov
add
fstl
adc
xlat
cmp
cltd
scas
mov
popa
arpl
jae
loop
inc
mov
cmpsb
mov
mov
cs
ret
adc
mov
cmc
sub
ljmp
adc
mov
push
or
xchg
lock
outsb
jne
xchg
sahf
scas
daa
call
test
ljmp
out
adc
ret
jg
cld
repz
outsb
push
scas
sub
outsl
ss
orl
push
in
addl
xor
xchg
ljmp
roll
xchg
popa
and
adcl
in
push
pop
fbld
test
push
jp
jp
aaa
xchg
ja
es
ss
loope
mov
imul
push
cmp
xor
pop
sahf
mov
sbb
fwait
add
sub
add
xchg
xor
or
insl
call
movsl
inc
sbb
mov
and
shl
or
enter
aam
mov
ret
arpl
inc
loope
add
adc
push
xor
inc
fisubl
push
mov
cmpsb
ret
rcrb
sbb
test
adc
inc
outsb
dec
cmovne
ljmp
mov
inc
cmp
sbb
mov
cwtl
pop
xcrypt-ofb
cmpsl
in
mov
push
or
xchg
clc
mov
cs
mov
movl
mov
adc
addr16
leave
addl
ds
rcll
sbb
stc
clc
sti
repnz
daa
sub
adc
jecxz
and
push
cmp
xchg
mov
incl
aam
mov
fsubs
cmpsb
cmp
popa
in
mov
xor
and
ret
inc
or
in
jge
pop
sbb
repnz
jns
inc
cmp
adc
adc
push
mov
adc
aaa
adc
pop
cltd
sub
fwait
push
jae
jns
xchg
into
jle
cmp
or
imul
sbb
mov
scas
in
test
jae
or
lret
jnp
fisubs
jle
xorb
inc
mov
imul
seto
push
scas
inc
out
mov
popl
dec
adc
pop
rolb
push
inc
cmp
fdivl
sbb
loop
adc
sbbb
movsl
mov
add
out
hlt
dec
add
mov
add
xlat
daa
or
hlt
stos
push
scas
lret
add
mov
in
dec
mov
xchg
movsl
rcrb
ds
frstor
cmp
lods
or
and
scas
inc
sub
outsb
ret
add
pop
movsl
push
loope
icebp
jns
sub
dec
test
jp
add
icebp
and
pushf
popa
insb
xchg
sahf
aas
adc
into
cmp
enter
movb
sti
xor
call
lahf
xchg
dec
jo
out
stos
and
jne
sub
pop
int
inc
cmpsb
icebp
push
and
loope
clc
addb
es
repz
add
sub
xor
xchg
and
imul
mov
js
mov
inc
pop
adc
fdivl
jmp
test
repz
mov
aam
cmp
inc
adc
xchg
sbb
sbb
out
mov
mov
and
xor
adc
add
clc
sbb
lcall
jae
into
stc
mov
add
gs
fcoml
adc
fs
jno
ss
jl
mov
mov
add
outsl
icebp
ljmp
stc
hlt
xor
leave
mov
ss
add
repnz
loop
and
dec
cmovle
sub
sbb
jo
push
clc
jne
notb
or
icebp
pushf
dec
stos
fldcw
cmp
adc
insb
daa
ret
out
xchg
cmp
mov
sbbl
shrl
inc
mov
xor
adcb
pushw
jnp
shll
xchg
sub
int3
push
cmp
pop
push
loop
jmp
sbbl
test
lahf
lock
sarb
das
inc
fwait
jo
outsb
adcb
fiaddl
add
and
scas
mov
or
cmpsb
mov
cmpsl
and
or
xor
insb
call
stos
xchg
pop
dec
aas
idiv
xchg
pop
sbb
lcall
xchg
add
push
in
sub
add
pop
cmc
push
pop
inc
imul
xor
mov
stos
adc
push
lret
js
adc
js
adc
mulb
cmp
inc
ljmp
xchg
sbb
mov
outsb
or
loope
jo
mov
in
mov
and
push
xchg
dec
fmulp
imulb
push
mov
jge
inc
sbb
mov
nop
xorb
movsl
cmp
jo
jnp
and
pop
lock
inc
stc
js
test
push
add
mov
mov
insb
cld
imul
or
aad
cwtl
je
mov
xchg
mov
jno
and
xor
push
pop
mul
inc
adc
xchg
popa
jns
test
adc
inc
xchg
insl
pop
push
ret
dec
ljmp
cmc
sbb
aaa
jmp
stc
les
mov
add
mov
mov
push
std
sbb
imulb
jmp
xchg
mov
adc
jbe
pop
test
xchg
fs
call
mov
mov
jno
test
scas
add
push
push
add
jmp
add
sbb
add
addl
dec
incl
lahf
adc
inc
jle
popa
inc
and
xor
es
retw
pop
push
popa
push
jmp
push
jne
inc
fsub
icebp
shl
mov
loope,pn
push
and
xor
call
popf
mov
xor
cld
mov
add
dec
addr16
or
data16
mov
fldl
sbb
xchg
roll
cs
or
dec
sub
mov
xchg
es
imul
data16
cmp
pop
ja
hlt
xchg
cmc
and
in
inc
xor
adc
mov
loope
loope
mov
gs
push
sbb
cmp
addr16
xor
popa
inc
lds
or
insb
pop
dec
pop
or
dec
cmp
xchg
cmpsl
fwait
mov
jge
mov
add
xchg
pop
xor
sahf
mov
sbb
insb
jle
sbbb
lods
add
insl
notl
incl
dec
sbb
les
clc
nop
or
vmwrite
push
in
nop
mov
sbb
mov
jne
lea
add
push
push
pusha
pop
lock
xorl
movsl
push
jbe
push
dec
push
inc
bound
imul
mov
fs
adc
add
xor
roll
lock
rcrb
shlb
or
fs
jg
in
mov
mov
or
pop
and
and
cmpsb
mov
ss
cmc
xchg
das
adc
dec
xchg
mov
jg
xorb
push
into
pop
pop
sbb
sarl
mov
js
mov
fldl
or
mov
bound
push
test
xor
push
dec
jge
insb
adc
push
loope
mov
sub
add
loopne
adc
enter
dec
jl
clc
and
cmp
or
ror
cld
mov
jmp
mov
js
call
cli
aaa
adc
and
adcl
mov
shl
dec
inc
les
mov
dec
xor
pop
in
mov
pushfw
out
pop
imul
sub
pusha
out
mov
xchg
or
jae
pop
cmpsb
bound
iret
xchg
xor
scas
test
xor
cmp
stos
stc
arpl
xchg
dec
cmp
add
jb
stc
cwtl
ljmp
sub
mov
popf
inc
outsl
sub
roll
xchg
mov
pop
push
mov
cmpsl
add
push
adc
mov
ja
mov
aas
and
lock
adc
xor
xchg
ficompl
aaa
arpl
arpl
sahf
or
shll
fistpl
cmp
xchg
fmuls
or
lcall
fwait
xor
mov
mov
scas
adc
or
lcall
mov
aas
sub
mov
pop
sbb
rorl
mov
out
xchg
xchg
dec
dec
cmp
or
repnz
mov
xor
lock
or
jmp
jp
cmpsb
mov
les
pop
xor
sahf
mov
mov
stos
ss
scas
les
lea
fadds
inc
fmul
or
add
cmp
cld
adc
loope
push
aad
lds
jge
fcompl
into
test
push
imul
mov
scas
pushf
xchg
cmp
jle
fmul
or
fdivs
cmp
aas
movsb
sub
and
sbb
inc
lea
inc
pusha
pop
push
adcb
out
inc
and
dec
mov
mov
mov
inc
into
scas
mov
inc
shl
dec
cmp
inc
es
call
cwtl
hlt
mov
jo
sub
cli
add
int
jecxz
fimull
pop
and
push
mov
ret
mov
adc
inc
jg
adc
pop
shrb
inc
test
leave
or
notb
add
adc
outsb
lods
xor
leave
xor
fdivrl
sub
dec
ljmp
sub
cmpsb
mov
hlt
aas
xchg
repz
sub
sub
inc
test
aad
mov
lods
cmp
movsb
jns
test
outsl
cwtl
lea
outsb
pop
test
std
aas
mov
and
dec
mov
lock
clc
mov
dec
push
and
jo
aaa
inc
ficomps
popf
insl
das
cmp
xor
inc
pop
ljmp
mov
add
xor
data16
xor
loope
and
insl
lds
inc
sbb
imul
iret
push
jne
dec
popf
jg
dec
dec
push
loop
push
xchg
pop
cwtl
add
ds
jns
dec
xlat
mov
ss
fisubs
xchg
aam
and
ficompl
scas
mov
or
sbb
adc
push
lea
push
jo
cs
pop
mov
mov
pop
test
adc
fcmovu
push
or
xor
and
fcoms
xor
inc
dec
scas
cwtl
sahf
sbb
test
mov
mov
jge
sbb
sub
dec
cmp
stc
pslld
add
sub
cmp
ror
ds
scas
inc
aas
jecxz
sbb
test
fstps
icebp
insl
test
dec
arpl
push
add
adc
push
xchg
or
vcvtss2si
lock
in
mov
sub
sahf
dec
loopne
fwait
sub
jle
test
jp
cmp
lcall
dec
inc
orl
ret
lods
and
xchg
mov
out
mov
dec
inc
mov
mov
js
ljmp
push
mov
clc
cmc
je
out
out
sahf
mov
xor
push
lea
shlb
lock
xchg
xor
in
or
dec
lods
mov
lods
push
mov
push
outsb
mov
loopne
inc
inc
inc
insb
mov
adc
mov
dec
popf
inc
xor
sub
pop
sub
pushf
adc
aas
mov
push
xchg
xor
mov
add
ret
scas
and
push
shr
mov
cmp
cmp
incl
xchg
in
and
xchg
loop
mov
lods
dec
sbb
xor
movsl
or
dec
sbb
pop
fcmovnbe
daa
sub
xchg
test
or
js
push
and
loope
shll
xor
orb
aaa
nop
cs
es
cltd
daa
roll
repnz
adc
js
push
sbb
and
jge
sub
movsb
scas
lods
xor
mov
inc
xor
pop
xor
imul
stos
push
daa
pop
enter
shll
test
xlat
pop
xchg
stos
cld
xchg
dec
dec
js
and
fcomps
and
cmp
mov
push
ret
jmp
xor
add
clc
imul
cmp
sbbl
in
inc
inc
mov
push
xor
and
out
pop
xchg
inc
xor
icebp
insb
jo,pt
out
lods
loopne
bound
xchg
mov
and
mov
xchg
inc
addr16
xchg
les
jg
xor
cld
pop
shlb
inc
into
into
in
mov
pop
sub
inc
xchg
jns
xcrypt-ofb
cmpsl
scas
jl
in
stos
lock
cli
sub
cmp
push
lret
push
adc
sub
lds
and
xchg
loopne
sbb
incl
ret
insl
xor
pop
pop
mov
xor
fs
popf
push
movsl
mov
jns
cmp
in
inc
mov
push
pop
adc
sti
ror
les
aad
add
not
mov
aam
xor
inc
ja
scas
or
adc
es
sub
inc
clc
add
mov
or
and
ja
xlat
stos
mov
shlb
sbb
xor
adc
mov
rorb
dec
loopne
insl
aad
mov
add
sbb
xchg
ret
cld
ret
jne
sub
inc
subb
sahf
movsl
popf
sub
pop
xlat
cmp
xchg
test
jo
cld
jle
icebp
adc
scas
mov
push
push
out
cmp
into
call
dec
ffreep
or
push
and
jl
sbb
in
mov
testb
andb
sub
pop
sub
cmc
and
icebp
popa
sub
inc
daa
orl
mov
add
mov
shlb
cmpsb
mov
xor
subb
std
dec
ss
scas
xchg
fdivs
mov
in
iret
lods
pop
ror
jnp
or
stos
cmp
push
inc
xchg
sahf
jo
and
imul
xchg
jne
xor
push
scas
push
ret
out
and
pop
aad
and
sbbb
jmp
cmc
cmp
inc
jecxz
or
mov
mov
pop
xor
clc
lcall
sbb
jmp
movsl
sahf
push
dec
loope
fsub
cmp
fld
rclb
push
pop
aaa
adc
popl
stos
add
test
mov
add
add
pop
and
dec
add
add
lea
sbb
rcll
xorb
pop
jge
out
sub
xchg
loope
mov
cmpsl
lock
xchg
push
popa
jne
cmp
jne
xorb
movb
xor
pusha
or
popf
outsb
xchg
pop
decl
cwtl
and
add
dec
and
xchg
ljmp
adc
add
add
rolb
icebp
mov
jnp
jns
icebp
xchg
ror
stos
xor
mov
out
sbb
push
mov
cltd
xchg
pop
add
pop
mov
mov
or
cs
sbb
and
mov
out
sub
mov
out
or
sub
dec
mov
or
movsb
pop
call
repnz
inc
leave
test
fnsave
and
inc
mov
scas
insb
xor
imul
fisttpl
insb
dec
mov
loopne
ret
bound
xor
ret
adc
pop
jbe
cmp
icebp
jmp
inc
js
lds
jns
mov
js
jns
int3
out
mov
stc
arpl
sub
cmpsb
mov
sbb
xlat
or
repz
jo
dec
jle
push
mov
xchg
mov
smsw
push
dec
jb
pop
andb
int
test
jbe
add
addr16
mov
jb
aad
into
fs
in
lea
insl
int3
out
jp
cwtl
cld
mov
mov
outsl
or
jae
mov
or
add
sar
add
adc
sbb
mov
xchg
dec
push
or
out
and
ret
imul
lods
add
jle
outsb
mov
je
dec
out
sub
jne
lret
ror
test
sbb
cmp
test
xchg
sub
lock
aaa
xchg
adc
pop
rorl
push
xchg
insb
mov
inc
add
push
sarl
dec
shrl
fdivrp
sub
and
add
dec
je
xchg
xchg
inc
xchg
ljmp
pop
les
sbb
ja
pop
scas
stos
int3
out
fbld
sub
jge
mov
inc
cmp
hlt
or
dec
push
mov
fisttpll
mov
inc
cmp
add
les
mov
mov
pop
insl
sub
negb
pop
out
lahf
lods
lcall
push
pop
sbb
jg
xrelease
fstpt
scas
and
shl
adc
leave
xor
cmc
add
les
jmp
sub
xchg
repz
add
add
or
sbb
adc
or
in
jno
sti
xlat
pop
jb
in
adcl
xor
cmp
push
or
sub
xchg
pop
rorl
mov
dec
mov
inc
je
nop
jp
pop
sbb
or
xchg
cmp
sbb
test
sbb
sbb
or
addr16
lock
inc
cli
jae
negb
je
cmp
push
stos
mov
icebp
fwait
jns
cmp
push
inc
cmp
ljmp
mov
cmp
dec
mov
xor
cwtl
adcb
lret
sbb
fildll
into
frstor
mov
negl
xor
je
out
ljmp
add
add
fmulp
or
addl
mov
aaa
mov
mov
std
loope
pop
cmp
loop
cmpsl
jg
push
add
fsubrs
pop
jge
inc
into
pop
mov
data16
ret
popa
cwtl
pop
fsubrs
and
mov
push
cwtl
mov
inc
pop
cltd
mov
xchg
icebp
and
adc
inc
cld
cmpb
rcrl
add
jp
popf
lcall
sub
xchg
cmp
sti
add
and
cmp
cmp
jmp
hlt
adc
orl
mov
adc
or
es
pop
mov
fs
dec
mov
out
xor
sbb
fadds
adc
inc
lods
cmp
pop
je
add
ja
nop
out
shll
inc
into
movsb
lods
mov
std
or
mov
inc
mov
jecxz
sub
sbb
push
push
sub
cld
xor
inc
mov
rorl
daa
cmp
mov
aas
add
pushf
jno
push
inc
add
cmp
out
data16
imul
mov
aam
loopne
data16
sarb
xor
ror
xor
cmp
in
dec
xlat
adcl
xor
or
mov
call
inc
stos
adc
mov
ret
or
or
lret
cmp
jns
adcl
shll
pop
insl
out
pushw
shlb
in
jl
jo
mov
leave
mov
iret
push
cli
sbb
rol
loope
pop
xor
inc
or
push
div
jl
sub
or
ret
inc
rcrl
js
movsb
adc
aaa
lret
add
fldcw
dec
mov
aad
pop
inc
and
and
aad
and
cmc
push
mov
repnz
in
xlat
cmp
sbb
lods
adc
pop
pop
cmp
push
popf
xchg
je
daa
xor
mov
inc
xchg
pop
mov
sub
jns
mov
mov
clc
fmuls
ss
stos
arpl
mov
je
cli
sbb
or
insl
dec
popa
repz
add
out
pushf
ds
call
sub
cltd
cmc
sbb
fimull
jmp
mov
mov
jo
mov
add
sarl
cld
outsb
or
dec
loope
in
aam
out
inc
xor
pop
pop
insb
pop
pop
aaa
mov
adc
pop
mov
int3
adc
mov
xor
int
repz
ret
insl
jmp
or
sub
mov
mov
fisttpl
shl
mov
fmull
je
ds
xchg
jge
or
lea
push
daa
or
fs
mov
lock
popa
mov
or
inc
inc
add
adc
aas
js
cmp
xchg
pop
jg
mov
lret
hlt
out
xor
arpl
push
dec
jl
dec
jns
popa
and
pop
push
lock
outsl
jno
lock
mov
inc
or
test
insl
xchg
ja
ljmp
int
or
data16
mov
jg
ljmp
jle
leave
mov
mov
inc
push
loope
and
push
or
push
push
movsl
cmp
push
stc
mov
ficoms
test
pop
mov
faddl
mov
andl
sub
fs
iret
add
mov
mov
jbe
jle
and
push
mov
inc
add
fiadds
lahf
icebp
int3
stos
push
mov
insb
pop
jbe
mov
cli
pusha
mov
andl
push
sub
adc
add
adc
out
outsb
add
xchg
add
lds
jge
jp
jb
sub
and
xor
stc
mov
icebp
or
cli
push
stos
dec
xchg
pop
jle
fdivrs
pushf
push
inc
test
jb
push
xor
xchg
pusha
daa
jo
movb
stos
lahf
xor
push
cmp
sub
push
fs
sbb
shlb
rcrl
pop
xor
hlt
hlt
sub
cmp
inc
lret
test
inc
mov
ret
ret
addr16
xor
push
push
stos
test
add
loopne
adc
nop
push
popa
in
clc
leave
sub
scas
xor
sarl
jo
push
dec
cltd
fsubl
mov
jae
dec
leave
cmp
dec
dec
mov
jno
in
push
scas
fs
jl
cld
mov
stos
pop
mov
xor
pop
pop
pop
dec
xchg
cmpsb
inc
aad
or
cmp
movsb
cli
push
xor
jge
mov
push
stos
ret
xor
je
xor
push
sbb
ss
ud2
and
jmp
and
pusha
xorl
mov
xchg
push
and
rolb
aad
sub
cld
es
or
jecxz
mov
repz
in
imul
jmp
loop
addb
adc
mov
lods
shrl
mov
mov
xchg
mov
movsl
jp
add
inc
cmpsl
fistps
mov
std
nop
pop
loopne
cmpsb
add
fs
mov
sub
add
enter
xchg
ret
sbb
mov
sub
mov
sub
mov
ret
mov
xchg
mov
popf
subb
inc
mov
jp
add
hlt
lret
or
inc
adc
xchg
sbb
decb
icebp
jle,pt
fdivrp
mov
pop
sbb
push
jp
mov
aad
mov
mov
and
mov
inc
cmp
movsb
pop
fnsave
rorb
rcl
jne
push
imul
fiadds
fsubl
or
mov
inc
popf
inc
xchg
shlb
ljmp
fndisi(8087
rcr
jmp
fdivs
and
enter
cmp
aam
add
jnp
push
mov
sti
es
cltd
or
mov
inc
jae
imul
mov
outsl
add
jle
test
call
ret
xor
enter
pop
cmc
mov
inc
rclb
jge
mov
pop
jle
xor
inc
jg
stos
jno
cmc
scas
lds
or
xchg
js
out
push
add
add
xor
mov
stos
add
js
icebp
dec
addr16
test
pop
or
subb
and
xor
enter
sbb
int
or
push
dec
xor
lret
int3
adc
dec
cmp
add
or
mov
ficoml
imul
cltd
pop
push
xchg
stc
xchg
jecxz
fcomp
lock
inc
push
pop
sub
sbb
clc
inc
ret
mov
cmp
or
xchg
adc
aas
push
mov
cmp
adc
jo
mov
arpl
out
outsb
add
sbb
fidivl
fwait
adc
pop
pop
hlt
pop
xor
sub
push
push
sub
add
sbb
pop
outsl
es
test
mov
add
icebp
add
xchg
push
incb
inc
jns
dec
hlt
mov
add
loop
and
sbb
adc
repnz
or
adc
inc
punpcklwd
push
aaa
xchg
test
hlt
bound
xchg
fidivs
mov
jne
or
sub
adc
adc
outsb
sub
sub
loop
inc
push
or
fldcw
imul
inc
jo
or
insl
and
into
out
sbb
jns
cmp
pushf
out
lods
andb
push
out
fs
out
sub
int3
cltd
mov
out
lahf
stos
dec
inc
sahf
xchg
jb
fimull
inc
push
lods
or
loopne
ljmp
sub
clc
test
nop
push
jp
cld
sbb
loopne
push
movsb
rcll
daa
pop
jp
sbb
push
adc
mov
jnp
sahf
mov
outsl
push
jo
mov
rcrb
add
dec
jl
push
jp
jo
lret
pusha
xchg
cs
dec
or
lahf
cli
ret
and
inc
xor
adc
and
sub
shll
adc
fadds
mov
aad
sbbb
fistl
sbb
sub
jecxz
sbb
ret
cltd
dec
rorb
roll
sbb
nop
and
addr16
hlt
orl
inc
fnstenv
mov
lock
ss
xchg
js
popa
or
cmp
lcall
sti
out
mov
xorl
inc
inc
or
sbb
rcl
push
popa
sbb
mov
or
or
addl
pushf
icebp
mov
pop
outsl
sbb
and
xchg
xchg
jo
loope
cmpsb
insb
aaa
or
ret
inc
das
mov
imul
and
outsl
cmpsl
push
ja
sub
sbb
mov
cmpsb
divb
xchg
xchg
xchg
pop
and
repz
jo
add
dec
mov
pop
mov
orl
nop
les
add
je
sbb
or
add
scas
sub
loope
cmp
ds
and
pop
call
add
pop
das
pop
shrb
ljmp
jge
sbb
dec
pop
lods
sub
fdivrs
xor
daa
cwtl
rorl
sub
sbb
shrb
adc
cmp
imul
inc
test
xchg
and
js
xor
bound
data16
mov
sarb
les
push
loopne
adc
cmpps
and
test
and
pusha
clc
mov
lods
and
adc
mov
xchg
mov
in
jae
stos
adc
cmp
xchg
inc
dec
xor
hlt
stos
orl
aam
dec
divl
cmp
rorl
pop
sub
jle
xchg
aad
pop
outsb
pextrw
js
imul
inc
outsb
dec
sub
sahf
and
adc
mov
das
add
js
cli
std
ss
gs
rolb
out
mov
adc
roll
nop
xchg
mov
cli
adcb
inc
dec
out
cs
adc
cmp
movl
or
ljmp
push
inc
fimull
ss
js
and
or
add
shll
mov
sub
in
inc
push
add
sti
sbbb
sbb
dec
mov
add
xchg
add
or
ret
and
lods
or
pop
stos
pusha
push
jecxz
sub
mov
jge
inc
stos
sbb
pop
pop
pop
movsl
fisubs
push
rcrb
mov
mov
rolb
sbb
cmp
cmpl
loop
leave
pop
lds
sbb
cld
jp
xlat
pop
sarb
xchg
lahf
movsb
or
xlat
or
loop
xchg
ja
sub
mov
and
sub
rol
pop
or
lret
mov
mov
add
inc
mov
adc
mov
mov
jmp
shrb
fiadds
cmpb
ss
inc
subb
push
lahf
xchg
loopne
cmp
aad
insl
cs
cwtl
lock
in
roll
ret
inc
inc
add
fucomip
lock
cmp
dec
ljmp
jmp
dec
fldenv
ljmp
test
mov
sub
cmc
pop
pop
test
mov
popl
rolb
repz
push
adc
bswap
je
test
repz
jg
mov
mov
cs
loope
jno
insl
ret
popf
testb
jmp
ror
mov
adc
xchg
ljmp
lds
cmp
or
dec
pusha
sarb
xor
or
mov
shl
stos
xchg
cmp
inc
mov
mov
add
aam
ret
icebp
jle
cld
jmp
adc
or
push
in
jne
sub
insl
in
lods
out
imul
cmpsl
sbb
orl
imul
lea
test
dec
pop
movsl
adc
aad
mov
pop
mov
cmp
xorb
mov
push
mov
sahf
das
daa
mov
dec
mov
sarl
mov
addl
bound
add
and
into
clc
inc
push
mov
rcr
test
les
dec
clc
inc
cmp
adc
das
and
inc
jp
adc
jns
int3
je
leave
rorl
test
push
sub
inc
xor
mov
mov
adcl
jecxz
data16
mov
stc
arpl
sub
es
inc
fcomip
add
mov
mov
and
adc
popf
int3
mov
mov
sahf
xlat
xor
sbb
and
adcl
inc
inc
adcb
js
inc
lods
inc
add
loopne
xchg
pop
inc
fadds
mov
dec
and
sub
lods
push
jle
cmpl
test
inc
popf
sub
btr
mov
loopne
inc
and
jg
add
add
xchg
ja
or
inc
aam
stos
aaa
cs
aad
pop
xchg
ljmp
add
lea
add
and
ds
aaa
pop
orb
loop
add
add
sub
xlat
adc
fstl
iret
push
or
push
popf
hlt
jae
test
jmp
jnp
sub
adc
mov
out
cmp
and
mov
sbb
fimuls
adc
rorb
mov
mov
and
mov
adc
rol
jmp
push
packssdw
es
adc
push
out
mov
sbb
dec
jnp
inc
sbb
and
lods
xor
and
jmp
mov
dec
mov
or
dec
sbb
jg
aas
sub
mov
mov
int3
fs
subl
arpl
fildl
xchg
aam
sub
pop
cld
xchg
xor
mov
push
add
fildll
xchg
loope
xor
js
je
mov
movsb
in
jno
int3
movsb
add
or
dec
adc
mov
ret
fsqrt
mov
cs
loop
mov
xchg
push
add
adc
roll
pop
loope
sbb
ss
xchg
sub
repnz
mov
sub
inc
sub
sti
and
cmc
mov
movsb
icebp
fbld
mov
pop
cld
or
inc
les
lock
add
ja
inc
sub
ds
out
xlat
push
bound
sub
lds
xor
roll
andb
mov
nop
jne
cmpsb
xor
stos
mov
dec
into
icebp
ss
jno
ror
sbb
jecxz
icebp
add
mov
repz
pop
jmp
mov
bound
out
les
loop
mov
hlt
outsl
sbb
out
xchg
push
cmc
mov
negl
ficoml
lcall
mov
sub
lds
pop
in
or
jmp
inc
cmp
incb
or
js
inc
repz
mov
rclb
gs
int3
lods
inc
lock
add
lahf
inc
push
push
ss
aam
jo
mull
pusha
add
cltd
loopne
or
push
les
inc
xor
push
mov
pop
cmpsb
xchg
add
cvtdq2ps
pusha
ret
in
test
mov
inc
fwait
xchg
lods
adc
cmp
pop
cld
int3
sub
inc
xor
lahf
icebp
pushf
fs
pop
imul
dec
and
sar
and
shl
mov
in
rcr
dec
jne
or
add
rcrl
imul
cmpsb
pop
xor
or
cmpsb
push
adc
imul
ffree
pop
sub
mov
arpl
push
int3
mov
push
jmp
fcomp
loope,pn
aad
iret
in
pusha
cmp
rcrl
loope
push
jo
push
gs
rol
xor
adc
mov
and
sbbb
mov
pop
xchg
cmp
inc
ret
push
jmp
or
scas
sub
shrl
ljmp
push
test
inc
inc
jmp
adc
adcl
lahf
icebp
into
xlat
lret
insl
adc
aam
pop
xchg
out
cmpsb
push
fmul
pop
pusha
or
sub
add
cwtl
adc
jo
cmc
lds
jle
add
or
test
cli
movsb
rclb
lret
mov
jno
add
sbb
jo
jno
sbb
adc
ret
scas
sahf
mov
mov
scas
jl
aas
icebp
pop
mov
pop
out
xor
mov
loope
in
xchg
outsl
ss
dec
xchg
and
cli
test
dec
add
dec
mov
mov
cmp
movsb
jg
call
sbb
pop
and
rol
cmp
sub
cmc
push
fadds
and
icebp
jnp
cwtl
ret
adc
fistpll
inc
lahf
fisubrs
mov
or
adc
push
test
mov
cmp
fnstsw
mov
mov
sbb
push
add
aas
icebp
sbb
mov
xor
imul
jge
cmpsl
pop
das
lcall
cltd
ds
imul
test
mov
sub
or
mov
xchg
rcrb
imul
push
mov
out
cmpsl
sbb
std
or
daa
fbstp
lods
fimull
sbb
mov
inc
pusha
mov
and
jne
jno
stos
in
nop
icebp
cld
inc
push
test
imul
mov
mov
scas
sub
push
adc
out
nop
mov
scas
dec
loop
std
mov
test
rorb
loope
cmpsb
out
in
mov
test
and
mov
arpl
mov
jno
jno
inc
loop
mov
cmp
dec
or
rcrb
rcl
cwtl
sbb
cmpsb
sub
or
popa
push
push
cs
xchg
movsb
add
std
cmpb
cs
push
jae
xchg
mov
loopne
clc
mov
xor
push
sti
gs
fimull
sbb
add
sub
pop
out
inc
xchg
mov
dec
lods
push
mov
xor
idiv
sbb
add
lret
das
mov
sbb
dec
mov
ffreep
jecxz
loopne
icebp
sbb
lret
ss
add
cmp
pop
pop
jmp
inc
adc
or
jle
adc
dec
dec
mov
fiaddl
xor
and
hlt
sub
loop
orl
lock
inc
adc
cmp
adc
mov
pop
lds
inc
jno
ja,pn
xor
test
lret
and
xor
pop
adc
loop
nop
fmull
adc
pop
call
mov
push
mov
fnstsw
mov
dec
sbb
leave
fstps
lret
test
sub
arpl
xchg
imul
inc
add
test
pop
clc
sub
push
test
addb
repz
dec
lock
loope
int
push
mov
imul
or
sbb
jg
push
xor
pop
xchg
cmp
mov
push
loopne
add
or
xchg
or
xor
in
aam
jp
movsb
ljmp
call
sti
xlat
mov
cmp
test
scas
dec
jo
paddw
lock
adc
pop
adc
cli
sbb
test
stc
inc
insb
dec
cld
shlb
jns
pop
mov
and
mov
jne
sbb
sub
addl
aad
cmp
ret
mov
pop
push
sub
mov
pop
lds
adc
sbb
subl
outsl
pop
or
fldcw
cli
subb
je
adc
mov
cs
ljmp
test
loopne
jg
das
jl
cmp
insl
or
adc
fstl
adc
clts
jo
jle
dec
lret
cli
inc
inc
addl
add
bound
sbb
lods
inc
mov
add
sbb
roll
pop
idivb
ret
sbb
add
cmpsl
or
shrl
xor
pop
movsl
lods
xchg
call
jae
faddl
nop
pop
es
push
andb
cmp
push
xor
add
testb
out
clc
mov
mov
dec
or
stos
mov
iret
adc
cmp
pop
xchg
jno
leave
aaa
pop
jecxz
js
movsl
mov
or
mov
pop
mov
das
push
pop
sbb
xchg
cmp
adc
loop
scas
adc
or
fists
add
shll
mov
push
cwtl
mov
pop
gs
inc
pop
jp
sbb
inc
movsl
jle
push
out
clc
adc
mov
insl
inc
xchg
sbb
in
jo
mov
add
cmp
aad
xchg
sbb
in
rol
pop
inc
je
fprem1
add
sub
fcmovnu
out
or
popa
les
aaa
dec
cli
lods
arpl
lret
loop
lds
inc
rclb
sbb
lods
mov
add
clc
mov
xlat
add
test
and
sub
test
adc
jo
mov
cmp
in
sbb
xor
add
dec
mov
cs
loopne
cmc
shl
mov
lds
pop
sub
sbb
dec
xchg
and
xchg
dec
mov
loope
xor
dec
pop
repnz
loop
lock
enter
out
jl
cmp
pop
rclb
push
mov
adcl
jne
push
in
je
scas
xor
cmpsb
rclb
inc
mov
popf
sbb
jp
dec
jns
imul
pop
movsb
add
test
xor
aaa
xchg
and
pushf
push
js
into
nop
mov
dec
mov
pop
movl
bswap
add
int
movlps
lcall
add
xor
data16
pop
fcoms
movb
cmp
and
jae
lods
xchg
pop
and
inc
xchg
ljmp
inc
lods
inc
mov
mov
mov
fs
pusha
mov
mov
and
push
les
adc
or
jge
dec
out
mov
fnstenv
pop
xchg
pusha
jmp
call
xchg
addr16
push
pop
iret
add
inc
dec
ja
jmp
ficompl
push
sub
push
sahf
xlat
pop
sbb
push
iret
xor
sbb
add
idiv
jae
sbb
pslld
or
push
cmp
sbb
sbb
sub
cwtl
pop
mov
and
loop
push
mov
mov
adc
fstl
push
cld
stos
cld
mov
lods
mov
cli
add
push
add
add
stos
pop
add
hlt
dec
xor
out
repnz
cltd
push
pop
or
fisubrs
and
adc
sub
jne
mov
shll
mov
pop
lcall
ror
or
cmc
shll
aam
out
cmpsl
stos
or
dec
mov
inc
clc
enter
or
and
sbb
aaa
xchg
fcmove
adc
and
mov
leave
and
dec
popf
les
dec
mov
mov
or
jnp
lret
hlt
movsb
mov
adc
xchg
pusha
push
std
jo
dec
insb
daa
ljmp
sbb
or
mulb
mov
dec
xor
test
jb
loope
jno
out
ss
mov
mov
jmp
int3
cmp
mov
mov
cmp
inc
ret
sub
mov
inc
in
punpcklwd
sbb
sti
jbe
jns
inc
cmp
loopne
and
adcb
mov
sbb
out
xor
ss
mov
rclb
out
push
mov
outsb
out
dec
fstl
enter
fsubrs
rclb
sub
popf
sub
mov
shlb
mov
cmc
mov
mov
push
popa
sarl
cli
add
in
nop
and
test
jnp
dec
pop
mov
sub
dec
rcl
inc
das
sbb
loope
mov
hlt
inc
loope
add
sub
dec
push
sbb
mov
push
aad
adc
adc
sarb
inc
in
or
lcall
jns
jns
xchg
nop
fiadds
ret
inc
ds
add
mov
shlb
test
jmp
push
cmp
mov
repz
daa
push
sti
inc
mov
cmp
repz
lods
or
pop
out
shrb
bound
push
mov
pop
shll
inc
cltd
adcl
xor
enter
aas
add
leave
jae
and
adc
imul
inc
push
xor
rolb
into
xchg
gs
clc
pop
lea
not
or
mov
xor
repz
adc
add
jo
pop
push
aad
je
pushf
push
mov
jmp
jg
mov
cmp
aam
pop
cwtl
xor
inc
paddsb
inc
test
xchg
enter
mov
mov
and
leave
lea
mov
jmp
xchg
ret
cli
sarb
stc
dec
mov
add
lods
dec
sti
or
jne
inc
aas
cwtl
pop
jl
inc
xchg
jbe
pop
int3
nop
call
jno
adc
aaa
out
mov
addl
add
xlat
cwtl
notl
aad
mov
mov
mov
pop
sbb
xchg
mov
add
push
fwait
lods
pop
adc
test
dec
rcll
sbb
ret
inc
lods
and
jo
rorl
mov
xchg
mov
xchg
js
out
idivl
push
popa
push
xor
frstor
pop
lds
cmp
cmp
xorl
mov
insb
pop
scas
xchg
sbb
jge
mov
or
loopne
cs
movsb
sbb
into
adc
xchg
cmp
or
sub
test
push
in
jbe
test
pop
cwtl
mov
cmp
mov
sbb
loop
xor
jns
repz
adc
mov
pushl
je
bound
cmp
add
jmp
mov
daa
loopne
je
pop
aas
enter
cmp
in
repnz
sbb
add
mov
pusha
add
mov
dec
aad
fildl
out
fwait
bound
stc
lcall
rcl
dec
add
std
mov
ljmp
ds
mov
xchg
mov
xor
imulb
mov
pop
dec
inc
inc
out
xor
sti
jae
ret
cs
adc
lds
in
ficoml
jbe
std
mov
test
mov
cli
jno
xor
test
scas
les
sbb
hlt
mov
js
push
xchg
mov
pop
loope
imul
es
add
xlat
test
stos
adcb
das
add
ret
push
insl
dec
xor
ja
or
fcomip
push
cmc
rcrl
inc
cld
jne
jns
ret
xor
pop
mov
dec
fcomi
ss
push
inc
xchg
xchg
dec
adc
cmp
cmp
xchg
bound
das
or
pop
mov
jo
and
pop
xlat
leave
push
movsl
lret
test
int
adc
mov
std
hlt
fsubl
pop
cmp
xor
movsb
test
rcrl
xchg
mov
inc
sbb
es
or
mov
addr16
roll
call
push
adc
xor
mov
cltd
add
sarb
addb
jno
in
icebp
fcompl
dec
ja
add
xchg
insl
rcrb
add
loop
jle
repnz
stos
push
mov
sbb
dec
aad
mov
xlat
fs
add
lock
jmp
insl
push
push
jecxz
clc
movsl
or
popf
push
out
mov
mov
jecxz
cs
cmp
movups
dec
dec
and
iret
xchg
test
dec
outsb
mov
xchg
pop
addr16
jge
inc
mov
or
mov
arpl
rcrb
mov
jae
adcb
repnz
sbb
das
mov
fistpll
lock
add
sbb
mov
push
sbb
js
cwtl
hlt
ss
je
and
mov
cmp
mov
lahf
mov
xchg
out
push
mov
inc
lods
jp
push
imul
xlat
shl
mov
data16
pop
jne
pop
lock
je
and
les
movsb
orps
push
jp
cmpsl
int
adc
mov
push
adc
sbb
orb
sbbl
cli
mov
and
out
mov
inc
enter
mov
or
inc
fisttps
adc
insl
movsl
dec
cli
and
sti
adc
loopne
idivl
mov
scas
lret
lock
insb
cmp
xchg
add
test
ret
xor
sub
lea
cmp
xor
add
aaa
sub
out
sbb
mov
and
cmpsb
mov
roll
jmp
in
cmp
add
mov
inc
mov
xchg
mov
mov
sbb
test
gs
addl
das
push
jno
mov
mov
das
pop
sahf
add
nop
mov
jge
sub
pop
std
lock
xchg
xchg
loop
pop
jne
or
cmpsb
movsl
sahf
testb
push
shr
loop
cli
push
pop
cmp
cmpl
add
imul
fdivr
addb
incb
xor
sub
mov
test
fs
adc
cmp
jo
mov
mov
push
andl
mul
iret
pusha
adc
sbb
pop
adc
insl
sbb
mov
or
jbe
insl
xor
aad
loope
dec
adc
add
lret
repz
mov
jmp
test
jno
cmpsb
jne
mov
out
mov
pusha
mov
mov
loopne
push
mov
adc
adc
dec
xchg
in
mov
mov
ret
add
and
or
or
sbb
cmp
jnp
push
cs
adc
xchg
push
jecxz
and
push
jmp
dec
insb
sub
xor
insl
jmp
or
call
loop
jmp
arpl
arpl
inc
mov
inc
imul
push
stc
hlt
add
orb
mov
imul
imul
roll
xchg
adcb
test
movb
xorb
loope
push
mov
arpl
out
sahf
xchg
jg
inc
cwtl
xorl
arpl
sub
clc
into
add
clc
adc
jo
in
jp
inc
adc
xchg
dec
mov
xchg
or
inc
pop
sti
mov
push
adc
movsb
adc
movsb
xchg
push
lcall
dec
psubq
jae
leave
cmpsb
sub
out
sbb
outsl
mov
mov
in
push
xchg
or
aaa
sbb
repnz
push
mov
data16
fldcw
cmc
xlat
adc
sbb
popa
xor
shrb
popl
sbb
mov
push
mov
or
sbb
outsl
and
clc
sbb
call
call
inc
and
cmpl
push
jns
test
hlt
or
add
sub
sbb
pop
push
xchg
cltd
cs
lods
xor
lahf
xchg
adc
adc
push
or
push
dec
sub
and
adc
cmp
mov
mov
cli
xor
aas
jno
xchg
les
int3
test
jae
js
sarb
mov
das
lds
cwtl
fucomip
mov
popf
xlat
outsb
sbb
jmp
or
lcall
cmc
aas
mov
imul
xor
inc
ja
mov
sbb
push
pop
jb
jnp
clc
mov
push
aad
add
mov
repnz
cmpsb
mov
mov
inc
or
lock
inc
mov
sub
adc
fistpll
add
sbb
mov
and
push
mov
rorb
sub
xchg
or
pop
add
mul
out
sbb
add
flds
imul
iret
cwtl
inc
cltd
sub
pop
xor
mov
mov
cmp
mov
or
or
push
inc
and
aas
out
inc
pop
test
mov
xchg
inc
in
push
mov
andb
or
xor
movb
inc
push
ret
cltd
adc
into
stc
sub
inc
stos
jecxz
dec
push
xlat
inc
mov
pop
or
out
xchg
imul
testb
fdiv
mov
sahf
push
inc
je
addb
imul
jg
inc
stos
push
jp
je
lret
mov
mov
movsl
mov
or
lods
or
mov
cmpsl
in
dec
adc
mov
mov
mov
jge
mov
pop
jmp
test
inc
loope
add
rcrl
pop
jb
sbb
adc
jmp
dec
fldcw
add
mov
aas
jno
inc
adc
ret
push
push
aam
or
stos
mov
or
inc
mov
sbb
inc
inc
inc
jmp
mov
bound
bnd
imul
lds
add
pop
divb
ret
icebp
and
mov
add
mov
xor
xor
in
subl
lds
fcmovb
xor
icebp
adc
xchg
outsb
aaa
sbb
mov
loope
iret
mov
sahf
cld
sub
dec
int
xor
cmp
jp
push
push
sti
sub
adc
test
leave
mov
call
rclb
jmp
mov
dec
scas
dec
scas
jp
js
nop
jne
jle
sbb
pop
dec
push
ljmp
rorb
lods
out
pushl
test
jl
cs
mov
shrl
sbb
jb
push
cmpsl
adc
cmpsl
xor
inc
fisttpll
adc
subb
push
les
clc
xchg
and
lahf
push
inc
xchg
xchg
add
inc
sbb
cmpsl
sbb
imul
mov
sbb
dec
orl
decl
pop
adc
nop
in
popa
cmpb
aaa
jns
movhlps
xchg
inc
mov
aas
xorb
mov
cmp
cmpsb
aaa
je
sahf
call
or
rcl
mov
insl
mov
ret
subb
and
jl
pop
jne
in
inc
arpl
xor
fimull
lea
loope
sub
lret
out
sub
add
xchg
mov
jmp
jecxz
push
inc
dec
xor
aad
jb
sbb
repnz
pushf
jbe
mov
cwtl
es
push
ret
pop
outsl
fisubl
arpl
push
and
lods
arpl
adc
dec
movsb
xchg
inc
cli
pop
pop
pusha
repz
jl
inc
enter
dec
sbbb
outsb
subl
sub
and
inc
daa
jb
add
sub
fwait
icebp
mov
inc
mov
insb
loope
xchg
mov
stos
and
jo
shlb
cmpb
rorb
sete
dec
add
repz
push
xlat
or
cmp
push
xor
cmpl
frstor
push
pop
je
and
or
mov
dec
scas
or
push
popl
js
arpl
je
sbbb
in
call
lret
mov
test
dec
mov
mov
and
insl
test
ds
inc
mov
inc
adc
mov
or
ret
push
pushf
pop
les
rolb
sbb
stos
addl
stc
in
adc
subl
icebp
es
je
jne
cmp
cmp
and
xchg
push
fwait
pop
mov
aad
and
ficompl
pop
ficoml
xor
imul
and
aam
inc
push
mov
or
jp
hlt
cwtl
sti
mov
sbb
mov
lds
cmp
outsb
sbb
arpl
in
xlat
mov
in
sti
inc
xlat
clc
fsubp
jmp
mov
shrb
fcmovu
jae
cld
loop
dec
and
imul
mov
mov
dec
popf
fwait
mov
scas
xchg
btr
test
shl
leave
jo
jmp
ds
sub
push
and
dec
cli
jle
cmpsb
sbb
popf
movsl
mov
cmp
adc
mov
add
mov
js
and
mov
loop
push
mov
aam
sbb
cmpsl
mov
rclb
jae
mov
int
movsl
cmpb
insl
inc
sbb
push
or
pop
enter
cld
mov
pop
lock
adc
bound
add
in
nop
inc
lea
lea
mov
rclb
dec
xor
xchg
sbb
and
insl
mov
cmp
dec
jns
enter
jmp
and
adc
mov
xchg
daa
cmp
jg
mov
leave
mov
sub
sbb
xor
or
ds
test
insb
or
jo
inc
test
xchg
cmc
sub
clc
adc
mov
leave
rcl
or
pop
inc
pop
mov
lret
jns
push
cmc
xchg
and
sub
inc
outsl
sbb
pop
lods
cmpsb
pop
jnp
fmull
stc
cmp
inc
adc
dec
xor
js
fsub
inc
sub
mov
stc
mov
dec
adcl
inc
jmp
dec
or
jge
call
xor
push
test
outsl
sub
xlat
push
gs
add
push
xorb
cmpsb
jne
fwait
pop
iret
enter
sub
shll
aad
mov
mov
hlt
push
mov
jo
fidivrl
xchg
sahf
mov
lock
and
mov
add
xchg
and
ljmp
dec
dec
cmova
pop
loopne
cltd
dec
js
movsl
mov
leave
sbbl
or
cwtl
adc
inc
insl
push
divb
push
xor
sbb
add
in
sub
sbb
lret
loope
pop
push
in
pop
jl
jl
mov
push
sub
mov
jae
xor
and
jnp
cmp
push
cmp
inc
daa
sahf
lods
xchg
and
inc
xchg
rorb
mov
pop
sbb
mov
push
fcmovbe
sub
in
mov
xor
or
and
mov
andl
inc
fwait
mov
adc
push
add
mov
in
mov
sbb
int3
out
xchg
mov
cmp
xor
fistpll
mov
add
jmp
sbb
sbb
xor
test
dec
mov
lods
pop
inc
in
jecxz
pop
into
std
jns
xchg
dec
addr16
dec
icebp
adc
mov
shl
sub
mov
mov
dec
sbb
pushf
pop
rcrb
xchg
and
cmpsb
movsb
xchg
sbb
pushf
std
icebp
inc
clc
jp
js
inc
sbbb
xor
hlt
lret
jecxz
test
inc
add
add
fidivrs
add
pop
mov
and
arpl
mov
pop
pop
xor
push
mov
scas
sub
mov
push
mov
cmpsb
mov
int
xchg
jl
pop
int
das
dec
leave
and
aam
nop
xor
dec
je
ficompl
js
shl
popf
xorb
mov
hlt
aam
or
xchg
jg
mov
pop
mov
clc
sbb
inc
gs
and
mov
cld
jno
addr16
jl
mov
mov
stos
outsb
jne
aas
je
push
testl
mov
bndstx
push
pop
cmp
pusha
push
loope
push
ljmp
rcrb
push
inc
cmp
repnz
xor
aas
mov
dec
pop
mov
je
sub
or
jb
pop
xchg
into
mov
mov
and
js
mov
addr16
dec
sti
dec
or
pop
sbb
xchg
push
lret
loopne
push
lret
in
push
rol
add
or
push
psubsw
push
mov
sahf
xor
xchg
xchg
or
mov
out
sbb
inc
xchg
hlt
push
clc
in
push
mov
mov
jle
aam
cld
shlw
scas
shrl
loope
mov
pop
xchg
push
and
in
mov
insl
pushf
rcr
dec
sahf
in
imul
mov
imul
adc
lods
cmp
xchg
inc
std
pushf
aam
ret
or
int3
sbb
cmc
push
lcall
test
sub
mov
jbe
or
sbb
lea
ljmp
or
mov
pop
sbb
push
add
jne
daa
push
jne
xchg
add
dec
pop
cmpsb
test
mov
sub
mov
push
bound
cli
cmp
sarl
test
icebp
add
sbb
cmc
sbb
aaa
adc
iret
jae
inc
or
jne
push
rcrb
test
add
xchg
mov
dec
mov
and
movsb
xlat
jmp
loope
test
mov
testl
push
ret
xlat
arpl
sbb
int3
cmc
or
mov
push
jbe
gs
frstor
mov
incb
pop
rcrl
cmp
sarl
jl
sub
and
add
push
pop
rcrl
leave
bound
cmp
bound
mov
jb
jecxz
xor
outsb
in
mov
fistl
add
pop
jno
rcrb
mov
or
mov
std
add
pop
loopne
sbb
pop
mov
sbb
out
and
mov
dec
dec
push
xchg
and
call
push
and
jbe
xchg
jb
repz
test
test
fcoms
and
andb
lock
lea
xchg
sbb
xor
lods
test
push
push
adc
lcall
scas
aad
stos
sbb
inc
out
mov
jg
je
jg
push
dec
cli
jmp
sub
decb
lahf
xor
arpl
in
ret
rclb
scas
insb
cli
nop
mov
stos
inc
testb
push
sbb
dec
pop
lret
loopne
cmpsb
out
das
push
jbe
in
push
jne
lcall
mov
gs
dec
mov
rorl
mov
add
je
xchg
sahf
and
in
inc
adc
push
sub
aas
mov
sub
repz
inc
scas
adc
sub
push
pusha
test
mov
je
sub
or
push
xchg
dec
shll
and
push
adc
mov
xchg
js
jecxz
push
xor
dec
sbb
lcall
and
pop
jnp
add
adc
mov
mov
fwait
inc
jnp
and
mov
movsl
jle
jg
or
xchg
js
xor
mov
cwtl
xbegin
jns
xchg
aas
dec
mov
cltd
xchg
push
in
in
or
add
pop
lea
or
jecxz
jb
or
fstps
pop
in
sub
and
sub
in
fisttps
imul
imul
mov
mov
into
subl
or
loop
dec
sub
and
cmp
jbe
xor
jmp
cmp
add
sub
jns
jo
adc
cli
in
out
and
add
pop
rclb
imul
clc
mov
and
pop
movb
das
fildll
cmp
xor
in
fdivl
shll
pop
lods
jecxz
test
es
icebp
imul
jle
inc
inc
adc
inc
outsl
mov
out
pop
lcall
cmc
adc
mov
dec
pop
sbb
call
out
loopne
pushf
push
icebp
push
sbb
imul
rolb
nop
loop
adc
adc
shll
mov
add
adc
push
mov
dec
xchg
adc
or
outsb
mov
ljmp
mov
ret
fadds
cmp
and
shr
xchg
pmulhuw
inc
jmp
jo
loopne
fwait
push
mov
sbb
sub
xchg
jp
sbb
roll
fisubrs
add
cmpsl
jne
fstps
sbbl
inc
clc
sub
mov
mov
xor
cld
rolb
fidivl
nop
mov
cmp
push
testl
and
popa
aaa
inc
inc
or
in
movsl
cmp
imull
lret
pop
mov
xorl
xchg
scas
shrb
jno
jp
in
adc
roll
fidivrl
mov
hlt
aaa
jne
enter
dec
and
cmp
mov
jno
xchg
inc
pushl
ds
dec
sbb
std
loope
xor
adc
enter
or
shll
xchg
sub
mov
orl
mov
or
cmp
mov
sbb
sti
jmp
jne
or
loop
add
cmp
movsl
mov
jne
mov
sbb
loop
push
mov
cltd
das
sahf
lahf
icebp
and
xchg
out
shl
and
and
sahf
cwtl
cmp
in
jecxz
cmp
pop
dec
mov
jno
mov
jnp
pop
jl
and
cld
mov
adc
cmp
sbb
push
push
add
add
cltd
add
in
push
popa
lcall
out
push
movsl
adcb
pop
mov
stc
shlb
mov
sbb
cli
shll
cmp
fcoml
pmuludq
jmp
xchg
pop
popf
sbb
mov
fwait
inc
mov
cmp
xchg
inc
js
mov
pusha
sbb
and
mul
adc
les
pop
test
movsb
xchg
jle
add
cmpsb
mov
xchg
mov
roll
add
xchg
clc
mov
cmpl
int
pop
xchg
je
hlt
repnz
mov
nopl
sub
fmuls
and
in
ret
test
push
lods
or
scas
or
imul
push
push
xchg
test
in
sub
push
add
repnz
xchg
icebp
jo
sbb
fs
sub
fidivl
mov
iret
in
rolb
ds
jmp
in
mov
push
add
sbb
iret
pusha
cmp
aas
in
das
sbbb
mov
adc
dec
sub
push
add
icebp
adc
xor
fcmovbe
lret
movsb
std
add
mov
dec
inc
bound
fwait
int
imul
adc
sahf
stos
rclb
xchg
in
popf
lock
push
add
sbb
cmp
adc
sbb
mov
push
pop
sbb
repnz
lods
idivb
xor
adc
xchg
and
cwtl
pop
mov
mov
jae
loop
and
sbb
adc
jl
cmp
fwait
jnp
das
clc
xchg
inc
push
orb
pop
ret
cli
clc
and
mov
and
cs
shr
icebp
inc
push
scas
mov
pusha
call
pop
into
push
and
jle
xlat
add
jg
push
adc
test
scas
inc
sbb
mov
push
clc
test
push
scas
jecxz
add
push
ret
std
cmp
dec
dec
inc
lret
push
lcall
ficoms
dec
imul
and
scas
xor
pop
mov
dec
adc
push
aad
test
js
lds
and
cmovp
repz
scas
push
pusha
in
ljmp
popa
scas
scas
dec
aam
pop
dec
mov
jo
jp
jb
add
mov
es
shrb
add
loopne
mov
sub
es
pop
scas
dec
insl
xor
and
test
out
pop
ljmp
inc
mov
add
mov
scas
shlb
mov
clc
xchg
mov
shll
std
scas
xchg
push
and
or
push
push
and
jecxz
rcr
or
and
inc
push
cmpsb
pop
test
ds
daa
lods
inc
lods
mov
cmp
lock
adc
aad
bound
and
and
sahf
loopne,pt
insb
adc
fs
pop
sbb
frstor
push
xchg
es
loop
subb
push
arpl
inc
adc
xlat
loope
mov
mov
std
dec
jmp
and
mov
mov
cmp
adc
cli
insl
or
test
pop
fwait
push
push
cli
fdivrp
or
mov
ds
mov
fmull
xchg
mov
dec
xor
cmp
inc
cmp
push
add
jmp
sbb
mov
and
push
stos
jmp
mov
insb
or
jae
lcall
sub
lods
mov
fadds
or
test
jne
ret
add
xor
cmp
jno
dec
outsb
jg
pop
mov
stos
fwait
xor
movsl
or
add
ja
js
or
add
push
loopne
xchg
mov
scas
jl
flds
je
sbbl
push
sub
out
lcall
clc
sarb
ficoml
adc
sbb
jecxz
pop
jg
lods
daa
in
scas
or
lahf
pusha
faddl
movsl
in
jae
sbbl
xor
imul
lahf
xlat
test
inc
ja
and
jmp
sbb
dec
aam
dec
xor
scas
dec
pop
mov
mov
daa
jns
dec
pop
addr16
dec
aam
ret
push
fsubrp
subl
clc
imul
nop
mov
loopne
push
popl
push
adc
mov
je
stos
adc
sub
outsb
xchg
aas
adc
pop
sub
push
mov
dec
adc
popa
sub
jo
cmp
mov
xor
outsl
in
subb
mov
fs
dec
inc
sarb
testb
adc
daa
shrl
arpl
jns
mov
mov
js
push
dec
add
insl
in
mov
test
punpckhwd
xor
jb
xorb
gs
adc
jo
shlb
push
push
mov
scas
dec
cmp
pop
cli
sub
xchg
jo
add
or
mov
mov
xchg
cmp
sub
inc
test
fidivrl
insb
cmp
test
nop
mov
sub
sbb
and
call
int
pop
inc
fwait
jle
xor
movsb
inc
lock
mov
pushf
fs
add
cltd
and
addr16
fldenv
jg
mov
mov
mov
out
lock
push
sbb
out
pop
call
push
or
fcoml
cmpsb
pop
cmp
scas
and
rcrb
outsb
push
mov
cwtl
jmp
jns
hlt
lods
sarb
sub
cmpl
push
mov
sub
pop
jle
jp
xchg
and
imul
rorb
aas
int
movsl
in
sahf
lahf
ds
lret
fsubrl
loope
inc
aam
dec
rorb
bound
jmp
enter
aaa
push
jmp
or
cmp
add
lcall
cmpsl
jge
xchg
xchg
and
adc
jecxz
push
loopne
das
dec
fnstsw
cmp
in
jle
adc
int3
aaa
adc
dec
int3
pop
xchg
or
jbe
pop
test
movsb
xor
in
test
adc
and
in
scas
push
push
adc
divb
pusha
dec
jo
sbb
mov
and
stos
fs
fnstcw
hlt
jno
xchg
pop
cli
cwtl
jl
pop
shlb
push
faddl
jle
push
mov
add
aam
inc
add
cmc
xchg
mov
in
pop
loop
lods
lds
push
lock
inc
push
push
test
xor
dec
mov
je
or
sub
add
jne
pop
jecxz
sub
or
jne
xor
add
fnstenv
cmp
repnz
adc
inc
inc
or
sbb
daa
iret
test
inc
lock
adc
cmpb
lahf
outsb
imul
dec
xchg
ss
pop
add
xchg
dec
leave
fwait
xchg
test
jl
jo
jae
adc
jg
rolb
pop
push
xor
scas
outsl
pusha
jge
cmp
pop
xchg
add
adc
pop
mov
sub
cmp
pop
movsb
or
bndldx
ds
jge
and
addr16
add
leave
mov
test
popa
lahf
adc
aad
imul
daa
mov
mov
add
sti
loope
dec
dec
mov
sub
jns
mov
mov
and
out
mov
andl
pop
enter
push
xor
mov
test
pushl
cmp
fadds
push
pop
jo
push
js
jo
inc
xlat
insl
lds
dec
ficoms
insb
jno
push
jg
clc
mov
xor
insb
pop
in
adcb
xor
sbb
inc
adc
mov
lret
xor
xor
xchg
iret
adc
xchg
mov
mov
mov
aas
imul
dec
mov
jo
mov
jp
or
cmpsb
xor
ljmp
sti
inc
cmpsb
inc
sub
fmul
inc
shll
xor
or
xor
int
out
xchg
jo
dec
xchg
mov
dec
xchg
cs
aad
loop
std
aas
cmp
fisubrl
xchg
repnz
push
jb
insb
scas
jg
jne
inc
jb
stos
lcall
jo
jo
mov
dec
xchg
in
shlb
nop
shlb
xor
mov
loop
xor
inc
sbb
xrelease
mov
ds
decb
pusha
dec
cmp
movaps
icebp
mov
decb
pop
xchg
or
or
cltd
mov
and
mov
outsb
xor
jnp
loop
pop
call
mov
add
pop
das
cmp
cmp
jmp
in
clc
pop
sbb
add
popa
push
pop
les
in
pop
insl
loope
mov
or
shrl
fs
cmpsl
mov
in
mov
loopne
rolb
mov
pop
add
mov
lret
and
subl
jmp
test
jg
jecxz
insb
dec
cmp
lods
push
roll
mov
mov
dec
sub
hlt
loop
int
mov
cmp
rclb
sbb
push
dec
cmpsb
stos
xchg
test
mov
xor
aaa
inc
les
sbb
mov
and
hlt
jb
loopne,pn
dec
ds
mov
xor
xchg
and
cwtl
stos
aas
lock
scas
subl
jl
call
rclb
icebp
popl
lods
pop
pop
rol
pusha
ret
add
sbb
mov
in
push
sbb
cli
mov
jnp
push
cltd
scas
mov
sbb
pop
push
loop
and
jg
mov
icebp
inc
pop
xor
test
mov
sbb
xor
or
dec
outsl
into
nop
rolb
mov
ss
xchg
xor
mov
movsb
test
sahf
adc
pop
pop
add
in
xchg
movsb
subb
jo
int3
or
mov
outsl
insb
sbb
jo
ja
lods
mov
jl
aaa
mov
outsl
lea
sub
mov
xlat
pop
add
aad
stc
inc
test
inc
rorl
jns
sbb
push
add
ret
rclb
and
pop
mov
mov
cmc
inc
add
sbb
or
es
mov
add
xor
lahf
push
lods
es
inc
cmp
inc
jecxz
jne
push
mov
xor
loopne
out
pop
and
xchg
stc
das
cmp
push
fwait
adc
outsl
xchg
cmp
mov
fwait
push
clc
push
and
aad
enter
rolb
dec
and
stc
pop
xor
adc
jge
iret
add
lahf
daa
cltd
push
mov
pushf
xlat
movsb
sub
jne
insb
shrl
jnp
icebp
inc
ficoml
xor
cmpsl
icebp
scas
test
mov
xor
aad
jno
jle
ret
or
into
pop
pop
orb
mov
imul
pusha
lods
cli
loopne
stos
cmp
in
fnstenv
daa
pop
stc
add
lahf
sub
clc
xchg
out
mov
loope
mov
loop
insb
push
bound
xchg
dec
mov
fildl
mov
lcall
xor
xor
test
dec
pop
cvtps2pi
jnp,pn
int3
sub
mov
jne
xchg
pop
out
lret
inc
out
xchg
cli
inc
sbbl
adc
mov
add
add
daa
lock
out
and
lahf
scas
inc
mov
das
xchg
inc
out
inc
int
mov
sub
lods
xchg
test
mov
jg
xchg
orl
add
or
aam
jno
lret
push
fcmovnu
ret
xlat
sub
inc
nop
mov
iret
getsec
fiadds
and
scas
lock
or
imul
add
bound
push
mov
adc
lret
push
cld
xchg
push
ret
inc
je
xchg
add
roll
shl
and
sub
in
loopne
sarl
pop
gs
sub
mov
xor
mov
rcl
adc
cmp
lcall
stc
xlat
jecxz
out
mov
loopne
imul
push
lds
push
adc
mov
or
or
movsb
sahf
scas
pop
outsb
sbb
inc
movsl
and
lods
popa
lea
daa
mov
bound
mov
dec
enter
popf
scas
xor
inc
and
rorb
test
lret
add
mov
inc
outsb
mov
enter
roll
push
lea
jmp
movsb
mov
cmp
imul
xchg
mov
mov
mov
jecxz
out
sahf
shll
adc
add
test
mov
and
ja
cmp
mov
xor
and
inc
mov
mov
jae
push
cmp
pushf
cmpl
movsl
dec
nop
leave
loope
cmpsb
adc
arpl
or
lods
mov
lea
in
xor
lods
lods
clc
in
ljmp
fmulp
mov
jle
mov
cs
add
daa
or
sub
lods
inc
lea
mov
pop
rorl
sub
mov
jmp
mov
and
lods
and
inc
mov
cld
stos
ret
push
mov
jae
dec
stc
dec
loopne
xchg
pop
dec
ret
lods
call
je
rorb
fyl2x
lds
sub
mov
mov
pop
push
jg
icebp
repz
or
cmpsb
mov
mov
fs
add
mov
pushf
xor
push
mov
bound
dec
push
mov
idivl
or
xlat
movups
mov
loopne
test
mul
das
mov
pusha
adc
pop
mov
sbb
mov
out
icebp
loop
and
mov
outsl
lods
dec
mov
mov
cwtl
popa
popa
push
pop
adc
into
xor
add
pop
andb
into
mov
not
sub
add
xchg
ret
add
call
popf
in
add
fnstenv
mov
outsb
push
mov
das
shlb
test
mov
cmp
cmp
mov
xchg
jbe
mulb
adc
lret
repnz
fimuls
adc
pop
cmp
push
add
push
clc
fbstp
insl
popf
or
mov
clc
and
imul
pop
jnp
cmp
jle
lods
jnp
xor
jge
stos
pop
sub
or
test
ss
xor
push
shl
xchg
subl
in
adc
dec
xchg
test
inc
aaa
cmp
cmc
fsubp
sbb
das
cmp
cltd
in
fsts
cli
cld
adcb
lret
mov
movsl
pushf
movsl
cltd
mov
aas
xchg
fstpl
loope
fiaddl
adc
gs
data16
inc
sub
adc
fmuls
dec
popf
xchg
fisttpl
mov
inc
xchg
xor
ret
aas
add
leave
xor
hlt
or
jl
bswap
dec
or
xchg
add
jno
cmpsb
push
add
push
push
mov
call
inc
test
sub
adc
ret
rorl
cmp
pop
mov
xor
mov
mov
fistpll
and
mov
fildll
and
cld
pop
xorb
rol
aam
inc
pop
push
jecxz
and
dec
jnp
mov
inc
repnz
fwait
xchg
aaa
in
fmuls
mov
push
sub
mov
lods
pop
jge
inc
sub
leave
pusha
mov
ficoms
mov
jae
add
fldl
jbe
push
mov
ret
lock
and
sbb
dec
shll
push
scas
xchg
incl
cmp
ret
lea
mov
or
jmp
inc
popf
sub
ror
int3
lods
xor
sub
sbbb
xchg
js
pushf
lret
add
cmc
ret
xchg
call
pop
or
mov
enter
fstl
in
imul
fcmovnbe
lods
out
dec
add
add
fdivp
lcall
sub
add
push
jo
mov
test
pop
or
push
adc
jnp
add
sbb
push
inc
sbb
jbe
in
xor
popf
push
inc
xlat
adc
inc
jae
adc
pop
sub
inc
out
stos
jp
xchg
or
mov
xor
lods
mov
lods
or
mov
js
sub
push
push
mov
out
aaa
xor
es
mov
mov
loope
mov
int3
pop
dec
pop
mov
fidivs
add
aad
pop
icebp
jbe
sub
rcr
or
jle
mov
push
or
sbb
xchg
push
fwait
mov
dec
cs
popa
or
add
xchg
pop
mov
push
pop
cmp
push
pusha
nop
mov
adc
pop
push
mov
cmpsb
sub
sti
jp
aas
push
enter
dec
or
test
outsl
rcrb
dec
repnz
or
push
pop
fsts
andb
add
inc
data16
aam
jge
dec
cmpl
jl
or
xchg
clc
push
sbb
loope
xlat
mov
fwait
jne
adc
or
xchg
fbld
stos
cmpsb
pop
scas
test
xor
adc
dec
pop
dec
out
outsb
loope
rclb
inc
rorl
lock
or
xchg
rolb
fisubs
cmp
imul
mov
or
pop
push
loope
and
mov
mov
shl
daa
jae
push
in
iret
cwtl
outsb
push
add
mov
xor
icebp
nop
xor
in
popa
lods
repnz
inc
insb
or
cmp
xor
mov
std
cmpb
and
ret
je
sbbl
clc
icebp
and
jno
test
out
addr16
mov
scas
or
pop
adc
adc
sti
cltd
xor
mov
jl
jg
pop
cmp
test
sub
push
and
xlat
and
sbb
je
cmp
jge
movsb
mov
sbb
js
mov
adc
push
addl
lea
mov
mov
mov
enter
sar
rol
dec
out
add
mov
mov
sub
cmp
loopne
and
popf
sbb
mov
mov
mov
pop
push
mov
lcall
rorb
jmp
add
and
sub
pop
inc
xchg
xchg
add
in
lcall
mov
aad
in
adc
fnsave
mov
or
pushf
sub
fs
mov
popl
inc
and
adc
rcrl
push
push
test
lret
lea
or
lret
mov
sbb
jno
inc
scas
paddsw
test
mull
ljmp
cmp
or
lds
aad
mov
mov
mov
cmp
xor
jp
loopne
or
sub
dec
lods
rclb
enter
or
mov
stos
insl
cmp
jl
push
cmp
pop
sahf
and
adc
movsl
or
fwait
sbb
scas
or
popf
call
jmp
lds
inc
add
rolb
xorb
les
push
jecxz
out
arpl
je
inc
push
xchg
fists
xchg
cmpsb
popa
sbb
push
loopne
pop
dec
or
lcall
in
adc
add
jo
loope
test
aam
shrl
incb
push
test
cmpsb
mov
stos
test
loopne
jle
icebp
or
mov
jecxz
insl
add
and
mov
repnz
loopne
insl
sbb
push
jb
sbb
or
xor
aam
aam
repz
int3
and
in
movsl
out
dec
pop
and
or
cmp
adc
add
loope
jne
mov
push
mov
rclb
adc
popa
jo
aam
or
sub
mov
fidivs
mov
mov
mov
rcl
cmp
inc
xor
sub
std
sub
sub
adc
sbb
xchg
mov
insl
mov
pop
or
mov
cmp
enter
js
dec
insb
imul
adc
out
roll
dec
loope
mov
enter
and
pushf
inc
fs
mov
jmp
xlat
adc
mov
mov
scas
mov
mov
ljmp
push
sbb
push
movsl
icebp
mov
stc
loope
cmp
pop
push
pop
jns
aas
xchg
test
cmp
std
push
inc
mov
jmp
xchg
mov
lret
inc
cmpsb
pop
jmp
and
scas
fldl
imul
push
iret
add
xchg
in
and
popl
xchg
dec
shll
push
adc
inc
xchg
icebp
push
aaa
in
in
xor
inc
out
mov
sub
push
shll
stc
mov
mov
inc
dec
mov
add
testb
dec
xchg
out
mov
cmp
mov
xor
cmpsb
andb
dec
xor
cld
pushf
sub
rolb
mov
leave
push
pop
push
or
out
jno
jne
adc
adcl
pop
movsl
movsl
andl
gs
imul
pop
sbb
inc
fstl
pop
push
addl
ret
jle
jmp
subl
popa
pop
adc
cwtl
lea
std
les
cmp
jnp
scas
shlb
xchg
push
mov
or
loope
add
stos
mov
imul
movsl
adc
nop
aam
arpl
test
mov
js
shll
sbb
jmp
or
loopne
pop
movsl
lds
mov
push
filds
iret
mov
jne
push
arpl
mov
push
test
xor
push
fisubl
mov
xor
xchg
popf
sbb
int
jns
daa
pop
mov
jp
push
pop
insb
mov
out
add
gs
shr
xor
fdivl
mov
xchg
mov
incl
sbb
insl
outsl
mov
rclb
pop
jae
out
orl
mov
test
or
mov
loopne
jge
jle
dec
xor
jbe
lods
ret
or
fsubrp
dec
and
jb
mov
les
mov
inc
lods
hlt
sub
scas
call
dec
sbb
lahf
or
addr16
mov
stos
adc
mov
fidivrs
shrl
mov
cmpb
adc
cmovge
pushf
mov
push
clc
test
xor
and
adc
sub
sub
push
jge
out
push
pop
adc
or
pop
add
mov
and
inc
dec
push
sbb
adc
and
and
aaa
and
icebp
xchg
push
add
dec
and
mov
sub
aam
xchg
jg
sub
sbb
rcrb
aad
pusha
mov
dec
loopne
push
add
je
out
lcall
cli
xor
cld
call
call
sbb
jp
aaa
not
jmp
pop
mov
and
adc
sbb
je
je
stc
lds
mov
pop
jge
rorb
pusha
or
imul
movsl
stos
adc
mov
fsubr
pop
js
pop
or
mov
jle
in
dec
mov
jp
xlat
stos
scas
mov
sub
adc
neg
push
notl
dec
ljmp
push
sub
loopne
xor
push
loop
jg
popa
inc
es
sub
lock
lock
push
cmp
fldl
fmul
and
mov
inc
lea
cmc
push
dec
push
xchg
pop
std
push
xchg
ljmp
sbb
push
cmp
movb
mov
sbb
cmp
lret
and
arpl
mov
fsubrs
jl
jge
sub
push
pop
pusha
ret
sub
arpl
insl
jae
push
push
test
loope
sbb
and
mov
add
loopne
and
or
push
fs
xchg
mov
ja
xchg
cmp
adc
mov
stos
loopne
mov
je
fistps
rolb
jno
or
and
sbbb
jb
fcoms
sbb
fs
arpl
pop
or
xlat
sbb
and
imul
stos
test
call
xchg
push
rorl
scas
lds
mov
mov
aas
loope
adc
push
or
xchg
rol
jg
aas
sbb
pop
sbb
push
aam
adc
popa
xchg
das
sbb
push
iret
mov
addb
cmpsl
orl
orl
pop
lods
mov
mov
mov
je
cld
adc
push
mov
insb
mov
lcall
les
inc
sub
and
jp
loop
sub
xchg
pop
in
mov
lcall
aam
mov
mov
adc
sbb
push
loopne
and
das
addb
sub
pop
lods
jbe
mov
mov
cmp
je
add
pop
lods
push
mov
sbbb
lahf
cmp
cmpsl
lds
ret
cltd
xorb
icebp
xchg
lahf
push
rcl
push
xor
push
ljmp
or
testb
dec
stc
rolb
pop
mov
adc
inc
rcll
and
rcr
outsb
jmp
xor
inc
xor
mov
lock
push
mov
push
push
push
pop
out
pusha
mov
aam
or
xchg
or
cmp
cmp
arpl
mov
pusha
ds
mov
mov
xor
jl
movsb
lods
iret
cmp
out
mov
adc
lret
cmp
loopne
dec
jp
ljmp
shrb
stc
shrb
mov
xor
or
fcomps
pop
sbb
iret
inc
mov
dec
sub
and
loope
lock
sahf
shl
mov
loope
dec
fidivrs
pop
jl
lret
cmp
adc
cli
aad
pop
xlat
xor
test
mov
cmc
dec
push
dec
and
add
es
stc
sbb
fwait
lcall
clc
lret
movsl
lock
xchg
lds
clc
mov
adc
push
addr16
push
js
pop
dec
xor
decl
seto
pop
mov
or
or
sti
lock
or
movsb
data16
xor
dec
or
mov
mov
pop
mov
jl
icebp
fdivrs
loopne
xlat
pop
sub
push
ja
rorb
decl
sub
jno
mov
cmp
dec
jl
xchg
xchg
fisttps
fmull
jecxz
clc
shl
pushf
shr
sbb
inc
pusha
int3
inc
mov
into
mov
test
insb
sub
push
out
dec
jo
pop
pop
nop
add
ss
outsb
repnz
pop
scas
add
test
lcall
in
ds
addr16
outsb
xor
es
and
clc
or
sbb
push
jbe
cmpsl
dec
aaa
js
daa
dec
pop
clc
je
mov
cltd
daa
jg,pt
subb
xor
inc
push
mov
popa
subb
cmc
js
cmp
xchg
adc
mov
jecxz
shlb
fmull
clc
push
mov
mov
sub
or
inc
pop
les
cmp
out
loop
pop
add
pop
xlat
jge
clc
mov
movsl
adc
pop
mov
jbe
dec
jp
pop
sub
jnp
xchg
sbb
cmp
pop
and
jecxz
cmp
xor
iret
scas
lods
icebp
jl
and
mov
mov
ficompl
pop
int
into
fwait
out
call
and
subb
testb
mov
push
pushf
sbb
lahf
fimuls
adc
and
cvtpi2ps
and
push
fsubr
inc
clc
push
mov
push
cmp
push
fmuls
fisubrs
hlt
lds
mov
xchg
outsb
pusha
aaa
pop
cmp
push
es
cmp
stos
cmp
repz
ja
add
or
jle
and
jge
xlat
std
dec
mov
nop
mov
push
fimull
xchg
fnstenv
cmp
mov
icebp
fwait
popf
addb
fcmovbe
sub
hlt
lcall
inc
jecxz
xchg
clc
dec
int
ss
mov
mov
inc
andb
dec
out
xlat
inc
add
jle
jl
scas
inc
mov
out
dec
mov
imul
push
add
call
outsb
cmc
popa
pop
addr16
int
or
push
cs
aaa
sub
jg
pop
movsb
mov
repz
sub
lods
icebp
push
cmp
inc
mov
cmpsb
out
dec
aas
pop
pop
pop
clc
push
mov
les
shll
rol
ret
jge
shrl
je
and
inc
movl
movsl
incl
lea
andb
pop
cmpsb
out
jl
cli
jmp
es
mov
popf
dec
dec
xchg
lahf
shl
adc
test
loopne
add
negb
aad
xor
shrb
jecxz
sti
jp
icebp
adc
lcall
sbb
adc
dec
mov
movsb
movsl
sub
out
ds
xorl
stos
and
jbe
icebp
jns
ljmp
imul
jg
jne
jae
dec
lods
mov
in
int3
push
add
jns
sarl
mov
inc
loope
loopne
inc
add
iret
push
push
jne
inc
ds
sub
inc
dec
movb
test
lret
int
push
xor
imul
roll
xchg
sbb
or
insb
mov
lcall
jle
shlb
jae
lcall
pop
or
mov
sbb
scas
test
or
fldl
add
stc
inc
andl
mov
out
out
push
movsl
hlt
imul
cmp
stos
insl
inc
loope
mov
sub
int3
mov
andb
das
or
jl
shlb
jb
jl
loop
sbb
cmp
push
sbb
and
icebp
addr16
ja
jg
push
cld
cmp
xchg
sub
inc
lods
pop
sbb
ja
aad
repnz
pop
hlt
or
imul
inc
ljmp
pop
fwait
push
out
hlt
xor
or
cli
out
fs
mov
aaa
jnp
adc
leave
mov
test
inc
dec
stc
sbb
jl,pt
cmp
jl
popa
or
fstl
dec
cli
iret
cmp
jge
imul
and
adc
inc
inc
aas
pop
daa
cmp
add
orl
jle
testb
pop
dec
mov
cmpb
inc
xchg
adc
push
imul
inc
dec
sbb
xchg
stos
adc
enter
mov
mov
jae
ss
je
mov
mov
and
inc
add
mov
jmp
idiv
ss
sbb
inc
jge
jl
dec
mov
popf
push
jo
push
daa
or
sbb
loope
loop
mov
mov
sub
and
fdivrs
dec
adc
jecxz
pop
jbe
xor
mov
cwtl
inc
xor
faddl
out
ss
ret
add
mov
inc
push
stos
stos
fldenv
jae
int3
rorb
scas
sarb
in
mov
mov
in
sbb
clc
clc
ljmp
test
add
sbb
sahf
xor
hlt
cmp
jl
lret
hlt
imul
dec
scas
shll
cmp
xlat
mov
xchg
mov
nop
cwtl
into
push
pusha
roll
push
je
lret
dec
ret
fadds
or
cli
xor
pop
cmp
xorl
dec
inc
out
and
fsubrs
and
inc
push
jnp
or
icebp
mov
jbe
subb
dec
icebp
andb
mov
fildll
xor
sub
sbb
add
xor
and
jae
fisubrs
jl
pop
into
mov
sbb
cli
ja
lds
outsl
pop
fimuls
xor
jmp
ljmp
mov
adc
push
adc
push
sbb
mov
jne
cli
divl
outsb
arpl
adc
addr16
aad
adc
popa
and
scas
bound
lret
dec
inc
cwtl
movsb
adc
add
and
int
into
jns
push
roll
hlt
addb
aaa
mov
inc
dec
loope
add
inc
jo
inc
xor
sbb
stos
fstps
xchg
jbe
cmpsb
in
dec
xor
push
cmp
xchg
cs
std
adc
pop
test
pop
fmuls
adc
repnz
lock
and
sysenter
pop
lcall
lds
xor
xchg
add
roll
mov
adc
inc
sub
sahf
pop
pop
add
jno
sub
mov
sub
sar
out
add
cmpb
shl
sbb
daa
pop
pop
add
jle
add
pop
cld
mov
pushf
and
sub
pop
lret
add
sub
adc
push
outsb
jecxz
nop
sub
or
xor
rcr
orb
push
cmp
mov
and
xor
or
call
les
aas
cmc
inc
and
inc
cltd
adc
test
push
cwtl
mov
mov
mov
inc
push
fistps
stos
and
int3
pop
cld
testl
sub
pop
mov
inc
iret
and
lock
cmc
adc
in
add
fwait
pop
lar
pop
rcrb
jl
xor
xor
add
inc
cmp
lea
shrl
imul
out
push
dec
xchg
lret
test
mov
clc
es
dec
cs
adc
sub
xchg
mov
cwtl
test
push
sbb
imul
loopne
cld
mov
or
les
xor
daa
mov
cmc
aad
test
mov
pop
add
icebp
adc
pop
hlt
xor
mov
shlb
push
push
repnz
push
insl
stos
cmp
sbb
pop
adc
xchg
faddl
aam
lret
ss
pusha
push
shll
jl
or
add
ret
xchg
mov
push
add
jle
mov
inc
push
sbb
jo
pop
pop
sbb
inc
mov
add
inc
mov
lods
mov
lret
and
sbb
lret
lods
faddp
adc
mov
lret
and
pop
orb
xchg
fsubl
adc
or
and
sub
repnz
mov
ret
add
mov
loop
fs
push
jle
or
inc
xor
cmp
xor
movsb
or
mov
inc
push
rcrl
jp
popa
cmpsl
push
and
mov
jo
xchg
out
iret
push
pop
outsb
aas
sub
out
add
sarl
push
rclb
cmp
dec
out
cmc
ret
ljmp
push
fs
inc
xor
js
mov
mov
sbb
mov
sbb
or
lar
inc
ds
xchg
scas
inc
pop
add
inc
xchg
xor
pop
push
lods
inc
xor
ficoml
mov
xor
or
push
aaa
fucomi
xor
xchg
cmc
sbb
ficompl
and
inc
test
dec
sub
imul
and
les
aad
inc
mov
add
mov
sbb
pop
inc
mov
push
and
fisttpl
pop
pop
xor
or
rcll
daa
sbb
call
adc
jl
cltd
into
mov
in
lret
sub
sbb
subb
pop
jle
mov
bound
sub
pop
rcll
inc
sti
mov
adc
push
fisubl
inc
aaa
mov
pop
mov
fdivr
sbb
xor
xchg
sub
ret
rcrl
jnp
adc
inc
cmp
shrl
dec
shlb
xchg
xchg
or
loope
xchg
pusha
adc
pusha
and
bnd
lret
mov
test
or
dec
rcll
aaa
sar
ret
das
les
jnp
and
rorl
push
mov
jne
mov
addr16
adc
jl
cwtl
or
jnp
out
inc
mov
das
pop
leave
lods
mov
iret
and
shll
mov
jecxz
mov
dec
sbb
mov
inc
mov
cmpsl
lock
xchg
outsb
outsb
xchg
add
das
cmp
adc
jno
sti
mov
rolb
test
push
std
xchg
inc
mov
rcr
pop
hlt
iret
js
jbe
stos
sub
addr16
xorb
out
dec
popa
je
adc
dec
cld
dec
push
push
mov
lods
adc
or
sar
mov
mov
std
mov
stos
or
mov
cmp
scas
das
adc
sbb
aas
jle
add
aam
imul
mov
clc
add
mov
aam
sbb
cld
mov
ret
std
xor
pop
fcmovbe
jne
push
addb
test
adc
dec
add
mov
ljmp
cs
cwtl
aaa
aad
mov
cmpsl
and
aad
inc
outsb
sbb
dec
jb
jo
dec
pusha
ss
xchg
xor
loope
cli
pop
in
addr16
movsl
shr
clc
gs
fndisi(8087
daa
loop
push
mov
push
mov
aam
cmp
into
xor
test
test
mov
call
push
xor
nop
into
or
scas
neg
out
push
or
push
xor
mov
add
inc
sbb
mov
inc
adc
rorb
mov
xchg
and
pop
incb
enter
jo
inc
cmp
loope
xchg
push
or
addr16
push
adc
jmp
loope
or
lods
add
jmp
rorb
sarb
fiaddl
and
push
fldenv
pop
aam
mov
jge
lahf
int
aaa
pop
das
jo
add
cmp
stc
imul
lds
jmp
cmp
jl
sahf
insb
sbb
fidivrs
sub
in
push
add
inc
pop
pusha
test
mov
or
inc
ja
lods
shll
clc
icebp
into
hlt
arpl
iret
aaa
int
jbe
and
arpl
in
sbb
js
pop
jp
adc
push
cmc
add
inc
decb
fildl
ds
arpl
mov
sbb
sbb
nop
inc
xlat
push
out
mov
and
stos
inc
pop
sub
jg
in
in
xchg
adc
fildll
inc
push
push
jp
addl
and
and
jecxz
enter
add
and
in
mov
cmp
push
mov
lods
lds
jl
cmpsb
add
xchg
sub
lock
inc
dec
xor
xchg
sbb
test
addb
psrlw
adc
test
imulb
sub
fdivrl
xchg
push
mov
and
xchg
pop
je
ds
and
xchg
ds
add
xchg
push
xor
sub
mov
sbb
das
add
lret
pop
es
fimull
fwait
loop
inc
push
shlb
and
stc
mov
out
movsb
sub
xor
aad
arpl
xor
scas
mov
pop
sub
cld
sbb
cwtl
stos
shrb
rclb
xlat
and
stc
and
das
iret
or
push
pop
jge
add
daa
jno
sub
lret
mov
stos
lcall
cwtl
jl
fistpll
adc
jp
sbb
icebp
in
loopne
sub
mov
lock
or
call
clc
popa
mov
in
and
pop
or
inc
loope
or
push
and
sbb
cmp
cmpsl
pop
cwtl
lds
mov
cmc
icebp
filds
loop
dec
dec
flds
lea
jge
cld
das
jge
fnsave
sarb
sti
adc
xlat
fs
pop
mov
push
lret
jecxz
and
hlt
test
mov
out
mov
les
ds
or
adc
test
and
aas
xchg
test
xor
dec
frstor
mov
int3
jmp
test
mov
lock
outsb
orl
xor
sub
popa
push
mov
jmp
inc
lahf
or
lea
add
in
loopne
rcl
sbb
loope
push
mov
mov
push
or
or
pop
add
mov
dec
add
call
stos
popa
pop
mov
mov
jle
fs
jns
loopne
stos
les
cs
pop
dec
dec
sub
mov
xchg
adcb
loop
sub
rcr
jle
sub
jnp
cmpsb
xor
mov
or
cmp
lret
dec
inc
ret
push
repnz
cli
repnz
cmp
push
imul
sub
inc
das
or
fwait
inc
pop
cmp
jl
enter
mov
add
clc
or
adc
mov
icebp
lahf
add
mov
mov
bound
sbb
incl
sub
xchg
stos
mov
mov
clc
mov
xchg
push
idivb
loopne
loopnew
cld
aas
test
xchg
jb
imul
sti
daa
mov
add
add
sub
adc
hlt
inc
add
push
lock
cld
push
jnp
rcll
pop
mov
pop
fmull
and
or
lock
xchg
inc
and
inc
fildll
mov
inc
xchg
add
mov
aad
xor
inc
lds
mov
mov
sub
sub
test
mov
sbb
dec
int3
ljmp
rcl
jmp
inc
pop
lock
pop
ret
sbb
push
sub
or
das
lods
movsb
xchg
mov
pop
jo
adc
jecxz
mov
jb
dec
mov
cmp
sub
or
lock
add
or
cli
dec
pop
jg
nop
sbb
leave
inc
ret
sub
push
cmp
pop
or
bound
push
mov
lods
xchg
and
fwait
add
roll
dec
jne
stos
adc
adc
jge
xchg
loope
mov
dec
dec
jmp
xor
dec
mov
daa
xor
loop
cmpsb
fdivrl
daa
xor
mov
bswap
addl
adc
add
or
inc
or
ljmp
and
xchg
sbb
fsubr
xor
mov
loopne
add
lods
test
xchg
ficomps
or
inc
cwtl
arpl
xchg
jae
inc
icebp
cmp
cmp
into
cli
cmpsb
mov
mov
jns
or
xchg
or
aad
ret
mov
mov
jge
push
inc
test
cmpb
jp
daa
ret
push
or
lcall
push
stos
or
or
test
adc
cmp
mov
sub
mov
jle
and
shr
inc
xchg
shrl
call
scas
std
out
pop
pop
sbb
cli
stos
data16
xor
rol
cmpsl
mov
cmp
dec
xor
mov
cmpb
nop
mov
jbe
enter
test
dec
shrb
inc
mov
das
jl
sbb
pushf
push
fmuls
outsb
jg
mov
adc
and
enter
fs
je
sbb
adc
pop
xor
cwtl
xchg
mov
inc
imul
xchg
xor
call
add
pop
fcomp
scas
inc
xchg
movsl
add
repnz
clc
sbb
cmp
cmp
add
pop
jo
xchg
dec
cmp
add
and
ret
pop
push
mov
pop
jno
loop
adc
aaa
shl
movsb
loop
dec
pusha
fmulp
add
adc
jecxz
not
mov
cmpl
jmp
push
jo
loope
mov
fists
das
xchg
sub
insb
mov
js
ret
loop
ficoms
xchg
pop
mov
jbe
stos
ret
adc
fsub
imul
ljmp
popa
call
jbe
xor
push
add
inc
lahf
jle
pop
rclb
lahf
mov
jns
push
rorb
addl
mov
jae
mov
cmp
test
cs
xchg
cmc
outsb
push
icebp
repz
inc
mov
dec
dec
or
inc
xchg
jp
pushf
sbb
ret
and
mov
nop
insl
popf
sbb
xchg
lods
jg
push
adc
aad
mov
mov
mov
loop
icebp
cli
push
insl
push
int
mov
pop
shl
sub
arpl
hlt
pop
aad
daa
xchg
call
loop
lds
xchg
xchg
aad
rolb
dec
mov
incb
loopne
ds
cmc
push
sub
lret
inc
clc
das
mov
lret
mov
dec
outsb
push
pop
pop
pop
lcall
add
ficompl
bswap
cmpl
rol
cmp
xor
or
dec
jg
sub
or
das
pop
sarb
cmp
jle
sbb
cmp
push
jne
cmp
add
or
shll
and
std
iret
xchg
fstps
jge
adc
add
dec
inc
bsr
fildl
out
adc
aam
jl
lret
aas
add
lds
pop
and
mov
leave
addb
clc
fisttpll
inc
pop
sub
pop
xor
push
pop
jp
push
push
mov
and
stos
xlat
pop
mov
add
cmp
jg
loop
popw
les
test
repz
aas
test
jl
pop
mov
add
scas
ss
and
stos
sahf
icebp
dec
mov
dec
push
adc
loopne
cld
mov
push
out
unpcklps
iret
sbb
cmp
inc
xchg
popf
adc
ljmp
mov
xor
lods
xor
mov
aam
ret
xor
pop
out
push
imul
aad
ljmp
mov
in
insl
mov
lret
cmp
inc
arpl
shld
fldenv
inc
push
movsl
in
andb
jbe
loope
in
test
mov
adc
add
inc
mov
out
and
imul
inc
jae
pop
imul
test
cmp
aam
mov
inc
sub
shlb
inc
loope
mov
int
das
mov
sbb
mov
decl
mov
mov
adc
mov
inc
ds
fimull
pop
int
xor
pop
pop
sbb
lock
ret
lret
clc
mov
popf
or
mov
hlt
inc
xchg
fsubrl
les
jp
mov
roll
ret
mov
shll
shrl
or
lods
mov
daa
inc
out
mov
inc
and
in
add
std
mov
into
fxch
es
mov
rcll
push
mov
add
rcll
mov
bound
cmp
sbb
stc
int3
test
xlat
imul
clc
push
or
pop
pop
sbb
lock
cmp
pop
adc
cmpsb
dec
push
jl
test
cmp
pop
mov
dec
ja,pt
aas
inc
and
push
idivb
pop
adc
popa
aad
sub
pusha
sub
push
cmp
mov
pusha
mov
push
push
loop
lahf
sbb
popa
xor
cmpsl
inc
enter
xchg
sbb
cld
push
in
arpl
push
inc
icebp
mov
lds
add
fcmovb
arpl
sub
push
sbb
mov
or
mov
xchg
xorb
int
xchg
jno
sbb
mov
les
inc
scas
pop
inc
fwait
cmp
in
jo
out
adc
jl
xchg
in
fs
add
pushf
rol
lea
lahf
push
mov
sbb
test
fldenv
lret
gs
test
frstor
and
mov
and
call
outsl
jns
scas
and
sub
imul
sub
add
add
pop
cmp
lcall
push
push
jbe
pop
mov
mov
adc
pushf
and
cld
out
incb
mov
and
cmp
add
mov
and
es
cmp
inc
xor
jge
dec
shrb
push
ror
jo
aas
adc
hlt
lret
mov
jge
xor
shll
jl
pop
outsl
mov
push
mov
mov
ljmp
dec
inc
push
or
or
push
inc
xor
ror
dec
movsb
ss
push
ret
push
xor
insb
clc
roll
movsb
jp
fistpl
fwait
clc
jp
inc
push
mov
sbb
sbb
iret
fstpl
call
inc
int3
mov
in
mov
cmp
andb
daa
dec
cld
push
loopne
xor
adc
mov
in
fldln2
out
mov
mov
cmpsb
imul
out
sub
test
push
mov
and
jl
inc
rolb
push
mov
jnp
mov
call
push
fidivs
aas
jne
js
fidivl
orl
loope
push
jmp
aam
mov
jle
or
add
shll
adcb
stos
cmpl
sbb
lcall
rcr
push
mov
and
push
out
sub
cmpsl
xor
and
test
push
stos
jo
test
fisubl
sbb
inc
out
aaa
les
mov
lock
inc
arpl
xchg
les
xchg
movsb
test
and
adc
testb
inc
or
xor
pushf
pop
lods
es
dec
mov
movsb
jl
inc
out
andb
dec
popa
int3
push
add
mov
ret
fstpl
cmp
out
scas
dec
sbb
add
int
in
inc
inc
sti
ss
mov
cmp
push
mov
aaa
xor
hlt
outsb
out
lds
sbb
es
sbb
jl
pop
pop
or
shll
sub
xchg
push
popf
lock
popf
nop
sub
jge
dec
cld
stc
sbb
inc
sub
out
inc
scas
call
daa
pop
and
imul
add
inc
push
or
sti
mov
ljmp
push
jmp
sub
lds
popa
mov
into
sarb
or
or
popa
or
xchg
jle
cwtl
popa
push
in
arpl
loop
imul
dec
add
mov
pop
std
cmp
push
add
cmp
js
jmp
adc
push
sub
imul
xchg
jbe
lcall
popf
fnstsw
push
cmp
out
mov
add
je
mov
lret
loop
sahf
push
fwait
into
sbb
cs
inc
jne
mov
ror
enter
mov
cmp
loopne
pushf
push
cmp
inc
out
or
pop
add
iret
add
das
loopne
gs
cmp
ss
jg
mov
dec
and
or
adc
push
mov
pop
loopne
pusha
lcall
xchg
or
and
sub
xor
shll
mov
outsl
dec
lock
jo
sub
mov
mov
inc
dec
pushf
mov
adc
pop
test
test
push
adc
hlt
insb
push
and
fdivl
mov
lahf
cld
test
shlb
scas
pop
in
mov
subl
and
add
ljmp
jmp
mov
adc
clc
adc
fsubrs
inc
lahf
outsb
stc
xor
pop
sbb
je
inc
notl
sbb
rolb
xlat
pop
and
lock
mov
daa
call
arpl
decb
out
inc
dec
add
mov
lods
xchg
mov
movsl
test
shlb
repnz
nop
xchg
mov
lods
lret
repnz
inc
add
jmp
cltd
gs
push
je
std
stos
cmp
or
mov
sub
imul
fwait
lock
fwait
push
aam
aaa
mov
sub
scas
mov
mov
pop
loope
cli
and
mov
js
cs
xchg
inc
loopne
or
mov
test
lock
cmp
sbb
jecxz
cmpsl
dec
cld
dec
mov
inc
arpl
sub
les
pop
jns
lock
lock
xchg
roll
int3
add
mov
or
sub
std
int
loopne
inc
pop
cmpl
pop
sub
rol
js
movsb
dec
fwait
sub
pop
xchg
clc
scas
xor
inc
repz
ret
ficomps
ss
or
inc
xor
mov
dec
fdivr
dec
xchg
or
pusha
rolb
xor
inc
and
jb
pop
pop
xor
cmpsb
mov
stos
inc
sbb
loope
add
add
aam
jl
repnz
test
cmp
je
xchg
outsb
out
pop
and
mov
pop
xchg
das
pop
pop
or
mov
add
dec
add
or
push
lock
aaa
jne
cmp
add
dec
and
loope
rclb
push
stc
adc
push
outsb
adcb
jge
xor
movsb
cmp
mov
and
pop
cmpsb
cmp
pop
int
mov
inc
mov
sbb
into
cld
dec
das
push
or
lcall
jmp
lar
jecxz
cltd
dec
in
mov
test
clc
mov
jmp
jb
adc
inc
cmc
and
test
jmp
and
loopne
add
mov
and
xor
dec
sub
cmp
inc
jns
mov
out
test
inc
in
xor
fbld
and
scas
rcl
fbstp
jb
pop
outsl
mov
add
repz
sbb
push
fldz
and
leave
jo
jmp
pop
xor
push
mov
and
inc
push
stos
add
adc
std
in
rol
add
shrl
xchg
jae
aas
push
fdivs
jno
mov
mov
cmp
sub
sbb
clc
flds
xchg
imul
adc
stos
xchg
push
push
orb
mov
loop
lods
insb
mov
or
sub
jmp
sarb
jbe
call
mov
add
iret
sbb
adc
icebp
sub
test
repnz
ret
cmpsb
push
scas
mov
xor
add
push
mov
call
and
dec
jae
dec
or
add
lock
stos
clc
arpl
test
mov
psrld
xchg
shr
dec
add
mov
sbb
pusha
mov
sub
std
fwait
jno
fs
sbb
in
sahf
pop
lods
mov
or
xchg
mov
jmp
mov
ret
adc
jns
rorl
adc
and
pop
imul
std
sbb
xor
sub
loope
jp
leave
nop
subl
loope
inc
loope
pop
or
xchg
jle
mov
push
push
or
mov
ja
or
dec
or
cmp
aas
mov
sub
adc
mov
aaa
mov
mov
add
mov
jge
pushf
movsl
test
fcompl
inc
jecxz
xor
cltd
pop
arpl
popa
test
or
movsl
jmp
adc
inc
sbb
or
aaa
imul
lret
cld
sub
in
and
shlb
sub
pop
xchg
inc
ret
mov
xor
push
pop
int
insb
mov
into
test
adc
scas
or
push
and
test
mov
and
into
lock
sub
push
jp
xor
sbb
cs
jecxz
addr16
push
int
or
lcall
and
addb
arpl
out
cwtl
mov
jg
push
jae
pop
repz
xchg
xor
adc
lret
faddl
imul
pop
and
ss
lods
or
mov
mov
cmc
mov
les
dec
ljmp
mov
dec
push
or
rolb
jle
adc
jle
dec
xor
loop
and
or
inc
je
cmc
lock
nop
lcall
push
int3
stc
or
aam
jnp
popf
pop
adc
xorl
das
adc
pusha
test
push
cmpsl
popf
sbb
xchg
rcrb
loopne
push
sbb
jmp
outsb
sub
adc
test
movsb
sub
fimull
mov
js
hlt
aam
sub
xor
les
ds
clc
mov
sbb
sbb
outsl
pop
sbb
pop
pushf
mov
movsl
xor
popa
orl
push
xchg
cmp
sub
stos
cmp
push
push
mov
das
or
mov
insb
add
bswap
shrb
aaa
push
lahf
js
aad
mov
inc
hlt
sub
and
iret
sub
pop
mov
rorl
and
daa
outsb
lea
sub
push
sbbb
lds
icebp
loope
inc
adc
ljmp
imul
push
ret
rcrl
mov
or
roll
inc
jle
xor
add
and
js
insl
dec
jp
jl
cmc
pop
push
and
rolb
stc
je
jl
and
sub
sbb
mov
cmpsl
jge
test
hlt
xor
mov
xor
jno
and
jb
repnz
pop
inc
jmp
dec
sub
adc
pushf
mov
push
lods
ds
mov
lcall
inc
imul
add
add
sbbb
mov
push
mov
sbb
aam
rcll
int3
xchg
push
mov
xorb
cmp
sub
out
ljmp
cli
dec
push
test
jo
jnp
fcomip
pop
adc
mov
into
inc
stos
cwtl
mov
fimull
push
pop
mov
xor
add
sbb
andb
fwait
ret
pop
inc
ja
fbld
shll
adc
pop
lahf
movsl
sub
imulb
or
scas
icebp
jecxz
leave
stos
popf
filds
cmpsl
js
cld
or
into
ja
and
cmc
cmc
xchg
shll
rorl
jmp
push
adc
and
shlb
mov
cmp
inc
mov
js
fldt
fistpll
stos
mov
xor
out
push
dec
add
xor
sub
xorb
mov
mulb
cli
mov
addr16
inc
add
xor
push
sub
out
add
sbbl
orb
fildll
xchg
stc
es
pop
aad
iret
cld
adc
xchg
cmp
fimuls
adc
xor
push
mov
popf
pop
fcompl
mov
movsl
push
add
jp
mov
inc
pop
mov
sbb
fldt
mov
adc
shlb
mov
xor
xor
roll
xchg
xchg
mov
out
insb
out
add
stc
mov
mov
cmp
lock
jp
outsb
xorb
or
mov
bswap
sub
shrl
adcl
xchg
je
leave
mov
in
mov
jns
inc
lahf
push
mov
mov
outsl
js
lret
test
addr16
loopne
jp
popl
cmpl
cmpsb
push
push
popa
stos
les
out
push
cmc
inc
adc
push
insb
push
std
daa
and
and
clc
jmp
and
xchg
outsl
jle
sub
scas
xlat
test
xchg
mov
cltd
out
xorb
addb
lret
sbb
xchg
mov
mov
mov
push
lea
inc
insb
sbb
xchg
lds
ret
cs
frstor
push
insl
push
and
clc
in
cmp
jnp
paddd
int
xlat
gs
jns
mov
sahf
cs
jecxz
mov
cmp
sbb
dec
push
dec
insl
cmpsb
js
stos
scas
inc
cmc
cmc
gs
out
insl
ss
decb
cltd
sahf
fistl
jl
push
pop
lock
or
inc
mov
aam
aaa
leave
jae
cwtd
daa
jle
or
push
cmp
pushf
xchg
sbb
mov
sbbb
call
jne
or
cs
adc
insl
adc
out
or
and
jle
mov
mov
sbb
cmp
test
les
daa
add
rorb
dec
jnp
cmc
popl
or
movsl
xor
hlt
mov
cmpsl
cltd
cmc
xor
fldenv
pop
push
cmc
repz
stos
popf
mov
adc
popf
decb
mov
push
in
cmp
cmp
dec
push
popf
dec
loope
mov
and
in
es
jecxz
xor
mov
ret
loopne
nop
out
lea
push
pop
lahf
adc
cwtl
mov
subl
jle
cs
in
sub
mov
and
or
jae
pop
add
repz
or
mov
and
aas
movsb
dec
dec
out
sub
push
lret
pop
mov
cmpsb
xor
test
cmpsl
ljmp
mov
inc
mov
movlps
shl
sar
lret
jg
push
in
add
mov
movsl
adc
incb
mov
sbbb
xchg
dec
loopne
aas
mov
xor
bound
xchg
lods
pop
lods
inc
push
mov
jge
adc
push
inc
push
sub
bound
movsb
mov
mov
jmp
ffreep
adc
repnz
out
enter
xor
dec
sahf
xor
call
dec
push
mov
push
cmp
push
dec
dec
test
sbb
cmp
add
test
loopne
add
jns
sbb
addl
push
lahf
out
cli
or
xchg
call
cmpsl
rclb
sarl
cmp
cmp
or
mov
cwtl
or
sbb
add
js
mov
ret
lock
lea
mov
movsl
into
xchg
sarb
push
psraw
cmp
push
shll
bound
icebp
aad
push
repz
pushf
mov
dec
inc
data16
pop
dec
push
in
dec
push
inc
rcrl
out
pop
sub
daa
int3
faddl
scas
in
inc
dec
lahf
lea
stc
test
push
sub
leave
sbb
lods
mov
je
xor
mov
mov
loope
sbb
mov
dec
cmp
jmp
xchg
xchg
mov
sub
or
icebp
fsubr
inc
out
loop
mov
mov
cld
stc
push
push
jmp
stc
sti
pop
push
xor
into
jecxz
sbb
incb
mov
jno
push
insb
mov
xchg
mov
inc
sahf
lds
mov
push
push
cli
dec
popa
or
sub
int
inc
add
movw
hlt
jg
movnti
hlt
dec
jnp
and
pop
add
push
fistpl
sbb
fwait
out
mov
sbb
jge
xchg
shlb
in
scas
mov
and
xchg
imul
add
cmc
data16
mov
fdivs
xchg
ret
xchg
test
out
xorl
mov
fists
scas
clc
sub
imul
adc
cmp
lcall
adc
cmpsb
shl
mov
push
pushf
add
cli
sbb
cwtl
jg
add
push
jno
mov
into
mov
mov
mov
loopne
mov
pop
xchg
dec
pop
jl
loopne
je
and
mov
fbstp
pusha
add
mov
ljmp
mov
jne
push
cmp
mov
lea
jg
sbb
and
pop
fadd
jle
pop
mov
xchg
pop
lods
scas
adc
inc
pushf
sbb
xchg
movsb
sub
push
mov
push
bnd
ret
mov
andl
sbbl
insl
in
jecxz
mov
insl
push
negl
cmpsb
or
cmpsl
cmpsl
shlb
movsl
lods
mov
jp
xchg
dec
jno
mov
gs
mov
cmp
and
and
insb
lret
pop
fcomps
sub
pop
pop
jb
add
std
push
loop
pop
mov
xchg
push
push
sahf
pop
and
leave
cwtl
lret
fs
cmpsl
push
test
and
mov
xor
icebp
xchg
out
lds
lahf
loope
or
mov
fidivs
xchg
iret
push
adc
pop
mov
dec
xchg
sub
in
push
lds
push
push
dec
mov
dec
rcll
les
adc
stos
ds
xchg
mov
jb
pop
cmp
mov
mov
add
std
and
ja
ficoml
decl
add
fmull
xchg
cld
or
jecxz
mov
add
xor
mov
test
outsl
mov
and
add
mov
sti
outsb
ljmp
jg
pop
sar
addr16
inc
push
mov
mov
inc
fs
loope
fimuls
and
jle
inc
lock
mov
pop
mov
add
sub
push
lods
scas
fisubl
iret
shlb
pop
lods
add
insb
jmp
repnz
subb
mov
icebp
pop
sbb
daa
mov
pop
or
ds
in
imul
push
sbb
inc
andps
pop
add
scas
insl
inc
sub
popf
movsb
call
out
mov
xor
and
cmpb
dec
fsubl
mov
insl
ret
sub
adc
sub
sub
scas
outsl
mov
jbe
arpl
push
jb
cmpb
mov
xor
xchg
gs
fs
in
leave
dec
xchg
int
data16
jns
fcomip
mov
fistl
jo
jle
int
aaa
imul
or
jo
and
mov
int
hlt
pushf
push
mov
je
movsb
cmpsb
sub
add
sub
xor
push
pop
ljmp
test
ficoml
xchg
sbb
int3
mov
xchg
and
ret
lret
inc
dec
xor
test
xor
adc
inc
in
dec
push
ds
sbb
insb
setle
fnstenv
mov
rclb
fcom
subb
add
mov
add
in
stos
adc
mov
call
addr16
mov
mov
cmc
and
sub
inc
out
sub
mov
sbb
mov
xor
cmp
iret
xor
mov
dec
add
hlt
mov
orb
movsl
arpl
xchg
enter
decb
fmull
call
sar
aad
xor
push
inc
aad
jmp
mov
add
test
push
cmp
popa
mov
nop
mov
loopne
mov
and
fistl
and
mov
lods
cmp
sbb
sti
pop
xor
into
ror
iret
lock
inc
mov
xor
inc
inc
gs
sub
push
or
mov
lods
icebp
pop
push
cmpl
add
mov
andb
jne
pop
enter
or
pop
xchg
mov
test
xchg
lock
jnp
call
pop
cmp
pop
and
les
push
ja
or
scas
and
pop
loopne
aaa
xchg
clc
mov
mov
adc
shll
cli
int
push
jno
push
lods
test
adc
pushf
mov
ds
sub
cmp
pop
add
lods
sbb
mov
ljmp
push
fisttpl
insl
sbb
je
test
das
sub
push
inc
and
cmpsl
sub
loopne
or
loopne
xor
push
add
dec
pop
xor
int3
sub
test
xchg
pop
adc
xor
jbe
mov
push
mov
lret
leave
dec
push
inc
add
push
xor
mov
or
aas
ret
push
and
jbe
push
aam
not
xlat
mov
cmc
cmpsb
pop
cs
jmp
jle
xchg
pusha
fadds
push
add
push
and
test
and
fists
mov
push
outsl
ljmp
rcrb
xchg
add
pushf
add
jb
movsl
pmaxub
pop
add
xor
pop
or
loope
out
jo
jle
ret
test
cmc
xchg
clc
pop
push
aam
ljmp
imul
adc
ja
adc
or
adc
jnp
pop
loope
sub
ja
inc
outsl
repnz
push
ret
jmp
dec
test
cld
cmp
mov
nop
inc
mov
lods
popf
mov
cli
inc
into
dec
xchg
iret
leave
push
test
xor
fldcw
fldlg2
lods
aad
pop
jle
inc
xchg
mov
test
leave
outsl
movsb
push
xor
mov
adc
mov
mov
mov
and
inc
stos
aas
shrb
sbb
test
lahf
or
push
sbb
cmp
push
popl
divl
scas
mov
test
pop
pop
inc
jp
scas
lahf
xchg
pop
sarl
push
cmp
or
shlb
dec
fldt
fs
movsl
out
sub
cli
dec
loope
push
adc
xlat
inc
dec
outsb
xchg
mov
clc
test
scas
mov
aam
cmp
ds
mov
rorl
sti
add
ss
addl
sar
push
and
enter
mov
mov
inc
xchg
adc
dec
jp
ljmp
mov
stc
inc
mov
and
sub
stc
xchg
add
lcall
jmp
mov
mov
leave
cltd
mov
insl
and
adc
movsb
sete
pop
popf
lods
mull
pop
xchg
loope
sbb
test
mov
or
mov
dec
lahf
sbb
mov
xor
add
or
xchg
subb
in
js
xor
pushf
fs
cwtl
bound
in
dec
add
cmp
nop
shlb
sbb
xchg
lea
cmp
jb
adc
movl
fimull
xor
mov
lods
lods
push
in
nop
idivb
mov
cmp
jno
xor
mov
pop
add
std
push
adc
dec
test
add
dec
cmc
dec
inc
insl
dec
and
and
jb
fdivrl
adc
iret
lret
popf
mov
mov
arpl
dec
cli
scas
push
xchg
and
mov
mov
xchg
add
lods
push
test
inc
js
jg
inc
es
or
inc
lods
movsl
or
subl
gs
bound
push
insl
cvtps2pi
push
mov
dec
aad
jnp
mov
xorb
das
xchg
lods
pop
dec
loope
das
mov
out
insb
or
std
enter
mov
push
xor
inc
pop
xchg
js
cmp
cmpsb
push
imul
xor
aam
push
shr
mov
ds
in
out
push
sbb
pop
cmp
lock
xor
mov
push
outsb
outsb
inc
enter
loope
stos
inc
dec
out
jmp
loope
mov
push
cmp
sbb
lock
mov
pop
call
sub
jmp
or
pop
cmpsb
mov
xchg
icebp
test
jbe
pop
jle
mov
and
adc
sub
pop
bound
xor
lret
mov
shll
fcmovbe
add
sub
mov
shrl
inc
pop
stos
push
outsb
in
idivb
jp
pop
ja
push
mov
sub
popf
xchg
add
adc
adc
iret
imul
movsl
test
xchg
out
sub
call
dec
cwtl
adc
xchg
imul
es
push
sub
insl
sub
push
loope
mov
dec
mov
pop
or
repnz
mov
loop
aam
jb
sub
lahf
cli
daa
fstl
lods
add
add
dec
cmp
movsb
xchg
decb
outsb
dec
mov
mov
and
shll
push
jb
adc
lods
shl
dec
cwtl
dec
mov
mov
test
sti
and
stos
mov
out
jno
fwait
mov
adc
js
pushf
push
in
mov
fistps
and
aam
xor
leave
out
icebp
or
dec
sbb
mov
test
repnz
ljmp
and
add
das
xor
add
and
arpl
test
jnp
xchg
mov
xchg
aaa
out
push
push
push
mov
data16
dec
les
mov
xlat
pushw
and
mov
das
mov
js
aad
or
and
in
sub
jo
dec
inc
sbb
fisttpll
ljmp
sti
adc
push
stc
in
add
pop
lods
testb
sbb
popa
std
mov
inc
inc
cmp
mov
sub
idivl
cmp
inc
inc
xor
cmpsl
test
insb
mov
clc
adcb
xchg
adc
mov
xor
in
mov
mov
sub
sarb
push
movsl
cmp
adc
cwtl
xchg
push
jmp
lahf
jbe
add
std
popf
dec
movsb
cltd
stc
pop
ret
adc
in
sbb
lods
push
ret
dec
std
mov
sbb
js
lret
mov
xchg
jno
pop
aad
fcomp
xchg
jmp
pop
shr
cwtl
clc
pop
add
cmp
pop
pushf
stc
aas
fs
aas
and
pop
jae
lahf
and
iret
in
lock
orb
sarb
mov
dec
or
jmp
jg
pop
lods
inc
push
hlt
and
or
test
testl
lods
inc
push
jns
fdivrp
adc
mov
xchg
jge
mov
dec
sbb
int
mov
xchg
add
in
adc
add
pop
aad
aas
jnp
lcall
or
cld
dec
and
adc
dec
insb
jl
and
mov
loope
push
add
das
sub
sub
loop
jmp
inc
xchg
fstl
lods
in
mov
xor
and
aas
sub
and
xorb
loope
and
and
fldcw
or
xor
xchg
sub
pop
dec
push
sbb
fadds
mov
cmp
cwtl
hlt
dec
xchg
scas
test
mov
insl
sbb
xchg
sahf
sbb
dec
or
sbb
and
test
das
cld
pushf
cli
add
das
popf
push
mov
xlat
adc
cmpb
inc
sarb
dec
mov
in
lea
cmp
xor
inc
or
xor
lods
into
or
mov
push
xchg
mov
or
int
mov
fimull
js
mov
jp
ret
fistpll
adc
mov
jo
mov
pop
andb
sub
test
loop
inc
pop
xchg
or
pop
push
jge
adc
and
sub
sarl
es
jae
not
inc
mov
inc
adc
pop
jo
or
pop
cwtl
jle
inc
shll
fdivrs
mov
aad
sarl
popa
add
jmp
enter
jmp
mov
xor
and
icebp
mov
pusha
popa
add
popl
cmp
and
clc
adc
add
pop
cwtl
mov
test
push
nop
int
mov
add
cmp
mov
pop
scas
adc
mov
inc
lock
pop
pop
dec
push
add
mov
data16
ljmp
lds
add
nop
mov
add
call
popa
outsl
stos
dec
push
inc
das
int3
adc
push
cli
lods
es
sbb
mov
mov
femms
or
xor
or
inc
cmp
imull
outsl
sbb
and
dec
or
mov
in
inc
mov
mov
clc
sbbl
mov
inc
xchg
js
sub
cld
mov
rcrb
cmp
int
and
scas
sub
push
mov
loope
add
add
jge
test
mov
and
push
or
int3
or
pop
push
xchg
dec
lahf
mov
movsl
sti
jbe
xor
mov
adc
subb
subl
jl
pop
sbb
mov
fldenv
addr16
dec
fmuls
add
hlt
push
data16
fdivrp
fcoml
cld
adc
cmpsl
xchg
sbb
lcall
mov
rol
ljmp
jg
lldt
pop
mov
pop
sbb
pop
aaa
add
ret
movsl
lock
inc
test
fcompl
mov
call
push
daa
mov
scas
inc
cmp
or
daa
add
in
mov
in
jo
ret
rclb
movsb
inc
mov
or
add
xor
or
enter
dec
adc
sbb
inc
outsb
mov
sbb
dec
mov
mov
mov
loopne
push
addr16
arpl
rcrl
lret
in
movl
mov
mov
sub
inc
daa
sbb
pop
sbb
xorb
test
sti
sbb
int
out
xor
sub
stc
mov
inc
popa
inc
cmp
mov
push
stc
jg
sbb
dec
loop
nop
cmc
stos
add
adc
cmp
shll
add
cmpsl
sbb
xor
dec
mov
or
cmpsl
dec
cwtl
cld
cwtl
aam
pusha
and
xchg
or
shrb
jmp
std
and
jle
sbb
ljmp
rol
mov
mov
addl
xchg
inc
outsl
sbb
jb
orps
cmp
inc
sub
movsb
lods
or
dec
dec
inc
adc
xchg
jns
jmp
nop
sbb
inc
and
mov
and
jp
pop
or
test
inc
sbb
add
cld
xor
iret
adc
push
jl
mov
adc
into
lea
cwtl
lods
ret
cmp
sbb
xchg
sbb
and
add
lock
shlb
lret
push
pop
mov
pop
and
in
inc
cmp
dec
dec
cmp
inc
adc
test
cs
mov
loopne
sbb
adc
sbb
xor
mov
mov
pop
shrb
mov
aaa
pop
or
sub
cmp
frstor
iret
or
loope
out
mov
push
fsubs
out
jl
loope
cli
test
ret
loop,pt
push
mov
cmp
inc
xor
fdivrs
xor
cmp
and
addr16
jle
jno
in
xor
fldcw
outsl
gs
or
scas
mov
jmp
test
fst
jns
push
test
ljmp
outsl
inc
test
hlt
jmp
js
test
call
xor
imull
mov
test
mov
xchg
dec
iret
sarb
lock
les
push
cmpsl
dec
pusha
push
scas
or
mov
in
imul
bound
cld
loop
adc
imul
dec
mov
dec
insb
jmp
cmp
aas
jecxz
js
shl
loop
ret
or
arpl
xchg
leave
clc
pop
mov
add
jb
fisubl
jno
sbb
hlt
sbb
pop
pop
lods
xchg
push
pop
jno
and
add
sbb
push
mov
pop
ljmp
addr16
outsb
bound
hlt
inc
sub
xchg
fnstsw
sub
shl
loope
sub
aam
aad
xor
cmp
mov
fdiv
inc
xor
xchg
add
adc
xor
pop
ljmp
sbb
daa
mov
mov
addr16
inc
dec
push
xchg
add
cmp
sahf
rcl
push
mov
xorl
xor
xchg
test
mov
cltd
add
repz
lahf
mov
clc
and
adc
adc
sub
cmp
out
repnz
mov
dec
decb
test
and
rclb
shr
sbb
mov
fsubl
fdivs
cmp
add
sarb
and
dec
jmp
shlb
dec
inc
cmpsb
mov
fnstenv
push
or
jne
push
imul
into
pop
adc
cli
mov
cwtl
das
pop
lea
and
ret
xor
sbb
xchg
xchg
xchg
cwtl
stc
outsb
xchg
mov
push
jg
inc
mov
dec
sub
adc
sti
mov
ret
das
lock
sbb
test
in
mov
push
enter
inc
out
or
xchg
icebp
mov
sbb
jne
lcall
mov
sti
mov
sarb
dec
aaa
sbb
mov
cmp
dec
pop
xor
lret
or
push
cld
mov
std
out
mov
scas
inc
stos
inc
or
or
cmp
jecxz
jp
addr16
mov
pop
addb
pop
pop
mov
aaa
mov
divl
adc
scas
adc
fidivrl
xchg
or
cmovns
or
cmc
loope
cwtl
mov
add
sarl
aad
insl
mov
mov
out
sub
lcall
lea
pusha
push
sbbl
std
das
aad
bound
dec
inc
js
iret
repz
cltd
xchg
xchg
out
loop
pop
pop
cmp
or
sbb
clc
and
mov
in
dec
cmp
aas
cmpsl
xor
adc
dec
jnp
and
test
lea
jl
clc
jp
sub
roll
rorl
or
xor
add
bound
cltd
inc
inc
adc
add
and
mov
lods
lods
cmp
dec
and
mov
adc
add
and
mov
into
mov
out
clc
bound
add
popa
or
sbb
sub
inc
pop
sbb
mov
pop
inc
scas
xor
pop
adc
pop
add
jns
lret
testb
push
cmpsb
imul
mov
dec
dec
fs
xor
mov
hlt
mov
sahf
cmc
pop
xor
mov
push
ret
test
and
ret
push
and
mov
call
and
in
sbb
mov
push
jg
ret
movsl
fistl
lods
pop
sahf
lods
fimull
daa
sbb
cmp
lret
cmp
push
ljmp
or
je
jg
and
push
subb
fsub
call
mov
dec
sub
loopne
dec
fwait
mov
add
inc
decl
loop
inc
aam
adc
cmp
pop
test
mov
inc
mov
jmp
mov
aas
cmpsl
xchg
mov
pop
add
sub
shr
pop
test
fiaddl
adc
clc
pop
fwait
push
add
sub
insb
dec
in
mov
push
test
mov
inc
mov
lods
pop
jl
sbb
ret
dec
nop
out
es
adc
jp
leave
pusha
or
aaa
arpl
sarb
inc
in
xor
push
push
or
xchg
or
and
jmp
add
and
orb
pop
push
cmp
jp
pop
push
mov
fwait
mov
adc
or
sub
lret
push
xor
das
jl
in
add
xchg
push
mov
adc
or
xor
cltd
mov
mov
aas
jl
dec
iret
add
loopne
hlt
mov
xchg
test
jg
cld
push
shll
cltd
inc
clc
es
lcall
or
addb
and
xchg
mov
push
xchg
loop
test
stos
sbb
add
jne
cmpsl
clc
jae
loopne,pn
and
lret
sbb
add
push
psubusb
inc
adc
push
sbb
shll
inc
sub
out
js
inc
fdivrl
das
jle
jmp
mov
movsb
push
jmp
mov
dec
insb
inc
das
and
mov
and
clc
pop
or
mov
ret
xchg
outsl
dec
dec
add
out
icebp
sbb
lahf
pop
dec
imul
loopne
insl
dec
xor
inc
scas
lahf
icebp
push
test
mov
test
xchg
cli
mov
in
and
je
sarb
mov
xchg
dec
sbbl
pusha
mov
lret
push
mov
ja
push
xor
js
in
mov
ljmp
cmp
push
jne
adc
outsl
push
popa
aam
loopne
test
into
and
or
jo
mov
sti
sub
mov
push
test
in
xorb
jp
mov
xchg
push
lock
imul
incb
int3
jo
in
adc
lret
xlat
scas
rol
es
xchg
adc
decb
mov
pop
cli
lods
mov
outsl
rorl
mov
cwtl
stos
add
add
cmpsl
dec
sub
mov
test
or
outsb
int
bound
sti
inc
ja
ss
inc
nop
test
adc
mov
jecxz
adc
ds
jg
adc
daa
or
pop
sbb
scas
lods
clc
cmc
xchg
inc
hlt
movsb
adc
sub
or
push
icebp
mov
mov
inc
pcmpgtw
ljmp
cwtl
test
outsb
mov
icebp
idivl
and
inc
inc
cld
jg
sub
pop
sbb
testl
int
test
or
lods
mov
mov
fisttps
add
push
mov
out
cmc
pop
xchg
gs
push
mov
mov
sub
mov
stos
mov
adc
rcl
call
xor
pop
icebp
lods
je
sbb
sbb
push
repnz
clc
lahf
cmp
pop
and
mov
test
sub
cmp
dec
add
icebp
dec
aas
inc
loop
arpl
in
fsub
push
in
mov
movswl
aas
test
cmp
pop
stos
add
sub
in
cli
sarl
imul
fcmove
ss
aam
sbb
mov
dec
mov
xchg
cmc
mov
call
hlt
shrl
xor
ss
incb
outsl
dec
pop
dec
jp
les
daa
pop
inc
and
or
xor
lods
dec
dec
rcrl
mov
mov
jp
push
push
scas
movsl
fs
adc
subb
jae
rol
inc
ficoml
shrl
sbb
add
add
repnz
ss
arpl
rep
xor
scas
pop
shlb
push
mov
rcrb
ds
das
mov
andb
js
imul
xchg
mov
inc
jl
jmp
mov
lock
mov
jmp
add
and
xchg
fwait
add
push
mov
dec
cmc
pop
fmull
add
jmp
xchg
loopne
decl
xor
pop
jecxz
sbb
dec
adc
les
divb
dec
call
pop
sub
mov
mov
sub
push
mov
push
push
enter
stos
add
mov
lahf
xor
pop
jp
pop
icebp
dec
cltd
bound
cwtl
sbb
push
xor
rolb
mov
out
clc
pop
out
repnz
add
lea
push
push
outsl
test
dec
sbb
nop
jo
sub
subb
ljmp
or
adc
jne
add
add
jge
xchg
dec
addr16
std
rcrb
aaa
iret
add
cmp
sub
stc
xchg
xor
adc
xor
xchg
lret
aaa
outsb
push
sbbl
imulb
gs
sbb
loop
or
or
test
adc
rcrb
ja
lret
mov
lret
addr16
mov
inc
int
fs
mov
xor
fidivrs
mov
ret
inc
ljmp
cld
mov
dec
sbb
cmp
dec
mov
gs
cmp
cmc
push
dec
clc
and
movsl
imul
add
inc
and
pop
jbe
frstor
jo
adc
mov
dec
clc
imul
mov
test
inc
test
jmp
inc
pop
call
add
enter
aad
mov
cmp
xor
jno
mov
rolb
out
push
push
or
scas
jb
stos
inc
cld
xchg
shlb
orl
mov
icebp
iret
xchg
cmp
nop
ret
add
scas
data16
jns
aas
je
jp
cwtl
insl
jge
pop
adc
shl
mov
mov
xchg
pop
outsb
cmc
push
call
leave
or
inc
add
leave
jmp
movsb
mov
jb
rorb
in
push
and
push
push
cmp
lock
cmp
push
cmp
jmp
loope
sub
movsl
push
test
mov
les
cmp
loopne
add
jns
add
sbb
jl
push
fs
mov
mulb
lock
jle
mov
pop
or
push
shl
push
push
xor
ljmp
int3
jo
cmp
push
movsl
popa
pop
enter
dec
mov
cmp
jmp
aam
fcoml
and
xchg
ss
es
mov
rcrb
in
testb
cs
das
inc
scas
or
sub
xchg
pop
fistpl
cmpsb
pop
xchg
pop
lods
and
mov
mov
std
lret
fwait
in
fcomp
test
xchg
std
or
je
daa
out
iret
pop
and
mov
outsb
fisubs
dec
loope
push
cli
or
loopne
cmp
mov
out
test
popf
cltd
push
mov
gs
adc
jmp
sub
jl
shr
mov
adc
cmp
cmpb
xchg
cld
sub
and
pushl
pushf
in
xorb
aam
in
js
pop
xchg
sbb
stos
dec
lods
cmp
cmpb
mov
inc
in
arpl
sahf
or
ljmp
pop
dec
aam
jle
fistl
pop
push
js
mov
pop
and
adcb
push
push
scas
push
pop
sahf
adc
add
adc
mov
or
std
andl
jne
inc
pusha
xchg
xor
and
adc
out
dec
fldt
pop
sbb
adc
add
popa
sub
sub
pop
sub
bound
jb
or
add
iret
jno
enter
out
jg
imul
or
cmc
ds
les
dec
popa
pop
icebp
add
test
mov
inc
mov
cwtl
dec
push
clc
mov
push
xor
xor
icebp
xor
in
jmp
ret
fistpll
pusha
movsl
jnp
aam
dec
push
scas
ss
decb
xchg
rcrb
inc
push
daa
add
out
pop
or
mov
jbe
or
aam
push
gs
xlat
mov
adc
sbb
dec
mov
cmpb
cli
xchg
das
mov
lods
jg
xchg
jge
jg
xchg
test
adc
xor
jnp
mov
shr
std
adc
push
mov
lahf
mov
xchg
jo
ret
cmp
fisttpll
shlb
fnstenv
stos
push
jmp
lods
sti
scas
in
mov
add
cmp
push
mov
add
cwtl
sbb
ljmp
aad
lahf
cmp
add
dec
lds
push
push
sub
aam
movsl
dec
icebp
ret
dec
iret
xchg
shrb
cmpsb
cmc
cli
out
sbb
or
jmp
cli
and
std
aaa
push
push
mov
sbb
out
pushf
stos
cli
es
adcb
mov
add
mov
addl
pop
movsl
xor
les
loopne
test
rorb
jecxz
pop
sub
fwait
mov
cmpsb
cmp
mov
jbe
lds
popf
sub
cmp
inc
decb
std
sbb
jbe
cmp
shl
sarb
fdivp
and
add
shrb
fstl
jno
rcr
push
test
pop
mov
pushf
xchg
ja
jb
xor
and
inc
dec
pop
loopne
pusha
pop
ret
mov
sub
push
cs
pop
cmp
loopne
jno
cmp
sahf
mov
popa
loope
mov
mov
cmp
cmp
cmp
scas
push
sar
fucomp
clc
loop
xchg
dec
jo
ljmp
pushf
jno
or
imul
mov
mov
or
loopne
iret
jp
lcall
jns
mov
cs
sub
mov
psubd
scas
adc
dec
sbb
adc
mov
mov
cltd
test
add
je
inc
inc
cmp
and
push
je
and
fnstcw
ljmp
pop
rcrl
pop
add
sbb
xchg
sahf
mov
xchg
mov
and
add
cmp
dec
jecxz
inc
add
mov
adc
and
pop
jecxz
xorl
and
mov
sahf
sub
mov
ja
or
mov
movsb
shlb
push
push
inc
test
outsl
push
add
lods
inc
xorl
lahf
or
mov
push
mov
int
mov
add
add
push
add
jae
mov
add
and
je
je
ljmp
or
jmp
mov
inc
pop
jecxz
sub
es
xchg
call
pop
jl
lds
inc
pop
addr16
cld
inc
mov
dec
push
push
imul
jl
rcll
js
call
int3
cmpsl
rorl
in
dec
fsub
sbb
inc
xchg
les
mov
lea
fbld
push
aam
das
cltd
xor
icebp
loope
cmp
sbb
fisubs
mov
jbe
sbb
fmulp
mov
lock
flds
in
fsubr
xchg
xor
push
stc
sbb
push
sbb
dec
outsl
cmpsl
cs
add
jle
mov
andb
dec
data16
cmp
add
subb
iret
jb,pt
inc
pop
aas
dec
rcr
ror
lahf
imul
loope
sub
divl
mov
cmp
or
cmpsl
jo
nop
push
roll
in
movsb
sub
sub
cmp
mov
test
test
icebp
mov
adc
dec
das
mov
adc
into
push
and
push
mov
jmp
flds
dec
and
cld
adc
sbb
jge
xchg
xor
cwtl
inc
das
mov
cli
and
sub
xchg
mov
outsb
nop
push
mov
push
dec
mov
xchg
popa
sahf
push
fs
pop
int
outsb
bound
cmpl
in
test
sbb
inc
dec
dec
fisttpl
jnp
inc
xor
icebp
mov
out
inc
adc
pop
jmp
mov
sub
pop
and
insl
mov
in
push
add
out
testw
aad
fildl
xchg
js
mov
loopne
icebp
and
push
xor
mov
mov
shlb
lods
cs
pop
stos
or
clc
mov
dec
ret
mov
push
jo
inc
push
lds
push
adc
push
cmp
stos
call
mov
adc
add
inc
xlat
jne
insb
pusha
jge
xchg
inc
xor
and
aaa
xor
jecxz
dec
cmp
cmpsl
mov
xlat
js
rorl
loopne
scas
jecxz
call
pusha
loopne
sahf
and
mov
ltr
sbb
iret
mov
xor
add
repz
inc
lret
inc
scas
adc
sbb
sub
and
and
popf
inc
ja
mov
ss
icebp
or
pop
jmp
andl
aas
add
es
lahf
xchg
xor
push
cld
pop
sbbl
mov
cltd
pop
sbb
or
das
pop
iret
bound
in
jecxz
lea
out
or
stc
pushf
xchg
inc
mov
mov
cmp
lcall
add
cwtl
cmp
pop
lcall
adc
jmp
mov
mov
inc
mov
jle
xor
jbe
pusha
ss
loopne
jno
jecxz
sbb
out
xchg
arpl
sahf
adc
lock
aam
mov
mov
push
push
mov
cli
sbb
testb
test
mov
std
je
xor
nop
mov
jno
push
xlat
mulb
out
jmp
mov
leave
outsb
push
inc
test
ds
mov
addr16
pop
jmp
jne
call
add
mov
sahf
ret
pop
lahf
jo
jecxz
jno
mov
cs
jle
les
adc
push
ret
jg
rorl
int3
out
mov
outsl
lcall
add
cmp
dec
sbb
mov
mov
cmpl
pop
inc
sbb
std
mov
imul
std
pop
push
aas
cmp
int3
arpl
mov
sarl
rclb
loopne
cmp
mov
adc
pop
or
mov
lods
loopne
loope
std
aaa
js
lods
cmp
cld
adc
aam
xor
ljmp
or
outsb
nop
mov
xchg
or
pop
mov
iret
or
jp
or
cs
in
mov
sbb
sub
jmp
pop
scas
loop
adc
nop
mov
movb
sbb
dec
aas
aam
js
jle
or
inc
mov
cmp
pop
pop
dec
cmpl
repnz
or
xchg
stos
outsb
mov
push
sbb
ficoml
or
aaa
rcr
push
mov
and
pop
loop
dec
pushl
js
gs
pop
shlb
pusha
ss
lret
ja
inc
leave
lret
insl
popf
xchg
inc
aam
mov
scas
push
and
mov
push
enter
rorl
ret
psrad
xor
ret
jbe
adc
dec
ficoml
icebp
add
jp
aam
pop
shr
or
imul
adc
lret
jle
scas
sbb
mov
mov
and
and
mov
mov
mov
inc
sub
lahf
rclb
xchg
and
fimuls
lcall
lock
lret
mov
or
pop
fdiv
mov
or
les
es
rorb
js
loopne
clc
das
lock
aad
jo
arpl
mov
sahf
jb
xor
nop
add
stos
cmp
sub
lea
in
add
mov
popa
or
seto
dec
cmpsb
pop
mov
add
mov
mov
imul
mov
or
inc
or
ret
mov
call
inc
and
shrb
out
pavgw
hlt
adc
mov
insl
test
andb
les
ret
xlat
sbb
mov
push
rcr
and
cltd
mov
or
mov
lahf
ss
cmpsb
sbb
lret
inc
xlat
lahf
dec
cmpsb
js
inc
push
cltd
pusha
pusha
icebp
mov
aam
test
arpl
add
test
sub
stos
je
ret
sub
ret
ljmp
jp
imul
inc
loope
orl
or
mov
icebp
or
std
aam
push
xchg
pop
fnstsw
cmp
shlb
jecxz
bnd
sub
iret
sub
pop
jno
in
pop
nop
daa
cltd
rcll
inc
int3
inc
push
iret
push
gs
cld
mov
add
test
scas
ficoms
es
xor
test
dec
or
insb
in
imul
xlat
clc
out
xchg
ja
jecxz
xchg
pop
call
icebp
imul
insl
cmpsl
or
add
ss
cli
lods
or
xchg
sbb
mov
xor
pop
imul
aas
pop
add
inc
cli
cmpsl
jb
cli
js
addb
adc
fdivl
dec
pop
loopne
push
gs
fadds
add
imul
cmpl
fs
cmp
or
test
les
inc
std
sar
lods
arpl
adc
cs
or
fmul
cwtl
xchg
push
lea
cwtl
movsl
xchg
mov
push
and
cld
cmp
jnp
sub
push
cmpb
pop
sub
mov
sti
orb
cmp
jb
repnz
add
aas
arpl
mov
std
push
hlt
aas
cmp
mov
test
push
adcl
or
jne
imul
popl
add
xchg
stos
stc
jle
adc
dec
push
jno
cli
mov
mov
in
insb
lret
jmp
push
cmp
out
or
jecxz
cmpl
adc
jle
loope
xchg
rcll
push
outsb
test
rcll
dec
or
mov
aad
movsl
imul
push
loopne
adc
imul
bound
add
ds
mov
dec
out
mov
aaa
sub
jmp
subb
fiaddl
mov
arpl
push
decb
mov
aaa
fnstsw
lahf
rcr
dec
out
repnz
sbb
mov
sbb
movsl
pop
pushf
mov
and
cmpsl
sub
cmp
dec
mov
adc
out
push
addr16
mov
mov
mov
loopne
add
inc
inc
lcall
roll
xchg
adc
inc
fwait
sahf
adc
and
adc
add
sbb
xchg
inc
fwait
ss
sarl
mov
or
sahf
jecxz
insb
test
loopne
mov
pop
insb
mov
adc
mov
inc
inc
add
icebp
push
add
and
int
movsb
add
lock
inc
cmpsl
mov
push
adc
loope
popa
sub
sub
pop
gs
add
movb
stc
mov
or
mov
cmpsb
adc
and
fwait
inc
jns
scas
sub
sub
mov
ret
or
xchg
or
inc
call
addb
cmp
adc
jecxz
and
ficomps
adc
loop
push
ds
rcll
call
xor
sbb
sahf
sub
and
sbb
adc
loop
lods
negb
mov
insl
mov
test
aaa
mov
xor
mov
or
sub
nop
and
inc
mov
pop
pop
mov
push
pop
jecxz
push
mov
mov
loopne
add
je
xlat
jp
lret
test
std
sbb
call
mov
xor
jg
or
or
add
daa
or
cld
or
mov
lret
jmp
add
pop
out
or
sub
movsb
mov
push
sub
ss
aam
add
sbb
popa
bound
jg
inc
mov
imul
or
fidivl
pop
xchg
fwait
push
pop
mov
loope
jg
jl
xor
fsts
cmpsb
cmc
dec
mov
inc
loopne
inc
lahf
xor
xchg
call
data16
inc
pop
add
mov
lcallw
cwtl
jecxz
add
inc
inc
add
arpl
push
xchg
adc
mov
ficomps
add
ja
jl
inc
mov
or
fcmovnu
push
cmp
xorb
jmpw
xor
or
in
pop
call
addl
inc
add
mov
add
rorl
into
dec
insb
mov
lods
xchg
cmp
xor
jbe
sahf
mov
mov
sbb
filds
punpckldq
cmp
lock
adc
out
lds
sbb
mov
ffreep
add
cld
jg
std
mov
movsb
pop
shlb
aas
and
cwtl
cwtl
or
inc
aad
mulb
data16
sub
aas
sbb
or
imul
dec
xchg
sub
mov
ja
mov
nop
inc
or
mov
adc
clc
mov
lock
int3
dec
hlt
mov
gs
test
clc
push
mov
xor
daa
or
jle
push
mov
ds
jmp
sti
stc
jmp
ljmp
add
mov
dec
std
push
pop
adc
js
jns
inc
add
mov
pop
jmp
fistpl
icebp
les
sbb
sbb
dec
xor
mov
cmp
inc
aas
out
clc
hlt
push
cli
test
testl
push
xor
orb
loope
out
lahf
inc
loop
rsqrtps
xchg
sub
xor
hlt
cmp
fisubrl
push
jecxz
loopne
outsb
fisubrl
or
mov
mov
sbb
xchg
andl
mov
adc
push
nop
jmp
stc
push
mov
jno
push
daa
rclb
data16
subl
sbb
rcrl
inc
xchg
aaa
jno
mov
push
aam
push
sub
inc
cmpsb
jae
cmp
mov
mov
mov
aad
jl
inc
cld
or
ja
sahf
ud2
fcmovnbe
xor
push
into
jno
inc
ret
inc
sbb
movsl
out
cmc
add
push
sbb
nop
add
lock
pop
out
sbb
sub
xor
push
stos
aas
sbb
dec
std
cwtl
fwait
jp
addr16
push
popa
mov
outsb
inc
inc
and
mov
and
xor
outsl
fdivrl
mov
push
lock
or
fimull
add
divb
lock
loope
std
incl
adc
std
cmp
sbb
incb
add
cld
rcrb
mov
test
xor
ss
push
push
xor
sti
and
loop
adc
test
mov
iret
or
scas
out
test
xor
cmc
ja
sub
dec
add
mov
push
sbb
lret
or
push
mull
stc
fwait
std
mov
movsl
xor
fimuls
shrb
inc
out
pop
call
push
inc
push
dec
or
ret
pop
mov
decb
mov
and
mov
and
jl
cmp
pop
lcall
out
popf
add
cld
xlat
insl
cltd
sbb
in
cmp
jo
mov
mov
pusha
mov
ret
lock
mov
pop
sti
xchg
xor
rol
adcl
fdivl
xchg
stos
dec
shl
adc
xchg
daa
js
jne
lcall
pop
pop
pushf
cs
inc
mov
adc
shlb
out
test
mov
jmp
add
roll
movl
aaa
jp
mov
clc
jb
loopne
clc
in
mov
in
int3
add
jg
mov
es
mov
in
leave
xor
or
dec
fwait
dec
cltd
scas
mov
mov
dec
push
jns
xor
and
fadd
mov
mov
pop
fildll
cmp
or
mov
pusha
lret
loop
add
push
jge
mov
pop
jo
push
enter
or
dec
mov
mov
scas
ljmp
mov
and
cmp
sbb
ljmp
inc
inc
cli
xchg
mov
dec
test
jle
push
jbe
mov
ss
test
lahf
rorl
mov
into
inc
arpl
pop
mov
mov
arpl
pop
cmpsb
jbe
mov
xorl
or
mov
sbb
decl
stos
inc
mov
inc
sub
cmp
jmp
aad
mov
pushl
lock
push
ja
fdivs
xchg
mov
shll
cli
pop
ja
cmp
jecxz
sub
or
xchg
icebp
cmp
or
xchg
add
jmp
test
aas
sub
cmp
cmp
cmc
mov
inc
lods
or
add
and
dec
add
hlt
loope
sub
stc
mov
push
push
push
fmuls
or
hlt
mov
rolb
pop
sahf
or
mov
cmc
fxch
std
and
push
mov
int3
add
data16
fimuls
xchg
add
xchg
cmp
aad
mov
les
sbb
and
push
xchg
out
xor
icebp
rcrb
ljmp
shll
aaa
loop
ret
pop
cld
popa
aaa
fadds
enter
roll
or
stos
sub
mov
cmp
add
aas
and
loopne
lock
aad
dec
and
sub
mov
mov
add
xchg
adc
mov
outsb
jmp
out
xchg
add
add
push
mov
in
jecxz
aas
dec
mov
or
or
fdiv
pusha
scas
or
bswap
or
mov
xlat
mov
xchg
sbbl
movsl
push
dec
mov
xchg
bound
mov
sbb
mov
pushl
setb
sub
subl
jns
int3
sbb
mov
push
sbb
bound
mov
fistps
cmpsb
pop
pusha
ret
call
pushf
inc
out
sbb
int3
inc
mov
dec
aaa
jl
cmp
fisubl
jns
pop
or
lret
adc
ds
pop
lods
invd
ret
stc
adc
mov
mov
mov
adc
dec
loope
imul
test
imul
mov
dec
jl
call
pop
sar
and
sbb
sbb
in
cmp
gs
or
adc
cmp
cmpb
rorb
inc
faddl
subl
fisubrl
xlat
push
cwtl
sbb
add
sbb
jg
adc
movsl
dec
add
ret
jmp
jo
or
mov
je
jp
xor
pop
adc
adc
shrl
inc
cmp
ret
mov
out
add
push
jg
xchg
push
clc
insb
push
sbb
les
shl
and
notl
push
inc
fcmovb
cmp
aaa
adc
adc
push
mov
xchg
hlt
mov
add
mov
shr
fidivrl
push
add
pop
sbbb
add
incl
fdivrs
xchg
ja
rcll
pop
icebp
or
xchg
xor
or
adc
jmp
and
and
xchg
jmp
and
jmp
fadd
xlat
jnp
jg
pop
jmp
xchg
push
repnz
stc
mov
add
pop
mov
xchg
int
lahf
lock
add
aaa
sahf
push
cmp
push
in
stc
popl
in
ss
xlat
push
mov
push
es
pop
loopne
shrb
mov
mov
sahf
ret
and
mov
jl
push
decl
inc
dec
dec
test
xchg
add
xchg
fadd
cld
mov
push
push
in
cli
in
xchg
cld
adc
push
mov
jno
sbbl
sarl
or
stos
or
outsb
pop
pop
sub
sbb
ss
jae
imul
mov
and
js
rolb
pusha
and
call
jo
fistl
cmp
dec
xlat
push
inc
inc
push
mov
cmp
lcall
mov
cmpsb
rclb
lock
mov
es
push
jb
xchg
fisttps
xchg
adc
arpl
ss
sbb
or
push
push
aam
lcall
inc
sti
stos
xchg
insb
sub
outsl
fs
stos
dec
orl
xlat
xchg
int3
ljmp
dec
or
mov
xor
outsb
and
xor
add
stos
jo
pop
xchg
aas
push
sub
imul
add
inc
jbe
inc
dec
pop
je
push
popf
mov
enter
adcl
aas
push
call
lock
pop
mov
inc
mov
fcoms
movsb
lret
mov
stos
repnz
mov
inc
xchg
mov
sbb
cmp
mov
dec
loopne
pop
hlt
and
xor
clc
cmp
cld
aam
lods
dec
push
mov
lcall
mov
pop
mov
aad
mov
mov
push
ret
adc
cmp
imul
inc
mov
dec
xchg
mov
add
ret
icebp
into
in
pop
mov
xchg
jl
ss
xorl
pop
add
icebp
das
ja
xor
and
push
add
scas
push
sbb
push
rclb
cmp
imul
push
rorb
sub
repnz
sti
fldl2t
ljmp
incl
test
adc
pop
and
flds
test
mov
jbe
aas
cmp
sub
cmp
loopne
push
shll
dec
pusha
or
xor
mov
push
or
cmp
push
cld
imul
mov
cmc
mov
mov
dec
xchg
cmp
lret
clc
fildll
pop
jg
cwtl
loopne
rorb
or
cmc
iret
pushf
mov
fwait
subl
lods
mov
add
hlt
push
orl
imul
inc
clc
or
scas
mov
aas
insb
scas
mov
or
loopne
dec
jo
cmp
leave
lods
xchg
xor
mov
xchg
and
sub
mov
rorl
cld
out
inc
std
add
jp
popf
mov
pop
add
sub
push
imul
dec
aad
cld
mov
rorb
popf
sbb
push
inc
push
or
xchg
jl
sub
mov
iret
sbb
scas
aaa
cmc
aam
pop
add
mov
sti
outsb
hlt
jecxz
ficomps
mov
add
and
push
lahf
and
or
cli
inc
add
mov
cwtl
sub
mov
xor
inc
or
test
imul
jg
shll
in
push
in
dec
xor
push
jmp
jmp
inc
pop
lock
sbb
sar
test
xlat
clc
sbb
bound
lods
popa
dec
or
lock
jg
popf
roll
mov
aam
sbb
mov
lret
or
rorb
inc
dec
xchg
push
sub
fsubp
push
push
mov
and
movsl
out
mov
out
test
call
aam
ret
movsb
sbb
out
push
xchg
mov
icebp
fmuls
mov
incl
rorb
sbb
push
fs
lahf
sbb
sub
sbb
jmp
mov
ret
or
outsl
andl
mov
xlat
movsb
cmp
add
jae
decb
mov
jle
mov
mov
jno
je
adc
and
das
adc
jno
mov
inc
mov
push
xchg
int
rorb
daa
or
pop
dec
adc
ss
cmpsl
in
xchg
pop
or
push
sbb
test
adc
xchg
adc
pop
sbb
sbb
and
sar
movsb
adc
repnz
fcmovu
inc
inc
mov
ret
sub
push
test
sti
xchg
and
ret
setae
incb
pop
pop
add
into
orw
pusha
push
cmp
inc
lret
call
push
fwait
add
add
lea
inc
xchg
push
jns
loopne
mov
adc
pop
inc
repnz
add
cmp
push
stos
fld
pop
popf
shrb
sub
mov
aas
aad
enter
out
scas
inc
xor
lea
inc
xchg
add
adc
xchg
mov
aas
xchg
out
test
iret
or
sti
sub
push
cli
mov
and
in
clc
inc
or
lods
push
dec
xlat
xor
cmp
loopne
clc
repnz
jne
adc
cld
push
pop
rcrl
xchg
dec
repz
outsl
fsubs
pusha
mov
lock
sbb
adc
jo
cmpsl
xchg
imul
sarb
insb
movsb
out
mov
scas
hlt
iret
sub
xor
sti
mov
push
lods
popf
sub
int
push
adc
lds
dec
inc
dec
push
call
and
mov
xchg
cmpsl
movsl
popf
jno
xor
loop
inc
add
ljmp
cld
sub
mov
aas
arpl
int
cmp
pop
aad
rcl
int3
loopne
push
hlt
or
lret
lcall
aad
fnstenv
xchg
xchg
fstl
mov
mov
adc
popa
test
and
add
jg
idivl
je
fiaddl
mov
fs
jnp
stos
call
rdmsr
push
push
pushfw
or
stc
nop
push
cs
sbb
sarl
icebp
mov
push
xadd
sub
out
mov
push
adc
out
mov
adc
out
aad
clc
scas
mov
add
push
pop
addl
inc
jno
jge
adc
add
mov
imul
incb
pop
addr16
xchg
or
out
nop
leave
jo
lea
push
outsl
ds
mov
js
and
cmc
mov
cltd
sbb
dec
cmp
iret
or
add
icebp
sbb
aaa
inc
sub
pop
add
mov
push
pusha
fidivrs
mov
call
clc
arpl
cmpsb
xor
lods
jne
ljmp
sub
hlt
inc
push
aas
mov
and
incb
rorb
or
hlt
pop
addl
es
pop
push
xchg
xchg
aam
jb
pop
adc
inc
sub
pushf
lock
cmc
jle
jg
adc
in
adc
pop
inc
inc
xlat
xchg
lods
out
or
and
cmp
jbe
addl
jle
cmp
je
jbe
jge
push
addb
mov
in
inc
and
aas
clc
mov
push
testl
push
pop
mov
xchg
mov
xor
insb
lds
pop
lods
and
mov
rolb
sbb
and
icebp
sbb
stos
loopne
sbb
insb
cmp
sbb
mov
adc
rorl
pop
or
das
lret
inc
pop
call
dec
jns
mov
imul
pop
imul
repz
sbb
mov
sbb
or
fbld
pop
insl
addb
mov
fbstp
dec
sbb
jo
dec
iret
pop
mov
ja
or
je
jge
movl
cs
repz
mov
inc
rorl
andl
test
sbb
mov
cmp
pop
ret
aad
push
bound
imul
cmp
push
and
mov
cmp
pop
fdivl
push
enter
daa
stos
sub
mov
iret
sbb
jnp
dec
scas
dec
hlt
xchg
setne
sub
jno
stc
inc
test
cmpsl
jmp
add
aas
push
lcall
lahf
adc
lret
push
int
pop
and
bound
pop
or
or
mov
or
jecxz
fcomip
lods
pop
cltd
jg
fdiv
mov
pop
xlat
sbb
adc
outsl
push
jb
xor
rorb
xorl
loopne
jmp
push
sbb
lods
push
jne
lock
rclb
stos
aas
sbb
lcall
int3
push
cwtl
insb
add
mov
pop
sub
enter
xchg
mov
or
pop
mov
add
xor
sbb
mov
cld
fstps
lock
shlb
cmc
dec
xor
mov
push
add
mov
lock
gs
inc
es
in
add
sub
jnp
pop
popa
xor
xor
cmpsb
arpl
and
and
loope
inc
mov
adc
add
or
mov
int3
mov
mov
mov
shlb
in
mov
dec
mov
cmp
ficomps
clc
inc
and
cld
sub
subl
inc
div
pop
xchg
inc
inc
pop
push
push
rclb
sbb
lret
andl
pop
loop
sarb
mov
adc
sar
sbb
jno
arpl
xchg
test
pop
or
sahf
push
mov
int3
ret
inc
repnz
in
neg
push
adc
fwait
divb
jg
jp
pop
stos
push
push
faddl
inc
mov
out
outsb
movsb
jg
incb
and
cmp
repnz
jo
cld
and
fsub
pop
jecxz
call
insl
push
inc
pop
mov
rclb
ret
xchg
lcall
ficoml
lret
in
es
loop
add
xor
jecxz
jg
addl
aad
or
xor
lea
mov
mov
add
xchg
push
pushf
cmp
cmpsb
in
pop
pushl
push
das
xabort
add
icebp
jns
push
push
push
call
out
leave
push
movsl
add
jns
mov
std
pushl
mov
ds
adc
imul
pop
mov
xchg
add
repz
pop
push
mov
mov
pop
in
mov
mov
inc
sbb
fwait
lods
pop
sub
in
xorb
sti
add
dec
sub
rcrb
mov
jbe
xchg
cmp
leave
xor
mov
cmpsl
add
jp
stc
mov
cld
dec
test
or
sbb
dec
or
add
loop
loop
cwtl
insl
pushf
inc
cmp
cmpsb
movsl
jge
std
inc
pop
xchg
and
scas
add
cmc
lods
iret
inc
pop
lcall
ljmp
push
int
es
shlb
mov
in
divps
jno
pop
loopne
mov
inc
pop
mov
push
mov
out
aas
push
or
insb
mov
loopne
mov
mov
mov
jbe
xchg
and
fdivp
dec
stos
push
pushf
out
decl
xor
das
dec
pop
mov
shll
xor
cld
push
mov
add
xor
and
pop
sbb
das
sarl
popa
dec
and
dec
clc
fistpll
movsb
inc
mov
lods
es
push
int
call
jp
sub
inc
mov
adc
iret
fsin
popf
pop
les
push
jecxz
icebp
pop
out
dec
js
xchg
mov
sbb
xchg
test
xchg
es
in
sbb
cld
add
mov
aas
mov
ljmp
dec
and
stos
dec
add
pop
lea
flds
push
mov
push
sub
decl
adcl
add
inc
or
cmp
adc
mov
and
icebp
cmc
xchg
and
loope
mov
push
lcall
repz
xor
or
inc
call
push
cs
movsl
sbb
mov
sub
mov
jb
popf
orb
or
mov
faddl
lock
dec
cli
in
loop
daa
jle
popa
dec
ficoms
push
andl
nop
data16
cs
push
sbb
push
mov
outsl
inc
stos
loope
mov
ds
cwtl
hlt
lods
sub
xor
xchg
mov
add
adc
add
aam
je
xor
test
add
push
cld
loope
add
js
iret
pushf
jp
fdivrs
pushl
loop
lock
lea
jne
dec
call
push
movsl
pop
lods
push
xor
push
subb
cmpsl
mov
ss
subl
mov
in
adc
lahf
or
dec
and
fnstsw
jg
jl
xlat
aad
fisttpl
and
pop
pop
mov
jecxz
sub
jge
or
cmc
mov
inc
mov
mov
ljmp
inc
push
std
test
xlat
sahf
jae
sti
pop
retw
inc
cmp
je
inc
roll
push
out
inc
jg
popf
lahf
addr16
xchg
jle
rolb
test
in
imul
gs
pop
or
outsl
xchg
jmp
fsts
fsubs
pop
cmc
jg
lahf
fwait
xor
sti
mov
inc
jae
std
fnstsw
nop
cmp
cwtl
sub
shr
loop
adc
jle
int
std
jle
add
xchg
test
add
sahf
loope
inc
adc
in
xchg
sbb
push
pop
push
jbe
sbb
clc
sub
inc
mov
inc
lret
inc
leave
lock
movb
sti
sbb
xlat
rcr
push
aaa
or
inc
push
dec
clc
mov
add
push
incb
jnp
out
jg
mov
daa
cmp
push
jne
push
xchg
cmp
mov
fwait
sti
bound
movsb
jle
adc
sbb
mov
ret
dec
push
ljmp
adc
mov
imul
outsb
mov
ja
stos
jo
in
repz
push
arpl
and
clc
sbb
add
andl
mov
dec
loopne
addr16
xor
or
or
repnz
lahf
jp
bound
push
daa
pusha
insl
rcll
pop
mov
xchg
ljmp
adc
ret
mov
push
js
std
xchg
sahf
jecxz
clc
mov
leave
pop
js
and
cmp
aaa
sti
fwait
adc
inc
mov
clc
fimull
lret
cmp
addl
mov
jl
pop
sarl
pop
sub
inc
cmpsl
push
sub
pusha
mov
repnz
mov
not
or
jb
scas
push
sbb
xchg
test
add
aam
shrl
cld
or
or
imul
out
inc
clc
leave
icebp
and
push
mov
test
ret
stos
imul
inc
clc
pop
jecxz
mov
xchg
shll
add
push
loope
popf
jp
pop
test
push
outsb
jle
int3
sub
mov
add
rcrl
stc
jae
fwait
adcb
popa
inc
outsl
pop
cmp
sub
or
push
lea
dec
xchg
movsl
scas
dec
mov
sbb
dec
popf
and
sbb
jl
fiadds
sub
addb
faddp
pop
outsl
lock
sub
adc
sbb
jno
adc
aaa
pop
cmp
jb
decl
outsb
scas
pushf
xor
stos
ret
iret
xor
add
lret
pop
adcl
fists
pushl
inc
fwait
ret
mov
or
mov
or
adc
movsl
jo
mov
aas
or
nop
jb,pn
in
movb
fildll
arpl
xchg
scas
loopne
outsb
jmp
cli
ret
repnz
inc
inc
xor
inc
or
adc
in
pushf
lods
lret
push
pop
int
mov
stos
pushf
int3
mov
inc
fsubr
hlt
inc
jmp
xor
nop
or
popf
and
sub
pop
sub
inc
ja
inc
and
scas
lods
lock
mov
lock
mov
cmp
in
pop
jge
incb
insl
test
std
rorl
inc
xor
sarb
xlat
lahf
sub
cmpsb
into
and
pop
jecxz
jg
mov
ss
add
dec
xchg
ja
ja
adc
mov
lea
and
xor
dec
or
mov
int3
inc
push
xchg
inc
push
in
pop
int3
cltd
data16
xchg
iret
inc
cmpsl
out
mov
sub
push
ljmp
xchg
pop
call
jl
and
pop
add
and
nop
mov
incb
clc
sbb
jmp
ljmp
sbb
scas
jmp
dec
jbe
cli
scas
jnp
and
test
sub
adc
ds
shr
dec
jmp
inc
adc
in
and
frstor
pop
mov
jne,pt
or
aam
dec
std
jp
cmp
sbbl
push
cld
jg
in
and
sbb
lock
outsl
rolb
mov
and
outsl
mov
fsubs
aaa
push
dec
push
jl
pop
test
add
add
pop
cmp
adc
rcr
push
adcb
mov
addr16
and
notb
insb
int
jl
dec
aaa
ret
xchg
add
fadds
add
in
mov
push
cmpsb
fwait
sbb
ret
or
xchg
adc
ret
sbb
inc
and
adc
pusha
cmpsl
cli
and
dec
aaa
jp
pop
mov
push
stos
rcr
lahf
movsl
add
xor
mov
cmp
push
bound
push
ret
jl
push
into
push
adc
sbb
cld
mov
xor
pop
xchg
xorb
push
fs
cmp
mov
cs
mov
daa
xor
cmc
incl
jnp
scas
dec
js
ret
fisttps
jge
xor
jo
and
dec
movsl
mov
mov
cmp
lret
xchg
lods
xor
sbb
daa
rcr
scas
and
aad
test
mov
push
mov
and
mov
or
or
and
and
rcrb
test
fldcw
repnz
bound
sahf
es
jmp
cmpsb
or
or
mov
or
and
decl
sbb
jg
loopne
or
push
inc
into
mov
xchg
sub
rorb
outsl
cmp
in
push
cld
and
push
lock
clc
aas
div
pop
push
filds
pushf
arpl
xlat
add
test
sti
and
sub
mov
and
sbb
lret
into
lock
das
sbb
push
movsb
inc
pusha
outsl
jmp
and
fildl
cmp
dec
xor
jp
mov
add
int3
push
mov
jecxz
xor
xchg
add
lcall
sbb
pop
stos
push
outsb
loopne
jo
xor
aad
lahf
enter
inc
adc
or
leave
jmp
dec
xor
filds
xchg
cltd
jae
lods
and
add
pop
mov
ret
std
shlb
xchg
jo
push
dec
xchg
addb
cld
or
dec
inc
mov
iret
es
pop
mov
movsb
js
pop
iret
fdiv
sbb
dec
or
mov
dec
mov
jnp
inc
pop
incl
pop
mov
das
mov
pop
pop
lcall
rorb
xlat
mov
int3
and
lret
insb
and
ficompl
ret
xor
jecxz
pusha
adc
call
mov
fstps
dec
and
xor
je
jge
insl
loopne
push
push
or
std
orb
inc
jecxz
jne
jno
out
idivb
sbb
xchg
mov
lret
scas
jge
jbe
sahf
adc
dec
adc
pop
std
xor
daa
std
lcall
cmp
push
test
data16
stos
dec
rep
pop
add
push
and
jecxz
ret
push
push
pop
lret
jmp
inc
pop
mov
nop
gs
aaa
loopne
mov
rcrl
mov
or
jecxz
inc
mov
adc
xchg
iret
dec
jns
dec
shll
pop
adc
lds
sub
clc
or
dec
in
inc
cmp
sub
xor
aas
hlt
ret
dec
or
stc
inc
jmp
xchg
test
repnz
sub
mov
sub
mov
sbb
stos
je
lock
dec
mov
xor
dec
add
into
mov
roll
mov
add
add
mov
sub
add
add
mov
arpl
insl
sub
enter
std
inc
es
fdivr
mov
xor
test
incl
in
inc
decl
push
lea
lock
push
loopne
fisttps
in
adc
leave
ret
add
movq
sub
add
add
out
xchg
sarb
outsl
cli
or
ret
bound
testl
lock
rorl
pop
xor
sub
dec
movsl
loop
sbb
dec
les
mov
adc
test
into
pop
jae
lcall
clc
pop
cld
push
js
push
push
je
push
lea
push
adc
adc
add
and
fiadds
push
push
clc
push
push
ss
hlt
pusha
push
in
mov
inc
push
dec
cmp
or
adc
daa
cmp
enter
xchg
push
push
push
cmp
scas
pop
push
rcrb
rcll
shl
outsl
addr16
push
popf
fisubl
jmp
push
fdivrp
lock
clc
push
jo
jb
mov
insl
cmp
push
cmp
push
cmp
outsl
popa
jg
rcr
pop
add
shrl
dec
arpl
push
jns
mov
lret
push
jp
push
push
dec
mov
data16
or
lock
add
xor
jb
or
mov
fsubs
lret
jbe
shl
mov
js
je
clc
dec
cld
call
imul
sub
jns
lcall
scas
mov
fdivr
push
xor
in
push
jne
stc
lock
jae
xor
imul
cmp
sbb
sub
stos
jbe
imul
xor
mov
pop
push
rclb
push
add
xchg
push
and
inc
jle
js
int
cmp
push
cli
add
mov
push
jne
imul
mov
add
bnd
lret
std
mov
fsubrs
fsub
in
push
sbb
incl
ja
pop
sbb
add
decl
fwait
negb
jb
push
lock
xor
push
jno
js
inc
xor
push
ljmp
dec
gs
push
hlt
pop
clc
stos
jnp
pextrw
adc
push
jp
or
into
sahf
sarb
xchg
cwtl
in
xor
lahf
xor
sub
call
nop
and
xor
dec
add
cld
aad
outsb
lret
bound
scas
lock
push
and
jne
cwtl
outsb
jbe
lds
or
ja
dec
fcomps
bound
add
lods
mov
and
pop
pusha
xor
push
add
push
push
out
subl
data16
pop
sub
es
push
hlt
bound
enter
add
push
xor
pop
adcb
aam
pop
xlat
loope
std
mov
push
ja
test
inc
dec
xor
jae
sub
or
popa
inc
add
adc
mov
add
sbb
aaa
pop
sbb
inc
push
in
dec
add
insb
leave
in
xlat
sub
cmp
mov
xor
push
aad
jmp
push
bound
add
dec
mov
adc
in
out
jmp
xchg
or
popa
fisubrs
push
jns
int
push
jae
dec
outsb
jne
ret
lods
stc
xchg
incl
dec
mov
pop
pusha
rcr
je
inc
pop
mov
jo
jo
adc
adc
xor
jg
add
jb
je
pop
adc
orb
push
ljmp
push
push
jno
les
jo
xchg
add
cld
js
dec
add
cmp
mov
nop
sbb
lret
and
mov
ljmp
xor
sub
sub
sub
ds
mov
add
jae
inc
ja
sbb
je
add
lock
or
jo
push
push
jecxz
xchg
popa
aaa
dec
insb
push
int3
cmp
cwtl
cltd
xor
add
clc
xchg
sub
sub
pop
addl
std
and
dec
xor
push
xchg
push
mov
adc
lret
mov
pop
cmp
ret
add
dec
ja
dec
imul
mov
rcll
mov
ficomps
loopne
in
shl
movsb
in
jae
push
hlt
lock
and
push
cmp
push
and
add
insb
inc
int
push
in
push
xchg
test
add
daa
mul
dec
add
fs
lcall
add
leave
ret
or
adc
adc
out
push
inc
push
bound
push
gs
dec
dec
jne
mov
cmpl
push
fisubrs
cmp
test
sti
inc
and
push
xchg
das
inc
xor
or
dec
arpl
jo
sbb
add
mov
test
mov
and
test
stc
dec
mov
push
dec
cmpsl
add
dec
aaa
add
loope
pop
jge
sbb
js
out
lahf
cli
orb
aaa
js
xor
mov
inc
sub
insl
mov
dec
mov
scas
cwtl
andl
mov
clc
or
aas
cmp
cmpsl
rcll
enter
and
xor
mov
xchg
jle
add
cmp
loope
adc
inc
outsl
push
push
filds
mov
mov
add
or
push
mov
push
into
fs
inc
dec
jmp
jb
jne
xor
testl
jne
sbb
mov
sbb
pop
clc
sbb
aam
dec
mov
outsb
pop
iret
sbb
inc
insl
sub
out
xor
push
inc
dec
outsb
cmp
push
push
sub
xor
in
out
cld
lret
addr16
jb
and
popa
test
and
push
add
push
dec
xor
imul
xchg
dec
jg
xor
xor
inc
pop
add
dec
hlt
call
adc
sar
incl
inc
movsb
cmpl
bound
out
mov
test
xchg
clc
mov
mov
jns
push
push
jo
mov
bound
xchg
xor
push
add
mov
pop
bound
ret
jbe
and
into
add
ja
das
cmp
das
or
and
push
inc
fs
adc
insb
jb
lahf
mov
mov
andl
mov
push
jb
xchg
scas
lret
sarl
mov
mov
add
loopne
adc
movsl
mov
movl
scas
pop
mov
pop
add
push
pop
xor
outsb
lods
add
sub
loop
push
adc
push
inc
mov
add
push
jle
pop
insl
iret
shll
push
sub
jg
negl
jmp
inc
inc
sub
pop
ja
sub
mov
inc
push
dec
sbb
adc
sbb
adc
divb
dec
incl
jo
push
adcb
add
fwait
idiv
ljmp
mov
sub
mov
push
aas
js
mov
add
scas
pop
pop
pusha
add
jno
call
push
push
out
xchg
add
shrb
inc
jno
repz
or
iret
inc
fs
repnz
push
push
jecxz
ret
inc
arpl
dec
sub
inc
sub
push
ja
iret
lcall
mov
sub
add
push
cmc
loopne
call
fstps
rcrl
rcll
roll
fiaddl
jne
mov
push
sub
js
sub
imul
xor
adc
dec
mov
insb
fmuls
jo
js
fsub
or
pop
xor
xor
js
lds
js
jnp
add
es
arpl
imul
cwtl
xorb
int3
pop
dec
es
fistpll
push
pop
jo
dec
dec
sahf
lds
in
test
xor
add
jg
je
test
hlt
outsl
or
in
push
cld
insl
int3
xor
addr16
cld
insl
push
push
test
inc
push
in
nop
hlt
mov
scas
adc
push
inc
sbb
mov
rclb
scas
mov
push
gs
push
push
testl
lods
in
scas
push
add
scas
mov
sbb
and
adc
cmp
clc
cmp
mov
popa
jae
cld
ljmp
dec
sub
push
mov
shll
nop
inc
mov
push
push
xchg
push
cmpsl
adc
mov
push
inc
push
add
rcr
lret
js
cmp
into
lcall
pop
cld
call
cmp
lds
inc
shll
xor
addl
andb
pop
mov
mov
or
push
dec
push
jecxz
xchg
jae
jne
inc
aaa
out
call
jg
aaa
push
shll
push
pop
decl
ss
ss
lea
jne
dec
pusha
xor
push
jecxz
adc
adc
push
push
cmc
aaa
pop
adc
mov
in
push
imul
xor
inc
hlt
push
push
jne
or
mov
pop
mov
or
rcll
jecxz
out
rorb
icebp
cld
jbe
jg
jno
add
sub
push
adc
sbb
xchg
dec
jne
adc
cmc
dec
sub
sbb
add
add
jmp
das
cmpsb
inc
dec
cmp
ss
pop
xchg
in
adc
push
jno
in
jne
jp
push
xor
pop
stos
add
fsubrl
xor
mov
movl
dec
add
pushl
sbb
test
jbe
pop
xor
shlb
sahf
pop
jne
sub
and
push
addr16
push
push
dec
jbe
jmp
in
sti
inc
jnp
add
inc
dec
out
xlat
in
insb
dec
inc
mov
test
mov
aas
mov
js
sbb
push
jno
mov
mov
shrl
inc
inc
js
xor
lock
add
loope
mov
shl
test
push
push
inc
inc
push
push
push
adc
cwtl
out
sub
sbbl
xor
jae
push
sub
ds
cmp
pop
roll
mov
ss
in
cmp
add
mov
inc
test
xor
or
fdivp
shl
jle
rolb
mov
inc
fadds
icebp
mov
in
mov
int
jmp
push
xor
fadds
enter
mov
mov
add
ret
add
dec
iret
sbb
sub
pop
push
popl
jbe
inc
clc
jg
xchg
mov
dec
inc
mov
sub
std
mov
ret
sbb
pop
js
push
add
aad
xor
jns
std
imul
xchg
jns
or
jne
outsl
add
in
aam
push
in
into
add
inc
notl
push
jae
aaa
lock
fs
inc
push
data16
fs
inc
fs
stc
je
call
popf
loope
inc
aam
dec
pusha
ja
test
loope
dec
jbe
jne
sahf
lds
dec
sbb
cmp
and
inc
sbbl
outsl
fwait
jo
inc
inc
divl
sub
xchg
adc
or
cmp
inc
dec
leave
hlt
inc
push
add
lret
cmp
or
ret
bound
fs
jge
fcoms
inc
xor
imul
mov
jo
pop
cld
and
dec
dec
dec
mov
std
ret
jecxz
push
jo
into
jbe
push
xor
push
out
pop
and
gs
dec
push
stos
ss
xlat
push
push
test
mov
mov
iret
adc
cmp
rorb
faddl
push
xchg
pushl
add
adc
add
xchg
in
ljmp
xor
clc
add
inc
sub
mov
negl
repnz
sub
xor
add
mov
imul
fildll
jns
je
rolb
imul
mov
fistpll
ja
in
push
add
mov
icebp
or
mov
cmp
shll
push
insb
imul
rorb
and
mov
ss
adc
sub
push
adc
das
shl
rolb
inc
jbe
add
adc
inc
or
int
ret
push
jbe
add
mov
sub
sbb
mov
pop
arpl
sub
ljmp
loop
push
mov
add
addr16
inc
jns
sarl
mov
jae
sub
dec
inc
mov
jg
rolb
adc
sub
mov
ja
mov
faddl
je
inc
xchg
jne
push
push
outsl
mov
inc
jae
inc
push
sbb
inc
dec
inc
addl
cmp
int3
add
sub
inc
inc
lock
xor
cmp
dec
sub
nop
cmp
mov
push
pop
adc
inc
dec
sub
dec
pusha
sbb
pop
cld
mov
push
lret
dec
mov
js
bound
inc
push
inc
ret
or
loopne
adc
dec
add
loopne
xor
int3
adc
inc
sub
xchg
and
dec
or
mov
pop
sbb
outsb
inc
imul
sbb
xchg
lds
jae
mov
and
addr16
adc
dec
inc
inc
or
int3
dec
adc
xor
mov
add
add
fs
dec
int
loopne
out
push
push
fildll
and
push
inc
outsb
sub
pop
aad
into
inc
sbb
or
push
adc
cmp
movsl
hlt
jge
inc
imul
mov
pushf
mov
push
jl
dec
sbb
or
and
imul
aaa
imul
flds
cmp
outsl
mov
nop
mov
ret
inc
addl
adc
fsubrs
addr16
add
jne
lret
jno
ljmp
mov
scas
and
gs
movsb
dec
adc
mov
inc
push
mov
add
jbe
cmp
add
and
dec
dec
xor
xor
adc
push
pcmpeqb
mov
ja
pop
push
push
arpl
inc
dec
add
shl
or
dec
mov
push
inc
cmp
sub
daa
loop
pop
push
jne
xor
jl
bound
ss
xor
sub
push
xor
dec
outsb
aaa
adc
mov
jno
cmp
aad
dec
jo
fwait
push
push
cli
js
xor
and
in
shlb
mov
jp
or
sbb
das
mov
xor
dec
push
jp
ljmp
push
shlb
inc
xor
adc
insl
bound
inc
test
inc
jp
dec
subl
cld
subl
mov
cwtl
jbe
xor
mov
ljmp
push
dec
insl
mov
push
loop
lods
test
xchg
sub
jae
into
ja
sub
outsl
pop
add
add
adc
pop
xchg
lock
jns
lcall
in
dec
sbb
dec
dec
ss
mov
push
inc
cmp
xchg
subl
xchg
dec
add
incb
out
clc
and
sub
add
fwait
loopne
scas
idivl
ja
adc
shlb
sahf
dec
jmp
push
push
jbe
popf
mov
sub
js
sub
cmpb
cmpb
and
out
pop
mov
ja
dec
inc
dec
push
imul
dec
inc
lea
clc
adc
faddl
push
mov
loopne
sub
mov
outsl
addb
lods
fists
inc
mov
dec
insb
insl
xchg
xchg
jmp
rcr
jno
push
test
add
lock
jecxz
fadd
dec
inc
js
adc
dec
nop
stos
dec
jae
sub
lods
aaa
fcoms
push
inc
push
jo
daa
outsb
gs
aad
jae
xchg
sub
push
mov
xor
cmp
inc
test
add
pop
inc
leave
dec
fisttpl
daa
dec
jg
push
aam
push
inc
push
jno
pop
test
sub
adc
push
mov
fwait
aad
rorb
fnstsw
mov
lahf
lock
fwait
gs
rcrb
nop
pop
aaa
pusha
mov
inc
inc
dec
rorb
xchg
jge
insl
sub
pusha
sub
jp
shlb
jb
cmp
xor
push
xor
inc
mov
mov
ds
sahf
cmpsl
daa
js
xor
insl
js
mov
sub
fs
jbe
lret
pusha
or
lcall
inc
call
adc
pop
test
inc
push
inc
js
shll
loopne
jne
add
mov
rcrb
add
dec
ja
js
cmpsb
or
andl
dec
jo
xchg
lods
out
adcb
add
out
push
or
dec
dec
mov
push
out
jp
mov
pop
loopne
inc
add
pushl
add
inc
ja
add
hlt
push
insb
adc
movsb
and
dec
dec
jp
push
add
and
inc
jne
gs
ret
hlt
pop
aam
add
rorl
mov
gs
addr16
nop
pop
push
outsb
mov
nop
xor
push
sbb
mov
push
inc
jb
scas
cmp
je
dec
xor
or
pop
mov
je
int3
cmpsl
or
xor
jns
xor
arpl
das
push
dec
popa
dec
push
add
pop
mov
les
sub
cld
fistpl
cmp
arpl
fs
ja
push
js
lock
add
pop
add
ret
outsb
sub
xor
add
mov
adc
and
sbb
mov
lods
mov
push
stos
mov
fmull
or
test
add
mov
push
push
mov
mov
pop
cld
sub
ficoms
jbe
push
add
mov
inc
loopne
jp
aas
in
orl
inc
test
arpl
leave
lods
ja
ret
mov
jns
dec
jmp
aaa
outsl
cli
shrb
add
sbb
das
ja
lahf
add
popf
fs
lret
and
faddl
fs
xor
cmp
inc
dec
xchg
adcb
and
xorl
and
and
mov
push
scas
gs
push
ret
ja
jne
pop
push
stc
in
xadd
jb
inc
adc
out
pop
je
std
xorb
rcl
cmp
add
leave
bound
jmp
pop
in
iret
mov
lock
inc
pop
loope
sarl
sti
mov
push
int3
scas
sub
inc
push
bound
xchg
jbe
jae
inc
cmp
xchg
xor
or
iret
jno
push
mov
out
loopne
jne
jno
sub
sub
or
mov
add
mulb
outsb
xchg
enter
cmp
mov
pushf
inc
dec
or
ja
addb
push
sbb
daa
xchg
std
add
js
cmp
and
xor
movb
dec
dec
cmp
adc
push
push
gs
cli
and
lock
xor
jne
inc
push
jmp
mov
icebp
fiadds
ljmp
xor
scas
xor
mov
mov
repnz
dec
add
inc
movsb
inc
daa
jge
aad
push
int3
js
xchg
jo
jns
fs
add
mov
inc
dec
adc
js
push
pop
into
out
add
movl
ss
test
flds
ret
adc
dec
pop
lcall
cli
add
cmpl
imul
and
and
ffreep
gs
ret
push
movsb
mov
jo
bound
fildll
and
jp
pop
push
in
inc
iret
xchg
into
inc
jl
push
jns
dec
mov
xor
pusha
sbb
inc
dec
dec
cmp
xchg
push
mov
ss
add
outsl
inc
dec
out
shrb
xchg
push
aaa
jae
inc
inc
and
jg
add
and
adc
xor
mov
inc
mov
jg
outsl
mull
enter
mov
pop
mov
inc
push
mov
or
into
fucomip
jne
cmp
notl
add
sub
popf
pushf
std
ja
loopne
inc
xlat
lahf
dec
xchg
sbbb
xchg
adc
add
les
mov
pop
mov
jmp
mov
push
loop
pop
loop
adc
sub
loopne
testl
js
add
inc
push
mov
mov
mov
dec
sub
add
adc
pop
testl
nop
push
and
inc
xor
or
rcrl
xlat
xor
into
add
sub
call
fnstcw
mov
sti
sub
push
push
or
loope
test
mov
std
lahf
jne,pn
dec
daa
aas
into
mov
adc
mov
add
sbb
ds
cltd
sbbl
out
jb
push
mov
dec
into
lcall
fimuls
xchg
sbb
add
jo
mov
sbb
pushl
neg
std
mov
pop
mov
inc
jns
mov
sub
mov
mov
xchg
clc
shlb
mov
lock
sbb
jle
xor
jnp
mov
mov
sbb
mov
mov
fiadds
add
mov
sub
fistps
negl
test
inc
and
das
inc
call
and
mov
mov
mov
inc
sbb
lret
outsl
xor
xchg
cmp
decb
fwait
sub
loop
pushl
hlt
jge
push
add
dec
icebp
mov
testb
add
lea
add
dec
or
mov
popf
inc
mov
arpl
add
ja
mov
inc
mov
outsb
lret
popf
xor
hlt
dec
mov
xor
loopne
adc
idivl
sbb
ss
mov
jns
push
lcall
inc
dec
jl
mov
mov
ljmp
jecxz
cmp
and
and
loope
lret
jae
lods
insl
hlt
mov
xchg
jo
or
xchg
mov
dec
ficompl
popf
outsl
addr16
jbe
popa
cli
jmp
xchg
incl
pop
pop
std
cmp
shl
xchg
test
sbb
sbb
insl
adc
or
mov
clc
out
push
repz
ja
cli
inc
into
hlt
add
adc
loope
mov
cmp
sub
ret
decb
or
cmp
or
jae
jecxz
xor
adc
adc
or
std
fnstsw
xchg
add
shl
xor
std
movsb
and
fdivrp
push
mov
jge
inc
mov
mov
cmpsb
sbb
sub
std
sub
pop
cltd
cwtl
xor
cmpl
mov
fcoms
stc
sbb
aas
mov
shll
loop
setbe
mov
in
fwait
sbb
and
out
fidivrs
xchg
jle
ss
push
sub
and
in
add
and
cltd
into
cmp
hlt
out
mov
jne
xchg
cmp
xor
iret
mov
shr
xchg
xchg
rep
es
jae
clc
mov
rcr
pop
fadd
xchg
sbb
lods
cmpsb
imul
mov
lock
sub
test
popf
mov
dec
fwait
data16
fiaddl
iret
xor
pop
je
push
jle
sbb
jl
mov
cmp
std
lods
testl
jnp
ficompl
fsubrl
jbe
aad
pop
mov
scas
repnz
push
es
and
or
mov
in
shll
and
iret
lahf
add
mov
sbb
jg
inc
xor
and
inc
fstps
aaa
rolb
fnstenv
push
out
les
or
and
cmp
lcall
ljmp
add
push
mov
leave
rcrb
pushl
loope
sahf
clc
push
and
mov
sub
jge
push
mov
xlat
sub
out
adc
jbe
xor
outsl
jo
lea
testb
push
xchg
adc
sar
fldl
mov
outsb
ss
ja
pushl
stos
stc
stos
lods
mov
dec
adc
addr16
stos
or
test
xlat
inc
ret
sub
ljmp
pushl
cmp
fiaddl
lcall
or
adc
pushf
jmp
mov
cmp
cli
ffreep
aas
jo
cmp
xor
ret
sti
cmp
mov
enter
push
jbe
loopne
lock
shll
cmpsb
dec
dec
and
std
mov
cmpsb
pop
xor
add
sbb
clc
cmpb
jnp
push
lods
xor
call
mov
call
and
shlb
jns
jg
or
div
and
fiadds
divl
push
outsb
add
ljmp
aad
and
sahf
lods
mov
pop
lds
pop
out
push
aam
enter
sub
cmpxchg
push
xchg
pop
lret
mov
jno
xchg
mov
xchg
mov
divl
mov
xor
gs
sbb
push
xchg
ret
sti
ja
add
sub
dec
fs
incl
addr16
mov
adc
ss
aaa
push
inc
xchg
aam
cld
ss
lret
cmp
sub
and
repnz
xchg
int3
or
pop
test
xchg
dec
xor
push
pop
pop
std
cmpsl
in
and
push
mov
sbb
lcall
jbe
mov
fistpl
int3
jecxz
pop
js
aas
ret
cmp
xor
arpl
and
aaa
rcl
mov
cmp
cmp
add
ja
jg
ja
pop
lret
insl
scas
push
and
ja
stos
mov
negl
movsl
mov
add
mov
sub
leave
xchg
mov
sbb
sbb
mov
ljmp
test
lcall
mov
fscale
incl
iret
and
push
stos
or
loopne
sub
jnp
or
cmp
iret
js
sub
fists
xchg
rol
sarb
idiv
inc
mov
fldl
out
or
scas
loope
cli
mov
adcb
movl
xchg
mov
ret
mov
jae
cmp
pop
push
jle
pop
xor
push
std
pop
daa
mov
mov
stc
into
adcb
sub
push
out
repz
shll
fwait
addl
mov
in
movsl
mov
addb
ja
mov
cld
out
popa
lock
add
lret
int
loop
mov
lds
scas
sub
popf
ljmp
in
dec
pop
sbb
xchg
cmc
enter
pushl
sbb
insl
push
ds
mov
pop
js
pop
stos
nop
cmp
jno
jb
and
add
cmpsl
push
xchg
shlb
push
pop
mull
or
decl
loop
int
cmc
sbb
or
mov
btr
dec
mov
stos
inc
or
jns
lods
inc
adc
out
out
scas
or
push
ljmp
jns
jmp
sub
mov
cs
aad
pop
daa
pop
popa
cmp
shrb
jmp
sti
jns
out
xchg
xor
cwtl
mov
adc
mov
jo
jmp
out
mov
popf
fdivrl
add
pop
and
jo
adc
call
std
inc
cmp
cmp
adc
int3
jg
sti
out
decl
pop
push
lea
dec
jbe
sbb
incl
sub
jb
loope
sub
fdivr
fnstsw
mov
add
jge
mov
and
push
xchg
lahf
sbb
cmp
mov
cmp
sbbb
mov
imul
mov
movsb
sbb
andb
sbb
add
std
pop
insb
xchg
jle
dec
fsts
mov
sbb
sarl
lcall
fs
push
dec
ja
in
aam
push
into
push
cmpsb
jo
cld
aaa
add
iret
pop
push
aad
repnz
mov
lahf
lcall
mov
push
cli
xchg
int3
daa
aam
mov
loope
cli
sub
addr16
ret
cmpb
mov
and
out
nop
imul
mov
add
mov
in
jbe
jg
decl
fidivrs
aas
sbb
stc
pop
inc
movsb
jg
nop
icebp
cmpsl
je
push
mov
jb
loop
mov
push
fildl
fidivs
aaa
shl
push
and
mov
arpl
jl
jg
jno
pop
fnsave
mov
jl
xchg
xor
xor
xchg
mov
inc
ds
jge
rolb
lret
jmp
inc
and
pop
ss
pop
mov
scas
adc
and
and
xor
out
push
fisubrl
fwait
insb
mulb
pop
scas
jmp
rcl
sbb
and
hlt
cmpsl
jb
jecxz
fdivrl
mov
cmp
pop
inc
repnz
mov
jl
or
jns
push
stc
jl
xchg
mov
push
cwtl
jo
push
rorl
dec
pop
lcall
and
fcomip
mov
xor
pop
cmp
cld
outsl
mov
lahf
jo
xchg
roll
sti
cmp
push
ljmp
lock
pop
add
lret
in
gs
mov
jge
adc
push
and
repz
cmp
jo
adc
out
out
fcompl
push
mov
mov
outsb
loopne
fsubrs
or
xchg
mov
ret
cmp
testl
mov
popf
rcl
mov
mov
inc
add
pop
inc
pop
je
mov
jl
mov
test
int
push
cld
push
incl
push
loop
int
mov
cmp
int
fimuls
mov
mov
decl
out
aaa
jb
loop
aaa
sbb
iret
xor
mov
loopne
pop
leave
rcr
adc
aad
xlat
fsubp
pushf
dec
std
in
hlt
fcompl
repnz
aaa
les
xchg
lcall
push
frstor
repz
xor
fdivl
repz
incl
xor
arpl
or
mov
xor
and
and
call
test
mov
pop
lods
fndisi(8087
jmp
test
lcall
fmul
dec
pop
test
sub
out
jecxz
jge
loopne
pop
adc
xchg
push
rcll
stos
std
mov
or
inc
cmc
cmp
aas
pop
pop
mov
mov
cmp
pusha
fists
das
aad
push
lock
sbb
cld
cli
adc
sbb
rolb
nop
cmp
dec
adcl
test
adc
fsubrp
mov
add
fidivrl
pop
jb
data16
push
xchg
out
pop
cld
or
add
xchg
add
push
xchg
call
addr16
clc
aaa
mov
clc
into
and
cld
xlat
popf
push
ss
lock
aaa
pop
sbb
pusha
cltd
loopne
mov
mov
jg
pop
outsb
xchg
sub
xchg
inc
loopne
fisttpl
scas
fisttpl
sbb
or
cmc
outsb
cmp
push
sub
lea
adc
std
test
icebp
cmpsl
mov
cmpsb
insl
fs
xor
pop
cltd
jle
sbb
sub
stos
fildll
cli
dec
ja
jmp
out
int
adc
mov
xor
fidivs
std
in
loopne
cmpl
in
outsb
test
out
mov
popf
pop
or
push
clc
lds
add
pop
cmp
icebp
sub
addr16
push
sbb
shr
or
pop
mov
test
jo
arpl
push
mov
shl
lcall
loopne
in
sar
leave
int3
fld
push
shlb
jle
std
adc
jo
jno
icebp
hlt
lahf
xlat
aas
xchg
int3
hlt
sbb
push
in
arpl
lcall
sub
inc
mov
sbb
popf
fidivrl
rorl
jmp
mov
xor
stos
stc
shrb
sbb
add
test
cmpl
cmp
testl
in
inc
loopne
outsl
push
cli
pop
and
xor
fildl
add
pushl
push
sbb
stos
dec
xor
pop
push
xchg
pop
dec
lock
inc
in
stos
mov
cmc
clc
mov
out
sbb
sub
outsl
or
decb
xchg
cmc
gs
xor
icebp
cmp
repnz
test
cmpsl
mov
inc
data16
int
nop
cwtl
adc
loop
dec
push
scas
repnz
mov
xchg
js
and
cwtl
into
mov
sti
out
out
mov
test
adc
mov
insl
push
add
cmp
fildl
mov
fstpt
cltd
mov
add
xor
fistl
into
sbb
jmp
stos
lret
js
mov
cmp
sbb
ja
xor
daa
sbb
or
aad
fbld
ja
jg
scas
and
and
pop
int3
imul
out
ja
dec
out
mov
inc
int
cld
leave
clc
daa
push
stos
and
jg
jg
jnp
xor
stos
out
mov
push
adc
sbb
incl
adc
iret
cmc
imul
dec
jbe
mov
int
xor
test
and
dec
cmc
lahf
ret
push
xor
add
cmpsl
fsubrl
mov
dec
aas
out
xorl
mov
xor
add
push
pop
pusha
add
add
fs
and
or
ret
xchg
pop
sbb
jns
push
imul
mov
jne
daa
or
in
out
inc
stos
out
lds
and
fwait
es
jb
out
and
dec
jle
pop
loop
sbb
decl
dec
xchg
rcrl
flds
in
and
sbb
std
and
popw
or
in
enter
pop
loopne
fdiv
push
lock
lock
mov
mov
dec
pop
lret
jecxz
ja
mov
in
nop
mov
fisttps
in
mov
dec
sub
push
mov
dec
cmp
xchg
iret
cmp
adc
cld
pop
mov
subl
dec
pop
mov
lahf
pushf
adcl
add
hlt
mov
pushf
hlt
sbb
pop
negl
cld
lock
cmp
xchg
sti
mov
les
mov
adc
out
loop
scas
sarb
push
rcr
rolb
mov
cmp
iret
mov
jae
loop
sbb
arpl
jecxz
push
jne
daa
loop
cld
nop
lcall
clc
dec
lret
iret
xor
pop
jnp
add
sub
out
incb
mov
xchg
loope
xchg
push
stos
in
fstps
cld
inc
inc
cltd
jge
xchg
into
andb
ret
inc
jmp
pop
jne
call
jae
shl
pop
in
loop
aas
test
push
push
mov
cld
mov
pusha
push
shll
sbb
repz
seto
and
je
jns
mov
and
mov
std
out
pop
cmp
movl
jl
inc
sub
sar
push
dec
mov
clc
enter
lahf
inc
push
clc
push
or
adc
test
popf
movsb
shlb
fistps
sbb
scas
sti
cmp
notb
icebp
pop
sbb
ljmp
out
pop
pop
pop
xchg
push
clc
adc
outsb
mov
xchg
cmpsb
fnstenv
mov
out
inc
dec
xchg
enter
repz
jnp
repz
mov
filds
mov
loope
cmp
inc
imul
test
adc
push
out
mov
add
and
mull
add
ret
incl
sbb
clc
and
sub
cltd
jne
jnp
mov
dec
and
pusha
inc
dec
xchg
mov
outsl
je
shr
adc
cmp
jb
dec
ds
pop
mov
aam
fdivs
leave
in
gs
mov
lret
call
jecxz
cmp
sbb
paddusb
mov
xor
pop
ds
adc
int
mov
es
push
loope
add
std
mov
arpl
test
xchg
lret
pop
mov
xchg
mov
popa
lods
incl
lahf
push
aas
cmc
cmp
and
lock
test
mov
xchg
mov
xor
cli
mov
pushf
pop
sub
out
imul
mov
sbb
mov
push
insb
into
lcall
and
fnstenv
or
movsl
and
pop
inc
mov
sub
jbe
mov
das
outsl
je
add
or
push
xchg
jae
xor
inc
adc
ljmp
push
mov
outsl
in
hlt
jecxz
add
pop
pop
push
out
stos
test
sbb
seta
xchg
xlat
clc
out
ljmp
lea
and
into
add
push
push
push
loope
cltd
cli
lahf
lock
sub
imul
fdivl
xchg
fsubs
mov
rcll
and
sti
fildll
xchg
push
je
add
insb
mov
fdiv
aam
repnz
xchg
in
mov
jb
out
js
rcr
sub
lahf
mov
loopne
jg
cmc
mov
std
or
dec
outsl
push
out
testb
push
push
mov
repz
jno
jo
mov
ret
arpl
cld
xor
cmp
inc
std
testb
ja
sbb
push
inc
fisttpl
jg
pushl
cmc
mov
les
inc
jb
ss
add
pop
daa
lea
sub
insl
pop
adc
mov
out
leave
bound
in
inc
xchg
aam
fnstsw
mov
xor
iret
and
inc
sar
inc
jno
test
jecxz
pop
lock
test
jmp
fs
mov
arpl
lea
loopne
std
mov
out
pop
cmp
lods
adc
jmp
adcl
repz
add
pop
out
adc
and
adc
cmpsl
repz
arpl
dec
jge
out
sbb
nop
sub
frstor
adc
ds
lahf
mov
movsb
movsl
dec
dec
or
lock
lock
pop
push
std
cmp
xlat
stos
xchg
add
fiaddl
fdivr
adc
test
lahf
gs
mov
pop
icebp
sbbb
cmp
inc
sbb
lcall
aaa
mov
imul
jg
or
or
pop
jp
push
xchg
sti
add
or
jnp
add
sbb
ds
sbb
sbb
cmpps
sub
jns
mov
xchg
gs
lock
je
stc
mov
sbb
aas
sbb
fisubrs
mov
lock
addr16
jo
xor
mov
cltd
test
dec
sub
sti
sub
cld
push
movsl
mov
pop
fdivr
push
inc
dec
aam
xchg
push
rcll
loopne
sub
rcrb
push
and
jns
popa
pop
loopne
sbb
mov
sub
cmp
push
decl
les
orb
call
call
push
lods
mov
push
add
cmp
inc
pushl
jg
sbb
jl
in
sbb
iret
imul
lret
xchg
lcall
neg
aam
popf
pop
jae
test
xchg
jp
add
or
jbe
fstpt
add
or
xor
or
scas
mov
insl
xchg
lea
mov
or
cli
cmpsb
xor
or
imul
in
movsl
pop
jns
notl
imul
jne
xchg
ja
mov
push
fisubs
xchg
jmp
test
jle
and
shll
fcoms
fnstenv
mov
sahf
add
imul
mov
addr16
pop
xor
dec
fiadds
je
std
insb
cwtl
jnp
mov
cmpsb
sbb
adc
ja
jo
out
mov
and
sbb
pusha
bound
sub
clc
jg
mov
or
pusha
jnp
arpl
pop
mov
xchg
push
adc
xchg
lea
ja
outsl
popa
lods
call
lcall
fwait
mov
xor
sub
lock
cli
addr16
cmp
xor
dec
push
and
pop
fsubrl
jo
loop
cmpsl
inc
push
sub
pop
scas
idiv
out
pop
pop
xchg
fidivs
pop
pop
cmp
imull
cmp
xchg
inc
es
mov
jg
jmp
xor
inc
jge
jbe
inc
hlt
add
rcrl
outsb
and
lock
push
jnp
mov
orl
xlat
push
mov
out
mov
add
cmp
bound
sti
mov
dec
xor
dec
test
sub
std
xchg
out
or
leave
push
sub
mov
inc
sti
inc
or
xor
xor
scas
icebp
cmp
xor
jmp
jb
jnp
sub
mov
cmp
jp
loopne
jg
shr
scas
jae
test
cld
dec
push
ljmp
leave
fs
scas
sub
mov
movsb
sub
scas
loopne
out
into
or
sbb
add
push
lea
loop
lock
cmp
lock
xchg
jmp
lret
pop
cwtl
lret
dec
or
fdivl
dec
pop
jecxz
mov
repz
pop
sbbb
jp
sbb
inc
mov
or
jmp
jns
jp
movsb
fcomip
fidivl
and
push
cli
pop
jno
cmpsb
mov
dec
sti
add
add
rcr
push
fbld
inc
sbb
push
adc
les
test
sahf
mov
and
insl
add
lahf
daa
sub
mov
inc
xor
mov
icebp
jno
mov
push
fisubrl
aad
dec
loopne
daa
sub
push
test
aaa
scas
sbb
cmp
ret
adc
outsb
shll
dec
sub
mov
stos
scas
shll
fsubrl
decl
ljmp
lods
adc
xchg
idivl
inc
mov
push
push
add
divl
jmp
sub
inc
stos
push
jnp
dec
pop
inc
movsl
mov
jg
xchg
bound
add
inc
leave
sbb
clc
cmc
jge
xchg
fnstcw
test
xor
and
sarb
sbb
les
cmp
xlat
lods
jmp
add
sahf
dec
pop
mov
dec
xchg
mov
jecxz
mov
cmp
aas
sti
mov
xchg
push
xor
dec
jg
pop
adc
push
jmp
push
orb
fcoml
xchg
mov
xor
hlt
xchg
sbb
ret
dec
je
cmp
insl
fcmovne
mov
imul
push
aas
nop
iret
js
pop
fs
test
push
mov
cmp
inc
stos
fisubs
pop
and
fistpl
sar
iret
rorl
xorl
push
idiv
mov
sbb
lods
stos
xor
cmp
repz
mov
xchg
add
xor
mov
add
add
imull
push
add
mov
mov
push
fildll
test
fwait
xchg
rolb
arpl
mov
push
cpuid
aam
add
mov
mov
insb
jno
xchg
icebp
pop
pop
icebp
ds
lods
std
ret
lds
mov
inc
andl
call
cli
jle
mov
xor
push
fwait
sub
xor
sarb
cmpsb
cmpsl
inc
lahf
and
xlat
mov
sub
cmc
push
inc
movsl
out
jne
sbb
shl
jns
or
inc
lcall
in
sbb
ret
out
pusha
mov
mov
imulb
mov
loopne
jb
add
fidivl
mov
lret
es
jg
decl
sti
pop
lods
loopne
and
sahf
popf
imul
and
cmp
lods
jns
sub
jg
push
dec
test
fs
mov
clc
stc
leave
lret
or
das
mov
lret
dec
aas
loope
mov
push
test
inc
imul
xor
adc
xor
je
mov
sub
test
dec
cmc
in
loope
xor
nop
add
repz
aas
mov
mov
icebp
sub
inc
insb
orl
loope
outsl
sub
push
pop
lock
mov
add
mov
sub
in
xchg
jbe
push
push
loopne
or
inc
push
cmp
mov
xchg
sbb
and
fsubrp
decl
rcl
call
dec
sbb
or
rol
out
fcoms
testl
je
cli
pushf
in
outsl
pop
inc
filds
ss
lret
daa
mov
lcall
subb
pushf
mov
xor
dec
stos
lret
out
js
ficoml
sub
adc
lds
jb
jl
out
mov
int
fldt
idivb
loope
push
pop
adc
xchg
loopne
inc
mov
int3
cli
fistpll
jl
test
cli
aas
fst
mov
sar
xchg
pushf
sbb
or
push
out
jae
sub
aas
stos
mov
dec
mov
xchg
shrl
mov
shrl
aaa
sub
xchg
or
in
and
push
leave
cltd
in
dec
lcall
mov
xchg
aam
xchg
dec
mov
cld
push
mov
sti
jmp
icebp
adc
cld
sbb
xchg
jle
pop
fucom
mov
xor
xor
loop
test
jb
mov
inc
push
loopne
cmp
cmp
call
into
jg
push
inc
incb
cmc
cmpsb
jg
cld
add
ror
dec
test
and
sub
gs
push
call
dec
dec
enter
pop
sbb
push
cld
fnstsw
std
outsl
sub
cmp
xchg
mov
sub
cmp
mov
fildl
and
outsl
push
pop
or
imul
lods
xor
push
icebp
out
xchg
pop
sub
mov
rcll
inc
inc
mov
ds
pop
pop
pop
and
mov
fbld
mov
add
inc
xchg
sarb
out
out
push
jbe
cmp
ljmp
jae
aaa
add
mov
cld
jno
stc
sub
push
repz
icebp
lahf
sub
data16
cmp
lods
fcomps
cli
call
jg
mov
or
dec
jmp
mov
dec
enter
in
mov
in
xchg
jo
jmp
mov
inc
cmp
cmp
negb
mov
lret
mov
xor
rorl
rcll
test
mov
xor
ds
adc
fists
loopne
out
movswl
mov
mov
leave
rol
add
xchg
adc
adc
jbe
pop
jmp
xor
push
sbb
sbb
pop
mov
adcb
sub
cli
pop
lret
mov
imul
clc
dec
rcr
push
lock
imull
into
lea
int3
cmp
push
push
std
aaa
adc
push
push
call
mov
fstpt
repz
mov
outsl
pop
sbb
pminsw
or
cs
and
cs
cltd
push
jg
pop
idiv
sub
jnp
push
pop
inc
in
movsl
add
shr
lcall
adc
cwtl
in
cmp
mov
cwtl
cmp
and
jmp
or
cli
movsl
sbb
sti
ja
xor
popa
sub
cld
dec
dec
movsl
mov
pushf
mov
sub
pop
fiadds
mov
dec
mov
inc
bound
sti
push
out
add
insl
adc
leave
orb
mov
icebp
test
xchg
sub
cltd
sub
pop
repnz
dec
xchg
mov
mov
or
push
cmpsl
stos
cmp
pop
jle
cmc
lcall
int3
ret
shl
stos
imul
push
das
pop
rorb
out
push
push
and
pop
mov
loop
lcall
push
jg
dec
std
jae
inc
inc
jmp
rsm
jb
add
aas
add
xlat
adc
xlat
test
loopne
sbb
mov
dec
jbe
sbb
addr16
out
aad
mov
xchg
xlat
jmp
call
jae
xorl
js
jp
shlb
outsb
sub
pop
idivl
pop
sub
pop
test
add
clc
popf
scas
shrb
sbb
adc
mov
push
mov
out
xor
push
fistpl
daa
jmp
xorl
fnstsw
cmc
or
ja
lahf
std
out
movsl
inc
add
outsl
xchg
jle
dec
inc
adc
add
jg
sbb
dec
mov
inc
lea
cltd
mov
popl
outsl
rorl
xchg
adc
mov
jae
lods
in
or
out
lret
out
adc
sub
push
incl
jno
cmp
pop
in
ja
call
mov
xchg
int3
adc
sub
or
imul
mov
add
xchg
imull
std
out
ret
data16
fisttps
mov
add
lahf
mov
push
inc
icebp
incl
inc
hlt
sti
adc
test
daa
int
aam
inc
clc
sub
pop
add
jp
add
fistps
xchg
cmc
push
mov
rcll
mov
mov
jb
mov
sbb
not
push
fists
cmp
cld
lcall
stos
adc
repnz
lcall
inc
clc
clc
addr16
divl
insb
test
mov
inc
js
add
sti
movsbl
add
pop
in
pop
or
imul
clc
mov
inc
into
jp
fsubrs
popa
xchg
add
xor
cmp
jmp
xor
fwait
idiv
loope
js
hlt
push
mov
mov
scas
rcll
jg
mov
stos
arpl
mov
ljmp
sbb
mov
es
sti
sbb
mov
pushf
lods
pop
jge
daa
sub
pop
sub
mov
aaa
leave
mov
mov
jno
cld
clc
das
sbb
push
fsubr
xchg
cli
sbbl
jg
dec
sub
xor
test
mov
rcrb
loopne
insb
lret
push
xchg
adc
sbb
aas
testl
cs
sbb
jg
cld
mov
cld
out
jnp
jecxz
ret
sbb
sub
inc
xorb
pop
pop
ficomps
mov
dec
xor
orb
jg
hlt
arpl
std
xor
cli
push
mov
pop
fmul
lods
mov
in
gs
cmp
loop
ret
jg
xor
int3
pop
xchg
mov
jno
jo
jmp
sbb
dec
pop
repz
xchg
fnstsw
cmovne
test
dec
clc
das
fdivr
jecxz
mov
or
or
fldcw
dec
popf
ret
mov
testb
imul
repz
std
insb
adc
and
lahf
cmpsl
jg
cli
lahf
mov
fimuls
mov
test
push
dec
mov
and
sub
mov
xor
cmp
cld
popf
add
lret
rcl
clc
pop
push
sbb
push
jns
pop
jbe
ja
test
out
test
cmp
inc
ljmp
push
inc
jl
mov
fstl
adc
fwait
dec
loop
insl
push
hlt
jl
cmpsl
pushl
test
mov
sbbb
in
test
or
sbb
and
sti
pop
mov
jb
push
cld
sub
nop
cld
jg
aas
cmp
add
mov
cmp
push
ljmp
mov
enter
jmp
loope
xor
lods
or
jne
in
add
lock
ljmp
xchg
adc
mov
inc
mov
mov
jle
push
sti
push
das
jmp
cmc
fdiv
roll
popf
mov
clc
cmc
mov
scas
inc
sub
inc
int
notl
adc
adc
mov
jbe
clc
outsl
nop
ret
push
pop
sub
imul
pop
ljmp
pop
outsl
inc
cmpsb
adc
int
pop
enter
adc
xor
addr16
mov
inc
mov
cmp
cmp
sub
jbe
call
mov
mov
add
cmp
push
dec
lds
ja
inc
call
mov
aas
daa
jno
xchg
je
dec
jno
sti
lret
ja
push
fcmovne
imul
jo
scas
mov
xchg
cltd
adc
xchg
stos
xchg
or
jle,pn
mov
xchg
pusha
push
or
sub
sti
ret
int
in
sub
lds
ja
jmp
fcom
aam
outsl
pop
test
adc
sub
aas
cmp
loopne
pusha
rcll
push
test
out
sti
or
jecxz
sub
jg
clc
ja
xchg
adc
adc
insb
fcomip
inc
xor
incl
and
shll
xchg
imull
and
mov
mov
mov
jns
std
rcr
mov
cmp
int
push
iret
pushl
mov
push
stos
ss
push
or
sar
or
pop
ja
mov
pop
test
mov
adc
or
fwait
push
sub
lods
push
cli
test
scas
push
lods
ss
push
or
ret
aaa
pop
mov
fcomip
add
xor
cmp
mov
and
decl
das
mov
stc
pop
mov
sbb
adc
std
or
mov
out
xchg
and
mov
or
xchg
ficoms
pop
stos
int
hlt
xlat
lods
xor
jecxz
repnz
std
jg
aas
std
and
cli
inc
inc
test
mov
popf
jbe
adc
push
add
mov
mov
dec
cmp
std
xchg
pop
inc
cmp
pop
call
mov
cmp
jle
and
sub
sti
popf
adc
mov
sbb
ret
xchg
push
cmp
xchg
sbb
jg
filds
jl
das
lea
lcall
dec
xor
push
jle
mov
cmpxchg
icebp
inc
sahf
call
sbb
mov
cmp
int3
cmpb
imul
into
lods
mov
jo
addl
sub
jg
decl
jl
add
outsb
gs
cmp
popa
fcomps
popf
scas
outsl
sub
dec
pop
lcall
pop
sbb
push
pop
scas
xchg
jno
data16
xor
adc
sub
js
mov
cli
imul
stos
cmp
xchg
js
sti
and
cli
idivl
push
xor
cmpsl
push
mov
and
inc
adc
les
sub
sub
sub
cld
aas
loope
sbb
shll
cmpsl
and
lahf
lods
sbb
out
sub
jecxz
add
incl
loope
call
jg
cmc
fwait
mov
inc
clc
out
pop
pop
jno
fdiv
jbe
or
inc
decl
popa
outsb
nop
add
mov
and
cmp
movsb
xor
pop
xorb
inc
dec
popf
paddd
iret
inc
addr16
xchg
cmpsb
xor
xor
int
mull
lahf
mov
in
enter
push
add
out
int
andb
out
xor
fcoms
rorl
cld
adc
insl
out
in
out
pop
pusha
icebp
stc
insb
fwait
aad
xor
out
ret
pop
es
incl
inc
loop
js
adcb
sbb
mov
repnz
ja
fptan
aam
loop
shlb
clc
sub
dec
test
nop
popa
push
sbb
cmp
inc
adc
repz
fcmovnu
xchg
lea
subl
in
push
and
add
in
shr
outsl
gs
or
pop
xchg
pop
paddw
es
add
and
aas
cld
bound
sub
add
in
lock
ja
jg
ret
int
fwait
mov
or
stos
mov
rorl
loopne
add
add
fildl
adc
mov
jo
or
cmp
add
mov
lock
in
pop
or
shl
std
mov
les
cmc
add
lods
xchg
or
inc
fnsave
into
sub
pop
add
and
imulb
sub
ljmp
xchg
shll
pop
mov
data16
rcrb
sub
lcall
sub
jg
cmp
sub
or
es
cmc
add
jns
lret
dec
jecxz
push
push
cltd
push
repz
stos
clc
arpl
and
lock
mov
call
imul
inc
add
popf
push
or
sub
incl
xchg
outsb
mov
adc
lock
std
add
sarl
hlt
ret
mov
popf
pop
jmp
addr16
and
mov
pop
cmp
sbb
out
push
mov
or
out
out
pop
cmpsl
scas
xchg
test
fdivs
jg
scas
in
xchg
les
gs
dec
add
test
dec
call
std
jg
xchg
jne
hlt
push
cmc
in
inc
mov
cmpsl
cli
push
pop
adc
repnz
jl
pop
push
sub
add
testb
ljmp
test
pop
cli
xor
in
std
fisubrs
sahf
lret
popa
lock
loop
push
out
in
mov
fldenv
add
mov
sar
hlt
fdiv
das
mov
and
stos
and
mov
leave
stos
push
cld
sub
mov
stc
xchg
std
pop
jg
pop
push
mov
test
lea
in
xchg
pushl
aam
xchg
in
daa
jne
cmp
mov
push
push
cli
pop
inc
mov
pop
insb
icebp
pop
lret
pushl
xchg
pop
decb
add
fnstsw
fsubl
subb
mov
or
add
cmpsb
faddl
jnp
xor
imul
cmp
je
nop
push
cwtl
aas
aam
pop
push
pop
les
pushf
aaa
outsl
fmul
jge
mov
pushf
dec
or
push
fsubs
or
inc
addr16
inc
and
mov
pop
xor
or
push
scas
sti
mov
mov
addl
lret
push
pop
ret
push
mov
xchg
mov
jo
or
ss
ffreep
call
xlat
lret
sbb
js
scas
adc
pop
out
mov
pop
jnp
xchg
sar
dec
pop
nop
sbb
fistpll
pop
fisubs
xchg
pop
push
movsb
xchg
out
addr16
out
cmp
dec
mov
sbbb
ss
cmp
std
scas
pop
mov
pop
ja
pushf
push
lret
jns
sbb
xchg
push
adcb
lods
cwtl
loop
xlat
cmp
ds
mov
hlt
std
pop
cli
pop
inc
mov
and
or
mov
das
jge
shlb
push
repz
mov
and
out
jmp
loopne
mov
fwait
test
pop
inc
addb
out
jecxz
pop
loope
add
xchg
sbb
jecxz
jg
ljmp
insl
dec
cld
mov
loope
cmp
xchg
cli
aas
cmp
pop
jnp
mov
push
mov
or
mov
jl
test
cmp
ud0
ret
mov
dec
jno
fucomip
jecxz
xchg
sbb
adc
xlat
cmp
inc
lcall
mov
sub
insl
pop
jnp
fwait
inc
shll
adc
dec
pop
into
aaa
lea
sar
inc
sahf
jp
push
adc
xchg
sysret
mov
dec
adc
cmpsb
ja
retw
jo
pop
das
cld
ret
inc
xor
scas
lret
addl
cmp
and
mov
mov
lock
push
jl
test
jg
push
and
cmp
add
jae
jbe
add
jo
xchg
cld
mov
sbb
mov
loop
mov
iret
inc
scas
xor
sub
xor
mov
pop
mov
push
xchg
mov
test
iret
lret
mov
dec
sbb
incl
testl
push
mov
ja
idiv
push
adc
rolb
loope
add
inc
adc
scas
push
lods
inc
add
std
aad
push
ds
cmp
fildll
push
ret
fs
pop
shll
mov
rorb
icebp
jecxz
mov
not
mov
cltd
movsl
dec
dec
int3
scas
cmp
cvtps2pd
cmp
pusha
adc
aas
add
jne
jmp
pop
push
dec
cmp
pushf
add
inc
inc
adc
mov
dec
ret
movaps
jae
add
fwait
and
or
mov
mov
cwtl
adcl
les
dec
jmp
add
xchg
sub
xchg
stos
frstor
ljmp
mov
mov
lret
cmp
lock
inc
cmp
mov
mov
cmpsl
mov
jge
imul
adc
int3
push
fwait
xchg
cmc
fdivr
inc
cwtl
xlat
incl
mov
add
test
clc
pusha
inc
xchg
aam
add
fidivrs
pop
inc
inc
xchg
pusha
xchg
loope
xchg
xchg
adc
and
sub
dec
lock
and
push
jge
pop
dec
ss
mul
push
mov
call
xchg
dec
and
inc
sbb
test
mov
mov
pop
jne
add
das
dec
mov
out
or
popf
fstpt
mov
mov
pop
outsb
add
or
fbld
cmc
mov
lahf
xor
push
and
cmpsb
shll
adc
ljmp
iret
dec
mov
mov
cld
sbb
iret
addr16
adc
nop
jle
adc
cmp
or
add
sub
test
in
add
das
fwait
sub
sbb
add
popf
lock
jg
lock
dec
shll
mov
inc
repz
xorb
jo
iret
mov
aas
std
jmp
cmc
pop
xchg
jmp
cmp
xor
push
mov
and
mov
notl
dec
jno
loopne
push
cmp
incb
sbb
push
push
push
loopne
cmp
mov
ja
inc
loop
add
aas
ret
out
emms
and
sarb
aas
pop
fldenv
popf
push
je
mov
incb
in
xor
decl
jb
push
pop
mov
rcll
jmp
jno
das
mov
lods
outsb
mov
cwtl
cmp
dec
call
pop
cld
mov
inc
xor
sbb
rolb
xor
mov
jl
call
jl
aaa
sbb
in
mov
mov
xor
add
jbe
movsb
mov
jl
mov
add
mov
cli
inc
out
popf
insb
scas
mov
int3
rcrl
push
fbstp
push
jnp
jmp
clc
outsb
jb
sbb
xor
clc
lea
sbb
sub
push
xchg
decb
push
push
ljmp
dec
and
out
dec
add
mov
insl
inc
mov
arpl
aad
call
das
loopne
arpl
cmp
outsl
pop
cmp
push
mov
nop
and
mov
outsl
shrb
pushf
jg
shlb
jmp
sti
sbb
je
js
iret
call
push
fmull
in
mov
in
add
decl
imull
nop
cmpsb
sbb
jmp
dec
and
xchg
sar
sub
push
mov
stc
aaa
mov
xchg
mov
jnp
pushf
std
inc
jnp
and
pop
fadd
pop
jge
icebp
out
mov
push
rcrb
mov
jne
rcr
mov
inc
xor
push
lret
lods
xchg
gs
out
jle
sti
imul
outsl
test
pcmpgtw
push
clc
sbb
stos
mov
xor
out
data16
jmp
cli
je
inc
icebp
inc
cmpsl
add
pop
pop
ss
inc
or
mov
mov
aad
cmova
mov
and
push
rorl
icebp
inc
imul
popa
idivl
dec
pop
mov
jbe
lahf
push
fwait
loope
pop
adc
insb
sub
jg
ja
push
imul
sub
int
xchg
clc
push
pop
jne
push
sar
fs
jle
out
mov
sub
icebp
loope
mov
add
fldt
in
test
int
xchg
hlt
aas
loopne
add
dec
sbb
pop
int3
xchg
mov
lcall
add
jb
ja
xor
ljmp
pop
call
jb
mov
arpl
cmp
add
out
jne
iret
in
in
mov
rcl
adc
mov
cmc
sbb
sub
adc
inc
mov
sbb
testb
mov
lea
jg
popa
bswap
mov
out
mov
loope
xchg
cli
mov
push
jg
and
push
add
lock
ffreep
inc
xchg
popf
adc
xchg
shlb
and
pop
bound
addr16
repz
mov
mov
pusha
xchg
adc
sahf
mov
xchg
inc
in
push
sub
loope
test
rcr
mov
jmp
push
data16
das
pop
push
jle
nopl
notl
stc
fldenv
inc
cmp
out
ljmp
xor
sub
xchg
and
int
mov
mov
cmp
mov
inc
gs
and
jg
enter
lahf
cwtl
lret
js
cli
jae
ja
jg
aas
mov
inc
andl
jle
data16
mov
add
stos
xchg
shrl
dec
sbb
popa
testl
sbb
pop
movsb
test
cli
jg
xlat
push
cli
cltd
daa
aad
add
imul
clc
push
cmp
lea
cmp
test
std
pop
pop
ds
test
mov
arpl
std
lahf
jns
sbb
sbb
insb
lds
lock
cli
aam
imul
pop
dec
jnp
loopne
pop
popl
xor
rclb
lahf
out
cmp
cmp
mov
out
lahf
jmp
addr16
jmp
out
fwait
mov
pop
ret
pop
movsl
lret
cmp
dec
std
out
cmp
xor
in
int
sub
sub
mov
rclb
aaa
scas
xchg
pop
sub
jo
jecxz
jb
xor
lods
js
fisubrl
rol
fists
mov
jmp
inc
inc
xchg
lahf
mov
pop
mov
pop
sbb
out
scas
test
or
test
add
aam
mov
fcoml
jmp
dec
loop
mov
mov
into
xchg
dec
push
xchg
mov
cwtl
nop
adc
test
rcr
int
and
inc
xchg
rclb
jns
push
mov
fwait
or
mov
neg
and
scas
and
icebp
inc
cltd
iret
stos
xchg
cmpsl
decb
lahf
mov
rcrl
mov
loop
pop
cld
in
xor
sti
mov
mov
aad
pop
mov
out
cmp
cmc
add
xchg
aam
ds
push
sub
addr16
popf
mov
mov
mov
sbb
pop
cli
and
sbb
inc
lods
loope
rcrb
addr16
pop
out
mov
fdivs
shrl
les
cmp
mov
cmpsb
sar
sbb
scas
jmp
int3
push
mov
sahf
pushf
scas
add
jg
loope
scas
dec
sub
mov
outsl
dec
jle
int
es
test
test
mov
pop
jl
jnp
jecxz
push
pop
and
aaa
std
iret
jmp
addr16
stos
adc
loope
testl
cld
dec
jg
xor
jmp
inc
std
mov
ja
fstp
sub
lods
lods
repnz
rcll
mov
lahf
test
addr16
add
and
add
ljmp
dec
roll
out
loopne
dec
pop
inc
inc
push
xor
cmpsb
jmp
sti
dec
lahf
xchg
and
xchg
and
xlat
jbe
rcrl
aas
ds
adc
add
loop
dec
out
cwtl
sub
dec
mov
and
insb
push
aaa
out
jle
incl
ret
scas
push
imul
lods
sbb
mov
push
dec
jbe
inc
arpl
cmp
cs
lahf
adc
fcoms
mov
and
jb
add
call
icebp
sbb
cmp
jg
jle
xor
xchg
sub
push
pop
xor
jl
into
es
loopne
aad
incl
mov
jg
aam
aad
push
out
cmp
cmpsl
sbb
iret
jg
clc
fists
mov
outsb
cs
inc
out
or
sub
mov
or
cld
mov
incl
enter
dec
repnz
je
fidivs
inc
pop
cmpsb
cli
fists
mov
testl
jnp
push
jnp
into
push
mov
cs
sar
fwait
sahf
xchg
xlat
add
inc
ja
fdivrp
xchg
jbe
stc
roll
int3
or
jbe
lret
sti
jg
inc
jl
adc
lret
push
cltd
push
jecxz
adc
movsb
mov
insl
pop
out
lahf
test
cmpl
push
sbb
in
dec
stc
call
cltd
lods
aad
push
fsubrl
out
movsl
lock
incl
or
leave
imul
pushf
lahf
ss
lock
scas
jno
bound
mov
out
jg
iret
das
xorl
ljmp
sti
mov
adc
sbb
sub
inc
mov
pop
or
push
incl
outsb
dec
cld
lahf
mov
shlb
jmp
pop
adc
iret
dec
and
in
imull
xchg
mov
cld
jle
mov
or
insl
repz
cmp
dec
pop
negl
out
xor
out
addr16
cmc
mov
and
loop
jns
jge
push
xor
mov
mov
or
xchg
jo
add
and
loope
xchg
js
scas
cmc
jg
pop
je
jp
mov
std
cmp
sti
sub
and
adc
mov
shlb
cltd
scas
inc
lods
rcrb
sbb
fwait
ret
mov
aam
sub
dec
mov
cmc
cmpsb
cmp
mull
sbb
mov
pop
ja
fsubp
test
rcrb
push
jmp
lea
ljmp
push
ret
jo
jg
aad
jb
mov
fldz
lcall
ss
fwait
mov
rolb
cmp
mov
lcall
ljmp
loopne
cli
adc
xor
xchg
lret
hlt
aaa
aam
cmc
iret
dec
fwait
and
and
cmp
out
pop
mov
sbb
add
ret
sar
push
mov
pop
push
mov
cmp
fbld
pushl
sti
jecxz
mov
incl
and
mov
xor
cmpb
cld
fidivs
incl
scas
outsl
or
push
in
dec
call
jnp
push
test
ret
pop
xchg
hlt
les
jg
jg
and
test
sti
sub
mov
fs
mov
aaa
inc
xchg
insl
sbb
rol
and
mov
fiadds
pop
sti
arpl
sub
js
mov
icebp
aad
sahf
in
aam
lods
xchg
aam
sub
les
cmpsl
push
mov
sti
mov
repnz
mov
dec
enter
loopne
lahf
faddl
inc
lret
and
lods
scas
icebp
xor
xor
xchg
iret
outsb
adc
fcomi
mov
pop
ret
dec
xlat
fnsave
dec
rcll
ljmp
and
dec
dec
inc
mov
insl
insb
cltd
sbb
mov
stos
cmp
or
ret
sarl
cmp
sub
cmp
jmp
mov
mov
cmpsl
push
sub
nop
push
lds
addr16
scas
into
xor
imul
jmp
cmp
jno
jge
pop
insl
cld
divb
xchg
sbb
xor
enter
orl
inc
rcr
pop
xor
sub
inc
push
ffreep
les
icebp
cmp
scas
adc
dec
clc
inc
dec
sub
jg
and
mov
sti
ljmp
mov
cltd
in
outsl
push
ja
test
mov
in
jmp
outsl
add
fs
js
test
dec
shlb
outsb
scas
sbb
fisubrs
cli
pushl
cmp
fcoml
cmp
sub
decb
and
imul
fistpll
out
add
aaa
and
scas
lock
inc
xchg
popa
scas
add
jg
decl
push
dec
insl
je
xchg
cmp
jecxz
dec
std
decl
lahf
jns
xlat
mov
cs
adc
jg
add
xchg
mov
pushl
pop
icebp
sbb
jns
jg
and
pop
stc
pop
cli
aas
add
lret
mov
ds
push
xor
jg
mov
jmp
sub
sarb
ficompl
jl
inc
jmp
xchg
fidivrl
sub
inc
pop
cmpsb
add
fldcw
call
xor
adc
push
hlt
dec
les
jno
inc
and
sti
fsubs
pop
sub
jp
push
fistl
push
lcall
incl
repz
mov
fs
pop
sub
hlt
ja
sbb
into
push
in
fists
popf
roll
sub
xor
inc
and
xor
out
lcall
movl
add
mov
sub
fwait
push
sbb
int
sub
pusha
mov
xchg
sbb
sarb
and
outsb
and
in
jge
pushl
cmp
push
sahf
jmp
xchg
lds
sub
push
and
xchg
idivl
aas
inc
hlt
mov
jp
add
jnp
adc
out
sbb
pop
inc
mov
jb
xor
pop
iret
lock
data16
cmp
mov
and
stos
incl
push
stc
loop
popa
fldl
into
std
loopne
ja
add
xchg
inc
and
sti
ja
cmpsb
jg
jg
iret
mov
icebp
adc
push
inc
nop
push
outsl
in
call
adc
scas
fbstp
and
les
ficompl
xchg
loope
lock
pop
sub
and
aas
mov
inc
or
out
cmp
call
push
dec
iret
vprotd
adc
mov
mov
jmp
cli
outsl
je
cmpl
xor
xor
adc
test
sub
mov
cli
out
test
add
inc
scas
dec
lea
es
xor
mov
adc
inc
inc
outsb
adc
lds
or
lds
pusha
mov
sar
shll
mov
incl
sti
mov
adc
and
fidivrs
and
xor
jae
or
xchg
mov
int
pop
pop
cmpl
mov
xchg
movsl
xchg
adc
rol
rol
pop
gs
stc
push
stc
jo
sbbl
lds
ret
call
jg
mov
adc
adc
arpl
sbb
push
loop
in
mov
pushl
cmp
sbb
and
call
loop
and
jge
aam
mov
xlat
push
pop
addr16
adc
aas
push
loopne
jnp
adc
sarl
and
mov
jnp
subl
jno
pop
aad
lcall
push
sbb
call
fs
sub
inc
rcrl
cs
cld
pop
je
out
sub
sub
pusha
or
inc
std
cwtl
decl
orb
insb
jmp
or
inc
cmc
incl
fldl
adc
pop
sti
and
pop
and
cld
ja
repnz
xchg
jge
mov
sbb
sti
popf
sahf
data16
mov
clc
mov
aam
aad
mov
jle
call
or
fcom
mov
xchg
mov
push
inc
push
rcl
mov
dec
sbb
or
sbb
and
test
cmp
mov
dec
lds
xchg
mov
dec
scas
xchg
mov
cmp
cmp
mov
add
cmc
or
sbb
test
add
aad
xor
jp
aaa
in
cli
ja
shlb
lret
data16
mov
mov
add
xchg
adc
xor
insl
aas
pop
push
sbb
out
rcrb
stos
or
adc
pop
sub
popf
add
hlt
and
sbb
out
inc
dec
into
push
or
and
jl
cmp
pop
lret
lcall
stc
sub
icebp
and
shl
xchg
jp
pushf
bound
out
out
or
out
sub
cmp
arpl
push
das
cs
addr16
fisttps
and
fbstp
outsl
adc
popf
out
lea
test
lret
or
out
add
fmul
pop
push
cli
inc
mov
jecxz
gs
cmpsl
ror
call
xchg
call
aam
andl
negb
pop
mov
mov
js
roll
decl
jae
xchg
stc
cld
mov
xchg
pusha
clc
aad
and
mov
ja
xor
dec
dec
fstl
out
pop
or
inc
sbb
stos
xchg
outsl
fmulp
arpl
jg
test
test
in
sub
shr
jo
xchg
fimuls
push
push
mov
jae
push
jae
pop
ds
mov
out
in
dec
fdivrl
scas
jnp
movsl
daa
cmp
testb
cwtl
xchg
mov
in
or
icebp
push
icebp
pop
pop
loop
out
inc
sbb
loop
mov
jecxz
inc
sub
jo
mov
cld
pop
loope
dec
lcall
imul
ja
sbb
sbb
pop
lock
ljmp
cmp
mov
mov
sub
dec
std
aas
cli
popf
sub
mov
sub
out
pop
jecxz
sbb
mov
daa
daa
fsubl
cs
jg
push
adcl
sbb
mov
lock
jne
or
sbb
out
xchg
in
push
ljmp
cmc
inc
mov
pop
or
cli
aas
orl
mov
dec
dec
xor
scas
lcall
jnp
push
pop
jne
jno
jecxz
sbb
lock
ja
mov
pushf
sub
mov
int3
inc
mov
or
mov
ds
pop
mov
lods
stos
dec
movsl
pop
je
jb
je
or
sbb
outsl
lods
mov
push
popa
outsb
mov
aaa
mov
mov
mov
ss
addr16
stos
jno
cmp
clc
dec
xchg
push
movsl
pushl
out
std
gs
das
nop
mov
xchg
rcll
cltd
mov
loope
mov
jb
dec
mov
outsl
test
sub
xor
xlat
dec
mov
sub
cmpb
dec
bound
and
sub
cmp
imull
xchg
xlat
sbb
mov
hlt
lahf
ret
test
pxor
inc
les
mov
jo
sarb
lods
imull
push
sarl
sbb
cmp
cwtl
xorb
repnz
xor
outsb
leave
jmp
and
add
jecxz
insl
sub
or
pop
decl
inc
dec
mov
stos
pop
mov
outsl
add
int
call
mov
add
loope
push
push
xchg
and
stc
mov
xchg
cli
int3
addr16
cmp
fdivrl
mov
fists
or
sbb
mov
testb
sub
movsb
push
sti
mov
popf
push
inc
xor
test
jno
xor
aas
lock
loop
and
inc
in
test
inc
cli
aaa
nop
sti
shr
dec
ret
push
jp
adc
jae
add
jne
pop
das
add
in
arpl
push
xchg
std
lods
int
out
jbe
xor
pop
push
inc
sahf
or
mov
iret
fnstcw
loope
movsl
mov
loop
decl
pop
out
mov
pop
hlt
pop
cmpsb
out
repz
mov
pusha
lock
in
mov
push
pushl
cld
adc
lret
rclb
notl
push
xor
imul
mov
xchg
aaa
nop
jo
jle
enter
push
cli
ja
xchg
stos
loopne
cmp
ljmp
xchg
outsb
nop
sub
mov
xlat
std
add
lahf
pop
xor
fwait
dec
sar
js
pop
filds
mov
cs
adc
outsl
cmp
lock
adc
lcall
pop
and
adc
ds
in
mov
mov
or
outsb
ja
sub
in
dec
cli
popf
icebp
mov
sub
dec
insl
mov
push
lahf
shlb
jo
aas
insb
clc
sti
push
in
sub
mov
mov
push
stc
adc
mov
jg
sarb
mov
cwtl
data16
mov
into
pop
fcompl
cmc
into
das
sbb
outsl
fdivrl
sub
fimuls
ja
lret
outsl
sub
push
jg
movsl
imul
cmp
ret
mov
sub
push
cmp
sbb
or
andl
cld
and
mov
and
incl
out
adc
mov
sub
push
test
adc
mov
fwait
jne
mov
nopl
aas
outsl
fdivr
xchg
jnp
push
sub
sbb
push
push
jg
orb
lea
pop
jo
aas
inc
or
sar
insl
fld
jg
call
dec
fs
and
inc
mov
sub
popa
pushf
sbb
mulb
pop
call
fdivr
mov
mov
mov
jbe
or
mov
mov
outsl
cli
or
and
out
add
add
sar
mov
test
loopne
outsl
jno
dec
cs
cmpsb
adc
add
cs
stos
jnp
aas
movb
adc
icebp
or
mov
jl
les
je
sub
jae
adc
sbb
insl
sbb
jg
mov
cmp
jae
call
lods
insb
loop
fs
dec
hlt
clc
mov
mov
inc
les
and
imul
loope
push
jecxz
psrlw
mov
aad
push
adc
adc
ficomps
mov
out
and
inc
sub
icebp
lcall
xchg
sub
jbe
sub
lods
cmp
pop
inc
sub
push
js
sub
aam
sahf
loop
sub
push
mov
out
idivl
nop
cli
jg
loopne
inc
jg
leave
or
inc
add
sub
cwtl
jg
lcall
add
out
rorb
adc
xor
cmpsb
incb
mov
pavgw
lds
mov
pop
xor
repnz
push
jg
call
add
call
and
xor
into
lock
out
out
xchg
test
push
addl
xchg
add
cld
xorb
mov
xchg
cmc
lahf
jmp
inc
add
fldcw
aas
das
bswap
leave
adc
xor
fnstsw
cmc
call
in
insb
outsl
loopne
jl
mov
push
xchg
or
sbb
fdivr
xchg
subb
cmpl
cld
cmp
lock
jne
sbb
clc
fiadds
push
pop
push
mov
dec
movsb
jl
test
push
sbb
pop
mov
js
jb
and
adcl
scas
mov
rcrb
dec
fbstp
push
mov
cs
arpl
xchg
lcall
lahf
enter
out
mov
ss
std
in
push
out
sbb
aas
leave
ret
fildll
int
push
imull
lock
push
cmp
leave
add
push
inc
jbe
push
xlat
mov
mov
or
inc
int
pop
xchg
mov
imul
loope
mov
lret
push
mov
or
testb
popf
sbb
les
call
pop
push
out
aam
push
lahf
rol
pop
mov
jmp
scas
jp
and
xchg
out
sbb
cwtl
mov
arpl
inc
jge
jne
pop
jl
adc
xchg
jbe
ror
sub
mov
aas
cmc
inc
push
fwait
out
bnd
mov
call
jbe
adc
sub
cmp
mov
xor
hlt
push
and
int3
notb
int
decl
xchg
notl
aad
dec
dec
sub
sbb
out
fmuls
mov
jle
mov
fistps
mov
mov
add
ljmp
daa
ja
pop
mov
fninit
in
mov
ljmp
add
je
sar
popa
aas
arpl
int
cld
mov
std
push
out
mov
xchg
sahf
sar
je
daa
jne
sbb
pop
ret
pusha
adc
inc
adc
adc
sti
mov
nop
cmp
push
mov
cwtl
xchg
or
je
or
dec
cli
dec
addr16
daa
sbb
add
jnp
cld
repz
sub
mov
dec
imul
cmp
insb
mov
fs
lods
out
aaa
ja
outsl
rolb
mov
imul
insb
sti
jns
leave
jnp
sub
sbb
movsb
pop
pop
loopne
inc
lods
std
daa
mov
cmpl
add
cmpsl
pop
xchg
jg
pop
ljmp
sub
mov
xchg
mov
mov
clc
ret
cli
fnstsw
les
gs
or
inc
shl
aas
cmp
jae
push
into
push
dec
pop
test
inc
add
in
loopne
sub
insb
popa
pushf
push
cli
mov
fisubs
loope
pop
seta
adc
jle
mov
inc
fdivrl
in
mov
lds
dec
adc
mov
adc
pop
inc
fmul
loopne
aad
sub
out
repnz
xchg
add
adc
ret
jo
fdivs
add
les
in
sbb
mov
pusha
loop
cld
test
xchg
pop
jno
cld
inc
jmp
fisubrl
jno
stos
jecxz
inc
js
mov
cmc
sahf
aas
dec
pop
xor
divl
jmp
inc
sbb
in
and
mov
mov
pop
mov
mov
sbb
pusha
popa
dec
push
clc
test
ds
jge
in
and
mov
mov
jg
cltd
push
mov
mov
mov
dec
fwait
lods
mov
mov
jg
cli
lahf
in
stos
aam
dec
out
jae
or
mov
xor
mov
mov
in
xchg
cmp
push
sbb
cltd
jmp
jnp
lret
cmpsl
cli
test
fstpl
fwait
adc
sahf
cltd
add
push
cld
cmp
shlb
and
inc
inc
xorb
jg
lods
inc
imul
add
cltd
mov
push
push
cmpsb
pop
cmp
push
jmp
jmp
stos
shl
push
cmp
xor
sbb
lock
xor
push
lahf
repz
daa
jmp
out
lret
jecxz
or
or
adc
xchg
imul
pop
and
or
cmp
ucomiss
roll
jmp
dec
adc
imul
mov
sub
arpl
xchg
add
push
fidivrs
push
inc
addps
lahf
shlb
or
outsl
lods
pop
inc
clc
ja
sub
jne
in
rolb
inc
jp
push
lret
cmp
out
mov
jg
xchg
push
rcrb
aaa
std
cmp
fisttpl
xor
in
pop
xlat
ja
add
repz
ljmp
add
vmptrst
and
popf
add
jno
lock
mov
xor
sbb
test
pop
sub
and
or
lret
and
jecxz
xlat
inc
scas
xor
xor
decl
testb
mov
adc
fdiv
scas
dec
pop
mov
xchg
jb
outsl
xchg
cli
mov
out
sbb
test
int
adc
jo
add
hlt
mov
or
mov
or
jnp
xchg
ret
iret
inc
std
and
xchg
movsl
sbb
fdivrp
push
mov
xchg
bound
ror
sbb
pop
sbb
outsl
lock
jno
adc
add
mov
es
push
xchg
lcall
xor
jne
orb
jmp
xor
xor
cmp
mov
inc
push
in
dec
xor
in
adc
xchg
lds
test
sub
cmp
out
movb
xchg
popl
lret
les
lahf
pop
stos
cli
inc
shr
add
adc
lret
mov
nop
fiaddl
jmp
sarb
sar
int
xchg
lock
jge
and
pop
decl
or
in
inc
mov
ja
lea
loop
or
xchg
push
sbb
lret
ffreep
or
out
nop
push
dec
sbb
mov
dec
jg
lahf
jg
rcrb
fcoms
leave
pop
fldcw
sarb
pop
mov
mov
add
daa
xorl
adc
outsb
lret
out
mov
sti
lock
jb
mov
mov
hlt
out
loope
int
mov
bound
cmp
xchg
xchg
sti
jne
sbb
sub
jo
jg
lock
lahf
les
push
test
pop
push
lea
cmp
lcall
dec
clc
iret
stos
ret
scas
sub
xchg
insb
icebp
add
test
jmp
fnstsw
pusha
std
sub
dec
push
xor
pushl
leave
sbbl
movsl
sub
mov
cld
ljmp
decb
mov
pop
or
add
dec
push
mov
js
in
pop
jecxz
push
jmp
mov
daa
sbbl
sbb
inc
or
mov
nop
dec
add
loopne
push
mov
out
add
call
dec
rolb
cmpsl
stos
mov
sbb
sbb
xor
pop
push
incl
and
push
out
pop
loop
outsl
and
aas
or
fimull
loopne
std
dec
jb
mov
test
xchg
aas
add
mov
jno
js
pop
les
repz
inc
fisubrs
and
mov
xor
add
fcmovu
pop
les
sti
xlat
movsl
addr16
mov
in
push
inc
pusha
stos
xor
lahf
rorb
xchg
xchg
incb
push
xchg
mov
aam
addr16
cmc
aad
and
arpl
pop
mov
out
cmp
in
sarl
or
jmp
divb
push
mov
in
cmpsl
push
fwait
loopne
jb
push
rol
lock
mov
inc
lret
aaa
adc
cmpsl
cmpsb
lock
inc
adcb
fldl
ret
push
cmc
scas
lock
call
jnp
push
clc
jmp
and
out
ljmp
inc
inc
mov
arpl
jnp
mov
cwtl
insb
inc
aas
and
adc
in
cmp
inc
stc
or
js
push
iret
sub
and
pop
icebp
push
mov
sbb
out
sub
cli
sub
jb
into
ds
stos
add
mov
pop
inc
jnp
hlt
fisubl
cmpl
pop
jno
jg,pt
push
sbb
dec
rorb
xchg
mov
rcrb
cmc
inc
in
dec
out
shrb
dec
jmp
dec
adc
cli
pop
popf
scas
xor
test
enter
aas
shll
pop
jg
clc
pop
test
lret
lret
cmp
mov
cmpsl
add
lods
xor
fistpll
jne
push
add
or
jno
pop
sub
dec
movsl
outsb
jne
nop
adc
pop
jmp
xlat
mov
mov
pop
xor
jmp
jmp
add
push
cmp
sub
cmpsb
push
pop
and
data16
pop
out
and
xchg
push
ljmp
inc
pop
mov
fisubs
decl
xor
aas
sbb
lret
pop
sarb
cwtl
sarl
mov
inc
lods
jecxz
add
or
mov
mov
or
cmp
add
into
adc
fisubl
mov
inc
and
mov
add
jmp
rorl
mov
insb
mov
outsb
cmp
or
ficomps
mov
dec
fsubs
clc
jg
cmp
inc
pop
ret
jmp
fs
and
ret
loopne
lcall
jp
fwait
xchg
or
sub
mov
lock
inc
mov
fistpl
sbb
mov
sub
add
and
push
lea
mov
or
inc
loope
in
or
dec
lods
out
jp
mov
jo
adc
fnclex
mov
cmp
push
rolb
fistps
inc
gs
inc
lds
call
pop
incl
insl
cld
sbb
jecxz
cmp
jb
cmp
and
inc
adc
adc
icebp
sub
data16
pop
jbe
fisttpll
movsl
clc
dec
cmpsb
daa
add
mov
mov
pop
cltd
cwtl
andl
data16
decb
stos
ret
aam
mov
ja
mov
add
decl
mov
mul
loopne
sbb
loop
addr16
jge
in
sbb
dec
loope
xor
mov
sahf
push
pop
mov
out
inc
inc
cmp
iret
jne
adc
dec
lock
repz
push
dec
out
mov
add
iret
dec
and
sbb
movsl
push
movsl
or
adc
push
push
and
out
pusha
repz
pop
adc
pop
xchg
jecxz
and
sar
int3
pop
aaa
out
jno
mov
mov
sbb
int3
stos
fs
mov
dec
ficoml
int
and
aas
testl
jnp
sbb
cmp
adc
pop
pushf
pop
pop
mov
leave
dec
jnp
pop
xor
movsl
cwtl
icebp
popf
mov
iret
add
mov
add
arpl
lds
dec
arpl
mov
inc
sbb
inc
ljmp
imull
ret
sub
lds
cli
hlt
xor
std
iret
jecxz
scas
nop
xchg
jbe
dec
jno
mov
movsl
lcall
mov
dec
pop
call
mov
in
adc
sbb
jne
sar
cmp
iret
add
sarl
cmp
jl
jg
and
mov
dec
pop
xor
loope
test
push
loope
cmp
add
bound
sbb
imul
push
push
push
pop
push
jle
inc
pop
sbb
outsl
popf
push
aam
sahf
sbb
sub
clc
and
add
enter
sahf
out
daa
mov
roll
or
xor
lock
adc
inc
sub
jne
push
gs
mov
daa
rorb
loopne
cwtl
aad
adc
es
cmpsl
add
adc
lahf
sub
outsb
jg
push
and
into
insb
pop
outsl
outsb
sub
push
pop
lret
adc
add
mov
aas
push
inc
xor
dec
aam
in
loopne
push
inc
mov
test
decb
sbb
push
inc
jmp
daa
push
outsb
clc
mov
fsub
push
inc
jbe
and
xchg
inc
ror
dec
ja
push
lock
inc
mov
aaa
xor
add
or
jbe
mov
cmp
push
popa
int
addr16
loope
and
dec
or
inc
call
adc
addr16
push
or
add
ss
add
gs
clc
jg
ficoms
fnstcw
xorb
inc
mov
jg
mov
inc
mov
jmp
aas
mov
jno
into
inc
sbb
inc
adc
cmpsb
cmp
imul
inc
push
mov
add
pop
popf
and
inc
aam
jns
or
push
push
rol
fs
pop
xor
jecxz
and
mov
dec
mov
mov
inc
mov
lods
out
jne
adc
fs
fs
push
cld
inc
popa
mov
inc
add
adc
dec
xor
and
sub
movb
inc
shll
jae
adc
pushf
mov
sbb
mov
cld
inc
add
mov
dec
adc
pop
xor
shrb
subb
int
push
sbb
test
inc
inc
push
or
adc
into
and
and
pop
outsw
fs
add
add
and
jecxz
mov
jno
movsb
stos
or
daa
or
sub
inc
dec
insl
jno
push
adc
into
xchg
sub
lock
push
jo
movsb
add
loope
xchg
rcll
out
incl
mov
les
or
jne
sub
ljmp
out
dec
xlat
add
xor
and
add
clc
cmc
mov
imul
mov
ret
ret
add
lret
push
hlt
push
cmp
jle
iret
dec
adc
sbb
adc
orl
mov
pop
cld
loop
inc
sub
push
shlb
jb
mov
push
out
push
loopne
pop
outsb
mov
inc
adc
dec
add
mov
out
ret
outsb
inc
push
lret
jns
and
test
imul
add
loopne
or
mov
push
test
into
mov
sbb
inc
in
test
or
add
sbb
hlt
pop
in
xor
adc
loopne
and
data16
ret
adc
push
adc
popa
push
stc
adc
adc
outsl
cmpsl
loopne
sub
mov
cltd
xor
inc
fdivrs
adc
insl
cmp
dec
jne
sbb
or
inc
mov
pop
jbe
push
fs
loop
and
or
insl
aad
add
pusha
cmc
in
cmp
or
pop
lock
mov
jae
mov
cmp
or
xchg
jno
dec
mov
arpl
scas
push
inc
mov
insb
dec
xor
add
gs
mov
jno
or
icebp
lret
sbb
pop
loope
mov
or
dec
add
cli
out
mov
xor
decb
pop
xchg
mov
jne
insl
imul
jp
push
ret
sub
pop
push
cltd
or
adc
loopne
or
sub
jbe
dec
xor
fcoms
loopne
jno
push
nop
inc
jle
xchg
mov
and
je
lret
inc
pop
push
inc
push
jne
jmp
es
sub
ret
and
clc
outsl
pop
and
mov
js
imul
or
in
lock
push
and
subb
inc
gs
cmpb
add
dec
arpl
dec
sbb
lock
dec
repnz
push
mov
stos
sti
shlb
dec
aam
push
call
jle
dec
jns
outsl
pop
clc
inc
insb
loop
push
cli
sbb
adc
add
inc
lahf
jbe
and
test
outsl
and
xor
xlat
jno
jle
aaa
push
sub
lret
sub
pop
cmp
push
loopne
lds
dec
push
jae
or
mov
adc
es
mov
les
inc
sbb
inc
adc
pop
imul
les
aaa
xchg
out
testb
jb
fildll
cli
push
pop
mov
stos
sbb
inc
adc
cltd
cmpl
push
insb
clc
cmp
inc
fs
sbb
cmc
hlt
xchg
mov
mov
jns
in
cmp
in
jo
pop
adc
inc
push
dec
inc
ss
adc
mov
lahf
test
mov
fwait
mov
jmp
push
jne
in
sub
jo
inc
addr16
pop
arpl
and
cmc
mov
into
mov
mov
ss
div
mov
xor
sub
push
add
dec
outsl
test
dec
js
add
add
mov
push
les
xor
xlat
inc
mov
mov
fidivs
mov
cltd
dec
mov
mov
xor
and
test
das
sarb
add
in
dec
cli
cli
sub
mov
add
sub
xchg
divb
daa
imul
jb
xchg
out
adcb
sbb
push
xchg
add
dec
mov
test
addr16
mov
jae
dec
test
jo
add
sti
pop
andl
pop
hlt
imul
rolb
sahf
and
xor
xorb
adc
pop
pop
xchg
xor
add
outsb
hlt
sub
cs
repnz
stos
add
sub
adc
out
sbb
icebp
std
test
ret
xchg
mov
cmp
jecxz
adc
xor
out
jbe
popf
in
mov
insl
je
shll
inc
dec
int3
dec
andl
in
mov
fimull
mov
add
xor
psrld
push
push
xchg
outsl
outsl
xchg
dec
xchg
cmp
fbstp
add
dec
add
or
loopne
lcall
push
arpl
inc
add
fwait
lret
mov
lret
and
mov
mov
or
lods
rcr
cmp
lods
sub
ret
and
adc
xor
pop
jmp
js
sahf
imul
jle
jmp
xchg
jns
jo
lret
cmp
push
mov
repz
dec
sbb
jns
inc
inc
cwtl
push
pusha
xor
inc
push
sub
imul
adc
test
xlat
xor
and
cmpsl
and
arpl
sbb
and
add
xchg
testl
cwtl
mov
adc
adc
insb
jl
js
or
mov
cmp
and
mov
add
fsts
call
ljmp
mov
jle
xchg
and
or
fsub
push
jmp
mov
call
jecxz
xor
test
push
xor
add
add
pop
bound
mov
dec
or
pop
aas
add
adc
popa
jp
or
sbb
sbb
es
inc
cmp
addr16
imul
sbb
xchg
and
mov
adc
ret
int
clc
mov
and
movl
pop
xor
in
xchg
ds
and
dec
data16
jmp
xor
xor
xlat
mov
and
enter
mov
insb
and
jne
lahf
lcall
rorl
adc
sbb
ja
gs
leave
das
daa
mov
stc
pop
in
es
mov
or
push
movsb
popa
inc
loopne
inc
aam
mov
clc
mov
inc
push
loop
and
and
mov
loope
pop
jo
scas
out
ljmp
or
add
pop
sbb
pop
lcall
cmc
iret
lea
dec
lret
sub
adc
push
or
test
cli
push
ljmp
cmp
jbe
cli
cwtl
and
aad
scas
out
or
pop
std
inc
and
xchg
notl
xchg
mov
rorb
shll
jp
fadd
out
mov
cmpsl
and
mov
imul
jp
call
sub
adc
in
push
and
mull
dec
cld
mov
jge
int3
std
fildll
or
xchg
test
cmp
inc
stos
es
push
mov
cmp
popf
sarb
push
jmp
push
adc
sub
push
add
test
cmc
jbe
fnstenv
mov
loopne
add
mov
clc
int3
lods
dec
movsb
mov
mov
idiv
mov
lret
sub
loopne
cmpsb
movl
inc
outsl
or
mov
orb
cmp
add
inc
adc
stos
mov
mov
test
sub
andb
rcll
jge
shll
jmp
jp
sub
movsb
or
or
push
cmpsb
jo
xchg
daa
aaa
std
inc
inc
add
mov
sbb
inc
imul
or
lea
cmc
sbb
lea
add
add
mov
rolb
cmp
jmp
pop
jp
test
xor
dec
push
sub
mov
push
test
loop
mov
shrb
imul
addl
mov
add
pusha
cmp
stos
cmpsl
inc
inc
fisttps
inc
jle
xchg
ja
fidivs
cmp
jecxz
adc
xor
pop
cmp
push
xchg
dec
xor
loopne
in
lock
xlat
xchg
mov
push
imul
mov
popf
notl
test
mov
js
push
mov
xor
sti
mov
sbb
adc
dec
insl
test
xchg
xor
pop
rolb
jg
sub
xchg
out
loopne
lods
xchg
lcall
sahf
test
pop
pop
push
or
jl
xor
lcall
mov
sbb
les
or
dec
jp
cmp
sub
lods
push
xlat
cmp
fwait
xlat
or
ss
daa
or
jns
cmp
fisttps
movl
adcb
add
subl
mov
adc
stc
jbe
sbb
mov
jge
add
or
cmp
lea
ret
mov
scas
and
xchg
sbb
mov
jo
inc
je
xchg
xor
pop
insb
dec
pop
pusha
pop
in
push
or
loopne
jo,pt
inc
addr16
ds
jge,pn
mov
mov
sbb
xor
in
jle
stos
out
das
jnp
repz
xchg
pop
fdivs
shl
add
add
mov
repz
xchg
ds
mull
cmpsb
imul
test
adc
loopne
rcrb
andb
ljmp
int
pop
loop
movsl
xor
fwait
inc
aad
das
sbb
faddl
out
jecxz
sbb
mov
mov
fnstsw
daa
movsl
jmp
adc
mov
repnz
sub
xchg
movsb
lret
sbb
or
jge
iret
call
pop
xor
dec
pop
decl
fsubl
sti
xorb
cld
shrl
in
adc
in
test
and
out
in
mov
cmp
inc
in
sub
add
js
jbe
sbb
push
das
adc
jns
sub
and
jg
adc
out
nop
cmc
cmp
dec
sub
inc
pop
mov
int
push
outsb
sbb
dec
mov
pop
loop
fs
xor
sub
jmp
jmp
add
push
xchg
mov
or
adc
sub
add
add
xchg
sub
subl
pop
sti
adc
enter
std
popf
cmp
icebp
add
imul
push
insb
xor
jp
add
or
into
sub
jge
fsts
test
pop
xorb
mov
xchg
fnclex
scas
pop
stos
cmp
aam
adc
das
sbb
sbb
lock
stc
mov
dec
insl
sbb
mov
test
mov
les
pop
xchg
inc
mov
dec
pop
inc
jl
fistl
xchg
and
adc
lods
fisttpl
ds
mov
jp
xor
adc
leave
mov
xchg
aas
mov
xchg
stos
push
and
repz
addl
test
lods
jo
pop
in
cltd
stos
sti
cmpsb
outsl
lds
xlat
push
and
dec
mov
out
ds
clc
xchg
add
dec
dec
fwait
or
jmp
out
dec
push
push
insb
rclb
pop
pop
das
pusha
hlt
rcll
and
ja
add
mov
cmpsl
lret
mov
nop
in
adcl
cli
mov
mov
out
xchg
adc
icebp
sbb
call
push
sub
ja
lock
xchg
xchg
mov
scas
scas
movsb
add
push
add
pop
hlt
sub
subb
test
dec
jg
add
lahf
jge
cltd
out
ljmp
mov
inc
scas
pop
xchg
dec
inc
cmpsl
es
and
imul
mov
rcrb
add
aas
mov
idiv
mov
inc
pop
in
adc
roll
leave
aad
cmp
jmp
fndisi(8087
pop
aad
int
mov
int3
and
or
aaa
mov
mov
popa
push
jb
inc
shll
clc
pop
inc
mov
mov
jmp
and
movsb
mov
mov
ja
testb
push
loopne
mov
ss
test
cmc
pusha
les
stos
fisttps
and
in
aam
cmp
adc
and
ljmp
rorl
mov
lahf
mov
ss
icebp
mov
mov
mov
stos
jo
mov
pop
push
sbb
sbbb
add
jle
movb
shrl
pusha
test
mov
flds
inc
fildll
fcoml
bound
cmp
mov
push
mov
and
sbb
jb
inc
push
rcrb
shlb
cmp
and
js
movsl
stc
jbe
ljmp
popf
sbb
out
push
sub
out
dec
sbb
test
add
clc
in
repz
mov
cmp
cmp
mov
clc
and
pop
jmp
lea
andb
cltd
loopne
and
sbb
nop
or
addr16
dec
lock
push
je
cmp
and
test
push
mov
dec
xor
xor
add
push
mov
cld
test
les
pop
jmp
sbb
sub
dec
inc
sahf
in
sub
inc
cmp
inc
gs
push
pcmpeqw
and
js
lock
or
scas
test
pop
inc
adc
and
cs
mov
das
xor
into
dec
popa
and
mov
pusha
jne
notl
pusha
sub
cmp
movsb
pusha
imul
jecxz
adc
mov
pushf
sbb
hlt
push
movsl
mov
add
jp
imul
and
fs
mov
mov
push
and
in
lock
mov
lea
lock
jae
lock
daa
out
rcl
or
adc
pop
pop
xor
loopne
pop
call
jge
cld
inc
aaa
xorb
mov
mov
orl
je
cmp
adc
pop
push
stc
sbb
mov
es
in
mov
mov
dec
mov
push
out
jnp
sub
xor
sbb
inc
add
dec
fldl
sbb
scas
cmc
sbb
cld
aas
fistl
ja
pop
push
sub
and
fidivl
cmp
cmp
in
outsl
jne
dec
lods
pushf
cmc
aad
xchg
add
mov
xor
cmpsl
das
sti
test
ret
mov
pop
ret
neg
cmc
shl
mov
pop
or
ret
xor
lods
scas
sub
mov
jl
mov
ds
stos
lahf
or
xchg
fcoml
insb
and
incb
sbb
gs
inc
push
int3
jmp
fwait
sti
cmc
jb
adc
loop
pop
loope
incl
jo
ljmp
movsb
popf
dec
adc
addr16
movsb
pusha
sbb
push
xor
mov
cmpsb
and
loopne
push
adc
xlat
jecxz
inc
fistps
add
aam
push
in
orb
sub
ret
fs
lods
fsubs
lock
imul
xor
push
sahf
sbb
xchg
jmp
and
push
aas
sbb
pop
sarl
jns
add
iret
dec
add
sarl
inc
sbb
aaa
stos
add
lods
addr16
or
pushf
in
push
out
imul
ret
loop
es
call
jl
jle
dec
xorl
inc
cs
xchg
ljmp
das
repnz
add
mov
arpl
out
add
add
icebp
add
xor
fdivrl
inc
ljmp
mov
out
scas
push
lea
das
lret
divl
push
clc
xor
mov
adc
inc
fs
clc
xchg
js
rcrb
inc
cmp
mov
cmpl
arpl
push
push
es
xchg
push
xchg
jo
cld
rcll
scas
clc
sbb
out
repz
push
jecxz
or
adc
sahf
push
push
or
push
stc
and
lret
lock
std
sbb
cmp
mov
shll
orl
pop
dec
xlat
mov
mov
data16
cmp
push
aam
loope
add
adc
jo
sub
jb
adc
xor
mov
mov
dec
pop
popf
adc
mov
pop
or
imul
push
scas
cli
ret
inc
mov
rcrl
add
push
addr16
fwait
cs
push
fidivl
pop
scas
mov
sbb
dec
jmp
dec
and
pop
hlt
inc
imul
push
push
test
hlt
cmp
test
xchg
shlb
lods
sub
mov
dec
pop
gs
ret
cwtl
dec
dec
fwait
cmp
mov
mov
mov
repz
inc
das
ret
mov
sub
mov
dec
stc
orb
sbb
test
in
mov
inc
out
dec
cmp
daa
push
daa
rcrb
hlt
xlat
test
xchg
sbb
fsubrs
push
dec
orl
lods
fdivrl
stos
int3
dec
pusha
loope
fimuls
add
test
add
pop
mov
arpl
pop
add
pusha
pop
mov
cmp
sbb
jge
and
roll
les
mov
mov
pushf
clc
call
outsl
ljmp
enter
nop
and
enter
aam
cwtl
ljmp
inc
push
ret
lds
imul
hlt
cmc
dec
pop
adc
xchg
inc
arpl
mov
mov
jae
or
jmp
pushf
xchg
sub
pop
iret
mov
divl
jno
add
stc
loope
jo
push
mov
dec
push
pop
lods
ud1
stc
pop
push
jmp
pop
mov
hlt
lea
cli
jmp
ja
cmp
push
imul
jbe
aam
aam
pop
sub
mov
push
jmp
pop
cld
adc
xchg
cmp
adc
cltd
dec
movlps
cmp
cwtl
ja
push
int3
mov
mov
xor
bound
fstpt
xchg
aaa
cld
icebp
cli
xor
adc
movsb
test
lock
pop
cmp
inc
lds
test
sbb
push
jl
nop
bound
sub
aad
xchg
cwtl
movsb
stos
adc
and
mov
xchg
cmpsl
scas
pop
popa
ljmp
insb
and
je
jl
cmp
je
jnp
push
mov
sub
add
mov
das
mov
loop
dec
jmp
mov
jp
stc
xchg
sbb
or
xor
test
ds
jno
and
xor
loop
add
std
adc
hlt
stos
pop
ja
mov
mov
scas
xchg
call
jp
pop
jno
fdivr
or
stos
int
cmp
inc
test
sbb
jp
push
imul
jb
xor
ljmp
leave
or
xchg
mov
in
daa
xor
add
orb
inc
or
cld
sub
icebp
mov
pop
nop
and
jle
add
xchg
pushf
mov
int
push
cld
leave
sbb
dec
mov
push
call
xchg
lret
gs
cmp
mov
mov
push
push
rcpps
jge
js
hlt
cmp
inc
loopne
pop
movsl
xchg
pop
push
les
stos
and
pushf
xchg
clc
fisubrs
xor
lock
dec
jo
repz
push
sbb
popa
test
or
sarb
loop
pusha
jne
mov
bnd
xchg
mov
jle
pop
in
ljmp
ret
test
pop
das
inc
cwtl
adc
inc
jecxz
adc
aad
xchg
add
repz
or
mov
jl
cmp
push
cmp
orb
aad
sub
or
fildl
push
icebp
or
mov
mov
dec
xchg
push
cwtl
lods
add
fsub
iret
daa
dec
cmp
pop
xchg
or
xchg
into
lods
cmpsl
push
jp
sbb
fisttps
lsl
icebp
and
inc
xchg
out
adc
inc
sub
lahf
loop
out
or
psubusb
push
xor
adc
and
ljmp
dec
iret
movsl
mov
nop
inc
leave
mov
mov
inc
pop
jno
jge
and
jg
shlb
movsl
pop
repnz
sub
mov
dec
jns
xor
or
xor
cmc
pop
bound
inc
add
inc
mov
jg
fcompl
repnz
push
ret
mov
das
fdiv
int
inc
hlt
icebp
out
pop
js
xor
dec
popa
into
mov
incb
add
sub
sbb
sub
cmc
js
sub
or
push
add
dec
lds
ljmp
xorl
pusha
mov
mov
sub
test
sbb
adc
jecxz
xor
xchg
mov
mov
xlat
lds
lcall
xor
sbb
addr16
jns
push
fsubs
add
dec
leave
xchg
or
mov
push
popa
add
push
hlt
cwtl
enter
out
test
dec
xchg
int3
push
xor
inc
mov
ss
mov
lock
mov
bound
cwtl
in
add
stc
loopne
jnp
add
mov
mulb
or
mov
mov
push
push
movsb
or
test
js
lds
mov
mov
sbb
outsl
enter
outsb
pop
shl
insb
or
test
movsl
arpl
and
pop
loope
dec
pop
or
jns
inc
iret
xchg
icebp
mov
je
xor
stos
or
jge
nop
mov
mov
in
add
jae
test
xlat
dec
and
and
mov
les
test
cmpsl
shlb
jns
jbe
imul
or
mov
sbb
in
enter
jno
push
sbb
inc
sahf
jge
imul
add
or
sbb
ds
and
xchg
dec
loopne
test
adc
cmpl
addr16
cmp
and
icebp
icebp
leave
or
mov
outsl
stc
cmc
adc
cmc
xchg
or
call
repnz
and
xchg
cmp
sbb
es
repz
das
cmc
jb
int
or
in
hlt
or
sbb
jle
or
das
insl
jecxz
push
stos
outsb
rcrb
push
test
daa
add
push
lahf
inc
clc
pop
adc
in
cli
lahf
mov
mov
jmp
movsl
or
test
inc
incb
mov
movsb
mov
sbb
cmp
or
mov
mul
arpl
imul
scas
push
pop
test
xlat
mov
icebp
pop
call
sahf
mov
sbb
jns
pop
ud0
mov
cmpb
jmp
shl
add
ret
lds
cmpsl
push
bound
lahf
xchg
mov
xchg
push
mov
inc
fwait
xor
das
mov
mov
std
out
mov
fdivrl
push
adc
hlt
aam
scas
sbb
popf
cli
xchg
xor
jo
fiaddl
push
or
and
mov
mov
xchg
push
inc
shr
ss
mov
int
and
movsb
jmp
inc
push
dec
pusha
mov
test
dec
sbb
test
inc
rorl
adc
movsl
mov
ret
mov
orb
test
pop
pop
or
jbe
push
add
lcall
mov
and
in
dec
mov
sbb
push
adc
pop
outsb
and
sub
adc
aad
scas
mov
mov
dec
dec
cmp
lret
rclb
cld
sahf
inc
inc
or
lock
leave
cmp
inc
push
sbb
push
stc
mov
in
lods
push
and
mov
in
fadds
or
punpckldq
cmp
mov
fdivl
int3
gs
push
pop
jge
cmpsl
outsl
pop
fsub
cmp
push
adc
ljmp
roll
clc
fcmovnb
ljmp
lods
inc
imull
sub
pusha
jle
out
mov
lds
sub
cmc
jbe
and
add
imul
dec
mov
or
hlt
cs
sbb
dec
rclb
add
or
mov
movsl
mov
or
aas
fcoms
mov
fprem
pop
or
movsb
or
sbb
xchg
iret
shl
adc
fsubr
insb
cmp
or
jnp
ret
pop
mov
sbb
jae
xchg
lock
insl
cmp
pushf
cwtl
loop
jg
iret
push
test
leave
cmp
push
lock
shlb
insb
test
aaa
cltd
inc
paddsw
leave
pop
in
mov
iret
jne
inc
movsb
dec
addr16
xor
clc
cltd
frstor
xchg
fwait
aas
out
popa
jne
cmc
mov
and
sub
fsubrs
aam
cmp
adc
push
enter
xchg
orl
jecxz
lods
in
outsl
cmp
popa
cwtl
cmp
repnz
sahf
cmpsl
mov
jmp
adc
mov
pushf
outsb
ljmp
imull
mov
and
push
or
pop
les
sarl
ja
dec
lret
outsb
cs
cli
clc
add
adc
adc
cmc
sbb
and
or
jecxz
sahf
mov
enter
add
daa
jb
cmpsb
mov
pop
mov
push
lcall
xchg
jb
adc
popl
push
push
xor
cmp
sbb
imul
je
mov
shll
lcall
and
lock
test
inc
push
js
aas
test
add
rcl
imull
jecxz
and
imul
in
lock
nop
cli
movsl
or
sub
pop
aaa
mov
imul
push
adc
mulb
push
dec
xlat
and
das
push
jno
and
ja
mov
pop
mov
clc
mov
inc
jp
cmpsl
imul
cmc
ss
mov
jl
lret
lods
adc
inc
les
dec
int
outsb
jl
cmp
sti
inc
push
ror
pusha
fwait
jo
inc
sbbb
cmp
sub
mov
jmp
sti
aad
push
cmp
mov
jmp
or
xorl
ret
inc
fstpt
in
in
mov
in
stos
mov
mov
ret
movsb
sbb
insl
lods
mov
xor
clc
sbb
mov
outsl
push
mov
push
push
pop
pop
mov
clc
mov
push
adc
sarb
dec
mov
ja
enter
push
push
sbb
jg
xor
mov
push
aas
pusha
scas
or
cwtl
loope
pop
sbb
and
ret
xchg
jns
mov
and
xor
subl
je
and
cli
mov
out
adc
cld
mov
push
pushf
ds
mov
ret
add
addr16
movsl
mov
popf
sbb
pop
or
dec
adc
pop
inc
or
scas
clc
and
in
test
sti
mov
lahf
cmpsl
mov
roll
enter
nop
pop
sarb
leave
push
cmp
xlat
bound
mov
xchg
ljmp
stc
ss
test
loopne
add
adc
inc
pop
pushf
pop
jne
rclb
pop
popa
pop
dec
out
adc
ss
test
scas
dec
push
subl
mov
sbb
idivl
sahf
pop
ja
xor
fdivrp
movsb
iret
xchg
add
sub
stc
adc
fisubs
out
mov
cmp
lahf
xchg
sub
movsl
stc
cs
mov
mov
into
mov
xchg
jg
fdivr
mov
push
fistl
fwait
pop
loopne
ss
jns
subl
mov
dec
push
iret
mov
out
mov
pop
popa
add
add
push
lahf
xor
sbb
add
pop
loope
js
add
jg
jl
xor
inc
push
test
pop
push
xor
or
loopne
cmp
rorl
outsb
jmp
sbb
in
mov
popf
scas
push
or
pop
insl
lcall
mov
adc
jne
cmpsb
push
in
int3
dec
mov
xor
mov
jp
push
lcall
jno,pt
fsubrs
inc
icebp
mov
push
and
stos
sbb
cmp
and
jno
aas
cs
fsubrs
aam
popa
inc
pop
mov
jp
pop
shlb
dec
or
movaps
xchg
int
enter
mov
push
xor
add
popf
pop
ss
mov
cli
out
xchg
cli
aad
jecxz
jl
outsb
les
setne
pop
in
and
sbb
mov
lock
icebp
sub
cmp
xorps
fs
mov
jno
call
add
and
sub
cmp
push
loope
clc
addr16
sti
sarb
jecxz
in
call
push
in
mov
js
lahf
jecxz
inc
or
mov
loope
stc
mov
mov
add
insb
sub
insl
jp
xor
cmp
dec
adc
scas
and
aaa
scas
fistl
add
xor
add
inc
mov
or
ret
lret
jle
adc
stc
sbb
lock
jno
ljmp
fisttpll
rcr
pop
xchg
dec
js
test
lock
into
stos
loopne
pop
mov
xorb
stc
stc
jnp
or
add
xchg
and
cmc
cli
dec
ret
fdivp
arpl
nopl
cmpsl
pop
ljmp
dec
xchg
inc
mov
xchg
test
pop
xchg
mov
into
loope
shrl
mov
out
cmc
jne
pushf
andb
mov
pop
in
daa
mov
js
sub
mov
sub
dec
adc
lahf
mov
imul
xor
mov
inc
jl
es
inc
and
and
adc
js
mov
js
cmpsl
adc
pop
mov
dec
leave
xchg
cltd
sbb
push
stos
mulb
scas
sbb
icebp
popf
mov
mulb
sub
iret
dec
lea
jo
jnp
push
jl
dec
bound
add
cmp
and
lret
out
adc
les
fiaddl
mov
mov
sub
cmpsl
dec
mov
outsb
inc
xchg
jp
xchg
loopne,pt
mov
lods
test
inc
pop
pop
adc
outsb
test
lock
aaa
test
repz
pop
scas
or
xchg
cwtl
jmp
sub
jle
lock
mov
idivb
pop
sub
pop
inc
aas
sbb
loopne
cmp
je
hlt
dec
and
pushw
xchg
mov
or
inc
adc
sub
andb
in
push
fcmovb
rolb
mov
or
insl
es
lea
adc
and
cwtl
push
fstps
sbb
lea
push
jae
cmpsl
mov
jg
jbe
aam
jo
leave
icebp
movsb
stc
incl
dec
add
stos
shrb
dec
mov
mov
adc
fcoml
xchg
and
jbe
sbb
push
mov
daa
mov
pop
fmull
xchg
in
xchg
pushf
sub
ljmp
xor
and
adc
and
ret
xchg
test
nop
cmpsl
inc
cmp
sarl
or
sub
jo
pop
jle
daa
addr16
pop
mov
ret
insb
jmp
sbbb
dec
push
scas
jp
js
popf
ret
cmp
mov
jmp
call
rclb
stc
xorb
push
cmp
repnz
inc
out
mov
lea
enter
bound
pop
mov
xchg
push
mov
cmovle
icebp
cmp
and
js
inc
dec
stc
sbb
lea
fcomip
fs
arpl
xchg
jmp
pusha
sub
iret
int
fs
xchg
je
leave
pusha
cwtl
loope
dec
rorb
mov
insl
adc
mov
lods
mov
and
ret
pushf
imul
jmp
ror
sub
and
out
aad
arpl
aam
adc
inc
xlat
or
lods
sar
and
loopne
test
scas
lods
mov
push
or
scas
dec
insl
cli
and
setbe
enter
ret
dec
pop
test
fadds
adc
movsl
clc
sbb
jmp
les
mov
mov
test
jle
lahf
cmc
aas
mov
ror
sub
movsl
divb
cmpsl
mov
rcl
fsubs
adcb
add
xchg
clc
movl
sub
imul
insl
insb
inc
dec
mov
jae
mov
imul
imul
cmp
fdivl
and
push
outsb
add
dec
mov
push
push
push
adc
mov
nop
loop
ss
jo
repnz
insl
xor
mov
rclb
mov
and
adc
loopne
popf
sbb
nop
rolb
jae
test
jbe
dec
loop
mov
scas
std
or
imul
scas
cwtl
adc
lods
cltd
and
lods
out
cmp
jle
dec
rorl
dec
fwait
pop
inc
addr16
push
movsl
js
lea
add
int3
cmpsb
lods
adc
sbb
imul
es
pop
add
shl
cbtw
cld
jecxz
push
jne
hlt
int3
adc
fildl
rolb
cld
mov
shr
jge
mov
lahf
dec
pop
push
aam
inc
sub
pop
imul
or
call
sbb
shll
jmp
shlb
xor
fucomi
jmp
add
xchg
mov
js
psubusw
sbb
faddl
jae
push
adc
mov
nop
add
cmp
sbb
shrl
lcall
pop
push
jnp
daa
xchg
add
jne
lea
push
or
push
sti
jg
push
hlt
push
push
push
push
push
push
call
leave
ret
imul
pop
xor
inc
sub
sub
add
sub
sbb
dec
add
push
jbe
jb
jns
add
sbb
jmp
add
cmp
inc
adc
aaa
inc
sub
aas
mov
add
add
push
ret
add
cmpsl
jno
mov
jl
or
mov
cli
or
mov
stos
sbb
jae
or
adc
pop
mov
mov
jp
xchg
sets
hlt
bound
mov
sub
sbb
loope
push
and
aaa
jmp
xchg
popa
push
lods
push
xchg
add
scas
add
or
movsl
mov
loopne
out
imul
icebp
inc
scas
stc
push
sbb
and
add
mov
flds
fcomi
mov
rcll
out
insb
adcb
sbb
sahf
add
lea
pop
jae
cwtl
in
dec
testb
xchg
in
push
imul
add
dec
push
into
cmp
or
add
scas
add
nop
jg
adc
stos
inc
andl
cld
addl
cwtl
dec
add
add
repnz
or
ret
dec
sbb
add
aas
add
add
add
add
or
push
std
call
push
sbb
push
loop
add
out
lcall
jle
dec
hlt
dec
xor
pop
pop
rcr
movsl
std
jmp
and
gs
pop
sbb
and
xor
mov
jl
sbb
add
xchg
shlb
pop
adc
cltd
rcr
xor
repz
int
xor
sbb
daa
fidivrs
dec
iret
int
mov
sbb
add
mov
insb
mov
add
push
fcoml
repz
sbb
sub
dec
push
or
outsb
pop
inc
xchg
mov
xchg
dec
mov
or
xor
lock
mov
mov
bound
add
push
es
aam
and
mov
insl
or
xchg
ljmp
ja
dec
sti
add
outsb
jo
data16
inc
lahf
sub
lahf
jmp
ss
sbbl
pop
add
nop
popa
ja
jp
mov
adc
fucomp
jecxz
insb
mov
mov
test
ljmp
popf
add
in
xadd
push
add
xchg
insb
pop
pop
aas
movsb
add
lret
ror
iret
in
xchg
add
mov
lahf
xchg
arpl
jmp
int3
lcall
dec
shrb
gs
das
rcll
add
dec
pop
mov
out
jo
add
bswap
in
aam
xor
mov
dec
outsb
dec
mov
inc
xor
cld
sub
mov
dec
ret
mov
pusha
push
or
xchg
pushf
add
int3
mov
adc
cltd
push
insl
nop
xchg
call
lret
ds
inc
aad
mov
xchg
mov
jae
jb
sub
sbbl
cmpsl
scas
xchg
loope
mov
or
idivb
int
imul
mov
cmp
push
add
push
mov
xor
pop
cs
mov
js
and
testl
mov
jbe
mov
scas
dec
xor
dec
int
adc
aad
cmpsl
push
push
add
fcoml
mov
fmuls
gs
in
add
inc
or
add
lods
lock
hlt
push
jne
ljmp
cwtl
mov
lods
imul
and
in
push
dec
inc
add
inc
push
sub
jnp
gs
sbb
scas
mov
clc
popa
int3
mov
push
jb
icebp
test
jl
mov
icebp
daa
mov
mov
adc
jecxz
popf
mov
inc
jg
pop
xchg
pusha
mov
mov
cmpb
fadd
imul
mov
lea
pop
into
jecxz
push
mov
adc
xchg
lret
es
inc
and
inc
popf
in
int
clc
mov
wbinvd
in
push
mov
stos
adc
scas
imul
pop
or
loopne
enter
adc
cmp
test
and
add
cld
mov
aam
inc
mov
fcomp
sbb
inc
mov
or
movsb
inc
ds
filds
mov
or
setnp
add
xlat
mov
movsl
fistpll
cmp
xor
test
and
lcall
jb
mov
jge
add
fdivl
dec
xor
mov
adc
push
adc
inc
mov
ret
aad
add
les
lds
movsb
add
sub
dec
push
pop
pop
pusha
sbb
or
cmp
clc
jle
jle
divl
pop
lods
lods
push
cmpsb
iret
out
mov
sti
jnp
repz
arpl
sar
fistl
sub
mov
ja
repz
mov
gs
mov
cmpsl
loop
inc
in
je
fimuls
mov
aam
gs
addr16
jns
jl
filds
shl
out
and
and
jge
mov
and
add
xor
or
in
movl
imul
sbb
adc
inc
scas
enter
fmuls
je
je
or
or
std
out
loopne
iret
xor
aad
out
repz
mov
rcrb
jl
xlat
mov
nop
pushf
and
or
jle
and
push
or
and
or
jo
push
xchg
add
mov
add
xor
jo
add
bound
mov
push
cld
loopne
xchg
fadds
pop
mov
jmp
sbb
inc
in
std
int
sti
inc
outsb
jb
scas
call
imul
jle
imul
mov
je
xchg
icebp
movsb
pop
inc
add
xchg
sbb
ror
jns
sbbl
sarb
add
pop
bswap
mov
std
leave
out
roll
hlt
ds
pop
push
js
fmul
cmp
mov
sbb
mov
adc
sub
mov
mov
aaa
fsubr
mov
jae
push
into
mov
subb
outsb
inc
xlat
ds
jle
add
subl
cmp
out
sarl
imulb
fsubs
rolb
cmp
pop
pop
dec
mov
lock
xchg
and
sub
add
sti
clc
cmp
in
ss
xchg
and
icebp
test
mov
push
fcompl
or
insb
cmp
ds
aas
fcmovnu
mov
dec
out
push
inc
int3
or
mov
or
push
inc
push
in
mov
inc
std
sbb
xchg
xlat
lock
push
jmp
ja
ret
cmpsb
shlb
xchg
jmp
cmp
mov
out
cwtl
out
push
andb
pop
stos
adcb
incb
lods
mov
cmpsb
mov
fcoms
xchg
inc
sbb
insb
mov
shr
and
ljmp
and
pop
stos
loope
in
xchg
enter
mov
js
xchg
push
mov
sub
inc
mov
mov
push
cmp
dec
outsb
popa
sahf
inc
ret
test
fisubrl
jns
pop
test
sub
jne
mov
pop
nop
adc
push
repz
jo
and
lock
leave
mov
pushf
sub
xchg
sub
jl
or
push
aad
les
inc
test
pushf
shrl
scas
jp
push
pop
test
mov
sbb
int3
lods
lods
mov
cmc
movsb
pushf
add
or
dec
ss
xchg
out
dec
lcall
add
or
loopne
data16
jmp
imull
js
mov
test
adc
loopne
pop
popf
sbb
mov
pop
adc
dec
push
repz
add
xchg
sarl
jne
jbe
clc
fsubs
add
lar
xor
dec
sbb
dec
daa
push
cmp
faddl
jl
out
mov
fisttps
pop
cmp
dec
and
fcmovb
mov
in
bound
xchg
jbe
push
or
scas
jecxz
add
decl
mov
loope
orl
sbb
jge
cmp
insl
inc
repz
movsl
or
adc
imul
mov
fmuls
adc
dec
or
or
out
lds
enter
je
cmp
loope
lcall
or
clc
push
and
jns
xchg
inc
mov
mov
jne
inc
jbe
call
push
mov
jl
pusha
pop
flds
iret
flds
data16
pop
push
int3
test
pop
jp
aad
call
jns
fcoml
jge
lea
cli
xor
sub
in
sub
daa
lods
cs
stc
xor
sbb
in
or
add
sarl
mov
jne
sub
fldenv
scas
movsb
dec
jmp
or
sbb
mov
stos
pop
and
add
or
jg
ljmp
adc
inc
pop
sar
ret
dec
inc
test
lahf
and
cmp
cmp
mov
mov
orl
mov
xchg
scas
cwtl
mull
aam
sbb
adc
loope
ret
mov
mov
mov
mov
sbb
sub
enter
xchg
lcall
push
sbb
push
int3
jecxz
jo
jecxz
mov
inc
lods
push
fdivrs
inc
push
jb
or
fcomi
and
je
sbb
mov
fldl
push
cmp
cmp
pop
stc
icebp
add
rcll
jl
stc
add
push
mov
lds
mov
mov
fstps
add
push
aad
sahf
inc
int
sub
test
inc
mov
jecxz
icebp
xor
fists
iret
in
dec
jo
out
out
adc
in
mov
jno
sbb
xchg
pop
lods
mov
adc
mov
inc
push
pop
js
add
fdivl
mov
jbe
adc
xor
or
popl
cmc
xor
jp
xorb
sbb
js
inc
sub
push
adc
mov
adc
test
nop
sub
inc
push
loope
andl
adcb
flds
cmpsl
jb
cmc
mov
cmp
and
sub
arpl
sbb
mov
test
nop
inc
pusha
ljmp
cld
mov
fdiv
popa
pop
cwtl
jo
adc
mov
in
in
orb
rcrb
mov
jo
lret
pushf
ret
lds
cs
movsb
xorl
mov
clc
add
adc
sub
into
mov
xchg
adc
mov
ror
mov
push
shlb
in
repz
out
in
mull
jmp
add
jmp
mov
jne
jge
data16
dec
icebp
out
cltd
sbb
stc
push
pop
xchg
xchg
es
insl
add
test
sahf
xchg
sbb
movsl
stc
dec
adcb
out
stos
xchg
pop
rcrb
inc
enter
aad
icebp
or
mov
push
and
mov
call
push
pop
jp
push
adc
add
in
add
cmp
movsl
fdivrs
push
mov
iret
xchg
mov
les
adc
int
roll
sbb
test
jl
jo
clc
cmpsl
lahf
cmpsl
je
lret
pop
jno
jb
xchg
hlt
push
loopne
mov
add
jne
mov
mov
sub
add
mov
xchg
test
adc
lods
push
adc
popf
sub
data16
in
xchg
shlb
ljmp
ljmp
cmp
sub
cmp
lcall
les
add
push
mov
sbb
add
scas
inc
sbb
test
adc
loopne
push
push
inc
xchg
dec
push
adc
push
stos
pop
sbb
add
mov
in
and
bound
jns
out
enter
jp
jecxz
inc
and
call
bound
call
lahf
jl
inc
dec
lods
sbb
sti
out
mov
out
push
push
xchg
inc
mull
inc
je
add
mov
int3
daa
ja
add
sub
cmp
mov
cli
adc
aam
xor
xor
jmp
decb
xchg
add
adc
jne
jmp
xor
outsb
cli
push
test
lods
mov
mov
sbb
sbbl
xchg
xorb
and
cli
cmpsb
push
push
es
add
adc
icebp
pop
sbbb
and
out
adc
out
push
add
test
or
pop
sahf
cmpsl
sbb
js
cmp
cmc
push
andb
dec
push
in
pop
lods
add
int
movsl
push
and
adc
ds
push
xchg
mov
dec
imul
adc
fcomps
jns
or
sbb
insl
scas
js
pop
xchg
cmp
pop
mov
jne
stos
cmp
leave
out
dec
ret
jp
imul
push
pop
fbld
cli
mov
mov
loop
repnz
loop
xchg
xlat
scas
cmp
push
pop
xor
xlat
aad
addr16
loopne
adc
jle
and
mov
cltd
or
mov
cmova
add
into
imul
shlb
pop
jno
jge
imul
lea
es
lea
add
arpl
test
cwtl
cmp
stos
fldpi
iret
inc
push
pop
and
ljmp
mov
add
pop
sub
mov
fildl
cwtl
sti
xor
xor
xchg
mov
mov
mov
shl
ljmp
add
or
xchg
clc
push
xor
imul
sbb
xor
dec
pushl
xchg
mov
add
icebp
pop
and
inc
cli
aad
shl
loopne
pop
jbe
adc
loope
movsl
in
pusha
inc
aaa
fdivs
lock
lcall
pop
sbb
fs
or
subl
jmp
add
mov
clc
fimull
inc
stos
scas
fs
stc
mov
push
popf
loopne
cmp
ds
dec
filds
add
adc
add
popf
stos
rcrb
mov
nop
cmp
sar
xor
ficompl
add
inc
sbb
mov
push
insb
pusha
dec
sbb
or
js
cmc
test
aam
cld
dec
cmc
pop
lcall
xor
inc
outsl
jl
add
xor
movsl
and
inc
in
mov
lds
int
add
add
data16
add
add
enter
mov
push
jno
sub
sub
pop
test
xorb
mov
mov
test
rcrb
sub
sbbb
icebp
mov
lea
pop
or
mov
sub
sahf
and
add
das
mov
mov
inc
fsubrs
fsubl
xor
push
pop
lock
int
ret
push
mov
and
lret
cli
or
in
xchg
mov
xor
add
jo
jo
cmp
movb
push
int
mov
jmp
and
aam
ss
cmp
sbb
jecxz
xor
mov
push
imul
fbld
loop
jge
cmp
mov
xchg
inc
loopne
push
dec
loope
cld
ss
ret
push
std
xor
outsb
sub
mov
xchg
icebp
mov
inc
xchg
test
lock
shlb
lock
fdivl
dec
and
add
nop
sub
sbb
data16
sbb
orb
mov
sahf
stos
push
inc
xchg
push
xchg
mov
adc
or
in
out
sbb
iret
xlat
int3
repz
mov
mov
dec
inc
push
loop
pop
mov
insb
cwtl
or
aad
shl
or
push
inc
mov
inc
mov
xchg
out
and
push
loope
mov
push
add
cmpsl
jge
cltd
pop
les
or
push
sub
and
ljmp
scas
and
pop
and
mov
leave
imul
shlb
lret
jge,pn
mov
sub
daa
insb
fidivl
jo
pop
hlt
mov
inc
ret
adc
pop
jbe
jmp
sbb
sub
mov
stos
jecxz
loopne
jne
xchg
daa
inc
in
mov
outsl
filds
subb
pop
jmp
mov
rsm
les
fisubl
aam
lods
pop
add
ret
mov
cmp
adcl
push
mov
lods
sbbb
mov
cwtl
hlt
jno
lds
movsb
psadbw
pop
test
sbb
nop
dec
fimull
bound
mov
enter
outsb
scas
xchg
sbb
cmp
mov
push
cld
sub
adc
pop
out
aad
pop
inc
stc
pusha
jge
sub
add
fwait
cli
xor
cmp
arpl
loopne
lds
fisubs
inc
lods
cltd
push
xchg
pop
pop
mov
xchg
adc
pop
pushf
cmp
jne
sbb
xchg
daa
dec
test
sbb
mov
inc
imulb
nop
clc
ljmp
sbb
cld
loope
push
add
fst
pop
cmp
push
add
add
cmp
inc
inc
je
mov
test
int
aaa
stos
lock
mov
adc
rorl
add
xor
incl
jmp
adc
jbe
and
popa
iret
xor
or
or
adc
dec
leave
loop
xlat
cs
jne
push
pop
xchg
xor
cmovl
std
jo
add
jp
lret
into
arpl
fwait
add
scas
xchg
scas
inc
fdiv
rorl
roll
call
loopne
pop
and
push
cmp
or
insl
aas
leave
into
sbbl
cld
dec
jnp
fwait
lret
sbb
test
les
pop
add
fdivl
inc
repnz
movsl
dec
lock
arpl
scas
inc
jae
cmp
call
mov
and
loopne
pop
and
jns
mov
mov
sub
xchg
push
sbbl
adc
jge
add
mov
xor
cld
sbb
bound
aas
je
inc
sbb
loopne
arpl
cmpb
add
mov
and
adc
sbb
and
pusha
daa
or
xchg
jno
jg
js
ds
inc
inc
dec
jg
xor
push
xchg
lods
je
popa
cmc
xlat
xchg
in
dec
sbb
mov
outsl
add
icebp
arpl
add
inc
cmp
or
setnp
sahf
in
ljmp
movsb
push
xchg
rolb
test
or
shll
rolb
ret
xchg
imul
in
inc
shll
stc
lods
add
pop
test
or
cli
push
xchg
out
push
pop
in
js
and
std
and
in
ret
and
inc
gs
xor
aad
js
sub
mov
sbb
mov
push
dec
sub
inc
cmpsb
das
jbe
cmp
jb
or
dec
jo
fimuls
jne
lods
inc
das
pop
jmp
loopne
int3
dec
aam
pusha
sub
push
add
cli
mov
inc
inc
sahf
pop
or
and
bound
aaa
cmp
les
test
test
stc
mov
sub
xchg
lret
scas
mov
nop
xchg
sub
xchg
xchg
adc
ljmp
jmp
cmpsl
pop
xchg
loope
mov
xchg
cmp
loopne
test
inc
fmul
jno
and
adc
push
add
sbb
sbb
je
mov
int3
pop
test
xor
jno
clc
jle
push
sub
adc
cli
ja
cltd
lock
test
in
outsb
jp
pop
xorl
pusha
add
mov
sbb
dec
mov
cmpsb
push
cld
mov
adc
call
adc
iret
cmc
loopne
xor
sub
mov
call
add
scas
inc
arpl
dec
xchg
mov
inc
jbe
add
push
pop
std
test
push
xor
jge
fistps
or
testb
mov
cwtl
test
sbb
dec
add
sbb
int
and
dec
and
mov
enter
outsb
xlat
nop
jge
and
ds
mov
mov
into
fisttps
rolb
les
mov
loope
leave
popa
or
jge
and
or
std
xchg
sub
sub
inc
inc
jnp
mov
push
rorb
test
outsl
push
mov
cltd
push
lea
jo
and
adc
xor
push
xor
push
adc
dec
adc
stos
sub
movsb
enter
sub
jecxz
cmp
movl
cmp
add
in
repnz
pop
shlb
xchg
xchg
and
dec
orb
mov
outsb
mov
stc
lock
je
push
daa
insb
push
xchg
test
pusha
inc
orl
xchg
repz
jg
pusha
push
pop
scas
stos
mov
lock
roll
cmpsb
int3
dec
inc
ds
cltd
stos
and
cs
add
xlat
sub
inc
jg
mov
push
mov
sbb
cmp
or
imul
jnp
cmp
mov
in
ljmp
lahf
pop
cmp
inc
mov
push
push
ret
btr
jle
insb
pop
pop
sahf
pop
lock
inc
sub
sub
push
jb
test
add
loopne
movsb
xor
mov
stos
out
int
mov
xor
mov
jg
push
jl
mov
xchg
mov
push
add
add
jg
push
add
loopne
mov
cmpsb
lcall
arpl
jno
push
and
pop
add
rclb
fwait
mov
pusha
leave
outsl
jl
data16
xor
movsl
pop
xor
jno
daa
xor
jg
subb
sbb
dec
sbb
push
push
mov
or
insl
sub
mov
dec
jnp
loop
pop
das
ss
enter
lea
mov
pop
xlat
aam
adc
jg
vrcpss
fs
fadds
cmp
dec
dec
ror
mov
xchg
xchg
call
lods
popa
and
in
mov
mov
push
call
dec
add
rcll
stos
xchg
sub
jge
clc
cs
jo
aaa
cld
or
jbe
or
mov
dec
ja
sbb
cli
insb
outsl
rclb
inc
scas
sahf
cmp
les
lock
mov
repz
sbb
xor
mov
jge
jl
daa
xor
dec
cmp
mov
ret
or
mov
mov
ljmp
inc
outsl
xor
mov
test
jmp
pop
pop
popa
ret
sbb
or
or
sbb
fcmovne
loope
sbb
outsb
sbb
or
cmp
xchg
test
mov
pop
jmp
out
clc
out
shrl
pop
test
fcomip
push
xchg
adc
lahf
shlb
push
rolb
leave
pop
mov
dec
or
ror
add
xor
adc
aaa
fcompl
add
push
imul
aaa
jecxz
adc
jle
ljmp
mov
popf
mov
inc
and
sub
lret
pop
sahf
lret
sbb
cmp
je
xor
das
pop
and
movsb
cmp
imul
sub
add
xor
cmp
stos
sbb
dec
mov
xchg
shrl
push
xor
ror
push
mov
movsl
xchg
jle
pop
inc
scas
adcl
aam
lahf
sarl
xchg
mov
add
aam
cmp
add
and
push
adc
imul
mov
sbb
enter
lock
inc
frstor
mov
data16
mov
shlb
xor
cmp
pop
gs
cwtl
rcr
inc
notb
jecxz
or
enter
fistps
pop
imul
cmp
pop
sbb
mov
mov
cmp
prefetchwt1
daa
ret
sbb
sarl
lods
xor
mov
or
add
xor
push
sbb
sub
pusha
sub
cmp
xlat
aad
ss
popf
in
jae
cld
jge
or
sahf
xor
mov
loope
mov
jae
xchg
jnp
stc
push
cmp
repz
or
lods
dec
fldt
ljmp
lea
orb
pop
mov
subw
adc
cld
inc
cmpsb
nop
mov
into
push
mov
pop
mov
clc
adc
roll
pop
scas
jno
test
jmp
shlb
addr16
push
jns
push
sahf
pop
out
xor
add
sbb
mov
push
fsts
idiv
iret
jl
fmull
scas
add
cmp
mov
dec
mov
jne
ret
imul
ljmp
incl
jbe
movsl
pop
add
sub
mov
mov
push
push
std
push
push
addr16
pop
arpl
sarb
cmp
adc
sbb
adc
jg
int3
add
ss
xchg
xor
andl
lcall
js
mov
lods
push
movsb
mov
or
dec
xor
add
in
aad
fsubp
cmpsl
sbb
jns
cmc
jecxz
inc
punpckhwd
or
sbb
insb
push
in
inc
jmp
cli
jp
cmp
aad
pop
cmp
out
and
xchg
aam
sub
mov
daa
incl
loop
enter
inc
mov
js,pt
cmp
mov
cmp
loopne
push
mov
roll
add
add
rorl
cli
jecxz
rorb
sub
push
clc
inc
mov
xchg
orl
in
loope
pop
push
xchg
clc
pop
sbb
test
pop
add
mov
loopne
sti
jecxz
xchg
shrd
popa
mov
loope
sbbb
mov
inc
out
mov
nop
andl
inc
adc
xchg
ret
dec
addr16
pushl
jg
in
orl
fwait
xchg
arpl
loopne
int3
xor
xor
cmp
or
repz
gs
and
push
fisubrl
mov
out
xchg
popa
scas
xchg
pop
fdivrs
test
push
mov
mov
cld
ljmp
lahf
ret
les
dec
shrl
mov
adc
rcrl
out
sbb
mov
jmp
adc
mov
js
push
repz
or
cmp
jg
fwait
dec
test
pop
xlat
mov
ret
mov
psrad
cmpsb
add
and
dec
jns
xchg
popa
adc
lods
xchg
test
mov
xchg
sub
mul
dec
ss
cwtl
sub
fsubrs
cwtl
int
fwait
cmp
gs
outsb
mov
sbb
jmp
and
loopne
lds
out
jno
les
jnp
jl
xchg
sbb
or
pop
adc
dec
mov
or
and
andl
add
add
imul
nop
cmp
imul
lret
cmpsb
lcall
inc
es
dec
jl
ds
sub
aaa
jo
lock
cltd
pushw
and
ja
hlt
sbb
cmp
lret
iret
nop
test
jp
leave
sbb
adc
pop
lods
cmp
xchg
and
add
lods
pop
outsb
mov
mov
test
lcall
roll
xor
push
or
jnp
loope
push
push
mov
push
mov
push
pop
cmp
or
cli
rcrl
scas
inc
adc
jg
inc
mov
fwait
or
pop
mov
enter
mov
push
lcall
mov
cmp
or
orb
xchg
dec
add
addb
cmpsb
daa
pushf
movsl
xchg
addl
daa
pop
out
aas
jo
mov
add
or
inc
hlt
xor
xor
into
xlat
jae
push
mov
jne
outsb
inc
clc
cld
mov
mov
sbb
add
inc
mov
iret
jmp
cmpl
pop
imul
push
aaa
mov
roll
mov
subb
cmp
adc
push
jle
ds
xchg
lods
xor
outsb
popf
mov
lahf
loope
add
push
dec
sub
pop
jp
sbb
js
xor
es
loopne
addb
pop
mov
adc
or
adc
call
loopne
add
loope
mov
pop
sbb
movsl
test
xchg
xchg
das
xor
push
mov
pop
iret
bound
sbb
imulb
movsl
jp
std
or
into
lods
enter
fisubl
stos
push
xlat
add
cmp
inc
dec
cmp
mov
push
cmp
popa
xchg
push
loopne
adc
test
push
fcmovne
mov
mov
cltd
shll
cmc
scas
push
addb
leave
cltd
clc
cmp
xchg
cmp
push
out
sbb
sahf
stc
xchg
sti
pop
mov
loop
inc
das
imul
clc
mov
jae
adc
and
lods
inc
dec
mov
pop
test
xchg
add
in
imul
mov
aam
dec
call
inc
cs
pusha
lods
push
xor
or
jmp
clc
popa
out
fst
dec
cs
lret
jecxz
sub
faddp
xor
rcll
push
fnstenv
sbb
loop
outsl
sti
or
mov
mov
in
push
rolb
push
outsl
sub
int3
cwtl
mov
shl
mov
dec
aad
mov
sbb
clc
pop
and
nop
cmp
pop
or
mov
pusha
sbb
mov
inc
cmp
or
stos
add
es
out
push
dec
cmp
sbb
fldl
dec
xor
inc
out
lcall
and
mov
xor
scas
scas
sbb
xchg
sbb
mov
repnz
mov
add
call
fcmovne
loop
jo
push
pop
sub
mov
daa
xchg
sbb
push
sbb
mov
jl
dec
mov
pop
push
rorb
fwait
movsbl
sub
inc
adc
jp
les
repnz
in
loopne
stc
sbb
jg
ja
and
int3
fistl
daa
xchg
jmp
in
stos
data16
push
ljmp
inc
xchg
das
and
bound
loopne
inc
or
mov
sbb
mov
loope
adc
lcall
outsl
mov
pusha
ret
negl
dec
ret
adc
add
and
fistps
das
out
push
in
test
mov
es
or
xchg
xor
icebp
mov
push
andl
enter
test
jbe
sbb
addr16
inc
cmp
and
jge
cmpsl
stos
adc
jecxz
xchg
jp
xchg
sub
fistl
lds
cmp
inc
and
inc
xor
push
pop
in
push
rcl
imul
movsl
pop
push
jle
insl
dec
pop
incb
pop
insl
fwait
and
mov
clc
sub
inc
das
sub
mov
in
cltd
aaa
pop
inc
daa
les
mov
imul
push
std
adc
movsl
mov
daa
sbb
lds
add
dec
jge
add
xor
push
dec
xchg
pop
sub
adc
call
gs
inc
dec
int
dec
icebp
xchg
sbb
ljmp
rcl
adc
loopne
rcrl
xor
xchg
mov
adc
sbb
mov
into
cld
xchg
adc
leave
add
cmp
lcall
test
push
dec
inc
or
sarb
test
enter
push
and
outsb
or
outsb
and
lock
mulb
and
shrb
mov
iret
sbb
outsb
fiadds
cmp
mov
mov
pop
jl
jno
push
jge
addr16
addl
push
adc
test
jle
pushf
pop
sbb
fs
push
and
cmpsb
into
mov
enter
push
push
mov
sarl
mov
arpl
inc
push
aam
lcall
push
pop
xchg
mov
fiadds
mov
psubsb
icebp
imul
stc
push
scas
stos
incb
or
push
cmp
das
push
call
jp
dec
jnp
add
loope
mov
fiadds
jle
xlat
lods
enter
xor
out
dec
lea
jecxz
in
into
imul
enter
bound
inc
test
sarl
sbb
add
xor
cli
idivb
inc
gs
add
dec
aam
pop
hlt
or
dec
mov
dec
pop
pop
je
lret
add
or
mov
jg
adc
pop
cmp
dec
or
sti
bound
ret
mov
cld
ja
imul
or
sahf
sub
mov
mov
adc
jmp
movsb
jmp
lcall
mov
lock
jecxz
out
mov
and
lods
inc
add
sub
or
lea
shrl
jmp
pusha
mov
sti
imul
sti
hlt
adc
and
popf
xchg
insl
cli
inc
and
push
insb
dec
nop
scas
adc
loopnew
adc
cwtl
mov
scas
repz
or
mov
jl
bound
jnp
sub
ds
jp
popl
or
mov
lcall
loope
cmp
mov
push
pop
fwait
lock
roll
and
dec
mov
xor
inc
cmc
loop
mov
sbb
sarl
inc
in
mov
xor
lret
or
push
sub
jne
add
xchg
movl
dec
movsl
outsb
xor
les
popf
dec
ficompl
ret
pop
int
test
shll
into
cmp
lock
cld
pop
loopne
push
add
lds
jge
cmp
js
pop
dec
and
stc
sub
icebp
mov
stos
sub
stos
loope
or
inc
not
cmp
pop
cmpsl
xor
mov
xor
cmc
xor
aam
jmp
insl
cmpsb
xchg
es
sub
adc
es
adc
lahf
sub
neg
cmp
jecxz
push
or
movsb
adcl
out
cmp
dec
xchg
aaa
arpl
rcrl
xorl
test
cld
popa
inc
sub
data16
and
stos
out
inc
test
xchg
xchg
imul
push
stos
shlb
jg
lds
inc
clc
or
popf
loopne
push
mov
out
ss
adc
mov
mov
jge
lret
ret
push
xchg
push
ds
inc
jl
xor
mov
and
sbb
inc
add
push
mov
jb
adc
out
sbb
inc
mov
orl
mov
gs
insb
ret
call
or
in
push
xor
mov
es
xor
mov
jle
adc
add
add
cs
cmc
and
bsr
mov
scas
int3
repz
popf
mov
adc
or
jmp
loopne
movsb
mov
mov
adc
repnz
iret
cmp
mov
adc
push
mov
or
sbb
outsb
ja
push
xor
int
cmp
scas
sub
pushf
adc
sbb
outsb
addr16
inc
iret
fiadds
incb
mov
adc
inc
clc
insl
clts
push
jno
shll
loope,pt
pop
sbb
pop
sbb
rolb
hlt
or
jl
ret
dec
mov
push
ds
cmpsl
add
jbe
pop
inc
dec
and
addr16
mov
faddl
jne
ljmp
mov
cmp
aam
push
mov
rorl
clc
xor
add
roll
es
jp
jecxz
or
clc
stos
setge
repnz
jo
or
inc
out
pop
add
adc
push
mov
cmp
inc
jne
xchg
push
in
sbb
ss
push
mov
xchg
inc
int3
sbb
in
mov
rcl
jle
inc
pop
pop
test
outsl
jl
adc
mov
push
jl
inc
les
adc
mov
inc
inc
fistps
cmpsl
mov
add
or
push
sbb
insb
ret
sbbb
mov
jb
loop
pusha
ss
jp
call
lret
push
das
mov
lcall
jl
lret
mov
inc
and
mov
mov
jo
dec
push
add
jo
mov
mov
aad
jp
cmpsb
into
ficomps
xor
int
lods
mov
mov
lahf
mov
inc
add
lods
lret
adc
bound
jae
add
cwtl
xor
test
xlat
daa
mov
mov
mov
pop
xchg
pop
cld
xchg
jne
cmp
insl
addb
icebp
les
xor
fisttpl
scas
mov
test
dec
into
jns
loopne
xchg
sahf
sarb
stc
mov
scas
lock
and
dec
movsb
and
add
int3
push
dec
mov
loope
or
loopne
push
loop
jmp
mov
jg
cmp
jns
cmp
data16
popf
push
ficomps
cmp
pop
iret
loopne
cmp
xchg
and
ret
sub
sub
ja
hlt
mov
ja
pusha
mov
mov
pop
jb
xor
rorb
mov
add
out
or
pushf
add
mov
outsb
in
clc
cmp
mov
dec
inc
inc
sbb
push
movsl
aaa
jle
pop
xor
mov
inc
push
or
cmp
cmp
push
rcll
xor
ss
dec
mov
pop
cmp
adc
adc
ds
pushf
and
jge
lea
addb
jbe
lea
adc
mov
inc
adc
xor
mov
jg
mov
sbb
ret
enter
shrl
js
fcoms
nop
add
loop
nop
xorb
dec
xchg
push
fisttpll
mov
jmp
mov
mov
fdivrs
rcll
ds
or
popa
dec
into
hlt
jmp
dec
xchg
push
and
outsb
ret
movsl
or
cmp
lahf
movsl
popf
adc
xchg
shlb
adcl
mov
adc
adc
mov
frstor
incb
dec
ss
movsb
into
ret
push
icebp
rol
pop
sub
xchg
jo
push
sbb
test
push
das
fists
in
rclb
pop
add
xchg
loopne
and
xor
dec
mov
cs
orl
xlat
sub
pop
sub
icebp
cmpsb
rcrb
xor
insl
lds
xorb
mov
lds
mov
std
xor
ljmp
cltd
aam
cld
iret
call
jle
pop
int3
add
repz
iret
mov
jle
stc
mov
inc
or
adc
lods
and
add
lahf
push
daa
hlt
mov
mov
cwtl
dec
add
test
xchg
cmp
dec
les
sub
cmpsb
lods
xchg
dec
pop
xchg
enter
jb
jo
pop
inc
adc
mov
xor
sbbl
ret
push
dec
sti
addr16
in
and
jnp
div
jle
adc
mov
inc
pop
add
les
add
xchg
lock
inc
lret
sub
cli
or
fbld
pop
insb
xor
mov
add
mov
sahf
mov
add
sbb
mov
add
jge
aad
xlat
jne
repnz
xchg
call
in
jae
mov
das
push
add
icebp
inc
xchg
inc
add
lods
int
fnstenv
adc
mov
dec
xcrypt-ofb
cmpsl
in
or
sbb
or
lods
dec
les
add
inc
jno
fbstp
fs
cwtl
push
loop
mov
jecxz
cmp
iret
sbb
arpl
dec
inc
inc
adc
sbb
lds
lea
inc
adc
pop
cmp
leave
jo
mov
cmp
das
push
mov
jbe
cmpsl
jl
mov
xchg
mov
sub
cmc
xadd
lods
lods
xchg
mov
or
jne
or
or
push
pop
outsb
pop
loop
xchg
cld
pop
jmp
mov
xlat
fcoml
pop
stos
xor
xor
cmp
xor
cmp
xchg
dec
rol
sbb
cmp
fcmovnb
loop
or
inc
nop
add
adc
clc
bound
pop
wbinvd
push
lret
sbb
lock
xchg
xor
insl
adc
push
dec
pop
fdivs
or
mov
and
es
adc
mull
pop
mov
adcl
or
xchg
cli
xlat
sub
lock
or
mov
cwtl
mov
dec
mov
push
test
inc
lahf
mulb
mov
int3
test
adc
call
test
and
or
test
ds
imul
and
out
lret
popa
xchg
aaa
imul
imul
inc
jmp
mov
dec
sbb
je
mov
clc
outsb
out
iret
jl
lds
adc
insb
ljmp
cmc
xor
cwtl
mov
iret
cmpl
add
fdivs
test
nop
incl
addb
scas
sub
ss
dec
mov
mov
nop
adc
dec
pop
mov
clc
stos
jge
and
inc
adc
and
test
std
leave
push
sbbb
dec
xchg
adc
mov
int3
popa
fdivr
push
ret
adcb
mov
test
adc
xchg
mov
fcomps
pushf
push
hlt
lds
add
cmc
pushf
or
shl
out
inc
stos
insb
bound
call
sahf
dec
notl
aam
push
and
pop
sarl
je
andb
test
addb
xor
sub
js
lret
adc
xchg
shr
cwtl
std
add
stc
rcl
add
jno
je
bound
je
out
dec
sbbb
sub
mov
aad
mov
add
sarl
sub
ror
inc
cmp
fwait
adc
sub
jecxz
cmp
push
frstor
pop
jl
inc
shrl
jb
test
lods
and
ret
mov
into
insl
jo
stos
xorb
jne
test
xchg
incl
push
ja
js
cwtl
je
or
sub
and
xlat
nop
fnstsw
xor
adcb
je
in
outsb
jmp
jo
sub
dec
mov
loop
js
pop
std
inc
and
push
jp
nop
ljmp
ret
inc
in
into
jo
dec
adc
int
pop
xor
add
movsb
add
sarl
pop
test
push
out
cmpl
mov
rcrl
movsl
mov
sub
mov
cmpsl
pop
movsl
jns
iret
sub
push
test
mov
xor
and
ret
jge
xor
pop
movsb
push
mov
and
mov
repnz
popa
movsl
inc
rorb
xchg
jbe
ss
jle
or
test
add
sar
mov
inc
mov
jbe
inc
les
xchg
in
ja
test
dec
jbe
sub
roll
dec
rcll
aas
sti
xlat
jne
mov
xor
icebp
aam
js
mov
sbb
mov
test
or
mov
stc
and
pop
cwtl
adc
mull
inc
in
and
arpl
sub
xchg
scas
addr16
pop
jge
in
inc
daa
jne
aad
inc
mov
mov
filds
sub
sbb
add
in
add
adc
lret
das
stos
stos
ret
mov
clc
pop
cmp
ljmp
add
cmp
mov
mov
and
add
gs
repz
pusha
jb
mov
hlt
sub
push
fistpll
mov
int3
jno
negl
cs
nop
orl
dec
dec
pop
inc
push
xor
adc
xchg
mov
sub
mov
daa
jg
or
popf
lcall
add
and
jmp
mov
icebp
push
push
xchg
lret
pop
xor
sti
adc
shl
add
popa
and
js
int3
outsl
pop
loope
in
xchg
mov
addb
into
lahf
jo
xchg
mov
xor
mov
insl
xchg
adc
sbb
push
mov
sbbl
je
andb
dec
clc
cmc
sbb
cmp
sub
fidivl
daa
dec
adc
imul
jbe
jnp
mov
xchg
and
and
popa
mov
push
mov
pop
shll
pop
ret
pop
or
lock
mov
es
pop
or
jp
lcall
cmc
xor
testb
jge
repnz
push
jnp
jge
pushf
scas
xchg
int3
push
jp
in
sbb
push
mov
movsb
cmpl
sub
mov
cmp
mov
xchg
adc
fisubs
test
xchg
aaa
mov
ficomps
shlb
jle
loopne
sub
inc
out
sbb
scas
jbe
sbb
cli
sbb
push
add
push
stc
test
xor
shrl
dec
incb
int
add
cmp
add
xor
lods
adc
ss
out
popa
cmc
adc
lock
aam
jle
sbb
icebp
mull
iret
test
xor
inc
test
ds
mov
xorl
xchg
or
mov
imul
stos
mov
jnp
fcomps
inc
sub
aas
pop
xor
adc
imul
or
mov
adc
sub
mov
mov
jmp
rolb
mov
jg
call
cwtl
pop
mov
xor
ret
das
mov
mov
xchg
cs
xor
add
dec
or
sahf
cmp
aaa
mov
xchg
add
jecxz
push
jbe
aad
mov
xchg
iret
lods
pop
jmp
and
gs
shl
popf
movb
icebp
or
lods
cmp
sbb
addr16
xor
imul
and
cmpl
rcrl
cltd
jl
sub
inc
and
stc
in
loop
push
mov
jle
ja
dec
adc
and
aas
add
cmp
xlat
inc
inc
shrb
sub
or
fistpll
cwtl
movsl
into
orl
xchg
push
pop
mov
ljmp
jmp
ja
fsubrl
cmp
sahf
xor
addr16
stos
jg
xchg
ret
sbb
inc
hlt
pusha
jb
repz
fisttpll
dec
adcl
cmp
pop
loopne
imul
out
cmp
loopne
mov
lret
int3
jmp
cmpsb
mov
dec
or
imul
and
leave
xchg
lahf
mov
dec
xchg
adc
cli
les
lds
and
sahf
or
rcr
mov
negl
sbb
mov
lods
add
lock
aas
mov
or
xor
repnz
je
test
jecxz
imul
test
xchg
xor
adc
mov
loopne
sbb
loope
lea
jo
pop
jb
cld
stos
mov
fs
lds
push
call
pop
dec
aaa
and
mov
lret
add
addb
cmp
lds
loopne
aad
sti
or
test
mov
bound
lahf
push
sbbb
mov
xor
inc
pop
and
mov
pop
push
mov
push
mov
adc
lahf
les
push
push
inc
adc
mov
dec
int3
cs
mov
jecxz
and
cltd
imul
inc
out
add
push
inc
add
jle
movsb
add
jge
shll
fdivs
add
dec
loope
test
inc
adc
mov
sbb
inc
mov
mov
popa
fldenv
xorb
fiadds
jo
cltd
sub
lds
sbb
jl
adc
push
jmp
xchg
adc
cld
or
and
push
ja
loop
fldcw
push
add
push
add
les
push
sbb
jecxz
xor
push
ficoml
xchg
sub
push
into
sbb
stos
int3
cmpsl
fcoml
cmpl
inc
jecxz
add
loope
sbb
pushl
inc
daa
mov
pop
clc
rolb
pushf
call
adc
dec
xlat
cmpsl
sub
pop
scas
or
movsb
scas
xchg
cmpsb
sub
xor
cmp
sahf
inc
in
sarb
out
outsl
cmp
das
in
mov
test
loopne
mov
loope
repz
dec
or
cmc
xor
dec
stos
popa
fmuls
mov
sbb
push
push
mov
or
or
loopne
js
jl
sbb
addl
sub
roll
cmp
sbb
push
cmp
testl
sahf
out
test
xchg
mov
xchg
outsb
in
fwait
mov
sbbl
xchg
mov
imul
pop
sbb
add
faddp
mov
push
push
jb
dec
mov
inc
mov
pop
mov
sub
sub
movsl
mov
inc
add
push
adc
loop
sti
mov
xor
fimuls
dec
sub
stc
fiaddl
fadds
sbb
add
in
notl
incl
mov
cmpsl
aam
mov
stos
cmp
jo
jg
inc
scas
popa
mov
cmpl
aaa
cmp
jnp
cmc
pop
in
mov
xchg
add
xor
mov
sub
add
or
jno
fiaddl
repnz
adc
sbb
and
orl
adc
dec
std
andl
les
shll
mov
in
and
push
jecxz
xchg
mov
out
jno
xchg
mov
dec
addl
sbb
je
mov
and
push
jl
loopne
pop
dec
push
aad
adc
addb
sbbl
pop
sub
rcrb
cmp
push
lcall
pop
xor
jbe
sub
inc
fcomps
cmp
jbe
cmp
xchg
mov
aad
inc
je
psubw
cmp
or
je
loopne
cmp
fsts
push
cmp
ja
add
adc
imul
dec
push
hlt
xchg
call
adc
push
jl
and
mov
or
addl
test
lahf
test
lds
lea
mov
test
lcall
stos
bound
rol
fnsave
adc
sub
movsl
iret
rolb
lahf
stos
mov
test
xlat
sub
call
andb
pusha
jge
call
stos
ja
xor
push
je
pop
jmp
mov
xchg
dec
orb
dec
xchg
push
lea
sbb
test
xchg
jno
mov
inc
add
scas
add
and
inc
mov
mov
or
xor
cmp
add
add
xchg
mov
subl
jbe
sub
outsb
sub
dec
mov
push
mov
enter
aad
scas
sbb
push
jnp
pop
sub
int3
xor
or
loope
mov
and
and
cwtl
mov
loope
fistps
stc
xchg
pusha
pand
mov
mov
mov
leave
mov
outsb
ljmp
daa
loopne
ret
add
add
jae
push
pop
loopne
ret
outsl
pop
inc
xchg
sub
jecxz
insl
nop
lahf
aad
jg
sarb
js
lock
inc
pusha
push
mov
sub
daa
xor
jo
ds
ds
int3
pop
rclb
jne
jge
repnz
pop
push
rorl
call
cmc
cmp
je
pop
push
pop
adc
push
xchg
and
push
xchg
mov
cmp
stos
sbbl
or
sbb
nop
cwtl
push
lea
push
xor
push
in
adc
cmp
push
dec
jle
roll
pop
sbb
inc
cmpsb
and
in
lock
pop
inc
lock
pop
je
in
adc
push
bound
sbb
scas
or
jp
ljmp
aad
mov
jne
sbb
add
repz
sbb
jge
mov
mov
cmp
lds
movsl
inc
sub
jne
idivb
xchg
fldcw
pop
inc
arpl
push
sub
das
sbb
cld
ror
adc
or
mov
aam
mov
push
add
jae
xchg
fnstenv
mov
lods
mov
sti
lcall
fimuls
scas
clc
jns
clc
push
xor
xor
or
lcall
or
test
sbbb
mov
adc
icebp
lcall
jl
adc
mov
call
or
jp
xlat
xchg
mov
xchg
mov
loopne
lods
add
stos
xlat
mov
or
cmpsl
xchg
pop
sarl
and
or
inc
pop
adc
testl
xor
add
xor
jnp
call
das
sbb
mov
testb
fmull
mov
test
xchg
cmp
outsl
push
imul
sub
fildll
nop
xchg
fcmovu
loope
outsl
orl
jno
lahf
lea
loop
orl
cltd
pop
clc
je
mov
add
mov
mov
sub
xchg
push
in
add
sbb
add
rcrl
mov
jb
pushf
imul
js
mov
or
push
pop
add
orl
cmp
sti
jno
jg
mov
subl
sbb
je
sub
jg
dec
mov
sbb
fs
or
lds
hlt
sub
adc
test
shl
dec
push
loope
xchg
jo
and
sbb
push
loope
push
outsl
add
jp
das
xchg
xlat
mov
mov
je
mov
dec
mov
stos
mov
subb
lea
sbb
xchg
push
daa
pop
iret
dec
push
lret
loope
and
sbb
jle
sbb
into
add
jne
les
movsl
mov
sbb
pusha
or
test
hlt
lock
mov
test
mov
push
test
loopne
inc
test
mov
and
lea
out
sahf
rep
mov
mov
leave
call
or
popf
and
pop
cmp
imul
or
mov
sub
push
sbb
sbb
dec
adc
or
mov
sbb
mov
lock
cmpsb
dec
and
mov
or
clc
lahf
push
jl
fld
xor
js
fisttpll
xchg
mov
or
dec
xor
cmovs
les
nop
fsubs
dec
add
lds
dec
mov
sub
sub
xor
les
adc
pop
push
pop
lea
pop
and
je
adc
add
stos
add
mov
adc
lahf
lea
push
or
mov
gs
push
xor
out
inc
dec
jge
and
xchg
movl
add
mov
roll
adc
inc
cltd
xchg
and
sub
stos
jge
cli
pop
mov
or
stos
mov
adc
aad
iret
popa
rclb
daa
sti
shl
and
inc
add
es
mov
push
hlt
out
inc
jl
or
inc
mov
mov
or
sbb
outsl
adc
popa
out
xchg
sbb
fsubs
movsl
test
sbb
cs
inc
loope
cmp
fisttps
push
pop
or
adc
jge
pop
popa
je
aaa
nopl
aaa
rclb
inc
leave
jne
call
adc
fcmovnbe
mov
fmuls
push
jo
jl
or
jne
adcb
pop
das
movsb
ljmp
fiaddl
in
add
pop
mov
mov
mov
sbb
add
fdivrl
inc
and
test
sbb
cmovle
cmp
inc
sti
xchg
hlt
ja
cs
mov
shrl
add
push
stos
ret
loopne
jmp
int
adc
fildll
sbb
push
sub
in
jno
jno
or
test
push
mov
xchg
ja
jne
in
jmp
pop
fcoml
push
and
lret
mov
cmpsl
inc
lahf
mov
jbe
js
bound
sub
jo
loope
xchg
lcall
mov
mov
out
fisubrs
sub
jbe
sbb
cmpsl
pop
test
flds
fcomp
inc
jl
es
scas
lret
sub
add
fimull
fs
repnz
dec
jge
mov
sbb
test
fbld
loop
sub
xchg
ja
loop
sbb
or
push
test
or
je
sub
aam
cs
icebp
xor
dec
dec
data16
jp
loop
pop
je
xchg
data16
xchg
data16
pop
xor
and
bts
inc
mov
ret
test
shl
sub
es
push
sub
arpl
loope
pop
insb
lods
dec
dec
cmp
mov
add
js
test
cmpl
xorl
and
dec
mov
mov
adc
adc
jl
mov
push
fcmovnb
mov
shl
sarb
push
jae
cwtl
mov
sub
roll
xchg
push
and
pop
pop
dec
xor
fwait
cmp
xor
repz
mov
inc
stos
ljmp
fcmovbe
ret
xor
push
inc
fucomi
mov
in
decl
jle
mov
or
jb
inc
push
cmp
pop
xchg
roll
cmove
mov
jp
loope
and
or
adc
pop
fistps
fnstcw
jge
stc
xchg
cld
addr16
outsl
into
rorb
fisubrl
add
mov
adc
inc
cmp
les
xor
push
inc
cld
add
push
or
dec
mov
jno
sbb
mov
cmp
sahf
lds
fisubrs
loopne
mov
shr
movsb
jmp
pop
add
dec
inc
sub
loopne
fbstp
cmpsl
sbb
in
mov
loopne
shr
jg
shrb
push
mov
ljmp
or
outsb
jmp
lcall
mov
add
sub
fnop
andb
pop
mov
inc
sub
int
adc
pop
test
inc
push
dec
arpl
cmp
sub
and
mov
mov
out
xchg
adc
mov
xor
cltd
test
imul
bound
sbb
enter
push
call
inc
cld
sbb
or
orl
leave
xchg
jno
mov
xchg
mov
les
mov
or
in
scas
jo
cmpsl
push
cmp
sub
mov
pop
pop
push
pushf
xchg
inc
jnp
shrb
jnp
rcrb
dec
mov
jl
xor
daa
xchg
cmpsl
xor
inc
push
and
or
iret
int3
jne
cld
bound
cmp
sub
sbbl
or
adc
add
negl
dec
pushf
add
data16
mov
scas
push
and
push
orl
pop
mov
lahf
xlat
xor
mov
dec
cmpsb
jmp
outsl
push
es
jmp
adc
pop
push
inc
loopne
leave
outsl
pop
mov
sbb
imul
adc
scas
dec
adc
push
in
jnp
push
jno
mov
ds
mov
and
push
in
repnz
popa
push
xchg
shl
sbb
enter
adc
jl
int
out
adc
inc
and
add
push
jne
dec
or
cmp
pusha
dec
mov
fmuls
or
adcl
fnstenv
and
dec
movsl
xchg
push
add
popa
ja
or
testl
inc
fstpt
xchg
imul
dec
pop
adc
sahf
and
test
inc
idivl
in
or
rolb
movsb
push
pop
lahf
cmp
lret
adc
lret
jo
shll
push
movsl
mov
xchg
loope
int
mov
xchg
xchg
cmp
shlb
jo
aad
icebp
sub
add
ljmp
push
cmc
or
loope
or
imul
jecxz
mov
pop
cwtl
mov
mov
pop
sub
mov
lea
xchg
bound
test
xchg
sbb
repnz
stos
fwait
jns
mov
xor
enter
movsl
inc
sub
stos
xlat
les
jge
data16
xor
pop
pop
mov
jae
shl
add
pusha
pop
add
test
mov
test
xchg
inc
ret
pusha
stos
inc
fsubrl
je
mov
mov
icebp
pop
dec
andb
xchg
jb
mov
or
mov
add
sub
cmc
out
dec
or
or
adc
and
sti
adc
mov
cmp
test
in
jb
push
fistps
xor
cmp
in
push
das
jne
pop
pop
dec
mov
add
adc
fsubp
sub
je
in
lock
loope
stos
fidivl
pop
push
int
pop
clc
mov
push
adc
cld
scas
pop
push
xor
loopne
not
mov
fcomp
pop
xchg
lods
push
mov
arpl
icebp
sbb
or
inc
mov
das
lock
nop
cmpsl
pop
jno
pop
mov
adc
fidivs
popf
or
fsubrs
or
rcrl
mov
push
mov
sub
dec
sti
mov
jl
ficoml
jmp
sub
mov
and
push
pop
xchg
fadds
es
cmpb
adc
push
mov
xor
mov
inc
xor
add
jmpw
dec
sub
rolb
inc
stc
cmp
pop
mov
cmp
repnz
sahf
shll
adc
fcmovne
popa
rcrl
lods
loopne
adc
movsl
xor
or
sbb
mov
bound
mov
pusha
jle
into
fnstcw
xchg
je
push
cmp
push
ret
cltd
mov
cmpsb
xchg
repz
ja
fisttps
xchg
push
pop
add
rcrb
cmp
xchg
push
push
or
push
data16
andl
adc
fdivs
or
mov
xor
mov
pop
aam
add
sub
ja
xor
bound
xor
inc
xor
push
je
inc
test
inc
jbe
call
and
mov
xchg
pop
inc
fcos
int3
add
mov
xor
cmc
cmpsb
int
shrl
xchg
adc
mov
dec
in
stos
out
xchg
sub
sub
xor
xor
pop
movsb
rorl
xchg
pop
add
pop
test
cli
sub
xchg
cmp
cmp
cmp
mov
dec
or
jge
xchg
and
or
fs
call
mov
inc
pop
mov
cmpb
ret
int3
test
or
lods
xor
sbb
test
stos
adc
xchg
xor
push
pop
lret
mov
lds
cmc
or
int
xchg
in
iret
and
mov
cs
or
shrb
icebp
mov
push
lret
mov
mov
stc
ret
inc
adcb
inc
repz
pop
mov
adc
lcall
inc
into
arpl
cwtl
mov
or
loope
and
mov
repz
lock
jbe
dec
cmp
movsl
and
insb
mov
stos
arpl
movsb
mov
aad
mov
pop
cld
jne
out
add
cmp
push
addb
fmuls
xchg
xchg
push
jb
adcb
xor
arpl
lock
icebp
push
add
and
xchg
dec
pop
pop
cmp
push
jns
pusha
iret
mov
scas
or
pop
pop
adc
aad
jg
shll
outsl
sbb
mov
ljmp
pop
div
inc
inc
scas
push
inc
jns
sub
das
mov
xchg
jno
adc
iret
pop
fsubs
mov
mov
ficoml
les
add
sub
xchg
pusha
mov
inc
out
aaa
aam
add
adc
mov
imul
push
sbb
rorl
pop
mov
pop
jmp
repz
push
and
daa
test
nop
push
pop
mov
mov
mov
imul
sti
lahf
js
jo
mov
mov
in
int3
jmp
notb
push
jae
push
bound
ficoms
xor
push
jle
xchg
ja
and
push
ss
fstl
js
pop
jb
imull
and
xor
sbb
mov
push
in
mov
mov
fs
push
or
mov
sub
lcall
cli
mov
jg
imul
popf
push
subb
cltd
push
jnp
lret
pop
in
loopne
pop
sub
or
push
ret
inc
sub
mov
inc
jbe
sub
stc
out
sbb
adc
mov
dec
addr16
test
aam
sbb
xor
jle
mov
fstpl
cmpsl
adc
fldl
gs
xchg
dec
adc
cmpl
sbb
idivl
int
xchg
dec
mov
icebp
inc
rolb
pop
cmp
xchg
popl
aas
subl
and
push
ljmp
xchg
cltd
cmpsb
and
pusha
mov
loop
jle
jo
outsb
les
mov
test
push
or
inc
sbb
inc
aas
inc
xlat
xor
iret
bound
push
shrl
inc
lea
bound
lock
dec
inc
ret
scas
and
jecxz
outsb
add
pop
cmc
mov
in
sahf
pushf
push
popa
jle
test
xor
mov
sbb
mov
cmp
fdivr
js
in
push
test
mov
fiaddl
mov
sti
push
adc
call
jmp
jecxz
cli
insb
cmp
jae
lods
cmp
mov
jecxz
insb
js
rcr
je
add
cmp
push
aam
cld
ret
push
loope
mov
cwtl
mov
inc
int3
dec
nop
add
jmp
lcall
xchg
mov
jecxz
inc
aas
mov
xlat
add
sub
inc
sbb
adc
mov
or
xor
std
ror
sub
jge
out
movsl
xchg
pop
hlt
mov
mov
xlat
push
push
inc
sbb
aas
in
enter
inc
test
mov
or
pop
lea
sub
cmp
aam
fnstenv
or
pop
sbb
xor
and
shlb
add
adc
add
loope
and
jno
out
test
jnp
add
inc
daa
pusha
stos
imul
pop
xchg
fsubrs
js
xchg
out
pop
stos
pop
das
repnz
xchg
pop
lds
xor
sbb
rcll
jns
or
xchg
xchg
cwtl
inc
frstor
test
inc
xor
push
stc
jl
imul
sub
adc
inc
mov
sbb
push
adc
into
push
jle
push
push
loopne
xor
out
push
sbb
outsl
xor
inc
pusha
and
aaa
and
aam
inc
cmp
sub
and
je
xchg
inc
mov
push
xor
fnstenv
xchg
pop
sub
test
push
jl
jo
mov
push
loop
xchg
mov
std
xchg
mov
mov
mov
outsb
fdivr
cltd
jmp
sub
in
jns
xor
mov
je
mov
push
in
adc
je
xchg
inc
imul
jmp
shll
cmp
js
pop
je
daa
ljmp
out
push
and
lcall
cmp
mov
mov
add
scas
loopne
jo
inc
test
orl
sbb
inc
and
repz
cmpsb
sti
mov
fisubrs
jl
push
pop
cwtl
leave
test
mov
out
push
inc
ret
hlt
or
jns
lea
dec
inc
sbb
mov
loop
sub
loop
jle
test
sub
aam
lahf
mov
jne
pop
cli
sub
pop
jmp
bnd
loopne
enter
sub
dec
inc
adc
add
add
pushl
and
adc
nop
xchg
int3
add
shlb
add
mov
pop
mov
loopne
mov
add
add
fsubrs
mov
dec
bound
xchg
insb
push
das
or
out
sarb
or
inc
shl
sbb
cmp
xchg
test
repz
push
popa
push
xor
pop
cltd
daa
and
xor
push
adc
mov
cmpsl
lcall
sub
test
xchg
mov
pop
mov
adc
xchg
pushf
sub
mov
xchg
in
imul
dec
and
inc
or
lcall
add
sub
xor
pop
fadds
cmp
sbb
and
rolb
cltd
sub
hlt
mov
test
add
and
jle
pop
mov
jnp
push
addr16
sub
data16
mov
dec
cld
dec
stc
into
inc
lahf
dec
mov
rcl
pop
inc
ret
cmc
rcrl
das
int
pop
jl
icebp
mov
pop
pop
cmpb
xchg
add
cli
pop
das
ret
addl
and
insb
rolb
xchg
adc
mov
insb
in
xchg
add
test
mov
cmp
xor
lea
imul
adc
adc
or
or
pop
stos
add
repnz
push
out
enter
mov
push
popa
imulb
subb
add
mov
push
nop
out
nop
mov
inc
adc
and
or
adc
push
push
sbb
cwtl
and
mov
aaa
les
loope
movb
and
sbb
inc
mov
mov
xor
or
push
in
push
sbb
or
lods
mov
stos
scas
add
rolb
stc
or
and
cvttps2pi
sub
mov
das
cmpsb
ret
pusha
add
adc
jb
popf
mov
inc
clc
inc
es
int
cwtl
push
push
push
add
leave
enter
add
adc
test
push
jnp
jne
push
test
sub
adc
sbb
pop
cmp
scas
adc
in
dec
sub
movsl
jecxz
xor
stos
paddusw
jns
fsubr
adc
scas
mov
lret
scas
mov
pop
repz
xchg
in
in
out
pusha
sbb
push
cwtl
cltd
rcrb
jne
add
into
repz
jo
push
inc
or
adc
mov
pop
mov
mov
mov
mov
push
cli
adc
xlat
mov
rclb
inc
xor
inc
cs
adc
movsl
push
push
ja
bound
add
or
jno
mov
or
mov
andl
push
andl
xchg
or
fs
push
pop
loopne
push
sub
mov
sub
xchg
or
aaa
dec
inc
push
cmp
pop
emms
shl
adcb
xchg
mov
inc
sub
pop
dec
cli
dec
dec
cwtl
inc
in
inc
inc
xchg
adc
loop
rolb
sub
and
adc
adc
icebp
cmp
push
mov
insb
pop
inc
and
jo
imul
mov
push
mov
lcall
mov
sbb
hlt
sub
sbb
sub
es
movsb
int
cwtl
adc
sbb
testb
inc
subb
mov
inc
lods
jp
std
into
loope
xlat
push
js
addb
xchg
lret
fsubrs
jmp
daa
add
fmull
addl
rcrl
xor
fldl
or
or
cmp
fidivs
call
ja
sub
pop
lcall
and
sbb
push
or
shl
stos
jns
inc
jbe
imul
sahf
add
sti
insb
es
cmp
mov
or
subl
cs
js
pop
add
lock
popa
ss
sbb
cmp
jo
sbb
xchg
mov
adc
aaa
mov
pop
pop
cmp
je
dec
dec
jecxz
xor
mov
xor
int
add
xchg
fdivrl
sbb
cld
pusha
dec
inc
xor
adc
cwtl
and
in
cmpsl
dec
stos
cmp
fisubs
cmp
mov
dec
sub
enter
sbb
inc
cmc
mov
cmp
push
jge
add
pop
sub
adc
sub
cld
cwtl
out
cmp
sub
mov
loope
or
mull
cmp
mov
cwtl
push
das
sbb
lods
pop
inc
push
pop
sahf
pop
push
dec
mov
divb
push
push
add
loope
pushf
outsb
mov
lds
inc
or
shl
xor
mov
sub
sahf
insb
xchg
mov
cwtl
inc
int
cmp
cmc
sub
pusha
xor
mov
sbb
xchg
lea
dec
js
mov
mov
movl
ret
xlat
ljmp
mov
push
insl
xchg
xchg
dec
icebp
push
or
inc
pop
or
ljmp
jp
pop
pop
push
push
cmp
push
xlat
add
add
data16
andb
and
xchg
int3
jmp
dec
sub
daa
mov
or
aas
inc
aam
mov
out
stc
sbbb
in
inc
fists
adc
ds
adcb
mov
and
or
stos
fdivr
and
or
jecxz
mov
sub
inc
add
fucomp
jbe
cmpsl
jp
push
clc
sbb
and
sbb
jno
mov
xchg
xchg
daa
adc
ja
push
push
jecxz
sub
movsl
mov
mov
inc
xor
xor
shlb
mov
or
mov
jmp
pop
lret
pop
adc
xor
mov
lock
xor
int3
sub
and
test
and
rorb
out
or
push
adc
cmp
roll
xor
js
add
insl
dec
sbb
mov
cmp
dec
in
fs
dec
call
pop
fisubs
data16
or
push
mov
inc
imul
mov
push
js
push
les
mov
leave
pop
test
imul
push
cmpsb
repnz
mov
adcb
adc
cmp
mov
shll
mov
mov
inc
loop
push
mov
mov
je
adc
push
fwait
sbb
movsb
inc
push
cltd
adc
shll
xchg
aas
faddp
mov
sbb
or
sub
inc
xchg
lret
sbb
push
push
jns
xor
mov
jp
testb
xor
mov
les
stos
pop
js
clc
dec
daa
push
xchg
dec
mov
negl
cwtl
push
xor
icebp
sti
xchg
iret
pop
or
mov
cmp
test
shl
cmpsb
add
int3
notb
mov
rclb
dec
xchg
push
lret
xor
sbb
out
outsl
cs
adc
dec
loop
mov
enter
popa
testl
pop
fsubr
push
popa
popf
push
and
mov
sub
les
ja
jg
insb
fs
push
lds
xchg
push
insb
cltd
or
mov
inc
inc
lea
in
mov
inc
xchg
mov
push
jne
gs
clc
scas
or
xchg
push
add
xchg
sti
inc
imul
out
mov
insb
cmp
xchg
inc
push
xlat
aaa
jge
xor
les
gs
adc
or
rol
push
in
fiaddl
inc
sub
jo
xor
ja
loope
mov
fistpl
xor
outsb
and
xchg
clc
xchg
mov
mov
loope
and
loopne,pt
cmpb
mov
bound
testb
mov
xor
or
mov
pop
xlat
js
mov
jno
sbb
popf
test
cwtl
sub
cld
rolb
cld
stc
adc
test
js
or
mov
mov
jo
shll
clc
andl
and
jo
cmpsl
adc
lock
lock
clc
into
or
mov
cmp
fiadds
popa
scas
lret
cmp
stos
inc
test
popf
mov
cmp
sub
repnz
push
stc
adc
fsubrs
ss
scas
pop
shl
roll
adc
aam
or
xchg
in
iret
fimull
cmp
das
or
xchg
adc
mov
and
cs
jle
arpl
dec
dec
mov
inc
out
cmc
xor
sub
inc
notb
popf
dec
test
imul
mov
out
imul
call
push
frstor
outsl
clc
loopne
aaa
and
adc
pop
pushaw
push
aas
jns
mov
stc
push
cltd
mov
nop
aas
add
lods
ljmp
mov
fisubrs
xor
aaa
aam
mov
das
pop
outsb
clc
inc
fwait
and
or
or
imul
sbbl
dec
lret
xchg
push
jecxz
imul
adc
mov
dec
adc
loope,pn
ret
push
adc
pusha
outsl
sbb
ljmp
mov
icebp
lock
jbe
or
stos
jno
fists
mov
cmpsb
jnp
out
mov
xor
adc
adc
add
sbb
or
loope
lea
push
jae
sbb
mov
out
add
cmp
addb
or
lret
cmp
js
cmp
add
add
jl
cli
push
adc
fisubrl
push
add
lret
sahf
push
jns
fwait
hlt
loop
ret
adc
rclb
fistl
push
les
mov
roll
xchg
dec
inc
and
jg
fnstenv
mov
or
cli
insl
mov
xchg
nop
fistpll
jns
cmp
push
pop
in
mov
cli
jne
and
lea
fimuls
jne
xchg
inc
add
or
jl
fbld
nop
mov
int
fs
sbb
enter
adc
outsl
cmpsl
repnz
mov
push
xchg
rcrl
shll
push
cld
mov
sahf
aad
aaa
inc
jmp
push
mov
movl
nop
icebp
xchg
in
inc
dec
aas
push
sub
aad
stos
adc
pop
cmp
jg
sbb
push
dec
inc
sub
xchg
lret
mov
pop
xchg
sbb
fsts
push
mov
or
mov
xchg
or
push
jo
testl
aaa
ss
sbb
adc
xchg
jb
pushf
adc
mov
xchg
loopne
mov
xor
mov
add
mov
cmp
xor
ds
cmp
addl
scas
imul
mov
dec
mov
cmp
add
push
or
jbe
sbbl
je
call
push
push
xchg
xor
test
sub
and
xchg
adc
sub
andl
sub
ret
outsl
or
pop
inc
xor
jae
cwtl
cs
aaa
mov
jecxz
xchg
or
cltd
mov
cmpsl
test
push
fistl
or
dec
cld
aas
dec
aas
add
stos
adc
icebp
mov
jnp
je
adc
cmpsb
les
dec
xor
dec
add
adc
pop
jecxz
inc
lock
pusha
dec
sbb
test
daa
xchg
fcmovnb
sahf
jb
pop
mull
cmp
lock
js
dec
sub
or
cs
jp
std
mov
dec
test
js
pop
movsl
add
mov
push
mov
cmp
stos
cmpsl
lahf
ja
fcmovb
or
sarl
xor
orl
ss
ljmp
mov
js
imul
ret
insl
popf
std
mov
inc
fstps
push
fnsave
jmp
or
xor
or
xchg
mov
sahf
test
iret
cmp
clc
rcl
stos
add
loope
scas
ficoml
test
cmpl
es
push
ret
psllq
enter
pop
iret
adc
stos
inc
sbb
dec
xchg
push
xor
cwtl
sub
iret
or
lcall
mov
loopne
push
pop
popa
add
mov
bound
shlb
pop
jo
push
inc
adc
ret
popf
dec
pop
dec
jp
pop
push
ss
sub
cltd
in
xchg
dec
out
fucom
or
mov
inc
push
pop
add
jp
loop
out
stos
push
fwait
imul
lcall
insl
cmp
inc
daa
lret
inc
ret
test
repnz
mov
test
cmp
bound
jne
nop
sarb
ficompl
jbe
push
dec
inc
ja
adc
xor
insb
fiaddl
sub
test
sbb
xor
lock
sbb
call
sbb
push
pop
mov
sahf
repz
cmp
inc
les
or
add
jb
jg
popf
mov
imul
sbbl
iret
push
dec
pop
dec
dec
in
mov
xchg
mov
sub
add
pop
cmpsl
xor
adc
arpl
push
je
nop
cmpsb
add
outsb
ret
cmpsl
arpl
js
mov
sti
mov
aas
out
cmp
sahf
pop
push
sbb
mov
sbb
dec
imul
adc
ja
loopne
lds
pop
and
cmp
rclb
jl
lret
repz
or
and
mov
cmp
and
popf
and
cmp
popf
dec
add
push
sub
mov
test
or
sbb
jnp
pop
mov
js
movswl
mov
jne
lret
je
orl
pop
pop
sbb
sub
mov
rolb
data16
push
jl
dec
inc
orl
xchg
dec
cmc
cli
loop
popf
jbe
bound
lahf
pop
jne
loopne
insb
lahf
mov
fcom
clc
aad
push
int
jg
mov
sbb
sub
or
test
lret
lcall
inc
loopne
nop
pop
mov
jecxz
lods
pop
or
pop
in
adcl
mov
push
pop
daa
icebp
das
sti
push
jns
test
in
and
sub
add
or
and
add
cmp
dec
arpl
or
aad
fxch
xor
pop
jmp
cmpsb
and
push
mov
roll
jle
aas
inc
push
pop
aas
push
cmp
das
cmp
rcrl
test
lret
iret
pop
cmp
jg
and
rorl
es
push
inc
add
repnz
test
pop
add
adcb
pop
add
daa
inc
mov
adc
mov
jecxz
push
jmp
fadds
ret
mov
fwait
loopne
xor
pop
fincstp
movsl
incl
fldl
push
inc
mov
jg
ja
lods
adc
mov
mov
mov
adc
arpl
hlt
daa
loope
jle
mov
stc
mov
pushf
into
add
test
dec
xorb
mov
loop
out
out
mov
add
inc
mov
outsb
sub
ret
inc
push
jb
rol
xchg
into
dec
imul
adc
lds
jne
xorl
mov
xchg
into
push
push
pop
jl
or
test
adc
loope
dec
mov
dec
mov
sbbb
cmpsl
out
ficoms
movl
jge
xchg
push
int3
jle
out
push
adc
add
add
jecxz
jg
adc
dec
xchg
cmp
lret
ja
xchg
les
repz
push
xor
ret
push
js
dec
mov
sbbb
scas
jae
jge
ret
in
es
adc
inc
mov
and
xchg
mov
dec
inc
mov
aas
int3
call
fildl
flds
and
xor
mov
inc
loopne
cmp
daa
sbb
fstl
cmp
adc
inc
sbb
and
roll
mov
lods
mov
fcompl
popa
outsb
std
orb
and
or
mov
push
inc
pop
int
test
fiaddl
mov
stos
aaa
dec
push
cld
aam
clc
push
jne
icebp
in
add
mov
flds
dec
pop
ljmp
adc
xor
dec
in
repz
call
pop
sbb
xchg
xor
sbb
pop
and
push
jne
push
sahf
mov
lds
iret
nop
inc
dec
xlat
notb
push
rcr
dec
lret
sub
pop
pop
orl
das
test
call
or
outsb
sbb
jl
and
cmpsb
sahf
icebp
dec
xchg
pop
cwtl
inc
icebp
inc
imul
addr16
std
rcll
xor
enter
push
adc
negb
sub
and
adc
cltd
mov
mov
loope
cs
xchg
mull
sub
icebp
sbb
or
mov
xor
sub
fwait
mov
cmp
adc
push
sahf
pop
adc
out
dec
mov
das
js
sub
scas
mov
outsl
cld
cmc
addr16
xchg
mov
cmp
adc
movsb
pop
mov
and
pusha
stc
mov
or
mov
inc
stos
jo
pushf
adc
sbbb
mov
jne
pop
hlt
push
orl
xor
sbb
rorb
call
sbb
lods
xor
pop
pop
xchg
cltd
fsts
js
sahf
rcrl
xchg
adc
push
out
dec
sub
sahf
xor
shll
pop
xchg
mov
pop
mov
out
push
arpl
bound
addb
sbb
dec
mov
mov
les
jae
dec
xor
scas
mov
sub
mov
sub
stos
cmpsb
cmp
outsl
push
jmp
xor
or
ret
xor
inc
loop
loopne
xor
lods
sbbl
xor
push
xor
mov
mov
adc
or
push
mov
dec
imul
inc
pop
loope
fistpl
js
add
iret
mov
inc
add
popf
or
add
movsb
mov
add
pop
movsl
xor
push
add
jo
inc
lahf
pop
xor
inc
popf
jl
cmp
push
cli
adc
add
or
insb
add
mov
bound
xor
mov
shl
out
or
mov
sub
pop
int
sahf
dec
push
lock
out
mov
xchg
push
int
adc
nop
dec
je
insb
rcrb
xchg
jns
push
cmp
out
cmp
jmp
shlb
jp
sbb
cmpsb
or
subl
aam
loope
cmpsb
aaa
sbb
xchg
pop
test
addb
fimull
es
xchg
daa
stos
stc
shll
jmp
sub
fcmovbe
cltd
subl
icebp
push
push
lahf
push
les
adc
popa
cwtl
xchg
inc
das
mov
pop
daa
roll
fdivrl
xor
add
and
or
leavew
xchg
pop
pusha
mov
xor
xchg
int
and
push
cli
sub
dec
out
cmpsb
sbb
inc
lcall
test
push
inc
je
push
xlat
in
cmpsb
test
test
lea
mov
dec
sbb
jecxz
ret
jl
add
sub
add
fisubrl
rolb
or
mov
or
dec
xor
adc
mov
sahf
add
lods
inc
push
stc
xchg
sub
out
enter
inc
inc
movsl
xor
jne
in
icebp
ss
test
mov
insl
dec
dec
sbb
or
in
loopne
imul
jb
je
sti
cmp
and
push
add
fsubs
mov
jmp
pop
cmp
sub
negl
add
pop
es
jp
dec
and
cmp
orb
push
fnstsw
ficoms
out
es
jmp
scas
mov
inc
xor
xchg
cltd
stos
in
push
mov
jecxz
jae
lods
paddd
push
cwtl
and
arpl
adc
mov
test
push
inc
arpl
daa
div
sbb
cmp
popf
jno
ja
popa
and
scas
sub
push
pop
mov
xchg
out
inc
sbb
mov
mov
sub
shrl
lahf
shlb
jmp
jmp
cmp
adc
adcb
or
or
addl
rolb
jae
lcall
test
jecxz
adc
inc
movl
mov
add
add
gs
and
lods
into
add
adc
mov
dec
cltd
pop
or
xorb
push
insl
pop
and
int3
or
pavgw
inc
adcb
rcl
sahf
cmp
ljmp
sbb
cmp
out
push
imul
insl
sub
addb
push
hlt
sbb
stc
xchg
dec
icebp
ja
jl
pop
lods
push
cli
mov
repz
cmp
push
sbb
inc
or
push
loopne
inc
jge
imul
mov
jns
adc
dec
mov
push
or
cld
jl
js
mov
pop
dec
cmp
add
iret
hlt
mov
push
test
aaa
and
adcb
xchg
pushf
xor
jno
jo
inc
imul
cmp
push
adc
data16
jnp
clc
test
push
ret
jp
add
in
adc
nop
out
cmp
sub
mov
mov
add
cmp
inc
or
mov
lret
stc
inc
movsb
inc
xor
xlat
add
push
rcrb
add
pusha
test
cmp
into
out
ss
jae
push
pop
ret
sti
jnp
adc
punpcklbw
call
push
ss
out
and
sbb
lahf
lret
jae
mov
mov
test
outsl
ret
push
dec
inc
pushf
and
mov
adc
stos
clc
cmp
idivb
and
add
sarb
mov
push
jecxz
lcall
mov
mov
mov
into
add
inc
sbb
lcall
icebp
roll
fcoms
mov
pop
in
mov
xor
xchg
push
inc
mov
imul
inc
pop
lock
pop
sub
inc
xchg
mov
mov
mov
push
je
pushf
dec
sbb
adc
lods
and
or
jno
cltd
and
repz
ret
push
sub
cmp
jle
popf
cltd
test
dec
seto
mov
out
aaa
in
sbb
and
pop
loop
dec
jno
and
jne
aad
or
xchg
ret
test
xchg
push
popa
or
jl
ss
dec
mov
icebp
dec
add
dec
xor
ja
fmuls
push
and
into
pop
jg
lock
fldenv
and
xchg
xchg
ret
xchg
js
fstl
pop
stc
xchg
mov
mov
add
push
mov
adc
xor
es
scas
mov
sbb
mov
das
xchg
in
cmpsb
fstpt
cmpsb
cmp
adc
push
pop
ss
out
mov
lods
rcrb
rcrl
jle
test
xor
popa
sbb
pusha
orb
loopne
mov
push
mov
xor
mov
pusha
dec
decb
and
pop
and
xor
add
loop
xor
test
add
xchg
jp
scas
mov
outsb
or
or
inc
push
divl
xor
push
out
xlat
jae
pop
das
cmp
jp
movsl
dec
add
je
mov
das
add
dec
jmp
iret
es
dec
scas
add
mov
push
packsswb
imul
adc
pop
notl
das
lods
out
dec
stos
jno
cli
adc
gs
gs
dec
and
pop
mov
nop
mov
stc
jo
xlat
bound
ds
std
ss
mov
inc
add
sbb
push
mov
int
or
push
sub
loopne
sarl
fiaddl
inc
lahf
dec
mov
cs
dec
push
sahf
loopne,pt
je
xchg
pop
cltd
sub
xor
out
rcl
fadds
jnp
ja
mov
sub
inc
subb
scas
and
xor
mov
add
rcl
jl
scas
test
sar
inc
or
pop
mov
mov
jge
inc
pop
mov
rolb
jnp
sbbb
rorl
sbb
aad
sub
sub
cmpl
push
sbb
push
and
add
mov
mov
mov
test
adc
les
dec
ret
sarl
and
jns
and
lret
stos
push
sbb
cmp
pusha
sub
pop
sti
adc
mov
in
ja
xchg
loop
cmp
or
fldcw
stos
dec
cld
jp
or
arpl
ljmp
movsl
shlb
and
xchg
enter
cmp
inc
adc
mov
pop
loopne,pn
test
or
dec
and
jno
sub
imul
and
xchg
pop
ret
mov
ret
mov
push
test
jo
addr16
fistpll
icebp
sub
sbb
andb
mov
cmpsl
out
adc
jl
dec
cs
icebp
cmp
nop
sub
adc
cwtl
dec
lgs
jae
inc
daa
xlat
rcll
out
push
jmp
and
dec
mov
enter
scas
sbb
and
cmc
mov
mov
insl
orb
pop
sub
in
mov
dec
clc
fdivs
clc
cmpsl
test
add
jp
add
jle
je
xor
adc
mov
mov
std
or
mov
dec
in
mov
test
cmp
mov
lcall
lods
stos
arpl
scas
push
jmp
cld
lret
mov
shrl
out
xchg
mov
inc
mov
push
pop
arpl
test
xlat
ret
lahf
ret
fistpl
pop
or
xchg
sub
fldl
xchg
jp
rolb
dec
mov
inc
or
jb
mov
inc
pushf
mov
jnp
inc
xchg
mov
pop
inc
cli
cltd
jb
scas
insl
jo
pusha
loope
repnz
dec
add
dec
jno
lea
cmpsl
rorl
sarb
mov
inc
flds
push
stos
scas
int3
mov
subb
mov
cli
adc
mov
dec
jp
jne
and
cltd
and
mov
fs
push
loopne
lods
in
or
sub
or
ret
data16
dec
outsb
sub
mov
mov
add
jp
jbe
add
int3
mov
adc
call
xchg
mov
add
cmp
hlt
mov
inc
dec
repz
add
imul
das
cmp
sbbl
push
mov
mov
clc
xor
cmc
pop
xorl
gs
test
aam
mov
popa
mov
sbb
loope
test
xor
rolb
and
pop
flds
iret
pop
daa
inc
mov
icebp
rorb
xchg
push
or
mov
jmp
xchg
jo
add
mov
leave
mov
lahf
and
in
rcll
clc
mov
mov
xor
and
int
out
inc
call
mov
lods
mov
fdivrl
push
pop
hlt
in
push
mov
hlt
ret
mov
mov
add
or
mov
or
or
cli
insl
mov
ja
mov
lahf
add
adc
adc
pop
cs
cmp
ss
sahf
mov
aaa
jge
jle
scas
xor
mov
ss
ds
cld
incl
icebp
xchg
fdiv
jecxz
inc
mov
clc
mov
mov
mov
or
jl
rorb
xor
mov
adc
clc
jp
test
ja
enter
pop
lea
std
addr16
rolb
adc
mov
outsb
stos
scas
pop
xchg
sbb
jge
dec
loopne
not
xor
add
clc
xor
jae
push
cmpsb
mov
mov
mov
lcall
popa
inc
push
cmp
mov
add
or
cs
lahf
pop
lock
jne
pop
in
xor
enter
or
aad
in
dec
loopne
push
push
in
or
hlt
jmp
cmp
divl
add
shlb
xlat
dec
pop
dec
iret
icebp
mov
lahf
pop
mov
or
iret
ljmp
cld
pandn
sbb
repnz
les
int
inc
mov
or
ret
sbb
imul
aas
test
push
mov
mov
inc
js
mov
popf
mov
pop
push
pop
cmp
adc
andps
ret
addr16
pop
test
arpl
loopne
add
lret
scas
push
pop
mov
dec
inc
and
add
pop
sbb
xchg
shlb
mov
loopne
test
mov
sub
sub
jge
mov
pop
or
loop
xchg
mov
or
loopne
push
mov
ljmp
dec
cmp
adc
mov
dec
lcall
inc
jmp
js
ja
mov
xchg
shrb
push
jle
xor
sbb
test
lret
out
mov
push
and
jo
and
scas
sbb
pop
fs
loope
enter
sbb
icebp
roll
cld
lods
jmp
jg
xchg
cmpsl
sub
and
dec
scas
repnz
loope
add
scas
inc
sbb
aam
jae
mov
das
fwait
rcll
fidivs
adc
dec
mov
jb
xor
fldenv
adc
scas
xchg
mov
and
inc
xchg
stos
mov
sbb
inc
mov
cs
lods
pusha
push
sbb
mov
mov
mov
add
jno
lds
imul
xlat
dec
jge
sbb
nop
add
and
sarb
mov
loope
ljmp
push
adc
negl
pop
or
das
popa
adc
mov
sahf
cmp
xchg
loope
shrl
sub
adc
jl
mov
mov
mov
or
rcl
xlat
push
xchg
pop
add
test
mov
pop
or
xor
and
sbb
rolb
ss
scas
add
add
hlt
xchg
mov
xchg
and
call
mov
out
test
and
mov
cmp
dec
jb
and
adc
icebp
adc
push
arpl
icebp
adcb
mov
add
fimull
add
cmp
sahf
add
jo
jp
inc
outsb
sbb
mov
lock
push
push
cmc
rorb
xor
repnz
pop
sbb
cmpsb
out
add
cmpsb
ret
jl
fmull
adc
aad
xor
data16
shr
and
push
lock
pop
xor
push
addr16
in
repz
dec
mov
push
sbb
enter
push
gs
ljmp
or
loopne
adc
xchg
jno
lock
lret
popf
dec
or
call
fldenv
bound
add
sub
ret
mov
push
shll
mov
push
sub
movsb
call
add
idivl
or
push
and
and
and
scas
ljmp
fldt
cltd
aaa
ret
jl
je
add
cli
incl
mov
out
btr
icebp
sbb
iret
add
push
push
cmp
push
mov
pop
add
jbe
xchg
bound
rcrb
mov
dec
xchg
repz
lea
jecxz
add
and
jno
cli
or
movsb
leave
jbe
inc
jg
daa
loop
lea
pop
insl
push
xchg
orb
mov
mov
push
jge
push
sub
and
loopne
jmp
mov
sbb
adc
fisttpl
lret
stc
xor
jne
jnp
and
mov
mov
or
call
xchg
fstpl
dec
fnstsw
mov
push
mov
fsubs
mov
roll
push
clc
xor
inc
sahf
or
cmp
imul
push
push
fs
jno
imul
fimull
and
fidivrl
add
out
fcmovu
addr16
cmpsb
arpl
dec
dec
mov
mov
inc
pusha
fst
out
jle
scas
pmaddwd
std
es
hlt
mov
jecxz
popa
testb
cmp
mov
inc
or
mov
sahf
aaa
adc
fidivrs
jmp
sbb
add
aas
jno
ss
add
push
nop
dec
int3
pop
pop
jecxz
push
ljmp
call
cmpsb
push
outsl
push
pop
fwait
scas
sti
inc
into
call
out
pop
sub
mov
inc
cltd
cmp
pop
into
out
inc
mov
cmp
js
mov
inc
xchg
js
out
xor
outsb
cwtl
aam
cltd
or
mov
adc
enter
nopl
outsb
lcall
jle
xchg
scas
mov
push
inc
xor
out
jns
sar
lea
stos
jno
pushf
fisttpl
mov
and
sub
shlb
mov
scas
push
fildl
mov
mov
lods
mov
sbb
cmp
xor
popa
and
incl
sbb
mov
sub
pop
pop
xorb
dec
lods
mov
ficoml
push
gs
in
stos
lret
popf
in
xlat
mov
outsl
pop
nop
add
push
fldcw
daa
sbb
outsl
push
push
mov
repz
or
movsl
inc
stos
orl
out
push
sub
loope
xchg
lret
and
pop
push
shll
in
shlb
roll
clc
inc
aaa
xor
adc
fcmovb
inc
in
ret
sbb
nop
dec
mulb
add
mov
mov
loop
push
gs
sub
mov
jle
sub
xlat
sub
lds
add
or
or
cmp
fs
scas
je
and
jnp
dec
or
ret
or
jp
mov
js
test
dec
jp
inc
jno
adc
dec
das
into
popf
add
in
pop
jge
mov
sbbb
add
out
inc
roll
lret
test
pusha
pop
mov
ds
dec
or
cwtl
mov
push
repnz
dec
inc
and
pop
pop
or
cmp
js
out
mov
jne,pn
sarl
push
pushf
pop
lcall
fs
xchg
psllw
push
subb
sbb
inc
xor
test
leave
js
adc
cltd
push
shlb
inc
mov
movsl
fidivl
jno
test
xor
fsubp
or
stos
out
popaw
shlb
arpl
lds
scas
adc
ds
dec
gs
jmp
mov
loop
gs
loop
orb
rorl
pop
sbb
cmpsb
call
stos
movsl
js
mov
ljmp
add
nop
call
mov
loope
adc
mov
or
setl
mov
mov
aas
test
fiaddl
rol
push
push
sbb
rclb
dec
and
push
insb
cmc
adc
mov
lds
push
mov
xor
push
or
add
cs
lret
test
sbb
or
dec
hlt
jecxz
pusha
int3
mov
push
add
vxorps
xchg
sbb
cwtl
mov
sub
mov
movl
mov
sub
ret
fwait
jno
in
add
xchg
lock
xlat
dec
jno
mov
shll
mov
jo
mov
daa
in
lret
add
imul
push
sbb
movsl
mov
mov
cmp
nop
inc
sbb
lret
inc
cmp
aas
mov
bound
js
lds
shll
and
add
stos
xchg
xlat
outsl
push
scas
sbb
dec
repnz
or
jl
pop
insb
sub
cli
dec
or
push
cmc
add
mov
mov
xor
das
inc
jecxz
jno
in
xlat
push
aam
lcall
bswap
cmp
jp
cmp
pop
daa
ss
xchg
lcall
cmpsb
and
lahf
lea
pop
dec
rclb
mov
push
addr16
movsb
loope
or
add
mov
cmp
sub
dec
out
outsl
cmc
xor
push
mov
dec
adc
dec
mov
mov
ds
xchg
jne
lds
jp
or
xor
xchg
fwait
push
cmpsl
cwtl
mov
js
mov
fwait
lock
mov
adc
mov
xchg
fistpll
outsb
jmp
xorb
adc
xor
cwtl
lods
in
imul
loope
jnp
and
les
or
loop
loopne
test
jl
xchg
int3
test
mov
push
dec
pusha
pop
pop
xor
and
inc
push
js
rcr
push
adc
test
cmpl
xlat
outsl
scas
dec
pop
push
hlt
cmpsl
sbb
bound
or
pop
icebp
add
and
jno
int
push
dec
icebp
ret
ds
and
push
sarl
push
add
inc
pop
lods
cmp
fsubr
inc
pop
lea
mov
lods
mov
push
orb
popl
mov
mov
jno
or
mov
mov
es
pop
cwtl
dec
fistps
lods
insb
pop
or
cwtl
inc
loope
in
or
inc
push
sub
inc
sub
scas
test
inc
addb
add
hlt
inc
bound
jmp
adc
dec
pop
pop
jne
nop
test
or
mov
dec
jae
dec
inc
loopne
icebp
test
fists
aam
mov
call
mov
pop
and
cmpsb
cltd
inc
mov
and
aas
in
fwait
nop
jmp
data16
bound
add
pop
cltd
cmp
add
sbb
ret
lds
jae
stc
in
and
in
inc
cli
lods
mov
das
in
daa
decb
add
test
adc
mov
xchg
jp
cmp
inc
imul
sub
in
or
push
push
xor
cli
push
mov
rorl
push
in
jl
and
sub
push
mov
into
insl
repz
mov
xchg
js
sbb
xchg
mov
pushf
adc
and
cltd
lret
imul
aaa
and
test
cli
leave
pop
adc
adc
notl
xor
cmc
mov
cwtl
xor
call
out
pop
nop
out
mov
js
mov
subb
dec
stos
rcrl
clc
xor
incl
movsl
mov
sti
stc
lds
mov
adc
shrl
lahf
imul
mov
lock
xor
adc
mov
arpl
lds
test
inc
cmp
lret
daa
and
insb
push
fwait
or
cmc
sub
lds
lods
cmovo
test
aaa
call
cmp
adc
pop
test
jecxz
mov
fmul
inc
daa
std
xchg
mov
jg
adc
out
jl
out
cs
adc
scas
push
je
std
aaa
xor
jbe
adc
pop
aas
loope
cmpsb
sub
call
adc
and
lock
jmp
loop
ja
mov
mov
pop
push
seto
in
inc
xor
popf
xchg
ljmp
bound
rcll
add
xor
mov
negl
call
fists
inc
mov
mov
ljmp
cld
dec
mov
xchg
and
dec
and
out
scas
push
or
cmp
sub
iret
inc
outsb
out
or
adc
clc
imul
xchg
mov
fiadds
cmpsl
outsl
inc
push
jle
data16
loopne
sub
push
inc
in
neg
inc
out
mov
dec
dec
or
testl
stos
enter
stc
lds
test
pusha
stos
mov
pop
xchg
mov
les
jge
addr16
outsl
mov
add
xchg
jg
xor
cmp
jp
pop
add
xlat
idivb
sbb
in
dec
or
rcrl
push
push
jnp
repz
divl
add
popf
inc
fs
pop
test
cmpsl
push
dec
push
lock
loope
xchg
add
xorl
adc
pop
shlb
dec
stos
dec
cmpsl
or
sbbb
subl
stos
aam
popf
pop
test
or
cmpsb
dec
xchg
scas
loop
push
clc
add
aam
imul
outsb
test
push
xor
dec
lods
fadds
mov
repnz
mov
and
pop
mov
sbb
shrl
sub
push
dec
in
sub
stc
in
jecxz
ret
mov
push
sbb
lods
mov
out
jg
jo
pop
mov
lods
xor
rclb
pop
testl
scas
push
aas
inc
cwtl
adc
rolb
xor
push
cs
test
ljmp
jl
les
out
loop
sub
jecxz
nop
push
xchg
fwait
cli
mov
js
je
mov
mov
movl
mulb
mov
jmp
dec
push
or
cmp
fmuls
scas
test
pop
lods
push
mov
mov
lock
xchg
sti
ficoml
jno
mov
movsl
sahf
pop
daa
stc
add
stos
add
xchg
subl
mov
adc
cltd
arpl
add
inc
and
inc
aam
push
sbb
add
mov
pop
ds
push
scas
nop
ds
fwait
inc
pop
into
fmulp
pop
xchg
push
lock
shll
cli
lret
xlat
movsb
loope
and
mov
or
lret
nop
sarb
inc
mov
sahf
movsl
mov
js
ret
mov
je
popa
adc
push
fiaddl
mov
add
ljmp
inc
push
lds
shll
mov
push
xor
mov
clc
or
lea
andl
pop
xchg
lods
xchg
push
std
sbb
cmp
test
pop
sub
popa
lahf
or
pop
and
pop
push
pop
mov
cmp
dec
test
push
inc
xor
repnz
xor
andb
inc
dec
cwtl
stos
mov
shl
lret
cli
push
dec
lods
insl
rcl
aas
add
aaa
xor
push
insl
arpl
fcmovb
cmp
mov
push
mov
dec
jo,pn
or
add
and
nop
pop
adc
push
and
dec
push
pusha
enter
cmpsl
xor
iret
sbb
mov
rcrb
in
popf
pushf
jge
push
inc
stc
in
and
fsubp
mov
mov
and
xchg
push
mov
mov
into
ret
push
loopne
testb
out
ds
out
clc
or
sti
adc
or
out
mov
push
inc
loop
and
movsb
stos
test
stos
mov
push
pop
jecxz
xchg
adc
fcompl
sub
lock
mov
mov
das
insb
lock
adc
and
rcrb
or
and
cmpxchg
out
cmovb
hlt
adc
ds
aaa
sbb
pop
sahf
cmc
shl
je
xchg
add
sarb
jo
or
pop
es
cmp
or
inc
ret
scas
ret
roll
fst
pop
and
mov
cmp
add
imul
push
cli
in
push
xchg
or
shrl
mov
push
xchg
shrb
iret
inc
or
push
and
bound
xchg
pop
or
mov
and
call
inc
xchg
in
cmp
mov
pop
sub
shrb
popl
push
mov
fistl
movsb
dec
jp
lock
jo
pop
push
insb
add
test
and
int3
outsb
cmpsb
arpl
push
inc
lahf
mov
popl
jne
push
aas
adc
jno
cmp
xchg
cmp
movsl
movsb
out
lods
add
push
aam
mov
sarl
jecxz
adc
mov
nop
jl
jno
mov
inc
mov
xchg
lock
mov
cmp
sub
add
or
icebp
test
add
and
ret
inc
jns
mov
aad
push
outsb
mov
jns
adc
mov
mov
xlat
pop
icebp
mov
lock
add
and
jbe
pop
ljmp
das
cmp
mov
jo
jne
pop
dec
shlb
fists
js
ja
mov
jb
xchg
jo
cmp
sbb
push
dec
ljmp
dec
fwait
xchg
aaa
xchg
push
jmp
pop
and
push
inc
fs
mov
pop
out
add
hlt
push
or
sub
jae
pop
icebp
jae
and
xchg
jecxz
sub
push
push
jge
and
fsubr
add
push
inc
test
sub
push
popf
pop
cmp
xchg
push
jl
test
mov
inc
lods
inc
cltd
jp
jae
lea
subl
push
mov
nop
dec
pushf
and
add
xchg
test
scas
aam
xor
and
sub
jb
mov
fnstcw
push
mov
jno
inc
inc
sbb
jno
mov
dec
lods
je
push
adc
out
cmc
sbb
fisttpl
or
push
sub
imul
jl
sbb
jle
add
inc
decb
mov
faddl
jge
adc
mov
inc
mov
out
cmp
sub
xor
lds
ret
push
loope
mov
incb
js
mov
xor
sahf
mov
jle
inc
sub
int3
push
test
push
jmp
pop
cmp
adc
dec
add
sub
aas
cmpsb
xor
push
sbbb
mov
mov
mov
bound
jne
lret
clc
dec
mov
inc
adc
push
dec
rolb
mov
stos
adc
xor
jecxz
cmp
cmp
jl
mov
es
loopne
mov
sbb
mov
cmpsb
in
mov
push
fcmovne
push
pop
xor
enter
ss
rolb
popa
and
xor
add
leave
mov
sahf
sahf
stos
jl
cltd
rclb
inc
sub
mov
mov
mov
or
push
fwait
nop
out
aam
adc
aam
sbb
scas
push
out
jo
xor
inc
data16
in
jge
push
icebp
xor
adc
inc
or
leave
cmpsl
icebp
sbb
jmp
push
repnz
sbb
or
shrb
icebp
sbb
or
or
sbb
cmp
jo
inc
pop
inc
in
add
clc
jne
push
mov
xor
sub
stos
push
imul
sbb
jecxz
loope
out
loopne
fldl
shl
bound
lock
push
jae
push
push
mov
cmp
push
adc
loope
test
xor
call
push
out
mov
mov
dec
ret
popa
sti
shrl
push
adc
pop
lock
addr16
xchg
or
jle
fsubs
push
js
push
loop
sub
test
dec
addb
pop
rorb
movsb
sub
jns
lcall
mov
fdivl
pop
or
mov
cmp
int3
fwait
pop
pop
dec
xor
std
inc
add
loope
xchg
dec
out
mov
notb
and
int
cmp
cmc
inc
popf
or
adc
xchg
mov
inc
adc
mov
adc
mov
add
add
mov
jno
jl
cmpsb
mov
pop
add
sub
xchg
lock
pop
ja
pop
aas
fadds
sub
inc
mov
xor
flds
lahf
in
jmp
xor
ljmp
and
sub
pop
lock
ds
in
cmp
push
rdtsc
lea
push
and
adc
imul
dec
dec
and
mov
inc
or
outsl
sub
test
clc
xchg
sub
cwtl
rcrb
sub
dec
loopne
xchg
jp
ljmp
jae
mov
jo
mov
sbb
push
cmp
add
pop
xchg
imulb
fnstcw
rorb
pop
stos
jne
xchg
sbb
scas
push
mov
fmuls
mov
push
or
cmp
jle
fs
xor
push
add
cmp
stos
es
icebp
mov
orb
and
mov
xlat
out
cld
jae
inc
inc
sbb
or
sub
jmp
andb
lods
pop
or
test
enter
push
jmp
testb
pushf
stos
or
add
ss
dec
and
xor
inc
xchg
inc
jnp
rcrb
es
adc
into
test
es
adc
pop
cmp
stos
cmpsb
loopne
popa
xchg
aam
mov
les
sbb
icebp
adc
add
ja
and
jbe
cmpsb
pop
mov
cltd
es
sub
movsl
adc
stos
arpl
es
mov
stos
in
adc
stc
jle
fistpll
jg
in
stc
jmp
dec
icebp
inc
cmp
add
aam
mov
int
pop
loope
cmp
or
dec
cmp
add
cmp
cmpsl
mov
adc
scas
lahf
mov
cmc
mov
lock
shr
or
xchg
lock
addr16
int
sahf
popa
sub
aad
das
ficoml
femms
fldt
inc
xchg
pop
or
rol
cwtl
pusha
cmpsl
sbb
enter
mov
clc
sbbl
mov
add
inc
pop
mov
pop
adc
mov
in
pop
mov
sub
loop
movsl
mov
je
jg
stc
div
push
repnz
add
push
dec
mov
push
lahf
into
adc
dec
scas
repnz
push
mov
sub
sbb
push
out
sub
mov
gs
out
mov
adc
les
push
mov
push
aas
dec
insl
adc
ss
mov
jge
or
ret
jl
subb
inc
mov
mov
sub
pop
jae
mov
push
loope
notl
lcall
xor
sub
movsl
lret
lcall
stc
sub
mov
adc
xchg
cmpsb
and
push
ljmp
add
jl
stos
push
scas
sub
adc
mov
cld
cli
sub
out
lea
pop
xor
stc
sti
inc
and
cli
mov
loopne
mov
sub
jecxz
mov
add
and
jns
fs
xor
inc
xchg
cs
inc
fwait
push
sub
push
cmpb
ja
loope
andb
dec
es
push
mov
cltd
loope
adc
rcr
sahf
imul
iret
push
dec
or
adc
ljmp
sahf
and
mov
sbb
in
mov
xor
push
mov
inc
lea
xor
cli
mov
pop
cmp
es
ss
fsts
cli
sar
and
lret
sbbl
into
sbbl
lock
icebp
iret
push
jmp
pop
subl
push
or
xor
push
pop
sbb
sbb
jle
arpl
repz
push
sbb
jl
add
add
jne
or
mov
imul
xor
xor
outsl
xchg
mov
gs
sub
adc
lods
mov
cmp
xchg
lds
and
cmpps
cmp
mov
hlt
aam
adc
cmp
test
dec
mov
hlt
jb
lret
pop
mov
dec
mov
inc
inc
sbb
dec
cmp
call
int
mov
jl
popa
sar
les
dec
stos
sbbl
pop
nop
add
mov
testb
push
or
out
call
add
movl
popa
pushf
pop
dec
roll
or
dec
sbb
je
bound
stc
sub
shll
inc
call
std
inc
ds
push
jmp
bound
lea
cmp
jmp
or
xor
lret
lds
push
shr
hlt
test
mov
imul
add
cmpsb
pop
orl
icebp
cmp
ljmp
sbb
loopne
out
imul
mov
push
rcl
out
jl
sarl
iret
gs
cmpb
sbb
rorb
lods
ss
cli
ret
lahf
xor
popf
les
xchg
push
cmp
or
mov
mov
adc
sbb
cltd
test
mov
orl
and
lcall
mov
clc
popf
fisttps
xchg
jnp
js
sub
add
and
xlat
dec
cwtl
mov
dec
iret
adc
inc
adc
mov
jne
mov
adc
insl
mov
sahf
lcall
push
jns
pop
loope
rorl
mov
les
or
add
sahf
scas
jne
xor
adc
or
push
cltd
icebp
out
mov
stc
sbb
or
push
push
push
add
push
sub
and
push
add
push
stc
fdivl
push
xchg
mov
popa
add
mov
mov
inc
mov
xor
xchg
repz
mov
call
xor
jae
push
pop
pop
and
jecxz
repnz
fldt
stc
jp
pop
sahf
loop
mov
shll
xchg
es
insb
rcl
cmc
sub
shrb
shlb
xor
pop
xor
inc
jne
inc
lret
shll
sbb
ds
mov
push
loope
testb
push
mov
push
adc
xchg
insl
adc
cmp
lret
ss
call
mov
inc
and
adc
mov
mov
pop
and
and
nop
xor
sub
int3
sub
sbb
xchg
loopne
sbb
in
mov
test
mov
adc
fdivl
iret
in
aaa
js
mov
inc
in
and
ret
inc
insb
mov
in
clc
sbb
mov
sbb
and
jecxz
mov
adc
xor
inc
icebp
nop
fs
cltd
mov
pushaw
adc
out
jl
or
insb
roll
ror
push
dec
imul
push
push
xchg
push
in
shl
or
mov
in
enter
pushl
jns
sub
ds
mov
xchg
shrw
sbb
stos
scas
jnp
pop
dec
pop
or
shl
mov
cmp
mov
pop
or
cld
mov
push
sbb
jne
popa
out
push
mov
movsb
pop
cli
mov
push
inc
cld
lock
idiv
sbbb
add
fcomi
dec
daa
add
xor
mov
mov
pop
fcmovnbe
xchg
in
and
out
shrl
outsl
add
jb
and
pop
sub
and
push
pop
jecxz
jns
cmp
mov
mov
dec
rorb
sub
xor
add
daa
add
cmp
and
pop
mov
jge
ror
add
incl
cs
or
push
fiaddl
pop
cs
and
and
stos
cli
mov
or
test
ljmp
in
movsl
adc
lahf
add
xchg
add
jmp
pop
inc
loop
leave
in
push
add
pop
shrb
and
push
mov
or
sbb
push
add
les
jno
cmp
or
mov
notl
pop
sbb
jb
pop
cmp
in
dec
daa
aam
and
cli
loopne
or
je
xchg
lahf
push
inc
pop
mov
icebp
and
mov
and
lcall
mov
jno
adc
mov
cmp
lock
insb
mov
mov
sub
or
mov
jne
adc
mov
pusha
sbb
les
inc
es
or
rcrl
and
lock
cmp
cld
adc
sub
loope
iret
cmp
mov
into
or
sub
mov
nop
pop
in
or
lcall
cmp
das
popa
popa
jge
aam
movsb
xchg
daa
ret
out
lcall
aam
pop
fs
xchg
mov
imul
addr16
test
lods
pshufw
cwtl
and
fdiv
or
aam
pop
fucomip
add
sub
sbb
mov
adc
mov
jo
cs
push
lea
popf
cmp
dec
add
les
cmp
inc
ret
dec
mov
mov
adc
push
dec
inc
jge
cmp
cmc
inc
imul
jmp
mov
sbb
orl
adc
push
hlt
or
sbb
pushw
icebp
mov
in
adc
sahf
mov
inc
cmpsb
mov
andl
jmp
xlat
sbb
pushf
sbb
stos
xor
insb
xor
test
mov
xor
and
cmp
dec
dec
test
les
pop
js
ds
test
add
rclb
dec
clc
sbb
adc
push
add
aam
jle
xchg
cmp
xchg
mov
push
andl
cli
jp
cld
cmp
pusha
out
lock
or
ss
xchg
rcll
into
movsb
movaps
sbb
test
cmpsb
pop
clc
sbb
dec
out
loop
aas
je
test
sub
pop
mov
jle
jmp
fiaddl
lahf
in
dec
insl
jg
fadds
in
inc
cmpsb
xchg
jb
adc
mov
sub
shll
add
mov
ja
jae
mov
addb
inc
sbb
or
addb
push
xchg
stos
popa
fucomi
clc
adc
inc
fcoml
aas
jo
mov
sbb
push
sub
jecxz
mov
cmp
mov
ss
add
fsubs
and
in
inc
outsl
xchg
xor
push
addb
mov
loope
jo
or
mov
adc
jbe
pop
stos
mov
jb
or
pop
mov
and
or
repnz
cmpsb
das
cmp
mov
dec
and
test
pop
xor
scas
orl
sbb
loope
in
mov
sub
inc
add
insb
sub
mov
daa
jecxz
mov
mov
pop
jmp
test
rorl
push
add
or
mov
cmp
dec
add
mov
push
add
add
les
and
repz
mov
in
inc
push
mov
or
fisubrl
dec
sti
and
ds
and
or
inc
jg
clc
and
outsl
jmp
sbb
jnp
push
inc
out
cmc
mov
adcl
mov
std
rcrb
inc
inc
sub
clc
lods
sub
ja
add
mov
js
push
or
hlt
xchg
scas
mov
lods
fwait
dec
out
xchg
ds
movsb
fxch
xchg
sbb
push
lahf
jl
and
cmpsl
aam
mov
aam
int3
or
sub
dec
rcll
add
lods
pop
pushf
pop
loop
test
sub
ret
inc
lahf
clc
les
lds
fstpl
jne
pop
pop
in
loopne
les
cmp
sbb
cmc
into
test
or
sbb
pop
dec
cwtl
mov
dec
inc
push
lods
movsl
shl
shlb
lods
add
lret
and
dec
mov
pop
lods
inc
push
ds
cmp
dec
jnp
std
out
fsubl
add
je
lcall
or
mov
rcl
test
shr
mov
movsl
clc
cwtl
jmp
add
lds
sub
adc
aam
jae
push
mov
jo
sub
out
outsb
add
adc
imul
dec
shr
data16
mov
iret
xlat
icebp
scas
mov
or
addr16
push
add
scas
mov
out
stos
adc
cmpsl
sti
movb
xor
sub
stc
pop
aas
cli
jo
cltd
cmp
call
or
or
jl
es
push
mov
jl
adc
fistpl
insl
and
lret
or
xor
sbb
icebp
or
adc
mov
inc
push
mov
inc
mov
inc
gs
je
xor
in
lods
cmpsb
jle
arpl
insb
add
xor
dec
or
imul
xchg
in
ret
mov
les
dec
add
stc
xchg
fdivl
mov
es
cmpsb
adc
out
pop
xchg
in
add
inc
inc
mov
adc
push
xor
jmp
add
cmp
fstpl
add
into
int3
inc
xchg
scas
ljmp
ret
adc
mov
inc
subb
mov
add
jecxz
and
idiv
jle
adc
or
call
inc
cmpsl
jg
dec
pop
enter
inc
jbe
push
dec
push
fs
mov
mov
jl
xor
out
mov
je
sub
in
decb
cmp
mov
sub
mov
js
fcomps
pop
call
xor
sub
rorl
or
lahf
add
add
lahf
sar
and
scas
mov
push
je
dec
jp
sbb
rclb
test
andl
test
ret
test
mov
inc
push
mov
or
ja
adc
lret
test
bt
cmp
jle
add
jo
or
out
xor
aaa
sbb
icebp
xchg
jecxz
mov
hlt
inc
jae
add
into
andb
pop
mov
lret
xchg
icebp
or
pop
sbb
xchg
lock
push
jecxz
aam
mov
jle
cltd
filds
shlb
mov
mov
mov
ret
inc
and
mov
jo
movsl
mov
xor
rcr
dec
fimull
xchg
pop
and
mov
das
loopne
push
fwait
push
mov
adcb
and
and
pushf
pusha
lods
and
arpl
popa
out
cli
enter
lods
movsl
lea
cmp
rol
pop
adc
aas
xor
xor
pop
gs
sbb
mov
aaa
xor
les
scas
pop
mov
cwtl
movsb
mov
cli
dec
in
sbb
jmp
adc
xchg
data16
mov
call
mov
clc
xchg
stc
stos
out
add
pop
hlt
or
js
jle
sbb
xchg
adc
pushf
cwtl
and
sbb
mov
pop
xchg
mov
flds
sbb
jo
ds
push
sbb
pop
dec
mov
or
jl
pop
xchg
xchg
add
dec
pop
addl
mov
insb
cmpsb
leave
push
adc
dec
mov
lds
dec
pop
je
clc
jp
jb
sbb
call
or
pop
jl
dec
fadds
mov
aaa
stc
jns
pop
mov
adc
mov
bound
dec
mov
cmc
lods
cmp
pop
out
lods
imul
sbb
sub
push
mov
popa
jecxz
ja
xlat
dec
jge
data16
mov
jmp
rolb
andb
cmp
dec
out
xor
fwait
lret
cli
pop
lods
jp
adc
adc
pop
adc
push
fwait
cmp
les
sub
stos
repz
sub
mov
sarb
icebp
push
dec
in
pusha
mull
xor
pop
popf
negb
xchg
mov
and
ss
inc
in
ret
aas
push
sti
pop
nop
pop
arpl
sti
sbb
imul
cmpsb
cld
test
shll
cmp
jge
push
subb
pusha
bound
movl
add
and
mov
mov
xchg
lods
es
das
int
adc
xchg
add
cltd
loopne
xor
stos
int
fistpl
das
dec
iret
rclb
rcll
call
adc
sbb
cmp
jae
aaa
jmp
mov
aam
mov
xchg
inc
sbb
repz
scas
inc
mov
bound
jno
push
cld
sub
out
adc
adc
fcomps
adc
and
outsb
ss
daa
adc
mov
cwtl
shrl
test
fs
es
mov
mov
mov
pop
cmpsb
pushf
pop
test
andb
jo
jp
xchg
inc
xor
sub
cmpsb
jge
mov
repnz
jg
ds
xor
dec
sarl
jle
add
test
jmp
mov
pop
add
loope
cmp
arpl
jge
cli
mov
xor
xlat
mov
mov
pusha
xor
ret
push
jb
xchg
mov
jmp
aaa
fisttps
mov
hlt
sub
push
lret
mov
mov
cmc
add
xor
sub
nop
dec
imul
push
fwait
hlt
pushf
iret
cs
sub
or
iret
insl
std
imul
inc
cmpsb
adc
or
push
fistpl
ljmp
into
outsl
cwtl
in
pusha
cmp
mov
push
sub
stos
mov
aaa
bound
dec
shrl
cmp
or
xchg
xchg
mov
adc
sbb
and
jns
jne
rcl
pop
fcmovnbe
cmp
jo
and
cmpsb
shr
std
push
mov
sub
mov
aad
scas
cmp
xchg
or
sub
jle
aam
and
jmp
xor
push
test
sub
jns
or
rolb
test
clc
push
cltd
cmpsb
xchg
push
sub
hlt
inc
sub
jp
adc
loopne
add
shrl
lock
ret
addl
xchg
sbb
cwtl
mov
sbb
outsb
cmp
xchg
mov
test
push
mov
outsb
cli
mov
xchg
and
sbb
pop
les
enter
rcrl
cmp
xchg
rorb
lea
aas
cmpsb
addl
add
xor
rcl
dec
push
xorb
out
xor
and
or
dec
cli
mov
aaa
xor
push
jmp
pop
in
mov
mov
fbstp
scas
jl
and
fcoml
dec
jae
inc
sub
enter
xchg
insl
neg
sub
loope
adc
xchg
ficompl
call
inc
add
mov
outsl
popa
movsb
call
add
daa
xor
inc
xchg
adc
pop
sub
cmc
orl
lret
rcrl
and
cs
js
outsl
pop
loopne
inc
mov
fwait
dec
sbb
sbb
ffreep
push
dec
outsb
cmp
xchg
pop
mov
aam
or
imul
leave
orl
lods
and
ds
fcmovnb
scas
shl
push
jb
jno
mov
scas
ret
pusha
or
pop
cld
mov
ss
ja
rorl
sub
mov
and
les
movsl
sbb
adc
or
iret
xchg
mov
popa
shl
mov
stc
or
and
shll
pop
mov
dec
int3
adc
push
popl
jle
xchg
pop
cwtl
test
std
aas
in
add
out
adc
sub
cmp
jo
xchg
popa
pop
xor
rorl
loop
sub
int3
mov
fimuls
pop
xor
es
xlat
push
mov
adc
adc
rol
inc
cwtl
mov
or
ds
and
push
mov
lahf
sub
sahf
push
add
push
add
mov
add
mov
xor
jp
dec
psrlw
push
mov
psubb
loopne
add
jp
sbbb
outsb
scas
mov
shlb
lret
cli
lcall
or
sub
and
push
fnstenv
loopne
sarl
mov
sbbl
aam
mov
in
dec
ds
cli
dec
iret
in
push
icebp
or
and
loopne
in
mov
xor
in
mov
mov
mov
fidivs
cmp
fidivs
push
lcall
loope
clc
push
cli
shrb
push
sbb
or
add
fimull
xchg
je
cmp
mov
lods
mov
jo
push
enter
inc
ret
dec
insl
aam
ds
inc
mov
and
fisubl
out
cmp
stos
mov
movsb
sti
dec
into
int3
cmpl
or
scas
push
adc
xchg
adc
mov
mov
pop
inc
data16
xor
addb
mov
rclb
push
icebp
lret
mov
loop
test
xor
jl
inc
ja
push
in
pop
lock
lea
fabs
jb
mov
and
loop
fisttpll
pop
and
push
les
dec
xchg
pushf
mov
cmc
push
xchg
add
movsl
ja
aam
stos
or
js
sbbb
or
jg
popa
sahf
daa
jg
sub
or
add
outsl
stos
loopne
or
shl
push
adc
clc
sbb
inc
inc
add
shll
push
lret
hlt
pop
add
dec
stos
std
add
andb
js
push
aam
test
mov
icebp
add
push
push
ss
loopne
out
and
inc
repz
jo
into
test
inc
lcall
push
cld
std
bound
xchg
addb
addb
pusha
je
leave
and
jnp
fwait
mov
inc
mov
sbb
xchg
mov
out
sub
int
popa
sar
xor
arpl
or
aas
test
dec
sar
dec
shll
inc
xchg
fists
sbb
xorl
jecxz
test
dec
jmp
loope
push
xchg
cli
and
in
fsubrs
mov
popf
inc
adc
out
or
rcr
xor
vshufps
push
cld
add
or
xchg
inc
stc
inc
jge
jg
inc
jl
xor
lods
inc
dec
jl
sbb
push
inc
sub
mov
sbb
and
popa
and
and
inc
sbb
pop
or
and
add
sub
or
faddl
cmp
popa
add
dec
test
cs
push
rorl
insl
dec
mov
outsb
pop
jecxz
fiaddl
lods
pop
jl
adc
dec
insb
psubw
jae
and
cmpxchg
lock
in
jmp
mov
scas
xor
cmp
aam
adc
adc
hlt
ror
xor
sahf
repz
ret
xor
out
jbe
sahf
push
imul
int3
xor
inc
xchg
inc
test
orl
mov
popf
push
pop
inc
push
push
rcrb
loop
and
cs
mov
jno,pn
cmc
adcl
imul
cltd
jecxz
test
inc
fists
dec
inc
add
push
cmp
sarl
pop
mov
fisttpl
flds
mov
push
dec
loop
idiv
and
fldenv
mov
daa
xchg
and
ficompl
mov
adc
jmp
jmp
sbb
bound
shr
xchg
lods
push
or
rcrb
fdivrs
test
push
jns
scas
cltd
ret
addl
arpl
xchg
test
push
jl
out
pop
sti
loopne
les
cmp
sub
jle
loope
jmp
stos
push
js
push
rolb
cwtl
loope
aas
andl
adc
mov
shll
cmp
push
outsb
adc
mov
ret
dec
push
loop
out
leave
mov
idivb
dec
mov
fisttpl
xchg
das
loope
data16
push
sub
ret
lock
cs
lcall
push
loopne
mov
xchg
add
inc
add
sub
pop
push
xor
ss
inc
fs
fcompl
imul
mov
add
mov
outsb
mov
dec
arpl
add
mov
add
sub
pop
loopne
and
xor
fildll
mov
push
inc
pop
repnz
sub
fs
jge
xor
popf
push
adc
jge
mov
hlt
mov
inc
xchg
sub
andb
add
push
icebp
notb
xor
addr16
lret
stos
adc
popa
pusha
mov
rorb
mov
ljmp
mov
data16
shlb
mov
pushl
xchg
or
push
test
mov
lock
scas
pop
dec
jmp
fnstcw
daa
je
pushf
aas
mov
out
push
imul
mov
pop
pusha
orl
jmp
inc
or
pop
sbb
xchg
pop
push
xor
inc
push
or
adc
and
ljmp
lods
and
in
and
outsb
mov
mov
sbb
or
hlt
mov
pushl
sub
sarb
cs
movsb
add
loopne
adc
or
cld
loope
jbe
pop
or
shr
sbb
test
in
add
fcmovb
adc
js
pop
jbe
pop
push
add
ss
cs
xchg
enter
rcrl
mov
or
jbe
dec
xchg
mov
out
mov
dec
pushl
ret
push
ret
xchg
out
rcrb
fisubrl
pop
ds
and
dec
inc
adc
fimull
add
add
mov
lods
in
xchg
jecxz
loop
mov
mov
lods
pop
stos
pop
push
cli
xchg
cltd
mov
push
mov
rcrb
cmp
adc
call
mov
loope
xor
xchg
sarl
popa
push
pop
mov
loopne
xchg
cwtl
lret
test
xchg
arpl
daa
fcmovne
inc
adc
loop
cmp
imul
adcb
sbb
lret
mov
mov
fwait
pusha
subb
daa
insl
ljmp
shlb
pop
dec
sbb
stos
add
pop
cmp
shlb
int
jbe
loop
and
fwait
jo
fnstenv
inc
jle
cmp
lea
dec
scas
push
fucomi
repz
adc
sahf
and
aaa
mov
push
add
fisubs
adc
nop
js
out
xor
fstl
push
push
ss
and
cmp
ljmp
mov
push
aad
pop
adc
ret
scas
xchg
pusha
cmp
nop
loope
jecxz
cmp
jmp
jne
popf
cli
xor
aad
add
push
inc
lcall
mov
push
inc
cmp
push
cmp
push
lea
dec
pop
and
pop
insb
call
or
icebp
out
add
inc
loope
cli
adc
pop
aaa
dec
bound
loope
and
fwait
clc
mov
mov
or
aam
cmp
stos
bound
je
arpl
mov
insl
pop
or
add
sti
call
das
stc
fs
roll
mov
or
cli
inc
lret
dec
aaa
out
cmp
js
pop
and
inc
inc
cmpl
xchg
pop
insb
fidivrl
push
xchg
ret
push
out
icebp
pop
data16
repz
xor
les
mov
add
das
inc
sub
xchg
hlt
lcall
push
jmp
mov
iret
and
push
ret
cmpb
popa
jnp
mov
cmp
pop
std
fdivrs
sbb
movsl
xchg
push
inc
dec
and
cwtl
jmp
sbb
das
xor
push
call
xor
mov
pushl
jbe
or
mov
lds
mov
or
repz
inc
mov
loopne
adc
jmp
mov
cs
imul
lock
mov
add
push
outsl
inc
jbe
rcll
add
popf
mov
dec
dec
mov
cwtl
call
loopne
jecxz
mov
movsl
pop
shrd
xchg
aas
popa
lds
jecxz
sub
cmpsl
xchg
xor
clc
or
cmc
cmp
cmc
rcrb
rcrb
mov
outsb
xor
jmp
xchg
je
shr
test
mov
push
vphaddbd
inc
popa
push
je
add
add
push
iret
hlt
mov
push
fucomp
cld
inc
scas
push
sub
xor
inc
mov
paddq
jg
lea
push
jnp
adc
icebp
xchg
xor
loope
mov
add
test
inc
orl
leave
dec
xchg
outsl
add
adc
xchg
loope
inc
cmp
mov
shlb
inc
push
es
cmp
stos
inc
mov
dec
fmull
std
cmp
push
lock
lods
sub
pusha
xor
pop
push
out
cltd
clc
addl
sbb
cwtl
shll
sbb
jbe
int3
jmp
sub
mov
test
mov
pop
test
orl
xor
adc
mov
ja
xchg
dec
xor
sbb
sahf
rcl
pop
and
je
mov
loop
pop
cmpsl
aas
mov
mov
out
inc
mov
push
cmp
icebp
dec
fwait
xor
bnd
jp
int3
xchg
lret
clc
xorb
add
inc
clc
in
iret
and
popa
or
xchg
xor
xor
add
cmp
je
sub
add
inc
and
inc
mov
sbbb
push
psraw
loopne
stc
cmpsb
xor
inc
imul
inc
je
mov
out
aam
enter
ds
inc
fcomip
sub
push
pop
std
push
cmp
push
fwait
jg
inc
imul
sub
and
sbb
xor
pop
mov
xor
mov
shl
inc
subb
imul
jne
stos
push
test
xchg
mov
mov
push
scas
push
jae
inc
lret
insl
add
mov
mov
xchg
xchg
sub
js
push
in
pop
mov
sub
xor
popf
push
fldenv
cmc
pop
sbb
icebp
mov
cwtl
mov
sbb
movsb
ljmp
mov
push
in
cli
sub
xor
lret
sti
test
xor
aaa
and
adc
and
vmovaps
add
jge
mov
push
or
mov
loop
xor
and
out
fucomip
xlat
jp
mov
testb
xor
xlat
pusha
loop
das
lock
or
mov
stos
cwtl
scas
lahf
pop
rcll
jnp
mov
shl
mov
pop
aaa
lahf
push
sbb
xchg
pop
add
or
sbb
stc
pop
or
loop
add
and
shrl
mov
xor
inc
or
sbb
inc
dec
lds
test
mov
and
popa
dec
test
xchg
cmp
fwait
lods
andb
sbb
popl
outsl
add
jo
push
sub
cs
push
popl
push
fwait
and
dec
add
subb
mov
lcall
xlat
adc
sub
xlat
jp
or
add
cmp
or
xor
pop
cmc
push
xor
mov
xor
test
jl
gs
mov
cmp
mov
andl
shll
or
test
sub
fimull
push
add
push
pop
push
push
cmp
or
ds
mov
outsl
clc
test
push
popa
pop
sbbl
pop
sbb
imul
lods
loopne
pop
insl
jnp
dec
outsb
mov
jno
clc
sub
push
jne
stc
dec
mov
adc
ss
or
arpl
popa
mov
nop
jnp
inc
test
jno
mov
inc
fsubl
dec
stos
insb
fdivrl
xchg
adc
fstps
adc
gs
push
or
dec
int
cmp
pop
ja
cwtl
stos
out
in
adc
mov
sbb
mov
icebp
pop
lock
mov
les
stos
adc
dec
fimull
out
testl
add
jg
sub
dec
cmp
cmp
stos
cmp
push
fs
sbb
in
flds
push
dec
in
fs
xchg
lock
add
cmpsl
dec
lahf
pop
aam
pushf
sbb
xlat
rorl
sub
add
jb
jp
mov
sub
jmp
ret
push
les
inc
fprem
sub
je
mov
jl
jl
ds
std
test
push
jns
add
mov
lcall
sub
sti
scas
dec
xchg
jmp
pop
jg,pn
jno
push
ret
in
cmp
mov
loope
ljmp
or
mov
fdivrl
pop
stos
and
sub
sbb
inc
xchg
push
mov
movsb
adc
sbb
pop
and
cmp
xchg
repnz
jmp
addb
add
cmp
mov
jbe
cmp
es
jo
mov
mov
push
dec
push
lock
cmc
push
shll
mov
mov
sub
mov
cmp
lret
lahf
cs
mov
add
data16
sbb
push
pop
sbb
ret
add
pop
mov
insb
ret
mulb
push
mov
decl
jns
sarl
inc
adc
mov
aas
mov
sub
push
mov
add
cltd
push
cli
and
sub
pop
xor
sbb
or
int
arpl
sub
dec
cli
sbb
cltd
pusha
test
cmp
outsb
loope
jne
shl
mov
pop
dec
aas
out
xchg
mov
jb
jp
mov
add
push
cmp
adc
out
clc
or
in
loopne
push
inc
mov
std
or
cmpsl
sarl
cmc
or
mov
jle
push
shll
insb
call
add
cmovp
clc
in
inc
fnsave
inc
sub
jl
mov
rcrb
and
adc
mov
pushf
aam
fisubl
stos
call
rorb
jmp
push
inc
xor
or
pop
mov
sbb
ss
ja
sbb
loope
stc
int
popa
iret
adc
dec
dec
call
pop
jg
in
xchg
cmp
adc
xchg
xchg
leave
mov
outsl
outsl
dec
es
push
inc
movsb
add
es
cmp
xchg
xlat
orl
xor
bound
nop
adc
shl
out
cs
mov
dec
pop
lcall
pusha
lods
cmpsb
dec
pop
xlat
rol
push
adc
pop
adc
mov
mov
jp
and
icebp
lahf
lods
out
jo
outsl
call
hlt
mov
jmp
dec
or
in
sahf
mov
mov
imul
std
adcl
lret
mov
push
sub
and
mov
lods
add
pop
inc
mov
nop
movsb
xchg
aaa
jmp
and
jge,pn
movsl
test
cli
pop
inc
leave
loopne
mov
pusha
xor
push
xchg
in
test
jo
add
dec
subb
popa
adc
loope
fcoml
or
gs
or
dec
rcrb
xchg
jp
or
adc
push
aas
hlt
out
lock
fld
mov
repnz
xchg
fidivl
inc
or
mov
pop
add
push
or
rorb
adc
fmuls
adc
std
roll
jge
xchg
sbb
add
icebp
hlt
or
mov
jle
or
lds
fnstenv
jae
testb
out
mov
add
fstl
adc
xlat
cmp
cltd
scas
mov
popa
arpl
jae
loop
inc
mov
cmpsb
mov
mov
cs
ret
adc
mov
cmc
sub
ljmp
adc
mov
push
or
xchg
lock
outsb
jne
xchg
sahf
scas
daa
call
test
ljmp
out
adc
ret
jg
cld
repz
outsb
push
scas
sub
outsl
ss
orl
push
in
addl
xor
xchg
ljmp
roll
xchg
popa
and
adcl
in
push
pop
fbld
test
push
jp
jp
aaa
xchg
ja
es
ss
loope
mov
imul
push
cmp
xor
pop
sahf
mov
sbb
fwait
add
sub
add
xchg
xor
or
insl
call
movsl
inc
sbb
mov
and
shl
or
enter
aam
mov
ret
arpl
inc
loope
add
adc
push
xor
inc
fisubl
push
mov
cmpsb
ret
rcrb
sbb
test
adc
inc
outsb
dec
cmovne
ljmp
mov
inc
cmp
sbb
mov
cwtl
pop
xcrypt-ofb
cmpsl
in
mov
push
or
xchg
clc
mov
cs
mov
movl
mov
adc
addr16
leave
addl
ds
rcll
sbb
stc
clc
sti
repnz
daa
sub
adc
jecxz
and
push
cmp
xchg
mov
incl
aam
mov
fsubs
cmpsb
cmp
popa
in
mov
xor
and
ret
inc
or
in
jge
pop
sbb
repnz
jns
inc
cmp
adc
adc
push
mov
adc
aaa
adc
pop
cltd
sub
fwait
push
jae
jns
xchg
into
jle
cmp
or
imul
sbb
mov
scas
in
test
jae
or
lret
jnp
fisubs
jle
xorb
inc
mov
imul
seto
push
scas
inc
out
mov
popl
dec
adc
pop
rolb
push
inc
cmp
fdivl
sbb
loop
adc
sbbb
movsl
mov
add
out
hlt
dec
add
mov
add
xlat
daa
or
hlt
stos
push
scas
lret
add
mov
in
dec
mov
xchg
movsl
rcrb
ds
frstor
cmp
lods
or
and
scas
inc
sub
outsb
ret
add
pop
movsl
push
loope
icebp
jns
sub
dec
test
jp
add
icebp
and
pushf
popa
insb
xchg
sahf
aas
adc
into
cmp
enter
movb
sti
xor
call
lahf
xchg
dec
jo
out
stos
and
jne
sub
pop
int
inc
cmpsb
icebp
push
and
loope
clc
addb
es
repz
add
sub
xor
xchg
and
imul
mov
js
mov
inc
pop
adc
fdivl
jmp
test
repz
mov
aam
cmp
inc
adc
xchg
sbb
sbb
out
mov
mov
and
xor
adc
add
clc
sbb
lcall
jae
into
stc
mov
add
gs
fcoml
adc
fs
jno
ss
jl
mov
mov
add
outsl
icebp
ljmp
stc
hlt
xor
leave
mov
ss
add
repnz
loop
and
dec
cmovle
sub
sbb
jo
push
clc
jne
notb
or
icebp
pushf
dec
stos
fldcw
cmp
adc
insb
daa
ret
out
xchg
cmp
mov
sbbl
shrl
inc
mov
xor
adcb
pushw
jnp
shll
xchg
sub
int3
push
cmp
pop
push
loop
jmp
sbbl
test
lahf
lock
sarb
das
inc
fwait
jo
outsb
adcb
fiaddl
add
and
scas
mov
or
cmpsb
mov
cmpsl
and
or
xor
insb
call
stos
xchg
pop
dec
aas
idiv
xchg
pop
sbb
lcall
xchg
add
push
in
sub
add
pop
cmc
push
pop
inc
imul
xor
mov
stos
adc
push
lret
js
adc
js
adc
mulb
cmp
inc
ljmp
xchg
sbb
mov
outsb
or
loope
jo
mov
in
mov
and
push
xchg
dec
fmulp
imulb
push
mov
jge
inc
sbb
mov
nop
xorb
movsl
cmp
jo
jnp
and
pop
lock
inc
stc
js
test
push
add
mov
mov
insb
cld
imul
or
aad
cwtl
je
mov
xchg
mov
jno
and
xor
push
pop
mul
inc
adc
xchg
popa
jns
test
adc
inc
xchg
insl
pop
push
ret
dec
ljmp
cmc
sbb
aaa
jmp
stc
les
mov
add
mov
mov
push
std
sbb
imulb
jmp
xchg
mov
adc
jbe
pop
test
xchg
fs
call
mov
mov
jno
test
scas
add
push
push
add
jmp
add
sbb
add
addl
dec
incl
lahf
adc
inc
jle
popa
inc
and
xor
es
retw
pop
push
popa
push
jmp
push
jne
inc
fsub
icebp
shl
mov
loope,pn
push
and
xor
call
popf
mov
xor
cld
mov
add
dec
addr16
or
data16
mov
fldl
sbb
xchg
roll
cs
or
dec
sub
mov
xchg
es
imul
data16
cmp
pop
ja
hlt
xchg
cmc
and
in
inc
xor
adc
mov
loope
loope
mov
gs
push
sbb
cmp
addr16
xor
popa
inc
lds
or
insb
pop
dec
pop
or
dec
cmp
xchg
cmpsl
fwait
mov
jge
mov
add
xchg
pop
xor
sahf
mov
sbb
insb
jle
sbbb
lods
add
insl
notl
incl
dec
sbb
les
clc
nop
or
vmwrite
push
in
nop
mov
sbb
mov
jne
lea
add
push
push
pusha
pop
lock
xorl
movsl
push
jbe
push
dec
push
inc
bound
imul
mov
fs
adc
add
xor
roll
lock
rcrb
shlb
or
fs
jg
in
mov
mov
or
pop
and
and
cmpsb
mov
ss
cmc
xchg
das
adc
dec
xchg
mov
jg
xorb
push
into
pop
pop
sbb
sarl
mov
js
mov
fldl
or
mov
bound
push
test
xor
push
dec
jge
insb
adc
push
loope
mov
sub
add
loopne
adc
enter
dec
jl
clc
and
cmp
or
ror
cld
mov
jmp
mov
js
call
cli
aaa
adc
and
adcl
mov
shl
dec
inc
les
mov
dec
xor
pop
in
mov
pushfw
out
pop
imul
sub
pusha
out
mov
xchg
or
jae
pop
cmpsb
bound
iret
xchg
xor
scas
test
xor
cmp
stos
stc
arpl
xchg
dec
cmp
add
jb
stc
cwtl
ljmp
sub
mov
popf
inc
outsl
sub
roll
xchg
mov
pop
push
mov
cmpsl
add
push
adc
mov
ja
mov
aas
and
lock
adc
xor
xchg
ficompl
aaa
arpl
arpl
sahf
or
shll
fistpl
cmp
xchg
fmuls
or
lcall
fwait
xor
mov
mov
scas
adc
or
lcall
mov
aas
sub
mov
pop
sbb
rorl
mov
out
xchg
xchg
dec
dec
cmp
or
repnz
mov
xor
lock
or
jmp
jp
cmpsb
mov
les
pop
xor
sahf
mov
mov
stos
ss
scas
les
lea
fadds
inc
fmul
or
add
cmp
cld
adc
loope
push
aad
lds
jge
fcompl
into
test
push
imul
mov
scas
pushf
xchg
cmp
jle
fmul
or
fdivs
cmp
aas
movsb
sub
and
sbb
inc
lea
inc
pusha
pop
push
adcb
out
inc
and
dec
mov
mov
mov
inc
into
scas
mov
inc
shl
dec
cmp
inc
es
call
cwtl
hlt
mov
jo
sub
cli
add
int
jecxz
fimull
pop
and
push
mov
ret
mov
adc
inc
jg
adc
pop
shrb
inc
test
leave
or
notb
add
adc
outsb
lods
xor
leave
xor
fdivrl
sub
dec
ljmp
sub
cmpsb
mov
hlt
aas
xchg
repz
sub
sub
inc
test
aad
mov
lods
cmp
movsb
jns
test
outsl
cwtl
lea
outsb
pop
test
std
aas
mov
and
dec
mov
lock
clc
mov
dec
push
and
jo
aaa
inc
ficomps
popf
insl
das
cmp
xor
inc
pop
ljmp
mov
add
xor
data16
xor
loope
and
insl
lds
inc
sbb
imul
iret
push
jne
dec
popf
jg
dec
dec
push
loop
push
xchg
pop
cwtl
add
ds
jns
dec
xlat
mov
ss
fisubs
xchg
aam
and
ficompl
scas
mov
or
sbb
adc
push
lea
push
jo
cs
pop
mov
mov
pop
test
adc
fcmovu
push
or
xor
and
fcoms
xor
inc
dec
scas
cwtl
sahf
sbb
test
mov
mov
jge
sbb
sub
dec
cmp
stc
pslld
add
sub
cmp
ror
ds
scas
inc
aas
jecxz
sbb
test
fstps
icebp
insl
test
dec
arpl
push
add
adc
push
xchg
or
vcvtss2si
lock
in
mov
sub
sahf
dec
loopne
fwait
sub
jle
test
jp
cmp
lcall
dec
inc
orl
ret
lods
and
xchg
mov
out
mov
dec
inc
mov
mov
js
ljmp
push
mov
clc
cmc
je
out
out
sahf
mov
xor
push
lea
shlb
lock
xchg
xor
in
or
dec
lods
mov
lods
push
mov
push
outsb
mov
loopne
inc
inc
inc
insb
mov
adc
mov
dec
popf
inc
xor
sub
pop
sub
pushf
adc
aas
mov
push
xchg
xor
mov
add
ret
scas
and
push
shr
mov
cmp
cmp
incl
xchg
in
and
xchg
loop
mov
lods
dec
sbb
xor
movsl
or
dec
sbb
pop
fcmovnbe
daa
sub
xchg
test
or
js
push
and
loope
shll
xor
orb
aaa
nop
cs
es
cltd
daa
roll
repnz
adc
js
push
sbb
and
jge
sub
movsb
scas
lods
xor
mov
inc
xor
pop
xor
imul
stos
push
daa
pop
enter
shll
test
xlat
pop
xchg
stos
cld
xchg
dec
dec
js
and
fcomps
and
cmp
mov
push
ret
jmp
xor
add
clc
imul
cmp
sbbl
in
inc
inc
mov
push
xor
and
out
pop
xchg
inc
xor
icebp
insb
jo,pt
out
lods
loopne
bound
xchg
mov
and
mov
xchg
inc
addr16
xchg
les
jg
xor
cld
pop
shlb
inc
into
into
in
mov
pop
sub
inc
xchg
jns
xcrypt-ofb
cmpsl
scas
jl
in
stos
lock
cli
sub
cmp
push
lret
push
adc
sub
lds
and
xchg
loopne
sbb
incl
ret
insl
xor
pop
pop
mov
xor
fs
popf
push
movsl
mov
jns
cmp
in
inc
mov
push
pop
adc
sti
ror
les
aad
add
not
mov
aam
xor
inc
ja
scas
or
adc
es
sub
inc
clc
add
mov
or
and
ja
xlat
stos
mov
shlb
sbb
xor
adc
mov
rorb
dec
loopne
insl
aad
mov
add
sbb
xchg
ret
cld
ret
jne
sub
inc
subb
sahf
movsl
popf
sub
pop
xlat
cmp
xchg
test
jo
cld
jle
icebp
adc
scas
mov
push
push
out
cmp
into
call
dec
ffreep
or
push
and
jl
sbb
in
mov
testb
andb
sub
pop
sub
cmc
and
icebp
popa
sub
inc
daa
orl
mov
add
mov
shlb
cmpsb
mov
xor
subb
std
dec
ss
scas
xchg
fdivs
mov
in
iret
lods
pop
ror
jnp
or
stos
cmp
push
inc
xchg
sahf
jo
and
imul
xchg
jne
xor
push
scas
push
ret
out
and
pop
aad
and
sbbb
jmp
cmc
cmp
inc
jecxz
or
mov
mov
pop
xor
clc
lcall
sbb
jmp
movsl
sahf
push
dec
loope
fsub
cmp
fld
rclb
push
pop
aaa
adc
popl
stos
add
test
mov
add
add
pop
and
dec
add
add
lea
sbb
rcll
xorb
pop
jge
out
sub
xchg
loope
mov
cmpsl
lock
xchg
push
popa
jne
cmp
jne
xorb
movb
xor
pusha
or
popf
outsb
xchg
pop
decl
cwtl
and
add
dec
and
xchg
ljmp
adc
add
add
rolb
icebp
mov
jnp
jns
icebp
xchg
ror
stos
xor
mov
out
sbb
push
mov
cltd
xchg
pop
add
pop
mov
mov
or
cs
sbb
and
mov
out
sub
mov
out
or
sub
dec
mov
or
movsb
pop
call
repnz
inc
leave
test
fnsave
and
inc
mov
scas
insb
xor
imul
fisttpl
insb
dec
mov
loopne
ret
bound
xor
ret
adc
pop
jbe
cmp
icebp
jmp
inc
js
lds
jns
mov
js
jns
int3
out
mov
stc
arpl
sub
cmpsb
mov
sbb
xlat
or
repz
jo
dec
jle
push
mov
xchg
mov
smsw
push
dec
jb
pop
andb
int
test
jbe
add
addr16
mov
jb
aad
into
fs
in
lea
insl
int3
out
jp
cwtl
cld
mov
mov
outsl
or
jae
mov
or
add
sar
add
adc
sbb
mov
xchg
dec
push
or
out
and
ret
imul
lods
add
jle
outsb
mov
je
dec
out
sub
jne
lret
ror
test
sbb
cmp
test
xchg
sub
lock
aaa
xchg
adc
pop
rorl
push
xchg
insb
mov
inc
add
push
sarl
dec
shrl
fdivrp
sub
and
add
dec
je
xchg
xchg
inc
xchg
ljmp
pop
les
sbb
ja
pop
scas
stos
int3
out
fbld
sub
jge
mov
inc
cmp
hlt
or
dec
push
mov
fisttpll
mov
inc
cmp
add
les
mov
mov
pop
insl
sub
negb
pop
out
lahf
lods
lcall
push
pop
sbb
jg
xrelease
fstpt
scas
and
shl
adc
leave
xor
cmc
add
les
jmp
sub
xchg
repz
add
add
or
sbb
adc
or
in
jno
sti
xlat
pop
jb
in
adcl
xor
cmp
push
or
sub
xchg
pop
rorl
mov
dec
mov
inc
je
nop
jp
pop
sbb
or
xchg
cmp
sbb
test
sbb
sbb
or
addr16
lock
inc
cli
jae
negb
je
cmp
push
stos
mov
icebp
fwait
jns
cmp
push
inc
cmp
ljmp
mov
cmp
dec
mov
xor
cwtl
adcb
lret
sbb
fildll
into
frstor
mov
negl
xor
je
out
ljmp
add
add
fmulp
or
addl
mov
aaa
mov
mov
std
loope
pop
cmp
loop
cmpsl
jg
push
add
fsubrs
pop
jge
inc
into
pop
mov
data16
ret
popa
cwtl
pop
fsubrs
and
mov
push
cwtl
mov
inc
pop
cltd
mov
xchg
icebp
and
adc
inc
cld
cmpb
rcrl
add
jp
popf
lcall
sub
xchg
cmp
sti
add
and
cmp
cmp
jmp
hlt
adc
orl
mov
adc
or
es
pop
mov
fs
dec
mov
out
xor
sbb
fadds
adc
inc
lods
cmp
pop
je
add
ja
nop
out
shll
inc
into
movsb
lods
mov
std
or
mov
inc
mov
jecxz
sub
sbb
push
push
sub
cld
xor
inc
mov
rorl
daa
cmp
mov
aas
add
pushf
jno
push
inc
add
cmp
out
data16
imul
mov
aam
loopne
data16
sarb
xor
ror
xor
cmp
in
dec
xlat
adcl
xor
or
mov
call
inc
stos
adc
mov
ret
or
or
lret
cmp
jns
adcl
shll
pop
insl
out
pushw
shlb
in
jl
jo
mov
leave
mov
iret
push
cli
sbb
rol
loope
pop
xor
inc
or
push
div
jl
sub
or
ret
inc
rcrl
js
movsb
adc
aaa
lret
add
fldcw
dec
mov
aad
pop
inc
and
and
aad
and
cmc
push
mov
repnz
in
xlat
cmp
sbb
lods
adc
pop
pop
cmp
push
popf
xchg
je
daa
xor
mov
inc
xchg
pop
mov
sub
jns
mov
mov
clc
fmuls
ss
stos
arpl
mov
je
cli
sbb
or
insl
dec
popa
repz
add
out
pushf
ds
call
sub
cltd
cmc
sbb
fimull
jmp
mov
mov
jo
mov
add
sarl
cld
outsb
or
dec
loope
in
aam
out
inc
xor
pop
pop
insb
pop
pop
aaa
mov
adc
pop
mov
int3
adc
mov
xor
int
repz
ret
insl
jmp
or
sub
mov
mov
fisttpl
shl
mov
fmull
je
ds
xchg
jge
or
lea
push
daa
or
fs
mov
lock
popa
mov
or
inc
inc
add
adc
aas
js
cmp
xchg
pop
jg
mov
lret
hlt
out
xor
arpl
push
dec
jl
dec
jns
popa
and
pop
push
lock
outsl
jno
lock
mov
inc
or
test
insl
xchg
ja
ljmp
int
or
data16
mov
jg
ljmp
jle
leave
mov
mov
inc
push
loope
and
push
or
push
push
movsl
cmp
push
stc
mov
ficoms
test
pop
mov
faddl
mov
andl
sub
fs
iret
add
mov
mov
jbe
jle
and
push
mov
inc
add
fiadds
lahf
icebp
int3
stos
push
mov
insb
pop
jbe
mov
cli
pusha
mov
andl
push
sub
adc
add
adc
out
outsb
add
xchg
add
lds
jge
jp
jb
sub
and
xor
stc
mov
icebp
or
cli
push
stos
dec
xchg
pop
jle
fdivrs
pushf
push
inc
test
jb
push
xor
xchg
pusha
daa
jo
movb
stos
lahf
xor
push
cmp
sub
push
fs
sbb
shlb
rcrl
pop
xor
hlt
hlt
sub
cmp
inc
lret
test
inc
mov
ret
ret
addr16
xor
push
push
stos
test
add
loopne
adc
nop
push
popa
in
clc
leave
sub
scas
xor
sarl
jo
push
dec
cltd
fsubl
mov
jae
dec
leave
cmp
dec
dec
mov
jno
in
push
scas
fs
jl
cld
mov
stos
pop
mov
xor
pop
pop
pop
dec
xchg
cmpsb
inc
aad
or
cmp
movsb
cli
push
xor
jge
mov
push
stos
ret
xor
je
xor
push
sbb
ss
ud2
and
jmp
and
pusha
xorl
mov
xchg
push
and
rolb
aad
sub
cld
es
or
jecxz
mov
repz
in
imul
jmp
loop
addb
adc
mov
lods
shrl
mov
mov
xchg
mov
movsl
jp
add
inc
cmpsl
fistps
mov
std
nop
pop
loopne
cmpsb
add
fs
mov
sub
add
enter
xchg
ret
sbb
mov
sub
mov
sub
mov
ret
mov
xchg
mov
popf
subb
inc
mov
jp
add
hlt
lret
or
inc
adc
xchg
sbb
decb
icebp
jle,pt
fdivrp
mov
pop
sbb
push
jp
mov
aad
mov
mov
and
mov
inc
cmp
movsb
pop
fnsave
rorb
rcl
jne
push
imul
fiadds
fsubl
or
mov
inc
popf
inc
xchg
shlb
ljmp
fndisi(8087
rcr
jmp
fdivs
and
enter
cmp
aam
add
jnp
push
mov
sti
es
cltd
or
mov
inc
jae
imul
mov
outsl
add
jle
test
call
ret
xor
enter
pop
cmc
mov
inc
rclb
jge
mov
pop
jle
xor
inc
jg
stos
jno
cmc
scas
lds
or
xchg
js
out
push
add
add
xor
mov
stos
add
js
icebp
dec
addr16
test
pop
or
subb
and
xor
enter
sbb
int
or
push
dec
xor
lret
int3
adc
dec
cmp
add
or
mov
ficoml
imul
cltd
pop
push
xchg
stc
xchg
jecxz
fcomp
lock
inc
push
pop
sub
sbb
clc
inc
ret
mov
cmp
or
xchg
adc
aas
push
mov
cmp
adc
jo
mov
arpl
out
outsb
add
sbb
fidivl
fwait
adc
pop
pop
hlt
pop
xor
sub
push
push
sub
add
sbb
pop
outsl
es
test
mov
add
icebp
add
xchg
push
incb
inc
jns
dec
hlt
mov
add
loop
and
sbb
adc
repnz
or
adc
inc
punpcklwd
push
aaa
xchg
test
hlt
bound
xchg
fidivs
mov
jne
or
sub
adc
adc
outsb
sub
sub
loop
inc
push
or
fldcw
imul
inc
jo
or
insl
and
into
out
sbb
jns
cmp
pushf
out
lods
andb
push
out
fs
out
sub
int3
cltd
mov
out
lahf
stos
dec
inc
sahf
xchg
jb
fimull
inc
push
lods
or
loopne
ljmp
sub
clc
test
nop
push
jp
cld
sbb
loopne
push
movsb
rcll
daa
pop
jp
sbb
push
adc
mov
jnp
sahf
mov
outsl
push
jo
mov
rcrb
add
dec
jl
push
jp
jo
lret
pusha
xchg
cs
dec
or
lahf
cli
ret
and
inc
xor
adc
and
sub
shll
adc
fadds
mov
aad
sbbb
fistl
sbb
sub
jecxz
sbb
ret
cltd
dec
rorb
roll
sbb
nop
and
addr16
hlt
orl
inc
fnstenv
mov
lock
ss
xchg
js
popa
or
cmp
lcall
sti
out
mov
xorl
inc
inc
or
sbb
rcl
push
popa
sbb
mov
or
or
addl
pushf
icebp
mov
pop
outsl
sbb
and
xchg
xchg
jo
loope
cmpsb
insb
aaa
or
ret
inc
das
mov
imul
and
outsl
cmpsl
push
ja
sub
sbb
mov
cmpsb
divb
xchg
xchg
xchg
pop
and
repz
jo
add
dec
mov
pop
mov
orl
nop
les
add
je
sbb
or
add
scas
sub
loope
cmp
ds
and
pop
call
add
pop
das
pop
shrb
ljmp
jge
sbb
dec
pop
lods
sub
fdivrs
xor
daa
cwtl
rorl
sub
sbb
shrb
adc
cmp
imul
inc
test
xchg
and
js
xor
bound
data16
mov
sarb
les
push
loopne
adc
cmpps
and
test
and
pusha
clc
mov
lods
and
adc
mov
xchg
mov
in
jae
stos
adc
cmp
xchg
inc
dec
xor
hlt
stos
orl
aam
dec
divl
cmp
rorl
pop
sub
jle
xchg
aad
pop
outsb
pextrw
js
imul
inc
outsb
dec
sub
sahf
and
adc
mov
das
add
js
cli
std
ss
gs
rolb
out
mov
adc
roll
nop
xchg
mov
cli
adcb
inc
dec
out
cs
adc
cmp
movl
or
ljmp
push
inc
fimull
ss
js
and
or
add
shll
mov
sub
in
inc
push
add
sti
sbbb
sbb
dec
mov
add
xchg
add
or
ret
and
lods
or
pop
stos
pusha
push
jecxz
sub
mov
jge
inc
stos
sbb
pop
pop
pop
movsl
fisubs
push
rcrb
mov
mov
rolb
sbb
cmp
cmpl
loop
leave
pop
lds
sbb
cld
jp
xlat
pop
sarb
xchg
lahf
movsb
or
xlat
or
loop
xchg
ja
sub
mov
and
sub
rol
pop
or
lret
mov
mov
add
inc
mov
adc
mov
mov
jmp
shrb
fiadds
cmpb
ss
inc
subb
push
lahf
xchg
loopne
cmp
aad
insl
cs
cwtl
lock
in
roll
ret
inc
inc
add
fucomip
lock
cmp
dec
ljmp
jmp
dec
fldenv
ljmp
test
mov
sub
cmc
pop
pop
test
mov
popl
rolb
repz
push
adc
bswap
je
test
repz
jg
mov
mov
cs
loope
jno
insl
ret
popf
testb
jmp
ror
mov
adc
xchg
ljmp
lds
cmp
or
dec
pusha
sarb
xor
or
mov
shl
stos
xchg
cmp
inc
mov
mov
add
aam
ret
icebp
jle
cld
jmp
adc
or
push
in
jne
sub
insl
in
lods
out
imul
cmpsl
sbb
orl
imul
lea
test
dec
pop
movsl
adc
aad
mov
pop
mov
cmp
xorb
mov
push
mov
sahf
das
daa
mov
dec
mov
sarl
mov
addl
bound
add
and
into
clc
inc
push
mov
rcr
test
les
dec
clc
inc
cmp
adc
das
and
inc
jp
adc
jns
int3
je
leave
rorl
test
push
sub
inc
xor
mov
mov
adcl
jecxz
data16
mov
stc
arpl
sub
es
inc
fcomip
add
mov
mov
and
adc
popf
int3
mov
mov
sahf
xlat
xor
sbb
and
adcl
inc
inc
adcb
js
inc
lods
inc
add
loopne
xchg
pop
inc
fadds
mov
dec
and
sub
lods
push
jle
cmpl
test
inc
popf
sub
btr
mov
loopne
inc
and
jg
add
add
xchg
ja
or
inc
aam
stos
aaa
cs
aad
pop
xchg
ljmp
add
lea
add
and
ds
aaa
pop
orb
loop
add
add
sub
xlat
adc
fstl
iret
push
or
push
popf
hlt
jae
test
jmp
jnp
sub
adc
mov
out
cmp
and
mov
sbb
fimuls
adc
rorb
mov
mov
and
mov
adc
rol
jmp
push
packssdw
es
adc
push
out
mov
sbb
dec
jnp
inc
sbb
and
lods
xor
and
jmp
mov
dec
mov
or
dec
sbb
jg
aas
sub
mov
mov
int3
fs
subl
arpl
fildl
xchg
aam
sub
pop
cld
xchg
xor
mov
push
add
fildll
xchg
loope
xor
js
je
mov
movsb
in
jno
int3
movsb
add
or
dec
adc
mov
ret
fsqrt
mov
cs
loop
mov
xchg
push
add
adc
roll
pop
loope
sbb
ss
xchg
sub
repnz
mov
sub
inc
sub
sti
and
cmc
mov
movsb
icebp
fbld
mov
pop
cld
or
inc
les
lock
add
ja
inc
sub
ds
out
xlat
push
bound
sub
lds
xor
roll
andb
mov
nop
jne
cmpsb
xor
stos
mov
dec
into
icebp
ss
jno
ror
sbb
jecxz
icebp
add
mov
repz
pop
jmp
mov
bound
out
les
loop
mov
hlt
outsl
sbb
out
xchg
push
cmc
mov
negl
ficoml
lcall
mov
sub
lds
pop
in
or
jmp
inc
cmp
incb
or
js
inc
repz
mov
rclb
gs
int3
lods
inc
lock
add
lahf
inc
push
push
ss
aam
jo
mull
pusha
add
cltd
loopne
or
push
les
inc
xor
push
mov
pop
cmpsb
xchg
add
cvtdq2ps
pusha
ret
in
test
mov
inc
fwait
xchg
lods
adc
cmp
pop
cld
int3
sub
inc
xor
lahf
icebp
pushf
fs
pop
imul
dec
and
sar
and
shl
mov
in
rcr
dec
jne
or
add
rcrl
imul
cmpsb
pop
xor
or
cmpsb
push
adc
imul
ffree
pop
sub
mov
arpl
push
int3
mov
push
jmp
fcomp
loope,pn
aad
iret
in
pusha
cmp
rcrl
loope
push
jo
push
gs
rol
xor
adc
mov
and
sbbb
mov
pop
xchg
cmp
inc
ret
push
jmp
or
scas
sub
shrl
ljmp
push
test
inc
inc
jmp
adc
adcl
lahf
icebp
into
xlat
lret
insl
adc
aam
pop
xchg
out
cmpsb
push
fmul
pop
pusha
or
sub
add
cwtl
adc
jo
cmc
lds
jle
add
or
test
cli
movsb
rclb
lret
mov
jno
add
sbb
jo
jno
sbb
adc
ret
scas
sahf
mov
mov
scas
jl
aas
icebp
pop
mov
pop
out
xor
mov
loope
in
xchg
outsl
ss
dec
xchg
and
cli
test
dec
add
dec
mov
mov
cmp
movsb
jg
call
sbb
pop
and
rol
cmp
sub
cmc
push
fadds
and
icebp
jnp
cwtl
ret
adc
fistpll
inc
lahf
fisubrs
mov
or
adc
push
test
mov
cmp
fnstsw
mov
mov
sbb
push
add
aas
icebp
sbb
mov
xor
imul
jge
cmpsl
pop
das
lcall
cltd
ds
imul
test
mov
sub
or
mov
xchg
rcrb
imul
push
mov
out
cmpsl
sbb
std
or
daa
fbstp
lods
fimull
sbb
mov
inc
pusha
mov
and
jne
jno
stos
in
nop
icebp
cld
inc
push
test
imul
mov
mov
scas
sub
push
adc
out
nop
mov
scas
dec
loop
std
mov
test
rorb
loope
cmpsb
out
in
mov
test
and
mov
arpl
mov
jno
jno
inc
loop
mov
cmp
dec
or
rcrb
rcl
cwtl
sbb
cmpsb
sub
or
popa
push
push
cs
xchg
movsb
add
std
cmpb
cs
push
jae
xchg
mov
loopne
clc
mov
xor
push
sti
gs
fimull
sbb
add
sub
pop
out
inc
xchg
mov
dec
lods
push
mov
xor
idiv
sbb
add
lret
das
mov
sbb
dec
mov
ffreep
jecxz
loopne
icebp
sbb
lret
ss
add
cmp
pop
pop
jmp
inc
adc
or
jle
adc
dec
dec
mov
fiaddl
xor
and
hlt
sub
loop
orl
lock
inc
adc
cmp
adc
mov
pop
lds
inc
jno
ja,pn
xor
test
lret
and
xor
pop
adc
loop
nop
fmull
adc
pop
call
mov
push
mov
fnstsw
mov
dec
sbb
leave
fstps
lret
test
sub
arpl
xchg
imul
inc
add
test
pop
clc
sub
push
test
addb
repz
dec
lock
loope
int
push
mov
imul
or
sbb
jg
push
xor
pop
xchg
cmp
mov
push
loopne
add
or
xchg
or
xor
in
aam
jp
movsb
ljmp
call
sti
xlat
mov
cmp
test
scas
dec
jo
paddw
lock
adc
pop
adc
cli
sbb
test
stc
inc
insb
dec
cld
shlb
jns
pop
mov
and
mov
jne
sbb
sub
addl
aad
cmp
ret
mov
pop
push
sub
mov
pop
lds
adc
sbb
subl
outsl
pop
or
fldcw
cli
subb
je
adc
mov
cs
ljmp
test
loopne
jg
das
jl
cmp
insl
or
adc
fstl
adc
clts
jo
jle
dec
lret
cli
inc
inc
addl
add
bound
sbb
lods
inc
mov
add
sbb
roll
pop
idivb
ret
sbb
add
cmpsl
or
shrl
xor
pop
movsl
lods
xchg
call
jae
faddl
nop
pop
es
push
andb
cmp
push
xor
add
testb
out
clc
mov
mov
dec
or
stos
mov
iret
adc
cmp
pop
xchg
jno
leave
aaa
pop
jecxz
js
movsl
mov
or
mov
pop
mov
das
push
pop
sbb
xchg
cmp
adc
loop
scas
adc
or
fists
add
shll
mov
push
cwtl
mov
pop
gs
inc
pop
jp
sbb
inc
movsl
jle
push
out
clc
adc
mov
insl
inc
xchg
sbb
in
jo
mov
add
cmp
aad
xchg
sbb
in
rol
pop
inc
je
fprem1
add
sub
fcmovnu
out
or
popa
les
aaa
dec
cli
lods
arpl
lret
loop
lds
inc
rclb
sbb
lods
mov
add
clc
mov
xlat
add
test
and
sub
test
adc
jo
mov
cmp
in
sbb
xor
add
dec
mov
cs
loopne
cmc
shl
mov
lds
pop
sub
sbb
dec
xchg
and
xchg
dec
mov
loope
xor
dec
pop
repnz
loop
lock
enter
out
jl
cmp
pop
rclb
push
mov
adcl
jne
push
in
je
scas
xor
cmpsb
rclb
inc
mov
popf
sbb
jp
dec
jns
imul
pop
movsb
add
test
xor
aaa
xchg
and
pushf
push
js
into
nop
mov
dec
mov
pop
movl
bswap
add
int
movlps
lcall
add
xor
data16
pop
fcoms
movb
cmp
and
jae
lods
xchg
pop
and
inc
xchg
ljmp
inc
lods
inc
mov
mov
mov
fs
pusha
mov
mov
and
push
les
adc
or
jge
dec
out
mov
fnstenv
pop
xchg
pusha
jmp
call
xchg
addr16
push
pop
iret
add
inc
dec
ja
jmp
ficompl
push
sub
push
sahf
xlat
pop
sbb
push
iret
xor
sbb
add
idiv
jae
sbb
pslld
or
push
cmp
sbb
sbb
sub
cwtl
pop
mov
and
loop
push
mov
mov
adc
fstl
push
cld
stos
cld
mov
lods
mov
cli
add
push
add
add
stos
pop
add
hlt
dec
xor
out
repnz
cltd
push
pop
or
fisubrs
and
adc
sub
jne
mov
shll
mov
pop
lcall
ror
or
cmc
shll
aam
out
cmpsl
stos
or
dec
mov
inc
clc
enter
or
and
sbb
aaa
xchg
fcmove
adc
and
mov
leave
and
dec
popf
les
dec
mov
mov
or
jnp
lret
hlt
movsb
mov
adc
xchg
pusha
push
std
jo
dec
insb
daa
ljmp
sbb
or
mulb
mov
dec
xor
test
jb
loope
jno
out
ss
mov
mov
jmp
int3
cmp
mov
mov
cmp
inc
ret
sub
mov
inc
in
punpcklwd
sbb
sti
jbe
jns
inc
cmp
loopne
and
adcb
mov
sbb
out
xor
ss
mov
rclb
out
push
mov
outsb
out
dec
fstl
enter
fsubrs
rclb
sub
popf
sub
mov
shlb
mov
cmc
mov
mov
push
popa
sarl
cli
add
in
nop
and
test
jnp
dec
pop
mov
sub
dec
rcl
inc
das
sbb
loope
mov
hlt
inc
loope
add
sub
dec
push
sbb
mov
push
aad
adc
adc
sarb
inc
in
or
lcall
jns
jns
xchg
nop
fiadds
ret
inc
ds
add
mov
shlb
test
jmp
push
cmp
mov
repz
daa
push
sti
inc
mov
cmp
repz
lods
or
pop
out
shrb
bound
push
mov
pop
shll
inc
cltd
adcl
xor
enter
aas
add
leave
jae
and
adc
imul
inc
push
xor
rolb
into
xchg
gs
clc
pop
lea
not
or
mov
xor
repz
adc
add
jo
pop
push
aad
je
pushf
push
mov
jmp
jg
mov
cmp
aam
pop
cwtl
xor
inc
paddsb
inc
test
xchg
enter
mov
mov
and
leave
lea
mov
jmp
xchg
ret
cli
sarb
stc
dec
mov
add
lods
dec
sti
or
jne
inc
aas
cwtl
pop
jl
inc
xchg
jbe
pop
int3
nop
call
jno
adc
aaa
out
mov
addl
add
xlat
cwtl
notl
aad
mov
mov
mov
pop
sbb
xchg
mov
add
push
fwait
lods
pop
adc
test
dec
rcll
sbb
ret
inc
lods
and
jo
rorl
mov
xchg
mov
xchg
js
out
idivl
push
popa
push
xor
frstor
pop
lds
cmp
cmp
xorl
mov
insb
pop
scas
xchg
sbb
jge
mov
or
loopne
cs
movsb
sbb
into
adc
xchg
cmp
or
sub
test
push
in
jbe
test
pop
cwtl
mov
cmp
mov
sbb
loop
xor
jns
repz
adc
mov
pushl
je
bound
cmp
add
jmp
mov
daa
loopne
je
pop
aas
enter
cmp
in
repnz
sbb
add
mov
pusha
add
mov
dec
aad
fildl
out
fwait
bound
stc
lcall
rcl
dec
add
std
mov
ljmp
ds
mov
xchg
mov
xor
imulb
mov
pop
dec
inc
inc
out
xor
sti
jae
ret
cs
adc
lds
in
ficoml
jbe
std
mov
test
mov
cli
jno
xor
test
scas
les
sbb
hlt
mov
js
push
xchg
mov
pop
loope
imul
es
add
xlat
test
stos
adcb
das
add
ret
push
insl
dec
xor
ja
or
fcomip
push
cmc
rcrl
inc
cld
jne
jns
ret
xor
pop
mov
dec
fcomi
ss
push
inc
xchg
xchg
dec
adc
cmp
cmp
xchg
bound
das
or
pop
mov
jo
and
pop
xlat
leave
push
movsl
lret
test
int
adc
mov
std
hlt
fsubl
pop
cmp
xor
movsb
test
rcrl
xchg
mov
inc
sbb
es
or
mov
addr16
roll
call
push
adc
xor
mov
cltd
add
sarb
addb
jno
in
icebp
fcompl
dec
ja
add
xchg
insl
rcrb
add
loop
jle
repnz
stos
push
mov
sbb
dec
aad
mov
xlat
fs
add
lock
jmp
insl
push
push
jecxz
clc
movsl
or
popf
push
out
mov
mov
jecxz
cs
cmp
movups
dec
dec
and
iret
xchg
test
dec
outsb
mov
xchg
pop
addr16
jge
inc
mov
or
mov
arpl
rcrb
mov
jae
adcb
repnz
sbb
das
mov
fistpll
lock
add
sbb
mov
push
sbb
js
cwtl
hlt
ss
je
and
mov
cmp
mov
lahf
mov
xchg
out
push
mov
inc
lods
jp
push
imul
xlat
shl
mov
data16
pop
jne
pop
lock
je
and
les
movsb
orps
push
jp
cmpsl
int
adc
mov
push
adc
sbb
orb
sbbl
cli
mov
and
out
mov
inc
enter
mov
or
inc
fisttps
adc
insl
movsl
dec
cli
and
sti
adc
loopne
idivl
mov
scas
lret
lock
insb
cmp
xchg
add
test
ret
xor
sub
lea
cmp
xor
add
aaa
sub
out
sbb
mov
and
cmpsb
mov
roll
jmp
in
cmp
add
mov
inc
mov
xchg
mov
mov
sbb
test
gs
addl
das
push
jno
mov
mov
das
pop
sahf
add
nop
mov
jge
sub
pop
std
lock
xchg
xchg
loop
pop
jne
or
cmpsb
movsl
sahf
testb
push
shr
loop
cli
push
pop
cmp
cmpl
add
imul
fdivr
addb
incb
xor
sub
mov
test
fs
adc
cmp
jo
mov
mov
push
andl
mul
iret
pusha
adc
sbb
pop
adc
insl
sbb
mov
or
jbe
insl
xor
aad
loope
dec
adc
add
lret
repz
mov
jmp
test
jno
cmpsb
jne
mov
out
mov
pusha
mov
mov
loopne
push
mov
adc
adc
dec
xchg
in
mov
mov
ret
add
and
or
or
sbb
cmp
jnp
push
cs
adc
xchg
push
jecxz
and
push
jmp
dec
insb
sub
xor
insl
jmp
or
call
loop
jmp
arpl
arpl
inc
mov
inc
imul
push
stc
hlt
add
orb
mov
imul
imul
roll
xchg
adcb
test
movb
xorb
loope
push
mov
arpl
out
sahf
xchg
jg
inc
cwtl
xorl
arpl
sub
clc
into
add
clc
adc
jo
in
jp
inc
adc
xchg
dec
mov
xchg
or
inc
pop
sti
mov
push
adc
movsb
adc
movsb
xchg
push
lcall
dec
psubq
jae
leave
cmpsb
sub
out
sbb
outsl
mov
mov
in
push
xchg
or
aaa
sbb
repnz
push
mov
data16
fldcw
cmc
xlat
adc
sbb
popa
xor
shrb
popl
sbb
mov
push
mov
or
sbb
outsl
and
clc
sbb
call
call
inc
and
cmpl
push
jns
test
hlt
or
add
sub
sbb
pop
push
xchg
cltd
cs
lods
xor
lahf
xchg
adc
adc
push
or
push
dec
sub
and
adc
cmp
mov
mov
cli
xor
aas
jno
xchg
les
int3
test
jae
js
sarb
mov
das
lds
cwtl
fucomip
mov
popf
xlat
outsb
sbb
jmp
or
lcall
cmc
aas
mov
imul
xor
inc
ja
mov
sbb
push
pop
jb
jnp
clc
mov
push
aad
add
mov
repnz
cmpsb
mov
mov
inc
or
lock
inc
mov
sub
adc
fistpll
add
sbb
mov
and
push
mov
rorb
sub
xchg
or
pop
add
mul
out
sbb
add
flds
imul
iret
cwtl
inc
cltd
sub
pop
xor
mov
mov
cmp
mov
or
or
push
inc
and
aas
out
inc
pop
test
mov
xchg
inc
in
push
mov
andb
or
xor
movb
inc
push
ret
cltd
adc
into
stc
sub
inc
stos
jecxz
dec
push
xlat
inc
mov
pop
or
out
xchg
imul
testb
fdiv
mov
sahf
push
inc
je
addb
imul
jg
inc
stos
push
jp
je
lret
mov
mov
movsl
mov
or
lods
or
mov
cmpsl
in
dec
adc
mov
mov
mov
jge
mov
pop
jmp
test
inc
loope
add
rcrl
pop
jb
sbb
adc
jmp
dec
fldcw
add
mov
aas
jno
inc
adc
ret
push
push
aam
or
stos
mov
or
inc
mov
sbb
inc
inc
inc
jmp
mov
bound
bnd
imul
lds
add
pop
divb
ret
icebp
and
mov
add
mov
xor
xor
in
subl
lds
fcmovb
xor
icebp
adc
xchg
outsb
aaa
sbb
mov
loope
iret
mov
sahf
cld
sub
dec
int
xor
cmp
jp
push
push
sti
sub
adc
test
leave
mov
call
rclb
jmp
mov
dec
scas
dec
scas
jp
js
nop
jne
jle
sbb
pop
dec
push
ljmp
rorb
lods
out
pushl
test
jl
cs
mov
shrl
sbb
jb
push
cmpsl
adc
cmpsl
xor
inc
fisttpll
adc
subb
push
les
clc
xchg
and
lahf
push
inc
xchg
xchg
add
inc
sbb
cmpsl
sbb
imul
mov
sbb
dec
orl
decl
pop
adc
nop
in
popa
cmpb
aaa
jns
movhlps
xchg
inc
mov
aas
xorb
mov
cmp
cmpsb
aaa
je
sahf
call
or
rcl
mov
insl
mov
ret
subb
and
jl
pop
jne
in
inc
arpl
xor
fimull
lea
loope
sub
lret
out
sub
add
xchg
mov
jmp
jecxz
push
inc
dec
xor
aad
jb
sbb
repnz
pushf
jbe
mov
cwtl
es
push
ret
pop
outsl
fisubl
arpl
push
and
lods
arpl
adc
dec
movsb
xchg
inc
cli
pop
pop
pusha
repz
jl
inc
enter
dec
sbbb
outsb
subl
sub
and
inc
daa
jb
add
sub
fwait
icebp
mov
inc
mov
insb
loope
xchg
mov
stos
and
jo
shlb
cmpb
rorb
sete
dec
add
repz
push
xlat
or
cmp
push
xor
cmpl
frstor
push
pop
je
and
or
mov
dec
scas
or
push
popl
js
arpl
je
sbbb
in
call
lret
mov
test
dec
mov
mov
and
insl
test
ds
inc
mov
inc
adc
mov
or
ret
push
pushf
pop
les
rolb
sbb
stos
addl
stc
in
adc
subl
icebp
es
je
jne
cmp
cmp
and
xchg
push
fwait
pop
mov
aad
and
ficompl
pop
ficoml
xor
imul
and
aam
inc
push
mov
or
jp
hlt
cwtl
sti
mov
sbb
mov
lds
cmp
outsb
sbb
arpl
in
xlat
mov
in
sti
inc
xlat
clc
fsubp
jmp
mov
shrb
fcmovu
jae
cld
loop
dec
and
imul
mov
mov
dec
popf
fwait
mov
scas
xchg
btr
test
shl
leave
jo
jmp
ds
sub
push
and
dec
cli
jle
cmpsb
sbb
popf
movsl
mov
cmp
adc
mov
add
mov
js
and
mov
loop
push
mov
aam
sbb
cmpsl
mov
rclb
jae
mov
int
movsl
cmpb
insl
inc
sbb
push
or
pop
enter
cld
mov
pop
lock
adc
bound
add
in
nop
inc
lea
lea
mov
rclb
dec
xor
xchg
sbb
and
insl
mov
cmp
dec
jns
enter
jmp
and
adc
mov
xchg
daa
cmp
jg
mov
leave
mov
sub
sbb
xor
or
ds
test
insb
or
jo
inc
test
xchg
cmc
sub
clc
adc
mov
leave
rcl
or
pop
inc
pop
mov
lret
jns
push
cmc
xchg
and
sub
inc
outsl
sbb
pop
lods
cmpsb
pop
jnp
fmull
stc
cmp
inc
adc
dec
xor
js
fsub
inc
sub
mov
stc
mov
dec
adcl
inc
jmp
dec
or
jge
call
xor
push
test
outsl
sub
xlat
push
gs
add
push
xorb
cmpsb
jne
fwait
pop
iret
enter
sub
shll
aad
mov
mov
hlt
push
mov
jo
fidivrl
xchg
sahf
mov
lock
and
mov
add
xchg
and
ljmp
dec
dec
cmova
pop
loopne
cltd
dec
js
movsl
mov
leave
sbbl
or
cwtl
adc
inc
insl
push
divb
push
xor
sbb
add
in
sub
sbb
lret
loope
pop
push
in
pop
jl
jl
mov
push
sub
mov
jae
xor
and
jnp
cmp
push
cmp
inc
daa
sahf
lods
xchg
and
inc
xchg
rorb
mov
pop
sbb
mov
push
fcmovbe
sub
in
mov
xor
or
and
mov
andl
inc
fwait
mov
adc
push
add
mov
in
mov
sbb
int3
out
xchg
mov
cmp
xor
fistpll
mov
add
jmp
sbb
sbb
xor
test
dec
mov
lods
pop
inc
in
jecxz
pop
into
std
jns
xchg
dec
addr16
dec
icebp
adc
mov
shl
sub
mov
mov
dec
sbb
pushf
pop
rcrb
xchg
and
cmpsb
movsb
xchg
sbb
pushf
std
icebp
inc
clc
jp
js
inc
sbbb
xor
hlt
lret
jecxz
test
inc
add
add
fidivrs
add
pop
mov
and
arpl
mov
pop
pop
xor
push
mov
scas
sub
mov
push
mov
cmpsb
mov
int
xchg
jl
pop
int
das
dec
leave
and
aam
nop
xor
dec
je
ficompl
js
shl
popf
xorb
mov
hlt
aam
or
xchg
jg
mov
pop
mov
clc
sbb
inc
gs
and
mov
cld
jno
addr16
jl
mov
mov
stos
outsb
jne
aas
je
push
testl
mov
bndstx
push
pop
cmp
pusha
push
loope
push
ljmp
rcrb
push
inc
cmp
repnz
xor
aas
mov
dec
pop
mov
je
sub
or
jb
pop
xchg
into
mov
mov
and
js
mov
addr16
dec
sti
dec
or
pop
sbb
xchg
push
lret
loopne
push
lret
in
push
rol
add
or
push
psubsw
push
mov
sahf
xor
xchg
xchg
or
mov
out
sbb
inc
xchg
hlt
push
clc
in
push
mov
mov
jle
aam
cld
shlw
scas
shrl
loope
mov
pop
xchg
push
and
in
mov
insl
pushf
rcr
dec
sahf
in
imul
mov
imul
adc
lods
cmp
xchg
inc
std
pushf
aam
ret
or
int3
sbb
cmc
push
lcall
test
sub
mov
jbe
or
sbb
lea
ljmp
or
mov
pop
sbb
push
add
jne
daa
push
jne
xchg
add
dec
pop
cmpsb
test
mov
sub
mov
push
bound
cli
cmp
sarl
test
icebp
add
sbb
cmc
sbb
aaa
adc
iret
jae
inc
or
jne
push
rcrb
test
add
xchg
mov
dec
mov
and
movsb
xlat
jmp
loope
test
mov
testl
push
ret
xlat
arpl
sbb
int3
cmc
or
mov
push
jbe
gs
frstor
mov
incb
pop
rcrl
cmp
sarl
jl
sub
and
add
push
pop
rcrl
leave
bound
cmp
bound
mov
jb
jecxz
xor
outsb
in
mov
fistl
add
pop
jno
rcrb
mov
or
mov
std
add
pop
loopne
sbb
pop
mov
sbb
out
and
mov
dec
dec
push
xchg
and
call
push
and
jbe
xchg
jb
repz
test
test
fcoms
and
andb
lock
lea
xchg
sbb
xor
lods
test
push
push
adc
lcall
scas
aad
stos
sbb
inc
out
mov
jg
je
jg
push
dec
cli
jmp
sub
decb
lahf
xor
arpl
in
ret
rclb
scas
insb
cli
nop
mov
stos
inc
testb
push
sbb
dec
pop
lret
loopne
cmpsb
out
das
push
jbe
in
push
jne
lcall
mov
gs
dec
mov
rorl
mov
add
je
xchg
sahf
and
in
inc
adc
push
sub
aas
mov
sub
repz
inc
scas
adc
sub
push
pusha
test
mov
je
sub
or
push
xchg
dec
shll
and
push
adc
mov
xchg
js
jecxz
push
xor
dec
sbb
lcall
and
pop
jnp
add
adc
mov
mov
fwait
inc
jnp
and
mov
movsl
jle
jg
or
xchg
js
xor
mov
cwtl
xbegin
jns
xchg
aas
dec
mov
cltd
xchg
push
in
in
or
add
pop
lea
or
jecxz
jb
or
fstps
pop
in
sub
and
sub
in
fisttps
imul
imul
mov
mov
into
subl
or
loop
dec
sub
and
cmp
jbe
xor
jmp
cmp
add
sub
jns
jo
adc
cli
in
out
and
add
pop
rclb
imul
clc
mov
and
pop
movb
das
fildll
cmp
xor
in
fdivl
shll
pop
lods
jecxz
test
es
icebp
imul
jle
inc
inc
adc
inc
outsl
mov
out
pop
lcall
cmc
adc
mov
dec
pop
sbb
call
out
loopne
pushf
push
icebp
push
sbb
imul
rolb
nop
loop
adc
adc
shll
mov
add
adc
push
mov
dec
xchg
adc
or
outsb
mov
ljmp
mov
ret
fadds
cmp
and
shr
xchg
pmulhuw
inc
jmp
jo
loopne
fwait
push
mov
sbb
sub
xchg
jp
sbb
roll
fisubrs
add
cmpsl
jne
fstps
sbbl
inc
clc
sub
mov
mov
xor
cld
rolb
fidivl
nop
mov
cmp
push
testl
and
popa
aaa
inc
inc
or
in
movsl
cmp
imull
lret
pop
mov
xorl
xchg
scas
shrb
jno
jp
in
adc
roll
fidivrl
mov
hlt
aaa
jne
enter
dec
and
cmp
mov
jno
xchg
inc
pushl
ds
dec
sbb
std
loope
xor
adc
enter
or
shll
xchg
sub
mov
orl
mov
or
cmp
mov
sbb
sti
jmp
jne
or
loop
add
cmp
movsl
mov
jne
mov
sbb
loop
push
mov
cltd
das
sahf
lahf
icebp
and
xchg
out
shl
and
and
sahf
cwtl
cmp
in
jecxz
cmp
pop
dec
mov
jno
mov
jnp
pop
jl
and
cld
mov
adc
cmp
sbb
push
push
add
add
cltd
add
in
push
popa
lcall
out
push
movsl
adcb
pop
mov
stc
shlb
mov
sbb
cli
shll
cmp
fcoml
pmuludq
jmp
xchg
pop
popf
sbb
mov
fwait
inc
mov
cmp
xchg
inc
js
mov
pusha
sbb
and
mul
adc
les
pop
test
movsb
xchg
jle
add
cmpsb
mov
xchg
mov
roll
add
xchg
clc
mov
cmpl
int
pop
xchg
je
hlt
repnz
mov
nopl
sub
fmuls
and
in
ret
test
push
lods
or
scas
or
imul
push
push
xchg
test
in
sub
push
add
repnz
xchg
icebp
jo
sbb
fs
sub
fidivl
mov
iret
in
rolb
ds
jmp
in
mov
push
add
sbb
iret
pusha
cmp
aas
in
das
sbbb
mov
adc
dec
sub
push
add
icebp
adc
xor
fcmovbe
lret
movsb
std
add
mov
dec
inc
bound
fwait
int
imul
adc
sahf
stos
rclb
xchg
in
popf
lock
push
add
sbb
cmp
adc
sbb
mov
push
pop
sbb
repnz
lods
idivb
xor
adc
xchg
and
cwtl
pop
mov
mov
jae
loop
and
sbb
adc
jl
cmp
fwait
jnp
das
clc
xchg
inc
push
orb
pop
ret
cli
clc
and
mov
and
cs
shr
icebp
inc
push
scas
mov
pusha
call
pop
into
push
and
jle
xlat
add
jg
push
adc
test
scas
inc
sbb
mov
push
clc
test
push
scas
jecxz
add
push
ret
std
cmp
dec
dec
inc
lret
push
lcall
ficoms
dec
imul
and
scas
xor
pop
mov
dec
adc
push
aad
test
js
lds
and
cmovp
repz
scas
push
pusha
in
ljmp
popa
scas
scas
dec
aam
pop
dec
mov
jo
jp
jb
add
mov
es
shrb
add
loopne
mov
sub
es
pop
scas
dec
insl
xor
and
test
out
pop
ljmp
inc
mov
add
mov
scas
shlb
mov
clc
xchg
mov
shll
std
scas
xchg
push
and
or
push
push
and
jecxz
rcr
or
and
inc
push
cmpsb
pop
test
ds
daa
lods
inc
lods
mov
cmp
lock
adc
aad
bound
and
and
sahf
loopne,pt
insb
adc
fs
pop
sbb
frstor
push
xchg
es
loop
subb
push
arpl
inc
adc
xlat
loope
mov
mov
std
dec
jmp
and
mov
mov
cmp
adc
cli
insl
or
test
pop
fwait
push
push
cli
fdivrp
or
mov
ds
mov
fmull
xchg
mov
dec
xor
cmp
inc
cmp
push
add
jmp
sbb
mov
and
push
stos
jmp
mov
insb
or
jae
lcall
sub
lods
mov
fadds
or
test
jne
ret
add
xor
cmp
jno
dec
outsb
jg
pop
mov
stos
fwait
xor
movsl
or
add
ja
js
or
add
push
loopne
xchg
mov
scas
jl
flds
je
sbbl
push
sub
out
lcall
clc
sarb
ficoml
adc
sbb
jecxz
pop
jg
lods
daa
in
scas
or
lahf
pusha
faddl
movsl
in
jae
sbbl
xor
imul
lahf
xlat
test
inc
ja
and
jmp
sbb
dec
aam
dec
xor
scas
dec
pop
mov
mov
daa
jns
dec
pop
addr16
dec
aam
ret
push
fsubrp
subl
clc
imul
nop
mov
loopne
push
popl
push
adc
mov
je
stos
adc
sub
outsb
xchg
aas
adc
pop
sub
push
mov
dec
adc
popa
sub
jo
cmp
mov
xor
outsl
in
subb
mov
fs
dec
inc
sarb
testb
adc
daa
shrl
arpl
jns
mov
mov
js
push
dec
add
insl
in
mov
test
punpckhwd
xor
jb
xorb
gs
adc
jo
shlb
push
push
mov
scas
dec
cmp
pop
cli
sub
xchg
jo
add
or
mov
mov
xchg
cmp
sub
inc
test
fidivrl
insb
cmp
test
nop
mov
sub
sbb
and
call
int
pop
inc
fwait
jle
xor
movsb
inc
lock
mov
pushf
fs
add
cltd
and
addr16
fldenv
jg
mov
mov
mov
out
lock
push
sbb
out
pop
call
push
or
fcoml
cmpsb
pop
cmp
scas
and
rcrb
outsb
push
mov
cwtl
jmp
jns
hlt
lods
sarb
sub
cmpl
push
mov
sub
pop
jle
jp
xchg
and
imul
rorb
aas
int
movsl
in
sahf
lahf
ds
lret
fsubrl
loope
inc
aam
dec
rorb
bound
jmp
enter
aaa
push
jmp
or
cmp
add
lcall
cmpsl
jge
xchg
xchg
and
adc
jecxz
push
loopne
das
dec
fnstsw
cmp
in
jle
adc
int3
aaa
adc
dec
int3
pop
xchg
or
jbe
pop
test
movsb
xor
in
test
adc
and
in
scas
push
push
adc
divb
pusha
dec
jo
sbb
mov
and
stos
fs
fnstcw
hlt
jno
xchg
pop
cli
cwtl
jl
pop
shlb
push
faddl
jle
push
mov
add
aam
inc
add
cmc
xchg
mov
in
pop
loop
lods
lds
push
lock
inc
push
push
test
xor
dec
mov
je
or
sub
add
jne
pop
jecxz
sub
or
jne
xor
add
fnstenv
cmp
repnz
adc
inc
inc
or
sbb
daa
iret
test
inc
lock
adc
cmpb
lahf
outsb
imul
dec
xchg
ss
pop
add
xchg
dec
leave
fwait
xchg
test
jl
jo
jae
adc
jg
rolb
pop
push
xor
scas
outsl
pusha
jge
cmp
pop
xchg
add
adc
pop
mov
sub
cmp
pop
movsb
or
bndldx
ds
jge
and
addr16
add
leave
mov
test
popa
lahf
adc
aad
imul
daa
mov
mov
add
sti
loope
dec
dec
mov
sub
jns
mov
mov
and
out
mov
andl
pop
enter
push
xor
mov
test
pushl
cmp
fadds
push
pop
jo
push
js
jo
inc
xlat
insl
lds
dec
ficoms
insb
jno
push
jg
clc
mov
xor
insb
pop
in
adcb
xor
sbb
inc
adc
mov
lret
xor
xor
xchg
iret
adc
xchg
mov
mov
mov
aas
imul
dec
mov
jo
mov
jp
or
cmpsb
xor
ljmp
sti
inc
cmpsb
inc
sub
fmul
inc
shll
xor
or
xor
int
out
xchg
jo
dec
xchg
mov
dec
xchg
cs
aad
loop
std
aas
cmp
fisubrl
xchg
repnz
push
jb
insb
scas
jg
jne
inc
jb
stos
lcall
jo
jo
mov
dec
xchg
in
shlb
nop
shlb
xor
mov
loop
xor
inc
sbb
xrelease
mov
ds
decb
pusha
dec
cmp
movaps
icebp
mov
decb
pop
xchg
or
or
cltd
mov
and
mov
outsb
xor
jnp
loop
pop
call
mov
add
pop
das
cmp
cmp
jmp
in
clc
pop
sbb
add
popa
push
pop
les
in
pop
insl
loope
mov
or
shrl
fs
cmpsl
mov
in
mov
loopne
rolb
mov
pop
add
mov
lret
and
subl
jmp
test
jg
jecxz
insb
dec
cmp
lods
push
roll
mov
mov
dec
sub
hlt
loop
int
mov
cmp
rclb
sbb
push
dec
cmpsb
stos
xchg
test
mov
xor
aaa
inc
les
sbb
mov
and
hlt
jb
loopne,pn
dec
ds
mov
xor
xchg
and
cwtl
stos
aas
lock
scas
subl
jl
call
rclb
icebp
popl
lods
pop
pop
rol
pusha
ret
add
sbb
mov
in
push
sbb
cli
mov
jnp
push
cltd
scas
mov
sbb
pop
push
loop
and
jg
mov
icebp
inc
pop
xor
test
mov
sbb
xor
or
dec
outsl
into
nop
rolb
mov
ss
xchg
xor
mov
movsb
test
sahf
adc
pop
pop
add
in
xchg
movsb
subb
jo
int3
or
mov
outsl
insb
sbb
jo
ja
lods
mov
jl
aaa
mov
outsl
lea
sub
mov
xlat
pop
add
aad
stc
inc
test
inc
rorl
jns
sbb
push
add
ret
rclb
and
pop
mov
mov
cmc
inc
add
sbb
or
es
mov
add
xor
lahf
push
lods
es
inc
cmp
inc
jecxz
jne
push
mov
xor
loopne
out
pop
and
xchg
stc
das
cmp
push
fwait
adc
outsl
xchg
cmp
mov
fwait
push
clc
push
and
aad
enter
rolb
dec
and
stc
pop
xor
adc
jge
iret
add
lahf
daa
cltd
push
mov
pushf
xlat
movsb
sub
jne
insb
shrl
jnp
icebp
inc
ficoml
xor
cmpsl
icebp
scas
test
mov
xor
aad
jno
jle
ret
or
into
pop
pop
orb
mov
imul
pusha
lods
cli
loopne
stos
cmp
in
fnstenv
daa
pop
stc
add
lahf
sub
clc
xchg
out
mov
loope
mov
loop
insb
push
bound
xchg
dec
mov
fildl
mov
lcall
xor
xor
test
dec
pop
cvtps2pi
jnp,pn
int3
sub
mov
jne
xchg
pop
out
lret
inc
out
xchg
cli
inc
sbbl
adc
mov
add
add
daa
lock
out
and
lahf
scas
inc
mov
das
xchg
inc
out
inc
int
mov
sub
lods
xchg
test
mov
jg
xchg
orl
add
or
aam
jno
lret
push
fcmovnu
ret
xlat
sub
inc
nop
mov
iret
getsec
fiadds
and
scas
lock
or
imul
add
bound
push
mov
adc
lret
push
cld
xchg
push
ret
inc
je
xchg
add
roll
shl
and
sub
in
loopne
sarl
pop
gs
sub
mov
xor
mov
rcl
adc
cmp
lcall
stc
xlat
jecxz
out
mov
loopne
imul
push
lds
push
adc
mov
or
or
movsb
sahf
scas
pop
outsb
sbb
inc
movsl
and
lods
popa
lea
daa
mov
bound
mov
dec
enter
popf
scas
xor
inc
and
rorb
test
lret
add
mov
inc
outsb
mov
enter
roll
push
lea
jmp
movsb
mov
cmp
imul
xchg
mov
mov
mov
jecxz
out
sahf
shll
adc
add
test
mov
and
ja
cmp
mov
xor
and
inc
mov
mov
jae
push
cmp
pushf
cmpl
movsl
dec
nop
leave
loope
cmpsb
adc
arpl
or
lods
mov
lea
in
xor
lods
lods
clc
in
ljmp
fmulp
mov
jle
mov
cs
add
daa
or
sub
lods
inc
lea
mov
pop
rorl
sub
mov
jmp
mov
and
lods
and
inc
mov
cld
stos
ret
push
mov
jae
dec
stc
dec
loopne
xchg
pop
dec
ret
lods
call
je
rorb
fyl2x
lds
sub
mov
mov
pop
push
jg
icebp
repz
or
cmpsb
mov
mov
fs
add
mov
pushf
xor
push
mov
bound
dec
push
mov
idivl
or
xlat
movups
mov
loopne
test
mul
das
mov
pusha
adc
pop
mov
sbb
mov
out
icebp
loop
and
mov
outsl
lods
dec
mov
mov
cwtl
popa
popa
push
pop
adc
into
xor
add
pop
andb
into
mov
not
sub
add
xchg
ret
add
call
popf
in
add
fnstenv
mov
outsb
push
mov
das
shlb
test
mov
cmp
cmp
mov
xchg
jbe
mulb
adc
lret
repnz
fimuls
adc
pop
cmp
push
add
push
clc
fbstp
insl
popf
or
mov
clc
and
imul
pop
jnp
cmp
jle
lods
jnp
xor
jge
stos
pop
sub
or
test
ss
xor
push
shl
xchg
subl
in
adc
dec
xchg
test
inc
aaa
cmp
cmc
fsubp
sbb
das
cmp
cltd
in
fsts
cli
cld
adcb
lret
mov
movsl
pushf
movsl
cltd
mov
aas
xchg
fstpl
loope
fiaddl
adc
gs
data16
inc
sub
adc
fmuls
dec
popf
xchg
fisttpl
mov
inc
xchg
xor
ret
aas
add
leave
xor
hlt
or
jl
bswap
dec
or
xchg
add
jno
cmpsb
push
add
push
push
mov
call
inc
test
sub
adc
ret
rorl
cmp
pop
mov
xor
mov
mov
fistpll
and
mov
fildll
and
cld
pop
xorb
rol
aam
inc
pop
push
jecxz
and
dec
jnp
mov
inc
repnz
fwait
xchg
aaa
in
fmuls
mov
push
sub
mov
lods
pop
jge
inc
sub
leave
pusha
mov
ficoms
mov
jae
add
fldl
jbe
push
mov
ret
lock
and
sbb
dec
shll
push
scas
xchg
incl
cmp
ret
lea
mov
or
jmp
inc
popf
sub
ror
int3
lods
xor
sub
sbbb
xchg
js
pushf
lret
add
cmc
ret
xchg
call
pop
or
mov
enter
fstl
in
imul
fcmovnbe
lods
out
dec
add
add
fdivp
lcall
sub
add
push
jo
mov
test
pop
or
push
adc
jnp
add
sbb
push
inc
sbb
jbe
in
xor
popf
push
inc
xlat
adc
inc
jae
adc
pop
sub
inc
out
stos
jp
xchg
or
mov
xor
lods
mov
lods
or
mov
js
sub
push
push
mov
out
aaa
xor
es
mov
mov
loope
mov
int3
pop
dec
pop
mov
fidivs
add
aad
pop
icebp
jbe
sub
rcr
or
jle
mov
push
or
sbb
xchg
push
fwait
mov
dec
cs
popa
or
add
xchg
pop
mov
push
pop
cmp
push
pusha
nop
mov
adc
pop
push
mov
cmpsb
sub
sti
jp
aas
push
enter
dec
or
test
outsl
rcrb
dec
repnz
or
push
pop
fsts
andb
add
inc
data16
aam
jge
dec
cmpl
jl
or
xchg
clc
push
sbb
loope
xlat
mov
fwait
jne
adc
or
xchg
fbld
stos
cmpsb
pop
scas
test
xor
adc
dec
pop
dec
out
outsb
loope
rclb
inc
rorl
lock
or
xchg
rolb
fisubs
cmp
imul
mov
or
pop
push
loope
and
mov
mov
shl
daa
jae
push
in
iret
cwtl
outsb
push
add
mov
xor
icebp
nop
xor
in
popa
lods
repnz
inc
insb
or
cmp
xor
mov
std
cmpb
and
ret
je
sbbl
clc
icebp
and
jno
test
out
addr16
mov
scas
or
pop
adc
adc
sti
cltd
xor
mov
jl
jg
pop
cmp
test
sub
push
and
xlat
and
sbb
je
cmp
jge
movsb
mov
sbb
js
mov
adc
push
addl
lea
mov
mov
mov
enter
sar
rol
dec
out
add
mov
mov
sub
cmp
loopne
and
popf
sbb
mov
mov
mov
pop
push
mov
lcall
rorb
jmp
add
and
sub
pop
inc
xchg
xchg
add
in
lcall
mov
aad
in
adc
fnsave
mov
or
pushf
sub
fs
mov
popl
inc
and
adc
rcrl
push
push
test
lret
lea
or
lret
mov
sbb
jno
inc
scas
paddsw
test
mull
ljmp
cmp
or
lds
aad
mov
mov
mov
cmp
xor
jp
loopne
or
sub
dec
lods
rclb
enter
or
mov
stos
insl
cmp
jl
push
cmp
pop
sahf
and
adc
movsl
or
fwait
sbb
scas
or
popf
call
jmp
lds
inc
add
rolb
xorb
les
push
jecxz
out
arpl
je
inc
push
xchg
fists
xchg
cmpsb
popa
sbb
push
loopne
pop
dec
or
lcall
in
adc
add
jo
loope
test
aam
shrl
incb
push
test
cmpsb
mov
stos
test
loopne
jle
icebp
or
mov
jecxz
insl
add
and
mov
repnz
loopne
insl
sbb
push
jb
sbb
or
xor
aam
aam
repz
int3
and
in
movsl
out
dec
pop
and
or
cmp
adc
add
loope
jne
mov
push
mov
rclb
adc
popa
jo
aam
or
sub
mov
fidivs
mov
mov
mov
rcl
cmp
inc
xor
sub
std
sub
sub
adc
sbb
xchg
mov
insl
mov
pop
or
mov
cmp
enter
js
dec
insb
imul
adc
out
roll
dec
loope
mov
enter
and
pushf
inc
fs
mov
jmp
xlat
adc
mov
mov
scas
mov
mov
ljmp
push
sbb
push
movsl
icebp
mov
stc
loope
cmp
pop
push
pop
jns
aas
xchg
test
cmp
std
push
inc
mov
jmp
xchg
mov
lret
inc
cmpsb
pop
jmp
and
scas
fldl
imul
push
iret
add
xchg
in
and
popl
xchg
dec
shll
push
adc
inc
xchg
icebp
push
aaa
in
in
xor
inc
out
mov
sub
push
shll
stc
mov
mov
inc
dec
mov
add
testb
dec
xchg
out
mov
cmp
mov
xor
cmpsb
andb
dec
xor
cld
pushf
sub
rolb
mov
leave
push
pop
push
or
out
jno
jne
adc
adcl
pop
movsl
movsl
andl
gs
imul
pop
sbb
inc
fstl
pop
push
addl
ret
jle
jmp
subl
popa
pop
adc
cwtl
lea
std
les
cmp
jnp
scas
shlb
xchg
push
mov
or
loope
add
stos
mov
imul
movsl
adc
nop
aam
arpl
test
mov
js
shll
sbb
jmp
or
loopne
pop
movsl
lds
mov
push
filds
iret
mov
jne
push
arpl
mov
push
test
xor
push
fisubl
mov
xor
xchg
popf
sbb
int
jns
daa
pop
mov
jp
push
pop
insb
mov
out
add
gs
shr
xor
fdivl
mov
xchg
mov
incl
sbb
insl
outsl
mov
rclb
pop
jae
out
orl
mov
test
or
mov
loopne
jge
jle
dec
xor
jbe
lods
ret
or
fsubrp
dec
and
jb
mov
les
mov
inc
lods
hlt
sub
scas
call
dec
sbb
lahf
or
addr16
mov
stos
adc
mov
fidivrs
shrl
mov
cmpb
adc
cmovge
pushf
mov
push
clc
test
xor
and
adc
sub
sub
push
jge
out
push
pop
adc
or
pop
add
mov
and
inc
dec
push
sbb
adc
and
and
aaa
and
icebp
xchg
push
add
dec
and
mov
sub
aam
xchg
jg
sub
sbb
rcrb
aad
pusha
mov
dec
loopne
push
add
je
out
lcall
cli
xor
cld
call
call
sbb
jp
aaa
not
jmp
pop
mov
and
adc
sbb
je
je
stc
lds
mov
pop
jge
rorb
pusha
or
imul
movsl
stos
adc
mov
fsubr
pop
js
pop
or
mov
jle
in
dec
mov
jp
xlat
stos
scas
mov
sub
adc
neg
push
notl
dec
ljmp
push
sub
loopne
xor
push
loop
jg
popa
inc
es
sub
lock
lock
push
cmp
fldl
fmul
and
mov
inc
lea
cmc
push
dec
push
xchg
pop
std
push
xchg
ljmp
sbb
push
cmp
movb
mov
sbb
cmp
lret
and
arpl
mov
fsubrs
jl
jge
sub
push
pop
pusha
ret
sub
arpl
insl
jae
push
push
test
loope
sbb
and
mov
add
loopne
and
or
push
fs
xchg
mov
ja
xchg
cmp
adc
mov
stos
loopne
mov
je
fistps
rolb
jno
or
and
sbbb
jb
fcoms
sbb
fs
arpl
pop
or
xlat
sbb
and
imul
stos
test
call
xchg
push
rorl
scas
lds
mov
mov
aas
loope
adc
push
or
xchg
rol
jg
aas
sbb
pop
sbb
push
aam
adc
popa
xchg
das
sbb
push
iret
mov
addb
cmpsl
orl
orl
pop
lods
mov
mov
mov
je
cld
adc
push
mov
insb
mov
lcall
les
inc
sub
and
jp
loop
sub
xchg
pop
in
mov
lcall
aam
mov
mov
adc
sbb
push
loopne
and
das
addb
sub
pop
lods
jbe
mov
mov
cmp
je
add
pop
lods
push
mov
sbbb
lahf
cmp
cmpsl
lds
ret
cltd
xorb
icebp
xchg
lahf
push
rcl
push
xor
push
ljmp
or
testb
dec
stc
rolb
pop
mov
adc
inc
rcll
and
rcr
outsb
jmp
xor
inc
xor
mov
lock
push
mov
push
push
push
pop
out
pusha
mov
aam
or
xchg
or
cmp
cmp
arpl
mov
pusha
ds
mov
mov
xor
jl
movsb
lods
iret
cmp
out
mov
adc
lret
cmp
loopne
dec
jp
ljmp
shrb
stc
shrb
mov
xor
or
fcomps
pop
sbb
iret
inc
mov
dec
sub
and
loope
lock
sahf
shl
mov
loope
dec
fidivrs
pop
jl
lret
cmp
adc
cli
aad
pop
xlat
xor
test
mov
cmc
dec
push
dec
and
add
es
stc
sbb
fwait
lcall
clc
lret
movsl
lock
xchg
lds
clc
mov
adc
push
addr16
push
js
pop
dec
xor
decl
seto
pop
mov
or
or
sti
lock
or
movsb
data16
xor
dec
or
mov
mov
pop
mov
jl
icebp
fdivrs
loopne
xlat
pop
sub
push
ja
rorb
decl
sub
jno
mov
cmp
dec
jl
xchg
xchg
fisttps
fmull
jecxz
clc
shl
pushf
shr
sbb
inc
pusha
int3
inc
mov
into
mov
test
insb
sub
push
out
dec
jo
pop
pop
nop
add
ss
outsb
repnz
pop
scas
add
test
lcall
in
ds
addr16
outsb
xor
es
and
clc
or
sbb
push
jbe
cmpsl
dec
aaa
js
daa
dec
pop
clc
je
mov
cltd
daa
jg,pt
subb
xor
inc
push
mov
popa
subb
cmc
js
cmp
xchg
adc
mov
jecxz
shlb
fmull
clc
push
mov
mov
sub
or
inc
pop
les
cmp
out
loop
pop
add
pop
xlat
jge
clc
mov
movsl
adc
pop
mov
jbe
dec
jp
pop
sub
jnp
xchg
sbb
cmp
pop
and
jecxz
cmp
xor
iret
scas
lods
icebp
jl
and
mov
mov
ficompl
pop
int
into
fwait
out
call
and
subb
testb
mov
push
pushf
sbb
lahf
fimuls
adc
and
cvtpi2ps
and
push
fsubr
inc
clc
push
mov
push
cmp
push
fmuls
fisubrs
hlt
lds
mov
xchg
outsb
pusha
aaa
pop
cmp
push
es
cmp
stos
cmp
repz
ja
add
or
jle
and
jge
xlat
std
dec
mov
nop
mov
push
fimull
xchg
fnstenv
cmp
mov
icebp
fwait
popf
addb
fcmovbe
sub
hlt
lcall
inc
jecxz
xchg
clc
dec
int
ss
mov
mov
inc
andb
dec
out
xlat
inc
add
jle
jl
scas
inc
mov
out
dec
mov
imul
push
add
call
outsb
cmc
popa
pop
addr16
int
or
push
cs
aaa
sub
jg
pop
movsb
mov
repz
sub
lods
icebp
push
cmp
inc
mov
cmpsb
out
dec
aas
pop
pop
pop
clc
push
mov
les
shll
rol
ret
jge
shrl
je
and
inc
movl
movsl
incl
lea
andb
pop
cmpsb
out
jl
cli
jmp
es
mov
popf
dec
dec
xchg
lahf
shl
adc
test
loopne
add
negb
aad
xor
shrb
jecxz
sti
jp
icebp
adc
lcall
sbb
adc
dec
mov
movsb
movsl
sub
out
ds
xorl
stos
and
jbe
icebp
jns
ljmp
imul
jg
jne
jae
dec
lods
mov
in
int3
push
add
jns
sarl
mov
inc
loope
loopne
inc
add
iret
push
push
jne
inc
ds
sub
inc
dec
movb
test
lret
int
push
xor
imul
roll
xchg
sbb
or
insb
mov
lcall
jle
shlb
jae
lcall
pop
or
mov
sbb
scas
test
or
fldl
add
stc
inc
andl
mov
out
out
push
movsl
hlt
imul
cmp
stos
insl
inc
loope
mov
sub
int3
mov
andb
das
or
jl
shlb
jb
jl
loop
sbb
cmp
push
sbb
and
icebp
addr16
ja
jg
push
cld
cmp
xchg
sub
inc
lods
pop
sbb
ja
aad
repnz
pop
hlt
or
imul
inc
ljmp
pop
fwait
push
out
hlt
xor
or
cli
out
fs
mov
aaa
jnp
adc
leave
mov
test
inc
dec
stc
sbb
jl,pt
cmp
jl
popa
or
fstl
dec
cli
iret
cmp
jge
imul
and
adc
inc
inc
aas
pop
daa
cmp
add
orl
jle
testb
pop
dec
mov
cmpb
inc
xchg
adc
push
imul
inc
dec
sbb
xchg
stos
adc
enter
mov
mov
jae
ss
je
mov
mov
and
inc
add
mov
jmp
idiv
ss
sbb
inc
jge
jl
dec
mov
popf
push
jo
push
daa
or
sbb
loope
loop
mov
mov
sub
and
fdivrs
dec
adc
jecxz
pop
jbe
xor
mov
cwtl
inc
xor
faddl
out
ss
ret
add
mov
inc
push
stos
stos
fldenv
jae
int3
rorb
scas
sarb
in
mov
mov
in
sbb
clc
clc
ljmp
test
add
sbb
sahf
xor
hlt
cmp
jl
lret
hlt
imul
dec
scas
shll
cmp
xlat
mov
xchg
mov
nop
cwtl
into
push
pusha
roll
push
je
lret
dec
ret
fadds
or
cli
xor
pop
cmp
xorl
dec
inc
out
and
fsubrs
and
inc
push
jnp
or
icebp
mov
jbe
subb
dec
icebp
andb
mov
fildll
xor
sub
sbb
add
xor
and
jae
fisubrs
jl
pop
into
mov
sbb
cli
ja
lds
outsl
pop
fimuls
xor
jmp
ljmp
mov
adc
push
adc
push
sbb
mov
jne
cli
divl
outsb
arpl
adc
addr16
aad
adc
popa
and
scas
bound
lret
dec
inc
cwtl
movsb
adc
add
and
int
into
jns
push
roll
hlt
addb
aaa
mov
inc
dec
loope
add
inc
jo
inc
xor
sbb
stos
fstps
xchg
jbe
cmpsb
in
dec
xor
push
cmp
xchg
cs
std
adc
pop
test
pop
fmuls
adc
repnz
lock
and
sysenter
pop
lcall
lds
xor
xchg
add
roll
mov
adc
inc
sub
sahf
pop
pop
add
jno
sub
mov
sub
sar
out
add
cmpb
shl
sbb
daa
pop
pop
add
jle
add
pop
cld
mov
pushf
and
sub
pop
lret
add
sub
adc
push
outsb
jecxz
nop
sub
or
xor
rcr
orb
push
cmp
mov
and
xor
or
call
les
aas
cmc
inc
and
inc
cltd
adc
test
push
cwtl
mov
mov
mov
inc
push
fistps
stos
and
int3
pop
cld
testl
sub
pop
mov
inc
iret
and
lock
cmc
adc
in
add
fwait
pop
lar
pop
rcrb
jl
xor
xor
add
inc
cmp
lea
shrl
imul
out
push
dec
xchg
lret
test
mov
clc
es
dec
cs
adc
sub
xchg
mov
cwtl
test
push
sbb
imul
loopne
cld
mov
or
les
xor
daa
mov
cmc
aad
test
mov
pop
add
icebp
adc
pop
hlt
xor
mov
shlb
push
push
repnz
push
insl
stos
cmp
sbb
pop
adc
xchg
faddl
aam
lret
ss
pusha
push
shll
jl
or
add
ret
xchg
mov
push
add
jle
mov
inc
push
sbb
jo
pop
pop
sbb
inc
mov
add
inc
mov
lods
mov
lret
and
sbb
lret
lods
faddp
adc
mov
lret
and
pop
orb
xchg
fsubl
adc
or
and
sub
repnz
mov
ret
add
mov
loop
fs
push
jle
or
inc
xor
cmp
xor
movsb
or
mov
inc
push
rcrl
jp
popa
cmpsl
push
and
mov
jo
xchg
out
iret
push
pop
outsb
aas
sub
out
add
sarl
push
rclb
cmp
dec
out
cmc
ret
ljmp
push
fs
inc
xor
js
mov
mov
sbb
mov
sbb
or
lar
inc
ds
xchg
scas
inc
pop
add
inc
xchg
xor
pop
push
lods
inc
xor
ficoml
mov
xor
or
push
aaa
fucomi
xor
xchg
cmc
sbb
ficompl
and
inc
test
dec
sub
imul
and
les
aad
inc
mov
add
mov
sbb
pop
inc
mov
push
and
fisttpl
pop
pop
xor
or
rcll
daa
sbb
call
adc
jl
cltd
into
mov
in
lret
sub
sbb
subb
pop
jle
mov
bound
sub
pop
rcll
inc
sti
mov
adc
push
fisubl
inc
aaa
mov
pop
mov
fdivr
sbb
xor
xchg
sub
ret
rcrl
jnp
adc
inc
cmp
shrl
dec
shlb
xchg
xchg
or
loope
xchg
pusha
adc
pusha
and
bnd
lret
mov
test
or
dec
rcll
aaa
sar
ret
das
les
jnp
and
rorl
push
mov
jne
mov
addr16
adc
jl
cwtl
or
jnp
out
inc
mov
das
pop
leave
lods
mov
iret
and
shll
mov
jecxz
mov
dec
sbb
mov
inc
mov
cmpsl
lock
xchg
outsb
outsb
xchg
add
das
cmp
adc
jno
sti
mov
rolb
test
push
std
xchg
inc
mov
rcr
pop
hlt
iret
js
jbe
stos
sub
addr16
xorb
out
dec
popa
je
adc
dec
cld
dec
push
push
mov
lods
adc
or
sar
mov
mov
std
mov
stos
or
mov
cmp
scas
das
adc
sbb
aas
jle
add
aam
imul
mov
clc
add
mov
aam
sbb
cld
mov
ret
std
xor
pop
fcmovbe
jne
push
addb
test
adc
dec
add
mov
ljmp
cs
cwtl
aaa
aad
mov
cmpsl
and
aad
inc
outsb
sbb
dec
jb
jo
dec
pusha
ss
xchg
xor
loope
cli
pop
in
addr16
movsl
shr
clc
gs
fndisi(8087
daa
loop
push
mov
push
mov
aam
cmp
into
xor
test
test
mov
call
push
xor
nop
into
or
scas
neg
out
push
or
push
xor
mov
add
inc
sbb
mov
inc
adc
rorb
mov
xchg
and
pop
incb
enter
jo
inc
cmp
loope
xchg
push
or
addr16
push
adc
jmp
loope
or
lods
add
jmp
rorb
sarb
fiaddl
and
push
fldenv
pop
aam
mov
jge
lahf
int
aaa
pop
das
jo
add
cmp
stc
imul
lds
jmp
cmp
jl
sahf
insb
sbb
fidivrs
sub
in
push
add
inc
pop
pusha
test
mov
or
inc
ja
lods
shll
clc
icebp
into
hlt
arpl
iret
aaa
int
jbe
and
arpl
in
sbb
js
pop
jp
adc
push
cmc
add
inc
decb
fildl
ds
arpl
mov
sbb
sbb
nop
inc
xlat
push
out
mov
and
stos
inc
pop
sub
jg
in
in
xchg
adc
fildll
inc
push
push
jp
addl
and
and
jecxz
enter
add
and
in
mov
cmp
push
mov
lods
lds
jl
cmpsb
add
xchg
sub
lock
inc
dec
xor
xchg
sbb
test
addb
psrlw
adc
test
imulb
sub
fdivrl
xchg
push
mov
and
xchg
pop
je
ds
and
xchg
ds
add
xchg
push
xor
sub
mov
sbb
das
add
lret
pop
es
fimull
fwait
loop
inc
push
shlb
and
stc
mov
out
movsb
sub
xor
aad
arpl
xor
scas
mov
pop
sub
cld
sbb
cwtl
stos
shrb
rclb
xlat
and
stc
and
das
iret
or
push
pop
jge
add
daa
jno
sub
lret
mov
stos
lcall
cwtl
jl
fistpll
adc
jp
sbb
icebp
in
loopne
sub
mov
lock
or
call
clc
popa
mov
in
and
pop
or
inc
loope
or
push
and
sbb
cmp
cmpsl
pop
cwtl
lds
mov
cmc
icebp
filds
loop
dec
dec
flds
lea
jge
cld
das
jge
fnsave
sarb
sti
adc
xlat
fs
pop
mov
push
lret
jecxz
and
hlt
test
mov
out
mov
les
ds
or
adc
test
and
aas
xchg
test
xor
dec
frstor
mov
int3
jmp
test
mov
lock
outsb
orl
xor
sub
popa
push
mov
jmp
inc
lahf
or
lea
add
in
loopne
rcl
sbb
loope
push
mov
mov
push
or
or
pop
add
mov
dec
add
call
stos
popa
pop
mov
mov
jle
fs
jns
loopne
stos
les
cs
pop
dec
dec
sub
mov
xchg
adcb
loop
sub
rcr
jle
sub
jnp
cmpsb
xor
mov
or
cmp
lret
dec
inc
ret
push
repnz
cli
repnz
cmp
push
imul
sub
inc
das
or
fwait
inc
pop
cmp
jl
enter
mov
add
clc
or
adc
mov
icebp
lahf
add
mov
mov
bound
sbb
incl
sub
xchg
stos
mov
mov
clc
mov
xchg
push
idivb
loopne
loopnew
cld
aas
test
xchg
jb
imul
sti
daa
mov
add
add
sub
adc
hlt
inc
add
push
lock
cld
push
jnp
rcll
pop
mov
pop
fmull
and
or
lock
xchg
inc
and
inc
fildll
mov
inc
xchg
add
mov
aad
xor
inc
lds
mov
mov
sub
sub
test
mov
sbb
dec
int3
ljmp
rcl
jmp
inc
pop
lock
pop
ret
sbb
push
sub
or
das
lods
movsb
xchg
mov
pop
jo
adc
jecxz
mov
jb
dec
mov
cmp
sub
or
lock
add
or
cli
dec
pop
jg
nop
sbb
leave
inc
ret
sub
push
cmp
pop
or
bound
push
mov
lods
xchg
and
fwait
add
roll
dec
jne
stos
adc
adc
jge
xchg
loope
mov
dec
dec
jmp
xor
dec
mov
daa
xor
loop
cmpsb
fdivrl
daa
xor
mov
bswap
addl
adc
add
or
inc
or
ljmp
and
xchg
sbb
fsubr
xor
mov
loopne
add
lods
test
xchg
ficomps
or
inc
cwtl
arpl
xchg
jae
inc
icebp
cmp
cmp
into
cli
cmpsb
mov
mov
jns
or
xchg
or
aad
ret
mov
mov
jge
push
inc
test
cmpb
jp
daa
ret
push
or
lcall
push
stos
or
or
test
adc
cmp
mov
sub
mov
jle
and
shr
inc
xchg
shrl
call
scas
std
out
pop
pop
sbb
cli
stos
data16
xor
rol
cmpsl
mov
cmp
dec
xor
mov
cmpb
nop
mov
jbe
enter
test
dec
shrb
inc
mov
das
jl
sbb
pushf
push
fmuls
outsb
jg
mov
adc
and
enter
fs
je
sbb
adc
pop
xor
cwtl
xchg
mov
inc
imul
xchg
xor
call
add
pop
fcomp
scas
inc
xchg
movsl
add
repnz
clc
sbb
cmp
cmp
add
pop
jo
xchg
dec
cmp
add
and
ret
pop
push
mov
pop
jno
loop
adc
aaa
shl
movsb
loop
dec
pusha
fmulp
add
adc
jecxz
not
mov
cmpl
jmp
push
jo
loope
mov
fists
das
xchg
sub
insb
mov
js
ret
loop
ficoms
xchg
pop
mov
jbe
stos
ret
adc
fsub
imul
ljmp
popa
call
jbe
xor
push
add
inc
lahf
jle
pop
rclb
lahf
mov
jns
push
rorb
addl
mov
jae
mov
cmp
test
cs
xchg
cmc
outsb
push
icebp
repz
inc
mov
dec
dec
or
inc
xchg
jp
pushf
sbb
ret
and
mov
nop
insl
popf
sbb
xchg
lods
jg
push
adc
aad
mov
mov
mov
loop
icebp
cli
push
insl
push
int
mov
pop
shl
sub
arpl
hlt
pop
aad
daa
xchg
call
loop
lds
xchg
xchg
aad
rolb
dec
mov
incb
loopne
ds
cmc
push
sub
lret
inc
clc
das
mov
lret
mov
dec
outsb
push
pop
pop
pop
lcall
add
ficompl
bswap
cmpl
rol
cmp
xor
or
dec
jg
sub
or
das
pop
sarb
cmp
jle
sbb
cmp
push
jne
cmp
add
or
shll
and
std
iret
xchg
fstps
jge
adc
add
dec
inc
bsr
fildl
out
adc
aam
jl
lret
aas
add
lds
pop
and
mov
leave
addb
clc
fisttpll
inc
pop
sub
pop
xor
push
pop
jp
push
push
mov
and
stos
xlat
pop
mov
add
cmp
jg
loop
popw
les
test
repz
aas
test
jl
pop
mov
add
scas
ss
and
stos
sahf
icebp
dec
mov
dec
push
adc
loopne
cld
mov
push
out
unpcklps
iret
sbb
cmp
inc
xchg
popf
adc
ljmp
mov
xor
lods
xor
mov
aam
ret
xor
pop
out
push
imul
aad
ljmp
mov
in
insl
mov
lret
cmp
inc
arpl
shld
fldenv
inc
push
movsl
in
andb
jbe
loope
in
test
mov
adc
add
inc
mov
out
and
imul
inc
jae
pop
imul
test
cmp
aam
mov
inc
sub
shlb
inc
loope
mov
int
das
mov
sbb
mov
decl
mov
mov
adc
mov
inc
ds
fimull
pop
int
xor
pop
pop
sbb
lock
ret
lret
clc
mov
popf
or
mov
hlt
inc
xchg
fsubrl
les
jp
mov
roll
ret
mov
shll
shrl
or
lods
mov
daa
inc
out
mov
inc
and
in
add
std
mov
into
fxch
es
mov
rcll
push
mov
add
rcll
mov
bound
cmp
sbb
stc
int3
test
xlat
imul
clc
push
or
pop
pop
sbb
lock
cmp
pop
adc
cmpsb
dec
push
jl
test
cmp
pop
mov
dec
ja,pt
aas
inc
and
push
idivb
pop
adc
popa
aad
sub
pusha
sub
push
cmp
mov
pusha
mov
push
push
loop
lahf
sbb
popa
xor
cmpsl
inc
enter
xchg
sbb
cld
push
in
arpl
push
inc
icebp
mov
lds
add
fcmovb
arpl
sub
push
sbb
mov
or
mov
xchg
xorb
int
xchg
jno
sbb
mov
les
inc
scas
pop
inc
fwait
cmp
in
jo
out
adc
jl
xchg
in
fs
add
pushf
rol
lea
lahf
push
mov
sbb
test
fldenv
lret
gs
test
frstor
and
mov
and
call
outsl
jns
scas
and
sub
imul
sub
add
add
pop
cmp
lcall
push
push
jbe
pop
mov
mov
adc
pushf
and
cld
out
incb
mov
and
cmp
add
mov
and
es
cmp
inc
xor
jge
dec
shrb
push
ror
jo
aas
adc
hlt
lret
mov
jge
xor
shll
jl
pop
outsl
mov
push
mov
mov
ljmp
dec
inc
push
or
or
push
inc
xor
ror
dec
movsb
ss
push
ret
push
xor
insb
clc
roll
movsb
jp
fistpl
fwait
clc
jp
inc
push
mov
sbb
sbb
iret
fstpl
call
inc
int3
mov
in
mov
cmp
andb
daa
dec
cld
push
loopne
xor
adc
mov
in
fldln2
out
mov
mov
cmpsb
imul
out
sub
test
push
mov
and
jl
inc
rolb
push
mov
jnp
mov
call
push
fidivs
aas
jne
js
fidivl
orl
loope
push
jmp
aam
mov
jle
or
add
shll
adcb
stos
cmpl
sbb
lcall
rcr
push
mov
and
push
out
sub
cmpsl
xor
and
test
push
stos
jo
test
fisubl
sbb
inc
out
aaa
les
mov
lock
inc
arpl
xchg
les
xchg
movsb
test
and
adc
testb
inc
or
xor
pushf
pop
lods
es
dec
mov
movsb
jl
inc
out
andb
dec
popa
int3
push
add
mov
ret
fstpl
cmp
out
scas
dec
sbb
add
int
in
inc
inc
sti
ss
mov
cmp
push
mov
aaa
xor
hlt
outsb
out
lds
sbb
es
sbb
jl
pop
pop
or
shll
sub
xchg
push
popf
lock
popf
nop
sub
jge
dec
cld
stc
sbb
inc
sub
out
inc
scas
call
daa
pop
and
imul
add
inc
push
or
sti
mov
ljmp
push
jmp
sub
lds
popa
mov
into
sarb
or
or
popa
or
xchg
jle
cwtl
popa
push
in
arpl
loop
imul
dec
add
mov
pop
std
cmp
push
add
cmp
js
jmp
adc
push
sub
imul
xchg
jbe
lcall
popf
fnstsw
push
cmp
out
mov
add
je
mov
lret
loop
sahf
push
fwait
into
sbb
cs
inc
jne
mov
ror
enter
mov
cmp
loopne
pushf
push
cmp
inc
out
or
pop
add
iret
add
das
loopne
gs
cmp
ss
jg
mov
dec
and
or
adc
push
mov
pop
loopne
pusha
lcall
xchg
or
and
sub
xor
shll
mov
outsl
dec
lock
jo
sub
mov
mov
inc
dec
pushf
mov
adc
pop
test
test
push
adc
hlt
insb
push
and
fdivl
mov
lahf
cld
test
shlb
scas
pop
in
mov
subl
and
add
ljmp
jmp
mov
adc
clc
adc
fsubrs
inc
lahf
outsb
stc
xor
pop
sbb
je
inc
notl
sbb
rolb
xlat
pop
and
lock
mov
daa
call
arpl
decb
out
inc
dec
add
mov
lods
xchg
mov
movsl
test
shlb
repnz
nop
xchg
mov
lods
lret
repnz
inc
add
jmp
cltd
gs
push
je
std
stos
cmp
or
mov
sub
imul
fwait
lock
fwait
push
aam
aaa
mov
sub
scas
mov
mov
pop
loope
cli
and
mov
js
cs
xchg
inc
loopne
or
mov
test
lock
cmp
sbb
jecxz
cmpsl
dec
cld
dec
mov
inc
arpl
sub
les
pop
jns
lock
lock
xchg
roll
int3
add
mov
or
sub
std
int
loopne
inc
pop
cmpl
pop
sub
rol
js
movsb
dec
fwait
sub
pop
xchg
clc
scas
xor
inc
repz
ret
ficomps
ss
or
inc
xor
mov
dec
fdivr
dec
xchg
or
pusha
rolb
xor
inc
and
jb
pop
pop
xor
cmpsb
mov
stos
inc
sbb
loope
add
add
aam
jl
repnz
test
cmp
je
xchg
outsb
out
pop
and
mov
pop
xchg
das
pop
pop
or
mov
add
dec
add
or
push
lock
aaa
jne
cmp
add
dec
and
loope
rclb
push
stc
adc
push
outsb
adcb
jge
xor
movsb
cmp
mov
and
pop
cmpsb
cmp
pop
int
mov
inc
mov
sbb
into
cld
dec
das
push
or
lcall
jmp
lar
jecxz
cltd
dec
in
mov
test
clc
mov
jmp
jb
adc
inc
cmc
and
test
jmp
and
loopne
add
mov
and
xor
dec
sub
cmp
inc
jns
mov
out
test
inc
in
xor
fbld
and
scas
rcl
fbstp
jb
pop
outsl
mov
add
repz
sbb
push
fldz
and
leave
jo
jmp
pop
xor
push
mov
and
inc
push
stos
add
adc
std
in
rol
add
shrl
xchg
jae
aas
push
fdivs
jno
mov
mov
cmp
sub
sbb
clc
flds
xchg
imul
adc
stos
xchg
push
push
orb
mov
loop
lods
insb
mov
or
sub
jmp
sarb
jbe
call
mov
add
iret
sbb
adc
icebp
sub
test
repnz
ret
cmpsb
push
scas
mov
xor
add
push
mov
call
and
dec
jae
dec
or
add
lock
stos
clc
arpl
test
mov
psrld
xchg
shr
dec
add
mov
sbb
pusha
mov
sub
std
fwait
jno
fs
sbb
in
sahf
pop
lods
mov
or
xchg
mov
jmp
mov
ret
adc
jns
rorl
adc
and
pop
imul
std
sbb
xor
sub
loope
jp
leave
nop
subl
loope
inc
loope
pop
or
xchg
jle
mov
push
push
or
mov
ja
or
dec
or
cmp
aas
mov
sub
adc
mov
aaa
mov
mov
add
mov
jge
pushf
movsl
test
fcompl
inc
jecxz
xor
cltd
pop
arpl
popa
test
or
movsl
jmp
adc
inc
sbb
or
aaa
imul
lret
cld
sub
in
and
shlb
sub
pop
xchg
inc
ret
mov
xor
push
pop
int
insb
mov
into
test
adc
scas
or
push
and
test
mov
and
into
lock
sub
push
jp
xor
sbb
cs
jecxz
addr16
push
int
or
lcall
and
addb
arpl
out
cwtl
mov
jg
push
jae
pop
repz
xchg
xor
adc
lret
faddl
imul
pop
and
ss
lods
or
mov
mov
cmc
mov
les
dec
ljmp
mov
dec
push
or
rolb
jle
adc
jle
dec
xor
loop
and
or
inc
je
cmc
lock
nop
lcall
push
int3
stc
or
aam
jnp
popf
pop
adc
xorl
das
adc
pusha
test
push
cmpsl
popf
sbb
xchg
rcrb
loopne
push
sbb
jmp
outsb
sub
adc
test
movsb
sub
fimull
mov
js
hlt
aam
sub
xor
les
ds
clc
mov
sbb
sbb
outsl
pop
sbb
pop
pushf
mov
movsl
xor
popa
orl
push
xchg
cmp
sub
stos
cmp
push
push
mov
das
or
mov
insb
add
bswap
shrb
aaa
push
lahf
js
aad
mov
inc
hlt
sub
and
iret
sub
pop
mov
rorl
and
daa
outsb
lea
sub
push
sbbb
lds
icebp
loope
inc
adc
ljmp
imul
push
ret
rcrl
mov
or
roll
inc
jle
xor
add
and
js
insl
dec
jp
jl
cmc
pop
push
and
rolb
stc
je
jl
and
sub
sbb
mov
cmpsl
jge
test
hlt
xor
mov
xor
jno
and
jb
repnz
pop
inc
jmp
dec
sub
adc
pushf
mov
push
lods
ds
mov
lcall
inc
imul
add
add
sbbb
mov
push
mov
sbb
aam
rcll
int3
xchg
push
mov
xorb
cmp
sub
out
ljmp
cli
dec
push
test
jo
jnp
fcomip
pop
adc
mov
into
inc
stos
cwtl
mov
fimull
push
pop
mov
xor
add
sbb
andb
fwait
ret
pop
inc
ja
fbld
shll
adc
pop
lahf
movsl
sub
imulb
or
scas
icebp
jecxz
leave
stos
popf
filds
cmpsl
js
cld
or
into
ja
and
cmc
cmc
xchg
shll
rorl
jmp
push
adc
and
shlb
mov
cmp
inc
mov
js
fldt
fistpll
stos
mov
xor
out
push
dec
add
xor
sub
xorb
mov
mulb
cli
mov
addr16
inc
add
xor
push
sub
out
add
sbbl
orb
fildll
xchg
stc
es
pop
aad
iret
cld
adc
xchg
cmp
fimuls
adc
xor
push
mov
popf
pop
fcompl
mov
movsl
push
add
jp
mov
inc
pop
mov
sbb
fldt
mov
adc
shlb
mov
xor
xor
roll
xchg
xchg
mov
out
insb
out
add
stc
mov
mov
cmp
lock
jp
outsb
xorb
or
mov
bswap
sub
shrl
adcl
xchg
je
leave
mov
in
mov
jns
inc
lahf
push
mov
mov
outsl
js
lret
test
addr16
loopne
jp
popl
cmpl
cmpsb
push
push
popa
stos
les
out
push
cmc
inc
adc
push
insb
push
std
daa
and
and
clc
jmp
and
xchg
outsl
jle
sub
scas
xlat
test
xchg
mov
cltd
out
xorb
addb
lret
sbb
xchg
mov
mov
mov
push
lea
inc
insb
sbb
xchg
lds
ret
cs
frstor
push
insl
push
and
clc
in
cmp
jnp
paddd
int
xlat
gs
jns
mov
sahf
cs
jecxz
mov
cmp
sbb
dec
push
dec
insl
cmpsb
js
stos
scas
inc
cmc
cmc
gs
out
insl
ss
decb
cltd
sahf
fistl
jl
push
pop
lock
or
inc
mov
aam
aaa
leave
jae
cwtd
daa
jle
or
push
cmp
pushf
xchg
sbb
mov
sbbb
call
jne
or
cs
adc
insl
adc
out
or
and
jle
mov
mov
sbb
cmp
test
les
daa
add
rorb
dec
jnp
cmc
popl
or
movsl
xor
hlt
mov
cmpsl
cltd
cmc
xor
fldenv
pop
push
cmc
repz
stos
popf
mov
adc
popf
decb
mov
push
in
cmp
cmp
dec
push
popf
dec
loope
mov
and
in
es
jecxz
xor
mov
ret
loopne
nop
out
lea
push
pop
lahf
adc
cwtl
mov
subl
jle
cs
in
sub
mov
and
or
jae
pop
add
repz
or
mov
and
aas
movsb
dec
dec
out
sub
push
lret
pop
mov
cmpsb
xor
test
cmpsl
ljmp
mov
inc
mov
movlps
shl
sar
lret
jg
push
in
add
mov
movsl
adc
incb
mov
sbbb
xchg
dec
loopne
aas
mov
xor
bound
xchg
lods
pop
lods
inc
push
mov
jge
adc
push
inc
push
sub
bound
movsb
mov
mov
jmp
ffreep
adc
repnz
out
enter
xor
dec
sahf
xor
call
dec
push
mov
push
cmp
push
dec
dec
test
sbb
cmp
add
test
loopne
add
jns
sbb
addl
push
lahf
out
cli
or
xchg
call
cmpsl
rclb
sarl
cmp
cmp
or
mov
cwtl
or
sbb
add
js
mov
ret
lock
lea
mov
movsl
into
xchg
sarb
push
psraw
cmp
push
shll
bound
icebp
aad
push
repz
pushf
mov
dec
inc
data16
pop
dec
push
in
dec
push
inc
rcrl
out
pop
sub
daa
int3
faddl
scas
in
inc
dec
lahf
lea
stc
test
push
sub
leave
sbb
lods
mov
je
xor
mov
mov
loope
sbb
mov
dec
cmp
jmp
xchg
xchg
mov
sub
or
icebp
fsubr
inc
out
loop
mov
mov
cld
stc
push
push
jmp
stc
sti
pop
push
xor
into
jecxz
sbb
incb
mov
jno
push
insb
mov
xchg
mov
inc
sahf
lds
mov
push
push
cli
dec
popa
or
sub
int
inc
add
movw
hlt
jg
movnti
hlt
dec
jnp
and
pop
add
push
fistpl
sbb
fwait
out
mov
sbb
jge
xchg
shlb
in
scas
mov
and
xchg
imul
add
cmc
data16
mov
fdivs
xchg
ret
xchg
test
out
xorl
mov
fists
scas
clc
sub
imul
adc
cmp
lcall
adc
cmpsb
shl
mov
push
pushf
add
cli
sbb
cwtl
jg
add
push
jno
mov
into
mov
mov
mov
loopne
mov
pop
xchg
dec
pop
jl
loopne
je
and
mov
fbstp
pusha
add
mov
ljmp
mov
jne
push
cmp
mov
lea
jg
sbb
and
pop
fadd
jle
pop
mov
xchg
pop
lods
scas
adc
inc
pushf
sbb
xchg
movsb
sub
push
mov
push
bnd
ret
mov
andl
sbbl
insl
in
jecxz
mov
insl
push
negl
cmpsb
or
cmpsl
cmpsl
shlb
movsl
lods
mov
jp
xchg
dec
jno
mov
gs
mov
cmp
and
and
insb
lret
pop
fcomps
sub
pop
pop
jb
add
std
push
loop
pop
mov
xchg
push
push
sahf
pop
and
leave
cwtl
lret
fs
cmpsl
push
test
and
mov
xor
icebp
xchg
out
lds
lahf
loope
or
mov
fidivs
xchg
iret
push
adc
pop
mov
dec
xchg
sub
in
push
lds
push
push
dec
mov
dec
rcll
les
adc
stos
ds
xchg
mov
jb
pop
cmp
mov
mov
add
std
and
ja
ficoml
decl
add
fmull
xchg
cld
or
jecxz
mov
add
xor
mov
test
outsl
mov
and
add
mov
sti
outsb
ljmp
jg
pop
sar
addr16
inc
push
mov
mov
inc
fs
loope
fimuls
and
jle
inc
lock
mov
pop
mov
add
sub
push
lods
scas
fisubl
iret
shlb
pop
lods
add
insb
jmp
repnz
subb
mov
icebp
pop
sbb
daa
mov
pop
or
ds
in
imul
push
sbb
inc
andps
pop
add
scas
insl
inc
sub
popf
movsb
call
out
mov
xor
and
cmpb
dec
fsubl
mov
insl
ret
sub
adc
sub
sub
scas
outsl
mov
jbe
arpl
push
jb
cmpb
mov
xor
xchg
gs
fs
in
leave
dec
xchg
int
data16
jns
fcomip
mov
fistl
jo
jle
int
aaa
imul
or
jo
and
mov
int
hlt
pushf
push
mov
je
movsb
cmpsb
sub
add
sub
xor
push
pop
ljmp
test
ficoml
xchg
sbb
int3
mov
xchg
and
ret
lret
inc
dec
xor
test
xor
adc
inc
in
dec
push
ds
sbb
insb
setle
fnstenv
mov
rclb
fcom
subb
add
mov
add
in
stos
adc
mov
call
addr16
mov
mov
cmc
and
sub
inc
out
sub
mov
sbb
mov
xor
cmp
iret
xor
mov
dec
add
hlt
mov
orb
movsl
arpl
xchg
enter
decb
fmull
call
sar
aad
xor
push
inc
aad
jmp
mov
add
test
push
cmp
popa
mov
nop
mov
loopne
mov
and
fistl
and
mov
lods
cmp
sbb
sti
pop
xor
into
ror
iret
lock
inc
mov
xor
inc
inc
gs
sub
push
or
mov
lods
icebp
pop
push
cmpl
add
mov
andb
jne
pop
enter
or
pop
xchg
mov
test
xchg
lock
jnp
call
pop
cmp
pop
and
les
push
ja
or
scas
and
pop
loopne
aaa
xchg
clc
mov
mov
adc
shll
cli
int
push
jno
push
lods
test
adc
pushf
mov
ds
sub
cmp
pop
add
lods
sbb
mov
ljmp
push
fisttpl
insl
sbb
je
test
das
sub
push
inc
and
cmpsl
sub
loopne
or
loopne
xor
push
add
dec
pop
xor
int3
sub
test
xchg
pop
adc
xor
jbe
mov
push
mov
lret
leave
dec
push
inc
add
push
xor
mov
or
aas
ret
push
and
jbe
push
aam
not
xlat
mov
cmc
cmpsb
pop
cs
jmp
jle
xchg
pusha
fadds
push
add
push
and
test
and
fists
mov
push
outsl
ljmp
rcrb
xchg
add
pushf
add
jb
movsl
pmaxub
pop
add
xor
pop
or
loope
out
jo
jle
ret
test
cmc
xchg
clc
pop
push
aam
ljmp
imul
adc
ja
adc
or
adc
jnp
pop
loope
sub
ja
inc
outsl
repnz
push
ret
jmp
dec
test
cld
cmp
mov
nop
inc
mov
lods
popf
mov
cli
inc
into
dec
xchg
iret
leave
push
test
xor
fldcw
fldlg2
lods
aad
pop
jle
inc
xchg
mov
test
leave
outsl
movsb
push
xor
mov
adc
mov
mov
mov
and
inc
stos
aas
shrb
sbb
test
lahf
or
push
sbb
cmp
push
popl
divl
scas
mov
test
pop
pop
inc
jp
scas
lahf
xchg
pop
sarl
push
cmp
or
shlb
dec
fldt
fs
movsl
out
sub
cli
dec
loope
push
adc
xlat
inc
dec
outsb
xchg
mov
clc
test
scas
mov
aam
cmp
ds
mov
rorl
sti
add
ss
addl
sar
push
and
enter
mov
mov
inc
xchg
adc
dec
jp
ljmp
mov
stc
inc
mov
and
sub
stc
xchg
add
lcall
jmp
mov
mov
leave
cltd
mov
insl
and
adc
movsb
sete
pop
popf
lods
mull
pop
xchg
loope
sbb
test
mov
or
mov
dec
lahf
sbb
mov
xor
add
or
xchg
subb
in
js
xor
pushf
fs
cwtl
bound
in
dec
add
cmp
nop
shlb
sbb
xchg
lea
cmp
jb
adc
movl
fimull
xor
mov
lods
lods
push
in
nop
idivb
mov
cmp
jno
xor
mov
pop
add
std
push
adc
dec
test
add
dec
cmc
dec
inc
insl
dec
and
and
jb
fdivrl
adc
iret
lret
popf
mov
mov
arpl
dec
cli
scas
push
xchg
and
mov
mov
xchg
add
lods
push
test
inc
js
jg
inc
es
or
inc
lods
movsl
or
subl
gs
bound
push
insl
cvtps2pi
push
mov
dec
aad
jnp
mov
xorb
das
xchg
lods
pop
dec
loope
das
mov
out
insb
or
std
enter
mov
push
xor
inc
pop
xchg
js
cmp
cmpsb
push
imul
xor
aam
push
shr
mov
ds
in
out
push
sbb
pop
cmp
lock
xor
mov
push
outsb
outsb
inc
enter
loope
stos
inc
dec
out
jmp
loope
mov
push
cmp
sbb
lock
mov
pop
call
sub
jmp
or
pop
cmpsb
mov
xchg
icebp
test
jbe
pop
jle
mov
and
adc
sub
pop
bound
xor
lret
mov
shll
fcmovbe
add
sub
mov
shrl
inc
pop
stos
push
outsb
in
idivb
jp
pop
ja
push
mov
sub
popf
xchg
add
adc
adc
iret
imul
movsl
test
xchg
out
sub
call
dec
cwtl
adc
xchg
imul
es
push
sub
insl
sub
push
loope
mov
dec
mov
pop
or
repnz
mov
loop
aam
jb
sub
lahf
cli
daa
fstl
lods
add
add
dec
cmp
movsb
xchg
decb
outsb
dec
mov
mov
and
shll
push
jb
adc
lods
shl
dec
cwtl
dec
mov
mov
test
sti
and
stos
mov
out
jno
fwait
mov
adc
js
pushf
push
in
mov
fistps
and
aam
xor
leave
out
icebp
or
dec
sbb
mov
test
repnz
ljmp
and
add
das
xor
add
and
arpl
test
jnp
xchg
mov
xchg
aaa
out
push
push
push
mov
data16
dec
les
mov
xlat
pushw
and
mov
das
mov
js
aad
or
and
in
sub
jo
dec
inc
sbb
fisttpll
ljmp
sti
adc
push
stc
in
add
pop
lods
testb
sbb
popa
std
mov
inc
inc
cmp
mov
sub
idivl
cmp
inc
inc
xor
cmpsl
test
insb
mov
clc
adcb
xchg
adc
mov
xor
in
mov
mov
sub
sarb
push
movsl
cmp
adc
cwtl
xchg
push
jmp
lahf
jbe
add
std
popf
dec
movsb
cltd
stc
pop
ret
adc
in
sbb
lods
push
ret
dec
std
mov
sbb
js
lret
mov
xchg
jno
pop
aad
fcomp
xchg
jmp
pop
shr
cwtl
clc
pop
add
cmp
pop
pushf
stc
aas
fs
aas
and
pop
jae
lahf
and
iret
in
lock
orb
sarb
mov
dec
or
jmp
jg
pop
lods
inc
push
hlt
and
or
test
testl
lods
inc
push
jns
fdivrp
adc
mov
xchg
jge
mov
dec
sbb
int
mov
xchg
add
in
adc
add
pop
aad
aas
jnp
lcall
or
cld
dec
and
adc
dec
insb
jl
and
mov
loope
push
add
das
sub
sub
loop
jmp
inc
xchg
fstl
lods
in
mov
xor
and
aas
sub
and
xorb
loope
and
and
fldcw
or
xor
xchg
sub
pop
dec
push
sbb
fadds
mov
cmp
cwtl
hlt
dec
xchg
scas
test
mov
insl
sbb
xchg
sahf
sbb
dec
or
sbb
and
test
das
cld
pushf
cli
add
das
popf
push
mov
xlat
adc
cmpb
inc
sarb
dec
mov
in
lea
cmp
xor
inc
or
xor
lods
into
or
mov
push
xchg
mov
or
int
mov
fimull
js
mov
jp
ret
fistpll
adc
mov
jo
mov
pop
andb
sub
test
loop
inc
pop
xchg
or
pop
push
jge
adc
and
sub
sarl
es
jae
not
inc
mov
inc
adc
pop
jo
or
pop
cwtl
jle
inc
shll
fdivrs
mov
aad
sarl
popa
add
jmp
enter
jmp
mov
xor
and
icebp
mov
pusha
popa
add
popl
cmp
and
clc
adc
add
pop
cwtl
mov
test
push
nop
int
mov
add
cmp
mov
pop
scas
adc
mov
inc
lock
pop
pop
dec
push
add
mov
data16
ljmp
lds
add
nop
mov
add
call
popa
outsl
stos
dec
push
inc
das
int3
adc
push
cli
lods
es
sbb
mov
mov
femms
or
xor
or
inc
cmp
imull
outsl
sbb
and
dec
or
mov
in
inc
mov
mov
clc
sbbl
mov
inc
xchg
js
sub
cld
mov
rcrb
cmp
int
and
scas
sub
push
mov
loope
add
add
jge
test
mov
and
push
or
int3
or
pop
push
xchg
dec
lahf
mov
movsl
sti
jbe
xor
mov
adc
subb
subl
jl
pop
sbb
mov
fldenv
addr16
dec
fmuls
add
hlt
push
data16
fdivrp
fcoml
cld
adc
cmpsl
xchg
sbb
lcall
mov
rol
ljmp
jg
lldt
pop
mov
pop
sbb
pop
aaa
add
ret
movsl
lock
inc
test
fcompl
mov
call
push
daa
mov
scas
inc
cmp
or
daa
add
in
mov
in
jo
ret
rclb
movsb
inc
mov
or
add
xor
or
enter
dec
adc
sbb
inc
outsb
mov
sbb
dec
mov
mov
mov
loopne
push
addr16
arpl
rcrl
lret
in
movl
mov
mov
sub
inc
daa
sbb
pop
sbb
xorb
test
sti
sbb
int
out
xor
sub
stc
mov
inc
popa
inc
cmp
mov
push
stc
jg
sbb
dec
loop
nop
cmc
stos
add
adc
cmp
shll
add
cmpsl
sbb
xor
dec
mov
or
cmpsl
dec
cwtl
cld
cwtl
aam
pusha
and
xchg
or
shrb
jmp
std
and
jle
sbb
ljmp
rol
mov
mov
addl
xchg
inc
outsl
sbb
jb
orps
cmp
inc
sub
movsb
lods
or
dec
dec
inc
adc
xchg
jns
jmp
nop
sbb
inc
and
mov
and
jp
pop
or
test
inc
sbb
add
cld
xor
iret
adc
push
jl
mov
adc
into
lea
cwtl
lods
ret
cmp
sbb
xchg
sbb
and
add
lock
shlb
lret
push
pop
mov
pop
and
in
inc
cmp
dec
dec
cmp
inc
adc
test
cs
mov
loopne
sbb
adc
sbb
xor
mov
mov
pop
shrb
mov
aaa
pop
or
sub
cmp
frstor
iret
or
loope
out
mov
push
fsubs
out
jl
loope
cli
test
ret
loop,pt
push
mov
cmp
inc
xor
fdivrs
xor
cmp
and
addr16
jle
jno
in
xor
fldcw
outsl
gs
or
scas
mov
jmp
test
fst
jns
push
test
ljmp
outsl
inc
test
hlt
jmp
js
test
call
xor
imull
mov
test
mov
xchg
dec
iret
sarb
lock
les
push
cmpsl
dec
pusha
push
scas
or
mov
in
imul
bound
cld
loop
adc
imul
dec
mov
dec
insb
jmp
cmp
aas
jecxz
js
shl
loop
ret
or
arpl
xchg
leave
clc
pop
mov
add
jb
fisubl
jno
sbb
hlt
sbb
pop
pop
lods
xchg
push
pop
jno
and
add
sbb
push
mov
pop
ljmp
addr16
outsb
bound
hlt
inc
sub
xchg
fnstsw
sub
shl
loope
sub
aam
aad
xor
cmp
mov
fdiv
inc
xor
xchg
add
adc
xor
pop
ljmp
sbb
daa
mov
mov
addr16
inc
dec
push
xchg
add
cmp
sahf
rcl
push
mov
xorl
xor
xchg
test
mov
cltd
add
repz
lahf
mov
clc
and
adc
adc
sub
cmp
out
repnz
mov
dec
decb
test
and
rclb
shr
sbb
mov
fsubl
fdivs
cmp
add
sarb
and
dec
jmp
shlb
dec
inc
cmpsb
mov
fnstenv
push
or
jne
push
imul
into
pop
adc
cli
mov
cwtl
das
pop
lea
and
ret
xor
sbb
xchg
xchg
xchg
cwtl
stc
outsb
xchg
mov
push
jg
inc
mov
dec
sub
adc
sti
mov
ret
das
lock
sbb
test
in
mov
push
enter
inc
out
or
xchg
icebp
mov
sbb
jne
lcall
mov
sti
mov
sarb
dec
aaa
sbb
mov
cmp
dec
pop
xor
lret
or
push
cld
mov
std
out
mov
scas
inc
stos
inc
or
or
cmp
jecxz
jp
addr16
mov
pop
addb
pop
pop
mov
aaa
mov
divl
adc
scas
adc
fidivrl
xchg
or
cmovns
or
cmc
loope
cwtl
mov
add
sarl
aad
insl
mov
mov
out
sub
lcall
lea
pusha
push
sbbl
std
das
aad
bound
dec
inc
js
iret
repz
cltd
xchg
xchg
out
loop
pop
pop
cmp
or
sbb
clc
and
mov
in
dec
cmp
aas
cmpsl
xor
adc
dec
jnp
and
test
lea
jl
clc
jp
sub
roll
rorl
or
xor
add
bound
cltd
inc
inc
adc
add
and
mov
lods
lods
cmp
dec
and
mov
adc
add
and
mov
into
mov
out
clc
bound
add
popa
or
sbb
sub
inc
pop
sbb
mov
pop
inc
scas
xor
pop
adc
pop
add
jns
lret
testb
push
cmpsb
imul
mov
dec
dec
fs
xor
mov
hlt
mov
sahf
cmc
pop
xor
mov
push
ret
test
and
ret
push
and
mov
call
and
in
sbb
mov
push
jg
ret
movsl
fistl
lods
pop
sahf
lods
fimull
daa
sbb
cmp
lret
cmp
push
ljmp
or
je
jg
and
push
subb
fsub
call
mov
dec
sub
loopne
dec
fwait
mov
add
inc
decl
loop
inc
aam
adc
cmp
pop
test
mov
inc
mov
jmp
mov
aas
cmpsl
xchg
mov
pop
add
sub
shr
pop
test
fiaddl
adc
clc
pop
fwait
push
add
sub
insb
dec
in
mov
push
test
mov
inc
mov
lods
pop
jl
sbb
ret
dec
nop
out
es
adc
jp
leave
pusha
or
aaa
arpl
sarb
inc
in
xor
push
push
or
xchg
or
and
jmp
add
and
orb
pop
push
cmp
jp
pop
push
mov
fwait
mov
adc
or
sub
lret
push
xor
das
jl
in
add
xchg
push
mov
adc
or
xor
cltd
mov
mov
aas
jl
dec
iret
add
loopne
hlt
mov
xchg
test
jg
cld
push
shll
cltd
inc
clc
es
lcall
or
addb
and
xchg
mov
push
xchg
loop
test
stos
sbb
add
jne
cmpsl
clc
jae
loopne,pn
and
lret
sbb
add
push
psubusb
inc
adc
push
sbb
shll
inc
sub
out
js
inc
fdivrl
das
jle
jmp
mov
movsb
push
jmp
mov
dec
insb
inc
das
and
mov
and
clc
pop
or
mov
ret
xchg
outsl
dec
dec
add
out
icebp
sbb
lahf
pop
dec
imul
loopne
insl
dec
xor
inc
scas
lahf
icebp
push
test
mov
test
xchg
cli
mov
in
and
je
sarb
mov
xchg
dec
sbbl
pusha
mov
lret
push
mov
ja
push
xor
js
in
mov
ljmp
cmp
push
jne
adc
outsl
push
popa
aam
loopne
test
into
and
or
jo
mov
sti
sub
mov
push
test
in
xorb
jp
mov
xchg
push
lock
imul
incb
int3
jo
in
adc
lret
xlat
scas
rol
es
xchg
adc
decb
mov
pop
cli
lods
mov
outsl
rorl
mov
cwtl
stos
add
add
cmpsl
dec
sub
mov
test
or
outsb
int
bound
sti
inc
ja
ss
inc
nop
test
adc
mov
jecxz
adc
ds
jg
adc
daa
or
pop
sbb
scas
lods
clc
cmc
xchg
inc
hlt
movsb
adc
sub
or
push
icebp
mov
mov
inc
pcmpgtw
ljmp
cwtl
test
outsb
mov
icebp
idivl
and
inc
inc
cld
jg
sub
pop
sbb
testl
int
test
or
lods
mov
mov
fisttps
add
push
mov
out
cmc
pop
xchg
gs
push
mov
mov
sub
mov
stos
mov
adc
rcl
call
xor
pop
icebp
lods
je
sbb
sbb
push
repnz
clc
lahf
cmp
pop
and
mov
test
sub
cmp
dec
add
icebp
dec
aas
inc
loop
arpl
in
fsub
push
in
mov
movswl
aas
test
cmp
pop
stos
add
sub
in
cli
sarl
imul
fcmove
ss
aam
sbb
mov
dec
mov
xchg
cmc
mov
call
hlt
shrl
xor
ss
incb
outsl
dec
pop
dec
jp
les
daa
pop
inc
and
or
xor
lods
dec
dec
rcrl
mov
mov
jp
push
push
scas
movsl
fs
adc
subb
jae
rol
inc
ficoml
shrl
sbb
add
add
repnz
ss
arpl
rep
xor
scas
pop
shlb
push
mov
rcrb
ds
das
mov
andb
js
imul
xchg
mov
inc
jl
jmp
mov
lock
mov
jmp
add
and
xchg
fwait
add
push
mov
dec
cmc
pop
fmull
add
jmp
xchg
loopne
decl
xor
pop
jecxz
sbb
dec
adc
les
divb
dec
call
pop
sub
mov
mov
sub
push
mov
push
push
enter
stos
add
mov
lahf
xor
pop
jp
pop
icebp
dec
cltd
bound
cwtl
sbb
push
xor
rolb
mov
out
clc
pop
out
repnz
add
lea
push
push
outsl
test
dec
sbb
nop
jo
sub
subb
ljmp
or
adc
jne
add
add
jge
xchg
dec
addr16
std
rcrb
aaa
iret
add
cmp
sub
stc
xchg
xor
adc
xor
xchg
lret
aaa
outsb
push
sbbl
imulb
gs
sbb
loop
or
or
test
adc
rcrb
ja
lret
mov
lret
addr16
mov
inc
int
fs
mov
xor
fidivrs
mov
ret
inc
ljmp
cld
mov
dec
sbb
cmp
dec
mov
gs
cmp
cmc
push
dec
clc
and
movsl
imul
add
inc
and
pop
jbe
frstor
jo
adc
mov
dec
clc
imul
mov
test
inc
test
jmp
inc
pop
call
add
enter
aad
mov
cmp
xor
jno
mov
rolb
out
push
push
or
scas
jb
stos
inc
cld
xchg
shlb
orl
mov
icebp
iret
xchg
cmp
nop
ret
add
scas
data16
jns
aas
je
jp
cwtl
insl
jge
pop
adc
shl
mov
mov
xchg
pop
outsb
cmc
push
call
leave
or
inc
add
leave
jmp
movsb
mov
jb
rorb
in
push
and
push
push
cmp
lock
cmp
push
cmp
jmp
loope
sub
movsl
push
test
mov
les
cmp
loopne
add
jns
add
sbb
jl
push
fs
mov
mulb
lock
jle
mov
pop
or
push
shl
push
push
xor
ljmp
int3
jo
cmp
push
movsl
popa
pop
enter
dec
mov
cmp
jmp
aam
fcoml
and
xchg
ss
es
mov
rcrb
in
testb
cs
das
inc
scas
or
sub
xchg
pop
fistpl
cmpsb
pop
xchg
pop
lods
and
mov
mov
std
lret
fwait
in
fcomp
test
xchg
std
or
je
daa
out
iret
pop
and
mov
outsb
fisubs
dec
loope
push
cli
or
loopne
cmp
mov
out
test
popf
cltd
push
mov
gs
adc
jmp
sub
jl
shr
mov
adc
cmp
cmpb
xchg
cld
sub
and
pushl
pushf
in
xorb
aam
in
js
pop
xchg
sbb
stos
dec
lods
cmp
cmpb
mov
inc
in
arpl
sahf
or
ljmp
pop
dec
aam
jle
fistl
pop
push
js
mov
pop
and
adcb
push
push
scas
push
pop
sahf
adc
add
adc
mov
or
std
andl
jne
inc
pusha
xchg
xor
and
adc
out
dec
fldt
pop
sbb
adc
add
popa
sub
sub
pop
sub
bound
jb
or
add
iret
jno
enter
out
jg
imul
or
cmc
ds
les
dec
popa
pop
icebp
add
test
mov
inc
mov
cwtl
dec
push
clc
mov
push
xor
xor
icebp
xor
in
jmp
ret
fistpll
pusha
movsl
jnp
aam
dec
push
scas
ss
decb
xchg
rcrb
inc
push
daa
add
out
pop
or
mov
jbe
or
aam
push
gs
xlat
mov
adc
sbb
dec
mov
cmpb
cli
xchg
das
mov
lods
jg
xchg
jge
jg
xchg
test
adc
xor
jnp
mov
shr
std
adc
push
mov
lahf
mov
xchg
jo
ret
cmp
fisttpll
shlb
fnstenv
stos
push
jmp
lods
sti
scas
in
mov
add
cmp
push
mov
add
cwtl
sbb
ljmp
aad
lahf
cmp
add
dec
lds
push
push
sub
aam
movsl
dec
icebp
ret
dec
iret
xchg
shrb
cmpsb
cmc
cli
out
sbb
or
jmp
cli
and
std
aaa
push
push
mov
sbb
out
pushf
stos
cli
es
adcb
mov
add
mov
addl
pop
movsl
xor
les
loopne
test
rorb
jecxz
pop
sub
fwait
mov
cmpsb
cmp
mov
jbe
lds
popf
sub
cmp
inc
decb
std
sbb
jbe
cmp
shl
sarb
fdivp
and
add
shrb
fstl
jno
rcr
push
test
pop
mov
pushf
xchg
ja
jb
xor
and
inc
dec
pop
loopne
pusha
pop
ret
mov
sub
push
cs
pop
cmp
loopne
jno
cmp
sahf
mov
popa
loope
mov
mov
cmp
cmp
cmp
scas
push
sar
fucomp
clc
loop
xchg
dec
jo
ljmp
pushf
jno
or
imul
mov
mov
or
loopne
iret
jp
lcall
jns
mov
cs
sub
mov
psubd
scas
adc
dec
sbb
adc
mov
mov
cltd
test
add
je
inc
inc
cmp
and
push
je
and
fnstcw
ljmp
pop
rcrl
pop
add
sbb
xchg
sahf
mov
xchg
mov
and
add
cmp
dec
jecxz
inc
add
mov
adc
and
pop
jecxz
xorl
and
mov
sahf
sub
mov
ja
or
mov
movsb
shlb
push
push
inc
test
outsl
push
add
lods
inc
xorl
lahf
or
mov
push
mov
int
mov
add
add
push
add
jae
mov
add
and
je
je
ljmp
or
jmp
mov
inc
pop
jecxz
sub
es
xchg
call
pop
jl
lds
inc
pop
addr16
cld
inc
mov
dec
push
push
imul
jl
rcll
js
call
int3
cmpsl
rorl
in
dec
fsub
sbb
inc
xchg
les
mov
lea
fbld
push
aam
das
cltd
xor
icebp
loope
cmp
sbb
fisubs
mov
jbe
sbb
fmulp
mov
lock
flds
in
fsubr
xchg
xor
push
stc
sbb
push
sbb
dec
outsl
cmpsl
cs
add
jle
mov
andb
dec
data16
cmp
add
subb
iret
jb,pt
inc
pop
aas
dec
rcr
ror
lahf
imul
loope
sub
divl
mov
cmp
or
cmpsl
jo
nop
push
roll
in
movsb
sub
sub
cmp
mov
test
test
icebp
mov
adc
dec
das
mov
adc
into
push
and
push
mov
jmp
flds
dec
and
cld
adc
sbb
jge
xchg
xor
cwtl
inc
das
mov
cli
and
sub
xchg
mov
outsb
nop
push
mov
push
dec
mov
xchg
popa
sahf
push
fs
pop
int
outsb
bound
cmpl
in
test
sbb
inc
dec
dec
fisttpl
jnp
inc
xor
icebp
mov
out
inc
adc
pop
jmp
mov
sub
pop
and
insl
mov
in
push
add
out
testw
aad
fildl
xchg
js
mov
loopne
icebp
and
push
xor
mov
mov
shlb
lods
cs
pop
stos
or
clc
mov
dec
ret
mov
push
jo
inc
push
lds
push
adc
push
cmp
stos
call
mov
adc
add
inc
xlat
jne
insb
pusha
jge
xchg
inc
xor
and
aaa
xor
jecxz
dec
cmp
cmpsl
mov
xlat
js
rorl
loopne
scas
jecxz
call
pusha
loopne
sahf
and
mov
ltr
sbb
iret
mov
xor
add
repz
inc
lret
inc
scas
adc
sbb
sub
and
and
popf
inc
ja
mov
ss
icebp
or
pop
jmp
andl
aas
add
es
lahf
xchg
xor
push
cld
pop
sbbl
mov
cltd
pop
sbb
or
das
pop
iret
bound
in
jecxz
lea
out
or
stc
pushf
xchg
inc
mov
mov
cmp
lcall
add
cwtl
cmp
pop
lcall
adc
jmp
mov
mov
inc
mov
jle
xor
jbe
pusha
ss
loopne
jno
jecxz
sbb
out
xchg
arpl
sahf
adc
lock
aam
mov
mov
push
push
mov
cli
sbb
testb
test
mov
std
je
xor
nop
mov
jno
push
xlat
mulb
out
jmp
mov
leave
outsb
push
inc
test
ds
mov
addr16
pop
jmp
jne
call
add
mov
sahf
ret
pop
lahf
jo
jecxz
jno
mov
cs
jle
les
adc
push
ret
jg
rorl
int3
out
mov
outsl
lcall
add
cmp
dec
sbb
mov
mov
cmpl
pop
inc
sbb
std
mov
imul
std
pop
push
aas
cmp
int3
arpl
mov
sarl
rclb
loopne
cmp
mov
adc
pop
or
mov
lods
loopne
loope
std
aaa
js
lods
cmp
cld
adc
aam
xor
ljmp
or
outsb
nop
mov
xchg
or
pop
mov
iret
or
jp
or
cs
in
mov
sbb
sub
jmp
pop
scas
loop
adc
nop
mov
movb
sbb
dec
aas
aam
js
jle
or
inc
mov
cmp
pop
pop
dec
cmpl
repnz
or
xchg
stos
outsb
mov
push
sbb
ficoml
or
aaa
rcr
push
mov
and
pop
loop
dec
pushl
js
gs
pop
shlb
pusha
ss
lret
ja
inc
leave
lret
insl
popf
xchg
inc
aam
mov
scas
push
and
mov
push
enter
rorl
ret
psrad
xor
ret
jbe
adc
dec
ficoml
icebp
add
jp
aam
pop
shr
or
imul
adc
lret
jle
scas
sbb
mov
mov
and
and
mov
mov
mov
inc
sub
lahf
rclb
xchg
and
fimuls
lcall
lock
lret
mov
or
pop
fdiv
mov
or
les
es
rorb
js
loopne
clc
das
lock
aad
jo
arpl
mov
sahf
jb
xor
nop
add
stos
cmp
sub
lea
in
add
mov
popa
or
seto
dec
cmpsb
pop
mov
add
mov
mov
imul
mov
or
inc
or
ret
mov
call
inc
and
shrb
out
pavgw
hlt
adc
mov
insl
test
andb
les
ret
xlat
sbb
mov
push
rcr
and
cltd
mov
or
mov
lahf
ss
cmpsb
sbb
lret
inc
xlat
lahf
dec
cmpsb
js
inc
push
cltd
pusha
pusha
icebp
mov
aam
test
arpl
add
test
sub
stos
je
ret
sub
ret
ljmp
jp
imul
inc
loope
orl
or
mov
icebp
or
std
aam
push
xchg
pop
fnstsw
cmp
shlb
jecxz
bnd
sub
iret
sub
pop
jno
in
pop
nop
daa
cltd
rcll
inc
int3
inc
push
iret
push
gs
cld
mov
add
test
scas
ficoms
es
xor
test
dec
or
insb
in
imul
xlat
clc
out
xchg
ja
jecxz
xchg
pop
call
icebp
imul
insl
cmpsl
or
add
ss
cli
lods
or
xchg
sbb
mov
xor
pop
imul
aas
pop
add
inc
cli
cmpsl
jb
cli
js
addb
adc
fdivl
dec
pop
loopne
push
gs
fadds
add
imul
cmpl
fs
cmp
or
test
les
inc
std
sar
lods
arpl
adc
cs
or
fmul
cwtl
xchg
push
lea
cwtl
movsl
xchg
mov
push
and
cld
cmp
jnp
sub
push
cmpb
pop
sub
mov
sti
orb
cmp
jb
repnz
add
aas
arpl
mov
std
push
hlt
aas
cmp
mov
test
push
adcl
or
jne
imul
popl
add
xchg
stos
stc
jle
adc
dec
push
jno
cli
mov
mov
in
insb
lret
jmp
push
cmp
out
or
jecxz
cmpl
adc
jle
loope
xchg
rcll
push
outsb
test
rcll
dec
or
mov
aad
movsl
imul
push
loopne
adc
imul
bound
add
ds
mov
dec
out
mov
aaa
sub
jmp
subb
fiaddl
mov
arpl
push
decb
mov
aaa
fnstsw
lahf
rcr
dec
out
repnz
sbb
mov
sbb
movsl
pop
pushf
mov
and
cmpsl
sub
cmp
dec
mov
adc
out
push
addr16
mov
mov
mov
loopne
add
inc
inc
lcall
roll
xchg
adc
inc
fwait
sahf
adc
and
adc
add
sbb
xchg
inc
fwait
ss
sarl
mov
or
sahf
jecxz
insb
test
loopne
mov
pop
insb
mov
adc
mov
inc
inc
add
icebp
push
add
and
int
movsb
add
lock
inc
cmpsl
mov
push
adc
loope
popa
sub
sub
pop
gs
add
movb
stc
mov
or
mov
cmpsb
adc
and
fwait
inc
jns
scas
sub
sub
mov
ret
or
xchg
or
inc
call
addb
cmp
adc
jecxz
and
ficomps
adc
loop
push
ds
rcll
call
xor
sbb
sahf
sub
and
sbb
adc
loop
lods
negb
mov
insl
mov
test
aaa
mov
xor
mov
or
sub
nop
and
inc
mov
pop
pop
mov
push
pop
jecxz
push
mov
mov
loopne
add
je
xlat
jp
lret
test
std
sbb
call
mov
xor
jg
or
or
add
daa
or
cld
or
mov
lret
jmp
add
pop
out
or
sub
movsb
mov
push
sub
ss
aam
add
sbb
popa
bound
jg
inc
mov
imul
or
fidivl
pop
xchg
fwait
push
pop
mov
loope
jg
jl
xor
fsts
cmpsb
cmc
dec
mov
inc
loopne
inc
lahf
xor
xchg
call
data16
inc
pop
add
mov
lcallw
cwtl
jecxz
add
inc
inc
add
arpl
push
xchg
adc
mov
ficomps
add
ja
jl
inc
mov
or
fcmovnu
push
cmp
xorb
jmpw
xor
or
in
pop
call
addl
inc
add
mov
add
rorl
into
dec
insb
mov
lods
xchg
cmp
xor
jbe
sahf
mov
mov
sbb
filds
punpckldq
cmp
lock
adc
out
lds
sbb
mov
ffreep
add
cld
jg
std
mov
movsb
pop
shlb
aas
and
cwtl
cwtl
or
inc
aad
mulb
data16
sub
aas
sbb
or
imul
dec
xchg
sub
mov
ja
mov
nop
inc
or
mov
adc
clc
mov
lock
int3
dec
hlt
mov
gs
test
clc
push
mov
xor
daa
or
jle
push
mov
ds
jmp
sti
stc
jmp
ljmp
add
mov
dec
std
push
pop
adc
js
jns
inc
add
mov
pop
jmp
fistpl
icebp
les
sbb
sbb
dec
xor
mov
cmp
inc
aas
out
clc
hlt
push
cli
test
testl
push
xor
orb
loope
out
lahf
inc
loop
rsqrtps
xchg
sub
xor
hlt
cmp
fisubrl
push
jecxz
loopne
outsb
fisubrl
or
mov
mov
sbb
xchg
andl
mov
adc
push
nop
jmp
stc
push
mov
jno
push
daa
rclb
data16
subl
sbb
rcrl
inc
xchg
aaa
jno
mov
push
aam
push
sub
inc
cmpsb
jae
cmp
mov
mov
mov
aad
jl
inc
cld
or
ja
sahf
ud2
fcmovnbe
xor
push
into
jno
inc
ret
inc
sbb
movsl
out
cmc
add
push
sbb
nop
add
lock
pop
out
sbb
sub
xor
push
stos
aas
sbb
dec
std
cwtl
fwait
jp
addr16
push
popa
mov
outsb
inc
inc
and
mov
and
xor
outsl
fdivrl
mov
push
lock
or
fimull
add
divb
lock
loope
std
incl
adc
std
cmp
sbb
incb
add
cld
rcrb
mov
test
xor
ss
push
push
xor
sti
and
loop
adc
test
mov
iret
or
scas
out
test
xor
cmc
ja
sub
dec
add
mov
push
sbb
lret
or
push
mull
stc
fwait
std
mov
movsl
xor
fimuls
shrb
inc
out
pop
call
push
inc
push
dec
or
ret
pop
mov
decb
mov
and
mov
and
jl
cmp
pop
lcall
out
popf
add
cld
xlat
insl
cltd
sbb
in
cmp
jo
mov
mov
pusha
mov
ret
lock
mov
pop
sti
xchg
xor
rol
adcl
fdivl
xchg
stos
dec
shl
adc
xchg
daa
js
jne
lcall
pop
pop
pushf
cs
inc
mov
adc
shlb
out
test
mov
jmp
add
roll
movl
aaa
jp
mov
clc
jb
loopne
clc
in
mov
in
int3
add
jg
mov
es
mov
in
leave
xor
or
dec
fwait
dec
cltd
scas
mov
mov
dec
push
jns
xor
and
fadd
mov
mov
pop
fildll
cmp
or
mov
pusha
lret
loop
add
push
jge
mov
pop
jo
push
enter
or
dec
mov
mov
scas
ljmp
mov
and
cmp
sbb
ljmp
inc
inc
cli
xchg
mov
dec
test
jle
push
jbe
mov
ss
test
lahf
rorl
mov
into
inc
arpl
pop
mov
mov
arpl
pop
cmpsb
jbe
mov
xorl
or
mov
sbb
decl
stos
inc
mov
inc
sub
cmp
jmp
aad
mov
pushl
lock
push
ja
fdivs
xchg
mov
shll
cli
pop
ja
cmp
jecxz
sub
or
xchg
icebp
cmp
or
xchg
add
jmp
test
aas
sub
cmp
cmp
cmc
mov
inc
lods
or
add
and
dec
add
hlt
loope
sub
stc
mov
push
push
push
fmuls
or
hlt
mov
rolb
pop
sahf
or
mov
cmc
fxch
std
and
push
mov
int3
add
data16
fimuls
xchg
add
xchg
cmp
aad
mov
les
sbb
and
push
xchg
out
xor
icebp
rcrb
ljmp
shll
aaa
loop
ret
pop
cld
popa
aaa
fadds
enter
roll
or
stos
sub
mov
cmp
add
aas
and
loopne
lock
aad
dec
and
sub
mov
mov
add
xchg
adc
mov
outsb
jmp
out
xchg
add
add
push
mov
in
jecxz
aas
dec
mov
or
or
fdiv
pusha
scas
or
bswap
or
mov
xlat
mov
xchg
sbbl
movsl
push
dec
mov
xchg
bound
mov
sbb
mov
pushl
setb
sub
subl
jns
int3
sbb
mov
push
sbb
bound
mov
fistps
cmpsb
pop
pusha
ret
call
pushf
inc
out
sbb
int3
inc
mov
dec
aaa
jl
cmp
fisubl
jns
pop
or
lret
adc
ds
pop
lods
invd
ret
stc
adc
mov
mov
mov
adc
dec
loope
imul
test
imul
mov
dec
jl
call
pop
sar
and
sbb
sbb
in
cmp
gs
or
adc
cmp
cmpb
rorb
inc
faddl
subl
fisubrl
xlat
push
cwtl
sbb
add
sbb
jg
adc
movsl
dec
add
ret
jmp
jo
or
mov
je
jp
xor
pop
adc
adc
shrl
inc
cmp
ret
mov
out
add
push
jg
xchg
push
clc
insb
push
sbb
les
shl
and
notl
push
inc
fcmovb
cmp
aaa
adc
adc
push
mov
xchg
hlt
mov
add
mov
shr
fidivrl
push
add
pop
sbbb
add
incl
fdivrs
xchg
ja
rcll
pop
icebp
or
xchg
xor
or
adc
jmp
and
and
xchg
jmp
and
jmp
fadd
xlat
jnp
jg
pop
jmp
xchg
push
repnz
stc
mov
add
pop
mov
xchg
int
lahf
lock
add
aaa
sahf
push
cmp
push
in
stc
popl
in
ss
xlat
push
mov
push
es
pop
loopne
shrb
mov
mov
sahf
ret
and
mov
jl
push
decl
inc
dec
dec
test
xchg
add
xchg
fadd
cld
mov
push
push
in
cli
in
xchg
cld
adc
push
mov
jno
sbbl
sarl
or
stos
or
outsb
pop
pop
sub
sbb
ss
jae
imul
mov
and
js
rolb
pusha
and
call
jo
fistl
cmp
dec
xlat
push
inc
inc
push
mov
cmp
lcall
mov
cmpsb
rclb
lock
mov
es
push
jb
xchg
fisttps
xchg
adc
arpl
ss
sbb
or
push
push
aam
lcall
inc
sti
stos
xchg
insb
sub
outsl
fs
stos
dec
orl
xlat
xchg
int3
ljmp
dec
or
mov
xor
outsb
and
xor
add
stos
jo
pop
xchg
aas
push
sub
imul
add
inc
jbe
inc
dec
pop
je
push
popf
mov
enter
adcl
aas
push
call
lock
pop
mov
inc
mov
fcoms
movsb
lret
mov
stos
repnz
mov
inc
xchg
mov
sbb
cmp
mov
dec
loopne
pop
hlt
and
xor
clc
cmp
cld
aam
lods
dec
push
mov
lcall
mov
pop
mov
aad
mov
mov
push
ret
adc
cmp
imul
inc
mov
dec
xchg
mov
add
ret
icebp
into
in
pop
mov
xchg
jl
ss
xorl
pop
add
icebp
das
ja
xor
and
push
add
scas
push
sbb
push
rclb
cmp
imul
push
rorb
sub
repnz
sti
fldl2t
ljmp
incl
test
adc
pop
and
flds
test
mov
jbe
aas
cmp
sub
cmp
loopne
push
shll
dec
pusha
or
xor
mov
push
or
cmp
push
cld
imul
mov
cmc
mov
mov
dec
xchg
cmp
lret
clc
fildll
pop
jg
cwtl
loopne
rorb
or
cmc
iret
pushf
mov
fwait
subl
lods
mov
add
hlt
push
orl
imul
inc
clc
or
scas
mov
aas
insb
scas
mov
or
loopne
dec
jo
cmp
leave
lods
xchg
xor
mov
xchg
and
sub
mov
rorl
cld
out
inc
std
add
jp
popf
mov
pop
add
sub
push
imul
dec
aad
cld
mov
rorb
popf
sbb
push
inc
push
or
xchg
jl
sub
mov
iret
sbb
scas
aaa
cmc
aam
pop
add
mov
sti
outsb
hlt
jecxz
ficomps
mov
add
and
push
lahf
and
or
cli
inc
add
mov
cwtl
sub
mov
xor
inc
or
test
imul
jg
shll
in
push
in
dec
xor
push
jmp
jmp
inc
pop
lock
sbb
sar
test
xlat
clc
sbb
bound
lods
popa
dec
or
lock
jg
popf
roll
mov
aam
sbb
mov
lret
or
rorb
inc
dec
xchg
push
sub
fsubp
push
push
mov
and
movsl
out
mov
out
test
call
aam
ret
movsb
sbb
out
push
xchg
mov
icebp
fmuls
mov
incl
rorb
sbb
push
fs
lahf
sbb
sub
sbb
jmp
mov
ret
or
outsl
andl
mov
xlat
movsb
cmp
add
jae
decb
mov
jle
mov
mov
jno
je
adc
and
das
adc
jno
mov
inc
mov
push
xchg
int
rorb
daa
or
pop
dec
adc
ss
cmpsl
in
xchg
pop
or
push
sbb
test
adc
xchg
adc
pop
sbb
sbb
and
sar
movsb
adc
repnz
fcmovu
inc
inc
mov
ret
sub
push
test
sti
xchg
and
ret
setae
incb
pop
pop
add
into
orw
pusha
push
cmp
inc
lret
call
push
fwait
add
add
lea
inc
xchg
push
jns
loopne
mov
adc
pop
inc
repnz
add
cmp
push
stos
fld
pop
popf
shrb
sub
mov
aas
aad
enter
out
scas
inc
xor
lea
inc
xchg
add
adc
xchg
mov
aas
xchg
out
test
iret
or
sti
sub
push
cli
mov
and
in
clc
inc
or
lods
push
dec
xlat
xor
cmp
loopne
clc
repnz
jne
adc
cld
push
pop
rcrl
xchg
dec
repz
outsl
fsubs
pusha
mov
lock
sbb
adc
jo
cmpsl
xchg
imul
sarb
insb
movsb
out
mov
scas
hlt
iret
sub
xor
sti
mov
push
lods
popf
sub
int
push
adc
lds
dec
inc
dec
push
call
and
mov
xchg
cmpsl
movsl
popf
jno
xor
loop
inc
add
ljmp
cld
sub
mov
aas
arpl
int
cmp
pop
aad
rcl
int3
loopne
push
hlt
or
lret
lcall
aad
fnstenv
xchg
xchg
fstl
mov
mov
adc
popa
test
and
add
jg
idivl
je
fiaddl
mov
fs
jnp
stos
call
rdmsr
push
push
pushfw
or
stc
nop
push
cs
sbb
sarl
icebp
mov
push
xadd
sub
out
mov
push
adc
out
mov
adc
out
aad
clc
scas
mov
add
push
pop
addl
inc
jno
jge
adc
add
mov
imul
incb
pop
addr16
xchg
or
out
nop
leave
jo
lea
push
outsl
ds
mov
js
and
cmc
mov
cltd
sbb
dec
cmp
iret
or
add
icebp
sbb
aaa
inc
sub
pop
add
mov
push
pusha
fidivrs
mov
call
clc
arpl
cmpsb
xor
lods
jne
ljmp
sub
hlt
inc
push
aas
mov
and
incb
rorb
or
hlt
pop
addl
es
pop
push
xchg
xchg
aam
jb
pop
adc
inc
sub
pushf
lock
cmc
jle
jg
adc
in
adc
pop
inc
inc
xlat
xchg
lods
out
or
and
cmp
jbe
addl
jle
cmp
je
jbe
jge
push
addb
mov
in
inc
and
aas
clc
mov
push
testl
push
pop
mov
xchg
mov
xor
insb
lds
pop
lods
and
mov
rolb
sbb
and
icebp
sbb
stos
loopne
sbb
insb
cmp
sbb
mov
adc
rorl
pop
or
das
lret
inc
pop
call
dec
jns
mov
imul
pop
imul
repz
sbb
mov
sbb
or
fbld
pop
insl
addb
mov
fbstp
dec
sbb
jo
dec
iret
pop
mov
ja
or
je
jge
movl
cs
repz
mov
inc
rorl
andl
test
sbb
mov
cmp
pop
ret
aad
push
bound
imul
cmp
push
and
mov
cmp
pop
fdivl
push
enter
daa
stos
sub
mov
iret
sbb
jnp
dec
scas
dec
hlt
xchg
setne
sub
jno
stc
inc
test
cmpsl
jmp
add
aas
push
lcall
lahf
adc
lret
push
int
pop
and
bound
pop
or
or
mov
or
jecxz
fcomip
lods
pop
cltd
jg
fdiv
mov
pop
xlat
sbb
adc
outsl
push
jb
xor
rorb
xorl
loopne
jmp
push
sbb
lods
push
jne
lock
rclb
stos
aas
sbb
lcall
int3
push
cwtl
insb
add
mov
pop
sub
enter
xchg
mov
or
pop
mov
add
xor
sbb
mov
cld
fstps
lock
shlb
cmc
dec
xor
mov
push
add
mov
lock
gs
inc
es
in
add
sub
jnp
pop
popa
xor
xor
cmpsb
arpl
and
and
loope
inc
mov
adc
add
or
mov
int3
mov
mov
mov
shlb
in
mov
dec
mov
cmp
ficomps
clc
inc
and
cld
sub
subl
inc
div
pop
xchg
inc
inc
pop
push
push
rclb
sbb
lret
andl
pop
loop
sarb
mov
adc
sar
sbb
jno
arpl
xchg
test
pop
or
sahf
push
mov
int3
ret
inc
repnz
in
neg
push
adc
fwait
divb
jg
jp
pop
stos
push
push
faddl
inc
mov
out
outsb
movsb
jg
incb
and
cmp
repnz
jo
cld
and
fsub
pop
jecxz
call
insl
push
inc
pop
mov
rclb
ret
xchg
lcall
ficoml
lret
in
es
loop
add
xor
jecxz
jg
addl
aad
or
xor
lea
mov
mov
add
xchg
push
pushf
cmp
cmpsb
in
pop
pushl
push
das
xabort
add
icebp
jns
push
push
push
call
out
leave
push
movsl
add
jns
mov
std
pushl
mov
ds
adc
imul
pop
mov
xchg
add
repz
pop
push
mov
mov
pop
in
mov
mov
inc
sbb
fwait
lods
pop
sub
in
xorb
sti
add
dec
sub
rcrb
mov
jbe
xchg
cmp
leave
xor
mov
cmpsl
add
jp
stc
mov
cld
dec
test
or
sbb
dec
or
add
loop
loop
cwtl
insl
pushf
inc
cmp
cmpsb
movsl
jge
std
inc
pop
xchg
and
scas
add
cmc
lods
iret
inc
pop
lcall
ljmp
push
int
es
shlb
mov
in
divps
jno
pop
loopne
mov
inc
pop
mov
push
mov
out
aas
push
or
insb
mov
loopne
mov
mov
mov
jbe
xchg
and
fdivp
dec
stos
push
pushf
out
decl
xor
das
dec
pop
mov
shll
xor
cld
push
mov
add
xor
and
pop
sbb
das
sarl
popa
dec
and
dec
clc
fistpll
movsb
inc
mov
lods
es
push
int
call
jp
sub
inc
mov
adc
iret
fsin
popf
pop
les
push
jecxz
icebp
pop
out
dec
js
xchg
mov
sbb
xchg
test
xchg
es
in
sbb
cld
add
mov
aas
mov
ljmp
dec
and
stos
dec
add
pop
lea
flds
push
mov
push
sub
decl
adcl
add
inc
or
cmp
adc
mov
and
icebp
cmc
xchg
and
loope
mov
push
lcall
repz
xor
or
inc
call
push
cs
movsl
sbb
mov
sub
mov
jb
popf
orb
or
mov
faddl
lock
dec
cli
in
loop
daa
jle
popa
dec
ficoms
push
andl
nop
data16
cs
push
sbb
push
mov
outsl
inc
stos
loope
mov
ds
cwtl
hlt
lods
sub
xor
xchg
mov
add
adc
add
aam
je
xor
test
add
push
cld
loope
add
js
iret
pushf
jp
fdivrs
pushl
loop
lock
lea
jne
dec
call
push
movsl
pop
lods
push
xor
push
subb
cmpsl
mov
ss
subl
mov
in
adc
lahf
or
dec
and
fnstsw
jg
jl
xlat
aad
fisttpl
and
pop
pop
mov
jecxz
sub
jge
or
cmc
mov
inc
mov
mov
ljmp
inc
push
std
test
xlat
sahf
jae
sti
pop
retw
inc
cmp
je
inc
roll
push
out
inc
jg
popf
lahf
addr16
xchg
jle
rolb
test
in
imul
gs
pop
or
outsl
xchg
jmp
fsts
fsubs
pop
cmc
jg
lahf
fwait
xor
sti
mov
inc
jae
std
fnstsw
nop
cmp
cwtl
sub
shr
loop
adc
jle
int
std
jle
add
xchg
test
add
sahf
loope
inc
adc
in
xchg
sbb
push
pop
push
jbe
sbb
clc
sub
inc
mov
inc
lret
inc
leave
lock
movb
sti
sbb
xlat
rcr
push
aaa
or
inc
push
dec
clc
mov
add
push
incb
jnp
out
jg
mov
daa
cmp
push
jne
push
xchg
cmp
mov
fwait
sti
bound
movsb
jle
adc
sbb
mov
ret
dec
push
ljmp
adc
mov
imul
outsb
mov
ja
stos
jo
in
repz
push
arpl
and
clc
sbb
add
andl
mov
dec
loopne
addr16
xor
or
or
repnz
lahf
jp
bound
push
daa
pusha
insl
rcll
pop
mov
xchg
ljmp
adc
ret
mov
push
js
std
xchg
sahf
jecxz
clc
mov
leave
pop
js
and
cmp
aaa
sti
fwait
adc
inc
mov
clc
fimull
lret
cmp
addl
mov
jl
pop
sarl
pop
sub
inc
cmpsl
push
sub
pusha
mov
repnz
mov
not
or
jb
scas
push
sbb
xchg
test
add
aam
shrl
cld
or
or
imul
out
inc
clc
leave
icebp
and
push
mov
test
ret
stos
imul
inc
clc
pop
jecxz
mov
xchg
shll
add
push
loope
popf
jp
pop
test
push
outsb
jle
int3
sub
mov
add
rcrl
stc
jae
fwait
adcb
popa
inc
outsl
pop
cmp
sub
or
push
lea
dec
xchg
movsl
scas
dec
mov
sbb
dec
popf
and
sbb
jl
fiadds
sub
addb
faddp
pop
outsl
lock
sub
adc
sbb
jno
adc
aaa
pop
cmp
jb
decl
outsb
scas
pushf
xor
stos
ret
iret
xor
add
lret
pop
adcl
fists
pushl
inc
fwait
ret
mov
or
mov
or
adc
movsl
jo
mov
aas
or
nop
jb,pn
in
movb
fildll
arpl
xchg
scas
loopne
outsb
jmp
cli
ret
repnz
inc
inc
xor
inc
or
adc
in
pushf
lods
lret
push
pop
int
mov
stos
pushf
int3
mov
inc
fsubr
hlt
inc
jmp
xor
nop
or
popf
and
sub
pop
sub
inc
ja
inc
and
scas
lods
lock
mov
lock
mov
cmp
in
pop
jge
incb
insl
test
std
rorl
inc
xor
sarb
xlat
lahf
sub
cmpsb
into
and
pop
jecxz
jg
mov
ss
add
dec
xchg
ja
ja
adc
mov
lea
and
xor
dec
or
mov
int3
inc
push
xchg
inc
push
in
pop
int3
cltd
data16
xchg
iret
inc
cmpsl
out
mov
sub
push
ljmp
xchg
pop
call
jl
and
pop
add
and
nop
mov
incb
clc
sbb
jmp
ljmp
sbb
scas
jmp
dec
jbe
cli
scas
jnp
and
test
sub
adc
ds
shr
dec
jmp
inc
adc
in
and
frstor
pop
mov
jne,pt
or
aam
dec
std
jp
cmp
sbbl
push
cld
jg
in
and
sbb
lock
outsl
rolb
mov
and
outsl
mov
fsubs
aaa
push
dec
push
jl
pop
test
add
add
pop
cmp
adc
rcr
push
adcb
mov
addr16
and
notb
insb
int
jl
dec
aaa
ret
xchg
add
fadds
add
in
mov
push
cmpsb
fwait
sbb
ret
or
xchg
adc
ret
sbb
inc
and
adc
pusha
cmpsl
cli
and
dec
aaa
jp
pop
mov
push
stos
rcr
lahf
movsl
add
xor
mov
cmp
push
bound
push
ret
jl
push
into
push
adc
sbb
cld
mov
xor
pop
xchg
xorb
push
fs
cmp
mov
cs
mov
daa
xor
cmc
incl
jnp
scas
dec
js
ret
fisttps
jge
xor
jo
and
dec
movsl
mov
mov
cmp
lret
xchg
lods
xor
sbb
daa
rcr
scas
and
aad
test
mov
push
mov
and
mov
or
or
and
and
rcrb
test
fldcw
repnz
bound
sahf
es
jmp
cmpsb
or
or
mov
or
and
decl
sbb
jg
loopne
or
push
inc
into
mov
xchg
sub
rorb
outsl
cmp
in
push
cld
and
push
lock
clc
aas
div
pop
push
filds
pushf
arpl
xlat
add
test
sti
and
sub
mov
and
sbb
lret
into
lock
das
sbb
push
movsb
inc
pusha
outsl
jmp
and
fildl
cmp
dec
xor
jp
mov
add
int3
push
mov
jecxz
xor
xchg
add
lcall
sbb
pop
stos
push
outsb
loopne
jo
xor
aad
lahf
enter
inc
adc
or
leave
jmp
dec
xor
filds
xchg
cltd
jae
lods
and
add
pop
mov
ret
std
shlb
xchg
jo
push
dec
xchg
addb
cld
or
dec
inc
mov
iret
es
pop
mov
movsb
js
pop
iret
fdiv
sbb
dec
or
mov
dec
mov
jnp
inc
pop
incl
pop
mov
das
mov
pop
pop
lcall
rorb
xlat
mov
int3
and
lret
insb
and
ficompl
ret
xor
jecxz
pusha
adc
call
mov
fstps
dec
and
xor
je
jge
insl
loopne
push
push
or
std
orb
inc
jecxz
jne
jno
out
idivb
sbb
xchg
mov
lret
scas
jge
jbe
sahf
adc
dec
adc
pop
std
xor
daa
std
lcall
cmp
push
test
data16
stos
dec
rep
pop
add
push
and
jecxz
ret
push
push
pop
lret
jmp
inc
pop
mov
nop
gs
aaa
loopne
mov
rcrl
mov
or
jecxz
inc
mov
adc
xchg
iret
dec
jns
dec
shll
pop
adc
lds
sub
clc
or
dec
in
inc
cmp
sub
xor
aas
hlt
ret
dec
or
stc
inc
jmp
xchg
test
repnz
sub
mov
sub
mov
sbb
stos
je
lock
dec
mov
xor
dec
add
into
mov
roll
mov
add
add
mov
sub
add
add
mov
arpl
insl
sub
enter
std
inc
es
fdivr
mov
xor
test
incl
in
inc
decl
push
lea
lock
push
loopne
fisttps
in
adc
leave
ret
add
movq
sub
add
add
out
xchg
sarb
outsl
cli
or
ret
bound
testl
lock
rorl
pop
xor
sub
dec
movsl
loop
sbb
dec
les
mov
adc
test
into
pop
jae
lcall
clc
pop
cld
push
js
push
push
je
push
lea
push
adc
adc
add
and
fiadds
push
push
clc
push
push
ss
hlt
pusha
push
in
mov
inc
push
dec
cmp
or
adc
daa
cmp
enter
xchg
push
push
push
cmp
scas
pop
push
rcrb
rcll
shl
outsl
addr16
push
popf
fisubl
jmp
push
fdivrp
lock
clc
push
jo
jb
mov
insl
cmp
push
cmp
push
cmp
outsl
popa
jg
rcr
pop
add
shrl
dec
arpl
push
jns
mov
lret
push
jp
push
push
dec
mov
data16
or
lock
add
xor
jb
or
mov
fsubs
lret
jbe
shl
mov
js
je
clc
dec
cld
call
imul
sub
jns
lcall
scas
mov
fdivr
push
xor
in
push
jne
stc
lock
jae
xor
imul
cmp
sbb
sub
stos
jbe
imul
xor
mov
pop
push
rclb
push
add
xchg
push
and
inc
jle
js
int
cmp
push
cli
add
mov
push
jne
imul
mov
add
bnd
lret
std
mov
fsubrs
fsub
in
push
sbb
incl
ja
pop
sbb
add
decl
fwait
negb
jb
push
lock
xor
push
jno
js
inc
xor
push
ljmp
dec
gs
push
hlt
pop
clc
stos
jnp
pextrw
adc
push
jp
or
into
sahf
sarb
xchg
cwtl
in
xor
lahf
xor
sub
call
nop
and
xor
dec
add
cld
aad
outsb
lret
bound
scas
lock
push
and
jne
cwtl
outsb
jbe
lds
or
ja
dec
fcomps
bound
add
lods
mov
and
pop
pusha
xor
push
add
push
push
out
subl
data16
pop
sub
es
push
hlt
bound
enter
add
push
xor
pop
adcb
aam
pop
xlat
loope
std
mov
push
ja
test
inc
dec
xor
jae
sub
or
popa
inc
add
adc
mov
add
sbb
aaa
pop
sbb
inc
push
in
dec
add
insb
leave
in
xlat
sub
cmp
mov
xor
push
aad
jmp
push
bound
add
dec
mov
adc
in
out
jmp
xchg
or
popa
fisubrs
push
jns
int
push
jae
dec
outsb
jne
ret
lods
stc
xchg
incl
dec
mov
pop
pusha
rcr
je
inc
pop
mov
jo
jo
adc
adc
xor
jg
add
jb
je
pop
adc
orb
push
ljmp
push
push
jno
les
jo
xchg
add
cld
js
dec
add
cmp
mov
nop
sbb
lret
and
mov
ljmp
xor
sub
sub
sub
ds
mov
add
jae
inc
ja
sbb
je
add
lock
or
jo
push
push
jecxz
xchg
popa
aaa
dec
insb
push
int3
cmp
cwtl
cltd
xor
add
clc
xchg
sub
sub
pop
addl
std
and
dec
xor
push
xchg
push
mov
adc
lret
mov
pop
cmp
ret
add
dec
ja
dec
imul
mov
rcll
mov
ficomps
loopne
in
shl
movsb
in
jae
push
hlt
lock
and
push
cmp
push
and
add
insb
inc
int
push
in
push
xchg
test
add
daa
mul
dec
add
fs
lcall
add
leave
ret
or
adc
adc
out
push
inc
push
bound
push
gs
dec
dec
jne
mov
cmpl
push
fisubrs
cmp
test
sti
inc
and
push
xchg
das
inc
xor
or
dec
arpl
jo
sbb
add
mov
test
mov
and
test
stc
dec
mov
push
dec
cmpsl
add
dec
aaa
add
loope
pop
jge
sbb
js
out
lahf
cli
orb
aaa
js
xor
mov
inc
sub
insl
mov
dec
mov
scas
cwtl
andl
mov
clc
or
aas
cmp
cmpsl
rcll
enter
and
xor
mov
xchg
jle
add
cmp
loope
adc
inc
outsl
push
push
filds
mov
mov
add
or
push
mov
push
into
fs
inc
dec
jmp
jb
jne
xor
testl
jne
sbb
mov
sbb
pop
clc
sbb
aam
dec
mov
outsb
pop
iret
sbb
inc
insl
sub
out
xor
push
inc
dec
outsb
cmp
push
push
sub
xor
in
out
cld
lret
addr16
jb
and
popa
test
and
push
add
push
dec
xor
imul
xchg
dec
jg
xor
xor
inc
pop
add
dec
hlt
call
adc
sar
incl
inc
movsb
cmpl
bound
out
mov
test
xchg
clc
mov
mov
jns
push
push
jo
mov
bound
xchg
xor
push
add
mov
pop
bound
ret
jbe
and
into
add
ja
das
cmp
das
or
and
push
inc
fs
adc
insb
jb
lahf
mov
mov
andl
mov
push
jb
xchg
scas
lret
sarl
mov
mov
add
loopne
adc
movsl
mov
movl
scas
pop
mov
pop
add
push
pop
xor
outsb
lods
add
sub
loop
push
adc
push
inc
mov
add
push
jle
pop
insl
iret
shll
push
sub
jg
negl
jmp
inc
inc
sub
pop
ja
sub
mov
inc
push
dec
sbb
adc
sbb
adc
divb
dec
incl
jo
push
adcb
add
fwait
idiv
ljmp
mov
sub
mov
push
aas
js
mov
add
scas
pop
pop
pusha
add
jno
call
push
push
out
xchg
add
shrb
inc
jno
repz
or
iret
inc
fs
repnz
push
push
jecxz
ret
inc
arpl
dec
sub
inc
sub
push
ja
iret
lcall
mov
sub
add
push
cmc
loopne
call
fstps
rcrl
rcll
roll
fiaddl
jne
mov
push
sub
js
sub
imul
xor
adc
dec
mov
insb
fmuls
jo
js
fsub
or
pop
xor
xor
js
lds
js
jnp
add
es
arpl
imul
cwtl
xorb
int3
pop
dec
es
fistpll
push
pop
jo
dec
dec
sahf
lds
in
test
xor
add
jg
je
test
hlt
outsl
or
in
push
cld
insl
int3
xor
addr16
cld
insl
push
push
test
inc
push
in
nop
hlt
mov
scas
adc
push
inc
sbb
mov
rclb
scas
mov
push
gs
push
push
testl
lods
in
scas
push
add
scas
mov
sbb
and
adc
cmp
clc
cmp
mov
popa
jae
cld
ljmp
dec
sub
push
mov
shll
nop
inc
mov
push
push
xchg
push
cmpsl
adc
mov
push
inc
push
add
rcr
lret
js
cmp
into
lcall
pop
cld
call
cmp
lds
inc
shll
xor
addl
andb
pop
mov
mov
or
push
dec
push
jecxz
xchg
jae
jne
inc
aaa
out
call
jg
aaa
push
shll
push
pop
decl
ss
ss
lea
jne
dec
pusha
xor
push
jecxz
adc
adc
push
push
cmc
aaa
pop
adc
mov
in
push
imul
xor
inc
hlt
push
push
jne
or
mov
pop
mov
or
rcll
jecxz
out
rorb
icebp
cld
jbe
jg
jno
add
sub
push
adc
sbb
xchg
dec
jne
adc
cmc
dec
sub
sbb
add
add
jmp
das
cmpsb
inc
dec
cmp
ss
pop
xchg
in
adc
push
jno
in
jne
jp
push
xor
pop
stos
add
fsubrl
xor
mov
movl
dec
add
pushl
sbb
test
jbe
pop
xor
shlb
sahf
pop
jne
sub
and
push
addr16
push
push
dec
jbe
jmp
in
sti
inc
jnp
add
inc
dec
out
xlat
in
insb
dec
inc
mov
test
mov
aas
mov
js
sbb
push
jno
mov
mov
shrl
inc
inc
js
xor
lock
add
loope
mov
shl
test
push
push
inc
inc
push
push
push
adc
cwtl
out
sub
sbbl
xor
jae
push
sub
ds
cmp
pop
roll
mov
ss
in
cmp
add
mov
inc
test
xor
or
fdivp
shl
jle
rolb
mov
inc
fadds
icebp
mov
in
mov
int
jmp
push
xor
fadds
enter
mov
mov
add
ret
add
dec
iret
sbb
sub
pop
push
popl
jbe
inc
clc
jg
xchg
mov
dec
inc
mov
sub
std
mov
ret
sbb
pop
js
push
add
aad
xor
jns
std
imul
xchg
jns
or
jne
outsl
add
in
aam
push
in
into
add
inc
notl
push
jae
aaa
lock
fs
inc
push
data16
fs
inc
fs
stc
je
call
popf
loope
inc
aam
dec
pusha
ja
test
loope
dec
jbe
jne
sahf
lds
dec
sbb
cmp
and
inc
sbbl
outsl
fwait
jo
inc
inc
divl
sub
xchg
adc
or
cmp
inc
dec
leave
hlt
inc
push
add
lret
cmp
or
ret
bound
fs
jge
fcoms
inc
xor
imul
mov
jo
pop
cld
and
dec
dec
dec
mov
std
ret
jecxz
push
jo
into
jbe
push
xor
push
out
pop
and
gs
dec
push
stos
ss
xlat
push
push
test
mov
mov
iret
adc
cmp
rorb
faddl
push
xchg
pushl
add
adc
add
xchg
in
ljmp
xor
clc
add
inc
sub
mov
negl
repnz
sub
xor
add
mov
imul
fildll
jns
je
rolb
imul
mov
fistpll
ja
in
push
add
mov
icebp
or
mov
cmp
shll
push
insb
imul
rorb
and
mov
ss
adc
sub
push
adc
das
shl
rolb
inc
jbe
add
adc
inc
or
int
ret
push
jbe
add
mov
sub
sbb
mov
pop
arpl
sub
ljmp
loop
push
mov
add
addr16
inc
jns
sarl
mov
jae
sub
dec
inc
mov
jg
rolb
adc
sub
mov
ja
mov
faddl
je
inc
xchg
jne
push
push
outsl
mov
inc
jae
inc
push
sbb
inc
dec
inc
addl
cmp
int3
add
sub
inc
inc
lock
xor
cmp
dec
sub
nop
cmp
mov
push
pop
adc
inc
dec
sub
dec
pusha
sbb
pop
cld
mov
push
lret
dec
mov
js
bound
inc
push
inc
ret
or
loopne
adc
dec
add
loopne
xor
int3
adc
inc
sub
xchg
and
dec
or
mov
pop
sbb
outsb
inc
imul
sbb
xchg
lds
jae
mov
and
addr16
adc
dec
inc
inc
or
int3
dec
adc
xor
mov
add
add
fs
dec
int
loopne
out
push
push
fildll
and
push
inc
outsb
sub
pop
aad
into
inc
sbb
or
push
adc
cmp
movsl
hlt
jge
inc
imul
mov
pushf
mov
push
jl
dec
sbb
or
and
imul
aaa
imul
flds
cmp
outsl
mov
nop
mov
ret
inc
addl
adc
fsubrs
addr16
add
jne
lret
jno
ljmp
mov
scas
and
gs
movsb
dec
adc
mov
inc
push
mov
add
jbe
cmp
add
and
dec
dec
xor
xor
adc
push
pcmpeqb
mov
ja
pop
push
push
arpl
inc
dec
add
shl
or
dec
mov
push
inc
cmp
sub
daa
loop
pop
push
jne
xor
jl
bound
ss
xor
sub
push
xor
dec
outsb
aaa
adc
mov
jno
cmp
aad
dec
jo
fwait
push
push
cli
js
xor
and
in
shlb
mov
jp
or
sbb
das
mov
xor
dec
push
jp
ljmp
push
shlb
inc
xor
adc
insl
bound
inc
test
inc
jp
dec
subl
cld
subl
mov
cwtl
jbe
xor
mov
ljmp
push
dec
insl
mov
push
loop
lods
test
xchg
sub
jae
into
ja
sub
outsl
pop
add
add
adc
pop
xchg
lock
jns
lcall
in
dec
sbb
dec
dec
ss
mov
push
inc
cmp
xchg
subl
xchg
dec
add
incb
out
clc
and
sub
add
fwait
loopne
scas
idivl
ja
adc
shlb
sahf
dec
jmp
push
push
jbe
popf
mov
sub
js
sub
cmpb
cmpb
and
out
pop
mov
ja
dec
inc
dec
push
imul
dec
inc
lea
clc
adc
faddl
push
mov
loopne
sub
mov
outsl
addb
lods
fists
inc
mov
dec
insb
insl
xchg
xchg
jmp
rcr
jno
push
test
add
lock
jecxz
fadd
dec
inc
js
adc
dec
nop
stos
dec
jae
sub
lods
aaa
fcoms
push
inc
push
jo
daa
outsb
gs
aad
jae
xchg
sub
push
mov
xor
cmp
inc
test
add
pop
inc
leave
dec
fisttpl
daa
dec
jg
push
aam
push
inc
push
jno
pop
test
sub
adc
push
mov
fwait
aad
rorb
fnstsw
mov
lahf
lock
fwait
gs
rcrb
nop
pop
aaa
pusha
mov
inc
inc
dec
rorb
xchg
jge
insl
sub
pusha
sub
jp
shlb
jb
cmp
xor
push
xor
inc
mov
mov
ds
sahf
cmpsl
daa
js
xor
insl
js
mov
sub
fs
jbe
lret
pusha
or
lcall
inc
call
adc
pop
test
inc
push
inc
js
shll
loopne
jne
add
mov
rcrb
add
dec
ja
js
cmpsb
or
andl
dec
jo
xchg
lods
out
adcb
add
out
push
or
dec
dec
mov
push
out
jp
mov
pop
loopne
inc
add
pushl
add
inc
ja
add
hlt
push
insb
adc
movsb
and
dec
dec
jp
push
add
and
inc
jne
gs
ret
hlt
pop
aam
add
rorl
mov
gs
addr16
nop
pop
push
outsb
mov
nop
xor
push
sbb
mov
push
inc
jb
scas
cmp
je
dec
xor
or
pop
mov
je
int3
cmpsl
or
xor
jns
xor
arpl
das
push
dec
popa
dec
push
add
pop
mov
les
sub
cld
fistpl
cmp
arpl
fs
ja
push
js
lock
add
pop
add
ret
outsb
sub
xor
add
mov
adc
and
sbb
mov
lods
mov
push
stos
mov
fmull
or
test
add
mov
push
push
mov
mov
pop
cld
sub
ficoms
jbe
push
add
mov
inc
loopne
jp
aas
in
orl
inc
test
arpl
leave
lods
ja
ret
mov
jns
dec
jmp
aaa
outsl
cli
shrb
add
sbb
das
ja
lahf
add
popf
fs
lret
and
faddl
fs
xor
cmp
inc
dec
xchg
adcb
and
xorl
and
and
mov
push
scas
gs
push
ret
ja
jne
pop
push
stc
in
xadd
jb
inc
adc
out
pop
je
std
xorb
rcl
cmp
add
leave
bound
jmp
pop
in
iret
mov
lock
inc
pop
loope
sarl
sti
mov
push
int3
scas
sub
inc
push
bound
xchg
jbe
jae
inc
cmp
xchg
xor
or
iret
jno
push
mov
out
loopne
jne
jno
sub
sub
or
mov
add
mulb
outsb
xchg
enter
cmp
mov
pushf
inc
dec
or
ja
addb
push
sbb
daa
xchg
std
add
js
cmp
and
xor
movb
dec
dec
cmp
adc
push
push
gs
cli
and
lock
xor
jne
inc
push
jmp
mov
icebp
fiadds
ljmp
xor
scas
xor
mov
mov
repnz
dec
add
inc
movsb
inc
daa
jge
aad
push
int3
js
xchg
jo
jns
fs
add
mov
inc
dec
adc
js
push
pop
into
out
add
movl
ss
test
flds
ret
adc
dec
pop
lcall
cli
add
cmpl
imul
and
and
ffreep
gs
ret
push
movsb
mov
jo
bound
fildll
and
jp
pop
push
in
inc
iret
xchg
into
inc
jl
push
jns
dec
mov
xor
pusha
sbb
inc
dec
dec
cmp
xchg
push
mov
ss
add
outsl
inc
dec
out
shrb
xchg
push
aaa
jae
inc
inc
and
jg
add
and
adc
xor
mov
inc
mov
jg
outsl
mull
enter
mov
pop
mov
inc
push
mov
or
into
fucomip
jne
cmp
notl
add
sub
popf
pushf
std
ja
loopne
inc
xlat
lahf
dec
xchg
sbbb
xchg
adc
add
les
mov
pop
mov
jmp
mov
push
loop
pop
loop
adc
sub
loopne
testl
js
add
inc
push
mov
mov
mov
dec
sub
add
adc
pop
testl
nop
push
and
inc
xor
or
rcrl
xlat
xor
into
add
sub
call
fnstcw
mov
sti
sub
push
push
or
loope
test
mov
std
lahf
jne,pn
dec
daa
aas
into
mov
adc
mov
add
sbb
ds
cltd
sbbl
out
jb
push
mov
dec
into
lcall
fimuls
xchg
sbb
add
jo
mov
sbb
pushl
neg
std
mov
pop
mov
inc
jns
mov
sub
mov
mov
xchg
clc
shlb
mov
lock
sbb
jle
xor
jnp
mov
mov
sbb
mov
mov
fiadds
add
mov
sub
fistps
negl
test
inc
and
das
inc
call
and
mov
mov
mov
inc
sbb
lret
outsl
xor
xchg
cmp
decb
fwait
sub
loop
pushl
hlt
jge
push
add
dec
icebp
mov
testb
add
lea
add
dec
or
mov
popf
inc
mov
arpl
add
ja
mov
inc
mov
outsb
lret
popf
xor
hlt
dec
mov
xor
loopne
adc
idivl
sbb
ss
mov
jns
push
lcall
inc
dec
jl
mov
mov
ljmp
jecxz
cmp
and
and
loope
lret
jae
lods
insl
hlt
mov
xchg
jo
or
xchg
mov
dec
ficompl
popf
outsl
addr16
jbe
popa
cli
jmp
xchg
incl
pop
pop
std
cmp
shl
xchg
test
sbb
sbb
insl
adc
or
mov
clc
out
push
repz
ja
cli
inc
into
hlt
add
adc
loope
mov
cmp
sub
ret
decb
or
cmp
or
jae
jecxz
xor
adc
adc
or
std
fnstsw
xchg
add
shl
xor
std
movsb
and
fdivrp
push
mov
jge
inc
mov
mov
cmpsb
sbb
sub
std
sub
pop
cltd
cwtl
xor
cmpl
mov
fcoms
stc
sbb
aas
mov
shll
loop
setbe
mov
in
fwait
sbb
and
out
fidivrs
xchg
jle
ss
push
sub
and
in
add
and
cltd
into
cmp
hlt
out
mov
jne
xchg
cmp
xor
iret
mov
shr
xchg
xchg
rep
es
jae
clc
mov
rcr
pop
fadd
xchg
sbb
lods
cmpsb
imul
mov
lock
sub
test
popf
mov
dec
fwait
data16
fiaddl
iret
xor
pop
je
push
jle
sbb
jl
mov
cmp
std
lods
testl
jnp
ficompl
fsubrl
jbe
aad
pop
mov
scas
repnz
push
es
and
or
mov
in
shll
and
iret
lahf
add
mov
sbb
jg
inc
xor
and
inc
fstps
aaa
rolb
fnstenv
push
out
les
or
and
cmp
lcall
ljmp
add
push
mov
leave
rcrb
pushl
loope
sahf
clc
push
and
mov
sub
jge
push
mov
xlat
sub
out
adc
jbe
xor
outsl
jo
lea
testb
push
xchg
adc
sar
fldl
mov
outsb
ss
ja
pushl
stos
stc
stos
lods
mov
dec
adc
addr16
stos
or
test
xlat
inc
ret
sub
ljmp
pushl
cmp
fiaddl
lcall
or
adc
pushf
jmp
mov
cmp
cli
ffreep
aas
jo
cmp
xor
ret
sti
cmp
mov
enter
push
jbe
loopne
lock
shll
cmpsb
dec
dec
and
std
mov
cmpsb
pop
xor
add
sbb
clc
cmpb
jnp
push
lods
xor
call
mov
call
and
shlb
jns
jg
or
div
and
fiadds
divl
push
outsb
add
ljmp
aad
and
sahf
lods
mov
pop
lds
pop
out
push
aam
enter
sub
cmpxchg
push
xchg
pop
lret
mov
jno
xchg
mov
xchg
mov
divl
mov
xor
gs
sbb
push
xchg
ret
sti
ja
add
sub
dec
fs
incl
addr16
mov
adc
ss
aaa
push
inc
xchg
aam
cld
ss
lret
cmp
sub
and
repnz
xchg
int3
or
pop
test
xchg
dec
xor
push
pop
pop
std
cmpsl
in
and
push
mov
sbb
lcall
jbe
mov
fistpl
int3
jecxz
pop
js
aas
ret
cmp
xor
arpl
and
aaa
rcl
mov
cmp
cmp
add
ja
jg
ja
pop
lret
insl
scas
push
and
ja
stos
mov
negl
movsl
mov
add
mov
sub
leave
xchg
mov
sbb
sbb
mov
ljmp
test
lcall
mov
fscale
incl
iret
and
push
stos
or
loopne
sub
jnp
or
cmp
iret
js
sub
fists
xchg
rol
sarb
idiv
inc
mov
fldl
out
or
scas
loope
cli
mov
adcb
movl
xchg
mov
ret
mov
jae
cmp
pop
push
jle
pop
xor
push
std
pop
daa
mov
mov
stc
into
adcb
sub
push
out
repz
shll
fwait
addl
mov
in
movsl
mov
addb
ja
mov
cld
out
popa
lock
add
lret
int
loop
mov
lds
scas
sub
popf
ljmp
in
dec
pop
sbb
xchg
cmc
enter
pushl
sbb
insl
push
ds
mov
pop
js
pop
stos
nop
cmp
jno
jb
and
add
cmpsl
push
xchg
shlb
push
pop
mull
or
decl
loop
int
cmc
sbb
or
mov
btr
dec
mov
stos
inc
or
jns
lods
inc
adc
out
out
scas
or
push
ljmp
jns
jmp
sub
mov
cs
aad
pop
daa
pop
popa
cmp
shrb
jmp
sti
jns
out
xchg
xor
cwtl
mov
adc
mov
jo
jmp
out
mov
popf
fdivrl
add
pop
and
jo
adc
call
std
inc
cmp
cmp
adc
int3
jg
sti
out
decl
pop
push
lea
dec
jbe
sbb
incl
sub
jb
loope
sub
fdivr
fnstsw
mov
add
jge
mov
and
push
xchg
lahf
sbb
cmp
mov
cmp
sbbb
mov
imul
mov
movsb
sbb
andb
sbb
add
std
pop
insb
xchg
jle
dec
fsts
mov
sbb
sarl
lcall
fs
push
dec
ja
in
aam
push
into
push
cmpsb
jo
cld
aaa
add
iret
pop
push
aad
repnz
mov
lahf
lcall
mov
push
cli
xchg
int3
daa
aam
mov
loope
cli
sub
addr16
ret
cmpb
mov
and
out
nop
imul
mov
add
mov
in
jbe
jg
decl
fidivrs
aas
sbb
stc
pop
inc
movsb
jg
nop
icebp
cmpsl
je
push
mov
jb
loop
mov
push
fildl
fidivs
aaa
shl
push
and
mov
arpl
jl
jg
jno
pop
fnsave
mov
jl
xchg
xor
xor
xchg
mov
inc
ds
jge
rolb
lret
jmp
inc
and
pop
ss
pop
mov
scas
adc
and
and
xor
out
push
fisubrl
fwait
insb
mulb
pop
scas
jmp
rcl
sbb
and
hlt
cmpsl
jb
jecxz
fdivrl
mov
cmp
pop
inc
repnz
mov
jl
or
jns
push
stc
jl
xchg
mov
push
cwtl
jo
push
rorl
dec
pop
lcall
and
fcomip
mov
xor
pop
cmp
cld
outsl
mov
lahf
jo
xchg
roll
sti
cmp
push
ljmp
lock
pop
add
lret
in
gs
mov
jge
adc
push
and
repz
cmp
jo
adc
out
out
fcompl
push
mov
mov
outsb
loopne
fsubrs
or
xchg
mov
ret
cmp
testl
mov
popf
rcl
mov
mov
inc
add
pop
inc
pop
je
mov
jl
mov
test
int
push
cld
push
incl
push
loop
int
mov
cmp
int
fimuls
mov
mov
decl
out
aaa
jb
loop
aaa
sbb
iret
xor
mov
loopne
pop
leave
rcr
adc
aad
xlat
fsubp
pushf
dec
std
in
hlt
fcompl
repnz
aaa
les
xchg
lcall
push
frstor
repz
xor
fdivl
repz
incl
xor
arpl
or
mov
xor
and
and
call
test
mov
pop
lods
fndisi(8087
jmp
test
lcall
fmul
dec
pop
test
sub
out
jecxz
jge
loopne
pop
adc
xchg
push
rcll
stos
std
mov
or
inc
cmc
cmp
aas
pop
pop
mov
mov
cmp
pusha
fists
das
aad
push
lock
sbb
cld
cli
adc
sbb
rolb
nop
cmp
dec
adcl
test
adc
fsubrp
mov
add
fidivrl
pop
jb
data16
push
xchg
out
pop
cld
or
add
xchg
add
push
xchg
call
addr16
clc
aaa
mov
clc
into
and
cld
xlat
popf
push
ss
lock
aaa
pop
sbb
pusha
cltd
loopne
mov
mov
jg
pop
outsb
xchg
sub
xchg
inc
loopne
fisttpl
scas
fisttpl
sbb
or
cmc
outsb
cmp
push
sub
lea
adc
std
test
icebp
cmpsl
mov
cmpsb
insl
fs
xor
pop
cltd
jle
sbb
sub
stos
fildll
cli
dec
ja
jmp
out
int
adc
mov
xor
fidivs
std
in
loopne
cmpl
in
outsb
test
out
mov
popf
pop
or
push
clc
lds
add
pop
cmp
icebp
sub
addr16
push
sbb
shr
or
pop
mov
test
jo
arpl
push
mov
shl
lcall
loopne
in
sar
leave
int3
fld
push
shlb
jle
std
adc
jo
jno
icebp
hlt
lahf
xlat
aas
xchg
int3
hlt
sbb
push
in
arpl
lcall
sub
inc
mov
sbb
popf
fidivrl
rorl
jmp
mov
xor
stos
stc
shrb
sbb
add
test
cmpl
cmp
testl
in
inc
loopne
outsl
push
cli
pop
and
xor
fildl
add
pushl
push
sbb
stos
dec
xor
pop
push
xchg
pop
dec
lock
inc
in
stos
mov
cmc
clc
mov
out
sbb
sub
outsl
or
decb
xchg
cmc
gs
xor
icebp
cmp
repnz
test
cmpsl
mov
inc
data16
int
nop
cwtl
adc
loop
dec
push
scas
repnz
mov
xchg
js
and
cwtl
into
mov
sti
out
out
mov
test
adc
mov
insl
push
add
cmp
fildl
mov
fstpt
cltd
mov
add
xor
fistl
into
sbb
jmp
stos
lret
js
mov
cmp
sbb
ja
xor
daa
sbb
or
aad
fbld
ja
jg
scas
and
and
pop
int3
imul
out
ja
dec
out
mov
inc
int
cld
leave
clc
daa
push
stos
and
jg
jg
jnp
xor
stos
out
mov
push
adc
sbb
incl
adc
iret
cmc
imul
dec
jbe
mov
int
xor
test
and
dec
cmc
lahf
ret
push
xor
add
cmpsl
fsubrl
mov
dec
aas
out
xorl
mov
xor
add
push
pop
pusha
add
add
fs
and
or
ret
xchg
pop
sbb
jns
push
imul
mov
jne
daa
or
in
out
inc
stos
out
lds
and
fwait
es
jb
out
and
dec
jle
pop
loop
sbb
decl
dec
xchg
rcrl
flds
in
and
sbb
std
and
popw
or
in
enter
pop
loopne
fdiv
push
lock
lock
mov
mov
dec
pop
lret
jecxz
ja
mov
in
nop
mov
fisttps
in
mov
dec
sub
push
mov
dec
cmp
xchg
iret
cmp
adc
cld
pop
mov
subl
dec
pop
mov
lahf
pushf
adcl
add
hlt
mov
pushf
hlt
sbb
pop
negl
cld
lock
cmp
xchg
sti
mov
les
mov
adc
out
loop
scas
sarb
push
rcr
rolb
mov
cmp
iret
mov
jae
loop
sbb
arpl
jecxz
push
jne
daa
loop
cld
nop
lcall
clc
dec
lret
iret
xor
pop
jnp
add
sub
out
incb
mov
xchg
loope
xchg
push
stos
in
fstps
cld
inc
inc
cltd
jge
xchg
into
andb
ret
inc
jmp
pop
jne
call
jae
shl
pop
in
loop
aas
test
push
push
mov
cld
mov
pusha
push
shll
sbb
repz
seto
and
je
jns
mov
and
mov
std
out
pop
cmp
movl
jl
inc
sub
sar
push
dec
mov
clc
enter
lahf
inc
push
clc
push
or
adc
test
popf
movsb
shlb
fistps
sbb
scas
sti
cmp
notb
icebp
pop
sbb
ljmp
out
pop
pop
pop
xchg
push
clc
adc
outsb
mov
xchg
cmpsb
fnstenv
mov
out
inc
dec
xchg
enter
repz
jnp
repz
mov
filds
mov
loope
cmp
inc
imul
test
adc
push
out
mov
add
and
mull
add
ret
incl
sbb
clc
and
sub
cltd
jne
jnp
mov
dec
and
pusha
inc
dec
xchg
mov
outsl
je
shr
adc
cmp
jb
dec
ds
pop
mov
aam
fdivs
leave
in
gs
mov
lret
call
jecxz
cmp
sbb
paddusb
mov
xor
pop
ds
adc
int
mov
es
push
loope
add
std
mov
arpl
test
xchg
lret
pop
mov
xchg
mov
popa
lods
incl
lahf
push
aas
cmc
cmp
and
lock
test
mov
xchg
mov
xor
cli
mov
pushf
pop
sub
out
imul
mov
sbb
mov
push
insb
into
lcall
and
fnstenv
or
movsl
and
pop
inc
mov
sub
jbe
mov
das
outsl
je
add
or
push
xchg
jae
xor
inc
adc
ljmp
push
mov
outsl
in
hlt
jecxz
add
pop
pop
push
out
stos
test
sbb
seta
xchg
xlat
clc
out
ljmp
lea
and
into
add
push
push
push
loope
cltd
cli
lahf
lock
sub
imul
fdivl
xchg
fsubs
mov
rcll
and
sti
fildll
xchg
push
je
add
insb
mov
fdiv
aam
repnz
xchg
in
mov
jb
out
js
rcr
sub
lahf
mov
loopne
jg
cmc
mov
std
or
dec
outsl
push
out
testb
push
push
mov
repz
jno
jo
mov
ret
arpl
cld
xor
cmp
inc
std
testb
ja
sbb
push
inc
fisttpl
jg
pushl
cmc
mov
les
inc
jb
ss
add
pop
daa
lea
sub
insl
pop
adc
mov
out
leave
bound
in
inc
xchg
aam
fnstsw
mov
xor
iret
and
inc
sar
inc
jno
test
jecxz
pop
lock
test
jmp
fs
mov
arpl
lea
loopne
std
mov
out
pop
cmp
lods
adc
jmp
adcl
repz
add
pop
out
adc
and
adc
cmpsl
repz
arpl
dec
jge
out
sbb
nop
sub
frstor
adc
ds
lahf
mov
movsb
movsl
dec
dec
or
lock
lock
pop
push
std
cmp
xlat
stos
xchg
add
fiaddl
fdivr
adc
test
lahf
gs
mov
pop
icebp
sbbb
cmp
inc
sbb
lcall
aaa
mov
imul
jg
or
or
pop
jp
push
xchg
sti
add
or
jnp
add
sbb
ds
sbb
sbb
cmpps
sub
jns
mov
xchg
gs
lock
je
stc
mov
sbb
aas
sbb
fisubrs
mov
lock
addr16
jo
xor
mov
cltd
test
dec
sub
sti
sub
cld
push
movsl
mov
pop
fdivr
push
inc
dec
aam
xchg
push
rcll
loopne
sub
rcrb
push
and
jns
popa
pop
loopne
sbb
mov
sub
cmp
push
decl
les
orb
call
call
push
lods
mov
push
add
cmp
inc
pushl
jg
sbb
jl
in
sbb
iret
imul
lret
xchg
lcall
neg
aam
popf
pop
jae
test
xchg
jp
add
or
jbe
fstpt
add
or
xor
or
scas
mov
insl
xchg
lea
mov
or
cli
cmpsb
xor
or
imul
in
movsl
pop
jns
notl
imul
jne
xchg
ja
mov
push
fisubs
xchg
jmp
test
jle
and
shll
fcoms
fnstenv
mov
sahf
add
imul
mov
addr16
pop
xor
dec
fiadds
je
std
insb
cwtl
jnp
mov
cmpsb
sbb
adc
ja
jo
out
mov
and
sbb
pusha
bound
sub
clc
jg
mov
or
pusha
jnp
arpl
pop
mov
xchg
push
adc
xchg
lea
ja
outsl
popa
lods
call
lcall
fwait
mov
xor
sub
lock
cli
addr16
cmp
xor
dec
push
and
pop
fsubrl
jo
loop
cmpsl
inc
push
sub
pop
scas
idiv
out
pop
pop
xchg
fidivs
pop
pop
cmp
imull
cmp
xchg
inc
es
mov
jg
jmp
xor
inc
jge
jbe
inc
hlt
add
rcrl
outsb
and
lock
push
jnp
mov
orl
xlat
push
mov
out
mov
add
cmp
bound
sti
mov
dec
xor
dec
test
sub
std
xchg
out
or
leave
push
sub
mov
inc
sti
inc
or
xor
xor
scas
icebp
cmp
xor
jmp
jb
jnp
sub
mov
cmp
jp
loopne
jg
shr
scas
jae
test
cld
dec
push
ljmp
leave
fs
scas
sub
mov
movsb
sub
scas
loopne
out
into
or
sbb
add
push
lea
loop
lock
cmp
lock
xchg
jmp
lret
pop
cwtl
lret
dec
or
fdivl
dec
pop
jecxz
mov
repz
pop
sbbb
jp
sbb
inc
mov
or
jmp
jns
jp
movsb
fcomip
fidivl
and
push
cli
pop
jno
cmpsb
mov
dec
sti
add
add
rcr
push
fbld
inc
sbb
push
adc
les
test
sahf
mov
and
insl
add
lahf
daa
sub
mov
inc
xor
mov
icebp
jno
mov
push
fisubrl
aad
dec
loopne
daa
sub
push
test
aaa
scas
sbb
cmp
ret
adc
outsb
shll
dec
sub
mov
stos
scas
shll
fsubrl
decl
ljmp
lods
adc
xchg
idivl
inc
mov
push
push
add
divl
jmp
sub
inc
stos
push
jnp
dec
pop
inc
movsl
mov
jg
xchg
bound
add
inc
leave
sbb
clc
cmc
jge
xchg
fnstcw
test
xor
and
sarb
sbb
les
cmp
xlat
lods
jmp
add
sahf
dec
pop
mov
dec
xchg
mov
jecxz
mov
cmp
aas
sti
mov
xchg
push
xor
dec
jg
pop
adc
push
jmp
push
orb
fcoml
xchg
mov
xor
hlt
xchg
sbb
ret
dec
je
cmp
insl
fcmovne
mov
imul
push
aas
nop
iret
js
pop
fs
test
push
mov
cmp
inc
stos
fisubs
pop
and
fistpl
sar
iret
rorl
xorl
push
idiv
mov
sbb
lods
stos
xor
cmp
repz
mov
xchg
add
xor
mov
add
add
imull
push
add
mov
mov
push
fildll
test
fwait
xchg
rolb
arpl
mov
push
cpuid
aam
add
mov
mov
insb
jno
xchg
icebp
pop
pop
icebp
ds
lods
std
ret
lds
mov
inc
andl
call
cli
jle
mov
xor
push
fwait
sub
xor
sarb
cmpsb
cmpsl
inc
lahf
and
xlat
mov
sub
cmc
push
inc
movsl
out
jne
sbb
shl
jns
or
inc
lcall
in
sbb
ret
out
pusha
mov
mov
imulb
mov
loopne
jb
add
fidivl
mov
lret
es
jg
decl
sti
pop
lods
loopne
and
sahf
popf
imul
and
cmp
lods
jns
sub
jg
push
dec
test
fs
mov
clc
stc
leave
lret
or
das
mov
lret
dec
aas
loope
mov
push
test
inc
imul
xor
adc
xor
je
mov
sub
test
dec
cmc
in
loope
xor
nop
add
repz
aas
mov
mov
icebp
sub
inc
insb
orl
loope
outsl
sub
push
pop
lock
mov
add
mov
sub
in
xchg
jbe
push
push
loopne
or
inc
push
cmp
mov
xchg
sbb
and
fsubrp
decl
rcl
call
dec
sbb
or
rol
out
fcoms
testl
je
cli
pushf
in
outsl
pop
inc
filds
ss
lret
daa
mov
lcall
subb
pushf
mov
xor
dec
stos
lret
out
js
ficoml
sub
adc
lds
jb
jl
out
mov
int
fldt
idivb
loope
push
pop
adc
xchg
loopne
inc
mov
int3
cli
fistpll
jl
test
cli
aas
fst
mov
sar
xchg
pushf
sbb
or
push
out
jae
sub
aas
stos
mov
dec
mov
xchg
shrl
mov
shrl
aaa
sub
xchg
or
in
and
push
leave
cltd
in
dec
lcall
mov
xchg
aam
xchg
dec
mov
cld
push
mov
sti
jmp
icebp
adc
cld
sbb
xchg
jle
pop
fucom
mov
xor
xor
loop
test
jb
mov
inc
push
loopne
cmp
cmp
call
into
jg
push
inc
incb
cmc
cmpsb
jg
cld
add
ror
dec
test
and
sub
gs
push
call
dec
dec
enter
pop
sbb
push
cld
fnstsw
std
outsl
sub
cmp
xchg
mov
sub
cmp
mov
fildl
and
outsl
push
pop
or
imul
lods
xor
push
icebp
out
xchg
pop
sub
mov
rcll
inc
inc
mov
ds
pop
pop
pop
and
mov
fbld
mov
add
inc
xchg
sarb
out
out
push
jbe
cmp
ljmp
jae
aaa
add
mov
cld
jno
stc
sub
push
repz
icebp
lahf
sub
data16
cmp
lods
fcomps
cli
call
jg
mov
or
dec
jmp
mov
dec
enter
in
mov
in
xchg
jo
jmp
mov
inc
cmp
cmp
negb
mov
lret
mov
xor
rorl
rcll
test
mov
xor
ds
adc
fists
loopne
out
movswl
mov
mov
leave
rol
add
xchg
adc
adc
jbe
pop
jmp
xor
push
sbb
sbb
pop
mov
adcb
sub
cli
pop
lret
mov
imul
clc
dec
rcr
push
lock
imull
into
lea
int3
cmp
push
push
std
aaa
adc
push
push
call
mov
fstpt
repz
mov
outsl
pop
sbb
pminsw
or
cs
and
cs
cltd
push
jg
pop
idiv
sub
jnp
push
pop
inc
in
movsl
add
shr
lcall
adc
cwtl
in
cmp
mov
cwtl
cmp
and
jmp
or
cli
movsl
sbb
sti
ja
xor
popa
sub
cld
dec
dec
movsl
mov
pushf
mov
sub
pop
fiadds
mov
dec
mov
inc
bound
sti
push
out
add
insl
adc
leave
orb
mov
icebp
test
xchg
sub
cltd
sub
pop
repnz
dec
xchg
mov
mov
or
push
cmpsl
stos
cmp
pop
jle
cmc
lcall
int3
ret
shl
stos
imul
push
das
pop
rorb
out
push
push
and
pop
mov
loop
lcall
push
jg
dec
std
jae
inc
inc
jmp
rsm
jb
add
aas
add
xlat
adc
xlat
test
loopne
sbb
mov
dec
jbe
sbb
addr16
out
aad
mov
xchg
xlat
jmp
call
jae
xorl
js
jp
shlb
outsb
sub
pop
idivl
pop
sub
pop
test
add
clc
popf
scas
shrb
sbb
adc
mov
push
mov
out
xor
push
fistpl
daa
jmp
xorl
fnstsw
cmc
or
ja
lahf
std
out
movsl
inc
add
outsl
xchg
jle
dec
inc
adc
add
jg
sbb
dec
mov
inc
lea
cltd
mov
popl
outsl
rorl
xchg
adc
mov
jae
lods
in
or
out
lret
out
adc
sub
push
incl
jno
cmp
pop
in
ja
call
mov
xchg
int3
adc
sub
or
imul
mov
add
xchg
imull
std
out
ret
data16
fisttps
mov
add
lahf
mov
push
inc
icebp
incl
inc
hlt
sti
adc
test
daa
int
aam
inc
clc
sub
pop
add
jp
add
fistps
xchg
cmc
push
mov
rcll
mov
mov
jb
mov
sbb
not
push
fists
cmp
cld
lcall
stos
adc
repnz
lcall
inc
clc
clc
addr16
divl
insb
test
mov
inc
js
add
sti
movsbl
add
pop
in
pop
or
imul
clc
mov
inc
into
jp
fsubrs
popa
xchg
add
xor
cmp
jmp
xor
fwait
idiv
loope
js
hlt
push
mov
mov
scas
rcll
jg
mov
stos
arpl
mov
ljmp
sbb
mov
es
sti
sbb
mov
pushf
lods
pop
jge
daa
sub
pop
sub
mov
aaa
leave
mov
mov
jno
cld
clc
das
sbb
push
fsubr
xchg
cli
sbbl
jg
dec
sub
xor
test
mov
rcrb
loopne
insb
lret
push
xchg
adc
sbb
aas
testl
cs
sbb
jg
cld
mov
cld
out
jnp
jecxz
ret
sbb
sub
inc
xorb
pop
pop
ficomps
mov
dec
xor
orb
jg
hlt
arpl
std
xor
cli
push
mov
pop
fmul
lods
mov
in
gs
cmp
loop
ret
jg
xor
int3
pop
xchg
mov
jno
jo
jmp
sbb
dec
pop
repz
xchg
fnstsw
cmovne
test
dec
clc
das
fdivr
jecxz
mov
or
or
fldcw
dec
popf
ret
mov
testb
imul
repz
std
insb
adc
and
lahf
cmpsl
jg
cli
lahf
mov
fimuls
mov
test
push
dec
mov
and
sub
mov
xor
cmp
cld
popf
add
lret
rcl
clc
pop
push
sbb
push
jns
pop
jbe
ja
test
out
test
cmp
inc
ljmp
push
inc
jl
mov
fstl
adc
fwait
dec
loop
insl
push
hlt
jl
cmpsl
pushl
test
mov
sbbb
in
test
or
sbb
and
sti
pop
mov
jb
push
cld
sub
nop
cld
jg
aas
cmp
add
mov
cmp
push
ljmp
mov
enter
jmp
loope
xor
lods
or
jne
in
add
lock
ljmp
xchg
adc
mov
inc
mov
mov
jle
push
sti
push
das
jmp
cmc
fdiv
roll
popf
mov
clc
cmc
mov
scas
inc
sub
inc
int
notl
adc
adc
mov
jbe
clc
outsl
nop
ret
push
pop
sub
imul
pop
ljmp
pop
outsl
inc
cmpsb
adc
int
pop
enter
adc
xor
addr16
mov
inc
mov
cmp
cmp
sub
jbe
call
mov
mov
add
cmp
push
dec
lds
ja
inc
call
mov
aas
daa
jno
xchg
je
dec
jno
sti
lret
ja
push
fcmovne
imul
jo
scas
mov
xchg
cltd
adc
xchg
stos
xchg
or
jle,pn
mov
xchg
pusha
push
or
sub
sti
ret
int
in
sub
lds
ja
jmp
fcom
aam
outsl
pop
test
adc
sub
aas
cmp
loopne
pusha
rcll
push
test
out
sti
or
jecxz
sub
jg
clc
ja
xchg
adc
adc
insb
fcomip
inc
xor
incl
and
shll
xchg
imull
and
mov
mov
mov
jns
std
rcr
mov
cmp
int
push
iret
pushl
mov
push
stos
ss
push
or
sar
or
pop
ja
mov
pop
test
mov
adc
or
fwait
push
sub
lods
push
cli
test
scas
push
lods
ss
push
or
ret
aaa
pop
mov
fcomip
add
xor
cmp
mov
and
decl
das
mov
stc
pop
mov
sbb
adc
std
or
mov
out
xchg
and
mov
or
xchg
ficoms
pop
stos
int
hlt
xlat
lods
xor
jecxz
repnz
std
jg
aas
std
and
cli
inc
inc
test
mov
popf
jbe
adc
push
add
mov
mov
dec
cmp
std
xchg
pop
inc
cmp
pop
call
mov
cmp
jle
and
sub
sti
popf
adc
mov
sbb
ret
xchg
push
cmp
xchg
sbb
jg
filds
jl
das
lea
lcall
dec
xor
push
jle
mov
cmpxchg
icebp
inc
sahf
call
sbb
mov
cmp
int3
cmpb
imul
into
lods
mov
jo
addl
sub
jg
decl
jl
add
outsb
gs
cmp
popa
fcomps
popf
scas
outsl
sub
dec
pop
lcall
pop
sbb
push
pop
scas
xchg
jno
data16
xor
adc
sub
js
mov
cli
imul
stos
cmp
xchg
js
sti
and
cli
idivl
push
xor
cmpsl
push
mov
and
inc
adc
les
sub
sub
sub
cld
aas
loope
sbb
shll
cmpsl
and
lahf
lods
sbb
out
sub
jecxz
add
incl
loope
call
jg
cmc
fwait
mov
inc
clc
out
pop
pop
jno
fdiv
jbe
or
inc
decl
popa
outsb
nop
add
mov
and
cmp
movsb
xor
pop
xorb
inc
dec
popf
paddd
iret
inc
addr16
xchg
cmpsb
xor
xor
int
mull
lahf
mov
in
enter
push
add
out
int
andb
out
xor
fcoms
rorl
cld
adc
insl
out
in
out
pop
pusha
icebp
stc
insb
fwait
aad
xor
out
ret
pop
es
incl
inc
loop
js
adcb
sbb
mov
repnz
ja
fptan
aam
loop
shlb
clc
sub
dec
test
nop
popa
push
sbb
cmp
inc
adc
repz
fcmovnu
xchg
lea
subl
in
push
and
add
in
shr
outsl
gs
or
pop
xchg
pop
paddw
es
add
and
aas
cld
bound
sub
add
in
lock
ja
jg
ret
int
fwait
mov
or
stos
mov
rorl
loopne
add
add
fildl
adc
mov
jo
or
cmp
add
mov
lock
in
pop
or
shl
std
mov
les
cmc
add
lods
xchg
or
inc
fnsave
into
sub
pop
add
and
imulb
sub
ljmp
xchg
shll
pop
mov
data16
rcrb
sub
lcall
sub
jg
cmp
sub
or
es
cmc
add
jns
lret
dec
jecxz
push
push
cltd
push
repz
stos
clc
arpl
and
lock
mov
call
imul
inc
add
popf
push
or
sub
incl
xchg
outsb
mov
adc
lock
std
add
sarl
hlt
ret
mov
popf
pop
jmp
addr16
and
mov
pop
cmp
sbb
out
push
mov
or
out
out
pop
cmpsl
scas
xchg
test
fdivs
jg
scas
in
xchg
les
gs
dec
add
test
dec
call
std
jg
xchg
jne
hlt
push
cmc
in
inc
mov
cmpsl
cli
push
pop
adc
repnz
jl
pop
push
sub
add
testb
ljmp
test
pop
cli
xor
in
std
fisubrs
sahf
lret
popa
lock
loop
push
out
in
mov
fldenv
add
mov
sar
hlt
fdiv
das
mov
and
stos
and
mov
leave
stos
push
cld
sub
mov
stc
xchg
std
pop
jg
pop
push
mov
test
lea
in
xchg
pushl
aam
xchg
in
daa
jne
cmp
mov
push
push
cli
pop
inc
mov
pop
insb
icebp
pop
lret
pushl
xchg
pop
decb
add
fnstsw
fsubl
subb
mov
or
add
cmpsb
faddl
jnp
xor
imul
cmp
je
nop
push
cwtl
aas
aam
pop
push
pop
les
pushf
aaa
outsl
fmul
jge
mov
pushf
dec
or
push
fsubs
or
inc
addr16
inc
and
mov
pop
xor
or
push
scas
sti
mov
mov
addl
lret
push
pop
ret
push
mov
xchg
mov
jo
or
ss
ffreep
call
xlat
lret
sbb
js
scas
adc
pop
out
mov
pop
jnp
xchg
sar
dec
pop
nop
sbb
fistpll
pop
fisubs
xchg
pop
push
movsb
xchg
out
addr16
out
cmp
dec
mov
sbbb
ss
cmp
std
scas
pop
mov
pop
ja
pushf
push
lret
jns
sbb
xchg
push
adcb
lods
cwtl
loop
xlat
cmp
ds
mov
hlt
std
pop
cli
pop
inc
mov
and
or
mov
das
jge
shlb
push
repz
mov
and
out
jmp
loopne
mov
fwait
test
pop
inc
addb
out
jecxz
pop
loope
add
xchg
sbb
jecxz
jg
ljmp
insl
dec
cld
mov
loope
cmp
xchg
cli
aas
cmp
pop
jnp
mov
push
mov
or
mov
jl
test
cmp
ud0
ret
mov
dec
jno
fucomip
jecxz
xchg
sbb
adc
xlat
cmp
inc
lcall
mov
sub
insl
pop
jnp
fwait
inc
shll
adc
dec
pop
into
aaa
lea
sar
inc
sahf
jp
push
adc
xchg
sysret
mov
dec
adc
cmpsb
ja
retw
jo
pop
das
cld
ret
inc
xor
scas
lret
addl
cmp
and
mov
mov
lock
push
jl
test
jg
push
and
cmp
add
jae
jbe
add
jo
xchg
cld
mov
sbb
mov
loop
mov
iret
inc
scas
xor
sub
xor
mov
pop
mov
push
xchg
mov
test
iret
lret
mov
dec
sbb
incl
testl
push
mov
ja
idiv
push
adc
rolb
loope
add
inc
adc
scas
push
lods
inc
add
std
aad
push
ds
cmp
fildll
push
ret
fs
pop
shll
mov
rorb
icebp
jecxz
mov
not
mov
cltd
movsl
dec
dec
int3
scas
cmp
cvtps2pd
cmp
pusha
adc
aas
add
jne
jmp
pop
push
dec
cmp
pushf
add
inc
inc
adc
mov
dec
ret
movaps
jae
add
fwait
and
or
mov
mov
cwtl
adcl
les
dec
jmp
add
xchg
sub
xchg
stos
frstor
ljmp
mov
mov
lret
cmp
lock
inc
cmp
mov
mov
cmpsl
mov
jge
imul
adc
int3
push
fwait
xchg
cmc
fdivr
inc
cwtl
xlat
incl
mov
add
test
clc
pusha
inc
xchg
aam
add
fidivrs
pop
inc
inc
xchg
pusha
xchg
loope
xchg
xchg
adc
and
sub
dec
lock
and
push
jge
pop
dec
ss
mul
push
mov
call
xchg
dec
and
inc
sbb
test
mov
mov
pop
jne
add
das
dec
mov
out
or
popf
fstpt
mov
mov
pop
outsb
add
or
fbld
cmc
mov
lahf
xor
push
and
cmpsb
shll
adc
ljmp
iret
dec
mov
mov
cld
sbb
iret
addr16
adc
nop
jle
adc
cmp
or
add
sub
test
in
add
das
fwait
sub
sbb
add
popf
lock
jg
lock
dec
shll
mov
inc
repz
xorb
jo
iret
mov
aas
std
jmp
cmc
pop
xchg
jmp
cmp
xor
push
mov
and
mov
notl
dec
jno
loopne
push
cmp
incb
sbb
push
push
push
loopne
cmp
mov
ja
inc
loop
add
aas
ret
out
emms
and
sarb
aas
pop
fldenv
popf
push
je
mov
incb
in
xor
decl
jb
push
pop
mov
rcll
jmp
jno
das
mov
lods
outsb
mov
cwtl
cmp
dec
call
pop
cld
mov
inc
xor
sbb
rolb
xor
mov
jl
call
jl
aaa
sbb
in
mov
mov
xor
add
jbe
movsb
mov
jl
mov
add
mov
cli
inc
out
popf
insb
scas
mov
int3
rcrl
push
fbstp
push
jnp
jmp
clc
outsb
jb
sbb
xor
clc
lea
sbb
sub
push
xchg
decb
push
push
ljmp
dec
and
out
dec
add
mov
insl
inc
mov
arpl
aad
call
das
loopne
arpl
cmp
outsl
pop
cmp
push
mov
nop
and
mov
outsl
shrb
pushf
jg
shlb
jmp
sti
sbb
je
js
iret
call
push
fmull
in
mov
in
add
decl
imull
nop
cmpsb
sbb
jmp
dec
and
xchg
sar
sub
push
mov
stc
aaa
mov
xchg
mov
jnp
pushf
std
inc
jnp
and
pop
fadd
pop
jge
icebp
out
mov
push
rcrb
mov
jne
rcr
mov
inc
xor
push
lret
lods
xchg
gs
out
jle
sti
imul
outsl
test
pcmpgtw
push
clc
sbb
stos
mov
xor
out
data16
jmp
cli
je
inc
icebp
inc
cmpsl
add
pop
pop
ss
inc
or
mov
mov
aad
cmova
mov
and
push
rorl
icebp
inc
imul
popa
idivl
dec
pop
mov
jbe
lahf
push
fwait
loope
pop
adc
insb
sub
jg
ja
push
imul
sub
int
xchg
clc
push
pop
jne
push
sar
fs
jle
out
mov
sub
icebp
loope
mov
add
fldt
in
test
int
xchg
hlt
aas
loopne
add
dec
sbb
pop
int3
xchg
mov
lcall
add
jb
ja
xor
ljmp
pop
call
jb
mov
arpl
cmp
add
out
jne
iret
in
in
mov
rcl
adc
mov
cmc
sbb
sub
adc
inc
mov
sbb
testb
mov
lea
jg
popa
bswap
mov
out
mov
loope
xchg
cli
mov
push
jg
and
push
add
lock
ffreep
inc
xchg
popf
adc
xchg
shlb
and
pop
bound
addr16
repz
mov
mov
pusha
xchg
adc
sahf
mov
xchg
inc
in
push
sub
loope
test
rcr
mov
jmp
push
data16
das
pop
push
jle
nopl
notl
stc
fldenv
inc
cmp
out
ljmp
xor
sub
xchg
and
int
mov
mov
cmp
mov
inc
gs
and
jg
enter
lahf
cwtl
lret
js
cli
jae
ja
jg
aas
mov
inc
andl
jle
data16
mov
add
stos
xchg
shrl
dec
sbb
popa
testl
sbb
pop
movsb
test
cli
jg
xlat
push
cli
cltd
daa
aad
add
imul
clc
push
cmp
lea
cmp
test
std
pop
pop
ds
test
mov
arpl
std
lahf
jns
sbb
sbb
insb
lds
lock
cli
aam
imul
pop
dec
jnp
loopne
pop
popl
xor
rclb
lahf
out
cmp
cmp
mov
out
lahf
jmp
addr16
jmp
out
fwait
mov
pop
ret
pop
movsl
lret
cmp
dec
std
out
cmp
xor
in
int
sub
sub
mov
rclb
aaa
scas
xchg
pop
sub
jo
jecxz
jb
xor
lods
js
fisubrl
rol
fists
mov
jmp
inc
inc
xchg
lahf
mov
pop
mov
pop
sbb
out
scas
test
or
test
add
aam
mov
fcoml
jmp
dec
loop
mov
mov
into
xchg
dec
push
xchg
mov
cwtl
nop
adc
test
rcr
int
and
inc
xchg
rclb
jns
push
mov
fwait
or
mov
neg
and
scas
and
icebp
inc
cltd
iret
stos
xchg
cmpsl
decb
lahf
mov
rcrl
mov
loop
pop
cld
in
xor
sti
mov
mov
aad
pop
mov
out
cmp
cmc
add
xchg
aam
ds
push
sub
addr16
popf
mov
mov
mov
sbb
pop
cli
and
sbb
inc
lods
loope
rcrb
addr16
pop
out
mov
fdivs
shrl
les
cmp
mov
cmpsb
sar
sbb
scas
jmp
int3
push
mov
sahf
pushf
scas
add
jg
loope
scas
dec
sub
mov
outsl
dec
jle
int
es
test
test
mov
pop
jl
jnp
jecxz
push
pop
and
aaa
std
iret
jmp
addr16
stos
adc
loope
testl
cld
dec
jg
xor
jmp
inc
std
mov
ja
fstp
sub
lods
lods
repnz
rcll
mov
lahf
test
addr16
add
and
add
ljmp
dec
roll
out
loopne
dec
pop
inc
inc
push
xor
cmpsb
jmp
sti
dec
lahf
xchg
and
xchg
and
xlat
jbe
rcrl
aas
ds
adc
add
loop
dec
out
cwtl
sub
dec
mov
and
insb
push
aaa
out
jle
incl
ret
scas
push
imul
lods
sbb
mov
push
dec
jbe
inc
arpl
cmp
cs
lahf
adc
fcoms
mov
and
jb
add
call
icebp
sbb
cmp
jg
jle
xor
xchg
sub
push
pop
xor
jl
into
es
loopne
aad
incl
mov
jg
aam
aad
push
out
cmp
cmpsl
sbb
iret
jg
clc
fists
mov
outsb
cs
inc
out
or
sub
mov
or
cld
mov
incl
enter
dec
repnz
je
fidivs
inc
pop
cmpsb
cli
fists
mov
testl
jnp
push
jnp
into
push
mov
cs
sar
fwait
sahf
xchg
xlat
add
inc
ja
fdivrp
xchg
jbe
stc
roll
int3
or
jbe
lret
sti
jg
inc
jl
adc
lret
push
cltd
push
jecxz
adc
movsb
mov
insl
pop
out
lahf
test
cmpl
push
sbb
in
dec
stc
call
cltd
lods
aad
push
fsubrl
out
movsl
lock
incl
or
leave
imul
pushf
lahf
ss
lock
scas
jno
bound
mov
out
jg
iret
das
xorl
ljmp
sti
mov
adc
sbb
sub
inc
mov
pop
or
push
incl
outsb
dec
cld
lahf
mov
shlb
jmp
pop
adc
iret
dec
and
in
imull
xchg
mov
cld
jle
mov
or
insl
repz
cmp
dec
pop
negl
out
xor
out
addr16
cmc
mov
and
loop
jns
jge
push
xor
mov
mov
or
xchg
jo
add
and
loope
xchg
js
scas
cmc
jg
pop
je
jp
mov
std
cmp
sti
sub
and
adc
mov
shlb
cltd
scas
inc
lods
rcrb
sbb
fwait
ret
mov
aam
sub
dec
mov
cmc
cmpsb
cmp
mull
sbb
mov
pop
ja
fsubp
test
rcrb
push
jmp
lea
ljmp
push
ret
jo
jg
aad
jb
mov
fldz
lcall
ss
fwait
mov
rolb
cmp
mov
lcall
ljmp
loopne
cli
adc
xor
xchg
lret
hlt
aaa
aam
cmc
iret
dec
fwait
and
and
cmp
out
pop
mov
sbb
add
ret
sar
push
mov
pop
push
mov
cmp
fbld
pushl
sti
jecxz
mov
incl
and
mov
xor
cmpb
cld
fidivs
incl
scas
outsl
or
push
in
dec
call
jnp
push
test
ret
pop
xchg
hlt
les
jg
jg
and
test
sti
sub
mov
fs
mov
aaa
inc
xchg
insl
sbb
rol
and
mov
fiadds
pop
sti
arpl
sub
js
mov
icebp
aad
sahf
in
aam
lods
xchg
aam
sub
les
cmpsl
push
mov
sti
mov
repnz
mov
dec
enter
loopne
lahf
faddl
inc
lret
and
lods
scas
icebp
xor
xor
xchg
iret
outsb
adc
fcomi
mov
pop
ret
dec
xlat
fnsave
dec
rcll
ljmp
and
dec
dec
inc
mov
insl
insb
cltd
sbb
mov
stos
cmp
or
ret
sarl
cmp
sub
cmp
jmp
mov
mov
cmpsl
push
sub
nop
push
lds
addr16
scas
into
xor
imul
jmp
cmp
jno
jge
pop
insl
cld
divb
xchg
sbb
xor
enter
orl
inc
rcr
pop
xor
sub
inc
push
ffreep
les
icebp
cmp
scas
adc
dec
clc
inc
dec
sub
jg
and
mov
sti
ljmp
mov
cltd
in
outsl
push
ja
test
mov
in
jmp
outsl
add
fs
js
test
dec
shlb
outsb
scas
sbb
fisubrs
cli
pushl
cmp
fcoml
cmp
sub
decb
and
imul
fistpll
out
add
aaa
and
scas
lock
inc
xchg
popa
scas
add
jg
decl
push
dec
insl
je
xchg
cmp
jecxz
dec
std
decl
lahf
jns
xlat
mov
cs
adc
jg
add
xchg
mov
pushl
pop
icebp
sbb
jns
jg
and
pop
stc
pop
cli
aas
add
lret
mov
ds
push
xor
jg
mov
jmp
sub
sarb
ficompl
jl
inc
jmp
xchg
fidivrl
sub
inc
pop
cmpsb
add
fldcw
call
xor
adc
push
hlt
dec
les
jno
inc
and
sti
fsubs
pop
sub
jp
push
fistl
push
lcall
incl
repz
mov
fs
pop
sub
hlt
ja
sbb
into
push
in
fists
popf
roll
sub
xor
inc
and
xor
out
lcall
movl
add
mov
sub
fwait
push
sbb
int
sub
pusha
mov
xchg
sbb
sarb
and
outsb
and
in
jge
pushl
cmp
push
sahf
jmp
xchg
lds
sub
push
and
xchg
idivl
aas
inc
hlt
mov
jp
add
jnp
adc
out
sbb
pop
inc
mov
jb
xor
pop
iret
lock
data16
cmp
mov
and
stos
incl
push
stc
loop
popa
fldl
into
std
loopne
ja
add
xchg
inc
and
sti
ja
cmpsb
jg
jg
iret
mov
icebp
adc
push
inc
nop
push
outsl
in
call
adc
scas
fbstp
and
les
ficompl
xchg
loope
lock
pop
sub
and
aas
mov
inc
or
out
cmp
call
push
dec
iret
vprotd
adc
mov
mov
jmp
cli
outsl
je
cmpl
xor
xor
adc
test
sub
mov
cli
out
test
add
inc
scas
dec
lea
es
xor
mov
adc
inc
inc
outsb
adc
lds
or
lds
pusha
mov
sar
shll
mov
incl
sti
mov
adc
and
fidivrs
and
xor
jae
or
xchg
mov
int
pop
pop
cmpl
mov
xchg
movsl
xchg
adc
rol
rol
pop
gs
stc
push
stc
jo
sbbl
lds
ret
call
jg
mov
adc
adc
arpl
sbb
push
loop
in
mov
pushl
cmp
sbb
and
call
loop
and
jge
aam
mov
xlat
push
pop
addr16
adc
aas
push
loopne
jnp
adc
sarl
and
mov
jnp
subl
jno
pop
aad
lcall
push
sbb
call
fs
sub
inc
rcrl
cs
cld
pop
je
out
sub
sub
pusha
or
inc
std
cwtl
decl
orb
insb
jmp
or
inc
cmc
incl
fldl
adc
pop
sti
and
pop
and
cld
ja
repnz
xchg
jge
mov
sbb
sti
popf
sahf
data16
mov
clc
mov
aam
aad
mov
jle
call
or
fcom
mov
xchg
mov
push
inc
push
rcl
mov
dec
sbb
or
sbb
and
test
cmp
mov
dec
lds
xchg
mov
dec
scas
xchg
mov
cmp
cmp
mov
add
cmc
or
sbb
test
add
aad
xor
jp
aaa
in
cli
ja
shlb
lret
data16
mov
mov
add
xchg
adc
xor
insl
aas
pop
push
sbb
out
rcrb
stos
or
adc
pop
sub
popf
add
hlt
and
sbb
out
inc
dec
into
push
or
and
jl
cmp
pop
lret
lcall
stc
sub
icebp
and
shl
xchg
jp
pushf
bound
out
out
or
out
sub
cmp
arpl
push
das
cs
addr16
fisttps
and
fbstp
outsl
adc
popf
out
lea
test
lret
or
out
add
fmul
pop
push
cli
inc
mov
jecxz
gs
cmpsl
ror
call
xchg
call
aam
andl
negb
pop
mov
mov
js
roll
decl
jae
xchg
stc
cld
mov
xchg
pusha
clc
aad
and
mov
ja
xor
dec
dec
fstl
out
pop
or
inc
sbb
stos
xchg
outsl
fmulp
arpl
jg
test
test
in
sub
shr
jo
xchg
fimuls
push
push
mov
jae
push
jae
pop
ds
mov
out
in
dec
fdivrl
scas
jnp
movsl
daa
cmp
testb
cwtl
xchg
mov
in
or
icebp
push
icebp
pop
pop
loop
out
inc
sbb
loop
mov
jecxz
inc
sub
jo
mov
cld
pop
loope
dec
lcall
imul
ja
sbb
sbb
pop
lock
ljmp
cmp
mov
mov
sub
dec
std
aas
cli
popf
sub
mov
sub
out
pop
jecxz
sbb
mov
daa
daa
fsubl
cs
jg
push
adcl
sbb
mov
lock
jne
or
sbb
out
xchg
in
push
ljmp
cmc
inc
mov
pop
or
cli
aas
orl
mov
dec
dec
xor
scas
lcall
jnp
push
pop
jne
jno
jecxz
sbb
lock
ja
mov
pushf
sub
mov
int3
inc
mov
or
mov
ds
pop
mov
lods
stos
dec
movsl
pop
je
jb
je
or
sbb
outsl
lods
mov
push
popa
outsb
mov
aaa
mov
mov
mov
ss
addr16
stos
jno
cmp
clc
dec
xchg
push
movsl
pushl
out
std
gs
das
nop
mov
xchg
rcll
cltd
mov
loope
mov
jb
dec
mov
outsl
test
sub
xor
xlat
dec
mov
sub
cmpb
dec
bound
and
sub
cmp
imull
xchg
xlat
sbb
mov
hlt
lahf
ret
test
pxor
inc
les
mov
jo
sarb
lods
imull
push
sarl
sbb
cmp
cwtl
xorb
repnz
xor
outsb
leave
jmp
and
add
jecxz
insl
sub
or
pop
decl
inc
dec
mov
stos
pop
mov
outsl
add
int
call
mov
add
loope
push
push
xchg
and
stc
mov
xchg
cli
int3
addr16
cmp
fdivrl
mov
fists
or
sbb
mov
testb
sub
movsb
push
sti
mov
popf
push
inc
xor
test
jno
xor
aas
lock
loop
and
inc
in
test
inc
cli
aaa
nop
sti
shr
dec
ret
push
jp
adc
jae
add
jne
pop
das
add
in
arpl
push
xchg
std
lods
int
out
jbe
xor
pop
push
inc
sahf
or
mov
iret
fnstcw
loope
movsl
mov
loop
decl
pop
out
mov
pop
hlt
pop
cmpsb
out
repz
mov
pusha
lock
in
mov
push
pushl
cld
adc
lret
rclb
notl
push
xor
imul
mov
xchg
aaa
nop
jo
jle
enter
push
cli
ja
xchg
stos
loopne
cmp
ljmp
xchg
outsb
nop
sub
mov
xlat
std
add
lahf
pop
xor
fwait
dec
sar
js
pop
filds
mov
cs
adc
outsl
cmp
lock
adc
lcall
pop
and
adc
ds
in
mov
mov
or
outsb
ja
sub
in
dec
cli
popf
icebp
mov
sub
dec
insl
mov
push
lahf
shlb
jo
aas
insb
clc
sti
push
in
sub
mov
mov
push
stc
adc
mov
jg
sarb
mov
cwtl
data16
mov
into
pop
fcompl
cmc
into
das
sbb
outsl
fdivrl
sub
fimuls
ja
lret
outsl
sub
push
jg
movsl
imul
cmp
ret
mov
sub
push
cmp
sbb
or
andl
cld
and
mov
and
incl
out
adc
mov
sub
push
test
adc
mov
fwait
jne
mov
nopl
aas
outsl
fdivr
xchg
jnp
push
sub
sbb
push
push
jg
orb
lea
pop
jo
aas
inc
or
sar
insl
fld
jg
call
dec
fs
and
inc
mov
sub
popa
pushf
sbb
mulb
pop
call
fdivr
mov
mov
mov
jbe
or
mov
mov
outsl
cli
or
and
out
add
add
sar
mov
test
loopne
outsl
jno
dec
cs
cmpsb
adc
add
cs
stos
jnp
aas
movb
adc
icebp
or
mov
jl
les
je
sub
jae
adc
sbb
insl
sbb
jg
mov
cmp
jae
call
lods
insb
loop
fs
dec
hlt
clc
mov
mov
inc
les
and
imul
loope
push
jecxz
psrlw
mov
aad
push
adc
adc
ficomps
mov
out
and
inc
sub
icebp
lcall
xchg
sub
jbe
sub
lods
cmp
pop
inc
sub
push
js
sub
aam
sahf
loop
sub
push
mov
out
idivl
nop
cli
jg
loopne
inc
jg
leave
or
inc
add
sub
cwtl
jg
lcall
add
out
rorb
adc
xor
cmpsb
incb
mov
pavgw
lds
mov
pop
xor
repnz
push
jg
call
add
call
and
xor
into
lock
out
out
xchg
test
push
addl
xchg
add
cld
xorb
mov
xchg
cmc
lahf
jmp
inc
add
fldcw
aas
das
bswap
leave
adc
xor
fnstsw
cmc
call
in
insb
outsl
loopne
jl
mov
push
xchg
or
sbb
fdivr
xchg
subb
cmpl
cld
cmp
lock
jne
sbb
clc
fiadds
push
pop
push
mov
dec
movsb
jl
test
push
sbb
pop
mov
js
jb
and
adcl
scas
mov
rcrb
dec
fbstp
push
mov
cs
arpl
xchg
lcall
lahf
enter
out
mov
ss
std
in
push
out
sbb
aas
leave
ret
fildll
int
push
imull
lock
push
cmp
leave
add
push
inc
jbe
push
xlat
mov
mov
or
inc
int
pop
xchg
mov
imul
loope
mov
lret
push
mov
or
testb
popf
sbb
les
call
pop
push
out
aam
push
lahf
rol
pop
mov
jmp
scas
jp
and
xchg
out
sbb
cwtl
mov
arpl
inc
jge
jne
pop
jl
adc
xchg
jbe
ror
sub
mov
aas
cmc
inc
push
fwait
out
bnd
mov
call
jbe
adc
sub
cmp
mov
xor
hlt
push
and
int3
notb
int
decl
xchg
notl
aad
dec
dec
sub
sbb
out
fmuls
mov
jle
mov
fistps
mov
mov
add
ljmp
daa
ja
pop
mov
fninit
in
mov
ljmp
add
je
sar
popa
aas
arpl
int
cld
mov
std
push
out
mov
xchg
sahf
sar
je
daa
jne
sbb
pop
ret
pusha
adc
inc
adc
adc
sti
mov
nop
cmp
push
mov
cwtl
xchg
or
je
or
dec
cli
dec
addr16
daa
sbb
add
jnp
cld
repz
sub
mov
dec
imul
cmp
insb
mov
fs
lods
out
aaa
ja
outsl
rolb
mov
imul
insb
sti
jns
leave
jnp
sub
sbb
movsb
pop
pop
loopne
inc
lods
std
daa
mov
cmpl
add
cmpsl
pop
xchg
jg
pop
ljmp
sub
mov
xchg
mov
mov
clc
ret
cli
fnstsw
les
gs
or
inc
shl
aas
cmp
jae
push
into
push
dec
pop
test
inc
add
in
loopne
sub
insb
popa
pushf
push
cli
mov
fisubs
loope
pop
seta
adc
jle
mov
inc
fdivrl
in
mov
lds
dec
adc
mov
adc
pop
inc
fmul
loopne
aad
sub
out
repnz
xchg
add
adc
ret
jo
fdivs
add
les
in
sbb
mov
pusha
loop
cld
test
xchg
pop
jno
cld
inc
jmp
fisubrl
jno
stos
jecxz
inc
js
mov
cmc
sahf
aas
dec
pop
xor
divl
jmp
inc
sbb
in
and
mov
mov
pop
mov
mov
sbb
pusha
popa
dec
push
clc
test
ds
jge
in
and
mov
mov
jg
cltd
push
mov
mov
mov
dec
fwait
lods
mov
mov
jg
cli
lahf
in
stos
aam
dec
out
jae
or
mov
xor
mov
mov
in
xchg
cmp
push
sbb
cltd
jmp
jnp
lret
cmpsl
cli
test
fstpl
fwait
adc
sahf
cltd
add
push
cld
cmp
shlb
and
inc
inc
xorb
jg
lods
inc
imul
add
cltd
mov
push
push
cmpsb
pop
cmp
push
jmp
jmp
stos
shl
push
cmp
xor
sbb
lock
xor
push
lahf
repz
daa
jmp
out
lret
jecxz
or
or
adc
xchg
imul
pop
and
or
cmp
ucomiss
roll
jmp
dec
adc
imul
mov
sub
arpl
xchg
add
push
fidivrs
push
inc
addps
lahf
shlb
or
outsl
lods
pop
inc
clc
ja
sub
jne
in
rolb
inc
jp
push
lret
cmp
out
mov
jg
xchg
push
rcrb
aaa
std
cmp
fisttpl
xor
in
pop
xlat
ja
add
repz
ljmp
add
vmptrst
and
popf
add
jno
lock
mov
xor
sbb
test
pop
sub
and
or
lret
and
jecxz
xlat
inc
scas
xor
xor
decl
testb
mov
adc
fdiv
scas
dec
pop
mov
xchg
jb
outsl
xchg
cli
mov
out
sbb
test
int
adc
jo
add
hlt
mov
or
mov
or
jnp
xchg
ret
iret
inc
std
and
xchg
movsl
sbb
fdivrp
push
mov
xchg
bound
ror
sbb
pop
sbb
outsl
lock
jno
adc
add
mov
es
push
xchg
lcall
xor
jne
orb
jmp
xor
xor
cmp
mov
inc
push
in
dec
xor
in
adc
xchg
lds
test
sub
cmp
out
movb
xchg
popl
lret
les
lahf
pop
stos
cli
inc
shr
add
adc
lret
mov
nop
fiaddl
jmp
sarb
sar
int
xchg
lock
jge
and
pop
decl
or
in
inc
mov
ja
lea
loop
or
xchg
push
sbb
lret
ffreep
or
out
nop
push
dec
sbb
mov
dec
jg
lahf
jg
rcrb
fcoms
leave
pop
fldcw
sarb
pop
mov
mov
add
daa
xorl
adc
outsb
lret
out
mov
sti
lock
jb
mov
mov
hlt
out
loope
int
mov
bound
cmp
xchg
xchg
sti
jne
sbb
sub
jo
jg
lock
lahf
les
push
test
pop
push
lea
cmp
lcall
dec
clc
iret
stos
ret
scas
sub
xchg
insb
icebp
add
test
jmp
fnstsw
pusha
std
sub
dec
push
xor
pushl
leave
sbbl
movsl
sub
mov
cld
ljmp
decb
mov
pop
or
add
dec
push
mov
js
in
pop
jecxz
push
jmp
mov
daa
sbbl
sbb
inc
or
mov
nop
dec
add
loopne
push
mov
out
add
call
dec
rolb
cmpsl
stos
mov
sbb
sbb
xor
pop
push
incl
and
push
out
pop
loop
outsl
and
aas
or
fimull
loopne
std
dec
jb
mov
test
xchg
aas
add
mov
jno
js
pop
les
repz
inc
fisubrs
and
mov
xor
add
fcmovu
pop
les
sti
xlat
movsl
addr16
mov
in
push
inc
pusha
stos
xor
lahf
rorb
xchg
xchg
incb
push
xchg
mov
aam
addr16
cmc
aad
and
arpl
pop
mov
out
cmp
in
sarl
or
jmp
divb
push
mov
in
cmpsl
push
fwait
loopne
jb
push
rol
lock
mov
inc
lret
aaa
adc
cmpsl
cmpsb
lock
inc
adcb
fldl
ret
push
cmc
scas
lock
call
jnp
push
clc
jmp
and
out
ljmp
inc
inc
mov
arpl
jnp
mov
cwtl
insb
inc
aas
and
adc
in
cmp
inc
stc
or
js
push
iret
sub
and
pop
icebp
push
mov
sbb
out
sub
cli
sub
jb
into
ds
stos
add
mov
pop
inc
jnp
hlt
fisubl
cmpl
pop
jno
jg,pt
push
sbb
dec
rorb
xchg
mov
rcrb
cmc
inc
in
dec
out
shrb
dec
jmp
dec
adc
cli
pop
popf
scas
xor
test
enter
aas
shll
pop
jg
clc
pop
test
lret
lret
cmp
mov
cmpsl
add
lods
xor
fistpll
jne
push
add
or
jno
pop
sub
dec
movsl
outsb
jne
nop
adc
pop
jmp
xlat
mov
mov
pop
xor
jmp
jmp
add
push
cmp
sub
cmpsb
push
pop
and
data16
pop
out
and
xchg
push
ljmp
inc
pop
mov
fisubs
decl
xor
aas
sbb
lret
pop
sarb
cwtl
sarl
mov
inc
lods
jecxz
add
or
mov
mov
or
cmp
add
into
adc
fisubl
mov
inc
and
mov
add
jmp
rorl
mov
insb
mov
outsb
cmp
or
ficomps
mov
dec
fsubs
clc
jg
cmp
inc
pop
ret
jmp
fs
and
ret
loopne
lcall
jp
fwait
xchg
or
sub
mov
lock
inc
mov
fistpl
sbb
mov
sub
add
and
push
lea
mov
or
inc
loope
in
or
dec
lods
out
jp
mov
jo
adc
fnclex
mov
cmp
push
rolb
fistps
inc
gs
inc
lds
call
pop
incl
insl
cld
sbb
jecxz
cmp
jb
cmp
and
inc
adc
adc
icebp
sub
data16
pop
jbe
fisttpll
movsl
clc
dec
cmpsb
daa
add
mov
mov
pop
cltd
cwtl
andl
data16
decb
stos
ret
aam
mov
ja
mov
add
decl
mov
mul
loopne
sbb
loop
addr16
jge
in
sbb
dec
loope
xor
mov
sahf
push
pop
mov
out
inc
inc
cmp
iret
jne
adc
dec
lock
repz
push
dec
out
mov
add
iret
dec
and
sbb
movsl
push
movsl
or
adc
push
push
and
out
pusha
repz
pop
adc
pop
xchg
jecxz
and
sar
int3
pop
aaa
out
jno
mov
mov
sbb
int3
stos
fs
mov
dec
ficoml
int
and
aas
testl
jnp
sbb
cmp
adc
pop
pushf
pop
pop
mov
leave
dec
jnp
pop
xor
movsl
cwtl
icebp
popf
mov
iret
add
mov
add
arpl
lds
dec
arpl
mov
inc
sbb
inc
ljmp
imull
ret
sub
lds
cli
hlt
xor
std
iret
jecxz
scas
nop
xchg
jbe
dec
jno
mov
movsl
lcall
mov
dec
pop
call
mov
in
adc
sbb
jne
sar
cmp
iret
add
sarl
cmp
jl
jg
and
mov
dec
pop
xor
loope
test
push
loope
cmp
add
bound
sbb
imul
push
push
push
pop
push
jle
inc
pop
sbb
outsl
popf
push
aam
sahf
sbb
sub
clc
and
add
enter
sahf
out
daa
mov
roll
or
xor
lock
adc
inc
sub
jne
push
gs
mov
daa
rorb
loopne
cwtl
aad
adc
es
cmpsl
add
adc
lahf
sub
outsb
jg
push
and
into
insb
pop
outsl
outsb
sub
push
pop
lret
adc
add
mov
aas
push
inc
xor
dec
aam
in
loopne
push
inc
mov
test
decb
sbb
push
inc
jmp
daa
push
outsb
clc
mov
fsub
push
inc
jbe
and
xchg
inc
ror
dec
ja
push
lock
inc
mov
aaa
xor
add
or
jbe
mov
cmp
push
popa
int
addr16
loope
and
dec
or
inc
call
adc
addr16
push
or
add
ss
add
gs
clc
jg
ficoms
fnstcw
xorb
inc
mov
jg
mov
inc
mov
jmp
aas
mov
jno
into
inc
sbb
inc
adc
cmpsb
cmp
imul
inc
push
mov
add
pop
popf
and
inc
aam
jns
or
push
push
rol
fs
pop
xor
jecxz
and
mov
dec
mov
mov
inc
mov
lods
out
jne
adc
fs
fs
push
cld
inc
popa
mov
inc
add
adc
dec
xor
and
sub
movb
inc
shll
jae
adc
pushf
mov
sbb
mov
cld
inc
add
mov
dec
adc
pop
xor
shrb
subb
int
push
sbb
test
inc
inc
push
or
adc
into
and
and
pop
outsw
fs
add
add
and
jecxz
mov
jno
movsb
stos
or
daa
or
sub
inc
dec
insl
jno
push
adc
into
xchg
sub
lock
push
jo
movsb
add
loope
xchg
rcll
out
incl
mov
les
or
jne
sub
ljmp
out
dec
xlat
add
xor
and
add
clc
cmc
mov
imul
mov
ret
ret
add
lret
push
hlt
push
cmp
jle
iret
dec
adc
sbb
adc
orl
mov
pop
cld
loop
inc
sub
push
shlb
jb
mov
push
out
push
loopne
pop
outsb
mov
inc
adc
dec
add
mov
out
ret
outsb
inc
push
lret
jns
and
test
imul
add
loopne
or
mov
push
test
into
mov
sbb
inc
in
test
or
add
sbb
hlt
pop
in
xor
adc
loopne
and
data16
ret
adc
push
adc
popa
push
stc
adc
adc
outsl
cmpsl
loopne
sub
mov
cltd
xor
inc
fdivrs
adc
insl
cmp
dec
jne
sbb
or
inc
mov
pop
jbe
push
fs
loop
and
or
insl
aad
add
pusha
cmc
in
cmp
or
pop
lock
mov
jae
mov
cmp
or
xchg
jno
dec
mov
arpl
scas
push
inc
mov
insb
dec
xor
add
gs
mov
jno
or
icebp
lret
sbb
pop
loope
mov
or
dec
add
cli
out
mov
xor
decb
pop
xchg
mov
jne
insl
imul
jp
push
ret
sub
pop
push
cltd
or
adc
loopne
or
sub
jbe
dec
xor
fcoms
loopne
jno
push
nop
inc
jle
xchg
mov
and
je
lret
inc
pop
push
inc
push
jne
jmp
es
sub
ret
and
clc
outsl
pop
and
mov
js
imul
or
in
lock
push
and
subb
inc
gs
cmpb
add
dec
arpl
dec
sbb
lock
dec
repnz
push
mov
stos
sti
shlb
dec
aam
push
call
jle
dec
jns
outsl
pop
clc
inc
insb
loop
push
cli
sbb
adc
add
inc
lahf
jbe
and
test
outsl
and
xor
xlat
jno
jle
aaa
push
sub
lret
sub
pop
cmp
push
loopne
lds
dec
push
jae
or
mov
adc
es
mov
les
inc
sbb
inc
adc
pop
imul
les
aaa
xchg
out
testb
jb
fildll
cli
push
pop
mov
stos
sbb
inc
adc
cltd
cmpl
push
insb
clc
cmp
inc
fs
sbb
cmc
hlt
xchg
mov
mov
jns
in
cmp
in
jo
pop
adc
inc
push
dec
inc
ss
adc
mov
lahf
test
mov
fwait
mov
jmp
push
jne
in
sub
jo
inc
addr16
pop
arpl
and
cmc
mov
into
mov
mov
ss
div
mov
xor
sub
push
add
dec
outsl
test
dec
js
add
add
mov
push
les
xor
xlat
inc
mov
mov
fidivs
mov
cltd
dec
mov
mov
xor
and
test
das
sarb
add
in
dec
cli
cli
sub
mov
add
sub
xchg
divb
daa
imul
jb
xchg
out
adcb
sbb
push
xchg
add
dec
mov
test
addr16
mov
jae
dec
test
jo
add
sti
pop
andl
pop
hlt
imul
rolb
sahf
and
xor
xorb
adc
pop
pop
xchg
xor
add
outsb
hlt
sub
cs
repnz
stos
add
sub
adc
out
sbb
icebp
std
test
ret
xchg
mov
cmp
jecxz
adc
xor
out
jbe
popf
in
mov
insl
je
shll
inc
dec
int3
dec
andl
in
mov
fimull
mov
add
xor
psrld
push
push
xchg
outsl
outsl
xchg
dec
xchg
cmp
fbstp
add
dec
add
or
loopne
lcall
push
arpl
inc
add
fwait
lret
mov
lret
and
mov
mov
or
lods
rcr
cmp
lods
sub
ret
and
adc
xor
pop
jmp
js
sahf
imul
jle
jmp
xchg
jns
jo
lret
cmp
push
mov
repz
dec
sbb
jns
inc
inc
cwtl
push
pusha
xor
inc
push
sub
imul
adc
test
xlat
xor
and
cmpsl
and
arpl
sbb
and
add
xchg
testl
cwtl
mov
adc
adc
insb
jl
js
or
mov
cmp
and
mov
add
fsts
call
ljmp
mov
jle
xchg
and
or
fsub
push
jmp
mov
call
jecxz
xor
test
push
xor
add
add
pop
bound
mov
dec
or
pop
aas
add
adc
popa
jp
or
sbb
sbb
es
inc
cmp
addr16
imul
sbb
xchg
and
mov
adc
ret
int
clc
mov
and
movl
pop
xor
in
xchg
ds
and
dec
data16
jmp
xor
xor
xlat
mov
and
enter
mov
insb
and
jne
lahf
lcall
rorl
adc
sbb
ja
gs
leave
das
daa
mov
stc
pop
in
es
mov
or
push
movsb
popa
inc
loopne
inc
aam
mov
clc
mov
inc
push
loop
and
and
mov
loope
pop
jo
scas
out
ljmp
or
add
pop
sbb
pop
lcall
cmc
iret
lea
dec
lret
sub
adc
push
or
test
cli
push
ljmp
cmp
jbe
cli
cwtl
and
aad
scas
out
or
pop
std
inc
and
xchg
notl
xchg
mov
rorb
shll
jp
fadd
out
mov
cmpsl
and
mov
imul
jp
call
sub
adc
in
push
and
mull
dec
cld
mov
jge
int3
std
fildll
or
xchg
test
cmp
inc
stos
es
push
mov
cmp
popf
sarb
push
jmp
push
adc
sub
push
add
test
cmc
jbe
fnstenv
mov
loopne
add
mov
clc
int3
lods
dec
movsb
mov
mov
idiv
mov
lret
sub
loopne
cmpsb
movl
inc
outsl
or
mov
orb
cmp
add
inc
adc
stos
mov
mov
test
sub
andb
rcll
jge
shll
jmp
jp
sub
movsb
or
or
push
cmpsb
jo
xchg
daa
aaa
std
inc
inc
add
mov
sbb
inc
imul
or
lea
cmc
sbb
lea
add
add
mov
rolb
cmp
jmp
pop
jp
test
xor
dec
push
sub
mov
push
test
loop
mov
shrb
imul
addl
mov
add
pusha
cmp
stos
cmpsl
inc
inc
fisttps
inc
jle
xchg
ja
fidivs
cmp
jecxz
adc
xor
pop
cmp
push
xchg
dec
xor
loopne
in
lock
xlat
xchg
mov
push
imul
mov
popf
notl
test
mov
js
push
mov
xor
sti
mov
sbb
adc
dec
insl
test
xchg
xor
pop
rolb
jg
sub
xchg
out
loopne
lods
xchg
lcall
sahf
test
pop
pop
push
or
jl
xor
lcall
mov
sbb
les
or
dec
jp
cmp
sub
lods
push
xlat
cmp
fwait
xlat
or
ss
daa
or
jns
cmp
fisttps
movl
adcb
add
subl
mov
adc
stc
jbe
sbb
mov
jge
add
or
cmp
lea
ret
mov
scas
and
xchg
sbb
mov
jo
inc
je
xchg
xor
pop
insb
dec
pop
pusha
pop
in
push
or
loopne
jo,pt
inc
addr16
ds
jge,pn
mov
mov
sbb
xor
in
jle
stos
out
das
jnp
repz
xchg
pop
fdivs
shl
add
add
mov
repz
xchg
ds
mull
cmpsb
imul
test
adc
loopne
rcrb
andb
ljmp
int
pop
loop
movsl
xor
fwait
inc
aad
das
sbb
faddl
out
jecxz
sbb
mov
mov
fnstsw
daa
movsl
jmp
adc
mov
repnz
sub
xchg
movsb
lret
sbb
or
jge
iret
call
pop
xor
dec
pop
decl
fsubl
sti
xorb
cld
shrl
in
adc
in
test
and
out
in
mov
cmp
inc
in
sub
add
js
jbe
sbb
push
das
adc
jns
sub
and
jg
adc
out
nop
cmc
cmp
dec
sub
inc
pop
mov
int
push
outsb
sbb
dec
mov
pop
loop
fs
xor
sub
jmp
jmp
add
push
xchg
mov
or
adc
sub
add
add
xchg
sub
subl
pop
sti
adc
enter
std
popf
cmp
icebp
add
imul
push
insb
xor
jp
add
or
into
sub
jge
fsts
test
pop
xorb
mov
xchg
fnclex
scas
pop
stos
cmp
aam
adc
das
sbb
sbb
lock
stc
mov
dec
insl
sbb
mov
test
mov
les
pop
xchg
inc
mov
dec
pop
inc
jl
fistl
xchg
and
adc
lods
fisttpl
ds
mov
jp
xor
adc
leave
mov
xchg
aas
mov
xchg
stos
push
and
repz
addl
test
lods
jo
pop
in
cltd
stos
sti
cmpsb
outsl
lds
xlat
push
and
dec
mov
out
ds
clc
xchg
add
dec
dec
fwait
or
jmp
out
dec
push
push
insb
rclb
pop
pop
das
pusha
hlt
rcll
and
ja
add
mov
cmpsl
lret
mov
nop
in
adcl
cli
mov
mov
out
xchg
adc
icebp
sbb
call
push
sub
ja
lock
xchg
xchg
mov
scas
scas
movsb
add
push
add
pop
hlt
sub
subb
test
dec
jg
add
lahf
jge
cltd
out
ljmp
mov
inc
scas
pop
xchg
dec
inc
cmpsl
es
and
imul
mov
rcrb
add
aas
mov
idiv
mov
inc
pop
in
adc
roll
leave
aad
cmp
jmp
fndisi(8087
pop
aad
int
mov
int3
and
or
aaa
mov
mov
popa
push
jb
inc
shll
clc
pop
inc
mov
mov
jmp
and
movsb
mov
mov
ja
testb
push
loopne
mov
ss
test
cmc
pusha
les
stos
fisttps
and
in
aam
cmp
adc
and
ljmp
rorl
mov
lahf
mov
ss
icebp
mov
mov
mov
stos
jo
mov
pop
push
sbb
sbbb
add
jle
movb
shrl
pusha
test
mov
flds
inc
fildll
fcoml
bound
cmp
mov
push
mov
and
sbb
jb
inc
push
rcrb
shlb
cmp
and
js
movsl
stc
jbe
ljmp
popf
sbb
out
push
sub
out
dec
sbb
test
add
clc
in
repz
mov
cmp
cmp
mov
clc
and
pop
jmp
lea
andb
cltd
loopne
and
sbb
nop
or
addr16
dec
lock
push
je
cmp
and
test
push
mov
dec
xor
xor
add
push
mov
cld
test
les
pop
jmp
sbb
sub
dec
inc
sahf
in
sub
inc
cmp
inc
gs
push
pcmpeqw
and
js
lock
or
scas
test
pop
inc
adc
and
cs
mov
das
xor
into
dec
popa
and
mov
pusha
jne
notl
pusha
sub
cmp
movsb
pusha
imul
jecxz
adc
mov
pushf
sbb
hlt
push
movsl
mov
add
jp
imul
and
fs
mov
mov
push
and
in
lock
mov
lea
lock
jae
lock
daa
out
rcl
or
adc
pop
pop
xor
loopne
pop
call
jge
cld
inc
aaa
xorb
mov
mov
orl
je
cmp
adc
pop
push
stc
sbb
mov
es
in
mov
mov
dec
mov
push
out
jnp
sub
xor
sbb
inc
add
dec
fldl
sbb
scas
cmc
sbb
cld
aas
fistl
ja
pop
push
sub
and
fidivl
cmp
cmp
in
outsl
jne
dec
lods
pushf
cmc
aad
xchg
add
mov
xor
cmpsl
das
sti
test
ret
mov
pop
ret
neg
cmc
shl
mov
pop
or
ret
xor
lods
scas
sub
mov
jl
mov
ds
stos
lahf
or
xchg
fcoml
insb
and
incb
sbb
gs
inc
push
int3
jmp
fwait
sti
cmc
jb
adc
loop
pop
loope
incl
jo
ljmp
movsb
popf
dec
adc
addr16
movsb
pusha
sbb
push
xor
mov
cmpsb
and
loopne
push
adc
xlat
jecxz
inc
fistps
add
aam
push
in
orb
sub
ret
fs
lods
fsubs
lock
imul
xor
push
sahf
sbb
xchg
jmp
and
push
aas
sbb
pop
sarl
jns
add
iret
dec
add
sarl
inc
sbb
aaa
stos
add
lods
addr16
or
pushf
in
push
out
imul
ret
loop
es
call
jl
jle
dec
xorl
inc
cs
xchg
ljmp
das
repnz
add
mov
arpl
out
add
add
icebp
add
xor
fdivrl
inc
ljmp
mov
out
scas
push
lea
das
lret
divl
push
clc
xor
mov
adc
inc
fs
clc
xchg
js
rcrb
inc
cmp
mov
cmpl
arpl
push
push
es
xchg
push
xchg
jo
cld
rcll
scas
clc
sbb
out
repz
push
jecxz
or
adc
sahf
push
push
or
push
stc
and
lret
lock
std
sbb
cmp
mov
shll
orl
pop
dec
xlat
mov
mov
data16
cmp
push
aam
loope
add
adc
jo
sub
jb
adc
xor
mov
mov
dec
pop
popf
adc
mov
pop
or
imul
push
scas
cli
ret
inc
mov
rcrl
add
push
addr16
fwait
cs
push
fidivl
pop
scas
mov
sbb
dec
jmp
dec
and
pop
hlt
inc
imul
push
push
test
hlt
cmp
test
xchg
shlb
lods
sub
mov
dec
pop
gs
ret
cwtl
dec
dec
fwait
cmp
mov
mov
mov
repz
inc
das
ret
mov
sub
mov
dec
stc
orb
sbb
test
in
mov
inc
out
dec
cmp
daa
push
daa
rcrb
hlt
xlat
test
xchg
sbb
fsubrs
push
dec
orl
lods
fdivrl
stos
int3
dec
pusha
loope
fimuls
add
test
add
pop
mov
arpl
pop
add
pusha
pop
mov
cmp
sbb
jge
and
roll
les
mov
mov
pushf
clc
call
outsl
ljmp
enter
nop
and
enter
aam
cwtl
ljmp
inc
push
ret
lds
imul
hlt
cmc
dec
pop
adc
xchg
inc
arpl
mov
mov
jae
or
jmp
pushf
xchg
sub
pop
iret
mov
divl
jno
add
stc
loope
jo
push
mov
dec
push
pop
lods
ud1
stc
pop
push
jmp
pop
mov
hlt
lea
cli
jmp
ja
cmp
push
imul
jbe
aam
aam
pop
sub
mov
push
jmp
pop
cld
adc
xchg
cmp
adc
cltd
dec
movlps
cmp
cwtl
ja
push
int3
mov
mov
xor
bound
fstpt
xchg
aaa
cld
icebp
cli
xor
adc
movsb
test
lock
pop
cmp
inc
lds
test
sbb
push
jl
nop
bound
sub
aad
xchg
cwtl
movsb
stos
adc
and
mov
xchg
cmpsl
scas
pop
popa
ljmp
insb
and
je
jl
cmp
je
jnp
push
mov
sub
add
mov
das
mov
loop
dec
jmp
mov
jp
stc
xchg
sbb
or
xor
test
ds
jno
and
xor
loop
add
std
adc
hlt
stos
pop
ja
mov
mov
scas
xchg
call
jp
pop
jno
fdivr
or
stos
int
cmp
inc
test
sbb
jp
push
imul
jb
xor
ljmp
leave
or
xchg
mov
in
daa
xor
add
orb
inc
or
cld
sub
icebp
mov
pop
nop
and
jle
add
xchg
pushf
mov
int
push
cld
leave
sbb
dec
mov
push
call
xchg
lret
gs
cmp
mov
mov
push
push
rcpps
jge
js
hlt
cmp
inc
loopne
pop
movsl
xchg
pop
push
les
stos
and
pushf
xchg
clc
fisubrs
xor
lock
dec
jo
repz
push
sbb
popa
test
or
sarb
loop
pusha
jne
mov
bnd
xchg
mov
jle
pop
in
ljmp
ret
test
pop
das
inc
cwtl
adc
inc
jecxz
adc
aad
xchg
add
repz
or
mov
jl
cmp
push
cmp
orb
aad
sub
or
fildl
push
icebp
or
mov
mov
dec
xchg
push
cwtl
lods
add
fsub
iret
daa
dec
cmp
pop
xchg
or
xchg
into
lods
cmpsl
push
jp
sbb
fisttps
lsl
icebp
and
inc
xchg
out
adc
inc
sub
lahf
loop
out
or
psubusb
push
xor
adc
and
ljmp
dec
iret
movsl
mov
nop
inc
leave
mov
mov
inc
pop
jno
jge
and
jg
shlb
movsl
pop
repnz
sub
mov
dec
jns
xor
or
xor
cmc
pop
bound
inc
add
inc
mov
jg
fcompl
repnz
push
ret
mov
das
fdiv
int
inc
hlt
icebp
out
pop
js
xor
dec
popa
into
mov
incb
add
sub
sbb
sub
cmc
js
sub
or
push
add
dec
lds
ljmp
xorl
pusha
mov
mov
sub
test
sbb
adc
jecxz
xor
xchg
mov
mov
xlat
lds
lcall
xor
sbb
addr16
jns
push
fsubs
add
dec
leave
xchg
or
mov
push
popa
add
push
hlt
cwtl
enter
out
test
dec
xchg
int3
push
xor
inc
mov
ss
mov
lock
mov
bound
cwtl
in
add
stc
loopne
jnp
add
mov
mulb
or
mov
mov
push
push
movsb
or
test
js
lds
mov
mov
sbb
outsl
enter
outsb
pop
shl
insb
or
test
movsl
arpl
and
pop
loope
dec
pop
or
jns
inc
iret
xchg
icebp
mov
je
xor
stos
or
jge
nop
mov
mov
in
add
jae
test
xlat
dec
and
and
mov
les
test
cmpsl
shlb
jns
jbe
imul
or
mov
sbb
in
enter
jno
push
sbb
inc
sahf
jge
imul
add
or
sbb
ds
and
xchg
dec
loopne
test
adc
cmpl
addr16
cmp
and
icebp
icebp
leave
or
mov
outsl
stc
cmc
adc
cmc
xchg
or
call
repnz
and
xchg
cmp
sbb
es
repz
das
cmc
jb
int
or
in
hlt
or
sbb
jle
or
das
insl
jecxz
push
stos
outsb
rcrb
push
test
daa
add
push
lahf
inc
clc
pop
adc
in
cli
lahf
mov
mov
jmp
movsl
or
test
inc
incb
mov
movsb
mov
sbb
cmp
or
mov
mul
arpl
imul
scas
push
pop
test
xlat
mov
icebp
pop
call
sahf
mov
sbb
jns
pop
ud0
mov
cmpb
jmp
shl
add
ret
lds
cmpsl
push
bound
lahf
xchg
mov
xchg
push
mov
inc
fwait
xor
das
mov
mov
std
out
mov
fdivrl
push
adc
hlt
aam
scas
sbb
popf
cli
xchg
xor
jo
fiaddl
push
or
and
mov
mov
xchg
push
inc
shr
ss
mov
int
and
movsb
jmp
inc
push
dec
pusha
mov
test
dec
sbb
test
inc
rorl
adc
movsl
mov
ret
mov
orb
test
pop
pop
or
jbe
push
add
lcall
mov
and
in
dec
mov
sbb
push
adc
pop
outsb
and
sub
adc
aad
scas
mov
mov
dec
dec
cmp
lret
rclb
cld
sahf
inc
inc
or
lock
leave
cmp
inc
push
sbb
push
stc
mov
in
lods
push
and
mov
in
fadds
or
punpckldq
cmp
mov
fdivl
int3
gs
push
pop
jge
cmpsl
outsl
pop
fsub
cmp
push
adc
ljmp
roll
clc
fcmovnb
ljmp
lods
inc
imull
sub
pusha
jle
out
mov
lds
sub
cmc
jbe
and
add
imul
dec
mov
or
hlt
cs
sbb
dec
rclb
add
or
mov
movsl
mov
or
aas
fcoms
mov
fprem
pop
or
movsb
or
sbb
xchg
iret
shl
adc
fsubr
insb
cmp
or
jnp
ret
pop
mov
sbb
jae
xchg
lock
insl
cmp
pushf
cwtl
loop
jg
iret
push
test
leave
cmp
push
lock
shlb
insb
test
aaa
cltd
inc
paddsw
leave
pop
in
mov
iret
jne
inc
movsb
dec
addr16
xor
clc
cltd
frstor
xchg
fwait
aas
out
popa
jne
cmc
mov
and
sub
fsubrs
aam
cmp
adc
push
enter
xchg
orl
jecxz
lods
in
outsl
cmp
popa
cwtl
cmp
repnz
sahf
cmpsl
mov
jmp
adc
mov
pushf
outsb
ljmp
imull
mov
and
push
or
pop
les
sarl
ja
dec
lret
outsb
cs
cli
clc
add
adc
adc
cmc
sbb
and
or
jecxz
sahf
mov
enter
add
daa
jb
cmpsb
mov
pop
mov
push
lcall
xchg
jb
adc
popl
push
push
xor
cmp
sbb
imul
je
mov
shll
lcall
and
lock
test
inc
push
js
aas
test
add
rcl
imull
jecxz
and
imul
in
lock
nop
cli
movsl
or
sub
pop
aaa
mov
imul
push
adc
mulb
push
dec
xlat
and
das
push
jno
and
ja
mov
pop
mov
clc
mov
inc
jp
cmpsl
imul
cmc
ss
mov
jl
lret
lods
adc
inc
les
dec
int
outsb
jl
cmp
sti
inc
push
ror
pusha
fwait
jo
inc
sbbb
cmp
sub
mov
jmp
sti
aad
push
cmp
mov
jmp
or
xorl
ret
inc
fstpt
in
in
mov
in
stos
mov
mov
ret
movsb
sbb
insl
lods
mov
xor
clc
sbb
mov
outsl
push
mov
push
push
pop
pop
mov
clc
mov
push
adc
sarb
dec
mov
ja
enter
push
push
sbb
jg
xor
mov
push
aas
pusha
scas
or
cwtl
loope
pop
sbb
and
ret
xchg
jns
mov
and
xor
subl
je
and
cli
mov
out
adc
cld
mov
push
pushf
ds
mov
ret
add
addr16
movsl
mov
popf
sbb
pop
or
dec
adc
pop
inc
or
scas
clc
and
in
test
sti
mov
lahf
cmpsl
mov
roll
enter
nop
pop
sarb
leave
push
cmp
xlat
bound
mov
xchg
ljmp
stc
ss
test
loopne
add
adc
inc
pop
pushf
pop
jne
rclb
pop
popa
pop
dec
out
adc
ss
test
scas
dec
push
subl
mov
sbb
idivl
sahf
pop
ja
xor
fdivrp
movsb
iret
xchg
add
sub
stc
adc
fisubs
out
mov
cmp
lahf
xchg
sub
movsl
stc
cs
mov
mov
into
mov
xchg
jg
fdivr
mov
push
fistl
fwait
pop
loopne
ss
jns
subl
mov
dec
push
iret
mov
out
mov
pop
popa
add
add
push
lahf
xor
sbb
add
pop
loope
js
add
jg
jl
xor
inc
push
test
pop
push
xor
or
loopne
cmp
rorl
outsb
jmp
sbb
in
mov
popf
scas
push
or
pop
insl
lcall
mov
adc
jne
cmpsb
push
in
int3
dec
mov
xor
mov
jp
push
lcall
jno,pt
fsubrs
inc
icebp
mov
push
and
stos
sbb
cmp
and
jno
aas
cs
fsubrs
aam
popa
inc
pop
mov
jp
pop
shlb
dec
or
movaps
xchg
int
enter
mov
push
xor
add
popf
pop
ss
mov
cli
out
xchg
cli
aad
jecxz
jl
outsb
les
setne
pop
in
and
sbb
mov
lock
icebp
sub
cmp
xorps
fs
mov
jno
call
add
and
sub
cmp
push
loope
clc
addr16
sti
sarb
jecxz
in
call
push
in
mov
js
lahf
jecxz
inc
or
mov
loope
stc
mov
mov
add
insb
sub
insl
jp
xor
cmp
dec
adc
scas
and
aaa
scas
fistl
add
xor
add
inc
mov
or
ret
lret
jle
adc
stc
sbb
lock
jno
ljmp
fisttpll
rcr
pop
xchg
dec
js
test
lock
into
stos
loopne
pop
mov
xorb
stc
stc
jnp
or
add
xchg
and
cmc
cli
dec
ret
fdivp
arpl
nopl
cmpsl
pop
ljmp
dec
xchg
inc
mov
xchg
test
pop
xchg
mov
into
loope
shrl
mov
out
cmc
jne
pushf
andb
mov
pop
in
daa
mov
js
sub
mov
sub
dec
adc
lahf
mov
imul
xor
mov
inc
jl
es
inc
and
and
adc
js
mov
js
cmpsl
adc
pop
mov
dec
leave
xchg
cltd
sbb
push
stos
mulb
scas
sbb
icebp
popf
mov
mulb
sub
iret
dec
lea
jo
jnp
push
jl
dec
bound
add
cmp
and
lret
out
adc
les
fiaddl
mov
mov
sub
cmpsl
dec
mov
outsb
inc
xchg
jp
xchg
loopne,pt
mov
lods
test
inc
pop
pop
adc
outsb
test
lock
aaa
test
repz
pop
scas
or
xchg
cwtl
jmp
sub
jle
lock
mov
idivb
pop
sub
pop
inc
aas
sbb
loopne
cmp
je
hlt
dec
and
pushw
xchg
mov
or
inc
adc
sub
andb
in
push
fcmovb
rolb
mov
or
insl
es
lea
adc
and
cwtl
push
fstps
sbb
lea
push
jae
cmpsl
mov
jg
jbe
aam
jo
leave
icebp
movsb
stc
incl
dec
add
stos
shrb
dec
mov
mov
adc
fcoml
xchg
and
jbe
sbb
push
mov
daa
mov
pop
fmull
xchg
in
xchg
pushf
sub
ljmp
xor
and
adc
and
ret
xchg
test
nop
cmpsl
inc
cmp
sarl
or
sub
jo
pop
jle
daa
addr16
pop
mov
ret
insb
jmp
sbbb
dec
push
scas
jp
js
popf
ret
cmp
mov
jmp
call
rclb
stc
xorb
push
cmp
repnz
inc
out
mov
lea
enter
bound
pop
mov
xchg
push
mov
cmovle
icebp
cmp
and
js
inc
dec
stc
sbb
lea
fcomip
fs
arpl
xchg
jmp
pusha
sub
iret
int
fs
xchg
je
leave
pusha
cwtl
loope
dec
rorb
mov
insl
adc
mov
lods
mov
and
ret
pushf
imul
jmp
ror
sub
and
out
aad
arpl
aam
adc
inc
xlat
or
lods
sar
and
loopne
test
scas
lods
mov
push
or
scas
dec
insl
cli
and
setbe
enter
ret
dec
pop
test
fadds
adc
movsl
clc
sbb
jmp
les
mov
mov
test
jle
lahf
cmc
aas
mov
ror
sub
movsl
divb
cmpsl
mov
rcl
fsubs
adcb
add
xchg
clc
movl
sub
imul
insl
insb
inc
dec
mov
jae
mov
imul
imul
cmp
fdivl
and
push
outsb
add
dec
mov
push
push
push
adc
mov
nop
loop
ss
jo
repnz
insl
xor
mov
rclb
mov
and
adc
loopne
popf
sbb
nop
rolb
jae
test
jbe
dec
loop
mov
scas
std
or
imul
scas
cwtl
adc
lods
cltd
and
lods
out
cmp
jle
dec
rorl
dec
fwait
pop
inc
addr16
push
movsl
js
lea
add
int3
cmpsb
lods
adc
sbb
imul
es
pop
add
shl
cbtw
cld
jecxz
push
jne
hlt
int3
adc
fildl
rolb
cld
mov
shr
jge
mov
lahf
dec
pop
push
aam
inc
sub
pop
imul
or
call
sbb
shll
jmp
shlb
xor
fucomi
jmp
add
xchg
mov
js
psubusw
sbb
faddl
jae
push
adc
mov
nop
add
cmp
sbb
shrl
lcall
pop
push
push
ret
pop
lcall
jae
sub
mov
data16
lock
jmp
cmpsl
bound
dec
mov
in
or
sbbb
jno
adc
sbb
jg
jge
xchg
icebp
mov
sarb
shr
and
and
pop
dec
or
mov
stc
dec
sbb
sub
clc
test
test
imul
scas
insl
add
mov
add
sarb
pop
loope
pop
pop
inc
movsb
or
or
mov
mov
cld
jl,pn
or
shl
mov
cmc
push
mov
enter
cmpsb
pop
adc
data16
mov
xchg
test
cmpl
cmp
and
cmpsl
ret
or
inc
sbb
xchg
push
mov
and
fistl
jl
aad
and
sbb
bound
jl
mov
push
sub
ljmp
jne
js
icebp
pop
pop
outsb
outsb
mov
icebp
aam
xchg
xchg
popa
dec
mov
lock
je
les
orb
and
add
dec
fst
adc
andb
movsl
jle
cmp
push
enter
add
daa
shld
xchg
pop
jge
cli
lods
lods
mov
movsl
jl
inc
lods
mov
ja
and
mov
sub
std
fcomi
loope
xchg
xchg
mov
inc
mov
push
sbb
mov
inc
lea
sti
dec
jae
lcall
cmp
das
dec
pop
pop
dec
mov
inc
aad
js
jne
mov
xor
imulb
imul
loope
ret
js
sahf
cmpsl
or
arpl
jne
jo
and
sti
je
fsubrs
subl
mov
sub
adc
xor
xor
scas
mov
jle
jl
push
out
andb
dec
aas
subl
dec
jp
xor
adc
cmp
popa
cltd
jae
aam
xchg
jno
xor
pushf
and
movsl
mov
jmp
rclb
mov
rcl
cld
adc
mov
addr16
sub
jnp
xchg
sarl
push
push
pushf
cltd
roll
pushf
stos
inc
stos
jmp
pop
mov
lock
push
fadds
loope
nop
std
lea
jl
shrl
lods
jge
cmp
pop
mov
mov
push
adc
fildll
cld
cmpl
int
hlt
pop
push
pop
push
mov
lods
mov
sbb
mov
popa
mov
mulb
popf
mov
into
push
aam
bound
inc
adc
fildl
ljmp
aam
xchg
pop
repz
adc
cmp
mov
add
es
movsb
dec
cmp
and
les
decb
arpl
dec
or
in
fimuls
into
js
adc
adc
jo
cmp
cmp
lret
stos
in
and
adcb
bound
mov
sbb
cmp
fbstp
and
inc
lahf
addb
jl
xchg
xor
push
in
jg
xchg
sub
jne
sbb
cmpsb
subl
mov
jg
pop
inc
jmp
iret
mov
add
add
ljmp
ja
addr16
xchg
pop
inc
arpl
xor
mov
test
xor
sbb
cmp
lahf
repz
jae
mov
push
stos
xor
jle
cld
xchg
dec
add
or
push
lock
pop
ja
int3
pusha
sbb
out
sub
fsubr
xor
or
aas
xchg
or
aas
mov
shlb
mov
add
jmp
jecxz
test
mov
movsl
das
out
ja
gs
sub
stos
or
sbb
in
cmc
testb
mov
xor
flds
jmp
hlt
pop
cmp
ret
mov
test
ljmp
fbld
adcl
mov
xor
popf
or
xor
mov
push
lahf
sbb
sbb
scas
lahf
xor
push
cmp
mov
pop
lods
jg
nop
je
stc
stc
sbb
jo
test
push
jmp
les
lret
adc
fbstp
jno
int3
mov
stos
cmc
jl
push
inc
mov
ret
push
js
in
xor
mov
push
in
xlat
loopne
es
push
add
lods
and
pop
push
push
jg
fisubrs
pop
mov
mov
mov
push
pop
mov
into
nop
data16
sbb
dec
jl
mov
cmpsb
in
popa
stos
add
subb
xor
pop
lods
sbb
add
in
out
test
sbbl
clc
movsl
inc
andb
push
in
cmp
es
jle
ret
orb
add
sub
mov
cmpl
clc
or
out
sbb
jl
sub
mov
ss
bound
mov
out
xchg
inc
mov
fbld
lret
xchg
inc
dec
hlt
push
icebp
xchg
pop
mov
test
lahf
mov
adc
mov
sub
jp
mov
lahf
test
jmp
std
and
pop
mov
pop
in
add
cmp
mov
in
fwait
sbb
test
cmp
scas
xor
jmp
jbe
push
cmc
aaa
nop
sub
iret
inc
das
dec
addr16
std
xor
jle
shll
cmp
or
adc
sub
mov
insl
dec
jl
lcall
mov
pop
xchg
push
dec
syscall
aam
or
repnz
xor
movsl
adc
add
iret
enter
scas
sub
in
pop
jge
lcall
inc
lds
nop
outsl
popf
push
dec
cmp
mov
push
negb
add
mov
jmp
cmp
pop
push
scas
pop
lea
pop
test
stos
mov
add
and
adc
dec
and
push
rorl
pop
mov
and
adc
rclb
xchg
in
sbb
ds
std
jnp
outsl
inc
push
call
adc
dec
test
adc
and
jmp
enter
loopne
xor
rcll
dec
popf
add
shrl
push
inc
iret
outsl
sub
sahf
mov
mov
and
xchg
das
mov
cmp
out
addr16
sub
jp
push
add
insb
popf
inc
cmpl
cwtl
imul
jnp,pt
cmp
js
push
mov
ret
add
shrl
and
test
mov
mov
sub
dec
shrb
inc
sbb
pop
into
inc
xchg
lret
ds
stos
dec
jmp
sub
rcrb
sbb
lea
push
add
adc
mov
push
push
mov
sub
div
xchg
jnp
fstl
iret
pop
lods
xor
cltd
mov
js
mov
cmp
test
js
popf
mov
icebp
es
scas
and
dec
inc
pop
mov
inc
leave
shl
inc
aas
cli
das
sbb
push
xor
push
fists
push
push
movb
and
xor
out
jmp
pop
paddsw
sbb
push
push
scas
data16
stc
cmpsl
les
lahf
pop
sbb
push
jle
pop
dec
xchg
push
pushf
cmp
stc
mov
add
cmpsl
imul
les
stos
sub
ja
cli
lock
frstor
mov
out
mov
out
daa
jge
ljmp
and
mov
xchg
ljmp
out
and
iret
filds
dec
lods
lds
shll
ds
pop
test
xor
ret
mov
cs
sub
jmp
js
fstpl
or
cmp
lods
adc
adc
jne
or
rcrl
inc
xchg
inc
fwait
arpl
aad
scas
add
push
inc
addr16
mov
lock
in
test
sub
aaa
out
xor
icebp
in
pop
es
jg
cwtl
push
es
mov
mov
mov
mov
jnp
sbb
bound
mov
pop
loopne
and
sub
daa
lock
loope
sub
dec
lea
dec
lret
sti
mov
sarl
cmp
movsl
add
push
sub
nop
add
outsb
dec
out
inc
rcll
xor
jmp
sahf
pop
repnz
ljmp
jmp
fisubrl
xor
pusha
push
stos
push
lds
push
imul
test
cmp
cmp
dec
push
scas
ret
stc
adc
ds
jbe
jl
sbb
mov
cmc
add
lock
mov
icebp
sub
lret
cmpsb
xlat
or
hlt
jae
pop
sbb
outsl
mov
mov
sub
and
dec
incl
jae
sub
lahf
inc
insb
lock
outsb
out
or
inc
adc
outsb
jo
mov
data16
xor
push
sbb
jae
jns
or
ja
adcb
mov
dec
repz
ds
insl
sbb
cmpb
ja
xorl
mov
mov
dec
imull
sbb
std
sub
add
sbb
in
add
adc
test
inc
lcall
lcall
das
jne
xor
xor
add
movsl
jl
pop
push
mov
stos
inc
jp,pn
aas
mov
int
les
cs
andb
fmuls
ds
inc
mov
movsb
jmp
dec
sbb
cmp
jne
jmp
mov
les
xchg
fs
cmp
movsl
lds
lea
dec
mov
mov
scas
ret
jecxz
pop
mov
pop
or
cmp
rolb
jne
mov
sbb
lds
inc
sbb
aas
sub
adc
and
roll
push
nop
dec
dec
popf
xchg
inc
jo
int3
push
rcr
stos
stos
add
call
adc
sbb
ror
mov
je
jp
pop
dec
aas
mov
subb
stos
cld
push
xor
add
or
int
ds
std
aam
pop
mov
sysenter
rolb
jmp
and
mov
sbb
cmc
xorl
lock
cmp
cmp
out
gs
orl
mov
iret
push
popf
mov
push
sahf
loope
add
je
mov
or
aam
leave
ljmp
je
addr16
adc
lahf
stos
iret
loopne,pn
push
mov
jg,pt
sbb
fs
pop
pop
test
push
push
mov
mov
loop
inc
sbb
inc
popa
pop
xchg
sbb
inc
push
sub
outsl
loop
push
mov
cmp
lret
jg
or
inc
mov
cmp
sbb
pop
jo
add
mov
gs
dec
add
xor
es
fwait
sbb
or
loopne
jmp
in
mov
bound
xorb
mov
test
lcall
adc
mov
sbb
outsb
xor
pop
lcall
rdpmc
cmp
jnp
adc
sbb
xchg
sarb
lock
jae
subl
loope
xchg
jno
ret
insb
in
jge
int3
push
add
mov
rorb
and
cmc
push
mov
imul
enter
sti
and
dec
adc
dec
mov
jle
inc
push
ja
inc
sbb
lds
cs
xor
jo
push
jg
xlat
bnd
sbb
jb
data16
push
call
push
dec
movsb
pop
push
js
jl
xor
testb
lock
fwait
testb
jge
imulb
add
popf
cmpsb
dec
cli
jne
xor
and
in
add
inc
pop
rol
repz
lahf
pop
sbbl
pop
sub
fsub
sub
jl
mov
mov
sbb
aas
mov
or
or
mov
call
push
popf
dec
dec
xchg
push
loopne
loope
dec
call
jb
popf
inc
and
inc
and
push
add
fldlg2
rcrb
push
cli
aaa
aaa
fiaddl
or
daa
cmp
adc
xor
xchg
or
clc
push
and
aam
fldenv
adc
inc
pop
lock
sub
inc
das
push
or
pushf
mov
add
jg
xor
or
pop
mov
push
sbb
fs
jle
bound
sub
ret
ds
cwtl
jecxz
movb
pop
push
mov
iret
clc
push
addr16
xchg
lods
nop
aaa
js
aam
cld
push
addr16
stos
xor
lods
ds
pop
inc
das
data16
or
inc
stos
cltd
xchg
push
in
cmp
adc
es
cwtl
dec
in
push
shlb
dec
sbb
leave
mov
fsubrl
pop
xchg
xchg
xchg
push
sub
fnstsw
push
dec
scas
clc
sub
mov
mov
loopne
testl
xor
dec
mov
sub
cmp
fsubrl
push
xlat
sub
cs
movsb
outsb
shr
insb
in
push
mov
lret
jecxz
push
add
lock
test
or
and
sub
push
imul
in
call
repz
loop
sti
cmp
loopne
mov
mov
sahf
pop
pop
test
mov
dec
sbb
add
jb
testb
insl
aas
cmp
sub
test
flds
jp
pop
push
es
jbe
xchg
jle
jns
jns
inc
mov
jmp
dec
jl
stos
repnz
dec
movsl
xor
dec
rcrl
adc
js
inc
je
sbb
aam
shrl
pop
inc
mov
sarb
repnz
rcrb
jge
push
xor
loope
xchg
cltd
or
dec
loope
xor
xchg
int
xchg
loope
mov
lcall
mov
or
clc
pop
insl
addl
mov
sbb
cmp
inc
je
mov
sub
ljmp
or
je
ja
inc
or
rorl
shll
jb
js
xor
out
ret
imul
xor
xor
jno
push
dec
cmp
xor
push
repz
dec
push
clc
addr16
add
stc
iret
call
call
fmul
popf
jg
xor
fucomip
out
std
adc
sbb
icebp
mov
mov
fwait
xor
jnp
adc
push
sbb
dec
push
add
mov
mov
pop
lods
inc
cwtl
jle
fidivrl
cmova
mov
mov
fisttpll
adc
jecxz
shl
mov
clc
jno
cmpsb
aas
jge
out
cli
mov
addl
jno
add
sbb
cmp
stc
das
rcll
pop
sub
lds
mov
ret
adc
je
xchg
hlt
sbb
mov
pop
add
lods
push
and
xor
je
xchg
gs
ss
inc
js
gs
add
push
lea
add
js
test
leave
mov
je
insb
mov
popf
push
fisttpll
and
adcl
mov
xor
popf
lret
xlat
rcl
mov
inc
mov
dec
mov
shlb
push
outsb
mov
stc
sbbb
dec
fadds
imul
cli
ds
pop
mov
dec
lds
mov
push
fsubl
out
push
popa
inc
imul
inc
std
roll
push
jle
inc
push
and
adc
push
imul
pop
pop
sub
test
ret
xchg
xchg
int
lods
cmp
and
sbb
gs
push
jbe
cmpsl
pop
inc
inc
xchg
inc
xor
pop
adc
jmp
pop
and
shrl
bound
push
enter
adc
mov
ret
stos
in
js
test
es
pop
jnp
mov
in
mov
pushf
mov
sub
out
mov
out
sbb
push
in
mov
fistpl
dec
dec
cmp
stos
cmpsb
stc
mov
cwtl
loope
inc
ret
decl
add
mov
fwait
test
xchg
add
sbb
rcrb
icebp
adc
xlat
lcall
push
je
dec
outsl
repz
dec
fwait
and
jg
push
lds
pop
les
pop
pop
jmp
into
cltd
push
lcall
inc
cmpsl
jae
xchg
pop
das
lock
addr16
sahf
or
mov
xor
push
mov
pop
sbb
pop
aas
iret
in
fstl
mov
pop
jnp
iret
dec
xor
lock
jb
mov
mov
mov
test
xlat
sbb
popa
outsl
mov
dec
in
ret
and
and
test
bound
dec
push
jecxz
pop
rcrb
jo
jns
std
add
or
adc
push
movsb
lock
xchg
adc
and
je
repz
imul
sbb
aas
and
xor
orl
iret
xlat
out
xchg
aam
fsub
push
push
adc
xlat
or
and
cmpsb
pop
pop
jno
adc
aas
mov
test
jmp
cmpsl
push
pop
pop
cmp
pop
lock
gs
ret
bound
lods
aas
jmp
addr16
call
repz
in
cs
jbe
adc
dec
or
mov
das
fnsave
push
dec
jo
fstl
push
push
lds
pop
out
pop
inc
int3
sbb
jne
scas
clc
or
arpl
xor
dec
adc
stc
and
dec
push
sub
adc
stos
gs
or
mov
dec
xchg
mov
lret
dec
paddsw
adc
dec
fiadds
cmp
pop
loop
dec
jle
out
js
or
sbb
test
sbbl
sahf
test
adc
pop
mov
pop
push
add
push
add
scas
das
dec
imul
push
es
addl
push
push
inc
mov
test
mov
add
imul
leave
jbe
jno
insl
fsubp
mov
mov
dec
xchg
inc
das
mov
mov
pop
cmc
push
mov
sbb
test
ficoml
mov
aam
aas
fisttpl
dec
jmp
lods
push
inc
jl
mov
shlb
and
cs
or
lahf
inc
inc
xor
cmp
mov
jecxz
fistl
and
mov
jecxz
mov
out
stc
mov
pop
push
mov
xchg
in
test
insb
aam
or
mov
xor
pusha
add
cmp
in
mov
scas
lret
or
test
xchg
mov
mov
xchg
sub
les
faddl
je
adc
orb
cmp
adcb
adc
movsl
cmpsl
psrlw
adc
hlt
loope
sahf
hlt
xor
subl
or
rcrb
shll
adc
pushf
inc
sti
mov
sbb
cmp
push
dec
cmp
popf
push
mov
aad
syscall
jg
jmp
clc
push
test
fwait
leave
movsb
lods
pop
cmp
ret
bound
sahf
dec
mov
jb
mov
stos
daa
and
and
xor
iret
cmp
fstp
ds
rcrl
push
or
sub
fwait
jno
mov
inc
cltd
aad
cmp
sub
push
sbb
rclb
das
imul
aam
mov
shlb
push
mov
push
xor
mov
shlb
sarb
inc
pop
and
call
or
xlat
dec
loope
and
aaa
mov
jl
ret
mov
sbb
add
imull
or
lods
fiaddl
mov
cwtl
add
inc
aad
test
dec
loopne
mov
pop
jle
xor
mov
dec
lea
push
adc
mov
add
add
xchg
adc
lret
push
repz
int3
mov
xchg
inc
sti
test
out
insb
fwait
mov
push
sub
push
test
add
add
hlt
std
imul
xchg
shlb
shll
lods
fdivrs
insl
mov
lcall
scas
inc
or
adc
shlb
into
enter
sub
fisttpl
mov
lret
and
test
rolb
lret
addr16
pop
fisubrl
jg
cmp
movsl
lock
inc
inc
inc
ret
fisttps
xchg
lahf
mov
and
lea
loop
cmpsb
inc
das
mov
push
dec
pop
fdivr
sbb
loop
sub
hlt
lods
loopne,pn
jl
loopne
mov
repz
dec
mov
fistl
dec
xor
ds
and
xchg
ja
push
pushf
test
jge
test
aad
sahf
pop
sbb
cmc
inc
popa
xlat
fcoml
cli
loopne
pop
popa
mov
ret
inc
mov
dec
roll
je
sahf
cmc
push
mull
sbb
rcrb
pop
in
inc
pop
add
mov
std
cwtl
or
stos
inc
adc
not
push
aaa
incl
add
and
add
jo
insb
xchg
xor
mov
push
ds
adc
cmp
stc
mov
stos
jge
roll
sbb
push
into
xchg
popa
xor
daa
pop
pop
lods
lret
iret
jp
xor
lret
xor
mov
jo
adc
jmp
cmp
or
jecxz
popa
scas
pop
sbb
lock
test
inc
scas
jnp
jp
testl
nop
lret
inc
test
xchg
mov
or
je
adc
movsl
hlt
xor
clc
fimull
push
js
roll
mov
les
mov
js
nop
push
daa
dec
push
cwtl
dec
cmp
popf
mov
jecxz
sub
sbb
outsb
aas
mov
push
push
push
mov
rcrl
jne
push
mov
mov
lock
inc
sbb
adc
cmp
into
add
xor
lds
cmp
insl
ljmp
or
xor
outsl
sbb
sbb
sbb
or
mov
jge
push
pop
mov
in
cmp
inc
flds
mov
jg
jne
add
popl
adc
adcl
xor
inc
in
sbb
pop
incb
xchg
jne
in
rcrb
sub
fnsave
push
das
and
mov
push
pop
jno
adc
and
std
push
add
dec
ret
bound
push
fdivrs
rcr
jle
xor
adc
aas
mov
jb
xor
clc
add
cmp
orl
mov
or
dec
dec
pusha
add
push
add
test
test
jbe
stc
addb
add
add
pop
inc
inc
xor
jb
jno
pop
in
lods
or
in
add
lahf
stc
and
fs
int3
loop
ss
sbb
ret
shl
sbb
push
fildl
addb
jno
push
and
pop
mov
add
clc
and
in
pop
cmpsb
scas
shrb
call
xor
daa
add
loopne
call
xor
mov
enter
mov
orb
scas
mov
jmp
xor
add
adc
push
or
sub
or
fstpl
loop
inc
stos
jl
xchg
imul
imul
scas
popf
pop
loopne
xchg
jno
psraw
adc
mov
insb
mov
xlat
xor
or
add
in
mov
and
push
xchg
and
fsubrp
or
mov
jno
adc
aas
push
push
ja
jo
adc
test
add
add
idivb
mov
aam
cwtl
pop
jl
xchg
add
inc
adc
sbb
push
andl
cld
xchg
mov
jp
pop
clc
inc
inc
dec
jmp
out
js
mov
push
daa
jl
push
mov
cmc
and
sub
call
push
inc
int
mov
in
xchg
shll
repnz
sub
lahf
pop
das
xchg
cli
pop
xchg
jecxz
lods
jecxz
pop
push
jo
sbb
cmp
mov
arpl
addb
insl
or
mov
sbb
jbe
ljmp
sarb
pop
sbb
or
mov
xlat
xor
pop
mov
pop
and
sbb
insb
lods
fiaddl
pop
outsl
out
mov
mov
inc
subl
xor
das
pop
out
jmp
out
mov
mov
movsb
icebp
jle
adc
push
cmp
lahf
nop
test
cmp
rclb
mov
sahf
int3
mov
mov
lods
int
in
ss
sahf
or
pushf
and
mov
jecxz
addl
gs
cli
and
inc
test
or
aad
test
push
sbb
xor
add
add
lods
push
imul
inc
xchg
inc
dec
int
jle
cwtl
fcomi
dec
push
inc
mov
cmp
xor
inc
cmp
outsb
and
clc
in
incl
jo
das
shr
clc
testb
sbb
add
lcall
push
xchg
repnz
sub
rorb
aad
push
jb
add
and
jae
fstl
loopne
jle
std
lcall
add
std
mov
fisubs
lahf
adc
inc
push
xlat
stos
cmp
roll
lds
inc
ljmp
xor
pop
pop
jp
xchg
adc
maskmovq
idivl
inc
sub
adc
mov
mov
jp
jo
jg
pusha
out
movsb
jge
clc
hlt
aas
sbb
xchg
sbb
fwait
add
rcr
andb
aad
xchg
iret
mov
pushf
scas
or
jmp
push
ret
adc
ds
and
pop
xor
jl
mov
fldcw
mov
fucomi
test
jb
iret
test
sub
cmc
sbbb
adcb
pusha
ret
loope
cmc
mov
inc
or
jnp
jo
inc
lcall
lret
lea
cmp
ret
cmp
jns
or
ret
fwait
rcll
push
in
dec
gs
test
inc
das
jnp
and
stos
dec
and
push
xlat
and
sbb
add
ret
ret
scas
hlt
jne
inc
fbstp
sarl
mov
stos
test
lret
scas
xorps
mov
fmull
ret
mov
aam
inc
sub
sbb
jle
loopne
inc
adc
sub
dec
or
test
adc
xlat
push
push
dec
adc
add
pop
js
inc
aaa
lea
mov
sub
clc
add
stos
ss
sub
rorb
mov
xor
shlb
and
mov
xchg
setns
sbb
es
lock
add
adc
testb
cltd
ss
mov
sbb
adc
xor
mov
pop
jmp
popf
cmpsb
pop
sbb
and
or
mov
and
ljmp
mov
ja
mov
push
test
loope
inc
sub
xchg
pop
push
and
dec
mov
pop
or
pop
movsl
setbe
jb
mov
sbb
mov
adc
add
arpl
push
mov
mov
testl
loope
or
jp
push
mov
jmp
outsl
sub
mov
fmull
mov
cmc
add
xor
cld
cmc
subb
jbe
sub
aas
in
pop
sbb
adc
sbbl
dec
jmp
outsb
inc
sbb
arpl
addb
adc
rorb
dec
scas
push
mov
sub
imul
xchg
jmp
daa
shlb
mov
pop
mov
dec
push
cwtl
and
fcom
and
mov
adc
mov
roll
ret
inc
xor
mov
lcall
push
lret
hlt
dec
mov
jbe
adc
inc
in
mov
lret
jns
ret
sahf
arpl
jl,pt
jne
subb
mov
jp
push
dec
pushf
test
scas
and
iret
xor
sub
jnp
sbb
mov
icebp
je
pusha
push
enter
mov
sahf
push
rol
scas
and
jmp
scas
pop
in
sbb
sbb
nop
mov
imul
ret
xchg
shr
jecxz
fcmovne
cmp
jl
imul
or
and
pop
cmp
cmp
movsl
adc
outsb
out
mov
mov
ficoml
fcoms
sbb
sub
sub
je
sbb
push
adc
xchg
jns
cltd
add
dec
rcll
sarb
mov
push
sub
loopne
add
inc
dec
subl
imul
lret
into
pop
xchg
pop
psubsb
fwait
add
jg
pop
test
and
loop
mov
mov
scas
lods
out
pop
mov
aad
int
sub
imul
jle
cs
je
stos
repz
in
icebp
aam
filds
rol
leave
pop
cmp
pop
add
pop
jp
dec
int
push
ret
cmp
data16
in
movsb
test
jo
add
push
mov
jno
pop
cmpb
andl
xchg
mov
insl
add
lock
inc
cld
testb
add
idiv
or
sti
arpl
cld
push
add
mov
jg
movsl
push
jne
push
fsubrs
push
js
jns
adc
je
add
xlat
push
lods
cltd
pop
dec
sbbb
imul
aad
daa
cmc
add
inc
mov
dec
loopne
imul
fwait
out
repnz
jb
inc
or
test
jno
adc
inc
dec
popa
dec
stc
out
cmp
pop
sbb
ret
cmp
stc
cmp
enter
add
push
imul
pop
or
sbb
outsl
mov
jp
data16
sbb
mov
and
or
inc
push
mov
mov
inc
or
push
xlat
call
dec
cltd
arpl
outsl
js
js
mov
test
subb
add
int3
aam
shll
movd
fisubl
dec
call
roll
jp,pn
sub
cld
pop
xchg
cmp
or
mov
add
or
stos
fwait
sub
jns
sbb
push
mov
mov
lods
ja
pop
xchg
leave
cmpsl
ret
cmp
sbb
test
fs
sbb
push
cwtl
xchg
popa
rcrl
lock
call
lea
add
jmp
mov
lock
pop
jl
adc
sub
mov
cld
sbb
add
sahf
icebp
adc
inc
in
mov
jp
out
aad
insb
mov
push
loopne
aaa
inc
out
push
pop
lahf
test
daa
xchg
lods
jne
rcrb
inc
je
pop
loopne
outsl
fs
movsb
std
jle
jge
je
add
mov
or
and
arpl
jg
jl
loopne
jne
hlt
dec
push
clc
enter
fidivrl
aam
pop
mov
sub
decb
push
or
aad
inc
pushf
push
emms
add
loope
sub
das
adc
jne
repz
push
push
cs
inc
clc
movsb
call
sti
loopne
stos
push
loop
mov
mov
inc
gs
test
sub
jl
dec
fxch
aaa
sbb
jae
repnz
arpl
stos
jne
nop
mov
mov
mov
rolb
cmp
mov
jle
out
add
xor
sbb
lds
repz
push
or
add
push
pop
dec
repz
xchg
sbb
hlt
inc
fisttpll
mov
add
scas
cmp
test
or
push
jp
sub
add
mov
adc
dec
out
cmpsb
into
push
lahf
dec
loop
imul
and
mov
lock
add
push
dec
mov
push
les
movsl
or
add
jo
pop
mov
ljmp
inc
test
dec
xchg
sub
outsb
dec
loopne
add
add
dec
das
lock
sbb
movsb
popa
push
filds
xchg
and
add
xor
int3
inc
les
stos
js
or
stos
or
cwtl
in
std
sub
and
stos
loop
mov
add
adc
mov
test
jmp
bound
mov
rorl
jmp
rclb
inc
xor
int
movsl
insb
insl
add
stc
pop
lret
jle
sub
sub
cltd
mov
mov
ret
pop
rolb
cmp
jbe
dec
or
cli
add
xor
xchg
jmp
sbbb
jl
mov
subb
mov
fcompl
sbb
addb
je
movsl
subl
mov
or
adc
sti
jp
cmp
mov
movsl
bound
pop
enter
outsl
pusha
orl
shlb
imul
mov
fists
faddl
push
fmull
add
inc
xchg
sbb
ret
pop
dec
mov
loopne
xchg
pop
cmp
outsl
adc
dec
cld
add
mov
js
jno
dec
or
ljmp
add
push
pop
mov
sub
add
push
das
insl
mov
jbe
jno
addl
sub
inc
pop
mov
aas
dec
out
and
xchg
loopne
xor
shl
mov
pop
mov
push
and
cli
mov
push
icebp
adc
movsb
sarb
rcll
out
iret
xor
sarb
rol
cmp
call
push
addr16
out
inc
add
and
cs
cmpsb
std
xchg
and
movsl
in
jns,pt
jno
or
mov
out
je
scas
adc
adc
push
add
dec
in
shll
cmp
insb
fimull
adc
pushl
out
movl
sub
rcrb
inc
in
inc
insl
mov
pushf
mov
sub
add
mov
roll
or
inc
lock
xor
jne
pop
in
cmc
sub
sbbl
fcompl
jbe
cmp
inc
icebp
cwtl
sub
movsl
push
push
cwtl
inc
sbb
ljmp
pop
int
ss
scas
mov
adc
repz
icebp
mov
adc
loope
xor
sub
dec
aad
mov
fcomip
data16
cmp
mov
dec
jb
rcl
jmp
sub
xchg
xor
and
andb
popa
mov
push
cmpsl
popf
sub
leave
out
lock
ja
mov
call
lret
pop
sbb
cmp
or
dec
mov
jl
add
jb
sub
jge
sub
sahf
lods
mov
movsl
andb
fs
xlat
stos
sub
fstl
adc
shrl
push
jmp
mov
popf
aam
das
jl
movl
data16
pop
aad
jmp
xchg
mov
add
loopne
popa
lock
jp
xchg
cltd
roll
xorl
cld
mov
xor
jno
mov
add
lds
xor
lcall
popf
pop
scas
and
push
pop
mov
push
pop
inc
and
stos
je
je
and
inc
test
dec
iret
lea
mov
mov
or
fists
comiss
dec
mov
jo
jp
cs
mov
xor
xchg
dec
loope
jle
xchg
scas
dec
lods
arpl
mov
push
test
sbb
mov
dec
loop
xchg
dec
push
lret
arpl
icebp
sub
sub
xlat
loopne
mov
out
adc
jecxz
test
inc
mov
fwait
dec
jle
test
loop
cmp
lock
cmp
and
faddl
and
cmp
jge
cmp
rolb
rolb
push
adc
imul
repz
mov
shl
and
gs
arpl
sbb
popf
jmp
cli
hlt
adc
cs
pop
and
rclb
popa
idivb
and
shll
hlt
pop
xor
pop
pop
rclb
or
shl
xor
and
rol
bound
insl
cmp
or
aam
dec
push
clc
add
std
sbb
sbb
addl
inc
dec
mov
dec
jecxz
jbe
adc
shl
cmp
arpl
cmc
jecxz
jl
jle
cmp
push
in
sub
mov
mov
mov
or
push
cmp
mov
in
xchg
sahf
sahf
mov
sbb
les
or
add
jno
int3
in
sbb
or
bound
inc
ljmp
sub
jb
push
in
push
jne
ljmp
adc
push
arpl
sbb
jp
std
pusha
push
add
ss
mov
loop
xchg
ljmp
xor
ret
fisubrl
jle
popf
adc
pop
mov
adc
sub
outsl
mov
scas
je
int3
addb
cmc
test
fiaddl
clc
orl
or
into
scas
jle
dec
lock
dec
rorl
in
lret
sbb
jp
add
add
or
push
in
pop
push
sbb
dec
hlt
add
mov
adc
test
scas
loope
jne
es
cltd
or
lods
sbb
fs
ds
loop
fcoml
std
jmp
aas
je
pusha
pop
and
mov
fwait
dec
and
and
stos
test
mov
jb
add
cmp
and
add
sbb
out
add
and
mov
push
mov
outsl
clc
jne
popa
fnstcw
rcll
dec
iret
fistps
or
cmpsl
and
imul
add
push
imul
ret
or
into
test
xchg
outsl
pop
mov
pop
icebp
ss
mov
clc
clc
xchg
popa
in
arpl
and
pop
cmp
dec
das
pop
push
sbb
and
loopne
mov
lret
xchg
xor
cmp
push
and
mov
sub
mov
or
inc
mov
sbb
mov
mov
mov
fdivrs
pop
subb
loop
cli
call
ds
sarl
bound
popa
xlat
jae
pop
leave
jnp
dec
and
test
std
xor
enter
negb
lods
rcll
aas
test
push
xor
push
add
xchg
xchg
jne
dec
cltd
pop
dec
icebp
push
adc
imul
roll
jg
xchg
mov
cltd
mov
mov
mov
rclb
mov
xchg
ficompl
cwtl
xchg
add
fwait
xchg
and
dec
scas
xchg
jge
in
mov
mov
lock
mov
push
mov
adc
popa
xchg
jp
jb
push
push
jp
xchg
push
mov
sub
xchg
fs
mov
popf
lret
jae
mov
es
jns
and
and
jno
shl
sub
into
sub
ljmp
mov
ljmp
imul
mov
or
lahf
sbb
test
stos
enter
js
stos
divb
jg
movsb
clc
sub
add
inc
jle
dec
test
out
cmp
inc
pusha
push
fwait
std
inc
xor
sub
out
inc
jno
xor
stos
lret
incl
cmp
mov
push
and
cmpsl
rcl
adc
mov
add
mov
inc
loopne
cs
loop
mov
sub
jmp
add
sbb
jge
inc
xchg
dec
jge
shll
mov
pop
lds
jp
pop
dec
data16
loopne
sbb
imul
dec
mov
icebp
jp
pop
cmp
cli
sbb
pop
cwtl
mov
xchg
push
test
dec
adc
cltd
mov
mov
js
mov
dec
cmp
xor
jle
cld
cmp
popa
pop
sub
push
les
jp
test
loop
mov
lods
cmp
mov
dec
pop
pusha
pop
mov
push
cltd
jnp
popa
hlt
cmp
mov
lock
adc
adc
mov
mov
or
jns
imul
pop
dec
int
xchg
aam
mov
mov
add
aad
inc
xchg
pushf
les
jmp
lock
cwtl
dec
pop
mov
push
scas
jle
fld1
jecxz
ret
mov
daa
insl
or
jmp
test
test
sub
ret
loopne
pop
fsubrp
or
enter
das
rol
or
stc
pop
cld
cmp
pop
mov
cmp
mov
iret
cld
or
jecxz
mov
out
aaa
lods
test
add
jae
xorl
jge
jb
ret
enter
cmp
stc
dec
mov
icebp
pop
call
cs
adc
add
adc
xchg
stos
insl
cmpsl
add
mov
loop
insl
sti
sub
pop
xchg
stos
inc
lret
jge
loop
test
adc
adc
jns
mov
cltd
dec
ljmp
add
cmp
cmp
mov
xor
cmpsb
pop
cli
gs
and
cmp
cmpsb
sbb
pop
rol
insl
mov
push
xor
clc
je
loope
out
add
and
mov
cli
or
test
push
xchg
fldenv
sahf
sub
stos
push
pop
pop
out
add
and
stos
mov
leave
ss
es
dec
into
mov
or
cmpb
out
jo
ss
pop
sbb
or
shrb
movsb
call
cmp
pop
pop
push
cli
lods
and
js
lds
outsl
sbb
ret
mov
out
xchg
cmp
cmp
into
out
ret
imul
sti
andb
push
mov
mov
pop
cmp
pop
data16
lds
pop
adc
scas
enter
arpl
sbb
mov
jno
xor
push
lahf
loopne
push
andl
pushf
and
adcl
pushf
mov
xor
inc
js
aam
sub
fistps
mov
sbb
push
cmp
dec
rolb
pop
push
push
dec
push
inc
mov
stos
mov
xchg
enter
loope
jle
mov
mov
adc
pop
push
stc
fwait
and
orb
lret
test
dec
addr16
push
rol
lock
icebp
ret
scas
nop
sub
daa
jl
test
shl
inc
xor
pop
and
mov
push
adc
inc
pop
outsb
icebp
inc
dec
add
xchg
sbb
pop
inc
fstpl
cmp
jg
mov
inc
push
lret
mov
cwtl
adc
orb
stc
pop
jle
lock
dec
mov
pop
push
es
dec
xchg
in
dec
loop
lods
cmpsb
xchg
push
mov
mov
push
xor
mov
mov
cs
mov
push
sahf
je
jne
adcb
pop
push
mov
ret
mov
rcll
mov
xchg
sar
ss
out
das
loop
jecxz
mov
clc
xor
nop
jmp
mov
inc
add
xchg
loopne
cmp
push
mov
xchg
push
mov
pop
popa
xchg
cmp
das
adc
xchg
lods
repz
xor
sub
mov
mov
dec
dec
ret
push
ds
push
subb
mov
mov
adc
lock
fisttps
clc
or
push
jnp
sbb
inc
mov
jb
pop
xchg
lahf
inc
adc
ret
mov
shrl
xor
mov
into
ds
cld
inc
sub
pusha
pushf
lcall
dec
ror
mov
enter
pushf
and
cmpsl
pop
stc
cmp
das
shrl
push
sbb
popa
add
sbb
xchg
push
push
adc
sbb
push
dec
mov
jp
cmp
test
stos
pop
unpckhps
mov
or
and
sbb
inc
xchg
aaa
and
dec
lahf
xchg
mov
inc
mov
into
ror
xor
push
jb
cmp
mov
xchg
mov
aam
add
shlb
rorl
add
bound
std
rol
add
and
pushf
imul
mov
cmp
adc
dec
loope
loop
jle
clc
adc
xchg
movsl
jb
xchg
dec
mov
mov
jmp
pusha
lahf
add
call
rcrb
imul
jg
mov
xchg
je
psrad
jae
jbe
into
js
push
jmp
push
pop
adc
inc
fs
mov
into
mov
and
aas
xor
sub
roll
cmpsl
sti
mov
sub
sbb
push
push
fdivl
aad
bnd
loopne
sbb
stc
adc
lods
stc
push
adc
into
mov
sub
sbb
outsb
hlt
ds
rorb
out
push
inc
jp
mov
das
aad
call
mov
add
cmp
fcoms
inc
push
imul
push
push
xlat
lock
outsl
pop
rol
cmpl
pushf
xchg
shll
mov
mov
call
xor
sub
les
sbb
mov
cld
stos
or
sub
jecxz
test
or
push
lods
pop
clc
dec
mov
andb
insl
scas
pop
clc
xchg
sub
and
jecxz
pop
rolb
sub
pop
ja
sub
sbb
cmp
or
inc
push
and
cltd
push
in
mov
xor
sbb
dec
or
or
nop
cltd
imul
sub
add
fisttps
fwait
insb
sub
jecxz
scas
pop
adc
jmp
add
ljmp
cmp
jmp
mov
jbe
mov
mov
and
mov
lahf
out
das
jo
sub
adcl
sbbb
cmp
push
notb
iret
pop
ljmp
push
ret
inc
inc
shrl
mov
aam
add
or
and
jb
sub
or
popf
aad
jae
inc
enter
and
sub
subl
sarb
xchg
dec
mov
gs
hlt
jbe
addr16
sub
mov
mov
cmova
in
scas
jno
mov
inc
in
push
push
das
cli
rolb
add
dec
mov
push
mov
icebp
shl
mov
rclb
aas
aas
jbe
mov
fadds
loopne
out
es
sbb
es
mov
cmpl
mov
or
pop
lock
test
fidivrs
sbb
out
and
cmpsl
cs
add
imul
sbb
pop
adc
mov
fwait
jle
mov
mov
or
out
test
incb
xchg
test
dec
pop
push
imul
push
mov
inc
xor
push
dec
cs
inc
imul
movsl
dec
xchg
adc
inc
sbb
mov
mov
mov
sbbl
jns
adcb
xchg
dec
pop
shlb
les
lahf
mov
xor
adc
cwtl
pop
or
mov
sahf
xchg
into
inc
jle
fxch
push
sahf
adc
movsl
test
push
repnz
std
out
jge
jne
jecxz
xchg
xlat
call
pop
jno
pop
inc
xchg
gs
jo
popl
sbb
loopne
out
out
mov
xchg
push
fisubl
ja
movsb
test
inc
dec
lods
in
push
mov
int
adc
adc
push
add
lret
out
lea
insl
nop
add
mov
in
adc
inc
adc
movsb
push
cmpl
inc
loop
mov
movsl
inc
jle
xor
fidivl
pop
ja
incl
and
add
pop
or
sub
test
mul
dec
clc
cmp
fdivs
mov
inc
mov
adc
push
mov
add
pop
cmp
stos
outsb
lock
mov
push
inc
and
mov
arpl
sarl
mov
dec
xchg
mov
fs
lock
loope
inc
mov
stos
pop
or
inc
shl
cmpsb
imul
dec
es
mov
dec
push
dec
in
xchg
inc
paddsw
daa
jno
push
pushf
mov
xor
jmp
inc
and
ss
out
add
popf
sub
mov
lcall
dec
fucomi
out
stc
xor
mov
ficoms
pop
les
cmp
movb
or
jbe
es
add
pop
std
push
cmp
call
adc
cmp
adc
pushf
jle
jae
adcl
cltd
cmc
sub
mov
mov
rcl
sub
inc
sub
dec
mov
mov
ds
ljmp
insb
xchg
inc
mov
pop
xor
rorb
xor
mov
cmp
adc
xchg
mov
and
add
stos
sbb
add
mov
dec
stos
and
jno
mov
in
or
mov
negb
or
stos
das
jbe
adc
fsts
int
mov
sbb
jl
and
test
nop
psllw
cmc
sub
push
xchg
mov
stos
test
rorb
popf
sub
sbb
jne
dec
jne
adc
lock
and
mov
adc
dec
mov
push
mov
mov
inc
cli
icebp
push
lcall
mov
cmp
add
inc
and
insl
jle
ss
dec
roll
int
stos
inc
sbb
ljmp
cmp
icebp
divl
mov
sub
or
push
push
inc
cmp
mov
daa
dec
push
xor
jg
icebp
pop
ficomps
aad
sbb
cmc
xor
adc
arpl
movsl
mov
push
or
push
jnp
xor
lods
fcomip
dec
jp
mov
icebp
mov
inc
or
cmp
insl
mov
enter
outsb
nop
or
inc
adc
cmpsb
cwtl
jo
fwait
clc
cmpsb
aam
fdivrl
and
test
test
and
mov
js
mov
jae
or
and
fsubr
mov
idivb
sbb
shlb
lret
aam
out
outsb
pop
lock
or
rolb
jno
jmp
sbb
inc
jecxz
mov
mov
sub
in
jmp
jmp
inc
sbb
fwait
lcall
xchg
dec
int
ds
jle
clc
mov
xchg
add
push
iret
pop
pop
ror
mov
jecxz
push
int
jns
imul
jne
sub
fwait
jo
fninit
subb
pop
loope
pop
shl
jno
adc
push
mov
aas
cmpsb
push
test
or
iret
aam
push
xor
int3
addl
or
cmp
mov
fdivs
add
rclb
fidivrs
push
jge
xor
push
aad
xchg
adc
xchg
xchg
add
xchg
adcb
mov
icebp
jp
loope
cltd
das
push
push
pop
movups
bound
arpl
mov
cmc
pop
cmp
dec
mov
cmpsb
aam
mov
inc
arpl
rclb
cmp
icebp
ret
and
jl
lcall
repz
dec
sub
loopne
adc
repz
stc
pusha
rolb
cs
sbb
aad
test
cs
icebp
flds
mov
int3
mov
mov
inc
sti
jo
jecxz
lret
add
fs
sbb
xchg
test
std
mov
iret
std
add
js
mov
xor
mov
lcall
pop
and
inc
cmpsl
ret
inc
outsb
jae
pop
imul
sub
xchg
add
out
loop
jecxz
jmp
shr
mov
or
and
out
loopne
or
sub
fidivs
test
testl
dec
sub
add
xor
stc
test
loopne
je
ja
jne
in
jge
std
icebp
xchg
or
pmaxub
pop
sbb
addb
sub
pop
sbb
or
orb
data16
mov
popf
xor
push
xchg
mov
push
sbb
push
cld
mov
add
dec
jp
enter
and
sub
aad
xchg
outsl
shlb
pusha
jg
add
or
call
xchg
nop
xor
pushf
rcrl
jg
adc
aas
popa
or
and
inc
adc
push
es
jge
sub
lcall
and
mov
lahf
out
mov
movsb
imul
sub
jo,pn
mov
lds
mov
jo
les
xorl
sbbl
sub
data16
loopne
orb
dec
mov
sbb
xor
add
clc
rcrb
leave
clc
fadds
insb
vroundss
and
je,pn
ljmp
orb
xchg
cmp
cld
jno
dec
xchg
sahf
test
lea
cmp
sbb
icebp
add
aas
push
shll
jne
add
pusha
add
mov
pop
jae
inc
or
pushf
push
push
push
mov
stc
ficoms
add
addl
mov
stos
idivl
das
lock
fsts
ret
out
lea
leave
mov
cltd
ja
dec
cmp
leave
fucomip
sbbl
cli
xor
mov
jb
sub
push
jl
cmp
cmp
push
cmp
js
mov
and
orl
mov
and
daa
adc
std
iret
pop
jge
icebp
jecxz
mov
push
pusha
out
sbb
aaa
loopne
cld
adc
mov
ret
pop
and
ret
movlps
rcl
sub
arpl
xor
sub
test
nop
dec
in
mov
dec
jp
mov
sahf
mov
fidivrl
clc
lcall
pushf
mov
ret
push
test
aas
mov
add
adc
pop
testl
sbb
mov
fstps
inc
or
sub
pop
js
jp
das
shll
fldl
adcl
lahf
test
js
mov
xor
sbb
add
pop
outsl
pop
cmp
xchg
and
scas
mov
mov
dec
roll
sbb
push
xor
xor
jl
xor
pusha
pop
ret
pushl
mov
add
dec
adc
add
adc
jns
cld
mov
xchg
test
mov
add
pop
inc
pop
stos
cmp
xchg
cld
fnstsw
loope
iret
in
xchg
pop
jg
mov
dec
pop
dec
jge
scas
jns
ds
cmp
inc
popf
or
rolb
push
sub
mov
push
clc
rolb
loope
pop
dec
push
push
sbb
fstpl
cmp
icebp
adc
jb
mov
pop
scas
pop
or
push
cmp
lds
in
xor
pop
fldcw
xor
xor
dec
xor
insl
roll
or
enter
sarl
out
sbb
mov
inc
add
jb
add
popa
inc
xchg
add
rcll
push
lods
js
adc
pop
int3
push
and
mov
mov
inc
cmp
mov
lcall
and
mov
xchg
fs
out
mov
add
in
test
repnz
mov
hlt
sub
push
adc
loope
push
rorb
xchg
ficomps
frstor
loope
inc
popl
sub
imul
les
add
imul
insl
sub
test
das
mov
inc
xlat
jecxz
scas
les
pop
mov
in
push
jmp
cld
push
iret
push
mov
iret
xor
call
push
fistpll
cmpsl
or
movsb
add
sbb
loope
or
inc
cmp
or
push
xchg
mov
pushf
call
xorb
mov
cli
or
jne
bound
aad
or
fisttpll
sub
xchg
pop
out
dec
xchg
sar
aas
xchg
pop
out
decl
movsb
scas
outsl
sbb
cmp
test
je
loop
adc
mov
aad
loope
fcmovu
stc
pusha
push
popa
int3
sub
out
icebp
or
adcl
popf
jge
add
jo
test
push
movsb
addr16
cmc
sub
xor
jnp
and
dec
adc
adc
lods
popf
pop
movsl
or
leave
nop
mov
mov
or
sbb
inc
outsb
repz
xchg
fsubrs
insl
push
subl
ljmp
rcr
popa
int3
fdivrs
jp
pop
cli
lret
movswl
mov
imul
push
icebp
adc
icebp
leave
push
je
loope
adc
out
jecxz
pop
push
aad
push
jge
fwait
mov
call
ljmp
lds
sub
mov
and
sub
enter
mov
pusha
shll
jecxz
out
push
stc
test
arpl
pushfw
sbb
lcall
cli
sbb
movsl
mov
jl
test
sub
push
add
or
test
cli
jo
loope
pop
pusha
fwait
sbb
imul
xchg
add
mov
daa
jnp
inc
xchg
inc
ja
call
popl
sub
adc
mov
adc
jno
push
orl
push
mov
sbb
sub
decb
insb
xchg
popf
push
adc
leave
scas
lret
jb
mov
arpl
arpl
sbb
insl
adc
ss
mov
push
pop
pop
mov
test
into
xchg
movsb
xchg
sbb
cmpsb
lahf
cmc
loope
cmp
push
stc
jno
xchg
scas
cmp
sub
adcl
std
xor
repnz
testl
pop
or
inc
xor
dec
gs
or
in
add
imul
inc
fisubrs
pop
sbb
push
mov
into
sahf
lock
cmp
add
shll
mov
pop
loop
jge
xlat
mov
inc
and
insb
lcall
jno
sub
test
push
push
push
xchg
inc
out
add
push
inc
jl
lret
dec
push
rorl
shll
adc
and
roll
fs
test
or
in
rolb
add
mov
sbb
mov
push
mov
ljmp
jge
add
jbe
add
ja
inc
ss
xor
popf
jbe
add
cmc
xor
rclb
cmp
shrb
out
add
mov
add
les
sbb
xor
jl
jmp
fildll
pop
cmp
fcmovnu
pop
repz
adc
or
es
sub
or
push
dec
add
mov
jo
or
filds
cmp
fs
int
out
push
or
inc
or
loop
dec
push
lcall
cltd
lahf
pop
fcomip
cmp
aad
dec
pop
aas
cmpsb
and
lock
mov
popa
cs
pusha
fwait
in
divl
insl
int
lret
iret
pop
fsubrs
mov
out
ret
add
lock
xor
add
int
push
push
js
in
test
lods
loope
outsl
repz
mulb
leave
aaa
ret
lods
sub
inc
xchg
mull
pop
and
adc
mov
sbb
lock
imul
inc
arpl
test
and
mov
lods
ret
insb
jecxz
pop
pop
xchg
lock
or
sbb
mov
test
jmp
sub
inc
or
inc
ret
mov
sub
pop
push
lret
inc
xchg
ficompl
inc
leave
mov
cltd
loopne
popf
and
orl
movsl
dec
push
mov
and
dec
cld
mov
push
test
ret
out
sub
cld
imul
daa
pushf
adc
dec
imul
icebp
cmc
sub
insl
xor
pop
mov
cmpsb
and
mov
sti
sbb
dec
mov
mov
pop
push
stos
cld
mov
inc
lock
push
and
fdivrp
push
cmp
scas
lcall
sarl
leave
js
adc
adc
loop
or
popf
les
shll
jecxz
nop
mov
sbb
fnstenv
jno
inc
or
pop
add
dec
sarb
mov
stc
sub
jp
dec
jnp
lcall
adc
mov
or
stos
test
push
add
je,pt
add
insb
lods
ss
or
sbb
mov
add
fimuls
loop
insl
aas
adc
scas
mov
mov
or
loop
pusha
mov
push
or
and
push
adc
movsb
inc
mov
and
pop
fwait
rcrb
lret
movsb
adc
in
outsl
inc
jnp
xor
mov
jbe
sbbl
and
pop
and
mov
xor
addr16
push
aaa
push
sahf
push
ljmp
cld
mov
push
and
mov
jmp
jmp
wbinvd
sub
pop
dec
and
out
iret
and
push
or
inc
lahf
adc
dec
adc
je
add
xor
cmp
adc
jmp
add
jnp
jp
jne
sub
mov
adc
lds
fwait
pop
test
shlb
mov
ret
lds
pop
mov
add
add
xchg
test
enterw
mov
mov
pop
inc
and
cmp
dec
xchg
fwait
pop
xchg
push
loope
jl
mov
fimull
ret
cmpsb
into
rorb
xor
icebp
cmp
jge
and
mov
cli
bound
xchg
xchg
mov
movsb
ljmp
mov
lret
lea
pop
adc
inc
dec
cmpsl
push
inc
mov
std
fcmovne
pop
mov
mov
ret
ljmp
cmc
cmp
out
stc
add
adc
lahf
push
xchg
test
mov
adc
fisttps
xchg
inc
shlb
addr16
call
inc
jge
call
and
cmpsb
add
push
jbe
add
pop
ds
clc
fcoms
xchg
mull
dec
jo
mov
cmp
sub
sahf
inc
cmp
cs
sti
in
jmp
bound
mov
loope
adc
lcall
xorb
xor
mov
dec
out
movsb
or
in
inc
sbb
test
xchg
inc
push
ret
popf
and
push
pushf
xchg
ret
sub
mov
imul
mov
dec
lahf
adc
lea
popf
and
mov
lods
movsl
sub
int
aad
pshufw
insl
or
push
dec
js
inc
mov
dec
inc
lea
and
push
push
push
test
pop
ret
dec
dec
pusha
and
xchg
dec
sysexit
popa
mov
aam
sbb
aad
xchg
ret
mov
push
add
rolb
adc
pop
pop
sub
or
sbb
loop
out
insb
call
ret
outsb
adc
dec
rolb
pop
mov
pop
in
mov
lret
ror
mov
inc
rclb
adc
fs
add
push
adc
cmpsl
out
test
popf
xor
pop
pop
fists
rcrl
out
mov
scas
push
mov
and
fdivl
add
add
cmp
mov
mov
pop
dec
xlat
ss
push
push
push
lods
or
push
in
popl
push
inc
or
mov
or
adc
xchg
xchg
shld
push
add
aas
test
insb
mov
mov
adc
or
hlt
jb
dec
and
cli
imul
ja
inc
sbb
sbb
mov
testb
rcll
ret
mov
push
ret
ljmp
rcl
push
xchg
jb
mov
jg
jns
iret
push
inc
aaa
aad
out
jb
xor
push
xchg
mov
mov
xchg
mov
mov
pop
xor
xchg
clc
call
inc
dec
notl
inc
int
push
push
fisubl
adc
xor
or
mov
cmp
arpl
pop
shrl
ficoml
inc
leave
ret
xchg
inc
pop
adc
jp
xor
lret
push
push
or
mov
cmp
xabort
push
dec
and
icebp
add
lret
mov
sub
insb
daa
lea
mov
sbb
dec
incb
fs
pop
adc
loop,pn
incl
out
dec
xor
mov
lock
dec
mov
add
int
dec
dec
popf
lds
and
das
clc
inc
add
mov
inc
adc
sbb
mov
inc
mov
lods
fisttpl
sub
ss
mov
loopne
pop
add
lock
push
aaa
dec
add
inc
and
mov
jmp
xchg
add
popf
mov
add
shll
out
add
js
inc
inc
jne
dec
sub
in
add
add
add
cmpsb
adc
or
pop
jne
dec
orb
sub
sahf
fcomps
push
pop
cwtl
sbb
popa
or
jne
cmp
pusha
push
sbb
lock
push
rcrb
xor
xor
jecxz
jg
jo
inc
jb
jo
push
sbb
test
pusha
cmp
xchg
jne
cmpsl
push
inc
dec
inc
push
rolb
dec
insb
push
xor
hlt
mov
or
jecxz
pop
cmc
add
pop
movsb
jns
dec
inc
incl
out
stos
sbb
push
bound
jmp
je
jno
inc
add
mov
popa
shl
in
dec
adc
adc
inc
dec
jle
inc
cmp
out
aam
je
or
addr16
decb
in
pop
inc
mov
addr16
leave
ret
inc
call
adc
insb
pop
and
pop
pop
scas
mov
mov
outsl
lock
sub
inc
adc
outsb
adc
mov
imul
inc
adcb
sub
inc
add
jne
add
jo
sbb
inc
loopne
ret
mov
xorb
add
xor
lea
add
cli
sub
mov
push
out
dec
test
enter
adc
push
or
aam
pusha
das
sub
push
inc
mov
jmp
jo
inc
ljmp
pop
rol
sbb
sub
pop
inc
sbb
add
lea
jne
dec
jl
icebp
data16
dec
out
inc
push
aaa
aad
mov
jecxz
push
sbb
lods
or
jne
mov
sbb
xchg
lods
sub
pop
push
insl
fdivl
sub
cmp
dec
ret
or
divl
push
movb
ret
inc
data16
mov
mov
je
xor
inc
jbe
dec
scas
push
cwtl
das
mov
pop
aad
cmp
mov
dec
push
sub
je
inc
push
orb
push
outsb
mov
shlb
xor
sbb
and
test
push
sbb
dec
addr16
dec
push
sbb
shrl
fdivs
notb
mov
push
or
push
sbb
lcall
pop
mov
mov
dec
mov
jo
mov
clc
mov
mov
add
mov
adc
out
insl
addb
cmp
push
pop
push
xor
insb
arpl
dec
add
dec
and
lods
mov
inc
adc
mov
fwait
lret
insl
push
mov
xor
subb
ss
sarl
in
imul
rol
jl
dec
dec
outsl
outsl
ja
nop
cmp
loopne
add
pop
add
arpl
inc
or
sub
mov
xchg
push
int3
pop
and
pop
aaa
call
call
fdivl
cmpsb
cli
out
inc
push
in
in
imul
in
pop
inc
imul
fnstenv
add
mov
adc
pop
push
rol
test
jae
jmp
mov
imul
cld
push
or
pop
imull
and
adc
xchg
lds
cltd
xchg
adc
dec
gs
negb
add
mov
dec
mov
adc
add
jb
inc
jl
and
inc
aad
call
push
push
shll
and
add
sub
add
adc
cmc
test
adc
and
or
inc
adc
fisubrs
adc
inc
or
and
lods
fstl
add
add
fstpt
mov
mov
dec
adc
adc
xor
pop
add
add
jb
gs
xor
cs
insb
add
insl
aaa
roll
pop
mov
inc
add
push
es
imul
or
outsb
addb
mov
into
int3
dec
mov
js
int
shrb
adc
rolb
pop
adc
mov
or
add
adc
push
iret
push
add
or
test
adc
cmp
push
adc
mov
cwtl
fnsave
add
and
push
test
add
data16
lcall
js
jb
outsb
sarl
or
rclb
add
lods
frstor
jo
adc
jb
or
pop
shl
mov
scas
shrl
cmp
adc
lock
mov
test
add
pushf
jbe
or
xor
jo
popf
or
test
repnz
adc
mov
mov
dec
xor
pushf
or
xor
or
inc
cmp
mov
add
cwtl
mov
outsb
mov
cs
pop
test
or
inc
xor
adc
cltd
flds
cmp
ror
into
int3
sub
int3
je
push
lds
push
jl
lods
pushf
shrb
xor
sbbl
sarb
in
adc
data16
adc
int3
ficoml
sbb
mov
add
add
loopne
lret
inc
es
test
pop
add
lcall
push
add
adc
or
cmp
dec
faddl
or
fstps
subb
loopne
pusha
dec
cli
stos
stos
roll
jae
jp
dec
or
xchg
cs
bound
mov
ret
xchg
mov
subl
lcall
enter
push
or
push
int
popa
stos
xchg
mov
pop
adc
orb
pop
adc
clc
and
in
int3
ret
cli
das
cs
orb
ret
ret
insb
fs
push
movsl
xorl
les
cmp
mov
mov
cmpsb
and
or
mov
outsb
popa
ret
mov
mov
ds
xchg
jecxz
ret
or
push
pusha
cmpsw
push
mov
jle
test
lret
push
cmp
popa
daa
sbb
in
adc
xorb
cli
mov
inc
fld
push
jbe
xor
xchg
loopne
pushf
and
pushf
and
push
adc
sbb
pop
xchg
mov
fwait
adc
pop
sub
cmp
outsb
loopne
inc
pushf
leave
into
push
push
mov
cmp
and
ljmp
adc
ljmp
mov
cwtl
int
popa
out
fdivs
adc
mov
ja
ljmp
or
jmp
enter
push
xlat
mov
cwtl
cmp
int3
or
pushf
add
jae
mov
ss
mov
xchg
mov
out
push
dec
mov
sub
idivb
sbbb
shll
enter
sbb
dec
adc
and
ljmp
jbe
out
mov
mov
xor
and
cmpsb
pusha
and
icebp
add
in
pop
ja
xchg
push
imul
jle
jge
push
push
or
mov
cmpsb
les
mov
or
and
xor
add
push
call
jb
jne
insb
push
jne
jb
sbb
fs
je
push
gs
jne
arpl
add
stc
incl
push
push
xor
dec
gs
push
jns
cmp
imul
test
push
jp
jo
arpl
imul
inc
imul
outsl
sti
xor
outsb
gs
outsb
outsw
jb
imul
fidivs
sti
pop
je
and
pushf
jae
dec
imul
cltd
or
jp
inc
outsb
jbe
push
nop
imul
pop
push
popa
jb
popa
bound
popa
imul
test
xchg
inc
outsl
jae
gs
test
xchg
dec
jo
jg
rcrb
dec
bound
je
or
je
popa
jo
mov
imul
mov
addr16
adc
cmp
or
cmp
insl
jo
add
icebp
and
mov
dec
es
mulw
addr16
outsb
and
in
jo
inc
ret
pusha
or
call
ret
pop
sbb
push
mov
push
dec
jne
bound
jnp
and
fs
dec
popa
outsb
fs
in
loope
and
out
inc
inc
arpl
pop
nop
je
dec
popa
inc
and
iret
insl
sbb
push
adc
jnp
insb
cmp
inc
mov
ljmp
fisubrs
out
xor
dec
push
je
jne
xlat
mov
push
jo
inc
push
sbbl
mov
imul
sub
cmp
dec
bound
sahf
add
pop
push
cltd
xchg
inc
insl
mov
lock
je
jb
add
outsb
in
jecxz
cmp
daa
mov
pop
push
movsl
inc
inc
inc
addb
fs
ret
imul
inc
cld
xor
xchg
inc
jb
ja
mov
sbb
xor
pop
jo
cs
insb
rolb
insl
rcrb
push
sub
mov
or
popa
and
fstp
sbb
rcrb
mov
dec
push
jne
arpl
insb
lods
loope
fldenv
jae
insb
inc
push
sbb
push
out
dec
pop
inc
lock
push
dec
or
pop
ror
lahf
pop
push
ds
inc
imul
rclb
outsb
popf
inc
mov
gs
dec
imulb
sbb
mov
shlb
out
xchg
leave
jo
dec
push
lcall
or
push
mov
int
mov
inc
dec
dec
in
inc
push
dec
daa
mov
mov
dec
int3
insb
or
push
shll
inc
or
daa
or
inc
xor
mov
jb
repnz
je
push
add
push
mov
in
daa
inc
push
dec
popa
xlat
inc
fistl
xchg
jb
cmp
inc
ret
or
sbb
roll
or
das
push
pop
rclb
cmp
imul
inc
jmp
fldenv
xor
call
xor
insb
mov
add
sbb
outsb
mov
dec
push
or
in
xor
cwtl
push
add
subb
pop
add
es
or
jl
and
jge
lods
push
jae
pop
xor
sbb
popl
sbb
mov
push
fs
mov
ss
loopne
jae
inc
ss
insl
outsl
int
int
and
sbb
ret
insb
push
add
push
jb
jae
daa
inc
ret
mov
fwait
inc
imul
dec
xor
clc
lock
js
inc
arpl
sbb
or
sbb
xchg
ficoml
jle
jb
inc
cmp
pop
ds
and
gs
shl
inc
rorb
dec
add
dec
insl
jo
test
jb
sbb
lock
test
sbb
lock
jae
lahf
adc
pop
sti
sahf
outsl
jnp
or
push
daa
dec
pop
shr
mov
sbb
movsl
inc
loop
loopne
jo
add
xor
xchg
dec
mov
push
dec
inc
xchg
movsb
shll
push
jbe
cmc
ss
outsl
xchg
je
and
ds
xor
dec
je
jne
push
cmp
hlt
adc
inc
dec
push
cmp
dec
mov
gs
push
imul
data16
ret
pusha
daa
jp
je
iret
into
jbe
daa
inc
fs
push
and
inc
ljmp
mov
test
push
push
hlt
aaa
rcrb
push
int3
imul
mov
sub
and
imul
int
fcompl
stos
inc
pusha
nop
add
cwtl
popa
daa
inc
inc
mov
inc
push
in
mov
xor
das
jbe
jne
bnd
imul
std
inc
dec
repnz
jae
insb
sub
sbb
cltd
flds
in
push
pusha
pop
dec
aad
mov
xchg
jg
fs
das
jae
loopnew
cmpsl
insl
andl
outsl
imul
ja
aas
mov
inc
inc
xor
arpl
insl
call
xlat
and
jp
inc
outsb
xor
add
dec
fs
or
jbe
and
rclb
dec
pop
scas
sbb
fsubrp
push
xchg
jns
push
jae
mov
pusha
mov
sub
daa
dec
jo
js
fnstenv
sbb
imul
sbb
lret
push
jns
pop
pushf
pop
dec
int3
push
test
push
mov
pand
fidivrs
push
aas
iret
mov
adc
sub
bound
scas
andb
and
push
fsubrs
into
in
push
outsb
mov
cmp
imul
loope
push
sub
lock
int3
pop
cmpsb
push
sub
dec
dec
out
adc
repnz
push
or
outsb
push
pop
nop
testl
xor
ret
xchg
mov
or
xor
push
jno
imul
mov
cmpsl
bound
push
xor
xabort
push
inc
jo
ficompl
inc
jo
sbb
sub
pop
jae
push
inc
sub
fmulp
pushf
push
in
or
outsl
xor
imul
pushf
pop
and
sub
sbb
lret
testl
inc
and
push
dec
out
sbb
add
sub
pop
out
sbb
subl
push
insl
arpl
pop
dec
insb
fstpt
ret
and
daa
push
push
push
addl
cmpsb
cli
lds
mov
mov
mov
mov
jecxz
outsl
js
sub
lock
cs
sub
adc
mov
inc
push
dec
inc
inc
dec
dec
push
fnstcw
lods
sbb
sub
xchg
sub
jns
jp
push
inc
sahf
aas
jbe
add
jb
fs
cs
sbb
mov
fiadds
sub
je
push
daa
dec
add
add
dec
push
sub
out
dec
jbe
lcall
push
sub
gs
mov
sbb
push
inc
jbe
push
dec
fbld
je
adc
rcrl
jb
sbb
jne
insb
add
lret
inc
pop
dec
add
dec
rcr
push
loopne
inc
inc
mov
add
js
test
out
mov
or
pop
and
pop
add
add
fs
add
cvtpi2ps
mov
or
inc
insb
int
add
add
or
inc
sahf
pop
cs
add
and
mov
pop
xchg
nop
out
subb
negl
aam
add
mov
xchg
add
dec
dec
push
pusha
push
mov
rcrb
push
mov
dec
lahf
aaa
clc
inc
and
adc
das
lock
add
add
add
add
add
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
pop
mov
test
adc
mov
xchg
shl
fsts
sub
mov
push
mulb
mov
and
lret
and
cmpsl
dec
push
dec
jecxz
subl
dec
jp
adc
push
and
aaa
subb
fnstcw
dec
scas
xchg
jge
lret
xchg
adcb
ret
push
pop
ljmp
filds
and
pop
mov
mov
sub
push
add
push
sbb
mov
fsubl
stos
sbb
jno
xlat
add
out
lret
roll
xor
mov
lret
add
pushf
and
cmp
add
pop
mov
xchg
add
and
js
sbb
nop
add
ret
inc
cmp
movsb
jnp
dec
xor
mov
mov
add
sbb
mov
idivl
sub
ds
jmp
xchg
inc
shlb
pop
insb
daa
cld
push
pop
jl
filds
fbstp
xchg
test
data16
jle
ja
int3
sarb
inc
push
push
je
fs
mov
outsl
mov
mov
xor
lods
and
xchg
lock
dec
outsl
cli
mov
repz
mov
cmp
xor
sti
les
jg
and
mov
dec
lods
pusha
les
mov
pop
sub
rcl
testl
sub
imul
fs
out
arpl
dec
push
push
sub
clc
cld
push
fidivl
push
sub
xchg
or
mov
inc
fsubs
push
xor
xor
addr16
add
inc
mov
repnz
nop
cmp
mov
out
adc
adc
mov
mov
es
.byte
add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
or
add
add
pop
mov
add
add
pop
jo
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
sldt
aas
add
sldt
aas
add
add
add
add
add
add
add
insb
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
dec
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
adc
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
inc
add
jno
jae
add
imul
and
push
add
insb
add
outsl
add
ja
push
add
sbb
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
jno
jae
add
imul
and
pop
add
jb
outsb
add
add
and
inc
add
data16
arpl
add
cmp
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
push
add
arpl
imul
add
js
sub
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
jno
jae
add
imul
and
push
add
insb
add
outsl
add
ja
push
add
add
add
add
add
add
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
dec
add
add
popa
add
add
js
add
add
or
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
jno
jae
add
imul
add
cmp
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
inc
mov
add
mov
add
add
int3
mov
add
add
aam
add
bound
add
outsb
mov
add
mov
add
add
in
mov
add
mov
add
add
lahf
mov
add
add
lods
mov
add
add
mov
add
adc
add
ret
mov
add
add
int
add
and
add
fidivl
add
in
add
repnz
add
mov
add
mov
add
mov
add
mov
add
add
add
add
add
add
dec
mov
add
add
add
add
add
add
push
add
add
add
jbe
add
add
add
test
add
nop
mov
add
add
add
add
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
insl
fs
xor
cs
insb
add
jns
je
imul
insl
jo
cs
insb
add
popa
arpl
xor
fs
insb
add
imul
insb
insb
add
je
jo
xor
cs
insb
add
insb
popa
outsb
insl
popa
outsb
cs
insb
add
gs
cs
insb
add
jae
jo
xor
cs
insb
add
arpl
xor
fs
insb
add
arpl
xor
cs
insb
add
outsb
insl
insl
cs
insb
add
outsb
jae
outsl
outsl
insb
cs
add
xor
xor
fs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
imul
push
add
add
inc
jb
jo
push
dec
push
jb
je
arpl
push
dec
gs
jo
outsb
inc
outsb
jne
push
add
add
insl
dec
gs
imul
popa
imul
insb
add
dec
gs
jae
inc
fs
add
push
jns
je
insl
inc
outsl
arpl
inc
imul
add
gs
dec
inc
jne
jns
add
push
popa
jae
outsb
jbe
imul
jo
dec
add
dec
fs
outsl
outsb
jbe
jb
add
dec
popa
imul
outsb
popa
je
jb
add
add
imul
add
add
je
outsl
jb
inc
add
popa
arpl
jo
