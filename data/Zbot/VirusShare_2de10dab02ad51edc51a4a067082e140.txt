sbb
add
adc
inc
into
sahf
mov
dec
rcll
dec
push
xor
xchg
pusha
adc
adc
scas
mov
sub
mov
aad
adc
pop
mov
add
mov
fnstsw
leave
loop
pop
outsl
call
popf
adc
shl
push
fs
xor
mov
repz
mov
test
mov
in
jno
and
fs
fadd
push
mov
sub
in
and
push
pop
loope
fwait
cmp
addr16
insl
adc
arpl
xchg
shl
inc
and
shlb
mov
sub
cmp
jb
mov
inc
add
dec
push
sub
repnz
lds
pushf
push
test
sti
and
daa
pop
ret
or
hlt
outsb
push
out
stos
sbb
imul
sub
test
xchg
test
std
aaa
add
out
mov
cwtl
imulb
jb
daa
daa
add
dec
sbb
sub
cmpb
sub
out
inc
ja
and
movsl
sub
movsl
enter
mov
lds
or
mov
xchg
inc
jb
scas
fabs
pop
cmp
cmp
fisttps
mov
and
lods
in
adc
xor
jns
mov
sbb
push
sti
mov
sub
test
in
call
lahf
bound
jbe
sub
in
sahf
jne
pop
aaa
cmpsl
adc
pop
xor
je
mov
xor
lahf
adcl
lds
or
jbe
push
pop
sbb
or
arpl
sbb
jno
aam
inc
xchg
dec
nop
pop
sarl
data16
mov
mov
cmc
ret
scas
popf
test
xchg
cmc
loope
ljmp
jo
subb
mov
mov
fdivrp
mov
rol
xor
lret
mov
sub
scas
adc
pusha
inc
xchg
jnp
dec
inc
popa
repnz
push
add
insl
stc
jns
pop
fs
popa
jl
fisttps
adc
push
popf
cmp
jne
dec
mov
out
xchg
pushf
xor
ret
lods
in
nop
sbb
cmp
imul
and
rorb
negl
dec
stos
popf
and
adc
pop
mov
enter
lret
test
sub
das
dec
adc
add
into
jg
pop
sub
jns
aad
sbb
xchg
push
pop
push
jmp
jle
jb
mov
rolb
ljmp
pop
mov
pop
mov
jge
mov
leave
dec
sbb
sbb
add
pushf
lods
nop
mov
imul
mov
cmp
mov
mov
jl
fnsave
or
orl
xor
sub
xchg
jnp
adc
in
fistps
dec
lcall
xchg
push
nop
jae
pop
sub
aas
imul
adc
sub
rcll
mov
into
lea
sbb
or
call
fiaddl
mov
mov
rcll
fs
pop
adc
faddl
xchg
push
cli
testl
divb
ret
jg
dec
lcall
addr16
xchg
ljmp
sub
and
cwtl
jbe
mov
adc
sbb
mov
rcr
loop
stos
out
adc
out
and
mov
leave
cmp
cli
sbb
inc
in
sub
push
clc
mov
and
xor
enter
jecxz
in
subps
xor
cmc
sbb
icebp
or
xor
lods
test
xlat
jl
or
scas
shrb
bound
aam
scas
xchg
test
sub
scas
pop
test
mov
sti
cli
hlt
testl
repz
sbb
and
int3
xchg
mov
or
leave
mov
mov
xlat
lds
stc
cmpl
or
xor
incb
repnz
cld
fisttpl
sarl
sbb
add
rcll
mov
outsb
mov
xor
rdpmc
mov
jle
stos
adcl
jbe
push
sbb
jmp
mov
pop
xor
fs
dec
icebp
xchg
xchg
inc
aad
loopne
bound
mov
insl
shlb
add
jbe
ret
xor
or
xchg
movsl
iret
mov
std
lcall
jo
mov
vfmsub231sd
mov
out
loope
loop
dec
dec
stc
rcr
mov
fs
sbb
jno
adc
jmp
in
sub
push
jecxz
gs
aad
scas
lahf
mov
cmp
jo
cltd
icebp
mov
add
sahf
in
xlat
dec
xchg
jl
lret
sub
les
inc
jmp
inc
cmp
aad
lock
mov
mov
ficoml
mov
mov
dec
pop
shll
addr16
cmp
jbe
adcl
int3
sarb
out
pop
push
ret
inc
call
push
rclb
mov
js
jp
mov
les
xchg
into
inc
fisttpl
rorl
shl
fwait
add
aad
push
xor
or
push
ja
mov
icebp
jmp
divb
int
push
mov
hlt
icebp
push
jp
repz
xchg
repnz
imul
sarb
cmp
test
mov
dec
mov
fistpll
xchg
leave
in
loop
xchg
imul
jg
fwait
and
adc
mov
add
or
mov
push
pop
out
fimull
mov
outsl
cmp
int3
or
scas
icebp
jbe
adc
or
adc
xor
adc
aas
xor
adc
loopne
pop
vpunpcklbw
push
mov
movsb
sbbb
push
test
nop
mov
stos
mov
cmp
icebp
js
sub
mov
cwtl
fsubs
pushf
outsl
pusha
xor
jp
mov
dec
pop
cmp
in
xchg
cmp
inc
jno
int3
xor
jg
pop
into
cs
hlt
mov
rcrl
dec
jle
inc
mov
vmwrite
insb
xor
mov
lds
cmp
and
xor
in
cmp
mov
hlt
clc
mov
xchg
mov
arpl
loope
inc
push
mov
lret
and
pop
mov
add
inc
cmp
add
popa
inc
fidivs
push
and
lcall
in
movsl
xchg
repz
mov
or
mov
dec
xchg
cmp
cmp
xchg
popf
cmpl
pop
mov
sbb
ljmp
and
xchg
ljmp
xchg
mov
hlt
mov
add
cmp
xlat
ss
fsubr
repz
roll
push
movsl
lods
filds
cmpb
dec
push
fucomp
mov
or
pop
cmp
mov
adc
jl
rcl
mov
pushl
and
js
mov
pop
ret
jno
sahf
les
faddl
lods
inc
in
push
dec
roll
ja
aam
cmpsb
adc
out
fisubl
repz
nop
stc
rcrl
mov
lahf
or
icebp
gs
inc
mov
lea
dec
mov
sti
jbe
jl
das
cmp
push
inc
jne
or
and
jnp
repnz
jle
pushf
out
pop
out
jge
mov
dec
ds
lds
pop
sbb
mov
lock
cmc
sbb
sub
icebp
cmpsl
lret
daa
in
mov
ja
dec
sub
add
mov
in
ljmp
xchg
js
jae
fildl
outsl
jp
daa
pop
mov
cmpsl
sbb
test
pop
out
inc
lcall
adc
aam
loopne
and
adc
push
loopne
mov
jmp
xor
pop
dec
mov
mov
mov
xchg
mov
inc
xchg
aas
sub
dec
add
scas
hlt
xor
notb
sbb
bound
lods
mov
xchg
cmp
inc
sbb
popf
xchg
or
push
mov
outsb
push
sub
cld
or
js
and
push
and
incl
mov
out
cmpb
movsb
int
jae
pop
filds
xchg
repz
xrelease
fisttpll
mov
aam
pop
test
xchg
repnz
jns
out
mov
mov
or
sbb
push
movsl
fistpll
dec
fistps
mov
test
fimull
int
sub
loope
dec
int
and
call
jle
mov
shr
movsl
inc
std
cs
xor
and
movsl
leave
push
sub
mov
sub
decl
push
xchg
mov
mov
cmpsl
xchg
popa
mov
sbb
dec
xorl
repnz
inc
jmp
jno
fmulp
mov
test
add
shll
add
sub
xchg
imul
in
cmp
xchg
mov
mov
scas
and
pop
pop
fs
jb
into
out
outsl
add
jb
xor
arpl
test
std
and
js
filds
sub
das
loop
mov
stos
into
mov
addl
fs
jp
mov
sub
int
loop
cmpsl
push
mov
xor
push
xlat
sbb
sbb
add
imul
sub
notb
xchg
popa
imul
std
push
cwtl
sbb
imul
adc
mov
es
dec
lret
sbb
jno
sahf
xlat
or
out
ljmp
push
repz
mov
mov
fldl
outsb
pop
or
stc
sbb
imul
mov
and
ffree
lret
int
xor
pop
mov
sbb
dec
sub
in
mov
pop
mov
mov
jle
adc
insb
imul
aaa
and
into
and
lret
push
test
mov
cltd
js
fidivl
sti
jp
icebp
cmp
pop
dec
in
xchg
sbb
loopne
dec
pop
outsb
mov
cmc
cs
jbe
scas
mov
iret
jns
jmp
aad
mov
inc
mov
jle
ret
sti
mov
adc
pop
pop
mov
push
xchg
mov
iret
ja
sub
mov
jg
stc
mov
mov
je
call
jnp
or
les
push
out
cltd
shrl
fbld
pop
icebp
test
xchg
enter
inc
add
sub
xchg
dec
xchg
out
loopne
jg
adc
xor
pop
shlb
mov
inc
sub
xor
jle
das
fnstsw
aas
jbe
imul
and
push
fldl
loop
dec
test
fcmovnb
fisubl
les
bound
jae
jl
dec
jo
and
add
mov
jmp
fcmovb
f2xm1
and
xchg
inc
repz
pop
and
and
fcmovne
arpl
cmp
loop
bound
int
int3
xor
int3
pop
jg
pop
ljmp
movsl
push
mov
cmp
leave
inc
mov
lods
repnz
lods
inc
mov
insb
ljmp
sub
mov
addr16
daa
sbb
push
pop
movsb
push
outsb
lods
out
push
es
inc
dec
mov
sahf
ja
or
lret
pop
fucomp
mov
mov
bound
mov
pop
sbb
add
cs
sbb
xor
sub
test
mov
les
pop
bound
mov
movsl
jl
mov
mov
outsl
sub
and
dec
or
fldlg2
addr16
and
dec
add
cmovnp
out
fldenv
imul
inc
xchg
cmpsb
fs
shl
pop
faddl
or
xchg
movsb
jge
int3
in
sub
mov
cmp
sahf
jecxz
pop
shl
stc
mov
cmpsl
or
jbe
push
repz
mov
jbe
pop
aaa
xchg
or
int3
ret
pop
call
mov
pop
rcl
cli
and
cltd
cmp
call
scas
test
push
fstl
sbb
adc
loop
mov
and
js
add
in
enter
dec
ret
pop
cwtl
cs
mov
aaa
mov
cmpl
adc
xchg
inc
or
adc
sahf
loop
inc
cmpsb
notl
cld
lock
pop
dec
mov
and
das
ret
sbb
push
xor
aas
xorl
shl
shrb
addr16
leave
mov
mov
fisttpll
pushf
lods
lret
call
out
loopne
test
negl
cmc
fs
sahf
cmp
pop
or
test
sahf
hlt
stc
jge
sbb
jp
mov
mov
jbe
adc
clc
fidivl
mov
lods
jns
mov
jmp
inc
call
cmpb
daa
pop
out
rorl
push
shl
aas
sub
repz
dec
ds
mov
add
arpl
fldcw
push
ljmp
push
divb
mov
mov
mov
into
jl
dec
bound
std
push
mov
sbb
add
xchg
mov
dec
xor
cmc
cmp
jge
push
xchg
and
punpcklbw
aaa
rclb
mov
and
push
pop
pushl
lods
es
ret
cmpsb
push
cmp
test
jnp
in
pop
pop
fdivrp
mov
hlt
ds
fbld
ss
rorl
add
inc
adc
lea
insl
push
mov
lret
loop
xchg
jno
es
and
push
mov
sar
popf
icebp
ljmp
test
cwtl
pusha
jp
out
je
mov
ss
cwtl
pop
cmp
mov
dec
xchg
sbb
push
cwtl
adc
nop
add
stc
div
das
shr
daa
lock
pop
fstl
lods
stos
iret
repnz
popa
fldenv
pop
sbb
sahf
push
sbb
sbb
cmp
xlat
in
push
mov
lock
aam
mov
imul
jg
mov
stc
mov
cmp
jae
imul
jecxz
lds
fisubl
jno
movsb
stos
in
pop
mov
std
xchg
mov
inc
sbb
xor
xchg
into
fsubr
sbb
sbb
push
rcll
inc
addl
xor
les
jns
das
cmp
jnp
test
negl
int3
or
xor
sub
daa
pop
idivb
loope
lods
sbb
mov
lods
scas
lds
mov
lock
ds
xlat
lods
cmpsl
call
icebp
lods
mov
jp
repz
xchg
lds
push
lcall
sub
add
xchg
fildll
inc
push
cmp
enter
adc
jge
push
loope
test
inc
dec
and
mov
sbb
and
pop
xchg
repnz
push
insb
es
xor
mov
sti
jle
cmp
ljmp
xchg
dec
out
jns
in
xor
mov
pop
stc
push
push
cmpsb
scas
mov
inc
sbb
cmpsb
test
addr16
mov
scas
dec
mov
dec
mov
pop
adcl
inc
push
push
pop
add
loopne
jecxz
xchg
in
lock
cmp
lcall
or
js
stos
les
pop
mov
jae
movsl
xchg
mov
idivb
cmpsb
inc
cltd
clc
jp
movsl
adc
test
jl
cmp
mov
jne
jbe
ret
xor
add
mov
aaa
lds
cmpsl
jmp
sti
shll
daa
inc
pop
and
shl
adc
push
dec
aad
jns
movsb
call
jnp
lods
sbb
pop
lds
ret
xchg
mov
nop
or
cmp
scas
push
xor
aas
test
outsb
rorb
push
mov
mov
dec
add
mov
dec
adc
ror
jecxz
in
clc
jo
rclb
cmp
fld
push
inc
arpl
ds
call
aaa
aam
xchg
scas
es
jmp
sbb
notb
mov
push
xchg
clc
xor
leave
or
leave
and
in
enter
xchg
pop
ja
mov
sbb
fistps
sahf
scas
push
cli
jno
in
xor
test
pop
aad
daa
pop
xchg
sahf
addr16
inc
or
xlat
int
xor
repnz
aam
sub
pop
jb
jecxz
mov
mov
mov
add
jg
lahf
push
roll
out
loop
test
sub
sub
mov
sub
cwtl
fisttpl
mov
sti
fisubs
mov
xchg
test
ss
inc
fildl
out
inc
faddl
jae
sti
aad
fwait
cmpsb
jmp
sti
inc
xchg
mov
xchg
sub
outsl
rcrb
xorb
or
ja
push
lods
lcall
sub
out
ret
sti
sub
ss
aad
test
cmpsb
pop
pop
sub
addr16
icebp
scas
repnz
mov
adc
jo
fcoms
rolb
lds
pop
in
int
and
insb
pop
xchg
jecxz
aam
movsl
pmulhuw
ljmp
push
dec
in
scas
add
jge
pop
stos
push
movsl
jecxz
sarl
or
inc
xor
jbe
pop
push
stc
push
and
sbb
rorb
mov
in
jl
push
xor
jo
mov
scas
jmp
cld
push
mov
dec
push
outsb
mov
inc
inc
sub
pmullw
inc
inc
mov
stc
sarb
stc
jl
cmp
sbb
jl
or
roll
insb
jns
cmp
icebp
ds
popf
mov
jo
imul
aad
mov
inc
addr16
inc
int
mov
cld
popa
adc
inc
sub
jo
mov
mov
mov
dec
pusha
push
lds
inc
insb
out
rcr
adc
add
call
lret
xchg
xor
outsw
cmc
daa
cmp
adc
out
mov
ret
ret
inc
sbb
cmp
jge
mov
sbb
leave
fildll
and
lahf
xor
jecxz
in
xor
ror
sub
sbb
popa
ret
out
mov
outsl
and
xchg
andb
negl
into
addr16
aad
dec
adc
mov
in
sbb
add
or
iret
movsb
xchg
je
in
pop
pop
inc
test
cltd
pop
push
aaa
and
mov
fisubrs
std
fisubrs
add
sbb
test
shrl
out
mov
mov
enter
js
mov
std
dec
cmp
clc
mov
mov
test
jmp
jecxz
fstpt
jl
fisubl
cmp
lds
dec
sub
push
test
or
divb
add
bsf
jmp
cmp
push
pop
pop
adc
popa
aaa
jb
jnp
and
sbb
scas
inc
adc
test
lods
jle
inc
jle
rclb
fstps
neg
hlt
dec
cmp
xor
sbb
pop
mov
jge
or
rcrl
pop
xchg
repnz
sbb
xor
popf
sbb
dec
rcrb
repz
ss
bound
insb
mov
outsl
out
dec
mov
push
inc
adc
repz
push
cmpsl
movsl
insb
shlb
mov
jmp
inc
out
cmp
push
dec
js
push
mov
push
mov
sub
je
lahf
in
mov
out
mov
xchg
add
push
push
add
mov
mov
xor
in
andb
mov
fidivs
sub
pop
inc
ljmp
xlat
out
mov
cmpsb
jbe
divl
faddl
enter
sarl
push
je
pushf
cs
xor
popa
rcrl
pop
mov
ret
fcomip
iret
cmp
jmp
and
jae
cmp
and
icebp
mov
in
call
fisubrl
or
add
cmp
pusha
mov
jg
dec
dec
gs
in
adc
leave
xor
cmpsl
add
jno
jbe
fidivrl
and
jnp
insl
mov
inc
push
out
cmc
insl
add
test
mov
jbe
and
jl
inc
jnp
or
ss
mov
push
mov
pop
pushf
pop
or
popf
cli
mov
push
mov
rcr
sarb
cmp
push
loop
mov
movsb
push
cmp
and
cwtl
dec
inc
ja
cmp
fidivrs
inc
xlat
imul
push
cli
hlt
icebp
dec
lcall
dec
test
adc
sbb
testb
add
lahf
mov
pop
les
inc
lds
std
cmc
mov
std
mov
cmpsw
loope
mov
in
aas
fmul
or
scas
mov
stos
mov
int
ljmp
xor
clc
jl
sarl
in
call
push
repnz
and
sbb
xchg
pop
arpl
mov
or
or
add
push
jp
add
cld
dec
xchg
xchg
ret
outsl
dec
mov
cli
std
shl
cmpsb
dec
cld
outsb
imul
arpl
inc
dec
pmuludq
stos
push
out
int
outsl
je
xchg
cwtl
inc
subb
or
outsl
ret
adc
sub
leave
push
cmp
sbb
dec
jo
fidivrl
mov
or
test
daa
mov
shlb
pusha
xchg
pop
xor
push
in
mov
es
dec
dec
scas
int3
add
xor
mov
and
andl
cmpsl
cmp
fldl2e
or
push
mov
cld
test
cmpsl
int3
lcall
stos
jg
loope
fstpt
arpl
in
adcb
mov
aam
mov
add
fildl
testl
jle
fisubl
mov
and
pop
or
mov
push
add
xchg
lock
pop
test
fisubl
cmpsl
adc
stos
sbb
mov
insl
rcrb
mov
or
add
mov
push
push
dec
and
imul
xchg
je
xchg
jmp
lock
inc
and
test
imul
xchg
dec
mov
std
cmp
sub
mov
fidivs
xchg
inc
xorl
push
aas
push
cmpb
in
movsl
jp
dec
mov
mov
jmp
sub
popa
push
xchg
mov
pop
jl
loope
mov
sysret
jne
call
or
cmp
ficompl
push
lret
rcll
mov
xchg
pmaxub
and
xor
mov
imul
mov
in
test
inc
test
cmp
mov
xor
mov
or
decb
in
packuswb
cwtl
jae
sub
pop
dec
inc
dec
mov
call
ds
les
daa
sub
and
sbb
xchg
cwtl
adc
dec
mov
outsl
inc
dec
jno
or
dec
insb
loopne
sub
adc
bswap
push
xor
add
popa
and
cld
push
dec
jnp
lret
add
xor
push
xor
or
int3
mov
in
lahf
mov
xchg
xchg
mov
or
call
cmpsl
cli
jmp
jb
mov
mov
cli
insb
inc
add
js
cmc
mov
inc
fildl
mov
xor
in
dec
shl
jmp
data16
mov
lea
adc
and
call
dec
je
jo
jl
lahf
push
fdivs
or
xchg
xor
mov
imul
loopne
lock
push
sub
xchg
dec
xlat
mov
bound
mov
jge
test
pop
cli
std
sub
aaa
ret
inc
out
pop
mov
in
xchg
jo
xor
mov
mov
jecxz
addr16
xor
rorl
popf
cld
adcl
mov
jg
inc
xchg
subb
test
movsb
and
sub
mov
aaa
xchg
push
mov
out
mov
mov
ja
sbb
mov
sbb
pop
jbe
inc
push
and
nop
add
mov
cmp
mov
imul
loopne
repnz
dec
int3
xor
inc
xchg
sub
mov
int3
mov
xchg
pop
sub
inc
rcl
and
icebp
xchg
popf
popa
and
iret
rcll
lds
add
faddp
mov
ficoml
pop
fidivl
lea
scas
inc
cmc
je
out
jae
or
aam
mov
cmp
rol
jae
pop
jae
sub
mov
mov
and
or
and
popa
xchg
out
lea
and
jmp
lock
sar
pop
inc
xchg
test
aad
push
adcb
xor
xor
mov
push
cs
adc
jle
sub
mov
xlat
aas
addl
fisttpl
lock
jmp
cmp
imul
lret
ret
arpl
insl
or
jg
jb
test
lret
jl
lods
mov
dec
testl
fimuls
and
pop
xchg
bnd
js
imul
nop
loopne
push
push
push
mov
xchg
fildll
subb
pop
mov
jge
jnp
cmp
dec
bswap
scas
jle
mov
aaa
mov
xor
stc
sbb
sbb
dec
sbb
jcxz
aad
outsb
mov
cltd
mov
js
lock
mov
pop
xor
fnsave
mov
jmp
shr
lcall
mov
add
xchg
scas
mov
out
fsubrp
xor
out
adc
push
daa
leave
bound
xchg
jns
pop
iret
add
test
rclb
inc
je
lods
mov
jl
test
mov
push
insl
iret
add
shrb
iret
add
push
xchg
adc
or
mov
jb
aad
jg
mov
gs
test
je
pop
xchg
adc
mov
je
dec
mov
int
cld
add
mov
fidivrl
xchg
insb
xor
rcr
push
fdivs
xor
adc
loope
in
call
insl
pop
pop
sbb
inc
jmp
bound
rcrb
pop
das
in
fxtract
cmc
sti
lds
pushf
hlt
cwtl
fdivs
stos
insl
xor
imul
push
insb
jo
fucomip
cwtl
pusha
pop
pop
push
jns
xchg
pop
mov
pop
sbb
out
adc
inc
sbb
insb
imul
clc
test
push
jae
inc
iret
pop
inc
xchg
push
les
mov
das
enter
mov
into
jmp
je
and
in
xor
and
ss
jo
cmp
icebp
add
shrl
pop
push
add
xchg
inc
cltd
add
mov
xor
jp
jno
sub
aam
mull
cmp
mov
xchg
or
outsb
jb
xchg
dec
ret
pop
sbb
jb
lcall
pop
mov
dec
adc
push
sti
mov
or
imul
les
stc
mov
push
dec
inc
cs
addr16
in
ljmp
xor
sbb
andb
js
clc
das
or
sbb
xchg
jb
jmp
lret
nop
pop
movsb
xchg
adc
inc
pusha
cmp
fldcw
popa
jnp
dec
mov
mov
in
or
xchg
popl
mov
and
push
dec
addb
cmpsl
ds
ss
and
test
or
mov
addb
adc
cmp
xor
adc
cltd
inc
mov
add
test
enter
sti
js
cmp
jns
dec
pop
lret
adc
lock
les
outsb
imul
jmp
stos
subl
sbb
cmp
cmp
pop
ret
fisttpl
add
int3
mov
sbb
les
sbb
data16
xchg
mov
lret
mov
mov
pop
sti
push
vroundss
jge
cmc
ret
das
or
sub
mov
inc
mov
mov
je
jae
xorps
mov
aad
sub
fwait
mov
push
int3
xor
bound
enter
fldl
pop
pop
and
dec
aas
out
sarl
pop
test
sbb
xchg
xlat
stos
lret
insl
in
xchg
push
mov
lods
rcr
dec
dec
call
fiaddl
pop
sub
negb
cmp
daa
xchg
jge
or
sbbb
push
mov
dec
mov
sbb
push
and
jne
ficompl
mov
dec
pusha
sub
rcrb
push
pushf
clc
shlb
jmp
loop
addl
fisubs
mov
jg
jge
insl
fildll
inc
mov
pop
or
sub
int
dec
icebp
jmp
insb
push
sub
loop
or
mov
stc
lods
add
mov
or
dec
lods
xrelease
loope
adc
movsb
jo
pushf
pushf
push
xchg
mov
ret
repz
push
loopne
push
callw
mov
daa
adc
idivl
mov
mov
data16
xor
dec
mov
xchg
mov
push
bound
iret
push
daa
fdivrs
imul
push
loope
and
test
inc
adc
lods
call
imul
js
push
mov
sub
mov
cmpsl
ss
das
or
pop
push
arpl
mov
out
fwait
les
or
je
xchg
psubb
inc
add
mov
dec
outsb
leave
pop
lods
cmpb
aas
stos
js
sarb
pop
add
sub
push
insb
jnp
xchg
cmp
xchg
imul
pop
mov
xchg
daa
mov
cmp
add
out
add
mov
jle
push
pop
int
cmpb
inc
jmp
mov
dec
out
jnp
aam
mov
mov
arpl
and
xchg
jmp
xchg
daa
jecxz
pop
cmp
cmpsl
jp,pn
in
stos
xchg
jnp
lods
fldlg2
jmp
push
pop
jmp
mov
aad
xor
rcrb
cmc
add
jmp
lret
aam
xchg
fwait
int
pop
in
mov
sti
sub
aaa
xchg
test
and
mov
mov
sbb
lret
mov
add
sahf
xchg
push
testl
test
or
sbb
mov
das
push
int3
movsl
ss
xchg
shll
shll
movsb
xchg
mov
inc
in
jno
inc
popl
pop
in
test
lock
cmpsb
jo
and
iret
sbb
addr16
push
pushf
mov
mov
fdivrl
je
lods
aad
fwait
rol
inc
xchg
cli
mov
out
sbb
pushw
mov
icebp
aam
xor
jnp
inc
cmp
aad
jns
scas
insl
adc
pop
into
lds
or
and
out
push
xchg
jnp
sub
test
gs
ljmp
dec
or
and
xchg
and
icebp
aam
aaa
jecxz
push
pop
xchg
lods
pop
push
jae
adc
cmp
pop
outsl
loope
sub
fisubrl
ret
icebp
inc
sbb
jno
inc
insb
fisttpl
jg
cwtl
mov
out
icebp
cmp
inc
pop
add
movsb
pop
cli
lret
or
mov
push
aad
sub
push
jno
outsb
mov
test
cmpsl
sub
out
sti
iretw
cltd
test
pop
repnz
dec
out
bound
mov
xor
add
pushf
jle
les
cmp
les
popa
jge
imul
pop
adc
sbb
fsubp
xor
movsb
daa
cltd
popa
int3
loope
inc
sti
pop
sti
adc
into
popf
pop
jns
sbb
loop
cli
inc
cld
push
mov
push
jmp
xor
imul
push
sub
or
ficompl
push
jp
in
push
push
lods
ds
jecxz
sbb
cmp
fnstenv
push
outsb
jl
js
loop
inc
mov
fdiv
imul
push
mov
adc
mov
xchg
mov
das
jno
fnsave
pop
and
jp
push
inc
mov
sbb
inc
roll
scas
jl
leave
les
or
aas
cwtl
or
dec
inc
or
in
jg
cmpb
jbe
pop
push
jno
test
pop
inc
cmc
lcall
push
mov
or
imul
sbb
in
mov
xorl
mov
mov
in
movsl
movsb
lret
adc
sub
sbb
mov
add
cwtl
sub
nop
fdivs
push
sbb
into
xor
dec
idivb
js
xchg
out
aam
cs
lock
mov
mov
out
jnp
add
rcrl
icebp
pop
jo
xor
jecxz
inc
sub
ret
jg
xor
int
pop
int3
push
pusha
mov
jo
cmp
negl
subl
div
icebp
or
xor
pushf
in
fisubs
pop
xchg
cmpl
imul
cmp
jmp
jb
push
xchg
push
das
mov
mov
pop
rorb
fadds
ss
push
shrb
movb
jnp
cmp
jne
rcrl
popf
iret
movsl
call
push
lods
orb
inc
xor
out
into
inc
iret
mov
xor
sbbl
fnstsw
nop
lods
mov
ja
stos
fadds
ds
test
xchg
xchg
xchg
inc
adc
js
test
sti
out
cli
push
int3
outsl
mov
lea
cmpsl
push
loop
lock
mov
pop
enter
mov
repz
mov
jp
push
xchg
mulb
lods
inc
movsl
aad
sub
adc
imul
lods
sub
shll
push
push
adc
addl
jo
xor
jno
push
mov
or
loope
mov
jnp
and
sub
sbb
xchg
or
push
jmp
scas
aam
addb
iret
scas
popa
mov
aam
insl
aas
xor
fsubrl
pop
sbb
sub
imul
outsl
sub
dec
sti
aas
lret
aas
xlat
inc
pop
xor
xchg
and
in
shll
mov
cmp
jnp
aam
fsub
add
lcall
xlat
sub
ret
movsl
mov
push
adc
xsaveopt
push
andl
dec
adc
enter
sbb
xlat
shll
pop
xchg
dec
jbe
cmpsb
pmuludq
pop
rolb
fucomi
out
cmp
loopne
les
cs
sbb
inc
lahf
sub
in
sbb
mov
das
in
cltd
jnp
xor
adc
cmpsl
fs
or
cltd
sub
xor
aam
ret
xchg
jl
fwait
cmp
and
fistl
sbb
popa
adc
into
or
xor
imul
pop
sbb
or
fisubs
out
fidivl
cltd
push
sti
imul
and
fcomps
jno
pop
add
mov
mov
pop
call
lret
mov
iret
ljmp
test
lock
cmp
ret
mov
repz
or
cmp
xor
subl
dec
xchg
sbb
dec
jnp
mov
aaa
sub
sbb
xchg
in
shrl
push
pop
jecxz
int
cwtl
xchg
xor
ja
or
xor
push
pusha
popa
xchg
ljmp
ljmp
add
inc
mov
sbbb
fs
lret
and
lds
int3
adc
xor
sarb
leave
push
rcll
jo
push
scas
lock
mov
lods
push
aam
std
insb
add
inc
sbb
jno
icebp
test
xlat
adc
pusha
push
outsb
scas
out
lret
push
lds
sbb
shr
inc
jge
mov
xor
cli
cld
outsl
outsb
or
jecxz
ret
pop
cmp
mulb
adc
les
ss
xor
or
sahf
leave
mov
xor
xchg
xchg
imul
add
in
decb
cmp
mov
lods
mov
push
ss
push
fstl
loope
movsl
call
jae
xor
inc
dec
jg
or
jae
push
aaa
insl
mov
jnp
pop
pushf
fwait
xor
pushf
js,pt
mov
gs
sbb
pop
fdivrl
enter
repz
adc
xchg
push
xchg
push
popl
sbb
dec
movsb
jl
push
mov
jge
mov
imul
imul
cli
faddp
in
jne
cmp
fwait
and
out
jle
dec
aas
pop
dec
mov
loop
aad
out
sarb
mov
shr
jmp
inc
ljmp
fsubp
fmuls
pop
jp
sub
or
lods
inc
push
dec
dec
push
aas
dec
and
mov
pop
cmp
add
and
inc
shll
push
jp
mov
fxch
inc
xor
jb
xchg
cmpsb
pop
or
pop
pusha
push
lcall
mov
add
cli
sub
xchg
cli
loope
sub
insl
rcrl
out
xchg
out
repnz
in
xor
mov
fisttps
inc
std
adc
jl
in
mov
test
aam
mov
aaa
mov
pop
jp
inc
add
inc
adc
cwtl
insb
fidivl
xchg
pop
aaa
xchg
jo
adc
jnp
fidivrl
sbb
sbb
shll
mov
loope
fs
shl
sbb
inc
mov
les
push
nop
idivl
pop
enter
add
pop
pop
pop
add
dec
cmpsb
push
es
in
fwait
mov
ss
xchg
cmpsl
clc
insl
push
into
sub
xor
push
add
fldenv
sbb
push
outsb
xor
les
xchg
mov
stos
inc
lods
dec
pop
push
inc
sti
inc
inc
push
rclb
cmp
mov
inc
push
cld
arpl
mov
mov
std
int3
jno
xchg
rol
dec
mov
mov
cmp
adc
and
cmpl
push
imul
out
lds
inc
pop
aam
adc
test
iret
roll
mov
dec
inc
sub
cwtl
or
insl
aaa
out
ret
in
xchg
je
dec
xor
test
and
xchg
jo
dec
les
insb
lahf
sti
add
adc
mov
mov
enter
xchg
sbb
cmpsb
movsl
mov
cmp
add
int3
nop
repz
sub
or
test
dec
xchg
stos
in
das
mov
pop
clc
fmulp
sbb
mov
cmpsb
or
lods
mov
dec
add
inc
lea
push
hlt
inc
ret
sbbb
sub
mov
ret
add
adc
add
cmpsb
push
dec
ljmp
cmp
enter
pop
test
pop
js
cmp
sbb
je
outsb
mov
mov
sub
gs
mov
xchg
jecxz
xchg
sub
outsb
mov
scas
fisttpl
sbb
or
test
add
mov
outsb
adc
xchg
es
mov
mov
lods
pop
or
ja
pop
inc
iret
or
dec
aam
cs
inc
idivb
sti
xlat
outsl
scas
call
out
xchg
push
call
shll
xchg
out
dec
outsl
fnsetpm(287
push
dec
jmp
pop
inc
outsb
pop
xlat
xchg
test
stos
lock
pop
mov
pop
dec
push
call
shl
inc
sbb
js
cld
sbbb
pop
and
or
or
jmp
mov
adc
push
je
cmp
push
jb
pusha
sti
sti
jmp
push
out
inc
stos
aaa
inc
xchg
xor
pop
jecxz
inc
dec
sbb
jns
daa
adc
lret
mov
dec
xlat
xor
aas
mov
movsb
push
bound
icebp
add
inc
int3
lods
jmp
mov
inc
ret
je
adc
cmp
testb
push
dec
and
ficomps
mov
test
shlb
cmc
mov
pop
dec
add
or
xorb
jl
fucomp
aam
fisttpl
push
mov
repz
dec
cmp
icebp
mov
dec
aam
xchg
in
sub
push
sqrtps
aas
mov
fbld
data16
ret
popf
cmp
push
loope
imul
sbb
arpl
mov
iret
jecxz
inc
jnp
ret
loop
sbb
xor
push
lock
jp
cmp
pop
pop
iret
push
adc
leave
jns
jb
xor
xchg
adc
mov
xchg
cwtl
popl
and
cmp
mov
pop
std
ret
dec
mov
mov
sub
sbb
sub
lock
push
xchg
mov
roll
mov
clc
and
sbb
sbb
sbb
in
cmp
ret
and
test
fs
and
loop
in
pop
or
lret
enter
test
test
jl
imul
sahf
and
test
enter
inc
inc
and
lret
add
in
jle
mov
cwtl
stos
mov
jb
push
shll
shrb
aam
pop
ret
dec
and
cwtl
rcrl
adc
pmullw
push
jecxz
sub
mov
inc
scas
jecxz
das
outsb
int3
movsb
ljmp
test
dec
push
mov
pushf
xchg
lea
insb
jne
es
rorl
dec
inc
lahf
mov
test
jl
stos
cmp
mov
mov
subb
cwtl
xchg
ret
scas
in
dec
mov
dec
sub
sbb
sub
cmp
repnz
loopne
mov
sbb
add
mov
push
or
inc
and
add
push
aas
es
jb
scas
loop
mov
into
jp
mov
jo
mov
mov
mov
mov
inc
xchg
mov
dec
mov
mov
popa
mov
dec
xchg
pop
and
inc
inc
inc
cmp
sbb
xor
lret
fdivrs
jne
or
lds
mov
stc
mov
stos
stos
inc
es
in
or
loop
decb
cmp
xchg
sbb
daa
sub
pop
movb
test
sti
je
add
je
or
mov
js
or
pushf
lods
jmp
xchg
inc
fwait
rcrb
jae
pop
mov
push
pop
mov
cmp
mov
iret
sub
jno
mov
fisubs
es
and
jnp
jno
ljmp
inc
adc
adc
mov
nop
adc
cmp
mov
pop
and
jo
fmull
adc
lcall
add
in
xchg
inc
adc
pop
movsb
rclb
mov
push
mov
xchg
call
and
pusha
adc
test
lea
mov
adc
pushf
xchg
jne
pop
xor
and
push
pop
adc
sbb
pop
popa
dec
popf
movsl
in
pop
in
inc
aad
rcll
out
jl
sub
rclb
shlb
clc
outsl
clc
bound
or
xchg
jmp
insl
out
incl
pop
cwtl
xchg
inc
test
and
lds
test
mov
mov
mov
mov
xorl
les
xchg
pusha
loopne
xchg
mov
popa
xchg
and
mov
sbb
xlat
mov
xchg
dec
fwait
sub
mov
sub
test
inc
mov
fdivrs
mov
add
and
adc
xchg
mov
dec
pop
push
adc
dec
scas
test
pop
lds
aam
lea
in
fldcw
gs
fildll
mov
adc
in
xchg
les
adc
jl
sub
jg
sahf
stos
cs
sub
xchg
jb
mov
fidivrl
out
arpl
pop
sub
inc
outsb
xor
adc
cld
cmp
or
repnz
mov
xchg
lahf
cwtl
mov
inc
sbb
mov
jnp
pop
sub
aam
lret
xlat
inc
les
sahf
out
repnz
inc
fcomip
or
inc
xchg
popf
fsubrp
out
clc
and
ljmp
popa
loopne
fnsave
leave
xor
sbb
jns
cltd
and
or
test
cmp
ss
xchg
xor
bound
inc
mov
imul
add
call
jo
push
cwtl
inc
repnz
jno
push
loop
mov
inc
in
xor
shll
mov
inc
dec
push
adc
sbb
mov
lret
das
out
inc
mov
arpl
mov
in
mov
adc
sub
inc
push
cmpsb
cmp
xchg
scas
aad
jbe
data16
lea
outsl
fwait
daa
sbb
push
test
add
cwtl
loopne
add
lods
or
rclb
sub
fidivrs
xchg
in
rcll
and
std
fstps
das
jne
xor
xchg
cmp
ja
repz
aad
xor
aas
dec
adc
xchg
pusha
in
clc
xor
jne
inc
insb
jae
xchg
add
cwtl
lea
scas
or
es
xor
fdivrs
add
cmp
call
mov
insb
sub
fists
cmp
xorl
cmp
bound
pusha
adc
test
sub
imul
cmp
fisttpll
jecxz
into
rcrl
ret
sbb
or
ret
inc
jbe
and
movb
inc
sahf
sti
ja
fisubs
push
shrb
mov
xchg
push
dec
popf
cmpsb
jp
jae
in
mov
jl
loop
xchg
or
ds
or
adc
mull
jg
arpl
imul
mov
mov
pop
imul
les
test
ret
rorl
push
roll
lret
das
push
pop
insl
push
andb
fsubs
dec
sbb
and
bound
pop
add
push
mov
ljmp
rorl
js
in
cmp
cs
jb
pop
adc
mov
xchg
test
pop
loop
ret
push
imul
andl
test
sbb
stos
ficoms
sbb
sbb
push
out
clc
stos
leave
fmulp
push
loop
mov
int3
dec
aam
push
push
cltd
xchg
pop
sbb
pop
pop
pop
or
aas
mov
insb
sub
fbstp
push
mov
loope
cs
cmpsb
push
pop
mov
lcall
inc
mov
hlt
lock
lret
test
cmp
push
pop
cmp
roll
xchg
inc
ret
shll
mov
mov
sbb
gs
inc
mov
jge
out
aas
lock
push
pop
mov
mov
adc
ss
loope
or
dec
aad
cld
cltd
adc
mov
push
mov
sbb
mov
ljmp
dec
insb
test
jle
inc
pusha
inc
aaa
ljmp
je
cmpsl
cmp
jecxz
jge
idiv
pop
sub
sub
mov
xchg
add
pop
fs
shlb
xor
mov
sbb
aam
fisttpl
je
lahf
pop
std
sarl
ja
roll
mov
les
int
test
lock
mov
mov
in
enter
pop
mov
jnp
por
or
jle
insb
push
cmp
jno
addr16
add
inc
pop
mov
xchg
stos
int
pop
hlt
dec
leave
jae
leave
ss
fdivrl
sbb
jmp
inc
pop
pop
jbe
pop
cmpsl
mov
aam
sbb
addr16
arpl
pop
fstl
int3
shl
push
pushf
adc
adc
cmp
ret
jg
pop
ficoms
test
push
push
mov
xchg
je
mov
mov
out
push
xor
pusha
dec
jns
std
aas
lcall
outsl
mov
pop
jecxz
push
std
sub
xchg
xorb
xchg
int3
sti
pop
aad
outsl
aad
xor
push
daa
inc
mov
dec
movsb
into
mov
pop
cltd
adc
push
int
inc
call
rcll
jb
dec
inc
pop
pop
and
pop
nopl
mov
cmc
inc
xchg
sti
movsb
xor
pop
sbb
xor
popa
cmp
mov
loope
sti
ljmp
xchg
mov
test
and
mov
push
mov
xchg
cmp
mov
push
mov
xlat
clc
cmp
int3
test
adc
adc
aaa
repz
ret
adc
out
andb
mov
xor
decl
mov
stos
andb
fsubl
xor
cli
fldt
xor
inc
pop
sbb
pop
adc
cmp
pop
popf
ljmp
shr
enter
push
inc
push
mov
xor
stc
outsb
inc
pop
out
cmp
pop
jl
icebp
addr16
push
sbb
inc
xor
leave
xchg
insb
add
lock
push
sub
leave
mov
in
dec
in
jns
in
mov
cmpsl
gs
insb
xor
sub
pusha
in
hlt
dec
int3
out
and
stos
es
push
inc
lcall
jmp
arpl
push
mov
out
lods
ret
ds
sbbl
mov
fstl
jno
lret
add
sti
imul
jo
cld
fnstenv
incb
pop
jp
cld
cli
ficompl
jmp
stos
mov
pop
fdivr
loop
icebp
pop
inc
clc
addr16
nop
mov
fisubrl
fistpll
fiaddl
loopne
test
fistpl
pop
les
xchg
test
mov
gs
adc
aaa
lret
or
xchg
sub
icebp
adc
mov
cmp
xchg
lcall
hlt
dec
mov
sti
xor
sbb
adc
scas
into
mov
push
in
stos
mov
scas
dec
test
pop
xor
ds
push
lods
lret
cmp
mov
adc
mov
sbb
jl
cltd
fists
clc
and
loopne
or
xor
adc
nop
pop
mov
pop
cmpsl
addb
ljmp
stos
call
inc
insb
scas
jmp
dec
fnstsw
cmp
add
push
jl
xchg
test
sub
jmp
lods
imul
and
mov
cmpsl
jbe
sbb
aad
jns
lds
mov
mov
xor
add
fst
out
rcl
scas
and
ret
sahf
inc
mov
jo
ljmp
loope,pn
call
dec
fsubrs
xchg
pop
and
dec
push
insb
pusha
push
mov
push
push
inc
push
aas
jo
in
enter
inc
out
es
js
mov
sub
add
fcomip
mov
fnstenv
xor
mov
cmp
pop
cs
adc
jb
mov
sbb
xor
loopne
test
adc
mov
pop
push
in
mul
inc
fmull
pop
fldt
in
cmc
das
and
ret
mov
mov
out
int3
call
dec
add
test
dec
cmp
js
dec
dec
cmpsl
xor
fldt
adc
pusha
fs
mov
std
jb
movsb
ss
mov
leave
sbb
mov
cmp
imul
lahf
cltd
and
cmp
sbb
and
dec
mov
inc
and
dec
pop
leave
hlt
icebp
es
inc
repz
cmpsb
in
inc
imulb
inc
or
xchg
push
add
cltd
push
inc
and
lea
movsl
ja
mov
rol
aam
push
std
pushf
adc
add
int
xchg
test
leave
xor
movsl
loope
lret
sbb
push
push
jo
pop
hlt
adc
and
aaa
push
inc
xchg
cmp
jns
cmp
mov
mov
push
ret
mov
iret
mov
adc
pop
push
insl
pusha
rclb
pop
add
and
outsb
outsl
jle
xor
push
dec
add
adc
sti
cld
test
dec
movsb
push
sbb
cmp
xor
repnz
xchg
movsl
ja
xor
mov
push
push
pop
jb
sub
sub
xor
push
pop
subl
mov
aaa
test
and
rcll
lcall
push
lods
popf
cmpsb
stos
or
cmp
sbb
test
out
ja
jecxz
stc
lea
sbb
stos
out
loop
push
lea
jecxz
or
inc
lret
into
mov
stos
sub
or
insl
and
shlb
push
cld
xorl
sbb
sahf
insl
les
mov
ss
iret
adc
aad
inc
push
ret
rcll
push
rorl
push
mov
js
cmpsl
aaa
aad
cmp
mov
pop
pop
sub
mov
dec
clc
das
mov
inc
jecxz
mov
cmp
out
pop
pop
loope
jnp
jne
out
and
mov
and
loopne
sub
in
mov
and
test
shrb
shlb
imul
loop
loope
inc
in
pop
in
shll
sbb
test
mov
or
adc
sub
in
iret
fs
fldt
adc
jl
mov
fwait
aad
test
icebp
gs
mov
cmp
ds
and
scas
or
and
iret
ljmp
mov
cltd
cmp
loope
jae
scas
outsb
and
insb
pop
xchg
mov
stos
mov
push
fwait
sti
push
shl
js
xorl
pop
loopne
cmp
mov
popl
sahf
out
insl
push
out
and
in
or
xchg
inc
mov
fsub
es
pusha
fisttps
nop
xchg
jl
mov
cs
or
sbb
dec
pop
movsb
movmskps
add
int3
imul
stos
pop
fidivrs
xchg
inc
adc
adc
jae
mov
mov
out
lcall
dec
pop
fmuls
adc
add
mov
cltd
jge
cmp
stc
mov
xchg
mov
out
sbb
jmp
push
inc
ja
add
cmpsl
push
or
ret
add
pop
push
subb
fcmovbe
xchg
sbb
push
sti
add
cld
sub
in
sub
cltd
mov
mov
dec
mov
icebp
imul
mov
lea
daa
adc
push
inc
xorps
aam
out
xchg
sub
jg
push
arpl
and
int3
jne
jnp
insb
fisubrl
push
int3
int
pop
pop
je
sub
or
int
jae
add
inc
dec
outsl
data16
jno
dec
mov
testl
das
shlb
mov
lahf
mov
and
aam
mov
jge
sub
popf
cwtl
xor
cmp
push
push
dec
sub
fwait
sub
xchg
mov
lret
pushl
jne
les
insb
cmp
scas
je
mov
inc
mov
scas
movsb
mov
vorps
adc
xchg
and
js
int3
cmp
cmp
aas
ja
loope
mov
xchg
push
pop
mov
cld
movsb
xlat
inc
and
add
scas
dec
lods
and
ficompl
out
sub
inc
xchg
mov
inc
aam
mov
loopne
mov
repnz
xchg
xchg
xor
repz
mov
notl
in
push
push
inc
test
enter
lods
int
pop
mov
xchg
call
dec
lret
test
call
pop
sbb
mov
leave
pop
pop
std
in
pop
lock
jno
jp
std
add
sbb
movsb
and
stos
xchg
flds
cs
fwait
push
stos
fbstp
push
bnd
pop
jno
leave
and
mov
ss
pop
mov
cs
pushf
fs
dec
mov
in
xchg
fldl
cs
jo
call
push
sub
sbb
arpl
sti
pop
mov
push
sbb
or
xor
sbbl
stc
popa
sbb
sbbl
frstor
pop
pop
outsl
jb
pop
jne
pusha
loope
insl
rolb
xor
repz
and
ja
mov
shrb
daa
push
dec
aas
scas
mov
aam
mov
and
pop
sbb
and
mov
add
adc
in
test
jg
mov
hlt
adc
bound
xor
xor
push
mov
xor
mov
or
pop
cwtl
push
jnp
adc
dec
add
movsl
mov
mov
cmpsb
and
in
mov
int3
jp
or
inc
ljmp
aas
adc
adc
ds
cld
mov
xor
mov
imul
aam
es
and
rorb
into
test
pop
pop
add
adc
notl
jae
cld
ret
stos
movsl
cmp
and
adc
xor
cld
mov
or
jl
stos
shrl
push
push
aaa
dec
fnsave
clc
cmpsb
dec
subb
out
jl
std
data16
xchg
adc
jp
stos
repnz
adc
ljmp
pop
cmc
aam
push
mov
mov
mov
pop
rorb
mov
imul
out
add
and
adc
push
in
and
leave
mov
xor
push
adcl
arpl
mov
popf
shll
in
ror
pop
xchg
ror
adc
ret
xor
mov
pop
or
lods
and
aad
xchg
fidivs
sbb
addr16
cli
or
xor
jb
cli
xchg
adc
add
mov
jo
popf
imull
inc
test
lret
cmpsl
xchg
aad
sbb
push
ljmp
cwtl
arpl
pop
bound
fdivrl
inc
sbb
sbb
and
lahf
jecxz
add
xchg
inc
sarl
fists
jg
sbb
add
jl
ja
inc
lock
aas
sarb
mov
fbstp
stos
dec
and
mov
out
repnz
pop
lahf
jno,pt
out
test
add
jo
and
bound
outsb
and
inc
gs
pusha
stos
adc
push
add
fsubrl
inc
xchg
rorb
jae
mov
adc
cmp
addr16
lret
xchg
loope
nop
add
outsb
jl
ss
pop
push
popf
std
mov
das
dec
scas
mov
or
repz
mov
leave
push
shrb
xlat
hlt
jnp
mov
and
insl
mov
decl
nop
inc
sub
shrb
das
negb
stos
push
xchg
or
pmullw
sub
or
sahf
gs
mov
popa
call
mov
xchg
stos
nopl
fnstenv
cmp
faddl
mov
rclb
add
enter
sbb
pop
je
cmp
insb
loope
mov
sub
out
call
lock
popa
clc
or
daa
js
dec
hlt
or
shl
pusha
mov
lods
es
xor
leave
mov
adcl
inc
leave
in
sbb
xchg
jge
rcl
and
xor
subl
mov
xchg
cmpsl
jmp
add
in
in
ljmp
mov
aam
fdivrs
sbb
fnstcw
sbbb
cmp
sti
jo
cltd
xor
push
push
lds
inc
lret
mov
pushf
insl
or
xchg
or
xor
mov
in
mov
cmpsb
or
aas
and
sbb
dec
fldcw
pushf
shl
es
xor
push
dec
add
add
or
cmp
je
pusha
mov
dec
jmp
ljmp
in
push
in
jmp
loope
xor
xchg
mov
popa
arpl
and
sbb
pop
push
cmp
aam
dec
ds
lock
or
mov
add
rorl
jle
stos
or
jno
pop
or
cbtw
mov
cmc
mov
repz
adc
repnz
add
xor
rcrl
dec
fsubs
iret
rclb
jecxz
cli
cmp
adc
out
iret
dec
in
ret
adc
mov
xor
dec
fisttps
xchg
jbe
or
mov
pop
ss
rol
lahf
pop
shr
xorl
in
mov
ret
in
in
sbb
out
aad
add
fstps
inc
xor
pop
fildl
stos
in
cli
mov
das
data16
inc
call
cmp
cld
sub
dec
sbb
xor
jecxz
outsb
xor
jns
inc
mov
mov
stos
adc
adc
repnz
cmp
hlt
je
es
insl
xor
cmpsl
pop
cwtl
mov
dec
xchg
mov
fcmove
add
insb
repnz
or
push
lea
aaa
inc
and
mov
ljmp
jno
cmp
jae
pop
fstps
rcrb
nop
jp
cmpsl
lock
in
pop
jge
nop
decl
sbb
and
and
outsl
pop
dec
add
pop
addr16
jp
xchg
divb
pop
pop
popf
jmp
sbb
sbb
lret
cmp
cli
shl
and
dec
js
lock
mov
pop
fidivrl
jbe
pop
inc
mov
pop
cmpsl
movsb
aaa
call
test
cltd
jg
movsl
jae
add
mov
sub
mov
lods
into
sbb
fsubr
cmp
rcll
dec
adc
jmp
fsubrl
and
adc
add
loope
aad
je
jp
pusha
sub
leave
pop
mov
pop
loopne
std
js
das
leave
out
rorl
nop
pop
jne
inc
push
jbe
outsl
cmp
ret
pusha
sahf
popa
jge
xchg
and
pop
in
mov
pop
sbb
add
xchg
xchg
shlb
xchg
lret
xor
push
test
sbb
mov
rcrl
jb
out
and
inc
lds
divl
loopne
sbb
test
call
jo
jp
aaa
sbb
inc
cmp
jae
movsb
xchg
nop
cwtl
jne
clc
lcall
loopne
js
mov
mov
add
aaa
mov
xchg
dec
outsb
xchg
ds
cwtl
into
adcl
loope
dec
leave
loope
adc
jbe
mov
hlt
sbb
sub
push
sub
clc
out
aam
and
sbbb
aad
addb
loopne
mov
jle
push
pop
pusha
ret
int
popl
sbb
js
lds
cli
sub
in
add
sbb
orl
outsb
jo
jp
mov
xchg
lock
lret
push
aaa
ret
mov
push
dec
je
movsl
dec
xchg
rorb
dec
xchg
xchg
iret
dec
add
lahf
inc
dec
inc
cmp
sub
mov
dec
xor
xchg
adc
test
push
cmp
or
pop
mov
xchg
push
adc
jmp
cld
push
and
jns
les
push
pushf
jmp
pop
test
xor
mov
lret
into
sub
xchg
adc
cmpsb
stc
xchg
pop
pop
shll
jmp
lds
les
mov
je
pop
shrb
out
pop
push
shr
mov
punpckhbw
daa
xor
sbb
aam
or
mov
popf
sbb
or
mov
sbb
xchg
dec
xchg
cs
push
jmp
ficompl
and
mov
mov
mov
xor
jbe
inc
sub
xor
mov
mov
cmp
cmp
add
fdivs
and
iret
insb
cli
das
test
popa
cmp
nop
dec
sbb
addb
xchg
or
dec
or
jg
inc
add
mov
push
pusha
cli
push
mov
and
cmp
clc
hlt
icebp
jb
inc
rorl
repz
test
test
je
lahf
adc
adc
outsl
out
sbb
or
jge
pop
stc
dec
xor
pop
sub
jecxz
sbb
faddl
shr
jae
xor
clc
adc
inc
gs
rclb
into
ret
mov
mov
pop
fistpl
lahf
jne
jns
push
add
scas
pop
mov
test
xor
sub
xchg
mov
aad
cmpsb
jns
mov
mov
fwait
jne
mov
repz
in
andl
mov
arpl
movsb
or
ds
pop
dec
stos
xchg
fidivrl
pop
lods
out
repz
fsubr
adc
movsb
ret
movntq
insl
test
cmp
clc
mulb
leave
daa
jecxz
add
and
or
cmp
fucomip
cmp
aas
shr
lret
repnz
fnstsw
cmp
popa
lea
leave
popa
stos
rcrb
pop
and
ret
lret
js
sbb
in
pop
repnz
and
xor
ror
inc
adc
jp
test
pusha
dec
or
mov
fistps
xchg
inc
mov
sub
out
or
xlat
mov
fs
ss
xchg
mov
data16
inc
mov
adc
dec
and
sbb
mov
lcall
inc
dec
lret
inc
cli
daa
mul
les
loopne
mov
add
inc
gs
sub
cmpsb
mov
leave
dec
ljmp
xchg
cmp
sti
cmc
imul
mov
and
stc
push
out
sub
mov
lods
test
rcr
cmp
rcrl
adc
pop
sub
ret
faddl
xor
dec
and
mov
fidivrs
inc
popa
xor
mov
and
popf
stos
lods
or
pop
push
pop
inc
dec
inc
or
stc
clc
ss
push
push
xor
dec
test
fstl
mov
iret
jge
mov
pusha
daa
cmpsb
test
cmp
or
pop
stos
mov
jnp
mov
shlb
mov
aam
dec
xchg
in
or
xchg
pop
leave
cmpsl
outsb
cmp
xchg
js
mov
jb
sahf
cmp
icebp
lds
jmp
mov
ja
lcall
fs
and
cld
sbb
outsl
add
pop
stos
das
arpl
ljmp
mov
xchg
rcll
jns
sarb
jge
and
adc
mov
pop
jecxz
fsub
push
pop
xor
scas
icebp
clc
stos
je
leave
inc
out
push
lods
cmp
cli
and
test
lret
mov
mul
cmp
push
cli
mov
fs
int
cmp
ficompl
xor
xchg
mov
cwtl
shr
jns
fs
mov
xor
movsb
test
dec
and
pop
loope
mov
xchg
jp
mov
lods
sbb
push
das
xchg
ss
in
out
loope
jb
sub
push
std
rcrb
je
rol
loopne
js
or
or
cwtl
mov
add
inc
sub
mov
push
push
in
lock
pop
imul
push
and
or
or
fcmovb
or
sub
ret
enter
ficoml
out
mov
xchg
or
imul
test
and
adc
imul
or
mov
pop
jmp
repz
addr16
rep
cmp
mov
pushf
mov
rcll
pop
outsb
mov
sbb
shl
sub
cmp
outsb
mov
xchg
cld
call
or
out
cmpsb
test
test
push
push
bound
jge
out
push
sbbl
mov
fadds
and
rolb
mov
popl
and
jg
adc
aam
data16
sub
lock
imul
jmp
inc
test
test
mov
js
mov
ljmp
imul
fistpll
test
push
mov
mov
mov
xchg
mov
pop
xchg
adc
stos
stos
adc
outsb
mov
repnz
pop
iret
std
loop
enter
pmuludq
xor
arpl
mov
shll
stos
iret
sbb
and
cli
and
insb
pusha
mov
cmp
fimull
out
push
jge
movsb
fisttpl
jle
or
mov
dec
sahf
popa
ja
out
jg
pushl
add
fwait
data16
add
inc
mov
std
dec
shll
outsb
inc
inc
jo
les
ja
pop
mov
out
fcmovu
nop
dec
outsb
inc
call
in
mov
imul
lds
scas
adc
jp
or
insb
xchg
jecxz
push
movsb
orb
mov
lea
and
nop
cmp
fcompl
mov
cwtl
jbe
push
and
ds
fildl
arpl
fsubr
rcr
dec
or
mov
dec
add
out
push
out
sti
out
dec
pop
test
jnp
and
popf
add
mov
dec
daa
and
jg
adc
mov
jmp
push
xchg
in
dec
leave
inc
cli
mov
clc
sub
mov
and
int
out
inc
in
popa
mov
outsl
lret
fwait
mov
xor
mov
and
or
fdivrl
add
cmpb
repz
push
inc
fimull
jnp
and
loope
stc
hlt
js
sbb
push
and
inc
inc
or
sbb
and
ds
ss
cmpb
adc
mov
mov
loope
mov
stos
dec
mov
inc
jg
dec
dec
push
or
mov
inc
ja
pop
add
mov
insb
mov
jae
dec
mov
pop
xchg
sub
jmp
insb
pop
jp
ljmp
dec
adc
pop
into
dec
fs
xchg
mov
movsb
lahf
jg
dec
sub
scas
imul
jbe
cltd
lods
mov
lods
jge
arpl
push
inc
jmp
sub
adc
popa
notl
pop
inc
push
push
imul
dec
adc
popa
das
int3
loop
adc
das
outsb
mov
sbb
addr16
xchg
xchg
cli
pop
add
jo
push
sbbl
sti
cmp
jg,pn
nop
rol
enter
dec
and
mov
insl
or
aad
lods
sub
fisubl
jecxz
lds
ljmp
xchg
fisubrl
jge
enter
mov
jl
pop
movsl
sbb
in
pushf
xchg
push
shll
mov
mov
lret
popf
gs
mov
cld
dec
mov
lret
call
and
add
dec
dec
mov
test
ret
lea
add
mov
adc
cmpsb
lods
push
jle
std
adc
push
mov
rol
out
mov
add
sbb
sbb
xlat
call
inc
mov
out
add
dec
out
popf
cs
jb
jp
sub
dec
fwait
mov
into
dec
jb
test
push
cmp
sbb
ds
dec
dec
dec
add
pop
pop
je
clc
push
xchg
lret
push
adc
neg
jecxz
xchg
sub
push
mov
dec
mov
jp
loope
mov
dec
xor
push
xchg
pop
ljmp
push
ret
mov
push
add
int3
jp
cmc
lock
out
push
mov
jo
mov
scas
and
cmp
shll
push
mov
stos
clc
push
jge
mov
arpl
jle
in
or
jo
cmc
and
pop
pop
es
movsb
push
mov
mov
mov
cwtl
fcmovnu
int
lcall
fs
adc
jns
or
lcall
and
sub
insb
in
xlat
jns
mov
jg
adcb
push
and
test
jecxz
cmpsb
add
push
pop
sahf
push
andl
jns
lcall
pop
xchg
sub
ds
mov
mov
out
iret
adc
fsubr
lock
nop
or
lret
jo
xor
pop
imul
mov
gs
rolb
outsb
loope
cmp
xchg
lcall
icebp
adc
inc
pusha
pop
cmp
jo
add
pop
xchg
and
pop
loop
mov
loopne
or
stc
push
pop
sub
inc
lea
decb
push
icebp
fwait
mov
cmpsl
scas
stos
fs
hlt
dec
mov
stos
cmpsl
cmp
enter
adc
lods
sbb
sbb
movsl
jle
and
or
fldenv
aaa
jbe
add
jne
jmp
jle
das
jmp
mov
aam
pop
das
mov
xchg
adc
jnp
mov
xor
add
ret
mov
inc
jns
mov
jb
out
and
aad
adc
push
loopne
dec
fcomip
daa
pushf
clc
out
enter
inc
imul
mov
out
dec
jle
shlb
in
sahf
loop
insb
ljmp
pop
ficoms
mov
cmp
xor
and
dec
jb
add
fdivrl
lea
mov
add
clc
fwait
pop
stc
ja
lds
mov
fistps
outsb
xchg
gs
push
inc
roll
adc
out
fwait
push
add
mov
jae
gs
mov
sbb
sbb
inc
ja
in
push
fnstcw
push
lods
and
in
push
add
shrl
out
and
inc
pop
and
das
in
sbbl
push
push
sahf
sub
jecxz
push
lock
xor
add
loopne
mov
imul
enter
dec
cmpsl
mov
cs
add
popl
subl
inc
push
cmp
iret
push
lea
cmp
fidivrs
or
int
cmp
imul
popf
adcl
lock
sub
repnz
leave
es
jae
lret
mov
jo
sbb
sub
es
push
ja
mov
shll
adc
imul
xor
add
ss
mov
adc
ds
aam
cmp
mov
or
inc
jge
pushf
addl
fs
hlt
dec
das
dec
cmp
dec
add
xchg
mov
enter
popf
outsl
jnp
lods
xor
add
xchg
dec
jmp
xor
dec
ljmp
or
inc
push
in
fstl
daa
and
sbb
popa
inc
inc
dec
ljmp
enter
dec
fidivrl
outsl
adc
sbb
addl
cmp
xor
jg
mov
adc
lods
dec
out
ret
fstpt
in
mov
dec
sub
hlt
test
jnp
adcl
dec
outsl
in
push
cmp
sahf
aaa
push
repz
lret
in
push
cmp
lea
pop
or
add
clc
xchg
out
xor
les
dec
inc
push
jne
push
nop
or
repnz
jl
sub
out
dec
jbe
mov
push
repnz
out
fucom
jb
pop
cli
sub
mov
fs
jle
push
inc
sahf
sbb
adc
adc
jne
and
repnz
sbb
push
sbb
push
dec
shrb
jo
sub
les
or
loopne
lcall
or
in
in
dec
push
pushf
lea
and
jbe
sub
inc
pop
sub
adc
ret
adc
cmp
cmpsb
mov
sbb
pop
imul
lods
jne
mov
es
aas
adc
cmpsb
lea
cs
xorb
pushf
imul
ds
inc
lret
mov
insl
int3
adc
stos
pusha
push
les
bsr
test
xchg
cmp
adc
mov
js
add
push
nopl
stos
js
test
mov
jns
stc
dec
mov
repnz
jmp
int3
outsl
dec
mov
movsl
push
pushl
aaa
daa
test
inc
pop
xor
fistpl
adc
sahf
pop
mov
cmp
arpl
pmaddwd
mul
cmp
pushf
gs
push
scas
inc
mov
int
in
cmp
push
dec
lea
aam
mov
adc
sbb
cmp
xor
or
cmpsb
jle
xchg
xchg
jp
js
add
aam
mov
movsb
repnz
ret
mov
mov
or
in
lods
and
add
sbb
inc
push
test
dec
push
xchg
std
out
fadd
sub
insb
sarl
js
enter
xor
call
aaa
or
pop
movsb
sub
mov
sbb
xor
les
xchg
add
xchg
popf
cmp
dec
iret
push
dec
enter
jb
int
xor
xchg
push
add
scas
popa
sti
jmp
mov
nop
cld
or
mov
dec
js
in
cmc
ret
push
add
out
adc
push
sub
pop
mov
push
push
add
xor
lods
jp
xchg
and
mov
or
cmp
xchg
shlb
mov
jo
inc
mov
in
lods
into
pop
jmp
out
push
adc
mov
fwait
pop
clc
adc
repz
mov
pop
orl
jne
sub
or
pop
nop
ja
mov
xchg
inc
push
push
xchg
xor
fistl
call
jbe
shrl
inc
popf
push
lahf
hlt
aad
outsl
mov
out
stos
lock
ficomps
cmp
mov
cltd
mov
dec
sti
in
push
jns
repnz
jbe
pop
xchg
xor
enter
out
in
mov
sub
mov
pop
call
xchg
xchg
inc
shlb
int3
dec
fisubl
xorl
nop
mov
xchg
inc
addl
sub
pop
pop
jnp
or
scas
cmp
cmp
xlat
call
repz
sub
sbb
sbb
test
pop
xchg
add
mov
icebp
aas
pop
int
leave
fisubs
sahf
js
ret
outsl
mov
xor
gs
stc
adc
dec
push
int
inc
pusha
repz
stc
mov
push
lods
cmp
jns
xchg
sahf
mov
dec
add
mov
push
data16
lods
loopne
ljmp
jl
lea
popa
fidivl
and
outsb
cmp
sbb
mov
incl
int
sub
dec
test
inc
out
lret
loopne
add
push
mov
icebp
divb
push
xor
dec
pushl
addr16
jmp
outsl
adcl
icebp
pcmpeqb
fcompl
pop
data16
inc
sub
cmc
cli
dec
sbb
sbb
xor
dec
in
cwtl
push
adc
rorb
pop
lods
mov
mov
repnz
pop
xchg
and
add
xor
pop
add
adc
in
push
lods
es
lahf
inc
or
imul
ficomps
in
mov
xchg
cltd
aas
lret
sbb
leave
stos
mov
or
bnd
test
sub
das
jmp
btc
push
out
scas
aas
jp
push
shll
mov
test
xchg
cld
jl
pop
ds
pop
jle
and
scas
rolb
loopne
idivl
pop
mov
push
loope
lods
mov
sbb
or
inc
cmpsl
lahf
insb
mov
sub
pop
es
mov
scas
pusha
sbb
mov
popf
xor
pop
xor
push
cmc
dec
xor
arpl
and
loope
push
mov
mov
outsb
mov
xor
mov
jb
push
lret
mov
inc
leave
sahf
clc
out
test
cs
xorl
sub
pop
mov
push
push
int
loope
int
jae
iret
stc
ds
mov
dec
rorl
inc
rorb
loope
out
cmp
aam
xchg
jmp
js
leave
dec
inc
ficompl
inc
adc
dec
cmc
xor
pop
or
adc
shlb
push
rcr
pop
jge
dec
mov
cld
cltd
mov
xchg
js
mov
jg
dec
mov
clc
pop
or
mov
cld
inc
out
mov
std
nop
cmc
out
dec
lods
aad
pop
mov
adc
jp
pop
test
xor
inc
notl
inc
mov
pop
or
out
jo
mov
adc
mov
mov
xchg
push
pop
loop
leave
fwait
pop
pop
test
jl
arpl
mov
adc
bound
pop
jo
sbb
push
or
mov
mov
push
aas
shl
frstor
jecxz
jg
mov
inc
stos
das
pop
ficompl
stos
stos
lret
gs
sub
cmp
lods
xchg
push
aam
lds
icebp
mov
rol
inc
ja
mov
cltd
lcall
pop
xor
cwtl
scas
lds
dec
test
push
mov
pop
imull
pop
sarb
lret
cmc
lods
cld
sub
mov
test
adc
inc
inc
jns
inc
loopne
rorl
ficoml
lods
and
ljmp
mov
cmp
fwait
cwtl
fldt
mov
jl
leave
mov
test
pop
mov
or
aas
push
aad
push
jne
dec
scas
pop
ljmp
adcl
stos
sbb
sub
and
test
pop
mov
iret
popa
rclb
mov
ret
mov
fcompl
inc
mov
out
pop
jo
mov
or
inc
adc
testb
dec
inc
sbb
xorb
inc
pop
dec
mov
shrb
ja
dec
xor
mov
or
mov
test
hlt
imul
mov
cmpsb
test
push
lods
lds
outsb
nop
cmc
cs
cmp
jle
negb
out
adcb
pushf
sbb
ds
sub
or
in
iret
or
std
sbb
pop
xor
pop
adcb
imul
dec
aam
mov
and
adcl
imul
and
push
lret
dec
pop
push
sbb
push
rol
notl
test
push
mov
inc
faddp
test
inc
mov
adc
cmp
push
inc
sahf
inc
dec
leave
frstpm(287
popf
js
lods
movsl
dec
mov
test
jb
adc
jle
mov
add
dec
mov
pop
inc
mov
scas
xor
negb
pop
push
cmc
sbb
jb
cmp
pop
movsb
test
bnd
mov
les
adc
or
fwait
je
lahf
imul
sahf
pop
jne
int3
inc
lcall
test
dec
adc
test
addr16
adc
adc
push
aam
cmp
jae
xor
sbb
repz
imulb
sub
push
sbb
insl
push
ljmp
sub
adc
outsb
or
jo
mov
test
inc
into
out
dec
xchg
xor
pusha
inc
cld
pop
inc
imul
xchg
push
or
ret
add
shlb
dec
push
fists
movsb
mov
insl
rolb
or
add
clc
or
xchg
and
sub
add
jae
pop
jbe
mov
inc
lret
add
daa
xchg
cmp
dec
add
inc
test
out
mov
loope
scas
xchg
data16
adc
add
lahf
and
push
pop
add
daa
mov
int
push
int3
es
cmp
arpl
inc
nop
aas
mov
cmpsl
outsb
sbb
add
sbb
add
test
imul
out
xor
mov
cwtl
insb
cmp
shrl
std
ret
jo
adc
int
in
cwtl
inc
jbe
sub
mov
scas
sahf
fucom
inc
and
or
push
inc
in
xor
lock
imul
mov
xor
imul
inc
adc
and
stos
mull
inc
xor
push
and
adc
fsubl
adc
in
mov
outsb
add
xchg
and
mov
xchg
lods
popa
adc
xchg
dec
cmp
pusha
xchg
jmp
mov
stos
notl
cmp
push
sarl
mov
or
and
mov
std
pop
loopne
test
iret
ret
aas
mov
jno
pop
add
pop
xor
arpl
dec
and
shr
xchg
fld
lret
push
fmuls
mov
adc
sub
xchg
pushf
add
pop
adc
scas
imul
cmc
jmp
inc
jp
imul
ret
cmc
sbb
jl
outsb
jbe
mov
imul
xor
cmp
cmp
negl
push
push
test
dec
insb
cld
xchg
fdivs
into
add
sbb
push
notb
maskmovq
lds
cmp
jg
enter
hlt
imul
out
mov
test
xchg
ja
sub
les
addr16
nop
rclw
sahf
repnz
lret
dec
in
pushf
fwait
sbb
scas
and
test
daa
sbb
mov
ror
int
outsl
or
lds
shll
sub
imul
xchg
les
push
lret
dec
push
pop
mov
adc
clc
and
daa
add
mov
lock
test
add
inc
rcrb
and
push
jecxz
push
ss
test
xlat
inc
icebp
mov
clc
in
cld
add
int
loope
repz
and
xchg
pop
adc
pop
add
icebp
aaa
mov
ret
mov
clc
pusha
or
adc
push
filds
mov
test
cmc
pop
or
add
iret
mov
or
inc
sbb
lcall
cmp
cmpb
lods
lock
js
sbb
jbe
add
pop
cmp
jbe
rclb
inc
ljmp
cmp
shl
fwait
dec
clc
rolb
imull
arpl
mov
add
inc
ljmp
pop
pop
lret
cmc
xchg
repz
cmpl
inc
in
jecxz
cmp
mov
imull
test
int
daa
pop
sbbb
rcll
and
movl
add
cwtl
push
in
loope
jmp
xchg
or
mov
inc
push
push
out
les
cmp
mov
insb
push
shll
and
push
xor
ror
aam
lea
pushf
loopne
xor
sbb
shll
inc
ds
enter
stos
shr
loope
sub
push
std
int
xchg
pop
fists
aas
sbb
and
or
cmp
mov
adcl
or
xorl
loope
xlat
and
aaa
and
mov
add
pop
mov
sub
push
test
fadds
std
mov
rcl
aam
daa
test
cmpsl
fwait
loopne
icebp
sub
popa
fisubs
rcrl
mov
jne
into
xor
mov
mov
test
lods
js
inc
mov
mov
sarl
neg
and
loope
add
std
daa
push
rcrl
lods
movsb
lock
shll
inc
sbb
cmp
adc
jge
test
into
outsl
push
mov
jnp
xor
push
pop
ss
out
andl
mov
repz
dec
add
daa
jbe
fimuls
or
mov
push
mov
popa
fisubl
mov
pop
dec
hlt
mov
fwait
mov
js
jo
xor
je
je
xor
inc
ret
pop
orb
lods
fstpt
add
or
mov
ljmp
fnstcw
add
fwait
and
scas
sbb
popa
cmp
out
mov
lock
test
pop
rcrl
inc
jb
lret
sti
movsl
sbb
out
and
mov
movsl
mov
fiadds
addl
daa
pop
clc
lret
repnz
outsl
insb
sub
dec
mov
test
enter
dec
add
stos
jo
sahf
xchg
shrl
inc
mov
push
jne
movsl
xchg
mov
sbb
shl
cwtl
pop
xor
jl
mov
fsubrp
leave
out
testb
negb
push
xchg
push
ljmp
stc
add
movsb
mov
fimuls
movb
popf
mov
inc
popa
dec
in
icebp
scas
dec
fcoml
shr
inc
mov
adc
in
arpl
orb
dec
scas
xchg
inc
sahf
dec
mov
mov
stc
mov
xchg
add
xlat
sbb
loope
jo
jnp
dec
sub
mov
or
in
in
push
cmpsl
lock
call
push
repz
jnp
inc
popa
jb
ljmp
mov
out
fnstcw
int
jge
dec
xlat
stos
pop
dec
mov
cmp
or
push
rcrb
dec
adc
fbstp
out
xchg
or
or
push
test
cli
sbb
jecxz
outsb
out
xor
gs
pop
cmp
sbb
in
adc
cmpsl
ror
lea
pop
pop
jle
imul
test
or
mov
lahf
adc
add
vpandn
add
insl
or
cmpsl
pop
gs
outsb
ds
lock
imul
out
push
jle
push
aam
fimuls
stc
leave
adc
stc
cmp
dec
and
notl
in
repz
jg
repz
jmp
and
add
jmp
inc
scas
insb
and
in
hlt
inc
cmp
fwait
mov
popl
lds
xchg
and
mov
push
push
jge
js
lods
xchg
pop
daa
mov
movsl
ds
jp
iret
or
push
aad
das
outsb
mov
jmp
in
mov
xchg
cli
lea
mov
push
ret
out
int3
push
imul
xor
adc
lds
dec
jo
addl
mov
cs
dec
out
jecxz
sbb
out
enter
test
mov
sbb
lret
jb
das
xor
dec
imul
cmp
fists
push
inc
sub
adc
push
xchg
sub
into
in
inc
add
fisubrl
je
icebp
mov
and
stos
xor
adc
inc
nop
addl
and
sub
movd
jae
sbb
sub
jg
jo
pop
scas
aas
pushl
jmp
fldt
sbb
pop
movsl
xchg
cmp
and
jmp
out
mov
mov
push
cwtl
lcall
mov
daa
mov
push
lock
jmp
das
mov
out
pop
pop
test
jno
jno
data16
ds
enter
mov
loop
popf
sbb
incl
js
pop
dec
mov
scas
into
xlat
daa
lods
ljmp
popl
out
subb
out
int3
push
pop
mulb
inc
cs
or
jg
xor
adc
inc
das
pushf
ja
bound
aam
andl
mov
int3
xchg
dec
jns
xor
xchg
lods
rcrl
inc
popa
add
fnstenv
inc
jne
xchg
inc
out
dec
push
sti
shlb
int
daa
jp
dec
sub
push
dec
dec
inc
mov
xlat
sbb
ja
or
push
inc
add
popa
mov
jecxz
mov
in
cmp
mov
sbb
fisttpll
imul
mov
and
movsb
das
inc
cmpsb
sar
and
xor
loopne
dec
sarb
adc
xchg
lods
jno
loopne
or
fimull
adc
movsb
call
mov
lock
jno
adc
fldcw
fldcw
xchg
shrb
fmull
and
push
push
jge
ds
sbb
sbb
xor
fcoml
dec
sbb
push
out
cltd
or
inc
sbb
sbb
stos
je
push
loope
mov
andb
imul
jmp
fstp
mov
push
scas
and
js
jmp
loopne
insl
rol
dec
mov
ret
sbb
ja
mov
les
aaa
adc
add
cmp
adc
cmp
jnp
jbe
mul
ret
shld
pusha
rcll
loop
jo
dec
shl
data16
cld
sub
xor
pushf
sub
lret
push
addr16
sbb
cmp
mov
in
mov
loopne
popa
in
mov
loop
push
in
sub
mov
jle
loope
lcall
pop
push
mov
jl
inc
mov
movsl
in
adc
pop
in
sbb
xchg
cmp
in
mov
rol
or
push
sbb
pop
adc
or
jp
mov
xlat
mov
mov
rclb
xor
insl
addl
mov
push
and
ret
jmp
adc
pop
xor
sbb
dec
les
cmp
es
mov
icebp
ds
scas
mov
neg
js
mov
mov
mov
insl
insl
sbb
adc
sbb
mov
mov
aaa
mov
in
je
push
popa
ret
js
push
push
movsl
lret
sub
loop
cmp
cmp
popa
mov
sub
orl
into
dec
icebp
flds
sti
or
fldl
push
xor
add
loope
dec
mov
jb
sahf
add
stos
push
jle
jo
aas
loope
jb
outsb
mov
pop
out
jmp
call
sbb
mov
and
cmp
cmp
mov
pop
xchg
pop
inc
jmp
out
addr16
pop
sub
fbstp
aad
and
mov
sbb
inc
sub
mull
and
add
in
and
xlat
dec
outsb
adc
cltd
push
mov
push
loop
pop
mov
rcrl
imul
dec
add
mov
gs
aaa
pop
mov
xorl
bound
stc
pop
jmp
cwtl
add
mov
jb
std
xor
int3
insb
enter
xorl
xchg
sub
into
sub
mov
dec
jmp
imul
cltd
sbb
ljmp
jge
out
xchg
push
rcrl
cmpsl
inc
adc
dec
pusha
xchg
test
push
mov
sbbl
clc
int
mov
out
sbb
add
xchg
scas
adc
xor
dec
sahf
shll
mov
lods
ret
arpl
dec
arpl
pop
inc
dec
mov
jle
mov
push
dec
comiss
fisttpl
mov
mov
push
or
outsb
hlt
das
fwait
cld
inc
fiaddl
cmp
ret
jno
rorb
aas
bswap
incb
jbe
js
and
cmpsb
loop
and
ljmp
mov
popa
dec
pop
mov
repz
cmp
mov
lock
scas
cld
add
xchg
sub
aaa
mov
push
repnz
cmc
stos
rorl
arpl
mov
js
xchg
cmp
scas
mov
test
adc
sub
push
sub
std
xchg
fbld
push
adc
testl
cmp
inc
incb
aaa
scas
popf
fdivs
fbld
out
adc
xchg
or
les
jle
or
mov
pop
and
mov
cli
and
stc
sbb
test
lcall
mov
into
dec
sub
push
push
mov
adc
fsubrl
or
jbe
dec
adc
in
and
call
je
loopne
jmp
aas
popaw
push
inc
testb
jnp
inc
mov
lods
hlt
jp
push
fistpl
subl
push
pop
xchg
or
data16
sub
hlt
inc
int
aam
int
add
idivl
inc
pop
cmpsl
outsl
aaa
imul
notl
ljmp
jg
and
add
idivb
aam
mov
cs
xor
test
scas
xchg
inc
and
pusha
out
sub
movsl
cltd
push
xor
mov
loop
add
movsl
push
jl
jae
push
movsl
jb
loope
xor
cmp
stc
jae
subl
es
cmp
adc
add
sbb
jne
arpl
call
stos
insl
mov
fsubr
pop
mov
xbegin
jge
iret
es
sti
out
lret
pop
adc
ror
add
mov
dec
add
add
mov
push
movsb
cmp
inc
sbb
rorl
fs
int3
sub
mov
loop
pop
mov
cmp
fwait
leave
adc
push
jp
jl
ss
lret
adc
or
scas
cwtl
push
out
pop
imul
jmp
dec
xchg
shlb
in
or
jg
scas
xchg
in
adc
test
jne
inc
ret
mov
sub
and
pop
test
fmull
imul
mov
fwait
fwait
mov
and
mov
sarb
mov
cmp
mov
xor
jg
outsl
xor
jle
mov
jae
xchg
jne,pt
pop
gs
icebp
cmp
add
push
mov
or
mov
jae
into
lds
push
dec
das
nop
xchg
lds
xchg
pop
out
fisttps
sarl
mov
es
pop
rolb
shll
sub
fstl
jp
sbb
sub
jns
dec
push
mov
rorb
andb
stc
sbb
pop
leave
pop
jecxz
xchg
inc
cmp
int3
xor
sbb
inc
lods
dec
stos
xchg
pop
cmp
das
jne
sub
nop
not
mov
repz
loop
mov
das
es
mov
adc
out
mov
inc
loopne
es
inc
call
mov
jno
lret
push
lret
cltd
or
pusha
ljmp
lcall
orb
test
rcrl
test
mov
ret
mov
or
inc
push
xor
cmp
xor
cmp
out
xchg
pop
xor
xor
popf
jb
imul
lcall
outsb
cmp
sbbb
mov
out
rcrb
inc
sub
inc
faddp
or
dec
xor
sti
mov
in
lods
push
jb
das
mov
stos
sbbl
or
mov
adc
adc
in
inc
xchg
sub
add
test
test
jecxz
lods
add
or
icebp
dec
fdivrs
jl
push
jnp
xor
scas
repz
xlat
ret
into
mov
xchg
xor
jno
int
arpl
sub
stos
mov
pop
add
mov
adc
aas
cwtl
cmp
mov
sbb
jg
adcb
pop
cltd
jae
mov
pop
popa
adc
xchg
add
punpckhdq
pusha
shll
xor
jo
sub
mov
std
cld
mov
sbb
cld
cmc
xor
xchg
popa
ljmp
shll
stc
or
cmp
xchg
mov
sub
pop
subl
mov
push
gs
xlat
mov
mov
dec
or
or
int3
and
sub
insl
dec
dec
or
bound
xor
push
cmp
jmp
push
into
clc
cli
mov
mov
jg
or
xchg
xchg
lcall
push
xor
int
mov
cs
fstpl
sub
out
dec
push
scas
cmp
mov
jo
in
pop
sbb
push
lahf
mov
test
push
je
xor
mov
frstor
lock
stos
jae
dec
outsl
sarb
mov
xchg
lock
or
push
xlat
cmp
xchg
mul
std
cwtl
mov
sarb
cwtl
fisttpll
ret
imul
popf
adcb
adc
and
daa
es
loop
jp
fisubrl
sbb
add
aam
mov
fistl
in
lods
test
daa
sub
pop
cltd
push
cmpsb
pop
sub
fs
cwtl
cmp
lds
data16
and
mov
out
loop
rolb
notb
add
int
aad
insl
cmp
cmp
mov
mov
ss
dec
test
bound
stc
shll
mov
inc
sub
in
scas
push
and
cmp
in
jno
mov
lahf
orl
dec
inc
rcll
push
mov
jnp
xorb
ret
rorl
in
shl
out
arpl
and
jbe
lahf
je
cmp
add
inc
loopne
sarb
mov
popa
mov
inc
or
mov
and
outsl
pop
add
jnp
out
adc
cmpsl
scas
sub
push
and
cmp
mulb
push
xor
or
push
jb
and
subl
sbb
pop
sub
push
xlat
cmp
cmp
xor
add
data16
jno
or
sub
mov
cmp
mov
cmp
dec
pop
jle
in
int3
and
xchg
fstps
xchg
xchg
das
test
stos
pop
inc
mov
cmp
aaa
in
ds
or
add
pop
inc
or
xchg
call
jmp
jmp
mov
mov
jecxz
stos
cwtl
mov
sbb
pop
jo
push
push
inc
inc
and
ret
adc
adc
cmpsl
xor
popf
in
je
dec
jo
aad
stc
scas
mov
clc
aaa
dec
icebp
xchg
add
push
push
mov
pop
mov
ljmp
sti
jg
pop
popa
dec
cmp
aad
mov
aaa
subl
jo
dec
sbb
popf
scas
jns
movl
shrb
cmp
inc
mov
push
add
addr16
adc
mov
push
add
inc
inc
mov
inc
cld
mov
adc
orb
push
neg
dec
into
in
xor
lahf
jae
lcall
incl
test
cmp
add
lods
sarl
mov
outsl
cmpsb
dec
dec
std
jns
and
mov
adc
pop
testb
adc
stos
andb
inc
test
lds
cmp
cmp
adc
or
out
ds
jp
sub
imul
xchg
adc
mov
dec
push
inc
frstor
insl
scas
and
mov
push
sub
push
dec
in
rcl
sub
fwait
stos
fiadds
shl
adc
add
in
pushf
xchg
mov
add
insl
pop
push
jmp
adc
inc
fwait
loop
rorl
mov
push
fwait
popa
push
fs
cli
js
jae
mov
mov
out
inc
imul
rcrb
aaa
mov
lahf
mov
cli
mov
repz
icebp
negl
xchg
enter
fs
jmp
outsl
inc
stc
fwait
outsl
outsl
add
aaa
mov
mov
sbb
dec
adc
stos
push
stos
sub
hlt
sbb
rcr
repnz
push
or
push
das
or
xor
mov
loopne
test
push
mov
xchg
pop
in
test
cmpsl
lret
insb
mov
xchg
cmp
clc
or
es
mov
push
flds
subl
lds
cmp
cmp
movsb
mov
inc
fsts
lret
lds
enter
add
dec
fstl
fistpl
insl
aad
bound
dec
inc
inc
in
clc
lret
xor
cs
jl
xor
push
sbb
jb
mov
inc
aad
add
enter
sbb
cli
scas
sub
and
scas
das
jp
cmp
cmovbe
into
test
mov
das
pop
test
jle
sti
mov
pop
leave
sbb
jp
sbb
xor
xor
test
mov
push
xchg
lret
in
jmp
or
mov
mov
mov
in
rcll
testl
pop
stos
push
fistpl
iret
imul
es
push
imul
loop
mov
es
movsb
std
jecxz
andl
xchg
push
lds
cmp
das
push
insl
cmpsl
mov
cld
jp
fistpll
cmp
mov
jne
cmp
mov
dec
xlat
add
mov
cmp
clc
or
mov
arpl
jmp
stos
mov
add
shrb
aad
xchg
fdiv
and
orl
pop
cmpsl
add
push
out
cmp
mov
add
add
mov
in
and
cltd
imul
roll
add
into
lock
outsl
dec
rcrb
inc
adc
dec
pop
sbb
xchg
lea
lret
frstor
ret
jmp
call
andl
mov
leave
sub
data16
aas
arpl
pop
test
mov
mulb
into
sbb
data16
data16
sub
mov
scas
jl
push
jb
xchg
aaa
xchg
aad
adc
test
inc
loop
xchg
xchg
sbb
movsl
xchg
mov
ja
bound
jns
lea
and
push
jnp
jns
lock
icebp
pushf
and
int3
int3
sbb
adc
inc
hlt
idiv
cmp
outsl
jnp
mov
test
insb
pushf
aaa
sbb
mov
cmp
lds
aas
and
les
in
fstpt
mov
mov
out
push
add
inc
push
lock
clc
dec
dec
cmpl
sbb
mov
sbb
lea
stos
cmp
mov
xchg
jb
jge
mov
mov
in
inc
loopne
mov
and
sbb
mov
jo
bound
outsb
sub
aaa
jnp
xchg
adc
jecxz
and
push
xchg
and
loopne
dec
into
pusha
stc
ret
inc
js
test
push
xchg
cmpsb
mov
cmpsl
mov
add
mov
pop
ds
and
dec
je
sub
arpl
adc
insl
xchg
and
inc
xchg
loope
fdivs
or
xor
test
loope
dec
data16
sub
shll
adc
inc
pop
or
xchg
mov
jl
pop
fmull
gs
adc
lods
inc
jecxz
lods
xor
pop
jmp
lahf
jl
mov
sub
xor
es
and
inc
mov
xor
ret
loopne
dec
inc
fldl
shr
inc
dec
lret
out
lods
mov
or
or
or
dec
sub
adcb
push
movsb
push
in
fimuls
jns
call
sbb
outsb
out
push
sbb
test
sub
mov
aaa
decb
ds
sbb
out
or
imul
jge
lods
jo
fwait
loopne
mov
cmp
lcall
mov
jg
mov
test
fidivrl
adc
lar
cli
push
push
gs
adc
mov
pop
decl
lods
push
into
push
ljmp
nop
xchg
xchg
fiaddl
out
mov
pushf
sti
outsb
sbb
fwait
add
rcll
ja
out
js
mov
sbb
pusha
js
and
popa
dec
pop
pushf
adc
sub
pop
sbb
lds
rcrw
xchg
ficomps
lret
jmp
ss
dec
outsl
and
cs
xor
add
mov
lea
dec
mov
lret
push
rorb
lcall
rcrb
xchg
loop
adc
xchg
mov
mov
arpl
jnp
cld
dec
scas
fidivl
daa
cli
xchg
icebp
sbb
pop
movsb
clc
fsubrp
cmp
clc
add
test
mov
inc
sbb
in
aas
clc
daa
jne
insb
sti
pop
mulb
jb
fabs
mov
push
jnp
pop
dec
sbb
fldt
adc
dec
pusha
inc
int
mov
push
mov
xorb
insl
ss
inc
repz
lcall
addb
aaa
fdivrs
and
inc
in
xor
dec
mov
and
andl
mov
stos
mov
jo
popf
jo
mov
mov
out
cli
mov
hlt
xchg
dec
xchg
and
mov
and
inc
xor
adc
sub
mov
jecxz
push
xor
push
mov
lret
fisttpl
pop
testl
fistl
test
mov
push
xlat
in
pop
push
push
mov
jne
jo
enter
fcmovnb
icebp
dec
sbb
sbb
loop
lods
fstl
pop
and
jae
and
push
push
jb
daa
and
cmp
xchg
dec
pop
sbb
popa
or
test
leave
daa
fbld
fwait
and
lret
daa
cs
les
xchg
mov
cld
insb
push
and
ret
sahf
insl
scas
mov
rorl
mov
or
mov
test
and
icebp
sbb
fistps
mov
fsts
sti
push
mov
shr
cmpb
dec
mov
aam
mov
cli
pushf
fiaddl
adc
cs
scas
or
les
and
sbb
pop
sub
push
push
mov
bound
cmpl
test
stos
in
jno
bnd
incl
aad
mov
loope
in
sub
ret
pushf
loope
outsl
jp
or
push
es
movsb
lods
mov
in
lahf
imul
fwait
outsb
add
sbb
pop
ret
shll
adc
push
out
lahf
shlb
jp
xchg
sbb
enter
in
cmpsl
cltd
push
jmp
dec
add
and
cmpsl
mov
xchg
repz
ret
cld
aaa
decl
shrb
pusha
repnz
add
es
cmp
outsb
xchg
stos
sahf
inc
pop
and
and
in
shlb
cltd
pop
test
xlat
xor
xor
inc
enter
and
mov
pushf
cmc
lods
push
test
cs
sub
scas
jge
and
adc
mov
or
repz
sarl
and
mov
aam
pop
mov
pop
int3
adc
mov
cmp
stos
push
cmp
xchg
call
sbb
sub
add
cmpsl
lret
xchg
scas
mov
mov
lds
or
and
aam
test
mov
mov
out
push
dec
and
int3
aas
pop
fwait
dec
addr16
cmp
pushf
cmc
sub
cmpsl
call
es
push
sahf
push
inc
adc
lcall
xchg
stos
jnp
xchg
incl
imul
dec
mov
stc
scas
test
mov
pop
fwait
adc
push
jg
pop
and
sbb
inc
das
push
pop
mov
cmp
sti
xor
insb
mov
jnp
fs
movsl
into
sbb
mov
lcall
mov
cmp
pop
enter
mov
rcll
insl
fdivrl
sub
cwtl
and
cwtl
lret
insb
out
xor
stc
js
push
inc
mov
add
outsb
pop
sbb
pop
lock
inc
or
jmp
add
pop
jae
xchg
push
test
shlb
lcall
out
aaa
mov
sub
ljmp
adc
fadds
jb
iret
lods
bound
jle
adc
fisubrl
push
icebp
imul
mov
sub
push
bound
sti
aas
sbb
mov
mov
out
cmc
mov
lcall
outsl
xchg
add
rcll
arpl
push
shlb
in
int
sub
fisubrl
icebp
xchg
loope
pop
mov
mov
stc
xlat
nop
jge
pop
push
sub
ficoms
ljmp
adc
test
mov
cmp
ss
xor
fwait
popf
inc
cwtl
imul
xchg
fidivs
mov
lcall
add
inc
ret
dec
dec
dec
push
das
mov
neg
sbbl
ds
or
cmp
fsub
fs
jmp
xor
add
ret
mov
xor
addr16
stc
jb
fstl
xchg
movsl
gs
lret
js
enter
stc
pop
test
cmp
mov
adc
cmpsb
loope
gs
iret
or
iret
jmp
mov
mov
outsl
movsl
xchg
addr16
mov
les
lods
cmpsb
mov
int3
lcall
mov
ds
mov
add
dec
outsl
cmp
add
push
lcall
insl
xor
les
addr16
repnz
arpl
ds
cmp
pop
adcl
aam
pushf
mov
lea
mov
test
and
repnz
xchg
xor
inc
jbe
jecxz
lcall
xor
add
sub
xchg
clc
shlb
loope
dec
mov
xchg
xchg
sbb
cmp
xor
in
pop
lock
pop
scas
dec
adc
lahf
push
loopne
mov
icebp
and
xor
sub
out
sbb
mov
sub
out
add
lcall
in
jno,pn
je
add
data16
xor
fldcw
jp
cltd
cltd
test
icebp
xchg
pop
clc
or
lods
into
inc
rorb
movsb
js
push
pop
scas
pop
rclb
ja
dec
arpl
and
xor
push
ljmp
mov
mov
in
ds
shr
cmp
xchg
dec
std
cmp
pop
dec
std
mov
lock
cmpb
jmp
add
out
jp
jbe
fucomip
or
xchg
xlat
dec
out
pushf
fldt
xor
js
les
add
stos
movsl
dec
mov
rcll
in
jno
inc
or
jl
sub
mov
fistpll
idivl
adc
and
pop
cmp
cs
es
push
push
or
add
push
cmp
jns
les
pop
mov
sub
jl
dec
arpl
mov
sbb
dec
cmp
jle
mov
mov
stc
movl
adc
xchg
inc
idivb
in
sbb
jns
xchg
stos
ret
fst
sub
push
pop
sub
adc
pusha
subl
mov
cmpsb
fdivrl
insl
mov
adc
add
mov
xlat
adc
testb
in
pop
xchg
mov
pop
push
mov
out
push
and
push
in
mov
outsl
mov
push
call
jnp
push
cmp
xchg
add
out
cmp
shufps
mov
das
int
scas
dec
xchg
fistl
push
pop
loop
loope
push
arpl
pusha
cmc
mov
adc
jns
adc
mov
sub
dec
push
ja
aad
setnp
mov
jg
or
fwait
test
xchg
add
xchg
xlat
test
out
push
test
mov
scas
push
dec
xor
sub
or
mov
jns
in
mov
jbe
jo
dec
jge
rolb
pop
out
fsubrs
dec
mov
scas
fcmovne
lret
pop
or
bound
cmp
out
lahf
cmp
into
mov
mov
push
movsl
stc
xchg
inc
xchg
adc
mov
mov
les
dec
movsb
cld
mov
test
cmc
popa
rorb
movsb
test
sbb
ljmp
and
adc
dec
aaa
fisttps
and
repnz
out
fbstp
xchg
jmp
js
adc
sub
mov
stos
or
jb
pop
adcb
mov
icebp
pop
rcrb
xchg
loopne
outsl
idivb
rcll
jecxz
jl
imul
loop
fnstenv
sti
mov
push
es
mov
xor
xchg
out
jb
or
mov
cmc
xor
sbb
mov
jo
dec
or
xchg
lods
fstpl
pop
fidivrs
sbb
xor
mov
mov
lahf
dec
mov
jbe
in
cmp
pop
ret
loopne
mov
enter
flds
inc
pushf
and
mov
insb
outsb
and
out
pop
or
sub
pusha
aas
push
mov
ror
nop
jge,pt
push
fs
jecxz
in
sarb
sbb
jmp
mov
cli
test
fiadds
mov
push
addr16
push
mov
cmp
cmp
mov
add
mov
cmp
in
sti
das
pushf
dec
xor
pop
adc
nop
add
pop
xchg
xlat
pop
loopne
pushf
jmp
pop
cmp
out
movsl
jb
mov
lcall
insb
push
xchg
mov
ljmp
or
pop
push
ds
adc
add
sub
mov
push
xchg
imul
pop
add
ret
sbb
push
lds
inc
pop
xchg
test
or
inc
xchg
or
es
xchg
xchg
xor
aas
mov
dec
push
call
mov
pop
lods
jno
push
xor
adc
push
movups
adc
jne
imul
sbb
sub
in
sub
jo
add
xchg
je
int
inc
push
xchg
cmp
aad
adc
fucomp
fists
repnz
sarl
add
push
stc
pop
or
imul
jp
dec
xor
inc
cld
jle
pop
insb
mov
jmp
dec
cltd
sbb
testl
mov
movsb
call
sbb
fcoml
sub
lock
call
pop
jo
out
xor
dec
inc
inc
jo
add
stc
into
cmpsb
aaa
daa
or
repnz
pusha
jo
push
in
loopne
test
mov
jb
jle
push
addr16
in
into
cli
mov
fldt
mov
xor
adcb
add
in
stos
fdivl
pop
pop
pop
lds
es
js
and
sub
bound
xchg
stos
insl
imul
aaa
dec
jl
jle
mov
dec
sub
mov
pop
in
mov
int
xchg
xchg
mov
add
imul
je
fsubrl
mov
xchg
adc
cmp
mov
mov
test
lret
dec
xor
aas
mov
mov
push
int3
cwtl
pop
inc
pusha
xor
xchg
xchg
sti
stos
mov
hlt
nop
xlat
push
jmp
cmp
testb
stos
and
dec
repnz
andl
cmpsl
loop
aaa
push
lahf
sbb
and
cwtl
inc
jl
push
jo
insl
jo
mov
mov
and
and
pop
xchg
jg
mov
cld
add
and
sbb
cmp
mov
xor
je
cli
fistpll
pop
pop
fwait
push
jbe
mov
sbb
cli
shrl
out
mov
aam
fisttps
inc
lcall
adcl
lock
int
dec
pop
sarb
inc
pop
ja
mov
lret
daa
lea
mov
dec
mov
add
mov
push
xor
pmaxub
dec
cmp
xor
aam
call
cltd
jno
mov
sti
shll
andl
push
inc
scas
and
insl
sbb
pusha
or
dec
imull
pop
scas
mov
or
mov
pusha
and
jno
xchg
ljmp
stos
jo
idiv
loop
add
mov
adc
movsb
xor
mov
xorb
lret
xor
lahf
add
cmp
lret
test
adc
jnp
sbb
xchg
xor
adc
daa
jmp
adc
dec
mov
movsb
ja
mov
fs
push
cmpsl
push
out
stc
xor
cmp
imul
mov
lcall
mov
inc
lds
push
pop
adc
addb
mov
push
sbb
repz
jo
dec
or
mov
xchg
mov
shll
lret
mov
mov
in
mov
ja,pt
add
ss
subb
rcrl
inc
add
out
inc
sbb
rcll
mov
or
pop
js
add
icebp
aas
sub
lds
adc
xchg
mov
dec
cld
je
lcall
and
arpl
scas
dec
jg
popa
inc
mov
popf
xchg
dec
cmp
push
mov
xor
adc
cmp
push
xchg
out
jecxz
cmp
mov
push
mov
cmp
addr16
pop
push
sahf
insl
mov
adc
inc
rclb
data16
jecxz
push
dec
pushf
int3
das
or
pop
lds
mov
pop
mov
sub
movsb
pop
leave
jmp
jbe
ficoml
out
xchg
test
mov
das
scas
enter
xchg
loop
jne
xchg
xchg
add
ret
in
push
stos
repz
jae
push
mov
cmp
push
jp
mov
inc
pop
shll
xchg
mov
inc
ficomps
push
clc
jmp
movsb
mov
mov
arpl
clc
stos
rcrl
dec
cmp
int3
mov
test
std
and
in
aas
shll
popa
mov
or
sub
and
sub
ja
mov
popf
hlt
push
imul
or
cmpsl
lds
loop
adc
pop
gs
fwait
dec
push
sub
mov
mov
pop
pop
xor
pop
adc
cmp
push
into
shrl
in
sub
xlat
pushf
jge
aaa
in
xchg
rorb
xchg
gs
pop
shl
pop
into
call
jmp
imull
int
ljmp
mov
sub
leave
testl
cltd
fdivrs
mov
dec
sub
cmp
test
scas
rol
inc
sbb
test
xchg
or
lcall
inc
aaa
push
mov
cmpsl
jmp
sbb
fimull
bound
loope
mov
sub
inc
popa
push
out
out
ss
jmp
mov
cmc
pop
nop
sub
xchg
call
in
aam
adc
js
insl
ss
and
inc
jmp
adc
test
push
xor
in
imul
jl
movsl
adc
outsl
addr16
jecxz
lcall
jne
pop
divl
into
nop
ret
fwait
cld
andl
lea
pop
hlt
lods
inc
jo
sub
mov
subl
mov
cmp
add
jno
xor
mov
fisubrl
xor
repz
dec
xchg
lcall
stos
sub
mov
or
pop
xor
dec
mov
mov
adc
jae
and
loope
xchg
jno
dec
xchg
mov
pop
loop
mov
inc
enter
dec
pop
lret
scas
fidivs
test
test
jae
andl
xor
jb
jp
inc
lret
jmp
mov
jl
loop
cmp
popa
add
inc
jge
mov
jne
push
add
rcr
jg
pushf
iret
mov
inc
jmp
lock
xchg
inc
sub
lcall
lods
push
xor
inc
sbb
pushl
into
arpl
sub
fdiv
pop
repz
gs
jp
inc
movsb
or
scas
push
push
aas
add
sbb
iret
mov
adc
push
sub
lea
sbb
lods
subb
xor
ret
adc
in
pusha
loop
mov
jne
insb
jle
gs
gs
mov
cmp
pop
and
adcb
adc
arpl
mov
scas
aam
mov
jle
jge
pop
inc
jne
mov
sbb
imul
xchg
mov
pop
xor
jmp
fimuls
pusha
outsl
stos
ret
sahf
dec
shll
sbb
inc
and
push
cmc
mov
insl
into
insl
xchg
pop
mov
insb
fs
xor
dec
fimull
jle
jecxz
inc
les
lods
js
xchg
fs
shlb
clc
mov
mov
xor
or
jbe
or
jno
outsb
push
mov
cmp
push
push
or
sti
and
popa
pop
mov
inc
lcall
aam
mov
aad
adc
lret
jmp
sti
xchg
mov
lret
fcmovnbe
dec
pop
mov
mov
xor
ficoms
push
imul
xchg
into
popf
leave
pop
pop
ljmp
outsb
rcl
sti
cmp
jb
xorb
fnstsw
imul
inc
add
imul
dec
outsl
dec
mov
mov
ret
stc
shl
lcall
mov
jo
push
add
add
in
lds
xchg
ljmp
adc
nop
adc
add
mov
cmovno
outsb
scas
add
push
xor
fisttpl
popa
pusha
sar
ds
pop
dec
adc
popa
movsb
pop
add
shll
aad
mov
scas
cld
imul
in
and
aam
test
ss
pusha
push
js
jo
shll
std
shrl
adc
xorl
adc
mov
push
and
out
outsb
mov
mov
mov
mov
adc
es
or
pop
loop
ret
scas
add
sub
sub
adc
bound
jae
inc
popf
push
xor
mov
sarl
pop
ljmp
fstpt
dec
and
push
or
push
xor
push
idivl
nop
adc
lahf
fucomp
or
xor
xchg
xchg
aad
pop
fisttpl
ficompl
adcl
mov
cltd
stos
shlb
mov
or
push
repz
or
jns,pn
mov
add
loopne
aas
loop
and
pop
je
addr16
xlat
xor
push
mov
sub
stos
xor
add
dec
fcoms
add
scas
or
add
dec
stc
dec
scas
mov
mov
xor
inc
jp
ljmp
loop
rcrb
or
fadds
cmp
popa
pushf
out
sub
loop
in
add
xchg
fidivrs
adc
inc
mov
mov
sbb
add
test
jne
decl
nop
or
mov
inc
mov
sbb
cmp
ja
in
and
call
jo
jnp
and
adc
divb
lcall
push
outsb
movsb
pop
outsl
push
mov
cmp
jae
in
jp
push
sarl
loopne
mov
insl
bound
in
mov
pushf
shlb
mov
ret
jns
or
rcrb
push
dec
jno
cltd
mov
mov
pop
mov
call
cmp
lea
jmp
lea
lea
mov
jle
mov
mov
rcrl
adc
mov
fmuls
inc
das
aas
mov
push
aaa
out
xchg
in
cmp
js
inc
mov
jbe
cmp
and
pusha
pusha
dec
adc
gs
adc
outsb
inc
nop
test
pop
xchg
mov
repnz
arpl
negl
scas
xchg
sub
mov
xchg
scas
mull
fiadds
cmp
xchg
pop
mov
or
ss
mov
loopne
jb
ror
adc
push
sahf
jecxz
xchg
fs
sbb
dec
dec
mov
add
inc
ja
inc
ret
andl
inc
lret
add
fidivs
add
xchg
dec
mov
into
cld
test
xchg
je
pop
out
xor
inc
dec
iret
shlb
pop
push
movsb
test
add
icebp
test
mov
lret
push
jmp
inc
mov
adc
outsl
pop
cmp
pushf
lahf
daa
adc
mov
scas
mov
incb
dec
hlt
mov
inc
xchg
imul
cltd
lahf
xchg
dec
dec
loopne
rolb
js
mov
es
imul
sarl
add
mov
inc
sbb
xchg
sbb
lock
xorl
jecxz
mov
xor
cld
loopne
loopne
inc
pop
adc
push
pop
fwait
cmp
dec
add
cmp
ret
cmp
jae
pusha
jl
or
aaa
or
loop
js
shrb
xor
int
adc
insl
xor
int
out
ficomps
add
imul
test
push
or
aam
dec
inc
pop
shll
pushf
sub
addr16
xchg
push
and
sub
adc
mul
cmpsl
sbb
pop
and
pop
andl
xchg
or
inc
aam
and
add
sub
add
shlb
lds
mov
movsb
daa
daa
inc
movsb
push
push
enter
adc
or
jns
lret
jg
js
les
iret
bound
jge
lds
mov
add
mov
sbb
in
sub
mov
cli
aam
out
aaa
stos
fmuls
testl
jle
lcall
les
dec
pusha
sub
adcl
jo
push
mov
push
fwait
xchg
push
in
insl
cmp
or
jb
ja
cwtl
fildl
xchg
ljmp
jnp
mov
js
insl
push
pop
sbb
insl
jge
loope
adc
call
jns
mov
jno
jne
out
sahf
lea
and
xor
adcl
pop
jo
xchg
shlb
notl
mov
inc
pop
mov
je
mov
adc
cmc
rcrl
out
idivb
call
test
or
add
add
aas
and
popa
or
loope
filds
dec
lds
lods
stos
stos
dec
movsb
xchg
insl
pop
setl
testl
data16
inc
stc
xor
lcall
xorb
inc
sub
add
mov
inc
cmp
les
jnp
aas
mov
arpl
inc
inc
out
push
push
cli
add
andl
dec
sub
mov
dec
add
scas
imul
repnz
fcmovnbe
mov
and
fnsave
or
pop
stc
imul
push
daa
push
jg
mov
stos
cld
icebp
test
sub
pushf
mov
sbb
cmpsb
rorb
inc
xchg
jmp
andb
add
push
cs
pop
push
jp
sub
or
mov
mov
and
sbb
rcl
hlt
icebp
fistps
sbb
cwtl
fwait
or
xchg
xsaveopt
add
xchg
ficoms
shlb
rclb
cmp
mull
mov
imul
pop
mov
xchg
lahf
cs
push
cli
fistl
fdiv
fstpt
sbb
mov
repnz
jnp
mov
loop
mov
out
lret
mov
rcr
shufps
cmpb
rorb
mov
add
mov
sub
mov
int
pop
mov
cltd
sub
jns
int
mov
lahf
add
cmp
mov
inc
lcall
nop
mov
ljmp
sbb
mov
iret
das
mov
pop
dec
daa
and
push
pop
jnp
hlt
add
jmp
inc
mov
adc
test
sub
daa
inc
sbb
mov
cmpsb
pop
movsl
sbb
inc
aaa
or
aad
imul
jne
cmp
xchg
jmp
xchg
dec
add
sub
imull
aas
aam
jge
bound
enter
add
in
aaa
and
pop
or
mov
mov
mov
rolb
test
cmp
shlb
or
test
aam
xor
cwtl
mov
js
jge
aas
xchg
sub
int
push
std
mov
mov
push
fnstenv
mov
scas
call
fistps
and
fsubrl
les
xor
push
fs
mov
adc
dec
loop
rcll
sbb
push
sub
data16
cmpsl
add
sbb
lcall
jno
inc
jmp
lea
fildl
hlt
fwait
negl
sti
mov
ret
enter
lret
lock
xchg
movb
mov
cmp
pop
mov
xchg
js
in
or
mov
psllq
sahf
jmp
std
xor
movsl
and
addr16
addl
cltd
sub
push
pop
jecxz
cmpsb
pop
icebp
enter
xchg
mov
outsb
add
paddsb
push
test
je
xchg
test
ret
pushf
inc
pushf
mov
call
jo
fadd
dec
mov
xorl
sarl
push
cmc
mov
mov
and
and
sahf
xor
jge
mov
imul
das
nop
test
lahf
xchg
ss
lods
push
jecxz
mov
jg
adc
mov
cltd
bound
cltd
and
xchg
jmp
pop
sti
add
dec
push
pop
out
jl
call
icebp
jae
outsb
jns
hlt
leave
mov
lock
andb
loop
imul
jp
adc
lret
loopne
add
lea
cltd
fildll
push
dec
cmp
fwait
mov
dec
scas
ljmp
and
jb
xchg
jg
inc
cmpsl
mov
dec
sbb
sbbb
sub
movsl
ss
jo
mov
and
push
dec
repz
ss
xchg
shll
sub
flds
inc
pop
dec
enter
mov
jle
aaa
aam
push
adc
loop
stos
mov
jno
outsl
in
mov
mov
mov
xor
lahf
test
dec
out
inc
popf
rcll
push
aas
pop
cmp
je
pop
ljmp
lds
imull
and
repz
mov
add
mov
jns
adc
mov
cmp
sarl
mov
leave
push
aad
adc
xchg
jb
es
nop
jno
adc
mov
mov
xor
push
sbb
xchg
test
lods
push
jp
jecxz
rcrb
push
pushf
dec
mov
inc
mov
imul
mov
loope
movsl
mov
dec
movsb
out
jecxz
mov
mov
push
aad
or
mov
pop
in
jmp
rorl
hlt
ret
adc
lods
cmp
xor
ficoms
leave
test
hlt
ja
xlat
aaa
add
loopne
testl
es
adc
pop
mov
in
or
inc
scas
or
sbb
cmp
dec
xlat
cld
jl
jmp
cmp
lds
int
or
outsb
or
or
cmpsl
mov
icebp
andb
sub
jne
das
dec
dec
sub
leave
pop
cmp
negb
ss
adc
les
cs
call
adc
out
push
jle
aaa
pop
inc
insl
xchg
aas
inc
xchg
jmp
adc
imul
xor
dec
xor
pushf
into
repz
aam
mov
xor
cmc
and
faddl
jge
mov
enter
and
push
push
jl
test
add
and
outsl
idivl
iret
popf
push
ret
mov
dec
out
icebp
scas
cmc
cld
call
inc
or
shl
ljmp
lods
lret
addr16
daa
or
and
fldenv
mov
nop
loope
adcl
loope
jg
push
popa
jo
dec
mov
out
test
pop
adc
ja
jae
or
fdecstp
fiadds
daa
xchg
xchg
imul
mov
leave
loopne
adc
mov
popf
pop
movhps
add
cwtl
fidivrl
cs
out
jle
addr16
and
imul
xchg
sub
imul
stc
dec
lock
xlat
xor
fmuls
lcall
enter
outsb
rorb
pop
sbb
rorl
xchg
loop
or
dec
bound
dec
fildll
xor
xchg
mov
add
fdivr
bound
jecxz
sub
aas
push
adc
sbb
aad
jbe
or
mov
imul
xorb
test
notl
xchg
and
mov
mov
or
sub
xlat
mov
mov
dec
sub
mov
ror
xchg
data16
xlat
ds
push
add
popa
push
mov
sub
pop
neg
pop
dec
cmpsb
xchg
pop
inc
dec
test
jl
sub
jp
sub
adc
xchg
shll
mov
ss
inc
add
ja
fisubrl
in
test
sub
in
pop
ret
stc
xor
push
pop
add
stc
pusha
je
xchg
mov
cmp
mov
push
jle
lret
add
ret
ret
adc
es
loope
ds
pop
std
int3
movsl
lds
add
fcoml
movsl
fadd
dec
mov
cmc
inc
sub
fmuls
stos
out
addr16
xchg
mul
mov
movsb
cmc
push
or
icebp
sub
ja
sahf
mov
jg
xchg
flds
bnd
dec
fwait
jno
gs
cmpsb
pop
pop
in
adc
int3
cltd
aas
xchg
fldcw
test
sub
lock
push
add
bnd
jno
ja
jns
jecxz,pt
loope
cld
jnp
push
scas
pop
out
inc
sub
push
pop
add
icebp
in
nop
iret
and
mov
out
dec
push
or
jp
mov
sbb
push
fisttpl
lahf
jg
out
lar
jno
push
icebp
xchg
jmp
mov
sub
mov
mov
movl
pop
mov
sbbl
cmp
int
xor
mov
adc
pop
jp
fstpl
in
adc
sub
lods
cmp
lods
cmp
cmc
into
jl
or
mov
gs
inc
add
inc
add
add
or
adc
adc
leave
add
ja
iret
js
pop
sbb
popf
jbe
and
lret
mov
push
das
roll
popa
insb
aas
pop
sub
pop
scas
fidivrs
jo
das
mov
mov
jae
ds
aad
mov
repnz
cmp
mov
es
push
pop
push
sbb
dec
and
mov
mov
jnp
xor
mov
lret
call
mov
jg
mov
jmp
cwtl
shrl
aas
mov
incl
add
shll
xor
cmc
push
jmp
cs
lods
dec
fldcw
mov
pop
stos
pop
idivb
subl
nop
or
les
roll
mov
push
xorl
jno
jmp
test
mov
xorl
repnz
xchg
mov
mov
enter
xor
inc
aam
mov
or
jmp
dec
sbb
cmpsb
arpl
xor
push
xchg
xor
mov
mov
loop
loop
fidivs
mov
mov
cmpsl
cmp
push
mov
or
insb
stos
dec
test
rclb
imul
gs
and
repnz
push
sbb
mov
mov
test
xchg
dec
inc
xor
sbbb
jl
sub
rolb
test
mov
jg
enter
cmc
movsb
fwait
push
xchg
or
ljmp
cmpsl
imul
sbb
ds
imul
iret
push
pop
ljmp
pop
adc
shr
loop
jl
jno
scas
adc
jns
jne
je
lret
dec
mov
js
loop
cwtl
stc
test
sbb
push
mov
enter
cmpsl
cmp
xor
add
hlt
rclb
and
push
mov
js
stos
push
xchg
ja
pop
fistl
or
mov
push
loopne
add
cli
pop
into
cmc
insb
shr
push
aam
sahf
jmp
mov
fsubr
dec
enter
mov
lods
fadd
out
sub
mov
out
cmpsb
data16
mov
mov
enter
icebp
or
std
mov
xor
out
mov
mov
inc
out
adc
pop
pop
out
mov
fiadds
push
out
sarb
dec
popf
movaps
fildll
dec
lret
add
push
jae
sub
movsb
out
pop
por
aam
dec
sbb
add
mov
sub
fnstenvs
or
cmpsb
mov
adcb
sub
daa
cld
dec
outsl
xchg
or
push
int3
jmp
fisttpll
add
inc
mov
test
hlt
insb
and
cmp
mov
xor
dec
inc
lods
ja
stos
add
subb
cwtl
jg
mov
mov
push
jns
in
dec
jp
scas
cmp
cmp
ret
push
sub
ja
jb
rorl
notb
mov
sbb
sbb
daa
xchg
xor
inc
jmp
pop
pushf
pop
add
add
jne
jmp
push
xor
movsb
std
rcrb
fdivl
ljmp
loope
jge
mov
mov
push
adc
scas
cmp
popa
je
aam
adc
ljmp
ja
pusha
pushf
pop
dec
js
ret
fcmovb
or
scas
mov
mov
inc
push
in
clc
ljmp
hlt
lock
mov
xorl
cmpsb
pop
in
sbb
mov
push
add
cmp
add
push
dec
lret
inc
mov
cmpsb
dec
mov
pusha
cltd
gs
adc
xor
scas
movsl
xchg
push
shr
mov
pop
clc
push
and
fsubl
fsts
aam
imul
mov
dec
push
jno
out
lret
shlb
loope
loope
lret
jns
sub
ja
mov
add
fimuls
data16
dec
jg
into
aaa
outsl
mov
out
or
xchg
js
add
lahf
int
ljmp
repnz
xor
sbb
xchg
pop
or
cwtl
push
pop
pop
push
fsub
hlt
aaa
push
inc
imul
repz
ss
xchg
jnp
sbb
leave
sbb
push
arpl
or
add
xchg
inc
add
cmp
cmp
ds
push
dec
jge
cltd
into
and
jle
loopne
or
pop
repz
mov
xchg
es
mov
push
add
mov
and
push
fs
stos
cmc
or
push
mov
ljmp
sub
jnp
jo
xor
rclb
xlat
jae
xor
fbld
in
dec
test
out
je
divl
call
xchg
jmp
or
xchg
shrl
pop
test
pop
inc
dec
popa
mov
lahf
mov
jmp
adc
or
loopne
inc
orb
add
adc
xchg
daa
fisubl
stos
popa
inc
into
mov
insb
mulps
cmp
negb
inc
lea
push
inc
pushl
mov
aam
jle
cmp
xchg
xor
xor
out
push
icebp
adc
jnp
shll
push
mov
push
fstl
hlt
lcall
inc
fbld
xchg
push
lea
addr16
pop
addr16
cmpb
and
enter
cmp
and
iret
repz
xchg
mov
ljmp
sub
pop
fnstenv
daa
pop
mov
repz
xchg
adc
repz
out
pop
or
xchg
inc
stos
pop
je
scas
aaa
fld
mov
fwait
inc
loop
mov
cmpsl
aad
sbb
js
push
fwait
shrl
pop
lcall
fisubrl
jle
daa
xor
cmp
dec
stos
adc
shll
lods
cli
hlt
and
add
add
enter
jl
mov
pushf
xchg
sahf
pop
outsl
dec
fcmovbe
ljmp
xor
jae
pop
sahf
adc
push
sub
inc
stos
test
testb
or
pop
jae
sub
cmp
lods
dec
popa
loope
aam
stos
inc
out
adc
iret
jno
mov
xor
push
add
outsl
movsb
xchg
xor
fdivl
lret
pop
neg
mov
mov
sbb
inc
bnd
mov
or
js
mov
hlt
int3
inc
mov
pop
jnp
xlat
mov
cmc
push
sub
cmp
add
sbb
in
mull
jge
pop
xor
cmc
test
test
loopne
jae
leave
inc
js
xor
mov
mov
lea
push
sub
pop
cli
adc
jns
std
out
in
inc
xchg
lods
jmp
adc
mov
adc
arpl
pop
aam
push
mov
repz
sub
xor
fdiv
sbb
sbb
imul
fcmovnb
in
or
jg
xchg
xchg
scas
push
cmp
add
out
cmp
in
lret
mov
mov
nop
out
neg
imul
imul
sub
movsb
movsl
inc
sub
loopne
jae
xchg
jge
aaa
and
loopne
push
jae
push
fsubrp
imul
sarl
nop
shll
push
je
loope
test
sti
imul
rolb
and
rorl
sbb
cmpsl
mov
xchg
push
imul
adc
mov
jae
cmpsb
leave
sub
lea
and
sti
mov
add
enter
repnz
int
jecxz
cli
inc
sti
mov
ret
mov
out
nop
mov
cmp
push
cwtl
mov
ss
ret
lods
jae
insl
inc
cli
aam
push
mov
push
adc
cmp
mov
std
in
ss
shll
out
and
push
aad
dec
xor
mov
pop
ret
enter
sar
insb
fdivs
leave
jne
gs
pop
shlb
int
bound
mov
je
je
addr16
adc
inc
mov
shl
outsl
fisttpll
cmp
lods
addr16
enter
cs
in
jmp
and
les
xor
sub
xor
pop
out
add
mov
negb
mov
scas
imul
sub
inc
aad
in
out
mov
cmc
out
push
lahf
jne
xchg
pop
sbb
gs
sbb
stos
addl
aad
jo
xchg
jbe
data16
testb
imul
mov
sub
xchg
pop
add
notb
loopne
sbb
loop
adc
popa
xchg
mov
pop
sbb
mov
sahf
int3
in
xor
and
addr16
xchg
call
xor
call
mov
cmp
xchg
mov
das
cmp
adc
in
sub
rorl
arpl
adc
pop
shlb
push
lock
int3
arpl
stc
or
add
mov
mov
jne
pop
jae
bound
andb
cmp
rcrl
test
mov
cltd
xor
iret
pop
push
and
xchg
je
jne
dec
jb
je
xor
push
jmp
jns
ss
push
xchg
loopne
jbe
mov
mov
ret
cld
cmc
add
test
mov
cmpsb
stos
cmpsb
inc
xor
sub
je
sub
sub
jmp
xchg
mov
ss
fdivrl
test
lahf
and
inc
xor
adcb
jge
inc
pop
lds
cmp
sbb
dec
add
mov
xchg
lea
or
xor
and
out
jbe
xchg
incl
or
jo
xor
dec
inc
inc
in
aas
repz
std
icebp
sbb
xor
push
sbb
push
xchg
mov
xchg
bound
jo
add
sub
xor
xor
das
push
faddl
dec
lea
std
push
arpl
and
inc
inc
sub
cmp
adc
outsb
ds
popf
inc
pop
push
shlb
and
repnz
mov
push
xchg
add
adc
adc
decl
sbb
aam
lcall
fadd
test
mulb
inc
ficoms
inc
dec
cmp
addr16
test
outsb
dec
dec
stos
movsl
mov
shrl
cmp
ljmp
clc
xchg
roll
ss
arpl
jbe
dec
enter
enter
xchg
test
icebp
data16
mov
cs
adc
sub
push
mov
scas
nop
pop
enter
mov
in
cmp
or
fs
movsl
lcall
pop
rolb
in
lcall
outsl
ds
sbb
fisttpll
mov
xor
shll
aad
mov
lock
nop
and
icebp
inc
add
or
je
sbb
pop
repz
or
out
push
movsl
xor
je
lock
lahf
leave
push
adc
xchg
je
adcl
push
mov
test
out
inc
dec
test
std
cmp
stos
lods
cltd
xchg
mov
ja
popa
ja
mov
sub
mov
jbe
jbe
in
lea
sarb
int
adc
jae
mov
imul
gs
movsb
lret
jne
enter
insb
xchg
rolb
push
repz
sti
addr16
pop
cmp
repnz
lret
jae
test
shrb
sarb
cmp
ljmp
repnz
or
pop
sbb
push
pop
sbb
test
js
jb
aas
test
int3
sarb
lods
arpl
js
es
test
push
bound
pop
int3
int
mov
mov
mov
in
pushf
cli
mov
gs
stos
push
dec
cmp
sbb
adc
shrl
aaa
push
sub
or
sbbb
out
hlt
xchg
cld
and
jl
push
inc
adc
pop
push
lock
addl
push
in
aad
jo
aaa
xchg
aam
cwtl
or
mov
pop
jbe
and
and
out
outsl
daa
lea
sub
sub
lret
sbb
push
mov
lret
fistpll
push
movsb
movsb
ret
pop
adc
fcompl
mov
add
cmp
jp
icebp
sbb
add
sub
pop
mov
add
in
aas
call
movsl
xor
sub
cmp
add
movl
hlt
fmull
add
xchg
xor
out
or
es
jno
xchg
fdivr
jecxz
pop
mov
sub
imul
jo
xchg
adc
adc
adc
push
lock
mov
scas
xor
popa
xchg
lods
dec
mov
mov
aaa
nop
aas
dec
popa
mov
mov
cld
std
mov
sub
lock
mov
mov
push
jg
in
sar
inc
add
and
popa
push
nop
adc
push
mov
jbe
lahf
pop
int3
stos
std
lret
inc
adc
inc
pop
lock
or
add
add
mov
inc
mov
mov
fcompl
pop
mov
out
jecxz
dec
mov
or
sub
xchg
cmp
fcmovb
in
add
enter
pop
and
adc
notb
ret
and
adc
lock
mov
push
sbb
push
mov
and
fldl
cmp
mov
lods
jno
xorb
add
sahf
push
repnz
ds
lret
xchg
pop
repnz
in
psubusw
xor
mov
xlat
xlat
pop
fisubrl
xchg
in
dec
mov
add
inc
lea
aaa
and
mov
test
xchg
sbb
inc
jns
adc
lcall
pop
fsubs
dec
mov
and
or
in
mov
jle
sbb
and
lds
mov
xor
mov
aas
adc
dec
mov
mov
movsl
mov
mov
in
pop
push
sbb
pop
cli
sub
outsb
insl
std
xchg
mul
mov
dec
bound
dec
push
sub
add
test
adc
fiadds
inc
daa
jo
ret
xlat
xchg
call
ds
pop
mov
dec
outsl
xor
add
xchg
xor
sub
jp
test
xchg
enter
inc
repnz
mov
decl
imul
rolb
cmp
shlb
into
fcomps
iret
adc
inc
stos
and
xchg
jle
das
out
xor
adc
sahf
cmp
mov
popf
int3
xor
add
bound
insb
xlat
push
pop
or
sbb
push
ja
lcall
sti
xor
js
dec
in
icebp
xlat
add
sti
cmp
mov
pop
adcb
leave
shlb
and
add
add
call
mov
lods
xchg
out
push
cmp
cmp
data16
or
outsl
int
pop
xor
fldenv
gs
pop
in
mov
jge
sbb
mulb
lds
adc
movsb
fdivrp
sub
jg
popa
push
pop
incb
inc
daa
adc
insl
loope
sub
jnp
mov
adc
dec
push
fcmovbe
les
sbb
cmp
sub
cmp
cwtl
jb
sub
push
dec
loop
jo
mov
cs
inc
jo
testl
xor
mov
dec
xchg
mov
sbb
leave
into
movsb
pusha
inc
cmp
lret
enter
add
lcall
xor
and
jns
stc
negl
inc
pop
and
cmp
dec
mov
cmp
pop
or
cltd
push
dec
cmp
out
aad
ret
jg
rcrl
jmp
lds
push
ljmp
adc
cmp
push
lret
faddl
push
js
xor
mov
jno
or
cmp
cltd
fiadds
mov
repnz
shlb
into
int3
int
mov
mov
sub
lahf
fbstp
adc
js
push
sub
cmp
test
or
xchg
and
movsl
cld
lcall
xchg
pop
and
cmc
out
mov
cli
inc
or
pop
mov
add
mov
inc
xchg
pop
fs
cmp
cwtl
mov
mov
lods
jl
popa
lret
jne
xchg
fsub
and
xchg
push
xchg
call
push
xchg
std
repz
pop
cmp
mov
out
dec
movsl
cmpsb
xchg
popf
aaa
cmp
push
negl
orl
cmp
pop
ja
dec
lock
daa
or
mov
out
cwtl
fldl
or
not
fwait
mov
data16
pop
sub
test
jae
nop
out
push
xor
xchg
xorb
imull
popf
adc
xor
and
xor
enter
sbb
xchg
sbb
push
movsl
xchg
lcall
sub
sbb
mov
cld
jbe
xchg
int
cmp
fidivrl
and
addl
adc
mov
xchg
sbb
add
ja
xchg
inc
bound
pop
jb
add
push
and
pop
jne
gs
or
sar
xchg
ljmp
icebp
lcall
jp
loop
lea
ficoml
cld
push
les
fisttpl
cmp
dec
out
call
jne
es
mov
stos
mov
xchg
repz
adc
pop
orl
jnp
sub
test
cmp
sti
test
jp
mov
mov
outsb
ljmpw
hlt
les
cwtl
dec
dec
sub
dec
in
mov
cmp
setg
movsb
xchg
repnz
mov
dec
in
rol
xchg
pusha
lret
icebp
in
data16
sub
lret
into
fcmovbe
lods
jp,pn
pop
mov
xlat
push
mov
push
in
mov
sub
pop
cmp
mov
std
fcmovnbe
fwait
repnz
jmp
mov
int
repnz
movsb
mov
add
push
pop
inc
int
xchg
inc
cmp
xchg
aam
in
mov
enter
popa
sub
xchg
dec
lcall
mov
in
push
sti
enter
and
mov
add
xchg
or
popl
sbb
pop
ds
outsl
test
cmovge
and
fs
mov
mov
in
call
mov
lret
cli
add
sbb
adc
and
mov
add
notb
push
jnp
pop
push
jno
and
outsl
xchg
add
mov
xor
jno
inc
xor
loopne
xchg
jg
std
aam
scas
rorb
shrl
adc
xor
or
xchg
ja
inc
mov
inc
pop
out
cld
xchg
cmp
xor
fmul
add
mov
xchg
scas
fmull
fucomi
std
add
sti
inc
sahf
dec
test
fisubs
rolb
push
aam
xchg
pop
je
loope
std
das
in
daa
fisubs
mov
cmpsl
shll
outsb
lods
adc
jp
in
xor
mov
outsb
test
popa
ss
repz
mov
je
ljmp
mov
imul
xor
and
mov
xor
sub
sub
lock
adc
push
cmp
push
jmp
std
pusha
shrl
mov
pop
xchg
scas
jbe
lock
stc
mov
adc
lods
testl
jg
mov
int3
fildll
inc
js
loope
and
xor
pmaxub
pop
or
or
cmp
fidivs
mov
mov
mov
out
sbb
adcb
xor
xor
fadd
sbb
icebp
push
sbb
popf
inc
mov
cmp
sbb
jmp
jge
xor
pop
pop
mov
push
ja
sbb
jl
push
xor
jl
xchg
outsl
rcll
cmp
stos
std
jge
xor
jp
xchg
insb
mov
jns
or
test
xchg
adcb
out
mov
sbb
jmp
jns
xlat
jp
stc
mov
fstps
clc
xor
lea
rcrl
xor
loopne
jbe
push
xchg
ljmp
or
mov
hlt
sub
push
aam
hlt
inc
dec
jb
decb
pop
mov
fldenv
or
mov
push
insl
loop
pusha
adc
mov
repnz
sub
push
shll
repnz
out
outsb
cmp
fsin
sub
lea
icebp
test
inc
jg
mov
mov
push
loope
call
pop
jb
test
icebp
mov
loope
sbb
out
sub
inc
adc
sbb
sbb
mov
mov
fdivr
js
mov
jp
ret
fldt
or
mov
enter
cs
aad
es
dec
std
jae
daa
inc
out
in
in
lcall
leave
ja
bound
rorl
rol
movsb
inc
push
or
fistl
xchg
fldenv
cmp
inc
inc
push
dec
fldcw
inc
minps
movsl
xorl
lds
pop
adc
jno
mov
cmp
push
fs
pop
pcmpeqb
daa
xchg
push
inc
push
cs
aam
sub
scas
pop
mov
adc
imul
hlt
fs
xor
int
fstp
aad
test
add
mov
or
int3
cmp
mov
adc
adc
xchg
dec
sbb
fs
jns
sbb
outsb
mov
movsb
lock
insb
pop
enter
fwait
fwait
mov
fidivrs
pop
call
mov
sbb
cmpsl
std
dec
mov
ret
dec
ja
mov
xor
insl
add
push
dec
test
and
iret
fs
movsl
push
xchg
wbinvd
divb
mov
out
cwtl
shrl
into
outsb
jb
mov
push
sub
daa
in
mov
outsl
cmpsl
xor
outsl
cmpsb
jmp
adc
movsb
jne
pushf
out
jo
adc
dec
daa
fsubs
mov
mov
pop
cmpl
mov
xchg
stos
cmp
iret
mov
xor
outsl
pop
nop
dec
out
mov
loop
push
mov
jns
push
mov
insl
imul
js
arpl
mov
xchg
lds
movd
and
and
xor
add
sub
or
fnstsw
mov
jmp
push
xchg
or
pop
push
xlat
inc
mov
push
jae
in
outsb
xchg
mov
repnz
xchg
jnp
je
sub
sub
sub
test
in
push
pop
mov
fimuls
sarl
fsubrp
lock
fwait
in
cmpsb
dec
fidivrl
lock
lock
mov
pushf
aas
sub
mov
fldcw
adc
int
or
xlat
movsb
xor
push
ja
lcall
sub
xor
adc
movsl
mulb
adc
dec
fcomps
pop
mov
scas
jns
xor
mov
fdivrs
bound
scas
xor
aaa
and
push
dec
push
inc
lds
mov
test
adc
mov
ljmp
pop
nop
inc
jns
push
stos
push
sub
xlat
loopne
test
push
mov
popf
out
in
or
push
mov
push
cmp
adc
divb
lds
mov
sbb
imul
mov
js
sbb
or
adc
addb
dec
test
test
neg
add
inc
pop
push
addr16
xchg
repnz
sbb
icebp
iret
cmp
movl
loope
cmpsl
les
dec
xor
movsb
sbb
xchg
cmp
imull
inc
ljmp
or
mov
sahf
cmc
or
insb
sub
push
scas
imul
mov
xchg
dec
inc
mov
xchg
popa
jne
sahf
dec
sub
adc
popa
cli
lds
and
lahf
and
xchg
lea
inc
nop
je
jge
push
fmuls
xchg
mov
and
ficompl
cwtl
mov
xchg
mov
sub
sbb
sarl
fildll
cmp
pusha
mov
cs
loope
add
pop
mov
and
cmc
xor
movsl
pop
imul
push
lods
pop
hlt
sbb
cld
pop
push
sub
jle
add
les
xor
je
insl
dec
xlat
jl
jg
imul
cmp
push
xchg
cmp
jbe
cltd
repz
pop
das
bound
dec
cmp
outsl
sub
test
mov
out
push
adc
dec
mull
mov
pop
xchg
or
push
xor
insb
dec
std
arpl
mov
std
push
cmp
fsubrl
movsbl
mov
stos
repz
inc
lods
adc
xlat
ljmp
mov
dec
xor
js
inc
out
mov
pop
mov
mov
mov
iret
xor
cmp
or
xor
push
out
sub
pusha
jmp
inc
stos
shl
fistl
inc
sti
scas
jnp
sub
lods
loopne
test
adc
scas
shll
and
scas
jo
dec
shrl
jl
in
lds
and
dec
mov
orl
cmp
jmp
inc
mov
je
pop
test
mov
mov
mov
or
xchg
ljmp
arpl
inc
jmp
sub
jecxz
xor
hlt
stc
jmp
shll
int
lods
xor
xchg
mov
xor
xchg
inc
loopne
daa
add
lcall
sbb
enter
mov
dec
and
fldl
dec
mov
jo
push
mov
jnp
loope
mov
or
insl
cmp
lock
and
clc
xchg
push
int3
roll
dec
insl
and
jb
jno
loop
xlat
xchg
pop
add
imul
xchg
jb
mov
cwtl
sbb
jge
push
jno
cmp
lock
cmp
mov
cmpsl
xchg
gs
nop
mov
mov
cmp
js
xorl
cmpsl
sub
lock
test
out
xchg
out
add
lret
cmp
adc
rol
dec
stos
stos
je
dec
mov
mov
sbbb
shlb
iret
fcoml
lea
test
das
fs
divb
adc
xor
sub
fcomps
subb
lahf
in
xchg
mov
adc
push
adc
cld
pop
adcb
in
dec
lahf
jne
push
cmp
xchg
lret
mov
pop
jge
mov
inc
stos
in
sahf
jo
cs
cmp
jae
out
lods
mov
xchg
push
insb
ret
dec
jmp
pop
ljmp
fdivrp
add
outsb
aas
mov
dec
loop
lods
shl
adcb
jl
adc
stos
pop
sub
fcomp
jle
push
and
pop
cmp
add
mov
insl
ss
sbb
cmp
pop
scas
daa
in
orl
xchg
imul
cmp
push
or
lret
out
jns
sub
or
clc
sub
xchg
xor
les
out
pop
inc
push
jmp
add
arpl
loope
movsb
mov
outsb
out
or
dec
cmp
xchg
xor
mov
dec
lret
adc
adc
pop
mov
mov
movsl
cmp
sub
scas
inc
push
je
out
hlt
push
mov
jle
xor
shl
into
data16
stos
sbb
mov
out
cltd
test
dec
add
push
pop
stc
xchg
and
sbb
addr16
cmp
push
jecxz
or
enter
cmc
loope
mov
dec
sbb
pop
cmc
mov
inc
rcr
mov
nop
cltd
and
rolb
or
lds
jmp
inc
notl
mov
inc
jnp
inc
mov
dec
fisubl
jae
push
or
xchg
lahf
addb
add
sbb
sbb
push
frstor
and
fldl
and
jg
jae
arpl
in
push
movsb
and
int
xor
cmpsl
imul
call
mov
ret
cli
fcompl
or
sbb
add
pop
out
cmpl
xchg
in
xor
movsb
sub
loope
or
xchg
cmpl
aaa
xor
xchg
movsb
fbstp
push
dec
or
dec
mov
loope
adc
adc
push
decl
outsl
mov
xchg
adc
pop
loop
pushf
outsl
ljmp
add
or
push
mov
cmp
mov
and
scas
outsb
rolb
roll
and
pop
lahf
sbb
aad
xor
popa
js
add
je
cmc
loopne
aaa
sarl
addl
lods
inc
mov
cmp
mov
test
out
inc
xor
push
js
fildll
sub
mov
push
fiadds
lods
pop
cmp
pushf
pusha
fwait
mov
push
movsl
sti
push
clc
les
pop
mov
inc
push
and
jmp
cmp
test
lret
ret
push
in
jmp
fdivrl
jp
out
push
stos
shlb
mov
push
jmp
push
lahf
in
icebp
and
lods
out
dec
pop
inc
pop
mov
jno
aaa
mov
xchg
push
xchg
std
pop
insl
adc
push
jbe
pusha
pop
popa
xchg
enter
in
xor
sub
xchg
mov
mov
lods
pop
cmp
lret
cmpsl
or
les
mov
in
test
push
jno
mov
aam
add
jno
mov
sbb
pop
stos
rcrl
jle
mov
addr16
inc
push
push
mov
imul
in
leave
pop
loop
stos
jae
pop
mov
xor
ficomps
repnz
mov
insl
test
push
jl
stc
sub
fidivs
mov
test
jg
adc
aam
adc
cmpsl
ss
adc
imul
lods
std
in
cmp
fucomp
outsb
sub
mov
jp
mov
mov
dec
and
aad
icebp
dec
in
adc
aas
xlat
cmpsb
and
dec
pop
dec
movsb
mov
stos
jo
nop
cwtl
scas
sbb
xor
test
nop
shrl
in
push
or
cmp
mov
push
mov
dec
out
pop
jg
dec
hlt
cmp
int3
mov
xchg
insl
inc
loop
rcrl
jnp
arpl
sarl
mov
les
fcmovu
call
in
mov
pop
xor
shlb
pop
and
and
sub
dec
out
pushf
pop
sub
mov
dec
lea
int
jbe
in
divl
sbb
xor
xchg
stos
in
clc
adc
bound
iret
pop
or
repnz
and
cwtl
loope
loope
jl
pop
inc
ds
stos
mov
negb
lock
jmp
mov
stos
pop
cmpsl
pop
push
cwtl
jne
mov
test
lea
xor
clc
inc
xor
pop
mov
ja
inc
fldenv
xlat
inc
cmp
inc
lock
fdivrp
out
aas
nop
sbb
push
int3
xchg
lahf
bound
std
dec
jno
imul
imul
fwait
inc
add
in
sbbl
or
adc
pop
inc
ds
xchg
pop
mov
inc
outsb
lock
in
fadds
sbb
imul
sbb
stos
lcall
pop
mov
imul
cmpsb
popf
jno
cld
jmp
dec
mov
or
sub
fidivs
sbb
mov
andb
in
pusha
call
out
dec
psubb
and
xchg
jmp
cmp
stos
arpl
es
and
xchg
mov
adc
sub
xchg
jecxz
pop
sbb
push
and
movsl
xorl
add
sbb
popa
pop
rorb
cld
movsl
adc
stos
adc
les
pop
cmc
add
sub
xchg
push
push
testb
je
inc
push
cmp
sti
mov
pusha
mov
cmpsb
lcall
mov
push
add
jo
mov
stos
aaa
filds
dec
aaa
mov
out
scas
jns
aaa
pop
fbld
jno
in
lahf
sub
jle
test
pop
inc
jle
dec
inc
pusha
jns
pop
out
xchg
popa
push
mov
push
jo
lock
push
xlat
xchg
stos
xchg
fcomps
or
xor
pop
addr16
pop
add
push
jle
popf
cmp
jecxz
lods
je
test
jbe
xchg
pop
lret
xchg
rcrl
push
mov
loopne
jle
inc
das
add
shr
pop
adc
or
or
nop
adc
ficoml
loop
add
inc
lahf
leave
cli
roll
in
aas
adc
in
inc
iret
movl
insl
push
lahf
fidivs
pop
rcrl
xchg
cmp
jp
scas
mov
imul
mov
push
sub
push
mov
shlb
push
jb
je
mov
scas
loop
xor
xor
add
jns
outsb
mov
mov
and
fistps
aas
cmc
mov
cmp
push
sub
jecxz
out
stos
sub
dec
sbb
xor
xor
mov
xchg
out
cmp
mov
xchg
scas
sub
jecxz
sub
sbb
push
fadd
lods
jb
dec
jae
xchg
push
mov
add
sub
inc
add
xchg
inc
jno
cmp
mov
inc
adc
ja
cmp
imul
fcompl
lock
ljmp
mov
punpckhbw
push
incl
repz
mov
xor
xor
data16
pop
int
cli
pop
fucomp
adc
xor
xor
jno
shrb
xchg
cmpsl
mov
pop
addr16
and
repnz
sbb
out
push
xchg
cmp
ret
loop
add
out
mov
mov
mov
pop
daa
push
and
xchg
add
inc
imul
sub
mov
cmp
pop
mov
push
test
stos
jp
out
add
inc
dec
and
xor
and
xor
mov
mov
pusha
scas
ret
sub
dec
mov
out
neg
out
jle
incl
popa
sub
or
aad
movsb
sti
add
or
pop
dec
inc
jg
daa
add
enter
cltd
push
sahf
fnsave
jns
enter
cli
dec
jecxz
sarl
faddl
scas
pop
sub
push
test
xchg
sub
or
mov
out
cmp
iret
out
mov
xor
add
xchg
cmp
sbbl
jmp
in
and
inc
dec
movsb
lock
das
inc
push
pop
cmp
arpl
cwtl
sarb
pop
insl
cmp
test
sub
movsb
ja
and
iret
inc
mov
imul
mov
pop
outsb
subb
push
lcall
repz
fs
mov
popf
pusha
stc
xchg
lahf
test
ficoms
cs
outsb
inc
dec
push
mov
pusha
test
lock
add
fs
stos
inc
add
mov
movsb
shrl
cmp
into
jl
push
das
push
mov
jl
cmc
movsl
pushf
adc
push
push
xchg
imul
mov
js
mov
mov
adc
mov
pop
jecxz
or
xchg
cmpb
jge
lret
insl
inc
outsl
cmp
gs
push
ja
cltd
or
pop
ds
call
sub
les
stos
mov
mov
aas
loope
xor
iret
fstpl
sti
das
jno
xchg
movsl
inc
stc
lods
lea
xor
dec
out
adcl
fs
sub
aaa
xchg
ret
out
out
pop
adcb
sbb
xchg
insb
add
mov
jge
pop
xlat
fildl
out
xor
and
dec
lahf
cmp
ds
adc
int
mov
push
mov
and
cmp
in
xlat
xchg
clc
and
cltd
mov
call
xor
and
sub
bound
dec
or
mov
pushf
inc
stos
imulb
hlt
fxch
insb
sbb
xor
push
ss
stc
jge
mov
addr16
ficompl
lods
add
xchg
aam
adc
out
aaa
mov
dec
or
sbb
push
or
jecxz
rol
push
movsl
cwtl
push
mov
jb
inc
add
lea
sub
or
scas
cli
xor
in
cmp
daa
hlt
jbe
inc
sbb
xor
pop
pop
shll
jg
sub
add
jno
cmp
dec
jp
cmp
imul
insl
and
sbb
lret
int
sub
je
jno
shlb
adc
outsb
mov
mov
cmp
jnp
ret
inc
test
aas
mov
jmp
lahf
pop
push
inc
aas
cmpb
mov
inc
and
inc
test
mov
xorb
xchg
sbb
and
add
pop
inc
lock
pushf
cs
inc
sarl
ficoml
xchg
pop
cld
or
fstp
cmp
xchg
lods
pop
stc
fs
xchg
add
jecxz
or
test
mov
cmc
xchg
ret
pusha
orl
outsl
push
out
jl
movups
lds
les
push
sbb
xchg
xor
lods
imull
push
add
loopne
les
inc
push
xor
dec
std
sbb
outsb
in
in
and
or
lret
mov
xchg
je
sbb
and
add
jl
inc
mov
mov
and
mov
jle
stos
push
adc
stc
ret
mov
mov
shr
bnd
xchg
nop
fadd
fs
cwtl
xor
dec
mov
xor
lds
aad
xchg
mov
mov
inc
sbb
bound
sbb
xchg
adc
ss
mov
aad
mov
pop
mov
xorb
fcmovnb
jns
mov
imul
xchg
dec
mov
inc
psubw
les
sbb
xchg
je
loopne
das
in
jbe
daa
subb
stos
sbb
shrl
mov
push
shlb
xchg
cmp
out
or
in
scas
icebp
addr16
pushl
jb
xchg
ret
sub
ret
pop
xor
fbstp
mov
out
movsb
dec
rcrl
add
cld
pop
inc
or
xor
subl
gs
ret
push
fisubrl
addr16
arpl
and
int
movsb
sbb
outsb
adc
dec
mov
stc
popf
mov
call
movsl
insl
push
sbb
leave
scas
dec
cmpsl
adc
icebp
xorb
ljmp
add
iret
push
call
out
inc
psrlq
in
daa
repz
test
or
adc
mov
rcr
cltd
bnd
stos
iret
mov
pushf
arpl
pusha
movsl
in
add
dec
shll
mov
inc
pusha
das
dec
es
sub
add
ret
sub
jb
pop
jp
rcl
adc
bound
sbb
xor
fimuls
mov
clc
subl
cli
lahf
and
xchg
lret
or
mov
cmp
cmp
inc
push
xchg
adc
jp
loopne
xor
sub
aam
subl
test
sbb
cmp
and
dec
mov
es
andl
dec
dec
adc
mov
repz
add
andb
jp
xor
pop
add
roll
mov
adc
or
call
push
push
movsb
in
adc
repz
iret
shlb
xor
inc
int3
cmp
aas
push
lods
and
pop
rcll
test
jl
push
add
jle
xor
push
sbb
or
xchg
sub
rol
push
arpl
pop
stc
std
inc
int3
mov
add
mov
add
repz
outsl
add
popf
loop
adc
and
fsubrs
xchg
call
insb
sub
lea
pop
adc
mov
mov
pop
adc
mov
inc
test
xchg
dec
andb
out
adc
jge
mov
dec
movsb
inc
push
inc
and
push
push
push
or
ja
lcall
test
lcall
mov
inc
xchg
ret
or
cld
xchg
repz
js
mov
clc
bound
push
jle
idiv
inc
jge
test
lret
mov
imul
andb
add
cmp
cli
jle
aad
imul
mov
fadd
insl
fcoml
loope
inc
pop
icebp
xchg
pop
xchg
lahf
sub
sbb
push
fwait
pop
test
push
js
xor
scas
into
mov
jae
cltd
jl
sbb
sub
fsubl
enter
out
inc
aaa
sub
pop
inc
cmpsb
ret
jno,pn
push
cltd
adc
movsl
adc
mov
lds
sti
jecxz
in
adc
cmp
jl
cmp
add
push
mov
test
and
mov
loopne
fucomp
lods
inc
mov
cmp
mov
stos
or
imul
xchg
pop
js
cld
push
xlat
push
xchg
mov
jb
iret
es
rclb
jmp
cli
nop
mov
adc
and
xor
adc
mov
push
cmpsl
outsl
addb
movsl
jo
mov
sub
xchg
loope
insb
inc
lods
mov
adc
jg
sbb
aas
jg
mov
dec
mov
lock
cmc
xor
mov
fisttpll
jae
jae
xor
fsubl
mov
test
cld
ss
xchg
sub
sar
cmp
xor
rolb
mov
insl
xchg
jg
and
ss
sub
jns
fdivrl
movsl
andl
std
jnp
imul
xchg
dec
xchg
mov
cmp
dec
movsb
add
repnz
jnp
sbb
push
mov
xchg
div
mov
dec
or
mov
ss
mov
fnstsw
jecxz
push
arpl
mov
lock
mov
stos
pushf
pop
mov
scas
add
mov
imul
inc
push
nop
pop
mov
inc
adc
movsl
int3
sub
enter
add
jbe
xor
repnz
div
movsb
fs
jbe
sub
mov
and
push
inc
xchg
fsubl
push
pop
sbb
jg
shll
cltd
dec
sbb
mov
pop
inc
pop
and
mov
sbb
jmp
xor
clc
adc
mov
push
or
dec
pop
into
add
outsb
jne
mov
mov
stc
clc
lock
mov
jmp
dec
in
push
mov
or
arpl
cmp
cmc
jnp
add
fisttpl
popf
outsl
insb
imul
mov
leave
stos
dec
pop
leave
shrb
cmp
jnp
adc
jmp
fwait
repnz
rolb
adc
pop
enter
pop
pop
scas
xor
clc
test
shll
pop
dec
mov
ljmp
mov
dec
imul
popf
in
sbb
leave
push
mov
jns
xor
xchg
lcall
out
jle
vmovhps
jno
ljmp
shrl
jnp
cmpsb
jb
xorl
mov
or
shlb
adc
std
pushf
dec
shl
and
push
or
sbb
xchg
mov
loop
pop
mulb
xsha256
cmpsb
push
and
fs
dec
or
mov
fisubrl
mov
or
mul
leave
mov
mov
push
jmp
pop
inc
roll
cmc
mov
lahf
mov
dec
fdivrl
addr16
shrl
and
imul
mov
int3
or
jne
and
pop
push
mov
ds
test
xchg
fnstenv
cli
inc
dec
push
pop
repz
out
adc
sub
roll
out
lods
sub
ja
jmp
mov
lea
cmp
loope
es
mov
xor
cmc
lods
xchg
mov
jb
mov
out
aaa
push
mov
mov
xlat
add
fldl
stc
pop
icebp
outsb
cmpsl
dec
sub
or
mov
lds
adc
adc
ret
xor
mov
adc
inc
mov
loope
or
jne
adc
xor
cwtl
push
cmp
adc
xor
and
jae
inc
jg
mov
stos
pusha
call
mov
dec
push
xchg
sbb
xchg
sarb
in
push
bound
cld
into
lcall
sbb
in
push
aam
ret
pop
dec
push
lret
shlb
das
mov
adcl
ss
xchg
shl
xchg
push
sub
movsb
cs
cwtl
imul
add
push
mov
out
push
rcrl
jge
and
add
and
call
outsb
rcr
rcrl
cmp
test
and
xor
fistpl
xchg
or
push
dec
ret
pop
stc
fwait
cmpsl
sub
cmp
sti
pushf
dec
pushf
jle
popa
lret
addl
lret
movsb
dec
adc
pop
shll
jns
fs
push
out
stos
bound
pop
clc
mov
mov
loopne
jno
add
pmaxub
dec
mov
dec
test
mov
cld
adc
mov
dec
imul
ret
out
roll
cmpsl
add
mov
test
outsb
test
jo
in
iret
pop
adc
cmpsl
push
int
inc
mov
lods
add
adc
jb
aas
xchg
push
dec
xlat
je
push
daa
notl
stos
mov
rcrb
rcrb
loopne
sti
loop
dec
mov
in
push
stos
lea
decb
xchg
xchg
fldcw
movsb
cmp
xlat
and
and
clc
mov
mov
sti
fwait
int3
in
in
adc
push
sahf
roll
in
ljmp
test
cmp
out
mov
bound
dec
das
jg
xadd
js,pn
cmpsb
je
cwtl
add
testl
dec
idivb
les
cmpsl
arpl
ljmp
or
mov
pop
fxch
ss
xor
mov
lea
add
orb
fnsave
push
pushf
inc
pop
cmp
sub
repnz
sub
pop
mov
or
and
out
pop
cmp
and
dec
cmpsl
xlat
pop
lds
inc
dec
mov
outsl
ret
cli
mov
xchg
daa
xchg
sub
xor
mov
call
in
ja
dec
pusha
mov
mov
and
pop
push
push
imul
inc
mov
ljmp
ja
mov
mov
int
cld
mov
xchg
pop
je
sbbb
jno
add
pusha
jne
fwait
adc
cwtl
mov
sbb
imul
jb
mov
scas
jmp
lock
sub
sub
stos
add
int
jb,pt
icebp
fldenv
sbb
inc
adc
stos
pop
sbb
and
push
popa
or
jnp
fcmovu
sti
out
bound
push
jnp
fildl
stos
lods
mov
xor
rorl
mov
adcb
xor
out
sahf
xor
movsb
imul
cs
dec
enter
jbe
cltd
movsb
mov
cmc
pusha
imul
jbe
in
push
mov
mov
jmp
lret
loop
sarl
out
pop
imul
stos
out
sub
jl
das
add
dec
lea
test
pop
out
idivb
jns
pop
ja
jbe
push
pop
sub
dec
out
inc
cli
push
push
ja,pn
and
dec
lahf
or
imul
popa
aam
add
sub
mov
sarb
out
pop
dec
pushf
and
inc
inc
and
mov
gs
mov
aaa
test
in
fstpl
cs
push
rorl
popa
adc
ja
xchg
push
push
adc
flds
bound
int3
daa
das
jmp
cli
ja
pop
or
dec
test
rorb
in
push
orb
gs
adc
xchg
mov
imul
fldenv
adcb
lret
addr16
enter
imul
subl
mov
sub
ss
push
mov
mov
scas
scas
movl
mov
mov
in
push
pop
jle
lret
cld
jle
sahf
mov
test
jmp
adc
jecxz
xor
pop
iret
xchg
and
sbb
loop
and
push
lcall
test
inc
in
pop
or
arpl
xchg
sub
iret
shl
lret
rclb
jno
xor
add
test
push
adc
cltd
in
shll
scas
call
ret
fcmovu
je
mov
scas
jo
xchg
or
adcl
adc
or
arpl
cmpsb
pushf
cli
je
add
sub
xchg
mov
sub
jbe
add
dec
ss
xchg
mov
push
lcall
imul
das
fs
xchg
shll
stos
gs
or
mov
sahf
xchg
icebp
xlat
hlt
add
jmp
les
or
jo
push
cli
js
or
lcall
icebp
hlt
mov
ror
imul
xor
and
stos
lock
sub
es
sti
and
dec
out
xchg
in
addr16
jg
loop
push
cmp
xor
ja
loope
scas
sti
mov
das
mov
xchg
cmp
lcall
dec
and
jo
out
and
decl
cmpsb
mov
fdivs
popa
lds
pusha
mov
loope
mov
or
and
jns
aas
cmp
xor
pop
addr16
sbb
and
into
call
fwait
xor
imul
inc
xchg
jp
fcmovnbe
icebp
mov
xchg
pop
xchg
sti
mov
fiaddl
cmpsl
arpl
xchg
jp
rorb
jo
or
mov
or
insl
adc
fisubs
jns
pop
fisttpll
fistpl
aaa
out
and
out
adc
ret
jb
mov
out
andl
push
popf
inc
xchg
mov
push
lods
jecxz
ret
cmpl
jg
icebp
imul
dec
lahf
dec
pusha
sti
test
repnz
mov
push
int3
or
in
push
xor
and
and
addr16
mov
or
inc
negl
imul
cmp
add
into
sahf
mov
jecxz
aam
push
mov
stos
jnp
add
dec
push
mov
mov
mov
movsb
mov
sub
and
imul
push
addr16
mov
ffree
inc
pushf
inc
gs
sahf
and
imul
jmp
test
adc
push
pop
cmp
jecxz
or
pop
fwait
les
cmp
pop
test
pop
jmp
push
mov
add
pop
sbbb
lcall
rorl
xchg
imul
andl
sbbb
pop
imul
adc
cmp
je
clc
mov
adc
mov
in
bsf
bound
add
jle
push
push
pop
arpl
xchg
jg
cltd
push
mov
mov
loopne
sub
mov
jne
push
add
xchg
out
add
cmp
cmp
push
cmp
rorl
xchg
je
push
push
adc
aad
xchg
repz
mov
repz
out
fwait
cli
add
insl
leave
pop
cmpsl
test
pop
das
cmc
fisubrs
stos
and
outsb
aam
andb
ror
mov
pop
rorl
loop
les
dec
push
sahf
out
inc
jl
scas
inc
pop
aad
bound
jge
rcrb
adc
mov
insb
lcall
orb
out
into
pusha
imul
outsl
int
bound
mov
sbb
test
pop
mov
clc
adc
stos
inc
cmpsl
mov
lock
iret
dec
das
pop
sbbb
jnp
popf
mov
nop
inc
pop
mov
mov
in
adc
jle
cmpsl
dec
mov
fsubrl
or
pop
repnz
or
pop
pop
cltd
jge
enter
lret
bound
dec
ror
push
sahf
xchg
xor
fstl
mov
ret
pop
cmp
scas
daa
push
into
push
jo
xchg
cmpsb
or
add
add
rcll
lahf
das
sbb
mov
inc
cmpsb
push
fcompp
jmp
sbb
popf
inc
lcall
adc
jl
or
dec
and
jne
push
cmp
sub
sub
decb
add
loope
sub
jns
out
js
jmp
pop
sti
or
test
mov
xchg
xor
ret
rclb
pop
mov
jg
or
sub
outsb
sbbb
test
movq
sub
mov
dec
enter
int3
std
or
mov
adc
pop
rcrb
scas
rcll
lock
inc
push
lret
js
subl
inc
int
add
pop
sub
dec
repz
mov
mov
mov
ljmp
mov
out
test
aaa
push
leave
loopne
pop
fiadds
add
out
mov
xchg
dec
out
cs
adc
pop
mov
fadds
and
pop
sbb
loope
stos
xchg
lock
clc
icebp
cli
sub
xchg
dec
lcall
xchg
pop
ret
mov
test
xchg
cmc
imul
jecxz
popa
and
das
jo
testl
fildl
push
mov
and
stos
cld
mov
call
out
gs
xor
add
mov
mov
roll
dec
mov
push
jnp
pop
roll
ds
out
inc
push
jbe
push
xor
cmp
scas
pop
add
xchg
out
shrb
or
lock
dec
je
xchg
movsb
in
dec
sahf
cmp
loope
fdivrp
jge
cmpsb
mov
jle
in
aad
loop
push
test
ljmp
jae
and
push
sti
popa
stos
cmpsl
jg
fmull
inc
nop
ret
lea
xchg
mov
mov
clc
movsl
enter
xchg
xchg
cwtl
inc
aas
add
repnz
daa
mov
loopne
lea
jp
mov
push
cwtl
cmp
cmp
stc
xchg
sub
scas
xchg
jl
pop
xor
dec
inc
xor
shr
lods
mov
mov
inc
push
fwait
dec
fidivs
nop
leave
mov
mov
std
roll
xchg
and
push
and
inc
and
push
lret
daa
sub
push
sbb
xor
pop
dec
jmp
add
out
push
sbbl
std
mov
test
ljmp
xchg
mov
pop
xchg
mov
ds
fistl
push
movsl
or
and
sub
xchg
andl
mov
aas
and
dec
lret
out
fs
sbb
cs
das
int3
adc
fisttpll
and
push
inc
int
clc
inc
sbb
adc
iret
dec
cmp
jo
jbe
pop
inc
aam
cmp
or
int
jecxz
test
push
fldl
inc
mov
jo
xchg
lahf
addr16
cmpsb
rcl
popa
cli
stc
sub
mov
fisubs
jne
movsl
or
pop
push
jb
mov
mov
jne
lods
jp
iret
fsubs
sub
negl
iret
mov
adc
mov
loope
pop
inc
jle
andb
jnp
add
xchg
test
das
test
or
repnz
xor
xor
insl
adc
sub
das
jmp
nop
aad
xchg
insl
lret
mov
pop
push
enter
dec
cmp
mov
mov
dec
sub
add
loop
outsb
cmpsl
sbb
push
daa
cmp
jns
push
ret
sub
push
hlt
fistpll
dec
pop
stos
sbb
fdivrs
pop
test
test
mov
mov
out
shlb
sbb
bound
jg
add
divl
hlt
dec
xchg
out
pusha
or
scas
push
jns
xor
popa
cmp
adc
mov
jle
mov
sub
push
fistpll
pop
sub
inc
fs
shl
into
jbe
mov
sbb
and
mov
stos
movsb
sbbl
and
fwait
sti
pop
mov
repnz
sbb
shrb
je
mov
pop
imul
jecxz
mov
push
lahf
test
jp
cwtl
aaa
xor
pop
push
push
lock
pop
and
dec
inc
enter
push
out
push
mov
mov
dec
dec
push
xchg
rclb
roll
cmp
stc
jae
repnz
aad
popf
mov
inc
add
xorl
mov
cmp
mov
xchg
sub
mov
imul
lret
pop
insb
test
inc
lret
inc
cmpsb
fs
das
hlt
shlb
push
lea
dec
fwait
dec
stos
sbb
inc
xor
cli
jmp
idiv
xor
loop
and
pop
push
inc
add
mov
not
jnp
outsl
mov
xchg
in
cmpsl
dec
xchg
push
scas
pop
pop
or
mov
inc
lea
stos
mov
sub
into
sbb
inc
insl
rorb
nop
xchg
fnstenv
fiaddl
test
jae
in
jno
clc
lahf
cmp
xor
mov
sub
testl
mov
pop
ja
pop
jle
adc
scas
aad
out
clc
mov
jmp
aaa
rdtsc
in
sbb
movsl
vdivpd
mov
daa
mov
pop
mov
mov
stos
mov
xor
mov
jns
in
mov
movsb
pop
cmp
dec
pop
pop
test
rcll
shll
cmp
sub
jmp
cmp
cmpsl
push
into
sub
mov
cmp
mov
int
sbb
xchg
and
xchg
adc
xchg
cli
cltd
ljmp
pop
xchg
sub
inc
bnd
xchg
mov
or
test
rorl
aad
out
adc
add
xor
outsl
and
push
fsubrl
test
jne
das
add
sbb
imul
cmp
cli
and
and
mov
mov
sbb
push
mov
jge
and
cmpsl
popa
jno
jg
loop
adc
andl
push
and
out
jbe
test
cmpsl
adc
in
mov
std
jg
sahf
push
aaa
sti
xor
dec
clc
mov
jmp
jle
or
insb
pop
fs
mov
mov
in
xor
jbe
int3
adc
sbb
lsl
iret
outsb
xor
mov
std
pxor
or
fisubl
add
dec
popf
mov
mov
mov
and
addr16
inc
adc
xor
and
orl
lret
xchg
data16
pushf
ss
sti
pop
add
lret
jmp
pop
sub
test
cmp
in
jecxz
rolb
mov
test
nop
fldz
ret
adc
lret
std
test
data16
iret
xchg
test
jo
fnstcw
es
data16
ficoms
insb
mov
xor
in
mov
sub
and
outsl
inc
and
scas
cwtl
popl
mov
pop
xchg
sub
xchg
xchg
in
pop
fs
xor
lret
arpl
jp
fdivrp
les
inc
adc
mov
push
mov
mov
pusha
push
adc
outsl
into
inc
loopne
out
movsb
out
sub
incb
ljmp
push
lret
inc
inc
mov
dec
inc
jge
xchg
mov
ds
push
jmp
mov
xor
lock
xor
std
fimuls
mov
das
je
stos
mov
fldt
in
push
das
xchg
inc
lret
out
jmp
popf
sub
lods
mov
xchg
jno
aad
push
int
push
mov
jb
cmp
mov
inc
inc
in
jo
clc
rcrb
xchg
int
pop
and
in
or
in
lret
test
in
stos
xor
fimull
repz
inc
pop
stc
sbb
test
jp
ss
das
inc
lret
int
pop
or
dec
es
clc
leave
jo
mov
inc
cmp
mov
xchg
mov
mov
pop
sbb
push
std
ss
lahf
pop
xchg
cs
cmpsb
push
inc
iret
subb
jl
jmp
inc
sbb
adc
jns
mov
mov
outsb
sahf
sahf
jne
and
sub
fstl
sub
pop
mov
ret
je
aaa
xor
cmp
xchg
loopne
or
xchg
mov
dec
cmc
fs
pop
aam
push
xlat
inc
pop
cmp
push
xor
jecxz
les
cwtl
mov
sub
cld
dec
add
xor
addr16
in
mov
push
xchg
ljmp
push
icebp
cmp
lcall
imul
cmc
adc
into
inc
test
inc
jl
jg
mov
mov
inc
fidivrs
and
loopne
cltd
icebp
dec
or
cmp
es
in
jge
cmp
sub
cmpsb
sbbb
scas
int
xor
xor
call
jmp
enter
add
test
data16
stos
push
loope
popa
push
lods
aam
popf
stos
movsb
fwait
jmp
jl
mov
in
fxch
mov
jmp
mov
enter
lea
mov
in
loop
cmp
mov
je
movsl
mov
push
and
faddl
lods
and
fs
stos
adc
xor
pop
dec
in
jne
repz
jl
jb
cmc
pop
loop
into
je
add
cltd
ljmp
int3
jle
fidivs
and
push
pop
insb
jns
repnz
add
pop
and
call
movsb
imul
je
xchg
or
iret
adc
adc
scas
popa
testb
pop
or
shll
cld
mov
sub
std
mov
call
loop
dec
dec
lret
add
sub
leave
shll
fisubrl
cmpsl
mov
xor
fstps
ds
cmp
xchg
les
cmpsb
pusha
test
jno
hlt
mov
push
mov
vmwrite
fistps
xchg
popa
jno
push
jg
jp
xor
repnz
popa
sti
xchg
add
pushf
mov
xor
scas
mov
test
mov
fnstcw
cltd
sub
out
jg
dec
flds
cli
movl
in
mov
cmp
mov
aam
idiv
scas
mov
iret
sbb
icebp
mov
pop
jl
mov
pushf
push
mov
inc
outsl
and
mov
aam
cli
and
jns
jecxz
sti
pusha
xchg
dec
mov
add
je
xor
lea
xlat
loop
pop
icebp
lahf
mov
mov
add
rcrb
xor
repnz
mov
mov
cmc
push
sbbl
lods
jns
and
jae
or
data16
jae
mov
in
mov
loop
pop
xchg
xchg
sbb
les
add
sbb
pop
movsl
jmp
add
mov
inc
imul
or
orl
pop
in
outsl
test
fxch
pop
faddp
mov
nop
mov
push
jne
xor
out
mov
loope
mov
xchg
sbb
xchg
push
and
adc
dec
xlat
inc
pop
mov
in
inc
push
into
dec
pop
mov
xchg
lods
aam
mov
mov
sbb
ss
addr16
or
loop
popa
xor
adc
push
inc
mov
mov
xor
inc
xor
push
ret
mov
outsl
pop
jnp
jae
fs
lret
push
repnz
jb
or
ljmp
pushf
in
or
mov
cmp
nop
mov
stc
or
pop
leave
jmp
add
int3
mov
xor
je
scas
jnp
data16
cmc
imul
push
mov
in
and
dec
xchg
add
xchg
sbb
inc
leave
in
addr16
push
and
push
mov
jp
jno
and
mov
das
and
cmp
xchg
sbb
lret
mov
jnp
push
cmp
sbb
loopne
shrl
push
out
ret
mov
mov
addr16
cmpsl
lods
cld
pop
rcll
fsubrp
pop
xchg
out
mov
xchg
xchg
cmpsb
xor
or
shll
jb
mov
adc
sub
ret
test
lods
ss
sbb
mov
pop
mov
aam
movsl
out
cmp
add
jmp
cmc
aas
inc
daa
mov
sub
fs
sbb
adc
push
jns
ret
stos
rcrl
pushf
sbb
leave
mov
mov
lods
fistl
jge
xor
jge
cmp
testb
push
sub
add
sub
aas
and
xor
xor
jae
add
sub
jo
push
loop
je,pt
imul
or
leave
fistpll
orb
push
add
or
leave
dec
out
enter
popf
mov
xchg
mov
aam
lret
adc
addr16
lret
pop
jp
mov
sbb
jae
and
and
test
movsl
mov
adc
fistpl
jae
xlat
jg
pop
shll
and
sbb
dec
push
xchg
repnz
outsl
int
popa
push
stc
push
cmpb
aam
bound
jns
adc
fdivrl
ss
lahf
and
dec
jae
gs
hlt
xchg
int3
mov
jb
cltd
pop
int3
mov
sti
mov
jge
lock
or
mov
mov
jo
stos
test
pop
add
dec
push
test
loop
adc
xor
cwtl
pusha
push
mov
pop
mov
jns
jnp
and
push
movsb
aaa
imul
shlb
rclb
fnstsw
shll
incl
psrlq
outsb
jbe
mov
lds
add
test
hlt
inc
inc
rorb
add
mov
xchg
fsubrp
out
iret
xchg
bound
test
dec
mov
lahf
jl
and
mov
call
arpl
je
sbb
xorb
xchg
mov
jbe
or
dec
jge
mov
fisttps
iret
roll
lods
test
xlat
sbb
aaa
inc
adc
insl
aaa
fstl
js
and
dec
xor
stos
js
sub
cmc
inc
je
mov
push
push
test
jo
jo
sti
jge
das
ret
xchg
and
pushf
bsf
inc
sahf
orl
push
cmp
mov
cmpsb
mov
mov
pop
sarl
jbe
lcall
out
loopne
inc
sub
and
loop
mov
popa
cmpsl
inc
adc
fcomps
push
into
xchg
mov
sbb
mov
or
sysexit
mov
xchg
xchg
jl
mov
inc
aaa
push
lea
mov
jbe
sub
je
addb
add
pop
cmp
test
push
pop
bnd
mov
xor
ss
dec
mov
ljmp
test
jecxz
mov
cmp
gs
movsl
push
outsl
mov
or
cwtl
pop
in
xor
movsl
adc
mov
cmpsb
jg
cmp
addr16
jns
and
in
xchg
test
addl
pop
loope
addr16
dec
scas
dec
pop
inc
outsl
lret
dec
js
daa
out
sarl
ror
lods
cmc
sahf
ja
mov
outsl
in
arpl
and
and
loopne
stc
add
cmpsl
xor
ja
mov
lret
dec
imul
sti
jl
xchg
ja
insl
scas
je
ret
cmp
mov
inc
inc
lock
shrb
jmp
iret
cmp
sbb
dec
movsb
cwtl
sbb
outsl
push
and
xchg
xchg
fdivrl
out
mov
xchg
mov
cmpl
cld
lds
into
sbb
clc
xchg
pop
xor
adc
jno
sub
jbe
pop
add
xchg
test
stc
dec
lds
addr16
outsb
sbb
icebp
jnp
jae
bound
std
inc
lcall
test
stos
mov
lds
std
pop
lods
cltd
int
pushf
es
sbb
lods
std
xor
jno
mov
inc
sti
aas
or
dec
pop
jbe
lds
mov
mov
add
mov
testb
out
push
mov
dec
repz
adc
dec
in
stos
sub
mov
cmp
xor
mov
push
sahf
repnz
ret
sub
xchg
jo
adc
cmp
das
sub
js
cs
dec
and
pop
loopne
or
push
cmp
cmp
xlat
rol
clc
cmp
dec
mov
flds
fimull
cld
adc
hlt
rep
cmp
movl
aam
cmpsl
inc
and
inc
ja
aaa
inc
jae
jmp
fs
mov
idiv
fcmovu
mulb
lds
inc
outsb
push
fldcw
push
dec
ja
std
dec
sbb
mov
ds
mov
push
std
out
jo
sub
insl
or
icebp
fcoml
decb
add
ret
aad
sbb
dec
push
pop
adc
bound
dec
and
xchg
push
push
ret
xor
xor
repz
cmp
scas
ljmp
aam
or
jae
pop
push
fs
inc
fstpt
outsl
out
xchg
mov
pop
add
xorb
cmc
lods
xchg
xchg
notb
sbb
rclb
lret
scas
pushf
add
or
lds
push
push
sarb
mov
mov
xor
ds
push
lods
sub
lret
push
dec
xchg
orb
jecxz
mov
outsb
repz
movsl
test
push
push
ret
xchg
aam
cmp
or
int
pop
shl
push
nop
jg
mov
lret
fisttpll
sub
inc
test
add
pop
fisttpll
punpckhdq
dec
pop
jne
test
xor
mov
push
inc
sub
sbb
leave
jno
dec
aam
test
cmovo
jnp
mov
cmp
jbe
movsl
mov
stos
movsb
push
jp
lcall
imul
jmp
mov
cmp
dec
xor
imul
rcll
ret
mov
rep
es
lds
gs
push
cmc
or
aas
rclb
xchg
mov
or
xlat
and
or
lcall
jno
notb
std
out
mov
loopne
mov
iret
sbb
and
pushf
insl
xchg
mov
repnz
xor
out
fwait
jle
pop
mov
cmp
mov
add
xor
jbe
mov
enter
push
mov
mov
in
incl
pop
nop
jmp
std
xor
sbbl
push
pop
jbe
pop
das
sahf
daa
repz
pop
inc
test
in
jno
adc
cli
mov
xchg
scas
sbb
push
lods
out
mov
ret
mov
push
push
or
xchg
pushf
ret
xchg
fisttps
daa
push
or
cmp
jne
into
push
sti
mov
ja
sub
out
in
cltd
mov
enter
scas
shl
fldcw
add
subb
pop
incb
jb
cmp
insl
xchg
or
adc
test
es
push
dec
or
loop
xor
xchg
ficoms
lds
adc
jmp
sti
outsl
mov
pop
mov
jge
lds
out
cld
and
out
inc
mov
xchg
mov
ret
sub
pop
les
loop
ret
aad
or
push
pop
rcll
int
cli
push
pusha
rcll
and
scas
sbbb
pushf
js
xchg
fnstsw
lea
pushf
int
leave
jp
dec
add
push
mov
and
icebp
sbb
ja
pop
popa
or
pop
push
mov
data16
pop
addr16
movl
inc
imul
rcrl
scas
xor
call
inc
rorb
mov
inc
scas
mov
test
inc
cltd
ret
outsb
shlb
fbld
cli
arpl
popf
fsubl
adc
movl
in
inc
sub
adc
mov
mov
lods
loope
sbbl
pop
lods
shll
mov
loopne
cmp
dec
test
in
push
mov
aaa
xchg
std
aam
cltd
ret
cmp
outsl
pop
xor
jb
push
pusha
inc
jl
andb
pop
cwtl
mov
sub
roll
test
dec
rclb
sbb
data16
pop
cli
orl
mov
sbb
cwtl
repz
ss
xor
loop
cmp
int
inc
add
fstpt
xchg
jl
daa
stos
ss
jg
mov
out
jo
ds
ret
sti
lock
adc
ds
mov
pop
xchg
mov
cmp
in
mov
rcrl
cmp
jo
outsb
fstpt
mov
mov
aaa
xchg
cmp
cli
pause
dec
daa
lahf
jg
adc
mov
and
dec
xlat
test
aas
xor
cli
sub
loop
jns
in
psraw
orb
pop
lods
mov
adc
int
out
adc
and
repnz
or
dec
sub
and
pop
mov
and
sbb
and
insb
mov
pop
mov
lahf
jbe
dec
inc
push
xor
and
xchg
mov
dec
or
lock
stc
sbb
cmpsb
cmp
loopne
dec
pop
mov
mov
arpl
sahf
mov
lods
dec
cmpsl
dec
pop
rol
lahf
push
subb
int
aam
push
xchg
in
aad
mov
push
add
inc
cmp
jg
insb
scas
dec
xchg
xor
test
js
pop
sub
push
dec
out
and
arpl
mov
insl
cmp
mov
push
idiv
movsl
inc
nop
filds
stos
mov
xchg
test
mov
mov
pop
push
jnp
pop
jo
xchg
push
fmulp
popf
testl
dec
ja
and
jg
stos
shll
arpl
dec
repnz
shlb
imul
paddd
sub
add
xor
cmpsb
pop
test
or
sbb
scas
call
dec
mov
adc
push
mov
jb
push
mov
mov
nop
fdivrp
fnstcw
ret
and
and
fwait
cmpsb
roll
mov
xchg
dec
or
push
aam
sbb
lcall
fcompl
in
adc
sarl
jecxz
dec
and
daa
fsubrs
ret
pop
scas
and
mov
xchg
aaa
dec
jae
dec
xchg
hlt
scas
xchg
dec
fiadds
cmp
ror
movl
xor
push
rcrl
add
jg
cmp
inc
xor
sbb
icebp
mov
rcrl
mov
adc
in
mov
lret
sub
push
adc
mov
imul
adc
shrb
mov
sar
loope
pushf
and
rolb
jno
je
sub
aas
icebp
dec
fxch
call
add
inc
jae
inc
mov
out
xchg
or
mov
inc
aaa
jle
inc
cmpsl
add
test
movsl
rcr
imul
dec
dec
push
jne
pop
in
sbb
rorb
repnz
sti
push
sub
inc
int
add
push
push
movsb
sub
pop
sbbl
ljmp
dec
test
movsl
ljmp
push
cmp
mov
mov
jmp
testl
or
cli
sbb
xor
push
jp
mov
inc
or
add
incl
cmpsb
cwtl
xor
fadds
jnp
lret
adc
pop
lea
iret
mov
pop
lret
sbb
js
aam
ror
mov
xchg
jno
fwait
ljmp
cmp
jnp
sub
test
cmp
icebp
int3
pop
mov
and
sub
adc
les
sahf
cmp
sahf
pusha
and
outsb
cmp
loopne
mov
xlat
mov
or
xor
loope
fbstp
mov
dec
mov
mov
push
scas
fs
sub
cmp
mov
pop
fsubrs
pop
mov
mov
aam
sub
mov
adc
lock
mov
shll
insl
pusha
into
push
rcll
jno
pop
mov
mov
idivb
inc
inc
int3
mov
cmpsb
sbb
adc
jbe
pop
mov
sbbl
lret
aas
sahf
fisubs
push
push
inc
inc
and
pop
mov
call
or
mov
mov
and
daa
daa
rclb
jl
xchg
mov
jno
sbb
clc
int3
repz
xor
sub
pop
rcll
mov
stos
dec
xor
jbe
xor
or
mov
aad
je
sub
test
inc
mov
or
fistps
fists
fisubrs
lods
iret
aad
imul
pop
mov
pop
into
mov
or
lea
xlat
mov
mov
test
push
adc
sbb
or
imul
dec
jno
insb
inc
out
mov
xor
mov
into
dec
mov
mov
dec
testb
and
fnsave
dec
and
rorl
cmp
pop
xor
adc
pop
testl
mov
addb
dec
ljmp
shll
sub
xor
clts
sbb
into
inc
xor
test
inc
push
inc
fisubs
cld
mov
mov
pusha
ss
das
fidivrs
movsl
dec
jno
inc
sub
in
dec
fdiv
adc
sbb
imul
das
push
xor
xlat
fisttpl
xor
inc
add
mov
pop
adc
scas
out
cli
jecxz
aad
outsb
cs
pop
repz
data16
xor
cltd
shl
xor
movl
mov
orl
mov
adc
mov
imul
pop
dec
cwtl
sbb
lea
aam
imul
sahf
stos
or
xor
lcall
out
cs
dec
pop
mov
sahf
cs
movsb
adc
dec
add
mov
mov
pop
or
jne
movsb
ficomps
std
mov
mov
divb
gs
cmp
and
pop
ficomps
fmuls
cmp
arpl
in
sbb
xchg
mov
loop
sbb
imul
sub
subl
mov
adc
loopne
dec
rol
aad
mov
in
in
popf
fidivrl
add
jp
fcmovnb
jl
pushf
mov
jnp
mov
mov
out
mov
daa
notl
cwtl
in
scas
outsl
mov
rolb
push
das
scas
jo
dec
push
fcoms
mov
jb
icebp
cmc
xchg
std
mov
sbbl
fists
sub
mov
aaa
mov
mov
sbb
fistpl
jbe
mov
sbb
ret
mov
cld
sub
mov
mov
xchg
hlt
addr16
lea
repz
js
mov
jns
loope
fs
mov
repz
jae
shrl
lock
add
fdivrs
dec
sbb
inc
dec
pop
scas
nop
mov
mov
sbb
dec
lret
mov
pop
out
pusha
or
rolb
ja
fwait
cmpsl
mov
or
cmpsl
inc
add
push
decb
dec
imul
lahf
sbb
pop
push
jnp
imul
sub
cmpsb
cmpsl
adc
ja
idivb
push
ss
aad
mov
pop
das
dec
aam
dec
cmp
sbb
cltd
test
insb
or
adc
nop
int
adc
test
sbb
pop
mov
mov
cmp
repz
mov
loopne
jne
out
pop
inc
stos
sub
sbb
je
mov
mov
sarl
cmp
fcmovu
test
jle
mov
mov
add
imul
loop
push
sbb
sahf
clc
adc
gs
pop
repnz
shll
mov
sbb
mov
arpl
mov
sbb
push
repnz
loopne
cwtl
fs
add
push
call
and
shrb
adc
andb
insl
xor
fmuls
jmp
punpcklbw
mov
lods
mov
in
outsl
ficoml
int3
nop
in
decb
xor
inc
mov
test
and
aam
pop
jo
xchg
sbb
outsl
mov
testb
xchg
addr16
jp
push
cmpsb
mov
test
arpl
cmpsb
lret
pop
in
dec
fisubrs
cmpsl
push
pop
pop
outsb
add
xlat
popa
sub
sbbl
or
fcoms
imul
xchg
jecxz
std
cvtpi2ps
add
loopne
jp
pop
stc
test
dec
std
sbb
xor
inc
add
ret
movsb
flds
sub
lahf
jl
popa
hlt
mov
movsb
pop
add
hlt
push
idivl
mov
clc
push
mov
mov
mov
adc
push
mov
adc
insl
or
xchg
fbstp
ret
mov
pop
xchg
mov
mov
adc
xlat
rol
scas
add
dec
sbb
mov
andl
mov
cmpsb
adcl
or
rolb
into
mov
mov
mov
dec
mov
xchg
scas
out
hlt
sub
rolb
in
or
imul
outsl
fs
out
push
arpl
and
cld
popa
pop
jne
mov
in
stc
sub
sbb
lock
test
mov
ret
pop
push
lds
push
test
jo
ja
jmp
sti
je
scas
xchg
ja
mov
in
test
lods
add
insl
loopne
jmp
nop
mov
adc
dec
or
add
sub
in
fldt
or
gs
xor
scas
out
mov
les
cmp
cs
and
or
lods
imull
testb
mov
cmpsl
xor
cmp
push
sub
and
push
ds
inc
push
jmp
inc
sbb
adc
ret
fcos
ljmp
mov
push
jno
out
mov
ss
ret
lret
xchg
pop
jnp
jp
cwtl
lea
lcall
jnp
jmp
testl
dec
loopne
dec
lcall
sub
xchg
int3
push
lock
call
rclb
fdivr
les
sbb
pop
cmp
fldl
jne
xchg
adc
mov
jge
mov
jecxz
iret
jns
mov
insl
or
or
jo
sub
adc
jge
test
mov
fnsave
orl
das
or
xchg
rcll
andl
js
sbb
sub
loopne
pop
mov
mov
subb
mov
sbb
stos
mov
or
leave
addr16
sbb
in
sbb
ds
and
insb
or
int3
sbb
inc
and
push
and
in
push
loope
fld
cmc
test
and
push
sub
pop
mov
or
fcoms
pop
outsb
pop
dec
nop
inc
pop
inc
jmp
outsb
arpl
aas
arpl
std
in
adc
mov
xor
adc
mov
fnstcw
clc
cmp
sbb
cmp
scas
pop
dec
enter
mov
cmp
mov
xchg
loopne
cwtl
mov
scas
fs
lock
mov
out
imul
xor
std
aad
je
xor
repnz
stos
aam
lods
jnp
push
sti
fcmovnbe
jle
fs
test
out
xor
jb
adc
pop
jg
and
clc
push
pop
arpl
xlat
adc
pop
and
test
cmpsb
mov
notl
xchg
mov
xchg
mov
cmp
or
stos
test
cmc
loopne
cli
sbb
xchg
push
imul
aas
pop
iret
imul
adc
jmp
lret
xlat
push
cmpsb
cmp
adc
sarb
inc
cmpsl
mov
call
pop
jl
adc
test
dec
shll
clc
jb
mov
push
fmuls
mov
ljmp
mov
mov
ljmp
loope
ss
jnp
test
or
imul
gs
pop
outsb
aas
xor
add
mov
adc
mov
lods
hlt
push
inc
ljmp
and
push
xchg
add
jmp
push
mov
and
lods
xchg
and
mov
int3
dec
add
jno
mov
sbb
and
sbb
filds
in
push
mov
adc
pop
sub
popa
or
add
rdmsr
jmp
test
inc
xchg
fists
das
inc
add
cmc
jae
pop
repz
cld
shlb
mov
mov
out
mov
add
mov
out
push
lods
mov
pop
test
lret
cmp
call
repz
pop
cs
xor
jno
fildl
pop
pop
lret
aad
sub
bound
xor
and
jno
out
jae
mov
ljmp
and
and
ret
call
out
arpl
mov
add
adc
idivb
mov
aam
cmpl
test
popa
dec
push
and
cli
movsb
push
xor
xchg
aam
jge
sbb
fsubrl
fsubl
dec
sub
lret
jecxz
dec
cmp
jg
mov
clc
les
and
lods
xchg
shr
or
loope
repz
shl
xchg
int3
jnp
push
iret
xor
add
insl
push
addr16
lret
sarb
mov
xchg
fisubrl
lret
inc
mov
stos
jne
test
fstl
stos
and
bound
xchg
push
pop
pushf
or
test
sbb
aad
dec
into
ror
jmp
test
stc
mov
cld
ds
ret
imul
je
std
ljmp
mov
cmp
cmp
mov
sbb
xchg
les
push
ret
pop
xchg
test
lock
mov
mov
loope
pop
cmp
mov
aam
aas
cmp
bound
lods
rcl
rcr
cli
in
lods
insb
mov
in
jns
shll
fs
rolb
jo
add
repnz
pop
add
mov
dec
ficompl
mov
cmp
daa
cltd
lods
punpcklwd
insl
pusha
xchg
decl
or
mov
pop
adc
cmpsb
sti
jbe
lds
pop
xchg
dec
xchg
aas
fcoms
mov
add
push
cmpsb
xor
aas
insb
pushf
jle
data16
sbb
sbb
sub
ret
fldenv
xchg
xchg
leave
inc
enter
lcall
loop
dec
xchg
mov
iret
jo
aad
pop
mov
test
mov
mov
cmp
stos
mov
lock
dec
or
es
rcr
mov
push
adc
lock
sbbb
xor
lret
push
mov
out
fadds
or
add
comiss
nop
mov
pop
popf
pop
faddp
mov
sub
hlt
xchg
out
push
push
adc
ret
loopne
inc
mov
daa
inc
loope
push
jbe
sbb
push
test
aas
shll
inc
out
sub
cmp
push
pop
inc
cltd
lods
nop
aam
add
or
jne
jo
sarb
push
mov
sub
rclb
cmp
iret
es
push
vmovaps
in
add
int
out
mov
and
cmp
popf
fwait
stc
push
and
sub
mov
push
cmc
mov
insb
sbb
stos
or
leave
scas
mull
pop
or
fstpt
pop
mov
push
je
outsl
das
inc
cs
xchg
jmp
jg
test
push
in
push
iret
fnstenv
mov
pop
rcrl
arpl
clc
push
movsl
adc
adc
push
lret
mov
inc
das
jns
cmp
ja
mov
ja
aas
xchg
je
lock
jecxz
add
mov
pop
push
lahf
or
iret
xchg
add
cmp
pop
or
ret
mov
es
inc
out
std
inc
pushf
mov
dec
cmp
or
sub
movsb
inc
jl
mov
shrb
pop
adc
into
mov
enter
xor
mov
and
sti
dec
dec
insb
adc
pop
cs
jecxz
adc
mov
inc
cmp
push
ds
test
xchg
rorb
dec
clc
adcb
shll
add
lock
insb
negb
cmp
push
xchg
jo
loope
cmpsl
push
mov
cmp
pop
movsb
orl
cmpsl
insl
add
pop
and
xlat
mov
jo
push
jb
in
add
pop
cld
stos
cmpsb
sti
push
adc
sbb
in
call
loopne
inc
adc
mov
icebp
sbb
mov
test
dec
or
shr
push
test
inc
es
outsb
aad
shlb
shrl
fisubl
clc
mov
mov
xlat
int
lcall
cmp
sbb
sbb
popf
add
xchg
push
push
mov
ret
push
fstps
das
imul
mov
xor
sub
imull
pop
jne
aam
ljmp
push
out
lods
jbe
inc
sub
push
out
add
jno
cmp
sbb
mov
in
xor
fisubl
inc
sub
mov
in
mov
idivl
xor
sub
add
xchg
jbe
push
mov
pop
mov
int3
sbb
dec
dec
mov
testl
das
mov
sub
cld
daa
clc
or
cltd
mov
pusha
inc
shll
iret
fdivrs
push
push
sub
mov
lds
push
xchg
imul
sbb
adc
mov
scas
sti
dec
fs
xchg
js
mov
fwait
pop
cmpb
lods
fstpt
cmpsl
testb
aaa
jno
jno
lcall
dec
out
push
jns
push
push
xor
int
je
xor
cmp
and
and
int
dec
call
lds
jge
fistl
push
cmc
cmpsl
and
inc
sarl
jl
or
xchg
sub
ret
jno
xor
mov
movb
mov
or
pop
mov
cmp
into
loopne
and
ret
loope
stos
lret
cltd
push
insl
pop
pop
jne
rcl
mov
jb
mov
dec
mov
outsb
pop
push
dec
ljmp
xchg
daa
xchg
nop
xchg
xchg
cmp
pop
push
push
or
cmp
sub
or
fdivr
sub
jge
call
scas
sub
jno
dec
stc
stos
sbb
cmc
push
imul
lahf
stos
les
inc
xlat
popf
ret
push
psubq
roll
jb
stc
inc
scas
js
mull
imul
test
loope
pop
subl
shl
jg
or
mov
mov
lds
pop
popf
and
insl
jae
cmc
or
ljmp
nop
push
dec
inc
andl
adc
sbb
pop
lods
sub
test
inc
ljmp
pusha
out
and
xchg
pop
imul
roll
pop
lret
cld
outsb
outsl
les
mov
xchg
aad
pop
inc
daa
and
cli
pop
or
movsl
xor
and
adc
or
adc
cmp
cwtl
xor
lea
je
cltd
xchg
mov
leave
subb
dec
inc
dec
cmp
sbb
cmp
inc
jne
adc
mov
cmp
fisubrs
call
int
xor
jg
rcrl
xchg
pushf
xchg
addr16
sti
imul
daa
cltd
jmp
call
sbb
popf
sub
dec
dec
test
or
leave
xchg
dec
inc
rolb
popfw
push
pop
aam
repz
test
js
div
rcrb
adc
outsl
jb
adc
pop
lcall
add
inc
lret
fisubrl
mov
pop
pop
mov
mov
adc
out
xchg
cmp
lcall
sbb
aas
jae
adc
mov
test
shll
pop
orb
in
dec
jo
push
sbb
sub
popa
rcrl
cmc
push
int
jg
adc
sbb
xor
mov
lea
dec
cmp
clc
sbb
pushf
cmp
dec
rcr
or
imul
push
jecxz
add
int3
cmc
test
and
ds
lahf
repz
iret
pop
cmp
mov
in
jg
andl
mov
mov
icebp
adc
repz
inc
aas
xor
test
and
insl
jp
cmc
jle
xchg
push
sbb
test
aam
pop
addr16
jle
inc
popf
sub
loop
mov
push
cmp
shr
mov
mov
hlt
lods
jo
mov
adc
out
inc
ficompl
pop
pushf
lock
dec
pop
lock
dec
push
sub
adc
test
mov
lds
mov
ret
sbb
and
cmp
pop
push
inc
aaa
mov
push
movsb
imul
js
jmp
mov
xchg
outsb
loopne
fidivrl
in
xlat
pop
and
dec
jns
roll
loope
sub
roll
pop
jnp
xor
pop
dec
loope
sbb
fdivs
nop
fiadds
jne
xchg
xchg
dec
sub
jns
rorb
les
mov
pop
and
aad
jecxz
dec
and
jns
inc
fisttps
loop
jbe
inc
popa
xchg
dec
es
mov
mov
shrb
sub
fdivl
xchg
and
ret
outsb
rorl
mov
stc
adc
and
js
pop
mov
or
out
and
clc
mov
inc
in
fnstcw
loop
xor
mov
into
xor
loope
in
or
cmpsb
adc
xchg
mov
pop
ret
imul
bound
sub
inc
push
add
clc
scas
fsubs
or
dec
jge
and
mov
loopne
dec
cwtl
xor
mov
push
push
sub
jmp
enter
iret
icebp
mov
dec
xor
push
lcall
and
xor
jo
push
jae
inc
pushf
and
aaa
sti
cmp
or
cld
xchg
scas
int3
or
jne
sub
clc
adc
sahf
push
bnd
dec
mov
jno
xor
lret
or
in
test
and
push
int3
mov
push
mov
cld
outsb
mov
mov
sbb
out
push
mov
fstpl
xchg
pop
incb
cmp
jae
lds
insl
lret
in
pop
adcl
dec
fcmovb
dec
sbbl
popa
push
pusha
cli
daa
rorb
fsubl
cmp
es
sets
fldt
popa
inc
mov
les
insl
jo
xchg
lret
dec
lea
mov
gs
push
lahf
xchg
lahf
enter
mov
lcall
andl
rol
push
ret
in
inc
mov
sub
inc
mov
js
xchg
push
je
sub
jae
fs
sub
movl
call
mov
mov
jmp
xchg
push
imul
les
jno
cmpsb
jp
pop
out
cmpsl
ss
cmp
pushl
cwtl
cmpsb
scas
xor
and
out
stc
or
and
out
aas
outsb
addr16
xlat
lea
or
pop
ficoms
pop
test
xchg
jl
cmp
in
cmp
dec
push
iret
push
or
or
xchg
cli
jp
test
sub
int
sbb
dec
fbstp
out
cmp
pop
push
inc
cmp
jns
rolb
shrl
scas
jmp
fsubs
pop
and
fsubs
pop
adc
or
leave
adc
pop
and
inc
mov
popa
pop
and
mov
pusha
or
fs
loop
andps
fcoms
out
das
loope
xlat
and
push
fbstp
add
imul
mov
cmp
mov
rclb
int
adc
push
ficoms
daa
sub
nop
imull
jp
add
add
aaa
cli
cwtl
push
imulb
xchg
cmp
xchg
jbe
adc
mov
jl
mov
jo
je
negl
jge
push
outsb
sbb
test
enter
inc
push
mov
lcall
shll
int
dec
int3
and
xor
mov
dec
test
cmp
and
outsb
jmp
fisubrl
mov
loop
xchg
clc
pop
xchg
andl
jl
lret
inc
push
lret
pop
cli
fisubs
jg
pop
hlt
icebp
mov
pop
aaa
jge
xchg
cwtl
pop
stc
dec
pop
sbb
inc
xor
cltd
mov
pop
outsb
ja
add
cmp
pop
movsb
mov
mov
sbb
pop
dec
mov
mov
stos
xchg
and
pop
add
jbe
mov
sub
xchg
lds
sub
dec
imul
cmp
adc
pop
xchg
or
iret
repz
loopne
mov
mov
loop
in
push
jns
add
xchg
outsl
xchg
aam
cmp
add
and
or
mov
lcall
iret
adc
imul
lods
sub
cmp
push
popf
mov
lods
stos
hlt
xchg
pop
loopne
xor
lret
pop
mov
shr
pop
notb
cmp
test
cmp
xchg
pop
xor
inc
mov
pop
xchg
sbbl
jmp
gs
xchg
mov
inc
sar
mov
push
jle
push
adc
or
cmp
shr
mov
jae
mov
add
mov
cmpsb
fwait
xor
and
sub
aad
lret
or
jne
scas
jecxz
dec
loop
mov
in
pop
les
or
and
in
shll
out
cli
leave
inc
orl
test
lcall
pop
aas
mov
cld
xor
push
stc
inc
pop
dec
mov
fcom
mov
inc
mov
jmp
mov
adc
and
mov
ret
dec
stos
sub
stos
test
inc
ret
into
aaa
inc
mov
decl
and
dec
add
cwtl
xor
testl
add
shl
jg
mov
addr16
iret
cwtl
cmp
shlb
dec
ror
add
jge
inc
mov
pop
xchg
cs
fistps
cmp
mov
sbb
or
mov
movsb
das
inc
insb
aas
and
maxps
jmp
fildl
call
add
sete
or
sbb
add
push
je
cmp
test
or
jns
std
sub
push
imul
adcb
out
and
ja
bound
xchg
pop
cmc
fcomps
ljmp
fdivrl
xorl
ss
mov
addr16
out
mov
push
shl
inc
lret
lahf
mov
stos
sbb
int3
jo
sbb
loop
lahf
enter
data16
int
push
ficoml
mov
and
js
push
xchg
xor
iret
mov
inc
dec
push
push
and
scas
leave
mov
inc
or
mov
sahf
push
cmp
xchg
inc
or
pop
imul
inc
add
mov
ror
popa
mov
lock
cmp
jecxz
lret
inc
mov
cmp
mov
fcmovnu
add
std
fmulp
loopne
jecxz
icebp
test
mov
dec
iret
inc
or
aad
jo
sbb
stc
push
mov
pop
loope
insb
sub
int3
jb
ja
or
xchg
sbb
sarl
push
sub
rclb
testl
out
fistpll
mov
dec
mov
repnz
lods
sbb
jne
cmpsl
std
cmpb
add
orl
or
jmp
jbe
fimuls
enter
cmpsl
mov
mov
push
or
insb
mov
mov
mov
or
mov
lods
fmull
js
imul
sti
jecxz
push
outsl
int
int
les
xlat
icebp
mov
addb
mov
testl
mov
test
lock
dec
fs
push
push
je
bnd
add
repnz
js
adc
outsl
fs
icebp
repnz
sbb
int3
dec
mov
push
inc
cmp
jo
lods
pop
outsb
and
push
mov
jle
ja
inc
sti
jmp
mov
aaa
sub
cmpb
pop
in
sbb
jmp
jmp
jg
arpl
mov
xor
pop
mov
popa
popf
inc
hlt
or
stos
dec
jg
es
or
test
insb
adc
jg
sbb
sbb
jo
rcll
hlt
test
jp
lret
xor
jle
mov
rcrl
imul
cmp
inc
stos
xchg
mov
lea
fdivrp
sbb
inc
inc
inc
pop
fsubr
push
mov
inc
push
subl
jb
icebp
in
fwait
inc
rclb
pushf
push
cli
cmp
ljmp
neg
or
lea
sub
sbb
jns
out
std
enter
enter
dec
lock
jno
xchg
xor
xchg
adc
dec
pop
lods
add
jnp
adc
enter
sub
jecxz
and
es
cmpsb
sub
fstp
iret
pop
adc
out
mov
clc
popa
inc
dec
jbe
push
mov
mov
cmp
cli
push
pop
je
pop
xor
jo
outsb
cmp
dec
dec
sbb
fildll
test
jbe
lret
mov
out
hlt
cmp
pop
add
iret
out
cmpb
sbb
mov
mov
das
xchg
fwait
cs
push
mov
lods
jp
cltd
mov
jg
repz
sub
cli
lock
into
sub
push
jne
or
xor
test
mov
and
fisubrl
and
or
mov
and
push
and
mov
xchg
mov
xchg
mov
or
sti
fs
mov
jmp
sub
mov
mov
lret
fwait
dec
lahf
lock
xor
das
adc
pop
push
cwtl
mov
jb
push
sbb
jge
pop
das
push
sub
xor
jne
in
lea
push
es
cmp
xlat
or
stos
mov
xor
mov
out
pop
cmp
mov
out
repnz
xor
cmpsb
cmp
dec
mov
xchg
ds
push
jmp
ds
or
dec
cmpsb
pop
jge
mov
scas
and
adc
aam
adcl
jge
cs
push
jecxz
sub
ljmp
cmc
push
jl
fnstcw
cmp
pushf
lds
adc
push
push
loop
shrb
xchg
fld
fidivrl
lods
out
mov
adc
clc
dec
mov
cmp
iret
xchg
movsb
mov
xchg
pop
fnsave
or
sbb
dec
inc
rcrb
ror
insb
shl
push
add
imul
outsl
movsl
aaa
xor
push
negl
lcall
out
insb
popf
xchg
inc
add
adc
pop
push
gs
pop
rcrb
fiadds
pop
push
push
push
movsl
lods
outsb
xor
jle
dec
mov
mov
ret
and
xor
cmp
aad
cld
pop
xchg
add
dec
hlt
pop
or
mov
aaa
daa
mov
xor
icebp
mov
arpl
add
push
cld
fldt
ss
fwait
sbb
lcall
add
addr16
sub
adc
and
inc
cmp
or
pushf
lods
sub
mov
sub
stc
pushf
jnp
xor
mov
fucomp
pop
cmpsl
adc
pop
pop
dec
push
mov
lock
push
or
mov
movsl
xor
clc
dec
mov
bound
mov
adc
iret
jg
pop
call
push
lds
lea
jle
shr
pop
jb
mov
movsl
inc
inc
push
jmp
std
mov
mov
add
inc
notl
mov
stos
xor
mov
mov
dec
mov
inc
lret
mov
mov
lods
push
xchg
cltd
movsb
fisttpl
mov
dec
mov
loop
les
cmp
add
xchg
fmull
hlt
shlb
ret
daa
imul
mov
jno
rolb
mov
and
lret
std
iret
jmp
and
cmpl
mov
enter
shl
mov
daa
push
mov
xchg
push
and
sti
mov
mov
into
inc
cld
xor
mov
fdivl
jecxz
addb
js
rorb
adc
cmp
les
xor
ret
mov
movsb
push
sub
mov
add
add
mov
fnstenv
lret
xor
pop
pop
mov
fwait
pop
pop
sahf
cwtl
xchg
insl
sarl
dec
fdecstp
cmp
or
sub
out
stos
mov
cmp
jns
xor
call
xor
aam
movsl
and
jl
imulb
push
mov
movsl
or
fwait
add
sub
fs
ja
xor
mov
or
or
popa
pop
arpl
push
pushf
cmp
cmp
push
push
inc
in
in
xor
xchg
fwait
mov
pop
icebp
mov
sub
fiaddl
sub
mov
adcl
les
popf
outsb
mov
push
out
es
scas
sbb
mov
inc
jmp
mov
repnz
jb
push
dec
sti
mov
push
cmp
cmc
dec
outsl
fwait
push
je,pt
xor
push
stos
sub
sahf
and
lock
lcall
mov
and
jne
adc
cmp
pop
out
ljmp
movsl
ss
sub
lcall
aam
adc
mov
ret
mov
and
xor
xor
push
jbe
inc
jns
cld
and
jo
test
push
jecxz
sub
lods
xor
mov
mov
cmpsb
add
xor
stos
push
xchg
xor
fnstcw
pop
leave
lods
enter
inc
daa
sub
inc
outsl
jp
push
out
mov
mov
out
dec
lods
adc
pop
cmp
mov
adc
xchg
and
mov
lds
ja
lds
sbb
sbb
fwait
mov
jbe
inc
dec
push
lds
sbbb
dec
sub
sbb
sub
xchg
cmpsb
cmp
inc
dec
jmp
add
dec
cmpsl
jle
hlt
shlb
cld
jns
sub
insb
incl
cmc
inc
mov
jecxz
jns
cmp
js
push
push
test
int
cmp
mov
inc
insb
lods
or
mov
jg
add
iret
loop
lds
mov
dec
pop
ret
mov
movsl
sahf
cmp
xor
inc
clc
sti
inc
push
mov
aaa
add
mov
jbe
or
adc
or
scas
nop
dec
cwtl
push
ja
test
aas
negl
or
inc
lea
pop
gs
pop
mov
jmp
aam
add
sahf
push
insl
pop
inc
jge
mov
lahf
mov
movsb
lcall
cmpsl
push
scas
xchg
ret
jl
cld
imul
mov
movsl
push
jae
std
mov
xchg
sub
ficoms
arpl
mov
ja
sub
push
repnz
dec
lret
or
adc
mov
push
fistl
outsb
loopne
outsl
lcall
mov
or
lcall
shr
sbb
mov
mov
insl
xor
sbb
jb
mov
scas
and
nop
inc
sahf
outsb
sub
nop
cltd
add
cmovb
popf
mov
rcr
out
push
pop
mov
js
lea
pop
mov
jl
out
out
or
fwait
xor
lahf
xorb
jp
std
repz
add
xchg
lea
scas
jecxz
clc
sub
insb
pop
out
aam
xor
les
mov
adc
data16
dec
push
nop
lret
lret
inc
daa
lcall
test
rcrb
cmp
data16
call
dec
jno
fisttpll
inc
lcall
movsb
test
mov
sti
jno
in
xor
sarb
stos
dec
call
mov
icebp
out
rcll
jbe
aas
cmpsb
mov
popa
pop
dec
or
jne
add
cld
dec
sbb
cmp
mov
sarl
mov
push
fincstp
cld
imul
add
mov
or
push
inc
xchg
out
mov
stos
sub
outsb
movsl
inc
mov
dec
add
outsb
fs
sub
sti
lock
out
mov
lret
pop
mov
mov
inc
fdivr
xor
push
out
mov
mov
and
clc
fucomp
mov
mov
pop
call
sub
lods
push
imul
sbb
pop
in
add
pop
movsb
lea
test
addr16
mov
sbb
dec
dec
push
dec
lahf
mov
aas
or
shrl
inc
leave
mov
testb
stos
daa
jg
loope
sti
lods
pop
out
andb
inc
fbld
sti
xchg
fwait
push
shlb
fdivl
imul
daa
sub
out
nop
psubb
mov
dec
xchg
sub
faddl
cld
xchg
call
pop
out
mov
inc
inc
in
cmpl
pop
popf
fwait
mov
mov
out
jb
mov
pop
cs
or
lds
jp
sub
and
les
cmp
xchg
inc
roll
push
mov
xchg
cmp
and
xchg
in
jb
imul
mov
xor
xor
lahf
call
iret
test
jne
xchg
clc
add
mov
jle
sub
js
mov
inc
cltd
fildl
sbb
outsb
fdivrs
xor
sbb
lret
ljmp
lock
pusha
pop
xor
out
xor
jbe
sbbb
pop
jnp
call
mov
cmp
mov
mov
xchg
ret
es
xchg
cmp
inc
cltd
sbb
cmp
int3
cmpsl
gs
and
in
bound
dec
dec
enter
gs
std
xchg
icebp
jecxz
subb
fildll
stos
push
and
repz
das
sbb
push
xor
sbb
push
jo
push
and
jne
xchg
aaa
and
cmp
jle
rcrl
fmull
xorb
test
insb
sbb
rol
sub
or
and
xchg
iret
fiadds
addr16
gs
jbe
bound
popf
jg
stos
int3
push
repnz
sub
and
xor
sbb
stc
jo
pop
cmpsl
inc
add
int
xor
xchg
xor
push
push
and
out
sbb
mov
push
insb
jne
mov
cmp
xchg
repz
aam
adc
test
inc
dec
out
dec
mov
jne
inc
je
inc
mov
mov
mov
mov
stos
jg
sub
lcall
lret
sbb
das
data16
push
cmp
test
cmc
addr16
sub
sbb
mov
add
das
in
push
mov
pop
dec
lods
bound
push
ja
sahf
lods
sbb
inc
loopne
cmp
pop
cmp
push
fdivs
inc
xchg
dec
lret
xchg
addr16
test
sub
jne
mov
mov
or
mov
lods
rcll
sbb
cmpsl
lods
imul
sbb
mov
sub
pusha
fnsave
dec
test
popa
int
loope
mov
sub
add
sbb
aam
dec
inc
sbb
add
jo
mov
test
inc
lods
or
pop
mov
imul
sbb
shlb
in
push
sbb
mov
pop
xchg
sti
xchg
sub
dec
pop
sub
cmp
mov
inc
dec
push
outsl
and
mov
insl
add
sbb
inc
jne
orl
inc
out
scas
iret
mov
and
addr16
repnz
int3
xor
cmpsb
and
xcrypt-ofb
cmpsl
outsb
iret
cwtl
dec
in
call
mov
clc
and
fisttpl
push
sbb
pushf
inc
push
testl
insb
ffree
jo
leave
mov
xchg
clc
test
mov
push
popa
and
notl
jnp
aaa
jnp
jle
lock
sbb
push
add
sbb
mov
lea
loop
pop
out
jl
pop
mov
scas
dec
dec
pop
push
les
ljmp
clc
cmpsb
movlps
fisubs
pop
jl
pushf
test
inc
in
mov
out
iret
decb
inc
fidivs
lret
scas
mov
jne
aas
mov
or
daa
test
pop
dec
cli
cmp
jp
cmpsl
jae
wbinvd
outsb
std
js
mov
mov
mov
ret
jo
adc
mov
mov
divl
lret
aam
scas
pop
js
pop
lea
adc
out
adc
or
mov
mov
sub
pop
insb
cwtl
xor
int3
mov
lcall
and
sbb
mov
inc
and
pop
mov
movsl
jge
push
or
add
xchg
push
outsl
das
cmp
outsl
pop
fsubs
sbb
outsl
add
dec
stos
nop
pause
fwait
push
add
aas
loope
mov
jle
mov
aad
js
mov
sub
dec
daa
dec
cmp
pop
mov
xor
sbb
or
mov
sub
sub
or
subl
cmp
and
jmp
ficoms
pop
divb
outsl
pushf
inc
mov
test
cwtl
nop
jecxz
push
jg
scas
movsl
lds
daa
or
imul
test
out
cltd
xchg
test
in
adc
hlt
int
mov
mov
mov
adc
sbb
out
xor
insb
rcl
imul
sbb
xor
icebp
in
cmp
negb
sbb
inc
push
loope
test
out
hlt
add
test
jns
loope
movsb
lock
xchg
jb
mov
shrb
add
sbb
imul
jb
pop
sub
push
xor
pop
inc
js
int
cltd
inc
xchg
xor
mov
leave
pop
sahf
test
dec
add
call
mov
pop
dec
inc
cs
insb
call
std
mov
sbb
pop
in
notl
loope
sbb
js
arpl
xor
push
sbb
ljmp
adc
xor
lds
mov
clc
jbe
outsl
xor
test
es
xchg
std
or
lock
rorb
fidivs
fisubs
into
fldenvs
ljmp
cmpsb
ret
adc
or
xor
dec
shlb
daa
dec
jns
jmp
test
cmc
mov
pusha
aad
insb
cmp
lods
sbb
dec
daa
pop
or
inc
cmpl
test
cmp
fisttpll
pushf
notl
adc
or
mov
insl
add
mov
enter
shlb
js
inc
xor
push
mov
dec
jg
in
mov
in
leave
mov
cmpsb
jns
jmp
lea
in
outsl
adcl
mov
imul
icebp
loop
jbe
push
call
sub
jecxz
or
out
loope
mov
mov
pop
adc
pop
test
pop
xorb
pop
lahf
mov
subb
xor
test
ret
mov
shlb
sti
dec
gs
sbb
cli
mov
xchg
mov
inc
nop
rorw
sub
mov
icebp
loopne
or
fdivrl
imull
xor
xchg
into
fwait
clc
rorl
mov
or
xor
xchg
aad
data16
and
and
adc
mov
push
inc
fwait
jl
and
cmp
mov
and
add
jbe
out
jnp
out
loop
xor
pop
or
cmpsl
inc
out
lds
mov
sbb
push
sbb
outsl
and
cltd
andl
push
or
mov
xchg
aad
adc
and
mov
repz
mov
dec
gs
std
sbb
hlt
cmp
xor
rolb
mov
test
in
popf
inc
stos
insb
aam
nop
mov
xchg
fcompl
scas
fdivrs
loopnew
sub
je
js
repnz
sub
mov
pop
in
js
jle
fwait
lret
mov
arpl
lret
dec
pop
je
mov
inc
dec
out
and
push
lcall
outsl
push
out
not
or
jae
lods
add
mov
and
outsb
add
imull
cmpsb
or
push
jge
in
mov
repnz
push
subl
popf
in
mov
or
jle
inc
lock
xchg
movsl
cmpsl
jmp
loope
cmpsl
test
cmp
jns
loope
addr16
sub
xor
jnp
pusha
popf
clc
js
push
das
loope
negl
addr16
mov
loopne
gs
mov
lret
imul
lahf
aam
sub
popa
insb
cmp
lods
sub
fidivl
sub
jle
out
mov
pop
xor
call
insl
pop
pop
mov
es
sub
push
jmp
cmp
and
flds
in
jnp
xor
aaa
lret
shll
aam
into
inc
addr16
jg
push
in
mov
fmul
dec
je
jge
or
xchg
sbb
push
push
inc
jp
mov
bound
repz
cmc
or
dec
xor
dec
jno
cmp
lods
lea
xchg
pop
mov
js
jae
out
push
mov
loopne
pop
andb
gs
fxch
adc
cmc
dec
sbb
mov
int3
add
ret
aaa
repnz
lret
dec
mov
sbb
jne
sub
movsb
inc
jbe
test
outsl
push
mov
push
mov
sub
or
pop
pusha
push
and
in
fdiv
bound
sub
int3
jl
pop
inc
mov
lea
jnp
aaa
in
mov
movsl
sti
jp
inc
xor
mov
hlt
in
jmp
cmp
shlb
cmpsl
popa
mul
cltd
fists
mov
dec
mov
mov
test
mov
je
mov
jle
inc
stos
outsl
push
or
jecxz
inc
fwait
jle
ret
or
in
xor
mov
stos
xor
mov
mov
or
push
ds
jo
sbb
mov
xchg
mov
movsl
movsb
push
sub
cmc
cmp
bound
insl
xchg
and
addr16
jecxz
push
jo
mov
outsl
in
fnstenv
arpl
dec
xchg
loopne
pop
pop
lahf
sbb
lock
movsb
mov
sti
mov
lods
nop
and
jno
jp
enter
lret
pushf
movsl
ljmp
in
and
mov
cs
cmp
mov
pop
push
jae
sbbb
xor
inc
xchg
pusha
and
adc
nop
imul
push
pop
ret
mov
sbb
xchg
fsubs
cmc
push
inc
rcrb
mov
adc
inc
mov
in
test
in
test
xor
roll
cmpsl
add
xor
push
es
aaa
cmpsl
dec
adc
mov
dec
maskmovq
mull
sti
ss
add
mov
clc
and
xchg
mov
xor
sub
lods
mov
pop
xchg
cmp
push
push
mov
lods
outsl
adc
adc
cmp
mov
popf
or
pop
sti
pop
sbb
dec
shr
mov
pop
ljmp
stos
jnp
addr16
and
lods
dec
repz
mov
adc
push
pop
inc
movsl
repnz
or
fcoml
mov
jne
push
iret
shll
aad
aaa
decl
adc
jmp
push
leave
pop
and
dec
jp
mov
movsl
lock
sahf
push
inc
test
out
aas
movsb
push
int3
push
jo
stos
push
cltd
dec
adc
outsb
and
scas
jecxz
fldl
cmp
push
ficompl
push
sbb
cmp
shll
mov
inc
adc
std
mov
sub
addr16
hlt
xor
dec
lds
divb
std
sub
push
out
push
push
lds
mov
xor
icebp
sbb
mov
mov
add
adc
add
mov
jo
into
push
and
addr16
popf
jns
scas
mov
add
movsb
aaa
and
mov
fistpll
inc
fs
adc
popa
scas
inc
sub
into
mov
es
inc
xchg
add
mov
imul
shll
push
push
cmp
cmpsb
cmp
pop
sub
popf
inc
add
fcmovnu
fldcw
test
mov
push
or
mov
fistps
loopne
movups
mov
and
pop
sub
scas
repnz
or
xchg
lret
push
mov
inc
cs
xor
inc
or
das
push
pop
jecxz
bound
push
adc
pop
aaa
lret
sbb
aam
repz
dec
pop
ss
push
inc
adc
test
mov
or
in
fdivr
mov
jne
out
pop
jae
sub
xchg
rcr
push
xchg
iret
pop
mov
inc
addr16
xor
mov
pop
cmp
inc
xor
dec
mov
pushf
dec
xchg
mov
rcrb
aas
adc
xor
xlat
mov
or
mov
jmp
loopne
test
cmp
jp
in
test
adc
mov
roll
movups
add
mov
pop
fs
adc
cmp
or
shrl
test
sub
lods
movsb
scas
fcoml
xchg
push
sub
insl
cmp
je
iret
ret
stc
mov
hlt
lcall
popf
mov
scas
rorb
bound
fcmovne
mov
fadds
arpl
test
dec
cmp
in
cmp
xchg
add
mov
lret
mov
mov
clc
loope
ljmp
cmpsl
pop
xor
icebp
inc
xchg
mov
mov
dec
push
inc
xor
scas
mov
sub
jne
push
pop
cmp
call
push
and
mov
cmp
ljmp
jg
xchg
xchg
std
and
sub
or
adc
je
cmc
lds
pop
and
iret
jp
addr16
shrb
xchg
mov
push
xor
inc
lcall
stc
mov
push
cmp
xchg
add
call
shll
enter
lret
xor
sbbl
push
out
add
jns
cmp
daa
movsb
xor
dec
inc
dec
movsb
mov
mov
sbb
sub
jns
push
jb
aam
pushf
adc
and
add
jmp
sub
inc
xor
movsl
jne,pn
les
out
mov
jg
add
insl
repz
es
stos
or
test
inc
cmpl
cmpsl
in
add
xchg
sbb
pop
xor
lock
mov
xor
xlat
mov
int3
daa
mov
jle
sub
push
imul
jne
or
sbb
sub
in
pushl
sub
xor
test
dec
into
lahf
xor
daa
orb
fnstsw
scas
enter
fucomp
dec
inc
arpl
inc
and
cmpsl
lock
inc
fwait
adc
sub
fdivr
lret
xchg
xor
in
test
or
mov
daa
cmpsl
xchg
lea
mov
sbb
loop
loop
mov
push
jne
pop
negb
sub
arpl
xor
test
cmp
push
lea
insb
testl
lock
add
push
loopne
and
xor
call
icebp
in
popa
fstl
test
outsl
or
fisubrs
jnp
imul
out
inc
pop
ret
sub
jmp
and
movsb
pop
inc
fildl
hlt
xchg
mov
sbb
rorl
mov
lea
cwtl
and
pop
sbb
in
dec
lock
lcall
lds
in
cltd
inc
pop
push
lcall
xchg
sar
mov
and
int3
fbld
testl
ficoms
xor
pop
or
or
cmp
and
pop
bound
aas
mov
jp
sbb
sbb
xchg
pop
sub
lods
jmp
push
fbstp
add
mov
imul
cld
sbb
loop
pusha
adc
js
jle
xchg
sbb
and
mov
sahf
lea
sti
fwait
int3
repz
lcall
test
ds
test
pushf
idivb
adc
fisttpll
mov
jo
pop
lods
push
fbstp
cld
mov
inc
ffreep
jne
fimuls
mov
xchg
and
xor
mov
outsb
cwtl
mov
mov
ja
push
in
sub
frstor
pop
bound
dec
mov
sbb
mov
push
das
and
jno
mov
loop
cmp
xchg
enter
sti
adc
add
mov
jle
shlb
cmp
dec
dec
mov
cmp
inc
ss
aas
cmp
and
push
lods
inc
lods
mov
xor
adc
movsb
xchg
jl
jmp
xlat
pop
inc
fldt
inc
cmp
or
push
sub
xor
ret
sbb
xor
xchg
lahf
lods
mov
pop
push
xchg
ret
les
std
push
clc
aas
enter
fdivrs
std
ret
xchg
mov
mov
or
int3
lret
xor
pushf
fbld
pop
dec
fadds
mov
and
cltd
sub
sbb
jbe
mov
add
xor
pop
dec
xchg
cmp
int
pop
es
xchg
es
push
mov
cmp
xor
fs
sub
jl
and
xlat
dec
mov
or
testl
jge
addb
in
jecxz
mov
and
leave
aam
daa
ja
add
shlb
and
cmpb
mov
fs
cmc
push
add
aad
mov
lods
imul
ljmp
inc
test
adc
in
hlt
xor
aas
or
pop
push
and
repnz
xchg
pusha
xorb
xchg
popa
movsb
inc
or
mov
repnz
or
jo
mov
pop
popf
div
xchg
sub
fs
sbb
stos
jmp
adc
xor
out
js
push
inc
lret
inc
ret
notb
xchg
mov
pop
mov
or
inc
push
jge
xchg
negb
mov
dec
adc
add
xchg
stos
cli
aaa
cmpsb
adc
lret
fdivrl
sbb
mov
daa
push
adc
ljmp
jge
mov
xchg
pop
push
jecxz
scas
dec
idivl
jne
jle
push
xchg
mov
aam
pop
jle
aas
pop
loope
xchg
push
jg
cmp
jo
xlat
mov
add
addr16
sbb
sub
push
ljmp
mov
adcl
add
sub
jl
and
xor
cmp
jg
mov
xor
nop
inc
xchg
or
and
popf
out
pop
int3
push
jo
js
fs
xchg
mov
and
popf
loope
pop
movsl
adc
movsl
mov
loopne
push
out
sbb
mov
int
cwtl
iret
mov
and
mov
test
and
bound
push
lea
nop
das
insl
shll
mov
adc
sarb
iret
dec
push
int
roll
and
xchg
inc
lret
xchg
loope
push
dec
mov
lods
mov
adc
push
cmpsl
test
lret
inc
push
movsl
addb
mov
icebp
xchg
inc
adc
and
nop
fistpll
or
out
adc
sub
outsb
jns
mov
xlat
dec
aad
dec
lcall
or
aas
inc
inc
dec
addr16
dec
gs
rcl
jns
pop
adc
fmull
inc
std
fistl
mov
or
mov
sub
sub
add
addl
scas
dec
stc
xchg
cmp
dec
ljmp
cmp
xor
or
clc
mov
ficoml
add
idivb
inc
addr16
push
ss
outsl
and
mov
add
ljmp
in
aas
add
cmp
adc
es
inc
sub
enter
pop
mov
pop
jns
lods
stc
or
gs
cmp
sub
cmp
popa
std
push
or
fwait
or
movsl
arpl
iret
push
xchg
flds
cmp
cmc
jp
cmp
cmp
jno
mov
jae
dec
cmp
shrl
mov
cmpl
sbb
adc
cmp
out
lea
andl
and
rcrb
stos
cmpsb
cmpsb
int
push
in
and
orb
enter
or
pop
es
xchg
loope
mov
test
sbb
enter
repnz
inc
or
xor
jp
mov
addr16
or
jb
xor
jns
xchg
jae
cmp
lret
push
cmp
adc
cltd
call
mov
aaa
jne
sbb
adc
pop
pop
ret
mov
repz
cmpl
loope
or
inc
dec
fisubs
dec
stos
iret
sbb
pop
imul
lods
cmp
sbbl
int
jg
test
movsb
icebp
fisttpll
loop
sahf
cld
mov
mov
mov
cld
popa
ja
and
hlt
decl
fadds
pop
mov
jbe
outsl
ja
xlat
pop
pop
clc
ret
test
and
adc
aad
leave
mov
stos
or
loop
lahf
shlb
xor
test
mov
es
nop
xor
jecxz
dec
xor
mov
sbb
in
popaw
nop
outsb
int3
or
mov
pop
lahf
xchg
push
f2xm1
sahf
dec
cwtl
bound
mov
je
filds
xchg
mov
pusha
fldcw
das
je
adc
clc
and
inc
int3
pop
orb
or
pop
mov
das
jbe
movsl
sub
mov
or
and
aad
rol
push
cld
sbb
ret
jg
sahf
fxch
push
imul
bound
inc
push
fistps
ss
jne
mov
int
ficompl
les
sarb
and
mov
movsb
sbb
mov
mov
insb
mov
add
xor
mov
dec
sbb
sub
mov
adc
add
xchg
and
in
cmc
pop
stc
mov
iret
adc
and
sbb
repnz
add
test
pop
push
mov
pop
hlt
mov
sub
push
and
sbb
test
cli
and
or
push
jns
sub
int3
pushf
sarb
imul
inc
outsl
cmc
pusha
cli
nop
and
add
daa
mov
iret
aas
cld
cmp
or
loop
xor
mov
jle
lea
jl
repz
sti
lret
mov
dec
push
imul
dec
rol
pop
shlb
push
xchg
add
daa
cld
loope
lock
xchg
insb
clc
aas
xchg
sbb
xchg
dec
or
add
loope
movsb
outsb
xchg
sbb
lcall
repnz
icebp
mov
mov
adc
sub
mov
mov
cmp
into
jnp
int3
and
out
lea
fdiv
cmc
hlt
cmpsb
std
sub
clc
jecxz
xchg
push
push
push
xlat
pop
mov
push
push
sbb
adc
shlb
sbbl
jmp
xchg
inc
push
scas
paddsb
pop
mull
and
add
push
leave
xchg
das
mov
inc
xor
js
sbb
push
vpsrlw
int
inc
mov
mov
or
clc
test
inc
sbb
stos
dec
testl
dec
inc
add
in
xchg
mov
or
jnp
pmulhuw
pop
sub
add
xchg
cwtl
repz
aaa
inc
icebp
scas
call
inc
dec
gs
mov
mulb
dec
xchg
cld
sub
repnz
add
ss
sbb
lds
inc
cltd
cmp
pop
pop
mov
pop
lods
xor
ficoml
xchg
jns
sbb
inc
xchg
sub
mov
mov
and
bound
leave
mov
add
idivl
xor
in
add
cmp
cmp
mov
insl
popf
ss
xor
sub
jle
fadd
mov
push
xchg
sbb
jo
xor
sub
dec
lret
push
sbb
in
imul
lods
dec
add
or
xlat
push
jg
mov
xchg
pusha
loop,pn
pop
and
adc
test
fwait
push
scas
aaa
cli
ss
je
mov
cmova
cwtl
dec
xchg
nop
ljmp
mov
call
es
adc
fs
mov
push
mov
fs
cld
out
repnz
daa
mov
sbb
fcomps
inc
pop
fsubs
jmp
mov
xchg
mov
lock
jg
xchg
test
sbb
pop
rcl
mov
pop
mov
aas
sbb
sbb
lea
push
pop
shlb
in
idiv
sbb
shr
icebp
cmp
push
sbb
add
mov
stos
pop
rcll
pop
mov
dec
dec
jae
jmp
pop
xor
inc
sbb
repz
push
divl
cmp
sub
or
add
mov
pop
mov
out
mov
loop
insb
mov
test
cmp
nop
mov
mov
int3
call
push
rolb
das
push
movsb
lret
sbb
cmp
je
fwait
sub
jmp
mov
ret
and
cmc
jmp
mov
sub
stos
cmp
jb
jo
pop
mov
ljmp
pop
push
movsb
mov
out
repz
xchg
je
and
mov
cmp
scas
outsb
and
and
test
pushf
hlt
fabs
push
lods
into
test
mov
jecxz
xchg
pop
mov
loop
fidivs
and
jo
dec
mov
dec
out
and
sarl
push
mov
in
cli
mov
pop
test
jg
cmc
add
sbb
lret
frstor
or
or
pop
insl
addr16
cltd
insl
lahf
mov
adc
inc
or
fbld
loopne
mov
dec
xor
sbbb
mov
pushf
inc
xchg
or
pop
push
sub
xor
lods
mov
or
cmpsl
cld
mov
cmpsb
push
imul
fstps
lods
rclb
divl
jnp
push
adc
or
push
jno
and
jno
inc
fwait
adc
jecxz,pt
mov
cmp
out
mov
pmullw
aad
enter
pop
fidivrs
sbbb
add
pop
push
test
fs
xchg
pop
xlat
pop
pushf
insb
sub
in
pop
mov
pop
sbb
das
neg
movsl
jbe
add
xchg
sub
add
lcall
addr16
stos
adc
cltd
pop
lret
mov
sbb
push
aaa
mov
in
std
sub
lea
sub
mov
outsl
mov
xlat
imulb
pop
fcomps
out
pop
ret
xor
shr
in
icebp
popa
push
push
inc
nop
sbb
invd
popa
jo
mov
jno
adc
push
das
lods
or
mov
dec
xlat
cwtl
inc
add
pop
inc
js
push
mov
inc
jle
pop
sub
dec
sub
xor
or
jno
bound
lds
jle
mov
hlt
addr16
lcall
inc
jge
insl
jg
sub
inc
insl
sbb
or
aad
icebp
int3
out
mov
shll
ja
mov
aad
movsb
out
push
jmp
test
push
loope
inc
repnz
cwtl
shl
cld
test
cmpsl
call
leave
divb
xchg
mov
adc
mov
aam
dec
xor
or
inc
loopne
xor
fiadds
stc
mov
cmp
add
and
mov
push
jg
pop
or
push
lahf
ljmp
lock
jecxz
inc
arpl
inc
movsb
out
push
sub
push
adc
test
lahf
ret
mov
repnz
sub
push
into
out
ljmp
mov
or
xchg
fxch
fstpl
mov
dec
pop
sbb
ret
pushf
push
pop
or
xor
out
popa
repnz
aas
aam
insb
jno
rcrl
shrb
sbb
mov
insb
sbb
add
mov
jae
cmpl
inc
cltd
test
add
outsb
mov
sbb
adc
cmp
mov
imul
out
int
jno
das
loop
out
popf
xor
insl
nop
push
out
out
pop
add
jecxz
rcrl
cmp
insl
popa
mov
popf
mov
pop
pop
lods
insl
and
dec
inc
push
insb
stos
cmp
xor
outsl
pop
pusha
mov
push
jl
mov
out
enter
mov
sub
dec
xchg
or
pop
mov
sahf
add
jo
cli
and
xchg
in
imul
je
cmp
push
test
cld
mov
adc
in
mov
xor
sbb
pop
cli
dec
add
inc
pop
sbb
mov
inc
push
fdivl
or
leave
es
ret
scas
iret
push
push
data16
mov
test
out
stos
dec
call
out
inc
adc
scas
mov
lret
adc
push
and
insb
call
subb
cmpsl
pushf
inc
sahf
cld
movsl
lds
aam
dec
pop
push
cmp
lret
jbe
mov
jg
or
dec
clc
dec
or
mov
sbb
rorl
cmp
xchg
cmp
sub
push
inc
or
sbb
cmp
mov
add
xor
aaa
sub
std
leave
adc
push
mov
js
into
jmp
lods
or
push
gs
push
inc
push
lods
pop
sub
xlat
cwtl
mov
clc
cmc
dec
cmp
mov
inc
mov
pop
in
sub
repz
iret
out
fwait
cmp
ffreep
enter
sub
popf
sbb
lea
dec
rcr
daa
add
inc
je
testl
or
mov
pop
mov
inc
fldln2
push
jecxz
jne
stc
decb
sub
scas
repz
sub
push
sbb
cmc
add
mov
cmc
daa
lret
inc
std
jecxz
leave
add
sbb
rcll
inc
xor
lods
lods
push
mov
sbb
jl
arpl
or
pop
mov
xchg
mov
dec
fmul
sbb
pop
xor
push
das
pusha
out
icebp
xchg
adc
loop
adc
movsl
int
mov
aad
frstor
lds
in
dec
shrb
mov
add
mov
xor
add
scas
loopne
dec
sub
pop
mov
jb
ljmp
mov
shrb
pop
sbb
and
xchg
push
adc
mov
hlt
stc
and
dec
pusha
pop
cmpsl
hlt
push
pop
in
cs
and
out
addr16
xchg
sbb
push
inc
xchg
lds
sahf
cmp
out
mov
sarl
inc
testb
jecxz
inc
and
rorb
leave
xchg
lret
lods
psubb
jae
cmp
jp
dec
fucomip
and
loope
arpl
pop
ss
xor
xor
addr16
mov
mov
sbb
pop
inc
mov
add
sbb
sti
aaa
or
sbb
popf
or
cmp
gs
lds
scas
add
push
pop
mov
xor
jecxz
push
cltd
sbb
mov
lret
cmpl
jge
sub
aam
popa
push
mov
in
sub
stos
movsl
mov
adc
push
jbe
subb
stc
cmp
test
push
dec
scas
dec
mov
xchg
movsb
cmp
jae
aad
mull
faddl
mov
mov
push
mov
mov
int
jecxz
adc
std
fwait
mov
mov
insb
xor
cld
mov
clc
ss
add
add
pop
inc
cmp
pop
inc
ss
aam
loop
nop
repnz
cmpsb
cwtl
loop
xchg
dec
setns
aam
adc
lret
sar
add
mov
or
movsl
rorl
push
sub
das
sbb
xchg
lcall
xchg
aam
mov
xor
jbe
pusha
mov
jg
sti
mov
repnz
ret
push
adc
cmp
push
dec
and
push
popa
pop
cli
jns
push
push
out
loopne
pop
rclb
je
scas
sub
test
sahf
adc
aam
mov
or
mov
test
mov
call
insb
lods
addl
jns
pop
subb
lock
sub
adc
jmp
jne
ljmp
or
sti
inc
mov
cli
int
insl
lds
adcl
fisubrs
add
and
loope
mov
cmp
push
mov
inc
mov
stc
lahf
es
pop
icebp
xlat
gs
fidivs
pop
fdivs
fdiv
cmc
xchg
jg
push
adc
cmp
loope
jmp
adc
ret
add
push
notb
push
mov
xchg
xchg
and
fbld
pop
xchg
ss
bound
pop
and
or
movsb
sbb
movsb
sbb
fildll
sub
fidivs
push
dec
adc
gs
sar
imulb
add
out
daa
daa
adc
mov
inc
mov
jb
in
jp
add
popa
imul
arpl
mov
dec
js
fs
mov
fldt
lds
pop
ljmp
je
jns
pop
popa
fdivrs
pop
push
sbb
push
or
or
test
jns
pop
mov
push
mov
jnp
jle
and
les
popf
pop
insb
popa
mov
or
mov
jb
sub
cwtl
pop
mov
js
mov
std
bound
bound
orb
mov
mov
ss
stc
xor
icebp
outsb
adcl
aas
adc
aas
push
sbb
stos
daa
pop
sub
outsb
popf
lahf
movsb
push
scas
adcb
in
rclb
inc
repnz
mov
packuswb
mov
mov
sti
push
imul
call
lea
gs
shlb
xchg
mov
psubsw
add
popa
in
cmp
movb
jae
cld
sbb
xlat
add
sbb
dec
stc
dec
leave
mov
and
sub
les
lahf
push
mov
setle
push
repz
jbe
pop
test
pop
xchg
inc
sbb
cmpsb
push
stos
mov
shll
outsl
mov
je
dec
pop
and
sarl
xchg
fisttps
test
aas
jmp
fidivl
out
pop
mov
out
insl
in
or
mov
pop
not
int
lahf
ljmp
les
push
popf
insl
in
fmul
outsb
or
xchg
inc
jmp
dec
sti
stc
mov
in
jmp
jmp
sub
push
pop
lret
sbb
repnz
mov
adc
rcr
mov
sub
push
cmp
sbb
in
jb
shl
aas
inc
std
pushf
pop
jb
lretw
shll
jle
xchg
arpl
inc
les
xor
and
pop
push
mov
mov
cmp
and
add
lods
cmpsl
dec
outsb
nop
jl
push
je
int
bound
xor
cmpsb
xor
and
push
pop
sbb
mov
fwait
push
inc
xor
sbb
and
out
jge
pslld
jg
enter
mov
movzbl
xor
pusha
subb
add
xor
dec
or
pop
inc
dec
inc
insl
push
fisttpll
xchg
pusha
fwait
or
jns
sti
cmp
xor
mov
push
aas
adc
jl
cmp
sar
add
push
sub
xchg
out
and
mov
xlat
pushf
push
adc
les
pop
jb
mov
push
adc
cmp
cmpsl
inc
jo
mov
xchg
loope
ret
inc
xchg
bound
test
outsl
jb
push
adc
insl
pop
gs
cmp
inc
fimull
mov
sub
loope
xchg
fistl
pop
cs
fbstp
in
addb
out
nop
jae
mov
bound
lock
jae
xchg
adc
pop
mov
rclb
push
mov
cmpsb
adc
stos
loope
hlt
or
inc
stc
imul
inc
add
dec
test
cwtl
int3
jle
lahf
fdivr
mov
push
mov
mov
add
mov
les
outsb
ja
loop
pop
adc
incb
add
nop
dec
shrb
rcrl
xor
lds
outsl
xchg
lds
xchg
jnp
scas
mov
mov
stc
cltd
adc
aad
stc
jo
negl
roll
loopne
add
sbb
lods
sbb
outsb
dec
sub
push
sub
arpl
mov
dec
push
adc
leave
sahf
out
add
aaa
pop
xor
int3
add
jno
mov
nop
adc
icebp
dec
test
pop
movsb
stos
inc
and
sub
add
and
cmpsl
pop
fdivrl
enter
out
mov
pop
popa
adc
mov
out
lahf
and
stc
pop
xchg
ret
lock
mov
repnz
or
fs
mov
movsb
gs
cmp
push
sub
mulb
nop
flds
xor
sbb
std
sbb
cli
and
out
shlb
ss
dec
aas
jg
lock
jb
lret
lea
pop
mov
popf
out
in
lea
jge
cmc
dec
mov
mov
sub
mov
pushf
test
shrb
cmp
fnstsw
push
ret
push
mov
flds
iret
mov
sbb
jle
xlat
sub
stos
ret
cmc
in
or
and
enter
sbb
mov
ja
inc
bndstx
subb
jo
mov
rclb
sbb
cmpsb
push
pop
mov
cmp
jae
es
and
jae
and
pusha
imull
scas
fnstsw
iret
out
inc
fisttpll
pop
aaa
mov
xor
jb
pop
add
cmp
pop
daa
add
mov
cmc
cmc
mov
adc
push
jnp
ss
mov
push
leave
call
sub
or
fsubl
cmc
outsb
add
aas
into
adc
cld
addl
mov
outsl
loop
btc
mov
mov
mov
lret
popa
dec
mov
fsubs
test
aam
cmp
out
and
push
cmp
sub
mov
ret
mov
outsl
aam
pop
xchg
fwait
loop
lods
enter
and
or
push
adc
mov
add
mov
cmp
jg
outsl
popa
sarl
inc
aas
sbbl
imul
enter
pop
sbb
ret
adc
mov
shlb
xor
sbb
nop
push
and
jno
sub
sbb
cld
sub
mov
jne
shr
loop
xchg
adc
out
shll
sbb
jp
js
mov
mov
xor
adc
clc
mov
sub
jp
mov
popf
mov
rcl
fsubrl
push
mov
cwtl
xor
imul
ja
jb
cmc
and
cmp
pusha
addr16
xchg
dec
fsubrp
mov
adc
rcrl
mov
sbb
shrb
sub
out
sub
cbtw
pushf
jne
fnstsw
mov
test
mov
in
leave
sub
outsl
out
sub
in
inc
test
mov
icebp
add
and
xorl
scas
add
bound
fimull
aam
insl
or
pop
or
fsubrs
shr
aaa
dec
xchg
xor
sub
and
jmp
das
xorl
push
mull
and
add
mov
sub
cs
ljmp
jne
ss
popl
cli
sbb
fidivrs
sbb
xchg
movsl
mov
outsl
pop
and
inc
and
js
and
pushf
mov
repz
mov
push
lock
add
jnp
jae
movsl
add
add
lock
or
test
add
jp
cmpb
sbb
push
push
mov
ss
xchg
sbb
dec
pop
or
orb
cmp
adc
pop
or
xor
imul
push
and
sbb
lea
int
loopne
bound
lret
enter
ljmp
repz
inc
xchg
push
dec
adc
movsl
leave
mov
mov
jne
cmp
int3
loope
xchg
pop
lods
add
jb
sub
cmpl
add
loopne
pusha
jae
jecxz
xchg
shrb
adc
or
aam
lods
mov
into
inc
out
mov
arpl
xchg
jmp
add
loopne
push
pop
loopne
mov
icebp
sbb
jnp
jmp
subb
ds
movsb
mov
popf
dec
jbe
mov
lock
loope
dec
out
nop
outsb
lods
fwait
sbb
std
and
hlt
adc
mov
into
and
dec
stos
adc
pusha
mov
outsb
fimuls
sub
pop
pop
imul
dec
mov
cmp
dec
fstp
pop
pop
mov
fdivrs
retw
jo
repz
jl
xlat
int
call
mov
nop
test
push
xchg
sub
hlt
xor
rep
add
out
aad
adc
lcall
mov
pop
jecxz
pop
dec
jl
cmc
and
int
dec
repz
mov
or
cmpsl
imul
and
mov
out
sbb
outsb
call
aaa
sarl
cmp
xchg
push
sbb
rorl
jp
jp
and
fsubr
test
pop
test
icebp
call
je
icebp
imul
mov
pop
int
mov
inc
add
jns
popf
fists
mov
adc
mov
xor
mov
cmp
lods
ljmp
int
cmc
or
jbe
xchg
hlt
orl
icebp
add
outsb
outsb
jae
dec
sbb
dec
push
repz
aas
adc
sbb
xor
push
xor
ss
xor
sub
scas
rcrb
push
fistpll
dec
addb
stos
fmulp
sbb
repnz
arpl
roll
inc
jmp
adc
xchg
jno
aaa
aaa
sub
pop
testl
addl
repnz
data16
push
inc
fidivs
sbb
push
mov
xchg
or
xor
in
into
adcl
pop
inc
das
sbb
mov
jno
clc
jno
mulb
pop
adc
jl
mov
xor
xor
pushf
or
pop
mov
out
pushf
xor
lret
ss
or
hlt
jb
jnp
sbb
rclb
xchg
sbb
push
cwtl
out
addr16
xchg
faddl
mov
mov
fimuls
out
sub
arpl
inc
les
hlt
adc
or
jne
fcoms
sbbl
sbb
and
and
gs
inc
mov
lcall
loop
or
xchg
fiadds
pusha
mov
sbb
mov
bound
xchg
out
adc
and
lea
add
mov
xor
adc
leave
mov
or
inc
pause
xchg
out
jbe
xor
imul
aas
ss
inc
data16
mov
dec
js
mov
sub
fwait
out
jp
ja
lods
lods
mov
cmp
jno
mov
mov
jo
decl
inc
sahf
jecxz
es
inc
xchg
dec
cmp
xchg
sub
mov
outsl
sub
pop
jo
leave
jecxz
insb
xchg
insb
in
ja
push
fs
addr16
dec
orb
adc
and
xchg
mov
call
sub
jnp
repz
mov
jae
cmc
iret
jp
test
push
fstl
pop
and
stc
lock
inc
andb
leave
imul
jae
or
add
or
mov
repnz
rorb
jge
inc
inc
xlat
mov
sbb
mov
out
sarb
rorl
dec
mov
sub
jne
fnstcw
sub
xor
ja
cwtl
cmp
jle
pop
or
cmp
outsl
xchg
pop
pop
jge
pusha
xor
js
stos
or
fnsave
jl
add
loop
adc
push
push
repnz
sbb
push
loope
roll
es
xchg
cmp
xchg
xchg
cwtl
sahf
fldl
push
jns
jle
iret
adcb
add
cltd
push
jmp
roll
nop/reserved
push
sti
adc
adc
sub
pop
adc
fidivrs
jns
cmp
loopne
xchg
mov
xor
arpl
stc
cmc
icebp
push
mov
nop
sbb
xor
std
cmp
mov
xchg
cltd
push
dec
mov
ja
fs
out
jae
scas
jae
test
insl
mov
aam
xor
xchg
int3
loopne
lcall
sub
cmpsl
add
aaa
mov
imul
hlt
fwait
insl
je
add
popf
rdpmc
mov
jnp
sbb
inc
jge
sub
dec
sahf
jp
sub
out
push
ret
test
jns
addr16
xchg
mov
jns
mov
rolb
nop
cmpsl
imul
jb
jmp
pop
inc
lcall
les
mov
xchg
sbb
adc
sbb
jae
out
jmp
xor
fisubrl
shll
pop
jb
sahf
imul
sub
push
outsl
incb
lea
or
fmuls
xor
push
jge
fcoml
call
imul
xor
jns
scas
push
sbb
sub
xor
and
imul
xchg
bound
jmp
call
aas
gs
mov
mov
adc
popa
jecxz
dec
test
push
lret
xlat
jl
mov
pop
nop
sub
sahf
ljmp
dec
add
xor
fsubl
jbe
add
add
sub
aaa
fnsave
data16
sub
test
gs
pusha
cmp
addb
fsubp
stos
sub
push
mov
xor
cmp
mov
pop
fs
outsl
pop
xor
xlat
fistps
test
arpl
mov
cltd
out
sub
rcrb
dec
jb
aad
in
mov
pop
and
imul
pop
lret
out
cmpsb
cmp
mov
adc
and
jecxz
jb
pusha
mov
in
pop
sub
pop
sti
ds
jne
add
outsb
sbb
cmp
push
mov
cmp
and
clc
push
xchg
pushf
andl
iret
insb
pop
cmp
out
dec
out
pop
sbbb
sub
lcall
push
arpl
out
bnd
mov
sbb
mov
popf
shl
ss
hlt
mov
jmp
add
xchg
xchg
int
adc
and
and
mov
fwait
pop
pop
ljmp
xchg
push
cmp
pop
mov
fadds
popa
shrb
sub
movsl
push
out
add
shl
out
mov
in
cmpsb
outsl
sti
vhaddpd
stc
jbe
push
inc
or
insl
ja
mov
add
lock
mov
repz
xor
lock
pop
xor
push
ret
sbb
imulb
lds
adc
mov
icebp
shll
sbb
cmp
mov
ret
movsb
lahf
cmp
ror
cmp
loop
adc
aas
push
stos
gs
sbb
loop
imul
cwtl
inc
pop
iret
dec
std
frstor
rorb
mov
imul
sti
aaa
mov
aam
out
add
dec
mov
stc
cwtl
lret
cmp
xor
adc
dec
loop
fnstsw
push
push
jo
xchg
jl
dec
out
loope
in
xor
fmull
ljmp
mov
das
push
lock
cmp
stc
mov
loopne
mov
subb
mov
push
push
pop
enter
mov
pop
xor
repz
xor
mov
and
in
loopne
loopne
sbb
jnp
and
out
sub
xlat
out
ret
ret
adc
jmp
in
dec
cltd
mov
imul
push
pop
xchg
pusha
lods
xchg
jbe
iret
repz
idivl
nop
inc
xor
lret
divl
ja
aam
shr
dec
xor
loopne
cmp
incl
idiv
cli
mov
pop
mov
xchg
inc
sub
pop
inc
gs
jno
into
stos
cmp
xlat
jmp
jp
sub
sbb
je
jbe
iret
pop
mov
xchg
mov
push
rcll
popa
or
iret
push
int3
dec
lcall
pop
sub
jmp
push
and
jno
push
test
mov
cmp
dec
flds
iret
cmp
les
mov
js
adcl
push
cmp
cmc
aas
insl
pop
ds
ss
dec
dec
xchg
dec
das
jb
mov
push
jbe
imul
rcr
daa
shll
into
in
fisubl
xchg
push
add
rorl
lods
scas
push
sub
js
subps
sahf
mov
sbb
stos
cli
js
mov
mov
ljmp
pushf
jns
int3
ss
dec
jl
mov
iret
int
add
jmp
add
fdivrl
jo
ja
aad
push
inc
cmp
dec
push
js
call
adc
xor
push
dec
icebp
arpl
cltd
ljmp
jp
inc
pusha
mov
add
cmp
push
xchg
frstor
andb
mov
sub
call
sbb
shr
xchg
mov
fs
mov
in
fisubrl
or
mov
bound
fwait
sbb
adcl
cli
and
outsl
insb
hlt
or
cmp
xchg
sbb
aam
adc
js
imul
fildll
and
mov
mov
push
sbb
adc
sbb
push
push
cs
ja
cmpsl
cs
mov
jmp
scas
adc
add
adc
stos
cmp
int
push
and
mov
out
sbb
dec
sbb
cmpl
sub
xor
in
jge
jecxz
push
out
ljmp
adc
dec
shll
enter
jno
inc
es
sub
stos
adc
stos
insb
sub
ret
and
in
bound
sub
stos
xchg
push
aas
dec
sahf
adc
jmp
loopnew
sarl
sbb
xchg
push
outsl
into
andl
inc
popa
mov
cwtl
ret
scas
sub
iret
adc
movsb
pop
int
filds
out
sub
and
jle
inc
fisubrl
nop
fs
lods
movsb
ljmp
sub
orl
lods
addr16
sbb
push
imul
mov
daa
pop
adc
daa
jne
xchg
frstor
fs
jnp
xchg
fstps
jmp
lcall
shlb
jbe
and
ljmp
mov
daa
jmp
push
out
jo
decl
jno
jb
ja
inc
sbb
repz
mov
sbb
lods
pop
jl
xor
inc
adc
jl
dec
jno
inc
vpsrld
bound
fiadds
push
pop
ljmp
mov
or
filds
popa
inc
pop
mov
or
mov
mov
mov
xor
lahf
xchg
aam
nop
push
aad
or
sub
jne
pushf
ds
pop
mov
in
dec
jo
sub
mov
lods
pop
cmc
add
pop
or
ret
push
test
in
jb
and
dec
or
fs
mov
ficoms
dec
enter
rorl
lahf
mov
mov
test
enter
cmp
pop
outsl
cld
xchg
mov
inc
jns
xor
jmp
loop
mov
mov
push
imul
mov
push
ret
push
mov
push
stos
and
into
xor
sub
cltd
rorl
and
leave
cmc
adc
lahf
push
lea
popf
shl
ret
mov
xor
push
or
filds
scas
jp
and
je
stos
mov
in
jmp
fcmovu
dec
and
xchg
pop
loopne
addl
xor
ss
pop
addb
aam
roll
mov
push
and
pop
pop
xchg
dec
mov
daa
inc
pop
jp
sar
js
inc
outsb
push
cld
sbb
jae
data16
xchg
pop
shll
push
scas
add
mov
dec
sahf
sahf
js
jle
pop
aad
dec
add
push
subb
orb
in
mov
inc
sub
scas
insb
xchg
cmp
ja
outsb
sub
add
push
cltd
push
loop
jb
sbbb
pop
clc
mov
adc
dec
lods
fcompl
insb
outsb
cmp
cmp
ds
mov
and
jbe
lea
cmc
dec
jne
mov
xchg
pop
lods
mov
mov
add
mov
jge
push
mov
dec
xor
stos
lods
jg
xor
ljmp
push
movsb
cmpsb
lret
in
sub
jns
pop
fisttpl
mov
xor
and
jecxz
ficompl
add
lods
test
pushf
testl
stc
adc
test
std
insb
xor
shl
pop
dec
cmpsb
std
pop
cmpsl
shrb
in
rcrb
icebp
mov
and
mov
in
jmp
sbb
daa
ret
xchg
fisubrl
test
add
rorl
xor
popa
xchg
pop
aas
jle
shlb
mov
icebp
sbbb
aam
mov
and
push
inc
outsb
in
test
mov
lret
add
mov
adcl
out
les
repz
ss
mov
adc
add
sbb
lahf
adc
adc
adc
mov
jmp
in
mov
cld
add
mov
fldcw
mov
inc
imul
int3
lahf
loopne
jno
stc
lret
add
or
sbb
out
mov
push
push
dec
sub
add
mov
adc
mov
rcrb
loop
lods
loopne
hlt
adc
pop
sub
adc
inc
xchg
cwtl
cmp
push
mov
adc
xor
jo
fisttpl
lock
mov
enter
dec
mov
or
outsl
icebp
iret
test
and
inc
jns
shlb
fxch
xchg
cwtl
and
inc
add
stos
jg
mov
mov
mov
inc
icebp
pop
xchg
inc
adcb
out
inc
adc
clc
sbb
xor
or
clc
aas
mov
out
pop
mov
mov
icebp
jbe
jle
push
mov
or
xchg
add
pushf
pop
pusha
dec
cmp
push
cmc
pop
insl
sbb
add
pop
mov
mov
cmp
jmp
push
xor
mov
push
daa
ret
push
xchg
mov
aam
jne
pop
sbb
mov
mov
add
push
mov
mov
imul
push
mov
lea
or
addl
xchg
out
cmp
pop
in
xchg
xchg
fwait
jg
inc
enter
inc
dec
inc
sub
sub
mov
loopne
loop
sub
cmp
jae
out
sub
jae
vdivps
jmp
cmc
gs
imul
popf
ret
test
jmp
and
push
decb
xchg
js
push
mov
sub
lcall
nop
cmp
cmpsl
ds
shll
dec
cmpb
lods
sub
mov
arpl
in
adc
jge
ja
loopne
inc
adc
cmpsl
mov
mov
mov
mov
cmp
sti
dec
pop
or
cmp
fcoml
int
int
sub
dec
xor
sbbl
loop
clc
push
jns
mov
inc
mov
cmpsb
cld
push
jl
lcall
pushl
int3
movsb
or
lods
subl
jmp
sarl
push
sarb
or
addb
jae
out
imul
dec
lds
mov
sub
insb
orl
pop
add
popa
xchg
inc
jmp
jmp
xchg
scas
jg
xchg
mov
aam
enter
push
push
jnp
and
or
push
aam
sbb
xor
enter
mov
mov
jg
jp
and
pop
in
loopne
int3
push
fs
lea
sbb
add
out
cmp
pop
cmp
dec
xorb
mov
sbb
jmp
in
pop
rcr
aaa
sbb
mov
xchg
adcl
jge
fsubp
jg
rcll
add
js
pusha
adc
divb
fstl
dec
imul
cwtl
in
or
cwtl
lock
testb
cmp
mov
js
stos
les
aad
xor
jmp
test
lods
rorb
sub
xor
pop
pop
movsl
jge
das
outsl
popa
cmpsb
pop
adc
rorl
cmp
add
je
call
mov
sahf
sbb
out
pop
dec
mov
pop
jae
ljmp
jle
sarl
dec
mov
dec
mov
jae
call
out
orl
push
in
fs
xor
outsb
push
pushf
jnp
fwait
jnp
pop
dec
mov
pop
movsb
adc
sub
lea
mov
mov
int
xlat
stos
std
add
aam
cli
lret
mov
call
xor
add
dec
ficoms
push
adc
cmp
ja
xchg
inc
lds
push
push
aad
outsb
push
inc
xchg
lods
and
out
insb
jne
push
mov
cmp
and
or
out
sub
pop
jmp
iret
sarb
sub
or
sub
fimull
add
and
int3
outsl
iret
shl
adc
shlb
xchg
push
mov
xorl
mov
loop
in
dec
stos
lea
push
fstpt
fbstp
pop
cld
jle
stos
daa
jno
outsb
sbb
aaa
mov
lret
cltd
dec
daa
in
fwait
cmc
or
jle
fs
xchg
pop
mov
or
das
mov
shlb
pop
repz
or
mov
inc
fstps
out
or
mov
int
scas
xor
pop
popf
inc
xchg
loopne
mov
scas
jns
orl
daa
xchg
jp
inc
ret
mov
lret
or
mov
loope
jg,pt
xor
mov
xchg
add
pop
push
stos
inc
and
pushf
cmpsb
cmp
mov
shlb
scas
lret
clc
add
icebp
cmp
shrl
enter
lods
xor
mov
pop
sub
insb
lock
fstl
or
xchg
push
jns
jle
jbe
das
push
fildll
js
pop
in
jb
inc
jg
mov
sbb
jecxz
pop
pop
outsl
ss
loopne
pop
add
or
stos
push
hlt
jne
mov
outsl
mov
mov
int
push
add
in
cmp
repz
out
xchg
mov
jbe
dec
pop
cmp
push
cmp
loope
adc
jns
and
mov
je
sbb
imul
cmpsl
dec
out
sub
and
aaa
addr16
aas
in
daa
jecxz
mov
inc
mov
daa
das
adc
dec
jmp
push
push
fiadds
sbb
xor
xlat
ret
adc
adc
hlt
push
shl
adc
adc
in
stos
lcall
pop
add
push
inc
add
ret
hlt
mov
addb
pop
dec
jmp
mov
sbb
das
and
mov
mov
dec
decb
push
fidivs
roll
loopne
out
loop
push
xchg
xor
icebp
fcoml
pop
pop
js
fwait
mov
sub
jge
adc
and
add
sti
jge
ds
xor
stc
sbb
sub
adc
fdivrs
add
jge
pop
jns
imul
lds
outsl
mov
xchg
jno
sbb
xchg
cmp
or
push
jge
dec
dec
cltd
xor
cmp
sbb
mov
std
mov
cmp
aad
faddl
push
pop
ja
jae
js
add
icebp
inc
pop
test
and
repnz
icebp
outsb
jmp
ds
clc
xchg
arpl
jno
insl
pop
pop
sarl
out
cmc
jecxz
xor
enter
jns
add
adc
sbb
sbb
ret
xchg
push
orl
cmp
xchg
sub
push
mov
rorl
and
insl
aaa
and
mov
xchg
dec
pop
push
movsb
dec
andb
icebp
xor
mov
mov
fcoms
int3
xor
mov
fdiv
dec
sub
cmp
das
dec
js
inc
mov
fstl
cmp
call
out
jmp
xchg
pop
sbb
jg
inc
ret
add
sub
clc
xor
cld
xchg
lcall
aaa
in
dec
movsl
es
adc
mov
arpl
xchg
mov
in
loopne
dec
xor
push
rcl
int
dec
mov
pop
jne
inc
dec
mov
adc
repnz
xchg
sbb
jne
mov
sub
or
je
sub
inc
fnstcw
pop
inc
xchg
fists
arpl
ffreep
adc
jnp
jg
loopne
movsb
mov
loopne
gs
repnz
rcll
sbb
add
ljmp
dec
mov
mov
enter
xlat
xchg
ret
cmpsl
insb
sbb
dec
jl
cli
lret
mov
push
je
xor
std
jecxz
xchg
adc
scas
idivb
xor
mov
out
andl
gs
enter
pop
les
sub
add
xor
mov
ret
lods
xchg
mov
adc
repz
daa
add
loope
inc
sbb
jnp
pop
adc
pop
jecxz
cltd
les
int
enter
inc
jb
jb
pop
jbe
xchg
push
imul
es
pusha
jne
mov
testb
lods
fucom
jp
nop
jge
and
mov
xor
pop
adc
lahf
pushf
push
add
cs
jmp
andb
aam
std
sbb
sub
popf
mov
jbe
add
xchg
mov
cmp
jl
inc
push
leave
xchg
mov
cmpsb
mov
idivb
out
pop
fcmove
mov
xchg
test
jo
inc
jb
lea
cmp
test
ss
popa
inc
push
rcl
sbb
repz
lds
inc
push
loopne
mov
push
inc
stos
cmpb
push
shll
idivl
test
ret
sub
decb
loop
mov
add
in
push
and
scas
js
imul
rclb
add
call
aas
fdiv
sbb
out
mov
sahf
idivl
add
aaa
ljmp
sbb
test
decb
mov
push
popa
mov
cld
sub
push
imul
dec
mov
frstor
das
mov
nop
je
cltd
lahf
aaa
pushf
mov
sbb
add
stc
call
call
or
js
jb
mov
pop
enter
lods
mov
inc
lock
sahf
mov
dec
out
adc
sbb
jb
mov
fsub
push
pop
faddl
pop
in
or
aaa
cmp
sarl
inc
xchg
test
sbb
mov
jns
lock
ljmp
inc
setae
xlat
fildl
jle
and
inc
adc
and
push
test
in
push
mov
mov
mov
add
dec
xor
and
inc
hlt
leave
loopne
loope
pop
test
push
mov
gs
stos
inc
or
es
shrl
xor
mov
push
scas
xchg
push
fucomi
or
pop
mov
adc
jmp
sub
cwtl
lret
popf
push
and
xorl
pusha
mov
cmpsl
cld
pusha
xchg
hlt
mov
hlt
cmp
mov
adc
pop
das
add
cwtl
fs
in
inc
in
or
es
into
and
fs
xchg
in
pusha
shll
out
rorb
rcr
dec
roll
sar
push
and
ja
sub
sub
outsl
je
jo
addb
cmp
sbb
mov
leave
or
ret
mov
fildll
es
test
add
jmp
fnstsw
xchg
fs
sti
je
push
loopne
cli
popa
dec
out
sub
scas
inc
mov
in
inc
lcall
cld
jecxz
mov
loop
pusha
mov
aam
das
jb
lods
loopne
inc
cltd
je
dec
jle
sub
ret
inc
out
and
fdivrp
in
fwait
pop
and
push
xor
mov
push
xor
jbe
mov
andl
or
adc
lcall
pop
in
cmpsb
push
xor
out
aad
pop
jge
inc
and
sbb
push
scas
stos
stos
fwait
jne
cwtl
fisttpl
insb
mov
mov
shlb
xchg
int3
insb
xor
cmp
into
or
movsl
or
sub
and
js,pn
sub
outsl
neg
inc
mov
fistpll
mov
popa
mov
cli
jbe
rdmsr
insl
inc
mov
into
push
out
test
fldcw
push
push
dec
mov
add
and
into
mov
jno
mov
out
es
and
lcall
jecxz
push
push
and
icebp
jb
push
fildl
and
stc
adc
pavgw
mov
push
arpl
push
aam
bound
jno
das
es
into
mov
push
adc
mov
adc
out
jnp
mov
adc
mov
in
flds
pop
es
and
lret
fsubr
inc
rolb
fcomp
mov
testb
mov
jbe
xchg
sub
mov
inc
fisubs
ljmp
in
xor
fstl
jnp
push
test
or
sub
fldt
add
mov
sub
mov
xor
cmp
je
xchg
add
and
jg
push
repnz
or
mov
mov
add
dec
dec
or
cld
sub
and
dec
adc
mov
jl
add
push
jns
inc
or
movsb
insb
fildl
lahf
mov
bound
and
jno
pop
mov
pop
jl
push
adc
push
jb
addr16
pop
int3
js
cmp
and
mov
arpl
arpl
mov
dec
pop
xchg
shlb
ss
ficoms
and
int3
dec
arpl
mov
cmp
jle
fldl
ja
lods
and
outsl
jl
out
push
mov
cmpsb
add
outsl
cmpsl
popa
sub
loope
adc
aad
jae
stos
inc
sub
sub
dec
sub
inc
das
ret
stc
mov
jg
cli
mov
and
cli
xchg
mov
add
mov
les
xchg
or
in
incb
pop
xchg
push
fidivrl
adc
inc
jns
sub
lahf
pop
nop
mov
sbb
adc
add
mov
jnp
pop
jmp
xor
int3
cmc
mov
jb
lcall
scas
daa
pop
outsb
sar
sbb
mov
adc
push
aaa
and
sbb
ja
fiaddl
das
mov
clc
push
sti
push
and
shrl
lods
mov
mov
ss
pushl
fildl
jge
lds
push
sub
aam
xchg
push
int3
cs
fnstenv
cmp
cmp
sub
cmpsl
jmp
xchg
jnp
cs
mov
dec
mov
aaa
pop
xlat
fwait
push
jne
jbe
add
xchg
sub
mov
repnz
mov
insl
or
test
xchg
popl
jo
aas
dec
das
rorl
adc
ss
mov
shlb
pop
lahf
add
mov
stos
mov
xor
cmp
insl
adc
imul
cwtl
mov
faddp
add
pop
mov
add
dec
popa
mov
insb
cmp
testl
push
mov
sub
mov
add
mov
or
mov
adc
pusha
sbb
fimull
shl
lahf
iret
sahf
xor
inc
dec
cltd
fisttps
cld
add
mov
test
pop
xorb
pop
xchg
mov
xor
adc
push
sbb
test
shlb
mov
cwtl
inc
out
bound
jle
inc
adcb
mov
mov
xchg
inc
lcall
cmp
fs
push
mov
outsl
push
fcos
sti
icebp
int3
iret
es
dec
aaa
rcrl
flds
inc
sub
into
and
cmc
les
jmp
inc
movsb
pushl
push
cmp
jle
pop
pop
mov
shrl
mov
jno
lods
add
mov
adc
cmp
cmp
mov
jl
push
out
mov
fisttpl
add
xlat
inc
sbb
xchg
roll
sbb
sbb
aaa
int3
lahf
mov
in
loope
cwtl
aam
mov
popa
cmpsl
and
imul
cmpsl
fs
xlat
ljmp
movsl
mov
loope
lahf
sbb
ds
sub
cmp
popl
rorl
sbb
xchg
xor
mov
popf
fs
and
sub
add
pop
outsl
cs
and
rorb
movsb
inc
cmp
insb
jge
test
mov
or
or
incl
push
in
lds
xor
pop
jo
in
ja
test
dec
sub
add
je
push
inc
push
xor
sbb
ja
shrb
in
iret
and
hlt
cli
jns
pop
aad
and
pop
sub
das
arpl
scas
pop
adc
popa
lahf
lock
shlb
inc
mov
dec
ljmp
jecxz
faddl
fiadds
or
ljmp
out
jp
jmp
xchg
or
pop
sub
sarb
xchg
pop
lcall
push
test
dec
add
repnz
mov
movsl
lods
pop
fs
imul
dec
mov
in
je
dec
adc
xor
scas
adc
or
push
int3
push
pop
xchg
adc
sub
popa
pop
adc
test
scas
push
mov
pop
inc
out
arpl
dec
xor
je
push
gs
sub
dec
xor
add
popf
aaa
jge
push
std
cmp
push
sub
out
popa
sbb
xchg
xor
jg
xor
hlt
xchg
sbb
pop
jno
mov
or
or
out
cmpsb
addb
xor
fimuls
pop
adc
arpl
dec
sti
cs
jbe
dec
sub
dec
inc
aam
shll
jbe
int3
fwait
iret
or
scas
arpl
cmpsb
add
inc
imul
mov
stc
out
jge
es
or
pop
and
pop
sbb
movsb
xor
cltd
adc
mov
push
mov
mov
push
dec
pop
frndint
sbb
pop
ja
insl
cli
cmp
dec
add
out
push
mull
dec
mov
xchg
push
sub
aad
xor
sbb
std
sub
icebp
jno
imul
ss
das
adc
or
sub
sub
lods
xlat
enter
jbe
repnz
movsl
and
dec
pop
dec
pop
test
das
in
xchg
mov
dec
in
jno
sbb
aaa
ds
inc
push
cmp
mov
mov
add
pop
push
mov
mov
xor
aad
pop
mul
mov
push
aad
insb
test
outsb
fcoml
push
xchg
sbb
inc
or
stc
arpl
mov
xor
mov
jnp
fs
ficomps
adc
in
pop
adc
inc
outsw
push
add
inc
mov
push
lds
lods
pop
das
sbb
cmp
push
mov
shlb
lea
cmpsl
xchg
push
mov
sbb
pop
xlat
packssdw
loope
mov
test
push
lea
mov
sarb
mov
push
out
xchg
daa
adc
ljmp
push
dec
dec
fs
sarb
roll
mov
xor
adc
iret
les
repz
cld
jp
mov
xorl
pop
popf
lahf
cmp
aad
mov
inc
fidivs
add
pop
push
fucomi
and
mov
dec
lret
mov
data16
push
not
xchg
mov
xor
pushf
shll
aaa
fimull
int
fiaddl
adc
ss
jmp
mov
jnp
mov
mov
adc
and
into
int3
sub
sub
imul
fcomps
out
je
push
push
gs
adc
pop
hlt
mov
xchg
sbb
cwtl
or
jb
push
adc
xorb
icebp
popa
mov
shr
xchg
push
cwtl
mov
addr16
sbb
and
xor
subb
fldt
enter
adc
inc
cmp
lret
sub
jo
loope
mov
or
or
call
dec
out
in
imull
mov
cmpsb
xor
lcall
jmp
xchg
sbb
push
xlat
adc
xchg
mov
movaps
mov
ljmp
pop
cmp
mov
fadd
add
jecxz
dec
sub
push
adcb
imul
push
nop
in
idiv
ret
clc
inc
mov
cmp
cmp
sub
jmp
push
push
mov
clc
jmp
cmp
lods
sbb
outsl
lds
push
cs
xchg
inc
pop
loope
ljmp
cmp
arpl
js
xchg
loop
mov
fidivrs
cmp
lcall
or
xor
scas
pushf
fstps
jmp
out
test
je
fchs
mov
xlat
jecxz
ret
clc
int
jmp
push
mov
pop
repnz
xchg
add
aam
mov
jae
jns
push
fwait
and
test
fisubl
add
bound
mov
dec
mov
jmp
lcall
adc
and
inc
xorb
lret
and
icebp
mov
arpl
jnp
in
adc
outsb
sbb
cmp
push
jae
xchg
aad
inc
jge
xchg
nop
jge
data16
lcall
dec
movsb
push
push
pop
mov
mov
test
loop
out
fwait
cwtl
out
pop
aam
enter
and
push
and
std
stc
cmp
and
call
ror
pop
push
xor
add
mov
jecxz
mov
push
icebp
mov
aad
inc
test
fstpl
push
jo
pop
mov
xchg
inc
cmpsl
pusha
daa
aad
add
and
mov
inc
pop
mov
jb
xchg
ror
xlat
aad
movsl
test
in
scas
addr16
push
push
mov
mov
ret
inc
lret
sub
fadd
fsubs
es
andl
jge
clc
and
dec
out
out
into
bnd
jg
arpl
xor
fnstcw
ljmp
mov
cmp
in
fdivs
jns
test
js
sub
jge
cmc
inc
ret
pusha
daa
pop
mov
cmp
shl
push
or
adc
jmp
xchg
sub
es
inc
inc
lods
icebp
popw
dec
and
ret
incl
aad
cwtl
outsb
jmp
popfw
scas
mov
adc
call
sub
enter
sub
pop
pop
imul
push
xchg
mov
out
push
pop
sbb
inc
push
cs
in
testb
fs
push
aad
ds
loope
add
xchg
adc
sub
imul
lcall
dec
je
mov
xor
inc
pop
jb
bound
hlt
cmp
mov
std
mov
hlt
fdivl
bound
fldl2t
hlt
mov
push
imul
aas
bound
fidivrs
mov
and
je
mov
cmp
or
cli
jo
mov
fiadds
loopne
cmpsl
sub
jns
popa
cmp
cmp
dec
mov
add
jbe
out
xchg
jns
aaa
lahf
lods
push
sub
mov
sub
adc
mov
inc
insb
push
jg
fildll
xor
or
mov
jae
sub
add
test
jl
test
lock
xor
aas
out
sbb
push
cltd
call
cmc
ljmp
sbb
push
xchg
mov
imul
cltd
sub
jno
nop
adc
pop
mov
mov
data16
sahf
add
adc
mov
add
imul
xchg
lds
dec
xchg
cmp
cmp
jecxz
lret
pop
repnz
fwait
lret
pusha
fldt
cmp
ffree
fildl
shrl
ret
adc
sbb
scas
xchg
add
and
cmp
jns
inc
pop
idiv
sub
cmp
pushf
pop
jbe
sbb
sbb
popf
mov
mov
xor
mov
mov
ljmp
jno
mov
shll
jns
pop
fmul
call
das
out
aas
mov
add
outsb
out
fwait
sub
cmpsl
jmp
stos
data16
push
inc
fidivs
add
outsl
xchg
loop
mov
shrl
or
int
pushf
outsb
pop
inc
mov
test
pop
push
dec
pop
ss
arpl
or
mov
pop
inc
in
and
loop
test
fdivs
xor
jnp
sbb
xchg
in
push
pop
repnz
push
repnz
and
pop
leave
fwait
and
jmp
pop
pushl
jge
adc
call
push
lret
pop
shrl
inc
push
mov
cmpsb
cs
or
pop
mov
mov
das
or
mov
outsl
out
iret
cmpsb
ret
push
jne
xchg
pause
push
fstpt
subb
pop
jb
stos
sbb
imul
cmp
sub
push
jl
push
fmull
push
xor
mov
dec
xor
lock
and
loope
xchg
pop
sbb
lret
jmp
fwait
inc
ds
push
andl
rcrb
add
in
jge
pop
mov
sub
jmp
rorb
loope
cmp
sbb
clc
jg
push
jle
pop
lret
leave
testl
adc
jne
cmp
pop
aaa
ror
outsl
or
add
lods
je
sub
dec
scas
push
dec
mov
ds
sub
mov
cmp
dec
test
jmp
pop
in
mov
in
xchg
pop
push
dec
pop
adc
cs
or
clc
mov
cmc
lds
mov
data16
shll
xchg
push
cmp
add
fstps
cmp
gs
mov
jmp
push
sub
lret
shll
cmp
test
mov
or
insl
adc
mov
fdivrl
in
dec
lods
adc
mov
es
mov
in
push
loop
add
fcmovne
scas
pop
and
test
jae
loopne
scas
test
scas
jp
push
add
fdivrl
lock
push
subb
and
lret
or
xchg
cmpsb
adc
subl
pop
fcoms
sub
imul
mov
xor
mov
xorb
push
xchg
push
inc
loop
nop
ss
in
ret
pop
ja
add
in
divb
add
xchg
mov
mov
jp
sbb
hlt
pop
and
inc
jae
cltd
xchg
pop
in
fucom
and
push
fmuls
icebp
mov
xchg
shrl
mov
push
sub
ret
cltd
andl
xchg
xchg
mov
lock
negb
and
rcrl
cmp
jp
add
iret
ret
fs
adc
pop
imul
in
test
xor
shll
lret
in
insl
aas
dec
and
xchg
int
lock
icebp
add
fistpll
and
jmp
in
gs
sbb
ror
js
fsts
pop
xchg
mov
mov
mov
rcll
mov
cmpl
cmc
dec
pusha
pop
inc
inc
lods
jo
cltd
cmp
add
in
addr16
aas
inc
and
push
or
sub
bound
popa
rclb
sti
orb
pop
cmp
xchg
add
jecxz
xor
pop
lock
int
xor
xchg
or
push
aaa
mov
sub
idivb
jo
adc
int
fadds
scas
mov
mov
in
inc
pop
test
scas
sub
nop
movsl
pusha
or
ja
imul
popf
cltd
rcrb
sbb
sti
lea
es
xchg
inc
sar
fidivs
std
ret
les
in
iret
rcrl
inc
bound
addl
std
push
jo
out
adc
pop
xor
sbb
add
pop
and
pop
fs
shl
push
pop
ss
jmp
pop
aas
repz
movswl
xchg
sub
xchg
lcall
cld
int
jmp
rcrl
fsubrs
adc
inc
pop
sti
cmp
cmpsl
in
dec
add
lds
sub
pop
stos
xchg
inc
mov
pushf
lahf
loope
mov
mov
adc
adc
mov
popf
and
stc
mov
out
adc
sub
mov
imul
mov
xor
je
push
icebp
inc
out
jecxz
call
into
jns
push
mov
ret
inc
jg
ret
or
pop
imul
add
xchg
pop
inc
mov
adc
dec
add
bound
fst
nop
fs
xlat
sub
sub
pushf
je
popf
fmuls
jns
ret
out
rcrl
push
xlat
outsl
cmpsl
pop
and
add
cmp
xor
adc
testl
dec
insl
je
sub
adc
mov
loop
lahf
dec
cmp
repz
push
ds
xor
xor
add
pop
jb
pop
loopne
scas
cmp
lock
in
test
call
popf
movb
jp
add
adc
rorb
movsb
cli
push
int
int
rcll
push
adc
dec
xor
test
mov
lods
mov
aad
int
inc
mov
xchg
das
call
mov
cmp
mov
pop
adc
loopne
push
outsb
push
adc
jl
push
fwait
inc
mov
pop
out
push
mov
pop
xchg
dec
xchg
in
adc
add
dec
inc
pop
pusha
bound
in
lcall
mov
dec
call
rorl
lret
call
shrl
sub
out
call
xchg
imul
pop
mov
ffreep
push
adc
out
leave
mov
mov
add
adc
testb
xchg
dec
and
sub
punpckldq
test
push
mov
mov
pushf
pushf
cmp
inc
inc
push
and
shll
dec
pop
push
dec
aaa
pop
sti
in
mov
mov
mov
or
aad
ficomps
push
xor
fildll
adcl
repnz
test
sbb
xchg
and
inc
jl
lret
lret
xchg
jb
adc
pop
jnp
mov
cmpl
inc
push
icebp
daa
lret
cmp
xchg
jle
xchg
bound
add
sahf
sbb
bound
or
fistpll
push
and
sbb
dec
add
or
pusha
jno
test
addr16
push
repnz
or
inc
cmp
pop
stos
out
inc
xchg
pop
fisubrl
fs
fstl
rcrl
cmpsl
in
ret
mov
inc
jl
dec
stos
xchg
sti
shrb
dec
es
hlt
int3
dec
loopne
in
jnp
pop
sub
ret
mov
fs
mov
push
mov
mov
int3
dec
pusha
xchg
push
ret
popa
jmp
jno
fidivl
or
xor
rorl
jns
ja
fldl
and
je
fwait
movsl
xor
data16
and
push
hlt
std
test
shll
cld
insl
jmp
xchg
dec
xor
test
dec
xchg
fisubrl
xchg
inc
adc
add
cld
insl
cmp
xchg
xor
lods
lret
popa
add
insb
or
call
mov
xor
pop
mov
adc
daa
dec
jge
jge
subl
and
call
pop
pop
xlat
and
ja
rcl
jge
test
mov
jl
daa
sub
pop
cmpsb
lea
push
mov
in
xchg
jb
mov
movsb
add
dec
dec
xor
arpl
and
xchg
cmpb
push
pop
imul
dec
fdivl
filds
fsub
cmc
xor
jecxz
add
js
cltd
pushf
into
addb
dec
adc
mov
sbb
push
push
jmp
cmpsb
add
jg
mov
or
xchg
adcb
push
and
cmpsl
or
and
jecxz
dec
into
and
int
adc
popa
xchg
js
push
xchg
push
inc
testb
cmc
jp
loopne
data16
or
jp
fs
mov
mov
imul
push
cmp
add
js
fimuls
aam
cld
into
push
add
fistps
and
cltd
pop
and
sbb
scas
insb
sbbb
popf
mov
shrl
cmpsb
mov
aad
ljmp
cmp
dec
push
cmpsl
icebp
cmp
hlt
sub
cmp
in
adc
lret
and
mov
fidivl
movsl
mov
mov
sahf
loope
add
sub
jp
pop
lret
scas
mov
mov
jns
lock
jle
or
pushf
dec
test
jno
fistps
xor
mov
pop
mov
daa
xor
adc
adcb
sub
sub
cmp
lcall
or
out
adc
repz
pop
daa
mov
test
pushf
jno
sbb
ds
lock
cli
aad
js
lcall
xlat
inc
popf
daa
popa
shll
daa
dec
xchg
les
sbb
loope
imul
loopne
mov
pop
jecxz
mov
cli
jge
jg
pop
lods
lea
xchg
pop
lods
inc
aad
pop
mov
stos
xchg
mov
xor
jmp
mov
dec
mov
lahf
inc
xlat
and
jb
push
or
push
add
leave
ret
cltd
inc
jp
xor
or
test
adcl
cmovs
mov
insl
or
lods
das
data16
inc
test
cltd
stos
aam
inc
push
mov
xor
mov
pop
out
in
cmp
inc
nop
jns
inc
or
imul
mov
cmp
leave
push
add
xorb
sbb
sbb
lret
cld
cmpsb
cli
inc
js
test
jno
fst
ss
and
dec
pop
repz
ss
mov
flds
mov
push
sbbl
dec
sbb
insl
lcall
inc
and
mov
push
add
dec
call
push
lret
xchg
sub
mov
and
xor
add
add
cmp
ja
xchg
adc
inc
jge
or
movsl
ja
mov
mov
fmull
sbbl
lcall
dec
outsb
adc
aas
and
inc
mov
nop
xor
mov
mov
push
in
test
add
or
pop
jl
pop
dec
lds
sub
xor
fnsave
repnz
cmp
inc
jge
sbb
pop
cmp
sub
sbb
int3
push
cmp
jno
jno
je
adc
sbb
or
jmp
mov
cmp
enter
popa
notl
dec
add
jp
dec
sub
jle
jnp
pop
jne
push
inc
andb
dec
or
xor
inc
out
dec
mov
push
xlat
pop
mov
icebp
add
jns
cmpsb
data16
into
adc
xor
mov
sub
iret
xchg
push
add
fstpt
adc
dec
push
gs
pminub
jmp
sbb
fcmovbe
test
mov
mov
popa
imulb
movsb
or
sarb
jb
sbb
jae
mov
in
inc
ljmp
mov
sub
cs
jmp
loop
mov
movb
xor
cltd
jnp
mov
cmp
arpl
xor
daa
push
adc
push
insb
lahf
sbb
loopne
mov
xchg
ljmp
pop
xor
xchg
inc
mov
mov
shrl
jbe
mov
mov
pop
xchg
sub
outsl
cmp
movsw
movb
and
xchg
mov
dec
ljmp
mov
dec
lods
lret
jnp
sbb
or
lods
std
xchg
adc
fldt
mov
dec
dec
adc
push
inc
or
jge
test
test
test
ss
sti
push
das
adc
mov
dec
cmpsl
xchg
out
push
repz
das
in
adc
push
or
jns
in
jg
lds
jae
jmp
mov
adc
mov
dec
mov
sub
in
inc
xlat
aam
sbb
push
xchg
clc
jp
adc
or
int3
xor
xchg
cs
xchg
xchg
shrb
out
fsubs
cmpsl
ss
nop
pop
shll
mov
inc
adc
lret
rclb
cs
jnp
or
jae
add
lea
adc
sbb
inc
imul
dec
repz
mov
in
mov
inc
mov
js
into
aam
nop
push
cmp
ja
inc
push
mov
mov
int
and
int3
mov
cmpl
loope
sbb
fwait
inc
je
arpl
mov
jno
xchg
sbb
rcrb
bound
mov
and
inc
mov
pop
lea
lcall
imul
js,pn
iret
jl
in
mov
cmp
xor
stos
test
cli
jp
insl
xor
dec
adc
lcall
dec
movsl
xchg
in
movsl
xor
dec
stc
test
and
dec
outsl
jp
pop
gs
subl
scas
loope
mov
aad
push
or
jge
mov
shll
psraw
aaa
mov
push
or
popf
cmpsb
lock
and
lret
dec
pop
dec
fisubrl
and
imul
in
out
cmp
sub
test
mov
push
adc
imul
push
push
lea
mov
inc
pop
mov
dec
aad
sbb
sub
and
sbb
fidivrl
ret
repnz
mov
jle
jne
mov
scas
dec
rclb
or
mov
adc
xor
cld
in
test
xor
imul
jno
insb
imulb
aas
jnp
push
sub
imul
mov
je
clc
ret
lret
xlat
sbb
outsb
sub
push
push
pop
adc
inc
xlat
repz
out
iret
adc
pop
aad
call
pop
mov
or
add
loop
cli
lret
cwtl
jecxz
inc
dec
cmp
test
movsb
mov
mov
ja
sub
dec
xchg
mov
inc
and
cmp
or
jl
push
push
inc
or
xor
or
mov
cld
js
ja
mov
test
add
mov
inc
sti
fcoms
sub
sbb
sbb
fstpl
xor
or
std
adc
cwtl
mov
mov
popf
and
sbb
dec
sarb
cmp
cmp
es
stos
sbbl
out
repz
xchg
arpl
repnz
xor
mov
add
js
out
dec
cmp
xor
lea
inc
leave
std
and
dec
pop
dec
fmul
adc
pop
dec
pop
add
push
roll
lret
sbb
loop
bound
clc
mov
out
dec
iret
jle
fs
inc
pop
jae
mov
cmp
rclb
test
mov
movsl
ret
pop
iret
and
mov
mov
mov
jae
cmp
inc
jnp
test
mov
orl
aam
jle
lea
js
adc
dec
insl
push
hlt
bound
fwait
cmpb
sub
cmp
test
loop
test
shll
jae
mov
xor
lds
sub
stos
cltd
xor
pusha
jae
cmp
jecxz
fdivl
test
into
xor
stos
push
das
test
roll
add
push
shlb
mov
iret
xorl
js
mov
and
shl
pop
jmp
rcr
out
sbb
xor
scas
in
add
int3
fldcw
ljmp
add
das
mov
hlt
cmp
xor
or
sbb
mov
out
sbb
adc
lds
cmp
lret
sbb
jge
stos
cmp
ja
pop
jl
outsb
in
xor
inc
dec
push
lret
mov
scas
xlat
sti
xlat
mov
stc
lahf
pop
jae
mov
popa
adc
lea
lret
test
dec
pop
stc
das
xchg
xor
lret
mov
mov
insb
fbld
adc
add
push
xchg
push
shll
add
jp
jmp
out
pop
insl
mov
xor
aad
adc
sub
mov
loopne
stos
subb
pushf
or
cmp
lcall
xchg
shrb
shll
push
int3
sub
adc
push
into
stos
cmp
out
popf
pusha
iret
fwait
xchg
loope
sbb
lea
push
movsb
out
mov
movsb
imul
adc
push
scas
daa
mov
xchg
in
imul
mov
aam
or
cltd
outsb
loopne
xchg
lcall
ss
fwait
ds
insb
dec
test
mov
es
out
sahf
js
xchg
aam
dec
push
cmp
inc
jmp
adc
adc
pop
jmp
aaa
add
mov
es
sahf
stos
fwait
ds
std
pop
sti
jp
xor
fsubl
xchg
cmpsb
insl
and
xchg
adc
outsb
out
sbb
movsl
pop
rcl
mov
lahf
sub
aad
imul
bsf
imulb
sub
cs
xchg
mov
mov
addr16
das
mov
decb
addb
jno
xchg
dec
stos
loope
in
mov
mov
push
ficompl
nop
pop
xchg
sub
cmc
inc
push
movl
cmp
sbb
fs
sub
and
js
cs
in
insb
mov
sbb
cli
in
mov
push
sbb
push
jmp
mov
push
xchg
xlat
push
sbb
rcl
pusha
cmp
push
mov
pop
fidivs
or
lea
out
xchg
push
pop
ret
clc
out
std
and
fdivrs
mov
fwait
mov
mov
adc
or
rcll
mov
add
shll
into
jae
shl
es
pop
jbe
jb
test
pop
jl
and
movsl
movsb
call
fs
mov
cmpsl
cmp
sub
mov
mov
ds
pop
dec
xchg
or
mov
addb
mov
mov
mov
scas
fwait
loopne
adc
mov
xchg
mov
loopne
mov
pop
cli
shll
das
inc
xlat
sahf
cmpsb
arpl
int
in
aad
test
inc
push
inc
xor
nop
loope
add
add
fsubrp
mov
dec
or
jno
add
add
shl
stos
mov
add
bound
xchg
dec
out
fdivs
cltd
push
pop
jmp
fs
ret
aaa
adc
repnz
lods
gs
dec
pop
and
ret
ret
add
adc
and
xor
push
sbb
dec
sti
jo
jmp
out
add
out
in
mov
stc
ret
out
inc
das
cmp
push
fwait
mov
jge
lcall
pushf
and
inc
int
jno
out
imul
les
in
push
test
loop
and
cmpsb
mov
sbb
inc
fsubrs
cs
inc
call
loope
test
pusha
pusha
ffree
cli
fidivrl
adc
test
lret
mov
dec
fwait
xor
adc
and
or
outsl
insl
sarl
sbb
cli
imul
ljmp
fisubrl
sub
scas
cmc
rolb
cmp
jnp
shrb
add
dec
jns
and
movsb
cld
and
sbbl
sub
inc
or
jecxz
and
pop
out
push
sar
js
decl
push
inc
shr
jmp
xor
mov
cs
lahf
mov
movsl
xchg
mov
fisubl
fs
push
in
repz
out
and
stc
fisttpl
cmp
mov
stc
fs
stos
inc
rol
call
icebp
jae
sbb
adc
mov
inc
scas
pop
jno
loopne
lcall
clc
pop
in
xor
cwtl
test
in
xchg
xchg
mov
in
pop
push
loopne
lahf
pop
pop
sbb
dec
fadd
aad
jecxz
int
jne
sub
dec
xchg
pusha
stos
dec
nop
outsb
out
cli
xor
outsb
xchg
pop
adc
std
js
pop
into
add
in
xchg
decb
adc
iret
stos
testl
lock
cltd
pop
fsts
bound
sub
xor
pop
and
push
into
push
dec
push
xor
dec
mov
aaa
pop
movsl
out
dec
sbb
es
aad
mov
lock
adc
jb
loopne
mov
dec
ficoms
jmp
mov
xor
mov
sub
cmp
int
imul
inc
dec
dec
loopne
or
push
mov
jae
cpuid
cmp
sbb
andb
adc
iret
adc
sub
int
mov
gs
sbb
loope
xchg
cmp
jmp
fcoms
xor
inc
add
loopne
fnstsw
nop
adc
push
fwait
sub
inc
xchg
pop
and
jmp
in
icebp
ret
popa
shlb
mov
lock
pusha
jbe
ljmp
and
imul
inc
xchg
or
mov
cmp
sbb
and
gs
xor
sbb
jl
cmp
lret
push
cmp
lds
mov
xchg
inc
or
mov
mov
or
js
addb
stc
push
pop
sbb
jb
or
pop
je
stc
repz
add
cmp
ds
add
out
mov
lock
stc
mov
divl
xor
or
mov
mov
in
xlat
scas
clc
dec
dec
fistl
je
pushf
add
hlt
gs
out
arpl
insl
and
adc
jmp
xchg
cs
int3
stc
addl
cld
addr16
les
push
add
aas
call
adc
repz
mov
lods
mov
jnp
push
xchg
out
or
ret
bound
jno
cmp
stc
cmpsl
mov
sub
dec
gs
lret
lds
xchg
dec
hlt
fistps
dec
scas
movsl
mov
sarb
int
mov
insl
mov
sbb
xor
jg
xchg
push
jns
fisttpll
hlt
xor
dec
adc
ret
xchg
lcall
dec
sbb
daa
xchg
jne
xlat
mov
fadds
loope
xchg
inc
add
repz
enter
fwait
subl
sbb
pop
divb
into
scas
imulb
in
add
pop
and
push
cmpb
or
jae
jns
jge
out
push
sbb
out
inc
rol
scas
mov
fwait
stc
roll
sub
xor
cmp
movsb
jb
add
mov
cmp
loope
xor
and
or
dec
mov
cmpsb
xchg
jae
dec
fisttps
sbb
and
orb
and
js
fdivs
fstpl
or
movsb
add
das
add
jle
pop
in
test
rcrb
dec
iret
fiadds
dec
mov
call
sbb
cltd
mov
or
adc
cli
inc
popf
ret
mov
enter
sub
or
lcall
push
js
xor
push
mov
loop
dec
cmp
loop
adc
xor
xchg
fstpt
int
icebp
sub
popa
mov
test
xchg
imul
xchg
pop
sub
cwtl
lea
or
pop
sahf
xor
icebp
dec
je
sub
dec
mov
in
dec
icebp
and
das
addr16
int
inc
mov
dec
pop
and
je
sarl
push
pop
pop
push
adcb
xchg
pop
push
add
inc
sub
mov
xor
or
push
or
pop
sbb
fucompp
dec
lods
push
in
outsb
inc
aam
dec
inc
jne
add
and
rcr
add
sbb
int
lahf
orb
int3
bound
test
cmp
sbb
lods
shr
insb
popf
jb
xorl
int3
dec
mov
jnp
cwtl
std
rclb
sahf
ja
outsl
or
lods
jbe
push
test
inc
cmp
cmp
or
jg
xchg
loope
cmpsb
shl
notb
pusha
loop
cld
push
fdivr
mov
adc
cmp
pushf
sub
rorl
mov
sub
adc
sbb
mov
leave
les
jecxz
xor
mov
shrb
inc
test
adc
push
stos
jnp
out
lret
int3
or
out
xor
dec
and
mov
icebp
pop
test
fnstcw
xor
pop
loope
pop
loopne
dec
mov
das
and
jae,pt
jp
xchg
inc
xchg
mov
das
sar
adc
adc
or
out
clc
push
xchg
stos
mov
callw
sbb
mov
inc
popf
out
out
pop
out
fnstenv
pop
push
popf
notl
pushf
push
insb
xchg
inc
clc
repz
rorb
cwtl
or
xchg
inc
sti
and
push
dec
imul
adc
repnz
out
cmp
mov
mov
adcl
cltd
stos
sbb
idivb
inc
or
pop
adc
loopne
sub
in
xchg
inc
scas
pop
xor
data16
shrl
push
jl
repz
jb
icebp
adc
and
loopne
push
push
cld
add
cltd
pusha
dec
fptan
jg
sbb
xchg
or
pushf
xor
mov
jp
mov
in
pop
mov
lahf
pop
cmpsb
jp
lods
cmp
repnz
cmp
sbb
adc
jb
pop
imul
insb
inc
out
mov
or
aas
cmc
adc
mov
insb
adc
jne
nop
pushf
jmp
add
gs
ljmp
xor
jb
frstor
popa
mov
xor
cmp
sub
jecxz
mov
out
ss
mov
outsl
cmp
outsl
sarl
vpsllq
std
das
fstl
dec
pop
ret
pop
xchg
xchg
scas
scas
stc
fcoms
and
int
sbb
mov
imul
sub
gs
xlat
std
sbb
ljmp
incb
pop
popf
hlt
mov
sbb
pushf
jbe
xchg
aam
mov
push
xor
adc
sahf
lret
sub
sbbl
inc
mov
inc
in
mov
test
pusha
add
cmpsl
subl
int
rorb
add
iret
inc
sarl
cmp
mov
stos
in
shl
fimull
outsl
ficoms
dec
hlt
pop
mov
inc
sub
xchg
pop
ror
fmuls
ret
sub
cwtl
add
insl
leave
mov
jmp
push
test
cltd
fists
mov
cmp
pop
gs
loopne
lock
pop
cmp
sahf
in
mov
bound
sahf
inc
pop
jnp
and
mov
mov
iret
outsl
movsl
ljmp
pop
add
jp
ss
test
xor
xchg
sbb
pusha
jle
cld
js
testl
dec
test
pop
das
scas
or
pop
mov
sub
sub
sub
addl
xor
ret
push
jg
adc
or
cwtl
add
arpl
xor
inc
into
cmc
fildll
mov
xor
into
mov
and
sarb
adc
leave
xlat
dec
adc
das
cmpsl
lods
xchg
jg
insb
je
int
in
fidivl
icebp
mov
mov
push
or
js
mov
add
add
and
lods
xchg
jl
enter
add
hlt
out
das
lret
stc
mov
jae
sbb
aam
pop
pop
dec
mov
call
stos
jb
es
sub
jecxz
fistps
test
bound
rorb
mov
loopne
aam
lea
jl
push
dec
jmp
dec
and
push
cmp
outsl
sub
iret
aad
mov
jecxz
and
cld
arpl
js
jne
and
or
lcall
and
imul
and
mov
inc
push
or
add
cmp
call
sub
jmp
jo
adc
pop
add
xchg
inc
inc
jns
cmpsl
pop
out
inc
sub
pop
in
sub
cmp
or
push
or
clc
cmpsl
sti
pusha
out
add
mov
shr
jle
xor
lods
cmp
push
sub
testl
adcl
fildll
adcl
mov
gs
je
xor
inc
push
xchg
inc
ljmp
std
call
stc
jge
int
in
in
mov
add
and
and
les
sbb
loopne
mov
adc
jmp
add
out
inc
lret
mov
stc
aaa
hlt
mov
push
roll
jno
pop
and
int3
stc
aam
jg
pop
decl
shll
sub
pop
mov
jecxz
outsb
jecxz
stos
push
stos
mov
jns
pop
or
clc
cmp
dec
daa
xor
mov
mov
inc
sub
jp
xor
orl
push
cmpsb
sub
cld
pop
xlat
orb
mov
push
movsl
cmp
pop
cs
xchg
mov
dec
scas
ja
loopne
sbb
out
xlat
add
cmpsl
adc
jae
pop
clc
clc
outsl
fsubrl
mov
sub
add
pop
inc
popf
mov
invd
addr16
inc
shlw
push
jmp
call
mov
negl
pusha
add
xor
addb
sub
dec
push
cmc
std
imul
xchg
jmp
xchg
loopne
push
cmp
jle
or
mov
cmpsl
jge
outsl
jmp
std
mov
jecxz
mov
mov
incl
fs
sub
outsb
xchg
sahf
cmp
cmpsb
loop
or
test
adc
sub
mov
jp
incl
mov
sbb
mov
or
scas
stos
push
push
mov
xchg
xor
adc
lock
iret
xchg
inc
out
mov
aam
sub
mov
sar
dec
cs
out
test
ljmp
lock
dec
mov
lods
outsl
int
imul
mov
test
or
jo
inc
sub
jbe
jne
jns
loop
add
inc
xchg
filds
mov
mov
movsl
dec
aam
xlat
dec
or
adc
outsl
xor
addb
mov
mov
test
inc
out
nop
mov
int3
mov
rolb
aam
inc
cwtl
pop
sbb
cmp
push
nop
cmpsl
out
mov
xor
inc
ficoml
neg
lret
pop
mov
inc
fisubl
mov
add
xchg
xor
pop
int3
mov
pop
shlb
push
lret
or
jg
out
iret
aam
xchg
repnz
lods
xor
sub
out
xchg
cwtl
cmpsb
mov
arpl
int
and
xlat
test
mov
inc
stos
cwtl
and
push
sub
push
or
iret
jne
mov
in
xor
cmp
cmp
push
mov
jle
cld
outsb
cmp
cmp
pop
jmp
ljmp
cltd
sarb
push
lods
adc
mov
mov
in
inc
mov
cltd
stos
mov
cmp
imul
pop
lea
mov
dec
dec
mull
push
out
sahf
stc
xchg
test
jbe
xchg
fidivrs
test
stos
cltd
inc
mov
pushf
in
lcall
fimuls
jmp
lret
jecxz
popa
mov
mov
sarb
outsl
fsubl
fdivrs
mov
out
gs
test
scas
lret
mov
ds
bound
mov
inc
movhps
xor
jns
lahf
es
mov
jnp
cli
inc
sbb
push
imul
adc
and
lock
sub
lea
add
daa
addr16
cli
mov
insl
jge
xlat
in
rcll
stos
jns
jle
lret
jns
aad
mov
push
outsb
mov
push
lret
and
push
movsl
add
sbb
sahf
add
push
in
lret
cmp
sbb
insb
out
insl
jnp
dec
xor
fsubs
int
jge
cltd
inc
insl
jmp
lahf
scas
bound
or
out
mov
ret
pop
pop
xorb
leave
fcmove
pop
xor
mov
outsb
push
sub
cmp
mov
or
push
mov
dec
dec
jno
mov
add
popf
cli
fildll
pop
cmp
and
mov
mov
and
xor
inc
push
pop
mov
mov
add
cmp
in
mov
lcall
aas
divb
lods
mov
push
or
and
pushf
mov
arpl
push
or
mov
pop
outsb
sarb
xor
out
shrb
loope
fwait
mov
mov
sbb
jmp
jp
je
mov
hlt
sbb
jne
and
xchg
xor
pop
mov
or
test
lret
insb
jbe
ret
sbb
mov
leave
jo
lds
fadds
js
nop
sub
or
jg
mov
push
nop
or
sbb
mov
inc
adc
lock
int
neg
push
roll
fcoms
fsubl
fsubr
or
or
fcmovb
call
or
jle
subl
in
jl
hlt
and
out
lcall
inc
mov
add
clc
loopne
mov
jae
adc
push
dec
dec
xchg
cs
dec
mov
aaa
scas
mov
mov
imul
rcll
rorb
movsb
mov
fwait
orl
pop
sbb
popa
mov
lea
in
loop
mov
sub
out
push
jbe
and
jbe
lcall
jo
pop
xchg
setbe
outsb
add
sbb
rorb
jl
dec
xlat
mov
or
and
test
repnz
daa
cmp
xchg
das
popa
or
adc
push
add
push
and
cli
pop
mov
sbb
lahf
adc
xchg
xchg
ret
imul
sub
or
in
hlt
fstps
push
cli
xor
jae
or
add
fwait
fwait
jo
adc
xchg
cmp
jne
mov
imul
dec
fstpt
fmull
add
xchg
sub
inc
lods
mov
fs
or
insb
mov
add
mov
fisubrl
fcmovnb
dec
or
test
fisubrl
cmp
insl
repnz
cmpl
mov
adc
mov
aad
cli
scas
dec
xor
cmp
pop
xchg
push
popa
push
out
mov
xchg
dec
pop
jns
repz
push
lock
and
xchg
les
lds
subb
scas
out
adc
dec
xchg
xchg
dec
dec
add
insb
add
xchg
ja
cmp
mov
stos
stos
lods
push
push
jge
pop
das
js
cmpsb
rolb
cmp
movsl
in
dec
lret
in
mov
in
daa
sub
push
dec
lods
lret
test
imul
cmp
imul
mov
mov
bound
aam
xchg
mov
sti
fldt
aad
sub
int3
mov
push
shrb
fld
and
dec
push
sbb
mov
and
dec
das
inc
sbb
fstpt
sbbl
inc
pop
jge
nop
enter
cmp
cmc
xchg
lret
pop
dec
mov
xchg
cs
stos
clc
aas
loope
or
leave
cltd
fsubl
shll
les
inc
mov
inc
stos
loope
cli
jmp
lret
lahf
test
xchg
lock
push
mov
add
pop
pop
pop
insl
nop
notb
mov
mov
cmp
out
movl
pop
mov
stos
sub
scas
stc
xlat
clc
jo
out
mov
mov
test
cltd
aaa
mov
sbb
mov
rclb
pusha
cmp
loopne
stos
or
bound
mov
or
push
std
xchg
ud2
push
push
mov
clc
add
aas
or
inc
inc
and
jnp
nop
in
std
sbb
jae,pn
and
mov
sar
add
sbb
dec
jecxz
inc
lods
bound
ja
sub
or
std
jne
push
mov
xor
cwtl
pop
inc
inc
stos
sbbb
push
or
stc
dec
sarl
cmpl
aad
aad
ja
adc
or
inc
push
pop
dec
out
iret
imul
repnz
pop
and
and
push
xchg
int
stos
es
out
cld
push
mov
xor
push
loopne
les
pop
push
pop
icebp
add
pop
dec
sbb
lret
jge
cmpsb
outsl
and
lcall
and
jp
sbb
push
stos
xor
inc
data16
push
lods
cmp
subl
adc
inc
out
pop
xor
sahf
mov
jo
pop
xchg
fidivs
cli
lds
int3
je
mov
clc
mov
loop
pop
loope
or
push
sbb
push
cmc
xor
mov
add
div
iret
xchg
inc
lret
cmp
push
clc
push
lods
daa
add
mov
sbb
adc
cltd
and
fnstenv
ss
push
imull
fwait
insl
loopne
jns
add
mov
or
mov
mov
fmul
inc
addb
hlt
lret
sbb
and
cmp
inc
test
fsubrs
and
mov
jbe
add
stos
loopne
push
test
sbb
mov
mov
in
repz
and
fisttpl
adc
sbb
adc
add
mov
jle
imul
jl
mov
imul
push
mov
cmp
lcall
or
xchg
jo
and
insl
and
mov
ret
testb
sub
aad
das
or
ja
iret
mov
fnstenv
mov
fistps
mov
fisubl
inc
es
subb
push
hlt
pusha
xchg
lds
sub
lock
stc
fs
cltd
or
std
jb
std
into
add
push
loopne
stc
cli
pusha
fdivl
dec
and
mov
xor
or
stos
pop
rcrb
pop
sub
sub
mov
jmp
mov
lds
or
je
add
scas
dec
pop
dec
fmul
push
adc
leave
movsl
xor
mov
repnz
jb
add
xchg
pop
push
mov
xlat
push
ret
dec
cmp
leave
dec
push
add
imul
push
pop
hlt
and
sub
daa
mov
iret
push
in
sub
pop
dec
repnz
dec
imul
divl
pop
test
addr16
out
jae
imull
inc
sbb
cmp
inc
push
mov
mov
sub
insl
lahf
mov
aad
xchg
sbb
ljmp
ja
or
loopne
push
ja
dec
fldl
sbbb
xor
xor
in
jno
xor
or
in
jnp
mov
je
sbbb
mov
dec
repnz
mov
or
jge
ret
inc
mov
add
push
mov
dec
add
es
fildll
xor
dec
das
loop
je
mov
addr16
mov
rol
sub
jo
ret
aad
sbb
loopne
cmp
and
testb
inc
mov
enter
inc
sbb
mov
and
mov
and
xor
sbb
pop
xor
daa
xchg
push
jns
std
hlt
mov
mov
mov
push
jg
mov
sub
mov
mov
cmp
xor
push
mov
dec
fistl
ljmp
dec
mov
inc
fcmovne
stos
sub
pop
mov
add
fs
sub
cmp
push
ja
cmp
or
jl
sub
movsb
push
xchg
mov
sti
jmp
jg
insl
loope
push
pop
rorb
mov
dec
xor
adc
push
orb
inc
notl
stos
adc
lods
es
mov
js
sub
lahf
cltd
test
in
dec
jae
jo
sub
adc
cltd
lret
outsb
sbbb
loopne
ss
fimuls
shl
ror
repz
pushf
inc
xchg
sub
loop
in
loopne
lds
into
ret
lods
mov
mov
out
xor
cltd
push
or
mov
gs
xchg
popf
mov
jge
arpl
fsubrs
and
add
jl
fdivs
mov
ret
aaa
loop
imul
or
mov
dec
sbb
mov
sbb
or
inc
push
mov
add
push
xor
ljmp
mov
rclb
lret
call
mov
adc
fiadds
jns
lahf
or
pop
lods
fs
out
imul
aaa
or
lcall
test
cmp
mov
lahf
shll
pop
pop
bound
gs
icebp
or
mov
rcll
cltd
scas
or
jg
pop
jbe
or
es
and
or
daa
dec
fistl
sbb
sbb
mov
mov
xor
filds
and
adc
sbbb
or
mov
cmp
imul
shlb
out
jns
pop
inc
pop
notl
clc
pop
jecxz
push
and
jp
cwtl
and
std
cwtl
pop
dec
gs
imul
sub
mov
movsb
roll
arpl
and
or
rclb
sub
dec
inc
jp
mov
mov
push
loopne
fldenv
outsl
mov
arpl
mov
sbb
cmpsb
fbstp
cmp
mov
pop
in
out
ret
cmpb
mov
pop
pushf
loop
cmp
sbb
inc
aaa
sub
push
sbb
pop
into
inc
ss
cmc
mov
or
in
xor
daa
xchg
mov
mov
popa
addr16
xchg
adc
xor
hlt
sub
fistpll
mov
aas
je
sbb
lcall
aaa
in
inc
lods
in
enter
xlat
push
dec
mov
sbb
enter
jmp
fisubrs
out
cld
adc
xchg
lock
adc
inc
mov
push
mov
icebp
and
out
out
pop
xor
inc
push
scas
adc
out
popf
aam
fcmovnb
leave
adc
into
xchg
sahf
xchg
inc
jo,pn
leave
or
lock
int
addr16
stos
int3
adc
or
mov
xchg
xlat
dec
push
jbe
jno
dec
ja
nop
mov
mov
pushf
cld
mov
jno
mov
push
ror
addr16
repz
out
sbb
sbb
xchg
in
jle
idivl
ja
lcall
lds
cmpsb
loope
iret
jge
sub
pop
ror
scas
or
add
stos
dec
ljmp
mov
pop
rcll
popa
pop
stos
push
mov
lret
xchg
mov
in
xchg
sbb
mov
push
int
shrl
mov
repnz
pop
imul
push
repz
mov
insb
imul
cld
ret
fwait
push
xchg
stc
adc
pop
sub
mov
dec
es
push
push
fsubrs
rorl
int
repnz
shrb
adc
cwtl
mov
cmpsb
push
adc
and
pusha
scas
lcall
repnz
jo
pop
sahf
cwtl
daa
xchg
xor
xor
push
pop
adc
mov
sbb
negl
xchg
scas
inc
loope
inc
xchg
jmp
xlat
fmuls
push
cmp
add
fucomp
les
lds
insb
in
int3
or
cmp
push
adc
cltd
push
sub
lods
sbb
aas
sbb
xchg
jbe
je
scas
mov
movsw
arpl
or
xor
test
inc
mov
pop
std
fwait
mov
xchg
pushf
cmp
cwtl
xchg
push
cmpsl
sarb
stc
addr16
xor
jnp
aam
push
movsl
xchg
mov
cmp
jno
inc
insl
repz
mov
adc
scas
outsl
jmp
pop
mov
push
popf
and
dec
cmp
fsubs
push
movsb
mov
rcr
das
in
lock
lds
outsl
sub
sub
or
mov
push
or
cmp
dec
mov
or
mov
mov
rorb
pop
xchg
sub
jecxz
push
aaa
xchg
ret
stos
dec
jnp
or
jl
gs
lcall
lahf
push
sbb
sub
ret
xorl
dec
xor
shrl
out
stc
xor
xor
push
xor
cwtl
fwait
ds
push
popl
and
pop
add
mov
ret
lret
xor
cs
xchg
lods
imul
add
sbbb
add
in
aad
rcr
les
out
pushf
add
mov
inc
test
adc
das
sub
shr
sbb
mov
pop
jne
add
jmp
inc
leave
inc
fiaddl
push
cmp
shll
imul
aas
mov
push
call
fnsave
shrb
push
sbb
mov
fcomp
rol
add
scas
in
shlb
daa
sarb
ds
jl
xchg
dec
fisubrl
jne
jmp
cmpsl
jge
adc
and
in
ret
sbb
lea
and
cs
xor
das
pop
out
sbb
jo
or
push
icebp
push
cmp
jg
in
mov
call
push
decl
out
lcall
inc
les
jecxz
ds
pop
and
fdivr
imul
and
sub
out
sub
mov
test
loope
jmp
mov
jge
mov
mov
int3
sub
add
cltd
mov
lahf
sub
rcll
jb
mov
std
cmp
jo
lock
adc
push
mov
jo
pop
imul
arpl
lods
and
pop
push
push
leave
in
cmp
jl
xchg
dec
push
jp
das
mov
push
and
push
xchg
dec
xor
inc
sbb
ret
inc
xor
xchg
inc
imul
xchg
dec
mov
adc
arpl
je
arpl
jne
lahf
icebp
std
ficompl
adc
fidivrl
in
sub
lret
sub
insl
mov
popf
int3
ds
std
mov
int3
aam
xor
sbb
add
cmc
data16
ficomps
imul
sub
aas
out
mov
cmp
sti
in
dec
or
aas
sbb
imul
push
jns
sub
cmp
mov
xchg
negb
push
inc
pusha
je
xchg
test
pop
jo
imul
lods
cmp
cmp
daa
inc
jecxz
pop
imul
pop
in
sbb
push
test
and
lret
cltd
dec
outsb
psrlq
rorl
test
repnz
inc
xchg
lahf
enter
or
jne
and
outsl
dec
sbb
pop
fs
mov
push
mov
mov
xchg
xchg
pop
adc
cltd
cld
dec
idivb
cmpsb
mov
jns
adc
ja
mov
in
stos
mov
xor
imul
repz
or
test
jbe
loopne
cmp
mov
add
sti
pushf
into
jge
flds
push
insb
popf
cmp
js
push
mov
pop
or
pop
mov
mov
stc
int3
daa
mov
in
push
and
pushf
mov
and
jno
aas
jmp
fadds
shlb
cmpsb
paddusb
jne
stos
dec
adc
or
add
stos
sub
and
xchg
push
out
xchg
dec
sbb
mov
das
fsubs
jg
scas
pop
loopne
mov
fists
fdivl
rcll
test
loope
mov
cmp
stos
jge
lret
imul
push
add
inc
xor
leave
sbb
push
mov
lods
aad
cmpsl
movsl
es
ss
pop
xor
idivb
add
aaa
jmp
sub
movsl
loopne
push
out
sahf
inc
sbb
ret
fidivrs
push
mov
cmp
xchg
sbb
fcmovb
xchg
sub
sbb
mov
sub
xchg
mov
pop
mov
add
insb
test
int
sti
or
jb
lock
imul
jne
or
add
out
pop
lcall
arpl
jbe
jg
gs
mov
mov
dec
pop
and
mov
mov
jno
out
mov
in
mov
mov
js
inc
popf
mov
push
inc
idiv
mov
cmp
sbb
dec
mov
and
jno
cmpsl
jo
stos
shl
and
mov
add
int3
mull
xor
xlat
mov
icebp
ret
insl
or
mov
mov
sub
mov
stos
out
dec
inc
jl
outsl
cmp
subb
sub
repz
push
sarb
pop
das
pop
das
dec
mov
aam
pusha
aas
jmp
scas
mov
filds
cltd
cmp
test
xor
pop
xchg
jp
jns
cld
popf
out
sbb
push
dec
in
mov
pop
push
cmpl
addb
fisttps
ret
les
jbe
fsubrs
push
jbe
mov
out
pop
inc
mov
test
xor
test
hlt
imul
xchg
adc
xchg
mov
sti
fistl
xor
aad
fwait
mov
movsb
cmp
xor
daa
jo
rol
das
in
mov
sbb
pop
pop
aad
cmp
cmpsl
repz
push
mov
adc
lds
outsl
insl
lods
push
lret
cmp
stos
mov
and
into
mov
imul
lea
cmp
lods
jmp
inc
jle
inc
gs
push
into
lret
fcoml
stos
push
pop
xor
popa
xchg
or
stc
pop
sub
dec
push
into
sbb
bound
nop
cmp
test
inc
cld
je
test
xor
dec
or
sub
or
ds
into
mov
pop
lods
mov
mov
pop
scas
jge
jmp
sub
enter
inc
inc
mov
jns
xor
fildll
sarb
xor
nop
pushw
xorl
mov
cltd
pop
cmpsl
or
push
aam
scas
aas
cmp
jl
lea
xchg
pop
test
sbb
push
sbb
das
inc
dec
pushf
xchg
repz
fsubl
pop
jmp
push
ret
or
lods
push
test
push
gs
mov
cmpsl
mov
xchg
adc
dec
loop
nop
test
push
rorb
ja
dec
std
insb
gs
xor
dec
inc
daa
or
sub
dec
jge
stc
daa
scas
data16
adc
jb
ret
sub
and
pop
pop
pop
inc
fs
or
mov
inc
ds
push
arpl
dec
inc
mov
addr16
int
or
pop
stos
nop
addr16
shrl
or
sbbl
insb
cs
out
repz
rol
add
push
inc
mov
and
push
loopne
add
int3
out
stc
enter
imul
pop
sub
addr16
jb
and
sbb
iret
pop
nop
or
or
mov
je,pn
mov
inc
cltd
jnp
shl
test
stos
pop
push
adc
sub
or
add
jae
enter
mov
rep
and
repz
popf
call
xchg
cmpsb
dec
cmp
inc
insl
mov
stos
aad
xor
cmp
dec
pop
push
aas
xor
lea
scas
pop
scas
ror
lcall
push
loopne
ret
arpl
dec
lcall
in
sub
xor
cmp
in
pushf
and
cmp
push
cwtl
in
pop
inc
jge
ja
mov
inc
or
leave
push
xlat
add
sbb
in
lret
push
in
in
stos
sub
or
mov
jmp
mov
add
stos
ja
fisubl
in
add
xor
movsb
outsb
sub
scas
stos
addr16
cld
push
filds
pop
cwtl
es
cmp
mov
inc
shl
mov
mov
fisubs
adc
inc
pop
jge
andb
jo
add
pop
push
into
orl
je
loope
push
adc
lds
loope
dec
ds
idivl
add
add
push
xchg
xor
xor
addr16
icebp
shl
push
xchg
pop
popa
jno
dec
outsl
sub
mov
cmp
ss
outsb
repz
xor
and
inc
xor
mov
jae
push
stos
push
test
iret
aaa
xchg
xchg
cmp
lods
mov
and
ret
adc
pop
lock
in
xor
push
inc
sub
push
dec
mov
push
mov
sub
pop
inc
sbb
cmpsl
je
mov
dec
imulb
in
pop
xchg
dec
fldl
xchg
push
push
pusha
push
decl
lret
aad
insl
scas
lcall
sub
pushf
ds
scas
cmc
mov
add
mov
or
and
sbb
jp
lds
pop
mov
das
jl
mov
fldcw
add
xor
add
rclb
adc
inc
adc
ret
loope
jnp
mov
xchg
popf
inc
push
lock
jnp
dec
int3
mov
inc
bound
int
xorl
mov
xor
pop
mov
jle
mov
add
mov
cwtl
sub
mov
testb
and
je
das
stos
movsl
insl
xchg
push
add
sbb
fs
fst
ret
pop
roll
lcall
cs
mov
in
lds
xor
sbb
mov
cli
pop
dec
mov
les
mov
xchg
scas
scas
test
clc
test
cmpsl
mov
dec
fwait
or
push
add
sbb
or
and
repz
cmp
test
jmp
dec
fcmovb
rcrl
jnp
out
cmc
lcall
shrl
pop
shrl
jp
nop
rcrl
push
pop
inc
maskmovq
imull
div
cmpsl
jbe
cmp
xchg
push
jmp
jge
push
int
aaa
push
sahf
mov
lret
cmp
cmp
hlt
xor
jns
insb
dec
dec
shrb
popf
inc
test
addr16
cmp
stos
and
fmuls
pop
mov
inc
xchg
ds
mov
pop
popa
jle
mov
nop
ret
lds
enter
je
js
jg
push
mov
stc
cltd
ret
scas
pop
mov
or
mov
add
xor
fistpl
pop
into
js
aad
imul
pushf
jae
xor
lea
push
lods
divps
or
xchg
cld
push
dec
daa
xchg
daa
sbb
inc
dec
clc
ss
or
loope
pop
sbb
jl
hlt
inc
inc
lcall
clc
dec
inc
icebp
das
push
push
mov
or
or
cs
mov
sbb
or
push
cmc
call
inc
cmp
out
loop
mov
aas
jecxz
ja
lods
dec
pop
mov
test
fisubl
sub
lods
inc
imul
dec
adc
ficoml
or
fisubrl
mov
mov
add
mov
jmp
jl
hlt
and
push
or
adc
jb
dec
jb
in
push
jl
mov
pop
fnstsw
enter
push
in
jl
xchg
cli
push
inc
lods
mov
xchg
jecxz
add
movb
repz
in
cmp
add
jo,pt
in
ret
cmp
stos
sahf
dec
testb
cmp
out
loopne
lock
or
rolb
adc
add
imul
dec
cmp
xchg
ficoms
pop
or
pop
popa
jg
cmp
sub
or
jmp
sbb
or
and
int
push
ret
push
pop
sahf
and
int3
or
rcrl
lock
daa
mov
test
and
mov
xchg
loop
lea
mov
lea
dec
imul
fldcw
adc
mov
jnp
mov
aam
mov
mov
fwait
les
js
xchg
stos
mov
sbb
push
push
xchg
shrb
or
and
enter
int3
ja
mov
enter
xchg
mov
ljmp
test
ljmp
std
negb
cmp
cmpb
adc
push
dec
test
sbb
dec
add
mov
or
popf
lds
test
lods
inc
leave
insb
clc
out
out
pop
stos
lock
mov
pop
pop
rcl
fwait
xor
ljmp
add
pop
cmp
rorl
mov
fldt
jmp
inc
cmpsl
pop
jns
iret
mov
push
out
shll
xchg
fcomps
pop
dec
push
jno
xchg
xlat
mov
xor
leave
sub
aad
push
shrl
xchg
xor
nop
mov
and
sti
js
mov
mov
inc
or
xchg
pop
mov
outsb
push
sub
fimuls
insl
repnz
mov
arpl
push
fwait
inc
inc
sbb
cmc
ret
inc
adc
aaa
pop
loopne
or
dec
aam
dec
addl
and
sbb
repnz
jge
fbld
inc
popa
jl
mov
bound
insl
pop
js
int
jbe
adc
enter
shr
pop
dec
dec
mov
sbb
adc
rorb
mov
push
push
jne
mov
xlat
mov
lods
and
iret
addb
cmpsl
push
or
push
cwtl
jg
stc
adc
orl
dec
mov
add
mov
movsl
test
mov
cld
add
adc
xor
push
sub
lret
jnp
mov
push
movsb
int
xor
xor
sbb
clc
adc
lea
mov
or
inc
lret
mov
aam
ss
test
pushf
push
mulb
add
add
std
push
add
cwtl
rcrl
pop
mov
xchg
xlat
sub
inc
addr16
xorb
cs
cmp
pop
inc
jb
mov
mov
add
sub
hlt
out
pop
cmp
add
pop
mov
ss
mov
packsswb
push
cli
testl
ret
ja
fisubrs
cmp
imul
fwait
subl
mov
ret
decb
insb
dec
cmc
arpl
dec
inc
fwait
test
stos
ficoml
xor
inc
sahf
nop
push
or
push
mov
movsb
adc
iret
jo
mov
and
mov
enter
sahf
std
in
xchg
js
jl
lea
jge
cmp
pop
sti
xor
or
jmp
lds
aam
dec
cmc
sbb
cmp
pop
pop
mov
out
mov
xchg
lds
xor
fcmove
out
push
dec
inc
mov
out
push
sbb
dec
sbb
shl
fcomp
loop
es
dec
sarb
jnp
mov
negb
test
int3
int3
xor
jnp
icebp
sti
mov
das
xor
mov
aas
mov
sbb
imul
into
xchg
dec
push
add
xlat
in
jge
ss
fsubrl
ror
xlat
push
lea
scas
add
xchg
cmp
aam
sti
pop
cs
xchg
rcrb
gs
into
mov
pop
in
jbe
mov
leave
xchg
cmpb
ficoml
push
and
jecxz
cltd
cmp
pop
mov
push
sub
mov
lea
cwtl
dec
xchg
mov
aam
push
mov
mov
jo
cmc
pushf
cmpsb
std
push
call
sub
pop
cmp
or
add
sub
mov
pop
insb
and
dec
lods
sbb
push
or
sub
cmp
sub
inc
lock
movsl
mov
jle
xchg
fisttpl
cli
cwtl
and
adc
push
stos
push
lea
loop
pusha
xor
jmp
movsb
push
rol
lahf
jl
cli
add
ret
jg
les
xor
dec
cmpsl
std
dec
ficoml
lret
ret
dec
int
daa
fdivrs
ljmp
loop
ss
fs
push
js
dec
push
sbb
out
jp
aaa
lcall
lea
inc
push
mov
das
loopne
jo
add
loope
jns
pop
cmp
push
and
cmc
push
fistl
jge
cmpsl
xchg
int
mov
stos
out
aas
shrl
shrb
fadd
rolb
sbb
ss
dec
int3
mov
gs
inc
adc
mov
rol
cmp
mov
xchg
inc
out
mov
cmp
pop
gs
clc
popa
out
mov
lahf
inc
lret
jle
mov
sub
subb
lods
jmp
adc
push
pop
push
lds
pop
psubq
lcall
lods
push
in
push
mov
pop
ljmp
or
fdivs
fsubl
addl
lret
jle
loop
in
bound
mov
cmpsb
fs
pop
fcompl
jno
fisubrs
lret
gs
fidivrs
in
jmp
pushf
pop
enter
and
out
xor
add
add
push
inc
xor
xchg
daa
fisubs
lcall
mov
out
mov
pop
scas
movsl
pop
mov
ret
test
mov
shrb
test
xor
and
idivl
scas
adc
data16
sub
xor
mov
aad
aad
les
loop
gs
mov
sbb
adc
rorl
dec
out
xor
adc
ret
iret
mov
enter
add
movsl
add
mov
notl
add
outsl
jne
pop
loop
movsb
movsl
aam
mov
push
lock
mov
in
mov
mov
xchg
mov
mov
fidivs
loopne
jg
cltd
popa
sbbl
in
ret
stc
add
dec
mov
scas
and
std
xor
lcall
or
stos
into
jo
andb
loope
mov
mov
pop
sub
mov
out
xlat
sub
xor
loopne
or
jge
int
addr16
pusha
test
xlat
popa
xor
cld
mov
mov
fimuls
out
pop
scas
sub
aam
add
adc
enter
imul
jne
stos
mov
and
mov
andb
and
sbb
cmp
and
cmp
inc
adcb
fadds
xor
xchg
imul
pop
pop
push
mov
jb
and
jecxz
sub
sbb
push
cmp
xchg
das
jns
dec
mov
in
jo
and
insb
cmpsl
pop
or
xchg
add
mov
pop
stos
dec
jno
mov
lret
lcall
fxch
jge
inc
or
dec
jno
sub
jmp
pusha
sbb
mov
cmpsb
sbb
lret
xchg
es
mov
xchg
add
jnp
sbb
mov
notl
push
ss
imul
insl
insl
sahf
jge
shll
push
rclb
mov
jmp
mov
repz
js
jmp
cli
les
or
aad
xchg
pop
mov
jge
and
sub
jne
out
jp
int3
in
push
add
stc
mov
test
dec
sub
fs
subb
push
rcl
loopne
int
bound
push
lock
js
cmp
scas
sbb
loopne
cmc
lods
push
and
jne
insb
add
adc
add
jle
cmpsb
jg
shrb
movsl
sub
mov
out
out
inc
ss
sti
sti
sub
mov
lcall
lret
fcompl
mov
adc
out
cmp
xchg
lds
gs
pop
test
xchg
mov
sbb
stc
dec
xor
shll
cltd
sub
jbe
shll
add
test
cld
mov
xorl
push
pop
ljmp
xor
mov
icebp
fisubrl
cltd
cmpsb
ret
imul
and
mov
inc
dec
lods
das
add
movsl
fwait
loop
arpl
and
adc
adc
or
push
and
hlt
mov
pop
jg
sbb
jns
sub
adc
mov
cmp
push
mov
aam
dec
sub
push
xlat
mov
jae
shll
xor
pop
es
out
cltd
loopne
aas
pop
add
pushf
test
cltd
and
cmp
or
in
push
loop
imul
xchg
das
mov
adc
jne
xor
aam
cmpsl
jmp
push
xorl
outsb
cmp
cs
mov
ret
stos
sub
mov
cmp
jle
pushf
or
push
out
mov
and
push
scas
mov
jns
inc
mov
cmp
cwtl
or
sbb
pop
or
add
xchg
fistps
adc
mov
adc
cmpsb
xor
cmp
push
sbb
sub
xor
jo
sub
sbb
push
inc
push
movsl
jge
xchg
and
jp
xlat
xchg
imul
sbb
push
cmp
inc
aad
fldt
mov
fildl
mov
cmp
imulb
ret
mov
xchg
pushf
sarb
inc
insl
xchg
inc
stos
pop
test
sbb
or
mov
mul
xchg
loopne
sub
pop
dec
dec
and
dec
xchg
lods
cmp
jnp
adc
nop
repnz
movsl
aam
je
js
cmpb
out
sbb
cmc
rcll
gs
push
push
arpl
popl
adc
xor
sub
sbb
and
mov
repz
inc
test
pop
jne
push
hlt
aam
cli
or
push
mov
ret
es
in
test
lahf
and
jbe
xor
push
sub
mov
adc
sub
or
cwtl
sbb
loop
popf
repz
mov
popa
sti
mov
jp
cmc
sub
cmp
inc
or
xor
xor
and
cmp
add
cli
rolb
dec
out
jno
cltd
arpl
and
outsb
fsubs
mov
mov
push
scas
ret
aas
xchg
and
inc
mov
test
jnp,pn
xor
outsl
test
ret
ficoml
loope
xchg
cmpsb
mov
sub
xlat
cmp
test
mov
mov
in
mov
jno
push
mulb
pusha
test
mov
pop
jge
out
loop
cwtl
dec
hlt
scas
mov
push
scas
pushf
mov
lahf
xchg
mov
jb
xor
adc
icebp
xchg
jle
cwtl
inc
inc
fisttpl
dec
xchg
inc
sbb
popa
sub
add
pop
xchg
paddb
sti
or
out
repnz
inc
pusha
or
add
popf
pop
cs
jo
rol
jmp
fidivrs
pop
pop
push
cltd
mov
mov
inc
or
cmp
shll
sub
nop
dec
lods
enter
cltd
mov
jg
imul
cmp
aam
mov
cmp
mov
mov
mov
dec
movlps
mov
mov
dec
sahf
and
push
pop
in
cmp
or
fldenv
inc
and
gs
push
push
xchg
cli
mov
cmp
pop
scas
cmp
or
sub
mov
cmpl
in
clc
mov
xchg
outsb
je
mov
mov
test
xor
and
jmp
movl
iret
js
xor
and
out
andb
push
inc
inc
xchg
jns
mov
rcll
stos
push
xchg
sbb
inc
mov
movl
jne
mov
push
pop
imul
push
test
sbb
mov
adc
out
dec
shll
lcall
mov
outsl
jge
das
xchg
xchg
sti
push
xchg
jb
js
mov
roll
dec
repz
scas
and
inc
and
test
pop
pop
xchg
jl
pop
rorl
movsb
mov
inc
lret
jb
es
rorl
scas
inc
and
and
lret
xor
or
push
mov
mov
clc
loopne
and
movsb
jp
xor
adc
loop
xchg
xchg
stc
dec
xor
cmpsl
adc
test
adc
or
or
mov
dec
jmp
xor
xchg
ret
cld
std
aam
cmp
ja
into
mov
pop
xchg
shl
mov
add
pop
cmp
pop
adc
pop
cmp
cmp
pop
pop
pop
cmpsb
and
loop
ret
clc
add
popa
mov
pop
ja
cmpsb
test
rolb
hlt
push
sbb
xlat
mov
mov
xchg
lods
shrb
mov
push
add
popf
inc
lods
inc
imul
pusha
into
arpl
or
add
mov
dec
xchg
aam
mov
fcmovnu
pop
dec
out
cmpl
sub
dec
dec
dec
lahf
pop
rclb
xchg
fldenv
leave
adc
cmp
test
jo
in
rsqrtps
imull
push
mov
sbb
inc
test
lods
add
sub
in
mov
or
or
aas
inc
int
es
mov
je
pop
push
mov
xor
fsubp
jnp
dec
out
shll
loope
scas
out
ret
orl
pushf
adc
add
lock
jae
push
bound
mov
dec
or
icebp
and
cmpsb
mov
std
ret
add
sub
outsb
adc
ljmp
fsts
ljmp
mov
jo
dec
inc
int3
sarl
add
rorl
mov
daa
js
mov
cwtl
inc
sbb
jmp
cmpsb
or
sub
mov
cmp
mov
data16
repz
fcoms
stc
sti
sbb
sub
sarl
test
pop
and
adc
jne
lret
and
sub
icebp
jmp
mov
sub
loope
cmpsb
loopne
jg
enter
rcrb
mov
add
pop
dec
sbb
sbb
daa
lret
outsl
je
inc
jb
jne
dec
or
scas
lock
pop
cmp
fistps
outsb
mov
mov
in
repz
and
rcrb
arpl
pop
aam
or
cmp
mov
fldl
add
add
data16
pop
xchg
jns
pop
loopne
fidivrs
xchg
jno
cmc
test
or
aad
pop
test
cmp
sub
mov
data16
mov
and
iret
js
xchg
jmp
sbb
push
aas
xor
pop
insl
mov
mov
xchg
fcomps
andl
scas
ffreep
lods
lcall
jns
ljmp
or
aas
ret
adc
mov
xor
jg
out
nop
sub
mov
jo
fstps
dec
movsb
rorb
fidivl
lods
dec
mov
xchg
xor
outsb
xchg
mov
push
scas
ret
mov
fs
dec
push
fldt
stos
mov
sub
and
xor
es
outsb
sub
negb
mov
int3
mov
xchg
rep
in
ds
repnz
gs
lahf
pop
bound
mov
mov
mov
aaa
aas
and
fimull
dec
shr
scas
push
cltd
cmc
adc
jecxz
fsubs
in
xchg
ds
shl
lods
gs
subl
adc
lock
mov
mov
xlat
pop
adc
jnp
loope
ds
clc
in
mov
fwait
sbb
neg
ret
lret
push
jne
aam
adc
in
hlt
ret
inc
aas
jmp
ret
test
mov
inc
cmp
int3
cwtl
clc
cmp
add
pop
push
mov
xchg
addr16
xor
into
inc
inc
jnp
jmp
xor
into
lahf
sub
inc
cmpsb
inc
leave
inc
fcompl
xor
mov
push
adc
lods
inc
jle
out
add
sub
mov
xchg
xchg
cmpsb
sub
loop
sbb
sub
out
subl
jae
mov
dec
and
jle
pop
xor
inc
and
fstpl
in
lret
dec
adc
hlt
xchg
inc
inc
in
sbb
faddl
jmp
and
bound
xlat
leave
aaa
dec
jg
cmp
add
adc
mov
cmp
cmp
xor
xlat
inc
test
xchg
pop
and
sbb
adc
cwtl
arpl
cmp
scas
jmp
test
or
ljmp
mov
mov
mov
push
icebp
mov
and
ja
mov
mov
fsubs
stos
push
xchg
js
add
mov
dec
daa
and
xor
shll
stc
and
or
adc
aad
xor
cmpl
push
mov
nop
out
push
test
test
imul
push
lret
add
add
xchg
out
inc
popa
add
push
adc
mov
mov
sarb
imul
dec
pop
lcall
pop
cwtl
rcrl
popf
jno
arpl
xor
ja
shll
push
std
jge
and
aad
inc
outsl
jl
rorl
inc
jmp
inc
cmp
mov
xor
sbb
cmp
cmc
push
int3
int
adc
jbe
cld
outsl
inc
sbb
outsl
fidivs
cmp
shll
add
popa
push
inc
dec
test
and
std
cld
js
xor
out
push
dec
movsb
and
jl
stc
adc
push
push
sbb
adc
push
bound
aad
push
fucom
ja
sbb
add
lahf
test
stos
in
neg
pusha
mov
cmp
cmpsb
sbb
dec
or
mov
aad
mov
in
outsb
rorb
dec
fdivs
xchg
cmc
cmp
out
nop
sub
jno
aas
dec
fisubs
iret
or
jno
jbe
out
xchg
inc
ds
fdivr
sbb
std
stos
pop
loopne
adc
cmp
add
popa
jb
iret
add
xlat
lods
js
dec
add
jl
out
push
xlat
loopne
pushf
inc
jb
jmp
shll
fcoml
call
dec
ret
jns
dec
mov
pop
fcoml
loopne
adc
push
mov
push
hlt
adc
test
ficoml
pop
add
cmp
pop
and
outsb
pop
add
xchg
out
je
xchg
subl
xchg
ljmp
adc
pop
pop
movsl
repnz
stc
lahf
or
fisubs
sub
xchg
push
jo
sbb
push
jo
arpl
fcomp
std
addr16
xchg
xchg
loopne
add
add
lods
add
xlat
out
inc
sub
xlat
lods
xchg
fadd
popf
fistpll
mov
ljmp
jns
push
test
jo
add
fisubs
movsl
dec
cmp
daa
jecxz
pushl
xchg
mov
arpl
dec
pop
fwait
stc
xchg
lock
out
ficomps
jl
push
fmull
lcall
fstl
mov
cwtl
add
test
out
lcall
fists
push
cli
ljmp
lea
and
out
or
cs
repz
inc
shlb
int
jmp
movsl
or
xchg
jecxz
repz
pop
add
or
jbe
div
push
lods
or
sarb
test
mov
call
mov
mov
sarl
in
clc
mov
in
addr16
mov
cltd
cli
mov
ljmp
lret
sbb
inc
lock
sub
or
sahf
stos
andl
jnp
icebp
js
add
repz
add
push
aam
add
daa
rolb
jae
pop
sub
jmp
jno
cmp
cmpsb
ret
sub
testl
repnz
test
loope
loop
out
shlb
in
test
mov
call
sub
scas
test
lahf
mov
push
add
mov
addr16
fwait
jns
push
sub
push
sub
jp
pop
push
xor
repnz
adc
and
or
repz
leave
lods
mov
jnp
out
aas
movsb
mov
sub
subb
scas
xchg
mov
or
and
outsl
xor
out
jne
loopne
jge
cmp
nop
push
sub
pop
inc
bound
cmp
xchg
inc
mov
xchg
cmp
xchg
sub
sti
inc
les
fildll
cmc
dec
roll
sub
and
mov
call
aad
xor
xor
sbb
or
test
call
add
sbb
lock
mov
imul
mov
push
lods
cmc
les
push
int
mov
sub
sahf
outsl
jns
js
sbb
sbb
mov
pop
mov
push
jbe
xchg
add
jns
test
cmpl
or
inc
popf
jg
adc
inc
cmpl
adc
xchg
cmp
mov
pop
fisubrs
loopne
mov
inc
fcmovne
outsb
cmpsb
xchg
es
inc
out
test
jecxz
lahf
jmp
mov
outsb
cmp
cmp
adc
bound
or
iret
mov
sbb
idiv
ja
pop
lods
adc
lahf
xchg
jns
sbb
xorps
push
into
in
cli
jbe
add
in
jg
cmpsl
sbb
xchg
xchg
push
pop
int
fnstenv
leave
inc
shlb
cli
arpl
mov
or
mov
push
in
cmp
sub
cmp
loope
cltd
xor
lahf
outsb
icebp
jg
scas
add
mov
lret
and
jb
fisttpl
mov
lods
pop
out
inc
sub
dec
stc
push
fimuls
pushl
sbb
xor
fs
scas
xchg
pop
push
jns
xchg
mov
pop
cmp
jnp
or
bound
pusha
mov
mov
xor
call
sub
rolb
or
mov
imul
sub
jp
inc
push
enter
rcll
mov
xor
or
cmp
push
push
fwait
xchg
jbe
push
ficomps
inc
jmp
and
lock
sbb
add
int3
jbe
jns
push
jmp
cmp
std
add
push
pushf
dec
adc
pop
cltd
jb
cmp
push
add
mov
out
stos
popf
pop
pushl
jg
leave
pop
pop
mov
bound
jle
adc
movsl
adc
adcl
jne
sub
and
repz
fwait
cmpsl
cld
adc
mov
xor
xchg
cs
add
jae
jns
mov
stos
cmp
fcompl
aas
push
add
les
ret
loopne
dec
inc
mov
mov
jl
outsl
mov
and
lock
mov
aas
imul
and
adc
and
push
mov
ret
inc
je
out
xlat
lret
jbe
fcomi
xlat
pop
repz
mov
aam
outsl
adc
outsb
mov
popl
xor
xlat
push
aad
aam
aas
inc
into
lods
or
lcall
in
incb
push
adc
ja
sbb
mov
out
lock
adc
pop
enter
mov
adc
jae
rol
or
pop
or
inc
mov
jae
int
enter
sbb
imul
dec
mov
add
lahf
aam
daa
pop
sti
adc
outsl
or
lahf
lret
mov
in
lods
test
or
mov
test
repz
mov
int3
or
out
mov
xchg
aad
cmpsl
cmp
sub
inc
roll
jb
xchg
jo
stc
adc
xchg
inc
adc
cmpsl
outsl
and
cli
xor
mov
adc
sbb
and
lcall
add
insb
shl
add
inc
cmpsb
int
ret
mov
mov
fbstp
pop
rorl
jge
mov
sbb
pop
jns
cmp
filds
add
jae
jp
stos
imul
jmp
lcall
pop
xchg
out
test
in
push
cmp
cmp
hlt
sbb
lret
out
sub
xlat
jecxz
lock
mov
mov
mov
cmc
push
gs
test
repnz
mov
mov
mov
hlt
adcl
mov
mov
ret
dec
push
xchg
call
cmc
pop
cmc
add
push
xchg
pop
mov
xor
fwait
add
addr16
or
push
add
jmp
adc
cltd
repz
call
leave
lods
xchg
sub
in
xor
dec
daa
pop
mov
insb
add
pusha
scas
dec
jb
imul
lea
sbb
mov
shr
xchg
arpl
jne
cli
mov
jb
jo
add
mov
adc
mov
aaa
pop
mov
xor
sbb
mov
js
pop
inc
std
mov
sbb
pop
test
mov
test
es
out
pop
mov
sub
jl
je
mov
push
jg
xchg
icebp
jae
addr16
cmc
mov
cmp
xor
pop
or
mov
cmpl
cmp
out
pop
add
data16
mov
and
push
sbb
sahf
mov
push
xlat
aas
mov
inc
mov
xor
ja
sub
jl
xchg
mov
test
push
cmp
popf
sbb
and
pop
mov
inc
add
repz
je
rol
add
in
nop
aam
out
mov
xchg
cmc
sbb
lea
cmp
fs
repz
test
and
enter
inc
scas
fwait
lcall
fisubrs
push
stos
sarl
test
scas
cwtl
pushl
lods
test
xlat
mov
ss
adc
dec
pushf
popa
jmp
mov
or
test
cmpb
lds
in
xor
mov
test
leave
fs
lods
inc
sbb
xor
test
fwait
xchg
mov
mov
addr16
mov
xor
movlps
mov
lret
pop
inc
insb
push
or
fs
mov
cmpsb
sbb
scas
push
sub
divl
mov
mov
mov
xchg
xchg
movsb
lods
in
jnp
mov
push
inc
jmp
push
mov
in
shlb
shlb
sbb
pop
inc
lret
jnp
adc
orl
xchg
sub
fstps
into
inc
das
xchg
fldcw
lahf
mov
jp
cmp
out
hlt
movsb
and
xor
cmp
fwait
and
shrl
mov
enter
mov
aad
or
cmc
cmp
loop
inc
sub
pop
xchg
lret
push
in
stos
xchg
mov
orl
add
stc
and
push
mov
jnp
enter
push
das
jns
mov
inc
loopne
leave
pop
int3
loope
leave
push
and
dec
cmpsb
or
ja
sar
mov
imul
in
ljmp
mov
iret
adc
fwait
aaa
jle
xchg
cld
add
in
ds
es
add
jnp
sub
add
mov
out
and
mov
test
sub
cmp
mov
repz
add
js
fcomp
jge
xlat
cmpsb
mov
test
in
xchg
and
lds
frstor
test
push
lods
adc
or
repz
leave
jae
dec
dec
jbe
add
add
or
rclb
push
add
jnp
mov
orb
sbb
adc
bound
aaa
ljmp
sbb
xchg
adc
dec
xbegin
push
in
jne
dec
inc
in
or
leave
pushf
and
in
test
dec
pop
add
outsl
mov
mov
aam
pop
jl
jnp
sbb
bound
add
mov
dec
ficompl
mov
je
inc
movsb
arpl
add
and
insl
pop
test
mov
fidivrl
fsubr
nop
push
pop
gs
out
out
aam
int
mov
lods
push
xor
in
fistps
push
mov
aam
testb
frstor
test
jmp
xor
and
push
scas
and
and
xchg
push
cmp
int
jp,pt
push
loop
sbb
sbb
jns
les
adc
je
aam
data16
sub
inc
mov
push
test
aaa
mov
lods
mov
lea
add
cmc
in
mov
xchg
mov
and
pop
jmp
jmp
sti
mov
ss
sub
rclb
psubb
std
lods
mov
int
xchg
sbb
jbe
bound
rcrb
or
iret
jmp
xchg
jne
mov
pop
arpl
fstl
mov
inc
mov
imul
mov
push
sahf
aam
pop
scas
jns
mov
in
pop
lcall
cmpsl
mov
xchg
pop
jae
ss
fcoml
loope
mov
lods
pop
and
dec
shll
cmpsb
jge
sub
mov
scas
dec
dec
jo
ljmp
push
and
shll
and
mov
mov
xchg
push
sti
mov
jg
dec
xchg
mov
adc
adc
push
jae
add
mov
decb
xchg
int3
xchg
jl
iret
shll
or
lds
mov
mov
jne
sti
and
mov
out
mov
adc
and
add
mov
dec
mov
aad
push
clc
push
in
rorb
mov
sti
dec
vhaddps
std
mov
push
jae,pn
inc
mov
into
jmp
dec
xchg
and
push
insl
adc
xchg
add
inc
clc
in
mov
data16
int3
mov
mov
ffreep
pop
cmpsb
rcll
add
push
jno
mov
cli
jmp
clc
in
sahf
dec
mov
push
cmp
sbb
out
iret
mov
ss
adc
push
int3
pop
lock
add
dec
jns
jecxz
ja
bsf
add
pop
sarl
push
add
ret
jb
movsb
push
fnstsw
mov
mov
mov
fdivrs
das
jne
dec
or
insl
cltd
inc
adc
loope
jle
cmp
stos
aas
scas
adc
inc
xor
sbb
mov
push
xlat
outsl
enter
gs
fmulp
push
cmp
test
inc
fwait
int3
pop
pusha
adc
insb
jmp
adc
adcl
cmpsl
dec
push
mov
xor
imul
test
cmp
pop
out
xchg
jmp
cli
xlat
xchg
add
cmp
cld
outsb
adc
push
pop
shlb
mov
test
andb
add
sbb
mov
jg
or
adc
xchg
inc
int
add
xor
sub
imul
mov
pop
repnz
sbb
sbb
fmull
or
ss
popa
add
add
or
mov
push
add
adc
mov
inc
hlt
xor
cli
dec
fdivr
inc
rcll
scas
movsb
rorl
xchg
push
mov
mov
push
push
jmp
mov
add
into
daa
daa
popa
xor
push
cmp
jbe
push
lret
mov
ljmp
int3
std
sub
iret
test
xchg
ds
sbb
cmp
jae
rcll
and
and
push
lcall
and
loope
adc
cmp
loope
xchg
sti
mov
pop
mov
clc
lret
jle
and
push
subl
xchg
stc
imul
dec
aad
movsb
xchg
cld
cs
mov
or
sub
cli
inc
jno
add
mov
pop
ss
jb
add
mov
fstpt
mov
jne
or
cmc
fnsave
iret
or
mov
aas
sub
mov
xor
decl
rolb
movb
sbb
or
mov
jmp
mov
jp
and
pop
pop
outsb
ljmp
pop
or
xor
mov
xchg
mov
push
cmpb
xchg
popf
jb
imul
mov
lahf
add
shrl
cli
mov
jge
mov
or
mov
xchg
push
aaa
inc
je
jge
mov
int
clc
add
pusha
and
push
inc
out
jae
arpl
shl
testb
cmc
jns
hlt
and
popa
mov
js
push
loope
push
fs
or
sbb
int3
add
rorb
jo
push
dec
je
inc
add
mov
lret
dec
test
rcl
add
mov
mov
add
add
mov
leave
repz
cmp
add
xchg
and
add
jle
sbb
subl
pusha
xchg
jne
popf
aam
add
jne
xchg
push
mov
sbb
sbb
mov
inc
in
push
sahf
stos
mov
mov
pop
movsl
cmp
inc
pop
xchg
adc
js
mov
xchg
popf
ja
fs
fwait
lds
dec
pop
movsb
pop
cld
mov
arpl
nop
inc
pop
movb
inc
inc
sbb
cmp
lods
adc
dec
adc
das
jecxz
aaa
movsb
jecxz
push
pop
scas
add
xor
insl
cmc
or
add
add
and
and
adc
fbld
pop
push
pop
xor
mov
jns
mov
in
out
cli
movsb
stos
push
loop
mov
jmp
xchg
or
add
stos
data16
xor
roll
sub
fsubr
into
cmpsl
negb
stos
jecxz
arpl
pop
jecxz
bnd
adc
dec
or
fistps
aad
xchg
xchg
mov
and
sbb
pusha
ljmp
test
xchg
or
add
or
push
push
xchg
arpl
and
arpl
jns
test
adcb
addr16
ffreep
call
std
movsb
ss
les
pop
mov
jae
ret
hlt
test
mov
ror
add
fwait
adc
inc
subb
in
push
pop
xchg
or
dec
push
or
xchg
or
aam
mov
in
jp
dec
imul
xchg
push
and
push
mov
nop
xchg
dec
and
ret
inc
push
add
test
repz
leave
jmp
aam
xchg
sahf
xchg
int
pop
ret
test
hlt
rclb
and
jg
xchg
xor
inc
xor
dec
cwtl
sub
leave
iret
adc
stos
aas
rcll
mov
lret
mov
mov
inc
mov
negb
inc
mov
xor
into
mov
xlat
in
mov
push
icebp
push
pop
mov
in
jp
mov
fsubs
faddl
out
imul
out
mov
rorl
imul
into
lods
mov
and
mov
call
mov
add
stos
cs
add
push
fdivrp
shll
xchg
addr16
xchg
mov
fnsave
xor
dec
scas
pop
pop
mov
dec
lret
or
stos
pop
jmp
fidivs
rcr
mov
push
dec
clc
cmp
add
push
aas
sub
xchg
or
movsl
mov
push
lea
adc
sub
sub
stos
jno
mov
jge
xor
dec
subb
and
mov
insl
fcoml
push
pop
stc
testl
sti
mov
insb
jae
out
cmp
or
mov
mov
pushf
inc
mov
ret
sbb
dec
pop
fiadds
mov
leave
xchg
aaa
push
mov
imul
jno
insb
daa
mov
int
lret
mov
sub
mov
mov
push
push
sub
xlat
cmc
push
bound
add
sub
mov
jbe
cld
pop
add
xorl
int3
jno
shll
cmc
cmp
adc
fistl
jl
jbe
nop
push
mov
adc
cmp
in
or
xchg
adc
fnstcw
dec
push
rcrl
mov
sub
or
popf
add
xchg
cmp
int
in
and
outsb
mov
jne
dec
push
pop
mov
adc
insb
pop
jnp
aam
cmp
stc
xchg
aam
movsb
or
icebp
sub
stc
fisubs
andb
and
lods
xchg
enter
addr16
mov
and
mov
mov
ds
xchg
popa
nop
xor
mov
ret
push
xchg
loopne
hlt
imul
inc
aaa
loopne
jae
jecxz
sbb
jmp
and
lea
mov
popa
inc
lcall
int
movsl
jmp
sbb
sbb
push
adc
lock
push
movsb
add
test
addr16
ss
lret
adc
sub
or
sbb
test
jnp
repz
sti
bound
sub
jbe
mov
push
rcll
mov
addr16
lret
or
jecxz
pop
into
dec
sub
scas
push
pop
ja
adc
xor
fcoms
repz
jp
mov
mov
add
sbb
jbe
jp
and
add
mov
cmp
not
mov
mov
cmp
and
dec
and
data16
sti
fimuls
shl
mov
enter
out
mov
cwtl
mov
mov
and
test
aam
xor
repz
and
scas
xor
xchg
mov
jmp
rolb
dec
test
inc
movsl
fdivrl
mov
sub
sbb
cwtl
in
jo,pn
dec
rorb
iret
cmp
or
add
push
dec
inc
iret
iret
jl
out
call
ljmp
test
push
push
push
cmp
mov
in
hlt
iret
sbb
adc
aas
leave
sbb
xor
sbb
and
and
jle
shrb
or
dec
loope
stos
mov
pop
pushf
adc
pop
sahf
lea
lahf
das
xor
dec
adc
cmp
cmpsb
movl
popf
and
rolb
push
lcall
lods
cld
push
or
nop
test
gs
jmp
pusha
test
cmp
or
add
shl
xchg
fwait
std
adcb
xor
jg
ss
movsb
lock
addl
test
xor
xchg
popf
sahf
add
icebp
rcrl
lret
adc
shrb
pop
cmp
sbbb
xor
sub
mov
bnd
mov
sub
xor
and
out
lods
pop
bound
sti
cmp
cmp
stc
std
jp
addr16
inc
fmulp
inc
stos
cmp
push
sbbb
in
push
xchg
inc
call
xchg
fnstenv
aas
pop
stos
jecxz
sub
mov
jmp
movsl
sti
out
loopne
aad
sbb
lods
aas
adcl
iret
enter
insl
mov
xchg
and
bnd
or
xor
fwait
inc
mov
pushf
sub
and
sub
nop
dec
lahf
mov
adc
xchg
and
sar
fdivrl
in
sbb
xchg
or
imul
mov
in
divb
lods
leave
sahf
adc
jl
jmp
repz
or
mov
dec
ds
dec
sbb
shlb
out
lahf
push
popa
sub
jl
stos
xchg
mov
divb
adc
lcall
or
lret
je
jp
insl
leave
scas
les
or
mov
and
jne
add
mov
movsb
sar
inc
aas
shl
movsb
cmp
add
shrl
and
push
sti
mov
inc
fsubs
sbb
loopne
push
add
jmp
mov
mov
rcr
push
insl
cli
aaa
cmp
mov
outsl
pushf
popf
xchg
pop
inc
inc
out
out
arpl
mov
xor
fisubs
mov
outsl
scas
nop
sub
pop
dec
push
cmp
out
mov
stc
repz
mov
pop
fidivrl
imul
xorb
into
push
lret
pop
dec
mov
or
cmp
imul
arpl
push
leave
cmc
xchg
les
dec
sbb
out
nop
jo
pop
or
cli
and
push
mov
outsl
ret
and
lea
jge
xor
mov
movsb
into
fwait
mov
jae
dec
mov
jge
js
sbb
nop
gs
fwait
into
je
dec
stos
icebp
jp
lahf
insb
fs
cltd
leave
or
mov
mov
dec
pop
pop
leave
mov
jl
ljmp
pop
mov
ss
pusha
pusha
sub
sbb
mov
dec
push
rcr
jg
push
xchg
leave
xchg
test
jno
mov
xchg
mov
cmp
dec
aam
fadd
jle
pop
push
or
pushf
sub
aaa
push
rorl
cmp
insl
outsb
dec
xchg
inc
jl
jge
and
out
mov
push
xchg
jmp
pop
adc
lds
and
jne
imul
inc
shlb
stos
divb
add
inc
push
loop
cmpsl
js
dec
fistps
lds
fbld
popa
ret
bound
test
imul
les
int3
inc
orl
jae
insb
scas
out
sub
push
mov
ja
fnstcw
cld
cmp
rorb
ds
mov
loop
or
scas
enter
jb
in
dec
mov
dec
push
pop
mov
push
cmc
test
dec
dec
lret
inc
mov
and
sbbl
scas
mov
test
cwtl
addl
fsubrl
inc
cli
xchg
inc
cmp
sbb
sbb
test
xchg
lods
sbb
lret
sti
xchg
fdivrl
add
xchg
inc
out
aad
pop
arpl
cmp
call
mov
ret
arpl
xchg
inc
jno
push
pusha
dec
scas
cmpsb
cltd
loopne
stc
mov
lahf
popa
pop
mov
xor
lret
out
into
ret
cmc
cmp
ljmp
adc
xlat
clc
addl
pusha
or
jge
push
dec
cmpsb
and
arpl
stos
mov
repz
and
xor
push
sbbl
mov
ds
stos
ja
rcll
test
ja
sub
pop
stc
pusha
fstpl
roll
aas
pop
cli
cmp
xchg
add
jmp
int3
adc
scas
adcb
xor
scas
pop
adcl
mov
ficompl
hlt
pop
in
or
mov
inc
lret
adc
fadds
scas
sub
mov
pop
dec
nop
dec
test
inc
jecxz
mov
test
sbb
ds
imul
lods
cmc
add
xor
push
push
movsb
mov
and
push
clc
mov
daa
mull
xchg
and
mov
call
add
mov
xchg
repz
sub
mov
push
dec
scas
pushl
stos
fcompl
jbe
test
add
subb
jns
mov
xchg
adc
push
addr16
xchg
scas
or
inc
iret
cld
leave
cmpl
push
sbb
out
iret
mov
test
std
jne
in
push
ret
adc
fwait
add
lahf
leave
dec
repnz
fnstsw
aaa
aad
mov
xchg
pop
jmp
sub
cltd
inc
rolb
ret
sarb
or
addr16
test
rcr
sbb
sub
imul
iret
jne
inc
addr16
fldenv
ret
lret
mov
push
and
jbe
negb
dec
pop
push
mov
and
and
rcrl
push
xchg
out
lds
or
push
inc
push
ja
or
fmulp
sarl
or
gs
or
or
rcrl
test
jle
jnp
mov
loope
jae
frstor
pop
lret
cmp
push
xchg
sbb
mov
pusha
rcl
jb
push
popf
add
rorl
adcb
loopne
push
lock
jno
dec
xchg
les
and
lds
inc
mov
cli
repz
sbb
inc
inc
ja
xchg
imul
test
data16
lds
mov
or
mov
in
adc
mov
sub
repnz
inc
andl
xor
or
jmp
lea
jae
push
cmp
stos
jb
popa
pop
ret
push
je
and
adc
jb
out
push
shlb
add
xor
stos
jbe
andl
movsl
in
loopne
sub
dec
insb
fimuls
cmp
leave
lret
cmp
aam
push
jno
ljmp
cmp
jge
add
mov
pop
jl
lods
fwait
jnp
inc
push
pop
scas
jne
pop
int3
and
sbb
pusha
xorb
xchg
imul
cmp
push
push
xor
mov
not
repnz
fistpl
cs
xchg
dec
mov
mov
mov
dec
out
movsb
and
lock
imul
loop
fstpt
ror
mov
cmc
xchg
in
lret
add
push
mov
inc
push
mov
add
jno
or
addl
cmp
fs
sub
xchg
sti
movsb
into
out
adc
cmpsb
inc
lods
mov
xor
push
arpl
jmp
xchg
pop
add
or
stos
jg
mov
sbb
jo
sub
dec
mov
push
push
cmc
inc
xchg
mov
push
pop
cmp
pop
or
cltd
inc
cmpsb
push
dec
mov
arpl
movsb
mov
jbe
out
jo
push
sbb
mov
mov
dec
or
pop
mov
outsb
stos
mov
daa
mov
int3
jmp
cwtl
push
inc
push
aam
mov
xchg
pop
gs
in
clc
mov
shrb
sub
dec
push
sarl
movsb
bound
nop
imul
lret
inc
shll
inc
inc
jo
mov
or
cmp
mov
je
xchg
xchg
push
jns
push
repnz
adcb
je
cwtl
das
mov
pop
add
aas
xchg
mov
clc
cltd
push
lret
adc
fwait
inc
repz
sub
push
iret
pop
int3
int3
add
testb
repz
lods
mov
out
xchg
inc
test
cltd
addl
mov
jo
push
ret
inc
sub
jb
sbbl
icebp
lahf
lahf
cvtpi2ps
dec
dec
arpl
sub
dec
leave
jnp
inc
pop
or
xchg
dec
xor
arpl
ret
lods
es
xorb
sbb
leave
add
je
jae
dec
imul
adc
aam
andb
push
lods
xor
mov
ficoms
mov
cmp
push
dec
testl
das
or
lock
push
sub
hlt
or
push
in
jns
stos
in
lods
lahf
add
dec
mov
mov
fsubr
or
lea
and
sahf
mov
sub
ljmp
fdivr
push
pusha
aas
lahf
lret
sbb
ret
dec
fdivrl
dec
mov
out
lcall
cmp
test
pop
shrl
xchg
push
jae
mov
add
or
popf
lods
lret
lea
mov
stos
insl
gs
lea
int3
daa
inc
aam
in
enter
add
pop
movsb
ljmp
addr16
adc
mov
inc
stos
lret
sbb
push
outsb
sahf
in
mov
cmp
or
dec
xlat
adc
sub
sbb
mov
mov
jp
fnstenv
xchg
jl
mov
mov
mov
push
xor
loop
adc
pop
roll
stc
lods
or
pmulhw
mov
pushf
xchg
mov
lret
call
sahf
clc
and
das
cmpsl
xor
xor
negl
jnp
jl
mov
xlat
ds
or
mov
jecxz
rclb
jae
xchg
insl
sub
mov
out
pop
sbb
sbb
dec
cmp
or
enter
and
mov
push
stc
addr16
mov
imulb
dec
mov
sti
lods
pop
ret
pusha
jl
mov
xchg
push
adc
mov
lahf
lock
mov
push
hlt
icebp
lahf
inc
rep
xchg
jge
inc
scas
ljmp
neg
dec
xlat
mov
cmpsb
push
mov
xlat
xor
xchg
mov
cwtl
insb
mov
pop
or
fmull
and
ds
sub
mov
dec
jmp
adc
xorps
incl
sub
lods
pop
mov
divl
push
je
cmc
stc
ja
jmp
xlat
pop
xchg
insb
pop
inc
loopne
out
movsb
jl
pop
aam
mov
mov
jbe
pop
das
int
ds
mov
loope,pn
and
sbb
push
cmp
push
adc
sbb
aad
inc
in
aaa
xchg
jo
sahf
movsb
jl
leave
clc
aas
xor
in
int3
push
fcomi
aaa
fisttpl
push
inc
orl
add
push
dec
lds
or
scas
mov
add
xchg
sub
icebp
mov
mov
add
loopne
sbb
out
fwait
inc
les
mov
sbb
outsl
test
xlat
push
je
mov
aam
shll
dec
or
fidivl
les
push
mov
pusha
cs
jo
inc
pop
inc
pushl
and
pop
test
sub
dec
lret
std
xor
out
xchg
mov
sub
add
cmp
das
fwait
call
or
push
dec
std
sahf
mov
sub
jle
sub
push
mov
push
popa
or
cwtl
fiaddl
jno
js
xchg
mov
fmuls
ds
std
sbb
fcoml
sub
push
xchg
inc
pusha
push
mov
movsb
scas
sub
mov
cmp
jecxz
jns
xor
add
arpl
adc
daa
cmp
or
sbb
imul
dec
xchg
and
movsb
add
mov
mov
in
inc
ja
stos
cmp
cwtl
adc
jns
inc
iret
sub
mov
sti
gs
fistpll
xchg
lcall
add
xchg
imul
and
dec
cmpsb
jge
fucomi
mov
repz
add
sbb
sub
js
iret
cs
cld
imull
in
imul
into
xchg
out
js
scas
dec
cltd
mov
pusha
jbe
bound
mov
popa
cmp
test
or
imul
outsl
and
aam
aas
je
shrl
push
test
test
stos
daa
adcl
jbe
arpl
and
insb
mov
xorl
pop
adc
fwait
popa
fdivs
fisubrs
insl
ds
pop
arpl
mov
stos
sub
sti
iret
xor
adc
pop
out
adc
ljmp
sbb
movb
sbb
loopne
pop
xor
cli
cmp
mov
std
sbb
jge
sub
ja
inc
ret
push
and
dec
test
rorl
daa
and
mov
icebp
xchg
and
adc
jmp
hlt
cmp
or
adc
outsb
or
dec
fwait
out
inc
mov
add
xchg
add
xor
roll
ss
out
shll
leave
push
je
mov
test
adc
mov
cmp
push
add
xchg
jecxz
rol
push
leave
or
inc
fstl
js
xor
mov
xchg
fisubrl
mov
mov
or
nop
daa
push
andb
int
test
mov
xchg
ljmp
mov
int
xor
imul
sub
dec
cs
int3
ficomps
popa
xchg
mov
sarl
loop
int
mov
or
enter
pop
stc
push
jbe
cmp
divb
mov
repz
inc
out
stos
sbbl
xchg
or
stos
jnp
dec
std
xor
scas
jbe
daa
xchg
jno
push
fiadds
mov
sub
clc
idivb
test
mov
adc
int
cmp
push
or
call
int
rclb
push
xor
stos
push
jbe
pop
dec
xlat
lods
outsl
xor
rcrl
dec
insb
and
pop
das
xchg
jbe
outsb
lcallw
ret
dec
jg
icebp
pop
int3
pop
mov
add
pop
out
xchg
dec
popf
sub
cwtl
scas
pop
xor
in
fistps
mov
and
add
dec
adc
pop
cwtl
pop
sbb
xchg
add
inc
sub
pop
fcmovb
or
pop
xor
scas
jge
push
dec
adc
and
lahf
xchg
dec
lods
and
jecxz
pushf
fwait
aaa
mov
fs
stos
fcmovnbe
mov
jp
cltd
xchg
pop
imul
clc
lock
scas
adc
xor
sbb
jge
cltd
ss
jl
dec
jbe
jae
and
mov
test
insb
cmp
inc
add
push
xor
fwait
jne
lds
enter
js
loop
jecxz
adc
dec
jmp
cwtl
outsl
cmp
jg
adcb
cmp
call
and
negb
js
push
mov
hlt
add
fs
stos
push
inc
mov
cld
nop
add
lcall
imul
push
leave
push
jl
pop
sub
jge
jno
jecxz
filds
cmp
mov
cmpsb
mov
out
cmp
sub
push
lods
iret
inc
jne
sub
hlt
in
xchg
dec
jnp
push
or
jecxz
stos
ror
pop
push
dec
orl
stos
xor
xor
stos
mov
insl
scas
pop
jp
vorps
xchg
lds
xor
adc
pop
insl
inc
orl
mov
adc
jmp
pop
dec
pop
mov
push
mov
push
lods
cmc
test
cmp
pop
add
add
test
adc
push
dec
mov
jnp
aad
xchg
sub
push
psubsw
push
shr
sarb
leave
jo
rcll
sbb
or
mov
lds
test
mov
lods
jbe
cmp
pop
jnp
xchg
fsubl
mov
sub
out
jp
mov
insl
xchg
sub
or
add
dec
gs
mov
loop
out
jo
push
mov
mov
pop
sub
cld
fmull
adc
icebp
imulb
adc
sbb
dec
arpl
es
lock
jb
call
push
sbb
negb
pop
ss
cmpsb
or
loopne
pop
push
rorl
cli
mov
jbe
aaa
stos
inc
cli
cmc
roll
inc
fwait
scas
inc
enter
repz
movsb
dec
cld
push
int
shlb
int
push
push
stos
xchg
dec
popa
in
or
jle
repnz
mov
fcoms
lea
adc
push
dec
adc
loopne
push
js
shlb
pop
rcrl
mov
pop
and
push
push
and
fmull
or
shl
pop
cmp
cmpsl
mov
xchg
das
fidivl
outsb
iret
aad
in
mov
shll
cli
add
fidivs
xor
or
hlt
imul
adc
push
push
pop
mov
andb
shl
test
mov
dec
and
xchg
sub
adc
add
stc
add
cmpsb
add
mov
loope
adc
mov
arpl
sub
xchg
shlb
pop
add
js
add
popa
or
fs
xchg
out
dec
jo
decl
push
sub
out
mov
loope
inc
scas
les
dec
mov
xchg
out
pop
enter
fdiv
out
or
mov
pop
sbb
cmp
repnz
aad
andb
mov
lods
sub
xchg
sbb
xchg
sbb
aad
fdivrl
inc
xchg
push
mov
aam
stos
ljmp
xchg
sbb
push
xchg
divb
and
inc
ljmp
out
or
add
shll
cmp
popa
pop
jl
shlb
xchg
mov
jge
cmpsb
popa
pop
mov
lahf
jge
push
negl
or
imul
xchg
loop
cmp
in
and
sbbb
pop
mov
enter
cmp
sbb
ret
add
inc
mov
icebp
sarb
aam
in
or
cmpsl
sbb
mov
cmp
mov
xchg
mov
mov
fldt
aas
jnp
ljmp
cld
pop
add
fldcw
lea
lea
icebp
mov
pop
xchg
add
inc
orl
nop
xchg
jmp
frstor
and
xchg
fs
mov
push
adc
push
mov
pop
or
divl
cmc
dec
or
popf
test
je
ss
rcrl
fwait
xor
dec
dec
roll
pushf
test
into
inc
xor
insb
out
movsl
shr
and
ret
xor
imul
inc
and
cmp
xlat
inc
sbb
mov
xchg
out
sub
mov
xchg
std
dec
inc
popa
fisubs
inc
pushf
es
xorl
call
mov
dec
xchg
push
imul
push
sbb
mov
cmc
ret
push
or
jns
cmp
add
ljmp
jg
adc
jmp
dec
mov
rorl
mov
mov
fisttpl
push
and
mov
sar
dec
sbb
enter
push
pop
xchg
outsb
stc
sbb
ds
std
gs
pop
sub
cmp
mov
mov
pcmpgtw
cmpsl
push
or
ficoml
rorb
xor
fwait
in
xchg
sbb
mov
cmp
repz
cmp
imulb
xor
mov
xor
mov
rcl
incl
mov
xor
cmp
or
fidivrl
xchg
pop
std
dec
mov
rcrl
movsl
ret
loope
imul
pushf
mov
das
mov
add
pop
jo
adc
in
push
gs
loop
fwait
or
rorb
ror
enter
pop
fcompl
bnd
mov
pop
aam
cwtl
insb
mov
sahf
adcl
mov
mov
pop
cmp
and
out
in
push
mov
cld
inc
fxch
or
in
sbb
in
jmp
imul
mov
sub
push
repz
js
xchg
jae
xchg
cmp
icebp
and
cmc
loop
xchg
cmp
mov
sub
add
pop
loope
jns
adc
add
xchg
out
outsl
icebp
pmuludq
fsubr
mov
int
jno
addr16
cmp
mov
dec
sub
popa
in
lea
rorl
mov
in
sub
cmp
xchg
lea
pop
adc
sub
fisttps
xor
or
cmp
adc
lea
aam
fimuls
not
xor
adc
xchg
outsl
scas
add
pop
push
mov
fcoms
mulb
out
popf
or
xchg
mov
aam
fstpl
inc
push
in
in
push
into
out
pop
mul
push
in
mov
cmc
inc
jb
jp
pop
into
lahf
and
mov
shlb
dec
cli
mov
movsl
lods
jo
and
iret
xchg
cmp
xchg
mov
fcmovnu
mov
and
dec
inc
popa
lods
sahf
mov
sub
leave
or
mov
mov
ret
xchg
sbb
stos
aam
jmp
loop
bound
cltd
mov
or
gs
hlt
stos
ret
loopne
stos
jns
les
xchg
repnz
xchg
xor
cmp
push
jp
sub
int
daa
cmpsl
sbb
fsubl
mov
mov
testb
cmpsb
inc
xor
pop
xchg
inc
outsl
cmp
cmpsl
xor
out
sub
mov
mov
aaa
xchg
mov
ficoms
lods
mov
add
mov
push
xor
rcr
or
push
sub
notl
jge
sub
das
cmp
addr16
hlt
jmp
sub
cmp
sti
sbb
xchg
mov
and
adc
pop
out
mov
mov
sbb
xchg
lods
mov
std
jl
out
push
enter
jo
xor
imul
dec
mov
xor
cmp
xor
pop
push
repnz
cld
push
push
mov
mov
pop
int3
jmp
mov
or
cs
and
push
ret
in
fldenv
sbb
cmp
cmp
mov
dec
push
mov
pop
inc
stc
ret
xchg
dec
cmp
add
sbb
scas
pop
push
lret
xchg
cmp
sub
jo
mov
jg
es
ja
push
inc
inc
call
sbb
loopne
push
inc
lock
xchg
and
dec
dec
outsl
inc
iret
and
dec
sbbb
dec
inc
cmp
hlt
sub
cmc
cmp
aaa
stos
jmp
cmp
rep
pop
cmc
out
inc
pop
and
or
fs
out
lods
lcall
dec
int
mov
fwait
jne
or
lods
or
push
loope
mov
mov
imul
pusha
addr16
test
mov
je
outsb
pop
clc
dec
xor
scas
xchg
mov
push
sub
and
dec
sbb
mov
mov
stos
je
push
dec
shr
in
ds
iret
inc
fidivrs
jne
mov
and
addr16
xchg
sbb
je
pop
mov
pop
clc
cmpb
stos
sub
dec
push
outsl
jp
sahf
push
loop
sub
and
lods
mov
data16
mov
scas
imulb
jle
pop
jle
push
pop
xchg
inc
mov
cltd
aam
jmp
mov
push
aaa
fst
iret
lahf
mov
jb
cmpsl
fs
and
and
rorb
push
pop
enter
mov
push
jmp
stc
cmpsl
push
icebp
and
mov
cmp
xchg
fmuls
cmpsb
inc
enter
mov
inc
popf
jge
add
in
sub
cmpsl
lock
pushf
inc
in
lds
testb
sbb
sbb
xor
fucomp
adcb
test
in
inc
sbb
cwtl
push
and
sahf
or
std
out
neg
adc
jp
cmp
addr16
icebp
popf
je
jne
cmp
xor
pop
cld
mov
frstor
hlt
adc
mov
scas
sahf
fnstenv
pop
mov
enter
je
out
sbb
mov
sbb
xchg
xor
or
mov
es
jle
je
lret
mov
imul
cmp
xchg
cmp
push
mov
adc
mov
ja
mov
les
mov
cmp
mov
jnp
ljmp
inc
dec
cmp
jp
dec
arpl
das
push
xor
dec
scas
push
imul
jge
inc
or
inc
add
iret
or
jl
fwait
imul
movsb
cmpsl
mov
cmpsb
pop
add
nop
add
and
scas
mov
mov
adc
cmp
sub
cmp
mov
in
mov
push
dec
fstpt
cmp
dec
movsb
subps
xchg
sub
enter
and
adc
bound
mov
pop
dec
mov
std
mov
mulb
fistpll
jnp
push
addb
push
xor
cmc
mov
sbb
jmp
lret
lods
jb
lock
push
xchg
out
aam
pop
sbb
push
test
jo
cmp
jo
ret
push
mov
or
and
cltd
dec
jmp
pop
fmulp
mov
std
dec
lea
cwtl
push
xchg
ret
jmp
jmp
cld
fnsave
rolb
or
loopne
test
mov
push
fdiv
mov
std
dec
fmull
dec
and
mov
xchg
push
nop
je
cltd
std
sti
dec
inc
inc
jl
fisubs
cld
lock
and
cwtl
adc
popf
inc
loopne
xor
subl
stos
sahf
loop
jp
loope
shrl
popf
mov
inc
cmp
in
shlb
cmpsb
jg
cmpsb
mov
cld
push
adc
bnd
mov
inc
adc
out
push
scas
int3
xchg
das
mov
mov
or
adc
jg
cwtl
sub
dec
loope
mov
jp
mov
sub
cmc
loope
pusha
push
jo
rolb
add
push
fcmovnu
and
xchg
cmp
sub
mov
cmpsb
mov
dec
add
jae
pop
lret
rol
xrelease
icebp
cmc
lods
arpl
leave
loop
mov
out
add
pusha
call
pop
repz
or
mov
adc
aas
push
mov
jge
jg
xchg
lods
dec
outsb
push
xchg
bound
iret
mov
jl
push
loop
mov
inc
inc
and
pop
bound
adc
enter
mov
cmpsl
adc
xchg
lods
pushl
xor
test
sbb
sbbb
jbe
orb
stc
repnz
stc
ljmp
punpckhdq
test
movsl
loope
mov
push
inc
mov
inc
pop
push
adc
jl
or
sub
xor
push
in
rolb
cvtps2pd
imul
mov
ja
xchg
lock
add
aam
shll
out
mov
sti
ljmp
xchg
and
inc
or
lods
mov
mov
mov
adc
out
xchg
insl
out
mov
arpl
lods
or
inc
dec
sbb
cmp
inc
aas
mov
lret
and
stc
dec
out
loope
dec
addr16
lret
jae
loop
mov
xlat
int
cmp
dec
lods
jo
cmp
dec
mov
imul
data16
adc
fsubrl
push
out
mov
xchg
adc
sub
cmp
sub
in
add
icebp
mov
out
jecxz
xchg
fildl
popf
cmp
lahf
clc
movsb
stos
lea
pop
ja
in
gs
sub
icebp
lcall
jecxz
sahf
mov
mov
dec
fisttpll
fs
in
roll
in
imul
test
lcall
and
cmp
pusha
cmp
mov
idivb
push
cmp
aas
aaa
lods
dec
data16
std
and
jbe
test
jle
test
pop
xor
test
push
jmp
je
dec
lcall
inc
addb
push
sbb
inc
xor
jl
inc
icebp
adc
sbb
ljmp
daa
testb
dec
xor
push
pushf
stc
sarb
or
sbb
ret
arpl
xor
jb
xchg
mov
and
sarb
testl
das
inc
inc
je
add
push
xchg
int3
ljmp
cmp
inc
je
popf
inc
mov
aam
int3
mov
sbb
daa
pushf
fimuls
test
xchg
fldl
xor
scas
les
push
push
pop
push
pusha
push
and
pusha
data16
pop
je
lret
jmp
mov
aam
jl
push
cmp
pop
mov
sbb
pop
jge
cmpsl
jp
or
and
push
mov
pop
xchg
psubusb
sub
sbb
inc
xor
adc
xlat
cmp
test
push
pop
stc
cli
pop
pushf
scas
js
mov
mov
mov
out
lahf
xchg
stos
mov
xchg
inc
test
xchg
push
fwait
and
jnp
jno
mov
mov
repnz
dec
das
xchg
ss
sarl
lret
push
rclb
je
lods
insb
mov
fmuls
outsb
push
ror
push
sub
jnp
jge
pusha
adc
into
adc
sbb
or
push
sahf
lcall
add
cmp
push
sub
adc
sub
sbb
bound
cmpsl
orl
lcall
jg
jge
mov
iret
out
or
adc
hlt
mov
punpcklwd
xchg
adc
mov
push
and
xor
aaa
mov
push
das
pop
bound
aaa
ljmp
iret
std
in
add
cmc
mov
jae
ret
iret
aad
test
mov
fcomp
mov
sbb
in
cmc
push
add
std
sub
les
xchg
jae
ja
pusha
xlat
stos
and
or
inc
stc
mov
xor
repz
ret
test
pop
outsb
out
mov
shr
jl
bound
adc
pop
mov
and
rclb
rcrb
jmp
mov
out
add
jle
jb
shrb
out
add
negb
ror
ret
jmp
stc
in
sub
hlt
push
xchg
test
jmp
decl
call
dec
and
xchg
rclb
call
adc
or
cmp
idiv
sub
sbb
fisubl
scas
repnz
inc
add
push
fiadds
in
mov
aam
in
mov
sbb
popf
rcrb
xlat
cld
mov
add
icebp
std
jl
subb
push
cmc
imul
push
sbb
loope
in
test
cmpsb
dec
es
or
stc
jnp
cmp
andb
decb
mov
push
sub
sti
pop
xor
xor
dec
xchg
out
ds
aas
dec
push
popf
rorb
lods
ret
dec
sahf
xchg
ret
lds
cmp
mov
fs
sbb
movb
jge
sbb
xor
inc
mov
xchg
rolb
push
and
mov
fdivr
xchg
xor
xor
push
aad
dec
rclb
mov
dec
scas
or
popa
sbb
mov
sub
xor
and
lcall
mov
adc
pop
dec
repz
insb
adc
ss
ret
lds
or
mov
mov
pop
scas
dec
push
movsl
sub
inc
mov
xchg
into
sbb
sub
mov
dec
in
fsubrs
jle
fstps
fisttps
push
mov
push
and
fdivrl
pop
and
lret
mov
fadds
dec
movsb
rorl
scas
push
mov
push
adc
ja
ljmp
push
nop
xor
cwtl
mov
xchg
inc
add
dec
mov
jno
mov
test
cli
in
bnd
add
mov
xchg
cmp
popf
xor
mov
subb
pushf
daa
adc
pop
add
repz
ror
leave
cmp
mov
mov
cmpsb
pop
outsl
ss
out
cli
cmp
scas
cli
outsb
push
cmp
jbe
pusha
sbbb
xchg
cmpsb
jmp
repz
aam
ja
mov
cmp
ret
popf
pop
pop
mov
loop
push
movsl
lods
into
popa
insb
dec
pop
jo
mov
fistpll
repz
or
pop
and
inc
subl
push
fs
cmp
adc
cld
insl
jnp
sarl
in
sbb
or
loopne
addr16
iret
popl
fnsave
frstor
sbb
sbb
rcr
pop
sub
aam
fs
pushaw
cwtl
outsl
sti
ret
or
test
insl
push
or
xchg
cmp
add
imul
bound
stc
add
or
pop
repz
int
push
ja
mov
mov
lret
loopne
push
jg
cmc
or
out
loope
arpl
cltd
pop
shlb
mov
mov
aaa
xchg
cmpsb
clc
cmp
mov
lds
mov
in
mov
and
jmp
test
add
inc
xchg
pop
mov
push
dec
pop
push
int3
bnd
ret
inc
rcrl
test
test
idivb
lds
ror
scas
sahf
out
loope
mov
fimull
mov
nop
clc
mov
dec
stos
jg
or
sbb
sbb
movsb
inc
pop
pop
flds
pop
cltd
add
inc
test
lods
or
xchg
xchg
jns
mov
xor
sbb
aad
push
lea
or
xlat
icebp
out
mov
push
xchg
leave
jae
xchg
add
stos
pop
sub
outsl
jmp
inc
jbe
add
addr16
out
inc
sbbl
sbb
cs
jge
adc
cmc
ror
data16
cli
imul
push
push
jns
inc
in
push
in
frstor
and
sbbb
rolb
ja
sbb
cmpb
cmpsl
push
xor
pop
mov
fldenv
cmc
dec
bound
dec
inc
stos
mov
out
and
jnp
mov
inc
sbbb
fistpl
cld
mov
push
enter
xor
or
pop
or
sub
gs
xchg
lds
mov
scas
lret
pop
sbb
cwtl
and
mov
or
sahf
xor
inc
shll
je
cmpsb
punpckldq
popa
sbb
outsl
push
daa
fidivs
dec
mov
push
stc
push
out
cld
orl
pop
mov
daa
cmpsl
mov
dec
jge
push
test
gs
sbb
inc
aad
pop
lds
fdivl
pop
ds
pusha
mov
xor
sbb
sbb
movsl
and
sbb
mov
jb
sub
aad
push
out
pop
cmpsb
mov
fmull
sbb
test
rcrl
and
pop
sbb
push
ss
add
inc
nop
and
sbb
subb
dec
mov
jecxz
test
dec
les
pop
notb
mov
jo
jnp
repz
push
mov
mov
daa
sbb
jg
pop
and
or
pop
inc
ret
push
pushf
jp
inc
xor
jg
xlat
jb
add
lock
push
fdivr
sbb
fdivrl
cmp
shrb
cltd
fildll
and
adc
scas
jg
cmp
js
outsb
or
lahf
lock
inc
cmp
jb
mov
add
pop
ljmp
repnz
fstl
imul
sub
add
mov
cmp
mov
ret
and
pop
mov
xor
notl
jo
mov
jnp
cmpl
add
mov
loopne,pn
mov
stos
xchg
gs
int
addb
sub
add
lods
aaa
inc
jl
xlat
add
mov
xor
dec
sbb
repnz
das
fldcw
in
and
xlat
call
leave
adc
jl
notb
inc
imul
adc
in
imul
mov
sub
ja
push
pushf
daa
push
sub
lods
cwtl
loop
aam
filds
cmp
fldenv
cli
insl
push
or
mov
test
inc
call
sbb
addr16
jl
and
data16
sarl
call
iret
cmpsl
icebp
and
je
mov
push
adc
dec
roll
in
dec
push
rolb
push
rclb
xchg
jle
sub
adc
out
cmc
test
xchg
mov
mov
imul
jl
xchg
les
imul
lods
inc
xor
mov
lea
test
push
fwait
std
idivb
inc
outsb
or
ret
push
mov
out
push
arpl
dec
out
push
add
pop
sar
aad
fdivl
mov
mov
cmp
add
testl
sub
mov
or
fdivl
xor
imul
es
icebp
mov
insl
jns
dec
lcall
xchg
mov
or
xchg
js
cwtl
lea
mov
cmpsb
ret
xchg
lea
in
sbb
jp
push
jb
popf
dec
lahf
ret
adc
xchg
jle
sub
out
sub
inc
xlat
cmp
dec
push
xchg
jl
fwait
mov
and
jle
lahf
add
adc
adc
std
lods
xchg
push
outsl
cmp
cmpl
pusha
cmp
xchg
cwtl
ss
jg
in
xchg
jno
jne
pop
lods
test
or
or
bound
in
fistpll
push
sub
pop
mov
adc
inc
ss
not
cmp
adc
ljmp
mov
dec
lret
popf
sbb
mov
inc
sbb
shlb
mov
int
fsubrs
sahf
jno
mov
mov
mov
rcll
add
fsubs
fbstp
and
xor
mov
dec
add
fs
loopne
pop
add
push
movsb
ljmp
inc
ljmp
jl
fidivs
pop
ja
pop
cmpsl
and
mov
pop
or
sbb
icebp
call
jle
mov
push
pushf
dec
and
dec
adc
sub
mov
adc
popl
je
and
inc
and
inc
adc
ljmp
imul
sbb
or
jnp
or
adc
fsubrs
lods
in
mov
pushf
and
scas
cmpsb
and
dec
lds
loopne
out
sbb
out
popf
sub
and
or
shl
mov
mov
call
in
out
pop
cmpsl
movsl
adc
cmp
jecxz
or
ret
addr16
xchg
push
mov
and
mov
shlb
call
push
dec
sbb
push
fldt
ljmp
or
dec
add
mov
fs
lock
ret
cmc
gs
or
jle
lret
pop
dec
adc
pop
scas
jl
out
fsub
and
mov
fcmovnbe
jns
sbb
in
jmp
dec
imul
or
jg
sbb
lahf
fcoms
scas
ss
pop
fsubrs
or
ret
pop
movsl
aam
xor
adc
push
and
push
aam
xchg
jno
dec
sbb
out
push
rorl
sub
jmp
dec
rcrb
mov
jp
orl
lret
mov
or
push
mov
push
sbb
xchg
mov
or
add
xchg
into
daa
hlt
sub
mov
pop
daa
mov
and
dec
sbb
jns,pn
sbb
or
je
movsl
add
mov
sub
and
aam
and
ror
outsl
arpl
mov
roll
add
inc
xor
stos
es
xlat
pop
jnp
sub
hlt
xchg
sbb
adc
orb
add
lock
imul
mov
out
std
call
js
cmpsl
mov
fists
repz
or
adc
ljmp
and
mov
loopne
inc
pusha
jp
lret
insl
popf
lahf
and
or
cmp
jg
push
xchg
ret
ja
mov
cmpb
jmp
daa
inc
xchg
enter
ret
cwtl
hlt
in
dec
movsl
mov
pop
lret
adc
pushf
sahf
sbb
fnstsw
xor
push
mov
call
test
push
adcb
ret
add
cmp
mov
jno
inc
outsl
dec
mov
add
dec
xchg
lock
gs
insb
cmp
ljmp
sarl
cmp
jmp
push
or
pop
cwtl
adc
fidivl
mov
mov
sub
in
add
push
jbe
inc
test
mov
cmc
iret
add
pop
sbb
sub
push
and
and
dec
inc
inc
lods
insl
sub
pop
pop
jae
mov
mov
es
stc
scas
pop
push
mov
hlt
mov
popa
push
or
cmc
call
ljmp
icebp
jns
mov
add
push
mov
stos
test
mov
sbb
xchg
xchg
dec
xchg
lahf
or
pusha
lea
mov
idivl
pop
dec
xchg
gs
push
adc
pusha
sbb
or
pop
jecxz
in
mov
lret
enter
cmp
jo
insl
sbb
stc
and
shrl
xchg
call
cs
pop
iret
into
pop
add
mov
jecxz
jge
out
mov
cmp
test
sbb
xchg
mov
es
jl
hlt
mov
sbb
add
pop
popf
test
aaa
xor
cvtdq2ps
cmp
sub
jg
or
or
mov
imull
loopne
lret
inc
loop
dec
cmp
fstps
push
mov
mov
sub
daa
lret
jbe
pop
xor
cld
in
lods
cmpl
xchg
jbe
adc
xor
adc
iret
cmp
mov
push
call
cmpsl
xor
cmp
mov
pop
or
repz
movsl
mov
arpl
icebp
out
fdiv
xor
adc
mov
jae
inc
ret
sbb
rcrl
xlat
popa
test
shll
mov
xchg
aaa
mov
fs
aas
imul
arpl
leave
movsb
ret
fucomp
sbb
movsl
xchg
jbe
cltd
bnd
push
push
pop
lds
mov
jl
mov
push
gs
pop
adc
iret
stos
enter
test
or
sbb
cltd
mov
dec
xchg
sbb
mov
mov
popa
push
sub
std
in
pusha
cmp
mov
mov
xchg
jno
aas
decl
shl
mov
sub
push
jl
jmp
mov
add
pop
sub
jo
loop
sbb
or
sbb
aaa
fsubs
sub
pop
pushfw
sub
shlb
dec
mov
inc
xchg
clc
shlb
sbb
or
xlat
lcall
out
std
imul
inc
xchg
lret
add
cmp
flds
in
cmc
mov
jge
movsl
mov
out
dec
cmpsb
or
pushf
daa
test
xchg
les
inc
pop
push
mov
fbld
dec
mov
jbe
call
push
jno
leave
insl
pop
and
xor
xchg
insb
jb
cmc
push
aas
xchg
fwait
mov
mov
imul
pusha
inc
jge
test
inc
sub
lret
sub
pop
mov
es
xor
in
pop
cmp
lods
adc
pusha
imul
or
push
mov
mov
jmp
xchg
daa
ds
cmpl
es
adc
or
sub
nop
dec
jns
sub
push
pop
inc
lock
aaa
mov
test
sub
out
out
flds
test
mov
int
xor
test
pop
or
add
xchg
adc
jmp
pushf
cmp
mov
mov
lods
push
sbb
int3
fnstenv
pop
sbb
push
dec
add
lods
mov
mov
jmp
sub
mov
or
pop
xor
mov
pop
push
cli
loop
push
cld
mov
add
inc
pop
jb
call
sub
inc
fcomps
clc
lock
pop
mov
or
adc
in
mov
out
mov
cmp
iret
jno
sbb
jno
fwait
inc
inc
mov
sub
jge
ss
xor
xchg
jl
les
mov
and
dec
sub
hlt
mov
adc
inc
jmp
les
or
in
and
xchg
repz
lcall
cltd
es
ja
jmp
cmpsl
call
fs
lea
and
outsl
cltd
ds
and
fimull
pop
shr
cli
hlt
mov
cmp
mov
adc
add
adc
or
mov
fcomip
cli
test
mov
xchg
stos
mov
je
enter
lret
sbb
sub
cwtl
scas
cwtl
movsb
mov
push
les
jns
push
and
cltd
std
push
addb
add
sbb
outsb
lods
cmc
outsl
aam
daa
jb
and
xor
mov
dec
scas
push
inc
jecxz
les
or
loopne
jbe
mov
cmp
das
mov
xor
cmp
scas
jnp
popf
xchg
mov
popa
mov
inc
dec
sbb
idivb
addr16
imul
shll
ret
pop
sub
int3
loopne
outsl
mov
subl
cmc
cmp
ret
sbb
push
cs
cli
pop
add
sub
sub
loop
fcomps
mov
lret
pop
ret
add
jp
and
sub
movsl
mov
cwtl
aas
inc
mov
push
sub
ret
fidivl
xor
adc
lods
mov
ds
aad
jg
test
pop
ret
iret
push
pop
cmp
imul
lods
outsb
daa
push
xor
mov
pop
jns
xchg
mov
mov
fcmovne
test
dec
popa
mov
clc
std
dec
js
xchg
outsl
roll
mov
xor
sub
mov
mov
daa
enter
mov
dec
gs
sbb
adcb
repz
or
dec
cmp
scas
inc
sahf
pop
sub
stos
ljmp
jno
jp
or
outsl
sbb
sub
or
in
bnd
sub
outsl
lds
pop
cwtl
lea
adc
add
inc
inc
cmc
sub
push
iret
and
jno,pt
leave
in
stc
mov
movsl
inc
and
cli
sbb
fdivl
test
jno
and
pop
mov
mov
test
je
cld
gs
or
jecxz
sar
das
inc
ljmp
xor
xor
cmp
es
xchg
je
hlt
cltd
add
fiadds
xor
subb
mov
sub
fcomps
pop
ret
mov
xchg
push
sahf
subb
mov
lods
sub
fidivrs
hlt
push
sbb
mov
sbb
lock
stc
and
loop
mov
stos
sub
data16
mov
in
inc
pop
push
and
push
add
jne
idivb
push
xlat
int
xorb
sbb
outsb
pop
jecxz
cltd
fisttps
pusha
sbb
push
ret
cmp
dec
ret
sub
sahf
daa
nop
dec
push
stc
jbe
or
mov
cmpsb
dec
mov
push
or
imul
sub
adc
xchg
jg
mulb
int
xchg
movsb
pop
push
enter
push
addr16
test
mov
test
flds
add
out
mov
scas
jg
pop
sub
insb
xchg
cmp
inc
pop
outsb
dec
lret
ljmp
fsts
cwtl
ljmp
mov
xchg
sub
mov
or
xchg
jb
cmp
cmpsl
xchg
xor
inc
fimuls
push
in
xor
push
lods
shlb
sub
stc
das
and
sub
ja,pn
es
jno
inc
pop
sti
inc
push
incb
dec
call
fstl
shlb
sub
adc
mov
pop
imul
mov
mov
push
sahf
cmpsb
cs
xor
xchg
inc
or
sbb
fisubrl
mov
xor
enter
lret
or
push
cwtl
stos
imul
inc
leave
push
pop
pop
imul
mov
push
add
adc
imul
std
pop
add
fmull
push
ficomps
cld
cltd
cmpsb
sti
jecxz
mov
popf
adc
and
je
sbb
add
add
repnz
mov
sar
ss
mov
js
int
int
pop
movsb
test
loop
xchg
scas
pop
shlb
loope
rorb
movsb
int
sti
cmpsb
jne
and
and
xchg
and
jle
arpl
sbb
mov
mov
loopne
or
and
or
jle
nop
out
outsb
pop
dec
pop
es
xchg
cmp
xlat
jle
lret
mov
push
jbe,pt
lods
mov
andb
loop
inc
pop
adc
mov
test
cmc
mov
cmp
fmuls
insb
adc
popf
jne
in
cmpsb
negb
push
sub
push
jb
mov
xor
xchg
cmp
aad
mov
inc
je
pop
lahf
cs
cmpl
ss
ret
jl
sbb
push
adc
rcll
push
je
inc
push
xchg
mov
pop
out
mov
push
pusha
and
bound
dec
fadds
aam
dec
adcb
cld
cwtl
jae
jbe
sbb
popf
testl
in
push
push
mov
and
lret
ficoms
cli
out
pop
jecxz
lods
std
pusha
sbb
das
mov
stos
jp
and
pop
and
ficoml
inc
or
or
punpckldq
cmp
xor
xor
push
push
xchg
and
xor
rorb
jp
sbb
mov
fildl
je
aad
arpl
pop
push
leave
in
rorb
stos
add
ret
int3
add
mov
jb
mov
in
rcrl
hlt
out
mov
fidivs
sti
outsl
mov
inc
fwait
inc
sub
add
cmp
sub
fsubrs
js
in
mov
mov
xor
xchg
cs
adc
es
or
jnp
movsb
pop
mov
stc
rcrl
in
adc
in
jno
lods
test
lret
arpl
enter
or
xchg
cmp
punpckhwd
sbb
std
mov
rorl
pushf
es
pop
in
clc
jb
mov
iret
xchg
pop
in
mov
sbb
and
jae
push
adc
sbb
inc
cmc
push
or
fs
clc
loope
jno
pop
and
jno
jg
gs
jmp
cs
mov
cs
fs
sub
adcl
icebp
sub
test
or
insb
pusha
jbe
inc
pushf
into
cs
and
xor
xchg
pop
insb
mov
mov
int
adc
loop
and
stc
xchg
aad
xchg
mov
cmc
mov
roll
push
push
dec
das
inc
ds
int3
pushf
pushf
xor
loope
cmp
mov
xchg
test
insl
pop
pop
and
adc
lds
jge
sbb
adc
xchg
or
cmp
sub
ror
leave
xor
mov
sbb
aam
xchg
aaa
mov
mov
inc
clc
inc
push
popf
aaa
in
inc
out
add
movsb
test
mov
sbb
iret
xchg
pop
lods
mov
cmp
lods
xchg
inc
mov
pop
dec
inc
sbb
sbb
andl
lahf
jnp
bound
pop
push
ret
bound
and
rorl
pop
shlb
adc
sbb
cmp
xchg
repz
fwait
inc
inc
inc
scas
mov
or
xor
mov
outsb
cmp
fcomps
sbb
test
movsl
iret
js
in
cli
xor
cmp
fs
jno
fs
xor
sub
data16
mov
sbb
sub
arpl
testb
and
jle
shlb
adc
dec
sbb
mov
sbb
inc
cmp
lods
jno
push
mov
loopne
stos
pusha
nop
lds
int3
lock
mov
sbb
mov
xchg
jle
xchg
cmp
dec
mov
data16
lods
sbb
nop
add
push
ja,pn
jp
mov
stc
data16
rcrl
xchg
sbb
adc
inc
pop
lds
pushf
mov
rol
xor
push
inc
hlt
or
xor
cmpsl
and
fwait
lock
pop
cmp
ljmp
jae
add
jg
pop
mov
cltd
stos
xchg
lds
or
aam
cmp
in
xchg
pop
dec
test
pop
int
mov
ja
iret
inc
sbb
movsb
adc
test
and
loope
add
push
mov
cmp
fdivr
stos
fisttps
in
adc
pop
jmp
loope
orl
adc
rolb
mov
jle
push
out
pop
insb
fldcw
in
andl
sbb
data16
cltd
or
mov
fs
into
lods
xchg
repz
test
in
ret
mov
orb
in
adc
sbb
sbb
and
aad
xchg
xchg
dec
lret
xchg
icebp
add
push
in
pop
inc
insb
lea
inc
lret
cmpsl
je
aad
push
dec
mov
or
into
repz
data16
in
outsl
nop
add
rcll
icebp
jecxz
jne
aad
ljmp
mov
xchg
xchg
insl
inc
test
xchg
push
ror
outsb
xlat
jno
adc
jecxz
sti
leave
push
sub
jp
lds
dec
test
add
stc
dec
fs
mov
popf
filds
lods
xchg
stos
xor
push
xor
icebp
mull
sbb
mov
loopne
adc
roll
loop
cmpsb
or
ss
jmp
mov
in
xor
and
jl
xor
add
sbb
pusha
inc
xor
lock
mov
dec
test
push
out
mov
clc
jne
xor
xor
pop
sbb
jmp
push
xlat
bswap
mov
das
faddp
xor
pop
shll
out
sub
jns
jge
mov
pminsw
icebp
sbbb
lahf
and
test
subl
sbb
mov
dec
clc
and
dec
sub
pop
dec
incb
ror
lahf
outsl
mov
jnp
popf
popa
int
pop
dec
xlat
or
adc
sub
lds
sub
inc
add
imul
xchg
iret
aaa
add
test
xor
push
pop
popa
pop
pop
gs
daa
gs
repz
mov
cmp
xchg
and
push
and
sub
dec
dec
in
inc
decb
popf
cmpsl
push
test
fdivp
xchg
lea
sahf
adc
push
xor
push
enter
cld
mov
xor
jns
pop
cmp
repz
nop
mov
mov
push
pop
cmc
add
popa
mov
dec
and
or
add
fidivrl
lahf
push
mov
lods
mov
mov
je
in
push
sbb
push
cld
enter
andb
lahf
cmp
stos
push
shrb
sub
insl
outsl
or
pop
hlt
mov
ljmp
xor
push
push
adc
xchg
push
pop
bound
mov
jg
push
in
xchg
push
inc
stos
movsb
jl
iret
xor
call
mov
mov
out
fxch
in
cwtl
fwait
sti
fdivs
mov
in
push
inc
sahf
push
xor
xlat
cmp
jl
lahf
adc
inc
sti
pusha
cmp
adc
push
jo
cmp
fbld
aam
pop
mov
xchg
lea
popa
pop
push
sub
add
inc
mov
outsb
scas
pop
and
or
jl
jnp
shrb
leave
add
xchg
pop
lock
push
cli
stos
popf
loope
dec
loopne
hlt
mov
and
js
mov
xor
rorl
pop
xchg
sub
and
int3
cmp
fisubl
sti
lret
push
in
sbb
mov
lock
cmp
sbb
cltd
imul
out
push
ljmp
jmp
cmp
cmpsb
lods
jecxz
jbe
cmp
shll
sarl
mov
xchg
in
lret
lock
dec
sbb
push
add
add
inc
cmp
mov
pop
push
movb
jg
or
sbb
mov
jno
jmp
loope
repnz
adc
mov
leave
out
rcll
outsb
jle
mov
pop
sub
add
xor
dec
ror
sub
iret
sbb
mov
sbb
iret
das
lcall
fsts
pusha
jle
sahf
cmp
inc
mov
cmp
cmp
js
cmp
clc
jb
mov
xor
mov
cmc
ljmp
mov
ret
dec
sti
aam
fwait
adc
adc
out
out
daa
dec
mov
push
int3
inc
in
mov
cld
rorl
xor
and
pop
ljmp
inc
jnp
cmp
loope
lret
dec
aas
aad
jge
ds
pop
arpl
dec
pop
into
pop
decb
sbb
aaa
sub
rcll
lcall
pushf
push
push
push
mov
pop
cmp
mov
adc
xor
sahf
and
xor
xor
fs
std
xor
or
sbb
lcall
mov
ljmp
orl
cmpsb
sbb
std
sbb
mov
pop
test
cltd
pop
inc
aaa
pop
lea
cmpsl
push
sbbb
jmp
pop
sbb
and
lea
and
in
mov
push
divl
in
and
dec
fdivl
xlat
rolb
pop
ja
mov
mov
insb
cmp
sub
es
mov
push
cwtl
out
xchg
addr16
push
sub
pop
pop
data16
sbb
bound
jle
inc
fcmovne
or
cmp
fists
cmp
fsincos
pop
or
add
es
movsl
fsts
outsl
es
addr16
mov
mov
or
and
add
xor
loope
push
mov
cwtl
adc
dec
cmpsl
jl
subl
cmp
mov
mov
pop
cltd
push
xor
sub
mov
insb
mov
add
ss
nop
test
xchg
sub
aas
test
mov
inc
sbb
push
rcrl
aas
repnz
sbb
fidivrs
sbb
enter
aad
lods
in
cwtl
leavew
push
inc
jo
xchg
ja
pop
lods
jnp
out
inc
dec
sub
fldcw
xchg
cmp
jle
inc
enter
cltd
movsl
fisubrl
imul
xchg
xor
mov
lret
sbb
add
xchg
sbb
cmp
icebp
jne
test
sub
sbb
mov
pop
jb
sbb
aam
cmp
sub
xorb
lods
inc
cmpsl
adc
cs
shrb
arpl
sub
add
jnp
mov
addr16
dec
orl
mov
or
insb
clc
push
stos
fucomi
ljmp
out
or
push
xchg
adc
shrb
inc
mov
in
inc
mov
test
loope
fmuls
imull
repz
jo
in
mov
cli
fldenv
sub
popf
addr16
fistps
cmc
insl
leave
adc
fwait
inc
and
mov
call
outsl
loopne
cmpsb
mov
popf
imul
push
push
mov
mov
add
cmp
and
inc
mov
mov
imul
je
cmp
sbb
sbb
loopnew
xor
adc
popf
loope
inc
add
mov
sub
xor
push
xor
and
dec
xchg
outsb
or
adc
repnz
jno
adc
test
sbb
mov
mov
popf
and
jl
out
push
aam
ret
jb
flds
cmp
or
mov
xlat
and
mov
popa
cmp
jne
fimull
inc
aas
and
pop
push
inc
aam
and
mov
push
jne
arpl
clc
xor
das
clc
dec
mov
notl
lret
xchg
inc
mov
ja
mov
aad
fiaddl
push
xchg
xchg
test
xor
sub
xor
and
jecxz
pop
ret
lret
push
rol
int3
les
xchg
sub
mov
sub
sbb
inc
shlb
rclb
sub
push
ljmp
jns
div
cmp
popfw
add
xchg
cmp
jle
sub
cmp
pop
jno
jge
lret
mov
mov
outsb
jg
rclb
mov
mov
push
xor
jae
dec
into
shlb
xchg
aaa
mov
divl
and
inc
push
mov
aaa
into
push
mov
adc
gs
cmp
int3
rorl
ret
mov
mov
xchg
push
cld
dec
mov
sbb
out
les
pushl
cmpsb
pop
push
data16
or
ljmp
mov
mov
addr16
adc
repnz
pinsrw
out
dec
outsl
cmpl
call
inc
and
cwtl
leave
and
imul
push
xchg
pop
sub
fisubrl
ja
mov
xor
inc
jle
push
mov
push
imul
js
int3
lds
mov
rcrb
lods
jns
enter
or
pop
lea
lret
jp
scas
push
sbb
mov
mov
repz
mov
jns
loopne
in
out
pop
fbld
call
cmp
adc
test
cmc
push
pop
lret
lret
enter
adc
inc
in
lds
xlat
fisttpl
sbb
stc
xor
pop
cs
fisubrs
jns
push
ss
js
adc
ret
sbb
sub
leave
sbb
inc
ss
pop
push
cmp
fisubrs
loope
pop
push
xchg
clc
mov
jecxz
and
pop
in
xor
pop
dec
je
cmpsl
dec
mov
mov
and
in
xor
test
sub
mov
cld
mov
lahf
aam
outsl
sbb
popf
in
and
jae
mov
xchg
aaa
dec
mov
jp
cmp
pop
mov
push
ret
add
data16
rcll
mov
loope
rorb
mov
cmp
jecxz
inc
imul
daa
dec
sbb
loop
adc
in
jo
insl
lds
nop
stos
pop
push
xchg
aad
mov
mov
add
popf
popf
js
mov
pop
lahf
stc
imul
mov
dec
in
add
popf
xchg
mov
jecxz
or
repz
jp
out
out
jg
add
repnz
jecxz
cmp
fdivrs
arpl
out
cmp
push
fistl
or
jle
shl
mov
xchg
mov
mov
sahf
cltd
add
leave
xor
in
jnp
and
ds
in
lret
jecxz
or
cs
xchg
sub
jo
lods
xchg
stos
enter
cltd
dec
imul
mov
leave
test
pop
xchg
aad
pop
mov
movb
pop
sub
inc
repnz
lock
pusha
test
repz
fs
nop
push
jns
push
dec
cmpsl
push
adc
ss
addl
sbb
xchg
push
mov
sbb
dec
fisttpll
adc
inc
adc
sub
xorl
fstps
mov
and
pushf
test
mov
shrb
adc
ss
hlt
stos
mov
xchg
jb
test
push
inc
sub
cmpsb
mov
cmp
cli
sub
add
in
add
sub
inc
test
icebp
stos
pusha
jbe
inc
mov
sahf
mov
mov
ss
push
js
push
sahf
sub
shrl
sahf
and
cmc
sub
inc
fsubs
xchg
fcomp
in
rcrb
and
xor
das
dec
mov
pop
mov
pop
movsb
loop
adc
lods
ret
push
add
xlat
scas
jl
mov
cmp
xchg
js
ret
icebp
sub
fisubrs
mov
ret
lds
int3
repz
sarl
imul
ljmp
subb
cmp
pop
ret
jg
jae
fcmovnu
cs
gs
mov
aaa
repz
lret
es
pop
sbb
inc
nop
data16
dec
into
outsl
leave
scas
repz
les
sub
mov
out
stc
push
add
in
frstor
sub
sub
mov
orl
repz
pop
lcall
push
fisttpl
addr16
loope
mov
sahf
cmpsl
xchg
xchg
idivb
xchg
stos
rolb
stc
mov
adc
adcl
pop
jmp
movsb
push
xchg
adc
or
or
pusha
inc
icebp
jp
jne
int3
push
cld
jg
in
mov
int3
jle
cmc
rcrl
js
in
fstps
aam
or
hlt
popa
sbb
xchg
leave
adc
add
pusha
mov
jae
scas
xor
jne
cmc
pop
pushf
xor
xchg
inc
popa
jnp
and
push
loopne
sbbl
cmp
shll
insl
sub
pop
add
fstp
movb
gs
cld
outsb
cmp
out
fnstenv
sub
inc
addr16
lock
push
pop
mov
cvtps2pi
pop
jno
cmp
jmp
or
jns
and
inc
mov
ljmp
hlt
xor
cmpsl
push
dec
das
ljmp
ret
fsts
movsb
jae
cmc
call
ret
out
add
jns
shl
inc
or
sbb
or
dec
adc
xchg
cmp
pop
xor
int
push
and
movsl
popf
movsl
push
test
add
shlb
xor
jae
jae
fbld
cs
and
rcrb
insb
mov
adc
jl
pop
dec
call
add
sub
cmc
pop
adc
add
inc
lahf
dec
adc
cmp
adc
leave
test
dec
sub
into
std
sbb
jp
pop
add
sbb
aas
jo
lock
sbb
fst
add
gs
sbb
mov
mov
lret
pop
ret
insl
sub
mov
aas
dec
movsl
xor
add
or
lret
lock
xor
lcall
in
imul
push
stos
push
test
iret
mov
das
jbe
inc
dec
xchg
mov
jne
xchg
js
sub
fists
xchg
mov
mov
movsb
dec
mov
test
push
add
pop
pusha
inc
and
cmc
or
jle
aam
mov
jmp
mov
add
xor
jne
std
xchg
mov
iret
test
shrb
mov
push
or
sub
sub
sub
mov
imul
adc
popl
sub
lcall
xchg
imul
pop
push
insl
dec
test
rorb
adc
and
into
and
cmp
lret
cmp
out
jnp
fs
pop
sbb
fwait
adc
gs
push
inc
xor
aas
pop
jle
popa
dec
sub
in
imul
lock
test
push
adc
orb
gs
pop
push
mov
xor
scas
adc
jnp
inc
xchg
call
arpl
ss
mov
inc
adc
pop
notl
sub
mov
xchg
addl
pop
imul
push
lret
sahf
sbb
push
mov
andl
daa
xchg
xor
ror
data16
outsb
xor
je
pop
lret
imul
xchg
mov
mov
jle
mov
mov
dec
cmp
outsb
stos
mov
cmp
push
fsubp
call
lock
mov
adc
mov
fidivs
scas
pop
pop
fcmovnbe
test
or
cmpsl
add
xchg
mov
jnp
loopne
xchg
and
ljmp
jbe
or
ja
inc
mov
add
adc
lret
lret
rorb
xchg
mov
scas
mov
in
outsb
incl
push
inc
inc
lcall
fcompl
mov
mov
xor
sahf
roll
insl
xor
fwait
dec
and
daa
je
insl
cmpsl
loop
push
cmp
lcall
fcomps
mov
addr16
jl
repz
sbb
jmp
mov
adc
das
fisttpl
hlt
das
insl
and
cwtl
test
add
int3
addl
loop
stos
es
popf
mov
gs
mov
daa
imul
into
or
cwtl
jb
cs
sarl
and
arpl
sub
or
cmp
loopew
stc
mov
dec
and
js
ret
repz
mov
clc
mov
fs
outsb
mov
pop
dec
push
repz
loop
stos
dec
aaa
std
sbb
popa
andl
add
mov
or
addb
mov
ret
cli
sbb
jecxz
cs
jecxz
arpl
sbb
shl
movsl
pop
sub
cmpsb
pushl
les
js
mov
jbe
popf
int3
test
push
mov
stc
xchg
mov
lcall
out
jle
jo
lock
push
js
mov
sbb
or
and
scas
or
xchg
out
fs
pop
mull
push
cmp
scas
sbb
pop
aam
inc
push
pushf
inc
mov
mov
xchg
xlat
ror
dec
fwait
mov
fs
mov
aaa
xrelease
movsb
loope
rcr
icebp
sbb
xchg
sbb
push
pop
es
int3
sbb
mov
fcoms
loop
and
test
or
into
cli
shlb
std
jne
fs
sbb
int3
jne
add
add
xchg
mov
jge
pop
mov
jns
jne
xlat
std
or
btc
adc
popf
and
out
cs
cmpsl
jl
imul
mov
cmp
ss
jge
and
pop
cli
je,pn
pop
loop
data16
sub
call
cmp
lods
push
and
mov
in
mov
cmp
cli
mov
mov
xchg
mov
pop
das
loopne
mov
push
push
js
add
pop
sbb
or
nop
mov
or
xlat
rcrb
ljmp
push
int3
sub
jle
movsb
mov
jns
jno
xchg
imulb
dec
pop
inc
dec
xor
jle
inc
push
and
mov
out
pop
fdivp
repz
cs
jl
pop
test
push
dec
test
push
mov
sbb
adcb
hlt
pop
insl
rcll
cmpsl
je
popf
push
popf
aaa
push
push
fidivs
out
inc
pop
mov
and
adc
lds
int3
cltd
std
fyl2xp1
pushf
and
fldt
inc
fwait
cmp
fmulp
das
std
or
dec
nop
into
jne
adc
cmp
push
sti
xor
mov
mov
fisubs
stos
sub
dec
inc
popf
and
es
lea
out
lods
ljmp
movsb
xchg
das
or
imul
insl
shrb
mov
movsb
push
in
std
adc
mov
adc
push
in
xchg
jl
pop
sbb
push
cmp
test
mulb
ljmp
add
rolb
or
mov
cmp
xor
xor
into
movsl
xchg
and
adc
adc
lods
jno
sbbb
mov
mov
pop
jb
loopne
lds
lret
nop
adc
jbe
xor
mov
pop
xchg
pusha
cli
jge
mov
rclb
loop
push
xchg
insl
inc
pop
imul
fldcw
pop
pop
xchg
xchg
mov
outsb
push
or
pop
lea
xchg
or
clc
sub
sti
gs
add
int
jle
xchg
loopne
and
test
mov
jmp
cltd
out
sbb
dec
scas
arpl
insl
mov
cmp
push
clc
stos
push
dec
adc
negl
dec
add
or
arpl
andb
jle
fadds
daa
xor
ljmp
push
aas
loopne
clc
out
sbb
dec
cmp
or
inc
imul
jnp
push
sub
mov
sbb
xchg
push
jg
push
mov
pop
xor
push
cmp
sti
stos
fisubrs
in
or
ja
cli
xchg
pop
adcb
ret
divb
adc
mov
push
fwait
in
push
mov
fnsave
jmp
mov
inc
adcl
shrb
aam
lds
push
sub
fsub
out
icebp
sbb
mov
xor
jecxz
clc
cmovae
insb
enter
repz
mov
fbld
adc
fwait
add
cmpsl
ljmp
ret
sub
out
arpl
mov
shll
jge
stos
or
fnsetpm(287
mov
cltd
icebp
ja
fisubs
inc
xlat
sub
cmp
cmp
dec
mov
inc
js
mov
arpl
pop
es
out
mov
pop
lahf
insl
into
popa
sbb
dec
push
sub
mov
rcrl
fcmovbe
scas
dec
mov
xchg
mov
test
test
adc
adc
mov
jge
push
int
jnp
sub
or
sub
stos
shl
adc
aam
push
jl
movsb
cmc
inc
call
add
or
cmc
nop
push
ljmp
in
ljmp
shll
mov
cmp
push
ret
je
and
hlt
sub
orb
cld
inc
sbb
pushf
push
rclb
cmp
inc
adc
jl
mov
arpl
push
sbb
in
nop
rclb
xchg
repz
mov
ret
xor
sbb
out
mov
divb
push
jmp
mov
xchg
push
mov
sub
jmp
pop
xchg
mov
nop
xor
sahf
dec
lea
mov
jmp
push
xchg
fstl
outsl
mov
and
int3
and
movsl
jg
jp
test
and
loope
test
add
jl
and
sub
pop
and
inc
sub
fistpl
mov
movsl
and
jl
clc
adc
or
sbb
mov
das
inc
inc
sbb
or
cmp
pop
cld
xorb
xchg
sub
ja
test
push
outsl
fs
jns
dec
cld
adcl
cld
andb
inc
pusha
push
adc
dec
push
mov
xchg
sub
sbb
xor
sbb
fwait
dec
outsb
jno
mov
mov
cmpsb
lods
fdivr
arpl
dec
bound
leave
loope
sti
fdivl
cmc
shrb
sub
gs
rcll
repnz
push
clc
mov
data16
insl
push
std
jge
data16
and
mov
movb
pusha
aaa
cmp
imul
pop
jecxz
sbb
nop
inc
pushf
lret
xchg
pop
in
xor
cs
arpl
jmp
pop
xlat
mov
cli
mov
out
dec
dec
push
lret
iret
mov
aas
push
ss
ss
sbb
in
dec
js
scas
subl
shll
scas
addr16
push
and
negl
fsubp
sar
sbb
pop
and
in
xchg
jns
add
inc
sarl
jnp
nop
into
mov
loope
add
test
and
cmp
mov
xchg
push
popf
stos
or
loop
cmpsb
pusha
and
repnz
mov
lahf
mov
rclb
cmp
and
into
fdivrp
aaa
ja
sbb
jno
and
mov
inc
ljmp
add
sarl
xor
sub
rep
mov
lahf
cmpsl
push
push
int
dec
jnp
or
cld
jl
jo
adc
mov
xchg
stc
or
leave
mov
push
es
lahf
dec
mov
add
pop
sbb
mov
push
pop
mov
sahf
push
sbb
lret
sub
decl
imul
inc
ljmp
aaa
and
jnp
dec
and
outsb
sub
dec
jg
inc
or
in
jno
neg
jo
and
add
es
arpl
ljmp
gs
cmp
mov
xor
and
and
dec
cmc
enter
dec
repz
xchg
jge
ja
inc
sbb
or
push
mov
es
pusha
adc
outsb
adc
rol
and
xor
pop
stos
test
ret
and
in
jne
jmp
adc
mov
and
aam
push
imull
stos
push
push
aam
adc
fwait
jno
add
xchg
jo
dec
clc
or
sbb
sbb
mov
mov
data16
fdivs
je
lea
hlt
sbb
mov
sbb
outsl
add
mov
xor
and
jnp
or
sbb
xchg
push
add
adc
roll
ret
andb
hlt
dec
dec
shll
or
inc
cltd
push
bound
xor
cli
icebp
sbb
test
jl
ret
outsl
pop
inc
dec
rcrb
stos
rcr
adc
jg
loopne
int
adc
mov
data16
mov
aaa
leave
push
hlt
and
test
adc
icebp
pusha
gs
insl
add
pop
and
sahf
pop
push
xchg
xchg
cwtl
push
sar
dec
pop
lds
add
pop
mov
std
pop
orb
js
xchg
in
xchg
fistpl
mov
aam
jo
adc
loope
sbb
jmp
ss
lret
xlat
adc
in
add
ja
pop
mov
fnsave
xor
decb
lock
jle
mov
xchg
xchg
pop
loope
pop
pusha
inc
xchg
inc
jp
hlt
rorb
in
imul
push
sarl
sbb
sub
cmpsl
sahf
jbe
stos
cmc
movsl
sbb
adc
jb
fwait
jge
int3
fwait
mov
add
ffreep
jno
pop
in
es
ret
dec
cmp
adc
mov
aam
mov
inc
in
cld
enter
jl
fdiv
adc
xchg
mov
xor
insb
cli
inc
or
mov
imul
push
adc
int
xchg
sbb
or
addr16
cmp
repnz
out
pop
gs
arpl
mov
cli
dec
cmp
mov
sbb
inc
or
icebp
rcrb
dec
in
iret
inc
or
pop
push
pop
adc
xchg
hlt
pushf
adc
pop
inc
xor
cld
mov
aaa
jnp
aad
sbb
jg
lret
out
adc
lea
cmpsl
xorb
xchg
cmp
in
ss
aas
cmp
jg
mov
mov
dec
dec
std
aaa
mov
or
aas
not
cmp
ds
in
sub
mov
cmp
xor
add
shrb
lahf
push
rcll
mov
in
ljmp
int3
sbb
jge
jae
or
mov
or
aas
push
sbb
aad
pop
lcall
clc
sbb
pushf
mov
roll
adc
mov
inc
push
stc
push
outsl
adc
sub
std
pop
sub
jge
mov
clc
add
xchg
sub
lds
and
ret
outsb
pop
aaa
movsl
add
movsl
fistpl
or
lea
inc
push
lods
rcll
flds
and
je
inc
mov
mov
loop
add
add
xor
cmpsb
lods
data16
push
mov
mov
xchg
mov
pop
pop
xchg
cmp
mov
ret
adc
pushf
and
pop
inc
ret
pop
push
mov
mov
add
cmpsl
call
ja
sbb
mov
xchg
leave
mov
popf
cld
push
icebp
xchg
or
mov
movsb
lea
test
cmpb
clc
sbb
shlb
jmp
adc
testl
xchg
push
and
lods
cwtl
call
mov
fs
push
cmp
lret
add
divl
sub
mov
insb
in
or
ss
push
push
xor
sub
loopne
add
and
and
iret
adc
pop
repnz
pop
lds
cmp
adc
jecxz
push
mov
shll
inc
icebp
fs
cli
mov
ja
push
jg
std
push
fiadds
shll
push
inc
mov
loopne
pop
pop
mov
pop
ficompl
push
mov
jae
scas
xchg
lcall
jae
es
add
into
movsb
or
jge
adc
mov
mov
inc
mov
in
imul
out
cmpsl
arpl
in
pop
push
mov
pushf
or
lea
push
mov
or
inc
xchg
and
or
dec
dec
gs
dec
aam
ficomps
fcmovb
add
decl
stos
xchg
lret
das
sbb
sbb
loope
add
xchg
mov
xchg
sub
stc
cmp
dec
clc
pop
fildll
test
sahf
push
repnz
add
xchg
inc
pusha
aad
pop
push
mov
and
int
ja
jb
pop
daa
mov
or
fidivrs
test
xchg
adc
lret
cltd
push
mov
jl
subps
or
cmp
loope
mov
dec
xchg
clc
dec
push
movsb
and
mov
inc
mov
and
insl
sbb
and
and
bound
cmp
xor
jno
stos
sbb
cwtl
adc
mov
inc
out
pop
lds
add
sub
inc
loope
mov
dec
leave
xchg
repz
pop
mov
sub
jb
data16
jns
push
sub
test
call
sub
xor
jns
mov
fsubrl
les
rcrl
cmp
mov
jl
popa
dec
in
sub
push
sbb
insb
xchg
stc
adcb
adc
sub
loope
cmpsb
rcll
out
mov
pop
and
subl
test
adcl
mov
pop
mov
jmp
hlt
inc
loop
popa
pop
popf
loope
sbb
mov
ret
jno
cmp
les
pop
cmp
je
call
sub
lret
and
mov
fstpl
ud0
xchg
cmp
lahf
fwait
mov
mov
adc
inc
loopne
xor
sar
lret
loopne
add
sbb
add
mov
pushf
sub
lods
jge
xchg
mov
xor
adc
jae
rclb
fiadds
icebp
xor
mov
or
sub
mov
and
call
push
jl
testb
push
xor
out
adc
lds
cmp
les
adc
int
adc
jbe
int
dec
xchg
aad
and
add
hlt
pop
push
sbb
cltd
push
cwtl
sub
cmpl
mov
dec
or
leave
push
jg
test
inc
outsl
lea
lds
jae
jns
and
int
popf
in
pop
jge
xchg
inc
data16
or
jecxz
and
adc
mov
cld
insl
fiaddl
mov
mov
pop
in
dec
mov
test
lret
into
jns
mov
push
cmp
pop
les
and
sbb
arpl
push
mov
fwait
icebp
and
lods
xchg
stos
outsl
mov
xor
sbb
push
jb
icebp
inc
movsb
shlb
sarb
jnp
ja
push
xor
out
loopne
and
cmp
lcall
inc
dec
leave
pop
xchg
pusha
sub
xchg
xchg
pop
pop
lret
loop
enter
fwait
or
imul
mov
in
push
sbb
pop
and
loope
icebp
lods
int3
jo
shrl
scas
mov
shlb
pop
fisttps
scas
les
or
add
xor
cmc
pop
mov
push
dec
mulb
dec
in
inc
shll
cmpsb
inc
pop
sub
int
xor
stos
test
xchg
push
sbb
sub
out
mov
or
push
test
call
jmp
shl
mov
jno
clc
ja
mov
or
out
jl
andl
imul
jle
or
mov
pop
cmp
aas
mov
pusha
dec
rorb
aam
popa
cmpl
in
insb
sbb
mov
addr16
out
pop
pop
sbbl
sub
jp
repnz
lret
mov
or
sbb
adc
mov
jecxz
xor
adc
pop
xchg
or
sbb
xor
lea
pop
mov
subb
or
adc
jg
rol
lods
iret
inc
push
mov
ja
jnp
jmp
aas
and
lcall
jno
add
cmpsl
pop
sbb
sbb
out
int
mov
in
mov
arpl
xchg
fldl
jb
inc
xor
enter
aad
dec
loope
mov
cmc
cmp
std
cs
push
stos
outsl
das
outsb
std
cmpsl
hlt
andl
repz
xor
cmp
mov
popf
pop
imull
not
adc
cmp
dec
xchg
lret
aaa
popa
cmp
nop
jno
inc
loopne
leave
add
mov
mov
xor
push
adc
jl
add
cmp
mov
mov
jnp
loop
push
test
jnp
test
cli
lahf
dec
pop
pushf
enter
xor
xchg
dec
test
loope
test
push
cmp
jp
sti
ss
fidivs
scas
xlat
cmp
inc
push
inc
dec
inc
mov
fstps
mov
sbb
in
lock
int
fists
pushf
cmp
mov
mov
mov
outsl
data16
cmpsb
ret
jb
mov
jecxz
adc
push
mov
push
sub
in
push
jbe
mov
loope
sbb
dec
insl
inc
jl
mov
jp
sbb
lret
test
mov
push
adc
xchg
loopne
pop
push
jno
fisubrs
cmpsl
sub
push
testb
fimuls
insb
xchg
pop
daa
pop
mov
pop
lcall
into
cmp
sbb
into
leave
pop
and
mov
ret
clc
lods
fstpt
pushl
adc
cmpsb
out
sbb
int3
sbb
push
mov
cmpsb
adc
movb
mov
xchg
sub
test
loopne
inc
jnp
insb
push
or
aad
sbb
xchg
test
or
int3
negl
outsl
jo
cmp
sbb
lea
cltd
xor
shrl
add
lock
jae
adc
aaa
nop
xor
push
lods
dec
lcall
sub
jl
jecxz
pop
inc
movsl
xchg
arpl
ss
mov
push
adc
shll
inc
aaa
bound
dec
pop
dec
jae
in
sbb
adc
clc
mov
cmp
cmp
push
jmp
sti
in
mov
fcompl
test
lret
imul
xchg
xchg
lret
int3
scas
sbb
dec
cmp
iret
inc
adc
push
std
sbb
addr16
push
scas
push
mov
mov
insb
push
xchg
mov
enter
test
in
jae
pop
pop
mov
dec
mov
push
rorb
pop
and
xor
iret
outsb
mov
pop
iret
pop
inc
cld
xchg
in
mov
xor
es
stos
orb
dec
popf
pop
inc
cli
int
lahf
cmc
dec
jp
or
and
pop
mov
movsl
jl
xor
mov
push
jae
mov
movsb
lods
out
ljmp
adc
push
pop
leave
mov
loope
mov
mov
aas
push
lea
xorb
leave
jo
sbb
sub
and
in
hlt
push
push
popa
mov
stos
stc
into
enter
hlt
es
and
or
inc
jno
push
sarb
test
push
jo
sub
lcall
add
dec
sbb
sarl
push
mov
bound
cmc
mov
mov
jno
pop
out
mulb
mov
mov
aaa
mov
lcall
cltd
clc
sub
imul
cmp
pop
xchg
sub
lds
scas
sbb
js
loopne
subb
hlt
dec
cmp
jmp
xlat
mov
out
or
shrb
or
xchg
fidivs
and
mov
adc
mov
mov
mov
cmpsb
xchg
cmp
imul
repnz
dec
mov
push
adc
das
cmp
pop
sbb
jp
push
fs
adc
dec
jae
sbb
mov
flds
stos
pop
and
into
stos
adc
and
cmp
xchg
mov
sub
mov
jb
insb
mov
and
jo
cmp
inc
out
test
adc
add
imul
enter
or
adc
jle
outsb
pop
nop
and
jns
or
shl
call
lret
cmpsl
jnp
xor
lret
sub
imul
ret
scas
repz
sub
popa
ret
ss
mov
xor
pop
xchg
adcb
jmp
es
outsb
sbb
xchg
or
pause
pusha
rcl
sub
add
dec
test
test
adc
pop
sbb
aad
mov
mov
jae
xchg
jge
addl
fs
sarb
sub
xchg
jl
pop
idivl
xor
clc
xchg
sub
inc
jno
pop
lret
std
and
push
jmp
sub
or
inc
movsb
pop
xchg
mov
ljmp
push
dec
movl
lock
addr16
je
andl
xchg
pop
insl
out
mov
sbb
jmp
cmp
mov
mov
shlb
es
inc
xchg
ret
jb
inc
iret
pop
sub
out
cmc
popl
mov
dec
imul
cld
repnz
es
xor
in
pushl
lret
mov
mov
and
xor
mov
lods
adc
sarb
lods
cltd
cmp
hlt
orb
es
xchg
add
xchg
xchg
data16
dec
in
mov
fisubs
dec
addb
imul
inc
or
push
adc
cld
das
jg
test
adc
dec
cmp
inc
lods
test
add
xchg
pop
incb
jns
test
cltd
lret
xchg
test
jmp
dec
mov
mov
add
jo
leave
je
pop
push
into
push
sahf
xchg
mov
inc
push
add
jo
jnp
ret
inc
sbb
cmp
inc
push
xor
xchg
xor
int
inc
popf
call
mov
lret
cmp
dec
cli
jo
mov
in
sub
out
push
je
shrb
outsb
shlb
xchg
xchg
mov
repz
push
mov
arpl
push
gs
xchg
outsl
pop
negl
xor
fistpll
xlat
nop
ja
cmp
cli
enter
mov
cmp
repnz
and
sub
cli
and
mov
cmpb
aam
and
lcall
pop
fdivl
xor
mov
mov
dec
xor
mov
sti
jle
test
pop
sub
test
gs
lcall
or
push
adc
in
pop
int3
push
cld
arpl
cmp
sub
cmp
adc
and
cmpsl
push
add
jo
inc
pop
sahf
add
mov
mov
mov
movsb
loope
ficoms
jg
push
enter
clc
pop
pop
and
xor
mov
sbb
hlt
mov
inc
and
mov
mul
cmpl
add
loopne
sub
dec
sbb
mov
js
and
add
loopne
loop
fiadds
bound
out
mov
xchg
sbbb
fbld
jle
lret
loopne
inc
pop
adc
jl
es
popf
jg
movsl
xchg
mov
push
lods
out
andb
call
mov
dec
sub
std
lock
mov
sub
js
es
test
jmp
jge
mov
negl
movsb
pop
fldl
pop
or
xor
cmp
add
add
aad
pop
daa
pushl
cwtl
xchg
sub
adc
mov
xchg
pop
push
push
scas
push
lret
dec
xor
xchg
dec
or
add
or
push
fwait
jnp
movsl
mov
test
xor
in
mov
pop
iret
or
cmp
xchg
test
mov
loop
xchg
test
add
hlt
fldcw
sbb
add
outsl
arpl
outsl
or
sub
xchg
jle
dec
ret
mov
jns
mov
cmp
cmp
and
icebp
jge
out
shl
ds
adc
cmp
les
lods
add
sub
jge
pop
test
pop
and
xchg
addl
clc
xor
push
and
test
popa
arpl
mov
in
ss
mov
out
mov
xchg
sbb
std
popf
clc
iret
mov
stos
aad
ds
cs
mov
in
and
addl
icebp
shlb
inc
push
mov
dec
mov
shll
cmp
or
pop
lcall
add
out
mov
sbb
jge
fmul
pop
mov
xor
mov
mov
dec
adc
jp
xchg
inc
pop
jmp
mov
pavgb
fdivrs
push
pop
jecxz
mov
stos
sub
lcall
sub
lds
int
mov
adc
aam
cmp
aas
movl
sbb
sub
inc
mov
scas
stc
cmp
xor
add
fidivl
jge
pushf
std
in
adc
imul
sub
cmp
pop
jmp
cld
loope
shll
cmp
pop
aas
rclb
fisubrl
mov
imul
popf
jns
mov
mov
cmp
lods
in
xchg
mov
fisttps
pop
test
popf
lcall
insb
lea
dec
pushf
lea
rcl
int3
mov
out
xlat
out
iret
std
scas
pop
mov
mov
inc
mov
std
leave
sarb
dec
mov
xchg
push
fidivrs
subb
ss
mov
roll
das
sbb
outsl
mov
ja
pop
lods
pop
stc
pop
lods
aad
in
xchg
aam
xchg
cmpsb
cmpsb
jle
sbb
adc
lcall
xor
stc
inc
popa
mov
push
pop
add
cli
jbe
repz
insl
shrb
pop
jg
inc
sub
and
arpl
pop
orl
mov
dec
xor
and
test
int3
outsl
pop
scas
dec
lret
jnp
out
addb
dec
add
daa
xchg
ds
sbb
vpaddw
rorb
adc
dec
mov
jl
shrb
dec
sub
inc
jb
jmp
aas
lods
fadd
cmp
rolb
jecxz
mov
dec
scas
pushf
pop
shll
aas
pop
popf
pop
jl
or
jno
fbld
repz
popa
roll
bound
add
cmpsl
xlat
adc
sbb
sub
sbb
xor
dec
rorb
mov
faddl
loopne
mov
lods
add
into
lds
dec
mov
in
out
stos
mov
pop
inc
testb
scas
ds
mov
daa
data16
pop
mov
lea
sub
sub
and
add
jbe
testl
and
adc
ss
mov
or
es
andl
sbb
pop
sub
pop
in
inc
rcrl
mov
dec
jmp
xor
imul
xchg
cltd
cmpsb
mov
stos
loop
xchg
out
add
lods
dec
xchg
pop
aas
mov
cld
lods
test
pop
loope
mov
cmpsb
dec
jae
add
repz
jmp
shll
lea
xor
jb
sub
adc
inc
les
pop
gs
es
idivl
stc
sti
mov
push
sbb
push
pusha
shl
ret
dec
rolb
add
mov
sti
push
mov
loopne
test
mov
ficoml
jne
mov
data16
push
mov
cwtl
sub
or
sbb
movsb
mov
popf
test
jge
xchg
mov
cltd
lcall
pop
lock
xor
mov
xlat
stc
lcall
mov
test
frstor
and
push
cmp
int3
repz
cmp
and
sar
jp
je
or
mov
loop
push
ss
rcl
loopne
je
mov
mov
dec
fmuls
test
and
je
xchg
sti
shl
in
xor
inc
lret
movsl
sbb
or
out
test
insl
mov
jmp
mov
mov
dec
outsl
pop
pop
push
push
into
mov
xchg
xor
cwtl
les
jmp
imul
lock
clc
jp
dec
and
pop
sub
nop
iret
jne
in
push
or
xchg
stos
addl
push
js
jl
mov
insl
test
nop
xor
shl
add
mov
xchg
test
push
jbe
mov
cmp
sbb
cmpb
dec
jmp
loop
sar
fs
mov
fildll
enter
loopne
fldt
out
out
jl
rclb
and
xchg
pop
out
jmp
xchg
inc
aas
cmpb
in
arpl
cmp
jo
mov
mov
sub
mov
mov
mov
into
or
cmp
ret
aam
das
int3
push
jge
mov
or
jns
test
or
xchg
or
lret
movsl
cwtl
mov
fldenv
fxam
rorb
inc
repz
scas
push
or
lock
mov
and
lods
push
mov
stc
es
sarl
or
int3
xor
repz
roll
iret
adcb
mov
cltd
xchg
xchg
testb
pop
cmpsb
ret
les
ficompl
adc
lcall
and
sbbb
dec
enter
adc
pop
fwait
stos
jle
push
and
pop
and
xorb
out
sbb
iret
imul
sub
outsb
push
sbb
jo
mov
jmp
out
imul
out
cli
jns
inc
sahf
shl
and
sarb
call
inc
sbb
and
testl
xchg
test
push
out
rcr
push
jp
or
and
incb
hlt
adc
movsb
push
adc
fs
arpl
mov
mov
sub
pushf
jne
dec
sub
dec
ffree
rorl
fistl
pop
nop
xlat
ds
push
pop
push
loop
pushf
fdivrl
mov
rcr
mov
frstor
imul
jnp
mov
xchg
in
push
push
scas
xchg
out
xor
subb
int3
repnz
sahf
mov
js
jo
cmova
dec
daa
fwait
ret
pop
cmpsl
xlat
push
ljmp
push
and
cmp
xlat
outsl
mov
shll
push
aam
mov
sarb
divl
hlt
lret
jne
mov
shl
inc
hlt
mov
push
add
or
cmpsb
xlat
jne
scas
mov
leave
pop
add
pop
ja
mov
jp
mov
out
pop
push
rcrl
mov
int3
sbb
xor
cwtl
xor
fnstenv
pop
sti
and
push
xlat
sub
dec
add
inc
push
push
mov
cs
push
into
pop
xor
jae
cmp
in
mov
and
rclb
shrb
mov
sbb
clc
jecxz
xchg
lcall
pop
mov
fsubl
sub
pop
push
lahf
cld
leave
rol
ficompl
pop
sbb
xchg
dec
shrl
dec
sti
dec
adc
pop
std
push
movsb
jnp
test
jb
in
mov
and
fmulp
jb
stos
mov
aam
xor
add
and
or
push
test
xor
ret
rorl
sub
imul
ficoml
add
pop
and
mov
test
push
outsb
and
sbb
lock
inc
xchg
mov
in
pop
mov
in
icebp
les
jle
cmpl
insb
xor
mov
jecxz
repz
lahf
je
nop
pop
pop
lods
dec
push
xor
bound
push
ljmp
js
or
mov
xchg
and
jo
loopne
xor
mov
push
lods
outsb
icebp
fidivs
nop
pop
xor
xchg
stc
inc
mov
and
insb
mov
xor
and
add
ret
std
stos
sbb
inc
add
add
je
cli
push
outsl
lret
dec
pop
mov
ss
addr16
iret
aas
inc
les
inc
xor
pop
push
enter
rclb
sbbb
test
rcrw
test
xor
pusha
push
jne
sbb
lcall
je
aas
out
mov
out
inc
push
mov
xor
dec
fs
rcrl
outsb
xor
subb
dec
xchg
rcrb
mulb
xor
daa
imul
pusha
sbb
pop
lahf
cs
popl
fdivrl
mov
xchg
sub
mov
rclb
out
push
and
popf
daa
add
insl
ljmp
test
ss
test
xlat
fldt
hlt
sahf
and
fwait
mov
rorb
jbe
adc
js
pop
adc
movsb
fbstp
push
fbld
and
mov
jg
cmp
pusha
jge
adc
lret
test
jge
xorl
add
and
cmp
movsl
and
sbb
mov
int3
into
inc
rcll
ds
pop
popa
mov
clc
adc
call
mov
ds
sbb
out
subb
sub
xchg
call
mov
dec
imul
dec
pop
shll
cmpsb
aas
jg
add
mov
cmc
es
aaa
int3
lods
addb
pushf
fwait
sti
ja
adc
arpl
iret
inc
cmp
xchg
push
lret
imull
push
in
out
and
sbb
call
xchg
dec
or
sub
lret
jbe
lods
sti
fs
cmp
mov
xchg
lds
inc
xor
xchg
cmpsb
push
sbb
or
push
push
mov
sbb
insb
dec
or
dec
mov
sbbb
movsb
sahf
pop
jge
clc
bsr
push
loope
lea
jle
dec
xor
and
and
test
jno
aad
insl
in
push
pop
jbe,pt
push
jae
fwait
push
mov
mov
dec
inc
repz
ja
popl
cltd
and
pop
sbb
fucomi
imul
dec
cmc
push
dec
push
pop
or
mov
dec
jg
mov
test
mov
scas
mov
aad
sarl
leave
orb
ds
mov
sahf
popa
leave
mov
sub
mov
std
fisubl
inc
std
loope
nop
push
loope
enter
add
jl
jnp
ja
push
jno
cld
movsl
pop
movzwl
ret
push
mov
sub
pop
inc
outsl
je
cs
cmp
xor
iret
rep
pop
lret
mov
repnz
mov
inc
js
stos
push
jg
shl
mov
mov
ficoms
push
scas
lods
stos
mov
in
pop
jmp
jecxz
lret
mov
pop
jnp
mov
dec
pop
or
fmuls
adc
inc
jg
pop
daa
xchg
push
fidivl
jne
add
mov
insb
fucomp
mov
inc
loop
push
or
out
xlat
ret
adc
dec
out
add
add
mov
pop
xchg
inc
sub
push
fmuls
test
mov
repnz
popf
push
ss
xor
cmpl
sbb
stos
and
xchg
pop
xchg
adc
mov
adc
cmpl
lock
int
adc
bswap
jmp
sub
adc
xchg
pushf
push
xchg
xchg
jecxz
je
or
dec
push
and
push
mov
lahf
sbb
sub
stos
outsb
ljmp
in
hlt
xchg
mov
aaa
mov
loop
or
aam
cmp
std
aam
inc
inc
jl
sahf
mov
or
push
shll
out
orb
imul
dec
adc
ret
aam
xchg
lock
mov
jecxz
mov
loope
ja
mov
adc
popa
inc
movsl
dec
fisubs
cmc
iret
jne
or
add
xor
xchg
dec
sub
test
push
sti
bound
in
ja
adcl
pop
aam
jl
xchg
xor
mov
dec
and
adc
push
sbb
inc
mov
lret
out
push
decl
inc
movsb
stos
adc
mov
sub
lret
addl
xor
mov
push
in
pusha
pop
enter
roll
mov
push
test
push
push
mov
adc
jmp
mov
negb
push
ja
pop
pop
sub
mov
inc
in
pop
les
shl
mov
in
jle
inc
jnp
or
into
sub
fsubs
jmp
pop
fcoml
or
dec
test
push
fnstsw
out
or
and
movhps
mov
adc
xor
push
push
js
sub
push
loope
loop
fmull
jmp
jg
jae
mov
push
mov
sbb
xor
subl
or
nop
dec
das
je
mov
lock
les
in
movsl
rcrb
lret
adc
packuswb
flds
pcmpgtw
enter
cmpb
jmp
das
sub
ret
outsl
sub
in
pop
or
scas
xchg
adc
pop
push
rcl
enter
icebp
cmp
xchg
dec
mov
lret
xchg
mov
sbb
adc
imul
arpl
adc
subl
jle
stos
sti
pop
and
in
jp
lods
pop
mov
and
adc
int
pushf
sbb
aad
loop
lret
cmpl
jae
gs
cmp
cmp
add
icebp
jecxz
sbb
cmc
xchg
orb
pop
xchg
sbb
adc
dec
inc
or
aam
das
test
aaa
movlhps
jge
out
sub
or
mov
or
mov
call
mov
clc
xor
sahf
xlat
and
mov
sbb
movsl
push
mov
shl
pop
cs
sub
dec
imulb
jmp
adc
ja
clc
frstor
fmull
stos
aam
inc
xlat
cmc
push
push
jb
scas
fwait
jns
lcall
fistpll
xor
jne
mov
scas
sbb
repnz
bound
sbb
cmpb
and
adc
out
les
cmp
jns
jmp
sub
xchg
jnp
xchg
popf
jne
data16
in
sbb
jne
sbb
xor
lods
cmc
xchg
ja
lock
mov
je
cltd
xchg
test
and
cli
sub
jno
jne
les
sbb
loop
adc
sarb
cmp
xlat
in
add
in
mov
pop
pushf
and
mov
push
mov
subb
mov
xchg
fdivl
jne
sub
sbb
test
inc
fs
sti
push
fdiv
mov
es
jbe
sbb
outsb
cmp
js
lods
xchg
hlt
lahf
mov
mov
les
mov
pop
test
out
pop
lcall
dec
in
jmp
sbb
cmp
test
sbb
jge
icebp
cmp
dec
mov
and
test
fs
rclb
popa
inc
inc
add
pop
sbb
addr16
stos
xor
mov
mov
mov
sbb
mov
mov
mov
test
pushf
mov
pop
lods
addr16
sub
in
clc
dec
arpl
mov
push
inc
imul
scas
or
ret
push
movsl
push
cmc
roll
cmpsl
aad
mov
es
arpl
rol
add
mov
hlt
arpl
push
or
pusha
mov
or
test
iret
enter
sbb
repz
dec
xchg
mov
push
sub
stos
xchg
and
decl
push
insl
mov
jo
jle
push
xchg
cmpsl
dec
divb
xor
rorl
mov
faddp
lock
pop
cmp
stos
sbb
hlt
pop
std
rorl
fwait
or
gs
add
movsb
inc
jbe
mov
jg
aaa
jne
arpl
lcall
outsb
sub
and
push
jmp
fidivrs
adc
xchg
cmp
push
push
in
pop
fs
je
out
and
adc
mov
sbb
sbbl
ret
shrb
pop
xchg
or
or
idivb
out
and
pop
testl
push
shlb
fcmovnu
inc
out
imulb
das
inc
jo
js
cld
adc
pop
outsl
sub
mov
inc
sub
in
mov
in
mov
adc
push
nop
inc
sbb
cwtl
jg
clc
addr16
adc
mov
lcall
movsl
xor
aad
mov
or
out
insb
dec
ret
mov
jne
pop
bound
mov
mov
aas
push
inc
in
jb
sbb
mov
xchg
adc
push
daa
jo
cmp
pop
gs
pop
outsl
jecxz
inc
dec
push
sahf
cmpsl
dec
add
mov
add
sbb
insb
imul
out
flds
push
call
or
fwait
repz
stc
sub
push
dec
enter
cwtl
jmp
fisubrl
popa
insl
movsb
xchg
pop
mov
jg
cs
and
mov
or
and
out
pop
push
dec
sub
sub
sbb
into
and
push
in
xchg
sbb
jp
jp
mov
lret
in
imul
mov
jg
or
cwtl
lret
add
sub
test
and
mov
in
pop
int3
push
nop
cmp
lods
ret
sub
push
xchg
mov
lfs
mov
pop
sub
push
adc
xchg
xor
imul
and
xorl
mov
cs
inc
push
out
or
popa
cmp
iret
sti
and
int3
lods
cmp
out
pop
popa
orb
les
jo
pop
andl
in
mov
adc
mov
enter
outsl
xchg
aaa
mov
push
inc
out
imul
push
stos
dec
das
mov
push
mov
add
add
pop
call
adc
subb
push
rcrl
leave
xor
push
mov
add
inc
sub
mov
pop
sub
jno
mov
shrl
je
or
push
dec
xor
into
jmp
sti
mov
cmp
aaa
or
inc
jae
test
pop
push
inc
adc
nop
push
cmp
mov
xchg
scas
and
sahf
or
mov
cwtl
scas
xchg
xor
or
addr16
es
pop
lds
out
mov
data16
add
out
imul
mov
cmp
pushl
jmp
dec
pop
pop
sbb
sarb
cmc
addr16
repnz
pushf
mov
out
push
rcrb
in
outsl
lret
sbb
out
sbb
push
in
add
pop
js
cwtl
out
mov
fdiv
mov
xchg
lea
sub
add
pop
mov
pop
iretw
dec
xchg
in
test
clc
les
mov
popa
xchg
or
shl
outsb
mov
push
fwait
xchg
cmp
sbb
xlat
sbb
arpl
or
jmp
hlt
or
in
cmpsb
or
fsubrl
lahf
mov
xchg
dec
jb
ja
mov
sbb
mov
mov
daa
pop
into
pop
insb
jge
cwtl
inc
shll
cmp
imul
dec
test
mov
out
inc
or
daa
sub
inc
inc
sbb
mov
lock
sbb
adc
aad
pop
pop
and
out
divb
jp,pt
add
sarb
cli
add
scas
push
sbb
cwtl
outsl
or
adc
cmpsb
shll
mov
fdivl
mov
mov
push
sbb
inc
inc
stc
out
adc
aam
jnp
pop
sbb
mov
push
and
fwait
stos
sub
pop
pop
repz
push
aas
test
gs
mov
push
movsb
mov
lcall
daa
mov
loopne
arpl
or
rolb
push
ss
jb
mov
lahf
mov
or
rolb
icebp
lods
push
shl
mov
or
push
test
daa
dec
shrb
mov
push
sub
jns
leave
ret
cs
jge
pop
insl
or
rcrb
add
pop
lret
mov
mov
cmpsl
add
mov
popf
iret
rorb
pop
push
mov
mov
dec
mov
out
sahf
rorl
mov
mov
pop
incl
or
add
mov
fidivl
push
pop
mov
push
out
adc
insb
pop
cwtl
lock
xchg
jbe
inc
pushf
out
ror
in
aaa
mov
adc
xor
adc
adc
push
adc
pop
jp
daa
sub
pop
icebp
sbb
sti
adc
aam
sahf
jecxz
jecxz
push
adc
movsb
testl
add
inc
push
jno
jecxz
aad
lods
jae
adc
cltd
cmc
sbb
enter
cmpsl
pop
dec
and
xchg
int3
lcall
sti
xor
test
pushl
mov
adc
and
insl
push
call
insb
nop
test
inc
je
jbe
js
pop
mov
scas
mov
xor
sub
push
pop
sub
and
ds
std
loopne
fidivrs
das
lock
jmp
cmp
enter
cmp
and
ret
outsb
sub
inc
mov
mov
sbb
movsl
outsl
and
push
jecxz
mov
xchg
daa
in
mov
enter
cmp
in
cs
int3
fst
addr16
mov
jo
sbb
mov
inc
add
xor
and
xor
xchg
xchg
and
shlb
push
dec
mov
push
xor
loop
fidivs
sbb
bound
jae
cmpsb
add
in
push
or
out
in
iret
mov
ljmp
sub
sbb
bound
push
jae
jo
sti
sub
daa
lds
mov
inc
not
lods
stc
jmp
add
jmp
mov
xchg
jnp
pop
jp
mov
inc
push
and
or
cmp
dec
jmp
jo
popf
xlat
adc
xor
aad
inc
push
and
sub
or
shlb
cltd
das
push
push
push
adc
add
aad
xor
sbb
out
push
ret
pop
and
mov
add
lods
jnp
enter
fcmovb
into
cwtl
je
sbb
cmp
loope
daa
ret
and
mov
xor
add
fwait
xor
fiadds
mov
fs
das
int
shrb
push
jne
ja
in
cmp
pop
out
out
rorl
stos
cmp
lock
enter
push
sarb
xchg
shrl
and
enter
subb
ljmp
ret
stos
xchg
add
and
test
shrl
shlb
lds
aaa
push
jge
mov
or
sub
stos
das
cmpsb
adc
movsl
call
bound
push
mov
sub
push
xchg
sbb
cli
cmc
pop
pusha
repnz
pusha
jle
push
and
mov
dec
je
push
loopne
add
or
pop
xchg
loope
bound
or
outsl
ret
fstps
inc
js
mov
jne
sbb
in
dec
xchg
nop
mov
out
lret
inc
aaa
xor
fwait
mov
leave
jae
adc
pop
push
cmp
cltd
and
adc
fs
push
dec
cmp
scas
test
inc
insl
das
mov
scas
cmpsb
movsb
push
xabort
pop
rorl
dec
subl
sub
and
or
sub
xor
inc
mov
and
mov
pop
fnstenv
test
nop
addr16
fisubrl
xor
xchg
mov
lock
lock
fwait
or
loope
test
mov
fs
jns
xchg
fsubr
fldenv
lcall
aad
repnz
mov
nop
imul
les
inc
sbb
pop
imul
mov
push
fs
or
xlat
stos
xchg
hlt
aaa
cmpsb
push
fs
nop
in
pop
dec
xchg
push
ret
shll
cmp
pushf
test
mov
repnz
and
aad
mov
xor
fs
mov
dec
cmpb
test
into
inc
fidivs
aaa
cmp
push
xor
or
and
dec
inc
mov
xor
je
adc
sub
les
pusha
ret
adc
jle
test
test
or
inc
popf
pop
jecxz
sbb
jae
cmp
push
pop
dec
aad
in
int3
inc
jae
clc
inc
jnp
fsubl
mov
out
stc
sub
hlt
jne
dec
jmp
popa
jle
inc
sub
sbb
dec
or
pop
jo
inc
sbb
jle
sub
jge
into
clc
mulb
fimull
cld
daa
fisttps
sbb
pop
loope
lea
insb
push
ja
adc
xor
mov
or
ret
push
sbb
mov
mov
xchg
pop
and
pop
mov
cmpb
push
cmp
gs
imul
stos
shrb
into
sub
lahf
or
sti
pop
fists
rolb
addl
icebp
movsl
insb
and
fimuls
fstps
insb
addl
cmp
sbb
jmp
lock
ss
xchg
shl
sahf
cwtl
push
shlb
jmp
ret
es
rolb
cmp
movsb
pop
mov
sbb
mov
xchg
sahf
andb
add
rcll
and
mov
movsb
lahf
cmpb
popf
clc
sbbl
xor
fisttpl
inc
mov
hlt
nop
sti
mov
aaa
and
gs
jmp
mov
dec
lea
push
aam
xchg
ds
es
push
inc
sbb
lods
mov
lcall
sub
add
jno
xchg
inc
mov
pop
xorb
sub
int
out
push
xlat
rorl
fisttps
out
leave
sti
add
lret
popf
xchg
mov
ss
push
inc
shl
mov
icebp
stos
ss
dec
mov
ret
in
xchg
out
popa
out
mov
xor
inc
mov
push
and
cwtl
xor
es
inc
and
aas
popf
dec
cmp
pop
pop
sub
stos
jo
sbb
pop
int3
scas
add
fs
jnp
jp
add
fisttpl
mov
mov
push
and
sahf
stc
das
xchg
mov
cmp
int3
sbb
mov
mov
loopne
movsl
sti
stos
pop
add
imul
add
faddl
dec
in
jle
shlb
add
push
andb
and
fidivrs
push
dec
jp
mov
lret
push
add
jnp
or
and
inc
popa
mov
cmp
scas
cld
call
loopne
repz
pusha
shlb
sub
inc
popf
push
mov
lods
divb
test
and
sub
push
pop
sbb
mov
dec
insb
iret
xlat
sub
xor
ret
mov
fs
add
add
lahf
outsb
arpl
testb
jge
adc
filds
out
leave
movsl
sbb
inc
sbb
iret
fsubrl
test
cwtl
cmp
and
xchg
sub
cmp
out
pop
pop
xchg
jb
mov
cs
xlat
stc
and
and
shrl
repz
out
xor
ds
cmp
inc
xchg
fwait
cmpsb
mov
out
xchg
pop
fs
pop
fs
push
loopne
jo
mov
push
xlat
pushl
jo
pop
sub
cwtl
popa
cmp
ret
lods
mov
sub
inc
add
xor
sbb
pop
hlt
cmp
xchg
test
jnp
push
cmpsl
cmpsl
imul
push
int
cmp
add
popf
into
mov
push
mov
lret
loopne
push
jbe
mov
jge
iret
sbb
test
mov
jnp
mov
xlat
out
mov
sahf
inc
aas
loop
jle
inc
adc
adc
shrb
jmp
xchg
cmp
inc
mov
xor
cltd
inc
mov
push
cmp
xor
pop
loopne
jbe
cs
idiv
repnz
ss
sub
jbe
bound
cmpsl
adc
jb
lods
cmp
add
mov
arpl
push
pop
les
stos
sub
mov
push
pop
mov
push
imul
fsubs
push
dec
and
add
adc
mov
xor
lods
mov
mov
ss
adc
stos
mov
pop
negl
incb
outsl
mov
adc
dec
lret
xchg
adc
sub
and
or
adc
adc
data16
inc
cmpl
cmp
cmp
into
lcall
and
pusha
cld
stos
adc
sub
mov
push
cmp
pusha
je
mov
inc
shll
push
or
out
gs
sub
push
xchg
jnp
daa
cmp
lcall
dec
ds
xchg
push
xchg
push
xchg
push
in
mov
xchg
outsl
cwtl
inc
iret
xor
dec
adc
cmp
test
sub
insb
inc
call
mov
jbe
add
cltd
jle
mov
loopne
fs
imul
inc
cmovle
test
cmp
xchg
mov
push
mov
pop
nop
and
rorb
lock
outsl
cmpsw
cmp
jl
inc
mov
pop
jbe
aad
lods
test
pop
ja
and
lock
aaa
push
jl
sub
dec
sub
pop
in
cmp
js
cs
jle
das
jno
je
mov
mov
add
popa
add
pop
or
cs
jge
jb
out
aas
sar
mov
cmp
xor
xor
cmp
lret
and
xchg
xchg
sbb
xchg
sub
push
shr
push
pop
rclb
and
clc
addl
fcoms
jne
lods
loope
jecxz
mov
out
add
test
sbb
cmp
mov
stos
mov
fidivs
ret
push
dec
jnp
stos
pop
adc
fdivr
mov
loop
stc
loop
and
jge
ret
shl
sbb
sub
xor
pop
stc
inc
lock
repnz
inc
sub
sub
adc
dec
les
add
lahf
das
ja
cwtl
sbb
inc
rcll
dec
cmp
adc
mov
sub
xor
cltd
or
fs
push
test
xor
jmp
or
cmpsb
divl
push
and
loope
enter
fdivrl
cwtl
test
dec
pop
test
pop
lahf
fwait
cmp
fldt
fsubrs
jmp
lret
out
cli
aas
pusha
push
aas
or
cmp
sbb
int
shr
iret
pop
push
aad
inc
fcoml
or
mov
mov
mov
in
test
sbb
mov
inc
ds
mov
lahf
xchg
loopne
sub
pop
popa
movsb
mov
pop
fcoml
test
call
pop
pop
cltd
pop
testb
jmp
add
fnstcw
dec
pop
xchg
addr16
mov
jae
movsb
mov
xchg
rclb
mov
mov
xor
and
lods
add
mov
fsubr
rorb
leave
and
jns
dec
add
sbb
or
mov
push
js
test
mov
idivb
pop
push
dec
inc
aad
js
cmpsb
adc
cmp
mov
sbb
mov
cmp
push
test
lahf
mov
cmp
and
outsb
xchg
mov
jno
inc
iret
fdivrs
mov
cmpsb
in
mov
inc
push
xchg
aad
sbbb
adc
dec
ficoml
sub
sub
addr16
cmp
cmp
ret
adc
fisubs
adc
jno
xchg
jo
imul
push
mov
insb
repnz
mov
sbb
movsl
mov
cvttps2pi
notl
or
shlb
or
cwtl
or
mov
lods
xor
jns
fistps
leave
mov
in
xchg
das
popf
aaa
mov
dec
lret
sbb
xchg
mov
sub
mov
sbb
scas
jp
cli
or
lods
les
imul
cmp
int
jg
fisttpll
movb
mov
jb
fidivl
xor
inc
adc
xor
mov
push
sbb
loope
dec
iret
push
dec
jnp
into
adc
xchg
aaa
inc
sbb
stos
cmpsl
and
es
ds
cltd
xlat
sub
je
add
jmp
xchg
lret
jne
inc
add
cmp
ss
pop
mov
adcb
cmp
je
ds
je
pushfw
sti
scas
lahf
movsl
inc
nop
push
add
and
enter
sbb
fucomip
nop
adc
pop
add
adc
xor
pushf
mov
sbbl
sbb
call
mov
in
shr
cmpsb
fidivl
arpl
stc
xchg
orb
jbe
sub
pop
in
inc
mov
add
cmp
imul
shlb
out
jp
adc
frstor
daa
in
data16
xchg
xchg
cmpsb
or
xchg
cmc
scas
lock
pushf
dec
lds
cmp
inc
sub
outsl
data16
movsl
iret
jno
pop
push
dec
jmp
das
daa
lock
movsbl
pop
add
push
fmull
negb
cmp
mov
jo
mov
sarb
lea
mov
fists
aas
repz
imul
rolb
push
and
pop
sarl
minps
jnp
add
and
mov
push
mov
mov
inc
shll
ficompl
pop
xchg
add
xchg
into
clc
mov
and
shrl
clc
unpckhps
stos
adc
jg
inc
filds
add
aas
push
mov
mov
dec
fsub
mov
and
lcall
or
mov
cs
js
jmp
sub
ret
in
xchg
pop
xchg
xchg
paddsw
movsl
inc
lcall
xchg
cwtl
popf
int
adc
sbb
push
arpl
pop
mov
loopne
sahf
push
aad
iret
lea
notb
movsb
pop
lods
adc
mov
shrl
shrl
iret
hlt
call
sub
inc
ljmp
and
adc
movsb
ret
scas
ret
loop
sbb
sub
int
aaa
mov
dec
cld
insl
push
rcl
cmc
mov
rorl
jg
sbb
jmp
xlat
sbb
jmp
sbb
adc
inc
sbb
mov
test
enter
ret
sahf
cmpsb
inc
adc
and
jecxz
mov
repnz
jle
stos
mov
out
ret
xchg
xor
mov
add
jne
jg
shl
pop
xchg
mov
or
add
popa
insb
fisttpl
xchg
ficoml
cmpl
mov
cltd
sub
mov
ja
cltd
fpatan
hlt
add
sti
into
inc
mov
js
and
dec
sub
inc
add
pop
adc
test
daa
icebp
xor
sahf
dec
or
loopne
mov
mov
xchg
sub
test
imul
nop
mov
js
pop
cmp
mov
inc
push
mov
cld
das
inc
lret
inc
and
mov
mov
dec
xor
sbb
scas
add
clc
mov
pusha
loopne
adc
int
sbb
and
jl
lods
je
int
mov
je
inc
addr16
mov
daa
lcall
jo
cld
add
push
xchg
enter
rcr
test
push
dec
inc
loopne
add
push
mov
xor
cld
xorl
mov
in
pusha
xchg
mov
ljmp
sub
fbstp
dec
cmp
pusha
adc
sbbb
pop
jno
data16
xchg
repnz
and
aas
out
pop
pop
sub
repz
popf
or
test
xchg
lahf
add
sub
lea
xlat
fnsave
or
mov
lods
fisttpl
into
test
je
xor
push
nop
and
imul
lret
and
sub
popa
xchg
sarb
or
fdivl
movsl
shrb
fsubs
jp
lahf
lods
addr16
in
js
outsl
pop
sub
rcll
fs
cmp
xor
dec
or
sbb
mov
mov
cmpsb
nop
xchg
jnp
hlt
xchg
mov
stc
daa
lret
fildll
test
jo
jbe
fidivl
inc
mov
dec
adc
enter
add
in
inc
jns
mov
push
xor
mov
mov
lods
ljmp
xchg
jecxz
push
xchg
out
test
stos
lock
popl
std
nop
xor
notb
out
rcrl
mov
add
adc
emms
pushf
pop
fsubrs
add
xor
sub
or
mov
adc
adcb
pop
lods
pop
sahf
inc
sbb
ror
dec
sbb
xchg
mov
mov
mov
cmp
xchg
cmp
jmp
jae
dec
sbb
xlat
mov
mov
add
push
xor
mov
iret
cmpl
sbb
nop
in
inc
clc
ja
mov
in
jmp
repz
xchg
or
pop
xchg
push
xchg
inc
xchg
stos
mov
jnp
fisttpll
mov
sbb
movsb
cltd
vpsllq
dec
stos
add
sbb
adcl
arpl
mov
frndint
mov
fldt
pop
out
xchg
add
sbbl
pop
push
add
sahf
mov
stos
xchg
dec
push
int3
sub
cs
inc
push
shl
mov
sbb
fistl
mov
jne
or
push
js
ret
popa
or
loope
ss
adc
rcrb
inc
iret
and
xchg
adc
cltd
mov
ret
cmp
mov
ficoml
pushf
push
addr16
fs
shll
fsubp
in
xchg
inc
adc
xlat
lds
push
dec
subb
inc
push
ljmp
mov
in
jp
adc
mov
push
mov
xlat
icebp
mov
cmp
and
cmp
xchg
and
push
addr16
dec
data16
xor
shll
stc
insb
fcmove
mov
inc
push
inc
inc
sbb
in
in
xchg
lret
inc
shlb
pusha
cld
adc
sbbb
int
arpl
lret
jmp
in
mov
stc
je
repz
sbb
inc
das
inc
add
adc
sbb
scas
rcll
mov
push
cmp
mov
mull
das
dec
idivb
std
test
inc
mov
jmp
gs
shlb
dec
push
mov
and
xor
js
cmp
fwait
hlt
and
nop
outsl
add
in
xor
or
cmp
push
xor
mov
or
ret
pop
insb
daa
add
icebp
xchg
int
mov
insb
xlat
mov
ret
add
sbb
mov
mov
popf
imul
nop
and
push
iret
ret
jmp
jg
push
popa
addr16
leave
xor
data16
cmp
movsl
rclb
adc
or
adc
sbb
and
cmp
jp
imul
test
call
cwtl
mov
mov
and
push
lods
out
mov
xchg
and
test
dec
test
xchg
push
fisubl
fstps
sti
inc
and
mov
add
fs
pusha
cmp
mov
pop
push
stc
es
data16
xchg
add
cmp
addr16
dec
mov
test
clc
sahf
sarl
gs
push
dec
testl
fwait
nop
pop
movsb
cwtl
lock
lock
add
outsl
aas
xchg
pop
mov
pop
sar
imul
test
jg
jne
jb
add
scas
fisubrl
stos
cltd
loop
push
pop
mov
sbb
mov
loopne
add
dec
ret
pop
mov
jo
test
lock
aam
gs
adc
jo
mov
or
aad
sbb
sbb
cmpb
inc
cld
pop
jae
sbb
xor
stos
fildl
lds
xor
dec
sbb
mov
xchg
arpl
mov
adc
xlat
js
cltd
jb
fbstp
in
xchg
outsl
mov
xor
adc
mov
into
adc
pop
jl
mov
mov
movsl
subb
xor
xor
enter
sbb
fnstsw
sbb
push
in
call
dec
bound
mov
mov
imul
mov
fnsave
xor
frstor
je
and
push
mov
jae
cwtl
bound
inc
inc
inc
lock
stc
push
or
sbb
or
mov
mov
or
pop
sbb
loope
cmc
xchg
sub
push
dec
cltd
out
or
add
xchg
xchg
or
jns
xorb
jl
in
xor
xor
cmp
xchg
std
loope
js
test
xor
dec
lret
xor
out
xchg
cld
mov
movsl
ret
mov
mov
sub
int3
imul
mov
icebp
jge
sbb
imul
gs
andb
popf
ret
test
popa
push
cmp
pop
lea
xor
ljmp
adc
mov
sub
lea
dec
mov
jmp
fiaddl
pop
sub
push
gs
pop
xchg
movsl
jb
or
mov
mov
mov
stos
cmpsb
sbb
dec
repnz
or
inc
sahf
add
xchg
cld
push
fildll
fdivrl
sbb
or
les
fwait
popa
ret
adc
js
sti
push
stos
xchg
lds
sbb
mov
ds
dec
push
xor
jmp
xchg
outsl
rcl
fmull
lea
mov
mov
and
pop
lods
push
adc
pop
jmp
clc
push
dec
stos
dec
dec
add
shll
cmpsl
push
movsl
ret
adc
ds
mov
xchg
insb
es
jmp
jne
cmove
inc
cmp
or
pop
add
push
cmc
jecxz
push
add
fistpll
mov
pop
sub
stos
xchg
leave
pop
pop
xor
movsb
aad
sbb
and
mov
jl
fsts
jno
or
sub
sub
nop
repz
push
sub
mov
dec
xorl
adc
jmp
sub
in
pop
mov
fidivrs
leave
and
rorl
push
mov
adc
fstpt
cmp
cmp
nop
pop
pop
test
pop
sbb
insb
sbb
jg
cmp
xor
mov
mov
and
ret
mov
shlb
push
pop
pop
ss
push
sahf
clc
sti
xchg
lock
fidivrs
imul
into
mov
iret
pop
push
xchg
loopne
in
dec
cmc
xchg
jmp
adc
dec
jo
or
insb
loop
hlt
add
or
lfs
push
mov
push
fwait
or
xchg
das
inc
ret
adc
and
bnd
mov
fneni(8087
sbb
stos
push
add
and
fidivrs
nop
daa
xor
lcall
fstp
sub
adc
or
jl
push
and
xbegin
add
mov
mov
repz
push
pushf
dec
addb
add
xor
inc
jne
push
adc
outsl
stos
shlb
inc
sbb
add
or
outsb
in
inc
mov
stos
mov
push
mov
pop
les
mov
mov
inc
ret
test
sbb
xchg
cld
jmp
xchg
push
mov
out
fwait
add
xorl
das
pop
mov
jecxz
loopne
adc
rcrl
repz
pop
mov
jle
cmp
bound
push
loop
mov
xchg
jnp
imul
add
cld
dec
sbbb
scas
stc
pop
inc
repz
pop
push
and
insl
gs
out
push
pop
mov
adc
pop
lock
mov
sbb
cltd
stos
into
fists
push
fistps
sbbl
dec
lods
mov
mov
pop
subl
or
mov
imul
lock
fdiv
test
sub
int3
stos
jo
mov
stc
rclb
lret
and
and
xor
iret
mov
addr16
jb
xor
push
lds
add
push
mov
mov
or
jno
mov
shrb
lods
imul
test
imull
xchg
mov
xor
push
in
lcall
and
ljmp
push
or
push
dec
sbb
sbb
out
stc
enter
mov
inc
ja
pop
jo
sbb
stos
sbb
pop
and
dec
mov
inc
dec
adc
daa
pop
xor
push
mov
lcall
add
clc
adc
fisubrl
adc
adc
mov
mov
rcll
mov
sbb
mov
popf
outsb
jbe
pop
pushf
add
addr16
test
mov
test
cmpsb
pop
inc
fistl
jmp
pop
cvtps2pd
mov
lret
fcomi
dec
out
add
push
mov
push
test
mov
xchg
in
subb
dec
xor
adc
movsb
or
inc
cmpsl
negl
push
mov
sub
mov
xor
fmul
ror
icebp
pop
push
mov
xor
jg
mov
xchg
pop
jae,pn
movsb
jle
daa
xchg
in
inc
iret
cmp
into
push
bound
xchg
mov
js
popf
pop
add
dec
or
inc
fistps
pop
mov
ret
add
dec
negl
in
mov
scas
mov
jecxz
enter
pushf
mov
test
mov
or
and
xchg
cmpsb
loopne
pop
cmp
push
mov
and
mov
sub
inc
jp
sub
mov
clc
mov
fists
sub
repnz
mov
fldcw
dec
lcall
sub
xchg
decb
dec
cmpsb
test
add
sbbb
sarb
jne
gs
std
mov
add
and
pop
cmp
cmp
cmp
fs
xor
in
sti
sti
ficomps
inc
out
pop
inc
xchg
adc
in
jecxz
xchg
in
push
movsb
add
fsts
lds
inc
loopne
inc
mov
xor
jmp
test
jl
push
dec
mov
push
inc
cmpsl
fstpl
cmp
imulb
inc
pop
sub
dec
fidivrl
push
iret
jmp
dec
call
rorb
inc
movsl
nop
jmp
adcl
cs
mov
adc
sub
pop
and
sbbl
loopne
pop
jle
dec
les
push
sbb
and
xor
loopne
adc
arpl
out
outsl
sbb
xor
jne
pop
popa
xor
daa
aas
pop
pop
adc
mov
push
pop
mov
xchg
ss
and
adcb
mov
push
mov
adc
cwtl
pop
jne
mov
add
or
mov
mov
xor
sar
add
mov
lea
out
mov
jnp
dec
addr16
aaa
jnp
pop
je
push
pop
test
hlt
repnz
pop
rcll
pusha
jmp
icebp
enter
push
xchg
je
push
jmp
dec
jns
sbb
mov
sbb
dec
push
inc
xchg
sti
inc
sbb
cmp
adc
or
jg
mov
push
mov
aam
push
test
in
sub
mov
outsl
movsl
mov
imul
sub
and
lret
lret
fnsave
xchg
xor
xor
push
insb
out
insl
xchg
xchg
inc
mov
jnp
imul
or
xor
mov
stc
mov
insl
addl
cs
mov
shl
or
cmp
aad
pop
pop
sub
xchg
ljmp
ljmp
lret
mov
add
inc
addr16
dec
divb
jo
cmp
or
stos
sbb
sbb
pop
or
dec
adc
aam
test
lods
ja
mov
movsl
lcall
lcall
lret
adc
mov
jnp
les
sbb
pop
mov
out
push
je
in
cltd
cmp
call
xorb
adc
inc
insb
pop
xorb
pop
mov
xor
andl
test
lock
inc
sbb
jae
sti
int3
ss
leave
mov
int3
movsb
in
push
pop
int
cmp
divl
mov
jne
xchg
adc
adc
or
mov
inc
ret
sub
xchg
mov
nop
jmp
mov
jle
sbb
test
mov
icebp
sbb
pop
lock
and
popa
movsl
jae
dec
mov
cmp
imul
repnz
cli
cmp
inc
insl
pop
ja
div
dec
adc
mov
ljmp
xor
push
sub
loope
xchg
scas
test
je
imulb
add
jae
ds
es
add
outsb
mov
xchg
icebp
jl
xchg
cli
pop
insl
mov
pop
push
cmp
pop
and
fmuls
fwait
mov
out
mov
outsb
mov
loope
cltd
pop
jnp
daa
cli
aad
inc
inc
xchg
shlb
xor
leave
insl
xbegin
dec
jmp
insb
popa
ror
sbb
cwtl
data16
push
push
adc
pop
inc
sub
in
fs
das
ja
push
xor
add
mov
cmp
dec
faddl
mov
gs
xorb
clc
sbb
aam
data16
adc
sub
mov
xor
mov
pop
stc
ret
popa
imul
mov
jbe
scas
inc
lods
gs
cmp
dec
ror
xchg
mov
bound
ds
test
push
xchg
mov
call
and
arpl
mov
lahf
jbe
and
xchg
mov
jg
imul
sub
imul
jno
mov
cmp
fst
mov
or
jmp
mov
jns
sub
xor
jo
sahf
sub
add
scas
out
xlat
cltd
lahf
xlat
dec
and
jno
mov
mov
pop
mov
movsb
xchg
je
vmulps
mov
mov
sub
les
fs
mov
push
jmp
daa
into
ja
jno
fidivs
idiv
mov
push
scas
mov
xor
jbe
idivl
or
jle
mov
inc
mov
into
pop
jp
es
add
scas
push
icebp
xchg
inc
nop
in
pop
adc
adc
lret
and
sbb
pop
imul
shl
sbb
xor
xor
scas
adc
mov
gs
mov
imul
xchg
jp
arpl
cli
test
mov
cmp
pop
add
xor
sbb
push
pop
mov
dec
sarl
fwait
int
dec
cltd
and
rorb
add
lds
inc
test
lret
mov
cld
out
dec
push
repnz
stc
sahf
mov
lds
mov
stos
mov
sti
mov
add
mov
inc
mov
es
rorb
cmp
jecxz
jp
or
mov
xorb
sti
pop
out
xor
lret
cmpsl
or
and
mov
cs
jmp
es
mov
xchg
jmp
stos
out
sub
outsl
mov
cmp
mov
jg
sub
push
jne
js
dec
sti
pop
pop
or
jo
cmpl
popf
jne
push
outsb
xchg
xchg
clc
sub
add
insl
std
les
cmp
nop
into
push
sti
xchg
dec
sub
push
dec
mov
cmpsl
jge
imul
lock
mov
jmp
mov
sti
xor
fistl
cmp
repnz
rcrl
scas
bound
pusha
push
mov
jne
xchg
daa
insb
jo
jne
push
fildll
fs
inc
iret
push
sbb
or
xlat
pop
push
clc
jg
add
fs
xor
pop
sbb
shll
inc
and
or
add
jne
push
cmp
mov
push
xchg
int3
out
inc
push
add
mov
test
push
jbe
ss
jle
pop
sub
mov
mov
mov
cmpsl
push
adc
push
pusha
sub
or
sub
es
mov
and
fwait
mov
sar
stc
xchg
fsts
sbbl
dec
jecxz
lret
fdivs
rclb
lahf
sub
xchg
push
rclb
lods
adc
add
dec
imul
cmp
loope
out
out
gs
push
mov
adc
mull
shlb
and
popf
popf
pop
cs
lret
lock
test
cmpsb
jo
xlat
inc
call
mov
rolb
and
dec
mov
and
lret
adc
mov
test
xchg
out
mov
rcrb
push
inc
dec
ret
jns
jb
jp
sti
inc
cmp
bound
cmp
sub
fwait
imul
mov
add
fnstcw
into
loope
inc
orl
push
mov
mov
test
mov
and
xor
dec
dec
insl
lea
shrb
mov
jecxz
and
lret
stos
xor
minps
pop
add
test
xchg
popf
xchg
xchg
pushf
inc
sti
lock
out
cs
add
mov
dec
sti
jecxz
gs
pop
fidivs
and
xor
stos
sbb
sarl
rorl
mov
xor
and
out
aas
cmpsl
xchg
out
dec
pop
mov
pop
test
mov
mov
sbb
inc
js
xchg
orb
cmp
aas
dec
push
lahf
jecxz
mov
icebp
jo,pt
push
icebp
sbb
test
dec
pop
or
clc
push
mov
cmp
or
nopl
pop
scas
xor
pushf
mov
rorl
jnp
fimuls
xchg
arpl
cmp
sahf
fdivr
sub
scas
sbb
and
cld
sub
xor
xor
sbbb
rcll
pop
adc
sbb
lahf
lds
push
test
incl
arpl
sub
test
mov
add
mov
dec
int
mov
movsb
jb
roll
add
fs
sarb
in
iret
jb
dec
outsl
and
jno
ljmp
xor
ds
or
push
xchg
xor
arpl
mov
repz
inc
popa
into
es
repz
mov
aad
or
add
jbe
lcall
mov
int3
add
cmp
mov
lods
hlt
fnstcw
daa
mov
mov
pop
dec
movsb
xor
in
adc
xchg
push
mov
out
or
jge
aaa
rorl
add
and
ss
dec
outsl
push
aas
pop
adc
imul
mov
int
rol
cmp
or
push
push
xchg
xor
add
fwait
lcall
xor
xchg
push
cmp
je
xchg
fimuls
mov
dec
pushf
pop
and
lods
out
jmp
mov
in
popa
xchg
or
or
ret
pop
mov
inc
pop
pop
xorl
js
aam
rclb
or
gs
sub
jle
and
imul
mov
mov
cltd
push
sbb
iret
xor
jge
jno
push
into
jl
test
nop
shrl
jbe
pushf
mov
jo
jnp
lret
sahf
and
cmp
cmp
push
push
out
xor
mov
adc
in
cmp
hlt
les
jnp
addr16
sub
scas
adc
cmc
mov
je
aam
test
push
mov
or
mov
mov
xchg
hlt
pop
je
clc
xchg
das
imul
cmp
pop
scas
sbb
inc
test
aad
and
lret
std
dec
fildll
xor
sbb
in
or
push
out
adc
repz
ljmp
jns
adc
mov
pop
imul
enter
das
lods
inc
sub
addr16
jmp
pop
jl
xor
enter
xchg
push
push
aaa
xchg
rclb
push
sbb
add
jge
faddl
pop
repz
sti
fiadds
inc
repnz
xchg
add
jnp
jmp
call
cmc
sahf
mov
cli
lods
dec
mov
imul
cmp
jle
inc
ds
test
mov
aam
add
outsb
js
hlt
or
jo
sbb
add
leave
mov
xorl
loope
stos
ljmp
dec
cmp
sub
and
or
mov
mov
ffree
ljmp
add
xor
jno
cmp
shlb
js
jg
add
dec
and
int3
mov
xchg
jbe
fidivs
push
mov
dec
nop
xlat
scas
fisubrs
xor
idiv
movsb
dec
loop
inc
decl
flds
mov
mov
mov
insb
outsl
lea
aad
popf
aas
lret
cmpl
mov
outsb
cmp
add
aaa
sub
aas
ret
ljmp
call
xadd
js
cmp
imul
cmp
xchg
je
outsl
leave
sub
cmp
repnz
in
popf
inc
rolb
mov
push
lahf
daa
lret
mov
fldt
fbld
mov
jne
repz
lahf
orb
pop
and
mov
push
mov
in
mov
xchg
or
daa
mov
pop
cli
mov
mov
dec
lahf
shrb
fistpll
mov
int
add
push
outsb
in
add
sub
fstpl
push
mov
push
sub
adc
and
test
mov
xorb
stos
out
sti
pop
pop
and
aaa
je
cmpsb
mov
and
cmp
stc
push
or
cli
cltd
enter
subb
jbe
jnp
cmp
mov
xchg
pop
fadds
mov
les
push
incl
mov
sub
imul
enter
insb
sti
ret
lds
jo
in
xchg
fcoms
push
sarb
sbb
pop
sti
mov
bound
idivb
test
mov
inc
into
sti
jp
pop
stos
inc
xchg
repnz
faddl
pushaw
cs
mov
sbb
fstps
or
fiaddl
push
adc
nop
push
test
mov
outsb
into
pop
ja
xchg
arpl
push
test
mov
dec
enter
insb
repnz
lahf
push
mov
mov
call
aaa
sbb
cld
rcr
rol
ja
lahf
push
cmp
mov
mov
push
loope
inc
inc
xchg
sbb
es
inc
push
rorb
pop
jge
push
jae
fs
push
mov
outsb
outsb
jle
mov
xor
and
mov
add
jae
aad
sub
shll
mov
pushf
push
mov
mov
leave
mov
popf
mov
adc
jecxz
mov
les
test
cmp
jb
push
adcl
das
and
jl
rorl
jl
mov
cwtl
imul
sub
arpl
jle
pop
cmp
inc
xor
mov
rcr
jp
enter
out
test
mov
push
clc
int3
jmp
xchg
bound
es
iret
fwait
sub
sub
dec
gs
in
adc
pop
mov
popa
mov
mov
mov
sub
dec
jp
ds
cld
icebp
or
cmpsb
sarl
repz
fstpt
and
xchg
shr
dec
mov
lea
mov
ss
xchg
scas
out
aaa
out
sub
fsubr
sub
test
push
jbe
test
mov
inc
jp
cmp
mov
int3
xchg
cmpl
out
mov
push
adc
fdivrl
sub
xor
pop
inc
ds
lret
cmp
sub
std
push
lea
gs
xchg
pop
jo
jle
fsub
clc
xor
xlat
pop
pop
xor
fldl
adcb
pop
pop
inc
popa
sub
test
mov
nop
aam
add
pop
mov
inc
pop
lds
cmp
mov
rcrl
aaa
jbe
rol
popa
popa
jmp
pop
rorl
mov
cmpsl
push
mov
pop
dec
out
js
cltd
jl
inc
jg
sbb
popa
jno
pushf
mov
adc
aam
add
cmpb
int
repz
in
adc
mov
iret
dec
fisttpll
jne
xor
in
rolb
repnz
dec
mov
mov
clc
in
push
in
mull
daa
push
mov
out
sbb
cs
jnp
in
clc
pop
loopne
shll
adc
jae
sbb
cmpsb
xchg
mov
push
or
jb
fcoms
fisttps
ffree
rcll
dec
sbb
cld
scas
pop
inc
hlt
punpckhdq
mov
dec
sbb
les
push
pop
sbbl
pop
fdiv
faddp
mov
push
or
mov
sbb
insb
stos
popa
dec
push
dec
mov
jne
repnz
sub
xor
outsb
into
stos
insb
call
push
xlat
xchg
in
je
ljmp
dec
jbe
retw
fisttps
aas
cmpsl
gs
mov
pop
mov
jbe
cmp
inc
scas
adc
popl
aas
xchg
mov
and
movb
popa
mov
push
mov
ret
fldl
inc
xor
push
in
dec
add
lret
jle
mov
imul
xorl
dec
test
mov
cs
lods
and
sarb
jnp
les
cli
add
adc
pop
icebp
js
leave
push
pop
dec
adcb
fildll
fdivrs
subb
push
in
cli
out
lods
aas
js
lahf
shlb
mov
and
int3
rcll
xchg
dec
hlt
push
sbb
cmp
cli
stc
cmp
sub
outsb
fsubrp
adc
and
pop
push
jb
ret
sub
sbb
jmp
mov
loope
hlt
ficoml
orl
pop
adc
fsubrl
in
jecxz
in
test
pop
lea
or
addb
imul
pop
mov
push
add
push
inc
repz
inc
xor
movsl
or
add
mov
push
cmp
jb
aas
daa
or
test
aam
icebp
test
cwtl
mov
xchg
add
fs
sub
and
aaa
arpl
mov
lds
stc
test
cmp
mov
pushf
pop
mov
jne
inc
mov
fisttpl
jbe
cmpsb
ss
rcrl
aaa
adc
lret
add
shrb
or
out
lods
idiv
shr
push
sub
jnp
insl
aam
dec
adcl
fstpt
in
sbb
xchg
or
insl
push
popf
add
push
pop
pushl
scas
shll
mov
mov
ffreep
pop
mov
fs
pop
add
lret
lret
push
cmp
and
jmp
sbb
mov
imul
mov
frstor
mov
nop
dec
sub
stc
orb
dec
hlt
add
sahf
adc
sbb
shr
push
jge
outsl
xor
sub
pushl
pop
mov
movsl
cs
stc
fsts
lods
fs
roll
mov
mov
nop
inc
dec
sub
cmp
jno
cwtl
in
mov
dec
xchg
lods
xorl
sbb
js
dec
outsb
add
sarl
cmp
sbb
cld
movsl
jnp
imul
sti
fdivrs
xchg
lcall
xchg
out
adcb
popf
xchg
and
movsb
sahf
xchg
add
lods
sbb
or
aas
push
mov
xchg
arpl
cmp
and
mov
xchg
outsb
adc
lret
inc
cmp
mov
mov
mov
sbb
cmp
pop
cmp
outsb
std
jo
inc
jl
cmp
sub
add
inc
int3
jge
test
leave
push
jp
fwait
inc
mov
sbb
ljmp
inc
ljmp
fistpl
dec
arpl
adc
cli
cmp
lret
int
mov
stc
dec
push
stos
ja
and
ret
cmp
mov
rclb
in
sub
inc
inc
xchg
insl
loop
fstpt
cmp
scas
or
sbb
test
jmp
mov
out
out
in
lds
out
inc
xchg
adc
outsl
lods
mov
push
pop
call
inc
mov
push
mov
movsl
aaa
dec
in
and
xchg
out
ret
int
je
iret
cmpsl
xorl
outsl
gs
lahf
rcr
pop
pop
mov
stos
xlat
pop
push
mov
xchg
arpl
dec
sub
adc
loop
ret
repnz
arpl
mov
pop
mov
inc
nop
mov
push
mov
sub
imul
out
test
in
xor
test
xchg
ja
movsl
das
push
cmpsl
test
mov
cmp
in
lret
jmp
dec
int
push
mov
lock
mov
stos
jo
bound
sti
inc
pop
aaa
push
pop
mov
fiaddl
pop
sub
sbb
adc
add
add
nop
xchg
xchg
inc
push
cli
inc
pop
pusha
mov
jo
jl
mov
lock
mov
mov
push
add
sub
push
xor
and
aad
xor
mov
inc
cs
imul
cmpsb
xchg
bound
inc
mov
mov
pusha
mov
mov
push
in
and
in
arpl
push
lds
sub
pop
ljmp
sahf
insb
mov
not
xchg
pop
call
int3
mov
xchg
inc
jno
and
dec
inc
jmp
fsubrs
push
sbb
jecxz
xchg
push
xchg
pop
cmpsb
dec
leave
stos
xor
shlb
cmp
popf
cmc
adc
push
and
push
inc
push
adc
sbbb
pop
divl
dec
lods
ret
inc
mov
rol
dec
stos
mov
in
out
sti
pop
dec
ficompl
sahf
test
test
lds
fisubl
dec
into
fldl
leave
loope
int
lcall
in
inc
xchg
call
xchg
adc
inc
cmp
push
imul
jns
adc
daa
out
fnstsw
and
xor
call
jne
sub
mov
cld
cmp
andl
mov
ss
sub
stos
mov
mov
pop
push
fiadds
dec
push
lods
movsb
ja
ja
jmp
dec
fsubr
mov
xchg
mov
mov
leave
pop
xor
movsl
hlt
popf
adcl
dec
add
test
aaa
movsb
inc
and
sti
mov
imul
cmp
xchg
push
adc
sti
cmp
add
rorb
test
jno
mov
insl
aam
and
mov
xor
stc
cmp
push
vorps
jae
lea
xor
cmpsl
movsl
pop
and
mov
pop
in
push
jno
mov
lahf
scas
cmp
popf
scas
out
mov
fistl
pop
mov
pop
mov
mov
jl
fstl
js
push
rclb
adc
mov
es
dec
pop
sub
fiaddl
mov
outsb
movl
xlat
cld
or
addr16
movsl
pop
adc
and
jmp
and
xor
outsb
inc
sti
adc
lret
hlt
fsubs
add
addr16
sub
lds
or
shr
cmpsb
test
subb
in
xchg
pop
jmp
inc
jg
inc
gs
add
and
pusha
or
lea
in
hlt
shlb
lcall
cmp
rcl
scas
mov
pcmpgtw
inc
xchg
mov
push
hlt
js
pop
push
lds
mov
iret
mov
sub
dec
in
sar
lcall
leave
cmc
push
popa
and
lds
mov
pop
mov
jg
xchg
cmp
sub
mov
cmp
mov
dec
push
xor
or
inc
mov
lock
or
popa
sub
mov
sub
and
test
push
adc
mov
les
pop
shlb
pop
jae
iret
xchg
inc
adc
lret
sub
inc
data16
and
int3
jg
mov
jge
fsts
cmp
inc
xchg
sub
out
je
jp
add
add
mov
mov
fcos
and
fsubrs
int
sub
pushf
rcrl
mov
push
insl
nop
lret
jo
sub
mov
pop
sub
mov
cmp
adc
jno
adc
push
jg
sub
xchg
jmp
aas
insl
pop
mov
jp
mov
test
pop
mov
push
into
adc
fsubr
jbe
pop
push
adc
lds
mov
hlt
dec
adc
sbb
inc
out
scas
cmc
dec
mov
sar
cmp
sbb
xchg
cmp
jae
ljmp
cltd
pop
movsb
mov
jmp
sbb
outsl
sbb
out
mov
decb
adc
xchg
dec
mov
lret
ss
filds
cmc
lods
arpl
add
cwtl
xchg
and
in
call
xor
mov
stc
outsl
sbb
pop
push
jmp
nop
and
test
push
movsb
and
or
sub
add
add
cmp
jb
pop
pop
les
fidivrl
sub
mov
xor
add
push
xchg
mov
test
adc
push
xchg
adc
cmp
xchg
out
push
ja
ljmp
mov
je
cmp
fadds
mov
aam
stos
test
cmpsb
push
mov
sbb
add
test
adc
loopne
jb
pop
mov
js
mov
andb
mov
mov
inc
dec
fcompl
dec
push
mov
sbb
jb
repz
inc
call
fadd
xor
les
jle
sub
or
sub
fbstp
push
aad
mov
mov
add
push
insb
fildll
call
pop
imul
sbb
cli
adc
inc
xchg
pop
pop
xchg
call
jns
into
or
mov
loop
jne
sti
inc
int3
lcall
mov
lret
pop
sahf
sbb
and
push
pop
decb
daa
fsubrl
shl
and
add
mov
lds
and
push
fwait
inc
loope
add
xlat
or
xchg
insb
hlt
adc
fisubl
and
flds
xchg
iret
xor
scas
not
mov
cmpsb
clc
lods
mov
push
mov
push
inc
inc
adc
and
xor
hlt
mov
ds
test
cs
out
js
add
test
outsb
movsl
std
cli
ss
or
sub
test
adc
loop
mov
out
lret
adc
add
mov
popf
or
push
fisubrs
pop
and
inc
add
xor
rcr
mov
mov
cmc
jae
out
std
adc
jae
ret
addr16
pop
xchg
mov
mulb
test
mov
xchg
mov
xor
icebp
mov
outsb
pop
jne
mov
repz
or
inc
push
movsb
or
fnstenv
clc
cmpsb
sbb
into
inc
call
insb
jae
pop
sarb
xor
and
adc
insb
daa
mulb
sub
dec
xor
jno
mov
mov
cld
movsl
je
lock
aad
call
gs
sbb
je
adc
nop
pop
lds
adc
fimull
xlat
mov
int3
rolb
scas
jp
addr16
push
out
mov
jle
push
push
xor
pusha
sub
cs
pop
inc
push
jo
sbb
insl
push
pop
xor
mov
mov
pop
or
add
add
and
lods
and
mov
sub
daa
jmp
push
aaa
loopne
cmp
pusha
mov
je
inc
sbb
sub
and
mov
pop
and
std
movsb
jno
pop
lret
in
push
lret
mov
mov
cmc
cs
aaa
into
cmpsb
xor
icebp
mov
icebp
aas
sbb
out
fst
cmp
cli
arpl
gs
xchg
or
mov
xchg
pusha
push
in
jb
loopne
and
mov
mov
jne
jle
mov
cltd
cwtl
addb
or
sub
sarl
es
pusha
jbe
pop
inc
push
testb
dec
pusha
mov
sbb
sub
cmp
cmp
jo
add
lcall
jp
outsb
push
outsb
lret
fidivrs
xchg
mov
iret
das
dec
idivl
and
push
shll
xor
pop
xchg
pop
pusha
cmp
and
movsl
push
into
mov
adc
nop
dec
push
mov
jbe
dec
test
insb
shlb
sbb
mov
fucomp
sub
or
push
movsl
cli
push
inc
and
pop
cmp
ret
mov
pop
mov
or
pop
filds
push
cmp
loope
sub
dec
and
mov
push
push
std
add
cmc
cs
inc
sbb
push
jnp
fdiv
jle
mov
lock
push
add
and
mov
aam
lock
das
xchg
push
sbb
scas
inc
insl
lds
push
scas
int
pop
hlt
int
fwait
pop
cmp
aas
icebp
nop
xor
xor
xchg
add
cmpsl
rep
mov
jle
cmpsb
push
sbb
mov
or
xchg
push
xchg
sbb
xchg
add
or
dec
outsl
mov
jno
sub
xor
xor
sub
pop
pop
and
stos
insl
insl
add
out
xor
mov
inc
push
sbb
sub
mov
orl
push
loop
test
jo
xchg
fs
gs
cwtl
shrl
test
mov
addr16
pop
cmp
mov
addb
sbb
arpl
xlat
cmp
or
mov
shll
cmpsb
repnz
jp
mov
push
fcoml
repz
pop
or
inc
pop
adc
mov
inc
out
addr16
xchg
sahf
flds
inc
adc
cmp
pop
repz
aam
jne
es
daa
mov
rcr
add
ret
push
inc
add
into
loope
fimull
dec
mov
xor
pop
sub
sbb
add
inc
stos
cmp
lahf
add
cld
mov
sub
in
dec
jmp
or
imull
add
shrl
movsb
xchg
dec
filds
ss
mov
mov
loopne
stos
mov
mov
bound
testl
inc
inc
cmpsl
xor
enter
xor
inc
fldt
xchg
shll
lea
stc
loope
mov
adc
jno
int
clc
cwtl
es
daa
gs
inc
xorb
add
int
movups
add
sbb
arpl
mov
sub
adc
cmp
cmp
mov
das
out
lahf
xor
and
push
xchg
mov
int3
fists
sub
leave
or
xchg
or
fimull
pusha
hlt
and
mov
jae
sbb
daa
dec
mov
pushf
cmp
inc
xor
sbb
mov
cpuid
pop
or
scas
cmp
icebp
or
shll
adc
push
sahf
push
cwtl
stc
enter
adc
or
add
lcall
shll
lea
xor
outsb
fadds
adc
mov
jp
dec
adc
dec
in
daa
lea
loop
push
inc
arpl
insl
pop
loope
and
cli
or
cmp
push
push
mov
ja
imul
xor
fildll
jns
adc
and
jle
outsb
push
mov
shr
push
mov
pop
movsb
pop
mov
xchg
jo
pop
push
cmp
stos
push
cmp
push
mov
mov
or
data16
sbb
sub
mov
pop
pop
ficoml
pushf
adc
jg
fnstsw
js
push
int
jnp
jle
mov
push
or
imul
xchg
stc
jle
jle
jno
pop
jge
out
cmpsb
xorb
jns
xchg
imul
fimull
jle
or
mov
ficoml
lcall
mov
jmp
cmpsb
lods
hlt
test
data16
add
fnsave
pop
jbe
cmp
mov
out
add
lods
xlat
mov
js
fisubl
adcb
hlt
sbbb
iret
leave
les
mov
xor
push
sti
repz
push
or
inc
divb
xchg
push
inc
sub
rcr
inc
push
xchg
shlb
outsb
aam
mov
sub
dec
dec
fidivrl
dec
loop
pushf
cs
or
inc
push
fst
je
xor
cmp
insl
sub
xchg
test
dec
test
mov
repz
dec
cli
popf
fldl
xchg
fldcw
jno
xchg
adc
in
cmp
pop
sbb
mov
stc
jle
repnz
xor
cltd
xor
aas
pop
mov
data16
test
lds
rorl
jnp
stc
sahf
dec
pop
xchg
in
sbb
inc
insl
fdivr
inc
adc
inc
inc
xchg
ret
and
ja
inc
mov
orb
xchg
sbb
lods
jle
adc
push
bound
jl
out
dec
xchg
shl
sub
test
or
and
mov
aam
or
mov
mov
lods
sbb
and
adc
outsb
xchg
ret
sbb
out
cmp
cmpsl
xor
add
jnp
iret
add
or
lret
ss
add
add
int
mov
not
dec
mov
sub
mov
fs
aam
arpl
test
loopne
lock
mov
sbb
int3
jmp
rolb
arpl
add
sbb
int3
rcl
cli
les
mov
sbb
dec
sub
mov
sub
rclb
lret
inc
repnz
lock
loop
sbb
testb
or
aad
mov
mov
in
jl
mov
push
ja
aaa
iret
or
iret
adc
fcmovu
xchg
sti
inc
mov
pop
imul
imul
loope
in
andl
jle
or
int
pop
mov
sub
in
lds
movb
and
jbe
jecxz
dec
or
mov
sbb
insb
xlat
sbb
stos
cmpsb
push
inc
adc
sbb
in
loopne
aaa
gs
add
loopne
jge
pop
data16
xchg
xor
and
sti
jb
pop
mov
sahf
dec
scas
std
sbb
fisttpll
mov
add
ret
movsb
cli
into
sub
loop
dec
jb
mov
dec
arpl
adcb
mov
out
test
icebp
sbb
std
xor
rcll
test
inc
out
dec
sbb
adc
movsl
inc
bound
xchg
or
lock
cmp
mov
or
enter
push
adc
fcomi
adc
mov
adcl
sub
sahf
mov
jbe
cld
xchg
mov
jnp
jns
cmp
sub
jg
aas
mov
pop
sbb
inc
jg
dec
scas
daa
jne
push
pop
mov
inc
dec
inc
push
fnstenv
hlt
into
fistpl
je
xchg
in
iret
add
sub
inc
push
xchg
mov
jg
repz
cmp
mov
dec
add
and
in
cmpsl
sbb
add
cmpsl
pop
sbb
clc
int
jecxz
inc
mov
pop
jp
lcall
andb
dec
mov
adc
or
lea
stos
lcall
mov
cmp
mov
ret
dec
and
sti
popa
subl
cmp
insb
stos
jle
cmp
lret
pop
in
les
and
in
pop
pop
int
aam
pop
xchg
add
je
adcb
lret
dec
insb
out
jnp
cmpb
jb
pushf
cmp
repnz
sti
mov
and
fistpll
inc
cmpsb
fistpll
jb
jg
push
add
add
repz
cmp
out
or
enter
add
test
dec
sahf
sbb
or
xchg
or
je
cmp
mov
mov
cmp
dec
jnp
jb
shll
and
adcb
hlt
lea
pushf
js
add
or
xchg
push
in
repnz
into
xlat
int
or
push
test
mov
push
lods
adc
sbb
les
clc
in
dec
inc
inc
xchg
repz
inc
stos
cmc
cmpsb
ds
je
loopne
inc
sti
fsts
inc
mov
sbb
mov
add
mov
imul
xchg
jo
js
jmp
test
fisubl
adc
fs
je
insl
cli
rcrb
fsubrp
jle
cmpsl
fisubrs
jae
lret
push
jne
in
mov
mov
push
or
sub
sbb
and
sti
movsl
mov
gs
push
mov
pop
insl
adc
mov
lock
jl
in
fnsave
shl
stc
insl
addr16
scas
jno
sti
mov
add
imul
push
repz
adc
stos
jne
xchg
jae
shll
nop
cltd
pop
push
add
inc
sbb
mov
dec
es
mov
dec
or
popf
ss
mov
ljmp
gs
sahf
inc
seto
fwait
ss
push
xchg
and
pop
sbb
mov
movsl
andb
adc
mov
adc
cmp
push
mov
rclb
fsubl
jae
les
jnp
test
mov
mov
jo
push
fcoml
shll
in
pop
mov
pop
sub
and
addr16
jl
mov
aas
sbb
add
seto
mov
shrb
inc
sub
stos
jmp
cmpsl
push
ljmp
cmpb
mov
fucom
in
ss
inc
jle
jl
stos
mov
idivl
mov
loop
mov
movsb
mulb
out
rcrl
push
mov
cmpl
cmp
add
lods
push
dec
xchg
adc
in
sub
rorb
js
ret
loop
aad
enter
push
dec
and
fisttpll
sbb
sbb
or
mul
cmc
faddl
jmp
aaa
xchg
aad
mov
cmp
divl
in
mov
das
or
xchg
mov
imul
mov
or
orb
enter
xor
xorl
les
pop
mov
inc
out
push
jmp
cmp
push
jp
or
sbb
xor
fisubl
and
mov
jmp
pop
fists
subl
sub
loope
dec
xor
lcall
xchg
arpl
sub
inc
imul
mov
jle
sbbl
stos
stc
xchg
mov
sbb
add
test
dec
jbe
lret
jge
xlat
lret
pand
xchg
and
add
push
outsl
lods
icebp
ds
daa
pop
mov
das
sbb
insb
push
aam
dec
test
loope
jnp
push
fs
testb
test
pushf
stos
sti
adc
ja
repnz
or
mov
sti
stos
arpl
enter
iret
ja
std
dec
jle
pop
push
xor
in
mov
xchg
das
push
cmpsl
xchg
call
dec
add
xchg
dec
xchg
into
callw
repnz
dec
xor
pop
stc
inc
shll
inc
adc
mov
and
rolb
cli
or
lods
cs
jmp
adc
sti
inc
dec
sub
leave
outsl
rcl
aam
sbb
out
inc
hlt
faddp
add
inc
mov
jp
inc
adc
aas
push
xchg
xchg
retw
es
cld
xor
xchg
adc
aas
movsl
xor
jbe
cltd
dec
sti
and
pop
clc
xor
fbstp
and
lret
mul
mov
subb
adc
sub
jnp
xchg
pop
inc
insb
dec
stc
add
or
or
fidivrs
and
jne
inc
cmp
mov
or
mov
pop
push
cld
ljmp
push
xchg
mov
push
loop
push
das
addl
push
cwtl
jg
dec
test
or
pushf
cltd
jge
lock
imull
hlt
sbb
dec
loop
cld
push
in
inc
in
mov
push
or
repz
dec
mov
xchg
inc
cmp
sbb
outsl
add
stos
mov
mov
fisttpll
jbe
mov
repnz
pop
icebp
aas
xchg
cltd
pusha
pusha
fisubrl
leave
and
sti
in
jns
push
js
bound
pop
imul
jmp
idiv
inc
mov
add
outsl
arpl
mov
test
cs
leave
jmp
frstor
cltd
or
adc
call
fsubr
jne
jnp
sbb
leave
es
mov
and
enter
cmpsl
aad
cmp
sbbl
pop
xlat
lods
pop
cmp
pop
js
nop
dec
rcr
or
cld
pop
push
sbb
lock
inc
cmp
lds
test
fidivrl
pop
or
stos
push
xor
int3
push
xchg
lea
add
int
stos
les
pop
mov
and
sub
and
iret
pusha
sarl
xor
dec
push
std
xchg
push
push
sbbl
and
adc
jge
inc
cmp
in
nop
cwtl
sbb
scas
jmp
ds
fcmovnu
scas
popa
mov
sti
mov
lock
and
ret
mov
add
push
repz
mov
sti
jns
inc
inc
pop
pusha
mov
add
call
data16
xor
popa
sub
dec
xchg
cmc
push
mov
psrlq
mov
xor
test
xchg
stos
mov
out
std
jns
out
test
in
ja
sub
mov
xchg
pop
xor
rolb
loop
jo
mov
adcl
and
adc
je
movsb
movsb
or
jmp
lods
enter
push
fcompl
mov
mov
fwait
cmp
pop
shll
sbb
mov
cmc
aas
fyl2x
lea
jg
or
xor
shrb
lea
xchg
nop
push
jo
insl
stos
jb
sub
sbb
cmp
xor
dec
or
cmpsb
aam
dec
fwait
and
fistps
mov
into
hlt
out
fdivr
ljmp
cld
lret
or
gs
lcall
xor
xchg
enter
and
inc
stos
int3
sub
xor
les
add
xor
adc
xor
cmp
pop
iret
mov
ja
in
repnz
pop
mov
inc
xchg
pushl
adc
cs
jbe
push
or
fiadds
test
cli
add
cmpsb
aaa
sub
shrl
add
mov
mov
cmp
mov
dec
and
sub
or
jnp
mov
fists
sub
pop
repz
popf
pop
cmp
fnsave
sbb
ss
pop
rcll
lcall
inc
push
adc
cmpl
cmovo
pusha
rcrb
idiv
loopne
sub
aaa
neg
jno
inc
popa
cltd
dec
mov
inc
pusha
jbe
push
shr
test
in
mov
fxch
cmp
push
pusha
xor
stos
fists
xchg
jg
adc
add
jo
and
push
pop
shlb
or
loope
in
lods
xchg
scas
aaa
add
inc
mov
shll
aas
ret
dec
inc
xchg
add
pusha
and
subl
fwait
or
mov
rsm
into
or
js
cltd
stos
fs
stos
add
push
mov
mov
addb
xchg
sbb
call
sbb
fiadds
xchg
mov
jge
dec
xchg
mov
inc
xor
jmp
inc
and
inc
mov
lds
cwtl
mov
sbb
push
add
sub
cmp
clc
jle
ret
push
or
faddl
insb
jno
adc
and
lret
subl
test
clc
inc
stc
jmp
clc
repz
or
iret
xchg
sbb
mov
jno
add
clc
aam
cmp
insl
cmp
mov
int
and
rorl
sub
mov
cmp
inc
mov
or
jo
out
dec
jne
xchg
inc
mov
imul
inc
inc
aad
pop
jbe
les
fadds
imul
inc
inc
adc
out
lock
lret
push
aaa
xchg
xor
ja
aas
xchg
mov
jg
rclb
mov
movsl
in
dec
je
subl
add
test
sbb
jmp
or
imul
sahf
push
dec
mov
mov
or
sub
je
push
fdivl
loop
iret
xchg
movsb
push
std
out
cmp
sti
adcb
add
insb
out
insb
sti
bnd
xor
lods
cmpsb
add
mov
mov
outsl
cmp
mov
adc
data16
ja
push
sbb
xorb
fnclex
mov
mov
les
sbb
outsl
leave
inc
les
dec
sub
xchg
fcomps
inc
adc
jns
pop
xor
cmp
pop
fwait
test
mov
cmp
add
faddl
rcrl
adc
adc
mov
rcrl
mov
jg
ret
mov
jae
push
push
adc
bound
out
shlb
fldenv
roll
fwait
push
test
mov
dec
jecxz
push
sbb
dec
lods
scas
push
fadds
shrl
notb
dec
lcall
into
and
test
scas
cmpl
in
movsl
out
adc
aaa
mov
pop
out
xchg
cwtl
add
nop
jnp
push
insl
xor
daa
jmp
jno
popa
mov
adc
xchg
inc
cmpsb
sub
inc
notl
dec
test
fwait
call
cli
push
fwait
add
aas
or
mov
inc
lret
aad
out
jne
mov
ret
mov
repz
push
inc
pop
sub
sbb
in
leave
push
in
xchg
pop
sub
cmp
adc
out
mov
mov
gs
mov
sbb
test
push
push
stos
movsl
iret
and
push
sub
dec
insl
xor
roll
xchg
pop
scas
dec
cli
fdivl
inc
push
loopne
inc
daa
shlb
inc
push
gs
and
in
rcrl
imul
stos
sub
shlb
loopne
jl
jge
pop
das
sub
cs
or
loope
cs
jecxz
lret
stos
cli
in
rorb
jg
dec
dec
cld
hlt
loope
or
mov
mov
mov
rorb
dec
xchg
jge
mov
movsl
push
adc
jnp
lret
cltd
scas
loopne
fcomi
adc
outsl
pop
push
and
pushf
inc
jne
shl
mov
sbb
mov
scas
and
and
loop
mov
cmp
aas
jmp
push
test
inc
test
sbbl
icebp
ljmp
mov
mov
jno
add
test
shrl
sub
repnz
into
inc
mov
pop
xchg
sarl
sub
xor
mov
xor
adc
mov
dec
lahf
repz
clc
cmp
pusha
jle
shlb
test
dec
push
lcall
and
aas
and
psllw
jne
adc
les
lret
jge
inc
subb
adc
push
mov
out
jmp
imul
mov
jns
rcll
push
pop
xor
aam
sub
adc
test
lock
jo
or
jle
adc
call
xchg
inc
xchg
std
mov
ret
push
hlt
dec
jecxz
out
addr16
lods
adc
aam
imul
push
sub
mov
or
jns
and
cmp
jl
push
inc
sub
jg
andl
and
mov
movsb
push
mov
jnp
pop
mov
stc
cmp
cltd
nop
jecxz
dec
dec
imul
ljmp
clc
int
sub
inc
lret
lcall
push
cmp
sbb
mov
mov
es
and
dec
jg
pop
fs
xor
imul
hlt
add
iret
iret
lret
dec
leave
mov
cltd
xor
pop
add
ljmp
shrb
xlat
mov
mov
mov
mov
push
cmc
xor
mov
jmp
fwait
cli
xorl
stos
sbb
jno
mov
insb
mov
aaa
jle
test
pop
ljmp
push
std
push
and
and
cmp
lea
je
fdivrs
lcall
outsl
inc
hlt
mov
add
ljmp
into
mov
fcmovnbe
lods
ja
cmp
shrl
inc
sbb
mov
cmp
movsl
xor
pop
mov
outsl
mov
xor
or
jge
mov
rcrb
sti
xor
cmp
loopne
adc
sbb
pushf
jge
f2xm1
shll
dec
popf
jo
pop
jb
or
movsl
ds
lret
nop
jnp
mov
popf
jmp
xchg
xor
mov
js
cli
sub
dec
fcomps
ja
pop
lds
lretw
mov
jb
insb
cwtl
ficoml
pop
ss
jno
xchg
in
jno
addr16
pop
jnp
repz
loope
js
flds
mov
xchg
mov
popa
std
sub
popa
push
leave
ds
inc
adc
sub
pop
jl
mov
cmp
add
imul
sarb
mov
or
pop
popf
imul
mov
xchg
jmp
fdivs
mov
push
ret
lcall
cmp
sti
std
shll
push
pop
outsl
adc
pop
or
cmpsb
icebp
mov
and
push
stc
mov
jp
add
and
jb
test
rcr
push
fistl
add
outsl
ja
xor
mov
mov
xor
sarb
cli
pop
jmp
sbb
ret
pop
les
jae
fmul
adc
les
repnz
ds
pop
xchg
in
out
jecxz
jmp
push
sub
push
jb
mov
xchg
test
outsl
rcrl
jne
rolb
sbb
push
cltd
fstl
lret
scas
mov
out
iret
lods
xchg
and
cmp
jmp
lcall
dec
or
in
cmp
push
aas
sub
incb
jo
notb
xchg
in
jle
inc
pop
push
sbb
enter
and
insb
sub
jp
sub
shrb
and
jmp
push
add
popf
jo
xor
fistpll
mov
mov
sarl
stos
lods
fpatan
sub
int
in
dec
enter
jns
pop
jb
les
and
arpl
cli
add
lock
cmpb
add
pop
call
fmuls
test
ret
mov
mov
fwait
loope
dec
xor
popf
inc
push
jge
les
mov
inc
mov
aad
stos
xchg
push
push
xchg
cmp
xor
dec
mov
jns
fdivrs
jle
aas
push
gs
dec
inc
pop
push
outsl
mov
lds
xchg
mov
inc
sbb
add
out
xorl
ljmp
lahf
inc
jecxz
adc
xchg
lea
pop
jo
les
mov
dec
ret
add
mov
mov
pop
fadds
ljmp
sti
pop
mov
jae
push
xchg
inc
insl
sbb
mov
jns
cmp
pushw
aad
movsb
push
call
mov
add
cltd
push
mov
clc
or
test
out
ret
call
out
adc
sub
xlat
int3
xor
cltd
cld
into
cmp
push
cmc
fcompp
mull
addl
add
mov
pushl
das
mov
push
jo
push
dec
sbb
dec
imul
popa
test
addr16
inc
mov
or
jmp
jo
andb
pop
std
repz
lcall
popf
test
insl
loopne
mov
jmp
add
adc
rcl
cmc
pop
movsl
jbe
mov
xor
push
pushf
fldl
add
xchg
sub
stc
or
sbb
cmp
sbb
das
dec
inc
mov
mov
pop
icebp
cmpsb
lcall
addl
push
imul
std
pop
dec
cmp
xchg
lods
pop
pop
sub
adc
mov
enter
ja
loop
cmp
divl
mov
lret
xor
shll
inc
mov
jno
or
mov
or
leave
out
pop
es
push
add
mov
xchg
xor
imul
mov
leave
adc
ja
shlb
lret
push
cmp
mov
shll
add
adc
sub
fdiv
mov
scas
cmp
cmpsb
push
push
sub
mov
inc
sbb
je
push
outsb
popf
mov
push
ret
dec
shl
mov
push
push
jbe
clc
test
loop
js
dec
negb
aas
xor
jl
out
sub
outsb
enter
jmp
jne
stos
mov
lea
jne
shrb
jb
cmovae
sub
mov
hlt
fld1
inc
push
jb
call
inc
cmp
in
lcall
and
fiaddl
xlat
add
push
outsl
jno
aas
test
fwait
and
jmp
imul
fldenv
ja
ret
mov
clc
xchg
xor
outsl
xchg
dec
lret
dec
sub
adc
aas
jae
xchg
add
dec
mov
mov
scas
dec
pushf
jbe
jbe
lahf
hlt
jne,pn
jl
sbb
rcrl
push
mov
pop
mov
mov
mov
fwait
lods
repz
sub
xor
les
push
dec
inc
push
inc
cmpsl
shrb
fs
cmp
mov
push
out
nop
not
loope
daa
pop
adcl
daa
sti
mov
rclb
sub
int
test
lahf
xor
or
cmp
mov
mov
sbb
xor
lds
jno
lret
sbbb
arpl
mov
icebp
outsb
loope
cs
adcb
mov
test
insb
icebp
imul
dec
pop
aam
hlt
mov
pop
mov
enter
mov
xor
mov
mov
xor
scas
stc
popa
imul
out
dec
gs
pop
int
mov
out
test
mov
shrd
insl
idiv
add
imul
xor
hlt
mov
xchg
cli
lods
jge
std
dec
push
sbb
jns
jbe
sbbl
aam
test
sbb
test
inc
inc
mov
push
cmp
mov
push
cmp
ljmp
negb
fdivrp
or
push
rcrb
or
xlat
ret
lea
ret
sub
or
imul
rcrl
insb
subb
cwtl
xor
fimull
lcall
sbb
movsl
jecxz
divps
xlat
out
popa
mov
inc
hlt
inc
adc
xchg
xchg
jns
outsl
scas
dec
test
push
xlat
adc
sbb
sbb
idivl
imul
xchg
xchg
ds
dec
and
lods
cmp
insl
xchg
lea
fadd
mov
push
sbb
pop
es
ja
sbb
adc
mov
rorl
inc
mov
cmp
les
subb
sub
out
movsb
inc
jns
test
jle
sub
dec
push
lret
xchg
in
fcomps
mov
push
push
jns
in
ficoms
gs
fstpt
js
and
stos
adc
sub
push
iret
pop
adc
sbb
sub
lahf
ja
mov
xorb
or
push
cmp
add
inc
sub
sarb
dec
sahf
aam
jg
not
test
jae
push
std
sub
push
push
fldenv
icebp
lcall
aas
jmp
dec
add
mov
dec
daa
adc
scas
sub
fdivl
dec
jno
add
xchg
mov
sbb
sub
pop
mov
fldenv
inc
mov
mov
xor
pop
xchg
add
pop
xchg
imul
shl
add
adc
ds
pop
mov
mov
loopne
cmc
cli
ja
pminsw
mov
or
loopne
adcb
aad
rcrl
imul
jnp
hlt
mov
ror
xor
push
mov
push
ljmp
aas
add
test
mov
jnp
cmp
jp
jmp
pushf
mov
jmp
sbb
xor
sub
gs
add
sub
out
inc
roll
mov
cs
lods
fnstenv
jne
repz
es
jmp
out
addr16
jle
lahf
pop
fldt
arpl
cwtl
push
sub
mov
scas
and
pop
scas
rcrb
pop
xchg
sbb
dec
xor
dec
incb
add
cld
mov
pop
sbb
xchg
fucomi
scas
adc
repz
iret
enter
mov
sub
cmp
js
add
inc
xor
idivb
and
xchg
cmpsl
adc
jg
mov
aam
mov
in
sub
dec
and
imul
rcll
insw
xchg
lret
or
test
push
sahf
xchg
clc
xor
sbb
sub
daa
daa
clc
lahf
add
sub
and
lret
aaa
stc
mov
inc
test
mov
xor
aas
pop
hlt
push
in
or
ds
inc
mov
nop
leave
push
fcmovbe
xlat
jae
pop
js
mov
sub
inc
inc
das
inc
movsb
inc
xchg
push
loop
jmp
in
imul
adc
aad
mov
mov
add
inc
jecxz
loope
imul
jg
fwait
push
out
mov
dec
mov
pop
rclb
lods
and
lock
inc
push
movsb
xor
adc
mov
push
shlb
cmpsb
pop
stos
loope
jno
shrb
ret
sbb
pushf
cmp
pop
sub
cmp
add
ret
xor
push
mov
jae
popf
push
shll
or
adc
in
sub
xchg
dec
dec
push
cmp
cmp
pop
fildl
jg
test
sub
out
pop
pushl
cmp
outsb
inc
xchg
lea
lods
xor
in
cmp
add
mov
jns
ja
adc
repz
mov
cltd
ret
pusha
cli
or
inc
xchg
add
mov
mov
test
sub
idivl
pop
leave
inc
inc
mov
addr16
das
adc
bound
push
js
sub
hlt
jl
iret
out
movsl
cmpsl
xchg
sub
inc
sbb
jbe
nop
hlt
inc
testb
cmp
lret
push
mov
jle
int3
dec
je
pop
jmp
fs
fsubs
inc
out
xlat
inc
sub
dec
jge
pop
fildl
outsl
cs
lret
leave
mov
xchg
pusha
not
out
hlt
nop
mov
clc
cwtl
mov
into
or
xchg
push
inc
jg
movsl
scas
cmp
stos
mov
jmp
movsl
or
push
xor
das
sahf
mov
pop
ficomps
xchg
int
test
lahf
loop
cmpsl
xchg
iret
sar
sbb
iret
mov
xchg
pop
stos
jae
mov
pushf
dec
inc
add
std
sub
lret
aas
or
push
jmp
jnp
pop
jl
outsb
push
jns
or
inc
pop
scas
push
addr16
xchg
cmp
out
insl
adc
iret
inc
popa
mov
addr16
push
mov
mov
pop
xor
je
sbb
mov
adc
leave
mov
out
mov
pop
fwait
or
push
mov
enter
adc
clc
jae
aaa
pop
ss
jno
jae
cltd
mov
stc
mov
dec
and
dec
lods
lahf
add
outsl
adc
jmp
or
xor
sub
lods
push
cmp
lahf
xor
aaa
test
ficoml
cmp
incl
shl
push
cld
aad
and
int3
insb
xchg
test
dec
push
imul
inc
andb
or
shll
dec
stos
xchg
pop
cmp
xchg
push
jecxz
data16
inc
jg
fs
add
lahf
mov
push
cwtl
pusha
add
xchg
sub
das
arpl
ss
xorl
inc
int
pop
cmpsb
jae
mov
fcomp
pop
jo
addr16
adc
int3
and
jb
jl
mov
sub
shrb
fdecstp
mov
in
mov
inc
sarl
div
fs
loopne
stc
or
jge
and
mov
sti
jle
or
mov
icebp
stos
loopne
test
push
dec
jns
cmp
fs
sub
mov
pop
push
sub
and
xchg
jb
mov
fcmovbe
repz
pop
popa
clc
or
lcall
mov
roll
shlb
fdivs
aad
cmpl
mov
shll
fcomps
inc
jmp
dec
lods
xchg
ja
and
lahf
jne
cwtl
pop
push
rclb
push
add
push
fnstcw
data16
int
fcomps
sbb
test
sub
sub
testb
cmovne
imul
cmp
push
xchg
dec
loopne
or
aas
inc
pop
lock
push
and
mov
cmc
sub
jmp
or
cltd
sub
das
test
pop
inc
push
cli
jb
xchg
fs
sub
jle
movsb
adc
fldenv
sbb
xor
data16
xchg
mov
mov
mov
ret
and
outsl
insb
loope
outsl
data16
or
cmp
call
cltd
jae
daa
int3
icebp
neg
testl
out
pop
add
mulb
jmp
adcl
fldt
imul
push
arpl
mov
rcrb
fwait
pusha
loopne
outsb
or
sub
push
push
xchg
dec
push
jae
sub
mov
repnz
lcall
in
stos
dec
jb
or
jge
pop
inc
adc
pop
or
xchg
aam
and
push
jl
push
movsl
sbb
mov
test
push
gs
daa
out
pop
ja
mov
lds
inc
clc
sub
mov
ret
aas
mov
cltd
lahf
mul
leave
lods
aad
movsb
push
imul
je
mov
fs
jecxz
mov
push
ljmp
sbb
cmp
rcll
cmp
lea
jnp
adc
out
mov
cld
popa
movsl
adc
aaa
mov
jno
aam
lret
ljmp
xor
aas
and
in
xlat
mov
jmp
sub
jo
inc
xor
xchg
mov
push
mov
push
mov
inc
jmp
sahf
repz
lods
lods
inc
mov
and
pop
mov
push
loopne
aaa
jl
mov
daa
mov
adc
pusha
sub
loope
les
dec
xchg
jge
roll
pusha
mov
mov
pushf
xor
adcl
xchg
push
cmp
ja
out
jbe
dec
lods
add
cltd
sarl
xor
mov
mov
and
loop
lahf
cmp
testb
push
xor
pop
int3
sbb
pop
fmuls
sahf
mulb
mov
and
mov
in
xorb
push
popf
aas
std
subb
clc
or
and
es
dec
movsl
mov
popf
xor
fbld
and
gs
mov
adc
and
out
dec
sub
pop
cmpsb
fstpt
adc
cmp
mov
sbb
pop
sbbb
xor
cmp
mov
jns
insl
xlat
and
jg
fs
test
pop
imul
mov
cmp
mov
or
fwait
mov
test
loopne
in
adc
jge
sbb
addl
pop
jg
shlb
inc
mov
mov
sub
enter
cmp
xlat
dec
push
es
xor
sbb
ror
jmp
in
in
sub
sarb
mov
movsb
mov
inc
std
pop
movsb
scas
lea
shll
inc
push
mov
test
enter
cs
xchg
push
mov
or
jbe
int
push
push
ret
xchg
inc
inc
sub
ja
ds
scas
call
arpl
inc
adc
and
push
scas
xorl
and
das
push
sub
fs
movsl
adc
stc
es
mov
jae
push
sub
aas
push
pop
mov
and
xorb
adcl
mov
int
push
adc
sub
dec
mov
movsb
bound
add
or
xchg
xchg
push
subl
test
in
stos
enter
jmp
sti
das
lret
movsb
xor
mov
sbb
xchg
test
push
sbb
into
xchg
int
xchg
mov
movsb
mov
adc
dec
in
sahf
mov
scas
sub
jb
js,pn
cmp
aad
clc
adc
mov
mov
fincstp
xor
sub
mov
xchg
xor
aas
mov
mov
call
subl
cld
mov
outsb
xor
jecxz
ficomps
sbb
out
add
sti
mov
jmp
out
test
xor
es
hlt
dec
shrl
jge
mov
xlat
ss
push
sbb
adc
adc
or
mov
cmp
mov
fsubrp
dec
cmp
fdiv
mov
jno
push
in
cmpsl
jmp
add
dec
or
outsl
lock
mov
mov
fs
sbb
xor
cmp
mov
add
and
cmp
push
scas
mov
adc
out
sbb
lds
jnp
mov
push
subb
mov
cmp
xchg
adc
add
ret
xchg
push
sub
mov
and
les
sub
mov
les
mov
mov
mov
adc
js
or
xor
dec
push
faddl
hlt
inc
loopne
pop
jl
fcomp
dec
daa
clc
rol
sbb
push
outsb
sub
stc
dec
jno
push
out
push
lods
loop
jno
sbb
leave
lds
jp
pop
cmpsl
ret
dec
in
push
fcmovbe
idivb
pop
dec
jg
decb
rcrb
scas
push
xchg
cli
mov
pop
pop
adc
cmp
aas
adc
and
mov
pop
inc
lret
loope
mov
add
jmp
insl
pop
add
int3
test
inc
std
and
jno
push
test
mov
xchg
xor
add
pop
fsubrp
out
dec
out
incl
dec
in
into
shlb
mov
pop
cmp
mov
cmp
mov
je
insl
stos
rcl
mov
push
sbb
bnd
xchg
aad
daa
dec
push
adc
add
pop
fisubrs
shll
aaa
xor
add
xor
add
mov
filds
movb
ds
adc
ja
cltd
call
rorl
sbbl
or
dec
popa
and
mov
ret
loop
dec
dec
int
push
xlat
popa
adc
ret
jnp
and
lds
sbb
mov
dec
adc
inc
outsl
movd
add
jne
repz
jb
jnp
xor
aam
ljmp
loope
jge
add
mov
test
or
mov
jbe
out
gs
cwtl
sbb
pop
and
add
push
faddl
sbb
insl
popf
mov
mov
test
loop
mov
jg
js
lods
enter
shrb
push
adc
lds
pop
mov
inc
out
movsb
ja
add
pop
push
imul
repnz
mov
subb
inc
aam
mov
xchg
pop
inc
add
dec
popf
cld
mov
aaa
cmp
and
call
rcl
scas
mov
int3
arpl
sub
rcrb
ret
popf
push
dec
out
jb
lods
repnz
xchg
lea
ss
call
out
push
fnstenv
or
pop
outsl
push
and
lods
das
mov
fnstcw
jecxz
aam
inc
aas
test
hlt
stc
scas
outsl
xor
push
scas
jnp
cs
adc
jne
int3
rclb
push
add
jp
movsl
push
inc
fisttpl
push
ljmp
pusha
scas
sbb
in
sbb
sbb
fstpl
stos
jl
cmpl
adc
imul
xor
mov
cmpsb
jl
sbb
or
push
cs
aam
test
mov
scas
addr16
and
jg
cmp
add
rorl
stos
aaa
push
pop
jl
lret
push
jecxz
jo
push
add
lcall
enter
push
lock
adc
sbb
es
sub
call
out
cmpl
xor
dec
scas
daa
lods
add
jae
mov
movsb
out
mov
pusha
xchg
test
xchg
div
fistl
notb
stos
std
es
in
mov
outsb
mov
cltd
push
mov
lret
jge
mov
pop
scas
jns
or
pop
adc
mov
mov
inc
pop
pushf
jno
push
inc
add
sub
jmp
push
in
sbb
add
and
out
dec
test
mov
add
jmp
sbb
push
out
inc
movsl
je
stos
xor
mov
xor
lret
xchg
shl
aad
jge
sarl
pop
stos
ss
xor
sub
adc
adc
sub
aam
inc
shrl
mov
jp,pn
mov
stos
sub
cli
lcall
pop
pop
xchg
mov
outsl
mov
fstpl
push
scas
dec
mov
mov
lds
cmp
testl
jne
push
mov
int
negl
mov
sub
ret
cmpsl
inc
dec
lret
fiadds
adc
call
cltd
push
fidivl
insl
dec
and
mov
aad
add
mov
notl
mov
and
mov
sub
xchg
fisttps
push
scas
cmp
cld
fldenv
jmp
cmp
mov
shlb
cmp
xchg
inc
scas
xchg
adc
data16
pop
ret
sbb
cltd
sbb
sbb
jo
or
lret
dec
cld
andb
mov
aad
aas
mov
mov
cmpsl
and
cld
mov
inc
shll
test
mov
inc
adc
inc
mov
dec
arpl
xchg
es
leave
cmc
jno
add
xor
nop
int
loope
repz
adc
mov
outsb
gs
jb
mov
fdivr
mov
xchg
dec
sub
and
ja
stos
pop
not
stc
push
loop
fistpll
xor
imul
xchg
sahf
out
icebp
jnp
cmp
int
mov
mov
in
xchg
scas
cmc
dec
and
push
push
mov
mov
mov
jecxz
ljmp
dec
sub
sbb
sbb
sub
sub
stc
pop
push
dec
addl
add
cmp
cli
dec
cltd
mov
je
in
push
lea
mov
and
dec
sbb
call
dec
stos
insl
sbb
mov
jb
popf
aad
mov
xchg
nop
add
daa
fcos
mov
call
push
das
shrl
dec
add
fwait
dec
lods
ss
xlat
mov
in
cld
cmpsl
cwtl
dec
mov
pop
fstpl
mov
jmp
nop
mov
notb
cmp
and
test
popf
add
pop
hlt
int3
sbb
push
cmp
push
inc
or
test
fldt
mov
inc
aam
andl
adc
imul
adc
std
rclb
and
in
and
jne
fistps
fldl
repz
fisttpll
mov
xchg
pop
dec
cmp
or
cmp
bound
cmpsb
js
imul
ss
inc
xor
lea
shrl
pop
scas
add
cmc
jg
jge
push
push
push
push
icebp
pop
inc
mov
adc
push
push
cmp
rcr
xor
lea
and
mov
mov
ss
lods
sarb
out
test
sbb
rorl
pusha
adcb
stos
adc
dec
mov
sub
int3
jo
pop
scas
inc
cmpsb
fadds
hlt
das
sti
inc
pop
sub
dec
jae
repz
mov
imul
mov
and
cmp
push
loopne
daa
lret
pop
bswap
mov
into
mov
and
loop
push
jns
cmp
jp
pop
push
push
pushf
jmp
shll
roll
jge
pushf
sub
xchg
xor
test
aad
loop
addr16
sub
pop
add
add
test
and
enter
or
sub
xchg
xchg
or
add
lds
rorb
js
test
fmul
jne
out
jle
or
adc
andl
int3
add
inc
pop
xor
and
ds
sub
jecxz
inc
sub
xchg
add
push
jecxz
push
push
mov
jp
dec
jae
dec
lods
loopne
cmp
testb
add
sbbb
mov
imul
fcoml
repnz
and
add
loopne
push
pop
and
add
mov
loope
xchg
aaa
or
sub
push
sarb
arpl
pop
fwait
xchg
negb
cmp
insl
popa
sub
mov
mov
stos
mov
int
mov
adc
stc
push
xor
xor
mov
dec
dec
xchg
daa
inc
mulb
call
sar
pop
test
sahf
dec
bound
leave
test
movb
notl
adc
cld
mov
ret
mov
jne
mov
pusha
mov
mov
xchg
sub
bound
push
mov
test
push
jp
in
or
lods
in
roll
in
adc
add
adcl
idivl
add
cmp
xchg
cmp
xchg
mov
pusha
cmp
cmp
dec
fsubs
sub
ret
dec
repnz
sub
shll
pop
inc
popa
and
sti
pop
adc
mov
lods
dec
inc
jecxz
cmp
push
jl
in
xor
outsb
pushf
add
cmpsl
pop
es
fwait
roll
ret
adc
cmp
push
xchg
xchg
fmulp
pop
xchg
and
xchg
lods
stos
mov
pop
lea
inc
pushf
push
rcll
adc
mov
xchg
or
or
add
cmc
xlat
insb
jb
in
dec
sbb
push
mov
lcall
push
pop
pop
jge
lods
push
cmp
popa
mov
xchg
jae
sbb
imul
inc
insb
pop
in
mov
mov
dec
or
mov
loope
xchg
lret
incl
insb
xchg
jo
jp
mov
mov
rclb
lret
add
mov
inc
in
aam
shr
add
inc
lds
popf
inc
and
fwait
loop
jnp
aam
dec
mov
in
xchg
jl
push
repz
mov
out
sub
daa
mov
adc
sti
xchg
clc
mov
xor
dec
or
mov
fdivrs
dec
xchg
mov
iret
dec
pusha
mov
mov
stos
pop
cmp
add
or
xor
movsb
pop
nopl
nop
aad
pusha
or
test
jle
sub
sbb
xchg
cmp
aam
cmp
jle
int3
outsl
sbbb
into
mov
jg
cmp
mov
mov
aam
rcl
in
jl
enter
aas
and
jae
pop
sub
js
lock
daa
mov
adc
rcrl
inc
pop
loope
pop
jbe
in
out
sti
jmp
test
xchg
lret
shlb
aam
xor
mov
negb
fs
mov
add
jnp
out
mov
lcall
mov
mov
and
imulb
sub
inc
mov
pop
sahf
push
sub
mov
nop
shl
imul
std
and
fldcw
mov
ljmp
fistl
mov
or
mov
mov
inc
mov
lahf
lret
adc
int
pop
mov
mov
fs
mov
fstpl
sub
mov
sbb
dec
cmpsb
ror
fildl
das
inc
dec
add
push
sbb
mov
or
xchg
mov
popa
cmc
sub
push
push
mov
jns
adc
ljmp
sbb
jecxz
xchg
xor
fnsaves
data16
lods
lods
jmp
dec
cltd
test
nop
xchg
cmp
mov
jmp
mov
loopne
add
mov
loopne
jl
adc
stc
mov
push
mov
lods
cmp
shlb
and
jo
std
enter
pushf
int3
movsl
arpl
cmpsl
hlt
iret
push
or
dec
out
ljmp
mov
lock
lret
mov
adc
idiv
push
enter
js
adc
mov
mov
leave
aad
mov
push
adc
pop
jmp
or
jl
out
lock
dec
push
sbb
and
out
loope
outsl
push
mov
iret
sti
pop
xchg
shlb
ds
les
inc
test
jne
int
mov
shl
lods
leave
or
mov
cltd
sti
pop
cmp
and
loopne
lods
hlt
sbb
add
xchg
fisttps
call
sbb
inc
dec
aas
add
and
inc
jl
sti
leave
outsb
push
adc
adc
pushf
sub
or
arpl
jmp
lahf
lret
add
test
xor
arpl
lea
pushl
aad
mov
lret
mov
stc
adc
lret
es
arpl
jle
mov
out
jae
mov
inc
in
mul
aaa
dec
lcall
push
ja
daa
push
fwait
xchg
pop
xor
fildl
push
xor
lret
push
insl
enter
inc
sbb
pop
nop
popf
mov
push
dec
call
les
repnz
xor
jge
in
add
loop
sarb
xchg
mov
ret
xchg
lock
fisttps
xchg
inc
icebp
adc
push
xchg
faddl
xadd
ss
out
add
ja
jns
jg
into
aam
mov
inc
xchg
adcl
pop
inc
jnp
mov
mov
xchg
cltd
cltd
mov
ss
or
inc
push
pop
mov
pop
sub
xchg
pop
out
daa
mov
repz
push
and
in
in
add
rcl
dec
aas
xchg
mov
push
cmp
pop
aam
loop
loop
outsl
or
aam
out
dec
xchg
das
fsts
jbe
jmp
jl
pop
push
stos
sbb
mov
addb
popf
or
shll
movsl
outsb
push
arpl
test
clc
xor
dec
mov
xchg
fisubl
js
and
and
and
test
or
loop
cs
imul
inc
xor
test
cmpsl
pop
fs
enter
mov
cmpsl
and
popf
jne
inc
incl
in
sbb
inc
int
push
mov
fsubs
inc
xchg
mov
lods
gs
push
mov
sahf
dec
push
adc
addr16
out
or
leave
push
push
sahf
cwtl
das
pop
jb
negb
aam
fadds
inc
rol
dec
pop
popf
xchg
divb
rcrl
in
sbb
cmp
daa
lods
xchg
imul
aas
dec
xchg
jno
mov
pop
mov
mov
popf
adc
bound
addl
scas
inc
fbld
xchg
jno
push
mov
mov
xor
aaa
fistpl
mov
cwtl
aad
sub
fldlg2
outsb
xor
cmp
jg,pn
mov
push
imul
cmp
mov
or
cmp
sbb
outsb
cmc
mov
xor
sbb
addb
test
popf
xor
sbb
popf
test
xor
jecxz
negl
stos
or
add
nop
mov
push
or
adc
test
push
sbb
inc
mov
leave
mov
sbb
imul
xor
es
in
xchg
sub
shll
ja
add
aaa
push
cmp
mov
stc
shll
dec
xor
or
test
lods
mov
stc
lds
push
mov
ret
and
dec
sub
in
stc
sahf
int
jl
mov
dec
mov
xchg
cmp
into
iret
cmp
adc
xchg
repz
mov
pusha
and
jge
stos
adc
adc
mov
int3
cmp
or
movsl
in
repz
jbe
jmp
ja
cmp
loopne
pushf
rcrl
subb
dec
in
inc
mov
sub
rcrl
mov
dec
popf
jae
fisubrl
outsl
outsb
lods
out
popf
fsubl
jge
rorb
jge
push
xor
aad
pusha
es
movsl
enter
repnz
sub
shlb
mov
roll
sub
jno
xor
jne
ss
mov
lock
bound
orl
ret
jnp
xlat
cltd
mov
shr
mov
add
jne
xor
loopne
rolb
xchg
dec
mov
fildll
pusha
jno
push
jnp
sbb
push
inc
and
xor
adc
dec
daa
add
mov
das
shlb
rcl
ror
dec
mov
shl
je
subb
rcr
mov
jg
add
imul
cmp
arpl
dec
mov
leave
nop
int3
inc
test
jbe
xor
sti
stos
les
mov
in
inc
test
mov
mov
or
ja
js
lods
push
add
les
mov
dec
cmpsb
sub
xor
push
fyl2x
mov
pop
call
int
stos
insb
xor
int3
inc
insb
mov
fsts
aad
push
jns
sub
js
sahf
lret
push
test
aam
inc
mov
popf
jmp
jp
insl
call
mov
lock
aad
repnz
les
js
movsl
ret
pop
test
mov
dec
push
xor
jo
or
clc
dec
movsb
cmp
out
data16
mov
loope
dec
imul
sbb
into
sbb
cmpsl
mov
inc
popa
enter
xorl
daa
rclb
inc
cltd
sbb
jmp
inc
pop
pop
lock
sbb
and
pop
rcl
push
push
mov
fs
mov
loope
and
mov
xor
dec
mov
push
stos
xchg
jge
outsb
mov
imul
jmp
rcrl
mov
cmp
jo
push
rcrl
int
popf
mov
cli
icebp
mov
mov
jno
in
inc
call
add
jnp
outsb
clc
cli
inc
fcompl
rorl
pop
xchg
jns
inc
mov
enter
or
jae
or
jmp
rorb
rcrb
in
xchg
imul
cmp
mov
mov
adc
loope
imul
test
add
xor
sbb
in
and
xrelease
test
mov
lcall
movsb
push
arpl
gs
pop
inc
ja
fnstsw
xorb
rcl
aad
in
lahf
lahf
cli
out
test
add
rcrb
jno
les
pop
out
pop
sarb
aad
or
fimull
dec
pop
cmp
dec
cmc
jg
rclb
shlb
sub
add
jbe
fadd
repz
sbb
inc
add
shlb
mov
or
mov
xchg
jns
adc
xchg
push
xchg
cmpsl
jl
ljmp
gs
or
fwait
les
mov
dec
icebp
push
add
adc
adc
sub
not
scas
pop
cmp
inc
mov
cs
fisttps
jo
add
adc
call
adc
sub
inc
xchg
add
xchg
ret
mull
push
insb
mov
out
pop
fisubrl
xchg
js
pop
cltd
ljmp
mov
sbb
pop
icebp
dec
sub
xorl
clc
sbb
cmp
dec
xchg
in
outsl
push
fnstcw
insl
lods
dec
das
cmp
int
and
adc
mov
and
imul
sub
repnz
xrelease
hlt
std
jne
xchg
int3
je
insb
add
adc
clc
lds
repz
aaa
xor
adc
lret
inc
pop
push
hlt
mov
push
and
lock
ljmp
lock
daa
mov
lock
mov
or
sub
xchg
out
mov
mov
sub
and
aam
stc
adc
mov
leave
insl
cmp
lds
mov
orl
pop
dec
push
pop
iret
inc
sbb
mov
mov
repz
enter
das
mov
popf
push
arpl
cmpsb
mov
call
pop
xor
addb
push
std
cmpsb
mov
popa
pop
inc
mov
jnp
mov
das
adc
outsl
or
xchg
bound
int
push
sub
hlt
mov
fdivrl
cltd
scas
cmc
ret
scas
iret
pushf
push
cwtl
cmp
mov
pop
in
cld
push
fsts
mov
loop
iret
adc
cmc
push
inc
adc
sti
cmp
cmpsl
mov
out
dec
imul
jge
jle
movsl
pushf
adc
adc
ja
or
les
add
ficompl
rcll
jo
push
iret
test
cmp
xor
mov
imul
pop
ret
or
and
sub
sahf
popa
js
or
loope
jo
dec
adc
les
divl
enter
dec
or
rcll
dec
jle
fs
pop
jb
xchg
jae
rcll
adc
ret
pop
pop
sbb
cli
pushl
pop
loopne
adc
movsl
lock
and
cmovae
add
stos
add
es
and
pop
inc
push
hlt
lret
and
daa
loope
stos
jnp
aam
clc
mov
fiaddl
push
jmp
mov
fstl
fstp
aaa
mov
popf
fldcw
and
jo
repz
in
push
and
jns
inc
adc
stos
and
dec
add
fmul
sahf
fcmovnb
out
cld
mov
or
pop
jl
sarb
jno
lock
out
sbb
add
xchg
out
and
pop
push
aas
clc
loope
movd
mov
xor
jl
sbb
mov
sbb
dec
add
sbb
mov
shr
push
cmp
cmp
mov
addr16
cmpl
sti
insl
xor
imul
adc
jp
and
push
or
scas
sub
dec
pop
ret
jle
adc
int
scas
nop
test
stc
dec
add
out
mov
inc
pusha
or
dec
fimuls
arpl
in
sbb
xor
arpl
mov
dec
adc
js
pop
push
mov
and
pushf
add
mov
and
jecxz
mov
sub
imul
or
dec
fidivl
add
inc
iret
pusha
xchg
jns
push
cmp
jae
cld
mov
adc
cmpsl
aas
xor
xor
dec
pop
xchg
sub
dec
mov
push
dec
mov
ja
jns
call
arpl
inc
add
bound
lds
or
cmp
enter
daa
in
fucomi
jp
push
iret
dec
xchg
ret
pop
fs
clc
and
sbb
test
das
sub
dec
in
scas
xchg
cld
pop
and
jbe
mov
xchg
push
dec
inc
sub
stc
cmp
sbb
lods
lret
xor
and
test
jle
cmp
jecxz
jae
or
jle
inc
cmpl
das
sti
packssdw
jge
movsl
in
sub
mov
mov
jle
push
std
test
xchg
xchg
jns
enter
stos
insl
repnz
jb
into
push
test
pop
fcoml
push
in
repz
mov
add
orb
pop
add
or
popf
mov
add
leave
pop
pop
mov
mov
rdpmc
inc
cmp
mov
xor
add
dec
jl
mov
push
push
xor
stos
out
push
xor
pop
out
enter
xchg
arpl
mov
mov
or
and
pop
cmp
js
loopne
fisubs
mov
pop
mov
or
cmp
mov
mov
dec
clc
cmp
jae
sbb
test
aad
pop
dec
adc
idivl
inc
and
cmp
test
inc
ret
imul
push
ret
mov
in
leave
xacquire
xor
dec
nop
insb
scas
pop
arpl
addr16
rclb
push
orl
mov
jae
inc
popf
inc
stos
out
cmc
adc
scas
rolb
xor
jle
cltd
in
jmp
or
inc
mov
and
dec
test
mov
cmp
mov
mov
adc
jns
loop
xchg
es
inc
jns
notb
add
add
add
add
inc
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movzbl
movl
add
shl
lea
movl
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
shl
movzbl
or
inc
inc
cmp
jle
mov
cmp
jae
mov
and
mov
shl
mov
mov
add
cmpl
lea
ja
cmp
je
shl
movzbl
inc
shll
or
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
movzbl
mov
and
shl
mov
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
and
mov
lea
cmpl
lea
mov
lea
ja
cmp
je
movzbl
shl
or
shll
inc
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
sar
mov
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
mov
lea
add
cmpl
ja
cmp
je
movzbl
inc
shl
shll
or
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
sub
mov
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
inc
shl
or
mov
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
lea
mov
add
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
mov
shr
movzwl
imul
cmp
jae
mov
movl
sub
mov
sar
lea
mov
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
inc
shl
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
sub
sub
mov
mov
shr
sub
cmp
mov
ja
cmp
je
shl
shl
movzbl
or
inc
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
sar
mov
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
shl
movzbl
shl
or
inc
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
sar
mov
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
lea
add
mov
cmp
ja
cmp
je
shl
shl
movzbl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
shll
mov
sub
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
shl
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
shll
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
movl
mov
shr
sub
movl
mov
add
mov
mov
mov
mov
mov
lea
add
cmpl
ja
cmp
je
shl
movzbl
shll
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
lea
movl
mov
mov
mov
lea
add
cmpl
ja
cmp
je
shl
movzbl
shll
or
inc
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
or
lea
cmp
mov
jg
mov
shl
mov
lea
add
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shl
shll
movzbl
inc
or
add
shrl
cmp
jb
or
sub
dec
jne
shl
mov
mov
add
movl
mov
movl
mov
add
mov
mov
add
cmpl
ja
cmp
je
movzbl
inc
shll
shl
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
inc
mov
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
add
mov
cmp
ja
mov
mov
sub
add
lea
mov
mov
mov
inc
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
add
pop
pop
lea
xor
add
mov
push
cmp
jne
mov
pop
xor
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
sub
add
sub
add
sub
add
add
add
add
add
mov
add
mov
add
fadds
add
add
add
add
add
or
add
add
push
add
add
add
add
mov
add
or
add
add
add
movsb
push
add
add
add
or
add
add
add
push
add
add
add
add
add
add
add
push
add
add
add
add
add
mov
add
mov
add
fadds
add
add
add
add
add
or
add
add
jo
push
add
or
add
add
add
add
add
mov
add
or
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
inc
add
addb
add
or
add
add
insb
add
add
add
add
add
lock
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
clc
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
push
add
add
imul
add
add
inc
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
jne
insb
add
add
imul
and
inc
add
js
add
xor
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
xor
sub
and
xor
sub
and
add
add
add
push
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
outsl
add
je
jae
add
pusha
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
imul
add
add
add
add
jae
and
inc
add
insb
add
jae
sub
and
xor
xor
xor
xor
sub
add
add
add
add
adc
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
dec
add
jns
xor
jo
add
jae
jo
jno
arpl
xor
add
add
js
add
add
push
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
jne
jo
je
add
xor
push
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
sub
and
xor
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
push
pop
add
push
pop
add
push
pop
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
jbe
jo
xor
cs
insb
add
insl
arpl
xor
fs
insb
add
gs
xor
fs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
arpl
jo
inc
imul
popa
addr16
imul
inc
jb
add
add
ja
fs
