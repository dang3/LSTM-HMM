ljmp
call
lock
pushl
add
lea
push
call
leave
xchg
in
ret
sbb
jmp
adc
mov
aaa
addr16
subl
fisttps
insb
mov
mov
push
call
dec
jbe
xchg
lds
add
mov
out
xchg
push
loopne
sub
pop
sti
lahf
mov
les
and
jecxz
nop
addl
lea
push
push
cwtl
mov
fistpl
lock
int3
sbb
mov
or
xchg
out
mov
inc
das
call
int3
dec
mov
and
jno
sbb
push
add
jo
mov
lock
push
add
sbb
leave
frstor
lock
out
add
pop
sbb
divb
test
insl
imul
adc
push
and
mov
jecxz
pusha
mov
push
bound
in
fld
je
jo
sub
inc
xlat
mov
xchg
xchg
push
push
cld
sbb
mov
mov
rolb
rcll
not
jmp
sbb
fdivs
fcmovnu
dec
mov
cs
xor
rorl
and
in
inc
jmp
in
or
pop
hlt
out
adc
push
cmp
mov
or
mov
pop
repnz
cmc
xor
fisubl
mov
jle
adc
inc
not
mov
sti
push
xlat
mov
push
fildl
shl
xor
stc
popa
test
xorl
inc
lds
inc
inc
ja
and
push
xor
adc
cld
dec
ret
pop
xor
push
leave
cld
inc
clc
xor
and
push
repz
clc
imul
mov
cmp
insb
dec
xor
andb
inc
xchg
xor
pushf
in
inc
push
lret
sub
inc
nop
and
xchg
cmp
popl
pop
sub
xchg
int3
mov
adc
xchg
sbb
sub
add
arpl
cmp
nop
add
cmp
iret
add
imul
jecxz
pop
xchg
insl
sbb
dec
dec
mov
clc
fildl
jo
clc
push
push
hlt
fiadds
mov
jbe
test
jae
add
mov
push
int3
jl
fistpll
pushf
jl
lock
push
mov
pop
orl
fs
gs
or
push
addr16
loope
push
cwtl
or
imul
inc
in
in
aas
cwtl
scas
sbb
sti
lods
and
dec
arpl
aaa
cmp
mov
mov
add
scas
mov
jle
clc
pop
mov
in
pop
xchg
push
cmp
adc
push
nop
loopne
fnstcw
sub
dec
incl
push
xor
les
leave
outsl
jge
aas
loopne
popa
push
xchg
xchg
lahf
dec
iret
and
adc
into
add
push
arpl
inc
insl
imul
popa
inc
push
pmulhuw
fistl
lret
add
das
rorl
sub
add
cli
add
add
sbb
test
decl
stos
lret
sbb
inc
outsb
cmp
cwtl
add
decl
add
add
mov
add
or
rol
fmul
fldt
pop
sub
dec
push
fldt
add
add
and
ret
into
in
mov
jle
pop
jl
loopne
and
sbb
pop
insb
neg
pop
sti
fiadds
cmp
sbb
dec
or
out
insl
stc
fildl
inc
pop
add
mov
sbb
or
pop
sub
and
lret
insb
idivl
lret
mov
sub
dec
cmc
enter
lods
inc
mov
sub
add
outsl
ljmp
add
mov
adc
mov
xor
je
lods
fcmovne
fwait
inc
adc
clc
fcoms
or
sbb
jle
add
icebp
sub
lahf
mov
enter
xchg
mov
movsb
push
pop
jns
out
jle
and
adc
pop
pusha
in
add
rolb
add
pusha
lahf
add
or
mov
jg
fcomi
and
jno
lea
hlt
mov
movl
cmp
adc
mov
push
cltd
incb
mov
aas
add
sbb
pusha
dec
scas
mov
add
xchg
pop
dec
pop
clc
mov
jg
das
push
repz
cmpsb
lods
sbb
stos
xchg
or
inc
pop
lret
pop
notl
push
jnp
adc
cmp
fcoml
pop
dec
add
jg
or
enter
add
cwtl
mov
stc
inc
shll
loop
fldl
fldl
sahf
lods
sbb
jb
out
out
jl
xor
pop
cs
push
sbb
sbb
add
and
push
mov
lock
shll
ret
addr16
shrl
adc
ss
pop
fbld
or
and
sbbl
lret
add
add
cmp
inc
sbb
mov
icebp
pop
fdivl
leave
xor
lret
add
dec
xor
andb
fmuls
or
push
xor
scas
outsb
add
jnp
dec
mov
inc
lcall
insl
inc
mov
mov
jne
dec
adc
adc
or
xchg
add
add
testb
add
arpl
add
push
pop
xchg
ja
divb
cmp
or
test
dec
fmull
out
xor
fdivrl
cmp
std
outsl
xor
xor
jns
jno
jle
sbb
add
add
aam
cs
dec
pusha
adc
pop
imul
out
cmp
push
les
ret
mov
add
adc
in
add
or
mov
xor
add
cmpl
mov
test
and
xor
add
jl
mov
aas
cs
cli
push
xor
out
rcrl
scas
jne
or
inc
mov
sti
clc
iret
inc
add
xchg
and
in
jp
outsb
mov
xor
stos
sti
and
jg
jp
pop
mov
jge
cmp
push
push
pop
es
dec
xchg
or
fwait
test
loope,pn
jl
adc
stos
scas
jmp
aaa
fldl
loopne
and
bound
gs
add
sub
lahf
sbb
jecxz
imul
sbb
xchg
aam
repnz
outsb
aaa
pop
or
fs
lods
sbb
mov
and
in
or
jg
cmp
aaa
jecxz
jecxz
test
xor
out
jg
int3
into
xchg
addl
and
addl
sbb
mov
into
insb
or
je
add
jmp
out
and
jl
insl
dec
or
mov
add
inc
int3
test
insl
clc
sahf
mov
dec
adc
insb
xor
clc
lea
loop
ret
fstpl
test
add
mov
das
fwait
xchg
add
cmp
add
pop
inc
scas
rclb
jle
and
loopne
mov
add
push
insb
jl
in
sbb
add
insl
ret
pop
push
jmp
mov
xchg
sbb
js
sub
andl
adc
push
inc
int
mov
orl
lods
movsl
lcall
or
dec
ret
push
fstpl
testl
mov
cmp
jmp
add
inc
scas
bound
jecxz
sub
dec
xchg
daa
pop
fnstsw
aas
int
outsl
pop
xchg
add
adc
pop
leave
jp
es
jg
add
sbb
sub
cwtl
dec
iret
dec
sub
loope
mov
test
or
lock
adc
out
xor
and
inc
cs
jbe
cmp
or
or
inc
pop
in
ss
mov
add
mov
fs
push
cmc
mov
jb
fs
mov
xor
gs
or
cld
cmpb
bnd
jmp
add
or
mov
les
and
jmp
xor
jns
in
pop
ja
addr16
lds
hlt
mov
xchg
mov
rolb
jns
jmp
cmp
mov
sub
sbb
push
aaa
push
scas
imul
inc
ss
push
add
or
lea
adc
bound
out
inc
fwait
sub
xor
mov
ret
gs
inc
insb
lahf
cmp
in
sbb
addr16
jne
ds
mov
test
dec
pusha
add
mov
int3
outsl
fbstp
cmp
jp
out
pop
adc
icebp
cmpsl
pop
fwait
and
out
push
inc
fsubrs
daa
add
fstpl
pop
outsb
cwtl
sbb
pop
lea
or
jecxz
sbb
add
xor
add
pop
dec
xchg
sbb
fdivs
xlat
mov
jb
sbb
cmp
mov
add
jne
aad
scas
mov
adc
iret
sbb
mov
arpl
rorb
daa
sbb
pushf
insb
jmp
mov
and
pop
xlat
mov
pusha
sub
scas
fnstcw
not
pop
adc
stos
loopne
xor
mov
xor
ret
sti
outsb
in
xchg
jbe
adc
add
lods
pop
xor
mov
mov
rclb
jb
jo
cwtl
sarl
or
cmc
subl
dec
insb
jb
jge
adc
mov
mov
out
adc
repnz
add
pop
ja
pop
aad
cmp
std
addl
mov
fcoms
pop
lea
cmp
ds
inc
repnz
push
ret
loopne
negl
call
push
jno
sbb
or
jmp
ret
mov
out
ret
jmp
icebp
pop
adc
bnd
and
push
orl
xorl
xor
xor
aam
incb
sbb
add
clc
imul
cmc
nop
jb
orb
cmp
pop
loopne
aad
push
jmp
aad
fstpl
or
and
mov
jbe
add
mov
cs
or
jp
mov
mov
add
mov
cmpsl
or
adc
std
std
adc
mov
jbe
and
jge
sbb
rorb
mov
xlat
mov
fadds
or
loopne
jae
pop
clc
lds
xchg
mov
or
pusha
xor
test
icebp
jmp
jecxz
jmp
ljmp
inc
cmpsb
dec
add
mov
movb
pop
pop
lahf
mov
mov
adc
leave
out
or
sub
push
xchg
sbb
push
mov
add
mov
hlt
fs
scas
pusha
fildll
insb
mov
xchg
shrl
out
pop
xchg
push
mov
pop
cs
push
scas
pop
xchg
sub
test
xlat
ja
jno
adc
sti
add
fisttpl
orl
addr16
loope
jge
push
sub
movsl
stos
fcmovb
addr16
or
or
sbb
or
out
lret
arpl
into
ror
setl
test
int
mov
adc
or
xlat
or
jne
jg
cmp
lds
jecxz
and
xchg
jbe
movsl
not
and
nop
insb
push
stos
jb
mov
dec
mov
js
pop
daa
mov
xchg
pop
cld
xor
pop
adcl
es
js
push
lahf
mov
xchg
mov
cmc
popa
xor
add
jne
dec
sub
xor
pop
out
push
jle
mov
sub
mov
sub
mov
mov
fmull
adc
lock
into
mov
sbbl
es
and
lods
add
dec
inc
fwait
mov
sbb
mov
loopne
adc
shll
popa
cmp
aam
mov
xchg
and
lret
mov
icebp
fimull
es
add
insl
mov
inc
mov
sub
pop
mov
sub
jne
cmp
loopne
push
rol
pushf
cli
xchg
sbb
and
mov
cmpsl
pop
jge
sbb
or
sub
ret
in
lds
out
fcomps
xor
out
mov
rol
mov
lret
pop
and
lret
sub
aaa
pop
pusha
idivl
jmp
dec
je
jb
sbb
add
das
adcl
lock
call
mov
dec
push
adc
cs
xchg
xlat
mov
cmp
mov
mov
mov
jbe
sbb
mov
xor
cld
and
insb
cld
xchg
lock
pop
sbbl
xchg
push
dec
cmp
icebp
pop
jg
in
cmp
cmp
cs
jnp
fldt
sbb
cwtl
mov
xchg
lcall
mov
adc
movsl
scas
shrl
mov
arpl
js
bound
dec
nop
sbb
sbb
cli
push
inc
mov
xchg
rorl
push
or
add
sti
mov
lcall
nop
dec
pop
out
add
and
adc
cltd
sub
adc
fcom
cmp
pop
mov
lods
xchg
loope
ljmp
lds
dec
and
mov
in
jmp
inc
out
pushf
push
sbb
jo
mov
shr
pop
ret
jl
adcb
jbe
jge
jne
inc
psubusw
shll
lret
sub
mov
mov
cwtl
dec
mov
pop
out
mov
shl
jns
lods
inc
cltd
adc
ret
mov
and
fmuls
and
jle
push
js
adc
dec
mov
roll
push
mov
sbb
xor
fnstenv
fdivr
mov
dec
ja
ja
add
push
pop
cmp
scas
and
lods
inc
mov
fcmovne
jb
stos
xor
push
or
ret
int
jecxz
out
ret
push
add
dec
push
push
pop
aaa
dec
pop
cs
orb
inc
movsl
cli
jne
and
sbb
std
push
cmp
xor
sets
outsl
gs
add
xor
inc
xlat
imul
orl
inc
pop
adc
sub
xor
out
pop
sbb
rcr
scas
inc
cmp
movsb
mov
lcall
mov
iret
sbb
clc
adc
aaa
idiv
ss
mov
sbb
int3
jb
xor
mov
pop
andb
bound
sub
cmpsb
lods
or
dec
fldt
pop
xor
lahf
adc
or
fwait
push
fstl
rcl
mov
inc
shr
sahf
xchg
jecxz
jae
rorb
sbb
push
loopne
ds
adc
test
aaa
gs
pop
cmp
loopne
andb
test
mov
lcall
sbb
pop
ss
mov
push
outsl
stos
dec
mov
outsb
sub
pop
icebp
add
xchg
arpl
out
adcl
test
std
outsl
leave
rclb
dec
daa
push
add
jnp
jl
mov
xor
or
hlt
or
mov
data16
pop
das
sbb
sub
jns
pop
stos
xor
cli
pop
jo
je
inc
jo
test
test
xchg
movsb
push
lret
xor
outsb
push
jecxz
xchg
xchg
add
xlat
dec
pop
lret
stos
pop
xor
xchg
notl
add
xor
jmp
fisttpll
push
imulb
jae
push
repz
outsb
call
or
divl
aas
jb
mov
or
hlt
and
inc
arpl
push
cmp
aam
push
add
dec
xlat
fs
mov
loopne
xchg
pop
cli
or
push
lret
sar
inc
rclb
fmuls
adc
push
pop
dec
loopne
in
jno
insb
push
add
add
ss
addr16
inc
data16
jl
aaa
xor
sarb
and
pop
cltd
sbb
subl
and
scas
imul
in
or
xchg
add
ja
lea
inc
mov
cmp
pop
sbb
popf
sub
movsl
insb
pop
cmc
sub
push
adc
inc
or
xchg
and
pop
cmp
test
dec
pop
push
arpl
or
inc
mov
push
xchg
inc
int3
sub
xlat
out
divl
dec
cmp
sbb
lea
les
sahf
adc
scas
mov
jge
addr16
test
sbb
data16
dec
pop
ret
inc
outsl
ljmp
shl
aad
std
sbb
das
out
or
fdivs
cwtl
cmpsl
mov
loope
js
inc
inc
xor
imul
sbb
adc
jo
or
andb
call
gs
mov
cwtl
jo
fcoms
jl
push
jae
pop
stc
cltd
and
fistpll
addl
ja
clc
add
jmp
loopne
cmpsb
mov
call
cli
sbb
add
lock
mov
aad
sub
mov
cmp
cmc
fisubs
shrl
cmp
or
iret
ret
and
and
push
cmp
mov
leave
inc
push
or
out
cmpsl
mov
in
int3
out
fmull
pushf
test
out
pop
jae
jge
mov
scas
daa
adc
push
fstpt
push
pop
and
leave
dec
fwait
mov
out
imul
imul
icebp
jl
push
pop
or
mov
divb
insl
adc
pusha
cmp
fcmovbe
sub
add
xchg
inc
fstl
and
iret
aas
cs
ljmp
push
add
and
dec
pop
leave
mov
into
je
jmp
jns
dec
imul
xchg
lods
xchg
jne
cmp
mov
pop
push
cwtl
inc
sbb
lret
cmp
pop
mov
je
lock
adc
adc
decb
sbb
andb
adc
shrb
mov
push
pop
inc
js
out
dec
cmp
aaa
cli
cmpsb
jb
push
jl
rcll
insb
clc
push
pop
fstpl
mov
mov
popa
sub
clc
iret
xchg
and
mov
inc
iret
mulb
pop
add
mov
adc
push
cltd
fldz
loop
mov
fwait
aas
mov
and
sahf
or
fildll
push
fwait
adc
int3
push
scas
paddw
inc
ds
bound
cmp
jne,pn
xor
mov
dec
mov
xor
je
subl
mov
testl
dec
fs
dec
mov
cld
inc
cmp
lock
scas
inc
lock
movsb
sbbb
and
push
push
and
add
and
hlt
scas
inc
pop
pop
xchg
cltd
sub
popa
je
mov
inc
xchg
mov
je
and
pop
out
sub
jmp
cmp
jl
push
fmuls
pop
fnstcw
fadd
push
cltd
aam
xchg
std
jnp
sub
mov
pop
xchg
lret
dec
js
out
jmp
mov
aaa
adc
stc
adc
adc
fwait
jns
sub
xchg
clc
lcall
call
cmc
xor
repnz
mov
icebp
call
jecxz
movsl
in
xchg
adc
push
and
sbb
xor
js
fstpl
push
mov
pop
xor
push
leave
popf
shll
pop
pop
cld
mov
sbb
movl
rolb
test
or
cmc
cmpsb
arpl
inc
pop
cmp
dec
imul
pop
bound
out
sub
scas
jle
mov
and
mov
sub
push
js
sarl
pop
cmpb
sbb
popf
cmp
xchg
and
xor
dec
add
mov
pop
jg
hlt
and
sub
std
scas
imul
mov
test
out
adc
lods
pop
ja
adc
lock
insl
jecxz
or
addr16
fs
add
je
jo
lcall
ds
inc
lahf
insl
push
ds
mov
cmp
nop
cwtl
inc
mov
push
movsl
jbe
scas
xorb
mov
les
jnp
mov
inc
clc
mov
adc
sub
cmp
aad
insl
mov
mov
das
ja
movsb
inc
sahf
xor
xchg
inc
cli
loopne
arpl
pop
mov
pop
dec
inc
cmpsb
stc
movsl
mov
xchg
xchg
rorb
hlt
popa
jmp
push
fs
inc
pop
ja
lcall
andl
sub
test
mov
adc
pop
lret
push
test
jle
pushf
cmp
bound
rcl
adc
xor
mov
sub
mov
mov
mov
mov
gs
int3
shl
pop
xor
mov
imul
repnz
div
cmc
ror
fbstp
nop
fmul
mov
pop
lods
je
cmp
sbb
mov
fs
ss
insl
adc
adc
mov
adc
hlt
pop
scas
filds
outsl
sbb
insl
test
mov
cltd
pop
stos
adc
out
and
cld
sub
shrb
mov
imul
dec
mov
je
rorl
mov
repz
test
ja
and
outsl
enter
push
sbb
pop
xchg
pop
mov
and
out
addr16
ret
sub
test
fisubrl
push
out
imul
or
stos
mov
lock
mov
fisubl
push
push
sbb
test
xor
and
ljmp
mov
push
adc
jmp
daa
inc
aad
sub
jb
add
cltd
xchg
test
sbb
cmp
inc
push
notl
jecxz
test
cmp
dec
jne
fdiv
mov
push
jg
xchg
sub
push
aas
mov
add
js
and
jmp
fsubrs
inc
mov
in
push
inc
jp
or
and
dec
add
jecxz
les
jae
push
mov
dec
add
sbbl
dec
pop
push
out
jg
xchg
dec
sbb
inc
cli
jmp
xor
test
mov
sarb
es
divl
xchg
scas
xor
les
mov
xchg
fs
cmpsl
xor
fiaddl
test
sub
ljmp
cmp
xlat
inc
mov
fwait
je
mov
adc
pop
lret
icebp
rorb
decl
lret
pusha
sti
ret
ds
aam
mov
stos
lahf
dec
mov
pop
repz
es
ret
jo
push
scas
lsl
dec
cmp
in
adcb
sub
repz
sti
idiv
xchg
dec
ds
rclb
das
loop
sbb
jne
xchg
cmp
inc
xchg
rcrb
mov
push
jp
or
inc
sbb
cmpsl
ficompl
jns
sbb
ljmp
sar
shll
ds
push
adc
add
dec
sbb
cmp
mov
js
addr16
dec
and
xchg
mov
ja
ret
iret
fsubl
sbb
pusha
mov
shr
mov
es
in
test
xlat
and
xor
add
fwait
adc
jno
mov
in
pop
out
and
fwait
lahf
push
adc
push
outsl
or
mov
ljmp
mov
push
jbe
scas
psubb
shll
mov
negl
adc
push
imul
push
mov
jp
xorl
dec
out
ds
dec
loope
xchg
mov
loope
das
inc
hlt
mov
das
test
jg
mov
xor
inc
dec
movsb
cmpb
scas
ss
aas
mov
addl
addl
cmp
mov
jns
mov
fsubs
jmp
sub
into
xorb
adc
insl
sub
xchg
mov
or
jmp
mov
mov
and
data16
popf
jle
rcrb
and
push
lsl
push
mov
test
cmp
cmc
test
out
mov
mov
les
loope
pop
and
aad
sbb
mov
popf
sub
pop
aam
fadds
mov
adc
icebp
adc
mov
dec
push
subb
mov
mov
test
cld
xor
lock
lock
push
movsb
pop
add
subb
es
mov
inc
hlt
lods
mov
or
mov
inc
pop
test
rcrl
pop
sbb
push
mov
xor
cmpsl
sbb
outsb
push
or
data16
cs
pop
push
imul
fbld
fsubs
pusha
jb
pop
xor
sbb
dec
jp
dec
pop
ss
and
orb
push
xor
bound
out
inc
add
adc
dec
sbb
adc
mov
mov
push
iret
fldcw
jle
iret
addr16
jmp
loop
adc
mov
out
or
or
lcall
inc
popf
xor
enter
fadd
clc
push
pop
xor
push
arpl
fbld
adc
jge
pop
stos
and
push
sbb
jb
cmpsl
iret
rclb
or
outsl
lret
lds
fs
jl
adc
push
popa
jo
add
and
ja
in
mov
lock
pop
test
shll
inc
in
fcomps
sbb
adcl
fdivp
push
fildl
out
pop
jl
push
cmp
mov
pop
aam
pop
mov
inc
adc
mov
mov
cmp
insb
test
nop
stc
add
ds
test
outsl
notl
movsl
push
or
insl
arpl
fcmovnbe
gs
inc
cmp
xchg
lcall
inc
jge
push
pop
add
test
lret
aaa
loop
or
and
or
ja
push
cwtl
call
negb
es
rdpmc
pusha
repnz
xchg
call
ljmp
mov
je
paddusb
push
adc
jb
add
nop
sbb
inc
cld
test
or
int
and
lock
fcoml
inc
pop
or
orb
pop
ja
mov
jns
pop
sub
push
dec
xchg
inc
sbb
mov
adc
ss
xchg
or
gs
push
lahf
mov
imul
pop
mov
rorl
sub
lods
mov
push
lcall
push
dec
mov
cs
cs
in
fdiv
fs
xor
mov
rorb
fidivrl
pop
sbb
jmp
add
push
xchg
nop
mov
iret
cli
sbb
jo
push
cmpsb
lahf
or
pushf
das
pop
in
adc
sbb
push
mov
xor
add
and
mov
push
shl
sbb
ds
dec
aas
cmp
movups
pop
cmp
pop
popa
add
loopne
dec
out
call
pop
clc
aaa
stos
push
inc
scas
xchg
ret
frndint
or
adc
jbe
std
mov
ss
js
stc
adc
cli
nop
test
lret
aaa
out
fs
pop
loopne
jo
shl
xchg
outsw
mov
jecxz
pop
inc
xchg
int
add
push
loope,pt
subl
mov
cmp
scas
in
mov
arpl
pop
pusha
pop
scas
xchg
test
or
notb
push
pop
xchg
jmp
popa
mov
cltd
and
cld
sub
and
popf
lds
out
jne
cmp
pop
fnsave
sbb
adc
and
jno
adc
popf
mov
pop
mov
and
out
and
or
and
or
into
lock
bound
cs
mov
pop
pop
fcoml
jl
bound
mov
gs
out
dec
mov
mov
cmp
subl
frstor
clc
sub
aad
loopne
inc
icebp
mov
ret
pop
jg
jbe
outsb
scas
loope
hlt
or
aam
rcll
fucomi
loop
outsl
out
mov
adc
xor
jbe
ds
mov
mov
and
adc
and
pop
lock
xor
and
mov
mov
push
je
mov
cmpsb
cs
dec
cmpsb
mov
jg
sbb
js
mov
jbe
pop
mov
push
in
add
repz
add
std
flds
add
das
ds
mov
inc
sub
fs
add
and
and
lea
pop
jo
xor
dec
adc
subb
jbe
popa
stc
xchg
mov
out
std
sbb
mov
jae
mov
ss
and
ret
repnz
pop
and
sti
out
jo
jne
mov
sbb
jne
std
jb
add
loope
enter
test
dec
es
rolb
cmc
int3
dec
xorb
cmp
pop
sbb
outsl
ja
loope
andb
data16
xor
sub
sti
inc
fdivrl
cs
add
in
mov
cmp
cld
aaa
loopne,pt
xor
cmp
and
das
dec
xchg
mov
push
aas
hlt
sub
push
fidivrs
ret
or
xchg
ja
mov
xchg
int
xchg
nop
data16
dec
inc
xchg
pushf
movsb
sbb
lods
cmp
jp
pop
dec
or
insl
jge
std
dec
dec
scas
or
and
cli
lret
clc
xchg
pop
hlt
repnz
add
mov
addr16
test
dec
mov
pop
cmp
lret
notb
test
mov
fisttpll
inc
sub
add
test
aad
xor
pop
dec
call
ja
xor
scas
pop
or
imul
or
in
stc
imul
insb
push
imul
adc
imul
mov
xchg
pop
out
fdiv
jne
jecxz
inc
cld
sub
adc
pop
adc
iret
aam
arpl
cmp
inc
mov
push
jb
arpl
inc
sub
push
into
hlt
and
es
cmp
adc
icebp
add
pop
inc
imulb
pop
inc
test
lcall
data16
test
shll
daa
add
das
aaa
dec
inc
ss
cli
loope
jg
cmc
test
push
sbb
popa
aas
jge
mov
pop
mov
push
sub
popa
inc
jne
xchg
repnz
lea
dec
pop
mov
cmpsl
cli
mov
cld
rorl
addb
push
loop
sbb
scas
and
dec
scas
sub
or
out
loop
add
or
jmp
inc
add
push
inc
inc
aaa
inc
js
cmp
inc
mov
xor
or
jae
fisubl
mov
push
loop
xchg
xchg
pushf
js
js
xor
aaa
sbb
push
ret
push
sub
or
xchg
aad
mov
clc
aam
pop
fdivs
adcl
outsl
vmaxps
dec
pop
rorl
xor
or
jmp
fs
mov
iret
mov
loop
fstl
mov
addb
push
push
mov
sub
das
rcr
mov
out
jle
or
mov
test
add
or
pusha
inc
jp
ret
ja
inc
xlat
add
and
in
lods
ljmp
and
and
out
popf
push
popf
xchg
cli
daa
push
mov
pop
loop
push
and
mov
test
sub
aad
jge
orb
jnp
adc
test
lahf
inc
xlat
sbb
out
popa
lcall
pusha
xlat
rolb
fildl
xor
add
daa
dec
das
adc
pop
mov
in
ja
sbb
dec
push
cmp
clc
hlt
in
scas
js
jns
xchg
xchg
sbb
daa
clc
gs
pop
xorb
clc
xor
mov
sub
push
add
aam
test
enter
rcll
nop
mov
sbb
add
jp
mov
push
mov
subl
fs
mov
fsubrl
into
add
es
xchg
fnstsw
in
or
mov
lret
sub
mov
sub
xor
es
inc
nop
inc
push
divl
pop
cs
mov
test
sbb
inc
popa
pop
add
xlat
jnp
and
xchg
push
popl
fucomi
mov
in
lea
inc
pop
sub
call
cmpl
mov
roll
insb
sub
addl
xchg
jl
je
mov
enter
adc
add
dec
mov
jecxz
sahf
stos
pop
sbb
pop
gs
dec
scas
adc
inc
cmp
ret
sbbl
xlat
inc
shrb
sub
jno
mov
mov
mov
js
jnp
std
das
and
movsl
mov
outsl
shrl
or
mov
adc
mov
inc
mov
pop
mov
cmpsl
mov
rolb
xchg
mov
call
mov
call
shl
pushf
lcall
adc
jp
lret
sbb
sub
or
cmp
adc
jo
mov
aas
dec
fnsave
mov
inc
lret
imul
cli
jns
cmc
ljmp
inc
mov
jae
and
xchg
mov
test
adc
xchg
popf
bound
outsl
cmp
sti
or
mov
clc
ss
addl
sbb
push
mov
js
pop
out
mov
das
icebp
push
lcall
dec
or
xor
cld
rclb
out
stc
mov
jb
mov
sti
imul
test
push
iret
pop
out
and
sahf
inc
or
arpl
inc
inc
mov
adc
and
or
lret
push
popa
adc
cwtl
inc
dec
adc
sahf
push
ja
cmp
ret
std
sti
pop
dec
sub
and
inc
add
xor
jne
push
nop
nop
loopne
sbb
loopne
ret
or
jns
pushf
mov
test
pop
inc
popa
testb
leave
jg
dec
pop
inc
xor
shr
cmp
in
cmp
adc
int
mov
stc
pop
mov
aad
dec
push
jl
dec
or
stos
jbe
push
aas
js
pop
repz
xchg
cltd
pop
ret
pop
stos
iret
aaa
cmp
dec
fidivl
lock
in
add
iret
jecxz
stos
adc
adc
xchg
add
adc
inc
or
push
mov
clc
lock
jecxz
push
mov
repz
push
cmp
cld
inc
repnz
ss
lea
jecxz
loop
xchg
pusha
xchg
inc
incl
sub
test
rclb
loope
loopne
ss
jne
dec
fs
ret
mov
mov
sbb
shr
ja
pop
ret
sahf
sar
adc
fisttpll
flds
cmpsl
mov
aam
imul
push
sbb
out
clc
movsb
xor
inc
push
in
aaa
hlt
out
incb
inc
das
clc
mov
add
imul
mov
jl
scas
addb
mov
pushf
int
rorb
pop
int
xchg
or
add
mov
cmc
and
inc
mov
mov
add
jmp
icebp
loop
cmpl
jg
adc
cs
pop
mov
hlt
adc
shl
ret
or
leave
jg
adcb
mov
xor
cmp
daa
and
iret
aad
cmpsl
mov
das
gs
popa
test
shll
sbb
inc
rorl
mov
fisubs
mov
ret
mov
sbb
dec
pop
fdivr
mov
and
inc
aas
pop
mov
and
jecxz
push
inc
das
add
fwait
loope
xor
outsl
pusha
inc
xchg
jae
jl
xchg
nop
sbb
mov
insb
pop
test
inc
push
jp
lock
push
mov
dec
sbb
or
sbb
out
ret
cmp
xor
pop
push
in
into
inc
insl
pop
or
loopne
sbb
loope
ret
pop
in
sbb
inc
ret
cltd
push
lods
leave
fisubl
ret
adc
cltd
fwait
push
jecxz
add
mov
adc
push
cmp
fcmovnb
aad
test
adc
mov
sbb
sbb
mov
sbb
arpl
leave
mov
or
daa
call
jns
mov
sti
stos
mov
arpl
insb
inc
cmp
push
dec
and
xor
std
pop
pop
aas
mov
cmp
pop
pop
sub
push
jge
pushf
sub
xor
adc
push
movsb
ret
inc
ljmp
jno
add
adcb
push
inc
popl
and
sbb
mov
aam
cmpsl
inc
cmpl
mov
push
xor
add
je
lret
pop
clc
std
loop
aam
cmpsl
jae
xchg
add
xchg
test
push
sub
into
in
add
subl
cli
mov
in
push
mov
mov
or
popf
push
sub
in
inc
sbbl
jmp
shrb
cmpsl
mov
and
push
mov
out
add
mov
stc
and
rclb
xchg
ror
inc
cmp
mov
inc
jmp
and
jbe
inc
aad
mov
aam
or
std
xchg
dec
aaa
ret
jne
stos
lcall
jmp
lods
xchg
adc
adc
fsubs
sub
or
fstpl
mov
mov
test
lds
fdivp
inc
dec
stc
es
fwait
xlat
ds
mov
xor
cmp
pop
cmp
cmp
mov
inc
or
mov
xorb
lea
sub
scas
mov
fs
cmp
sahf
lret
loop
mov
cmp
jns
jmp
push
negb
add
je
enter
xor
loop
andb
jp
add
into
inc
out
and
out
add
daa
outsb
fimull
cmovno
sbb
pop
cmp
lcall
cwtl
pop
dec
pop
jmp
lods
in
push
mov
imul
hlt
dec
sbb
mov
clc
cmp
sub
lahf
fisttpl
gs
stos
lock
ljmp
flds
and
dec
pop
add
fisubrs
sti
cli
adc
lock
ja
xchg
mov
hlt
mov
in
hlt
xchg
call
cs
mov
dec
stc
or
inc
xchg
xorb
adc
add
repnz
loop
pop
adc
adc
loope
mov
test
hlt
int
in
and
or
pusha
mov
fisttpll
ret
call
adc
mov
call
lock
xchg
push
xor
adc
loop
xchg
mov
pop
mov
aad
pop
xchg
test
sbb
xor
lret
ss
negl
xlat
repz
je
push
mov
add
push
scas
ret
mov
jmp
mov
adc
xor
sub
jl
or
leave
add
or
movsl
push
xchg
loop
cmp
inc
inc
popf
scas
dec
lret
push
cli
mov
repz
lret
xor
cmc
inc
mov
add
mov
jp
rcrb
rorl
outsl
out
add
icebp
je
xchg
cld
pop
sahf
fiaddl
sub
rclb
rcll
aas
inc
cmp
xchg
pop
pop
mov
mov
shl
rcll
cld
adc
adc
lcall
dec
pop
pop
jl
fsubr
xchg
subl
in
push
xorl
sub
or
shl
pusha
les
in
jnp
mov
dec
test
push
adc
stos
dec
push
pop
lret
cmpsb
lret
push
and
sbb
push
test
and
sub
mov
sub
pcmpeqw
add
jbe
inc
sbb
xchg
jg
cld
or
fbstp
pop
mov
imul
arpl
xor
push
xchg
cltd
pop
mov
pusha
jle
sbb
jle
icebp
jbe
xchg
mov
roll
idivl
sbb
add
mov
lock
lret
out
movsb
fsubr
mov
scas
inc
test
mov
dec
xor
daa
adc
pusha
xchg
cltd
mov
clc
lods
pop
aad
ja
cmp
xchg
mov
jns
mov
xor
xlat
ret
lock
in
or
sbb
mov
sbb
inc
scas
pop
in
out
lret
ss
push
int3
incb
sbb
popa
cmp
dec
or
fstl
add
lahf
fs
push
or
jmp
out
gs
es
xorb
fsubl
daa
push
mov
outsl
jg
rol
xchg
leave
mov
repnz
jecxz
dec
sahf
shlb
aas
sar
pop
xrelease
les
inc
testl
repnz
push
sbb
std
adc
cli
jmp
push
push
jb
jecxz
mov
mov
ret
jne
aaa
faddl
sbb
in
ret
sub
cld
push
cwtl
or
mov
cmp
dec
outsl
inc
std
push
ret
sub
call
lods
add
jl
daa
sti
rol
mov
xor
mov
decl
ja
push
pop
insl
xor
and
hlt
sbb
repz
mov
jcxz
call
lret
sbb
jno
or
pop
sarl
lcall
cld
jle
outsl
mov
in
loopne
push
cmc
push
add
mov
or
and
fdivs
inc
movsb
clc
push
lcall
and
xchg
xchg
pop
push
lcall
sub
sbb
and
xchg
or
pop
push
xor
sub
cmp
pop
pusha
pop
pushf
pop
sub
mov
lret
movsl
hlt
push
cmc
mov
aam
mov
je
inc
cmpsl
pop
aad
push
rcrl
les
sub
ror
mov
and
sti
dec
clc
ficomps
mov
ss
stos
cmp
loope
and
push
loopne
add
push
adc
mov
mov
and
pop
cmpsb
in
xlat
add
loope
and
fstl
jo
cmp
ss
shlb
adc
or
push
and
xchg
xchg
xor
test
lahf
repz
ja
or
push
jae
cwtl
or
or
mov
jle
cmp
scas
sbb
gs
and
pop
mov
pop
fildl
ljmp
cmpl
adc
mov
fidivl
sahf
cwtl
icebp
popf
imul
addr16
push
dec
cs
pushf
psllw
inc
ror
pop
cli
add
int
and
inc
std
jmp
dec
test
jae
sbb
mov
mov
ss
sti
dec
fdivrl
cmpsb
jno
scas
cmpsl
and
cltd
ljmp
inc
ror
add
popf
lahf
push
inc
xor
jb
cmp
inc
mov
mov
jl
ds
test
sub
inc
sub
mov
mov
jg
and
pop
das
mov
adc
jo
fs
mov
cwtl
out
je
lods
inc
inc
popf
mov
dec
fidivs
pusha
inc
sbb
insb
push
fiaddl
jg
sub
inc
adc
mull
inc
out
push
dec
dec
push
cwtl
xor
push
pop
jg
mov
shrb
mov
or
add
stc
shr
test
lret
pop
out
loop
nop
lahf
push
call
mov
mov
push
cmc
dec
std
mov
popa
aaa
inc
bound
pop
jp
enter
and
out
sbbb
xor
jg
shr
mov
mov
dec
pop
pop
mov
sbb
aaa
mov
xor
and
test
cmp
mov
imul
and
sub
cmp
lock
and
aaa
jge
inc
aad
add
stos
test
in
test
inc
in
pop
push
xor
js
mov
lcall
decb
pop
out
jb
jle
pop
fnsave
outsl
pusha
xlat
cmp
jo
sarb
pcmpeqd
cmp
adc
add
xor
gs
sbb
mov
inc
xor
mov
int3
xchg
cmp
mov
les
stc
daa
icebp
inc
aaa
jle
mov
cmp
testb
mov
push
in
pop
xchg
dec
inc
call
cmp
jmp
or
jecxz
pusha
ds
lcall
orl
out
add
scas
scas
push
ds
aad
imul
test
cltd
bound
inc
mov
pop
sti
hlt
ja
sbb
test
loop
mov
iret
in
daa
xchg
aad
and
xchg
int
rcl
sub
pop
jae
adc
fdivr
inc
iret
ret
loopne
push
outsl
or
scas
outsl
adc
cmp
lret
cmpl
and
push
sbb
out
add
sbb
clc
inc
cltd
cmpsb
jecxz
jp
mov
pop
inc
push
mov
mov
or
das
adc
mov
jmp
jns
xchg
cmp
insl
xchg
and
add
sub
mov
out
fsubs
movsl
adc
in
adc
mov
movsl
mulb
inc
sbb
mov
dec
or
pop
stos
aaa
adc
out
add
lret
movsl
jbe
fldlg2
mov
sub
lret
pop
fdivrp
cmp
mov
add
lea
mov
xchg
fwait
pop
pop
bound
insb
or
rorl
push
jmp
fadd
inc
outsb
jo
push
fmull
es
and
mov
lods
xchg
xchg
mov
mov
enter
insb
push
mov
lods
aad
or
and
mov
aas
add
enter
stos
imul
cmpsl
mov
ret
out
test
or
add
adc
xchg
xorl
jp
jo
jne
mov
imul
or
loope
lock
lods
data16
or
or
push
imul
loop
pusha
in
and
mov
pop
je
loope
jnp
insl
xchg
leave
loopne
mov
sar
lret
mov
mov
dec
aad
mov
fwait
js
enter
mov
mov
add
and
test
push
mov
lahf
mov
hlt
jne
adc
jae
rorb
shlb
dec
rolb
cli
mov
mov
pop
mov
stos
inc
lret
xchg
xchg
mov
mov
fistpll
fsubr
testb
fimuls
adc
xchg
orb
imul
xchg
sti
or
les
cmp
rcrb
xchg
mov
outsb
je
jg
push
int
fisttpl
js
xor
cli
call
movsb
adc
mov
adc
pop
iret
lods
int3
pop
fimull
fdivs
in
or
cwtl
xchg
loop
add
push
dec
jle
push
pop
inc
dec
xchg
daa
pop
fmuls
add
aaa
shl
cmp
mov
pusha
insl
lds
lret
jns
mov
jmp
sbb
inc
xor
mov
aas
bound
sub
jno
sbb
cmp
movsb
mov
rcrb
push
imul
sub
lock
mov
repz
fcompl
jbe
xor
testb
fistpl
lret
push
sub
popa
cmp
test
add
jle
pop
xchg
push
data16
rorl
les
int
jl
fucom
add
cwtl
xchg
mov
ljmp
adc
cltd
pop
mov
pop
out
pop
xadd
add
pop
adc
push
mov
jnp
test
mov
test
in
sbb
mov
sub
stos
js
or
into
fcomps
ljmp
in
clc
adcb
inc
mov
ljmp
mov
xor
or
repnz
xchg
into
je
mov
fisttpll
or
jno
cmp
jmp
fidivl
mov
mov
pusha
or
loop
imul
in
or
add
fadds
testl
jmp
out
pop
mov
notl
loope
lods
add
jno
jne
xchg
pusha
pop
push
std
push
imul
pop
jecxz
or
les
inc
mov
mov
dec
xor
sar
jbe
or
cmpsl
jg
dec
cmp
scas
or
js
ljmp
pop
bound
loope
je
mov
fnstsw
in
dec
and
dec
and
dec
ret
fiadds
jg
mulb
cld
nop
mov
fsubrs
pusha
enter
in
in
std
mov
sbb
cs
in
imul
sti
jge
iret
mov
adc
imul
fs
lcall
lcall
inc
dec
or
push
inc
subl
jbe
out
lret
adc
test
sub
cmp
mov
cmp
lret
jp
inc
jnp
cld
inc
rolb
inc
popa
cmp
mov
add
cmpsl
push
sti
adc
push
push
outsl
dec
push
mov
insb
std
and
fdivrl
pusha
or
cmpb
lret
dec
ljmp
test
or
sar
or
cmp
jbe
insl
dec
cmp
push
sahf
lahf
das
cld
adc
andb
sti
inc
xor
pop
jb
xor
andl
enter
shl
or
inc
fldl
js
sarb
minps
adc
out
stos
scas
aaa
pop
mov
addl
inc
rcrl
lods
xor
stos
mov
sub
jmp
fisubrs
push
data16
add
stos
dec
inc
push
and
cmp
cmp
xor
adc
pop
mov
fisttps
xchg
cmp
loop
in
inc
pop
fldt
out
clc
mov
inc
js
in
sbb
lea
xchg
mov
dec
jl
cwtl
pop
xchg
push
mov
ret
mov
xor
push
sbb
pop
in
fildl
push
or
test
dec
in
cli
mov
cmp
pop
pop
push
das
xchg
mov
mov
adc
hlt
or
mov
sub
mov
mov
sbb
aad
sbb
roll
test
ss
add
ss
lahf
lods
mov
out
clc
prefetcht2
iret
ret
add
ss
aad
sub
movsl
xlat
and
sub
jmp
insb
and
inc
xor
dec
add
aaa
aam
popf
mov
push
or
nop
pop
jecxz
jne
clc
cwtl
cmc
sub
fcoms
popa
mov
jge
push
or
xor
xchg
jmp
mov
adc
add
mov
and
sbb
repnz
push
dec
jne
cmp
outsl
or
lcall
sub
mov
lods
push
shl
sbb
andl
mov
fidivrs
leave
movsl
cmp
call
pusha
mov
add
shlb
rorl
jecxz
arpl
add
adc
add
cs
sub
insl
inc
loop
mov
sahf
jl
scas
dec
mov
and
std
xchg
add
dec
loopne
mov
adc
jbe
push
and
jno
mov
pusha
xchg
pop
xorb
push
mov
inc
jo
dec
flds
aam
push
cld
aad
lcall
mov
stos
popa
lock
daa
mov
mov
cmp
mov
push
ds
outsl
daa
mov
mov
mov
push
mov
lea
sbb
in
mov
mov
adc
adc
cmp
fdivl
test
hlt
add
inc
cmp
mov
dec
push
mov
mov
std
pop
out
xor
xor
push
adc
cmp
fstps
in
pop
incl
add
lahf
and
sar
insl
cmpl
inc
or
test
inc
jns
fisttpll
scas
pop
push
aam
push
invd
adc
mov
dec
jne
inc
hlt
sbb
loop
repnz
inc
rcrl
inc
aam
cmp
imul
repz
ja
shrl
lds
rorl
xor
push
or
xchg
mov
cs
in
adc
mov
imul
cmpb
mov
and
or
dec
je
add
pop
ja
cld
lret
push
mov
jmp
sub
mov
sbb
lcall
aaa
mov
cmp
cwtl
daa
cmpsl
cs
xor
fadd
std
cmpsb
ret
xor
mov
inc
sbb
sbb
pop
cwtl
cmp
push
fiaddl
cmpsb
pop
ret
fsubl
xlat
xchg
ret
jne
aaa
fcmovb
add
repz
jo
dec
pop
and
aad
movl
dec
call
repz
ds
pop
idivl
pop
lahf
and
lock
das
adc
inc
cld
cmp
and
loopne
sbb
fldt
pop
jge
rorb
addr16
imul
push
loopne
aas
test
inc
and
xchg
xchg
or
mov
out
sbb
test
jl
sbb
fdivr
fisttpl
js
push
sub
movl
rcrb
mov
ljmp
fldt
xchg
arpl
mov
cmc
mov
clc
mov
xchg
mov
fsts
dec
cmpsb
jbe
test
ja
xor
inc
jae
mov
rcrb
imulb
shr
and
daa
aad
mov
loop
out
inc
pop
jo
ret
pop
inc
inc
adc
repz
aaa
sub
idivl
adc
mov
rorl
outsb
xor
fdivr
lds
jle
inc
in
pop
movsl
jb
pop
lods
out
push
xlat
xchg
in
in
or
call
sbb
cmp
negl
mov
pop
sbb
ret
cmp
add
scas
or
pop
jge
adc
jmp
test
filds
pushf
or
fcomps
js
and
jp
out
std
fwait
xor
jns
sub
mov
adc
or
sbb
icebp
xchg
jg
inc
inc
cmp
fcmovb
and
cli
loop
push
add
xor
int
adc
outsb
insl
adc
cs
add
mov
shlb
add
dec
loope
in
add
inc
dec
inc
pop
jmp
xor
jb
inc
popa
sub
lret
mov
cmpb
in
inc
adc
add
dec
lds
jge
clc
mov
aam
int
push
test
inc
sub
in
sub
sahf
in
jp
add
out
xor
mov
addl
pop
inc
mov
aas
push
jmp
lods
daa
rol
cmp
cmp
outsb
xchg
stos
xor
sbb
xor
loopne
mov
aas
dec
push
mov
stos
jmp
in
jno
cmp
cmp
inc
inc
repz
mov
test
fdivrs
out
pop
mov
lea
int3
sub
mov
std
daa
push
xor
leave
mov
std
and
ljmp
repz
push
stos
aaa
jle
push
add
and
iret
incl
stos
inc
addr16
iret
xor
mov
clc
outsl
xchg
push
scas
or
push
xor
or
jb
roll
add
inc
dec
je
or
pop
mov
repz
mov
shll
mov
xor
dec
or
pop
xlat
daa
rcll
dec
shlb
hlt
out
jo
leave
inc
in
sub
or
test
mov
jo
inc
cli
jecxz
std
rcrl
in
inc
mov
sub
mov
cmp
pop
jecxz
fs
jmp
jecxz
jecxz
and
cmp
push
inc
push
or
in
mov
outsl
jne
testb
jnp
push
sub
dec
lock
test
movsb
mov
out
xchg
push
test
jmp
imul
bound
adc
insb
les
ficompl
xchg
and
sbbl
imul
movsl
mov
ljmp
mov
sbb
js
mov
subb
pop
jne
add
cmpb
jmp
pop
cmpsb
mov
aad
xor
rcrl
mov
bound
fisttpl
pusha
mov
adc
pop
mov
mov
pop
sti
pop
loope
xor
call
insb
insb
fisubl
ja
clc
je
push
decl
xchg
xchg
jnp
inc
lcall
inc
pop
add
mov
sarl
sub
jo
bound
push
outsb
jg
add
icebp
sbb
lods
mov
cmp
out
mov
ljmp
push
in
rcrl
inc
mov
cld
pop
pop
shrl
xor
les
stos
mov
ljmp
pusha
lods
xor
jns
ds
stos
sbb
lock
xchg
andb
inc
mov
jbe
mov
sahf
mov
or
addr16
scas
nop
cs
xor
test
scas
fimull
mov
andb
push
or
push
and
lahf
aam
incl
push
sbb
sbb
test
jb
test
cs
mov
xchg
adcb
xchg
xor
scas
cmp
adc
and
pop
mov
out
ljmp
adc
rcrl
lea
adc
leave
repnz
xor
adc
or
xor
mov
jb
jae
lcall
inc
cmpsl
pop
cwtl
mov
shll
stos
sahf
mov
cwtl
jmp
adc
add
movsb
mov
pop
dec
xchg
xor
xchg
xchg
sbb
and
pop
dec
dec
cmpsb
or
out
mov
je
repnz
dec
xchg
add
mov
aaa
insl
or
or
xchg
mov
aad
decl
push
mov
cmp
pop
sti
jmp
xchg
jg
sub
cmp
dec
bswap
cmp
sub
adc
insb
mov
dec
mov
movsl
add
in
je
mov
cmp
dec
mov
test
sub
clc
arpl
stos
test
and
xlat
stos
or
movhps
push
sbb
mov
inc
and
inc
call
xchg
fldl
enter
js
mov
xchg
pop
inc
sti
add
and
ret
sub
mov
or
es
mov
mov
roll
dec
aad
ret
adc
mov
mov
and
mov
sti
ret
xor
sub
mov
sub
lcall
xor
pop
push
lret
cld
add
add
sbb
adc
sbb
lret
push
mov
ljmp
jmp
push
add
add
es
loope
sahf
mov
jmp
loop
addl
push
push
pop
mov
xor
jge
lea
mov
pop
clc
adc
add
push
dec
fldcw
sarb
test
repz
add
mov
dec
roll
cmp
mov
push
or
aam
cltd
aad
inc
inc
ja
clc
iret
mov
shl
repnz
jmp
scas
jbe
push
std
iret
sbb
into
sbb
fwait
mov
or
sti
xor
lods
mov
cmp
xorl
mov
or
js
mov
xor
push
push
cmpsl
sbb
mov
or
aas
xchg
cmpsb
das
sahf
dec
add
int
stc
and
push
rorl
xchg
aas
sub
adc
lret
mov
mov
subl
lahf
cmpsl
push
nop
ss
pop
mov
jmp
add
shl
movsl
or
pusha
mov
adcb
xchg
xchg
shll
jno
pop
pop
mov
mov
jo
gs
adcb
outsb
pop
or
dec
cs
loope
stos
and
and
jo
clc
or
popa
in
rcrb
insl
add
cmp
and
add
fwait
xor
mov
popf
jb
das
ja
dec
mov
pop
rclb
jns
mov
scas
pop
push
or
idivl
xor
jns
jle
lods
push
cmp
xor
gs
ljmp
jp
outsb
bound
out
lret
mov
pop
push
int3
ret
test
inc
pop
mov
mov
nop
add
adc
repz
out
dec
inc
andb
andb
negb
and
cwtl
mov
pusha
lock
ja
push
mov
cli
mov
mov
jnp
pop
call
mov
mov
mov
bound
mov
test
inc
adc
mov
and
mov
cli
loope
jmp
test
bound
shlb
mov
push
xchg
mov
sub
mov
or
mov
mov
pop
xor
aas
xchg
imul
daa
les
fs
mov
inc
ds
push
xor
and
repnz
mov
imul
bound
push
cmpsl
xchg
mov
push
mov
mov
add
mov
cltd
inc
dec
xchg
mov
cs
lahf
sbb
push
test
cmp
adc
sbb
js
or
fstpl
cs
ret
fwait
cmp
incl
arpl
aaa
das
jmp
rcr
jle
movsl
frstor
push
pop
in
jmp
add
jne
mov
dec
xchg
sarl
lcall
mov
test
pop
inc
jecxz
imul
cs
loope
popf
sbb
push
pop
push
push
sbb
insb
insb
scas
sbb
add
roll
fbld
mov
outsb
sbb
cli
push
xchg
dec
jne
sbb
xchg
jno
mov
cmp
and
sub
adc
xchg
jnp
mov
mov
or
out
inc
jo
mov
repz
ds
sbb
add
pop
and
insl
lea
nop
inc
loope
aad
pop
jle
in
pop
adc
cld
fwait
push
add
sahf
pop
ljmp
rorb
imul
popf
xchg
lcall
push
push
sub
cwtl
sti
decl
je
mov
inc
icebp
adc
sahf
and
or
pop
push
jl
mov
ss
lock
loopne
mov
dec
mov
stc
pop
repz
aas
roll
repnz
scas
dec
mov
loope
mov
jl
mov
jae
adc
pop
in
mov
add
pop
popf
cs
sbb
insb
test
aaa
dec
cmp
mov
xchg
cmp
mov
add
sub
push
pop
mov
in
adc
lahf
aaa
sub
fldenv
cmp
inc
sbb
pop
lock
push
pop
enter
pop
xor
sbb
push
test
add
jecxz
loope
fcoms
es
mov
push
dec
adc
aaa
pop
clc
das
xor
push
sub
adc
mov
adc
outsb
mov
xor
stos
mov
shlb
pop
xor
sub
and
and
aam
pop
int3
mov
in
loop
jno
mov
sti
push
rcr
xor
mov
orb
xchg
and
in
pushf
or
jge
mov
push
jbe
mov
inc
mov
pop
js
cmp
ret
adc
adc
pop
push
inc
mov
mov
out
inc
in
daa
mov
push
ficompl
arpl
aas
out
mov
mov
and
xchg
fdiv
fists
xor
fcmove
addr16
test
push
jo
xchg
sahf
mov
loope
cmp
inc
mov
inc
clc
or
cmp
je
inc
rol
pop
adc
mov
adc
dec
lret
mov
scas
mov
xchg
xchg
negb
test
sbbb
pop
aam
inc
pop
icebp
or
and
clc
sub
fwait
pusha
addb
call
push
jl
nop
fstpt
push
ss
add
push
pop
popl
nop
cld
sub
shlb
out
int3
lods
lret
adc
push
icebp
sahf
jo
mov
xor
pop
call
movsb
ret
ds
sbb
fisubs
mov
stos
dec
into
je
mov
sbb
xor
testb
loope
icebp
shl
push
ja
icebp
nop
sbb
cld
rorl
dec
xchg
not
xor
sub
mov
test
pop
push
call
aas
shll
mov
mov
xchg
mov
jl
pop
jbe
dec
sbb
insl
inc
test
sti
sahf
mov
pop
mov
add
stos
loop
mov
fcomi
inc
or
adc
mov
mov
popf
push
outsb
cltd
xor
sbb
mov
sti
inc
jnp
fcompl
lock
js
out
in
rolb
pop
dec
mov
call
or
iret
inc
or
lock
cwtl
cmc
and
inc
xchg
dec
push
mov
xchg
andl
pop
clc
jae
sbb
sub
jp
lea
jae
add
test
icebp
push
pop
loope
jp
in
sub
sub
loope
mov
mov
les
scas
add
sub
dec
xchg
push
addr16
ja
inc
or
subb
pop
rcll
movsb
fmuls
sti
out
dec
in
adc
or
xchg
pop
movsl
jne
inc
xor
push
lods
push
inc
test
ss
adc
cltd
stc
dec
jae
push
out
shlb
mov
mov
int
add
jo
int3
adc
mov
ret
pusha
aam
cmp
sbb
ja
neg
test
gs
push
cmpsb
in
insl
adc
aaa
hlt
sbb
mov
jno
rclb
lods
shl
icebp
jns
das
pop
jle
mov
shll
inc
xchg
mov
inc
aam
movsb
imul
xor
call
push
jg
jnp
adc
fcompl
dec
rol
daa
mov
inc
and
jg
out
jecxz
rclb
aas
mov
add
mov
outsb
rclb
adc
sub
icebp
add
xchg
xor
xor
jnp
fstl
adc
cmp
xchg
pop
mov
movsb
lods
icebp
sbb
bound
jmp
out
out
test
iret
push
fcoml
repz
in
mov
lock
clc
adc
callw
pop
in
fsubrs
in
ret
clc
push
mov
mov
cmp
cmp
mov
dec
adc
push
push
int3
rcl
or
ja
enter
dec
add
ja
lds
ret
or
jno
inc
outsl
lock
push
imul
pop
sub
adc
movd
xor
hlt
in
cli
jmp
sbb
cli
ja
ret
mov
or
add
fld
push
pusha
mov
push
mov
pop
hlt
mov
and
int3
aas
jl
insb
fsts
mov
orb
adc
push
cld
popl
inc
aad
fcoms
push
lea
xchg
ss
icebp
lahf
cmp
inc
sub
outsb
push
test
outsl
loop
fistl
inc
push
or
sub
sub
sbb
imul
sti
mov
adc
xchg
lcall
pop
mov
mov
and
and
adc
xor
mov
ret
jo
nop
jo
or
nop
cmp
cmpsl
aas
jecxz
mov
mov
clc
dec
push
jo
pusha
into
pop
mov
xor
adc
add
mov
push
jb
outsl
ret
cli
aaa
mov
and
sub
hlt
movsl
mov
adc
ficompl
cmovbe
jl
inc
pusha
bound
mov
jmp
scas
or
in
xorl
das
jno
push
and
xchg
cmp
gs
fisubrl
inc
pop
inc
adc
cmpsb
daa
inc
pop
cltd
mov
push
mov
and
loope
jne
ret
and
push
out
outsb
cli
mov
push
or
dec
xor
in
es
mov
sti
add
std
into
xchg
ljmp
shl
sbb
testb
andl
fimuls
and
fisttps
sti
sub
adc
xor
xchg
imul
outsl
and
jne
stos
add
movsb
imulb
ds
pop
mov
or
outsl
inc
loope
aaa
mov
mov
mov
dec
push
es
pop
leave
leave
dec
lods
pop
les
outsb
shl
or
push
addr16
inc
push
mov
repnz
cli
mov
push
clc
mov
mov
into
sti
scas
adcb
sbb
fsubr
les
jp
and
jg
add
out
push
scas
addr16
je
popa
mov
lods
fcomip
and
bound
and
sbb
das
loopne
pop
jno
jge
mov
scas
inc
fs
repnz
bound
push
rorl
inc
cmp
and
or
dec
adc
stc
cmp
out
daa
xchg
push
ss
pop
clc
sbb
jbe
not
xorl
cmp
out
aaa
mov
jp
sbb
xchg
cmp
dec
enter
jmp
jecxz
mov
cs
push
mov
mov
cmp
push
inc
pop
push
mov
inc
mov
loope
loopne
adc
icebp
mov
fiaddl
sbb
fdivp
xchg
arpl
or
xchg
scas
mov
xor
add
adc
sub
push
xchg
adc
mov
shrb
out
jmp
sbb
imul
out
mov
pop
adc
lock
lret
sbb
ja
push
jg
mov
and
fidivrs
mov
and
pop
add
xchg
pop
pop
iret
mov
push
arpl
mov
jl
fldl
aas
adcb
or
aas
adc
mov
daa
scas
lret
gs
ret
cwtl
add
int
push
mov
mov
jle
shl
mov
or
push
fcoml
stc
or
sbb
nop
xor
xchg
jns
arpl
and
mov
mov
cmp
push
ret
sbb
shlb
xchg
push
aam
add
inc
jecxz
push
xchg
movsb
into
adc
inc
les
mov
cmp
ja
rorb
adc
lea
xchg
cs
call
je
cs
imul
clc
mov
popa
in
cmp
push
rcrl
dec
jl
dec
inc
scas
push
mov
dec
pop
push
ss
jae
push
std
cmp
dec
xor
mov
clc
jb
scas
mov
cmp
rorl
cmp
push
enter
mov
xor
les
adc
fwait
rcrl
push
lds
es
pop
jmp
mov
pop
add
add
xor
bound
inc
rcrl
fistps
cwtl
movsb
push
inc
mov
mov
push
pop
cmpsl
jnp
fisttps
ds
loop
scas
xor
stc
fistpl
fsubrl
mov
ljmp
pop
cld
call
call
and
jo
or
sti
testl
mov
xor
mov
sub
lock
sub
pop
fdiv
xchg
das
sbb
pop
cwtl
or
ljmp
inc
lret
test
lock
xchg
sbb
lret
sbb
shrb
clc
iret
clc
sti
and
sub
xchg
jns
es
or
dec
arpl
mov
es
pop
lds
test
bsr
notb
enter
and
mov
scas
inc
data16
rolb
jns
std
lods
shl
xchg
push
dec
in
fxch
jmp
int3
out
mov
push
out
in
sbb
push
sub
xchg
cwtl
jae
xor
gs
adcb
sbb
ljmp
xchg
push
aaa
or
adcb
test
insl
cmp
cmpl
pusha
out
flds
mov
push
pop
jmp
and
or
lcall
xchg
cmpb
roll
mov
push
inc
push
daa
push
sbb
and
push
in
xor
cmp
pusha
xor
pop
or
jbe
popf
jp
test
loopne
mov
icebp
popf
jne
inc
aad
xchg
scas
or
fstpl
ss
fidivs
arpl
dec
mov
xor
shrl
mov
pop
decb
or
and
cwtl
and
and
div
das
aaa
rclb
push
jmp
filds
jle
aam
mov
ja
pop
outsl
aaa
dec
clc
sub
aam
push
int
or
aam
movsl
mov
incl
adcb
mov
dec
enter
rolb
adc
mov
fcoml
insb
fsts
cs
mov
pop
leave
inc
xor
test
inc
push
lock
inc
bound
imul
add
ret
lret
cwtl
adc
cmp
ss
fwait
shrb
faddl
insl
jmp
js
push
mov
lret
lahf
mov
cmp
jno
xchg
divb
jp
daa
push
or
ret
cmp
repnz
lcall
into
mov
sbb
xlat
popa
test
hlt
insb
outsl
mov
ret
fimull
sub
jp
mov
in
rcrb
rcll
push
pop
lcall
xor
hlt
int
imul
hlt
fwait
mov
and
sbb
imul
jno
dec
sbb
and
fs
xor
iret
popa
add
pop
or
lret
sbb
fsubrl
loopne
sbb
mov
loop
dec
lods
jo
test
inc
aad
nop
xorl
insl
xor
mov
fisttpll
pop
jl
xchg
nop
jl
test
add
cmpsl
in
sbb
lds
xchg
dec
sahf
movsl
mov
add
std
mov
mov
leave
adc
and
jle
test
loopne
arpl
mov
xor
inc
cmpb
je
push
pop
sub
push
ljmp
jbe
cmpsl
add
or
repz
fiaddl
push
sbb
and
jo
jo
pop
inc
hlt
ret
add
shrl
ljmp
test
mov
lahf
je
ret
insb
loopne
cmpsb
and
in
aaa
jp
push
or
aad
mov
push
jl
repnz
add
or
dec
bound
or
xlat
imul
int3
or
subb
and
pop
notl
stos
xlat
push
fdivr
repz
pushf
lock
ds
test
stc
scas
cs
fisttpll
mov
adc
in
fidivs
lods
sub
loopne
mov
lods
jo
xor
xchg
test
push
or
push
push
enter
punpckhbw
outsl
or
lock
adc
enter
jb
xchg
daa
or
inc
insl
push
or
daa
mov
test
cld
mov
loope
mov
fildl
testl
in
frstor
push
add
or
sub
pop
popa
imul
ret
into
add
adc
add
mov
in
loope
in
inc
lods
inc
outsl
pavgb
jmp
pop
mov
sub
jge
pop
stos
fistpll
stos
or
testl
xlat
rcll
dec
fcomi
and
jbe
shll
insb
mov
adc
aad
bound
xor
pop
fists
mov
cmp
test
imul
sbb
flds
insb
xlat
dec
jb
cld
mov
xor
add
push
out
loope
add
outsl
fidivrs
stos
addr16
mov
lods
out
or
jecxz
nop
add
cmpsl
sbb
rcrl
pop
int
scas
or
test
cli
xchg
push
daa
dec
lcall
test
mov
ja
pop
add
out
cmp
out
jp
jo
or
out
inc
rorl
outsl
fsubrs
mov
arpl
test
clc
in
iret
jb
inc
aad
mov
faddl
adc
outsl
xor
add
mov
decb
jp
or
or
push
dec
push
lods
lds
adc
jae
ret
jge
mov
push
icebp
adc
cmp
psrad
lcall
lea
out
out
popf
xor
ja
cwtl
sbb
rorb
add
and
cli
jo
andb
dec
jae
iret
sbb
fwait
add
test
lea
jae
stos
jmp
pop
xchg
aad
outsl
aas
out
cmp
movsb
inc
jg
lret
testl
sarb
dec
jne
push
jne
arpl
xor
jno
stc
cmp
cli
gs
or
add
filds
orb
add
mov
lods
push
dec
subl
leave
lods
jne
insb
push
int
cmp
adc
add
or
cmp
insb
and
fisubl
icebp
sbb
or
cs
jge
fistl
hlt
lock
pop
jne
push
cmc
rol
sbbl
ret
lods
and
js
ret
sub
sbb
sti
inc
loop
jns
mov
mov
cmpsb
popa
cmp
cmp
enter
shlb
pop
dec
cld
gs
lret
call
xchg
lcall
mov
inc
cli
mov
aam
insb
mov
mov
mov
clc
sub
cld
pop
cmp
pop
scas
pusha
push
dec
insl
test
push
pop
aam
test
stos
movzwl
fiadds
fwait
mov
jo
call
fdiv
in
mov
pop
imul
movsl
jno
dec
adc
pop
sbb
in
dec
aam
daa
dec
movups
pushf
xor
orl
jg
insl
clc
xor
jmp
out
jecxz
cmpsl
iret
fcmovnu
les
sbb
nop
jp
push
jle
push
push
and
dec
loop
in
add
jmp
add
lods
std
push
in
jne
int
iret
das
hlt
outsb
les
shlb
enter
mov
inc
decb
mov
xchg
xlat
ret
scas
loopne
call
or
out
std
stc
cmp
xor
dec
out
sti
fldenv
pop
cwtl
push
push
xor
test
sbbb
mov
js
cmpsl
test
bound
lret
xchg
and
mov
insb
push
cmp
data16
mov
pop
fstp
pushl
je
ljmp
dec
icebp
lds
pop
mov
lods
icebp
jl
sbb
je
popa
arpl
cli
loop
push
push
push
fwait
pop
pop
mov
pop
or
fstpl
jno
cld
sbb
insb
pop
icebp
out
mov
cs
lods
mov
xadd
jne
pop
mov
test
inc
jle
fnstsw
repnz
cs
ljmp
xorb
inc
repz
popf
rorb
mov
pop
push
mov
jle
push
xchg
mov
xor
adc
mov
sbb
test
fildl
add
imul
xchg
rcll
fdivrs
push
scas
jmp
push
push
or
xorb
xorb
jbe
lret
mov
test
lods
es
jbe
xlat
adc
popa
push
xorl
add
daa
push
and
xor
adc
mov
sbb
pop
xchg
pop
lds
test
cli
call
sub
xor
les
add
jg
cmpsl
into
psubsw
adc
and
cwtl
sti
sbb
mov
cmpb
push
mov
pop
inc
xlat
dec
jl
mov
push
lds
push
jae
or
mov
ds
daa
pop
mov
mov
inc
pop
sbb
fisubs
pop
movl
fidivl
xchg
jns
lahf
dec
sub
lcall
xchg
das
rcr
dec
ljmp
and
xor
into
test
faddp
js
push
sbb
outsl
inc
ljmp
dec
ror
cmp
inc
jmp
clc
mov
mov
dec
incl
lock
call
ror
adc
rorb
lahf
je
xchg
sbb
in
push
mov
inc
sub
cmpsl
cmp
push
arpl
repnz
imul
inc
cs
push
inc
or
or
sbb
popl
mov
lock
cs
pop
fcompl
mov
jecxz
cmc
mov
dec
lods
sti
push
fs
xlat
outsb
addr16
jno
fildll
mov
test
sbb
pop
mov
pop
int
addl
pop
pop
pushf
sahf
std
outsl
add
mov
jb
jl
enter
lea
mov
dec
loop
mov
clc
mov
das
sbb
mov
pop
xchg
pusha
in
out
add
pusha
test
pop
push
jmp
cmp
sbb
mov
scas
icebp
jle
xchg
mov
mov
xchg
mov
loop
jge
std
pop
mov
into
es
push
xor
cmp
aaa
pop
xchg
sahf
rorb
std
les
jns
jl
sub
in
cli
add
lods
xor
push
test
cmpsb
inc
xchg
push
sarl
insb
inc
aaa
sbb
add
icebp
inc
int
pop
pop
lret
inc
pop
scas
shrl
mov
shlb
push
xchg
ret
xor
in
push
inc
or
hlt
movb
ret
inc
xlat
push
bound
lock
fdivs
cmp
jmp
mov
in
cwtl
repz
sbb
pop
out
jl
mov
cld
arpl
clc
rorl
dec
mov
loope
dec
hlt
xor
pop
iret
loopne
imulb
inc
ffreep
es
das
cld
stc
fstpl
jp
enter
mov
pop
dec
xchg
clc
stos
ficomps
mov
shll
orb
test
jg
sbb
dec
je
fidivs
xchg
mov
das
fs
adc
cs
out
jg
fsubrp
fwait
pop
js
cwtl
fs
sub
add
mov
clc
add
pop
and
jne
testl
ds
mov
mov
in
loopne
sbb
mov
sub
sbb
mov
mov
fcomp
stos
rcr
movsl
test
ret
ja
dec
bound
and
out
ljmp
cmp
decl
nop
int3
data16
and
dec
dec
enter
ss
sbb
dec
adc
mov
sti
shll
ret
and
ja
lds
xor
insl
dec
pop
push
lret
adc
js
sar
sbbb
jp
jne
adc
add
inc
inc
jg
movsb
jge
dec
inc
dec
insb
push
bound
stos
xchg
or
or
aad
add
out
add
in
sti
mov
fwait
mov
pop
stos
xrelease
push
pop
mov
add
xchg
dec
pop
in
jae
ret
mov
fsts
div
ljmp
mov
cmpsl
jl
idiv
pop
leave
in
xchg
push
popl
mov
jl
push
or
aad
aad
aas
clc
pop
mov
xchg
das
mov
lret
dec
push
je
lds
outsb
push
andb
or
adc
clc
lret
cmp
js
subb
push
std
test
cmp
cmpsl
lods
lds
adc
fmul
sbb
and
rcl
inc
push
or
push
xor
inc
pop
fstl
push
mov
cli
ret
jmp
xor
vphsubbw
scas
testb
hlt
and
mov
cmp
inc
pushf
pop
fnstsw
roll
sub
inc
in
lret
adc
loopne
jle
lret
mov
arpl
outsb
pop
xchg
pop
sub
and
jns
cltd
jp
inc
xchg
or
add
or
sbb
pop
push
xchg
mov
sub
mov
addb
jnp
sub
fiadds
jle
loope
into
shl
outsl
pop
roll
aam
fistps
inc
jb
mov
jne
or
jbe
daa
mov
inc
inc
pop
out
stos
outsl
inc
add
add
in
ds
sbb
pop
adc
dec
stos
sub
call
mov
mov
jmp
stos
mov
push
sarb
out
mov
xor
int
xchg
xor
imull
outsl
or
lea
mull
adc
test
mov
lods
cli
fwait
jbe
jbe
jb
test
adc
xor
arpl
das
lret
xchg
inc
or
mov
int
xchg
push
outsb
test
sbb
into
loop
jge
cli
inc
ja
test
jns
push
adc
mov
cmpsb
imul
mov
in
dec
enter
pushf
addb
popa
popa
add
clc
daa
jmp
add
shrb
bswap
inc
fs
mov
lahf
cmp
pop
cmc
loopne
repnz
data16
out
fadds
mov
inc
lock
flds
out
dec
lock
and
mov
shlb
pop
and
xchg
ss
push
rcrl
mov
daa
add
loopne
xlat
xchg
pushf
lock
xorl
xor
ret
rcr
fwait
pop
inc
out
add
les
aas
test
fsubrl
cwtl
and
fsubrl
insl
stos
cltd
cmpsb
pop
mov
lock
or
jbe
outsb
pop
add
sbb
adc
sti
and
pushf
cmp
ficompl
mov
adc
jmp
lea
pushf
js
fstps
loope
dec
or
xchg
cmp
js
mov
or
fistps
pop
pop
paddusb
push
sbb
add
dec
les
fimuls
call
ret
imulb
pusha
sbb
arpl
push
push
lea
sbb
push
cmp
or
fldl
xchg
sub
mov
inc
mov
loope
insl
lods
es
or
jae
mov
sbb
push
inc
icebp
dec
icebp
jb
push
loop
aaa
mov
xchg
push
lahf
jp
gs
jl
in
jnp
xchg
aam
cmp
cs
add
icebp
xchg
mov
dec
inc
mov
sti
lds
mov
dec
cmpsl
or
loopne
aas
mov
sub
lcall
sbb
mov
pop
mov
jbe
ljmp
sub
pop
mov
fistpll
pushf
shl
outsb
fldcw
mov
inc
jmp
add
or
push
inc
lcall
pop
jge
test
fidivrl
mov
nop
scas
shrb
ljmp
or
jmp
lcall
int3
push
test
outsb
inc
jg
out
fldcw
mov
adc
je
and
add
pop
or
mov
imul
out
inc
lock
and
pop
sub
js
inc
scas
xchg
cltd
or
push
mov
xchg
ja
inc
gs
pusha
xlat
inc
jnp
out
pop
xchg
lock
inc
jne
iret
or
jp
ja
cmpsl
jecxz
fimuls
adc
lds
jg
orl
mov
lea
fidivrl
adc
pop
dec
les
je
lods
shlb
notl
xchg
adc
pop
test
mov
loop
mov
lods
call
jo
xchg
shll
cli
mov
xor
lods
pop
std
xor
xchg
sub
jne
pop
rorb
ja
loopne
call
jp
and
fcmovnb
xchg
loop
mov
enter
pushf
xchg
out
xor
dec
hlt
push
xchg
scas
testb
lds
xchg
cmpsl
dec
lock
out
in
sahf
pop
or
test
jp
adc
ffree
jne
push
pop
shll
loope
xorb
cmp
negl
push
outsl
push
ret
mulb
addr16
stos
loope
mov
inc
insl
and
pop
mov
pop
cld
sub
pop
xor
mov
cmp
mov
inc
sbb
lahf
dec
mov
inc
loopne
inc
pop
cmpsb
mov
in
sti
xchg
jbe
fldl
in
push
je
das
inc
es
js
push
fsub
into
inc
add
cld
mov
ret
sbb
mov
in
sub
cmpsl
into
insb
jle
shl
ret
add
addr16
rorb
scas
dec
or
and
aad
pop
roll
mov
enter
sub
sub
mov
lds
mov
divb
stc
adc
lods
adc
lock
cwtl
jge
and
scas
push
pop
out
rcr
gs
enter
adc
push
or
xlat
je
lcall
clc
pop
mov
stos
loop
dec
fnsave
sbb
or
mov
jae
loop
xchg
filds
jo
mov
dec
mov
orl
lods
cltd
pop
adc
push
rol
rolw
or
inc
shrb
mov
and
pushf
ffree
dec
mov
mov
xor
sub
pop
addl
xor
sbb
in
inc
xor
cmpsb
ja
scas
fnstenv
flds
jns
sub
mov
pop
les
das
sub
jmp
dec
popl
sub
call
inc
aas
nop
lock
sbb
xchg
or
mov
jbe
xlat
dec
and
ficomps
dec
fs
imul
cmp
jnp
jns
adc
in
fistpll
dec
mov
mov
ds
cmpsl
mov
repnz
mov
test
dec
in
cs
cmp
in
xor
lds
scas
scas
mov
or
cli
adc
pop
pop
sbb
xlat
or
insl
lock
jg
cs
jnp
test
adc
xor
inc
dec
pop
cmpsl
das
cli
mov
add
xor
cld
int
cwtl
cmp
inc
out
adc
sub
xorl
inc
out
loope
mov
nop
cmpsb
dec
repz
cmp
xor
sbb
jle
mov
lahf
stc
adc
ss
add
je
fsts
ds
rcll
jl
mov
mov
fs
js
mov
sbb
andb
in
ret
adc
jmp
ret
test
sub
sbb
dec
movsl
popf
mov
pop
push
popa
inc
je
lea
stc
sub
xchg
mov
pop
test
pop
movsl
dec
xchg
test
cwtl
dec
and
xchg
mov
or
dec
mov
rorl
or
push
rcl
cmpsl
xchg
sub
pop
jl
cmp
jmp
lahf
adcb
std
push
shrb
stc
or
pop
add
pop
icebp
dec
mov
xchg
add
and
add
jbe
loopne
rcrb
pop
push
loope
popa
not
mov
sbb
ja
push
shr
cmpsb
in
sbb
rcll
add
sbb
repz
outsb
fcmovnu
frstor
clc
xchg
ret
rcrb
pop
sub
int3
jl
pop
jl
ds
dec
pushf
sbb
add
scas
in
mov
push
mov
add
sub
xchg
cmp
sbb
inc
mov
dec
daa
mov
int3
pop
aas
in
xlat
insl
adc
and
filds
js
adc
lds
jae
pop
mov
xor
mov
push
js
sbb
jmp
push
jp
mov
cmp
aas
mov
xor
shrb
aad
daa
lds
insb
add
cmp
push
jb
push
and
mov
mov
clc
cli
inc
repz
mov
push
add
mov
popf
inc
sbb
mov
movsb
in
and
xchg
leave
mov
and
outsl
mov
inc
mov
clc
xchg
cmpsl
les
jne
fisttpll
jbe
jns
jnp
in
mov
inc
jp
insl
mov
aam
icebp
gs
es
mov
pop
lcall
push
fcomp
data16
jno
dec
jle
stos
adc
arpl
mov
dec
adc
and
or
ret
sbb
rol
xorl
push
xchg
and
insb
aaa
roll
mov
das
dec
into
movsb
ret
fdiv
push
xchg
mov
lret
sbb
mov
mov
dec
sahf
in
stos
xchg
cmp
add
scas
stc
ret
xor
mov
cmpsb
int3
lock
rcrl
inc
iret
imul
pop
lea
push
int3
or
adc
lds
inc
pop
hlt
mov
in
pop
pop
test
lock
rcl
sbb
inc
test
clc
fdiv
pop
stc
out
xorb
push
sbb
inc
enter
mov
lea
mov
int3
xchg
add
xor
pop
jmp
xchg
bound
fisttpl
cvttps2pi
mov
shl
jl
js
xchg
mov
xlat
mov
push
cmc
xor
std
push
loop
xor
jbe
mov
mov
les
sub
ja
shr
shll
ljmp
push
dec
fxrstor
mov
lock
ficoml
push
out
and
cmp
dec
rorb
mov
stc
dec
pop
xchg
in
mov
and
mov
adc
jae
jge
int3
test
icebp
xchg
stc
sub
mov
xchg
xor
pop
mov
repz
push
test
loopne
add
cld
subl
jno
xchg
push
scas
lahf
inc
adc
lret
inc
in
lods
frstor
jecxz
adc
nop
xchg
ficoml
dec
cmpsl
out
push
or
mov
insb
push
ds
out
add
xor
lds
lods
in
pop
sti
insl
inc
mov
push
aam
cmp
mov
mov
lds
dec
loope
xor
mov
or
cli
cld
add
mov
dec
adc
xchg
inc
and
jp
xor
jne
ret
cmpsl
loope
or
mov
orb
mov
push
mov
cld
push
cmpsb
in
adc
push
ret
xchg
pop
push
fcmovbe
xchg
hlt
repnz
sti
lods
ret
data16
call
fmul
xlat
inc
in
jns
inc
scas
mov
insb
cli
inc
xor
in
stc
xchg
int
mov
dec
lcall
stc
sub
rcll
into
jl
dec
lods
out
fisttps
jno
xorl
punpckhdq
add
mov
cs
push
jg
std
jmp
push
loop
hlt
sbb
add
testl
or
rclb
inc
lahf
icebp
clc
push
leave
aaa
pushf
or
xchg
xor
cld
rol
cli
pushf
dec
xor
int
in
fs
scas
xchg
sbb
sahf
adc
into
lock
pop
imul
ja
jp
aaa
mov
shl
outsl
jae
xor
ret
out
xlat
mov
repnz
repz
xchg
aam
test
pop
mov
aad
mov
rcll
aam
ja
lock
adc
sbb
stc
push
xchg
les
ljmp
sti
dec
or
and
mov
subl
sbb
sbb
pop
mov
jns
enter
inc
cld
int
fcomip
jge
shrl
adc
xor
and
pop
sti
out
or
lea
dec
inc
mov
xchg
shll
push
mov
and
jno
dec
push
xchg
mov
in
test
xchg
cmc
mov
push
cmp
mov
or
dec
dec
pop
mov
mov
mov
in
dec
pop
je
jg
or
mov
sbb
mov
hlt
lret
fdivl
gs
push
in
add
in
clc
inc
add
cli
sar
xor
popa
arpl
imul
stos
sar
cmpsl
aaa
mov
movsl
jo
pop
fwait
mov
jp
push
xor
inc
jno
jo
add
call
inc
sub
andb
sub
push
inc
mov
add
mov
pop
pop
mov
in
or
xor
call
xor
std
js
add
loope
das
lahf
in
jl
lods
jbe
hlt
ficoml
loop
inc
add
or
or
les
mov
rcrl
rcr
push
jecxz
inc
mov
jg
xlat
ss
or
aas
cmp
mov
sbb
repnz
jae
jnp
hlt
push
stos
adc
adc
and
stos
andb
lahf
stos
mov
mov
push
fidivrl
repnz
das
sbb
sbb
gs
lds
sub
aam
call
pop
cmp
push
loope
cmp
bound
insb
fisubrl
or
and
mov
pop
add
push
icebp
lods
jbe
push
mov
ja
inc
imulb
mov
jp
jg
mov
sub
mov
pop
adc
out
inc
adc
movsl
adc
cmp
fstpt
xchg
gs
imul
push
mov
or
xor
inc
pushl
mov
scas
add
test
or
test
xlat
lods
push
lock
jg
inc
sub
mov
pusha
aaa
decb
push
je,pn
iret
cld
xor
fdivs
push
test
or
mov
cs
cs
mov
std
pop
hlt
dec
leave
push
and
mov
icebp
xchg
les
lret
cmp
fadd
es
icebp
jo
cs
pop
aad
ss
sub
or
sbb
inc
push
inc
repz
dec
mov
test
stos
fstps
insb
adc
and
mov
pusha
movsb
mov
lods
or
mov
jp
fnstsw
subl
jg
adc
xchg
adc
lret
shlb
outsl
cld
add
cmp
push
pop
pop
stc
clc
arpl
dec
nop
jle
loop
fldl
push
addr16
loope
fidivrl
mov
into
ret
rcr
rolb
std
and
mov
dec
push
inc
and
mov
rcll
mov
fcom
mov
mov
adc
fs
ds
cltd
xchg
mov
jle
imul
stc
and
mov
mov
bound
xchg
pop
sar
or
lods
dec
and
adc
mov
mov
loope
sub
pop
das
jp
inc
stc
cmp
ja
mov
cmpsl
mov
es
cmc
push
cmp
fldln2
jbe
and
insl
mov
stc
mov
jmp
inc
jp
adc
test
mov
and
inc
addb
sub
lahf
popf
test
sarb
mov
mov
cmp
test
jae
dec
and
jns
and
push
inc
popf
loope
dec
mov
rcr
in
daa
bound
mov
add
lcall
dec
lcall
in
lahf
pop
test
lahf
addr16
int3
int3
mov
ja
jg
or
add
lock
push
nop
cmp
push
or
adc
mov
mov
dec
icebp
out
push
mov
cmp
cmp
movd
dec
cmp
stos
lea
inc
aam
mov
lret
add
test
sahf
fnsave
mov
stc
fsin
push
lods
lods
jmp
loop
add
stos
jmp
les
sub
loop
loop
in
xchg
aas
ljmp
adc
out
pop
in
ljmp
hlt
enter
fucomi
xchg
mov
stos
jnp
jnp
jle
outsl
add
inc
inc
fwait
mov
call
insl
das
gs
jecxz
mov
jmp
insb
mov
xor
push
push
or
jmp
stos
mov
in
fmull
or
fsubp
int
inc
mov
adc
nop
fs
dec
mov
in
gs
push
rorl
inc
or
ss
sbb
mov
mov
les
push
or
ja
xchg
jbe
ret
mov
out
inc
sbb
jo
sahf
add
push
push
in
sub
adc
dec
add
leave
jecxz
pop
jo
test
pop
cmp
add
icebp
daa
or
sbb
aas
andb
mov
arpl
in
dec
cmp
outsl
ja
lock
shll
jge
xchg
aaa
outsb
push
or
mov
pop
and
sbb
ljmp
mov
push
cmpsl
mov
ljmp
xchg
fildl
fmul
je
dec
lcall
outsl
cmp
pop
and
inc
or
out
outsb
mov
mov
aad
adc
push
adc
cmpsl
fisttpl
outsl
sarb
in
add
scas
fmuls
dec
fsts
cmp
stc
and
enter
ret
push
shll
fcmovb
push
xor
dec
sbb
gs
xchg
mov
push
jo
dec
pop
pop
jp
fld
pop
insb
lret
push
jg
xor
and
fidivl
dec
int3
add
jg
outsl
cmp
popw
aas
add
and
xchg
clc
clc
movzwl
mov
test
pop
aas
scas
inc
mov
sbb
jbe
mov
mov
cmc
mov
pop
dec
adc
aas
icebp
jbe
int
add
pop
in
mov
xor
call
outsb
out
pop
or
popa
inc
add
adc
sbb
fimull
or
bound
inc
xor
gs
das
insl
mov
lea
and
mov
adc
sbb
push
lods
push
pop
adc
push
addr16
nop
xor
out
pop
mov
in
sbb
leave
mov
fidivl
push
or
andl
xchg
jle
pop
ret
iret
xchg
fbstp
pop
pop
out
and
xor
mov
cltd
popa
push
fbld
std
rcl
or
add
pop
cli
mov
adc
push
cmp
fs
sbb
mov
es
fisubrs
or
jmp
enter
xor
sub
out
insl
jl
fidivrs
dec
das
mov
dec
vandps
sub
ja
xchg
adc
cwtl
outsb
subb
sbb
push
scas
imul
push
mov
fcoms
mov
test
and
mov
push
cltd
out
test
in
cmpl
xchg
cs
and
mov
scas
or
mov
push
test
adc
pop
mov
pushf
cmp
scas
stos
jae
xchg
mov
nop
mov
cmp
stos
mov
add
sbb
pop
test
cmpsb
das
int3
outsl
outsb
aas
push
ds
daa
cmp
inc
adc
clc
fcoml
sub
inc
xor
mov
mov
push
lret
stos
cwtl
xchg
fisubrl
lock
xchg
fs
xchg
push
pusha
xchg
cmpsb
inc
ja
mov
mov
stos
mov
and
aaa
mov
mov
mov
mov
mov
je
cmc
ficomps
test
pop
fdiv
or
add
push
pop
mov
je
notl
xor
lds
dec
subb
in
or
dec
test
insb
loop
pop
loop
add
lods
cmp
mov
popf
lock
lods
mov
inc
jl
movsl
int3
xchg
mov
xchg
subb
pop
xor
cltd
push
cwtl
ss
in
shl
push
das
into
mov
pop
filds
dec
jne
or
pop
jle,pt
push
jp
shlb
push
loop
mov
loopne
out
dec
addb
push
frstor
xchg
cmp
cli
jo
dec
cli
mov
test
iret
xchg
fnclex
jbe
pop
cmpl
xchg
push
es
mov
addr16
sub
fistpll
add
lret
add
jno
jge,pt
imul
sahf
jp
mov
cmp
shlb
hlt
mov
jge
scas
enter
mov
mov
xchg
and
mov
pop
aam
jbe
mov
jbe
inc
pop
push
inc
aaa
popa
xor
inc
or
aaa
jl
test
inc
and
call
in
andb
shrb
pop
jle
push
jmp
lock
push
jecxz
cltd
jns
imul
mov
xchg
jecxz
aaa
test
sbb
jle
sub
mov
jns
mov
shll
lods
inc
test
daa
push
sub
mov
inc
cmp
sbb
jmp
sbb
es
or
jbe
inc
push
dec
ret
cmpsb
or
mov
loope
movsl
jg
outsl
mov
lret
jecxz
in
mov
scas
fnstenv
mov
stos
mov
lret
das
mov
shll
int
test
mov
sub
stc
ds
cli
aam
ljmp
pop
and
dec
jmp
jo
xchg
imul
loopne
std
pop
loope
in
jbe
cmc
aam
push
aad
loope
stos
ret
pop
push
lods
pop
cmc
inc
mov
outsb
pop
call
shll
adc
dec
shlb
and
xchg
add
fcom
cs
cmpl
and
xor
imul
mov
pop
sbb
sub
addr16
daa
inc
jb
sar
inc
add
jle
and
in
out
ds
daa
pop
or
fwait
inc
mov
cld
out
mov
movsb
in
mov
and
xchg
hlt
aaa
or
fbld
into
les
jg
imul
inc
inc
adc
add
sbb
xor
inc
mov
hlt
int
sub
or
mov
scas
mov
dec
mov
sbb
mov
movsl
cmp
jmp
mov
pop
mov
push
lret
lods
ja
pop
out
fucom
decl
popf
pop
jl
or
or
call
sbb
data16
mov
push
cmp
out
call
push
push
pop
sbb
inc
les
ds
mov
jecxz
cltd
repnz
push
and
cmpsb
cmp
inc
shll
adc
or
loope
xchg
mov
pop
mov
movsl
add
movsl
incl
and
inc
push
daa
mov
lock
xor
in
scas
sub
stc
cmc
movsl
fsubp
daa
popa
push
sbb
xchg
sub
test
xchg
ficomps
rclb
femms
jge
stos
ljmp
nop
movzwl
xchg
jg
fnstenv
sbb
mov
jmp
mov
dec
lea
js
sbb
cld
jecxz
ljmp
in
sarl
jns
fildl
outsb
cmp
mov
imul
cmpsl
sub
mov
dec
pop
rorb
ja
and
mov
mov
push
loopne
cmpsl
fmulp
mov
movsl
adc
cwtl
mov
insb
inc
and
mov
and
sub
sub
insb
lahf
jb
or
imul
sbb
lret
rclb
in
lock
aaa
int
xchg
xlat
dec
fcoml
adc
pop
ret
std
lcall
xchg
hlt
inc
popf
ljmp
or
stos
outsb
mov
or
sbb
xchg
mov
ret
insl
sti
sbb
sub
cmpl
sbb
xchg
out
ds
ja
xchg
dec
xor
push
sub
fadd
in
andl
jg
mov
sbb
cmc
out
dec
lock
or
popa
orl
lea
mov
cli
stos
sub
clc
inc
movsw
jg
pop
mov
and
fdivrs
cld
adc
in
cmp
jg
movsl
fisttpl
pop
pop
addr16
mov
popa
lods
fisttps
inc
mov
mov
push
shl
inc
sub
dec
test
mov
add
inc
sbbb
test
sahf
cmp
sub
lock
and
fwait
data16
je
and
movb
dec
xor
pop
xlat
mov
lahf
aaa
das
mov
and
xchg
and
stc
scas
xor
hlt
repnz
and
mov
hlt
into
out
pop
test
scas
ficoml
ja
adcl
mov
pop
xor
mov
jl
inc
xchg
inc
xchg
add
cli
scas
mov
mov
or
in
daa
test
mov
cwtl
repnz
enter
adc
dec
mov
xchg
aam
cmp
push
pop
cmp
jecxz
sbbb
mov
pop
jae
clc
out
aaa
inc
cmc
cwtl
dec
inc
dec
dec
mov
mov
ljmp
pop
icebp
push
mov
loopne
lea
cmp
and
xor
push
int
orb
xor
pop
cmpsb
mov
cs
mov
push
das
insl
insb
cmc
mov
rsqrtps
dec
mov
pause
xchg
pop
ljmp
pop
cmp
into
sub
jb
dec
mov
outsb
mov
faddl
popa
add
add
fnstenv
andl
repnz
push
adc
jge
cmpb
ret
cli
add
and
lret
sub
ss
pushf
ss
fucomip
cld
clc
jge
test
jmp
sub
mov
mov
das
mov
xor
lret
insl
inc
in
dec
sub
rcll
loope
cmp
cmp
or
jmp
pop
outsl
xchg
mov
insb
add
outsl
outsb
pop
clc
mov
dec
pushf
lret
lret
sub
ljmp
popf
movsb
or
add
fpatan
jnp
sbb
pop
cmp
andl
mov
test
mov
push
bnd
xorb
xchg
loopne
in
jmp
sti
mov
mov
loope
mov
sub
cmp
mov
and
imul
les
mov
ja
insb
xor
lret
inc
and
jne
les
mov
in
clc
arpl
mov
test
xlat
pop
and
out
pop
addl
cmpb
mov
fiadds
imul
pop
clc
loop
das
xor
pop
pusha
loope
aam
jecxz
insb
stc
inc
jmp
pop
pop
mov
lds
insl
scas
test
or
test
jbe
mov
ret
xchg
mov
mov
mov
dec
inc
cmp
pop
xchg
sahf
push
es
add
aad
xchg
mov
sbb
push
rclb
inc
cmp
mov
sub
lods
ss
orb
adc
mov
pop
ljmp
adc
mov
and
es
mov
popl
les
jne
dec
std
or
adc
sbb
test
lods
fsubr
mov
enter
cmp
leave
ret
pop
arpl
insb
or
cs
test
push
or
push
sbb
gs
mov
adc
pop
or
stos
dec
xor
mov
dec
xchg
mov
bound
sbb
lahf
jnp
or
xchg
imul
mov
xchg
inc
jmp
loopne
sbb
fs
jae
push
pop
mov
pop
cmpsl
test
mov
fnstcw
pop
out
mov
mov
push
pusha
int3
out
xor
iret
scas
scas
jnp
pop
dec
cwtl
sti
lods
sub
adc
xor
add
mov
jo
jp
mov
cmp
out
push
inc
ja
loop
iret
sbb
enter
outsb
pusha
or
outsb
jge
push
scas
xor
or
jmp
pushf
xlat
push
insb
and
dec
mov
inc
ret
dec
push
jae
inc
pop
add
imul
fwait
stc
je
mov
push
into
inc
cmpsb
fwait
dec
rol
adc
sub
movsl
pop
xor
lock
mov
inc
jo
mov
addr16
or
das
push
in
jg
movsl
cmpsl
mov
or
cltd
pop
testl
arpl
outsl
ja
dec
scas
test
jp
and
mov
mov
out
push
and
mov
or
sbb
inc
int3
lods
xchg
or
test
inc
adc
sarl
push
fcomip
mov
popf
js
xlat
stos
inc
fs
aas
jno
push
dec
shlb
inc
shrl
jl
pop
loop
lret
fsubr
mov
insl
stos
hlt
xor
and
mov
xchg
push
jne
sbb
or
mov
out
ret
push
testb
fimull
jg
or
dec
xor
repz
adc
cld
push
outsb
icebp
xchg
pop
jl
std
add
cltd
aam
clc
nop
xchg
andb
inc
cwtl
call
enter
lds
fists
and
add
pop
jle
fwait
stc
sub
mov
sub
in
ljmp
mov
jecxz
std
sub
jbe
scas
call
lret
xor
shr
mov
das
ljmp
js
imul
shll
and
cmpsb
xchg
push
adc
xchg
ljmp
mov
fildl
push
and
or
lahf
pop
outsl
mov
dec
aad
mov
pop
rcr
adc
mov
push
adc
jns
sub
jne
adc
in
clc
ja
outsb
jnp
inc
mov
jmp
jae
test
pop
stos
ret
insb
aam
inc
jnp
sti
xor
pop
sbb
pop
cmpsl
clc
or
mov
addr16
jmp
xchg
xchg
mov
jp
std
xchg
cmp
orb
outsb
adc
rdtsc
mov
inc
call
mov
fcomip
ss
pop
loope
and
ret
xor
loopne
mov
fisttpl
hlt
lret
and
push
mov
or
inc
icebp
sbbl
xchg
push
cmpsl
mov
or
xor
xorb
cltd
fsubr
ljmp
sbbl
pop
and
fldl2e
cs
dec
roll
mov
mov
fisttpl
fisttpll
xchg
sbb
ljmp
fwait
lds
cmpsl
cld
imul
arpl
rorb
cwtl
mov
jae
test
jne
xlat
adc
jp
daa
lea
mov
pop
mov
pop
loope
out
shlb
int3
pop
sbb
test
mov
jmp
fwait
mov
mov
mov
out
pop
mov
dec
std
dec
xchg
fcomi
iret
adc
cmp
jo
outsl
mov
pop
add
rol
test
test
decl
sub
mov
sti
nop
in
inc
movsb
adc
push
xlat
ds
inc
movsl
dec
pop
sti
lods
and
add
je
xchg
bound
cwtl
and
mov
in
cmpsb
aas
cmp
scas
jp
mov
mov
paddb
adc
and
push
aad
mov
and
addb
and
inc
jmp
iret
cmpsl
and
dec
mov
pop
jmp
adc
into
out
push
icebp
sti
repz
sub
in
aas
push
mov
push
aaa
mov
roll
sub
or
cltd
xchg
ficomps
stos
mov
cltd
xorl
mov
push
out
pop
dec
sbb
sub
adc
test
pop
xchg
ljmp
mov
test
mov
scas
ds
xchg
adc
iret
cs
stos
xchg
mov
xchg
int3
dec
in
xor
outsb
push
outsl
out
or
inc
xchg
push
cmpsb
mov
mov
movsl
xchg
dec
loope
popl
or
popa
jg
mov
adc
ja
gs
and
roll
or
cmp
xchg
jmp
cmc
scas
add
mov
jp
notl
cld
hlt
push
test
adc
ret
sub
mov
xchg
and
vpshad
and
sahf
mov
aaa
push
jle
mov
nop
inc
xchg
mov
cmp
loopne
ss
sbb
and
xchg
push
test
pop
fwait
sti
fistps
data16
sub
scas
jecxz
loopne
push
pop
ljmp
inc
outsl
fsubr
shrb
and
fsubl
popa
xor
sub
push
dec
pop
jo
movsb
scas
xchg
stos
aas
clc
inc
loopne
xchg
cmp
add
arpl
out
ds
mov
jmp
inc
mov
sarb
mov
cmp
dec
push
xor
push
xchg
mov
inc
jno
jge
xor
mov
lret
adc
into
push
icebp
adc
inc
cwtl
jecxz
mov
imul
js
dec
sbb
push
push
push
cmpsb
or
cld
inc
sub
and
mov
add
or
inc
push
enter
or
xlat
inc
mov
jnp
repnz
fisttpll
sbb
cltd
inc
notb
ficoml
iret
rorb
sbb
push
ret
in
sub
add
mov
jae
push
out
jecxz
mov
push
adc
fsubs
les
lcall
shll
mov
out
sbbb
hlt
cmpb
adc
add
cmp
mov
and
push
stos
jae
lahf
push
es
mov
and
dec
gs
mov
and
add
scas
pop
inc
pop
aaa
fdivr
push
add
lock
scas
push
addr16
mov
in
adc
imul
mov
or
inc
shll
add
sti
jno
movsb
clc
jns,pn
mov
enter
negb
fistpll
ss
aaa
pushf
add
inc
call
setb
js
fisttps
ss
pop
xor
mov
test
pop
lods
inc
inc
mov
pop
ljmp
and
pushf
ret
int
test
xor
mov
cld
sub
push
outsl
fbstp
mov
push
pop
cli
adc
cld
pop
sub
test
inc
add
in
imul
lret
add
mov
inc
movsl
xchg
mov
xorb
or
je
adc
out
add
pop
shll
dec
pop
cli
add
lods
ret
repnz
test
into
jmp
sahf
pop
mov
rorl
dec
sbb
inc
sbb
jo
mov
mov
sbb
pop
out
clc
jbe
jne
pop
adc
call
sbbb
test
dec
shll
add
pop
mov
pop
popw
xchg
ljmp
push
adc
mov
fimuls
mov
mov
mov
push
out
mov
xchg
mov
outsl
push
or
addl
aad
pop
inc
inc
popa
or
or
pop
push
inc
push
popa
pop
pop
add
sbb
mov
in
sbb
or
test
mov
addb
inc
cmp
push
lcall
and
stos
std
mov
fisubrl
pop
fmulp
test
rcr
mov
jmp
or
dec
or
mov
push
ret
mov
inc
xchg
aas
cmp
adc
sub
jp
fcomip
loope
adc
dec
flds
test
and
add
inc
dec
andb
dec
movq
push
dec
insl
cmp
sahf
push
rorl
inc
pop
sbb
leave
and
rolb
lea
fisttpl
or
cmp
enter
xchg
dec
aas
mov
mov
mov
cmc
stos
add
add
movl
mov
addl
or
sbb
push
rclb
fsubs
das
lods
jb
jbe
mov
stos
xor
pop
pop
jg
sbb
inc
mov
xor
ljmp
push
imulb
test
pop
or
test
nop
sarb
or
mov
xchg
repz
cs
xchg
mul
jb
movsb
adc
add
pop
cmp
pop
add
mov
std
test
lods
insb
mov
lahf
jns
xchg
lock
inc
inc
dec
mov
mov
jg
test
scas
enter
std
scas
add
mov
dec
mov
and
movsb
shrl
adc
rorb
jmp
mov
cwtl
cmp
mov
push
inc
push
xor
lret
insb
pop
xor
adc
or
std
lret
imul
push
xlat
ret
pop
je
loopne
mov
test
in
scas
stos
fidivs
fimull
insb
in
and
xchg
scas
test
mov
jbe
ror
stos
adc
add
jmp
jl
cmp
or
lds
int3
aad
mov
adc
mov
push
fstl
jle
jle
dec
out
dec
push
rol
xchg
es
dec
in
xchg
punpckhdq
xor
and
sub
xor
adc
dec
xor
adc
pop
dec
mov
in
xor
mov
cli
and
jmp
mov
xor
add
cs
jecxz
aas
outsl
cmp
daa
out
push
sbb
sbbl
rcll
fildll
cli
leave
addr16
call
inc
outsl
push
mov
ds
push
lret
inc
nop
loope
adc
arpl
lock
in
decl
fbld
aas
fwait
sub
adc
loop
add
cwtl
xor
arpl
dec
cmp
push
js
nop
loop
imul
fstpl
and
xchg
add
fwait
push
scas
jecxz
lods
mov
addb
dec
xchg
push
sbb
testb
or
mov
incl
mov
scas
bound
addl
test
cmp
add
mov
push
dec
movsl
in
ret
lea
mov
fsubr
inc
xor
imul
inc
repz
pop
stc
cltd
pop
push
mov
popf
jae
mov
std
outsb
adc
sub
out
in
rcll
loopne
sub
loopne
fucomp
mov
mov
jg
in
pop
hlt
lods
add
cltd
test
cmpsb
pop
lds
xchg
push
sahf
pop
cmp
mul
test
orb
mov
mov
jno
sarl
das
loope
xchg
call
fisubrs
lods
mov
lret
xor
cmp
out
dec
mov
pop
push
dec
aaa
inc
sbb
pop
std
scas
push
hlt
es
sahf
test
jbe
add
loope
jl
mov
scas
lret
xchg
and
xchg
or
or
mov
sbb
sub
pushf
sar
inc
jb
loope
jns
sbb
mov
jnp
sti
cli
aaa
mov
push
jle
mov
roll
lret
push
aad
mov
arpl
cmp
scas
sbb
rclb
cvtpi2ps
inc
aaa
xchg
jg
iret
adc
xor
xor
decl
in
add
dec
jg
test
in
mov
addr16
or
inc
pop
call
in
ret
cmpsl
or
out
mov
aad
adc
and
inc
pop
out
mov
loope
xchg
pop
out
mov
in
adc
pushf
jns
mov
fdivrp
inc
fldenv
add
sbb
mov
jg
xchg
jbe
test
mov
insb
or
or
sbb
loopne
push
mov
cmp
shl
rorb
sub
jns
icebp
shl
sub
jne
adc
mov
xchg
arpl
outsb
and
push
push
fadds
adc
sbb
sbb
fwait
ja
and
inc
pushf
mov
outsl
cmpsb
xchg
lcall
dec
shrb
cmp
ljmp
adc
jl
nop
pusha
pop
loop
popf
test
je
push
inc
xlat
inc
push
ret
inc
cli
test
inc
das
mov
or
ja
lcall
fcmovnbe
daa
test
mov
adc
pop
or
push
inc
mov
or
pop
cmpsl
sbb
cmp
pop
mov
dec
xchg
shll
xor
mov
cli
ret
push
ds
cmp
dec
jle
inc
fnsave
test
xchg
mov
add
cwtl
fs
in
icebp
dec
sbb
inc
ret
iret
addb
out
sbb
movsl
insl
jecxz
test
xor
inc
pop
shl
outsb
add
fdivrl
out
aas
js
adc
jecxz
outsl
or
addr16
jmp
mov
popf
xchg
daa
je
leave
and
lcall
cmc
xor
cltd
xchg
inc
adc
cwtl
ficompl
cmp
mov
and
mov
mov
out
ret
and
imul
in
subl
in
cli
mov
dec
xor
jge
pop
and
pusha
fdivr
maxps
iret
add
xchg
inc
jbe
test
or
pop
pop
or
mov
loopne
frstor
or
loopne
inc
aaa
add
and
data16
pusha
outsl
pop
ljmp
push
outsb
pop
int
fidivrs
inc
or
or
movsl
cwtl
adc
sarl
xchg
xor
rcrb
and
stos
pop
xchg
mov
push
sbb
jl
enter
push
outsb
movsb
adc
fcoml
push
mov
fstpl
mov
lds
scas
inc
test
ret
mov
mov
lods
xor
repz
sbb
jne
pusha
push
jns
or
leave
or
sbb
xor
fprem
lods
mov
push
push
leave
stos
mov
mov
movb
xchg
lret
mov
inc
add
cmp
ds
frstor
and
lahf
dec
out
mov
mov
loop
popf
cmp
mov
js
jcxz
icebp
mov
cmpsl
outsb
pop
sti
mov
je
mov
jbe
lret
cmpsb
imul
sbb
pop
adc
out
sub
mov
aam
decb
divb
jge
cld
lea
push
jb
pop
es
das
insl
sbb
out
aas
xchg
gs
mov
jae
rcll
aaa
rcrb
pusha
push
test
inc
orl
mov
es
popf
fistpll
pop
mov
pop
in
cmp
or
cltd
xor
add
add
cmp
fadds
mov
dec
xor
inc
mov
push
dec
rcl
sahf
or
add
fnstsw
xor
sbb
push
in
icebp
cmp
xchg
push
lods
leave
inc
or
nop
or
fstp
sbb
jno
movl
pop
jp
aaa
bound
imul
mov
out
ljmp
xorb
stos
pusha
cmp
push
aam
sti
aas
pop
cmpb
mov
xlat
inc
pop
js
xchg
loop
stos
mov
in
sbb
adc
inc
xor
mov
ss
jmp
push
pop
inc
add
push
jne
cmp
sub
xor
test
mov
inc
adc
or
mov
pop
test
loop
lods
js
inc
icebp
movsl
js
mov
push
push
call
pusha
sub
ret
test
mov
pop
imul
pop
and
inc
mov
dec
jecxz
test
jmp
outsb
xor
daa
pop
inc
push
xchg
divl
push
in
adc
xchg
dec
cmp
jge
mov
add
push
sub
subl
lock
aaa
mov
xor
adc
adc
jl
fstpt
inc
xchg
sub
aaa
dec
sbb
aaa
push
fs
ja
mov
inc
mov
or
pusha
xchg
cs
adc
cmp
pop
out
jg
cwtl
pop
mov
repnz
cld
mov
cld
inc
jge
adc
ds
mov
mov
or
rolb
rorl
xchg
js
sti
jl
add
rolb
cmp
or
arpl
pushf
sbb
pop
je
xchg
out
xchg
in
xchg
loopne
mov
and
xchg
add
pushl
faddl
mov
call
and
push
ret
movb
insb
js
fmull
xchg
pop
jbe
call
in
push
sub
fistpl
icebp
dec
out
and
out
daa
jecxz
mov
negb
sbb
inc
out
shll
je
cmp
enter
aas
in
jo
jecxz
rolb
mov
dec
jne
mov
push
mov
movb
push
sti
dec
pushf
push
call
mov
aaa
cwtl
mov
pusha
clc
sbb
add
cmp
xchg
mov
xchg
popa
stc
out
nop
mov
mov
dec
sub
hlt
or
sarb
aaa
scas
les
fistpll
ljmp
aas
inc
pop
sbb
adc
jne
sub
lods
rol
inc
add
orl
mov
test
cld
test
outsl
pop
icebp
inc
insl
test
test
push
inc
add
dec
gs
out
adc
mov
aaa
ja
push
cmpsl
insb
orb
jl
testb
outsw
in
xor
ljmp
sti
xchg
mov
jl
pop
js
push
shrl
or
xorl
cmpb
fcompl
mov
adc
and
jae
xor
cmp
aas
ljmp
test
jp
cmpsl
add
gs
push
mov
andb
fsubs
mov
rcr
and
cli
mov
sbb
jl
loop
std
popf
or
les
dec
out
call
scas
popa
add
dec
jnp
pushf
icebp
imull
inc
pop
mov
jno
mov
bound
rorl
popl
repnz
rolb
push
movsl
push
lcall
and
push
jo
jb
push
gs
inc
pop
xlat
pop
xchg
cmp
rclb
push
push
les
and
sbbl
rcll
and
inc
mov
inc
repnz
addb
lret
pop
cmc
dec
mov
dec
call
xchg
pop
lret
pop
jge
loope
loopne
mov
add
daa
jno
aam
ret
aaa
ljmp
shll
shrl
mov
lahf
push
js
test
mov
and
mov
in
sbb
jl
add
imul
aaa
push
or
addr16
in
or
outsl
stc
lds
inc
dec
cmp
dec
inc
cltd
arpl
mov
popa
cmp
xchg
out
test
inc
sbb
xlat
lods
pop
clc
movsl
xlat
push
stc
adc
je
popa
loop
cmp
xchg
mov
sbb
jo
and
sti
aaa
ret
out
sbb
xor
lahf
mov
je
cmpsl
hlt
imulb
dec
sub
xor
cmp
mov
xlat
mov
sbb
rcr
cmp
or
repnz
pop
fwait
mov
je
mov
jge
leave
push
aam
pushf
scas
or
sbb
ja
mov
dec
daa
inc
iret
mov
pop
loopne
es
gs
in
fisubs
and
and
mov
jl
daa
pop
or
roll
pop
fs
test
or
mov
add
js
shrl
in
shrl
sbb
pop
mov
mov
push
fsubr
jo
adc
or
pop
xchg
repz
cmpsl
add
cmp
addl
addl
bound
sub
jg
sahf
push
in
mov
mov
pop
mov
js
add
movsb
or
cwtl
or
fbld
pop
ret
xchg
add
ret
aad
sbbb
mov
andl
js
jae
shll
and
clc
outsb
sub
push
add
add
or
es
dec
mov
div
popa
jg
aas
mov
es
and
mov
sub
mov
cmpsl
jne
and
jns
and
xor
outsb
jg
cmpsl
insb
adc
xchg
cltd
pop
mov
loopne
or
jo
fstps
test
out
fists
cmp
jns
mov
push
mov
bound
or
and
roll
fs
hlt
xor
jmp
xor
cwtl
loope
inc
xchg
out
cmp
mov
mov
xchg
outsl
ljmp
add
cmp
cli
andl
push
cmp
mov
lret
cmpsl
cmp
cwtl
push
in
mov
dec
pop
lods
mov
in
std
push
and
jecxz
rcrl
jmp
and
mov
jle
movsb
ret
mov
jl
and
nop
clc
xchg
outsb
push
ljmp
outsb
lret
push
xchg
subl
ret
dec
call
adc
jp
cmp
das
aad
std
sub
push
push
adc
xchg
das
cld
or
or
fwait
aas
cmp
sbb
sbb
sahf
dec
cli
call
adc
sbb
pusha
add
hlt
jg
scas
pop
adc
add
pop
dec
mov
aas
movsl
pop
fiadds
movsl
jle
pop
rorb
aad
mov
mov
sbb
sbb
std
mov
imulb
shrb
xchg
sbb
push
in
mov
dec
or
shl
out
or
cmp
aaa
clc
or
mov
and
mov
mov
aas
js
jp
push
push
inc
loope
jmp
int
cmp
mov
pushf
mov
sub
mov
nop
cwtl
leave
xor
and
subl
aaa
neg
scas
cmp
insl
fs
xor
inc
adcl
dec
mov
mov
xor
mov
sub
mov
pop
lret
sub
mov
loope
jl
jnp
xor
mov
adc
daa
movsb
hlt
sahf
test
pop
sbb
lahf
sub
out
orb
bnd
test
sub
mov
neg
stos
or
outsb
sub
inc
adc
sti
jb
test
test
fs
imul
inc
out
in
lock
testb
sti
mov
jecxz
and
mov
stos
inc
inc
or
cwtl
dec
adc
or
mov
lret
xchg
pop
or
inc
or
adc
cmc
mov
in
clc
fwait
pop
scas
lret
adc
push
xchg
mov
lea
bswap
or
insl
cmp
shll
lea
sti
jbe
mov
mov
fwait
jge
mov
and
out
rcr
mov
pop
mov
outsl
mov
or
mov
ret
mov
out
negb
sbb
xchg
xlat
adc
test
push
push
inc
in
jmp
or
data16
popf
dec
push
xor
xchg
dec
in
pop
incb
push
es
cmp
mov
push
jae
dec
in
movl
mov
adc
testl
xlat
fldenv
push
lret
mov
imulb
xor
cmpsb
inc
pop
shlb
aam
mov
cs
pop
dec
repz
ljmp
mov
dec
mov
or
mov
adc
test
mov
jp
pop
mov
adc
loopne
cli
inc
mov
sbb
mov
mov
or
jp
add
adc
jne
jg
cmp
jne
imul
pusha
mov
popl
or
xlat
iret
enter
rorb
jecxz
jbe
fbstp
sbb
adc
cs
pop
gs
das
sbb
loop
pop
xchg
fcomps
fwait
xchg
add
mov
dec
imul
mov
and
test
or
xchg
cmp
jae
out
cli
test
or
lret
xchg
jp
mov
cmc
ficompl
lock
popf
test
mov
das
loopne
mov
inc
fldl
in
and
add
sbb
dec
cmp
jno
adc
sub
push
rolb
gs
jbe
rorb
mov
pop
loopne
nop
adc
cmpsb
frstpm(287
jl
sbb
dec
cmp
or
fistpll
gs
jecxz
fldcw
xchg
sarb
or
push
push
xchg
jecxz
xor
clc
in
fisttpll
out
inc
mov
in
outsb
cmpsb
push
ds
jae
mov
scas
std
hlt
pop
fwait
sti
cwtl
andb
xchg
push
jge
filds
js
sbb
pop
mov
aas
mov
or
xorl
icebp
out
and
inc
cmp
add
aaa
lds
rcrl
cmp
jno
das
insl
mov
rorb
loop
popf
xorb
sbb
das
mov
outsb
insl
aad
loopnew
lods
adc
sbb
out
in
lret
rorb
inc
cmp
outsb
notb
pop
loop
jmp
int3
pop
mov
mov
sti
in
push
cs
icebp
out
adcb
jb
pop
push
insb
jp
dec
decl
jmp
iret
imull
jne
ja
subb
adc
dec
xor
shll
xchg
jb
jbe
in
sub
add
sub
jnp
pop
arpl
popa
xchg
fidivs
imul
cmp
xor
push
cwtl
sahf
sub
cmp
hlt
ss
adc
test
push
push
jo
sub
loopne
outsb
pop
xor
les
lret
pop
nop
mov
outsl
cmpsb
pop
dec
jl
lahf
sub
sahf
xor
ja
or
cmpb
dec
int
movsb
push
and
out
dec
pop
cli
xchg
dec
mov
or
push
mov
popa
icebp
sub
sbb
mov
mov
jns
sbb
mov
mov
mov
pusha
sub
mov
pop
aad
enter
aaa
xorb
test
test
cld
cmpsb
add
pop
sbb
mov
add
inc
fstp
inc
mov
mov
pop
in
shr
fwait
sbb
in
in
push
mov
xor
push
loope
mov
outsb
ret
and
clc
rcrl
jg
pop
mov
adc
in
xchg
xchg
scas
jecxz
push
shll
ja
lea
add
scas
pop
std
sbb
outsl
stc
xorl
cltd
sbb
das
mov
std
arpl
sub
cld
pop
mov
fildll
ds
stos
vphaddubd
mov
push
test
pop
jns
int
cmpsl
bound
ficoml
sbb
stos
add
clc
rcll
lret
jmp
jl
movsb
adc
or
inc
ss
pop
inc
pop
pop
and
sbb
inc
sbbl
xor
aad
jmp
out
inc
jmp
dec
jo
int
jae
popa
mov
cld
sarb
addl
lock
lods
and
push
mov
psllw
lods
adc
adc
sbb
fsubrs
mov
dec
insl
pushf
xor
out
mov
cmp
adc
mov
jne
ret
dec
nop
ljmp
in
xorb
pop
pop
in
outsb
call
inc
js
outsb
mov
ss
loop
ja
add
mov
adcb
insb
sub
pop
clc
and
shrl
mov
cld
stos
sub
jge
sbb
add
cmp
or
cmc
jg
mov
filds
mov
mov
inc
das
aaa
orb
adc
in
adc
rorb
dec
incl
mov
jl
and
test
dec
in
mov
sbb
pop
adc
icebp
mov
adc
gs
pop
push
je
xchg
sbb
pop
mov
and
cld
dec
jl
xchg
add
imul
fmul
stc
or
sub
push
test
call
aas
dec
in
xchg
push
out
fidivs
in
mov
aam
cmp
mov
or
bound
loopne
dec
fildll
and
xor
xor
rclb
adc
xor
popa
and
stc
js
movsl
xchg
cld
lahf
jno
or
mov
insb
mov
lock
push
mov
pusha
cld
aad
lcall
lahf
add
pop
ficoml
test
mov
jmp
push
or
aad
cltd
aas
push
loop
aaa
add
daa
shr
xlat
push
sti
pop
mov
mov
test
shrb
mov
push
bound
fistpll
into
rcrb
je
cmp
sbb
mov
mov
lret
push
mov
adc
adc
add
pop
adc
loopne
outsl
mov
jo
in
mov
adc
fmull
cmp
and
xchg
jp
sub
adc
add
sub
mov
mov
aaa
std
pop
pop
imul
push
pop
rcrl
xor
arpl
inc
scas
cmp
inc
add
pop
add
or
test
inc
movsb
or
sub
fldt
test
pushf
lock
jmp
cmp
or
add
fistps
shlb
pop
ror
push
pop
outsb
jne
mov
or
mov
inc
out
sub
jmp
in
shrl
clc
sub
mov
and
int3
bound
jle
xchg
sub
cmp
leave
dec
fcomps
rorb
add
mov
test
enter
popf
aad
adc
repnz
dec
ljmp
cmc
ss
xchg
pop
inc
fdivrl
outsb
sub
or
jns
sub
fcmovu
aam
pusha
pusha
jne
incb
arpl
lock
xchg
jae
and
jg
push
mov
mov
fsubl
mov
mov
jae
mov
sub
and
gs
lret
dec
lock
xlat
fistpll
pop
dec
movsl
push
dec
es
or
mov
mov
xchg
push
mov
in
mov
movsl
imul
rcl
clc
loope
push
add
sbb
mov
les
mov
fwait
stos
jno
sub
les
and
cli
sahf
sub
test
mov
cltd
adc
jbe
rorl
sbb
lock
xor
test
adc
push
mov
das
cmc
lods
push
test
enter
sub
push
adc
push
add
sub
out
rcrb
push
or
test
adc
lods
int
je
and
mov
inc
and
cli
add
xchg
daa
cmp
scas
test
into
sbb
sbb
push
mov
cmc
jmp
push
clc
addr16
pusha
daa
movlps
sbb
ret
test
mov
push
cmpsl
out
stos
push
cld
dec
sub
subb
sub
pop
mov
xor
or
je
aam
and
mul
int3
push
xor
mov
repz
push
mov
or
sarl
mov
clc
lock
pop
cmp
dec
ja
push
adc
add
testl
insb
xchg
cltd
daa
dec
dec
adc
cmp
inc
add
aam
cmp
or
mov
adc
mov
das
xor
inc
outsl
or
cmp
sbb
sub
jns
pop
xor
mov
push
fs
icebp
pop
and
faddp
xchg
cmp
inc
or
and
xchg
sub
mov
dec
pop
lods
sti
mov
pop
adc
in
outsl
in
fdivs
cmp
mov
mov
cli
or
cltd
push
sahf
jbe
pop
sbb
out
out
push
mov
orl
or
fucomp
mov
addl
push
pop
push
mov
test
mov
xchg
mov
fldl
add
or
cmp
loope
mov
push
repz
clc
frstor
push
add
sbb
mov
pop
push
cmp
sub
hlt
mov
fs
in
cld
adc
mov
sbb
icebp
aam
pusha
test
xchg
pop
dec
in
ljmp
jnp
or
movsb
inc
xor
cwtl
dec
stc
push
cmp
outsl
jecxz
inc
add
xchg
iret
insl
pop
fdivrs
lcall
jbe
xlat
mov
int3
adcb
ja
insl
faddp
inc
cmp
lock
rorl
jl
sbb
sub
incl
xchg
mov
inc
es
ret
push
cmp
faddl
or
push
in
jmp
or
cmp
ret
inc
dec
mov
jge
sub
pop
outsl
ljmp
sti
bound
cli
push
jg
jno
cltd
dec
cld
inc
dec
push
inc
push
out
scas
addl
sub
xchg
mov
jb
mov
sbb
mov
out
inc
rcl
dec
mov
aas
sbb
movsb
fmuls
mov
test
inc
pop
call
leave
xchg
add
push
mov
push
jg
jp
adc
add
lahf
aas
mov
mov
and
xor
pop
fdiv
sbb
fiadds
ds
aaa
loop
pop
fidivrs
inc
popa
mov
cmp
lret
ffreep
jmp
push
aaa
pop
cmp
fimuls
mov
inc
add
mov
dec
cmpsb
adcl
cs
outsb
push
mov
sub
sbb
pop
jp
xor
mov
outsb
adc
lods
pop
xor
and
cwtl
bound
pop
pop
push
mov
outsb
cmp
xchg
and
mov
popa
xchg
mov
cmp
iret
lock
pop
ret
incl
mov
adcb
sbb
aas
ljmp
ret
and
push
out
push
pop
push
xchg
pop
xor
cmpsb
je
push
mov
or
xchg
dec
notb
cwtl
fs
pop
je
fwait
loope
push
adc
test
out
dec
shlb
sbb
stos
push
inc
lcall
and
fistpl
ja
cld
fcomi
dec
test
roll
inc
inc
loope
adc
jg
pop
mov
mov
inc
shl
das
pop
loop
and
sub
ljmp
or
xor
lret
fdivr
cmpsl
mov
cmp
cmp
push
sbb
pop
and
jnp
shlb
xchg
rclb
mov
and
movsb
scas
aaa
jo
jg
lea
xor
imulb
hlt
ss
out
es
icebp
and
and
cmc
stc
add
gs
iret
sub
testb
jg
fimull
mov
loopne
mov
aaa
dec
cmpsb
xor
and
mov
inc
xor
push
adc
mov
mov
xor
in
fcmovnu
pop
ljmp
fs
push
lds
pop
adc
cmpsb
data16
aas
mov
loopne
test
and
mov
fsubr
outsb
add
lds
add
outsl
mov
or
adc
or
xchg
dec
fbstp
sahf
cmc
pop
push
nop
int
cmpsb
mov
ja
lods
inc
stos
insb
bound
fidivl
inc
xchg
fmull
and
pop
lods
subl
mov
push
rclb
add
movsl
mov
push
jne
or
sbb
test
mov
jle
push
mov
stos
mov
cld
cmp
lea
adc
jbe
dec
out
leave
ljmp
mov
sbb
data16
xchg
jmp
fmuls
sbb
in
in
insl
lcall
outsl
jo
jno
lcall
fsubl
jecxz
mov
ljmp
pop
cwtl
pop
sbb
push
fs
push
sub
loopne
aaa
in
shrl
sub
mov
dec
out
hlt
lea
inc
mov
push
mov
xchg
sub
fists
roll
negl
or
ds
fwait
sub
and
adc
das
ret
pminub
shl
out
fmull
dec
pop
sbb
add
lock
xchg
iret
cmpsb
ficoms
in
loopne
mov
lock
in
mov
cmc
lea
div
mov
pusha
xchg
adc
enter
add
stos
cmp
ss
ja
xchg
push
push
push
dec
dec
je
mov
mov
and
mov
cmp
jecxz
jg
lret
in
cmp
aas
fcompl
sub
mov
sarb
push
pop
arpl
std
mov
xchg
loop
adc
out
loopne
js
sub
pop
ja
lock
xchg
outsl
push
xorl
imul
test
cltd
pop
neg
xchg
jle
pop
and
mov
sbb
andl
push
or
stos
iret
shrl
das
pop
out
cmp
and
jmp
jecxz
inc
ret
adcl
negl
sub
inc
inc
add
cli
jbe
push
ret
push
mov
repz
jp
jb
lret
inc
in
sub
push
aam
add
mov
add
sub
sbbb
jmp
jl
into
imul
hlt
push
stos
insb
xor
call
mov
inc
jecxz
inc
mov
cmpb
jbe
in
lcall
add
add
sbb
lds
pop
mov
xor
and
rclb
push
push
in
scas
or
outsl
pop
cli
mov
bound
gs
fcmove
in
add
nop
add
pop
sbbb
inc
lock
sarb
aaa
mov
outsl
mov
jno
xor
cli
clc
ret
cmp
mov
aas
fdivr
mov
mov
push
test
push
mov
pop
jo
xchg
dec
in
push
xchg
sub
cld
add
shlb
cmp
call
mov
sbb
add
loopne
das
inc
loope
mov
cmp
repnz
push
xchg
cli
outsl
lcall
gs
adc
lds
aas
or
push
in
es
mov
pop
jo
in
jb
dec
sub
mov
mov
in
xor
mov
cmpsb
sti
jge
and
dec
insb
fsubrl
mov
shlb
mov
clc
push
fcompl
push
insb
rcl
add
jne
inc
push
lret
fs
push
jmp
dec
jb
mov
hlt
jle
mov
insb
sbbb
xchg
addb
mov
inc
icebp
movsl
testb
inc
jbe
cmpl
dec
aas
lods
dec
adc
or
xchg
and
cmp
insl
mov
rcll
ret
push
leave
jl
pop
pop
sbb
pop
ss
cmpsl
sbb
enter
cmpsl
js
nop
js
ljmp
es
mov
mov
mov
or
je
out
pop
xor
add
xchg
out
jge
sub
mov
push
dec
push
dec
and
mov
sbb
pusha
orl
push
xchg
mov
out
out
add
pop
and
inc
mov
call
pop
dec
and
inc
addb
push
mov
and
pop
mov
push
popf
pop
out
sahf
jge
xchg
js
clc
mov
ja
lret
aad
add
sbb
jae
ret
lock
pop
jns
push
push
xlat
pop
sub
cmp
addb
jns
jle
jbe
iret
push
and
or
lock
insb
outsl
pop
out
into
mov
aam
inc
outsl
fsubrl
mov
jae
mov
hlt
push
xchg
inc
ljmp
test
cmpsl
and
hlt
mov
xchg
mov
inc
out
decb
or
mov
add
rcll
ret
mov
cmp
xchg
fimull
call
aas
cmp
fists
pop
push
mov
xchg
mov
orl
xchg
mov
xor
cmp
jmp
shl
cltd
lods
filds
stc
aam
mov
jmp
mov
sahf
cmc
je
pop
mov
in
call
jp
xchg
xchg
inc
mov
cmp
jmp
jmp
push
jno
inc
insb
or
insb
fadds
xchg
out
loop
fidivl
add
int3
mov
sbb
mov
jnp
clc
in
pop
loope
mov
xchg
cwtl
jbe
inc
cvtps2pd
jg
fidivl
mov
xor
call
lds
or
push
cmpsb
sbb
ficoml
out
mov
pop
fst
inc
mov
sbbl
outsl
movsb
pop
xchg
loopne
push
lcall
shlb
pop
push
xchg
add
xchg
sub
ljmp
test
mov
or
or
jbe
jp
mov
hlt
mov
mov
inc
pop
mov
inc
shr
adc
sbb
push
jecxz
inc
sub
std
mov
test
push
daa
cli
fsubs
ret
test
sti
cs
stos
add
or
out
and
int
pop
std
test
icebp
test
mov
out
jo
jp
mov
xlat
decl
movl
xchg
stos
adc
pop
mov
adc
push
mov
incb
or
adc
xchg
daa
dec
cmpsb
mov
in
or
rorb
cmpsb
sub
jg
pop
ret
mov
adc
aas
iret
pop
adc
call
push
or
dec
ret
adc
xchg
test
dec
cld
adc
das
inc
sbbl
adc
in
cmp
add
dec
or
lock
ds
incl
in
mov
inc
mov
push
les
mov
sub
ret
xchg
push
sbb
and
jb
test
shr
adc
mov
inc
loop
shll
cltd
xchg
cwtl
es
adc
pusha
mov
pop
xchg
jle
aas
mov
ffreep
aaa
jl
inc
push
push
shrl
dec
jg
gs
ret
xor
or
xchg
xchg
jmp
jle
testl
cltd
das
ss
lods
adc
cli
lret
aam
mov
test
inc
and
adcb
add
mov
sbbl
xor
out
outsb
cmpsl
add
pop
inc
xor
aaa
push
fadd
je
dec
mov
rorb
or
mov
mov
and
push
dec
add
sbb
cld
mov
mov
and
out
pop
rdmsr
jbe
mov
cwtl
jb
mov
xchg
mov
pop
inc
test
cwtl
mov
into
push
es
pop
fistpll
cmp
shlb
data16
pop
add
mov
jbe
fdivrs
push
repnz
sahf
ffreep
mov
xchg
fdivrl
loop
pop
jg
test
push
ficoms
pop
xor
cwtl
xchg
mov
pop
test
mov
mov
push
daa
and
mov
push
shll
fnstenv
push
add
ss
mov
insl
pop
adc
inc
mov
jl
push
pushf
push
mov
inc
cs
sti
push
test
dec
push
pop
push
fs
or
push
fcomip
dec
fwait
nop
test
in
mov
mov
lahf
mov
cmp
jns
jnp
les
data16
cltd
cmp
jp
rcpps
pop
cmpsl
pop
sub
aam
int
mov
add
xor
mov
mov
pop
and
xorb
and
popa
cmpsb
jb
mov
and
std
les
dec
rcrb
sti
movsl
test
mov
mov
adc
push
cli
movsb
testb
xor
push
stos
fs
mov
sub
insb
cld
aad
push
fcompl
fildl
inc
fldl
mov
dec
test
mov
hlt
pop
call
ds
movsl
lret
jl
xchg
clc
add
aaa
mov
xlat
outsl
outsb
fstpl
jne
mov
les
subl
les
xchg
pop
inc
adc
jg
adc
clc
cmp
mov
in
sti
add
test
fs
pop
inc
jecxz
cmc
push
rcl
adc
push
push
inc
insl
cmp
add
pop
lahf
les
add
cmp
mov
push
sbb
int3
push
decb
xor
jp
pop
xchg
jmp
xchg
mov
leave
cmc
xor
mov
sbb
xchg
xor
adc
dec
fs
pop
in
adc
stc
mov
mov
lds
shll
cld
mov
clc
or
xor
or
pop
mov
loopne
mov
outsl
cmp
lret
cmp
sbb
add
outsl
mov
movb
mov
divl
fucomp
xchg
mov
js
sbb
shlb
mov
fisttpl
in
sbb
mov
enter
cmpsb
mov
in
ja
sub
adc
fsubs
xorl
sarl
inc
rcll
fadd
add
fildl
and
pop
xor
xor
pusha
int
fwait
mov
dec
rcrl
mov
dec
daa
cltd
fiaddl
movsb
jp
xor
rcrb
pop
mov
aad
fists
push
xor
sbb
jbe
add
roll
scas
out
pop
jb
lock
lcall
xlat
into
add
cmp
add
jl
mov
lret
push
or
loop
and
jnp
rorl
cld
outsl
test
js
sub
xchg
sub
int3
dec
popa
cmpsl
test
ja
mov
adc
mov
das
pop
push
inc
mov
scas
mov
mov
push
ljmp
pop
pop
adc
xchg
mov
mov
mov
inc
sub
gs
add
ja
loop
jae
orb
mov
mov
sbb
sbb
test
lret
mov
lock
and
add
das
cld
push
hlt
fldenv
test
sbb
call
sbb
and
aaa
sub
imul
dec
std
addb
aam
jns
scas
fistpll
leave
das
std
loope
xor
fisubrs
ljmp
not
inc
lahf
iret
lcall
and
imul
addr16
mov
inc
pusha
imulb
les
xlat
and
or
outsb
xchg
pop
xchg
mov
ret
adc
mov
push
or
xchg
addb
inc
xor
cmc
movsl
push
push
xor
pop
push
sub
es
add
int3
jo
testb
shl
pop
std
lods
and
rorb
mov
mov
lock
and
push
shll
andl
and
inc
shl
mov
mov
fsts
cmp
call
inc
in
mov
push
fsubl
xchg
jp
loopne
dec
imul
add
mov
jecxz
clc
push
das
std
scas
ret
add
loopne
loop
sbb
out
sbb
mov
outsl
icebp
cmp
imul
jnp
fidivs
or
adc
scas
cmp
dec
stos
out
pop
fsts
mov
sub
rcll
addl
pushf
mov
dec
and
inc
adc
iret
jo
pop
push
addb
mov
xlat
add
fildll
push
fdivrl
jns
icebp
cwtl
mov
sub
fmull
mov
add
sbb
ret
pop
outsb
or
sti
cmp
or
inc
pop
out
pop
sbb
inc
mov
add
ret
xor
scas
aaa
sub
cmp
mov
or
mov
mov
sarb
cmp
xchg
sbb
inc
sbb
icebp
stos
mov
cmc
js
mov
jge
daa
mov
hlt
fadds
fists
lahf
pop
add
push
inc
iret
xor
jbe
cmp
movsb
pop
pop
jp
ja
xor
lret
lret
aas
cmpsl
adc
add
inc
lahf
and
xchg
fistps
fistpl
test
mov
mov
clc
xor
inc
push
xchg
mov
clc
or
add
andl
jecxz
or
das
arpl
mov
pop
adc
imul
cmp
sub
sti
inc
shlb
lods
push
lock
cmp
ret
mov
jp
iret
mov
es
nop
push
and
lods
dec
mov
sbb
das
sub
mov
repnz
pop
out
pop
push
mov
loope
xor
outsb
xchg
dec
inc
fildll
std
out
clc
sub
scas
stos
dec
imul
lcall
cmc
sbb
ja
mov
mov
sub
ficomps
stos
inc
paddw
testb
pop
mov
clc
rcl
enter
inc
jl
cltd
push
mov
xchg
jmp
loopne
or
cmp
mov
jmp
or
mov
and
mov
adc
xchg
popa
sbb
push
mov
sub
clc
cmpsb
mov
sub
pop
scas
aaa
push
adc
pop
mov
or
rol
and
aaa
pushf
or
dec
out
js
mov
or
sub
cmpsb
mov
loopne
std
testb
mov
js
xor
mov
sti
clc
inc
or
xor
fldt
test
add
and
cmc
mov
repz
cmp
and
test
js
mov
andl
pop
cs
ljmp
mov
jbe
push
dec
xchg
cmp
push
or
popf
pop
loop
in
mov
fildl
pusha
in
fwait
jbe
add
cwtl
fdivrs
in
aaa
fdivs
cmp
insb
lock
jb
adc
outsb
orb
xor
push
sbb
stos
test
mov
cmpsb
mov
inc
es
push
in
push
and
cmp
mov
dec
fldl
icebp
mov
outsb
push
push
push
jno
rcrb
xor
dec
sahf
mov
xor
fists
add
mov
insb
pop
les
ss
cmp
insl
stos
mov
into
ficoms
imul
aam
icebp
pushf
sub
inc
lret
decb
fdivs
in
lahf
clc
adc
cld
fidivl
xor
outsl
cld
sarb
ds
jns
psrad
outsl
movsb
das
push
je
add
dec
shll
int
or
mov
mov
fcos
xor
mov
adc
mov
push
sub
inc
jae
jg
loop
jmp
adc
pop
iret
mov
loope
pop
cmp
nop
jne
push
lret
pop
push
aad
int
sbb
mov
test
push
mov
inc
loope
or
push
push
stos
test
pop
sbb
xor
cld
ljmp
and
cmpsb
dec
mov
cli
adc
call
outsl
push
push
push
cmp
or
repz
push
pushl
or
out
mov
push
jbe
adc
or
in
push
push
hlt
daa
addb
or
jg
ljmp
test
shlb
mov
ffreep
pop
int3
es
insl
lcall
push
jl
inc
clc
test
data16
out
sbb
icebp
pop
cs
in
and
inc
daa
test
outsb
std
mov
pusha
and
movsb
inc
and
stc
mov
mov
popaw
fstps
mov
addl
pop
addr16
fldt
pop
push
hlt
mov
fs
rol
mov
test
or
ret
fcoml
cld
adc
hlt
sub
pop
mov
leave
les
xchg
rcrb
dec
add
repnz
inc
loope
mov
jmp
movsb
stos
adc
mov
loope
mov
aam
bound
cli
stos
or
push
or
ss
inc
test
dec
pop
in
or
mov
pop
add
jb
insb
outsb
fisttpl
pop
xchg
cli
sbb
sbb
out
ret
or
sti
cmc
fstps
mov
push
mov
sbb
imul
ljmp
js
shll
dec
sbb
jmp
pop
xchg
mov
insb
mov
inc
mov
icebp
movsb
or
out
mov
call
mov
frstor
sub
insl
lret
mov
movsl
incl
xchg
repnz
push
lock
push
adc
xchg
mov
mov
adc
repz
subb
insl
lds
mov
cmp
xchg
sub
std
push
sub
fiaddl
loope
cmp
pop
jb
mov
icebp
stos
adc
cmpsl
icebp
icebp
hlt
pop
orl
cmp
sub
lods
adc
mov
cmpsb
movsb
lds
aas
push
sbb
lock
aam
nop
out
leave
testl
outsb
bound
jl
inc
sar
jmp
sub
sub
loop
xchg
sbb
sbb
jp
ret
cmp
xor
mov
mov
or
call
mov
lods
sbb
cld
out
ss
push
js
int
cmp
mov
or
out
and
rcl
push
jmp
push
aam
cmpsl
fwait
xor
xchg
push
inc
mov
aad
inc
and
in
add
outsb
xor
xchg
bnd
mov
xor
outsl
adc
inc
fcoml
or
xor
mov
les
adc
add
pusha
xchg
pop
lahf
in
pop
xchg
jl
add
push
sbbl
push
loop
test
fsubp
fnstsw
fisttps
push
adcl
ret
xor
xchg
es
sbb
sub
icebp
jmp
test
cld
lods
aas
cmp
push
mulb
adc
inc
sbb
out
lea
xor
es
test
les
test
clc
cs
cmc
mov
jbe
stos
lahf
sti
pop
aam
fadds
xlat
mov
aad
out
push
sti
add
xor
jge
loopne
das
pop
loop
add
cli
scas
mov
push
xchg
fcoml
xor
fisubrl
jae
inc
ds
and
or
clc
shrb
pop
cmpsl
push
xor
incb
data16
xor
xchg
or
mov
pop
mov
pop
ss
xchg
add
mov
cmc
sub
aaa
cmp
xchg
fildl
popa
dec
in
fcmovnb
xlat
sbb
mov
cmpsl
inc
push
test
pop
call
add
jge
sbb
data16
push
inc
sub
sbb
add
dec
xor
adc
inc
jg
sbb
or
notb
aam
xchg
push
fsts
mov
lret
mov
cmp
arpl
ja
mov
and
push
mov
je
jmp
xor
leave
xchg
push
clc
inc
movsb
or
gs
inc
pop
mov
test
pop
int
ret
sub
fstl
sub
in
mov
jmp
out
push
pop
mov
push
lds
fidivl
loopne
mov
cmpsl
stc
fstpt
or
adc
mov
adcl
mov
fidivs
or
sub
arpl
push
ljmp
inc
xor
pop
inc
mov
in
ret
xorb
insl
add
jb
repnz
aam
mov
pop
lods
int3
mov
inc
sub
aam
adc
xchg
pushl
ficoms
jmp
lcall
xor
scas
mov
fcoml
rclb
lahf
or
mov
mov
stc
por
hlt
aaa
aas
jmp
inc
insl
sarl
das
lock
or
jecxz
stos
adc
inc
mov
jo
das
in
xchg
sub
push
adc
or
push
imull
or
jecxz
sub
add
push
and
dec
in
std
and
stos
and
xor
ljmp
cmp
cltd
xor
pop
or
mov
outsb
adc
fidivrl
pushf
cmp
dec
pop
push
shlb
and
mov
pushf
jns
jb
jmp
push
in
fildll
xor
idiv
mov
cli
adc
fisttpl
fsts
pop
or
xor
sub
cmpsb
aad
or
inc
mov
ret
mov
inc
aas
pop
call
pop
push
mov
xchg
jmp
dec
imul
mov
ss
cs
xor
or
sub
mov
fldt
aad
insb
shlb
jge
xchg
jg
hlt
push
mov
pusha
pop
addr16
push
rorb
mov
movsb
aam
call
popf
inc
jb
lret
xor
cmp
push
mov
and
cmp
mov
ja
insl
daa
mov
repnz
push
jge
in
cmp
cld
push
inc
sub
in
mov
sub
add
outsl
call
cld
stos
sbb
movb
dec
scas
or
pusha
outsl
dec
and
xor
fmull
fbstp
and
aas
xchg
jns
pop
sar
inc
pop
jp
fbstp
movsl
and
push
lods
das
jl
pop
int3
iret
inc
loopne
mov
xor
push
scas
mov
or
or
in
fs
push
sti
fildll
adc
push
mov
es
pop
xchg
dec
testl
mov
les
jae
das
jl
loop
jb
or
out
dec
adc
cmp
js
inc
cmc
movsl
mov
in
les
subb
add
shr
add
push
push
inc
insl
subl
sub
lahf
inc
lea
je
and
or
in
or
dec
mov
and
dec
push
outsl
sub
xor
cld
xor
test
mov
dec
stos
daa
sub
pop
dec
jle
or
scas
or
pop
add
lods
out
addb
mov
mov
and
pop
fidivrs
jp
in
bextr
mov
test
popa
stc
gs
mov
pop
test
test
icebp
mov
shl
inc
fisttpll
call
das
enter
mov
and
fs
mov
repnz
push
mov
sbb
aam
lods
jno
rorl
add
cs
cmp
mov
or
xchg
std
mov
pop
stos
push
outsb
aas
in
add
rcll
cwtl
xor
jg
sbb
jmp
push
inc
cmp
sbb
subl
sub
add
add
cmc
insl
push
mov
data16
jecxz
fsubrs
jecxz
arpl
inc
icebp
pop
mov
subl
pop
xchg
repnz
or
std
mov
pop
sahf
add
in
push
push
lcall
jmp
iret
push
repz
inc
in
fcoml
call
rorb
les
adc
pop
fdivp
sub
int3
cmpsl
sub
out
pushf
stos
push
push
mov
mov
push
stos
xchg
pop
rorb
ret
cmc
xor
call
popa
daa
mov
aas
mov
push
or
not
inc
shl
push
orb
add
push
or
cmc
cmpsb
add
ret
mov
les
subb
les
jno
insb
leave
int
outsl
incb
sti
mov
and
cmpps
fstp
fldl
pop
mov
xor
insb
mov
mov
inc
pushf
xchg
lret
mov
or
out
in
inc
lcall
or
dec
clc
leave
in
jmp
imul
sbb
mov
jecxz
fistpll
enter
jo
call
push
adc
push
mov
pop
outsb
jecxz
loopne
lahf
push
sub
dec
push
data16
les
rcrb
fcoms
js
daa
push
or
cmp
icebp
aaa
das
test
cmpsb
and
push
repnz
cmp
inc
add
leave
sbb
fwait
dec
ja
loopew
push
cmp
das
in
jno
mov
and
xlat
jbe
in
xchg
xchg
aaa
adc
mov
add
daa
xchg
push
inc
mov
or
mov
ljmp
hlt
cmp
sti
adc
inc
aas
inc
dec
cmp
mov
mov
adc
sti
or
fildll
xor
f2xm1
in
add
mov
inc
lret
call
adc
loope
decl
xor
inc
pop
xlat
out
jmp
dec
or
sarl
jl
fidivl
js
je
aad
dec
and
jne
pop
xchg
jmp
mov
jg
loop
dec
sbb
out
jp
pop
xor
mov
rolb
push
sub
pop
pop
inc
mov
loopne
fcmovne
pop
sbbb
dec
jecxz
dec
enter
cmp
pop
cmpsb
jmp
stos
push
inc
mov
lock
jno
xor
dec
mov
mov
mov
ljmp
sti
popf
add
test
jmp
in
daa
or
andl
mov
xchg
or
scas
or
js
mov
filds
fisubl
cmp
mov
jo
cli
lcall
or
xchg
adc
mov
out
inc
daa
mov
loopne
add
test
xchg
out
sbb
add
cld
leave
pop
subb
pop
pop
cmc
fistl
loop
jp
xchg
cwtl
pop
and
or
pxor
mov
or
pusha
call
outsl
loop
sarb
adc
and
ret
scas
mov
ret
or
xor
dec
outsl
je
outsl
clc
movsl
lds
mov
ja
cmpsb
test
jp
lret
push
int3
jge
mov
pop
jecxz
insl
and
push
sbb
sub
sti
fistl
test
jb
xchg
dec
mov
cld
lahf
jg
pusha
pop
mov
adcl
fisttpl
lahf
mov
xchg
inc
icebp
imul
add
xor
cmp
adc
sbb
lcall
negb
rcll
mov
test
xorb
mov
iret
adc
sbbb
pop
int
push
es
and
sbb
dec
dec
mov
sub
cmc
pop
jo
fdivrl
add
orl
pop
js
popa
jae
pop
push
aam
jns
cwtl
out
jecxz
inc
outsb
das
mov
push
test
mov
jl
mov
and
subb
imull
mov
js
mov
xchg
add
sbbl
out
loopne
bound
inc
into
mov
test
addl
test
add
mov
int
out
or
sbb
jle
mov
mov
mov
inc
scas
push
mov
pop
push
outsl
inc
push
xor
icebp
inc
shl
scas
ljmp
call
js
notb
and
test
adc
lock
push
and
mov
mov
filds
stos
popf
shrb
mov
mov
xchg
mov
dec
jp
cli
shlb
add
lahf
cld
movsl
lea
and
pop
fsubrl
or
sbb
test
mov
cli
cltd
or
rcrb
outsb
test
mov
sbb
jo
pop
inc
cld
aam
mov
movl
in
aas
fcomp
dec
jmp
inc
fs
out
dec
jg
inc
adc
test
rcl
add
mov
in
cs
cmp
inc
xor
in
mov
std
mov
push
imul
les
inc
jge
or
or
cld
shlb
insb
adc
dec
add
in
outsl
ljmp
sbb
xor
xchg
das
orl
icebp
xchg
popf
in
xchg
ret
outsl
jns
sub
jg
adc
jo
lock
xor
push
inc
adc
je
xchg
das
xchg
dec
mov
adc
cmp
or
jbe
jnp,pt
jbe
loope
mov
sbb
nop
ret
loop
prefetchwt1
add
or
dec
or
cmp
loop
mov
sub
and
adc
jl
or
pop
xchg
jge
pop
xlat
pop
sarb
sub
les
mov
mov
in
sti
and
cli
cmpsb
jl
mov
in
daa
pop
shrl
pop
dec
insl
decl
addr16
out
xlat
cld
out
enter
adc
fiadds
lock
xchg
pop
mov
inc
mov
loopne
inc
add
mov
iret
jb
or
mov
or
stc
push
cld
pop
mov
sub
ja
shlb
outsl
dec
call
sbb
fistpll
cmp
stos
inc
mov
or
in
add
cmp
leave
cmp
fcmovnb
out
mov
sub
pushl
lret
inc
inc
adc
push
imul
dec
push
inc
adc
mov
dec
cmp
pop
fisubl
cmp
fbstp
add
loope
xor
adc
mov
jbe
lea
inc
fsts
xlat
fsubs
lea
lods
pop
sub
cmp
iret
outsb
add
xchg
fidivs
in
mov
jmp
adc
jne
notrack
mov
fdivr
xchg
out
and
rorb
mov
jo
push
test
outsl
lock
mov
fiaddl
sbb
pop
mov
mov
xchg
rorb
push
cmpsb
mov
adc
adc
jp
add
fdiv
dec
loopne
jbe
insb
mov
adc
in
ljmp
mov
lret
in
faddl
adc
cli
repnz
inc
insb
orb
mov
imulb
mov
loope
imul
push
das
push
nop
rol
roll
lods
mov
sbb
push
repnz
mov
aas
mov
pop
clc
or
stos
test
js
mov
cmp
mov
cli
sub
xchg
loop
push
pop
mov
in
aad
iret
je
mov
test
cmp
or
test
jp
mov
aas
jno
push
es
sbb
insb
inc
enter
mov
idivl
aad
mov
insb
into
inc
mov
pop
mov
cmp
mov
outsl
les
dec
xchg
sbb
cld
test
fsubrl
divb
int3
and
js
lea
jle
out
jle
jecxz
xor
cltd
lock
mov
xchg
jnp
or
mov
add
inc
lahf
cmove
sarb
jns
mov
ja
add
sbb
jecxz
sub
cmp
jg
xchg
pusha
pop
push
testb
and
in
outsl
iret
ret
fdivs
add
insb
pop
mov
cmc
cmc
nop
fs
loope
aad
test
sbb
mov
mov
pop
adc
xchg
loop
mov
aad
mov
loop
adc
xchg
dec
rolb
push
rcrb
fs
push
lods
lods
fildl
pop
pop
aaa
dec
fists
ss
jmp
and
movsl
fnstsw
imul
pop
cwtl
add
push
rcl
insl
xrelease
loope
xchg
nop
ljmp
sub
inc
inc
sub
scas
popl
adc
js
outsl
faddl
mov
adc
ffree
adc
call
mov
insb
inc
mov
jge
add
inc
mov
cltd
inc
pop
fdivs
cmpsl
cmpsl
in
inc
push
mov
hlt
and
xchg
jge
add
std
aaa
int
mov
dec
xchg
in
cli
jbe
pop
mov
inc
xchg
jl
mov
daa
sub
out
sub
jbe
mov
mov
push
dec
in
stos
loop
dec
addr16
ja
rcrl
fidivrs
dec
push
mov
sub
or
mov
xchg
fxch
pop
shrb
jbe
adcl
add
test
stos
loopne
out
and
push
jns
jne
lods
mov
rorl
imul
push
sbb
pop
fnstsw
call
stos
mov
sbb
xchg
xor
pop
xor
aam
jmp
outsl
and
pop
add
push
cmpsl
jg
fistpll
inc
cmp
pusha
pop
mov
js
push
shl
call
enter
jb
jnp
pop
mov
insl
mov
jb
jo
dec
xor
add
das
xchg
pop
es
int3
mov
scas
or
mov
xlat
bound
in
das
cld
outsl
fildll
stos
sbb
movsl
ret
pop
xor
arpl
xchg
mov
or
push
insb
mov
add
pop
adcl
xor
test
aas
mov
jg
ljmp
pop
xchg
mov
mov
sbb
add
bound
aam
pop
aaa
pusha
stos
outsb
stos
mull
adc
add
shl
lret
mov
loop
inc
pushf
sub
aas
out
fwait
repz
clc
inc
inc
fdivs
sub
xchg
push
ja
loope
outsb
fsubrl
and
fsubrl
jne
rcr
mov
pop
movsb
cmpxchg
xchg
cmpsb
fstl
mov
ja
mov
mov
jg
mov
das
lret
std
dec
int3
sbb
push
mov
cld
mov
daa
outsl
mov
mov
incl
loopne
fucomip
mov
test
pop
push
inc
sbb
and
fstpt
jbe
and
xor
std
insl
jmp
sti
jno,pn
jb
or
imul
inc
lret
sub
and
ja
push
push
or
enter
jbe
jnp
cmp
gs
xchg
mov
xor
adc
je
js
stos
or
jge
adc
mov
sbb
test
add
jle
add
movsl
cs
clc
fists
mov
add
jl
addl
lods
popa
push
jo
mov
icebp
inc
mov
pop
clc
xchg
pop
stos
hlt
push
imul
jo
pop
daa
push
push
fwait
xor
mov
fistpl
out
mov
mov
lret
push
and
sub
push
jl
sar
lea
xor
inc
adc
lea
das
shr
push
cmc
xchg
ss
cmpb
out
mov
les
es
pushf
les
or
cwtl
mov
loopne
outsl
mov
jmp
xchg
xchg
sahf
inc
outsb
incb
jbe
outsb
bound
push
or
inc
lods
adc
push
into
sbb
xchg
jg
mov
and
inc
push
mull
or
idivl
cmp
lcall
sti
pop
dec
pop
ds
aad
es
cmp
leave
sbb
neg
sbb
dec
ret
or
mov
inc
mov
and
mov
les
add
push
orl
xlat
out
add
fcompl
das
jge
fwait
mov
cltd
push
repz
or
mov
add
loopne
mov
pop
sub
add
aam
and
xchg
pop
bound
mov
std
and
jnp
ffreep
data16
lock
les
clc
jb
jb
ret
sbb
ret
jno
enter
cmpsb
loopne
cld
mov
sbb
popl
mov
mov
xor
xchg
mov
call
inc
jl
xchg
xor
inc
xor
dec
lahf
xor
adc
mov
fisubrl
push
popl
hlt
pop
insl
mov
mov
iret
push
es
dec
jmp
mov
sub
push
popa
sbb
or
mov
ljmp
add
jno
inc
loopne
inc
inc
pop
cmp
or
sbbl
gs
les
push
pop
loop
inc
xchg
ret
sbb
inc
inc
pushf
in
sbb
push
cmp
mov
mov
jle
int
es
mov
cli
ja
inc
lea
dec
gs
adc
stos
bound
ljmp
mov
or
pop
shlb
shrb
push
bound
xchg
imul
xor
or
inc
fcmovnu
mov
add
mov
int
push
and
jle
add
adc
sbb
outsl
lcall
je
movsb
or
or
add
jno
vcvttss2si
xchg
or
jbe
mov
imul
inc
insl
and
dec
mov
sti
mov
add
jp
fwait
ljmp
inc
sub
adc
sbb
fcoml
in
xchg
dec
aaa
icebp
testb
and
jae
test
xor
and
lret
cli
dec
xlat
push
add
add
out
or
inc
inc
inc
dec
mov
popa
cli
repz
inc
bound
rcrl
pop
xchg
push
pop
pusha
jnp
test
loope
adc
test
aad
mov
in
lret
aam
cmpl
test
dec
insl
fcoms
xchg
jno
and
add
scas
movsb
outsl
jno
aad
mov
imul
push
outsl
sahf
cwtl
adc
cmpsb
lahf
popf
mov
jg
lock
dec
icebp
ret
dec
jae
mulb
push
call
sub
insl
push
incl
lds
enter
xor
pop
push
cli
jg
int3
adc
mov
sbb
inc
fdivl
push
add
loop
lret
push
xchg
xchg
sub
jb
push
sub
addr16
outsl
adc
aad
in
adc
push
push
lea
push
and
rcll
push
sub
mov
push
and
mov
pavgb
aam
aaa
aas
and
lea
pop
inc
adc
fmuls
mov
inc
lcall
das
mov
jg
nop
dec
sub
popa
imul
jl
mov
and
dec
jge
and
mov
loop
repz
loopne
add
cmp
add
cld
add
mov
add
inc
mov
cmc
mov
shlb
lcall
inc
pop
sub
dec
les
adc
xchg
sbb
stos
cmpsb
loope
imulb
mov
rcrb
rclb
inc
mov
mov
and
lods
sub
dec
cmp
cmp
jge
jle
ja
push
xorb
sbb
jne
lods
adc
scas
lea
xchg
ljmp
dec
and
xlat
fldl
add
mov
icebp
pusha
push
loope
push
outsl
xor
push
push
std
pop
and
lods
dec
sarl
outsb
test
enter
inc
mov
fnstenv
loope
loop
ss
sub
and
push
mov
lret
or
jnp
filds
xchg
and
xchg
hlt
lea
mov
daa
sub
sbb
cld
bound
insl
and
lahf
fs
mov
add
lret
pop
outsl
jp
pop
pop
sub
inc
stos
mov
jo
mov
divb
outsb
mov
push
inc
loop
adc
push
dec
mov
insb
pusha
sbb
mov
mov
rcl
add
stos
aas
sub
fcoms
sub
test
cli
ja
mov
pop
scas
and
call
je
inc
mov
das
push
or
inc
inc
mov
cmpsl
arpl
fs
xor
mov
lret
test
sub
mov
cmp
cmpsl
push
push
fs
adc
leave
fisttpl
outsl
mov
push
xor
adc
pop
mov
jb
mov
mov
xchg
sbb
mov
loop
aad
cs
inc
inc
scas
mov
push
xchg
xor
cmp
in
sub
adc
insb
aaa
add
ret
xchg
ficompl
dec
das
jle
inc
pop
mov
cmpb
adc
arpl
xor
sub
lea
fucomp
sbb
mov
fwait
sub
fsub
out
fbstp
int3
mov
fneni(8087
loopne
sub
pop
dec
popf
je
inc
xlat
inc
lock
push
pop
adc
mov
jbe
pop
in
push
hlt
cmp
jb
loopne
add
or
es
loopne
or
subb
movsb
push
fildl
aas
jmp
mov
jb
adc
cmp
cld
and
sbb
or
in
push
sbb
inc
jp
fildll
dec
ror
iret
add
les
jl
xor
push
xchg
pushf
jne
loope
outsl
jle
mov
gs
push
sbb
lea
call
test
loope
fistps
mov
push
and
xchg
push
fsubrl
in
dec
les
rcr
sub
cmc
mov
and
xor
in
adc
pop
adcb
mov
jno
cmp
das
cld
mov
adc
pop
mov
xchg
mov
mov
mov
or
imul
sub
inc
xchg
add
lret
lahf
and
push
ss
test
stos
mov
cmp
filds
xchg
xor
cmp
orl
push
ds
rcll
aad
insl
sbb
mov
sub
lods
xlat
jb
mov
rorl
outsl
push
xchg
jge
ret
das
jo
js
test
leave
add
cmp
dec
popf
pop
add
mov
mov
pop
sub
jle
test
inc
popa
mov
adc
mov
js
test
ret
and
sarb
jp
jo
cmp
xchg
sub
arpl
aad
mov
ds
sub
mov
sbbl
xor
push
adcl
pop
sub
fcmovnb
xchg
fimuls
imul
dec
and
jns
sbb
loopne
adc
movsb
and
call
inc
and
push
sbb
lcall
push
icebp
inc
leave
sbb
orb
xchg
adc
rcll
aaa
inc
leave
xor
and
movsl
or
je
iret
sbb
cli
neg
mov
mov
xchg
iret
pusha
aad
cmp
test
xor
push
mov
pop
mov
and
adc
ret
mov
or
push
cmp
pushf
repz
sub
and
adc
pusha
movsb
push
inc
ss
mov
pop
mov
pop
ficompl
xor
rorb
jmp
faddp
xor
cli
movsl
jnp
shrb
lock
sub
ja
mov
and
test
add
pop
push
dec
addb
cli
mov
or
rorb
or
icebp
mov
andl
out
xor
in
jg
loope
pop
or
mov
mov
je
or
inc
loop
pop
jle
insl
adc
leave
adc
xchg
and
frstor
daa
into
jmp
or
add
jns
inc
or
in
fs
mov
adc
cmp
adc
pushl
test
and
lret
adc
inc
je
jecxz
ret
movsl
pop
stos
aaa
adc
jp
scas
insl
repz
sub
push
cwtl
fiadds
jle
mov
outsl
lcall
into
pop
iret
xor
idivb
jnp
data16
testl
testl
xchg
or
adc
testb
add
adc
hlt
scas
in
dec
daa
jbe
dec
mov
call
cld
adc
aaa
cmp
ss
pop
fnstcw
mov
lods
mov
jbe
test
push
add
inc
or
cmp
scas
mov
push
fimull
mov
push
mov
jne
sbb
movb
xchg
pop
push
and
cmp
test
loopne
notb
in
mov
in
fyl2x
jge
js
ret
imul
and
ljmp
ret
jecxz
or
xchg
mov
xchg
in
pop
sbb
and
or
dec
cmpsb
dec
fisttpl
lods
loop
inc
xchg
and
mov
and
sub
and
test
movsl
inc
push
aas
ss
imul
repnz
sbb
stos
inc
sbb
or
push
mov
sarl
bound
mov
add
fisttps
imul
xchg
aaa
cli
leave
cltd
popf
fsts
outsl
mov
out
sti
or
pop
sbb
mov
push
xchg
push
jb
decl
pop
dec
lods
testl
xchg
and
pop
add
adc
mov
sub
test
in
or
scas
stc
push
sbb
inc
mov
fistl
sbb
testb
mov
adc
lds
xor
mov
shrl
mov
jnp
jge
movsb
pop
mov
fdivs
insb
addl
jge
push
jno
in
mov
jg
nop
mov
cmp
pop
lcall
ljmp
adcl
out
pop
sbb
insb
push
and
add
xchg
xor
jge
ss
jge
mov
add
sub
mov
jnp
cmpps
cs
or
in
adc
and
dec
pusha
sarl
adc
and
into
fsubl
add
daa
dec
jl
adc
outsl
push
lods
xchg
push
mov
test
and
xor
cli
sbb
lahf
mov
in
mov
or
repz
mov
icebp
sbb
addb
mov
dec
xchg
jae
mov
bound
sbb
bound
in
stos
ljmp
imul
inc
jecxz
psubb
loopne
jecxz
or
shll
scas
mov
dec
lret
testb
call
lds
dec
mov
scas
inc
test
jle
lds
call
add
imul
inc
adc
adcl
mov
loope
inc
cltd
mull
lock
add
jns
into
add
push
ja
jp
test
push
pop
ss
inc
xor
dec
js
cli
xchg
pop
pop
xchg
repnz
dec
dec
aaa
mov
xchg
mov
cmpsl
int
inc
or
mov
mov
dec
jae
ficoms
push
jnp
ljmp
outsb
fcompl
add
jne
or
push
or
jg
scas
jb
cmp
or
enter
cld
or
mov
sahf
inc
mov
int
push
mov
add
mov
lock
xchg
or
push
shlb
in
or
aaa
inc
xchg
fisttpl
add
sbb
or
push
lret
sbb
rcrl
add
mov
repz
ret
mov
xor
nop
repnz
sub
test
cmp
xchg
adc
pop
push
loop
pop
loope
sbb
pop
inc
sbb
loopne,pn
dec
lods
inc
pushf
mov
cmpsb
mov
mov
jecxz
jns
inc
addr16
mov
loope
insb
sub
sahf
xchg
add
inc
fdivl
in
loop
fistps
pop
out
test
fisubl
mov
push
test
pop
adc
aam
aad
movsl
or
push
push
add
js
fwait
pop
pop
fmuls
jnp
adcb
fistl
xor
loopne
shl
aas
pop
jl
xchg
jle
ficomps
ds
adc
dec
je
jle
push
dec
jb
xchg
fcmovb
mov
adc
ret
push
aam
jo
jl
aam
xchg
fwait
jecxz
xchg
or
fst
sbb
dec
adc
shl
or
mov
xchg
or
and
mov
or
lock
dec
imulb
inc
sbb
outsl
aaa
shrb
inc
sarb
xchg
movsl
lret
sahf
movsl
mov
add
insl
rclb
bnd
bound
sbb
lahf
push
clc
push
call
jp
push
fcmovbe
jmp
adc
mov
mov
pop
or
in
adc
scas
mov
imul
xchg
ss
jns
add
push
mov
adc
fsubl
outsb
test
stos
dec
jp
mov
nop
pop
mov
mulb
jne
jne
inc
test
dec
das
inc
adc
dec
mov
fucomip
dec
mov
or
mov
aad
test
dec
lock
sbb
fcoms
and
mov
xchg
sbb
adc
lcall
pop
sub
popf
hlt
ja
das
mov
sub
push
inc
dec
int
adc
test
jle
adc
rclb
and
and
jne
stos
les
adc
fadds
andl
jg
jnp
mov
popa
inc
sub
loop
jmp
sbb
nop
shlb
adc
in
xorl
ss
inc
cmpsl
mov
test
lcall
sub
adc
stos
outsb
loopne
and
mov
sbb
add
das
xor
xchg
in
push
mov
xchg
cmp
or
add
adc
aaa
mov
adc
aam
sub
fistl
mov
roll
add
int3
mov
aaa
jle
mov
outsl
inc
sub
adc
push
hlt
mov
lock
dec
mov
xchg
mov
out
sbb
mov
cli
cs
lods
mov
imul
repnz
jecxz
inc
cld
jbe
push
sahf
mov
pop
sub
fisttps
loop
mov
in
dec
or
push
mov
cmpsb
cmp
jnp
ds
push
test
mov
and
and
sti
lcall
pop
fnsave
mov
cltd
mov
cmp
fdivs
fists
mov
inc
shrl
mov
mov
mov
mov
xchg
adc
adcb
jo
mov
nop
mov
xor
shlb
dec
adc
jo
push
shr
xchg
push
cs
out
cwtl
out
hlt
ret
shll
out
pusha
fwait
scas
popf
clc
sbb
push
inc
je
mov
test
std
and
pop
push
pop
pop
loope
arpl
je
pop
int3
cmp
jecxz
movsl
mov
pop
inc
andl
negb
mov
test
sub
jp
rcll
in
adc
and
aaa
pop
mov
mov
dec
mov
and
mov
push
pop
xor
loopnew
mov
scas
adc
aas
push
test
pop
sbb
mov
pop
push
inc
inc
mov
jg
rclb
jne
jmp
inc
cmp
mov
lods
cmpsl
inc
adc
add
mov
push
pop
and
and
outsl
sbb
jb
or
mov
push
movsl
loop
ja
mov
loopne
clc
xchg
xchg
fs
and
push
mov
idivb
mov
jbe
mov
ja
test
loope
pusha
adc
mov
or
das
fdivl
je
cld
and
xchg
sbbb
mov
dec
mov
or
cmpb
pop
popa
loop
or
mov
xlat
xor
sbb
stos
dec
adc
jmp
mov
mov
xchg
std
jp
daa
cmp
pop
lea
sbb
ret
test
pop
pop
adcl
sbb
or
add
cmpl
ret
sub
mov
mov
xor
fcmovu
mov
and
sbb
testb
data16
ja
mov
cmp
jb
fs
inc
pop
sbb
mov
cwtl
jbe
scas
ss
xchg
sbb
mov
sbb
xor
push
stos
sbb
cmc
sbb
and
cwtl
dec
jae
adc
cmp
cmp
lds
xchg
cwtl
fdivrl
outsl
sahf
clc
pop
andl
cltd
pop
mov
add
ret
loope
iret
add
xlat
add
or
inc
sbb
loop
push
pop
mov
mov
jbe
cs
jge
xchg
cmp
js
pop
sub
pop
mov
push
or
in
xchg
js
xchg
call
je
lds
pushf
xchg
je
cmp
mov
mov
jle
mov
sbb
push
jo
mov
cmp
jnp
lret
dec
ja
mov
ljmp
xor
or
das
jmp
out
aam
push
and
pop
mov
xor
pop
repnz
cltd
or
dec
je
loope
cmp
in
xor
mov
cli
mov
inc
rcll
iret
inc
adc
push
out
sbb
iret
loopne
leave
ja
aam
or
and
mov
pop
ja
sub
add
push
sub
fcmovnu
ror
sub
add
lahf
testl
mov
arpl
xorb
mov
jge
xchg
mov
inc
and
sub
insl
add
mov
pop
add
mov
adcb
fidivrl
lock
int3
sbb
cld
movsl
mov
dec
adc
pop
xor
push
jne
lods
fwait
or
inc
cmp
cmp
push
jge
mov
adc
and
lods
stos
lock
dec
and
ljmp
or
stos
sbb
cmc
rol
adc
jecxz
xor
jbe
jl
jg
iret
inc
add
and
mov
and
dec
andl
sti
mov
daa
add
sahf
cmpsl
mov
or
cmc
cmp
or
lahf
push
dec
stc
adc
imul
xchg
and
into
jno
add
xchg
in
cs
mov
sarl
sbb
push
cmp
test
sti
adc
movsb
and
test
xchg
adc
imul
int3
cmp
mov
jg
inc
or
test
sub
lret
inc
lods
mov
or
xor
or
or
dec
std
ret
cmpsb
enter
rcrb
cs
add
cmp
push
mov
jle
scas
pop
sbb
dec
iret
pop
and
dec
mov
sahf
or
push
adc
push
and
dec
decl
imul
out
out
push
push
push
xor
adc
jne
inc
push
ret
push
push
jns
push
cmpsb
jmp
inc
jmp
fisubl
pop
out
pop
rcl
outsl
mov
test
push
jmp
and
sub
push
jp
mov
push
daa
inc
inc
rcrl
lods
loopne
xlat
sub
shlb
mov
xlat
and
inc
and
xor
mov
aaa
mov
lea
aaa
inc
movsb
lcall
jmp
roll
mov
jl
shr
pop
outsl
popa
pop
rorb
lahf
and
and
inc
loopne
mov
xor
lretw
add
ja
movsb
mov
and
out
stos
int
push
jo
mov
mov
femms
push
sbb
push
mov
insb
test
sbb
push
dec
shll
ljmp
push
mov
xchg
cltd
fcmovnu
inc
aaa
jle
jecxz
fildll
addb
cmp
ljmp
xchg
test
aaa
dec
out
ljmp
shlb
cmpl
jl
roll
mov
xor
nop
data16
cmc
sahf
jge
stc
subb
bound
inc
add
outsl
add
jg
mov
test
adc
jo
das
adc
pop
adc
lahf
pop
outsl
pop
test
mov
push
xchg
and
scas
fwait
jecxz
aaa
je
popa
sbb
dec
inc
cmpb
pop
xor
loop
inc
mov
ljmp
ret
push
popa
add
adc
cmp
sti
cltd
jle
xor
jl
xor
cmp
sbb
adc
push
xor
ret
and
cld
inc
add
ret
sub
jecxz
sbb
xchg
dec
jne
fisttpl
and
andl
xchg
xchg
popf
push
mov
cmp
mov
adc
cmp
cs
pop
xor
jecxz
mov
out
out
leave
xchg
xor
mov
std
xchg
xchg
dec
mov
or
mov
lods
push
jno
push
sbb
in
stc
mov
les
or
jmp
clc
sbb
jns
fs
push
and
xlat
incl
xchg
sti
fsubr
gs
sti
fsubs
jae
fidivrl
sbb
pop
insl
outsl
fstl
pop
xchg
add
imul
xchg
cmc
mov
jecxz
push
call
pop
or
xlat
rol
gs
mov
xchg
inc
pop
es
js
out
imul
mov
ds
push
push
pop
hlt
sbb
add
mov
sub
jbe
mov
imull
lods
pop
cltd
push
rclb
les
pop
pop
dec
outsb
cmp
push
jp
jb
and
or
or
xor
lods
inc
test
adc
sbb
ja
mov
rol
mov
xchg
cmp
hlt
repnz
ret
cld
adc
sbb
int3
add
lods
lahf
clc
insb
mov
and
scas
lea
and
jne
add
mov
dec
insb
and
and
mov
sub
cwtl
add
rorl
push
shr
dec
loope
ja
mov
subl
out
inc
sbb
inc
sub
clc
add
jecxz
push
bnd
rorb
mov
loope
leave
push
xchg
int
jno
stc
and
add
testb
pop
add
popa
add
pop
mov
sub
and
imul
rorl
aaa
fldl
mov
push
inc
or
mov
jb
adcl
cmp
push
mov
mull
fwait
or
xchg
xor
ficomps
and
jmp
xor
stos
stos
sbb
xlat
and
cmpsb
jp
jo
xchg
jg
inc
mov
cmp
push
bound
loope
adc
mov
lahf
aad
mov
shlb
mov
sub
orb
fistpl
mov
mov
sbbb
and
data16
rclb
cmp
lds
rcll
stos
data16
divl
mov
mov
sub
sbb
fsub
pop
test
pop
push
gs
dec
sub
inc
enter
ja
pop
lcall
bound
gs
mov
pushf
adc
inc
fxtract
aam
mov
outsb
icebp
outsl
out
fisttps
lea
daa
mov
push
xor
add
sbb
dec
jle
fcom
call
add
aad
sti
push
sbb
xchg
aaa
dec
jp
push
jg
lods
outsl
mov
sub
mov
andl
mov
push
imul
es
jge
push
lret
out
out
add
or
push
mov
fiaddl
xlat
addr16
sbb
and
lods
pop
aaa
aaa
data16
mov
sbb
daa
cs
imul
pop
shl
push
add
inc
sub
in
arpl
pop
push
or
adc
lret
out
push
inc
ss
mov
push
loopne
pop
inc
mov
or
faddp
push
mov
inc
negl
adc
push
ss
adc
and
cld
xchg
mov
or
test
popf
xor
mov
jp
dec
movsb
and
lcall
outsl
inc
inc
cmp
cmpsl
pop
dec
inc
es
imul
bound
inc
imul
dec
ficoms
xchg
sbb
xor
ljmp
dec
and
add
jno
repz
push
xlat
ret
loop
fistpl
jno
pop
jge
push
cmpsl
jae
bound
in
into
mov
nop
repz
test
shrb
repnz
and
outsb
xor
and
notb
mov
lahf
add
scas
andb
lods
mov
sbb
sub
mov
mov
cld
int3
xor
mov
ja
sub
pop
sub
sarl
push
mov
push
fisubrs
ss
aas
lods
dec
jl
adcb
and
pusha
scas
add
sahf
sbb
push
fsubrl
sbb
push
stos
imul
enter
incl
movsl
or
ds
pop
adc
xchg
insb
fstps
sbb
das
pop
jp
fnstcw
lcall
enter
or
sti
or
mov
lock
sub
jecxz
fcompl
lahf
mov
lea
pushf
pop
dec
mov
mov
mov
pop
out
and
icebp
movsb
mov
mov
mov
stos
les
push
lahf
call
push
mov
in
out
adc
sti
push
les
enter
cmpsl
push
movb
test
or
call
fsub
xchg
xor
add
mov
jge
outsl
cld
inc
cmpsb
jg
aaa
and
aaa
sub
adc
inc
inc
or
and
jecxz
sub
mov
pop
and
mov
xorb
or
mov
shll
jg
arpl
or
pop
fs
test
in
dec
pop
clc
shl
mov
aad
iret
mov
shr
ret
cwtl
push
or
and
push
lods
mov
jnp
pusha
mov
clc
xchg
cmp
pop
cwtl
xchg
push
mov
lea
add
pop
cmp
lahf
mov
fwait
or
pop
lds
lods
xchg
jle
and
movsl
stc
into
pop
inc
rcl
scas
ret
push
inc
add
add
icebp
pop
ss
xchg
enter
push
inc
adc
push
sti
or
inc
mov
cmp
sub
ljmp
push
jae
lahf
mov
test
inc
pop
mov
hlt
fcomi
mov
sbb
lds
jne
push
out
fiadds
leave
shll
adc
cmp
or
dec
push
lahf
inc
ja
mov
stos
ficomps
nop
xchg
mov
jle
aaa
pop
cwtl
into
les
cvtps2pi
ljmp
ror
inc
or
es
das
push
dec
sahf
lcall
dec
sbb
mov
incb
pop
lods
mov
adc
cmp
lods
mov
test
sbb
out
cmp
ss
dec
push
jge
movsl
cld
divb
cs
popa
jmp
xor
jo
in
sub
push
sbb
xlat
add
cmovno
pop
sbb
sar
add
cmp
jmp
imulb
in
pusha
pop
cli
mov
add
or
sub
sbb
adc
inc
or
and
les
push
popa
push
imul
and
pop
xchg
outsl
es
adc
pop
mov
pop
test
jbe
push
and
sub
insl
push
mov
sahf
loopne
out
fsqrt
insb
sahf
fnstenv
ret
js
das
adc
clc
in
enter
jecxz
push
add
hlt
in
shrb
fs
adc
in
xchg
das
ficoms
mov
sub
nop
sbb
inc
fs
add
jmp
call
mov
and
mov
fisubrs
lods
repz
push
icebp
mov
ficoml
mov
std
mov
jne
insb
cld
out
insb
push
adc
sbb
addb
fisubl
scas
in
mov
mov
add
and
push
or
arpl
test
or
pop
mov
mov
mov
adc
ss
das
adcl
cmpsl
xchg
mov
mov
xchg
movsb
add
pop
mov
aad
and
sbb
mov
test
inc
xchg
call
cmp
movsl
and
loop
xorb
das
mov
mov
loop
aas
add
pop
pop
pop
cmp
add
mov
dec
out
fistpll
loopne
cwtl
in
and
pusha
fstpt
outsl
push
push
rolb
sub
or
enter
incl
lock
aaa
adc
xor
in
push
dec
scas
and
push
push
fcmovnu
fisubrl
je
push
pop
jl
xlat
sbb
cmp
pop
and
mov
jb
fists
add
sub
fwait
cmpb
sub
cli
out
ficompl
sbb
dec
into
mov
push
xchg
shrb
fcoms
push
mov
test
xor
push
scas
ss
outsb
rolb
sbb
rorl
mov
add
cli
or
pop
xor
xchg
pop
jae
insb
or
arpl
je
jno
mov
loope
cmc
pop
lock
mov
pop
in
ret
mov
int
fstpt
jg
xor
jp
in
jge
mov
sub
sbb
out
inc
sti
decl
and
jg
call
ss
or
clc
sti
sub
inc
xor
icebp
or
insb
out
sub
addl
xchg
add
jb
inc
xlat
mov
xor
push
popf
jge
and
call
sub
ljmp
xchg
out
jle
jg
mov
sarb
cmp
insl
arpl
mov
mov
scas
enter
test
lds
outsl
add
cmc
rolb
gs
push
jne
fdivl
dec
shrl
sub
out
inc
and
lds
xchg
add
push
sub
dec
jg
or
in
xchg
test
mov
add
inc
ret
call
stc
xchg
out
xor
jl
loopne
aam
cld
stos
ds
pop
mov
mov
mov
inc
push
xchg
cmc
mov
mov
std
ret
or
mov
loopne
mov
xor
push
loop
add
push
mov
dec
stos
add
in
stos
outsl
jg
or
lods
fs
xor
jo
add
pusha
es
clc
dec
in
sbb
movsl
in
push
xor
push
cwtl
es
push
in
in
mov
aas
push
jnp
fsts
dec
mov
adc
push
insb
inc
pushf
jo
mov
mov
mov
push
mov
jl
jbe
dec
xor
in
pop
insb
js
rorb
mov
dec
ljmp
cltd
pop
mov
rcrb
fistps
adc
incb
mov
sbb
sub
and
sbb
dec
jp
gs
jecxz
mov
addr16
xchg
dec
in
test
lds
in
jbe
hlt
dec
mov
shr
pop
mov
testb
pop
cmp
ret
xchg
cmp
cmp
or
aaa
mov
imul
jmp
adc
push
scas
jne
add
fxch
inc
sub
bound
push
sbb
pop
das
insb
loopne
aas
or
aas
imul
inc
loop
inc
ds
pop
inc
aad
mov
pusha
sbb
sbb
lock
jle
mov
pop
xchg
sub
jecxz
lahf
loop
push
cmp
test
mov
popa
dec
lret
pushf
xchg
mov
icebp
and
scas
or
jmp
pop
mov
push
lds
dec
jne
pop
sub
xchg
dec
dec
xor
mov
movb
or
int
jg
mov
notl
aad
mov
sub
movsl
mov
test
arpl
push
xlat
jg
mov
adc
mov
shr
cli
dec
shrl
jo
push
dec
ja
push
clc
outsl
fstpt
ret
or
arpl
sub
jmp
pop
ja
pop
sub
ds
adc
push
aam
push
aad
dec
idivb
outsl
or
mov
mov
or
adc
cltd
movsl
jmp
je
mov
xlat
mov
int3
orl
ds
pop
ss
fildl
insb
mov
or
and
pop
loopne
mov
je
inc
and
mov
aas
out
pop
inc
cmp
xor
movsl
pop
push
inc
cmp
enter
mov
dec
aad
int
cwtl
ljmp
aaa
lds
push
icebp
clc
lret
les
or
stos
repz
stos
lcall
sbb
push
add
aaa
mov
ficoml
dec
les
sbb
fmuls
fbstp
loop
and
xchg
add
jl
js
fwait
clc
out
mov
in
add
loop
rcr
mov
loope
jae
in
das
inc
pop
push
js
inc
icebp
cltd
aas
cld
insb
push
addr16
icebp
xchg
ficoms
dec
sub
or
jb
jmp
fcompl
mov
dec
lock
mov
faddp
adc
movsb
imul
add
sarb
out
xchg
js
jle
arpl
xor
into
mov
mov
push
mov
xchg
js
xchg
xchg
cmp
incb
cmp
test
push
jne
inc
lds
and
inc
xchg
dec
ss
ja
repz
add
js
dec
push
fldt
add
test
push
insl
mov
insb
adc
nop
fnstsw
add
nop
stc
jae
imul
nop
dec
ja
fidivrs
addr16
adc
jae
mov
mov
push
push
insb
cwtl
push
add
jbe
xchg
sbb
jl
outsb
dec
xor
push
mov
aam
xor
jg
pop
cld
mov
rcr
sub
jmp
fnstcw
sbb
fistpl
add
call
jg
fcoml
xor
gs
mov
negb
adc
loopne
xchg
in
mov
pop
mov
mov
sti
cmp
xchg
repnz
mov
push
insl
outsl
ljmp
loop
pop
mov
push
or
rolb
sti
cli
int3
xacquire
cmp
nop
xorl
add
push
inc
sti
scas
sub
aas
loop
inc
push
andl
xchg
imul
fadds
data16
rolb
adc
inc
push
push
xchg
pop
jg
mov
sbb
nop
dec
sbb
js
jns
pushl
jp
jne
mov
xchg
in
inc
cld
mov
sbb
pushl
aam
adc
bound
dec
push
movntps
add
fstps
or
es
adc
pop
cltd
fld
xchg
push
add
out
pop
add
xor
xchg
nop
cmp
mov
mov
shl
cmp
stos
push
mov
cmp
repz
xchg
cmc
mov
ljmp
cltd
stos
sub
aam
jle
arpl
fnstsw
ja
sbb
push
mov
adc
lea
push
push
lea
fimuls
mov
push
sub
cmp
std
xchg
fstpt
cld
fimuls
loop
aam
xorl
mov
clc
pop
lcall
test
or
imul
xor
je
push
mov
movsl
mov
sbb
mov
xchg
dec
pop
push
dec
adc
jecxz
subl
lret
outsb
push
push
bound
fstl
dec
mov
dec
pop
add
or
subl
shlb
mov
lgdtl
mov
out
dec
add
mov
mov
fisttps
cmp
mov
mov
push
mov
sahf
arpl
ret
in
scas
or
add
cmp
subb
cmp
mov
jae
push
test
loop
in
and
sbb
dec
ss
push
mov
xchg
cmp
test
cli
rolb
outsb
dec
cli
adc
inc
stc
cwtl
mov
push
out
sbb
sbb
stc
jmp
popa
mov
aaa
mov
cmp
aam
sbb
jle
sub
rcrb
jb
cltd
mov
mov
or
subb
in
fisubrs
sbb
cli
rol
push
out
xor
popa
sbb
cli
push
xchg
pop
and
and
jl
outsb
loope
mov
pop
add
jns
test
enter
pop
test
mov
ljmp
inc
jne
clc
push
sbb
fisttpl
pop
or
enter
leave
stos
mov
clc
in
ret
sub
int3
mov
push
pop
push
and
mov
mov
push
imul
addr16
jo
mov
mov
outsl
shlb
aad
lock
add
js
xor
fistpl
add
mov
mov
jle
sarl
jmp
test
push
pop
pop
fcomp
push
out
cmc
dec
adc
sub
add
addb
and
movsl
insb
mov
hlt
mov
pop
test
outsl
pop
mov
push
and
loope
loopne
std
je
pusha
lods
aaa
shl
inc
dec
pop
sub
or
in
sub
es
mov
daa
stc
jg
std
mov
inc
cmp
xchg
cmp
lods
popf
bnd
subl
lods
dec
pop
fwait
insl
xchg
in
mov
push
mov
jno
cmp
stos
icebp
aaa
mov
sub
xor
iret
dec
mov
sbb
inc
loop
push
stos
jne
or
add
xchg
rorl
sub
or
movsl
and
andl
pop
das
ret
dec
call
mov
or
inc
jge
std
lods
cs
mov
sub
mov
aas
add
pop
mov
ror
pop
stos
lret
jae
in
xchg
loop
pop
jbe
mov
insb
js
mov
clc
cmc
sbb
pushf
cmp
test
mov
fisttpl
cmp
std
cmp
sbb
popa
push
jecxz
dec
or
imul
adc
aaa
popa
sti
pop
outsb
cmp
nop
adc
int
data16
leave
adc
repnz
fsubs
fnstsw
mov
ds
cli
lods
sbb
fcomps
out
xchg
imul
mov
adc
add
js
fistpll
and
sahf
js
mul
xchg
cmc
jno
enter
dec
loopne
nop
das
xchg
adc
daa
mov
inc
pop
mov
push
cmp
sahf
mov
pop
negb
xor
fsubl
adc
xchg
mov
idiv
jne
in
frstor
ljmp
pop
jg
pushf
notl
mov
call
cltd
xor
add
and
jg
push
in
cmp
push
or
fdivr
lea
jne
add
movsl
icebp
mov
fcomip
arpl
lahf
xchg
mov
pop
adc
jo
add
ja
mov
lock
mov
sti
test
fistps
fcoms
ret
dec
ljmp
lea
mov
inc
mov
outsl
decl
sub
and
mov
mov
dec
cld
test
pop
pop
jnp
pop
fldenv
mov
outsl
aaa
loop
gs
andl
orb
mov
fists
ljmp
xchg
cmp
or
aam
push
sub
mov
mov
xacquire
cmp
and
cld
mov
xchg
out
fs
ja
aam
push
mov
pop
loop,pn
dec
faddl
fisubrs
inc
mov
fsubr
push
inc
out
pushw
mov
lret
loop
mov
jl
lock
dec
adc
inc
stos
push
clc
mov
pop
jp
cmp
cli
xorb
popa
jecxz
inc
mov
push
adc
pop
in
cwtl
jne
mov
lcall
push
jmp
fiadds
inc
mov
and
push
lock
ljmp
xor
cli
jmp
ret
inc
jg
outsl
mov
mov
shr
sub
and
stc
andl
and
xchg
push
mov
outsb
fnstsw
sbbl
jno
xor
in
das
aam
pop
inc
xchg
daa
adcl
cmp
jmp
sub
pop
out
cmc
inc
lock
fildll
mov
xor
leave
movsl
xchg
mov
adc
mov
popf
cmp
dec
xchg
jnp
in
mov
rorl
shlb
pop
cltd
and
dec
mov
imul
xor
loopne
add
inc
mov
sub
add
or
in
jge
outsb
add
inc
sbb
and
xorb
cs
cmp
push
daa
les
fildl
decl
sub
lret
nop
insl
and
mov
and
or
cmc
idiv
jbe
daa
xchg
sbb
jmp
adc
or
inc
mov
adc
movsb
mov
fistl
aaa
mov
cmp
addr16
xchg
sub
out
ja
repz
outsl
insb
adc
push
nop
dec
xor
sub
sbb
hlt
hlt
xorb
sbb
movsl
lods
idivb
mov
pop
loopne
ds
popl
xchg
ss
pop
into
inc
cld
subb
test
push
fnstsw
jg
mov
loopne
div
fsubrs
cld
push
test
pop
fnsave
push
cwtl
lods
jb
pop
sub
or
outsb
movsl
adc
xchg
cmc
hlt
xor
mov
call
adc
jnp
fisttpl
scas
in
mov
out
and
cmp
mov
rcr
mov
mov
or
addr16
and
fst
inc
or
outsb
bound
dec
mov
push
mov
aam
push
pop
loopne
sub
enter
lret
das
fcmovne
inc
fyl2xp1
sub
jo
sbb
stc
sbb
decb
ljmp
ja
push
sahf
jecxz
enter
cltd
add
clc
adc
out
stos
jg
mov
xchg
mov
repz
js
inc
leave
xchg
and
sbb
ret
pop
inc
aaa
jge
adc
adc
rcll
decl
push
sbb
jb
stc
lret
push
jle
lock
or
cmp
roll
pushf
xchg
jbe
call
insb
loopne
push
decl
rolb
cmpsb
aam
jge
xchg
aaa
dec
inc
test
xorb
icebp
sub
in
jg
ret
int
inc
stc
enter
sbb
xor
ljmp
mov
pop
dec
dec
xchg
clc
push
call
jmp
mov
loope
push
sahf
adc
dec
mov
sbbl
xlat
in
ljmp
roll
add
jl
outsl
jle
push
aas
add
sub
stc
sub
fisubl
cld
mov
rorb
and
cld
and
mov
adc
rcll
icebp
test
outsb
sahf
sti
adc
dec
test
push
adc
or
mov
mov
or
pop
dec
test
lcall
mov
sbb
leave
mov
pushf
inc
adc
dec
testl
xor
sbb
jns
adc
outsl
fildl
jo
mov
add
in
cmpl
xchg
jmp
loopne
xor
cmc
add
iret
mov
rcll
jbe
fists
mov
xor
ret
ret
dec
pop
xchg
sbbb
cmp
outsl
mov
sub
int
or
loopne
cmp
rorl
testb
dec
mov
fucomp
movsb
shll
mov
mov
push
bound
pushf
mov
rcr
in
push
mov
lret
mov
call
lcall
inc
clc
sti
mov
popa
sbb
stos
dec
shr
pop
int3
xchg
ss
add
add
inc
cmpsb
loope
sti
cmpsl
hlt
mov
outsl
and
mov
push
aas
add
insb
inc
push
repz
inc
test
push
daa
sbb
adc
sbb
cmp
leave
mov
movaps
rorb
sub
movsb
repz
incl
mov
pop
xor
das
fadds
mov
or
fwait
push
addr16
in
ret
cwtl
and
cmp
cmp
fisttpl
or
lret
adc
xchg
inc
mov
pop
pushf
aas
es
js
out
ss
inc
nop
test
rol
movsb
fmul
jmp
pop
clc
xchg
in
push
enter
cld
mov
out
clc
out
in
jae
sti
int
cmp
mov
xchg
fdivs
sub
or
cmp
xor
pop
and
insl
jmp
inc
mov
fldl
sbb
ret
mov
cmc
aaa
mov
jecxz
je
sti
sarl
pop
jnp
push
xor
das
xchg
les
jo
mov
jo
aad
or
mov
cmc
int
mov
inc
xchg
and
stc
dec
adc
ja
xchg
lahf
sbbb
and
nop
push
pop
pusha
in
ljmp
adc
sbb
stos
decb
xor
mov
xlat
jae
and
subb
inc
xchg
out
fistps
clc
pop
icebp
les
rcrl
loopne
lea
jge
add
shrl
inc
shll
ljmp
xchg
xchg
jmp
jb
xor
mov
dec
push
incb
mov
in
mov
icebp
and
mov
addl
jge
jnp
outsl
mov
xor
loope
repnz
js
push
push
add
cli
ret
adc
pop
int3
lods
pop
orb
inc
bound
push
adc
jmp
sub
dec
fs
test
cmp
hlt
mov
push
in
sub
or
push
incl
mov
push
and
jg
mov
sbb
xchg
mov
test
adc
jmp
test
jg
imull
inc
fisubs
jo
mov
pusha
aaa
dec
clc
jo
clc
insl
jmp
sti
rcrb
daa
xor
aaa
mov
aam
or
mov
push
mov
push
push
lea
add
mov
ss
out
dec
cld
movsl
loop
pop
and
cmp
inc
pop
pop
mov
mov
push
lock
inc
sub
add
cmp
ss
aaa
push
fdivp
or
xor
cmc
mov
jns
fs
loop
mov
sub
icebp
pop
call
aam
popf
stc
call
ret
xchg
les
adc
dec
fst
mov
int3
iret
pop
ja
popa
in
mov
mov
jecxz
lds
bound
mov
clc
cmp
clc
inc
xchg
addb
add
mov
js
xor
mov
test
mov
icebp
push
add
movsl
inc
in
dec
add
xor
leave
jns
cld
fldt
dec
cmp
jnp
testb
sbbb
adcb
aad
decb
mov
adc
dec
or
jno
sub
xchg
andl
hlt
sub
adc
shrb
js
xchg
notrack
in
cltd
test
mov
push
cmpsb
push
pushf
cmp
loope
dec
lahf
negl
subl
sub
push
add
adc
mov
in
push
xchg
lahf
xor
dec
loopne
sar
dec
cmp
pop
cmp
les
mov
or
fsubl
lcall
or
std
imulb
cmp
shlb
in
jmp
push
push
pop
xchg
push
and
mov
das
aam
push
fstps
pop
sbb
dec
clc
outsl
insb
cmp
or
test
data16
rcl
jecxz
dec
mov
andl
vphaddudq
pop
pop
mov
cmc
mov
cmpsb
lcall
fcmovnbe
xchg
add
and
mov
inc
repz
push
into
andb
push
ret
cmpsb
inc
jbe
mov
pusha
dec
pop
out
push
inc
cmp
pop
clc
outsl
cld
xlat
ret
inc
mov
or
sbb
shlb
dec
aaa
and
cmp
xor
jns
mov
lea
xchg
add
iret
adc
inc
jge
inc
or
psrad
test
ret
mov
sub
das
inc
xchg
dec
in
fsubrs
mov
pop
hlt
ror
and
dec
pop
insb
push
ja
inc
adc
icebp
mov
stos
cmc
test
push
lcall
or
mov
jp
aam
in
test
fldcw
pop
push
push
xor
cmp
add
ss
dec
xchg
ficoml
test
sub
imul
pop
imul
cbtw
mov
movsb
outsl
mov
cld
dec
pop
lods
mov
ja
test
xchg
jle
stos
xlat
mov
sbb
add
jp
jmp
in
imul
mov
xor
xchg
orb
sub
or
add
fildl
jge
push
je
dec
addr16
inc
loopne
push
aas
loop
fildl
adc
inc
movsb
xchg
mov
jg
xchg
fwait
adc
jmp
sbbl
cmp
mov
jg
push
subb
inc
pushf
or
xor
and
pop
cld
sbb
cmp
ja
add
adc
push
sub
fistpll
inc
shlb
test
inc
and
xchg
das
jl
lock
fnstenv
xchg
mov
loopne
push
popf
lods
xchg
stc
in
mov
movsl
push
out
ss
sbb
loope
mov
or
jl
into
insl
or
adc
in
aaa
fists
imul
test
mov
test
lock
in
adc
test
jbe
shrb
xchg
mov
adc
test
dec
lret
les
test
sbb
push
call
pop
fst
cld
sbb
add
lods
test
and
rorb
in
sbb
ds
rcl
dec
mov
ljmp
lock
push
inc
or
adc
push
fcomps
sbb
jle
les
xchg
or
pop
mov
ror
dec
fadd
fiaddl
or
mov
push
outsb
in
sub
loopne
jmp
je
pop
fdivrs
dec
add
pop
pop
insl
fcoms
cmc
repnz
and
scas
pop
ja
call
ljmp
cwtl
xchg
adcl
mov
xchg
pop
jecxz
or
loopne
lea
dec
xor
ficomps
iret
sub
inc
aam
sbb
dec
mov
outsl
ja
lea
repz
mov
inc
decl
and
cmc
in
mov
xor
clc
push
push
sbb
push
mov
push
dec
scas
ffreep
fildl
pop
fs
out
mov
mov
cmc
adc
mov
je
xchg
mov
popf
xchg
mov
adc
mov
dec
adc
loopne
cmpl
les
inc
adc
andl
inc
cmp
stos
mov
jp
in
jge
inc
addr16
das
sub
mov
mov
ret
mov
dec
jl
sbb
and
sbbb
jl
add
popf
in
addr16
rolb
push
cmp
and
jp
xor
fistpl
xor
and
xchg
testl
jp
add
jmp
jmp
mov
cli
pop
or
push
fcom
cli
out
cld
icebp
mov
fdivrl
je
test
adc
rcll
or
pop
and
in
fnstsw
insl
cltd
dec
sub
aas
jnp
bound
adc
mov
or
mov
pop
inc
mov
stos
pop
insl
clc
adc
insb
loop
rclb
dec
stos
movsl
addb
add
in
bsf
adc
dec
hlt
pop
mov
or
lods
cmp
mov
push
mov
or
push
test
outsb
scas
or
sarl
jmp
cmp
ss
mov
or
sub
addb
add
xchg
sub
or
fildl
scas
push
add
jp
mov
test
jle
lea
cmpl
data16
push
mov
aaa
mov
lea
jp
pop
pop
sub
in
xchg
sub
dec
xor
iret
mov
js
cmp
repnz
ljmp
lods
leave
sub
je
pop
pop
mov
mov
data16
mov
stos
call
pop
xor
add
fnstenv
test
mov
sbb
jne
xor
in
sub
push
mov
pop
push
sar
decb
cmc
cmp
push
rcll
jno
roll
imul
xchg
daa
inc
jne
xchg
divb
fcoml
adc
rclb
pop
dec
or
sbb
inc
adc
cs
and
pop
mov
or
adc
sbb
or
lods
inc
std
mov
add
cmp
sbb
or
ljmp
pop
and
lods
arpl
push
push
cltd
fcmovnu
rcr
push
insb
adc
les
xor
push
arpl
jne
cmc
call
sbbl
mov
add
add
sbb
pop
fs
sbb
mov
or
adc
sarb
sub
mov
or
push
or
inc
adc
and
clc
and
cltd
aam
clc
inc
push
add
mov
mov
popl
mov
movsl
js
nop
pop
xor
gs
push
lahf
dec
sbb
jecxz,pn
inc
jmp
and
fistpll
cmc
cli
loope
fisubrl
in
xor
ss
ljmp
or
inc
xchg
insl
sub
sbb
gs
cmp
in
mov
jp
int3
xchg
cli
loopne
inc
js
mov
shr
or
cwtl
mov
nop
push
mov
test
mov
mov
mov
nop
sbb
push
loopne
cs
pusha
xor
fcmovnb
mov
sti
and
idivb
xorb
aam
xchg
add
sbb
in
jl
rclb
std
mov
and
adc
jmp
inc
xor
test
ss
cmp
inc
ret
test
clc
aad
xchg
pop
into
xchg
cmpsl
js
subb
testb
mov
nop
dec
mov
scas
pop
scas
cmpl
adc
jg
movsl
mov
insb
mov
fistpll
cld
and
adc
inc
xchg
jo
clc
out
pop
and
xchg
ret
jo
push
insl
loope
and
jge
xchg
inc
mov
and
jp
mov
sub
mov
ret
or
xchg
dec
loopne
das
xchg
add
push
clc
cmp
cld
push
adc
inc
mov
dec
int3
std
lea
mov
push
imul
jo
xchg
push
std
call
scas
imul
or
inc
mov
icebp
mov
imul
jge
fldenv
adc
fsts
bound
mov
push
jbe
jnp
sub
xor
mov
imul
shrl
es
and
inc
push
xor
push
add
add
dec
stos
push
loop
lock
cmpsl
stos
pop
sbb
repnz
sub
addb
jns
inc
insl
cmp
mov
jne
push
push
jns
adc
ffreep
xchg
aad
inc
stc
mov
or
mov
in
xor
das
loop
popl
mov
mov
out
jb
or
jmp
sahf
jecxz
push
push
mov
sbb
fidivrs
add
pop
cmp
jbe
adc
sub
std
mov
test
repnz
insl
in
pop
jb
push
movsl
bound
decl
in
repnz
pop
js
or
or
mov
push
sbb
push
xchg
jge
clc
mov
sbb
xor
sbb
xchg
inc
lcall
out
cmpl
xchg
xchg
pop
dec
add
or
mov
xor
push
loopne
sbb
jnp
les
jno
adc
add
mov
pop
mov
pop
loop
popa
or
cwtl
shlb
cwtl
aas
fimull
add
jns
stos
jno
fcmovne
add
push
add
xchg
divb
neg
jle
mov
xchg
and
test
jmp
push
xchg
ficoml
mov
outsl
lea
sub
mov
roll
lods
push
or
sbb
aaa
pop
faddl
add
aas
clc
and
mov
mov
push
cmc
push
xlat
jb
dec
sbb
xchg
cltd
orb
in
or
cmp
je
aaa
pop
and
jg
scas
sub
fs
sti
je
cmp
fwait
dec
insl
insb
jb
vmovdqa
mov
inc
jne
repnz
mov
mov
dec
inc
icebp
or
mov
dec
das
enter
or
jl
ret
aad
icebp
ljmp
lea
cmc
scas
inc
fstl
or
imul
test
aad
cmpb
xor
aam
jbe
movsl
addl
popa
pop
inc
cltd
notb
or
xor
dec
xor
std
cli
popf
adc
mov
out
subl
lds
push
popa
sbb
rcll
cld
pop
negb
jle
test
sub
jb
cmpsb
cmp
or
aad
push
cld
gs
cmc
pop
xchg
adc
out
lret
xchg
sub
jmp
add
and
dec
call
xchg
sbb
sbb
xchg
shr
outsl
inc
scas
outsb
insb
jo
jmp
sub
mov
mov
sub
loopne
fdivl
mov
daa
ret
dec
stc
jbe
leave
out
mov
int
pop
sbb
pop
pop
push
ret
push
push
out
push
div
xchg
mov
and
and
mov
outsl
fnstsw
cmp
add
pop
fildll
int3
enter
fs
pop
xor
ja
test
fistps
or
jo
aaa
or
movsb
push
cmp
jmp
sub
in
sbb
out
es
cli
mov
je
dec
cltd
fsincos
or
lret
inc
add
xchg
push
cmpb
fcompl
pop
jp
mov
adc
cmpsl
push
shlb
lds
xor
dec
scas
jp
or
cmp
xchg
mov
add
add
hlt
add
sarb
cmp
test
adc
imul
aam
pop
mov
dec
lock
mov
push
test
subl
add
mov
push
adc
ud2
sbb
push
adcl
into
mov
xor
dec
cmpsl
ret
aas
push
mov
or
test
and
push
dec
filds
dec
outsl
xor
imul
pop
fildll
andb
paddd
push
sbb
mov
jo
add
push
mov
mov
mov
popa
dec
add
mov
dec
outsb
mov
or
loop
pop
cmp
xor
jns
push
leave
imul
sbbb
inc
test
cli
push
push
or
adc
outsb
add
loop
dec
dec
outsl
sbb
inc
sub
nop
lcall
scas
mov
inc
loop
cmc
pop
sbb
mov
lods
icebp
jmp
cmp
fiaddl
or
leave
insb
ja
mov
xor
je
add
xchg
pop
pop
jmp
dec
cld
mov
mov
jecxz
jmp
aam
push
add
int3
ss
popa
ret
xchg
mov
enter
aad
enter
test
sbb
jle
jl
mov
sbb
lret
aaa
lock
pop
test
dec
je
in
enter
mov
lock
inc
inc
dec
andb
add
xchg
push
sbb
and
cmp
je
je
mov
inc
mov
jmp
xor
aaa
in
jb
sub
decl
loop
and
aas
xchg
iret
iret
fimuls
push
jle
outsl
and
out
add
sub
inc
mov
mov
xor
add
push
mov
add
or
out
sbb
cmp
pop
das
and
mov
pusha
inc
fdivp
inc
hlt
xchg
add
lods
cli
jg
loop
pandn
out
jmp
aas
add
jg
cmc
addl
pusha
push
fmul
movsl
pop
insb
push
jmp
jnp
stc
stc
xchg
add
push
sbb
xor
inc
adc
dec
aas
jb
xor
inc
mov
xlat
or
cltd
push
scas
imul
lods
mov
insl
insb
sbb
adcb
rol
shl
mov
xchg
sbb
or
cmp
add
adc
test
lock
push
push
shll
sbb
sbb
and
mul
test
lds
sahf
or
stos
ljmp
test
dec
push
out
jbe
jl
dec
cwtl
icebp
ljmp
loopne
mov
imul
jge
test
test
adc
jl
sbb
sbb
and
mov
sub
gs
sbb
stos
mov
out
xor
xchg
ficompl
fimuls
lahf
mov
ret
sbb
pop
bnd
jl
push
fildll
add
lret
imul
push
push
inc
divl
sub
rcrl
sub
call
xor
filds
outsb
push
in
jnp
aaa
mov
push
pop
xchg
rclb
daa
clc
sub
addl
sbb
outsb
fldt
int3
nop
sub
jg
pop
xor
int
jo
cmp
xorb
dec
orl
cwtl
jge
cli
mov
sbb
les
mov
cmc
filds
test
das
sub
xchg
inc
mov
adc
mov
mov
orl
mov
sub
std
mov
xchg
nop
insl
or
cld
jmp
mov
fldt
push
jbe
or
push
lret
xor
sbb
mov
aas
adc
pop
cmp
data16
mov
out
inc
xchg
or
jle
add
sbb
adc
je
sbbb
es
lea
cmp
inc
lret
push
mov
fcomi
rolb
test
cmpsb
icebp
push
mov
or
jp
and
sbb
test
xchg
movsl
push
in
jp
test
js
aaa
add
decb
ja
pop
clc
aad
mov
mov
aaa
fistps
test
lahf
call
add
lea
adc
popa
aaa
adc
aad
mov
clc
push
faddl
xchg
push
add
loopne
test
mov
cmp
push
jge
cli
cmp
ljmp
mov
or
cmp
cmpsl
call
aam
shll
decb
add
add
lock
jg
pop
mov
mov
pop
push
adc
mov
and
mov
cmp
adc
ljmp
jg
sahf
dec
mov
loopne
imul
ja
inc
and
cmp
xchg
cs
push
mov
push
mov
push
cmp
orl
inc
std
inc
lcall
mov
cmp
lahf
psllq
mov
fiadds
cmp
push
inc
mov
enter
add
mov
outsb
dec
add
aaa
stos
or
jno
dec
mov
or
push
xor
es
mov
sub
xchg
rorb
xor
dec
and
add
and
outsb
cli
mov
adc
hlt
out
inc
arpl
mov
jmp
dec
adc
jmp
outsb
lea
jbe
xchg
decl
cmp
fiadds
sub
pushf
in
adc
insl
cld
inc
lock
call
imul
adc
push
test
adc
or
outsb
das
shll
addr16
jne
adc
sbb
les
and
insl
jle
jo
sarl
inc
ret
faddl
push
stc
addr16
aaa
mov
pusha
fldt
mov
inc
stos
stos
shl
inc
lret
andb
mov
mov
fstl
dec
repz
das
rcll
dec
aaa
sub
sbb
ds
cli
and
push
sbb
das
loopne
cmp
test
out
sbb
inc
add
in
adc
sbb
popa
sbb
imul
subb
ss
jecxz
dec
in
xchg
sarl
loopne
jnp
ja
mov
repnz
mov
test
call
cmp
ret
adc
jbe
inc
out
mov
das
shll
mov
loope
dec
fwait
push
sbb
fdiv
jbe
iret
cmp
cmpsb
jno
jl
test
pop
jno
lret
lret
adc
fbstp
xchg
into
xchg
js
cmp
jbe
test
jb
shlb
outsl
sbb
arpl
hlt
lds
mov
adc
push
cld
pushf
fldenv
mov
icebp
mov
cltd
add
jno
clc
pop
and
or
xchg
mov
insl
mov
xor
pusha
xor
and
rclb
nop
imulb
xor
sarb
jp
sbb
sarl
inc
mov
data16
pop
xchg
pop
fisttps
dec
jmp
clc
pop
pop
add
subb
rclb
outsl
jge
push
adc
mov
lds
dec
cli
inc
mov
sub
pop
dec
arpl
movsl
ja
push
pusha
loopne
and
pushf
lahf
dec
adc
int
dec
adc
or
out
cmp
call
inc
ret
out
movsl
adc
xchg
cmpb
int
shrl
scas
jo
out
aas
hlt
fucomp
mov
ja
pop
mov
orl
repz
out
aas
stos
xchg
enter
mov
ret
jmp
fdivs
loopne
jle
add
jae
push
xchg
mul
push
inc
push
xor
fcmovu
sub
loope
outsl
add
outsl
push
cmp
or
movsl
imulb
es
repz
daa
stos
outsl
adc
mov
filds
arpl
imul
cwtl
mull
fisttps
mov
js
add
stos
movsl
or
ljmp
inc
and
lods
and
jno
icebp
in
rorb
ret
out
fsubrp
mov
std
test
popa
cmp
mov
loope
clc
sbb
das
mov
mov
aaa
pop
roll
xchg
add
clc
in
fidivrs
testb
pusha
popf
push
xchg
loopew
pusha
mov
les
gs
nop
add
push
movsl
clc
iret
and
jnp
pop
fcomp
rcrb
dec
aas
mov
insl
pop
jo
jp
pop
dec
add
mov
mov
call
aas
adc
lock
cmc
pop
xor
add
xchg
pop
inc
adc
push
mov
add
fs
or
sub
mov
jmp
pop
mov
xchg
test
aad
inc
les
clc
push
popa
test
ljmp
mov
loope
repnz
mov
cmp
push
dec
mov
inc
lret
adc
sbb
dec
cld
mov
xchg
jb
pcmpeqd
test
lret
cmpl
sub
or
mov
dec
jmp
out
lret
mov
cmpsb
orb
cld
add
add
scas
xor
push
mul
jmp
xor
mov
ds
dec
lcall
jae
test
pop
xchg
jb
mov
mov
out
lea
mov
mov
sbb
mov
jno
xlat
data16
inc
int3
xor
clc
ljmp
mov
daa
loopne
jns
pusha
cmpl
push
outsl
mov
lcall
pop
js
popa
js
fstl
faddp
testb
out
test
xor
mov
stos
mov
or
icebp
mov
lcall
and
outsb
stos
pop
aam
adcl
fnstsw
scas
pop
mov
mov
pushf
cmp
in
ss
stos
and
repz
mov
ljmp
inc
sub
loop
mov
pop
cmpsl
lods
ds
sbb
push
push
out
roll
mov
insb
push
mov
or
jo
jg
xchg
add
lods
fcmovnbe
ds
xor
popa
pop
outsl
je
or
fadd
ficoms
add
cltd
fiaddl
dec
aad
xchg
pop
or
mov
add
call
addb
clc
cli
insl
sub
mov
aas
out
and
insb
push
lcall
mov
cli
aaa
fisubrs
add
test
and
lahf
jnp
lds
mov
push
mov
pushf
add
pop
sub
adc
adc
hlt
xor
aam
mov
daa
stos
jge
and
and
cmc
ffreep
xlat
movsb
ffree
femms
leave
jb
adc
ss
popf
popa
xchg
dec
push
outsb
stos
jbe
into
in
out
jecxz
push
pop
or
shr
push
outsb
mov
bound
ret
scas
mov
mov
add
rep
fstpt
dec
mov
push
subl
xor
mov
pop
jne
and
cmp
fsubs
ljmp
fmul
push
pop
dec
fsubp
jbe
add
int3
int
aaa
pop
ljmp
add
and
bound
in
xchg
mov
jne
fwait
mov
lahf
shll
movsl
pusha
stos
test
in
jo
adc
pop
cli
stos
push
dec
push
jno
test
sti
pushf
icebp
mov
setnp
sub
pop
cs
adc
lock
stc
movsb
rorb
in
dec
mov
nop
inc
outsb
sbb
mov
mov
call
outsl
pop
shlb
leave
loopne
or
jo
shlb
pushf
je
mov
xchg
add
or
popa
test
aaa
push
pop
push
mov
push
mov
mov
js
imul
popa
cmp
adc
xor
mov
jnp
iret
movsl
test
fidivrl
or
sbbb
loop
in
jo
hlt
scas
cmp
push
mov
dec
mov
cwtl
adcb
mov
jg
ret
push
jge
lret
out
and
stos
jl
jg
jne
xchg
lahf
jae
je
dec
jb
add
stos
cli
cwtl
xchg
and
call
insb
push
dec
nopl
out
gs
xor
cld
fadds
insb
jl
adc
inc
fcmovnu
outsb
lods
mov
stos
xchg
fsubl
sub
push
mov
hlt
pop
sti
ret
and
cmpb
add
mov
rclb
inc
push
test
fcomps
rcr
mov
dec
loope
unpcklps
in
cmp
lahf
adc
mov
aam
xchg
mov
sbb
jae
enter
andb
mov
movsl
loope
mov
push
rclb
and
jno
lret
sbb
jl
pop
adc
cld
rorb
negb
nop
mov
les
or
mov
cmp
jle
or
icebp
cwtl
addb
add
nop
lret
ret
jecxz
frstor
mov
mov
add
popa
outsl
pop
mov
gs
test
dec
xor
push
ret
sahf
sbb
adc
jbe
inc
dec
stos
movsb
nop
sub
leave
add
js
rolb
push
pop
xchg
jge,pn
mov
push
xor
push
js
filds
lret
dec
daa
ljmp
jle
push
pop
das
inc
decl
pop
adc
mov
sbb
lea
and
cmpsb
adc
pop
clc
imulb
cmp
inc
mov
mov
inc
icebp
or
mov
stos
jne
gs
imul
insb
outsb
imul
ret
punpckhwd
xchg
std
lods
ret
fwait
inc
mov
cli
movsl
in
and
adc
cwtl
je
fs
imull
out
sub
mov
dec
mov
pop
push
and
cmp
in
sahf
pushf
mov
test
xchg
jg
adc
mov
add
ljmp
iret
into
iret
fidivrl
mov
cmc
cmp
and
pusha
add
sub
or
mov
mov
mov
xor
xchg
movsl
outsb
sbb
cmp
pop
jp
dec
sbb
call
aad
mov
mov
lods
push
in
popf
lret
adc
lret
adc
pop
test
pop
outsb
jg
push
sbb
fisttpl
fildll
mov
mov
sub
es
fdivrl
lahf
ficoms
inc
push
jbe
lahf
and
dec
cld
in
cmp
mov
inc
cmpsb
addl
shl
mov
in
out
mov
pop
cli
jae
in
jl
mov
pop
xchg
mov
inc
cmp
add
adc
std
jo
dec
js
push
into
mov
adc
lds
jecxz
pop
push
in
test
test
mov
sub
iret
cmc
inc
lock
cli
add
mov
sub
das
addl
xchg
orl
pop
cwtl
push
jb
xor
sbb
into
hlt
mov
add
neg
cmp
cld
ret
out
jbe
sbb
insb
adc
push
int
or
push
sub
lahf
mov
push
scas
js
daa
hlt
sub
or
inc
in
outsl
pop
mov
subb
mov
push
dec
xchg
pop
outsb
lods
mov
sbb
fwait
mov
dec
jp
shlb
sub
imul
pop
test
pop
xor
mov
inc
or
mov
push
ljmp
cmp
fstp
inc
adcl
aaa
push
insb
sub
movsl
inc
mov
mov
and
fildll
je
lds
mov
adc
out
jmp
adc
mov
mov
lea
les
jno
hlt
xor
mov
cmc
dec
hlt
inc
add
lock
outsl
sbb
hlt
loope
mov
cmpsb
mov
clc
and
xor
push
dec
in
pop
mov
addr16
loope
movsb
jne
adc
adc
dec
mov
js
test
dec
aad
add
jecxz
ret
call
push
push
xchg
sti
jae
jge
mov
fwait
imul
add
sbb
mov
insb
fs
sbb
add
mov
data16
pop
mov
movb
pop
jle
movsl
jg
das
out
fsubl
cli
mov
pusha
mov
xchg
stos
jg
xchg
inc
mov
adcb
lret
xchg
xchg
push
inc
lock
lea
mov
scas
pop
ret
cmc
out
negb
mov
xor
cmp
jo
mov
xchg
nop
lret
movsl
push
andl
and
mov
mov
xchg
fdivrl
ss
cmp
mov
adc
inc
cmp
pop
mov
or
leave
jg
and
jl
clc
or
dec
ret
ss
std
mov
insl
jne
jne
dec
jmp
movsl
daa
jo
jp
outsb
outsl
outsl
adc
andl
dec
pop
loope
push
rol
les
in
or
sbb
or
test
cli
in
pop
adc
and
mov
lods
add
cmp
clc
not
cmp
inc
rclb
cmpsb
sub
cmp
add
push
jns
scas
inc
jbe
incl
or
aam
adc
insb
icebp
pop
pop
xchg
sarb
and
or
clc
mov
test
mov
sbb
stos
mov
adc
call
inc
cmp
loopne
sbb
or
cmp
xchg
mov
adc
push
fstpl
in
mov
mov
int3
popa
ud1
movsl
xor
and
data16
scas
lds
mov
jo
popf
rorb
cltd
sub
xchg
sar
add
test
or
inc
daa
dec
sub
mov
frndint
push
jge
mov
mov
scas
or
lods
test
lods
sbb
mov
jbe
aad
pop
loopne
push
sarb
lods
fs
rcll
int
and
in
nop
enter
inc
mov
test
adc
and
inc
std
lods
movl
shll
mov
lcall
xor
sti
outsl
sar
test
ret
xchg
jbe
fdiv
pop
push
vmovaps
loopne
rcrb
jns
fisubrl
fadds
or
int3
sub
mov
or
insl
lock
aaa
jne
clc
mov
cmp
aaa
sub
das
push
mov
shrb
push
inc
hlt
mov
popf
jecxz
adc
push
or
adc
out
or
call
adc
sub
popa
inc
jl
nop
sub
mov
loopne
icebp
push
cmp
jl
fst
negb
movsb
sbbb
mov
test
lea
or
addr16
mov
test
roll
push
mov
pop
jno
std
mov
imul
mov
and
les
scas
clc
mov
mov
sub
cmp
sbb
ffreep
pop
mov
outsb
es
add
insl
pop
jae
push
push
xchg
ljmp
pop
and
mov
lock
ss
stos
out
clc
dec
push
jle
lods
adc
pop
mov
mov
push
push
ret
xchg
jnp
push
mov
clc
inc
fwait
add
movsb
inc
xor
lcall
aam
pop
outsb
pop
jne
adc
aaa
jne
mov
xchg
fcomp
pop
and
adc
sub
aad
test
test
fwait
sbb
fildl
imul
call
nop
push
sbb
loopne
out
inc
lods
call
adc
movsl
outsl
mov
inc
xchg
xchg
adc
loopne
inc
lcall
sti
loop
enter
andb
aam
div
or
and
test
and
dec
mov
or
xchg
fnsave
xchg
push
cmp
cmp
lds
js,pn
jg
sub
mov
jmp
sub
jg
mov
push
cmp
ret
adc
test
inc
dec
jb
or
add
sub
and
adc
xchg
adc
aaa
mov
gs
push
adc
sbbl
jbe
mov
fcoms
push
mov
aas
pop
lea
mov
adc
ret
enter
flds
cmc
xor
icebp
nop
mov
sbb
mov
and
ficoms
add
and
mov
xchg
push
movsl
lock
js
cmc
mov
subb
loopne
cwtl
add
cld
or
push
mov
imul
jge
jne
dec
pop
cmpsb
fistpll
cs
out
cmp
test
xchg
subb
ret
mov
mov
test
cs
xchg
mov
clc
push
dec
push
jg
xchg
sub
cli
cmp
jae
jnp
fs
or
mov
push
and
pop
add
int3
push
lock
sbb
sbb
pop
dec
cmp
stos
cmpb
or
jns
cmpsl
jge,pn
jg
addl
and
inc
out
dec
xchg
dec
cmpsl
cmc
jecxz
mov
outsl
and
add
sub
mov
mov
jo
adc
or
mov
mov
in
adc
push
or
mov
jle
cmpsl
add
mov
inc
sub
xlat
dec
loop
icebp
ffreep
aad
xchg
or
call
dec
add
mov
add
gs
push
std
outsl
add
jecxz
and
adc
in
xchg
lea
sub
mov
xchg
insl
lahf
add
mov
push
ret
stos
add
adc
cmpsl
jb
incl
xchg
fistpll
adc
in
xor
pop
mov
xlat
and
push
dec
cld
test
pop
clc
xor
cmp
idivb
adc
lahf
lahf
sarl
in
push
rcr
mov
adc
push
stos
xorps
push
or
adc
das
sub
fists
adcb
inc
jl
adc
push
clc
dec
mov
jmp
xor
jbe
jnp
xor
leave
adc
jp
lock
pusha
in
sub
sub
hlt
push
or
test
mov
or
aas
mov
push
sbb
test
enter
sti
in
or
sti
inc
packuswb
xor
add
adc
or
or
lea
adc
cmp
in
jbe
fs
insb
mov
jg
ret
mov
icebp
cltd
xor
lock
mov
adc
cmp
inc
cli
inc
jg
jmp
xchg
xor
popa
negl
in
adc
adc
fdivr
sbb
loopne
ss
cmp
xchg
sbb
fs
sub
fistpll
shrb
aam
mov
lds
push
mov
xchg
jbe
mov
ljmp
jle
xorl
stos
shrb
or
je
push
mov
cltd
scas
lock
cmp
inc
incb
stc
push
push
cmp
inc
add
xor
add
insl
out
inc
inc
mov
adc
jb
cltd
std
fistps
and
inc
dec
dec
int3
out
pop
lds
lock
sub
repnz
add
lcall
xchg
scas
into
fwait
xchg
mov
les
push
loopne
or
sbb
jle
sbb
fdivrl
mov
aas
movsl
push
jb
fbstp
shl
cmpsl
scas
ja
adc
jns
or
clc
xor
sahf
int3
sbb
pop
sbbb
fucomi
lds
ret
es
add
adc
mov
mov
jg
mov
adc
out
bnd
sbb
push
cwtl
sub
mov
add
mov
cmpsl
jae
filds
mov
inc
jne
push
mov
mov
lock
xchg
xchg
xchg
jbe
addb
mov
add
pushl
cmc
incl
xor
push
or
inc
push
mov
pop
pop
stos
jo
push
mov
lahf
xor
jle
pop
lcall
fisttpl
lock
mov
and
and
push
jno
sbb
mov
xchg
push
or
pop
cli
mov
pop
loope
in
pusha
mov
xlat
test
or
sbb
push
stos
icebp
scas
pusha
sub
lock
pop
sub
subb
imul
lcall
in
push
mulb
sbb
push
add
in
and
xchg
outsb
lods
sbb
or
add
jno
fs
dec
icebp
mov
adc
xor
or
pushf
lahf
mov
add
adc
push
into
inc
inc
mov
addr16
fsubp
mov
inc
lret
pusha
sbb
and
mov
xor
xchg
dec
pop
test
mov
push
movl
mov
inc
sub
or
push
push
ret
or
jmp
loopne
push
push
and
pop
mov
cs
cmc
out
stos
outsl
out
push
jbe
inc
mov
test
adc
cmp
fildl
repnz
fs
inc
lcall
sti
movsb
inc
lock
push
insb
aaa
sub
sub
arpl
and
xchg
adc
xchg
in
cmc
insb
leave
in
scas
cli
add
pop
aad
cmpsl
fxch
arpl
test
loope
dec
cld
rdpmc
and
in
push
jp
outsl
inc
ds
subl
push
outsl
inc
and
and
outsb
movsl
das
lea
xchg
cli
pop
dec
mov
pop
xor
pop
sbb
inc
xor
pop
xor
shr
ljmp
rorb
dec
and
or
fbstp
je
pop
xor
and
dec
pop
sbb
dec
sub
popa
scas
fucomip
pop
out
lret
cs
ficoml
inc
sbb
clc
je
inc
enter
mov
orl
jbe
jl
xor
lods
inc
sub
adc
push
xchg
jmp
mov
add
pop
cmc
push
add
and
cs
xchg
push
clc
lock
cmp
pop
pop
out
pop
fldenv
push
insl
outsl
icebp
in
add
push
call
pop
clc
ja
sbb
test
adc
adc
mov
pop
inc
ljmp
fcoml
repnz
jmp
cmpsl
ljmp
jo
sub
loope
loop
fsubrs
aaa
dec
sar
xchg
loop
inc
mov
std
adc
rorl
sub
sub
fcmovbe
add
cltd
add
fcoms
mov
cmp
adc
inc
fdivl
mov
cld
loop
fs
jl
sub
sub
sbb
test
pop
stos
sbb
fwait
pop
mov
imul
mov
sub
mov
mov
sub
sub
mov
cmc
jb
das
jl
pop
pushf
sub
or
dec
jmp
sbbb
aad
repnz
mov
sbb
pop
pop
fidivl
mov
or
sub
mov
imul
cli
cmovl
stos
or
cmp
sbb
jg
loope
inc
int3
or
imul
test
mov
aaa
sub
sbb
sbb
insb
std
xlat
incl
add
add
nop
xor
sbb
in
hlt
cmpsb
mov
mov
pop
cltd
lahf
aaa
arpl
aam
jmp
aaa
ljmp
sub
pop
mov
imul
loop
movsl
les
cli
cmpsl
inc
out
mov
adc
ljmp
sub
fs
jmp
out
popa
fcoml
daa
ds
ljmp
dec
jo
sahf
and
sbb
add
mov
jmp
pop
mov
mov
add
cmc
mov
insb
in
mov
cmpsb
sbb
clc
pop
in
jecxz
shl
inc
rol
mov
loopne
shlb
adc
sub
jg
xchg
mov
subb
inc
jno
mov
sbb
cltd
mov
push
sbb
sbb
jae
addr16
std
adc
decl
xchg
xor
cmpsb
adc
cmc
cmp
or
mov
popf
sti
mov
sub
clc
pop
mov
xor
xchg
ret
out
or
data16
ficompl
rcl
gs
inc
dec
sub
mov
cmp
xchg
sarb
mov
jecxz
int3
inc
xchg
fucomip
loopne
test
dec
shll
icebp
and
pop
sbb
adc
xchg
outsb
and
mov
sub
out
rcll
pop
xor
sub
mov
fmul
or
mov
jne
das
jne
in
sub
sub
out
push
add
sbb
push
lock
fistps
mov
insb
xor
xor
cmpsb
lcall
mov
test
lods
push
mov
lock
mov
sbb
xor
jno
cmp
lock
hlt
xchg
sub
and
inc
sbb
int3
xor
out
dec
sbbl
mov
scas
loop
add
and
cli
outsl
cli
lret
xor
push
push
fs
cwtl
or
aad
pop
and
jo
dec
fidivrl
stos
mov
outsl
and
mov
dec
lods
rorl
rol
add
les
mov
dec
jmp
sbb
ficomps
mov
punpckhdq
fbstp
pop
pop
xchg
xor
adc
xchg
xchg
cmpsb
aam
push
aad
andl
sbb
fsubl
cmp
shrb
push
mov
test
es
add
popa
ror
adc
fdivrl
pop
fcmovu
ja
arpl
push
pop
or
add
enter
push
in
cmp
fildl
ficomps
and
mov
loop
movsl
lea
or
sbbb
mov
mov
push
ds
jns
or
adcb
aaa
pusha
jae
or
lcall
les
mov
sahf
pop
cmp
xchg
or
mov
mov
xchg
aad
mov
sub
pusha
jl
sbb
in
in
ss
sub
mov
sbb
ss
mov
mov
ret
mov
jo
xor
add
test
lahf
pop
imul
push
pop
imul
test
sub
mov
aam
push
mov
in
cmp
loopne
pop
icebp
mov
xchg
sbbl
mov
popf
lret
insl
loopne
dec
and
fistpl
aam
loope
clc
and
inc
bound
notb
mov
xchg
dec
jmp
mov
xor
rolb
pop
mov
int3
imul
lock
leave
sbb
stc
or
inc
test
push
imul
sub
and
jp
pop
pop
pop
xor
mov
mov
or
mov
push
jo
sbb
je
mov
push
push
movsb
mov
sbb
and
xchg
push
mov
inc
js
adcl
pop
inc
roll
int3
outsb
insl
jo
push
hlt
xor
subl
in
mov
daa
cmp
test
inc
inc
icebp
shrl
stc
add
dec
push
loope
mov
push
push
testb
mov
xchg
clc
or
dec
jg
xchg
cmp
jl
shrl
ja
sbbl
nop
insb
out
ljmp
sub
push
jne
lds
cld
xor
adc
insl
rcr
aaa
adc
or
cmpsl
test
or
lea
and
loope
test
ds
mov
divb
mov
and
dec
push
sbb
js
ljmp
mov
cmp
dec
add
add
sbb
mov
andb
lahf
mov
les
je
mov
pop
jl
and
mov
lods
in
inc
sbb
jo
mov
or
dec
in
lret
leave
mov
mov
arpl
cld
dec
je
jge
xchg
pop
lret
loope
jo
fdivs
repnz
gs
mov
mov
or
dec
push
jbe
pop
pop
test
pop
les
add
lahf
sub
aad
mov
jnp
ret
je
dec
daa
testl
jnp
arpl
mov
notl
loopne
mov
es
push
jge
ret
mov
or
mov
aad
jp
fidivs
pop
in
add
mov
mov
dec
mov
add
sti
jo
pusha
or
les
mov
cmp
std
out
mov
jmp
sub
inc
insl
add
in
mov
add
or
jb
cld
rorb
mov
mov
test
xor
outsb
insb
outsl
scas
adc
push
loopne
addb
test
sbb
ret
subb
nop
dec
repnz
xor
adc
scas
pop
add
mov
xor
filds
loope
push
dec
call
leave
popa
mov
ja
loop
xchg
shlb
jne
ret
movb
or
test
inc
fdiv
das
ret
cmp
inc
into
call
pop
mov
adc
arpl
imul
aad
push
mov
jmp
test
mov
inc
mov
ffree
fadds
sbb
cmp
enter
xor
stos
lcall
inc
and
jg
push
mov
cmp
mov
lea
icebp
pop
adc
fcomp
std
cld
jge
gs
jae
test
insb
push
mov
fistl
out
sbb
and
sbb
pop
mov
sbb
mov
int
cmp
enter
push
es
cmc
imulb
enter
dec
inc
pop
mov
in
clc
test
cmp
jae
addr16
jo
pop
cmp
fstpt
in
popa
andb
cmp
decl
out
cli
adc
mov
xchg
loop
fisttpl
test
and
pop
mov
movsl
pusha
adc
adc
ds
push
cmp
mov
mov
pop
fildll
push
and
dec
orb
push
sbb
mov
mov
push
inc
cltd
pop
fidivrs
mov
popa
mov
mov
sub
add
cli
into
es
inc
addl
add
push
ss
mov
jmp
lods
push
in
xor
and
mov
aad
pop
test
and
cmpsb
imul
and
rorl
movsb
fidivrl
outsb
sub
cmp
adc
jge
mov
sub
jmp
je
pop
pop
pop
mov
adc
push
push
movsb
repz
or
je
jne
lahf
xchg
jae
jl
pop
cmc
jp
dec
and
sbb
cltd
cltd
add
movsl
dec
aas
add
clc
icebp
add
bound
cmpb
leave
lds
dec
sbbb
lea
in
ljmp
push
lcall
cmp
dec
stos
cs
and
sbb
jne
sub
mov
adc
js
xchg
mov
lea
xchg
outsb
pop
cmpsl
rcl
xchg
adc
pop
pushf
adc
aaa
adc
mov
out
aas
push
and
loop
insl
cmp
outsl
loop
out
mov
mov
cmp
pusha
inc
fisttpll
cltd
lcall
mov
cmpb
push
fisttps
dec
cwtl
cmpsl
inc
test
int3
mov
sarb
add
cmp
jmp
fbld
inc
push
inc
inc
dec
mov
sub
mov
cltd
cmp
xchg
test
ret
cmp
loop
orb
mov
add
pop
pop
push
sbb
mov
rclb
popa
fcompl
dec
dec
pop
inc
arpl
cs
pop
pop
pushf
cs
cs
ds
mov
xor
loop
fwait
js
cwtl
jno
roll
mov
fiaddl
in
and
lcall
xor
fstps
or
mov
std
shlb
add
pop
scas
repnz
or
cmp
pushf
call
ljmp
ret
rolb
inc
jl
andl
mov
shlb
and
aas
push
cmp
add
mov
cmpsl
mov
mov
mov
out
std
shr
lea
mov
dec
dec
out
inc
add
gs
loopne
add
outsl
call
or
inc
jl
push
mov
dec
sbb
add
mov
push
dec
scas
dec
in
loopne
dec
inc
add
pop
add
dec
sbb
or
mov
xor
daa
imul
cmp
sbb
mov
andb
add
rorl
shr
and
adc
mov
sbb
fidivl
cs
in
insb
es
pop
adc
or
push
aad
jne
inc
aam
imul
insb
daa
std
add
rclb
mov
add
sub
ja
push
mov
fwait
clc
xor
insb
ror
cmp
mov
inc
in
test
mov
in
arpl
in
das
pop
jns
or
test
ljmp
mov
and
xor
inc
xchg
aam
shrl
add
cld
leave
sbb
fs
mov
sub
mov
pop
imul
add
adc
fwait
add
aam
ficoml
aaa
cld
xchg
imul
mov
outsl
cmpsb
xchg
jge
push
clc
add
fucomi
push
loopne
rolb
jns,pt
adc
cmpsb
loope
mov
rcl
sbb
xchg
mov
add
push
jle
subb
mov
mov
mov
dec
jne
add
xor
pop
add
repnz
pop
fdivr
dec
test
xchg
add
out
sbb
sbb
add
dec
idivb
xchg
sbb
push
test
add
jbe
loopne
push
mov
add
mov
mov
add
inc
xchg
sbb
push
xlat
xchg
xchg
gs
adcb
fcomip
imul
mov
shll
xchg
loope
mov
jb
add
mov
insb
ja
fistl
repnz
lret
dec
aam
out
push
fnstenv
pusha
xor
jge
sarl
inc
mov
mov
addr16
std
pop
mov
add
rcrl
test
rol
aaa
ficoms
jno
add
clc
and
mov
fdivr
lods
push
les
add
repz
outsb
popa
add
mov
adc
push
adcb
or
add
push
out
push
cmp
pop
or
push
sub
adc
clc
outsl
push
jne
in
or
inc
lock
repnz
xlat
sbb
mov
cmpsb
icebp
rclb
inc
pop
inc
cmp
mov
sbb
and
in
nop
push
invd
decb
dec
imul
out
mov
pop
cltd
adc
pop
dec
popf
sub
daa
js
das
sbb
aad
sbb
mov
std
add
subb
imul
sub
clc
jg
push
add
lods
sbb
stos
mov
outsl
ret
lea
stos
dec
cmp
dec
pop
lret
and
pop
out
xchg
dec
in
fildl
sbb
mov
sbb
outsl
pop
jo
jecxz
push
lods
nop
lea
inc
arpl
mov
in
inc
jno
cli
ja
sub
fs
dec
mov
stos
sub
xchg
or
outsl
mov
lods
xchg
inc
inc
add
cmp
mov
jnp
mov
adc
sub
mov
aam
add
and
inc
shrl
cmp
mov
orl
addr16
popf
dec
cwtl
dec
sti
sub
xchg
push
insb
fs
cli
jne
pop
loop
fistpll
or
xor
jo
dec
ficoml
adc
lock
stc
add
or
and
ds
or
fbld
sahf
mov
add
enter
jg
aam
lock
push
xorl
push
jp
lds
push
push
in
mov
add
or
push
ss
cld
push
add
xchg
ljmp
sbb
ret
data16
mov
clc
push
sahf
mov
push
or
je
fcmovnb
xlat
add
adc
inc
shll
aad
fwait
outsb
mov
addr16
or
mov
fsubrl
xchg
addb
test
sbbl
xchg
pop
mov
loop
jge
out
mov
sub
das
outsl
popa
fistpl
iret
out
pop
jne
mov
push
push
add
or
fcmovne
and
adc
push
clc
aaa
pop
pop
push
fidivs
jmp
xchg
dec
lds
outsl
icebp
or
jo
das
enter
outsl
ljmp
xchg
ror
xor
add
or
pop
out
push
cmc
pop
pop
ss
push
inc
andl
fucom
movsl
mov
ljmp
mov
mov
call
mov
pop
inc
loop
and
fldcw
inc
cwtl
mov
pop
ljmp
hlt
inc
aad
lret
or
loope
fldcw
mov
fsub
or
adc
and
xlat
int3
mov
test
pop
stos
loop
sbb
mov
ljmp
cmp
arpl
js
push
sub
adcb
dec
sbb
fcomi
in
and
es
and
cmp
or
insl
mov
jmp
cli
push
mov
in
fidivs
mov
inc
shl
xchg
xchg
and
add
mov
mov
cmp
cltd
fsts
inc
or
insl
js
dec
jns
and
nop
aad
push
sbbb
xlat
scas
or
adc
sbb
ret
mov
cmp
push
mov
or
andl
fstl
fidivrs
inc
jnp
dec
lock
ljmp
shll
adc
ret
fdivl
int
dec
push
cmp
and
push
adc
sub
pop
mov
add
and
xor
arpl
adc
add
sbb
pop
fdivl
and
inc
cs
ljmp
push
xor
sub
scas
les
push
cmp
cmc
movsl
push
lods
adc
fs
cmc
jp
xor
sbb
mov
ljmp
and
and
shlb
test
ror
ret
jmp
adc
ds
sub
push
in
iret
mov
rcr
xchg
pop
test
inc
push
push
mov
outsl
push
clc
push
call
pop
mov
pop
insb
in
push
push
push
out
data16
ficomps
push
push
subl
sbb
js
xchg
je
inc
jl
mov
inc
pushl
mov
pop
mov
sahf
pusha
jno
dec
enter
or
in
and
sbb
jae
cmp
sub
sub
outsb
jmp
out
incl
sub
push
xchg
dec
imul
hlt
cltd
rolb
fcompl
es
incl
xor
add
shlb
call
les
lock
and
cmp
add
adc
imulb
frstor
xor
xor
pop
add
imul
mov
add
jnp
dec
es
push
mov
movsl
fadds
js
dec
push
push
push
fwait
lret
or
mov
cmp
je
ret
xor
xor
xor
xchg
psubusb
gs
popa
dec
dec
aaa
jecxz
lret
xor
push
loope
sub
jo
dec
testl
pop
lods
loopne
cmp
cs
mov
jge
jg
fsubrl
add
test
sub
aas
lock
gs
mov
inc
fwait
rol
jno
mov
stos
and
add
inc
push
cld
loopne
or
dec
std
cmp
insl
and
push
in
loope
mov
not
mov
dec
inc
sbb
pop
mov
inc
fiadds
xlat
inc
add
not
add
dec
jbe
neg
or
add
pop
inc
sub
fincstp
filds
fimuls
incl
lret
into
neg
add
into
inc
neg
xor
mov
or
enter
inc
push
repz
roll
in
not
sub
xlat
push
add
fimull
sub
aas
mov
xor
icebp
cmp
sbb
hlt
mov
insl
fnstenv
or
or
jne
jo
or
movsb
notl
shll
inc
aas
mov
jl
add
push
imul
arpl
fnstsw
sbb
push
push
in
mov
push
xor
addr16
mov
mov
pop
add
lret
sahf
jo
push
lea
filds
adc
test
aam
add
aas
fmull
test
mov
push
and
push
aaa
ja
std
sbb
mov
push
popl
ja
fnstenv
xor
out
int3
and
dec
cli
inc
push
push
jns
jo
addb
fstl
push
sahf
dec
cmp
cli
push
xchg
aaa
shlb
test
add
cld
pop
sub
cld
shrl
add
icebp
cld
pop
mul
adc
xchg
dec
jnp
cltd
sub
lds
in
mov
adc
leave
scas
mov
adcl
push
pusha
jge
lock
add
jae
test
pop
or
mov
mov
fst
in
xor
and
push
cmp
mov
mov
xorl
xchg
push
pop
hlt
sarb
aaa
in
std
push
push
inc
dec
mov
mov
pop
adc
sar
test
jle
mov
dec
lods
inc
dec
out
add
aaa
mov
repz
push
fdivp
testl
inc
sub
pop
pop
sub
mov
inc
sbb
cmc
or
test
push
dec
mov
add
jae
popa
sub
jmp
test
lods
sub
mov
bound
cmpsl
push
loopne
sbbl
outsb
adc
aaa
das
jne
inc
add
inc
inc
add
push
jg
inc
into
lcall
push
andl
mov
inc
ljmp
aad
mov
xchg
jge
ficomps
cmp
xor
and
out
data16
push
pop
xor
jg
jle
in
cmp
xchg
jecxz
outsb
inc
aam
mov
sub
dec
xchg
ror
dec
stc
add
nop
mov
push
sbb
stc
pop
scas
fwait
nop
ja
call
add
ds
icebp
add
dec
loopne
movsl
adc
sti
scas
ja
xor
je
dec
dec
shlb
or
dec
dec
add
das
loope
lcall
xor
dec
pop
pop
repnz
mov
mov
out
pshufw
fs
push
push
shll
cmp
data16
ss
add
cmpsl
inc
stc
iret
gs
mov
lods
xchg
push
sub
pop
dec
push
lock
push
sub
mov
mov
loope
subb
mov
xlat
mov
push
adcb
cmp
out
int3
pop
repnz
loope
loopne
jle
sbb
jae
xor
cmp
aam
lds
inc
loope
mov
fiaddl
ljmp
pop
xchg
out
mov
mov
xor
pusha
test
mov
cs
hlt
addb
fsubr
loope
xchg
roll
inc
je
or
add
push
nop
test
rcrb
pop
cltd
dec
lock
imul
push
pop
xchg
push
add
add
stos
insb
imul
out
mov
xchg
xor
shlb
fsubrp
pushf
adcl
push
lds
inc
mov
mov
lods
pop
add
pop
cmp
cmp
push
lds
add
loop
add
inc
dec
mov
cld
imul
or
das
je
jb
xchg
fldl
dec
cwtl
jl
insb
clc
lret
imull
or
inc
sbb
xor
lret
add
jge
cld
xchg
inc
movsb
xor
dec
jbe
xchg
sbb
lock
jge
je
or
or
mov
push
push
stos
sbb
std
test
xchg
inc
js
sub
stc
mov
adc
push
xor
outsb
test
and
push
ss
repz
lods
inc
mov
scas
push
addb
mov
iret
std
xor
pop
jno,pt
insl
xchg
fisubrl
dec
ficomps
mov
dec
je
ret
insl
jo
out
xchg
mov
fsts
mov
cs
inc
popa
aaa
sub
add
addb
cmp
shr
cld
call
out
enter
sub
pop
ret
sbbb
ja
mov
mov
mov
dec
mov
jne
and
xchg
lds
loope
jnp
movl
cwtl
cmp
dec
fdivr
sar
cli
inc
xor
out
jo
fsubrl
fsubs
shlb
xchg
insb
jge
adc
nop
lods
repnz
fs
pop
inc
ss
movsb
test
sbb
arpl
test
mov
mov
xchg
std
popa
outsl
push
sbb
cmpb
dec
inc
cmp
mov
and
test
push
dec
xor
in
xchg
inc
xchg
pop
cmpb
xor
rcrb
xchg
adc
pop
cwtl
pop
addr16
aaa
push
push
imul
xchg
push
cmpl
leave
out
pcmpeqw
jo
iret
mov
inc
add
iret
ret
cwtl
mov
xchg
adcb
xor
add
pop
imul
push
jge
es
xchg
xor
xchg
mov
push
idivl
push
loopne
test
sub
nop
mov
pop
mov
mov
dec
jbe
jl
cs
sarb
or
scas
movl
push
in
lea
icebp
iret
pop
daa
pop
movb
lods
push
add
inc
loop
out
push
xor
fs
mov
arpl
xor
aas
cli
les
sbb
popa
mov
or
and
dec
jo
insb
adc
leave
xchg
aas
sbb
mov
dec
lea
std
jp
int3
pop
cmp
popa
xor
cmp
icebp
xchg
arpl
push
mov
inc
lea
xor
push
iret
xchg
pop
push
pushl
dec
or
sub
mov
xchg
mov
jb
int3
push
outsl
push
outsb
xchg
jl
mov
mov
ja
jge
gs
push
mov
sbb
dec
mov
in
mov
nop
jge
fsts
loopne
jae
repnz
pusha
or
mov
inc
daa
dec
add
inc
dec
push
rorl
inc
dec
inc
jmp
dec
sarb
in
pusha
lock
stc
cmp
lock
aaa
aaa
out
mov
repz
fwait
mov
jo
test
pop
adc
clc
xchg
fldt
inc
inc
in
addb
push
loopne
imul
adc
or
adc
je
ret
cmp
jecxz
repnz
jo
pop
or
inc
outsl
adc
adc
push
dec
add
push
xor
push
add
dec
push
lea
inc
ret
sbb
call
mov
sub
mov
lods
mov
pop
inc
add
mov
add
das
add
ds
stos
lock
ss
xchg
xchg
lret
xchg
cld
add
lock
ja
mov
addb
int
lods
inc
insb
jne
sbb
scas
push
adc
sbb
loop
negl
dec
push
xchg
lock
cmp
jns
outsl
dec
imulb
out
push
cmp
in
or
test
xor
xor
add
inc
xchg
fnstenv
xchg
xchg
xchg
mov
stos
shll
dec
jb
popf
jp
test
addl
pop
lcall
enter
dec
imul
test
dec
add
ret
leave
add
xchg
scas
add
push
lock
push
mov
leave
sub
ret
adc
lods
mov
mov
in
mov
dec
or
mov
loope
leave
test
cmpsl
mov
pop
cmp
test
mov
xchg
gs
mov
sbb
mov
mov
out
mov
das
push
fcompl
ljmp
shll
fs
mov
adc
and
pop
inc
add
push
cltd
sbb
inc
mov
cmp
icebp
mov
std
add
neg
mov
or
enter
divb
adc
sbb
cmp
gs
cmp
lea
popa
and
leave
addr16
aam
lds
arpl
sub
push
xor
out
sub
scas
push
mov
push
outsl
leave
xchg
dec
xor
mov
dec
mov
xchg
mov
add
cmp
mov
call
fwait
rorl
stos
inc
mov
xor
sub
jle
lcall
jne
fs
fs
xchg
lock
mov
sahf
sar
xchg
mov
sbb
add
clc
ljmp
sbb
inc
addr16
shll
in
sbb
mov
mov
jecxz,pn
push
orl
je
pop
inc
cltd
cli
dec
inc
xchg
push
imul
clc
push
jne
adc
jnp
inc
inc
out
ja
add
mov
or
mov
dec
xor
movb
ret
push
sbb
and
clc
add
ror
mov
inc
jmp
int3
jne
pop
inc
inc
and
or
add
nop
push
add
push
fs
push
insl
ja
pop
or
inc
jns
aaa
push
dec
inc
fbld
inc
dec
dec
add
inc
inc
dec
dec
push
push
push
inc
dec
dec
push
and
incl
inc
push
jbe
inc
data16
cmp
aaa
xor
xor
xor
mov
push
push
push
push
dec
xor
push
inc
add
push
outsl
das
push
rclb
imul
decl
add
push
bound
imul
add
adc
imul
add
inc
inc
push
dec
dec
incl
insl
dec
push
mov
mov
in
scas
mov
loop
test
imul
sbb
adc
incl
popf
sbb
dec
aam
gs
mov
inc
sbb
dec
sub
lods
jno
insb
into
imul
xchg
jecxz
imul
or
mov
test
fisttpll
addr16
xor
cs
mov
xchg
pop
pop
in
insb
xor
aad
fs
jmp
out
sbb
jae
fdivs
and
cltd
inc
xor
stos
outsl
cli
jge
stos
or
pop
fdivl
jmp
adc
pushf
popa
ja
call
movsl
jae
sti
into
cmp
mov
in
jae
mov
jl
xlat
mov
mov
fnstsw
incl
jbe
and
test
push
xchg
push
sbb
cmp
lock
ret
incl
mov
out
test
mov
stc
mov
int3
mov
xchg
loope
sub
add
jg
mov
ret
cwtl
imul
aad
scas
scas
push
call
xor
mov
js
lcall
mov
and
mov
stos
stos
or
dec
or
icebp
mov
leave
jg
jmp
jo
icebp
inc
int
mov
xchg
cmp
fldt
cmp
mov
mov
jmp
cld
ret
rolb
out
ljmp
js
imulb
ror
xchg
pop
int
and
test
sti
test
test
pop
cmp
mov
cmp
call
fwait
sarl
and
cli
dec
enter
cwtl
pop
push
mov
repnz
enter
lret
inc
xorb
xchg
cmp
ljmp
and
jp
dec
insl
js
dec
inc
jp
and
out
mov
ds
mov
push
pop
jo
adc
addl
sbb
push
daa
ljmp
cltd
push
xchg
dec
inc
mov
rorb
jbe
cld
test
xor
in
cmp
jmp
adc
cmp
incl
pop
adc
jmp
xchg
lods
xchg
and
idivl
xchg
enter
ja
arpl
incl
fcomps
pop
movsb
push
int
push
push
pop
xor
mov
sbb
lcall
add
test
aam
fcoms
ds
push
mov
cli
push
add
mov
in
aaa
ds
xor
or
mov
xor
jge
inc
decl
xchg
sbb
int3
jno
popf
clc
dec
add
repz
push
mov
and
jg
xchg
and
out
rcrb
les
out
lds
dec
cmp
xchg
test
in
pop
inc
in
ljmp
incl
pusha
decl
add
add
dec
adc
inc
subl
pushl
cmp
imul
add
out
arpl
loop
je
cmp
add
pop
out
mov
divl
fcom
cmp
in
cli
mov
in
lcall
jb
sbb
lcall
mov
imul
ds
call
cmpsl
je
sbb
popf
lock
push
sub
mov
mov
xor
fs
inc
int
les
sub
lcall
popf
test
cmpsl
xor
pop
mov
sub
jmp
cmp
pop
lret
test
es
pop
insb
push
call
xchg
into
and
jge
jnp
out
arpl
popa
es
jg
or
rcl
idiv
fsubrs
rolb
xchg
sub
nop
push
sub
fwait
jbe
add
jb
sbb
hlt
scas
lods
pop
jno
push
rclb
sub
or
adc
stos
mov
test
incb
sbb
mov
push
aaa
outsb
mov
arpl
cmp
setns
decl
jmp
test
jge
xchg
shlb
movsl
jecxz
jno
hlt
mov
flds
mov
push
xor
dec
cmpb
rcll
cmp
nop
add
sahf
fistps
out
lock
hlt
cltd
iret
inc
clc
adc
pop
xlat
xlat
cwtl
stos
cmp
inc
sub
nop
push
push
shll
sub
cmp
inc
add
call
jmp
aad
add
xor
int
lret
movsb
clc
jb
push
in
fs
sbb
ljmp
xor
cmp
or
rclb
jg
cmc
mov
in
pop
dec
movsl
mov
push
es
mov
pop
or
xchg
or
outsl
xor
adcb
enter
push
aas
mov
aam
aam
pop
push
shll
jnp
or
jge
sbb
movsl
mov
jmp
pop
lret
pop
mov
xor
sbb
dec
lret
adc
js
mov
test
push
inc
mov
push
sbb
stos
icebp
movsl
stc
inc
inc
sarl
xor
and
dec
pop
outsl
jb
xchg
aad
pop
insb
dec
push
mov
mov
cld
adc
pusha
insl
add
sbb
loope
or
mov
sti
ljmp
std
out
xor
cmp
outsl
adc
lcall
add
cltd
pop
or
scas
scas
sbb
lock
jle
inc
pop
pop
jle
into
ficompl
adc
mov
jmp
and
outsl
adc
pop
jo
xchg
rcrb
jmp
and
addr16
rcrl
popf
mov
rolb
mov
sahf
int
jne
cmp
stos
mov
or
shlb
addr16
pop
mov
inc
jg
jns
add
inc
adc
lcall
test
xchg
das
shrb
add
jmp
cmp
inc
jmp
jo
andl
cwtl
and
loopne
pop
clc
ret
xor
mov
shrb
jno
jg
and
jg
cltd
imul
ret
mov
cltd
xchg
pop
mov
xor
movsl
mov
or
sbb
pop
das
leave
inc
mov
adc
dec
pushl
out
scas
jb
or
rcll
imul
inc
add
and
sahf
bound
fdivs
cmp
mov
xorl
xchg
pop
xor
xor
jge
mov
sbb
ljmp
sub
test
fs
jno
loop
mov
jnp
loopne
clc
push
sub
sub
mov
add
mov
push
adc
out
lock
xor
cmp
in
pop
cli
push
xchg
xchg
pop
push
pop
imul
ret
jle
xchg
adc
outsl
mov
inc
push
icebp
lcall
push
push
adc
and
xor
inc
pop
rolb
pop
pop
sub
ljmp
cmp
mov
test
push
rclb
rcll
push
ret
pusha
aam
rcl
xchg
pop
sbb
decl
inc
cmpsb
rorb
and
loope
andb
lock
fsubrl
and
fucom
test
jp
mov
dec
adc
sbb
rcr
sbb
push
js
or
js
imul
or
jne
sbb
jmp
mov
xor
pop
int3
fwait
mov
mov
test
push
pop
scas
aas
out
jmp
mov
clc
popa
mull
mov
sarl
xlat
data16
clc
pop
pop
sub
lret
inc
cltd
or
fnstsw
sub
xorb
xor
fistpll
xor
hlt
in
jl
push
dec
ja
sbb
lahf
sub
sbb
fbld
addl
sub
sub
xchg
fnstsw
outsl
decl
rcll
jae
fimuls
dec
shlb
das
ss
std
ljmp
lock
outsl
mov
popa
sbb
jb,pn
sub
das
xor
xchg
sub
ljmp
dec
mov
psubsb
imul
lret
mov
pop
ljmp
cld
idivb
pinsrw
add
inc
push
out
outsb
test
or
mov
cmc
fidivrl
ds
pop
pop
cltd
pop
mov
mov
mov
ljmp
sub
dec
mov
int3
dec
sbb
push
fildl
scas
jl
dec
add
stos
push
push
push
outsl
sbbl
lcall
lods
jge
mov
pop
sbb
sub
xadd
cld
ficoml
pop
je
je
ss
outsl
push
sbb
push
in
jl
adc
fisubl
xchg
sub
pop
adc
rolb
outsl
pushf
push
cmpsl
ljmp
insl
xchg
or
jl
fwait
xor
push
jbe
xor
pusha
sbb
decl
sbb
stos
outsl
outsb
movsl
push
adc
xchg
pop
cltd
pop
clc
call
mov
mov
enter
jge
push
xorb
jo
aaa
pop
scas
dec
sbb
pop
xchg
fisttps
pushaw
jecxz
jmp
in
aas
cmp
jno
stos
and
ljmp
jae
loope
jmp
or
jp
adc
mov
mov
sbb
push
sub
popa
mov
cmp
sti
pop
cltd
push
and
cmc
push
fdiv
mov
or
fmuls
pop
sub
jle
dec
rcll
and
hlt
xchg
cmc
das
outsl
test
push
nop
fs
mov
dec
testl
push
popa
rcrb
mov
push
add
stos
imul
out
mov
lcall
stc
or
gs
push
loop
sar
cwtl
sbb
inc
repnz
xchg
inc
xchg
cmp
loope
fs
js
aas
inc
icebp
jmp
or
fdivrl
push
sbb
add
scas
call
aad
fwait
mov
and
std
out
xor
enter
mov
or
adc
fstpt
das
cld
shrb
test
fists
jb
cmpl
cmp
loopne
jne
mov
mov
js
add
ss
cmpsb
lods
mov
pop
das
in
jg
rcl
push
adc
es
sub
mov
cwtl
inc
in
xchg
pop
xor
ljmp
std
sti
ret
mov
test
int3
xchg
add
mov
shrb
icebp
pushl
xchg
pop
xor
mov
loopne
xchg
pop
hlt
adc
cmp
mov
hlt
incl
pop
enter
outsb
sbb
sysenter
lea
push
cld
mov
pop
rorl
bound
movsl
mov
inc
push
cld
das
test
fistl
lcall
jp
incl
or
cmp
adc
cmpsl
inc
push
pop
adc
pop
xor
outsb
mov
push
loopne
lcall
insb
outsl
sub
push
scas
dec
sub
lret
mov
pop
mov
call
dec
dec
insl
lock
or
push
pop
jl
push
stc
jg
sub
loop
js
fsubl
jns
cs
sbb
mov
outsb
iret
mov
les
xor
movb
jg
decl
xchg
cmp
mov
fwait
or
insl
lret
lock
dec
sub
mov
cmc
lock
and
out
test
cmc
das
enter
and
scas
mov
mov
sbb
call
inc
enter
or
sub
and
jge
and
mov
andl
push
fsubl
jp
in
push
nop
push
adc
or
clc
sbb
push
into
pop
sbb
pop
ret
std
decl
add
jne
xor
sub
aam
or
mov
cmp
int
push
add
movsl
push
add
fistpll
dec
fcompl
fsubp
and
ret
add
icebp
incl
mov
leave
lcall
sub
or
rcll
mov
outsl
in
dec
mov
loopne
sbb
call
jnp
push
clc
push
clc
cmpsb
out
push
inc
cwtl
mov
jnp
and
movsl
imul
enter
cmpl
pop
mov
enter
jle
outsb
icebp
lret
in
aas
inc
lock
mov
out
jg
jns
idivl
call
mov
pop
orl
cs
xchg
push
sub
fistpll
push
inc
inc
imul
fwait
in
jb
loopne
cs
das
lock
hlt
sbb
or
in
or
andb
clc
sbb
scas
in
gs
or
aaa
js
dec
stos
jo
push
aaa
enter
pop
fwait
movsl
aad
jnp
xchg
ja
adc
jb
adc
outsl
std
inc
dec
outsb
in
jo
ret
cmp
iret
xchg
addr16
iret
fdivl
das
pop
fcompl
cmpl
ljmp
dec
pop
sarl
inc
or
add
lcall
add
cld
incl
mov
rcrb
sbb
xor
pushf
push
jg
fadd
pop
push
cmp
mov
leave
inc
shll
dec
lods
mov
cli
jo
in
cmpsb
or
mov
add
pop
clc
call
sub
enter
fstpt
sbb
decl
and
add
fidivl
pop
rcl
mov
push
pushl
jo
mov
pop
adc
pop
ret
insb
xlat
xchg
cmp
jg
divl
xchg
fsubrs
mov
sub
scas
decl
loop
or
cmpsl
jp
cmc
movsl
dec
or
cmp
mov
clc
test
insl
stos
pop
repnz
push
cmpsl
and
ja
aas
mov
xchg
mov
std
out
jle
inc
mov
lcall
gs
outsl
lock
mov
add
mov
rclb
ss
inc
rorb
or
and
push
fldcw
sbb
fsubl
mov
xorb
inc
out
scas
stc
jnp
ja
aaa
sub
inc
or
push
fldt
or
loope
mov
push
pop
and
xchg
gs
mov
pop
sbb
fcoms
jecxz
int
add
xchg
fsubrl
ret
cwtl
inc
xor
ljmp
out
mov
mov
mov
dec
fsubp
decl
out
jbe
leave
lods
sub
sbbb
or
mov
scas
or
scas
adc
sub
js
jg
je
or
mov
jg
addl
fisubl
or
adc
bound
mov
sbb
mov
or
aaa
mov
or
jno
imul
push
mov
lock
ds
lcall
adc
arpl
mov
pop
pop
stos
aam
cld
movsb
mov
in
lcall
xor
sub
xor
xchg
pop
and
mov
jno
or
in
or
mov
dec
scas
mov
sub
mov
cltd
enter
cli
lea
clc
je
test
mov
pop
sbb
and
mov
daa
add
or
xchg
enter
and
mov
dec
cwtl
into
lcall
cltd
xchg
xlat
test
decb
push
push
jmp
insb
stos
dec
cmp
int
adc
incl
inc
rorl
push
mulb
adc
in
xchg
cmpsl
jns
scas
aas
xchg
es
ret
sub
das
cld
pop
jnp
xchg
decl
inc
jbe
pop
push
pusha
cwtl
idiv
ljmp
dec
popa
jg
mov
bound
mov
outsl
aad
shrl
xchg
lods
cmpsl
loop
ficomps
inc
push
jnp
ljmp
pop
orb
jbe
push
lods
mov
adc
cmpl
repnz
ficompl
mov
fbld
jns
lret
scas
sbb
cli
sarl
add
test
inc
mov
daa
clc
ret
outsl
or
pop
and
cmp
lahf
arpl
nop
xor
cld
aaa
js
fidivs
or
mov
out
hlt
decl
fisubrs
mov
or
dec
adc
and
call
outsl
clc
hlt
mov
sbb
loop
jp
jns
sbb
push
jge
dec
inc
dec
js
scas
jae
cmp
pusha
sbb
push
out
mov
push
pop
test
sub
sbb
sbb
or
mov
add
jl
and
and
lock
or
mov
popf
out
dec
mov
sbb
adcl
cltd
inc
fidivrs
inc
sub
out
das
cwtl
and
sbb
enter
jne
pop
stos
dec
xchg
or
ss
xor
ljmp
jg
idiv
or
dec
xchg
addl
pop
fucomip
rcl
push
xchg
mov
jg
repnz
sub
les
pop
dec
incl
jp
push
iret
out
mov
mov
jo
xchg
adc
data16
scas
jbe
aas
cld
cmp
pop
mov
jmp
pop
test
mov
push
sbb
cmpsl
sub
jmp
out
leave
mov
push
js
jmp
pop
mov
adc
pop
or
push
add
outsl
cmc
push
mov
lret
inc
push
arpl
lock
ljmp
push
mov
test
test
jmp
mov
adc
sbb
inc
clc
xchg
mov
jmp
add
sub
cmp
push
data16
stos
lea
cld
sub
test
fisttps
add
push
jns
inc
insl
jno
or
pushf
daa
add
je
lock
jb
rclb
jns
and
sarb
pop
pop
and
mov
sbb
add
push
jbe
sbb
jp
jnp
fists
add
add
mov
out
mov
cmpsb
add
adc
fildl
pop
or
or
cmc
dec
add
push
mov
jge
ds
sbb
or
sub
xchg
gs
add
mov
ja
cli
ja
lds
insl
enter
loope
ret
cli
push
js
mov
fisttps
sbb
sarb
mov
add
into
shl
and
push
add
mov
stc
decb
rcll
xchg
push
add
ljmp
test
xchg
or
cltd
fstl
push
mov
mov
push
inc
sbb
pushf
xchg
filds
lret
stos
subb
pop
and
and
push
and
jp
pusha
loope
jbe
add
and
push
adc
bound
add
xor
pop
lahf
imul
std
mov
pop
cmpl
cltd
xchg
mov
mov
mov
jmp
push
aam
jle
movsl
mov
adc
inc
fstps
in
inc
ljmp
xor
lahf
dec
sbb
std
popf
in
jecxz
add
xor
lods
adc
mov
push
into
inc
pop
xchg
add
jg
fistpll
inc
xchg
les
sahf
aad
ljmp
or
lds
je
adc
aas
not
sahf
test
in
call
imul
faddl
adc
push
jbe
or
stc
sub
xchg
or
ffree
incl
sub
cs
pop
sub
cmpsl
pop
test
aaa
push
add
in
in
loope
add
je
sub
sti
sbb
jns
push
or
ja
divl
out
mov
push
sub
lods
jle
fadds
outsb
fisttpl
imul
xlat
and
inc
ss
and
dec
jl
add
fdivr
call
xchg
lret
mov
add
loope
loopne
addr16
xor
mov
pop
into
adc
arpl
aam
pusha
mov
neg
fistpll
mov
mov
push
mov
enter
inc
repz
pop
jbe
sahf
jl
inc
ljmp
daa
mov
outsl
or
lret
xlat
lret
fstps
mov
das
enter
pop
add
pop
addr16
in
jno
movsl
or
jo
addr16
cmp
mov
ret
lock
push
inc
scas
cmp
or
push
ret
test
test
xor
mov
add
jo
xchg
and
lock
or
mov
call
aam
shl
mov
push
aas
inc
popa
sub
push
dec
mov
xchg
loopne
stc
jae
sbb
add
jle
imul
divb
test
out
inc
jg
ret
mov
adc
pop
mov
jmp
xor
imulb
add
jmp
wrmsr
add
fwait
ja
add
shll
jmp
pop
nop
sub
pop
mov
mov
adc
lods
mov
das
fbld
pop
pusha
popa
iret
inc
daa
loope
data16
mov
dec
mov
insl
add
jp
sbb
orb
mov
push
and
and
xchg
lock
cmpsl
js
rcl
in
mov
hlt
jl
and
sahf
push
mov
cmpb
lahf
xchg
xor
sub
mov
addr16
xchg
ja
je
mov
stos
loopne
push
sub
dec
pop
xchg
jg
aad
adc
cmpsl
mov
ja
int3
mov
mov
repz
lcall
je
xchg
mov
out
mov
andl
out
popa
jl
cmc
add
cs
push
loope
js
das
nop
xchg
outsb
mov
lock
fisubrl
jae
mov
or
push
std
mov
add
add
jge
add
mov
imul
sti
inc
xchg
movb
dec
movsb
or
add
jne
xchg
lret
xorl
cmp
mov
mov
je
push
test
insl
jmp
js
rcl
lock
imul
sub
adc
mull
or
outsb
mov
hlt
nop
cmp
mov
xor
cs
xor
rcll
outsl
insl
decl
cmpsb
andnps
outsl
mov
fs
adc
jle
sti
daa
jno
jo
mov
ja
pop
pop
fstl
daa
imul
sbb
jle,pt
clc
and
imul
add
mov
rcrb
adc
jne
lea
mov
shll
shll
xchg
adc
add
mov
es
pop
sbb
rorb
and
aas
cli
xor
push
push
or
or
stos
in
mov
xor
sub
xchg
add
push
outsb
jb
jg
js
adc
adc
sbb
in
add
push
cltd
xor
dec
adc
testb
xor
add
enter
sbb
or
jg
sub
scas
and
push
js
mov
mov
fistpll
xchg
adc
pop
jg
test
inc
pushf
cmp
cwtl
pop
push
inc
pop
insb
add
mov
cmp
pop
ss
dec
sbb
adc
fsub
scas
inc
push
test
push
push
mov
dec
je
pop
pop
fists
ret
aad
bound
popf
pop
mov
add
mov
and
int
jae
dec
je
shl
int3
dec
icebp
loope
or
inc
inc
cltd
aam
fistpll
xchg
testb
xchg
push
inc
or
sbb
sbb
fisttps
gs
mov
add
mov
outsl
mov
cmpsb
stc
pop
cmpsb
in
sub
xchg
test
ficoml
mov
adc
pop
insb
xchg
shll
fstl
cmp
notl
mov
cli
add
inc
arpl
mov
call
inc
std
dec
cmp
pop
das
mov
xchg
hlt
nop
mov
mov
or
jl
push
jae
sub
mov
je
push
aaa
aam
pop
imulb
enter
fists
es
push
mov
movsb
sbb
aam
mov
fwait
add
jg
movsl
adc
sbb
pusha
push
push
jbe
fisubrs
cmp
dec
add
add
clc
xchg
add
fcoms
push
incl
push
js
push
mov
stos
cmpsl
inc
repz
add
aaa
shr
loop
movsl
xchg
cli
or
cmp
ret
jg
jo
out
lea
sbb
pusha
sub
sbb
jo
inc
stos
rorb
adcl
or
sbb
mov
push
xor
out
lahf
mov
push
leave
cmp
push
or
sbb
sbb
sub
lret
push
stc
jecxz
mov
sbb
or
popa
mov
iret
xchg
adc
push
jns
jle
mov
hlt
shrl
cld
pop
out
incl
lock
push
popa
xor
aas
cld
or
pop
mov
cmc
clc
add
iret
es
mov
and
jno
xchg
xor
push
and
xchg
jbe
sar
sbb
adcb
out
fisubl
aaa
cs
mov
and
bound
and
xor
pop
mov
test
add
or
mov
int3
add
cmp
sub
icebp
rcr
repnz
or
xor
sbb
lds
fcoms
arpl
pop
add
jno
mov
jno
jmp
add
sub
movsl
loop
push
ret
je
repz
add
xchg
pop
mov
mov
fwait
or
add
add
les
push
adc
mov
dec
es
push
xchg
out
push
pop
ljmp
inc
rclb
jg
out
loopne
inc
pop
ljmp
je
sbb
adc
les
dec
sbb
pop
jns
push
pop
cmp
stos
bound
test
add
push
pop
cmp
test
mov
lret
or
divb
outsl
in
xlat
rcll
addr16
add
sbb
sbb
jl
shlb
cld
gs
pop
adc
ds
pushf
mov
data16
sbb
mov
dec
out
rcll
pop
xchg
push
inc
movb
fs
repz
jno
jne
fcomps
pop
das
imul
es
popa
cmpsl
shlb
xor
sarl
stos
addl
test
add
in
insl
jmp
add
ss
sbb
mov
test
ja
loope
in
adc
bound
and
outsb
sbb
push
xchg
dec
in
test
inc
xchg
mov
shlb
addr16
ror
int
mov
cmp
rcll
sti
fnstsw
lock
scas
and
popa
ss
sbb
ja
mov
jbe
sbb
mov
mov
test
pop
mov
scas
jg
xorl
fdivl
xchg
adc
nop
into
outsl
cs
push
cmp
mov
sub
cmp
jle
stos
mov
nop
or
das
out
call
aas
cli
or
loopne
fidivs
sub
test
ljmp
icebp
or
cmp
cmpsl
jmp
subl
jl
push
pop
or
loop
xchg
lods
cltd
push
out
xor
mov
cmp
ja
int
test
mov
int
fs
add
outsl
mov
popa
push
xchg
pusha
xchg
inc
pop
mov
mull
fdivrs
enter
es
popa
adc
mov
push
dec
std
outsl
lret
outsl
inc
adc
cmc
scas
pop
test
mov
jbe
add
fwait
push
insb
mov
mov
jecxz
ljmp
and
rorl
sub
mov
jno
mov
.byte
ljmp
call
lock
pushl
add
lea
push
call
leave
xchg
in
ret
sbb
jmp
adc
mov
aaa
addr16
subl
fisttps
insb
mov
mov
push
call
dec
jbe
xchg
lds
add
mov
out
xchg
push
loopne
sub
pop
sti
lahf
mov
les
and
jecxz
nop
addl
lea
push
push
cwtl
mov
fistpl
lock
int3
sbb
mov
or
xchg
out
mov
inc
das
call
int3
dec
mov
and
jno
sbb
push
add
jo
mov
lock
push
add
sbb
leave
frstor
lock
out
add
pop
sbb
divb
test
insl
imul
adc
push
and
mov
jecxz
pusha
mov
push
bound
in
fld
je
jo
sub
inc
xlat
mov
xchg
xchg
push
push
cld
sbb
mov
mov
rolb
rcll
not
jmp
sbb
fdivs
fcmovnu
dec
mov
cs
xor
rorl
and
in
inc
jmp
in
or
pop
hlt
out
adc
push
cmp
mov
or
mov
pop
repnz
cmc
xor
fisubl
mov
jle
adc
inc
not
mov
sti
push
xlat
mov
push
fildl
shl
xor
stc
popa
test
xorl
inc
lds
inc
inc
ja
and
push
xor
adc
cld
dec
ret
pop
xor
push
leave
cld
inc
clc
xor
and
push
repz
clc
imul
mov
cmp
insb
dec
xor
andb
inc
xchg
xor
pushf
in
inc
push
lret
sub
inc
nop
and
xchg
cmp
popl
pop
sub
xchg
int3
mov
adc
xchg
sbb
sub
add
arpl
cmp
nop
add
cmp
iret
add
imul
jecxz
pop
xchg
insl
sbb
dec
dec
mov
clc
fildl
jo
clc
push
push
hlt
fiadds
mov
jbe
test
jae
add
mov
push
int3
jl
fistpll
pushf
jl
lock
push
mov
pop
orl
fs
gs
or
push
addr16
loope
push
cwtl
or
imul
inc
in
in
aas
cwtl
scas
sbb
sti
lods
and
dec
arpl
aaa
cmp
mov
mov
add
scas
mov
jle
clc
pop
mov
in
pop
xchg
push
cmp
adc
push
nop
loopne
fnstcw
sub
dec
incl
push
xor
les
leave
outsl
jge
aas
loopne
popa
push
xchg
xchg
lahf
dec
iret
and
adc
into
add
push
arpl
inc
insl
imul
popa
inc
push
pmulhuw
fistl
lret
add
das
rorl
sub
add
cli
add
add
sbb
test
decl
stos
lret
sbb
inc
outsb
cmp
cwtl
add
decl
add
add
mov
add
or
rol
fmul
fldt
pop
sub
dec
push
fldt
add
add
and
ret
into
in
mov
jle
pop
jl
loopne
and
sbb
pop
insb
neg
pop
sti
fiadds
cmp
sbb
dec
or
out
insl
stc
fildl
inc
pop
add
mov
sbb
or
pop
sub
and
lret
insb
idivl
lret
mov
sub
dec
cmc
enter
lods
inc
mov
sub
add
outsl
ljmp
add
mov
adc
mov
xor
je
lods
fcmovne
fwait
inc
adc
clc
fcoms
or
sbb
jle
add
icebp
sub
lahf
mov
enter
xchg
mov
movsb
push
pop
jns
out
jle
and
adc
pop
pusha
in
add
rolb
add
pusha
lahf
add
or
mov
jg
fcomi
and
jno
lea
hlt
mov
movl
cmp
adc
mov
push
cltd
incb
mov
aas
add
sbb
pusha
dec
scas
mov
add
xchg
pop
dec
pop
clc
mov
jg
das
push
repz
cmpsb
lods
sbb
stos
xchg
or
inc
pop
lret
pop
notl
push
jnp
adc
cmp
fcoml
pop
dec
add
jg
or
enter
add
cwtl
mov
stc
inc
shll
loop
fldl
fldl
sahf
lods
sbb
jb
out
out
jl
xor
pop
cs
push
sbb
sbb
add
and
push
mov
lock
shll
ret
addr16
shrl
adc
ss
pop
fbld
or
and
sbbl
lret
add
add
cmp
inc
sbb
mov
icebp
pop
fdivl
leave
xor
lret
add
dec
xor
andb
fmuls
or
push
xor
scas
outsb
add
jnp
dec
mov
inc
lcall
insl
inc
mov
mov
jne
dec
adc
adc
or
xchg
add
add
testb
add
arpl
add
push
pop
xchg
ja
divb
cmp
or
test
dec
fmull
out
xor
fdivrl
cmp
std
outsl
xor
xor
jns
jno
jle
sbb
add
add
aam
cs
dec
pusha
adc
pop
imul
out
cmp
push
les
ret
mov
add
adc
in
add
or
mov
xor
add
cmpl
mov
test
and
xor
add
jl
mov
aas
cs
cli
push
xor
out
rcrl
scas
jne
or
inc
mov
sti
clc
iret
inc
add
xchg
and
in
jp
outsb
mov
xor
stos
sti
and
jg
jp
pop
mov
jge
cmp
push
push
pop
es
dec
xchg
or
fwait
test
loope,pn
jl
adc
stos
scas
jmp
aaa
fldl
loopne
and
bound
gs
add
sub
lahf
sbb
jecxz
imul
sbb
xchg
aam
repnz
outsb
aaa
pop
or
fs
lods
sbb
mov
and
in
or
jg
cmp
aaa
jecxz
jecxz
test
xor
out
jg
int3
into
xchg
addl
and
addl
sbb
mov
into
insb
or
je
add
jmp
out
and
jl
insl
dec
or
mov
add
inc
int3
test
insl
clc
sahf
mov
dec
adc
insb
xor
clc
lea
loop
ret
fstpl
test
add
mov
das
fwait
xchg
add
cmp
add
pop
inc
scas
rclb
jle
and
loopne
mov
add
push
insb
jl
in
sbb
add
insl
ret
pop
push
jmp
mov
xchg
sbb
js
sub
andl
adc
push
inc
int
mov
orl
lods
movsl
lcall
or
dec
ret
push
fstpl
testl
mov
cmp
jmp
add
inc
scas
bound
jecxz
sub
dec
xchg
daa
pop
fnstsw
aas
int
outsl
pop
xchg
add
adc
pop
leave
jp
es
jg
add
sbb
sub
cwtl
dec
iret
dec
sub
loope
mov
test
or
lock
adc
out
xor
and
inc
cs
jbe
cmp
or
or
inc
pop
in
ss
mov
add
mov
fs
push
cmc
mov
jb
fs
mov
xor
gs
or
cld
cmpb
bnd
jmp
add
or
mov
les
and
jmp
xor
jns
in
pop
ja
addr16
lds
hlt
mov
xchg
mov
rolb
jns
jmp
cmp
mov
sub
sbb
push
aaa
push
scas
imul
inc
ss
push
add
or
lea
adc
bound
out
inc
fwait
sub
xor
mov
ret
gs
inc
insb
lahf
cmp
in
sbb
addr16
jne
ds
mov
test
dec
pusha
add
mov
int3
outsl
fbstp
cmp
jp
out
pop
adc
icebp
cmpsl
pop
fwait
and
out
push
inc
fsubrs
daa
add
fstpl
pop
outsb
cwtl
sbb
pop
lea
or
jecxz
sbb
add
xor
add
pop
dec
xchg
sbb
fdivs
xlat
mov
jb
sbb
cmp
mov
add
jne
aad
scas
mov
adc
iret
sbb
mov
arpl
rorb
daa
sbb
pushf
insb
jmp
mov
and
pop
xlat
mov
pusha
sub
scas
fnstcw
not
pop
adc
stos
loopne
xor
mov
xor
ret
sti
outsb
in
xchg
jbe
adc
add
lods
pop
xor
mov
mov
rclb
jb
jo
cwtl
sarl
or
cmc
subl
dec
insb
jb
jge
adc
mov
mov
out
adc
repnz
add
pop
ja
pop
aad
cmp
std
addl
mov
fcoms
pop
lea
cmp
ds
inc
repnz
push
ret
loopne
negl
call
push
jno
sbb
or
jmp
ret
mov
out
ret
jmp
icebp
pop
adc
bnd
and
push
orl
xorl
xor
xor
aam
incb
sbb
add
clc
imul
cmc
nop
jb
orb
cmp
pop
loopne
aad
push
jmp
aad
fstpl
or
and
mov
jbe
add
mov
cs
or
jp
mov
mov
add
mov
cmpsl
or
adc
std
std
adc
mov
jbe
and
jge
sbb
rorb
mov
xlat
mov
fadds
or
loopne
jae
pop
clc
lds
xchg
mov
or
pusha
xor
test
icebp
jmp
jecxz
jmp
ljmp
inc
cmpsb
dec
add
mov
movb
pop
pop
lahf
mov
mov
adc
leave
out
or
sub
push
xchg
sbb
push
mov
add
mov
hlt
fs
scas
pusha
fildll
insb
mov
xchg
shrl
out
pop
xchg
push
mov
pop
cs
push
scas
pop
xchg
sub
test
xlat
ja
jno
adc
sti
add
fisttpl
orl
addr16
loope
jge
push
sub
movsl
stos
fcmovb
addr16
or
or
sbb
or
out
lret
arpl
into
ror
setl
test
int
mov
adc
or
xlat
or
jne
jg
cmp
lds
jecxz
and
xchg
jbe
movsl
not
and
nop
insb
push
stos
jb
mov
dec
mov
js
pop
daa
mov
xchg
pop
cld
xor
pop
adcl
es
js
push
lahf
mov
xchg
mov
cmc
popa
xor
add
jne
dec
sub
xor
pop
out
push
jle
mov
sub
mov
sub
mov
mov
fmull
adc
lock
into
mov
sbbl
es
and
lods
add
dec
inc
fwait
mov
sbb
mov
loopne
adc
shll
popa
cmp
aam
mov
xchg
and
lret
mov
icebp
fimull
es
add
insl
mov
inc
mov
sub
pop
mov
sub
jne
cmp
loopne
push
rol
pushf
cli
xchg
sbb
and
mov
cmpsl
pop
jge
sbb
or
sub
ret
in
lds
out
fcomps
xor
out
mov
rol
mov
lret
pop
and
lret
sub
aaa
pop
pusha
idivl
jmp
dec
je
jb
sbb
add
das
adcl
lock
call
mov
dec
push
adc
cs
xchg
xlat
mov
cmp
mov
mov
mov
jbe
sbb
mov
xor
cld
and
insb
cld
xchg
lock
pop
sbbl
xchg
push
dec
cmp
icebp
pop
jg
in
cmp
cmp
cs
jnp
fldt
sbb
cwtl
mov
xchg
lcall
mov
adc
movsl
scas
shrl
mov
arpl
js
bound
dec
nop
sbb
sbb
cli
push
inc
mov
xchg
rorl
push
or
add
sti
mov
lcall
nop
dec
pop
out
add
and
adc
cltd
sub
adc
fcom
cmp
pop
mov
lods
xchg
loope
ljmp
lds
dec
and
mov
in
jmp
inc
out
pushf
push
sbb
jo
mov
shr
pop
ret
jl
adcb
jbe
jge
jne
inc
psubusw
shll
lret
sub
mov
mov
cwtl
dec
mov
pop
out
mov
shl
jns
lods
inc
cltd
adc
ret
mov
and
fmuls
and
jle
push
js
adc
dec
mov
roll
push
mov
sbb
xor
fnstenv
fdivr
mov
dec
ja
ja
add
push
pop
cmp
scas
and
lods
inc
mov
fcmovne
jb
stos
xor
push
or
ret
int
jecxz
out
ret
push
add
dec
push
push
pop
aaa
dec
pop
cs
orb
inc
movsl
cli
jne
and
sbb
std
push
cmp
xor
sets
outsl
gs
add
xor
inc
xlat
imul
orl
inc
pop
adc
sub
xor
out
pop
sbb
rcr
scas
inc
cmp
movsb
mov
lcall
mov
iret
sbb
clc
adc
aaa
idiv
ss
mov
sbb
int3
jb
xor
mov
pop
andb
bound
sub
cmpsb
lods
or
dec
fldt
pop
xor
lahf
adc
or
fwait
push
fstl
rcl
mov
inc
shr
sahf
xchg
jecxz
jae
rorb
sbb
push
loopne
ds
adc
test
aaa
gs
pop
cmp
loopne
andb
test
mov
lcall
sbb
pop
ss
mov
push
outsl
stos
dec
mov
outsb
sub
pop
icebp
add
xchg
arpl
out
adcl
test
std
outsl
leave
rclb
dec
daa
push
add
jnp
jl
mov
xor
or
hlt
or
mov
data16
pop
das
sbb
sub
jns
pop
stos
xor
cli
pop
jo
je
inc
jo
test
test
xchg
movsb
push
lret
xor
outsb
push
jecxz
xchg
xchg
add
xlat
dec
pop
lret
stos
pop
xor
xchg
notl
add
xor
jmp
fisttpll
push
imulb
jae
push
repz
outsb
call
or
divl
aas
jb
mov
or
hlt
and
inc
arpl
push
cmp
aam
push
add
dec
xlat
fs
mov
loopne
xchg
pop
cli
or
push
lret
sar
inc
rclb
fmuls
adc
push
pop
dec
loopne
in
jno
insb
push
add
add
ss
addr16
inc
data16
jl
aaa
xor
sarb
and
pop
cltd
sbb
subl
and
scas
imul
in
or
xchg
add
ja
lea
inc
mov
cmp
pop
sbb
popf
sub
movsl
insb
pop
cmc
sub
push
adc
inc
or
xchg
and
pop
cmp
test
dec
pop
push
arpl
or
inc
mov
push
xchg
inc
int3
sub
xlat
out
divl
dec
cmp
sbb
lea
les
sahf
adc
scas
mov
jge
addr16
test
sbb
data16
dec
pop
ret
inc
outsl
ljmp
shl
aad
std
sbb
das
out
or
fdivs
cwtl
cmpsl
mov
loope
js
inc
inc
xor
imul
sbb
adc
jo
or
andb
call
gs
mov
cwtl
jo
fcoms
jl
push
jae
pop
stc
cltd
and
fistpll
addl
ja
clc
add
jmp
loopne
cmpsb
mov
call
cli
sbb
add
lock
mov
aad
sub
mov
cmp
cmc
fisubs
shrl
cmp
or
iret
ret
and
and
push
cmp
mov
leave
inc
push
or
out
cmpsl
mov
in
int3
out
fmull
pushf
test
out
pop
jae
jge
mov
scas
daa
adc
push
fstpt
push
pop
and
leave
dec
fwait
mov
out
imul
imul
icebp
jl
push
pop
or
mov
divb
insl
adc
pusha
cmp
fcmovbe
sub
add
xchg
inc
fstl
and
iret
aas
cs
ljmp
push
add
and
dec
pop
leave
mov
into
je
jmp
jns
dec
imul
xchg
lods
xchg
jne
cmp
mov
pop
push
cwtl
inc
sbb
lret
cmp
pop
mov
je
lock
adc
adc
decb
sbb
andb
adc
shrb
mov
push
pop
inc
js
out
dec
cmp
aaa
cli
cmpsb
jb
push
jl
rcll
insb
clc
push
pop
fstpl
mov
mov
popa
sub
clc
iret
xchg
and
mov
inc
iret
mulb
pop
add
mov
adc
push
cltd
fldz
loop
mov
fwait
aas
mov
and
sahf
or
fildll
push
fwait
adc
int3
push
scas
paddw
inc
ds
bound
cmp
jne,pn
xor
mov
dec
mov
xor
je
subl
mov
testl
dec
fs
dec
mov
cld
inc
cmp
lock
scas
inc
lock
movsb
sbbb
and
push
push
and
add
and
hlt
scas
inc
pop
pop
xchg
cltd
sub
popa
je
mov
inc
xchg
mov
je
and
pop
out
sub
jmp
cmp
jl
push
fmuls
pop
fnstcw
fadd
push
cltd
aam
xchg
std
jnp
sub
mov
pop
xchg
lret
dec
js
out
jmp
mov
aaa
adc
stc
adc
adc
fwait
jns
sub
xchg
clc
lcall
call
cmc
xor
repnz
mov
icebp
call
jecxz
movsl
in
xchg
adc
push
and
sbb
xor
js
fstpl
push
mov
pop
xor
push
leave
popf
shll
pop
pop
cld
mov
sbb
movl
rolb
test
or
cmc
cmpsb
arpl
inc
pop
cmp
dec
imul
pop
bound
out
sub
scas
jle
mov
and
mov
sub
push
js
sarl
pop
cmpb
sbb
popf
cmp
xchg
and
xor
dec
add
mov
pop
jg
hlt
and
sub
std
scas
imul
mov
test
out
adc
lods
pop
ja
adc
lock
insl
jecxz
or
addr16
fs
add
je
jo
lcall
ds
inc
lahf
insl
push
ds
mov
cmp
nop
cwtl
inc
mov
push
movsl
jbe
scas
xorb
mov
les
jnp
mov
inc
clc
mov
adc
sub
cmp
aad
insl
mov
mov
das
ja
movsb
inc
sahf
xor
xchg
inc
cli
loopne
arpl
pop
mov
pop
dec
inc
cmpsb
stc
movsl
mov
xchg
xchg
rorb
hlt
popa
jmp
push
fs
inc
pop
ja
lcall
andl
sub
test
mov
adc
pop
lret
push
test
jle
pushf
cmp
bound
rcl
adc
xor
mov
sub
mov
mov
mov
mov
gs
int3
shl
pop
xor
mov
imul
repnz
div
cmc
ror
fbstp
nop
fmul
mov
pop
lods
je
cmp
sbb
mov
fs
ss
insl
adc
adc
mov
adc
hlt
pop
scas
filds
outsl
sbb
insl
test
mov
cltd
pop
stos
adc
out
and
cld
sub
shrb
mov
imul
dec
mov
je
rorl
mov
repz
test
ja
and
outsl
enter
push
sbb
pop
xchg
pop
mov
and
out
addr16
ret
sub
test
fisubrl
push
out
imul
or
stos
mov
lock
mov
fisubl
push
push
sbb
test
xor
and
ljmp
mov
push
adc
jmp
daa
inc
aad
sub
jb
add
cltd
xchg
test
sbb
cmp
inc
push
notl
jecxz
test
cmp
dec
jne
fdiv
mov
push
jg
xchg
sub
push
aas
mov
add
js
and
jmp
fsubrs
inc
mov
in
push
inc
jp
or
and
dec
add
jecxz
les
jae
push
mov
dec
add
sbbl
dec
pop
push
out
jg
xchg
dec
sbb
inc
cli
jmp
xor
test
mov
sarb
es
divl
xchg
scas
xor
les
mov
xchg
fs
cmpsl
xor
fiaddl
test
sub
ljmp
cmp
xlat
inc
mov
fwait
je
mov
adc
pop
lret
icebp
rorb
decl
lret
pusha
sti
ret
ds
aam
mov
stos
lahf
dec
mov
pop
repz
es
ret
jo
push
scas
lsl
dec
cmp
in
adcb
sub
repz
sti
idiv
xchg
dec
ds
rclb
das
loop
sbb
jne
xchg
cmp
inc
xchg
rcrb
mov
push
jp
or
inc
sbb
cmpsl
ficompl
jns
sbb
ljmp
sar
shll
ds
push
adc
add
dec
sbb
cmp
mov
js
addr16
dec
and
xchg
mov
ja
ret
iret
fsubl
sbb
pusha
mov
shr
mov
es
in
test
xlat
and
xor
add
fwait
adc
jno
mov
in
pop
out
and
fwait
lahf
push
adc
push
outsl
or
mov
ljmp
mov
push
jbe
scas
psubb
shll
mov
negl
adc
push
imul
push
mov
jp
xorl
dec
out
ds
dec
loope
xchg
mov
loope
das
inc
hlt
mov
das
test
jg
mov
xor
inc
dec
movsb
cmpb
scas
ss
aas
mov
addl
addl
cmp
mov
jns
mov
fsubs
jmp
sub
into
xorb
adc
insl
sub
xchg
mov
or
jmp
mov
mov
and
data16
popf
jle
rcrb
and
push
lsl
push
mov
test
cmp
cmc
test
out
mov
mov
les
loope
pop
and
aad
sbb
mov
popf
sub
pop
aam
fadds
mov
adc
icebp
adc
mov
dec
push
subb
mov
mov
test
cld
xor
lock
lock
push
movsb
pop
add
subb
es
mov
inc
hlt
lods
mov
or
mov
inc
pop
test
rcrl
pop
sbb
push
mov
xor
cmpsl
sbb
outsb
push
or
data16
cs
pop
push
imul
fbld
fsubs
pusha
jb
pop
xor
sbb
dec
jp
dec
pop
ss
and
orb
push
xor
bound
out
inc
add
adc
dec
sbb
adc
mov
mov
push
iret
fldcw
jle
iret
addr16
jmp
loop
adc
mov
out
or
or
lcall
inc
popf
xor
enter
fadd
clc
push
pop
xor
push
arpl
fbld
adc
jge
pop
stos
and
push
sbb
jb
cmpsl
iret
rclb
or
outsl
lret
lds
fs
jl
adc
push
popa
jo
add
and
ja
in
mov
lock
pop
test
shll
inc
in
fcomps
sbb
adcl
fdivp
push
fildl
out
pop
jl
push
cmp
mov
pop
aam
pop
mov
inc
adc
mov
mov
cmp
insb
test
nop
stc
add
ds
test
outsl
notl
movsl
push
or
insl
arpl
fcmovnbe
gs
inc
cmp
xchg
lcall
inc
jge
push
pop
add
test
lret
aaa
loop
or
and
or
ja
push
cwtl
call
negb
es
rdpmc
pusha
repnz
xchg
call
ljmp
mov
je
paddusb
push
adc
jb
add
nop
sbb
inc
cld
test
or
int
and
lock
fcoml
inc
pop
or
orb
pop
ja
mov
jns
pop
sub
push
dec
xchg
inc
sbb
mov
adc
ss
xchg
or
gs
push
lahf
mov
imul
pop
mov
rorl
sub
lods
mov
push
lcall
push
dec
mov
cs
cs
in
fdiv
fs
xor
mov
rorb
fidivrl
pop
sbb
jmp
add
push
xchg
nop
mov
iret
cli
sbb
jo
push
cmpsb
lahf
or
pushf
das
pop
in
adc
sbb
push
mov
xor
add
and
mov
push
shl
sbb
ds
dec
aas
cmp
movups
pop
cmp
pop
popa
add
loopne
dec
out
call
pop
clc
aaa
stos
push
inc
scas
xchg
ret
frndint
or
adc
jbe
std
mov
ss
js
stc
adc
cli
nop
test
lret
aaa
out
fs
pop
loopne
jo
shl
xchg
outsw
mov
jecxz
pop
inc
xchg
int
add
push
loope,pt
subl
mov
cmp
scas
in
mov
arpl
pop
pusha
pop
scas
xchg
test
or
notb
push
pop
xchg
jmp
popa
mov
cltd
and
cld
sub
and
popf
lds
out
jne
cmp
pop
fnsave
sbb
adc
and
jno
adc
popf
mov
pop
mov
and
out
and
or
and
or
into
lock
bound
cs
mov
pop
pop
fcoml
jl
bound
mov
gs
out
dec
mov
mov
cmp
subl
frstor
clc
sub
aad
loopne
inc
icebp
mov
ret
pop
jg
jbe
outsb
scas
loope
hlt
or
aam
rcll
fucomi
loop
outsl
out
mov
adc
xor
jbe
ds
mov
mov
and
adc
and
pop
lock
xor
and
mov
mov
push
je
mov
cmpsb
cs
dec
cmpsb
mov
jg
sbb
js
mov
jbe
pop
mov
push
in
add
repz
add
std
flds
add
das
ds
mov
inc
sub
fs
add
and
and
lea
pop
jo
xor
dec
adc
subb
jbe
popa
stc
xchg
mov
out
std
sbb
mov
jae
mov
ss
and
ret
repnz
pop
and
sti
out
jo
jne
mov
sbb
jne
std
jb
add
loope
enter
test
dec
es
rolb
cmc
int3
dec
xorb
cmp
pop
sbb
outsl
ja
loope
andb
data16
xor
sub
sti
inc
fdivrl
cs
add
in
mov
cmp
cld
aaa
loopne,pt
xor
cmp
and
das
dec
xchg
mov
push
aas
hlt
sub
push
fidivrs
ret
or
xchg
ja
mov
xchg
int
xchg
nop
data16
dec
inc
xchg
pushf
movsb
sbb
lods
cmp
jp
pop
dec
or
insl
jge
std
dec
dec
scas
or
and
cli
lret
clc
xchg
pop
hlt
repnz
add
mov
addr16
test
dec
mov
pop
cmp
lret
notb
test
mov
fisttpll
inc
sub
add
test
aad
xor
pop
dec
call
ja
xor
scas
pop
or
imul
or
in
stc
imul
insb
push
imul
adc
imul
mov
xchg
pop
out
fdiv
jne
jecxz
inc
cld
sub
adc
pop
adc
iret
aam
arpl
cmp
inc
mov
push
jb
arpl
inc
sub
push
into
hlt
and
es
cmp
adc
icebp
add
pop
inc
imulb
pop
inc
test
lcall
data16
test
shll
daa
add
das
aaa
dec
inc
ss
cli
loope
jg
cmc
test
push
sbb
popa
aas
jge
mov
pop
mov
push
sub
popa
inc
jne
xchg
repnz
lea
dec
pop
mov
cmpsl
cli
mov
cld
rorl
addb
push
loop
sbb
scas
and
dec
scas
sub
or
out
loop
add
or
jmp
inc
add
push
inc
inc
aaa
inc
js
cmp
inc
mov
xor
or
jae
fisubl
mov
push
loop
xchg
xchg
pushf
js
js
xor
aaa
sbb
push
ret
push
sub
or
xchg
aad
mov
clc
aam
pop
fdivs
adcl
outsl
vmaxps
dec
pop
rorl
xor
or
jmp
fs
mov
iret
mov
loop
fstl
mov
addb
push
push
mov
sub
das
rcr
mov
out
jle
or
mov
test
add
or
pusha
inc
jp
ret
ja
inc
xlat
add
and
in
lods
ljmp
and
and
out
popf
push
popf
xchg
cli
daa
push
mov
pop
loop
push
and
mov
test
sub
aad
jge
orb
jnp
adc
test
lahf
inc
xlat
sbb
out
popa
lcall
pusha
xlat
rolb
fildl
xor
add
daa
dec
das
adc
pop
mov
in
ja
sbb
dec
push
cmp
clc
hlt
in
scas
js
jns
xchg
xchg
sbb
daa
clc
gs
pop
xorb
clc
xor
mov
sub
push
add
aam
test
enter
rcll
nop
mov
sbb
add
jp
mov
push
mov
subl
fs
mov
fsubrl
into
add
es
xchg
fnstsw
in
or
mov
lret
sub
mov
sub
xor
es
inc
nop
inc
push
divl
pop
cs
mov
test
sbb
inc
popa
pop
add
xlat
jnp
and
xchg
push
popl
fucomi
mov
in
lea
inc
pop
sub
call
cmpl
mov
roll
insb
sub
addl
xchg
jl
je
mov
enter
adc
add
dec
mov
jecxz
sahf
stos
pop
sbb
pop
gs
dec
scas
adc
inc
cmp
ret
sbbl
xlat
inc
shrb
sub
jno
mov
mov
mov
js
jnp
std
das
and
movsl
mov
outsl
shrl
or
mov
adc
mov
inc
mov
pop
mov
cmpsl
mov
rolb
xchg
mov
call
mov
call
shl
pushf
lcall
adc
jp
lret
sbb
sub
or
cmp
adc
jo
mov
aas
dec
fnsave
mov
inc
lret
imul
cli
jns
cmc
ljmp
inc
mov
jae
and
xchg
mov
test
adc
xchg
popf
bound
outsl
cmp
sti
or
mov
clc
ss
addl
sbb
push
mov
js
pop
out
mov
das
icebp
push
lcall
dec
or
xor
cld
rclb
out
stc
mov
jb
mov
sti
imul
test
push
iret
pop
out
and
sahf
inc
or
arpl
inc
inc
mov
adc
and
or
lret
push
popa
adc
cwtl
inc
dec
adc
sahf
push
ja
cmp
ret
std
sti
pop
dec
sub
and
inc
add
xor
jne
push
nop
nop
loopne
sbb
loopne
ret
or
jns
pushf
mov
test
pop
inc
popa
testb
leave
jg
dec
pop
inc
xor
shr
cmp
in
cmp
adc
int
mov
stc
pop
mov
aad
dec
push
jl
dec
or
stos
jbe
push
aas
js
pop
repz
xchg
cltd
pop
ret
pop
stos
iret
aaa
cmp
dec
fidivl
lock
in
add
iret
jecxz
stos
adc
adc
xchg
add
adc
inc
or
push
mov
clc
lock
jecxz
push
mov
repz
push
cmp
cld
inc
repnz
ss
lea
jecxz
loop
xchg
pusha
xchg
inc
incl
sub
test
rclb
loope
loopne
ss
jne
dec
fs
ret
mov
mov
sbb
shr
ja
pop
ret
sahf
sar
adc
fisttpll
flds
cmpsl
mov
aam
imul
push
sbb
out
clc
movsb
xor
inc
push
in
aaa
hlt
out
incb
inc
das
clc
mov
add
imul
mov
jl
scas
addb
mov
pushf
int
rorb
pop
int
xchg
or
add
mov
cmc
and
inc
mov
mov
add
jmp
icebp
loop
cmpl
jg
adc
cs
pop
mov
hlt
adc
shl
ret
or
leave
jg
adcb
mov
xor
cmp
daa
and
iret
aad
cmpsl
mov
das
gs
popa
test
shll
sbb
inc
rorl
mov
fisubs
mov
ret
mov
sbb
dec
pop
fdivr
mov
and
inc
aas
pop
mov
and
jecxz
push
inc
das
add
fwait
loope
xor
outsl
pusha
inc
xchg
jae
jl
xchg
nop
sbb
mov
insb
pop
test
inc
push
jp
lock
push
mov
dec
sbb
or
sbb
out
ret
cmp
xor
pop
push
in
into
inc
insl
pop
or
loopne
sbb
loope
ret
pop
in
sbb
inc
ret
cltd
push
lods
leave
fisubl
ret
adc
cltd
fwait
push
jecxz
add
mov
adc
push
cmp
fcmovnb
aad
test
adc
mov
sbb
sbb
mov
sbb
arpl
leave
mov
or
daa
call
jns
mov
sti
stos
mov
arpl
insb
inc
cmp
push
dec
and
xor
std
pop
pop
aas
mov
cmp
pop
pop
sub
push
jge
pushf
sub
xor
adc
push
movsb
ret
inc
ljmp
jno
add
adcb
push
inc
popl
and
sbb
mov
aam
cmpsl
inc
cmpl
mov
push
xor
add
je
lret
pop
clc
std
loop
aam
cmpsl
jae
xchg
add
xchg
test
push
sub
into
in
add
subl
cli
mov
in
push
mov
mov
or
popf
push
sub
in
inc
sbbl
jmp
shrb
cmpsl
mov
and
push
mov
out
add
mov
stc
and
rclb
xchg
ror
inc
cmp
mov
inc
jmp
and
jbe
inc
aad
mov
aam
or
std
xchg
dec
aaa
ret
jne
stos
lcall
jmp
lods
xchg
adc
adc
fsubs
sub
or
fstpl
mov
mov
test
lds
fdivp
inc
dec
stc
es
fwait
xlat
ds
mov
xor
cmp
pop
cmp
cmp
mov
inc
or
mov
xorb
lea
sub
scas
mov
fs
cmp
sahf
lret
loop
mov
cmp
jns
jmp
push
negb
add
je
enter
xor
loop
andb
jp
add
into
inc
out
and
out
add
daa
outsb
fimull
cmovno
sbb
pop
cmp
lcall
cwtl
pop
dec
pop
jmp
lods
in
push
mov
imul
hlt
dec
sbb
mov
clc
cmp
sub
lahf
fisttpl
gs
stos
lock
ljmp
flds
and
dec
pop
add
fisubrs
sti
cli
adc
lock
ja
xchg
mov
hlt
mov
in
hlt
xchg
call
cs
mov
dec
stc
or
inc
xchg
xorb
adc
add
repnz
loop
pop
adc
adc
loope
mov
test
hlt
int
in
and
or
pusha
mov
fisttpll
ret
call
adc
mov
call
lock
xchg
push
xor
adc
loop
xchg
mov
pop
mov
aad
pop
xchg
test
sbb
xor
lret
ss
negl
xlat
repz
je
push
mov
add
push
scas
ret
mov
jmp
mov
adc
xor
sub
jl
or
leave
add
or
movsl
push
xchg
loop
cmp
inc
inc
popf
scas
dec
lret
push
cli
mov
repz
lret
xor
cmc
inc
mov
add
mov
jp
rcrb
rorl
outsl
out
add
icebp
je
xchg
cld
pop
sahf
fiaddl
sub
rclb
rcll
aas
inc
cmp
xchg
pop
pop
mov
mov
shl
rcll
cld
adc
adc
lcall
dec
pop
pop
jl
fsubr
xchg
subl
in
push
xorl
sub
or
shl
pusha
les
in
jnp
mov
dec
test
push
adc
stos
dec
push
pop
lret
cmpsb
lret
push
and
sbb
push
test
and
sub
mov
sub
pcmpeqw
add
jbe
inc
sbb
xchg
jg
cld
or
fbstp
pop
mov
imul
arpl
xor
push
xchg
cltd
pop
mov
pusha
jle
sbb
jle
icebp
jbe
xchg
mov
roll
idivl
sbb
add
mov
lock
lret
out
movsb
fsubr
mov
scas
inc
test
mov
dec
xor
daa
adc
pusha
xchg
cltd
mov
clc
lods
pop
aad
ja
cmp
xchg
mov
jns
mov
xor
xlat
ret
lock
in
or
sbb
mov
sbb
inc
scas
pop
in
out
lret
ss
push
int3
incb
sbb
popa
cmp
dec
or
fstl
add
lahf
fs
push
or
jmp
out
gs
es
xorb
fsubl
daa
push
mov
outsl
jg
rol
xchg
leave
mov
repnz
jecxz
dec
sahf
shlb
aas
sar
pop
xrelease
les
inc
testl
repnz
push
sbb
std
adc
cli
jmp
push
push
jb
jecxz
mov
mov
ret
jne
aaa
faddl
sbb
in
ret
sub
cld
push
cwtl
or
mov
cmp
dec
outsl
inc
std
push
ret
sub
call
lods
add
jl
daa
sti
rol
mov
xor
mov
decl
ja
push
pop
insl
xor
and
hlt
sbb
repz
mov
jcxz
call
lret
sbb
jno
or
pop
sarl
lcall
cld
jle
outsl
mov
in
loopne
push
cmc
push
add
mov
or
and
fdivs
inc
movsb
clc
push
lcall
and
xchg
xchg
pop
push
lcall
sub
sbb
and
xchg
or
pop
push
xor
sub
cmp
pop
pusha
pop
pushf
pop
sub
mov
lret
movsl
hlt
push
cmc
mov
aam
mov
je
inc
cmpsl
pop
aad
push
rcrl
les
sub
ror
mov
and
sti
dec
clc
ficomps
mov
ss
stos
cmp
loope
and
push
loopne
add
push
adc
mov
mov
and
pop
cmpsb
in
xlat
add
loope
and
fstl
jo
cmp
ss
shlb
adc
or
push
and
xchg
xchg
xor
test
lahf
repz
ja
or
push
jae
cwtl
or
or
mov
jle
cmp
scas
sbb
gs
and
pop
mov
pop
fildl
ljmp
cmpl
adc
mov
fidivl
sahf
cwtl
icebp
popf
imul
addr16
push
dec
cs
pushf
psllw
inc
ror
pop
cli
add
int
and
inc
std
jmp
dec
test
jae
sbb
mov
mov
ss
sti
dec
fdivrl
cmpsb
jno
scas
cmpsl
and
cltd
ljmp
inc
ror
add
popf
lahf
push
inc
xor
jb
cmp
inc
mov
mov
jl
ds
test
sub
inc
sub
mov
mov
jg
and
pop
das
mov
adc
jo
fs
mov
cwtl
out
je
lods
inc
inc
popf
mov
dec
fidivs
pusha
inc
sbb
insb
push
fiaddl
jg
sub
inc
adc
mull
inc
out
push
dec
dec
push
cwtl
xor
push
pop
jg
mov
shrb
mov
or
add
stc
shr
test
lret
pop
out
loop
nop
lahf
push
call
mov
mov
push
cmc
dec
std
mov
popa
aaa
inc
bound
pop
jp
enter
and
out
sbbb
xor
jg
shr
mov
mov
dec
pop
pop
mov
sbb
aaa
mov
xor
and
test
cmp
mov
imul
and
sub
cmp
lock
and
aaa
jge
inc
aad
add
stos
test
in
test
inc
in
pop
push
xor
js
mov
lcall
decb
pop
out
jb
jle
pop
fnsave
outsl
pusha
xlat
cmp
jo
sarb
pcmpeqd
cmp
adc
add
xor
gs
sbb
mov
inc
xor
mov
int3
xchg
cmp
mov
les
stc
daa
icebp
inc
aaa
jle
mov
cmp
testb
mov
push
in
pop
xchg
dec
inc
call
cmp
jmp
or
jecxz
pusha
ds
lcall
orl
out
add
scas
scas
push
ds
aad
imul
test
cltd
bound
inc
mov
pop
sti
hlt
ja
sbb
test
loop
mov
iret
in
daa
xchg
aad
and
xchg
int
rcl
sub
pop
jae
adc
fdivr
inc
iret
ret
loopne
push
outsl
or
scas
outsl
adc
cmp
lret
cmpl
and
push
sbb
out
add
sbb
clc
inc
cltd
cmpsb
jecxz
jp
mov
pop
inc
push
mov
mov
or
das
adc
mov
jmp
jns
xchg
cmp
insl
xchg
and
add
sub
mov
out
fsubs
movsl
adc
in
adc
mov
movsl
mulb
inc
sbb
mov
dec
or
pop
stos
aaa
adc
out
add
lret
movsl
jbe
fldlg2
mov
sub
lret
pop
fdivrp
cmp
mov
add
lea
mov
xchg
fwait
pop
pop
bound
insb
or
rorl
push
jmp
fadd
inc
outsb
jo
push
fmull
es
and
mov
lods
xchg
xchg
mov
mov
enter
insb
push
mov
lods
aad
or
and
mov
aas
add
enter
stos
imul
cmpsl
mov
ret
out
test
or
add
adc
xchg
xorl
jp
jo
jne
mov
imul
or
loope
lock
lods
data16
or
or
push
imul
loop
pusha
in
and
mov
pop
je
loope
jnp
insl
xchg
leave
loopne
mov
sar
lret
mov
mov
dec
aad
mov
fwait
js
enter
mov
mov
add
and
test
push
mov
lahf
mov
hlt
jne
adc
jae
rorb
shlb
dec
rolb
cli
mov
mov
pop
mov
stos
inc
lret
xchg
xchg
mov
mov
fistpll
fsubr
testb
fimuls
adc
xchg
orb
imul
xchg
sti
or
les
cmp
rcrb
xchg
mov
outsb
je
jg
push
int
fisttpl
js
xor
cli
call
movsb
adc
mov
adc
pop
iret
lods
int3
pop
fimull
fdivs
in
or
cwtl
xchg
loop
add
push
dec
jle
push
pop
inc
dec
xchg
daa
pop
fmuls
add
aaa
shl
cmp
mov
pusha
insl
lds
lret
jns
mov
jmp
sbb
inc
xor
mov
aas
bound
sub
jno
sbb
cmp
movsb
mov
rcrb
push
imul
sub
lock
mov
repz
fcompl
jbe
xor
testb
fistpl
lret
push
sub
popa
cmp
test
add
jle
pop
xchg
push
data16
rorl
les
int
jl
fucom
add
cwtl
xchg
mov
ljmp
adc
cltd
pop
mov
pop
out
pop
xadd
add
pop
adc
push
mov
jnp
test
mov
test
in
sbb
mov
sub
stos
js
or
into
fcomps
ljmp
in
clc
adcb
inc
mov
ljmp
mov
xor
or
repnz
xchg
into
je
mov
fisttpll
or
jno
cmp
jmp
fidivl
mov
mov
pusha
or
loop
imul
in
or
add
fadds
testl
jmp
out
pop
mov
notl
loope
lods
add
jno
jne
xchg
pusha
pop
push
std
push
imul
pop
jecxz
or
les
inc
mov
mov
dec
xor
sar
jbe
or
cmpsl
jg
dec
cmp
scas
or
js
ljmp
pop
bound
loope
je
mov
fnstsw
in
dec
and
dec
and
dec
ret
fiadds
jg
mulb
cld
nop
mov
fsubrs
pusha
enter
in
in
std
mov
sbb
cs
in
imul
sti
jge
iret
mov
adc
imul
fs
lcall
lcall
inc
dec
or
push
inc
subl
jbe
out
lret
adc
test
sub
cmp
mov
cmp
lret
jp
inc
jnp
cld
inc
rolb
inc
popa
cmp
mov
add
cmpsl
push
sti
adc
push
push
outsl
dec
push
mov
insb
std
and
fdivrl
pusha
or
cmpb
lret
dec
ljmp
test
or
sar
or
cmp
jbe
insl
dec
cmp
push
sahf
lahf
das
cld
adc
andb
sti
inc
xor
pop
jb
xor
andl
enter
shl
or
inc
fldl
js
sarb
minps
adc
out
stos
scas
aaa
pop
mov
addl
inc
rcrl
lods
xor
stos
mov
sub
jmp
fisubrs
push
data16
add
stos
dec
inc
push
and
cmp
cmp
xor
adc
pop
mov
fisttps
xchg
cmp
loop
in
inc
pop
fldt
out
clc
mov
inc
js
in
sbb
lea
xchg
mov
dec
jl
cwtl
pop
xchg
push
mov
ret
mov
xor
push
sbb
pop
in
fildl
push
or
test
dec
in
cli
mov
cmp
pop
pop
push
das
xchg
mov
mov
adc
hlt
or
mov
sub
mov
mov
sbb
aad
sbb
roll
test
ss
add
ss
lahf
lods
mov
out
clc
prefetcht2
iret
ret
add
ss
aad
sub
movsl
xlat
and
sub
jmp
insb
and
inc
xor
dec
add
aaa
aam
popf
mov
push
or
nop
pop
jecxz
jne
clc
cwtl
cmc
sub
fcoms
popa
mov
jge
push
or
xor
xchg
jmp
mov
adc
add
mov
and
sbb
repnz
push
dec
jne
cmp
outsl
or
lcall
sub
mov
lods
push
shl
sbb
andl
mov
fidivrs
leave
movsl
cmp
call
pusha
mov
add
shlb
rorl
jecxz
arpl
add
adc
add
cs
sub
insl
inc
loop
mov
sahf
jl
scas
dec
mov
and
std
xchg
add
dec
loopne
mov
adc
jbe
push
and
jno
mov
pusha
xchg
pop
xorb
push
mov
inc
jo
dec
flds
aam
push
cld
aad
lcall
mov
stos
popa
lock
daa
mov
mov
cmp
mov
push
ds
outsl
daa
mov
mov
mov
push
mov
lea
sbb
in
mov
mov
adc
adc
cmp
fdivl
test
hlt
add
inc
cmp
mov
dec
push
mov
mov
std
pop
out
xor
xor
push
adc
cmp
fstps
in
pop
incl
add
lahf
and
sar
insl
cmpl
inc
or
test
inc
jns
fisttpll
scas
pop
push
aam
push
invd
adc
mov
dec
jne
inc
hlt
sbb
loop
repnz
inc
rcrl
inc
aam
cmp
imul
repz
ja
shrl
lds
rorl
xor
push
or
xchg
mov
cs
in
adc
mov
imul
cmpb
mov
and
or
dec
je
add
pop
ja
cld
lret
push
mov
jmp
sub
mov
sbb
lcall
aaa
mov
cmp
cwtl
daa
cmpsl
cs
xor
fadd
std
cmpsb
ret
xor
mov
inc
sbb
sbb
pop
cwtl
cmp
push
fiaddl
cmpsb
pop
ret
fsubl
xlat
xchg
ret
jne
aaa
fcmovb
add
repz
jo
dec
pop
and
aad
movl
dec
call
repz
ds
pop
idivl
pop
lahf
and
lock
das
adc
inc
cld
cmp
and
loopne
sbb
fldt
pop
jge
rorb
addr16
imul
push
loopne
aas
test
inc
and
xchg
xchg
or
mov
out
sbb
test
jl
sbb
fdivr
fisttpl
js
push
sub
movl
rcrb
mov
ljmp
fldt
xchg
arpl
mov
cmc
mov
clc
mov
xchg
mov
fsts
dec
cmpsb
jbe
test
ja
xor
inc
jae
mov
rcrb
imulb
shr
and
daa
aad
mov
loop
out
inc
pop
jo
ret
pop
inc
inc
adc
repz
aaa
sub
idivl
adc
mov
rorl
outsb
xor
fdivr
lds
jle
inc
in
pop
movsl
jb
pop
lods
out
push
xlat
xchg
in
in
or
call
sbb
cmp
negl
mov
pop
sbb
ret
cmp
add
scas
or
pop
jge
adc
jmp
test
filds
pushf
or
fcomps
js
and
jp
out
std
fwait
xor
jns
sub
mov
adc
or
sbb
icebp
xchg
jg
inc
inc
cmp
fcmovb
and
cli
loop
push
add
xor
int
adc
outsb
insl
adc
cs
add
mov
shlb
add
dec
loope
in
add
inc
dec
inc
pop
jmp
xor
jb
inc
popa
sub
lret
mov
cmpb
in
inc
adc
add
dec
lds
jge
clc
mov
aam
int
push
test
inc
sub
in
sub
sahf
in
jp
add
out
xor
mov
addl
pop
inc
mov
aas
push
jmp
lods
daa
rol
cmp
cmp
outsb
xchg
stos
xor
sbb
xor
loopne
mov
aas
dec
push
mov
stos
jmp
in
jno
cmp
cmp
inc
inc
repz
mov
test
fdivrs
out
pop
mov
lea
int3
sub
mov
std
daa
push
xor
leave
mov
std
and
ljmp
repz
push
stos
aaa
jle
push
add
and
iret
incl
stos
inc
addr16
iret
xor
mov
clc
outsl
xchg
push
scas
or
push
xor
or
jb
roll
add
inc
dec
je
or
pop
mov
repz
mov
shll
mov
xor
dec
or
pop
xlat
daa
rcll
dec
shlb
hlt
out
jo
leave
inc
in
sub
or
test
mov
jo
inc
cli
jecxz
std
rcrl
in
inc
mov
sub
mov
cmp
pop
jecxz
fs
jmp
jecxz
jecxz
and
cmp
push
inc
push
or
in
mov
outsl
jne
testb
jnp
push
sub
dec
lock
test
movsb
mov
out
xchg
push
test
jmp
imul
bound
adc
insb
les
ficompl
xchg
and
sbbl
imul
movsl
mov
ljmp
mov
sbb
js
mov
subb
pop
jne
add
cmpb
jmp
pop
cmpsb
mov
aad
xor
rcrl
mov
bound
fisttpl
pusha
mov
adc
pop
mov
mov
pop
sti
pop
loope
xor
call
insb
insb
fisubl
ja
clc
je
push
decl
xchg
xchg
jnp
inc
lcall
inc
pop
add
mov
sarl
sub
jo
bound
push
outsb
jg
add
icebp
sbb
lods
mov
cmp
out
mov
ljmp
push
in
rcrl
inc
mov
cld
pop
pop
shrl
xor
les
stos
mov
ljmp
pusha
lods
xor
jns
ds
stos
sbb
lock
xchg
andb
inc
mov
jbe
mov
sahf
mov
or
addr16
scas
nop
cs
xor
test
scas
fimull
mov
andb
push
or
push
and
lahf
aam
incl
push
sbb
sbb
test
jb
test
cs
mov
xchg
adcb
xchg
xor
scas
cmp
adc
and
pop
mov
out
ljmp
adc
rcrl
lea
adc
leave
repnz
xor
adc
or
xor
mov
jb
jae
lcall
inc
cmpsl
pop
cwtl
mov
shll
stos
sahf
mov
cwtl
jmp
adc
add
movsb
mov
pop
dec
xchg
xor
xchg
xchg
sbb
and
pop
dec
dec
cmpsb
or
out
mov
je
repnz
dec
xchg
add
mov
aaa
insl
or
or
xchg
mov
aad
decl
push
mov
cmp
pop
sti
jmp
xchg
jg
sub
cmp
dec
bswap
cmp
sub
adc
insb
mov
dec
mov
movsl
add
in
je
mov
cmp
dec
mov
test
sub
clc
arpl
stos
test
and
xlat
stos
or
movhps
push
sbb
mov
inc
and
inc
call
xchg
fldl
enter
js
mov
xchg
pop
inc
sti
add
and
ret
sub
mov
or
es
mov
mov
roll
dec
aad
ret
adc
mov
mov
and
mov
sti
ret
xor
sub
mov
sub
lcall
xor
pop
push
lret
cld
add
add
sbb
adc
sbb
lret
push
mov
ljmp
jmp
push
add
add
es
loope
sahf
mov
jmp
loop
addl
push
push
pop
mov
xor
jge
lea
mov
pop
clc
adc
add
push
dec
fldcw
sarb
test
repz
add
mov
dec
roll
cmp
mov
push
or
aam
cltd
aad
inc
inc
ja
clc
iret
mov
shl
repnz
jmp
scas
jbe
push
std
iret
sbb
into
sbb
fwait
mov
or
sti
xor
lods
mov
cmp
xorl
mov
or
js
mov
xor
push
push
cmpsl
sbb
mov
or
aas
xchg
cmpsb
das
sahf
dec
add
int
stc
and
push
rorl
xchg
aas
sub
adc
lret
mov
mov
subl
lahf
cmpsl
push
nop
ss
pop
mov
jmp
add
shl
movsl
or
pusha
mov
adcb
xchg
xchg
shll
jno
pop
pop
mov
mov
jo
gs
adcb
outsb
pop
or
dec
cs
loope
stos
and
and
jo
clc
or
popa
in
rcrb
insl
add
cmp
and
add
fwait
xor
mov
popf
jb
das
ja
dec
mov
pop
rclb
jns
mov
scas
pop
push
or
idivl
xor
jns
jle
lods
push
cmp
xor
gs
ljmp
jp
outsb
bound
out
lret
mov
pop
push
int3
ret
test
inc
pop
mov
mov
nop
add
adc
repz
out
dec
inc
andb
andb
negb
and
cwtl
mov
pusha
lock
ja
push
mov
cli
mov
mov
jnp
pop
call
mov
mov
mov
bound
mov
test
inc
adc
mov
and
mov
cli
loope
jmp
test
bound
shlb
mov
push
xchg
mov
sub
mov
or
mov
mov
pop
xor
aas
xchg
imul
daa
les
fs
mov
inc
ds
push
xor
and
repnz
mov
imul
bound
push
cmpsl
xchg
mov
push
mov
mov
add
mov
cltd
inc
dec
xchg
mov
cs
lahf
sbb
push
test
cmp
adc
sbb
js
or
fstpl
cs
ret
fwait
cmp
incl
arpl
aaa
das
jmp
rcr
jle
movsl
frstor
push
pop
in
jmp
add
jne
mov
dec
xchg
sarl
lcall
mov
test
pop
inc
jecxz
imul
cs
loope
popf
sbb
push
pop
push
push
sbb
insb
insb
scas
sbb
add
roll
fbld
mov
outsb
sbb
cli
push
xchg
dec
jne
sbb
xchg
jno
mov
cmp
and
sub
adc
xchg
jnp
mov
mov
or
out
inc
jo
mov
repz
ds
sbb
add
pop
and
insl
lea
nop
inc
loope
aad
pop
jle
in
pop
adc
cld
fwait
push
add
sahf
pop
ljmp
rorb
imul
popf
xchg
lcall
push
push
sub
cwtl
sti
decl
je
mov
inc
icebp
adc
sahf
and
or
pop
push
jl
mov
ss
lock
loopne
mov
dec
mov
stc
pop
repz
aas
roll
repnz
scas
dec
mov
loope
mov
jl
mov
jae
adc
pop
in
mov
add
pop
popf
cs
sbb
insb
test
aaa
dec
cmp
mov
xchg
cmp
mov
add
sub
push
pop
mov
in
adc
lahf
aaa
sub
fldenv
cmp
inc
sbb
pop
lock
push
pop
enter
pop
xor
sbb
push
test
add
jecxz
loope
fcoms
es
mov
push
dec
adc
aaa
pop
clc
das
xor
push
sub
adc
mov
adc
outsb
mov
xor
stos
mov
shlb
pop
xor
sub
and
and
aam
pop
int3
mov
in
loop
jno
mov
sti
push
rcr
xor
mov
orb
xchg
and
in
pushf
or
jge
mov
push
jbe
mov
inc
mov
pop
js
cmp
ret
adc
adc
pop
push
inc
mov
mov
out
inc
in
daa
mov
push
ficompl
arpl
aas
out
mov
mov
and
xchg
fdiv
fists
xor
fcmove
addr16
test
push
jo
xchg
sahf
mov
loope
cmp
inc
mov
inc
clc
or
cmp
je
inc
rol
pop
adc
mov
adc
dec
lret
mov
scas
mov
xchg
xchg
negb
test
sbbb
pop
aam
inc
pop
icebp
or
and
clc
sub
fwait
pusha
addb
call
push
jl
nop
fstpt
push
ss
add
push
pop
popl
nop
cld
sub
shlb
out
int3
lods
lret
adc
push
icebp
sahf
jo
mov
xor
pop
call
movsb
ret
ds
sbb
fisubs
mov
stos
dec
into
je
mov
sbb
xor
testb
loope
icebp
shl
push
ja
icebp
nop
sbb
cld
rorl
dec
xchg
not
xor
sub
mov
test
pop
push
call
aas
shll
mov
mov
xchg
mov
jl
pop
jbe
dec
sbb
insl
inc
test
sti
sahf
mov
pop
mov
add
stos
loop
mov
fcomi
inc
or
adc
mov
mov
popf
push
outsb
cltd
xor
sbb
mov
sti
inc
jnp
fcompl
lock
js
out
in
rolb
pop
dec
mov
call
or
iret
inc
or
lock
cwtl
cmc
and
inc
xchg
dec
push
mov
xchg
andl
pop
clc
jae
sbb
sub
jp
lea
jae
add
test
icebp
push
pop
loope
jp
in
sub
sub
loope
mov
mov
les
scas
add
sub
dec
xchg
push
addr16
ja
inc
or
subb
pop
rcll
movsb
fmuls
sti
out
dec
in
adc
or
xchg
pop
movsl
jne
inc
xor
push
lods
push
inc
test
ss
adc
cltd
stc
dec
jae
push
out
shlb
mov
mov
int
add
jo
int3
adc
mov
ret
pusha
aam
cmp
sbb
ja
neg
test
gs
push
cmpsb
in
insl
adc
aaa
hlt
sbb
mov
jno
rclb
lods
shl
icebp
jns
das
pop
jle
mov
shll
inc
xchg
mov
inc
aam
movsb
imul
xor
call
push
jg
jnp
adc
fcompl
dec
rol
daa
mov
inc
and
jg
out
jecxz
rclb
aas
mov
add
mov
outsb
rclb
adc
sub
icebp
add
xchg
xor
xor
jnp
fstl
adc
cmp
xchg
pop
mov
movsb
lods
icebp
sbb
bound
jmp
out
out
test
iret
push
fcoml
repz
in
mov
lock
clc
adc
callw
pop
in
fsubrs
in
ret
clc
push
mov
mov
cmp
cmp
mov
dec
adc
push
push
int3
rcl
or
ja
enter
dec
add
ja
lds
ret
or
jno
inc
outsl
lock
push
imul
pop
sub
adc
movd
xor
hlt
in
cli
jmp
sbb
cli
ja
ret
mov
or
add
fld
push
pusha
mov
push
mov
pop
hlt
mov
and
int3
aas
jl
insb
fsts
mov
orb
adc
push
cld
popl
inc
aad
fcoms
push
lea
xchg
ss
icebp
lahf
cmp
inc
sub
outsb
push
test
outsl
loop
fistl
inc
push
or
sub
sub
sbb
imul
sti
mov
adc
xchg
lcall
pop
mov
mov
and
and
adc
xor
mov
ret
jo
nop
jo
or
nop
cmp
cmpsl
aas
jecxz
mov
mov
clc
dec
push
jo
pusha
into
pop
mov
xor
adc
add
mov
push
jb
outsl
ret
cli
aaa
mov
and
sub
hlt
movsl
mov
adc
ficompl
cmovbe
jl
inc
pusha
bound
mov
jmp
scas
or
in
xorl
das
jno
push
and
xchg
cmp
gs
fisubrl
inc
pop
inc
adc
cmpsb
daa
inc
pop
cltd
mov
push
mov
and
loope
jne
ret
and
push
out
outsb
cli
mov
push
or
dec
xor
in
es
mov
sti
add
std
into
xchg
ljmp
shl
sbb
testb
andl
fimuls
and
fisttps
sti
sub
adc
xor
xchg
imul
outsl
and
jne
stos
add
movsb
imulb
ds
pop
mov
or
outsl
inc
loope
aaa
mov
mov
mov
dec
push
es
pop
leave
leave
dec
lods
pop
les
outsb
shl
or
push
addr16
inc
push
mov
repnz
cli
mov
push
clc
mov
mov
into
sti
scas
adcb
sbb
fsubr
les
jp
and
jg
add
out
push
scas
addr16
je
popa
mov
lods
fcomip
and
bound
and
sbb
das
loopne
pop
jno
jge
mov
scas
inc
fs
repnz
bound
push
rorl
inc
cmp
and
or
dec
adc
stc
cmp
out
daa
xchg
push
ss
pop
clc
sbb
jbe
not
xorl
cmp
out
aaa
mov
jp
sbb
xchg
cmp
dec
enter
jmp
jecxz
mov
cs
push
mov
mov
cmp
push
inc
pop
push
mov
inc
mov
loope
loopne
adc
icebp
mov
fiaddl
sbb
fdivp
xchg
arpl
or
xchg
scas
mov
xor
add
adc
sub
push
xchg
adc
mov
shrb
out
jmp
sbb
imul
out
mov
pop
adc
lock
lret
sbb
ja
push
jg
mov
and
fidivrs
mov
and
pop
add
xchg
pop
pop
iret
mov
push
arpl
mov
jl
fldl
aas
adcb
or
aas
adc
mov
daa
scas
lret
gs
ret
cwtl
add
int
push
mov
mov
jle
shl
mov
or
push
fcoml
stc
or
sbb
nop
xor
xchg
jns
arpl
and
mov
mov
cmp
push
ret
sbb
shlb
xchg
push
aam
add
inc
jecxz
push
xchg
movsb
into
adc
inc
les
mov
cmp
ja
rorb
adc
lea
xchg
cs
call
je
cs
imul
clc
mov
popa
in
cmp
push
rcrl
dec
jl
dec
inc
scas
push
mov
dec
pop
push
ss
jae
push
std
cmp
dec
xor
mov
clc
jb
scas
mov
cmp
rorl
cmp
push
enter
mov
xor
les
adc
fwait
rcrl
push
lds
es
pop
jmp
mov
pop
add
add
xor
bound
inc
rcrl
fistps
cwtl
movsb
push
inc
mov
mov
push
pop
cmpsl
jnp
fisttps
ds
loop
scas
xor
stc
fistpl
fsubrl
mov
ljmp
pop
cld
call
call
and
jo
or
sti
testl
mov
xor
mov
sub
lock
sub
pop
fdiv
xchg
das
sbb
pop
cwtl
or
ljmp
inc
lret
test
lock
xchg
sbb
lret
sbb
shrb
clc
iret
clc
sti
and
sub
xchg
jns
es
or
dec
arpl
mov
es
pop
lds
test
bsr
notb
enter
and
mov
scas
inc
data16
rolb
jns
std
lods
shl
xchg
push
dec
in
fxch
jmp
int3
out
mov
push
out
in
sbb
push
sub
xchg
cwtl
jae
xor
gs
adcb
sbb
ljmp
xchg
push
aaa
or
adcb
test
insl
cmp
cmpl
pusha
out
flds
mov
push
pop
jmp
and
or
lcall
xchg
cmpb
roll
mov
push
inc
push
daa
push
sbb
and
push
in
xor
cmp
pusha
xor
pop
or
jbe
popf
jp
test
loopne
mov
icebp
popf
jne
inc
aad
xchg
scas
or
fstpl
ss
fidivs
arpl
dec
mov
xor
shrl
mov
pop
decb
or
and
cwtl
and
and
div
das
aaa
rclb
push
jmp
filds
jle
aam
mov
ja
pop
outsl
aaa
dec
clc
sub
aam
push
int
or
aam
movsl
mov
incl
adcb
mov
dec
enter
rolb
adc
mov
fcoml
insb
fsts
cs
mov
pop
leave
inc
xor
test
inc
push
lock
inc
bound
imul
add
ret
lret
cwtl
adc
cmp
ss
fwait
shrb
faddl
insl
jmp
js
push
mov
lret
lahf
mov
cmp
jno
xchg
divb
jp
daa
push
or
ret
cmp
repnz
lcall
into
mov
sbb
xlat
popa
test
hlt
insb
outsl
mov
ret
fimull
sub
jp
mov
in
rcrb
rcll
push
pop
lcall
xor
hlt
int
imul
hlt
fwait
mov
and
sbb
imul
jno
dec
sbb
and
fs
xor
iret
popa
add
pop
or
lret
sbb
fsubrl
loopne
sbb
mov
loop
dec
lods
jo
test
inc
aad
nop
xorl
insl
xor
mov
fisttpll
pop
jl
xchg
nop
jl
test
add
cmpsl
in
sbb
lds
xchg
dec
sahf
movsl
mov
add
std
mov
mov
leave
adc
and
jle
test
loopne
arpl
mov
xor
inc
cmpb
je
push
pop
sub
push
ljmp
jbe
cmpsl
add
or
repz
fiaddl
push
sbb
and
jo
jo
pop
inc
hlt
ret
add
shrl
ljmp
test
mov
lahf
je
ret
insb
loopne
cmpsb
and
in
aaa
jp
push
or
aad
mov
push
jl
repnz
add
or
dec
bound
or
xlat
imul
int3
or
subb
and
pop
notl
stos
xlat
push
fdivr
repz
pushf
lock
ds
test
stc
scas
cs
fisttpll
mov
adc
in
fidivs
lods
sub
loopne
mov
lods
jo
xor
xchg
test
push
or
push
push
enter
punpckhbw
outsl
or
lock
adc
enter
jb
xchg
daa
or
inc
insl
push
or
daa
mov
test
cld
mov
loope
mov
fildl
testl
in
frstor
push
add
or
sub
pop
popa
imul
ret
into
add
adc
add
mov
in
loope
in
inc
lods
inc
outsl
pavgb
jmp
pop
mov
sub
jge
pop
stos
fistpll
stos
or
testl
xlat
rcll
dec
fcomi
and
jbe
shll
insb
mov
adc
aad
bound
xor
pop
fists
mov
cmp
test
imul
sbb
flds
insb
xlat
dec
jb
cld
mov
xor
add
push
out
loope
add
outsl
fidivrs
stos
addr16
mov
lods
out
or
jecxz
nop
add
cmpsl
sbb
rcrl
pop
int
scas
or
test
cli
xchg
push
daa
dec
lcall
test
mov
ja
pop
add
out
cmp
out
jp
jo
or
out
inc
rorl
outsl
fsubrs
mov
arpl
test
clc
in
iret
jb
inc
aad
mov
faddl
adc
outsl
xor
add
mov
decb
jp
or
or
push
dec
push
lods
lds
adc
jae
ret
jge
mov
push
icebp
adc
cmp
psrad
lcall
lea
out
out
popf
xor
ja
cwtl
sbb
rorb
add
and
cli
jo
andb
dec
jae
iret
sbb
fwait
add
test
lea
jae
stos
jmp
pop
xchg
aad
outsl
aas
out
cmp
movsb
inc
jg
lret
testl
sarb
dec
jne
push
jne
arpl
xor
jno
stc
cmp
cli
gs
or
add
filds
orb
add
mov
lods
push
dec
subl
leave
lods
jne
insb
push
int
cmp
adc
add
or
cmp
insb
and
fisubl
icebp
sbb
or
cs
jge
fistl
hlt
lock
pop
jne
push
cmc
rol
sbbl
ret
lods
and
js
ret
sub
sbb
sti
inc
loop
jns
mov
mov
cmpsb
popa
cmp
cmp
enter
shlb
pop
dec
cld
gs
lret
call
xchg
lcall
mov
inc
cli
mov
aam
insb
mov
mov
mov
clc
sub
cld
pop
cmp
pop
scas
pusha
push
dec
insl
test
push
pop
aam
test
stos
movzwl
fiadds
fwait
mov
jo
call
fdiv
in
mov
pop
imul
movsl
jno
dec
adc
pop
sbb
in
dec
aam
daa
dec
movups
pushf
xor
orl
jg
insl
clc
xor
jmp
out
jecxz
cmpsl
iret
fcmovnu
les
sbb
nop
jp
push
jle
push
push
and
dec
loop
in
add
jmp
add
lods
std
push
in
jne
int
iret
das
hlt
outsb
les
shlb
enter
mov
inc
decb
mov
xchg
xlat
ret
scas
loopne
call
or
out
std
stc
cmp
xor
dec
out
sti
fldenv
pop
cwtl
push
push
xor
test
sbbb
mov
js
cmpsl
test
bound
lret
xchg
and
mov
insb
push
cmp
data16
mov
pop
fstp
pushl
je
ljmp
dec
icebp
lds
pop
mov
lods
icebp
jl
sbb
je
popa
arpl
cli
loop
push
push
push
fwait
pop
pop
mov
pop
or
fstpl
jno
cld
sbb
insb
pop
icebp
out
mov
cs
lods
mov
xadd
jne
pop
mov
test
inc
jle
fnstsw
repnz
cs
ljmp
xorb
inc
repz
popf
rorb
mov
pop
push
mov
jle
push
xchg
mov
xor
adc
mov
sbb
test
fildl
add
imul
xchg
rcll
fdivrs
push
scas
jmp
push
push
or
xorb
xorb
jbe
lret
mov
test
lods
es
jbe
xlat
adc
popa
push
xorl
add
daa
push
and
xor
adc
mov
sbb
pop
xchg
pop
lds
test
cli
call
sub
xor
les
add
jg
cmpsl
into
psubsw
adc
and
cwtl
sti
sbb
mov
cmpb
push
mov
pop
inc
xlat
dec
jl
mov
push
lds
push
jae
or
mov
ds
daa
pop
mov
mov
inc
pop
sbb
fisubs
pop
movl
fidivl
xchg
jns
lahf
dec
sub
lcall
xchg
das
rcr
dec
ljmp
and
xor
into
test
faddp
js
push
sbb
outsl
inc
ljmp
dec
ror
cmp
inc
jmp
clc
mov
mov
dec
incl
lock
call
ror
adc
rorb
lahf
je
xchg
sbb
in
push
mov
inc
sub
cmpsl
cmp
push
arpl
repnz
imul
inc
cs
push
inc
or
or
sbb
popl
mov
lock
cs
pop
fcompl
mov
jecxz
cmc
mov
dec
lods
sti
push
fs
xlat
outsb
addr16
jno
fildll
mov
test
sbb
pop
mov
pop
int
addl
pop
pop
pushf
sahf
std
outsl
add
mov
jb
jl
enter
lea
mov
dec
loop
mov
clc
mov
das
sbb
mov
pop
xchg
pusha
in
out
add
pusha
test
pop
push
jmp
cmp
sbb
mov
scas
icebp
jle
xchg
mov
mov
xchg
mov
loop
jge
std
pop
mov
into
es
push
xor
cmp
aaa
pop
xchg
sahf
rorb
std
les
jns
jl
sub
in
cli
add
lods
xor
push
test
cmpsb
inc
xchg
push
sarl
insb
inc
aaa
sbb
add
icebp
inc
int
pop
pop
lret
inc
pop
scas
shrl
mov
shlb
push
xchg
ret
xor
in
push
inc
or
hlt
movb
ret
inc
xlat
push
bound
lock
fdivs
cmp
jmp
mov
in
cwtl
repz
sbb
pop
out
jl
mov
cld
arpl
clc
rorl
dec
mov
loope
dec
hlt
xor
pop
iret
loopne
imulb
inc
ffreep
es
das
cld
stc
fstpl
jp
enter
mov
pop
dec
xchg
clc
stos
ficomps
mov
shll
orb
test
jg
sbb
dec
je
fidivs
xchg
mov
das
fs
adc
cs
out
jg
fsubrp
fwait
pop
js
cwtl
fs
sub
add
mov
clc
add
pop
and
jne
testl
ds
mov
mov
in
loopne
sbb
mov
sub
sbb
mov
mov
fcomp
stos
rcr
movsl
test
ret
ja
dec
bound
and
out
ljmp
cmp
decl
nop
int3
data16
and
dec
dec
enter
ss
sbb
dec
adc
mov
sti
shll
ret
and
ja
lds
xor
insl
dec
pop
push
lret
adc
js
sar
sbbb
jp
jne
adc
add
inc
inc
jg
movsb
jge
dec
inc
dec
insb
push
bound
stos
xchg
or
or
aad
add
out
add
in
sti
mov
fwait
mov
pop
stos
xrelease
push
pop
mov
add
xchg
dec
pop
in
jae
ret
mov
fsts
div
ljmp
mov
cmpsl
jl
idiv
pop
leave
in
xchg
push
popl
mov
jl
push
or
aad
aad
aas
clc
pop
mov
xchg
das
mov
lret
dec
push
je
lds
outsb
push
andb
or
adc
clc
lret
cmp
js
subb
push
std
test
cmp
cmpsl
lods
lds
adc
fmul
sbb
and
rcl
inc
push
or
push
xor
inc
pop
fstl
push
mov
cli
ret
jmp
xor
vphsubbw
scas
testb
hlt
and
mov
cmp
inc
pushf
pop
fnstsw
roll
sub
inc
in
lret
adc
loopne
jle
lret
mov
arpl
outsb
pop
xchg
pop
sub
and
jns
cltd
jp
inc
xchg
or
add
or
sbb
pop
push
xchg
mov
sub
mov
addb
jnp
sub
fiadds
jle
loope
into
shl
outsl
pop
roll
aam
fistps
inc
jb
mov
jne
or
jbe
daa
mov
inc
inc
pop
out
stos
outsl
inc
add
add
in
ds
sbb
pop
adc
dec
stos
sub
call
mov
mov
jmp
stos
mov
push
sarb
out
mov
xor
int
xchg
xor
imull
outsl
or
lea
mull
adc
test
mov
lods
cli
fwait
jbe
jbe
jb
test
adc
xor
arpl
das
lret
xchg
inc
or
mov
int
xchg
push
outsb
test
sbb
into
loop
jge
cli
inc
ja
test
jns
push
adc
mov
cmpsb
imul
mov
in
dec
enter
pushf
addb
popa
popa
add
clc
daa
jmp
add
shrb
bswap
inc
fs
mov
lahf
cmp
pop
cmc
loopne
repnz
data16
out
fadds
mov
inc
lock
flds
out
dec
lock
and
mov
shlb
pop
and
xchg
ss
push
rcrl
mov
daa
add
loopne
xlat
xchg
pushf
lock
xorl
xor
ret
rcr
fwait
pop
inc
out
add
les
aas
test
fsubrl
cwtl
and
fsubrl
insl
stos
cltd
cmpsb
pop
mov
lock
or
jbe
outsb
pop
add
sbb
adc
sti
and
pushf
cmp
ficompl
mov
adc
jmp
lea
pushf
js
fstps
loope
dec
or
xchg
cmp
js
mov
or
fistps
pop
pop
paddusb
push
sbb
add
dec
les
fimuls
call
ret
imulb
pusha
sbb
arpl
push
push
lea
sbb
push
cmp
or
fldl
xchg
sub
mov
inc
mov
loope
insl
lods
es
or
jae
mov
sbb
push
inc
icebp
dec
icebp
jb
push
loop
aaa
mov
xchg
push
lahf
jp
gs
jl
in
jnp
xchg
aam
cmp
cs
add
icebp
xchg
mov
dec
inc
mov
sti
lds
mov
dec
cmpsl
or
loopne
aas
mov
sub
lcall
sbb
mov
pop
mov
jbe
ljmp
sub
pop
mov
fistpll
pushf
shl
outsb
fldcw
mov
inc
jmp
add
or
push
inc
lcall
pop
jge
test
fidivrl
mov
nop
scas
shrb
ljmp
or
jmp
lcall
int3
push
test
outsb
inc
jg
out
fldcw
mov
adc
je
and
add
pop
or
mov
imul
out
inc
lock
and
pop
sub
js
inc
scas
xchg
cltd
or
push
mov
xchg
ja
inc
gs
pusha
xlat
inc
jnp
out
pop
xchg
lock
inc
jne
iret
or
jp
ja
cmpsl
jecxz
fimuls
adc
lds
jg
orl
mov
lea
fidivrl
adc
pop
dec
les
je
lods
shlb
notl
xchg
adc
pop
test
mov
loop
mov
lods
call
jo
xchg
shll
cli
mov
xor
lods
pop
std
xor
xchg
sub
jne
pop
rorb
ja
loopne
call
jp
and
fcmovnb
xchg
loop
mov
enter
pushf
xchg
out
xor
dec
hlt
push
xchg
scas
testb
lds
xchg
cmpsl
dec
lock
out
in
sahf
pop
or
test
jp
adc
ffree
jne
push
pop
shll
loope
xorb
cmp
negl
push
outsl
push
ret
mulb
addr16
stos
loope
mov
inc
insl
and
pop
mov
pop
cld
sub
pop
xor
mov
cmp
mov
inc
sbb
lahf
dec
mov
inc
loopne
inc
pop
cmpsb
mov
in
sti
xchg
jbe
fldl
in
push
je
das
inc
es
js
push
fsub
into
inc
add
cld
mov
ret
sbb
mov
in
sub
cmpsl
into
insb
jle
shl
ret
add
addr16
rorb
scas
dec
or
and
aad
pop
roll
mov
enter
sub
sub
mov
lds
mov
divb
stc
adc
lods
adc
lock
cwtl
jge
and
scas
push
pop
out
rcr
gs
enter
adc
push
or
xlat
je
lcall
clc
pop
mov
stos
loop
dec
fnsave
sbb
or
mov
jae
loop
xchg
filds
jo
mov
dec
mov
orl
lods
cltd
pop
adc
push
rol
rolw
or
inc
shrb
mov
and
pushf
ffree
dec
mov
mov
xor
sub
pop
addl
xor
sbb
in
inc
xor
cmpsb
ja
scas
fnstenv
flds
jns
sub
mov
pop
les
das
sub
jmp
dec
popl
sub
call
inc
aas
nop
lock
sbb
xchg
or
mov
jbe
xlat
dec
and
ficomps
dec
fs
imul
cmp
jnp
jns
adc
in
fistpll
dec
mov
mov
ds
cmpsl
mov
repnz
mov
test
dec
in
cs
cmp
in
xor
lds
scas
scas
mov
or
cli
adc
pop
pop
sbb
xlat
or
insl
lock
jg
cs
jnp
test
adc
xor
inc
dec
pop
cmpsl
das
cli
mov
add
xor
cld
int
cwtl
cmp
inc
out
adc
sub
xorl
inc
out
loope
mov
nop
cmpsb
dec
repz
cmp
xor
sbb
jle
mov
lahf
stc
adc
ss
add
je
fsts
ds
rcll
jl
mov
mov
fs
js
mov
sbb
andb
in
ret
adc
jmp
ret
test
sub
sbb
dec
movsl
popf
mov
pop
push
popa
inc
je
lea
stc
sub
xchg
mov
pop
test
pop
movsl
dec
xchg
test
cwtl
dec
and
xchg
mov
or
dec
mov
rorl
or
push
rcl
cmpsl
xchg
sub
pop
jl
cmp
jmp
lahf
adcb
std
push
shrb
stc
or
pop
add
pop
icebp
dec
mov
xchg
add
and
add
jbe
loopne
rcrb
pop
push
loope
popa
not
mov
sbb
ja
push
shr
cmpsb
in
sbb
rcll
add
sbb
repz
outsb
fcmovnu
frstor
clc
xchg
ret
rcrb
pop
sub
int3
jl
pop
jl
ds
dec
pushf
sbb
add
scas
in
mov
push
mov
add
sub
xchg
cmp
sbb
inc
mov
dec
daa
mov
int3
pop
aas
in
xlat
insl
adc
and
filds
js
adc
lds
jae
pop
mov
xor
mov
push
js
sbb
jmp
push
jp
mov
cmp
aas
mov
xor
shrb
aad
daa
lds
insb
add
cmp
push
jb
push
and
mov
mov
clc
cli
inc
repz
mov
push
add
mov
popf
inc
sbb
mov
movsb
in
and
xchg
leave
mov
and
outsl
mov
inc
mov
clc
xchg
cmpsl
les
jne
fisttpll
jbe
jns
jnp
in
mov
inc
jp
insl
mov
aam
icebp
gs
es
mov
pop
lcall
push
fcomp
data16
jno
dec
jle
stos
adc
arpl
mov
dec
adc
and
or
ret
sbb
rol
xorl
push
xchg
and
insb
aaa
roll
mov
das
dec
into
movsb
ret
fdiv
push
xchg
mov
lret
sbb
mov
mov
dec
sahf
in
stos
xchg
cmp
add
scas
stc
ret
xor
mov
cmpsb
int3
lock
rcrl
inc
iret
imul
pop
lea
push
int3
or
adc
lds
inc
pop
hlt
mov
in
pop
pop
test
lock
rcl
sbb
inc
test
clc
fdiv
pop
stc
out
xorb
push
sbb
inc
enter
mov
lea
mov
int3
xchg
add
xor
pop
jmp
xchg
bound
fisttpl
cvttps2pi
mov
shl
jl
js
xchg
mov
xlat
mov
push
cmc
xor
std
push
loop
xor
jbe
mov
mov
les
sub
ja
shr
shll
ljmp
push
dec
fxrstor
mov
lock
ficoml
push
out
and
cmp
dec
rorb
mov
stc
dec
pop
xchg
in
mov
and
mov
adc
jae
jge
int3
test
icebp
xchg
stc
sub
mov
xchg
xor
pop
mov
repz
push
test
loopne
add
cld
subl
jno
xchg
push
scas
lahf
inc
adc
lret
inc
in
lods
frstor
jecxz
adc
nop
xchg
ficoml
dec
cmpsl
out
push
or
mov
insb
push
ds
out
add
xor
lds
lods
in
pop
sti
insl
inc
mov
push
aam
cmp
mov
mov
lds
dec
loope
xor
mov
or
cli
cld
add
mov
dec
adc
xchg
inc
and
jp
xor
jne
ret
cmpsl
loope
or
mov
orb
mov
push
mov
cld
push
cmpsb
in
adc
push
ret
xchg
pop
push
fcmovbe
xchg
hlt
repnz
sti
lods
ret
data16
call
fmul
xlat
inc
in
jns
inc
scas
mov
insb
cli
inc
xor
in
stc
xchg
int
mov
dec
lcall
stc
sub
rcll
into
jl
dec
lods
out
fisttps
jno
xorl
punpckhdq
add
mov
cs
push
jg
std
jmp
push
loop
hlt
sbb
add
testl
or
rclb
inc
lahf
icebp
clc
push
leave
aaa
pushf
or
xchg
xor
cld
rol
cli
pushf
dec
xor
int
in
fs
scas
xchg
sbb
sahf
adc
into
lock
pop
imul
ja
jp
aaa
mov
shl
outsl
jae
xor
ret
out
xlat
mov
repnz
repz
xchg
aam
test
pop
mov
aad
mov
rcll
aam
ja
lock
adc
sbb
stc
push
xchg
les
ljmp
sti
dec
or
and
mov
subl
sbb
sbb
pop
mov
jns
enter
inc
cld
int
fcomip
jge
shrl
adc
xor
and
pop
sti
out
or
lea
dec
inc
mov
xchg
shll
push
mov
and
jno
dec
push
xchg
mov
in
test
xchg
cmc
mov
push
cmp
mov
or
dec
dec
pop
mov
mov
mov
in
dec
pop
je
jg
or
mov
sbb
mov
hlt
lret
fdivl
gs
push
in
add
in
clc
inc
add
cli
sar
xor
popa
arpl
imul
stos
sar
cmpsl
aaa
mov
movsl
jo
pop
fwait
mov
jp
push
xor
inc
jno
jo
add
call
inc
sub
andb
sub
push
inc
mov
add
mov
pop
pop
mov
in
or
xor
call
xor
std
js
add
loope
das
lahf
in
jl
lods
jbe
hlt
ficoml
loop
inc
add
or
or
les
mov
rcrl
rcr
push
jecxz
inc
mov
jg
xlat
ss
or
aas
cmp
mov
sbb
repnz
jae
jnp
hlt
push
stos
adc
adc
and
stos
andb
lahf
stos
mov
mov
push
fidivrl
repnz
das
sbb
sbb
gs
lds
sub
aam
call
pop
cmp
push
loope
cmp
bound
insb
fisubrl
or
and
mov
pop
add
push
icebp
lods
jbe
push
mov
ja
inc
imulb
mov
jp
jg
mov
sub
mov
pop
adc
out
inc
adc
movsl
adc
cmp
fstpt
xchg
gs
imul
push
mov
or
xor
inc
pushl
mov
scas
add
test
or
test
xlat
lods
push
lock
jg
inc
sub
mov
pusha
aaa
decb
push
je,pn
iret
cld
xor
fdivs
push
test
or
mov
cs
cs
mov
std
pop
hlt
dec
leave
push
and
mov
icebp
xchg
les
lret
cmp
fadd
es
icebp
jo
cs
pop
aad
ss
sub
or
sbb
inc
push
inc
repz
dec
mov
test
stos
fstps
insb
adc
and
mov
pusha
movsb
mov
lods
or
mov
jp
fnstsw
subl
jg
adc
xchg
adc
lret
shlb
outsl
cld
add
cmp
push
pop
pop
stc
clc
arpl
dec
nop
jle
loop
fldl
push
addr16
loope
fidivrl
mov
into
ret
rcr
rolb
std
and
mov
dec
push
inc
and
mov
rcll
mov
fcom
mov
mov
adc
fs
ds
cltd
xchg
mov
jle
imul
stc
and
mov
mov
bound
xchg
pop
sar
or
lods
dec
and
adc
mov
mov
loope
sub
pop
das
jp
inc
stc
cmp
ja
mov
cmpsl
mov
es
cmc
push
cmp
fldln2
jbe
and
insl
mov
stc
mov
jmp
inc
jp
adc
test
mov
and
inc
addb
sub
lahf
popf
test
sarb
mov
mov
cmp
test
jae
dec
and
jns
and
push
inc
popf
loope
dec
mov
rcr
in
daa
bound
mov
add
lcall
dec
lcall
in
lahf
pop
test
lahf
addr16
int3
int3
mov
ja
jg
or
add
lock
push
nop
cmp
push
or
adc
mov
mov
dec
icebp
out
push
mov
cmp
cmp
movd
dec
cmp
stos
lea
inc
aam
mov
lret
add
test
sahf
fnsave
mov
stc
fsin
push
lods
lods
jmp
loop
add
stos
jmp
les
sub
loop
loop
in
xchg
aas
ljmp
adc
out
pop
in
ljmp
hlt
enter
fucomi
xchg
mov
stos
jnp
jnp
jle
outsl
add
inc
inc
fwait
mov
call
insl
das
gs
jecxz
mov
jmp
insb
mov
xor
push
push
or
jmp
stos
mov
in
fmull
or
fsubp
int
inc
mov
adc
nop
fs
dec
mov
in
gs
push
rorl
inc
or
ss
sbb
mov
mov
les
push
or
ja
xchg
jbe
ret
mov
out
inc
sbb
jo
sahf
add
push
push
in
sub
adc
dec
add
leave
jecxz
pop
jo
test
pop
cmp
add
icebp
daa
or
sbb
aas
andb
mov
arpl
in
dec
cmp
outsl
ja
lock
shll
jge
xchg
aaa
outsb
push
or
mov
pop
and
sbb
ljmp
mov
push
cmpsl
mov
ljmp
xchg
fildl
fmul
je
dec
lcall
outsl
cmp
pop
and
inc
or
out
outsb
mov
mov
aad
adc
push
adc
cmpsl
fisttpl
outsl
sarb
in
add
scas
fmuls
dec
fsts
cmp
stc
and
enter
ret
push
shll
fcmovb
push
xor
dec
sbb
gs
xchg
mov
push
jo
dec
pop
pop
jp
fld
pop
insb
lret
push
jg
xor
and
fidivl
dec
int3
add
jg
outsl
cmp
popw
aas
add
and
xchg
clc
clc
movzwl
mov
test
pop
aas
scas
inc
mov
sbb
jbe
mov
mov
cmc
mov
pop
dec
adc
aas
icebp
jbe
int
add
pop
in
mov
xor
call
outsb
out
pop
or
popa
inc
add
adc
sbb
fimull
or
bound
inc
xor
gs
das
insl
mov
lea
and
mov
adc
sbb
push
lods
push
pop
adc
push
addr16
nop
xor
out
pop
mov
in
sbb
leave
mov
fidivl
push
or
andl
xchg
jle
pop
ret
iret
xchg
fbstp
pop
pop
out
and
xor
mov
cltd
popa
push
fbld
std
rcl
or
add
pop
cli
mov
adc
push
cmp
fs
sbb
mov
es
fisubrs
or
jmp
enter
xor
sub
out
insl
jl
fidivrs
dec
das
mov
dec
vandps
sub
ja
xchg
adc
cwtl
outsb
subb
sbb
push
scas
imul
push
mov
fcoms
mov
test
and
mov
push
cltd
out
test
in
cmpl
xchg
cs
and
mov
scas
or
mov
push
test
adc
pop
mov
pushf
cmp
scas
stos
jae
xchg
mov
nop
mov
cmp
stos
mov
add
sbb
pop
test
cmpsb
das
int3
outsl
outsb
aas
push
ds
daa
cmp
inc
adc
clc
fcoml
sub
inc
xor
mov
mov
push
lret
stos
cwtl
xchg
fisubrl
lock
xchg
fs
xchg
push
pusha
xchg
cmpsb
inc
ja
mov
mov
stos
mov
and
aaa
mov
mov
mov
mov
mov
je
cmc
ficomps
test
pop
fdiv
or
add
push
pop
mov
je
notl
xor
lds
dec
subb
in
or
dec
test
insb
loop
pop
loop
add
lods
cmp
mov
popf
lock
lods
mov
inc
jl
movsl
int3
xchg
mov
xchg
subb
pop
xor
cltd
push
cwtl
ss
in
shl
push
das
into
mov
pop
filds
dec
jne
or
pop
jle,pt
push
jp
shlb
push
loop
mov
loopne
out
dec
addb
push
frstor
xchg
cmp
cli
jo
dec
cli
mov
test
iret
xchg
fnclex
jbe
pop
cmpl
xchg
push
es
mov
addr16
sub
fistpll
add
lret
add
jno
jge,pt
imul
sahf
jp
mov
cmp
shlb
hlt
mov
jge
scas
enter
mov
mov
xchg
and
mov
pop
aam
jbe
mov
jbe
inc
pop
push
inc
aaa
popa
xor
inc
or
aaa
jl
test
inc
and
call
in
andb
shrb
pop
jle
push
jmp
lock
push
jecxz
cltd
jns
imul
mov
xchg
jecxz
aaa
test
sbb
jle
sub
mov
jns
mov
shll
lods
inc
test
daa
push
sub
mov
inc
cmp
sbb
jmp
sbb
es
or
jbe
inc
push
dec
ret
cmpsb
or
mov
loope
movsl
jg
outsl
mov
lret
jecxz
in
mov
scas
fnstenv
mov
stos
mov
lret
das
mov
shll
int
test
mov
sub
stc
ds
cli
aam
ljmp
pop
and
dec
jmp
jo
xchg
imul
loopne
std
pop
loope
in
jbe
cmc
aam
push
aad
loope
stos
ret
pop
push
lods
pop
cmc
inc
mov
outsb
pop
call
shll
adc
dec
shlb
and
xchg
add
fcom
cs
cmpl
and
xor
imul
mov
pop
sbb
sub
addr16
daa
inc
jb
sar
inc
add
jle
and
in
out
ds
daa
pop
or
fwait
inc
mov
cld
out
mov
movsb
in
mov
and
xchg
hlt
aaa
or
fbld
into
les
jg
imul
inc
inc
adc
add
sbb
xor
inc
mov
hlt
int
sub
or
mov
scas
mov
dec
mov
sbb
mov
movsl
cmp
jmp
mov
pop
mov
push
lret
lods
ja
pop
out
fucom
decl
popf
pop
jl
or
or
call
sbb
data16
mov
push
cmp
out
call
push
push
pop
sbb
inc
les
ds
mov
jecxz
cltd
repnz
push
and
cmpsb
cmp
inc
shll
adc
or
loope
xchg
mov
pop
mov
movsl
add
movsl
incl
and
inc
push
daa
mov
lock
xor
in
scas
sub
stc
cmc
movsl
fsubp
daa
popa
push
sbb
xchg
sub
test
xchg
ficomps
rclb
femms
jge
stos
ljmp
nop
movzwl
xchg
jg
fnstenv
sbb
mov
jmp
mov
dec
lea
js
sbb
cld
jecxz
ljmp
in
sarl
jns
fildl
outsb
cmp
mov
imul
cmpsl
sub
mov
dec
pop
rorb
ja
and
mov
mov
push
loopne
cmpsl
fmulp
mov
movsl
adc
cwtl
mov
insb
inc
and
mov
and
sub
sub
insb
lahf
jb
or
imul
sbb
lret
rclb
in
lock
aaa
int
xchg
xlat
dec
fcoml
adc
pop
ret
std
lcall
xchg
hlt
inc
popf
ljmp
or
stos
outsb
mov
or
sbb
xchg
mov
ret
insl
sti
sbb
sub
cmpl
sbb
xchg
out
ds
ja
xchg
dec
xor
push
sub
fadd
in
andl
jg
mov
sbb
cmc
out
dec
lock
or
popa
orl
lea
mov
cli
stos
sub
clc
inc
movsw
jg
pop
mov
and
fdivrs
cld
adc
in
cmp
jg
movsl
fisttpl
pop
pop
addr16
mov
popa
lods
fisttps
inc
mov
mov
push
shl
inc
sub
dec
test
mov
add
inc
sbbb
test
sahf
cmp
sub
lock
and
fwait
data16
je
and
movb
dec
xor
pop
xlat
mov
lahf
aaa
das
mov
and
xchg
and
stc
scas
xor
hlt
repnz
and
mov
hlt
into
out
pop
test
scas
ficoml
ja
adcl
mov
pop
xor
mov
jl
inc
xchg
inc
xchg
add
cli
scas
mov
mov
or
in
daa
test
mov
cwtl
repnz
enter
adc
dec
mov
xchg
aam
cmp
push
pop
cmp
jecxz
sbbb
mov
pop
jae
clc
out
aaa
inc
cmc
cwtl
dec
inc
dec
dec
mov
mov
ljmp
pop
icebp
push
mov
loopne
lea
cmp
and
xor
push
int
orb
xor
pop
cmpsb
mov
cs
mov
push
das
insl
insb
cmc
mov
rsqrtps
dec
mov
pause
xchg
pop
ljmp
pop
cmp
into
sub
jb
dec
mov
outsb
mov
faddl
popa
add
add
fnstenv
andl
repnz
push
adc
jge
cmpb
ret
cli
add
and
lret
sub
ss
pushf
ss
fucomip
cld
clc
jge
test
jmp
sub
mov
mov
das
mov
xor
lret
insl
inc
in
dec
sub
rcll
loope
cmp
cmp
or
jmp
pop
outsl
xchg
mov
insb
add
outsl
outsb
pop
clc
mov
dec
pushf
lret
lret
sub
ljmp
popf
movsb
or
add
fpatan
jnp
sbb
pop
cmp
andl
mov
test
mov
push
bnd
xorb
xchg
loopne
in
jmp
sti
mov
mov
loope
mov
sub
cmp
mov
and
imul
les
mov
ja
insb
xor
lret
inc
and
jne
les
mov
in
clc
arpl
mov
test
xlat
pop
and
out
pop
addl
cmpb
mov
fiadds
imul
pop
clc
loop
das
xor
pop
pusha
loope
aam
jecxz
insb
stc
inc
jmp
pop
pop
mov
lds
insl
scas
test
or
test
jbe
mov
ret
xchg
mov
mov
mov
dec
inc
cmp
pop
xchg
sahf
push
es
add
aad
xchg
mov
sbb
push
rclb
inc
cmp
mov
sub
lods
ss
orb
adc
mov
pop
ljmp
adc
mov
and
es
mov
popl
les
jne
dec
std
or
adc
sbb
test
lods
fsubr
mov
enter
cmp
leave
ret
pop
arpl
insb
or
cs
test
push
or
push
sbb
gs
mov
adc
pop
or
stos
dec
xor
mov
dec
xchg
mov
bound
sbb
lahf
jnp
or
xchg
imul
mov
xchg
inc
jmp
loopne
sbb
fs
jae
push
pop
mov
pop
cmpsl
test
mov
fnstcw
pop
out
mov
mov
push
pusha
int3
out
xor
iret
scas
scas
jnp
pop
dec
cwtl
sti
lods
sub
adc
xor
add
mov
jo
jp
mov
cmp
out
push
inc
ja
loop
iret
sbb
enter
outsb
pusha
or
outsb
jge
push
scas
xor
or
jmp
pushf
xlat
push
insb
and
dec
mov
inc
ret
dec
push
jae
inc
pop
add
imul
fwait
stc
je
mov
push
into
inc
cmpsb
fwait
dec
rol
adc
sub
movsl
pop
xor
lock
mov
inc
jo
mov
addr16
or
das
push
in
jg
movsl
cmpsl
mov
or
cltd
pop
testl
arpl
outsl
ja
dec
scas
test
jp
and
mov
mov
out
push
and
mov
or
sbb
inc
int3
lods
xchg
or
test
inc
adc
sarl
push
fcomip
mov
popf
js
xlat
stos
inc
fs
aas
jno
push
dec
shlb
inc
shrl
jl
pop
loop
lret
fsubr
mov
insl
stos
hlt
xor
and
mov
xchg
push
jne
sbb
or
mov
out
ret
push
testb
fimull
jg
or
dec
xor
repz
adc
cld
push
outsb
icebp
xchg
pop
jl
std
add
cltd
aam
clc
nop
xchg
andb
inc
cwtl
call
enter
lds
fists
and
add
pop
jle
fwait
stc
sub
mov
sub
in
ljmp
mov
jecxz
std
sub
jbe
scas
call
lret
xor
shr
mov
das
ljmp
js
imul
shll
and
cmpsb
xchg
push
adc
xchg
ljmp
mov
fildl
push
and
or
lahf
pop
outsl
mov
dec
aad
mov
pop
rcr
adc
mov
push
adc
jns
sub
jne
adc
in
clc
ja
outsb
jnp
inc
mov
jmp
jae
test
pop
stos
ret
insb
aam
inc
jnp
sti
xor
pop
sbb
pop
cmpsl
clc
or
mov
addr16
jmp
xchg
xchg
mov
jp
std
xchg
cmp
orb
outsb
adc
rdtsc
mov
inc
call
mov
fcomip
ss
pop
loope
and
ret
xor
loopne
mov
fisttpl
hlt
lret
and
push
mov
or
inc
icebp
sbbl
xchg
push
cmpsl
mov
or
xor
xorb
cltd
fsubr
ljmp
sbbl
pop
and
fldl2e
cs
dec
roll
mov
mov
fisttpl
fisttpll
xchg
sbb
ljmp
fwait
lds
cmpsl
cld
imul
arpl
rorb
cwtl
mov
jae
test
jne
xlat
adc
jp
daa
lea
mov
pop
mov
pop
loope
out
shlb
int3
pop
sbb
test
mov
jmp
fwait
mov
mov
mov
out
pop
mov
dec
std
dec
xchg
fcomi
iret
adc
cmp
jo
outsl
mov
pop
add
rol
test
test
decl
sub
mov
sti
nop
in
inc
movsb
adc
push
xlat
ds
inc
movsl
dec
pop
sti
lods
and
add
je
xchg
bound
cwtl
and
mov
in
cmpsb
aas
cmp
scas
jp
mov
mov
paddb
adc
and
push
aad
mov
and
addb
and
inc
jmp
iret
cmpsl
and
dec
mov
pop
jmp
adc
into
out
push
icebp
sti
repz
sub
in
aas
push
mov
push
aaa
mov
roll
sub
or
cltd
xchg
ficomps
stos
mov
cltd
xorl
mov
push
out
pop
dec
sbb
sub
adc
test
pop
xchg
ljmp
mov
test
mov
scas
ds
xchg
adc
iret
cs
stos
xchg
mov
xchg
int3
dec
in
xor
outsb
push
outsl
out
or
inc
xchg
push
cmpsb
mov
mov
movsl
xchg
dec
loope
popl
or
popa
jg
mov
adc
ja
gs
and
roll
or
cmp
xchg
jmp
cmc
scas
add
mov
jp
notl
cld
hlt
push
test
adc
ret
sub
mov
xchg
and
vpshad
and
sahf
mov
aaa
push
jle
mov
nop
inc
xchg
mov
cmp
loopne
ss
sbb
and
xchg
push
test
pop
fwait
sti
fistps
data16
sub
scas
jecxz
loopne
push
pop
ljmp
inc
outsl
fsubr
shrb
and
fsubl
popa
xor
sub
push
dec
pop
jo
movsb
scas
xchg
stos
aas
clc
inc
loopne
xchg
cmp
add
arpl
out
ds
mov
jmp
inc
mov
sarb
mov
cmp
dec
push
xor
push
xchg
mov
inc
jno
jge
xor
mov
lret
adc
into
push
icebp
adc
inc
cwtl
jecxz
mov
imul
js
dec
sbb
push
push
push
cmpsb
or
cld
inc
sub
and
mov
add
or
inc
push
enter
or
xlat
inc
mov
jnp
repnz
fisttpll
sbb
cltd
inc
notb
ficoml
iret
rorb
sbb
push
ret
in
sub
add
mov
jae
push
out
jecxz
mov
push
adc
fsubs
les
lcall
shll
mov
out
sbbb
hlt
cmpb
adc
add
cmp
mov
and
push
stos
jae
lahf
push
es
mov
and
dec
gs
mov
and
add
scas
pop
inc
pop
aaa
fdivr
push
add
lock
scas
push
addr16
mov
in
adc
imul
mov
or
inc
shll
add
sti
jno
movsb
clc
jns,pn
mov
enter
negb
fistpll
ss
aaa
pushf
add
inc
call
setb
js
fisttps
ss
pop
xor
mov
test
pop
lods
inc
inc
mov
pop
ljmp
and
pushf
ret
int
test
xor
mov
cld
sub
push
outsl
fbstp
mov
push
pop
cli
adc
cld
pop
sub
test
inc
add
in
imul
lret
add
mov
inc
movsl
xchg
mov
xorb
or
je
adc
out
add
pop
shll
dec
pop
cli
add
lods
ret
repnz
test
into
jmp
sahf
pop
mov
rorl
dec
sbb
inc
sbb
jo
mov
mov
sbb
pop
out
clc
jbe
jne
pop
adc
call
sbbb
test
dec
shll
add
pop
mov
pop
popw
xchg
ljmp
push
adc
mov
fimuls
mov
mov
mov
push
out
mov
xchg
mov
outsl
push
or
addl
aad
pop
inc
inc
popa
or
or
pop
push
inc
push
popa
pop
pop
add
sbb
mov
in
sbb
or
test
mov
addb
inc
cmp
push
lcall
and
stos
std
mov
fisubrl
pop
fmulp
test
rcr
mov
jmp
or
dec
or
mov
push
ret
mov
inc
xchg
aas
cmp
adc
sub
jp
fcomip
loope
adc
dec
flds
test
and
add
inc
dec
andb
dec
movq
push
dec
insl
cmp
sahf
push
rorl
inc
pop
sbb
leave
and
rolb
lea
fisttpl
or
cmp
enter
xchg
dec
aas
mov
mov
mov
cmc
stos
add
add
movl
mov
addl
or
sbb
push
rclb
fsubs
das
lods
jb
jbe
mov
stos
xor
pop
pop
jg
sbb
inc
mov
xor
ljmp
push
imulb
test
pop
or
test
nop
sarb
or
mov
xchg
repz
cs
xchg
mul
jb
movsb
adc
add
pop
cmp
pop
add
mov
std
test
lods
insb
mov
lahf
jns
xchg
lock
inc
inc
dec
mov
mov
jg
test
scas
enter
std
scas
add
mov
dec
mov
and
movsb
shrl
adc
rorb
jmp
mov
cwtl
cmp
mov
push
inc
push
xor
lret
insb
pop
xor
adc
or
std
lret
imul
push
xlat
ret
pop
je
loopne
mov
test
in
scas
stos
fidivs
fimull
insb
in
and
xchg
scas
test
mov
jbe
ror
stos
adc
add
jmp
jl
cmp
or
lds
int3
aad
mov
adc
mov
push
fstl
jle
jle
dec
out
dec
push
rol
xchg
es
dec
in
xchg
punpckhdq
xor
and
sub
xor
adc
dec
xor
adc
pop
dec
mov
in
xor
mov
cli
and
jmp
mov
xor
add
cs
jecxz
aas
outsl
cmp
daa
out
push
sbb
sbbl
rcll
fildll
cli
leave
addr16
call
inc
outsl
push
mov
ds
push
lret
inc
nop
loope
adc
arpl
lock
in
decl
fbld
aas
fwait
sub
adc
loop
add
cwtl
xor
arpl
dec
cmp
push
js
nop
loop
imul
fstpl
and
xchg
add
fwait
push
scas
jecxz
lods
mov
addb
dec
xchg
push
sbb
testb
or
mov
incl
mov
scas
bound
addl
test
cmp
add
mov
push
dec
movsl
in
ret
lea
mov
fsubr
inc
xor
imul
inc
repz
pop
stc
cltd
pop
push
mov
popf
jae
mov
std
outsb
adc
sub
out
in
rcll
loopne
sub
loopne
fucomp
mov
mov
jg
in
pop
hlt
lods
add
cltd
test
cmpsb
pop
lds
xchg
push
sahf
pop
cmp
mul
test
orb
mov
mov
jno
sarl
das
loope
xchg
call
fisubrs
lods
mov
lret
xor
cmp
out
dec
mov
pop
push
dec
aaa
inc
sbb
pop
std
scas
push
hlt
es
sahf
test
jbe
add
loope
jl
mov
scas
lret
xchg
and
xchg
or
or
mov
sbb
sub
pushf
sar
inc
jb
loope
jns
sbb
mov
jnp
sti
cli
aaa
mov
push
jle
mov
roll
lret
push
aad
mov
arpl
cmp
scas
sbb
rclb
cvtpi2ps
inc
aaa
xchg
jg
iret
adc
xor
xor
decl
in
add
dec
jg
test
in
mov
addr16
or
inc
pop
call
in
ret
cmpsl
or
out
mov
aad
adc
and
inc
pop
out
mov
loope
xchg
pop
out
mov
in
adc
pushf
jns
mov
fdivrp
inc
fldenv
add
sbb
mov
jg
xchg
jbe
test
mov
insb
or
or
sbb
loopne
push
mov
cmp
shl
rorb
sub
jns
icebp
shl
sub
jne
adc
mov
xchg
arpl
outsb
and
push
push
fadds
adc
sbb
sbb
fwait
ja
and
inc
pushf
mov
outsl
cmpsb
xchg
lcall
dec
shrb
cmp
ljmp
adc
jl
nop
pusha
pop
loop
popf
test
je
push
inc
xlat
inc
push
ret
inc
cli
test
inc
das
mov
or
ja
lcall
fcmovnbe
daa
test
mov
adc
pop
or
push
inc
mov
or
pop
cmpsl
sbb
cmp
pop
mov
dec
xchg
shll
xor
mov
cli
ret
push
ds
cmp
dec
jle
inc
fnsave
test
xchg
mov
add
cwtl
fs
in
icebp
dec
sbb
inc
ret
iret
addb
out
sbb
movsl
insl
jecxz
test
xor
inc
pop
shl
outsb
add
fdivrl
out
aas
js
adc
jecxz
outsl
or
addr16
jmp
mov
popf
xchg
daa
je
leave
and
lcall
cmc
xor
cltd
xchg
inc
adc
cwtl
ficompl
cmp
mov
and
mov
mov
out
ret
and
imul
in
subl
in
cli
mov
dec
xor
jge
pop
and
pusha
fdivr
maxps
iret
add
xchg
inc
jbe
test
or
pop
pop
or
mov
loopne
frstor
or
loopne
inc
aaa
add
and
data16
pusha
outsl
pop
ljmp
push
outsb
pop
int
fidivrs
inc
or
or
movsl
cwtl
adc
sarl
xchg
xor
rcrb
and
stos
pop
xchg
mov
push
sbb
jl
enter
push
outsb
movsb
adc
fcoml
push
mov
fstpl
mov
lds
scas
inc
test
ret
mov
mov
lods
xor
repz
sbb
jne
pusha
push
jns
or
leave
or
sbb
xor
fprem
lods
mov
push
push
leave
stos
mov
mov
movb
xchg
lret
mov
inc
add
cmp
ds
frstor
and
lahf
dec
out
mov
mov
loop
popf
cmp
mov
js
jcxz
icebp
mov
cmpsl
outsb
pop
sti
mov
je
mov
jbe
lret
cmpsb
imul
sbb
pop
adc
out
sub
mov
aam
decb
divb
jge
cld
lea
push
jb
pop
es
das
insl
sbb
out
aas
xchg
gs
mov
jae
rcll
aaa
rcrb
pusha
push
test
inc
orl
mov
es
popf
fistpll
pop
mov
pop
in
cmp
or
cltd
xor
add
add
cmp
fadds
mov
dec
xor
inc
mov
push
dec
rcl
sahf
or
add
fnstsw
xor
sbb
push
in
icebp
cmp
xchg
push
lods
leave
inc
or
nop
or
fstp
sbb
jno
movl
pop
jp
aaa
bound
imul
mov
out
ljmp
xorb
stos
pusha
cmp
push
aam
sti
aas
pop
cmpb
mov
xlat
inc
pop
js
xchg
loop
stos
mov
in
sbb
adc
inc
xor
mov
ss
jmp
push
pop
inc
add
push
jne
cmp
sub
xor
test
mov
inc
adc
or
mov
pop
test
loop
lods
js
inc
icebp
movsl
js
mov
push
push
call
pusha
sub
ret
test
mov
pop
imul
pop
and
inc
mov
dec
jecxz
test
jmp
outsb
xor
daa
pop
inc
push
xchg
divl
push
in
adc
xchg
dec
cmp
jge
mov
add
push
sub
subl
lock
aaa
mov
xor
adc
adc
jl
fstpt
inc
xchg
sub
aaa
dec
sbb
aaa
push
fs
ja
mov
inc
mov
or
pusha
xchg
cs
adc
cmp
pop
out
jg
cwtl
pop
mov
repnz
cld
mov
cld
inc
jge
adc
ds
mov
mov
or
rolb
rorl
xchg
js
sti
jl
add
rolb
cmp
or
arpl
pushf
sbb
pop
je
xchg
out
xchg
in
xchg
loopne
mov
and
xchg
add
pushl
faddl
mov
call
and
push
ret
movb
insb
js
fmull
xchg
pop
jbe
call
in
push
sub
fistpl
icebp
dec
out
and
out
daa
jecxz
mov
negb
sbb
inc
out
shll
je
cmp
enter
aas
in
jo
jecxz
rolb
mov
dec
jne
mov
push
mov
movb
push
sti
dec
pushf
push
call
mov
aaa
cwtl
mov
pusha
clc
sbb
add
cmp
xchg
mov
xchg
popa
stc
out
nop
mov
mov
dec
sub
hlt
or
sarb
aaa
scas
les
fistpll
ljmp
aas
inc
pop
sbb
adc
jne
sub
lods
rol
inc
add
orl
mov
test
cld
test
outsl
pop
icebp
inc
insl
test
test
push
inc
add
dec
gs
out
adc
mov
aaa
ja
push
cmpsl
insb
orb
jl
testb
outsw
in
xor
ljmp
sti
xchg
mov
jl
pop
js
push
shrl
or
xorl
cmpb
fcompl
mov
adc
and
jae
xor
cmp
aas
ljmp
test
jp
cmpsl
add
gs
push
mov
andb
fsubs
mov
rcr
and
cli
mov
sbb
jl
loop
std
popf
or
les
dec
out
call
scas
popa
add
dec
jnp
pushf
icebp
imull
inc
pop
mov
jno
mov
bound
rorl
popl
repnz
rolb
push
movsl
push
lcall
and
push
jo
jb
push
gs
inc
pop
xlat
pop
xchg
cmp
rclb
push
push
les
and
sbbl
rcll
and
inc
mov
inc
repnz
addb
lret
pop
cmc
dec
mov
dec
call
xchg
pop
lret
pop
jge
loope
loopne
mov
add
daa
jno
aam
ret
aaa
ljmp
shll
shrl
mov
lahf
push
js
test
mov
and
mov
in
sbb
jl
add
imul
aaa
push
or
addr16
in
or
outsl
stc
lds
inc
dec
cmp
dec
inc
cltd
arpl
mov
popa
cmp
xchg
out
test
inc
sbb
xlat
lods
pop
clc
movsl
xlat
push
stc
adc
je
popa
loop
cmp
xchg
mov
sbb
jo
and
sti
aaa
ret
out
sbb
xor
lahf
mov
je
cmpsl
hlt
imulb
dec
sub
xor
cmp
mov
xlat
mov
sbb
rcr
cmp
or
repnz
pop
fwait
mov
je
mov
jge
leave
push
aam
pushf
scas
or
sbb
ja
mov
dec
daa
inc
iret
mov
pop
loopne
es
gs
in
fisubs
and
and
mov
jl
daa
pop
or
roll
pop
fs
test
or
mov
add
js
shrl
in
shrl
sbb
pop
mov
mov
push
fsubr
jo
adc
or
pop
xchg
repz
cmpsl
add
cmp
addl
addl
bound
sub
jg
sahf
push
in
mov
mov
pop
mov
js
add
movsb
or
cwtl
or
fbld
pop
ret
xchg
add
ret
aad
sbbb
mov
andl
js
jae
shll
and
clc
outsb
sub
push
add
add
or
es
dec
mov
div
popa
jg
aas
mov
es
and
mov
sub
mov
cmpsl
jne
and
jns
and
xor
outsb
jg
cmpsl
insb
adc
xchg
cltd
pop
mov
loopne
or
jo
fstps
test
out
fists
cmp
jns
mov
push
mov
bound
or
and
roll
fs
hlt
xor
jmp
xor
cwtl
loope
inc
xchg
out
cmp
mov
mov
xchg
outsl
ljmp
add
cmp
cli
andl
push
cmp
mov
lret
cmpsl
cmp
cwtl
push
in
mov
dec
pop
lods
mov
in
std
push
and
jecxz
rcrl
jmp
and
mov
jle
movsb
ret
mov
jl
and
nop
clc
xchg
outsb
push
ljmp
outsb
lret
push
xchg
subl
ret
dec
call
adc
jp
cmp
das
aad
std
sub
push
push
adc
xchg
das
cld
or
or
fwait
aas
cmp
sbb
sbb
sahf
dec
cli
call
adc
sbb
pusha
add
hlt
jg
scas
pop
adc
add
pop
dec
mov
aas
movsl
pop
fiadds
movsl
jle
pop
rorb
aad
mov
mov
sbb
sbb
std
mov
imulb
shrb
xchg
sbb
push
in
mov
dec
or
shl
out
or
cmp
aaa
clc
or
mov
and
mov
mov
aas
js
jp
push
push
inc
loope
jmp
int
cmp
mov
pushf
mov
sub
mov
nop
cwtl
leave
xor
and
subl
aaa
neg
scas
cmp
insl
fs
xor
inc
adcl
dec
mov
mov
xor
mov
sub
mov
pop
lret
sub
mov
loope
jl
jnp
xor
mov
adc
daa
movsb
hlt
sahf
test
pop
sbb
lahf
sub
out
orb
bnd
test
sub
mov
neg
stos
or
outsb
sub
inc
adc
sti
jb
test
test
fs
imul
inc
out
in
lock
testb
sti
mov
jecxz
and
mov
stos
inc
inc
or
cwtl
dec
adc
or
mov
lret
xchg
pop
or
inc
or
adc
cmc
mov
in
clc
fwait
pop
scas
lret
adc
push
xchg
mov
lea
bswap
or
insl
cmp
shll
lea
sti
jbe
mov
mov
fwait
jge
mov
and
out
rcr
mov
pop
mov
outsl
mov
or
mov
ret
mov
out
negb
sbb
xchg
xlat
adc
test
push
push
inc
in
jmp
or
data16
popf
dec
push
xor
xchg
dec
in
pop
incb
push
es
cmp
mov
push
jae
dec
in
movl
mov
adc
testl
xlat
fldenv
push
lret
mov
imulb
xor
cmpsb
inc
pop
shlb
aam
mov
cs
pop
dec
repz
ljmp
mov
dec
mov
or
mov
adc
test
mov
jp
pop
mov
adc
loopne
cli
inc
mov
sbb
mov
mov
or
jp
add
adc
jne
jg
cmp
jne
imul
pusha
mov
popl
or
xlat
iret
enter
rorb
jecxz
jbe
fbstp
sbb
adc
cs
pop
gs
das
sbb
loop
pop
xchg
fcomps
fwait
xchg
add
mov
dec
imul
mov
and
test
or
xchg
cmp
jae
out
cli
test
or
lret
xchg
jp
mov
cmc
ficompl
lock
popf
test
mov
das
loopne
mov
inc
fldl
in
and
add
sbb
dec
cmp
jno
adc
sub
push
rolb
gs
jbe
rorb
mov
pop
loopne
nop
adc
cmpsb
frstpm(287
jl
sbb
dec
cmp
or
fistpll
gs
jecxz
fldcw
xchg
sarb
or
push
push
xchg
jecxz
xor
clc
in
fisttpll
out
inc
mov
in
outsb
cmpsb
push
ds
jae
mov
scas
std
hlt
pop
fwait
sti
cwtl
andb
xchg
push
jge
filds
js
sbb
pop
mov
aas
mov
or
xorl
icebp
out
and
inc
cmp
add
aaa
lds
rcrl
cmp
jno
das
insl
mov
rorb
loop
popf
xorb
sbb
das
mov
outsb
insl
aad
loopnew
lods
adc
sbb
out
in
lret
rorb
inc
cmp
outsb
notb
pop
loop
jmp
int3
pop
mov
mov
sti
in
push
cs
icebp
out
adcb
jb
pop
push
insb
jp
dec
decl
jmp
iret
imull
jne
ja
subb
adc
dec
xor
shll
xchg
jb
jbe
in
sub
add
sub
jnp
pop
arpl
popa
xchg
fidivs
imul
cmp
xor
push
cwtl
sahf
sub
cmp
hlt
ss
adc
test
push
push
jo
sub
loopne
outsb
pop
xor
les
lret
pop
nop
mov
outsl
cmpsb
pop
dec
jl
lahf
sub
sahf
xor
ja
or
cmpb
dec
int
movsb
push
and
out
dec
pop
cli
xchg
dec
mov
or
push
mov
popa
icebp
sub
sbb
mov
mov
jns
sbb
mov
mov
mov
pusha
sub
mov
pop
aad
enter
aaa
xorb
test
test
cld
cmpsb
add
pop
sbb
mov
add
inc
fstp
inc
mov
mov
pop
in
shr
fwait
sbb
in
in
push
mov
xor
push
loope
mov
outsb
ret
and
clc
rcrl
jg
pop
mov
adc
in
xchg
xchg
scas
jecxz
push
shll
ja
lea
add
scas
pop
std
sbb
outsl
stc
xorl
cltd
sbb
das
mov
std
arpl
sub
cld
pop
mov
fildll
ds
stos
vphaddubd
mov
push
test
pop
jns
int
cmpsl
bound
ficoml
sbb
stos
add
clc
rcll
lret
jmp
jl
movsb
adc
or
inc
ss
pop
inc
pop
pop
and
sbb
inc
sbbl
xor
aad
jmp
out
inc
jmp
dec
jo
int
jae
popa
mov
cld
sarb
addl
lock
lods
and
push
mov
psllw
lods
adc
adc
sbb
fsubrs
mov
dec
insl
pushf
xor
out
mov
cmp
adc
mov
jne
ret
dec
nop
ljmp
in
xorb
pop
pop
in
outsb
call
inc
js
outsb
mov
ss
loop
ja
add
mov
adcb
insb
sub
pop
clc
and
shrl
mov
cld
stos
sub
jge
sbb
add
cmp
or
cmc
jg
mov
filds
mov
mov
inc
das
aaa
orb
adc
in
adc
rorb
dec
incl
mov
jl
and
test
dec
in
mov
sbb
pop
adc
icebp
mov
adc
gs
pop
push
je
xchg
sbb
pop
mov
and
cld
dec
jl
xchg
add
imul
fmul
stc
or
sub
push
test
call
aas
dec
in
xchg
push
out
fidivs
in
mov
aam
cmp
mov
or
bound
loopne
dec
fildll
and
xor
xor
rclb
adc
xor
popa
and
stc
js
movsl
xchg
cld
lahf
jno
or
mov
insb
mov
lock
push
mov
pusha
cld
aad
lcall
lahf
add
pop
ficoml
test
mov
jmp
push
or
aad
cltd
aas
push
loop
aaa
add
daa
shr
xlat
push
sti
pop
mov
mov
test
shrb
mov
push
bound
fistpll
into
rcrb
je
cmp
sbb
mov
mov
lret
push
mov
adc
adc
add
pop
adc
loopne
outsl
mov
jo
in
mov
adc
fmull
cmp
and
xchg
jp
sub
adc
add
sub
mov
mov
aaa
std
pop
pop
imul
push
pop
rcrl
xor
arpl
inc
scas
cmp
inc
add
pop
add
or
test
inc
movsb
or
sub
fldt
test
pushf
lock
jmp
cmp
or
add
fistps
shlb
pop
ror
push
pop
outsb
jne
mov
or
mov
inc
out
sub
jmp
in
shrl
clc
sub
mov
and
int3
bound
jle
xchg
sub
cmp
leave
dec
fcomps
rorb
add
mov
test
enter
popf
aad
adc
repnz
dec
ljmp
cmc
ss
xchg
pop
inc
fdivrl
outsb
sub
or
jns
sub
fcmovu
aam
pusha
pusha
jne
incb
arpl
lock
xchg
jae
and
jg
push
mov
mov
fsubl
mov
mov
jae
mov
sub
and
gs
lret
dec
lock
xlat
fistpll
pop
dec
movsl
push
dec
es
or
mov
mov
xchg
push
mov
in
mov
movsl
imul
rcl
clc
loope
push
add
sbb
mov
les
mov
fwait
stos
jno
sub
les
and
cli
sahf
sub
test
mov
cltd
adc
jbe
rorl
sbb
lock
xor
test
adc
push
mov
das
cmc
lods
push
test
enter
sub
push
adc
push
add
sub
out
rcrb
push
or
test
adc
lods
int
je
and
mov
inc
and
cli
add
xchg
daa
cmp
scas
test
into
sbb
sbb
push
mov
cmc
jmp
push
clc
addr16
pusha
daa
movlps
sbb
ret
test
mov
push
cmpsl
out
stos
push
cld
dec
sub
subb
sub
pop
mov
xor
or
je
aam
and
mul
int3
push
xor
mov
repz
push
mov
or
sarl
mov
clc
lock
pop
cmp
dec
ja
push
adc
add
testl
insb
xchg
cltd
daa
dec
dec
adc
cmp
inc
add
aam
cmp
or
mov
adc
mov
das
xor
inc
outsl
or
cmp
sbb
sub
jns
pop
xor
mov
push
fs
icebp
pop
and
faddp
xchg
cmp
inc
or
and
xchg
sub
mov
dec
pop
lods
sti
mov
pop
adc
in
outsl
in
fdivs
cmp
mov
mov
cli
or
cltd
push
sahf
jbe
pop
sbb
out
out
push
mov
orl
or
fucomp
mov
addl
push
pop
push
mov
test
mov
xchg
mov
fldl
add
or
cmp
loope
mov
push
repz
clc
frstor
push
add
sbb
mov
pop
push
cmp
sub
hlt
mov
fs
in
cld
adc
mov
sbb
icebp
aam
pusha
test
xchg
pop
dec
in
ljmp
jnp
or
movsb
inc
xor
cwtl
dec
stc
push
cmp
outsl
jecxz
inc
add
xchg
iret
insl
pop
fdivrs
lcall
jbe
xlat
mov
int3
adcb
ja
insl
faddp
inc
cmp
lock
rorl
jl
sbb
sub
incl
xchg
mov
inc
es
ret
push
cmp
faddl
or
push
in
jmp
or
cmp
ret
inc
dec
mov
jge
sub
pop
outsl
ljmp
sti
bound
cli
push
jg
jno
cltd
dec
cld
inc
dec
push
inc
push
out
scas
addl
sub
xchg
mov
jb
mov
sbb
mov
out
inc
rcl
dec
mov
aas
sbb
movsb
fmuls
mov
test
inc
pop
call
leave
xchg
add
push
mov
push
jg
jp
adc
add
lahf
aas
mov
mov
and
xor
pop
fdiv
sbb
fiadds
ds
aaa
loop
pop
fidivrs
inc
popa
mov
cmp
lret
ffreep
jmp
push
aaa
pop
cmp
fimuls
mov
inc
add
mov
dec
cmpsb
adcl
cs
outsb
push
mov
sub
sbb
pop
jp
xor
mov
outsb
adc
lods
pop
xor
and
cwtl
bound
pop
pop
push
mov
outsb
cmp
xchg
and
mov
popa
xchg
mov
cmp
iret
lock
pop
ret
incl
mov
adcb
sbb
aas
ljmp
ret
and
push
out
push
pop
push
xchg
pop
xor
cmpsb
je
push
mov
or
xchg
dec
notb
cwtl
fs
pop
je
fwait
loope
push
adc
test
out
dec
shlb
sbb
stos
push
inc
lcall
and
fistpl
ja
cld
fcomi
dec
test
roll
inc
inc
loope
adc
jg
pop
mov
mov
inc
shl
das
pop
loop
and
sub
ljmp
or
xor
lret
fdivr
cmpsl
mov
cmp
cmp
push
sbb
pop
and
jnp
shlb
xchg
rclb
mov
and
movsb
scas
aaa
jo
jg
lea
xor
imulb
hlt
ss
out
es
icebp
and
and
cmc
stc
add
gs
iret
sub
testb
jg
fimull
mov
loopne
mov
aaa
dec
cmpsb
xor
and
mov
inc
xor
push
adc
mov
mov
xor
in
fcmovnu
pop
ljmp
fs
push
lds
pop
adc
cmpsb
data16
aas
mov
loopne
test
and
mov
fsubr
outsb
add
lds
add
outsl
mov
or
adc
or
xchg
dec
fbstp
sahf
cmc
pop
push
nop
int
cmpsb
mov
ja
lods
inc
stos
insb
bound
fidivl
inc
xchg
fmull
and
pop
lods
subl
mov
push
rclb
add
movsl
mov
push
jne
or
sbb
test
mov
jle
push
mov
stos
mov
cld
cmp
lea
adc
jbe
dec
out
leave
ljmp
mov
sbb
data16
xchg
jmp
fmuls
sbb
in
in
insl
lcall
outsl
jo
jno
lcall
fsubl
jecxz
mov
ljmp
pop
cwtl
pop
sbb
push
fs
push
sub
loopne
aaa
in
shrl
sub
mov
dec
out
hlt
lea
inc
mov
push
mov
xchg
sub
fists
roll
negl
or
ds
fwait
sub
and
adc
das
ret
pminub
shl
out
fmull
dec
pop
sbb
add
lock
xchg
iret
cmpsb
ficoms
in
loopne
mov
lock
in
mov
cmc
lea
div
mov
pusha
xchg
adc
enter
add
stos
cmp
ss
ja
xchg
push
push
push
dec
dec
je
mov
mov
and
mov
cmp
jecxz
jg
lret
in
cmp
aas
fcompl
sub
mov
sarb
push
pop
arpl
std
mov
xchg
loop
adc
out
loopne
js
sub
pop
ja
lock
xchg
outsl
push
xorl
imul
test
cltd
pop
neg
xchg
jle
pop
and
mov
sbb
andl
push
or
stos
iret
shrl
das
pop
out
cmp
and
jmp
jecxz
inc
ret
adcl
negl
sub
inc
inc
add
cli
jbe
push
ret
push
mov
repz
jp
jb
lret
inc
in
sub
push
aam
add
mov
add
sub
sbbb
jmp
jl
into
imul
hlt
push
stos
insb
xor
call
mov
inc
jecxz
inc
mov
cmpb
jbe
in
lcall
add
add
sbb
lds
pop
mov
xor
and
rclb
push
push
in
scas
or
outsl
pop
cli
mov
bound
gs
fcmove
in
add
nop
add
pop
sbbb
inc
lock
sarb
aaa
mov
outsl
mov
jno
xor
cli
clc
ret
cmp
mov
aas
fdivr
mov
mov
push
test
push
mov
pop
jo
xchg
dec
in
push
xchg
sub
cld
add
shlb
cmp
call
mov
sbb
add
loopne
das
inc
loope
mov
cmp
repnz
push
xchg
cli
outsl
lcall
gs
adc
lds
aas
or
push
in
es
mov
pop
jo
in
jb
dec
sub
mov
mov
in
xor
mov
cmpsb
sti
jge
and
dec
insb
fsubrl
mov
shlb
mov
clc
push
fcompl
push
insb
rcl
add
jne
inc
push
lret
fs
push
jmp
dec
jb
mov
hlt
jle
mov
insb
sbbb
xchg
addb
mov
inc
icebp
movsl
testb
inc
jbe
cmpl
dec
aas
lods
dec
adc
or
xchg
and
cmp
insl
mov
rcll
ret
push
leave
jl
pop
pop
sbb
pop
ss
cmpsl
sbb
enter
cmpsl
js
nop
js
ljmp
es
mov
mov
mov
or
je
out
pop
xor
add
xchg
out
jge
sub
mov
push
dec
push
dec
and
mov
sbb
pusha
orl
push
xchg
mov
out
out
add
pop
and
inc
mov
call
pop
dec
and
inc
addb
push
mov
and
pop
mov
push
popf
pop
out
sahf
jge
xchg
js
clc
mov
ja
lret
aad
add
sbb
jae
ret
lock
pop
jns
push
push
xlat
pop
sub
cmp
addb
jns
jle
jbe
iret
push
and
or
lock
insb
outsl
pop
out
into
mov
aam
inc
outsl
fsubrl
mov
jae
mov
hlt
push
xchg
inc
ljmp
test
cmpsl
and
hlt
mov
xchg
mov
inc
out
decb
or
mov
add
rcll
ret
mov
cmp
xchg
fimull
call
aas
cmp
fists
pop
push
mov
xchg
mov
orl
xchg
mov
xor
cmp
jmp
shl
cltd
lods
filds
stc
aam
mov
jmp
mov
sahf
cmc
je
pop
mov
in
call
jp
xchg
xchg
inc
mov
cmp
jmp
jmp
push
jno
inc
insb
or
insb
fadds
xchg
out
loop
fidivl
add
int3
mov
sbb
mov
jnp
clc
in
pop
loope
mov
xchg
cwtl
jbe
inc
cvtps2pd
jg
fidivl
mov
xor
call
lds
or
push
cmpsb
sbb
ficoml
out
mov
pop
fst
inc
mov
sbbl
outsl
movsb
pop
xchg
loopne
push
lcall
shlb
pop
push
xchg
add
xchg
sub
ljmp
test
mov
or
or
jbe
jp
mov
hlt
mov
mov
inc
pop
mov
inc
shr
adc
sbb
push
jecxz
inc
sub
std
mov
test
push
daa
cli
fsubs
ret
test
sti
cs
stos
add
or
out
and
int
pop
std
test
icebp
test
mov
out
jo
jp
mov
xlat
decl
movl
xchg
stos
adc
pop
mov
adc
push
mov
incb
or
adc
xchg
daa
dec
cmpsb
mov
in
or
rorb
cmpsb
sub
jg
pop
ret
mov
adc
aas
iret
pop
adc
call
push
or
dec
ret
adc
xchg
test
dec
cld
adc
das
inc
sbbl
adc
in
cmp
add
dec
or
lock
ds
incl
in
mov
inc
mov
push
les
mov
sub
ret
xchg
push
sbb
and
jb
test
shr
adc
mov
inc
loop
shll
cltd
xchg
cwtl
es
adc
pusha
mov
pop
xchg
jle
aas
mov
ffreep
aaa
jl
inc
push
push
shrl
dec
jg
gs
ret
xor
or
xchg
xchg
jmp
jle
testl
cltd
das
ss
lods
adc
cli
lret
aam
mov
test
inc
and
adcb
add
mov
sbbl
xor
out
outsb
cmpsl
add
pop
inc
xor
aaa
push
fadd
je
dec
mov
rorb
or
mov
mov
and
push
dec
add
sbb
cld
mov
mov
and
out
pop
rdmsr
jbe
mov
cwtl
jb
mov
xchg
mov
pop
inc
test
cwtl
mov
into
push
es
pop
fistpll
cmp
shlb
data16
pop
add
mov
jbe
fdivrs
push
repnz
sahf
ffreep
mov
xchg
fdivrl
loop
pop
jg
test
push
ficoms
pop
xor
cwtl
xchg
mov
pop
test
mov
mov
push
daa
and
mov
push
shll
fnstenv
push
add
ss
mov
insl
pop
adc
inc
mov
jl
push
pushf
push
mov
inc
cs
sti
push
test
dec
push
pop
push
fs
or
push
fcomip
dec
fwait
nop
test
in
mov
mov
lahf
mov
cmp
jns
jnp
les
data16
cltd
cmp
jp
rcpps
pop
cmpsl
pop
sub
aam
int
mov
add
xor
mov
mov
pop
and
xorb
and
popa
cmpsb
jb
mov
and
std
les
dec
rcrb
sti
movsl
test
mov
mov
adc
push
cli
movsb
testb
xor
push
stos
fs
mov
sub
insb
cld
aad
push
fcompl
fildl
inc
fldl
mov
dec
test
mov
hlt
pop
call
ds
movsl
lret
jl
xchg
clc
add
aaa
mov
xlat
outsl
outsb
fstpl
jne
mov
les
subl
les
xchg
pop
inc
adc
jg
adc
clc
cmp
mov
in
sti
add
test
fs
pop
inc
jecxz
cmc
push
rcl
adc
push
push
inc
insl
cmp
add
pop
lahf
les
add
cmp
mov
push
sbb
int3
push
decb
xor
jp
pop
xchg
jmp
xchg
mov
leave
cmc
xor
mov
sbb
xchg
xor
adc
dec
fs
pop
in
adc
stc
mov
mov
lds
shll
cld
mov
clc
or
xor
or
pop
mov
loopne
mov
outsl
cmp
lret
cmp
sbb
add
outsl
mov
movb
mov
divl
fucomp
xchg
mov
js
sbb
shlb
mov
fisttpl
in
sbb
mov
enter
cmpsb
mov
in
ja
sub
adc
fsubs
xorl
sarl
inc
rcll
fadd
add
fildl
and
pop
xor
xor
pusha
int
fwait
mov
dec
rcrl
mov
dec
daa
cltd
fiaddl
movsb
jp
xor
rcrb
pop
mov
aad
fists
push
xor
sbb
jbe
add
roll
scas
out
pop
jb
lock
lcall
xlat
into
add
cmp
add
jl
mov
lret
push
or
loop
and
jnp
rorl
cld
outsl
test
js
sub
xchg
sub
int3
dec
popa
cmpsl
test
ja
mov
adc
mov
das
pop
push
inc
mov
scas
mov
mov
push
ljmp
pop
pop
adc
xchg
mov
mov
mov
inc
sub
gs
add
ja
loop
jae
orb
mov
mov
sbb
sbb
test
lret
mov
lock
and
add
das
cld
push
hlt
fldenv
test
sbb
call
sbb
and
aaa
sub
imul
dec
std
addb
aam
jns
scas
fistpll
leave
das
std
loope
xor
fisubrs
ljmp
not
inc
lahf
iret
lcall
and
imul
addr16
mov
inc
pusha
imulb
les
xlat
and
or
outsb
xchg
pop
xchg
mov
ret
adc
mov
push
or
xchg
addb
inc
xor
cmc
movsl
push
push
xor
pop
push
sub
es
add
int3
jo
testb
shl
pop
std
lods
and
rorb
mov
mov
lock
and
push
shll
andl
and
inc
shl
mov
mov
fsts
cmp
call
inc
in
mov
push
fsubl
xchg
jp
loopne
dec
imul
add
mov
jecxz
clc
push
das
std
scas
ret
add
loopne
loop
sbb
out
sbb
mov
outsl
icebp
cmp
imul
jnp
fidivs
or
adc
scas
cmp
dec
stos
out
pop
fsts
mov
sub
rcll
addl
pushf
mov
dec
and
inc
adc
iret
jo
pop
push
addb
mov
xlat
add
fildll
push
fdivrl
jns
icebp
cwtl
mov
sub
fmull
mov
add
sbb
ret
pop
outsb
or
sti
cmp
or
inc
pop
out
pop
sbb
inc
mov
add
ret
xor
scas
aaa
sub
cmp
mov
or
mov
mov
sarb
cmp
xchg
sbb
inc
sbb
icebp
stos
mov
cmc
js
mov
jge
daa
mov
hlt
fadds
fists
lahf
pop
add
push
inc
iret
xor
jbe
cmp
movsb
pop
pop
jp
ja
xor
lret
lret
aas
cmpsl
adc
add
inc
lahf
and
xchg
fistps
fistpl
test
mov
mov
clc
xor
inc
push
xchg
mov
clc
or
add
andl
jecxz
or
das
arpl
mov
pop
adc
imul
cmp
sub
sti
inc
shlb
lods
push
lock
cmp
ret
mov
jp
iret
mov
es
nop
push
and
lods
dec
mov
sbb
das
sub
mov
repnz
pop
out
pop
push
mov
loope
xor
outsb
xchg
dec
inc
fildll
std
out
clc
sub
scas
stos
dec
imul
lcall
cmc
sbb
ja
mov
mov
sub
ficomps
stos
inc
paddw
testb
pop
mov
clc
rcl
enter
inc
jl
cltd
push
mov
xchg
jmp
loopne
or
cmp
mov
jmp
or
mov
and
mov
adc
xchg
popa
sbb
push
mov
sub
clc
cmpsb
mov
sub
pop
scas
aaa
push
adc
pop
mov
or
rol
and
aaa
pushf
or
dec
out
js
mov
or
sub
cmpsb
mov
loopne
std
testb
mov
js
xor
mov
sti
clc
inc
or
xor
fldt
test
add
and
cmc
mov
repz
cmp
and
test
js
mov
andl
pop
cs
ljmp
mov
jbe
push
dec
xchg
cmp
push
or
popf
pop
loop
in
mov
fildl
pusha
in
fwait
jbe
add
cwtl
fdivrs
in
aaa
fdivs
cmp
insb
lock
jb
adc
outsb
orb
xor
push
sbb
stos
test
mov
cmpsb
mov
inc
es
push
in
push
and
cmp
mov
dec
fldl
icebp
mov
outsb
push
push
push
jno
rcrb
xor
dec
sahf
mov
xor
fists
add
mov
insb
pop
les
ss
cmp
insl
stos
mov
into
ficoms
imul
aam
icebp
pushf
sub
inc
lret
decb
fdivs
in
lahf
clc
adc
cld
fidivl
xor
outsl
cld
sarb
ds
jns
psrad
outsl
movsb
das
push
je
add
dec
shll
int
or
mov
mov
fcos
xor
mov
adc
mov
push
sub
inc
jae
jg
loop
jmp
adc
pop
iret
mov
loope
pop
cmp
nop
jne
push
lret
pop
push
aad
int
sbb
mov
test
push
mov
inc
loope
or
push
push
stos
test
pop
sbb
xor
cld
ljmp
and
cmpsb
dec
mov
cli
adc
call
outsl
push
push
push
cmp
or
repz
push
pushl
or
out
mov
push
jbe
adc
or
in
push
push
hlt
daa
addb
or
jg
ljmp
test
shlb
mov
ffreep
pop
int3
es
insl
lcall
push
jl
inc
clc
test
data16
out
sbb
icebp
pop
cs
in
and
inc
daa
test
outsb
std
mov
pusha
and
movsb
inc
and
stc
mov
mov
popaw
fstps
mov
addl
pop
addr16
fldt
pop
push
hlt
mov
fs
rol
mov
test
or
ret
fcoml
cld
adc
hlt
sub
pop
mov
leave
les
xchg
rcrb
dec
add
repnz
inc
loope
mov
jmp
movsb
stos
adc
mov
loope
mov
aam
bound
cli
stos
or
push
or
ss
inc
test
dec
pop
in
or
mov
pop
add
jb
insb
outsb
fisttpl
pop
xchg
cli
sbb
sbb
out
ret
or
sti
cmc
fstps
mov
push
mov
sbb
imul
ljmp
js
shll
dec
sbb
jmp
pop
xchg
mov
insb
mov
inc
mov
icebp
movsb
or
out
mov
call
mov
frstor
sub
insl
lret
mov
movsl
incl
xchg
repnz
push
lock
push
adc
xchg
mov
mov
adc
repz
subb
insl
lds
mov
cmp
xchg
sub
std
push
sub
fiaddl
loope
cmp
pop
jb
mov
icebp
stos
adc
cmpsl
icebp
icebp
hlt
pop
orl
cmp
sub
lods
adc
mov
cmpsb
movsb
lds
aas
push
sbb
lock
aam
nop
out
leave
testl
outsb
bound
jl
inc
sar
jmp
sub
sub
loop
xchg
sbb
sbb
jp
ret
cmp
xor
mov
mov
or
call
mov
lods
sbb
cld
out
ss
push
js
int
cmp
mov
or
out
and
rcl
push
jmp
push
aam
cmpsl
fwait
xor
xchg
push
inc
mov
aad
inc
and
in
add
outsb
xor
xchg
bnd
mov
xor
outsl
adc
inc
fcoml
or
xor
mov
les
adc
add
pusha
xchg
pop
lahf
in
pop
xchg
jl
add
push
sbbl
push
loop
test
fsubp
fnstsw
fisttps
push
adcl
ret
xor
xchg
es
sbb
sub
icebp
jmp
test
cld
lods
aas
cmp
push
mulb
adc
inc
sbb
out
lea
xor
es
test
les
test
clc
cs
cmc
mov
jbe
stos
lahf
sti
pop
aam
fadds
xlat
mov
aad
out
push
sti
add
xor
jge
loopne
das
pop
loop
add
cli
scas
mov
push
xchg
fcoml
xor
fisubrl
jae
inc
ds
and
or
clc
shrb
pop
cmpsl
push
xor
incb
data16
xor
xchg
or
mov
pop
mov
pop
ss
xchg
add
mov
cmc
sub
aaa
cmp
xchg
fildl
popa
dec
in
fcmovnb
xlat
sbb
mov
cmpsl
inc
push
test
pop
call
add
jge
sbb
data16
push
inc
sub
sbb
add
dec
xor
adc
inc
jg
sbb
or
notb
aam
xchg
push
fsts
mov
lret
mov
cmp
arpl
ja
mov
and
push
mov
je
jmp
xor
leave
xchg
push
clc
inc
movsb
or
gs
inc
pop
mov
test
pop
int
ret
sub
fstl
sub
in
mov
jmp
out
push
pop
mov
push
lds
fidivl
loopne
mov
cmpsl
stc
fstpt
or
adc
mov
adcl
mov
fidivs
or
sub
arpl
push
ljmp
inc
xor
pop
inc
mov
in
ret
xorb
insl
add
jb
repnz
aam
mov
pop
lods
int3
mov
inc
sub
aam
adc
xchg
pushl
ficoms
jmp
lcall
xor
scas
mov
fcoml
rclb
lahf
or
mov
mov
stc
por
hlt
aaa
aas
jmp
inc
insl
sarl
das
lock
or
jecxz
stos
adc
inc
mov
jo
das
in
xchg
sub
push
adc
or
push
imull
or
jecxz
sub
add
push
and
dec
in
std
and
stos
and
xor
ljmp
cmp
cltd
xor
pop
or
mov
outsb
adc
fidivrl
pushf
cmp
dec
pop
push
shlb
and
mov
pushf
jns
jb
jmp
push
in
fildll
xor
idiv
mov
cli
adc
fisttpl
fsts
pop
or
xor
sub
cmpsb
aad
or
inc
mov
ret
mov
inc
aas
pop
call
pop
push
mov
xchg
jmp
dec
imul
mov
ss
cs
xor
or
sub
mov
fldt
aad
insb
shlb
jge
xchg
jg
hlt
push
mov
pusha
pop
addr16
push
rorb
mov
movsb
aam
call
popf
inc
jb
lret
xor
cmp
push
mov
and
cmp
mov
ja
insl
daa
mov
repnz
push
jge
in
cmp
cld
push
inc
sub
in
mov
sub
add
outsl
call
cld
stos
sbb
movb
dec
scas
or
pusha
outsl
dec
and
xor
fmull
fbstp
and
aas
xchg
jns
pop
sar
inc
pop
jp
fbstp
movsl
and
push
lods
das
jl
pop
int3
iret
inc
loopne
mov
xor
push
scas
mov
or
or
in
fs
push
sti
fildll
adc
push
mov
es
pop
xchg
dec
testl
mov
les
jae
das
jl
loop
jb
or
out
dec
adc
cmp
js
inc
cmc
movsl
mov
in
les
subb
add
shr
add
push
push
inc
insl
subl
sub
lahf
inc
lea
je
and
or
in
or
dec
mov
and
dec
push
outsl
sub
xor
cld
xor
test
mov
dec
stos
daa
sub
pop
dec
jle
or
scas
or
pop
add
lods
out
addb
mov
mov
and
pop
fidivrs
jp
in
bextr
mov
test
popa
stc
gs
mov
pop
test
test
icebp
mov
shl
inc
fisttpll
call
das
enter
mov
and
fs
mov
repnz
push
mov
sbb
aam
lods
jno
rorl
add
cs
cmp
mov
or
xchg
std
mov
pop
stos
push
outsb
aas
in
add
rcll
cwtl
xor
jg
sbb
jmp
push
inc
cmp
sbb
subl
sub
add
add
cmc
insl
push
mov
data16
jecxz
fsubrs
jecxz
arpl
inc
icebp
pop
mov
subl
pop
xchg
repnz
or
std
mov
pop
sahf
add
in
push
push
lcall
jmp
iret
push
repz
inc
in
fcoml
call
rorb
les
adc
pop
fdivp
sub
int3
cmpsl
sub
out
pushf
stos
push
push
mov
mov
push
stos
xchg
pop
rorb
ret
cmc
xor
call
popa
daa
mov
aas
mov
push
or
not
inc
shl
push
orb
add
push
or
cmc
cmpsb
add
ret
mov
les
subb
les
jno
insb
leave
int
outsl
incb
sti
mov
and
cmpps
fstp
fldl
pop
mov
xor
insb
mov
mov
inc
pushf
xchg
lret
mov
or
out
in
inc
lcall
or
dec
clc
leave
in
jmp
imul
sbb
mov
jecxz
fistpll
enter
jo
call
push
adc
push
mov
pop
outsb
jecxz
loopne
lahf
push
sub
dec
push
data16
les
rcrb
fcoms
js
daa
push
or
cmp
icebp
aaa
das
test
cmpsb
and
push
repnz
cmp
inc
add
leave
sbb
fwait
dec
ja
loopew
push
cmp
das
in
jno
mov
and
xlat
jbe
in
xchg
xchg
aaa
adc
mov
add
daa
xchg
push
inc
mov
or
mov
ljmp
hlt
cmp
sti
adc
inc
aas
inc
dec
cmp
mov
mov
adc
sti
or
fildll
xor
f2xm1
in
add
mov
inc
lret
call
adc
loope
decl
xor
inc
pop
xlat
out
jmp
dec
or
sarl
jl
fidivl
js
je
aad
dec
and
jne
pop
xchg
jmp
mov
jg
loop
dec
sbb
out
jp
pop
xor
mov
rolb
push
sub
pop
pop
inc
mov
loopne
fcmovne
pop
sbbb
dec
jecxz
dec
enter
cmp
pop
cmpsb
jmp
stos
push
inc
mov
lock
jno
xor
dec
mov
mov
mov
ljmp
sti
popf
add
test
jmp
in
daa
or
andl
mov
xchg
or
scas
or
js
mov
filds
fisubl
cmp
mov
jo
cli
lcall
or
xchg
adc
mov
out
inc
daa
mov
loopne
add
test
xchg
out
sbb
add
cld
leave
pop
subb
pop
pop
cmc
fistl
loop
jp
xchg
cwtl
pop
and
or
pxor
mov
or
pusha
call
outsl
loop
sarb
adc
and
ret
scas
mov
ret
or
xor
dec
outsl
je
outsl
clc
movsl
lds
mov
ja
cmpsb
test
jp
lret
push
int3
jge
mov
pop
jecxz
insl
and
push
sbb
sub
sti
fistl
test
jb
xchg
dec
mov
cld
lahf
jg
pusha
pop
mov
adcl
fisttpl
lahf
mov
xchg
inc
icebp
imul
add
xor
cmp
adc
sbb
lcall
negb
rcll
mov
test
xorb
mov
iret
adc
sbbb
pop
int
push
es
and
sbb
dec
dec
mov
sub
cmc
pop
jo
fdivrl
add
orl
pop
js
popa
jae
pop
push
aam
jns
cwtl
out
jecxz
inc
outsb
das
mov
push
test
mov
jl
mov
and
subb
imull
mov
js
mov
xchg
add
sbbl
out
loopne
bound
inc
into
mov
test
addl
test
add
mov
int
out
or
sbb
jle
mov
mov
mov
inc
scas
push
mov
pop
push
outsl
inc
push
xor
icebp
inc
shl
scas
ljmp
call
js
notb
and
test
adc
lock
push
and
mov
mov
filds
stos
popf
shrb
mov
mov
xchg
mov
dec
jp
cli
shlb
add
lahf
cld
movsl
lea
and
pop
fsubrl
or
sbb
test
mov
cli
cltd
or
rcrb
outsb
test
mov
sbb
jo
pop
inc
cld
aam
mov
movl
in
aas
fcomp
dec
jmp
inc
fs
out
dec
jg
inc
adc
test
rcl
add
mov
in
cs
cmp
inc
xor
in
mov
std
mov
push
imul
les
inc
jge
or
or
cld
shlb
insb
adc
dec
add
in
outsl
ljmp
sbb
xor
xchg
das
orl
icebp
xchg
popf
in
xchg
ret
outsl
jns
sub
jg
adc
jo
lock
xor
push
inc
adc
je
xchg
das
xchg
dec
mov
adc
cmp
or
jbe
jnp,pt
jbe
loope
mov
sbb
nop
ret
loop
prefetchwt1
add
or
dec
or
cmp
loop
mov
sub
and
adc
jl
or
pop
xchg
jge
pop
xlat
pop
sarb
sub
les
mov
mov
in
sti
and
cli
cmpsb
jl
mov
in
daa
pop
shrl
pop
dec
insl
decl
addr16
out
xlat
cld
out
enter
adc
fiadds
lock
xchg
pop
mov
inc
mov
loopne
inc
add
mov
iret
jb
or
mov
or
stc
push
cld
pop
mov
sub
ja
shlb
outsl
dec
call
sbb
fistpll
cmp
stos
inc
mov
or
in
add
cmp
leave
cmp
fcmovnb
out
mov
sub
pushl
lret
inc
inc
adc
push
imul
dec
push
inc
adc
mov
dec
cmp
pop
fisubl
cmp
fbstp
add
loope
xor
adc
mov
jbe
lea
inc
fsts
xlat
fsubs
lea
lods
pop
sub
cmp
iret
outsb
add
xchg
fidivs
in
mov
jmp
adc
jne
notrack
mov
fdivr
xchg
out
and
rorb
mov
jo
push
test
outsl
lock
mov
fiaddl
sbb
pop
mov
mov
xchg
rorb
push
cmpsb
mov
adc
adc
jp
add
fdiv
dec
loopne
jbe
insb
mov
adc
in
ljmp
mov
lret
in
faddl
adc
cli
repnz
inc
insb
orb
mov
imulb
mov
loope
imul
push
das
push
nop
rol
roll
lods
mov
sbb
push
repnz
mov
aas
mov
pop
clc
or
stos
test
js
mov
cmp
mov
cli
sub
xchg
loop
push
pop
mov
in
aad
iret
je
mov
test
cmp
or
test
jp
mov
aas
jno
push
es
sbb
insb
inc
enter
mov
idivl
aad
mov
insb
into
inc
mov
pop
mov
cmp
mov
outsl
les
dec
xchg
sbb
cld
test
fsubrl
divb
int3
and
js
lea
jle
out
jle
jecxz
xor
cltd
lock
mov
xchg
jnp
or
mov
add
inc
lahf
cmove
sarb
jns
mov
ja
add
sbb
jecxz
sub
cmp
jg
xchg
pusha
pop
push
testb
and
in
outsl
iret
ret
fdivs
add
insb
pop
mov
cmc
cmc
nop
fs
loope
aad
test
sbb
mov
mov
pop
adc
xchg
loop
mov
aad
mov
loop
adc
xchg
dec
rolb
push
rcrb
fs
push
lods
lods
fildl
pop
pop
aaa
dec
fists
ss
jmp
and
movsl
fnstsw
imul
pop
cwtl
add
push
rcl
insl
xrelease
loope
xchg
nop
ljmp
sub
inc
inc
sub
scas
popl
adc
js
outsl
faddl
mov
adc
ffree
adc
call
mov
insb
inc
mov
jge
add
inc
mov
cltd
inc
pop
fdivs
cmpsl
cmpsl
in
inc
push
mov
hlt
and
xchg
jge
add
std
aaa
int
mov
dec
xchg
in
cli
jbe
pop
mov
inc
xchg
jl
mov
daa
sub
out
sub
jbe
mov
mov
push
dec
in
stos
loop
dec
addr16
ja
rcrl
fidivrs
dec
push
mov
sub
or
mov
xchg
fxch
pop
shrb
jbe
adcl
add
test
stos
loopne
out
and
push
jns
jne
lods
mov
rorl
imul
push
sbb
pop
fnstsw
call
stos
mov
sbb
xchg
xor
pop
xor
aam
jmp
outsl
and
pop
add
push
cmpsl
jg
fistpll
inc
cmp
pusha
pop
mov
js
push
shl
call
enter
jb
jnp
pop
mov
insl
mov
jb
jo
dec
xor
add
das
xchg
pop
es
int3
mov
scas
or
mov
xlat
bound
in
das
cld
outsl
fildll
stos
sbb
movsl
ret
pop
xor
arpl
xchg
mov
or
push
insb
mov
add
pop
adcl
xor
test
aas
mov
jg
ljmp
pop
xchg
mov
mov
sbb
add
bound
aam
pop
aaa
pusha
stos
outsb
stos
mull
adc
add
shl
lret
mov
loop
inc
pushf
sub
aas
out
fwait
repz
clc
inc
inc
fdivs
sub
xchg
push
ja
loope
outsb
fsubrl
and
fsubrl
jne
rcr
mov
pop
movsb
cmpxchg
xchg
cmpsb
fstl
mov
ja
mov
mov
jg
mov
das
lret
std
dec
int3
sbb
push
mov
cld
mov
daa
outsl
mov
mov
incl
loopne
fucomip
mov
test
pop
push
inc
sbb
and
fstpt
jbe
and
xor
std
insl
jmp
sti
jno,pn
jb
or
imul
inc
lret
sub
and
ja
push
push
or
enter
jbe
jnp
cmp
gs
xchg
mov
xor
adc
je
js
stos
or
jge
adc
mov
sbb
test
add
jle
add
movsl
cs
clc
fists
mov
add
jl
addl
lods
popa
push
jo
mov
icebp
inc
mov
pop
clc
xchg
pop
stos
hlt
push
imul
jo
pop
daa
push
push
fwait
xor
mov
fistpl
out
mov
mov
lret
push
and
sub
push
jl
sar
lea
xor
inc
adc
lea
das
shr
push
cmc
xchg
ss
cmpb
out
mov
les
es
pushf
les
or
cwtl
mov
loopne
outsl
mov
jmp
xchg
xchg
sahf
inc
outsb
incb
jbe
outsb
bound
push
or
inc
lods
adc
push
into
sbb
xchg
jg
mov
and
inc
push
mull
or
idivl
cmp
lcall
sti
pop
dec
pop
ds
aad
es
cmp
leave
sbb
neg
sbb
dec
ret
or
mov
inc
mov
and
mov
les
add
push
orl
xlat
out
add
fcompl
das
jge
fwait
mov
cltd
push
repz
or
mov
add
loopne
mov
pop
sub
add
aam
and
xchg
pop
bound
mov
std
and
jnp
ffreep
data16
lock
les
clc
jb
jb
ret
sbb
ret
jno
enter
cmpsb
loopne
cld
mov
sbb
popl
mov
mov
xor
xchg
mov
call
inc
jl
xchg
xor
inc
xor
dec
lahf
xor
adc
mov
fisubrl
push
popl
hlt
pop
insl
mov
mov
iret
push
es
dec
jmp
mov
sub
push
popa
sbb
or
mov
ljmp
add
jno
inc
loopne
inc
inc
pop
cmp
or
sbbl
gs
les
push
pop
loop
inc
xchg
ret
sbb
inc
inc
pushf
in
sbb
push
cmp
mov
mov
jle
int
es
mov
cli
ja
inc
lea
dec
gs
adc
stos
bound
ljmp
mov
or
pop
shlb
shrb
push
bound
xchg
imul
xor
or
inc
fcmovnu
mov
add
mov
int
push
and
jle
add
adc
sbb
outsl
lcall
je
movsb
or
or
add
jno
vcvttss2si
xchg
or
jbe
mov
imul
inc
insl
and
dec
mov
sti
mov
add
jp
fwait
ljmp
inc
sub
adc
sbb
fcoml
in
xchg
dec
aaa
icebp
testb
and
jae
test
xor
and
lret
cli
dec
xlat
push
add
add
out
or
inc
inc
inc
dec
mov
popa
cli
repz
inc
bound
rcrl
pop
xchg
push
pop
pusha
jnp
test
loope
adc
test
aad
mov
in
lret
aam
cmpl
test
dec
insl
fcoms
xchg
jno
and
add
scas
movsb
outsl
jno
aad
mov
imul
push
outsl
sahf
cwtl
adc
cmpsb
lahf
popf
mov
jg
lock
dec
icebp
ret
dec
jae
mulb
push
call
sub
insl
push
incl
lds
enter
xor
pop
push
cli
jg
int3
adc
mov
sbb
inc
fdivl
push
add
loop
lret
push
xchg
xchg
sub
jb
push
sub
addr16
outsl
adc
aad
in
adc
push
push
lea
push
and
rcll
push
sub
mov
push
and
mov
pavgb
aam
aaa
aas
and
lea
pop
inc
adc
fmuls
mov
inc
lcall
das
mov
jg
nop
dec
sub
popa
imul
jl
mov
and
dec
jge
and
mov
loop
repz
loopne
add
cmp
add
cld
add
mov
add
inc
mov
cmc
mov
shlb
lcall
inc
pop
sub
dec
les
adc
xchg
sbb
stos
cmpsb
loope
imulb
mov
rcrb
rclb
inc
mov
mov
and
lods
sub
dec
cmp
cmp
jge
jle
ja
push
xorb
sbb
jne
lods
adc
scas
lea
xchg
ljmp
dec
and
xlat
fldl
add
mov
icebp
pusha
push
loope
push
outsl
xor
push
push
std
pop
and
lods
dec
sarl
outsb
test
enter
inc
mov
fnstenv
loope
loop
ss
sub
and
push
mov
lret
or
jnp
filds
xchg
and
xchg
hlt
lea
mov
daa
sub
sbb
cld
bound
insl
and
lahf
fs
mov
add
lret
pop
outsl
jp
pop
pop
sub
inc
stos
mov
jo
mov
divb
outsb
mov
push
inc
loop
adc
push
dec
mov
insb
pusha
sbb
mov
mov
rcl
add
stos
aas
sub
fcoms
sub
test
cli
ja
mov
pop
scas
and
call
je
inc
mov
das
push
or
inc
inc
mov
cmpsl
arpl
fs
xor
mov
lret
test
sub
mov
cmp
cmpsl
push
push
fs
adc
leave
fisttpl
outsl
mov
push
xor
adc
pop
mov
jb
mov
mov
xchg
sbb
mov
loop
aad
cs
inc
inc
scas
mov
push
xchg
xor
cmp
in
sub
adc
insb
aaa
add
ret
xchg
ficompl
dec
das
jle
inc
pop
mov
cmpb
adc
arpl
xor
sub
lea
fucomp
sbb
mov
fwait
sub
fsub
out
fbstp
int3
mov
fneni(8087
loopne
sub
pop
dec
popf
je
inc
xlat
inc
lock
push
pop
adc
mov
jbe
pop
in
push
hlt
cmp
jb
loopne
add
or
es
loopne
or
subb
movsb
push
fildl
aas
jmp
mov
jb
adc
cmp
cld
and
sbb
or
in
push
sbb
inc
jp
fildll
dec
ror
iret
add
les
jl
xor
push
xchg
pushf
jne
loope
outsl
jle
mov
gs
push
sbb
lea
call
test
loope
fistps
mov
push
and
xchg
push
fsubrl
in
dec
les
rcr
sub
cmc
mov
and
xor
in
adc
pop
adcb
mov
jno
cmp
das
cld
mov
adc
pop
mov
xchg
mov
mov
mov
or
imul
sub
inc
xchg
add
lret
lahf
and
push
ss
test
stos
mov
cmp
filds
xchg
xor
cmp
orl
push
ds
rcll
aad
insl
sbb
mov
sub
lods
xlat
jb
mov
rorl
outsl
push
xchg
jge
ret
das
jo
js
test
leave
add
cmp
dec
popf
pop
add
mov
mov
pop
sub
jle
test
inc
popa
mov
adc
mov
js
test
ret
and
sarb
jp
jo
cmp
xchg
sub
arpl
aad
mov
ds
sub
mov
sbbl
xor
push
adcl
pop
sub
fcmovnb
xchg
fimuls
imul
dec
and
jns
sbb
loopne
adc
movsb
and
call
inc
and
push
sbb
lcall
push
icebp
inc
leave
sbb
orb
xchg
adc
rcll
aaa
inc
leave
xor
and
movsl
or
je
iret
sbb
cli
neg
mov
mov
xchg
iret
pusha
aad
cmp
test
xor
push
mov
pop
mov
and
adc
ret
mov
or
push
cmp
pushf
repz
sub
and
adc
pusha
movsb
push
inc
ss
mov
pop
mov
pop
ficompl
xor
rorb
jmp
faddp
xor
cli
movsl
jnp
shrb
lock
sub
ja
mov
and
test
add
pop
push
dec
addb
cli
mov
or
rorb
or
icebp
mov
andl
out
xor
in
jg
loope
pop
or
mov
mov
je
or
inc
loop
pop
jle
insl
adc
leave
adc
xchg
and
frstor
daa
into
jmp
or
add
jns
inc
or
in
fs
mov
adc
cmp
adc
pushl
test
and
lret
adc
inc
je
jecxz
ret
movsl
pop
stos
aaa
adc
jp
scas
insl
repz
sub
push
cwtl
fiadds
jle
mov
outsl
lcall
into
pop
iret
xor
idivb
jnp
data16
testl
testl
xchg
or
adc
testb
add
adc
hlt
scas
in
dec
daa
jbe
dec
mov
call
cld
adc
aaa
cmp
ss
pop
fnstcw
mov
lods
mov
jbe
test
push
add
inc
or
cmp
scas
mov
push
fimull
mov
push
mov
jne
sbb
movb
xchg
pop
push
and
cmp
test
loopne
notb
in
mov
in
fyl2x
jge
js
ret
imul
and
ljmp
ret
jecxz
or
xchg
mov
xchg
in
pop
sbb
and
or
dec
cmpsb
dec
fisttpl
lods
loop
inc
xchg
and
mov
and
sub
and
test
movsl
inc
push
aas
ss
imul
repnz
sbb
stos
inc
sbb
or
push
mov
sarl
bound
mov
add
fisttps
imul
xchg
aaa
cli
leave
cltd
popf
fsts
outsl
mov
out
sti
or
pop
sbb
mov
push
xchg
push
jb
decl
pop
dec
lods
testl
xchg
and
pop
add
adc
mov
sub
test
in
or
scas
stc
push
sbb
inc
mov
fistl
sbb
testb
mov
adc
lds
xor
mov
shrl
mov
jnp
jge
movsb
pop
mov
fdivs
insb
addl
jge
push
jno
in
mov
jg
nop
mov
cmp
pop
lcall
ljmp
adcl
out
pop
sbb
insb
push
and
add
xchg
xor
jge
ss
jge
mov
add
sub
mov
jnp
cmpps
cs
or
in
adc
and
dec
pusha
sarl
adc
and
into
fsubl
add
daa
dec
jl
adc
outsl
push
lods
xchg
push
mov
test
and
xor
cli
sbb
lahf
mov
in
mov
or
repz
mov
icebp
sbb
addb
mov
dec
xchg
jae
mov
bound
sbb
bound
in
stos
ljmp
imul
inc
jecxz
psubb
loopne
jecxz
or
shll
scas
mov
dec
lret
testb
call
lds
dec
mov
scas
inc
test
jle
lds
call
add
imul
inc
adc
adcl
mov
loope
inc
cltd
mull
lock
add
jns
into
add
push
ja
jp
test
push
pop
ss
inc
xor
dec
js
cli
xchg
pop
pop
xchg
repnz
dec
dec
aaa
mov
xchg
mov
cmpsl
int
inc
or
mov
mov
dec
jae
ficoms
push
jnp
ljmp
outsb
fcompl
add
jne
or
push
or
jg
scas
jb
cmp
or
enter
cld
or
mov
sahf
inc
mov
int
push
mov
add
mov
lock
xchg
or
push
shlb
in
or
aaa
inc
xchg
fisttpl
add
sbb
or
push
lret
sbb
rcrl
add
mov
repz
ret
mov
xor
nop
repnz
sub
test
cmp
xchg
adc
pop
push
loop
pop
loope
sbb
pop
inc
sbb
loopne,pn
dec
lods
inc
pushf
mov
cmpsb
mov
mov
jecxz
jns
inc
addr16
mov
loope
insb
sub
sahf
xchg
add
inc
fdivl
in
loop
fistps
pop
out
test
fisubl
mov
push
test
pop
adc
aam
aad
movsl
or
push
push
add
js
fwait
pop
pop
fmuls
jnp
adcb
fistl
xor
loopne
shl
aas
pop
jl
xchg
jle
ficomps
ds
adc
dec
je
jle
push
dec
jb
xchg
fcmovb
mov
adc
ret
push
aam
jo
jl
aam
xchg
fwait
jecxz
xchg
or
fst
sbb
dec
adc
shl
or
mov
xchg
or
and
mov
or
lock
dec
imulb
inc
sbb
outsl
aaa
shrb
inc
sarb
xchg
movsl
lret
sahf
movsl
mov
add
insl
rclb
bnd
bound
sbb
lahf
push
clc
push
call
jp
push
fcmovbe
jmp
adc
mov
mov
pop
or
in
adc
scas
mov
imul
xchg
ss
jns
add
push
mov
adc
fsubl
outsb
test
stos
dec
jp
mov
nop
pop
mov
mulb
jne
jne
inc
test
dec
das
inc
adc
dec
mov
fucomip
dec
mov
or
mov
aad
test
dec
lock
sbb
fcoms
and
mov
xchg
sbb
adc
lcall
pop
sub
popf
hlt
ja
das
mov
sub
push
inc
dec
int
adc
test
jle
adc
rclb
and
and
jne
stos
les
adc
fadds
andl
jg
jnp
mov
popa
inc
sub
loop
jmp
sbb
nop
shlb
adc
in
xorl
ss
inc
cmpsl
mov
test
lcall
sub
adc
stos
outsb
loopne
and
mov
sbb
add
das
xor
xchg
in
push
mov
xchg
cmp
or
add
adc
aaa
mov
adc
aam
sub
fistl
mov
roll
add
int3
mov
aaa
jle
mov
outsl
inc
sub
adc
push
hlt
mov
lock
dec
mov
xchg
mov
out
sbb
mov
cli
cs
lods
mov
imul
repnz
jecxz
inc
cld
jbe
push
sahf
mov
pop
sub
fisttps
loop
mov
in
dec
or
push
mov
cmpsb
cmp
jnp
ds
push
test
mov
and
and
sti
lcall
pop
fnsave
mov
cltd
mov
cmp
fdivs
fists
mov
inc
shrl
mov
mov
mov
mov
xchg
adc
adcb
jo
mov
nop
mov
xor
shlb
dec
adc
jo
push
shr
xchg
push
cs
out
cwtl
out
hlt
ret
shll
out
pusha
fwait
scas
popf
clc
sbb
push
inc
je
mov
test
std
and
pop
push
pop
pop
loope
arpl
je
pop
int3
cmp
jecxz
movsl
mov
pop
inc
andl
negb
mov
test
sub
jp
rcll
in
adc
and
aaa
pop
mov
mov
dec
mov
and
mov
push
pop
xor
loopnew
mov
scas
adc
aas
push
test
pop
sbb
mov
pop
push
inc
inc
mov
jg
rclb
jne
jmp
inc
cmp
mov
lods
cmpsl
inc
adc
add
mov
push
pop
and
and
outsl
sbb
jb
or
mov
push
movsl
loop
ja
mov
loopne
clc
xchg
xchg
fs
and
push
mov
idivb
mov
jbe
mov
ja
test
loope
pusha
adc
mov
or
das
fdivl
je
cld
and
xchg
sbbb
mov
dec
mov
or
cmpb
pop
popa
loop
or
mov
xlat
xor
sbb
stos
dec
adc
jmp
mov
mov
xchg
std
jp
daa
cmp
pop
lea
sbb
ret
test
pop
pop
adcl
sbb
or
add
cmpl
ret
sub
mov
mov
xor
fcmovu
mov
and
sbb
testb
data16
ja
mov
cmp
jb
fs
inc
pop
sbb
mov
cwtl
jbe
scas
ss
xchg
sbb
mov
sbb
xor
push
stos
sbb
cmc
sbb
and
cwtl
dec
jae
adc
cmp
cmp
lds
xchg
cwtl
fdivrl
outsl
sahf
clc
pop
andl
cltd
pop
mov
add
ret
loope
iret
add
xlat
add
or
inc
sbb
loop
push
pop
mov
mov
jbe
cs
jge
xchg
cmp
js
pop
sub
pop
mov
push
or
in
xchg
js
xchg
call
je
lds
pushf
xchg
je
cmp
mov
mov
jle
mov
sbb
push
jo
mov
cmp
jnp
lret
dec
ja
mov
ljmp
xor
or
das
jmp
out
aam
push
and
pop
mov
xor
pop
repnz
cltd
or
dec
je
loope
cmp
in
xor
mov
cli
mov
inc
rcll
iret
inc
adc
push
out
sbb
iret
loopne
leave
ja
aam
or
and
mov
pop
ja
sub
add
push
sub
fcmovnu
ror
sub
add
lahf
testl
mov
arpl
xorb
mov
jge
xchg
mov
inc
and
sub
insl
add
mov
pop
add
mov
adcb
fidivrl
lock
int3
sbb
cld
movsl
mov
dec
adc
pop
xor
push
jne
lods
fwait
or
inc
cmp
cmp
push
jge
mov
adc
and
lods
stos
lock
dec
and
ljmp
or
stos
sbb
cmc
rol
adc
jecxz
xor
jbe
jl
jg
iret
inc
add
and
mov
and
dec
andl
sti
mov
daa
add
sahf
cmpsl
mov
or
cmc
cmp
or
lahf
push
dec
stc
adc
imul
xchg
and
into
jno
add
xchg
in
cs
mov
sarl
sbb
push
cmp
test
sti
adc
movsb
and
test
xchg
adc
imul
int3
cmp
mov
jg
inc
or
test
sub
lret
inc
lods
mov
or
xor
or
or
dec
std
ret
cmpsb
enter
rcrb
cs
add
cmp
push
mov
jle
scas
pop
sbb
dec
iret
pop
and
dec
mov
sahf
or
push
adc
push
and
dec
decl
imul
out
out
push
push
push
xor
adc
jne
inc
push
ret
push
push
jns
push
cmpsb
jmp
inc
jmp
fisubl
pop
out
pop
rcl
outsl
mov
test
push
jmp
and
sub
push
jp
mov
push
daa
inc
inc
rcrl
lods
loopne
xlat
sub
shlb
mov
xlat
and
inc
and
xor
mov
aaa
mov
lea
aaa
inc
movsb
lcall
jmp
roll
mov
jl
shr
pop
outsl
popa
pop
rorb
lahf
and
and
inc
loopne
mov
xor
lretw
add
ja
movsb
mov
and
out
stos
int
push
jo
mov
mov
femms
push
sbb
push
mov
insb
test
sbb
push
dec
shll
ljmp
push
mov
xchg
cltd
fcmovnu
inc
aaa
jle
jecxz
fildll
addb
cmp
ljmp
xchg
test
aaa
dec
out
ljmp
shlb
cmpl
jl
roll
mov
xor
nop
data16
cmc
sahf
jge
stc
subb
bound
inc
add
outsl
add
jg
mov
test
adc
jo
das
adc
pop
adc
lahf
pop
outsl
pop
test
mov
push
xchg
and
scas
fwait
jecxz
aaa
je
popa
sbb
dec
inc
cmpb
pop
xor
loop
inc
mov
ljmp
ret
push
popa
add
adc
cmp
sti
cltd
jle
xor
jl
xor
cmp
sbb
adc
push
xor
ret
and
cld
inc
add
ret
sub
jecxz
sbb
xchg
dec
jne
fisttpl
and
andl
xchg
xchg
popf
push
mov
cmp
mov
adc
cmp
cs
pop
xor
jecxz
mov
out
out
leave
xchg
xor
mov
std
xchg
xchg
dec
mov
or
mov
lods
push
jno
push
sbb
in
stc
mov
les
or
jmp
clc
sbb
jns
fs
push
and
xlat
incl
xchg
sti
fsubr
gs
sti
fsubs
jae
fidivrl
sbb
pop
insl
outsl
fstl
pop
xchg
add
imul
xchg
cmc
mov
jecxz
push
call
pop
or
xlat
rol
gs
mov
xchg
inc
pop
es
js
out
imul
mov
ds
push
push
pop
hlt
sbb
add
mov
sub
jbe
mov
imull
lods
pop
cltd
push
rclb
les
pop
pop
dec
outsb
cmp
push
jp
jb
and
or
or
xor
lods
inc
test
adc
sbb
ja
mov
rol
mov
xchg
cmp
hlt
repnz
ret
cld
adc
sbb
int3
add
lods
lahf
clc
insb
mov
and
scas
lea
and
jne
add
mov
dec
insb
and
and
mov
sub
cwtl
add
rorl
push
shr
dec
loope
ja
mov
subl
out
inc
sbb
inc
sub
clc
add
jecxz
push
bnd
rorb
mov
loope
leave
push
xchg
int
jno
stc
and
add
testb
pop
add
popa
add
pop
mov
sub
and
imul
rorl
aaa
fldl
mov
push
inc
or
mov
jb
adcl
cmp
push
mov
mull
fwait
or
xchg
xor
ficomps
and
jmp
xor
stos
stos
sbb
xlat
and
cmpsb
jp
jo
xchg
jg
inc
mov
cmp
push
bound
loope
adc
mov
lahf
aad
mov
shlb
mov
sub
orb
fistpl
mov
mov
sbbb
and
data16
rclb
cmp
lds
rcll
stos
data16
divl
mov
mov
sub
sbb
fsub
pop
test
pop
push
gs
dec
sub
inc
enter
ja
pop
lcall
bound
gs
mov
pushf
adc
inc
fxtract
aam
mov
outsb
icebp
outsl
out
fisttps
lea
daa
mov
push
xor
add
sbb
dec
jle
fcom
call
add
aad
sti
push
sbb
xchg
aaa
dec
jp
push
jg
lods
outsl
mov
sub
mov
andl
mov
push
imul
es
jge
push
lret
out
out
add
or
push
mov
fiaddl
xlat
addr16
sbb
and
lods
pop
aaa
aaa
data16
mov
sbb
daa
cs
imul
pop
shl
push
add
inc
sub
in
arpl
pop
push
or
adc
lret
out
push
inc
ss
mov
push
loopne
pop
inc
mov
or
faddp
push
mov
inc
negl
adc
push
ss
adc
and
cld
xchg
mov
or
test
popf
xor
mov
jp
dec
movsb
and
lcall
outsl
inc
inc
cmp
cmpsl
pop
dec
inc
es
imul
bound
inc
imul
dec
ficoms
xchg
sbb
xor
ljmp
dec
and
add
jno
repz
push
xlat
ret
loop
fistpl
jno
pop
jge
push
cmpsl
jae
bound
in
into
mov
nop
repz
test
shrb
repnz
and
outsb
xor
and
notb
mov
lahf
add
scas
andb
lods
mov
sbb
sub
mov
mov
cld
int3
xor
mov
ja
sub
pop
sub
sarl
push
mov
push
fisubrs
ss
aas
lods
dec
jl
adcb
and
pusha
scas
add
sahf
sbb
push
fsubrl
sbb
push
stos
imul
enter
incl
movsl
or
ds
pop
adc
xchg
insb
fstps
sbb
das
pop
jp
fnstcw
lcall
enter
or
sti
or
mov
lock
sub
jecxz
fcompl
lahf
mov
lea
pushf
pop
dec
mov
mov
mov
pop
out
and
icebp
movsb
mov
mov
mov
stos
les
push
lahf
call
push
mov
in
out
adc
sti
push
les
enter
cmpsl
push
movb
test
or
call
fsub
xchg
xor
add
mov
jge
outsl
cld
inc
cmpsb
jg
aaa
and
aaa
sub
adc
inc
inc
or
and
jecxz
sub
mov
pop
and
mov
xorb
or
mov
shll
jg
arpl
or
pop
fs
test
in
dec
pop
clc
shl
mov
aad
iret
mov
shr
ret
cwtl
push
or
and
push
lods
mov
jnp
pusha
mov
clc
xchg
cmp
pop
cwtl
xchg
push
mov
lea
add
pop
cmp
lahf
mov
fwait
or
pop
lds
lods
xchg
jle
and
movsl
stc
into
pop
inc
rcl
scas
ret
push
inc
add
add
icebp
pop
ss
xchg
enter
push
inc
adc
push
sti
or
inc
mov
cmp
sub
ljmp
push
jae
lahf
mov
test
inc
pop
mov
hlt
fcomi
mov
sbb
lds
jne
push
out
fiadds
leave
shll
adc
cmp
or
dec
push
lahf
inc
ja
mov
stos
ficomps
nop
xchg
mov
jle
aaa
pop
cwtl
into
les
cvtps2pi
ljmp
ror
inc
or
es
das
push
dec
sahf
lcall
dec
sbb
mov
incb
pop
lods
mov
adc
cmp
lods
mov
test
sbb
out
cmp
ss
dec
push
jge
movsl
cld
divb
cs
popa
jmp
xor
jo
in
sub
push
sbb
xlat
add
cmovno
pop
sbb
sar
add
cmp
jmp
imulb
in
pusha
pop
cli
mov
add
or
sub
sbb
adc
inc
or
and
les
push
popa
push
imul
and
pop
xchg
outsl
es
adc
pop
mov
pop
test
jbe
push
and
sub
insl
push
mov
sahf
loopne
out
fsqrt
insb
sahf
fnstenv
ret
js
das
adc
clc
in
enter
jecxz
push
add
hlt
in
shrb
fs
adc
in
xchg
das
ficoms
mov
sub
nop
sbb
inc
fs
add
jmp
call
mov
and
mov
fisubrs
lods
repz
push
icebp
mov
ficoml
mov
std
mov
jne
insb
cld
out
insb
push
adc
sbb
addb
fisubl
scas
in
mov
mov
add
and
push
or
arpl
test
or
pop
mov
mov
mov
adc
ss
das
adcl
cmpsl
xchg
mov
mov
xchg
movsb
add
pop
mov
aad
and
sbb
mov
test
inc
xchg
call
cmp
movsl
and
loop
xorb
das
mov
mov
loop
aas
add
pop
pop
pop
cmp
add
mov
dec
out
fistpll
loopne
cwtl
in
and
pusha
fstpt
outsl
push
push
rolb
sub
or
enter
incl
lock
aaa
adc
xor
in
push
dec
scas
and
push
push
fcmovnu
fisubrl
je
push
pop
jl
xlat
sbb
cmp
pop
and
mov
jb
fists
add
sub
fwait
cmpb
sub
cli
out
ficompl
sbb
dec
into
mov
push
xchg
shrb
fcoms
push
mov
test
xor
push
scas
ss
outsb
rolb
sbb
rorl
mov
add
cli
or
pop
xor
xchg
pop
jae
insb
or
arpl
je
jno
mov
loope
cmc
pop
lock
mov
pop
in
ret
mov
int
fstpt
jg
xor
jp
in
jge
mov
sub
sbb
out
inc
sti
decl
and
jg
call
ss
or
clc
sti
sub
inc
xor
icebp
or
insb
out
sub
addl
xchg
add
jb
inc
xlat
mov
xor
push
popf
jge
and
call
sub
ljmp
xchg
out
jle
jg
mov
sarb
cmp
insl
arpl
mov
mov
scas
enter
test
lds
outsl
add
cmc
rolb
gs
push
jne
fdivl
dec
shrl
sub
out
inc
and
lds
xchg
add
push
sub
dec
jg
or
in
xchg
test
mov
add
inc
ret
call
stc
xchg
out
xor
jl
loopne
aam
cld
stos
ds
pop
mov
mov
mov
inc
push
xchg
cmc
mov
mov
std
ret
or
mov
loopne
mov
xor
push
loop
add
push
mov
dec
stos
add
in
stos
outsl
jg
or
lods
fs
xor
jo
add
pusha
es
clc
dec
in
sbb
movsl
in
push
xor
push
cwtl
es
push
in
in
mov
aas
push
jnp
fsts
dec
mov
adc
push
insb
inc
pushf
jo
mov
mov
mov
push
mov
jl
jbe
dec
xor
in
pop
insb
js
rorb
mov
dec
ljmp
cltd
pop
mov
rcrb
fistps
adc
incb
mov
sbb
sub
and
sbb
dec
jp
gs
jecxz
mov
addr16
xchg
dec
in
test
lds
in
jbe
hlt
dec
mov
shr
pop
mov
testb
pop
cmp
ret
xchg
cmp
cmp
or
aaa
mov
imul
jmp
adc
push
scas
jne
add
fxch
inc
sub
bound
push
sbb
pop
das
insb
loopne
aas
or
aas
imul
inc
loop
inc
ds
pop
inc
aad
mov
pusha
sbb
sbb
lock
jle
mov
pop
xchg
sub
jecxz
lahf
loop
push
cmp
test
mov
popa
dec
lret
pushf
xchg
mov
icebp
and
scas
or
jmp
pop
mov
push
lds
dec
jne
pop
sub
xchg
dec
dec
xor
mov
movb
or
int
jg
mov
notl
aad
mov
sub
movsl
mov
test
arpl
push
xlat
jg
mov
adc
mov
shr
cli
dec
shrl
jo
push
dec
ja
push
clc
outsl
fstpt
ret
or
arpl
sub
jmp
pop
ja
pop
sub
ds
adc
push
aam
push
aad
dec
idivb
outsl
or
mov
mov
or
adc
cltd
movsl
jmp
je
mov
xlat
mov
int3
orl
ds
pop
ss
fildl
insb
mov
or
and
pop
loopne
mov
je
inc
and
mov
aas
out
pop
inc
cmp
xor
movsl
pop
push
inc
cmp
enter
mov
dec
aad
int
cwtl
ljmp
aaa
lds
push
icebp
clc
lret
les
or
stos
repz
stos
lcall
sbb
push
add
aaa
mov
ficoml
dec
les
sbb
fmuls
fbstp
loop
and
xchg
add
jl
js
fwait
clc
out
mov
in
add
loop
rcr
mov
loope
jae
in
das
inc
pop
push
js
inc
icebp
cltd
aas
cld
insb
push
addr16
icebp
xchg
ficoms
dec
sub
or
jb
jmp
fcompl
mov
dec
lock
mov
faddp
adc
movsb
imul
add
sarb
out
xchg
js
jle
arpl
xor
into
mov
mov
push
mov
xchg
js
xchg
xchg
cmp
incb
cmp
test
push
jne
inc
lds
and
inc
xchg
dec
ss
ja
repz
add
js
dec
push
fldt
add
test
push
insl
mov
insb
adc
nop
fnstsw
add
nop
stc
jae
imul
nop
dec
ja
fidivrs
addr16
adc
jae
mov
mov
push
push
insb
cwtl
push
add
jbe
xchg
sbb
jl
outsb
dec
xor
push
mov
aam
xor
jg
pop
cld
mov
rcr
sub
jmp
fnstcw
sbb
fistpl
add
call
jg
fcoml
xor
gs
mov
negb
adc
loopne
xchg
in
mov
pop
mov
mov
sti
cmp
xchg
repnz
mov
push
insl
outsl
ljmp
loop
pop
mov
push
or
rolb
sti
cli
int3
xacquire
cmp
nop
xorl
add
push
inc
sti
scas
sub
aas
loop
inc
push
andl
xchg
imul
fadds
data16
rolb
adc
inc
push
push
xchg
pop
jg
mov
sbb
nop
dec
sbb
js
jns
pushl
jp
jne
mov
xchg
in
inc
cld
mov
sbb
pushl
aam
adc
bound
dec
push
movntps
add
fstps
or
es
adc
pop
cltd
fld
xchg
push
add
out
pop
add
xor
xchg
nop
cmp
mov
mov
shl
cmp
stos
push
mov
cmp
repz
xchg
cmc
mov
ljmp
cltd
stos
sub
aam
jle
arpl
fnstsw
ja
sbb
push
mov
adc
lea
push
push
lea
fimuls
mov
push
sub
cmp
std
xchg
fstpt
cld
fimuls
loop
aam
xorl
mov
clc
pop
lcall
test
or
imul
xor
je
push
mov
movsl
mov
sbb
mov
xchg
dec
pop
push
dec
adc
jecxz
subl
lret
outsb
push
push
bound
fstl
dec
mov
dec
pop
add
or
subl
shlb
mov
lgdtl
mov
out
dec
add
mov
mov
fisttps
cmp
mov
mov
push
mov
sahf
arpl
ret
in
scas
or
add
cmp
subb
cmp
mov
jae
push
test
loop
in
and
sbb
dec
ss
push
mov
xchg
cmp
test
cli
rolb
outsb
dec
cli
adc
inc
stc
cwtl
mov
push
out
sbb
sbb
stc
jmp
popa
mov
aaa
mov
cmp
aam
sbb
jle
sub
rcrb
jb
cltd
mov
mov
or
subb
in
fisubrs
sbb
cli
rol
push
out
xor
popa
sbb
cli
push
xchg
pop
and
and
jl
outsb
loope
mov
pop
add
jns
test
enter
pop
test
mov
ljmp
inc
jne
clc
push
sbb
fisttpl
pop
or
enter
leave
stos
mov
clc
in
ret
sub
int3
mov
push
pop
push
and
mov
mov
push
imul
addr16
jo
mov
mov
outsl
shlb
aad
lock
add
js
xor
fistpl
add
mov
mov
jle
sarl
jmp
test
push
pop
pop
fcomp
push
out
cmc
dec
adc
sub
add
addb
and
movsl
insb
mov
hlt
mov
pop
test
outsl
pop
mov
push
and
loope
loopne
std
je
pusha
lods
aaa
shl
inc
dec
pop
sub
or
in
sub
es
mov
daa
stc
jg
std
mov
inc
cmp
xchg
cmp
lods
popf
bnd
subl
lods
dec
pop
fwait
insl
xchg
in
mov
push
mov
jno
cmp
stos
icebp
aaa
mov
sub
xor
iret
dec
mov
sbb
inc
loop
push
stos
jne
or
add
xchg
rorl
sub
or
movsl
and
andl
pop
das
ret
dec
call
mov
or
inc
jge
std
lods
cs
mov
sub
mov
aas
add
pop
mov
ror
pop
stos
lret
jae
in
xchg
loop
pop
jbe
mov
insb
js
mov
clc
cmc
sbb
pushf
cmp
test
mov
fisttpl
cmp
std
cmp
sbb
popa
push
jecxz
dec
or
imul
adc
aaa
popa
sti
pop
outsb
cmp
nop
adc
int
data16
leave
adc
repnz
fsubs
fnstsw
mov
ds
cli
lods
sbb
fcomps
out
xchg
imul
mov
adc
add
js
fistpll
and
sahf
js
mul
xchg
cmc
jno
enter
dec
loopne
nop
das
xchg
adc
daa
mov
inc
pop
mov
push
cmp
sahf
mov
pop
negb
xor
fsubl
adc
xchg
mov
idiv
jne
in
frstor
ljmp
pop
jg
pushf
notl
mov
call
cltd
xor
add
and
jg
push
in
cmp
push
or
fdivr
lea
jne
add
movsl
icebp
mov
fcomip
arpl
lahf
xchg
mov
pop
adc
jo
add
ja
mov
lock
mov
sti
test
fistps
fcoms
ret
dec
ljmp
lea
mov
inc
mov
outsl
decl
sub
and
mov
mov
dec
cld
test
pop
pop
jnp
pop
fldenv
mov
outsl
aaa
loop
gs
andl
orb
mov
fists
ljmp
xchg
cmp
or
aam
push
sub
mov
mov
xacquire
cmp
and
cld
mov
xchg
out
fs
ja
aam
push
mov
pop
loop,pn
dec
faddl
fisubrs
inc
mov
fsubr
push
inc
out
pushw
mov
lret
loop
mov
jl
lock
dec
adc
inc
stos
push
clc
mov
pop
jp
cmp
cli
xorb
popa
jecxz
inc
mov
push
adc
pop
in
cwtl
jne
mov
lcall
push
jmp
fiadds
inc
mov
and
push
lock
ljmp
xor
cli
jmp
ret
inc
jg
outsl
mov
mov
shr
sub
and
stc
andl
and
xchg
push
mov
outsb
fnstsw
sbbl
jno
xor
in
das
aam
pop
inc
xchg
daa
adcl
cmp
jmp
sub
pop
out
cmc
inc
lock
fildll
mov
xor
leave
movsl
xchg
mov
adc
mov
popf
cmp
dec
xchg
jnp
in
mov
rorl
shlb
pop
cltd
and
dec
mov
imul
xor
loopne
add
inc
mov
sub
add
or
in
jge
outsb
add
inc
sbb
and
xorb
cs
cmp
push
daa
les
fildl
decl
sub
lret
nop
insl
and
mov
and
or
cmc
idiv
jbe
daa
xchg
sbb
jmp
adc
or
inc
mov
adc
movsb
mov
fistl
aaa
mov
cmp
addr16
xchg
sub
out
ja
repz
outsl
insb
adc
push
nop
dec
xor
sub
sbb
hlt
hlt
xorb
sbb
movsl
lods
idivb
mov
pop
loopne
ds
popl
xchg
ss
pop
into
inc
cld
subb
test
push
fnstsw
jg
mov
loopne
div
fsubrs
cld
push
test
pop
fnsave
push
cwtl
lods
jb
pop
sub
or
outsb
movsl
adc
xchg
cmc
hlt
xor
mov
call
adc
jnp
fisttpl
scas
in
mov
out
and
cmp
mov
rcr
mov
mov
or
addr16
and
fst
inc
or
outsb
bound
dec
mov
push
mov
aam
push
pop
loopne
sub
enter
lret
das
fcmovne
inc
fyl2xp1
sub
jo
sbb
stc
sbb
decb
ljmp
ja
push
sahf
jecxz
enter
cltd
add
clc
adc
out
stos
jg
mov
xchg
mov
repz
js
inc
leave
xchg
and
sbb
ret
pop
inc
aaa
jge
adc
adc
rcll
decl
push
sbb
jb
stc
lret
push
jle
lock
or
cmp
roll
pushf
xchg
jbe
call
insb
loopne
push
decl
rolb
cmpsb
aam
jge
xchg
aaa
dec
inc
test
xorb
icebp
sub
in
jg
ret
int
inc
stc
enter
sbb
xor
ljmp
mov
pop
dec
dec
xchg
clc
push
call
jmp
mov
loope
push
sahf
adc
dec
mov
sbbl
xlat
in
ljmp
roll
add
jl
outsl
jle
push
aas
add
sub
stc
sub
fisubl
cld
mov
rorb
and
cld
and
mov
adc
rcll
icebp
test
outsb
sahf
sti
adc
dec
test
push
adc
or
mov
mov
or
pop
dec
test
lcall
mov
sbb
leave
mov
pushf
inc
adc
dec
testl
xor
sbb
jns
adc
outsl
fildl
jo
mov
add
in
cmpl
xchg
jmp
loopne
xor
cmc
add
iret
mov
rcll
jbe
fists
mov
xor
ret
ret
dec
pop
xchg
sbbb
cmp
outsl
mov
sub
int
or
loopne
cmp
rorl
testb
dec
mov
fucomp
movsb
shll
mov
mov
push
bound
pushf
mov
rcr
in
push
mov
lret
mov
call
lcall
inc
clc
sti
mov
popa
sbb
stos
dec
shr
pop
int3
xchg
ss
add
add
inc
cmpsb
loope
sti
cmpsl
hlt
mov
outsl
and
mov
push
aas
add
insb
inc
push
repz
inc
test
push
daa
sbb
adc
sbb
cmp
leave
mov
movaps
rorb
sub
movsb
repz
incl
mov
pop
xor
das
fadds
mov
or
fwait
push
addr16
in
ret
cwtl
and
cmp
cmp
fisttpl
or
lret
adc
xchg
inc
mov
pop
pushf
aas
es
js
out
ss
inc
nop
test
rol
movsb
fmul
jmp
pop
clc
xchg
in
push
enter
cld
mov
out
clc
out
in
jae
sti
int
cmp
mov
xchg
fdivs
sub
or
cmp
xor
pop
and
insl
jmp
inc
mov
fldl
sbb
ret
mov
cmc
aaa
mov
jecxz
je
sti
sarl
pop
jnp
push
xor
das
xchg
les
jo
mov
jo
aad
or
mov
cmc
int
mov
inc
xchg
and
stc
dec
adc
ja
xchg
lahf
sbbb
and
nop
push
pop
pusha
in
ljmp
adc
sbb
stos
decb
xor
mov
xlat
jae
and
subb
inc
xchg
out
fistps
clc
pop
icebp
les
rcrl
loopne
lea
jge
add
shrl
inc
shll
ljmp
xchg
xchg
jmp
jb
xor
mov
dec
push
incb
mov
in
mov
icebp
and
mov
addl
jge
jnp
outsl
mov
xor
loope
repnz
js
push
push
add
cli
ret
adc
pop
int3
lods
pop
orb
inc
bound
push
adc
jmp
sub
dec
fs
test
cmp
hlt
mov
push
in
sub
or
push
incl
mov
push
and
jg
mov
sbb
xchg
mov
test
adc
jmp
test
jg
imull
inc
fisubs
jo
mov
pusha
aaa
dec
clc
jo
clc
insl
jmp
sti
rcrb
daa
xor
aaa
mov
aam
or
mov
push
mov
push
push
lea
add
mov
ss
out
dec
cld
movsl
loop
pop
and
cmp
inc
pop
pop
mov
mov
push
lock
inc
sub
add
cmp
ss
aaa
push
fdivp
or
xor
cmc
mov
jns
fs
loop
mov
sub
icebp
pop
call
aam
popf
stc
call
ret
xchg
les
adc
dec
fst
mov
int3
iret
pop
ja
popa
in
mov
mov
jecxz
lds
bound
mov
clc
cmp
clc
inc
xchg
addb
add
mov
js
xor
mov
test
mov
icebp
push
add
movsl
inc
in
dec
add
xor
leave
jns
cld
fldt
dec
cmp
jnp
testb
sbbb
adcb
aad
decb
mov
adc
dec
or
jno
sub
xchg
andl
hlt
sub
adc
shrb
js
xchg
notrack
in
cltd
test
mov
push
cmpsb
push
pushf
cmp
loope
dec
lahf
negl
subl
sub
push
add
adc
mov
in
push
xchg
lahf
xor
dec
loopne
sar
dec
cmp
pop
cmp
les
mov
or
fsubl
lcall
or
std
imulb
cmp
shlb
in
jmp
push
push
pop
xchg
push
and
mov
das
aam
push
fstps
pop
sbb
dec
clc
outsl
insb
cmp
or
test
data16
rcl
jecxz
dec
mov
andl
vphaddudq
pop
pop
mov
cmc
mov
cmpsb
lcall
fcmovnbe
xchg
add
and
mov
inc
repz
push
into
andb
push
ret
cmpsb
inc
jbe
mov
pusha
dec
pop
out
push
inc
cmp
pop
clc
outsl
cld
xlat
ret
inc
mov
or
sbb
shlb
dec
aaa
and
cmp
xor
jns
mov
lea
xchg
add
iret
adc
inc
jge
inc
or
psrad
test
ret
mov
sub
das
inc
xchg
dec
in
fsubrs
mov
pop
hlt
ror
and
dec
pop
insb
push
ja
inc
adc
icebp
mov
stos
cmc
test
push
lcall
or
mov
jp
aam
in
test
fldcw
pop
push
push
xor
cmp
add
ss
dec
xchg
ficoml
test
sub
imul
pop
imul
cbtw
mov
movsb
outsl
mov
cld
dec
pop
lods
mov
ja
test
xchg
jle
stos
xlat
mov
sbb
add
jp
jmp
in
imul
mov
xor
xchg
orb
sub
or
add
fildl
jge
push
je
dec
addr16
inc
loopne
push
aas
loop
fildl
adc
inc
movsb
xchg
mov
jg
xchg
fwait
adc
jmp
sbbl
cmp
mov
jg
push
subb
inc
pushf
or
xor
and
pop
cld
sbb
cmp
ja
add
adc
push
sub
fistpll
inc
shlb
test
inc
and
xchg
das
jl
lock
fnstenv
xchg
mov
loopne
push
popf
lods
xchg
stc
in
mov
movsl
push
out
ss
sbb
loope
mov
or
jl
into
insl
or
adc
in
aaa
fists
imul
test
mov
test
lock
in
adc
test
jbe
shrb
xchg
mov
adc
test
dec
lret
les
test
sbb
push
call
pop
fst
cld
sbb
add
lods
test
and
rorb
in
sbb
ds
rcl
dec
mov
ljmp
lock
push
inc
or
adc
push
fcomps
sbb
jle
les
xchg
or
pop
mov
ror
dec
fadd
fiaddl
or
mov
push
outsb
in
sub
loopne
jmp
je
pop
fdivrs
dec
add
pop
pop
insl
fcoms
cmc
repnz
and
scas
pop
ja
call
ljmp
cwtl
xchg
adcl
mov
xchg
pop
jecxz
or
loopne
lea
dec
xor
ficomps
iret
sub
inc
aam
sbb
dec
mov
outsl
ja
lea
repz
mov
inc
decl
and
cmc
in
mov
xor
clc
push
push
sbb
push
mov
push
dec
scas
ffreep
fildl
pop
fs
out
mov
mov
cmc
adc
mov
je
xchg
mov
popf
xchg
mov
adc
mov
dec
adc
loopne
cmpl
les
inc
adc
andl
inc
cmp
stos
mov
jp
in
jge
inc
addr16
das
sub
mov
mov
ret
mov
dec
jl
sbb
and
sbbb
jl
add
popf
in
addr16
rolb
push
cmp
and
jp
xor
fistpl
xor
and
xchg
testl
jp
add
jmp
jmp
mov
cli
pop
or
push
fcom
cli
out
cld
icebp
mov
fdivrl
je
test
adc
rcll
or
pop
and
in
fnstsw
insl
cltd
dec
sub
aas
jnp
bound
adc
mov
or
mov
pop
inc
mov
stos
pop
insl
clc
adc
insb
loop
rclb
dec
stos
movsl
addb
add
in
bsf
adc
dec
hlt
pop
mov
or
lods
cmp
mov
push
mov
or
push
test
outsb
scas
or
sarl
jmp
cmp
ss
mov
or
sub
addb
add
xchg
sub
or
fildl
scas
push
add
jp
mov
test
jle
lea
cmpl
data16
push
mov
aaa
mov
lea
jp
pop
pop
sub
in
xchg
sub
dec
xor
iret
mov
js
cmp
repnz
ljmp
lods
leave
sub
je
pop
pop
mov
mov
data16
mov
stos
call
pop
xor
add
fnstenv
test
mov
sbb
jne
xor
in
sub
push
mov
pop
push
sar
decb
cmc
cmp
push
rcll
jno
roll
imul
xchg
daa
inc
jne
xchg
divb
fcoml
adc
rclb
pop
dec
or
sbb
inc
adc
cs
and
pop
mov
or
adc
sbb
or
lods
inc
std
mov
add
cmp
sbb
or
ljmp
pop
and
lods
arpl
push
push
cltd
fcmovnu
rcr
push
insb
adc
les
xor
push
arpl
jne
cmc
call
sbbl
mov
add
add
sbb
pop
fs
sbb
mov
or
adc
sarb
sub
mov
or
push
or
inc
adc
and
clc
and
cltd
aam
clc
inc
push
add
mov
mov
popl
mov
movsl
js
nop
pop
xor
gs
push
lahf
dec
sbb
jecxz,pn
inc
jmp
and
fistpll
cmc
cli
loope
fisubrl
in
xor
ss
ljmp
or
inc
xchg
insl
sub
sbb
gs
cmp
in
mov
jp
int3
xchg
cli
loopne
inc
js
mov
shr
or
cwtl
mov
nop
push
mov
test
mov
mov
mov
nop
sbb
push
loopne
cs
pusha
xor
fcmovnb
mov
sti
and
idivb
xorb
aam
xchg
add
sbb
in
jl
rclb
std
mov
and
adc
jmp
inc
xor
test
ss
cmp
inc
ret
test
clc
aad
xchg
pop
into
xchg
cmpsl
js
subb
testb
mov
nop
dec
mov
scas
pop
scas
cmpl
adc
jg
movsl
mov
insb
mov
fistpll
cld
and
adc
inc
xchg
jo
clc
out
pop
and
xchg
ret
jo
push
insl
loope
and
jge
xchg
inc
mov
and
jp
mov
sub
mov
ret
or
xchg
dec
loopne
das
xchg
add
push
clc
cmp
cld
push
adc
inc
mov
dec
int3
std
lea
mov
push
imul
jo
xchg
push
std
call
scas
imul
or
inc
mov
icebp
mov
imul
jge
fldenv
adc
fsts
bound
mov
push
jbe
jnp
sub
xor
mov
imul
shrl
es
and
inc
push
xor
push
add
add
dec
stos
push
loop
lock
cmpsl
stos
pop
sbb
repnz
sub
addb
jns
inc
insl
cmp
mov
jne
push
push
jns
adc
ffreep
xchg
aad
inc
stc
mov
or
mov
in
xor
das
loop
popl
mov
mov
out
jb
or
jmp
sahf
jecxz
push
push
mov
sbb
fidivrs
add
pop
cmp
jbe
adc
sub
std
mov
test
repnz
insl
in
pop
jb
push
movsl
bound
decl
in
repnz
pop
js
or
or
mov
push
sbb
push
xchg
jge
clc
mov
sbb
xor
sbb
xchg
inc
lcall
out
cmpl
xchg
xchg
pop
dec
add
or
mov
xor
push
loopne
sbb
jnp
les
jno
adc
add
mov
pop
mov
pop
loop
popa
or
cwtl
shlb
cwtl
aas
fimull
add
jns
stos
jno
fcmovne
add
push
add
xchg
divb
neg
jle
mov
xchg
and
test
jmp
push
xchg
ficoml
mov
outsl
lea
sub
mov
roll
lods
push
or
sbb
aaa
pop
faddl
add
aas
clc
and
mov
mov
push
cmc
push
xlat
jb
dec
sbb
xchg
cltd
orb
in
or
cmp
je
aaa
pop
and
jg
scas
sub
fs
sti
je
cmp
fwait
dec
insl
insb
jb
vmovdqa
mov
inc
jne
repnz
mov
mov
dec
inc
icebp
or
mov
dec
das
enter
or
jl
ret
aad
icebp
ljmp
lea
cmc
scas
inc
fstl
or
imul
test
aad
cmpb
xor
aam
jbe
movsl
addl
popa
pop
inc
cltd
notb
or
xor
dec
xor
std
cli
popf
adc
mov
out
subl
lds
push
popa
sbb
rcll
cld
pop
negb
jle
test
sub
jb
cmpsb
cmp
or
aad
push
cld
gs
cmc
pop
xchg
adc
out
lret
xchg
sub
jmp
add
and
dec
call
xchg
sbb
sbb
xchg
shr
outsl
inc
scas
outsb
insb
jo
jmp
sub
mov
mov
sub
loopne
fdivl
mov
daa
ret
dec
stc
jbe
leave
out
mov
int
pop
sbb
pop
pop
push
ret
push
push
out
push
div
xchg
mov
and
and
mov
outsl
fnstsw
cmp
add
pop
fildll
int3
enter
fs
pop
xor
ja
test
fistps
or
jo
aaa
or
movsb
push
cmp
jmp
sub
in
sbb
out
es
cli
mov
je
dec
cltd
fsincos
or
lret
inc
add
xchg
push
cmpb
fcompl
pop
jp
mov
adc
cmpsl
push
shlb
lds
xor
dec
scas
jp
or
cmp
xchg
mov
add
add
hlt
add
sarb
cmp
test
adc
imul
aam
pop
mov
dec
lock
mov
push
test
subl
add
mov
push
adc
ud2
sbb
push
adcl
into
mov
xor
dec
cmpsl
ret
aas
push
mov
or
test
and
push
dec
filds
dec
outsl
xor
imul
pop
fildll
andb
paddd
push
sbb
mov
jo
add
push
mov
mov
mov
popa
dec
add
mov
dec
outsb
mov
or
loop
pop
cmp
xor
jns
push
leave
imul
sbbb
inc
test
cli
push
push
or
adc
outsb
add
loop
dec
dec
outsl
sbb
inc
sub
nop
lcall
scas
mov
inc
loop
cmc
pop
sbb
mov
lods
icebp
jmp
cmp
fiaddl
or
leave
insb
ja
mov
xor
je
add
xchg
pop
pop
jmp
dec
cld
mov
mov
jecxz
jmp
aam
push
add
int3
ss
popa
ret
xchg
mov
enter
aad
enter
test
sbb
jle
jl
mov
sbb
lret
aaa
lock
pop
test
dec
je
in
enter
mov
lock
inc
inc
dec
andb
add
xchg
push
sbb
and
cmp
je
je
mov
inc
mov
jmp
xor
aaa
in
jb
sub
decl
loop
and
aas
xchg
iret
iret
fimuls
push
jle
outsl
and
out
add
sub
inc
mov
mov
xor
add
push
mov
add
or
out
sbb
cmp
pop
das
and
mov
pusha
inc
fdivp
inc
hlt
xchg
add
lods
cli
jg
loop
pandn
out
jmp
aas
add
jg
cmc
addl
pusha
push
fmul
movsl
pop
insb
push
jmp
jnp
stc
stc
xchg
add
push
sbb
xor
inc
adc
dec
aas
jb
xor
inc
mov
xlat
or
cltd
push
scas
imul
lods
mov
insl
insb
sbb
adcb
rol
shl
mov
xchg
sbb
or
cmp
add
adc
test
lock
push
push
shll
sbb
sbb
and
mul
test
lds
sahf
or
stos
ljmp
test
dec
push
out
jbe
jl
dec
cwtl
icebp
ljmp
loopne
mov
imul
jge
test
test
adc
jl
sbb
sbb
and
mov
sub
gs
sbb
stos
mov
out
xor
xchg
ficompl
fimuls
lahf
mov
ret
sbb
pop
bnd
jl
push
fildll
add
lret
imul
push
push
inc
divl
sub
rcrl
sub
call
xor
filds
outsb
push
in
jnp
aaa
mov
push
pop
xchg
rclb
daa
clc
sub
addl
sbb
outsb
fldt
int3
nop
sub
jg
pop
xor
int
jo
cmp
xorb
dec
orl
cwtl
jge
cli
mov
sbb
les
mov
cmc
filds
test
das
sub
xchg
inc
mov
adc
mov
mov
orl
mov
sub
std
mov
xchg
nop
insl
or
cld
jmp
mov
fldt
push
jbe
or
push
lret
xor
sbb
mov
aas
adc
pop
cmp
data16
mov
out
inc
xchg
or
jle
add
sbb
adc
je
sbbb
es
lea
cmp
inc
lret
push
mov
fcomi
rolb
test
cmpsb
icebp
push
mov
or
jp
and
sbb
test
xchg
movsl
push
in
jp
test
js
aaa
add
decb
ja
pop
clc
aad
mov
mov
aaa
fistps
test
lahf
call
add
lea
adc
popa
aaa
adc
aad
mov
clc
push
faddl
xchg
push
add
loopne
test
mov
cmp
push
jge
cli
cmp
ljmp
mov
or
cmp
cmpsl
call
aam
shll
decb
add
add
lock
jg
pop
mov
mov
pop
push
adc
mov
and
mov
cmp
adc
ljmp
jg
sahf
dec
mov
loopne
imul
ja
inc
and
cmp
xchg
cs
push
mov
push
mov
push
cmp
orl
inc
std
inc
lcall
mov
cmp
lahf
psllq
mov
fiadds
cmp
push
inc
mov
enter
add
mov
outsb
dec
add
aaa
stos
or
jno
dec
mov
or
push
xor
es
mov
sub
xchg
rorb
xor
dec
and
add
and
outsb
cli
mov
adc
hlt
out
inc
arpl
mov
jmp
dec
adc
jmp
outsb
lea
jbe
xchg
decl
cmp
fiadds
sub
pushf
in
adc
insl
cld
inc
lock
call
imul
adc
push
test
adc
or
outsb
das
shll
addr16
jne
adc
sbb
les
and
insl
jle
jo
sarl
inc
ret
faddl
push
stc
addr16
aaa
mov
pusha
fldt
mov
inc
stos
stos
shl
inc
lret
andb
mov
mov
fstl
dec
repz
das
rcll
dec
aaa
sub
sbb
ds
cli
and
push
sbb
das
loopne
cmp
test
out
sbb
inc
add
in
adc
sbb
popa
sbb
imul
subb
ss
jecxz
dec
in
xchg
sarl
loopne
jnp
ja
mov
repnz
mov
test
call
cmp
ret
adc
jbe
inc
out
mov
das
shll
mov
loope
dec
fwait
push
sbb
fdiv
jbe
iret
cmp
cmpsb
jno
jl
test
pop
jno
lret
lret
adc
fbstp
xchg
into
xchg
js
cmp
jbe
test
jb
shlb
outsl
sbb
arpl
hlt
lds
mov
adc
push
cld
pushf
fldenv
mov
icebp
mov
cltd
add
jno
clc
pop
and
or
xchg
mov
insl
mov
xor
pusha
xor
and
rclb
nop
imulb
xor
sarb
jp
sbb
sarl
inc
mov
data16
pop
xchg
pop
fisttps
dec
jmp
clc
pop
pop
add
subb
rclb
outsl
jge
push
adc
mov
lds
dec
cli
inc
mov
sub
pop
dec
arpl
movsl
ja
push
pusha
loopne
and
pushf
lahf
dec
adc
int
dec
adc
or
out
cmp
call
inc
ret
out
movsl
adc
xchg
cmpb
int
shrl
scas
jo
out
aas
hlt
fucomp
mov
ja
pop
mov
orl
repz
out
aas
stos
xchg
enter
mov
ret
jmp
fdivs
loopne
jle
add
jae
push
xchg
mul
push
inc
push
xor
fcmovu
sub
loope
outsl
add
outsl
push
cmp
or
movsl
imulb
es
repz
daa
stos
outsl
adc
mov
filds
arpl
imul
cwtl
mull
fisttps
mov
js
add
stos
movsl
or
ljmp
inc
and
lods
and
jno
icebp
in
rorb
ret
out
fsubrp
mov
std
test
popa
cmp
mov
loope
clc
sbb
das
mov
mov
aaa
pop
roll
xchg
add
clc
in
fidivrs
testb
pusha
popf
push
xchg
loopew
pusha
mov
les
gs
nop
add
push
movsl
clc
iret
and
jnp
pop
fcomp
rcrb
dec
aas
mov
insl
pop
jo
jp
pop
dec
add
mov
mov
call
aas
adc
lock
cmc
pop
xor
add
xchg
pop
inc
adc
push
mov
add
fs
or
sub
mov
jmp
pop
mov
xchg
test
aad
inc
les
clc
push
popa
test
ljmp
mov
loope
repnz
mov
cmp
push
dec
mov
inc
lret
adc
sbb
dec
cld
mov
xchg
jb
pcmpeqd
test
lret
cmpl
sub
or
mov
dec
jmp
out
lret
mov
cmpsb
orb
cld
add
add
scas
xor
push
mul
jmp
xor
mov
ds
dec
lcall
jae
test
pop
xchg
jb
mov
mov
out
lea
mov
mov
sbb
mov
jno
xlat
data16
inc
int3
xor
clc
ljmp
mov
daa
loopne
jns
pusha
cmpl
push
outsl
mov
lcall
pop
js
popa
js
fstl
faddp
testb
out
test
xor
mov
stos
mov
or
icebp
mov
lcall
and
outsb
stos
pop
aam
adcl
fnstsw
scas
pop
mov
mov
pushf
cmp
in
ss
stos
and
repz
mov
ljmp
inc
sub
loop
mov
pop
cmpsl
lods
ds
sbb
push
push
out
roll
mov
insb
push
mov
or
jo
jg
xchg
add
lods
fcmovnbe
ds
xor
popa
pop
outsl
je
or
fadd
ficoms
add
cltd
fiaddl
dec
aad
xchg
pop
or
mov
add
call
addb
clc
cli
insl
sub
mov
aas
out
and
insb
push
lcall
mov
cli
aaa
fisubrs
add
test
and
lahf
jnp
lds
mov
push
mov
pushf
add
pop
sub
adc
adc
hlt
xor
aam
mov
daa
stos
jge
and
and
cmc
ffreep
xlat
movsb
ffree
femms
leave
jb
adc
ss
popf
popa
xchg
dec
push
outsb
stos
jbe
into
in
out
jecxz
push
pop
or
shr
push
outsb
mov
bound
ret
scas
mov
mov
add
rep
fstpt
dec
mov
push
subl
xor
mov
pop
jne
and
cmp
fsubs
ljmp
fmul
push
pop
dec
fsubp
jbe
add
int3
int
aaa
pop
ljmp
add
and
bound
in
xchg
mov
jne
fwait
mov
lahf
shll
movsl
pusha
stos
test
in
jo
adc
pop
cli
stos
push
dec
push
jno
test
sti
pushf
icebp
mov
setnp
sub
pop
cs
adc
lock
stc
movsb
rorb
in
dec
mov
nop
inc
outsb
sbb
mov
mov
call
outsl
pop
shlb
leave
loopne
or
jo
shlb
pushf
je
mov
xchg
add
or
popa
test
aaa
push
pop
push
mov
push
mov
mov
js
imul
popa
cmp
adc
xor
mov
jnp
iret
movsl
test
fidivrl
or
sbbb
loop
in
jo
hlt
scas
cmp
push
mov
dec
mov
cwtl
adcb
mov
jg
ret
push
jge
lret
out
and
stos
jl
jg
jne
xchg
lahf
jae
je
dec
jb
add
stos
cli
cwtl
xchg
and
call
insb
push
dec
nopl
out
gs
xor
cld
fadds
insb
jl
adc
inc
fcmovnu
outsb
lods
mov
stos
xchg
fsubl
sub
push
mov
hlt
pop
sti
ret
and
cmpb
add
mov
rclb
inc
push
test
fcomps
rcr
mov
dec
loope
unpcklps
in
cmp
lahf
adc
mov
aam
xchg
mov
sbb
jae
enter
andb
mov
movsl
loope
mov
push
rclb
and
jno
lret
sbb
jl
pop
adc
cld
rorb
negb
nop
mov
les
or
mov
cmp
jle
or
icebp
cwtl
addb
add
nop
lret
ret
jecxz
frstor
mov
mov
add
popa
outsl
pop
mov
gs
test
dec
xor
push
ret
sahf
sbb
adc
jbe
inc
dec
stos
movsb
nop
sub
leave
add
js
rolb
push
pop
xchg
jge,pn
mov
push
xor
push
js
filds
lret
dec
daa
ljmp
jle
push
pop
das
inc
decl
pop
adc
mov
sbb
lea
and
cmpsb
adc
pop
clc
imulb
cmp
inc
mov
mov
inc
icebp
or
mov
stos
jne
gs
imul
insb
outsb
imul
ret
punpckhwd
xchg
std
lods
ret
fwait
inc
mov
cli
movsl
in
and
adc
cwtl
je
fs
imull
out
sub
mov
dec
mov
pop
push
and
cmp
in
sahf
pushf
mov
test
xchg
jg
adc
mov
add
ljmp
iret
into
iret
fidivrl
mov
cmc
cmp
and
pusha
add
sub
or
mov
mov
mov
xor
xchg
movsl
outsb
sbb
cmp
pop
jp
dec
sbb
call
aad
mov
mov
lods
push
in
popf
lret
adc
lret
adc
pop
test
pop
outsb
jg
push
sbb
fisttpl
fildll
mov
mov
sub
es
fdivrl
lahf
ficoms
inc
push
jbe
lahf
and
dec
cld
in
cmp
mov
inc
cmpsb
addl
shl
mov
in
out
mov
pop
cli
jae
in
jl
mov
pop
xchg
mov
inc
cmp
add
adc
std
jo
dec
js
push
into
mov
adc
lds
jecxz
pop
push
in
test
test
mov
sub
iret
cmc
inc
lock
cli
add
mov
sub
das
addl
xchg
orl
pop
cwtl
push
jb
xor
sbb
into
hlt
mov
add
neg
cmp
cld
ret
out
jbe
sbb
insb
adc
push
int
or
push
sub
lahf
mov
push
scas
js
daa
hlt
sub
or
inc
in
outsl
pop
mov
subb
mov
push
dec
xchg
pop
outsb
lods
mov
sbb
fwait
mov
dec
jp
shlb
sub
imul
pop
test
pop
xor
mov
inc
or
mov
push
ljmp
cmp
fstp
inc
adcl
aaa
push
insb
sub
movsl
inc
mov
mov
and
fildll
je
lds
mov
adc
out
jmp
adc
mov
mov
lea
les
jno
hlt
xor
mov
cmc
dec
hlt
inc
add
lock
outsl
sbb
hlt
loope
mov
cmpsb
mov
clc
and
xor
push
dec
in
pop
mov
addr16
loope
movsb
jne
adc
adc
dec
mov
js
test
dec
aad
add
jecxz
ret
call
push
push
xchg
sti
jae
jge
mov
fwait
imul
add
sbb
mov
insb
fs
sbb
add
mov
data16
pop
mov
movb
pop
jle
movsl
jg
das
out
fsubl
cli
mov
pusha
mov
xchg
stos
jg
xchg
inc
mov
adcb
lret
xchg
xchg
push
inc
lock
lea
mov
scas
pop
ret
cmc
out
negb
mov
xor
cmp
jo
mov
xchg
nop
lret
movsl
push
andl
and
mov
mov
xchg
fdivrl
ss
cmp
mov
adc
inc
cmp
pop
mov
or
leave
jg
and
jl
clc
or
dec
ret
ss
std
mov
insl
jne
jne
dec
jmp
movsl
daa
jo
jp
outsb
outsl
outsl
adc
andl
dec
pop
loope
push
rol
les
in
or
sbb
or
test
cli
in
pop
adc
and
mov
lods
add
cmp
clc
not
cmp
inc
rclb
cmpsb
sub
cmp
add
push
jns
scas
inc
jbe
incl
or
aam
adc
insb
icebp
pop
pop
xchg
sarb
and
or
clc
mov
test
mov
sbb
stos
mov
adc
call
inc
cmp
loopne
sbb
or
cmp
xchg
mov
adc
push
fstpl
in
mov
mov
int3
popa
ud1
movsl
xor
and
data16
scas
lds
mov
jo
popf
rorb
cltd
sub
xchg
sar
add
test
or
inc
daa
dec
sub
mov
frndint
push
jge
mov
mov
scas
or
lods
test
lods
sbb
mov
jbe
aad
pop
loopne
push
sarb
lods
fs
rcll
int
and
in
nop
enter
inc
mov
test
adc
and
inc
std
lods
movl
shll
mov
lcall
xor
sti
outsl
sar
test
ret
xchg
jbe
fdiv
pop
push
vmovaps
loopne
rcrb
jns
fisubrl
fadds
or
int3
sub
mov
or
insl
lock
aaa
jne
clc
mov
cmp
aaa
sub
das
push
mov
shrb
push
inc
hlt
mov
popf
jecxz
adc
push
or
adc
out
or
call
adc
sub
popa
inc
jl
nop
sub
mov
loopne
icebp
push
cmp
jl
fst
negb
movsb
sbbb
mov
test
lea
or
addr16
mov
test
roll
push
mov
pop
jno
std
mov
imul
mov
and
les
scas
clc
mov
mov
sub
cmp
sbb
ffreep
pop
mov
outsb
es
add
insl
pop
jae
push
push
xchg
ljmp
pop
and
mov
lock
ss
stos
out
clc
dec
push
jle
lods
adc
pop
mov
mov
push
push
ret
xchg
jnp
push
mov
clc
inc
fwait
add
movsb
inc
xor
lcall
aam
pop
outsb
pop
jne
adc
aaa
jne
mov
xchg
fcomp
pop
and
adc
sub
aad
test
test
fwait
sbb
fildl
imul
call
nop
push
sbb
loopne
out
inc
lods
call
adc
movsl
outsl
mov
inc
xchg
xchg
adc
loopne
inc
lcall
sti
loop
enter
andb
aam
div
or
and
test
and
dec
mov
or
xchg
fnsave
xchg
push
cmp
cmp
lds
js,pn
jg
sub
mov
jmp
sub
jg
mov
push
cmp
ret
adc
test
inc
dec
jb
or
add
sub
and
adc
xchg
adc
aaa
mov
gs
push
adc
sbbl
jbe
mov
fcoms
push
mov
aas
pop
lea
mov
adc
ret
enter
flds
cmc
xor
icebp
nop
mov
sbb
mov
and
ficoms
add
and
mov
xchg
push
movsl
lock
js
cmc
mov
subb
loopne
cwtl
add
cld
or
push
mov
imul
jge
jne
dec
pop
cmpsb
fistpll
cs
out
cmp
test
xchg
subb
ret
mov
mov
test
cs
xchg
mov
clc
push
dec
push
jg
xchg
sub
cli
cmp
jae
jnp
fs
or
mov
push
and
pop
add
int3
push
lock
sbb
sbb
pop
dec
cmp
stos
cmpb
or
jns
cmpsl
jge,pn
jg
addl
and
inc
out
dec
xchg
dec
cmpsl
cmc
jecxz
mov
outsl
and
add
sub
mov
mov
jo
adc
or
mov
mov
in
adc
push
or
mov
jle
cmpsl
add
mov
inc
sub
xlat
dec
loop
icebp
ffreep
aad
xchg
or
call
dec
add
mov
add
gs
push
std
outsl
add
jecxz
and
adc
in
xchg
lea
sub
mov
xchg
insl
lahf
add
mov
push
ret
stos
add
adc
cmpsl
jb
incl
xchg
fistpll
adc
in
xor
pop
mov
xlat
and
push
dec
cld
test
pop
clc
xor
cmp
idivb
adc
lahf
lahf
sarl
in
push
rcr
mov
adc
push
stos
xorps
push
or
adc
das
sub
fists
adcb
inc
jl
adc
push
clc
dec
mov
jmp
xor
jbe
jnp
xor
leave
adc
jp
lock
pusha
in
sub
sub
hlt
push
or
test
mov
or
aas
mov
push
sbb
test
enter
sti
in
or
sti
inc
packuswb
xor
add
adc
or
or
lea
adc
cmp
in
jbe
fs
insb
mov
jg
ret
mov
icebp
cltd
xor
lock
mov
adc
cmp
inc
cli
inc
jg
jmp
xchg
xor
popa
negl
in
adc
adc
fdivr
sbb
loopne
ss
cmp
xchg
sbb
fs
sub
fistpll
shrb
aam
mov
lds
push
mov
xchg
jbe
mov
ljmp
jle
xorl
stos
shrb
or
je
push
mov
cltd
scas
lock
cmp
inc
incb
stc
push
push
cmp
inc
add
xor
add
insl
out
inc
inc
mov
adc
jb
cltd
std
fistps
and
inc
dec
dec
int3
out
pop
lds
lock
sub
repnz
add
lcall
xchg
scas
into
fwait
xchg
mov
les
push
loopne
or
sbb
jle
sbb
fdivrl
mov
aas
movsl
push
jb
fbstp
shl
cmpsl
scas
ja
adc
jns
or
clc
xor
sahf
int3
sbb
pop
sbbb
fucomi
lds
ret
es
add
adc
mov
mov
jg
mov
adc
out
bnd
sbb
push
cwtl
sub
mov
add
mov
cmpsl
jae
filds
mov
inc
jne
push
mov
mov
lock
xchg
xchg
xchg
jbe
addb
mov
add
pushl
cmc
incl
xor
push
or
inc
push
mov
pop
pop
stos
jo
push
mov
lahf
xor
jle
pop
lcall
fisttpl
lock
mov
and
and
push
jno
sbb
mov
xchg
push
or
pop
cli
mov
pop
loope
in
pusha
mov
xlat
test
or
sbb
push
stos
icebp
scas
pusha
sub
lock
pop
sub
subb
imul
lcall
in
push
mulb
sbb
push
add
in
and
xchg
outsb
lods
sbb
or
add
jno
fs
dec
icebp
mov
adc
xor
or
pushf
lahf
mov
add
adc
push
into
inc
inc
mov
addr16
fsubp
mov
inc
lret
pusha
sbb
and
mov
xor
xchg
dec
pop
test
mov
push
movl
mov
inc
sub
or
push
push
ret
or
jmp
loopne
push
push
and
pop
mov
cs
cmc
out
stos
outsl
out
push
jbe
inc
mov
test
adc
cmp
fildl
repnz
fs
inc
lcall
sti
movsb
inc
lock
push
insb
aaa
sub
sub
arpl
and
xchg
adc
xchg
in
cmc
insb
leave
in
scas
cli
add
pop
aad
cmpsl
fxch
arpl
test
loope
dec
cld
rdpmc
and
in
push
jp
outsl
inc
ds
subl
push
outsl
inc
and
and
outsb
movsl
das
lea
xchg
cli
pop
dec
mov
pop
xor
pop
sbb
inc
xor
pop
xor
shr
ljmp
rorb
dec
and
or
fbstp
je
pop
xor
and
dec
pop
sbb
dec
sub
popa
scas
fucomip
pop
out
lret
cs
ficoml
inc
sbb
clc
je
inc
enter
mov
orl
jbe
jl
xor
lods
inc
sub
adc
push
xchg
jmp
mov
add
pop
cmc
push
add
and
cs
xchg
push
clc
lock
cmp
pop
pop
out
pop
fldenv
push
insl
outsl
icebp
in
add
push
call
pop
clc
ja
sbb
test
adc
adc
mov
pop
inc
ljmp
fcoml
repnz
jmp
cmpsl
ljmp
jo
sub
loope
loop
fsubrs
aaa
dec
sar
xchg
loop
inc
mov
std
adc
rorl
sub
sub
fcmovbe
add
cltd
add
fcoms
mov
cmp
adc
inc
fdivl
mov
cld
loop
fs
jl
sub
sub
sbb
test
pop
stos
sbb
fwait
pop
mov
imul
mov
sub
mov
mov
sub
sub
mov
cmc
jb
das
jl
pop
pushf
sub
or
dec
jmp
sbbb
aad
repnz
mov
sbb
pop
pop
fidivl
mov
or
sub
mov
imul
cli
cmovl
stos
or
cmp
sbb
jg
loope
inc
int3
or
imul
test
mov
aaa
sub
sbb
sbb
insb
std
xlat
incl
add
add
nop
xor
sbb
in
hlt
cmpsb
mov
mov
pop
cltd
lahf
aaa
arpl
aam
jmp
aaa
ljmp
sub
pop
mov
imul
loop
movsl
les
cli
cmpsl
inc
out
mov
adc
ljmp
sub
fs
jmp
out
popa
fcoml
daa
ds
ljmp
dec
jo
sahf
and
sbb
add
mov
jmp
pop
mov
mov
add
cmc
mov
insb
in
mov
cmpsb
sbb
clc
pop
in
jecxz
shl
inc
rol
mov
loopne
shlb
adc
sub
jg
xchg
mov
subb
inc
jno
mov
sbb
cltd
mov
push
sbb
sbb
jae
addr16
std
adc
decl
xchg
xor
cmpsb
adc
cmc
cmp
or
mov
popf
sti
mov
sub
clc
pop
mov
xor
xchg
ret
out
or
data16
ficompl
rcl
gs
inc
dec
sub
mov
cmp
xchg
sarb
mov
jecxz
int3
inc
xchg
fucomip
loopne
test
dec
shll
icebp
and
pop
sbb
adc
xchg
outsb
and
mov
sub
out
rcll
pop
xor
sub
mov
fmul
or
mov
jne
das
jne
in
sub
sub
out
push
add
sbb
push
lock
fistps
mov
insb
xor
xor
cmpsb
lcall
mov
test
lods
push
mov
lock
mov
sbb
xor
jno
cmp
lock
hlt
xchg
sub
and
inc
sbb
int3
xor
out
dec
sbbl
mov
scas
loop
add
and
cli
outsl
cli
lret
xor
push
push
fs
cwtl
or
aad
pop
and
jo
dec
fidivrl
stos
mov
outsl
and
mov
dec
lods
rorl
rol
add
les
mov
dec
jmp
sbb
ficomps
mov
punpckhdq
fbstp
pop
pop
xchg
xor
adc
xchg
xchg
cmpsb
aam
push
aad
andl
sbb
fsubl
cmp
shrb
push
mov
test
es
add
popa
ror
adc
fdivrl
pop
fcmovu
ja
arpl
push
pop
or
add
enter
push
in
cmp
fildl
ficomps
and
mov
loop
movsl
lea
or
sbbb
mov
mov
push
ds
jns
or
adcb
aaa
pusha
jae
or
lcall
les
mov
sahf
pop
cmp
xchg
or
mov
mov
xchg
aad
mov
sub
pusha
jl
sbb
in
in
ss
sub
mov
sbb
ss
mov
mov
ret
mov
jo
xor
add
test
lahf
pop
imul
push
pop
imul
test
sub
mov
aam
push
mov
in
cmp
loopne
pop
icebp
mov
xchg
sbbl
mov
popf
lret
insl
loopne
dec
and
fistpl
aam
loope
clc
and
inc
bound
notb
mov
xchg
dec
jmp
mov
xor
rolb
pop
mov
int3
imul
lock
leave
sbb
stc
or
inc
test
push
imul
sub
and
jp
pop
pop
pop
xor
mov
mov
or
mov
push
jo
sbb
je
mov
push
push
movsb
mov
sbb
and
xchg
push
mov
inc
js
adcl
pop
inc
roll
int3
outsb
insl
jo
push
hlt
xor
subl
in
mov
daa
cmp
test
inc
inc
icebp
shrl
stc
add
dec
push
loope
mov
push
push
testb
mov
xchg
clc
or
dec
jg
xchg
cmp
jl
shrl
ja
sbbl
nop
insb
out
ljmp
sub
push
jne
lds
cld
xor
adc
insl
rcr
aaa
adc
or
cmpsl
test
or
lea
and
loope
test
ds
mov
divb
mov
and
dec
push
sbb
js
ljmp
mov
cmp
dec
add
add
sbb
mov
andb
lahf
mov
les
je
mov
pop
jl
and
mov
lods
in
inc
sbb
jo
mov
or
dec
in
lret
leave
mov
mov
arpl
cld
dec
je
jge
xchg
pop
lret
loope
jo
fdivs
repnz
gs
mov
mov
or
dec
push
jbe
pop
pop
test
pop
les
add
lahf
sub
aad
mov
jnp
ret
je
dec
daa
testl
jnp
arpl
mov
notl
loopne
mov
es
push
jge
ret
mov
or
mov
aad
jp
fidivs
pop
in
add
mov
mov
dec
mov
add
sti
jo
pusha
or
les
mov
cmp
std
out
mov
jmp
sub
inc
insl
add
in
mov
add
or
jb
cld
rorb
mov
mov
test
xor
outsb
insb
outsl
scas
adc
push
loopne
addb
test
sbb
ret
subb
nop
dec
repnz
xor
adc
scas
pop
add
mov
xor
filds
loope
push
dec
call
leave
popa
mov
ja
loop
xchg
shlb
jne
ret
movb
or
test
inc
fdiv
das
ret
cmp
inc
into
call
pop
mov
adc
arpl
imul
aad
push
mov
jmp
test
mov
inc
mov
ffree
fadds
sbb
cmp
enter
xor
stos
lcall
inc
and
jg
push
mov
cmp
mov
lea
icebp
pop
adc
fcomp
std
cld
jge
gs
jae
test
insb
push
mov
fistl
out
sbb
and
sbb
pop
mov
sbb
mov
int
cmp
enter
push
es
cmc
imulb
enter
dec
inc
pop
mov
in
clc
test
cmp
jae
addr16
jo
pop
cmp
fstpt
in
popa
andb
cmp
decl
out
cli
adc
mov
xchg
loop
fisttpl
test
and
pop
mov
movsl
pusha
adc
adc
ds
push
cmp
mov
mov
pop
fildll
push
and
dec
orb
push
sbb
mov
mov
push
inc
cltd
pop
fidivrs
mov
popa
mov
mov
sub
add
cli
into
es
inc
addl
add
push
ss
mov
jmp
lods
push
in
xor
and
mov
aad
pop
test
and
cmpsb
imul
and
rorl
movsb
fidivrl
outsb
sub
cmp
adc
jge
mov
sub
jmp
je
pop
pop
pop
mov
adc
push
push
movsb
repz
or
je
jne
lahf
xchg
jae
jl
pop
cmc
jp
dec
and
sbb
cltd
cltd
add
movsl
dec
aas
add
clc
icebp
add
bound
cmpb
leave
lds
dec
sbbb
lea
in
ljmp
push
lcall
cmp
dec
stos
cs
and
sbb
jne
sub
mov
adc
js
xchg
mov
lea
xchg
outsb
pop
cmpsl
rcl
xchg
adc
pop
pushf
adc
aaa
adc
mov
out
aas
push
and
loop
insl
cmp
outsl
loop
out
mov
mov
cmp
pusha
inc
fisttpll
cltd
lcall
mov
cmpb
push
fisttps
dec
cwtl
cmpsl
inc
test
int3
mov
sarb
add
cmp
jmp
fbld
inc
push
inc
inc
dec
mov
sub
mov
cltd
cmp
xchg
test
ret
cmp
loop
orb
mov
add
pop
pop
push
sbb
mov
rclb
popa
fcompl
dec
dec
pop
inc
arpl
cs
pop
pop
pushf
cs
cs
ds
mov
xor
loop
fwait
js
cwtl
jno
roll
mov
fiaddl
in
and
lcall
xor
fstps
or
mov
std
shlb
add
pop
scas
repnz
or
cmp
pushf
call
ljmp
ret
rolb
inc
jl
andl
mov
shlb
and
aas
push
cmp
add
mov
cmpsl
mov
mov
mov
out
std
shr
lea
mov
dec
dec
out
inc
add
gs
loopne
add
outsl
call
or
inc
jl
push
mov
dec
sbb
add
mov
push
dec
scas
dec
in
loopne
dec
inc
add
pop
add
dec
sbb
or
mov
xor
daa
imul
cmp
sbb
mov
andb
add
rorl
shr
and
adc
mov
sbb
fidivl
cs
in
insb
es
pop
adc
or
push
aad
jne
inc
aam
imul
insb
daa
std
add
rclb
mov
add
sub
ja
push
mov
fwait
clc
xor
insb
ror
cmp
mov
inc
in
test
mov
in
arpl
in
das
pop
jns
or
test
ljmp
mov
and
xor
inc
xchg
aam
shrl
add
cld
leave
sbb
fs
mov
sub
mov
pop
imul
add
adc
fwait
add
aam
ficoml
aaa
cld
xchg
imul
mov
outsl
cmpsb
xchg
jge
push
clc
add
fucomi
push
loopne
rolb
jns,pt
adc
cmpsb
loope
mov
rcl
sbb
xchg
mov
add
push
jle
subb
mov
mov
mov
dec
jne
add
xor
pop
add
repnz
pop
fdivr
dec
test
xchg
add
out
sbb
sbb
add
dec
idivb
xchg
sbb
push
test
add
jbe
loopne
push
mov
add
mov
mov
add
inc
xchg
sbb
push
xlat
xchg
xchg
gs
adcb
fcomip
imul
mov
shll
xchg
loope
mov
jb
add
mov
insb
ja
fistl
repnz
lret
dec
aam
out
push
fnstenv
pusha
xor
jge
sarl
inc
mov
mov
addr16
std
pop
mov
add
rcrl
test
rol
aaa
ficoms
jno
add
clc
and
mov
fdivr
lods
push
les
add
repz
outsb
popa
add
mov
adc
push
adcb
or
add
push
out
push
cmp
pop
or
push
sub
adc
clc
outsl
push
jne
in
or
inc
lock
repnz
xlat
sbb
mov
cmpsb
icebp
rclb
inc
pop
inc
cmp
mov
sbb
and
in
nop
push
invd
decb
dec
imul
out
mov
pop
cltd
adc
pop
dec
popf
sub
daa
js
das
sbb
aad
sbb
mov
std
add
subb
imul
sub
clc
jg
push
add
lods
sbb
stos
mov
outsl
ret
lea
stos
dec
cmp
dec
pop
lret
and
pop
out
xchg
dec
in
fildl
sbb
mov
sbb
outsl
pop
jo
jecxz
push
lods
nop
lea
inc
arpl
mov
in
inc
jno
cli
ja
sub
fs
dec
mov
stos
sub
xchg
or
outsl
mov
lods
xchg
inc
inc
add
cmp
mov
jnp
mov
adc
sub
mov
aam
add
and
inc
shrl
cmp
mov
orl
addr16
popf
dec
cwtl
dec
sti
sub
xchg
push
insb
fs
cli
jne
pop
loop
fistpll
or
xor
jo
dec
ficoml
adc
lock
stc
add
or
and
ds
or
fbld
sahf
mov
add
enter
jg
aam
lock
push
xorl
push
jp
lds
push
push
in
mov
add
or
push
ss
cld
push
add
xchg
ljmp
sbb
ret
data16
mov
clc
push
sahf
mov
push
or
je
fcmovnb
xlat
add
adc
inc
shll
aad
fwait
outsb
mov
addr16
or
mov
fsubrl
xchg
addb
test
sbbl
xchg
pop
mov
loop
jge
out
mov
sub
das
outsl
popa
fistpl
iret
out
pop
jne
mov
push
push
add
or
fcmovne
and
adc
push
clc
aaa
pop
pop
push
fidivs
jmp
xchg
dec
lds
outsl
icebp
or
jo
das
enter
outsl
ljmp
xchg
ror
xor
add
or
pop
out
push
cmc
pop
pop
ss
push
inc
andl
fucom
movsl
mov
ljmp
mov
mov
call
mov
pop
inc
loop
and
fldcw
inc
cwtl
mov
pop
ljmp
hlt
inc
aad
lret
or
loope
fldcw
mov
fsub
or
adc
and
xlat
int3
mov
test
pop
stos
loop
sbb
mov
ljmp
cmp
arpl
js
push
sub
adcb
dec
sbb
fcomi
in
and
es
and
cmp
or
insl
mov
jmp
cli
push
mov
in
fidivs
mov
inc
shl
xchg
xchg
and
add
mov
mov
cmp
cltd
fsts
inc
or
insl
js
dec
jns
and
nop
aad
push
sbbb
xlat
scas
or
adc
sbb
ret
mov
cmp
push
mov
or
andl
fstl
fidivrs
inc
jnp
dec
lock
ljmp
shll
adc
ret
fdivl
int
dec
push
cmp
and
push
adc
sub
pop
mov
add
and
xor
arpl
adc
add
sbb
pop
fdivl
and
inc
cs
ljmp
push
xor
sub
scas
les
push
cmp
cmc
movsl
push
lods
adc
fs
cmc
jp
xor
sbb
mov
ljmp
and
and
shlb
test
ror
ret
jmp
adc
ds
sub
push
in
iret
mov
rcr
xchg
pop
test
inc
push
push
mov
outsl
push
clc
push
call
pop
mov
pop
insb
in
push
push
push
out
data16
ficomps
push
push
subl
sbb
js
xchg
je
inc
jl
mov
inc
pushl
mov
pop
mov
sahf
pusha
jno
dec
enter
or
in
and
sbb
jae
cmp
sub
sub
outsb
jmp
out
incl
sub
push
xchg
dec
imul
hlt
cltd
rolb
fcompl
es
incl
xor
add
shlb
call
les
lock
and
cmp
add
adc
imulb
frstor
xor
xor
pop
add
imul
mov
add
jnp
dec
es
push
mov
movsl
fadds
js
dec
push
push
push
fwait
lret
or
mov
cmp
je
ret
xor
xor
xor
xchg
psubusb
gs
popa
dec
dec
aaa
jecxz
lret
xor
push
loope
sub
jo
dec
testl
pop
lods
loopne
cmp
cs
mov
jge
jg
fsubrl
add
test
sub
aas
lock
gs
mov
inc
fwait
rol
jno
mov
stos
and
add
inc
push
cld
loopne
or
dec
std
cmp
insl
and
push
in
loope
mov
not
mov
dec
inc
sbb
pop
mov
inc
fiadds
xlat
inc
add
not
add
dec
jbe
neg
or
add
pop
inc
sub
fincstp
filds
fimuls
incl
lret
into
neg
add
into
inc
neg
xor
mov
or
enter
inc
push
repz
roll
in
not
sub
xlat
push
add
fimull
sub
aas
mov
xor
icebp
cmp
sbb
hlt
mov
insl
fnstenv
or
or
jne
jo
or
movsb
notl
shll
inc
aas
mov
jl
add
push
imul
arpl
fnstsw
sbb
push
push
in
mov
push
xor
addr16
mov
mov
pop
add
lret
sahf
jo
push
lea
filds
adc
test
aam
add
aas
fmull
test
mov
push
and
push
aaa
ja
std
sbb
mov
push
popl
ja
fnstenv
xor
out
int3
and
dec
cli
inc
push
push
jns
jo
addb
fstl
push
sahf
dec
cmp
cli
push
xchg
aaa
shlb
test
add
cld
pop
sub
cld
shrl
add
icebp
cld
pop
mul
adc
xchg
dec
jnp
cltd
sub
lds
in
mov
adc
leave
scas
mov
adcl
push
pusha
jge
lock
add
jae
test
pop
or
mov
mov
fst
in
xor
and
push
cmp
mov
mov
xorl
xchg
push
pop
hlt
sarb
aaa
in
std
push
push
inc
dec
mov
mov
pop
adc
sar
test
jle
mov
dec
lods
inc
dec
out
add
aaa
mov
repz
push
fdivp
testl
inc
sub
pop
pop
sub
mov
inc
sbb
cmc
or
test
push
dec
mov
add
jae
popa
sub
jmp
test
lods
sub
mov
bound
cmpsl
push
loopne
sbbl
outsb
adc
aaa
das
jne
inc
add
inc
inc
add
push
jg
inc
into
lcall
push
andl
mov
inc
ljmp
aad
mov
xchg
jge
ficomps
cmp
xor
and
out
data16
push
pop
xor
jg
jle
in
cmp
xchg
jecxz
outsb
inc
aam
mov
sub
dec
xchg
ror
dec
stc
add
nop
mov
push
sbb
stc
pop
scas
fwait
nop
ja
call
add
ds
icebp
add
dec
loopne
movsl
adc
sti
scas
ja
xor
je
dec
dec
shlb
or
dec
dec
add
das
loope
lcall
xor
dec
pop
pop
repnz
mov
mov
out
pshufw
fs
push
push
shll
cmp
data16
ss
add
cmpsl
inc
stc
iret
gs
mov
lods
xchg
push
sub
pop
dec
push
lock
push
sub
mov
mov
loope
subb
mov
xlat
mov
push
adcb
cmp
out
int3
pop
repnz
loope
loopne
jle
sbb
jae
xor
cmp
aam
lds
inc
loope
mov
fiaddl
ljmp
pop
xchg
out
mov
mov
xor
pusha
test
mov
cs
hlt
addb
fsubr
loope
xchg
roll
inc
je
or
add
push
nop
test
rcrb
pop
cltd
dec
lock
imul
push
pop
xchg
push
add
add
stos
insb
imul
out
mov
xchg
xor
shlb
fsubrp
pushf
adcl
push
lds
inc
mov
mov
lods
pop
add
pop
cmp
cmp
push
lds
add
loop
add
inc
dec
mov
cld
imul
or
das
je
jb
xchg
fldl
dec
cwtl
jl
insb
clc
lret
imull
or
inc
sbb
xor
lret
add
jge
cld
xchg
inc
movsb
xor
dec
jbe
xchg
sbb
lock
jge
je
or
or
mov
push
push
stos
sbb
std
test
xchg
inc
js
sub
stc
mov
adc
push
xor
outsb
test
and
push
ss
repz
lods
inc
mov
scas
push
addb
mov
iret
std
xor
pop
jno,pt
insl
xchg
fisubrl
dec
ficomps
mov
dec
je
ret
insl
jo
out
xchg
mov
fsts
mov
cs
inc
popa
aaa
sub
add
addb
cmp
shr
cld
call
out
enter
sub
pop
ret
sbbb
ja
mov
mov
mov
dec
mov
jne
and
xchg
lds
loope
jnp
movl
cwtl
cmp
dec
fdivr
sar
cli
inc
xor
out
jo
fsubrl
fsubs
shlb
xchg
insb
jge
adc
nop
lods
repnz
fs
pop
inc
ss
movsb
test
sbb
arpl
test
mov
mov
xchg
std
popa
outsl
push
sbb
cmpb
dec
inc
cmp
mov
and
test
push
dec
xor
in
xchg
inc
xchg
pop
cmpb
xor
rcrb
xchg
adc
pop
cwtl
pop
addr16
aaa
push
push
imul
xchg
push
cmpl
leave
out
pcmpeqw
jo
iret
mov
inc
add
iret
ret
cwtl
mov
xchg
adcb
xor
add
pop
imul
push
jge
es
xchg
xor
xchg
mov
push
idivl
push
loopne
test
sub
nop
mov
pop
mov
mov
dec
jbe
jl
cs
sarb
or
scas
movl
push
in
lea
icebp
iret
pop
daa
pop
movb
lods
push
add
inc
loop
out
push
xor
fs
mov
arpl
xor
aas
cli
les
sbb
popa
mov
or
and
dec
jo
insb
adc
leave
xchg
aas
sbb
mov
dec
lea
std
jp
int3
pop
cmp
popa
xor
cmp
icebp
xchg
arpl
push
mov
inc
lea
xor
push
iret
xchg
pop
push
pushl
dec
or
sub
mov
xchg
mov
jb
int3
push
outsl
push
outsb
xchg
jl
mov
mov
ja
jge
gs
push
mov
sbb
dec
mov
in
mov
nop
jge
fsts
loopne
jae
repnz
pusha
or
mov
inc
daa
dec
add
inc
dec
push
rorl
inc
dec
inc
jmp
dec
sarb
in
pusha
lock
stc
cmp
lock
aaa
aaa
out
mov
repz
fwait
mov
jo
test
pop
adc
clc
xchg
fldt
inc
inc
in
addb
push
loopne
imul
adc
or
adc
je
ret
cmp
jecxz
repnz
jo
pop
or
inc
outsl
adc
adc
push
dec
add
push
xor
push
add
dec
push
lea
inc
ret
sbb
call
mov
sub
mov
lods
mov
pop
inc
add
mov
add
das
add
ds
stos
lock
ss
xchg
xchg
lret
xchg
cld
add
lock
ja
mov
addb
int
lods
inc
insb
jne
sbb
scas
push
adc
sbb
loop
negl
dec
push
xchg
lock
cmp
jns
outsl
dec
imulb
out
push
cmp
in
or
test
xor
xor
add
inc
xchg
fnstenv
xchg
xchg
xchg
mov
stos
shll
dec
jb
popf
jp
test
addl
pop
lcall
enter
dec
imul
test
dec
add
ret
leave
add
xchg
scas
add
push
lock
push
mov
leave
sub
ret
adc
lods
mov
mov
in
mov
dec
or
mov
loope
leave
test
cmpsl
mov
pop
cmp
test
mov
xchg
gs
mov
sbb
mov
mov
out
mov
das
push
fcompl
ljmp
shll
fs
mov
adc
and
pop
inc
add
push
cltd
sbb
inc
mov
cmp
icebp
mov
std
add
neg
mov
or
enter
divb
adc
sbb
cmp
gs
cmp
lea
popa
and
leave
addr16
aam
lds
arpl
sub
push
xor
out
sub
scas
push
mov
push
outsl
leave
xchg
dec
xor
mov
dec
mov
xchg
mov
add
cmp
mov
call
fwait
rorl
stos
inc
mov
xor
sub
jle
lcall
jne
fs
fs
xchg
lock
mov
sahf
sar
xchg
mov
sbb
add
clc
ljmp
sbb
inc
addr16
shll
in
sbb
mov
mov
jecxz,pn
push
orl
je
pop
inc
cltd
cli
dec
inc
xchg
push
imul
clc
push
jne
adc
jnp
inc
inc
out
ja
add
mov
or
mov
dec
xor
movb
ret
push
sbb
and
clc
add
ror
mov
inc
jmp
int3
jne
pop
inc
inc
and
or
add
nop
push
add
push
fs
push
insl
ja
pop
or
inc
jns
aaa
push
dec
inc
fbld
inc
dec
dec
add
inc
inc
dec
dec
push
push
push
inc
dec
dec
push
and
incl
inc
push
jbe
inc
data16
cmp
aaa
xor
xor
xor
mov
push
push
push
push
dec
xor
push
inc
add
push
outsl
das
push
rclb
imul
decl
add
push
bound
imul
add
adc
imul
add
inc
inc
push
dec
dec
incl
insl
dec
push
mov
mov
in
scas
mov
loop
test
imul
sbb
adc
incl
popf
sbb
dec
aam
gs
mov
inc
sbb
dec
sub
lods
jno
insb
into
imul
xchg
jecxz
imul
or
mov
test
fisttpll
addr16
xor
cs
mov
xchg
pop
pop
in
insb
xor
aad
fs
jmp
out
sbb
jae
fdivs
and
cltd
inc
xor
stos
outsl
cli
jge
stos
or
pop
fdivl
jmp
adc
pushf
popa
ja
call
movsl
jae
sti
into
cmp
mov
in
jae
mov
jl
xlat
mov
mov
fnstsw
incl
jbe
and
test
push
xchg
push
sbb
cmp
lock
ret
incl
mov
out
test
mov
stc
mov
int3
mov
xchg
loope
sub
add
jg
mov
ret
cwtl
imul
aad
scas
scas
push
call
xor
mov
js
lcall
mov
and
mov
stos
stos
or
dec
or
icebp
mov
leave
jg
jmp
jo
icebp
inc
int
mov
xchg
cmp
fldt
cmp
mov
mov
jmp
cld
ret
rolb
out
ljmp
js
imulb
ror
xchg
pop
int
and
test
sti
test
test
pop
cmp
mov
cmp
call
fwait
sarl
and
cli
dec
enter
cwtl
pop
push
mov
repnz
enter
lret
inc
xorb
xchg
cmp
ljmp
and
jp
dec
insl
js
dec
inc
jp
and
out
mov
ds
mov
push
pop
jo
adc
addl
sbb
push
daa
ljmp
cltd
push
xchg
dec
inc
mov
rorb
jbe
cld
test
xor
in
cmp
jmp
adc
cmp
incl
pop
adc
jmp
xchg
lods
xchg
and
idivl
xchg
enter
ja
arpl
incl
fcomps
pop
movsb
push
int
push
push
pop
xor
mov
sbb
lcall
add
test
aam
fcoms
ds
push
mov
cli
push
add
mov
in
aaa
ds
xor
or
mov
xor
jge
inc
decl
xchg
sbb
int3
jno
popf
clc
dec
add
repz
push
mov
and
jg
xchg
and
out
rcrb
les
out
lds
dec
cmp
xchg
test
in
pop
inc
in
ljmp
incl
pusha
decl
add
add
dec
adc
inc
subl
pushl
cmp
imul
add
out
arpl
loop
je
cmp
add
pop
out
mov
divl
fcom
cmp
in
cli
mov
in
lcall
jb
sbb
lcall
mov
imul
ds
call
cmpsl
je
sbb
popf
lock
push
sub
mov
mov
xor
fs
inc
int
les
sub
lcall
popf
test
cmpsl
xor
pop
mov
sub
jmp
cmp
pop
lret
test
es
pop
insb
push
call
xchg
into
and
jge
jnp
out
arpl
popa
es
jg
or
rcl
idiv
fsubrs
rolb
xchg
sub
nop
push
sub
fwait
jbe
add
jb
sbb
hlt
scas
lods
pop
jno
push
rclb
sub
or
adc
stos
mov
test
incb
sbb
mov
push
aaa
outsb
mov
arpl
cmp
setns
decl
jmp
test
jge
xchg
shlb
movsl
jecxz
jno
hlt
mov
flds
mov
push
xor
dec
cmpb
rcll
cmp
nop
add
sahf
fistps
out
lock
hlt
cltd
iret
inc
clc
adc
pop
xlat
xlat
cwtl
stos
cmp
inc
sub
nop
push
push
shll
sub
cmp
inc
add
call
jmp
aad
add
xor
int
lret
movsb
clc
jb
push
in
fs
sbb
ljmp
xor
cmp
or
rclb
jg
cmc
mov
in
pop
dec
movsl
mov
push
es
mov
pop
or
xchg
or
outsl
xor
adcb
enter
push
aas
mov
aam
aam
pop
push
shll
jnp
or
jge
sbb
movsl
mov
jmp
pop
lret
pop
mov
xor
sbb
dec
lret
adc
js
mov
test
push
inc
mov
push
sbb
stos
icebp
movsl
stc
inc
inc
sarl
xor
and
dec
pop
outsl
jb
xchg
aad
pop
insb
dec
push
mov
mov
cld
adc
pusha
insl
add
sbb
loope
or
mov
sti
ljmp
std
out
xor
cmp
outsl
adc
lcall
add
cltd
pop
or
scas
scas
sbb
lock
jle
inc
pop
pop
jle
into
ficompl
adc
mov
jmp
and
outsl
adc
pop
jo
xchg
rcrb
jmp
and
addr16
rcrl
popf
mov
rolb
mov
sahf
int
jne
cmp
stos
mov
or
shlb
addr16
pop
mov
inc
jg
jns
add
inc
adc
lcall
test
xchg
das
shrb
add
jmp
cmp
inc
jmp
jo
andl
cwtl
and
loopne
pop
clc
ret
xor
mov
shrb
jno
jg
and
jg
cltd
imul
ret
mov
cltd
xchg
pop
mov
xor
movsl
mov
or
sbb
pop
das
leave
inc
mov
adc
dec
pushl
out
scas
jb
or
rcll
imul
inc
add
and
sahf
bound
fdivs
cmp
mov
xorl
xchg
pop
xor
xor
jge
mov
sbb
ljmp
sub
test
fs
jno
loop
mov
jnp
loopne
clc
push
sub
sub
mov
add
mov
push
adc
out
lock
xor
cmp
in
pop
cli
push
xchg
xchg
pop
push
pop
imul
ret
jle
xchg
adc
outsl
mov
inc
push
icebp
lcall
push
push
adc
and
xor
inc
pop
rolb
pop
pop
sub
ljmp
cmp
mov
test
push
rclb
rcll
push
ret
pusha
aam
rcl
xchg
pop
sbb
decl
inc
cmpsb
rorb
and
loope
andb
lock
fsubrl
and
fucom
test
jp
mov
dec
adc
sbb
rcr
sbb
push
js
or
js
imul
or
jne
sbb
jmp
mov
xor
pop
int3
fwait
mov
mov
test
push
pop
scas
aas
out
jmp
mov
clc
popa
mull
mov
sarl
xlat
data16
clc
pop
pop
sub
lret
inc
cltd
or
fnstsw
sub
xorb
xor
fistpll
xor
hlt
in
jl
push
dec
ja
sbb
lahf
sub
sbb
fbld
addl
sub
sub
xchg
fnstsw
outsl
decl
rcll
jae
fimuls
dec
shlb
das
ss
std
ljmp
lock
outsl
mov
popa
sbb
jb,pn
sub
das
xor
xchg
sub
ljmp
dec
mov
psubsb
imul
lret
mov
pop
ljmp
cld
idivb
pinsrw
add
inc
push
out
outsb
test
or
mov
cmc
fidivrl
ds
pop
pop
cltd
pop
mov
mov
mov
ljmp
sub
dec
mov
int3
dec
sbb
push
fildl
scas
jl
dec
add
stos
push
push
push
outsl
sbbl
lcall
lods
jge
mov
pop
sbb
sub
xadd
cld
ficoml
pop
je
je
ss
outsl
push
sbb
push
in
jl
adc
fisubl
xchg
sub
pop
adc
rolb
outsl
pushf
push
cmpsl
ljmp
insl
xchg
or
jl
fwait
xor
push
jbe
xor
pusha
sbb
decl
sbb
stos
outsl
outsb
movsl
push
adc
xchg
pop
cltd
pop
clc
call
mov
mov
enter
jge
push
xorb
jo
aaa
pop
scas
dec
sbb
pop
xchg
fisttps
pushaw
jecxz
jmp
in
aas
cmp
jno
stos
and
ljmp
jae
loope
jmp
or
jp
adc
mov
mov
sbb
push
sub
popa
mov
cmp
sti
pop
cltd
push
and
cmc
push
fdiv
mov
or
fmuls
pop
sub
jle
dec
rcll
and
hlt
xchg
cmc
das
outsl
test
push
nop
fs
mov
dec
testl
push
popa
rcrb
mov
push
add
stos
imul
out
mov
lcall
stc
or
gs
push
loop
sar
cwtl
sbb
inc
repnz
xchg
inc
xchg
cmp
loope
fs
js
aas
inc
icebp
jmp
or
fdivrl
push
sbb
add
scas
call
aad
fwait
mov
and
std
out
xor
enter
mov
or
adc
fstpt
das
cld
shrb
test
fists
jb
cmpl
cmp
loopne
jne
mov
mov
js
add
ss
cmpsb
lods
mov
pop
das
in
jg
rcl
push
adc
es
sub
mov
cwtl
inc
in
xchg
pop
xor
ljmp
std
sti
ret
mov
test
int3
xchg
add
mov
shrb
icebp
pushl
xchg
pop
xor
mov
loopne
xchg
pop
hlt
adc
cmp
mov
hlt
incl
pop
enter
outsb
sbb
sysenter
lea
push
cld
mov
pop
rorl
bound
movsl
mov
inc
push
cld
das
test
fistl
lcall
jp
incl
or
cmp
adc
cmpsl
inc
push
pop
adc
pop
xor
outsb
mov
push
loopne
lcall
insb
outsl
sub
push
scas
dec
sub
lret
mov
pop
mov
call
dec
dec
insl
lock
or
push
pop
jl
push
stc
jg
sub
loop
js
fsubl
jns
cs
sbb
mov
outsb
iret
mov
les
xor
movb
jg
decl
xchg
cmp
mov
fwait
or
insl
lret
lock
dec
sub
mov
cmc
lock
and
out
test
cmc
das
enter
and
scas
mov
mov
sbb
call
inc
enter
or
sub
and
jge
and
mov
andl
push
fsubl
jp
in
push
nop
push
adc
or
clc
sbb
push
into
pop
sbb
pop
ret
std
decl
add
jne
xor
sub
aam
or
mov
cmp
int
push
add
movsl
push
add
fistpll
dec
fcompl
fsubp
and
ret
add
icebp
incl
mov
leave
lcall
sub
or
rcll
mov
outsl
in
dec
mov
loopne
sbb
call
jnp
push
clc
push
clc
cmpsb
out
push
inc
cwtl
mov
jnp
and
movsl
imul
enter
cmpl
pop
mov
enter
jle
outsb
icebp
lret
in
aas
inc
lock
mov
out
jg
jns
idivl
call
mov
pop
orl
cs
xchg
push
sub
fistpll
push
inc
inc
imul
fwait
in
jb
loopne
cs
das
lock
hlt
sbb
or
in
or
andb
clc
sbb
scas
in
gs
or
aaa
js
dec
stos
jo
push
aaa
enter
pop
fwait
movsl
aad
jnp
xchg
ja
adc
jb
adc
outsl
std
inc
dec
outsb
in
jo
ret
cmp
iret
xchg
addr16
iret
fdivl
das
pop
fcompl
cmpl
ljmp
dec
pop
sarl
inc
or
add
lcall
add
cld
incl
mov
rcrb
sbb
xor
pushf
push
jg
fadd
pop
push
cmp
mov
leave
inc
shll
dec
lods
mov
cli
jo
in
cmpsb
or
mov
add
pop
clc
call
sub
enter
fstpt
sbb
decl
and
add
fidivl
pop
rcl
mov
push
pushl
jo
mov
pop
adc
pop
ret
insb
xlat
xchg
cmp
jg
divl
xchg
fsubrs
mov
sub
scas
decl
loop
or
cmpsl
jp
cmc
movsl
dec
or
cmp
mov
clc
test
insl
stos
pop
repnz
push
cmpsl
and
ja
aas
mov
xchg
mov
std
out
jle
inc
mov
lcall
gs
outsl
lock
mov
add
mov
rclb
ss
inc
rorb
or
and
push
fldcw
sbb
fsubl
mov
xorb
inc
out
scas
stc
jnp
ja
aaa
sub
inc
or
push
fldt
or
loope
mov
push
pop
and
xchg
gs
mov
pop
sbb
fcoms
jecxz
int
add
xchg
fsubrl
ret
cwtl
inc
xor
ljmp
out
mov
mov
mov
dec
fsubp
decl
out
jbe
leave
lods
sub
sbbb
or
mov
scas
or
scas
adc
sub
js
jg
je
or
mov
jg
addl
fisubl
or
adc
bound
mov
sbb
mov
or
aaa
mov
or
jno
imul
push
mov
lock
ds
lcall
adc
arpl
mov
pop
pop
stos
aam
cld
movsb
mov
in
lcall
xor
sub
xor
xchg
pop
and
mov
jno
or
in
or
mov
dec
scas
mov
sub
mov
cltd
enter
cli
lea
clc
je
test
mov
pop
sbb
and
mov
daa
add
or
xchg
enter
and
mov
dec
cwtl
into
lcall
cltd
xchg
xlat
test
decb
push
push
jmp
insb
stos
dec
cmp
int
adc
incl
inc
rorl
push
mulb
adc
in
xchg
cmpsl
jns
scas
aas
xchg
es
ret
sub
das
cld
pop
jnp
xchg
decl
inc
jbe
pop
push
pusha
cwtl
idiv
ljmp
dec
popa
jg
mov
bound
mov
outsl
aad
shrl
xchg
lods
cmpsl
loop
ficomps
inc
push
jnp
ljmp
pop
orb
jbe
push
lods
mov
adc
cmpl
repnz
ficompl
mov
fbld
jns
lret
scas
sbb
cli
sarl
add
test
inc
mov
daa
clc
ret
outsl
or
pop
and
cmp
lahf
arpl
nop
xor
cld
aaa
js
fidivs
or
mov
out
hlt
decl
fisubrs
mov
or
dec
adc
and
call
outsl
clc
hlt
mov
sbb
loop
jp
jns
sbb
push
jge
dec
inc
dec
js
scas
jae
cmp
pusha
sbb
push
out
mov
push
pop
test
sub
sbb
sbb
or
mov
add
jl
and
and
lock
or
mov
popf
out
dec
mov
sbb
adcl
cltd
inc
fidivrs
inc
sub
out
das
cwtl
and
sbb
enter
jne
pop
stos
dec
xchg
or
ss
xor
ljmp
jg
idiv
or
dec
xchg
addl
pop
fucomip
rcl
push
xchg
mov
jg
repnz
sub
les
pop
dec
incl
jp
push
iret
out
mov
mov
jo
xchg
adc
data16
scas
jbe
aas
cld
cmp
pop
mov
jmp
pop
test
mov
push
sbb
cmpsl
sub
jmp
out
leave
mov
push
js
jmp
pop
mov
adc
pop
or
push
add
outsl
cmc
push
mov
lret
inc
push
arpl
lock
ljmp
push
mov
test
test
jmp
mov
adc
sbb
inc
clc
xchg
mov
jmp
add
sub
cmp
push
data16
stos
lea
cld
sub
test
fisttps
add
push
jns
inc
insl
jno
or
pushf
daa
add
je
lock
jb
rclb
jns
and
sarb
pop
pop
and
mov
sbb
add
push
jbe
sbb
jp
jnp
fists
add
add
mov
out
mov
cmpsb
add
adc
fildl
pop
or
or
cmc
dec
add
push
mov
jge
ds
sbb
or
sub
xchg
gs
add
mov
ja
cli
ja
lds
insl
enter
loope
ret
cli
push
js
mov
fisttps
sbb
sarb
mov
add
into
shl
and
push
add
mov
stc
decb
rcll
xchg
push
add
ljmp
test
xchg
or
cltd
fstl
push
mov
mov
push
inc
sbb
pushf
xchg
filds
lret
stos
subb
pop
and
and
push
and
jp
pusha
loope
jbe
add
and
push
adc
bound
add
xor
pop
lahf
imul
std
mov
pop
cmpl
cltd
xchg
mov
mov
mov
jmp
push
aam
jle
movsl
mov
adc
inc
fstps
in
inc
ljmp
xor
lahf
dec
sbb
std
popf
in
jecxz
add
xor
lods
adc
mov
push
into
inc
pop
xchg
add
jg
fistpll
inc
xchg
les
sahf
aad
ljmp
or
lds
je
adc
aas
not
sahf
test
in
call
imul
faddl
adc
push
jbe
or
stc
sub
xchg
or
ffree
incl
sub
cs
pop
sub
cmpsl
pop
test
aaa
push
add
in
in
loope
add
je
sub
sti
sbb
jns
push
or
ja
divl
out
mov
push
sub
lods
jle
fadds
outsb
fisttpl
imul
xlat
and
inc
ss
and
dec
jl
add
fdivr
call
xchg
lret
mov
add
loope
loopne
addr16
xor
mov
pop
into
adc
arpl
aam
pusha
mov
neg
fistpll
mov
mov
push
mov
enter
inc
repz
pop
jbe
sahf
jl
inc
ljmp
daa
mov
outsl
or
lret
xlat
lret
fstps
mov
das
enter
pop
add
pop
addr16
in
jno
movsl
or
jo
addr16
cmp
mov
ret
lock
push
inc
scas
cmp
or
push
ret
test
test
xor
mov
add
jo
xchg
and
lock
or
mov
call
aam
shl
mov
push
aas
inc
popa
sub
push
dec
mov
xchg
loopne
stc
jae
sbb
add
jle
imul
divb
test
out
inc
jg
ret
mov
adc
pop
mov
jmp
xor
imulb
add
jmp
wrmsr
add
fwait
ja
add
shll
jmp
pop
nop
sub
pop
mov
mov
adc
lods
mov
das
fbld
pop
pusha
popa
iret
inc
daa
loope
data16
mov
dec
mov
insl
add
jp
sbb
orb
mov
push
and
and
xchg
lock
cmpsl
js
rcl
in
mov
hlt
jl
and
sahf
push
mov
cmpb
lahf
xchg
xor
sub
mov
addr16
xchg
ja
je
mov
stos
loopne
push
sub
dec
pop
xchg
jg
aad
adc
cmpsl
mov
ja
int3
mov
mov
repz
lcall
je
xchg
mov
out
mov
andl
out
popa
jl
cmc
add
cs
push
loope
js
das
nop
xchg
outsb
mov
lock
fisubrl
jae
mov
or
push
std
mov
add
add
jge
add
mov
imul
sti
inc
xchg
movb
dec
movsb
or
add
jne
xchg
lret
xorl
cmp
mov
mov
je
push
test
insl
jmp
js
rcl
lock
imul
sub
adc
mull
or
outsb
mov
hlt
nop
cmp
mov
xor
cs
xor
rcll
outsl
insl
decl
cmpsb
andnps
outsl
mov
fs
adc
jle
sti
daa
jno
jo
mov
ja
pop
pop
fstl
daa
imul
sbb
jle,pt
clc
and
imul
add
mov
rcrb
adc
jne
lea
mov
shll
shll
xchg
adc
add
mov
es
pop
sbb
rorb
and
aas
cli
xor
push
push
or
or
stos
in
mov
xor
sub
xchg
add
push
outsb
jb
jg
js
adc
adc
sbb
in
add
push
cltd
xor
dec
adc
testb
xor
add
enter
sbb
or
jg
sub
scas
and
push
js
mov
mov
fistpll
xchg
adc
pop
jg
test
inc
pushf
cmp
cwtl
pop
push
inc
pop
insb
add
mov
cmp
pop
ss
dec
sbb
adc
fsub
scas
inc
push
test
push
push
mov
dec
je
pop
pop
fists
ret
aad
bound
popf
pop
mov
add
mov
and
int
jae
dec
je
shl
int3
dec
icebp
loope
or
inc
inc
cltd
aam
fistpll
xchg
testb
xchg
push
inc
or
sbb
sbb
fisttps
gs
mov
add
mov
outsl
mov
cmpsb
stc
pop
cmpsb
in
sub
xchg
test
ficoml
mov
adc
pop
insb
xchg
shll
fstl
cmp
notl
mov
cli
add
inc
arpl
mov
call
inc
std
dec
cmp
pop
das
mov
xchg
hlt
nop
mov
mov
or
jl
push
jae
sub
mov
je
push
aaa
aam
pop
imulb
enter
fists
es
push
mov
movsb
sbb
aam
mov
fwait
add
jg
movsl
adc
sbb
pusha
push
push
jbe
fisubrs
cmp
dec
add
add
clc
xchg
add
fcoms
push
incl
push
js
push
mov
stos
cmpsl
inc
repz
add
aaa
shr
loop
movsl
xchg
cli
or
cmp
ret
jg
jo
out
lea
sbb
pusha
sub
sbb
jo
inc
stos
rorb
adcl
or
sbb
mov
push
xor
out
lahf
mov
push
leave
cmp
push
or
sbb
sbb
sub
lret
push
stc
jecxz
mov
sbb
or
popa
mov
iret
xchg
adc
push
jns
jle
mov
hlt
shrl
cld
pop
out
incl
lock
push
popa
xor
aas
cld
or
pop
mov
cmc
clc
add
iret
es
mov
and
jno
xchg
xor
push
and
xchg
jbe
sar
sbb
adcb
out
fisubl
aaa
cs
mov
and
bound
and
xor
pop
mov
test
add
or
mov
int3
add
cmp
sub
icebp
rcr
repnz
or
xor
sbb
lds
fcoms
arpl
pop
add
jno
mov
jno
jmp
add
sub
movsl
loop
push
ret
je
repz
add
xchg
pop
mov
mov
fwait
or
add
add
les
push
adc
mov
dec
es
push
xchg
out
push
pop
ljmp
inc
rclb
jg
out
loopne
inc
pop
ljmp
je
sbb
adc
les
dec
sbb
pop
jns
push
pop
cmp
stos
bound
test
add
push
pop
cmp
test
mov
lret
or
divb
outsl
in
xlat
rcll
addr16
add
sbb
sbb
jl
shlb
cld
gs
pop
adc
ds
pushf
mov
data16
sbb
mov
dec
out
rcll
pop
xchg
push
inc
movb
fs
repz
jno
jne
fcomps
pop
das
imul
es
popa
cmpsl
shlb
xor
sarl
stos
addl
test
add
in
insl
jmp
add
ss
sbb
mov
test
ja
loope
in
adc
bound
and
outsb
sbb
push
xchg
dec
in
test
inc
xchg
mov
shlb
addr16
ror
int
mov
cmp
rcll
sti
fnstsw
lock
scas
and
popa
ss
sbb
ja
mov
jbe
sbb
mov
mov
test
pop
mov
scas
jg
xorl
fdivl
xchg
adc
nop
into
outsl
cs
push
cmp
mov
sub
cmp
jle
stos
mov
nop
or
das
out
call
aas
cli
or
loopne
fidivs
sub
test
ljmp
icebp
or
cmp
cmpsl
jmp
subl
jl
push
pop
or
loop
xchg
lods
cltd
push
out
xor
mov
cmp
ja
int
test
mov
int
fs
add
outsl
mov
popa
push
xchg
pusha
xchg
inc
pop
mov
mull
fdivrs
enter
es
popa
adc
mov
push
dec
std
outsl
lret
outsl
inc
adc
cmc
scas
pop
test
mov
jbe
add
fwait
push
insb
mov
mov
jecxz
ljmp
and
rorl
sub
mov
jno
mov
mov
cmp
daa
loop
out
push
inc
test
test
fld
testb
cmp
stos
daa
stos
lds
or
in
pop
das
mov
add
aam
das
mov
mov
or
mov
aad
std
and
sub
sbb
loope
inc
loope
cmp
fldenv
add
push
mov
pop
cmp
lods
mov
fdivs
adc
dec
push
orb
fildll
fcom
pop
mov
jle
mov
icebp
test
pop
dec
lcall
sbb
pop
inc
and
push
in
or
fwait
xchg
dec
out
stos
popa
sbb
cmp
push
imul
pop
xchg
jmp
xchg
mov
inc
xlat
and
mov
adc
mov
call
shrl
stos
pop
testb
push
add
or
gs
mov
jp
dec
dec
clc
pop
xchg
jle
xor
add
arpl
enter
ja
out
mov
out
xor
ja
mov
xchg
jp
lea
iret
xor
test
mov
xor
jae
fnsave
sarb
dec
pusha
add
std
fistps
outsl
adc
jmp
xchg
and
and
test
sbb
aas
das
out
cli
fistl
aaa
in
sub
xor
or
les
sbb
push
mov
fisubl
mov
dec
mov
lods
leave
xor
pop
sub
clc
xlat
xchg
test
jecxz
popa
adc
mov
pop
adc
rcrl
data16
pop
stos
hlt
jnp
add
adc
ljmp
dec
jno
gs
imul
cmpsb
jb
mov
rcr
insl
fistps
inc
shl
out
or
test
mov
or
test
test
pop
push
inc
mov
mov
or
cmp
jbe
add
cmpb
pop
pop
dec
adc
fwait
stos
loop
push
in
jb
test
add
aaa
js
xchg
push
int
movsl
loop
stc
add
cmp
test
add
mov
cmp
mov
mov
jo
popa
mov
cmp
cli
fisttpll
nop
pop
push
frstor
inc
jecxz
jmp
jp
xor
jmp
dec
cmpsb
daa
ljmp
push
pop
loopne
dec
mov
mov
jge
cli
pop
add
cld
aaa
mov
pop
mov
push
and
rcrb
jle
xchg
push
fdivr
add
stos
call
sbb
cmp
cmp
ror
mov
lret
das
into
nop
xor
jne
inc
negl
lods
les
leave
xchg
lahf
fidivrs
xor
mov
movb
fnstenv
mov
pop
clc
rcrb
mov
nop
scas
stos
mov
loopne
hlt
neg
hlt
pop
shlb
cwtl
jb
dec
mov
scas
mov
pop
pushf
icebp
sbb
aaa
subb
sbb
push
dec
nop
aam
ja
je
fildll
adc
test
shrb
sub
icebp
mov
pop
scas
cmpsb
test
push
je
push
lcall
lods
jle
add
jmp
jl
arpl
fwait
outsl
ljmp
mov
mov
es
sbb
adcl
inc
xorb
add
sbb
loopne
insl
incl
sub
out
ret
sub
inc
enter
or
nop
xchg
mov
pop
adc
ret
sub
pushf
cltd
test
xchg
in
jo
push
jmp
xchg
xlat
pusha
data16
into
inc
inc
xor
dec
sub
xchg
lret
in
push
cmp
in
inc
push
test
or
cmp
push
push
push
jge
stos
clc
jb
cmovns
lds
push
pop
cmp
add
pushf
fcoms
mov
add
xchg
fsubs
add
jmp
daa
push
cmpsb
or
mov
out
lret
pop
and
insl
faddl
and
je
xor
outsl
ljmp
mov
aaa
leave
push
fmul
xor
xor
movsb
add
pop
addr16
sbb
pop
sbb
les
cwtl
lods
rolb
sub
jge
stos
or
or
mov
stos
jecxz
leave
aam
cltd
cltd
arpl
cmp
xor
outsl
push
notl
lods
jg
jns
pushf
aad
and
lea
inc
addb
sub
sub
dec
mov
add
movsl
xor
and
test
ss
call
dec
aas
out
or
inc
add
gs
xchg
pop
ret
mov
adc
sbb
adc
flds
xor
stos
jno
js
push
lcall
jecxz
and
ret
mov
icebp
dec
or
test
adc
out
ss
adc
push
aaa
sbb
mov
call
fs
in
enter
in
mov
or
mov
mov
into
ret
add
sub
push
out
cmp
call
decl
insb
faddl
lock
cld
jb
xchg
in
adc
mov
out
mov
push
pop
cmp
xchg
jecxz
fisttps
movsl
repnz
shll
std
cmpsl
lock
sbb
sbb
dec
adc
cmc
out
lret
cmp
testb
sbb
scas
nop
adc
insb
add
mov
sar
mov
stos
flds
jge
les
adc
movsb
fs
dec
push
mov
decl
push
call
imul
mov
pop
add
imul
movsb
and
es
inc
jne
arpl
lds
in
sbb
pop
lods
jbe
push
cld
mov
in
lods
sub
inc
into
je
pusha
push
lock
push
mov
jo
rorl
inc
mov
inc
sub
jae
pop
sbb
rol
add
xchg
xchg
sbb
sbb
mov
xchg
push
push
mov
int3
test
aaa
jge
xor
rorl
and
xor
cwtl
lcall
sbb
xchg
jae
or
xor
call
dec
add
andl
push
rcrb
jo
ds
insb
xchg
or
inc
or
push
insl
mov
pop
sub
movsl
xchg
pop
sbb
arpl
loope
xchg
dec
inc
push
adc
jae
rcrb
pop
lcall
inc
bound
cmpsb
sarl
dec
mov
jns
push
fsubrs
or
jmp
and
shl
lcall
lods
clc
ret
out
jg
stos
jno
std
fwait
sbb
inc
sti
jmp
xchg
int3
loop
xor
test
sbb
dec
int
push
pusha
mov
push
sbb
mov
cmp
add
stos
ret
inc
add
push
mov
jecxz
adc
sarl
aaa
or
pop
sub
adc
nop
enter
sub
fidivl
sub
pop
loope
mov
jg
les
push
ja
into
xor
inc
out
push
fsubl
aad
outsl
cmp
sub
pop
sbb
dec
movsl
push
pop
fisubrl
mov
dec
fildll
mov
out
xchg
sarb
shll
and
mov
xor
xor
ja
dec
fs
ret
incl
scas
insl
sbb
or
mov
adc
and
pop
call
fdivl
mov
lret
push
pop
adc
clc
subl
sysret
pop
cmpsb
insl
lahf
ljmp
or
stos
fadds
push
sub
lods
cmpsb
mov
push
jnp
xchg
fsubrp
aad
pusha
stc
inc
outsl
pusha
mov
sub
mov
incb
add
mov
ret
mov
adc
call
insl
pop
sub
pop
rorl
dec
mov
xchg
mov
jl
jl
pushf
xor
sbb
jno
mov
fcomps
mul
inc
xor
cmc
pop
push
adc
insl
mov
rcrl
hlt
pop
push
pop
dec
pop
jg
std
mov
stc
mov
je
sbb
lret
mov
imul
mov
lods
xchg
cmp
scas
loope
icebp
push
sbb
shl
imull
push
les
jl
jle
sub
xchg
int3
push
sahf
push
sub
aas
ret
mov
add
add
inc
adc
shll
jmp
push
movsl
inc
call
push
mov
popf
sahf
mov
movl
push
pop
hlt
push
mov
jo
add
orl
sbb
pusha
mov
rolb
lods
movsb
pop
fildl
xchg
inc
mov
out
ret
lods
push
es
pusha
push
sti
add
hlt
cmpsb
mov
mov
adc
mov
aam
pop
cld
sub
or
sub
mov
out
inc
jae
xor
mov
addr16
push
push
cld
aaa
outsb
dec
call
call
fnstsw
loop
or
cmp
arpl
outsl
xchg
push
in
in
xor
mov
pusha
cmp
mov
enter
ds
lahf
sbb
mov
and
cmpb
dec
mov
sbb
les
mov
mov
orl
sar
push
clc
sbb
push
inc
repnz
cmpsb
add
les
pop
cli
mov
add
dec
bound
shrl
inc
or
ret
push
mov
or
imul
outsb
sbb
pop
int3
pop
and
fiaddl
push
sbb
js
mov
loope
flds
cld
das
ret
or
add
mov
adc
adc
loop
adc
xor
std
scas
in
pop
mov
gs
inc
adc
mov
dec
orl
popaw
pusha
sti
pushl
jb
xchg
adc
cmpb
inc
daa
xor
inc
xchg
ficoms
mov
pop
out
rorb
sar
sarl
repz
hlt
and
dec
adc
mov
or
adc
and
lods
add
pushf
lret
iret
pop
mov
fists
dec
push
mov
mov
mov
outsl
sub
movsb
pop
and
cmpl
outsl
outsb
dec
mov
xchg
add
adc
xor
adc
mov
fistpl
and
dec
fwait
cmp
dec
sub
outsl
and
sub
lds
ret
out
and
mov
sarb
sub
jmp
rorb
mov
in
push
add
push
fimuls
mov
incl
andl
hlt
push
jno
jo
daa
inc
in
xor
js
push
mov
adc
nop
xchg
je
mov
in
lcall
orb
mov
fldenv
xchg
data16
inc
sbb
mov
pushf
stos
test
cltd
dec
adc
jnp
jg
mov
ret
mov
aas
daa
adc
sub
xchg
and
je
mov
iret
and
rclb
outsl
insb
xor
lret
jo
pusha
and
imul
and
inc
outsb
push
clc
inc
dec
mov
push
out
mov
add
fadds
adc
nop
icebp
enter
jno
pop
jge
and
in
cmpsb
lret
inc
push
inc
inc
mov
xlat
cmp
mov
sarb
or
cld
das
mov
inc
sahf
or
or
or
cmp
inc
loopne
inc
mov
inc
jmp
lcall
ljmp
lret
icebp
inc
cwtl
cmp
nop
pop
xor
sbb
mov
inc
jle
jg
dec
imul
mov
rol
lods
out
nop
dec
aaa
sub
xchg
pop
fistpll
xchg
loope
jl
xor
cmp
mov
incl
stos
les
sahf
sar
push
cmp
mov
out
lcall
adc
aam
mov
lods
rcll
and
or
or
fld
sbb
test
inc
lods
inc
push
outsl
sbb
cli
rcrl
rol
test
dec
aad
mov
xchg
mov
jecxz
mov
dec
cltd
ds
add
or
sub
outsl
andb
lret
iret
cmp
or
aad
push
push
add
mov
xchg
dec
cltd
sbb
nop
push
mov
xor
std
lret
dec
xchg
stc
stos
cmp
cmc
sub
insb
inc
push
mov
js
pop
mov
fsubl
mov
je
adc
outsl
loopne
sub
addb
out
mov
scas
sbb
add
sbb
adc
sbb
push
pushf
pop
sub
sbb
lea
js
in
and
inc
inc
insb
cmpsl
xchg
ficomps
adc
fstpt
imul
xchg
or
pop
xchg
idiv
rcl
pushl
lock
pop
xchg
call
mov
cmp
push
test
jbe
dec
xchg
shrb
leave
jno
pop
movl
xor
cwtl
inc
xor
fcomp
dec
outsl
lods
std
adc
xchg
in
mov
and
inc
dec
dec
hlt
outsl
js
jle
xor
pop
adc
inc
inc
xchg
fistl
lret
mov
mov
sbb
sbb
cld
push
jl
popf
pop
mov
adc
jl
sbbb
dec
imul
call
call
cmp
repz
jb
inc
push
lret
push
cmp
add
dec
jl
ljmp
sbb
adc
daa
test
pop
fwait
sub
loop
or
jmp
xchg
aaa
xchg
xchg
loopne
push
cli
adc
mov
push
mov
jle
cmp
mov
lea
sahf
jl
mov
add
movsl
dec
sti
lea
mov
or
xor
lret
leave
sbb
and
adc
movsl
pop
fs
sub
sub
rcr
fmuls
outsl
aaa
fs
push
in
xor
ljmp
sbb
mov
jmp
xchg
outsb
sarb
jg
add
push
mov
dec
stos
in
ds
imul
es
adc
push
loope
mov
push
inc
mov
int
sbb
or
les
lods
aas
and
jnp
lcall
inc
push
clc
lds
xchg
push
icebp
daa
negl
aad
dec
in
fstl
add
add
daa
lods
enter
ds
mov
test
push
pop
and
cmp
mov
dec
stos
and
ja
clc
inc
decl
ficompl
stc
xor
data16
mov
push
fisttps
insl
rcll
es
add
call
fcmovne
jae
xchg
icebp
test
xor
rolb
push
sbb
je
test
in
in
lds
xor
dec
add
ljmp
cmp
or
lods
push
add
jge
or
in
sbb
int
xor
xor
in
shlb
sbb
scas
std
dec
ja
add
push
lahf
mov
lahf
icebp
mov
xchg
xchg
rol
std
mov
imulb
dec
lods
gs
mov
add
cmc
mov
loope
mov
mov
insb
dec
add
and
out
ret
mov
lret
mov
jecxz
inc
mov
ljmp
inc
add
je
test
or
sbb
test
pop
lahf
outsl
ja
mov
mov
rorb
xchg
fmuls
pusha
enter
sarb
call
jl
lcall
xchg
mov
cmp
or
xchg
aad
jecxz
or
pop
out
dec
push
mul
and
dec
push
xor
or
and
adc
xchg
repnz
inc
xchg
sarb
es
dec
dec
sbb
and
cmpsb
sbb
jge
xchg
into
inc
repnz
shll
jne
mov
rcll
mov
jne
cmp
pusha
mov
loope
jmp
fldenv
jno
lods
xchg
lods
add
pop
rcrl
test
ret
js
test
out
js
pushl
inc
adc
xchg
jge
mov
or
aad
mov
lea
js
daa
inc
xchg
or
sti
in
adcb
jg
call
int3
push
hlt
inc
dec
les
cmpsb
add
xor
push
mov
ficoml
mov
xchg
push
test
or
scas
fs
jge
scas
pop
jo
sbb
cmc
bound
imul
adc
pop
mov
pop
adc
fdivl
ds
sbb
adc
int3
aam
aam
pop
push
daa
leave
lock
inc
int
jg
push
pusha
packsswb
jle
add
add
adc
mov
ja
inc
inc
arpl
add
dec
mov
bound
test
in
hlt
sbb
lret
pop
rolb
xchg
test
add
mov
pop
inc
jo
pop
ljmp
fwait
enter
out
fimuls
sub
dec
push
hlt
sub
push
push
ss
mov
fistps
je
add
ljmp
jno
mov
sub
inc
insw
enter
imul
insl
fsub
mov
mov
dec
sub
mov
mov
sub
ss
repnz
ljmp
cmp
jge
and
cli
pusha
fstpt
jbe
or
gs
xor
mov
cmp
ljmp
cmp
xchg
add
aaa
leave
ds
pushf
jb
cs
loopne
ss
jnp
sbb
pop
aas
and
cld
fdivs
add
sub
arpl
dec
mov
jmp
push
sysexit
icebp
xchg
jo
popa
imul
adc
pop
pop
sahf
mov
adc
mov
add
mov
rcl
stc
shlb
int3
jle
cmp
and
and
jmp
mov
lock
sbb
orb
scas
lret
lods
in
lock
mov
adc
fsubs
mov
movsl
sahf
inc
insb
lock
xchg
mov
sbb
pushf
mov
addb
mov
bound
call
sub
popf
add
outsb
aas
lea
rcl
push
jmp
inc
das
icebp
in
testb
into
push
pop
enter
loopne
sub
xor
sti
adc
sbb
jno
push
std
movsl
mov
dec
jl
shr
fwait
add
out
xchg
sub
icebp
lock
es
lcall
jo
and
das
popl
fstpt
xchg
testb
int
pop
shlb
add
pop
loopne
add
fwait
les
movsl
in
daa
ds
xchg
dec
and
mov
loope
xchg
jg
andb
das
sub
sbb
pop
clc
es
mov
jbe
out
or
rcrb
sub
mov
jle
jecxz
or
add
mov
shl
cs
insl
clc
lods
lahf
in
mov
lods
es
sbb
insb
call
subb
xchg
sub
lods
fwait
sub
adcl
js
cmp
or
inc
and
fiadds
adc
push
push
and
jns
xchg
stc
js
icebp
das
xor
sub
adc
jnp
outsb
add
repz
mov
push
xchg
jg
xchg
insl
xor
xlat
shrb
movsl
and
inc
xor
pop
mov
jge
sub
mov
aad
sub
fildl
mov
xchg
or
sub
push
sti
insl
sbbb
movsl
mov
notl
scas
add
inc
outsb
pop
fistpll
fsubp
push
inc
cmpsl
nop
push
mov
je
dec
sbb
cmp
call
out
fcmovb
sbb
and
fbstp
insb
xor
add
imul
aas
inc
jge
push
pusha
pop
push
fdiv
dec
jo
mov
cmpsb
ror
and
inc
shll
aad
dec
or
mov
sbb
mov
shlb
ret
lods
inc
aad
das
mov
lahf
fsubrl
std
mov
loop
outsb
cwtl
js
shl
dec
inc
cmpsl
or
jge
int3
cld
add
lods
movsb
sbb
fs
fildll
aaa
push
push
aam
cmp
out
imulb
mov
pop
sbb
nop
stc
loopne,pt
mov
add
lahf
inc
int
or
jne
shl
mov
adcb
sbb
loop
push
cmp
sbb
lock
sahf
add
enter
mov
test
js
mov
pop
pop
popf
fdivl
and
mov
sbb
mov
shlb
add
lods
mov
cmp
pop
fistpll
jno
add
les
inc
xchg
mov
out
and
mov
outsb
in
pop
ljmp
inc
cmpsl
push
xchg
cs
mov
push
flds
call
sub
aad
sub
jne
nop
out
xor
negb
mov
inc
cmp
out
test
aaa
cmp
movsb
push
xor
xchg
loop
sub
pushf
pop
loope
pop
mov
add
ja
repnz
ret
iret
mov
mov
pop
insl
and
and
icebp
incl
into
sub
jp
adc
push
fdiv
daa
push
fldt
add
ret
jns
sbb
out
outsb
xor
inc
aam
fistpl
jnp
mov
jo
push
aas
neg
xchg
mov
mov
and
xchg
repnz
fsubs
adc
les
fistps
fs
sub
mov
testl
addr16
xor
dec
cmpsb
mov
mov
cmpsl
rcll
int
dec
bound
mov
add
cld
dec
xchg
xor
sub
cli
sahf
mov
cmp
xor
inc
mov
and
push
push
mov
rolb
add
loopne
or
ret
add
push
mov
in
sti
imul
push
fcomi
mov
sbb
jne
outsb
pusha
popa
divl
inc
cmp
mov
imul
faddp
jbe
into
xchg
fisubrs
loope
inc
int
fucomi
add
decl
cmc
rorb
mov
xchg
nop
jl
out
scas
mov
popa
out
mov
adc
jecxz
inc
loopne
das
jne
pop
jmp
mov
adc
lret
mov
cld
adc
out
sub
mov
roll
sub
add
aas
sub
sbb
mov
call
pop
add
cmp
push
inc
xchg
test
insb
jecxz
pop
fdivl
ds
mov
outsl
fstl
or
adc
sbb
pop
addr16
adc
out
pop
adc
enter
loopne
movsl
imul
mov
or
nop
add
inc
cmpsl
mov
outsl
imul
mov
ds
or
pop
or
negl
cmpsb
pop
push
dec
stos
sbbb
mov
lock
ret
les
pop
pop
sbb
cmpsb
or
das
inc
call
jno
cmp
test
xchg
outsl
sbb
dec
and
loopne
cli
or
or
inc
push
jg
jecxz
sub
notl
ja
int3
push
cmpsb
sahf
jecxz
mov
stos
add
jle
idivl
adc
cmp
enter
lret
pusha
xchg
cmpsb
jb
add
lods
cmc
insb
loopne
ret
push
jp
push
lahf
cs
pop
mov
subb
in
sbb
adc
ja
cmp
xchg
mov
add
jg
cmc
dec
cld
adc
lret
mov
adc
fcmovnb
mov
dec
and
add
imul
add
and
push
sub
xor
sub
nop
dec
mov
cmc
add
dec
mov
cmp
adc
inc
dec
and
dec
add
pop
adc
or
cmpsb
sbb
mov
xchg
cwtl
arpl
pop
fdivs
mov
jle
out
lret
jb
cs
popa
jmp
inc
stc
mov
xchg
mov
xchg
inc
xlat
push
lods
and
fistpl
xchg
scas
mov
scas
enter
pop
repz
les
insl
push
incb
call
arpl
mov
xchg
mov
out
fcomps
out
jmp
fmull
mov
pop
push
push
xchg
test
dec
push
addl
ljmp
pop
push
rcrb
cmpsl
cwtl
push
and
sbb
pop
jmp
aaa
inc
pusha
mov
fmull
mov
stos
addb
fnsave
mov
cs
lea
in
rcrl
mov
jbe
scas
or
fwait
inc
lahf
lock
dec
pusha
mov
cmp
dec
dec
addb
xchg
rolb
mov
and
cwtl
or
or
add
scas
fadds
shll
pop
inc
xchg
aas
mov
lret
mov
and
pusha
inc
pop
mov
inc
and
or
enter
adc
cmp
xlat
mov
int3
enter
cld
or
mov
pushl
lock
jbe
mov
jb
push
inc
push
ret
jno
das
lock
cmp
sub
or
dec
push
push
out
pop
cmp
nop
cmpsb
jecxz
outsl
add
jno
ret
jbe
lds
pop
fcmovu
jg
mov
push
push
bound
repz
mov
out
aas
pop
lcall
mov
cmp
or
repnz
loop
cmp
pop
inc
add
dec
pop
loop
push
testl
mov
scas
inc
push
xor
dec
out
clc
push
push
add
in
in
mov
mov
in
aas
lock
sub
out
pusha
imul
jp
je
mov
cmp
addl
icebp
jg
or
test
sbb
inc
jmp
imul
daa
std
lcall
dec
jae
xchg
sbb
icebp
loopne
mov
pop
subl
cmp
adc
push
xor
and
push
out
sub
mov
sar
cmp
loope
cli
popf
fmull
js
rcrl
mov
lods
adc
adc
jnp
fiadds
std
xchg
fisubrs
mov
push
push
pop
es
mov
or
call
add
push
push
sbb
xor
add
dec
mov
adc
inc
leave
xor
imul
push
add
push
fucomp
dec
mov
insb
sbb
or
addl
out
pop
mov
mov
inc
call
jno
imul
sbb
sbb
pop
push
fwait
cmp
pop
lock
push
adc
add
dec
and
ss
xchg
mov
je
js
jne
pop
lret
add
mov
fbstp
dec
or
inc
nop
fucom
mov
or
in
in
mov
shlb
push
cwtl
inc
mov
xlat
mov
jbe
lock
lods
jae
push
or
push
pop
loop
jmp
call
andl
fildll
sbb
jg
dec
or
mov
adc
ret
cmpsb
adc
lret
lret
inc
or
adc
mov
rcrb
adc
das
cmpsl
fildll
push
negl
outsb
xchg
orl
mov
out
dec
pop
in
and
push
push
cld
out
mov
jp
fwait
cmpsl
addr16
push
ss
test
int
add
xor
dec
enter
and
aam
sub
cmp
fistpll
std
mov
or
aam
mov
bound
into
mov
fistps
sbb
mov
dec
stos
imul
in
jb
mov
xchg
loopne
test
dec
cmp
std
jg
test
out
or
xchg
es
xor
lock
cmpsb
sub
cmp
fcmovnb
pop
btr
jle
inc
aaa
stos
lret
inc
ljmp
push
push
insb
insb
push
jae
cld
mov
push
adc
mov
clc
xchg
push
mov
cwtl
push
cmp
inc
pusha
dec
in
xchg
jb
adc
popa
icebp
lahf
les
orl
cli
sub
xchg
mov
xchg
push
inc
mov
cld
sti
push
adc
test
fwait
sti
add
into
xchg
imul
in
sub
out
inc
cmp
ljmp
jge
mov
adc
dec
dec
outsl
mov
and
and
mov
pop
cmp
push
dec
inc
pop
mov
sbb
adc
adc
mov
add
add
mov
jmp
imul
jmp
jo
out
push
and
inc
add
call
or
xchg
lock
jne
sub
test
data16
leave
inc
insb
mov
mov
fcompl
or
adc
push
pop
jne
stc
add
jne
and
sbb
and
push
cmpsb
sub
jle
lretw
xchg
mov
hlt
hlt
jns
pop
call
inc
js
pop
std
pushl
das
pop
sti
mov
push
inc
adc
dec
cmp
test
fdivrl
popa
sbbl
fucom
hlt
add
jno
mov
mov
push
fwait
sub
mov
rcr
mov
cld
inc
pushf
lock
dec
popf
push
sbb
jge
in
add
inc
push
out
dec
loope
call
rcl
xchg
lods
xor
outsb
jmp
jo
mov
pop
sbb
cwtl
cltd
cmc
cmp
mov
rorb
adc
pop
inc
jae
mov
dec
popa
pushf
adc
mov
stos
lea
jmp
outsb
mov
or
bound
pop
out
js
or
lock
jmp
movsl
mov
xchg
dec
jg
lods
xchg
jle
sbbb
adc
popf
xchg
xchg
inc
inc
mov
imul
push
adc
insl
out
das
cmp
in
cmp
outsl
and
call
push
cmp
aam
sti
jl
andb
and
pop
xor
xor
scas
sub
inc
lcall
sbbl
add
mov
mov
and
cmp
add
cltd
fcmovnbe
xchg
jge
movsb
mov
sti
xlat
pop
push
int3
sub
and
mov
das
insb
pop
cli
lret
jnp
jno
movzbl
dec
inc
or
jo
xor
push
js
in
xlat
dec
pop
jns
mov
test
enter
test
dec
adc
jecxz
or
sbb
repz
xor
sarl
jle
sub
mov
sub
cmpsb
cmp
jg
fucomi
bswap
inc
pop
rol
cmpsl
inc
add
imul
sti
out
jp
js
adc
les
sub
dec
je
mov
test
or
cmpl
adc
pop
nop
mov
std
inc
adc
cmpsb
aaa
pop
pop
dec
xor
inc
jne
pop
sub
cmp
rcrb
out
adc
outsb
shll
imul
cmp
push
dec
sub
fstpl
sub
push
ficomps
or
inc
bound
or
loope
jl
cmpsb
pop
mov
aas
js
pop
std
cmp
data16
sbb
lds
inc
ljmp
jbe
aas
loope
jne
xadd
lcall
inc
stc
push
push
xchg
stos
sarl
dec
mov
or
jl
out
sbb
jmp
std
mov
call
jae
jnp
hlt
lret
cmpl
or
aas
je
sub
pop
inc
mov
test
push
sub
jp
rcrb
loop
shl
add
nop
or
or
push
rcr
repz
loop
test
dec
jmp
adc
or
je
fbld
mov
aaa
or
pop
dec
cmp
js
mulb
out
hlt
xchg
pusha
out
aaa
add
mov
and
mov
stc
mov
pop
stos
inc
addr16
movsl
sbb
sahf
mov
adc
shlb
push
insb
jge
add
daa
loopne
fstpl
xchg
xorl
xor
xor
xorl
mov
push
xor
dec
xchg
push
cmp
xchg
and
in
out
and
jle
xchg
jo
pop
pop
mov
pop
add
adc
jp
pop
fndisi(8087
jecxz
mov
call
das
or
mov
xor
shll
add
subb
inc
cwtl
out
adc
mov
test
aam
ljmp
insl
add
mov
xor
and
cmc
mov
sub
adc
dec
dec
popa
dec
jecxz
call
rcrb
test
mov
jne
fisttpll
xchg
add
pop
and
aas
sbb
mov
sub
ret
sub
int
ret
es
rcll
or
jle
std
pop
icebp
das
add
add
or
adc
mov
out
sbb
subb
dec
lods
lods
cmpsb
push
clc
jmp
sub
add
test
dec
xchg
cli
loope
jbe
mov
movsl
push
cs
mov
xor
dec
push
sbb
xchg
sub
insb
test
mov
jmp
adc
pop
or
data16
scas
sbb
je
inc
arpl
mov
dec
icebp
cld
jg
out
aad
and
push
ja
adc
movsb
xchg
sbb
lahf
jge
cld
fwait
adc
std
mov
add
jp
mov
mov
mov
rcr
cltd
flds
mov
xor
push
enter
insl
aaa
in
jp
hlt
mov
rolb
add
ret
pop
fisubrl
cmc
dec
movsb
adc
sbb
mov
les
adcl
outsb
sahf
mov
fs
icebp
pop
bound
popa
iret
ret
adc
sbb
in
outsb
stos
mov
les
lock
pusha
xchg
push
dec
pop
test
pop
and
out
xorb
jmp
shrl
idivb
in
loopne
lcall
dec
push
xchg
mov
xchg
push
js
mov
inc
pop
scas
mov
dec
aaa
mov
xchg
jbe
push
mov
xor
xor
ja
loop
testb
dec
pop
mov
xchg
mov
js
sbb
push
push
mov
adc
pop
sbb
mov
stos
es
out
ret
jle
aad
inc
sbb
lcall
dec
mov
js
dec
cmpsb
pop
stos
jno
mov
aam
mov
push
mov
sub
insb
popa
push
cmc
inc
mov
mov
push
das
shlb
ds
mov
or
or
enter
ret
mov
in
mov
pop
rclb
daa
or
ret
push
jne
std
dec
fdivrl
push
mov
adc
inc
loopne
jle
flds
shr
popf
cmpsb
mov
scas
xchg
mov
sahf
xchg
fistps
and
leave
pop
dec
mov
aas
pushf
sbb
movsb
scas
cs
sub
mov
test
sbb
lret
xor
jge
jae
or
mov
push
fidivrl
into
mov
sbb
ficoml
and
push
or
in
rcrb
sbb
popa
adc
or
xor
or
in
push
test
push
push
rorl
outsl
add
pop
clc
mov
cmp
sbb
mov
repz
movsl
cmpl
push
out
cmp
loopne
cmc
sbb
jno
or
add
scas
mov
rcl
dec
and
pop
sbb
xchg
xor
jbe
lea
add
adc
in
push
mov
leave
xchg
stos
lret
aaa
arpl
jbe
mov
cmp
mov
ror
xchg
lret
inc
sbb
pop
and
mov
inc
sbb
lds
leave
pop
out
sub
xor
out
clc
repnz
inc
call
pop
adc
fcmove
push
jp
lods
lret
jbe
mov
in
push
mov
mov
xlat
sbb
mov
cmp
cmc
pop
sbb
cmp
xor
icebp
jo
add
or
pushf
mov
mov
mov
add
out
lods
jmp
jl
pop
mov
ljmp
out
addl
jno
add
mov
inc
sti
or
jl
mov
inc
xor
push
pop
adc
cmp
neg
in
xchg
jnp
les
rclb
popa
or
and
fisttps
xchg
add
push
call
int3
mov
adc
lock
mov
mov
add
mov
negl
fisttpl
clc
pusha
cmp
lock
and
jecxz
sti
xchg
push
mov
insb
pop
xchg
nop
js
push
mov
sbb
xorb
xor
test
jle
loop
fcompl
imul
int
scas
repnz
pop
insb
xchg
sbb
pushf
sub
mov
lcall
xor
jbe
mov
lcall
jne
add
push
sub
call
jno
cli
xor
clc
mov
fwait
inc
pop
xor
in
jmp
mov
adc
xchg
and
inc
jecxz
repz
inc
stc
adc
jbe
jp
shlb
cmp
jg
mov
insb
repz
push
xchg
insl
push
mov
int3
test
add
ds
aaa
jno
xor
loopne
shrl
mov
daa
aas
inc
aas
popa
in
fbstp
sbbb
push
sbb
inc
or
add
lock
jmp
gs
sub
mov
dec
test
pop
sub
push
js
arpl
mov
unpcklps
lcall
xchg
sbb
imulb
xchg
arpl
aaa
pop
lock
or
enter
xor
ret
andb
jmp
xchg
out
xor
in
aam
jae
inc
adc
xchg
fcoms
imul
jl
mov
pop
add
mov
js
outsb
jno
insl
sar
sarb
push
stc
movsb
add
add
cmp
add
fisttpl
adc
clc
sbb
add
jl
add
fisubrl
push
ret
cmp
lds
jecxz
jno
xor
jbe
icebp
rcrb
adc
sbb
push
loop
rclb
xor
lock
ret
rol
inc
inc
and
mov
fcoms
adcl
xchg
stos
loopne
mov
shrl
jbe
push
mov
mov
sbb
cmp
jg
jne
ljmp
aam
lahf
pop
xchg
dec
les
adc
push
mov
xor
insl
sbb
pushl
adc
je
test
jb
cld
mov
sbb
cmpl
mov
xchg
pop
test
popa
lahf
gs
adc
mov
cmp
xchg
jecxz
sub
mov
mov
stc
cmp
ficompl
inc
cmp
add
incl
inc
sub
dec
ja
call
pop
stc
scas
cmpsl
push
cltd
dec
icebp
das
xor
sbb
jle
aad
pop
xor
mov
sbb
movsb
adc
test
mov
sub
sub
jno
xchg
jo
cmp
xlat
int
push
shufps
adc
aad
into
popf
or
pusha
jmp
pop
je
lcall
adc
fnsave
mov
or
outsl
adc
adc
lret
push
mov
inc
cmp
mov
aaa
pop
xor
subb
jle
popf
pop
test
fiaddl
xor
adc
pop
sbb
pushl
js
add
shrb
lock
sbb
xchg
mov
fcmovnu
loopne
enter
mov
adc
mov
xchg
lods
popa
inc
lea
addr16
repnz
daa
loope
pop
imul
cmp
sub
stos
data16
xchg
call
add
imul
push
cmp
inc
incb
add
lods
popa
ja
or
test
cmp
in
loope
enter
loope
mov
in
pop
inc
out
push
xchg
jo
sar
mov
mov
jb
sar
mov
mov
pop
or
pop
gs
cmpsl
mov
xlat
add
sub
out
pop
xchg
sahf
and
mov
push
dec
mov
jns
mov
popf
fadd
sbb
aaa
mov
idivb
shll
xor
mov
imul
mov
lds
inc
lock
faddl
enter
adc
enter
arpl
add
sub
xchg
and
adc
cmp
push
cmp
imul
mov
enter
fwait
jge
cs
cmp
or
xor
mov
ret
adc
xor
push
mov
adc
jb
jnp
and
push
lahf
loope
add
ficomps
adc
jmp
adc
mov
sti
das
popa
mov
add
lock
in
push
mov
int3
insl
ficoml
jle
test
lret
or
push
sbb
out
jmp
lret
pushf
and
sbb
mov
cmpsl
test
rol
ds
add
dec
pop
fdivp
and
in
movsl
notb
test
cmp
outsl
mov
sbb
data16
stc
in
movsl
and
mov
jge
inc
call
jle
cli
push
ds
sbb
push
pop
inc
add
fwait
ja
mov
sbb
movsb
adc
in
mov
sti
mov
add
fisubs
testb
mov
dec
jmp
neg
add
push
add
jns
and
aad
movsl
pop
mov
pop
shr
outsb
pop
jle
rorb
jns
inc
jge
xor
cltd
shlb
pop
jp
inc
lea
adc
push
shll
cld
mov
aam
pop
and
fbstp
into
popf
mov
data16
adc
ljmp
and
out
cld
xor
out
call
idivl
pop
bound
xchg
mov
into
cmp
and
test
push
xor
ss
mov
lods
mov
lock
inc
je
jb
stos
adc
push
roll
xor
sbbb
pushf
cli
adcb
cmp
in
sub
push
or
and
xchg
mov
inc
xchg
gs
pop
fisubrl
and
sbb
ss
movsl
test
rorb
cwtl
jae
mov
or
jb
push
or
cltd
dec
jno
sbb
popa
add
fisubrl
jo
incl
ret
jbe
femms
rorb
je
dec
cld
aam
add
jge
sub
jmp
and
jo
or
test
jbe
add
inc
push
xchg
xchg
out
neg
orl
in
arpl
sub
sub
jo
sub
sti
xor
adc
ret
sbb
jp
or
aas
push
sub
pop
scas
push
inc
ja
push
or
lock
test
scas
jbe
dec
sbb
sbb
rolb
bound
mov
jns
jne
mov
out
lods
add
push
jae
popl
adc
lea
or
fidivs
sub
or
imul
ret
push
cli
sahf
inc
mov
mov
sub
jbe
pusha
loopne
or
or
call
mov
adc
test
pop
stos
insl
notl
mov
insl
ljmp
or
inc
jle
dec
cs
mov
fldenv
cmp
jg
stc
push
test
cmp
xchg
lret
jle
or
push
mov
add
fwait
ja
pop
mov
push
push
xchg
fcmovb
push
cmp
mov
dec
iret
fisubs
sbb
mov
ljmp
clc
xor
adc
cltd
jo
gs
cld
jb
adc
jb
ja
jl
mov
out
lret
pop
lods
aam
push
dec
push
repnz
scas
stc
in
pushl
ret
es
xchg
mov
add
inc
aam
mov
jb
sbb
dec
push
xlat
rol
lahf
repnz
jle
repnz
add
cmc
push
push
add
addr16
push
mov
or
xor
jo
jl
mov
push
mov
push
lret
xor
add
jbe
stc
mov
les
add
push
shll
cmpsb
enter
popf
lds
and
nop
lods
pop
insl
jmp
jle
gs
jecxz
pop
pop
cmp
ja
push
roll
inc
ja
pop
js
push
sbb
stos
mov
loop
jp
jbe
clc
inc
movsb
je
inc
outsl
xchg
dec
lds
ffreep
pop
imul
es
xchg
rorb
inc
das
add
xor
push
rolb
mov
and
nop
pop
mov
lahf
jne
sub
add
or
cmp
mov
rcrl
and
jecxz
or
cltd
stc
pop
mov
sbb
hlt
das
aam
setl
scas
inc
mov
push
xor
xor
dec
out
aad
mov
adc
mov
outsl
mov
xor
inc
mov
mov
out
mov
xor
adc
cmpsl
push
pop
sub
clc
cwtl
pop
pop
push
lods
xor
sbb
outsl
dec
jl
cmpsb
or
pop
shrb
sub
ja
sbb
jp
ljmp
push
xchg
pop
stc
adc
test
xchg
pop
jno
xchg
je
mov
pop
insl
pop
psubw
or
push
xchg
inc
push
cmc
jg
add
fcoml
jg
dec
loopne
stos
inc
lods
add
add
jbe
cmp
imul
sbb
push
mov
or
jle
sbb
pop
imul
mov
insb
push
mov
push
jo
movsb
sub
mov
cmc
pushf
and
pop
loopne
shr
xchg
test
jecxz
mov
sub
jp
xchg
jg
mov
mov
mov
fsub
icebp
and
outsl
das
pop
addb
xchg
push
pop
pop
sbb
cwtl
bound
mov
sbb
dec
mov
cmp
cmp
les
sbb
mov
jmp
inc
test
cwtl
pop
mov
sub
das
sahf
clc
mov
sbb
cwtl
mov
mov
inc
sbb
out
call
mov
jo
out
fstpt
scas
jl,pn
aam
mov
pop
lds
jg
outsb
pop
adc
cmpsb
xor
inc
shll
xchg
sbb
jecxz
inc
dec
nop
icebp
testb
std
adc
mov
mov
je
pop
xor
aas
adc
jne
in
jno
jae
loopne
mov
dec
jl
sbb
call
inc
and
lock
mov
xor
fwait
js
rcl
outsl
xchg
jbe,pn
push
cmp
aad
jg
repz
jb
jnp
xor
adcl
adc
sbb
pop
adc
jl
mov
cmp
fidivl
insl
icebp
test
jmp
dec
dec
jg
push
lahf
dec
in
dec
cli
loope
mov
push
int
mov
insb
xor
mov
inc
scas
mov
mov
out
fcomp
jle
pop
push
insl
mov
add
dec
ret
mov
mov
fistpl
cmpsb
ret
negb
shlb
mov
mov
cmc
jg
shr
xchg
mov
movsl
xchg
jge
scas
lret
inc
popa
mov
jg
movsl
dec
in
out
pusha
jbe
pop
xor
xor
stos
cmp
mov
cwtl
aas
outsl
hlt
das
ret
bound
xor
dec
or
pop
jbe
xchg
push
mov
jp
dec
dec
pop
outsl
mov
loope
mov
cwtl
mov
xor
jno
jle
push
out
gs
ss
adc
ffree
lock
xor
mov
cmp
mov
adc
inc
jbe
inc
sbb
ret
jg
inc
lret
ror
xor
shlb
sbb
push
adc
loop
lret
repnz
mov
mov
mov
sbb
je
shl
adc
mov
cmp
enter
je
inc
jecxz
pop
stos
jge
fs
inc
rorb
xchg
xor
push
mov
aam
std
addl
lahf
outsb
rorb
mov
add
or
adcl
fldl
cltd
test
popa
jae
jo
push
pushf
mov
inc
mov
adc
and
mov
inc
pushl
repnz
mov
imul
mov
fs
mov
cmp
add
aaa
xlat
int
cmp
and
sbb
xlat
aam
pop
adc
aaa
jo
into
push
sar
push
cmpsl
insl
xchg
jg
clc
or
sbb
push
mov
jmp
jbe
push
out
cmp
xchg
nop
clc
adc
mov
stc
es
js
fdivrs
jne
inc
xor
and
fnstsw
mov
jmp
aas
lods
xlat
mov
clc
inc
push
outsb
outsl
push
push
mov
lahf
in
push
push
push
test
test
loopew
cs
imul
xchg
ret
filds
pop
add
stc
mov
cli
in
scas
mov
sub
scas
or
push
xor
pop
ret
or
movsb
sub
les
orl
movsl
daa
or
or
pop
stos
into
in
and
shr
out
cmpb
adc
mov
and
lret
sbb
cwtl
xchg
sbb
dec
or
sub
mov
xor
dec
call
sub
xor
cwtl
add
stos
inc
ret
loopne
push
adc
mov
mov
shll
push
mov
xor
mov
mov
loop
cli
mov
mov
pop
fimull
es
loope
ja
xchg
call
mov
adc
cmp
gs
outsl
cld
jo
fwait
sub
cmp
mov
adc
mov
sbb
and
mov
push
mov
jl
inc
mov
pop
jnp
sbb
jns
aaa
pop
or
shl
adc
or
jp
movl
xor
mov
mov
xchg
loopne
scas
sub
push
lcall
mov
adc
in
add
aaa
xchg
xor
sub
subb
out
arpl
aam
mov
out
jmp
jne
dec
push
std
push
sar
clc
loop
imul
mov
pop
rcl
imul
mov
mov
mov
or
stos
sbb
sub
daa
mov
repnz
pop
push
aad
mov
push
int3
jp
sbbl
insl
xchg
fistl
jno
mov
cltd
leave
loop
jae
push
jno
fidivrl
mov
cmp
dec
or
addl
das
xor
adc
or
xor
dec
mov
xor
xchg
jne
sbb
push
jle
outsb
std
inc
or
sbb
inc
push
ret
ljmp
call
aaa
pop
push
jae
ret
xchg
mov
test
sbb
in
add
push
sub
movsl
rolb
out
mov
sbb
fnstsw
nop
jb
inc
mov
imul
xchg
fsubr
push
pop
clc
push
into
mov
pop
or
not
into
xchg
jnp
clc
adc
sub
mov
aaa
push
es
jns
pop
sub
loop
and
cld
movb
cli
adc
push
jge
subl
jecxz
lcall
rol
int3
and
xor
movsl
ret
push
mov
mov
jmp
push
stos
cmpsl
pop
adc
mov
movsl
mov
fsubrp
dec
push
jp
fiaddl
test
rolb
xchg
sbb
mov
jp
std
mov
jnp
out
and
cmp
adc
push
in
fdivl
pusha
xchg
fldt
icebp
dec
jno
lcall
mov
inc
mov
cmp
rorl
sub
leave
add
cltd
inc
xchg
lock
sbb
and
clc
aas
hlt
setno
inc
sbb
out
pop
sti
adc
jecxz
cmp
pushf
sbb
mov
cmp
mov
sbb
ja
or
in
popa
cmp
dec
hlt
sbb
inc
mov
sbb
mov
cmp
outsl
outsl
cs
jo
push
xor
mov
mov
jge
stc
pop
mov
test
jle
xchg
enter
or
leave
sub
cs
add
push
xchg
sbb
sub
jge
sbb
fldenv
int
daa
js
jo
les
push
das
jne
test
push
sub
jle
or
mov
int3
out
data16
icebp
mov
lock
lods
or
cmp
dec
sub
pop
sti
imul
inc
in
mov
mov
clc
mov
movsb
cmpsb
movsb
setno
in
push
arpl
call
mov
mov
lock
jnp
clc
gs
inc
add
inc
test
rcll
aaa
inc
loop
xorps
mov
inc
insb
jbe
js
pusha
or
stos
and
in
sbb
jecxz
sbb
dec
aad
mov
mov
jno
gs
mov
pop
adc
jb
xorb
mov
mov
jmp
mov
mov
and
mov
adc
jg
popf
clc
dec
jp
jl
int
adc
leave
rorb
in
fcompl
iret
sub
test
in
push
add
fs
mov
sub
aad
pop
xchg
out
outsb
pop
push
mov
inc
rcl
sub
inc
or
adcl
push
imul
inc
in
cltd
imul
adc
xor
mov
mov
cmc
sbb
pop
push
lea
mov
mov
loopne
mov
clc
in
or
nop
cmp
mov
jge
fldl
jne
test
inc
jo
pop
cmp
inc
push
lock
jns
adc
xor
test
mov
jg
add
pop
adc
xchg
push
jmp
subl
mov
sbb
mov
inc
das
aad
mov
mov
push
test
into
lea
xor
insb
mov
les
inc
push
dec
add
mov
mov
jecxz
jae
test
jp
pop
mov
clc
jge
lods
clc
jmp
pop
fdivs
shrb
dec
stos
test
pop
jae
add
in
cmpl
lock
loopne
sbb
or
lock
push
ss
jmp
add
subb
outsl
xchg
xchg
dec
aad
out
dec
test
jo
pusha
mov
fstl
add
nop
cmpsl
aad
lods
pusha
test
xor
fstl
clc
imul
mov
js
loope
and
lret
xor
pushf
mov
lock
inc
mov
inc
imul
negl
or
enter
lret
loop
lods
mov
mov
adc
mov
dec
mov
mov
dec
cmp
sbb
add
rolb
jg
push
and
sbb
cmp
mov
jle
insl
imul
jle
mov
add
mov
push
outsb
push
push
ja
jbe
pop
int3
and
imulb
jl,pn
imul
cltd
sub
dec
sbb
xchg
lods
das
mov
lret
in
std
mov
sbb
fwait
mov
push
dec
movsl
adc
in
outsl
mov
and
pusha
sbb
cmp
sbb
out
or
inc
mov
pop
jl
mov
jle
add
aam
in
daa
scas
cmp
inc
sub
mov
mov
out
push
mov
les
sub
incb
outsl
xor
pop
pop
push
cmpsb
xorb
mov
imul
aam
cs
mov
sub
insb
outsl
stos
or
cmp
das
fmul
stos
cli
sbb
loopne
fs
jo
push
mov
pop
or
push
push
mov
test
jne
sbb
push
inc
stc
and
mov
test
push
fs
outsb
pusha
xor
test
or
pop
lahf
fldl
dec
dec
jb
dec
arpl
mov
pop
mov
inc
aas
rorl
jle
lret
cmp
and
and
ljmp
movsl
sbb
and
jle
arpl
ljmp
cmc
pop
fcmovb
repz
mov
in
dec
xchg
stc
mov
shlb
add
fisttpll
aaa
jge
nop
add
push
lds
ds
xchg
push
test
mov
push
stos
fs
push
outsl
jns
aam
add
stos
add
or
loope
fstpl
and
adc
roll
pop
xchg
cmp
std
and
into
popa
je
mov
lret
jb
cmp
sub
loopne
xor
cli
jne
sub
lcall
or
mov
lock
fadds
cmpxchg
sbb
adc
lods
xor
fcmovne
add
xchg
lret
mov
cld
in
inc
jo
cmp
test
mov
das
jbe
or
inc
cmp
or
push
das
sbb
adc
add
and
xor
and
mov
out
ss
sub
and
popa
adc
push
pop
sbb
pop
rcrb
or
cmpsl
icebp
fldl
push
cmp
int
xchg
sub
xor
adc
insl
arpl
cmp
ret
and
stos
scas
orb
xchg
clc
mov
and
nopl
ret
repnz
rsm
popa
xor
cmpsb
scas
jg
imull
or
jae
sti
test
sbb
pop
cli
xor
stos
or
dec
push
xor
sbb
adc
dec
nop
adc
insl
test
mov
roll
enter
sbbl
pop
ss
or
rcll
mov
xchg
and
dec
std
lea
xchg
aas
push
into
xor
push
mov
outsl
push
adc
sarb
cld
cmp
adc
cmpsw
mov
test
mov
or
sti
xchg
dec
mov
out
mov
fwait
mov
mov
int
jmp
pop
pop
cmpl
push
xlat
or
nop
arpl
cli
cli
daa
stos
shl
jno
jp
loope
test
or
sub
shll
mov
xlat
subps
movsl
pop
enter
fwait
xor
jo
mov
fistps
pop
sub
jle
jo
pop
push
stos
cmovl
jns
icebp
mov
push
adc
lea
xor
repz
jge
mov
hlt
mov
xchg
xchg
inc
cwtl
push
jnp
int
mov
and
lcall
lea
cmp
add
and
mov
clc
stos
mov
outsl
jae
inc
ret
dec
fcomip
movsb
sub
inc
dec
pusha
pop
push
bnd
sbb
rcll
shll
ret
das
push
jg
repz
add
mov
or
clc
stos
mov
arpl
and
mov
cld
dec
jecxz,pn
scas
and
lea
add
inc
sub
stos
mov
enter
outsb
test
xor
xchg
stos
adcl
adc
lods
js
jg
idivb
addl
icebp
push
faddp
into
pop
lods
mov
jl
and
jmp
outsb
stc
cs
leave
std
and
jns
mov
loopne,pt
push
jmp
adc
xchg
dec
and
push
mov
add
aas
rcrb
sbb
fiaddl
sbb
out
lock
scas
nop
xbegin
scas
shrl
pop
int
pop
mov
and
hlt
int3
outsb
lahf
push
xchg
icebp
add
lea
inc
stos
outsl
jb
pushf
je
push
lret
adc
push
clc
loope
and
pop
nop
sti
jns
ja
inc
fs
add
int
add
jo
pusha
adc
xor
sar
je
das
adc
cmpsb
push
iret
movsl
dec
pop
repz
push
add
add
jne
mov
loop
into
lret
test
sub
and
and
outsl
insb
jg
pop
loope
gs
loopne
loope
jl
push
sbb
sbbb
adc
add
xor
inc
xor
jnp
xlat
cmpsb
add
sub
xor
cld
sar
mov
mov
mov
enter
xor
loop
incb
in
adc
mov
cmp
idivl
push
push
mov
outsl
test
jg
cmp
jmp
xchg
cmpsl
daa
adc
rclb
movsl
js
fwait
add
addl
push
sub
ljmp
outsl
push
inc
in
ror
dec
cmp
mov
mov
call
dec
sub
mov
addps
ja
mov
jns
imul
adc
mov
mov
push
jecxz
insl
inc
sbb
movsl
mov
dec
roll
ret
push
fs
mov
sub
leave
pusha
aas
mov
orb
scas
inc
dec
imul
pop
mov
pop
jle
mov
mov
fdivr
lods
call
pop
pushf
sbbl
or
and
data16
xchg
mov
mov
aam
fs
insb
mov
lret
jbe
or
push
iret
movsl
setbe
test
jo
mov
sti
pop
fneni(8087
cmp
popf
and
inc
fidivrs
cmc
push
fildll
sahf
cmp
clc
insl
stc
inc
lcall
add
hlt
iret
clc
je
test
jns
inc
sbb
push
cld
ret
in
cs
aaa
das
outsb
imul
pop
in
fnstsw
subb
fistpl
dec
xchg
mov
lcall
dec
loopne
push
std
or
lods
and
xchg
and
js
cltd
sbb
das
jl
stos
push
shlb
jp
mov
cld
mov
mov
xchg
popf
sbb
int3
push
clc
push
inc
rorb
lock
clc
lods
xlat
pushf
aam
inc
mov
or
mov
adc
add
mov
jge
decl
and
adcl
adc
call
cmp
lcall
jmp
mov
in
cmp
idivl
push
cmp
pusha
xchg
imul
das
rorb
sub
stos
jno
mov
nop
mov
outsl
daa
cli
inc
hlt
add
sahf
out
bound
loope
in
inc
addr16
inc
stos
pop
xorb
mov
push
ret
mov
ljmp
dec
je
and
pop
cmc
mov
push
pop
gs
lods
dec
je
f2xm1
imul
or
sahf
cmp
mov
push
jbe
shl
xor
mov
frstor
xor
push
mov
add
or
rcrb
push
xlat
xchg
add
ljmp
cmpsb
jb
push
cmp
inc
test
stos
fldl
jno
jmp
mov
hlt
int3
push
xchg
das
mov
or
cltd
inc
or
add
std
push
sbb
shl
call
mov
movsl
add
xchg
or
icebp
sbb
gs
jne
jbe
sbb
mov
test
fsubs
or
mov
ljmp
push
dec
in
scas
std
pop
negb
and
xchg
movb
inc
es
jmp
daa
inc
cmp
add
call
and
jnp
or
ret
xchg
jb
inc
pop
aas
repnz
or
out
push
pop
xchg
test
jl
or
mov
pop
leave
xchg
adc
cmpb
push
loope
mov
cld
mov
lret
sbbb
jge
jp
adc
cmp
pop
js
mov
adc
test
inc
push
dec
xchg
cmp
mov
mov
jg
push
jg
push
hlt
loop
gs
insl
xor
jp
test
leave
shl
loop
inc
ja
rcl
test
adc
fisubrl
stos
into
add
mov
dec
or
mov
js
shlb
aam
or
mov
daa
pop
fs
cli
mov
xchg
jl
shll
pop
jae
mov
mov
sbb
jo
ja
fisttps
mov
sbb
loopne,pt
ss
mov
out
les
jae
test
cld
push
lock
xor
dec
adc
imulb
xchg
lea
xor
test
xchg
mov
xchg
orl
stos
popa
enter
fmuls
add
inc
mov
ss
cmp
ljmp
pop
cli
popa
push
pop
fsubrl
int3
and
dec
mov
ja
jno
xchg
shlb
loop
int
sbb
out
sahf
push
add
cmp
cli
cmp
outsb
popa
sub
dec
adc
xchg
sbb
xor
push
pop
push
mov
mov
sahf
icebp
push
sub
xor
stos
jle
jo
ss
cwtl
dec
orb
mov
lock
push
aaa
imul
jg
aaa
ret
in
and
or
idivl
ds
lret
movb
adc
jmp
xchg
mov
iret
add
clc
dec
aad
mov
and
loopne
mov
jecxz
cld
dec
pop
mov
and
cmp
and
pop
std
add
sub
and
jp
inc
dec
lods
jne
mov
and
test
hlt
nop
cmpsl
and
adc
nop
sti
add
jecxz
xchg
cmpsb
cwtl
mov
inc
mov
scas
xchg
adc
in
clc
rcr
inc
cmp
test
pop
orl
fldt
xlat
cmpsb
ljmp
roll
repz
fldt
sbb
push
xchg
lds
or
sub
mov
stos
mov
pop
clc
sbb
rcrl
cld
mov
fcmove
inc
cld
lcall
rorb
pop
mov
sti
cwtl
and
mov
jp
sbb
cs
xlat
push
xchg
fcmove
rcll
push
mov
jo
cmc
xor
mov
mov
shll
add
push
mov
inc
cli
adc
inc
std
mov
add
push
movsb
ficoml
lret
jmp
dec
lods
sti
fcomip
cld
push
dec
andb
adc
adc
mov
shlb
popf
adc
dec
mov
ret
adc
inc
xchg
fcomps
push
aam
lock
daa
mov
jl
pop
cli
xchg
sbb
int3
inc
je
lahf
test
inc
jge
ret
call
stos
mov
icebp
adc
push
and
push
sti
jg
sahf
cs
and
xor
adc
jno
cld
popa
inc
adc
sbb
sbb
scas
xchg
cmp
push
jge
loopne
push
and
mov
mov
adc
js
cli
filds
ja
lahf
imul
xchg
aas
jp
sbb
cmpb
leave
outsb
cli
pop
lahf
clc
cmpsl
pushf
test
mov
pop
mov
pop
insl
pop
cwtl
imul
pop
push
inc
addr16
and
orl
pushf
fwait
mov
stc
les
jnp
ror
ja
and
xchg
popa
lods
shlb
daa
xchg
in
xor
ret
mov
add
and
mov
popa
aaa
ss
adc
sbb
add
fstps
ljmp
inc
or
xchg
jno
mov
push
jecxz
sub
push
movsl
jle
xlat
fildll
movsl
xor
add
and
loop
lea
push
mov
sub
jmp
loop
ss
adc
orb
stos
xchg
mov
push
xchg
sub
je
jg
mov
fists
cltd
xchg
add
inc
or
push
test
or
and
sub
ret
add
fcompl
push
mov
and
or
jecxz
arpl
stos
pop
outsb
cld
mov
sbb
clc
inc
jge
mov
loopne
xchg
aaa
cli
mov
shlb
and
xor
cli
add
dec
mov
out
or
or
and
mov
es
ss
push
sbb
hlt
add
repz
dec
outsl
fsubrl
in
dec
adc
jmp
dec
jp
outsb
cld
sbb
or
and
mov
leave
subl
sub
loope
aad
mov
icebp
inc
in
or
push
add
sbb
je
pop
fldt
fadds
adc
shrb
int
mov
fiadds
jmp
xor
das
in
shlb
xchg
daa
aam
sub
sbb
pop
loopne
test
rcrb
leave
sub
sahf
push
push
mov
lcall
lcall
sti
lcall
mov
dec
mov
nop
hlt
push
sub
cld
cltd
dec
gs
or
or
decl
add
adc
mov
mov
flds
mul
add
mov
dec
in
jg
sti
bound
mov
je
aas
jmp
aad
jl
das
dec
xor
adc
cmp
add
iret
add
xchg
adc
xlat
outsl
inc
inc
out
ss
mov
mov
shlb
daa
mov
sub
fisttps
mov
fcmovb
mov
repnz
xlat
aas
movsb
adc
dec
xor
pop
mov
mov
pop
dec
aas
pop
cmp
cmpsb
pop
fidivl
sbb
shl
in
fisubrs
add
add
fcmovb
jg
cld
shrb
mov
rolb
xorl
push
sbb
shll
loope
adc
jns
stc
loope
mov
dec
jno
std
sub
xor
test
push
lahf
enter
and
lods
pop
mov
test
jg
popf
lods
mov
sub
shrl
inc
jg
je
push
and
outsl
fcom
adc
mov
fisubs
adc
nop
dec
xchg
subb
sahf
aam
mov
outsb
cmpsb
nop
jo
pop
adc
and
out
mov
sub
adc
inc
test
in
xchg
add
loopne
sbb
jns
jl
das
fcompl
lock
fmuls
mov
outsl
fwait
sub
mov
add
loope
cmp
fistps
sbb
imul
add
jp
nop
pop
cld
lret
xchg
not
ret
in
cmc
fwait
adc
das
insl
in
addl
inc
xor
mov
addr16
lods
mov
insl
pop
incl
adc
stos
dec
pop
and
pop
mov
loope
cmc
mov
mov
insb
mov
testb
loop
sub
cwtl
mov
xlat
ljmp
or
fs
xor
incb
inc
sti
imul
xchg
mov
xchg
insl
cmpsb
sbb
call
decl
unpckhps
push
xchg
inc
inc
adc
mov
cli
dec
pop
clc
sbb
xlat
lcall
and
test
and
dec
xor
cmc
jbe
jno
movsl
les
out
test
clc
lea
ficoms
push
popa
inc
enter
jbe
jne
in
aad
adc
push
push
jmp
lret
pop
push
iret
sbb
push
xor
lret
mov
pop
lds
movsl
imul
into
insb
sti
or
pop
adc
pop
clc
dec
loopne
test
nop
das
mov
mov
test
mov
mov
jne
scas
je
pop
cmc
aaa
inc
push
pop
cmp
gs
fs
adc
inc
scas
inc
mov
push
nop
rorl
mov
inc
xor
xchg
aaa
in
mov
push
sub
cmc
fdivrs
popa
xchg
xchg
mov
pop
int
outsl
jge
pop
je
xchg
push
enter
in
xor
jl
push
pushf
inc
outsl
mov
mov
stos
out
and
or
clc
incb
or
adc
pop
stos
fbstp
addr16
dec
sub
testb
lret
mov
push
rcrl
mov
aas
std
je
out
bndldx
and
push
mov
add
rclb
or
aam
pop
mov
mov
out
pop
in
sbb
push
inc
movsb
and
mov
test
jo
cmp
pushf
or
ret
pop
in
dec
mov
jp
cmp
sbb
sbb
adc
pop
jb
das
cld
outsl
clc
mov
clc
jecxz
dec
pop
jecxz
add
sub
shlb
mov
insl
or
das
add
movsl
fiadds
loop
inc
scas
jne
adc
and
add
inc
test
aaa
lret
push
pop
mov
push
sbb
add
sti
lods
push
pop
mov
filds
push
ds
dec
hlt
ret
rorl
adc
and
cld
loope
lds
fidivs
or
jnp
mov
jo
test
and
test
scas
xchg
rcll
sbb
fcompl
cs
jge
xchg
cmp
decb
sub
inc
mov
sti
push
mov
aas
xchg
push
mov
sbb
or
test
cmpb
outsl
mov
aaa
sbb
and
sbb
in
pop
insb
pop
cltd
xor
add
pop
data16
icebp
add
sarl
jne
out
movsl
jg
xchg
pop
repz
aad
xchg
push
pop
jo
sbb
pop
dec
add
mov
mov
jecxz
jbe
pop
cli
mov
ficomps
call
test
dec
mov
mov
mov
cmp
xchg
outsb
inc
test
clc
lock
or
sub
cwtl
mov
pop
clc
lods
pop
adc
inc
pop
sbb
sbb
fwait
sti
rcll
insb
pop
jb
mov
xchg
adc
sub
mov
jle
rep
pop
lcall
add
or
push
mov
add
incb
pop
pop
xchg
and
ds
cmp
jb
stos
push
sbb
out
enter
xchg
fsubs
fstp
pop
pop
test
negb
pusha
fcmovnbe
ficompl
imulb
cld
lea
mov
mov
popa
cmpsb
jl
popf
fisubs
xor
sub
push
insb
push
lock
cwtl
adc
cmp
sbb
xchg
mov
testl
hlt
push
add
lods
cmp
adc
jae
pop
std
arpl
shl
ja
push
fisubrl
add
inc
repnz
or
subb
clc
nop
loope
call
loopne
push
pop
inc
pop
lods
fistpl
push
pushf
cmpsl
aaa
mov
clc
cmpsb
xor
daa
sbb
pop
subb
das
mov
test
sbb
push
data16
cmpl
repnz
xchg
dec
or
roll
push
mov
jns
pop
js
xchg
xor
and
push
outsb
xchg
iret
ds
aas
mov
mov
pop
sub
es
fsts
pop
cs
lahf
add
mov
jne
jle
call
rclb
out
aas
dec
jg
mov
mov
loop
insb
test
lods
adc
mov
shlb
mov
pop
push
or
xchg
fs
enter
or
push
cmpsl
or
ss
mov
cmc
aaa
fmull
fs
sahf
test
idivb
ret
pop
dec
into
je
cmp
mov
jecxz
push
mov
pop
cmp
scas
mov
and
es
lret
or
hlt
or
inc
ja
mov
jo
push
xchg
int3
dec
repnz
fstl
or
dec
aad
shll
sbb
push
enter
sub
adc
push
fwait
fwait
hlt
mov
je
sbb
nop
fldt
out
sbb
sbb
cmp
enter
sbb
push
mov
out
xchg
andb
inc
push
dec
sbb
mov
adc
mov
pop
mov
inc
outsl
or
insl
jo
fs
cs
push
xchg
stos
lods
jne
push
xchg
dec
icebp
xor
rcll
fsubrs
inc
fsubrl
mov
fcoml
pop
and
pop
mov
jge
sbb
out
loopne
fbld
test
cmp
test
cmp
inc
pop
sbb
es
loop
es
aaa
inc
inc
es
pop
js
push
mov
inc
push
nop
mov
sbb
mov
faddl
mul
and
or
in
add
dec
sbbb
ds
sti
idivb
mov
data16
in
cmp
ljmp
push
out
addr16
scas
push
sbb
push
insl
ret
or
dec
dec
rcrb
lahf
mov
pop
lds
or
pop
inc
out
or
ret
mov
dec
stos
mov
mov
pusha
in
mov
push
or
xlat
stos
jo
mov
push
inc
push
mul
mov
pop
loop
stos
iret
sbb
out
lods
add
mov
add
and
pusha
fadd
ljmp
push
push
call
push
dec
pop
or
repnz
mov
mov
outsl
cmp
rcl
cwtl
lea
repnz
lock
xchg
loopne
or
cmpl
loopne
imul
sub
lea
sub
addl
dec
push
ds
jmp
adc
cmp
xor
mov
test
or
pop
aas
xor
stos
mov
test
cmp
xchg
cli
inc
add
sbb
pop
sbb
dec
out
loop
fidivrs
xchg
cwtl
sbb
xchg
inc
adc
insl
cmpsb
push
mov
sub
lahf
inc
addr16
xchg
mov
mov
xlat
or
test
outsl
filds
dec
jp
mov
inc
jbe
jg
shlb
and
lock
adc
ja
insl
sub
inc
push
in
fildll
into
jle
cs
pop
lret
rorl
out
aaa
das
cmc
call
mov
sbb
sahf
or
sti
enter
sub
jle
adc
xchg
in
call
lods
cli
fmuls
sbb
out
sbb
movsl
lea
js
inc
xchg
mov
push
stos
pop
ret
mov
in
lods
ds
inc
stos
cmp
in
or
jb
sub
xlat
adc
aas
sti
test
insb
lods
ret
cmc
hlt
loope
add
subl
xchg
jne
lds
or
cs
ss
pop
jl
sbb
mov
inc
cltd
jbe
push
pop
imul
sub
xchg
xchg
pop
and
shll
sub
mov
clc
and
xor
or
ret
fsts
mov
std
test
and
pop
jns
fnstsw
cmp
shll
mov
outsl
jl
xchg
hlt
inc
or
push
jge
jmp
popa
ret
and
mov
out
clc
sbb
movsl
add
in
lret
dec
adc
loopne
outsl
mov
sarl
jp
test
jno
aaa
fisubrs
lret
stos
and
stc
sub
mov
sub
std
aad
out
loope
xchg
mov
xor
addb
movsb
shlb
and
xchg
shrl
jp
ret
adc
fdivr
jge
pop
cmp
pop
jle
pop
push
sbb
out
fisubs
addr16
inc
cmp
scas
lds
add
sarl
jmp
incb
xor
loope
push
out
imull
out
mov
push
outsb
pop
test
daa
and
fnclex
jnp
lods
scas
ret
ljmp
cmp
lahf
outsb
fwait
push
and
rcrl
cs
jle
mov
imul
adc
lods
test
in
inc
mov
ds
pop
add
and
ret
clc
xchg
mov
mov
in
sub
adc
jp
loope
jge
lea
add
cld
in
test
test
and
xchg
out
sbb
in
in
mov
inc
adcl
ret
lahf
popa
lahf
xchg
std
daa
mov
or
adc
pop
in
out
pop
nop
add
cwtl
inc
aaa
hlt
push
jae
outsl
aam
push
pop
sub
clc
inc
add
cmp
and
outsl
push
push
mov
xor
jle
cmp
nop
mov
rclb
shl
inc
xchg
pop
xchg
adc
out
adcb
jecxz
inc
jb
push
xor
push
push
mov
cmpb
out
and
inc
lcall
mov
lock
mov
jl
adc
fs
popa
and
cmc
sbb
and
mov
mov
adc
sbb
xchg
jb
repz
int3
dec
aas
xchg
cltd
js
and
lock
jg
sbb
ret
nop
push
cmpsb
or
dec
das
pop
test
cmpsb
or
dec
sbb
sbb
xchg
and
mov
bound
imul
leave
icebp
dec
ffree
ljmp
je
adc
into
out
jge
cmp
or
inc
movsl
jp
dec
cld
subb
sbb
dec
jmp
loopne
mov
cmp
leave
je
std
dec
lahf
aam
mov
ljmp
sub
sahf
inc
ds
pop
jmp
sbb
lcall
clc
xchg
jecxz
out
loope
lret
push
jmp
adc
push
push
cmp
jmp
cmpb
test
fcoms
pop
in
cmp
jp
xorb
mov
lahf
out
mov
jge
adc
mov
dec
aas
lea
pop
xlat
dec
add
loop
int3
out
mov
sub
adc
jne
pusha
sahf
inc
jg
mov
push
pop
out
test
js
loopne
bound
fisttpl
or
adc
mov
mov
xor
push
inc
repnz
inc
mov
cli
es
mov
jae
pushl
cmp
jle
jecxz
adc
inc
popa
or
push
mov
sub
incl
call
cmp
js
aad
loopne
fidivs
and
loope
mov
cmpsb
mov
fs
hlt
cmp
in
jge
dec
sub
adc
ja
mov
jp
cld
addl
inc
dec
mov
das
cmp
testl
and
mov
and
push
cmp
inc
add
mov
ljmp
inc
cmp
pop
mov
rcl
adc
sbb
test
sbb
push
inc
fstpt
push
icebp
pop
sub
dec
sub
outsb
xchg
cmp
adc
mov
lret
mov
xchg
jp
adc
jno
orl
mov
add
or
pop
std
ljmp
lock
popf
push
pop
iret
repnz
adc
nop
adc
jecxz
std
push
repnz
add
mov
add
jnp
pushf
xor
cmpl
sarb
jecxz
mov
jl
cld
sub
mov
decb
insb
cwtl
xor
sub
inc
mov
or
out
mov
cmp
push
xor
push
mov
adc
xor
jns
test
push
sub
out
outsl
aas
mov
bound
and
movsb
rolb
mov
andb
and
mov
jl
loopne
cmp
lods
and
sub
aam
inc
push
aam
call
inc
lds
stos
cmp
test
repz
sub
push
aas
dec
push
fsts
push
ficompl
in
or
cmp
push
fcomps
fcmovbe
mov
push
sub
mov
fsubrs
push
adc
rolb
insl
mov
es
test
scas
das
insb
sbb
xchg
inc
or
ja
inc
dec
js
ljmp
cltd
aaa
lock
dec
push
xor
int3
data16
push
jecxz
das
arpl
pop
mov
out
pop
aad
sbb
xorl
ret
cltd
daa
int3
lds
loope
fwait
sub
testb
mov
pop
ljmp
sub
or
mov
es
hlt
in
addb
jp
mov
dec
mov
and
inc
jecxz
insl
pop
loopne
mov
movb
rcrb
adc
sub
sbb
cmp
in
jno
ss
adc
dec
adc
popa
jns
sub
addr16
test
dec
loop
mov
leave
test
sti
imull
inc
or
sbb
in
scas
js
xchg
push
cwtl
inc
and
push
push
sbb
mov
clc
jnp
in
fdivrs
rorb
pop
fbstp
sbb
pop
shl
das
lock
sub
inc
push
cmpsb
jmp
xor
sarb
in
out
or
out
enter
sbb
shlb
or
in
lods
push
jbe
or
scas
xchg
movsb
cmc
jbe
aad
lret
test
jl
mov
test
xor
xor
jnp
imulb
icebp
push
inc
fdivs
sti
inc
xor
icebp
xor
pop
cli
test
fsubs
aas
shl
iret
icebp
lods
scas
data16
sub
mov
fcmovnb
lcall
rcrb
add
arpl
cmpsb
and
je
fcoml
insl
andl
outsl
cltd
sbb
idivb
enter
ja
xlat
out
adc
test
les
mov
jne
lret
jg
cbtw
jmp
sbb
inc
mov
loope
es
rcrb
rcrl
add
mov
iret
cmp
inc
jbe
bound
cmp
das
xchg
inc
lods
icebp
jbe
scas
mov
in
subl
mov
xchg
decl
ss
pop
push
push
push
in
lret
cmp
insb
stc
add
lods
pop
adc
ficompl
cmp
mov
testb
push
xor
das
test
pop
pop
pop
loopne
push
dec
in
dec
xchg
mov
add
push
std
inc
xchg
add
and
orl
loope
icebp
adc
loopne
mov
jle
dec
mov
xchg
fsubrs
loop
mov
adc
sbb
push
adc
mov
or
cmp
test
movb
loopne
dec
mov
cs
jmp
pop
mov
adcl
mov
int3
mov
push
fmuls
or
jle
lahf
call
popa
pop
xor
mov
push
out
sub
jnp
scas
cmp
fst
iret
dec
dec
or
pusha
jg
mov
mov
arpl
cmpsb
decl
adc
inc
cmp
and
push
aaa
inc
insb
call
leave
outsb
aaa
jbe
jns
sub
or
push
add
imul
imul
cmpsl
jge
in
push
jp
dec
cmp
or
outsb
pop
xchg
mulb
xchg
insb
pop
fisttps
cld
aad
xor
xor
inc
sbb
xlat
lea
aad
adcl
inc
jmp
push
cmp
and
out
pop
stos
mov
cmp
int3
mov
lock
insb
enter
hlt
sbb
mov
enter
push
bound
je
fdivrp
or
mov
lea
push
mov
lods
sar
and
push
addl
test
dec
add
xchg
add
outsb
and
jnp
lea
das
and
pop
sti
test
fistl
and
in
ret
cs
stc
xchg
in
cmpsl
mov
push
inc
dec
lock
sub
stos
test
push
and
xor
jle
pusha
jmp
cmpsl
xchg
jns
shl
jmp
push
fsub
insb
add
daa
push
mov
scas
daa
das
in
daa
xor
mov
pop
mov
cmpsb
rcr
mov
mov
sti
add
adc
arpl
mov
pop
add
scas
aas
push
pop
bound
xchg
sahf
pop
pop
shrb
aam
clc
das
pop
or
xor
sbb
inc
mov
pop
dec
dec
push
mov
pop
mov
mov
and
lcall
stc
mov
pop
jb
sub
aaa
sarb
dec
lcall
pop
enter
fidivrs
test
mov
sbb
scas
inc
gs
mov
or
aad
inc
test
jl
loope
mov
rcr
xchg
inc
call
sub
jne
inc
cmc
cmp
sub
pop
addr16
ljmp
mov
dec
clc
xlat
es
mov
nopl
xchg
sti
lods
jbe
sbb
cmp
xchg
xchg
outsl
lds
mov
scas
test
hlt
pop
cmp
add
mov
pop
ljmp
cwtl
je
inc
out
sbb
push
stc
pop
push
cmp
dec
cltd
mov
pusha
and
adcb
scas
xchg
out
addl
lods
push
cs
adc
outsl
jg
in
out
push
add
repnz
inc
rorl
mov
mov
mov
mov
mov
iret
dec
cwtl
sti
fbstp
popf
jg
stc
cwtl
sahf
roll
lock
xchg
test
adc
push
xchg
mov
cltd
xchg
mov
xchg
ret
inc
hlt
pop
jp
adc
cmp
lret
mov
mov
sub
loop,pt
insl
mov
mov
cwtl
outsl
outsl
mov
jmp
inc
nop
pusha
jb
cmp
jl
mov
test
inc
or
push
push
clc
outsl
xor
cmp
scas
cmc
jp
inc
ret
cmp
or
scas
and
loop
jge
mov
add
mov
jl
aam
ljmp
mov
in
in
ja
fnstsw
ss
stc
or
push
loop
push
ror
pop
mov
xchg
lods
aad
jo
aas
or
icebp
aaa
mov
into
and
out
fistps
mov
into
sbb
mov
jp
push
jns
cmp
add
mov
scas
les
adc
nop
xor
ret
dec
or
dec
jne
sub
mov
movsb
je
sub
mov
and
push
jle
int
add
inc
fcmovnbe
inc
mov
cmp
aad
insb
in
jg
add
in
loope
mov
dec
push
sbb
nop
cld
addl
scas
ret
jl
add
bswap
mov
push
das
add
cwtl
mov
aas
jno
pop
ret
jnp
orb
sarb
sarb
test
mov
add
jge
push
mov
push
mov
mov
xor
inc
sub
xor
sbb
and
adc
pop
test
pop
mov
and
scas
mov
mov
js
push
in
push
into
push
sbb
testb
enter
out
insl
jge
in
push
in
call
ljmp
insl
loope
subl
or
shll
jle
jbe
add
or
jae
sub
or
xchg
lock
lods
fstpt
in
inc
or
dec
xchg
lcall
or
ljmp
mov
mov
jae
add
call
and
loop
jo
into
xchg
sbb
call
lds
pop
inc
ljmp
pop
mov
cmpsl
adc
adc
mov
repnz
insl
sbb
rorb
jmp
xchg
dec
mov
fstl
fidivrs
mov
scas
jbe
add
out
sbb
jo
jge
fimuls
mov
loop
out
dec
nop
lods
xchg
or
popa
adc
idiv
inc
pop
aas
jge
aam
or
sbb
adc
inc
or
xor
sahf
outsl
xchg
mov
in
or
jmp
rorl
xchg
jle
scas
inc
mov
clc
push
hlt
push
js
push
add
cli
add
or
push
pop
push
push
pop
fdivrl
movsl
xor
in
inc
movsb
push
mov
push
cli
xor
fwait
icebp
test
inc
int3
int3
and
pop
ljmp
rorb
int
das
in
enter
sub
mov
arpl
outsl
mov
shrb
pop
cwtl
mov
setnp
sti
adc
push
add
sub
hlt
mov
add
xor
in
loopne
sbb
mov
push
jo
repz
adc
fbstp
dec
fs
rcrl
dec
cmp
orl
jmp
lcall
sahf
dec
push
jmp
and
dec
push
or
outsb
sbb
xchg
test
sub
shrb
fwait
mov
jge
mov
and
imul
inc
cmp
inc
mov
scas
add
cmp
outsb
mov
loopne
gs
or
pop
lcall
xchg
xor
aad
sub
mov
call
push
movsb
jge
call
adc
subl
jb
lret
add
ficompl
sbb
test
pop
fadds
into
cmp
jns
dec
pop
movsb
les
push
addr16
addb
inc
sti
jmp
idivb
cld
pop
rolb
cli
shl
sbb
cmp
in
xchg
rorb
add
pop
mov
sbb
jae
sub
and
aaa
inc
loopne
pop
add
or
mov
and
popa
into
push
cmp
divl
mov
mov
sbb
jbe
adc
mov
aad
outsl
cli
cli
dec
fidivl
jo
bound
inc
int
pop
cmp
aad
cmp
jle
outsl
fwait
push
xorl
vpmaxsw
lock
mov
ss
mov
sbb
mov
and
xor
mov
jecxz
mov
mov
cli
lock
or
in
mov
cmc
loopne
ret
movsb
cmp
xchg
rcll
fisttps
or
ja
aam
sub
mov
mov
cs
mov
adc
xor
add
and
add
mov
jg
repz
inc
push
outsb
and
fsubr
ret
dec
lods
cmp
in
mov
imul
xchg
pop
aad
call
adc
pop
clc
lods
jno,pn
and
push
or
mov
fcmovnb
es
inc
pusha
pand
scas
cmp
mov
loope
adc
mov
aaa
cmp
cmp
push
mov
js
jle
iret
inc
jmp
lea
xor
mov
aaa
lea
bound
xchg
jae
out
add
jbe
nop
mov
and
lock
lret
cmp
repnz
cmpsl
jo
jmp
aam
sbbb
std
test
mov
rcrb
dec
rclb
bound
outsl
fcom
loop
into
adc
test
pop
lods
sub
ljmp
test
jns
mov
or
mov
dec
cwtl
imul
pushf
iret
dec
xor
imul
addr16
cwtl
icebp
inc
mov
fnstsw
das
test
xor
mov
and
aad
mov
add
sub
fbld
pop
cmp
js
or
xor
pop
adc
cmc
ss
push
mov
lock
lods
fcmovnbe
dec
dec
mov
inc
pusha
test
smsw
add
push
out
dec
add
cli
mov
loop
mov
adc
rcll
xchg
cmp
lock
dec
ret
xchg
aad
das
je
dec
les
cmp
jmp
stos
mov
data16
jbe
rorl
movsl
dec
in
insb
fisubl
stos
subb
push
xor
test
mov
loope
push
out
mov
lds
sbb
xchg
mov
sbb
sbb
inc
gs
fwait
xchg
je
mov
pop
dec
test
js
sbb
xchg
ljmp
inc
stos
inc
push
cmp
xlat
fsubl
lahf
or
cmp
add
mov
xchg
push
xchg
lcall
imul
add
sbb
inc
ficoml
mov
rcll
lahf
sub
test
pusha
loopne,pt
jp
fcomip
sbbl
icebp
and
rcrb
inc
xor
rcll
or
ss
cmp
inc
cmp
push
mov
sub
fcom
pop
mov
das
subb
lods
aas
jle
sub
ljmp
mov
adc
and
jbe
dec
add
sub
jo
sar
out
or
and
jo
aam
and
mov
clc
mov
popf
sub
cs
mov
setp
cli
subb
test
mov
adc
push
mov
scas
cmpb
roll
jle
sub
ja
lahf
and
xor
and
mov
rcl
cmc
scas
inc
je
mov
sub
cld
pop
pop
cmp
and
into
xchg
cmpsl
jae
into
jge
out
fst
loopne
jno
jge
and
add
rorb
outsl
or
insb
inc
sbb
shll
push
stos
imul
jb
jmp
stos
rcrb
sub
mov
push
pop
popa
out
adc
lods
xchg
fcom
cltd
mov
insb
mov
xchg
pop
sub
fsts
call
pushf
sbb
adcl
dec
scas
push
pop
clc
adc
cmp
xor
out
test
fistl
push
cmp
jne
jge
or
jb
lret
sbb
xchg
les
enter
mov
into
sbb
insb
xchg
fdivrp
sbb
push
or
push
push
cmp
outsl
push
jae
mov
xor
cmp
outsb
aad
iret
nop
xchg
xor
inc
xor
jbe
cmpsb
sub
icebp
jbe
rorl
xor
or
sbb
and
cmp
mov
std
adc
outsl
mov
and
hlt
fbstp
dec
sbb
pop
dec
sbb
and
cld
ja
pusha
jle
jo
loope
xchg
imul
shufps
lock
sub
sub
adc
ss
sarb
mov
lea
insb
stc
sti
popa
lret
mov
mov
push
sbb
inc
cs
push
out
out
cmp
jle
call
data16
lock
push
loop
pushf
cmpsl
dec
mov
xor
fldl
mov
lods
test
aas
xchg
int
icebp
xor
movsb
fstpl
ja
sahf
stos
dec
and
pop
pop
mov
daa
sbb
push
testb
xor
sahf
in
divb
dec
or
shlb
mov
jg
dec
xor
test
mov
ljmp
sub
imul
shlb
insl
test
gs
fiaddl
lock
mov
insb
shlb
push
das
jae
out
mov
in
fisubl
mov
xor
jp
mov
ret
movsl
test
or
dec
jg
sub
adc
or
aaa
mov
movb
push
sub
add
push
aad
pop
pop
push
mov
xchg
jns
mov
sub
push
les
and
add
add
xor
bound
mov
pop
stos
into
jnp
mov
ret
outsl
inc
or
push
push
push
adc
mov
mov
sub
mov
xor
jae
fucom
and
sbb
dec
sbb
dec
sub
mov
cmp
test
nop
mov
pushf
andl
or
xlat
jo
test
rcrb
push
add
mov
pop
push
or
movsl
sbb
sbb
adc
leave
xor
adc
or
pop
js
sub
adc
inc
iret
jns
stos
testb
push
and
insl
sarb
xchg
cli
dec
ret
cmp
pop
mov
mov
push
in
imul
or
repz
lds
rcrl
jbe
ret
mov
xchg
jno
cmp
inc
pop
cwtl
repz
xor
das
ret
mov
cmp
in
inc
xlat
xor
sub
or
add
fstpt
aad
and
sub
call
xor
out
scas
mov
mov
sub
or
mov
imul
outsb
insl
adc
jnp
cmpsb
mov
insl
mov
sub
add
movsl
ds
and
mov
arpl
pop
hlt
shlb
ret
roll
les
stos
mov
arpl
cli
stos
jb
sub
dec
je
and
inc
rcll
or
xor
loope
adc
or
or
push
sbb
cmp
inc
pop
inc
inc
sbbl
cmp
movsb
inc
or
dec
aad
ja
cltd
rcrl
mov
lret
in
jnp
add
ja
sbb
xchg
enter
in
adc
cwtl
ret
adc
stc
and
in
ret
xor
ljmp
adc
mov
xchg
lock
xor
clc
fadds
dec
jle
movsl
fidivrs
ret
outsl
inc
mov
cld
mov
pop
rorl
aam
mov
mov
push
std
lret
and
int3
xchg
imul
xor
cli
xchg
movsb
add
sbb
inc
stos
sub
push
mov
cmpsb
sbb
sbb
add
pop
dec
cmpsl
jle
popa
mov
sub
mov
mov
or
sub
rcll
add
loopne
inc
push
mov
and
lock
or
lea
pop
aaa
mov
repnz
xor
mov
dec
mov
sub
sub
mov
pop
dec
and
icebp
out
adc
xor
mov
jae
add
add
das
sub
fisubl
mov
mov
add
mov
das
jbe
dec
addb
mov
add
sub
out
sub
arpl
dec
jl
push
mov
ret
shll
aad
sbb
pop
roll
insb
lods
jne
adc
adc
mov
lds
jmp
clc
jbe
pop
test
fidivs
mov
out
out
cs
or
mov
xchg
nop
test
scas
sbb
jg
jmp
add
or
movsl
sbb
mov
dec
enter
pavgb
cmp
and
loop
dec
cmc
add
adc
pop
insb
add
pusha
shl
pop
xor
xchg
subl
out
mov
add
adc
pop
sbb
cmc
mov
out
pusha
xchg
add
nop
jnp
mov
setl
jecxz
mov
and
mov
jo
icebp
popf
je
loope
insl
sti
mov
cmp
mov
or
nop
cmp
divl
mov
sbb
icebp
sub
push
daa
ret
lea
dec
adc
mov
rorl
test
jp
repz
cmpsb
cli
ret
enter
jnp
ss
and
add
push
sbb
xchg
push
or
in
test
ss
or
dec
xor
sub
inc
push
push
xor
ret
xchg
es
fs
mov
arpl
jg
push
jns
popa
sbb
or
inc
pop
dec
jno
loop
dec
sub
lret
jbe
mov
jecxz
daa
mov
adc
lret
or
sbb
sahf
fisubrl
das
mov
ja
xchg
sti
sbb
ss
mov
test
mov
mov
ror
pusha
adcb
push
shll
adc
mov
and
adc
sbbl
sub
mov
nop
sbb
enter
or
clc
test
pop
push
lods
out
imull
jl
lods
test
hlt
data16
mov
fdivrs
dec
xor
pop
jae
jne
push
push
sbb
inc
icebp
loope
cmp
and
and
dec
pop
test
repnz
fbstp
ds
add
jecxz
aad
fidivrs
adcl
mov
loope
nop
sbb
add
mov
inc
inc
imul
mov
pop
xorb
rcl
adc
push
jmp
stos
sub
sar
mov
dec
test
sbb
push
push
mov
popa
or
sbb
movsl
mov
adc
inc
jnp
sti
daa
add
scas
jp
shl
pop
sbb
pop
jno
jbe
inc
ret
lea
sbb
test
je
mov
jbe
adc
clc
nop
pop
inc
mov
jo
cmp
add
push
lahf
sahf
and
push
adc
xchg
jne
add
daa
pop
adc
in
test
dec
xor
mov
mov
sbb
in
ja
fisttpl
cmp
insb
call
ja
stos
ja
adc
push
jl
in
les
stos
das
mov
ds
int
das
cmp
mov
cmpsl
mov
add
enter
cltd
xor
xchg
pop
cltd
inc
aam
pop
arpl
xchg
cs
xchg
mov
mov
jno
sarb
inc
pop
inc
push
xchg
dec
sbb
fwait
pop
fisubs
mov
add
pop
jae
aaa
cli
test
dec
jmp
int3
push
push
rolb
mov
icebp
or
or
mov
cmpsb
sarb
inc
lcall
mov
xor
fnsave
mov
mov
dec
and
shr
xor
dec
inc
jge
loopne,pn
xlat
loopne
insl
sbb
xchg
fcomp
pop
push
pop
out
sbb
movsb
stos
jnp
inc
nop
leave
lahf
adc
cld
inc
mov
out
or
adc
jno
sub
dec
pop
xlat
movsl
lods
cli
jg
and
fdivrp
fwait
lods
mov
sti
sbb
xor
cmc
add
mov
sti
or
cld
mov
or
and
sub
mov
clc
addb
lods
stos
frstor
xlat
sub
fpatan
or
addr16
lret
xchg
sti
imul
cltd
mov
mov
ds
aas
sbb
data16
xchg
add
mov
sarb
call
je
cltd
xchg
in
shrb
dec
cwtl
dec
les
subl
jbe
btr
fnsave
push
int
xchg
xor
std
inc
push
repnz
sbb
cmp
and
sbb
adc
inc
add
sub
inc
in
mov
incl
adc
adc
xchg
sbb
sub
ror
das
xor
xor
jmp
pop
pop
xor
enter
test
shll
xor
imul
adc
outsb
icebp
fistpll
or
adc
daa
and
mov
aam
mov
icebp
aaa
cld
push
and
fisubs
sub
mov
das
cltd
mov
dec
lods
fwait
loop
aam
push
lea
jge
xor
mov
es
mov
or
jno
and
and
lea
inc
push
rcrl
adc
xchg
or
cli
or
push
cmp
repz
mov
xchg
imul
jp
xchg
lds
inc
in
loope
lods
ljmp
testl
mov
pop
xchg
lahf
stc
push
out
sbb
fdivrl
popa
sbb
test
clc
roll
hlt
jge
in
ja
sbb
setno
inc
out
and
in
mov
jg
ret
pusha
ds
or
enter
cmpsb
outsb
js
ret
in
mov
mov
out
xchg
sbb
xchg
pusha
jmp
adc
movsl
adc
cmp
pusha
or
cmp
int3
repz
rcl
popf
mov
jb
push
sbb
test
fdiv
jb
jmp
sbb
jge
mov
popa
adc
les
loope
imul
pop
push
or
loop
clc
jl
add
pop
cmp
sbb
xchg
cwtl
dec
adc
cli
mov
cmpb
repz
cwtl
adc
cmp
sub
rcll
push
or
out
sbb
cmp
je
adc
je
fbstp
dec
movsb
xchg
arpl
roll
xchg
repz
adc
adc
ljmp
ret
sub
fwait
test
mov
jb
leave
das
hlt
iret
mov
or
sbb
sbb
into
ret
mov
push
outsl
pop
jle
mov
adc
inc
fs
push
insb
dec
push
xor
dec
shll
xchg
sarb
push
sbb
inc
sbb
frstor
and
pushl
push
loope
adc
mov
push
adc
sub
sub
aas
mov
fadds
inc
andl
les
cmp
jb
sbb
xlat
mov
xor
add
pop
or
in
aam
cmp
aam
aaa
dec
std
pop
out
push
out
sbb
jnp
out
mov
bswap
mov
cmp
sbb
adc
xchg
mov
mov
inc
jl
xor
xor
mov
inc
popf
adc
adc
mov
ret
ss
syscall
ficoms
xchg
clc
cmpsb
push
out
and
cmc
mov
inc
xor
pop
mov
pop
jne
in
cmp
inc
and
fwait
pop
pusha
push
inc
pop
push
adc
sub
in
pop
addb
sbb
cltd
mov
pop
jns
into
cmp
mov
fcompp
add
and
aas
mov
push
insb
cwtl
cmpsb
shll
xlat
inc
imul
pop
add
adc
and
dec
mov
xchg
pusha
popf
inc
or
ret
jae
adc
sti
xor
inc
in
loopne
and
stos
pop
mov
in
out
fstpl
mov
into
pushf
pop
mov
imulb
add
adc
or
mov
clc
push
stos
mov
loopne
js
imul
jns
mov
sahf
lods
les
mov
mov
bnd
pop
icebp
and
dec
xchg
sbb
jl
call
enter
push
lods
push
outsl
pop
xchg
rorb
clc
test
mov
sbb
stos
out
jg
sub
ds
test
in
nopl
and
ss
sbbl
push
push
mov
fsubr
push
pop
jecxz
mov
gs
sysenter
rorb
and
pop
std
mov
adc
mov
mov
inc
push
and
push
movsb
aam
out
cmp
mov
mov
and
loopne
pop
push
inc
mov
ja
and
cmc
pop
call
dec
sarl
push
push
int
aaa
call
into
dec
mov
scas
test
mov
jg
sub
test
sbbb
pop
sub
and
xor
call
subl
and
or
dec
mov
sub
into
mov
mov
jg
jmp
xchg
dec
es
jl
jne
or
filds
or
sub
adc
dec
aas
sub
out
adc
and
ljmp
cltd
out
in
pusha
imul
dec
push
fnsave
fnsave
out
ja
addr16
inc
and
xchg
jmp
fisttps
scas
cmc
call
dec
and
loope
cmc
xchg
dec
cs
outsl
cld
dec
sbb
xchg
mov
pop
adc
pop
dec
jl
jmp
sub
daa
js
imul
mov
jo
add
outsl
dec
and
inc
fistpll
aas
mov
or
mov
sbb
lods
ret
into
mov
aas
insb
addr16
mov
sub
iret
add
mov
aam
std
inc
into
cmp
hlt
movsl
mov
cmpsl
jbe
pop
push
lret
and
enter
out
jbe
lods
inc
lds
pushf
or
mov
sub
push
add
pop
sub
or
sub
mov
add
lods
pop
test
into
mov
aas
mov
lds
rcll
bound
mov
mov
mov
xchg
cli
in
xorb
and
dec
addr16
push
movsb
stos
rorl
mov
push
popf
or
lods
test
aam
jne
xlat
ret
and
xlat
sbb
je
adc
dec
loopne
das
daa
cmp
lds
je
inc
xlat
xchg
and
es
ljmp
and
add
dec
and
mov
and
loop
add
xorl
and
mov
jns
push
sbb
inc
loopne
test
test
cmp
pushl
dec
movsb
inc
sbb
sbb
cmpsl
call
iret
lret
test
xor
inc
mov
push
movsl
icebp
scas
or
hlt
sub
adc
adc
loopne
pop
cli
pop
cld
pop
adc
sbb
dec
mov
mov
cmpsb
mov
sbb
incl
push
pop
test
push
aas
test
adc
pop
mov
xchg
or
popa
mov
and
push
inc
popf
std
pop
pushf
loopne
out
std
lea
push
icebp
sub
mov
xchg
or
pop
push
and
movsb
fldl
mov
lret
xchg
mov
mov
popa
arpl
scas
test
dec
test
or
mov
adc
inc
das
les
xchg
addb
mov
andb
arpl
xor
fsts
push
ds
cmp
lret
or
mov
insb
or
out
add
jmp
dec
or
in
sub
imull
pushf
sbb
add
andb
js,pt
and
leave
nop
comiss
push
inc
add
add
xchg
leave
jo
lea
xor
testb
aam
ja
cltd
test
cld
out
clc
push
out
sub
adc
xchg
insl
adc
or
clc
push
mov
or
test
scas
icebp
cmpsl
divb
mov
and
mov
and
mov
mov
stc
in
aam
in
xor
pusha
mov
fisttpll
aam
jmp
ret
out
jb
test
addb
adc
cmp
aaa
clc
lock
test
popl
mov
lods
sub
adc
lods
mov
add
jmp
cmp
cli
lret
bound
fstpt
jg
sub
mov
adc
aas
daa
adc
mov
jg
mov
lods
pop
add
test
adc
insb
ja
sbb
mov
aaa
pop
subb
cmp
pop
popa
and
test
pop
jns
mov
rcrb
sub
loopne
inc
cmp
or
jno
jecxz
push
in
fiadds
jbe
test
jmp
fucom
test
jecxz
les
cmp
insb
pop
js
fsubrs
adc
or
cs
repz
test
xchg
fdiv
cmpsb
push
shlb
jle
ret
push
mov
inc
outsb
mov
pop
inc
inc
jo
rcrl
xchg
jae
mov
loop
test
sub
adc
subb
mov
xor
in
ds
sbb
cmp
leave
call
lret
scas
jp
sub
movsl
pop
adc
mov
push
xchg
aad
loopne
aas
xor
add
addb
int
sbb
insl
jp
xor
test
call
je
aas
pop
int3
hlt
imul
negl
mov
cld
mov
pop
or
or
or
das
mov
pop
call
loope
sarl
in
push
mov
icebp
sarb
stos
jecxz
outsb
pop
add
mov
mov
fsubl
out
js
or
inc
cld
push
fistpl
lcall
lock
push
orl
mov
mov
sbb
cmc
lea
inc
rclb
jl
ja
and
idiv
js
jg
inc
incb
jo,pt
jo
int
insl
andl
xchg
mov
mov
dec
sbb
call
cmp
adc
lret
ret
stos
sbb
jp
cld
push
push
cld
sub
adc
xor
pop
movsb
orb
icebp
mov
arpl
xor
pop
loop
imul
daa
cmp
inc
mov
shll
and
cmc
xorl
or
rol
sbb
mov
cmc
cmp
pushf
adc
in
out
stc
jno
nop
arpl
lret
aas
cmp
or
scas
and
xchg
cmp
jle
mov
flds
mov
mov
imul
js
cmpsb
mov
aad
insl
aad
mov
add
test
jo
mov
fdiv
or
cli
adc
jecxz
mov
neg
mov
mov
xor
mov
mov
add
xchg
or
mov
pop
mov
mov
dec
bound
jg
mov
sub
sub
nop
add
inc
out
aaa
sti
mov
movsb
and
inc
std
inc
nop
jmp
xchg
sbb
mov
dec
repz
jg
jno
jle
cld
jbe
dec
adc
cli
dec
icebp
hlt
adc
outsb
insl
xor
or
push
xlat
pushf
cmp
pushf
insb
ss
incl
cmc
mov
popf
hlt
xor
fs
add
mov
fs
dec
rolb
jns
mov
lret
pop
jnp
in
out
cld
cltd
sub
icebp
in
pop
jle
add
xchg
add
ret
pop
jmp
mov
pop
enter
pop
movsb
pop
mov
sti
pop
cs
ror
mov
pop
pop
iret
jmp
or
mov
stc
ret
aad
mov
mov
pop
sub
out
adc
pop
pop
adc
ss
jb
lret
xlat
out
mov
lret
add
sbb
xchg
cmp
add
imul
inc
mov
inc
mov
sbb
inc
lea
in
inc
ljmp
sbb
popa
dec
inc
mov
sarl
rclb
hlt
push
mov
jo
sbb
mov
andl
inc
cwtl
decw
jne
fwait
push
mov
push
sub
add
icebp
lahf
cmpsb
sub
jno
imulb
fsubl
sahf
lret
xor
out
test
bswap
inc
icebp
sbb
scas
push
inc
jnp
jmp
incl
xlat
adc
loop
insb
daa
in
xor
add
mov
loopne
sar
fidivl
scas
xlat
add
and
int3
into
sarl
xor
imul
mov
loopne
leave
pushf
movsb
cmc
adc
les
mov
jmp
ss
icebp
adc
clc
pop
mov
add
mov
je
sub
sti
mov
jg
out
cmp
jnp
jg
call
int3
xor
clc
pop
sub
int
ja
fcoms
mov
push
sbb
imul
std
add
xchg
aaa
pop
jb
outsl
in
out
mov
movsb
out
fsts
mov
lret
pop
push
push
push
in
inc
push
pop
call
push
pop
push
dec
push
dec
push
inc
dec
push
insb
push
push
push
pop
inc
push
dec
adc
pop
incb
dec
push
dec
dec
push
dec
inc
insl
inc
dec
inc
insl
in
fstpt
leave
jne
fnstsw
push
imul
insb
insb
outsl
arpl
lcall
dec
push
imul
imul
gs
xor
cs
dec
or
mov
or
test
inc
inc
push
hlt
das
jge
jb
dec
dec
popa
insl
push
dec
arpl
aaa
cmp
ss
ss
and
and
or
lcall
cltd
pusha
dec
add
je
jb
arpl
decb
gs
cmovge
jne
gs
popa
outsb
fs
sti
insl
inc
sbb
gs
imul
insl
dec
mov
in
jo
jb
push
imul
inc
je
in
jo
outsb
push
and
fcmovu
bound
jb
imul
inc
insb
outsl
jae
and
push
gs
cwtl
mov
inc
adc
sidtl
add
lds
push
or
or
push
inc
or
cmp
add
or
pop
add
sub
frstor
flds
push
add
cmp
sbb
bound
stc
addl
mov
jmp
and
int
push
push
mov
add
int
out
or
sahf
or
inc
cs
and
je
nop
mov
outsl
push
shlb
arpl
lret
repz
push
add
test
add
or
or
add
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
mov
mov
mov
xchg
jo
lahf
push
sbb
out
or
inc
jecxz
mov
je
cmpsl
adc
inc
mov
hlt
pop
mov
or
push
mov
imul
mov
ds
dec
push
sbbl
dec
adc
enter
sbbl
jmp
fcoml
inc
add
insb
or
pusha
outsl
mov
out
dec
sbb
jno
pop
insl
out
int3
ja
andb
xchg
loop
cld
cmpsl
push
or
lret
lahf
out
scas
aas
lcall
lret
sarl
or
leave
dec
sahf
sub
fnsave
add
fsub
scas
add
mov
jmp
mov
jge
xchg
push
mov
mov
out
fildll
inc
and
sbb
fucomip
mov
insl
jb
lods
sbb
dec
sub
lods
and
movsl
out
inc
jl
mov
sarb
sahf
adc
fdivl
lock
jbe
and
add
loope
mov
movsb
lods
cmp
adc
or
int3
mov
mov
and
and
or
dec
iret
dec
aad
aas
aas
sbb
loope
popf
data16
mov
lods
cmp
notb
adc
or
xchg
sub
imul
jmp
mull
loope
jae
adc
mov
in
ret
jnp
mov
nop
mov
and
pop
mov
notb
dec
cmp
sub
sarl
adc
inc
mov
ss
fwait
mov
aad
jmp
xor
mov
inc
mov
adc
sbb
test
mov
mov
mov
xchg
dec
mov
mov
sub
mul
jg
mov
mov
xchg
pushf
mov
popf
mov
gs
incl
jo
iret
add
add
add
add
sub
add
enter
adc
add
or
add
add
add
add
add
push
add
addb
add
js
add
mov
add
add
add
add
add
dec
addl
add
add
add
add
add
xchg
add
add
add
add
add
mov
add
add
add
add
loopne
add
add
add
sbb
add
add
add
mov
add
add
add
add
add
add
addb
add
sbb
add
add
add
add
clc
add
add
add
sub
add
xor
add
pusha
add
add
add
clc
push
loope
in
incl
imul
imul
lock
dec
lock
loope
pusha
jge
add
icebp
add
dec
cli
add
add
cld
add
in
add
out
add
int
add
xchg
outsb
mov
les
movl
fcompl
adc
inc
dec
std
pusha
add
shlb
xor
repz
mov
mov
xchg
in
add
js
adc
cltd
test
adc
fdivr
int3
in
xchg
pop
repz
addr16
pop
xor
xchg
cwtl
mov
inc
aad
in
loop
xor
push
mov
adc
mov
hlt
sub
fadds
scas
into
push
sub
xor
pop
inc
dec
sub
xchg
push
out
in
adc
ljmp
sub
sbb
fimull
mov
adc
push
add
loopne
mov
insl
ljmp
mov
mov
lods
xchg
or
mov
imul
scas
lcall
mov
dec
in
cmp
aaa
push
add
xchg
sti
adc
cmp
pop
into
lods
xor
out
cli
stos
inc
rorl
xchg
mov
jle
dec
repnz
stos
xchg
jno
fnsave
sub
mov
divb
pop
xchg
jb
inc
push
sub
idiv
rolb
push
jae
shll
mov
in
adc
dec
or
pop
cmpsb
inc
out
or
repnz
lds
mov
dec
lods
js
add
mov
sub
add
push
enter
imul
in
fldlg2
xor
or
test
cs
int3
addr16
aad
mov
dec
int
inc
sub
shlb
mov
dec
jne
push
mov
cmp
cli
jae
outsl
jg
testl
push
jmp
adc
dec
into
mov
fs
sbb
pop
adc
mov
fldcw
jo
scas
and
iret
inc
iret
test
mov
fcmovu
jmp
mov
mov
mov
mov
dec
cmpb
inc
adc
outsl
aam
into
in
ss
outsb
std
or
xchg
push
mov
insl
add
push
rcr
lods
cs
jo
popf
mov
loope
fwait
aaa
popa
movsb
lds
xchg
lahf
cmp
jg
pop
push
mov
sahf
fdivs
jp
je
aas
test
sbb
mov
lock
enter
xorb
inc
jo
add
sub
dec
repz
addr16
xchg
out
and
push
mov
in
outsb
sahf
clc
cmc
fcomip
out
or
popa
outsl
imul
push
mov
add
sbb
fwait
mov
add
in
or
lods
sahf
test
sub
subl
pushf
cmp
mov
aaa
hlt
jne
dec
mov
adc
mov
outsl
rclb
mov
aas
into
adc
aaa
mov
scas
mov
cltd
sub
mov
lret
push
shrl
cwtl
mov
xchg
sbb
dec
ret
push
and
out
in
scas
push
lcall
add
jo
inc
movsl
add
insb
leave
mov
stos
inc
jne
gs
dec
clc
add
pop
repnz
mov
mov
leave
cmp
jl
aaa
mov
and
sbb
fisubrs
push
aaa
push
fcmovbe
add
jecxz
sub
lock
mov
dec
and
hlt
xchg
jbe
adc
pop
or
sub
das
data16
xchg
lods
sbb
xchg
jp
insl
and
or
add
mov
ds
lods
push
imul
cmpsl
imul
xlat
aas
xor
fs
dec
es
out
pop
push
jae
dec
pop
jnp
cs
inc
out
sahf
mov
daa
xchg
testl
xchg
push
sub
shrl
sub
shl
push
jl
int3
aaa
addr16
and
xchg
sub
jp
cmpl
pop
dec
fmuls
mov
sub
and
xchg
bound
mov
push
out
pop
push
loop
sbb
dec
das
pop
dec
sub
xor
jle
push
lahf
mov
lcall
sub
pop
mov
mov
leave
xchg
fidivl
or
dec
es
and
sub
mov
fists
push
mov
add
sub
add
and
add
inc
add
add
add
add
incl
adc
fists
cmc
jne
int3
or
add
inc
cwtl
dec
nop
addr16
jecxz
lods
into
leave
stos
call
sbbl
aas
lods
enter
rorl
and
fwait
or
jne
cli
cmp
lds
ljmp
out
je
lods
xchg
ljmp
xchg
test
dec
cmp
aaa
cs
push
xchg
nop
lcall
lahf
xchg
inc
lds
scas
sub
ret
pusha
pop
add
sub
add
adc
add
and
add
add
add
cld
lahf
sti
add
aas
add
scas
out
add
scas
cs
ds
lea
hlt
out
add
lods
sub
in
lea
add
std
incb
idivl
aas
add
mov
ljmp
popl
fldl
push
dec
cli
adc
lock
mov
mov
mov
faddl
addb
mov
and
and
repnz
mov
roll
in
pushw
inc
mov
xor
roll
mov
jns
lea
call
movsb
xor
ret
dec
arpl
js
mov
or
inc
mov
sahf
popf
xor
lret
cwtl
enter
add
add
add
xor
add
add
add
push
add
and
add
add
add
add
adc
add
add
push
add
pop
add
clc
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
xor
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
add
xor
and
push
add
data16
add
jb
add
add
add
pop
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
add
xor
and
dec
add
je
add
outsb
add
je
and
inc
add
outsl
add
jae
add
add
add
sub
add
add
insb
add
push
add
jb
jae
imul
add
add
xor
xor
cmp
xor
add
add
sub
push
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
jo
add
xor
add
outsb
add
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
xor
and
push
add
data16
add
jb
add
add
add
add
add
add
add
add
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
add
xor
add
js
add
add
pop
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
add
xor
and
dec
add
je
add
outsb
add
je
and
inc
add
outsl
add
jae
add
add
add
xor
push
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
add
jno
add
pop
mov
add
add
mov
add
lods
mov
add
mov
add
add
add
mov
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
outsb
jae
outsl
outsl
insb
cs
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
dec
jo
outsb
push
jb
outsb
je
jb
