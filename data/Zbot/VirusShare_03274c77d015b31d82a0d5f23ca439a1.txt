push
mov
sub
push
push
push
mov
mov
shl
movzbl
cmp
jle
mov
mov
jmp
mov
and
and
movzbl
cmp
jle
mov
mov
jmp
mov
mov
cmp
jge
mov
mov
jmp
mov
shr
movzbl
mov
test
je
mov
jmp
mov
shr
mov
mov
mov
xor
div
mov
mov
shl
mov
mov
and
sub
mov
cmp
jne
mov
jmp
mov
mov
mov
test
jne
push
pushl
push
movzbl
push
call
movzbl
movzbl
add
mov
movzbl
mov
xor
div
movzwl
cmp
jge
movzbl
jmp
movzbl
mov
cmpl
je
mov
mov
jmp
cmp
jne
pushl
call
mov
mov
xor
mov
sub
mov
cmpb
jge
mov
mov
jmp
mov
imul
add
mov
mov
mov
cmp
jle
pushl
movzbl
push
movzbl
push
call
cmpl
jge
mov
mov
jmp
mov
xor
mov
sub
mov
mov
mov
cmpl
jge
mov
mov
jmp
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
movzbl
cmp
jne
mov
mov
jmp
mov
movzwl
mov
imul
mov
mov
xor
mov
mov
shr
mov
cmp
jge
mov
mov
jmp
movzwl
add
add
mov
xor
mov
movzwl
mov
movzwl
sub
add
mov
mov
mov
mov
xor
add
mov
mov
sub
sub
mov
mov
or
mov
imul
mov
cmp
jge
mov
mov
jmp
mov
movzwl
xor
sub
cmp
je
mov
mov
movzbl
shr
mov
cmpb
jle
mov
mov
jmp
movzbl
mov
mov
mov
xor
div
mov
cmpb
jne
movzbl
mov
jmp
mov
xor
mov
cmpl
jge
movzbl
jmp
mov
movzbl
add
mov
movzbl
mov
mov
movzbl
or
mov
cmpb
jle
mov
mov
jmp
movzbl
imul
sub
mov
add
mov
mov
mov
cmpl
jne
movzbl
mov
jmp
mov
movzbl
imul
sub
mov
add
mov
mov
xor
mov
sub
mov
cmpl
jne
mov
mov
jmp
movzbl
or
sub
mov
sub
mov
mov
imul
mov
add
mov
mov
test
je
movzbl
mov
jmp
jmp
mov
and
mov
cmp
jle
push
mov
imul
push
mov
imul
push
movzwl
xor
add
push
mov
or
and
push
mov
or
mov
imul
push
movzwl
push
call
mov
and
add
mov
xor
mov
movzwl
movzbl
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
xor
mov
imul
mov
mov
or
movzbl
cmp
jle
mov
mov
jmp
mov
xor
sub
mov
xor
mov
mov
mov
cmp
je
mov
jmp
mov
movzwl
and
sub
mov
xor
mov
movzwl
shl
mov
mov
movzbl
imul
mov
mov
mov
mov
and
or
mov
mov
xor
add
mov
movzbl
movzwl
or
mov
mov
test
je
mov
jmp
mov
movzwl
and
cmp
je
mov
mov
movzwl
shr
mov
cmpw
jne
movzwl
mov
jmp
mov
mov
movzwl
sub
mov
mov
or
mov
add
mov
cmpw
jge
movzwl
jmp
movzwl
sub
sub
mov
movzbl
mov
mov
movzwl
movzwl
xor
mov
movzwl
movzwl
xor
sub
mov
add
mov
movzwl
add
mov
mov
movzwl
and
sub
mov
add
mov
movzwl
shl
mov
cmpw
je
mov
jmp
movzwl
movzwl
xor
sub
mov
sub
mov
mov
imul
mov
cmpw
jge
movzwl
jmp
jmp
mov
sub
mov
movzwl
sub
add
mov
xor
mov
movzwl
mov
cmpb
jne
movzwl
mov
jmp
mov
mov
mov
mov
add
movzbl
cmpb
jge
movzbl
push
call
cmpw
jne
movzbl
mov
jmp
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
sub
mov
mov
xor
mov
test
je
mov
jmp
mov
shr
movzwl
cmp
jle
mov
mov
jmp
mov
sub
mov
cmp
jne
mov
jmp
mov
imul
sub
mov
xor
mov
mov
and
movzwl
cmp
jle
mov
jmp
mov
imul
mov
mov
mov
mov
shr
mov
cmpb
jle
movzbl
mov
jmp
mov
sub
add
mov
xor
mov
mov
imul
mov
cmpb
jge
mov
sub
push
push
mov
add
push
call
cmp
jge
movzbl
mov
jmp
movzbl
imul
mov
mov
mov
mov
mov
cmp
jge
mov
jmp
mov
test
je
movw
movzwl
shl
mov
cmpl
jge
mov
mov
jmp
movzwl
shr
mov
cmpl
jge
mov
jmp
movzwl
shl
mov
mov
shl
mov
mov
test
je
mov
mov
jmp
mov
or
mov
mov
movzwl
or
add
xor
mov
mov
or
mov
imul
mov
cmpl
jne
movzwl
mov
jmp
mov
mov
mov
mov
mov
cmpl
jge
mov
imul
push
pushl
call
cmpl
jle
mov
mov
jmp
mov
movzwl
add
sub
mov
mov
mov
movzwl
add
sub
xor
mov
mov
mov
cmpl
jge
mov
jmp
mov
mov
mov
movzwl
add
mov
mov
add
mov
mov
imul
mov
cmpw
jge
movzwl
mov
jmp
movzwl
sub
sub
mov
sub
mov
mov
mov
cmpw
jne
mov
and
movzwl
and
push
movzwl
or
or
push
pushl
mov
or
push
mov
sub
push
mov
sub
push
movzwl
push
movzwl
xor
sub
push
pushl
mov
xor
push
call
mov
test
je
mov
mov
jmp
jmp
mov
xor
mov
cmp
je
movzbl
jmp
movzbl
and
sub
mov
xor
mov
mov
movzbl
add
add
mov
mov
mov
mov
xor
movzbl
sub
movzwl
cmp
jne
mov
jmp
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzwl
mov
movzwl
mov
shl
movzbl
cmp
jle
mov
jmp
mov
mov
movzbl
or
imul
mov
mov
test
je
push
mov
movzbl
and
movzbl
sub
push
call
cmp
jne
movzbl
mov
jmp
mov
xor
mov
mov
shl
mov
cmp
jne
mov
mov
jmp
movzbl
movzbl
and
add
mov
xor
mov
mov
and
mov
sub
mov
mov
movzbl
add
mov
mov
mov
movzbl
mov
xor
div
mov
mov
test
je
movzbl
mov
jmp
movzwl
movzbl
xor
add
mov
mov
add
mov
movzwl
movzbl
sub
cmp
je
movl
mov
mov
cmpl
jle
mov
mov
jmp
mov
add
mov
cmpb
jle
mov
jmp
movzbl
mov
mov
xor
divl
mov
cmpb
jge
mov
mov
jmp
mov
movzbl
xor
sub
mov
movzbl
mov
mov
movzbl
sub
mov
cmpl
je
movzbl
jmp
movzbl
or
add
mov
add
mov
mov
imul
sub
mov
cmpb
jge
mov
mov
jmp
mov
movzbl
and
mov
add
mov
movzbl
and
mov
cmpl
je
mov
mov
jmp
movzbl
add
sub
mov
sub
mov
mov
and
mov
imul
mov
jmp
movzbl
shl
mov
cmpb
jle
mov
mov
jmp
movzbl
movzbl
xor
sub
mov
xor
mov
mov
mov
xor
div
mov
cmpb
jle
push
call
mov
mov
mov
mov
mov
cmp
jge
movzbl
jmp
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzbl
mov
shr
mov
mov
add
mov
mov
or
mov
mov
shr
mov
mov
add
add
movzbl
mov
mov
cmp
jge
mov
mov
jmp
mov
imul
mov
cmpl
je
mov
jmp
mov
sub
mov
cmp
jle
mov
mov
jmp
mov
sub
mov
cmp
jne
mov
mov
jmp
test
jne
push
push
call
mov
mov
add
mov
mov
add
mov
cmp
jge
mov
mov
jmp
mov
sub
movzbl
movzbl
mov
mov
shl
mov
cmpb
jle
mov
mov
jmp
mov
test
jne
push
movzbl
push
call
mov
mov
xor
divl
mov
cmp
jne
movzbl
jmp
mov
movzbl
imul
movzbl
sub
mov
cmp
je
mov
mov
jmp
mov
sub
mov
cmpb
jle
mov
mov
jmp
movzbl
xor
divl
mov
cmp
jle
movzbl
jmp
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shr
movzbl
cmp
jne
mov
mov
jmp
mov
shr
movzwl
cmp
jle
mov
xor
push
mov
imul
mov
sub
push
call
cmp
jle
mov
mov
jmp
mov
movzwl
cmp
jne
mov
mov
jmp
mov
or
mov
cmp
jle
mov
jmp
movzbl
imul
mov
sub
movzwl
cmp
jge
mov
mov
jmp
mov
shr
movzwl
cmp
jne
call
cmpb
jne
call
movzwl
mov
add
movzwl
mov
movzwl
mov
mov
xor
div
mov
cmp
je
mov
and
or
push
movzbl
imul
add
push
mov
xor
movzbl
imul
push
mov
xor
or
push
call
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
or
movzbl
cmp
je
mov
mov
jmp
mov
or
mov
imul
movzbl
mov
xor
mov
mov
movzbl
cmp
je
mov
jmp
mov
or
add
mov
mov
mov
imul
mov
sub
mov
cmpw
jne
mov
jmp
mov
movzwl
add
sub
mov
sub
mov
movzwl
or
movzbl
mov
test
je
movzwl
mov
jmp
movl
mov
movzwl
xor
sub
cmp
je
movl
mov
shl
mov
cmpw
jge
movzwl
mov
jmp
mov
mov
cmpl
je
movzwl
mov
jmp
mov
add
mov
cmpw
jge
mov
mov
jmp
mov
mov
mov
movzwl
sub
sub
cmp
jge
mov
mov
movzwl
imul
movzwl
add
mov
movzwl
or
movzwl
imul
mov
movzbl
shl
mov
movzbl
shl
mov
mov
test
je
movzbl
sub
push
call
movzwl
and
mov
movzbl
mov
mov
movzbl
imul
movzwl
sub
mov
mov
movzwl
sub
sub
mov
add
mov
movzbl
mov
xor
div
mov
mov
test
je
movzwl
mov
jmp
movzbl
movzwl
add
sub
mov
add
mov
movzwl
add
mov
mov
movzwl
and
sub
mov
sub
mov
movzwl
mov
xor
div
mov
jmp
mov
mov
mov
mov
mov
add
mov
mov
movzbl
or
add
mov
movzbl
shl
mov
mov
shr
mov
mov
movzbl
imul
mov
movzbl
shl
mov
movzbl
shr
mov
cmpl
jle
movzbl
jmp
mov
add
movzbl
movzwl
sub
add
add
mov
mov
mov
cmpl
jle
mov
mov
jmp
mov
movzbl
shl
mov
movzbl
xor
divl
mov
cmpb
jle
mov
mov
jmp
mov
add
mov
mov
xor
sub
mov
movzwl
movzbl
sub
sub
mov
movzbl
mov
add
mov
mov
sub
mov
cmpw
jge
movzbl
mov
jmp
movzbl
movzwl
or
add
mov
sub
mov
movzbl
imul
add
mov
movzwl
or
add
mov
mov
shr
mov
mov
add
add
mov
cmp
jne
mov
mov
movzwl
and
and
mov
mov
test
jne
movzwl
jmp
movzwl
shl
mov
mov
or
movzwl
sub
mov
mov
test
je
movzwl
jmp
mov
shl
mov
movzwl
add
sub
mov
cmp
jne
mov
mov
movzwl
or
mov
mov
test
jne
movzwl
jmp
movzbl
mov
movzbl
movzwl
sub
add
mov
movzbl
mov
cmpb
jge
mov
jmp
movzwl
movzwl
and
mov
cmpw
jge
movzwl
jmp
mov
sub
mov
cmpl
jge
movzbl
jmp
movzwl
movzbl
sub
add
cmp
je
mov
mov
mov
movzwl
add
mov
cmpw
jne
movzwl
mov
jmp
movzwl
mov
cmpw
jle
movzwl
mov
jmp
movzwl
movzwl
sub
sub
mov
sub
mov
movzwl
shl
mov
mov
test
je
movzbl
jmp
movzwl
movzbl
imul
add
mov
add
mov
movzwl
mov
cmpw
jle
movzbl
mov
jmp
jmp
mov
mov
movzbl
or
mov
add
mov
cmpb
jne
movzbl
jmp
movzbl
or
movzbl
imul
mov
mov
shr
mov
movzbl
mov
cmpb
je
mov
add
movzbl
add
push
call
cmpl
je
movzwl
jmp
mov
movzbl
xor
mov
movzbl
mov
mov
mov
xor
mov
cmpb
jge
movzbl
mov
jmp
movzwl
movzbl
xor
add
mov
add
mov
mov
movzbl
add
movzwl
sub
mov
cmpw
je
mov
mov
jmp
movzbl
movzwl
or
sub
mov
add
mov
mov
or
mov
cmpw
jne
movzbl
mov
jmp
movzbl
imul
add
mov
sub
mov
mov
mov
cmpw
jle
call
movzwl
add
mov
jmp
mov
mov
xor
div
movzbl
cmp
jne
mov
movzwl
xor
push
call
cmp
jge
mov
mov
jmp
mov
movzwl
add
sub
mov
xor
mov
movzwl
shl
mov
mov
or
mov
mov
mov
sub
add
movzbl
mov
sub
shr
mov
mov
xor
mov
mov
mov
mov
mov
movzwl
mov
xor
div
movzbl
cmpw
jle
movzwl
mov
jmp
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzbl
mov
movzbl
cmp
jle
mov
jmp
mov
xor
mov
add
movzwl
mov
movzbl
mov
mov
mov
shr
movzbl
cmp
jge
movzwl
push
mov
or
push
call
mov
test
je
movzwl
mov
jmp
movzwl
add
mov
mov
mov
mov
test
jne
mov
jmp
mov
test
jne
push
movzwl
push
push
push
call
mov
mov
mov
mov
imul
mov
sub
movzbl
mov
movzwl
cmpw
jne
mov
jmp
mov
test
jne
call
movzbl
movzwl
movzbl
cmp
jle
mov
mov
jmp
mov
and
sub
mov
mov
imul
mov
cmpl
jne
mov
add
add
push
call
movzwl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
movzwl
mov
imul
add
push
mov
add
sub
push
mov
imul
add
push
call
movzwl
mov
test
je
mov
and
push
call
mov
add
movzwl
mov
mov
shl
mov
mov
xor
add
xor
mov
and
and
mov
mov
test
je
pushl
call
mov
test
je
mov
mov
jmp
mov
xor
add
mov
mov
movzbl
imul
sub
mov
mov
movzwl
mov
or
sub
push
mov
or
add
push
movzbl
sub
add
push
call
mov
mov
test
je
push
mov
xor
mov
add
push
mov
xor
push
mov
movzbl
xor
add
push
call
mov
xor
sub
mov
add
mov
movzbl
add
mov
cmpb
je
movzbl
mov
jmp
mov
and
mov
add
movzwl
sub
mov
mov
and
movzbl
or
movzwl
cmp
je
mov
mov
jmp
mov
or
sub
mov
add
mov
movzbl
sub
mov
cmp
jle
mov
mov
jmp
mov
or
sub
mov
sub
mov
mov
or
and
mov
mov
test
je
mov
jmp
movzbl
imul
mov
movzwl
cmp
je
movb
mov
sub
mov
cmpb
jne
movzbl
mov
jmp
movzbl
sub
mov
mov
test
je
movzbl
xor
push
movzbl
movzbl
imul
push
call
movzbl
movzbl
imul
sub
mov
sub
mov
jmp
mov
xor
sub
mov
sub
mov
mov
mov
cmp
je
mov
mov
jmp
mov
mov
add
mov
movzbl
or
add
sub
mov
mov
shr
mov
cmpl
je
mov
mov
jmp
mov
sub
add
push
movzwl
imul
push
mov
or
sub
push
call
mov
mov
test
je
mov
sub
push
movzwl
push
movzbl
push
call
mov
or
sub
mov
mov
add
movzwl
movzbl
or
sub
mov
mov
sub
mov
mov
add
sub
mov
mov
mov
movzbl
and
add
mov
mov
xor
mov
cmp
jge
movzbl
jmp
mov
and
sub
mov
mov
mov
add
mov
or
sub
add
mov
movzbl
sub
mov
movzbl
add
add
cmp
je
movw
movzwl
or
mov
movzwl
shr
mov
cmpw
je
movzwl
jmp
movzwl
imul
add
mov
cmpb
jne
mov
jmp
mov
movzwl
imul
add
mov
mov
add
mov
movzbl
add
add
sub
mov
movzbl
shl
mov
movzbl
movzwl
imul
add
mov
mov
xor
divl
mov
movzwl
add
sub
mov
movzbl
movzwl
sub
sub
cmp
je
mov
mov
movzwl
shl
mov
mov
shr
mov
cmpl
jge
movzwl
mov
jmp
mov
imul
mov
mov
shl
mov
shr
or
mov
mov
imul
mov
add
mov
mov
movzwl
and
mov
movzbl
xor
mov
add
mov
movzwl
xor
mov
add
mov
cmpw
jne
movzwl
jmp
movzwl
imul
sub
mov
add
mov
mov
xor
movzwl
or
mov
jmp
mov
xor
mov
mov
cmp
jne
movl
mov
or
mov
mov
and
or
mov
cmpl
jne
movzwl
jmp
mov
and
mov
cmpw
je
mov
jmp
mov
mov
mov
and
add
mov
mov
sub
movzwl
sub
add
add
mov
mov
xor
divl
mov
mov
movzwl
xor
sub
mov
mov
mov
sub
add
sub
mov
mov
add
mov
cmpw
jle
mov
mov
jmp
mov
add
movzwl
sub
add
mov
mov
sub
mov
movzwl
xor
mov
sub
mov
movzwl
mov
mov
sub
mov
mov
sub
add
mov
mov
mov
add
mov
imul
add
sub
mov
movzwl
sub
mov
mov
xor
sub
mov
sub
mov
mov
mov
add
mov
mov
and
mov
mov
and
add
mov
xor
mov
mov
add
mov
cmpl
jne
mov
mov
jmp
mov
imul
add
push
mov
movzwl
or
add
push
mov
imul
sub
push
push
call
mov
mov
add
mov
cmpl
jle
mov
add
push
call
cmpl
jne
mov
mov
jmp
mov
or
sub
mov
sub
mov
mov
imul
sub
mov
mov
test
jne
movzwl
jmp
mov
movzbl
add
sub
mov
add
mov
movzbl
xor
divl
mov
mov
movzwl
sub
add
mov
sub
mov
mov
shr
mov
jmp
movzbl
and
mov
imul
movzwl
cmpb
je
mov
jmp
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
xor
movzbl
cmp
jne
mov
mov
jmp
mov
add
movzbl
cmp
jne
mov
mov
jmp
mov
movzbl
cmp
jle
mov
mov
jmp
mov
or
mov
imul
mov
cmp
jne
mov
mov
jmp
mov
test
jne
push
call
movzbl
mov
and
movzbl
cmp
jge
mov
mov
jmp
mov
shr
mov
mov
and
mov
sub
mov
mov
test
je
movzbl
mov
jmp
mov
test
jne
push
pushl
pushl
push
call
mov
movzbl
imul
imul
movzbl
cmpb
jle
mov
mov
jmp
mov
movzbl
movzbl
sub
movzbl
cmp
jne
mov
jmp
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
movzbl
mov
xor
or
movzwl
mov
imul
mov
sub
movzwl
mov
shr
movzwl
cmp
jge
mov
jmp
mov
or
mov
sub
mov
cmp
jne
push
call
movzbl
mov
add
movzwl
mov
xor
divl
movzwl
cmp
jne
mov
mov
jmp
mov
sub
mov
cmpl
jne
call
movzwl
mov
shr
mov
mov
and
mov
sub
movzwl
cmpl
je
mov
jmp
mov
xor
mov
mov
movzwl
cmpl
jne
mov
jmp
mov
movzwl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzwl
mov
shr
movzwl
cmp
jne
mov
jmp
mov
shr
movzbl
cmp
je
mov
mov
jmp
mov
add
movzwl
mov
test
jne
mov
jmp
mov
and
mov
mov
and
add
mov
xor
mov
mov
shl
movzwl
cmp
jne
mov
jmp
mov
and
add
mov
xor
mov
mov
add
add
movzwl
cmp
jle
mov
jmp
mov
xor
add
mov
mov
mov
mov
xor
or
mov
mov
test
je
mov
jmp
mov
sub
sub
mov
movzbl
sub
mov
cmpb
jle
movzbl
mov
jmp
mov
add
sub
cmp
je
movb
movzbl
mov
movzwl
and
mov
cmpw
jle
movzwl
mov
jmp
movzwl
movzbl
sub
add
mov
movzbl
mov
mov
movzbl
sub
mov
cmpb
jne
movzbl
jmp
movzbl
movzwl
and
add
mov
add
mov
mov
mov
movzbl
xor
add
mov
add
mov
movzwl
sub
mov
movzwl
sub
sub
mov
sub
mov
movzwl
xor
mov
jmp
mov
mov
mov
xor
mov
mov
movzbl
cmpb
jge
movzbl
movzbl
xor
push
movzbl
xor
push
movzbl
imul
push
movzbl
sub
push
push
call
cmpb
jle
mov
jmp
mov
mov
mov
mov
and
sub
mov
cmp
je
movzbl
mov
jmp
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
movzbl
mov
mov
xor
sub
movzbl
mov
sub
mov
cmpw
je
mov
jmp
mov
mov
mov
mov
cmpb
jle
mov
jmp
mov
mov
cmpl
je
mov
mov
jmp
mov
mov
mov
mov
mov
mov
cmpl
jne
movzwl
push
movzbl
push
pushl
push
call
movzbl
mov
xor
mov
mov
and
mov
cmp
jle
mov
mov
jmp
mov
sub
mov
test
jne
movzwl
push
movzwl
push
push
movzwl
push
call
mov
mov
sub
movzbl
mov
test
je
mov
mov
jmp
mov
sub
mov
cmp
jne
mov
jmp
movzwl
xor
divl
movzbl
cmpw
je
mov
mov
jmp
movzbl
mov
pop
pop
pop
mov
pop
ret
jmp
ret
jmp
jmp
jmp
xor
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
cmp
jne
push
call
pop
call
push
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
push
push
call
add
mov
mov
mov
cmpb
jne
inc
mov
mov
cmp
je
cmp
jne
cmpb
jne
inc
mov
mov
cmp
je
cmp
jbe
mov
lea
push
call
testb
je
movzwl
jmp
cmpb
jbe
inc
mov
jmp
push
pop
push
push
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
push
push
call
pop
pop
ret
add
push
add
or
add
pop
add
or
add
adc
add
or
or
or
push
or
or
or
or
add
add
or
or
adc
add
adc
pop
push
or
or
add
add
or
or
adc
or
add
push
push
add
cmp
or
push
sbb
loop
pop
pop
push
mov
imul
fsts
pop
cmp
mov
push
rorl
sub
ret
aam
mov
hlt
add
fs
or
mov
loope
mov
dec
fdivrs
loop
shlb
mov
xchg
int
or
and
or
pop
mov
or
fisubl
push
pop
xchg
or
jno
pop
or
cltd
inc
mov
aam
jb
jp
add
lret
in
data16
or
xor
lret
mov
cltd
pop
loopne
pop
andb
add
dec
test
jbe
popa
pop
int3
mov
lret
ja
push
fwait
pop
and
adc
test
jns
sub
roll
dec
pop
or
arpl
lahf
push
pop
jne
jno
loop
add
jge
push
mov
cmp
adc
and
push
push
mov
repnz
mov
xor
mov
lods
pop
jno
mov
and
lock
insb
jmp
fists
jle
imul
lcall
dec
insb
mov
pop
mov
lea
sbb
dec
in
sbb
imul
jns
ljmp
ds
fidivl
add
and
cltd
test
cmp
ret
ljmp
aam
sub
jmp
or
jno
sub
ret
xchg
dec
inc
pop
stos
shrl
xchg
and
loope
pop
lret
adc
sahf
jns
ljmp
mov
andl
mov
sbb
je
dec
jecxz
dec
pushf
and
shlb
mov
or
inc
int
cmp
adcb
push
sbb
lock
sbb
rcrl
adc
adc
xchg
mov
pop
adc
gs
and
dec
cmp
mov
mov
divl
fistps
inc
fwait
test
es
jbe
pop
test
mov
mov
mov
inc
and
orb
loope
pushf
mov
arpl
bound
adc
dec
xlat
and
sub
nop
sahf
ljmp
loopne
adc
and
loope
movsl
push
mov
mov
push
cltd
test
bnd
and
sti
mov
and
push
push
insb
or
jnp
and
or
jge
test
fadds
in
xor
iret
int3
push
and
sub
mov
push
aam
pusha
adc
cmp
mov
insl
iret
mov
add
sub
ret
shlb
xchg
mov
shr
aad
lret
sub
add
ss
jp
push
and
pop
ret
mov
movsl
mov
sub
mov
sub
aam
in
out
bnd
pop
mov
xor
divb
and
loop
pop
add
lcall
addr16
std
push
jl
xchg
push
xor
addr16
xchg
sub
mov
sub
jl
jecxz
mov
mov
mov
lret
test
sbb
shl
or
in
jmp
lcall
data16
ret
jnp
jmp
ds
stos
mov
mov
mov
aam
pop
fisttpll
dec
ret
mov
lret
cmp
lods
nop/reserved
sbb
jp
cltd
add
cmp
jb
jne
cltd
sub
mov
add
push
pop
lods
add
data16
cld
ret
jecxz
std
rcrb
lcall
cmp
loop
ds
cli
aad
loopne
ds
imul
push
cwtl
ljmp
enter
ret
mov
out
jecxz
pushl
cmpsl
push
cmpsl
loopne
ds
ljmp
ret
sub
data16
in
jecxz
in
imul
out
jp
cltd
cwtl
ljmp
cs
and
pop
ret
pusha
xor
enter
sbb
sub
shll
sub
cwtl
test
repnz
lret
and
daa
int
call
push
into
loopne
ds
lods
das
rorl
xor
sub
ret
in
push
roll
movb
inc
cmpl
shl
outsb
data16
in
jecxz
mov
stos
sub
xchg
mov
stos
int
sub
dec
data16
cmp
test
jns
leave
push
mov
lods
adc
mov
insl
data16
in
jecxz
mov
dec
data16
cmp
test
jns
adc
lahf
in
jecxz
insl
data16
in
jecxz
mov
xchg
mov
daa
cltd
stos
sub
lcall
sbb
imul
jns
nop
imul
cltd
test
jl
cltd
stc
inc
out
jecxz
mov
xchg
mov
stos
or
xchg
lcall
mov
xchg
imul
shrb
mov
test
cld
mov
test
or
jb
jp
stos
cli
jns
cltd
ret
sub
or
cltd
stc
inc
in
jecxz
rorl
in
mulb
ds
test
sub
ret
ds
jns
leave
cli
aad
push
loope
ds
cli
aad
push
loope
shll
ja
test
mov
jmp
and
jae
sub
ret
and
in
jecxz
aaa
pop
add
and
fwait
test
and
cmp
xor
dec
push
jmp
mov
jns
xchg
mov
aas
cltd
test
jmp
push
mov
ds
and
fs
aam
pop
frstor
mov
or
push
orl
mov
clc
cmp
loopne
push
cltd
push
mov
mov
stc
jns
push
sbb
cmpsl
ret
test
sbb
ret
sub
cltd
test
xchg
into
inc
sbbl
lret
js
divb
jecxz
out
repz
jns
mov
mov
arpl
lahf
leave
xchg
fldt
lea
in
out
ljmp
push
addr16
daa
mov
fildll
xchg
fdivp
jae
cwtl
inc
sbb
mov
mov
xchg
ret
inc
sub
cli
fcmovne
cmp
dec
data16
imul
shll
cmp
mov
xchg
std
insl
xor
idivl
cltd
test
int3
jne
pop
sbb
adc
xchg
push
mov
ret
pop
push
mov
imul
jno
stos
dec
es
jns
cmp
cmp
sub
sub
mov
jge
punpckhbw
ds
addb
inc
out
xchg
adc
dec
leave
cmpsb
adc
mov
lds
cmpsb
mov
popa
out
enter
int
push
cmc
test
push
push
lock
in
xchg
subb
inc
mov
jecxz
ja
std
jg
mov
das
jae
call
cmp
test
jns
lret
nop
mov
lds
mov
rcrb
in
xchg
xchg
xchg
xchg
or
test
or
loop
sahf
xchg
dec
mov
xchg
inc
iret
enter
cmpsb
add
sti
dec
addb
dec
sahf
ret
insl
int
addr16
jmp
inc
mov
xchg
dec
push
test
jns
mov
adc
fidivl
stos
nop
adc
pop
mov
mov
pop
in
fimuls
cmpsl
mov
inc
xchg
lods
test
subl
pop
xchg
cmpsl
lea
mov
stc
pop
mov
int
out
jecxz
ds
test
jns
cltd
test
jns
cltd
test
jns
cltd
test
jns
cltd
test
jns
cltd
test
jns
cltd
test
jns
cltd
test
jns
cltd
test
jns
cltd
test
jns
cltd
test
jns
cltd
test
jns
cltd
test
jns
cltd
test
jns
cltd
test
jns
cltd
test
jns
cltd
test
jns
cltd
test
jns
cltd
test
jns
cltd
test
jns
cltd
test
jns
cltd
test
jns
cltd
test
jns
cltd
test
jns
cltd
test
jns
cltd
test
jns
cltd
test
jns
cltd
test
jns
cltd
test
jns
cltd
test
jns
cltd
test
jns
cltd
test
jns
cltd
test
jns
cltd
test
jns
cltd
test
jns
cltd
test
jns
cltd
test
int3
fwait
mov
imull
ficoml
mov
aad
aam
mov
lods
fwait
lods
ret
xchg
mov
int
xor
add
fists
or
mov
fldenv
scas
out
cmp
cltd
sahf
imull
cmp
lahf
mov
mull
mov
outsb
decl
rorl
pop
or
in
push
filds
jbe
je
stos
xor
stos
jg
push
or
nop
xchg
out
aam
aaa
mov
loopne
nop
lahf
lret
xchg
xchg
in
pop
cmp
mov
lods
rol
mov
iret
nop
loop
lea
insl
fwait
insb
inc
inc
test
adc
dec
shl
dec
pusha
push
shlb
popf
mov
dec
fadd
or
orb
jecxz
jae
rcrb
loope
jae
mov
mov
add
pop
xchg
pop
xor
mov
fisttpl
mov
dec
je
aaa
stos
sub
pop
mov
test
push
adcl
push
and
inc
bts
out
mov
pop
xchg
xchg
movsl
das
push
mov
add
or
rorb
imul
mov
cltd
cmp
push
aaa
fisttpll
enter
inc
or
nop
ljmp
mov
adc
lds
mov
mov
jecxz
lret
fsubs
mov
jno
shlb
pop
xchg
inc
sbb
scas
push
mov
and
adc
sbb
stc
pop
mov
xchg
and
push
pushf
sahf
mov
shlb
es
pop
rcll
movsb
std
xchg
icebp
stos
lods
repnz
out
insb
sti
sbb
or
jae
lods
pusha
jmp
sahf
cwtl
pop
lods
mov
mov
jecxz
ds
xchg
cwtl
push
repnz
fsubl
lds
push
gs
pop
ja
cwtl
mov
movsl
push
out
popa
xchg
ret
pusha
jp
cltd
div
mov
das
pop
ret
xor
test
ja
out
xor
out
xchg
cs
imul
jle
test
adc
enter
imul
sub
in
and
fcomi
mov
cmc
sti
pop
popa
aas
mov
orb
ds
sub
sbb
cmp
int3
inc
mov
sbb
mov
sub
add
push
dec
daa
imul
dec
bound
dec
repz
mov
mov
pop
mov
push
jae
inc
call
jecxz
mov
mov
mov
or
ficomps
sub
out
xor
testl
mov
mov
imul
imul
xchg
aas
ljmp
jl
lret
cmpsl
jmp
adc
cmp
out
xor
or
sbb
pop
inc
cli
aad
dec
or
mov
and
mov
outsb
cltd
push
push
sub
ljmp
fimull
std
xchg
inc
mov
mov
sti
scas
add
arpl
dec
inc
cmp
aas
lcall
movsl
in
orw
mov
push
pop
hlt
fnsave
outsb
bnd
fwait
mov
xlat
mov
call
xchg
or
mov
sub
mov
jmp
and
cmp
cmc
lds
aas
mov
call
repz
pop
jnp
clc
out
xchg
lret
mov
mov
sbb
in
cmc
lock
ljmp
mov
lds
fnsave
mov
mov
lret
lret
cmpsl
xchg
adc
cmp
popa
xor
rorl
xchg
and
or
lods
outsb
lret
cmpsb
mov
cwtl
push
jo
mov
bound
nop
leave
add
fistpl
js
mov
out
ljmp
sub
adc
push
and
lahf
xchg
push
lock
arpl
daa
inc
dec
pop
adc
cwtl
mov
test
rcll
cmp
cmovnp
imul
adc
pop
lods
std
aaa
arpl
mov
push
es
jne
inc
sub
inc
lret
outsl
lock
mov
push
mov
dec
lock
push
mov
push
in
aad
orl
imul
xchg
mov
mov
sub
int3
sbb
outsb
or
ret
sbb
in
dec
shll
and
icebp
gs
dec
mov
mov
sbb
lret
dec
fwait
dec
push
xor
mov
push
sub
lea
xchg
jb
sbb
in
add
dec
cmc
call
not
rcrb
nop
pop
pop
push
imul
sbb
pushf
jbe
icebp
std
inc
clc
or
rcr
aaa
mov
sub
inc
cmp
aaa
lahf
sub
sarb
pop
lds
cmp
out
xor
out
jp
fstpl
in
push
daa
or
test
mov
xchg
insb
sbb
sbb
pop
cli
je
shlb
lcall
in
shrl
sub
lea
das
ljmp
cmp
lds
jg
mov
outsb
pop
xchg
popf
dec
jmp
cmp
iret
out
rcrl
mov
lret
push
push
sbb
inc
dec
mov
cmpsb
cmpsl
leave
sbb
dec
in
outsl
pop
jp
outsb
mov
dec
or
pop
fisubrs
sub
mov
xchg
mov
cli
fisubl
sub
pushf
push
inc
lret
notb
dec
dec
les
jns
mov
push
mov
xor
xchg
cmp
data16
push
mov
jns
mov
mov
into
xor
jmp
push
jle
mov
mov
sub
inc
mov
cs
inc
loop
mov
roll
ds
jmp
cs
sbb
test
jno
cmp
rcrl
das
mov
gs
mov
cwtl
pop
shll
scas
jecxz
into
test
das
cmpb
or
shrl
pop
daa
repnz
scas
xor
movsb
and
sbb
fisubrl
dec
leave
ret
inc
test
push
xchg
xchg
jp
loop
imul
add
sbb
sub
das
data16
adc
jge
mov
scas
mov
xor
outsl
cmp
insl
loop
or
mov
cmp
add
imul
push
push
ds
int
fsubl
lcall
outsb
xor
xchg
inc
pop
add
ss
adc
rorb
pushl
add
sar
add
sbb
sti
adc
xchg
add
or
push
mov
inc
pop
fistpl
dec
pop
fbstp
hlt
fxch
cmpsb
dec
or
adc
fsubrl
enter
in
dec
mov
cld
adc
mov
sub
js
jb
test
sub
mov
jmp
std
and
outsb
repz
pop
shl
mov
and
imul
loope
ss
out
dec
psubw
mov
mov
adc
add
push
lcall
adc
pop
pop
mov
out
out
aas
xchg
andl
andl
pushf
lcall
inc
data16
test
or
nop
daa
imul
cmpsb
cmpsl
sub
cmp
ja
test
ja
mov
stos
jns
jg
mov
gs
fcoml
jg
ds
decl
push
scas
xchg
test
xchg
cmp
xchg
mov
arpl
xchg
mov
in
adc
outsl
jns
das
int3
cmp
rol
outsl
jb
mov
sbb
lds
mov
or
push
mov
ficoms
out
daa
jecxz
movd
hlt
in
and
mov
dec
and
pop
pop
fidivrl
jb
jns
inc
pop
lret
cmp
add
inc
and
lods
mov
mov
fneni(8087
jle
jne
jmp
dec
ljmp
push
push
jmp
lret
ss
adcl
stos
sti
cmp
xor
xchg
lcall
mov
cltd
adc
xchg
stc
shll
inc
cmp
pop
scas
icebp
jle
sub
movsl
xchg
stos
sub
mov
jmp
cmp
xchg
rorl
hlt
jge
dec
in
pop
pushf
ret
sbb
mov
test
or
pusha
mov
cmpsl
shll
mov
sub
dec
or
loope
jbe
cli
push
xor
fcomps
push
or
mov
flds
sbb
jns
test
pop
mov
inc
jge
cmp
jp
out
test
call
sub
or
mov
in
and
out
add
sub
aad
inc
mov
fisubrl
fcompl
jecxz
fisubs
lds
filds
lret
sub
mov
sbbl
dec
adc
or
lret
pop
sahf
mov
js
jg
cmpsl
add
mov
cmpsb
mov
lahf
or
shlb
mov
jecxz
shll
and
xor
xor
cmp
sub
flds
stos
outsb
and
ret
cwtl
xor
mov
mov
jo
int
jg
sub
hlt
fimuls
xchg
add
int3
rolb
out
ret
out
mov
lods
or
mov
and
sub
nop
adc
mov
fisubrs
mov
push
shlb
jg
xchg
push
cmp
mov
push
xor
push
lcall
movsl
test
jge
lahf
fwait
lds
cltd
push
sahf
mov
mov
fsubrl
push
or
push
dec
pop
test
cmpsl
scas
sub
loope
cmpb
sahf
mov
fildl
outsb
je
sub
mov
cltd
test
sbb
sbb
lds
or
mov
dec
mov
pop
imul
call
sbb
mov
rcrl
mov
dec
dec
aad
xor
or
inc
out
jne
adc
adc
out
aas
dec
mov
push
mov
lret
out
subb
cmpsb
push
pop
pusha
divl
sub
sahf
mov
sbb
rcrl
sti
add
lahf
loop
mov
jnp
hlt
add
xchg
add
push
aaa
or
pop
inc
fcmovnbe
mov
popa
dec
test
outsb
lods
in
loop
jge
jns
adc
push
loop
push
das
mov
mov
in
inc
mov
mov
data16
lods
sahf
xchg
xor
imul
imul
or
push
lret
push
push
stos
push
cmpsb
orb
cwtl
jecxz
xchg
cmpsl
mov
dec
jae
ss
rcr
call
xchg
idivb
popf
adc
jae
mov
jecxz
inc
js
xlat
inc
xchg
sahf
mov
das
in
rcr
stc
inc
mov
js
test
sarb
xchg
iret
imul
xchg
arpl
dec
inc
xchg
mov
adc
cmp
insl
divb
mov
push
fists
pop
fsub
int3
out
and
loopne
add
cld
cmp
lahf
mov
adc
arpl
mov
jbe
sbbb
xorb
sub
dec
loop
sti
inc
cmp
sub
movsl
loopne
das
and
and
fadds
out
fldt
or
xor
lahf
stos
loopne
push
lock
or
jae
cmp
gs
pushf
das
push
sub
push
pop
rclb
lcall
cmp
xor
loope
xlat
and
sub
push
cs
fbld
xchg
mov
push
out
ja
add
push
xor
or
mov
mov
and
mov
pop
push
into
inc
xchg
in
sti
cmpsb
push
popa
mov
fiaddl
mov
adc
in
pop
push
mov
dec
mov
addb
dec
adc
movsl
ret
cmp
dec
xchg
mov
popa
xor
iret
jecxz
sub
std
shll
and
loopne
ljmp
repnz
xchg
push
cmp
fs
stc
jnp
int
andb
adc
mov
hlt
out
jne
xchg
xor
add
cwtl
lret
scas
popf
push
jle
lock
mov
jmp
jmp
popf
out
imul
push
push
xor
out
int3
push
rcrl
mov
mov
stos
add
mov
pushf
jae
or
dec
pop
lcall
loope
dec
in
daa
mov
jb
xor
roll
insl
ret
jns
cli
jl
xchg
mov
in
and
daa
repz
add
fwait
dec
xor
ret
mov
insb
gs
stos
sub
shld
jno
jl
js
mov
and
fdivrl
sbb
jnp
mov
sub
lods
lret
in
insl
push
orl
push
adc
sti
inc
sbb
sti
xchg
push
xor
out
cmp
ret
hlt
jl
fwait
mov
loop
pushf
imul
ret
scas
jg
out
and
lds
and
aas
sbb
jo
lcall
icebp
lods
cltd
adc
shl
fimull
test
mov
fucom
outsl
stos
subb
in
movsl
jle
ja
aas
cmp
jp
aam
pop
adc
jge
xor
sahf
push
inc
mov
stc
jle
jno
mov
dec
push
rcrl
pop
inc
js
or
mov
cltd
insb
jnp
lea
xor
orb
aam
xor
sub
xchg
dec
testl
add
ss
adc
in
jno
pop
insb
insb
in
jns
cmp
or
push
or
out
and
daa
mov
incl
fwait
add
sar
je
lea
pop
pop
mov
mov
sbb
sbb
sub
dec
das
test
in
sbb
add
sbb
jne
testl
push
jl
ss
mov
popf
mov
inc
test
jae
or
pop
nop
push
push
dec
int3
mov
loop
arpl
ljmp
shrl
js
mov
add
imull
dec
push
stc
jmp
cmp
cmp
adc
jae
ffreep
xor
sub
jmp
mov
orb
lds
outsb
nop
aas
sti
inc
fstl
negb
lret
push
fidivrs
stc
or
std
jg
lods
push
sbb
and
pop
cmp
sahf
add
aaa
xchg
lods
sub
sbb
mov
fisubs
lcall
sar
in
mov
sbb
leave
ret
loopne
sub
ljmp
mov
popl
lahf
or
frstor
xchg
xchg
sbb
rorl
andl
jmp
sbb
popf
pop
rcr
jecxz
cmp
test
in
add
inc
mov
cltd
icebp
incb
mov
push
sub
mov
push
js
adcl
out
mov
cmp
out
inc
leave
mov
sub
and
mov
add
outsb
sahf
inc
jmp
mov
clc
sti
clc
cwtl
ljmp
jmp
jecxz
pop
sti
ret
cmpsb
in
cmp
out
ja
cli
pop
test
addr16
rorl
es
bound
sbb
dec
jbe
jns
inc
pop
shrl
pop
push
enter
mov
jae
sti
sahf
cmp
ss
add
in
popa
lcall
pop
lret
mov
cmp
sub
or
mov
sub
jg
jno
daa
xchg
sub
mov
jo
lea
imul
jne
cltd
movb
shrl
mov
mov
adc
stos
lock
andl
or
addb
out
in
xor
and
punpckhbw
aas
inc
jle
jle
das
int
pop
lock
movsb
shrb
daa
xchg
sahf
add
nop
aam
jns
push
fimuls
add
pop
cmp
push
pop
aad
and
jl
xchg
into
dec
cmp
mov
lahf
sbbl
cwtl
out
lods
adc
mov
jmp
mov
mov
lret
mov
cmp
out
pop
cmpsl
lret
ret
or
jecxz
push
mov
dec
lea
aam
push
insl
or
push
aaa
mov
das
sbb
movsb
decb
push
or
xchg
in
nop
data16
xor
fs
iret
stc
int3
push
insb
cld
xor
insb
dec
call
decl
out
or
loope
xor
jbe
jb
jno
mov
jb
cmp
nop
stos
push
inc
cmp
testb
in
pop
push
cwtl
xchg
sbb
mov
or
int
jns
fiadds
and
jge
mov
es
cwtl
fistl
shrl
fucomip
dec
adc
mov
dec
mov
out
jg
mov
cmp
repz
test
mov
xchg
mov
push
pop
xchg
sub
imul
jg
rolb
push
fiadds
cmp
out
jecxz
adc
popf
dec
in
in
adc
xlat
sbb
adc
add
in
fisttps
ds
xchg
mov
mov
inc
jb
jno
movsl
jmp
mov
jns
sub
sbb
aad
inc
vmovdqa
jno
push
jmp
ret
pop
xchg
push
bound
mov
stc
push
movb
lcall
cmp
mov
bound
mov
jl
cmpb
or
mov
roll
movl
push
mov
js
xrelease
fildl
fsub
test
test
cltd
imul
shlb
sub
pusha
mov
insl
movsl
push
sbb
mov
faddl
lods
jmp
insl
xor
fisttpll
mull
pop
cmpsl
adcb
push
push
sbb
push
into
out
daa
adc
lahf
pop
jmp
mov
fstps
xchg
mov
and
repz
daa
fnstsw
mov
push
out
xchg
test
les
ret
add
scas
xchg
push
loopne
mov
sbb
pop
xlat
dec
in
cmovg
mul
sar
mov
loopne
pop
rol
adc
sbb
xor
mov
mov
outsl
jmp
mov
pop
jnp
iret
sbb
test
push
inc
fisttps
je
mov
xchg
call
ja
inc
lgs
jg
cmpsb
push
adc
xor
cli
add
or
and
adc
sub
mov
xlat
push
dec
into
out
adc
in
sti
ds
inc
add
js
sub
inc
out
ljmp
test
out
leave
sbb
sbb
rol
dec
and
lahf
push
xchg
or
inc
mov
std
mov
inc
push
or
lcall
sub
or
mov
in
out
pushf
adc
lods
lods
add
and
push
jae
fcoml
xor
out
xlat
jg
popa
stos
add
aaa
push
lahf
push
dec
scas
pop
leave
repnz
cmpsl
adcb
fiaddl
sub
out
das
and
dec
int
scas
std
je
xchg
jnp
sbb
xchg
clc
xchg
out
mov
push
fidivrl
test
in
outsl
cmp
mov
xchg
mov
push
insb
out
mov
cli
fmul
inc
dec
fadd
icebp
jmp
cltd
adc
pop
jge
in
mov
sbb
loop
push
mov
js
out
mov
xchg
push
cmp
mov
add
xor
clc
cmp
lods
jns
push
pop
dec
mov
in
fwait
add
jns
dec
mov
nop
push
xchg
mov
pop
out
fiadds
adc
xchg
jnp
jb
mov
arpl
mov
push
pusha
jmp
pusha
dec
jns
lea
insb
negb
js
cmpsl
push
xchg
jle
mov
dec
fcmovu
and
inc
clc
jno
jmp
fsubrs
sbb
sbb
mov
loop
inc
push
or
ja
test
enter
xchg
add
push
in
mov
fs
xchg
repz
mov
xlat
xlat
mov
jo
jbe
call
pop
jbe
stc
out
je
adc
xor
fisttps
jmp
jle
dec
out
sbb
fwait
into
inc
stos
aad
jp
sahf
jno
gs
sbb
jno
and
push
or
xor
push
jnp
xchg
jo,pt
cmp
mov
jno
in
mov
inc
jno
xchg
test
arpl
repnz
push
pop
in
sbbb
aas
es
jnp
push
testl
arpl
mov
jmp
sub
and
cmp
out
jl
mov
jp
mov
adc
andl
adc
mov
fmulp
fmul
into
dec
push
loopne
add
and
jns
hlt
push
cmp
cmc
dec
jae
cmp
cs
add
fnsave
add
mov
ja
lcall
pop
and
lods
int3
jne
pop
ljmp
cmp
and
ffree
sub
in
jg
push
push
cmp
and
cmp
or
jae
stc
mov
icebp
dec
push
out
xor
pusha
sub
rclb
xor
and
fcom
and
loop
arpl
mov
mov
dec
jmp
xchg
outsb
inc
fwait
ret
inc
xchg
movsl
mov
add
mov
sub
shrb
mov
dec
dec
xlat
and
push
sahf
and
push
sub
mov
ret
out
pop
xchg
je
jecxz
mov
dec
gs
mov
sub
sub
lods
roll
sarl
pop
sub
pop
int3
fidivl
pop
lret
in
daa
mov
jne
mov
jne
jae
dec
and
xor
dec
pusha
in
inc
jle
ds
adc
fsub
sub
sbb
out
cltd
cmp
roll
out
cli
fs
ss
pusha
fsubrp
cmp
mov
stos
aaa
jb
fsubrl
xchg
mov
xlat
xor
int
stc
pop
xchg
dec
jae
call
int3
aas
sbb
push
cltd
push
test
and
aas
pop
jmp
push
xchg
jle
add
or
lock
cltd
mov
push
cmp
lods
js
mov
ret
jne
scas
pop
and
sbb
imul
std
jmp
jmp
ja
sub
leave
add
push
jge
mov
and
xchg
xchg
jb
iret
sbb
ja
cmp
jbe
test
push
add
addr16
sub
outsl
inc
and
lret
inc
sub
inc
es
popf
sub
subb
push
pop
out
pop
mov
jbe
inc
inc
inc
lds
insl
dec
aam
mov
mov
jge
inc
stos
add
imul
inc
push
adc
xchg
jno
dec
mov
push
fs
sbb
and
fs
jge
lcall
iret
cmpb
cwtl
pop
push
sub
movsl
adc
mov
add
sub
aaa
in
ret
hlt
out
sub
and
mov
or
pushf
mov
inc
imul
pop
fcomps
cmp
inc
jmp
mov
cld
ds
das
cmpsb
jne
jecxz
movsb
pop
sbb
jle
jge,pn
pop
and
xor
lcall
ret
mov
ret
in
jo
cmp
movsb
mov
jmp
add
adc
jns,pn
mov
pop
pop
mov
in
pop
fnstcw
mov
jb
cmc
ljmp
xor
imul
mov
jns
cld
ds
fsubs
imull
lret
mov
jne
push
out
cmp
in
dec
fstpl
int
faddp
enter
lcall
int3
mov
in
out
bound
hlt
sub
mov
dec
adc
fsts
in
mov
cmp
jge
js
scas
aad
ss
ret
adc
pop
pushf
xor
sub
out
arpl
or
xchg
push
inc
mov
ret
sbb
jecxz
fldt
repnz
xlat
out
stc
mov
jns
jb
stos
sub
fstps
sahf
lret
xchg
cld
push
jmp
lcall
ret
test
jl
xor
test
cmpb
sub
sbb
leave
xchg
mov
push
fidivrl
cmp
mov
cmp
xor
stos
repz
mov
jns
pop
push
push
fisubl
leave
stos
test
rcll
and
mull
pop
lock
lahf
lea
mov
or
out
add
or
and
test
insl
inc
dec
popf
insb
jecxz
test
mov
fs
jns
jno
pop
clc
mov
ds
adc
movsb
stos
jp
cltd
cmpsl
dec
rclb
test
push
jae
std
xlat
push
cld
add
sbb
push
int3
movsl
ret
cmpsl
mov
lcall
ret
call
hlt
inc
jns
es
scas
ds
aad
fiadds
push
rcrl
mov
mov
ja
cwtl
pop
mov
fisubrl
in
xor
mov
push
lahf
incl
pcmpgtw
loopne
insb
adc
pop
dec
popa
pop
dec
popa
stos
jnp
sub
jbe
lahf
xchg
ds
pop
scas
xchg
push
xchg
xchg
mov
mov
mov
stos
mov
jp
adc
pop
and
and
outsl
loope
jecxz
and
arpl
xchg
and
sub
dec
mov
or
xchg
test
xor
dec
pop
xchg
sbb
sub
cmc
or
inc
insl
out
stc
or
mov
mov
xor
mov
cld
jecxz,pt
add
outsl
clc
sahf
loop
jns
pop
push
push
sub
add
outsl
lds
popf
mov
stc
jne
clc
push
out
cli
int3
je
test
popf
ret
testl
pop
stos
insl
sub
mov
aad
jge
and
adc
cli
cld
and
into
sahf
mov
fwait
shll
dec
pop
xor
xchg
mov
out
daa
xor
insl
fwait
jbe
es
cltd
insl
mov
loop
cmp
xchg
xchg
push
and
dec
aam
jl
icebp
pop
aam
enter
setbe
fs
mov
add
jecxz
sbbb
mov
inc
std
push
xlat
push
and
jb
movsb
mov
mov
bswap
dec
repz
adc
ss
les
insl
cmp
add
data16
cld
js
mov
nop
mov
dec
sbb
xlat
stos
jb
push
mov
fwait
xchg
test
or
pop
test
jp
rcll
and
inc
fsubr
daa
mov
pop
test
jns
xlat
add
xchg
lods
movsb
jmp
and
insb
fisttps
fwait
pusha
mov
aam
sbb
int
jecxz
sub
and
dec
ljmp
dec
js
fdivrl
adc
sub
jo
mov
jo
lret
and
push
test
mov
dec
lods
mov
leave
mov
insl
push
jbe
push
sbb
xchg
sub
fists
loopne
push
scas
sub
aam
sbb
loop
pop
add
frstor
adc
fdivrs
arpl
je
insl
pop
pop
xchg
xchg
adc
lret
add
pop
mov
lcall
das
aaa
adc
daa
xchg
cmpsl
sub
movsl
push
test
jo
fsubp
test
je
ja
stos
and
inc
mov
daa
ret
fdiv
test
inc
and
dec
iret
fildll
sbb
sub
ljmp
lcall
fwait
stos
mov
or
loope
xchg
push
and
or
xor
mov
js
or
test
and
mov
cmpsl
push
and
mov
fcoms
aam
add
xchg
xchg
cli
daa
xor
call
cwtl
gs
pop
dec
mov
cmp
dec
fisttpl
push
std
aas
xchg
mov
xchg
push
clc
mov
aad
es
lds
sub
test
popa
mov
jo
inc
icebp
jp
gs
aad
inc
lods
pop
out
jge
gs
out
test
mov
gs
int
dec
js
push
int3
repz
mov
pushf
bound
mov
out
or
movsb
mov
adc
xlat
adc
dec
jb
mov
cmpsb
mov
ja
add
mov
add
aam
and
aas
xchg
inc
add
lahf
std
fwait
out
mov
xchg
inc
and
mov
xor
inc
movsl
sub
adc
pop
mov
fdivp
xchg
xor
lea
xchg
pop
inc
out
xchg
mov
out
adc
repnz
jge
sbb
mov
dec
mov
jge
ss
cwtl
and
imul
pop
add
stos
sarb
jno
divb
das
cli
arpl
adc
in
aam
mov
adc
into
inc
subb
dec
rorl
imul
js
lods
outsl
call
sahf
in
mov
pop
repnz
imul
push
gs
push
outsl
insl
mov
or
cmp
pop
xchg
mov
sti
jecxz
xor
enter
out
repnz
pop
cmpsb
mov
dec
test
push
flds
insl
out
pop
dec
mov
jno
xchg
sar
leave
outsl
out
sub
int3
repnz
insl
mov
aaa
insl
push
stos
pop
push
jbe
xchg
mov
addl
idiv
or
jg
push
pop
das
ficomps
shl
pop
fldcw
dec
or
movsb
iret
add
daa
jmp
call
sub
insl
sbb
jbe
popf
rcll
mov
sbb
or
test
std
jl
outsl
cli
popl
pop
sti
dec
fdivs
leave
fs
pop
stc
int
push
dec
mov
gs
insl
xor
cmc
imul
sub
jp
mov
movsb
mov
push
and
cmc
imul
jbe
cmp
and
jecxz
adc
cmpsl
out
xor
or
outsb
leave
icebp
xchg
sbb
loope
jbe
rol
outsb
aas
mov
and
pop
mov
jg
and
sahf
lea
in
and
imul
jmp
mov
pop
add
icebp
jbe
sub
and
shl
movsb
mov
mov
mov
push
sub
lea
sbb
in
xchg
imul
bound
fadd
call
scas
xchg
pop
js
jo
lods
loopne
cmp
scas
test
in
cmp
out
xor
cmp
jg
sbb
ret
scas
jp
fldenv
mov
pop
mov
outsb
es
movsl
jbe
cmp
adc
adc
xor
or
or
xchg
cs
mov
aad
jle
add
mov
cwtl
mov
outsb
or
sub
lea
scas
mov
in
pop
fmull
imul
jne
das
icebp
adc
jbe
rcll
rcl
pop
mov
fwait
mov
mov
cltd
jbe
cmp
pop
xchg
adc
cmp
out
xor
or
pop
outsb
mov
pop
sbb
in
jbe
rcrl
xor
call
bound
cmp
jb
sbb
in
cmp
imul
jns
jbe
mov
adc
shrl
xchg
mov
mov
push
lds
loopne
sbb
shrb
inc
in
sbb
dec
pop
imul
sbb
push
repnz
cmc
fstl
outsb
clc
icebp
sbb
in
pop
jbe
rorl
rcl
pop
aas
ror
mov
jmp
or
sti
jbe
cmp
dec
mov
bound
aaa
pop
pushf
fldl
mov
data16
or
pop
loope
jbe
shr
mov
adc
repnz
cmp
cmc
repz
insb
jbe
cmp
mov
loop
jns
cmp
mov
xchg
mov
mov
jo
sbb
pop
push
shl
mov
add
jmp
lcall
cmpsb
test
mov
pop
pop
inc
outsb
or
add
mov
push
or
ljmp
fmull
push
sbb
in
push
js
dec
imul
bound
fnsave
outsb
aaa
hlt
shrl
repz
call
or
lea
sbb
in
pop
orl
daa
mov
bound
fnsave
outsb
call
loope
jbe
rol
lea
mov
rorl
aad
fnstcw
cmc
out
and
lds
sbb
out
xor
or
outsb
scas
icebp
hlt
sbb
jbe
rcll
rolb
mov
inc
mov
fbstp
cmp
lds
cmpsl
movsb
dec
adc
xor
xchg
int3
mov
mov
scas
xchg
mov
divl
es
call
pop
pop
push
sub
repz
dec
jb
sbb
in
xor
dec
or
mov
cmp
mov
or
sbb
push
jp
test
push
adc
mov
lea
xor
sbb
in
out
xlat
dec
loop
pop
mov
xor
xchg
fstp
loopne
inc
icebp
mov
in
dec
mov
mov
xor
xor
mov
scas
push
jb
sbb
in
adc
or
adc
fnsave
outsb
xlat
icebp
jge
pop
loope
jbe
shll
lods
mov
sub
sub
sbb
and
lret
cli
jbe
cmp
cltd
dec
lea
mov
fcomps
fstpl
add
icebp
push
sbb
mov
or
ror
ret
sub
mov
pop
mov
push
sub
lds
addr16
imul
in
pushf
pop
outsb
fstl
sub
cmp
push
dec
shr
add
mov
mov
push
sub
clc
scas
jne
mov
mov
mov
inc
pop
inc
fstl
sbb
loope
jbe
shll
inc
mov
mov
out
mov
sub
je
leave
mov
jae
adc
xor
or
dec
xchg
into
ret
mov
xlat
mov
jmp
out
dec
loopne
cmp
cmc
cmpsl
movl
lds
add
adc
xor
xchg
or
ret
jg
repnz
adc
lock
mov
push
in
adc
outsb
rclb
jmp
fbstp
sbb
in
sarb
repnz
bound
ja
movsl
fnsave
mov
int3
loope
jbe
shl
cmp
mov
fcom
jmp
loopne
cmp
lock
sub
mov
pop
fisubrs
call
outsb
lcall
rclb
bound
vpunpcklwd
and
ljmp
mov
gs
aaa
loope
sbb
stos
iret
xor
es
cmc
xor
jns
cmp
hlt
push
cwtl
stos
pop
and
loope
cltd
push
ljmp
test
aas
test
cmp
aas
out
jg
xor
mov
test
ds
loopne
mov
insl
mov
lcall
mul
shll
sbb
fdiv
pop
ret
mov
xchg
or
pop
xchg
call
in
jbe
jns
shll
out
ds
xchg
pushf
cmp
cltd
int
pop
jns
xlat
mov
ficomps
jno
or
mov
into
cmp
push
popf
dec
mov
jns
jmp
sub
into
iret
jg
call
xchg
push
add
sti
loop
stc
call
js
fadd
jge
lret
cmp
stos
inc
pop
das
cmc
sti
bound
test
add
xor
aaa
push
jnp
dec
out
pop
mov
pushf
pop
pushl
ret
xlat
sbb
pop
paddq
int
cmp
out
fildll
xchg
jb
jne
push
mov
ss
lea
cmpsl
mov
add
das
dec
jecxz
sbb
jle
ja
inc
cli
les
loope,pn
mov
outsb
mov
pop
call
dec
mov
mov
mov
xchg
jl
scas
mov
pusha
gs
xchg
push
das
sub
fadds
fisubrl
sub
sbb
jecxz
mov
das
popf
xor
mov
xchg
cltd
cmpsl
aad
int
inc
push
push
pop
mov
xchg
bound
mov
sbb
test
or
int
jbe
out
ds
mov
jbe
arpl
cmp
inc
and
test
outsl
fmull
adc
in
add
test
or
ret
stc
xor
pushf
dec
jnp
insl
and
popa
jge
xchg
in
scas
or
ret
dec
sbb
cmc
pop
adc
pop
add
mov
fildll
sub
and
sbb
dec
cwtl
dec
sub
mov
sub
andb
mov
loop
test
mov
cli
pop
int3
xor
sub
sub
out
push
lret
add
jnp
push
push
ret
xchg
gs
inc
and
aam
aas
sub
jmp
test
pop
test
loope
xchg
lahf
sub
bound
out
push
negl
cmpsb
add
inc
ret
mov
iret
jecxz
popa
push
xor
test
call
ds
fnstsw
cltd
ss
jl
test
xor
dec
mov
mov
sub
outsb
jp
cs
sbb
or
inc
nop
sub
pavgw
dec
dec
lahf
stos
pop
int3
sbbb
popf
pop
sbbb
mov
mov
jae
and
ret
inc
dec
cwtl
mov
push
add
rorl
iret
ljmp
test
test
aas
xlat
adc
shr
out
adc
repz
cmpsl
cmp
dec
aam
cmpsl
movsb
sub
add
loope
js
push
and
push
out
pop
aas
pop
enter
ret
aas
adc
jecxz
dec
bound
jns
ret
cmp
xor
iret
lcall
cltd
enter
out
add
mov
imul
add
imull
add
xchg
mov
sbb
ficoml
rcrb
sbb
aam
push
sub
cmp
push
shrl
sbb
xchg
push
xchg
pop
daa
inc
push
mov
jecxz
popa
mov
xchg
jle
jns
xchg
adcl
aas
or
adc
xchg
jno
sub
aas
jbe
in
iret
push
std
pop
dec
fwait
pushf
xchg
jl
in
jns
mov
push
and
mov
push
sub
xchg
lds
sub
adc
cmp
out
and
outsb
mov
push
sbb
loope
jbe
shrl
outsl
mov
aad
jae
lret
cmp
cmc
mov
cmp
adc
xor
dec
or
in
mov
mov
into
scas
mov
leave
lock
inc
call
pop
sahf
push
sub
fisubrl
dec
in
xor
sahf
mov
ficompl
inc
sbb
loope
jbe
lcall
mov
mov
movl
sub
bound
fstl
insb
ds
pop
scas
std
mov
mov
mov
call
mov
push
sub
lea
fbstp
sbb
in
xchg
das
dec
imul
bound
push
jl
sbb
push
outsb
mov
movsl
sbb
loope
jbe
shrl
mov
btc
outsb
lods
xor
sub
lea
pop
jb
sbb
in
out
std
dec
cmp
mov
sbb
add
icebp
fstpl
jge
daa
jbe
rcrl
pop
inc
mov
adc
mov
add
mov
cmp
lds
sbb
adc
pop
lock
outsb
insl
hlt
inc
scas
test
inc
lock
adc
xor
sub
roll
cmp
or
or
adc
stos
lock
ja
pop
mov
rcll
cmp
scas
inc
jb
sbb
in
push
mov
mov
xchg
pop
loopne
xor
or
in
loope
jbe
rcrl
mull
shrw
cmc
jbe
cmp
lds
cmpsl
cmp
cld
out
xor
or
or
xchg
mov
and
stos
sub
mov
rorb
add
dec
clc
push
sub
lea
scas
mov
in
mov
dec
mov
mov
xor
fsubl
rol
stos
mov
mov
shrl
mov
int3
jnp
fdivp
jl
sbb
cmp
xchg
cmpsl
cwtl
aad
inc
cmp
out
xor
or
push
outsb
hlt
xchg
scas
adc
ja
push
div
lds
jge
jl
and
sub
jae
xchg
lea
loopne
call
adc
cmp
or
xchg
fbstp
movsl
stos
sahf
scas
jnp
lock
mov
pop
mov
call
ljmp
xor
stc
in
or
dec
fsubrs
mov
pop
pop
iret
outsb
mov
push
mov
mov
call
scas
cmpsb
push
sub
lea
scas
push
jb
sbb
in
mov
dec
bound
mov
jle
lods
frstor
outsb
shl
rcrl
loope
jbe
shr
mov
mov
pop
rcll
mov
sub
sub
or
or
xchg
add
ret
push
stos
pop
scas
and
cmp
cmpsb
mov
mov
adc
shl
int3
jbe
cmp
or
fnstsw
cmpsb
out
xor
or
or
lea
mov
jl
fwait
mov
mov
call
adc
push
sub
jmp
sbb
in
sub
imul
sub
pop
imul
icebp
pop
sbb
loope
jbe
rcrl
shl
pop
fcmovnbe
cmpl
and
shl
push
jbe
cmp
cmpsl
imulb
pop
xor
dec
or
xchg
scas
sbb
loope
jbe
shl
mov
stc
pop
outsl
sar
mov
mov
xchg
cmpsl
jbe
cmp
mov
cmp
xor
es
xchg
outsb
shl
sbb
push
jbe
rcll
inc
lods
mov
adc
pop
xchg
mov
stc
lea
lods
jb
sbb
inc
cmp
out
xor
or
les
sub
mov
mov
jmp
lea
inc
jb
sbb
pop
cmp
bound
loop
pop
mov
mov
mov
push
lds
and
fsubrl
sub
lea
sbb
in
dec
sbb
mov
bound
push
rorb
mov
mov
ret
mov
mov
mov
push
mov
outsb
sbb
push
sub
lea
cli
jb
sbb
in
fistps
mov
mov
repnz
sti
icebp
mov
jbe
rcrl
mov
sbb
push
sub
lea
sbb
in
mov
dec
inc
imul
or
inc
push
lods
pop
mov
icebp
xchg
sbb
jbe
rcll
rorb
mov
mov
sbb
imul
cmpsb
add
push
lcall
fnstsw
outsb
icebp
mov
jbe
sarl
rolb
and
dec
mov
xchg
arpl
mov
stos
in
inc
pop
dec
loop
popf
xchg
je
jmp
shrd
jo
sbbb
cmp
jmp
imul
push
repnz
jg
icebp
loope
jbe
shll
and
loopne
ds
mov
les
data16
fisubs
loopne
test
push
cli
rolb
in
int3
pop
xchg
fisttpll
xlat
lcall
arpl
push
mov
xchg
jo
std
addl
or
and
jo
sub
aas
fs
out
xchg
cmp
ss
rcrl
cmp
popa
inc
sub
mov
sti
pop
ss
push
call
mov
xchg
mov
add
iret
pop
iret
cmp
mov
push
mov
ljmp
sarl
cmpb
jmp
cs
jnp
mov
loope
das
pop
mov
mov
sarl
and
or
lock
xchg
jno
jge
pop
sub
or
mov
fildll
icebp
rol
mov
out
loope
clc
cmc
inc
stos
jbe
cmp
lds
fdivrp
outsb
xor
repnz
adcl
mov
scas
lods
jb
sbb
in
hlt
sahf
dec
add
mov
loopne
aas
popf
cmp
iret
push
popl
adc
int
pop
addl
ror
pop
adcl
pop
test
adc
int
pop
fwait
adc
adc
into
inc
stos
cltd
sbb
push
pushf
sbb
xchg
sub
addb
notb
andb
jnp
push
xlat
in
or
std
in
pop
sbb
sti
cmpsb
nop
adc
mulb
sti
inc
repnz
mov
sub
in
inc
out
cmpsb
mov
inc
in
cmpsb
out
adc
ret
repz
hlt
js
inc
lods
and
ss
js
jl
mov
lds
xchg
sarb
xchg
mov
int
mov
xchg
shll
fistpll
jl
mov
lods
jl
mov
mov
or
shll
sbb
ret
addr16
lods
or
add
mov
pop
inc
push
xchg
inc
add
adc
andl
inc
and
test
jg
pop
aaa
push
aas
adc
and
inc
mov
and
lret
addl
push
iret
movsl
push
dec
mov
sbb
adcb
incl
mov
and
outsl
mov
or
lret
mov
and
stc
insl
hlt
push
inc
or
push
out
adc
cltd
push
push
fwait
and
mov
xchg
cs
push
stos
mov
pop
pop
mov
mov
sub
dec
cs
inc
inc
out
ds
pop
movsb
scas
inc
inc
xor
fwait
pop
push
in
inc
add
or
dec
add
or
dec
or
aad
dec
mov
dec
push
dec
mov
push
push
mov
or
mov
orps
dec
add
push
mov
add
pop
mov
sbb
mov
sbb
pop
mov
adc
aas
adc
int
outsb
ljmp
aad
fwait
push
lahf
mov
das
xor
mov
push
in
sub
and
repnz
jbe
sub
sub
xchg
sub
sub
xchg
xor
cs
addr16
loopne
jns
cmp
xor
xchg
push
fnsave
data16
data16
xor
xlat
xchg
or
xchg
or
cmp
xchg
or
ds
ja
jl
cmp
mov
les
and
inc
and
lds
insl
in
ret
add
outsl
in
roll
in
iret
add
arpl
int
sub
lret
add
addr16
leave
add
jns
xlat
add
jnp
aad
xor
roll
jg
roll
jno
filds
jae
fldl
dec
in
cmpsb
add
dec
in
movsb
add
dec
in
mov
pop
dec
in
mov
pop
inc
in
scas
add
inc
in
lods
add
inc
in
stos
add
inc
in
test
adc
mov
adc
jne
popf
jmp
xchg
mov
push
add
mov
imul
cmp
xchg
cmp
in
jno
outsb
stos
and
fwait
insb
stos
daa
test
aad
fwait
jb
outsl
pop
sub
jp
pop
mov
clc
jbe
mov
in
das
fwait
je
imul
jmp
xchg
push
mov
jbe
push
mov
jbe
push
cmp
mov
cmpsb
movsl
daa
dec
lods
jbe
push
cltd
movsl
and
adc
and
sti
adc
stc
adc
div
adc
inc
push
mov
fbstp
movsb
xchg
adc
cld
xor
cmpsl
js
test
fldl
cmpsl
jp
cmpsb
cld
aaa
pop
jl
xchg
adc
cld
xor
push
aad
fldl
cmpsl
jo
lods
cld
cmp
ja
adc
cld
aas
inc
jae
je
scas
xor
pop
jns
jecxz
add
cmpsl
cmp
pop
les
insb
shlb
push
cmpsl
mov
pop
fisubl
daa
xchg
and
clc
andl
pop
in
and
sar
cmp
adcl
pop
icebp
sbbl
cmp
sbbl
popa
push
ror
cmp
adcl
add
lret
adcl
cmp
adc
mov
loopne
loopne
mov
es
dec
in
fnsave
int
fidivs
dec
insb
shrb
dec
fst
add
test
xlat
ret
enter
cwtl
push
aaa
cmpsb
sahf
push
push
es
push
xchg
arpl
mov
es
push
push
es
push
insb
mov
push
or
insb
mov
push
add
jecxz
pop
insb
mov
add
loope
pop
insb
mov
add
insb
mov
pop
es
pop
insb
test
push
xchg
lret
push
xchg
iret
cld
ja
xor
cltd
cmpsl
jno
dec
cld
cmp
cmpsl
dec
adc
cld
add
cmpsl
dec
jbe
cld
pop
inc
mov
add
rorb
cmp
xlat
popa
adc
or
pusha
stos
movb
push
jmp
fldcw
jmp
mov
pop
push
fstps
add
pop
push
fistps
pop
sbb
push
mov
add
or
fdivs
xchg
push
or
out
pop
popf
pop
cmpsl
movsl
inc
dec
ret
negb
dec
loope
cltd
push
or
xchg
push
or
notb
dec
jle
xchg
push
aaa
movsl
dec
dec
inc
notb
dec
dec
testb
sbb
jp
jmp
jp
leave
es
lcall
in
idivb
leave
and
or
cmp
xchg
icebp
popa
enter
stc
xchg
in
sub
cmp
pusha
and
cmp
and
cmp
adc
lds
lds
or
xor
ret
and
jo
loope
mov
pop
bound
ret
adc
fnstsw
mov
and
mov
movsbl
add
or
test
xchg
fisttpll
add
pop
jns
mov
fimull
add
add
add
add
negb
rolb
inc
jae
lcall
jge
aad
fwait
lahf
faddl
aad
ja
lahf
fiadds
aad
sbb
dec
mov
push
dec
mov
in
inc
mov
jnp
dec
int
cwtl
lahf
xchg
lahf
lret
aad
fwait
xchg
lahf
int3
inc
rcl
fwait
fwait
lahf
into
inc
ret
xchg
ja
pop
cli
sub
adc
adcl
xor
andl
fnstsw
pushf
fnsave
push
in
mov
mov
lahf
mov
push
aad
fwait
insl
lahf
test
cli
stos
and
cld
lods
cmp
and
stc
stos
outsl
repz
cld
les
imul
cmpsb
hlt
push
aaa
es
in
pop
mov
xchg
adc
cld
add
cmpsl
dec
adc
cld
push
and
dec
loop
and
pop
cwtl
sub
and
shrl
test
push
test
pop
addl
iret
and
ror
or
pop
aad
mov
notb
inc
leave
movsl
jmp
pop
cld
mov
adc
iret
negb
mov
ret
test
cmpl
push
xlat
inc
xor
cld
jbe
xchg
subl
xchg
call
jbe
xchg
out
scas
repz
fnsave
mov
jge
shr
cmp
rcl
cmp
inc
cmp
sbbl
dec
lods
lret
and
inc
fisttpll
leave
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ljmp
push
inc
loopne
lcall
inc
cwtl
cmpsl
scas
adc
cld
in
xchg
cmpsl
mov
inc
xchg
leave
push
xorl
pop
xchg
push
shr
cmp
cs
sbb
idivb
push
subl
push
subl
cmp
sub
shl
cmp
es
adc
cmp
and
adc
cld
cmp
and
sar
cmp
and
sar
cmp
sbbl
cmp
sbbl
daa
loope
popa
insb
rol
cmp
rol
cmp
adcl
cmp
adcl
das
adcl
cmp
ror
cmp
orl
cmp
orl
aaa
orl
cmp
rcl
cmp
addl
cmp
addl
cmp
add
shlb
popa
dec
shlb
popa
dec
shlb
popa
dec
shlb
popa
inc
shrb
popa
inc
shrb
popa
inc
shrb
popa
pop
shlb
popa
pop
shlb
popa
pop
shlb
popa
pop
shlb
popa
push
sarb
popa
or
and
or
or
aam
inc
test
arpl
sarb
inc
orl
cmp
push
popa
add
fidivrs
dec
addl
dec
addl
cmp
add
rcr
cmp
jle
sbb
cmpsb
cmp
jl
sbb
movsb
cmp
jp
sbb
mov
popa
push
shlb
popa
adc
scas
cmp
je
adc
lods
cmp
jb
adc
stos
cmp
jo
push
shrb
popa
push
subl
subl
and
shlb
popa
pusha
sarb
popa
andl
sub
sarb
popa
js
xchg
xor
test
aaa
loope
mov
pusha
mov
cmp
call
inc
push
hlt
and
mov
xchg
or
cmp
cli
fdivrl
mov
jg
enter
xchg
add
add
das
sbb
mov
adc
lahf
xor
addl
pop
cmpl
popa
pop
shrb
sbb
lods
mov
fldl
jg
dec
push
and
ret
loop
add
xchg
xchg
fstpt
or
push
inc
pop
lcall
rcrl
xor
xorb
aad
xchg
push
pusha
push
add
jo
sarl
and
into
cmpsb
je
mov
clc
stos
adc
add
loopne
cmp
cmc
nop
pop
jbe
cmp
imul
cmp
or
fcomps
test
test
imul
imul
stos
or
inc
cmpsl
pop
mov
add
iret
sub
or
or
xchg
ljmp
nop
cmp
cmc
out
out
jbe
cmp
push
adc
xor
or
or
mov
testb
pop
lds
push
xchg
adc
cmp
push
dec
rorb
mov
jp
leave
mov
mov
lret
mov
mov
and
jbe
cmp
push
adc
cmp
es
ljmp
and
cmc
mov
mov
lds
outsb
cmp
or
pushf
xchg
add
ret
push
stos
pop
scas
push
mov
or
lock
mov
push
aaa
mov
out
mov
sub
or
xor
mov
fwait
scas
cmp
icebp
popf
cwtl
sub
hlt
rcrw
or
outsb
cltd
icebp
xchg
sbb
mov
cmp
cltd
mov
pusha
mov
test
repnz
cmp
icebp
pop
out
xor
add
test
or
push
jbe
jmp
lods
popf
xlat
and
nop
cmpsl
jns
aad
cmp
push
dec
pop
ds
xchg
dec
mov
push
mov
movsl
or
testl
mov
pusha
mov
xchg
clc
shlb
xor
cmc
sti
xchg
or
lahf
adc
xchg
mov
pop
fsubs
shrb
fcomps
ret
insb
or
addr16
push
popf
cmp
push
scas
loopne
js
sub
scas
popa
jecxz
sbbl
in
dec
adc
or
in
repz
adc
inc
jns
jg
sbb
sahf
xchg
ds
insb
mov
push
jmp
dec
sub
jno
nop
lock
or
sbb
jecxz
cmpsl
lea
aad
add
movsb
shlb
and
arpl
cltd
mov
sahf
jno
stos
repz
sub
mov
rolb
xor
and
test
jecxz
or
sub
into
jo
sub
sarl
mov
fcompl
ret
pop
sti
das
xor
xchg
push
mov
mov
sarb
test
js
jge
sub
sbb
inc
movb
push
out
cli
es
sti
in
imul
adc
mov
xchg
outsb
push
insl
shll
lock
xor
mov
out
fsubs
xchg
mov
in
xor
aam
nop
inc
shrl
jb
pusha
mov
mov
cs
cltd
sahf
mov
mov
sti
sbb
sbb
ret
mov
shlb
lea
aas
sub
mov
cmp
mov
dec
mov
pop
hlt
rcl
cmp
stos
ds
fsubs
cwtl
xchg
adcb
pop
lds
nop
out
sbb
sub
ret
sbb
fisubl
adc
subl
pop
pop
faddp
mov
jb
jecxz
leave
pop
xchg
loopne
pop
insl
inc
add
test
xor
scas
mov
pusha
and
cmp
stos
xchg
jp
ds
outsl
lods
mov
rolb
sub
mov
adc
dec
mov
repnz
push
or
pop
lret
test
cmp
ret
nop
je
out
rolb
add
adc
lret
cmovb
nop
push
in
xchg
out
popa
jb
cltd
imul
jecxz
pop
xchg
mov
or
mov
fsts
mov
xor
xchg
mov
fisubl
ss
sub
je,pt
jecxz
fidivs
out
ss
lds
ss
dec
xchg
mov
push
aad
addr16
and
mov
push
xor
lahf
cmp
cmpsb
ss
repz
in
test
cmpsl
fiadds
push
cld
out
sbb
and
push
bound
mov
or
push
pop
push
xchg
mov
cld
jo
mov
loopne
daa
ds
pop
mov
jmp
mov
test
rcl
sbb
add
shr
arpl
cmp
ljmp
ret
js
jle
fidivrl
sub
movsl
cmc
xchg
out
jmp
dec
scas
clc
jecxz
loop
cmp
add
fildl
bound
jecxz
mov
mov
cli
or
cs
and
rcll
sub
leave
add
scas
pop
jecxz
push
mov
jns
lods
cmpsb
pop
sti
and
aas
fstpl
inc
mov
out
push
sbb
in
lcall
movsb
in
inc
movsl
inc
das
test
and
xchg
stos
sub
xlat
or
adc
adc
dec
stos
mov
push
sub
imul
lock
jae
pushf
stos
push
sub
mov
loopne
leave
fisttpll
and
shll
xchg
icebp
int3
lds
sbb
mov
jmp
shl
sahf
push
cmp
jge
and
in
pusha
or
arpl
dec
mov
xor
imul
sahf
xchg
jns
sub
cmp
test
addl
mov
sbb
movsb
jns
stc
out
lea
int
lods
mov
and
ss
imul
lock
xor
insl
jno
cmp
pushf
add
mov
push
adc
inc
adc
out
subl
xchg
enter
das
mov
xchg
cmpsb
loopne
loope
push
inc
mov
je
stos
cmp
dec
cmp
mov
inc
jp
push
xlat
inc
cmp
jecxz
cmpsl
jle
push
addl
jns
test
shll
ds
cmpsb
notb
xchg
movsl
shll
jno
mov
lahf
jecxz
ljmp
fs
push
jbe
pushf
lock
pop
mov
or
fnsave
loop
mov
pop
cmp
ss
call
shrl
out
pop
pop
shll
in
insb
roll
mov
enter
lock
cli
repnz
mov
out
fsts
addr16
add
jmp
and
lahf
in
cmpsl
cmp
cmp
mov
lret
imul
push
ja
shrb
sub
dec
inc
mov
scas
repnz
mov
imulb
pop
jb
push
es
repnz
stos
or
pop
lret
cmp
fistpll
mov
fs
push
divb
shrl
mov
fnstcw
fs
sarb
push
stos
mov
cmp
lea
sbb
cmpsl
sub
push
mulb
repz
fbld
or
adc
xchg
lds
cs
in
hlt
mov
dec
aad
fbld
loopne
jno
adc
pop
outsb
loop
push
call
clc
dec
sbb
lahf
es
push
pop
repnz
lea
leave
das
pop
stos
insb
out
mov
mov
cld
pop
aam
jnp
sub
test
sub
lret
scas
loope
mov
lret
jmp
das
cmp
ret
shll
sub
mov
jg
leave
mov
aaa
pop
nop
mov
sbb
xchg
xor
inc
ss
pop
mov
imul
addb
das
or
mov
bnd
or
sbb
add
ds
das
repz
lret
out
mov
popa
lcall
pop
and
and
push
mov
mov
dec
dec
shl
das
jnp
inc
testb
stos
lods
cmp
loope
cmpsb
repnz
jb
std
cmp
sbb
jns
roll
int
test
daa
sbb
push
or
inc
sbb
popa
mov
push
stc
out
xor
divb
loopne
mov
cmp
shr
push
xor
pop
pop
mov
mov
das
out
mov
ljmp
mov
mov
mov
das
mov
jbe
loop
push
jle
movsl
cmp
sbb
mov
fimull
push
push
dec
cmp
xchg
sub
sbb
and
mov
inc
shll
cmp
jae
pushf
mov
or
push
sbb
mov
dec
cmp
cmpsb
mov
pop
mov
mov
std
xor
mov
ljmp
ljmp
lods
mov
add
popa
cmp
jne
imul
ret
or
dec
and
mov
sahf
add
push
fildll
cmp
bound
rcrl
mov
sbb
fucom
icebp
insb
ss
lret
das
mov
iret
pop
sub
idivb
push
mov
xchg
push
sbb
into
jbe
cmp
outsb
cmc
movl
ja
mov
push
fldt
cltd
mov
sahf
or
lds
fldcw
div
ds
mov
mov
pop
repnz
outsl
gs
movsl
pop
inc
xchg
sbb
push
and
xor
fisubs
outsl
imul
push
fwait
mov
adc
jo
jns
add
test
pop
data16
sbb
movsl
xchg
stos
iret
aam
mov
std
or
fnstsw
cmpsb
xor
mov
stc
mov
mov
mov
daa
or
push
into
aad
push
das
cmpl
aad
mov
inc
mov
andb
mov
xchg
pop
xor
jae
andb
pop
testb
sbb
andb
cwtl
dec
pop
ror
xor
outsb
dec
lock
lock
das
push
loopne
scas
pop
repnz
lods
mov
push
push
loopne
sbb
jecxz
rcl
shll
xor
insl
mov
imul
addb
lods
xchg
or
not
cmpsl
add
mov
dec
cmp
test
mov
testl
sahf
mov
jl
cmp
xor
jp
pop
pusha
fwait
jecxz
add
adc
xor
sub
das
int
addb
cmp
xchg
fnstcw
cmpl
jb
cwtl
jp
dec
jb
jp
outsb
cmp
in
cwtl
pop
test
ret
test
repz
or
push
add
xlat
mov
push
mov
sbb
or
lret
das
clc
test
xchg
test
imul
xchg
insl
arpl
xchg
jne
mov
xchg
fwait
dec
mov
loope
pop
testb
cmpsl
or
xor
mov
arpl
jnp
cli
or
pushf
ss
xchg
mov
movsb
sbb
in
out
mov
push
dec
ror
fmull
cmp
xchg
or
mov
cli
jmp
stos
sub
leave
push
in
gs
fstpl
fdivs
fimull
arpl
xor
pop
lea
lret
mov
add
jp
add
test
es
leave
adc
faddl
shlb
les
dec
mov
and
lcall
sub
mov
add
push
jnp
out
push
jecxz
inc
rorl
mov
cmp
sub
aaa
sbb
fimull
outsl
cmc
insb
sub
loopne
fs
stos
loope
cmp
test
lret
jmp
movb
icebp
movsl
jle
mov
call
es
adc
adc
xchg
sbb
and
lret
popa
and
xor
sub
mov
outsb
icebp
int
aaa
xchg
mov
add
int
inc
divl
clc
push
push
lea
mov
clc
lds
cmpsl
test
mov
mov
add
pop
test
out
or
lock
xchg
cmpsl
stos
js
lahf
lret
cmp
mov
inc
in
xor
mov
mov
adc
aas
clc
mov
add
test
mov
pop
out
jmp
daa
push
lock
rorb
xchg
dec
xor
decb
push
repnz
lea
js
jae
fwait
sbb
js
jmp
stc
pusha
and
movsl
inc
xchg
or
pop
inc
movsl
rcrb
lret
mov
or
lret
out
sbb
inc
lahf
push
test
add
jno
mov
aaa
sub
xchg
push
fstpl
out
xor
xchg
mov
mov
or
inc
rorl
loopne
mul
push
aas
mov
mov
mov
add
jecxz
adc
shr
dec
lea
add
call
sbb
sbb
stc
xor
push
sti
adcb
rcrb
loopne
addl
faddl
jmp
fmuls
inc
pop
in
test
push
xchg
mov
xor
mov
cld
ljmp
mov
sete
pushf
imul
sub
orb
cmp
mov
pusha
arpl
mov
andl
sub
xchg
cmp
das
icebp
stos
js
mov
pop
and
add
dec
out
dec
mov
dec
jne
lcall
jmp
sbb
jb
lret
push
xlat
push
sbb
stos
loopne
push
int
in
shll
repnz
int
lds
scas
int
and
fucomip
das
movsl
add
pop
sbb
or
pop
mov
repnz
stos
jmp
dec
mov
jmp
push
repz
lds
xchg
push
movl
ljmp
clc
das
add
test
xchg
mov
mov
fisubs
cmpsb
jmp
inc
sbb
cmp
xchg
push
sbb
mov
bound
mov
jg
or
mov
or
lahf
cmp
pop
mov
pop
mov
xchg
cltd
fistpll
mov
dec
clc
fstpl
inc
in
addr16
mov
lret
or
addb
push
mov
lds
stos
stos
negb
or
push
cli
lahf
ss
push
ret
mov
mov
pop
jne
ds
idivb
dec
repz
xchg
icebp
sub
or
dec
cmp
mov
pop
mov
xchg
xchg
adc
dec
sbb
pop
shll
movsb
out
sbb
sub
lret
call
ret
int
lock
mov
ret
pop
add
add
jns
es
cmp
sub
aaa
lret
in
and
lods
fisttpl
push
cld
popl
ljmp
lret
pop
in
mov
push
jno
inc
mov
jp
push
movsb
into
sbb
adc
cmp
aad
clc
xchg
out
jle
jbe
sub
imul
in
pop
ret
test
push
movl
test
jmp
mov
dec
push
out
sahf
ret
sarb
lds
jae
enter
sbb
xor
inc
jo
insl
push
or
sarb
ss
mov
cmpsb
call
dec
sbb
mov
lods
dec
add
mov
hlt
xchg
fistpl
mov
int
mov
lock
sbb
rol
lret
lret
sbb
outsl
mov
in
adc
or
stos
jmp
inc
enter
test
jge
sub
lods
testl
dec
movsb
cld
jge
mov
and
or
xchg
andl
push
sub
mov
out
or
add
push
pop
mov
ficomps
mov
sbb
sbb
sarl
add
out
mov
jb
adc
jmp
mov
jg
inc
mov
jnp
test
mov
fistl
push
lret
mov
repnz
mov
and
sbb
pop
xor
dec
in
pop
jp
and
push
cmp
clc
sub
cli
call
mulb
sahf
push
add
shrb
ss
mov
std
dec
int
push
cs
mov
push
push
enter
mov
inc
or
out
popa
sbb
int3
sbb
sbb
cmp
test
cmc
xor
jge
and
dec
out
jno
inc
push
mov
inc
divb
out
add
mov
movsl
cmp
sub
int
push
mov
lret
lods
stc
pop
into
sub
clc
aaa
das
insl
and
jne
mov
xchg
or
mov
cmp
push
shll
pop
pop
gs
test
sub
mov
aas
mov
lcall
xor
stc
imulb
or
scas
xor
xchg
jecxz
xchg
or
lods
divl
mov
movsl
cmp
sbb
pop
data16
xchg
xorps
push
add
mov
cmp
jne
fmull
cmpl
cmpsl
pop
in
dec
inc
mov
insb
jae
arpl
adcb
aaa
push
lret
dec
mov
lret
pop
add
inc
push
dec
stos
icebp
sbb
adc
or
aad
cltd
add
movsb
decb
repz
movsl
push
dec
and
ljmp
xchg
dec
movsb
lock
lock
std
or
mov
mov
and
cmpsb
fsubrl
clc
pop
adcl
pop
mov
push
sbb
movsl
insl
iret
sub
inc
fnstcw
dec
scas
sub
outsl
int
js
mov
cwtl
imul
mov
add
addb
stos
imul
xorl
negl
mov
mov
fcmovnu
jl
pop
es
rcl
sub
sub
dec
cmc
in
test
xchg
imul
xlat
dec
mov
mov
cmp
rcll
aaa
sti
mov
enter
inc
sti
lea
lcall
push
clc
mov
test
cmp
adc
xor
test
sub
ds
mov
mov
sahf
loop
pusha
leave
dec
test
shrl
test
adc
mov
inc
pop
fidivs
or
mov
loope
ficoml
das
pusha
std
out
mull
push
dec
subb
or
cli
fldt
sbb
pop
inc
movsl
inc
inc
push
lock
push
es
push
fwait
in
xchg
push
bound
or
cmpsb
rol
push
sub
adc
sub
fidivrl
and
cmp
mov
orb
push
xchg
incb
lock
pop
fdivl
adc
icebp
dec
dec
arpl
scas
mov
pop
xchg
fisubl
sbb
mov
rorb
xlat
push
cmpsb
repz
dec
inc
je
cmp
movsb
insl
sub
cmpsl
sahf
scas
enter
sbb
jo
inc
ss
mov
pop
stos
jecxz
mov
mov
mov
mov
arpl
aaa
mov
cmpsb
and
mov
ds
lea
mov
dec
adc
lret
mov
stos
adc
mov
test
push
push
in
jmp
je
outsl
and
fldenv
movsl
test
out
dec
sub
or
cmp
lret
adc
outsb
mov
xlat
jmp
pop
xchg
gs
xchg
dec
or
jge
hlt
pop
mov
xchg
mov
aas
sbb
loopne
sub
out
popa
jae
fildll
mov
inc
cmp
jae
dec
inc
push
dec
fwait
xchg
jb
cmp
mov
js
movsb
jecxz
dec
ja
or
idiv
sahf
in
imul
out
inc
lods
or
sbb
stos
mov
orl
clc
jmp
ljmp
lcall
scas
mov
sub
jae
jae
mov
jnp
inc
sti
inc
adc
and
fsubr
cmp
lahf
inc
int
sbb
mov
gs
and
mov
sbb
and
pop
addr16
cmp
xlat
out
sub
sbb
das
popa
jb
sbb
loop
jno
fucomip
addr16
insb
mov
lahf
clc
repnz
shrb
sbb
jns
into
push
pop
out
dec
pop
sub
sbb
mov
ljmp
pop
sub
push
lret
mov
loop
ljmp
inc
imul
in
in
xchg
xchg
test
je
inc
imul
dec
jle
data16
stos
jno
cwtl
cmp
sti
pop
sub
mov
jg
xchg
outsl
dec
mov
xchg
push
sbb
lea
repz
mov
adc
insb
cmpsl
shll
xor
enter
scas
jae
mov
les
jle
mov
inc
into
sbb
inc
mov
inc
jmp
scas
daa
mov
mov
xlat
mov
dec
pop
popa
scas
push
lock
ret
aam
mov
stos
xchg
jns
lret
sarl
sbb
adc
out
mov
xchg
inc
imul
mul
mov
inc
test
push
orl
push
pusha
lcall
lea
mov
add
push
stc
negb
stos
cmpsl
mov
loope
mov
add
fsubrs
ds
mov
pop
adc
jnp
inc
cmpl
stos
les
leave
lea
mov
stos
icebp
jg
cmpsb
data16
mov
inc
sbb
xor
jo
ja
inc
push
sub
sub
les
xchg
repnz
pop
rolb
xor
dec
shlb
out
lahf
std
or
mov
pop
arpl
fisubrs
stc
clc
lret
pop
nop
and
lds
mov
ret
xchg
sbb
adc
mov
mov
xor
lcall
aas
mov
out
xchg
adc
dec
imul
mov
mov
xor
inc
push
xchg
decb
leave
int3
or
xchg
gs
xchg
push
cmp
push
pop
fistpl
push
cltd
jae
inc
push
and
out
shlb
pop
dec
iret
jle
jmp
js
mov
aad
clc
mov
cmc
mov
xchg
mov
out
cwtl
sbb
xlat
xchg
or
ret
int
mov
mov
xchg
pop
movsl
andb
test
scas
pop
cmp
gs
xor
cmp
cmovb
add
jecxz
lret
adc
and
or
roll
ret
jecxz
divl
xchg
int
mov
loope
sbbb
cmp
pop
and
ljmp
inc
cltd
push
ret
loop
mov
inc
pop
fcompl
out
xchg
sbb
test
fiaddl
lahf
add
mov
inc
pushf
sub
xor
ja
notb
or
psubsb
sub
or
mov
xchg
push
jmp
mov
movsb
and
andb
mov
adc
testb
mov
mov
adc
jp
les
pop
push
lret
inc
aad
mov
inc
stc
popf
popa
imul
push
lret
popa
sub
sbb
fs
decl
aam
mov
fidivrs
sub
dec
leave
cltd
adc
mov
cmpsb
scas
xchg
stos
inc
mov
std
ret
xchg
push
loop
loope
nop
inc
cs
sbb
test
pop
and
ret
inc
outsb
pop
filds
or
ret
pop
mov
jno
pop
das
and
nop
mov
rcll
lea
adc
into
sub
jbe
jno
xlat
sbb
xchg
fidivrl
xchg
aad
sub
sbbb
xchg
arpl
and
int
mul
repz
pop
sub
in
push
mov
scas
and
sti
test
push
fcomps
xlat
aaa
aaa
sub
xor
push
negb
and
push
and
or
xchg
out
cwtl
pop
lret
xchg
cmp
jl
dec
les
pusha
loop
push
and
sub
iret
xchg
daa
xchg
scas
inc
push
loop
mov
mov
loop
xor
ljmp
faddl
std
aaa
cmp
mov
mov
aam
cmp
xchg
mov
push
sbb
dec
lods
ljmp
ficoms
ret
mov
imul
nop
sbb
leave
stos
pop
jp
xchg
cmp
fldt
sarl
dec
mov
pop
push
pushf
leave
cmp
pop
xchg
cs
and
push
fldcw
insl
lea
testl
decb
or
jns
out
push
mov
fbstp
mov
cltd
inc
xor
inc
and
mov
adc
nop
ret
or
mov
mov
lahf
mov
and
pop
jecxz
cmp
dec
and
mov
imul
es
push
fisubs
mov
xor
imull
loopne
das
mov
mov
test
shlb
lret
xchg
pop
sbb
rorb
out
sub
scas
mov
mov
test
sbb
jl
xor
lcall
adc
in
notl
in
into
in
iret
movsb
popf
aaa
pop
or
sub
sub
mov
jne
stc
mov
xor
xchg
pop
push
push
popa
and
enter
stos
ret
and
push
andl
repz
mov
xor
fadd
add
scas
xchg
in
xchg
mov
shlb
scas
fnstenv
aaa
mov
les
scas
test
mov
cltd
or
aam
or
sbb
mov
mov
in
repz
sbb
jns
and
jno
out
sub
mov
adc
inc
pop
mov
sbb
jnp
test
xlat
daa
call
mov
pop
loopne
or
mov
ret
mov
repnz
addb
inc
xchg
inc
jp
or
mov
cmc
shl
leave
jbe
adc
dec
mov
std
fnstenv
xchg
lret
xchg
inc
mov
pop
sarl
or
shr
aas
in
push
loop
into
jno
jae
and
ljmp
push
aaa
dec
sub
jbe
aad
adc
pop
in
pop
loop
std
scas
scas
lea
xchg
pop
in
mov
xchg
sarl
jmp
fcmovne
jge
or
cmpsl
push
imul
sub
mov
movl
adc
into
dec
push
mov
pop
push
dec
sbb
cld
scas
dec
jne
pusha
fwait
push
jo
pop
xchg
or
nop
cmp
stc
and
stc
iret
and
push
sub
xor
cmp
repz
mov
xchg
xchg
lret
push
pop
jmp
mov
fnsave
mov
roll
add
mov
outsl
sarb
inc
cmc
sub
lret
jmp
ror
and
mov
jp
sbb
adc
pop
inc
dec
testl
inc
xor
xchg
add
push
mov
aam
or
inc
insb
and
add
std
gs
push
js
lods
fwait
jae
lods
sbb
xor
test
adc
test
mov
sbbb
fsubl
push
pop
fwait
movsb
roll
rclb
sbb
cmp
test
inc
push
pop
xchg
mov
sbb
mov
aas
test
sbb
add
mov
ret
out
mov
iret
mov
push
jb
sub
pop
or
filds
lret
daa
rclb
shlb
inc
into
out
popf
add
lahf
push
adc
call
call
imul
cmp
push
or
loope
jge
dec
scas
jae
jmp
je
lret
aam
imul
test
es
push
mov
or
cmpsl
insb
cmpsl
stc
out
mov
sub
dec
ficoml
dec
push
sbb
sub
pop
xor
mov
and
into
mov
cmc
or
fistpll
mov
jmp
adc
xor
filds
pop
and
adc
inc
inc
and
pop
cmp
sbb
stc
inc
mov
cmp
adc
je
mov
hlt
gs
movb
sbbb
ljmp
imul
cwtl
stos
xor
ret
sub
lea
enter
add
les
in
ss
sub
fiadds
add
in
and
xor
jbe
std
cs
ficomps
scas
mov
mov
inc
imul
cmpl
sti
jbe
push
int3
mov
rorl
sub
clc
std
ret
out
mov
bound
sub
and
mov
imull
mov
call
xchg
xlat
xchg
gs
add
pop
xchg
mov
mov
pop
in
shl
movsb
fisubl
push
cmc
pop
cmc
lods
mov
pop
sub
es
cmpsl
sarl
add
mov
ja
mov
mov
not
xor
cmp
cmpb
mov
repnz
stos
inc
js
xlat
arpl
mov
add
xor
je
mov
stos
cmpsl
xlat
loop
push
inc
pop
mov
mov
push
mov
sbb
mov
outsb
cmp
daa
out
fldcw
mov
sbb
mov
pop
or
test
xlat
or
jecxz
add
push
popa
inc
mov
das
pop
pop
cld
push
adc
fwait
push
stos
pop
jmp
mov
xchg
mov
in
add
test
test
jno
aad
pop
sub
xor
and
or
cltd
imul
sub
jmp
dec
inc
push
mov
adc
sahf
iret
arpl
js
jb
fsub
lret
xchg
cwtl
jns
xchg
out
or
ja
leave
jl
xlat
or
lods
ja
addr16
fstpl
stos
dec
cwtl
adc
ja
stos
outsb
rorb
mov
aad
or
sub
ret
cmp
gs
shll
inc
shll
mov
fmull
sbb
les
xor
pop
or
xchg
jmp
das
aam
xor
stos
or
cmp
cmp
scas
dec
mov
rclb
mov
mov
mov
jo
pusha
jns
loope
movsl
in
jle
movsb
cmc
lds
lret
daa
fwait
loop
mov
rorl
incb
mov
mov
jl
or
cmp
and
xchg
mov
int
aaa
ds
jmp
bound
xchg
sahf
sbb
std
adc
xchg
call
sti
push
adc
jne
mov
pop
aad
and
shlb
inc
std
aad
std
pop
mov
movsl
jecxz
ljmp
sub
clc
cmpsl
outsl
jno
jbe
jno
mov
xchg
sti
push
mov
lock
popa
cmp
cli
lret
testb
popf
pop
sarl
mov
shl
xor
sub
mov
mov
ss
xor
add
in
imul
push
xchg
inc
mov
sub
pop
fisubrs
xchg
pushf
rorl
mov
outsl
dec
xchg
mov
pushf
push
pop
jmp
shl
xor
push
hlt
mov
pop
outsl
sbb
mov
roll
dec
adc
push
inc
dec
and
lea
fstpl
enter
cwtl
jns
in
pop
sbb
leave
loop
xchg
adc
pop
add
push
daa
ss
mov
sub
in
pushf
test
and
popf
pusha
jl
pushf
mov
pop
sub
sti
shlb
adc
jl
jecxz
lret
das
das
sbb
jb
es
jg
xchg
xchg
rorb
int
lock
loope
xchg
shlb
popa
and
sub
xor
jbe
and
pop
push
xor
movsb
sub
add
jb
push
loop
sub
sub
inc
pop
fsubr
enter
xchg
mov
xlat
imul
inc
aaa
jmp
sbb
repz
mov
push
stc
shlb
nop
test
dec
je
out
std
and
mov
dec
stc
popf
inc
mov
je
cmp
mov
test
xchg
movsl
jae
imul
ret
inc
repz
imul
push
mov
lahf
in
mov
dec
jo
mov
and
mov
test
mov
cmp
adc
mov
push
cld
xor
and
outsl
inc
test
cmp
cs
bound
xor
cld
cmp
loopne
lock
jbe
and
insl
imul
lock
mov
imul
mov
loope
pop
loop
popf
jge
jae
flds
imul
xor
or
mulb
in
cmp
mov
mov
lcall
ffree
jp
jmp
nop
xchg
int
sbb
aas
push
cmc
call
movsl
daa
sub
mov
cmp
fucomi
add
cmpsb
or
jo
dec
adc
and
pusha
inc
cmpsb
mov
pop
jno
daa
or
scas
insl
lret
clc
sbb
sbb
fdivs
in
mov
add
sub
adc
cmpsb
ret
outsb
fstpt
push
pop
sub
xlat
sbb
call
arpl
ficompl
movsl
cmp
test
stc
inc
cs
imul
adc
into
stos
sbb
dec
lret
xor
push
and
iret
lret
aad
pop
lods
mov
pop
mov
cltd
lret
cmp
jnp
sub
jne
adc
stc
mov
cmp
ljmp
repz
push
stos
scas
and
jb
cmp
mov
int3
cmp
sbb
and
stc
in
or
cld
out
jge
jle
dec
ret
or
ss
into
pusha
fidivs
xor
call
insb
cmpsb
pop
xchg
jecxz
lods
sub
and
adc
out
push
js
nop
mov
icebp
sub
adc
sub
aam
jp
test
sub
movl
sti
cmp
iret
lods
movsl
ret
cmp
inc
fs
mov
push
aam
ds
arpl
movl
icebp
inc
add
das
ret
fld
test
std
mov
or
cmpsb
mov
mov
out
or
mov
nop
test
shlb
or
mov
pop
stos
mov
pusha
scas
aad
mov
cs
decl
stos
fimuls
push
adc
std
fidivs
fstl
loope
or
mov
test
insb
lods
stos
imul
or
mov
dec
mov
rcll
sbb
out
movsl
lock
lcall
ja
and
dec
push
lods
sub
faddl
call
call
adc
fdiv
dec
outsl
fsubs
sub
mov
in
inc
jo
adc
cmpl
psubq
dec
push
adc
pop
adcb
rcrb
incl
mov
or
arpl
adc
into
in
push
cmp
push
sti
pop
mov
mov
lret
ret
cli
arpl
cltd
ja
lods
lret
repz
popf
fnstcw
icebp
xchg
mov
mov
adc
clc
pop
push
jg
pop
jg
mov
cmp
dec
or
push
sub
fiaddl
cmp
jnp
test
or
sub
sbb
sub
mov
call
outsb
mov
test
dec
jle
loop
jge
push
das
data16
cmp
iret
sarl
inc
and
or
in
movsl
js
leave
fwait
addr16
xchg
and
scas
mov
outsb
mov
fistpl
in
jmp
mov
jmp
int
jb
mov
inc
movsb
popa
inc
enter
xchg
movsb
out
xchg
push
cmp
add
add
cld
mov
cmp
xor
inc
aaa
addr16
clc
sahf
sahf
jmp
jne
dec
repz
inc
enter
test
repz
cld
cmpsb
mov
out
out
xchg
sub
push
xlat
shl
in
cmpsl
cmc
add
jecxz
outsb
sbb
mov
lock
sahf
jl
mov
popa
xchg
sbb
movsl
adc
push
sub
sub
mov
jg
sarl
loope
icebp
or
cmp
and
xchg
cmp
xor
mov
pushf
or
repnz
inc
hlt
mov
insl
mov
rcll
lcall
cmp
pop
fwait
sbb
mov
insl
or
cmpsl
xchg
mov
adc
stos
lods
leave
dec
mov
pop
push
stos
aam
outsb
push
mov
sub
add
jmp
lret
mov
setl
das
call
jns
dec
call
shll
leave
stos
or
sbb
cmpsb
ret
push
in
add
scas
cwtl
scas
rclb
xor
xchg
in
xchg
pop
jmp
call
xchg
shr
sub
les
and
push
repz
shl
imul
jne
mov
cmp
add
mov
lods
push
mov
adc
bound
loope
jmp
ret
in
sub
mov
test
jge
scas
xlat
clc
pop
minps
imul
or
xchg
mov
movsl
imull
arpl
inc
xor
mov
lods
test
xor
aaa
push
fwait
inc
push
fmulp
and
sbb
mov
mov
inc
icebp
xchg
insl
mov
adc
xchg
fstpt
cwtl
jnp
popl
jecxz
les
sti
jge
data16
in
lods
pop
inc
scas
call
xchg
loope
jp,pn
cli
cmp
jne
std
dec
cmp
ljmp
cmpsl
xor
lret
xchg
pop
adc
pop
or
adc
pop
pop
jge
jnp
popa
sar
and
or
out
push
popf
jecxz
add
jg
mov
push
cld
jbe
test
sbb
arpl
push
loopne
dec
mov
jmp
hlt
pop
popa
rcrl
stos
dec
sti
push
sub
in
jnp
mov
es
out
popa
test
mov
push
and
ret
int3
jne
fsts
ficoml
leave
mov
jns
mov
ja
cmp
call
push
and
jge
cld
shr
clc
loop
mov
in
jns
mov
loope
jmp
push
stos
pop
pop
adc
cmp
adc
pop
outsb
jne
imul
mov
jg
and
mov
mov
cmpl
fwait
fs
test
dec
inc
daa
scas
jnp
mov
sbb
inc
cmpsl
and
aaa
jbe
movsb
dec
scas
jne
cmp
jecxz
mov
loop
push
sub
xor
mov
adc
dec
divps
inc
cmp
cld
push
push
addr16
push
test
jle
adc
shlb
fsubl
or
fsubrs
es
push
gs
ret
aad
mov
mov
mov
push
adcb
push
pop
nop
sahf
xchg
filds
mov
push
xchg
push
jo
mov
adc
out
ss
mov
loop
xchg
or
out
cmc
add
xor
in
loop
mov
lret
inc
orl
jle
push
and
dec
xchg
xchg
cmp
push
cltd
lahf
cmp
and
jg
jne
test
jecxz
clc
roll
mov
pop
stc
xlat
mov
adc
hlt
push
icebp
mov
rcrl
lock
or
mov
scas
repnz
insb
iret
lahf
or
add
mov
cmp
lds
idivb
and
jg
fs
or
jg
xchg
pop
rol
mov
loopne
cmp
adc
call
mov
ss
xor
lock
mov
mov
cmpsl
xor
adc
cmpl
mov
pop
adc
xchg
aaa
daa
pop
adcl
out
lret
dec
sub
fidivs
jae
and
push
and
mov
les
mov
pop
mov
jmp
aam
or
loop
shl
xor
pop
xor
xlat
mov
loop
repnz
inc
insb
sarl
and
jo
out
negl
dec
lods
xorl
enter
cmpb
pop
fcmovnbe
fadds
mov
mov
loope
mov
mov
mov
or
mov
les
adc
jecxz
mov
imul
mov
scas
test
outsb
mov
nop
inc
pop
les
or
shlb
jp
mov
insb
sub
arpl
leave
jo
sti
xor
jp
pusha
test
test
jmp
fimull
sbb
arpl
daa
sti
loope
iret
xchg
or
roll
scas
add
rcrb
xchg
xchg
adc
ret
mov
lea
mov
inc
faddl
jae
mov
loop
in
fistpl
imul
negl
lock
xchg
or
xlat
popf
in
cmovae
mov
stos
xchg
inc
mov
jmp
cwtl
mov
sbb
call
loop
test
lock
mov
jmp
cmp
xchg
jae
mov
inc
jns
dec
test
push
aas
push
jno
cmpsl
ret
mov
adc
and
lret
dec
push
in
int
repnz
inc
or
mov
inc
iret
dec
loope
and
shr
sbb
shrl
cmp
jnp
push
fisttps
insb
div
leave
call
enter
lcall
call
out
outsb
cmp
push
imul
scas
ljmp
loope
xor
adc
mov
cmp
repz
bound
mov
cld
ljmp
sub
add
test
pop
test
push
dec
inc
pop
and
aam
addr16
je
andb
mov
aas
mov
xor
cmp
data16
dec
subb
jecxz
push
push
xchg
cmpsl
stos
rorl
bound
or
cwtl
pop
adc
mov
cld
push
xlat
cmpsl
out
xchg
test
movsb
add
sub
outsb
xor
or
cli
mov
fwait
popa
jnp
fiaddl
loope
dec
into
loope
js
mov
out
js
jns
ss
ficompl
jno
icebp
ret
jb
and
and
sbb
xor
out
push
subl
add
shlb
rcr
popa
unpcklps
push
ret
or
lret
mov
mov
ljmp
pop
dec
xor
dec
and
lahf
xchg
xchg
repz
sbb
mov
mov
adc
dec
add
push
fisttpl
adc
in
inc
mov
sub
push
outsl
push
xchg
pop
sub
adc
pop
lret
xor
jmp
inc
push
sbb
loop
cmp
xchg
and
and
add
jae
inc
aam
sub
sahf
shrb
shr
cmc
mov
repz
leave
cmpsl
jne
in
adc
dec
mov
jecxz
adc
aad
inc
mov
imul
dec
ficomps
jle
in
test
push
outsb
popf
jmp
push
test
inc
js
mov
adc
or
inc
mull
push
xor
and
push
sti
gs
mov
sub
ficomps
rcll
mov
push
lret
ret
cmp
mov
js
push
clc
jb
std
adc
outsl
loop
cmp
popf
add
or
xchg
and
aam
lcall
es
shlb
pop
sbb
and
aad
jbe
xchg
mov
adc
fidivs
inc
mov
outsl
sti
lea
test
xor
fwait
shll
jne
or
pop
jnp
leave
ds
stc
xchg
xchg
fcoms
inc
jg
stc
add
iret
ret
pop
and
popf
pop
lahf
fidivl
int3
inc
mov
cs
xor
sbbl
add
scas
loope
mov
jg
hlt
fisttpll
add
pop
sub
push
pop
mov
or
lret
mov
movsl
js
and
xor
sahf
js
mov
jle
mov
out
mov
scas
dec
cltd
cmp
shr
dec
int
rorl
mulb
enter
mov
dec
fisttpll
xor
pop
ja
andl
add
or
decb
aad
fisttpll
sar
xchg
imul
negl
stc
dec
cmp
mov
cmp
jg
ret
int3
leave
sub
stos
test
lods
pop
cli
push
icebp
xchg
push
leave
inc
xchg
aad
insl
fdivs
mov
in
or
movsl
pop
aas
data16
dec
cmp
mov
or
mov
push
or
mov
ret
or
xor
inc
test
sbb
push
call
adc
fsubrs
insl
push
imul
mov
out
cmp
jle
push
leave
mov
pusha
js
push
lds
xor
cmp
frstor
push
shlb
jmp
or
xchg
xor
dec
or
jmp
out
ss
jmp
pop
cmp
andl
rcll
repnz
lock
fmuls
pop
pop
inc
and
repz
dec
call
lea
push
bswap
gs
mov
inc
and
aam
inc
fisttps
xor
in
nop
lock
arpl
cltd
mov
fs
loop
cltd
cmp
mov
cmp
in
movsl
mov
mov
in
jecxz
cmp
jle
dec
cmp
call
dec
imull
out
ret
aad
stos
das
je
pop
push
mov
mov
sbb
int
loop
and
not
sub
shlb
and
test
leave
inc
daa
decl
lods
push
loopne
cmp
cmp
aam
jge
lahf
outsl
insb
xlat
add
outsl
add
cmp
mov
sub
xor
lcall
hlt
jbe
sub
pop
cli
in
imul
insl
xor
inc
stos
lods
jmp
out
push
adc
cmp
in
jmp
jne
mov
inc
jo
orl
cmpsb
div
cli
and
and
sahf
dec
xor
lret
aaa
sub
push
inc
inc
out
aad
pop
ds
insl
popf
jne
lcall
enter
aas
mov
lret
test
push
orb
stc
div
jb
xor
insl
mov
loopne
sahf
and
sarl
js
jmp
cmpsb
jmp
push
lock
push
popa
and
in
xorb
ljmp
xor
pop
in
test
pop
sbb
in
sub
ret
pop
ret
or
jb
ss
mov
mov
pop
dec
and
mov
sbb
xor
jae
add
and
pop
mov
jecxz
outsb
rcrb
in
or
iret
les
pop
inc
imul
nop
pop
xchg
sub
sarb
mov
mov
lcall
mov
or
iret
push
mov
mov
xor
mov
push
ficoml
aam
xor
out
cmp
in
sub
stos
mov
not
push
lcall
xor
arpl
sbb
mov
stc
push
das
fsts
jmp
testl
push
dec
add
jl
fbld
call
lea
scas
in
in
mov
mov
or
add
in
pop
pop
ror
pushf
ljmp
mov
push
inc
std
ret
stos
sbb
aas
loope
sbb
dec
xlat
pushf
rorl
gs
nop
jbe
test
sub
dec
cltd
xor
dec
sbb
jbe
pop
jle
push
insl
addl
sub
jg
add
push
std
insl
mov
out
ret
push
daa
bnd
cli
test
sbb
out
mov
insb
leave
dec
hlt
dec
push
mov
insl
orl
scas
aam
mov
push
data16
aas
push
lods
push
out
jle
mov
out
fstpl
subl
cmpsb
mov
push
sarb
sub
mov
icebp
lcall
cmp
faddl
lret
cmp
scas
popf
cvtps2pd
jae
xor
psrlw
pop
test
ljmp
mov
xchg
and
mov
cwtl
dec
adc
mov
mov
popf
or
add
xor
mov
sub
sbb
cltd
mov
sbb
out
lcall
add
stos
int
addr16
jle
fsubr
mov
testb
ds
jb
jp
insl
stc
jnp
orb
xlat
enter
inc
mov
ljmp
sbbb
push
cmpsb
sub
dec
fsubrl
out
inc
into
in
mov
xor
sub
mov
adc
mov
mov
pop
ds
test
xchg
sub
jno
push
sarb
jp
repnz
rolb
lret
sti
pop
cmp
mov
push
cmp
aaa
iret
push
repz
adc
bnd
add
mov
stos
sbbl
mov
jbe
jg
mov
icebp
cld
mov
push
sbb
pop
test
aad
fucomp
aas
je
int3
pusha
xchg
imul
mov
cltd
test
cmp
test
xchg
mov
inc
imul
ret
arpl
pop
fsub
mov
clc
sbb
repnz
xchg
mov
or
mov
cmpsb
loop
leave
xchg
push
ss
push
sub
jb
fnsave
pop
in
xchg
fldt
out
int3
movsb
fldenv
sbb
jle
add
mov
adc
cmc
xchg
mov
mov
xor
sub
mov
aaa
lret
stos
into
and
fnstenv
movsl
jb
xlat
nop
repnz
cmpsb
jae
jmp
ss
lock
xchg
pusha
ss
aas
loopne
mov
out
into
ds
fisubrl
xchg
repnz
mov
dec
adc
sub
imul
es
sbb
aas
cmc
push
idiv
mov
cltd
fadd
xchg
sbb
xor
or
cld
sbb
ds
sub
pop
lods
pusha
in
dec
pusha
jmp
adc
lret
scas
dec
mov
out
mov
in
mov
xchg
mov
adc
sbb
push
xor
push
fucomip
pop
jae
cld
mov
mov
addb
sar
xchg
mov
test
xor
imul
add
test
lahf
test
dec
adc
xchg
je
ja
sbb
or
repnz
dec
pusha
mov
movsl
jb
pop
ljmp
add
dec
stos
push
mov
mov
sbb
push
out
adc
in
test
mov
cmpsl
clc
fwait
or
sbb
sbb
push
push
push
aaa
shrl
mov
fisttpll
loopne
xor
adc
rol
call
orl
pop
pop
cmp
sub
mov
ljmp
or
jg
in
lods
pop
scas
pop
enter
cmp
lret
mov
jmp
pop
into
cli
mov
inc
test
int3
jmp
jg
sub
bound
loop
jae
push
repnz
jle
mov
js
mov
icebp
es
add
out
repnz
repnz
mov
mov
jnp
out
stos
rol
or
mov
push
fisubs
sbb
or
cmp
adc
scas
pop
aas
push
cmp
imul
jp
inc
add
hlt
mov
mov
inc
push
push
daa
popf
movsb
push
dec
ret
xchg
or
dec
loopne
sub
fidivl
mov
mov
jbe
ret
jl
lock
adc
push
data16
pop
mov
xchg
out
fsts
or
rcr
mov
ss
stc
mov
sbb
pop
sahf
xchg
push
jmp
jmp
inc
mov
sbb
lods
mov
inc
lcall
sub
int
or
das
or
roll
sarl
lcall
add
sbb
cmp
or
xchg
aaa
mov
cmp
neg
cld
out
lahf
mov
mov
or
in
imul
call
or
push
and
dec
shrl
fwait
pop
lret
and
ret
sub
sub
fs
stos
mov
cmpsl
pop
push
xchg
adc
adc
enter
fucomip
fsincos
in
stc
sbb
int3
mov
push
mov
add
stc
or
movaps
xchg
rorl
jb
dec
jne
mov
dec
jns
cmpsb
scas
add
dec
push
into
or
or
mov
xchg
rorb
call
ljmp
bound
jmp
sub
lret
movsb
test
xchg
push
add
jmp
push
mov
adc
rep
jns
cmpsb
imul
cmp
outsl
call
sbb
xchg
arpl
jle
sbb
leave
in
cmpsl
lahf
bnd
fbstp
arpl
loop
inc
jno
call
add
fidivs
sbb
loopne
pop
dec
inc
xor
jb
loop
fistpl
xchg
sub
in
sub
movsl
movsb
aas
jg
lret
mov
add
cld
pusha
cltd
subb
rcll
mov
cltd
jecxz
insl
mov
and
sti
xchg
stc
dec
inc
pop
mov
jl
popf
repz
add
add
jns
or
inc
aad
fsubl
dec
sbb
test
xchg
rcll
mov
inc
mov
mov
jmp
jecxz
ret
lods
jmp
je
push
mov
sub
jnp
mov
sbb
xchg
cmp
mov
fs
lcallw
jecxz
add
and
movsl
jo
and
jbe
mov
mov
leave
adc
inc
inc
inc
mov
repz
cmp
sub
cmp
sbb
leave
movsl
popf
or
jg
push
sbb
cltd
nop
stc
nop
pop
rorb
fsubrs
out
inc
dec
dec
in
cmp
fstps
testl
out
add
sub
inc
movsl
dec
subb
lods
or
lods
sub
outsl
xchg
adc
cmp
fwait
sub
xor
inc
scas
out
jmp
inc
xor
movsl
shl
mov
jae
mov
sub
pop
subl
push
clc
sub
cmp
push
jno
lret
inc
xor
dec
insl
out
xchg
imul
mov
cmpsl
push
insl
sub
jno
les
push
into
icebp
mov
sub
adc
andl
inc
inc
push
xchg
lods
jg
je
xchg
lret
sbb
mov
repz
pop
sar
and
pop
lock
fmul
and
repnz
jne
mov
bound
adc
sbb
pop
mov
xor
mov
cmp
mov
mov
fistl
je
leave
push
hlt
mov
xchg
js
and
int
push
and
cmp
xor
jp
push
aam
fidivrs
imull
pop
and
rorl
ja
repz
aad
pop
and
les
mov
fisubs
inc
test
xchg
cmpsb
insl
inc
ja
lret
addl
sbb
cmpsl
int
lds
push
adc
inc
stc
rorb
scas
cmp
lods
int
loopne
xchg
xchg
cmp
xchg
ss
fildll
inc
repz
imul
dec
xor
out
fsubr
cmpsl
jb
in
out
loope
add
in
inc
and
mov
mov
pop
cltd
pop
xchg
xor
xor
mov
xchg
pop
dec
testl
sbb
out
mov
push
inc
leave
repz
test
ja
pop
dec
cs
or
sub
jecxz
fldcw
mov
leave
imul
in
adc
mov
dec
ss
sub
icebp
or
ret
xor
icebp
addr16
ja
subb
stos
call
lahf
sbb
es
adc
cwtl
or
movsb
incl
lock
jge
out
or
adc
xchg
jle
sbb
cltd
jmp
bound
test
repz
sarb
icebp
push
fistps
cmp
cmp
dec
dec
inc
sbb
xor
cmp
mov
jno
pop
test
ret
sub
or
das
xchg
push
bnd
and
mov
and
jb
cwtl
and
mov
lea
out
xchg
outsb
mov
jmp
mov
mov
cmc
loope
sti
gs
out
xor
pop
or
andb
pop
xchg
dec
cmp
int3
sbb
add
mov
and
dec
aaa
js
gs
push
mov
fsubrl
insl
sar
icebp
imul
fldl
mov
lea
dec
cmp
sbb
pushf
in
into
in
jle
push
es
scas
mov
lret
fdivrs
orb
outsb
movsb
fs
notl
pop
rolb
xchg
cmc
mov
in
out
jae
test
sbb
dec
xlat
lret
mov
jmp
adc
cmp
scas
mov
cmc
mov
repz
cmp
outsb
in
repnz
insl
sub
inc
pop
inc
mov
stc
loopne
xor
dec
pop
lods
nop
and
jle
jnp
jae
xchg
add
mov
cmp
pop
mov
mov
outsl
or
push
add
add
jnp
cmp
movzbl
sub
lods
gs
cltd
popf
dec
test
push
mov
lret
cmp
jecxz
jmp
xorl
test
out
jmp
sub
jmp
test
pop
in
jle
mov
fists
dec
popa
dec
add
andb
sbb
mov
mov
scas
imul
xlat
mov
adc
rcrb
mov
push
sub
fistpl
sub
xchg
ss
js
mov
mov
aam
xchg
ficompl
movsb
jge
sarl
add
nop
xor
adc
pop
mov
ficoml
shrl
loopne
jg
jb
sar
mov
ret
std
aam
ficomps
sbb
daa
inc
xchg
lock
cli
repz
sbb
cmp
or
ds
loope
pop
jns
aad
jno
imul
lea
mov
sbb
mov
pop
sbb
or
das
in
or
aas
jmp
in
cs
mov
popa
dec
imul
push
sub
fld
jno
rorl
jbe
lods
ss
mov
cmp
loope
test
out
sarl
loopne
inc
xor
gs
dec
cld
xchg
lahf
lea
jmp
cs
mov
movsl
jne
in
rcll
xor
and
mov
pop
adc
aas
cmp
es
pop
loope
add
jno
sbb
add
sbb
sub
roll
outsb
and
mov
xor
cli
div
out
jp
stos
add
cmc
popf
xchg
cmp
cmp
outsb
jbe
rol
lahf
xchg
imul
inc
in
shlb
mov
inc
inc
mov
dec
popf
imul
aad
jecxz
mov
push
jmp
mov
jno
imul
sub
outsl
jne
andb
pop
ficomps
pop
mov
fwait
mov
dec
cmp
addb
xchg
xor
fbstp
shl
push
int3
ret
and
test
mov
pop
mov
insb
sbb
jmp
mov
in
fdivrs
and
xchg
cmp
cld
pusha
arpl
shlb
xchg
push
cmpsb
sub
sub
mov
or
ret
cmp
and
dec
lea
xor
xchg
or
in
push
cli
lahf
xor
inc
mov
fidivrl
pop
popa
dec
adc
push
leave
repz
mov
loop
test
dec
cwtl
pop
daa
jmp
and
or
addl
or
add
insl
in
out
andb
pop
ret
nop
mov
lods
jp
fidivl
ret
jo
fs
loope
pop
enter
les
sub
adc
mov
negb
lods
or
jge
iret
pop
and
mov
in
lods
push
mov
push
pop
lret
cld
mov
test
int
sub
repz
test
aad
out
lcall
push
dec
sub
inc
hlt
mov
xchg
cmp
jl
jmp
cmp
aaa
inc
cmp
lret
and
test
xchg
movsl
cmp
outsl
mov
ret
adc
loop
and
sbb
sub
aad
sub
jno
out
pop
adc
mov
cmp
sub
mov
cmp
adc
cmp
xor
pop
sti
aas
adc
imul
stos
dec
pop
xorl
fldt
jle
jp
pop
mov
lea
clc
lock
cmp
in
and
inc
iret
mov
xchg
inc
in
sub
push
arpl
pusha
push
cmp
jg
enter
call
jp
mov
pop
loopne
adc
lods
mov
ds
stos
push
and
xor
dec
mov
outsl
add
movsl
adc
cmp
sub
lret
cltd
push
daa
test
xor
loope
xchg
jnp
aad
lea
pop
xchg
pop
dec
insl
sub
or
arpl
jmp
scas
or
sub
mov
xor
in
mov
jmp
dec
push
jb
jne
call
push
inc
adc
lret
stos
sub
and
das
jmp
and
leave
adc
pop
out
lahf
insl
push
push
les
testb
sti
inc
ficompl
dec
mull
jno
sub
out
push
gs
xor
nop
into
jmp
lods
adc
sbb
push
sub
cmpl
loop
dec
cmp
arpl
int
jns
push
inc
mov
fcoms
repnz
int3
mov
mov
int3
mov
imul
xlat
mov
pop
or
addr16
mov
movsl
jge
pop
lahf
stos
out
mov
cld
jp
les
cmp
inc
loop
out
aaa
scas
mov
mov
xchg
enter
cmp
aam
sub
out
pop
dec
sbb
sbb
data16
into
loope
loop
je
mov
mov
sbb
lock
imul
dec
xchg
jge
jp
push
cli
mov
popf
cmp
xor
lock
xchg
jl
mov
jne
mov
js
pop
mov
cmp
sub
pop
ffreep
ret
mov
adc
push
jge
outsl
mov
loope
xchg
jo
jno
mov
cltd
sub
out
repz
je
adc
xchg
fst
fidivl
dec
es
loopne
sub
and
mov
out
mov
jb
lahf
sub
popf
push
pop
icebp
data16
lcall
ljmp
jbe
mov
lea
jl
test
shl
push
mov
mov
aad
out
out
jno
jmp
xchg
arpl
push
push
mov
pop
adc
adc
bound
dec
int
add
repnz
sub
decl
jle
fistps
test
andb
into
fdivrp
mov
mov
xchg
adcb
es
ds
std
jae
insl
jno
mov
jo
and
adc
out
test
lcall
testl
push
pop
xlat
inc
clc
repz
and
cmc
imul
outsb
or
test
sub
push
and
mov
jno
mov
add
push
and
lret
xor
cmp
sub
inc
push
in
jmp
cmpsb
push
in
xor
or
leave
jle
mov
mov
or
in
adc
ljmp
push
mov
dec
mov
les
cltd
ds
out
je
xchg
cmp
nop
add
movsl
jge
shlb
push
mov
jb
iret
inc
movsl
int3
dec
push
xlat
sbb
int3
sbb
sbb
or
dec
ds
gs
xchg
and
aaa
popl
lret
mov
xor
sti
xchg
sub
shlb
scas
enter
sub
insl
xchg
jno,pn
data16
cmpsb
push
push
repnz
sub
into
into
sub
mov
in
dec
xor
lret
jg
std
movl
adcb
or
inc
loopne
adc
repz
xchg
xchg
sub
aam
mov
data16
lods
lock
cmp
mov
je
inc
mov
in
xorb
jmp
adc
fisttps
iret
jmp
inc
lods
cmp
lahf
push
dec
or
ds
aaa
sbb
xchg
dec
xor
data16
sub
cmp
pop
test
mov
xchg
out
fstcw
pop
xchg
mov
add
jecxz
pusha
mov
mov
rorl
aaa
add
cmp
or
cmp
add
in
pop
pop
pop
and
pop
fsubrs
push
adc
push
xchg
add
xor
and
mov
add
js
cld
mov
roll
scas
lret
and
addr16
cmp
addr16
lcall
mov
pushf
and
into
sbb
lcall
jge
sahf
popf
sbb
stos
lcall
lea
cmpsl
push
dec
loop
nop
push
mov
loop
cmp
sbb
mov
add
lds
nop
dec
js
push
lret
mov
inc
and
xchg
addr16
lcall
mov
fsubs
into
jecxz
add
or
jl
test
inc
jle
mov
rorl
loop
jb
fnstsw
mov
mov
loope
cs
js
sbb
xchg
mov
maxps
cmpsl
mov
ret
xchg
stos
dec
xlat
into
pusha
pop
pop
out
int
call
add
mov
je
xlat
mov
test
repz
ja
fiadds
sbb
loope
bound
mov
enter
or
jecxz
pushf
adc
hlt
and
xchg
out
std
mov
in
aas
lods
mov
clc
leave
lock
xor
lret
sub
dec
inc
mov
xlat
scas
aaa
filds
loope
sub
in
fldt
fwait
and
jmp
xor
cmpsb
inc
mov
mov
scas
sbb
daa
jbe
adc
into
lret
nop
in
inc
cli
lock
xchg
xor
mov
cmp
adc
and
fxch
faddl
pop
lods
das
fsubl
adc
mov
jl
lret
aad
cmp
clc
xlat
jb
sub
popf
filds
push
fsubp
mov
arpl
ficomps
testl
test
ret
insl
jno
lods
push
sbb
mov
clc
mov
loop
loop
ja
icebp
test
pop
or
js
ss
fnstenv
cs
jnp
jae
stos
cli
fistps
mov
adc
dec
or
cmp
jno
insl
sub
ljmp
loop
scas
and
inc
mov
cwtl
ljmp
mov
cs
mov
int
xchg
pop
dec
mov
frstor
mov
fistpll
popa
xlat
rclb
push
loope
sub
rcrb
or
popa
out
pusha
push
imul
and
mov
flds
push
xor
mov
mov
or
gs
lret
repnz
lods
add
cwtl
repz
pushf
mov
fdivp
fadd
cmp
iret
daa
icebp
push
mov
push
fsubrs
mov
loope
sbb
xor
push
hlt
xor
leave
xchg
pusha
stos
xor
lds
cmp
jne
sbb
fsubl
das
xchg
or
cmp
mov
mov
fnstenv
dec
pop
stos
std
dec
and
cmpb
femms
xchg
popl
cli
pop
aad
pop
jge
shll
mov
lds
inc
movsb
xor
and
jp
cmp
cmpsl
aad
mov
push
jp
push
outsl
pop
stos
push
sbb
inc
jp
jl
adc
into
testb
xchg
lds
mov
pop
mov
add
push
dec
mov
fistl
mov
ret
nop
mov
cwtl
mov
addr16
xchg
shrl
sub
fistl
mov
jns
loope
rorb
scas
jmp
stos
dec
dec
xor
jp
cli
out
sbb
ja
pop
into
push
jl
imul
cmp
mov
test
add
sub
ret
mov
test
shl
movmskps
push
ret
repz
clc
cs
push
push
mov
cmp
sub
ja
xchg
push
pop
mov
jne
mov
cwtl
ret
push
and
insl
loopne
mov
cmpsb
sub
or
leave
inc
icebp
fbld
bswap
dec
scas
repnz
ja
pop
dec
cmp
mov
das
loope
lds
aaa
push
jmp
inc
cmp
xor
ljmp
loope
ss
lods
test
sbb
outsl
ret
mov
scas
pop
in
xor
loop
jmp
sub
les
xchg
lods
and
addr16
push
loop
mov
cmp
inc
jl
ds
lock
add
and
sub
aaa
jge
pop
mov
scas
mov
pop
jb
mov
add
push
pop
cld
imul
das
sbb
inc
subb
aas
shll
cmp
cmpb
pop
insl
jge
add
outsb
aas
and
mov
lahf
sub
in
cmp
jbe
repz
push
mov
mov
adc
lahf
lret
cmp
fstpt
pop
xchg
jle
dec
or
xchg
jecxz
xchg
outsb
mov
or
lahf
or
xchg
mov
cwtl
mov
addr16
or
js
enter
xchg
fnstcw
jle
sub
sbb
push
mulb
push
mov
sar
outsb
pop
dec
ljmp
fsubl
ror
mov
push
mov
sub
test
add
pop
jmp
ret
addb
add
xor
ss
stc
mov
add
in
movsl
xlat
xor
cmp
cmp
add
jmp
out
lahf
ljmp
rcll
mov
pop
in
jno
jge
test
xchg
jl
jns,pn
or
leave
xor
leave
imul
and
popf
dec
jns
cmp
filds
cmp
xlat
or
cwtl
mov
jb
in
outsb
jge
pop
push
test
dec
xchg
sub
lret
repz
gs
lds
test
cmp
add
pop
in
fldcw
cli
dec
ljmp
mov
daa
incb
adc
jl
fildl
repnz
jmp
movsl
jno
cmp
enter
jp
mov
inc
enter
xor
xor
sub
cmp
cmc
int3
mov
fnsave
jbe
fbld
xchg
push
sbb
sahf
dec
outsb
mov
stos
xor
gs
in
inc
shl
out
pop
cmp
rcrl
or
rcrl
and
jnp
inc
pusha
mov
popa
jecxz
into
push
add
mov
xor
cmpsb
sbb
mov
nop
ret
add
add
or
add
shrl
fiaddl
loope
sbb
mov
add
mov
mov
aam
cli
push
xor
dec
cmp
movsl
push
into
sbb
xor
jno
xor
in
mov
repnz
sub
push
mov
ljmp
int
adc
mov
cmp
ror
arpl
outsl
mov
idivl
ljmp
fadds
push
add
fs
idiv
jge
mov
xchg
fnstcw
pusha
inc
aaa
pusha
fisubl
jle
jle
cmp
dec
mov
ret
sti
inc
pop
iret
mov
mov
xchg
pop
pop
mov
mov
sbb
leave
scas
cltd
bound
ljmp
aam
fs
cmpsb
hlt
pop
inc
test
fistl
mov
enter
jmp
jecxz
cmc
stos
rcll
jns
rclb
loop
std
ret
jmp
lcall
mov
ljmp
inc
xor
pop
and
lret
bound
mov
adc
imul
out
stos
loop
fstl
aas
dec
mov
pop
sbb
push
inc
insl
jge
cmp
xlat
mov
xchg
cmp
neg
or
dec
int
push
mov
stos
hlt
cltd
dec
mov
addb
movsl
jle
xchg
in
dec
stc
pop
mov
pop
scas
inc
jle
stos
cmpsl
push
xlat
sbb
pop
cs
punpcklbw
or
mov
xchg
mov
ds
cmpsb
mov
repz
jae
jns
xchg
mov
enter
or
fbstp
test
enter
or
repz
xchg
sbb
cli
adc
fldt
xlat
faddl
dec
in
inc
pop
ret
sub
rcrl
pop
mov
mov
incb
js
mov
arpl
mov
push
call
int
xor
sbbl
mov
sub
data16
jb
jmp
mov
pop
fdivs
push
aad
fwait
dec
maxps
add
loopne
sub
mov
cmpsl
and
pop
fucomp
add
mov
rcrb
in
aam
std
jnp
pop
fs
lock
out
lods
mov
mov
sahf
sbb
cmp
cmp
enter
xchg
or
inc
mov
ljmp
sahf
imul
movsl
cs
sub
test
pop
mov
out
lea
add
movsl
insb
adc
xchg
mov
enter
into
cmc
cmp
int3
lods
test
sbb
xlat
jne
jno
inc
pop
mov
adc
mov
push
std
push
cltd
jno
add
sub
scas
inc
xor
loop
mov
cmp
sbb
lods
lea
jg
sbb
cld
hlt
stos
stc
xor
jmp
in
and
and
cmc
pop
test
ss
cmpsb
mov
pop
into
repz
loope
popa
ret
xchg
jae
lods
out
aas
xchg
xor
repnz
push
inc
jl
das
dec
sub
cmp
aas
fildll
ljmp
mov
icebp
ret
xchg
insb
lea
pushf
xor
ss
insl
push
out
ret
stos
dec
in
shll
xor
mov
mov
shll
rclb
dec
xchg
iret
in
insl
mov
jns
xchg
insl
stc
jbe
cmpsl
jmp
sti
lods
lock
dec
arpl
out
fisttps
xchg
cmp
mov
dec
xor
adcl
movsl
xchg
outsl
mov
inc
aaa
xchg
dec
xchg
cmc
cmpsb
mov
inc
out
lods
loop
pop
add
das
int3
push
push
xor
adc
mov
or
and
mov
and
push
or
xchg
mov
xor
pop
repz
pop
jecxz
call
sbb
jb
jae
push
addl
je
lock
lock
aaa
into
adc
aaa
test
fadd
mov
push
or
dec
jg
icebp
mov
push
push
push
scas
add
push
divb
xchg
fidivl
pop
jg
add
out
in
xor
jl
add
inc
push
cmp
inc
push
es
sbb
arpl
pop
repnz
aad
es
clc
shr
ret
shrl
in
test
stos
jns
mov
jecxz
mov
ret
insb
inc
std
dec
ja
inc
adc
pop
xorl
jl
call
push
fbstp
dec
fwait
cmpb
or
xchg
aad
xor
loope
lcall
xchg
scas
sti
repz
stc
xor
call
fstcw
mov
fwait
outsl
idivl
stos
dec
dec
and
jbe
cltd
mov
jnp
mov
aas
mov
fcoms
mov
bound
and
sub
dec
push
arpl
mov
dec
pop
fldt
ror
fisttpll
mov
sahf
cmp
sub
cmp
in
jle
cltd
push
movsb
add
sbb
aas
stos
xchg
mov
jne
dec
xchg
imul
cmpsl
and
adc
in
clc
es
pop
and
es
mov
sahf
xchg
hlt
pop
loopne
lds
inc
and
arpl
testl
or
mov
not
leave
fisttpl
xor
dec
outsb
push
add
push
jae
xchg
fucomip
mov
scas
xor
js
add
decb
call
jnp
imul
bound
mov
cld
and
outsl
outsb
dec
adc
sbb
adc
jb
or
fwait
push
ret
xor
addl
insl
cmpl
insl
jb
and
push
mov
bound
mov
sti
ds
enter
pushf
out
push
inc
nopl
fisubs
pop
and
sbb
jns
and
add
call
xor
jo
push
loop
push
sbb
enter
sbb
loop
add
push
outsl
sub
cmp
div
dec
fcmovnu
fwait
imul
imul
mov
jnp
adc
jmp
inc
rclb
ss
repnz
lods
or
pop
jb
inc
lods
jp
mov
push
jb
inc
mov
int
arpl
lret
jb
ljmp
sbb
ljmp
xor
test
insl
in
inc
imul
pop
lods
mov
jno
shl
mov
mov
int3
xchg
lods
out
enter
xchg
xor
xor
shl
xchg
dec
aas
cld
xchg
sub
xchg
imul
out
mov
push
push
mov
mov
push
std
mov
push
test
in
push
lock
dec
adc
loope
cmpsl
test
add
stc
sti
ljmp
jp
mov
sbbl
jecxz
cmp
addr16
movsb
sub
fldl
adcb
or
mov
xchg
mov
or
outsb
bound
outsb
and
push
loope
jnp
xchg
cmc
popf
pop
jno
leave
ret
js
xchg
inc
movsl
in
or
rol
iret
arpl
fildl
dec
sar
push
jl
rol
pop
mov
push
xchg
push
add
xor
movsl
rorb
jns
push
xor
mov
xchg
pop
in
pop
pop
push
xor
addr16
add
xor
xlat
call
gs
insl
and
pop
repz
adc
mov
call
into
cmp
mov
jp
es
sub
mov
mov
dec
push
or
shll
in
xchg
cs
cs
aas
add
test
mov
test
sub
and
dec
call
out
add
int
mov
in
popa
lods
movsb
aaa
xor
imul
mov
test
adc
sbb
jecxz
rcrl
negl
popa
inc
adc
inc
lret
into
xchg
fwait
or
and
sbb
fmulp
xchg
jmp
dec
lea
arpl
test
and
leave
sub
lods
inc
add
cmp
dec
mov
iret
xor
arpl
push
rorl
push
mov
xchg
loopne
lcall
ss
xor
cmp
fstpl
xor
jge
in
mov
bound
pop
push
int3
cli
fildll
xor
add
ficoms
clc
frstor
fnstcw
movsl
js
sub
adc
out
js
xchg
in
into
loop
imul
insb
jp
dec
xor
and
and
fisubl
push
push
add
cli
fisubrl
fstpl
mov
loop
and
test
mov
roll
fadds
pop
ljmp
inc
mov
mov
push
ljmp
pop
dec
cmp
scas
fcmove
jmp
ret
test
inc
cmp
adcl
ret
out
xchg
or
jmp
filds
lret
adc
inc
ret
loop
ljmp
out
pop
pop
inc
sub
add
jbe
shr
icebp
xor
aas
imul
int
push
dec
aad
rcrb
aaa
ret
inc
bound
pop
shrb
in
lock
sahf
daa
pop
rorl
orl
adc
movsb
call
or
enter
push
or
aaa
and
cmpsb
push
mov
add
sub
push
mov
stos
sub
iret
jmpw
pop
mov
adc
out
dec
out
in
shl
dec
aad
mov
sub
cld
out
or
dec
insl
sahf
lock
scas
insb
and
xor
ljmp
sub
mov
sub
cmpb
stos
lds
imul
es
xor
fwait
and
dec
mov
dec
jns
dec
repz
sub
xor
icebp
xchg
mov
jg
flds
jbe
pop
scas
pop
push
mov
cli
repz
adc
mov
and
xor
mov
movsl
jmp
paddsb
xchg
mov
inc
xor
adc
sub
dec
scas
mov
jne
cmpsb
sahf
xchg
sub
andl
out
mov
jmp
adc
mov
pop
imul
mov
arpl
and
pusha
dec
sbb
add
xor
and
movsl
outsl
test
lods
sub
adcl
xor
out
pop
pusha
loope
xchg
pop
fdiv
add
dec
das
loope
pop
orb
mov
scas
and
push
or
lret
pop
adc
push
xor
or
jne
jmp
inc
test
mov
repz
cltd
mov
pop
adc
repz
push
fcompl
push
xchg
or
das
sub
jg
mov
and
or
add
rclb
adc
dec
adc
dec
dec
icebp
mov
jno
fsubs
pop
sbb
mov
pop
mov
imul
repnz
fs
mov
inc
push
popf
outsb
jge
jle
popa
pop
les
iret
mov
xchg
out
push
inc
sbb
fidivrl
fidivrs
add
ret
sbb
mov
sti
or
adc
and
xor
push
insl
pop
mov
or
sbb
jecxz
sbb
rolb
gs
and
sub
out
jmp
jg
ds
xchg
movsl
imul
ljmp
xchg
rcll
adc
sub
insl
adc
inc
pop
and
xchg
jae
xor
mov
dec
ja
jne
jmp
ljmp
daa
out
jno
nop
sub
sti
out
nop
fnstsw
jl
rdrand
dec
pushl
ret
ja
lret
xchg
shrd
mov
popa
adc
stc
and
sti
xchg
test
popf
xlat
dec
std
arpl
push
idiv
in
insl
adc
and
daa
cmp
pushf
jae
cmpsb
mov
mov
mov
cmp
add
inc
testl
or
pop
xchg
push
insl
jae
jbe
test
js
fisubrs
push
paddusw
dec
jp
dec
call
aam
daa
push
cmpsb
mov
shlb
jmp
leave
xchg
stos
mov
mov
aad
roll
jge
jno
hlt
imul
pop
mov
add
xchg
or
cmp
pusha
jb
idivl
out
xchg
mov
xchg
test
clc
inc
xchg
ret
push
xchg
roll
int
es
fs
sub
or
and
xor
movsl
mov
add
addr16
out
std
shrl
mov
ja
sbb
cmp
or
mov
sbb
js
scas
sbb
lret
jg
sub
and
sti
roll
std
mov
in
stos
popf
shr
jmp
mov
iret
into
rcll
leave
lock
xchg
cmc
or
in
ds
mov
cld
fidivrl
mov
mov
dec
mov
lods
mov
pusha
mov
mov
xor
pop
xchg
jecxz
mov
jno
xlat
sbb
mov
clc
add
lock
push
add
jo
shrl
xchg
dec
loopne
pop
sti
mov
fwait
sbb
xor
add
cmp
add
insl
std
pop
lret
push
out
cli
shlb
and
popa
xlat
push
push
outsl
call
xor
clc
push
and
ljmp
out
std
enter
adc
sub
or
dec
daa
dec
test
xor
and
or
mov
xchg
jo
int
and
into
jmp
push
test
dec
or
jne
and
out
cmp
jbe
aad
idivl
fiadds
dec
pop
cmp
pop
stos
fsub
mov
rorl
ss
and
insl
xor
lea
mov
sti
cmp
dec
mov
mov
popf
cs
fnsave
jp
jbe
add
or
repz
lahf
fs
je
mov
ret
jecxz
out
pop
movsl
lds
inc
jp
inc
data16
sbb
fmul
mov
outsb
mov
pop
pop
fstpl
andl
mov
iret
pop
sub
xchg
xlat
repz
addb
aam
daa
cmp
jmp
cld
fs
push
testl
inc
xchg
lods
out
pop
jno
jae
dec
cmp
fs
adc
fs
jb
push
mov
sub
call
cmc
sub
addr16
sbb
inc
push
cmp
pop
into
rcrl
mov
movsl
add
sbb
ds
enter
or
push
jmp
xchg
pmulhw
mov
lcall
stos
jno
add
and
sub
cmp
stos
imul
mov
mov
into
mov
mov
mov
dec
mov
inc
xchg
das
inc
cmpl
div
and
sbb
sbb
jae
arpl
les
loope
call
or
dec
cs
rcrb
push
cmp
divl
mov
mov
adcb
hlt
add
xchg
lret
das
jbe
adc
push
leave
add
jl
mov
iret
shr
arpl
cmpsb
repz
mov
lds
xchg
iret
xor
or
dec
dec
push
rcl
mov
out
add
inc
in
pop
dec
xchg
lods
js
shll
outsl
incb
dec
or
cmpsl
jmp
or
cmpsb
fidivrs
subb
push
and
out
sub
roll
cmpsb
and
mov
loopne
jae
out
add
imul
add
ss
sahf
sbb
andb
stos
repz
insl
jo
hlt
ret
pop
mov
jp
inc
sub
push
inc
sbb
push
stos
aas
std
jne,pt
xchg
add
aam
push
in
push
aad
stos
ret
pop
repnz
pushf
fnstcw
mov
add
dec
mov
ret
sub
xchg
lods
mov
out
xchg
add
adc
js
in
pop
in
or
push
arpl
aas
into
pop
mov
mov
movsl
xor
or
push
fs
or
out
mov
jl
lods
bound
in
jno
gs
sti
sub
mov
pushf
inc
push
xor
push
push
aas
ret
add
js
push
call
nop
push
ss
lea
mov
add
sti
jb
mov
or
punpckhbw
icebp
sbb
and
imul
mov
adc
mov
ret
stos
adc
push
ss
ret
sahf
mov
xchg
aad
mov
push
pop
xchg
pop
mov
jecxz
jno
fcmovbe
icebp
frstor
mov
imul
out
imul
mov
and
cmpsl
orl
pop
test
jp
xlat
scas
mov
lret
popw
cmpsb
nop
stos
sub
dec
cmpsb
and
repz
out
sub
jmp
gs
inc
push
sbb
mov
xor
adc
jno
jno
ljmp
lods
cwtl
popa
les
and
inc
ja
mov
sub
fcoml
cli
lock
fiadds
add
iret
addr16
in
cmp
mov
adc
sub
sub
and
ds
inc
addb
sub
imul
and
mov
sahf
jno
pop
cmpsl
ret
mov
fsub
lods
gs
ss
mov
outsl
icebp
hlt
jno
sbb
xchg
sub
xchg
inc
cmp
and
scas
add
adc
fldt
es
lea
stc
inc
fsubr
and
outsl
fidivl
adc
in
popa
outsl
push
arpl
imul
out
test
mov
arpl
mov
ficompl
sbb
jge
pusha
dec
mov
lret
jbe
pop
adc
test
xchg
loop
xor
sub
dec
rcl
or
call
xchg
jns
into
and
stos
adc
mov
aaa
or
nop
das
je
sbb
lcall
addl
cmc
stos
add
mov
sub
das
push
cli
fcomps
inc
data16
and
cld
lret
addr16
push
aaa
jae
fsubrs
add
xchg
and
ss
dec
xor
loop
test
inc
sub
adc
mov
out
mov
test
ds
imul
jnp
push
loope
ficomps
cmc
mov
sahf
mov
stc
cmp
movsl
or
imul
jecxz
mov
push
dec
sbb
test
scas
mov
add
in
sbb
jp
inc
push
or
stos
mov
cmp
in
in
pop
jne
xor
ja
negl
pop
and
lea
stc
arpl
in
imul
int3
repnz
inc
jmp
xchg
jne
xchg
popa
xchg
lea
pop
fbld
xor
ja
jmp
adc
and
pusha
push
fwait
xchg
mov
mov
std
sub
in
lods
repz
fimull
mov
rcrl
rcll
mov
call
sbb
jp
pop
inc
stos
mov
fdivl
into
imul
adc
mov
stos
repz
dec
arpl
negb
int
out
shrb
mov
mov
out
ljmp
adc
jno
cmp
cld
xlat
test
pushl
xchg
shl
lret
and
sbb
push
loop
push
inc
lods
call
xlat
cmpsl
outsl
ljmp
cmp
xchg
cmp
dec
add
pushf
mov
pop
int
jae
cmpsl
cmp
fstl
sub
shll
mov
stos
add
adc
repz
bound
int
inc
mov
mov
pop
cmp
pop
cli
insl
lods
push
scas
out
stos
mov
cmpsb
cwtl
mov
add
dec
xchg
test
lock
mov
sub
jns
mov
cmpsb
mov
out
in
mov
mov
mov
mov
xor
adc
into
icebp
cmpsb
dec
mov
jne
out
xchg
mov
ficoml
lahf
pusha
cmp
jo
fcmovnu
mov
push
add
xor
outsb
bound
cmp
adc
xchg
pop
sub
mov
nop
adc
jp
mov
or
sahf
pop
dec
sti
outsl
lods
ds
jno
mov
xor
icebp
and
xchg
push
std
repz
icebp
sub
mov
outsl
mov
je
popa
xchg
or
mov
mov
enter
lea
std
inc
inc
xor
ja
mov
sub
sub
push
lea
xchg
push
sbb
shll
push
pop
test
js
and
enter
mov
jg
imul
inc
sbb
inc
test
shlb
ret
xor
test
and
and
pushf
lahf
aas
mov
add
cmpsl
inc
jg
shrl
and
pop
pop
mov
jg
imul
push
in
loop
outsb
hlt
leave
scas
mov
shlb
cmp
inc
ffreep
test
popf
fisubs
faddl
adc
xchg
cmp
xchg
sbb
ret
cli
jae
les
sbb
push
sbb
inc
add
mov
mov
mov
mov
leave
cmp
aas
mov
mov
pop
lock
mov
aas
loope
lds
add
aaa
addr16
bound
mov
dec
mov
jp
scas
jecxz
data16
test
mov
mov
ljmp
rolb
xchg
mov
mov
aad
sbb
cmc
shlb
dec
inc
int
sub
cmp
mov
lods
xor
xlat
xorb
mov
sbb
sub
call
mov
les
pop
xchg
test
arpl
or
mov
fucomp
mov
pop
addr16
in
test
imul
or
cmp
test
cmp
fnsave
mov
xchg
jno
pushf
add
adc
int
push
mov
enter
insl
xor
ljmp
mov
sub
addr16
adc
or
movsl
lods
add
enter
cmp
mov
in
jno
cmp
lds
mov
jnp
add
push
sbb
mov
sti
pop
lods
test
xchg
iret
mov
loopne
and
and
ljmp
int3
std
xchg
into
xchg
aam
jb
lret
jmp
jbe
jo
sbb
aaa
mov
hlt
xchg
push
pop
jo
scas
xor
mov
mov
mov
test
cli
sbb
jne
push
out
xchg
mov
xor
adc
lock
or
lret
ret
arpl
push
jg
pop
jne
mov
icebp
sub
mov
or
sub
mov
jo
xchg
sbb
push
inc
scas
clc
rcrb
xchg
rcr
mov
js
cmp
and
gs
movsb
mov
ret
adc
js
test
pop
fstps
addb
xchg
mov
or
xchg
add
add
cltd
sub
xchg
pop
loope
mov
and
movsb
inc
sub
xchg
jb
adc
and
mov
mov
rclb
pop
cmpb
and
rcrl
sbb
pushf
dec
lahf
mov
sub
ljmp
adc
jno
adc
cld
mov
cmp
dec
lret
aad
pop
fsubl
pop
dec
xchg
cmpsl
test
xchg
jg
cmp
fsubl
int3
cmp
mov
adc
sbb
mov
cli
sub
inc
fsts
sbb
sti
call
ret
jnp
repz
daa
inc
clc
lcall
cmc
into
icebp
int
stos
xchg
or
data16
enter
or
addl
xchg
push
imul
xchg
sbb
test
cmpsl
mov
adc
push
bound
mov
aad
push
mov
jge
mov
mov
xor
jbe
aaa
jmp
or
sub
sbb
popf
mov
push
fisubl
ret
subb
and
repnz
pop
movsl
in
out
xchg
jp
mov
pop
add
loop
sub
and
or
fwait
mov
sarl
lcall
mov
add
xchg
dec
dec
push
sub
cmp
pop
and
outsl
out
adc
pusha
insb
pop
add
and
enter
movsb
push
hlt
out
mov
xchg
ljmp
mov
pop
ret
cmpsl
sbb
adc
frstor
in
stos
loopne
cmp
jbe
push
ret
sahf
imul
adc
enter
lea
repz
sbb
neg
and
cmp
push
cmp
lahf
jns
push
sub
ja
fst
aas
pop
mov
test
push
adc
gs
inc
imul
inc
test
mov
mov
add
pop
mov
lret
dec
mov
pusha
and
pusha
cmp
pop
test
test
cmpb
jecxz
cmp
lcall
mov
sub
in
dec
lahf
or
sbb
add
in
jp
fildl
repz
aas
scas
fnsave
aas
icebp
sbb
add
pop
xchg
xor
mov
mov
das
adc
movsb
pusha
div
sub
push
or
rol
or
insl
xchg
xchg
out
mov
or
hlt
dec
fnstsw
in
mov
xchg
in
push
outsl
push
sub
mov
ljmp
lret
jne
jp
cmc
adc
jmp
sub
js
fwait
nop
imul
mov
lock
into
rorl
jns
rcl
sahf
mov
arpl
addr16
pop
fbld
out
fimull
outsb
mov
stc
xor
addr16
cld
xor
sbb
in
test
fidivrs
shll
sub
jmp
outsl
rorb
push
or
cmp
pop
es
mov
sub
lret
ret
into
ja
hlt
sbb
push
gs
mov
ja
int
ja
inc
cmp
insb
jbe
xor
mov
lea
cs
jmp
dec
test
in
sbb
sbb
scas
testl
jbe
outsl
into
mov
inc
jnp
ljmp
jno
inc
mov
in
out
loope
rol
xor
jo
jmp
jmp
hlt
xor
adc
insl
mov
test
scas
gs
inc
cmp
mov
shrl
mov
movsl
pop
sub
mov
in
mov
aad
insl
cmp
fwait
iret
mov
pop
mov
mov
pop
arpl
repz
push
adc
inc
add
rclb
sahf
stos
push
and
xchg
or
sbb
jb
mov
aad
mov
xlat
jnp
cmp
std
and
movb
mov
push
mov
cmp
sub
cmc
dec
subb
int3
xchg
insb
mov
into
imul
lods
mov
jp
repz
sti
fiadds
mov
aam
test
dec
mov
push
es
sub
or
subl
inc
push
cmp
dec
add
xchg
ror
jnp
mov
lock
and
fs
mov
sub
flds
loop
std
or
adc
add
pop
jl
adc
loope
lret
stos
cmpsl
inc
cmp
jle
arpl
scas
rcl
lcall
clc
insb
or
mov
repnz
dec
outsl
lahf
adc
insl
stos
cltd
or
mov
xor
xchg
mov
sbb
adcl
pop
xchg
jp
jbe
insl
mov
icebp
in
out
repz
lcall
mov
dec
add
jmp
roll
mov
and
je
sbb
lret
outsl
mov
xlat
outsl
pop
sbb
sbb
or
cmp
inc
mov
testl
jl
movsl
xor
push
ds
dec
loop
dec
push
mov
out
ret
cmp
mov
or
sub
fimuls
jmp
xchg
pushf
sub
in
cmp
adc
cwtl
xchg
pop
fnstcw
loope
sti
xchg
jnp
or
jl
imul
mov
and
push
scas
cs
adc
ljmp
addr16
push
fldt
fildl
push
lea
jae
xor
add
mov
rcl
in
adc
inc
cs
pop
cld
mov
pop
test
mov
bound
lods
cmc
cmp
test
mov
sbb
loop
mov
and
rclb
pop
or
outsb
sbb
sbb
dec
push
out
xorb
cltd
dec
xchg
mov
and
xchg
aam
or
cmc
cmp
pop
pop
cmp
push
inc
gs
gs
lcall
shrl
mov
ret
incb
jmp
jecxz
stos
xor
iret
jne
arpl
fcompl
popa
out
pop
push
or
sbb
jge
mov
loope
lcall
ss
or
push
ss
out
or
call
imul
insl
mov
cmpsl
or
stc
mov
pop
sbb
jnp
pop
rcr
xchg
addb
or
inc
daa
loope
push
xor
sub
loope
popa
push
pop
cmp
add
cmp
dec
sahf
daa
clc
jns
mov
fwait
xor
stc
push
pop
daa
addl
add
sbb
addb
sti
or
fcomp
pop
xchg
inc
xchg
mov
sti
mov
jne
dec
cli
rcr
mov
sub
dec
push
and
xor
and
xchg
push
mov
push
jle
and
mov
adc
lcall
and
inc
mov
aas
mov
push
adc
ds
mulb
inc
imulb
mov
ret
add
cli
repz
xor
sahf
xchg
dec
push
inc
andl
lods
ja
jl
xchg
sub
hlt
in
adcb
pop
leave
imul
shlb
ds
cmpsl
shl
stc
sahf
aam
rorl
pcmpgtw
jl
outsl
dec
push
sahf
sbb
sub
shrl
lea
xchg
cmp
add
pop
push
in
addr16
xor
adc
mov
jge
test
cmpsl
sbb
shl
stc
jecxz
fdivr
std
jb
push
inc
imul
ret
out
add
jb
mull
out
mov
add
out
shrl
out
bound
shll
cli
aaa
pop
loop
xlat
add
test
add
imul
jge
and
loopne
insl
lock
bnd
cmp
in
nop
sbb
xchg
cs
sbb
lcall
mov
in
ret
fldl
into
pushf
jne
adc
push
mov
add
nop
cmpsb
mov
stos
dec
test
cs
add
and
lcall
xor
push
in
pop
push
dec
call
dec
outsb
je
fbstp
sub
aaa
pop
mov
icebp
xor
repnz
mov
fimull
mov
std
idivl
push
mov
leave
hlt
out
shl
jne
push
mov
aas
sub
add
stc
imulb
dec
rcrb
jle
xchg
push
sub
jns
lahf
jp
mov
mov
outsb
stos
mov
mov
cmp
into
push
xchg
mov
addr16
ja
add
jno
and
pusha
cmpsl
test
xchg
mov
sahf
pop
leave
fidivrl
pusha
aas
mov
rep
ret
dec
sub
pop
xchg
adc
sbb
add
loop
cmovo
fwait
mov
mov
hlt
ret
insl
jns
xchg
dec
mov
push
sti
pop
sbb
or
pop
fidivl
popa
inc
pop
xor
pushf
scas
rcl
or
xchg
aas
xor
sub
sbb
push
je
jno
cmpb
pop
js
or
loop
pop
xchg
jb
sub
fildl
sub
test
cmp
cmpb
or
je
push
sbb
lahf
adc
xchg
ds
pop
mov
je
ret
xchg
dec
cmp
cmp
jbe
cld
fwait
or
loop
sbb
pop
call
mov
outsl
mov
mov
dec
fsubr
enter
xchg
xchg
pop
lods
outsb
std
ds
data16
test
cmp
leave
and
xchg
push
mov
mov
test
cmp
dec
rcr
aad
arpl
movsl
cmpsl
data16
mov
insb
into
xor
cmpsl
push
sbb
mov
mov
or
cmp
int3
movsl
clc
add
sub
ficoml
jge
push
sbb
xchg
fstpt
mov
adc
jecxz
pop
sub
xor
enter
ljmp
push
cmpsl
and
push
fs
outsb
pop
sub
xor
mov
sbb
push
xor
mov
js
shlb
or
lea
adc
pop
cwtl
sub
mov
test
repz
and
ret
xchg
hlt
or
mov
rclb
imul
push
add
sub
insb
or
pop
in
subb
jne
ss
push
jnp
stc
jb
push
aas
lret
in
shl
jge
pop
jecxz
xchg
out
mov
mov
add
add
aaa
shr
lods
rorl
xchg
or
mov
dec
in
dec
in
jae
push
ret
std
inc
mov
xor
or
je
sbb
xchg
push
in
loop
outsb
hlt
mov
xor
or
subb
pop
std
mov
js
out
sub
idiv
mov
mov
je
mov
leave
mov
pop
mov
jmp
add
mov
hlt
xchg
inc
and
scas
cmp
ljmp
and
mov
pop
inc
lcall
push
sub
mov
enter
lret
in
adc
cmpsl
stos
sbb
dec
cmp
xchg
mov
lods
inc
mov
cmp
xchg
xorb
leave
sbb
xor
pop
pop
and
pop
add
rcll
or
pop
mov
mov
aam
cmp
dec
adc
test
cltd
aam
pop
mov
daa
and
outsb
inc
sub
push
les
cmpsl
dec
pop
push
in
sub
and
xchg
mov
scas
lcall
inc
std
ljmp
jno
cmp
repnz
sti
mov
rcll
mov
cmpl
ss
add
pop
mov
add
mov
popl
int
cmp
fcom
jmp
repz
pop
cltd
sahf
mov
shll
sbb
push
pop
in
mov
insl
mov
iret
ljmp
push
in
inc
mov
ljmp
int
mov
fildl
pop
xor
sbb
jecxz
pop
pusha
aad
inc
xor
icebp
mov
xchg
jae
jae
stos
and
add
mov
jge
lret
sti
or
sub
movsb
rclb
sbb
cmc
jno
enter
add
fsubr
jecxz
jge
xchg
mov
jno
push
xor
lcall
dec
lret
adc
jge
sub
mov
ret
out
mov
push
jno
adc
leave
mov
enter
jnp
adc
mov
add
mov
testb
cmp
into
or
jmp
into
sub
idivl
dec
adc
dec
mov
or
adc
push
pop
add
int
bnd
fistl
loopne
xchg
outsb
mov
xchg
and
and
fsubl
lods
sub
loopne
jmp
sbb
push
mov
mov
fstp
pop
mov
mov
ds
aad
xor
pushf
sub
sub
addl
test
sub
lret
add
or
insl
mov
mov
inc
cmp
popa
subb
cltd
repnz
ja
insl
cmp
enter
jns
push
sarb
sbb
cmc
ds
mov
ss
out
sbb
insb
cli
mov
call
sbb
ret
adc
xor
bound
dec
out
rcl
pop
imul
add
dec
rcl
sub
in
lret
pusha
bound
fiaddl
mov
xor
sbb
je
dec
addr16
test
out
jmp
inc
inc
adc
ret
add
and
repz
aas
mov
pop
xchg
cmp
xchg
jmp
mov
shrb
sbbl
imul
lcall
repz
cmc
movsl
adc
leave
cmpsb
jmp
mov
jae
daa
xor
fisubrl
imul
pop
xor
or
xor
dec
mov
sbb
pop
adc
clc
shl
xchg
dec
je
jbe
lods
and
xchg
test
ret
jg
push
leave
into
hlt
push
divl
mov
mov
les
sub
pop
mov
aas
push
mov
adc
sub
sar
pop
inc
stos
pusha
sbb
sub
pop
inc
clc
mov
dec
iret
stos
addl
repnz
or
imul
cmp
pop
int
cmp
mov
in
xchg
sbb
push
hlt
push
mov
ficoms
xor
daa
divl
inc
and
sub
in
push
jno
in
push
lods
mov
push
mov
xchg
push
inc
test
pop
mov
hlt
repnz
ss
adc
push
adc
sub
xor
imul
cwtl
loopne
sahf
stos
shrb
adc
push
pop
fiadds
int3
and
sub
inc
cs
lds
and
or
pusha
push
andl
sbb
and
add
js
iret
fucomp
sbb
mov
fadd
lock
and
sbb
mov
sahf
rcl
lods
lods
out
lods
bound
out
lret
out
jb
out
test
xchg
shrb
out
and
popf
fmull
inc
mov
jns
jno
mov
xor
push
scas
scas
adc
inc
fmull
push
icebp
xor
jp
cli
insl
inc
mov
cmp
daa
mov
or
push
out
setno
xchg
push
std
push
lock
inc
inc
orl
jp
stc
daa
and
mov
sbbl
popa
jecxz
mov
jo
xchg
sti
int3
jecxz
or
mov
jns
xchg
and
jo
imul
inc
aaa
jno
pop
and
fwait
stos
dec
pop
mov
mov
int3
xchg
jle
filds
cmpsb
leave
sub
xchg
stos
std
daa
shll
push
cmp
test
mov
leave
aas
dec
xor
sbb
cmp
lret
clc
xchg
lods
sub
test
ret
push
jmp
xorl
int3
roll
adc
popa
jl
stos
mov
movsb
mov
jmp
andl
xchg
cmp
mov
xchg
mov
js
mov
jno
jmp
sub
adc
inc
hlt
rolb
push
xchg
push
sub
in
jb
ljmp
adc
stos
popf
and
popa
xor
test
sub
xchg
push
pop
test
aas
pop
movsl
push
jae
and
adc
movb
aad
les
cmc
sub
into
in
push
adc
roll
pop
add
lock
in
int
icebp
stos
shll
leave
repnz
insb
mov
dec
popf
dec
mov
cmpsb
sbb
jno
data16
cmp
andl
inc
pop
into
test
outsb
jnp
and
jnp
jecxz
inc
sub
adc
fwait
and
addr16
out
aas
bnd
arpl
je
popf
out
dec
ljmp
outsb
icebp
rcrb
mov
pop
and
movl
push
and
std
clc
cmp
jle
xor
lahf
jg
call
daa
out
sahf
seto
lret
mov
inc
xchg
dec
xor
adc
adc
cmc
mov
xchg
cmp
push
lock
icebp
xchg
sbbl
outsl
jae
sub
sbb
jnp
push
iret
sbb
add
push
clc
sbb
lret
stos
sbb
mov
pushf
lds
mov
cmp
xchg
fildl
imulb
mov
sarl
cmp
movsl
and
aaa
push
inc
push
pop
sbbb
fsubp
jne
out
test
pmaxsw
pushf
adc
rclb
out
push
adcl
fsubrs
mov
cmp
int3
xchg
stos
pop
xchg
inc
jns
ljmp
jns
icebp
insb
adc
mov
mov
pusha
jo
cld
cmp
mov
adc
inc
dec
xor
or
dec
mov
out
test
pop
out
push
adc
adcb
fwait
and
in
daa
enter
xor
ret
pop
jmp
inc
clc
dec
icebp
add
shll
out
xchg
fstps
jecxz
imul
xchg
mov
in
js
xchg
adc
insl
mov
ret
jns
sbb
adc
xor
rol
adc
pushf
jo
sbb
cmp
inc
adc
fisttpll
aad
cmp
in
mov
js
jae
test
subl
ss
push
mov
popl
inc
cmp
cmp
inc
inc
rep
sbb
mov
je
outsl
cmp
push
cmp
sub
sti
mov
sub
and
bound
jmp
mov
cld
out
test
gs
adc
stos
push
fldenv
jmp
cs
xchg
push
sub
and
orb
fldcw
adc
ds
sahf
ljmp
cmp
imul
jns
xadd
mov
loop
mov
out
cwtl
clc
ficoms
or
out
das
ret
lea
ljmp
ss
negl
rol
xchg
shlb
push
movsl
jb
or
adc
add
fxtract
push
sbb
stc
pop
dec
or
adc
push
cmpsb
aaa
not
cltd
cs
jno
mov
jbe
nop
xchg
sbb
ljmp
pop
jmp
sbb
call
sbb
sub
scas
popa
dec
sub
mov
es
ret
nop
jge
pop
mov
mov
jnp
imul
mov
sbb
mov
ja
cmc
in
mov
dec
mov
aaa
push
add
fisttpl
call
add
into
aam
data16
cmp
mov
jno
dec
dec
dec
lret
addr16
sbb
or
stc
lret
xor
test
inc
arpl
mov
shll
dec
dec
int3
popa
jmp
outsb
sbb
cmpsl
fs
adc
hlt
movsl
add
push
cmp
jnp
mov
cltd
imul
xor
gs
insl
aas
sahf
add
or
popa
sbb
pop
mov
jo
stc
iret
pop
mov
adc
mov
insl
fstl
mov
adc
in
sahf
mov
sub
or
jg
inc
lds
add
dec
push
sub
pop
jg
add
push
daa
mov
pop
hlt
int3
mov
shrl
sub
jo
push
add
mov
xchg
mov
inc
out
inc
outsl
sbb
out
out
push
xor
std
push
mov
lods
lods
pop
mov
mov
std
or
jge
mov
xchg
ret
js
repnz
xor
adc
negb
adc
fisubrl
int3
and
xchg
sub
pusha
sub
sti
subl
cmpsb
pop
dec
aam
ret
mov
pop
cmp
mov
mov
mov
in
inc
fsubrs
rclb
fs
into
mov
insb
xor
mov
sub
jo
or
outsb
sbb
sbb
push
fwait
les
mov
or
das
shr
mov
adc
mov
mov
lds
or
sub
mov
push
adc
mov
shll
dec
mov
inc
jnp
jl
push
mov
jge
adc
mov
jae
xor
mov
mov
sub
xor
mov
mov
mov
ja
jbe
ror
push
and
xor
jecxz
add
xchg
mov
iret
dec
pushf
mov
out
xchg
cmpsb
clc
adc
or
push
push
jo
sti
stc
sub
shlb
jno
push
mov
cmp
xor
daa
lcall
out
adc
repz
out
mov
into
mov
xor
dec
and
jmp
fs
loop
add
fistpl
sbb
mov
hlt
lret
stos
in
cmp
cmpsl
xor
int3
pop
cld
xchg
xor
jnp
lock
out
cmp
xor
cmp
jno
adc
in
adc
xchg
xor
sbb
or
lahf
push
lret
loope
fimull
and
or
inc
orl
popf
lea
test
stos
popa
pop
sub
ficompl
gs
or
mov
cmp
mov
jge
imul
enter
nop
dec
mov
sub
das
ret
xchg
cmp
inc
ja
sti
shll
aaa
sbb
dec
xor
sti
fs
xchg
ret
xchg
sub
mov
negb
xor
pop
scas
xor
cld
mov
jp
push
adc
stos
fs
fwait
pop
xchg
test
dec
xchg
sbb
dec
cmp
pushf
stos
addb
or
ret
sarl
pusha
xlat
mov
loope
into
test
outsl
mul
fdivrl
shrl
test
ds
mov
sbb
pop
sub
jge
sti
cld
sbb
fwait
outsl
aad
data16
rcll
int3
add
jbe
cmpb
test
mov
add
pusha
xchg
lea
loopne
dec
arpl
in
push
and
jmp
ljmp
adcl
idiv
inc
mov
mov
into
cmpsl
out
cmc
and
loop
mov
and
aad
scas
pop
dec
or
mov
lods
test
rcrl
test
rcrb
aas
or
xchg
push
aaa
dec
push
sub
xor
ss
leave
cld
mov
call
insl
mov
mov
negb
in
bound
pusha
mov
cs
aad
lods
inc
xchg
call
mov
push
xchg
add
mov
imul
lods
imul
jmp
mov
dec
test
addr16
ficomps
and
out
push
xor
fwait
jne
mov
repnz
sub
in
cmc
repnz
outsb
ret
shll
jnp
mov
roll
out
add
outsl
dec
dec
mov
stos
xlat
jb
mulb
xchg
pop
rorb
lods
imul
add
mov
xchg
lock
out
add
pop
not
fwait
push
jns
jge
es
addr16
jle
fmull
fadds
push
sub
ljmp
pop
mov
ljmp
push
mov
sub
adc
pop
xorl
test
lcall
test
pop
outsb
arpl
rcrl
into
jmp
insl
jge
jbe
call
in
cwtl
mov
mov
lcall
ficompl
pushf
movsl
ficoml
or
lret
push
imul
nop
xchg
mov
js
movsb
sub
push
dec
inc
lret
fdivs
cmp
out
push
outsl
cmc
add
loop
das
xor
adc
push
inc
test
push
jb
pop
insb
bound
in
sti
lret
cld
imulb
lahf
fidivrs
loope
jno,pt
popa
dec
sbb
mov
mov
adc
mov
clc
fcmovnbe
xor
das
dec
mov
and
cmpsb
pop
outsl
int
cmp
mov
mov
lcall
adc
inc
cmp
loope
jns
out
pop
sub
std
xchg
mov
mov
mov
jg
cmc
add
out
and
rcl
clc
test
mov
inc
sbbb
nop
inc
or
jb
leave
fldt
sti
sub
imul
mov
lea
dec
and
mov
adc
out
pop
push
add
cmp
das
ds
jecxz
add
inc
jns
nop
mov
arpl
cmc
mov
jmp
adc
sbb
jmp
fidivs
mov
mov
xchg
push
sahf
scas
subl
pop
rcl
xchg
jno
inc
jmp
shr
mov
rcr
jge
fwait
es
mov
out
or
and
mov
ffree
icebp
das
mov
inc
adc
fildll
aaa
scas
in
aad
pushf
stos
mov
or
test
test
push
outsl
imul
fimull
xor
xchg
idivl
xor
or
inc
divb
aad
icebp
and
scas
pop
movsl
lods
ret
dec
push
mov
cmp
shlb
cld
pop
lret
ficoms
in
loope
inc
stos
pop
stos
fsts
fnstenv
cld
sub
and
cmp
jae
mov
aam
shll
leave
mov
in
cmp
adc
pop
mov
mov
pop
jle
mov
mov
repz
inc
insb
or
sub
lcall
pop
cli
mov
mov
push
pop
adc
and
mov
mov
xchg
movsb
jmp
rorb
mov
adcb
adc
lods
jl
sbb
dec
outsl
mov
xor
int
adc
mov
jnp
outsl
xchg
jmp
push
inc
pop
cmp
mov
popa
lret
pop
xchg
mov
mov
inc
inc
xlat
mov
testl
or
cmp
loopne
pop
jns
ljmp
push
scas
loop
or
arpl
or
adc
repnz
cwtl
sub
sbb
ret
out
mov
std
lret
mov
mov
lods
cmp
inc
movsl
xor
pop
out
aas
pushf
mov
mov
stos
arpl
mov
cmp
jl
cmp
fdivr
adc
outsl
movsl
data16
push
dec
out
jp
cmpsl
mov
mov
jbe
mov
aaa
into
and
add
mov
xchg
ja
dec
adc
cmp
and
xlat
and
pop
jae
out
cli
jp
jmp
xchg
js
pop
fidivrl
sub
fsts
std
repnz
sbb
pop
mov
ja
sbb
xor
mov
cltd
out
mov
push
xchg
sub
fs
mov
mov
cwtl
outsb
push
xor
sbb
popf
stc
mov
in
jno
aaa
out
lret
pop
idivl
lock
sub
inc
or
mov
adc
push
mov
and
mov
sub
sbb
cli
xor
pop
in
enter
pop
mov
adc
xorl
xchg
fwait
loope
std
ljmp
lahf
mov
pop
adc
bound
mov
loop
jno
shrb
outsb
sahf
and
jge
adc
aas
ficoms
into
xor
or
jg
inc
cmc
pop
shlb
aaa
lods
cmp
pusha
sub
inc
scas
lods
mov
xchg
jb
fisttps
out
dec
popf
stc
dec
push
add
jg
arpl
fcmove
dec
outsb
shlb
test
pop
lds
mov
add
jo,pt
scas
jmp
lods
cmpsl
xchg
clc
loop
fcompl
loope
xchg
cmpsl
mov
cld
and
xchg
xchg
nop
test
mov
int3
push
pop
xchg
lock
mov
fisttpl
fistl
in
xchg
arpl
mov
pop
cmp
loope
es
andb
out
add
daa
push
imul
lret
out
icebp
mov
sub
cmpsl
shlb
pop
push
movsl
cmp
mov
xlat
xor
mov
popa
out
mov
jecxz
dec
sbb
cli
fdivrs
xchg
sahf
jne
loop
out
or
cmpsb
movaps
jmp
gs
jp
jne
xor
add
add
lods
add
or
xchg
sbb
push
sub
js
inc
jp
stos
loope
fs
inc
push
add
pop
test
inc
bnd
cld
lods
enter
mov
pop
leave
sbb
leave
test
xchg
mov
pop
fidivs
cmpsb
push
mov
jmp
sbb
stos
add
lret
cli
lds
bound
insl
jp
lods
rcrb
lods
push
loope
jle
fldenv
mov
xlat
push
sub
lods
sbb
adc
pop
filds
cwtl
pop
mov
ljmp
sbb
pop
test
cmp
data16
mov
sbb
pop
ja
addl
cmp
xchg
push
ds
jmp
jne
cmp
fisttps
repz
adc
mov
or
add
mov
rclb
and
mov
fdivs
out
cmc
sub
sti
and
dec
outsl
xlat
iret
insl
pushf
xor
add
inc
dec
mov
xchg
inc
imul
fcoml
orl
ret
cld
popa
mov
mov
cmp
xchg
cmp
sub
xchg
pop
jp
fistpll
insl
lods
test
push
sub
jne
fisubrs
lds
pop
shlb
bound
xchg
std
roll
icebp
idivl
or
in
nop
and
mov
push
arpl
xor
mov
insl
mov
sti
pop
in
ret
aaa
shl
xor
push
std
jne
push
aad
arpl
hlt
xor
or
pop
mov
movsb
mov
lret
xlat
mov
lea
lret
shlb
pop
shr
ljmp
loopne
ret
mov
inc
or
dec
jae
push
or
stos
leave
jmp
cmp
cmp
dec
jo
idivb
push
xchg
mov
std
jno
movsb
mov
imul
rclb
mov
adc
inc
dec
das
jae
mov
cld
add
jg
xchg
xchg
repz
popa
jmp
int3
rclb
mov
idiv
xchg
xor
jecxz,pt
mov
in
outsb
movsb
out
push
ret
xchg
outsl
test
and
out
int3
movsl
aas
lret
shlb
push
mov
sbbl
daa
push
mov
movsl
cmp
sti
jnp
mov
lcall
cld
outsb
mov
xor
int
popa
pop
roll
jecxz
push
sbb
sti
dec
or
jmp
jle
into
mov
std
sub
pop
je
pop
icebp
dec
enter
xchg
mov
inc
sbb
int
sbb
es
iret
adc
dec
mov
mov
fwait
shll
lea
and
mov
idivl
aas
hlt
dec
mov
pop
test
pushf
mov
xchg
lcall
mov
jmp
and
push
xor
xor
icebp
lea
inc
loop
jno
mov
clc
fldcw
aad
ds
and
pop
stos
cmpsb
outsb
push
das
mov
in
add
test
mov
sahf
lods
cmpsl
test
aaa
inc
sbb
push
and
mov
cmc
xchg
mov
roll
call
lods
data16
out
faddl
scas
mov
add
push
sub
test
sub
push
jp
das
cmp
test
and
cmp
hlt
addr16
add
int3
lock
cmp
jno
shrl
xchg
mov
cli
dec
push
xor
push
int3
imul
mov
cmc
jp
rorl
inc
fs
popl
push
daa
push
cmp
mov
push
fdivrl
adc
mov
inc
leave
cmp
out
jmp
sbb
lret
fsubrs
lods
mov
inc
negb
push
orl
aas
jecxz
clc
lahf
xchg
fcoml
and
shll
dec
andl
outsb
mov
icebp
mov
mov
fnstcw
and
adcl
mov
jno
in
mov
add
addr16
mov
pop
push
or
outsb
sbb
hlt
imul
jge
mov
and
push
imul
add
ret
sub
lret
xchg
test
insl
inc
cli
cmp
push
outsl
cmp
mov
idiv
std
data16
divl
pop
bound
jecxz
lret
push
leave
dec
cmpsl
rcrl
lds
repz
cmc
jge
xor
mov
lahf
xor
stos
pop
mov
scas
jmp
mov
push
movsl
daa
or
mov
or
mov
cmp
mov
xor
and
es
shll
pop
lds
sub
cmp
push
shl
mov
scas
xchg
js
lods
and
mov
cmp
push
pop
jne
fcom
hlt
mov
lods
jp
mov
sbb
pop
iret
cmc
pop
push
iret
int3
les
jg
push
popa
loop
out
les
pusha
lods
pop
fmul
or
mov
sub
cmp
mov
pop
mov
je
scas
mov
gs
mov
dec
mov
ret
sarb
or
push
cmp
lret
icebp
adc
mov
inc
cmp
pop
pop
or
loopne
push
nop
mov
outsl
mov
icebp
mov
je
ds
out
imul
xlat
or
xor
and
shll
and
xor
sub
dec
pop
push
arpl
shll
adc
lahf
adc
clc
dec
jmp
pop
add
jbe
mov
xchg
in
insl
adc
andb
repz
pop
xchg
push
into
pop
xor
lods
jg
mov
lret
imul
jne
fpatan
jns
aaa
adc
rolb
in
nop
je
xlat
in
ret
xchg
add
dec
out
mov
or
andb
ret
sarl
push
adc
repz
sbb
rclb
add
pusha
sub
sar
int
lcall
lret
cld
ret
pop
adc
rol
xor
popa
sti
les
and
rclb
xchg
cmc
xlat
sub
outsl
push
pop
roll
popa
push
arpl
mov
xlat
sbb
gs
in
dec
push
jbe
jnp
loop
mov
xlat
repz
mov
movsl
stos
out
mov
sbb
push
js
push
je
lds
jnp
retw
nop
push
int
cs
mov
push
pop
sarl
loopne
dec
addr16
notb
scas
cmp
ss
xor
jp
notb
mov
or
pushf
data16
les
mov
outsb
shrb
inc
loop
push
sahf
pop
in
push
inc
fildll
sahf
jmp
aas
sbb
xchg
ss
lcall
dec
sub
repz
sub
ds
out
fmuls
test
rol
ss
inc
orl
pop
icebp
movsb
repz
mov
pop
sub
mov
cmc
fadd
cs
fisubrs
cmp
push
lods
sbb
mov
lods
ljmp
jmp
cmp
shlb
clc
fwait
roll
push
movsl
push
mov
sub
mov
xchg
mov
div
sti
inc
mov
fbstp
lea
or
xchg
dec
jecxz
sbb
in
xchg
shrl
loope
jecxz
push
jecxz
lea
scas
sahf
in
pop
mov
rol
js
mov
push
or
fdivrl
jno
gs
mov
jbe
sub
movl
fwait
out
jge
bnd
cmpsl
imul
push
mov
inc
adc
mov
adc
fwait
repz
call
call
enter
push
enter
add
adc
hlt
mov
mov
clc
enter
xor
xchg
pop
pop
inc
mov
lea
sar
data16
dec
cmp
enter
repz
or
scas
or
or
cmpsb
fiaddl
pop
pop
mov
cmp
lahf
cli
cmp
pop
jno
mov
jae
mov
stc
adc
mov
psraw
dec
lods
push
and
imull
jno
push
sub
cmp
ljmp
popa
sti
cltd
sbb
int
xchg
sti
xchg
movsl
jbe
push
stos
push
pop
xlat
out
cmpl
and
sbb
and
pop
out
and
pop
pop
scas
repnz
jmp
add
mov
nop
ds
sbb
pop
pop
mov
dec
ds
stos
xchg
pandn
xchg
adc
out
sub
test
scas
mov
mov
movsb
sbb
and
fistl
outsl
xchg
fcoml
fcomps
shll
mov
aaa
adc
pop
xchg
or
inc
jl
mov
pop
sti
sbb
mov
mov
jns
fdivrl
shlb
mov
push
mov
repnz
test
enter
and
call
or
bound
es
cmpsl
xor
lcall
cmpsb
shrb
fwait
lock
imul
clc
jmp
or
mov
push
dec
shrb
fwait
xor
jmp
fwait
repz
ljmp
push
in
cltd
cmp
mov
out
mov
loop
sub
inc
out
xchg
fwait
cmp
jae
sbb
mov
or
jnp
mov
sub
movsb
sub
in
mov
dec
and
ja
cmp
fcompl
xchg
fmull
or
movsl
xlat
rorb
lods
popa
jl
hlt
scas
fsubrp
addr16
xchg
sbb
pop
les
imul
test
loop
xor
rcpps
mov
test
popa
jl
xlat
lahf
push
sbb
or
cltd
repz
sub
out
nop
mov
push
adc
pop
fsubs
xor
std
jo
clc
lret
push
jle
vpaddusb
ljmp
dec
sbb
mov
jmp
or
mov
imul
insl
mov
stos
push
das
xchg
push
sbb
mov
add
jno
pop
xchg
shlb
dec
addr16
call
xchg
out
mov
cmp
jmp
iret
xchg
lods
jae
sub
stos
ror
aas
fs
int3
es
or
cmp
rcrl
sbb
and
xchg
and
sbb
nop
fmull
out
xchg
stos
stos
jge
gs
inc
outsl
jnp
or
sbb
imul
bound
push
pusha
push
xchg
xor
aam
int
inc
mov
fmuls
mov
stos
imul
mov
arpl
movsl
iret
pusha
nop
ficompl
or
push
cmp
out
inc
pusha
lods
inc
inc
jne
jg
add
jmp
int
ds
data16
xchg
jecxz
je
lret
xor
xchg
and
xlat
mov
sub
clc
out
rorl
inc
cs
test
outsb
loope
jle
loopne,pn
jg
inc
adc
add
push
loope
mov
push
or
or
fidivrs
pop
cmpsb
mov
ljmp
mov
mov
and
out
fld
dec
rcrl
pop
jecxz
in
mov
pop
inc
xchg
xchg
mov
dec
cmc
dec
test
or
sbb
push
mov
mov
adc
or
pop
out
gs
leave
repz
push
mov
mov
add
push
mov
cmp
not
jp
sub
lods
jne
sbb
mov
jno
enter
dec
adc
lods
pop
aas
or
mov
push
cld
xchg
lret
repz
cmpsl
stc
adc
add
push
icebp
popf
pop
incl
mov
add
into
push
testb
push
sbb
icebp
sub
dec
adc
mov
mov
hlt
or
push
cmp
imul
mov
divl
pusha
nop
xchg
mov
or
or
fdivrs
xlat
dec
addl
stos
add
jbe
xchg
mov
or
aad
inc
cmc
dec
test
dec
call
test
in
dec
mov
push
js
push
pop
cs
sbbl
or
inc
mov
pop
or
and
inc
mov
push
das
rcr
and
das
adc
pop
add
rcrb
popa
fdivl
cltd
or
shr
push
jno
dec
outsl
das
pop
in
jmp
or
aad
hlt
insl
jb
pop
call
fs
je
jmp
fdivrl
sub
clc
xorl
fsubs
cli
movsb
and
mov
pop
cltd
pop
mov
sbb
dec
out
movsl
outsl
hlt
push
les
jg
sbb
xchg
mov
cltd
and
mov
inc
cltd
push
cld
dec
cmp
sub
mov
push
jnp
sbb
lahf
mov
stos
lods
jae,pt
cmpsl
cmpsb
cmp
xchg
pop
adc
add
repnz
xchg
push
mov
jno
cmpsb
jns
and
sbb
pop
dec
mov
sub
sbb
out
lret
repnz
repnz
in
push
test
ficompl
jge
test
mov
mov
roll
lret
cmpsb
enter
jmp
fnstcw
xor
scas
xor
and
mov
inc
pop
add
and
and
repnz
mov
nop
dec
or
inc
loop
jae
mov
in
call
jle
add
aam
and
push
faddp
jmp
arpl
and
mov
pop
dec
dec
pop
adc
out
pop
in
sub
sbb
xchg
sarb
loop
cli
jae
cmp
mov
lret
cmp
lcall
ss
sbb
sbb
sub
aam
cmp
and
fidivl
xchg
mov
lea
daa
mov
mov
int
imul
ret
mov
mov
and
dec
cmpsb
xchg
rcr
shl
push
or
mov
and
xchg
and
lcall
mov
mov
pop
int
and
test
lods
repnz
stos
fcmove
movsl
fldcw
xor
push
mov
jg
push
push
xor
test
fnstcw
hlt
stos
pushf
pop
mov
jp
das
rorb
frstor
pop
fldcw
mov
push
or
pushf
and
adc
pop
aas
fists
test
orl
lods
in
xlat
fidivl
mov
adcl
rorl
xor
out
lods
dec
mov
dec
cmp
mov
pop
mov
pop
test
lret
mov
dec
mov
sub
lret
cmpsb
mov
add
mov
imul
push
xchg
scas
fsubs
mov
cmpsl
mov
repnz
mov
call
rorb
jp
dec
mov
nop
dec
fnsave
jecxz
popf
dec
out
mov
mov
ret
mov
dec
fdivr
jo
ss
shrl
popf
movd
sbb
push
nop
dec
xchg
imul
sub
xor
sub
outsb
fldl2e
sar
xlat
cmp
dec
cmp
mov
enter
jnp
addr16
scas
cltd
mov
mov
imul
outsl
adc
leave
or
add
sbbb
mov
jl
sub
sub
das
sbb
in
call
sbb
outsl
jno
notl
or
cmpsb
aam
scas
ss
push
mov
cmp
pop
mov
shl
iret
lods
cli
dec
mov
xchg
inc
inc
dec
mov
cmp
cmp
into
repz
mov
push
cmp
rep
pop
pushf
xchg
insb
les
and
and
mov
shll
jge
pop
xchg
jae
imul
cmp
xchg
das
sub
mov
jae
nop
sahf
mov
mov
push
stc
mov
jg
inc
lods
pop
add
or
push
mov
and
bound
shlb
incb
mov
dec
decl
movsb
rorb
xchg
repz
dec
dec
pop
mov
jg
outsb
inc
shlb
sub
enter
mov
mov
and
xchg
imull
push
xorb
mov
lret
les
mov
mov
mov
jmp
decl
xchg
repnz
andb
and
jo
inc
pop
int
push
aaa
daa
jl
unpcklps
insl
jno
imul
jo
enter
out
mov
stos
sub
outsl
adc
lods
loope
jne
or
sbb
xchg
push
xor
bound
push
and
loopne
fstpl
sbb
cwtl
insl
cmp
out
push
int3
sbb
repz
out
sub
push
sub
rcll
and
sbb
push
mov
xchg
adc
or
int3
and
cmp
or
mov
hlt
sub
stc
pop
or
cmpsl
jl
jno
test
push
outsb
mov
insb
fstpl
add
lahf
loop
xchg
pop
jecxz
pusha
negb
cwtl
jbe
call
int3
mov
sbb
push
scas
popa
push
cmpsb
adc
js
and
mov
push
jno
das
jne
inc
pop
std
push
call
inc
lds
outsl
push
push
repnz
push
cmp
cmp
sbb
addr16
icebp
es
add
mov
sbb
or
pop
push
inc
or
in
mov
sub
add
jns
shrb
ret
test
xchg
stos
xchg
popa
push
xchg
out
and
outsl
cmp
mov
adc
in
cmp
mov
sbb
mov
data16
mov
or
stos
mov
and
repz
out
push
xchg
test
pop
aam
leave
imul
out
sbb
arpl
std
sbb
mov
lods
jo
or
cmp
ja
ret
mov
mov
sbb
mov
call
pop
sbbl
sub
dec
ret
cmp
inc
jo
add
adc
fcmovnbe
scas
xor
dec
push
mov
iret
outsl
pop
lods
cli
hlt
mov
jns
int
imul
push
and
gs
xchg
and
call
sub
icebp
js
mov
subb
rolb
xlat
xchg
dec
call
outsb
add
mov
inc
and
dec
cs
or
ret
shr
mov
mov
add
add
es
mov
and
mov
cmp
fneni(8087
test
mov
lods
cmp
cmp
test
jno
lret
out
sub
loop
imul
popa
std
adc
mov
mov
push
rcr
lret
inc
jno
stos
xchg
aad
repnz
add
mov
mov
xchg
mov
lds
or
rcll
mov
adc
inc
ss
jle
inc
dec
fdivrs
sahf
std
add
mov
iret
js
xchg
ds
push
ret
out
call
inc
pop
imul
lock
lock
sbb
xor
mov
sarl
mov
out
rcl
test
pop
push
mov
ljmp
cmpb
in
and
fdivrp
dec
sbb
inc
xchg
loop
into
jno
outsl
ja
push
xor
or
push
test
shl
xchg
and
test
mov
loopne
sub
dec
out
xchg
inc
fisttpl
stc
rcll
add
pop
ljmp
adc
dec
mov
in
mov
adc
inc
inc
push
pusha
xlat
aad
sbb
adc
sarb
mov
cmp
adc
cli
mov
push
push
or
icebp
adc
xor
sub
mov
repnz
mov
pop
popf
js
jo
dec
imul
and
cmpsb
mov
bound
cmp
ds
mov
fcoms
jmp
out
aad
rcll
mov
cmpsl
pushf
mov
test
fisubl
sub
jmp
ds
mov
xchg
sbb
cmp
hlt
cmc
xchg
sub
int3
cwtl
stc
test
push
cld
mov
sbb
imul
lahf
jge
or
shlb
dec
mov
fdivrl
xchg
ret
sbb
jmp
mov
fistps
movsl
int
mov
out
repnz
ljmp
push
mov
fnstsw
addb
cmp
mov
adc
into
dec
mov
push
lods
testb
adc
push
les
or
sarb
jmp
sar
jno
inc
push
mov
sbb
mov
loop
lret
mov
add
inc
mov
cmpl
pop
mov
cmp
dec
fisubs
and
sbb
fisubrl
pop
cld
add
icebp
mov
cwtl
mov
popf
cwtl
fisttps
sub
jns
shrb
cli
mov
fs
pop
pop
inc
sbb
cmp
jmp
push
inc
lgs
jbe
lahf
pop
sbb
jg
test
test
push
jmp
xor
mov
cwtl
data16
ret
insb
xchg
mov
ret
jecxz
lcall
addr16
push
fcoms
ret
popa
notl
loopne
xor
les
mov
jge
daa
mov
xlat
xor
call
mov
imul
daa
int3
cmp
inc
xchg
sub
stos
stc
gs
testb
mov
fisubrl
clc
xor
add
and
xchg
das
jns
jo
sti
pop
int3
fists
lret
add
fdiv
inc
sub
xchg
hlt
out
test
mov
lret
push
out
call
add
aad
adc
xor
lods
mov
pushf
dec
jp
stc
aad
ljmp
std
dec
push
inc
rcll
cmp
ret
out
dec
mov
and
add
lods
inc
sub
mov
pop
pop
xchg
or
inc
mov
fcmovnu
lret
hlt
dec
mov
mov
adc
repnz
mov
call
pop
mov
xor
xor
cli
idivb
jg
test
fmulp
repnz
bound
xor
jle
sbb
mov
mov
push
lock
push
loopne
fbstp
mov
sbb
aam
sub
sub
jns
mov
addr16
dec
jg
ret
jne
xchg
imul
shll
icebp
xchg
pushl
mov
scas
sub
sarl
out
imul
inc
sbb
loopne
push
nop
cld
mov
pop
out
mov
mov
out
xor
rorl
and
jmp
ds
push
vmulss
pop
nop
mov
xchg
lods
and
rcrl
je
cmpb
inc
in
mov
icebp
jle
push
adc
pop
xor
lods
and
xchg
fsubrl
arpl
add
dec
int
fwait
jle
divb
add
add
aad
pop
cmp
into
dec
popa
int
push
sub
pop
xchg
ja
loop
cmp
jecxz
mov
int3
gs
inc
xchg
xchg
xchg
mov
pushl
rcl
dec
fsubrs
sub
jne
mov
stc
arpl
addr16
and
xorb
ljmp
sarl
xor
cmpsl
dec
scas
inc
push
js
and
stos
cltd
mov
mov
stos
nop
call
mov
push
pop
and
int
lea
outsl
icebp
sbb
and
pushf
mov
mov
sub
stc
or
adc
fnsave
inc
subl
je
inc
push
jnp
mov
repz
imul
dec
pushl
cmp
push
imul
ja
scas
xor
adc
jle
adc
mov
or
xchg
xchg
int3
xchg
mov
jne
fstp
inc
into
hlt
mov
mov
jl
push
loope
mov
sub
xchg
add
popf
push
sbb
js
mov
adc
push
dec
out
add
in
cltd
pop
ret
xor
mov
dec
movsl
lods
and
adc
stos
sbb
xchg
test
dec
imul
cmc
push
cmc
aad
daa
mov
lea
push
sub
pop
lcall
enter
jns
and
out
pushf
inc
xchg
xor
mov
cmc
inc
cmp
adc
inc
pop
sub
sub
xchg
je
cmp
lahf
add
sbb
mov
mov
mov
scas
xor
xchg
xchg
insb
dec
in
fwait
paddusw
inc
xor
pop
jge
loope
xchg
pop
lods
pusha
ja
test
xor
scas
or
cwtl
ljmp
mov
leave
cs
sbb
les
bswap
jne
addr16
sbb
jmp
mov
imulb
dec
ljmp
into
cmp
sar
sbb
jns
jmp
hlt
add
sub
popa
push
iret
mov
inc
jne
adcl
and
repz
jmp
jp
icebp
xor
jo
pop
cmp
mov
daa
es
push
cmp
enter
push
mov
push
stos
fs
or
aaa
cld
lods
pop
mov
aad
ss
divb
push
stos
inc
push
inc
cmp
cltd
fldcw
fstpt
add
insb
cmp
outsb
in
cwtl
push
int3
push
test
clc
inc
aas
cmp
imul
pop
test
xor
mov
int
xor
in
rcl
add
mov
inc
dec
cmp
clc
addr16
inc
mov
add
or
mov
push
dec
mov
push
cmpsl
out
jae
sbb
into
adc
or
jecxz
flds
je
xchg
jo
shrl
mov
jbe
jb
pusha
mov
enter
stos
mov
or
adc
push
mov
xchg
cmp
ljmp
xchg
in
clc
or
cmp
push
push
adcb
mov
imulb
loope
mov
fwait
add
mov
jmp
shlb
call
cs
enter
mov
mov
imul
test
mov
test
xchg
xchg
push
enter
fadd
or
mov
mov
sbb
and
mov
in
push
mov
paddd
and
sub
jle
add
cs
mov
or
mul
in
mov
cwtl
stc
arpl
sub
pop
nop
mov
cmp
in
gs
or
cs
cli
ret
push
jge
aam
inc
push
inc
enter
cmp
sbb
pop
sub
std
dec
mov
jbe
out
enter
push
in
int3
ss
jnp
jo
inc
loopne
pop
pop
lcall
movsl
push
in
mov
imul
add
iret
jno
cmpsb
or
popa
or
in
sub
xchg
pop
cmp
jnp
cmp
cmp
xchg
subl
add
repz
clc
mov
push
jae
pop
or
fldt
stos
loope
das
ja
outsb
stc
loopne
and
xchg
lock
icebp
fcoml
popa
cmp
adcl
pusha
mov
xchg
sbb
add
sbb
gs
or
jne
inc
pop
xor
cmp
adc
ficoms
pop
mov
inc
stos
add
inc
pop
push
aam
insl
cs
lret
add
adc
imul
inc
out
adc
jo
cld
push
hlt
sbb
adc
std
push
sbb
mov
imul
and
das
dec
pop
mov
cwtl
cmpsb
adc
in
mov
cmp
xor
sarb
bound
out
lods
into
outsl
insb
das
mov
or
es
push
sub
push
adc
and
pop
leave
mov
jnp
mov
addr16
inc
add
or
cltd
test
aas
lock
movsl
insl
push
test
bnd
mov
or
es
xchg
movsb
ss
sahf
cmp
jae
xor
pop
mov
mov
insb
lret
iret
pop
inc
add
loop
xchg
fisttpl
mov
or
add
jns
mov
jnp
ja
and
loop
cli
mov
jecxz
test
xor
mov
stc
popf
cmpsb
mov
adc
lods
xchg
and
push
push
in
out
mov
mov
mov
pusha
xor
ljmp
xor
gs
jns
sbbb
scas
pop
sbb
lods
std
dec
push
sub
xchg
or
aad
mov
pop
imul
sub
jbe
arpl
test
adcb
jb
mov
fimull
xchg
int
out
jecxz
out
aam
arpl
cltd
or
dec
push
cmp
fstl
xchg
in
dec
adc
and
mov
sub
testb
jge
inc
or
addl
pushf
test
pop
repz
popa
inc
add
jne
jo
daa
dec
out
sbb
or
jno
into
push
add
xor
loope
adc
cwtl
fdivrl
pop
arpl
mov
in
sub
xor
push
mov
ret
jo
mov
insl
shl
lahf
inc
sub
cmp
lcall
enter
jmp
pop
cmpsl
xor
dec
pop
imull
jbe
mov
xlat
in
ret
inc
lret
xchg
cli
push
cmpsb
xchg
jle
sahf
lcall
int
pop
mov
imul
adc
lret
xor
jb
imul
dec
dec
jnp
pop
xchg
jl
inc
push
loop
pop
lret
addl
lahf
mov
push
repz
aaa
shl
stos
xchg
repz
mov
push
fs
nop
hlt
dec
push
cmpsb
and
xor
test
cmp
xchg
mov
repz
les
jo
xchg
loop
cmc
mov
xchg
sbb
or
cmp
xor
rcll
xor
shl
or
jl
jb
iret
ss
in
insl
jle
jnp
les
hlt
mov
jg
mov
out
mov
lret
mov
out
and
pushf
mov
push
sbb
inc
out
xchg
clc
mov
out
iret
sbb
and
frstor
ds
adcl
mov
shrb
xor
push
dec
fdivp
cmp
pop
aam
popf
test
rol
das
pop
jecxz
pop
and
adc
push
push
je
inc
jnp
fdivrs
test
mov
cld
adc
ret
push
mov
movd
dec
loopne
cmp
mov
sub
pop
insl
xchg
mov
fadd
jb
popa
insb
fs
out
xchg
push
push
inc
sbb
sbb
ret
test
dec
into
call
lock
std
scas
push
pusha
mov
lahf
jbe
shlb
out
cs
test
ljmp
mov
xchg
adc
jae
mov
imul
testb
adc
jns
es
push
pop
sti
mov
int3
idivb
jb
ds
adc
arpl
or
push
mov
jmp
xchg
add
and
inc
xchg
in
mov
shl
jp
add
push
mov
int3
popf
test
outsl
sub
inc
xchg
jo
sbb
mov
sub
leave
fstps
xchg
push
scas
jbe
out
pop
cwtl
ss
test
sbb
stos
pusha
xor
imul
sarb
mov
sub
mov
idivl
and
rclb
mov
cwtl
in
outsl
je
fwait
adc
into
inc
mov
lods
test
sbb
out
movlps
push
fcompl
ficoms
imul
jb
mov
test
add
mov
clc
stos
jge
fcmovnu
mov
aam
add
icebp
mov
ret
jg
adc
push
rcl
mov
dec
icebp
push
aad
lock
je
fcomp
rcll
stos
ljmp
push
push
sbbb
movsb
repz
push
xlat
adc
inc
in
sub
lret
inc
lds
jmp
mov
ja
inc
subb
lea
and
cld
dec
mov
gs
scas
mov
mov
and
std
add
rcrl
and
xlat
outsl
xor
movsb
xchg
movsl
and
sbb
xchg
lods
cld
cmpsb
sub
divb
push
enter
mov
sub
xchg
test
xlat
mov
sbb
mov
enter
cltd
dec
cmp
push
andb
fisubrs
lahf
push
cmp
mov
js
test
mov
jl
fimuls
mov
enter
test
aas
sub
mov
popa
mov
aad
stos
or
call
imul
ret
shlb
cmp
mov
xor
call
dec
jbe
and
mov
fildl
enter
sub
xor
push
mov
inc
stc
xchg
mov
xchg
out
andb
add
ficoms
popf
xor
loop
int3
pop
pop
mov
repnz
sarl
mov
arpl
pop
and
dec
les
hlt
mov
xor
iret
jnp
std
cmp
and
or
cmp
xchg
jmp
iret
adc
xchg
in
ja
mov
in
addb
mov
mov
dec
push
dec
test
jle
dec
mov
xchg
mov
inc
mov
xchg
xor
rorb
pop
xchg
lods
outsb
jns
stc
insl
int3
mov
stc
mov
add
pop
outsl
xor
jne
stos
lahf
nop
xchg
mov
mov
roll
xchg
cld
lock
sbb
mov
push
gs
dec
ret
in
or
popa
mov
ss
ja
adc
push
sbb
mov
mov
addl
jle
push
imul
out
mov
push
jnp
or
sub
shl
xchg
mov
push
or
insl
ffree
or
stc
adc
into
sub
cmc
les
adc
mov
xchg
mov
mov
pushf
addr16
or
ret
gs
out
cltd
mov
sbb
sub
sahf
and
bound
push
xchg
mov
fbld
or
cmpsl
gs
lds
xchg
inc
pop
fiadds
or
cmp
imul
enter
inc
xor
jno
jg
repnz
cmp
arpl
mov
add
js
sahf
out
or
inc
sahf
or
or
jmp
xchg
or
cmp
mov
rclb
addr16
sbb
insb
xor
test
fs
in
jne
aad
fsubp
sbb
in
xor
xchg
inc
inc
inc
into
sub
aas
jns
outsb
sar
jecxz
das
js
dec
xchg
icebp
out
addr16
push
mov
ret
cmp
lret
xchg
divl
jae
dec
lock
cmpsb
lret
mov
pop
test
jae
bound
cmp
lcall
pusha
mov
fsubrs
dec
xor
or
addr16
lods
mov
or
push
xor
inc
or
jmp
hlt
shlb
sub
popa
mov
insb
insl
mov
jle
popf
hlt
into
ret
and
daa
mov
push
ret
push
repz
rcrl
int
sarb
adc
dec
setno
out
clc
jp
lods
jg
dec
mov
jp
pop
das
pop
adc
sbb
sub
cmp
mov
jle
in
mov
pop
dec
lret
repnz
aam
fidivrs
mov
jo
arpl
ss
test
add
cmp
dec
or
pop
pop
push
cmpsl
je
xor
inc
mov
lods
push
pop
insl
loop
fistpl
popa
andb
push
jae
push
ss
sahf
addr16
mov
push
cli
mov
xlat
jl
fildll
je
inc
dec
sbb
out
inc
cmp
inc
imul
mov
push
imul
jno
pop
cmp
mov
jecxz
mov
std
aaa
iret
xchg
pop
leave
repz
repnz
xchg
scas
lret
test
dec
cmp
mov
jno
and
dec
fdiv
stc
dec
or
push
mov
mov
sub
cmp
inc
dec
pop
es
sahf
int3
push
cmp
push
rcll
mov
or
sub
pop
cmpsl
sbb
mov
inc
lods
pop
rcl
mov
jge
int
xor
lods
sub
add
bound
push
xchg
add
cwtl
test
adc
lret
das
les
jmp
movb
fisttps
data16
mov
addr16
cmpl
cld
jo
adc
xor
loop
insl
outsb
into
mov
mov
mov
pop
nop
and
enter
test
jmp
and
add
pusha
dec
mov
out
sbb
inc
bound
les
sub
mov
pop
push
sub
adc
dec
mov
push
je
ret
scas
pop
adc
in
mov
pop
lret
cmpsl
ljmp
out
sar
lock
cmp
in
stc
mov
sub
or
fs
mov
mov
mov
jp
rcl
loope
sahf
jns
mov
mov
in
push
inc
mov
ss
or
daa
popa
test
fstps
sbb
cli
iret
fcmovu
sbb
mov
pop
stos
bt
mov
scas
out
mov
xchg
sub
mov
test
adc
mov
mov
jmp
iret
inc
movsl
lret
stos
push
or
orb
mov
push
xchg
or
dec
mull
insl
rcl
push
inc
jbe
pusha
popf
jb
divl
or
fwait
shll
ss
insl
mov
pop
mov
pop
sbb
sbb
xchg
outsb
stos
lahf
lcall
stos
dec
dec
loop
sahf
aad
jns
in
xor
loope
incl
pop
dec
and
imul
cmc
jecxz
test
sti
cmp
add
ret
inc
arpl
decl
pop
jno
push
addr16
cwtl
xchg
popf
adc
push
pop
pop
sbb
sbb
ficompl
inc
or
and
pop
ljmp
mov
sahf
test
ret
fsubrl
aad
std
into
mov
fwait
xor
mov
outsb
mov
call
test
sti
je
mov
aad
push
mov
leave
inc
int3
hlt
cmpsb
mov
scas
sarl
jo
leave
xchg
loop
pop
cwtl
cmpsb
cmp
ret
xor
and
out
adc
xlat
aad
sbb
push
enter
mov
call
or
pusha
jb
in
outsl
cmpsb
inc
and
adc
push
push
mov
push
nop
in
into
lcall
cli
les
shll
fistpl
or
bound
sbbl
sbb
rorl
repz
mov
arpl
cmp
lea
cmp
jl
rorl
mov
xor
nop
xor
sub
jl
clc
jp
mov
loope
cmp
clc
sbb
aas
and
mov
pop
push
lock
jbe
or
jns
sub
dec
imul
pop
outsl
stos
mov
rolb
icebp
xchg
pop
bound
or
cmp
in
ret
xchg
out
pop
fwait
gs
and
cmp
xchg
ficomps
cwtl
scas
xchg
xchg
out
enter
and
repz
lret
mov
pop
movsb
int
test
pop
add
sub
sub
lahf
mov
jmp
ja
jp
mov
out
in
jbe
imul
fmulp
xchg
xor
ffreep
aam
out
stc
test
pop
push
push
add
or
sbb
stos
or
cwtl
aaa
jne
push
jmp
popf
xchg
fmull
adc
jb
jae
outsl
popa
pusha
mov
add
mov
fwait
push
mov
je
and
sbb
or
popl
xlat
std
shl
dec
and
ret
dec
shrl
mov
ss
jne
dec
mov
insb
fs
or
shr
jl
add
inc
clc
or
fdivrl
out
pop
pop
inc
shr
movsl
xchg
or
mov
inc
dec
leave
bound
scas
inc
sub
push
push
imul
out
pusha
push
ds
mov
pushf
inc
jecxz
fcomps
fdivl
lods
mov
inc
pop
and
loope
insl
xchg
ss
inc
out
popa
loop
or
push
jno
test
ds
out
sub
lea
dec
adc
add
jl
jg
fisubs
xchg
mov
jl
hlt
lret
jle
iret
mov
sbb
test
fstps
es
pop
push
mov
xchg
push
or
pop
add
orl
enter
fisubs
jp
jb
dec
adc
inc
push
sbb
push
sub
outsb
and
repz
add
out
xchg
mov
cmpsl
lods
mov
jbe
insb
pop
mov
lcall
mov
cmp
jbe
rol
neg
adc
jnp
jp
push
arpl
imul
mov
inc
dec
and
inc
push
daa
shlb
adc
shrb
mov
cmpsl
or
mov
inc
ja
xchg
fmull
jno
movsl
sbb
fisttpll
push
sub
clc
adc
inc
sbb
adc
loopne
mov
out
push
in
out
push
fdivr
out
stc
sub
lret
paddusw
call
pop
cmpsb
jns
orl
popw
fwait
icebp
xchg
inc
jle
xor
mov
and
popl
sbb
popf
cli
dec
add
xchg
and
es
fidivs
imul
in
cs
mov
fcmove
addr16
je
xchg
ja
push
push
pop
xchg
frstor
jnp
mov
inc
pop
or
sub
cli
cmpsb
jno
jmp
mov
fcomps
inc
xor
in
mov
dec
mov
cmpsl
dec
in
push
pushf
xor
pop
and
test
movsb
negb
jne
insl
test
rcrl
imul
inc
mov
mov
sub
repz
loope
lea
cmp
adc
std
mov
stc
insb
ficoms
mov
jno
mov
dec
ret
sahf
pop
xchg
jg
sbb
and
adc
into
add
cmp
fdivl
mov
andb
dec
mov
push
fldenv
inc
adc
dec
repz
jecxz
dec
imul
mov
ret
sbb
mov
repnz
fnstenv
in
cmp
outsl
rcrl
hlt
dec
sbb
push
pop
mov
pop
mov
mov
repz
mov
or
mov
jo
outsb
outsl
adc
out
aas
add
sub
movsl
scas
aas
popa
or
inc
sub
adc
lock
cmp
inc
xor
in
test
jae
jnp
in
ds
cltd
rcrl
das
or
inc
imul
xlat
mov
xor
ret
push
lahf
sub
lea
jne
stos
jmp
jno
int3
out
rcl
add
lret
mov
jns
andb
andb
adc
mov
mov
repz
js
mov
pop
in
imull
mov
imul
and
comiss
and
cmp
call
ljmp
xchg
lcall
xchg
iret
es
scas
repnz
insl
shrl
data16
sarl
enter
add
jle
fwait
xchg
adc
xor
adc
xchg
lods
xor
popa
sub
adc
xor
mov
loopne
das
add
sti
mov
dec
adc
sti
ret
into
jp
cmp
jne
xor
sbb
loop
pop
out
and
inc
outsl
add
mov
ret
dec
or
cli
fisttps
pop
jmp
xor
fnstcw
in
jb
mulb
mov
and
lret
enter
shrb
dec
jl
xor
jae
adc
push
bound
fwait
or
lret
stos
dec
sbb
mov
in
pop
ret
add
test
push
aad
int
popf
mov
pushf
jno
adc
push
adc
inc
jns
jo
jnp
mov
leave
inc
aas
loope
dec
mov
fstpl
scas
shl
pop
enter
mov
orl
jne
mov
fisttpl
fldcw
int
test
mov
test
cwtl
iret
scas
jmp
mov
mov
insl
jp
call
das
jg
pop
jp
imul
stos
fistps
mov
and
push
leave
jno
cwtl
test
sti
les
push
cmp
fwait
sahf
lret
sahf
sub
add
xchg
js
cmpsl
push
enter
xlat
stc
xchg
or
lock
cmp
sbb
dec
stos
mov
ljmp
add
push
add
cs
jns
popf
loop
mov
dec
lcall
or
scas
das
push
lock
xchg
popa
test
or
leave
mov
push
lcall
data16
sbb
sub
sbb
outsl
ficoml
scas
sbb
jnp
loopne
jb
imul
cmp
or
fcoms
mov
lds
xchg
data16
imul
lcall
adc
mov
add
push
push
andl
dec
sbb
push
lock
cmp
pop
sub
pop
sbb
lock
stc
jmp
lods
mov
jle
and
sbb
mov
fnstsw
jl
shrl
in
or
int
push
inc
ret
andb
inc
cmc
and
sbb
lea
out
addl
push
mov
and
imul
push
dec
mov
cmp
mov
push
movsl
leave
fidivrl
push
xor
and
mov
gs
frstor
push
fisubrs
jae
xor
jl
int3
addl
fmul
lcall
adc
jnp
insl
and
ret
push
lods
clc
mov
loop
jo
jae
sbb
cmp
loopne
sarl
aam
aad
xchg
imul
ss
in
popa
push
xchg
mov
scas
add
add
pop
or
push
xor
or
jl
inc
push
push
lock
clc
daa
or
aam
cld
mov
pop
iret
in
repnz
ds
sub
adc
jne
pop
subl
lods
pop
repz
lahf
mov
in
jnp
mov
pop
cs
dec
cli
mov
xchg
cltd
pop
aad
stc
loopne
xlat
jb
out
scas
aad
imul
pop
js
cmc
push
xor
cmc
adc
and
sub
aam
mov
inc
lods
adc
jno
mov
push
sbb
stos
scas
movsl
shr
mov
pop
adc
sbb
sub
cmpb
inc
sub
push
fsubs
adc
outsb
adc
lret
xor
jge
sarl
dec
push
pop
adc
inc
lods
lods
bound
lcall
mov
mov
xchg
hlt
mov
mov
ret
add
roll
inc
ljmp
aas
sbb
subl
out
shrb
fimull
adc
pop
cmp
icebp
iret
fisttpl
cmp
push
lret
jae
jle
in
ds
pusha
cmpsb
mov
jl
repnz
dec
out
cmp
push
mov
call
add
clc
or
and
mov
push
repz
bound
in
divl
sub
lcall
daa
dec
outsb
orb
jb
xchg
aaa
mov
dec
fstpt
mov
imul
outsb
mov
test
pop
jge
mov
imul
lret
outsb
inc
pushf
or
iret
popa
gs
pusha
fsub
push
lock
out
pop
jae
aam
jb
mov
in
rcrb
push
jo
cmpsb
mov
sbb
and
das
dec
push
mov
adc
dec
pop
cmp
mov
ja
add
or
stos
mov
sub
add
sbbl
mov
pushl
fisttpl
js
std
or
arpl
add
mov
scas
sbb
stc
pop
in
push
or
test
or
xchg
add
mov
mov
lods
jle
std
pop
nop
sbb
mov
push
dec
jg
test
mov
js
out
jnp
iret
iret
or
into
addb
inc
push
fistl
xchg
jb
and
fbld
movsl
addr16
jl
aaa
orl
jecxz
sti
out
rep
xchg
cmp
test
pop
in
sub
adc
popa
xchg
sahf
cmpsl
out
lcall
mov
outsl
push
xchg
arpl
ljmp
jecxz
adc
stc
call
repz
push
inc
pop
ljmp
sub
fs
jnp
mov
test
jg
sahf
mulb
jne
popa
test
pop
fidivl
xchg
les
cmc
andb
fucomi
sub
rcrl
lret
mov
push
pop
rcrl
std
test
lods
xchg
cmp
jmp
xchg
xor
sbb
cs
cli
test
ret
xchg
jge
cmp
mov
or
inc
mov
push
iret
lock
rcrl
test
pop
adc
call
fistpll
jae
or
adc
lods
and
sub
inc
mov
add
sub
mov
push
fimull
pop
mov
stos
pop
sub
nop
add
mov
and
popf
jne
enter
negl
mov
fldenv
push
leave
or
adc
sbb
mov
outsl
dec
popf
add
addr16
icebp
loope
xchg
add
subl
xlat
sahf
xchg
inc
mov
jge
rcr
ret
sub
arpl
or
fsts
out
push
outsl
pop
or
sub
cmp
andb
ret
mov
jb
out
xchg
lock
mov
je
cmp
clc
repnz
jge
pop
and
cwtl
int3
sub
sbbb
mov
cmp
pop
adc
insb
mov
ret
movsl
xor
pop
js
adc
adc
nop
jno
clc
cmpsl
popf
jmp
cld
mov
inc
push
pop
cmpsl
movsl
cltd
mov
and
or
out
pop
or
jge
mov
popf
andb
mov
in
inc
lahf
cmc
xchg
sub
arpl
leave
and
out
and
push
stos
jb
mov
daa
dec
jbe
shll
imul
lret
or
test
pop
sub
ss
fdivrl
insl
inc
lret
lcall
fcomp
or
add
or
xchg
xchg
cltd
test
mov
adc
mov
pop
int
or
aad
loop
push
imul
xchg
sbb
inc
mov
je
psrlq
pop
cmp
jle
sub
je
aam
repnz
cmpsb
aam
jns
dec
ror
mov
out
xor
sbb
frstor
out
push
test
testb
pop
clc
sbb
cmp
fwait
ljmp
xlat
sahf
mov
or
jns
sub
and
cmp
gs
and
pop
xor
cmp
and
inc
jns
and
arpl
or
mov
ret
fisttpl
nop
dec
fdivrp
jbe
pop
fistpll
pop
imul
and
fnsave
push
mov
lret
xchg
mov
rcll
pop
push
cltd
jbe
std
mov
lock
leave
lret
sub
mov
daa
icebp
rol
cmp
imul
shl
es
xlat
dec
cwtl
add
sub
in
aam
lock
movsb
iret
cs
pushf
fdivr
pop
sub
jne
test
enter
popf
jg
xor
jbe
xchg
scas
dec
daa
test
aaa
xor
adc
popl
loope
xchg
leave
aas
or
mov
add
xchg
jns
stos
mov
mov
xchg
js
and
fisttpl
mov
push
rol
sub
fistps
adc
dec
push
js
stos
sbb
cmc
iret
jbe
xor
loop
jnp
xchg
cli
xchg
sbb
int
and
jno
sub
sbb
mov
jo
fsubp
pop
out
cmp
jns
mov
mov
cmp
fisubl
adc
push
xor
pop
stos
mov
ret
sbb
cwtl
mov
inc
jle
outsl
pop
in
pop
cltd
call
out
jl
cli
xor
aaa
je
js
push
fistpll
call
sub
ss
mov
jle
shl
stos
sub
pop
lods
pusha
jecxz
ret
mov
pop
or
int3
loopne
int
xchg
push
outsl
pop
call
or
js
or
cltd
adc
adc
dec
sub
xchg
mov
roll
push
jo
adc
test
and
xchg
push
mov
pop
aad
pushf
dec
mov
push
push
aaa
out
cwtl
sbb
aad
add
int3
popa
insl
stos
mov
fchs
movsb
mov
pop
sbb
push
sbb
jmp
les
and
mov
jmp
loopne
lds
mov
iret
push
movsb
pop
scas
popf
outsl
lahf
ret
inc
loopne
push
sub
cmp
cmp
std
adc
dec
mov
jnp
sbbl
in
jno
out
daa
sbb
in
cwtl
rolb
xchg
in
fldl
es
jmp
std
dec
insb
pop
jecxz
jno
inc
gs
mov
xchg
repnz
and
and
pop
dec
add
addr16
jl
lds
in
imul
mov
outsl
cmp
movsl
call
cmp
in
pop
jb
sbb
jns
insl
sub
xor
lret
arpl
popf
xchg
xchg
ss
ja
shll
adc
pop
xchg
mov
fldcw
xchg
inc
aaa
add
arpl
stc
jno
push
lea
and
dec
add
jb
mov
pop
jp
mov
int
movsb
xlat
lret
out
arpl
inc
stos
cmp
lock
xor
je
arpl
mov
sub
out
repnz
cmp
cmp
cmp
lock
lods
stc
movsb
mov
addl
jecxz
cmp
rorb
imulb
pop
xor
rorl
pusha
inc
mov
pop
movsl
add
mov
xlat
stos
jne
mov
mov
sbb
mov
mov
mov
ret
lcall
hlt
subps
imulb
adc
ja
cmc
das
jae
cmc
mov
leave
lock
push
mov
es
ds
push
test
jg
in
xchg
fcoml
mov
xor
cmp
sub
xchg
repz
push
pop
fwait
mov
push
sbb
shrb
cwtl
jnp
in
fmuls
pop
int3
xchg
test
mov
stc
pop
mov
cwtl
in
jno
and
fs
sbb
add
push
int
jge
mov
test
xchg
jmp
rcr
lret
into
aad
jno
dec
jae
jno
repz
xchg
lds
xor
or
inc
fwait
fs
pusha
or
cli
dec
popf
inc
jl
mov
mov
push
cmc
negb
lahf
xor
gs
mov
add
push
jo
dec
leave
or
mov
xor
test
iret
aam
sti
rcrb
aaa
notl
insl
pop
std
xlat
cmpl
cmpb
cmpsb
loop
jle
fs
push
xchg
jae
pop
in
jp
jmp
mov
and
movsb
cs
loope
xchg
stc
mov
inc
add
loopne
dec
and
cld
push
call
shll
aaa
cmc
and
sub
push
insl
lods
ret
pusha
in
cmpl
push
arpl
lret
popf
sbb
mov
movsl
or
mov
test
les
mov
adc
cld
jno
negl
add
in
dec
das
rolb
xchg
xor
xchg
sbb
repz
pushf
fldpi
mov
mov
cmp
push
cmp
and
and
inc
sbb
inc
jno
fstpt
push
or
lds
mov
mov
outsb
mov
pushf
lea
lea
into
insl
rorb
xor
andl
mov
shrb
sbb
in
push
push
lret
into
mov
sbb
imul
and
lret
jl
fadds
mov
out
mov
rcrb
sbb
push
inc
icebp
loop
add
in
push
push
pop
dec
dec
sub
lods
push
inc
lock
pop
push
xchg
ja
fistl
hlt
xor
clc
shrl
cli
out
sub
sub
push
sub
xor
mov
mov
clc
sahf
xchg
imul
push
jge
hlt
push
outsb
mov
out
sbbl
daa
dec
stos
addl
sub
mov
or
sub
aaa
xchg
out
jmp
fistl
in
add
jge
jbe
mov
push
jmp
daa
add
add
insb
repz
jns
xor
icebp
cmp
mov
cmp
jb
cwtl
jge
test
mov
aaa
addb
mov
pop
dec
xor
popf
into
lcall
mov
stos
push
mov
push
and
pop
pusha
imul
and
pop
cmp
fs
cld
jl
jae
repnz
js
mov
in
movb
aad
xchg
fadds
pop
sub
das
ja
out
call
jne,pn
mov
mov
call
lds
adc
mov
stos
jno
ds
out
mov
mov
ja
loop
cli
cltd
push
mov
lods
sahf
and
inc
or
dec
bound
lea
mov
out
mov
jl
xchg
xor
jns
stos
inc
pop
std
pop
test
cli
mov
out
push
or
into
sbb
sbb
cmp
scas
or
sbb
add
and
lret
mov
fiaddl
ret
or
ja
or
mov
fcomip
mov
mov
and
jne
imul
push
sbb
ss
rclb
and
sub
aam
xchg
fisubrl
std
insl
pusha
mov
jge
jbe
stos
dec
rcll
daa
mov
jae
inc
lcall
mov
lret
pop
mov
push
in
rcrl
inc
das
and
jnp
loop
aam
xchg
mov
and
fwait
clc
dec
cmp
jmp
xchg
dec
andl
adc
shll
jmp
mov
xchg
out
aas
pop
popf
push
imul
lret
test
push
stos
xor
outsl
icebp
xlat
xchg
xlat
or
lcall
test
and
aas
xchg
jb
cmp
stc
aam
sub
mov
sbbl
or
fmulp
mov
lods
out
xor
loopne
or
sub
add
cmp
pop
or
pop
inc
sub
adc
ja
int
test
out
xchg
push
pop
and
jle
add
sbb
lods
or
fistpll
push
shr
cmc
jp
adc
and
movsb
push
mulb
and
out
add
xchg
cwtl
push
jecxz
push
mov
sub
nop
sarb
fldenv
and
or
sub
sub
loope
push
push
push
bound
push
ds
mov
sbb
fldl
lret
mov
sbb
shrb
rcrb
cmp
int3
orb
lock
mov
clc
sub
pop
dec
insl
ret
imul
mov
cmp
pop
out
std
pop
lcall
data16
cpuid
loopne
fiadds
js
and
cmp
pushf
inc
add
or
pop
fiaddl
outsl
call
push
out
mov
es
jne
jge
repz
xchg
push
pop
lds
sbb
mov
inc
xchg
addr16
in
out
aad
jno
pop
jl
nop
add
leave
clc
das
insl
fstpl
pop
stos
sbb
cmp
js
int
pop
sub
adc
push
cmp
lret
loop
adc
cs
scas
stos
clc
xchg
push
je
ds
mov
testl
arpl
sub
mov
daa
dec
imul
pop
das
lret
jmp
insb
in
leave
push
negl
in
lret
jp
movsl
cmp
daa
jg
or
jae
jp
cmp
repnz
inc
push
push
rcll
movsl
jecxz
pop
jg
sbb
lods
lret
das
mov
inc
dec
inc
xchg
xchg
fstpl
xchg
test
add
shlb
loope
enter
xchg
testl
mov
negl
std
dec
rcrb
les
mov
dec
scas
dec
mov
jns
popf
pop
xchg
pop
pop
cmp
mov
mov
mov
ja
scas
es
cmc
cwtl
or
cmp
push
sub
aad
mov
notb
push
sbb
mov
fstpl
mov
dec
rolb
loop
addr16
cmp
push
xor
dec
xor
jb
int
and
in
and
fistl
icebp
ss
push
push
stc
dec
mov
mov
lret
push
int3
sti
adc
sub
cmp
push
imul
jo
aaa
cmpb
in
imul
mov
add
push
or
repnz
push
mov
and
inc
jp
aaa
mov
mov
repnz
xchg
xchg
jecxz
cld
les
cmp
clc
push
int
lret
aad
test
mov
jo
in
mov
sahf
push
push
push
mov
out
imul
or
xchg
sarl
mov
popa
sub
mov
cltd
loope
xor
inc
jbe
call
add
loop
fwait
daa
lcall
adc
gs
enter
sbb
rcr
rol
fdivl
or
jns
xor
sbb
cmp
mov
push
mov
lock
and
or
add
adc
jno
push
jge
mov
sbb
cmp
pusha
lahf
xchg
stos
mov
or
rcll
mov
nop
cli
mov
jmp
je
popf
icebp
mov
push
scas
xlat
ret
movb
xor
test
inc
jp
movsb
stc
gs
loopne
popf
jbe
iret
cmp
xchg
add
pop
enter
mov
in
pop
inc
aas
mov
std
aaa
hlt
jbe
xchg
shl
pop
xchg
mov
int3
fadd
push
mov
addl
add
in
cmp
mov
cmp
add
lods
mov
cli
xor
inc
cmpsl
cld
mov
sbb
cli
or
inc
insl
cmpsb
sub
xor
jecxz
sti
repz
aas
imul
sub
adc
cmpsl
movsb
popa
mov
and
mov
dec
dec
shll
test
ss
sbb
fs
sub
cmpsl
mov
jnp
repnz
jp
leave
loop
dec
icebp
mov
mov
jo
xor
cmp
mov
ret
les
mov
pop
call
scas
add
cli
out
jmp
jnp
fdiv
mov
adc
fisubl
mov
popf
jnp
jp
je
sbb
or
mov
pop
out
pop
fbstp
or
fistpl
mov
push
mov
addr16
xor
push
dec
std
pop
popf
scas
jne
ljmp
mov
mov
adc
mov
mov
and
icebp
mov
iret
cmp
shl
lahf
arpl
inc
addr16
dec
xor
ljmp
push
sub
hlt
out
mov
cmp
or
aad
or
jge
aam
addr16
jg
mov
add
sbb
mov
ja
dec
fsubrl
xlat
pop
andl
ret
fwait
mov
repz
hlt
ret
call
fadd
adc
ret
sti
add
mov
push
das
jo
mov
es
dec
sub
cmp
sub
mov
xchg
jg
addr16
cmp
or
or
sub
loop
cwtl
int
in
lret
push
stc
jmp
mov
xlat
xor
xchg
dec
xchg
add
fnstenv
dec
loopne
xor
or
aad
xor
jb
addr16
insb
jno
aam
pop
insl
es
movsl
js
or
xchg
leave
pop
fistpll
xlat
loope
mov
jbe
mov
lahf
jb
mov
mov
lea
xchg
je
loope
xchg
aam
and
popf
xchg
ljmp
add
inc
or
scas
shll
aaa
and
stos
cmp
jns
in
add
mov
repz
and
movsl
sub
lahf
jge
jb
xor
lret
pop
cld
dec
adc
sar
dec
cmp
out
icebp
mov
cmp
fldenv
cltd
push
orl
repnz
push
negl
jl
cmp
xor
loope
push
pop
data16
out
sbb
pop
lds
sbb
mov
roll
cmp
pop
arpl
fucom
repz
pop
xor
sub
out
int3
sub
and
popa
jmp
and
stc
mov
movsb
stc
jmp
aas
and
testl
cmp
jns
xor
fnsave
pop
mov
mov
dec
arpl
call
adc
mov
cmpl
mov
sahf
sub
cwtl
jl
dec
xor
sti
push
add
pop
sbb
arpl
xor
push
das
mov
cltd
xor
jmp
pop
sbb
xchg
insl
sub
aas
ret
add
scas
je
mov
sbb
jns
in
push
popf
mov
divps
andl
dec
push
sub
shrl
test
adc
xchg
ljmp
jb
inc
cmp
js
mov
mov
or
out
jmp
lret
push
mov
mov
xchg
dec
mov
mov
outsl
imul
je
stos
aad
lock
clc
movsb
dec
inc
mov
lea
les
popl
fsubr
imulb
xor
push
lea
jae
xor
or
sbb
xor
addr16
and
into
lahf
add
outsb
fildll
and
jp
jnp
jno
jp
adc
xor
and
gs
divb
sbb
roll
mov
fcoml
xchg
xor
mov
cmp
pop
adc
movsl
inc
lds
inc
mov
lods
rclb
jbe
push
in
mov
and
cmp
leave
enter
dec
push
loopne
inc
shl
das
jmp
mov
fidivrs
mov
pop
in
dec
ss
mov
cmpsb
push
shlb
inc
stos
movsb
xor
add
in
fidivs
imul
add
aas
sahf
pusha
mov
ds
inc
jp
andl
loope
push
jg
pop
xchg
cmp
rcrb
xor
sbbb
or
imul
mov
sahf
jo
mov
xor
mov
incl
out
ja
repz
cld
stos
or
adc
incb
adc
xor
dec
mov
jo
fwait
xchg
jg
test
leave
sub
cli
and
rorl
ljmp
pop
mov
xorb
iret
dec
sbb
stc
mov
xchg
fwait
popa
out
out
cltd
push
orl
mov
aas
fcmovnu
or
leave
add
mov
push
outsl
mov
mov
adc
dec
loopne
dec
std
push
mov
out
jp
ds
and
adc
jb
pop
ja
sbb
in
sahf
xor
call
mov
stc
push
xor
mov
inc
ljmp
and
cmc
mov
push
adcb
repz
fs
mov
mov
or
jmp
fldt
fdivrl
dec
out
pop
push
mov
dec
repnz
psrld
sbb
pushf
outsl
das
test
jae
sahf
mov
xor
sub
je
mov
jae
adc
mov
mov
leave
mov
outsb
dec
or
fadds
ret
mov
sbb
popaw
mov
jecxz
pop
inc
das
lds
ret
icebp
idivl
push
fcoml
aaa
loop
repnz
out
jne
ja
sbb
mov
add
or
call
test
addb
cs
idivb
into
fs
jmp
pop
push
sub
jge
adc
iret
arpl
lods
mov
andl
cmp
jl
lcall
popf
gs
mov
lahf
mov
sub
mov
cmpsb
xchg
int
and
testl
imul
mov
inc
and
mov
imul
loope
lahf
xchg
or
rorb
mov
sti
cltd
adc
pop
xchg
in
sbb
aam
jge
mov
in
and
mov
aad
xchg
xor
mov
and
push
mov
mov
jecxz
stos
mov
pusha
pop
sbb
adc
loope
out
js
xchg
lods
or
stos
and
jae
mov
cmp
xchg
gs
or
popf
inc
lahf
sub
mov
mov
push
std
into
dec
push
stc
mov
xor
sub
lods
js
insb
add
stc
add
xchg
hlt
inc
lahf
mov
insb
lret
orb
jae
loopne
insb
dec
rcrl
imul
into
out
xchg
inc
int3
adc
jg
cld
xchg
mov
or
mov
jo
imul
gs
sbb
adc
sbb
pop
add
aam
and
call
sbb
sbb
pushf
mov
or
je
pop
mov
xchg
leave
xchg
aad
pop
and
mov
popa
cmp
call
mov
imul
in
pop
divl
sbb
bound
and
mov
xor
ror
dec
sub
push
hlt
push
jg
stc
fnstenv
adc
addr16
or
sahf
mov
sub
int
stc
int
movsl
loop
cs
aas
aas
inc
cmp
movsb
adc
insl
mov
xchg
jnp
or
pushf
pop
aas
sbb
sbb
mov
ret
scas
test
cmp
lret
cmc
pushf
mov
les
repz
in
dec
or
xor
xchg
insb
dec
dec
ret
mov
cld
and
mov
dec
jns
dec
insb
xor
out
fnstcw
add
lret
fldt
push
mov
test
adc
clc
imul
imul
jg
add
cs
jnp
lret
into
bound
jp
pop
pop
pop
push
out
mov
and
hlt
jg
push
not
sbb
jle
jp
mov
sub
cmp
out
subl
call
outsl
sub
jbe
pop
outsb
adcl
nop
push
bnd
gs
dec
movsl
sbbb
fisubl
adc
fsubp
lds
popa
mov
aam
sub
inc
prefetch
sbb
sub
push
mov
shll
cmp
dec
jecxz
fucomip
push
shlb
sub
mov
xchg
add
das
cmp
or
sbb
lret
cmpsl
sbb
lcall
add
stos
mov
sbb
mov
repnz
aaa
dec
hlt
rcrl
mov
mov
cmp
adc
cli
inc
cmp
or
xchg
and
das
imul
mov
pop
xor
scas
stos
bnd
inc
adcl
fldpi
jmp
jmp
out
bound
adc
jl
mov
neg
and
stc
adc
adc
sub
int3
or
ds
cltd
cmp
and
test
mov
sub
pop
ret
cmpb
cmp
mov
test
enter
xor
cmp
lock
mov
movb
mov
out
scas
jne
xchg
shrb
jle
xor
or
shll
jno
movsb
sbb
andb
fcmovnb
jg
jge
dec
lock
lock
cs
sar
sub
imul
jmp
sarl
cmp
jmp
movq
adc
jecxz
mov
mov
movsb
aas
jb
push
mov
lds
sub
mul
pop
or
aaa
sbbb
and
xor
and
sbb
inc
shrl
popf
xor
mov
mov
shrl
enter
mov
out
nop
fdivrl
push
icebp
pop
in
sub
sub
out
movsl
push
cmp
dec
out
in
jmp
xlat
bound
gs
imul
pop
hlt
and
aad
jl
daa
pushf
adc
push
adc
outsb
xor
jae
jg
rcrl
jns
ss
sub
sbb
cmp
xlat
cmp
mov
cmpsb
bound
movb
cmc
adc
dec
testl
add
jmp
test
rorl
lock
orb
popf
jb
subl
xor
in
pop
negb
std
push
lds
push
in
pop
inc
push
sbb
outsb
xchg
dec
push
and
xchg
cmc
mov
and
ja
rorl
test
inc
push
outsb
mov
rclb
jl
mov
xor
cmp
sbbl
nopl
cmp
ficompl
es
loopne
cmp
xchg
and
fcmovb
icebp
push
hlt
inc
inc
in
mov
mov
xor
imul
or
fs
fbstp
xchg
in
loopne
or
test
xchg
xor
add
aad
jg
xchg
aam
popa
aaa
int3
ljmp
jbe
dec
or
pop
sbb
aad
dec
push
xchg
add
in
outsl
icebp
pop
cmpsb
lahf
adcb
es
adc
insb
jmp
ud0
iret
xchg
inc
cs
mov
in
jp
xchg
test
dec
mov
push
push
repz
ret
aad
gs
and
or
loop
xchg
imul
mov
loope
int
or
test
out
rclb
pushf
lahf
adc
repz
mov
adc
mov
xchg
dec
testl
aam
imul
jmp
cmp
orl
inc
sahf
stos
sub
jnp
lret
rcl
mov
adc
lea
and
lahf
dec
dec
fdivr
in
xchg
mov
fdivrl
out
jbe
xor
roll
movsb
cld
and
jo
ret
push
fldt
int
ss
loop
jnp
add
frstor
lret
jp
pop
icebp
lret
in
xchg
div
loopne
push
add
push
add
ja
nop
arpl
cmp
jmp
fs
mov
sub
sub
or
movsl
jne
inc
mov
test
and
xor
enter
adc
out
mov
aam
ret
cmp
sahf
popf
xchg
inc
mov
xor
daa
negl
popa
mov
cmp
and
adc
ljmp
fwait
fwait
out
push
mov
repnz
inc
insl
xchg
ljmp
rcrl
xchg
mov
xlat
jnp
push
jno
addl
cltd
mov
movsb
jle
cs
jo
add
loop
mov
adc
pop
js
jle
pop
rcr
or
insl
add
test
xor
popa
jle
fs
sbb
aas
out
into
mov
mov
rep
or
and
mov
fs
inc
icebp
xchg
mov
mov
mov
push
sbb
xor
dec
je
mov
push
ljmp
push
mov
insl
xor
movsl
pop
in
cmp
mov
sub
adc
xchg
outsl
xor
into
pop
jg
push
jne
mov
stos
psubb
inc
inc
iret
pop
adc
push
bound
mov
push
lock
popf
inc
mov
mov
inc
cmpsb
rcrb
imul
dec
adc
out
loop
sub
bound
cld
pop
jmp
pop
leave
xlat
push
xchg
adc
adc
cli
adc
out
rclb
xchg
repz
mov
mov
and
push
mov
sbb
mov
addr16
aaa
int3
test
out
fimuls
fmulp
cmp
adc
xor
push
mov
or
xor
pop
je
shlb
add
out
jle
sbb
ja
add
sbb
pop
jp
into
sbb
cmpsl
lea
push
imul
add
dec
nop
pop
pop
mov
cmp
sub
jae
mov
push
call
pusha
pop
sar
clc
jmp
pop
out
cmpsl
jmp
decb
xchg
adc
jl
xchg
jg
mov
adc
loop
in
das
cmp
pop
fs
or
inc
cld
xchg
add
mov
cmp
xchg
pop
rcrl
hlt
ss
scas
pop
mov
loop
xor
stos
push
cmp
and
sahf
mov
rolb
fnstenv
shll
aaa
loopne
mov
jmp
repz
ja
test
jae
test
cwtl
dec
jnp
shrl
fisttps
in
jge
scas
add
sub
sbb
fnstsw
cmp
cmc
mov
insl
idivl
ss
out
das
inc
xchg
icebp
sub
xchg
fiadds
sub
clc
daa
faddl
inc
add
mov
push
xchg
xchg
fs
mov
int3
sarl
lret
mov
mov
movsl
or
cltd
pop
sti
cltd
in
pushf
gs
mov
movsl
mov
jbe
mov
dec
xchg
cltd
ror
mov
and
xor
xor
enter
mov
push
or
push
int
sub
test
loopne
and
dec
pop
mov
stos
adcl
sub
jne
mov
add
jne
test
push
test
sbb
sub
add
xchg
test
dec
aam
and
fwait
enter
mov
fildll
lret
xchg
lret
lods
rol
xor
cmp
pop
mov
xor
mov
fisubrl
fsubl
mov
xchg
xor
pop
shrl
movsb
sbb
int3
sub
sahf
lret
mov
push
mov
cmp
cwtl
movl
mov
xchg
jmp
stc
jne
andnps
or
inc
or
loop
pop
mov
pop
xor
arpl
jns
sub
xchg
imul
lret
dec
int
shll
mov
cmp
idiv
imul
push
mov
pop
std
pop
adc
mov
test
sbb
repz
dec
es
and
test
imul
ficoms
xor
negl
push
mov
jl
xor
mov
pop
ret
pop
fwait
ljmp
xchg
test
inc
dec
sahf
sbb
nop
test
mov
popa
sbb
test
add
jecxz
dec
pop
std
pop
mov
mov
inc
xor
sub
push
sbb
cwtl
dec
outsb
xor
dec
mov
pop
fidivrl
std
lret
pop
fwait
xchg
fmull
popf
jo
je
add
sub
movsb
imul
jg
aad
xchg
pop
insl
jo
xchg
sti
pop
scas
mov
aas
out
lret
outsb
rcll
mov
cmp
xchg
aad
and
adc
jnp
mov
mov
out
pop
push
xchg
cmp
sub
lods
add
xor
inc
jmp
dec
outsb
fdivl
stc
bound
icebp
sub
pop
jnp
sbb
adc
loope
in
divl
push
idivb
sbb
xlat
rcrl
pop
xchg
outsb
in
sar
iret
popl
lods
xlat
mov
adc
jnp
push
jp
faddl
xchg
push
xchg
mov
mov
cmc
fcomps
out
mov
test
or
sub
jno
and
fidivl
fcomps
jbe
mov
lret
ret
test
loop
dec
push
dec
jae
dec
les
mov
mov
xchg
push
fisttpll
cs
subl
pusha
sbb
xchg
pop
rclb
cmp
xchg
sbb
sub
pop
rorb
mov
sti
mov
mov
pusha
xchg
jmp
bound
pop
adc
mov
xchg
adc
loope
mov
add
cs
add
and
inc
lahf
cmpsb
cs
xor
jmp
xchg
cmp
cmpsl
jnp
adc
push
fbld
cmp
jno
jo
repnz
cli
outsl
or
lods
adc
mov
aad
ljmp
pop
fwait
lock
stc
push
cltd
xchg
xor
mov
into
add
cs
or
pop
add
pop
and
mov
out
pop
push
in
add
imulb
jecxz
inc
insl
mov
mov
in
fs
cmpsl
sub
xor
sbb
out
mov
cmpsl
loopne
pop
mov
imul
jbe
insl
add
or
jp
iret
aas
push
ret
pop
call
sub
sub
or
ss
lea
jmp
icebp
jne
leave
jl
sbb
leave
es
sub
pusha
shll
es
aad
pop
dec
cli
jmp
fistpl
push
push
sahf
push
dec
in
fsubs
add
jmp
xchg
or
mov
and
sbb
pop
or
imul
jle
aas
movsb
sbb
push
push
pop
pop
rorb
mov
loopne
xor
xchg
imul
mov
inc
in
cli
lods
test
cmp
mov
sti
mov
xchg
or
push
les
bound
ret
mov
lahf
sub
xchg
dec
roll
fbld
bswap
mov
test
lock
jno
pop
lods
or
pop
data16
push
cmp
negl
fcmovb
sub
test
rcl
mov
andl
jne
mov
jnp
inc
bound
mov
notb
push
pusha
lret
pop
xor
insl
jns
xor
jns
add
sbb
jmp
push
push
aad
mov
rorb
dec
xchg
imul
jmp
mov
xchg
or
xor
les
xchg
push
loop
js
push
xchg
inc
xchg
loop
dec
rolb
scas
xchg
mov
fwait
cs
popf
ror
mov
push
mov
and
adc
out
mov
and
loop
insb
orb
iret
mov
jle
dec
clc
loopne
in
pop
sub
jmp
imul
mov
pop
popf
cwtl
xor
xchg
incb
mov
jmp
cmp
fldenv
add
mov
mov
aad
lahf
mov
pop
out
pusha
test
data16
int
adc
xchg
jne
imul
roll
pop
mov
and
adc
std
stos
pushf
jg
xchg
inc
ljmp
out
cmp
mov
ljmp
loopne
data16
test
fildl
paddusb
xor
ret
push
xchg
clc
adc
jecxz
scas
cli
jae
xchg
call
addl
push
mov
fs
mov
mov
sub
xchg
jmp
sub
inc
fstps
ret
movsl
scas
jo
mov
mov
push
pop
sbb
mov
or
in
jg
add
leave
push
sbb
aam
pop
in
or
test
das
mov
xor
mov
xchg
std
push
xchg
imul
out
jno
push
imul
test
mov
xchg
sub
nop
cltd
std
int3
pop
js
ret
adc
mov
mov
lods
ret
sbb
xlat
mov
xor
cmp
inc
fstpl
add
mov
in
lcall
in
out
push
addl
jmp
mov
lret
repnz
mov
inc
outsb
mov
push
out
aas
pop
jl
jmp
jmp
ss
pop
xchg
or
add
popa
jnp
cwtl
xor
adc
js
scas
or
sub
sub
sub
out
xchg
clc
shrl
jno
jp
mov
xchg
add
adc
or
loope
xchg
loopne
xchg
outsb
dec
push
mov
pusha
cli
xor
or
xor
rcrb
mov
stc
adc
sbb
jle
jle
out
sbbb
mov
es
jmp
in
pop
and
out
mov
int
xor
cwtl
pop
icebp
jmp
cmp
rcrl
pop
adc
and
stc
out
inc
outsb
je
adc
jae
add
mov
in
adc
ljmp
sub
cmp
cwtl
mov
test
cmpsb
sbb
and
sbbb
jge
out
sbb
nop
cli
sbb
shll
or
jmp
cmp
inc
jo
mov
scas
rcr
mov
movsl
sub
call
mov
jmp
imull
push
mov
das
cmpsl
pop
sub
popa
call
out
test
out
sbb
sub
hlt
fimull
jnp
aas
addr16
out
push
loope
push
push
and
jb
mov
adc
mov
inc
loopne
insb
mov
sub
add
daa
jmp
shrl
pop
loope
iret
or
stc
sub
hlt
pop
dec
mov
or
cmp
nop
sbb
adcl
data16
push
push
loop
sub
or
inc
insb
out
out
addb
out
sub
out
adc
ds
stos
push
into
into
rolb
jge
test
adc
ficoml
enter
pop
popf
cmp
mov
es
orl
mov
push
shlb
inc
add
sub
or
inc
insb
mov
pusha
sbb
pop
cmp
movsl
fidivl
lret
cmp
inc
jnp
addr16
scas
and
pop
xchg
pop
aad
cld
add
add
mov
fs
daa
xchg
sbb
jmp
call
outsl
std
iret
jecxz
mov
or
jne
test
jmp
test
mov
int3
or
fbstp
add
lock
int3
mov
int3
inc
inc
cmp
repz
sarl
sbb
add
dec
push
cmpsb
inc
mov
cmp
adc
lock
repz
mov
movsl
mov
int
adc
jmp
add
test
pop
mov
sub
jne
lcall
jbe
fdivrl
sbb
in
cmp
or
ds
sub
and
fnstsw
push
rol
sbb
sti
mov
cmp
bound
test
and
mov
mov
fsubl
roll
cltd
sub
ret
xchg
sub
pop
mov
mov
dec
sbb
mov
loop
cmp
mov
push
add
aam
es
es
add
add
pop
daa
inc
dec
ja
jmp
pusha
xor
push
es
movsl
imulb
add
notl
xor
ror
repz
mov
mov
mov
mov
jge
xlat
imul
mov
mov
cmp
imul
std
jo
loop
dec
mov
jle
nop
mov
shll
outsb
je,pn
jo
mov
dec
pushf
mov
ljmp
mov
in
ror
movsb
push
clc
sub
inc
add
or
out
jp
xchg
rol
mov
jb
popa
dec
jns
out
mov
push
push
sub
enter
add
xchg
ss
mov
adc
xorb
cltd
add
jmp
sti
pop
jg
out
ret
lea
setno
and
xchg
xorl
dec
push
jb
jne
mov
cld
cli
ror
cmp
lret
pop
test
pusha
mov
xorb
jg
shll
xchg
daa
in
icebp
push
and
sbb
fisubs
lods
jbe
push
ret
jmp
ficoms
xchg
arpl
ret
out
fcoms
int3
in
das
pop
mov
push
pop
test
sub
jns
cmp
out
or
xchg
inc
cmc
orb
cmpb
dec
cli
inc
push
and
jl
cmp
loope
dec
clc
mov
adc
cwtl
leave
sbb
sahf
lret
fs
pushf
push
xor
jb
cmp
mov
inc
jne
movntq
imul
jp
stc
push
js
push
inc
cwtl
add
push
add
xor
lret
mov
cmp
pause
into
insl
jae
cmp
stc
aad
jne
in
xchg
jg
mov
es
cmpb
adc
lods
shl
jo
lea
pop
add
add
loope
jecxz
int3
and
loop
mov
into
mov
scas
mov
inc
ljmp
sahf
and
pop
popa
clc
jecxz
cmp
faddl
ret
xor
int3
faddl
jbe
sbb
inc
mov
cmp
or
mov
mov
jno
lret
xlat
dec
pop
lea
mov
in
imul
mov
fidivs
ret
cmp
rclb
sbb
fbstp
jno
jne
leave
jl
sbb
xchg
fmull
or
add
movsl
mov
leave
jae
mov
mov
dec
lods
ss
pop
jne
fiaddl
lret
cmp
xlat
xchg
jns
lods
gs
rorl
pop
pop
loop
mov
pop
cmpl
ret
dec
icebp
sub
push
inc
in
inc
jle
aad
aad
cs
cmp
xchg
das
or
dec
sub
and
push
scas
pop
adcb
stos
push
in
push
inc
mov
pop
insb
lods
lahf
testl
mov
adc
das
ret
cmp
or
int
cltd
sbb
pusha
sub
sub
sub
sub
xor
aas
clc
mov
xor
mov
es
in
mov
jae
cmpsb
rol
push
sahf
out
cmp
lock
inc
movsb
mov
push
ljmp
lret
or
repnz
scas
xchg
mov
aam
ss
aam
mov
pop
dec
daa
cmp
jae
pop
bts
out
adc
xchg
enter
sub
in
inc
pusha
mov
ljmp
das
jp
pop
cmp
scas
adc
mov
mov
xlat
sbb
jl
mov
push
lds
sahf
rcr
jge
xor
jecxz
repnz
fucom
stc
pop
fdivl
ja
push
fisttpl
and
bound
mov
adc
xchg
lahf
cwtl
into
dec
les
test
xchg
or
mov
mov
loope
inc
sub
fcoms
mov
push
pop
popa
addr16
mov
mov
ss
jnp,pt
mov
cmp
rcrb
scas
push
xchg
xlat
mov
push
dec
movsb
cmp
sbb
sbb
cli
push
repnz
pushl
cwtl
jl
mov
jns
push
pop
shlb
lds
in
in
shll
arpl
pop
xchg
arpl
sbb
mulb
sub
dec
sub
sub
inc
adc
jo
shlb
shll
lods
out
xchg
pushf
sbbb
mov
das
int3
cmp
xlat
mov
test
jge
adc
xchg
cwtl
mov
add
xchg
xor
mov
push
aad
insb
push
out
js
push
xor
imul
clc
loop
out
jle
xor
sub
and
add
jbe
xchg
jg
mov
sti
fcompl
popa
or
dec
rcrl
dec
js
xchg
inc
out
mov
xchg
adc
mov
data16
mov
cmp
hlt
mov
ja
lahf
movsb
call
mov
mov
cld
mov
test
mov
daa
jnp
xor
outsl
inc
test
imul
jno
or
dec
cwtl
shl
inc
scas
mov
fimuls
sqrtps
xchg
in
sub
and
jmp
fnstenv
les
pop
pusha
cmp
mov
mov
xchg
sbb
and
arpl
adc
cmp
xchg
fs
je
dec
ljmp
dec
out
out
xchg
pop
mov
insb
sbb
jne
insl
mov
cltd
insb
push
je
or
and
sub
sub
lods
mov
mov
xor
sbb
andb
imul
ret
out
arpl
hlt
cli
xchg
daa
repnz
sar
or
test
lahf
xchg
insl
nop
jnp
cmp
aam
adc
neg
xchg
xchg
cmp
adc
dec
inc
fdivl
fwait
xchg
out
cmp
test
iret
in
mov
xor
jecxz
push
xor
xor
arpl
inc
push
mov
xor
push
aas
stos
in
cmc
adc
sbb
fwait
movsb
push
sbb
loopne
jno
cs
jns
loopne
or
push
rcrb
pushl
notl
cmp
push
aam
cmc
pop
xchg
jge
mov
scas
push
sub
loopne
mov
push
cmpsb
mov
shll
ss
jne
sbbb
stc
pop
sti
mov
push
popa
mov
xchg
lods
mov
mov
hlt
sbb
fmulp
xchg
push
dec
xor
and
mov
pop
negb
jl
lock
mov
ja
cmp
jns
mov
pop
xchg
shlb
mov
jne
mov
inc
fisttpll
rorl
cld
in
inc
jnp
or
leave
push
sub
repnz
pop
mov
ja
pop
mov
aaa
mov
mov
mov
nop
mov
je
shlb
dec
cmc
sub
xchg
cmc
fdivr
and
pop
pop
push
aas
dec
orl
fsubrl
cmp
fs
clc
cltd
sub
cltd
ds
outsb
outsl
lods
push
sbb
fs
in
adc
jge
sbb
rcll
addr16
cmp
stos
in
lods
es
in
sbb
fistps
sub
nop
cmp
int
xchg
mov
adc
popf
fldln2
sahf
repnz
and
and
xor
hlt
pop
jmp
pusha
and
mov
arpl
fmull
jmp
repnz
mov
out
sarb
fbstp
adc
ja
movsb
ss
popa
mov
mov
rep
lock
movsl
aas
or
push
xor
aas
ret
xor
idivl
push
xor
fidivrs
ljmp
out
push
stos
jbe
sub
adc
adc
sbb
jecxz
das
cmpb
mov
push
pop
mov
in
cmp
insl
rol
addr16
aas
lds
push
push
mov
inc
bnd
cmp
and
out
inc
mov
xchg
gs
pushf
jg
or
jmp
ficoms
popa
faddl
iret
pushf
pop
hlt
popa
sbb
or
xchg
xchg
push
or
int3
mov
mov
add
nop
sbb
mov
outsb
jno
lock
adc
mov
push
mov
rcrb
std
mov
popl
sbb
into
inc
bound
push
inc
xchg
imul
xor
pop
push
mov
push
int3
test
adc
pop
mov
add
and
or
dec
in
daa
jb
sub
movsl
push
mov
sub
aas
arpl
and
add
lods
mov
fidivs
dec
jg
out
mov
and
xchg
and
jnp
pop
clc
sbb
cmpsb
push
movsl
in
enter
adc
lret
mov
fisubs
jne
sub
cmc
jae
xchg
lds
lock
jp
gs
push
dec
xor
aaa
mov
sti
jnp
pop
push
mov
repnz
mov
dec
ja
cmc
or
outsb
push
fcomip
mov
mov
insl
or
add
std
mov
ds
iret
and
arpl
jl
mov
pop
aad
in
int3
push
jge
arpl
mov
sub
add
dec
mov
sbb
rorl
dec
push
push
xlat
jg
mov
test
cs
in
lea
mov
clc
sub
enter
push
add
imul
insb
add
push
sub
xchg
mov
arpl
mov
xor
scas
sub
std
dec
and
shl
jne
mov
inc
cwtl
int
unpcklps
fwait
lods
mov
aaa
mov
pop
dec
mov
movsb
cld
rcr
repnz
pop
cmpsb
mov
decl
or
mov
in
sbbl
push
roll
mov
ja
out
arpl
in
jecxz
fs
rep
sbb
pop
xor
cmp
loopne
cmp
or
cmpsb
push
ficomps
mov
popa
aas
xor
mov
push
inc
fildl
pop
iret
push
les
xor
mov
inc
xor
clc
jg
adc
or
mov
in
adc
jp
mov
and
or
xchg
clc
mov
cmp
mov
pop
in
adc
mov
push
aad
adc
jg
jns
movsl
repnz
ret
mov
in
call
mov
lcall
loop
jl
ret
test
loope
mov
mov
in
loop
or
and
out
or
inc
sbb
test
mov
mov
imul
mov
into
stc
push
insl
sub
jb
push
mov
nop
out
jmp
ja
mov
fsubl
mov
mov
adc
je
push
cmc
out
sub
in
ror
dec
sub
repz
and
mov
lret
push
popa
icebp
dec
sbb
sub
cmp
out
xor
adc
sub
lods
jns
add
jle
outsl
stc
lcall
iret
jecxz
xor
adc
add
push
sahf
jae
jno
repz
nop
outsl
cli
mov
inc
arpl
pop
jns
aam
xchg
and
das
pop
mov
inc
js
clc
movl
mov
or
inc
lea
add
jno
call
sub
pop
aad
jbe
xor
rep
xlat
xor
and
sbb
xor
mov
xlat
std
jge
cmp
jp
push
addr16
inc
xchg
push
scas
push
divl
bswap
push
xor
nop
insb
xchg
sbb
test
hlt
cmp
insl
inc
cmp
pop
into
nop
ja
jmp
jne
adc
lods
pop
jbe
out
cmp
pop
scas
shrb
mov
mov
adc
jmp
clc
lea
dec
cwtl
push
xchg
rclb
inc
and
push
mov
mov
inc
sbb
mov
aas
or
pop
rolb
int
xlat
push
inc
inc
add
and
push
lods
sub
cmp
mov
popa
sub
jo
popa
filds
ds
cmp
cli
push
jne
pushf
sahf
dec
mov
js
xchg
or
addl
add
shll
enter
xor
repz
lock
push
ret
sahf
ds
popa
adc
shl
sbb
xorl
and
mov
xlat
les
fbstp
ds
xchg
sbb
cmp
mul
adc
sub
fimull
loopne
sbb
jp
inc
les
pop
xor
out
xor
sbb
cmpsb
out
lods
push
mov
in
xchg
cld
xlat
inc
sbb
adc
mov
jmp
sbb
arpl
sar
js
sbb
mov
ja
mov
stos
pop
cld
mov
or
ret
test
int3
push
mov
and
push
jg
jmp
mov
test
mov
lea
out
cld
push
js
aaa
or
loope
popa
ja
xor
loopne
xor
popf
ljmp
sub
mov
inc
jp
.byte
push
sbb
add
add
jbe
add
mov
add
pushf
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
add
sbb
add
add
pusha
sbb
add
add
sbbb
add
add
mov
add
lret
add
sbb
add
sbb
add
add
add
sbb
add
sbb
add
sbb
add
add
inc
sbb
add
add
sbb
add
add
sbb
add
sbb
add
add
add
add
fbstp
inc
add
ss
add
hlt
and
push
dec
dec
push
and
and
lods
inc
cmp
fisttpll
jns
std
jge
sti
sub
add
shl
sub
std
sarw
jmp
dec
fbld
and
xor
mov
push
imul
and
test
mov
sub
in
inc
and
cmp
das
sub
stos
mov
inc
sbb
cltd
in
inc
mov
lret
lock
cmpsl
ret
lret
adc
cmpsl
pop
push
scas
dec
nop
fs
cmp
mov
cmp
jl
call
lcall
stc
loope
mov
shlb
std
fmul
inc
fistpll
loopne
test
pop
leave
scas
inc
add
sub
push
xchg
xchg
lea
or
xchg
roll
dec
mov
jnp
xor
inc
stc
repnz
xchg
jle
cwtl
pusha
movsl
imul
cmp
cmp
push
rcrl
cld
aam
jno,pn
mov
dec
ss
and
sbb
and
cmp
mov
mov
cmp
stc
sbb
fnstsw
lret
adc
addr16
test
cltd
pushf
dec
shrl
call
add
cltd
out
popa
and
insl
jnp
inc
push
and
jp
dec
stos
adc
sbb
jae
pop
dec
mov
cld
or
out
jmp
xchg
mov
aam
shll
iret
adc
cmp
mov
cltd
cwtl
fwait
inc
scas
mov
add
fwait
std
lea
shrl
and
sub
aaa
mov
in
push
int3
mov
and
aad
mov
mov
jbe
imul
addr16
mov
mov
xchg
andb
push
les
push
jmp
cmp
mov
and
outsb
xchg
shll
jne
imull
and
mov
imul
sbb
ja
pop
lret
lcall
out
mov
adc
in
repnz
dec
shll
ljmp
dec
cmpsl
js
icebp
mov
jge
push
jmp
sahf
fdivs
cmp
pop
test
adcl
insb
iret
mov
and
stos
mov
jmp
inc
jne
push
xor
jb
pop
lahf
dec
mov
xor
xchg
mov
outsb
dec
and
sahf
call
fdivrl
adc
mov
mov
addr16
mov
shrb
sub
outsw
nop
jp
outsb
jne
xchg
popa
sahf
xlat
and
cmp
repz
mov
ret
sbb
bnd
in
stos
cs
popf
std
dec
negb
xor
or
divb
rcr
outsl
and
push
xchg
ds
test
fistpll
push
push
shll
bound
mov
addr16
test
push
adc
or
jno
pop
xchg
int3
pop
mov
aas
popf
jns
int3
cld
xchg
pushf
jp
mov
dec
cmp
sub
add
cmp
frstor
lcall
divl
xchg
mov
and
add
xor
mov
out
lret
addr16
mov
cld
test
dec
fstpt
pop
das
xchg
cltd
push
in
push
dec
mov
pusha
loope
loope
lods
cmpsl
sbb
outsb
test
iret
sbb
push
pop
fs
mov
adc
mov
jae
loop
mov
dec
hlt
lret
mov
xchg
sub
jmp
scas
xchg
aas
gs
mov
ret
xor
jns
push
sti
mov
pop
dec
cli
cwtl
mov
aas
or
sti
ds
popa
scas
pop
repnz
push
js
stc
bnd
ret
adc
xchg
jo
jge
ret
dec
iret
test
adc
xorb
stc
leave
dec
push
popl
out
xor
paddusw
mov
lret
ret
pop
cmp
rol
movsb
jle
test
jmp
sub
add
or
mov
jnp
subl
cmp
test
mov
ljmp
out
fdivl
cli
cmp
sub
and
sub
sbb
sbb
jmp
pop
data16
adc
push
fucomi
lcall
add
ja
ret
je
imul
push
xchg
push
movsl
loopne
rol
jge
dec
aad
data16
push
mov
pop
or
jle
add
mov
dec
ret
movsb
movsl
js
popl
test
pop
aad
sbb
inc
addr16
jo
aaa
or
xlat
pop
mov
xorl
clc
cld
jnp
mov
mov
or
lret
cmp
pop
insl
test
jbe
mov
ds
data16
loope
in
scas
cld
call
cmp
arpl
mov
jmp
sbb
decl
push
adc
mov
leave
lods
fwait
push
insb
xor
lret
lods
arpl
adc
xchg
xchg
mov
dec
add
mov
test
ret
xchg
stos
xchg
xor
fcomip
xlat
fldenv
cmp
js
inc
sar
daa
pop
add
push
popf
in
xchg
outsb
leave
sbb
icebp
outsb
div
pop
sbb
mov
sub
adc
jno
push
push
add
fiadds
popa
add
es
mov
mov
adc
and
andb
cmp
ret
jp
pop
adc
orb
test
call
int
lret
sbbl
xchg
adc
xchg
xchg
and
shll
pop
push
vminss
test
notb
imul
add
dec
jecxz
add
or
es
and
and
int3
test
cmpb
xchg
ret
push
sbb
stc
dec
jns
out
push
xlat
icebp
cmp
rclb
xor
mov
pop
xchg
push
imul
shrb
xor
std
icebp
jns
repnz
hlt
mov
nop
bound
repz
jb
xchg
inc
rclb
xchg
mov
add
adc
ret
shlb
bound
mov
ror
jg
cmp
ret
ret
fdiv
ret
cmc
cmp
sbb
ret
xchg
lret
lock
dec
mov
mov
lret
inc
xchg
sahf
jnp
sbb
fistl
fnstsw
cmpsl
jmp
dec
sarl
inc
jp
loop
push
outsb
iret
pop
movsl
add
enter
cmp
out
dec
ds
pop
sub
xlat
mov
daa
cmp
cmp
mov
mov
push
sbb
and
or
frstor
xor
or
and
test
jl
in
jnp
or
push
mov
xchg
rorb
ret
shll
inc
fcmovnu
cltd
inc
shll
push
dec
call
push
jge
sbb
fcmovnbe
arpl
negl
pop
pop
sahf
push
push
scas
mov
pop
xchg
sub
push
cmpsl
lock
int
mov
sub
je
mov
aad
cmp
xor
or
fmul
mov
sub
icebp
stos
pusha
or
dec
cmp
fildll
push
repnz
scas
out
fmull
add
scas
pushf
mov
sub
mov
cltd
cmc
sbb
or
cwtl
imul
enter
inc
pop
in
mov
hlt
mov
sub
jge
sbb
filds
int3
enter
loop
rcl
fnstsw
mov
mov
lahf
and
in
popf
push
aas
daa
fwait
ret
or
js
jmp
mov
jno
out
sti
outsb
lds
jmp
out
cmp
xchg
push
popf
and
xchg
add
push
inc
mov
inc
fwait
imul
cmp
sti
aad
lahf
repnz
aas
lea
aad
jno
sbb
test
pop
or
sub
es
or
rorb
cltd
sbb
popf
inc
xor
sbb
xor
test
mov
gs
pop
out
test
cmp
jecxz
jp
aas
mov
dec
push
mov
xor
dec
dec
aaa
jle
mov
popa
stos
dec
lret
mov
sub
adc
ljmp
scas
mov
sbb
test
push
push
das
or
mov
ret
jmp
add
sbb
add
iret
mov
in
outsb
cmp
adc
aaa
negb
std
sub
int3
subl
addl
cmp
in
insl
sbb
mov
mov
clc
rorb
push
aas
mov
out
pop
fidivrs
cmc
sub
add
or
mov
rcrb
loop
je
divb
movsb
out
loope
je
cmp
mov
mov
in
arpl
shl
add
inc
popf
lock
jg
lea
ljmp
mov
xlat
pop
push
mov
mov
div
adc
or
or
jno
fnstsw
test
mov
pusha
push
pop
sub
sbb
fsubs
icebp
js
xchg
mov
jae
outsl
test
mov
aas
and
jmp
sbb
xchg
fcmovnb
aam
pop
je
ljmp
inc
push
jp
ds
inc
lahf
xchg
not
negb
rcll
and
jo
add
sub
inc
mov
inc
adc
mov
scas
xchg
ret
frstor
mov
imul
and
push
das
in
mov
stc
clc
dec
dec
cmpsl
pop
icebp
arpl
mov
inc
cmp
mov
push
sbb
mov
movsb
add
sub
or
mov
shlb
sub
fimuls
loop
push
add
or
dec
test
xor
mov
stc
test
dec
sahf
lret
pop
xchg
pop
mov
push
cmp
mov
stc
int
out
inc
es
orb
aad
addl
sub
fistl
mov
push
stos
jae
cmpsb
or
or
call
push
mov
pop
test
or
cmp
push
fnstenv
or
test
jb
and
cs
xchg
out
out
stos
mov
sub
popf
or
mov
fidivl
loope
call
cmc
inc
mov
dec
mov
sub
cmp
xchg
fbld
jmp
js
jne
mov
pop
push
addr16
out
ret
dec
cmp
lret
daa
push
out
arpl
inc
arpl
xor
test
or
xchg
push
inc
xchg
xor
pop
popf
data16
jecxz
xchg
mov
cmc
adc
inc
or
jo
push
mov
or
fldl
or
fsubs
dec
xor
test
loopne
inc
lock
xchg
imulb
lods
sbbb
sti
sub
imul
push
mov
rcl
add
movsl
stc
cs
inc
out
xor
dec
jb
add
and
inc
mov
insb
cmpxchg
lock
add
mov
xor
push
lret
cld
out
inc
mov
imul
pop
xchg
std
cmp
repz
iret
loopne
gs
push
call
aam
mov
jae
into
adc
ret
or
std
pusha
movsb
cmp
pusha
out
bound
lret
inc
sbb
lock
xchg
sbb
sub
popa
sbb
push
out
xchg
stc
ljmp
and
push
scas
push
outsb
mov
lea
scas
rcrb
push
and
leave
idivl
iret
movsb
xlat
cmpxchg
xorb
xor
adc
inc
or
clc
lds
movsl
mov
cmp
sub
inc
push
mov
vpackuswb
test
xlat
sahf
push
jmp
inc
dec
std
sti
sahf
mov
xchg
fs
hlt
cmp
dec
jmp
sbb
mov
adc
adc
inc
insl
pop
push
mov
mov
xchg
stos
repz
loope
mov
jl
icebp
sub
jle
loope
jb
fisttpll
xchg
pop
sbb
xchg
jge
xor
rcl
push
hlt
sub
ret
lcall
lahf
xchg
shlb
push
and
test
in
sub
pmulhw
mov
dec
lock
push
stc
sbb
fildl
push
lock
pop
das
sbb
jno
xlat
jp
fmuls
push
stos
insb
dec
cs
cmp
xchg
and
dec
push
enter
int
dec
jmp
pusha
push
scas
push
out
jge
ljmp
mov
jmp
mov
lea
test
ret
xor
out
dec
xor
pop
cltd
mov
dec
push
push
sub
push
xchg
cmc
and
in
repz
sbb
subb
imul
repnz
mov
cmp
cmp
leave
imul
mov
fildl
cld
pop
popf
xor
es
adc
pop
push
sbbb
stos
bsr
outsb
scas
or
dec
add
and
movl
cli
std
mov
leave
sbb
lock
mov
aaa
out
and
jg
add
dec
sub
jp
test
sbb
ret
sti
cmc
sub
test
mov
test
inc
mov
aaa
out
insb
pop
les
es
js
sbb
ljmp
xlat
mov
fcoml
or
jmp
aas
mov
ror
dec
inc
pop
rolb
out
dec
outsl
xchg
mov
add
jmp
aaa
cmp
in
push
dec
sub
or
clc
icebp
sub
push
aam
add
pop
lods
arpl
sti
mov
arpl
sub
mov
movsl
pop
out
mov
mov
idivb
xor
jnp
or
xor
cmp
push
adcb
ss
lods
icebp
jg
mov
sar
hlt
cld
mov
roll
pusha
out
imul
les
pop
cs
fsubrs
sbb
mov
in
mov
push
ljmp
push
inc
mov
push
mov
jnp
fisubs
cmp
scas
js
cmpsb
pushf
std
je
cld
mov
test
das
std
fsub
dec
in
or
jae
adc
sub
dec
push
jmp
inc
call
lods
xor
sbb
inc
push
jg
add
sub
xor
mov
dec
sbb
adc
ja
pop
lods
enter
loop
hlt
aaa
mov
xchg
cmp
inc
sbb
outsb
pop
test
sbb
dec
pop
fidivrl
loope
cltd
or
mov
test
inc
push
jmp
test
inc
aam
xchg
addw
add
push
pop
pop
cs
cmp
sbb
std
jno
out
loop
pop
cmpb
cmc
sti
mov
out
mov
lret
push
pop
cmpsl
sub
jl
iret
mov
psllw
fnstsw
pop
shll
jno
sbb
pop
cmp
call
or
adcb
fistpl
testl
mov
call
dec
loope
imul
push
xchg
leave
inc
push
cmp
sub
mov
mov
outsl
les
inc
xchg
insl
sub
xchg
xchg
aam
outsl
xchg
popa
outsb
adc
xor
loopne
cmp
sbb
icebp
push
xchg
mov
popf
jns
ret
imul
inc
xchg
jbe
xor
gs
push
inc
into
adc
add
cmp
xchg
jae
lcall
xor
les
jmp
push
rcl
enter
arpl
pop
push
je
add
int3
rcll
movsb
shl
xor
pop
xchg
ret
arpl
adc
out
and
in
mov
xchg
mov
jnp
testl
xchg
cmp
lret
repnz
xchg
fimull
negl
cmp
scas
fcmovu
jecxz
ss
sbb
aaa
dec
bound
jmp
ss
jp
push
jne
jb
mov
jmp
jmp
outsl
mov
jmp
adc
mov
pop
lods
and
sbb
idivl
lock
daa
mov
cmpsl
mov
cmp
mov
int3
mov
xchg
repz
or
rorl
dec
popa
arpl
jb
leave
and
jmp
iret
loop
xchg
mov
jge
inc
ja
clc
push
add
pop
mov
inc
outsb
ret
mov
std
adc
push
inc
dec
arpl
fisubrs
push
push
xor
sub
into
sbb
sbb
xchg
insl
fnsave
shll
jle
outsl
lret
lods
jecxz
ficomps
insb
or
enter
mov
aas
push
fwait
leave
cld
fwait
rcll
mov
imul
orb
pop
mov
je
push
fs
mov
scas
out
adc
xchg
push
pop
mov
shlb
xor
cli
nop
outsl
jae
testb
rorl
fistpl
mov
int
outsl
cmpsl
inc
or
lcall
pop
mov
filds
fst
pop
stos
jl
xor
mov
shrb
xchg
xchg
into
dec
leave
cmp
mov
mov
sbb
into
ljmp
mov
jge
pusha
mov
mov
into
test
enter
mov
call
iret
mov
push
rcrb
ds
insl
sbb
testb
jp
cmp
loope
repz
shlb
mov
inc
mov
push
push
pop
xchg
lods
mov
pop
sub
dec
sub
adc
rcl
loopne
cltd
dec
cld
or
mov
test
jae
xorb
xlat
imul
orl
enter
stos
cmp
push
cmpsb
stos
inc
cmp
cmpsl
cmp
add
mov
sub
xchg
data16
push
pop
mov
mov
jb
subb
repnz
xchg
frstor
popf
cwtl
xor
jge
inc
aad
push
daa
mov
sbb
and
testb
xchg
xor
scas
rcr
jnp
xchg
inc
xor
pop
mulb
rcll
jb
jg
lret
xchg
lods
orl
sbb
mov
mov
adc
ds
pop
sub
mov
lret
xor
mov
mov
xchg
or
cwtl
push
or
and
cmpsl
std
cmp
mov
mov
fstps
addr16
pop
inc
sub
aam
push
mov
mov
lea
cld
lret
out
leave
cmpsb
cmp
dec
jb
std
cmc
out
test
shlb
ret
data16
inc
xorl
hlt
popa
mov
mov
pop
outsb
ljmp
scas
enter
cltd
loopne
sti
mov
iret
pop
mov
std
mov
ret
dec
sub
pop
std
jnp
testb
dec
adc
in
iret
pop
jae
cs
int3
data16
pop
adc
sbb
jbe
popf
in
jns
push
add
mov
loopne
lock
in
sub
in
inc
loop
mov
xlat
sub
out
xchg
mov
adcl
or
and
jnp
ljmp
cmpsb
adc
iret
jno
inc
pop
pop
jg
and
ss
mov
loopne
je
outsb
cmp
mov
ds
cwtl
not
or
test
add
mov
jl
aaa
and
clc
mov
imul
cmpsl
and
dec
repnz
hlt
cmp
mov
xchg
inc
mov
les
adcl
insb
dec
mov
pop
mov
stos
mov
jg
dec
inc
push
popf
fwait
iret
xor
pop
lahf
andl
xchg
pushf
add
repz
out
dec
enter
sbb
ljmp
and
sbb
sbb
mov
xchg
aad
into
push
mov
mov
sarb
add
lds
mov
clc
sbb
and
push
cmp
dec
mov
mov
into
xchg
mov
dec
mov
outsb
and
add
mov
mov
mov
push
gs
out
mov
repz
cmp
push
or
pop
xchg
pop
insl
mov
les
mov
lock
mov
mov
mov
push
jmp
mov
ror
icebp
scas
ffree
or
scas
jno
sbb
repz
mov
in
jp
and
xor
imul
cmp
mov
pop
mov
in
sbb
cli
lock
sbb
mov
cmp
insl
cmp
mov
lock
sub
inc
push
xor
mov
test
movsl
and
in
imul
cmp
lock
fnstsw
or
shrl
enter
mov
mov
stos
sub
xor
jmp
outsl
xor
ljmp
sub
imul
icebp
jae
mov
in
mov
loop
or
test
mov
jp
shl
pop
pop
lea
addr16
push
jmp
lahf
xchg
or
pop
inc
mov
mov
cmpsl
rorl
rcrb
push
fdiv
mov
adc
lahf
mov
sub
xchg
stos
adc
cmp
cmp
cmp
push
pop
cmp
loope
int
jno
jne
sub
pushf
adc
insb
loope
mov
adc
ss
arpl
pop
jbe
xor
es
pop
aad
hlt
jg
mov
inc
in
insb
cmp
and
and
pop
insb
lcall
lcall
imull
andl
xchg
fists
lcall
mov
test
mov
fdivl
pop
sbb
scas
sub
inc
jo
mov
xlat
mov
mov
call
sbb
rcrl
mov
into
sti
cs
xchg
out
cld
dec
cmp
jmp
addr16
mov
jae
test
jb
jge
rcll
pop
add
iret
out
cmc
sbb
or
mov
sub
out
stc
mov
or
out
xchg
repz
jne
dec
outsl
jg
int3
inc
fmuls
out
xchg
shrb
fnsave
sbb
pop
clc
inc
frstor
cmc
mov
ret
hlt
or
dec
outsb
sub
iret
movl
sarb
pop
clc
lock
jp
mov
jp
inc
and
push
js
out
loop
xchg
enter
pop
dec
mov
imul
insl
push
mov
sub
dec
pop
jle
insl
cs
mov
fsub
sub
movl
push
jae
cmc
repz
lahf
mov
xor
stos
std
nop
push
cmp
dec
jp
add
popf
mov
xchg
insl
inc
or
icebp
out
and
scas
in
sub
pop
cli
in
in
xchg
jecxz
popa
adc
mov
wrmsr
scas
subps
mov
and
push
addl
fistpl
mov
hlt
int
add
push
jns
jns
jp
push
pusha
mov
nop
ss
aas
xchg
and
mov
jne
je
sar
dec
mov
push
in
iret
ja
jl
rol
cwtl
loope
ja
sub
mov
push
enter
es
test
push
aas
leave
xor
sbb
xlat
lahf
in
xchg
fildll
mov
das
es
xchg
jp
adc
sub
adc
mov
dec
xchg
and
pushf
push
lods
jmp
xor
mov
es
cmp
je
mov
loope
popa
loop
push
rcrb
dec
cwtl
and
mov
aaa
pop
sub
push
scas
shl
cmp
xorb
inc
jp
neg
sub
and
or
icebp
std
push
jns
imull
insl
pop
sub
add
fisubrs
jno
and
cli
dec
jmp
nop
inc
test
sbb
dec
fs
paddsb
int3
fadds
iret
mov
stos
stc
add
addr16
or
aad
mov
or
push
scas
add
push
add
int3
div
lea
pop
iret
cs
addr16
sbb
mov
jmp
pop
cmp
js
fucomip
ret
lock
or
sbb
or
xchg
push
mov
ret
test
cld
inc
push
or
jmp
mov
fcoml
add
pusha
dec
rcrb
bound
jl
orb
push
xchg
mov
or
outsl
nop
mov
sbb
lods
sub
cs
dec
aad
push
out
jp
lock
and
outsb
and
xchg
sub
out
sar
ret
or
cmp
loopne
push
push
sbb
scas
testb
imul
rcl
mov
rclb
mov
outsl
sub
xrelease
shll
clc
cs
mov
fidivrl
movsl
jno
jecxz
inc
xlat
xlat
out
inc
adc
lods
pop
fucomi
daa
shll
aaa
add
stc
xlat
mov
orb
mov
stos
and
mov
out
daa
push
jge
test
dec
cmp
nopl
orl
ret
cmp
cmc
sub
lcall
mov
sbb
je
mov
inc
push
aaa
xchg
scas
cmp
cmpsl
mov
inc
mov
mov
es
into
inc
push
fisubs
jne
cmp
sub
into
cmp
jne
xor
mov
sti
mov
enter
fsubl
sub
or
cmp
or
lea
nop
mov
cmp
jmp
and
dec
jae
xchg
adc
push
jnp
imul
gs
gs
ja
cld
enter
mov
hlt
pop
mov
add
jle
xchg
xchg
in
sbb
push
sbb
outsb
add
jnp
fcomi
rclb
aas
sub
into
mov
inc
rcrl
out
adc
outsb
xor
lcall
sbbb
mov
and
fldt
mov
stos
lret
call
push
lea
cmp
hlt
mov
aaa
aaa
into
inc
movsl
mov
subb
imul
and
inc
ret
jmp
nop
int3
jge
ds
arpl
imul
sub
xor
fldcw
cmpsb
mov
mov
pushf
leave
jle
sbb
test
adc
lea
xchg
insl
ret
sub
adc
mov
push
push
scas
inc
pop
cmp
add
das
pop
out
sarl
cmp
add
cmc
ss
decl
push
les
jnp
aas
cmp
cmp
inc
out
cmp
jmp
lock
mov
xor
xlat
mov
adc
xchg
pop
mov
or
sahf
push
cmp
imul
xchg
mov
mov
mov
dec
arpl
insl
xor
xchg
mov
mov
xchg
stos
push
test
mov
divps
xchg
or
cs
inc
dec
inc
mov
mov
mov
sub
cmp
cmc
mov
mov
sar
mov
cmpl
in
jbe
jne
cmpl
pop
cs
xchg
mov
adc
ljmp
xchg
inc
sub
stos
imul
jp
insl
mov
scas
mov
mov
jp
or
push
fwait
lret
fwait
pop
dec
shrl
ljmp
jmp
dec
mov
inc
outsl
inc
mov
xorb
pop
adc
orl
sbb
out
lock
jbe
cmp
maxps
push
mov
cmp
sub
or
lock
mov
int
sub
pop
ja
scas
mov
call
lahf
sbb
js
mov
jo
aad
mov
add
xchg
mov
adc
repz
sbb
sti
xor
or
clc
cmp
mov
jge
rcrl
mov
movsl
mov
and
movsl
aaa
fnsave
imul
and
rcrb
xchg
sbb
call
inc
pop
push
sub
stc
cli
outsb
push
adc
inc
jle
push
push
sub
je
shll
lds
push
lock
jbe
rorl
mov
call
negl
enter
shr
repz
das
mov
sub
subl
sarb
push
sub
cmp
out
jo
xor
loop
add
cmp
cmc
mov
pop
aas
div
cmc
dec
sahf
xorb
scas
add
std
sbb
loope
inc
jle
mov
aam
lret
nop
pop
sti
mov
nop
in
inc
or
cmp
hlt
cli
shll
orb
sub
mov
xor
adc
out
ds
push
pop
cs
sub
xor
push
movl
lret
aad
or
imul
sbb
rcl
cmp
jg
enter
out
jle
jne
mov
add
inc
in
cld
xor
lds
sub
cmp
xchg
cmp
out
xor
or
gs
mov
fwait
jp
lods
mov
ss
cmp
lds
cmpsl
xchg
adc
pop
out
xor
or
aaa
xchg
mov
pop
mov
shrl
dec
lock
insb
cwtl
and
jo
fnstsw
lahf
xor
xchg
jbe
rcl
adc
scas
das
lret
call
inc
xchg
daa
std
add
popa
and
fnsave
jne
xchg
loope
pop
xchg
cmp
and
cmc
xor
xchg
jbe
cmp
divl
pop
jne
in
out
imul
nop
jns
neg
sub
mov
stc
or
lret
jg
cmpsb
or
icebp
jbe
cmp
ja
in
cmp
scas
xchg
aaa
std
loope
jbe
shll
int
mov
out
sbb
cmp
cmp
pop
and
mov
repz
xor
adc
and
repnz
mov
pop
lock
mov
jp
jne
aas
push
push
sub
popl
movsb
daa
push
pop
dec
push
imul
inc
xor
xor
in
scas
or
lock
mov
outsb
adc
add
cmc
or
aad
scas
movsl
mov
mov
add
inc
sbb
and
inc
push
cmpsl
mov
cli
fs
lret
test
or
push
mov
adc
rorl
mov
dec
pop
stos
mov
jo
dec
mov
aaa
mov
sbb
dec
push
dec
pop
fwait
mov
repnz
fnstsw
outsb
dec
icebp
lock
stos
jbe
roll
in
outsl
out
add
mov
mov
xlat
scas
xor
lock
mov
push
jne
insl
call
gs
lea
lods
jb
sbb
in
dec
mov
mov
test
adc
clc
icebp
dec
sbb
rcrl
mov
std
shl
pop
sub
cmpsl
xchg
and
push
das
addr16
out
xor
or
or
inc
mov
stos
scas
push
mov
mov
mov
push
push
mov
nop
mov
push
sub
lea
adc
lods
gs
popf
imul
xchg
push
lea
dec
outsb
pushf
icebp
and
iret
loope
jbe
shll
fucomip
mov
or
fwait
mov
sbb
outsl
jbe
cmp
adc
mov
imul
cmc
sub
lahf
jbe
cmp
lds
cmpsl
scas
in
adc
sub
or
or
push
lret
mov
mov
fldt
push
jno
mov
and
popa
mov
inc
mov
push
sub
lea
jb
sbb
in
jl
dec
lods
imul
movsl
push
fstpl
fstpl
push
sbb
shll
mov
push
sub
lret
sbb
fadd
xor
int3
mov
mov
xor
mov
push
sub
lea
pop
or
or
lret
rorl
nop
das
bound
fcoms
or
pop
pop
repz
daa
sub
lea
js
ja
mov
pop
add
rcrl
roll
cmp
cmc
rol
ja
xchg
cmp
arpl
xchg
scas
jae
int3
mov
mov
xor
push
cmp
sbb
adc
jo
xlat
sub
lea
add
mov
mov
das
bound
popf
pop
inc
fstp
pop
outsb
lods
icebp
adc
jmp
dec
jbe
shll
iret
sti
mov
aaa
lcall
add
mov
push
jp
mov
and
mov
cmp
lea
mov
or
adc
jg
enter
mov
mov
mov
pop
mov
mov
push
sub
lea
or
movsb
insl
dec
imul
pop
dec
ffree
inc
outsb
movsb
icebp
sbb
loope
jbe
shrl
xlat
jecxz
mov
rcll
cmp
cmc
loopne
addr16
cmp
adc
jge
arpl
fdivl
rcll
sarb
mov
hlt
pop
and
cmc
jl
ret
jbe
cmp
cwtl
adc
cmp
jns
test
cmp
imul
stos
imul
mov
test
pop
mov
push
mov
mov
push
sub
lea
scas
hlt
jb
sbb
in
add
dec
shrl
mov
icebp
push
icebp
pop
xor
mov
xchg
mov
call
add
push
sub
cld
scas
adc
aas
mov
mov
mov
fwait
dec
fs
cmc
aaa
mov
cmp
lds
cmpsl
cwtl
jecxz
jo
xor
xor
repz
and
mov
aam
xor
or
push
in
or
and
in
push
stos
or
sahf
sub
adcb
insb
xchg
popf
clc
movsb
push
lods
data16
lret
push
enter
notl
sbb
jmp
nopl
inc
ds
fstl
dec
cmpsb
xor
stos
sbb
outsb
xchg
in
mov
add
mov
jmp
mov
cmc
mov
fwait
xchg
ret
test
imul
sub
jo
cwtl
ja
mov
shrb
fwait
inc
fistps
loope
or
cmp
bound
or
cmpsb
jecxz
pop
shlb
mov
and
inc
in
push
lcall
popa
aaa
movsl
sbb
xchg
cld
lahf
fisubrs
sub
addb
sub
pushf
fucom
or
or
lcall
aam
cld
arpl
pop
xchg
push
out
xlat
mov
cli
test
iret
mov
sub
sub
mov
sub
loope
in
loope
inc
rol
pop
mov
sub
adc
insl
lea
int
cmp
fs
cmp
scas
cli
fsts
push
xchg
orb
push
xor
daa
dec
sub
jmp
add
mov
cmp
or
fucomi
mov
movsl
mov
add
jbe
inc
fabs
jmp
sbb
movsb
xchg
je
sbb
mov
aam
cmp
inc
mov
mov
mov
into
xchg
sub
and
in
test
sbb
mov
adc
mov
jno
cmp
pop
das
inc
mov
fwait
add
outsl
pop
lea
xor
pushl
push
imul
pop
or
out
jl
or
mulb
xor
jmp
gs
lahf
mov
mov
jmp
ret
ret
mov
jae
fsubl
mov
arpl
cmpsb
scas
dec
mov
xor
inc
xlat
or
dec
movsb
mov
mov
mov
sub
jecxz
sub
pop
data16
and
mov
dec
jecxz
stos
xchg
hlt
mov
cs
iret
and
mov
inc
xor
xchg
sub
dec
or
sbb
popf
dec
mov
dec
lcall
dec
mov
sti
roll
mov
flds
pushf
mov
clc
mov
pop
push
mov
pop
in
sub
mov
shrb
add
inc
movsl
cmp
adc
xchg
add
and
add
jo
fs
in
adc
dec
lret
sbb
jl
test
cmp
imul
pop
rcl
lds
lock
jecxz
push
sub
pop
call
lea
hlt
loopne
dec
insl
mov
sub
js
lret
lret
pop
dec
cwtl
push
sbb
mov
scas
sub
lret
push
xchg
and
sbb
sub
mov
scas
movsl
div
lds
sbb
mov
popa
sub
push
adc
shlb
push
lret
sbb
sub
xchg
int
ljmp
jmp
cmp
push
jo
push
mov
addl
das
mov
adc
inc
enter
add
adc
jne
jnp
cmp
sbb
xchg
ret
cmpsl
jg
xor
mov
jae
cmpsl
mov
mov
jae
js
fmuls
cs
and
testb
add
lcall
cmp
std
ja
aaa
mov
clc
insl
cld
jg
xchg
mov
js
rol
add
fisubrs
add
or
sarl
xchg
dec
add
in
dec
add
mov
mov
push
dec
inc
jbe
ret
cwtl
xchg
out
stos
push
xchg
xlat
lret
mov
push
mov
sbb
sti
mov
movsb
push
cmp
cli
pusha
add
jnp
jne
rclb
bound
dec
pop
daa
sti
mov
add
inc
shr
incl
mov
cmp
mov
outsl
xor
mov
cmp
sti
out
or
shr
or
iret
add
mov
and
push
fcomip
jp
cwtl
cmpsb
mov
orb
int
jno
jle
cwtl
pop
xor
and
lret
xchg
insl
push
pop
mov
cld
mov
fimuls
xchg
in
fwait
movsb
das
fdivs
mov
cmp
sbb
insb
xor
aam
or
vpinsrb
cltd
mov
adc
cmp
and
cwtl
sbb
cmpsb
lods
cmc
xlat
lcall
and
sub
fnstcw
mov
sbb
jne
or
cmp
iret
inc
mov
ret
push
in
and
push
sahf
push
mov
push
mov
pushf
or
lea
xlat
or
mov
inc
mov
int3
pushl
jbe
xchg
cmp
and
xchg
and
aad
bound
aaa
adc
lret
sbb
das
jnp
and
jns
lods
xor
insl
mov
shll
cmp
popa
push
incb
mov
push
mov
push
jne
mov
outsb
add
add
mov
test
shl
mov
xchg
adc
data16
pop
rolb
in
jne
call
pusha
mov
int3
daa
jmp
mov
or
cltd
insb
inc
xchg
out
jmp
mov
int
jae
push
lret
cwtl
dec
mov
aaa
sub
lock
push
in
dec
jbe
cmp
cmpsb
cmpsl
add
pop
out
aas
cmp
lock
divb
sbb
in
pop
outsl
dec
inc
imul
ret
push
jp
popf
mov
inc
shll
mov
aas
sti
lea
lods
or
push
scas
xchg
mov
cmp
out
jo
inc
mov
push
lock
psubsb
stos
mov
or
pushf
xchg
push
shll
pop
rcll
mov
pop
inc
fnstsw
mov
outsl
les
outsb
fisttpll
lea
sbb
mov
aam
cmp
insb
sub
nop
sbb
cltd
or
cmpsl
xor
outsl
out
xor
xchg
xchg
mov
mov
addr16
adc
xor
out
xchg
jb
sbb
in
or
dec
jmp
ret
mov
pop
mov
leave
pop
sub
scas
fisubrs
xchg
add
cmp
dec
xor
mulb
push
notb
inc
cmp
cmc
nop
cmp
xchg
push
cmp
out
sub
lea
jne
mov
pop
sbb
push
cmp
scas
loope
sbb
xchg
jbe
shl
or
mov
vpmullw
cmp
cmove
pushl
ret
jl
cmpsl
sbb
pop
fistl
xor
lcall
nop
orl
lret
mov
inc
stos
add
jno
ljmp
shrb
mov
rorb
mov
lock
inc
sbb
in
ss
sbb
mov
push
stos
lds
push
jge
ja
cmp
xchg
cmp
es
mov
loopne
cmp
adc
xor
out
mov
mov
cmp
out
xor
or
xchg
jp
pop
mov
dec
ror
mov
push
xchg
and
jle
xor
push
pop
mov
push
aaa
mov
ljmp
in
lds
sti
mov
lahf
jbe
cmp
lds
shll
xchg
xor
std
or
xchg
pop
cmp
ljmp
mov
call
arpl
scas
adc
xchg
js
inc
sub
cld
cmp
lea
pop
gs
jbe
mov
dec
sbb
stos
test
inc
xchg
mov
cmp
movsb
nop
add
adc
dec
push
out
xchg
cwtl
in
push
stos
mov
inc
fdivl
ds
shl
sbb
mov
jmp
testb
mov
push
lcall
inc
inc
mov
out
aad
pushf
or
icebp
xchg
mov
push
lds
ljmp
and
jge
clc
stos
inc
xchg
test
mov
xchg
pop
repz
adc
and
mov
dec
xchg
pop
outsb
or
test
push
jmp
dec
andb
in
xchg
add
or
ror
inc
orl
xchg
decl
inc
sub
mov
mov
imul
in
sahf
outsb
xor
and
fs
lds
mov
cmp
outsb
cs
aaa
cld
push
fidivrs
decb
add
xchg
xchg
mov
popa
push
incb
jle
or
xor
test
cmp
int
cld
mov
fnstenv
shrl
add
cs
mov
push
in
das
xor
inc
aas
dec
pop
mov
sbb
test
arpl
das
sbb
sbb
jmp
shll
push
outsb
pop
movsb
or
loopne
movsb
adc
cld
stos
xchg
repnz
mov
out
minps
iret
push
dec
xchg
xchg
iret
pop
mov
ret
rol
fidivrs
popf
cmpsl
mov
cmp
or
movsw
setne
sub
mov
mov
rcll
lods
sbb
xchg
pop
inc
or
in
data16
sbb
or
push
dec
push
in
subl
adc
lret
movsl
lods
jne
jbe
cmp
mov
push
cmp
jmp
shrl
loope
add
cmpsb
mov
sub
icebp
jle
lods
fists
aad
fs
fists
rcrb
test
dec
push
stos
sbb
in
push
jl
lea
mov
inc
inc
xchg
mov
cmp
mov
jae
dec
jb
xchg
call
mov
sti
sti
sub
scas
add
clc
pop
sbb
decb
and
clc
out
fs
inc
imul
mov
lcall
insl
add
or
add
add
int
jns
sarb
in
idivl
repnz
fldcw
xor
mov
rorl
adc
insl
mov
sbbl
stos
sbb
or
ret
cs
cmpb
mov
adc
dec
je
int
mov
mov
loopne
inc
xchg
sbb
test
lods
cmp
mov
sub
mov
les
jecxz
pop
or
sbb
mov
sbb
int
and
dec
add
mov
daa
xor
icebp
push
mov
jb
xchg
dec
cmp
pop
jmp
loope
push
jbe
cmp
pusha
xor
in
imul
cmp
loope
mov
jno
call
cmovge
pop
je
clc
sbb
and
je
xor
sub
pop
sti
mov
rclb
sti
jg
xchg
mov
sub
and
lret
insb
push
xor
mov
ret
cmp
jmp
shl
mov
push
divl
jg
decl
testb
lock
xor
xchg
sub
push
mov
loop
jnp
scas
cmpb
ljmp
cmpsl
pop
or
loop
fiadds
dec
ss
jb
jae
lods
mov
pusha
bound
divb
jno
cld
outsl
ss
imul
in
fiaddl
inc
mov
outsl
ret
mov
fdivrp
dec
mov
cmp
lret
mov
jo
push
fnstcw
jecxz
mov
mov
js
in
jg
push
shrl
loopne
push
testb
xor
lods
jmp
sub
daa
cmp
mov
sub
jns
subb
jecxz
aam
test
adc
xor
pop
filds
and
mov
fwait
imul
imul
sbb
jb
cmp
icebp
fnstcw
sbb
push
pop
mov
leave
mov
jl
inc
push
mov
ret
pop
mov
inc
mov
int
or
dec
out
mov
jno
aam
jge
cmp
in
lret
pusha
shlb
mov
xor
sahf
add
cmp
lods
aas
sbb
js
sub
pop
cld
pop
xor
cs
mov
das
lock
fwait
and
mov
movsb
clc
loope
or
lea
cmp
call
dec
iret
sub
push
iret
push
jp
nop
shl
mov
mov
cmpsl
ficoms
fcoms
jae
stc
out
push
pop
sbbl
es
push
scas
orb
popf
pop
fimuls
aaa
out
in
dec
das
cmp
mov
das
dec
push
xchg
aad
xor
xchg
fsubrl
lret
cmp
jle
mov
xchg
push
test
insb
inc
push
or
xchg
push
mov
scas
dec
sbb
lahf
dec
jne
aas
shl
rcr
xchg
flds
jns
aad
mov
sar
ja
dec
inc
aad
and
cld
xchg
cmpsb
push
adc
loope
and
movsb
scas
fcomi
sub
cmc
inc
pop
test
int
pop
cmpsb
adc
sub
jne
sarb
jns
dec
pop
pop
gs
lods
nop
adc
andps
mov
inc
lock
fcmovne
xchg
sub
shll
data16
enter
rclb
fcmovnb
push
arpl
negl
iret
insb
jbe
and
ds
mov
push
in
mov
or
jge
stos
mov
ljmp
aas
lods
mov
xlat
mov
lret
lock
rcll
mov
repnz
cmp
cmp
mov
jne
mov
sub
imull
push
in
scas
bound
imul
negl
push
scas
add
insl
mov
mov
cwtl
sarb
rclb
push
rcrb
in
out
sub
jbe
cs
sbb
xchg
rcll
popa
mov
enter
mov
pop
std
push
cmc
jo
inc
sbb
pop
repnz
iret
inc
mov
sub
ret
cwtl
dec
rolb
xchg
mov
sub
fwait
in
mov
pop
cmpsb
out
stc
or
push
dec
pop
sar
sbb
aam
cmpsb
outsl
mov
add
or
sti
push
mov
shr
mov
cli
push
jmp
sub
push
xchg
test
or
shrb
xor
stos
and
push
rorl
mov
xor
cmpsb
hlt
dec
int3
xchg
jne
mov
sbb
add
cmc
push
jne
xchg
aas
in
ror
push
mov
ljmp
call
inc
in
mov
xor
aaa
cli
and
jbe
inc
mov
xchg
sbb
or
insb
xor
mov
test
jne
xchg
mov
and
cli
pop
inc
or
hlt
jb
daa
pop
cmp
and
shr
into
imul
lods
cmpsl
jp
or
xchg
jl
mov
insb
aas
fildll
leave
dec
inc
sub
lret
adc
negl
xor
shrl
mov
sub
andb
lcall
out
into
rorl
and
mov
cld
sbb
pop
and
sub
fdivr
jno
push
aad
sbb
pushl
addb
push
mov
lods
mov
into
mov
fisubl
mov
lds
lock
in
lock
add
rolb
mov
inc
sahf
js
scas
notl
mov
and
adc
jle
mov
fisubrs
pusha
jmp
dec
jmp
mov
sbb
jmp
add
rolb
imul
into
mov
scas
sub
hlt
daa
push
shr
cmpsl
xchg
test
cmpsl
cld
jne
xor
addl
stos
icebp
or
inc
fstpt
xchg
in
inc
lods
testl
mov
mov
iret
sub
xor
movsl
mov
xchg
ret
mov
pop
pop
inc
add
push
jg
cwtl
fiaddl
popa
hlt
xor
jns
dec
fcomps
jo
mov
test
add
sub
arpl
cmp
cmp
lcall
sub
nop
sbb
push
test
cmc
cmc
loopne
cmp
mov
mov
frstor
and
mov
jno
cmp
push
cmpsl
dec
ds
sub
jae
dec
mov
popa
and
mov
test
push
ja
test
movsl
inc
mov
incb
cmp
fadd
push
sub
xlat
arpl
data16
dec
push
loopne
jecxz
add
add
xchg
stos
push
js
dec
push
mov
inc
lea
in
insl
mov
arpl
imul
pop
inc
popa
imul
sbb
mov
mov
xchg
push
repnz
sbb
fwait
and
scas
jg
mov
ret
lds
mov
jecxz
cmp
hlt
fldenv
mov
outsl
pop
mull
ret
mov
inc
mov
jge
test
test
xchg
push
fisubs
mov
loop
jge
pcmpgtw
push
cltd
ds
and
jmp
out
mov
mov
mov
push
cwtl
jno
pop
fnstcw
pop
movsb
fs
lock
sbb
sarb
mov
xchg
aam
xor
and
insl
notb
cmc
push
jg
arpl
ret
sub
or
and
add
pop
inc
mov
daa
sub
xor
lds
into
mov
sbb
std
ss
add
sub
xchg
std
sahf
pop
xchg
mov
or
lcall
fsubrs
inc
stos
lret
insl
mov
outsb
mov
jnp
cmp
shl
imul
cmpsl
adc
adc
fidivl
add
xlat
fcomi
lock
mov
jmp
pushl
test
mov
sti
lds
enter
pop
ret
adc
push
mov
in
adc
xchg
fdiv
sbb
jmp
xlat
gs
arpl
jecxz
js
push
sub
aaa
xchg
insb
mov
cwtl
movsl
dec
pop
or
lds
int
push
data16
xchg
gs
dec
jmp
jns
ret
and
sub
cmp
push
inc
mov
iret
dec
jo
std
mov
shl
test
cmpsb
xchg
andl
xchg
mov
mov
icebp
mov
ds
imul
xor
iret
mov
mov
cmpsl
jae
loopne
and
mov
es
mov
outsb
fcomip
push
scas
scas
stc
xor
ljmp
pop
lret
xchg
sbb
cmp
or
and
cwtl
dec
sbbl
sub
std
testl
mov
jmp
ds
and
out
je
fadds
mov
or
mov
mov
imul
pop
out
dec
mov
jge
mov
pop
pop
call
fisubrs
int
sbb
push
loope
sti
movsl
push
rcrl
es
and
hlt
mov
or
cmc
inc
cmp
dec
cs
xchg
and
test
sub
jle
pushf
das
sarb
mov
inc
push
mov
mov
jg
lods
mov
add
lods
icebp
cmp
or
shlb
fstpl
lret
in
mov
lcall
mov
add
cmp
lds
imul
xor
mov
in
mov
lods
jge
int
push
fisttpl
andb
and
push
mov
lahf
sub
popf
push
sahf
mov
pop
mov
stos
in
push
in
xchg
fistpll
mov
mov
in
or
and
xor
jns
push
iret
xor
dec
hlt
mov
jnp
push
add
sar
fdivrs
adc
int3
jp
test
jne
out
lea
cmp
iret
jo
pop
jns
inc
mov
test
fmull
hlt
pushf
xchg
push
jno
out
lock
lds
repnz
dec
lahf
pop
and
push
cwtl
xor
jp,pn
lahf
stc
outsb
in
mov
dec
scas
int
push
andl
cmp
lods
xor
mov
jmp
mov
mov
in
dec
fistpl
and
mov
pop
sub
fcoms
aas
mov
enter
repz
cltd
adc
xor
and
inc
bswap
and
addr16
jge
adcl
mov
repnz
dec
jmp
idivb
push
in
mov
movsb
cmp
sub
pop
clc
loope
enter
bswap
push
push
out
jne
mov
or
cmpb
adc
mov
mov
out
popa
fistpll
jo
add
inc
jae
jns
xchg
rcll
sbb
mov
clc
or
icebp
test
sbb
in
cmpsl
ret
scas
les
jo
aad
cmpsl
in
out
jmp
and
sub
test
adc
xlat
mov
inc
push
pop
insl
mov
ret
jle
and
scas
mov
and
cltd
sub
int
or
dec
add
sbb
out
leave
inc
dec
mov
jmp
cmc
push
hlt
addr16
jo
mov
ret
enter
mov
or
cmp
jmp
mov
addr16
decl
das
and
mul
mov
cld
mov
hlt
test
aaa
out
push
rcr
sbb
enter
mov
fs
inc
and
test
imul
lahf
aad
les
cmpsb
imul
inc
prefetch
icebp
sbb
sbb
mov
ja
and
cmpb
bnd
and
pop
pop
push
fsubrs
hlt
inc
sbb
mov
xchg
mov
jno
push
inc
push
in
test
icebp
out
addb
or
nop
cli
push
out
xchg
out
sbb
xor
adc
aad
fdivrs
mov
xchg
jmp
or
sub
lret
incb
pop
mov
stos
sub
psrad
adc
aad
jp
rcrb
sbb
movsb
loope
mov
stos
ret
ret
fsubrs
mov
cltd
adc
mov
outsl
cs
mov
cli
daa
sub
dec
jmp
out
pop
add
sti
add
hlt
in
iret
mov
aaa
fnstenv
cli
fcoml
sarb
mov
ret
fidivrl
mov
mov
mov
movsb
pop
daa
xchg
repnz
rcl
mov
xchg
outsb
dec
pop
xor
shrl
out
fcoms
adc
cmp
cmp
addr16
js
and
scas
and
rcll
push
and
scas
xchg
sub
xor
sar
out
or
dec
lock
sub
sti
das
cmp
mov
insl
inc
or
mov
sub
sbb
sub
cmpsw
mov
add
stc
mov
out
les
mov
outsb
mov
xor
retw
data16
sti
inc
adc
mov
je
xchg
mov
pop
jbe
stos
and
imul
ja
mov
sub
and
stos
xor
mov
and
sub
or
mov
cmp
in
into
sub
sub
jno
loop
dec
divl
clc
test
and
mov
jo
aaa
mov
adc
std
xchg
int
out
adc
movl
pop
mov
cmp
push
push
aas
rolb
aaa
test
xchg
add
imul
pop
mov
pop
mov
mov
xor
stos
add
call
fisubrs
jmp
or
push
sub
adc
fistpll
pop
lret
sub
out
lret
pop
fisubrs
cmp
arpl
sub
add
test
and
fiaddl
sbb
insb
cli
push
test
lods
mov
xchg
xor
in
out
js
mov
pusha
loop
and
imul
mov
and
div
push
xchg
xchg
jp
mov
cli
jg
cltd
cld
mov
push
cmp
imul
stos
andl
pop
xor
or
sbb
popf
mov
sbb
mov
cmpsl
cli
dec
lcall
push
sbb
jle
add
insl
pusha
or
test
in
stos
jb
fs
insb
jge
pop
or
subl
lods
nop
aas
push
cmc
pop
out
imul
scas
lods
fldt
loop,pt
jmp
sub
sbb
cmpl
js
dec
sub
pop
mov
xor
mov
xor
ds
cmpsl
inc
and
and
push
lcall
neg
sbb
push
fistpl
imul
popf
mov
inc
cmpsl
mov
xchg
fs
icebp
inc
test
mov
arpl
add
mov
add
shrl
in
outsb
cmp
movsl
lea
outsl
sub
pop
sub
pop
mov
cli
sub
mov
mov
inc
loope
jl
outsb
pusha
lret
fdivs
pop
xor
sub
xchg
stos
xchg
clc
imul
push
inc
pop
stc
scas
rorb
orl
mov
adc
in
mov
fmuls
aad
imul
sbb
pop
cmp
movsb
pop
and
mov
dec
out
imul
lods
or
ljmp
out
aad
xchg
pop
rclb
inc
push
fwait
lods
aam
mov
mov
cmp
repz
fldcw
in
xchg
add
bound
jno
mov
stos
mov
aad
xchg
mov
ret
adc
xor
mov
hlt
adc
inc
cmp
xorb
pop
outsl
jnp
cmpsb
jmp
loope
stc
push
cli
sahf
sbb
gs
pop
jge
jae
sub
mov
shlb
out
xchg
pushf
call
js
adc
insl
jbe
lret
sti
xor
cli
inc
cld
cmp
lock
pop
cmc
add
xchg
jg
pusha
xor
mov
cmp
jge
cmp
dec
cmp
mov
push
or
or
cmp
or
shl
jl
out
scas
jmp
fidivrs
shl
jmp
nop
sub
mov
pop
dec
or
sub
cmp
ret
outsl
jge
sbb
and
mov
daa
mov
xchg
mov
es
xchg
dec
std
ss
cmpsl
shl
ret
fidivrs
cmp
fldcw
pop
in
cmp
mov
insl
sbb
out
cmpsl
addr16
mov
inc
xchg
sub
sub
icebp
bound
or
push
lods
das
fucomi
clc
negl
aam
inc
nop
mov
pop
push
inc
movsb
dec
mov
imul
outsb
in
dec
mov
xchg
nop
sbbl
pop
out
test
push
incw
push
cltd
test
adc
aas
xor
ds
or
pop
dec
cmpl
mov
jmp
push
sbb
nop
inc
out
cmp
idiv
in
or
xchg
and
add
icebp
jmp
or
sbb
fadds
divb
jno
daa
imul
repz
shl
jo
addl
cmp
add
insl
les
sub
insl
sub
test
scas
mov
inc
pop
aam
jg
jg
test
imul
out
sub
dec
scas
or
xchg
fs
int3
xor
sarb
and
leave
movsb
aas
aas
xchg
push
or
enter
jl
dec
into
rcrl
aaa
data16
testb
ret
cmpsb
lcall
scas
cmp
jns
int
jbe
xchg
sub
mov
push
xor
inc
push
in
push
inc
into
ret
jmp
inc
les
aam
outsb
sub
push
xchg
mov
stos
mov
or
scas
cs
outsb
push
fcomip
addb
push
ja
aaa
mov
out
cmp
out
imul
cwtl
mov
jae
imul
pop
push
seta
jbe
xor
je
movsb
fnstenv
addr16
fdivl
adc
mov
int3
into
mulb
adc
cmp
out
cs
cmp
ret
in
pop
lock
aaa
xor
rclb
and
and
fmull
fbstp
scas
aaa
lock
xor
fdivs
jecxz
mov
and
mov
das
out
inc
and
mov
shrb
jns
jne
iret
hlt
popf
divl
dec
lret
push
cmp
ss
sbb
stc
lret
and
jg
mov
adc
xor
lods
jno
in
push
mov
lds
sub
in
pop
xchg
mov
call
out
ss
jns
mov
cmp
add
and
int3
jne
inc
out
enter
dec
jmp
and
sbb
js
ja
insl
lods
mov
mov
and
dec
mov
hlt
fcmovnbe
in
ret
subb
imul
in
adc
cmp
jns
enter
push
loopne
nop
pop
repnz
cmpsl
outsl
shrb
ja
jne
cli
in
mov
inc
jns
hlt
sub
outsb
and
mov
in
rclb
mov
movsl
xor
popa
sub
sbb
imul
lahf
mov
adc
jno
mov
jge
pop
adc
cld
inc
pop
sbb
shrb
jno
clc
mov
jo
sbb
jp
fdivr
jno
or
mov
jne
xchg
push
add
xchg
inc
loope
cmp
add
hlt
mov
lcall
mov
fwait
mov
outsl
mov
and
adc
sbb
mov
nop
ret
int3
mov
test
and
lret
stos
push
push
xchg
hlt
mov
pop
sub
push
mov
xor
jmp
sub
inc
out
call
lods
xchg
mov
fiadds
ljmp
xchg
jecxz
jg
pop
push
add
push
jge
insb
sti
sarb
or
jbe
sbb
cmpsl
imul
ror
nopl
and
add
push
add
loop
test
pop
sbb
xchg
push
divl
mov
cmp
jno
push
std
mov
pop
scas
rorb
imul
mov
cmp
inc
es
fdivrl
cwtl
int
adc
js
jnp
add
imull
pop
in
inc
cmp
inc
mov
xor
popa
and
jp
mov
sub
stc
mov
in
ret
fcmovnu
mov
push
xchg
push
adc
mov
stos
cmp
ja
into
lods
jge
cmp
and
fnstenv
xlat
inc
in
std
ja
rorb
scas
lods
sbb
ret
inc
sbb
and
rol
push
jp
sub
test
mov
and
mov
lahf
rorl
and
pop
pop
imul
inc
push
aad
sahf
test
stc
pop
mov
jmp
imul
cwtl
aas
lret
push
adc
jo
push
xchg
jmp
pushf
jb
mul
sbb
adc
fistl
stos
outsb
sub
rcl
cmp
sub
js
dec
sbbb
xchg
xchg
scas
adc
sbb
stc
push
inc
in
push
test
sbb
or
xor
inc
push
out
mov
das
daa
pop
insb
cmp
xor
inc
mov
push
cwtl
mov
ds
test
adc
cmc
cltd
insb
add
mov
mov
in
std
scas
xor
adc
push
pop
leave
lss
out
xor
and
mov
insb
mov
sbb
xchg
jae
xor
sbb
sbb
and
adc
jecxz
pop
dec
push
inc
adc
push
jge
shll
imul
mov
xchg
lea
push
adc
icebp
rcrl
mov
loopne
push
sub
lret
rcrl
fcompl
iret
cmp
fiadds
in
hlt
and
cltd
adc
push
icebp
int
push
cmp
nop
inc
push
jbe
xlat
and
push
or
ror
xchg
xor
inc
test
sbb
fucomp
into
ret
pop
stc
stc
xchg
int
les
into
mov
xchg
xchg
lret
cmpsb
jns
xor
xchg
lds
sbb
ret
adc
gs
cmp
push
add
aaa
xchg
inc
cmp
push
sti
xor
mov
cld
outsb
and
xchg
cmp
arpl
shll
imul
xor
xor
inc
or
loope
jo
adc
cmovno
aas
test
fists
jmp
scas
fbld
les
push
and
in
loopne
push
xlat
enter
xchg
bound
cltd
push
movsl
mov
push
cmp
cmp
ret
stos
jge
pusha
sub
repnz
xchg
mov
mov
adc
mov
repnz
popf
fmull
cld
mov
lea
pop
jno
sbb
inc
in
pop
xchg
rcll
xor
lds
mov
inc
popa
mov
inc
push
cmp
sti
gs
push
repz
cmp
mov
mov
jne
mov
mov
cli
xchg
out
pushf
mov
mov
insl
aam
hlt
dec
sti
xor
je
dec
pop
sub
mov
adc
cmp
adc
int3
mov
adc
push
test
aas
in
nop
sbb
popa
movsb
jo
inc
jmp
pop
dec
in
or
std
or
cltd
rcr
dec
in
cmp
bound
jg
mov
and
je
nop
test
into
push
xor
lock
aaa
cmp
fistps
pop
add
or
flds
sbb
push
jnp
and
mov
or
and
lret
icebp
xor
mov
mov
sbb
or
movsb
inc
dec
push
fiaddl
pop
fisttps
inc
xlat
in
js
lea
pop
lret
cmp
out
or
xchg
imul
xchg
imul
mov
xorl
stos
daa
push
mov
xor
stc
xchg
testb
fcomps
pop
je
lret
int
js
xor
add
push
mov
cwtl
nop
xchg
add
xchg
fdivrl
jno
sbb
jecxz
test
ret
stos
xor
cltd
imul
faddp
stos
vfmaddsub132pd
mov
in
jle
lods
imul
fisubrs
loope,pt
lret
dec
xor
adc
in
pop
cmp
xor
sbb
xor
test
ds
push
shrb
mov
out
inc
icebp
lock
loope
jbe
rcr
orl
jnp
dec
out
scas
lret
push
push
pop
xor
subb
lods
cmp
pop
jmp
add
lcall
iret
insb
stos
ljmp
push
sbb
adc
jge
mov
leave
ja
lcall
outsl
jecxz
mov
call
jg
push
icebp
push
aad
ror
mov
std
arpl
rorl
cld
and
outsl
hlt
jnp
jg
dec
xor
shl
imull
pop
imull
mov
insl
add
or
or
fcmovne
sahf
cmpsl
fsubrl
mov
mov
xchg
and
ljmp
mov
repz
cmpsl
mov
jns
cld
je
repz
xchg
rol
inc
inc
cltd
rol
cli
and
cmpsb
push
or
sub
jb
pop
push
inc
sub
mov
add
fidivrs
inc
mov
in
popa
loope
loope
bound
adc
add
jg
adc
mov
dec
mov
push
lret
and
lods
cmp
and
mov
fbld
sahf
mov
push
push
loop
mov
jl
xor
fdivrl
add
jmp
in
mov
mov
cmp
test
pop
sbb
cmp
leave
mov
lahf
cmpsl
insb
fcompl
dec
cmpsl
xchg
push
mov
mov
mov
outsl
adc
pop
mov
fcoms
lcall
dec
xlat
jmp
insb
mov
test
rcll
flds
xor
cmp
or
dec
cld
mov
fmul
popa
cs
and
fimull
aaa
dec
leave
lods
lds
inc
and
xor
and
loope
dec
mov
mov
or
inc
push
push
dec
or
mov
in
dec
pop
jp
sub
or
adc
pop
push
cmp
dec
mov
jo
sbbb
and
repnz
out
xor
test
and
mov
outsl
ss
cli
and
shll
lret
sti
mov
out
push
mov
in
pop
xor
sub
pop
movsl
adc
lods
stc
in
dec
addl
cmp
imul
add
ret
mov
xchg
lock
xchg
scas
cltd
test
out
subl
jle
sarl
lea
es
or
ss
popf
enter
rclb
xchg
fldcw
jbe
fwait
jg
or
outsb
and
movsb
cmp
in
inc
nop
iret
enter
das
cmp
mov
or
and
btc
cs
int3
lods
add
ds
mov
xor
cmp
inc
push
or
jno
shrl
jmp
sub
scas
xchg
mov
test
gs
bound
pop
inc
cmp
sbb
xchg
dec
xchg
loope
scas
dec
mov
push
dec
cmpsl
xor
dec
out
sbb
or
mov
loope
cs
or
fbstp
sahf
mov
shrb
xchg
mov
scas
popa
sub
loop
sub
test
rep
mov
or
sbb
jmp
std
xor
pop
add
sub
jmp
or
jecxz
pop
shll
dec
inc
sub
pop
movsl
lret
insb
popa
mov
xchg
xor
or
add
push
les
push
dec
mov
or
lock
daa
in
in
dec
fidivrs
es
cmp
aaa
and
mov
xchg
notl
fnstenv
sub
repnz
sub
in
pop
adc
mov
aam
push
andb
movsb
xor
adc
pop
lret
pop
xchg
xor
lods
push
mov
sub
pusha
mov
sub
subl
adc
jecxz
fsts
xchg
xchg
into
pop
ss
mov
je
rdtsc
fcompl
xor
sub
cmp
lcall
xor
ss
mov
test
jno
push
enter
mov
insb
jmp
lea
cmp
stc
push
shrb
mov
les
cmc
xor
fisubl
sahf
lods
ret
data16
mov
xlat
jbe
movsl
or
mov
push
ja
xor
adc
movsb
testl
cmp
add
sbb
fisubl
scas
sub
stos
jmp
in
or
jno
inc
jmp
pop
packssdw
add
mov
fdivrl
jae
mov
jmp
mov
pop
ss
das
add
movsb
and
xor
push
cmpsb
ss
add
insb
out
sbb
xchg
lock
jnp
xorl
movsb
sub
aaa
movsl
lock
xor
push
mov
sahf
push
pop
or
push
add
xlat
and
lret
inc
jno
popa
ret
dec
bswap
and
lret
rcrl
mov
mov
mov
push
and
pop
loope
jne,pt
lret
mov
sti
cmp
bnd
out
imul
lock
sahf
mov
jg
shl
mov
pop
lods
pop
and
fs
in
insb
xchg
cmp
scas
and
divb
cli
shlb
stos
popa
cmp
adc
loopne
or
mov
xchg
mov
sub
into
sbb
scas
test
and
in
nop
mov
test
xchg
xlat
or
xor
in
rcll
sbb
sub
test
cmp
ljmp
jno
nop
lahf
leave
mov
movsb
fdivl
sub
and
cmpsl
das
pop
outsb
lods
movl
jp
arpl
xor
or
aad
jno
jbe
push
popf
orb
lds
xorb
jecxz
movsl
adc
popaw
jge
stos
cmp
rolb
sub
shl
mov
into
mov
cltd
sbb
ret
jl
stc
pop
cs
xorb
mov
mov
hlt
les
cmp
mov
imulb
xchg
xchg
add
std
ror
mov
pop
fiaddl
mov
enter
push
pushf
mov
push
mov
or
int
pop
adc
xchg
popf
lret
sub
iret
cmc
ljmp
or
mov
stos
fistpl
pop
nop
cmpsb
mov
mov
nop
or
pushf
xor
test
cli
ss
shll
jae
scas
scas
out
lea
fcompl
rclb
xor
pop
lret
fnstenv
arpl
sbb
movsl
sbb
inc
testl
sub
pusha
adc
cs
or
test
push
out
dec
enter
and
icebp
icebp
jae
cld
in
sub
pop
add
movsl
sahf
pushf
and
sub
fisubrs
out
insl
mov
subb
ss
mov
and
cmc
or
subb
insl
lahf
sub
xor
test
in
mov
loopne
inc
pop
adc
mov
andl
lahf
les
das
dec
push
rcl
int3
xchg
cmp
cmpsb
shr
sub
xor
cwtl
or
pop
ja
and
cmpsl
add
add
and
and
or
das
icebp
pop
fisubrs
cmp
push
pop
roll
js
push
movsl
add
jle
sar
pusha
mov
mov
jo
push
popf
cmp
cltd
mov
dec
ret
xchg
ds
mov
fidivs
repnz
xchg
jmp
mov
in
mov
mov
movsl
mov
imull
int
mov
push
je
mov
outsb
xor
sti
jbe
arpl
jo
sbb
mov
mov
push
or
xor
fldcw
or
inc
fldl
adc
push
fsubrl
dec
adc
xor
sbb
inc
mov
jge
and
push
push
and
xchg
xchg
dec
iret
or
mov
sub
test
rorb
cmc
arpl
loopne
repz
in
inc
lret
in
mov
repz
ret
pop
push
ret
adc
sub
jbe
mov
lock
outsl
mov
jb
or
popf
push
cmpb
pop
lea
pop
test
mov
gs
imul
inc
test
mov
test
aam
int3
mov
push
cmp
bound
mov
adc
mov
push
sbb
jp
cmp
and
jmp
outsl
shlb
rclb
inc
dec
ficoml
inc
xchg
repnz
stos
je
out
jnp
sahf
and
push
or
in
mov
add
mov
cltd
stos
sub
outsb
lcall
sbb
and
jo
nop
out
jl
leave
inc
adc
adcb
das
lods
les
mov
mov
addr16
loopne
repz
out
cmp
jnp
sub
push
cmpsl
sarl
push
enter
push
in
pop
adc
mov
sub
ret
adc
adc
cmpsl
and
push
in
shl
inc
cmp
icebp
xchg
sub
aas
xlat
nop
dec
stos
sti
jmp
pmuludq
cmp
pop
lds
stos
fnstsw
mov
scas
int3
dec
mov
popa
stos
cld
test
jle
add
ficoml
and
nop
iret
add
scas
and
flds
jnp
sbb
mov
mov
mov
sub
imul
insb
cmp
mov
test
mov
cmp
push
ja
cltd
fmull
sub
inc
fildl
and
test
push
lods
iret
sbb
aad
cltd
jns
mov
popf
dec
leave
fld1
jmp
dec
ja
or
adc
jno
jge
sbb
into
ds
adc
xor
mov
stos
popa
popa
mov
adc
arpl
lcall
mov
frstor
fwait
xchg
jp
into
faddl
adc
imul
lods
and
scas
fsts
ret
mov
cwtl
mov
aam
ret
je
push
sbb
mov
scas
push
aas
movsb
adc
sbb
ret
cmc
push
rcll
mov
push
inc
iret
inc
sub
xchg
icebp
jp
xor
push
in
xchg
mov
ss
inc
pop
and
or
adc
pop
adc
pop
xchg
xor
test
mov
mov
std
stos
arpl
pop
cmp
mov
rorb
or
in
es
push
dec
iret
mov
fs
sahf
inc
xor
out
data16
jle
inc
dec
repnz
or
mov
xor
and
lret
fmull
sbb
add
adc
lcall
push
popa
filds
movsl
out
jecxz
cmp
data16
loope
mov
fldl
out
sub
loop
fwait
and
ret
sub
addr16
push
daa
popf
xchg
scas
negl
xor
sub
jnp
clc
cmc
sub
loop
gs
sub
cmpsl
or
das
lcall
dec
mov
mov
jb
shrl
inc
cltd
ret
inc
adc
testl
sbb
leave
jge
pop
mov
xor
sbbl
jae
inc
push
pop
cmc
pop
stc
mov
cld
cmp
mov
push
pop
addl
mov
add
cmp
mov
xchg
jl
fstl
fsubl
sbb
dec
inc
xlat
lret
and
mov
adc
jle
out
sbb
adc
inc
mov
insw
push
cmp
xchg
sbb
mov
test
hlt
jp
pop
dec
sarb
sbb
in
test
cmc
inc
push
pop
in
sub
mov
pop
sub
mov
int3
leave
mov
call
test
sub
mov
ss
push
adcl
aam
xor
push
mov
or
or
inc
mov
lret
or
cmpsl
pusha
sbb
arpl
sbb
out
push
push
inc
or
stos
int
jecxz
mov
ljmp
jmp
gs
nop
test
fisubs
mov
mov
and
in
mov
cmp
das
mov
add
inc
fisubl
inc
jne
mov
call
adc
icebp
and
aad
add
mov
les
int3
imul
stc
mov
mov
lcall
movsl
sbb
cmp
jge
sub
sub
call
out
xchg
fdivs
lock
lock
lret
std
and
pop
cmp
ret
popf
das
pop
idivl
add
les
jo
in
sub
fcomps
js
daa
ss
popa
sbb
orb
cmp
jbe
jae
lahf
mov
mov
mov
and
sub
insb
cmpsb
jno
push
dec
outsl
pop
jp
add
dec
shll
sub
dec
or
loopne
rorb
popa
test
pusha
inc
and
lods
fld1
sti
pop
cmp
push
mov
sti
and
lea
fwait
popa
bound
shl
adc
in
sub
mov
daa
xchg
pop
test
loop
add
adc
fadd
lods
jmp
movb
cwtl
ja
cmp
mov
xor
mov
mov
xchg
flds
add
loop
or
loop
cmp
es
das
jno
add
idiv
push
push
pop
and
jecxz,pn
fildl
mov
in
testl
mov
ds
je
xchg
inc
shrl
inc
jecxz
fstpl
ror
outsl
pushf
and
mov
rorb
jbe
movsb
mov
clc
sahf
jle,pt
xchg
xlat
push
dec
push
loop
push
in
xor
subb
fidivrs
dec
loop
rcll
sarl
popf
inc
and
fistl
push
lret
and
sbb
push
sub
mov
enter
add
fadd
xchg
dec
dec
push
jne
lahf
daa
movsb
mov
adc
jno
jo
aaa
jle
pushf
adc
mov
iret
sub
mov
cmc
and
mov
push
sub
push
mov
mov
jle
pop
jnp
dec
push
data16
adc
mov
ja
mov
xchg
sub
in
and
mov
and
bound
adc
enter
or
mov
int3
inc
mov
out
cmc
ja
push
mov
cwtl
mov
jne
fimull
sbb
xchg
and
mov
push
pop
pushf
mov
into
dec
mov
push
das
mov
xchg
pop
mov
jp
mov
out
xchg
js
pop
dec
das
aam
testl
lods
adc
bound
js
das
xchg
testb
fs
ficoms
xor
or
shlb
insl
xchg
pop
cmpsb
mulb
pop
dec
sbb
cmp
mov
loope
loope
mov
sub
sub
fldcw
cmp
call
clc
sub
in
mov
arpl
mov
add
or
jbe
adc
mov
das
dec
jo
jle
into
xchg
add
in
icebp
sub
nop
and
lahf
stos
scas
js
ja
in
dec
bound
int3
jge
loopne
pusha
test
pop
addr16
or
sub
cli
out
iret
xchg
mov
cmpl
jbe
add
repnz
xor
out
mov
sub
in
lods
adc
repz
nop
inc
nop
fdivrs
cmp
enter
push
jo
test
es
mov
push
xchg
cmpsb
add
xlat
ds
in
pop
outsb
mov
pop
test
or
std
adcb
xchg
cmp
xor
xchg
jle
xchg
cmp
and
sbb
dec
popf
in
inc
sub
aam
cmc
and
mov
mov
aad
xchg
inc
out
xor
mov
pushf
rclb
jnp
mov
mov
testl
insb
int
clc
je
loop
mov
or
in
mov
mov
push
add
shl
fstps
lock
test
push
out
sub
jge
jl
enter
data16
jmp
scas
sbb
dec
sahf
and
mov
jbe
sti
insb
cmp
xchg
cmp
inc
out
mov
ljmp
lods
out
mov
call
adc
dec
jmp
test
lret
or
insb
pusha
jmp
cmp
xchg
je
and
xlat
js
jecxz
es
cltd
sahf
inc
sarb
cmc
shrl
data16
or
mov
inc
mov
mov
push
sub
pop
push
push
xchg
into
cltd
lret
div
xor
xchg
mov
pop
movsb
cmp
outsb
xchg
push
mov
push
jns
adc
negl
mov
jg
cs
aam
stos
mov
xchg
fwait
adc
mov
test
inc
ret
jge
imul
inc
clc
iret
and
and
sahf
xor
sub
xchg
int3
call
cwtl
nop
in
jecxz
adcl
push
lret
sbb
push
mov
fs
fsts
pop
test
pusha
cmpl
gs
jg
cs
jmp
xor
xlat
push
and
or
add
adc
adc
fwait
push
test
testb
call
adc
mov
jno
and
sbb
adcb
pop
ret
push
outsl
js
fcom
adc
jo
jns
cld
lcall
pop
clc
mov
or
out
sti
ds
nop
stos
push
lock
mov
popf
roll
push
xor
cmpb
push
lods
dec
and
pushf
int
jns
xchg
pop
nop
mov
popa
test
sub
nop
test
pushw
sub
inc
xchg
xor
xor
add
cmp
movsl
xor
mov
test
out
mov
nop
push
mov
in
and
sub
fs
xchg
shrl
xorl
add
filds
loopne
loop
jle
out
adc
and
imul
push
lds
cmpsb
mov
repz
push
cli
nop
lahf
bound
dec
xor
mov
adc
sbb
cmpsl
stc
das
xor
mov
mov
cli
shlb
dec
rcll
jnp
push
leave
cmp
adc
stc
pushf
arpl
nop
and
repz
fnstsw
cltd
enter
enter
testl
mov
test
mov
sbb
int
outsb
add
cmp
cld
mov
dec
lock
mov
loopne
enter
mov
mov
outsb
stos
push
xor
mov
repnz
mov
test
or
bound
mov
mov
jne
daa
xchg
aas
mov
mov
int
sbb
mov
movsl
dec
cmpsl
mov
aas
inc
mov
leave
or
outsb
and
add
scas
gs
inc
jp
push
inc
mov
push
ds
mov
adc
lret
inc
pop
push
into
sbb
sbb
sbb
mov
and
in
push
xchg
in
mov
cmp
jnp
jp
mov
xchg
add
es
push
mov
sahf
scas
pop
leave
mov
lods
shlb
jmp
daa
cmp
sbb
mov
xchg
sub
subb
lods
or
mov
es
adc
mov
call
fbld
or
test
sub
mov
mov
mov
adc
cmp
test
jno
push
les
mov
lock
cmp
dec
addr16
xchg
cmp
lods
push
xor
mov
and
push
cs
enter
shrb
sub
adc
aad
pop
jbe
adc
adc
and
fcmovnbe
lock
sub
shrl
sbb
adc
add
sub
out
ljmp
scas
lret
pop
xlat
fildll
pop
imul
pusha
push
mov
enter
xor
fidivrl
mov
mov
adc
mov
in
call
icebp
push
jno
shlb
dec
ds
int
push
push
repz
cmp
int
mov
cmpsb
aas
xchg
orb
mov
and
and
adc
and
sub
push
mov
rolb
lret
sub
in
and
xchg
jmp
pop
flds
jp
cmpsb
test
stos
xchg
jae
push
xchg
push
jmp
cli
pusha
mov
ljmp
xor
mov
push
mov
mov
pop
loope
loopne
aad
int3
or
enter
and
out
mov
pop
out
and
fidivl
sbb
pop
hlt
mov
xor
lods
dec
sub
push
push
xor
outsb
cmc
xor
or
lret
and
jo
or
imul
sbb
jmp
cmp
or
xchg
orb
xor
xor
adc
mov
cmpsl
inc
sub
hlt
mov
or
lds
xchg
sub
mov
enter
pop
mov
movsb
mov
cmp
pusha
mov
pop
pop
cwtl
xchg
xchg
fnstenv
mov
cmpsl
xchg
dec
mov
xchg
popa
aas
inc
repz
and
mov
mov
fsubs
aam
rclb
rorb
fidivl
jecxz
or
push
xor
dec
push
cmpsb
jb
adc
cmp
mov
jnp
leave
jl
inc
sarl
or
mov
fst
sahf
testl
jg
push
xor
arpl
insl
outsb
or
xor
xor
int3
mov
test
push
mov
ja
jbe
data16
popf
mov
clc
loop
jb
push
insb
mov
movsl
xor
rorl
mov
pusha
adc
pop
fst
jno
stos
iret
jmp
push
xor
pop
popf
leave
jl
test
sub
in
adc
add
call
jg
sti
fisubrl
inc
inc
cmp
pop
cmp
xchg
cmpsl
mov
test
dec
xlat
je
and
mov
outsb
neg
push
sbb
sahf
fwait
adc
mov
xchg
pusha
fnstsw
ret
mov
inc
cmpsl
sbb
jge
and
repz
test
mov
mov
lcall
mov
pop
test
xchg
jg
jle
lock
push
push
pop
rcrl
or
cltd
push
sub
sti
xchg
xor
push
je
stc
inc
lods
cmp
xchg
xor
mov
shrl
adc
jb
ljmp
ja
popf
imul
jp
inc
lds
xchg
mov
mov
dec
sub
fimuls
jle
cmp
sub
fs
pop
insb
sub
sub
or
mov
adc
adc
int3
jns
stc
shlb
and
sbb
out
sub
ret
dec
cld
clc
pop
xorb
les
xchg
daa
add
sub
addr16
xchg
or
push
outsb
or
mov
fcomip
inc
jecxz
cmp
repnz
hlt
cmpsl
outsl
daa
jne
das
push
lahf
dec
sub
or
inc
push
or
icebp
xchg
pop
sahf
ljmp
in
in
mov
dec
fimuls
ljmp
aam
and
ss
sub
test
xchg
inc
mov
movsb
and
push
aas
dec
jp
insb
mov
mov
xchg
sahf
and
push
sti
sub
out
int
jne
stos
or
mov
jb
jno
xchg
xor
xchg
sub
int3
or
stc
popa
and
sti
stc
adc
jo
popa
stos
dec
dec
push
repz
sub
cli
sahf
adc
aam
adc
xchg
jecxz
cmpsb
pushf
lock
push
mov
sahf
lcall
sub
aad
cmp
xor
and
inc
popa
jb
mov
mov
frstor
popa
sub
push
adc
jmp
cli
pusha
xchg
mov
jnp
test
mov
lock
push
es
scas
mov
maskmovq
testl
mov
jmp
shll
stc
lret
lods
inc
lret
ret
pushf
jp
out
cltd
cld
in
mov
and
lahf
je
jge
iret
mov
out
ljmp
ret
enter
ss
into
gs
xor
mull
mov
js
add
push
xchg
xchg
mov
ja
sub
xchg
mov
xor
xchg
add
lcall
mov
sbb
fdiv
das
imul
mov
pop
cmpb
icebp
fwait
outsb
jne
lcall
daa
mull
sub
aad
pushf
int
popw
fisubrs
and
test
mov
aad
push
outsb
out
mov
loop
rcrl
cmc
cld
test
test
ljmp
mov
jecxz
sbb
outsb
sbb
push
js
jb
pop
mov
fbstp
sahf
cmp
mov
add
inc
lock
sbb
or
add
out
push
mov
lods
icebp
mov
fwait
xchg
mov
cmp
push
pop
negb
add
leave
sub
xchg
addb
cmpsl
out
sbb
lock
mov
pop
rorl
sbb
jne
popa
push
scas
sub
fwait
add
jnp
xchg
cmp
cmp
lea
inc
jmp
fsubrs
push
int3
into
shll
mov
sahf
in
cmp
xchg
push
jbe
outsl
je
xor
inc
and
jbe
mov
mov
dec
repz
in
adc
sbb
fsubrs
mov
mov
test
jo
pop
adc
fdivrs
test
ret
frstpm(287
mov
ret
xchg
adc
jno
lods
test
es
or
pushl
orl
xchg
insl
fcoml
xchg
loope
sbb
cli
jnp
sub
jne
cmp
imulb
pop
ljmp
lods
cs
cmp
pop
lahf
inc
dec
mov
sub
dec
sub
xor
cmp
mov
xchg
je
andb
or
inc
push
or
inc
xor
mov
xchg
push
lret
out
stos
out
mov
movsb
sub
cld
sbb
aad
push
les
inc
jecxz
cmp
sbb
and
and
ljmp
jo
cli
inc
mov
xchg
data16
jne
push
iret
adc
es
repz
js
xlat
sti
lock
push
out
jne
stos
push
stos
ret
xor
je
add
nop
out
sub
push
fistl
lods
and
sbb
sbb
xchg
ljmp
push
xchg
iret
imul
call
sbb
push
xchg
xor
inc
int3
insl
lcall
jecxz
sub
ss
cmc
rclb
dec
mov
stos
and
shrb
dec
cmp
sti
arpl
mov
and
dec
xchg
iret
inc
cwtl
adc
pop
inc
cmc
sub
xchg
dec
popa
ds
xor
or
ja
pop
push
int3
mov
mov
ret
jecxz
inc
test
and
lds
ret
dec
bound
xchg
dec
mov
mov
mull
sub
jns
adc
cltd
mov
jbe
rcl
jle
ret
arpl
mov
mov
mov
popa
ret
mov
outsl
ret
imul
push
or
xor
sub
leave
xlat
adc
outsl
cmc
test
xor
mov
shlb
ret
mov
jecxz
push
xchg
test
test
sbb
mov
mov
in
fadd
adc
cmp
jl
push
jge
cmp
mov
xchg
cmc
repz
shr
jmp
mov
xchg
xor
dec
mov
xor
xchg
mov
and
mov
mov
cs
xchg
mov
or
xchg
ret
push
xchg
or
mov
repz
push
gs
inc
imul
ficoms
repnz
das
stos
into
sbb
mov
jnp
push
out
jp
std
call
mov
stos
inc
and
repz
pop
xchg
inc
lcall
mov
ljmp
cld
stc
in
inc
jnp
mov
xor
jle
xor
test
jmp
sbb
and
repnz
fisubs
sbbb
inc
and
cmpsb
aas
in
fmulp
xlat
fsubl
adc
dec
aad
sbb
lret
adc
push
pop
ja
xor
outsl
pop
data16
cmp
xchg
push
fstpt
insb
xor
mov
mov
lds
xlat
push
jb
or
push
mov
sbb
adc
clc
int3
in
imul
xchg
xchg
add
ret
scas
imul
add
and
in
mov
rcrl
lods
fldl
pop
shrb
xor
idivl
xchg
xor
das
jge
xchg
int
addb
sub
push
shl
in
aam
dec
inc
rcll
incb
sub
sub
mov
mov
mov
popf
cmpl
jb
cmp
mov
gs
xchg
dec
into
xchg
call
sbb
pop
xchg
into
imul
add
sbb
sub
movsb
push
aam
pop
icebp
ja
mov
cs
xchg
into
call
inc
sub
xor
shrl
aas
iret
mov
and
cmpsb
mov
push
jbe
and
adc
xor
sub
into
or
fucomp
jae
ror
shrb
xor
adc
mov
rclb
sub
lods
push
int
inc
cmc
sub
fstps
jns
push
sbb
push
and
mov
iret
out
add
push
xchg
insb
jne
sti
inc
jl
mov
cmp
cmc
push
adc
cmpsl
push
test
mov
insl
push
dec
repz
cmp
cmp
pop
adc
inc
and
push
jecxz
inc
sbb
andb
shll
sar
or
adc
jg
dec
sub
or
pop
jns
fnstenv
loope
xchg
cmp
adc
inc
clc
imul
lods
mov
addr16
sub
xor
xchg
mov
inc
or
push
sbb
gs
cmp
shll
or
or
add
jp
cmp
jp
mov
sar
mov
test
xchg
push
loop
sub
cmp
seto
scas
push
loope
loopne
in
test
mov
mov
sub
xor
fnstenv
psraw
add
test
rcl
mov
lcall
pop
cmp
sbb
cmp
xor
fildll
das
inc
in
call
divb
sbb
ret
push
fs
leave
jle
arpl
int3
cld
jne,pn
pop
loop
add
outsb
cmp
out
or
cmp
leave
inc
cmpb
test
clc
cmp
lahf
shll
push
add
lods
pop
test
add
add
into
add
sub
xchg
mov
mov
push
mov
pop
cli
cmpl
cmp
int
movsb
dec
mov
jb
mov
shl
arpl
add
fwait
into
shl
mov
or
mov
in
hlt
arpl
je
in
jg
cmp
and
out
or
rcrb
mov
bound
cmp
sarl
mov
xor
cmc
cs
sbb
mov
mov
call
cmp
cmp
pusha
or
cltd
sub
sub
jo
dec
nop
or
enter
fcmovnb
mov
lods
jp
jnp
jno
xchg
jp
mov
ja
sbb
minps
vandps
pop
inc
out
cli
adc
jns
inc
push
adc
mov
inc
pop
mov
xchg
sub
sbb
outsb
testl
cli
sub
je
mov
pusha
xchg
cmpsl
jge
popa
dec
bound
xchg
mov
add
aas
mov
shll
cmp
push
sarl
std
lds
mov
and
sub
insl
cmp
icebp
pop
aam
dec
inc
pop
lods
and
outsb
shrl
mov
pop
cmp
iret
imull
loopne
xchg
mov
adc
cltd
inc
arpl
cmp
sub
test
adc
inc
xor
jno
xchg
push
jne
dec
hlt
test
mov
push
lods
je
mov
xchg
cmovb
cmp
ss
cmp
rolb
mov
pop
mov
mov
lea
pop
aas
xor
mov
jo
xchg
test
fs
mov
sbb
in
mov
mov
test
sub
sarb
loope
lret
js
jno
pushf
mov
dec
and
pop
mov
cli
jmp
adc
sub
cmp
std
inc
pop
out
adc
sbb
test
cmp
stc
mov
lret
inc
mov
push
mov
and
add
adc
push
sbb
xlat
jl
xchg
push
sbb
mov
add
out
xchg
outsb
test
and
test
adc
movsb
fs
push
clc
mov
pop
jb
arpl
cmpsb
add
sbb
lret
in
cltd
pop
test
mov
mov
insl
xchg
popf
xor
push
fidivrl
fbstp
adc
std
mov
fwait
mov
ja
popa
je
jecxz
addb
sbb
adc
or
test
cmpb
mov
lret
mul
add
out
sbb
call
leave
or
lds
fsubr
add
or
dec
or
jl,pt
cmp
repnz
pop
inc
cmpsw
outsb
cmp
and
xor
xchg
jmp
inc
test
popa
dec
out
rcll
ds
in
adc
inc
rolb
cmpsl
test
dec
loope
out
rolb
lock
mov
lret
pushl
jnp
or
sbbb
pop
xchg
inc
xchg
mov
cltd
xchg
sti
cmp
dec
lods
jno
adc
subl
add
aaa
dec
dec
xchg
or
in
sbb
xchg
shl
addb
jp
mov
mov
mov
ss
sbb
and
fdiv
loope
stos
lea
cmp
push
xor
xor
call
adc
jl
push
rolb
mov
movsb
and
inc
es
fists
mov
or
sub
jp
push
xlat
testl
push
sub
cltd
add
icebp
mov
push
test
sti
adc
sub
arpl
add
cmp
fst
dec
mov
xor
mov
ss
sbb
in
xchg
mov
add
jge
and
inc
inc
jge
mov
lret
ret
jg
pop
mov
mov
sbb
pop
cmc
nop
pusha
jge
or
sahf
mov
or
xchg
adc
test
push
sbb
pop
mov
in
rcrb
jo
mov
jae
add
pop
icebp
push
cmp
dec
xchg
mov
lcall
jg
xchg
sbb
popfw
mov
test
je
gs
push
ljmp
cmpsl
cltd
loop
and
jno
pop
pop
sub
ret
or
stc
mov
xchg
int
mov
je
movsl
push
jecxz
test
daa
or
out
jae
insl
mul
fmull
add
mov
dec
pop
mov
repz
fstp
aam
inc
out
dec
xchg
push
jmp
hlt
icebp
subb
mov
daa
test
mov
push
dec
inc
cmc
sub
js
jb
fwait
int
push
mov
repz
jb
push
addb
test
xor
push
repnz
xor
xchg
xor
das
dec
lret
mov
mov
push
outsb
ja
mov
xor
adc
or
cs
dec
fdiv
dec
int
pop
loop
push
lods
lret
sbb
adc
loope
imul
xchg
stos
sbb
xchg
jge
or
mov
jb
adc
cmp
cmp
inc
lahf
cmp
aas
jmp
ljmp
xor
mov
mov
sahf
inc
in
mov
jo
cmp
in
xor
add
or
ret
push
lcall
call
sub
and
push
xchg
fbld
inc
push
push
outsb
jg
cli
test
ret
sbb
rorb
mov
lea
inc
mov
mov
or
aas
pop
cmpsb
mov
mov
jmp
addr16
and
xor
out
sub
in
sub
icebp
sub
jmp
lods
or
rorl
lret
sbb
fsubr
mov
leave
jecxz
xchg
ss
push
shrl
ret
jp
inc
lea
jne
test
add
cmp
in
lret
in
mov
testb
iret
xchg
int
out
add
adc
jmp
lds
mov
or
cmp
and
fsubrs
out
add
out
sub
and
jp
pop
mov
fistpl
push
sbb
fcmove
out
mov
leave
jne
iret
rcll
fstl
sub
add
rol
sub
aas
in
repnz
inc
dec
int
adc
jp
movsl
das
sbb
inc
xchg
das
mov
jge
data16
push
mov
mov
adc
test
mov
mov
mov
dec
xchg
pusha
lret
jb
call
aaa
lcall
sub
imulb
test
xchg
shlb
xchg
mov
pop
shlb
push
mov
adc
scas
dec
insl
rcrb
mov
pop
xchg
bound
sbb
popa
mov
mov
addr16
mov
or
dec
sbb
mov
fldcw
insl
dec
push
pop
popl
pop
jbe
add
lea
xchg
sub
ss
out
andb
scas
rcrb
sbbl
xchg
lahf
ljmp
xor
nop
mov
call
xor
inc
xchg
imul
fsubs
mov
insl
mov
dec
push
roll
ret
push
lea
jae
cmp
dec
jb
xor
dec
xor
and
loope
call
sub
repnz
xlat
mov
mov
aaa
loope
shl
scas
cmp
call
pop
and
adc
push
jae
cmp
adc
dec
cmp
xchg
adc
dec
into
adc
mov
jb
or
ja
arpl
das
fs
xchg
mov
dec
imul
mov
jmp
shrl
lcall
xor
and
fmull
outsl
lahf
aam
mov
or
movsl
jnp
jne
xchg
movsb
jbe
pop
mov
adc
mov
in
mov
sahf
push
lds
insl
leave
arpl
in
sub
and
fisubrl
sahf
scas
cmp
jl
adc
pop
aaa
inc
cmpsb
adc
jecxz
out
sub
test
mov
insl
popa
pop
adc
pop
ss
inc
adc
sub
lods
jp
push
in
push
inc
push
int3
mov
and
inc
call
fidivrs
push
test
inc
cmp
jl
insl
xchg
xchg
imul
int3
jg
jns
scas
pop
testb
imul
cmp
or
jl
adc
sub
lcall
cmp
divl
das
repz
pop
inc
iret
mov
pop
and
jmp
add
rorl
aas
push
lahf
adcl
push
and
movsb
sbb
inc
mov
cmp
mov
ret
or
jmp
mov
scas
and
mov
insb
push
adc
xlat
sub
sub
in
scas
movsb
std
push
push
daa
arpl
stos
mov
lds
ret
orb
jecxz
mov
cmp
mov
xor
out
mov
out
mov
push
lcall
fs
adc
sub
cltd
mov
adc
movsl
lea
dec
ret
lea
mov
fsts
out
lret
adc
popa
xchg
push
lcall
lahf
mov
popa
stos
mov
mov
push
pop
sub
mov
adc
or
rcr
repz
xor
mov
stos
adc
add
cmp
mov
inc
jmp
je
lahf
xor
cli
es
xchg
dec
aad
cmc
and
xor
sub
int
stc
lds
xor
cmpsb
add
lods
jb
mov
jp
xchg
add
xlat
jae
inc
add
or
mov
cmc
xchg
xchg
bnd
add
jno
cmp
xchg
fsubrl
add
data16
mov
cmp
ljmp
mov
jb
jg
pop
dec
repz
fbld
cmpsl
push
sbb
stc
test
incb
lea
stc
pop
cmp
mov
and
jne
push
leave
insl
lret
lret
cmp
sbb
out
fstl
mov
shl
inc
pop
insb
cmp
loope
adc
icebp
aas
xchg
pop
cmpl
shll
cmp
xchg
mov
mov
stc
xor
stos
insl
or
add
dec
std
jg
pop
nop
mov
or
cmp
mov
pop
dec
jl
in
rolb
inc
mov
stc
add
xchg
fnstcw
out
cmpl
cmc
pop
mov
ds
jb
mov
in
les
inc
dec
mov
jb
fisubrs
and
sub
xor
or
lods
pop
mov
xor
push
push
dec
or
or
fwait
cwtl
or
sti
enter
pusha
ret
mov
into
fnstenv
jo
enter
fisubrs
imul
cmp
ljmp
lcall
xchg
or
dec
push
jmp
dec
add
in
loopne
popf
or
mov
int3
pop
sbb
lret
dec
mov
push
fwait
jns
add
xor
cmp
inc
int
cltd
xchg
xchg
cmp
adcb
sub
sub
inc
out
jnp
outsb
les
xor
fstl
mov
outsl
cmpb
pop
or
stc
fmulp
and
out
jp
or
mov
jle
movsl
jge
loop
add
dec
rolb
jmp
sahf
adc
mov
lcall
push
cmpsl
pop
adc
or
mov
xchg
jp
push
popf
sysret
test
mull
add
sub
in
add
mov
ljmp
lret
jle
mov
dec
enter
insb
mov
mov
xor
lahf
sub
add
sub
mov
mov
push
popa
cmp
mov
jecxz
pop
ss
xor
cmpsb
and
movsb
pusha
mov
fbld
jne
xchg
xchg
cmpsl
test
insl
xchg
push
push
pop
out
orl
outsl
cmp
rolb
or
enter
incb
addl
lret
xchg
addr16
sbb
xchg
mov
push
jecxz
inc
dec
ljmp
push
sbbb
jg
stos
pop
mov
xor
daa
cmp
cmp
jae
add
fwait
jle
popa
jno
sbbl
dec
stos
idivb
shrl
popa
sbb
inc
scas
fcmovb
or
jo
push
cmp
outsb
jno
jns
sub
mov
sti
sbb
mov
mulb
or
jbe
add
pushf
push
fsubl
push
xor
std
cmpsb
cmp
push
pop
lret
jno
iret
push
das
xchg
loope
adc
add
adc
ret
mov
and
mov
cmp
sub
fs
push
mov
fadd
ss
mov
movsb
test
lcall
dec
pop
sahf
jge
jnp
bound
mov
sbb
push
call
dec
jbe
ds
or
xchg
sbb
sti
adc
adc
or
mov
popa
popa
in
mov
adc
ret
sub
sub
push
add
push
jb
xchg
inc
ret
jns
mov
jmp
xchg
fmull
adc
sbb
push
adc
or
fildll
clc
repz
fisubs
loope
dec
xchg
inc
sbb
mov
scas
dec
pop
pusha
hlt
jg
add
test
decb
nop
mov
jne
xor
icebp
fcomip
or
and
sbb
sub
xchg
lds
das
cmp
dec
outsl
fcompl
cli
stos
sbb
mov
pushf
gs
jl
clc
jnp
jb
sahf
repnz
xor
aad
or
int
rcl
lods
sub
rolb
dec
in
and
mov
fsubrl
cmpsl
shlb
jno
fisubs
jmp
xchg
orl
xchg
daa
ss
push
mov
fistl
or
js
outsl
mov
add
mov
mov
pop
and
arpl
sbb
mov
cmp
mov
push
xor
cmc
jns
jno
xor
out
sub
fldenv
xor
nop
mov
daa
dec
xchg
andb
mov
out
cmp
mov
test
data16
pushf
and
jl
fildll
test
sub
fistpll
cmp
ss
or
dec
mov
mov
out
and
lds
mov
sub
jge
cmpsb
test
imul
xchg
sbb
xchg
pop
jmp
or
and
shlb
jne
mov
orb
mov
xlat
imul
jae
popl
jne
sbb
xchg
fstl
xchg
test
xchg
pop
jmp
cmpb
push
inc
imul
aas
sti
loopne
add
xchg
jmp
arpl
adc
das
sbb
pusha
adc
out
lock
mov
mov
inc
push
cmc
sub
xor
ljmp
jmp
in
mov
aad
adc
pop
out
lock
test
and
lret
and
sahf
mov
loopne
rclb
loopne
jo
shll
in
xor
popf
sbb
push
cmpsb
pop
jmp
ja
sub
jmp
inc
and
inc
mov
sub
in
dec
shrl
arpl
dec
sbb
stc
int3
mov
ret
add
xchg
rorl
mov
or
in
mov
cli
sbb
bound
inc
andl
popf
in
call
adc
mov
sub
iret
mov
or
or
pop
or
ss
add
scas
sti
xchg
xchg
add
push
inc
sub
jne
shl
pushf
enter
out
xchg
mov
fisttpll
sbb
clc
cld
mov
fisttpll
xchg
repz
sbb
mov
mov
cmp
xor
mov
es
jmp
insb
push
ja
sbb
imul
jno
iret
icebp
incb
mov
arpl
pop
push
mov
loopne
out
fistps
out
adc
sub
or
cmp
jnp
aam
test
into
test
dec
jge
out
jo
out
pop
mov
and
les
push
aas
leave
lret
lret
push
bound
int
add
xchg
fiaddl
in
ret
xchg
push
mov
flds
int3
xor
mov
push
push
xchg
out
sbb
rcr
inc
jecxz
jge
lods
roll
cmp
paddb
cmp
ds
repnz
js
dec
push
add
adc
aas
fsubs
loope
insb
inc
mov
adc
imul
jb
rcll
xor
insb
stos
pusha
mov
add
cmpsb
sbb
xor
pop
fisubrs
arpl
inc
cmp
push
fwait
push
xor
outsl
xchg
out
add
adc
sbb
insb
cmp
js
sbb
xchg
lock
cmpl
test
pusha
lods
jmp
test
add
adc
inc
adc
or
xchg
fbld
fistl
notl
or
cs
ds
mov
adc
cmp
test
icebp
mov
movsl
cmp
xor
mov
popa
test
xchg
in
adc
int
pop
inc
mov
push
das
jmp
cmp
lds
leave
add
mov
mov
push
and
leave
and
mov
pop
pop
call
dec
icebp
cmp
mov
stc
and
inc
imul
or
movl
pop
cmp
sahf
mov
mov
ja
pop
data16
pop
les
rol
push
xor
mov
inc
pop
mov
or
pop
cmp
decb
xchg
decl
inc
jno
cld
lods
and
push
mov
loopne
outsl
cmp
jnp
das
clc
xor
sub
mov
addr16
pop
loop
pop
sub
xor
mov
mov
cmp
or
loopne
cmp
outsl
sarl
inc
push
fcmovbe
movl
out
or
adc
and
or
push
pushf
push
xchg
mov
mov
out
xorb
xor
xor
cmp
rcr
repz
ja
xor
subb
adc
add
push
jmp
dec
add
cmp
mov
push
pop
cld
jg
sbb
out
sbb
mov
sbb
rcll
lret
popf
ja
or
imul
push
imul
ds
cmpsl
mov
pusha
movsb
xor
lret
mov
fldt
stos
ret
mov
into
xchg
ss
pop
mov
push
lock
lods
test
mov
dec
popa
ret
jne
into
push
dec
dec
xor
cmp
imul
es
idivl
test
mov
call
outsb
xchg
aaa
mov
addl
pop
push
rcrb
mov
jne
adc
ja
push
fsubrp
mov
xchg
xor
sub
add
imul
xchg
cmp
fisubl
loopne
lods
fsubl
xchg
jo
sbb
sub
out
jle
mov
insl
shrl
pop
or
or
jb
cs
or
xchg
jne
repz
iret
jno
push
ljmp
jb
inc
insl
pop
xchg
testl
mov
dec
sti
lods
xor
push
leave
roll
popf
or
cld
aam
mov
jge
add
imul
dec
shrl
push
xlat
cmp
push
dec
mov
mov
mov
aam
sub
cbtw
lds
aaa
push
out
ds
nop
mov
test
scas
les
mov
leave
cmpsl
insl
inc
xor
push
push
xlat
lcall
loopne
mov
inc
lods
out
xchg
mov
mov
rclb
jno
push
cmp
mov
push
ds
outsb
aaa
cs
aad
in
xchg
insb
in
adc
aas
mov
in
lods
mov
xor
outsb
push
lods
mov
pop
and
pop
jl
mov
mov
xor
sbb
mov
ss
fbld
rcr
lods
xor
popa
shl
xor
ljmp
inc
cwtl
sysexit
jns
fidivl
pop
scas
roll
cmp
xchg
sarb
das
setbe
movsl
sarb
arpl
pop
sub
movsb
pop
mov
out
jecxz
or
mov
pop
fisubrl
mov
and
cmpsb
aam
into
lret
sbb
sbb
mov
aas
std
pop
out
pop
stos
and
call
jl
xchg
mov
mov
inc
pop
adc
imul
push
cmp
inc
lcall
sub
xchg
mov
xor
shrl
imul
mov
subb
sarl
xchg
les
and
add
xor
faddp
jp
push
jns
xchg
push
add
loopne
movsl
insl
loop
shrb
adc
daa
sbb
ret
std
lea
mov
dec
pop
cmpsl
xchg
xchg
jl
sbb
outsb
or
add
or
lock
shr
pop
fistpl
mov
pop
push
or
aad
inc
and
mov
sub
cmp
adc
adcb
gs
jno
pop
inc
loop
lcall
hlt
push
xor
rcll
int3
fildll
leave
or
and
outsl
or
lods
add
nop
sbb
hlt
adc
jge
cmp
loope
push
mov
mov
icebp
push
dec
cmpsl
fldt
ret
xor
out
test
inc
fildl
fwait
cmpsb
fwait
push
xchg
and
lahf
aam
scas
push
shll
out
fs
inc
lock
sub
fsubrs
xchg
inc
ja
push
cltd
jo
jb
lods
lds
loopne
pusha
jg
outsl
sbb
xchg
imul
cmp
sbb
cmpsl
scas
inc
fbld
rcll
mov
lea
psubsw
insb
ret
push
sti
mov
cmp
loop
push
xchg
push
loopne
lods
sub
xor
arpl
je
dec
xchg
xor
or
fld
xchg
es
inc
mov
lcall
mov
imul
xor
ret
cwtl
and
and
aam
aas
sbb
out
mov
and
jmp
sub
sub
sub
mov
leave
pop
push
out
inc
test
and
mov
outsb
out
xor
jno
mov
inc
push
ret
aad
push
pop
negl
mov
jle
mov
nop
cmp
sbb
sti
push
push
add
call
pop
gs
hlt
xchg
loop
mov
andb
cmp
stos
jo
aas
pop
mov
daa
leave
test
arpl
mov
mov
sbb
and
cmp
jg
sbb
cmp
movsb
mov
and
mov
clc
aas
mov
or
jge
std
daa
push
dec
jecxz
mov
jge
fldt
cwtl
jb
mov
xchg
inc
cltd
xor
pop
frstor
xchg
cmp
sarb
cld
dec
cmpsb
in
jne
xor
or
mov
cwtl
cmc
mov
inc
out
fistl
insl
xor
sub
iret
jns
aas
subl
sbb
push
push
scas
scas
inc
sbb
cmp
pop
in
clc
lret
es
js
adc
std
jle
and
cs
in
xchg
ret
fsubrs
test
mov
call
test
push
rcl
xor
xchg
xor
cltd
rcr
icebp
loopne
cmp
hlt
sub
fld
fisttpl
sub
into
fnstenv
mov
lret
jb
jne
push
pop
mov
sti
fstl
mov
pop
dec
cmp
into
addl
sar
js
cmp
adc
jp
lea
or
andb
inc
stos
or
mov
or
jne
push
js
mov
sub
xchg
mov
cmp
mov
sub
lcall
or
ds
insb
mov
xor
mov
int3
sbb
jnp
test
sbb
jecxz
push
xor
imul
cltd
adc
cmp
out
cld
pop
sahf
xor
inc
test
clc
cmp
add
push
jmp
mov
test
rcrl
inc
andl
icebp
ds
loopne
lock
jecxz
or
jnp
and
enter
int3
clc
mov
vcvtss2si
dec
xlat
mov
xchg
jae
xor
sub
xchg
lret
mov
and
icebp
inc
stos
out
int3
mov
sub
pop
aas
sub
rcrl
push
adc
pop
mov
push
es
xchg
pop
mov
sub
scas
stos
adc
aaa
dec
or
push
fcmove
dec
inc
aam
fdivrl
repnz
inc
aas
jo
lods
push
outsl
das
mov
stos
out
popf
out
jmp
jp
les
push
shll
add
arpl
cmp
pop
xchg
or
and
in
lahf
fldenv
int3
out
enter
xor
popf
imul
sub
lcall
add
cmpb
ret
mov
pusha
aaa
pop
xchg
mov
dec
leave
pop
push
adc
sub
inc
xchg
outsb
fldt
sub
mov
cmp
dec
ret
sbb
jl
in
or
imul
mov
scas
enter
out
inc
int3
jg
xchg
mov
or
mov
inc
fldl
xchg
test
xchg
or
in
mov
jb
pushf
clc
xchg
ret
dec
pop
add
les
inc
xchg
lds
daa
dec
and
jge
mov
cli
cmp
out
xchg
aaa
ljmp
ss
mov
test
dec
push
mov
sbb
xor
in
cld
gs
push
xor
stc
das
jg
adc
lock
mov
mov
or
in
dec
xlat
test
loope
lcall
das
inc
popf
xchg
mov
ja
push
mov
lret
adc
mov
xchg
mov
mov
mov
and
jge
pop
dec
sub
xchg
pop
jne
jb
jns
stos
jl
add
and
sbbb
sub
pop
inc
cmp
jno
adcl
loop
pop
shrl
fisubl
loop
sti
add
pop
lcall
jb
adc
mov
pop
mov
add
mov
clc
and
xor
pop
lret
scas
or
and
arpl
jns
test
aaa
inc
movsl
test
xchg
test
rclb
insl
out
repz
outsl
push
pop
pushf
or
gs
scas
repz
ds
das
xor
repnz
jbe
lods
lret
xor
jmp
pop
flds
outsl
stc
cwtl
stos
sbb
inc
jnp
pushf
or
push
xchg
mov
jle
sub
bound
adc
mov
pop
xor
or
outsb
push
cs
inc
mov
and
call
mov
inc
add
mov
pop
stos
sbb
mov
push
xchg
pop
ret
outsb
lods
push
test
in
mov
testl
inc
jno
push
mov
leave
jecxz
or
inc
push
iret
pop
iret
inc
testb
mov
xor
inc
sub
loop
push
xor
rcrb
dec
mov
mov
jg
notb
arpl
rclb
sub
mov
sbb
je
pusha
cld
inc
xchg
movsl
das
ret
pop
ja
sti
push
or
jns
or
or
negl
fs
ffree
pop
ret
mov
inc
popf
js
dec
sub
jge
or
sub
cli
aam
fdivrs
fidivrs
icebp
mov
mov
mov
adc
push
and
sbb
adc
loope
sub
inc
sti
push
outsb
stos
pusha
lahf
cmpsl
xor
pop
sti
insl
xchg
divb
fwait
mov
addb
sbb
es
or
ljmp
dec
adc
es
inc
ror
dec
stos
mov
fidivrl
jge
mov
bound
inc
xchg
xchg
shrl
xchg
cmpsb
aad
ret
pop
jae
jae
inc
je
negb
mov
dec
jmp
push
ret
add
rcll
pop
sbb
mov
sbb
jo
xor
jo
icebp
arpl
inc
setg
xchg
mov
cmp
mov
sub
mov
dec
cmp
lods
mov
bound
fdivs
imul
movsl
jp
loopne
sub
jmp
hlt
movsl
push
dec
jb
xor
cmp
dec
aam
xlat
jecxz
push
xlat
xchg
aas
push
add
jecxz
push
cwtl
out
pop
mov
fiaddl
insb
mov
cmpsl
movsl
mov
cmp
mov
jno
imul
xchg
xchg
outsl
es
sub
xchg
jmp
ja
cmc
jle
pop
aam
in
mov
rolb
movsl
loop
pusha
jp
push
shr
out
fs
and
stos
sarb
dec
xchg
outsb
mov
jg
les
loopne
lock
lcall
js
imul
push
out
test
cmp
xchg
push
js
ret
dec
dec
sbb
lcall
and
mov
adc
aas
pop
inc
mov
insb
push
mov
jns
outsb
vpshufd
fidivrs
and
xchg
mov
mov
out
xor
add
rol
xchg
aad
addr16
out
fistps
or
popa
subl
in
outsb
loopne
iret
and
pop
pusha
dec
sahf
sti
mov
icebp
cmp
pop
adc
adc
adc
cli
lcall
mov
jo
xor
lahf
outsl
mov
and
xchg
leave
or
cmp
scas
in
xchg
xchg
mull
lret
scas
mov
cmp
test
aam
mov
movsb
push
push
loopne
outsb
push
pop
sbb
mov
iret
jbe
add
je
test
fadd
mov
inc
pop
maskmovq
notl
ret
mov
push
mov
sahf
jecxz
cmp
lret
dec
jl,pn
lret
mov
lea
mov
jb
es
push
lea
out
nop
icebp
test
mov
pushf
das
mov
adc
sub
aaa
or
sub
add
mov
mov
pop
sti
inc
lret
xchg
adc
fsub
int
bound
xchg
movsl
stos
fwait
mov
shrl
lock
sahf
test
xor
jmp
sub
dec
loope
int3
rcll
jmp
bound
loope
fmull
mov
cmpsb
pusha
in
xor
shlb
pop
mov
sbb
push
dec
ds
xor
les
jnp
and
mov
pop
cmp
test
and
iret
mov
mov
inc
sbb
sti
push
je
pop
pop
aas
dec
inc
or
xchg
xchg
sub
rcrl
shrl
sub
mov
fsub
adcl
popf
xor
dec
or
cltd
aad
mov
sub
pushf
aam
mull
in
lret
sub
clc
inc
or
stc
rcll
mov
mov
dec
dec
lahf
xchg
add
cmp
fcomps
and
lret
aam
mov
call
loope
pop
sub
mov
fistpll
notb
sub
outsb
fwait
repz
or
xor
in
push
jne
loopne
jae
fdivrl
lea
add
or
mov
hlt
insl
movsl
cs
xchg
cmpsl
sub
pop
pusha
fwait
cmp
sub
mov
adc
sub
dec
icebp
out
lret
nop
fwait
call
push
mov
movsl
mov
jmp
cmp
dec
xchg
pop
add
adc
dec
sub
mov
fsubrs
jno
lahf
andl
jbe
popf
add
stos
sbb
in
iret
incl
jo
mov
fnsave
pop
in
dec
cmp
lret
xor
mov
es
loopne
cld
popa
icebp
fs
mov
mov
inc
sub
stos
cmp
andb
rolb
pop
xor
repz
push
cmp
adc
or
cwtl
and
sarb
call
dec
imul
push
jne
inc
cmpsl
out
ret
je
stos
push
cmp
push
fnstcw
das
lds
enter
int3
cld
std
subb
push
mov
popa
mov
push
cmpsl
out
shlb
enter
cmp
push
lret
sbb
loope
push
mov
push
call
jle
int3
lea
inc
mov
xor
adc
andb
insl
jg
mov
dec
mov
adc
xchg
inc
jns
insl
push
test
push
outsb
sbb
clc
lahf
adc
ds
sbb
mov
push
adc
aas
out
divb
leave
arpl
shll
loopne
cmp
bound
lcall
mov
es
outsb
loopne
cmp
outsb
mov
insl
cmp
pop
mov
in
xor
mov
jecxz
stos
sets
sub
in
mov
inc
sbb
add
pop
sub
pop
in
mov
mov
orl
movsl
push
pusha
pop
shrl
rorl
cltd
stos
pop
fcomps
pop
popf
xor
and
clc
sub
and
mov
shr
mov
mov
ss
cmp
jnp
insb
jno
or
je
jmp
lods
imul
arpl
add
add
add
add
add
add
sbb
add
addb
in
add
add
add
xor
add
adc
add
aam
add
addb
push
sbb
add
add
jbe
add
mov
add
pushf
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
add
sbb
add
add
pusha
sbb
add
add
sbbb
add
add
mov
add
lret
add
sbb
add
sbb
add
add
add
sbb
add
sbb
add
sbb
add
add
inc
sbb
add
add
sbb
add
add
sbb
add
sbb
add
add
add
add
mov
fs
imul
js
add
mov
outsb
jae
arpl
insl
gs
imul
outsb
jb
imul
imul
inc
gs
imul
jo
inc
add
scas
adc
je
outsl
fs
gs
popa
outsb
fs
gs
add
and
inc
gs
gs
inc
imul
imul
je
imul
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
je
push
add
xchg
or
imul
imul
insb
gs
bound
arpl
add
inc
gs
outsl
outsb
jae
insb
gs
jne
jae
jb
outsb
outsw
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
popf
push
inc
push
inc
imul
gs
imul
add
dec
jae
push
ja
jb
add
sbb
inc
gs
gs
popa
addr16
outsl
jae
bound
dec
popa
jo
imul
imul
push
jb
arpl
outsl
jne
gs
jbe
outsb
je
and
inc
jb
popa
je
dec
outsb
jne
add
inc
gs
inc
dec
inc
push
jb
arpl
add
popa
je
dec
inc
dec
push
imul
add
insl
inc
imul
gs
imul
sbb
inc
gs
imul
outsb
outsw
add
lea
inc
fs
imul
arpl
push
inc
push
xor
cs
insb
add
jb
pop
gs
je
ret
pop
addr16
popa
imul
rorb
pop
pop
jae
je
jae
jb
popa
je
gs
add
lret
or
arpl
insb
outsb
add
pop
pop
jo
pop
arpl
insl
outsl
fs
icebp
or
outsl
outsb
je
outsl
insb
data16
add
push
jae
pop
imul
add
jo
pop
insw
outsl
fs
adc
arpl
je
push
gs
add
aaa
pop
insl
gs
arpl
add
adc
gs
je
add
imul
add
jae
je
popa
jo
pop
je
jo
add
cmc
or
arpl
inc
imul
push
inc
push
push
cs
insb
add
mov
dec
outsl
jbe
inc
.byte
insb
gs
js
add
add
addl
add
add
pop
add
add
add
add
add
add
push
add
outsb
dec
dec
add
add
ja
jne
add
add
inc
push
add
pop
xor
ds
add
add
add
add
fs
pop
add
jo
add
add
addb
add
add
add
inc
add
add
add
dec
add
add
pop
pop
add
add
lea
add
add
outsl
add
aaa
add
add
add
push
add
jo
add
add
add
inc
jb
push
add
add
addl
add
add
xchg
add
add
add
add
add
lea
add
pop
add
add
add
add
add
add
add
dec
add
add
add
add
add
insb
add
add
add
dec
add
add
add
popa
add
add
add
add
aas
arpl
xor
jl
add
add
inc
pop
add
add
add
add
xor
add
add
mov
dec
xor
jne
jbe
add
add
add
dec
xchg
js
add
pop
add
jge
add
add
add
push
add
add
add
imul
add
add
inc
insl
inc
add
add
add
outsb
add
push
add
add
add
add
add
data16
add
add
dec
add
add
add
aaa
add
add
add
add
add
add
add
jo
inc
add
add
test
add
push
add
add
xchg
inc
add
add
dec
arpl
add
inc
add
add
add
add
add
dec
add
add
aaa
add
add
add
add
add
jp
add
add
add
add
add
add
dec
add
add
add
inc
push
add
add
cmp
add
push
jno
add
inc
add
add
bound
add
ja
pop
add
push
add
add
add
add
mov
add
jl
add
add
add
add
add
add
inc
add
add
xchg
add
add
add
add
jae
add
add
add
add
add
push
add
add
imul
pop
add
pop
push
add
add
add
add
xchg
mov
add
add
mov
pop
add
test
add
add
add
add
addb
add
add
add
push
inc
add
push
add
add
jl
pop
add
add
data16
add
add
add
add
add
add
add
ja
push
add
imul
add
add
add
add
add
add
xchg
add
add
lea
xchg
add
add
mov
pop
add
xchg
add
mov
add
add
add
add
add
add
test
mov
add
add
cmp
ja
add
add
xor
add
jne
addl
dec
add
add
add
add
add
add
xchg
add
add
add
xor
add
add
pop
lea
pop
add
jbe
inc
jl
xor
add
add
add
jo
add
inc
add
add
inc
add
add
xor
add
add
pusha
dec
add
cmp
add
add
add
xor
add
dec
test
nop
add
add
addb
xor
add
add
add
add
add
add
add
inc
add
add
add
add
lea
add
add
inc
dec
add
pop
inc
add
add
add
add
add
jnp
add
add
add
add
addl
add
add
add
add
add
jnp
cmp
add
add
add
add
add
add
add
test
xchg
add
dec
inc
add
add
pop
add
jb
add
mov
aas
add
add
add
sbbl
add
add
add
mov
add
add
add
cmp
add
inc
add
pop
add
dec
add
inc
xor
add
xchg
add
add
dec
add
add
add
add
mov
add
add
mov
push
mov
inc
add
mov
add
add
add
inc
add
add
xor
cmp
xor
add
cmp
mov
add
add
add
add
add
add
add
add
add
add
pusha
add
add
pop
pop
add
add
add
cmp
add
add
add
add
push
add
add
add
mov
add
add
mov
add
push
xchg
add
add
add
add
add
outsl
xor
add
jae
add
add
add
aas
pop
add
add
test
add
jno
add
lea
add
add
add
add
push
add
push
add
xchg
add
xchg
add
add
add
add
add
add
add
push
add
add
add
add
xchg
dec
add
add
mov
pop
add
jg
add
jnp
add
imul
add
aas
imul
add
add
add
add
add
add
add
add
add
add
cmp
add
add
mov
xor
inc
add
add
add
add
xor
add
push
add
add
add
add
add
cmp
add
add
add
push
add
js
inc
push
add
push
add
add
add
add
outsl
jo
add
add
add
pusha
xor
add
xchg
add
add
add
add
addl
add
test
add
je
add
add
inc
add
add
add
outsl
add
jp
add
push
push
add
arpl
test
add
add
add
add
add
add
add
push
add
add
add
add
add
push
add
add
nop
add
add
outsb
inc
add
add
mov
add
insl
pop
add
dec
add
add
add
sbbb
add
add
add
add
push
test
add
add
jle
mov
add
outsb
push
add
add
dec
add
add
jns
add
add
add
jns
add
popa
add
add
add
add
insl
add
addl
dec
jns
add
jl
add
add
add
add
add
add
add
add
add
add
add
add
jns
jno
add
je
add
add
dec
add
add
add
add
test
aas
add
lea
orl
add
add
add
lea
dec
add
add
add
add
mov
inc
add
add
push
add
js
add
inc
cmp
add
add
add
inc
add
xchg
add
xor
add
add
add
jl
add
dec
add
mov
add
add
add
push
add
add
add
cmp
add
add
jae
add
xor
add
add
add
add
add
push
add
ja
add
add
add
add
add
jle
add
add
add
add
imul
add
add
add
inc
inc
add
add
dec
add
add
add
push
add
add
xchg
add
add
push
ss
add
push
add
xor
add
add
pop
data16
test
inc
add
add
jo
imul
add
add
add
add
add
add
cmp
mov
add
add
dec
add
jns
add
add
add
add
mov
add
add
insl
add
add
add
add
push
add
add
add
add
xchg
add
add
jle
add
dec
add
jno
push
add
dec
add
add
add
jge
add
add
add
outsb
add
add
push
add
add
add
add
add
pop
add
pop
add
add
mov
add
xchg
add
jae
add
add
test
add
jno
add
add
dec
jns
imul
outsb
inc
add
add
pop
add
add
add
add
add
add
jb
insb
add
add
mov
add
add
add
lea
xchg
add
outsl
mov
add
xor
add
add
add
xchg
add
add
dec
add
add
add
add
nop
mov
pop
add
add
push
mov
add
add
pop
pop
dec
add
add
add
add
add
add
xor
add
add
add
add
imul
add
inc
add
add
insl
add
add
add
test
add
jns
outsb
cmp
add
add
add
add
add
add
jle
add
add
add
jle
lea
add
add
push
popl
cmp
xor
dec
xor
add
add
inc
ja
add
add
add
inc
add
add
push
add
add
outsb
add
add
add
cmp
add
add
add
add
jno
xor
add
ds
add
add
add
add
add
add
jg
add
add
add
add
jge
add
add
add
pusha
cmp
add
addl
push
add
aaa
pusha
add
add
add
add
add
add
add
add
cmp
push
add
add
push
cmp
add
pop
add
imul
add
pop
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
jp
add
add
add
inc
add
add
add
add
cmp
add
add
add
xor
add
add
jo
mov
add
add
jo
add
xor
add
dec
push
addl
xor
addb
push
add
add
add
test
inc
add
dec
add
add
add
add
add
push
jle
add
push
add
add
add
add
add
inc
inc
dec
test
add
jno
add
add
pusha
jb
pop
jle
pop
add
add
add
nop
add
outsl
add
add
add
ja
add
dec
add
add
add
add
add
add
add
inc
add
add
add
dec
jl
bound
add
push
add
push
add
add
xorb
push
add
add
add
add
pop
dec
add
add
add
add
add
sbbl
add
add
add
add
add
add
add
push
add
add
push
add
push
add
pop
add
add
cmp
add
add
cmp
add
add
push
add
xor
xchg
add
add
popl
add
push
add
dec
add
add
add
pusha
xchg
add
inc
outsb
pop
add
add
add
add
popa
add
aaa
add
add
add
add
add
inc
add
add
add
add
mov
xchg
add
add
inc
add
dec
jp
cmp
add
jp
inc
add
add
mov
pop
add
js
js
push
add
add
popa
pop
add
pop
cmp
add
add
push
add
add
insb
xchg
add
outsb
add
cmp
aaa
inc
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
inc
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
je
add
pop
add
add
jg
js
add
add
mov
add
add
inc
add
add
push
add
add
add
add
add
xchg
push
add
add
add
add
xchg
add
add
add
jb
add
push
add
jle
add
outsb
add
add
xchg
add
add
add
add
dec
add
add
add
add
aaa
add
add
add
dec
jns
insb
add
add
jge
add
add
add
add
jnp
jg
add
dec
add
mov
cmp
push
jge
add
cmp
add
add
cmp
insb
add
add
push
add
add
jle
add
dec
add
add
add
aas
add
push
add
add
add
addl
add
inc
add
add
nop
add
outsb
add
bound
add
add
add
cmp
add
add
push
xor
add
test
add
inc
add
mov
add
add
add
add
add
add
add
mov
add
dec
add
add
add
addl
dec
add
add
add
aaa
xchg
add
add
add
add
add
add
jo
add
xor
popl
add
add
outsl
addl
add
insb
add
add
cmp
add
add
pop
add
add
xchg
add
add
add
jae
add
add
xchg
add
add
add
add
add
add
inc
pop
add
imul
add
add
add
aas
push
outsl
jb
add
add
add
jbe
add
add
add
add
add
xchg
push
push
add
add
add
jne
add
jl
pop
mov
add
add
add
dec
popa
add
add
add
add
add
jns
add
pop
add
pop
push
dec
add
xchg
add
add
add
push
jbe
add
ja
add
add
js
add
ja
add
jno
add
add
add
add
add
add
push
dec
mov
add
add
jo
push
add
aaa
aaa
add
add
push
add
add
inc
add
add
add
add
jl
dec
cmp
add
add
imul
add
add
xor
add
add
add
add
imul
xchg
add
xorb
add
push
add
add
je
add
add
add
add
subl
push
add
add
pop
add
add
add
add
add
add
dec
jno
add
add
add
mov
pop
add
add
aaa
add
add
dec
pop
add
add
add
add
add
xchg
add
lea
add
push
add
cmp
pop
addr16
add
add
add
add
add
add
xor
add
add
add
add
add
jo
add
add
add
add
bound
add
add
add
aaa
add
add
add
add
inc
js
add
add
mov
add
add
jne
jb
ds
add
add
add
add
cmp
add
push
add
pop
add
add
add
popl
add
add
add
add
add
add
bound
mov
add
add
add
bound
add
add
popl
jb
add
lea
add
jb
add
add
add
add
jne
add
add
add
add
cmp
add
add
add
gs
add
add
add
add
add
add
dec
sbbb
test
add
add
add
xchg
add
ja
push
add
imul
add
add
add
bound
push
xor
cmp
xchg
add
pop
add
add
add
jo
add
add
add
addb
add
mov
inc
add
add
add
xchg
add
add
add
add
add
add
add
add
add
imul
add
jbe
add
add
add
insb
jo
add
add
cmp
add
jnp
add
xchg
cmp
add
add
jp
add
add
add
inc
add
add
add
xor
add
xchg
add
add
add
add
add
add
cmp
inc
add
mov
add
pop
add
insb
add
add
add
add
add
add
add
mov
cmp
add
add
jg
add
add
add
add
dec
add
xchg
add
dec
add
add
push
lea
add
dec
add
add
add
add
pop
add
add
add
arpl
xchg
add
add
test
add
cmp
add
add
add
add
xor
inc
add
jnp
jno
addb
add
add
inc
outsb
add
xchg
add
add
add
add
add
add
add
add
xor
add
add
add
add
inc
add
add
add
add
insl
add
pop
cmp
add
add
test
add
outsl
add
dec
add
add
add
add
jne
add
add
test
xchg
add
add
pop
push
push
add
add
popl
add
add
add
add
add
bound
add
test
add
add
aaa
add
aaa
add
add
add
ss
add
add
xor
add
add
add
add
add
add
add
mov
add
add
add
push
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
popa
jno
add
add
add
add
add
add
add
cmp
add
inc
add
inc
add
xchg
xchg
add
pop
add
add
jbe
add
add
add
jns
add
add
pop
jo
xchg
add
xchg
inc
add
jle
add
jp
add
add
xchg
add
add
pop
bound
add
add
add
push
add
orl
add
add
push
add
add
inc
add
add
jnp
inc
imul
add
add
add
je
add
add
add
add
add
add
mov
mov
xchg
add
add
popl
add
add
add
add
add
add
inc
add
add
add
add
inc
jo
add
add
mov
add
test
add
add
add
add
add
inc
cmp
add
jg
add
popl
jno
add
inc
add
add
add
xchg
pop
add
add
add
add
popa
add
je
add
add
addl
add
xchg
imul
add
add
add
aaa
add
popa
add
add
pop
add
add
add
push
add
xchg
xor
push
add
inc
add
pop
add
add
outsb
add
add
add
add
addb
add
add
add
add
add
add
add
mov
add
insb
jbe
add
add
add
xorb
add
add
add
inc
jne
add
xchg
jbe
add
add
add
jp
add
add
jp
addl
add
add
add
add
data16
jp
add
add
add
xor
add
add
add
push
add
add
js,pt
add
add
xchg
add
jne
inc
add
add
arpl
add
je
imul
add
add
xchg
add
add
add
add
add
add
mov
add
jns
add
add
jp
add
add
xchg
add
popa
add
jno
inc
add
add
add
mov
add
add
mov
jg
add
add
cmp
add
add
add
add
imul
lea
inc
cmp
add
add
add
add
add
add
add
insl
add
xor
add
add
xor
xor
add
add
add
add
dec
add
add
test
add
add
mov
mov
inc
add
jnp
add
add
add
add
cmp
add
add
inc
add
add
add
add
add
add
add
add
add
dec
add
test
add
arpl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fs
pop
cmp
cmp
add
bound
add
imul
jb
mov
add
pop
add
add
aas
pop
add
add
xchg
add
add
jno
add
mov
add
popa
pusha
add
add
add
push
add
add
outsl
add
jbe
add
inc
add
add
add
add
add
inc
add
mov
add
add
add
add
add
add
js
add
add
jbe
add
mov
jae
add
push
add
add
aaa
add
add
add
add
add
push
cmp
xor
bound
add
add
add
add
xor
add
add
add
add
add
jae
add
cmp
add
arpl
xchg
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
test
add
jo
add
add
add
addb
add
add
add
add
add
nop
outsb
jp
add
add
add
inc
add
add
add
add
data16
test
inc
add
pop
dec
add
add
pop
add
jle
inc
popl
add
aas
add
push
jp
add
add
add
add
add
add
pusha
jb
ss
jo
add
insl
add
add
ja
inc
ja
pop
add
add
add
add
dec
add
dec
inc
add
add
add
add
add
outsl
jbe
add
add
add
jne
add
add
jnp
add
dec
cmp
jo
xchg
add
jnp
add
xchg
add
jb
imul
add
add
jg
add
add
add
add
add
add
push
add
add
dec
add
add
add
test
add
add
add
add
add
add
addb
add
push
dec
add
add
add
add
add
bound
pop
add
add
push
add
dec
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
insl
add
xchg
add
xchg
add
dec
dec
add
add
add
add
dec
xchg
add
add
add
add
add
add
add
addb
cmp
add
add
add
add
jp
add
add
jle
inc
add
pop
add
add
xchg
add
pop
add
add
add
add
add
add
pusha
add
push
dec
add
inc
xor
add
add
add
add
jbe
add
pop
arpl
add
add
mov
add
dec
add
add
xor
add
add
add
add
add
add
test
cmp
add
outsl
add
add
xchg
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
addl
push
add
add
add
add
add
add
add
add
dec
add
add
arpl
add
add
add
dec
dec
add
add
addb
add
add
add
add
push
add
add
add
add
add
add
pop
xor
add
add
add
add
add
xor
add
imul
add
add
jge
add
add
add
add
arpl
add
add
inc
xchg
jne
lea
add
add
test
add
add
add
add
add
pop
add
add
add
add
add
insb
add
add
inc
add
add
add
add
add
add
mov
add
add
add
add
add
xor
add
add
add
add
mov
add
add
add
add
xor
dec
add
pop
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
inc
add
js
add
inc
push
cmp
inc
add
lea
pop
add
add
add
add
add
aaa
add
jg
add
cmp
add
aas
inc
add
cmp
add
add
add
add
pop
add
add
push
add
push
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
push
add
add
add
lea
add
add
pop
add
add
add
add
add
xor
add
jle
add
inc
add
push
add
add
aas
add
push
add
jp
inc
add
add
add
xchg
add
pop
add
add
add
add
push
add
add
add
jl
add
mov
dec
imul
add
add
jae
inc
xchg
add
add
lea
add
add
add
add
push
jle
jne
add
add
add
add
add
dec
add
dec
pusha
jp
add
add
add
add
add
add
add
add
add
jns
add
add
cmp
add
add
dec
xor
add
add
js
push
bound
inc
add
add
add
add
dec
pop
jl
add
aaa
pop
add
add
add
add
add
outsl
add
add
cmp
inc
add
add
add
push
dec
add
add
add
add
ss
add
push
add
outsl
add
add
add
add
add
add
add
aaa
push
add
add
add
add
add
js
add
add
add
jb
imul
add
xchg
arpl
add
add
add
add
dec
add
add
push
aaa
add
dec
add
add
pop
add
add
ds
add
add
add
lea
add
add
dec
add
add
add
push
add
inc
add
add
add
push
add
dec
dec
add
dec
add
add
add
add
add
add
push
add
add
add
inc
addl
pop
xchg
add
push
add
add
add
add
jg
addl
dec
arpl
add
add
xor
add
add
add
cmp
add
add
jle
jno
add
add
add
add
add
push
add
pop
mov
dec
add
add
dec
pusha
add
add
add
add
inc
add
xchg
pop
jo
dec
add
add
xor
add
mov
add
add
add
add
add
push
add
imul
add
add
add
add
add
inc
add
add
lea
nop
add
add
add
lea
add
jp
add
xchg
arpl
add
add
add
add
push
popl
add
dec
add
add
add
pop
je
add
add
add
lea
add
add
add
cmp
add
cmp
add
xor
add
add
add
add
imul
add
add
add
add
insl
add
add
aas
add
add
add
add
add
add
add
add
add
add
jl
pop
add
dec
add
push
add
add
add
add
add
add
add
lea
add
add
jae
add
add
inc
push
add
inc
je
dec
pusha
add
add
add
mov
jne
add
jns
add
aaa
add
add
add
add
add
mov
add
add
add
add
bound
add
add
add
dec
pop
data16
add
add
add
add
add
add
add
arpl
mov
add
add
pop
add
add
add
jg
add
add
je
cmp
add
aas
pusha
inc
cmp
add
popl
add
xchg
dec
bound
add
mov
add
add
add
add
add
add
add
add
add
dec
add
add
add
jo
add
mov
jp
add
add
add
add
add
add
add
add
add
add
jl
add
inc
add
push
add
add
add
add
cmp
push
add
add
add
add
add
add
jl
add
add
add
add
add
cmp
add
xchg
add
add
jb
add
add
add
add
mov
add
add
add
add
add
add
add
jno
add
popa
push
add
add
add
add
add
xchg
add
jl
add
popl
add
dec
add
add
add
add
add
add
add
add
add
push
add
mov
add
inc
push
add
fs
mov
jnp
add
add
add
mov
add
add
xchg
add
pop
add
cmp
data16
add
add
push
js
add
push
push
mov
add
add
add
push
add
inc
addb
add
mov
add
add
add
add
add
xchg
arpl
test
add
add
add
add
add
add
add
add
dec
add
add
xor
add
add
add
add
add
add
add
add
add
add
xor
add
add
jp
popl
add
add
jb
add
add
add
jge
add
inc
add
add
add
xchg
add
mov
add
add
add
add
add
pusha
bound
add
xchg
add
add
add
outsl
jge
add
pop
dec
add
add
add
push
ss
add
add
add
pop
mov
add
add
imul
dec
add
add
add
push
add
add
pop
xchg
xchg
add
add
add
insl
add
xor
inc
add
jb
add
dec
add
add
jg
add
add
pop
add
cmp
add
add
add
add
push
add
add
add
xor
add
pop
add
add
mov
dec
add
add
jp
add
add
cmp
add
add
add
add
inc
add
pop
add
add
add
add
add
add
add
dec
add
add
mov
add
add
add
add
xor
add
add
js
add
add
add
mov
dec
add
add
add
cmp
add
add
add
add
add
inc
dec
add
add
add
add
add
add
fs
add
xchg
add
pop
add
add
dec
add
add
add
add
add
inc
add
add
push
add
add
add
jge
add
add
add
add
add
add
add
add
add
xchg
add
xchg
add
add
add
add
pusha
add
je
cmp
cmp
add
ja
pop
add
add
add
add
add
xchg
add
add
lea
add
data16
jge
add
add
add
add
add
add
inc
xchg
inc
add
mov
add
dec
add
cmp
pop
add
add
dec
add
add
add
inc
add
add
dec
add
xchg
push
pop
add
add
add
gs
add
add
add
jle
jne
add
insb
inc
add
cmp
add
add
popa
add
add
pop
addb
jle
add
add
xor
popa
push
add
add
add
dec
add
inc
push
je
add
jo
add
jl
jno
add
pop
add
xchg
jp
add
add
push
add
add
add
add
add
add
add
add
ss
add
push
add
add
aaa
add
pop
add
add
push
insb
add
add
add
add
add
add
add
dec
add
add
add
data16
outsb
add
add
add
add
add
add
cmp
add
popa
add
add
add
add
push
add
add
nop
add
add
add
dec
add
add
dec
add
add
add
add
pop
add
add
add
add
add
add
add
xchg
cmp
je
add
add
add
add
add
add
add
jge
add
add
xor
add
dec
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
outsb
push
add
add
add
dec
add
add
add
cmp
add
popa
add
add
add
add
add
js
add
add
inc
add
add
add
add
add
add
add
jae
add
popa
add
add
add
imul
pop
add
insl
add
add
add
add
add
imul
push
inc
add
jge
push
add
add
add
add
push
xor
add
add
imul
add
test
add
outsb
add
mov
add
add
add
outsb
add
add
add
add
add
add
add
cmp
xchg
add
add
test
add
jg
pusha
add
add
add
add
add
add
add
add
add
add
add
xor
add
jno
push
add
add
add
add
add
add
add
add
add
xor
dec
add
add
add
add
inc
push
push
add
inc
add
xchg
add
add
add
add
add
add
add
add
add
add
add
mov
inc
add
mov
add
pop
add
add
mov
add
add
dec
push
add
popa
add
xchg
add
add
add
add
mov
add
add
add
add
add
add
inc
add
add
add
add
add
inc
insl
add
add
add
xor
add
add
add
inc
add
add
gs
test
add
add
add
add
lea
xor
add
add
add
add
ss
pop
add
cmp
inc
add
add
ja
pop
add
jge
xchg
add
pop
je
add
add
jb
add
add
add
pop
add
add
add
add
pop
xchg
add
dec
dec
add
add
add
add
inc
push
add
add
add
add
xor
add
add
jl
add
dec
inc
add
xor
add
add
inc
add
add
addb
add
add
add
cmp
mov
jge
add
add
add
add
add
add
jno
add
add
mov
add
add
add
push
dec
add
add
add
add
gs
add
add
outsb
add
mov
jnp
add
xchg
add
dec
add
addb
outsb
add
add
insl
addl
add
add
add
cmp
add
add
add
add
add
add
add
mov
push
aas
add
add
add
add
add
add
imul
add
dec
add
pop
add
add
inc
jle
add
add
add
add
add
popl
mov
add
dec
add
add
add
add
add
add
add
add
add
insl
jne
pop
pop
add
add
inc
add
add
add
add
pop
add
add
aaa
add
add
add
add
add
inc
jg
add
add
add
inc
insl
add
add
add
add
add
add
inc
add
add
add
aas
add
add
add
add
aas
inc
add
add
add
add
add
inc
add
add
popa
add
pop
push
jns
jae
jo
add
add
add
add
jns
add
add
add
add
add
ja
add
cmp
xchg
add
xchg
add
xor
add
add
add
add
xchg
add
add
test
add
add
arpl
add
push
inc
push
add
dec
add
cmpsl
add
