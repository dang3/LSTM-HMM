push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
push
mov
sub
push
push
push
push
call
add
pop
mov
mov
push
pushl
pop
call
mov
mov
lea
add
call
add
in
sub
push
pushl
push
pushl
push
call
add
pop
mov
mov
lea
add
call
xor
mov
mov
pusha
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
mov
lea
add
call
jmp
ret
and
push
pop
sub
mov
mov
shl
xor
sub
mov
mov
movl
mov
sub
je
sub
lea
mov
sub
je
mov
sub
ja
push
pop
jbe
popf
push
pushl
decl
ret
mov
in
pop
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
push
push
push
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
push
mov
sub
push
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
push
push
push
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
push
push
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
pushl
push
push
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
pushl
pushl
push
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
pushl
pushl
push
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
push
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
push
add
push
pop
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
add
lea
sub
sub
mov
pop
mov
mov
lea
mov
push
mov
xorl
pop
sub
or
xor
add
mov
push
push
push
pop
push
pop
stos
shr
stos
shr
stos
shr
stos
pop
pop
subl
neg
clc
sbb
pushl
lea
lea
pop
repz
sub
cmp
jne
mov
pop
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
push
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
push
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
push
mov
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
push
mov
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
push
push
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
pushl
push
pushl
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
push
fsubs
add
test
add
mov
and
add
and
add
add
and
add
and
add
and
add
and
add
add
mov
and
add
and
add
and
add
and
add
and
add
add
fisubl
add
cwtl
and
add
add
add
add
out
and
add
and
add
add
andb
add
and
add
and
add
add
push
and
add
add
add
add
cmp
add
add
dec
and
add
add
add
add
insb
and
add
add
add
and
add
and
add
and
add
add
adc
add
add
mov
add
add
add
add
add
nop
and
add
add
add
add
jl
add
movsb
and
add
and
add
add
jo
add
lret
add
add
and
add
and
add
and
add
and
add
add
mov
and
add
and
add
and
add
and
add
and
add
add
fisubl
add
cwtl
and
add
add
add
add
out
and
add
and
add
add
andb
add
and
add
and
add
add
push
and
add
add
add
add
cmp
add
add
dec
and
add
add
add
add
insb
and
add
add
add
dec
outsl
arpl
inc
insb
popa
addr16
add
push
gs
imul
ret
gs
jne
jb
outsb
je
jb
arpl
jae
roll
dec
gs
jo
jb
add
cmp
push
jb
jbe
je
push
jb
imul
inc
add
inc
jne
jb
outsb
je
push
add
call
inc
imul
bound
gs
add
pop
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
push
add
outsl
jae
dec
popa
outsb
fs
add
inc
gs
je
imul
inc
add
addl
jb
popa
je
inc
imul
jns
add
add
gs
outsl
jbe
inc
imul
jns
add
call
inc
imul
bound
gs
add
rolb
insb
outsl
bound
dec
outsl
arpl
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
gs
popa
jae
inc
jb
outsl
jb
add
add
gs
outsl
insl
insl
inc
jb
popa
imul
test
inc
jb
popa
je
inc
jbe
outsb
je
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
imul
jb
je
arpl
add
aad
inc
imul
add
push
dec
inc
dec
xor
cs
insb
add
rolb
jae
imul
mov
inc
imul
dec
gs
popa
addr16
add
jnp
push
gs
outsl
arpl
add
sbb
ja
jo
imul
pop
dec
jae
outsl
outsl
insl
gs
xchg
push
push
gs
jae
addr16
add
into
pop
dec
outsl
popa
fs
jne
jae
jb
add
or
jae
dec
gs
popa
addr16
add
xchg
inc
gs
imul
js
push
add
jae
push
gs
jne
jae
jb
outsl
jae
add
inc
gs
imul
outsb
addr16
add
fldl
inc
imul
outsl
ja
add
imul
jae
popa
addr16
add
push
push
inc
push
xor
cs
insb
add
sbb
addr16
gs
jns
popa
insl
add
or
inc
gs
gs
imul
inc
gs
fs
jae
inc
jns
popa
insl
gs
add
add
je
popa
insl
gs
jns
jns
gs
add
dec
push
push
push
dec
inc
dec
cs
insb
add
dec
jae
popa
je
push
push
inc
add
push
dec
push
push
dec
cs
insb
add
add
arpl
push
shll
fcomp
sahf
mov
cmp
dec
das
test
jecxz
push
pop
mov
dec
mov
rorl
imul
in
fidivrs
push
sbb
mov
lds
test
mov
fwait
mov
sbb
jl
fidivrs
xor
push
adc
aas
stc
cmp
mov
or
cltd
ret
and
fld
inc
aam
adc
push
push
and
les
inc
popf
cltd
jno
in
aad
cmp
xlat
dec
fucom
inc
push
movsl
xchg
add
jge
rcll
push
loope
pop
adc
in
push
xor
aad
rcrb
inc
push
or
pushf
xchg
fstl
push
rep
sbb
out
rclb
cmp
inc
add
mov
ja
xchg
push
fcoms
fcompl
pop
je
mov
into
xchg
bound
xor
outsb
nop
dec
cmp
add
add
inc
and
sbb
movsb
ljmp
outsb
fldt
icebp
mov
adc
jnp
aam
fwait
dec
adc
xchg
je
mov
lock
jns
push
xchg
sbb
faddp
lods
fsts
test
pop
aad
push
aas
pop
js
jp
lcall
cmpsl
jecxz
sbb
lret
mov
mov
std
push
adc
mov
jl
stos
mov
inc
adc
cmp
jle
pop
add
daa
sbb
jmp
out
sbb
dec
cmpsl
lods
push
fs
std
jecxz
ss
push
add
adc
push
mov
xchg
rol
sbb
push
data16
inc
inc
jo
fbld
daa
xor
jno
cmp
dec
xchg
pop
mov
mov
sub
push
add
add
add
add
xor
add
add
add
jo
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
or
add
adc
add
or
add
and
add
or
add
add
add
add
add
add
add
add
push
popa
add
test
add
clc
xchg
add
add
add
add
add
or
add
mov
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
sub
add
mov
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
lods
mov
mov
fwait
pop
xchg
xchg
xchg
or
jle
jp
jnp
stos
lods
lods
add
test
mov
mov
mov
ret
ret
stos
leave
lret
int
int3
rcl
in
rcl
shl
rcl
shl
into
into
int3
hlt
enter
enter
mov
mov
mov
mov
stos
lods
lea
cltd
lcall
add
add
add
push
add
add
add
add
add
add
add
add
mov
mov
and
mov
mov
leave
lret
leave
not
rcl
cld
xlat
xlat
xlat
std
fcom
xlat
fcom
aam
aad
rcl
sar
into
int
rcl
iret
inc
std
mov
mov
scas
iret
movsb
movsb
movsl
xchg
mov
xor
add
add
add
add
add
add
add
add
add
add
lods
lods
lods
add
scas
sbb
mov
jnp
mov
sar
dec
lret
rcl
sar
aad
aam
fcom
xlat
fcomp
xlat
call
dec
int
dec
int
call
aam
into
int3
int3
inc
rol
mov
mov
scas
std
cmpsb
cmpsl
cmpsl
ljmp
pop
fs
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
pop
push
add
inc
add
pop
add
push
or
inc
or
sbb
push
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
dec
leave
enter
int
rcl
sar
xlat
fcomp
call
aad
dec
into
into
dec
lret
int3
into
int3
inc
mov
mov
mov
cmpsl
cmpsb
test
mov
lcall
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
push
imul
pop
pop
pop
fs
aas
inc
push
sbb
push
sub
push
xor
cmp
aaa
cmp
and
adc
pop
add
add
add
add
add
mov
pop
mov
mov
mov
mov
mov
rol
ret
dec
enter
sar
aad
call
aad
ror
sar
mov
inc
ret
mov
mov
ljmp
movsl
movsl
sahf
sahf
popf
xchg
cwtl
xchg
lcall
addb
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
arpl
push
push
push
add
outsl
xor
jge
jge
jg
jb
jno
popa
arpl
push
dec
dec
xchg
cmp
cmp
mov
outsb
outsb
outsb
nop
popa
arpl
inc
inc
inc
xor
add
add
add
add
movsb
movsb
mov
inc
mov
mov
mov
mov
mov
mov
mov
dec
leave
dec
lret
lret
leave
lret
dec
leave
inc
mov
mov
scas
scas
scas
jmp
lcall
xchg
xchg
xchg
xchg
xchg
fwait
lcall
cmp
push
or
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsl
outsb
outsb
add
pop
or
jp
mov
incb
jl
idivb
jmp
outsb
outsl
out
pushw
push
jae
jle
jge
jns
jp
gs
inc
inc
cmp
sbb
sbb
adc
or
stos
stos
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsl
test
lcall
incl
test
xchg
xchg
xchg
sahf
sahf
mov
ficomps
nop
nop
jle
js
pop
xor
das
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
addb
in
mov
mov
addb
decb
mov
loope
jo
enter
mov
test
jp
data16
cmp
es
jg
fwait
lcall
test
stos
stos
sti
lods
stos
stos
stos
lods
lods
stos
stos
stos
std
movsl
mov
fwait
xchg
xchg
xchg
decl
jle
jns
jns
jp
jnp
xchg
xchg
movsb
movsb
movsb
scas
mov
sti
mov
mov
mov
mov
mov
lods
lods
stos
xchg
push
adc
add
or
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
xchg
xchg
incl
test
std
xchg
xchg
xchg
std
xchg
cwtl
xchg
stc
xchg
xchg
xchg
in
mov
enter
int
lea
mov
push
push
push
or
inc
inc
dec
insl
imul
xchg
leave
fwait
cltd
cltd
fistps
lcall
mov
mov
mov
mov
mov
jmp
lods
scas
mov
mov
mov
mov
mov
std
mov
mov
mov
jnp
or
add
add
pop
pop
adc
cmpsl
scas
call
lcall
incl
xchg
xchg
xchg
xchg
sahf
popf
pushf
std
movsb
movsl
movsl
stc
mov
xchg
xchg
in
xchg
nop
nop
in
xchg
push
jne
or
add
inc
es
dec
dec
dec
data16
jno
mov
xchg
rclb
xchg
xchg
std
mov
call
sahf
lahf
jmp
cmpsl
lods
pushl
movsl
lods
mov
xchg
test
rorb
mov
mov
ljmp
mov
add
pop
pop
adc
scas
mov
ret
mov
lcall
mov
decl
nop
decl
xchg
xchg
popf
sahf
pushf
mov
test
mov
fstpt
jp
push
push
push
outsl
dec
dec
dec
pop
popa
bound
je
mov
jg
test
int
xchg
xchg
in
nop
xchg
testl
mov
jmp
mov
mov
pop
mov
mov
xor
js
mov
movsb
mov
mov
mov
stos
lods
lods
mov
movsb
mov
add
pop
pusha
adc
mov
ljmp
popf
decl
call
xchg
xchg
call
xchg
fwait
fwait
cltd
pushf
fwait
sahf
mov
movsl
movsl
std
mov
cwtl
cltd
out
xchg
xchg
mov
cwtl
aad
cltd
lcall
mov
stc
xchg
test
std
xchg
je
cltd
addr16
mov
push
jg
stos
inc
jl
mov
jp
mov
jae
mov
insl
ljmp
adc
lods
or
lods
or
pushl
mov
mov
pushf
movsl
mov
movsl
add
mov
add
pusha
adc
mov
ljmp
popf
call
xchg
xchg
lcall
pushf
pushf
jmp
pushf
sahf
call
xchg
xchg
call
xchg
xchg
call
lcall
cltd
lahf
stc
sahf
xchg
pushf
cld
popf
mov
xchg
push
xchg
push
jle
xchg
dec
js
cltd
jbe,pt
fwait
sub
pushf
pop
imul
movsl
push
jmp
adc
lods
adc
stos
adc
lods
adc
mov
imul
adc
mov
imul
aas
cmp
mov
lods
lods
scas
movsl
movsb
movsl
sub
movsl
mov
add
add
add
mov
pop
pop
adc
mov
ljmp
popf
call
popf
pushf
lcall
movsb
mov
jmp
cwtl
cwtl
decl
mov
decl
js
cltd
jo
lcall
call
cs
decl
adc
nop
or
call
add
lcall
ljmp
sbb
mov
outsl
pushl
sbb
jae
mov
and
rcrb
inc
aas
test
ret
xchg
scas
mov
scas
scas
mov
sahf
mov
movsl
add
pop
pop
adc
lods
mov
mov
lcall
movsb
movsb
movsl
jmp
cmpsb
cmpsb
ljmp
test
lcall
jle
decl
inc
outsl
decl
popa
decl
pop
incl
add
incl
add
mov
push
decl
add
fwait
add
lahf
add
cmpsl
or
mov
outsb
pushl
sub
mov
sub
inc
sub
inc
sub
dec
cs
cs
inc
mov
mov
cld
scas
mov
lret
movsl
dec
mov
movsb
movsl
add
push
push
adc
test
mov
mov
mov
test
ljmp
mov
ljmp
mov
mov
xchg
incl
or
or
addb
incl
add
add
mov
push
decl
pop
call
pop
lcall
add
ljmp
sub
cmp
leave
cmp
dec
cmp
call
cmp
call
dec
xchg
dec
mov
std
mov
mov
movsb
movsl
movsl
push
mov
mov
add
add
add
mov
dec
dec
adc
movsb
test
mov
mov
sahf
cltd
lahf
jmp
scas
lods
pushl
mov
pushl
mov
ljmp
decl
or
mov
pop
decl
or
xchg
push
incl
add
mov
push
call
add
sahf
add
mov
add
stos
add
jno
ret
cmp
into
inc
call
inc
mov
rorb
call
dec
xchg
fmuls
fisttpl
fmull
ficoml
call
xchg
std
mov
mov
movsl
mov
sahf
or
add
add
add
add
dec
dec
adc
jl
mov
cmpsl
scas
jmp
stos
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
insl
decl
sbb
sbb
lea
pop
decl
add
popl
push
call
pop
jmp
add
stos
add
mov
gs
mov
dec
mov
push
xchg
fcoms
fsts
fcompl
jmp
pop
popf
fists
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
cmpsl
cmpsl
cmpsl
jne
mov
lahf
add
inc
inc
adc
js
lahf
cltd
popf
jmp
sahf
lcall
mov
mov
mov
mov
mov
mov
mov
ljmp
inc
jbe
nop
and
and
xchg
and
call
sbb
or
call
add
cltd
add
mov
add
lods
add
mov
fs
mov
xor
fldenv
fbld
jmp
arpl
jmp
cmpsl
jmp
data16
call
push
stos
fldl
mov
cmpsb
test
mov
lahf
mov
add
add
add
inc
aas
adc
jb
fwait
xchg
cltd
call
mov
scas
scas
pushl
mov
mov
mov
mov
ljmp
push
jle
xchg
sub
lcall
lcall
sbb
pop
call
add
mov
add
lods
add
mov
pushw
adc
roll
frstor
jmp
outsb
lods
jmp
outsl
lods
jmp
jno
jmp
jae
jmp
mov
out
jbe
in
je
out
jae
jmp
mov
mov
test
lcall
sahf
add
jg
cmp
cmp
js
mov
pushf
lcall
mov
mov
mov
mov
mov
mov
cmpsb
scas
lcall
outsl
jmp
aaa
je
sahf
xor
fwait
sbb
pop
call
add
movsb
add
test
add
mov
data16
mov
sbb
fistl
jmp
ja
jmp
jg
in
xorl
push
test
push
cmpl
jmp
mov
mov
cmpsl
popf
sahf
pushf
daa
lahf
sahf
mov
add
add
add
pusha
add
xor
pop
jne
jle
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
sarl
rol
pushl
outsb
mov
lcall
jmp
cmp
lcall
lcall
add
stos
add
scas
add
mov
gs
mov
add
call
and
movsb
jmp
mov
push
sar
nop
ret
push
xchg
sar
xchg
ret
push
xchg
xchg
pop
in
mov
fidivl
lods
stos
mov
popf
sahf
xor
popf
popf
add
add
add
inc
aas
add
xor
push
inc
dec
inc
jb
pop
dec
in
push
decl
mov
mov
mov
sar
ret
inc
mov
jl
lcall
dec
cmp
dec
cmp
xor
pusha
lcall
add
add
lods
add
mov
mov
add
movl
mov
call
xchg
ret
push
fwait
push
fwait
lcall
negl
sti
popf
int3
cld
lahf
int
sti
lcall
fidivs
enter
mov
lahf
mov
nop
add
add
add
cmp
add
cmp
dec
jecxz
pusha
pusha
call
mov
mov
mov
sar
ret
vshufps
leave
mov
mov
ljmp
dec
xchg
movsl
sub
lcall
jmp
add
mov
popa
mov
add
leave
add
rorl
jne
loopne
xchg
out
lea
push
movsb
int3
push
movsl
into
clc
cmpsl
iret
cld
test
cld
cmpsb
into
cld
test
sar
cld
stos
sar
cmpsl
sar
cmc
sahf
jmp
mov
lret
std
mov
mov
lahf
lahf
mov
add
fwait
lcall
xor
add
sub
or
inc
bound
pop
xlat
jae
jb
mov
rol
rol
mov
inc
enter
rol
mov
cmpsb
jmp
mov
scas
dec
test
lahf
sbb
pop
jmp
popa
pushl
inc
add
into
add
xlat
add
fists
push
popf
leave
sti
lods
sar
cli
scas
aad
sti
mov
cli
mov
cld
mov
std
mov
std
mov
mov
pushl
sar
mull
vaddsubps
int
mov
mov
sahf
lahf
lahf
pusha
xchg
xchg
xchg
or
add
add
xor
add
dec
dec
outsb
jo
mov
mov
fcomp
jmp
xlat
not
rcl
std
lret
dec
leave
lret
dec
lret
lret
lret
mov
lods
ljmp
push
mov
stos
jle,pt
sahf
or
pop
ljmp
add
mov
add
iret
add
fadds
jb
fiadds
jne
ljmp
sti
lods
aad
mov
fcos
cld
mov
mov
fdivr
mov
fcos
mov
xlat
clc
mov
jmp
mov
call
lret
mov
lahf
lahf
jo
xchg
xchg
or
add
add
xor
add
add
pop
or
mov
pop
out
out
jecxz
out
jecxz
loop
fsubp
fcomp
fdivr
aam
xlat
std
into
ror
mov
push
test
test
add
jmp
add
mov
add
leave
add
add
fildl
jbe
jecxz
ja
in
xor
sti
mov
loopne
std
inc
fdivrp
inc
loopne
dec
loopne
dec
fdivrp
dec
inc
std
lret
cli
mov
lret
lret
mov
mov
xchg
adc
add
add
incb
std
std
add
incl
repz
testb
out
in
pop
jmp
in
sub
out
out
dec
jmp
jmp
out
in
in
fcmovnu
fsubr
ret
mov
xchg
test
ja
movsl
push
jmp
popa
pushl
add
movb
dec
add
xlat
add
loopne
ja
jmp
inc
pushf
cli
mov
jecxz
std
lret
in
dec
in
dec
in
dec
in
dec
jecxz
dec
loop
dec
loop
shl
call
jecxz
call
jecxz
sti
out
mov
xlat
inc
cmpsl
cmpsl
mov
xchg
cwtl
add
add
add
incl
std
std
add
idiv
add
repnz
add
repnz
in
repnz
out
repnz
out
in
pop
fsubp
loopne
les
sti
lahf
and
pop
jmp
add
mov
fs
add
enter
rolb
jno
fildl
jne
jecxz
jns
in
push
jge
negb
cld
mov
cld
iret
in
shl
std
shl
shl
shl
std
aam
std
out
call
call
std
fucomi
shl
push
ret
jecxz
leave
lret
stos
stos
test
and
cwtl
xchg
add
std
cld
add
cld
clc
add
sti
stc
add
div
or
aad
xor
je
negb
add
cmpsb
add
scas
add
mov
add
lret
call
add
faddl
jne
call
sbb
stc
je
cld
cld
fsubr
fucomi
fldpi
std
fldl2t
fucomi
std
fucomi
std
fucomp
std
fucomi
std
loopne
jmp
in
std
loopne
aam
push
ret
aad
out
rcl
sar
stos
lods
stos
lods
xchg
xchg
xchg
outsl
outsb
jo
xchg
xchg
xchg
add
loopne
add
leave
sbb
lods
jge
repnz
and
mov
add
mov
arpl
mov
add
into
add
aam
jb
fiadds
jne
call
sub
std
shl
fsubrp
fsubr
fucompp
fucomi
std
xlat
jmp
aam
cli
iret
loop
cli
iret
loopne
clc
iret
fdivrp
clc
lret
cmc
ret
xlat
out
mov
fcos
xlat
xlat
fdivr
mov
mov
fwait
fwait
lcall
fwait
cltd
add
xlat
add
enter
mov
mov
lcall
add
mov
arpl
mov
add
roll
outsl
fadds
jae
loopne
jns
jmp
ss
cli
xchg
enter
loope
cli
lret
cld
stc
rcr
idivb
push
mov
sar
in
mov
int
call
ret
sar
ljmp
imul
cmc
fsubrp
mov
mov
xchg
add
add
add
int3
int3
add
mov
loopne
xor
pop
ljmp
add
mov
add
dec
pop
jno
rorb
ficoml
jns
loope
cmp
inc
xchg
ljmp
ljmp
std
loope
scas
ret
cli
fnstsw
lock
into
in
enter
into
aad
loopne
fadd
out
loop
jmp
jmp
popf
call
leave
lret
lods
lods
adc
cmpsb
cmpsl
test
lahf
mov
rolb
popf
stos
aam
dec
jg
pushf
sbb
cmpsb
push
insb
lods
es
mov
js
mov
inc
xchg
les
stc
leave
arpl
hlt
rorb
out
mov
mov
enter
int3
rcl
int
aad
shlb
xlat
aam
jg
jb
gs
jecxz
call
in
in
xor
cmc
cmc
mull
lock
fcmovnu
or
mov
into
add
add
add
sarl
mov
xchg
stos
jne
ljmp
mov
sarb
mov
les
rcrl
lret
jp
int
addr16
ror
push
iret
rcl
dec
aam
aad
rcl
aam
daa
fcomp
ficompl
fchs
fcoml
fucom
jecxz
loope
in
call
repnz
add
cld
testb
std
add
std
std
add
incb
mov
mov
mov
mov
lods
mov
mov
mov
mov
mov
rcll
lds
leave
lds
int3
leave
daa
int
shlb
iret
rcrb
rcl
aam
rcl
rorb
aam
aad
rcr
xlat
add
fstp
add
loopne
add
in
add
jmp
add
aad
std
add
mov
add
ret
ret
les
mov
mov
mov
push
rol
or
enter
leave
leave
add
int3
lret
aam
add
aad
rcl
aam
aam
aam
aad
add
xlat
loop
xlat
fiaddl
loop
fstp
loopne
in
out
icebp
repnz
std
add
incl
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarl
ret
mov
ret
ret
mov
mov
mov
stos
test
test
xchg
xchg
xchg
pop
add
add
add
add
add
add
mov
mov
mov
mov
mov
mov
rcl
into
jmp
rcl
cmc
rcl
sar
iret
rcl
cli
int3
lret
int
lret
lret
int3
hlt
mov
mov
iret
lods
lods
lods
fwait
xchg
xchg
xchg
dec
aas
aas
cmp
sbb
add
adc
add
push
add
add
cmpb
inc
inc
aas
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
rol
enter
ror
into
xlat
xlat
aad
dec
ror
dec
int
dec
lret
int3
mov
mov
cld
stos
stos
lods
icebp
cltd
xchg
cltd
mov
or
or
add
add
add
add
add
add
add
add
add
add
jae
je
je
je
fs
inc
dec
dec
cmp
sub
sub
xor
dec
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
dec
lret
rcl
sar
rcl
aam
lret
lret
lret
inc
mov
rol
pushl
stos
popf
popf
sahf
cwtl
xchg
xchg
jmp
outsl
jno
adc
add
xor
add
add
add
add
jg
addl
test
jns
imul
movsb
push
push
push
stos
push
imul
aaa
cmp
pop
jo
jno
scas
scas
mov
mov
mov
mov
mov
inc
rol
mov
inc
mov
mov
mov
ljmp
lcall
xchg
xchg
xchg
lcall
xchg
dec
dec
dec
dec
movups
xor
add
and
add
adc
add
pop
fwait
fwait
cltd
add
pushf
cwtl
cwtl
fcoml
addb
jge
jnp
js
jns
jns
jnp
jns
jp
jb
jb
push
push
push
cmp
aaa
popf
popf
popf
mov
scas
scas
rep
scas
scas
sti
scas
lods
lods
std
test
test
sahf
popf
sahf
call
test
call
mov
lods
jmp
scas
scas
leave
movsb
cmpsb
cmpsb
cltd
jb
jae
adc
adc
add
add
add
add
outsb
insl
outsb
pop
mov
loop
lcall
mov
nop
sti
xchg
xchg
xchg
lock
fimuls
mov
jp
pop
and
inc
inc
dec
jo
outsb
orl
cltd
lcall
mov
xchg
xchg
xchg
lcall
cmpsb
test
mov
scas
std
mov
scas
mov
xlat
cmpsl
movsb
cmpsl
pop
jg
addb
add
add
add
add
popa
or
scas
mov
movsl
lahf
mov
decl
nop
nop
call
lahf
sahf
sti
sahf
mov
lcall
push
push
jo
pop
pop
outsl
insl
outsb
insl
xchg
subb
xchg
lock
lcall
mov
pushl
pop
mov
jl
mov
scas
stos
insl
stos
stos
test
add
add
add
pusha
or
mov
in
movsb
cmpsl
call
xchg
xchg
lcall
cltd
cltd
cwtl
lcall
popf
lahf
pushf
cli
xchg
xchg
xchg
jmp
xchg
lea
jecxz
orb
xchg
push
cld
xchg
pop
jg
popf
dec
jp
mov
ss
mov
jae
mov
insl
ljmp
sbb
mov
mov
mov
mov
jle
movsl
movsb
push
pop
pop
popa
or
mov
in
movsl
test
xchg
xchg
cltd
lcall
mov
mov
decl
addl
xchg
jae
cld
xchg
popa
cmp
dec
jns
xchg
cmp
xchg
daa
imul
cltd
punpcklbw
lahf
push
ljmp
sbb
mov
insl
pushl
push
jb
mov
pop
nop
mov
scas
scas
xchg
popf
sahf
lahf
adc
add
add
pusha
pop
popa
or
mov
stos
mov
mov
ljmp
test
lcall
cmp
mov
decl
adc
test
pop
decl
add
xchg
add
fwait
add
cmpsl
or
pushl
jnp
mov
xor
enter
leave
xor
inc
test
scas
movsb
cmpsl
test
sbb
add
add
popa
pusha
pusha
or
cmpsb
test
cmpsl
mov
test
scas
scas
scas
pushl
mov
jmp
inc
jb
mov
pop
decl
or
xchg
push
decl
add
xchg
add
lahf
add
cmpsb
add
mov
outsb
inc
aaa
cmp
inc
mov
rolb
call
inc
call
inc
xchg
fiaddl
call
arpl
stc
mov
mov
movsl
mov
std
add
add
add
pusha
or
mov
ljmp
mov
mov
mov
mov
mov
jl
sbb
pusha
decl
or
mov
push
call
add
add
scas
add
and
iret
dec
xchg
fsts
fcompl
fistps
jmp
pop
mov
fisubrs
int
mov
ret
cmpsb
xor
add
add
dec
pop
jge
jl
pushf
xchg
lcall
lods
scas
pushl
mov
mov
lcall
sub
insl
call
adc
xchg
add
popf
add
cmpsl
add
scas
add
push
push
fisubl
jmp
outsb
test
call
jno
in
jno
call
test
mov
inc
addb
add
dec
pop
outsb
insl
imul
test
lcall
mov
mov
mov
jmp
cmp
mov
sub
xchg
or
lcall
ljmp
add
ret
call
inc
xchg
jmp
jns
jmp
mov
in
cmpl
xrelease
push
mov
mov
test
push
cltd
fwait
lcall
sub
push
push
push
dec
pop
imul
mov
mov
mov
mov
ret
mov
pushf
jmp
inc
cmp
sub
cltd
or
add
stos
add
mov
gs
mov
adc
mov
push
xchg
ret
push
cwtl
push
cltd
enter
leave
stc
fwait
leave
clc
xchg
jmp
lods
mov
stos
popa
mov
add
add
inc
inc
pop
pop
pop
push
fisttpl
mov
mov
rol
ret
ret
ret
inc
xchg
cmpsl
jmp
dec
cmp
and
add
jmp
add
mov
add
fsubs
cmp
mulb
into
cli
stos
sar
cli
stos
sar
sti
lods
sar
stos
sar
stc
test
call
rol
test
pushf
pushf
or
add
add
push
dec
dec
aaa
je
je
test
into
into
out
into
int
leave
lret
int3
sti
enter
enter
mov
mov
stos
inc
jle
mov
add
mov
fs
add
iret
add
flds
push
xchg
cld
mov
std
mov
mov
xlat
sti
mov
fcos
sti
mov
leave
dec
rol
mov
lods
mov
add
add
add
add
pop
or
aad
dec
loopne
loope
loopne
loope
ffree
fcmovnu
fcmovu
aam
fsubr
mov
gs
cmpsl
sub
pusha
pushl
add
enter
add
jecxz
jp
lock
mov
std
std
loop
inc
loope
std
dec
dec
std
fdivr
lock
leave
divb
popf
sahf
sbb
add
add
incl
std
std
std
add
jmp
or
in
in
sbb
jmp
xor
loopne
loop
lds
mov
mov
add
mov
fs
add
iret
add
fildl
je
jmp
outsb
mov
cld
ret
cld
shl
std
shl
call
in
std
shl
aad
call
out
std
aam
push
enter
lret
sar
mov
mov
and
add
add
std
add
std
std
add
incb
aad
aam
mov
pop
xchg
lahf
or
test
pop
pushl
add
rolb
jo
fiadds
ja
out
and
std
shl
fldpi
std
fldl2t
cld
fsub
std
fldl2t
sti
std
fsub
sti
aam
push
xlat
jmp
rcl
sti
mov
lahf
sahf
das
add
add
int
into
or
fs
mov
add
mov
add
aad
jno
loope
js
in
das
xchg
stc
fwait
cli
int
stc
leave
loopne
test
bnd
repz
lock
sar
in
sar
in
vpsadbw
shl
in
fsubrp
enter
stos
stos
test
std
add
add
add
aad
push
mov
jae
or
insb
inc
pop
jb
int
jnp
xlat
sub
sti
ficoms
clc
jecxz
mov
out
loop
leave
jmp
fdivrl
lret
enter
int
scas
in
fistpl
in
jmp
rorl
mov
add
lods
lods
lods
add
xchg
movsb
les
pop
mov
mov
nop
fidivrl
jg
rol
stos
mov
mov
ret
ror
aam
int
ror
iret
pop
rcl
rorl
fcomp
cmp
loopne
das
in
fisubs
in
repnz
jmp
or
incl
std
incl
mov
mov
outsb
scas
mov
lods
mov
push
mov
mov
shrl
enter
rcl
pop
rol
adc
rcl
or
loopne
or
into
int3
add
std
incl
incl
cltd
fwait
fwait
add
vshufps
int
add
incb
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
fwait
cltd
fwait
add
rol
mov
xchg
enter
mov
ret
ret
mov
mov
lods
stos
stos
xor
jne
add
add
add
add
add
add
add
add
add
add
add
add
stos
stos
lods
add
mov
jmp
aam
std
rcl
sar
int
into
std
mov
stc
mov
cmpsl
cmpsl
roll
push
add
add
add
add
add
add
add
add
jno
jae
data16
inc
inc
das
das
das
das
daa
inc
inc
inc
and
add
add
mov
mov
cmpl
ret
int3
int
aam
aad
int
iret
inc
mov
mov
lods
lods
jmp
mov
push
add
add
add
add
jae
jne
xchg
adc
outsl
outsb
ret
arpl
insl
outsb
outsl
jb
bound
pusha
pop
pusha
sbb
mov
in
mov
mov
mov
lods
stos
lcall
xchg
xchg
lcall
xchg
cltd
lds
jb
es
and
pop
add
add
jb
je
popf
xchg
lcall
test
clc
xchg
or
test
dec
push
dec
inc
mov
pushf
into
mov
mov
xchg
decb
mov
fwait
lcall
mov
mov
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
jg
jg
lods
movsb
test
test
cmpsb
cld
mov
mov
xchg
xchg
xchg
cld
pushf
sahf
popf
cmc
cwtl
cltd
cltd
in
addl
imul
jle
lea
xchg
notl
mov
pushl
push
mov
test
lods
push
stos
stos
lods
add
add
add
test
test
xchg
xchg
xchg
call
cltd
cltd
call
fwait
cwtl
std
xchg
xchg
xchg
out
xchg
mov
loope
jbe
out
xchg
arpl
std
fwait
inc
ja
movsl
aaa
jne
scas
sub
pushl
sbb
aaa
jnp
mov
mov
imul
into
add
xchg
pop
scas
movsl
lods
test
sahf
sahf
popf
jmp
mov
xchg
decl
push
ja
popl
decb
sbb
call
or
mov
push
outsl
mov
and
jp
les
inc
fwait
scas
divb
stos
test
add
popf
mov
cld
cmpsl
test
ljmp
mov
lcall
sub
mov
pop
decl
add
decl
add
mov
adc
ret
dec
aas
mov
rolb
call
inc
call
push
xchg
dec
lcall
movsl
mov
add
push
push
cwtl
xchg
xchg
test
mov
scas
pushl
mov
movsl
call
pop
decl
pop
pop
call
add
lods
add
mov
push
xchg
fstpl
fistps
jmp
pop
mov
call
lcall
cmpsb
cmpsl
test
add
add
bound
adc
popf
pushf
pushf
cld
mov
scas
mov
mov
mov
fwait
dec
jge
fwait
xor
lcall
lcall
add
mov
push
jmp
outsb
lods
jmp
jp
push
jle
out
jge
ficompl
mov
and
add
add
adc
addr16
mov
mov
mov
mov
rol
mov
bound
lcall
add
pop
pushl
insl
fmull
in
lea
push
xchg
clc
xchg
leave
stc
xchg
enter
mov
movsl
cmpsb
sub
aas
aas
inc
adc
push
xchg
xchg
cld
rol
inc
sarb
ljmp
pop
imul
mov
arpl
les
push
aad
js
in
insb
scas
clc
test
clc
stos
iret
sti
lods
sar
cld
scas
sar
cld
lods
sar
jmp
lret
mov
movsb
ds
std
add
xor
add
mov
mov
rcl
mov
aad
fnop
rcl
out
lret
cli
mov
mov
jmp
add
les
imul
out
xchg
stc
nop
mov
inc
cld
rcr
inc
icebp
mov
ret
test
addl
lods
stos
stos
add
in
in
or
call
out
outsb
fldenv
mov
add
mov
add
fldl
jbe
out
aaa
xchg
cli
mov
std
int
call
out
std
shl
std
aad
call
in
test
call
int3
in
lods
lods
lods
popa
addl
add
std
add
std
incb
lret
lret
shrb
mov
add
mov
add
jecxz
jp
cmc
push
cmpsl
dec
loopne
xlat
jmp
cld
shl
sti
aad
stc
shl
push
enter
int
repnz
mov
xchg
xchg
xchg
pop
ret
ret
mov
mov
cld
lods
push
fs
mov
or
ficomps
cmp
out
mov
aam
jmp
mov
shl
in
aam
ljmp
scas
ret
fwait
lcall
add
add
sarl
cmpsb
pop
xchg
lods
inc
and
push
mov
ret
int3
int3
ja
mov
fdivrs
int3
adc
int
xlat
int
pop
aad
in
loope
call
out
out
sbb
sarl
cmp
movsb
lods
arpl
mov
ret
mov
les
ret
sbb
bswap
int3
into
or
push
std
incl
cmpb
std
incb
stos
std
incl
rol
add
std
incl
std
add
add
add
addb
movl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
std
adc
xchg
sub
arpl
dec
mov
rcl
repz
rclb
icebp
mov
fidivs
push
cld
xchg
scas
mov
sbb
and
iret
push
pop
push
xchg
jae
cmc
movsb
mov
pop
in
jl
testl
lds
mov
jp
mov
add
inc
push
pop
mov
gs
xchg
mov
xor
call
or
cmp
adc
outsl
push
mov
lea
in
mov
push
add
jno
lret
xchg
icebp
mov
test
xsha256
cmpsb
push
std
push
popf
cmp
mov
mov
fsubrl
push
hlt
pusha
mull
inc
jle
js
movsl
cmp
cltd
pushf
xor
ret
pop
or
mov
js
inc
fsubrs
jge
xchg
scas
xchg
testb
out
stos
sbb
cmp
push
cmp
leave
push
pop
lock
mov
mov
bndstx
and
add
pop
test
ds
and
outsl
and
push
nop
inc
fcmove
jae
out
mov
sbb
dec
lods
jg
fists
mov
es
fldcw
mov
test
jmp
adc
aas
pushf
xor
push
lods
js
mov
lret
into
gs
xchg
out
push
out
mov
outsb
add
cmp
pop
mov
nop
pop
mov
push
mov
lahf
fnstsw
mov
int3
std
push
push
lds
stc
nop
shlb
dec
jecxz
adc
iret
inc
subb
fs
in
xchg
aad
pop
pop
mov
or
sub
sub
les
pop
mov
pop
dec
loope
mov
es
push
inc
xor
push
push
jmp
inc
movsb
cmp
jb
xchg
ret
notl
ja
dec
scas
insl
pusha
mov
ja
andl
push
clc
lahf
xchg
sub
sbb
mov
and
sti
xchg
mov
les
in
xor
mov
or
sub
jae
pop
sub
mov
dec
ffreep
or
mov
jecxz
std
adc
aaa
mov
add
mov
xor
xchg
sub
jbe
mov
mov
adc
in
inc
add
arpl
fsubr
orl
sub
lahf
pop
sti
jmp
sub
dec
or
add
stc
push
repz
fsubl
arpl
jbe
sahf
xor
leave
sbb
ss
cmp
stc
nop
hlt
nop
adc
stc
nop
adc
ss
scas
addr16
xor
or
ficoml
or
sub
mov
inc
in
es
into
gs
lods
inc
add
in
orl
mov
stos
ljmp
mov
std
push
inc
fldl
mov
inc
ret
stc
hlt
dec
mov
sbb
mov
ss
push
out
inc
cli
xchg
jae
fdivl
xchg
sbb
xchg
out
int
mov
scas
out
push
jmp
or
into
cmp
push
in
mov
nop
daa
shrd
fbstp
scas
inc
bound
xchg
sub
or
mov
mov
test
ljmp
sub
lahf
pop
cli
in
subl
mov
jle
inc
lahf
sub
push
icebp
inc
frstor
jae
sbb
lahf
ss
xchg
sbbb
sbb
aaa
sbb
jae
cmp
xchg
repnz
jae
adc
mov
loope
xchg
adc
into
xchg
xor
scas
push
mov
cmp
pop
inc
fimull
xchg
xor
sarl
mov
sub
rol
jns
pop
add
pop
xchg
insl
add
ret
hlt
mov
pop
jecxz
mov
push
jmp
xchg
shrl
ret
repz
repz
nop
sarl
xchg
das
js
pop
popl
lcall
jne
popf
cs
in
pop
mov
jbe
lds
int
push
pop
icebp
pop
mov
xchg
fbstp
and
push
call
scas
rcr
je
iret
in
std
sub
xor
int
push
jns
xor
iret
dec
in
ret
jecxz
cmc
sbb
push
inc
insb
push
lods
cltd
gs
xchg
mov
sbbb
adc
lret
rcrl
ja
cwtl
popa
fbstp
mov
std
xchg
in
ds
outsb
inc
mov
jne
cmc
mov
test
mov
and
stos
pop
push
daa
mov
add
je
dec
pop
push
in
mov
adc
lret
and
lods
inc
mov
jne
or
jo
dec
pop
shrl
cwtl
rcrl
mov
dec
dec
xor
test
sbb
or
jge
and
fisubl
es
dec
sub
jge
jns
rep
scas
inc
xchg
cs
dec
iret
data16
xchg
sub
lods
sub
scas
inc
push
mov
pop
scas
popa
cmp
push
rcrl
push
out
hlt
cmp
popf
xor
mov
cltd
xor
cmp
add
lds
clc
inc
mov
je
pop
mov
fwait
xor
dec
movsl
cmp
sbb
dec
stos
dec
in
fsubrl
push
inc
fiadds
and
adc
add
add
add
and
xchg
sub
sbb
sub
sti
test
sub
cmpsb
scas
rep
cmp
jns
mov
sub
out
cld
mov
fsubrl
jg
push
scas
or
mov
mov
leave
pusha
add
notb
mov
fs
outsb
jno
lahf
push
es
popl
cwtl
mov
outsb
dec
out
sbb
jl
fucomp
jg
push
out
xchg
xchg
sti
xchg
leave
jecxz
data16
jbe
add
xor
hlt
mov
pop
stc
nop
mov
push
cmp
iret
sbb
xchg
or
jne
sbb
mov
add
scas
push
call
xchg
icebp
pop
and
xor
into
in
jne
and
je
out
pop
sahf
sbb
adc
inc
and
mov
enter
push
ljmp
jp
xor
or
pushf
xor
push
aam
addb
push
xor
cld
sub
xor
xchg
mov
ss
dec
or
inc
fwait
aaa
into
shlb
add
icebp
push
in
es
xchg
sub
push
inc
xchg
scas
mov
fdiv
xchg
out
bound
mov
cltd
in
repnz
mov
loop
add
lahf
outsl
cmp
mov
loop
pop
fistpll
fsubrs
mov
push
jecxz
insl
and
mov
xor
in
popa
clc
and
popf
jnp
jecxz
cs
xchg
fdiv
shrl
inc
insl
jb
xor
sub
repz
icebp
jns
and
or
imul
jnp
aad
and
pop
cs
adc
es
sub
testl
dec
das
jl
fdivl
cmpsb
inc
xchg
sahf
xor
test
daa
mov
cmp
enter
lea
iret
adcl
out
pop
call
adcl
rcrb
scas
lea
cltd
jnp
add
gs
out
mov
and
sbb
jns
aaa
into
mov
fistpll
rorb
fsubrs
xor
dec
js
mov
fidivl
shrl
rolb
or
push
fidivs
ja
stos
movsb
jbe
rol
dec
mul
cmpsb
mov
dec
xor
lahf
gs
or
ret
xchg
lods
hlt
fnstenv
dec
dec
sub
xchg
xchg
cs
fisubrl
lds
bswap
gs
pop
testl
fcmovbe
les
std
inc
sub
jno
dec
stos
inc
addl
lock
or
adc
sub
mov
jge
ds
sahf
fsubr
iret
lret
sub
std
lock
and
fsubr
push
inc
push
and
mov
les
push
push
adc
testl
les
inc
ficoml
add
cmc
mov
data16
lea
scas
inc
loopne
inc
fmuls
push
xor
aaa
das
pop
negb
gs
sub
push
in
pop
out
aam
and
push
pop
push
xchg
stos
rorb
mov
cmpsl
sbb
dec
push
jns
nop
lods
iret
mov
je
push
push
lret
sti
leave
stc
nop
sti
sbb
jle
xor
lock
les
sbb
repnz
inc
lock
sub
cli
jl
insl
testl
xor
jle
or
mov
sti
push
sbb
mov
or
test
or
xchg
inc
mov
gs
movsl
jbe
mov
jbe
shrb
mov
stc
js
mov
dec
bound
add
repz
or
ds
and
jmp
xor
and
add
pop
xor
xchg
jne
leave
repz
mov
negb
mov
sbb
xchg
mov
gs
lahf
test
push
and
xchg
ret
int
cmpsl
mov
std
repnz
cltd
aam
js
xor
dec
cmp
fsubr
cmc
jbe
and
shll
lds
cld
push
mov
or
test
imul
scas
add
pushf
insb
dec
pop
mov
in
cmp
loop
xor
mov
jae
movsl
in
fstl
jg
dec
lahf
adc
push
mov
into
adcl
xchg
or
inc
je
sti
jle
lock
xor
jle
call
lahf
insl
adc
xor
imul
arpl
insl
inc
adc
loop
mov
mov
push
xchg
loope
ficoms
lea
in
sbb
rcl
push
mov
jbe
push
addr16
iret
sub
fisttpl
mov
mov
cmpsb
sbb
sub
int
cmp
popa
dec
sti
sar
jns
pop
movsl
int
push
jmp
push
inc
stos
and
stos
xor
xchg
dec
icebp
movsl
loope
mov
jbe
push
jne
loopne
lcall
sbb
or
nop
ds
sbb
mov
pop
push
test
pop
lods
cmpsl
push
mov
mov
or
cmp
stos
call
cmp
icebp
inc
sbb
jae
fnstcw
add
jb
push
popf
and
push
cmpsb
std
outsl
push
jne
lods
xchg
add
lcall
pop
jecxz
mov
adc
movsb
pop
popf
xor
push
arpl
xor
mov
xchg
rcrl
add
fidivrs
incl
mov
xchg
lcall
aas
cmp
scas
push
adc
jge
jmp
xor
repnz
adcl
cmp
in
data16
idiv
jb
pop
enter
and
xchg
fisubrl
cs
fwait
and
xor
push
dec
cmc
push
scas
loopne
mov
cmpsb
gs
or
xor
jno
ss
in
xlat
cli
data16
dec
jns
addb
mov
sbb
pop
xor
inc
fldcw
mov
sti
leave
int
add
adc
xor
adc
mov
rol
mov
call
jo
mov
push
out
or
xchg
add
push
mov
or
enter
inc
jmp
movsb
cmp
push
scas
or
mov
jo
sbbb
and
in
lods
inc
and
insl
add
dec
fidivs
ret
in
cld
xchg
ret
or
sbb
lods
cmp
iret
dec
xchg
push
in
xchg
rolb
jno
je
mov
and
sub
xor
and
push
call
out
mov
sbb
or
test
mov
mov
push
out
sar
lret
bound
sbb
inc
sub
adc
data16
push
std
pop
sahf
jnp,pt
sbb
fisubl
lret
mov
xor
popa
clc
stos
pop
shrl
ret
jg
cmp
pop
mov
outsb
lcall
mov
dec
loope
push
call
call
testl
imul
pop
lea
and
jp
pop
hlt
les
add
fdivrp
xchg
and
mov
sahf
dec
sbb
jae
test
roll
xchg
pop
mov
pop
out
pop
xlat
aad
mov
jbe
cwtl
loopne
mov
lahf
les
mov
aad
sub
jb
dec
dec
loop
jge
nop
xchg
ja
add
xchg
fiadds
ss
mull
jmp
arpl
or
nop
daa
aas
add
xchg
jns
mov
xor
sar
addl
or
gs
mov
lods
lea
int3
mov
stc
cmc
in
outsb
pop
pop
inc
fcomps
add
js
pop
divb
and
enter
std
loope
xor
push
dec
in
adc
add
fsubrs
fisttpll
lea
aad
stos
cld
xlat
outsb
in
push
xor
cmpsb
or
cltd
mov
int
mov
dec
outsl
push
mov
ret
cmp
dec
loope
fldcw
call
add
jle
dec
add
popf
inc
bound
mov
mov
leave
sub
in
inc
dec
loop
cmpsl
jnp
clc
xchg
imul
in
mov
inc
push
mov
cmp
cmp
pop
mov
int3
loop
pop
push
and
inc
pop
xor
lahf
outsb
push
mov
mov
cmp
in
jle
push
push
pop
repnz
das
pushf
xor
jb
adc
xchg
sarl
pop
test
shrl
inc
and
jne
add
pop
cmpsl
pop
mov
inc
push
jmp
jmp
aam
fiadds
repnz
push
mov
adc
idivl
das
xchg
int
jae
mov
ljmp
jge
lahf
sbb
mov
adc
jp
xor
mov
repz
fisttpll
and
jnp
fimull
add
cltd
xor
fidivl
ds
jbe
jl
js
pop
popf
addb
je
shlb
xchg
adc
hlt
xor
lds
pop
or
repnz
sub
jle
jns
pop
cwtl
dec
loopne
jbe
cs
out
push
mov
call
adc
jnp
push
movsb
cmp
add
add
stos
push
sub
ja
jge
leave
fsubrl
mov
stc
enter
and
adcb
dec
cmp
js
sahf
xor
or
jbe
pop
ror
popa
mov
shr
jg
mov
mov
fcoml
cmpsl
sbb
adc
push
inc
xlat
add
cmc
mov
push
sub
jl
cltd
inc
mov
xor
pop
cmpsb
cmp
daa
mov
pop
loope
pop
add
jecxz
fwait
sub
mov
mov
pop
mov
lret
pop
ds
cmp
jb
pop
repz
fdivrs
leave
outsb
js
ret
das
adc
testb
add
ja
movb
mov
xchg
mov
fs
add
sbb
add
cs
aas
xchg
nop
daa
gs
pop
out
mov
jbe
adc
arpl
xchg
mov
mov
ret
scas
sub
or
add
out
test
popa
clc
sub
mov
push
shrl
sbb
dec
fildll
lods
inc
xor
pop
lret
pop
test
outsb
mov
scas
jle
mov
and
aam
mov
stc
mov
repnz
fsubrs
out
and
cmpsl
aaa
pop
mov
mov
lods
inc
mov
fxch
bound
push
data16
nop
or
mov
mov
fsubs
fldcw
ret
dec
ss
push
insb
insb
add
jl
xchg
sbbl
mov
cmp
cmp
pop
daa
xchg
pop
repnz
inc
out
jns
das
outsl
repz
dec
mov
popf
sbb
mov
mov
aas
test
enter
dec
in
ss
inc
or
add
mov
int3
and
pop
xlat
inc
xlat
add
outsb
push
sub
popa
jg
mov
jl
sti
cmp
mov
adc
xor
cmp
push
lret
ret
ftst
xlat
outsb
add
imul
sub
mov
mov
dec
jnp
stos
bound
lds
dec
out
dec
out
adc
imul
lds
call
jno
sbb
add
icebp
sub
enter
stc
loope
loope
adc
incl
lds
xchg
mov
aam
cwtl
sti
fdivl
mov
xchg
in
sbb
aaa
add
jnp
adc
in
lods
xor
inc
push
cltd
xor
push
in
push
mov
dec
ds
add
data16
cwtl
adc
xorb
rcrb
es
dec
ds
fildl
push
out
xlat
push
stc
xchg
icebp
test
mov
mov
xor
inc
aas
mov
jbe
fcmovu
jno
in
test
daa
clc
jo
or
int3
lcall
sti
xor
repz
push
in
insl
sbb
cmp
jno
scas
cmp
es
scas
inc
xchg
int3
arpl
sahf
in
cmp
ljmp
sbb
dec
outsl
ss
popa
push
out
xchg
pmulhuw
push
stos
ret
jge
inc
push
loopne
xchg
test
arpl
fsubr
xor
pop
or
mov
daa
mov
cmp
inc
fcoml
popa
push
cli
inc
push
xchg
scas
cmp
mov
ret
pop
sbb
cmp
push
pop
lret
cmp
test
cmpsb
or
js
shl
lock
sub
dec
fildll
les
xchg
mov
test
jo
test
cltd
mov
cmp
fdivs
pop
sub
into
gs
fbstp
sahf
clc
pop
push
std
xchg
lcall
mov
lock
icebp
cmp
or
fs
andb
out
pop
stos
sbbb
jb
or
jnp
aaa
mov
fisubrl
dec
clc
fmul
arpl
adc
mov
movsb
adc
arpl
mov
ljmp
sbb
mov
test
mov
jae
inc
fsubl
iret
arpl
add
lret
bound
xchg
aam
lahf
ss
sbb
pop
jbe
mov
dec
arpl
or
es
fidivrl
sbbl
je
and
mov
mov
add
or
jo
sub
in
inc
nop
mov
fisubrl
adc
add
mov
fistl
test
fisubrs
pop
repz
sti
xchg
cs
addr16
xor
dec
adc
adc
mov
xchg
push
mov
test
cmp
cmp
jmp
push
in
fsubrl
xor
sbb
xchg
sub
ds
imulb
test
mov
mov
xor
add
jle
xor
testl
shrb
pop
pop
pop
and
mov
ds
or
mov
sti
cmp
lret
add
mov
dec
scas
sub
mov
push
iret
dec
jmp
jcxz
add
ds
cmp
pop
arpl
gs
lea
rcll
int3
xchg
mov
fistpl
mov
xchg
sbb
dec
les
dec
inc
test
cmp
sarb
sub
jnp
scas
movsb
or
xchg
popa
or
dec
aas
pop
and
or
aad
mov
pop
mov
inc
gs
addl
dec
mov
pusha
or
mov
sub
jbe
dec
imul
loopne
mov
jle
mov
inc
xor
aad
push
sub
adc
shlb
sbb
icebp
fisubs
aad
sti
testl
aaa
insb
mov
paddq
xchg
fcmovne
jmp
push
bound
xchg
mov
or
fs
pushf
je
arpl
push
mov
aad
sbb
test
mov
jl
dec
out
dec
push
mov
dec
inc
idivb
test
xorl
dec
stos
push
cs
inc
push
inc
xchg
sti
mov
sahf
aad
cmp
hlt
cmpsb
dec
xor
push
sub
loop
in
dec
test
and
fdivrl
out
outsl
push
mov
adc
lret
cmp
xchg
movsl
js
dec
jl
add
push
mov
mov
push
cmc
sahf
mov
stos
stc
fwait
xor
ficoml
mov
sub
test
sbb
addr16
jmp
bound
sub
stos
mov
repz
jl
out
or
nop
mov
push
xor
xor
ret
pusha
jecxz
out
not
int3
movb
rclb
xchg
pusha
mov
and
cmp
adc
add
cmp
lock
pushf
add
test
divb
push
sarb
shrl
inc
mov
ljmp
mov
repz
aaa
out
jg
mov
ret
pop
xchg
add
jnp
mov
stos
or
push
xor
mov
ja
mov
mov
shl
loop
lcall
xor
xchg
in
lods
mov
and
je
adc
test
insl
enter
pop
jle
negb
aam
dec
mov
and
xchg
mov
jp
mov
clc
xor
sbb
stos
mov
stc
ljmp
aad
ss
and
jns
jns
test
imull
clc
sub
xor
aaa
cli
pop
bound
popf
sbb
adc
bound
ljmp
outsb
test
sub
mov
pop
stc
jmp
cmp
idiv
adc
js
test
aaa
call
jmp
fld
out
mov
add
mov
cmc
sbb
aad
mov
xor
pop
jecxz
adc
mov
sarb
mov
mov
mov
pop
ss
in
jge
movsb
fdivrl
mov
adc
xor
into
cmpsl
aad
movsl
jns
cmp
shlb
push
mov
cwtl
push
stos
mov
push
inc
xchg
out
ljmp
sti
stc
cmp
loop
aam
cs
mov
in
out
mov
pop
xor
mov
jmp
sub
cmp
inc
add
ljmp
mull
xchg
jno
sbb
addr16
imul
cs
xchg
iret
imul
mov
or
out
fidivl
imul
ljmp
outsb
xchg
push
fs
les
fisubrl
stos
std
jl
push
dec
imul
xchg
pop
mov
dec
iret
or
fs
movsl
lret
sub
int3
scas
or
cmp
lea
data16
jbe
cmp
jnp
cmp
cwtl
fsts
mov
sub
sti
push
mov
out
pop
out
arpl
shll
dec
sub
mov
cmpsb
mov
leave
xor
sarb
aas
bound
aas
imul
cmpsb
data16
and
lds
push
mov
mov
push
mov
imul
cmpsb
or
ss
cmp
pop
jno
loopne
jns
dec
dec
push
push
and
mov
cmp
sub
adc
mov
shlb
sbb
xchg
std
inc
xor
dec
or
jecxz
and
jge
stos
test
mov
jmp
and
ret
or
sbb
mov
sub
xchg
or
ftst
xor
mov
lahf
cmp
xchg
les
push
ljmp
fmull
scas
dec
icebp
xchg
adc
mov
into
add
push
loop
jns
in
add
in
dec
aad
xor
loope
in
sarb
or
in
xchg
and
add
mov
jnp
push
lret
push
mov
xchg
push
sub
xor
push
or
divb
xchg
decl
jg
sub
gs
xor
lret
and
adc
je
push
aad
insb
lods
jo
mov
mov
test
mov
xchg
inc
mov
jl
cmp
and
cmp
mov
sub
cwtl
mov
sub
enter
mov
sub
pop
cld
bound
pop
sbb
fwait
adc
shll
inc
sbb
push
jnp
lds
out
je
ret
sbb
lcall
int3
andb
cmp
test
push
add
add
cmc
cs
dec
inc
fwait
sbb
mov
mov
sbb
xor
mov
sub
test
push
fs
and
pop
jno
insb
test
test
adc
aad
into
jns
adc
inc
jmp
test
and
inc
cmpsb
push
mov
pop
push
arpl
mov
mov
hlt
stos
pop
push
inc
add
shl
adc
jbe
mov
or
mov
add
mov
shrb
mov
xchg
jne
dec
jg
push
and
rorl
sub
data16
fsubs
mov
jne
outsb
mov
movaps
add
jbe
pop
or
mov
aaa
pop
cmpsb
sub
lods
jns
inc
xor
rol
mov
ret
sbb
mov
dec
pop
std
pop
jle
loope
push
imul
test
and
mov
pop
mov
cmp
dec
mov
jle
dec
and
dec
or
repz
andl
dec
sahf
aas
out
fstpt
inc
inc
movsl
jle
sub
jecxz
ret
fmuls
mov
jg
xor
inc
push
push
mov
push
ds
pop
cmp
inc
dec
mov
fbstp
sub
jnp
iret
add
sub
je
mov
andb
inc
push
lock
dec
fisubrs
pop
adc
repnz
daa
ret
dec
rsm
and
cmp
fidivl
lret
inc
call
out
mov
mov
shlb
pop
fwait
and
rcrl
sbb
es
push
mov
sub
bound
out
aaa
cmpsb
shr
jae
xchg
and
pop
sbb
mulb
add
out
jno
out
test
insl
call
adc
and
icebp
inc
pop
dec
push
rorb
in
cmp
push
jmp
sarb
sbb
mov
fisubl
fnsave
push
xor
mov
add
jg
adc
test
and
cmp
jne
les
fisubs
aam
xor
adc
jp
adc
call
fidivrs
insb
xchg
test
sbb
movsb
mov
sub
push
pop
rolb
mov
and
xorb
mov
mov
movsb
jae
into
stos
push
pop
push
sbb
sbb
jnp
pushl
mov
in
pop
into
fsubrs
pop
int
stos
push
rorl
pop
popa
cltd
stos
lahf
adc
out
xchg
dec
loop
and
jmp
mov
fcoms
enter
jp
dec
mov
fisttps
daa
add
out
cmp
hlt
push
mov
inc
dec
lahf
jbe
fbstp
push
pop
lock
or
pusha
xchg
insl
mov
push
or
test
sti
inc
sbb
out
test
jmp
pop
jae
rol
out
push
xor
cmp
sub
outsl
lret
inc
lock
xor
lret
mov
push
sahf
pop
lods
pop
jns
push
push
jb
dec
pop
insl
es
dec
inc
or
testl
les
cmp
loope
dec
cmp
mov
loop
mov
dec
stc
test
outsb
fwait
std
scas
sub
popf
rcl
jp,pn
lods
pop
push
xchg
jbe
mov
aaa
sub
sub
insb
jg
sahf
mov
in
cmpsl
jecxz,pt
jmp
push
aaa
das
fiadds
or
jne
add
adc
pop
sbb
sbb
push
jnp
push
ja
sub
test
mov
int3
test
cltd
in
nop
fdivp
or
mov
mov
add
pop
or
mov
lret
pusha
frstor
inc
lods
cmp
pop
imul
lcall
je
pop
dec
and
mov
adc
lods
xchg
sub
clc
cmp
sub
test
repz
sbb
lods
aam
add
or
sti
lods
aad
pop
fucom
sub
rcr
mov
mov
cmp
sbb
into
out
aad
rcrl
movsl
clc
cld
nop
mov
clc
outsb
and
mov
xchg
rcrb
mov
je
cs
cmpsb
mov
cld
stos
dec
in
add
mov
sbb
dec
es
aad
xchg
jmp
imul
lods
fstl
xchg
xchg
rcrb
lods
fwait
sub
stos
popf
jb
out
xor
inc
xchg
sbb
inc
adcb
rcrb
push
xchg
jns
pop
mov
push
sbb
mov
mov
cmp
mov
rorl
ja
cmp
mov
pop
adcb
mov
xchg
nop
cmp
pop
cmp
jns
ret
aam
push
mov
mov
xchg
add
add
sbb
clc
jae
or
jecxz
negb
inc
and
and
rcll
mov
ss
mov
lock
xchg
shlb
or
int
jb
dec
ss
mov
cmp
lods
aam
add
xor
pop
jns
inc
push
push
xchg
mov
ss
lods
in
lret
test
shr
xor
rol
mov
mov
lahf
mov
jl
xor
cmp
mov
mov
lcall
fstl
mov
arpl
pop
fwait
dec
xor
in
hlt
in
inc
gs
rcrl
lds
xchg
push
jl
xchg
fucompp
lcall
add
or
and
dec
and
fistl
loope
js
sbbl
cltd
rcrb
pop
xor
fadds
inc
pop
cmp
dec
imul
or
cwtl
push
mov
mov
sbb
subl
pop
fbstp
sbb
call
mov
xor
mov
mov
mov
sub
xlat
mov
loopne
push
flds
inc
xchg
dec
test
xchg
or
adc
push
icebp
inc
das
jnp
int3
pop
ljmp
popl
aad
lods
popf
push
fdivrp
inc
decb
inc
or
jae
sub
fs
xor
outsb
js
xor
push
lcall
or
scas
lock
mov
scas
push
push
das
pusha
push
andb
xchg
cmpl
ja
sub
das
sbb
sbbb
and
in
xchg
insb
cmpsb
mov
pop
add
xor
test
lahf
stos
inc
rcll
sub
push
xchg
int
mov
jne
cmp
ds
ljmp
push
lahf
push
out
icebp
inc
jbe
mov
pusha
ljmp
pop
movsb
adc
jbe
mov
movsb
pop
mov
push
fsubrl
ss
mov
dec
leave
movsl
int3
leave
shll
mov
jns
ret
daa
loop
cmp
imul
fcmovnu
clc
int3
jp
outsb
push
sub
stos
xor
lods
mov
xor
add
jg
cmpsb
push
mov
push
std
mov
mov
xchg
dec
faddl
in
pusha
aad
call
pop
shlb
shr
les
jmp
and
jnp
cmp
popf
lods
push
jle
add
stos
pop
jmp
cwtl
mov
sbb
adc
cmp
xchg
pop
popa
and
sbb
push
addr16
enter
ret
lcall
fstpt
inc
add
lds
mov
lock
cmpsb
adc
xchg
cmp
pop
aad
inc
in
xchg
jnp
call
inc
loope
cmp
aad
lahf
ret
insb
jnp
sahf
mov
ret
xor
push
jne
cmp
dec
or
or
adc
imul
jbe
pop
rcll
sub
outsl
dec
mov
mov
mov
outsl
and
mov
push
lahf
int
push
add
cmc
inc
jbe
stc
xchg
sub
cmpsl
mov
dec
int3
jg
jno
adc
jnp
lcall
mov
and
jl
sbb
jae
test
inc
sbb
mov
idivb
jo
fiaddl
add
push
xlat
orb
lods
in
in
mov
xchg
pop
adc
mov
sahf
fistl
test
xor
sbb
and
and
int
cmp
cmp
scas
sbbl
add
addr16
mov
mov
xor
mov
in
inc
not
lahf
and
outsl
push
xchg
inc
es
cmpsl
mov
imul
xor
int3
das
jns
sbb
lods
mov
arpl
or
sub
js
push
mov
or
out
pop
cli
inc
add
or
push
cwtl
mov
scas
push
pop
popl
push
jmp
mov
jl
rcll
vandpd
lds
mov
mov
adc
mov
and
sti
sbb
movsl
loopne
cmpsl
sbb
sub
jl
sahf
dec
adc
dec
icebp
roll
adc
sti
cmp
pushf
mov
push
test
and
inc
sub
vxorpd
jmp
imul
pop
insl
cwtl
repnz
mov
adc
ds
arpl
dec
nop
fldl
popa
popf
loope
xor
imul
cmp
aaa
fnstenv
call
addr16
jmp
or
cmp
jge
and
push
sub
pop
push
nop
inc
stos
pop
xor
dec
xchg
mov
adc
sub
mov
and
cmpsb
sahf
inc
movsb
xchg
jnp
mov
ret
mov
push
pop
cmp
test
xchg
xchg
or
mov
adc
lcall
or
out
jp
pop
and
sub
mov
mov
fdivl
sti
xlat
sub
data16
and
xor
movsb
sbb
out
iret
cwtl
adc
pop
mov
mov
mov
sub
xor
mov
test
adc
testl
add
addr16
xchg
sub
pop
mov
nop
shll
and
pop
sahf
pop
fadds
les
inc
je
fs
rclb
neg
call
int3
fwait
insl
or
xchg
push
imul
outsb
test
daa
pop
imull
jbe
inc
loopne
loop
mov
mov
xlat
paddq
xchg
test
xor
in
lahf
sub
jb
push
xchg
xchg
cmp
lcall
mov
fstpt
mov
cmp
inc
dec
pop
popa
xorl
aas
mov
das
jl
dec
push
push
mov
out
jp
jnp
push
inc
and
movsb
bound
sbb
sub
jae
nop
shrb
js
lret
sbb
in
ret
sbb
jne
lods
pop
xchg
loope
wbinvd
dec
mov
outsl
mov
frstor
mov
fstpt
inc
dec
movzwl
in
dec
adc
mov
or
mov
shlb
sub
mov
lods
mov
inc
movsl
into
dec
inc
jle
pop
sbb
push
sbb
jp
insl
mov
cmc
cwtl
test
mov
lret
out
fstpt
jmp
add
std
pop
outsl
and
jnp
mov
adc
xor
ret
add
push
add
mov
pop
mov
aam
stc
insb
adcl
fs
mov
cmp
cmp
sahf
jb
push
hlt
mov
xor
in
test
inc
cmp
shr
fstpl
dec
sbb
fistpl
sub
add
repnz
test
xchg
mov
orb
pop
fbld
add
mov
or
jnp
rep
lret
out
and
mov
pusha
call
repz
jbe
dec
mov
cmp
fnstsw
xor
add
and
pop
jo
cld
dec
cmp
push
push
push
mov
adc
sbb
loop
out
add
divl
es
xchg
rcrb
add
jge
and
adcl
fstpt
push
mov
or
push
or
enter
push
scas
cmp
cmp
movsl
inc
dec
sub
lcall
push
loop
add
ror
fldcw
in
testb
jecxz
dec
cmp
fisttps
repz
dec
xor
mov
movsb
adc
push
jno
cvttps2pi
xorl
sub
arpl
mov
jge
xor
aad
sub
mov
xchg
push
movsl
lcall
stc
je
orb
fs
xor
movsb
cmc
jnp
push
jae
movsl
mov
jo
or
mov
sub
mov
clc
movsl
jmp
mov
ret
xchg
pop
ss
icebp
pop
pushf
dec
movsl
test
adc
or
adcb
stc
push
and
mov
or
std
insl
les
or
dec
jne
ret
and
mov
push
shr
iret
hlt
xchg
add
hlt
test
je
sbbb
xchg
insb
mov
dec
imul
ret
aam
pushf
xchg
scas
adc
sahf
aaa
cmp
push
shll
or
lock
int3
adc
pop
lcall
sbb
push
mov
xlat
and
sub
stos
jecxz
scas
sbb
addr16
je
clc
mov
pop
lret
addl
jns
jno
jae
shll
jne
mov
cld
sahf
jecxz
subl
ja
add
fistps
fsubrs
mov
xchg
sbb
or
dec
stos
lock
sub
nop
sub
xor
sbb
xor
call
xchg
adc
in
dec
dec
jp
xchg
mov
mov
cltd
imul
adc
stos
dec
or
mov
sub
test
jle
es
mov
xor
fidivrl
cmp
push
imul
cltd
mov
scas
outsl
mov
cltd
sbb
stc
cmp
sub
add
mov
add
in
dec
insb
dec
and
outsb
insb
fldenv
pop
das
adc
dec
jo
pop
and
lret
mov
pop
fs
push
sbb
dec
cmp
jae
ljmp
jle
inc
push
push
aas
test
insb
rol
mov
aas
rep
inc
pop
adc
rolb
add
mov
scas
popf
push
or
int
or
gs
pop
cltd
mov
cmp
sub
xor
push
inc
pop
nop
clc
jnp
in
jne
jb
mov
mov
in
test
jmp
sar
and
fwait
jne
fwait
fwait
mov
js
jns
stos
fsubrs
ljmp
test
lods
notl
and
xor
push
pop
aaa
xchg
xchg
hlt
rolb
insl
add
call
daa
jecxz
inc
dec
and
jge
xor
fs
cmc
test
jmp
mov
sub
cmp
sub
sub
or
cmc
mov
pushf
negl
cmc
out
call
mov
cmp
test
out
daa
add
xor
lods
ret
mov
stos
add
iret
push
sbb
imul
pop
popa
lret
jns
cmpl
pop
adc
sub
loope
or
test
pusha
ljmp
push
cmpb
outsl
xchg
dec
and
xchg
pop
add
mov
leave
setbe
fsubs
cld
jecxz
out
outsl
inc
inc
test
xchg
scas
or
mov
repz
adc
jae
fldln2
mov
dec
addr16
jmp
push
mov
mov
fdivrl
push
loop
filds
mov
fs
pop
test
xor
lea
frstor
mov
inc
popa
cli
cld
icebp
or
lahf
push
div
sub
sarl
sub
repnz
pop
jnp
sbb
es
lret
push
add
mov
cs
xlat
lahf
xchg
xor
sub
cmp
mov
imul
icebp
test
and
jecxz
imulb
mov
xorl
arpl
xor
flds
enter
subb
daa
cmpsb
mov
es
ja
mov
test
inc
push
inc
cmp
xor
shll
cli
lock
dec
push
lock
adc
shrd
insl
aas
test
dec
pop
inc
push
cmpb
dec
add
mov
xchg
xorb
push
imul
stos
loop
push
and
rcrl
xlat
in
dec
jbe
ljmp
punpckhbw
xchg
adc
mov
loope
icebp
ds
lcall
and
pop
mov
cmp
and
push
adc
fbld
fwait
imul
ficoml
xor
fwait
jo
adcl
adc
xchg
insb
lods
adc
in
push
pop
jle
cmp
sti
cmc
in
push
arpl
cmp
ja
hlt
push
lock
adc
adc
xchg
xchg
cmp
subl
out
mov
and
dec
cmp
mov
fcoml
mov
pop
arpl
jle
mov
lods
ror
cmp
adc
and
or
jle
repz
fdivrl
adcb
jmp
in
int3
cs
into
adc
push
push
xor
cmpsb
stos
cmpsl
push
mov
and
dec
cli
fs
mov
jbe
cmpsb
jno
add
sarl
mov
push
div
subb
scas
mov
inc
cwtl
lea
inc
dec
je
xor
mov
mov
into
dec
icebp
lret
lock
mov
add
or
orb
pop
fisubrl
mov
push
fucomi
call
or
sbb
mov
ja
push
lods
or
popf
mov
jno
call
mov
cmp
shll
mov
inc
mov
fptan
fisubl
mov
dec
inc
js
sbb
cs
cmpsl
jnp
imul
sahf
repz
fnstenv
out
shll
test
and
inc
lcall
xchg
push
loope
shlb
sub
sarl
mov
mov
jle
nop
aam
cwtl
clc
leave
ss
mov
jle
cmp
inc
shl
inc
push
jmp
cltd
jmp
vpsllq
push
mov
test
bound
push
aam
sti
adc
icebp
pusha
insb
add
and
lods
mov
inc
cmp
push
push
lods
adc
scas
sub
iretw
pop
inc
lahf
xor
add
pop
pusha
clc
clc
fs
jge
lds
inc
and
mov
jp
or
add
pop
faddl
fadds
push
mov
sub
lea
stos
icebp
cltd
sbb
mov
or
cltd
loopne
mov
rcr
test
shlb
mov
insl
inc
dec
jle
inc
cmpsl
push
push
sub
and
mov
inc
es
rcr
sub
jne
sub
jmp
dec
xchg
fsubr
mov
hlt
lcall
cld
mov
punpckhdq
imul
lods
sub
adc
leave
fdivl
pop
ds
scas
roll
pop
push
bound
inc
insb
into
lret
jecxz
shrb
and
jbe
and
cwtl
jb
call
inc
into
scas
add
lcall
test
push
mov
xor
push
fistps
hlt
daa
movd
in
test
jp
mov
addr16
imul
xlat
out
movsl
arpl
xchg
or
sbb
icebp
dec
and
xchg
in
adc
sbb
xlat
dec
push
jecxz
fsubrl
mov
lret
cmpsb
out
cmpb
in
jno
sbb
lcall
ss
scas
nop
in
call
jecxz
loop
xor
mov
lcall
mov
or
movsl
inc
mov
inc
js
cmp
and
jno
add
call
fildl
div
jle
addb
xchg
xorl
and
syscall
add
imul
ss
dec
iret
sbb
divl
mov
xchg
insl
stos
hlt
sbb
pop
dec
andl
mov
popa
ljmp
jo
and
fdivrs
add
jb
sub
cmp
sti
popa
cltd
xchg
and
mov
cmpsb
lahf
int
add
jle
jmp
out
xchg
xchg
scas
mov
inc
adcb
lock
jl
mov
cmp
js
cwtl
fs
inc
jb
cli
xchg
push
outsl
aam
in
jp
shll
sbb
test
xor
decl
filds
cmp
cmp
test
mov
out
or
outsb
stc
out
sbb
inc
jg
add
push
out
sarl
loopne
clc
bound
inc
sub
out
sbb
iret
pop
push
adc
sub
mov
lods
cmp
cli
mov
std
movsb
insb
xchg
xchg
or
add
psubw
dec
mov
inc
add
or
test
lahf
bound
js
mov
xchg
push
jp
inc
js
push
push
and
jne
out
jmp
pop
mov
pusha
jb
and
cmp
mov
cmpl
jmp
xchg
mov
mov
pop
or
dec
lahf
push
cmp
xchg
jecxz
mov
adc
aad
or
xchg
out
push
fdivrl
mov
pop
sub
xor
pop
pushf
dec
push
or
insl
fcomps
cmp
leave
out
sbb
adc
pop
out
sub
xor
mov
push
out
mov
pop
dec
ds
add
stos
loopne
adc
pop
inc
xor
and
inc
pusha
lea
add
hlt
aam
mov
cmpsb
lea
add
data16
jno
stos
push
mov
imul
sub
pop
das
enter
stos
in
mov
adc
es
popf
pushf
dec
jl
aaa
mov
sar
aaa
sub
lods
mov
adc
lahf
dec
clc
cs
mov
push
dec
ret
js
enter
cmc
push
sbb
inc
and
push
cmpsb
pop
clc
xchg
dec
fsubr
jecxz
jmp
icebp
pop
push
out
push
jb
or
call
insl
push
xchg
pop
or
je
insb
daa
cmp
mov
and
adc
in
pop
mov
inc
lock
xor
inc
lds
sti
aas
movsl
jle
aad
lods
inc
imulb
popa
loope
lret
bound
jmp
or
pop
sahf
xchg
pop
sahf
and
es
sub
clc
jge
pop
notb
lahf
sbbl
push
mov
das
mov
fbstp
js
xor
insb
fs
add
mov
mov
ret
ret
pop
lock
dec
loopne
es
pusha
mov
jns
mov
frstor
dec
xchg
xor
pop
bound
jbe
pop
lock
xchg
or
mov
pop
lods
daa
mov
lods
incl
xor
push
out
call
sti
andb
or
test
aad
xchg
sub
mov
stc
dec
mov
bound
ja
insl
repnz
rorl
repnz
pop
scas
jb
xor
inc
xchg
sub
les
jecxz
in
jmp
mov
jb
imul
nop
daa
mov
addr16
int3
arpl
out
xchg
sub
mov
or
lahf
pop
stos
sub
fsubrl
es
jnp,pn
fldt
pusha
idiv
mov
js
push
hlt
mov
and
into
hlt
mov
cltd
cmpsb
cmp
inc
in
scas
sbb
ds
mov
test
mov
ss
aam
in
push
js
lea
loopne
pop
scas
cli
xchg
fdivrs
test
and
mov
incb
adc
adc
enter
xchg
jmp
dec
loop
xor
popa
outsb
psubb
mov
addl
jp
pop
add
cmp
xchg
add
es
fstps
es
mov
ficoml
add
cmp
pop
add
cmp
or
leave
cli
xchg
repz
pop
scas
loopne
pop
mov
add
push
cwtl
pop
or
jecxz
rclb
test
add
sarb
pop
mov
mov
test
cmp
fcomip
mov
test
push
enter
cli
xchg
xchg
cmpsb
cmp
xor
jnp
cmp
pop
inc
fiaddl
test
push
shl
enter
push
ljmp
mov
aas
fcomps
enter
jnp
pop
inc
in
jg
sbb
ficompl
add
and
pop
addb
jp
lea
fwait
loop
xchg
es
and
shlb
xchg
jnp
cmp
lret
pushf
jmp
in
dec
in
call
xor
jo
addr16
insb
xchg
imul
mov
lock
fldenv
mov
popa
and
add
rcrl
xchg
sub
push
adc
repz
jae
pop
lods
outsb
std
xchg
cwtl
into
movsb
cmp
mov
cmpsb
cmp
cmp
pop
xchg
sub
test
pop
repz
es
dec
sbb
fcomps
sub
and
jbe
push
inc
adc
jge
inc
fisubrs
or
xchg
mov
push
out
aad
lcall
mov
mov
fxam
jl
xor
jmp
pop
pop
and
test
pop
movsb
leave
inc
xlat
icebp
push
jmp
adc
dec
and
pop
insb
testl
loop
xchg
cs
xchg
and
adc
cmpsl
push
cmp
add
pop
mov
mov
jb
sti
lods
cmpsl
test
loopne
aaa
into
clc
add
cmp
lea
gs
sub
faddp
or
sub
sbb
dec
fbstp
mov
sahf
xchg
dec
loop
sarb
adc
ss
ljmp
mov
sub
jmp
xchg
adc
lahf
ss
xor
adc
xchg
pop
pop
mov
fldcw
mov
aaa
and
pop
push
mov
outsl
cmpsb
mov
hlt
in
scas
inc
add
cmp
aaa
and
lahf
pop
push
pushf
xor
mov
xor
decb
jo
dec
push
pop
icebp
lea
xchg
lods
popf
xor
mov
pop
in
clc
stos
inc
and
sbb
jnp
jg
sbbl
jecxz
xor
add
cmp
mov
imul
mov
inc
xlat
dec
loope
add
xor
pop
mov
test
scas
movsl
dec
iret
pop
hlt
idiv
pop
scas
sub
inc
fiaddl
call
xor
mov
dec
fists
ss
into
jo
stc
mov
popf
xor
jmp
ds
mov
xor
sub
mov
xor
fsubr
test
adc
aaa
xchg
jo
xchg
sub
mov
inc
ficoms
push
jmp
jno
popf
xor
xchg
pop
xchg
sti
xchg
fwait
and
jns
adc
test
xchg
and
mov
inc
fstl
aam
and
shrl
xchg
xchg
sub
je
dec
movsl
call
mov
dec
ja
cwtl
das
inc
cwtl
hlt
mov
shrb
repnz
in
adc
inc
xchg
sub
lret
popa
push
jmp
in
or
out
inc
fisubrl
insl
add
nop
inc
xlat
leave
bound
cltd
ljmp
lock
test
jbe
mov
inc
xchg
cmpsb
cmp
xchg
in
dec
adc
aam
push
mov
jg
push
sbb
or
and
and
stos
inc
jge
jns
fs
lcall
xchg
sub
cs
dec
enter
mov
cld
mov
enter
clc
xor
fwait
push
pop
mov
mov
ds
rcll
adc
xor
mov
cmpl
push
idivb
pushl
daa
push
andl
dec
movsl
inc
ja
mov
fistpl
loop
sub
add
mov
aaa
xor
insb
xchg
inc
in
andl
sbb
sbb
cmp
sub
mov
test
pushf
sub
and
push
je
dec
stos
jge
fwait
movsb
int
cli
lret
sbb
notb
das
mov
pushf
addr16
movsl
out
mov
fsubr
add
aam
add
outsl
popa
push
xchg
push
insb
stc
nop
mov
jle
jecxz
sahf
daa
xor
pop
scas
aaa
xchg
test
icebp
xchg
aad
iret
push
sub
and
and
fbld
dec
push
cmc
je
out
ja
pushf
andl
adc
cmp
test
pop
cmpsl
mov
fisubrl
aam
cli
or
pop
adc
sub
outsb
inc
imul
mov
leave
outsl
push
add
mov
cs
jecxz
xorl
mov
in
jmp
in
aas
pop
outsl
or
inc
push
mov
lret
mov
mov
sbb
jb
and
mov
push
je
test
mov
rcr
or
mov
add
aas
mov
jp
outsb
lods
inc
movsb
mov
loop
testl
adc
xchg
test
sub
add
loop
fisubrs
inc
movsl
push
lea
jns
shll
xchg
int3
sbb
movsl
dec
push
push
das
leave
jge
fstps
sbbl
mov
ret
add
jno
xor
sbb
arpl
lret
scas
add
pushl
cmp
fisubrs
mov
mov
jge
sub
jne
mov
decl
cmp
push
mov
dec
adc
push
mov
dec
cmc
test
adc
cli
inc
adc
push
mov
xchg
aam
lods
push
mov
fxch
jne
push
daa
leave
jb
call
or
lcall
shr
sub
mov
dec
icebp
push
mov
or
and
pop
gs
mov
and
adc
les
sub
push
fs
data16
pop
popf
scas
rolb
mov
xlat
or
dec
pop
cmp
xchg
ja
enter
sub
cmpsb
pop
sbb
jmp
test
testl
aaa
aam
pop
jecxz
push
sub
mov
push
aad
jnp
xor
std
addl
rcrb
xchg
sub
cmp
fisubrs
mov
cld
mov
mov
loopne
sbb
jno
andb
push
movsl
cmc
xchg
into
inc
fxch
pusha
or
ficomps
mov
sbb
adc
rcrl
mov
popa
ret
and
mov
out
addr16
cmpsb
pop
mov
cmp
and
pop
mov
les
lods
sbbl
insb
and
xor
mov
testb
push
fsubs
adc
popf
xor
dec
cli
xchg
jle
les
lahf
and
rcrb
mov
sub
and
js
jne
scas
inc
xor
push
dec
in
jmp
imul
cmp
insl
stc
mov
sub
cmpsl
ds
inc
pop
lods
lds
int3
arpl
jecxz
and
add
dec
xor
mov
dec
daa
mov
mov
inc
fld
rcrb
or
push
out
sbb
adcb
cmp
mov
les
mov
mov
adc
jecxz
jae
mov
sbb
adc
cld
lea
stos
inc
aas
out
pop
repz
jo
push
push
jb
call
cs
fld
pop
cld
lea
mov
sbb
sub
adc
ss
repz
lcall
cmpsl
mov
xchg
hlt
mov
and
inc
mov
xchg
xorb
add
lea
fstps
scas
inc
dec
cld
test
push
mov
rcr
test
or
xchg
iret
mov
adc
fbstp
cli
inc
ficomps
ja
adcb
sbb
sbb
hlt
sub
adc
xchg
sub
pop
mulb
mov
xchg
xorl
loopne
popf
xor
add
lea
xor
dec
add
adc
ss
or
das
lods
fmul
inc
out
jmp
pop
ret
das
add
arpl
loope
jnp
shll
fwait
xor
pushf
jmp
push
cmpb
out
jo
fdiv
push
adc
ret
hlt
cld
adc
cmc
mov
push
iret
cmp
cmp
xchg
lcall
clc
in
cmpsb
xor
mov
lahf
lret
out
js
jb
mov
in
mov
fiadds
sub
jp
inc
xlat
pop
fwait
jle
or
mov
in
test
dec
into
jmp
jge
jp
cmp
int3
pop
sbb
fisttps
cmp
fs
jmp
jge
xchg
in
add
add
and
lahf
adc
and
shrl
xchg
mov
fstps
xchg
int3
sub
das
pop
in
fbstp
jae
in
movsb
inc
fidivl
lds
scas
iret
sbb
andb
inc
xlat
fwait
inc
sub
je
mov
popa
leave
setp
inc
ljmp
xchg
cmp
pop
outsb
mov
cmp
mov
mov
insb
push
and
divb
mov
aad
push
cwtl
ficoml
enter
adc
dec
xchg
rol
xchg
push
lods
and
jp
sub
bts
ficompl
loopne
imul
aas
call
sub
loopne
cld
push
xorl
mov
pop
repz
mov
dec
cli
loope
adc
mov
inc
push
imul
add
stc
xlat
inc
mov
ret
push
aad
out
fdivrl
push
pop
fidivs
popf
je
dec
sbb
lret
int
fwait
push
xorb
push
icebp
rcll
aaa
orb
jns
enter
loope
mov
bound
shl
mov
sbb
mov
out
inc
loop
cltd
je
adc
push
xchg
cld
jle
add
mov
insb
pop
sbb
sarb
cmpl
arpl
scas
mov
jne
cmpsl
pop
xchg
test
xchg
out
lcall
dec
pop
popf
shll
mov
popf
xchg
mov
mov
xor
dec
sub
pop
cltd
loopne
cmp
mov
mul
adc
pop
test
clc
cmp
mov
pushf
dec
mov
psrad
adc
jns
mov
hlt
outsb
mov
test
pop
cld
shlb
jno
das
bound
divl
stos
inc
push
lahf
testl
sub
call
out
dec
clc
cmp
out
ret
sahf
mov
mov
pop
scas
push
inc
fildl
mov
mov
push
out
filds
paddb
out
daa
loopne
pop
out
lea
jb
push
movsl
in
dec
xlat
int
cmpsl
std
push
loope
mov
testb
mov
fsubrs
inc
xor
xor
pop
lock
inc
pop
lock
insb
mov
int3
pop
lock
dec
pushf
xor
pop
insl
dec
push
mov
inc
arpl
xchg
jae
jo
rcl
repz
or
lret
or
lods
xchg
dec
jno
cmp
inc
mov
xor
push
in
dec
xor
mov
aad
lret
lds
or
push
jb
inc
sbb
aad
mov
repnz
das
sub
lahf
add
or
pop
xor
nop
adc
inc
xchg
lock
mov
adc
add
fnsave
in
ss
icebp
mov
mov
push
arpl
xor
cmp
push
push
push
aad
sbbl
or
dec
cmp
cmp
adc
add
jae
mov
adc
cmp
xor
adc
fidivrl
xchg
insb
dec
push
inc
mov
pop
xchg
jmp
leave
bound
inc
fisubrl
fsubrl
iret
fdivs
pop
jae
jle
push
sub
hlt
xorb
mov
dec
loope
insb
movntq
mov
pop
push
test
mov
lods
movsb
int3
fbstp
into
mov
add
push
in
pop
xor
test
ret
cmc
pop
pop
repnz
sbb
inc
fdivr
gs
xchg
lcall
scas
out
shlb
out
insb
add
sbb
data16
arpl
dec
mov
mov
mov
mov
xchg
sub
mov
lret
cmp
adc
pop
pop
sahf
dec
push
jb
xchg
adc
xlat
out
or
dec
aas
in
or
xchg
jl
xchg
scas
repz
ror
arpl
or
push
jnp
xor
test
sub
aad
fidivs
mov
jb
sub
repnz
inc
adc
movl
and
pop
aaa
imul
aas
repnz
jecxz
sbb
xchg
sub
pop
lods
inc
push
out
leave
sbb
insb
fs
cmpsl
cmp
jecxz
scas
jmp
mov
dec
gs
jno
lea
mov
aad
mov
or
jae
xor
xor
xor
mov
rcl
insb
add
cwtl
das
pop
jb,pn
popa
fwait
int3
arpl
adc
es
mov
or
in
push
testb
in
aam
ffreep
xchg
sub
push
mov
xchg
pop
xor
dec
ret
fidivl
addr16
cwtl
test
push
sbb
repz
push
push
scas
inc
sub
inc
popf
loopne
adc
adc
or
in
cmpl
jnp
sub
pop
icebp
mov
lea
cmpl
lea
and
xchg
clc
repz
jl
lea
mov
stos
and
aaa
repz
pop
and
jae
test
popa
clc
mov
push
popf
jmp
add
jecxz
imul
test
loop
or
sbb
test
cwtl
and
or
pop
push
in
pop
daa
mov
cli
dec
stc
nop
lock
nop
jecxz
add
aaa
call
incl
cmp
xlat
outsb
in
js
jns
cli
imul
stc
adc
jmp
std
lods
inc
out
imul
ljmp
add
dec
and
cmp
inc
fdiv
pop
shrl
sbb
jp
jnp
sbb
test
xchg
outsl
adc
repnz
mov
pop
dec
push
pop
testb
stc
lcall
pushf
out
pushf
xor
adc
aad
inc
fistpl
mov
jp
lret
mov
rcrb
mov
and
and
pusha
notl
aam
jne
pop
add
mov
pop
repz
mov
outsl
insb
sti
inc
fldt
jo
ljmp
aad
gs
test
push
and
pop
inc
mov
arpl
inc
fcoml
pop
sub
stc
jne
rclb
add
sbb
in
cmp
and
add
iret
push
rcrl
test
sbb
adc
fs
sub
pop
mov
pop
shll
cli
sbb
test
fwait
push
andb
jmp
inc
fisttpl
and
stos
inc
nop
addb
mov
out
mov
pop
pop
sti
xchg
mov
mov
iret
into
lds
test
sub
pop
ret
daa
mov
mov
lret
std
sub
mov
inc
js
or
jns
xchg
outsl
add
mov
pusha
pop
lds
push
popf
push
cmpsb
cli
fadds
add
and
cmp
rorl
cmp
test
jns
jecxz
and
notb
sbb
pop
or
push
mov
out
les
cmp
cli
jp
xlat
outsb
sbb
pusha
sub
push
lock
sub
jle
imul
lret
out
cmp
dec
loop
cmp
pop
lods
ds
xorl
lods
pop
lcall
push
in
ret
adc
ds
bound
cmp
cmp
mov
push
mov
adc
inc
lods
inc
jb
dec
out
pushf
dec
loop
xlat
pop
enter
sbb
cmpsb
jle
mov
fs
fwait
insl
mov
shlb
arpl
lret
bound
xor
es
dec
adcb
jmp
jle
lods
xor
loop
scas
jnp
and
ja
xchg
in
mov
pop
fdivs
aaa
sub
or
jge
lret
rolb
add
xor
jno
fmuls
push
loop
lret
popf
xor
and
adcl
cld
das
orb
mov
movsl
pusha
notl
pop
mov
add
fimull
mov
jae
lods
inc
pop
adcl
je
sbb
iret
and
ficoml
lds
cwtl
das
mov
stc
xchg
leave
stc
mov
mov
mov
cli
mov
mov
jecxz
in
pop
icebp
inc
push
test
xchg
mov
out
mov
pop
loop
mov
fimuls
cli
ds
add
mov
xchg
xlat
mov
inc
fdivl
pusha
test
pop
jmp
cmp
mov
scas
dec
sbb
ja
mov
mov
rclb
rcrb
testb
inc
sub
pop
lock
pushf
mov
push
jmp
or
insl
pop
mov
xchg
lea
mov
fnsave
test
sub
or
mov
pop
scas
lods
sub
mov
add
xor
lods
inc
push
push
imul
test
leave
jmp
cmp
inc
les
outsl
sub
pushf
popf
fidivl
mov
clc
xchg
es
add
inc
push
mov
pop
mov
lea
mov
in
sbb
rcrl
or
loopne
adcl
xchg
jecxz
inc
adc
aaa
into
imul
cmpl
mov
and
sub
je
inc
fnsave
aam
sti
add
dec
sbbb
xor
cmp
xchg
ret
push
sbb
xchg
cs
pop
fsubrs
cmp
imul
adc
vmread
lret
testl
movsl
dec
push
ds
mov
scas
adc
mov
push
jno
std
mov
leave
add
adc
ds
in
add
mov
leave
xlat
outsb
sti
adc
faddl
lds
mov
pop
lcall
mul
sub
loopne,pt
pop
rcrl
mov
aam
test
pushf
sar
push
das
repnz
js
inc
fimuls
lret
dec
in
in
mov
push
mov
pop
mov
das
mov
mov
mov
dec
out
pop
lds
call
pop
adc
push
cmpsl
and
pop
xchg
iret
sbb
sbb
scas
inc
pop
pop
add
fildll
ret
cmc
add
adc
ret
push
add
pop
mov
push
jecxz
inc
faddl
or
idivb
pop
adc
enter
rorb
std
xchg
jl
push
ljmp
hlt
mov
js
loop
xchg
sub
loope
inc
shr
xor
pop
adc
lea
shll
mov
mov
pop
scas
loope
clc
or
or
pop
pop
scas
mov
sub
sub
mov
lods
fwait
adc
and
xchg
lahf
movups
jmp
add
xor
movsb
pop
pop
xor
mov
mov
movsb
aam
xlat
lcall
xor
mov
mov
or
dec
aam
es
xor
or
mov
sub
mov
xchg
sub
movl
inc
mov
into
mov
rcll
jl
loop
aaa
adc
pop
xchg
aaa
into
outsl
mov
shlb
pop
call
add
sub
ds
jns
cs
aas
sbb
hlt
fistpll
rcrb
enter
out
aad
pop
imulb
ret
clc
cmc
call
nop
daa
dec
jmp
mov
addr16
mov
loopne
rclb
aaa
into
test
pop
out
aas
mov
lahf
sub
xchg
movsb
mov
jle
fidivl
and
hlt
pop
mov
mov
jge
jns
push
out
mov
pop
cli
out
xor
adcb
nop
add
fdivs
jmp
repnz
and
cmp
leave
dec
inc
fidivrs
jmp
sbb
adc
adc
push
test
fwait
push
filds
adc
push
cmp
outsb
insb
push
jo
mov
rolb
sahf
add
xlat
popa
sub
rcll
aaa
into
test
aaa
into
add
xor
movsl
cmp
aad
lret
lds
fs
cmc
xor
in
pop
mov
adc
cmp
push
shrl
rol
fidivs
test
sbb
jge
clc
pop
xor
dec
adc
mov
fwait
sub
mov
leave
pop
icebp
cli
mov
inc
sti
pop
bnd
cltd
xor
int3
ds
lret
push
ljmp
and
les
push
jmp
xor
and
jge
push
jmp
cwtl
fs
mov
aam
imul
push
popa
clc
aas
daa
es
js
dec
jecxz
xchg
pop
hlt
mov
and
add
loope
sub
lock
push
mov
lret
loop
loop
or
dec
es
nop
ds
loope
mov
and
push
sub
ret
pop
movsl
inc
pop
hlt
jbe
arpl
jbe
cli
xchg
shlb
xchg
data16
popf
xor
ja
xor
cmp
ja
ds
lahf
fdivl
lcall
sub
outsl
push
inc
inc
sbb
js
or
xor
sbb
xor
fsubrs
nop
pushf
xor
int3
imul
jmp
rcrb
mov
fdivl
cs
mov
movsb
cmp
push
jmp
mov
push
pop
dec
xor
in
imul
sti
xchg
or
nop
daa
lods
and
int
cmp
scas
std
int
out
enter
and
xchg
adc
adc
or
mov
and
push
cmpsb
push
out
sbb
sub
adcb
mov
repnz
inc
fstp
sbb
ret
dec
out
enter
lret
bound
mov
push
popf
sub
or
dec
pop
mov
dec
arpl
sahf
or
pop
dec
pop
lods
and
pushf
xchg
sbbl
dec
stos
lods
inc
fnstsw
xchg
insb
cmc
dec
loop
lahf
mov
addl
mov
frstor
sub
daa
pop
call
andl
jle
xchg
testb
daa
cmpsl
inc
fcoml
push
lods
inc
andb
mov
stos
stos
inc
sbb
jbe,pn
mov
shrl
rol
sub
iret
add
ja
lret
bound
ja
pop
push
imul
mov
mov
lods
inc
or
xchg
dec
loop
cmpl
scas
imull
call
jmp
rcr
adc
inc
inc
psllw
mov
leave
in
test
sbb
mov
inc
fdivl
int
insl
sub
sahf
sbb
nop
mov
mov
int3
add
add
sbb
lea
mov
leave
mov
xchg
sub
jo
shll
adcl
subl
lahf
loope
int3
arpl
scas
imul
add
push
mov
inc
push
lods
inc
mov
push
xchg
mov
dec
in
cld
in
xchg
cs
mov
cmp
and
or
aam
dec
out
xchg
in
fisubl
cmp
imul
sbbl
sub
fsubrl
push
loope
dec
loope
in
in
jg
test
fimull
mov
push
mov
lret
das
pop
mov
rorl
cmpsb
ret
daa
inc
fcomps
clc
in
out
movsl
out
jne
int
sbb
sbb
mov
daa
mov
mov
sarb
mov
push
in
and
icebp
mov
daa
mov
sub
lret
scas
xor
loopne
clc
jge
xlat
cs
xor
repz
test
repz
ret
add
out
xchg
sub
ja
sbb
test
leave
out
mov
mov
mov
mov
mov
into
gs
xlat
outsb
cmp
imul
lahf
lcall
mov
movsl
mov
incb
stos
add
xor
xchg
cs
dec
xor
jle
adc
lret
ja
loope
inc
adc
movsb
cmp
sbbl
dec
fnsave
out
mov
push
movsl
fisttps
outsl
inc
cmp
push
and
mov
aad
clc
or
and
push
mov
add
mov
lds
imul
inc
fstl
pop
scas
ss
js
dec
fnstenv
movb
cmp
and
lods
outsb
lds
adc
loope
enter
add
fbld
mov
mov
mov
xchg
sbb
jg
adc
xchg
and
sub
outsw
mov
pop
cmpb
or
sub
shl
imul
aas
mov
out
stos
test
iret
inc
or
jg
mov
mov
mov
jg
std
xchg
mov
sbb
pop
sarl
das
filds
ds
inc
dec
ds
jno
pop
jmp
adc
ds
or
lock
adc
les
xor
adc
inc
push
mov
test
mov
mov
cli
xor
movl
add
add
out
test
push
pop
jns
clc
icebp
leave
imul
iret
xchg
divb
das
pop
sub
sbb
sub
testb
pop
fstpt
jo
clc
mov
xchg
mov
cwtl
scas
int3
mov
lahf
mov
popf
stc
jle
ljmp
ret
stc
repnz
sub
push
and
xor
inc
pop
fmuls
dec
inc
add
pop
pop
add
cld
push
outsb
jp
lea
loop
push
jae
jnp
dec
push
enter
cmp
pop
xor
push
or
xchg
ret
adc
dec
mov
push
lcall
in
mov
mov
mov
cwtl
sbb
int3
mov
push
mov
mov
inc
add
xor
flds
insl
xchg
or
test
jl
loop
icebp
jmp
cmc
aam
scas
jge
push
and
popa
insl
xchg
popf
les
pop
dec
pop
jp
push
xor
cmc
push
shrl
lds
ljmp
sbb
push
stos
mov
push
jmp
and
mov
dec
sbb
cmp
ss
sbb
push
pop
out
mov
mov
or
mov
xchg
sub
lods
fnsave
mov
addl
shlb
push
outsl
push
test
mov
and
dec
mov
inc
sub
leave
popa
in
cli
xchg
and
jmp
scas
je
pop
sahf
mov
and
jmp
incl
xor
jb
div
stos
inc
and
xchg
sub
leave
pusha
jne
mov
sahf
xchg
out
enter
icebp
jmp
out
xchg
and
or
cs
clc
lcall
adc
pop
jne
stos
je
xchg
adc
ficoml
xor
inc
sti
scas
inc
sub
dec
int
loop
lahf
mull
jns
es
adc
js
int3
lods
inc
call
int3
arpl
sbb
jae
test
adc
fistl
xor
inc
cld
scas
inc
arpl
xchg
dec
int3
movl
fidivs
adc
push
ljmp
jno
js
mov
stos
test
adc
sti
pushf
mov
and
sarl
test
out
rol
pop
clc
icebp
testb
inc
adc
je
add
mov
push
out
adc
inc
cmp
imul
or
jl
pop
ret
inc
icebp
adc
or
mov
adc
and
or
and
cld
test
shll
push
xor
ss
mov
test
shll
stc
fildl
jb
sub
push
push
pop
insb
add
mov
and
mov
inc
xor
push
pop
mov
loop
bound
add
cs
push
mov
push
and
pop
mov
pop
icebp
stos
hlt
pop
hlt
and
inc
jnp
js
xchg
cs
cltd
cltd
xor
jae
dec
movsl
in
mov
push
shrl
aas
aad
jno
repnz
mov
insl
adc
push
shrb
icebp
aaa
das
push
mov
mov
inc
stos
mov
mov
lods
outsl
lds
cmc
popf
fdivl
data16
mov
and
nop
sbb
outsl
int
addr16
cmpsl
ret
int
js
sbb
clc
sbb
or
fwait
mov
dec
stos
sub
inc
cmc
popf
jae
icebp
lret
adcb
mov
loope
inc
into
jnp,pn
movsb
xchg
cmp
and
inc
fldl
inc
mov
aad
jno
fst
and
jp
mov
sbb
call
aas
jge
cmp
scas
sub
add
in
cmc
inc
cld
mov
pop
mov
sbb
pop
sbb
dec
jge
cli
lods
insb
popa
negl
sarb
and
xor
push
mov
rcr
divl
popl
repnz
adc
cwtl
adc
ljmp
in
aas
add
xor
jae
scas
push
insl
add
mov
nop
sub
icebp
test
es
dec
mov
enter
aam
add
lea
or
test
sub
jo
xor
add
mov
pop
in
sub
dec
in
dec
fcomip
mov
or
cmpl
push
mov
dec
jae
jae
mov
rolb
movsb
shr
pop
mov
outsb
aaa
pushl
sbb
loop
fnsave
dec
add
lcall
out
or
push
icebp
aam
jb
leave
xchg
addl
sub
sub
stos
xchg
stos
dec
mov
popf
bswap
pop
fcmove
xor
fidivs
adc
xor
ret
test
data16
sbb
popf
pop
jp
stc
push
jmp
sub
push
imul
fisubrs
inc
into
jmp
mov
adc
fstp
jg
add
popa
push
enter
xchg
jae
loopne
cmp
icebp
pop
jb
cmp
inc
ret
lahf
out
subl
leave
push
pop
and
inc
cmp
aam
or
jp
loop
pop
lret
cmpsb
sbb
push
xchg
jbe
push
inc
popa
icebp
ss
inc
shlb
or
dec
fs
mov
mov
pop
mov
shr
int3
sar
rcrb
out
pop
inc
jle
lock
pop
imul
mov
in
lods
fwait
inc
fidivrs
loop
push
sub
adc
clc
bound
lahf
jmp
scas
lea
mov
dec
add
and
movsl
outsb
sub
mov
arpl
sbb
fdivrs
lret
sbb
push
dec
pop
shl
pop
sti
jmp
mov
inc
lcall
ficoml
pop
sub
ffree
ds
nop
mov
cmc
fisttps
sbb
sarl
ja
adc
xchg
mov
lcall
sbb
div
repnz
xor
std
loop
jae
or
popa
xor
mov
push
cwtl
jecxz
daa
test
xchg
fdivr
shll
mov
mov
lds
fidivrl
inc
cmp
dec
adc
movsl
mov
lret
push
popa
fidivrl
aas
inc
and
jnp
js
fsts
sub
ret
push
subl
aaa
out
sub
xor
mov
push
insl
dec
shlb
xchg
add
leave
fcompl
pop
and
hlt
in
pop
inc
in
insl
jmp
popf
sub
mov
mov
aad
dec
cltd
pop
mov
mov
jge
jl
das
lods
push
jae
sub
pop
push
add
push
or
movl
scas
jecxz
sarl
fwait
add
mov
pop
dec
push
xchg
adc
dec
mov
fldcw
dec
jae
mull
lods
sub
lahf
inc
enter
mov
jg
xchg
add
stos
jge
xor
data16
test
icebp
mov
mov
mov
xor
je
addr16
push
in
gs
xchg
jne
jp
jge
inc
insb
push
xor
cmp
das
sub
add
pusha
pop
dec
imul
pusha
scas
jbe
cmp
xor
jne
addl
filds
mov
cmp
sti
push
cwtl
dec
cli
daa
dec
sti
pop
loop
mov
jo
adc
repnz
and
cmp
mov
loop
adc
inc
add
xor
iret
fs
aam
jmp
fwait
rorb
dec
xor
pushf
jnp
shlb
mov
and
imul
cli
sahf
mov
sti
fucomip
pop
out
test
inc
add
js
leave
adc
mov
popf
cmp
ret
xchg
jb
push
clc
lret
int3
lahf
mov
sbb
dec
dec
dec
shlb
jns
scas
cs
stos
in
push
pop
adcl
mov
dec
or
inc
sarl
lahf
filds
push
repz
sbb
xchg
mov
and
test
mov
mov
jae
jmp
das
push
sub
out
push
mov
pop
push
int3
jae
jno
loope
push
leave
cld
mov
fs
in
dec
dec
add
bound
mul
inc
or
repz
push
pop
mov
dec
in
sub
ss
loope
ds
in
and
mov
push
jns
add
mov
add
enter
dec
cltd
push
data16
pop
std
movsb
add
enter
inc
push
mov
stos
adcl
inc
jbe
cmc
push
add
add
xchg
addr16
lea
jne
xor
pop
push
and
scas
xchg
xor
sub
in
adc
xor
sub
iret
and
inc
xor
jb
shlb
fs
mov
stos
sahf
inc
fsub
dec
adc
or
sbbb
sbb
mulb
loopne
mov
jle
mov
xchg
cmp
cmpsb
sbb
cmc
mov
mov
mov
cmpsb
push
push
adc
sbb
into
push
loop
jno
out
vpcmpgtd
push
mov
cmp
xor
iret
popf
dec
inc
push
in
ljmp
fucomp
lahf
dec
mov
xlat
xor
shrb
lahf
mov
cwtl
inc
dec
jle
and
lods
adc
jae
mov
push
sbb
cs
adc
popf
call
mov
inc
adc
idivb
cmpsb
jnp
xlat
xor
cmp
jb
sbb
xchg
dec
ret
inc
test
dec
add
subl
fucomip
xor
inc
imul
pop
mov
enter
and
clc
repz
repz
push
push
lods
nop
mov
dec
sbb
jo
out
or
mov
cmp
or
jge
in
outsb
cmp
or
andl
hlt
adc
in
fsubrl
mov
pop
ljmp
leave
dec
cli
out
dec
dec
fistpll
adc
gs
inc
lcall
mov
sti
movsb
scas
xor
add
xlat
aas
jg
in
outsl
hlt
cmp
or
or
push
std
cli
xchg
out
mov
jo
cld
jp
out
cmpsb
push
fsts
push
out
lods
dec
xchg
mov
adc
divb
jb
inc
mov
push
loop
mov
xchg
mov
call
pop
jae
andl
or
mov
es
aam
xor
pop
cmc
int3
arpl
jge
call
jp
outsl
push
add
and
out
es
test
inc
jno
leave
test
fisttps
and
push
les
dec
in
sbbl
sahf
imul
imul
xchg
cmp
mov
add
pushf
pop
andl
xor
ret
ja
popf
dec
pop
fmull
inc
js
repz
pop
hlt
jp
mov
cmpsb
int3
in
jno
out
sub
loop
mov
lods
mov
fnsave
push
out
push
sbb
push
jmp
imul
pop
mov
loopne
js
sub
gs
popa
scas
xchg
jg
fnstcw
rorb
and
popf
push
sub
pop
jne
mov
scas
movl
add
popa
clc
dec
and
push
sahf
jbe
push
icebp
leave
out
cmpsl
addr16
push
inc
add
inc
push
adc
xor
and
mov
jb
mov
addb
divl
and
scas
call
gs
sub
nop
xor
roll
lods
ljmp
pushf
cli
ds
adc
repnz
or
add
add
jl
or
hlt
mov
or
in
fs
aam
jae
jae
sub
repz
and
pop
lock
sbbl
sub
xchg
sub
in
mov
dec
iret
aas
lock
xchg
stc
nop
lds
xchg
pop
scas
pop
xchg
or
int3
imul
push
ljmp
jno
jle
es
loopne
sbb
test
cmp
lret
bound
xchg
pop
mov
fcmovu
jbe
jle
sahf
scas
sub
and
mov
and
push
sarl
fstpl
mov
arpl
test
cmp
hlt
mov
adc
pop
inc
loop
test
mov
inc
mov
out
mov
mov
sbb
fidivs
in
jne
fmulp
movsb
cmp
cmp
lock
subl
movsb
outsb
add
mov
inc
fsubrs
lret
mov
fldl
sahf
into
add
pusha
mul
fdivrs
or
jb
je
jge
rcll
imul
sub
push
lcall
mov
dec
dec
mov
xchg
sub
das
push
int
lret
add
loop
cmpsb
adc
clc
ja
or
ds
gs
mov
push
add
fnsave
rclb
adc
in
dec
xlat
outsl
pop
mov
clc
pop
ljmp
add
or
adc
out
rdmsr
int3
arpl
cmp
and
inc
test
mov
fbstp
xchg
out
hlt
push
addl
test
sub
push
mov
test
xchg
cs
fistpl
int3
mov
and
int3
mov
cld
add
popa
les
mov
cmpsb
es
inc
fidivl
mov
jge
dec
dec
std
xchg
ds
or
push
mov
mov
gs
jg
int3
xchg
shl
inc
fcoms
cmp
inc
sbb
ds
scas
lock
repz
out
ret
int
and
in
mov
shl
scas
inc
call
or
daa
sbbl
iret
mov
rcrl
mov
fdivl
push
cwtl
das
out
fldcw
inc
fsts
leave
pusha
in
cmc
add
xorb
jnp
jbe
mov
xor
fsubl
popf
xor
xrelease
fcmovbe
insl
int3
mov
cltd
aad
scas
inc
fistpll
cmpsl
lahf
add
mov
add
and
cwtl
mov
cld
xchg
sub
sub
cmp
pop
daa
mov
push
jo
les
pop
inc
cmp
hlt
out
jno
das
push
push
call
pop
lds
mov
icebp
cmp
mov
iret
sbbl
push
add
loop
mov
es
push
cmc
test
xor
or
cltd
jp
xlat
outsb
negb
movsl
cmp
jno,pn
mov
rol
mov
jne
imul
movsb
lds
cmp
xor
lahf
ss
mov
stos
jmp
jl
in
or
push
jle
dec
in
lahf
pop
scas
adc
lea
test
and
jnp
mov
jl
sbb
je
lret
and
fldl
lcall
adc
daa
add
adc
addr16
ss
xor
push
mov
fcomi
mov
xchg
mov
insl
loopne
or
jb
popa
clc
push
xchg
pop
add
daa
cmpsl
ds
enter
mov
inc
fcmovu
dec
xchg
sub
cltd
pusha
shrl
xor
inc
gs
mov
adc
mov
test
mov
adc
js
mov
call
fidivrs
jle
movsl
iret
std
xchg
rorl
jl
cmp
sbb
in
out
icebp
mov
or
es
data16
or
xor
sub
jecxz
lahf
shlb
pop
shll
ret
lds
std
xchg
lret
data16
out
xchg
or
xor
add
xor
add
mov
xor
rorl
push
out
movsl
fs
xchg
push
jmp
and
sub
inc
fdiv
ljmp
into
cwtl
das
mulb
mov
aaa
insl
add
lea
xchg
mov
pop
repnz
das
adc
xor
pop
repz
inc
flds
add
je
and
pop
iret
outsb
add
cltd
xchg
and
mov
mov
lods
cmp
pop
das
dec
or
fsubl
or
jmp
adc
cmp
enter
sbb
inc
mov
push
inc
fcoms
aas
dec
out
ficoms
inc
icebp
icebp
mov
out
push
jmp
add
xor
or
xor
jmp
mov
int
mov
cmp
adcl
imul
imul
imul
cwtl
das
std
into
lea
push
pop
lock
sahf
dec
out
mov
shll
push
mov
pop
xor
mov
fs
fdivl
or
sahf
aaa
push
dec
loopne
jnp
xchg
insl
mov
cmp
jns
hlt
cmpsb
and
xchg
dec
adc
and
inc
mov
cli
xor
addr16
loopne
je
outsb
cli
xchg
pusha
int3
dec
out
xorb
lods
mov
mov
bound
ret
mov
add
cmp
push
sbb
cmp
mov
loopne
or
lods
repz
in
lods
inc
mov
mov
stc
or
dec
dec
sub
out
mov
testb
scas
movsb
cmp
arpl
enter
mov
data16
test
sbb
mov
mov
stc
lods
push
ljmp
pop
lock
jne
add
cmp
aam
xchg
sub
inc
fiadds
cltd
push
or
adc
push
ljmp
push
enter
mov
mov
inc
cmp
out
insl
fldl2e
jle
xor
sbbl
ret
lods
inc
pcmpeqd
aad
sbb
adc
pop
jnp
mov
cmpsb
or
sahf
cmp
fs
flds
lret
lcall
inc
fmul
inc
pop
icebp
jns
adc
inc
add
adc
ss
movsl
icebp
leave
dec
loope
xorl
int3
dec
data16
jae
mov
js
add
int
out
xchg
movsl
cmp
subl
xchg
jl
mov
mov
loope
je
cwtl
das
cmp
or
dec
rcrl
pop
mulb
xor
out
jb
cmc
xchg
xchg
mov
ja
test
mov
xor
ret
add
xor
shll
aad
pushf
popa
clc
hlt
mov
out
out
stos
pop
jecxz
jns
popa
clc
xchg
lcall
pop
sub
pop
lock
rcrb
fst
lcall
in
dec
pop
mov
sbb
sbb
pop
rep
loop
jbe
sub
adc
test
cmp
xchg
imul
mov
and
sbbl
push
call
into
jge
in
out
popf
xor
pop
imul
inc
out
test
lret
bound
pop
lock
jp
dec
imul
inc
pop
jo
push
cmp
into
push
lahf
and
lds
leave
pusha
imul
pop
or
mov
lea
out
popa
scas
in
sub
mov
jmp
pop
jg
roll
mov
inc
bound
cmp
insb
ds
es
lods
jg
pushl
shll
int
adc
ret
jno
into
gs
xor
and
mov
inc
out
jbe
cli
jp
and
and
lock
jge
cmp
outsl
jg
sub
sarb
jae
es
aaa
in
subl
xchg
stos
mov
movsl
mov
fsubrl
ror
adcb
jnp
in
mov
std
sbb
mov
scas
push
lods
loopne
test
rorb
xchg
cmp
or
nop
pop
jle
push
sub
fnstenv
mov
xor
mov
fucomi
dec
mov
in
repnz
into
enter
rcl
adc
lds
addr16
lahf
out
insb
push
rcll
leave
pusha
jge
push
movsl
sub
jge
pop
dec
mov
dec
jl
xchg
inc
jo
pop
dec
push
mov
test
mov
leave
pop
lea
out
loopne
sub
jnp
or
mov
jecxz
mov
call
stos
inc
es
xchg
leave
mov
js
xchg
push
add
divl
fcomps
popf
not
add
clc
iret
add
jmp
in
rorb
ret
and
xchg
push
xor
inc
mov
stos
sti
xor
jae
or
in
dec
add
sbb
mov
or
imul
sbbl
sahf
cli
jmp
fwait
push
les
into
xchg
xor
xchg
add
rorb
std
gs
cs
dec
je
pop
or
sbb
cmpsl
sbb
and
sbb
outsb
inc
loopne
inc
dec
and
pop
mov
fsubs
push
push
xchg
dec
push
dec
mov
xchg
out
dec
aas
les
rcrl
lods
sarl
out
out
cmp
mov
rclb
push
insb
push
or
xchg
inc
adc
dec
test
inc
cmp
push
lock
push
sbb
into
shll
in
xor
loop
into
dec
xchg
mov
add
das
mov
fcmove
aaa
jnp
imul
add
loope
jns
add
mov
insl
mov
jecxz
sub
cmp
sti
fs
mov
inc
cmovle
jg
shlb
xchg
and
sbb
test
xor
mov
faddl
xchg
adc
adc
pop
xor
loope
inc
mov
push
sub
iret
lcallw
mov
outsl
push
mov
les
shl
lea
ficoml
or
xchg
cs
pop
cmc
repz
cmp
sbb
dec
imulb
shr
adcb
or
ret
sahf
xor
cmp
lock
pop
testb
mov
adc
and
scas
mov
jecxz
shl
xchg
sbb
scas
mov
ret
repz
or
popa
mov
mov
and
sahf
dec
inc
int
push
insl
ja
arpl
sub
mov
cs
movsb
cmp
dec
repz
xchg
sub
mov
frstor
push
xchg
add
jno
inc
fnstsw
jg
xor
in
test
cmpsb
cmp
cmp
sub
dec
mov
pop
lock
insb
add
rcr
mov
push
jmp
and
mov
and
jae
pop
jb
in
inc
outsb
add
jo
mov
dec
cmp
inc
fnstcw
or
cmp
js
mov
addr16
lods
and
add
es
fbstp
and
lret
and
xor
push
lods
popa
push
xchg
sub
and
dec
xchg
sbb
les
shll
mov
mov
inc
fadds
daa
push
in
xchg
shr
add
and
hlt
sbb
sub
pop
push
into
gs
add
leave
pusha
inc
cltd
sub
or
out
xlat
testb
call
inc
lds
and
lea
inc
push
push
out
adc
jo
scas
xor
ljmp
adc
mov
insb
add
hlt
mov
mov
shlb
mov
pop
jmp
ljmp
insb
aaa
movsb
cmp
jg
les
mov
pop
mov
jne
mov
insb
js
pop
scas
es
popf
xor
inc
clc
je
call
pop
inc
mov
lcall
cmp
push
ss
mov
jmp
xlat
pop
dec
in
clc
pop
int3
movl
cmpsl
xor
cmp
iret
jge
add
repz
shl
adc
mov
pushf
xor
jno
mov
or
repz
testl
fnsave
imul
add
inc
cwtl
das
cmp
inc
pop
inc
fidivl
and
insl
dec
and
mov
push
jmp
jmp
pusha
testl
popa
in
adcl
in
cmp
test
add
pop
mov
int3
jle
cli
scas
in
push
aad
out
aas
and
ds
xchg
scas
mov
cmp
cmc
sbb
movsb
insb
icebp
mov
lds
mov
push
je
jno
dec
fildll
int3
data16
fsubp
test
lcall
mov
mov
call
push
lods
stos
cmp
mov
mov
repz
negl
mov
sbb
movsb
dec
arpl
insb
fmull
push
xor
lds
ljmp
mov
shlb
lds
xor
add
jp
sbb
push
out
cmp
xchg
jp
adc
or
sub
ljmp
fsubrs
mov
bound
push
in
cmp
push
lods
arpl
leave
push
test
adc
lds
lret
sub
out
xchg
push
call
test
lret
fcompl
int
inc
adc
int3
ja
ljmp
or
sbb
test
movsl
cmp
movsl
and
insb
stc
sbb
pop
sbb
jle
jl
fisttps
lea
insb
data16
dec
and
sbb
and
out
inc
add
bound
adc
ss
test
cmpsb
test
fcoms
jl
mov
out
xchg
roll
popf
aam
push
mov
js
ret
mov
in
sub
nop
jl
mov
cmp
mov
add
xor
pop
adcl
mov
mov
sbb
out
stos
mov
add
sarl
pop
sahf
enter
stos
jmp
int3
arpl
cmp
cmpb
das
mov
ret
hlt
or
shrb
pop
cmp
nop
push
push
out
mov
xor
cmpsl
and
jecxz
enter
test
cmp
lahf
in
shrb
aam
jmp
fwait
cmc
daa
mov
testb
jmp
pop
cmp
mov
ret
fildl
pop
icebp
xchg
cld
cmp
fnsave
rol
and
stc
lcall
pop
std
push
jmp
jge
icebp
jo
push
movsl
push
inc
dec
loop
pop
data16
dec
mov
inc
sub
int3
arpl
jmp
fidivl
popa
adc
mov
pop
mov
xor
outsb
test
lock
push
les
test
cmpsb
cmp
adc
dec
jecxz
xor
jo
sbbl
xchg
ss
iret
ret
loope
int
xchg
mov
xlat
mov
ret
cld
cmp
sub
inc
inc
xlat
jb
scas
inc
insl
addr16
fstpl
iret
cmp
add
scas
pop
enter
mov
mov
loopne
push
out
sub
out
data16
jg
pause
lea
sbb
sbb
cmp
push
mov
insb
mov
dec
test
lret
cld
popa
ret
pop
xchg
sbb
xchg
sub
push
jmp
push
ret
pop
jbe
test
jns
daa
mov
out
insl
and
jle
push
out
inc
add
sbb
and
int3
xchg
lods
inc
add
rcrl
sub
iret
xchg
enter
adc
push
xor
movsb
cmp
lret
loop
mov
xchg
dec
fdivs
addr16
cwtl
das
add
jecxz
cs
pop
mov
mov
fidivl
in
mov
in
mov
movsl
add
ret
es
sar
or
fsubr
sub
xchg
sub
add
xor
sub
xchg
imul
pop
pop
dec
xor
mov
daa
push
mov
movsb
add
popa
cwtl
and
into
push
mov
pusha
mull
sub
add
mov
push
out
jmp
jecxz
cmpsl
jl
sbb
push
sbb
push
in
rcll
sti
push
scas
inc
js
dec
mov
xchg
js
push
fidivs
mov
or
aad
jo
and
and
stos
lea
mov
adc
push
fildll
fisubrs
jne
xchg
sub
repnz
out
jnp
int
mov
mov
call
psadbw
inc
fwait
outsb
sub
lahf
aas
push
mov
fsubs
lds
nop
scas
pop
fbstp
divl
lret
adc
clc
test
fiadds
roll
add
adc
push
and
ja
xchg
push
push
adc
test
mov
add
ljmp
sub
int3
add
je
sbb
and
pop
scas
jns
cmp
dec
cmp
gs
xor
push
cmp
mov
xchg
mov
enter
jp
cmp
fidivrs
ds
inc
mov
jmp
mov
dec
xchg
mov
cmp
leave
pusha
leave
push
rcll
fwait
sub
scas
fs
xor
idivl
xchg
sub
push
add
imul
push
mov
mov
and
jmp
dec
mov
std
ret
inc
les
test
push
paddsw
pusha
pop
stc
add
mov
cld
and
inc
push
insb
dec
push
pushf
push
pop
mov
arpl
scas
pusha
sub
and
xor
cmp
ds
inc
rcl
add
xchg
sub
scas
adc
aaa
adc
pop
int
xchg
cmp
cmpb
mov
icebp
sarl
mov
gs
es
icebp
mov
dec
push
add
xor
inc
bound
dec
sub
inc
fidivrs
sbb
or
xlat
inc
push
xor
lea
pop
inc
and
mov
popa
mov
gs
adc
shll
iret
dec
loopne
data16
pop
push
mov
imul
jmp
pop
stc
iret
sbbb
fstl
test
aad
scas
sub
stc
jl
ss
popf
stc
lock
popa
clc
inc
in
fstpt
clc
inc
fadd
pop
cmp
jo
es
ss
pushl
xor
fidivrs
sbb
xchg
cmc
sbb
add
pop
lcall
add
push
hlt
mov
shll
bound
jge
lds
cmp
iret
jl
push
mov
out
sub
adc
test
jmp
mov
sub
aad
fwait
xchg
and
and
inc
push
aad
stos
repz
xchg
inc
sti
into
sbb
dec
dec
in
mov
inc
scas
and
fstp
jo
dec
nop
daa
pop
xor
jge
jg
and
xchg
pop
mov
sbb
aas
stos
inc
jno
mov
xor
xchg
addb
js
mov
mov
jno
sub
push
test
inc
faddl
in
mov
push
sub
mov
stos
scas
je
repnz
aad
aas
cwtl
xchg
or
mov
lock
mov
lods
mov
and
mov
das
aaa
into
pusha
mov
xor
sub
mov
push
push
movhps
pusha
negl
xchg
sub
inc
cwtl
enter
push
in
xor
clc
push
push
or
ds
out
and
das
adc
add
xchg
xchg
in
or
mov
rcrb
add
jae
jg
cltd
fxch
popa
lret
stos
arpl
xchg
mov
ret
mov
mov
lock
sbbb
and
inc
mov
adc
jmp
xor
mov
pop
push
sarb
mov
lahf
mov
arpl
mov
or
pop
hlt
das
xchg
cmp
ret
lods
cld
pop
xor
xchg
adc
shll
cmp
adc
jns
cwtl
inc
imul
dec
into
mov
rorl
daa
xchg
push
sub
jle
cmp
outsb
jp
jo
jne
add
shll
dec
push
cmpb
movsb
imul
movsb
jge
or
pop
cltd
test
mov
icebp
and
lods
jl
add
icebp
jae
inc
jmp
insl
scas
inc
or
xchg
aas
and
mov
ss
sub
test
lcall
dec
jecxz
pop
dec
popa
push
repz
hlt
aad
dec
jns
mov
jbe
sbb
movsl
cmp
or
jbe
int
inc
pop
jb
xchg
or
mov
sub
pop
sub
fs
fsubl
adc
repz
loopne
mov
mov
ss
mov
aad
xchg
or
cmpsl
call
mov
cmp
jp
mov
xchg
or
fwait
jecxz
push
mov
int
and
dec
rol
jle
pop
mov
and
mov
cli
sub
dec
adc
cmp
leave
fsubrs
cmpsb
cmp
loop
mov
cwtl
xorb
mov
fisttpll
mov
mov
pushf
pop
xor
bound
lahf
daa
mov
test
xchg
cwtl
test
xchg
push
movsl
cmp
jbe
lret
movsl
pop
shrb
shlb
adc
or
cmpsb
jmp
or
jle
jnp
cmp
cmp
addr16
jp
popa
pop
mov
pusha
testl
jl
aam
and
pop
adc
lea
in
movsb
fbld
outsb
test
enter
gs
pop
lds
or
mov
scas
movsb
add
mov
and
es
push
movsl
popl
push
out
mov
cmp
sub
mov
mov
mov
add
and
dec
and
adc
les
mov
jmp
aad
pop
pop
test
addr16
jecxz
jg
dec
mov
inc
rorb
inc
lods
rolb
sub
loopne
cmpsb
in
ds
lret
fwait
cmp
cmpsb
cmp
pusha
cmpsb
sbb
push
or
cli
sar
mov
popa
cli
fwait
enter
mov
jl
cmp
mov
pop
mov
icebp
decl
popa
adc
cmpsl
inc
mov
jno
mov
popf
ret
pop
fdivr
push
pop
repz
fucomip
fidivrs
pop
test
test
xor
cli
int3
mov
fsubp
mov
inc
push
sbb
enter
xchg
and
mov
push
pop
das
dec
cmp
mov
inc
fdivl
pop
fs
jae
addr16
mov
aam
ret
mov
adc
mov
xchg
push
mov
out
add
jnp
add
rcl
imul
fdivs
adc
push
cltd
imulb
xchg
into
xchg
lock
add
pop
dec
aad
addb
gs
mov
dec
push
cwtl
das
mov
sbb
pop
xor
sub
push
push
mov
sub
and
addr16
daa
jnp
dec
lcall
jne
stos
loopne
in
pop
repz
pop
jmp
or
rclb
pusha
stos
ss
dec
lock
test
fisttpl
sbb
popl
cli
cltd
mov
stos
xor
or
adc
cmc
jne
adc
fadd
mov
pop
fiadds
lds
ret
cmp
fnsave
dec
aas
popf
xchg
pop
jno
scas
cmpsb
xor
add
into
add
into
lock
aas
fbld
mov
int3
repz
es
jbe
xchg
pop
test
sti
sbb
shrb
pop
stc
das
pop
fbld
ljmp
fstp
cltd
mov
add
or
clc
dec
ja
mov
ficompl
mov
aaa
cwtl
pop
inc
dec
ds
mov
into
inc
jle
aaa
push
push
ret
cmp
jge
lea
pop
sahf
popa
clc
iret
std
push
lods
out
lods
or
aam
xchg
push
sub
sahf
xor
cmpsb
rorb
jge
daa
mov
popa
push
repz
dec
mov
cmpb
push
fdivr
imul
adc
sbbb
ret
cmp
or
aaa
pop
pop
sbb
add
sub
test
mov
daa
jl
dec
int3
jmp
xchg
mov
out
or
mov
sbb
add
mov
sub
jp
repz
dec
fs
lret
clc
adc
add
lret
iret
lret
lock
jg
mov
sbb
fmul
inc
adc
arpl
notl
inc
adc
jl
or
jo
jns
out
aam
test
mov
mov
jge
pop
adc
in
hlt
mov
add
cli
lods
mov
into
cwtl
dec
and
mov
out
std
fadd
pop
in
mov
push
testb
push
ljmp
sbb
push
enter
jae
or
sub
xchg
cs
cwtl
xchg
sbb
push
cmpl
outsl
ret
pop
jl
nop
cli
fwait
lock
mov
xchg
inc
xchg
or
add
scas
inc
push
cwtl
xchg
repz
imul
into
hlt
xor
push
add
xchg
clc
and
lahf
fdivrs
adc
xchg
jb
pop
xchg
clc
cmp
mov
mov
outsb
dec
inc
fidivrl
push
mov
dec
jecxz
sti
aaa
jns
sub
mov
adc
mov
xlat
lock
cmp
dec
mov
mov
lea
mov
fsubrl
jmp
and
xlat
divb
scas
cmp
xchg
inc
repz
shl
pop
pop
xchg
roll
pop
in
xchg
inc
xlat
jmp
xchg
dec
out
lock
mov
movsl
adc
lds
in
push
jge
ja
int
dec
push
jle
jbe
ficomps
imul
mov
fwait
mov
leave
xor
sbb
aad
pop
pop
fcomp
sub
outsb
xchg
sbb
in
push
out
mov
lods
mov
mov
mov
push
mov
movsl
mov
fstpt
sarb
ja
lret
mov
loopne
pop
lds
idivl
cld
sub
inc
xchg
mov
daa
jnp
sbb
movsl
xor
sub
and
push
cmc
mov
push
inc
fnsave
insl
adc
pop
cmp
sbb
xchg
xchg
pop
adc
mov
adc
push
pusha
pop
sbb
push
lret
jae
mov
inc
jne
mov
jbe
lods
push
int
scas
shlb
lret
cs
fnstsw
and
ds
neg
je
mov
sti
pop
imul
mov
daa
ficoms
cmovge
jo
pop
mov
inc
push
cmpsl
xorb
adc
pop
pop
push
popf
lea
stos
mov
sub
push
dec
loop
mov
icebp
jg
lds
dec
mov
insl
loope
jmp
push
cmc
mov
int3
cmpl
pop
pushf
in
jae
leavew
sub
repnz
cld
xchg
lock
leave
and
mov
jmp
pop
sti
fcomip
inc
leave
incb
push
std
imul
push
test
movsl
jbe
xlat
mov
inc
fidivrl
mov
out
ja
ja
inc
daa
jmp
imul
dec
jp
fstpl
lea
ds
fwait
icebp
xchg
sub
mov
pop
xor
inc
inc
xchg
sbb
fdivs
sub
mov
lods
inc
xchg
add
out
mov
xlat
dec
dec
jmp
fistpl
and
pop
outsb
pusha
sub
scas
xchg
iret
popf
mov
in
xchg
xchg
add
fwait
push
push
jle
jns
lret
or
sub
or
imul
push
repnz
test
and
add
fiaddl
pop
out
into
sbb
fistps
rolb
mov
inc
add
loopne
or
cmc
pop
sub
stos
adc
aas
rclb
adc
jne
sub
xchg
andl
add
cmpsb
bound
inc
cwtl
subl
outsb
push
pop
lea
jo
int
ds
fidivs
mov
rol
stc
int
push
stc
add
dec
loop
sbb
dec
cmc
jbe
lea
mov
int3
test
int3
aaa
in
xchg
sub
jno
fadds
add
sub
nop
daa
jmp
adcl
dec
sbb
sub
pop
imul
lret
pop
int3
or
jbe
push
scas
pop
push
popf
shrb
xchg
add
mov
mov
dec
or
sbb
adcl
sbb
jbe
fcmovnb
mov
mov
mov
xchg
scas
hlt
lahf
cs
dec
add
or
enter
insb
dec
addb
das
lds
mov
xlat
movsb
push
xchg
mov
jp
repz
fwait
mov
jecxz
insb
add
cmp
inc
xchg
rclb
out
lods
jb
cmpsb
lods
pop
std
enter
mov
sahf
jge
fistpll
sbbb
frstor
adc
cwtl
insl
arpl
or
mov
push
test
ficoms
dec
push
sbb
mov
js
mov
gs
sahf
clc
inc
addr16
daa
insl
inc
in
outsb
xchg
in
jo
xor
xlat
jns
xchg
push
imul
jno
aad
pop
divb
mov
divl
mov
fsubl
aad
push
mov
ret
hlt
or
cmp
cld
adc
or
shl
cwtl
cmpsb
lcall
inc
push
adc
std
lahf
mov
mov
pop
int
mov
repnz
gs
dec
test
or
push
adc
mov
loopne
xchg
test
add
out
es
cmpb
fwait
sub
ja
mov
lock
cmp
shll
ror
hlt
inc
lret
shlb
icebp
in
int3
sub
mov
add
testl
and
mulb
pushf
ret
pop
into
inc
jbe
jo
mov
and
pop
mov
jmp
add
movsb
jno
xchg
std
xchg
leave
jnp
daa
ja
push
ficomps
add
int
lretw
push
stc
std
insl
into
imul
mov
jmp
sbb
pop
and
push
xchg
xor
pop
dec
or
lfs
cmp
insl
cmp
subb
pop
pop
inc
sbb
mov
and
mov
aaa
not
enter
xor
stos
cmp
pop
outsl
fidivrl
mov
and
call
dec
push
mov
subb
cmp
rcrl
jno
dec
xchg
xor
or
daa
inc
xchg
fmull
pusha
roll
lods
add
cmp
jecxz
les
add
inc
add
shlb
jg
mov
add
icebp
xor
dec
jle
xorl
clc
cmp
rcrl
sub
int3
daa
or
lods
mov
jno
iret
cmp
icebp
sbb
xchg
jne
push
frstor
cmpxchg
mov
mov
lcall
inc
fimuls
addb
pop
lret
stos
xchg
leave
sub
pop
stos
sbb
jnp
adc
adc
push
ds
inc
jp
xchg
mov
jbe
loope
sbb
add
push
mov
inc
fmuls
movsb
jmp
xchg
jg
lods
adc
inc
ret
iret
ja
insl
pop
inc
inc
sar
bound
ds
sub
push
sbb
dec
js
and
push
pop
lcall
mov
pop
mov
sbb
jae
cli
jl
pop
pop
push
ja
mov
inc
cmp
sbb
rcll
arpl
or
out
fisubrs
inc
int3
hlt
mov
inc
mov
lods
xor
mov
adc
sbb
inc
aaa
xchg
sbb
outsl
jb
scas
shrb
push
fidivl
outsl
scas
aad
aaa
nop
call
nop
lret
loop
int
mov
lods
ret
int
rcrb
jae
and
test
pop
cmp
scas
mov
fisttps
ss
dec
fsubl
pop
jo
sarb
stos
inc
scas
loope
fpatan
lret
std
xchg
std
adc
jne
jl
mov
lahf
insb
jb
fmull
fisubrl
xchg
clc
out
dec
cmp
or
jg
aas
pushf
out
repz
mov
js
adc
psllw
push
sbb
mov
xchg
push
fnstcw
test
sub
jp
push
pop
jne
imul
outsb
daa
das
add
mov
in
xor
rep
cmp
loope
rorb
fwait
or
test
push
xchg
in
xchg
icebp
stos
adc
mov
push
cmpsl
push
mov
je
cmpsl
fmuls
out
and
dec
mov
dec
jle
scas
xchg
cmp
add
lds
inc
mov
sub
xchg
mov
rcll
xchg
int
lcall
addr16
out
dec
push
push
sbb
cli
mov
xor
popf
add
jecxz
lods
repz
sbbl
out
or
insl
pop
cmp
push
mov
push
in
mov
mov
or
frstor
sbb
mov
mov
in
pop
xor
pop
mov
aad
sbb
ja
jae
testb
je
xchg
mov
sbbl
sbb
ja
rcll
cmp
jbe
xchg
or
sbb
fwait
jne
fdivs
lds
mov
in
fiadds
add
xor
jns
ss
pop
inc
jecxz
dec
jbe
jbe
out
cmc
jge
test
mov
repz
shlb
or
mov
cmp
pop
cmp
mov
dec
in
xchg
push
pop
or
ds
popa
mov
je
andb
arpl
imul
inc
jno
xchg
pop
push
bound
xchg
gs
inc
pop
adc
mov
hlt
inc
es
cmp
inc
popa
daa
fsts
outsb
iret
insb
add
movsl
arpl
cmp
pop
call
add
dec
mov
aad
push
int
xchg
cmc
mov
xchg
dec
add
inc
xlat
outsb
ja
lret
adc
mov
xchg
adcl
inc
dec
das
ret
pop
mov
pushf
xor
mov
cli
push
sub
sbbl
notb
adc
xchg
test
or
fwait
push
xor
aas
add
ret
inc
les
push
lret
xchg
jns
pop
cmp
bound
cmpsl
sti
dec
mov
jmp
ficompl
movsb
ret
mov
ficomps
test
push
fs
mov
push
or
dec
add
popa
fdiv
enter
in
add
fwait
or
lds
outsl
sbb
cmpsl
cs
hlt
rolb
cmpsl
add
adc
sahf
xor
nop
inc
fnsave
adc
testb
mov
je
sbb
sahf
xor
sbb
enter
pop
imulb
mov
ficompl
imul
fs
cmp
and
das
push
cmp
and
inc
lret
cmp
dec
pop
dec
iret
pop
pop
fidivl
dec
daa
mov
hlt
mulb
mov
mov
mov
jb
daa
mov
sub
pop
out
movsb
sbb
cli
lods
cmp
ret
sbbl
mov
frstor
push
je
push
cmpsb
das
test
fdivl
andb
dec
aad
pop
ret
jge
hlt
scas
in
jbe
sarb
or
inc
inc
rclb
mov
xor
push
mov
push
inc
out
adc
test
mov
inc
sahf
imul
lahf
jp
xchg
lods
add
xorl
popf
xchg
push
dec
xor
sti
arpl
lcall
mov
cmp
ljmp
xchg
dec
xchg
mov
inc
sarb
lret
jnp
jb
add
add
pop
test
repnz
mov
iret
movsb
xchg
clc
insb
iret
movsb
mov
xchg
imul
and
fnstenv
pop
adc
mov
xchg
cmpb
aaa
mov
out
push
insl
imul
add
push
stos
aas
pop
fldcw
dec
cld
insl
mov
xchg
insl
cld
adc
push
es
fwait
pop
mov
fldcw
pop
xlat
fldcw
rorl
cmp
insb
jp
xor
push
jge
inc
pop
push
cmpsl
xchg
xor
mov
mov
ds
mov
or
pop
in
aas
mov
sbb
jmp
xchg
test
sub
sbb
and
or
insl
shl
lret
sbb
ja
xor
cmpsl
insl
jnp
aad
test
aaa
jg
push
sub
mov
negl
xor
xchg
aaa
dec
popa
inc
hlt
xorb
call
or
mov
fwait
mov
adc
int3
fisubs
ret
lods
in
mov
sti
cmp
mov
push
add
xor
dec
pusha
movsl
push
cltd
pop
or
inc
mov
and
push
mov
xor
in
jl
loopne
pop
push
mov
mov
xchg
mov
xchg
stos
cmp
icebp
jle
inc
hlt
jg
jge
mov
xlat
jnp
ret
out
aam
and
inc
scas
jnp
lods
icebp
push
stos
lods
mov
mov
dec
jno
out
cmc
nop
and
jmp
es
dec
in
inc
push
in
mov
inc
popa
movb
xchg
aas
add
inc
add
es
fldt
mov
and
or
adc
fnstsw
inc
mov
mov
outsl
jnp
jge
jmp
shl
xor
out
add
inc
fstl
push
sbb
mov
ret
inc
add
mov
jns
jmp
cli
and
ret
or
mov
jbe
nop
adc
stos
stc
mov
addb
mov
popa
jne
js
push
decb
ja
roll
xchg
pop
xor
push
jg
out
ss
notl
cmp
push
mov
ret
jnp
jns
mov
cmp
mov
dec
lret
sbb
ds
pop
scas
mov
sub
ret
add
pushf
sub
sbbl
pop
mov
ja
xor
shll
mov
add
cltd
push
pop
ja
call
push
arpl
xor
cmp
sbb
mov
lret
lods
or
push
jno
or
mov
xchg
insb
aam
jge
pop
sub
jnp
fwait
insb
fsubl
jo
push
or
push
outsb
loope
cmpsl
jecxz
add
sbb
out
inc
imul
ret
mov
xor
fcmovbe
ds
jge
daa
lcall
cs
xchg
incl
mov
adc
mov
push
add
or
into
bound
hlt
shrb
xchg
dec
mov
jmp
adc
and
xor
mov
loopne
in
inc
pusha
push
test
pop
mov
insb
inc
adc
clc
imul
scas
add
out
enter
insb
jp
call
test
jge
fs
popa
push
dec
jecxz
pop
push
add
roll
pop
push
pop
mov
aas
and
daa
sti
popa
adc
add
aam
adc
mov
inc
aas
rcr
pusha
dec
jle
push
call
rcl
out
rcrb
add
sarl
pop
or
ja
mov
add
aad
data16
ss
xor
xchg
xchg
mov
movsb
mov
ret
add
out
or
cmpsl
jecxz
arpl
shrl
cmpsb
add
jmp
addl
arpl
or
fucomip
mov
setl
aam
shld
loope
xlat
insl
inc
pop
iret
jge
cs
dec
in
test
das
push
loopne
arpl
mov
std
pop
mov
into
sahf
xor
les
dec
in
stc
inc
icebp
jge
fidivs
xlat
leave
loopne
popl
jnp
mov
add
jl
into
jbe
jns
fisubl
adc
mov
test
add
jmp
mov
xchg
adc
mov
mov
pop
dec
das
xlat
mov
mov
call
mov
in
sbb
lds
cmp
dec
xor
addb
mov
lret
std
cmp
sti
mov
mov
sarb
clc
in
icebp
fldl
xor
int3
pop
repnz
inc
movsl
cmpsl
ret
mov
gs
push
shll
push
or
cs
arpl
lahf
push
int3
stos
ficoms
dec
fsubrl
mov
aam
inc
pop
idivl
push
and
dec
sbb
or
cmpsl
hlt
mov
int
mov
rcr
jmp
xchg
add
gs
jno
adc
cmp
inc
sarb
cmp
inc
xchg
pop
repnz
mov
adc
popf
mov
cld
cmp
pop
test
pop
nop
scas
sub
mov
daa
dec
and
outsb
push
bound
sub
add
pop
outsb
mov
test
cwtl
cmp
adc
aad
rcr
mov
mov
cmp
sbb
pop
sub
scas
or
stos
dec
stos
xor
sbb
in
mov
add
lcall
stos
jp
stos
mov
outsb
negb
fcmovnu
push
stos
cmc
jns
pop
stos
call
xchg
pop
stc
xchg
lods
outsl
sbb
dec
jl
lods
shll
fucom
stos
leave
push
pushf
test
iret
ficoms
add
cltd
sbb
movsb
pop
out
mov
es
popa
add
sub
fdivs
sub
mov
adc
lcall
gs
popa
jb
fnstsw
into
bound
lret
mov
std
dec
rcll
iret
fisttps
fbstp
push
xchg
jg
aaa
ss
aam
roll
out
loope
and
inc
cmpsb
push
ret
mov
sub
pop
lcall
arpl
xchg
mov
shrl
adc
add
test
pop
dec
test
jbe
or
xchg
daa
dec
icebp
movsl
ficoms
lahf
sub
add
mov
fwait
sti
popf
mov
out
scas
pcmpgtd
aaa
pop
dec
je
insb
outsb
jo
sbb
inc
out
inc
ljmp
xor
movsl
out
test
jp
addb
in
cli
or
push
xchg
lods
mov
icebp
jp
push
or
mov
je
je
in
lret
inc
lret
pop
leave
pop
sub
fildll
dec
stos
pop
mov
out
out
xor
sahf
aaa
cmpl
sbb
xchg
nop
lock
popl
ror
data16
adc
or
and
outsb
sbb
inc
add
fnstcw
sbbl
subb
in
movsl
inc
ret
fnsave
pop
mov
mov
aam
sahf
add
pop
and
lcall
js
mov
test
std
push
or
pop
adc
leave
into
push
push
repnz
xor
incl
cld
imul
mov
fld
push
xchg
inc
fcompp
mov
test
int3
xor
mov
shr
scas
rcll
add
pop
repz
mov
xlat
addr16
xor
and
inc
cmpsl
ret
push
imul
mov
cmp
pop
icebp
add
xchg
xchg
inc
sbb
leave
fsubl
nop
add
je
and
iret
add
sbbl
mov
mov
outsl
fcmovbe
dec
rorl
mov
scas
pop
xchg
nop
cs
adcl
xchg
sbb
pop
or
in
loop
lahf
stos
cmpsb
icebp
push
inc
lods
cmp
dec
fidivl
adc
popf
push
sub
sarl
inc
call
loop
sbb
lock
inc
ficomps
insl
mov
out
pushf
dec
test
subb
mov
add
xchg
lods
mov
xchg
mov
jg
jl
and
sbb
fisubrl
jb
mov
lret
dec
or
adcb
arpl
sub
out
pop
sbb
add
mov
xchg
dec
shll
mov
cmpsb
scas
mov
mov
ficoms
mov
je
mov
adc
xor
sub
pop
lcall
and
loope
movsb
jae
sub
dec
cmpsb
mov
mov
call
mov
dec
in
sbb
mov
xchg
sub
sub
out
jge
sti
xchg
test
sbb
sahf
cmp
mov
lcall
push
sbb
xchg
sub
jno
shll
ret
sbb
lahf
cmc
aaa
into
shlb
adc
fisubl
gs
adc
jae
lret
cmpsb
cli
iret
bound
pop
mov
out
inc
lahf
stos
dec
mov
ljmp
mov
fwait
rcrb
inc
loope
loope
out
inc
lods
pop
mov
stos
lret
pop
aas
test
jno
sbb
and
rolb
shr
fsubrl
and
dec
cli
or
or
sbb
mov
fnstenv
sti
movsb
shl
aad
inc
hlt
add
jmp
mov
mov
cli
movsb
mov
loop
adc
dec
repz
rclb
int3
movsb
sub
cmp
jo
pop
out
mov
push
ja
xchg
fsubr
xor
mov
xorl
adc
or
aas
lds
jbe
mov
xchg
rorl
mov
and
pop
sub
loop
xor
push
mov
ret
int3
lods
dec
inc
adc
rcrb
dec
push
addr16
mov
push
mov
test
jae
and
repnz
lcall
push
jae
and
je
mov
sti
xchg
mov
push
inc
cltd
fcomps
js
test
sub
fs
cmp
and
inc
iret
out
sbb
or
mov
add
xor
xchg
xchg
sub
in
int3
adc
into
stos
jne
xor
frstor
icebp
popa
xor
cltd
lock
push
out
adc
mov
xchg
mov
sahf
xor
arpl
sbb
mov
movsl
cmp
mov
mov
add
imul
and
push
out
loope
daa
or
jl
lods
std
cmp
lahf
mov
sub
and
sub
pop
les
cli
jb
mov
ljmp
jg
js
sahf
xor
int
inc
fiaddl
mov
and
push
bound
mov
mov
or
cmpsl
xlat
mov
imul
mov
adc
mov
xorb
jp
or
jb
shrb
icebp
xchg
mov
inc
ret
or
nop
cmp
push
mov
jnp
aas
add
adc
dec
inc
repz
cmpsl
sbb
sbb
xor
sub
and
inc
adc
pusha
cmp
cltd
in
mov
sbb
cmpl
adcb
and
aad
sahf
sti
testb
lcall
xchg
repz
sbb
shl
mov
movsb
icebp
in
and
jg
hlt
push
cmp
cmp
sub
shrb
inc
or
xchg
mov
sbb
push
cld
lcall
sarb
faddl
xchg
mov
cmp
pushf
cmpsl
push
andl
ss
popf
pop
enter
cmp
popa
stos
push
xchg
push
inc
cltd
fidivrs
pusha
ret
mov
cmp
jne
cs
pop
push
aam
dec
mov
call
icebp
xchg
popf
inc
mov
fcomps
test
push
daa
add
movsb
je
pusha
out
mov
jb
stos
arpl
pop
mov
shr
repz
push
inc
pop
inc
mov
mov
outsl
inc
push
add
cwtl
jge
insb
pop
bound
xchg
loope
adc
ljmp
dec
jae
fdivrs
insb
or
pop
scas
mov
push
jle
pop
cmp
pop
lds
xor
and
pop
push
jno
sub
psraw
inc
pop
mov
movsb
cmp
pusha
jmp
loop
sbbb
sbb
pop
pushf
xor
and
lahf
stos
iret
icebp
and
out
dec
pop
adc
aaa
dec
imul
outsl
sahf
xlat
jnp
add
inc
in
pop
int
cmp
inc
stos
sbb
dec
mov
ret
aaa
adc
mov
jg
adc
outsl
subl
rcl
push
idivl
or
cmp
imul
decb
fistps
or
mov
push
adc
xor
aas
fiadds
setp
out
xchg
out
hlt
fnsave
pop
sub
and
push
notl
leave
in
in
add
imul
mov
jne
pushf
cwtl
cmp
cmp
imul
dec
and
add
sbb
ljmp
jno
outsb
pushf
and
movsb
in
jmp
jno
xchg
push
imul
fsub
cmp
mov
cmp
sub
ret
jne,pn
std
sbb
jle
aaa
mov
loope
xor
ds
cmp
stos
inc
das
fstpt
jb
lret
cli
xchg
or
lret
push
adc
dec
gs
push
lods
es
fbstp
sub
push
or
sub
xor
push
jge
xor
mov
push
push
mov
lcall
mov
out
mov
out
test
enter
sbb
sub
mov
and
mov
push
filds
out
mov
xor
fs
mov
cmpsl
push
rorl
cmpsb
cmp
insl
fstpt
test
sub
sbbl
xchg
sbb
push
lods
icebp
pop
fmull
pushf
xor
into
cmp
imul
mov
cmpsb
cmp
or
jmp
adc
ss
shl
add
iret
data16
dec
scas
cmp
xor
sar
mov
mov
aas
aad
fxtract
mov
ljmp
xor
xchg
mov
mov
xchg
divb
cld
daa
mov
mov
in
movd
inc
push
in
adc
scas
negb
mov
xlat
insl
add
je
xchg
jp
enter
test
pop
call
mov
call
pop
push
imul
sbb
xor
fs
ljmp
xchg
push
jb
mov
xor
jmp
pop
shrl
movsl
adc
sub
inc
jmp
push
mov
aas
mov
jl
pop
insb
divb
sarl
adc
mov
xlat
lcall
idivl
pop
jg
dec
inc
test
fsubp
mov
imul
gs
insl
push
push
jnp
jne
mov
imul
mov
int3
sbb
xchg
push
sti
gs
ds
pop
sbb
pop
xlat
mov
arpl
sarl
int3
pop
in
adc
inc
add
or
push
shlb
or
push
or
adc
mov
cmpsb
repz
insl
and
add
dec
lods
bnd
mov
les
mov
pop
loope
lods
xchg
jge
subl
in
add
stos
xchg
inc
pop
cs
testb
bound
and
call
or
into
push
cmp
mov
js
das
stos
movsl
aaa
int
scas
xor
notb
jo
sub
mov
data16
mov
loop
inc
jmp
lea
lcall
mov
arpl
out
ljmp
leave
and
cmp
fs
mov
push
push
lods
inc
pop
push
pop
mov
lea
adc
daa
and
fstpt
push
xchg
aam
cli
jne
jle
scas
push
ss
pushf
sti
push
sti
pop
test
insl
repnz
jp
and
adc
jns
pop
xchg
xchg
dec
add
std
sub
sbb
or
add
xor
pushl
cmc
sarb
in
adc
leave
pusha
and
out
xorb
or
int3
pop
sub
in
mov
pmaddwd
xchg
dec
fisttpll
insb
dec
dec
xchg
mov
enter
xchg
ficoms
xor
call
or
mov
fldt
or
repz
addr16
mov
ds
mov
sbb
daa
adc
scas
fnsave
jge
fmull
stos
arpl
sub
sbbl
xorb
adc
orb
mov
cmp
jb
popf
xchg
inc
or
sbb
jne
mov
aam
testl
push
sub
rcrb
clc
mov
cmp
mov
aaa
jle
scas
pop
cmc
pushw
ret
repz
out
popa
aad
dec
jecxz
divb
push
cmp
mov
fcmovnbe
insl
or
es
mov
cmpsb
push
inc
pop
push
mov
add
and
and
mov
mov
cmp
add
int3
mov
rclb
mov
js
mov
xor
pop
pop
scas
mov
xor
dec
jo
push
jo
xchg
iret
lret
dec
xchg
inc
push
dec
imul
and
fs
sbb
mov
shrl
faddl
sub
jb
ja
mov
jns
int
xchg
sub
pop
sub
xchg
pop
push
out
insb
and
jo
jbe
mov
inc
cmp
and
jne
xchg
out
popa
dec
cmc
cld
xchg
daa
jno
mov
and
jae
dec
sub
jge
pop
les
add
jl
mov
jle
xor
jmp
jg
or
dec
push
mov
cmp
sub
stos
fucomp
aam
in
mulb
and
sti
pop
idivb
outsb
jge
mov
rcrb
xchg
xor
ss
push
sbb
jns
imul
push
or
mov
push
xchg
xchg
movsb
repnz
mov
mov
xchg
ret
jb
cmp
aaa
push
lods
push
sub
popf
pop
inc
xor
pop
lcall
mov
out
mov
xchg
mov
cmp
movsb
or
out
pushl
mov
cmpsb
clc
leave
push
push
or
out
push
inc
sti
lret
push
insl
add
in
add
inc
xor
mov
popa
add
add
out
call
mov
cmpsl
mov
and
add
jne
push
popf
mov
mov
jo
mov
lret
ds
mov
pop
icebp
cltd
test
sub
pop
adc
mov
xchg
mov
jno
xchg
aam
jg
out
test
sub
jne
xchg
push
dec
cmp
js
pop
jle
dec
dec
pushf
aaa
add
in
sahf
xor
cmp
aaa
into
out
xchg
lods
pop
imul
or
jae
js
or
cmp
fisubrl
dec
pop
add
jnp
sahf
and
lock
test
mov
xor
int
shl
xor
lods
mov
lock
icebp
mov
js
imul
aas
jae
incb
xchg
lds
xor
icebp
int3
test
arpl
xchg
fimull
lahf
daa
inc
sar
insb
xlat
mov
outsb
scas
or
fdivs
shlb
lahf
repz
adc
lea
cs
pop
js
idivl
scas
cltd
mov
sub
jmp
incl
sub
in
shlb
push
pusha
scas
ret
sti
xchg
fadd
aas
push
push
lods
mov
repz
sbb
test
jo
adc
xor
xchg
inc
call
movsl
push
mov
xor
xor
cwtl
lods
shlb
jo
and
and
xor
mov
push
or
imul
adc
bound
call
pop
ss
das
jns
push
mov
xor
push
pop
jecxz
or
test
cmp
cmp
sub
popa
pop
adc
dec
sub
push
outsl
enter
adc
rcrl
loope
sub
lea
popa
pusha
xchg
jbe
push
or
mov
or
imul
mov
adc
push
jae
dec
add
jecxz
mov
dec
mov
pop
ror
call
cmpsb
imul
inc
or
or
mov
jns
mov
inc
mov
jmp
or
fsts
mov
cmp
push
adc
ret
and
add
movsl
std
jo
inc
scas
outsl
fwait
rcrl
int
pop
in
stos
sbb
pop
js
push
daa
jno
xchg
lret
je
lret
movsl
jmp
and
adc
gs
sbb
mov
mov
push
stc
jmp
or
decl
iret
adc
push
frstor
subl
mov
add
xor
adc
pop
push
rep
psrad
pop
aas
shld
push
mov
out
test
pop
repnz
mov
mov
in
mov
aad
rol
cmp
cld
outsl
dec
test
mov
pop
or
mov
cli
mov
mov
cmp
sbb
mov
sub
test
xchg
imul
and
sar
sub
mov
xchg
out
cmp
mov
jg
xor
mov
pop
push
inc
fildl
int
pop
sbb
push
insb
sub
mov
mov
add
mov
push
shll
jo
pop
das
sbb
or
adc
loope
popf
dec
mov
lret
stos
daa
sahf
mov
push
push
mov
test
in
mov
pop
bnd
inc
andb
movsl
adc
sbb
inc
sub
ja
outsb
or
cmp
adc
loope
mov
lcall
insl
cmp
stos
sbb
out
jecxz
loop
aaa
nop
xor
int
ja
decl
arpl
pop
cmp
stos
das
shlb
dec
rcrl
jns
fldt
jnp
mov
jmp
call
xchg
cli
movsb
lods
pop
cmp
sub
or
aad
mov
xchg
popf
inc
cmp
or
add
push
xchg
or
aam
mov
shll
jbe
cmp
lods
jo
or
xor
dec
int
dec
fdivrp
xchg
ror
cltd
lock
sbb
jecxz
mov
insl
cmpsb
sub
jo
mov
arpl
stos
aaa
jo
push
mov
jecxz
push
scas
shl
jge
mov
pause
add
pop
cmp
mov
jl
cli
sub
jne
or
adc
ja
in
mov
or
push
out
xor
mov
xlat
test
cmp
imul
out
inc
clc
xchg
movsb
jns
lret
mov
sbb
pushf
cmp
test
and
call
push
fsubrs
test
adc
shll
add
mov
jne
insl
fsubrp
cmpsl
les
mov
nop
xchg
sub
adc
mov
mov
mov
movsb
jne
jge
lock
and
or
push
loope
xchg
or
nop
stc
or
sbb
movsb
cmp
fisubrl
ljmp
out
pop
xchg
xor
outsl
push
mov
testb
cli
pop
and
insb
inc
dec
loop
add
repnz
imul
aam
mov
add
xor
shll
jg
xor
movsl
mov
movzbl
int3
fs
cmc
popa
push
outsl
imul
mov
sbb
inc
or
inc
mov
in
xor
push
inc
push
dec
mov
xchg
and
push
out
jns
dec
cmc
cs
jne
or
fwait
jp
mov
and
pop
and
gs
and
lock
xor
jmp
les
push
hlt
push
test
mov
adc
rcl
icebp
mov
fwait
test
out
cs
jmp
mov
jnp
lds
popa
dec
in
clc
jge
cs
and
inc
jl
pop
fsubrl
xor
in
test
dec
add
fwait
sti
outsl
sub
pop
pushf
pop
mov
movsl
jge
into
pop
adc
cwtl
test
push
mov
cmc
push
in
out
icebp
or
div
dec
push
jo
ds
and
test
add
push
movsl
movsl
pop
enter
subl
stos
pop
push
ret
mov
inc
mov
imul
idivl
adc
xchg
bound
add
test
inc
add
jmp
test
xor
dec
mov
xor
or
clc
popf
paddb
lods
test
cs
int
jnp
data16
pop
ss
xchg
pop
inc
push
push
inc
sub
add
inc
cmp
sub
jno
push
clc
pop
pop
insl
push
adc
cmpl
cmp
loope
shll
roll
loop
push
addr16
xor
or
xchg
cmp
in
scas
jb
les
insb
es
in
xor
and
mov
addr16
filds
xor
push
popa
in
or
or
pop
dec
fisttps
cmp
pop
mov
sub
jmp
mov
stc
lahf
adc
sbbb
mov
inc
fcomip
inc
into
xor
push
stos
das
push
cmpsb
pop
cmp
ss
es
add
sti
sbbl
imul
out
xchg
les
gs
sub
sub
xchg
cmp
add
push
and
into
cmp
aad
adc
fwait
or
and
idivl
call
xor
clc
jne
xor
lods
xchg
sub
mov
dec
push
or
test
xor
in
arpl
das
add
cmp
imul
imul
aam
lock
inc
push
inc
mov
xor
jb
mov
lds
push
jne
ds
pop
jo
mov
icebp
loop
and
mov
clc
mov
test
lods
mov
mov
inc
add
fcomps
xor
std
out
movsl
mov
loope
mov
xlat
push
inc
xchg
aad
push
lahf
sub
xchg
jae
sub
in
xchg
adc
out
xor
mull
or
arpl
ds
add
in
sahf
mov
fnstsw
add
jle
mov
lock
pop
jmp
decb
jae
mov
pop
aaa
push
add
inc
out
test
pop
push
sub
orb
mov
cmp
cltd
mov
cmp
pusha
sbb
jecxz
lock
or
in
das
inc
scas
ret
cmp
xchg
lods
out
inc
cmp
cs
lahf
test
in
mov
pop
mov
dec
cmpsb
dec
dec
loope
icebp
add
mov
and
rcrb
xchg
je
std
pop
adc
sti
fwait
out
std
or
imul
adcb
cmpsb
lock
mov
scas
push
fsts
cltd
mov
or
and
leave
mov
mov
ljmp
mov
cmc
pop
loopne
fsubrs
and
or
pop
pop
pushf
mov
mov
clc
shrb
mov
loopne
rorl
xchg
xchg
mov
sub
sbb
ja
sub
or
and
jecxz
mov
cs
cmpsb
xchg
inc
int
dec
pusha
dec
stos
fistl
xchg
sbbl
fldl
stc
mov
cmp
rcll
fnstcw
lret
cmpsb
lea
and
pop
sahf
adc
pop
mov
xchg
mov
aam
out
mov
add
push
mov
xor
cmp
push
pop
add
jne
movsb
push
fidivl
cli
adc
flds
fidivs
inc
pop
incb
aaa
clc
adc
cmp
insb
push
push
roll
je
lea
inc
fistpl
jo
lret
adc
stos
add
ss
cmp
sbb
adc
sbb
and
and
lods
and
sub
loopne
mov
mov
in
mov
adc
vmread
mov
mov
nop
inc
int3
testl
cli
mov
rorl
js
std
lods
pushf
pop
dec
in
je
push
lea
dec
pop
loope
inc
push
scas
sub
jno
jb
mov
jecxz
orl
rcrl
out
ja
mov
imul
mov
or
pop
inc
imul
in
aas
cmc
or
mov
xchg
inc
mov
or
cmp
in
xchg
lcall
insb
in
je
cmpsl
popf
ljmp
or
jnp
jl
or
lods
data16
bswap
push
aaa
mov
inc
in
nop
sbb
fucomp
fwait
loopne
mov
jg
cltd
imul
lret
xor
push
std
mov
xor
in
xor
dec
andb
cmc
jnp
lea
mov
stos
aas
xorb
pop
fs
add
insb
mov
int3
cmpsl
and
lock
or
and
push
cmpsl
imul
mov
icebp
mov
iret
or
pop
inc
mov
idivl
jle
pop
sbb
notb
cld
add
xor
popa
pop
pushf
jmp
cmp
push
push
jo
dec
jne
popl
popf
pusha
and
pop
cmp
push
xchg
and
sbb
add
in
aas
rorl
outsl
rcll
push
cld
push
test
sub
mov
mov
adc
repnz
mov
xchg
xor
xchg
jp
inc
jmp
cwtl
pop
push
mov
in
sub
faddp
clc
dec
mov
es
js
lds
lock
xchg
lret
int
loope
xor
dec
out
jle
inc
pop
ror
cmp
fbstp
xchg
pop
jbe
arpl
dec
leavew
pusha
cwtl
loopne
mov
shrl
jbe
nop
jg
push
mov
push
ret
dec
jo
icebp
xlat
and
or
sbb
std
es
push
jp
mov
sub
enter
dec
mov
pop
xor
mov
sti
and
push
cmpsb
pop
dec
dec
ja
cmp
in
imul
pushf
jne
outsb
mov
mov
in
test
pop
push
mov
xor
fstps
jnp
loope
ret
fwait
xlat
xchg
sub
imul
mov
xchg
sarl
sbb
mov
mov
rcr
mov
jge
pop
fmuls
jae
sub
subl
adc
xlat
jne
xchg
aad
lret
pop
les
add
push
popa
icebp
mov
in
stos
shll
adc
je
sahf
cwtl
pusha
rclb
xchg
test
je
sub
add
push
xchg
mov
mov
imul
sti
es
xchg
rorb
stos
jae
mov
xchg
push
daa
or
insb
sarl
sbb
jle
xchg
cmp
and
das
mov
leave
or
aas
xchg
outsl
fisttpll
fcomps
shlb
popa
inc
mov
ljmp
xchg
dec
mov
movsb
or
pusha
popf
pusha
iret
fisubrs
push
xor
sub
fprem1
add
and
rorl
sbbl
fcoml
cld
cmc
clc
mov
outsb
subl
mov
daa
mov
mov
pop
pop
push
pushf
push
hlt
cmp
add
ret
pop
cwtl
repnz
lods
dec
pop
jbe
mov
push
adc
rclb
aam
cmp
pop
inc
pop
pushf
jg
data16
fadd
jmp
pushl
cmpsb
faddl
aas
adc
sub
scas
inc
cmp
cld
pop
out
lcall
xchg
cmp
jg
ljmp
mov
xor
std
mov
rcrl
xchg
jl
sub
adc
pop
aam
or
movsl
cli
test
pushf
hlt
push
mov
xor
xor
sub
adc
push
sbb
adc
pop
xor
push
lcall
cld
sub
pop
fsubl
mov
xor
in
aas
ds
inc
data16
jecxz
xor
cli
les
bound
scas
inc
lcall
mov
aad
xor
cmpsl
mov
inc
adc
ss
hlt
inc
aaa
push
sbbl
ja
cli
out
xor
adc
lock
add
adc
jo
xchg
sub
imulb
push
lods
pop
xchg
push
leave
shlb
or
sti
inc
push
insl
call
aad
push
fidivl
ret
lods
mov
lahf
data16
adc
pop
mov
jmp
test
mov
lahf
test
mov
add
jo
aas
roll
sub
mov
xchg
leave
push
and
push
or
sbb
popa
pusha
das
push
ja
aaa
nop
stc
cmp
addr16
adc
loop
in
bound
or
sub
inc
fildl
rcrl
out
push
std
popl
das
sahf
dec
movsb
mov
push
sub
mov
jnp
shrb
scas
les
mov
dec
lock
loopne
loope
mov
stc
and
lods
jno
and
mov
scas
pop
sbb
xchg
addr16
data16
ret
add
je
xor
fs
mov
mov
jle
and
sub
arpl
sub
jle
cmp
mov
adc
ds
icebp
imul
sbb
add
out
xchg
xor
pop
mov
xchg
gs
dec
pop
mov
repnz
imul
or
add
adc
orl
lret
imul
fldenv
push
fdivrs
scas
enter
repnz
jmp
fisubrl
loope
dec
in
scas
fistpl
insb
or
dec
mov
adc
dec
sahf
mov
shlb
insl
mov
dec
hlt
mov
sbb
andps
loope
cmc
movsl
nop
add
repz
sbb
call
movsl
sbb
cmp
sbb
mov
lock
ret
and
scas
mov
sub
lcall
sbb
add
and
or
jge
dec
sub
mov
orl
dec
adc
je
mov
push
mov
dec
imulb
pop
cmp
fwait
dec
cmp
pop
rcl
pop
fistl
movsl
xor
repnz
repnz
jp
fnsave
into
push
jno
inc
out
adc
hlt
test
add
popf
movsb
mov
push
ret
pusha
loop
mov
or
inc
in
dec
sub
sahf
and
dec
lock
mov
and
mov
incb
pop
out
movsb
push
mov
lds
and
xchg
pushf
jge
cmp
ffree
js
mov
lock
mov
inc
sahf
or
jns
mov
loopne
mov
roll
mov
xchg
frstor
out
add
and
cmpsl
push
psubw
cltd
js
push
xor
mov
fs
xor
loope
xchg
int
xchg
cwtl
mov
xchg
sbb
lds
lret
cli
add
push
faddl
lret
lds
mulb
pop
ja
mov
into
imul
in
sbb
xlat
mov
xchg
clc
sahf
imul
jo
mov
jns
xor
mov
cld
push
in
inc
out
push
sbb
cmp
pop
or
xadd
xor
push
test
fcompl
jne
stos
addr16
sbb
dec
rol
xchg
out
sbb
pop
jmp
cmp
mov
call
mov
mov
loopne
fsubl
ret
mov
fimull
and
inc
pusha
in
movsb
cmp
ret
in
mov
xor
pushf
subb
ja
test
xlat
jnp
sbb
into
pusha
inc
add
mov
je
mov
inc
adc
mov
sub
mov
sarb
jmp
add
stc
adc
adc
loopne
and
inc
xchg
pop
popf
fs
mov
pusha
pushf
xchg
sub
xchg
pop
out
xchg
ss
fmuls
push
mov
in
xor
xor
mov
in
cmp
pop
ret
movsl
adc
into
popl
out
inc
xor
fdiv
sub
and
out
push
pusha
in
jle
xchg
sbb
xor
jecxz
mov
xchg
negb
cwtl
aaa
mov
mov
inc
dec
adcl
enter
mov
mov
aas
mov
xchg
cmp
pusha
mov
push
jecxz
jle
test
dec
sub
add
rcrl
imul
add
popf
in
mov
test
clc
dec
xor
cmp
mov
rcrb
mov
imul
xor
mov
lret
outsl
mov
jle
loope
add
mov
dec
xchg
cmp
cs
cmc
cmp
test
cmpsb
mov
or
jne
cmp
dec
push
in
das
inc
add
push
adc
ss
movsb
sub
pusha
pushf
test
or
jle
sahf
add
dec
daa
inc
lret
add
inc
inc
push
stos
dec
jecxz
jne
xchg
iret
ss
add
dec
movsl
and
scas
add
inc
sub
add
inc
movsb
pop
out
pop
repz
xchg
icebp
movsl
mov
sbb
popa
imul
iret
stos
adc
lock
and
mov
dec
sbb
push
jmp
or
jb
int
cltd
daa
in
stc
cmp
inc
in
mov
leave
xchg
mov
or
mov
add
sbb
pusha
sbb
dec
popa
add
es
push
out
or
es
push
cwtl
sub
or
icebp
pop
mov
in
aam
icebp
mov
bound
jae
push
mov
sbb
into
test
pop
inc
xor
cli
fcompl
or
push
mov
sahf
inc
dec
data16
mov
jne
sarb
pop
mov
or
test
scas
pop
test
cmp
neg
xor
lret
cmp
fst
jbe
in
lcall
push
pusha
cmp
in
out
ret
test
shl
jmp
loop
dec
das
sarl
int3
rcrb
testb
cmp
lahf
mov
jae
call
stc
je
mov
out
std
into
add
in
cmp
and
pop
jbe
push
adc
mov
and
ret
aad
popa
fwait
mov
mov
xchg
inc
and
aam
test
icebp
mov
stos
jno
lcall
xor
push
scas
lock
push
push
loopne
mov
adc
lock
pop
scas
frndint
cmpsl
xor
mov
loopne
mov
and
pop
push
arpl
or
shlb
imul
jbe
xchg
mov
cli
and
jg
negb
xchg
aas
jle
xor
cmp
adc
mov
inc
in
mov
xchg
repz
cmpsl
sbb
xor
pop
adc
std
mov
mov
lds
or
pop
push
pop
notl
jle
sbb
push
mov
out
xchg
pop
or
xor
rcrb
add
scas
sbb
stos
pushf
fnstenv
ret
inc
push
test
stos
and
mov
lods
inc
popf
add
stos
dec
popaw
inc
dec
lea
cmp
mov
mov
cwtl
fmull
xchg
into
fcompl
jmp
push
jmp
ret
lret
push
mov
jno
ja
cwtl
mov
pop
dec
loop
pop
add
iret
sub
mov
mov
cld
lods
addl
sub
xchg
sub
out
into
lcall
in
test
dec
rcr
cli
test
mov
call
insl
add
daa
hlt
mov
push
xchg
xchg
push
jo
sbb
arpl
lods
sarl
fstps
cs
jecxz
aas
push
xchg
icebp
inc
push
inc
mov
mov
pop
out
fsts
jmp
xor
repnz
push
sub
mov
xchg
cmp
pop
nop
cwtl
movsb
mov
arpl
test
inc
jmp
mov
xchg
in
movsb
sti
jno
sub
lahf
lcall
cmp
jg
mov
mov
push
test
iret
mov
push
dec
add
cmp
pop
aam
std
xorb
mov
mov
mov
sub
cmc
xor
sub
test
dec
mov
fisttpl
push
pop
dec
rcrb
imul
aaa
std
loopne
add
pop
and
adc
jbe
jae
mov
in
fwait
mov
jg
jno
push
fsts
lds
imulb
lods
fildll
adc
xchg
mov
xor
or
ljmp
or
jb
enter
lock
ljmp
insb
loope
sbb
cmc
aaa
xor
lret
outsl
sbbb
pop
jae
jecxz
cmpsb
inc
hlt
mov
and
adc
les
and
push
sbb
sbb
ja
adc
jnp
jno
imul
out
inc
fcmovne
or
popa
popa
lea
stc
ret
sbb
jg
aaa
push
movsl
mov
xchg
mov
pop
das
mov
add
mull
push
sub
js
fwait
movsl
test
adc
pusha
daa
push
add
rcll
inc
lret
int3
arpl
mov
fs
lret
sub
out
xor
pop
jg
jge
test
insl
dec
test
or
popa
and
popf
and
lods
xlat
scas
aaa
loope
stos
pop
sahf
jo
push
roll
xchg
fimull
sub
cmp
dec
iret
xor
fistpll
add
xchg
push
pop
cmp
jp
rorb
out
push
into
xchg
adc
push
sbb
push
ret
jle
dec
mov
les
insl
into
enter
ret
mov
cmpsl
sbb
cs
xchg
fiadds
jecxz
test
mov
mov
aas
shll
fnsave
pusha
dec
mov
cld
push
mov
inc
pusha
adc
test
lods
fdivrl
lea
out
popf
or
lock
test
popa
push
push
popf
outsb
dec
push
sbb
xor
nop
pusha
lea
sbb
out
fisubs
loop
shr
icebp
push
imul
cwtl
lods
mov
addl
sub
xor
xor
dec
out
testb
fadd
pop
push
repz
pop
dec
xor
push
jecxz
sbb
jmp
mov
idivb
jae
pop
icebp
pop
fsubrs
sub
imul
push
cmp
lret
movsl
cmp
scas
inc
mov
ljmp
cmp
popa
enter
mov
cmp
xchg
aam
leave
sbbb
add
sbb
js
cld
imul
inc
out
inc
mov
mov
notb
sub
in
stos
adc
xchg
sahf
data16
or
loopne
jae
xor
sub
jmp
sbb
push
jbe
nop
or
mov
jb
push
sub
aam
cmp
cwtl
imul
xor
and
mov
cmp
pop
fcompl
push
pop
sbb
lock
pop
jo
add
icebp
mov
jno
inc
mov
aad
fisttpll
xor
ds
add
sub
xchg
pop
xchg
mov
mov
lock
lret
mov
adc
inc
dec
pop
ret
cmp
cmp
insb
push
out
jb
xlat
insl
in
jo
mov
decl
cmp
inc
cmp
outsl
push
push
inc
andb
mov
test
xchg
repz
aas
mov
mov
cmpsb
fdivs
jmp
cltd
sbb
xor
push
adc
pop
lahf
push
mov
mov
jne
fildl
mov
loop
fwait
cld
fwait
dec
test
mov
jae
cld
pop
xchg
xchg
push
mov
repz
or
out
cld
mov
aam
sbb
outsb
sti
loope
call
and
ret
out
arpl
mov
out
adcl
lret
pop
xor
idivb
mov
xor
test
cwtl
cmp
mull
ret
or
xor
fwait
lock
adc
js
sbbl
dec
hlt
fnstenv
flds
insb
pop
in
lds
pop
ret
call
and
and
ss
jmp
dec
mov
jl
mov
and
mov
cmpsb
cmc
jno
sti
pop
push
daa
jnp
adc
cwtl
je
mov
incl
daa
xlat
push
mov
xchg
cmp
sbb
mov
dec
mov
xchg
scas
push
adc
jmp
jg
jo
pop
notb
inc
push
add
fcompl
lcall
insl
sbb
add
test
and
xchg
xchg
sub
lods
jno
cmpsb
into
in
cmp
push
inc
into
lods
mov
and
into
and
in
sbbl
xchg
pop
jns
xchg
dec
and
shrl
inc
leave
int
clc
pop
out
sbb
add
jne
in
jecxz
orb
push
xlat
cmp
nop
push
call
dec
pop
inc
nop
std
rolb
dec
js
arpl
sub
mov
and
pop
xchg
sub
insb
inc
shrb
xchg
lret
jbe
in
push
in
xchg
pop
fcomip
cmp
xchg
mov
push
push
xor
aam
mov
inc
pop
cmp
push
leave
pusha
scas
push
je
mov
mov
nop
in
adc
jmp
aas
loop
cmpsl
xlat
aaa
mov
mov
daa
mov
das
inc
adc
mov
cli
xor
jmp
addl
sub
aaa
test
jl
jge
ds
mov
cltd
add
inc
sub
and
lcall
je
in
test
ret
dec
sub
rcrb
lret
std
cltd
data16
subb
and
jb
idivb
add
aad
dec
and
dec
push
xchg
loop
cmpsb
adc
xlat
sbbb
out
inc
jns
or
out
pop
inc
roll
adc
pop
out
mov
cli
adc
filds
leave
fistpll
test
ds
fists
dec
pop
push
jle
test
test
test
xchg
sub
in
cmp
xlat
scas
scas
out
dec
loop
adc
add
imul
int
call
divl
stos
hlt
scas
inc
cli
cmp
lahf
call
adc
or
add
fs
xchg
mov
push
rcrl
cmp
push
push
sbb
cmpsb
sbb
fidivs
xlat
je
or
dec
add
repz
push
sbb
adc
cmp
sub
cli
xchg
lods
lret
sbb
aas
inc
leave
jo
insb
fbstp
jp
lds
cmp
gs
dec
push
insb
fcomps
iret
outsw
mov
mov
sub
in
sbbl
add
push
lea
sbb
sti
cmc
sub
pop
sub
dec
jge
jo
mov
mov
jg
mov
ret
fisttps
jno
sub
cmp
jg
xchg
stos
movsb
call
bound
adc
call
mov
sbb
add
sbb
pop
gs
in
jmp
push
mov
push
aad
sub
push
inc
ret
jl
dec
insl
dec
xchg
jl
icebp
out
cmc
or
lea
fcmovnbe
popa
push
aad
or
aas
movsl
or
bound
lods
fdivr
or
cmp
lods
rclb
sub
xchg
sbb
pop
rol
mov
mov
push
stc
cwtl
out
ret
adc
nop
mov
cmp
adc
mov
add
sub
aaa
idivb
mov
mov
fdivrl
ljmp
aad
jne
dec
mov
fcoml
xchg
int
mov
int
push
cwtl
stos
cs
call
cmpsl
dec
push
out
test
fwait
cwtl
lea
aad
test
pop
mov
test
adc
and
ret
and
cmp
mov
and
test
or
insb
add
jo
xchg
lret
adc
push
lock
jns
pop
mov
jecxz
sub
cmp
xor
sbb
cltd
inc
and
movsb
aaa
bound
push
cmp
in
popl
cmp
mov
les
dec
push
mov
push
std
pop
lds
outsl
daa
sub
or
nop
adc
pop
stos
sub
push
stc
pop
inc
out
stc
pop
out
repnz
sbbb
sbb
mov
aam
or
push
mov
ficomps
and
adc
adc
lock
dec
fs
push
mov
lcall
popa
aas
in
imul
push
pop
pop
loopne
push
ds
data16
movsl
std
jns
test
fisubrl
sbb
testb
sub
dec
mov
mov
jb
fidivs
jg
inc
fcmovbe
mov
or
popf
mov
arpl
jge
or
arpl
xor
xor
sbb
or
mov
leave
test
cmp
in
fwait
pop
jbe
pushf
mov
xor
cmp
popa
jb
sbb
dec
mov
adc
ficoml
sub
mov
les
cmc
clc
mov
call
loopne
inc
xlat
push
pop
jno
fbstp
add
pop
fsubrl
lods
mov
ds
push
pop
rol
xchg
outsl
push
lods
mov
mov
cmpsb
movsb
fmull
cmpb
mov
xor
cwtl
les
xchg
inc
mov
imul
cmp
adc
daa
fldenv
sahf
sub
or
inc
push
and
rcl
pop
punpckldq
leave
lret
jb
inc
fcmovnu
jecxz
shlb
cs
lret
jne
xchg
es
mov
iret
inc
sub
in
mov
xchg
faddp
mov
mov
push
cmpsl
notb
test
lods
sub
xor
testl
dec
push
cmp
fwait
jae
scas
sub
sarb
test
pop
rcl
adc
pop
dec
pusha
clc
jnp
pop
lock
or
cmp
mov
or
ficompl
mov
imul
imul
push
push
mov
aad
pop
inc
incb
pop
hlt
cmc
lret
jns
jle
js
mov
sub
cmp
xchg
jmp
aam
lahf
movsl
cmp
roll
div
mov
pop
sbb
shrl
mov
mov
xor
or
push
jmp
addr16
inc
insb
mov
dec
mov
int
push
call
js
inc
mov
and
cs
jnp
push
push
int
repz
or
mov
dec
ficomps
inc
pusha
inc
push
jmp
or
push
in
xchg
inc
jb
mov
jae
add
jne
sub
ss
xchg
dec
rcr
cs
inc
jp
mov
cs
mov
dec
mov
cwtl
cmpsb
cmp
push
in
js
sbb
out
fiadds
inc
xor
int3
repz
mov
dec
inc
cli
xlat
mov
call
fs
or
ss
sbb
js
movsl
ds
cltd
push
or
in
and
adc
test
popf
jecxz
clc
rcll
jg
int
fbstp
or
adc
pop
sarl
mov
mov
cltd
and
mov
xchg
sbb
popa
inc
add
and
dec
pushf
fndisi(8087
cmp
cmp
inc
mov
pop
sbb
int3
fwait
outsl
inc
clc
dec
fxch
cli
sbb
xor
icebp
xor
inc
mulb
xor
mov
cld
or
call
sbb
pop
mov
mov
je
arpl
pop
xchg
emms
pop
mov
xchg
dec
pop
test
repz
xlat
jecxz
or
sbb
mov
jnp
add
in
push
pop
mov
dec
fsubrl
iret
out
insb
jb
xor
jbe
dec
inc
rorl
adc
xlat
icebp
mov
inc
stos
inc
frstor
imul
mov
add
sbb
and
movsb
shlb
inc
sahf
add
inc
pop
and
sbb
xchg
jge
xchg
jae
hlt
cmp
lret
sub
aad
jge
xchg
lcall
jae,pn
dec
dec
jmp
test
mov
repnz
xor
aaa
xchg
call
push
pop
addb
mov
adc
jns
pop
lret
add
arpl
push
and
push
jne
push
mov
xchg
test
repz
pop
out
popf
enter
lret
jns
xchg
pop
sub
jbe
and
jne
inc
xchg
add
inc
and
pop
push
or
cs
popa
dec
cmp
push
test
mov
inc
jbe
jmp
cltd
xchg
sar
fsubrl
js
fs
fsubrp
add
jmp
in
push
jecxz
cmc
push
mov
enter
jl
add
lea
mov
inc
push
in
ja
mov
mov
mov
mov
add
inc
popf
out
les
and
popf
shl
insl
pop
add
aas
dec
push
adc
push
popf
adc
lret
inc
xchg
xor
jmp
jno
push
dec
shrb
sbbl
add
lods
addr16
push
dec
addl
pushf
dec
mov
pushf
push
stc
jmp
into
lds
pop
push
ja
cmp
lods
lods
das
ja
out
mov
mov
xchg
and
inc
outsb
psraw
xor
add
stos
inc
nop
mov
ret
out
and
jne
push
loopne
arpl
aad
mov
imul
pop
push
popa
xchg
dec
aaa
sub
add
out
pop
scas
pop
push
xchg
aas
iret
mov
inc
xchg
pop
pop
leave
mov
adc
shlb
rcrl
sub
jg
xchg
push
sub
adc
imul
ja
or
hlt
or
scas
dec
sub
repnz
das
inc
ja
sub
aaa
int
out
inc
mov
scas
push
jbe
and
add
pushf
sbb
mov
push
cs
jns
repnz
xor
mov
xor
mov
ljmp
cmp
orb
andl
mov
xor
or
into
test
xchg
mov
jecxz
xor
into
int3
fsubs
mov
push
outsb
xor
in
xchg
notb
mov
das
pop
sbbl
imul
pop
mov
lds
jge
adc
pop
lcall
cmp
popa
adc
push
jg
loopne
adc
fwait
mov
pusha
nop
leave
arpl
mov
sbb
movsb
nop
ret
jnp
mov
mov
fucom
jne
cld
stos
divl
leave
mov
or
inc
mov
imul
lock
clc
inc
in
cmc
aaa
adc
fdivrs
xor
push
dec
fcomps
sbb
sub
sbb
jmp
xchg
jl
push
cmpsb
add
mov
jmp
push
movsb
aas
jmp
mov
fcmovu
sbb
and
loop
cmp
aad
in
jp
mov
cli
sbb
cmp
mov
fld
push
jmp
stos
cwtl
jo
inc
mov
jbe
mov
inc
repnz
pop
iret
dec
sub
sub
jmp
inc
sbb
jnp
mov
incl
and
cmp
call
cmp
enter
mov
mov
xchg
inc
pop
mov
adc
ret
fdivs
jl
push
loope
bound
enter
jmp
mov
ss
shl
sarb
inc
decb
pop
jbe
jg
iret
fisttpl
int
mov
cmpsb
jp
jp
fldenv
in
xchg
add
test
sub
add
pop
sbb
test
dec
mov
add
xchg
push
pop
cmp
test
cmp
add
leave
mov
cmp
xchg
cmp
pusha
xchg
scas
mov
scas
mov
inc
insb
rolb
notl
jmp
adc
add
pop
test
pushf
jg
and
inc
and
mov
xchg
pop
popf
adc
aaa
mov
movsl
test
mov
call
lret
or
data16
mov
int
stos
in
xchg
mov
enter
add
dec
ss
insl
xchg
ljmpw
psubd
dec
cmpl
pop
push
dec
ds
sub
cmp
jns
fistpl
mov
push
mov
push
mov
sub
push
xlat
pop
add
lods
dec
dec
stos
inc
int3
addr16
xor
cmp
cmp
fucomi
adcb
pop
lret
movsl
pusha
jge
sbb
ficomps
stos
mov
scas
test
mov
rorb
ror
add
and
and
repnz
out
pop
shrb
ja
xchg
fs
test
repz
jbe
push
das
inc
mov
mov
jo
sbb
fwait
sarb
shll
jmp
jae
sbb
lods
cmp
add
or
inc
lretw
lcall
int3
lods
jecxz
push
mov
jle
add
iret
ds
mov
sub
mov
fisubrl
in
fs
push
mov
das
fsubs
ffreep
and
jg
sub
or
movsl
mov
mov
enter
aaa
push
lea
sbb
inc
pop
cmp
push
or
jbe
pop
fstpt
stc
clc
xor
sub
andb
cwtl
mov
push
insb
sub
push
in
dec
jp
lock
and
pop
imul
xor
xchg
insb
sub
push
mov
arpl
lock
cmp
insl
and
jp
push
sarb
sub
mov
push
aaa
jg
push
call
and
mov
movb
jecxz
mov
xchg
in
mov
cmc
push
mov
mov
cld
cmp
and
fs
daa
lahf
ss
lea
push
ret
dec
mov
test
cmc
pop
pusha
push
cmpsb
jge
das
mov
es
jmp
mov
std
sbb
dec
pop
das
push
out
sbb
movsl
mov
mov
jmp
mov
xchg
lods
cli
shl
pop
or
push
dec
push
mov
mov
int3
pop
test
dec
into
dec
stc
loope
lock
sbb
and
arpl
mov
sbb
adc
popf
sub
pop
test
mov
aam
xchg
and
jb
shlb
cmpl
sarl
xor
out
inc
mov
or
jmp
and
lds
std
pusha
push
int
nop
or
xchg
adc
cmpsb
sbb
jle
xor
lods
xlat
sbb
sub
or
fnsave
push
jp
jns
stos
adc
cmpsb
dec
pop
mov
popf
in
das
das
mov
adc
cs
jnp,pn
cltd
ret
jp
imul
sub
and
std
sub
sbb
dec
retw
cwtl
loopne
leave
fsts
loope
pusha
push
push
cwtl
sub
repz
das
dec
pop
hlt
jp
test
shl
dec
jg
rolb
add
add
movsb
aam
arpl
loopne
call
imul
ffreep
ficomps
pusha
and
je
dec
lret
bndstx
int3
mov
ljmp
ja
jg
and
push
jae
xchg
nop
mov
push
sub
int3
pusha
jb
sub
and
push
mov
inc
fnstsw
mov
cld
js
inc
out
jns
ret
cmpsb
xchg
pop
enter
dec
push
jb
cmp
jg
cmc
jmp
pusha
ds
adc
insl
pushf
mov
jmp
and
push
sub
xorl
jge
mov
dec
fs
vpmaddwd
pusha
aaa
or
jl
adc
popf
popa
mov
xchg
xor
mov
test
or
mov
fidivl
add
data16
xchg
jae
pop
in
daa
lret
mov
sub
push
das
rcrl
js
inc
lret
cs
sahf
jecxz
test
xchg
mov
jns
jge
cs
aad
inc
or
inc
jb
xor
sub
inc
cwtl
cld
inc
std
ss
push
push
and
push
sti
repnz
dec
leave
and
jno
push
out
addb
or
popa
aaa
shld
test
sbb
lret
push
aas
bound
push
dec
sub
mov
xchg
or
xchg
js
aaa
mov
mov
push
mov
arpl
sbb
cli
mov
adc
stos
push
dec
scas
dec
push
mov
outsl
jl
cmpsb
sub
stos
dec
pcmpeqb
jl
clc
std
addr16
sbb
dec
popa
xlat
imul
stos
xchg
sbb
jp
cli
fwait
je
fnstcw
aam
xchg
loopne
push
idiv
addr16
jmp
fsubs
fstpt
adcb
mov
xchg
insl
push
loopne
jbe
sub
and
shl
pushf
call
in
push
out
push
adc
es
inc
imul
cmp
shrl
add
add
mov
sbb
push
nop
or
pop
add
leave
lods
mov
mov
xor
clc
daa
mov
sbb
cmpxchg
scas
add
imul
out
jae
mov
stos
outsb
cs
pop
int
ret
mov
fistps
sub
dec
add
push
or
mov
cmc
mov
mov
push
ss
jmp
jecxz
hlt
sbb
mov
sbb
push
cmp
es
dec
mov
lea
aas
pop
xchg
ja
movb
aad
inc
aas
sbb
movsl
inc
clc
adc
addr16
add
fs
sub
pop
sub
dec
cmpsl
mov
cltd
xor
nop
shlb
mov
mov
rcl
out
jno
cmc
rcr
and
aad
and
cmpb
rcrb
add
scas
minps
cmp
add
jb
sbb
bound
nop
lock
hlt
popa
adc
daa
add
cmp
subl
fwait
rorb
pop
cmp
scas
shl
dec
leave
ret
xlat
add
out
test
adc
sub
ja
cmpsb
pop
fnstsw
es
pop
mov
scas
ret
pop
arpl
mov
fsubp
xchg
mov
pop
xchg
mov
enter
xor
lahf
stc
shl
dec
in
repz
mov
rcr
and
add
mov
xor
bound
xchg
mov
mov
popa
les
sbb
int
dec
addr16
inc
je
test
in
pop
fwait
insb
cmp
fsubrl
gs
mov
fists
mov
cmp
stos
dec
out
mov
repnz
sti
cmp
test
cmp
sub
test
lret
pop
movsl
cld
xchg
mov
lret
pop
sbb
pop
std
pop
les
rcrb
mov
jge
ret
push
fbld
jbe
lock
inc
scas
adc
rcll
mov
aam
sarl
dec
xchg
dec
xor
in
loopne
int3
sbb
out
test
xchg
stc
inc
ficoms
out
sar
inc
mov
dec
mov
insl
xchg
stos
sahf
mov
fiaddl
test
mov
xchg
mov
dec
mov
push
aad
or
loope
mov
lahf
push
lock
sub
int3
nop
daa
cli
mov
pop
mov
sbb
dec
test
jb
dec
out
sti
rcl
das
insl
add
xor
loop
inc
cwtl
das
jae
mov
sub
add
jge
scas
out
std
adc
push
les
ds
in
xlat
pop
fbstp
cld
sbb
dec
push
pop
out
jne
out
sub
add
ss
sub
xchg
insl
lods
add
fisttpll
cmp
out
mov
inc
adc
jne
xor
push
mul
dec
sub
and
repnz
sti
cmpsb
cmpsl
push
jl
xchg
dec
dec
xor
add
arpl
cmp
lret
jecxz
sbb
jecxz
cltd
pop
xor
mov
scas
mov
test
xorl
jnp
movsb
cltd
aad
adc
js
lds
mov
add
sbb
adc
mov
lret
test
jg
jmp
fs
adc
inc
mov
push
sub
out
popf
jnp
xor
or
cltd
sub
inc
daa
clc
mov
call
mov
add
es
mov
sbb
xchg
xchg
cmpsb
inc
dec
dec
sub
insl
les
and
mov
xor
mov
fldl
fmull
rorb
mov
sti
adc
add
push
sub
repz
mov
jns
loop
pop
hlt
mov
add
cwtl
adc
ror
mov
fs
jne
mov
inc
inc
inc
iret
dec
loope
stc
aaa
aad
loope
xorl
lods
mov
dec
cmp
scas
fnstenv
popf
push
sbb
inc
sbbl
jl
cmp
scas
stos
fcmovu
sbb
lock
insl
xor
ja
js
jge
lret
add
jmp
or
push
xchg
decb
test
sahf
mov
js
shlb
and
leave
ja
addr16
lret
notl
adc
jg
jb
cmp
cmovb
jecxz
fimull
test
lcall
xchg
out
dec
push
pop
test
cmp
jp
jo
dec
and
scas
sahf
in
repz
jns
mov
icebp
mov
pop
push
ja
push
jbe
and
jnp
xor
xlat
pop
aam
adc
stos
std
jae
and
aam
mov
shlb
push
aad
push
or
jb
jmp
test
inc
repz
push
sahf
loopne
icebp
shrb
sbb
movsl
push
dec
cmpsl
push
fwait
cmp
stc
and
andb
push
test
nop
jmp
ljmp
jno
in
cwtl
xor
fsubr
cmp
mov
imul
gs
add
fldenv
in
clc
jo
push
cltd
dec
jne
gs
push
jg
adc
mov
pushf
inc
fstl
xchg
mov
cmp
scas
xlat
lock
ror
daa
xchg
popa
sti
scas
mov
cs
pop
jecxz
mov
dec
push
and
mov
test
test
push
xor
stos
pushf
repz
push
int3
dec
cmp
imul
pop
lret
lahf
out
sahf
inc
in
lahf
addb
addr16
xor
pop
ljmp
addr16
popa
jge
scas
jmp
sarl
mov
lcall
push
jne
ret
jno
adc
shl
shl
sbb
sbb
ja
jae
cltd
xor
adc
lret
enter
fcoms
cmp
inc
push
adc
fistps
jb
ljmp
pop
or
adc
out
mov
js
cli
test
adc
stos
pop
psrld
mov
adc
mov
mov
movsl
sbbb
loopne
psubsb
mov
add
inc
add
fnstsw
rolb
add
mov
jno
and
jecxz
add
iret
les
lods
lds
lods
or
leave
shl
ljmp
add
dec
jle
pop
xor
adcb
pop
loopne
enter
mov
and
or
dec
ret
cmpsb
mov
daa
aad
inc
rcll
stos
add
rclb
fmuls
fsubs
je
and
mov
sbb
inc
in
push
sbb
and
fldz
lea
push
dec
push
lret
pop
mov
mov
ficomps
clc
mov
jne
lock
insl
jp
aam
aaa
les
push
clc
cmp
sub
or
icebp
push
imul
rolb
icebp
xor
mov
scas
push
ljmp
lock
xchg
add
lcall
popa
cwtl
ret
and
push
dec
inc
push
xor
test
std
adc
test
repnz
stos
adc
xor
sbb
popf
pop
js
mov
movsl
inc
ja
loop
fcmovnu
jbe
jbe
mov
repnz
fistpll
jne
stos
inc
jb
aaa
fwait
mov
pop
push
add
ss
sbb
int
mov
xor
or
or
psllq
int3
xchg
ljmp
sbb
out
lcall
cmp
and
pop
hlt
push
mov
outsw
xchg
mov
mov
xchg
test
ret
xor
into
mov
roll
xchg
std
cltd
aas
lcall
aaa
push
sub
fucomp
sbb
sahf
cmpsl
push
cmpsb
jge
adc
jne
pop
pop
or
fisttpl
sub
xchg
push
pop
sub
sub
dec
ja
fcoms
cmpsb
ret
dec
dec
fnsave
std
inc
jge
ljmp
outsl
push
and
imul
jns
mov
sbb
push
jge
mov
xor
pop
xchg
mov
sub
jg
lahf
cs
push
and
jae
std
jecxz
mov
sbb
sbb
add
test
rorl
addr16
xchg
jnp
xchg
mov
rclb
ljmp
pop
enter
mov
mov
enter
xchg
fs
incb
add
and
bswap
lret
xor
push
mov
das
cmpsl
inc
lods
and
jl
sbb
fidivl
xor
jg
aad
xchg
pop
xchg
icebp
mov
push
fsubr
ret
xchg
jg
push
and
xor
rorb
xor
out
and
stc
fisttps
popf
outsl
mov
pushf
jo
add
pop
out
leave
add
or
mov
and
das
outsb
jno
and
and
inc
push
in
aad
mov
lret
adc
hlt
mov
mov
sub
lret
push
in
cld
adc
in
fucomi
jae
and
adcb
mov
mov
sub
mov
mov
jp
cmp
push
jns
pop
push
test
sub
push
iret
clc
sahf
mov
fistpll
or
adc
add
jg
fbld
loopne
lahf
push
stc
push
popf
outsb
cmp
je
and
cmp
popa
xor
cmp
xor
add
cmp
dec
or
stos
andl
mov
insb
sub
pop
dec
mov
inc
cmp
bound
or
push
aam
fnstenv
les
into
dec
add
add
xor
movsl
in
stos
test
adc
fisttpll
ss
in
test
aam
ds
or
jnp
lea
movsl
jp
mov
popf
jb
xor
adc
jle
pop
test
outsl
add
xchg
inc
pop
sub
cmc
mov
sti
xchg
in
and
popa
mov
subb
mov
dec
xchg
incb
and
ds
jae
jmp
ret
data16
mov
sub
int
shrl
or
mov
fucomp
cmp
cmp
pop
int3
push
push
pop
rcrl
mov
fidivs
mov
cmpsb
jne
gs
sbb
lds
sahf
inc
jo
push
sub
push
or
lret
add
and
and
lret
aaa
xchg
cltd
insb
dec
jb
xor
lods
dec
jb
pop
push
add
fs
fisubs
cmp
add
jnp
and
leave
pop
mov
decl
push
jno
or
in
lock
cs
mov
or
dec
mov
mov
pop
subl
pusha
mov
add
mov
inc
dec
testb
pop
jnp
or
mov
sahf
stc
jbe
mov
inc
xchg
sbbl
int3
sub
sbb
rcr
dec
imul
mov
mov
insb
mov
sbb
and
lahf
fsts
mov
gs
insl
add
cltd
mov
push
push
add
call
in
sbbb
mov
sbb
or
jl
pop
xor
xor
repnz
cmovae
jo
push
mov
adcl
add
call
fidivrs
repz
mov
sub
hlt
inc
sti
fs
movsb
clc
and
cmc
lcall
cs
add
push
mov
hlt
dec
orb
xor
cmp
in
cmp
push
out
ss
orl
pop
push
mov
or
and
add
dec
stos
mov
call
or
sub
test
sub
pushf
test
dec
loope
ja
mov
jns
add
dec
adc
into
andl
inc
add
ret
add
nop
in
cmp
jecxz
sbb
cmp
inc
test
push
sub
push
stos
lods
xchg
fnsave
cmpb
lods
mov
mov
shrl
and
push
push
pop
or
enter
dec
fstl
xor
test
jle
cmp
test
mov
sahf
mov
into
cmpsb
repnz
outsb
add
inc
jns
cli
pushf
data16
mov
test
daa
sbb
das
mov
pop
dec
stos
aam
scas
mov
xchg
lods
andl
xchg
cld
sub
out
and
sar
bnd
lods
movsl
rcll
nop
dec
add
int
negl
imul
das
push
cld
jecxz
ljmp
insb
or
je
dec
jl
mov
pop
jns
test
jns
jg
aad
push
add
dec
jp
in
pop
les
imul
out
ja
or
insl
adc
sbb
popf
out
jp
cmp
call
xchg
popf
sbb
in
mov
je
cwtl
mov
gs
push
push
mov
jge
and
and
xchg
jne
test
pop
inc
xchg
fsubr
sbb
dec
pushf
pop
das
cmp
movsl
and
stos
inc
out
shl
push
mov
or
mov
dec
sub
outsl
scas
jle
push
xor
adc
sbb
lock
jno
or
mov
cs
jbe
cld
mov
pop
adc
jnp
arpl
rclb
shrl
rcr
jl
cmp
jb
sti
xchg
dec
icebp
push
jmp
xor
in
add
ret
rorl
test
shufps
cmc
ja
mov
mov
cmp
mov
out
sti
add
shlb
push
lods
sbb
leave
mov
inc
sbb
mov
std
aam
addl
jl
push
in
add
insb
push
test
and
negl
xchg
sub
mov
dec
mov
dec
in
insb
adc
cmp
fsub
into
call
xchg
jbe
aaa
mov
pushw
add
xchg
inc
ss
fldenv
pop
mov
sbb
notb
pop
xor
sahf
jmp
rcrb
dec
insb
cmpsb
lock
dec
or
mov
pop
jmp
shrb
mov
or
lds
test
mov
xor
cltd
mov
dec
out
mov
ljmp
loope
and
dec
xlat
repz
clc
push
ficomps
int3
sahf
or
sbb
mov
inc
xor
mov
popa
add
adc
test
ljmp
fcmove
xor
fidivrl
pop
insl
jb
xor
iret
rclb
popf
jge
xchg
jp
xchg
jo
fwait
setae
imul
icebp
sbb
test
mov
cmp
cs
cmp
sub
pop
movsl
and
push
and
icebp
mov
jmp
mov
xchg
outsb
inc
ja
mov
mov
scas
cmp
sub
mov
mov
dec
test
in
jecxz
movsl
dec
mov
add
ficoms
maxps
lea
in
fwait
cmp
leave
pusha
ds
jae
ret
in
dec
popf
xlat
addr16
cwtl
clc
pop
mov
mov
mov
inc
test
push
jb
dec
loope
xchg
popa
inc
lods
loope
dec
adc
arpl
mov
jbe
rcll
pop
fisubs
fs
stos
mov
push
xor
sahf
call
out
jns
jne
in
sbb
cli
push
xorb
daa
arpl
sbb
fistps
insb
stc
and
jle
mov
sti
scas
shlb
cli
mov
popa
cmp
mov
jg
mov
aas
shrl
pop
sub
pop
clc
idivl
mov
aam
xchg
iret
adc
ret
sbb
addr16
add
dec
pushf
and
jae
jg
stos
cmp
jp
mov
mov
mov
in
test
sub
movsb
or
xor
pop
push
ret
into
jae
es
push
arpl
lea
and
stos
pop
icebp
jge
fistpll
xor
lods
add
jmp
clc
loop
inc
gs
pop
fdivs
dec
sub
cmpsl
pop
xchg
movsl
and
stos
xchg
lahf
subb
jae
xchg
jp
pop
ret
mov
jns
and
mov
xor
mov
jns
jnp
out
and
rolb
es
insb
cmpsl
ds
sub
adcb
cwtl
shr
cwtl
push
imul
xor
dec
xlat
out
sub
push
push
cmp
jo
shrl
jne
test
adc
pop
mov
xchg
sub
ljmp
dec
mov
inc
pop
mov
aad
push
mov
xor
and
cmpb
mov
jno
or
sub
aas
jo
in
dec
pop
lret
loopne
loop
adc
jp
sbb
lahf
mov
ret
dec
push
movsb
repnz
ja
cmp
sub
mov
loopne
ljmp
inc
into
jb
jbe
ret
fnstenv
cmp
pop
stos
xor
mov
dec
rcrl
jb
sbb
jae
rclb
xchg
dec
les
jae
in
sub
dec
pop
bound
push
inc
bound
xchg
out
gs
push
rol
jns
lret
mov
pop
scas
and
push
mov
lahf
add
imul
pop
jle
or
hlt
sub
in
icebp
fxch
push
in
cmp
and
inc
syscall
icebp
sarb
fwait
push
pop
sub
mov
mov
and
sub
adc
dec
aad
aam
ja
add
dec
loopne
adc
mov
jbe
jo
push
stos
xlat
lods
inc
mov
mov
stc
sahf
bound
pop
in
das
sub
pop
ss
xchg
jmp
leave
movsb
insl
mov
push
into
pop
push
mov
xchg
inc
imul
cmp
cmp
lods
add
js
in
pop
jecxz
adc
push
iret
cmp
bound
lock
enter
inc
pop
test
and
test
lcall
clc
pop
or
ficoms
xchg
dec
xor
insl
mov
jae
test
outsl
mov
push
pop
psrlq
sbb
xchg
pop
and
sbb
orb
nop
or
shr
nop
js
addr16
lods
mov
push
xchg
fdivr
mov
ss
push
les
or
pop
lods
outsb
clc
mov
outsb
add
out
and
sahf
or
outsb
aaa
inc
sbbl
sbb
add
fs
jbe
mov
lahf
aas
adc
in
push
int
or
xchg
cmp
subl
mov
ds
mov
sub
xchg
das
imull
push
xor
push
out
mov
cmp
jecxz
lea
or
mov
sti
cmpsl
jno
pop
int3
imul
ret
imul
cmp
or
pop
into
gs
shl
mov
mov
fldt
dec
sbb
cmp
ja
insb
cmp
out
imul
sub
sub
push
sti
jbe
mov
mov
push
jno
xor
shrl
jne
and
cmp
mov
dec
rorb
xchg
xor
mov
push
hlt
push
pop
dec
jbe
repz
and
in
daa
mov
pusha
in
jne
mov
es
add
iret
das
inc
adc
dec
iret
arpl
jns
mov
inc
ljmp
rclb
jmp
loope
add
sbb
xor
cmp
xchg
or
mov
inc
mov
xor
bound
push
inc
arpl
cld
mov
xchg
jecxz
fcmovnu
jae
push
dec
mov
jge
jne
jae
aas
shll
jp
jns
popa
and
int3
lret
mov
and
add
js
rorb
adc
in
push
hlt
cmp
filds
pop
enter
popa
mov
js
adc
jo
cmp
xlat
nop
daa
or
xor
and
adc
jno
and
outsb
push
xchg
jmp
fdivrp
inc
dec
lahf
cmpsl
push
in
pop
inc
cwtl
test
pop
rorl
fsubrl
lods
inc
insb
sub
xchg
stos
push
fisubl
std
stc
add
test
push
lcall
arpl
xchg
testl
xchg
scas
leave
out
sti
into
sahf
mov
add
fidivs
movsb
loope
and
mov
sub
xchg
mov
leave
scas
sbb
pop
push
dec
dec
or
leave
pop
push
es
inc
js
popa
and
enter
int3
pop
push
pushf
testl
xchg
ret
push
inc
mov
ja
cwtl
xor
adc
jecxz
dec
mov
fstl
jmp
mov
std
aad
into
pop
out
cmpsb
ret
adc
jmp
sbb
xchg
nop
shrb
cli
inc
mov
fucomip
jns
cld
stos
or
call
movsl
in
sbb
stos
and
loop
inc
imul
xor
or
or
scas
std
mov
or
jne
sub
scas
jb
add
adc
mov
mov
pop
fsubr
mov
adc
test
ljmp
xchg
or
loopne
fwait
shll
pop
icebp
add
adc
pop
pop
adc
fstp
push
fwait
mov
sub
push
mov
push
xor
cmp
test
or
push
ljmp
inc
pushf
push
rcrb
cmpsl
js
jne
and
push
jge
mov
in
xor
pop
inc
push
jg
dec
mov
insb
ret
mov
test
push
xlat
push
dec
pop
add
pop
fwait
mov
lret
lret
nop
sub
leave
in
pusha
iret
mov
mov
negl
dec
and
imul
mov
rcr
in
icebp
push
pop
dec
fwait
mulb
outsl
cmp
imul
sti
mov
jle
fildll
call
cld
es
shlb
stos
add
sbb
popf
or
sub
stc
imul
nop
outsl
fiaddl
push
rcrl
fdivs
popa
fdivl
imul
dec
push
mov
stos
xor
pushf
push
scas
jbe
jnp
push
outsb
xor
lahf
lods
pop
mov
loopne
stos
adc
mov
mov
add
add
or
mov
into
sarl
mov
mov
shl
or
jno
cmpsl
sbb
sbb
loopne
or
dec
int
out
pop
mov
mov
out
xor
fbstp
enter
fstpt
rcrb
sahf
bound
test
xor
and
fcomi
pop
xor
ja
aad
lods
arpl
sbb
pop
outsl
fisubrs
cmpsl
lds
loope
push
push
in
aas
ss
pop
sbb
adc
setle
push
pushf
jg
xlat
push
sahf
pop
pop
pop
sub
push
insb
stc
push
mov
inc
lods
xor
jbe
and
mov
mov
xchg
dec
or
push
pushf
dec
daa
mov
ficoml
mov
js
xlat
jecxz
movsb
repnz
adcb
pop
mov
pop
and
sarb
mov
mov
and
rcrl
orl
idivb
lahf
pop
cmp
bound
dec
xchg
les
mov
in
add
mov
frstor
sbb
add
mov
and
jge
in
push
add
outsl
loop
notl
sbb
xchg
mov
mov
movsl
ret
add
pop
fnstsw
pop
ret
cmpsl
dec
loopne
les
mov
inc
loope
call
ja
lret
mov
sbbl
test
int
cmp
ljmp
sub
jae
icebp
xchg
jae
inc
jp
in
adc
mov
mov
addl
or
cmp
mov
cmp
inc
and
jbe
push
mov
adc
jnp
dec
adc
gs
lods
add
inc
xchg
mov
test
rorb
dec
fistpll
push
mov
sub
sbb
inc
push
xchg
imul
shll
andl
sbbb
mov
les
pop
inc
fcomps
aaa
pop
divb
fdivrs
or
popa
outsl
cs
pusha
testl
add
xchg
xchg
mov
dec
in
sub
xchg
je
jb
sbb
aaa
xchg
shll
add
pop
mov
flds
dec
pop
fcmove
xor
pusha
fldt
xchg
repz
mov
cmp
mov
mov
xor
icebp
jmp
lahf
ss
mov
mov
aam
inc
or
jne
movsl
pop
xlat
cmp
cmp
addr16
mov
mov
pushf
jmp
jnp
outsl
and
mov
cmpsl
ds
add
test
fstpt
test
lret
add
bndstx
into
sbb
lods
adc
push
jns
lds
inc
dec
decl
mov
xor
mov
aaa
into
jns
inc
mov
and
sti
add
sbb
inc
xor
loope
jp
mov
loopne
test
aaa
mov
mov
fnsave
push
imul
loopne
mov
mov
sti
or
or
subb
cmp
jb
gs
adc
pop
xchg
ret
sub
rorl
mov
fsubrp
add
xor
push
push
in
test
orb
cmp
and
adc
fdiv
pusha
mov
data16
clc
test
push
leave
xchg
jecxz
rcrb
ds
lcall
inc
gs
cmp
loopne
sub
ss
in
testl
lahf
ja
cmp
xor
adc
sbb
or
and
ficoml
jl
or
hlt
mov
pop
mov
lret
jge
std
mov
cmp
idivl
sub
repz
xchg
das
push
test
mov
xor
sbb
dec
pop
outsb
xchg
dec
pop
mov
mov
add
and
pusha
jecxz
xchg
call
xor
into
fdiv
rolb
aaa
lock
or
orl
xlat
mov
and
jns
mov
adc
jl
call
movsl
sub
mov
enter
pop
inc
push
aam
and
jecxz
int
xchg
push
jmp
xchg
mov
lods
inc
sub
jmp
dec
sub
shlb
mov
enter
pop
mov
sub
loopne
jo
xchg
jne
lea
nop
inc
testl
or
xor
fldcw
lods
inc
add
sub
fiaddl
inc
sbb
mov
mov
xlat
pop
sub
mov
mov
test
cmp
jmp
pop
pop
repz
add
dec
jae
je
jb
dec
mov
jle
push
inc
lret
mov
arpl
push
cmp
pop
mov
dec
xchg
imul
xor
pusha
outsb
mov
jmp
ret
xchg
add
aad
mov
addr16
mov
lock
sahf
add
pusha
out
testb
mov
iret
aam
xchg
scas
sbb
mov
into
cmc
lcall
fdivrs
pop
popf
xlat
pop
or
lret
and
sbb
aaa
push
sub
push
test
or
lods
xchg
xchg
xchg
or
fwait
cmp
iret
stos
mov
pop
sub
cwtl
push
mov
or
dec
fcomi
punpckhwd
sbb
mov
outsl
dec
imul
nop
sbb
scas
jge
lret
scas
out
mov
iret
push
jmp
lock
insb
add
or
mov
daa
dec
ret
ret
movsl
icebp
call
dec
sti
xchg
jnp
or
xor
cmp
lea
mov
mov
ljmp
sbb
sarl
jns
mov
std
inc
dec
xlat
aas
inc
mov
ror
cmc
cltd
mov
out
shlb
fisttpl
insl
add
xchg
sub
addr16
pop
push
insl
insl
rorl
jg
dec
leave
push
xchg
outsb
mov
mov
jns
add
rcl
ret
insl
inc
js
push
cmpsb
xchg
push
shrl
mov
xchg
xor
js
ss
insl
ljmp
out
add
xchg
ja
lcall
mov
mov
fnsave
lret
lahf
inc
xchg
jae
repz
rcl
stos
jg
mov
fs
pushf
xor
nop
mov
lret
inc
mov
les
in
incl
movsb
or
jb
pop
psllq
adc
outsl
ja
mov
or
push
pop
or
adc
je
inc
insl
push
mov
or
and
and
cmpsl
adc
sbb
push
push
aad
mov
loopne
popa
jecxz
cmp
idiv
test
out
subb
aad
cmpb
mov
leave
repnz
mov
aad
jecxz
aam
popf
add
pop
sub
hlt
and
jb
outsb
push
cltd
mov
scas
mov
jmp
jmp
cmc
jbe
test
stos
jl
fdivl
push
fstps
pop
add
add
aaa
jp
popl
aad
test
das
mov
fwait
lret
jb
adc
jo
inc
sahf
mov
add
in
mov
inc
repnz
cld
test
nop
rol
enter
or
lret
and
fwait
adc
jb
mov
ret
aaa
pop
outsb
jb
mov
test
mov
pop
or
popf
lods
sbb
jo
shl
mov
aam
aaa
sub
mov
mov
ja
push
mov
and
shl
inc
bound
movsb
nop
push
out
pop
lods
xchg
aad
fs
mov
filds
sbbl
stos
loope
mov
ret
pop
idivl
dec
mov
and
jno
and
sti
ljmp
sbb
lahf
jmp
cwtl
das
gs
int
insl
scas
mov
push
mov
xchg
dec
or
sbb
lahf
ss
xor
in
movsb
fdivrl
bound
dec
loop
out
jbe
sbb
outsb
jl
cmpsl
mov
adc
sub
sub
sbb
dec
mov
or
daa
inc
mov
xor
inc
push
neg
cmp
xchg
or
std
out
aaa
test
outsl
or
pop
imul
test
push
repnz
inc
lods
and
dec
icebp
add
das
inc
shl
sti
xchg
pop
cmc
addr16
out
xor
inc
ljmp
pushf
xor
leave
jecxz
cli
sub
loopne
mov
xlat
adc
cld
ss
cli
in
lcall
in
sbb
lahf
and
mov
fbstp
and
mov
leave
ja
jle
and
jb
imul
pop
mov
mov
and
test
int3
pop
lcall
daa
cwtl
mov
shl
jns
inc
sarl
jbe
sbbl
cmp
adc
popf
scas
xchg
xchg
or
push
inc
and
push
rclb
imul
and
cwtl
je
cld
xor
adc
ss
rol
in
push
ret
jp
xchg
shrb
fs
outsb
lea
mov
int
aas
in
add
fptan
fs
mov
sub
into
mov
cmp
mov
lods
jp
mov
iret
ss
xor
lret
jnp
enter
lcall
dec
iret
push
inc
add
fucomi
push
pop
xor
adc
scas
notb
scas
sarl
cltd
lret
push
jmp
mov
push
test
mov
fsubrs
cmp
pusha
cld
pop
sub
or
movb
repz
nop
pop
in
pop
jp
xor
mov
push
flds
enter
fbstp
mov
addr16
and
sub
and
sbb
add
lret
int3
movsl
jns
cmp
enter
add
lea
lock
jle
pop
push
fimull
lahf
fisubrs
lock
add
icebp
enter
sbb
inc
fdiv
jmp
lret
fidivl
lock
xchg
push
cltd
dec
repnz
loope
jp
dec
test
ss
pop
cmpsl
cmpsl
xchg
dec
das
clc
and
mov
pop
add
movsb
rcr
jbe
mov
xchg
xchg
dec
pop
mov
lcall
aaa
ficompl
insb
mov
mov
or
sbb
and
mov
dec
and
out
push
jmp
hlt
data16
jl
jb
std
popf
xchg
fcoms
mov
sbb
pusha
hlt
movsl
xchg
adc
int3
add
movsl
jle
jns
jmp
pop
ds
decb
and
and
mov
cwtl
fstpl
out
dec
or
adc
jo
xor
dec
xchg
adc
loopne
sbb
jns
add
shl
pop
rcrl
negl
mov
adc
inc
and
fidivs
pop
xchg
and
dec
add
call
test
js
cmp
jns
lods
sarb
loop
jmp
lds
dec
sub
cmp
xor
mov
mov
lods
mov
pop
dec
sub
into
xor
inc
mov
mov
ss
xchg
fidivs
mov
cmp
pop
push
daa
add
cmp
jno
xchg
dec
out
sbb
adc
sub
addr16
inc
push
jmp
mov
addr16
xor
insl
and
orl
adcb
test
mov
pop
ds
out
inc
mov
cmp
aad
cli
push
sbb
xchg
inc
pop
inc
loope
jne
jo
fildll
and
sbb
repz
push
mov
push
pop
xchg
xor
in
out
iret
rclb
xchg
xor
std
lods
icebp
pop
sub
fldenv
cmp
popa
or
mov
aam
or
cmpsb
out
call
or
push
inc
cltd
out
and
sahf
lret
xchg
fucomi
inc
push
lcall
ss
jo
xor
pop
in
cwtl
dec
in
mov
lahf
mov
xchg
sbb
mov
addb
push
mov
stos
lcall
xor
or
movsb
es
mov
sub
in
and
das
adc
lods
mov
and
loopne
inc
lcall
mov
in
pop
pusha
dec
pop
movsl
mov
pushf
pop
pop
pop
push
push
int3
lahf
add
inc
loope
dec
fwait
xchg
out
sti
xchg
stc
icebp
cmp
mov
push
jns
adcl
lret
add
movsl
sbb
fimuls
rcrl
mov
jae
cmp
int3
and
sahf
clc
jo
test
xchg
test
pop
sbb
shrl
popf
inc
out
outsb
ljmp
sbb
jno
stos
test
jge
mov
cmp
outsl
or
push
nop
in
and
adc
out
xchg
or
add
or
test
adc
pop
js
insl
jl
cltd
popf
xchg
or
jmp
mov
add
dec
ds
sub
inc
lock
cli
icebp
scas
mov
or
or
repnz
psraw
sti
push
dec
pop
pop
inc
int
ds
mov
or
xchg
xor
push
sbb
std
pop
mov
popl
iret
ror
and
clc
cltd
sub
xchg
stos
pop
enter
mov
push
or
lahf
ljmp
mov
dec
sbb
inc
xor
lods
xor
scas
pop
xor
and
cmp
int3
test
inc
dec
mov
or
mov
sbb
mov
mov
cli
pop
jg
cmp
push
push
push
and
or
pop
adc
lods
outsl
lret
inc
mov
fildll
aad
cld
les
test
ja
popf
shrb
jb
push
push
ljmp
inc
or
pop
jmp
mov
cmp
loopne
fsubrl
ret
sub
xor
call
cmp
push
sub
lcall
xor
push
mov
sub
orl
fsubp
dec
xchg
loop
add
jb
rcll
mov
fsubr
daa
ja
dec
rcll
pop
loope
ds
aas
cwtl
pusha
pop
int
add
cmpsl
out
adc
andb
sahf
jl
add
sbb
mov
mov
js
mov
lods
xchg
sbb
in
loope
outsb
mov
or
fldt
mov
pushf
in
xor
dec
sbb
jae
push
mov
jmp
cbtw
xchg
ret
nop
jmp
mov
mov
sbbl
xchg
popa
cmp
pop
inc
add
pushf
data16
xchg
mov
lahf
pop
xchg
dec
cli
or
sub
mov
sbb
jle
fdivrl
inc
sbb
cmpsb
dec
in
les
outsl
out
jg
sub
aad
test
mov
ds
sub
push
icebp
in
loop
add
pop
push
adc
xchg
incl
push
mov
inc
insb
mov
loopne
inc
shrl
into
xchg
mov
mov
ret
lods
inc
dec
xor
inc
adc
cwtl
das
xor
loop
push
xchg
loop
xchg
bound
shl
sbb
loopne
jecxz
sub
add
mov
shr
std
rcrb
in
mov
aaa
bound
xlat
lahf
les
decb
mov
and
fwait
sub
sbb
push
das
xlat
sbb
and
nop
push
cmpsb
stc
push
test
cmc
das
addr16
outsl
leave
and
xchg
mov
inc
mov
dec
mov
les
mov
xorps
and
pusha
jno
mov
je
repnz
fidivl
fs
movsl
lods
xchg
xor
sbb
insl
inc
pop
cmp
test
testl
fstps
xor
aam
xlat
xor
test
fisttps
mov
and
pop
xchg
adc
xchg
stc
ja
mov
jae
rcll
into
cmp
int
in
test
cmpsl
xor
imul
imul
mov
comiss
call
pop
enter
testl
movsb
cmp
ret
mov
pop
imul
ds
jnp
rol
inc
out
xchg
adc
lea
jb
ja
jno
shlb
movsb
data16
shrl
enter
arpl
lret
jne
ljmp
cmc
orl
dec
dec
xchg
fisubrl
jge
arpl
jmp
sbbl
icebp
mov
sub
pop
incb
sbb
pop
sub
or
sbb
out
inc
js
inc
cmp
jne
nop
clc
lret
popa
not
in
inc
pop
pushf
xor
mov
fidivs
and
jg
cld
xor
imul
mov
inc
adc
movsb
add
jmp
add
pop
cmpsb
imul
xchg
in
insb
and
test
xchg
lock
inc
call
sbbl
sub
mov
sbb
fdiv
lds
ret
rcll
mov
aas
hlt
jge
sbb
push
push
lds
jns
loop
test
xchg
mov
xchg
cli
sub
jno
test
enter
add
adc
es
xchg
ficoml
xor
dec
mov
iret
cmp
negb
clc
cs
lea
xchg
mov
or
mov
xchg
daa
jg
inc
pop
sub
fstps
mov
mov
test
test
movsl
stc
push
pop
int
jp
outsl
negl
js
scas
rorl
fdivrs
das
push
jmp
iret
leave
xor
ds
xor
cmp
in
ja
sti
mov
and
jecxz
jae
adc
stos
xchg
xor
push
in
add
std
xchg
icebp
jns
mov
xor
xchg
stc
or
mov
fsubl
fistl
rcr
les
xlat
imull
popa
push
loopne
xor
sbb
adc
jmp
test
push
pop
dec
xor
sub
popa
adc
leave
mov
dec
cmp
imul
pop
outsl
cli
insl
stos
inc
jo
data16
cmp
xchg
out
js
and
ja
int3
adc
int3
adc
sahf
pop
jo
ljmp
pushf
push
cmpsl
xchg
inc
sar
lock
sbb
cmp
dec
int
aam
fucomi
dec
jecxz
cmp
movsl
adc
imul
insl
mov
orl
cmc
enter
insl
fiadds
or
aad
sub
iret
rorl
imul
xchg
in
sub
and
adc
rcr
mov
xchg
ret
into
jne
add
dec
xlat
pop
clc
fsubl
mov
push
in
mov
jecxz
push
shlb
insl
mov
daa
arpl
scas
sti
push
int3
stc
iret
hlt
lcall
and
push
imul
cmp
inc
cmpsb
jecxz
movsb
mov
xor
outsl
insl
outsb
add
pop
or
iret
cmp
add
dec
push
adc
shrl
int3
push
add
idiv
jbe
xchg
fwait
xchg
adc
arpl
push
sub
push
pop
movsb
lock
dec
movsl
loop
mov
lea
jbe
and
leave
inc
jle
scas
out
loope
mov
fstpt
add
aam
aad
arpl
fnstcw
add
or
xor
in
cmp
sti
cmp
test
xor
cmp
xchg
adc
testl
pop
rol
shlb
xchg
ljmp
insl
adc
aaa
stos
cs
inc
gs
inc
push
fstpt
lods
and
sbb
xor
xchg
adc
inc
sub
aas
pop
fwait
leave
idivb
xchg
and
and
fistl
out
xchg
mov
cli
pusha
std
lods
fwait
xchg
insb
dec
mov
sbb
push
dec
aad
cmp
js
xor
call
or
aam
loopne
enter
jp
in
call
sbb
arpl
mov
mov
xor
mov
inc
xchg
filds
ds
push
lds
fs
jns
lea
test
adc
adc
xchg
aas
mov
stos
stos
lock
test
inc
add
mov
mov
or
push
cmp
jno
inc
or
lea
mov
xchg
add
mov
stc
mov
pop
adcb
fidivrl
aad
jo
adc
xor
pop
int
cmp
jo
inc
stc
jne
xchg
out
push
stc
nop
mov
outsb
jge
adcl
xor
lock
jo
sbb
ja
ret
sub
mov
loope
and
mov
lret
pop
je
pushf
frstor
add
incl
sbb
pop
cmp
imul
push
ret
inc
test
jo
das
cmp
sbb
jae
cmp
push
jg
fcompl
repnz
mov
mov
negb
hlt
mov
add
pop
xlat
inc
in
mov
inc
pushf
call
mov
ret
bound
aad
testl
push
pop
or
je
cmc
bound
out
xchg
mov
test
jae
movsb
and
clc
lret
bound
jno
fs
into
mov
aas
jb
orb
or
sbb
imul
sub
mov
and
add
xor
inc
push
loopne
pop
ljmp
jno
out
lods
adc
pop
insb
out
pop
and
hlt
jg
sbb
bound
lods
jg
movsl
nop
mov
int
mov
shr
mov
jmp
dec
xchg
sub
or
and
es
jne
pushf
outsb
sbb
ret
push
or
sub
pop
mov
inc
mov
inc
roll
enter
mov
seto
imul
mov
lods
pop
shrb
or
test
sbb
rcrl
mov
lahf
or
lcall
mov
cmp
gs
jb
aas
push
adcl
or
sub
inc
ficoml
arpl
lods
push
or
lahf
aad
enter
dec
add
addr16
and
std
test
test
adc
sarb
das
loop
fcompl
jge
adc
cmpsb
lds
cltd
je
call
sti
lcall
and
nop
fwait
adc
rorb
repnz
test
popf
or
cld
nop
imul
and
or
jb
mov
inc
lret
out
addr16
cmp
ret
inc
or
mov
push
push
push
in
inc
xor
ja
and
mov
pop
pop
je
xchg
cmp
aaa
inc
mov
negl
add
pop
out
test
xchg
movsl
and
dec
ljmp
xor
stos
or
out
insb
sub
inc
sbb
inc
add
mov
pusha
lcall
xor
mov
pushf
mov
or
sbb
mov
les
stos
or
mov
roll
sub
aad
lea
sbb
cmp
ret
aas
rcrl
mov
into
data16
mov
fs
and
add
je
ficompl
add
xor
cmc
andl
push
mov
enter
mov
mov
lahf
and
pushf
and
pop
divb
add
call
aad
addr16
dec
les
pop
and
inc
mov
xchg
js
test
test
push
fcmove
stc
xchg
push
dec
mov
mov
dec
ret
sbb
dec
insb
ret
or
scas
in
fldcw
in
test
nop
mov
cmp
hlt
sub
sahf
fcompl
punpckhdq
push
fildl
sbb
outsl
iret
fidivs
push
mov
mov
dec
push
nop
adc
in
cld
jbe
addr16
je
or
call
imul
clc
sub
das
insl
push
cli
sahf
mov
dec
in
mov
jge
xor
add
ja
and
push
repz
jp
and
and
or
mov
fdiv
mov
inc
pop
fsubrp
scas
int
sahf
repnz
stos
in
out
es
fcmovnb
xchg
jns
inc
pop
lcall
imul
iret
dec
jae
xchg
ficompl
into
cmp
push
cmp
test
or
mov
push
lods
cmp
or
nop
fadd
xchg
mov
int
loope
push
mov
jp
add
test
push
or
add
pushl
in
push
cmp
loope
or
cmp
loope
mov
push
jmp
or
mov
andl
mov
test
adc
into
stos
aaa
jbe
test
loopne
mov
test
sbb
cli
std
lock
cmpsb
fiadds
loop
sub
xor
pop
mov
data16
pop
and
loop
imul
adc
and
shrl
jecxz
pop
aaa
outsl
daa
dec
push
cmp
dec
in
mov
adc
scas
mov
add
fidivl
jmp
mov
dec
xchg
push
mov
lods
push
pop
or
dec
sbb
sub
and
lods
ljmp
cmp
dec
mov
or
and
mov
mov
lods
mov
xor
pusha
divl
popl
fildl
push
xchg
push
xchg
xlat
cmp
pop
adc
scas
xchg
jnp
jle
jbe
aaa
xchg
cli
inc
gs
lret
adc
lods
inc
in
js
rcl
xor
inc
xchg
xchg
lea
aas
inc
sti
xchg
pop
adcl
stos
lods
and
in
stos
repz
mov
cmp
dec
sbb
ret
xchg
mov
add
fwait
call
push
bound
daa
in
xor
mov
ret
imul
ror
int
push
cmpsb
leave
test
les
roll
mov
pop
and
mov
imulb
jnp
repz
lock
out
insl
adc
cmp
loope
mov
push
bnd
mov
or
mov
fstpl
mov
fs
pop
outsl
mov
adc
mov
lcall
dec
shrb
jne
xor
pop
fsubs
pop
data16
xor
xor
dec
jecxz
mov
xor
ja
ret
outsb
push
cmpsl
ret
inc
cmp
sbb
push
fstps
cmp
pop
repz
jp
mov
adc
int
lock
out
call
insb
cwtl
sbb
aas
cli
inc
cmp
add
std
inc
and
lret
sbb
lret
repz
xchg
inc
sub
dec
pop
add
xor
xor
xor
test
jne
mov
jo
jmp
dec
imul
sahf
or
dec
pusha
cmp
sbb
movsb
xorl
pop
testb
dec
test
sub
push
jle
out
cmpsl
js
mov
lock
in
adc
sub
inc
stos
mov
fisttpll
inc
inc
push
mov
pand
and
fs
xchg
and
testl
sbb
push
add
push
mov
or
push
mov
nop
push
xlat
xchg
add
ljmp
jge
outsb
outsb
jl
shl
adc
rolb
push
out
test
inc
lock
or
push
movsl
fcoms
dec
out
stc
sub
sub
xor
inc
xchg
call
outsb
jle
add
jae
sbb
sbb
imul
into
sub
inc
pop
mov
adc
push
mov
lret
xor
inc
adc
mov
add
nop
shrb
dec
or
dec
lock
cli
call
inc
inc
add
fdivl
aaa
pop
iret
iret
dec
mov
xor
lods
lods
push
fidivrl
in
dec
xor
sub
adc
mov
pop
push
mov
aad
bndstx
push
sub
sbb
sub
pop
push
lods
shlb
sub
or
add
lahf
mov
bound
sbb
jo
negl
dec
pop
adc
jno
mov
push
xacquire
or
mov
shlb
push
jae
push
xchg
rorb
jmp
in
scas
mov
add
repz
mov
mov
aas
dec
mov
ja
mov
mov
pop
outsl
adc
cmp
inc
insl
in
into
repz
adc
sub
in
mov
ds
and
leave
test
pop
test
negb
cltd
xor
pusha
lods
add
inc
out
movsl
dec
mov
jg
mov
or
xor
mov
mov
test
mov
and
incl
jo
test
pop
pop
xor
pusha
negl
jb
cli
jle
dec
out
loope
out
daa
or
xchg
mov
mov
ljmp
or
inc
add
xor
sbb
dec
or
testb
fcoml
inc
push
pusha
ret
das
xchg
cmpsb
push
aaa
dec
jg
xchg
jp
adc
push
dec
sub
sub
push
nop
add
ret
ret
xor
xor
and
lcall
std
popf
icebp
sub
out
adc
xor
mov
jb
dec
scas
mov
je
andb
push
in
das
cmp
mov
movsl
cmp
shrl
xor
call
idivb
outsl
add
cltd
mov
push
orl
xor
inc
xchg
aad
call
aad
popa
mov
mov
sub
out
mov
or
jl
lods
pop
or
jmp
daa
in
shr
test
stos
cwtl
mov
call
cld
or
mov
adc
lcall
leave
out
rol
leave
out
je
cs
pop
je
push
insl
cli
out
adc
push
stos
xchg
testl
call
push
fmuls
cs
jo
pop
enter
fmull
jae
faddl
cmpsl
mov
fldenv
fistl
cmpsl
cld
movsl
push
add
movsb
and
cmp
lcall
enter
mov
jp
lret
ja
push
jp
xorl
add
sub
mov
loope
imul
into
ss
lods
insl
ret
aam
jmp
dec
push
and
movsl
icebp
mov
adcb
in
insb
cmc
mov
pop
mov
inc
mov
jg
loopne
hlt
popa
int
push
push
adc
pop
mov
ja
xchg
pop
fsubp
call
je
cld
mov
fisubrs
push
add
dec
xchg
sbb
cmp
push
hlt
mov
fabs
test
gs
test
aaa
add
divl
ljmp
movq
sbb
mov
sbb
add
testl
movsl
lds
out
and
inc
arpl
mov
les
and
aam
inc
and
popa
sub
inc
into
xchg
jb
rep
add
shlb
or
pop
mov
pop
mov
mov
movsb
push
lret
mov
fldcw
inc
mov
inc
mov
cld
push
hlt
xchg
lahf
mov
jo
es
or
xchg
sub
jecxz
pop
out
and
lret
int3
mov
fs
pop
push
test
jo
insb
pop
cmp
call
add
jge
mov
mov
in
shrl
and
or
dec
xchg
dec
frstor
fsubrs
int3
lcall
pop
push
dec
sbb
pushl
pop
addr16
adc
inc
clc
aam
inc
enter
das
in
push
inc
cmp
sahf
das
ret
jno
push
in
das
cmp
inc
outsl
xchg
in
add
sub
mov
iret
in
pusha
and
rorl
jmp
cmp
testb
cmc
pop
and
dec
int
stos
xchg
jge
and
mov
rcrl
add
and
call
dec
es
sub
cli
push
insb
das
add
jo
shr
jle
repnz
jae
daa
loopne
fcompl
fdivrs
push
cmp
clc
das
pushf
xor
cmpb
xlat
testl
add
add
movsl
sub
inc
inc
push
pcmpeqb
loope
loope
pusha
adc
add
jo
shlb
repz
shll
mov
xor
xor
dec
fiadds
cld
fadds
or
cmp
iret
dec
mov
jecxz
cld
mov
ss
es
inc
mov
adc
and
xor
int3
xchg
jne
jb
rorb
add
mov
xchg
jo
stos
sbb
orl
data16
das
add
je
frstor
add
adc
mov
lret
mov
adc
icebp
pop
aam
xor
push
sub
outsl
jnp
ss
jae
inc
idiv
sbb
sahf
dec
test
sbb
and
not
lods
movsb
ljmp
mov
leave
xchg
in
and
fmulp
fmuls
push
ret
sahf
call
push
mov
and
xchg
int3
test
or
icebp
hlt
jnp
and
push
ret
sub
lahf
sbb
lods
xor
pushf
xor
push
aas
stos
sbbb
mov
jne
aad
clc
push
or
jl
outsb
outsb
int3
jl
xor
mov
mov
xchg
xchg
push
dec
xor
cmpsl
and
fsubrs
js
push
out
out
xor
mov
scas
lcall
mov
loopne
jae
insb
adc
shrl
pop
add
and
jb
pop
movsb
mov
pop
repnz
or
mov
xlat
mov
xchg
lock
pop
stos
adc
sbb
rclb
mov
sti
mov
or
pop
movsl
imul
add
inc
push
mov
jge
cmp
stos
fiadds
fdivl
xor
xchg
push
mov
lock
pop
mov
sub
rolb
mov
je
xor
jp
aaa
out
push
loop
pop
dec
mov
decb
sarl
lcall
loop
push
mov
fldl2t
mov
scas
out
mov
jo
xchg
les
cmp
push
arpl
mov
sbb
std
mov
add
es
lock
push
adc
in
xor
jnp
loope
mov
mov
mov
or
ficoms
sub
mov
jb
mov
push
sub
leave
insb
sar
mov
mov
sub
lods
mov
cmp
out
inc
call
sbb
shrl
jp
pusha
lret
ljmp
or
popf
and
push
xchg
lret
or
pop
daa
rcrl
adc
push
ja
cmp
insl
and
jg
cmpsb
push
mov
push
pop
xchg
xchg
jl
xchg
aad
xor
test
inc
jno
das
cmp
scas
test
stos
jno
mov
je
adc
push
clc
popl
mov
xchg
mov
fstps
and
cwtl
pop
adc
xchg
js
imulb
mov
pop
dec
mov
pop
enter
sbbb
lds
adc
adc
push
je
xor
push
bound
mov
mov
adc
ja
xor
cmp
jns
xor
fnsave
push
arpl
icebp
adc
outsb
sub
cmp
sub
xchg
sbb
or
dec
add
mulb
div
out
add
xchg
sbb
loopne
push
fwait
scas
push
xchg
pop
mov
cmp
cmpsl
cmp
jmp
mov
cli
test
jge
lods
aas
in
pop
sub
in
push
pop
inc
and
sub
call
sbb
fistps
mov
mov
fcmovb
sub
insb
jl
leave
lods
dec
push
stc
cmp
mov
movb
inc
add
stos
sarl
mov
mov
and
mov
xchg
sbb
fists
js
push
mov
out
fdivl
iret
sub
inc
pushf
dec
dec
jo
sub
out
popa
fimull
xchg
mov
mov
js
xor
or
xor
push
movsl
adc
in
je
xchg
pop
mov
out
sbb
xor
insb
push
push
aaa
inc
inc
cmc
adc
mov
test
inc
push
std
loope
dec
lds
push
dec
rcrb
adcb
test
lret
int
jno
enter
out
rorl
fidivrs
movsb
mov
data16
xchg
inc
repz
mov
movsl
mov
out
gs
adc
mov
mov
add
lahf
inc
outsb
sub
test
add
dec
mov
or
push
push
pop
lock
jp
add
test
ret
js
pop
mov
inc
shrb
lcall
dec
ljmp
inc
jns
jb
rorb
inc
sbb
repnz
mov
in
es
int3
push
int
scas
cld
call
adc
testl
lea
push
bound
cmc
int3
arpl
in
xchg
mov
adc
cmp
mov
imul
pop
push
xor
jae
movsb
jne
jecxz
lods
cmpsb
push
out
inc
or
mov
imul
push
out
adc
das
xchg
and
sbb
mov
xchg
gs
in
lret
clc
inc
ds
push
xchg
sub
test
mov
and
push
jbe
pop
mov
cmp
lds
sahf
xchg
xchg
andb
cmpsb
sbb
es
adc
mov
roll
scas
nop
or
adc
and
movsl
mov
roll
cmpsl
mov
shlb
xchg
test
adcl
inc
mov
xor
sub
insl
loopne
rorb
jmp
sbb
vmovlpd
sbb
orb
inc
lods
adc
test
imul
or
icebp
mov
mov
xor
dec
push
or
cmp
inc
fcoml
xorl
movsb
sub
mov
in
in
adcb
and
pop
loop
add
pushf
jne
xchg
in
xchg
mov
dec
mov
adc
inc
cmpl
push
outsl
mov
scas
and
jge
mov
sub
push
repz
xor
inc
mov
adc
inc
adc
fs
pop
aad
inc
pop
out
mov
cmpsb
sarl
out
pop
je
mov
addr16
sbb
jbe
jp
and
mov
lret
push
test
mov
sub
mov
mov
jb
sbb
fnsave
fldl
xchg
sub
outsl
jnp
dec
out
mov
pop
add
nop
loope
xchg
out
pop
inc
test
inc
jmp
les
out
jnp
push
and
xchg
fs
push
cld
mov
push
iret
je
lds
inc
jns
ja
push
aad
and
xchg
lcall
cmc
dec
adc
xchg
push
cwtl
pop
adc
pop
scas
and
mov
pop
leave
pop
jp
cmpsl
mov
lret
mov
fistps
sub
push
negl
out
adc
sub
movsb
rclb
inc
lret
xchg
lret
in
lret
std
adc
xor
cmpsb
or
adc
push
or
gs
out
inc
nop
dec
pop
cmc
data16
in
pop
insl
aad
or
add
xchg
sub
mov
ljmp
dec
addb
pop
rclb
ljmp
popf
mov
mulb
sarb
mov
mov
fcompl
jl
rcrb
pop
scas
and
pop
pop
sbb
sti
inc
ss
aas
sti
fdivl
push
outsb
or
sbb
mov
nop
xor
xchg
add
lahf
mov
lods
jl
dec
fbld
loop
cmp
lock
cmpsb
je
loopne
cmp
arpl
out
scas
mov
cmc
fiadds
das
les
sbb
xor
lock
lahf
dec
loope
push
push
int3
xlat
push
mov
xor
stc
and
and
adc
mov
inc
mul
jns
mov
dec
and
insl
lods
add
inc
mov
fst
test
push
popf
mov
push
sbb
add
xor
pop
out
js
xor
insb
jbe
sbb
jle
jecxz
fsubrs
je
lock
dec
cltd
jo
shrb
ja
lret
adc
aad
aaa
nop
in
push
or
fwait
or
icebp
mov
sahf
jb
std
inc
push
ljmp
aaa
pop
pushf
sbb
inc
xor
inc
lret
cmpsb
std
andb
sbb
adc
jg
nop
cmp
gs
lds
sbb
nop
mov
jp
jno
mov
and
leave
aas
outsb
ret
mov
sti
mov
test
xchg
dec
dec
lods
in
pop
roll
pusha
cmp
adc
xchg
sub
xor
sbb
dec
inc
insb
js
mov
push
test
jno
xchg
mov
jae
rcl
lcall
ja
in
das
rclb
or
sbb
push
jmp
mov
test
and
mov
mov
outsl
xchg
not
fsubrl
sub
loop,pn
mov
or
cmp
pop
shl
fwait
jg
int
dec
mov
stos
and
sub
pop
jg
push
inc
adc
fldcw
add
adc
dec
push
pushf
gs
clc
dec
sub
pop
and
mov
or
fidivs
adc
push
je
inc
gs
popf
and
xchg
fucomi
mov
mov
mov
push
scas
test
shrd
cld
cmp
lods
or
mov
into
nop
sub
rcl
jl
scas
mov
push
aas
cmp
dec
xchg
push
jp
sbb
cli
and
push
mov
dec
cmp
sbb
scas
gs
mov
out
mov
dec
fsubrp
stc
imul
popa
sti
mov
pop
ret
add
outsl
insl
sub
mov
mov
xor
ds
out
orl
xchg
ret
add
sub
sbb
mov
adc
mov
pusha
xchg
adc
insb
jecxz
cmp
sahf
mov
shrb
stc
adc
jp
push
scas
mov
popf
fs
add
shlb
repz
cmp
inc
popa
fs
fnstsw
push
lcall
cli
aam
aaa
or
lea
dec
ja
push
pop
nop
push
jle
mov
roll
or
mov
jns
dec
pop
andb
das
mov
cmp
dec
insb
ja
or
jbe
cltd
test
xchg
cwtl
shll
cmp
dec
out
test
repnz
lods
lret
sub
push
stos
stos
push
xchg
pop
rol
sub
sbb
mov
sub
xchg
jl
mov
pop
sar
inc
in
rcll
std
jl,pn
lods
xchg
add
xchg
xor
pop
mov
daa
call
adc
cmp
or
outsl
sar
mov
sub
or
rol
rcrb
outsl
dec
dec
mov
ret
cld
inc
pusha
inc
cmp
sub
das
xor
adc
sahf
cli
int3
jb
add
arpl
popf
cmp
jmp
leave
xchg
dec
mov
push
scas
push
and
inc
fwait
bound
jns
bnd
aam
or
pop
mov
insb
test
imulb
mov
repz
rcr
mov
jne
xor
stc
inc
add
inc
dec
jnp
mov
push
push
in
outsb
jnp
cmp
aas
push
push
pop
xchg
sar
movsb
sub
subl
call
clc
bound
push
test
andl
into
mov
pusha
int3
psubusw
mov
and
xchg
pop
icebp
mov
out
call
ljmp
push
aam
push
dec
nop
dec
data16
sub
push
xchg
mov
gs
xor
leave
mov
int
jecxz
pop
cwtl
add
jae
jmp
mov
repnz
mov
subb
fnsave
sub
push
xor
enter
cli
es
cmpsb
je,pt
mov
pop
insb
ja
popf
into
jecxz
jle
enter
cmp
inc
push
xchg
sub
mov
testl
fwait
vunpckhps
outsl
iret
pop
mov
inc
out
mov
cmp
inc
mov
cmp
xchg
pop
dec
mov
out
jmp
iret
jp
mov
or
add
stos
or
xchg
mov
mov
icebp
lds
adc
sub
repz
push
dec
pop
js
pop
cmpsb
push
jge
jl
ja
jne
xchg
in
rcl
jne
xchg
xor
mov
sahf
lcall
mov
pusha
lods
out
sub
cmpsb
xchg
xchg
xchg
in
insl
pop
mov
hlt
test
xchg
mov
in
dec
mov
enter
pop
mov
inc
pop
lret
xorb
pop
scas
sbb
cli
xor
cmp
sbb
rolb
inc
lret
push
jno
mov
loop
mov
dec
or
or
add
xchg
inc
sbb
idivb
imul
xor
rcrb
dec
jp
sbb
mov
or
xchg
jmp
cmp
inc
dec
pop
xor
hlt
pop
mov
stos
adc
pop
xchg
lds
cltd
adc
iret
data16
cmp
pop
push
inc
sar
out
les
sbb
out
notl
cmpsb
ret
clc
sahf
mov
push
cmp
or
jo
add
std
push
outsb
mov
orb
popa
push
je
in
scas
out
mov
mov
mov
cmpsb
out
add
sbb
adc
lcall
ret
push
jo
scas
std
inc
xlat
push
nop
or
rclb
shrl
push
idivb
sbb
sub
sbb
jp
pop
mov
popa
dec
pop
push
mov
stos
test
gs
insb
out
push
pop
aaa
xchg
ja
sub
leave
push
push
xor
fwait
pushf
sub
cmpl
mov
cmpb
or
jae
mov
popa
fcompl
ljmp
loope
dec
pop
divl
call
ja
sbb
mov
jns
leave
push
je
pop
inc
rolb
decb
xchg
mov
xchg
cmp
jo
scas
push
ljmp
pop
mov
lock
mov
pop
add
cmc
pop
sub
dec
shlb
movsl
pop
movsb
daa
arpl
lret
mov
push
lods
lcall
dec
iret
sub
sub
jns
pusha
cmp
push
jns
push
std
mov
mov
adc
inc
hlt
cli
call
push
add
scas
dec
mov
jnp
das
pop
mov
xor
mov
mov
dec
jae
dec
outsb
shlb
aas
push
sub
xor
jno
call
movsl
mov
fisubl
icebp
rcrl
sbb
xorb
insb
mov
dec
jmp
mov
cwtl
das
out
jb
mov
mov
pusha
sahf
add
and
orb
push
les
jecxz
xor
cmp
dec
push
cmpsl
aaa
dec
fldl
imul
and
cwtl
repnz
pop
stos
inc
add
enter
je
jmp
dec
bound
icebp
push
jae
xchg
and
ja
xor
push
cmp
inc
sub
lret
cs
lret
das
dec
xchg
mov
mov
jmp
adc
fwait
es
adc
push
inc
fcoms
mov
clc
add
xchg
testb
dec
das
push
mov
lahf
and
mov
or
push
inc
push
push
mov
movsl
mov
nop
lods
add
call
xor
inc
aaa
ret
iret
in
mov
imul
stos
jmp
and
cmp
divl
fwait
lock
rcrl
daa
or
cmp
jb
xchg
out
adc
or
adc
out
xchg
out
fs
pop
push
or
jmp
sub
mov
inc
mov
jecxz
mov
lcall
and
pop
or
dec
fs
or
outsb
jge
or
jmp
adc
push
xor
insl
dec
xlat
pop
push
out
scas
mov
popa
xor
xor
ljmp
cmp
movsl
aam
insb
jno
divb
fs
sti
push
pop
shl
lods
lock
and
test
cmp
aad
sub
push
mov
subb
in
out
mov
sahf
xor
pusha
xchg
jle
mov
jb
pop
cmpsb
leave
mov
aaa
xlat
cmp
xor
jno
call
jno
inc
faddl
mov
lret
xlat
cli
call
call
push
fiaddl
and
popf
std
fs
xchg
push
orb
mov
ljmp
pop
sub
sbb
icebp
jns
and
and
adc
sbb
jg
and
movsb
jno
std
outsb
cld
mov
cld
push
mov
lds
dec
cmc
sbb
inc
aas
push
xchg
into
push
jne
popa
or
jge
pusha
pop
sarb
ficompl
aad
or
mov
std
push
andb
fidivs
push
mov
xor
fistpll
inc
cli
addl
test
lret
sub
fnstenv
fsubs
test
call
pop
cmp
mov
jo
pop
push
mov
fadd
test
fisubrs
push
je
jb
movsb
dec
sbb
add
cwtl
call
decb
mov
or
ds
clc
lahf
xor
sub
sbb
cs
int
pop
mov
jo
int
hlt
cwtl
imulb
cwtl
aad
int3
mov
xorb
pop
loope
push
push
lods
add
jle
mov
clc
ficoml
popa
insl
add
loopne
xchg
out
repnz
and
fmull
pop
or
xor
add
aas
ret
mov
pop
xor
scas
fisttpl
in
sbb
push
and
cmc
nop
paddw
mov
jno
sub
outsl
cmpsl
dec
pusha
lahf
jg
mov
loope
mov
cld
bound
test
sahf
jbe
push
test
sbb
iret
lods
xchg
sbb
popa
cld
movsl
adc
in
movb
outsl
pop
push
faddl
add
jmp
pop
adc
nop
inc
inc
adc
sbb
cli
sub
sbbl
movsb
lods
lahf
cs
pop
mov
push
data16
sbb
mov
pop
jb
adcb
jecxz
mov
pop
cmpsl
jb
sbb
imull
push
neg
mov
or
and
and
aam
mov
xchg
dec
xchg
shlb
xor
fcmovb
adc
lret
or
lods
sti
xor
sub
lea
sbb
push
or
mov
aas
mov
mov
into
adc
lret
pop
scas
jmp
xorb
test
cmp
inc
lock
fsubrl
or
push
dec
in
pop
jbe
adc
inc
fmuls
cmc
int3
out
mov
fisttps
aam
imul
daa
cmp
mov
sahf
add
cmpsl
nop
sbb
sahf
pushf
das
or
or
mov
and
mov
push
jmp
add
imul
jnp
movsb
sbb
push
lds
fidivrs
mov
bound
dec
pushf
cmp
push
xchg
lock
test
sti
call
jns
clc
mov
outsl
add
imul
dec
mov
decb
pop
dec
imul
and
inc
testb
sar
xor
test
dec
push
pop
inc
fldenv
outsb
xorb
jne
sti
sub
mov
sub
ljmp
jae
mov
fsts
adc
mov
outsb
xor
add
fimuls
int
cmp
pop
push
hlt
mov
lcall
mov
mov
pop
push
ret
stc
sub
shlb
jae
cmpsb
mov
popf
test
idiv
repz
sub
add
mov
mov
daa
sbb
rcrl
pop
in
jge
shl
maxps
cmp
and
iret
ret
pop
ljmp
xlat
aaa
stos
les
inc
or
pop
scas
sbb
dec
mov
adc
add
cltd
fdiv
lret
mov
out
int
mov
or
out
lock
iret
movsl
dec
dec
dec
std
mov
fmull
pextrw
daa
inc
outsb
fcoms
adc
bswap
out
and
xchg
jp
imul
cmpsl
jl
cmpsb
adc
pop
out
pop
push
pop
aad
mov
sbb
movsl
fnsave
adc
insl
pop
fnstsw
add
rolb
loope
cmp
inc
add
movl
sbb
stos
test
jne
and
enter
dec
xchg
xor
push
mov
pop
mov
or
jge
ret
test
lret
rorl
xchg
pop
sub
xor
cmc
iret
or
outsl
out
movsl
dec
int3
ror
flds
and
xchg
pop
lods
into
fbld
std
xchg
push
ds
fistpl
es
jecxz
ds
loope
int
pop
or
enter
aas
addb
add
xor
test
mov
adc
inc
shl
sarl
lds
mov
inc
mov
mov
ljmp
sahf
arpl
and
xor
addr16
push
fisubl
decl
xchg
cmc
mov
sub
mov
movsb
mov
mov
mov
pop
cmpb
pop
aam
mov
pop
adc
pushf
add
js
lcall
sub
and
les
enter
gs
dec
inc
and
out
fstp
lock
inc
jp
repz
jno
iret
xchg
cmpsl
inc
cmp
cmp
jge
mov
in
lea
aaa
or
inc
xchg
and
xor
stos
ret
cmp
dec
sbb
aad
and
mov
push
out
aad
adc
out
add
aas
aad
mov
arpl
jl
cmc
sub
ja
mov
xor
mov
xor
ja
cwtl
in
out
popf
inc
clc
mov
aam
pop
cld
and
or
mov
mov
jo
pop
jne
push
fcompl
inc
lods
cmp
push
inc
pop
pop
add
xlat
jno
and
fmulp
arpl
fsubr
add
daa
mov
pop
pop
mov
fdivp
pop
dec
movsl
or
movsl
mov
mov
xor
faddp
cltd
not
jg
jle
movsb
rcl
popf
or
adc
inc
sbb
int
movsl
mov
pop
ljmp
popf
push
mov
fdivrs
out
add
add
je
xlat
stos
xchg
sub
clc
push
out
in
enter
lahf
repnz
dec
mov
add
add
mov
and
mov
test
fisttpl
lods
pop
push
mov
mov
push
dec
sbb
leave
enter
or
cltd
mov
fstpt
roll
fwait
mov
addr16
icebp
jl
inc
push
inc
sahf
js
mov
add
xor
add
xchg
jg
xchg
lcall
js
or
mov
jp
xor
aas
push
pop
dec
xchg
sub
out
mov
aad
lea
push
pop
and
mov
xchg
ljmp
mov
sub
call
mov
adc
cmp
push
push
add
add
cltd
out
jns
outsb
xchg
cmp
dec
dec
mov
or
bound
lock
dec
mov
sbb
jns
mov
and
adc
lds
aas
incl
notb
andl
lds
cmp
lret
and
and
in
xorb
inc
fcmovne
insl
popf
add
push
adc
xchg
jns
lret
adc
in
in
xchg
dec
mov
cmp
dec
lods
fmull
sbb
jb
in
xchg
ret
add
xor
mov
and
fdivr
and
pusha
cli
sub
dec
mov
repnz
push
pop
xchg
stos
ret
ret
mov
stc
outsl
ja
jo
or
cmpsl
cmp
insl
cmp
xchg
int
pop
repnz
push
add
push
mov
fsts
dec
fnstcw
pushf
out
or
roll
repnz
popa
hlt
gs
pusha
sbb
push
mov
icebp
cmp
xor
and
lods
test
dec
add
nop
cmp
sub
xor
daa
or
in
and
jo
shrb
and
jae
cmp
adc
adc
and
jnp
mov
iret
adc
and
andb
jno
jp
mov
or
shlb
das
dec
adc
mov
int
mov
inc
sarb
mov
dec
rcl
add
cwtl
cmpsl
sbb
add
sbb
out
std
sbb
dec
bound
adc
mov
js
decl
das
sbb
xor
and
sub
sbb
xchg
iret
loope
sbb
cmpsb
pusha
mov
shlb
jmp
imul
mov
mov
bnd
mov
insl
cs
cmp
mov
pop
dec
je
adc
enter
mov
or
add
cwtl
int3
xor
jle
ss
cmpsb
jmp
dec
or
jle
xchg
xor
daa
adc
sti
or
movsw
popfw
push
pop
in
jmp
test
out
mov
sub
pop
mov
jge
pop
scas
stos
push
cltd
mov
sub
lods
pusha
pushf
and
jnp
orb
mov
cli
pusha
fadds
adc
mov
push
push
test
lea
and
stos
push
jns
mov
or
sub
ret
mov
mov
out
aam
fnstenv
mov
push
les
lret
jne
xchg
sbb
jbe
es
mov
cli
daa
ljmp
inc
adc
and
mov
mov
sbb
aas
add
sub
xchg
scas
nop
mov
in
out
imulb
ja
sahf
push
inc
fadds
sub
test
ja
shrl
shlb
jb
pop
lods
sub
loopne
sub
stos
push
mov
test
lods
or
aad
dec
dec
call
cmp
pop
stc
aam
fdivs
iret
push
out
cmp
mov
imul
icebp
test
push
xor
fildll
int3
fidivl
lahf
mov
leave
out
jnp
lea
imul
lds
stos
inc
fstps
jecxz
or
push
jge
adc
sbb
lock
xchg
ficoml
pop
js
mov
push
xchg
add
jmp
sbbb
shl
repnz
ljmp
mov
xchg
adc
sub
pop
ds
sub
cs
js
rcrl
jne
inc
push
andl
xchg
mov
cmp
mov
icebp
mov
push
add
stc
inc
adc
out
sub
js
cli
push
cs
and
push
push
loope
int
sub
lods
insl
push
test
data16
adc
inc
das
mov
js
dec
repz
inc
xor
outsb
nop
dec
mov
stc
push
sub
mov
ret
popl
push
movsb
movsb
movsb
mov
pop
out
bound
sbb
dec
fucom
lahf
mov
push
shrl
cli
adc
ss
mov
ljmp
and
xor
dec
mov
adc
ret
out
icebp
mov
sub
push
in
or
and
cmp
mov
mov
inc
pushf
popl
and
addb
iret
dec
cmp
sub
out
xchg
dec
aam
lret
and
imulb
je
rorb
sub
aaa
std
sbb
mov
into
out
ret
pop
sbb
shlb
mov
sub
cld
sbb
push
dec
mov
mov
inc
fsubrs
cmp
mov
out
sbb
out
mov
lcall
clc
ss
cmp
out
adc
and
jae
xchg
adc
jbe
leave
lock
ljmp
imul
jne
ja
mov
rcll
and
mov
or
cmp
and
andl
shlb
pusha
dec
and
add
sub
shlb
mov
or
cltd
or
lret
push
sub
cmp
or
lret
or
cld
push
scas
inc
jp
movsl
sti
insb
loopne
ss
push
sti
mov
lods
xchg
fisttpll
aas
push
sub
or
int
add
xchg
mov
aaa
jecxz
daa
scas
negl
cmc
push
in
mov
lock
lahf
xor
mov
push
or
xlat
test
adc
cmp
mov
jb
add
pcmpeqb
jnp
rcr
push
and
in
pop
push
mov
mov
dec
imul
jo
jp
and
inc
cmpsb
lea
sbb
andl
add
and
test
sub
ja
dec
ljmp
scas
into
ja
xchg
xor
repnz
xchg
leave
xchg
add
popf
das
adc
shlb
jae
and
testl
jl
addr16
sahf
push
gs
cmp
jle
insb
jne
pop
push
lcall
cmp
sub
adc
or
adc
sbb
call
dec
sub
mov
or
sub
mov
hlt
mov
or
ret
pop
test
push
out
sbb
jno
es
icebp
pop
xor
int
push
and
loopne
lds
call
stos
or
lahf
stos
add
xchg
add
mov
push
lret
andl
and
cmp
fildl
int3
test
cmp
or
xchg
in
xchg
sub
iret
cmc
mov
mov
mov
sbbb
leave
ficoml
test
sub
aas
mov
inc
cmc
cld
outsb
push
cmp
dec
mov
pop
lea
sub
arpl
inc
adcb
jbe
arpl
std
xchg
and
jns
insl
and
jae
push
lret
call
mov
push
das
lds
mov
sub
xor
jmp
adc
or
ljmp
xchg
enter
adc
test
dec
cs
call
xchg
orl
ss
sti
shr
aam
popf
mov
pop
cmp
repz
aad
mov
jmp
mov
jle
pushf
pop
xlat
xchg
and
leave
sahf
dec
inc
sbb
aaa
push
jno
push
mov
jo
stos
mov
sbbb
lods
jbe
xchg
mov
push
repz
sarb
adc
sub
xor
adc
dec
pusha
or
jge
cmc
pop
outsl
pop
mov
xchg
cltd
in
dec
mov
dec
aam
imul
sbb
pop
add
or
adc
jne
jae
les
int3
mov
push
insb
call
dec
out
mov
cmp
push
out
test
sbb
and
or
sbb
clc
mov
in
dec
rcrb
jl
xchg
pop
xchg
sub
lock
pop
ret
pop
mov
sbb
jnp
stc
xor
enter
mov
mov
xor
adc
mov
xchg
jle
iret
sub
pop
pop
pop
sarl
in
inc
loope
xchg
loop
add
test
out
inc
les
movsb
fsubs
mov
push
xor
and
ljmp
jmp
rol
mov
es
and
inc
faddl
adc
in
xor
xor
or
adc
mov
fldl2t
push
subl
mov
faddl
test
push
clc
jae
divl
outsl
push
ljmp
pushf
dec
in
mov
into
mov
adc
fisttps
push
imul
xor
aam
mov
pandn
popf
push
mov
lret
lret
and
loopne
inc
mul
push
jmp
jo
add
test
and
mov
test
neg
mov
jnp
addr16
mov
movl
mov
push
push
out
and
ljmp
fnstsw
ret
lret
inc
dec
imul
cmpsb
xor
jno
sub
scas
mov
inc
fstl
daa
adc
ja
outsb
lahf
mov
popl
add
or
arpl
pop
mov
mov
movsb
push
rcrl
cmp
push
adc
lret
js
inc
ds
inc
jmp
imul
out
xchg
and
pop
push
mov
aam
std
sbb
adc
mov
mov
lahf
das
mov
out
xchg
pop
ret
loop
popa
cwtl
in
inc
fwait
aam
sbb
lods
jmp
fisubs
jg
fcmove
aad
pop
scas
fldlg2
arpl
aaa
lods
inc
adc
mov
mov
jne
xor
jecxz
stc
popa
push
add
xchg
hlt
cmpsb
push
sub
lret
push
cwtl
cmp
lcall
outsb
fdivl
daa
mov
movsl
rcrl
adc
jno
mov
mov
fdivl
fsubs
popa
fists
mov
xchg
sub
pop
shll
stos
ficomps
test
mov
add
out
out
or
arpl
aas
dec
sub
cmpb
xchg
ret
das
mov
xor
adc
fildl
mov
dec
jle
int3
jnp
cmc
ss
mov
hlt
push
jnp
xchg
push
imul
out
test
jmp
xchg
mov
and
sbb
ret
cmp
outsb
sbb
jmp
sbb
aas
sub
or
pop
push
daa
mov
stos
and
jno
lds
shl
jnp
loop
mov
sbbb
adc
cli
push
adc
sub
xchg
pop
add
xchg
lahf
out
iret
xchg
cmp
hlt
lock
fdivp
adc
pop
inc
lea
xchg
setge
lods
lods
jb
test
mov
jno
mov
sbbl
call
cmp
sbb
add
int3
fsubs
movsl
jecxz
daa
inc
fiadds
mov
pop
sbb
add
mov
fistps
pop
int
loopne
mov
fistl
push
pop
mov
sub
sub
pop
div
jne
in
iret
pop
add
loope
out
cld
adc
mov
lea
adc
test
push
pop
insl
xorb
mov
call
mov
inc
out
out
cmpsl
fprem1
fwait
repnz
adc
cmpsb
sbb
jp
fldt
and
mov
cwtl
inc
push
test
mov
xchg
sbb
pop
movsb
hlt
mov
sbb
mov
xor
repz
sub
cmpsl
pop
push
push
ret
dec
fsubrs
xor
jmp
mov
mov
int
stc
add
hlt
inc
ss
fistpl
fcomip
dec
sub
mov
hlt
gs
stos
add
popa
sbb
les
mov
aas
ss
movsb
xor
jmp
cld
adc
fsubrs
or
inc
mov
jle
in
sbb
out
movsb
inc
ret
cmc
pop
outsb
imul
dec
inc
jg
in
add
mov
mov
xchg
out
ja
fsub
sbb
sub
and
mov
ss
or
fsubr
dec
cmp
or
push
mov
mov
jnp
inc
cmp
roll
xor
sbb
add
daa
or
mov
fsubr
xlat
mov
mov
lea
mov
cmp
cmp
pusha
xor
pop
pop
sbb
mov
call
fwait
dec
movsb
mov
push
es
out
jg
xchg
mov
pusha
push
js
mov
movsl
das
pushf
lcall
adc
jno
push
fwait
mov
mov
std
xchg
int
and
push
dec
adc
lahf
jae
mov
lcall
sbb
dec
push
pop
cmc
stc
ljmp
and
popa
sbb
adc
jb
xor
shrb
lock
mov
std
out
test
int
out
andb
dec
cmp
stos
mov
test
jno
mov
gs
les
out
jno
and
and
fcmovnbe
call
test
scas
daa
cbtw
mov
daa
popl
aam
pop
jbe
icebp
stc
lods
mov
dec
daa
data16
ds
mov
das
imul
sbb
adcb
push
lretw
pop
jno
inc
loope
adc
pop
jle
fidivl
syscall
cmc
xorl
test
aas
frstor
icebp
adc
sub
repz
jge
push
sti
cs
adc
subl
into
gs
push
mov
xor
mov
inc
icebp
mov
out
popa
mov
push
repnz
add
loop
or
xchg
sub
lahf
inc
or
mov
out
mov
in
dec
cwtl
scas
jmp
and
ds
add
add
sub
xchg
sar
xchg
push
popa
repnz
jg
repnz
mov
in
xlat
sub
mov
push
mov
shlb
stc
addr16
lea
sar
in
sbb
int
jl
mov
lock
mov
push
jecxz
pop
repnz
dec
aam
sti
add
in
test
push
in
pushf
inc
pop
into
lahf
js
inc
jecxz
ja
ds
pop
sbb
pop
das
jno
stc
sahf
add
scas
lahf
xchg
call
mov
rolb
push
cmp
mov
inc
pop
add
repz
sub
fwait
inc
daa
mov
aad
lds
das
dec
jge
call
mov
xchg
sub
cmp
es
inc
int
imul
xchg
add
sti
and
imul
shrl
ss
sub
xchg
push
sbb
lds
jp
mov
push
repnz
xchg
xchg
ja
mov
shrb
stos
sub
daa
in
loop
pusha
popf
fisubl
push
add
fcoml
pushf
add
xchg
jmp
add
lods
pop
pop
aaa
add
lods
sub
mov
xor
jle
pop
ds
fwait
imul
xchg
jno
fdivrs
sbb
mov
cli
pusha
std
rcr
dec
adc
in
mov
test
sub
aad
mov
add
popa
loop
fstl
das
inc
pop
stos
xchg
mov
sbb
mov
aam
ss
adc
and
push
mov
push
and
add
mov
add
repz
mov
push
fldl
mov
fidivs
outsl
xor
lret
pop
jge
test
inc
jle
jp
outsl
movsl
cmp
int
int3
push
mov
inc
inc
xchg
pop
icebp
xchg
mov
imul
lods
dec
ja
jne
jle
dec
push
int
inc
adc
mov
pop
inc
cmpsb
cld
stos
call
adc
mov
jmp
popa
sbb
loopne
jo
push
bound
jg
jo
pop
popf
clc
outsl
pop
dec
pop
mov
xor
mov
xor
sub
adc
rorb
std
lret
fisubl
or
mov
pop
xchg
add
arpl
aaa
int3
fildll
and
push
cmp
push
dec
and
into
shrl
cmp
and
xor
test
add
push
nop
rcll
repnz
ljmp
mov
stc
movsl
xchg
lea
sahf
int3
pushf
pop
lods
mov
aad
std
jns
jo
cmp
adc
leave
nop
data16
decl
jge
repnz
jmp
dec
cwtl
mov
shr
cwtl
xor
into
xor
mov
int3
daa
mov
sbb
test
jle
mov
gs
std
pop
lahf
out
or
dec
out
xchg
out
cmpsb
cmp
stos
lret
les
sbb
subb
orl
xor
dec
push
inc
in
fucomip
jnp
push
sub
shl
std
cmp
adcb
fdivr
mov
repz
add
pop
pusha
insb
add
imul
mov
xchg
test
jp
fmull
negl
add
push
test
mov
test
adc
mov
lock
std
aam
inc
or
mov
insl
sub
xchg
daa
and
enter
movsb
loope
nop
mov
fidivs
jmp
test
mov
and
add
and
sub
xor
cmp
pop
sti
fnsave
mov
clc
iret
adc
add
jg
mov
or
pop
pop
inc
inc
mov
push
jbe
arpl
add
sbb
test
adc
lahf
push
mov
push
mov
jl
pop
je
mov
ret
jb
sub
adc
jae
jno
jmp
rcrl
shr
push
pop
push
xchg
mov
jge
lods
jo
jp
or
cmp
push
xor
in
push
fwait
dec
lcall
and
arpl
popa
hlt
cs
ljmp
sub
mov
pushf
dec
ror
sbb
ret
mov
sbb
cmp
sub
dec
rorb
xlat
sarl
fsubrs
adc
data16
cli
nop
outsb
clc
shll
int
data16
push
add
jne
add
xchg
pushf
cmp
rclb
in
mov
in
inc
shll
mov
repz
mov
and
mov
jb
or
pushf
mov
push
inc
stc
jge
or
mov
sub
mov
xorb
push
push
mov
or
hlt
pop
subb
dec
pop
int3
movsb
or
pop
imul
jno
jg
loop
jno
mov
repz
test
sbb
stos
and
std
sub
and
xchg
outsb
data16
pushf
pop
xchg
shrl
mov
inc
push
pop
lcall
inc
aam
shlb
dec
jno
pop
push
sub
test
push
pushf
loope
hlt
mov
mov
cld
mov
stos
jmp
in
clc
cld
into
ss
pop
sub
leave
jecxz
mov
mov
add
movsl
push
ljmp
xchg
jno
push
dec
adc
in
fisubs
in
scas
call
loope
xor
les
sub
popl
fbstp
sbb
dec
add
int
lret
cwtl
test
insl
push
ja
packuswb
adc
nop
xchg
jno
mov
jge
dec
push
sub
cmpsb
add
mov
mov
sar
xchg
mov
leave
imul
mov
hlt
lss
mov
dec
and
mov
fs
lock
loop
add
jne
xchg
into
lds
insb
push
cmc
adc
stos
mov
fsub
inc
movsl
cmc
xchg
pop
scas
push
mulps
xchg
popf
adc
push
shll
in
ret
push
pop
add
les
stos
sahf
or
lahf
repz
js,pt
jne
add
mov
enter
loop
ljmp
scas
lock
dec
mov
cltd
rclb
sbb
ja
xchg
cmc
add
pop
pushf
push
sbb
xor
pop
shrb
mov
adc
fucomi
pop
nop
out
sbb
xor
and
outsl
cld
popf
jg
or
aas
cmpsb
sub
out
or
adc
sub
mov
in
nop
mov
xlat
pop
xor
lret
cmp
mov
mov
test
pop
out
test
mov
adc
mov
adc
sbb
insl
daa
outsl
pop
ret
xchg
lret
jle
gs
leave
xacquire
idivl
xchg
leave
je
sub
imul
cltd
mov
xor
push
les
ss
es
adc
int3
outsl
testl
pusha
pop
jo
clc
sbb
sub
jne
ret
insb
ret
js
jbe
into
mov
pop
rorl
mov
cwtl
pop
stos
sbb
int3
pusha
or
ret
ret
push
xorb
jb
xchg
popf
mov
or
fisubl
xor
sbb
mov
dec
test
popa
into
jle
ret
or
or
arpl
mov
jbe
adc
idivl
adc
rcl
jle
and
sbb
test
cmp
out
subl
enter
mov
in
push
cmc
fnstcw
div
into
jae
add
scas
and
mov
adc
std
pop
or
jns
mov
lock
and
aam
pop
rcr
mov
lcall
pusha
push
or
xor
movsl
push
scas
xchg
lsl
inc
mov
mov
loopne
inc
daa
imull
sub
movsb
xchg
addl
fdivl
push
mov
pop
sub
gs
mov
popa
or
or
mov
aam
push
jns
mov
data16
xchg
mov
add
dec
jmp
pop
xchg
insb
add
scas
dec
inc
iret
fistl
xchg
add
mov
lds
and
adc
dec
es
adc
and
add
or
push
mov
rcrb
inc
insb
das
mov
sub
pushf
fsubl
mov
scas
push
push
push
push
test
ret
or
push
inc
pop
push
push
in
jae
stos
sbb
dec
lret
mov
jnp
in
outsb
jmp
push
xor
fisttps
stc
fmulp
cmp
lods
insb
push
data16
adcb
xchg
lods
xor
mov
xchg
cmpsl
clc
and
adcl
mov
out
std
xlat
sbb
sahf
test
pop
sub
mov
popf
pop
jae
or
pop
jo
rcl
pop
sbb
lret
dec
mov
sub
dec
add
push
int3
and
outsl
iret
nop
ret
mov
jne
mov
pop
xchg
add
sbb
loop
into
cmp
bound
es
jno
xchg
or
xchg
movsl
adc
lods
mov
mull
sbb
push
jl
push
aas
or
add
xchg
mov
jae
les
enter
push
fsubl
xor
inc
arpl
cmp
inc
in
fstps
adc
xchg
enter
xchg
dec
adc
jns
sub
inc
cld
into
cmp
xor
bound
push
pop
iret
stos
cmpsb
arpl
sbb
shr
test
scas
or
sahf
add
mov
sub
ret
sub
lds
in
xchg
rclb
setbe
repnz
and
sbb
xchg
imull
out
jns
adc
dec
adc
test
stos
inc
fs
js
mov
cmc
lcall
cmp
imul
push
cmpsb
sahf
lock
fdivrl
lret
push
outsl
jl
loopne
popf
inc
pop
rol
dec
and
and
pop
pusha
xchg
jmp
popf
sub
out
sbb
jge
mov
xchg
sub
jmp
add
stc
inc
lcall
and
adc
cmpsb
aaa
sub
test
lea
hlt
repz
pop
rorl
mov
dec
sub
mov
mov
jns
pop
push
aad
jle
mov
mov
mov
sbb
cli
cltd
stos
jmp
es
jg
outsb
rol
roll
mov
jmp
lret
jecxz
adc
js
cmp
mov
pusha
je
xchg
add
test
jno
enter
inc
call
fwait
notb
decl
test
xor
cmp
fidivrs
inc
out
subl
inc
add
dec
mov
aas
ljmp
jp
xor
fwait
xchg
stc
and
jb
xchg
mov
inc
ss
or
mov
lds
cmc
je
mov
and
sbb
mov
and
or
sbb
cmp
jb
je
aas
mov
in
inc
mov
and
dec
jne
mov
test
mov
mov
pusha
aam
outsl
inc
ds
movsb
mov
and
fcomps
jl
sbb
fcmovu
push
call
jg
lahf
and
jne
inc
addr16
insb
push
rorb
std
add
xchg
outsl
sbb
sub
imul
dec
bound
in
push
push
xlat
ss
push
imul
out
add
repnz
cwtl
jbe
jns
jne
arpl
int
pop
xor
mov
sarl
fisttps
sbb
cmp
push
out
push
xor
shll
mov
icebp
push
stos
pop
cli
push
and
mov
adc
sbb
lea
cmp
xor
inc
int
inc
mov
aaa
in
jo
lods
data16
imul
adc
out
idivl
inc
mov
xchg
cld
push
xchg
mov
jecxz
pop
jl
cmpb
shrl
ret
mov
out
arpl
cmp
in
pop
mov
icebp
mov
push
movsl
fwait
xor
sarb
xor
add
ret
push
and
cmpsb
pop
cld
lcall
mov
in
lock
rorb
mov
movsl
push
bound
fnstsw
and
xchg
icebp
push
add
shll
mov
or
mov
mov
aaa
in
test
gs
aas
fwait
je
popf
lods
adc
cli
adcb
inc
jne
jo
test
and
adc
imul
adc
faddl
fadds
mov
fldl
mov
lods
mov
es
add
jne
sbb
mov
lahf
xchg
popf
xor
inc
lock
inc
popf
or
cmp
fs
mov
jle
push
add
daa
adc
int
jge
mov
pushf
aad
int
pop
out
and
inc
xchg
and
and
inc
sbb
shll
mov
jns
les
lret
out
rcll
xchg
out
les
xchg
xchg
add
xchg
mov
mov
mov
inc
test
xchg
dec
cmpsb
mov
push
ret
popa
or
in
dec
push
adc
stc
or
inc
into
stos
pop
sahf
xor
or
mov
sub
stos
cmc
xor
test
sub
push
lret
ficompl
rcrl
push
sub
addr16
pop
mov
xchg
mov
xchg
mov
cmpsl
movsl
mov
pusha
idivl
addr16
mov
arpl
pop
movsb
dec
test
ret
mov
movsb
push
push
jecxz
loope
fmul
or
mov
mov
pop
icebp
outsl
cmpb
mov
js
mov
pop
bound
rcrb
add
out
data16
leave
filds
loop
add
push
inc
inc
jmp
inc
adc
cld
dec
fwait
or
test
sbbb
mov
sbb
inc
and
pop
xor
dec
sbb
dec
jmp
sbb
mov
push
idivb
out
push
shl
nop
fcoms
mov
pop
out
test
rcrl
jne
ljmp
push
lcall
inc
xor
xchg
imull
jae
test
call
cmpsb
jmp
test
ja
adc
arpl
push
or
inc
cmp
mov
stc
sbb
aad
adc
imul
xchg
jge
push
mov
iret
bswap
cld
movsl
rcll
mov
or
xor
mov
mov
jg
das
mov
cmp
test
hlt
or
cmc
mov
sahf
xchg
cld
sub
idivl
rclb
lds
lahf
shl
jns
mov
loop
cmp
mov
pop
cs
fdivrl
cmp
jge
call
repnz
gs
je
lock
outsl
mov
xchg
fs
sbb
sbb
pop
jb
xchg
adc
aad
cmpsl
outsl
hlt
mov
les
add
cltd
test
outsb
aas
push
int3
call
inc
loop
lret
pusha
subl
scas
cmp
xchg
push
pop
clc
shrb
cmp
sub
mov
mov
pop
sub
mov
jp
je
out
rorl
test
mov
scas
dec
adc
jle
or
add
loopne
fs
cmp
cmp
in
adc
add
mov
js
xor
movsl
sub
jnp
je
mov
sbb
jne
push
or
mov
xchg
xchg
mov
push
cmp
out
jo
xchg
hlt
out
sub
add
hlt
jbe
cld
xor
or
mov
shl
mov
out
mov
pusha
int3
push
jo
shlb
xchg
mov
scas
aam
out
add
mov
jno
and
addr16
data16
fstps
jl
imul
mov
loope
push
lock
lods
inc
popa
xchg
jb
inc
rorb
int3
cmc
adcb
dec
cltd
ja
in
test
stc
and
pop
and
idivl
test
enter
and
xchg
fs
mov
fbld
repnz
inc
push
sbb
push
xor
je
dec
call
addr16
adc
mov
mov
test
lret
xor
js
sbb
xchg
xor
sub
les
int3
fiadds
push
sub
pop
sbb
xchg
std
inc
idivl
xchg
push
sub
adc
hlt
int
outsl
es
xchg
cmc
inc
fldt
inc
enter
loopne
mov
push
aam
xchg
jge
ljmp
mov
loopne
jg
push
call
popf
pushf
addr16
mov
xchg
in
pop
cwtl
jecxz
lock
movsl
add
jg
in
pop
push
das
loop
jae
mov
xchg
nop
jns
push
push
cltd
inc
and
cmp
outsl
inc
frstor
lds
das
dec
pop
dec
jle
jns
jg
jl
mov
dec
mov
notl
lret
cmp
jmp
mov
or
cwtl
mov
or
mov
xchg
sub
rorl
mov
test
inc
adc
cwtl
das
iret
mov
mov
xor
sbb
push
addr16
inc
aaa
shll
push
js
xchg
ss
dec
insb
add
pop
inc
cltd
out
adc
cmpsb
daa
loop
or
aas
push
push
jno
pop
cmpsl
jnp
lock
push
mov
mov
dec
dec
inc
xchg
mov
mov
dec
cmp
sub
cmp
push
xor
pop
mov
push
xchg
xchg
test
cmc
jo
std
lcall
cmpsl
and
push
push
in
xchg
mov
mov
pop
mov
frstor
mov
subl
lods
ret
insb
cs
inc
movsl
push
mov
bound
push
hlt
shll
mov
cmp
iret
rol
sbb
push
testl
add
xor
mov
sbb
mov
cmpsb
and
cmpsb
mov
xchg
add
je
push
adc
adc
mov
fnstsw
jge
int
mov
adc
mov
cltd
pop
and
inc
push
xchg
dec
stc
pop
imulb
push
push
cmpsb
rclb
add
cltd
mov
push
pop
adc
movsb
repnz
std
xchg
jmp
xchg
js
mov
mov
or
pop
or
xor
mov
lods
out
out
popf
leave
movsl
js
scas
push
lcall
push
or
mov
sti
fists
rolb
lock
xor
and
mov
cli
lret
dec
xor
inc
cltd
push
inc
nop
and
and
insb
add
xor
fdivrp
xchg
mov
ret
cmpsb
push
sbb
insb
mov
xchg
dec
insb
insl
adc
pop
pop
movsl
lds
xor
jle
mov
adc
loope
sbb
stc
jns
xlat
xor
lock
stos
cmp
arpl
outsl
in
ret
mov
pushf
mov
in
fadd
aas
loop
in
jmp
clc
mov
xor
mov
sbb
or
rcrl
xchg
and
mov
inc
int
insb
xor
nop
pop
cmp
test
sbb
push
sub
adcb
cmpsl
pop
sarl
loopne
xlat
in
cwtl
push
adc
push
xorb
mov
inc
bound
popa
es
lods
xchg
jmp
mov
lahf
sub
cmp
cmp
lods
rcll
dec
add
pop
adc
lcall
cmp
dec
aam
pusha
das
outsl
cmc
xchg
push
add
push
jg
adc
jne
sub
add
mov
out
scas
addb
cmp
push
sbb
pushf
push
cld
jns
mov
lds
mov
mov
pop
outsl
imull
add
std
or
and
call
adc
cmpsb
adc
sub
imul
cwtl
push
shlb
jnp
pushf
cmc
sti
loopne
pop
xchg
sbb
outsb
jnp
add
hlt
xor
mov
aaa
lds
xchg
xchg
adc
sub
sbb
or
jle
sbb
popf
imul
mov
pop
out
pop
or
mov
jae
jle
mov
xchg
lret
aad
addb
int
notb
push
test
shrb
pop
jp
xchg
sbb
jecxz
daa
mov
rol
jb
mov
jb
outsb
pop
sbb
sub
mov
call
loope
es
scas
mov
movsb
jbe
cmc
push
mov
sbb
sahf
std
mov
imul
dec
loopne
das
test
stos
pop
test
xor
arpl
enter
stos
xor
and
and
inc
push
in
sahf
jb
dec
mov
rorb
ljmp
push
xor
mov
pop
push
fstl
fmull
mov
fsubp
jle
je
push
push
arpl
lahf
jmp
and
std
pop
addb
add
push
or
mov
pop
out
jecxz
xlat
mov
in
jge
cmp
pop
test
dec
and
fs
shrb
xor
dec
push
insb
dec
imul
jecxz
mov
push
lret
lcall
push
inc
jg
insb
dec
outsb
rorb
inc
lahf
sub
jle
insb
shlb
rcll
cmp
mov
xchg
insl
fs
iret
lahf
add
cmp
push
or
dec
pushf
lods
dec
cli
xchg
add
nop
ja
mov
cwtl
xor
mov
leave
aaa
jo
push
push
jo
mov
xor
outsb
pusha
or
call
mov
ret
data16
mov
jno
pop
lods
inc
test
mov
repz
push
lods
cmpl
sub
nop
push
dec
popl
add
jbe
scas
je
fadds
hlt
mov
push
mov
out
test
aas
popf
fnstsw
push
fucomp
test
shll
xchg
aaa
xchg
pop
and
aaa
into
mov
loopne
mov
pusha
add
jl
dec
icebp
jns
jg
aas
lea
mov
sbb
icebp
testb
nop
sub
inc
pop
icebp
lcall
test
sub
sbb
xchg
mov
flds
xor
scas
test
subb
aaa
shl
int3
repnz
cltd
cmp
xchg
les
mov
mov
insb
ret
add
test
jno
cmc
mov
int
mov
xorb
ja
lahf
sub
or
xchg
ljmp
lcall
cld
push
add
cmp
sub
fwait
and
cwtl
xchg
test
cmp
cmc
mov
push
frstpm(287
jl
jne
popf
cmpb
je
xor
push
or
data16
repz
mov
gs
jns
jl
adc
push
ret
hlt
push
aad
push
es
fidivs
into
jo
add
mov
xchg
jecxz
mov
jmp
jle
xchg
push
cli
add
lods
sub
pop
int
push
jg
cmp
fcomip
dec
test
js
fisubs
ficoml
repnz
int3
push
and
add
cmp
pop
je
jmp
cmpsb
mov
adcb
fidivrl
xchg
inc
dec
arpl
mov
test
fwait
stos
adc
leave
and
xor
xchg
dec
popf
jb
or
or
pop
jl
pop
xor
popf
out
popa
loopne
pop
mov
sbb
mov
lret
outsb
adc
add
out
sbb
int
outsl
flds
mov
add
jge
inc
lcall
mov
dec
mov
xchg
dec
inc
fdiv
mov
imul
xchg
insl
into
mov
adc
dec
fs
gs
es
sbb
inc
sbb
cld
and
fidivl
push
imul
adcl
and
lret
push
adc
cltd
sbb
and
mov
pop
in
pushf
fdivs
xchg
cmp
cltd
jnp
pop
aad
test
insb
add
adc
fdiv
gs
out
loopne
clc
dec
repnz
lea
ret
into
sbb
pop
mov
lret
mov
sbb
fnsave
jmp
les
jb
inc
sbb
sahf
xchg
sar
mov
pop
xor
cmp
fcmovbe
insb
or
push
hlt
call
movl
mov
or
or
and
jb
leave
adc
nop
xchg
cs
xor
pop
fld1
push
dec
push
fldlg2
sahf
or
inc
push
dec
mov
inc
les
les
shll
sti
inc
out
sar
xchg
jb
hlt
mov
xchg
sbb
int
loop
adcb
iret
sub
pop
lods
loope
or
cmpb
std
adc
or
orl
sub
xchg
mov
shrb
push
mov
data16
ljmp
jae
ja
sub
cs
mov
mov
rcll
stos
add
cmp
fsubs
inc
out
cmp
lea
mov
mov
loope
in
inc
add
sbb
push
jmp
mov
push
inc
push
outsl
adc
je
lcall
cmp
add
xor
xchg
enter
mov
repnz
sahf
ljmp
data16
jo
fstpl
test
pushf
cmp
xchg
imul
pop
test
sbb
mov
xor
lea
sub
or
je
dec
jge
xchg
outsl
jns
sbb
mov
sub
push
mov
sti
loopne
push
lods
mov
clc
cmpsl
mov
cmp
lods
mulb
push
jp
fwait
and
lret
es
cmp
lods
cmp
jno
cltd
es
imul
push
jae
push
inc
pop
nop
mov
push
inc
shrb
jo
or
rcrl
subb
fstps
mov
push
mov
dec
inc
daa
xor
mov
push
loop
mov
xchg
xchg
mov
ret
and
mov
mov
push
push
in
test
in
xor
fstps
lcall
jmp
pop
xchg
js
jecxz
out
stos
pop
repnz
lds
aas
hlt
mov
in
sbbl
cmp
sbb
adc
mov
les
mov
jno
mov
mov
sahf
sub
lods
jb
imul
mov
iret
sahf
outsl
adc
mov
es
sarl
jle
jecxz
arpl
pop
sub
lds
cld
mov
das
mov
jl
lock
sub
js
jp
xchg
mov
fwait
sti
es
out
bound
enter
sbb
dec
lret
mov
push
pop
sbb
aaa
push
mov
jbe
push
subl
pushf
fwait
shll
mov
dec
sti
jne
ret
lret
insb
enter
or
shr
js
dec
and
push
loope
cli
sar
cli
shrl
sbb
adc
xlat
inc
xchg
data16
aam
sbb
or
pop
adc
sbb
jno
inc
mov
dec
jne
mov
into
dec
add
add
sbb
xor
cmp
cld
prefetch
xchg
cltd
push
in
dec
popf
mov
cld
push
or
push
cmp
icebp
lcall
in
mov
jae
lret
add
pop
and
dec
into
or
stos
fsubs
pusha
xor
mov
xchg
mov
sbb
mov
adc
fiadds
lods
movsl
cmp
jno
pop
jae
divb
xchg
mov
test
push
jg
jne
fldt
pop
adc
jno
push
hlt
cltd
das
pop
stc
shr
xchg
pop
loope
jecxz
pop
movsb
and
in
leave
mov
jae
adc
jl
arpl
into
movsl
pop
scas
xchg
outsl
push
mov
jae
sbb
inc
mov
cmp
mov
mov
sbbl
in
mov
cltd
or
je
add
jne
test
cld
or
je
out
lods
aam
ja
in
or
sub
sbbb
sarb
xchg
sub
ss
mov
jb
fstpl
mov
cli
xchg
inc
pop
inc
leave
sbb
fildll
push
insl
aas
pop
xchg
xor
rorw
or
lea
lahf
mov
sub
jbe
xor
mov
fs
jmp
sub
or
loop
pop
pop
sarl
iret
cmp
mov
adc
push
mov
pop
pop
sbb
add
dec
mov
bound
pushf
adc
cs
in
inc
in
jle
aaa
enter
and
and
ljmp
mov
cmp
mov
cmp
sub
aam
pop
out
dec
std
jge
and
scas
mov
mov
fs
inc
push
inc
hlt
cmp
sahf
push
xor
xchg
les
adc
xchg
clc
pushf
adc
jno
aam
mov
sub
jne
loop
xchg
icebp
mov
mov
xor
xchg
mulb
rcll
loop
lds
inc
jns
ja
push
adc
jge
imul
xchg
mov
cmp
pop
cmpsl
aas
icebp
pop
in
jo
nop
mov
mov
cwtl
sbb
rorb
xor
hlt
stos
pop
mov
ss
mov
adcl
negb
sub
and
jo
repz
or
lock
or
es
out
inc
lret
cld
enterw
push
outsb
sub
sahf
mov
fbld
mov
gs
fwait
or
lahf
inc
jl
jge
js
jbe
inc
sbb
xor
push
push
mov
inc
xor
xchg
mov
jl
cmp
inc
push
mov
add
mov
rep
andb
sub
pop
clc
stc
mov
lea
mov
outsl
cmpsl
mov
out
fwait
cli
out
dec
inc
fcoml
mov
adc
addb
jmp
sbb
push
xor
fidivs
sbb
and
test
gs
push
inc
fsub
mov
cs
clc
mov
mov
int3
lcall
adc
imul
imul
mov
mov
jge
out
test
pop
dec
and
fidivrs
std
mov
jl
inc
add
cmpsl
lock
daa
push
repz
lods
adc
xor
cld
iret
jb
fsubrs
sbb
mov
je
xor
loop
push
in
pop
sahf
xor
inc
stos
cmp
fistpl
out
mov
dec
sbb
pop
sub
sub
cmp
jp
into
fdiv
sbb
inc
sub
xchg
lds
jno
adc
addr16
sub
ret
cli
insb
pop
movsb
pop
aad
sub
divb
pushf
dec
lahf
mov
mov
push
inc
dec
dec
mov
sub
mov
mov
pop
icebp
lds
jecxz
xor
rolb
xor
inc
xor
sarb
jnp
out
pop
cs
push
incb
scas
insb
xchg
push
xor
or
in
cmp
or
or
fistpl
mov
mov
in
dec
in
mov
movsl
inc
or
fcmovb
xchg
xchg
jbe
into
or
outsb
xchg
lods
lret
xor
pop
shlb
push
movsb
es
xchg
jg
mov
pop
out
fbld
loope
repz
rcll
dec
xchg
mov
cmp
cmp
nop
push
popa
and
ret
enter
shl
mov
cs
xchg
insl
xchg
lcall
out
lea
inc
adc
jnp
arpl
imul
mov
out
or
icebp
stos
idiv
dec
ds
push
jge
mov
adc
xchg
xor
pop
aas
out
push
mov
push
xchg
inc
shlb
daa
pop
cmpsb
dec
ja
pushf
out
add
push
filds
inc
or
inc
add
xor
pop
adc
filds
push
fstpl
lahf
cmp
mov
cwtl
adc
inc
scas
push
push
jbe
paddusw
dec
test
cmc
jnp
ja
pusha
in
jmp
mov
and
sbb
xchg
xchg
ret
jo
lret
adc
sarb
mov
test
sbb
loop
stos
icebp
enter
test
inc
mull
pop
or
mov
pop
mov
cmpsl
rolb
popf
push
xchg
push
pop
lds
mov
mov
inc
pop
pop
test
xchg
fcmovb
add
ret
stos
sbb
cld
or
aad
inc
insb
cli
mov
pop
cmp
add
pushl
jle
dec
sub
pop
add
stos
lods
inc
sbb
or
adc
dec
inc
cmovb
xchg
nop
nop
and
nop
sbb
jge
or
das
pop
fbstp
aad
fcmovbe
int
mov
mov
push
movd
rclb
dec
ficoms
jae
sub
dec
xchg
test
mov
js
cmp
fsubr
insb
shll
pop
jne
scas
add
inc
test
pusha
cld
jg
in
xor
bound
mov
out
adc
dec
or
stc
mov
shll
testl
cmp
sub
push
xchg
pop
cmc
fbld
stos
jbe
jge
out
bound
jle
push
insl
fcoms
adc
pop
xchg
mov
sbb
adc
pushw
aam
jb
stc
movsb
xchg
adc
cli
inc
mov
adc
dec
fstp
sbb
sti
cs
sahf
cmp
mov
std
jnp
or
or
sahf
jle
sbb
sbb
iretw
jbe
ds
fs
and
ds
dec
mov
notb
cmp
add
mov
xchg
imull
leave
pusha
mov
jle
inc
mov
mov
jle
sub
cmpsl
ds
int3
nop
insl
lds
mov
icebp
jecxz
das
lock
daa
and
or
insb
outsb
sub
lahf
aad
lods
pop
lock
fisubs
sbbl
movl
dec
in
iret
xchg
cmpsl
icebp
mov
jg
adc
out
or
pop
sbb
mov
clc
xlat
stos
std
adc
cmp
lcall
lahf
test
pop
loope
inc
jbe
mov
arpl
ljmp
sub
shl
aad
lret
aas
pop
lret
jo
inc
rcrl
sbb
rcrl
mov
je
push
fwait
push
xor
aam
xor
cmp
shrl
ljmp
inc
rcr
cmp
imul
or
cmp
popa
sarb
roll
cmp
subl
in
mov
push
inc
lods
test
test
hlt
pusha
jl
push
sub
imul
popa
push
rcrb
gs
jl
and
push
jge
cmp
leave
movsb
jnp
outsb
add
shlb
jecxz
mov
scas
adc
sbb
jo
outsl
imul
scas
inc
testb
inc
xlat
dec
cld
xchg
ret
fisttpll
imul
push
in
xlat
ret
cld
cmp
mov
andl
rcl
repnz
jo
add
adc
jae
int3
add
shlb
arpl
sbb
mov
ror
cmp
hlt
mov
mov
push
ss
outsb
jl
inc
sbb
and
cmp
out
in
pop
inc
test
pop
cmpsb
and
mov
jns
fucomip
add
dec
xchg
sbb
push
dec
or
jecxz
sbb
push
fisttpll
leave
test
adc
sti
add
jne
iret
and
dec
popa
xor
stos
popa
cmpl
pushf
mov
xlat
in
lahf
ss
cmp
jns
mov
cmc
adc
jae
into
mov
dec
repz
dec
movsl
js
xlat
outsb
cli
push
adcb
ret
and
out
repz
orl
and
mov
jae
sub
lds
inc
push
icebp
pop
mov
nop
adc
je
push
mov
fldt
inc
adc
and
sbbl
add
push
sbb
scas
jb
mov
inc
xchg
jnp
bound
das
mov
or
mov
daa
es
into
jns
imul
lds
aas
into
popl
mov
jl
mov
add
pop
lods
or
mov
je
in
and
adc
cltd
test
call
outsl
xor
movsl
mov
mul
mov
adc
lods
jl
icebp
enter
lret
ds
dec
sbb
xchg
daa
movsb
xchg
rorl
sub
xchg
dec
jmp
mov
ret
or
fwait
mov
sbb
popa
xchg
cs
js
ja
cmp
dec
outsb
dec
subb
mov
or
out
imul
lock
sub
mov
mov
sub
sti
adc
dec
or
arpl
or
add
push
jmp
xor
and
xchg
cli
push
call
pop
add
mov
mov
add
sub
arpl
into
movsb
arpl
shl
in
pop
fcom
add
mov
lret
sbb
fs
pop
pop
lahf
mov
pop
jmp
loopne
icebp
addr16
fcoms
xor
and
not
addr16
jns
repnz
pop
movsbl
xor
or
fidivrs
test
xor
addr16
repnz
mov
xor
pop
jb
push
fiadds
xchg
dec
mul
cmp
mov
test
scas
test
or
jge
ret
and
dec
bound
mov
inc
and
dec
lahf
jmp
fisubl
gs
xchg
cmc
bound
fucomip
dec
andl
inc
sti
xchg
shll
jecxz
push
imul
andl
mov
cld
lock
cmp
je
adc
in
jne
out
jmp
sti
sbb
jae
hlt
test
or
fwait
mov
sub
inc
loope
pop
push
jae
mov
add
dec
mov
rcll
sub
mov
daa
inc
int3
add
es
mov
in
sbb
into
push
fdivrl
outsl
imul
mov
jp
fdivrs
jmp
sbb
push
fwait
pop
adc
cld
loop
enter
mov
fdivl
lcall
enter
push
jne
sub
or
lret
incl
cmp
jo
push
add
ja
in
dec
dec
jecxz
jmp
cmc
gs
mov
int
ficompl
insl
mov
jnp
add
shl
add
fisttpll
lods
push
push
push
into
dec
in
jmp
pop
out
xor
mov
and
jbe
or
xchg
add
mov
xchg
jge
bound
mov
jl
jge
fidivrl
jmp
pop
sbb
cld
sbb
sub
adc
mov
push
xchg
xor
cmp
push
in
aas
movsb
fidivrs
jns
xlat
mulb
nop
xchg
jecxz
pop
xchg
das
cmp
fiaddl
pop
push
imul
repnz
in
adc
movsl
xor
aaa
outsb
dec
out
pop
aad
pop
push
push
out
pop
cmp
scas
xor
popa
addr16
shrb
mov
sbb
mov
fcompl
nop
cmp
imul
test
lret
fwait
and
xor
inc
out
add
pop
push
je
repnz
xchg
jecxz
test
adc
push
and
clc
xchg
xchg
xor
imul
mov
call
sub
dec
leave
daa
or
dec
call
cmp
jb
imul
pop
pop
adc
jne,pt
jno
cs
lea
mov
xchg
jmp
mov
mov
xlat
or
push
dec
sbb
imul
dec
ss
pop
clc
test
test
aas
pop
adc
negb
xchg
push
adc
test
mov
mov
pop
repz
incb
scas
pop
mov
stc
jmp
daa
imul
sbb
mov
push
inc
pop
lock
test
cmp
push
cld
lret
out
out
push
sbb
mov
test
jnp
mov
or
push
cmp
xchg
dec
mov
in
fidivrl
jecxz
dec
dec
ljmp
sbb
cmpsb
xor
aas
pop
adc
jb
sub
aam
imul
ja
xor
cmpsb
rcl
xchg
scas
mov
das
inc
jle
imul
cli
pop
fisttps
push
push
icebp
push
es
mov
test
jo
jo
rcrb
push
push
gs
sub
imul
lcall
sbb
out
insl
xchg
add
cmp
imul
xchg
mov
dec
ret
fstpt
jl
and
in
sti
ret
push
xor
idivb
outsb
adc
sub
xchg
cmp
cmpsb
stc
dec
sub
ficoms
jl
pop
js
adc
shll
jb
mov
lds
fldenv
insl
outsb
test
pop
pop
in
add
scas
pop
mov
outsb
ret
testl
or
jne
mov
loopne
shrl
pop
xor
xchg
adcl
and
jns
and
lret
js
aaa
into
xor
push
jo
popl
mov
ja
dec
jbe
repnz
xchg
xlat
push
mov
mov
pop
rcrb
xor
repz
cmc
shll
mov
mov
add
mov
ret
js
mov
jae
gs
sbb
dec
sbb
pusha
pop
mov
push
gs
jmp
sbb
mov
test
arpl
push
jno
mov
and
jg
pop
jge
cmpsb
shl
hlt
outsl
sbb
jp
pop
rclb
lea
xor
jg
in
or
sub
push
push
cmp
jae
xchg
in
mov
mov
or
js
push
cld
out
js
push
fdivs
pop
jnp
call
or
rorb
movsb
cmp
sbb
push
lcall
cmp
push
in
pop
int
jae
sub
pushf
xchg
push
inc
lea
mov
push
pop
mov
lahf
and
cltd
adc
adc
add
test
jp
dec
call
push
fiaddl
mov
bound
xchg
mov
mov
add
je
in
jns
cli
pop
aam
add
clc
sahf
cmpsl
xor
sbb
adc
xchg
mov
lods
hlt
inc
fbstp
pop
fxch
nop
push
loop
xchg
sbb
popf
js
ficoml
xor
cmp
pop
ret
repz
ljmp
orl
jg
icebp
dec
fisubrl
test
popa
test
mov
lcall
or
aas
scas
sub
pop
sbb
mov
cmp
inc
jae
mov
jl
push
ss
cmpsb
scas
js
loopne
mov
push
jae
pushf
ja
adc
push
jmp
jns
data16
rorb
jge
jg
inc
jns
rcrb
ss
jmp
mov
scas
loopne
pop
out
and
add
pusha
cmpb
or
pop
ds
pop
movsb
or
rcrb
cmp
in
loope
lahf
ss
mov
je
sub
cmp
movsl
push
lds
adc
loopne
and
mov
adc
push
inc
and
ja
roll
xor
adc
ljmp
dec
mov
jp
or
xchg
sbb
inc
xchg
aad
loope
test
aaa
fcoms
icebp
add
push
mov
jns
iret
xlat
and
repz
jecxz
aam
imul
sbb
mov
mov
push
push
scas
push
shrl
fs
ret
jo
cmc
add
jb
jb
push
dec
sarb
push
sbb
mov
sti
inc
movsl
cmpsl
xchg
push
fisubrs
pusha
and
push
and
and
je
stc
dec
call
dec
mov
mov
popf
cmp
mov
loop
cmp
outsb
shr
into
js
lcall
and
out
aas
iret
push
pop
lods
dec
mov
les
lret
in
cmc
dec
add
inc
lea
cwtl
mov
mov
add
add
xor
inc
inc
adc
ss
push
ret
daa
mov
insl
cmp
fs
pop
mov
xchg
test
lock
sbb
xlat
in
divb
push
cltd
inc
lds
clc
icebp
imul
dec
mov
jae
stos
inc
popf
js
jbe
mov
adc
ds
adc
or
std
xor
xlat
push
in
jae
adc
and
in
inc
fsub
pop
sub
add
xlat
loopne
jo
and
inc
xchg
sub
dec
xchg
ss
out
subb
mov
clc
dec
and
daa
leave
push
mov
in
clc
mov
movsl
imull
cmp
add
bound
mov
mov
push
fadd
mov
loope
dec
jmp
inc
xlat
test
clc
push
jecxz
inc
dec
mov
jnp
andb
dec
add
ds
or
shlb
pop
in
iret
jns
out
pop
inc
push
jne
adc
stos
mov
and
cmp
sbb
push
aaa
sub
sahf
jb
add
repnz
mov
ja
out
aaa
pop
add
mov
lods
call
push
scas
ds
push
cmc
mov
in
in
je
xlat
sbb
mov
pop
mov
dec
mov
jmp
out
pop
adc
movsb
xor
xchg
hlt
rcrb
adcb
loopne
repnz
xor
or
cwtl
ljmp
sbb
es
pop
push
aaa
movl
sbb
sub
dec
imul
lods
cs
sbb
loope
and
and
icebp
lea
fsubs
ljmp
jne
pop
and
sbb
mov
ret
pushf
inc
pop
adc
push
ss
xchg
cli
scas
push
xchg
push
mov
mov
adc
pop
sbb
jns
xor
mov
xor
sbb
rol
rcrl
pop
movsl
enter
dec
lret
arpl
in
and
testb
lea
cmp
sbb
xor
or
cmovge
in
pop
jne
mov
lods
aas
lods
xchg
nop
das
adc
ss
lods
adc
pop
jge
push
xor
stos
test
cmp
and
mov
push
test
je
mov
int
inc
sbb
mov
cli
fwait
sub
loope
mov
loope
insl
sub
hlt
fs
mov
fsub
int
mov
jbe
cmp
and
lss
in
scas
nop
sbb
push
stos
dec
inc
or
fistps
scas
mov
or
jae
mov
mov
jg
negb
mov
mov
xchg
jb
sarl
addr16
insb
sbb
mov
loop
and
xlat
ret
sub
jae
or
mov
or
sbb
xchg
or
repz
es
std
and
inc
out
sub
dec
mov
iret
pop
in
jge
push
push
sub
pop
stos
add
cli
dec
and
mov
imul
cmp
xor
dec
scas
sub
xchg
test
add
dec
ds
lahf
neg
andb
leave
cs
test
jge
cld
inc
or
adc
popf
pop
mov
fptan
sub
jae
fistpl
cmp
loopne
dec
and
cmpl
out
mov
pop
cmpsb
inc
add
daa
xor
or
mov
push
mov
fstl
push
jo
ret
cmpsl
pop
outsb
cmp
inc
js
aaa
lods
mov
leave
jecxz
push
cmp
jl
add
sbb
adc
jle
lcall
inc
sbb
cmp
xchg
add
inc
lock
add
add
js
add
jno
kmovb
inc
sbbb
aad
dec
lret
pusha
inc
pop
cltd
pop
jb
pop
stos
ds
sahf
jne
popf
data16
mov
rorl
or
add
dec
aaa
pop
xorb
mulb
aas
jb
mov
jmp
pop
out
ds
xor
xor
sub
add
push
xchg
shrl
jmp
push
sbb
mov
add
and
ret
dec
inc
enter
rclb
or
inc
cmp
mov
cmpsl
imul
mov
cwtl
test
mov
dec
cmpsl
arpl
sbb
dec
sbb
scas
cmc
mov
dec
sbb
aam
pusha
sti
es
in
daa
or
and
mov
ret
pop
sub
rcrb
xor
in
xchg
out
in
jbe
mov
add
jne
lret
mov
pop
or
pushf
sub
cmp
adc
js
dec
pusha
push
dec
adc
add
movsl
fstpl
sub
push
in
xor
cmp
pop
scas
pop
out
js
adc
inc
and
cltd
or
push
push
shr
add
lds
ja
std
inc
test
push
inc
jge
ds
sub
jp
lods
and
gs
and
jmp
inc
iret
das
sub
mov
std
mov
cld
cltd
jae
es
in
test
js
sub
mov
repz
mov
jmp
cs
movsb
jmp
fmul
pop
xor
stc
dec
pop
fsubp
mov
add
testl
push
mov
mov
loop
mov
movsb
dec
test
cmp
ljmp
push
movsl
cltd
test
add
inc
jno
jnp
mov
push
into
jle
jge
data16
push
in
frstor
xchg
jns
sub
mov
mov
mov
lret
xor
cmpsb
ds
jmp
mov
pop
mov
fprem
sahf
push
test
call
or
leave
mov
mov
orl
dec
jl
jo
add
dec
inc
push
test
mov
fstpt
in
xor
jnp
test
mov
testb
aas
xchg
pop
mov
fisubrs
xchg
daa
jb
adc
dec
add
adc
pushw
imul
das
int
push
lcall
and
shll
fistpl
subb
dec
fwait
orb
dec
add
mov
pushf
icebp
or
push
in
cmp
js
xchg
out
cmpsl
inc
lcall
iret
or
xor
lahf
mov
faddl
arpl
scas
add
jbe
inc
sbb
fdecstp
in
pop
push
cmp
lds
mov
out
jp
arpl
xlat
popf
shrb
xchg
adc
daa
xchg
cs
loop
mov
jl
mov
adc
mov
lds
mov
lods
mov
and
jns
out
and
xchg
aaa
mov
add
adc
ds
lods
in
cmp
adc
adc
fld1
sbb
push
mov
testb
dec
loope
jne
xchg
add
inc
lods
outsl
cmp
mov
outsb
adc
mov
or
mov
push
mov
jnp
shl
adc
xor
pop
pop
shll
mov
jb
xchg
xorl
andl
sbb
mov
mov
mov
cs
sbb
jb
inc
pushf
xchg
enter
fsub
adc
mov
mov
mov
adc
imul
sub
addr16
jo
cwtl
fs
out
xor
push
mov
inc
and
jo
push
std
mov
loop
sub
shlb
pop
and
gs
xor
adc
jae
jae
and
cmpsl
stos
and
inc
push
xchg
jo
gs
out
push
fmull
loop
push
jge
aam
sbb
lcall
sub
ss
loopne
mov
mov
dec
in
mov
out
jmp
sti
sub
mov
iret
mov
icebp
out
rcrb
shl
ss
push
lock
arpl
int
cmpsb
mov
inc
xor
fistl
adc
dec
cmp
jns
popl
das
pop
mov
lock
mov
mov
bound
ret
andl
sarl
inc
or
in
sahf
sub
dec
dec
in
addr16
iret
cltd
mov
es
mov
scas
inc
faddl
in
test
mov
dec
jecxz
jl
fisttpll
clc
jg
adc
jno
jg
push
pop
int
dec
call
adc
into
adcl
in
push
addl
xor
push
push
adc
cmp
mov
insb
imul
cmp
add
lcall
scas
test
pop
inc
movsb
jo
movsl
adc
mov
mov
leave
enter
sbb
inc
sbb
jge
out
mov
repz
jecxz
jns
cmp
push
xchg
jno
jne
mov
adc
in
mov
cltd
decb
test
and
push
out
pop
mov
jno
jmp
adc
sbb
movl
fcom
popf
sbb
mov
mov
jae
mov
jle
inc
fidivrl
andl
popa
inc
fmuls
fdivl
mov
shlb
sahf
fucomp
mov
xor
sbb
addr16
pushf
jo
mov
sar
aas
popf
das
xlat
shrl
icebp
and
pop
popf
fwait
fwait
add
iret
dec
mov
mov
adc
ror
mov
jb
icebp
mov
notb
sahf
push
xlat
sub
inc
cld
push
mov
aam
out
into
divl
add
mov
mov
fmul
filds
mov
sahf
xor
insb
cmp
out
xor
sub
insl
cmp
push
lahf
push
inc
xlat
add
mov
addb
testb
mov
shr
sub
int3
and
jo
and
std
xchg
mov
leave
add
push
add
popf
adcb
sbb
adc
mov
mov
rcr
push
mov
outsb
aas
or
xchg
jl
jns
and
sbbb
or
inc
mov
rorb
repnz
xor
push
pop
loope
cltd
call
mov
push
mov
or
test
sbb
aaa
pop
inc
adc
mov
out
inc
cwtl
call
loope
pop
push
sbb
cld
or
jge
das
xor
iret
in
jg
lea
jle
outsb
jnp
jnp
xor
sbb
out
stc
test
pushf
push
movsb
jmp
ds
jl
add
ss
dec
sahf
in
mov
sbb
inc
fwait
mov
icebp
xor
out
add
mov
fdivp
jg
mov
xchg
mov
cmp
pop
gs
mov
cwtl
inc
adc
ljmp
jns
outsb
and
mov
push
adc
mov
push
pushf
das
or
imul
enter
push
icebp
adc
pop
in
lret
dec
xchg
out
mov
pop
pop
sbb
and
fidivl
cli
lret
divb
mov
loop
scas
adc
sbb
mov
add
push
or
adc
push
pop
aas
or
aam
insb
outsb
push
inc
lea
jmp
sub
inc
adc
fdivl
xor
outsl
pusha
jge
xchg
nop
outsb
adc
repz
test
dec
adc
stos
mov
fcmovnbe
xchg
cmc
xchg
sub
mull
clc
cld
sub
xchg
push
cmp
adc
insl
or
call
adc
gs
mov
call
sahf
movsl
mov
addr16
imulb
fstps
jle
push
pop
and
inc
arpl
jbe
int3
es
lods
inc
mov
dec
es
push
sub
ret
fiaddl
sarb
jnp
je
mov
scas
inc
mov
sbb
mov
adcb
insl
fadds
push
fdivs
cmp
mov
stc
inc
aad
jbe
mov
addr16
mov
std
mov
pop
fs
out
gs
decb
pop
fwait
stos
xor
jb
out
mov
cmp
adc
mov
or
insb
popw
in
into
ss
sbb
clc
push
test
and
mov
xchg
lods
mov
jl
inc
daa
and
cmc
stos
xor
xor
dec
outsb
dec
push
fldt
sbb
jb
out
repnz
pop
test
jnp
cmp
xchg
jg
test
mov
je
mov
lret
and
dec
lods
push
fists
jg
pop
adc
gs
or
mov
xchg
movsb
cmp
jg
arpl
in
test
mov
leave
cmp
push
popa
outsb
add
push
mov
dec
xlat
mov
lret
addl
stos
lods
bound
inc
in
mov
ja
mov
lret
mov
sbb
jo
and
cmpsb
cmp
std
ficompl
or
ficomps
lods
lcall
jbe
push
push
iret
stos
adc
dec
fsubl
xchg
add
cmp
xor
int3
add
dec
mov
xchg
add
sar
pop
test
adc
sbb
stos
xorl
mov
shrb
push
imul
mov
cmp
push
in
rorl
aam
sbb
aas
mov
push
add
inc
arpl
test
stc
xchg
mov
mov
iret
pop
adc
mov
xchg
ljmp
mov
mov
leave
mov
pop
pop
mov
pop
mov
lahf
adc
cld
cmp
pop
and
adc
popf
fnstsw
jnp
in
fists
enter
push
frstor
addr16
pop
imul
push
or
cmp
in
cs
stos
adc
pop
mov
lcall
int
repnz
sbb
mov
mov
mov
mov
pushf
dec
push
jo
leave
insl
mov
fs
out
call
add
clc
cmp
mov
adc
adc
sbb
cmpl
and
inc
data16
mov
mov
popa
mov
dec
mov
xchg
lds
and
cmc
cltd
pop
insb
lret
push
pop
aaa
in
mov
jmp
ds
mov
jp
jl
lcall
inc
adc
mov
jmp
mov
enter
lock
loopne
cmc
cmp
push
sbb
cmc
mov
inc
lahf
jg
xor
xchg
xor
and
imul
jmp
inc
xor
out
mov
enter
ja
subl
push
adcb
ret
shll
pushf
cmp
mov
dec
loop
std
adc
and
inc
push
sbb
mov
sub
cld
adc
addb
mov
ret
cmp
xchg
mov
and
lcall
jmp
xchg
jne
out
into
xchg
pop
jbe
lock
push
js
mov
test
mov
outsl
adcl
fwait
je
and
xchg
push
je
out
aas
pop
leave
mov
dec
ret
jne
pop
fldenv
test
int
add
in
mov
and
int3
cmp
int3
jns
sbbb
or
mov
lea
int
loop
inc
scas
xchg
jb
int
ret
das
ret
int
mov
cld
xor
fidivl
ljmp
cmp
and
fsubr
insl
int
std
inc
cmp
push
dec
cmc
adc
dec
scas
cmpsl
mov
rolb
xchg
mov
imul
sbb
push
push
add
push
mov
repnz
repnz
gs
insb
push
mov
sub
shl
mov
mov
das
xor
movsl
pop
fildl
gs
and
and
pop
cmpsl
mov
mov
adc
dec
sub
or
popf
xor
cmp
xchg
pop
push
inc
add
pop
fwait
jae
das
movsl
mov
mov
xor
loop
jns
jns
sub
popf
xchg
jns
add
in
enter
scas
push
sub
addr16
jecxz
adc
fisttpl
std
int
das
xor
aas
cltd
adc
cmpsb
sbb
into
pusha
cli
xchg
rcll
pop
mov
cmpsb
lock
loopne
mov
xchg
adc
lds
mov
dec
dec
xor
repnz
out
cli
cwtl
mov
mov
xchg
jbe
arpl
and
test
lods
pusha
movsl
inc
inc
pushf
push
mov
ds
sbb
sbb
inc
mov
push
mov
xchg
out
arpl
inc
inc
ss
xor
mov
sahf
clc
shll
push
in
pop
jl
push
subb
int
fs
addr16
pop
ret
ret
ss
cmp
mov
aad
aas
add
rcrl
mov
pop
rcrl
mov
mov
adc
sbb
sahf
and
call
jmp
push
dec
cmpsb
pop
arpl
sbb
imul
fsubr
pop
cmp
lahf
cmp
inc
lea
out
or
lcall
sbb
loopne
rorl
and
out
scas
sbb
cmp
addl
or
mov
mov
pop
jno
fst
imul
fildl
fsubrl
sub
in
arpl
out
les
adcl
pop
shrl
mov
faddl
es
mov
fidivs
ret
inc
leave
pusha
add
out
push
inc
cli
test
insb
pop
out
sbb
dec
repz
stc
mov
cmp
arpl
rcrl
movsb
sarb
cmp
aaa
pop
in
push
dec
movsl
je
shll
sub
pop
sub
fcoml
iret
fcmovnu
jbe
les
push
jno
inc
stc
sti
xchg
fdivrs
gs
mov
test
repz
add
sbb
jl
mov
dec
fwait
in
loopne
pop
negb
cmpsb
lock
dec
nop
lea
add
push
inc
fdivs
cld
mov
or
pop
imul
outsb
sub
xor
jne
les
pusha
gs
mov
and
cmp
push
repz
std
or
aaa
cmp
jmp
sbb
mov
insb
orb
mov
or
mov
gs
sbb
mov
test
pushf
dec
out
in
cmp
jno
nopl
lret
cmpsb
mov
add
in
lods
fcmovnbe
test
shrl
push
out
push
fiaddl
es
inc
adc
imul
jno
lahf
negl
in
fidivl
cmpsb
shll
push
add
fnstenv
bswap
test
aad
mov
push
pop
xor
sbb
adc
cmp
test
sti
jbe
adc
mov
imul
imull
arpl
pop
and
add
sbb
xchg
mov
hlt
mov
and
dec
loope
adc
jg
xor
push
or
movsl
mov
test
imul
cmpsb
xor
shll
push
push
aam
ja
mov
icebp
imul
mov
popa
push
jge
or
cmp
cmp
pop
lcall
stos
sahf
dec
movsb
inc
sbb
and
mov
fdivrs
xchg
aad
fidivl
push
mov
xor
inc
lret
mov
add
adc
or
daa
jp
sti
sub
loope
insl
data16
bound
xchg
cmp
mov
adc
fistpll
xor
and
cmpl
data16
xor
add
pusha
fwait
inc
push
mov
in
loopne
in
push
and
xor
add
push
test
and
and
hlt
adc
jns
jmp
out
scas
inc
xor
fwait
mov
push
int
test
jmp
inc
shlb
mov
and
inc
iret
xor
or
push
and
add
rol
xor
stos
stos
movsl
jmp
sahf
inc
and
add
mov
dec
pop
mov
js
push
fidivrs
or
fdivl
or
mov
fld
rol
ret
jae
and
les
dec
or
mov
mov
jbe
push
iret
gs
and
fwait
dec
cltd
repz
jmp
addr16
aas
dec
mov
xor
je
xchg
or
fisubrl
sub
mov
dec
enter
out
data16
lret
xor
dec
xchg
mov
mov
mov
fstpt
pop
jmp
jp
lahf
imul
nop
mov
pusha
adc
xchg
mov
ljmp
pushf
out
imul
leave
xchg
or
movsb
sub
loop
or
mov
movsl
aas
jg
xor
jl
shlb
cmp
je
repnz
cmp
push
sti
cmp
aas
inc
ds
cmp
sahf
adc
fimull
dec
in
imul
outsl
insl
mov
bound
scas
adc
cwtl
ss
in
inc
popw
inc
ja
dec
popa
sub
xor
inc
xchg
pop
rcrb
xchg
loopne
sbb
cs
fiaddl
out
push
jmp
movsb
fnsave
fnsave
cmp
add
leave
xor
stc
nop
movsb
movsb
adc
pop
xchg
add
jge
xchg
sub
sbb
je
sub
inc
adc
inc
jp
pop
push
cmpl
sbb
pop
adc
pop
or
cmp
adc
leave
bound
test
lods
xor
enter
leave
adc
or
cli
test
adc
mov
pushf
scas
shr
aaa
int
adc
jge
sbb
lahf
je
xchg
xchg
or
adc
add
in
jne
bound
ljmp
add
loope
fnsave
loope
push
rcrl
jae
std
mov
xor
adc
inc
icebp
inc
test
test
filds
pop
cmp
insb
jge
mov
fistpl
fs
lcall
or
lods
cmpb
std
cmp
jmp
out
loop
insl
std
xor
ret
cmpsb
push
sub
in
xor
jmp
ds
jb
xlat
icebp
insb
in
pop
fsts
testl
popf
fisubl
or
je
xchg
rcrl
xchg
pop
xchg
cmp
jg
outsb
loop
adc
push
call
aad
push
dec
xchg
pushl
push
aas
imul
divl
mov
push
jle
jo
xor
gs
xor
mov
dec
dec
ss
pop
pushf
dec
push
dec
es
xor
in
mov
fcomps
add
lahf
xchg
xchg
lea
adc
mov
cmp
inc
sarb
je
scas
ljmp
neg
jae
mov
cli
into
dec
xchg
pop
mov
dec
notl
mov
ret
loope
mov
out
leave
sub
dec
push
xor
mov
lods
mov
xor
into
xlat
mov
mov
arpl
in
add
xor
push
divl
dec
or
mov
in
pop
cmpsl
cwtl
jle
mov
push
mov
aaa
mov
add
fildl
sbb
push
lahf
jg
or
inc
jmp
in
inc
repnz
shr
sbb
cmp
mov
xor
mov
xchg
clc
mov
mov
adc
stos
enter
sub
mov
mov
and
into
cmp
repz
aad
loope
jae
adc
adc
lea
cmpb
and
sub
or
aam
dec
in
js
aaa
cmpsl
bound
repz
pop
cmp
cmp
loopne
cmp
loope
scas
lcall
in
push
stc
mov
fs
loope
adc
out
sub
inc
scas
push
mov
mov
add
sbb
cmp
dec
cmp
cmp
xor
xchg
pop
cmp
dec
mov
pop
and
mov
dec
enter
data16
data16
iret
xchg
cmp
sbb
mov
iret
cmp
leave
push
movsb
jno
movsl
lcall
cmc
cmp
into
popa
mov
fistl
shrl
in
push
aam
cld
nop
mov
pop
call
mov
mov
ret
inc
or
xchg
cmp
jle
mov
inc
add
mov
ret
jb
jmp
enter
dec
loopne
sbb
xchg
xchg
mov
push
mov
imul
xchg
lcall
sub
inc
loop
mov
and
jmp
mov
outsb
jle
and
mov
in
and
mov
inc
stc
and
pop
ss
push
insl
shll
popa
clc
push
hlt
jle
fisubrl
int3
jg
mov
mov
stos
and
sub
aaa
adc
in
mov
cltd
shlb
pop
pop
xchg
adc
inc
loopne
jb
jmp
int3
sbb
loop
inc
push
dec
jecxz
lahf
jge
dec
sbb
clc
lock
int3
pop
loope
fidivl
movsb
lahf
cmp
cmc
in
js
filds
jne
aas
cmp
adc
popa
xor
out
mov
imul
adc
loope
lcall
adc
add
xor
push
ljmp
sarb
sbb
add
sub
sarl
sbb
jecxz
fisubrl
scas
jecxz
ret
shrb
adc
lcall
add
inc
mov
rclb
in
add
icebp
xchg
cwtl
jnp
test
mov
add
mov
mov
mov
rorl
sbb
mov
cs
pop
imul
test
add
ljmp
mov
jb
rclb
sbb
and
mov
ljmp
jg
stc
inc
pusha
inc
pop
inc
pop
sahf
dec
pop
pop
dec
pop
leave
push
out
jp
popf
scas
fcoms
jbe
inc
into
xlat
sbb
into
mov
mov
lret
addr16
mov
leave
cmp
jp
in
xor
pop
push
inc
jg
sbb
pop
cmp
idiv
das
adc
jle
shrb
pop
inc
xchg
imul
xorb
outsl
outsl
incb
push
cmp
inc
mov
jbe
dec
inc
sbb
push
push
inc
or
in
mov
or
inc
inc
jns
jmp
mov
and
xchg
iret
mov
pop
pop
icebp
movsl
adc
sahf
fsubl
ss
jae
das
mov
mov
daa
dec
fmul
inc
add
repnz
xor
inc
mov
fmulp
int
pushf
aad
cmc
stos
into
movsb
and
adc
into
ror
into
mov
cli
xchg
xchg
push
mov
inc
mov
xchg
xor
orl
cli
and
mov
ja
and
fwait
into
pop
mov
xor
popa
outsb
dec
pop
arpl
es
cmp
jmp
adc
cmp
out
je
push
je
xchg
jbe
fmull
sub
mov
cmpl
push
test
dec
pop
mov
inc
and
sahf
and
in
insl
cmpsl
lahf
js
sbb
ret
sub
arpl
mov
and
clc
cwtl
repz
lret
gs
repnz
pop
mov
adcb
out
in
push
pop
call
lea
lcall
push
pop
hlt
mov
outsl
mov
shlb
inc
fstl
jecxz
ret
cmp
xlat
lahf
mov
pop
outsl
push
xor
in
enter
in
jnp
inc
pop
into
xor
in
incb
and
aam
dec
add
scas
into
gs
and
mov
pop
or
sub
testb
in
or
inc
repz
mov
jae
inc
faddp
lods
test
xor
fucomip
cmp
inc
add
inc
fiadds
sub
jns
test
push
fisubl
jp
std
shlb
adc
add
mov
popa
shrl
mov
mov
sbb
out
xchg
sub
sbb
jne
and
xchg
out
fdivl
xor
rorl
add
lret
in
push
mov
aaa
adc
sbbl
mov
inc
jo
cmc
sbb
push
aam
adc
lea
mov
pop
icebp
popa
jmp
mov
mov
sbb
ds
aaa
icebp
adc
test
aaa
xlat
jb
ficomps
mov
xor
imul
shr
and
or
jno
inc
jecxz
enter
cmp
push
iret
loope
jle
xor
push
lahf
mov
inc
data16
popa
into
mov
call
outsl
xor
mov
ret
fiadds
push
pop
gs
jne
and
push
adc
xchg
inc
sbb
outsl
xchg
sbb
in
mov
pusha
cmp
jnp
cmp
dec
in
xchg
adc
repz
mov
add
mov
jno
and
mov
je
pusha
and
or
xor
ret
lock
ret
hlt
scas
icebp
es
jge
mov
and
test
xchg
sub
mov
dec
lahf
or
aaa
in
imul
in
push
inc
push
xchg
or
orl
jle
gs
and
mov
sbb
rcrl
jle
jno
xchg
mov
gs
push
mov
push
sub
fcoms
insb
adc
lret
fwait
add
or
push
jmp
adc
dec
sbb
cmp
aad
insl
fmul
or
mov
pop
push
push
mov
jmp
jecxz
and
leave
cmpsl
mov
push
ja
xchg
mov
push
mov
adc
shll
clc
adc
sti
add
add
mov
stos
je
jle
xchg
je
adc
stos
imul
ja
dec
pop
sti
sbb
pop
add
outsb
push
std
xchg
loop
std
xor
sbb
jl
pop
xor
fs
ds
dec
sub
mov
xchg
cli
jb
sub
ja
insl
testb
jecxz
pop
mov
cs
scas
and
loope
out
les
mov
cld
dec
push
lcall
mov
fsubl
in
pop
pop
ja
sbb
mov
sarl
pushf
stos
push
or
or
lock
sar
sti
outsl
subl
notb
cmp
mov
pop
pop
aaa
out
sti
push
insl
push
push
sbb
mov
xor
cld
outsl
dec
loopne
imul
jle
xchg
jl
and
pop
mov
out
incb
add
fcoms
or
arpl
push
shll
xor
jmp
inc
ror
sub
mov
xchg
sub
es
xor
in
gs
loop
pop
enter
gs
addr16
xchg
daa
es
test
pusha
push
push
inc
xor
addr16
cmp
loop
stc
or
push
cmp
outsl
sbb
icebp
pusha
mull
in
sub
and
add
sub
mov
adc
xchg
or
mov
adc
rcrb
repnz
int3
sub
ja
cmp
xchg
pop
rcrl
cmp
xlat
pop
push
push
insl
inc
pop
jns
xor
dec
rorl
xchg
lcall
mov
dec
dec
sbb
cmpsl
sbb
mov
enter
xor
test
and
xlat
add
out
push
add
test
dec
lods
call
mov
sti
pop
out
pop
inc
cmp
in
fcoml
adc
fucomi
jl
test
xchg
mov
je
cwtl
pop
or
xchg
xchg
xor
mov
movb
dec
and
inc
push
sbb
adc
dec
xchg
scas
xor
imul
dec
adc
cmp
loop
dec
scas
in
das
pop
lds
jge
xchg
scas
mov
loopne
mov
call
lds
out
sbb
mov
dec
mov
imul
sbbl
fists
cmp
and
dec
pop
jecxz
mov
das
fwait
mov
mov
arpl
adc
fs
jno
je
mov
stos
mov
aam
test
mov
cmp
push
insl
sbb
add
mov
sub
pop
inc
inc
or
dec
inc
test
dec
aas
aad
xor
cmp
pop
hlt
push
fidivl
and
jnp
popa
inc
mov
dec
rcrl
jb
mov
cld
sbb
sbb
and
inc
loope
psrad
outsb
dec
test
adc
inc
int3
adc
int
cli
loopne
out
xchg
adc
loopne
mov
sbb
mov
roll
in
lods
jg
push
push
int
or
pop
cmp
je
mov
inc
xchg
sbb
xlat
lahf
mov
out
mov
lret
add
imul
push
icebp
fsubrp
and
call
push
xchg
pusha
pushf
xor
test
cmp
enter
adc
mov
mov
pop
inc
test
xchg
pop
xorl
movl
inc
mov
pusha
sub
decl
les
mov
inc
stc
test
lds
sbb
scas
mov
cmpsb
sbb
add
sbb
stos
cmp
into
enter
aas
pop
cmpsb
enter
lds
rcrl
lods
out
fisubrs
jg
idivb
xlat
loopew
pop
sahf
mov
sub
in
pop
bound
jne
in
inc
and
add
cltd
jmp
cwtl
and
fdivrs
cwtl
cmp
mov
jbe
cli
mov
mov
xor
test
shr
test
mov
dec
cwtl
sub
mov
jae
xchg
sub
cltd
mov
notl
and
pop
mov
dec
adc
sarl
pop
fcomp
xchg
into
stos
jbe
pop
mov
xor
loopne
dec
dec
pop
push
into
faddl
and
cmp
test
push
mov
sti
shrb
mov
ja
jl
das
mov
dec
sar
mov
dec
mov
sbb
popf
imul
sbbl
push
jb
stos
mov
pop
js
ja
sub
lock
daa
jne
or
ja
and
je
cmp
cmp
aam
sbb
xor
imul
mov
out
add
sub
mov
ljmp
push
test
cmp
cmp
jb
pop
pop
int3
stos
adc
pushl
lret
and
xchg
stos
xchg
xchg
scas
xchg
mov
adc
shrl
xor
in
test
cli
or
mov
inc
out
ror
push
ljmp
jp
sub
dec
jo
inc
aaa
and
adc
jl
dec
in
push
pop
pop
mov
or
stc
mov
xor
pop
mov
mov
xchg
lahf
inc
cmpsb
dec
loope
es
and
push
push
inc
insl
add
jnp
rolb
in
adc
push
vshufps
jbe
aam
and
cwtl
cli
fs
dec
stos
xchg
icebp
or
dec
mov
ret
xchg
adc
xchg
sub
xor
ja
ss
jae
adc
pusha
divl
insl
daa
cmp
test
movsb
add
add
cmc
cli
icebp
mov
mov
inc
loopne
cmc
xor
pop
movsb
mov
sbb
std
cmp
mov
mov
js
adc
lds
mov
rcl
sbb
cmpb
lret
add
pop
push
sbb
leave
mov
add
xor
iret
xchg
popa
or
fucomip
fdivrl
or
cmp
loop
xchg
inc
test
sbb
daa
push
aad
mov
aam
gs
xchg
push
scas
movl
rorb
jo
andb
insb
cmp
aam
cltd
lds
add
and
sbb
out
xchg
mov
je
dec
jecxz
lret
cmp
icebp
pop
mov
dec
testl
sub
xchg
repnz
call
fdivl
roll
mov
pop
stos
mov
insl
xor
iret
outsl
jecxz
jnp
and
add
inc
js
push
mov
jp
lods
int
pop
gs
xchg
push
popa
and
mov
adc
add
pop
sbb
jo
pop
and
xchg
out
cmp
loop
mov
ficompl
dec
adc
rcrl
outsl
jge
cmp
jmp
jns
fists
xor
sub
lds
xchg
jge
es
fisttpll
dec
pop
or
movsl
ja
push
ljmp
cs
in
das
push
or
test
sub
adc
nop
hlt
pop
xor
mov
mov
ret
jo
out
sbb
sub
mov
aam
mov
std
jmp
lret
shl
mov
jns
fs
push
mov
aas
sub
adcb
in
std
pop
loop
inc
push
xchg
add
inc
mov
lea
aad
in
cs
inc
mov
cld
jmp
mov
jp
pop
dec
arpl
or
popf
shlb
cmpsl
out
pop
nop
and
orb
mull
push
dec
mov
mov
mov
inc
pop
lods
je
and
xlat
insb
sbb
sbb
dec
push
outsl
sbb
add
or
sbb
daa
hlt
cmp
xchg
xorb
push
cmp
or
add
dec
jne
cwtl
jae
inc
mov
or
xlat
scas
add
and
sbb
aad
aaa
add
pop
imul
mov
out
popf
cmpsl
ljmp
or
test
out
add
mov
hlt
inc
cmp
pop
loope
ret
decl
aaa
mov
scas
insb
pop
cmc
popf
out
and
push
and
push
incb
movl
testb
gs
jl
hlt
pop
dec
fwait
push
sub
inc
jmp
adc
repz
idivb
inc
int
fimull
xchg
mov
les
inc
push
pushl
fisubs
xchg
add
jae
dec
cmp
or
push
insl
jg
sahf
sbb
mov
cmp
inc
shrl
dec
ror
jg
loope
popa
icebp
ret
pop
fwait
roll
inc
sub
leave
rcrb
sbb
inc
stos
mov
cmpsb
jno
jo
mov
fcoml
jmp
out
jge
in
xchg
cld
sub
in
mov
in
jb
flds
adc
xchg
std
xchg
rcr
jmp
shlb
pop
sub
cmp
data16
cwtl
fwait
addr16
pop
push
movb
cs
xor
sub
add
fwait
xor
inc
lock
cmp
and
inc
push
add
push
xor
push
mov
int
push
add
in
test
pop
inc
push
sub
insb
mov
cwtl
rcll
mov
jnp
dec
mov
jge
jp
dec
and
les
lods
inc
and
stc
int
sbb
aaa
in
inc
cli
stc
mov
sub
fidivs
dec
push
dec
sbb
ret
cmp
in
aam
jb
adc
enter
cwtl
incb
mov
dec
dec
imul
mov
loopne
call
mov
add
stc
dec
nop
stos
fwait
sbb
divb
sbb
cmp
add
setge
jmp
push
loope
out
decl
scas
mov
push
xor
pop
sbb
and
ficomps
inc
popa
inc
jge
pop
ja
movsb
addr16
adc
lods
mov
ficoml
dec
xor
inc
sub
pop
jne
out
push
inc
nop
daa
xor
adc
dec
add
dec
stos
or
jg
mov
xchg
jl
jbe
roll
push
into
xor
add
in
adc
mov
cwtl
das
js
jno
adc
sub
sub
lds
mov
jl
test
out
xchg
mov
xchg
stos
loopne
fdivs
mov
cwtl
ja
repnz
cltd
stos
stc
sbb
imul
xchg
add
mov
pop
sahf
push
sarb
lret
imul
bound
jnp
mov
sbb
inc
mov
mov
in
stos
sub
sub
aaa
imul
ret
mov
mov
outsb
fnstenv
int
dec
sbb
testb
lods
xor
inc
dec
xchg
cmpsb
lret
or
lret
jns
rcrb
loope
data16
cmpsb
or
in
aaa
push
sbb
xchg
cmp
icebp
mov
stos
cmpps
mov
repz
addr16
mov
sbb
iret
adc
cmp
xchg
test
cli
inc
js
cltd
filds
mov
fisttpll
lea
ficompl
rcl
jno
xchg
sub
dec
outsl
sub
fidivrl
lahf
dec
aad
fisubs
lret
cmp
repz
adcl
push
jnp
mov
out
sti
test
push
in
add
push
jne
mov
aam
nop
lret
scas
test
ja
in
push
scas
sbb
cltd
bound
inc
jp
lea
mov
stos
fadds
mov
cmpsb
je
pop
into
mov
insl
js
loop
or
out
mov
mov
mov
dec
inc
fs
cmp
jnp
fwait
pop
or
lds
into
inc
pusha
sub
fisttpll
mov
in
mov
test
mov
sub
bound
mov
int3
fsubp
mov
mov
sub
aas
cltd
cmp
loop
cmpsb
jns
add
aaa
xlat
add
push
subl
pusha
dec
loop
rep
imul
adc
cmc
pop
push
cmpsb
in
xchg
pop
out
xchg
stos
repz
mov
cmp
add
fnstcw
lods
test
scas
sbb
lods
pop
mov
mov
fwait
lock
sbb
jg
cmp
adc
jae
mov
nop
fs
jne
das
jecxz
fwait
jge
mov
sbbb
cs
popa
andl
jmp
scas
stos
sub
shlb
dec
xchg
sub
jae
scas
dec
jae
fldl
sub
and
cmp
js
push
je
jp
sti
xor
sub
add
and
int
insl
xlat
cmp
mov
push
and
push
out
out
rcl
or
dec
pop
inc
lret
push
sbb
mov
jp
addr16
sbb
adc
mov
jnp
cmpsb
scas
sarl
push
test
jbe
fucomip
rclb
inc
faddl
mov
out
mov
testl
push
insl
jecxz
xor
sub
xor
and
mov
mov
test
call
in
mov
mov
xor
mov
jl
out
sub
pop
scas
out
pop
ljmp
or
and
inc
ds
lock
loopne
push
adc
notb
enter
adc
fidivrl
add
jae
add
mov
lahf
sub
loopne
inc
std
gs
xor
loopne
jbe
mov
xchg
int3
or
push
fistpll
popf
sub
loop
enter
jnp
imul
loopne
pop
xchg
outsl
fnstenv
xor
jb
div
dec
mov
clc
inc
repnz
paddusw
lods
lock
ja
dec
or
out
jecxz
mov
cmpsb
mov
cmp
scas
shl
cmp
push
jecxz
sub
add
js
cmp
movsl
out
xor
jmp
inc
mov
dec
mov
call
loope
test
mov
pushf
fbld
sub
mov
xor
push
push
lcall
jle
test
mov
or
in
int
repnz
dec
ror
lea
sbb
xor
movsb
insb
les
fwait
jb
mov
ljmp
pusha
sbb
shrb
lcall
adc
cmp
pop
clc
mov
insl
imulb
dec
loope
push
fcmove
fcmovbe
cmp
xlat
out
rcl
jae
popa
test
mov
les
add
jmp
divl
xchg
out
lods
inc
mov
or
ds
push
addr16
loop
insb
sub
das
cmp
popa
repz
test
ret
ret
push
iret
ljmp
andb
sti
xor
mov
push
add
into
mull
adc
clc
push
dec
cmp
adc
popa
xor
bound
out
js
int3
test
ja
cmp
movl
add
mov
add
mov
adc
dec
add
addr16
or
or
mov
xchg
fldenv
cmc
mov
and
sbb
cwtl
push
xchg
push
xchg
jns
test
and
pusha
loop
push
aaa
push
add
jae
sbb
sub
int
enter
push
fstpl
mov
jns
jns
rorb
xor
or
filds
test
push
xchg
jo
mov
or
push
in
inc
hlt
xchg
popa
imul
mov
call
or
mov
pop
add
out
sbb
jle
cmc
cs
int
jnp
pop
pop
pop
pop
lods
ss
test
pop
je
xchg
lcall
mov
push
mov
xchg
leave
inc
push
jns
push
out
dec
cmc
inc
sub
pop
lcall
push
cmp
out
mov
sbb
daa
cmc
mov
cmp
testb
fidivs
push
je
outsl
jbe
lods
jno
xchg
mov
mov
add
mov
in
clc
nop
pop
sub
pop
int3
and
scas
inc
je
push
cld
imul
mov
add
mov
fwait
and
pop
les
xchg
movsl
mov
pop
scas
cmp
out
jae
xor
pop
outsb
push
test
add
fdivrs
sbb
mov
adc
nop
shlb
sbb
insl
sub
mov
pop
jg
pop
out
mov
insb
inc
sbb
push
lods
jmp
jp
and
js
fsubl
sbb
xor
sbb
xchg
movsb
gs
mov
sbbb
sbb
dec
pop
clc
xchg
lcall
mov
call
daa
push
jmp
out
in
pushf
xor
dec
lods
in
cmp
icebp
push
jge
xor
mov
jmp
mov
popf
xor
cli
pop
jl
in
mov
into
rorb
and
icebp
ret
mov
mov
dec
lcall
pushf
xlat
sub
pop
repnz
sbb
rclb
mov
fistps
jle
mull
mov
mov
xchg
pop
out
loopne
mov
loope
push
je
pop
adc
pop
jno
ss
adc
jns
aaa
jl
push
or
cmp
sub
sub
stos
mov
mov
rorl
ss
aaa
jmp
mov
mov
je
add
push
cmp
dec
sub
into
mov
int3
popf
xor
push
push
leave
ljmp
pop
or
jl
pop
mov
and
cmp
adc
aas
jmp
cwtl
sbb
rclb
adc
mov
pop
cmpsb
and
call
ficoms
data16
repnz
xchg
and
pop
iret
mulb
dec
xchg
aam
stos
hlt
or
or
lods
lret
or
imul
sub
imul
jecxz
popf
mov
xchg
or
arpl
shl
mov
bound
sar
sbb
and
dec
jne
jl
pop
or
into
arpl
mov
mov
pop
cmp
jg
push
ljmp
mov
push
negl
ss
imul
cs
shr
sbb
ret
pop
and
and
call
cmc
dec
inc
sub
sub
data16
ret
enter
pop
gs
jne
mov
and
int3
adc
mov
sub
sbb
loop
mov
xlat
ss
dec
push
arpl
and
aas
add
mov
arpl
and
rcrb
pop
dec
push
filds
movsb
add
int
jo
push
dec
inc
popf
gs
cmpsl
push
addl
ss
xlat
sbb
orb
mov
push
hlt
xchg
xchg
or
lret
sbb
fisubrs
movsl
mov
push
jns
test
mov
scas
test
int
repz
pop
and
fs
mov
test
lock
pop
inc
or
mov
jne
push
stos
fidivrs
xor
adc
pop
rcrb
ja
ja
ret
lea
adc
cwtl
inc
inc
mov
popa
stc
xchg
popa
jge
sub
pop
into
insl
int3
lret
stc
ss
loope
sbb
inc
add
push
pop
push
jns
and
lods
scas
hlt
pop
cli
jb
mov
insb
pop
xor
cmpsb
push
shrb
jecxz
addb
mov
lock
negl
out
sahf
clc
shlb
sbb
adc
test
lods
fwait
out
mov
adc
mov
xor
mov
xchg
xchg
xor
sbb
mov
repz
pusha
fbld
adc
rolb
lret
pusha
sub
fs
push
out
shrb
jle
hlt
addr16
je
dec
sub
mov
pop
lock
xor
aad
sub
testl
and
and
aas
cmpsb
mov
inc
sub
inc
jmp
xchg
or
int3
out
xchg
sbb
dec
rclb
jae
pop
sahf
shrb
stos
inc
rep
add
popa
enter
loop
add
add
shll
mov
inc
subb
in
xor
aaa
iret
inc
sub
aas
adc
xor
daa
inc
mov
xor
mov
inc
mov
pop
xor
or
push
jno
mov
adc
inc
jecxz
cwtl
xchg
pop
into
div
dec
in
pop
pop
cmp
movsb
mov
scas
clc
mov
divb
into
daa
mov
aam
pop
fs
xor
rcrl
in
es
in
jg
push
lcall
cli
cmp
mov
jmp
frstor
pop
fwait
or
and
out
push
inc
enter
ljmp
pushf
mov
popf
leave
pusha
rolb
mov
rorl
sbbl
data16
lahf
push
xchg
and
dec
jg
xor
mov
adc
sub
sub
js
jb
lret
es
sub
inc
sub
movsbl
in
cmp
or
inc
inc
push
fdivrl
fnstcw
lds
add
hlt
in
pop
xor
add
sti
inc
or
push
inc
jb
sbb
xchg
imul
sbb
and
movsb
das
or
and
popl
loopne
push
scas
push
cmc
std
pushf
sar
out
mov
or
bound
sahf
outsb
add
push
lahf
xchg
cmp
jb
mov
and
fistl
sub
test
cmpsl
loopne
stc
cwtl
cld
inc
call
jae
imul
scas
pop
cmp
lock
inc
insl
add
pop
out
mov
mov
in
inc
inc
sbb
dec
mov
dec
pop
rol
popa
pusha
cld
cltd
pop
orl
aam
test
xchg
cmc
push
jmp
aad
mov
dec
es
xor
push
push
les
adc
xchg
inc
xchg
insb
jbe
in
packsswb
push
pop
movb
cli
push
in
inc
stos
fidivs
dec
lret
jne
iret
jg
adc
adc
dec
lods
pop
xor
mov
repnz
jno
pop
lods
movsl
mov
sti
adc
xor
int
testl
lock
pushf
jg
sub
out
loop
popf
mov
sbb
inc
mov
inc
dec
and
enter
dec
outsl
leave
inc
out
sahf
aas
lret
dec
aad
mov
pop
loope
dec
cmp
jg
add
mov
lahf
leave
out
jns
xorl
ds
addr16
push
mov
and
cmp
jno
in
nop
jle
cmpl
push
out
pop
ret
and
adc
jge
push
lahf
xor
cmpsb
sahf
outsl
pop
pop
in
cmp
repnz
jo
sub
in
lds
push
cmp
and
imul
popf
js
cmpsl
xchg
sbb
jg
arpl
sbb
pop
sbb
mov
daa
inc
jl
sbb
dec
int
cmp
xchg
add
ja
mov
data16
stos
lods
aaa
mov
mov
sarb
fcompl
push
push
mov
push
jo
xchg
push
les
jmp
js
adc
and
incl
mov
push
loopne
push
xor
add
mov
out
jno
outsl
mov
cltd
test
xchg
sub
fwait
int3
sub
ss
jb
cmpsb
fdivl
ss
pop
in
cmp
or
adc
popf
or
daa
inc
fcoms
ljmp
insb
daa
dec
cmp
inc
sbbl
sbb
mov
inc
notb
sbbl
add
sub
and
fidivl
orb
sbb
mov
loopne
insb
mov
push
cltd
scas
iret
sti
fwait
or
cmp
pop
inc
mov
loope
shll
insl
stos
in
sbb
in
fwait
cmp
lock
in
push
pop
jmp
into
das
es
shrb
jg
mov
dec
cmc
daa
outsl
outsl
lock
mov
or
push
lods
shlb
sub
and
jl
icebp
js
sub
ret
rorl
sbb
decb
pop
mov
int
and
and
inc
pop
daa
pop
hlt
lea
push
xchg
sub
repz
mov
das
jo
mov
ret
mov
aam
in
test
dec
xor
add
out
xor
pop
repnz
or
fldt
push
mov
fimull
sub
mov
pop
sbb
inc
nop
into
cmp
in
adc
jno
cmp
cltd
stos
das
mov
popa
pop
cmpsb
and
fdivrl
push
popa
mov
xor
fstpt
nop
ret
psllq
or
mov
daa
mov
add
mov
push
data16
arpl
lods
ss
xchg
xor
and
movsb
call
shrl
popf
dec
pop
in
in
scas
inc
ficoms
mov
into
mov
inc
lahf
cmc
xor
and
adc
int
mov
out
sub
in
fs
insl
jge
add
fisubrl
sbb
inc
pop
fisttps
adc
es
jne
dec
in
std
xchg
sti
icebp
lock
sbb
mov
jb
stos
scas
outsb
mov
mov
push
dec
pusha
xor
hlt
xchg
add
mov
loopne
mov
adc
nop
pop
in
fimull
repnz
sub
pop
inc
or
and
js
bound
mov
insl
mov
int3
arpl
imul
xchg
adc
push
mov
mov
and
dec
jle
dec
ljmp
dec
rclb
mov
stos
scas
xor
sub
add
push
push
jg
xchg
ret
cmpb
push
xor
push
mov
cwtl
sahf
fdivl
mov
pop
mov
mov
xchg
out
mov
test
data16
je
jmp
xchg
cmp
rcr
xor
sarl
sub
push
loop
jne
push
dec
sub
mov
dec
repnz
daa
mov
call
daa
pop
outsl
sbb
mov
stc
and
push
enter
xor
sbb
ss
push
out
adc
std
push
inc
mov
jmp
out
fstpt
mov
xor
pop
ficomps
sub
mov
int3
mov
loop
sub
insl
cmc
int
adc
adc
fcomps
inc
mov
lret
call
scas
and
rcll
pop
loope
testl
adc
sarb
adc
sub
sbb
loopne
adc
and
inc
push
xchg
cli
outsl
or
jl
cmpsb
push
dec
cmc
add
jecxz
pop
xchg
fsubrp
lds
mov
xor
jmp
je
stc
cmpsb
les
dec
lods
sub
ret
cmp
int3
jb
into
lahf
jne
sub
lds
out
mov
mov
jl
icebp
pop
mov
andl
test
fstps
lcall
xchg
scas
mov
stos
shlb
cmp
daa
mov
push
repnz
adc
ret
insl
jns
enter
inc
stc
orb
xor
sub
stos
jbe
inc
in
inc
out
adc
pop
adcl
dec
lock
mov
inc
adc
mov
leave
cmp
mov
sti
movsl
sub
adc
xchg
cmp
cld
int3
xor
pop
cmp
adc
addl
mov
jnp
lods
mov
push
rolb
lds
fisttpl
add
je
sbb
add
mov
orb
jge
lods
push
xchg
aad
mov
sub
mov
cltd
cmc
inc
repz
push
sahf
lahf
imul
addr16
and
xor
mov
arpl
sub
std
in
fs
jp
mov
pushf
cwtl
inc
dec
inc
jg
ss
cli
jns
test
cmp
lret
bound
cmp
or
jge
add
sub
es
and
sub
sbb
dec
xchg
xchg
fbstp
adc
mov
lahf
pop
stc
insl
add
and
adc
xchg
mov
fiaddl
push
aad
loopne
mov
js
push
cmpsl
test
es
mul
sub
jbe
shlb
sarl
dec
shrd
aam
mov
pmaddwd
bound
sbb
aam
mov
jo
lods
pop
fwait
or
aam
in
mov
lcall
add
push
jb
and
or
fsubl
in
inc
cmp
lcall
xor
add
mov
sbb
hlt
outsb
dec
dec
and
testl
or
ljmp
pushf
loop
in
fbstp
push
fidivl
fstpl
mov
sub
mov
pop
push
kandnb
xchg
cmp
mov
jns
cmpsl
or
add
andl
sbb
add
incb
jp
pusha
or
mov
mov
xor
add
sbb
out
imul
xor
adc
inc
or
shlb
fs
mov
push
push
out
xchg
pop
jne
jo
adcl
add
shll
or
jae
or
mov
repnz
out
je
js
imul
sbb
push
push
in
jnp
inc
xor
clc
int3
jg
push
aaa
mov
loopne
adc
lret
enter
or
mov
or
and
xchg
out
leave
test
cmp
bnd
push
les
jbe
push
lea
loope
dec
sbb
dec
dec
mov
mov
in
cld
adc
fsts
enter
or
loop
mov
cmp
fs
mov
dec
ja
or
popa
je
cmp
aaa
dec
dec
pop
mov
fcomp
lret
in
into
mov
lcall
inc
sub
movsl
loop
mov
in
add
adc
cmp
popa
cltd
add
nop
mov
push
pop
loope
in
addr16
mov
movups
pop
js
adc
xchg
leave
mov
cli
pushf
outsb
mov
sbb
out
icebp
add
push
cwtl
sarl
mov
cmp
jno
push
ljmp
mov
fisttpll
push
lret
cld
mov
inc
push
pop
imul
in
fdivs
test
pop
out
mov
xor
mov
lahf
mov
sbb
jo
xor
test
stc
pushf
dec
mov
popa
ljmp
sbb
pop
out
push
out
outsb
ds
sbb
addb
xchg
sbb
add
sub
and
push
sub
fistps
inc
shrl
or
mov
jae
cmp
or
mov
mov
push
and
aas
xchg
xor
fisubl
inc
jmp
arpl
imul
xchg
cmp
daa
mov
xchg
add
in
ret
dec
mov
rcrb
dec
lret
arpl
push
and
and
decb
sbb
mov
jb
xchg
pop
fistpl
or
in
inc
xlat
bound
mov
mov
add
mov
cmp
addr16
scas
outsb
shr
ret
std
cwtl
xlat
mov
aam
mov
pop
js
scas
lea
loope
mov
push
pushf
adc
out
push
mov
notl
mov
jl
ljmp
loop
dec
inc
jl
pop
xor
xor
addl
push
aam
cmpl
arpl
out
dec
mov
xchg
sbb
add
and
js
mov
jmp
cmp
les
pop
or
pushl
jmp
out
js
mov
pop
jb
push
mov
mov
xlat
inc
aas
nop
jge
nop
aad
insb
push
jmp
outsb
sub
adc
daa
pop
mov
xchg
mov
pop
shrl
pusha
movsb
imull
clc
adc
cmp
jg
cmp
cli
cwtl
repz
adc
xchg
out
sub
pop
cmp
lods
sbb
sub
fdivs
or
sub
adc
and
fldenv
lods
mov
sub
mov
push
mov
mov
pop
lods
lea
xlat
popf
shlb
fadds
std
inc
cmpsb
sahf
sbb
test
shlb
and
and
sar
xchg
addr16
jmp
sub
in
loop
stos
js
shr
cmp
jo
jg
inc
ret
int3
in
push
mov
push
xor
mov
cmc
xlat
mov
fmull
mov
mov
inc
shlb
xor
daa
pop
mov
sbb
dec
push
clc
mov
xor
xchg
mov
xor
aam
push
rorb
push
lock
lret
rolb
adc
pop
sahf
sbb
je
cmp
fldcw
sti
cmpsl
or
mov
rclb
jae
push
sbb
lods
sbbb
xchg
add
cmpsl
ret
ds
enter
sarl
mov
inc
out
mov
and
mov
aaa
cmp
cmp
push
popa
popf
xor
and
ds
into
mov
xor
sbb
xor
lods
jno
test
add
rorb
mov
push
cmpsb
out
push
shrl
push
out
jo
mov
lcall
push
mov
push
nop
movsl
dec
pop
mov
pop
stc
mov
movsl
sub
mov
lds
cmp
insb
sub
popf
pop
mov
adc
aas
scas
cmp
je
lahf
push
gs
or
cmp
pop
adcb
sub
push
shl
subl
xchg
subb
mov
in
fucomp
xchg
jl
sub
shrb
xchg
mov
pause
cli
xchg
jp
daa
dec
cmp
adc
inc
jg
shrl
cltd
or
sbb
test
cmp
mov
pop
sub
stos
mov
fdivrs
imul
cli
aad
daa
mov
jne
std
insl
xchg
add
mov
pop
movsb
in
fstpt
push
fistl
push
aaa
push
sub
popf
stc
xor
xor
mov
lea
add
sbb
sbb
in
cmp
mov
and
mov
add
cmpsb
sbb
push
cltd
bound
arpl
sub
fs
xchg
cmp
cmp
leave
leave
and
mov
jp
sub
das
push
shr
lds
dec
mov
adc
xchg
mov
mov
mov
fstps
mov
sub
jmp
mov
push
fsubrs
cmp
jns
or
add
imul
mov
mov
aad
hlt
daa
ret
pop
outsl
scas
ret
hlt
rolb
and
iret
xor
sbbb
pop
pop
fwait
dec
cmp
lahf
movsb
repnz
pop
subl
push
mov
movsl
std
sub
or
push
cmp
lds
and
mov
jo
aaa
pop
scas
jmp
mov
jnp
daa
lcall
inc
test
push
mov
jnp
fidivs
mov
mov
xchg
or
adcb
pop
dec
shl
xor
pusha
or
pop
xor
and
lcall
loop
aam
xor
negb
dec
test
gs
nop
sbb
add
sbb
inc
mov
icebp
es
dec
loop
push
mov
lcall
in
pop
loopne
pop
pop
sub
popf
xor
mov
shl
aaa
mov
in
fnstenv
sub
mull
push
mov
popf
mov
in
cld
cmp
jecxz
andl
daa
dec
ficompl
pop
fnstcw
cmp
xlat
push
out
xchg
mov
das
into
mov
mov
in
bound
mov
stc
mov
cli
repnz
test
adc
xor
jae
jno
sub
cli
xchg
nop
push
enter
add
sbb
pusha
inc
jnp
or
ret
xor
ficoms
dec
fists
sub
sarl
pusha
jg
sbb
hlt
ret
fcomps
xorl
sub
push
mov
das
sub
addr16
pushf
cmp
xor
mov
inc
push
negl
mov
adc
inc
pop
repnz
xor
pop
pop
insb
sub
mov
rcrb
xchg
je
mov
test
sub
fcmovnu
add
mov
pop
aad
mov
push
mov
cmpsb
fs
sub
enter
scas
push
xor
pop
push
lret
cltd
mov
aad
aam
repnz
xor
sbb
and
dec
sub
cmp
js
mov
push
dec
js
es
into
mov
arpl
mov
aam
or
sahf
push
sub
dec
mov
in
jo
clc
inc
push
mov
sahf
fmull
sub
int
mov
gs
data16
rcr
mov
fidivs
or
pop
loope
pop
lcall
lcall
and
mov
mov
lock
mov
cmp
gs
insb
scas
sbb
in
das
sub
add
leave
lock
jmp
mov
fldcw
jge
mov
fildl
out
add
add
pop
adc
add
xchg
mov
and
add
cs
negb
cmp
fdivs
pop
scas
test
pop
loop
xchg
sub
sarl
stos
xchg
add
push
jb
dec
cmp
adc
adc
push
pop
dec
inc
shr
inc
stos
aam
sub
mov
aas
adc
fimuls
pop
sub
mov
push
add
push
sub
and
orl
out
xor
into
mov
out
jge
int
jecxz
in
repnz
jbe
mov
scas
fiadds
cltd
rol
xchg
sbb
push
jne
xor
aad
mov
mov
sbb
je
pop
sub
xchg
outsb
test
pop
inc
cmc
out
popa
jmp
aad
push
mov
sbbb
out
xchg
push
loop
mov
imul
enter
sbb
adc
push
out
incb
push
jno
bound
repnz
ja
mov
sbb
bswap
xor
es
jne
sbb
pop
pop
ja
push
test
inc
movsl
lds
rcll
jg
std
sub
mov
stos
fadds
lahf
nop
rcr
and
mov
push
or
jp
das
arpl
push
push
add
cmp
clc
xor
mov
es
outsb
adc
lret
push
in
cmp
adc
movsl
cld
cmpsb
cltd
test
fsubs
fldenv
sbbl
aas
jecxz
cmp
fmull
or
lods
mov
jge
pop
pop
aaa
clc
mov
mov
mov
mov
push
fbstp
cmp
stos
aam
rcll
js
add
sub
pop
push
and
fnstsw
ret
std
inc
pop
sbb
jb
mov
loopne
xchg
aaa
mov
clc
push
sbb
xchg
arpl
jno
add
mov
bnd
pop
imul
mov
testb
jnp
movsl
loop
scas
xlat
dec
pop
cmp
mov
mov
out
xchg
and
pop
sbb
imul
mov
out
shl
shr
push
sbb
or
push
sbb
sti
xlat
cmp
add
pop
xor
pop
xor
into
decb
ja
lods
fs
push
lock
add
iret
xor
sti
pop
jo
push
cld
xlat
test
or
faddp
mov
pop
add
cli
fidivrs
pop
sbb
data16
adc
cmp
mov
dec
popa
bound
jae
sbb
rcrl
popf
xor
pushf
cmp
out
pop
int3
rsm
sbb
xlat
sub
and
out
or
lock
mov
cld
xchg
icebp
add
inc
ljmp
jbe
shlb
fadds
and
sahf
xor
mov
in
cmp
movsb
cmp
mov
jg
jge
adc
sub
push
lret
sahf
in
icebp
push
pusha
mov
xchg
cmp
sbb
ss
push
stos
sbb
jle
cmp
xor
mov
imul
repnz
mov
pop
repz
mov
push
pop
sarb
lods
mov
sti
sbb
cmp
das
lcall
addl
mov
stc
int
mov
pop
and
jg
movsb
jmp
mov
out
and
mov
xchg
dec
xchg
mov
inc
jno
mov
movsl
push
and
scas
aad
sub
or
stc
inc
call
pop
sbb
mov
pop
dec
add
test
mov
gs
adc
ds
mov
adc
ss
cltd
mov
int
mov
add
out
insl
in
mov
mov
shrb
xchg
adc
push
pop
or
in
scas
test
mov
jg
xor
sub
xor
cmp
pop
insb
push
jmp
addr16
les
jge
imul
mov
cmpsb
mov
lcall
inc
add
lds
int3
arpl
push
daa
mov
jge
jnp
mov
mov
je
mov
cmp
cmp
dec
pop
sub
jle
mov
out
mov
les
xchg
lods
in
sbb
repnz
lea
mov
and
scas
sbb
xchg
jmp
ljmp
loope
mov
inc
fisttpll
movb
jmp
jle
xchg
push
jecxz
dec
sbb
jg
push
je
ss
xor
mov
cmc
and
fistps
rorb
fisubrl
inc
sbb
in
fs
mov
sub
roll
pop
outsb
sub
push
mov
dec
pop
stos
fdivrs
popa
mov
jp
inc
roll
mov
and
jle
adc
inc
inc
stos
cwtl
das
fsubl
cmpl
add
sti
jle
test
call
adc
loop
insb
mov
movsl
mov
insb
mov
fldt
roll
xlat
mov
ljmp
leave
dec
ds
shr
jmp
jnp
dec
push
mov
sub
lret
push
jns
inc
pop
xchg
add
push
es
insb
push
or
mov
xor
mov
popa
mov
fcmovbe
push
sbb
popa
jmp
push
enter
aaa
adc
adc
test
lahf
xchg
jecxz,pn
mov
push
mov
mov
push
xchg
das
ss
add
pushl
pop
or
fs
xchg
movsl
sbb
arpl
sub
mov
pusha
pop
aas
dec
jns
sub
repz
cs
xchg
jns
lods
pop
dec
and
mov
daa
test
and
sub
cltd
pop
pop
push
test
notb
xor
enter
add
push
mov
mov
fistpl
into
push
daa
subb
push
xor
dec
fs
cmp
es
pop
aam
in
aaa
add
adc
mov
xor
pop
jge
dec
add
sub
jle
fmull
mov
xchg
mov
fbstp
xchg
loope
in
and
cmp
lods
insl
bnd
sub
inc
fbstp
inc
xor
fstpt
test
in
fimull
pop
add
in
test
in
repnz
fs
loop
jge
jbe
mov
jecxz
adc
sbb
lcall
lret
dec
pop
add
fcmove
and
inc
fwait
jb
jmp
dec
out
stc
insb
outsl
test
je
or
adc
xor
push
push
push
jo
xor
test
mov
rorl
aas
ds
in
test
out
lcall
cmp
jbe
nop
jp
inc
les
scas
fucom
push
xor
lock
fstpl
in
add
jl
mov
ja
shlb
adc
stos
mov
mov
fs
xchg
xor
movsb
lahf
mov
pop
in
in
andl
out
pop
xchg
add
mov
jae
pusha
pop
in
xorb
xchg
repnz
std
cltd
jecxz
mov
jns
movl
cwtl
clc
movsl
mov
pop
xchg
je
mov
hlt
cmp
shll
dec
fstl
ja
inc
sub
iret
data16
inc
push
cmp
xchg
repnz
xor
loop
pop
test
or
mov
rol
pop
cmp
into
jl
or
imul
add
jl
push
je
mov
xchg
fld
ror
cmp
xor
call
mov
push
sbb
bound
leave
push
rorl
jb
les
inc
lret
mov
out
or
enter
push
test
nop
mov
pop
je,pt
pop
xor
fwait
loopne
stc
sahf
mov
sbb
pop
aam
mov
out
das
scas
mov
mov
sbbb
inc
subb
fidivrl
movsb
jnp
sbb
bound
cli
ds
inc
stos
cmp
add
dec
pop
ss
and
gs
dec
mov
aaa
ja
cld
xchg
lret
mov
aad
addr16
jno
jle
sbb
add
push
cs
and
es
adc
lahf
add
outsl
jl
sub
lret
shrl
inc
inc
push
shlb
in
in
icebp
xchg
insl
test
push
call
inc
adc
sbb
leave
loopne
pop
and
cli
inc
outsl
xchg
lods
xchg
adcb
xlat
mov
or
in
sub
loope
mov
mov
lahf
jnp
sarl
call
mov
xor
jle
in
push
ret
icebp
je
loopne
push
daa
mov
mov
or
push
movsl
or
push
mov
int
in
sarb
mov
xor
fidivrl
add
xchg
nop
aad
mov
in
iret
fwait
jns
and
inc
lahf
gs
sbb
xchg
push
jne
add
sub
or
decb
sub
xor
and
aaa
gs
in
fs
jle
jp
cwtl
stos
xchg
std
inc
shll
lret
dec
pop
pop
mov
lret
dec
jl
jg
pop
dec
cltd
xor
jmp
push
xchg
outsl
mov
add
mov
ja
orb
hlt
cmp
cmp
pop
jno
nop
sti
pop
clc
sti
data16
mov
jns
popa
loopne
xchg
sub
mov
mov
insb
js
cmp
or
mov
pushf
lret
sub
add
movsl
subb
mov
daa
cmpsb
fcoms
int3
ss
shlb
mov
imul
or
pop
data16
push
push
add
sahf
outsl
fsts
fmull
push
adc
test
clc
push
inc
fidivl
sbb
nop
pop
mov
push
adc
insl
shrb
fsubrl
sbb
icebp
pop
jg
mov
pop
mov
cli
dec
pop
faddl
sbb
sti
lret
ret
adc
mov
dec
lock
pop
push
sub
mov
stos
gs
lods
inc
mov
lret
mov
sub
jg
adc
or
insb
push
in
lods
add
icebp
xor
jae
inc
aaa
cld
dec
icebp
popa
xchg
sub
add
sub
testl
scas
xorl
sub
jle
sub
ss
xchg
add
call
mov
sub
rcll
icebp
lcall
or
cli
ja
clc
add
mov
sbb
out
mov
outsl
ss
jl
mov
mov
std
addr16
lock
add
and
inc
sti
jbe
shrl
adcl
inc
cld
aaa
mov
outsl
xchg
push
xchg
mov
icebp
mov
xchg
cs
mov
sti
shld
lcall
loope
cmpsb
and
mov
ja
dec
mov
adc
mov
gs
imul
sub
aaa
stos
inc
addr16
enter
scas
ljmp
jb
pusha
and
push
orl
in
or
sbb
and
dec
mov
adc
imul
decl
pop
ljmp
imull
adc
fcmovnbe
call
imul
mov
cmpsb
inc
jb
daa
lret
lds
sti
mov
xchg
inc
jae
dec
push
leave
pop
movsb
jmp
ret
aam
out
mov
pop
mov
fcompl
aas
cli
xchg
add
test
and
xor
add
cmpsl
push
fdivr
iret
popa
sub
pop
adcl
scas
xor
sbbl
mov
pop
out
push
lea
ss
inc
inc
mov
ficoml
fwait
lahf
adc
mov
js
push
hlt
repnz
in
mov
fwait
sarl
lods
pop
dec
xchg
inc
test
xor
out
xchg
dec
sbb
insb
xchg
cmp
lahf
mov
adc
push
mov
sbbl
xorb
das
addr16
push
or
jge
addr16
call
pop
xchg
jae
loop
mov
pushf
into
add
outsl
push
sbb
push
jne
push
lea
adc
in
and
sbb
mov
ror
or
mov
xor
push
sub
enter
cmp
mov
imulb
shrb
xchg
vpsrld
ror
push
add
les
mov
sbb
mov
leave
mov
pop
pop
mov
jbe
mov
sub
jle
cwtl
push
sbb
addr16
jle
fs
ret
loope
lock
xor
xchg
pop
sub
xor
sbb
repz
cmc
dec
sbb
mov
adc
data16
leave
dec
bound
xchg
scas
movsl
sub
push
outsb
call
jae
hlt
addr16
xor
andl
and
or
mov
or
jb
lret
add
or
sahf
mov
mov
pop
lcall
in
dec
shlb
sahf
clc
and
mov
ljmp
jb
xor
nop
stos
popf
je
imull
sbb
sbb
test
xchg
pop
adc
cmpsl
js
iret
xor
sub
inc
aas
mov
test
and
pushf
mov
ljmp
shll
outsb
inc
decl
dec
gs
adc
xor
xchg
pop
dec
mov
jp
or
imul
xor
dec
loope
lret
cmp
outsl
xor
scas
or
jp
movsl
in
jge
jnp
test
adc
mov
xor
shlb
dec
pop
aam
lcall
enter
ja
outsl
pop
pop
xlat
es
ss
fadds
ss
xchg
xor
arpl
in
les
stos
inc
sbb
ds
pop
out
and
adc
push
inc
mov
sub
rcr
mov
add
gs
jmp
pop
inc
fbstp
mov
or
loopne
mov
lock
cmp
pop
jnp
sub
fiaddl
movsb
hlt
addr16
mov
adc
mov
int
mov
cmp
cmpsl
fs
pop
pop
js
or
lds
sub
mov
loope
insb
divl
xor
lock
sub
dec
cmp
insb
enter
lea
call
push
in
aaa
and
cmp
adc
jnp
and
xor
jge
loopne
fsts
aaa
je
push
movups
inc
xor
dec
jecxz
je
mov
xchg
lods
pop
shrl
clc
or
iret
insl
loop
sbb
inc
adc
dec
push
fcoms
enter
test
rclb
cld
xorb
jne
xchg
adc
mov
arpl
aad
shrl
adc
xchg
jmp
or
shr
pop
decb
xchg
andl
insb
add
cmp
mov
je
jb
mov
popf
push
jno
inc
loop
dec
gs
lret
add
icebp
mov
sub
push
andl
pop
lods
sub
mov
loope
sub
popa
in
xchg
mov
rclb
xlat
push
fiadds
clc
jne
inc
mov
push
rorl
xchg
daa
test
or
xchg
sub
xchg
pop
mov
fs
lds
mov
enter
lods
imul
test
lea
sbb
mov
shrl
inc
or
cmp
fstps
push
jne
jae
hlt
movsb
sub
sahf
xchg
pop
xor
jg
xor
push
in
jmp
call
bnd
lods
frstor
dec
popa
fs
arpl
mov
lcall
int3
addr16
pop
repz
pop
inc
xchg
and
add
jne
mov
int
fwait
xchg
scas
fistpll
rcrb
insl
cltd
cmp
mov
push
cltd
jge
jp
and
out
mov
mov
inc
sbb
pusha
stos
arpl
stc
push
cmpsb
mov
and
fisttps
cmp
loopne
pop
fldl
outsl
cmp
sbb
push
jbe
cmc
sbb
adc
add
lods
lds
push
outsb
mov
enter
add
loope
jge
mov
add
push
cwtl
mov
jl
fsts
fisubrs
cmp
cmp
jno
ficoms
add
fidivrs
into
cmp
cmpsl
add
cltd
jno
mov
push
dec
jl
dec
jne
loope
mov
ret
clc
cld
jecxz
adc
mov
stc
pop
add
cmp
mov
lret
cltd
andb
aam
mov
in
leave
pusha
push
addr16
dec
out
inc
cli
pop
cmp
cltd
dec
push
pop
adc
out
sbb
sbb
cltd
lods
mov
cmpps
mov
flds
in
sub
sub
stc
mov
out
lcall
hlt
push
dec
pop
inc
icebp
fucomip
loop
xchg
inc
into
out
adc
test
shrb
mov
adc
les
pop
icebp
inc
xlat
icebp
inc
inc
mov
sbb
xchg
or
pop
dec
xchg
sub
xor
mov
push
stc
popf
xor
dec
movsl
imul
or
mov
jmp
xor
jle
cmp
mov
dec
fcompl
mov
sub
cmp
pushf
pushf
shl
jge
push
jae
sub
and
sbb
aas
adc
movsb
jle
cmp
mov
dec
lods
arpl
ss
shl
lea
insl
nop
add
je
cmc
insl
add
clc
test
mov
xor
push
and
stos
and
cmp
lret
sahf
add
or
cmc
push
xchg
pop
andl
ds
dec
clc
icebp
cmp
jbe
push
loop
xchg
test
inc
lea
insb
popf
mov
outsl
ficoml
testb
aas
adc
outsl
push
and
movsb
bound
cmp
into
loopne
fldenv
adc
add
and
mov
lcall
cltd
nop
call
and
pop
shr
jl
mov
fidivrl
stos
xchg
sbb
dec
cmp
bound
jo
stos
cld
inc
push
adc
xchg
int
ljmp
fisubrl
fistpll
push
mov
and
push
fmull
mov
pop
mov
push
sub
xor
mov
mov
adc
cmp
lock
mov
jge
ljmp
pushf
repz
mov
fimull
popa
fsubr
iret
mov
aam
insl
cltd
xor
shrb
lret
and
mov
push
mov
addr16
jp
das
mov
std
and
bound
rol
mov
add
xor
cmpsl
cmp
mov
fnstsw
cmc
jb
call
sub
push
adc
shll
fstpt
xchg
dec
inc
out
add
lock
pop
mov
mov
nop
aam
mov
enter
ds
test
mov
jae
mov
sbb
jbe
stos
movsl
movsb
or
inc
push
sub
sub
adc
cld
andb
and
sub
in
in
inc
jb
fnstenv
stos
xchg
add
cmpsb
leave
mov
add
jns
je
pop
xor
in
mov
imull
and
sub
int
mov
sub
arpl
int
pop
imul
cli
ret
lret
and
cld
push
adc
lcall
insb
mov
sahf
gs
cmc
imul
xor
sbb
fists
xchg
mov
xchg
adc
jmp
xchg
pop
lock
test
mov
dec
repz
push
in
loopne
pop
in
adc
pop
dec
test
or
pop
out
push
mov
ret
sarb
lods
xchg
xchg
fucomip
mov
push
sarl
and
cmp
cmpsb
add
push
jp
shll
fsub
and
mov
xchg
sarb
adc
cmp
movsb
mov
pop
std
jo
inc
gs
lret
fisubrl
lods
loopne
loop
stos
mov
add
cltd
xor
leave
mov
sub
es
jmp
pop
sub
fcoml
dec
hlt
pop
popf
scas
cltd
and
test
jmp
arpl
cld
test
test
sahf
cmc
adc
mov
pop
or
inc
mov
adc
dec
push
adc
push
lcall
popf
in
rorb
call
xor
mov
jecxz
testb
lds
jns
fwait
xor
std
lods
movsb
jmp
fistpl
push
lret
lock
leave
cwtl
push
push
mov
mov
bnd
inc
arpl
test
sarb
xchg
pop
push
pop
test
pop
out
rclb
popa
xor
fildll
dec
cmp
add
jno
cld
mov
nop
pop
cmc
mov
lret
lods
imulb
fs
add
mov
sti
cmpsl
loop
xchg
dec
mov
paddusw
dec
or
sub
popf
call
decl
xchg
sub
hlt
pop
sub
dec
mov
cvtdq2ps
mov
jmp
sbb
insb
mov
data16
loope
clc
add
movsl
lcall
shll
add
push
shl
jo
inc
lcall
movsb
ds
js
aas
pop
sbb
loope
ret
insb
jg
push
adcb
int
xchg
push
and
jo
jbe
jmp
mov
push
add
in
adc
cmp
fs
mov
push
add
sbb
cld
push
adc
mov
jne
sahf
jg
outsl
mov
dec
in
jno
add
outsl
cmp
adc
popf
icebp
in
negb
cmp
cmp
int3
pop
gs
mov
int3
mov
pop
push
outsl
adc
cltd
dec
push
xchg
add
rcr
mov
aad
leave
movsl
mov
cmc
cmpsl
sahf
and
lret
push
sub
push
inc
sti
jae
jo
cmp
jp
lods
adc
insb
inc
cmp
and
xchg
loopne
mov
ljmp
inc
insb
in
mov
test
stos
fldt
mov
ja
cld
pop
rcr
push
into
fstl
cmpsl
shll
imul
cmp
mov
jb
push
jno
xchg
lahf
ror
mov
scas
fwait
cltd
jbe
inc
push
out
mov
jmp
mov
xchg
fildl
mov
xchg
jle
sahf
xor
mov
cmp
pop
mov
aam
popa
fdivp
inc
jmp
mov
hlt
scas
int3
fwait
mov
imul
aam
pop
in
adc
mov
test
add
or
dec
cmp
inc
push
out
dec
sbb
fdivrs
cmp
jmp
call
into
ljmp
adcl
push
data16
cwtl
movsb
add
sub
ja
test
sarl
ficomps
fisttps
adc
inc
into
outsb
ror
arpl
jnp
mov
jns
mov
les
cmc
pop
aad
pusha
shlb
jmp
outsb
inc
les
and
mov
jg
icebp
mov
and
jne
pop
cmp
je
and
negl
ror
xor
leave
faddp
add
mov
out
xor
jl
add
jmp
xchg
in
roll
adc
popa
stos
mov
jmp
cmp
add
and
push
fsubrs
jge
sub
and
push
xor
popf
push
mov
and
pop
add
jecxz
daa
testl
push
dec
scas
push
es
bound
das
cmp
stc
js
sub
pushw
inc
xchg
repz
icebp
je
enter
mov
fwait
pop
pop
and
dec
pop
xchg
xor
sub
xor
sbb
or
dec
cli
sub
jmp
sbb
xchg
or
movsl
mov
movb
ret
or
jmp
xchg
scas
lret
mov
push
lret
bound
cmp
cli
mov
push
fwait
mov
sbb
cmpb
adc
push
push
push
dec
das
push
sub
rorl
movl
and
stos
pop
sub
xchg
daa
fwait
lret
mov
cwtl
inc
fs
jb
push
je
push
jno
cmp
xchg
mov
adcb
mov
into
fsubl
lods
outsl
outsl
jo
mov
fcom
in
sbb
fsubl
dec
add
jbe
xchg
push
hlt
rclb
cmp
push
jo
movsb
mov
inc
sub
mov
ss
xchg
ror
cs
insl
ja
imul
mov
lods
xchg
rcr
stc
mov
lods
bnd
orl
sub
adc
aaa
lret
xchg
jb
mov
fbstp
fisttpll
nop
mov
loop
jns
and
pop
mov
mov
jle
stos
cs
inc
lods
leave
bnd
inc
and
das
mov
adc
roll
gs
lock
out
and
jbe
xchg
mov
xchg
jnp
push
pop
and
pop
or
adc
sub
mov
shlb
pop
xor
cmpsl
cli
xchg
xchg
cmpsb
dec
out
or
mov
xchg
jb
xchg
mov
xchg
add
scas
jo
inc
mov
jmp
dec
xlat
ja
int3
push
repnz
xchg
pop
pop
scas
outsb
js
and
xlat
ret
push
mov
add
or
imul
mov
dec
push
inc
mov
scas
cld
stos
loopne
mov
fstpl
movsl
dec
adc
hlt
and
and
lock
pop
daa
mov
inc
mov
jge
negl
inc
loop
xchg
fwait
cmpsl
hlt
in
push
cltd
in
nop
adc
push
cmp
fwait
insl
mov
scas
mov
add
pop
push
rorl
movsb
imul
add
sub
mov
leave
or
inc
jmp
or
xchg
nop
adc
sbb
jno
xor
xchg
add
scas
popf
mov
into
shlb
dec
leave
xchg
mov
dec
mov
cmp
pop
adc
popf
roll
std
or
dec
mov
xor
and
mov
adc
dec
xchg
aad
jp
jno
sbb
mov
or
xchg
mov
push
mov
dec
pop
sub
and
add
sti
mov
push
sbb
pop
mov
out
enter
xor
jp
push
mov
flds
dec
flds
pop
shlb
movsb
adc
aaa
push
add
repz
into
mov
aaa
clc
les
pop
loope
ss
adc
push
ja
push
pushf
maxps
push
push
std
wrmsr
cmpsb
les
data16
lds
dec
sbb
sub
scas
lods
ficomps
fdivrl
dec
orb
mov
push
stc
sbb
out
shll
insl
sarl
dec
pop
mov
cltd
mov
adc
inc
stc
mov
pop
dec
add
hlt
lcall
inc
dec
or
or
in
hlt
test
je
test
imul
push
int3
jne
add
in
mov
mov
adc
int
int
shr
lahf
ljmp
pushf
and
stos
lods
jle
dec
jno
sub
je
push
lahf
sbbl
or
test
das
fiaddl
jbe
inc
jecxz
xlat
mov
insl
sbb
inc
xor
outsl
mov
add
lods
mov
cmp
into
adc
stos
jmp
stos
xchg
sbb
xor
xchg
dec
outsb
jo
jmp
leave
push
adc
cmpsl
push
scas
sbb
inc
sbb
mov
inc
xor
jbe
scas
enter
ljmp
inc
repnz
ja
movsl
xor
xchg
int
inc
fnsave
jo
movsb
cmp
pushf
add
xor
jl
mov
add
lods
or
sub
inc
int
lret
scas
fnsave
dec
lret
sahf
or
nop
pop
sub
loope
inc
lret
cmc
cmp
sub
test
aas
out
leave
jbe
daa
scas
ret
pop
cmp
mov
jns
and
ljmp
in
ret
cmp
sub
ja
into
dec
scas
and
cmpsl
pop
mov
adc
ret
pop
out
cmp
dec
outsl
je
jnp
into
xchg
add
lea
out
or
decb
lahf
movsb
lret
test
stos
or
pop
sub
xchg
cltd
arpl
mov
les
arpl
cltd
push
mov
fdivp
lahf
mull
leave
je
mov
cmp
push
out
and
outsb
orb
lret
xor
in
mov
jle
pop
or
sti
and
sub
and
aas
sti
call
xchg
add
mov
bound
test
jg
mov
sti
adc
or
ljmp
jo
ret
or
and
aaa
mov
sub
stos
or
mov
test
lods
aas
shl
mov
jmp
mov
cs
add
and
arpl
mov
add
jbe
test
and
xor
dec
pop
pop
mov
xor
fsubs
ret
fbld
mov
std
or
clc
inc
sarb
jbe
cltd
jo
retw
mov
cmp
mov
cmp
mov
les
jge
add
jns
rorb
shlb
ss
pop
ja
lea
mov
icebp
aam
shrb
or
arpl
mov
push
sbbl
sbb
sti
hlt
and
sbbb
adc
lds
adc
adc
jmp
rorl
gs
movsl
outsl
jno
addl
in
repz
ds
subl
out
mov
sub
jb
inc
std
aam
push
jg
pushf
movsb
daa
cmpsb
pop
rorb
jae
sbb
sbb
push
mov
mov
fisttpl
cmc
pop
and
mov
test
ja
and
pop
test
fildl
inc
mov
xchg
jnp
imul
pop
pop
push
in
or
fcomps
mov
push
mov
push
inc
inc
push
jne
iret
nop
mov
sbb
int3
cmpsb
sbb
icebp
imul
js
lods
int
sub
adc
nop
daa
cmp
nop
mov
sbb
cmp
nop
adc
in
cltd
xor
jae
jecxz
sub
loopne
call
jge
sbb
fcompl
les
fwait
push
adc
repnz
cmp
inc
xchg
jns
jg
call
or
cmp
cltd
orl
icebp
loop
pop
fimuls
xchg
pop
in
test
sub
fbstp
adc
xchg
inc
lds
loopne
sbb
jp
ss
xorb
lods
adc
xor
jmp
subb
sub
imul
pop
push
inc
jmp
in
iret
sub
int3
mov
leave
enter
fs
mov
mov
aad
cmp
lds
rcll
mov
xor
mov
rcrl
jb
dec
jno
lahf
idivl
mov
cltd
push
inc
push
inc
push
jg
cwtl
xor
loope
fistl
ret
pop
repz
mov
int
in
ret
sub
loop
jne
aad
pop
lcall
popa
cmpsl
icebp
mov
push
lcall
cwtl
das
lret
out
outsl
mov
mov
inc
inc
jecxz
out
aam
subl
push
add
and
inc
shrl
dec
nop
cmpsl
pop
jmp
rcll
insl
loop
lock
stos
fdivrl
pushf
arpl
pusha
xor
push
pop
mov
jmp
into
or
icebp
ret
repz
mov
nop
pop
xlat
sbb
pushf
lret
cmc
jmp
xchg
xchg
sti
sub
cwtl
test
pushf
push
mov
cwtl
daa
cld
pop
mov
xchg
lret
cmp
or
mov
in
push
lcall
jg
cltd
and
add
mov
rorl
mov
das
and
insb
add
pop
cmp
arpl
scas
es
jp
sub
loop
mov
shll
outsb
or
xor
cs
cmc
mov
adc
aad
sub
jnp
pop
loop
lcall
mov
and
and
in
dec
adc
subb
aaa
cmp
pop
repnz
leave
das
fidivs
pop
sahf
push
jle
stos
rcr
mov
testl
mov
push
call
dec
or
mov
mov
in
andb
aam
push
and
out
pop
cmp
cld
bound
movsl
dec
pop
in
inc
mov
mov
cmc
xchg
jns
push
call
aam
jo
fists
xor
movsl
xor
jecxz
sbbl
xor
insb
scas
dec
jmp
mov
mov
pop
ljmp
xor
in
or
adc
daa
mov
mov
inc
sbb
sbb
lock
dec
push
lods
inc
add
scas
mov
inc
push
je
movsl
pop
imulb
jns
rcrb
adc
cs
xchg
lahf
cmp
and
into
dec
cltd
sbb
aam
das
in
addr16
or
jp
into
jno
pop
shrl
loop
xor
adc
cmp
push
mov
fists
cld
push
inc
loop
jns
in
in
mov
or
cmpb
lret
mov
fwait
jbe
push
in
lds
jae
fstps
loopne
mov
repnz
or
xor
std
inc
sub
andl
es
mov
enter
mov
mov
jns
adc
dec
and
ss
ror
arpl
mov
xor
or
cli
mov
data16
pop
xor
mov
scas
xchg
and
test
mov
nop
sub
popf
daa
ljmp
xchg
inc
xor
xor
aam
outsb
stos
fidivl
mov
pop
scas
mov
mov
sbb
mov
mov
rcll
int
test
xor
stos
inc
mov
dec
int3
jecxz
enter
pop
ljmp
and
insl
mov
xchg
sub
mov
in
pop
mov
cmp
mov
inc
insl
rcll
pop
and
adcl
ss
jg
jnp
sub
pusha
add
aam
fmuls
cli
aad
and
in
or
xor
mov
add
pop
inc
cltd
and
xchg
outsl
add
out
lea
inc
dec
mov
xchg
dec
mov
movsl
fdiv
mov
fidivrs
dec
push
mov
xchg
cltd
lret
pop
decl
mov
rorl
add
jle
sub
mov
loope
insl
pop
mov
repz
mov
xchg
dec
call
cmp
into
mov
dec
lods
inc
pop
pusha
sub
sbb
inc
insb
adc
fsubs
fucomp
test
leave
inc
push
pop
ret
hlt
lahf
xlat
mov
es
sub
adc
mov
cmc
into
and
shrd
push
adc
pop
es
inc
cltd
inc
scas
lret
fwait
pop
sahf
sub
sarb
or
mov
fnsave
lret
pop
cld
mov
push
inc
daa
inc
je
mov
xchg
adc
lret
into
cmp
imulb
mov
adc
lods
stos
pushf
addr16
sbb
dec
adc
es
push
xor
outsl
pushl
push
aad
dec
add
outsb
insb
dec
repnz
imul
and
mov
ss
shr
mov
jecxz
popa
jg
pop
iret
push
inc
popa
stos
mov
sbb
jecxz
inc
xlat
lea
ds
xchg
push
push
lds
jae
add
jns
xor
imul
mov
fadd
out
push
sub
cmp
sarb
push
mov
enter
lock
pop
or
imul
inc
fs
mov
ret
lds
mov
fimuls
adc
add
lcall
mov
mov
enter
imul
cltd
in
or
cli
inc
fwait
push
xor
push
shrl
jecxz
and
and
sbb
xchg
and
ret
je
cmp
pop
dec
shlb
daa
lcall
adc
xor
adc
iret
push
add
loop
repnz
jae
xor
dec
repz
add
pop
push
test
adc
add
push
xchg
ret
xor
sub
cmp
arpl
repz
aad
sbb
test
movsb
repnz
lods
sbb
jg
nop
mov
ja
in
push
testb
fisubrs
btr
icebp
xlat
arpl
push
call
mov
enter
ret
inc
lret
ror
mov
sub
enter
or
adc
sub
inc
cmpsl
push
and
cwtl
pop
hlt
ret
xchg
mov
xchg
insb
addl
sahf
fdivl
lcall
rcrb
jl
int3
push
divb
push
inc
pop
inc
arpl
sbb
sbb
leave
mov
push
fsubrl
je
mov
lods
push
or
push
rorl
mov
sub
mov
outsb
and
imul
xchg
add
jne
orb
pushf
and
imul
mov
fsts
jno
insl
jge
jae
add
cmpsl
inc
arpl
add
in
pop
push
scas
inc
push
mov
lret
mov
push
xchg
shlb
out
les
dec
pop
inc
andl
mov
into
mov
ljmp
sbb
mov
icebp
mov
sbb
pop
mov
out
mov
push
and
sahf
pop
jmp
mov
test
fs
das
inc
xor
stos
lods
ds
xor
xchg
xchg
pop
inc
notl
dec
dec
cmp
nop
hlt
and
push
jno
mov
push
insb
pop
add
out
pop
adc
sti
sub
rcll
mov
clc
adc
push
inc
ljmp
jge
mov
sub
mov
push
dec
fldenv
sarb
add
xchg
shrb
fsubs
dec
pop
jo
pop
cmp
xchg
mov
mov
push
sahf
lock
lods
inc
test
dec
xchg
xor
pop
sbb
or
call
das
lock
rorb
ret
stos
ljmp
or
clc
nop
popa
test
sbb
jb
mov
xchg
inc
hlt
inc
push
cmp
xchg
gs
out
lret
mov
stos
push
cld
mov
sub
push
pop
aaa
dec
mov
adc
daa
mov
outsb
lret
cmp
clc
jae
in
mov
in
push
adc
ud0
das
lcall
mov
jo
popf
xor
fdivl
shll
xchg
mov
xchg
pop
mov
dec
scas
mov
call
adc
adc
std
and
cmpsb
sub
xchg
daa
mov
rol
divl
adc
mov
push
ror
leave
add
test
or
jbe
cmp
mov
sub
mov
enter
cli
daa
orl
ljmp
arpl
das
sbbb
jnp
sub
cmp
lock
pop
cmpsb
lods
inc
test
enter
mov
out
or
cmc
in
outsl
sbb
aad
pop
mov
nop
mov
jno
aad
movl
mov
les
push
inc
mov
pusha
or
mov
sahf
pop
pushf
dec
test
fsubr
outsl
ficoml
jns
adc
jl
outsb
jl
pop
aaa
fwait
dec
int
push
lods
data16
je
pop
gs
sbb
jmp
sub
test
or
fcmove
xorl
stos
sub
sti
xchg
cmp
mov
xchg
outsb
add
rorl
jl
lcall
lods
cmpsb
push
pushf
dec
jl
andl
out
xor
hlt
leave
xor
pushf
scas
cmp
popa
lods
pop
jg
das
xor
mov
pushf
shr
int3
dec
inc
fwait
mov
popa
xor
ja
push
mov
pop
stos
popa
mov
xor
fdivrl
lds
mov
push
xor
push
ljmp
push
and
fwait
loop
xchg
in
cmc
add
aaa
and
pop
icebp
sub
loope
sub
adc
lret
and
fnstcw
divb
outsb
enter
gs
rol
fisubrs
int
sub
pop
mov
jl
lret
nop
or
mov
loop
mov
mov
sbb
lea
cmp
cld
test
push
pop
xor
mov
mov
inc
cld
mov
in
fwait
int
cwtl
das
push
out
mov
shlb
or
xchg
or
pop
insb
xor
cmpsl
ds
sbbb
adc
loope
mov
add
movsb
xchg
dec
push
pop
dec
lcall
lcall
hlt
sbb
shlb
xchg
sub
pop
mov
dec
imul
stos
and
push
lret
insl
add
mov
xor
or
jns
sbb
flds
xor
and
mov
pop
adc
mov
sbb
xchg
inc
push
mov
xor
test
sbb
or
cmpsl
dec
mov
or
push
es
int
dec
xor
cmpsb
dec
js
inc
or
mov
popa
xchg
aas
lret
cmp
cmp
adc
mov
pop
lcall
xchg
adc
cmc
push
sub
cmp
into
popf
jmp
cmp
or
inc
or
push
bound
movsl
jmp
and
scas
pop
loop
jae
sub
add
inc
dec
push
push
fwait
lods
fmulp
popf
fs
sbb
mov
and
shrl
add
adc
pusha
add
ss
dec
lcall
inc
push
push
xchg
jle
loop
pop
sub
xor
js
cmpsl
pop
jmp
jp
xchg
sub
cmp
test
popl
jecxz
adcb
gs
test
pushl
or
insl
dec
ja
pop
mov
sbb
sbb
push
mov
sbb
dec
popa
adc
mov
cmp
testl
and
iret
arpl
xor
adc
decl
dec
lods
test
iret
fidivrs
and
hlt
push
jle
in
xchg
add
in
sbb
scas
dec
sarb
mov
mov
lods
adc
inc
pushf
test
add
loopne
lcall
test
and
cmp
loope
scas
popa
les
jmp
and
xorb
and
mov
push
mov
shll
mov
mov
stos
mov
leave
xor
test
or
lahf
test
ret
jmp
lds
shlb
mov
mov
rcl
mov
mov
bnd
mov
enter
enter
fistl
lods
or
xor
dec
mov
sbb
scas
xor
jo
adc
lcall
and
add
jecxz
dec
scas
andl
or
rorl
jp
repnz
add
xor
push
fucomip
push
js
fisttpll
and
dec
jo
sub
jle
push
push
in
mov
xor
mov
pop
repnz
xor
gs
mov
scas
and
mov
iret
vpunpcklwd
loop
cmp
xor
jmp
mov
iret
mov
dec
and
aaa
dec
ds
cmp
repz
in
pop
adc
inc
das
fwait
stos
mov
loopne
shl
mov
cmc
mov
mov
and
insl
push
inc
stos
push
stos
mov
lds
mov
aaa
mov
cmp
cmp
mov
or
stos
jae
cmp
lcall
fldenv
ljmp
cwtl
sub
decl
rolb
shrb
rolb
mov
aaa
aas
dec
or
cmp
pop
pop
inc
in
test
insl
in
push
or
adc
cld
in
fsin
testl
jno
lret
dec
adc
lods
dec
jecxz
in
aad
pop
cwtl
xchg
pusha
xlat
mov
in
mov
cmp
stos
xchg
add
inc
push
jg
mov
xor
loope
test
mov
arpl
mov
cmp
imul
adc
mov
flds
inc
fcomi
loopne
and
dec
mov
push
sbbb
xchg
cmc
lea
mov
inc
test
adc
ror
jno
mov
insb
ljmp
mov
xchg
xchg
aad
loop
sti
jg
mov
dec
adc
repz
aam
nop
or
repz
in
aam
jp
inc
loope
into
test
ss
lea
aaa
mov
jmp
inc
mov
jae
out
sbb
xchg
scas
mov
mov
leave
iret
rcll
adc
addr16
lock
ja
cmp
jb
pop
in
push
enter
hlt
push
cmc
in
imul
mov
sub
popa
inc
sub
xchg
pop
and
jb
notl
sub
push
add
repz
arpl
add
jp
pop
shlb
shl
inc
adc
dec
nop
shlb
cld
gs
inc
mov
sbb
outsl
push
adc
or
or
xchg
add
inc
or
mov
enter
arpl
lret
xchg
pushf
push
xchg
mov
or
ss
jno
cmp
cli
or
push
mov
ret
scas
fisttpl
sub
movsl
jge
xchg
icebp
lret
addr16
sbb
int
jge
lods
sti
imul
mov
mov
push
rcll
icebp
mov
jmp
out
inc
clc
mov
call
mov
sbb
repz
dec
xchg
jmp
sub
cmpsb
dec
lea
pop
fdivs
inc
add
push
mov
test
shll
adc
dec
stos
and
inc
push
ds
ja
push
jne
pop
fwait
push
sbb
mov
inc
cld
sub
push
loope
inc
push
movsb
or
xor
cltd
or
leave
movsb
jp
jnp
mov
pop
movsl
lret
lret
cmp
and
rolb
repz
adc
cld
clc
addr16
lock
xchg
xchg
xor
ja
bound
inc
mov
and
fnstenv
push
adc
push
dec
push
sbb
das
jnp
stc
pop
sbb
xlat
daa
sbb
ret
jb
outsb
sub
dec
mov
out
cmp
and
push
outsb
add
gs
push
xchg
inc
and
dec
in
fsubl
pop
push
clc
or
adc
popa
jmp
sbb
out
mov
bound
jno,pn
stos
bound
negb
mov
outsb
jns
mov
cmp
mov
or
sub
js
in
cltd
push
fmull
xchg
adc
enter
insl
inc
dec
pop
divl
repz
fdivrl
fwait
movsl
nop
sbb
jmp
dec
fnstsw
push
cli
insl
sub
push
pop
test
dec
xor
cmp
sub
jmp
or
lea
stos
push
out
in
xchg
and
cmp
aaa
test
lea
les
popa
xchg
cs
xchg
sub
add
xchg
lds
jge
pop
daa
pusha
adc
mov
jb
xor
cmp
imul
cmc
cltd
mov
ror
xor
test
jbe
adc
cwtl
stos
cmp
popf
xor
add
les
daa
push
jmp
pop
mov
cmpsb
inc
int3
adc
xchg
js
push
sub
jge
mov
hlt
add
or
xchg
cld
cmpb
out
add
out
jno
cmp
inc
lret
push
cld
xchg
lea
icebp
int
adc
out
ja
push
mov
iret
inc
gs
mov
lretw
push
mov
and
sub
dec
xchg
cmp
mov
push
xchg
loope
mov
adc
cmpb
out
sub
sub
stc
outsb
jne
jbe
mov
xchg
jno
popl
aaa
jae
or
fistpll
imul
rolb
int3
leave
xchg
ret
add
fldt
push
add
mov
dec
out
push
mov
shrb
cmp
or
xchg
adc
adc
sbb
dec
fbstp
mov
lcall
stc
xor
inc
cmp
into
adc
pop
repnz
iret
lods
hlt
cli
lret
jns
cld
fistl
xchg
data16
sbb
pop
mov
mov
jnp
pop
lds
lcall
jecxz
scas
sub
lods
xchg
jno
sahf
and
xor
aam
sub
dec
push
cmpsl
mov
xorb
movsb
mov
mov
popf
insb
xchg
call
cmpsl
daa
mov
pop
pop
sub
add
scas
dec
cmp
sbb
sahf
dec
or
lock
loope
pop
pop
fimuls
adc
in
adc
mov
cmp
idivl
mov
xor
pop
repz
ret
mov
mov
jle
iret
lahf
cmp
rolb
dec
hlt
enter
adc
sub
sub
and
push
jecxz
jae
ja
mov
xchg
popa
sub
jno
jl
push
push
mov
cmp
mov
inc
cmp
sub
add
leave
data16
xor
sarl
sub
ret
outsl
mov
xor
bswap
ret
sub
stc
mov
scas
xchg
pop
cmp
pop
jp
cli
shl
imul
mov
jl
xlat
movsl
mov
aam
repnz
insb
dec
dec
sbb
in
inc
pop
push
adc
movsl
xor
mov
call
clc
xchg
fnsave
adc
or
insb
lahf
push
in
vzeroupper
mull
jns
pushl
lds
xchg
push
hlt
jae
xor
arpl
out
mov
mov
mov
enter
imul
pop
mov
lret
sub
xchg
shrb
into
add
es
in
rolb
pop
shrl
ret
fbld
mov
jo
push
pop
sbb
sub
xor
ljmp
imul
mov
adc
arpl
or
dec
out
hlt
rol
adc
xor
xor
fwait
pop
clc
nop
jle
add
es
cmpsl
mov
es
mov
test
leave
repz
ss
je
cmpl
aad
cs
cmp
jns
lea
aam
and
inc
push
jb
fdivrp
jnp
mov
subl
jl
sarb
or
xorb
pop
push
mov
das
mov
cmpsb
imul
jg
mov
rorb
lret
outsb
pop
hlt
es
mov
subl
or
cmp
pop
lock
mull
mov
hlt
mov
jnp
in
ds
sub
fbstp
lock
stos
int3
lret
sub
stos
pop
rorb
pop
lods
cmpsl
sub
js
and
add
insl
jbe
sbb
mov
push
sbb
das
inc
push
insb
and
xlat
fimuls
cli
es
jge
sahf
mov
scas
mov
mov
pop
insl
push
push
mov
xchg
dec
dec
gs
dec
cmp
push
pusha
fisubs
fsubs
sub
xchg
cmp
in
rorl
add
xor
cmpsl
vpshld
lock
popa
pushf
repz
jb
mov
stos
movsl
inc
sub
stos
ss
and
fisubrl
or
ficomps
repz
repnz
lret
jae
dec
ds
popa
mov
sub
pop
pop
jne
lock
push
inc
mov
cld
inc
test
out
aaa
and
and
mov
subl
arpl
pop
adc
inc
and
xchg
jecxz
mov
cmp
adcl
cmpsl
jns
mov
movsl
mov
add
jno
and
cmp
dec
xchg
and
push
cmp
test
cmp
push
mov
shll
sbb
and
cmp
aam
mov
dec
dec
adc
hlt
insl
inc
loopne
mov
dec
dec
sbb
aas
leave
movsb
pop
mov
push
jne
pop
ja
mov
xor
xchg
cltd
or
jns
test
adc
mov
js
push
and
mov
test
in
gs
je
dec
mov
pop
loope
fnstcw
scas
cmc
std
dec
pusha
or
cmpsl
nop
xor
lret
aad
cmp
stos
ljmp
pushf
cmc
lods
adc
int
add
shlb
push
xorl
sbb
push
ja
mov
pop
rcrl
lds
adc
inc
lahf
pusha
movsl
push
jg
mov
jb
shlb
cmc
pusha
test
cmp
lods
lock
sbb
cmpsb
xor
in
mov
xor
jno
sti
ss
xchg
sti
add
sub
dec
popf
sbb
or
mov
sbb
sbb
xchg
sbb
jns
leave
fldln2
lcall
femms
sub
cmp
nop
xchg
pop
inc
cltd
add
jl
pop
sub
or
jl
add
mov
pop
lea
xlat
xchg
pop
xlat
test
es
jle
xchg
jecxz
pop
scas
in
inc
push
rcl
sub
rorl
mov
fisubl
adc
or
mov
daa
scas
adc
dec
idiv
lea
mov
leave
test
pop
mov
jne
ss
or
insl
xor
jl
loopne
jno
jg
pop
jo
push
mov
dec
addb
adc
add
adc
mov
in
pop
pop
fisubs
aas
mov
data16
cwtl
push
add
fs
and
inc
leave
dec
int3
gs
fisubs
mov
cwtl
movsl
fs
lcall
dec
cld
cltd
cwtl
xchg
and
repz
sbb
fisubl
dec
pop
bound
or
xchg
enter
and
mov
lret
jg
jmp
aam
jnp
lock
or
and
lahf
sbb
sub
push
sub
and
subb
push
cmc
inc
andl
push
test
call
testb
xchg
fs
scas
xchg
sub
push
les
sbb
enter
inc
cmp
fs
fmul
iret
popa
out
dec
pop
and
xchg
in
test
fisttpl
and
cltd
out
xchg
out
fldl2t
mov
jmp
ret
mov
imul
jns
mov
loopne
jo
sti
xchg
fadds
dec
iret
xchg
arpl
pop
aad
push
nop
xor
cmp
jp
sbb
jge
fstp
inc
movsb
std
dec
movsl
arpl
and
xchg
sbb
sub
sar
dec
out
dec
and
sahf
pop
lock
lds
xlat
add
cmp
dec
push
out
lock
xor
adc
ds
pop
rcr
jo
cltd
lock
adc
aad
jp
mov
pop
dec
idivb
inc
insl
addr16
mulb
add
popf
test
jecxz
fiadds
imul
or
inc
sub
sub
xor
xlat
cld
sub
subb
dec
sahf
aaa
not
lods
sahf
xor
testb
push
pop
xchg
xlat
lods
add
fsubrl
sbb
pop
test
movsb
out
addb
mov
push
in
int3
sub
and
sub
fdivrl
gs
cmp
jl
scas
es
sbb
push
int3
xor
test
mov
lahf
or
arpl
dec
or
call
iret
xchg
pop
dec
addr16
test
rcrl
stc
sub
dec
pop
andl
cs
mov
addl
push
push
pop
dec
push
nop
das
push
lcall
in
adcl
inc
pusha
popa
or
bound
jecxz
mov
push
setp
xchg
add
in
push
mov
mov
movsl
lods
sbb
xor
ljmp
add
test
lea
scas
aas
outsl
mov
dec
cmp
fisubrl
outsl
push
xor
mov
or
daa
aas
push
mov
adc
or
out
ret
insb
or
lcall
roll
stc
xchg
insl
hlt
jmp
es
sbb
cld
int3
add
js
push
out
lea
mov
dec
mov
mov
push
stos
les
inc
stc
sahf
jo
movsb
jmp
out
outsl
sbb
leave
add
xlat
and
loopne
dec
std
ficoml
mov
cmp
xor
bound
pop
out
push
pusha
sub
enter
outsl
mov
xor
sbb
xor
leave
xor
xchg
and
xor
push
xor
fistpll
sbb
or
mov
fdivrl
push
inc
mov
or
xchg
or
repz
ja
fsubrl
jns
and
es
andl
js
mov
inc
push
jmp
pushf
lea
jmp
jle
scas
xchg
and
iret
mov
or
dec
add
out
stos
push
xchg
pushl
rcr
std
pop
js
inc
scas
add
insl
mov
inc
stos
lods
mov
push
lret
jbe
mov
mov
mov
fdiv
jns
push
and
das
pop
sbb
xchg
or
cmp
jns
dec
fildll
cmpsb
ficomps
push
push
mov
xor
and
pop
out
xchg
scas
and
cmp
jbe
movl
sti
xor
and
xchg
mov
insb
add
dec
inc
xlat
mov
repz
in
icebp
mov
test
popf
gs
cld
imul
mov
cltd
pop
xor
or
xchg
jne
jecxz
mov
or
dec
cmp
call
out
inc
in
stos
shlb
mov
fisttps
loopne
and
inc
mov
cmpsb
cmc
popf
xlat
mov
jl
pop
ljmp
jb
es
adc
or
inc
sub
or
jb
test
jb
mov
push
xchg
push
movsb
fidivrl
sub
pushf
imulb
idivl
repz
popl
imul
cmp
jne
out
ds
mov
xor
addb
xchg
sub
or
inc
std
out
fildll
cmpsb
cmp
faddl
jne
xor
lahf
repz
mov
xchg
add
cmp
dec
out
pop
rcl
andl
popf
inc
xor
lds
xor
data16
stos
mov
push
push
cli
pushf
cltd
or
ljmp
jg
cmpsb
pushf
leave
rorl
daa
add
das
xchg
pushl
adc
and
add
cmp
sti
lret
mov
jmp
test
mov
stos
jnp
push
insl
mov
add
xchg
xchg
or
xor
test
inc
loopne
outsl
adc
and
jmp
lods
rol
push
and
rclb
mov
mov
xor
pop
test
lahf
sub
dec
mov
xor
les
fisubs
mov
sarl
mov
mov
sarb
nop
decl
xor
xor
mov
dec
sti
cmpsl
mov
pop
pop
movsb
mov
mov
out
addb
sbb
outsb
stc
insl
sarb
push
dec
stc
cmp
cs
rolb
dec
or
jle
push
adc
es
cltd
mov
inc
out
aam
shr
prefetch
or
inc
add
orl
sbb
push
fstcw
mov
push
mov
inc
cmpsl
outsl
sub
ret
out
hlt
fmuls
pop
repz
enter
inc
movzbl
jb
jnp
shlb
cli
fwait
popa
xor
in
pop
call
mov
imul
mov
add
insb
mov
cmpb
push
add
lret
fmuls
cwtl
jbe
and
mov
sarl
outsb
lcall
in
sub
lcall
call
xchg
ror
mov
imul
int
dec
in
dec
enter
insb
push
cs
imul
orb
scas
sub
sbb
test
cwtl
sbb
cli
out
outsb
ret
pop
mov
add
pop
repz
mov
mov
cmp
cmc
xchg
lret
pop
push
mov
push
aad
adcl
pop
data16
bound
lds
push
mov
mov
pop
inc
int
jne
imul
jmp
dec
push
push
shrl
insb
and
inc
push
mov
inc
leave
popa
jmp
pop
rcr
cmpl
and
mov
pop
cmp
stos
sub
fcoms
lret
bound
adc
lret
xor
ret
sbb
dec
xor
test
test
xor
dec
icebp
scas
dec
in
shl
adc
insb
jl
sbb
pop
fnstenv
mov
add
fdiv
call
lds
add
adc
je
jo
cmpsb
gs
sub
mov
js
std
or
ret
cmp
push
push
adc
cli
imul
sbbl
ficompl
mov
fdivr
xchg
push
mov
sbb
ficomps
fldt
jge
movsl
jo
pop
aas
add
push
stos
add
sbb
and
pop
out
into
pushw
pop
aaa
mov
in
add
leave
jo
lea
dec
cltd
sbb
cld
add
pop
scas
or
test
sbb
sub
adc
in
add
mov
sub
cmp
xchg
mov
jb
cmp
pop
cmp
stos
jns
inc
stos
lret
adcl
mov
sahf
inc
inc
xchg
mov
frstor
adc
jnp
push
xor
loope
dec
cmpsb
cmp
les
popf
ret
in
loop
push
xchg
mov
xor
or
mov
mov
stos
into
cmc
iret
lcall
sbb
xor
cs
out
daa
fucomp
pop
std
insb
sub
loop
xor
sbb
mov
imul
xchg
inc
push
jae,pn
cld
lret
sub
js
pop
mov
pop
jbe
gs
push
andnps
jne
std
jo
sbb
fistpll
fsts
push
aas
es
dec
adc
jg
pop
lods
add
adc
lahf
lea
add
adc
jb
test
mov
lods
outsl
jo
dec
and
mov
cmp
gs
or
xchg
xor
mov
xchg
sub
mov
xor
icebp
stos
jge
add
adc
loopne
and
pop
into
xchg
push
int
in
dec
mov
rorb
xor
xchg
inc
fistpl
out
adc
loop
inc
jecxz
inc
adc
mov
ror
test
xrelease
xchg
iret
mov
int3
mov
jecxz
dec
or
sbb
cld
in
pop
push
pop
xor
cmp
jne
jae
mov
enter
data16
pop
mov
xor
xor
adc
cmp
popf
cli
pop
frstor
add
mov
sti
and
js
and
and
testl
lea
sbb
cld
fucomip
xor
out
add
dec
aad
jne
icebp
daa
inc
js
repnz
sbb
scas
inc
jl
scas
sub
scas
and
shr
jge
out
mov
cmp
xchg
and
xor
in
jnp
sbb
pushf
imul
test
and
or
sub
bndstx
mov
insb
mov
and
mov
aas
in
imul
cmpsl
pop
ret
rcll
out
xlat
and
or
int
test
scas
ds
mov
dec
mov
insb
dec
call
xchg
sbb
cmpsb
fs
push
mov
jnp
add
daa
cs
cmp
inc
ds
inc
std
xchg
fwait
push
in
repz
out
sbbb
xlat
notb
adc
push
leave
das
xor
mov
and
inc
jmp
lods
cmpsl
es
sub
sub
js
push
push
mov
leave
iret
aas
lea
add
imul
xor
fmuls
popf
test
cmc
sub
push
add
mov
push
fstl
mov
mov
jae
outsl
pop
out
jecxz
add
and
jp
pop
jle
cmc
scas
sbbl
inc
dec
orl
clc
shlb
cld
aam
nop
dec
xor
inc
mov
sbb
mov
push
fstpt
aam
lods
les
lret
jb
test
mov
push
aad
xchg
jmp
sub
sbb
fcmovnb
stos
mov
sub
nop
mov
ret
movsb
adc
sub
add
mov
cmp
cmp
stc
insb
cli
lods
shll
mov
sbb
fildl
xchg
dec
or
adc
popa
shll
mov
jp
xchg
xchg
mov
jno
fs
xor
jnp
sub
jo
add
test
xchg
orb
lds
insb
ljmp
js
lahf
negl
pushl
pminub
sub
or
cmpsl
fisubs
cmp
cmp
mov
test
dec
call
mov
fstl
xchg
mov
mov
or
sahf
xor
lahf
fcmove
push
sarl
je
pop
das
jae
and
test
and
repz
sbb
xchg
xor
in
or
mov
test
sahf
aad
sub
add
out
aas
loopne
in
fdivrl
push
pop
insl
add
das
pop
repnz
push
in
pop
pop
jp
lods
jl
stos
pop
sbb
jae
mov
cli
in
sub
cmpsl
pop
jmp
add
mov
movsl
stos
xchg
sbb
jae
jecxz
jo
dec
vprotw
jmp
mov
in
mov
mov
lret
lods
in
imul
mov
out
xor
test
loopne
mov
cmp
imul
in
mov
xlat
test
les
ljmp
enter
jb
rorl
push
fnsave
std
lock
popl
lahf
mov
inc
mov
pop
xor
nop
dec
add
push
xchg
insb
cmpsb
lods
mov
and
outsb
jge
inc
out
jge
or
pop
rorb
sub
imul
fdivr
shlb
fimull
sbb
sarl
gs
sub
jecxz
mov
sbb
test
loopne
jmp
cmp
fdivs
pop
test
out
popf
hlt
test
out
fsts
repnz
inc
jge
add
fnstenv
add
jnp
fdivl
lds
aaa
hlt
call
lcall
pop
cld
loope
loope
sub
inc
xchg
jb
stc
dec
fmuls
adc
pop
mov
xchg
sbb
ds
addl
outsl
inc
mov
imul
cltd
mov
popf
addr16
inc
xlat
fwait
fs
mov
mov
push
rcl
xor
ja
filds
mov
jl
xor
stos
or
inc
popa
sub
fnsave
xor
xchg
cli
or
mov
and
in
js
mov
nop
subb
out
cmp
test
cmp
loopne
xor
movsb
push
out
cmp
lret
xorl
adc
jp
fidivrl
mov
sub
mov
mov
nop
out
adc
int
xchg
push
je
popf
out
and
fs
negl
push
sbb
movsl
sbb
out
stos
pop
inc
fistpll
jae
xor
ret
in
jns
cmc
jo
ficoml
or
push
ret
cmpsb
in
mov
jmp
in
mov
lds
adc
adc
mov
or
sbb
in
mov
test
and
inc
xlat
cmp
test
rcr
icebp
into
xor
sbb
jge
xchg
push
push
imul
popf
sbb
mov
mov
test
lret
std
movsb
and
cld
repnz
dec
js
std
xchg
push
lcall
mov
xor
pop
add
dec
and
js
fwait
xor
push
mov
loope
cwtl
xchg
loopne
rol
lods
jecxz,pt
dec
dec
aam
jnp
fidivrs
inc
imul
xchg
cli
xchg
insl
enter
movsl
mov
movsl
cwtl
stos
and
out
call
fnstenv
aaa
sbb
pusha
insl
lret
test
aam
ljmp
adc
xor
xorl
cmp
fwait
mov
lods
adc
loopne
xor
mov
out
sbb
in
aaa
stos
loop
xor
insl
add
sbb
rcl
push
out
out
bound
mov
nop
push
xor
mov
mov
add
add
inc
mov
cmpsl
dec
mov
imul
mov
xchg
pop
mov
sahf
push
pop
jmp
mov
out
std
adc
int
shr
push
pop
lret
inc
xchg
xor
mov
cli
lds
cli
inc
shrb
pushf
loope
xchg
mov
mov
ljmp
jecxz
movsb
fwait
sbb
fcompl
movsb
loope
mov
push
in
movsb
xlat
fs
nop
out
in
and
fsts
mov
push
cli
mov
dec
out
ds
or
cwtl
das
repz
insb
fstpl
fidivs
enter
jge
or
cltd
xor
mov
js
cmp
or
sti
xchg
push
testb
test
pop
pushf
xchg
xchg
scas
notb
cmpsl
daa
adc
icebp
aaa
ss
cltd
das
inc
fcom
sti
pop
mov
ret
in
push
or
cmp
stc
dec
mov
lahf
mov
mov
pop
add
and
dec
test
or
sti
mov
mov
sti
inc
stc
loopne
shrb
xorl
inc
mov
mov
and
jo
mov
mov
int
ret
test
jnp
mov
mov
bound
repz
cltd
xor
out
jbe
das
or
in
dec
push
sub
add
fs
add
fidivl
and
imul
push
out
test
and
and
subl
jnp
sahf
jecxz
cwtl
pop
xchg
mov
test
sbb
sbb
inc
add
jecxz
ret
scas
and
shlb
jne
rorl
jge
xchg
fisttpl
sbb
out
jb
rol
or
xor
sahf
or
in
push
mov
ret
add
xorl
insb
pop
in
cmp
mov
jecxz
aam
or
imul
push
pushf
repz
rorb
incl
addr16
lea
popf
iret
loope
cmpsl
cltd
xor
std
mull
or
loop
xor
mov
xchg
add
mov
dec
jno
jge
mov
movsb
shrb
adc
mov
in
repz
pop
xchg
or
jmp
mov
xor
and
adc
dec
std
mov
lods
arpl
xchg
adc
dec
inc
repnz
scas
test
mov
in
std
cltd
fs
in
xchg
imul
pushf
mov
adc
out
ret
lea
fnstcw
fmul
fistl
push
xchg
insl
adc
fsubr
mov
hlt
adc
out
push
fdivp
fs
fwait
bound
mov
psubb
aam
mov
pop
jo
loop
adc
cwtl
addr16
insb
jge
xor
lds
sti
jo
push
imul
mov
cmpsb
mov
xchg
test
lret
cltd
mov
jmp
push
inc
push
in
jns
sbb
inc
cs
fildll
push
mov
packuswb
mul
inc
push
dec
fs
mov
lods
pop
hlt
fstp
pop
dec
hlt
mov
mov
fwait
jmp
aad
ja
in
jo
ljmp
testb
test
xchg
jnp
pop
lods
negb
sub
mov
jns
cmp
push
je
rol
mov
ret
jecxz
dec
addr16
cmp
iret
push
add
jns
mov
std
scas
je
mov
dec
push
xor
push
push
ret
jle
dec
or
pushf
xchg
sbb
adc
mov
ror
cmp
into
insb
add
addr16
sbb
xorl
int3
push
dec
xchg
test
outsl
inc
dec
ret
mov
shlb
xchg
in
mov
pop
imul
cmp
lock
sarl
in
add
inc
stos
arpl
pop
cmp
fildl
test
ja
divb
add
push
jge
movl
and
cs
push
push
add
out
lea
cmp
inc
mov
or
das
xchg
mov
enter
xchg
jnp
das
nop
daa
popa
lcall
subb
jl
mov
mov
sbb
fnstcw
into
test
shl
pop
pop
decl
cmp
shlb
shll
frstor
int3
pop
dec
jnp
sti
xchg
dec
movl
mov
xchg
xor
add
inc
push
movsl
mov
insb
sbb
mulb
ss
icebp
loope
bts
add
adc
xchg
mov
push
or
cmp
xor
movsb
dec
jne
rol
lock
in
adc
out
stc
movsl
push
cld
subl
jg
pop
jno
push
cmpsl
ret
mov
add
jns
mov
mov
push
out
push
cmc
lods
or
or
push
lods
cmp
int
js
movsl
inc
and
jle
jge
sbb
mov
sti
lcall
sbb
aaa
xchg
cld
ja
sbb
mov
jmp
and
jo
stc
inc
pop
nop
add
in
adc
mov
incl
loope
mov
sub
and
shll
gs
lret
scas
and
out
jbe
and
adc
dec
call
hlt
xchg
in
lods
add
ffreep
sbbb
add
outsl
push
repnz
or
xor
jb
daa
movsb
mov
mov
adc
adc
push
sbb
aas
icebp
jnp
and
jl
xor
movsl
arpl
jp
push
xor
lea
mov
loope
push
lock
push
inc
adc
cmc
jnp
xchg
mov
xchg
lock
add
rcrl
xchg
sub
daa
out
aad
sti
or
ss
mov
je
gs
mov
pop
ret
pop
jecxz
and
and
ja
push
inc
repnz
lea
xchg
sub
lds
sub
mov
cli
push
int3
lret
out
xor
jg
les
aam
std
xchg
mov
and
mov
adc
xor
pushf
test
sahf
stos
inc
popa
xor
jbe
mov
dec
inc
inc
fnsave
xchg
and
sbb
push
or
stos
pop
sbbb
in
lea
dec
fbstp
mov
jge
push
push
inc
mov
out
adc
scas
stos
mov
loope
iret
and
push
outsb
enter
sbbb
lods
lret
push
mov
and
inc
fnstsw
mov
and
mov
cmpsb
xchg
outsl
popa
inc
clc
sub
lcall
xor
imul
pop
sbb
jecxz
add
inc
push
pop
adc
mov
mov
dec
mov
aad
mov
inc
mov
int3
mov
adc
push
pop
bswap
dec
cltd
push
pop
push
gs
cwtl
xchg
jno
andl
lret
and
aas
sub
push
out
mov
jae
sbb
fdivrs
test
add
push
push
roll
je
push
xor
dec
xlat
outsl
mov
push
popa
jb
or
cld
cmp
aaa
repnz
popa
aaa
and
jmp
mov
push
cmp
adc
daa
rorb
pop
xor
fidivrs
sbb
adc
sub
aam
ja
and
cmpl
pop
shr
pop
lods
movsl
mov
fisttps
lods
decb
xchg
loop
in
loopne
outsb
loope
pop
sti
imul
adc
or
sbb
outsb
maskmovq
mull
rorl
pushf
xchg
adcl
sub
movsl
out
adc
rcrl
mov
xor
pop
lahf
stos
jbe
std
test
sar
jbe
fbld
adc
inc
push
ljmp
xor
jecxz
pop
push
rorl
nop
pop
pop
lcall
cmp
cmp
pop
scas
outsb
lahf
sub
ret
aaa
aaa
loop
jnp
out
ds
dec
inc
add
adcl
xchg
das
adc
divb
xchg
mov
xlat
outsl
fisubs
xchg
ds
add
pop
sub
out
mov
iret
and
adc
add
mov
cwtl
fs
adc
inc
adc
xor
dec
adc
stc
push
mov
mov
loop
sbbl
cmp
push
lods
iret
xchg
hlt
jae
mov
jg
hlt
cwtl
cmp
decl
jle
mov
fbstp
mov
jae
push
and
mov
push
adcl
jo
add
testb
insb
or
push
mov
stc
xor
mov
xor
adc
inc
popa
jecxz
lea
popa
stc
lea
inc
nop
dec
bnd
mov
mov
push
pop
shrl
test
pop
adc
xchg
pop
jb
js
paddw
int3
push
subb
mov
loop
sbb
js
xor
pop
jge
mov
into
imul
add
outsb
repnz
push
mov
xchg
sub
inc
fadds
or
mov
sbb
mov
or
add
add
sahf
mov
test
mov
sbb
imul
push
mov
mov
jae
fisubrl
lret
sbb
out
lret
mov
or
fists
lret
iret
divb
jp
adcb
push
ljmp
notb
mov
faddl
popf
mov
fisubs
add
popf
xchg
push
popa
add
add
or
stos
mov
sbb
pop
into
jne
xchg
popf
and
cmp
push
mov
xchg
inc
iret
mov
inc
mov
adc
or
cmp
mov
or
inc
or
js
push
mov
adc
idivb
xor
xlat
push
jbe
out
cld
push
cmc
sti
and
jp
pusha
cld
mov
cs
xlat
movsl
push
and
cld
pushf
add
sbb
and
nop
jae
not
mov
dec
mov
leave
pop
mov
push
sbb
pop
and
imul
pushf
xor
les
mov
sub
lea
repnz
sub
pop
push
out
shrl
pop
cmp
mov
cmc
cmp
or
cmp
add
jno
rep
scas
inc
and
sbb
inc
int
je
out
mov
frstor
mov
mov
inc
pop
jno
hlt
mov
push
add
mov
adc
adc
mov
mov
and
push
push
cmp
xchg
out
xchg
loopne
sahf
insl
sbb
out
or
or
add
shlb
or
push
test
sub
and
push
enter
rcll
stc
enter
and
push
jbe
aam
clc
fistl
aad
dec
xor
inc
lahf
push
adc
fldl2t
outsl
jb
adc
pushl
cmpsb
jno
mov
jno
xor
xchg
enter
cmpsb
jl
popf
sub
mov
ja
and
mov
sahf
inc
add
mov
addr16
push
lock
push
and
jle
xchg
daa
sbb
cltd
mov
fs
ljmp
mov
stc
cltd
push
mov
loopne
adcb
fiadds
add
jno
test
imul
fdiv
push
sub
sbb
ret
hlt
sbb
imul
mov
fdivrs
and
mov
sub
xor
ja,pt
mov
iret
mov
mov
lods
fucomi
mov
add
dec
push
mov
aaa
rorl
pushf
out
mov
cmpsb
cmp
mov
push
and
andb
sbb
jmp
loopne
jge
fdivl
cltd
stc
and
mov
fimuls
mov
add
or
push
nop
addl
inc
xchg
mov
mov
or
popl
dec
cld
push
xlat
lods
enter
into
pop
jg
sbb
loopne
and
sahf
mov
mov
fsubrl
mov
fistpll
xchg
inc
pop
sbb
lret
pop
mov
stos
pop
es
mov
adc
gs
xor
dec
test
fs
data16
jbe
xchg
fisubs
in
rol
arpl
inc
xchg
imul
sub
inc
in
inc
and
lods
adc
outsl
fbstp
imul
pop
jo
dec
es
pop
sub
cmp
outsl
lret
or
mov
jb
xchg
cwtl
jae
aam
dec
fdivp
mov
repz
rcll
rorl
ret
jns
xor
jle
les
lock
cld
jmp
sbb
movsb
cs
mov
test
inc
stc
mov
fstpt
mov
xchg
test
out
mov
cld
les
sbb
xchg
rcll
inc
pushf
dec
insb
push
dec
cmp
arpl
and
js
aas
inc
sbbl
dec
popa
ljmp
dec
push
or
cwtl
fsubrl
add
lods
negb
test
lahf
inc
sub
mov
ret
divl
sbb
adc
inc
pop
pop
loope
outsb
movsl
lds
fmul
fmul
ficomps
xchg
lock
push
adc
pop
add
loope
int3
addl
aaa
insb
sahf
xor
int
jmp
cli
dec
nop
lods
je
mov
lea
dec
pop
push
push
sti
inc
insb
xchg
lahf
es
add
jnp
imulb
adc
jle
xor
enter
mov
dec
jecxz
mov
jmp
lret
idivl
syscall
imul
adc
in
mov
jge
js
jb
subl
lea
jmp
ljmp
sub
inc
adc
jnp
fstps
xor
inc
mov
das
subl
test
cmp
cmpsl
cmpl
fistpl
lea
xorb
cs
ss
es
decl
gs
pusha
push
ja
mov
lret
shr
pop
adc
inc
fs
test
movsb
dec
adc
mov
shll
mov
or
lods
xor
popa
int
adc
imul
push
sub
bound
sbb
gs
sub
loope
jo
sub
dec
push
jp
jbe
pusha
jg
fs
stos
test
pop
push
in
test
cmpsl
pop
clc
pusha
cld
mov
stos
aaa
test
lock
jge
popa
xor
cs
push
jno
repnz
out
addl
mov
add
lret
jecxz
jecxz
jmp
test
neg
push
insb
sub
mov
jnp
dec
mov
lret
dec
xchg
testb
jb
pop
ss
jae
mov
leave
les
scas
adc
and
scas
and
push
aas
repnz
sahf
lahf
ror
mov
popa
lret
adc
outsl
repz
push
mov
es
push
xchg
dec
add
in
lods
add
and
int
int3
lret
rcrl
adc
dec
lds
lods
sbb
jo
fsubs
dec
fidivl
sbb
repz
cmp
outsl
push
enter
pop
insl
jp
lock
mov
popf
mov
cmpsb
jmp
inc
push
push
pop
lret
dec
add
xor
inc
out
scas
ja
adc
jp
jnp
cmp
inc
shl
bound
add
fwait
sbb
movsb
add
sub
jl
inc
sub
xchg
xchg
dec
fcmove
fmuls
enter
loop
pop
mov
add
mov
insl
pop
out
test
inc
fisubrl
fidivl
std
dec
xchg
stos
sbb
or
adc
repnz
imul
in
pusha
stos
sbb
or
jno
sbb
or
cmp
test
jbe
cltd
cmp
idiv
std
movsl
daa
xchg
imul
mov
test
inc
flds
lea
int
pusha
das
xchg
in
or
stos
inc
xor
imul
sbb
xor
add
push
lods
and
jo
xchg
adc
enter
lock
std
inc
iret
and
test
dec
add
cltd
in
popf
xor
stos
pushf
xchg
adc
sti
cmp
fmuls
scas
push
insb
sarb
call
sbb
in
leave
in
cmp
jle
loopne
subb
fs
xor
ljmp
inc
sbb
mov
jmp
fwait
sbb
sbb
enter
mov
pop
mov
push
xchg
add
jae
or
xchg
stos
inc
leave
lret
xor
sbb
aas
dec
aam
mov
adc
test
adc
js
enter
and
jae
lcall
push
sub
xorl
mov
ret
fs
mov
call
movsl
inc
sbb
lods
outsb
push
pop
mov
lds
idivl
adc
in
dec
das
adc
mov
outsl
push
nop
push
nop
cs
add
xor
popa
loopne
pop
pop
mov
fdiv
jge
xchg
ret
int
fldt
mov
call
and
inc
jp
sub
push
hlt
insb
insb
pop
lahf
pop
ljmp
xor
in
shrb
sbb
sbb
adc
push
frstor
mov
pushf
std
push
test
mul
shld
inc
cmp
movsl
adc
mov
into
fstpt
rorb
cli
out
xlat
push
pop
call
stos
test
repz
sbb
xchg
adc
add
scas
mov
dec
fistps
mov
mov
xlat
outsb
and
lahf
cs
shrl
jl
out
adc
xor
xor
xchg
in
xor
shrl
mov
addr16
cs
test
dec
test
iret
push
jp
loop
cmpsb
sub
add
cmc
imul
and
test
testl
test
sbbl
mov
adc
mov
sar
outsb
fstpt
out
adc
push
jo
adc
jbe
dec
mov
jecxz
popa
xor
xchg
xchg
ds
jle
shlb
test
adc
push
inc
and
xor
das
inc
or
adc
lock
xor
mov
fstl
or
pop
imul
aad
or
add
xor
xchg
aas
pop
xor
std
sbb
cmpsb
mov
fcoms
mov
and
pop
jb
and
nop
dec
xchg
shr
aas
sub
out
icebp
pusha
mov
sub
int3
clc
nop
jbe
in
push
mov
mov
mov
lret
mov
ret
and
lds
sub
sub
or
add
push
sub
xchg
push
mov
jp
mov
enter
inc
pop
bound
xchg
insb
imul
inc
ss
icebp
insb
imul
pop
or
xor
push
mov
ss
fwait
dec
add
xchg
push
bound
sahf
lods
dec
imul
mov
in
sti
cmpb
xor
stos
mov
test
add
jae
pop
movsb
and
jnp
xchg
in
mov
xor
xchg
outsl
outsl
push
ljmp
jmp
sbb
outsl
addl
lods
iret
pop
sbbl
or
mov
cmp
push
call
inc
jl
mov
imul
and
cltd
push
leave
sbb
incb
loopne
std
inc
mov
dec
xlat
xchg
inc
inc
out
mov
decb
das
inc
ret
mov
loope
stos
add
mov
ja
mov
inc
data16
inc
imul
faddl
in
sbbb
push
and
inc
bound
ficompl
subl
out
cmp
inc
and
inc
push
call
jg
mov
andl
mov
push
mov
jle
aaa
out
ret
mov
bound
insb
sub
nop
pop
in
cltd
pushf
sbb
stos
pop
mov
js
mov
subl
ret
pop
pop
stc
xchg
dec
xchg
stos
ja
cs
fld
out
add
hlt
xchg
add
and
mov
push
mov
xchg
das
cli
ljmp
dec
pusha
out
dec
push
adcb
cmp
cmp
pop
cmp
loopne
mov
test
or
mov
lret
fisttps
xchg
call
ret
testb
adc
mov
arpl
push
jmp
or
adcb
or
jbe
fistpll
mov
aad
push
xchg
cmp
push
inc
mov
mov
clc
jecxz
ror
mov
rcll
pop
ja
pop
and
or
fwait
das
rorl
jne
adc
cmp
in
popf
mov
xchg
pop
lret
nop
add
and
orb
test
push
push
mov
or
xor
ret
lock
pop
inc
pop
cmpl
aaa
out
testb
imul
aam
and
mov
mov
rcl
and
cmpsl
scas
push
fdivrs
pop
pop
jle
cmp
sub
pop
out
pop
sti
inc
cmp
int3
jp
sub
je
dec
in
popa
testl
mov
les
ja
lock
pushf
js
or
xlat
lret
push
jp
add
aam
cmp
xchg
sub
add
or
bound
and
enter
bound
outsl
dec
jecxz
hlt
xchg
add
test
sub
inc
dec
cmc
xchg
xor
push
mov
sbb
repnz
mov
sub
stos
fmuls
inc
mov
inc
movsl
shrb
adc
cmp
lcall
daa
shll
sub
movsb
es
sub
lret
mov
add
push
xor
es
push
xor
lcall
and
insb
adc
push
lahf
pop
test
icebp
movsl
xchg
leave
loop
rcrl
cwtl
sbb
outsb
dec
add
ja
push
ds
push
pop
push
lods
push
pop
orl
sbb
lret
out
xor
xor
sub
fcoml
fiaddl
les
lods
sub
sahf
mov
lahf
sti
or
sub
cld
mov
mov
mov
daa
push
and
mov
out
sahf
addb
out
movsl
jmp
cmp
in
add
insl
mov
xor
or
insl
hlt
movsb
push
cmpsl
repnz
test
mov
lds
repnz
sub
sub
int
xchg
jmp
mov
jo
sti
cwtl
not
mov
ret
orb
je
cmp
out
dec
out
test
dec
fisttpll
adc
pop
out
loopne
cli
mov
add
mov
adc
push
into
das
mov
fildll
out
mov
xchg
jecxz
sub
jp
jns
roll
or
out
jno
push
in
push
push
stc
je
cmpsb
loop
fsubr
scas
inc
mov
rorb
pop
movsb
cmp
cmc
mov
push
aam
pop
mov
fndisi(8087
ja
notl
cmp
cmp
push
aas
push
sub
jp
out
add
lods
add
cld
dec
push
movsb
sbb
jae
and
mov
inc
xchg
lods
jg
lret
cltd
mov
xchg
cmp
push
popf
inc
fcompl
sbb
xchg
sub
mov
int3
imul
pop
jg
adc
insl
push
sub
sub
push
adc
add
divb
loope
xchg
cli
int3
xlat
mov
in
orl
xchg
ss
push
push
inc
pop
adc
push
in
popa
xor
inc
push
out
std
aaa
push
sub
inc
inc
sahf
stos
cli
out
cli
movsb
inc
fcom
dec
pop
mov
mov
sub
mov
jb
pop
aas
add
enter
push
decb
stc
or
mov
mov
inc
and
xchg
mov
insb
lea
jmp
mov
mov
pop
push
xchg
add
shr
cmpsl
add
mov
enter
call
push
lahf
movsl
cmp
xchg
mov
mov
mov
or
pop
dec
aaa
push
adc
addr16
and
mov
lods
in
adc
mov
jno
and
lods
xchg
inc
das
adc
ljmp
xor
std
mov
xlat
sti
fs
fists
xor
or
jmp
sub
inc
lcall
inc
popf
xorb
mov
or
out
int3
push
sub
test
xchg
dec
leave
xchg
cs
psrlq
and
mov
sbb
aam
movl
es
adc
fs
sbb
mov
and
inc
fcompl
mov
or
arpl
pop
out
pusha
and
pusha
push
xorl
fdiv
sub
enter
jae
push
fnstcw
pop
pop
cltd
xchg
fisubs
jno
jge
insl
cmpl
enter
xchg
cli
jns
and
pop
ja
mov
lret
xchg
frstor
sub
fnstcw
repnz
imul
sti
cmpsb
push
cli
xchg
sbbl
popf
sbb
push
fwait
xlat
int3
js
daa
mov
lcall
xor
sbb
sub
popf
mov
scas
andb
cmp
pop
dec
in
cli
jl
fistpll
add
lock
popf
outsl
lcall
xchg
aaa
loop
ja
lret
mov
movsl
fisubrs
sbb
movsl
out
cmp
repz
jb
lret
xchg
notl
xor
or
lea
sti
test
les
int
inc
ret
sub
mov
repnz
int
mov
or
clc
pop
in
push
pop
sub
push
les
jb
pop
xchg
add
dec
pop
jbe
xor
scas
popa
in
mov
test
pop
dec
jmp
jne
jno
add
cmpl
fcoml
popa
mov
mov
dec
mov
push
aaa
into
test
xor
adc
jg
or
jns
push
and
pusha
fisubrs
lods
ss
push
add
call
push
orl
movsl
mov
stc
push
adc
pop
test
imul
cmp
rol
cmpsl
inc
out
xchg
test
adc
aaa
adc
jmp
cs
je
shlb
or
movsl
mov
fs
cmp
decb
pop
hlt
inc
loopne
add
into
or
xchg
mov
xor
popa
sub
jmp
pushf
fldt
fnsave
and
adc
adcb
or
xchg
mov
cltd
xor
out
xchg
sub
xchg
pop
les
movsb
ljmp
sbb
imul
jns
shrb
mov
rclb
stc
loopne
sub
ret
cltd
mov
pop
mov
xor
add
loopne
cltd
imul
mov
shll
das
pusha
mull
inc
lea
add
mov
sub
xor
cltd
inc
mov
out
pop
pop
fidivl
sbb
pop
popf
mov
and
adc
lcall
xchg
sbb
dec
inc
andl
fcomi
inc
or
shlb
add
adc
or
aas
push
mov
popa
xlat
outsb
xchg
movb
cwtl
push
jo
int
mov
lcall
jno
add
xchg
adc
cmp
sti
out
incl
js
scas
loopne
or
sbb
bound
mov
fnsave
mov
xchg
sti
jle
xor
xor
scas
fcompl
cltd
sbb
mov
test
push
jno
sub
lods
pop
mov
fldcw
enter
adc
loop
cmpsl
sbb
sub
popf
sbb
mov
mov
imul
sbb
mov
xchg
and
jl
cwtl
outsl
inc
dec
icebp
push
inc
movsb
das
inc
fxch
shlb
fadds
insb
sub
stc
push
and
shll
loope
cmpsb
vorps
pop
xor
je
push
inc
cltd
pushf
adcl
into
loop
iret
lods
inc
add
xor
shll
mov
pop
addr16
fcoms
popl
pop
jb
xchg
loop,pn
cmp
and
mov
test
dec
dec
je
iret
lahf
push
pushf
repnz
je
mov
es
shll
in
xlat
push
inc
inc
repz
jne
xchg
rclb
cmpsb
test
lret
jmp
jmp
lcall
ljmp
xor
jae
mov
mov
pop
cmc
mov
es
scas
pusha
sti
fists
loop
sbb
cmp
jbe
out
test
outsb
add
stc
add
mov
pop
fwait
imul
jecxz
cli
clc
cmp
insb
sbb
fiadds
icebp
xchg
icebp
mov
fsubrl
jb
stos
mov
nop
outsl
inc
rcrl
push
cmpsb
fsub
cs
adc
loop
cs
adc
jmp
enter
rcr
je
mov
pop
insl
pop
js,pn
mov
or
add
dec
pop
and
mov
fildl
cwtl
in
xor
xor
pop
mov
and
decb
out
stos
xchg
lock
hlt
aas
mov
cmc
xchg
xchg
hlt
scas
inc
fiaddl
jl
int
shlb
repz
test
inc
fstpt
leave
pop
xlat
fcoml
outsl
mov
out
push
pop
pop
xchg
xchg
das
xlat
mov
adc
mov
add
orb
cld
adc
lret
mov
das
inc
fistps
xchg
lods
cmpl
sbb
sbb
lock
lds
pcmpgtb
ja
adc
repz
sub
pop
insl
push
xchg
or
addr16
ss
mov
movsb
daa
xchg
shll
or
fisubrl
xchg
pushf
xor
pop
cmc
cmc
push
pop
testb
add
and
or
mov
movsb
insl
add
add
push
adcl
mov
push
test
faddl
shrl
icebp
sub
push
into
pop
dec
in
int3
lock
sbb
cmp
leave
adc
push
jae
or
js
sub
jge
pusha
in
stos
shrb
mov
inc
test
xchg
imul
in
outsb
jb
fs
dec
insl
test
into
sub
in
stos
es
call
pop
pop
sbb
sub
jne
adc
adc
adc
dec
pop
push
mov
sub
xlat
imul
mov
mov
outsl
adc
jmp
pcmpeqb
xchg
aam
ds
sbb
mov
sbb
add
cmc
mov
movsl
dec
arpl
push
mov
mov
push
xchg
arpl
sbb
lea
add
push
jle
je
cmp
js
sbb
jns
aad
leave
insb
jno
ja
mov
loope
jecxz
fnstsw
rorl
test
pop
out
shlb
jbe
and
fldcw
jbe
leave
pop
std
adc
adc
pop
cmp
lret
jne
push
pop
dec
pop
mov
lea
popa
enter
fisttps
stos
gs
aas
test
xchg
sbb
jns
xchg
dec
add
sbb
cwtl
dec
jp
mov
mov
mov
xchg
cmp
push
js
xchg
pop
pop
aaa
ror
mov
ret
fidivl
push
mov
int3
loopne
push
and
sahf
gs
loop
xchg
jne
lds
add
xchg
mov
xchg
mov
lods
sbb
cli
dec
mov
or
aaa
mov
popf
in
xor
test
mov
cmpb
fadds
dec
ljmp
xchg
stc
cmp
xchg
lret
add
clc
lea
lods
inc
js
pop
repnz
lret
jp
and
fdivr
addb
jbe
int3
pop
xchg
fwait
pop
in
mov
jge
cmp
adc
lods
add
jno
cmp
sbb
xchg
mov
xchg
rcl
dec
movdqu
pop
out
fnstcw
movsl
cli
jbe
jmp
cmc
inc
adc
enter
jae
jge
add
sahf
nop
addr16
repz
test
add
cmpsb
mov
sub
scas
ficoms
movsl
stos
mov
in
clc
push
ret
sbb
inc
dec
div
pop
push
pop
aaa
push
xlat
iret
ss
les
cmpsb
test
push
mov
test
sub
loop
dec
lock
adc
sub
test
aaa
dec
jp
dec
lods
jo
movsb
pop
lcall
xchg
sbb
xchg
and
mov
xchg
hlt
xchg
test
stc
into
call
lea
sub
dec
push
cmp
clc
adc
sti
mov
inc
popf
pusha
or
pop
sub
scas
fidivl
push
loopnew
fprem1
hlt
xor
and
xchg
xchg
sub
call
in
sti
pop
out
or
fwait
mov
push
sub
jo
mov
jb
jg
loope
ret
xor
loop
stos
lock
imulb
leave
jge
das
jae
je
cld
outsb
fldt
add
mov
fnsave
pushf
sub
mov
pop
sbb
dec
outsb
ljmp
mov
test
aas
ret
pop
frstor
push
movsb
adc
cmp
mov
es
xchg
inc
popa
or
lods
in
out
loop
add
mov
adc
xchg
dec
pop
int
dec
ds
iret
fistl
mov
lcall
out
or
mov
mov
jae
sbb
lds
cmpsb
fs
fdiv
loop
lret
je
cmp
pusha
or
cld
lds
xchg
adc
add
sbb
xchg
test
sbb
negb
sub
jmp
and
adc
in
or
pop
cltd
and
lret
pop
or
pop
adc
rcr
jo
pop
sbb
inc
negb
inc
mov
lret
xchg
xchg
montmul
cmpsb
cmc
popa
xor
lods
adcb
or
inc
cmp
mov
push
push
xlat
xchg
testl
sub
xchg
cmpb
cmp
mov
ret
sub
jecxz
dec
stc
test
adc
dec
lret
clc
pop
stos
cmpb
mov
xchg
or
push
pop
adc
sbb
add
ds
and
pop
mov
mov
cmpsb
sbb
and
dec
mov
daa
xor
adc
mov
je
shrb
inc
stos
stos
mov
int3
leave
jmp
mov
hlt
mov
xor
xchg
shl
mov
fs
inc
xor
movsb
sub
imul
dec
pushf
fstpt
aas
jmp
mov
jo
jne
or
clc
push
mov
aad
das
cmp
add
scas
hlt
sahf
or
add
adc
dec
sti
adcb
push
test
repz
adc
xor
dec
inc
mov
imul
icebp
dec
inc
jb
sbb
dec
movsb
inc
jae
mov
notl
ljmp
jno
stos
fsubrp
inc
cli
pop
push
cmpsl
cmp
add
mov
mov
or
loop
ss
popa
sub
ret
sbb
dec
lahf
push
mov
daa
cld
dec
popa
sti
push
stos
mov
xlat
sub
pop
fbstp
sub
nop
jnp
pmulhuw
into
pop
in
add
insb
lds
jae
push
xchg
dec
movsl
rcrb
add
pop
sub
jg
in
inc
push
je
cmp
sarb
test
sbb
orb
je
ja
imul
test
sbb
inc
lods
das
add
aaa
sub
pusha
mov
mov
cmp
hlt
in
inc
sub
adc
and
je
shrb
push
mov
fcmovbe
sub
xchg
bound
shlb
pmulhuw
loopne
outsl
or
imul
sub
mov
mov
push
mov
mov
jns
das
test
fld
addr16
xchg
jnp
pop
clc
jp
ret
adc
pop
lcall
mov
dec
sub
pmaxub
adc
inc
adc
andb
mov
pop
push
xchg
cltd
inc
aam
stos
xor
add
pop
insb
mov
dec
mov
push
cld
pop
pop
dec
xchg
outsb
cmp
in
inc
lods
mov
mov
lret
sbb
in
inc
bound
cmp
das
int
ds
sbb
lods
xchg
add
jns
xor
fnstenv
insl
or
mov
scas
loope
lcall
and
add
sbbl
jmp
cmp
std
sbb
rcrl
xchg
ja
add
push
pop
push
shr
repz
jb
mov
sub
mov
add
adc
data16
out
pusha
je
xorb
lods
fimuls
lahf
cwtl
dec
xor
cwtl
mov
sti
jmp
adc
dec
xor
xor
aam
sbb
mov
lea
and
scas
mov
pop
outsb
sbbb
jl
xor
xchg
dec
add
xor
mov
adc
pop
jbe
sbb
push
das
in
xchg
popf
lea
sahf
shll
shll
cmp
xchg
fnstenv
into
cmp
sti
call
cmp
mov
adc
fiaddl
push
es
in
adc
insb
add
mov
mov
add
lahf
sub
mov
cmpsl
mov
push
shl
cs
aad
dec
in
scas
dec
jmp
jb
adc
or
stos
xchg
outsb
push
cwtl
fwait
ret
enter
or
or
jnp
sub
loop
xchg
jecxz
dec
sarb
pushf
xchg
fsubl
cs
jns
shlb
lds
mov
das
inc
int3
xor
int
in
bound
xchg
dec
xor
fnstcw
scas
cli
pop
adc
dec
jl
outsb
xchg
adc
lds
out
lahf
pop
cld
mov
jecxz
movl
ret
aam
pop
ret
je
and
test
cmpsb
jp
push
imul
sahf
out
shl
sbb
fsubs
inc
inc
xor
ljmp
test
cmpsb
ss
inc
dec
popf
jl
inc
fsub
jns
mov
aaa
cwtl
es
mov
sbb
rorl
mov
ret
out
mov
sahf
out
outsb
std
imul
fwait
mov
pop
cltd
test
jle
jae
xchg
jle
test
mov
mov
lea
pop
sbb
shll
movsb
lds
cmpb
sbb
mov
cmpsb
ljmp
je
js
push
jno
mov
xchg
dec
mov
dec
adc
cmpsb
loopne
mov
cmpsb
ja
insb
popf
mov
dec
ret
rcll
imul
pushf
cwtl
das
pop
mov
mov
sti
in
add
sbb
xchg
lods
add
aam
movsl
fldcw
mov
pop
or
and
es
cltd
and
jle
scas
outsl
fnstcw
sti
mov
cltd
int
scas
jno
out
and
mov
pop
push
push
xchg
jnp
test
or
push
lods
mov
mov
fmul
pop
imul
jns
sbb
adc
mov
aad
push
sub
scas
jno
push
cmp
inc
jge
sbb
push
test
test
lret
sub
shll
lret
sbb
cmpsb
imul
das
scas
pop
cltd
shlb
xor
inc
inc
cmpl
test
in
dec
lahf
pop
sub
and
lea
push
jbe
data16
mov
cmpsb
xchg
mov
dec
pop
imul
lods
pop
fs
mov
sti
dec
inc
data16
push
inc
jecxz
stos
and
mov
pop
pop
pop
mov
inc
push
mov
cmp
sti
repnz
add
daa
cmp
repnz
pop
or
cmpsl
movsl
out
jns
lahf
leave
aaa
mov
popf
std
out
cmpsl
mov
mov
lret
inc
hlt
std
fists
mov
xchg
enter
xlat
and
xor
inc
lret
mov
in
lods
nop
cli
fimull
jmp
les
jl,pn
or
lcall
dec
sub
cmp
push
jae
push
ficoml
bsr
out
xor
jmp
mov
mov
popf
inc
fcmove
ljmp
jns
dec
inc
inc
rcll
cmpsl
lret
mov
sub
or
mull
in
pop
testb
clc
sub
push
int3
imul
insl
ds
push
cld
sbb
jg
orl
shlb
xchg
jnp
int
lahf
inc
lods
inc
mov
xorl
repz
cwtl
pop
mov
insl
adc
mov
push
insl
jno
cmp
xchg
gs
loopne
testb
fsts
sbb
mov
ja
stos
cmp
xchg
mov
or
ftst
fisubl
sub
xor
insl
mov
pop
mov
movsb
xor
fs
pushf
pop
mov
nop
mov
push
fidivs
into
xor
cld
cmpsb
add
shll
xor
int3
fiadds
enter
xlat
jb
test
or
push
pop
cli
push
cmp
push
jo
adc
lds
xlat
rorb
pop
or
fnstenv
and
adc
jno
daa
popa
js
test
mov
sub
jns
pop
std
inc
pop
mov
lock
adc
bound
dec
adc
push
in
mov
insb
call
test
and
pusha
fildl
out
xchg
pop
push
stos
or
frstor
in
ret
repz
les
test
push
insl
add
lcall
insl
xchg
loope
mov
test
pop
fs
nop
cmp
das
inc
mov
xchg
std
mov
and
push
sbb
cmpsb
dec
in
rclb
insb
popf
pop
jp
pop
cli
in
in
dec
or
inc
jo,pt
movsl
dec
outsb
ds
jae
add
js
cmp
sahf
push
push
push
std
mov
jge
lret
scas
aam
push
xchg
sahf
rorb
inc
sti
push
mov
push
adc
aas
insl
fsubrp
xchg
ret
repz
or
aas
loope
test
lcall
mov
imul
xchg
dec
pop
sbb
rcrb
cwtl
cmpsl
jo
jo
push
aaa
push
or
inc
cmp
add
push
call
jbe
sbb
sbb
repnz
push
ja
dec
test
inc
stos
push
dec
mov
mov
test
rolb
mov
push
icebp
jp
xor
mov
xchg
pop
jae
push
xor
lahf
ja
dec
popa
stos
ret
ja
sbb
jmp
es
jo
std
jl
pop
hlt
daa
and
pusha
dec
jnp
movsl
inc
jmp
inc
popa
jg
hlt
in
lods
jno
inc
lods
and
adc
mov
jg
cmpsb
mov
std
cmp
adc
repz
mov
insl
mov
aaa
mov
addr16
dec
push
ret
lods
jmp
stos
idivl
loopne
icebp
aad
pop
jmp
xchg
push
mov
xchg
jmp
mov
popf
mov
jmp
inc
cmp
jl
lods
in
xchg
ds
jnp
negl
js
sub
or
call
mov
movb
mov
jmp
and
adc
or
xchg
lods
outsl
loope
and
pop
xchg
inc
pop
jp
ss
ljmp
xorb
cwtl
nop
call
cwtl
iret
mov
lcall
inc
test
xchg
mov
dec
adc
outsb
push
inc
fcomps
pcmpeqd
gs
xor
leave
out
push
add
scas
je
xor
adc
sti
jno
pop
ret
or
or
sbb
push
shlb
clc
inc
in
fnsave
call
mov
fcomps
xchg
rorb
stc
lret
lock
mov
mov
outsl
jo
xchg
mov
sbb
scas
int3
mov
arpl
loop
xor
mov
ss
jns
push
mov
ret
lods
mov
nop
arpl
addl
inc
sbb
les
sub
in
xchg
pop
shll
jl
sbb
rorb
ljmp
inc
pushf
and
ret
inc
add
or
cmp
mov
aaa
pop
test
mov
inc
out
push
in
testl
mov
clc
repnz
into
cmp
xor
rcll
mov
int
test
and
std
xchg
pop
inc
rcll
inc
xchg
mov
xchg
dec
cmp
mov
int3
fdivrl
add
stos
pop
dec
movsb
in
pop
sub
scas
out
movsl
xchg
je
les
mov
jo
cmpsb
sub
dec
movsl
lods
fwait
pusha
sbb
xchg
mov
inc
in
cs
cmpl
jne
pop
or
and
fnstenv
dec
in
scas
add
fistps
daa
push
sub
shl
xor
cmp
pop
push
out
fnstenv
xor
jp
and
mull
fs
loop
test
inc
xchg
fsubs
push
xchg
enter
movsb
lods
pop
fcmovu
gs
jb
insb
mov
sbb
int
lret
and
fidivrl
sti
adc
repz
sbb
jecxz
sbb
mov
dec
fdivrs
inc
add
lods
xlat
outsb
mov
push
call
movsl
ds
or
cmc
fistpl
lds
add
ret
scas
lahf
jbe
orl
mov
cs
popa
mov
lcall
loopne
bnd
ds
sbb
push
cmc
inc
xchg
iret
outsb
jl
out
xorl
hlt
push
pusha
stos
sahf
adc
ror
ss
aas
mov
mov
mov
stc
mov
arpl
xchg
and
dec
out
mov
lret
call
pop
cmp
int3
outsb
and
adc
fs
lods
movsl
out
scas
les
and
sub
dec
ljmp
enter
inc
xor
fcmovu
xchg
adc
fidivrl
and
cltd
je
mov
mov
icebp
lahf
sbb
leave
sahf
aaa
js
movsb
cmp
push
jo
imul
popa
aam
arpl
ljmp
in
lods
bnd
mov
sub
or
jmp
jecxz
mov
into
jb
add
jae
lcall
out
inc
add
cmp
lods
shlb
sarl
mov
arpl
ret
shrb
mov
mov
pop
mov
and
les
div
mov
adc
mov
ljmp
out
push
or
adc
pop
adc
mov
jne
mov
jns
sbb
leave
xchg
push
jmp
divl
jo
imul
or
or
lret
mov
xchg
mov
jecxz
pop
or
jl
subb
lahf
mov
xor
dec
imul
es
mov
insb
call
mov
sub
or
jnp
mov
inc
dec
mov
mov
int3
je
ds
push
imul
imul
or
pop
test
sub
cltd
xor
jne
dec
mov
xchg
lea
push
roll
xchg
and
jmp
lcall
xor
sarb
push
testb
and
sub
imul
popf
notb
sbb
mov
cmp
popf
stos
mov
addr16
pop
xchg
push
mov
add
rolb
clc
inc
or
bound
sbb
push
mov
inc
jo
rclb
pop
loope
mov
adc
ss
jno
mov
sbb
icebp
in
subl
lock
push
cwtl
dec
push
lret
ret
push
mov
mov
dec
dec
pop
add
hlt
stc
movsb
icebp
inc
and
mov
ret
and
and
je
sbb
sarb
stos
add
cmc
scas
add
inc
xchg
int3
fs
popa
push
popf
sahf
mov
dec
mov
dec
mov
xchg
xor
lock
mov
jb
jmp
inc
inc
push
ljmp
push
pop
cmpsl
sbb
cmp
pop
mov
pop
ljmp
xor
push
add
inc
and
xor
sub
mov
sub
imul
mov
pop
loop
ror
clc
fbstp
dec
inc
outsb
nop
gs
lods
std
cltd
test
jnp
cmp
cltd
je
pop
or
stos
sbb
jg
lds
pop
imul
inc
inc
sbb
loop
daa
cmp
jae
push
test
sahf
sbb
cmpsl
ret
mov
test
and
and
mov
movsl
sub
int3
mov
hlt
enter
pop
mov
mov
pop
add
dec
inc
mov
dec
xchg
mov
sbb
outsb
jg
xchg
xor
fisttps
stc
add
jl
or
outsb
sbb
pop
hlt
insb
sbb
jb
movsb
in
mov
jg
cmp
mov
xchg
sub
push
imul
and
push
mov
inc
inc
daa
mov
cltd
loope
jl
xor
lret
mov
insb
push
mov
cmp
cmp
mov
testl
pushf
stos
or
adc
jb
stos
aaa
and
in
decl
in
xchg
clc
scas
rclb
lea
add
cmpsb
jnp
lock
xor
mov
dec
push
les
push
add
push
in
lock
lret
lret
bound
jle
arpl
xchg
leave
mulps
inc
in
hlt
arpl
and
jne
loopne
in
and
mov
decb
jp
cmp
aam
icebp
pop
inc
sbb
jecxz
divl
xchg
shll
xchg
sub
jns
jp
pushf
jmp
cltd
jmp
ret
nop
inc
clc
std
in
lea
lods
test
xor
cmpsl
mov
jmp
rol
aaa
insb
fildll
jp
and
pop
mov
push
push
ret
pop
mov
lods
or
test
jae
ret
psrlw
notl
jne
push
mov
mov
aas
push
outsl
sbb
and
mov
stos
pop
adc
scas
pop
leave
in
std
ret
bound
sarb
mov
push
scas
outsl
mov
popf
xchg
cmpsl
gs
jne
jb
fldenv
and
inc
mov
dec
cltd
testb
push
xlat
pop
xchg
rcr
add
inc
push
iret
popf
pop
sbb
pop
ficomps
adc
std
ja
pop
jl
cmp
push
or
cmc
mov
jmp
into
sub
jbe
es
mov
enter
rcr
jp
test
sub
cld
cmp
loop
cmp
add
xchg
adc
dec
ja
adc
mov
das
sbb
mov
out
fldt
out
push
idivb
rcl
cmp
inc
jg
sub
lock
repnz
rcrl
imul
imul
sub
shl
dec
mov
inc
frstor
inc
xlat
inc
add
lret
data16
mov
fwait
dec
je
popl
fwait
out
stos
or
jnp
fs
dec
xor
mov
leave
jp
pop
cli
inc
adc
movsl
repnz
mov
xor
cmpsl
adc
stos
ljmp
int3
push
in
daa
xor
imul
ja
cmp
scas
push
and
hlt
xchg
or
adc
jge
mov
sub
ds
dec
or
mov
mov
pop
rorl
loope
hlt
dec
lods
push
push
popf
add
idivb
cmp
in
sbb
sub
repz
pop
pushf
push
cmp
adc
adc
fwait
jcxz
cmp
rorl
inc
aas
movsb
push
pop
shl
pop
adcb
popa
sbb
ljmp
xor
stc
push
jno
xchg
jnp
subb
shrl
insb
add
inc
fsubr
jnp
add
xchg
das
mov
xor
je
pop
pop
std
lea
mov
sti
insl
push
sub
cltd
xchg
movb
add
push
pop
or
inc
test
and
movsl
lret
push
mov
loopne
push
jmp
test
and
fmuls
mov
call
adc
pop
inc
ret
inc
xchg
sub
push
dec
aaa
xor
repz
bound
rdmsr
dec
nop
push
dec
push
sub
xchg
jmp
cmpsl
jp
pushf
pop
inc
mov
sbb
jb
xchg
fcom
lods
jge
or
jl
mov
jnp
sti
subl
or
sbb
mov
gs
xlat
inc
push
pop
mov
mov
jge
xchg
ret
sub
adc
fwait
enter
jne
jne
and
loope
vpunpckhqdq
aas
mov
xchg
and
dec
pushl
test
xchg
mov
xchg
sub
js
cltd
es
test
jmp
cs
dec
mov
insb
aad
divl
push
sub
ja
mov
int3
fmul
and
jecxz
sarb
jnp
cmp
push
pushf
arpl
rcpps
test
add
xor
cmp
xchg
xor
loop
xor
in
incl
lods
sub
pop
rolb
sub
pop
fwait
xor
mov
lods
popa
jg
lock
addr16
stc
nop
data16
inc
adc
pop
xor
outsb
mov
fsub
xor
out
jb
sub
mov
mov
inc
mov
push
mov
xor
pop
pop
xor
addr16
xchg
insl
jmp
lret
mov
stos
popf
lods
sbb
pop
pusha
clc
mov
adc
lods
jg
test
decl
push
push
fnstenv
insb
mov
int3
outsl
test
ficoml
and
mov
dec
jae
mov
sar
push
and
pop
push
cmpsl
mov
test
int
jle
shrb
jl
in
das
adc
bound
mov
jb
jb
fldt
shlb
mov
jbe
fsubl
adc
test
jbe
mov
stc
mov
fistps
mov
adc
fcompl
fdivp
mov
add
pop
mul
jo
push
out
cmp
mov
andb
push
mov
adc
cld
xchg
mov
rclb
inc
push
fildl
or
xor
data16
pop
xchg
xor
fwait
bound
in
cltd
or
jbe
movsl
adc
pop
xchg
xchg
mov
push
xchg
ret
stc
jbe
sbb
mov
pop
jmp
imul
inc
decl
or
pusha
xchg
sub
lods
xchg
cmp
sbb
loope
add
mov
inc
icebp
test
xchg
ss
jle
les
mov
jae
push
adc
fwait
cmpsl
jbe
sub
xchg
gs
jnp
xlat
jo
xchg
jbe
xchg
push
sub
or
jne
adc
cli
xor
xlat
fstps
mov
xchg
and
test
push
lods
lahf
pop
sbb
out
dec
inc
inc
sbb
cmpsl
push
push
int3
mov
stc
xor
fwait
movsb
sbb
in
inc
push
mov
push
jbe
pop
mov
test
xor
ds
xor
fnstsw
adc
in
cmpsl
dec
sti
pushf
and
xchg
loope
mov
fwait
add
int3
or
dec
or
mov
lea
jmp
push
cld
pop
jnp
mov
mov
mov
mov
cmp
iret
cmc
sbb
test
cmp
xchg
dec
out
inc
test
push
imul
adc
mov
push
ljmp
daa
cmp
inc
mov
mov
das
inc
and
inc
or
mov
das
icebp
lods
inc
and
and
sub
fstps
gs
inc
das
jno
shll
dec
mov
fdivrp
or
pop
adc
in
pushw
dec
scas
push
sub
aad
pop
nop
push
mov
int3
mov
cltd
fwait
les
or
and
lret
xchg
mov
out
dec
dec
xchg
push
mov
rcrb
xchg
jecxz
dec
rclb
push
psrad
movsb
adc
jmp
pop
xlat
cmp
push
add
sub
sarl
imul
adcl
mov
outsl
fisttpl
into
lods
outsl
pop
xor
mov
dec
rcl
jge
ret
jle
sbb
lea
pusha
mov
xchg
insl
lds
xlat
shrl
add
sbb
ret
jno
test
cs
dec
fucomip
dec
stc
push
sbbb
ss
inc
add
jae
xchg
fcompl
sbb
pop
cmp
lea
cli
pop
popa
repnz
inc
xor
mov
xor
pop
mov
pushf
xor
xchg
cmp
xor
out
cmp
adc
ficoml
repnz
repnz
insl
xchg
in
inc
dec
sahf
call
data16
int
aad
or
add
dec
fsubs
fistl
push
in
pop
and
mov
hlt
sbb
arpl
aad
mov
xchg
add
inc
in
hlt
sbb
adc
push
sub
lret
dec
xorl
cltd
stos
movsl
test
ss
dec
jp
stc
push
das
addr16
pop
in
sbb
lock
cmp
pop
adc
add
fldcw
ja
dec
mov
jne
sbb
mov
and
sbb
jnp
xor
fcompl
xor
push
jne
inc
js
inc
push
mov
fcmovu
cltd
lods
xchg
iret
mov
mov
jb
mov
jb
out
and
sub
divl
punpckldq
push
pop
testl
mov
dec
dec
cmp
mov
inc
in
mov
call
cltd
mov
leave
jns
cld
dec
or
inc
ret
add
repnz
popf
and
enter
fidivl
shl
mov
pop
push
xor
into
insb
pushf
sub
xchg
mov
shl
jbe
or
and
mov
enter
xor
cltd
int
inc
or
lret
out
in
jmp
inc
lock
adc
leave
cwtl
pushf
jno
ljmp
dec
adc
in
movsb
cltd
jbe
lods
push
lock
push
dec
push
inc
jmp
mov
xorb
outsb
sub
repnz
stos
cmp
jp
test
stc
inc
movsl
dec
int3
pop
lcall
jge
adc
mov
cmp
jl
and
test
sarb
ljmp
push
dec
or
insb
and
shll
xor
andb
xchg
sbb
push
jo
dec
fwait
xor
mov
aaa
les
inc
rcll
push
adc
mov
popa
cmp
imull
pop
mov
and
dec
loope
pop
lods
adc
scas
inc
call
mov
or
imul
ret
add
push
fstpl
lret
dec
idivl
mov
add
jl
or
and
cwtl
stos
add
jb
inc
jecxz
dec
and
and
pop
dec
idivb
js
ds
sbb
lea
fistps
xlat
mov
call
outsl
pushf
mov
push
and
ficomps
adc
pushf
mov
push
mov
addr16
add
imul
pop
xlat
jne
repz
scas
inc
outsl
dec
out
adc
xlat
in
inc
pop
fstp
or
cwtl
push
fwait
jae
fstps
lcall
mov
adc
pop
data16
mov
scas
loop
fsubrl
shl
test
pop
aaa
xor
add
sbb
mov
into
je
stc
jo
movsb
test
int3
mov
outsb
add
inc
daa
lock
je
push
dec
pop
aaa
mov
adcl
lcall
in
icebp
cmp
insb
and
repnz
lea
mov
mov
fdivrs
popa
and
mov
lods
js
sub
outsl
push
pop
pop
decb
repz
cmpsl
sub
outsb
jbe
jmp
mov
mov
xchg
mov
aad
mov
add
add
inc
loope
add
inc
sub
jne
dec
and
lds
xor
dec
mov
shrb
scas
mov
jb
cmp
into
sbb
push
sbb
adc
hlt
xchg
test
ja
cwtl
or
cli
pop
inc
sub
ret
mov
sbb
pop
jecxz
jle
inc
mov
ret
repz
xchg
xor
sarb
dec
xor
cmpsl
pop
in
std
or
xor
shrl
pop
scas
lods
ret
xlat
outsb
stc
mov
jno
mov
in
pop
stc
or
inc
mov
scas
jns
push
jbe
jle
push
icebp
xor
jmp
xor
sbb
mov
popf
ja
cmp
std
dec
and
icebp
push
pop
loope
leave
jno
mov
xchg
or
ret
sbb
cmpl
aas
push
cmpsl
in
into
sbb
loop
mov
inc
sbb
mov
or
cmpsl
jb
push
push
push
push
in
mov
popf
and
mov
les
je
mov
adc
mov
jle
pop
call
ret
out
pop
jns
test
scas
push
fiaddl
mov
test
fidivrl
inc
loope
mov
inc
push
in
arpl
xchg
aas
xchg
jl
push
pushf
shlb
sahf
lea
jmp
sub
insb
pop
push
or
fdiv
lret
das
push
shll
shll
dec
gs
loop
stc
add
inc
mov
adc
push
pop
in
push
aaa
std
aas
sbb
fnstenv
lcall
rep
aad
into
dec
dec
pop
push
fisttpl
dec
or
cmp
outsl
loopne
sub
int3
ja
negl
decb
loopne
and
xor
jge
push
scas
sbb
cmpsb
mov
jo
ljmp
or
jno
fnstcw
adc
repz
in
insl
test
jnp
insl
mov
dec
aad
in
sbb
dec
cmp
sbb
push
iret
movsb
cmp
in
mov
jl
add
out
or
loop
insl
mov
mov
movsl
les
call
cld
mov
gs
inc
mov
xchg
leave
jne
push
and
xchg
fldcw
lcall
add
inc
xchg
xchg
js
jbe
pushf
push
test
fistpl
inc
sbb
clc
add
movsb
mov
push
addr16
shl
decb
cmp
mov
je
sub
test
mov
push
sub
les
fiaddl
mov
cwtl
lret
or
cwtl
xor
shlb
xor
adc
lret
jp
mov
repz
xchg
sub
pushf
pop
jmp
pop
and
testl
sub
test
std
xchg
in
lahf
inc
xor
cld
loope
movsl
cmp
fcoms
and
mov
std
rolb
or
das
adc
push
fstpl
dec
popa
pushf
dec
fs
mov
jb
ret
mov
mov
stc
pop
mov
mov
and
cltd
repz
adc
test
iret
loop
mov
stos
imul
dec
enter
mov
mov
sti
push
call
cmp
outsl
aad
je
mov
sub
outsb
cmc
sbb
loop
repnz
fcoms
in
fnstsw
sbb
and
outsb
js
add
cmpb
lds
xchg
idivl
dec
repnz
adc
jns
notl
repz
dec
dec
scas
out
jl
enter
pusha
xlat
push
push
jo
jle
fcomps
mov
jg
pop
cmp
adc
std
push
adc
xchg
jb
sub
out
decl
hlt
ror
gs
jnp
add
dec
mov
fdivrl
dec
pop
lods
jo
sub
cmpsl
test
sbb
jmp
sub
mov
es
mov
test
jo
push
xor
stc
lock
mov
and
xchg
fwait
and
jg
out
cld
dec
push
mov
out
and
push
lret
or
incl
bound
out
mov
fmulp
and
add
push
push
jne
cmc
stos
in
mov
inc
movsl
inc
outsb
cltd
je
jle
push
js
xlat
mov
cltd
aad
lret
sbb
mov
pop
cmc
pop
popf
mov
dec
stos
and
dec
fldenv
or
push
push
push
add
int3
and
mov
clc
xchg
or
push
push
mov
inc
add
loope
in
and
mov
dec
and
jne
insb
shlb
push
xor
or
mov
iret
xchg
xchg
cmp
out
jb
outsb
mov
int
dec
jno
insl
mov
inc
int3
in
bound
leave
xchg
out
add
call
or
or
sarb
dec
jnp
out
popa
push
fstpl
sbb
or
dec
sbb
xchg
sub
sub
xor
jg
xchg
nop
cmpsl
sub
call
push
test
imul
add
mov
ss
mov
das
repnz
adc
js
dec
in
imul
sbb
mov
daa
cmp
js
int3
xor
imul
scas
aaa
adc
mov
ret
in
lods
fcoml
pusha
ss
sbb
icebp
lods
and
hlt
repz
out
mov
mov
outsb
sub
outsb
xor
outsb
hlt
out
popf
mov
xor
jle
sbbb
sbbl
cli
mov
and
dec
mov
cmp
pop
lret
sbbl
testl
mov
lock
ret
shl
stos
mov
mov
xor
iret
fildl
das
clc
subl
mov
rcrl
xor
xchg
cmp
ret
or
or
out
push
aas
imul
mov
sbbl
int
push
iret
call
pusha
notl
nop
add
sub
das
mov
lahf
fnstsw
adc
cmpsb
pop
repnz
or
xchg
stos
cmp
and
xor
ret
jmp
in
add
push
dec
xor
cmp
pop
pop
cmp
stos
add
pop
jmp
inc
fwait
cltd
mov
shll
jo
movsl
mov
cmpsl
ds
lea
mov
or
in
xor
push
and
dec
jecxz
fiadds
in
pop
insl
testl
leave
imul
and
mov
clc
mov
test
repz
mov
push
in
pusha
imul
lods
ljmp
jmp
lret
xchg
test
outsl
gs
divl
mov
ror
data16
inc
push
das
in
jne
imul
test
dec
rclb
add
cmp
repnz
add
xchg
pop
mov
ljmp
out
xor
fadd
fisttpll
mov
fwait
sub
ja
jl
in
mov
movsl
arpl
sbb
mov
lods
stc
sarb
adc
mov
ja
mov
dec
outsb
mov
sub
sahf
push
pop
out
ret
hlt
sub
jl
jp
inc
fcoml
xlat
mov
sub
push
movsb
add
cmpsl
daa
inc
in
add
data16
cld
or
lea
sub
xor
sub
cmc
mov
mov
xor
out
pop
lock
dec
mov
jo
push
pop
fnsaves
lret
cld
push
call
xchg
dec
fcomip
sarb
dec
loop
sti
mov
adc
push
or
aaa
xor
push
mov
mov
xor
dec
inc
xchg
popa
into
sbb
dec
jecxz
in
pushw
push
push
lds
inc
add
jmp
insb
mov
xor
daa
jo
xchg
push
xchg
pop
inc
or
arpl
sbb
popf
lods
or
mov
std
jg
mov
push
push
aas
call
push
stos
nop
xor
add
mov
sub
adc
jb
pop
cmc
scas
xor
stc
inc
insb
mov
popf
out
cmpsl
scas
cmpb
mov
fsubs
pop
inc
push
inc
dec
mov
xor
xor
rorl
popa
clc
adc
push
mov
addb
mov
rcr
fstpl
dec
add
gs
pushf
cs
dec
mov
icebp
pop
cltd
lea
rcl
sbbb
dec
jge
jecxz
and
call
xchg
sbb
sbb
sbb
call
loope
imul
into
in
stos
jbe
aam
dec
aam
icebp
push
hlt
loop
pop
xchg
pop
stos
subb
mov
movsl
xchg
fsubr
mov
jns
pop
cmpsl
cmpsb
xchg
pusha
leave
dec
dec
or
test
cmp
addb
sub
ret
push
add
or
dec
stc
insb
into
imul
negb
lret
mov
and
lods
dec
adc
jmp
imul
je
stc
test
enter
test
inc
xchg
fwait
mov
rcl
push
pop
repnz
jne
aaa
stos
daa
das
lret
stc
jp
or
enter
fstl
jns
ret
jns
jns
cmp
push
aas
adc
cwtl
and
test
inc
jmp
aam
jne
push
mov
lea
dec
fstpt
jmp
ds
arpl
iret
mov
sti
movsl
dec
sub
push
lret
jmp
cmp
push
mov
push
mov
push
insl
pop
cmp
cmpsb
pop
jmp
push
add
loope
out
inc
push
call
sub
aas
or
aaa
dec
dec
xchg
cmp
mov
and
add
jnp
clc
adc
mov
adc
cmc
insl
in
sbbl
leave
loope
outsl
loope
dec
bound
xchg
std
inc
not
stc
adc
aad
ret
pop
mov
mov
popf
out
std
shlb
dec
xchg
push
mov
decl
stos
sbb
test
popf
into
push
xchg
arpl
lods
sbb
fcmovb
xchg
outsl
shr
rorl
in
pop
and
mov
push
cmpsb
enter
mov
jmp
add
cmp
test
das
lds
mov
js
push
cmp
inc
dec
add
mov
dec
adc
mov
cmp
dec
fildll
pop
jb
adc
pop
jno
push
je
cmp
lcall
cltd
jb
adc
inc
mov
jl
rcr
sub
pushf
inc
pop
dec
insb
leave
int
ja
xchg
fldcw
jmp
adc
jl
popa
xor
repz
jg
and
sti
outsb
jle
dec
call
mov
add
movl
sti
xchg
test
inc
sbb
mov
cmp
mov
dec
pop
dec
jecxz
out
test
dec
outsl
dec
jmp
add
ljmp
or
or
shrl
cmpsb
lods
inc
inc
popa
mov
inc
out
lret
pop
pusha
in
pop
push
lret
mov
jecxz
out
rorb
in
adc
push
pop
in
stos
xchg
ja
push
cs
cltd
jg
pop
push
fmuls
incl
cs
jne
popl
mov
lods
pop
sahf
jbe
adc
mov
push
fcomps
insb
xchg
dec
cmpsl
rorl
xlat
dec
fwait
push
pop
ficoml
loope,pt
imul
outsl
jge
pop
sub
pop
push
sub
lds
push
mov
pushf
lea
pop
dec
in
mov
lret
fs
nop
inc
std
in
loopne
and
pushf
dec
mov
adc
adc
jbe
lock
mov
sbb
jl
xor
inc
push
ds
xchg
out
cs
push
cmp
subl
mov
jg
push
sub
dec
pop
jne
loopne
bound
cmp
int
cmpsl
sbb
outsb
inc
fadd
cmpsl
lea
mov
outsb
or
in
mov
cld
rcl
hlt
adc
mov
dec
lds
es
outsl
shlb
cwtl
stc
ds
sbb
cmp
test
clc
pop
frstor
mov
in
inc
int3
arpl
mov
sbb
or
movups
mov
fcmovnb
mov
mov
sub
adc
jne
andb
xlat
push
add
nop
ret
xor
inc
inc
nop
and
adc
out
mov
or
xor
movsl
out
pop
jne
jnp
aas
mov
and
not
ret
sub
movsb
mov
xlat
and
inc
jl
scas
jle
faddl
call
scas
pushf
in
jbe
sbb
sti
rcll
subb
cwtl
lock
ljmp
jmp
mov
xor
movups
and
dec
in
sbb
or
insb
add
inc
pop
mov
outsl
add
xchg
sbb
lea
scas
xor
shll
shr
adc
nop
xchg
pop
ror
jo
cmc
mov
mov
nop
daa
clc
leave
adc
rep
scas
push
jg
stos
add
lcall
shlb
inc
inc
inc
cmpsl
cmp
mov
mov
repz
adc
adc
inc
jle
rcrb
xchg
shlb
cmpsb
stc
frstor
movsb
test
push
lcall
mov
std
xor
add
outsb
add
xchg
loope
imul
test
xchg
sbb
js
sti
popf
lods
fisubrs
sbb
sbb
popf
adc
add
xorl
mov
jo
test
push
out
testw
mov
push
push
ficompl
cmp
cmpsl
mov
scas
jmp
cmp
push
cli
or
hlt
push
jle
pushf
scas
jae
or
fucomi
fldcw
jge
inc
scas
lcall
loope
addr16
xchg
mov
mov
push
fwait
and
jmp
cmp
or
or
inc
pop
xchg
add
pusha
push
int3
cmpsl
data16
repz
enter
cmp
in
cmp
das
call
adc
dec
aad
push
xchg
std
dec
adc
cli
add
cmp
lea
test
cmp
or
cld
mov
push
das
pop
mov
add
es
test
push
out
fs
je
xlat
repz
imul
negl
cmpsl
nop
ficoms
rclb
lcall
scas
lock
shrb
xlat
cwtl
dec
lea
cmp
rorl
loopne
ret
sub
das
jae
int
adcb
sbb
arpl
lock
jge
add
hlt
jb
sbb
ds
add
xorb
leave
sbb
nop
push
pop
aaa
ret
mov
ja
stos
scas
rcl
jns
mov
sahf
pushl
frstor
jge
mov
xor
bound
aad
sub
add
xor
jp
rcl
imul
lock
mov
loope
imul
adc
mov
fbld
or
inc
cmpsl
sub
sbb
fwait
mov
mov
pushf
xchg
mov
mov
jl
jno
fcmovne
cmp
aam
shl
mov
out
mov
adcb
lret
inc
ja
push
popa
and
cli
xor
adc
hlt
mov
jecxz
sti
sbb
andl
imul
mov
lea
dec
pop
jo
adc
shlb
es
loopne
leave
mov
add
pop
cmpsb
into
mov
outsb
mov
sbb
jmp
xor
mov
or
push
push
push
inc
lods
jbe
xchg
sub
test
mov
std
aas
rorb
dec
sbb
adc
push
lret
in
shll
cmp
push
mov
mov
popl
mov
fdivl
cmp
aam
into
nop
pop
xchg
shlb
pop
shlb
add
loop
add
cmp
push
mov
mov
incb
and
fldl
test
inc
icebp
inc
and
push
and
jl
pop
jmp
pop
test
dec
stc
pop
mov
rorl
pop
pop
xor
sub
cli
scas
mov
call
pop
adc
inc
xchg
loop
je
mov
repz
xor
xchg
sbb
hlt
mov
mov
aad
insl
sub
pop
mov
cmp
pop
mov
popa
mov
lods
push
test
sbb
sub
pop
jmp
lea
jb
cld
mov
ficompl
test
cmpsl
jne
jns
jge
fsubr
test
lret
out
inc
ficomps
cmpsb
add
jge
gs
jae
inc
pop
and
loopne
inc
adc
adc
movsl
add
fcompl
insl
subb
stos
dec
shll
outsb
in
dec
push
dec
bound
fsubs
lret
or
fstps
dec
mov
insb
sub
pop
xchg
fsubl
shr
or
mov
shll
test
icebp
jmp
fcmovne
rcrl
mov
and
daa
sub
or
insl
xchg
xor
sbb
or
push
or
lret
rcrl
jns
arpl
dec
mov
roll
mov
mov
sub
pavgb
bound
imul
pop
enter
jg
shr
mov
enter
loopne
mov
int3
cmp
repnz
pusha
aas
add
lods
xchg
shr
sbbl
ljmp
leave
mov
or
mov
in
jg
sbb
dec
sarl
cltd
jns
iret
mov
shlb
ret
push
leave
adc
fimull
adc
fcomps
xor
adc
adc
lcall
hlt
push
add
fwait
mov
sbbb
pop
pop
mov
and
es
shrl
sub
add
mov
lea
inc
sbb
pop
fwait
mov
movsb
pop
mov
dec
pop
test
and
mov
outsb
addr16
data16
stc
mov
test
sbb
inc
lea
testl
mov
pop
rorl
sarl
insl
es
loope
and
add
push
push
fwait
inc
pushf
inc
sbb
sub
aas
mov
pop
mov
dec
add
test
mov
in
stos
imul
rcrb
push
clc
jbe
les
std
addl
aam
addr16
mov
inc
dec
repnz
scas
fsubrp
mov
cltd
mulb
sbb
jmp
in
push
pop
sti
mov
fiaddl
push
scas
pop
outsl
loop
inc
mov
mov
fwait
pop
lds
mov
jbe
mov
dec
sahf
mov
mov
fisttpl
movsl
in
adc
fimull
jp,pt
sbb
xor
sbb
dec
and
xchg
outsb
test
scas
xor
out
fstps
xor
fcomip
cmp
arpl
mov
mov
sub
sub
cmp
inc
add
ja
xlat
je
xchg
stos
lret
and
punpckhdq
clc
push
in
xchg
pop
mov
pop
iret
cmp
or
xor
movsb
out
fistpl
aad
or
clc
xor
movsl
mov
dec
or
sub
fs
mov
bound
or
mov
cmp
sbbb
push
sub
sub
imul
mov
push
or
xchg
xor
sbb
icebp
inc
mov
popf
push
call
mov
int
jo
mov
loope
in
pop
jnp
cs
inc
stos
jmp
loop
rcr
and
imul
out
sahf
iret
loope
xchg
lret
or
and
inc
lahf
std
push
ljmp
mov
das
ficoms
jl
inc
push
mov
xchg
jmp
test
testb
dec
sbb
mov
xor
test
orl
js
inc
cmp
ss
or
stos
adc
lret
or
stos
mov
mov
mov
lcall
xchg
dec
pop
adc
or
ret
xchg
xchg
jg
cmp
popf
testl
testl
test
pushf
mov
fdivl
shlb
sarl
inc
adc
out
ss
idivb
push
in
inc
ret
pop
cmp
dec
rorb
xor
imul
sub
push
xor
and
mov
push
cld
or
js
xor
pop
icebp
not
mov
push
clc
inc
push
mov
sti
mov
mov
pop
dec
sub
stos
cmc
dec
push
pop
imul
ss
mov
movsl
push
xchg
stc
nop
push
call
out
add
fwait
jb
addr16
fadds
cli
pop
sbb
xor
jnp
mov
pop
cmp
daa
jecxz
jecxz
push
mov
mov
mov
ds
jecxz
mov
mov
nop
inc
ljmp
sbb
sarb
cltd
test
xor
out
mov
cmp
cmpb
imul
dec
lret
inc
loope
ja
and
push
pop
push
mov
inc
push
lahf
leave
and
mov
sbb
xchg
push
rclb
testb
cli
rcrb
sbb
mov
fsubr
sub
pushl
xor
fildl
je
cmp
lea
repz
adc
mul
jb
jle
cmp
out
sbb
ss
mov
scas
sub
xchg
add
pop
xor
sub
mov
inc
scas
aam
outsl
mov
fsubs
insb
shrl
pop
jbe
mov
mov
mov
add
xlat
mov
sahf
fstl
inc
cmp
jb
inc
out
dec
sbb
js
imul
mov
push
xchg
sub
shll
incl
mov
pop
in
dec
repnz
fnstcw
aam
xor
into
test
in
lds
dec
pop
test
mov
mov
or
test
jl
aas
push
pop
cs
pop
sub
inc
fidivrl
lods
outsl
and
push
aam
hlt
pop
insb
pusha
cmp
inc
cmp
and
push
mov
jo
icebp
mov
push
xchg
add
mov
mov
inc
mov
cmp
sbb
fmuls
fbld
vpandn
dec
pop
dec
ret
lret
inc
jcxz
sub
xchg
movsl
xchg
rcl
mov
icebp
loope
push
ljmp
pusha
fcmovnb
jb
pop
in
sbb
sahf
xor
cmp
shll
mov
xor
leave
inc
addr16
out
mov
sbb
pop
xchg
or
push
movsl
subb
in
test
les
cwtl
jne
inc
fucomp
inc
xchg
inc
bound
call
bnd
xchg
adc
fs
push
jno
f2xm1
stc
adc
and
pop
ja
ds
sbb
adc
pop
cmp
sbb
xor
dec
sbb
imul
mov
out
addr16
push
sub
or
jno
fsubrp
int3
jg
jbe
adcb
push
insb
jmp
add
aaa
add
xchg
loopne
fdivrs
adc
push
pushf
inc
push
cmp
xor
in
inc
adc
call
lods
je
add
xchg
cmp
push
jecxz
dec
push
andb
outsl
jmp
mov
inc
sub
orw
dec
loopne
mov
fcomps
rol
and
stc
adc
xor
pop
dec
push
pop
roll
sbb
lcall
and
mov
inc
jp
out
test
cmpsb
or
cs
add
dec
mov
test
faddl
xor
in
je
inc
xor
hlt
mov
dec
mov
xchg
add
stos
jne
sti
mov
pop
aaa
inc
pop
stc
outsb
xlat
jmp
out
cmpsb
lock
lods
push
ljmp
cmp
aam
lods
sbb
cwtl
test
sahf
or
in
js
jbe
mov
repnz
sahf
mov
sbbl
jo
dec
xchg
cmpsl
lcall
mov
cld
xadd
and
adc
mov
ja
add
out
lret
dec
or
inc
inc
movsl
loopne
xor
push
add
jae
nop
pop
lock
stc
pop
cld
arpl
mov
hlt
cwtl
shlb
jns
incl
xor
adc
mov
jmp
mov
jl
test
mov
lods
sti
push
pop
mov
in
bound
sbb
mov
cmc
or
inc
mov
mov
add
call
fcmovbe
aas
dec
dec
fwait
icebp
aaa
idivl
mov
jp
add
jns
je
leave
push
cmp
xchg
adc
lods
ret
sbb
pushf
push
and
bound
je
sahf
adc
fidivrs
pop
sbb
nop
js
mov
mov
sbb
push
aas
aam
cmp
mov
add
pushf
in
push
call
ret
inc
inc
mov
cmp
dec
push
imul
fidivs
loop
inc
pusha
scas
pop
jb
jns
scas
xor
dec
or
pop
push
push
mov
clc
jge
and
pop
scas
loope
lock
sub
rcl
fnstenv
bnd
stos
cmpsl
xchg
dec
adc
mov
adc
and
mov
push
dec
pop
adc
orb
and
aas
repz
mov
xor
inc
add
jbe
sarl
daa
inc
out
dec
dec
iret
ljmp
add
movl
bound
into
outsb
in
xor
xorb
jae
fsubs
jecxz
stos
dec
sbb
divl
repz
xchg
fnsave
xchg
adc
lret
mov
sbb
scas
fbstp
push
sbb
or
cwtl
arpl
mov
jno
pop
xchg
adc
cltd
push
mov
in
push
mov
ss
ret
daa
sub
pushf
clc
or
mov
sahf
stos
fmuls
std
mov
imul
sub
sti
mov
add
dec
fists
andl
push
push
stos
xchg
mov
repz
lret
jne
jnp
insb
test
push
ret
dec
loop
mov
cmpsb
rcrl
or
fdivl
scas
cmpsb
jns
push
cli
stos
test
iret
data16
andb
repz
sbb
push
add
push
mov
mov
movsl
mov
stos
jl
lea
sti
mov
xchg
pop
lea
cmpsl
sbb
mov
mov
mov
dec
mov
lcall
mov
mov
insl
sbb
movsb
mov
jp,pn
outsl
push
flds
lods
movsb
mov
incl
and
dec
call
aas
xchg
pop
cmc
shll
aad
nop
pop
sub
xchg
sub
pop
push
int3
aaa
imul
fdivrl
movsb
sbb
mov
out
inc
pusha
decl
std
cli
push
imul
xor
mov
cmp
cmp
or
cs
rcr
jns
ret
push
fistpll
jb
loopne
test
sbb
inc
ja
std
repz
out
xchg
jae
inc
xchg
out
or
xchg
scas
push
imul
test
ret
dec
fdivrs
mov
cld
xchg
les
popf
aas
or
adcb
xor
outsl
enter
pop
inc
xchg
loopne
insb
and
jns
repnz
std
ret
pop
fcompl
xchg
pop
dec
mov
adcl
stc
mov
jbe
lret
int
and
mov
mov
mov
mov
addl
clc
sbb
ss
lret
inc
sahf
sets
scas
lea
add
jmp
xchg
loop
pop
enter
sbb
addr16
data16
lods
cmp
mov
pop
scas
arpl
adc
les
adc
add
shl
mov
pop
mov
test
cld
cmp
scas
call
or
add
sub
mov
js
aas
into
int
testb
fs
pop
repnz
add
inc
push
out
imul
and
xor
pop
cmpsb
push
insb
imull
stc
and
mov
shrb
nop
sbb
pop
dec
loop
pop
mov
or
scas
insl
out
or
fcoms
test
andl
add
jge
div
ds
lcall
add
add
rorb
outsl
rorl
push
fcomp
jnp
dec
inc
lcall
sarb
push
call
call
mov
test
pop
inc
cmp
xchg
je
xlat
mov
push
pusha
dec
adcb
loopne
add
es
cmp
or
outsb
add
xor
or
mov
pop
xchg
inc
push
nop
inc
mov
jge
fs
and
lcall
adc
adc
test
into
mov
ljmp
inc
xor
lretw
push
push
cmpsl
or
or
pushaw
xor
rolb
sbbb
jecxz
jno
test
xchg
sub
fwait
pop
add
mov
loope
aaa
pushf
push
sub
scas
mov
les
adc
lock
push
mov
lret
sbb
clc
outsl
pop
xchg
add
testb
hlt
jg
stc
loopne
add
mov
into
xor
xchg
in
xor
mov
mov
cltd
xchg
negl
and
jb
sub
mov
notl
add
and
mov
and
dec
cli
xchg
jg
insb
or
fisubl
icebp
inc
lock
je
fbld
push
xchg
push
inc
cmpb
mov
pop
cmpsb
cmp
lea
or
push
jg
and
imul
scas
test
sub
dec
jb
push
rcl
adc
mov
mov
rolb
mov
jns
outsl
out
add
mov
sbb
jo
mov
pushf
out
imul
addl
push
popf
fs
pusha
and
sbb
cwtl
xlat
ss
pop
cmp
pop
push
cmpsl
add
lds
or
xchg
push
movl
dec
mov
inc
push
fildll
adc
icebp
shll
iret
orb
xor
cmpsl
cmp
xchg
and
insb
nop
ds
mov
cmp
fcomps
xor
aad
in
loop
dec
xchg
mov
dec
imul
and
or
sbb
shrl
fmull
in
js
push
jnp
adc
ljmp
jns
cmp
mov
push
adc
dec
mov
fcoml
push
adc
hlt
lahf
bound
inc
adcl
cmp
mov
das
out
ret
cmp
cltd
xchg
mov
sahf
hlt
inc
nop
insl
in
aad
in
mov
mov
out
popf
push
test
data16
sbb
jae
cmc
mov
data16
rcr
lods
dec
data16
adc
or
mov
adc
mov
lods
ljmp
nop
lahf
adc
cwtl
out
jg
lock
mov
icebp
mov
jmp
mov
mov
sub
xor
gs
dec
mov
mov
push
jmp
sbb
pop
outsl
sub
or
mov
dec
les
sbb
push
or
lock
and
out
cmpsl
test
fistpll
into
pop
hlt
mov
gs
xchg
cmp
lret
cltd
mov
mov
mov
scas
mov
pop
bound
sbb
lds
add
fs
popa
push
sbb
sbbl
ret
lret
xor
dec
pushf
xchg
mov
or
xchg
inc
push
mov
pop
add
dec
and
mull
std
scas
jg
insl
jo
inc
imul
xor
lcall
out
xor
imul
pushf
pop
stc
sbb
xor
orl
jb
sahf
sbbb
mov
or
or
or
pop
jecxz
into
scas
sub
sub
pop
mov
xchg
mov
out
and
sub
dec
movd
mov
xor
fnsave
pop
dec
jmp
sti
fwait
jmp
fsts
cltd
push
jnp
mov
mov
fildll
pop
sarl
inc
lret
outsl
leave
sarb
mov
out
mov
sub
dec
push
leave
fdivs
xchg
sub
inc
push
sub
out
insb
xchg
sbb
rcrb
out
add
rcl
cmp
arpl
movsl
xchg
imul
fld
push
jmp
popa
mov
xchg
fsub
dec
rcrl
mov
and
jp
daa
movsw
fwait
sti
fwait
xchg
lods
dec
inc
jbe
dec
test
inc
enter
icebp
or
inc
inc
adc
mov
icebp
adc
fbstp
add
fbld
adc
push
mov
xchg
lahf
fsts
rcrl
adc
pop
cltd
test
jmp
adcl
pop
test
ljmp
fstpl
add
or
xor
mov
ret
adc
mov
mov
inc
pop
push
xchg
mov
inc
mov
inc
addr16
or
push
add
lret
xor
fwait
cltd
push
repnz
sbb
jns
imul
imul
push
inc
jbe
push
test
push
fs
call
idiv
je
movsl
jne
stos
out
loopne
xchg
jbe
lahf
and
es
and
mov
add
sbb
jmp
xorb
mov
lahf
pop
mov
mov
or
mov
cmpsl
adc
mov
imul
sti
mov
fwait
xor
adc
daa
cmp
pop
scas
stc
push
mov
fmuls
data16
mov
inc
sbbb
jmp
mov
lret
fs
out
loopne
mov
push
dec
mov
movsb
insl
mov
scas
inc
loop
iret
pop
inc
or
jo
fmull
pop
scas
or
mov
lahf
stos
stos
insl
andb
pop
clc
orb
mov
jnp
and
xchg
subl
scas
mov
xor
scas
ss
sar
stc
push
push
cmp
sbb
lret
pop
jb
mov
cmp
sub
inc
and
mov
enter
pop
outsb
mov
lods
cmpsb
mov
ficoml
test
and
jne
add
xor
addr16
xchg
repnz
sbb
loop
jecxz
sbb
rcl
cmp
jle
loope
int3
sub
aad
adc
mov
vpsubb
lret
dec
aas
inc
cmc
in
data16
sbb
pop
test
sbb
add
daa
cltd
cmp
enter
stc
insl
pop
clc
fsubrp
jb
add
lods
and
ss
sbb
and
mov
xor
dec
and
divb
mov
xchg
js
les
lds
fdiv
jge
pop
xor
jmp
addb
dec
inc
lds
inc
add
into
pop
sbb
dec
inc
mov
cmpxchg
mov
inc
jnp
adc
mov
jb
jp
loope
push
and
xor
or
sub
sahf
sub
jg
push
add
sub
mov
mov
sub
aam
push
orl
int3
int
cmc
in
jge
sub
sub
push
mov
leave
iret
xchg
inc
fiaddl
shlb
in
mov
push
inc
negb
adc
inc
into
and
adc
fldt
insb
mov
stc
add
fcomps
add
push
inc
leave
and
lret
addl
mov
arpl
aam
out
sub
lods
sub
ret
vpmuludq
bound
pop
jae
lock
imul
testb
fnstenv
mov
mov
inc
or
or
inc
sbb
mov
xchg
and
inc
pop
in
mov
out
push
negb
fsubp
cmp
loopne
popf
stc
jp
mov
sbb
mov
push
out
jp
in
mov
mov
pop
fnstenv
add
mov
enter
insb
inc
sbbl
out
lret
and
sub
pop
adc
inc
sbb
sbb
lea
push
in
inc
arpl
xchg
push
scas
out
imul
mov
xchg
xor
mov
dec
std
out
and
rolb
bswap
mov
into
dec
lds
outsb
pop
repnz
ret
repz
sbb
mov
mov
stc
test
dec
dec
inc
and
jmp
loop
pushf
mov
dec
bnd
in
push
add
popa
xchg
and
sub
leave
add
out
ljmp
enter
stos
mov
xor
sti
cli
push
clc
mov
dec
std
shrl
aad
dec
dec
fs
jno
enter
popf
push
adc
pop
sahf
xor
fucomp
add
inc
stos
cmp
lods
faddl
push
jbe
fdivrl
pop
xchg
and
sub
movsb
sbb
hlt
insl
in
dec
testb
into
pushl
mov
sbb
shlb
xchg
adc
les
decl
mov
push
cmpsl
mov
lea
sub
cmp
scas
fiaddl
pop
xchg
loop
ret
inc
hlt
pop
cmc
jl
test
pop
add
lret
loop
ss
in
or
add
loopne
dec
push
js
sbb
popf
pushf
aaa
mov
pop
lahf
ds
js
idivl
mov
sahf
and
push
out
xchg
xlat
jl
and
mov
mov
rcl
rcr
addr16
ja
jmp
mov
fsubl
or
fucompp
loop
lods
testb
xchg
imul
aad
xchg
lcall
mov
pushw
mov
add
adc
mov
xor
test
jbe
xchg
arpl
jp
stc
test
sbb
ss
das
lret
mov
iret
push
fstl
jmp
scas
in
fcoml
neg
jbe
pop
fmulp
mov
mov
addr16
mov
js
xchg
jge
jg
imul
xor
lods
lock
inc
mov
leave
fadds
or
ja
ja
sti
cwtl
out
mov
scas
xor
or
xchg
lahf
mov
or
dec
push
add
mov
enter
aam
dec
inc
out
mov
inc
sbb
sbb
pop
sub
cs
sbb
icebp
lahf
inc
sti
ficoml
in
test
jp
or
dec
push
ljmp
mov
out
stos
cli
xchg
enter
cld
push
cltd
sub
sub
inc
inc
pop
out
sbb
aaa
jmp
cltd
sub
lods
sub
fnstcw
or
fldt
loope
rcrl
jnp
add
sbb
sbb
pop
gs
imul
mov
dec
jbe
jl
imul
sub
movsb
cmp
ljmp
xchg
andl
lods
andl
fcomp
jg
sar
out
fucompp
push
push
pop
jb
or
jns
sub
mov
add
mov
cltd
sahf
dec
cwtl
xor
jmp
in
add
jne
popa
push
das
mov
stos
cltd
lock
mov
xchg
out
in
out
loopne
mov
stos
insl
shlb
movsb
cmp
das
ret
fdivs
loop
rcrb
add
inc
sbb
dec
jp
sbb
cmp
cld
testl
icebp
js
out
jecxz
dec
dec
js
dec
and
decb
insl
scas
out
andb
pop
or
jbe
and
or
push
mov
bound
into
fidivrs
mov
cmp
dec
dec
lcall
inc
jmp
addr16
jecxz
inc
xlat
xchg
xchg
cwtl
repnz
je
dec
cmpb
mov
pop
mov
jp
das
xchg
pop
outsb
in
sub
outsl
ds
mov
sub
push
sarl
push
js
inc
and
lds
out
add
int
adc
push
mov
inc
push
mov
sbb
imul
add
icebp
pop
ljmp
push
sub
inc
stos
test
rcrb
or
enter
push
xchg
jnp
push
sbbl
inc
pop
cmp
jl
push
insb
icebp
jno
inc
imul
in
jmp
cmp
stc
out
in
jno
out
xchg
adc
lret
iret
sbb
pop
fstpt
push
push
rcrl
iret
popw
stos
adc
daa
sub
fcomi
jns
push
adc
jns
shll
add
test
lahf
imull
enter
sbb
mov
std
cltd
cmp
xor
mov
add
nop
into
sbb
cmp
add
mov
push
ficompl
xor
cmpsb
xchg
mov
out
les
loop
inc
pop
cs
dec
jo
pop
mov
scas
sbb
jle
leave
sub
dec
and
push
xlat
lea
and
ret
addr16
mov
mov
cmp
add
mov
sahf
mov
cmpsb
cmp
add
les
popa
popf
sbb
jae
ret
and
ss
mov
pop
ror
loope
aaa
fisttps
sub
xchg
sub
les
mov
jno
mov
xchg
mov
ficompl
inc
nop
ljmp
sbb
sbb
out
xlat
fwait
xchg
out
ss
jle
jne
push
inc
xchg
in
clc
dec
cwtl
fnstsw
cmp
lods
fdivl
pop
cmp
faddl
pop
imul
mov
add
idivb
pop
adcl
or
sbb
xor
repnz
inc
pop
xor
sbb
sahf
fldl
push
pop
pop
adc
mov
adc
andl
xchg
ja
int3
into
jo
fiaddl
push
add
popf
repz
and
jmp
out
mov
sub
jbe
js
jge
es
mov
mov
cmp
push
aad
or
pop
jbe
ss
addr16
and
or
aas
xlat
mov
push
movsl
pop
aad
push
test
pop
movsb
movsl
movsl
cmp
aam
mov
push
icebp
adc
jge
shrb
dec
dec
pop
in
jmp
push
xchg
pop
dec
mov
mov
add
sbb
movsb
aam
inc
les
dec
fdivs
sahf
fcmovb
cld
mov
dec
imul
inc
dec
fs
pop
testl
ficomps
cmp
pop
out
mov
pop
ret
inc
sub
push
out
push
shll
addr16
cmpl
aaa
ficoml
xor
mov
aam
xlat
hlt
add
negl
addr16
cmpsb
mov
arpl
das
xorl
pop
jno
rcrb
in
in
inc
jb
sub
pop
dec
scas
adcb
fbstp
mov
sahf
fmull
inc
mov
enter
or
mov
pop
or
out
out
sbbb
jbe
sub
and
fdivrl
pop
push
and
imul
pushf
or
outsl
out
les
mov
test
add
test
aaa
add
shr
je
add
int
or
orl
mov
pop
inc
inc
lods
fwait
popf
loopne
or
mov
aas
xchg
mov
mov
xchg
xchg
pop
pop
push
mov
mov
inc
ds
xor
xchg
daa
leave
stos
hlt
add
cmp
ret
dec
mov
push
rep
and
ficoml
in
adc
xlat
cmp
and
popa
pop
xor
ljmp
jnp
inc
sub
popf
jae
sbb
mov
mov
int3
jge
pop
push
jecxz
xchg
clc
insl
push
scas
movsb
nop
out
shrl
clc
pop
test
jbe
mov
inc
sub
mov
cmovno
and
ja
fildll
cmpsb
mov
outsb
dec
arpl
sbb
adc
fcmove
and
stos
push
pop
call
bound
outsl
daa
xor
sub
inc
pop
jecxz
add
jecxz
ja
ss
rcrl
movsb
jo
push
lcall
push
je
in
inc
call
add
mov
fimuls
jnp
in
div
mov
into
int
adc
push
adc
or
xchg
dec
cmpsl
leave
mov
xlat
dec
jecxz
inc
setb
pushf
fimuls
or
mov
xor
push
sub
ret
add
xor
adcb
jno
mov
jb
lret
pop
ja
pop
cmp
add
pop
and
push
test
lds
cmpsb
xchg
test
cmp
mov
cmp
mov
sub
inc
xchg
andl
je
mov
repnz
cmp
dec
inc
or
test
ja
xor
pop
leave
test
adc
xor
fwait
xor
adc
xor
and
addb
or
push
dec
fnstsw
dec
int
or
xchg
pushf
xchg
push
dec
popf
cmpsl
decb
movsl
mov
ret
hlt
or
arpl
lds
kxnorw
in
xchg
or
nop
push
mov
add
push
pop
inc
sub
add
inc
and
push
out
add
pop
dec
pushf
dec
mov
and
call
push
pop
and
and
sbb
cmp
pop
xor
stc
cwtl
hlt
in
dec
or
rolb
cmpsl
jno
push
cmp
xchg
xchg
jecxz
mov
xor
nop
outsl
aam
mov
mov
data16
fldl
test
fadd
orl
and
sahf
cli
aad
andl
ret
and
inc
pushf
mov
hlt
nop
jae
jne
mov
test
mov
add
mov
into
mov
inc
adc
out
cmpb
dec
cs
cmp
adc
push
mov
add
bndstx
jno
sub
cs
jne
xlat
das
sbb
mov
cmpsl
lahf
inc
sub
sti
fs
xchg
sub
sub
repz
or
out
insb
sub
sbb
js
fsubrl
loopne
lret
pmullw
xor
or
push
mov
sbb
jg
sub
mov
popf
addb
push
xor
test
jb
sub
cwtl
jle
fwait
out
inc
leave
pop
shrl
sbb
xchg
inc
test
mov
inc
mov
mov
imul
pop
call
dec
and
jb
movsl
adc
repz
test
pop
fs
xor
rcrb
cwtl
stos
cltd
inc
and
mov
mov
lea
push
xchg
mov
fists
test
arpl
test
adc
pop
dec
push
sub
adc
les
cmp
cwtl
movsb
pop
or
lock
jbe
cmp
pop
movsl
cmpl
mov
pop
xor
pop
notl
aam
pushf
scas
test
pop
lret
push
lods
pop
adc
mull
sbbl
fistps
xchg
insb
dec
xor
insb
ret
mov
jne
jae
dec
add
orb
dec
sub
scas
out
adc
inc
imul
insl
push
pop
imul
mov
insb
mov
outsb
dec
add
mov
loopne
adc
pop
rorl
xlat
dec
insl
cmp
mov
lds
mov
mov
pushf
scas
mov
pop
hlt
addr16
sub
mov
xchg
xchg
lods
int3
out
sbb
lods
jl
lea
cmp
cmpsl
test
inc
sub
lea
dec
mov
xchg
push
icebp
out
scas
cmp
sub
in
incb
fstpt
lods
and
lret
bound
clc
jo
mov
push
add
movsl
fwait
sti
mov
std
inc
ficomps
sub
out
or
je
xor
cmpsl
sbb
cmp
sahf
push
xchg
ss
cs
xor
dec
pushf
fiaddl
mov
push
push
mov
aas
jno
std
mov
inc
idivl
jns
leave
sbb
push
cmp
mov
cmp
call
and
jne
int
xlat
jmp
into
jecxz
sbb
xchg
bound
push
and
lods
inc
call
or
arpl
mov
jne
lret
sub
xor
jno
mov
xchg
movsb
and
mov
inc
test
mov
sbb
add
pop
xor
xor
xorl
or
push
pop
out
and
pop
xchg
cs
adc
sub
pop
xchg
dec
insl
sahf
sub
jg
push
jbe
stc
push
in
outsb
out
push
adc
lret
popa
mov
pop
jg
arpl
fucomp
cmp
cmpl
cmp
imul
add
sti
xchg
flds
stos
xlat
dec
push
push
pop
jl
data16
sbb
pop
addl
jb
out
orl
lret
out
fsubrs
jecxz
sbb
inc
mov
pusha
jmp
pop
sub
mov
mov
ret
in
or
mov
out
mov
cmpsb
popf
rep
ret
lret
rcrb
lods
mov
jb
aaa
sub
lea
mov
dec
push
out
jnp
push
movsb
pop
in
adcl
popf
push
push
mov
lahf
jb
lods
stos
mov
fnsave
rcll
xor
test
push
mov
add
push
add
mov
lods
jmp
lret
cmp
aas
mov
mov
push
or
enter
pop
jmp
mov
add
int3
adc
mov
rol
iret
or
lds
xchg
test
jecxz
or
in
cltd
add
test
fst
ret
add
mov
outsb
dec
data16
mov
movsb
mov
je
fs
jecxz
lahf
lret
push
and
das
gs
jmp
and
mov
out
test
cmpsl
or
push
mov
hlt
mov
mov
arpl
sbb
inc
inc
adc
aas
push
cld
pop
lods
cmp
hlt
dec
in
jno
es
push
lahf
fwait
sarb
in
jl
insb
scas
sbb
ret
cmpsb
outsb
add
daa
cmp
cltd
inc
enter
in
inc
pop
imul
dec
add
into
cld
call
insl
mov
sti
jmp
sbb
imul
imul
iret
cmp
je
mov
cmp
in
and
mov
jb
insb
jg
ja
inc
clc
sub
jae
mov
pop
push
ret
loop
mov
sbb
inc
fisubl
jecxz
fbstp
mov
jno
lcall
cmp
sub
popf
imul
jne
jl
xor
push
or
pop
dec
dec
sbb
add
dec
jecxz
dec
inc
xchg
iret
dec
xchg
lcall
fs
mov
xorb
jp
jge
fildll
sti
fimull
test
fwait
mov
iret
testl
stos
cmc
xor
push
cmpsl
ss
cmpsl
popa
xchg
push
cmpsl
stos
stc
mov
push
cmp
push
lea
movsl
cmp
cmp
sbb
mov
or
idivl
or
mov
sbb
jl
out
push
mov
xor
pop
sbb
xor
fcoms
fisttpl
mov
sub
push
add
fwait
mov
movsb
and
xor
jge
out
push
repz
xchg
xchg
mov
dec
int3
jmp
push
lock
outsl
push
sub
or
popa
lea
cmp
jp
clc
or
in
add
rcrl
jp
int3
das
subl
mov
inc
mov
push
xchg
cltd
fs
or
mov
mov
mov
fisubrl
xor
lret
rcrb
jo
insb
or
push
and
stos
mov
fadds
clc
push
sar
ljmp
dec
ja
out
push
popf
push
mov
testb
stc
push
inc
cmp
hlt
rcl
and
lahf
jns
inc
outsl
xor
mov
clc
xchg
mov
aad
testb
sub
mov
lds
cld
jg
out
pop
sbbl
repnz
cmp
fwait
pop
stc
lock
or
clc
inc
ret
push
xchg
insb
lret
icebp
sbb
leave
mov
sti
rcr
or
sbb
fmul
mov
inc
out
fistps
sbb
negl
sub
mov
dec
add
xchg
or
mov
rcrl
imul
mov
mov
cmp
rcrb
dec
icebp
mov
int
add
and
cmpl
xchg
xor
aad
lods
or
inc
inc
cmp
xchg
das
mov
lds
add
xlat
push
ret
mov
fidivrl
fistps
pop
aad
push
outsl
push
pop
in
pop
cwtl
stos
repnz
cmp
mull
mov
sbb
rcr
test
addr16
sub
mov
imul
push
mov
test
sbb
dec
dec
push
shlb
imul
push
push
sbb
es
cltd
inc
push
cmp
sub
addl
jb
and
inc
cmp
pusha
notl
leave
sub
pop
jle
fisubrl
leave
and
fsts
adc
scas
jno
cmp
fiaddl
xchg
mov
popf
xor
lret
inc
incl
push
pop
adc
pop
mov
cmp
bound
xor
inc
clc
pushf
fbstp
int
lds
scas
loop
and
and
sahf
adc
call
mov
sub
lods
jp
stos
inc
addb
or
in
outsl
mov
mov
lock
jle
cmp
xchg
and
out
jo
std
push
loop
movsb
mov
ljmp
and
mov
out
xor
pop
cli
pushf
sub
inc
mov
jg
dec
mov
rorb
pop
clc
xor
push
sti
adc
fldl
daa
out
jmp
dec
stos
jb
je
mov
mov
fistl
and
lods
inc
testb
or
push
jmp
aad
pop
stos
jecxz
stc
pop
inc
sub
jae
sbb
or
shrl
xchg
push
sahf
enter
sub
jno
in
cwtl
push
data16
push
decl
aaa
lods
imulb
inc
mov
cmp
enter
mov
xchg
ljmp
lock
repnz
in
xchg
cld
loop
jo
xor
stos
mov
adc
cmp
or
out
pop
mov
add
adcl
or
in
test
push
stos
shrl
int3
sbb
cwtl
mov
adc
inc
and
test
or
cmpsl
jne
add
jmp
inc
inc
ljmp
jbe
inc
leave
cmpsb
adc
aam
dec
dec
dec
jecxz
lret
dec
dec
pop
jg
adc
jp
fidivs
pop
pop
push
loope
jo
bound
inc
mov
sbb
dec
shll
rcl
cmc
xchg
jne
pop
sbb
sub
jecxz
ret
icebp
inc
jmp
push
cld
leave
or
mov
test
push
jmp
push
inc
jo
jnp
test
clc
scas
and
iret
sub
sbb
xor
sarl
enter
je
dec
shrl
aaa
add
xchg
dec
out
push
dec
fdiv
test
rorb
xchg
xor
sbb
out
xchg
cld
or
mov
daa
lcall
jne
cmp
repz
jae
js
mov
lret
in
sarb
lods
inc
lahf
je
es
lret
cmp
sub
inc
xchg
add
js
mov
inc
test
dec
pop
lea
sub
adc
dec
or
sub
outsb
mov
pop
aam
xlat
mov
jp
fldcw
cmp
fucom
sbbb
inc
inc
hlt
xchg
data16
mov
mov
fsubrs
mov
out
in
mov
xchg
mov
and
pop
movaps
testb
adc
fidivl
nop
popf
mov
dec
mov
daa
lcall
adc
loop
fwait
bound
adc
fistpll
mov
fs
mov
and
int
push
call
xchg
xor
gs
sub
aam
jbe
and
dec
or
rep
jmp
mov
insb
or
or
fidivs
push
imul
leave
cmp
adc
sbb
push
adc
cmp
lea
push
ror
adc
popa
out
inc
pop
adc
cwtl
mov
lea
mov
js
lods
ror
out
mov
rol
in
sbb
jbe
clc
ja
mov
sbb
pop
mov
imul
mov
push
sub
orl
sbb
adc
mov
pop
jns
cmp
xchg
pop
mov
push
pop
adc
add
mov
inc
outsb
filds
out
movsl
xor
ljmp
mov
cwtl
push
fs
push
push
cmp
shl
xor
popa
cmp
mov
shlb
movsb
loope
rcrb
insb
sbb
sahf
mov
pop
mov
dec
fsubl
add
ret
mov
leave
ret
aas
mov
popa
lahf
ss
mov
aam
xor
out
mov
jne
mov
iret
sbb
fsubrl
dec
loopne
imull
int
mov
push
jno
addb
lea
xor
shl
stc
popf
and
rcrl
mov
or
push
ljmp
pushf
arpl
ret
nop
daa
cmc
lahf
lock
dec
xor
xor
add
in
loopne
and
mov
stos
mov
ss
xor
sbb
shll
pop
sbb
mov
insb
shrl
fwait
push
add
push
sarl
or
sub
push
jle
inc
subb
lea
jmp
js
pop
out
lock
pop
cli
lea
jb
pusha
scas
icebp
je
xchg
es
mov
push
or
sbb
push
mov
jbe
or
xchg
mov
jno
inc
aas
cmc
in
mov
cwtl
imul
jb
in
and
cld
scas
nop
sbbl
and
sbb
dec
mov
rcrl
popa
fsubrl
sti
mov
fcmove
xchg
pusha
ja
rcrl
sbb
lahf
adc
inc
aaa
stos
inc
lock
xlat
xchg
dec
jle
or
add
xchg
add
push
dec
test
sub
js
dec
jecxz
popf
int
jmp
out
cmp
add
mov
call
xchg
xorl
mov
add
mov
cmp
bnd
out
mov
mov
sbb
add
cltd
pushf
sub
xchg
jmp
gs
jmp
and
add
jl
arpl
xor
js
sub
sub
cmp
in
fnstenv
push
add
mov
add
mov
mov
hlt
aad
push
mov
shrl
arpl
stos
push
sub
dec
popf
std
ds
in
or
movsb
push
and
insl
sub
sub
mov
mov
aaa
insb
inc
fwait
sbb
sbbb
inc
fs
and
xorl
cs
std
push
std
cltd
xlat
xchg
cmpsl
je
rorl
jbe
push
pop
pop
sahf
test
fisubs
pop
popf
push
andb
enter
pop
pop
dec
inc
loopne
xchg
lea
ds
xchg
loopne
fmull
fcmovb
aaa
hlt
std
lods
add
or
jnp
std
out
dec
dec
and
repz
pusha
adc
mov
mov
xlat
sar
scas
xchg
sub
mov
pop
pop
repz
add
xor
arpl
test
shrb
jns
dec
cld
jge
imulb
add
inc
repnz
inc
negl
dec
loope
adc
test
mov
xor
cmp
mov
lahf
or
push
test
outsb
sbb
xchg
insl
ret
cmpsl
icebp
xchg
test
inc
push
outsl
xchg
cmc
or
insb
iret
cli
and
cmpsl
add
out
jmp
jbe
cli
insl
aam
inc
std
gs
sub
popa
stc
in
mov
andl
adc
test
ret
jno
jp
mov
test
jecxz
idivl
mov
or
orb
or
scas
subl
and
or
nop
add
push
adcl
mov
nop
push
movsb
mov
ss
add
pop
mov
and
xor
ss
out
push
test
xchg
cli
xchg
sub
sub
cmp
repz
cmp
outsb
mov
iret
lcall
movsb
mov
cli
dec
scas
icebp
ret
xor
jmp
sub
ss
inc
fs
pusha
lods
mov
jmp
push
in
adc
bswap
jg
mov
push
std
cltd
sbb
mov
cmp
stos
ljmp
call
xchg
in
subl
or
enter
add
mov
mov
fistpl
clc
inc
or
jge
xchg
subl
xchg
ret
xchg
negb
aas
loopne
xchg
mov
and
aam
add
dec
push
mov
hlt
push
icebp
mov
jle
mov
cli
das
sahf
in
cmp
sahf
inc
loop
es
cmp
or
inc
cmp
xorb
fdivl
and
dec
adc
jl
stc
jbe
xchg
cmp
and
xchg
mov
rcll
test
adc
notb
add
xchg
adc
incl
mov
xchg
dec
xor
dec
loope
fcomps
mov
inc
cmpsl
pop
ret
in
jno
mov
mov
dec
inc
stc
sbb
movsb
outsl
mov
jmp
int3
dec
jno
std
imul
imul
movsl
loopne
mov
test
add
or
sub
mov
adc
test
bound
adc
adc
int3
imul
sbbl
xchg
or
out
add
in
fcomps
cmp
mov
sahf
jb
rorl
ret
mov
icebp
iret
lds
jne
push
xchg
gs
fldt
arpl
mov
mov
sub
mov
daa
popa
lods
es
jbe
into
inc
in
ja
movsl
cmpsb
repz
rcrl
pop
cmc
cmp
mov
dec
jl
jno
stos
pop
push
rol
pop
add
cmp
enter
adc
jmp
lock
test
mov
mov
outsl
lret
xchg
cmp
adc
push
ret
xlat
xchg
rcll
lock
jnp
dec
imul
inc
sar
xchg
or
outsb
cs
in
inc
jo
test
cmp
cwtl
jle
mov
mov
loope
xchg
testb
pop
jns
stos
add
cmp
xor
mov
mov
cmpsb
xor
imul
inc
or
mov
aam
xchg
push
add
cs
sbb
popa
sbb
xchg
cmp
or
ret
scas
fnsave
jg
bound
int
jp
repz
push
gs
sub
movsb
pop
bound
mov
mov
int
lret
sbb
mov
adc
lahf
sbb
loop
jle
addl
arpl
and
les
scas
sub
cmp
mov
push
in
push
out
in
mov
or
push
or
aas
mov
mov
mov
jp
iret
mov
or
out
mov
pushf
dec
daa
insl
repz
mov
into
mov
dec
out
jle
mov
aam
cmp
jmp
add
push
mov
mov
inc
daa
inc
shrl
cld
push
popl
xchg
cli
pushf
les
mov
std
adc
jno
mov
faddl
lret
pop
in
lret
and
fdivrl
shlb
dec
dec
pop
int3
insb
cmpsl
mov
pusha
int
push
jg
xor
leave
sub
sbb
mov
rorb
mov
fs
mov
or
rcl
adc
pop
mov
mov
xchg
pop
add
insb
or
imul
sub
test
xchg
dec
jg
lods
leave
cld
outsl
iret
dec
aad
mov
mov
xchg
sub
lds
cmpl
xor
mov
xor
pop
add
sbb
and
or
jmp
pushf
lahf
ljmp
mov
mov
shrb
and
adc
add
in
cltd
push
mov
test
imul
add
sbb
cmp
pop
test
ficompl
loope
dec
pop
cli
aam
fiadds
push
lods
adc
pusha
jb
daa
sub
mov
add
or
movsb
add
sub
les
leave
cmp
mov
push
adc
cmp
popf
pop
movsb
shlb
pop
push
cmp
imul
bound
sub
mov
test
in
call
lahf
mov
scas
mov
jmp
ror
push
hlt
sbb
and
dec
add
stos
aam
jp
jnp
test
mov
ret
bnd
sti
cli
xchg
in
sahf
movsl
sbb
mov
idiv
pop
adc
mov
jnp
sub
push
jecxz
into
sbb
pushf
jle
push
jge
add
in
mov
or
sub
jmp
cltd
movsb
daa
lods
and
mov
and
insl
pop
outsl
mov
testl
dec
xchg
jmp
lds
out
xchg
aas
add
mov
incl
xor
icebp
mov
jmp
inc
jns
mov
xchg
fs
sahf
icebp
xor
cmp
sub
xor
push
sti
fidivrl
ror
cmpsb
jns
mov
ret
and
adc
lock
and
push
jle
dec
sti
xchg
jnp
jle
sbb
cwtl
xor
mov
notb
pop
mov
jge
xor
add
dec
pop
dec
das
mov
push
jo
test
xchg
pop
lock
cmp
insb
insl
fiadds
mov
popf
and
js
call
cwtl
inc
xor
or
in
adc
mov
push
add
cld
or
xor
jmp
mov
or
jo
xchg
inc
mov
dec
fdivrl
inc
cmp
scas
push
sub
out
dec
or
xchg
out
jae
or
sarl
mov
add
add
dec
jbe
pop
jmp
xor
div
cmp
in
dec
add
les
shl
adc
jp
cs
sub
jb
and
cmp
popf
inc
shlb
fstl
jbe
sbb
jp
in
sbb
lods
add
xor
adc
pop
aaa
mov
pop
sbbb
imul
mov
ret
gs
outsb
cmp
js
ret
cmc
dec
ss
repz
aad
repz
push
mov
jge
sub
jnp
push
add
imul
into
push
dec
test
hlt
cmp
ret
dec
push
sub
xor
sbb
dec
push
enter
sbbl
cwtl
and
lret
xchg
jmp
cmp
mov
mov
sub
dec
negb
cmpsl
cs
inc
push
jno
xchg
gs
lret
mov
mov
sub
sub
aaa
push
nop
cmp
cmp
in
dec
cwtl
mov
push
xor
scas
cmp
pushf
fnsave
mov
mov
mov
fsubr
jl
xor
add
outsl
lods
jb
pop
nop
xchg
sub
mov
add
add
and
add
jp
inc
pushf
or
in
inc
clc
aas
out
leave
sbb
mov
call
fisttps
or
inc
jle
addr16
scas
pop
mov
adc
xchg
sbb
inc
ja
idivl
or
jl
inc
pop
mov
gs
adc
xchg
pop
push
test
mov
int3
movsl
and
sbb
enter
push
sahf
lods
test
or
test
pop
push
jg
movb
sti
out
lret
fistpl
jp
scas
jmp
xorl
repnz
and
push
out
adc
mov
pop
mov
arpl
int
cmp
cmp
pop
sbb
cmc
inc
add
lods
xchg
xor
shrl
dec
sahf
mov
nop
pushf
enter
add
lret
sub
push
add
cli
dec
dec
daa
fst
pop
push
push
ret
pop
inc
popa
dec
loopne
inc
pusha
aad
jnp
cmpsb
lods
jo
ja
jg
inc
cmp
pusha
mov
cmpsl
ljmp
sub
mov
mov
mov
ret
sub
pop
xchg
mov
or
and
cmpsl
cmp
dec
mov
aaa
mov
movsl
push
inc
mov
cmp
into
enter
mov
mov
mov
dec
adc
notb
cwtl
in
ret
push
mov
adc
cmp
pop
mov
int
push
in
mov
fiaddl
stos
jmp
aad
jae
scas
jb
xchg
jbe
mov
sbb
div
scas
ss
jne
sub
into
sub
inc
adc
ret
sub
or
lret
pop
ds
cmp
pop
loopne
xchg
jo
add
out
mov
imul
jge
xchg
jmp
lret
mov
jg
jmp
inc
mov
jl
in
cmp
popf
push
jbe
mov
out
notl
bound
pusha
popf
cmc
shrl
es
fsubs
adc
int3
jg
inc
out
mov
sub
cmp
xor
mov
pop
mov
leave
cmpl
mov
xchg
or
sub
and
rcr
mov
mov
xchg
pop
in
push
cltd
mov
pop
pop
repz
daa
jmp
loopne
push
faddp
mov
dec
push
jne
sbbb
jnp
mov
int3
and
jle
and
add
repz
xchg
div
mov
sbb
or
shlb
mov
sbbb
loop
mov
mov
call
add
int3
pop
jbe
ja
daa
xor
adc
mov
or
jle
es
push
test
rcll
test
int
call
push
pop
cld
fimuls
add
mov
dec
mov
imul
lcall
jl
sbb
xchg
iret
xchg
adc
adc
roll
fcomps
inc
jmp
jp
xor
push
mov
cltd
jl
mov
cmp
fs
out
sar
cltd
xorb
imul
leave
aad
enter
lcall
cli
jns
hlt
mov
or
lods
fdivrl
mov
gs
jl
mov
ja
or
outsb
fsubrs
lea
pop
inc
mov
xchg
mov
xchg
aam
ret
xor
scas
jno
pop
jl
sbb
andl
add
lds
mov
aaa
into
scas
mov
int3
lret
stos
push
jle
mov
or
outsb
in
dec
mov
insl
dec
loop
add
mov
cmp
mov
mov
pop
or
xor
mov
cmp
cmpsl
shl
sbbl
gs
shll
push
sbb
fnstcw
mov
fucomip
xchg
out
jecxz,pn
pop
cmp
in
jle,pt
mov
sbb
mov
sbb
in
iret
shll
or
jle
and
inc
mov
and
loopne
xchg
pusha
push
lret
ret
mov
jmp
mov
sub
pop
stos
call
out
stc
mov
add
inc
dec
fsubrl
adc
scas
mov
loopne
jmp
imulb
adc
sbb
jnp
inc
ficoml
jbe
lret
aas
lods
fcompl
test
lret
in
jns
push
iret
jg
les
cmp
mov
pop
dec
dec
adc
rep
xchg
shl
sbb
scas
lods
dec
mov
push
movsl
int
xchg
clc
test
mov
cmp
push
std
scas
out
xchg
xchg
clc
sahf
cltd
mov
xor
es
jp
clc
pusha
or
push
out
xchg
imul
push
mov
testb
loopne
stc
push
sti
xor
xlat
outsb
mov
pushf
in
nop
outsl
ss
mov
cmpsb
fwait
sti
fisttpl
adc
add
xlat
push
xchg
out
sub
push
pop
fisubrl
stc
jbe
mov
jmp
hlt
fwait
arpl
stc
jmp
test
popa
pop
dec
xor
mov
out
lret
sub
mov
js
shlb
ss
xor
push
or
sbb
movups
mov
or
andl
and
shrl
dec
fldl
popa
popl
and
jo
jo
xlat
ss
jl
pop
out
rorl
add
lock
add
das
lahf
xor
cmpsl
sub
mov
loopne
loop
dec
adc
imul
adc
push
pop
fnstenv
pop
pop
out
shrl
gs
inc
sarl
or
cmp
jmp
and
call
and
cmp
xchg
in
test
ss
dec
adc
xchg
sarl
mov
dec
and
inc
into
pop
ret
repz
mov
popa
daa
scas
xchg
adc
fbstp
ja
insb
sub
xchg
call
sub
pop
mov
jns
mov
dec
imul
mov
jp
ret
test
mov
mov
rcrb
sub
arpl
sarl
jae
mov
push
test
jne
or
add
int3
mov
dec
mov
inc
test
ret
sbb
xor
imul
sbb
dec
or
mov
mov
notl
cmp
cmp
xchg
dec
cmpsb
mov
pop
clts
scas
sub
mov
lcall
fstps
data16
or
stc
and
pop
xchg
xor
mov
or
mov
mov
cmp
xor
lret
jbe
out
jne
int
jns
repnz
pop
cmp
or
insl
xlat
pop
out
out
out
push
mov
or
les
movsb
movsb
outsb
lea
or
mov
push
outsl
insl
cmp
mov
dec
cmp
cmp
lret
sti
mov
adc
sub
fistps
outsb
adc
lret
mov
scas
inc
lea
inc
fidivrs
xor
outsl
or
add
int3
mov
cmpsb
add
lock
repz
popa
insb
imul
call
loope
enter
or
mov
mov
and
mov
jp
xchg
dec
dec
inc
in
shl
data16
xor
and
sbb
hlt
push
int3
push
and
daa
imul
imul
fimuls
arpl
fs
mov
jne
push
sub
sahf
pop
sbb
mov
cmp
pushf
mov
jp
sahf
clc
sub
push
lcall
pop
loopne
xchg
adc
cmp
adc
incl
lods
xchg
mov
into
xchg
lret
inc
fstpl
xchg
call
mov
mov
fmul
daa
push
repz
in
mov
cs
mov
jl
xchg
mov
sahf
mov
imul
rclb
insl
or
mov
push
jle
fildll
stos
inc
iret
fbstp
push
inc
dec
jmp
inc
jo
aaa
adc
icebp
jbe
fcomps
int
cmp
push
pop
adc
dec
push
in
stc
xchg
add
scas
mov
push
dec
bnd
push
pop
adcb
hlt
xchg
push
stc
xor
subb
mov
call
testb
push
adc
int3
dec
movsl
js
xlat
inc
out
inc
inc
or
mov
inc
mov
and
xorl
test
jg
out
test
test
mov
les
pop
xchg
in
arpl
lods
xchg
jno
dec
fsubs
xchg
repz
popa
adc
subl
leave
sub
fbld
sub
dec
mov
pusha
rcrb
add
jno
adc
sbb
aam
xor
push
outsl
bound
jbe
cmpsl
fistps
in
cmpsl
ret
test
mov
mov
push
outsb
aaa
jae
gs
stc
jle
nop
sub
mov
daa
cld
dec
jmp
out
in
mov
aas
dec
mov
fcmovnb
aam
jmp
out
mov
cmpsb
int
fcomps
ret
loope
insb
inc
dec
jle
adc
test
loope
dec
and
xchg
loope
jle
call
add
mov
enter
or
rorb
std
pop
lock
inc
or
dec
cli
loope
or
inc
addr16
inc
adcb
ss
and
stos
scas
pop
jne
adc
sar
enter
adc
and
dec
loope
jae
or
scas
test
mov
fdivr
push
mov
jp
sbb
or
and
xchg
pop
sub
cs
repz
xor
mov
dec
jb
adcb
out
sbb
mov
push
fidivrl
das
out
push
cmc
pop
add
or
mov
ret
add
es
push
or
jnp
lods
nop
scas
or
addr16
daa
in
xor
fadds
mov
jb
mov
push
xor
fucomp
sbb
add
vpand
pop
into
fidivrs
mov
jl
or
adc
mov
or
xor
test
cmp
cli
pop
sub
in
test
dec
adc
jnp
sub
inc
adc
sub
sbbb
mov
xchg
sub
pop
sub
imul
mov
ljmp
sub
add
mov
lds
rcrl
sbb
scas
xchg
and
sbb
int3
lret
and
push
jo
or
mov
jo
pop
mov
out
pop
push
in
or
inc
pop
pop
jge
mov
movsl
dec
inc
loop
mov
out
popa
adcb
mov
pop
imul
and
pop
cmpsl
adc
mov
ret
cwtl
das
fstl
pop
mov
scas
xchg
xor
adc
dec
cld
xchg
test
out
xor
testb
bound
in
shll
adc
dec
add
andb
xchg
pop
enter
addl
jl
mov
xchg
mov
sub
in
outsb
push
out
dec
mov
in
xchg
ret
pop
mov
aas
cltd
adc
sub
scas
and
push
xchg
filds
sahf
dec
and
ja
pop
mov
in
or
rol
daa
arpl
popa
fcompl
add
sbb
jnp
add
addr16
sbb
xchg
icebp
cmp
mov
hlt
fwait
test
or
jecxz
fabs
stc
mov
inc
out
add
sarb
lret
fcomip
cmp
ja
sbb
push
ret
fucomip
outsb
mov
dec
dec
out
sbb
jnp
loop
xor
adc
out
pop
gs
mov
add
loop
imul
pop
xchg
addr16
push
jae
mov
jo
xlat
loope
aaa
stos
jmp
fimull
sbb
push
add
jo
arpl
push
repz
aam
lret
sbb
sub
sub
mov
xchg
sub
rclb
and
or
cs
cmp
int3
sti
les
sahf
mov
fwait
loop
or
cltd
or
aaa
jbe
subl
stos
stos
in
xlat
adc
and
dec
or
repnz
ja
jle
dec
pop
inc
rcrl
ret
popa
jecxz
xchg
add
jecxz
mov
xlat
dec
in
jge
jp
add
add
or
lea
loop
lods
inc
dec
pop
xchg
dec
aad
lret
bound
clc
in
push
aad
jb
xor
lahf
push
inc
dec
nop
in
jbe
mov
fistpll
fldt
out
mov
inc
jge
jbe
adc
xchg
xor
scas
movsl
add
fsubl
xchg
std
push
or
jmp
sbbl
mov
pop
cwtl
fimull
push
mov
add
mov
stos
inc
fiadds
pop
dec
mov
leave
int
adc
jp
xchg
lret
out
leave
xchg
and
out
push
leave
shlb
xchg
andb
shlb
jo
mov
push
lcall
insl
push
scas
and
je
rolb
adc
and
jae
sub
adc
aaa
lahf
xor
filds
es
aaa
pop
daa
mov
mov
fwait
pop
iret
push
in
insb
and
stos
fwait
or
mov
lods
xchg
sub
loopne
push
cmp
aam
mov
loop
jb
mov
out
inc
int3
std
pop
mov
sub
outsl
adc
pusha
push
rorb
sbb
pop
in
bound
insl
repnz
or
ljmp
push
push
lods
pop
leave
xchg
loope
or
loopne
sahf
xchg
add
push
xor
sbb
cmp
jnp
xchg
and
lods
aad
sbb
sbb
pop
roll
imul
pop
call
jbe
jnp
cmp
mov
aaa
fstl
scas
mov
or
sub
add
mov
fwait
add
and
mov
sahf
pop
ja
cmp
push
nop
lock
xlat
mov
mov
mov
pusha
testb
push
aam
push
push
scas
adc
fs
lea
xchg
insb
mov
xchg
mov
scas
dec
add
mov
mov
movsl
sub
push
daa
inc
dec
insb
sub
xchg
in
lret
mov
jp
dec
cmp
pop
mov
xor
xor
inc
mov
add
mov
pop
scas
jns
mov
in
mov
je
xor
out
push
mov
jl
mov
pop
add
fsub
mov
or
mov
xor
mov
aaa
add
xor
in
push
mov
int3
rcl
cmp
lods
mov
mov
add
and
mov
adc
cmp
js
mov
dec
into
les
scas
mov
cmpsb
dec
push
testb
jmp
pushf
je
cli
sbb
jae
mov
enter
add
jae
mov
lds
mov
sarb
fsubrl
inc
push
in
int3
xchg
sbb
fsubl
push
js
icebp
test
nop
mov
lods
dec
mov
xor
push
jb
ljmp
int
push
adc
lds
popa
clc
outsb
ss
fs
mov
push
shll
xchg
imul
xlat
insb
and
gs
repz
fidivrl
fists
ret
sub
dec
add
or
push
push
jb
subb
movsl
test
call
loop
adc
daa
enter
stc
jb
fldt
mov
icebp
push
sub
sub
icebp
push
pop
cmp
loopne
pop
push
jp
data16
outsl
mov
cmpsb
xchg
sbb
lahf
adcb
add
dec
add
xchg
add
out
ficompl
jae
outsb
movsl
loope
pop
xor
jb
aas
pop
push
mov
stc
inc
mov
int3
movsl
lret
jp
fs
in
sub
pop
dec
inc
leave
jl
push
push
call
test
in
std
sbb
lahf
xor
push
fildll
aas
dec
and
adc
xchg
xchg
jecxz
mov
mov
sub
inc
pop
hlt
jp
je
rclb
push
loope
xchg
out
mov
repnz
add
push
add
out
ret
rol
mov
insl
xchg
sbb
pop
adc
push
lret
arpl
and
mov
pop
jmp
std
add
fmulp
scas
jbe
insb
shrb
cmpsb
outsb
cs
loop
repnz
cmp
mov
sub
push
mov
shll
pop
sub
loope
pop
pushf
sub
sub
mov
xlat
push
adc
ret
pop
dec
cmp
shl
push
pop
shrb
pop
sub
mov
inc
pop
push
mov
fsubrl
sbb
push
mov
repnz
cmp
ds
pop
xor
in
decl
adc
push
xchg
adcb
cmpsl
xor
or
sbb
xorb
jecxz
inc
xchg
xchg
add
xlat
jmp
sbb
jg
sub
pop
or
pop
xor
cld
lcall
je
push
das
inc
dec
test
push
rcr
mov
sti
mov
or
adc
lods
xor
mov
int3
popf
pop
rclb
push
cs
movsb
leave
sahf
pusha
xchg
loope
mov
push
shll
dec
add
mov
repz
mov
adc
lods
test
mov
clc
sbb
cmp
push
test
add
push
sub
or
cmp
sbb
daa
mov
add
fidivs
jno
movsb
out
jne
push
mov
loop
jmp
iret
lds
jb
data16
and
jb
je
sti
cwtl
add
call
jmp
add
out
xor
sbb
mov
or
sbb
jno
push
out
dec
push
fs
and
shrb
push
or
inc
ret
lock
arpl
mov
insb
dec
dec
ffreep
hlt
cmp
lret
pop
fcmovnbe
sub
inc
push
mov
push
push
daa
mov
repz
xchg
test
pop
add
xchg
jne
mov
pop
xlat
xor
sub
scas
lcall
sub
lahf
stc
jl
sub
cmp
jns
pop
cmpsl
inc
add
jg
imul
adc
xchg
sbb
int3
loopne
sub
stc
je
push
in
scas
pop
loop
addr16
pushf
stos
sbb
mov
in
dec
and
mov
cmp
ljmp
mov
xor
arpl
cmp
push
test
jno
cld
mov
fldenv
enter
inc
or
mov
push
movsb
popa
ficoms
xor
out
mov
ljmp
pop
mov
fildl
decb
stos
pop
hlt
and
ret
hlt
add
sarl
cltd
out
inc
dec
jle
dec
push
lea
out
pushf
xor
das
and
repz
addr16
clc
ja
in
add
sbbl
inc
lcall
and
lret
cmpb
daa
in
inc
cmc
cli
jl
add
mov
fcmovnu
xor
sub
out
iret
shl
mov
xchg
aam
test
sub
hlt
mov
adc
cld
les
xor
push
mov
xor
int
jno
test
or
out
inc
sbb
aad
mov
xor
pop
adc
pop
inc
ds
xchg
cmp
in
dec
adc
xchg
mov
hlt
sahf
push
mov
fcmovnbe
ret
adc
xchg
sar
lcall
insb
or
xrelease
call
lcall
inc
dec
cmp
insl
sub
psubsw
aaa
cmp
mov
push
xchg
sub
xor
cs
sbb
pop
and
sub
inc
sbb
mov
or
fsubrl
sbb
mov
mov
mov
in
adc
test
daa
adc
popf
lods
ret
and
scas
mov
cltd
stos
xor
mov
xchg
inc
sbbb
push
insb
bswap
stos
cltd
adc
mov
out
subb
cmp
mov
or
cmp
test
pop
add
rcr
xlat
pushfw
ja
push
xor
pop
insl
fldt
testl
push
lods
xchg
jno
mov
sbb
je
and
jg
stc
js
sbb
test
jge
call
js
test
jecxz
mov
test
lods
je
mov
cmpsl
push
out
cmp
mov
inc
clc
ja
push
dec
inc
jg
lret
pushf
aam
mov
xor
jecxz
pushf
aam
pop
dec
in
sahf
xor
lock
inc
loope
pop
sub
out
push
or
and
jl
pop
inc
arpl
scas
push
cmp
mov
adc
mov
call
in
mov
cltd
pop
pop
lods
data16
into
leave
or
pop
inc
inc
int3
imul
outsl
jle
jne
loopne
stos
mov
dec
push
in
out
shl
mov
ljmp
psrlw
fistl
lcall
pop
into
dec
iret
mov
push
out
or
shl
gs
sbbb
adc
pop
dec
movl
shrl
repz
cltd
test
cli
pop
mov
adc
loopne
fdivrs
mov
push
cs
xchg
enter
jns
xor
test
xchg
into
xchg
lods
clc
std
cld
inc
fstl
popa
cs
jbe
dec
les
jle
jno
fcmovu
out
sub
mov
mov
inc
jecxz
repnz
les
push
xor
cmp
arpl
mov
pop
pushf
repnz
and
in
out
dec
dec
mov
in
loopne
cltd
imulb
ficompl
jle
pushf
or
int
cmpl
inc
mov
pop
xchg
lahf
add
test
adc
mov
push
das
repz
cmpsb
mov
mov
ror
fmul
xor
shrl
mov
das
xor
add
xchg
dec
fimull
adc
adc
ret
push
loop
jg
mov
dec
push
ja
xchg
adc
mov
mov
sbb
xor
fmull
dec
xchg
xchg
in
insl
jmp
or
cld
rorb
mov
lods
lcall
ja
test
repz
mov
rorb
mov
sbb
ret
xor
mov
leave
loopne
inc
out
aaa
jb
rorb
mov
push
xor
mov
cmp
cltd
mov
jbe
xor
cs
push
dec
pop
cmp
mov
arpl
and
sub
jne
xchg
add
dec
push
pop
lock
cmp
push
pop
imull
clc
divb
and
xchg
out
add
mov
lea
roll
mov
pop
pop
insb
and
repnz
mov
push
stos
in
xor
ja
sbb
popa
jnp
jnp
test
jge
push
jge
dec
hlt
lret
jbe
cld
pop
hlt
dec
mov
add
out
fistpl
jl
pop
mov
clc
sbb
inc
outsb
mov
popf
fsubl
or
sub
push
aad
mov
jb
push
je
in
jle
cli
aad
sub
jmp
outsl
aas
es
fisttpll
pop
fiadds
ljmp
jbe
andl
pop
pusha
xor
inc
js
jecxz
push
and
xchg
pop
repnz
ljmp
imul
mov
adc
ret
ret
cmp
dec
mov
mov
loop
jecxz
jg
xchg
mov
jmp
mov
add
inc
jb
insl
push
mov
xchg
xor
push
cmc
inc
mov
xchg
fcmovnu
inc
dec
pop
hlt
jmp
cmpsl
sbb
mov
mov
xor
xor
arpl
xor
decb
mov
mov
call
add
in
pop
add
jnp
and
pusha
jmp
movsb
mov
jge
aam
mov
nop
imul
into
mov
js
jbe
mov
xor
pop
jns
dec
xchg
enter
les
fisttps
call
repz
imul
inc
jno
je
subb
jae
cmc
and
and
insl
push
cmp
and
cmc
cmp
push
adc
loop
pop
xlat
mov
pop
repnz
pop
popa
cwtl
adc
add
mov
shlb
sub
loope
shl
sub
insb
in
inc
pop
sahf
stc
lods
dec
sbb
cmp
dec
ret
pminub
mov
int
mov
popa
xor
dec
xor
push
xlat
pop
inc
fdivl
leave
xlat
push
push
scas
bound
sub
sbb
cmp
pop
push
cmp
mov
das
mov
cmp
rol
mov
or
lea
jge
pop
out
pop
push
sbb
insb
xchg
pop
lahf
adc
nop
push
out
add
push
loop
cmp
stos
into
enter
xor
cmpsl
adc
mov
jmp
jmp
inc
loopne
mov
mov
cmpsl
sarl
lods
inc
mov
jo
mov
test
and
scas
out
aam
push
pop
ret
pop
into
pop
ret
pop
jb
push
cmp
jp
inc
dec
stos
xor
mov
stc
sbb
cmp
fistpll
sbbb
ss
lcall
dec
aaa
ss
loope
mov
sub
ret
mov
stos
std
aam
dec
and
loope
sub
mov
dec
lods
push
imul
jb
adc
adc
cli
push
jno
jmp
add
data16
sahf
aad
adc
lds
icebp
jo
dec
jo
push
lret
test
jmp
ret
out
lcall
mov
sub
push
arpl
adc
jle
xchg
xchg
dec
mov
shl
adc
fisubrs
mov
xchg
inc
lock
in
arpl
sbb
mov
ljmp
pop
mov
jb
jnp
out
mov
clc
push
xchg
inc
rcl
mov
inc
jp
jle
mov
xchg
push
icebp
mov
sbb
jo
cli
lock
fisttpl
fsubr
jg
test
pop
das
mov
je
jbe
add
mov
xchg
adc
jmp
pop
pop
push
call
push
int3
ljmp
pop
mov
ds
jecxz
push
lcall
inc
push
cmc
pop
cmc
es
adc
jp
add
and
aad
cmp
lahf
cmp
inc
mov
and
or
inc
fldt
shr
fs
loope
pop
mov
cmpb
sti
inc
cs
into
xchg
fisttpll
fs
testl
inc
call
dec
adc
mov
mov
xor
loope,pt
lahf
mov
rcr
or
in
xchg
push
scas
shld
push
pop
mov
mov
cwtl
xchg
popa
lret
mov
jno,pn
enter
in
jo
ja
xchg
jecxz
xchg
lahf
fnstcw
mov
xor
daa
fidivrl
add
sbb
ja
and
rorb
bound
adc
mov
fsts
mov
sub
mov
daa
jg
inc
aam
jns
push
shr
sbb
adc
lods
fcoml
mov
xor
pop
lahf
insl
xchg
test
mov
shld
cmp
mov
or
jo
outsl
iret
push
xchg
xchg
xor
lds
ss
jl
and
idivl
push
addr16
loop
jp
not
insb
fwait
add
sbb
lds
mov
decb
xor
cmp
push
mov
rcl
aas
cmp
inc
in
jne
mov
insb
or
mov
test
sbb
sahf
ljmp
push
test
mov
and
sbb
leave
fstpt
jns
cltd
sar
sub
pop
lret
jne
movsl
push
add
and
cmpsl
lahf
testl
jne
push
cmpsl
or
push
mov
adc
dec
insl
push
lods
fstpt
cmp
iret
cmc
aas
movsl
push
dec
ror
sbb
xor
loope
jb
adc
cmp
loopne
pop
adc
sub
inc
fidivrs
arpl
cmp
xor
add
sbb
dec
pop
jae
ja
mov
jmp
add
imul
aaa
mov
jno
jae
loopne
mov
and
adc
add
inc
sbbl
pop
scas
push
cltd
test
or
or
nop
and
jg
nop
std
cmp
jnp
jle
adc
sahf
sahf
xor
aas
sbb
clc
xor
cmp
shrl
imulw
push
rolb
add
lcall
loop
mov
cmp
lcall
jge
cmp
pop
loope
sub
out
repnz
mov
out
push
outsl
add
insb
push
cmpsb
aaa
insb
sub
and
inc
hlt
inc
insb
scas
mov
push
sub
jne
fistpl
das
data16
popa
xor
lcall
push
mov
and
push
lds
stc
adc
xor
jg
fsubr
ljmp
mov
cmp
and
fisubrs
push
mov
mov
cmp
int
sbb
test
sub
mov
sarl
sub
leave
jl
sub
xchg
out
shll
push
sahf
xor
lahf
das
jmp
aad
aad
cmp
loopne
clc
call
lret
out
pop
stc
dec
inc
loop
imul
lods
jmp
pop
and
xor
cmp
stos
jmp
mov
popf
push
sub
int
cmp
test
push
jg
andl
js
ja
lds
push
lods
std
fadds
jmp
adc
pop
add
jbe
js
or
mov
xor
call
xor
cmp
mov
sbb
jl
lock
icebp
int3
cmp
pop
push
iret
mov
jnp
dec
in
loop
fistps
mov
outsl
ret
hlt
repz
lea
mov
push
mov
adc
shlb
icebp
mov
sbb
daa
mov
rorb
jle
dec
arpl
inc
scas
cmp
pushf
push
lds
sbbb
repz
xchg
mov
jns
mov
imul
mov
inc
fwait
insl
incl
outsl
sub
scas
dec
rcrl
dec
pop
loope
ljmp
jne
pop
out
mov
cmp
mov
sub
sbb
iret
out
or
dec
pop
push
les
loopne
ret
add
xor
inc
jae
xor
jle
stos
bnd
repz
adc
test
jge
arpl
ret
pop
cwtl
inc
cmpsl
cld
sub
lret
jle
jle
jne
das
mov
mov
mov
dec
jne
add
imul
ja
push
jmp
pop
fcmovne
adc
inc
lret
outsb
lret
mov
add
imul
insl
push
das
sbb
mov
ret
stos
pop
adc
iret
aam
jb
fucomp
mov
inc
dec
or
inc
fldenv
dec
jmp
xchg
cli
cmp
or
repnz
mov
jnp
sub
outsb
pop
les
sub
es
push
cwtl
rclb
and
sbb
xchg
popl
or
imul
pushf
leave
cld
cmp
jmp
aaa
or
push
pop
mov
inc
mov
mov
popf
in
jb
mov
fstl
inc
adc
inc
inc
and
aad
jg
and
jmp
test
popa
jg
mov
xor
push
shll
cltd
iret
fisubs
sub
cltd
jne
push
test
je
hlt
adc
pop
push
enter
dec
bnd
push
adc
cmpb
cmp
adc
fadds
loop
jecxz
es
sbb
mov
adc
sub
inc
rcrb
js
or
lock
mov
call
mulb
dec
popa
mov
movsl
fstpt
aad
or
xorl
jge
dec
lcall
pop
push
sahf
outsl
mov
sub
and
mov
mov
test
std
pop
mov
pop
fmull
jnp
xchg
jl
dec
cmp
mov
scas
jb
pop
mov
inc
inc
add
fadds
pop
idiv
sbb
rorl
mov
jo
mov
pop
std
shr
xchg
pop
inc
repz
pushf
mov
imul
lods
das
cmp
lret
clc
popf
stc
fidivs
jle
popf
fisttps
mov
ss
movsb
aam
xchg
mov
inc
in
sbb
aaa
pop
sub
adc
cmp
push
jb
js
sbb
adc
and
daa
sub
xchg
stos
jns
pop
insl
lods
xchg
push
sub
fidivrl
add
les
xor
cmpsb
xchg
push
lret
sbb
mov
jp
dec
lods
inc
jo
xchg
push
punpckhbw
je
movsl
in
and
cmp
je
std
push
push
js
cmp
adc
das
shll
mov
lods
loop
jle
mov
lret
or
in
push
dec
arpl
cmp
popf
or
fldcw
and
mov
xchg
adc
dec
dec
cwtl
push
in
in
das
pop
xor
lock
and
fnsave
lret
bound
mov
jmp
jns
movsl
mov
hlt
push
add
adc
inc
mov
insl
or
mov
je
insb
add
sbb
sbb
push
ds
sub
sub
push
sub
xor
imul
addr16
outsb
fidivrl
arpl
cltd
push
rclb
or
or
stos
aas
setle
add
cmpb
pop
push
mov
push
mov
popf
push
cltd
pop
loop
mov
xchg
mov
adc
adc
jbe
pushf
rorb
std
xchg
sub
gs
add
or
jp
sub
movsb
std
jge
sub
sbb
mov
jg
or
cmp
les
or
out
rcll
sbb
push
mov
mov
push
cmc
push
push
out
insl
jp
std
sub
nop
or
jl
js
pop
cli
daa
push
pop
stos
mov
addl
addl
aas
and
test
outsl
sub
data16
std
pop
icebp
in
inc
inc
lea
sub
cmpsl
sti
xor
sbb
out
cmp
mov
lock
push
inc
orl
fdivr
mov
outsl
adc
sub
test
xorb
inc
cltd
je
je
xchg
push
bndstx
mov
cmp
cmp
mov
jle,pt
negb
cmp
inc
imul
sbb
daa
dec
mov
shlb
fisubrs
sbb
sbb
jne
add
inc
sbb
cmp
loop
aam
mov
fstpt
push
adc
movsl
pop
adc
lea
shll
lret
jnp
sub
add
leave
lahf
shlb
jmp
loop
pop
cltd
jle
sbb
inc
ljmp
test
cmpsl
sbb
xor
add
es
in
test
push
xchg
pop
gs
sbb
test
iret
jae
fisubs
xchg
adc
clc
push
lods
cmp
fldcw
mov
jg
aaa
xor
mov
push
push
or
xor
cmpb
fisttpll
or
loope
loop
iret
adc
mov
div
cmpsb
and
roll
bound
mov
dec
int
in
mov
popf
sahf
push
in
mov
jae
sahf
mov
or
inc
jecxz
adc
fwait
add
les
pop
dec
int
ret
addr16
cltd
cs
les
testb
mov
jnp
pop
cs
xchg
enter
sub
mov
dec
ret
mov
stos
cltd
push
sub
hlt
dec
add
scas
in
xchg
jp
out
mov
popf
cmp
sbb
iret
std
cmp
cmp
sbb
xchg
jb
nop
mov
inc
push
in
movsb
pop
lret
int
push
dec
popa
fidivs
and
fprem
nop
andb
popf
arpl
aas
push
dec
stc
xor
jmp
stos
xchg
loop
fwait
jb
mov
adcb
sbb
loope
loope
mov
add
stos
pusha
bound
inc
shll
js
push
test
loopne
jl
or
les
push
adc
test
in
cmpsl
jl
jne
and
sub
dec
es
jo
sti
xchg
sarl
out
in
push
iret
sbb
mov
inc
xor
in
cmp
sahf
cmc
and
nop
xchg
push
pop
ficoms
mov
xchg
xchg
and
cmpsl
mov
inc
inc
mov
pushl
pop
sti
jbe
xor
addr16
push
sub
add
dec
inc
js
jmp
test
mov
dec
mov
dec
mov
and
ret
add
xchg
stos
es
popf
sbb
pop
idivb
cmp
movsb
push
jecxz
dec
mov
dec
xor
push
mov
or
xchg
mov
int
and
add
push
adc
scas
xchg
int3
mov
ja
pop
call
push
jo
jb
movsb
std
out
rcl
jg
jno
movsl
mov
jns
pop
adc
shr
adc
aas
in
imul
mov
jb
loopne
addl
es
pop
mov
mov
data16
mov
lret
mov
push
stos
jne
pop
dec
negl
mov
adc
lret
sub
outsb
pop
mov
iret
or
fnstsw
push
mov
daa
mov
mov
push
pop
lcall
cwtl
push
aas
lods
mov
aaa
lret
and
je
cld
fs
pop
add
cmc
sub
xchg
dec
lahf
dec
pop
mov
mov
mov
pop
push
lea
dec
xor
and
in
jg
scas
pop
mov
jecxz
xor
das
aas
sbb
int3
int3
pop
out
pop
mov
push
addr16
stos
ret
rcll
pop
lret
jg
jmp
daa
add
scas
and
pop
mov
push
in
and
sbb
or
inc
mov
nop
daa
pop
sbb
inc
js
xor
outsl
stc
nop
mov
insb
add
daa
sahf
sub
adc
xor
test
insl
sti
xor
adc
mov
pushf
mov
adc
add
add
stc
or
addb
test
aaa
push
pop
sahf
xchg
sbb
mov
aaa
out
std
mov
mov
hlt
push
add
pop
cmpsb
xchg
xchg
mov
mov
outsl
out
cmp
insb
incl
lahf
sbb
pop
xchg
mov
and
pop
xchg
mov
sub
pop
mov
mov
sbbb
jmp
or
cmc
dec
and
fidivrl
lock
es
arpl
sub
daa
repnz
aam
cmpb
mov
adc
jle
enter
rol
mov
mov
push
or
rolb
fdivl
dec
clc
rcrb
iret
out
daa
mov
bound
sarl
cli
in
test
push
mov
mov
pop
cmpsb
push
jl
test
jp
push
push
sahf
xchg
aad
pop
movsb
ret
fwait
push
mov
loopne
xor
std
push
xor
mov
test
call
mov
push
push
pop
notb
in
mov
cmp
outsb
sub
xlat
repz
jo
pop
ss
lds
loopne
cmp
pop
mov
cmpsl
ret
xchg
sbb
push
in
fistps
lcall
jbe
mulps
sbb
in
jge
notl
scas
cwtl
cwtl
jno
subl
xor
test
cli
xchg
sti
and
and
sahf
push
stos
and
jl
mov
loope
in
loope
cli
sub
out
adc
pop
adc
loopne
rorb
push
jl
es
psubsw
shll
sbb
push
mov
stos
test
test
int3
jg
inc
push
stos
std
arpl
mov
das
ret
push
sub
mov
pop
sarb
rorl
inc
push
std
in
inc
fnsave
lcall
rclb
add
sub
xor
daa
test
sub
inc
enter
cmp
sbb
iret
shll
ss
rcrl
lock
push
ret
pop
ret
test
arpl
push
jmp
sbb
mov
jle
scas
mov
jl
aaa
movsl
or
pushf
pop
xchg
sahf
xor
sub
mov
sbb
add
jmp
inc
mov
xor
pop
mov
mov
ja
addl
lret
push
jg
int3
pop
rcrb
dec
loopne
push
shl
pop
add
sub
push
lods
pop
dec
jecxz
mov
adc
mov
lods
push
cmc
aad
std
shll
or
rcll
pop
adc
jnp
or
lods
xchg
jmp
ss
out
pop
push
or
or
jae
mov
or
mulb
mov
lock
dec
divb
push
mov
mov
hlt
mov
and
pushf
push
hlt
mov
mov
push
out
xlat
daa
roll
mov
xchg
or
ss
and
pop
pop
mov
in
jp
or
test
fdivrs
sub
sbb
in
lret
lock
push
dec
sbb
xchg
fs
decl
test
out
sub
mov
xchg
cmp
outsb
pop
scas
xchg
filds
int3
jmp
sti
push
outsl
mov
push
repz
inc
mov
add
push
and
mov
adc
pop
insl
xor
jmp
lcall
popa
loop
outsl
xor
rcl
dec
sub
lods
mov
ja
inc
fs
mov
cmp
push
outsb
or
mov
xchg
mov
je
mov
arpl
pop
and
repnz
ret
loop
idiv
pop
adc
ss
roll
pop
adc
xorb
xor
pop
data16
jae
xchg
xor
cmpsb
jno
decb
mov
lahf
add
sti
xor
sbb
outsb
loope
fcomps
dec
push
mov
mov
jnp
and
push
mov
dec
imul
or
mov
pusha
rorb
mov
and
loopne
inc
pop
adc
es
mov
ljmp
dec
cmp
ljmp
xchg
add
adc
imul
push
jle
pop
inc
mov
fadds
rolb
pop
in
ja
out
xor
cmp
loopne
outsl
gs
push
sti
mov
pop
cli
pushf
fldl
icebp
and
cs
icebp
fcom
scas
and
je
out
lds
pop
jge
ret
pop
push
ljmp
inc
dec
mov
jnp
lahf
mov
daa
push
adc
push
mov
insb
dec
dec
pushf
inc
sub
data16
cltd
ds
mov
adc
add
inc
cmc
inc
mov
xchg
cld
out
fsincos
out
aad
mov
out
mov
jns
sbb
sbb
out
inc
push
lcall
pop
mov
sub
subl
addr16
mov
dec
push
in
or
test
ret
sub
xchg
push
adc
jae
jns
nop
adcb
and
cmc
push
sbbl
into
xchg
andb
ja
pop
mov
test
sbb
and
inc
push
inc
cmpsb
adc
inc
cmpsl
jge
scas
push
repz
mov
xchg
addb
dec
mov
int3
dec
rcrb
cmp
or
push
stc
movsb
jbe
jge
cmp
movsl
jge
loopne
add
mov
pop
jbe
jecxz
andb
aas
and
repz
xchg
cmp
push
gs
inc
icebp
sbb
sub
ss
aas
xchg
jnp
ret
test
and
sbb
enter
pop
imul
jb
lahf
add
icebp
gs
out
in
outsb
jle
enter
aad
rolb
test
icebp
mov
sbb
push
hlt
sarb
or
xsha1
cmpsb
or
sub
repz
je
mov
scas
js
test
lret
cld
cmc
call
loop
and
jne
or
sarb
fistps
xor
push
jne
push
jns
gs
inc
mov
xchg
cmpsb
ds
inc
pusha
bound
les
decb
sub
shrl
shlb
push
loop
mov
sub
mov
imul
mov
decb
popf
int3
push
xchg
data16
std
add
adc
xor
or
int3
inc
mov
ret
xchg
pop
cwtl
pop
push
mov
pop
lahf
sbb
lods
push
and
shl
add
lret
xor
loop
in
mov
fwait
outsb
mov
and
je
loopne
sub
or
and
push
outsb
mov
xor
cmp
adc
insl
sub
pop
adcl
mov
sahf
xor
dec
push
cmp
adc
pop
call
or
jns
mov
loope
in
add
or
mov
inc
dec
repnz
push
or
seto
lds
out
sbb
inc
inc
jnp
add
add
pop
mov
pusha
pop
ds
fsubrl
push
xchg
cltd
push
sahf
pop
inc
pop
push
jge
mov
ljmp
mov
adc
mov
ficoml
addr16
shrb
dec
or
stos
jns
and
les
push
les
aaa
lock
adc
inc
iret
xor
jmp
dec
in
jge
sbbl
sbb
scas
scas
lret
adc
aam
xor
daa
dec
test
xchg
outsb
stos
ret
adc
pop
repnz
cwtl
pop
sub
sub
clc
xchg
cmp
stos
or
push
pop
pop
and
push
inc
popa
addb
or
lahf
push
test
loope
cli
nop
mov
mov
and
mov
adcl
shlb
in
stos
out
sbb
mov
fdivrl
sahf
rorb
or
icebp
push
jp
ljmp
mov
inc
addr16
lods
shll
imul
push
pop
in
mov
int
test
std
cmp
mov
or
pusha
clc
cmc
dec
fsubr
dec
push
cmp
sub
xchg
iret
mov
adc
sub
add
or
xchg
out
fmull
inc
negl
sub
mov
sbb
inc
insl
adc
inc
mov
dec
mov
pop
cmpsb
sbb
sbb
imul
test
push
inc
pop
rcr
pop
inc
fldt
xor
inc
dec
sbb
sbb
add
pusha
sbb
lcall
fstl
sahf
jnp
sahf
jp
xchg
call
inc
cmp
repz
imul
movsb
push
mov
test
cli
dec
mov
fcoml
mov
push
mov
and
cmpsl
cmp
lods
inc
into
hlt
sarb
cmp
inc
cmpsb
cmp
loopne
hlt
push
fcmovb
mov
jno
stc
shlb
icebp
clc
xchg
dec
dec
test
shl
jns
fwait
cmpsb
sbb
sarb
dec
xor
ja
shr
dec
clc
push
stos
es
sub
imul
test
jle
inc
pop
sub
cs
mov
mov
inc
iret
or
stos
xchg
mov
cltd
xchg
mov
mov
aam
sbb
mov
movsb
mov
pop
jmp
mov
lods
adc
insb
xor
jnp
shlb
jns
cwtl
popf
sbb
xchg
cmpsl
cmp
insb
popf
lods
imul
mov
xor
push
cmpsb
loopne
and
shrl
inc
les
jecxz
shrl
bound
movsb
jne
gs
js
push
int3
pop
ja
jl
cmp
cli
movsb
repnz
sub
test
jb
cltd
lds
mov
xor
push
adc
jg
lahf
ss
pop
ljmp
push
lods
xchg
mov
fisttpl
clc
mov
pop
mov
xor
sub
dec
dec
leave
fnstsw
fisubs
pop
sub
jae
ret
jb
icebp
mov
jl
jp
leave
adc
loopne
ljmp
push
dec
sub
lds
test
mov
daa
outsl
cwtl
nop
jg
mov
sahf
jb
lods
xchg
sub
add
hlt
inc
sbb
cmc
mov
std
stc
sbb
add
push
addr16
call
mov
adc
adc
push
inc
sbb
cmp
loope
dec
cmp
jo
jmp
xlat
mov
sub
xor
cli
pop
bound
push
lods
mov
les
inc
jno
jnp
loopne
es
xor
movsl
xchg
push
loop
outsb
xchg
ljmp
mov
jp
add
scas
add
test
pop
das
push
jp
lock
sahf
sarb
pop
xor
dec
call
cmp
mov
not
or
jo
dec
nop
push
jecxz
idivb
daa
or
mov
sub
adc
cmp
cwtl
sub
aad
dec
mov
out
mov
mov
and
loope
nop
adc
sub
repz
mov
push
xor
jnp
mov
in
xor
mov
jno
and
push
subb
arpl
cli
bnd
mov
cltd
popa
and
jbe
data16
lret
lds
scas
movsl
xchg
loope
adc
push
fsubl
or
xor
adcb
out
pushf
testl
out
jge
in
or
test
jl
xor
xor
add
or
jne
les
jae
cld
das
popf
push
lea
or
pop
mov
stos
in
mov
or
out
and
addb
hlt
hlt
call
push
sbb
lock
xor
popa
lods
pop
stc
movsb
aaa
movb
sarl
inc
aaa
sbb
push
sbb
leave
push
stos
inc
push
and
mov
mov
adc
hlt
push
mov
cmpsb
sub
fsts
aaa
lcall
jl
shlb
mov
jo
xlat
out
shlb
dec
mov
pusha
and
cmp
dec
std
xchg
test
dec
push
xchg
pop
cmpsb
inc
or
jns
mov
push
fwait
dec
fsubs
add
mov
add
cmp
push
cwtd
mov
xlat
jmp
jl
fstps
mov
adc
pop
sti
les
or
gs
scas
pushf
jle
iret
jb
jo
mov
add
sarl
test
mov
insl
add
jb
jns
dec
fsubs
dec
stos
mov
dec
call
insb
adc
dec
mov
insl
sbb
hlt
bound
add
hlt
lods
ret
inc
dec
push
inc
mov
and
hlt
loope
scas
dec
outsb
pop
scas
push
jno
mov
lcall
and
cmc
ret
mov
hlt
push
ja
js
and
mov
inc
divb
shrl
dec
cmp
cmp
xchg
jl
dec
sub
pop
fldcw
mov
push
aad
inc
mov
outsb
push
insl
jno
mov
pop
pusha
cmp
sub
cmp
sbb
mov
sub
dec
pop
jl
je
and
pushf
push
bound
ss
jbe
adc
push
dec
insl
mov
fimull
jecxz
inc
and
fstpl
sub
xor
addr16
mov
jle
sub
mov
dec
xchg
mov
add
out
out
loope
dec
xchg
outsl
decl
test
dec
daa
int
jo
test
cmp
lock
in
shl
repnz
add
add
bound
sub
rclb
addl
jb
and
xchg
dec
inc
mov
test
call
iret
mov
pusha
inc
sbb
pop
shll
inc
std
fmul
cmc
sbb
dec
add
mov
cmp
faddl
int
das
icebp
xor
jmp
pop
insb
jmp
mov
mov
jb
addr16
repnz
dec
fwait
repnz
movsb
mov
loope
push
sbb
lret
sub
jmp
loop
aaa
adc
in
movsb
jne
xchg
ljmp
xor
call
and
movsl
xor
test
push
leave
fwait
add
lcall
out
add
mov
pop
mov
nop
pushf
mov
iret
pop
pop
cs
jo
inc
mov
dec
mov
mov
dec
stos
dec
ja
sub
leave
ss
and
pushf
adc
mov
data16
aad
xor
dec
xchg
add
cmpl
xor
adc
jle
leave
movsb
iret
fnstsw
sarl
push
cmpsl
pusha
lods
pop
into
cmc
test
repz
je
xchg
mov
or
shrl
scas
adc
lahf
xlat
xor
ror
pop
add
mov
sbb
jne
lea
xchg
scas
and
mov
dec
xor
lcall
push
cmp
adc
inc
fwait
sarb
xchg
imul
test
pop
dec
pop
inc
fldt
jecxz
test
cmp
inc
inc
sbb
push
nop
add
fwait
xor
jge
popa
sub
inc
cmc
dec
lods
xor
cltd
sub
adc
idivb
sbb
jle
cmp
and
push
cmp
std
lods
sub
mov
inc
and
inc
mov
lods
sbb
add
mov
mov
xchg
push
fwait
push
lods
adc
mov
sbb
jg
or
add
das
adc
cmp
pop
in
movsl
popf
insb
push
sbb
out
pop
mov
xor
cmp
subl
xchg
add
test
int
call
movsb
push
add
cmp
and
sbb
iret
sbb
pushf
jae
jl
mov
mov
inc
lods
jbe
stos
mov
scas
loop
sub
out
push
mov
int
dec
sbb
mov
orl
push
decl
pusha
xor
sahf
pop
shrl
sub
inc
std
icebp
inc
inc
push
push
push
xchg
push
in
pop
aam
cli
add
xchg
pop
mov
push
inc
in
cmp
inc
outsl
lods
imulb
ja
aad
sub
sbb
sub
or
mov
out
clc
shlb
add
movw
pop
jmp
mov
or
aas
outsb
and
mov
idivb
jae
sub
outsb
dec
xchg
test
mov
push
mov
stos
loope
andl
jae
push
push
imul
mov
arpl
mov
dec
imul
inc
add
add
and
fsts
add
xchg
insl
sahf
pop
push
scas
popl
sar
sbb
pop
lods
dec
cmc
inc
int3
test
inc
addr16
je
xor
lea
push
fs
pusha
popl
mov
add
sar
aad
hlt
mov
ss
or
movsb
out
in
adc
jg
movsl
sbb
add
and
push
cmpsb
xlat
mov
imul
rcr
sbb
sti
int
repz
mul
testb
sub
inc
inc
mov
push
push
inc
addr16
addr16
inc
mov
enter
add
inc
xor
pop
mov
push
shr
ss
fadds
xor
popa
jb
lods
andb
test
mov
sbb
lret
pop
add
xor
or
jmp
aaa
fnsave
pop
jb
divw
lock
cmp
out
xorl
dec
mov
clc
adc
test
push
pop
xchg
dec
adc
enter
push
sub
ficompl
adc
les
mov
fimuls
mov
cmp
add
xchg
call
push
dec
jne
push
adc
int
gs
inc
jg
mov
dec
push
lock
jmp
mov
stos
xlat
lret
cltd
std
outsw
rcl
sbb
arpl
outsl
test
shll
leave
fiaddl
sbb
dec
clc
imul
mov
icebp
imul
push
and
sbb
imul
xor
lret
fstl
sub
bound
xchg
es
xor
adc
xorl
aas
dec
and
rol
out
das
push
leave
adc
inc
arpl
dec
cltd
cltd
nop
sbb
lods
ds
push
adc
jp
leave
imul
jmp
fwait
es
dec
es
dec
xor
aad
jp
scas
aas
lcall
pop
cmp
dec
add
pop
mov
aam
or
sbbb
jp
pop
jmp
fdiv
les
das
and
ret
jno
orl
and
movsb
daa
mov
jmp
xor
jmp
push
cwtl
stos
pop
add
in
xor
cmp
stos
ljmp
aaa
mov
inc
loop
insb
cmp
fildll
inc
scas
enter
dec
adc
stc
xorb
xchg
xor
negb
test
sub
repz
dec
iret
jns
shrl
mov
sbbl
aad
cmp
clc
scas
jns
int3
and
js
ret
std
cmp
jecxz
push
cmp
xor
fs
sbb
scas
xchg
or
mov
imull
add
sbbb
add
mov
out
sub
mov
cmp
add
push
inc
enter
bound
pop
pushf
lret
jo
sub
cwtl
push
mov
jb
dec
jno
inc
pop
adc
push
call
imul
icebp
and
xchg
mov
inc
add
out
cmp
jle
mov
inc
les
aas
push
mov
jle
add
ja
add
or
jo
xchg
movsb
imul
pushf
arpl
in
cmp
xorb
pop
lods
pop
in
sub
pop
dec
xor
cmp
lods
loope
xlat
loop
pop
mov
insb
add
jle
in
shr
test
mov
and
jno
lods
shrl
or
mov
fstl
adc
mov
inc
push
shll
loope
cmp
imul
lds
pop
mov
sbb
mov
mov
xchg
push
insb
xor
mov
mov
dec
mov
sub
push
jne
jns
cmp
push
rolb
sub
jb
std
add
fidivs
push
test
jge
mov
jg
mov
pop
dec
mov
stos
es
fldt
push
pop
movsl
int3
loop
xchg
stos
fnstcw
repnz
or
gs
inc
mov
int3
xchg
inc
fnstenv
mov
mov
cmp
sub
mov
mov
mov
or
cmpsl
ss
push
cmp
repnz
stos
inc
lcall
sahf
sub
push
mov
loope
sub
popa
lret
lret
mov
int
inc
fmuls
and
sbb
pop
adc
aam
jbe
xchg
lret
jb
aaa
add
or
cmp
hlt
and
ljmp
stos
xchg
icebp
lcall
loop
xchg
stc
out
sub
dec
dec
jl
xchg
mov
inc
ljmp
out
cmpsl
js
jns
sbbl
mov
rclb
repz
mov
mov
adcl
fxch
jo
les
xor
sub
push
and
popf
enter
sub
xchg
and
mov
mov
daa
int
imul
testl
scas
andb
lock
push
je
xchg
hlt
sbb
loope
pusha
xlat
fidivrl
push
in
xchg
inc
pusha
int3
rcll
insl
push
ret
sub
jl
fdivl
adcb
cmp
add
mov
popa
fcompl
insl
push
push
jns
cltd
scas
or
cmpsb
sbb
ds
sub
cmpsl
dec
mov
mov
aam
in
scas
sub
lahf
xchg
lcall
push
fldenv
ror
test
ja
inc
stos
xadd
pop
pushf
xor
je
xor
and
das
or
mov
hlt
cmp
addr16
outsl
negb
lahf
and
enter
stos
cmc
jl
add
sub
xorl
jb
mov
pop
or
aaa
cwtl
dec
mov
push
shrb
lds
test
in
or
xchg
add
pop
sbb
jl
xor
cwtl
addr16
add
cwtl
pop
sti
mov
mov
xor
pushf
dec
jl
outsl
sub
adc
imul
out
xchg
pop
lea
sbb
xor
cld
cltd
leave
enter
lcall
cwtl
and
or
mov
bound
dec
sub
out
pop
pop
aaa
push
mov
ret
push
popf
jp
xchg
leave
pop
inc
imul
insb
rcrl
sbb
mov
mov
popf
xor
mov
dec
pop
sarl
dec
into
or
and
xchg
fwait
xchg
dec
loope
mov
sbbb
pusha
rcrb
mov
pop
jmp
out
out
dec
mov
mov
fcomps
inc
mov
lret
loope
pop
lds
out
xchg
imul
mov
lods
cmp
jo
push
stos
aaa
jg
or
int3
iret
sub
in
dec
mov
xchg
mov
lret
xchg
inc
cs
or
xor
insl
cmp
sbb
scas
scas
inc
loopne
push
mul
cmp
jecxz
xor
mov
packssdw
push
lcall
in
push
and
cmp
add
add
mov
sarb
cltd
or
stos
shr
out
nop
and
daa
cmp
rcl
repnz
stos
fildll
outsl
push
pop
mov
lea
jnp
jecxz
or
sbbb
fists
adc
sub
lahf
daa
adc
std
xchg
sub
lret
lret
insb
or
ss
sub
sbb
int
push
jmp
das
pop
fnsave
bnd
and
pop
mov
fistps
scas
scas
jmp
jo
hlt
movsl
dec
xor
jo
filds
adc
pop
stos
xor
jg
sub
pusha
nop
push
adc
ficompl
sarl
add
dec
sub
sti
xchg
mov
jmp
test
xorps
lret
popa
or
cmc
imul
xchg
js
test
out
int
mov
movsb
loopne
enter
stos
push
stc
cmp
shr
sbb
or
mov
aas
jns
jno
push
movsl
movsl
add
test
jl
push
into
xor
or
out
inc
fcmovnu
test
inc
icebp
jnp
aaa
sub
jp
mov
jo
shlb
mov
dec
and
sti
or
mov
insb
ftst
fwait
cmp
pop
xor
repz
iret
loop
hlt
push
fnstsw
and
fildll
insb
in
lds
pop
sub
and
repnz
ds
ss
cmp
and
lds
subl
push
push
mov
scas
xor
cmc
in
repz
push
jnp
sbb
push
sub
xor
adc
in
cmp
or
es
push
fldenv
stc
popf
or
call
sbb
mov
insb
test
sbb
push
cmpsl
mov
mov
push
cmp
push
jmp
ja
xchg
addr16
jae
xor
pop
hlt
out
push
lods
subb
adc
xchg
sbb
jle
imul
mov
pop
movsb
mov
rolb
loop
faddl
jns
cmp
cwtl
into
imul
xchg
mov
mov
call
mov
sbb
mov
pop
cwtl
sub
mov
cltd
sub
pop
aam
lahf
jo
pop
jmp
aas
clc
call
pop
shlb
and
movsb
push
clc
ss
fldcw
mov
loope
mov
hlt
xchg
in
aas
repnz
xor
and
or
push
stos
and
dec
xor
xchg
adc
mov
jbe
div
test
loopne
adc
xchg
mov
and
xor
repnz
in
mov
mov
iret
data16
or
je
and
jno
mov
lods
ss
push
icebp
mov
sub
xchg
jae
xchg
cmp
xor
fs
mov
test
push
and
inc
pop
cmp
xor
lds
xchg
int3
arpl
push
out
test
ljmp
add
push
dec
lock
push
enter
jno
test
sarb
mov
push
jnp
out
inc
mov
fmulp
nop
add
dec
loope
aam
nop
push
fildl
aas
pop
outsl
pop
push
sub
adc
sub
ljmp
rcl
notb
test
pop
or
enter
icebp
mov
leave
je
inc
aaa
adc
jnp
rcr
int
mov
jno
mov
les
imul
or
pop
pop
out
in
popa
jmp
inc
adc
aad
xor
in
xor
add
ja
cltd
xor
decb
filds
sbb
inc
jmp
xor
lcall
and
sub
std
cmp
push
bound
cwtl
pop
mov
sub
mov
mov
ja
daa
mov
mov
and
loope
popf
div
pop
mov
and
cmpl
bound
loope
mov
dec
cltd
xor
sbb
cli
push
daa
cmp
stos
xor
rcrb
dec
daa
dec
cmpsl
aam
shl
int
loopne
cli
negb
loop
lock
daa
lods
rorl
sub
xchg
pop
jge
jmp
mov
sub
jb
and
daa
push
insl
bound
adc
adc
push
sub
test
jecxz
xor
call
std
jo
mov
sub
adc
mov
and
sti
pop
es
lock
mov
shrb
push
out
jno
rcll
mov
pop
mov
xor
xor
fwait
dec
popa
in
pop
ja
daa
jno
adc
daa
roll
push
jbe
adc
xchg
xchg
outsl
jmp
fidivrl
ds
mov
lahf
fidivrl
fbld
xlat
in
push
push
and
dec
mov
jg
dec
in
mov
inc
ljmp
testb
out
arpl
loopne
push
icebp
aas
mov
decb
cli
hlt
mov
fistps
pop
adc
out
sbb
insl
leave
minps
lods
mov
loop
cmpsl
dec
lods
adc
or
ret
lret
push
lea
adc
stos
out
insb
pop
enter
and
pop
bound
outsb
mov
adc
jb
ja
and
jl
std
or
sbb
lea
lods
push
lods
pop
dec
andb
popf
inc
in
or
stos
imul
mov
inc
and
jmp
xchg
stos
dec
imul
and
sbbl
pop
pop
test
lds
shrl
sbb
jnp
sub
sahf
out
clc
aas
ds
fucomp
xor
daa
pop
mov
push
daa
xor
sbb
repz
mov
icebp
sub
sub
jmp
cltd
dec
mov
add
mov
dec
xchg
imul
cld
mov
dec
jp
jb
pop
repz
xchg
mov
jmp
and
xchg
mov
rcl
inc
adc
test
and
mov
push
and
xchg
cmp
xor
adc
mov
addl
and
or
mov
add
fmul
push
fdivl
inc
mov
inc
rclb
sbbb
add
sbb
dec
int3
xor
pop
or
cmpsb
les
xchg
test
lret
outsl
jp
inc
pop
push
ss
jnp
push
mov
out
call
cmp
inc
pop
xchg
fnstcw
mov
ficoms
mov
or
mov
inc
inc
popf
mov
lods
sti
cli
ret
outsl
es
std
push
mov
shlb
hlt
xor
mov
push
int
and
insb
pop
sti
leave
lods
xor
dec
jo
notl
test
inc
dec
arpl
add
lock
mov
inc
cmpsl
shlb
add
mov
push
movsb
lds
jnp
ljmp
mov
test
mov
dec
data16
pop
cli
fsubrl
adc
push
xor
push
push
mov
and
sub
rcll
lret
pop
sbb
loope
pop
jle
jg
sbb
scas
jl
sub
dec
loop
inc
xorb
push
cmp
adcb
je
jle
push
adc
inc
xor
subl
xor
int3
fidivrl
or
pop
xor
pushf
lret
push
cmp
push
insl
ljmp
aas
fldenv
xor
jmp
rcrl
xor
test
jmp
popl
dec
jo
clc
and
mov
into
insl
sub
std
push
imul
scas
jg
hlt
aam
fs
lock
sahf
xchg
ljmp
push
mov
in
pop
xchg
sahf
int
cli
jp
and
jg
lea
sahf
inc
jp
inc
xchg
mov
cltd
push
imul
les
adc
data16
pop
lea
popa
imull
ja
sbb
inc
rcrb
bound
out
sbb
test
pushf
sub
sbbl
jb
lahf
or
fcomi
mov
push
mov
mov
lods
xchg
and
xorl
pop
xchg
pop
mov
add
mov
mov
sbb
aam
popa
sarb
adc
cmp
xchg
outsb
inc
sbb
cmpl
dec
pop
inc
jne
mov
aam
xor
ja
jo
aaa
mov
aas
rcl
imul
ljmp
push
or
ljmp
inc
shlb
xor
mov
mov
ljmp
push
push
jl
pop
iret
pop
jo
xchg
sbb
adc
cmp
mov
mov
subb
xchg
pop
lods
adc
push
adc
add
mov
mov
push
fidivrs
in
call
out
mov
mov
mov
pop
cwtl
cli
movsb
out
cld
popf
jl
pop
and
jb
xor
mov
js
lds
adc
xchg
pop
mov
cmp
sub
adcb
jecxz
out
jne
xchg
jnp
sarl
sub
bound
push
sub
inc
popf
mov
sahf
icebp
ficomps
jo
jnp
divl
push
pusha
mov
stc
call
push
cmp
or
in
mov
mov
inc
jg
loopne
insb
and
std
or
out
push
imul
cmc
insl
stc
fs
inc
rcrb
add
out
lods
enter
lret
and
push
pop
int3
xlat
mov
fimuls
enter
dec
dec
sub
inc
into
in
out
and
sahf
adc
les
pop
or
mov
fistpll
mov
les
ficoml
das
add
clc
orl
daa
mov
cwtl
or
inc
pop
mov
sbb
xchg
fsubl
cld
icebp
cld
mov
mov
pop
mov
xchg
subb
sub
adc
xor
xor
shll
xlat
dec
ror
or
push
or
lret
pop
pop
push
es
pop
or
add
scas
lret
je
call
ljmp
adc
jae
mov
in
ret
adc
mov
test
pop
sbb
pop
loope
dec
sub
nop
gs
shlb
mov
out
repnz
stc
push
dec
outsb
imul
stos
fldenv
or
or
pop
push
xor
jnp
inc
push
push
pushf
push
push
arpl
sbb
cld
xor
jge
psubq
lods
xor
mov
cmp
pop
notl
out
jne
pop
mov
rorb
push
pop
repnz
jns
adc
xor
js
addr16
inc
sbb
lret
mov
pusha
mov
add
lods
inc
clc
pop
inc
leave
dec
es
std
push
icebp
dec
lahf
push
popf
adc
iret
adc
fisttpl
clc
pop
data16
jp
add
xchg
jne
mov
mov
addr16
and
and
pop
mov
shlb
movsb
inc
ss
call
ss
add
lds
ja
enter
outsl
mov
clc
rol
sub
sbb
lcall
call
pusha
jae
dec
and
jno
loop
sbb
push
inc
in
pop
test
test
loopne
mov
jl
cmp
popf
mov
repnz
cwtl
mov
aam
daa
push
mov
xor
popa
push
inc
xchg
adc
je
mov
inc
ljmp
testb
out
test
inc
mov
fstpt
mov
and
in
pop
mov
iret
icebp
inc
jmp
mov
fdivl
and
mov
or
inc
inc
cld
in
jmp
dec
popf
adc
stos
mov
mov
adc
ret
xchg
test
divb
push
ret
out
repnz
lods
or
lods
push
pop
ljmp
pop
out
add
mov
in
pop
inc
push
lds
out
popa
push
mov
jp
pop
test
sbb
sbb
sub
pusha
cltd
imul
mov
fiadds
ret
inc
push
pushfw
sbb
cwtl
pop
xor
gs
and
add
repnz
push
mov
or
xchg
ja
lret
rcrb
xchg
add
adc
jl
xor
in
pushf
rcl
shrl
mov
enter
call
and
popf
rcl
loop
cmp
xchg
das
movsb
lods
addr16
fld
cmp
jbe
pop
sub
pusha
loop
stc
xor
cmc
test
out
imul
add
pop
push
stos
in
loopne
inc
adc
call
pop
nop
xchg
stc
sub
std
mov
addr16
xor
shll
ljmp
sti
or
ss
and
adc
inc
int
loop
adcl
jmp
mov
int
mov
outsl
xchg
js
fisubrs
mov
xchg
daa
push
imul
jbe
insb
push
mov
fcoml
lret
enter
pop
mov
mov
cli
jno
sbb
cltd
test
mov
lods
lret
int3
fucom
inc
push
xchg
call
push
iret
jne
mov
xor
cmp
dec
jle
inc
mov
dec
rcl
jl
je
int3
lahf
popf
xor
stos
push
inc
adc
cli
rcrl
pop
jmp
xor
jo
pop
jmp
lret
enter
mov
arpl
ljmp
loopne
cltd
mov
cmp
mov
out
in
test
test
inc
pusha
jl
outsl
cmp
idivb
pop
insl
shlb
and
mov
mov
cmp
or
dec
sub
adc
fdivrs
pop
inc
mov
mov
shll
xchg
lock
dec
jmp
push
in
addr16
or
and
or
gs
mov
xor
repnz
in
stos
out
cmc
clc
jae
aaa
jle
jecxz
out
mov
addr16
adcb
mov
sbb
mov
aam
mov
mov
lods
imul
add
test
jno
movsb
xchg
add
fmull
lods
andb
scas
jae
push
into
shlb
clc
xorb
addr16
or
imul
add
mov
out
sub
cwtl
cmp
fistpl
fildl
and
dec
clc
test
or
mov
int3
jae
jp
dec
imul
adc
out
imul
push
mov
xor
std
sub
test
out
cmpsl
fsubl
sub
push
jns
lods
js
pop
and
bound
or
jbe
cmp
pop
mov
adc
clc
insl
fwait
cli
aad
and
dec
dec
mov
pop
push
aad
icebp
xorb
int3
iret
adc
or
cli
aas
jl
or
aad
sbb
pushf
outsl
lret
mov
shrb
fs
ret
test
loop
bound
mov
inc
push
les
ljmp
test
outsl
and
stc
adc
jecxz
dec
pop
jbe
push
sub
or
add
or
mov
es
addr16
jecxz
pop
adc
inc
mov
fiadds
mov
inc
sbbl
rcll
xchg
or
pusha
mov
scas
ret
lds
mov
cli
nop
adc
dec
push
insl
ret
push
out
bound
dec
dec
sbb
icebp
dec
cli
mov
sub
int
sub
jp
ss
in
xor
jno
into
pop
and
xor
xchg
repnz
mov
imul
insl
mov
jne
int
loopne
out
add
scas
iret
js
sbb
jl
mov
outsl
nop
daa
lahf
pop
jle
sbb
push
fcompl
repnz
pusha
stos
cltd
std
xchg
xchg
mov
leave
jg
cltd
std
mov
add
mov
inc
jne
cltd
xor
cmp
nop
popa
mov
pop
xchg
xor
ds
test
inc
fcoml
cltd
sub
pusha
cmc
jle
addr16
lea
and
hlt
jge
xor
cmp
cmpb
lahf
jle
inc
icebp
xor
mov
pop
fucomp
insb
push
aas
fwait
sti
stc
xor
add
pop
lock
pop
mov
adc
ffree
jge
mov
outsb
mov
test
scas
js
mov
push
sub
ret
pop
faddl
popa
loopne
dec
test
repnz
add
jns
push
loopne
xchg
pushf
mov
fldenv
adc
hlt
dec
insb
add
jno
xchg
jecxz
xchg
insb
pop
hlt
subl
sbbl
xlat
sub
push
push
shll
xlat
fisubl
addr16
xchg
fcomps
aam
inc
daa
sahf
out
mov
mov
cmc
jle
adcl
jnp
rorl
xor
mov
push
xor
pop
insb
fisubrl
sbbl
iret
jne
testl
xor
push
push
or
pop
xorb
mov
dec
mov
jno
adc
fcomi
mov
cmp
push
add
jl
sub
das
pop
dec
cmp
cmp
jbe
popf
mov
cmc
aam
push
inc
cld
inc
insb
lock
or
sar
sti
roll
cmp
in
jmp
lods
inc
mov
mov
outsl
cmp
jp
imul
mov
mov
rorb
roll
dec
icebp
lret
jne
icebp
insb
fsubl
shlb
jbe
jmp
mov
push
inc
gs
jb
mov
mov
and
adc
xchg
loop
push
les
sbb
addr16
ficoms
fst
test
test
aaa
aaa
xchg
sub
ljmp
cmc
push
clc
or
test
daa
push
shll
sar
mov
mov
shll
and
dec
fimull
adc
cmpsl
ljmp
imul
sbb
popa
fsubp
mov
or
sbb
popa
das
xchg
movsl
jns
adc
movsb
test
out
mov
mov
ds
outsl
mov
dec
and
push
fstpt
mov
mov
cmpsb
mov
div
jo
ljmp
sub
xor
xor
jbe
scas
int
add
fwait
inc
dec
add
lods
push
cwtl
sbb
mov
and
js
ret
stos
lds
ss
dec
loopne
loope
hlt
ljmp
testb
mov
add
mov
xchg
mov
test
mov
xchg
push
mov
bound
push
lret
mov
in
aas
int
hlt
sbb
int
and
gs
fucom
mov
inc
xor
and
cwtl
mov
into
pop
mov
jbe
lret
loopne,pn
push
aam
in
test
pop
mov
dec
pop
insl
push
roll
loopne
imul
pop
stos
inc
push
shl
mov
mov
or
dec
mov
adc
jbe
pushf
xor
cmpsl
sub
push
ljmp
jl
movsl
cmp
mov
and
aas
fnstenv
dec
fnstenv
aaa
insb
add
jne
mov
dec
sbb
aas
xor
test
loopne
xor
xlat
xor
addr16
aaa
jle
mov
cmp
xlat
mov
daa
mov
out
in
mov
pusha
mov
popa
clc
movsl
jp
icebp
imul
out
lods
insl
add
out
loop
cli
cmpsl
ds
xor
lret
mov
inc
dec
in
mov
mov
fcomip
mov
in
mov
mov
outsb
and
aas
leave
pop
mov
jmp
rcr
pop
cmc
pop
push
loope
inc
int
pop
rcl
pushf
ret
aaa
dec
push
imul
fcmovnbe
insl
lret
loopne
cwtl
rcrl
add
cmpsl
push
sub
sbb
adcl
enter
enter
and
and
push
cmp
sbb
xchg
fldcw
push
cwtl
mov
arpl
outsb
dec
in
rcl
test
pop
xor
xchg
sbb
fidivrs
test
xchg
and
inc
jmp
push
stc
fdivrs
xor
pop
and
and
adc
inc
int
add
adc
lods
push
mov
sahf
leave
loop
je
into
inc
je
inc
iret
jp
mov
push
jno
outsl
int
imul
gs
or
xor
sub
js
inc
push
ret
in
sbb
ds
add
jge
fsts
xor
clc
cltd
mov
mov
inc
clc
push
sarl
and
or
call
imul
loop
inc
sbb
repz
dec
add
out
mov
int
pcmpgtb
mov
imul
decb
mov
lcall
daa
add
stos
imul
pusha
xor
jecxz
add
add
cmpsl
leave
or
fs
repnz
stc
fsts
adc
pusha
ljmp
icebp
pop
pop
movsl
pop
ss
push
pusha
mov
ds
lods
cltd
cli
pop
mov
inc
out
outsl
loop
imul
mov
and
and
xchg
xchg
pusha
cmp
outsl
nop
daa
pop
add
jb
mov
mov
add
and
lret
mov
out
mov
and
cmpsl
bnd
jp
add
push
pop
or
xor
jbe
push
repz
cmp
mov
cmp
inc
xor
sub
jg
mov
jns
pushf
fisubrl
pop
mov
leave
and
pop
out
insb
and
push
mov
rol
push
in
pop
pop
cmpsb
ret
jg
mov
rcl
pop
push
enter
adc
pop
in
or
in
mov
mov
adc
clc
lds
cs
cmpsb
xlat
mov
repz
sbb
jb
dec
pop
insb
daa
and
adc
xlat
xchg
jbe
into
lods
imulb
pop
movsb
mul
aaa
mov
dec
lds
imul
imul
stc
push
and
mov
mov
dec
mov
js
xchg
enter
andl
mov
dec
std
insb
add
scas
into
mov
mov
cmp
cli
pop
insb
fildll
movsb
cs
cmp
nop
push
outsb
jle
mov
mov
inc
adc
and
jle
push
and
scas
inc
inc
sti
mov
mov
dec
cwtl
out
into
enter
test
mov
adc
inc
inc
stos
mov
lahf
sbb
push
add
mov
jb
call
mov
dec
std
test
sbb
sub
inc
iret
in
xor
hlt
out
jae
pop
and
shlb
push
std
aad
imull
popa
cmp
add
add
sbb
imul
sbb
pop
inc
mov
push
xchg
push
dec
add
aas
jo
imul
test
lcall
mov
push
push
in
mov
popf
rcrl
lods
add
movsl
dec
loope
or
or
flds
pop
nop
insl
rcrb
rclb
inc
subl
jnp
pop
fisubl
xchg
ja
cmp
in
nop
or
sub
push
aam
popf
sti
inc
js
js
lds
outsl
mov
fsub
mov
nop
mov
test
and
jl
add
sub
push
dec
into
push
push
inc
fdivr
loopne
fisubrl
pop
adc
movsb
mov
movsb
imul
push
cmp
mov
in
fwait
inc
fcmovb
and
lock
in
mov
out
cmp
insb
xchg
cmpsl
inc
adc
pop
sub
mov
ret
push
xor
stos
incl
adc
rclb
popa
fmul
imul
mov
movsb
lahf
xchg
sbb
jns
cmp
enter
jmp
cmp
dec
in
fcmove
xchg
or
sarl
adc
add
jae
fcompl
cmp
pop
add
sti
pop
cmp
xchg
jo
inc
lret
out
mov
mov
xchg
nop
adc
movsb
scas
adc
push
imul
add
repz
pop
jbe
adc
out
pop
sahf
xor
fiadds
dec
out
movsl
fwait
repnz
sbbb
or
push
mov
mov
inc
jnp
sub
mov
fisttps
mov
mov
test
jnp
hlt
pop
dec
adc
cld
inc
outsl
in
std
jno
mov
dec
xchg
pop
testb
sbb
lret
out
jnp
in
ja
mov
mov
cld
mov
outsl
inc
into
into
jo
and
shll
mov
push
adc
xchg
ret
rcl
sub
jl
cmp
inc
jno
adc
mov
data16
jle
sub
sahf
cwtl
mov
push
outsb
mov
sub
addr16
push
and
imul
sbb
jae
xchg
inc
add
mov
and
jno
popf
lcall
outsb
jmp
or
mov
fsubl
and
mov
mov
sbb
mov
movsb
cmp
sub
mov
dec
mov
pop
lods
jmp
cmp
int
dec
incl
andb
shll
std
mov
cmpsb
cmp
orb
mov
iret
repz
stos
in
sbb
loopne
aam
fdivl
adc
xor
mov
pop
pop
stos
push
ss
je
lret
jnp
in
in
jg
icebp
xchg
dec
sub
mov
and
mov
push
pop
inc
lret
bound
jmp
or
pop
imul
imul
jmp
mov
pop
repz
mov
mov
popa
loop
ds
push
jmp
testl
cmpsb
sti
in
cmp
loope
xchg
push
jno
outsb
xchg
jae
jecxz
dec
aam
adc
adc
arpl
sub
movsb
jecxz
and
push
fidivs
mov
in
out
dec
adc
shlb
mov
mov
scas
jno
fsubl
ds
push
pop
mov
push
cmpsl
xor
ja
cli
test
mov
push
out
xor
sbb
or
mov
jnp,pt
shrl
ffreep
or
movsl
jns
lcall
inc
adc
test
rorb
mov
sbb
repnz
add
mov
and
and
arpl
push
lods
jae
in
cli
xor
ss
xchg
jge
add
std
jp
dec
fbld
jbe
scas
cmp
xchg
sbb
fs
xchg
pop
adc
inc
pop
push
popf
inc
sbb
out
mov
mov
in
and
mov
addr16
jnp
aad
xor
mov
inc
mov
adcl
sbb
and
insl
aas
aad
or
rol
pop
hlt
push
push
sub
aas
jnp
dec
in
iret
icebp
sub
jge
int
and
ja
or
mov
xchg
cmpsb
or
sbb
not
push
sub
fidivl
loopne
push
sbb
aad
js
icebp
sti
test
push
xor
xchg
in
sar
fisubrl
push
aaa
mov
inc
mov
out
fscale
cltd
out
in
mov
in
sbb
xchg
jns
loope
rol
mov
ret
pop
inc
pop
test
lcall
push
loopnew
and
inc
repz
imul
add
and
stc
cmp
fbstp
je
jae
daa
inc
fs
iret
fcmovne
test
in
or
cmp
aam
pop
and
loopne
arpl
mov
dec
cltd
inc
test
mov
adc
adcb
arpl
jns
and
sub
repz
aad
jmp
js
rcrl
push
dec
dec
into
cmpl
xlat
and
mov
scas
pop
sbb
sub
cld
xchg
subl
push
lret
pop
jns
add
mov
lock
mov
xor
mov
insb
push
push
fnsave
sbb
clc
inc
clc
xchg
xchg
mov
xchg
fisubl
pop
mov
inc
fildll
sti
or
icebp
lods
fldenv
fstpt
popf
inc
loopne
dec
inc
test
arpl
sahf
stos
inc
or
push
pop
xchg
adc
sbb
aas
push
pop
sub
pop
repnz
jns
or
push
imul
stc
daa
addb
and
lock
int
mov
xlat
mov
and
cmp
movsl
sbb
dec
cli
decb
mov
sarl
xlat
mov
les
dec
insl
aaa
scas
orb
mov
sub
push
loope
roll
xchg
cwtl
fnstenv
enter
push
push
xchg
adc
mov
movsl
mov
fs
sahf
push
mov
out
rcrb
jle
xor
test
mov
fsubs
add
fs
stos
mov
roll
sub
rolb
and
inc
cmpsl
cli
jae
cwtl
rcrb
movsb
aaa
jecxz
pop
mov
sti
int3
xor
cmpsl
dec
into
pop
jmp
push
test
lea
scas
js
loope
or
push
mov
push
mov
cld
out
mov
xchg
add
es
push
in
pushaw
lcall
push
test
imul
fiaddl
idivl
mov
sub
scas
cmpsl
mov
pop
shr
xor
test
outsb
jg
mov
dec
xchg
jmp
ret
shlb
push
fmuls
jns
aaa
testl
cwtl
pop
aad
outsl
cmp
data16
dec
mov
mov
dec
fcmove
mov
out
and
pop
nop
xor
cmpb
or
cs
push
aaa
mov
scas
adc
pop
push
mov
mov
into
xor
inc
inc
fsin
mov
pop
mov
push
xchg
jno
sub
push
inc
inc
xlat
arpl
jne
pusha
cmpl
test
sbb
fcoml
xchg
xchg
cmp
dec
sub
mov
jns
out
mov
sbb
lea
cmp
call
sub
sbb
jge
push
js
dec
movb
jns
xchg
dec
loopne
mov
nop
dec
jecxz
sti
call
aad
cmp
test
fildl
fisttps
cmpsl
in
push
inc
ret
mov
cld
outsl
bound
loope
xorl
fsubr
lods
inc
sbb
and
xchg
imul
push
and
into
cmp
pop
fisubrl
push
pusha
lock
dec
int
mov
xor
clc
push
popa
xchg
mov
inc
mov
cmp
push
push
in
xchg
mov
imul
test
xlat
stos
mov
adc
cvtpi2ps
gs
out
add
es
xor
and
xchg
sbb
scas
sub
iret
xor
repz
mov
lret
mov
jmp
popa
fbld
repnz
sti
loop
and
ret
rolb
sbb
scas
js
sub
cmc
aam
scas
or
inc
arpl
mov
je
rcrb
mov
lods
iret
rcr
ret
lahf
daa
hlt
add
jno
mov
out
in
aas
cmc
pop
and
dec
mov
sahf
push
sbb
cmp
into
lea
rcll
lds
sub
ficomps
push
fsubr
pop
cs
outsb
sub
jecxz
pop
cmp
in
popa
fmuls
sahf
jg
dec
mov
into
sar
jbe
js
adc
das
mov
jbe
or
ss
shl
out
leave
cmp
mov
std
mov
xchg
jmp
jns
outsl
stos
adc
mov
fwait
push
cmpsl
orb
ss
xor
add
jecxz
or
repnz
cmp
cmpsl
cld
icebp
jmp
subb
mov
xorl
push
mov
out
xchg
mov
test
xchg
push
jle
jle
js
loop
sub
ja
add
mov
sbb
add
sub
jae
pop
cmpsl
decb
adc
jne
scas
js
sub
jbe
inc
push
cmp
jecxz
xchg
cwtl
shll
sti
add
pop
push
add
xor
gs
cmpsb
nop
std
dec
jno
cld
xchg
pop
lahf
sbb
out
test
gs
inc
xchg
imul
cmp
inc
sti
xchg
xor
mov
popa
cwtl
jp
mov
fcmovnb
pop
in
push
adc
push
xlat
int3
loopne
push
cmpsl
ret
mov
mov
xchg
xor
bound
mov
xchg
sbb
pop
push
add
add
shrl
addr16
mov
je
aad
inc
inc
push
stos
xchg
cmp
inc
clc
jmp
inc
cli
les
gs
cmpsl
in
les
rcrl
add
shll
pop
dec
jecxz
push
mov
aad
xchg
and
jbe
pop
mov
pop
sub
adc
jno
aad
xchg
pop
or
mov
in
sbb
jae
icebp
in
std
aas
test
int
loop
xor
je
pop
andl
dec
cmpsl
fldenv
jg
push
pop
mov
leave
test
out
outsl
cmc
loopne
ret
and
dec
popw
loopne
and
mov
aaa
mov
sbb
inc
inc
jl
pushf
mov
sub
repz
mov
push
in
mov
inc
test
xor
scas
ds
faddl
int3
push
mov
test
leave
rcr
mov
cs
push
lds
outsb
xchg
ret
daa
repnz
pushf
sbb
push
mov
lcall
adc
loop
rcrb
xchg
push
sub
mov
inc
jg
test
das
cmpb
and
fwait
arpl
aaa
ret
inc
xchg
cmc
xlat
mov
pop
dec
xor
repnz
in
jmp
xchg
add
lds
and
mov
cmpsb
pop
scas
fdivs
enter
test
sbb
mov
arpl
jmp
cld
shll
shlb
add
cli
push
sbb
add
lahf
cld
mov
jbe
adc
sub
jmp
je
pop
xor
dec
push
jle
cmp
fwait
xor
push
aas
or
xchg
and
pop
ja
or
cmp
xor
pop
mov
jmp
cmp
jbe
mov
adcl
add
jb
cmp
jae
cmp
cmpsb
test
std
loopne
and
es
int3
mov
inc
xchg
enter
fwait
sub
repz
dec
outsb
mov
cmp
jno
pop
flds
xchg
rcll
bnd
jo
or
enter
and
imul
jmp
cmpsb
cmpsb
imul
daa
cmp
add
int
in
inc
dec
idivl
pop
ja
mov
mov
mov
mov
sub
cmpsb
shlb
xchg
mov
cmp
sahf
and
sbb
mov
pusha
jle
xchg
stos
rcrb
movsb
shlb
ret
mov
cmp
xor
jne,pt
out
movsb
lds
sub
les
lea
mov
ja
mov
dec
sbb
lahf
mov
das
jge
insb
jg
mov
cmc
cmovge
jbe
ror
jecxz
pop
sarl
stos
rcl
aas
xchg
dec
inc
push
mov
fldenv
pusha
jp
xchg
aas
or
gs
sub
cmpps
push
outsl
push
std
shrb
mov
mov
add
inc
adc
popa
clc
pop
inc
mov
xchg
pop
or
mov
icebp
out
mov
cmc
cmp
mov
inc
fsubs
pop
jns
xor
pop
aaa
clc
sbbb
std
stos
cmp
mov
sbb
sbb
in
pop
aad
jp
xchg
pop
in
xor
mov
movsl
clc
push
sbb
mov
xchg
insl
imul
hlt
mov
mov
imul
ja
test
add
xor
or
je
push
call
fxch
subl
mov
sbb
jl
lahf
cmp
push
into
nop
fwait
test
imul
negl
sub
pop
jae
aaa
dec
sub
pop
sbb
inc
inc
xor
into
loop
xchg
add
les
xchg
jbe
sti
inc
xchg
xchg
sbb
aam
lcall
adc
repz
bnd
in
jns
lcall
jle
push
pop
scas
subb
int3
pop
imull
mov
xlat
add
add
sarl
movd
rorl
loope
xor
sarl
pop
dec
pop
jo
inc
fs
shlb
push
out
stc
out
xor
pop
dec
jmp
out
add
xchg
or
out
adc
inc
cmp
mov
mov
out
adc
push
sub
idivb
add
xor
xchg
test
idivl
nop
sub
jae
shll
stos
stc
out
xchg
inc
sbb
jo
lahf
jp
enter
dec
in
orl
sub
mov
fistpl
fnstenv
xchg
loope
stc
sbb
or
leave
je
aad
ja
loope
jnp
rep
je
out
dec
xchg
js
mov
movsl
paddb
push
in
in
push
xchg
mov
jbe
push
test
or
dec
xor
test
mov
dec
lods
cli
mov
ret
sbb
loopne
mov
pop
lds
rcl
and
mov
flds
ljmp
and
lahf
jecxz
lds
add
gs
bound
popa
mov
jno
ss
stos
pop
cmpsl
popf
mov
mov
jb
fwait
mov
shl
push
add
rorb
shlb
lods
sbb
and
int3
daa
outsl
bound
pop
mov
sub
in
movsl
push
ss
jmp
xor
out
in
xchg
push
mov
fmull
mov
xchg
inc
push
test
xor
xor
inc
mov
pop
adcl
dec
and
insl
cmc
mov
sbb
push
xor
mov
rcl
in
pop
repz
in
jecxz
mov
roll
rcrb
or
aam
out
jnp
jle
pop
nop
xor
les
cmc
mov
or
xchg
sub
xchg
or
movsl
cmp
lods
aad
ja
ret
lret
ds
lcall
in
stos
inc
push
push
leave
mov
shl
popa
push
icebp
jle
pop
std
push
mov
xor
scas
xor
fstpt
xchg
sub
or
jecxz
enter
ffree
sbb
insl
xor
fildl
cmp
mov
add
mov
roll
popf
in
sub
mov
js
xchg
mov
test
cmpsl
push
pop
les
add
add
loope
fwait
cmpsl
adc
sti
sbb
dec
jg
push
and
rol
shlb
mov
push
pop
movsl
lds
sub
push
mov
fsubrl
pop
incl
notb
push
fcoms
pop
xor
popf
mov
je
mov
das
fs
pusha
fucomip
out
adc
cwtl
xchg
jbe
mov
add
aam
iret
dec
hlt
popa
js
scas
imul
push
stos
iret
xor
dec
cmpl
xchg
outsb
sbb
mov
sub
test
sbb
gs
mov
enter
fnstcw
xchg
ret
movsb
in
push
add
xor
push
movsb
cmp
ljmp
int3
and
sbb
add
dec
popa
filds
movsl
lret
pop
add
es
mov
mov
jne
xor
inc
sbb
mov
push
jno
xor
mov
inc
dec
call
aas
push
inc
fwait
cmp
fisubrl
sti
cmp
outsb
cmp
push
hlt
fistps
push
mov
data16
and
fincstp
push
sub
cmpsl
add
xorl
insl
add
insl
inc
cltd
and
sbb
test
mulb
jle
or
lds
popf
xchg
pop
xchg
mov
shll
sub
imul
mov
cld
popf
jb
fdivl
insl
movsb
popf
xor
lahf
lcall
cld
repz
jno
pop
lahf
mov
shl
mov
scas
and
sbb
outsb
jg
movsl
ljmp
jbe
or
out
daa
aam
pop
mov
scas
test
dec
or
sbb
adc
popf
cmc
jl
add
or
rclb
sub
or
push
lcall
and
xchg
cvtps2pd
jb
xor
add
stos
fs
lret
out
sti
fldt
rcl
fsubp
inc
push
dec
sbb
movsb
jnp
mov
pop
dec
sub
out
test
mov
pop
aaa
jo
adc
pusha
or
imul
movsl
sbb
dec
lds
and
ja
dec
fdiv
pop
ficoml
push
fisubs
pop
sarb
stos
lret
fidivs
fs
push
clc
cli
ds
scas
sbb
jl
imul
imul
add
inc
jmp
mov
addr16
fxch
fs
push
ljmp
cmp
push
imul
push
andb
int
shl
out
iret
jbe
dec
inc
gs
test
addb
aad
mov
ret
jno
insl
aas
std
and
sahf
aas
movsl
xchg
add
dec
sti
mov
mov
outsb
pushf
negl
sbb
adc
and
add
sbb
jo
jecxz
inc
lcall
xchg
mov
xchg
mov
fisubs
icebp
jge
aas
push
clc
popl
inc
insb
movsl
xchg
push
loopne
out
xchg
push
and
or
lcall
jne
sarl
mov
sbb
mov
inc
in
fnstcw
jecxz
inc
fldenv
inc
sahf
je
adc
lods
and
sbb
jle
mov
fs
push
xchg
jne
or
insl
add
les
fs
imul
and
loopne
jae
inc
pop
into
xchg
cmp
test
and
bound
inc
dec
inc
push
in
lret
stc
xor
cmpsb
sbb
cmp
mov
popa
rorl
mov
mov
push
repnz
pop
cmp
xchg
mov
mov
add
mov
and
push
test
cmp
les
add
dec
xchg
fwait
xchg
add
add
int
imul
cmpsb
aad
es
pop
pop
out
xor
testb
mov
shrl
mov
shrl
pop
aaa
out
cmp
sbb
cmp
push
mov
mov
cmovs
xchg
mov
in
sub
pop
inc
push
in
sub
jl
add
in
push
inc
lcall
and
int3
outsl
repnz
out
inc
shrl
add
jo
and
lcall
daa
lret
jmp
mov
inc
push
sbb
sarl
data16
cmpsl
ds
fdivs
inc
jno
in
test
out
scas
inc
std
jmp
add
rolb
jbe
or
mov
shlb
cmp
jns
sub
stc
xlat
push
sub
mov
xchg
subl
lea
cmp
dec
loopne
xor
cmp
addl
mov
cmp
cmp
or
xchg
and
ljmp
punpcklwd
leave
xor
std
loop
imul
sub
push
sbb
jnp
mov
or
pusha
les
jecxz
adc
mov
adc
call
xlat
mov
and
leave
sub
or
outsb
js
pushf
mov
enter
cli
or
pop
imul
dec
sub
dec
movsb
call
testb
pop
fwait
and
lods
pop
jg
nop
lods
add
shrl
or
fs
ss
push
mov
loopne
fsubrl
xor
mov
sbb
js
mov
mov
mov
lds
xchg
add
test
dec
out
repnz
pop
push
add
cmp
leave
arpl
mov
cltd
pushf
into
and
push
inc
dec
dec
add
adc
sahf
push
cmp
fcoml
sub
xor
add
ja
fisttpll
ret
imul
stos
shll
mov
nop
outsl
inc
xchg
je
and
and
push
xor
pop
xchg
inc
mov
adc
ljmp
mov
add
cmp
mov
inc
and
es
mov
sub
shll
ret
lds
ss
sbb
sbb
sub
pop
xchg
movb
jb
pop
push
repnz
inc
ds
push
adc
xchg
inc
fs
ds
imul
mov
adc
add
pusha
das
sbbl
cmpsl
jno
mov
fistl
push
ljmp
and
and
mov
lret
outsl
mov
or
mov
out
adc
cltd
sub
fs
cmovp
inc
push
insb
cmp
pop
mov
cmp
in
sarl
adc
mov
lahf
lret
lret
shlb
sub
dec
xchg
popf
addl
inc
divb
jns
mov
bswap
leave
xchg
xor
aad
adc
mov
lds
or
or
mov
add
clc
lods
and
xor
in
add
adc
cmc
mov
nop
stos
mov
loopne
push
jecxz
pop
leave
push
cmc
mov
adc
pop
mov
test
xadd
clc
loope
add
and
or
bound
sahf
dec
sub
xchg
jg
clc
aaa
jp
rcrl
outsb
inc
pop
lock
add
mov
lret
and
xchg
pop
lock
in
jg
xchg
mov
pusha
or
scas
adcw
pushf
ficompl
mov
add
in
fdivrs
cmp
jl
and
aas
push
cmp
mov
outsl
sbb
pop
jae
sub
dec
ds
scas
adc
add
push
in
add
add
nop
lods
or
xor
test
or
pop
mov
inc
clc
sbb
sbb
push
std
mov
pusha
pop
ss
decb
jnp
or
mov
into
loope
jo
xchg
scas
adc
pop
jb
icebp
mov
sbb
cmp
dec
mov
sub
adc
mov
sbb
jne
mov
outsl
jnp
fidivrl
ret
pop
test
sbb
clc
cmp
mov
mov
imulb
xchg
incl
push
lods
mov
push
stos
mov
xor
stos
adc
incb
jbe
mov
dec
cmpsl
daa
cmp
and
mov
iret
lret
ja
out
and
pop
popf
outsl
bnd
push
movsb
add
push
dec
jl
mov
sub
xchg
xor
push
leave
push
adc
data16
xchg
jno
hlt
fcmovnbe
dec
lahf
or
shll
mov
and
fidivl
ret
sub
in
adc
fisubs
adc
or
ret
mov
lods
es
inc
push
ljmp
imul
inc
movsb
cmp
ret
sub
nop
fistpll
insb
lds
lret
or
and
mov
addr16
shlb
int
mov
jbe
push
cmp
lea
sar
repnz
scas
inc
icebp
insb
orb
leave
leave
shll
nop
mov
in
jge
dec
repnz
inc
lcall
pop
das
arpl
rclb
les
sbb
push
fnstsw
nop
and
mov
rcr
jge
jle
roll
ret
push
dec
pcmpgtd
inc
push
repnz
cltd
pop
inc
aam
mov
push
xchg
cmp
adc
mov
mov
sahf
mov
fisubl
cmp
ret
push
sbb
int
and
leave
scas
lea
sahf
in
adc
loop
out
cmp
push
sub
push
inc
fldl
fs
dec
sbb
fcmovnbe
and
sub
mov
test
pop
ret
mov
outsb
aad
add
jns
push
mov
xor
insl
xchg
iret
mov
push
xor
fmuls
mov
jae
ja
adc
push
jmp
push
or
je
xchg
push
inc
cmpsl
jns
add
dec
pop
mov
out
ljmp
movsb
sbb
sub
pop
xchg
jo
sbb
popa
xor
loope
ret
push
test
sbb
xor
clc
jmp
push
or
pop
in
fmull
lds
stos
je
cs
or
bound
mov
cltd
pop
adc
ljmp
imulb
and
fimull
jno
fildl
sbb
cmp
jp
mov
xor
popa
cmp
mov
ret
sbb
dec
outsb
aaa
push
pop
movsb
jns
fstpl
adc
addr16
dec
pop
push
pop
adc
test
mov
ret
hlt
insb
mov
cmp
mov
mov
out
ja
test
xchg
stos
sub
mov
mov
sbb
fldl
mov
add
clc
popf
sbb
int3
scas
inc
mov
xor
hlt
fimuls
cmc
cmp
pop
dec
shr
jmp
pop
mov
xchg
shll
inc
jecxz
cmp
add
dec
int3
push
insl
sbbl
fsubl
sub
outsl
push
add
popa
rorb
jo
add
enter
push
arpl
or
lcall
jmp
push
lcall
in
adc
pop
push
cmp
clc
push
mov
mov
cmp
sub
call
ret
fwait
push
imul
cld
inc
cli
xchg
adc
xchg
fwait
xor
push
push
cwtl
mov
mov
popa
jmp
pushw
pop
clc
and
xrelease
cwtl
lahf
or
loop
pop
bound
xchg
orb
xor
mov
and
popa
test
and
sti
popa
ss
sbb
data16
push
cmp
cmp
push
insl
test
scas
hlt
mov
xor
repnz
jle
adcb
sahf
pop
pushf
xor
and
xchg
outsl
sbb
mov
adc
mov
lock
fisttpl
inc
xorb
sub
sbb
or
mov
scas
push
mov
or
adc
out
jae
lret
cmp
xchg
dec
insl
jmp
rcrb
pop
adc
mov
repz
test
ficompl
decb
jbe
xchg
xor
inc
dec
ljmp
sub
push
stos
mov
aad
stos
sbbb
into
pop
inc
xor
adc
shrb
leave
pusha
mov
enter
mov
sbb
or
das
std
rorb
ja
xchg
push
inc
lcall
in
das
jl
mov
push
or
loopne
sbb
cli
outsb
jle
test
ret
pop
gs
pop
xchg
aaa
es
or
shrl
mov
xor
xchg
mov
xor
mov
je
inc
sub
xchg
pop
lahf
fwait
add
addr16
stos
xchg
push
or
add
xor
and
xchg
xchg
inc
aad
mov
inc
rorb
outsl
mov
push
enter
push
stos
sub
out
aam
test
ss
push
sub
jmp
cmpsl
cmp
lds
and
xchg
shl
lret
adc
push
sbb
daa
leave
test
sub
adc
mov
call
and
ret
sar
enter
pop
push
and
cmp
stos
lds
pop
mov
movsb
jecxz
es
pushf
inc
orl
out
push
cli
xor
jmp
or
leave
jbe
cmp
ret
xchg
jno
cmp
iret
leave
and
pop
jae
sarb
ret
sbb
subb
fcoml
or
leave
push
icebp
sbb
xchg
aam
test
lret
cld
jp
les
shlb
or
gs
sbb
jp
scas
inc
push
mov
int3
flds
movsl
fsubrs
fisubrl
inc
jg
mov
aaa
cltd
mov
xchg
jmp
jl
xlat
pop
lock
xchg
shlb
mov
pushf
sbb
dec
add
cmp
xlat
pop
push
adc
mov
and
aas
push
ljmp
dec
sti
cwtl
out
mov
mov
mov
popa
fnstsw
rorb
arpl
or
pop
pop
lock
rclb
xor
sub
jp
shll
adc
cmp
mov
test
adc
cmp
mov
pusha
push
mov
cmp
imul
jb
in
inc
xchg
xor
imul
icebp
cmp
and
and
inc
divb
fdivs
cmp
pop
or
adc
popl
inc
pop
cmp
pop
push
aam
shrb
enter
inc
insl
add
aas
xor
imul
lock
dec
inc
fs
leave
mov
fimull
mov
cld
lods
js
lds
les
jb
push
xor
pop
mov
fs
loope
jo
insl
ss
lock
ret
sbb
stc
hlt
je
add
push
xchg
jle
sar
mov
adc
push
xchg
xchg
lock
int
xchg
xorl
out
and
or
and
add
ficoms
les
xor
repnz
std
mov
jg
jns
fidivs
mov
mov
shll
in
mov
push
loop
imull
jecxz
sbb
test
jle
jne
jo
mov
adc
clc
ljmp
cltd
dec
shll
ds
lcall
hlt
mov
pushf
pop
cwtl
dec
stos
je
sub
fnsave
test
mov
pop
dec
mov
pop
cmp
jecxz
add
jmp
or
aam
xchg
sti
and
and
dec
xchg
lahf
idivl
es
pop
in
add
push
loop
cmp
stos
inc
popa
pop
repnz
lret
lock
and
aas
shlb
mov
dec
adc
jnp
enter
ret
fisttps
std
arpl
test
out
cmp
inc
lcall
inc
fsub
jae
mov
pop
xchg
dec
shlb
inc
rcll
lods
mov
int3
loopne
and
hlt
and
xchg
inc
pop
lret
je
add
mov
mov
mov
clc
leave
pusha
push
rcrb
ja
fwait
sti
lods
test
mov
arpl
outsl
mov
int
sahf
loop
mov
xor
mov
sbb
and
add
hlt
jb
inc
xchg
outsb
xor
xchg
pop
in
jne
jae
dec
int
in
insb
mov
rcrb
fidivrl
ljmp
xor
int
pop
je
jg
mov
mov
aad
insb
es
test
mov
insl
xchg
or
outsb
cmc
pop
ret
jg
xchg
push
push
xchg
cmp
jge
mov
mov
stos
je
pop
xor
dec
fwait
mov
out
push
loopne
jne
sub
xchg
xchg
push
outsl
es
mov
fbld
mov
in
sbb
push
sbb
sub
sahf
je
jg
push
lret
popa
and
or
inc
call
ds
jb
jecxz
xchg
mov
inc
out
or
cmp
out
cmp
ja
gs
xor
dec
adc
mov
pop
shrl
xor
fs
pusha
daa
push
dec
or
popf
cmp
fs
insl
xchg
sub
add
ds
mov
mov
cmp
aam
pop
push
sub
fldenv
mov
mov
dec
xchg
dec
hlt
sbb
shrl
clc
inc
pop
arpl
adc
ja
lds
pop
adc
stos
leave
clc
into
jae
ja
sbb
lods
mov
fmuls
out
push
addl
scas
aam
mov
sub
mov
mov
push
dec
mov
imul
lret
test
push
inc
stos
mov
lret
outsb
scas
xor
pop
add
xorl
in
mov
cs
cwtl
jnp
and
adc
mov
jl
cmp
loop
sbb
out
ret
pop
cmc
hlt
cwtl
in
pop
push
mov
push
popf
ja
xchg
dec
pushf
sbb
add
repnz
jae
inc
xchg
and
es
stc
testb
sbb
push
dec
sbb
js
dec
aaa
adc
mov
outsb
sub
xchg
jne
mov
pop
push
dec
loope
jle
adc
out
xlat
push
ds
xor
into
cmpl
xor
repz
cwtl
sbb
inc
jbe
out
movsb
xchg
test
rorb
stos
pop
xor
les
mov
es
push
cltd
cmpl
rcll
sbb
pop
mov
mov
popf
jmp
xchg
aam
hlt
popf
jmp
testl
or
inc
mov
jnp
popa
sahf
xor
mov
mov
ret
dec
loope
and
imul
adc
aaa
insl
imul
insb
jns
or
fs
jle
mov
cwtl
jb
fildl
fwait
inc
inc
xchg
enter
popf
testb
fisubrs
es
cltd
ret
xadd
sub
sub
clc
sub
fcmovbe
xchg
addb
mulb
cmp
rep
xchg
inc
push
fwait
movsl
pop
dec
div
popa
xor
lcall
push
xor
add
xor
scas
push
test
add
addr16
lods
and
push
adc
xlat
inc
or
fstl
pop
mov
cmp
sbb
js
loope
data16
jge
mov
mov
aaa
int
mov
xchg
mov
xor
ret
insl
mov
ret
mov
scas
jp
int
iret
pop
mov
fcomps
lds
cltd
mov
imul
push
pop
push
out
mov
ljmp
pop
rolb
mov
hlt
ret
cmp
mov
add
sbb
inc
xchg
mov
sub
mov
xchg
xor
cmp
mov
dec
jmp
div
fld
mov
int3
cmp
mov
frndint
pop
or
adc
mov
xchg
loopne
cwtl
or
test
rcrb
popa
lret
jg
iret
jecxz
mov
iret
out
and
cld
pop
inc
or
into
jle
notl
sub
fcomi
push
add
mov
adc
and
sub
or
xchg
cli
pop
ret
mov
mov
xorb
ret
add
inc
mov
es
ds
inc
fldt
insl
mov
or
add
jne
add
jbe
jo
push
push
mov
xor
inc
xlat
rclb
jo
pusha
fnstenv
stos
bound
test
clc
cmpsl
and
xor
mov
mov
or
pop
stos
fbld
imul
add
test
shll
incl
jmp
cmp
lahf
inc
outsb
xor
xor
dec
test
jb
xchg
sbb
xor
adc
mov
call
cmp
aaa
ret
inc
gs
int
pop
xlat
stos
fadds
inc
sbb
in
inc
out
adc
addr16
push
jmpw
sub
mov
pop
fldenv
xchg
call
rcll
add
loop
movsl
mov
mov
repnz
xchg
sub
or
or
pop
mov
pop
and
xlat
push
xchg
das
mov
pop
add
jno
je
enter
shr
in
sbb
mov
pop
or
test
xor
mov
sub
fsubrs
pop
or
sbb
mov
jns
cli
stc
inc
les
js
push
mov
mov
pop
mov
push
push
mov
popf
imul
ret
xchg
and
inc
in
inc
shr
je
push
cli
push
fdivrs
jb
movsb
jb
push
mov
orb
or
lods
pop
adc
in
mov
cmp
mov
mov
jle
fwait
jbe
aas
loop
fwait
jbe
mov
jge
mov
es
int
sbb
mov
add
cmpsb
das
cmp
add
popa
cmp
jge
ret
and
nop
and
mov
sbbl
outsl
vunpckhps
push
dec
imulb
xchg
mov
or
sbb
xchg
push
sbb
sbb
cmpsb
add
dec
adc
es
xchg
inc
imul
test
add
push
mov
out
mov
push
or
xchg
push
cmpl
in
mul
cmp
das
or
dec
fld
inc
outsl
fldenv
lret
iret
addb
adc
cmp
jg
xor
shrl
pop
in
xchg
mov
inc
popf
test
cld
and
cmp
jge
pushf
mov
and
sbb
adc
sbb
mov
mov
xlat
and
mov
call
cli
iret
or
lahf
popa
lcall
pop
repnz
add
cmp
mov
and
sbb
dec
mov
xchg
les
mov
mov
nop
movsb
mov
mov
hlt
push
cs
pop
jl
mov
in
in
or
inc
push
icebp
xor
mov
inc
sbb
xchg
jmp
adc
scas
fidivrs
repz
in
bound
pop
xor
xchg
sbb
or
pusha
jae
sahf
or
inc
jecxz
in
insl
xor
sub
or
jmp
scas
fwait
pusha
bswap
dec
sub
sub
out
in
pop
mov
lea
icebp
scas
inc
aas
mov
mov
ficomps
je
subb
pop
mov
nop
bndstx
xor
pop
mov
orl
fdivrl
pop
int
mov
xchg
ret
fucom
ljmp
hlt
jmp
xor
jg
movsl
lahf
lods
mov
or
lahf
mov
and
jnp
xlat
pop
ljmp
movsb
out
mov
mov
std
loop
fcmove
adc
adc
mov
lcall
inc
fcompl
xor
mov
pop
test
mov
pop
arpl
das
sub
xchg
js
cmp
icebp
sbb
push
mov
dec
xchg
bound
mov
jnp
mov
xchg
or
jns
testl
enter
aam
sbb
mov
mov
pusha
pop
into
xchg
xor
nop
inc
aam
fmulp
mov
jne
xlat
into
imul
xor
arpl
fisubrs
aad
pop
pop
stos
add
adc
clts
clc
xor
ret
daa
xchg
push
test
inc
push
mov
inc
pushf
fdivp
push
mov
jns
xor
xor
fiaddl
xchg
rcl
iret
out
fdivrl
stos
mov
add
jno
and
mov
jbe
pop
stc
adc
mov
flds
popf
push
cmc
adc
movsb
xchg
cmp
fimuls
push
ljmp
jno
cltd
loope
cli
cmp
movsl
mov
xor
movb
iret
fisubs
fsubs
jmp
xor
in
loope
mov
movsl
shlb
fcmovu
jno
or
roll
dec
addb
xchg
jb
jbe
shl
cmp
bound
lahf
add
sbb
roll
jae
cmpsb
sub
nop
imul
and
jno
adc
dec
sti
xor
fwait
jmp
push
jno
iret
fwait
fwait
sti
mov
inc
or
or
push
inc
rolb
movsl
decb
xor
and
aam
inc
mov
cmp
adc
int3
adc
cmpb
push
mov
fbstp
clc
test
neg
rcr
addl
mov
add
ja
lock
mov
movsb
pop
repz
sbb
sbb
pop
arpl
shll
xor
js
push
mov
shrl
and
add
popa
xor
xchg
jae
dec
test
dec
push
subb
insb
lock
lcall
in
call
aaa
mov
dec
mov
test
pop
sahf
iret
pushf
stos
stos
sarl
stos
in
dec
bound
enter
mov
test
pop
pop
mov
ret
jecxz
ja
sbb
jp
pop
stos
jo
test
rclb
js
inc
icebp
das
addr16
cmp
andb
push
add
pop
js
inc
loope
jns
cmp
xchg
pop
js
cmp
mov
stc
fisubrs
inc
xchg
lret
test
cltd
and
inc
jne
cmpsl
imul
inc
sub
dec
lock
in
scas
call
xor
or
outsl
insl
ret
add
cmc
pop
push
pop
adc
pop
cmpsb
lock
jo
cld
mov
out
fimull
jb
jo
in
inc
push
jle
inc
testl
nop
mov
or
jnp
lods
fidivs
pop
int
movsb
int3
jb
mov
lods
cltd
and
in
in
lret
xlat
mov
fistps
gs
sbb
xor
movsb
cmp
xor
out
push
sub
push
test
neg
adc
into
add
cmpsl
ret
loope
inc
popf
leave
or
movsl
dec
int
fistpl
sub
stos
dec
mov
ficoms
push
dec
mov
xor
lret
lods
sub
adc
pop
cmp
dec
loop
sub
add
push
mov
mov
xchg
shll
dec
outsl
dec
mov
jno
push
xchg
cmp
js
mov
jb
roll
movsb
inc
aas
es
jne
xlat
das
sbb
mov
mov
xor
sbb
push
in
icebp
adc
in
inc
clc
lret
mov
lret
xlat
andb
jb
ficompl
cli
adc
inc
inc
stos
hlt
mov
jp
ljmp
adc
jecxz
jae
xchg
mov
lds
test
popa
lods
pop
enter
sbb
movd
mov
and
pop
push
cmp
je
int3
repnz
cmp
test
imul
ret
mov
mov
icebp
xchg
pop
add
inc
out
aaa
sub
out
jge
inc
inc
adc
inc
push
dec
pop
add
xchg
lret
pop
mov
cltd
or
popa
jnp
jmp
xor
xchg
add
call
popf
mov
jecxz
mov
mov
jecxz
push
and
or
cli
fstpt
push
sahf
inc
mov
cli
pusha
or
inc
adc
and
outsl
lahf
repz
cmp
aaa
mov
sti
xchg
and
pusha
pop
adc
icebp
dec
sbb
mov
cs
stc
pop
pusha
inc
jbe
aad
fists
push
xchg
pop
fnstsw
pop
fisttpll
insl
imul
notl
nop
xchg
loope
and
sub
test
es
rcrl
push
jbe
ljmp
pop
or
adc
adc
xor
insl
sti
shll
mov
sbb
push
mov
dec
popa
adc
jns
or
das
push
test
dec
movsl
xchg
mov
and
test
push
pop
jmp
rcll
or
jae
stos
add
xor
imul
daa
dec
inc
lret
stos
mov
lock
jecxz
pushf
dec
pop
into
push
repnz
jl
xchg
mov
sub
enter
sbb
loop
test
fwait
push
cltd
cld
roll
test
and
int
aam
jmp
leave
xchg
out
fwait
call
into
xchg
sub
xchg
xchg
ror
adc
cmpsb
movb
push
xor
stc
and
fnstsw
shll
inc
sarb
dec
sbb
nop
scas
jge
xchg
bound
cmp
mov
add
mov
or
xchg
sub
fcompl
sbb
sbb
mov
iret
loope
dec
jge
xchg
jae
dec
mov
inc
stos
aad
dec
gs
mov
cmc
push
pushf
cmp
mov
lock
hlt
cmp
ja
out
sti
add
xchg
rol
fwait
and
sub
data16
aas
pop
es
cmp
es
fcom
mov
loopne
mov
add
sub
or
lods
dec
stos
jmp
ficoms
xchg
es
repz
jg
add
sbb
pop
push
ss
or
mov
in
mov
lahf
data16
fldl2t
jle
je
arpl
cmpsl
jecxz
in
imul
dec
xchg
jmp
dec
or
pop
sti
rcrb
rol
pusha
inc
sahf
mov
or
roll
aam
sbb
pop
jmp
fcoml
mov
data16
int3
ficoms
fs
mulps
push
mov
mov
and
xor
dec
negb
in
test
imul
mov
popa
icebp
mov
mov
mov
push
adc
mov
xor
fs
sbbb
pop
pushf
mov
adc
scas
pop
cs
push
pop
mov
dec
loop
xchg
aam
inc
lea
mov
pusha
xchg
xchg
sbb
and
xor
inc
out
jge
adcb
insl
add
dec
sbb
jp
mov
push
pop
es
inc
fstpt
stos
les
mov
lods
xchg
push
push
int3
pop
stos
mov
mov
mov
pop
xchg
fcoms
es
cmp
clc
and
shlb
lret
out
inc
ffreep
ja
insb
jmp
pop
mov
pop
out
xchg
mov
jg
mov
mov
ret
hlt
pop
sbb
inc
pop
jmp
or
cmp
jle
inc
mov
jge
jl
add
test
dec
pusha
sub
lods
mov
and
jle
out
in
shrb
xor
xlat
xchg
inc
cs
test
inc
lods
xchg
push
xor
xchg
mov
mov
add
js
adc
fwait
js
mov
shl
mov
mov
es
push
aam
int
push
stc
sti
pushf
daa
dec
push
in
in
out
stos
mov
call
cmc
mov
enter
inc
xor
xchg
dec
adc
in
sub
lret
sbb
jno
pop
sub
hlt
jae
xor
sbb
add
mov
loopne
fsubl
sbb
cltd
dec
inc
pop
repnz
pusha
in
inc
jbe
add
pusha
xchg
icebp
push
push
xor
fcoml
jns
mov
sbbl
adc
mov
jne
mov
decb
stos
xchg
push
lods
and
shrb
mov
iret
test
gs
out
add
mov
inc
mov
cmp
mov
push
cmp
movsl
xlat
jb
lea
pop
jne
nop
daa
loopne
test
scas
dec
fsubl
dec
das
jae
fwait
push
xchg
sbb
fwait
cs
xlat
div
jmp
pop
cmc
and
pop
cmp
ds
xchg
dec
out
imul
sbb
xchg
js
mov
mov
xor
mov
mov
arpl
and
mov
mov
mov
shlb
cmp
repnz
xchg
jl
jecxz
mov
inc
shlb
sti
or
data16
cli
mov
popa
pop
push
iret
fistpl
mov
jb
mov
leave
or
add
int3
sbb
andb
inc
lret
jl
xor
push
icebp
push
sbb
push
dec
add
push
lcall
pop
xchg
insb
sub
inc
pop
pop
gs
push
xchg
cld
jbe
push
cmp
outsl
imul
out
testb
add
jge
fbld
sub
or
hlt
jno
and
xchg
es
xlat
lods
mov
cli
or
fdivrs
mov
xchg
int3
push
gs
jecxz
mov
push
test
sbb
mov
notb
pop
bound
mull
mov
es
test
push
lods
movsb
push
or
push
movsb
adc
pop
inc
aam
js
push
mov
lret
jb
pop
dec
jo
xor
mov
scas
xlat
lret
dec
mov
mov
nop
inc
outsl
ret
out
sbb
fsubrl
mov
xchg
fucomip
ret
cwtl
das
cmp
mov
frstor
loop
sbb
lret
sub
pop
mov
repz
push
aas
lcall
ljmp
jbe
es
xor
inc
dec
sti
xchg
cmpsb
test
hlt
or
jnp
rolb
and
jle
shlb
fldenv
popa
lret
test
sbb
dec
add
fsts
clc
rcrb
ret
rol
push
dec
outsb
mov
and
ret
adc
test
or
cmp
adc
jb
aas
fsubs
jo
jns
lahf
pop
ss
xor
test
dec
mov
dec
imul
xchg
xchg
mov
adc
aam
sbb
fistpl
push
lcall
cwtl
mov
jne
loop
xor
mov
addr16
rorl
sub
stc
mov
testb
cwtl
xchg
dec
adc
std
enter
jne
adc
xchg
pop
out
fdivrl
loopne
xchg
xchg
mov
mov
inc
daa
fisttps
fs
fidivs
mov
shl
jo
fmul
adc
mov
ljmp
push
movsb
jecxz
xchg
mov
fwait
xlat
push
mov
sub
sbb
sbb
iret
mov
xor
sbb
and
push
mov
shl
mov
jmp
ja
sti
and
add
test
xchg
std
or
repnz
inc
aas
pop
dec
jnp
adc
pop
ds
sbb
insl
mov
or
test
or
jp
mov
sarb
mov
cmp
stos
cmpsl
out
mov
xchg
pushl
enter
dec
lret
mov
mov
mov
pushf
jg
xor
adc
scas
aam
mov
inc
mov
jbe
mov
imull
int
popf
push
js
pop
add
popa
push
repz
shlb
and
sub
leave
mov
in
in
nop
pop
mov
sbb
mov
cmpsb
mov
add
out
jg
sub
dec
mov
leave
sub
popf
sbb
jo
cmp
mov
lahf
mov
pushf
sub
mov
ret
mov
flds
or
xchg
sti
scas
insl
rorb
rorl
pop
ret
call
cld
hlt
mov
inc
aas
mov
adc
mov
push
adc
testl
sbb
inc
sbbl
mov
and
subl
push
loopne
jae
jg
jmp
pop
popf
pop
push
fnstcw
mov
leave
xchg
sub
ja
into
out
mov
and
mov
bound
pop
stos
out
mov
push
mov
daa
pop
out
clc
mov
dec
jl
add
adc
loop
pop
cmpl
mov
sbb
push
sar
or
cmp
dec
fadds
mov
arpl
xor
lret
gs
mov
and
mov
mov
cmp
rorl
add
push
dec
add
sbb
insb
xchg
popa
mov
and
sub
pop
stos
dec
mov
das
seto
cmpsb
mov
adc
xchg
mov
xchg
add
jg
orl
jl
cmp
icebp
inc
insb
jno
pop
xor
nop
push
pop
aaa
mov
test
test
scas
pop
fsts
pop
push
das
xchg
ljmp
iret
adc
inc
popa
fidivs
mov
or
inc
lods
inc
dec
outsb
cwtl
xlat
scas
lods
rolb
mov
dec
dec
gs
outsb
imul
lods
push
fisttpll
mov
xchg
cmpl
mov
adc
sbb
sbb
pop
sub
push
xor
mov
outsb
fnstcw
mov
push
pop
jp
xchg
jnp
sub
pushf
daa
cmp
add
les
divl
push
js
push
push
fisubl
xchg
sbb
adc
pop
lret
into
fdiv
push
inc
mov
pop
in
pop
dec
sbb
jg
jg
cmp
sub
in
mov
shll
push
adc
dec
pop
sbb
aas
dec
int
sar
cmp
int
ljmp
pop
clc
push
add
nop
sub
lods
xchg
daa
sub
stos
sarb
and
adc
pushf
fwait
pop
scas
mov
xchg
pop
mov
lahf
pop
lcall
loopne
mov
ficoml
sbb
int
pop
js
cmpsl
scas
outsl
or
xor
xchg
clc
lret
jae
arpl
add
fldenv
imul
jecxz
inc
icebp
adc
in
mov
push
shll
cmp
pushf
int
or
xchg
insl
mov
cmp
rclb
fistpl
iret
xchg
mov
sbb
test
cmp
push
pop
or
pop
lret
pushf
jg
jns
int3
outsb
dec
int
or
insl
addb
test
push
mov
std
fwait
popa
fdivl
int
jno
call
jnp
and
sub
call
mov
int3
fwait
jmp
lret
cmp
mov
stc
in
push
mov
addr16
shr
mov
and
inc
mov
sbbl
popf
add
cwtl
aaa
push
insl
repnz
lods
cli
into
push
xchg
fnstsw
cmc
je
and
dec
push
jl,pt
fmuls
xchg
jecxz
or
out
mov
int3
das
push
inc
scas
shl
sub
loop
fcmove
push
push
int
dec
int3
mov
aas
xchg
jp
std
call
nop
jmp
orl
lock
orb
add
into
js
lret
sub
add
jae
jmp
and
repz
or
stos
inc
mov
adc
inc
push
lds
inc
xchg
test
fcomp
push
cmc
mov
bound
stc
outsb
dec
cld
fisttps
push
sbb
jns
lods
inc
fsubl
inc
mov
rcrb
bound
inc
lret
sub
inc
lea
lods
popa
ds
in
cmp
and
in
push
icebp
add
imul
fists
movsl
aad
mov
inc
dec
aaa
or
xchg
and
push
lret
or
arpl
xor
or
loope
out
mov
push
popf
jmp
repnz
cmpsb
jns
sti
xchg
clc
scas
fsubp
dec
mov
adc
mov
mov
or
loope
lret
jne
push
stc
aam
xor
inc
mov
push
aam
jecxz
pop
enter
out
pop
lds
mov
mov
dec
xor
outsb
popa
cwtl
push
inc
mov
cltd
clc
fsqrt
cltd
mov
add
cmp
mov
sub
incb
insl
popf
push
pop
stos
imul
in
pop
setbe
dec
adc
jne
inc
push
loope
jae
mov
cs
scas
loope
xor
lret
push
mov
bound
sti
rol
dec
pop
adc
xchg
rcr
cli
add
cmp
lock
stos
inc
add
xor
xor
mov
repnz
out
xchg
je
iret
push
and
sbb
jge
pop
data16
cmp
test
pop
mov
or
scas
iret
cmp
cld
cltd
xorl
adc
cmp
test
mov
add
xor
out
xor
push
ja
dec
jecxz
push
pop
leave
loope
cmpsb
mov
push
cmp
sahf
fwait
es
lahf
aaa
mov
outsl
data16
xor
jle
ljmp
es
sub
les
das
xchg
xor
aas
adcl
xchg
xor
cmp
sub
ret
xor
sub
jge
jae
jnp
test
xor
xor
adc
sbb
orl
sbb
mov
adc
sub
movsb
mov
sub
outsb
inc
popa
xor
fxam
out
test
aaa
stos
in
js
fwait
nop
inc
cld
add
xchg
jae
push
sbb
ret
or
not
adc
xchg
pop
scas
jb
dec
jp
add
dec
jnp
xchg
cmpsb
mov
imul
repz
loop
cltd
cmp
dec
cmc
in
pop
jmp
or
mov
cmpsl
std
jo
xchg
add
xor
add
or
sbb
mov
lea
cmp
jns
dec
lods
mov
movsb
mov
mov
imul
jmp
xchg
pop
xchg
jmp
fwait
cmpsb
fisubs
adc
jg
adc
xchg
mov
iret
negb
or
sahf
pop
mov
and
cmp
mov
test
scas
in
rcl
push
bound
movsb
sbb
inc
mov
ljmp
bnd
or
sbb
pop
out
inc
adcl
mov
jo
cmpsb
add
lcall
lcall
and
jle
outsl
insb
mov
in
pop
shrb
mov
lock
mov
jp
sbb
lods
mov
ja
xor
mov
dec
jno
push
outsb
hlt
add
or
les
or
rolb
out
jg
fs
mov
std
jo
daa
jnp
fnstsw
sbb
jns
in
jns
int3
mov
cwtl
xor
push
aas
add
xor
dec
adc
inc
cmc
xchg
inc
es
adc
add
std
dec
sbb
std
das
aam
mov
sti
dec
pop
ds
mov
dec
sar
mov
gs
pushl
or
mov
jmp
jno
xchg
sub
mov
pusha
push
sbb
cmp
dec
in
push
dec
adc
adcb
and
xchg
pushfw
xchg
in
dec
aaa
push
ret
and
cmp
bound
dec
rcl
les
inc
ret
mov
cmp
hlt
adcb
mov
movsl
pop
add
add
adc
cwtl
dec
iret
jne
rcrl
insb
jb
movsl
xchg
mov
hlt
aam
loop
cmp
xrelease
sub
cmp
int3
call
push
jo
scas
ret
call
cmp
mov
sub
mov
inc
push
pop
stc
sbb
dec
sub
dec
mov
cmc
lahf
cmp
int3
push
rcrl
inc
icebp
scas
mov
xchg
insl
aaa
addr16
xchg
rcrl
adcl
test
pop
mov
shlb
repz
dec
call
enter
mov
icebp
sti
xchg
into
enter
insb
rorl
fdivs
push
dec
push
mov
cltd
or
enter
cltd
inc
fsubrl
out
xor
jle
es
and
xchg
jge
pop
mov
cwtl
add
sbb
mov
outsl
push
jmp
mov
jne
arpl
cmp
jg
int
int
fimull
jmp
adc
aas
dec
push
insl
mov
xchg
mov
jnp
lret
sbb
push
test
in
pushf
sub
dec
or
pop
inc
sub
push
or
push
mov
push
add
pop
pop
iret
mov
push
mov
rcrl
adc
mov
ficomps
mov
shrl
add
sub
mov
mov
dec
insl
imul
mov
xchg
cmpsl
mov
xor
pop
adc
or
rcr
inc
popa
rolb
or
jmp
out
mov
out
cltd
test
add
popa
dec
daa
ljmp
push
jne
rcr
mov
loop
enter
lods
repnz
stos
jmp
xchg
jge
in
out
ds
inc
lret
fucomi
popa
loope
push
adc
and
mov
xor
out
fsubrs
xchg
stos
notb
roll
and
add
jl
xor
sbb
cmp
pop
pop
dec
push
dec
pop
push
mov
lods
or
mov
daa
jno
dec
loope
mov
adc
xchg
fsubs
add
push
sbb
popa
jae
xor
in
and
jb
imul
fstl
inc
sub
jg
fiadds
dec
push
mov
mov
pop
out
imul
and
mov
fwait
aad
lds
add
call
in
mov
sub
iret
orb
or
xchg
out
lock
pop
idivb
aaa
or
movsl
lock
loopne
pop
out
add
xchg
pandn
mov
pusha
ljmp
fs
lcall
or
push
mov
pop
fcoms
mov
xor
dec
cmp
out
in
daa
roll
loope
jg
dec
lea
add
fnstenv
mov
cmpsl
decb
in
cs
stos
sbb
in
push
and
fwait
lret
loop
mov
or
test
push
inc
bound
push
mov
sub
les
enter
jnp
sub
dec
divb
mov
xchg
dec
add
outsb
cmp
aam
into
scas
pop
insb
inc
outsb
les
addr16
inc
fbstp
std
adc
xor
popf
adc
mov
jae
add
sub
adc
cwtl
stos
add
icebp
aam
inc
or
dec
pusha
and
xor
movsl
movzbl
int3
jb
push
idivl
test
or
insl
dec
fnstcw
sub
mov
pop
imul
jb
pusha
shrb
iret
jmp
test
sub
adc
and
rorl
pop
xor
lahf
mov
push
jno
shl
pop
fcomps
pop
pop
dec
xchg
jns
xor
lock
fsubp
mov
fwait
lret
inc
cs
cmp
scas
mov
or
lcall
xchg
insl
or
sbb
shlb
and
or
jge
push
mov
push
sahf
push
cmp
movsl
dec
sub
add
jl
push
inc
popa
clc
ss
pop
mov
popa
mov
mov
mov
aam
sub
lret
or
aaa
lea
out
mov
ret
test
outsb
popa
les
shlb
sub
hlt
cld
nop
pop
or
outsl
daa
add
jl
inc
inc
fidivl
mov
fisttpll
les
or
jge
adc
mov
jns
loopne
pop
or
sub
pop
orl
mov
repz
pop
cmp
or
enter
sbb
fidivrl
pushf
scas
sub
add
idivb
jmp
sub
push
xchg
mov
xor
xchg
jnp
outsl
daa
adc
cli
cmp
jp
mov
cmp
in
mov
xor
or
sbb
xchg
push
idivl
sbb
aaa
push
fsin
xchg
iret
inc
pop
cmp
fcomi
sbb
shrb
lret
enter
mov
pop
subb
mov
negb
inc
repz
sub
add
mul
rclb
inc
rcrl
sahf
xchg
and
mov
or
mov
nop
bndstx
mov
sub
mov
cld
clc
jge
scas
jmp
cmpsl
xchg
into
add
jg
mov
mov
push
push
and
lds
bound
hlt
xor
sub
sub
sub
inc
add
sub
jle
cmp
lods
mov
int
mov
gs
aad
push
mov
lea
in
xlat
push
xor
or
inc
out
shlb
nop
inc
das
add
scas
sub
xchg
adc
mov
mov
mov
ljmp
cmp
aam
loopne
fcomps
out
mov
fistpl
sahf
clc
hlt
pop
jbe
or
sbb
bound
jmp
mov
xor
mov
push
and
shrb
imul
xor
jb
jnp
pop
dec
cltd
std
jge
in
adc
pop
mov
push
sub
fcmovne
mov
lds
jl
mov
hlt
adc
sarl
leave
into
enter
mov
cwtl
push
shlb
mov
inc
aaa
xchg
sub
orb
insb
popf
jb
hlt
xlat
outsl
data16
std
jle
jb
xor
dec
dec
rcrb
dec
pop
popf
js
mov
mov
fs
gs
out
adc
fcoml
data16
jle
aaa
sub
inc
mov
sarb
outsl
add
inc
test
arpl
add
js
adcb
aas
dec
out
aas
cmp
mov
xchg
andb
ja
repz
icebp
xchg
adc
dec
cmc
mov
in
mov
inc
cmp
bound
cli
iret
ret
es
fbld
mov
in
es
fidivl
je
fucomip
insb
dec
cmp
cmpsl
nop
inc
xchg
cs
dec
adc
aad
mov
cli
dec
js
mov
pop
das
fsts
mov
jae
add
dec
cmpsb
lcall
mov
in
lea
add
nop
out
sbb
daa
jle
outsl
dec
jmp
scas
rcll
mov
mov
and
fdivr
scas
rcr
and
mov
xor
sub
fldcw
lret
arpl
cld
push
mov
inc
and
sahf
cmp
pop
jno
outsl
push
lahf
and
shr
icebp
push
cwtl
pop
mov
inc
icebp
jo
add
das
inc
add
jb
lds
rcrb
jmp
fsubr
mov
inc
add
add
fldcw
mov
out
or
add
mov
das
cmp
sti
push
or
mulb
sarl
out
mov
fsub
mov
xor
add
vpmaddwd
popa
sub
mov
fwait
mov
outsl
fists
ss
les
in
loope
push
push
and
in
mov
mov
mov
call
or
sbb
shlb
cmp
jle
les
pop
lods
adc
pop
ss
xor
add
ret
pop
notb
lea
mov
adcl
xchg
mov
adc
push
mov
cwtl
adc
mov
lea
mov
ljmp
test
pusha
bound
dec
pop
adcl
mov
test
sbb
das
or
mov
and
add
push
shr
mov
sub
fcomps
test
sub
inc
pop
dec
mull
sub
push
lds
or
ds
icebp
jge
xchg
std
xchg
rcll
jb
dec
out
xchg
outsl
add
xor
arpl
and
fs
jns
mov
stos
sbb
jge
jg
icebp
and
jmp
inc
fldt
xchg
sub
bound
cmp
jecxz
xchg
pop
inc
mov
rcrl
mov
xchg
jnp
jl
mov
pop
mov
mov
mov
negl
nop
mov
sarl
mov
iret
andl
xchg
xchg
movsb
jl
xchg
xor
mov
ss
jge
xchg
mov
lods
xchg
cwtl
outsb
out
xchg
pushf
scas
cmc
inc
and
cmpsb
mov
lret
loope
int3
xor
ss
pop
sub
aad
xor
add
ljmp
test
into
pushf
movsb
add
jmp
fidivs
fldt
dec
inc
dec
inc
push
daa
cmp
xorl
mov
ret
xchg
cltd
mov
push
inc
pushf
jo
ret
test
push
mov
sub
push
test
push
scas
ss
outsb
gs
push
in
cmpsl
pop
cmpsb
les
in
std
or
mov
xor
insb
inc
loopne
mov
in
cmp
pushf
loop
mov
in
imul
inc
loope
mov
stos
push
test
add
xchg
jnp
push
inc
and
ds
jge
mov
add
push
cmp
dec
iret
in
pusha
sti
or
mov
mov
cmp
mov
push
jns
push
or
xor
jmp
rcl
push
imul
mov
mov
stos
pop
call
cmp
les
call
aas
mov
lock
movsl
and
push
fmulp
ja
int3
out
push
dec
dec
xlat
push
aam
popa
push
movsb
scas
hlt
mov
cs
in
jbe
testb
pop
pop
push
jno
inc
inc
fwait
iret
das
xchg
imul
aaa
mov
lcall
inc
ljmp
fwait
xor
add
xchg
xchg
insl
xor
jmp
and
shlb
ja
loopne
imul
ret
pop
xchg
mov
in
sbb
clc
shlb
ja
and
fcmovbe
pop
mov
clc
jge
cwtl
or
jg
shl
xchg
in
test
lret
cmp
inc
push
inc
lock
notb
cmp
cmp
and
xchg
mov
adc
add
enter
orb
scas
in
inc
push
lret
mov
and
fadds
or
outsl
std
inc
mov
xor
mov
loope
push
call
mov
test
sub
cwtl
das
or
jle
add
je
mov
testl
sarb
jmp
shr
idivl
bound
sbb
pop
sarl
sahf
sub
dec
push
push
jl
lret
xor
call
outsl
fwait
sbbl
and
sti
add
pushf
dec
jmp
ficoml
lret
dec
int3
stos
mov
xchg
shl
mov
pop
pusha
int3
lret
rcl
mov
fidivl
mov
jo
out
inc
sbb
stos
mov
dec
adc
nop
sub
xor
jns
aas
lock
xor
push
pushf
and
icebp
movsl
and
sbb
loope
jle
ret
int3
outsb
xchg
xor
lods
sbb
xchg
iret
or
inc
xor
and
fadds
ljmp
ret
push
insl
imul
jmp
dec
movsl
xchg
mov
lods
cmp
rcl
in
mov
lods
cmp
and
ja
and
subl
cld
idivb
dec
ds
adc
cmp
xchg
xchg
ds
dec
js
or
rorl
arpl
cmp
mov
jl
cmp
mov
sub
imul
out
inc
decb
call
mov
adc
jne
fidivl
inc
scas
pop
inc
add
loopne
lods
or
mov
jg
stos
in
das
faddp
insl
fcoml
lock
iret
rep
cmp
cmp
roll
sar
and
pop
test
push
mov
pop
test
fsubl
inc
imul
xor
std
or
test
inc
sti
adc
mov
out
in
int3
das
pop
pop
push
lret
lcall
shll
imul
repnz
pop
daa
adc
pop
ret
movb
aam
popf
loope
je
xor
cmp
mov
mov
dec
in
fsubrs
out
outsb
leave
mov
leave
sbb
scas
push
jecxz
mov
movsl
rclb
mov
lock
nop
push
xor
push
lcall
inc
mov
fs
cld
or
daa
ret
ss
les
mov
ds
outsb
xor
pop
adc
in
testb
aas
pop
clc
or
xchg
adc
int
mov
daa
bound
xchg
stos
inc
inc
jo
jbe
int
sbb
mov
cmpsl
mov
add
out
popf
jmp
lds
cwtl
mov
in
mov
sti
cli
adc
sbb
mov
hlt
xlat
movsb
ja
sub
jnp
lds
or
flds
cs
mov
pop
push
fs
xchg
add
xorb
jg
push
mov
pop
jnp
stc
jge
bound
inc
out
scas
cmpsb
ret
insb
or
add
stc
mov
jecxz
je
mov
jno
arpl
stos
ljmp
mov
cmp
test
cmpsl
shlb
mov
mov
loopne
mov
imul
mov
jno
lods
push
mov
or
lock
loop
push
sahf
pop
js
sbb
testb
push
testb
cs
int
add
jae
xor
jecxz
rcrb
jne
and
mov
aaa
sbb
xchg
mov
dec
icebp
dec
mov
cmp
xchg
fwait
shrb
and
into
xchg
clc
or
bound
fcmovu
into
mov
jno
mov
jns
fiadds
addr16
int3
ds
inc
or
sub
dec
sbb
or
sbb
sbb
mov
cmp
stos
add
insl
bound
push
sbb
xlat
fsubrp
inc
push
push
jle
andl
fcmovne
fs
aaa
mov
jno
enter
shrb
jbe
mov
or
int
mov
arpl
pop
adc
lret
sahf
xor
mov
cltd
mov
loopne
xor
mov
test
and
lods
xor
out
mov
ljmp
int
aam
xchg
movsl
inc
test
fxch
push
pop
outsb
inc
mov
enter
or
mov
fmuls
or
dec
and
rcr
pop
inc
inc
stos
inc
pop
mov
scas
push
lcall
mov
lods
cmp
loopne
nop
dec
mov
pop
pop
fisubrs
aam
lods
lods
xchg
fildll
pop
cmp
je
push
push
dec
mov
xchg
cmpb
cmpsb
push
shrb
pop
test
sbb
popf
xchg
mov
push
mov
and
or
jle
loopne
jl
bound
movsl
jne
test
xchg
sub
fwait
xchg
and
dec
mov
int3
jnp
lahf
pop
mov
fwait
sbb
dec
add
mov
iret
jns
add
pop
pushf
clc
xor
sbb
dec
push
mov
imul
jnp
push
rorl
mov
aam
shlb
out
scas
inc
out
out
movsb
outsl
adc
push
jecxz
fimuls
int
cli
mov
and
pop
sub
iret
fnsave
lods
xor
and
inc
mov
xchg
xor
adc
sahf
cmp
loop
int3
imul
dec
sub
cmc
fcompl
rorb
push
mov
shll
jae
ret
inc
dec
lods
mov
push
xor
xchg
jle
dec
inc
dec
fists
mov
std
out
adc
iret
cmp
dec
imul
test
fistpl
xor
cmp
enter
sbb
pop
add
add
fstpl
xchg
adc
fucomi
and
or
das
inc
pop
es
dec
test
mov
jo
sti
adc
cmpsb
orb
xchg
and
rorb
scas
xor
inc
and
dec
xchg
cmpb
out
mov
dec
mov
or
add
lahf
lock
in
jo
sti
sub
pop
fs
add
adc
popa
shrl
mov
dec
mov
sbb
lds
out
test
pop
xor
ds
das
js
xchg
inc
push
test
icebp
adcl
adc
cmp
fisubs
mov
icebp
mov
in
xlat
sbb
xlat
push
add
push
clc
push
clc
adc
adc
jbe
shlb
rol
jp
sub
into
dec
mov
jbe
mov
sets
pusha
aaa
push
xor
icebp
inc
cmc
push
xchg
test
mull
sbb
daa
outsl
inc
xor
push
out
leave
push
sti
and
cltd
test
fisubl
jne
or
jae
scas
adc
mov
stos
cmp
adc
ljmp
xchg
xchg
in
mov
repnz
jae
aaa
mov
das
in
xor
stos
inc
pop
jmp
nop
push
test
push
pop
das
in
push
loop
sub
aam
adc
mov
insb
sub
inc
xor
inc
in
ja
mov
es
jbe
mov
rcrl
dec
sti
push
lcall
jp
jno
mov
jae
inc
mov
cmp
add
decl
jne
popw
and
fidivs
add
mov
xlat
sbb
loopne
cld
cmp
pop
test
imul
fildl
inc
push
xor
loopne
test
testl
das
sub
and
movsb
cwtl
daa
adc
scas
mov
int3
ret
movb
jge
rclb
fnstcw
push
adc
sbb
incb
dec
out
scas
mov
dec
jle
sub
lea
stc
insl
rcr
xchg
cmp
mov
mov
lods
sub
or
mov
mov
mov
sbbl
xchg
mov
neg
ss
jle
lret
rolb
xor
ret
sbb
loope
movsb
pop
cmc
add
ret
ljmp
mov
and
mov
mov
pusha
lret
adc
fwait
jnp
push
popf
xorb
adcl
mov
adc
mov
in
int3
xor
stos
adc
ffree
roll
imulb
mov
dec
iret
push
jecxz,pt
sbb
stos
jmp
sbb
and
sti
adc
inc
sbb
push
inc
mov
xchg
rcrb
add
and
pop
mov
cmp
stos
and
mov
pop
jb
out
outsb
lds
adc
mov
jecxz
sub
add
or
mov
dec
push
shrl
inc
pop
jbe
push
ret
cltd
fwait
jg
mov
jl
bound
adc
dec
pusha
jbe
add
mov
int3
inc
pop
outsb
jns
pop
inc
movsl
pop
sti
aam
pop
mov
insl
cmp
daa
mov
add
les
add
stos
in
int
cli
mov
leave
in
iret
arpl
scas
mov
mov
cs
dec
insb
rcrl
aam
jnp
loop
add
std
aaa
mov
jle
mov
xchg
mov
shll
fldt
int
or
push
lahf
ljmp
lods
xchg
out
aam
fcmovne
lahf
xor
xor
fcomip
ret
sbb
in
add
lea
xor
cmpsb
ss
xchg
or
mov
not
cmp
push
test
add
xlat
mov
fidivrl
ds
mov
js
and
out
jecxz
popa
xchg
adc
into
add
test
jge
pop
mov
stos
movsl
mov
inc
mov
jae
dec
lods
mov
xorb
and
add
add
jge
pusha
outsl
leave
mov
lods
clc
inc
fwait
xchg
hlt
mov
sub
movsl
stc
pop
cmp
dec
dec
and
jno
out
bound
dec
and
stos
mov
mov
jle
jl
dec
mov
sbb
mov
shr
and
hlt
adc
xchg
add
fidivs
fsubrl
ljmp
out
jp
mov
push
xchg
jne
fmull
arpl
xor
jbe
mov
test
xor
imul
mov
push
lahf
xor
push
push
in
aaa
in
jge
fnstsw
pop
and
dec
aaa
push
in
and
lods
sbb
test
bound
jbe
les
loope
mov
scas
fisubs
in
icebp
mov
mov
cmc
push
insb
leave
enter
es
dec
test
dec
cmp
sahf
jge
leave
movsb
jno
call
mov
ret
fadds
dec
pop
lock
gs
mov
lret
mull
ret
cmc
dec
fcompl
pop
xchg
jns
mov
xchg
mov
out
mov
dec
inc
in
mov
cmp
push
fstpl
mov
mov
sub
jmp
iret
in
xchg
iret
ja
stc
xchg
mov
inc
and
sub
insl
jmp
mov
pop
jbe
push
mov
jge
aaa
mov
les
jge
and
mov
movsl
push
into
popa
add
jb
outsb
out
imul
mov
sbb
shll
aad
lds
lock
nop
shrl
call
jns
test
xchg
shll
mov
mov
cvtps2pd
inc
and
mov
push
fldl
notb
cmpsb
pop
movsb
and
cmpsb
jge
ja
in
adc
add
push
in
je
insl
lea
jne
cmp
inc
and
and
pop
add
mov
jno
iret
scas
sub
scas
call
cli
jb
jo
and
adc
mov
fiaddl
or
or
popa
inc
stos
mov
push
imul
repnz
fldcw
jl
lea
lods
into
gs
adc
adc
fwait
sbb
mov
or
std
mov
jbe
xor
imul
pop
jno
adc
add
lds
push
in
test
cld
popf
lods
cmp
outsl
jnp
and
nop
xorb
int
xchg
sbb
mov
loope
cmc
mov
scas
addl
in
mov
adc
imul
pop
imul
icebp
sub
push
sahf
lods
lods
clc
or
or
mov
push
call
int3
sub
xchg
push
repnz
pop
adcb
xchg
sbb
and
sub
mov
dec
cmc
dec
test
jnp
into
dec
or
std
sti
pusha
add
or
outsl
push
scas
std
push
lods
cmpsl
repnz
les
sbb
mov
sub
dec
dec
add
sub
fs
jmp
repz
loop
xchg
lock
jno
rorl
mov
insb
inc
jae
icebp
mov
outsb
iret
sti
mov
fsincos
and
dec
sub
clc
push
std
mov
xchg
stos
inc
rclb
push
outsb
inc
ficomps
push
push
xor
inc
xadd
sbb
in
movsb
cmp
aam
or
ret
mov
jno
loop
adcl
cmp
jne
cmp
cmp
rcl
insl
in
loope
jmp
inc
cltd
outsl
ret
aaa
ror
mov
test
loop
dec
std
sub
sub
sub
dec
dec
std
clc
push
test
addr16
sti
daa
bound
lret
jmp
jno
or
adc
cmp
pusha
pop
mov
add
mov
cmp
pop
std
mov
mov
xchg
hlt
sti
inc
scas
mov
in
dec
xor
jae
pushf
sub
loope
ds
out
mov
mov
lret
cld
loope
lock
jmp
movsb
xchg
cmp
js
and
lret
push
std
cmp
or
or
pop
dec
push
lods
clc
ret
ret
inc
imulb
xchg
fsubs
add
add
in
xchg
int
push
cli
mulb
cmp
jge
icebp
xchg
add
in
xorb
sub
rcll
je
lods
ja
outsl
xchg
mov
pushf
mov
dec
in
repz
repz
and
mov
mov
imul
mov
mov
jmp
shr
sbb
aaa
mov
jmp
loope
jl
movsl
mov
stos
fsts
cli
cld
adc
push
push
jno
add
cmpl
rolb
mov
xor
pop
xchg
mov
mov
or
add
mov
das
inc
pushf
jne
lds
mov
enter
fisubs
test
insl
or
jmp
mov
fisttps
call
addb
sub
insl
cmp
pop
cmc
inc
mov
shll
mov
mov
sahf
add
xor
mov
mov
mov
xor
ds
push
loope
inc
pop
stc
xchg
incl
rclb
push
adc
repz
mov
jecxz
loopne
lods
out
xchg
push
adc
mov
cld
cwtl
jmp
sbb
daa
or
cmpsl
nop
push
test
mov
mov
mov
xor
and
inc
out
into
test
add
in
lret
mov
imul
jle
pop
and
es
int3
pop
inc
in
repz
insl
inc
lds
xor
push
pop
cmp
iret
mov
cmp
nop
xor
pop
pop
cmc
and
in
mov
roll
iret
mov
cmp
sarl
xchg
movsb
mov
and
flds
inc
xchg
add
and
jb
sbb
roll
cmc
arpl
pop
mov
push
std
movsl
mov
movd
sub
sbbl
fstp
push
sbb
mov
mov
scas
pop
dec
dec
shll
dec
movsl
cmp
outsl
repnz
ja
mov
mov
pop
jmp
add
test
inc
push
movsl
sbbl
push
lcall
cltd
daa
add
aam
add
or
repz
jle
out
nop
sahf
xchg
jno
xchg
ss
outsl
sti
mov
push
shlb
xchg
aad
cmc
mov
loop
and
sahf
cmp
shr
cmp
push
mov
je
cmp
inc
aas
mov
jl
and
ljmp
movsl
fmuls
or
lcall
adc
sbb
test
stc
mov
sub
xlat
push
xchg
or
gs
sbb
cmpsl
outsb
or
mov
pop
mov
mov
cli
xchg
inc
lret
jnp
iret
push
push
pop
rolb
shl
push
adc
cmp
push
xor
aad
mov
cwtl
ljmp
pushf
fs
push
jnp
ljmp
test
stos
iret
fwait
pop
pop
js
jb
jmp
orb
shrb
js
dec
ja
std
out
pop
xchg
pop
ret
cmp
out
stos
and
sti
xchg
push
stos
and
dec
sbb
das
insl
rcrl
fcomip
cmp
pop
mov
add
popa
adc
mov
and
loopne
lock
xor
scas
inc
ss
dec
pop
stc
aad
push
sbb
cmpsb
xchg
cs
sbb
mov
xchg
mov
xor
lret
xchg
push
in
inc
test
jo
push
ret
xchg
orb
cmp
data16
mov
sbb
icebp
je
push
ficompl
fisttps
jp
lret
fistl
adc
lods
and
jbe
add
stos
scas
inc
adc
fs
mov
sarb
push
jecxz
shlb
jo
sub
iret
dec
jmp
or
and
mov
jb
sbb
das
lahf
stos
push
dec
push
xor
shr
cld
fisubrl
inc
sbb
sahf
mov
sbb
inc
leave
adc
stos
dec
test
adc
ja
pop
cmpsb
mov
mov
fptan
add
xor
push
inc
xchg
inc
call
movsl
in
fabs
lock
or
add
seta
nop
mov
mov
cli
ja
sti
sahf
pop
sbb
mov
out
loope
mov
adc
jmp
mov
xor
mov
sahf
lahf
lret
mov
in
inc
mov
scas
fdivrs
fwait
ss
enter
cmp
mov
stos
mov
popf
jnp
mov
insl
loopne
lds
cmp
das
add
fwait
sbb
mov
es
ror
mov
mov
fnstcw
scas
test
and
cmp
test
in
adc
cmp
pop
jo
mov
popa
imul
mov
mov
lods
adc
adc
test
sub
out
mov
les
iret
cmc
or
mov
stos
fnstcw
pop
dec
dec
in
pushf
push
sbb
inc
stos
mov
pop
mov
push
cwtl
dec
cli
in
inc
cmp
insb
cmp
inc
xor
imul
je
ljmp
shll
xchg
insl
dec
inc
add
cltd
out
sarb
int
repnz
sarl
push
sbb
fsubl
out
stos
push
addr16
xchg
jno
and
pop
jae
mov
push
mov
les
outsb
cmc
cmp
or
in
daa
mov
jecxz
mov
mov
lea
cmp
nop
pop
mov
push
notb
cmp
std
lahf
scas
loope
pop
outsl
mov
cmpsb
pop
jae
mov
inc
mov
inc
or
cmp
pop
mov
test
daa
sbb
push
cmp
sub
lds
add
jle
daa
adc
adc
lahf
testl
lods
shrl
leave
adc
jecxz
fidivrs
dec
lock
mov
jne
jae
xor
adc
fabs
mov
cmp
push
adc
andl
rolb
pop
je
inc
mov
pop
out
movsl
pop
push
ljmp
repnz
ficompl
aad
mov
popa
clc
lods
pop
lock
pop
sbb
imul
popf
inc
pop
lock
jmp
push
in
push
jno
inc
fsubrl
cmp
call
dec
shlb
sub
test
addr16
gs
pop
leave
setg
pop
outsl
into
sub
mov
out
mov
mov
pop
inc
in
loop
imul
cld
daa
xor
sbb
rol
lock
pop
icebp
adc
xchg
mov
out
mov
inc
inc
loopne
dec
jecxz
outsb
enter
mull
jo
add
jb
popf
test
inc
push
stc
or
es
sbb
imul
stos
cmpsl
rep
daa
mov
enter
sub
cmp
divb
add
xchg
jge
enter
pop
mov
and
inc
adc
imull
pop
mov
xchg
or
add
mov
jbe
test
lods
push
jb
scas
mov
pop
popa
or
add
mov
mov
or
jp
filds
dec
mov
sahf
sbb
movsl
js
adc
adc
jmp
insl
mov
xlat
jbe
add
fiadds
lds
cmp
add
and
pop
rorl
loopne
cmp
add
in
mov
sarl
push
ja
insb
add
pop
sbb
fdiv
insb
add
dec
mov
mov
es
fdivrs
push
movsl
xor
sarb
push
xchg
xchg
hlt
inc
jbe
cmp
xchg
push
inc
pop
cmp
loope
arpl
aas
popf
hlt
jmp
cmp
xlat
cli
or
dec
stc
jl
adc
xlat
adc
jl
sarb
sahf
xor
cmpb
scas
popf
adc
or
xor
cmpsb
iret
cmpsb
push
aaa
mov
add
subb
adc
ret
aam
push
jbe
fcmovnu
in
mov
shlb
in
shl
mov
dec
mov
frstor
pop
cmpsl
cmp
aam
mov
cmc
loope
fsubrp
and
add
add
pop
clc
and
inc
xchg
mov
mov
sub
adc
mov
push
popf
xchg
jns
sub
jae
mov
vcvtsd2usi
in
cmpsl
cmpsl
mov
lfs
xchg
scas
xchg
mov
nop
repnz
cmpb
jmp
push
out
and
sbb
mov
in
mov
inc
cmp
adc
outsl
data16
mov
dec
cmc
cmp
dec
rcl
xchg
and
pcmpgtb
mull
sub
xchg
mov
std
xchg
mov
mov
jnp
xor
leave
imul
cmp
add
in
xor
sbb
test
sub
fstpl
mov
and
sbb
aas
les
dec
out
cltd
lahf
push
nop
dec
inc
push
dec
xchg
arpl
cmpsb
pop
jno
sub
inc
lea
push
pop
outsb
xchg
cwtl
jno
mov
mov
xchg
bound
push
iret
test
sbb
inc
jb
ss
cli
xchg
adc
incb
movl
test
cmp
and
std
pop
inc
xchg
add
pop
sub
mov
jbe
es
pop
jo
aaa
pop
lods
inc
lea
decb
sbb
arpl
or
mov
xor
rcrl
fwait
lods
shll
cmpsb
cmp
jl
and
addr16
inc
mov
dec
repz
pop
sbb
jle
clc
nop
lock
adc
xor
in
pusha
negl
jl
pop
sub
call
inc
mov
mov
push
cmp
aad
push
pop
aad
jle
scas
je
rclw
push
sbb
mov
mov
rol
inc
pop
jg
xchg
sbb
adc
je
jge
jns
arpl
jns
cmp
stos
dec
sbb
ja
lods
inc
rcll
push
out
xor
pop
std
fsubr
push
rcrl
jnp
jo
int
in
pop
cwtl
mov
aam
test
repnz
adc
push
gs
cwtl
movsl
jae
jp
lods
arpl
fwait
ljmp
imul
js
cmp
mov
pusha
xor
sbb
ret
sbb
sti
notb
sub
xchg
scas
rclb
sbb
cmc
add
addr16
pop
testb
inc
or
test
clc
or
js
pop
pop
cltd
test
pushl
cltd
mov
pop
lcall
inc
adcb
cmc
lock
rcrl
lahf
sbb
ljmp
pop
sbb
jge
loope
mov
std
jmp
xchg
xchg
adc
adc
sbb
mov
jge
arpl
and
icebp
data16
jmp
loopne
dec
popf
lock
pop
push
aaa
loope
and
dec
cmp
dec
mov
xchg
dec
enter
xor
jne
scas
movsb
fdivl
push
aam
dec
cmp
imull
mov
jl
sub
jl
test
push
lahf
jge
mov
pop
mov
hlt
jle
or
mov
cmc
adc
push
pop
pusha
cmpb
lret
xchg
mov
pop
fdivr
movl
sbb
ljmp
fists
mov
cmp
test
sbb
add
lahf
pop
mov
fwait
mov
jae
in
inc
mov
stos
fcomps
scas
or
pop
js
popa
lods
sahf
fs
mov
mov
mov
in
lock
mov
cmp
add
push
outsl
jmp
pop
dec
hlt
adc
cs
jbe
xchg
mov
mov
pusha
testl
jle
outsl
aad
add
fisttpl
pop
sbb
mov
sub
cwtl
lret
popa
inc
mov
aam
shlb
test
ret
mov
mov
push
fisubs
mov
push
inc
inc
pop
cld
jg
ja
and
adc
shrl
jg
outsb
sub
shrl
hlt
pop
jg
adc
adc
pop
cmpsb
dec
mov
rep
cmpsb
xor
push
test
xlat
mov
push
mov
mov
lods
inc
ljmp
arpl
sbb
dec
mov
or
rol
pop
mov
jnp
aaa
rol
hlt
sub
ret
xlat
add
add
and
daa
mov
sahf
stos
mov
pop
imul
imul
cmpsl
imul
sub
sarb
adc
rorb
bound
mov
push
movsl
or
lods
xchg
stos
xchg
stos
test
inc
fcmovnb
cld
ret
int
insl
and
xlat
or
add
sbb
fs
add
jecxz
lea
dec
in
test
rep
es
out
leave
mov
test
adc
enter
lods
pop
nop
push
fdivrs
pop
int
sbb
push
outsl
mov
cmpsl
data16
cmp
data16
sub
cmp
mov
inc
leave
int
or
in
xchg
mov
lcall
sbb
jmp
inc
mov
arpl
xchg
adc
pop
es
push
into
jg
adc
dec
lock
adc
mulb
mov
lea
shll
es
out
add
jge
ljmp
pushf
cli
pop
pop
addl
cmp
lea
sub
adc
adc
bound
add
xor
mov
mov
adc
pop
insb
add
xor
outsl
lret
out
and
push
loop
xchg
and
jno
stos
mov
in
fwait
sbb
mov
into
pop
mov
subb
and
fstl
movsl
popf
notb
add
inc
push
sbb
pop
stc
iret
insb
xor
sti
sub
cmc
sbb
mov
ss
push
insl
ja
fnstenv
pop
ud2
mov
rcll
mov
hlt
pop
notb
popa
xchg
add
pop
sbb
jle
push
and
sti
ja
xlat
inc
pop
add
xchg
and
nop
mov
mov
xchg
cmp
or
stos
cltd
fidivl
jle
dec
lcall
pop
xor
mov
sahf
cwtl
or
jecxz
in
xchg
pop
jl
lret
xor
and
xchg
dec
or
pand
cmp
ja
xchg
mov
mov
cmp
jmp
cmp
lods
fs
lock
lods
inc
cmp
mov
mov
xor
and
inc
adc
jecxz
sbb
mov
mov
or
ljmp
cmpsb
xchg
jb
repz
fstpt
xor
and
setge
stos
shl
push
xor
mov
loopne
jb
xor
jmp
add
pop
ja
rcl
test
cmp
add
ds
mov
mov
in
dec
mov
inc
inc
xchg
mov
inc
lret
jp
clc
sahf
icebp
sbb
test
pushf
mov
mov
pop
fs
or
insl
jg
int
dec
mov
jns
outsl
popa
sbb
shlb
stos
in
add
pushf
jbe
movsl
dec
inc
push
jmp
adc
cmp
orb
jp
dec
loop
dec
adc
icebp
add
insb
jle
dec
mov
adc
das
fwait
or
xor
mov
lret
cmp
push
cs
and
mov
shlb
sbb
int3
adc
mov
inc
push
ds
movsb
int3
inc
adcl
push
es
repnz
mov
mov
adc
push
lret
push
pop
adc
leave
pushf
outsb
mov
mov
pusha
push
jae
jp
mov
xchg
addl
int
jge
sti
andl
cwtl
imul
clc
ja
sub
xor
xchg
fs
mov
ds
xchg
xor
lret
pop
push
sbb
fsubrs
fnstcw
sbb
mov
fwait
out
loop
jo
inc
dec
test
pop
jne
xor
adc
jg
cli
adc
ss
xchg
lock
fwait
sbb
inc
jo
cmpsl
outsl
jmp
mov
pop
mov
mov
fcompl
pop
les
ds
movsb
mov
push
imul
sbb
adc
mov
sub
push
repz
jecxz
hlt
push
and
push
rorl
xchg
loop
pusha
add
cmpsl
pop
outsl
pop
loop
jb
dec
rep
push
insb
and
mov
stos
dec
fcmovnb
sub
push
cmp
xchg
cli
push
repz
les
leave
jecxz
in
daa
sbb
es
pusha
popf
fwait
xor
hlt
call
imul
shll
and
js
test
repnz
pop
mov
cmp
jge
xchg
icebp
cmp
mov
pop
out
adc
mov
sahf
scas
pop
subb
mov
movsb
push
pusha
xchg
dec
icebp
popf
pop
mov
pop
lods
sub
dec
icebp
mov
xor
mov
jecxz
add
mov
das
in
sbb
sbb
mov
mov
stos
imull
ret
ret
ret
cmp
call
jmp
mov
and
inc
push
scas
fbld
sbb
mov
sbb
jmp
mov
inc
xlat
mov
push
je
pop
cmc
pop
mov
in
bound
mov
cmp
mov
mov
repz
les
decl
jo
mov
mov
xchg
mov
in
cmp
sub
pushf
add
jo
jnp
gs
es
leave
pusha
iret
inc
test
adc
rclb
xor
cmp
mov
cmc
mov
rcll
adcb
pop
aad
sahf
scas
ret
stos
ljmp
enter
sbb
pop
dec
arpl
sub
in
adc
and
into
add
addr16
cltd
test
popa
jmp
inc
xor
mov
inc
push
scas
insl
inc
in
leave
cmp
and
xchg
ljmp
aas
jge
mov
jg
lahf
lods
jb
stos
sub
pop
dec
test
test
shrl
pop
in
sub
inc
jmp
jl
xor
das
addr16
call
inc
scas
out
negb
inc
test
mov
jecxz
out
pushf
and
hlt
shrb
mov
sub
sbb
xor
loope
jnp
xor
dec
lahf
aam
sbb
cmc
push
imul
les
xchg
lret
iret
sub
sbb
push
xchg
sub
dec
push
jo
mov
mov
mov
adc
pop
test
flds
jg
add
or
insl
fwait
xor
sarb
sub
xlat
jb
inc
jno
jae
cmp
popa
aam
es
sbbl
out
gs
outsb
outsb
cmp
mov
data16
call
mov
mov
rolb
inc
add
push
in
pop
sbb
aad
sub
scas
pop
test
sbb
popf
call
dec
loope
aas
xchg
jge
xor
shl
jp
imul
call
lods
lods
xlat
sarl
push
dec
xor
cld
test
mov
adc
mov
nop
adc
in
push
andl
bound
cmp
xor
jmp
cmp
mov
dec
lock
jno
add
push
shll
ljmp
bound
sbb
fsubl
mov
stc
adc
shr
cmpsl
icebp
aam
mov
jb
mov
xchg
cmp
adc
lea
add
ss
xchg
jge
cmp
fwait
xchg
sbb
dec
lock
insl
rolb
scas
xchg
xor
sarb
dec
bound
cmp
mov
rcrb
mov
jne
fidivs
dec
push
outsb
push
fsubrp
cmp
adcl
fdivl
fucomip
cmpsl
cltd
mov
add
and
out
push
jp
lea
cwtl
orl
or
stos
add
lods
adcl
sub
push
cli
dec
hlt
sbb
sti
jecxz
xor
dec
mov
ja
ror
loope
mov
mov
sbb
iret
or
cmp
test
repnz
loopne
ficomps
ss
cmpsb
mov
in
scas
mov
mov
lcall
or
in
xchg
sub
sbb
sub
pop
jb
idivl
xor
aad
test
mov
inc
jge
fldenv
pop
mov
jle
jne
daa
dec
mov
inc
push
jbe
fcmovnu
push
mov
inc
sbb
ja
and
cli
icebp
push
repnz
and
shll
dec
jns
jae
movsl
iret
fucomi
in
adc
pop
mov
cmpsb
das
jle
mov
js
push
lahf
cld
iret
fcmovnbe
mov
movsb
jno
stos
cli
outsl
sahf
adc
mov
lea
jl
test
sbb
add
pop
divb
insl
stos
shll
inc
mov
loop
in
aam
dec
lods
add
test
ds
xorl
cwtl
in
jl
mov
ret
cltd
jo
pop
pusha
testl
sub
jo
ret
or
inc
incl
gs
and
je
sti
sbb
shll
adc
test
jge
mov
add
and
int3
and
aaa
pop
stos
dec
mov
addr16
inc
fidivs
mov
loopne
push
cmp
std
sbb
jnp
cwtl
and
xor
xchg
and
jle
and
cli
cli
sub
pop
sbb
push
jg
repnz
xchg
js
cmpsl
test
iret
ljmp
in
orl
pop
aad
popw
cmp
mov
pop
push
fcmovne
or
cmp
faddl
sbb
sbb
mov
lods
jno
add
cmpsl
push
jp
into
mov
insl
jb
or
and
test
jmp
lock
push
cmp
or
jno
push
mov
inc
or
lret
push
ror
jbe
in
sbb
jge
dec
add
mov
pop
cwtl
pop
xor
addr16
dec
and
test
mov
pop
je
push
fnstenv
push
in
nop
xchg
outsl
in
or
es
mov
sbb
inc
aad
scas
jb
dec
add
in
xlat
mov
xor
jecxz
arpl
sub
jmp
adc
subl
insb
sub
mov
aas
clc
pop
scas
movsb
nop
sbb
adc
imul
out
or
cmp
pop
sub
es
cwtl
fiadds
ja
jb
or
sub
sbb
and
inc
out
add
pop
sahf
xchg
mov
inc
out
ret
ud2
cmc
push
mov
outsl
daa
dec
add
imul
jge
fwait
pop
inc
sbb
mov
mov
inc
adc
pop
lret
cld
lcall
in
mov
stos
sbb
dec
add
jge
push
scas
pop
nop
in
pop
ret
mov
into
clc
shrb
mov
dec
mov
shrl
dec
push
pusha
hlt
stos
xorb
and
adcl
lods
enter
add
cmpsl
ss
fs
ss
xor
bound
xchg
cmp
mov
icebp
mov
fstpt
sbb
ds
xchg
adc
push
adcl
popa
aam
mov
hlt
xchg
js
mov
stos
push
cmc
cli
dec
in
cli
fsubr
out
int3
dec
mov
pop
inc
lods
dec
lods
insl
sbbb
lret
lea
mov
cli
pusha
subb
and
xchg
popf
ljmp
add
clc
std
loope
repz
jbe
imull
mov
jge
dec
jle
gs
push
sub
xchg
mov
sbb
stos
pusha
pushf
hlt
pop
or
jg
icebp
stos
and
jg
incb
pop
enter
xor
andl
pushf
mov
jo
sbb
mov
inc
les
icebp
xchg
lcall
xor
push
addr16
push
addb
jl
xor
inc
jle
add
xchg
imul
pop
adcl
xor
hlt
mov
sahf
test
addr16
dec
popa
jg
aam
cmp
ss
add
add
sub
loope
xor
aad
sub
or
push
xchg
test
repz
fisubl
push
out
cltd
mov
sub
jne
mov
insl
stos
loop
je
xor
jb
xor
pop
daa
pop
dec
ret
and
inc
mov
sti
mov
and
xchg
pop
dec
xchg
xchg
sbb
mov
test
out
out
jns
bswap
sbb
mov
sbb
mov
cmp
dec
or
jo
sub
mov
std
fcmovbe
cmc
mov
lods
or
popf
insb
jle
dec
iret
pop
cmc
mov
in
insb
out
xchg
mov
mov
popa
mov
mov
test
je
adc
decl
sti
sahf
fisubrs
or
dec
dec
adc
adc
je
cmp
pop
loopne
mov
adc
push
lahf
movsb
inc
jge
jae
movsl
aaa
sub
adc
cmp
sbb
loopne
jns
lods
out
sub
test
xor
inc
push
pop
sti
adc
movsl
inc
sbb
pop
lcall
mov
xchg
sub
mov
addl
in
push
mov
cmp
repz
pop
sub
dec
imul
aas
test
push
outsb
mov
jns
popa
mov
fld1
xor
decb
in
mov
dec
bnd
mov
hlt
add
sti
sub
daa
scas
xorb
jae
xlat
xor
aas
and
inc
shrb
movsb
jle
rcll
mov
pop
jecxz
fistpl
mov
pop
mov
insb
and
push
lea
cmp
pop
sbbl
outsb
adc
lret
popa
fwait
mov
jb
xor
inc
jb
insl
and
sub
fists
push
xor
push
cmc
mov
cs
sub
sti
and
popf
movsb
lret
je
loopne
enter
addr16
aam
jp
out
cmpsl
test
ja
shrl
unpcklps
add
test
jmp
inc
pop
jb
stos
cmpb
inc
std
push
xchg
mov
cmpsb
adc
fstpt
sbb
or
int3
insl
lretw
in
or
adc
and
xor
jmp
dec
lret
mov
ja
lret
seta
push
push
jns
das
add
ss
jp
repnz
lret
and
push
lods
jmp
and
jmp
pop
push
or
nop
std
in
scas
iret
sahf
pop
lret
inc
das
addr16
mov
push
roll
in
clc
stos
inc
jb
mov
mov
out
push
hlt
iret
leave
inc
mov
jo
push
fildll
cwtl
lods
inc
lret
add
aad
in
lret
lret
jge
in
adc
mov
dec
test
cmpsl
mov
pop
adc
inc
cmp
sub
insb
add
nop
jecxz
lcall
insb
mov
outsb
and
sub
xor
push
fdivs
mov
sti
dec
jecxz
mov
pusha
sarb
mov
adc
andb
sbb
scas
shr
and
ret
jnp
jl
mov
loopne
or
movsb
sbb
jb
and
out
add
adc
lods
pop
stos
insl
push
mov
xor
mov
fwait
push
icebp
in
sbb
outsl
mull
sbbl
sub
mov
pop
lret
xchg
js
pop
out
sub
xchg
jmp
or
insl
mov
movsb
sub
dec
mov
pop
adc
or
cmp
pop
sub
jnp
shlb
lret
mov
shll
sti
insb
ret
xchg
push
jae
jnp
sub
in
add
daa
xchg
sub
dec
sti
mov
mov
inc
imul
das
clc
sub
sbb
mov
push
jb
shll
pop
xor
icebp
out
ljmp
lahf
mov
and
out
repnz
jns
pop
sub
cwtl
cmp
and
push
jg
dec
inc
popa
and
sbb
mov
fcomps
lock
jge
ret
movsl
pusha
jecxz
cmp
inc
sub
sbb
inc
xchg
add
adc
push
out
mov
mov
add
scas
push
aad
scas
cld
scas
pop
cmp
jp
mov
xor
test
loope
add
mov
mov
pop
or
sbb
roll
movsl
loopne
in
sbb
or
adc
cwtl
nop
daa
lret
mov
xor
leave
cmp
cli
scas
dec
sti
scas
ljmp
ljmp
cli
in
ss
enter
cltd
insl
testb
sbb
jb
lcall
or
mov
xor
mov
add
dec
mov
pusha
push
mov
inc
and
sbb
rcl
inc
in
in
rorb
jb
cmp
pushf
xchg
cmp
icebp
sahf
xor
mov
nop
mov
cmp
mov
cmp
sub
mulb
inc
cmpsl
adc
push
cltd
shl
adc
push
pop
push
xchg
add
jae
cmp
lret
fistpll
xchg
sti
jo
sub
rclb
je
jg
in
test
push
mov
cmpsl
adc
and
out
test
stos
xor
rcl
xchg
add
subb
fidivs
out
mul
paddw
mov
push
inc
dec
aam
movsl
mov
mov
dec
dec
std
repz
faddp
cmp
shlb
loope
and
sbb
seto
popf
aad
sbb
xchg
sub
ret
jp
mov
xchg
push
out
test
push
or
mov
cmpsb
sti
xchg
xchg
lahf
test
add
and
cs
arpl
sub
lea
mov
adc
push
push
jge
xor
lahf
stos
repz
inc
cmp
sbb
sarb
outsb
jecxz
jg
imul
adc
insb
mov
mov
fs
pop
inc
stc
addr16
sub
ds
xor
fistl
jns
fwait
inc
mov
repz
fwait
cltd
inc
mov
fucomi
push
sahf
addr16
or
nop
popa
cmpsb
mov
ja
add
mov
add
add
aaa
es
mov
leave
mov
int3
ljmp
mov
sti
vpcomw
xorl
sbbl
or
movsl
shll
add
adc
mov
lds
xchg
mov
es
jno
addr16
stos
mov
addr16
mov
sbbb
mov
fadds
stc
imul
out
adc
dec
leave
fnstcw
adcl
or
dec
jns
cmpb
rcrl
inc
inc
mov
push
xchg
mov
jbe
sub
push
mov
inc
faddp
outsb
das
mov
call
push
outsb
les
fbstp
movsb
or
mov
icebp
idivl
sub
push
je
aad
xchg
pop
test
pushf
inc
mov
and
lods
test
xchg
cltd
repz
stc
imul
inc
pusha
loop
pushf
pushf
fildll
daa
nop
mov
mov
sbb
dec
stos
sbb
or
pop
sub
or
test
lret
and
inc
sub
mov
xchg
xchg
insb
mov
lods
xorb
sti
sbb
notb
mov
arpl
call
outsl
push
cld
incl
fisubrs
mov
cmp
mov
xchg
mov
mov
stos
xchg
pop
add
mov
mov
sbb
mov
cmp
sbb
fs
es
stc
jmp
fsts
pushf
popf
pop
mov
xchg
mov
sbb
xchg
dec
subl
xchg
sbb
push
sbb
cmc
mov
dec
mov
imul
dec
push
xor
xchg
rorl
xchg
pop
test
add
xchg
sub
out
cmpsb
mov
push
aam
push
xchg
je
arpl
mov
shld
call
inc
ljmp
jne
out
mov
add
jge
xor
cmp
sbb
les
into
das
xchg
test
cmp
movb
dec
dec
loop
xor
jmp
cmp
sarb
mov
jbe
enter
or
lret
push
gs
and
jp
dec
sahf
sub
fdivs
iret
fisubs
shl
sub
lret
inc
shlb
int3
fsubs
dec
jecxz
repz
es
cltd
jecxz
dec
xor
mov
aaa
into
mov
testl
add
decb
push
mov
inc
mov
cmpb
pop
ljmp
das
test
fildll
cmp
mov
or
mov
push
mov
inc
cli
test
jns
xchg
cmp
or
in
aam
or
xchg
inc
fwait
aad
cmp
mulb
cmp
cmp
push
fwait
repz
xor
test
hlt
ds
iret
xchg
push
das
or
and
adc
bndldx
jecxz
in
mov
and
jnp
pusha
inc
pop
bnd
push
daa
sub
xchg
pop
inc
jo
xchg
dec
push
xorb
popf
inc
ljmp
dec
rol
jne
dec
arpl
mov
push
popf
xchg
lods
rcrb
and
addr16
push
mov
cltd
fstpt
cmpl
dec
and
xchg
outsb
in
mov
jmp
insl
stc
out
nop
outsb
test
xlat
mov
call
dec
mov
push
mov
sub
sti
in
movsl
sbb
pop
test
fidivl
lahf
push
adc
xchg
mov
mov
ljmp
pop
neg
add
xchg
scas
mov
loope
adcb
jbe
cmp
outsl
push
lods
xchg
nop
xchg
push
divl
pop
rorl
and
jns
sbbl
mov
mov
inc
fcmovnbe
jp
clc
adc
aaa
jne
push
loopne
test
mov
jl
loope
je
inc
imul
movb
notl
add
lea
sub
insl
aaa
adc
outsl
out
sti
inc
cwtl
insl
adc
mov
jg
dec
outsb
adc
rorb
shl
test
les
mov
aad
pop
mov
repz
int
inc
or
test
fstp
ss
mull
mov
adcb
nop
jne
mov
aad
daa
mov
or
sbb
lcall
repz
iret
dec
mov
mov
dec
mov
divl
inc
int
iret
fmuls
dec
dec
sub
mov
fidivl
push
adc
mov
add
push
inc
into
imul
sbb
pop
mov
pop
and
sbb
push
add
sbbb
push
lock
xor
cwtl
xchg
int3
xor
shlb
out
mov
dec
or
cmpsl
js
sub
push
fwait
je
jl
xchg
rolb
push
mov
mov
loopne
cmpsl
fistl
dec
sbb
clc
mov
pop
jne
pop
sti
pop
dec
outsb
inc
sbb
mov
fwait
pusha
stos
dec
xor
rcrb
ja
test
mov
ficoml
mov
test
add
clc
inc
and
push
mov
lret
xchg
mov
mov
into
gs
lock
lods
ja
pushl
push
xchg
aam
inc
cmpsb
loopne
lock
mov
psrlq
pop
cmpsl
hlt
xchg
leave
stos
dec
fadds
jbe
add
out
sub
push
pop
mov
inc
jmp
roll
outsl
leave
data16
cli
nop
xchg
bound
scas
inc
inc
aam
jmp
pop
sbb
xchg
loopne
dec
sub
xchg
xchg
rol
aad
and
push
pop
add
add
sub
push
cmpsl
cmp
inc
icebp
and
xor
mov
popf
les
sub
data16
pop
and
sub
shrb
and
mov
push
iret
cmpsb
fcomip
in
add
pop
lock
cmp
cltd
lret
pusha
ficomps
pusha
popa
sub
mov
sarl
jmp
inc
sub
adc
mov
mov
fsubr
sbb
push
mov
jae
cmp
jbe
sub
mov
mov
jmp
fstps
sbb
add
or
push
mov
xchg
add
cmpsl
das
pop
and
ret
aas
andl
cmpsb
sub
test
sbb
mov
push
cmp
xchg
cmc
iret
sub
add
mov
jge
dec
mov
pop
out
push
or
lds
shll
clc
cmpsl
mov
jo
mov
popf
xor
lret
fdivs
mov
sbb
pushf
out
repnz
fs
lods
cmp
push
sub
icebp
sub
js
cli
fsubr
test
adc
inc
dec
fs
test
jo
fildll
nop
pop
mov
bound
loopne
xchg
nop
shrl
scas
lahf
cmpsb
leave
loope
or
dec
ss
inc
fidivl
cmp
loopne
ss
mov
xchg
popa
xchg
jo
fistpl
jno
dec
jg
sti
daa
cmp
pop
repnz
push
and
push
sub
enter
test
enter
loope
outsb
dec
out
pop
adc
incb
xor
sarl
rorl
popf
pop
xchg
js
or
aad
push
cltd
xor
fidivl
movsl
inc
sub
int3
sbb
sbbb
cli
xchg
test
pushf
and
cmpb
and
mov
imul
mov
aad
in
adc
sub
pop
lods
jmp
notl
inc
lods
sbb
ja
add
out
add
fbld
adc
mov
lret
jo
loopne
ss
movsl
cmp
fcoms
jno
jl
das
cmp
dec
push
xlat
lcall
nop
data16
repz
int3
inc
mov
mov
std
pop
sub
mov
or
push
cld
sub
cmp
inc
and
xor
add
inc
mov
leave
popl
push
lcall
adc
cmp
in
sub
mov
xchg
or
ja
push
out
test
and
xlat
xor
lea
lret
and
je
jnp
fsubrs
inc
push
in
cmp
pop
jae
out
jns
pushf
enter
lock
xchg
ret
jg
mul
cmpsl
sbbb
sbb
jl
imul
fwait
test
lret
bound
mov
xchg
jmp
push
adc
pushf
mov
fbld
cwtl
fcomp
in
or
inc
in
lods
xchg
rolb
pop
mov
scas
movsl
push
out
fistl
sub
daa
out
jg
int
mov
or
mov
pop
loopne
pop
pop
addr16
repz
rclb
sbb
xchg
pop
push
cmpsl
addr16
ss
lahf
aaa
ror
test
or
adc
pop
mov
xor
clc
test
subl
push
xlat
int
test
or
cwtl
loope
lret
inc
mov
call
sbb
mov
push
sbb
mov
mov
mov
jge
in
xchg
xchg
dec
mov
popa
push
movb
imul
jne
inc
sub
shrb
cltd
jp
leave
in
xor
je
pop
jno
xchg
cwtl
mov
or
in
cmp
push
xchg
pop
pop
inc
xchg
or
fmuls
pop
cmp
scas
icebp
loop
stos
rcrb
fisttps
out
repnz
and
outsb
lods
rcrb
mov
and
xchg
pop
sbb
and
cmp
rol
adc
divb
mov
aaa
dec
jne
stos
mov
mov
testl
push
inc
jo
jne
push
insb
iret
pop
insb
lret
push
push
pop
or
mov
cmp
push
dec
pop
in
std
jne
or
in
ds
mov
push
aad
mov
sub
xor
repnz
xchg
adc
leave
icebp
stos
leave
mov
dec
arpl
lret
test
pop
fistl
adc
cmp
imul
pop
xchg
mov
push
xor
in
adc
in
outsb
repz
sbb
or
sarl
imul
or
setp
inc
fnsave
repz
popa
adc
xchg
ljmp
lret
fdivs
sub
jg
cmc
out
push
jle
jb
orl
push
add
dec
sbb
jae
and
mov
idivl
clc
mov
mov
or
jl
dec
pop
ja
iret
adc
mov
dec
lcall
adc
add
dec
in
aad
imul
decb
mov
shll
push
iret
iret
ss
pop
lds
pop
pop
mov
aaa
test
cmovbe
xor
sub
mov
loopne
or
adc
xor
fwait
jp
pushf
lods
rol
in
out
aam
sarb
int
pop
cld
cmc
lods
and
pop
cmp
push
ss
es
cli
popa
mov
out
rclb
int3
insb
inc
mov
lahf
in
aam
mov
bound
push
jle
std
popa
and
std
loop
jo
out
int3
test
arpl
mov
repnz
cmp
rol
outsb
pop
repz
ret
jmp
aas
dec
add
je
sub
xchg
jno
pop
ret
lock
lods
and
std
dec
movsl
mov
sub
rcrl
cltd
xor
jl
stc
xor
mov
sahf
xchg
add
xor
insl
adc
loopne
in
sub
mov
inc
xor
and
mov
mov
leave
outsb
jl
mov
or
inc
mov
and
data16
pop
push
stos
mov
cmp
outsl
or
stos
push
ficoms
cmp
cmp
imul
stos
cmp
repnz
out
or
inc
fmul
xchg
hlt
dec
test
call
pop
add
cmp
repz
and
scas
fidivl
push
sbb
jp
push
mov
sub
sbb
inc
xorb
imul
hlt
xchg
mov
lcall
push
fdivs
stos
dec
xor
orb
les
pushf
ret
stos
ljmp
std
cmp
loop
push
sub
push
inc
insl
or
mov
scas
and
mov
mov
nop
inc
outsl
aad
cmpsb
push
pop
stc
xchg
sbb
mov
int3
jns
xchg
xor
fwait
push
in
int3
jecxz
push
lahf
push
fnstsw
hlt
add
je
rolb
mov
dec
loope
sub
ret
fsub
xchg
sub
cli
into
fsub
sub
fsts
adc
lds
cmp
xchg
stos
inc
imul
push
or
add
fisttpll
jo
mov
loope
imul
mov
mov
js
js
xor
push
in
outsl
cld
mov
notl
stc
or
out
mulb
dec
test
outsb
adc
xor
iret
daa
repnz
adc
adc
or
decb
sbbl
add
shlb
xor
pop
sahf
xchg
test
in
lock
movsl
jae
cmp
loope
and
lcall
arpl
mov
test
push
outsb
inc
nop/reserved
ss
xor
dec
add
es
add
hlt
cmc
addr16
add
xchg
cmpsb
xchg
mov
mov
xor
divl
dec
loope
mov
inc
mov
stos
xchg
ss
orb
mov
rolb
add
daa
iret
gs
or
cmp
xchg
ret
push
repnz
dec
in
cs
jl
lods
movsb
sub
dec
fxch
andl
lods
das
xor
fisubrl
jle
sub
mov
jge
fldt
mov
repnz
mov
and
imul
mov
in
fadds
movsb
pop
nop
mov
sarl
lcall
cmp
dec
sub
push
inc
adc
mov
fistpl
loope
sub
negb
clc
cmpsb
bts
xor
outsl
daa
push
iret
and
xchg
fcmovnb
hlt
int
hlt
push
cmpsb
dec
mov
sub
sub
shl
daa
fildl
bound
mov
pop
lahf
mov
rcrb
push
and
pop
jle
xchg
mov
xor
aad
sahf
ss
jno
dec
pop
jo
fstpt
xchg
sub
lds
cmp
in
test
ficoml
xor
or
cmpsl
dec
pop
xor
sahf
xor
clc
dec
mov
sub
push
bound
lret
push
callw
sbb
xor
rcr
sbb
inc
sub
dec
stos
jne
loope
dec
lret
pop
push
in
adcb
insl
mov
mov
sti
out
ret
pop
out
push
inc
push
or
ds
shlb
xchg
shlb
cmp
xchg
dec
gs
les
sub
xchg
mov
xchg
stc
xchg
sub
sbb
xchg
pop
insb
loop
xor
sub
xlat
add
pop
dec
mov
and
push
cmp
push
into
sub
les
push
je
lahf
dec
mov
mov
xor
out
jae
lcall
cmp
ljmp
and
lret
dec
or
and
cmpsb
loop
out
pop
call
iret
add
and
fstl
mov
aad
les
adc
orl
mov
add
xchg
aad
stos
shl
push
pop
cmpsl
repnz
mov
pop
cli
rolb
lds
inc
cld
push
or
int
fstpt
and
sbbb
add
xchg
sub
inc
outsl
adc
sub
cmp
jecxz
adc
icebp
and
insl
pop
inc
std
mov
jmp
dec
or
js
leave
inc
cwtl
aas
test
jbe
and
xor
and
cmpb
mov
pop
push
jmp
xchg
cmp
cltd
jns
mov
xor
inc
push
ja
adc
and
sub
sti
into
imul
mov
icebp
je
jmp
loope
faddl
ss
push
js
sti
and
dec
dec
int3
jp
cmc
cmp
gs
mov
push
aad
icebp
repnz
pop
push
ljmp
ljmp
sahf
nop
daa
mov
std
test
and
fildll
adc
fs
ret
daa
outsl
outsb
mov
jecxz
add
sahf
clc
pop
xchg
daa
pextrw
sub
stc
pop
sbb
es
xor
dec
mov
insl
push
lret
dec
xor
das
shr
cmp
clc
aas
mov
je
jmp
xorl
insl
jnp
ret
daa
and
xchg
or
inc
push
push
push
jae
cmp
mov
lcall
fiadds
cmpsl
lods
inc
or
pop
sbb
push
ja
xchg
push
adc
call
inc
in
ss
jns
cmpsl
insb
pop
add
xchg
lds
dec
movsb
and
arpl
push
cs
or
cld
xchg
lods
inc
sbb
pushf
or
push
nop
or
ficompl
sub
inc
arpl
jmp
add
dec
inc
daa
cmpb
pop
add
or
popa
and
daa
cmp
lahf
pusha
movsb
insl
cmpsb
xor
bnd
das
add
pop
shlb
stos
daa
aas
dec
mov
cld
addl
or
in
cmp
cmp
xor
dec
fldl
cli
sahf
stc
jae
or
mov
lea
xchg
cmp
lret
idiv
aad
adc
add
arpl
iret
sahf
push
mov
frstor
ds
cmpsl
ds
inc
sub
das
dec
scas
or
jle
and
adc
fs
add
and
sub
push
dec
mov
mov
mov
inc
and
cmp
jle
mov
into
mov
test
pop
mov
xchg
cs
out
scas
jnp
loopne
imul
fucomi
std
or
mov
add
mov
pop
jge
sbb
imul
subl
sti
fsubrp
xchg
fcomps
orl
rcr
pop
dec
enter
shlb
pop
push
outsl
lods
jb
rolb
mov
xchg
std
xchg
push
test
stc
inc
loope
mov
loop
stc
fcoms
pop
call
sar
sbb
pop
mov
cmp
inc
das
arpl
sbb
inc
push
inc
cmp
push
dec
lock
lods
imul
imul
add
jcxz
push
shrb
inc
insb
jns
pop
sbbl
add
jl
out
jp
add
mov
in
stos
daa
mov
push
add
xor
addl
shll
or
or
sahf
inc
inc
dec
and
cmpsl
sarb
cli
cmpb
pop
lahf
push
leave
jns
or
mov
aad
into
int
incl
gs
push
jge
mov
cmc
jp
cmpsl
cmp
cmc
and
cmc
nop
sarb
bt
and
pop
xchg
sub
mov
jns
xor
mov
test
jnp
sub
test
cmpsb
inc
xor
fnstenv
int
mov
leave
sbbb
test
cwtl
shrb
inc
jns
ljmp
adc
cmpsb
sub
mov
mov
repz
push
dec
sub
pop
addr16
sbb
dec
jl
dec
dec
fwait
push
in
and
ds
fimuls
pop
cld
ljmp
sbb
jo
cmp
jnp
pop
xchg
ficomps
or
cmpsb
sub
pop
fsubrs
mov
jg
pop
cmp
cmpsl
mov
jae
ds
jo
cli
mov
aam
dec
push
or
cs
repz
push
mov
adcb
in
push
mov
sarl
add
arpl
jae
or
int
fisttpll
lods
jns
imul
test
mov
add
cmc
cmp
cwtl
mov
inc
mov
pop
jg
pop
or
hlt
shld
inc
inc
push
rcl
aad
es
ret
jnp
mov
jno
loopnew
push
mov
frstor
sub
shr
jmp
or
ss
inc
cld
pushf
inc
fwait
lods
push
adc
mov
xor
pop
jbe
xchg
xchg
sub
mov
cs
ss
xor
insl
movsb
cmp
in
dec
add
jl
pop
mov
loop
ds
aad
push
ficoms
gs
jo
xchg
ss
shrb
movsl
adc
add
push
jbe
cmp
inc
stos
xchg
fcmovb
xor
lret
push
mov
mov
inc
xchg
pop
stc
lods
out
ja
sbb
xor
decb
bound
pop
cmp
stos
jmp
mov
push
sub
scas
in
sbb
adc
jecxz
cli
mov
adc
js
and
andl
mov
fiaddl
dec
ss
iret
out
push
add
mov
dec
fmuls
cmp
cli
cmp
or
cmpsb
shlb
cld
xchg
cmpsb
sbbb
add
insl
imul
mov
inc
fldcw
repnz
jle
adc
lods
jae
add
sub
cmp
jle
js
dec
cmp
adc
dec
cli
addl
fstl
fcmovb
push
mov
fsubrs
push
rorb
sub
outsl
pop
into
cmp
cld
filds
mov
out
push
push
outsb
add
lret
mov
outsl
les
xlat
cmc
cmpsl
lods
or
adc
sub
pop
sti
sub
sub
je
pop
call
cli
sbb
das
cmp
adc
ds
sti
jp
xchg
out
mov
jns
dec
aaa
or
sbb
pop
test
ret
or
test
push
icebp
xor
ja
mov
mov
inc
fsqrt
lods
mov
push
xor
aam
pop
inc
mov
lcall
cli
mov
jb
pmulhw
or
andb
mov
repnz
mov
repz
stos
cmp
movsb
out
lea
xchg
or
dec
mov
rcrb
cli
shrb
sbb
mov
xchg
jbe
xor
cs
addb
scas
add
das
mov
iret
cmp
subl
sub
pushf
icebp
jno
loope
and
push
inc
jbe
js
les
lcall
mov
nop
fdivrl
mov
adcb
xor
push
aaa
into
push
add
je
outsl
jge
push
cmp
mov
fwait
cmp
push
adc
xor
aas
into
pop
jle
add
inc
dec
pop
cmc
cmc
ret
mov
xchg
add
jbe
cmp
push
push
xchg
sbb
imulb
adcb
sti
inc
f2xm1
adc
dec
stos
lcall
inc
test
xor
into
outsb
cwtl
mov
push
pop
mov
outsl
stc
cmpsb
sub
insb
xrelease
jp
inc
xchg
loope
cwtl
adc
sahf
xor
negl
jg
xor
rolb
cmpsl
loope
jmp
aad
mov
fbld
mov
mov
nop
stos
jp
push
rorb
sar
je
mov
adc
lea
out
and
jg
leave
mov
jge
pushw
es
push
in
dec
add
jae
imul
adc
or
aad
or
out
pop
cmc
dec
enter
inc
fdivs
and
into
jno
push
out
push
adc
jbe
xchg
shrb
push
pushf
xor
push
rcrl
negl
xor
scas
int3
mov
push
ljmp
insb
jno
jo
dec
outsl
int3
cli
mov
ret
xor
sbb
popl
xchg
cltd
xlat
fstpt
push
stc
jg
sbb
xor
fisubrs
mov
gs
ljmp
jg
mov
add
bound
movsl
out
es
fisubrl
jecxz
cld
push
inc
fstpt
dec
fildll
int3
pop
repnz
push
mov
fwait
inc
sbb
or
xchg
insb
fnstsw
cli
test
clc
cmp
in
shr
cli
or
lods
sti
sahf
hlt
mov
bound
push
in
fisubrl
mov
repz
imull
sub
jp
jmp
dec
dec
mov
in
inc
dec
fbld
or
stc
adc
jecxz
nop
daa
decl
cwtl
das
xchg
and
outsl
cli
mov
fsubp
sbb
and
adc
mov
idivl
lret
mov
push
mov
cmpsb
cmp
mov
push
sti
xchg
xor
mov
idiv
pop
adc
movsl
xchg
sub
in
dec
and
outsl
xchg
insb
mov
loop
adc
ja
jge
xchg
fwait
decb
push
jge
jecxz
mov
pop
shlb
and
or
repz
pop
push
mov
mov
ret
sbb
pushf
ret
pop
jle
adc
xchg
xor
cli
out
mov
dec
xlat
jb
dec
stos
dec
jp
sti
and
test
imul
je
dec
in
test
add
xor
sti
outsb
cmp
sbbl
iret
sarl
sbb
add
and
shrb
fsts
out
and
mov
into
jo
daa
cmp
movsb
mov
test
sub
out
jle
rol
push
rcl
test
jae
aam
pop
push
pop
push
mov
ja
testb
icebp
xchg
fimuls
mov
enter
cmc
cmp
and
or
jp
adcb
andl
add
pop
loop
das
popf
mov
jg
add
mov
pop
mov
test
xchg
clc
ljmp
aas
loop
cmp
sub
dec
fs
inc
add
pushf
aam
iret
call
inc
add
sar
leave
loope
cmc
inc
cli
mov
cmpsb
cmp
cmp
inc
jecxz
fbld
add
jmp
imulb
lret
mov
jmp
insb
sub
fmull
dec
cltd
test
mov
cmp
xor
add
sbb
xor
dec
int3
ja
data16
nop
mov
out
cmp
pop
lds
outsb
add
mov
mov
push
fmuls
out
jl
pop
cmpsl
xorb
sbb
xchg
and
pop
sbb
mov
mov
test
mov
dec
inc
push
cli
add
stos
fiaddl
mov
jecxz
inc
out
jbe
out
daa
pop
sbb
sbbw
in
xchg
adc
cmp
pop
adc
xchg
and
xor
fstps
faddp
jge
rcrl
lock
and
jns
jecxz
pandn
mov
adc
in
adcl
jp
jbe
push
andl
dec
imul
xchg
mov
cmovge
mov
pop
iret
dec
sub
xor
into
add
pushf
stos
leave
pusha
fsubrl
out
dec
jle
scas
mov
roll
ret
stc
mov
mov
mov
loope
xchg
mov
push
or
jbe
sbb
inc
pop
xor
inc
ds
cs
jb
sbb
test
fstpt
push
aad
pop
out
sub
fisubrs
scas
jmp
shr
dec
jmp
mov
pop
andb
cmp
add
test
inc
push
addr16
rcrb
mov
orb
cli
dec
xchg
mov
decb
mov
ljmp
scas
mov
loopne
add
sbb
mov
outsb
push
xor
lcall
pop
xchg
push
cmp
test
jb,pt
sbb
jnp
call
mov
add
out
mov
cmp
icebp
or
sbb
lcall
jnp
in
xor
mov
dec
fsubr
fsubl
pop
dec
xor
and
dec
data16
push
hlt
subl
loope
cmpsb
jns
jne
mov
stc
jle
jge
int
jle
inc
out
cwtl
sti
aam
in
cmp
testl
push
jmp
outsl
jp
enter
ret
ret
dec
push
cwtl
sbb
cmc
data16
xor
scas
mov
test
inc
icebp
xor
ss
shl
jg
sarb
sbb
mov
test
xchg
stos
jmp
sub
pop
xor
call
cmp
pmulhw
addl
rcrb
pop
inc
add
xor
cmp
pop
dec
push
and
jo
jmp
mov
sub
outsl
jns
and
dec
pop
hlt
xor
out
cmp
push
es
sub
xor
mov
loope
data16
push
sub
flds
push
lock
mov
inc
mov
jno
push
jae
mov
push
sub
arpl
shll
cmp
mov
pusha
rorl
mov
xchg
mov
or
scas
xchg
repz
xor
add
popa
outsb
push
lahf
xchg
mov
or
mov
push
sbb
mov
ss
aad
int3
mov
in
out
sub
flds
cmp
dec
ja
mov
jne
inc
pop
call
mov
pop
sbb
testb
and
roll
cld
xchg
mov
sbb
jl
mov
lahf
xor
mov
cs
es
movsb
nop
mov
daa
mov
jns
call
sbb
sarl
lods
testb
pop
icebp
repz
or
ret
pop
sahf
jns
enter
cs
push
mov
mov
add
push
stos
clc
xchg
xor
cmp
ds
dec
sbb
add
pushf
mov
mov
popa
inc
fstl
mov
xchg
dec
aad
repz
jno
ss
in
mov
sub
lods
adc
jb
das
xor
mov
loope
sub
cwtl
push
cmp
subb
adc
mov
or
test
xchg
xchg
xchg
pop
je
pop
in
mov
cmp
fst
inc
xchg
xor
andl
push
mov
push
in
dec
sbb
mov
movsb
jbe
mov
mov
push
inc
dec
dec
cmpsl
in
jmp
addl
xchg
std
inc
push
push
ffree
inc
add
stos
cmp
mov
add
movsl
xchg
lahf
out
nop
pushf
mov
pop
scas
jb
fwait
xor
dec
jmp
mov
movb
aad
mov
xchg
sub
pop
push
mov
adc
mov
pushf
cmpsb
rcr
xchg
popa
aaa
enter
fwait
test
popf
push
cmp
popa
add
aam
lret
push
ja
stos
inc
cwtl
push
cmpl
jle
jmp
gs
cli
fstpl
cld
outsb
add
es
push
push
in
dec
ss
lea
lock
xchg
roll
cmp
or
cmp
out
insl
sub
ret
pop
mov
pop
dec
fcom
out
or
icebp
xchg
mov
sbb
mov
mov
mov
xchg
lock
add
sub
cmp
dec
jmp
cmp
dec
jecxz
push
push
inc
pop
add
cmpsl
add
insb
push
mov
add
mov
popf
sbb
shr
stos
xlat
push
xor
inc
imul
mull
into
pusha
idiv
pop
mov
lcall
and
repz
nop
jge
xchg
lahf
pop
imul
les
cmp
xchg
ror
inc
ficoms
int
add
out
fmull
push
mov
ret
xchg
divb
sub
push
add
fbstp
imul
jecxz
push
imul
xor
test
inc
fdivrl
mov
out
rorl
ret
out
cmc
mov
push
hlt
mov
push
ljmp
xchg
mov
aaa
and
cmpsb
loope
cmp
dec
sub
mov
push
add
add
dec
leave
sbb
ljmp
add
dec
and
mov
cmp
lret
sbb
and
mov
add
sub
push
sub
mov
mov
test
sub
sub
out
je
add
sbb
sti
sahf
lods
fmull
pop
hlt
jle
mov
xchg
cmp
jge
imul
pop
mov
or
mov
xchg
xor
inc
pop
mov
in
popa
pop
mov
cwtl
jnp
dec
enter
sahf
sahf
push
bndstx
stos
pop
jo
repz
movsb
stos
add
out
inc
incb
ja
cmpsb
test
xor
dec
dec
jmp
cmc
cld
xchg
test
push
dec
xor
and
adc
pop
aaa
jge,pn
cld
ja
mov
ror
rorl
jb
icebp
pop
cmpsl
xor
cmc
jg
or
sub
cmp
push
btr
loop
insb
adc
leave
pop
mov
pusha
pop
mov
push
mov
cltd
shlb
jno
stos
jbe
mov
sub
xor
push
dec
out
pusha
mov
popa
and
stc
add
jp
arpl
pop
mov
or
imul
inc
mov
adc
jns
and
xchg
imul
push
leave
cmp
jb
sarl
jnp
int3
scas
mov
add
jo
ljmp
inc
xor
out
scas
jmp
sub
in
cmp
jae
arpl
or
cmc
lods
sub
fwait
mov
jnp
pop
mov
movsb
cmp
mov
insb
xor
repnz
mov
int3
push
dec
adc
js
adc
xchg
push
fwait
xor
lcall
pop
incb
mov
arpl
sub
test
fisubl
sti
loopne
fsubl
arpl
xchg
lahf
xchg
daa
enter
movswl
jg
int
sub
xchg
es
dec
cli
xchg
lock
fcmovb
push
decl
jmp
fmuls
pushf
int
push
shr
adc
jecxz
xor
fistps
lds
icebp
aad
stos
enter
dec
mov
ficoms
movsl
cmp
jmp
aas
dec
adc
repz
and
inc
push
xor
fistpl
cltd
xchg
ret
pop
imul
push
aaa
sub
push
repnz
adc
loop
lods
adc
repz
fbstp
sbb
and
aad
xchg
in
iret
es
xor
pusha
imull
push
cmp
sarb
xchg
xchg
stos
add
cs
push
sub
ja
addr16
or
push
daa
or
push
out
pop
cmpsl
mov
cs
lret
loope
gs
sti
cmp
xor
jp
push
cmp
sar
mov
pop
test
xchg
rclb
xlat
or
xchg
jge
pusha
out
jno
add
inc
dec
push
int
and
jmp
lods
sub
es
or
mov
pop
ljmp
call
push
xchg
movsb
test
push
aas
add
sub
inc
jns
inc
sbb
xchg
sti
sbb
aam
mov
ds
fldl2t
cld
sbb
push
sbb
mov
inc
nop
pop
scas
sarl
push
shlb
pop
sbb
in
jae
enter
mov
and
nop
pop
push
popf
and
imulb
jns
sbb
sbb
inc
inc
dec
shrb
clc
push
jl
hlt
mov
push
add
hlt
outsl
outsl
pop
sub
sub
mov
ret
jl
fcomip
enter
popf
cld
xchg
sub
cli
out
sub
dec
outsl
inc
mov
orb
jge
cmpsl
adc
lods
push
pop
jne
xchg
imul
push
jbe
test
jge
pop
pop
scas
mov
push
scas
jb
insl
or
out
push
and
pop
leave
into
xor
mov
xchg
mov
sbbb
jo
decb
cmpsb
daa
es
or
movsl
xlat
mov
test
test
inc
dec
loop
sbbl
adc
inc
adcb
subl
lret
mov
outsl
mov
fnsave
repz
xor
sbb
inc
adc
cmp
test
scas
insb
pusha
cs
cmp
pop
cmp
push
cwtl
lcall
int3
imul
cmp
stc
nop
and
fisubrs
cmp
and
sub
fcmovnu
testb
jae
jg
in
push
xor
cmp
test
pop
jno
adc
popa
sahf
push
gs
sahf
pop
inc
pushf
cwtl
addl
xor
mov
mov
jg
push
es
in
into
aad
sbb
cmc
or
hlt
pop
push
out
adc
outsb
add
dec
adc
jg
popf
call
lahf
or
ljmp
jne
or
mov
dec
push
cwtl
dec
cwtl
fdivs
stos
xor
ljmp
adc
cld
mov
jge
adc
adc
and
mov
xlat
bound
jo
cmp
dec
andl
aaa
imulb
fldl
xchg
ja
mov
ficoml
cmpl
inc
push
jae
jnp
leave
pop
mov
add
movsb
incl
xor
test
test
out
dec
addr16
mov
jb
push
cmc
sbb
jg
add
mov
dec
sbbb
out
test
lcall
mov
mov
loopne
outsl
cmp
fs
enter
loope
js
sti
lea
cmpsb
push
lahf
inc
in
pop
addb
stos
gs
fcoml
mov
jl
cmp
ret
sub
lea
jg
das
movb
and
lods
dec
dec
pop
rcrb
jp
and
adcb
mov
mov
push
pop
int
sti
xor
fsubrl
adc
iret
filds
and
xlat
jnp
out
imul
mov
repz
mov
pop
xchg
push
imul
out
add
xor
push
sbb
dec
out
test
les
hlt
add
data16
push
out
mov
push
insb
inc
pushf
jb
push
enter
aad
sbb
adc
es
fidivs
stc
push
or
xorb
es
or
jmp
pushf
xor
in
scas
and
fs
sub
fisubs
mov
xchg
out
enter
sbb
jae
rcl
adc
inc
clc
pop
or
stos
sarb
imul
jle
imul
xor
sahf
xchg
out
dec
scas
in
ret
pop
push
ret
pop
xor
push
inc
mov
shl
rorb
aad
xchg
nop
movsl
and
outsb
xchg
inc
push
jecxz
pop
inc
add
mov
data16
xchg
push
sub
xor
pop
lret
xor
aad
push
stos
rorl
test
push
xor
repz
sti
or
inc
jmp
mov
jbe
rcr
xor
pop
push
ror
mov
and
ret
rcl
xor
jo
push
out
stc
mov
pop
push
jbe
jo
push
inc
cmp
push
std
inc
pop
movl
mov
rorb
mov
pop
gs
push
testl
cwtl
lock
mov
stos
insl
xchg
or
test
int3
arpl
mov
jle
cwtl
out
xchg
mov
mov
jle
cmc
jle
test
or
call
nop
int3
fnstsw
or
mov
jnp
pop
rcrb
add
ffree
jno
clc
push
xchg
or
pop
push
sub
cmp
rclb
setbe
or
push
xchg
xor
fisttpl
xor
add
add
pop
iret
loope
call
sahf
inc
stos
mov
xor
cmpsl
mov
mul
xchg
cli
jle
dec
cs
adc
sti
pop
jl
int3
pushf
jbe
shrl
iret
xor
mov
push
cmpsb
mov
mov
into
loopne
andb
or
stc
es
in
xor
data16
pop
stos
cltd
stos
nop
dec
aaa
into
js
mov
pop
loop
cmp
jnp
in
stos
jecxz
adc
stos
outsb
dec
mov
jmp
popf
or
xchg
mov
into
inc
fdivrs
dec
or
in
imul
pushf
or
push
cli
loopew
arpl
mov
xchg
rorb
call
sub
das
das
jp
lds
mov
lods
clc
or
lret
xor
xor
sub
inc
stos
jne
ds
je
cmpsl
inc
scas
in
repnz
ror
int
xor
jo
jge
xchg
or
dec
dec
lret
fiaddl
jecxz
cmpsb
adc
or
inc
or
in
pop
push
cmpsl
les
mov
cli
inc
addr16
stc
xchg
loope
out
notl
push
je
pop
xchg
xor
inc
test
pop
neg
push
jae
xor
xorb
or
xchg
mov
inc
pop
stos
dec
insl
mov
mov
enter
arpl
call
mov
jo
or
out
cmp
cmpsb
add
xor
lock
adc
sub
in
aam
shll
adcb
outsl
jno
mov
push
xchg
test
and
inc
mov
ror
cmc
shlb
inc
mov
mov
push
int3
xor
and
push
fstpt
aad
mov
or
pop
and
pusha
pop
and
mov
push
mov
mov
adc
movl
jo
fbld
dec
fucomp
hlt
or
cmp
sub
popf
aad
adc
out
cmpsb
int3
pop
and
fsubr
xor
jl
pop
cmp
inc
and
frstor
jecxz
mov
push
mov
mov
fsubs
movsb
dec
stc
mov
jl
leave
add
daa
sti
cltd
xor
rorb
push
ljmp
jno
pop
lds
cli
cmp
xchg
xchg
popf
lods
js
mov
jb
scas
mov
sub
in
cmpsl
test
data16
dec
pusha
mov
push
push
add
test
xlat
loopne
sub
dec
xor
add
dec
loop
data16
sti
or
push
test
jno
mov
jae
loop
int
je
ja
dec
loop
cld
and
outsb
imul
pop
sbb
cli
inc
int3
stc
std
lds
sti
pop
xchg
jb
fldt
test
icebp
fbstp
adc
orb
test
mov
xchg
push
lds
fwait
scas
test
cmp
mov
and
call
pop
and
xchg
sub
pop
lods
mov
push
adc
inc
xchg
inc
aas
add
imul
scas
push
fs
insl
cmp
sahf
jbe
stos
mov
insb
insl
and
dec
cs
ret
shll
ret
jp
in
lods
out
movb
xchg
jge
aaa
scas
mov
jo
push
pop
mov
xchg
movsl
add
mov
ficoml
mov
shl
jnp
and
out
mov
xchg
stos
shrb
mov
dec
mov
mov
mov
repz
cmp
call
xchg
mov
sub
xlat
adc
sub
and
push
in
pusha
movsl
inc
in
mov
outsl
mov
pop
mulb
pop
dec
mov
hlt
lret
xchg
mov
mov
outsl
push
pinsrw
dec
ja
lds
hlt
xchg
push
out
mov
jb
mov
or
xchg
mov
add
xor
sub
dec
fists
test
aaa
das
mov
sub
cli
int3
out
jmp
jns
je
les
sbb
rcrl
ds
out
je
mov
dec
adc
dec
int
pop
lds
fs
inc
and
loop
shr
test
xlat
mov
or
mov
pop
sub
imul
sub
or
xorb
std
nop
aad
sti
adc
sub
push
in
fimull
in
out
mov
icebp
pop
je
rcrb
rcll
fs
ja
jp
dec
js
jge
sbb
sahf
xchg
xor
rorb
inc
sbb
repnz
enter
cmp
cli
sbb
dec
fbld
dec
data16
jg
ds
sbb
leave
aas
pop
adc
mov
mov
mov
call
dec
xchg
cmp
and
mov
sbb
stos
inc
imul
test
mov
inc
fisubrl
jne
or
mov
shl
pop
jg
add
rolb
ret
test
push
aad
adcb
mov
sub
pop
push
repz
dec
lods
pop
js
andl
jg
loope
fimull
or
sbb
fnstenv
outsb
das
fsubr
sti
xchg
push
jns
imul
lcall
mov
xchg
dec
insl
jnp
cmp
jno
int
pop
sbb
dec
jle
inc
dec
push
lahf
jp
jge
xor
idivl
out
loopne
add
adc
lods
mov
bound
das
addb
or
pop
dec
nop
sbb
jg
pushf
pop
pop
push
or
cs
adc
mov
xor
loopne
push
es
pushl
imulb
push
lahf
jbe
jb
cmp
stc
nop
mov
out
dec
enter
outsb
test
jns
sub
call
pop
or
jno
cli
loope
movsl
aam
pop
push
aad
lods
idiv
pop
jae
fsubrs
lcall
push
add
mov
lret
pop
aad
push
hlt
fcomip
jb
jg
push
pop
and
push
dec
dec
mov
shll
sub
enter
mov
mov
or
lds
sbb
ffree
in
int
imul
imull
and
arpl
cltd
sti
adc
icebp
xor
inc
push
xlat
mov
lret
push
xor
scas
mov
fs
jo
mov
pushf
xchg
sbb
sbb
ret
adc
jne
add
scas
mov
xchg
sub
aam
mov
jb
inc
push
test
xchg
mov
clc
fbld
mov
inc
mov
stc
xchg
stos
or
mov
jle
cmp
out
aaa
mov
test
mov
sub
hlt
fdivrl
mov
sub
xchg
xlat
lea
mov
inc
out
adc
pop
loopne
mov
addr16
popa
movsb
js
hlt
movsb
shrb
insl
pop
mov
mov
xchg
push
mov
imul
sahf
sub
aaa
aam
ret
mov
sbb
addr16
jne
lahf
jmp
push
xor
aaa
sarl
and
movsb
leave
aam
ret
dec
pop
adc
nop
daa
pop
jp
jno
jg
add
adc
cwtl
test
pushf
pusha
shlb
jb
mov
faddl
mov
and
pop
or
mov
jl
xor
xchg
mov
test
leave
jbe
xor
inc
test
push
fisubrl
test
and
sahf
int
dec
in
out
nopl
mov
cmp
pop
pop
out
pop
fisubl
or
push
outsl
lret
ljmp
add
loop
inc
pushf
in
imull
pop
mov
sbb
cwtl
hlt
ret
mov
fdivl
bound
cmp
idivl
loopne
and
mov
ds
lret
push
lds
jne
insl
push
test
pop
mov
lods
xorb
movsl
mov
dec
cmc
and
outsb
cmp
inc
jl
jl
int
mov
dec
jmp
fmull
inc
insl
adcl
jg
out
test
je
sbb
jns
sbb
outsb
rclb
mov
pop
cmp
jle
scas
mov
roll
std
iret
fnstenv
push
jbe
pop
adc
jl
insl
sub
inc
aad
jbe
mov
adc
in
push
sar
xchg
stc
or
mov
inc
andl
jb
mov
lret
dec
cmp
add
push
imul
sbb
sahf
lret
inc
lods
js
cmpsb
icebp
pop
aam
or
cs
aam
ret
out
ret
out
mov
iret
data16
mov
std
mov
inc
ficoms
scas
jle
data16
inc
inc
xor
pop
inc
jb
adc
xor
sbb
mov
rol
pusha
loope
jne
aam
std
popf
movb
ja
test
addr16
out
push
mov
in
shr
pop
mov
lods
inc
orl
or
inc
ret
inc
lock
sbb
xchg
push
movsl
or
xor
ret
jg
out
fstpl
lahf
mov
add
ret
in
sub
xor
int3
sub
mov
daa
popf
lods
pusha
jg
sbb
ljmp
sub
dec
ret
lret
mov
fidivs
mov
shll
data16
data16
or
lods
sti
xchg
push
or
scas
repnz
xlat
jmp
aaa
mov
in
cltd
rcl
repz
and
into
icebp
cs
test
lcall
or
xlat
push
xchg
mov
and
pop
pop
ds
fisubrs
rorl
mov
xor
divl
or
lds
mov
les
add
mov
xchg
outsl
rol
outsb
fwait
or
js
xlat
mov
mov
rol
shl
xor
outsl
nop
pusha
outsl
stos
inc
mov
and
inc
sbb
adc
adc
and
dec
mov
mov
rol
push
or
push
idivb
mov
fistpll
xchg
mov
fisubrl
mov
jne
inc
mov
das
push
cmp
hlt
inc
mov
stos
rclb
cltd
das
sub
mov
cmpsb
decl
in
mov
or
and
or
pop
sahf
das
sub
insl
mov
popa
jg
jle
xor
sbb
mov
pop
cmpsb
mov
add
shrl
pop
dec
push
movsl
mov
jnp
push
fisubrs
add
ret
cs
leave
cmp
shr
push
lock
dec
int
jbe
je
mov
loopne
adc
dec
and
in
inc
push
call
jb
outsl
daa
insb
mov
mov
call
xor
xchg
lock
push
movsl
rclb
pop
cs
insl
insl
xor
addr16
push
repz
jb
in
sti
mov
add
stc
lea
mov
rol
pop
ret
shlb
imul
mov
imul
pop
in
and
loopne
test
add
lods
pop
cmp
popa
xchg
jbe
and
jbe
pushf
cmpsl
add
sbb
xlat
icebp
jg
push
sahf
setns
data16
mov
daa
ret
mov
push
lea
jns
mov
or
repnz
fld
pop
fs
pop
outsb
pop
push
and
movsl
cltd
aas
ds
dec
jmp
test
push
jo
push
xchg
sub
adcb
pop
mov
inc
jge
mov
popa
push
jns
cmp
pop
push
add
jl
lret
xor
xlat
sti
and
and
je
sahf
movsl
sahf
xor
mov
hlt
lods
mov
cmp
jecxz
jnp
push
andb
je
negl
sub
fiaddl
lock
pop
fildll
jb
push
xchg
dec
test
popa
push
cmp
add
adc
mov
mov
rcll
cs
mov
add
xchg
fs
dec
add
and
pop
rolb
loope
and
cmp
or
lods
bound
pop
sbb
add
test
mov
push
dec
in
and
xchg
mov
push
mov
es
dec
adc
popa
xor
add
in
cltd
in
ret
iret
sub
fwait
mov
negb
or
push
push
sub
mov
or
dec
lret
cld
outsb
cmpsb
cmp
fwait
popf
sub
outsl
popa
xchg
inc
in
sahf
mov
inc
into
inc
mov
xor
and
scas
jmp
fldcw
xor
lcall
cmp
adc
mov
lret
add
add
xchg
dec
fsts
xchg
cmpsb
mov
jmp
movsb
loope
arpl
xor
jo
in
dec
loop
adc
cmpb
sbb
xchg
and
ficoml
inc
jl
lds
popf
fucomp
inc
daa
xchg
cs
je
push
sti
data16
cwtl
and
and
dec
fsubr
test
and
mov
or
sub
adc
xchg
stos
mov
inc
push
hlt
pop
int
sbb
in
movsb
cmp
jecxz
xor
push
jecxz
movsl
aam
or
hlt
push
sub
cmc
loopne
ljmp
fldt
mov
add
mul
cld
clc
stos
sub
insl
sub
pop
push
xor
adc
std
pop
hlt
cs
mov
int
fbld
fbld
cld
push
mov
jp
out
inc
xchg
int
or
sbb
jbe
or
mov
dec
ds
add
xor
pushf
xchg
mov
sahf
popl
jae
sbb
test
and
dec
imulb
dec
jge
test
or
sbb
arpl
fldt
jmp
clc
sub
imul
sub
stos
mov
mov
sub
int3
sbb
cmp
mov
cmp
mov
jae
mov
test
adc
mov
inc
push
inc
fnsave
in
push
sbb
mov
push
push
idiv
adc
jnp
dec
inc
popa
addb
sbb
pop
imul
push
pop
cltd
add
sbbb
in
in
mov
pop
ljmp
jecxz
scas
shlb
mov
adc
cmp
in
fwait
sub
mov
rcl
jns
decl
and
push
add
andl
pop
js
je
jmp
fstpt
sbb
dec
mov
lea
mov
adc
dec
scas
xchg
mov
lods
testl
in
xor
cmpsb
ret
pop
scas
mov
push
xor
mov
add
js
cmp
push
sub
or
xchg
sub
into
xor
lahf
fisubs
cmp
pop
scas
pop
inc
or
bound
xor
sbbb
push
pop
sub
mov
mov
fistpl
push
mov
fsubrl
inc
je
xchg
scas
jge
sub
fcmovne
add
ds
jnp
fadds
insl
pop
jo
xchg
in
or
sbb
sarl
shr
xor
xchg
push
les
imulb
push
mov
add
push
jle
loope
xor
mov
fldl
lret
les
sub
push
cmp
repz
lods
in
rorb
xlat
mov
je
lcall
xchg
and
lcall
and
imul
sbb
bound
push
jne
or
xor
xchg
jecxz
xor
push
adc
pop
cmc
fdivrp
sahf
adc
inc
mov
xchg
sbb
insb
shll
lret
stc
cld
cmp
out
or
int
adcb
cmp
lahf
mov
lods
mov
mov
push
push
mov
adc
jmp
push
add
mov
mov
mov
in
jmp
clc
or
les
lea
decl
mov
fnstsw
ss
sbbb
fisubs
pop
fwait
sbb
mov
int3
shll
and
xchg
pusha
stos
shrl
xchg
ret
out
test
imul
shrd
sbb
dec
in
aam
notb
jle
mov
mov
test
jecxz
repz
mov
cmp
mov
mov
stc
xor
cmp
fsubl
cli
jne
int
jne
andl
test
mov
add
test
jmp
mov
shll
inc
xchg
cmp
ljmp
out
jnp
imul
mov
pop
outsl
cmp
imul
xchg
xchg
sub
pop
imul
pop
xlat
dec
xor
mov
sub
pop
cmp
hlt
stc
popa
inc
mov
push
loope
mov
outsb
fs
add
xchg
mov
fsubr
add
pop
ja
or
inc
stc
cwtl
jge
fwait
push
dec
inc
subl
andl
lret
mov
addr16
vpaddusw
push
sub
imul
inc
jb
jne
xchg
enter
xchg
jmp
cs
data16
gs
js
nop
daa
aas
dec
enter
scas
mov
mov
ret
js
outsb
add
jbe
mov
adc
xor
push
cld
sbb
xchg
dec
or
hlt
mov
mov
lods
xchg
push
lahf
or
pop
dec
fwait
xor
rcrb
fbstp
mov
lock
gs
pop
js
dec
xor
out
ret
outsb
push
add
int3
xor
mov
inc
adc
and
hlt
mov
loop
aam
adc
in
mov
jnp
test
aaa
mov
push
movsl
cmp
push
sahf
sbb
scas
fimuls
mov
inc
jle
scas
inc
repnz
xchg
adcl
dec
mov
add
das
or
mov
xlat
scas
aam
push
clc
mov
daa
in
fldt
add
mov
mov
mov
mov
push
sbb
xchg
cmp
sbb
sahf
insl
adc
push
push
sbb
cwtl
das
inc
jno
loope
push
jl
pop
out
loope
pushf
negl
std
faddp
or
and
cmp
out
dec
fldenv
cli
or
scas
ficoml
push
je
sahf
sub
sub
fst
and
dec
inc
ds
ja
addr16
sbb
daa
sub
inc
jae
testl
inc
push
cltd
mov
sahf
icebp
jg
in
push
pop
sbb
iret
outsl
jecxz
lds
mov
jecxz
sbb
aas
subb
mov
cwtl
test
sbb
ret
pushf
rcll
sahf
mov
pop
lcall
aas
xor
mov
js
pop
ret
aas
mov
sbb
aad
fisttps
mov
dec
xor
data16
aam
rol
in
mov
ret
in
jns
pop
mov
adc
jae
jo
or
test
and
inc
fdivrs
fdivrl
iret
or
lcall
aam
add
pop
xor
mov
mov
enter
lock
and
xchg
push
outsb
xchg
mov
sti
movsb
mov
pop
mov
mov
fs
push
sub
pop
add
clc
in
test
sbb
xchg
daa
adc
bound
imul
cmp
mov
addl
xchg
sbb
orb
repnz
in
mov
pop
jecxz
jp
js
push
lds
push
dec
int3
mov
int
loop
sub
imul
fildll
cltd
stc
sub
sub
xor
cltd
das
mov
pop
pminsw
jne
movsl
cmc
fisubs
jo
and
mov
jp
xor
bound
mov
add
mov
ds
mov
scas
and
fsubr
shrb
inc
fcoml
es
push
add
daa
mov
cld
mov
aad
popf
gs
les
push
xor
test
xchg
jl
mov
push
sbb
jle
scas
loope
xchg
fwait
cmp
cmp
daa
in
xchg
sub
adc
mov
testb
cs
repz
pop
fildll
test
cmp
add
rcrb
sarl
subl
in
jmp
addl
mov
int
pop
ljmp
cltd
stos
mov
ret
scas
inc
push
jmp
subb
fldt
cmp
add
cwtl
cmpsb
cmp
dec
inc
jmp
mov
or
jno
cmp
lods
cmp
stc
sbb
push
stos
pop
sti
arpl
call
xchg
cmp
dec
inc
mov
and
inc
jle
int
jae
pusha
or
sbb
sti
inc
mov
outsb
imul
aaa
push
ret
repnz
nop
mov
subb
lock
scas
stos
rorl
mov
add
repz
lret
test
add
lahf
leave
lods
jmp
pop
into
popf
call
stos
and
xchg
mov
rcrb
inc
ja
addr16
movsb
data16
sbb
sub
lods
imul
insb
rorl
movsl
hlt
loop
lret
aas
xchg
and
rorb
sub
and
mov
mov
jmp
shrl
jp
imul
pop
adc
mov
cmp
push
and
and
in
sbb
and
pop
xlat
das
ret
lcall
sbb
daa
ds
jecxz
inc
dec
loope
aam
sahf
mov
dec
mov
adc
or
sub
xor
dec
sub
xorb
popf
imul
cmp
sbb
lock
cmpsb
ret
or
mov
jnp
pop
sbb
out
ret
cmpsb
outsb
add
or
adc
in
into
popa
test
stc
push
negl
cltd
mov
xor
jecxz
sbb
add
inc
out
mov
popf
ret
std
inc
gs
test
cmpsl
lods
aaa
lock
mov
add
pop
out
cwtl
cmc
mov
jnp
in
aas
out
pushf
mov
pop
mov
lds
movb
mov
mov
pop
sub
pop
jg,pn
adc
push
mov
out
iret
or
lea
jp
lret
xor
arpl
or
xor
aaa
bound
xlat
jecxz
inc
push
stc
adcb
enter
lret
sahf
clc
or
in
repnz
fmull
and
jl
inc
outsl
and
or
pop
lret
inc
fbld
cmp
and
mov
jmp
mov
dec
or
cmp
xor
mov
icebp
or
lcall
lahf
adcb
hlt
mov
movsl
fidivrs
jo
mov
cld
pop
lret
movsb
add
rcrl
fs
imul
enter
loopne
jg
mov
xchg
inc
jmp
mov
icebp
mov
fmull
mov
push
pop
mov
fnsave
mov
xchg
sub
mov
push
jg
mov
lds
lret
push
mov
insb
aam
sbb
dec
mov
lahf
test
dec
rcrl
cmp
aam
imul
popf
icebp
pop
out
sub
xchg
orb
stc
sbb
stos
mov
aad
xor
imul
jmp
pop
cltd
addr16
inc
xlat
pop
dec
cmc
cmpsl
xchg
lret
enter
in
stos
pop
ja
xor
pop
in
out
aaa
cld
push
push
cs
sbbb
push
xchg
sub
adc
aaa
xor
xchg
rcr
sbb
sahf
jmp
jle
mov
cmp
rcrb
lahf
push
decl
mov
ficoml
out
xor
pop
stos
aas
aam
rcrb
push
std
jl
ss
ds
cld
les
mov
sbb
sbb
inc
lret
daa
inc
insb
icebp
inc
dec
mov
and
les
dec
inc
lods
xor
xchg
sub
fidivs
clc
lods
out
or
sbb
mov
xchg
dec
lods
cmp
cltd
imul
sahf
cmp
pushf
sub
js
jnp
sbb
sbb
lds
add
test
inc
dec
ret
loope
out
out
and
add
add
push
rcll
out
out
test
pop
inc
test
sub
xor
out
les
subb
xchg
sub
out
outsb
add
pop
ret
sub
cs
in
or
mov
out
scas
inc
add
add
loop
adc
out
out
test
addr16
insl
pop
add
out
les
pop
inc
lods
loop
xchg
sub
out
outsb
add
push
mov
in
add
sub
sub
test
mov
cmp
aas
lret
int
xchg
sub
out
imul
or
xor
push
rorb
jno
mov
xchg
lods
sahf
fsubrp
xchg
iret
arpl
inc
in
mov
sbb
xor
fsubrs
test
test
and
jmp
mov
push
pop
cmp
imul
pushf
adc
loop
inc
outsl
push
aas
push
inc
mov
or
stc
int3
sbb
pop
fldt
and
movsl
fucomip
into
jg
lods
je
das
dec
mov
jbe
pop
roll
mov
das
pop
pop
cmp
fildll
jle
add
inc
push
imul
movsb
cmp
orl
aaa
push
sbb
sarb
adc
xchg
adc
in
popa
or
cmc
xchg
sub
sti
pop
rcll
adc
jge
mov
lret
incb
cltd
or
je
mov
mov
repnz
mov
bound
inc
push
test
fdivr
inc
lcall
cwtl
das
shll
lea
xchg
cmc
dec
push
or
mov
rorl
add
cmpsl
xor
push
jmp
mov
aas
loope
ljmp
push
cmpsb
sbb
or
movsl
hlt
dec
cmp
and
rcll
daa
mov
lret
add
int3
push
and
lret
mov
fcomip
notb
mov
xchg
test
popf
xor
lret
cli
stc
cmp
push
or
inc
ds
fidivrl
aas
mov
aaa
loop
and
int3
sub
pop
xor
andb
imul
ss
add
jbe
push
xor
adc
movsl
dec
cli
push
mov
push
mov
jecxz
adc
pop
es
xchg
dec
bound
outsb
jae
daa
mov
mov
outsl
jge
cli
adc
jns
mov
in
icebp
jp
ljmp
loopne
shlb
dec
mov
dec
sub
rcl
mov
pop
out
xchg
stos
push
movsl
fsub
pop
mov
sub
das
xor
data16
addl
adcb
hlt
out
xor
arpl
mov
mov
mov
or
orl
outsl
push
lret
lahf
pop
push
adcb
add
jg
cmpsb
outsl
push
or
adcl
popl
push
sub
repz
cmp
jecxz
mov
adc
rcl
inc
mov
pop
fsubs
popa
mov
sbb
pushl
popa
pop
mov
push
aaa
dec
loope
repz
clc
dec
add
xchg
shrl
adc
xchg
mov
xchg
jns
dec
sbb
jecxz
xchg
fistpll
xlat
sbb
sbb
cmp
mov
jl
das
sarl
lds
mov
mov
fadd
andl
addr16
lods
pop
rclb
lret
mov
jmp
das
inc
std
pop
adc
pop
scas
ret
lea
push
icebp
lds
jbe
cmpsl
mov
mov
stc
and
addl
pop
pop
inc
inc
or
xor
xlat
pop
dec
push
push
rclb
sub
cmp
je
jnp
push
add
clc
repnz
inc
xor
xchg
fstpt
mov
mov
iret
xor
fistl
xchg
fwait
iret
pop
stc
in
push
repnz
sbb
push
push
ja
lods
xchg
loopne
into
out
popf
inc
test
xchg
xchg
mov
test
xorb
test
ficompl
xchg
jo
popa
cmp
fiadds
push
jns
cmp
inc
fucom
hlt
push
ljmp
ffreep
xlat
inc
leave
adc
das
adc
mov
mov
and
push
fidivrl
pop
xlat
sub
inc
int3
call
jge
add
cmpsw
and
pop
insl
repz
dec
movsb
add
and
pop
pop
rolb
insb
mulb
and
inc
sbb
adc
adc
pop
mov
jmp
jl
fwait
jno
jp
out
xchg
lret
mov
jl
hlt
pop
out
sub
nop
mov
and
mov
icebp
in
push
repz
aam
inc
enter
aad
ret
lds
inc
jmp
mov
insl
cmp
and
pop
hlt
gs
mov
mov
scas
fstl
cmpsl
movsl
lcall
mov
leave
or
xchg
cmp
add
jb
jne
jnp
and
add
ret
pop
push
mov
lods
xor
out
sbb
xor
mov
leave
popa
xor
jo
inc
cmpb
aam
sub
aad
mov
aaa
mov
sbb
mov
xchg
sub
fstl
mov
pop
dec
out
adcl
push
xor
jp
jne
cmp
add
and
inc
xor
sub
inc
fincstp
jns
sub
clc
jnp
cmp
pop
lret
sti
sti
mov
adc
addr16
sti
fwait
ret
push
inc
push
inc
xor
xchg
rcll
dec
xor
jns
iret
aam
mov
adc
cltd
inc
mov
or
nop
cmp
sbb
add
xchg
adc
pop
sbb
stc
je
mov
subl
ss
sti
cmp
gs
mov
cli
hlt
scas
push
sub
int3
pop
shrl
jl
test
push
inc
in
in
sti
jbe
sbb
jge
popf
in
int3
xchg
dec
insl
xchg
lret
inc
clc
movsb
sub
mov
pop
mov
and
cmpl
pop
or
fwait
mov
ljmp
stos
rorb
mov
shll
clc
mov
cmpsl
mov
push
or
sub
lea
test
imul
mov
mov
dec
jno
out
lds
call
loop
and
pop
pop
mov
in
orb
mov
xchg
sbb
mov
cmp
mov
sarl
inc
jbe
mov
jo
push
ljmp
test
jnp
in
les
xchg
fildl
in
sarb
fs
jae
mov
gs
inc
mov
andl
ds
subb
lret
std
mov
and
push
ds
jmp
das
pop
xchg
ljmp
insl
mov
sbb
dec
out
jnp
dec
inc
xchg
movb
inc
test
xor
xchg
or
xchg
out
mov
icebp
pop
mov
cmp
daa
ret
outsl
mov
and
xor
ds
jmp
jne
xchg
cmp
sub
jno
fisubrs
cs
mov
dec
mov
sbb
inc
mov
rcr
dec
fnstenv
daa
mov
pop
mov
push
insb
loop
loope
aam
push
out
cmc
aas
add
out
repz
cli
inc
sub
fdecstp
or
push
xor
stc
cmp
loop
pop
cmp
mov
pusha
xor
lret
subb
push
xchg
cmc
or
test
xchg
js
mov
filds
mov
pop
xchg
xlat
lahf
dec
push
aas
xchg
aas
stos
shl
push
test
adc
jp
aad
pop
arpl
pushf
add
loope
sub
cmpsl
xor
mov
cli
call
das
stos
popa
inc
enter
add
into
popf
xor
push
pop
or
vmovaps
test
pop
cmpsl
and
inc
push
or
test
push
add
out
fld
cmc
xchg
iret
lahf
mov
and
fcmovb
fcoms
or
popa
clc
push
sub
sbb
sub
repz
jge
xlat
daa
call
jp
pop
loop
je
adc
cmp
xchg
std
jae
enter
sti
xor
arpl
cld
or
push
cmp
sbb
sub
lret
pop
push
clc
jecxz
rcll
pop
std
xor
in
mov
cmp
bnd
bound
xor
rclb
ljmp
xchg
cwtl
insl
push
idivl
ds
andb
pop
cld
sbb
fnstcw
push
arpl
insl
ja
inc
test
mov
xor
jecxz
and
lahf
sbb
sbb
les
jp
cmp
add
aad
adc
aam
push
xchg
push
dec
sbb
or
daa
adc
jge
mov
sbb
sub
cli
push
xchg
mov
jns
lds
dec
mov
popa
mov
subl
inc
sub
lods
mov
into
fisttpl
icebp
push
sti
insb
mov
push
fidivs
mov
ljmp
pop
insb
lea
loop
and
add
and
test
dec
aam
mov
push
and
das
or
loope
sbbb
dec
mov
leave
imul
or
or
mov
aaa
outsb
imul
loop
fbstp
lea
jbe
pop
dec
xchg
mov
jb
ljmp
popf
out
insl
cmpsb
pushf
xor
ret
jg
mov
not
jno
inc
mov
sub
mov
xor
arpl
out
or
pop
or
mov
cwtl
das
lea
decl
mov
fst
push
js
jae
ja
xor
cmpsb
xor
into
loop
lcall
in
test
lret
or
push
xchg
xor
xchg
mov
add
xchg
addr16
lock
jmp
into
jge
clc
sbb
sbb
loope
sbb
cmpsb
aas
and
pusha
gs
jne
fisubrl
sti
clc
out
out
jne
pop
idiv
insb
sub
xchg
sub
rcll
inc
scas
sbbl
gs
push
cmp
mov
sbbl
fsts
fwait
outsb
fisubs
adc
ret
out
lock
iret
fstpl
add
insl
stos
pop
scas
fcomi
lahf
push
push
cld
xor
jo
in
xor
push
andl
pop
ss
cwtl
jns
mov
jns
cmp
test
lret
std
dec
lcall
and
push
adc
shll
add
das
lods
xchg
jge
or
jle
ljmp
mov
push
mov
pop
pop
xor
flds
sti
cld
cli
ljmp
test
stos
cmpsl
xchg
sbb
xchg
and
xor
jns
out
or
adc
mov
inc
loop
cmp
add
mov
int
test
ds
mov
add
in
cs
xor
mov
testb
in
pop
fdivr
fmul
xchg
movsb
cmp
sub
popf
sbb
cmp
stc
cmp
out
xor
push
ljmp
outsb
lock
in
aas
pushf
sbb
push
sub
sub
mov
jbe
addr16
cmc
jnp
in
push
out
es
hlt
push
mov
lods
push
repnz
jno
fstps
mov
addr16
jne
loopne
mov
flds
cwtl
icebp
jp
aam
xor
xor
cmpsl
repnz
shl
sbb
orb
nop
repnz
mov
mov
fdivrl
sbb
lret
fisttpll
lea
mov
push
cmp
decl
push
cs
sar
pushf
out
aas
xchg
mov
orb
pop
fildl
aas
add
inc
pusha
xor
ljmp
int3
cmp
fidivl
and
push
ficomps
sbb
fsubr
gs
and
push
mov
icebp
jno
dec
shlb
in
mov
jg
mov
sub
sub
xchg
ljmp
loop
and
fsubr
push
fwait
xor
inc
aas
lea
mov
mov
ret
lret
fxch
sti
jecxz
push
addr16
dec
push
sbb
and
cmp
push
mov
sub
push
stos
inc
lea
jp
xor
cmpsl
pop
cmp
shll
inc
rcr
daa
outsl
push
dec
pop
jns
lock
outsl
stos
push
or
push
in
test
sti
or
leave
mov
and
jae
lods
sti
and
pushf
xchg
adc
mov
divb
jl
or
mov
sub
dec
cmp
test
sub
cmpsb
mov
mov
inc
in
add
mov
andl
test
js
out
pop
add
jnp
xchg
repz
add
xchg
xlat
dec
dec
mov
cmp
push
call
mov
clc
cmpsl
push
fdivr
lret
dec
loopne
sbb
stos
inc
inc
push
push
mov
lret
divb
fs
mov
jne
lret
popf
call
push
lods
or
lea
xchg
aad
jl
aad
in
daa
cmp
xor
adc
adc
xchg
xchg
mov
cmpsb
and
and
adc
shr
pop
addr16
roll
out
jbe
xchg
xchg
hlt
hlt
cmp
fildll
inc
jmp
hlt
aam
jmp
xlat
repz
imul
jno
mov
jbe
repnz
hlt
jle
sub
push
sti
xchg
inc
iret
mov
adc
sub
xchg
mov
mov
push
pop
xlat
repz
popf
call
std
sub
stos
aaa
or
xchg
sbb
into
xor
cmp
fs
pop
cmpsb
cmp
or
hlt
or
js
and
push
and
push
das
push
out
fs
inc
pop
ss
mov
sbb
loopne
mov
dec
mov
iret
mov
es
fiaddl
sti
lods
pop
sub
or
movsl
cmp
negl
sub
fucom
xchg
rolb
pop
push
push
jmp
outsl
push
cmp
outsl
jge
fbstp
insb
sub
popf
xor
cmpsl
dec
jnp
mov
jae
sbbb
fs
repz
int
sub
fidivs
and
iret
call
xchg
das
loopne
add
mov
add
testl
insl
sbb
adc
and
push
stos
pop
hlt
cmc
dec
cltd
sub
push
xchg
mov
pop
cs
rcrb
pushf
bound
mov
dec
mov
fwait
push
jo
sub
aad
pop
inc
push
flds
xor
mov
lods
jp
and
dec
cmpsb
test
je
fidivs
sti
cmp
pop
dec
dec
mov
gs
mov
xsaves
fisttpll
lock
xchg
jge
mov
xchg
pop
inc
int
ljmp
lock
clc
sahf
call
sbb
ss
xchg
outsl
cmc
adc
inc
xchg
lds
mov
rcl
mov
or
data16
mov
mov
push
rcll
cmp
imul
push
fimull
mov
lcall
jmp
rcll
push
adc
and
test
mov
inc
mov
mov
gs
sti
and
mov
dec
mov
repnz
int3
shll
pop
les
mov
inc
fs
and
push
test
or
pop
or
lret
movsb
mov
inc
adc
mov
push
popa
pop
popa
ror
inc
jae
add
sbb
mov
mov
iret
pushf
stc
and
decb
outsl
iret
sbb
pop
pop
mov
aam
mov
jne
cmc
adc
fnsave
in
inc
adc
orb
add
scas
sahf
bound
jo
mov
or
scas
pusha
std
cmpsl
aad
nop
sub
rcrl
add
fbstp
imul
cmp
shl
int3
push
repnz
dec
and
jl
sub
iret
xor
js
rclb
fcoml
icebp
arpl
lods
dec
mov
cmp
addr16
out
cmp
sbb
adc
mov
adc
or
push
lods
xchg
cld
jge
jmp
je
jns
test
les
std
mov
shr
push
sbb
sbb
fstpt
loop
push
adc
adc
pop
out
jo
repnz
jmp
or
popa
sbb
adc
inc
adc
jae
divb
lock
or
dec
scas
cmp
push
in
jb
out
sti
jnp
in
js
adc
and
mov
sub
pop
out
jb
in
push
cmp
imul
push
xor
call
test
dec
fisttpll
filds
sbb
sbb
out
rolb
jne
xor
mov
fisttps
lret
gs
lret
mov
pop
sbb
clc
mov
sub
xor
mov
sbb
stos
sub
push
inc
sbb
stos
jbe
xor
sbbb
push
jno
addr16
mov
pop
xor
pop
clc
sarb
cmp
inc
push
push
xchg
scas
jnp
in
add
push
loopne
nop
enter
out
xor
mov
clc
iret
jno
jl
sub
add
mov
mov
divb
pop
insl
cld
push
cmp
scas
mov
inc
hlt
mov
xchg
push
cld
lcall
in
push
sub
iret
mov
xchg
push
pushf
scas
js
adc
inc
out
sti
js
cmp
mov
gs
dec
dec
xchg
bound
jb
pop
int3
and
or
out
test
loopne
js
sub
mov
xor
dec
mov
subl
inc
push
mov
in
fs
xchg
shrb
push
int
dec
mov
add
sbb
fldl2t
aas
inc
loopne
movsb
cmp
xlat
jns
xchg
lods
jae
or
push
jbe
loopne
repz
add
fstpl
jno
dec
adc
fs
ja
imul
lods
lock
adcb
push
cwtl
scas
mov
les
shll
mov
mov
mov
ret
repz
fwait
jmp
adcl
hlt
adc
mov
or
xor
mov
and
and
jnp
jmp
pop
hlt
repz
add
aam
jne
mov
xor
cmp
xchg
push
ror
into
fs
push
pop
push
xchg
int3
mov
jle
adc
and
and
pop
add
call
test
mov
and
jp
pop
ljmp
in
ret
sub
scas
enter
or
adc
mov
fidivs
xor
xchg
mull
mov
or
sbb
mov
pop
sub
inc
dec
push
mov
popa
sbb
mov
sbb
cmp
pop
mov
or
add
mov
js
jmp
fidivs
negl
daa
cs
lock
movsb
jge
jb
lret
into
les
xor
clc
and
cmova
lcall
mov
adc
mov
cmp
xor
lods
shr
ljmp
rorb
mov
cmpsl
insl
lret
sti
mov
cmp
adc
out
ss
adc
jnp
xlat
jmp
jl
cmpsl
out
in
mov
out
ljmp
sub
dec
dec
fs
pushf
xchg
lret
ret
mov
test
inc
xor
test
bound
mov
mov
xor
or
pop
adc
push
cltd
outsb
les
fstpt
sub
arpl
and
xchg
push
dec
sub
les
xchg
rorb
pop
jecxz
jne
push
mov
xor
mov
int
lret
mov
je
cmp
mov
xchg
xchg
aad
rorl
cmpl
adc
test
fdivrs
aam
enter
adc
adc
mov
and
sbb
test
loop
dec
jbe
mov
sar
mov
mov
sbb
mov
cmpsb
cs
push
push
cwtl
sbb
mov
push
cmp
fnstsw
jecxz
inc
aad
inc
ljmp
xor
jo
out
sub
popf
add
inc
mov
mov
js
pop
sub
cmpsb
sbb
scas
sbb
sbb
test
xor
jmp
pop
data16
xor
fistps
ror
popa
mov
mov
repz
movsb
push
mov
jl
aaa
push
aam
scas
lock
lahf
or
rorl
icebp
jmp
out
sub
xor
pop
mov
fs
lcall
movsl
cmpb
add
cmp
push
cmp
shrb
jb
xchg
data16
and
insl
je
jmp
mov
push
mov
mov
cld
push
jae
aaa
cmc
stos
push
daa
mov
xor
cltd
xor
xchg
scas
dec
inc
hlt
not
and
lds
mov
and
inc
xchg
xor
jns
and
jp
or
loope
faddl
stc
mov
and
imul
pop
popa
sahf
mov
push
inc
cltd
lods
mov
xor
inc
mov
jg
das
sbb
imul
inc
pop
ja
inc
jb
pop
sub
push
sub
adc
xor
int3
push
jp
sti
rol
pop
lret
loop
hlt
pop
xchg
lods
aas
push
and
fsubrs
in
and
insl
mov
jecxz
xor
and
jo
sti
xchg
test
test
sbb
dec
loop
sub
pop
pop
add
lods
inc
ret
hlt
es
out
add
std
jl
jns
push
pop
rolb
mov
jl
dec
add
cli
jne
stc
xchg
negl
and
clc
lea
and
in
std
dec
addr16
sub
in
jbe
or
push
stos
xlat
or
mov
out
imul
out
sbb
mov
fs
ds
add
jg
inc
lds
sub
aam
in
imul
xchg
xchg
and
add
push
stos
pop
jo
rcrl
jl
mov
or
xlat
sub
push
sbb
pop
fsubr
cmc
cs
insl
sbb
xor
hlt
lods
dec
cmp
mov
mov
or
jns
xchg
leave
dec
mov
lahf
jnp
repz
or
push
imul
xor
cs
pop
adc
inc
orl
in
je
das
movsb
pop
jecxz
and
mov
fs
add
push
mov
jbe
daa
cmpsl
sub
xchg
std
xchg
shlb
xor
sbb
mov
xchg
and
jle
fistpl
repnz
clc
mov
fsubs
adc
incb
cld
dec
shlb
into
dec
xchg
sbb
aad
cmp
pop
jp
jne
enter
jmp
int3
cmp
xchg
add
jg
and
movd
dec
in
fs
lret
inc
mov
cmp
sub
in
xchg
inc
lret
mov
mov
push
sbb
cwtl
push
or
js
lahf
and
ficomps
push
inc
cmp
xchg
ret
es
jge
in
sbb
inc
jbe
in
add
inc
shl
out
daa
ss
or
fidivl
aas
jp
imul
jle
je
fwait
subl
mov
subb
nop
mov
mov
mov
xchg
jp
inc
pushf
jbe
push
les
scas
xor
ret
hlt
xor
aad
dec
cmp
and
jbe
paddsw
push
push
xor
and
popa
mov
sbb
fwait
cmpsl
cld
add
xchg
movsb
sahf
es
inc
and
fbld
insl
or
mov
dec
and
inc
int
jmp
pusha
ss
ds
enter
addl
pop
dec
hlt
push
xor
les
push
pop
sahf
addl
movsb
and
lret
mov
out
cltd
pop
daa
jns
xor
jp
xchg
sysexit
cli
lea
xor
icebp
andl
aad
lahf
pop
outsb
add
sbb
out
mov
stos
inc
call
or
ficompl
rcrl
mov
mov
push
loop
pop
sti
and
jno
ds
xchg
addr16
lods
xchg
and
mov
or
sahf
pusha
aas
inc
mov
cmp
dec
mov
shlb
sti
cli
movsl
mov
insl
fstps
aam
stos
nop
aam
push
push
movsl
push
scas
or
sbb
sub
psrlq
xor
sub
mov
ficoml
add
jg
imulb
adc
icebp
xchg
push
hlt
dec
je
mov
cmp
xchg
pop
into
cmpsb
mov
lcall
icebp
pop
ja
xchg
in
mov
sarb
repnz
pop
cmp
in
mov
sarb
sbb
cs
dec
fnstsw
cld
sar
xchg
pushf
out
jl
and
adcl
pop
aaa
pop
xlat
xlat
hlt
mov
shr
add
cmp
jmp
or
out
fnsave
sbb
cs
fwait
xor
rolb
fisttpll
jo
xchg
in
push
gs
and
enter
hlt
jmp
sub
js
sub
xchg
and
push
out
fimuls
mov
jl
sub
movsb
push
pop
add
jb
pop
repnz
xchg
sub
and
cmpsb
cli
mov
inc
jg
loopne
cltd
add
fistl
sub
lret
mov
inc
push
call
jle
sahf
xor
jbe
hlt
mov
cwtl
cld
lcall
inc
fcompl
mov
lods
inc
and
arpl
js
das
push
lcall
addb
pop
popf
adc
sub
fmull
jge
mov
xor
mov
adc
sub
jmp
sbbl
daa
sahf
xor
xchg
jp
push
stos
cltd
in
lret
fbld
es
rclb
lods
inc
mov
xor
and
inc
push
call
test
fbstp
fcompl
adc
sbbl
bound
ss
mov
mov
aad
mov
mov
out
into
xor
and
push
push
pop
push
call
cmpsb
shrb
add
lods
inc
push
adc
jge
daa
lret
bound
add
xchg
mov
jne
xor
cld
xchg
and
inc
or
ja
sbb
or
sbb
rorl
xchg
sub
clc
mov
outsb
adc
std
shlb
cmc
sbb
inc
fidivs
sub
clc
push
gs
test
dec
loop
cmpsl
stc
nop
fnstcw
cwtl
lods
push
jecxz
mov
pop
mov
test
cwtl
das
dec
jmp
negb
jbe
clc
cmp
insb
sbb
ss
sti
xchg
jge
mov
mov
and
mov
xor
pop
lock
ja,pn
pop
movsb
push
jmp
mov
rcll
fistpl
enter
sub
cli
inc
inc
fnsave
imul
lds
cs
out
popa
sbb
call
imul
push
popf
shl
lds
pop
mov
push
loope
aas
xchg
dec
jecxz
in
sbb
xlat
xchg
call
sbb
in
clc
and
pop
cmp
push
sub
mov
and
mov
lcall
clc
mov
sub
mull
dec
std
outsb
add
jmp
fistpl
cltd
pop
int3
add
outsb
cmp
std
test
mov
mov
add
mov
dec
jl
jnp
inc
xlat
sbb
gs
xor
sub
inc
sbb
pop
lret
sbb
jmp
jnp
pop
sub
nop
inc
mov
jb
sub
call
or
inc
out
push
adc
jge
cwtl
ss
addr16
ret
adc
inc
fildll
xchg
cs
inc
pop
mov
mov
stos
add
mov
stc
push
daa
mov
dec
xchg
mov
and
jns
lea
xchg
into
ficoms
and
sbb
out
xchg
pop
mov
nop
sub
pop
test
cli
insb
out
xchg
jae
andb
or
gs
sahf
mov
ja
clc
movsl
cmp
mov
mov
stos
inc
cmpsb
inc
outsl
push
jne
jns
mov
ja
loop
inc
xchg
sub
jno
add
cmpsl
mov
ja
mov
je
or
jge
mov
iret
jle
dec
scas
pop
test
jnp
mov
mov
inc
fdivs
imul
in
fbstp
xor
insb
imul
or
mov
mov
pop
outsb
jmp
lahf
iret
rcrl
call
pop
insl
cmp
lahf
int
bound
mov
mov
sbb
or
mov
nop
mov
insl
lea
fcmovbe
insb
or
mov
dec
jge
mov
push
movsb
lcall
mov
adc
push
in
xchg
pop
add
mov
pop
cmc
sbb
jge
xchg
punpckhwd
xchg
mov
imul
fwait
cmc
inc
fisubl
mov
push
testl
add
xchg
testl
mov
inc
fisubrs
mov
sbbl
jbe
lahf
ss
test
test
add
xor
aad
jg
into
sbb
jge
cmp
jmp
imul
imul
icebp
scas
inc
and
lret
bound
std
xchg
sub
and
in
je
test
jb
sbb
rorl
movsl
clc
stc
imul
lcall
cs
stos
aam
fisttpl
nop
jl
ret
mov
lock
sub
pop
jae
mov
add
jno
or
push
jmp
iret
ds
cwtl
out
test
xor
ret
popa
jmp
push
lods
mov
cmp
imul
jp
shlb
loope
jae
cmp
gs
sti
xchg
xlat
mov
popa
js
fsubs
or
mov
jge
jae
enter
outsl
or
dec
jle
insl
scas
aam
jle
jae
pop
movsl
sub
mov
sahf
xor
imulb
pop
mov
jg
subl
sub
pop
jp
cmc
stos
lods
inc
idivl
dec
lods
sub
mov
movsb
lds
mov
push
js
shrl
cmp
mov
jge
stos
scas
shll
jmp
ret
repz
pop
ljmp
fnstenv
shl
bnd
mov
jb
adc
mov
shrl
ss
addr16
fs
jno
in
aaa
cli
xchg
data16
test
rcrb
hlt
push
into
lcall
pusha
mov
xchg
cltd
xor
mov
jg
aam
jb
sbb
js
imul
popf
jbe
xchg
movsb
mov
jno
decb
in
cmp
pop
rclb
fsubrs
scas
insl
ffree
repnz
add
jbe
pop
sti
xchg
mov
in
lods
fistpll
mov
mov
push
testb
movsl
xchg
lods
mov
inc
push
sub
out
sbbb
nop
mov
fnstenv
notl
inc
inc
add
ja
test
std
enter
out
ljmp
inc
aas
adcb
jmpw
mov
mov
fstl
syscall
aam
ss
or
es
mov
fcmovbe
jmp
das
sub
dec
cmpb
mov
xchg
test
ror
bound
das
and
imul
dec
aaa
into
jge
or
rcl
mov
sbb
sbbl
jbe
sub
push
leave
shll
sbb
pop
icebp
inc
cmp
insb
add
mov
shlb
or
inc
inc
test
imul
into
gs
inc
jl
ja
xor
mov
popa
cmp
xchg
inc
pop
out
ja
xchg
sub
test
mov
adc
ss
xor
dec
mov
mov
psubusb
xchg
int
ror
sbb
popa
or
ss
cli
xchg
or
bound
jg
jge
add
pop
xor
xchg
popf
push
test
pop
stos
push
jp
popf
inc
cltd
dec
mov
dec
xchg
pop
lds
inc
cmp
fildll
push
rolb
inc
mov
pop
inc
mov
cli
inc
test
mov
mov
outsb
xchg
sti
mov
sbb
bound
sub
jo
mov
les
out
cmp
pop
scas
data16
hlt
pop
adc
pusha
mov
push
cli
pushf
or
scas
sbb
add
out
xor
cli
loop
loopne
les
in
mov
test
inc
jmp
mov
cwtl
cmpl
pusha
cmp
dec
mov
jae
xchg
inc
out
pop
lock
inc
jnp
inc
lock
lea
in
push
out
jle
sahf
aas
stos
jg
sbb
push
inc
cltd
dec
mov
test
push
or
stos
sub
pcmpeqd
add
xchg
repz
cltd
call
mov
inc
mov
cmpsl
push
dec
mov
popa
pop
dec
shlb
lds
push
xor
loopne
insl
mov
sub
sbb
xorb
js
pushf
dec
fbstp
negb
adc
sbb
add
ljmp
enter
or
insl
lahf
mov
adc
nop
xchg
mov
cmp
and
jge
fiaddl
sti
popa
iret
pusha
pushf
out
dec
push
mov
int3
cmpb
ret
nop
insl
test
out
jae
insb
in
subb
jne
mov
ficoml
pop
lock
cmp
out
inc
inc
mov
dec
and
xchg
insb
jg
sbb
scas
arpl
cmp
pop
lock
or
ds
push
or
and
repz
jmp
fistpl
or
adc
and
out
xchg
data16
add
mov
lea
and
sbbl
jbe
or
std
dec
out
sbb
fwait
mov
pop
or
or
mov
les
stos
jne
dec
xor
cld
mov
push
divb
mov
lds
sbb
scas
jns
filds
sbb
or
scas
and
push
sti
push
int
jno
mov
shlb
shll
mov
push
sub
sti
je
jne
mov
adc
mov
dec
mov
cmp
push
jmp
pop
mov
subsd
mov
jno
insb
cltd
xor
dec
mov
dec
cmp
jle
bound
mov
jmp
mov
pmaxub
icebp
sub
adc
aas
scas
ror
add
into
cmp
push
loope
mov
pop
jb
repnz
push
sub
and
aad
cmpsl
pop
enter
aad
and
sti
pop
orb
pop
adc
mov
divl
push
sbb
cmp
inc
xchg
pop
push
pop
jne
inc
xor
sbb
inc
insl
testb
xchg
dec
shrl
dec
cmp
mov
gs
sbbl
sub
dec
aam
dec
in
popa
jne
hlt
arpl
ljmp
or
test
fildll
in
orl
fistpll
insb
xchg
ja
cwtl
xor
imul
inc
cmp
pop
dec
arpl
ds
dec
movsl
arpl
loop
dec
es
sub
push
daa
add
dec
cmp
cmc
daa
mov
idiv
nop
adc
xlat
aaa
cwtl
pop
fwait
jl,pn
mov
aas
dec
push
aam
jg
jmp
and
pop
sti
in
add
test
inc
mov
mov
push
enter
jge
inc
pop
jecxz
ret
fldl
mov
stos
jb
sbb
outsl
popa
fwait
dec
cwtl
popf
xchg
sub
mov
data16
arpl
arpl
dec
mov
jb
stos
inc
or
mov
addr16
add
xchg
cld
and
mov
inc
push
aad
dec
jne
push
sub
sbb
out
xor
stos
mov
push
adc
mov
addb
jle
jbe
outsl
cwtl
cmpsb
daa
dec
in
adc
push
inc
sub
push
jge
jb
jg
jl
and
fwait
pop
ja
leave
inc
ss
push
mov
push
test
mov
out
sbb
jge
mov
sti
sub
dec
dec
mov
les
aad
call
sub
adc
int3
inc
mov
hlt
mov
call
cmp
mov
mov
hlt
push
add
out
jmp
adc
adc
hlt
in
xchg
push
scas
add
sbb
cmp
je
push
stc
inc
xor
adc
push
xor
push
sbb
xor
cmp
push
mov
add
mov
sti
inc
mov
es
inc
int
imul
mov
dec
mov
push
jge
adc
inc
hlt
pop
fs
and
jmp
imul
test
and
lea
cltd
loopne
lret
pop
mov
sub
sub
sbb
xor
fwait
into
adc
fnsave
pop
les
adc
lret
sti
pop
call
mov
pop
shlb
cmp
push
push
add
stos
andl
icebp
mov
jno
pop
lahf
lods
subl
outsw
mov
pop
arpl
data16
sbb
pushf
cld
xchg
mov
bound
dec
add
das
imul
dec
pop
imul
fs
icebp
jp
cmp
mov
add
pop
popf
cmp
or
movl
sub
jbe
in
push
addr16
movsb
jg
fcoms
sub
mov
loope
psubsb
scas
lahf
ds
and
push
cwtl
fwait
lret
sarb
xchg
add
ja
inc
xchg
jns
and
xor
cmp
test
lret
pop
int
mov
fnclex
insl
mov
lcall
xchg
out
ja
loope
jbe
test
mov
push
int3
test
faddl
mov
jbe
jns
jns
jecxz
and
add
imul
or
cmp
js
jge
pop
fs
negl
ja
xchg
xchg
mov
dec
adc
adc
popf
pop
sahf
repz
sub
aas
jmp
jge
xor
dec
sahf
ficoml
pop
adc
xor
lret
mov
jmp
sbbb
pop
sub
mov
fs
jb
pop
and
xchg
jns
jne
repz
pusha
fimuls
lret
shrl
mov
cs
sti
dec
or
and
sbbb
xor
mov
loop
adc
or
call
sbb
ss
xchg
jl
iret
push
dec
loopne
lret
dec
rcr
mov
lods
add
sub
cmpsb
arpl
push
stc
scas
and
sub
out
sbb
mov
stc
cmp
out
or
or
lock
mov
sbb
jae
rcrb
mov
flds
pop
cmp
xchg
adc
push
aad
xchg
sub
fsubs
test
rorl
out
roll
fsubrl
dec
in
push
xchg
outsb
movsb
test
popf
pusha
mov
lock
es
cmp
lods
mov
xor
pusha
into
cltd
dec
lret
data16
push
rclb
xor
mov
inc
aam
pop
out
orb
aas
jne
test
in
data16
rolb
dec
jns
sub
mov
hlt
or
enter
clc
jmp
aam
add
mov
dec
adc
xchg
sub
xorb
jl
mov
pushf
je
xchg
lea
dec
xchg
mov
movsb
pop
mov
in
mov
cwtl
movsb
mov
xchg
sbb
test
sbb
ja
rcll
xor
in
inc
outsb
mov
add
arpl
and
jg
lret
pusha
jmp
scas
bound
mov
or
repz
adc
xchg
mov
push
insl
cmpsb
mov
out
shl
xor
popa
xchg
fnstenv
xchg
add
ja
les
and
adc
jae
jo
sti
sub
jae,pt
movsl
cmp
push
loope
push
mov
loopne
popa
mov
add
xchg
loop
inc
in
test
add
xchg
stc
cmp
repnz
stos
jae
paddsw
mov
xor
jbe
imul
mov
add
stc
xchg
mov
push
xchg
mov
test
faddl
in
ljmp
add
jns
clc
sub
dec
jbe
sahf
inc
rorb
rclb
pop
mov
cmp
lea
pop
aad
push
movsb
pop
outsl
xor
scas
mov
out
sub
int
sbb
enter
test
dec
fst
dec
loope
test
add
cli
mov
pop
xchg
mov
sub
add
dec
leave
xchg
mov
dec
xor
push
fbld
int3
pop
inc
lret
insb
test
xor
in
and
cmpsb
mov
jmp
adc
shll
xor
inc
jp
xchg
pop
mov
push
rorb
pop
clc
jne
dec
dec
mov
div
pop
lods
inc
xchg
adc
sti
mov
in
ss
divb
out
push
movsb
mov
movsb
clc
loop
or
sbb
cmc
out
xlat
sbb
sarb
add
sbb
xor
add
add
xchg
out
dec
rol
cld
flds
stos
sub
push
add
inc
ret
negb
push
loop
mov
aas
fwait
outsl
jge
push
cli
xor
das
in
cmp
xor
insl
lcall
jo
mov
or
das
divb
lret
mov
loopne
loope
bound
repnz
mov
in
in
lea
pop
or
jge
xchg
popa
add
xchg
xor
gs
out
fisttpl
unpcklps
jle
jae
cmpsl
loopne
std
push
mov
jno
es
aas
mov
in
dec
aam
lea
divl
mov
mov
shl
popa
fwait
out
cli
pop
mov
clc
repz
mov
dec
mov
and
inc
aaa
xlat
push
jbe
in
dec
push
and
scas
cmp
jns
leave
outsl
je
push
push
sahf
lret
sbb
jmp
pop
aam
fmuls
ror
dec
out
jge
jp
in
int
xchg
fmull
add
pop
std
jne
xchg
dec
mov
pop
stc
pusha
jge
gs
cmpl
in
pop
jmp
lret
shlb
cld
outsb
lods
ljmp
push
pop
mov
imul
lods
loopne
cld
rolb
push
aam
les
fsub
dec
xlat
mov
and
cwtl
add
in
test
test
pop
jl
arpl
aaa
pop
mov
ret
push
out
cwtl
xchg
out
and
jp
aad
lods
inc
in
into
lcallw
xchg
test
xchg
sub
cmpsl
pop
aam
add
sub
and
jns
pop
pop
fldt
incb
int3
rorb
sahf
sub
jb
fwait
inc
aad
xor
data16
aas
inc
lods
pop
aad
xor
dec
jns
inc
fldenv
les
inc
xchg
imul
jo
xor
jle
dec
nop
daa
orb
insb
jp
test
pushf
test
nop
subb
js
fsts
push
pop
int3
shll
fildl
punpcklwd
lret
and
das
add
out
es
mov
inc
and
loopne
jb
cmp
add
and
std
es
fwait
xor
and
out
out
jno
xor
stos
fstpt
add
loope
fs
ds
test
mov
into
inc
mov
xor
mov
ret
scas
jbe
jb
cmp
rorb
js
mov
dec
sub
push
dec
jns
mov
out
test
scas
push
mov
adc
popa
cmpsb
mov
icebp
inc
mov
sub
pop
ret
mov
pop
add
shll
cmp
lmsw
icebp
stc
and
push
fidivs
icebp
test
insb
add
jnp
rcrb
in
sarb
ja
mov
mov
dec
sub
xchg
pushw
mov
lahf
jo
mov
xchg
push
insl
mov
push
shrb
and
ja
int3
dec
mov
push
mov
mov
gs
xchg
cwtl
xor
cmpsl
push
lcall
xchg
ret
shll
inc
aaa
ficoml
test
daa
mov
dec
and
push
outsb
mov
jmp
rorl
bound
sarb
sub
push
mov
jb
arpl
xchg
mov
lock
test
fsts
pusha
movsl
ficompl
sub
mov
incl
or
call
push
stos
inc
out
push
inc
out
and
pop
idiv
nop
int
lret
leave
pop
ret
loopne
inc
stos
daa
in
push
lret
xchg
sbb
inc
xor
pop
pop
sub
jo
outsl
push
xor
ds
xor
push
jle
inc
dec
inc
adc
push
inc
mov
pop
and
mov
leave
sbb
stos
push
pop
dec
lds
pop
and
jmp
or
repnz
stos
lea
mov
sti
sub
adcl
xor
lods
push
pop
leave
pop
out
mov
or
mov
ret
xor
bound
inc
ret
sbbb
push
lret
in
and
inc
mov
mov
xorl
xlat
insl
cmc
aas
cmpsl
jnp
mov
popf
xor
aas
sti
sub
jmp
or
out
and
clc
enter
mov
lock
aad
mov
repnz
dec
loope
mov
mov
jnp
shr
cmp
mov
dec
loop
cli
or
out
and
aam
push
aam
rorl
shll
jmp
daa
fimull
jo
lret
lock
cmp
adc
dec
jmp
mov
dec
adc
ja
pop
test
lret
mov
sbb
sbb
push
pop
testb
lods
pop
cld
divb
mov
inc
pop
xor
xchg
push
fwait
jno
or
mov
clc
push
push
push
pusha
testl
push
mov
pushf
xchg
ja
hlt
mov
pusha
cmpsb
sbb
mov
or
loopne
jle
inc
into
sbb
fistl
jo
cld
xor
mov
adcb
ja
inc
push
mov
test
pop
lock
leave
clc
daa
out
in
stc
mov
in
sbb
out
std
mov
lock
pop
mov
cmpsl
repnz
mov
add
xchg
push
and
jne
iret
inc
xor
mov
pushf
bound
lds
mov
inc
or
xlat
inc
mov
out
test
mov
loope
icebp
aad
fwait
jg
rorl
lock
popf
insb
mov
jp
addl
xsha1
cmpsb
dec
mov
jl
js
lea
dec
mov
test
cmc
cld
notl
mov
ret
insb
cmp
popf
rcl
push
mov
test
add
add
mov
mov
jno
fsubl
loope
popf
popl
cmc
addb
movsb
push
out
inc
mov
sub
dec
mov
jo
push
mov
pop
repz
mov
pop
fwait
insl
pusha
rclb
shlb
data16
hlt
into
xchg
in
sahf
sahf
xchg
sub
sbb
jo
fmuls
jg
adc
or
dec
stos
rorl
test
jne
iret
jl
rclb
jns
sarl
sbb
pop
xor
imul
int3
pop
mov
inc
mov
fiadds
mov
mov
jbe
daa
mov
test
call
js
sub
jns
cmc
stos
jmp
inc
int3
rcl
or
jmp
sub
scas
pop
sahf
or
jb
jmp
mov
sarb
fwait
inc
fisttps
data16
xor
daa
ljmp
pop
out
dec
jae
pop
fimull
mov
pusha
fsubrl
ret
repnz
movsl
push
sar
mov
mov
cmp
mov
sub
je
push
aam
sbb
fsubrl
sbb
sbb
or
lea
aas
cmc
mov
out
adc
sti
add
xor
inc
gs
mov
xchg
sub
jno
push
jl
push
push
dec
ret
lods
inc
stos
cmp
icebp
stos
int3
imull
ljmp
sub
sbb
ds
pop
iret
data16
cld
out
ljmp
xchg
loop
call
adc
ret
and
xchg
sub
outsl
mov
cmp
inc
mov
dec
or
cmp
sbb
pop
call
and
mov
scas
jge
rcrl
xor
xchg
xor
repz
pop
shrl
mov
jecxz
mov
out
mov
hlt
xor
leave
fsubl
cmp
dec
out
pop
jae
dec
lods
mov
pop
pop
push
call
add
loop
je
xchg
inc
push
adc
mov
push
lods
sbb
lret
push
cmp
in
jg
or
and
or
sahf
inc
push
add
cmp
leave
jmp
nop
sbb
cltd
insl
lahf
es
mov
jae
addr16
lret
aad
lods
jo
mov
js
stos
inc
fcmovnu
or
leave
out
cmpsb
insb
into
int
fcmove
ret
faddp
das
cs
and
sbb
sbb
insl
pop
cmp
sarl
loop
jl
pop
push
in
sbb
mov
jne
sub
clc
sub
ja
and
jmp
bound
icebp
lock
in
cmpb
pop
shl
push
lcall
ljmp
and
inc
mov
insl
mov
loope
sub
xor
test
inc
stos
sar
xor
sbb
xor
mov
mulb
loopne
jae
mov
sub
mov
call
in
ret
ja
inc
dec
rorl
mov
out
ss
xchg
adc
je
dec
inc
mov
mov
jb
add
and
inc
insb
shll
aam
push
and
pop
pop
inc
test
dec
fisubrl
arpl
test
notl
ss
scas
dec
mov
lock
test
clc
aad
pop
mov
jl
fidivrs
push
into
mov
repz
int
aas
test
jecxz
jne
mov
xlat
cmp
add
and
std
sarl
out
lock
mov
leave
push
dec
mov
pop
and
lods
inc
mov
test
xchg
js
aaa
pop
aam
pop
mov
xchg
in
inc
ret
mov
push
repnz
call
hlt
or
cmp
sbb
push
enter
xchg
int3
mov
jbe
loopne
or
pop
mov
leave
cmp
add
mov
pop
cs
fsts
jnp
hlt
cmp
scas
xchg
jne
mov
mov
jns
out
adc
lods
or
cs
mov
jnp
lds
jmp
roll
xchg
or
sub
loope
sub
push
cmp
js
loopne
int
aas
repnz
out
in
jl
add
loop
std
inc
iret
and
aas
mov
inc
bound
mov
inc
sub
mov
popf
es
lods
pop
sub
xor
jbe
mov
cmp
xor
push
pop
or
addl
popw
cmp
jbe
dec
xchg
pop
stc
test
xchg
sub
cmpsl
subb
inc
sbb
mov
or
gs
mov
rcrb
add
dec
rcl
and
inc
test
ds
scas
jae
mov
out
das
mov
cs
je
and
enter
add
sbb
ret
mov
xchg
fmuls
bound
dec
fnsave
sahf
orb
outsb
mov
ja
pop
fiaddl
mov
jecxz
jge
pop
stos
inc
pushf
jle,pn
push
push
inc
enter
adc
jge
xchg
pop
pop
sbb
xlat
mov
pushl
rol
dec
out
in
sub
roll
insl
mov
pop
mov
mov
test
into
in
aad
popa
stc
loopne
mov
mov
sub
and
mov
jo
sbb
inc
leave
ja
mov
addb
jae
push
jbe
imul
daa
dec
loop
push
or
push
scas
aaa
dec
add
insb
gs
les
test
xor
repnz
in
xor
jecxz
mov
fidivrs
out
call
fsts
imul
mov
push
rorb
jg
stos
enter
add
cwtl
in
ret
inc
mov
jae
cmp
pop
in
sbb
sahf
mov
pushl
xchg
lahf
ss
lret
push
sub
subl
cli
jge
dec
mov
ljmp
jp
sub
gs
inc
jle
aas
loop
cmp
js
or
cltd
das
or
cld
in
clc
movsl
mov
fisttpl
out
test
lea
aad
out
mov
adc
sub
imul
adc
fistpll
fisubs
psubusw
sbb
aam
pop
test
mov
rcll
cmpsl
add
fidivs
and
cld
xchg
mov
dec
jecxz
rcrl
mov
lret
cld
and
iret
push
sbb
push
in
cmpsb
jo
mov
ret
lds
sbbb
adc
lahf
and
and
fidivl
cwtl
push
popf
leave
adc
nop
inc
ljmp
xchg
cmp
mov
daa
iret
inc
fldl
dec
scas
inc
jnp
popa
clc
push
pushf
int
into
jae
shlb
mov
lahf
ljmp
imulb
mov
pop
dec
inc
fnstsw
inc
fnsave
insl
arpl
sahf
mov
and
icebp
pop
in
test
adc
inc
pop
mov
xlat
fistl
xor
cs
pop
dec
cwtl
das
jle
inc
shlb
add
inc
xlat
push
out
dec
adc
shlb
aam
mov
test
pop
pop
repnz
or
shrb
imul
mov
mov
fnstenv
fdivs
dec
add
jo
push
and
in
push
jb
gs
in
add
ljmp
std
cmpsb
js
dec
stc
ret
test
cltd
xlat
or
mov
addr16
dec
mov
push
sbb
popa
or
and
sbb
in
dec
jb
mov
adc
test
sbb
decb
cmp
aad
fistl
dec
inc
repz
test
loopne
loopne
dec
test
cmp
fldenv
aam
jbe
movsb
push
mov
gs
enter
and
pop
jecxz
pop
in
sub
shl
cmp
jmp
push
pop
inc
test
xchg
and
jle
cmp
dec
test
in
int3
push
popf
test
pushl
mov
pop
sbb
pop
lcall
or
jnp
and
adc
ljmp
push
lret
dec
scas
xor
mov
push
add
or
and
rcrl
adc
in
sbb
add
and
es
jmp
mov
xchg
xor
clc
pop
adc
int
mov
pop
insl
jmp
and
mov
test
cltd
adc
outsb
enter
repz
pop
movb
stos
scas
fistl
and
repz
popf
mov
add
js
aaa
and
jno
push
dec
push
cld
ret
xchg
add
add
xor
call
adc
stos
inc
cwtl
sbb
mov
xor
mov
push
shl
sti
mov
or
cmc
mov
cli
pop
ficoml
jp
push
adc
stc
xor
shll
mov
adcb
pop
or
data16
in
lret
push
push
jb
loopne
or
jno
push
and
add
leave
xchg
push
push
adc
cmc
mov
mov
bound
dec
or
mov
repnz
mov
aaa
xchg
jge
popa
shl
movsl
fmull
gs
adc
or
sub
mov
lret
pusha
lret
inc
sti
outsb
pushf
jmp
leave
pop
sti
sbb
xor
into
clc
pop
jnp
and
ficoms
or
push
and
jmp
shl
out
inc
popa
inc
mov
mov
in
shrl
cmp
rol
add
arpl
daa
mov
xchg
shrl
mov
lahf
ss
mov
mov
push
shrl
les
add
push
popa
clc
dec
ja
mov
fisttpl
cwtl
das
jnp
dec
loopne
sbb
or
das
gs
mov
inc
fwait
xor
xor
pop
movsl
aam
in
lds
jne
sbbl
xlat
lock
idivl
aad
mov
movsb
cmp
js
pushf
imul
data16
dec
pop
out
cmp
inc
fsub
push
ret
pop
sub
jecxz
jbe
aam
push
xor
mov
adc
adc
jp
in
jb
push
fsubrl
pop
icebp
add
inc
ficompl
adc
cmp
push
push
ss
push
fwait
sub
lret
in
gs
nop
icebp
out
call
hlt
int
mov
scas
mov
push
sarb
mov
call
lock
cmc
mov
mov
jb,pn
xchg
outsb
popa
clc
lahf
psubusb
mov
repnz
shl
cmp
adc
cmp
std
lcall
les
scas
ss
lods
xor
lods
push
lds
mov
xchg
mov
popf
or
cltd
pop
mov
sub
mov
lods
pmullw
out
inc
or
adc
mov
fwait
imul
jns
cmc
pop
imul
out
mov
cmc
mov
arpl
push
ret
sti
lcall
clc
stos
push
lret
enter
fstps
pop
mov
xchg
imul
rcll
xor
mov
and
je
loop
dec
pusha
sbb
mov
shl
int3
xchg
dec
add
ret
mov
cmc
lret
jecxz
inc
loope
cmp
shll
push
dec
add
shrl
movsl
lock
jbe
in
inc
pop
out
mov
xchg
or
scas
lds
fdiv
mov
repz
aas
dec
js
mov
and
dec
rdtsc
xor
mov
jp
mov
aaa
aad
outsl
repnz
add
pop
mov
push
jb
lret
xchg
loopne
into
xchg
jbe
cmp
out
addr16
adc
adc
rolb
std
push
les
ja
mov
dec
arpl
in
jae
cli
dec
addr16
push
int
sbb
sbb
xorb
pop
add
sub
pop
pop
popf
jge
repnz
jnp
out
ror
inc
xchg
aaa
sti
push
fidivrs
out
sub
push
data16
xchg
lods
sbb
jp
push
dec
fistpll
xchg
lret
arpl
pop
sbbl
ds
call
icebp
js
cmpsb
enter
mov
jbe
xchg
xchg
fs
outsl
dec
fadd
xchg
push
cmp
test
in
insb
adc
mull
adc
xchg
inc
push
mov
mov
nop
mov
iret
gs
nop
jge
mov
lret
outsl
in
mov
lods
sub
stos
fdivrs
adc
es
sub
jbe
fdivrl
outsb
int3
lea
imul
nop
insb
in
and
inc
or
cmc
arpl
jge
icebp
int3
lea
fisubrs
jge
xchg
insb
in
movsb
mov
test
in
insl
fdivrl
test
imul
cltd
insl
in
cmp
lret
fdivrl
stc
int
fldt
mov
mov
insl
in
scas
ret
addr16
dec
in
fdivl
stc
into
mov
leave
repnz
push
sub
inc
xor
jae
lahf
jb
sub
mov
xor
ret
out
in
sar
adcl
clc
ljmp
cmpl
test
cwtl
cmp
mov
push
cmp
pop
jo
xchg
inc
add
pop
xchg
inc
outsl
jno
xchg
aaa
jae
and
sub
jecxz
xor
push
shlb
lea
jno
pop
xlat
dec
adc
or
xor
mov
xor
mov
pop
inc
jae
dec
jns
mov
pop
outsl
dec
fidivs
jb
dec
cmp
mov
cld
or
jns
sub
out
enter
icebp
or
adcl
push
outsl
stos
dec
pop
shlb
ja
mov
xchg
imul
pusha
loopne
mov
add
out
stos
push
add
or
jbe
xor
xchg
push
pop
lock
cmc
popa
popa
lock
xor
sub
leave
and
add
pusha
mov
aas
int3
jno
hlt
out
sbb
cmpsl
xor
lock
cwtl
dec
or
fwait
jnp
mov
movsl
adcl
cwtl
cmp
mov
jno
xchg
xchg
dec
xchg
jl
cmp
cli
pop
push
mov
cs
imulb
add
fwait
nop
pop
or
test
xchg
or
and
test
hlt
cmc
lods
sub
fisttpll
test
xchg
mov
sub
sub
lds
movsl
cwtl
aas
fndisi(8087
insl
hlt
cs
push
xor
mov
cli
and
iret
xchg
mov
stos
imul
mov
jmp
push
mov
dec
adc
mov
inc
push
mov
jmp
jne
addl
or
sbbl
cmp
imulb
ja
mov
and
push
gs
sub
inc
push
mov
test
out
jne
mov
or
dec
gs
stos
popf
dec
push
jecxz
cmp
lock
insl
imulb
in
jbe
cmp
ret
mov
data16
sub
dec
push
pop
aas
mov
mov
test
mulb
mov
or
push
data16
lods
orb
cmp
jmp
insl
cmc
xchg
stc
in
jbe
enter
adc
int
popf
sbb
iret
mov
mov
mov
cmc
pushf
jp
jbe
rcrb
aad
mov
nop
leave
xchg
dec
adc
push
cmp
push
stc
scas
xor
mov
add
push
adc
fimuls
or
pop
push
inc
or
mov
mov
pop
add
push
sub
fists
jle
lds
dec
adc
push
decb
fidivl
fwait
out
mov
fidivl
cmpsb
aad
cmp
mov
dec
push
sbb
dec
adc
rcrl
ret
add
outsl
lock
dec
adc
imul
imul
cmp
xchg
ret
mov
pop
dec
adc
stos
dec
or
icebp
xor
sub
xchg
inc
dec
xor
adc
mov
xchg
inc
sahf
sbb
push
add
sbb
sbb
mov
xchg
inc
pop
xor
das
xor
mov
cld
sbb
mov
push
jg
mov
add
dec
jnp
xchg
inc
cmp
lods
and
lcall
and
mov
sub
sub
aaa
in
insl
test
and
daa
fidivrl
orps
and
pop
inc
adc
cmpsb
dec
or
sbb
and
jmp
cmp
xor
dec
or
mov
dec
nop
or
fnstcw
test
inc
movsl
xor
jg
mov
jp
lahf
andl
xchg
mov
xor
dec
push
js
dec
push
lret
ret
mov
fisubs
mov
mov
jne
cs
cmp
mov
addr16
inc
fldt
ds
add
in
lea
add
cld
cmpsb
sub
mov
in
jae
fisttpl
mov
lods
fiadds
sbb
and
orb
out
fiaddl
es
or
jl
iret
xchg
mov
mov
inc
pop
inc
in
out
sbb
mov
lods
pop
clc
and
inc
bsf
push
mov
sub
imul
or
or
push
mov
js
sbb
dec
hlt
lret
popl
fadds
mov
inc
in
xbegin
in
xchg
cmp
or
pop
xchg
dec
out
jo
ret
orl
jmp
push
xchg
jne
loopne
mov
test
out
inc
stc
mov
mov
sub
aas
pop
jmp
test
pop
pop
sbb
fmull
push
stc
ficoml
mov
or
jp
pop
psrlq
mov
xchg
cmp
call
in
add
sarl
sub
mov
mov
leave
xchg
test
mov
push
std
cmpb
fsubrs
aaa
jb
setns
cmp
es
lods
adc
jg
test
or
cmp
and
xchg
in
mov
les
lea
mov
popa
mov
leave
xchg
stc
dec
pop
pusha
lret
rolb
cmc
dec
xchg
inc
mov
test
mov
lahf
mov
scas
fimull
out
movsl
add
faddp
pop
cli
cmp
daa
jp
jg
test
gs
mov
and
xchg
iret
inc
push
out
daa
cmp
adc
jl
sub
fs
aaa
dec
or
aas
pop
sub
cmovl
mov
push
arpl
push
daa
imul
popf
mov
lock
test
cmpsl
mov
push
scas
mov
nop
insl
add
shrl
jecxz
push
cld
enter
out
rorl
add
add
in
iret
or
mov
cmp
cmpsl
das
daa
stos
sbb
popa
clc
test
mov
or
mov
scas
scas
das
leave
xchg
push
jae
and
jge
dec
or
mov
mov
movsb
mov
lahf
ljmp
rolb
mov
in
fdivrl
dec
test
insl
mov
xor
mov
push
fwait
ds
std
pop
pop
or
aas
cltd
mov
mov
mov
les
mov
pop
decb
aam
imul
cmp
pushf
xor
int
inc
fcomps
aas
push
jmp
xchg
popa
sarl
dec
push
aas
movsb
lods
sub
rol
cmpsl
sub
mov
inc
inc
inc
pop
add
xchg
dec
outsb
lock
sbb
mov
inc
mov
sub
xchg
pop
xor
inc
orl
or
cli
jp
out
roll
enter
push
adc
lods
mov
test
je
ret
dec
jae
push
pop
xchg
fnstsw
test
mov
adc
cmc
mov
inc
cmpsl
jmp
jnp
mov
add
frstor
xchg
cmp
mov
mov
fdiv
or
loop
push
sahf
cmp
dec
adc
add
or
pop
imul
mov
aam
int
cmp
clc
sbb
out
popa
out
fcomi
icebp
pop
popf
push
repnz
bswap
imul
mov
hlt
arpl
mov
jnp
and
pop
cmp
es
aad
shlb
dec
jbe
je
xor
cmp
jae
xlat
jge
jno
jge
cli
insl
sti
pop
cmpsl
in
das
pop
mov
mov
cmp
add
xorl
js
lds
inc
add
loop
add
jg
xchg
add
call
add
xchg
push
mov
pop
xchg
into
mov
iret
xchg
add
mov
ret
test
mov
das
imul
push
xor
xchg
lea
dec
dec
sbb
movb
jg
sub
inc
xorl
ja
fcmovnbe
sbb
cltd
cmp
add
jne
pop
sub
jne
int3
xchg
push
clc
lret
insl
adc
mov
push
jmp
movsb
popf
fnsave
mov
mov
cld
jbe
cmc
pop
xchg
insb
lcall
into
jbe
dec
push
sbb
or
mov
fistpll
lcall
push
pop
xchg
push
jae
pop
jns
xchg
sbb
xchg
aas
and
cmp
lret
imulb
jbe
jb
adc
add
hlt
xor
roll
pop
pop
mov
lea
call
ja
out
int
xor
push
jnp
jns
xlat
xchg
cmp
in
and
push
cld
mov
orl
dec
adc
adc
mov
mov
mov
lret
outsl
out
xlat
mov
jle
fiaddl
xor
pop
pop
mov
stos
dec
pushf
cmp
xlat
outsb
mov
jp
dec
or
popa
xchg
inc
push
jae
sbb
xchg
mov
dec
or
lret
jg
push
lds
mov
sbb
sub
pop
inc
popf
cmp
add
add
fstps
adcb
inc
adc
dec
xchg
inc
adc
adc
dec
dec
pop
push
xchg
adc
mov
pop
sub
and
pop
mov
iret
ja
sub
jnp
in
lock
gs
xchg
cmp
push
sbb
jb
pop
inc
cmp
js
imul
cltd
aaa
sahf
out
popf
inc
js
cs
push
cmp
stc
fs
out
fiaddl
jbe
ja
sbb
or
leave
dec
mov
jmp
xchg
sbb
lret
xchg
test
mov
mull
mov
gs
push
inc
lock
mov
ret
ja
rcr
int
ret
add
icebp
aad
or
mov
mov
mov
int3
xchg
dec
stos
push
int3
negl
cmp
lea
jp
mov
in
push
cmp
das
mov
ja
shrl
jge
test
push
iret
mov
dec
psubusb
cmp
adc
mov
test
mov
add
cwtl
mov
pop
ret
jns
cmp
dec
sbbl
ja
lea
loopne
insl
addr16
pop
pop
jne
data16
mov
cmp
push
cmp
mov
mov
jb
es
inc
ds
nop
lock
scas
out
xor
mov
jno
mov
loope
xchg
je
push
sub
inc
mov
in
pushf
sarb
mov
or
sbb
fistps
add
pop
add
bound
scas
in
outsl
mov
stos
int3
vpmacswd
sbb
xlat
jp
cli
gs
fistpll
cmpsb
pop
xchg
ret
ss
push
cli
xchg
lret
xchg
adc
xor
inc
dec
adc
dec
sub
loopne
push
enter
outsb
sbb
dec
adc
mov
adc
in
insb
push
dec
pop
negl
enter
jb
ljmp
mov
sahf
lcall
xor
rorl
mov
shll
sbb
add
push
dec
dec
vmread
dec
mov
test
repz
jnp
je
pop
jo
adc
in
dec
and
adc
bound
sahf
inc
cwtl
mov
push
shl
pop
aas
dec
pop
stc
push
sub
cwtl
cmp
scas
sub
lea
out
push
test
call
sub
xor
test
aas
push
mov
sub
test
ret
inc
mov
inc
mov
int3
arpl
sarl
sahf
jmp
dec
in
xchg
addr16
movsl
cs
jne
imul
jbe
sbb
iret
xchg
ss
pop
out
and
movsl
jmp
mov
inc
cli
mov
icebp
or
push
or
fdivrs
or
pop
push
jne
xor
mov
mov
inc
jg
push
lock
test
loop
aam
xor
and
lahf
sbb
sub
repnz
insb
movsl
daa
bnd
mov
in
xor
dec
stos
xor
cwtl
inc
adc
notb
inc
mov
jns
sbb
sub
pop
aaa
aas
xor
bound
test
xlat
xchg
mov
xchg
inc
sbb
lret
add
in
pop
add
pop
sbb
push
clc
inc
sbb
das
in
clc
push
aaa
lcall
dec
and
negb
mov
in
lods
fnstenv
dec
or
jmp
stc
ss
cld
popa
add
pop
jmp
mov
add
icebp
bswap
shl
jae
sbb
push
inc
xor
clc
pop
push
cli
in
out
js
ljmp
xchg
mov
jg
les
mov
cmp
imull
mov
out
pusha
jmp
out
xchg
arpl
cltd
inc
sbb
pop
lcall
shrb
scas
xchg
jbe
fdivrs
cmpsl
dec
or
inc
mov
mov
imul
test
popa
out
jns,pn
or
cmp
mov
bnd
rcrb
lahf
sub
pop
sub
rolb
nop
les
mov
xchg
inc
fsubrs
jae
ret
daa
in
lods
inc
push
jne
inc
cmpsl
jb
and
mov
and
stos
clc
les
xchg
data16
jl
lcall
push
push
mov
jnp
js
sbb
jmp
cs
push
mov
sbb
mov
lods
into
nop
sub
xor
pop
fisubs
scas
mov
ds
and
cmp
push
inc
inc
adc
das
xchg
sub
fwait
xor
xor
mov
pop
add
add
into
popl
aam
movsl
cwtl
jno
cmp
sub
lret
leave
xchg
cwtl
and
bound
rcrb
mov
fistps
inc
pop
stos
sub
leave
roll
sbb
repz
add
sbb
rol
nop
sbb
icebp
bound
dec
pop
stc
xor
xor
xchg
into
mov
add
adc
adc
fidivrs
into
xchg
and
lods
ss
and
adc
or
das
inc
xchg
aaa
add
or
sub
ret
xor
test
mov
into
aam
fidivrs
aad
sub
rolb
and
pop
test
sub
pop
in
test
mov
mov
dec
scas
insb
divb
sahf
iret
xchg
jmp
ljmp
mov
pop
lret
in
orb
xchg
cmp
ja
mov
rorb
adc
scas
sub
arpl
jge
mov
out
stos
insl
out
aam
loope
fnstsw
stc
pop
pop
xchg
add
xchg
sahf
jle
sub
les
sbb
inc
add
adc
mov
subb
fwait
mov
push
repz
jne
pop
jmp
pop
dec
popa
out
dec
push
cli
leave
scas
mov
xor
mov
lods
orl
mov
cli
flds
push
pop
inc
or
test
mov
movl
jmp
jl
into
insl
filds
adc
repnz
das
mov
jecxz
scas
pop
and
fs
mov
leave
xchg
cmp
les
sub
sbb
add
pop
add
push
jb
inc
xor
mov
mov
fs
pop
push
rorl
mov
filds
test
mov
outsl
fiadds
lret
jne
mov
mov
out
fidivs
test
or
jmp
lock
popa
out
out
or
loope
fistps
adc
xchg
ds
lods
cmp
sbb
push
iret
jecxz
leave
xchg
popa
negb
mov
sbb
call
push
mov
xor
fcmovu
lods
cs
add
shr
int3
ds
push
hlt
mov
pop
xchg
outsl
fdivr
pop
cmp
sbb
adc
jae
pop
push
cli
pop
test
lods
dec
lods
aam
sbb
inc
push
mov
movsb
jo
dec
cmpsl
movsb
xor
shrb
leave
pop
repnz
nop
jb
ret
or
fcmovb
adc
pop
add
mov
popa
jbe
push
cmp
clc
or
jmp
aam
fidivs
mov
addr16
jl
lcall
pushf
shrl
test
sti
arpl
cmpsl
jge
fmuls
fs
pop
hlt
xor
lds
jnp
addr16
std
pusha
jno
mov
jmp
push
jb
mov
inc
or
je
xor
push
add
outsb
icebp
mov
push
jg
push
jb
push
ret
mov
push
pop
add
jge
jno
sbb
cmp
mov
gs
mov
xor
fisubs
pop
jle
mov
cmpsl
push
mov
fcomi
xor
add
out
outsl
pop
push
inc
or
rol
mov
add
sahf
jp
push
divl
pop
add
arpl
mov
jg
outsb
dec
and
mov
or
xchg
push
push
rcl
ja
push
sbb
cld
fs
ja
xlat
ja
popa
dec
adc
aam
adc
enter
jno
fildl
mov
lods
push
push
not
cwtl
aaa
fsubr
repnz
enter
mov
movsb
xor
stos
xchg
inc
insb
adc
mov
cmpsb
bswap
inc
pop
fistpll
lcall
sub
ss
or
jno
sbb
aam
dec
pop
sbb
cwtl
aaa
xor
loopne
sub
pop
jmp
mov
dec
rclb
fists
adc
sbbl
jb
leave
mov
mov
rclb
sub
imul
loope
lret
dec
enter
popf
in
cwtl
xchg
fiaddl
jl
jb
ret
insb
lret
xchg
adc
int
cld
inc
fidivrl
in
jmp
stc
jo
pusha
pop
loop
jb
xchg
testl
add
mov
xchg
popf
pop
fwait
aaa
insb
movsb
scas
js
mov
adc
or
mov
shl
imul
insl
test
lret
data16
adc
sbb
cld
fisttpl
or
mov
push
daa
inc
or
movsl
xor
leave
stc
das
mov
and
popf
xchg
and
mov
mov
les
jbe
aas
cmpsb
mov
ret
jecxz
cmp
and
into
xchg
pop
mov
orb
jb
jmp
add
fstpt
insl
mov
pop
enter
aam
cmp
das
je
sbb
push
sahf
inc
out
push
xor
cmp
es
inc
cmp
lods
mov
mov
jecxz
cmp
outsl
adc
cs
inc
jmpw
negl
scas
ret
std
inc
or
add
test
mov
xchg
cmp
in
mov
out
ficompl
outsl
orb
sbb
push
or
scas
xchg
mov
into
and
cld
sub
mulb
ss
in
adc
dec
pop
inc
ret
xchg
sub
test
push
fstl
iret
mov
cld
pop
enter
clc
adc
dec
jo
test
insl
xchg
imul
mov
cmpsl
push
mov
pusha
jae
xchg
negl
xchg
dec
lahf
inc
aam
sbb
jmp
mov
into
push
mov
xchg
cmp
test
mov
and
sbb
xor
dec
mov
std
pusha
andb
aad
lods
inc
or
and
dec
add
mov
loope
dec
test
mov
repz
stos
daa
jnp
push
sarl
cmpsb
jno
sub
inc
push
imul
rcll
and
cwtl
shrl
mov
mov
add
jg
mov
push
popf
mov
sarl
fstpt
in
dec
fnstsw
sbb
pop
fdiv
popa
mov
movsb
add
or
mov
sarb
add
xor
xor
hlt
or
adc
xchg
xchg
cmp
call
push
xor
pop
hlt
sub
outsb
sbb
cmpsl
xor
mov
rclb
roll
icebp
int
dec
mov
mov
pop
mov
rcll
push
daa
scas
pop
loopne
cld
cltd
mov
lret
aam
cmp
loope
mov
repnz
push
in
jne
add
insb
rcr
cmpb
push
insl
mov
fs
mov
jb
push
push
jle
std
mov
lods
xchg
mov
adc
mov
in
jecxz
mov
add
push
test
jcxz
jo
jg
stos
mov
mov
dec
or
bound
and
gs
mov
sub
push
add
add
pop
jo
xor
mov
ret
lock
sbb
and
sbb
sub
inc
or
out
loopne
push
add
cmp
or
ret
insl
out
imul
jnp
cmp
dec
mov
push
lret
pop
lods
cmpsl
xor
dec
xor
adc
fwait
cmp
dec
jmp
sbb
add
movb
mov
movsb
jno
pop
push
mov
lahf
push
mov
sub
push
daa
mov
pop
das
shlb
mov
subl
xor
lods
xchg
cmp
mov
es
jae
aas
mov
jns
mov
mov
sahf
neg
mov
stos
pavgw
repnz
lods
sub
data16
imul
or
xchg
outsb
in
les
insb
out
jns
xor
cwtl
mov
out
loop
sbb
push
movb
cwtl
inc
ja
lds
mulb
clc
gs
or
pop
adc
in
adc
subl
aam
outsl
pop
lret
jns
adc
cwtl
insb
jmp
sub
lcall
mov
jo
sub
sbb
addb
fnstsw
pushf
cmp
or
out
and
xchg
xrelease
lret
push
ret
ret
xchg
ret
cli
enter
nop
inc
add
ret
pusha
and
rorl
push
sarb
vmptrld
mov
cltd
jecxz
cld
xchg
cmpsl
add
adc
mov
ss
cs
ds
push
xchg
ds
movsl
mov
push
cmpb
lret
mov
mov
dec
or
push
pop
mov
pop
stc
jno
or
xchg
insb
repz
test
out
repz
adc
inc
inc
mov
ja
std
rorb
pop
insb
out
add
mov
mov
mov
aad
dec
adc
xchg
push
mov
push
xor
and
mov
mov
push
add
mov
insb
out
push
fdivs
xor
mov
mov
imul
out
clc
pop
cld
lock
cli
pop
pop
sub
jge
pop
in
addr16
xchg
les
pop
data16
xor
sub
mov
add
add
stos
lahf
xchg
inc
icebp
mov
ror
lock
repnz
bound
jge
jo
inc
popa
call
mov
jb
lds
add
out
ret
sub
leave
push
call
jbe
jns
cmp
inc
and
add
dec
jbe
pop
jl
mov
sbb
rcrl
sbb
mov
es
data16
push
mov
in
addr16
iret
cmp
xor
sub
sub
fs
add
into
push
pop
cli
pop
lea
lret
inc
sub
sbb
fwait
in
mov
sub
out
jle
xlat
pop
repnz
ljmp
pushf
cmp
rcll
mov
lret
sbb
push
sbb
xchg
imul
fs
or
pop
addr16
lahf
enter
iret
sbb
jno
jle
mull
insl
add
shll
push
xor
mov
mov
mov
add
push
xor
rcl
addr16
mov
mov
and
stos
xor
repz
adc
loop
aaa
fwait
cmpsl
repnz
mov
insb
xchg
andb
adcb
loopne
fcomps
hlt
push
push
faddl
push
mov
loope
pop
push
sbb
mov
mov
in
push
dec
inc
adc
mov
mov
dec
scas
negb
roll
jne
stos
sub
outsb
daa
mov
daa
push
clc
clc
mulb
loope
dec
or
xchg
push
mov
jl
shr
add
data16
mov
mov
xor
jno
mov
enter
cmc
push
adc
add
aam
xchg
jge
mov
sub
insl
lret
js
xchg
jne
sub
cli
inc
js
mulb
data16
aaa
pop
mov
insb
add
fcomip
pop
jg
pusha
call
pop
xchg
cmpsb
test
nop
cmp
movsb
hlt
pop
dec
adcb
cmp
jmp
fcoml
jl
mov
mov
mov
sti
data16
mov
mov
lods
lods
das
cld
addl
rcrl
out
imul
add
int
jne
xchg
adc
iret
repnz
es
sub
jne
pop
mov
mov
xor
mov
sub
sub
ds
or
popa
lock
cmpsl
xor
mov
insl
imul
mov
dec
stos
inc
adc
xchg
in
sub
xchg
cmp
xor
js
mov
data16
add
pop
leave
pusha
xchg
movsl
cmp
mov
out
xor
fiadds
adc
dec
movsbl
stc
push
scas
or
andl
aam
loop
repz
notl
mov
movl
cs
sbb
enter
adc
and
mov
lods
in
lods
push
sbb
mov
gs
xor
mov
pop
insb
daa
mov
dec
pop
testl
dec
pop
icebp
jnp
arpl
dec
pushf
test
xchg
xor
insl
mov
and
mov
lods
loope
gs
mov
stos
mov
out
dec
int
or
mov
addb
fs
test
jae
xor
or
sbb
cmp
data16
sti
stos
jns
cmpsl
stos
dec
sbbb
int3
inc
pop
add
fucomi
push
mov
dec
mov
clc
ret
push
and
mov
cmpsb
test
mov
cli
inc
push
cld
mov
cmpsl
push
add
pop
fidivrl
adc
cmp
add
outsb
jmp
loope
dec
xchg
ds
cmp
adc
roll
sbb
incb
loop
out
bnd
add
jle
sub
rol
dec
push
add
cmpsb
dec
push
test
mov
test
pop
sarb
popf
cmp
loopne
add
test
pop
push
call
idivl
adc
mov
dec
jb
pop
and
neg
mov
push
pop
cmc
pop
std
jle
add
loope
and
mov
cmp
pushf
jo
push
dec
ret
xor
pop
lret
cld
test
insl
mov
cmp
sbb
cltd
iret
mov
ret
insl
les
clc
js
sub
dec
mov
lcall
xor
pop
mov
test
mov
mov
push
lods
inc
or
lods
push
stc
aam
or
and
sub
out
jae
jmp
or
shlb
mov
imul
fisubs
xor
syscall
int3
in
fs
cmp
arpl
mov
xchg
jnp
gs
ja
dec
in
ljmp
mov
xor
cmpsb
test
imulb
aas
mov
push
popa
popf
inc
add
jnp
int3
insb
pusha
in
int
xchg
ds
sbb
es
loopne,pn
push
cld
xchg
ds
xchg
test
cli
stc
data16
pusha
pusha
in
inc
sbb
lds
sbb
mov
mov
xchg
cmp
movsl
pop
add
lret
in
jae
mov
inc
test
mov
jmp
loope
negb
cmp
movsb
sub
mov
mov
stos
xchg
cmp
push
push
sti
insl
out
in
sarl
les
add
mov
push
jl
push
push
add
rcr
pop
jnp
pop
adc
lret
pop
mov
lods
and
jo
cli
pusha
nop
fs
mov
scas
out
test
ja
pop
test
lret
cld
push
sub
test
dec
loopne
jo
mov
mull
sub
cmp
hlt
dec
test
adc
mov
setns
rcrl
xchg
sub
je
mov
inc
xchg
std
xchg
popa
shrl
call
icebp
mov
cmp
shrb
adc
mov
fidivs
adc
xchg
sub
push
xor
mov
test
iret
data16
in
test
les
jg
mov
jle
sub
add
inc
ficoms
mov
jbe
cld
cmpsl
inc
cmp
jne
sbbl
xchg
pop
icebp
sbb
bndldx
push
mov
ret
hlt
mov
inc
loope
imul
xor
xchg
cmp
in
xchg
movsl
mov
fldcw
or
or
pop
mov
sub
jge
ljmp
iret
xchg
mov
movsb
cmp
xchg
jne
pop
cmpsl
add
movsl
xor
loopne
cli
push
sub
sbbl
xchg
dec
movsb
dec
loope
outsb
sbb
jmp
sarl
repnz
xchg
inc
fwait
movsb
cmp
gs
xchg
out
ret
mov
loopne
jae
mov
ds
xchg
pop
shrl
out
mov
mov
mov
cmp
shrl
adc
mov
fnsave
bts
xor
das
test
pop
adc
or
sub
test
pop
sub
mov
jl
sub
add
dec
fists
push
mov
jne
std
cmpsb
inc
cmp
jae
test
stc
xchg
pop
icebp
lds
mov
nop/reserved
pop
mov
rcr
repz
inc
imul
xor
xchg
shr
test
movsl
mov
pop
lock
pop
ja
xchg
sub
pop
mov
sub
jnp
ljmp
xchg
mov
movsl
cmp
stos
lock
jae
pop
movsl
decb
movsl
das
loope
stc
push
sub
sbbl
dec
loope
insb
push
mov
hlt
push
shl
inc
xchg
inc
cltd
movsb
cmp
arpl
xchg
in
ret
mov
cs
or
xchg
les
imul
repnz
aaa
cmp
push
mov
mov
or
cs
sub
imul
xorb
adc
addr16
mov
out
test
lds
or
lods
dec
jecxz
jp
sub
lcall
dec
loopne
in
pop
mov
jae
movsb
aas
cmp
sbb
xchg
pop
bnd
cmp
jns
adc
ss
cs
mov
xchg
inc
push
sbb
das
icebp
mov
cmp
jmp
or
cmp
sub
jg
mov
sub
stos
add
push
std
push
shrl
push
cmpsb
cmp
pop
mov
testl
cwtl
dec
mov
pop
mov
repnz
out
inc
xchg
ja
pop
repz
cwtl
movsl
cmp
popa
jp
xchg
jmp
pop
sbb
loope,pt
jo
mov
cmp
aad
in
mov
scas
repz
ss
add
test
mov
fidivl
or
dec
in
sub
insb
add
xorl
push
shlb
out
xchg
pop
and
inc
in
js
sub
cltd
add
push
jmp
mov
jb
jmp
les
repz
cmp
loope
adc
imul
popf
xor
das
mov
lock
xchg
inc
fcmovbe
imul
mov
sub
cmp
out
adc
cmp
lds
pop
jns
lea
jecxz
scas
xchg
loopne,pn
push
test
mov
xor
mov
sti
push
aam
xchg
ds
cmpsl
repnz
outsl
lds
adc
cmc
dec
lds
add
iret
push
push
and
mov
jne
pop
hlt
ds
cmpsb
cmp
xchg
jmp
cltd
xor
cmp
jns
push
mov
xchg
rcrb
mov
push
mov
lods
hlt
mov
xor
add
stos
xor
xor
adc
wbinvd
movsl
dec
out
sub
add
jle
dec
mov
mov
jl
shrb
sahf
test
xchg
pop
and
movsl
test
lret
sti
xchg
add
dec
jmp
imul
insb
ret
hlt
lea
mov
fistpll
adc
pop
fwait
xor
jns
test
cwtl
inc
fcom
insb
or
mov
sub
mov
cmp
test
push
pop
repz
shrb
movb
jp
mov
dec
in
lods
cwtl
das
fidivs
cmpsb
pushl
and
push
aam
test
test
dec
movsl
repnz
outsb
pop
mov
ret
hlt
dec
lds
add
int
and
and
mov
jae
pop
cmc
cmp
pop
jl
nop
out
pop
sbb
loop
insb
add
add
mov
push
mov
lods
cmc
mov
xor
call
stos
xor
enter
invd
movsb
dec
out
sub
add
jge
dec
scas
dec
mov
jnp
shrb
popf
test
xchg
pop
and
movsl
test
in
jne
sub
cli
xchg
add
dec
call
imul
imul
push
repz
mov
fidivrs
adc
pop
lcall
jns
test
cwtl
aas
xlat
aad
or
mov
sub
mov
aam
jge
test
add
das
movb
jp
mov
dec
in
stos
cwtl
das
fnsave
add
mov
stc
push
aam
sbbl
aas
dec
movsb
repnz
insl
pop
lahf
notl
cmpsl
sub
in
repz
lds
add
int3
and
pop
mov
mov
jb
pop
cmc
cmp
cmpsb
cmp
out
pop
sbb
loop
imul
mov
xchg
mov
ficomps
mov
stos
cmc
mov
xor
popa
adc
mov
xor
adc
dec
out
sub
add
jl
dec
scas
dec
mov
jp
shrb
pushf
test
xchg
pop
and
movsl
cmpsl
inc
in
je
sub
stc
xchg
add
dec
out
mov
lahf
cmp
push
xchg
repnz
mov
fnstsw
packuswb
pop
cltd
xor
jns
xorl
ds
aad
or
mov
sub
mov
cmp
test
add
repz
push
jp
mov
dec
in
test
insb
add
mov
clc
dec
aam
sbbl
repnz
insb
pop
sahf
cmc
adc
repnz
lds
add
inc
cltd
dec
jecxz
and
sbb
mov
jo
pop
idivb
xchg
cmpsb
cmp
mov
les
mov
xor
aaa
loop
imul
add
mov
push
mov
stos
testb
std
adc
sbbl
adc
syscall
mov
xchg
sub
es
dec
lods
inc
mov
jns
shrb
lcall
push
in
enter
movsl
inc
out
jb
sub
fwait
les
dec
jecxz
in
mov
popf
aaa
inc
xlat
push
mov
mov
fstpt
lds
lcall
cmpl
insl
push
pop
and
pop
mov
aad
jp
test
xor
xor
std
push
jnp
xchg
dec
out
cmpsl
cltd
xor
jo
add
cli
mov
sub
mov
testb
jg
stos
inc
dec
mov
enter
adc
lock
das
jbe
add
in
arpl
mov
sbb
mov
outsb
or
cmp
jle
mov
lds
pushf
xor
xor
mov
cwtl
mov
ficompl
mov
test
mov
sub
aam
sti
adc
repnz
xor
jle
jns
add
xchg
cs
repnz
push
and
mov
stos
inc
lea
lret
shrl
cwtl
stos
inc
lret
mov
leave
pusha
sbb
ds
jo
cs
add
in
jecxz
mov
fwait
xor
mov
out
xchg
mov
fnstcw
or
pop
xchg
sub
xor
in
call
or
lcall
and
push
scas
aas
fistpll
stos
test
lret
sti
push
jl
test
out
movsl
lcall
clc
mov
and
dec
insl
jge
stos
inc
inc
sahf
hlt
mov
push
adc
out
inc
xor
je
push
popf
inc
xchg
dec
in
popa
and
xchg
out
add
mov
fxam
cmp
clc
aaa
lea
push
mov
pop
adc
jnp
mov
cltd
mov
fldenv
mov
cmpsb
testl
sub
repz
dec
xor
jl
jp
add
cwtl
das
push
lock
push
and
dec
test
lret
cld
xchg
stos
inc
enter
dec
jmp
adc
outsb
ret
das
hlt
popl
in
loope
mov
lcall
and
test
mov
test
adc
pop
xchg
sub
jl
jge
push
scas
or
cmp
xlat
outsb
add
mov
push
lods
inc
xlat
fidivs
stos
cmpsl
lcall
xor
xor
cli
push
jl
sbbl
out
movsb
lcall
idivl
and
dec
insl
jl
stos
inc
inc
popf
hlt
mov
addr16
pusha
cltd
lock
in
inc
xor
jae
push
popf
aas
xchg
dec
in
pusha
and
xchg
out
add
mov
ftst
cmp
clc
mov
push
mov
pop
adc
in
fs
mov
cltd
mov
fnstenv
fsubs
mov
movsl
testl
sub
repz
dec
xor
jnp
jp
add
cwtl
das
push
out
outsl
push
and
dec
test
lea
leave
aam
sti
xchg
stos
inc
sbb
mov
leave
pusha
sbb
test
cmp
jle
ret
repz
in
loopne
mov
cltd
xor
arpl
pop
divb
jge
or
pop
xchg
sub
jl
jl
push
scas
pop
add
cmp
xlat
outsb
add
mov
push
lods
inc
xlat
fnsave
stos
cmpsb
pop
cmc
das
enter
push
jl
sbbb
out
mov
outsb
add
sub
mov
repnz
insl
jnp
stos
inc
inc
pushf
hlt
mov
leavew
pusha
cwtl
out
adc
in
inc
xor
jb
push
popf
ds
dec
in
pop
and
nop
in
add
mov
cmp
clc
xor
push
jg
mov
pop
adc
in
arpl
mov
cltd
mov
fnstenv
xlat
and
sub
aad
notl
rep
dec
xor
jp
jp
add
das
push
out
outsl
push
and
dec
cmpsl
inc
lea
enter
xchg
stos
inc
sbb
mov
leave
pusha
sbb
test
cmp
jle
shrl
repnz
in
fbld
mov
cwtl
xor
bound
pop
divb
jge
pop
pusha
pop
xchg
sub
jl
jnp
push
lods
push
add
aaa
into
xlat
outsb
add
mov
push
stos
inc
xlat
fdivl
movsl
std
pop
cmc
cs
xor
clc
dec
jl
sbbl
lcall
cmc
mov
and
dec
insl
jp
stos
inc
inc
fwait
hlt
mov
gs
pusha
xchg
out
adc
jmp
xor
jno
push
popf
cmp
pop
and
in
add
mov
aaa
mov
imul
test
mov
ffree
pop
pop
popf
xor
xor
jnp
cld
mov
cltd
mov
fnstenv
and
aad
ds
notb
rep
dec
xor
jns
jp
lcall
cltd
xor
outsl
push
push
je
dec
cmpsb
aas
lea
aad
stc
xchg
stos
inc
les
hlt
mov
pusha
pop
outsb
adc
push
xor
icebp
mov
out
frstor
mov
xchg
das
inc
fsubs
mov
ljmp
inc
cmp
pop
enter
fwait
xor
out
in
mov
pushf
ss
xlat
outsb
push
and
push
test
adc
mov
lds
leave
testb
jg
push
call
shrb
push
fwait
repz
and
inc
xlat
outsb
js
lods
inc
inc
cltd
cmc
mov
arpl
popa
xchg
in
adc
jmp
or
sahf
cmp
and
add
scas
inc
xor
stc
xor
adcb
fcmovnb
pop
or
cs
pusha
cli
mov
lcall
and
shll
aas
push
hlt
push
lods
and
inc
xor
ja
jnp
std
cwtl
push
jmp
push
ljmp
movsb
cmp
insl
notl
cmc
mov
lret
insb
adc
push
mov
popf
mov
or
outsb
add
pop
mov
and
jg
divl
sarl
add
pusha
and
xor
out
loop
mov
popf
xor
fsubrs
push
and
xchg
inc
jo
lods
mov
ret
xor
hlt
dec
jle
jge
push
jmp
shlb
pop
cltd
icebp
mov
and
jbe
lods
inc
inc
xchg
testb
ljmp
out
xor
insl
or
lahf
cmp
es
adc
mov
jmp
xor
adcb
fcmove
pop
or
sahf
xor
pop
clc
mov
fwait
mov
fidivl
shll
mov
shll
push
lods
and
cmc
test
lret
cld
xchg
push
jmp
dec
call
mov
and
testb
lea
lret
imul
xor
jg
mov
push
popf
mov
fldenv
or
push
xchg
sub
pop
mov
and
jge
imull
iret
jle
add
mov
pushf
xor
jg
jne
push
cmpsl
add
sahf
xor
fsubrs
push
and
mov
inc
fcmovbe
outsb
adc
clc
sub
xor
repnz
jg
jl
push
jmp
iret
gs
xchg
lock
and
jne
lods
inc
ds
testl
sbb
xor
insb
push
or
mov
fildll
adc
lea
std
stc
xchg
pop
sbb
sahf
xor
pop
idivb
mov
fidivl
shlb
mov
iret
and
fcoms
push
lods
and
imulb
leave
jge
sti
xchg
push
jmp
dec
out
pop
sbb
push
mov
ret
fsubrs
mov
dec
popa
adc
lods
fwait
xor
jg
mov
push
popf
mov
push
jmp
or
pop
xchg
sub
pop
mov
and
lods
pop
lods
inc
cmp
jle
lcall
bound
jmp
push
movsl
add
lahf
xor
fnstenv
push
es
dec
movsb
inc
fcmovnbe
insb
push
lods
popf
mulb
daa
mov
adcb
adc
inc
fwait
sahf
xor
xchg
out
mov
es
or
pop
pop
int3
arpl
mov
and
add
mov
mov
fnsave
pop
inc
xor
cli
sub
lods
inc
mov
sbbl
or
call
push
es
popf
scas
inc
shlb
add
inc
fsts
pop
scas
pop
jne
mull
jle
stc
xchg
push
ljmp
jno
push
outsb
mov
es
lods
inc
mov
bound
push
jmp
lret
jmp
pop
sahf
mov
push
ljmp
jno
xchg
daa
inc
ficompl
es
popa
clc
stos
add
jg
std
pop
int3
arpl
stos
ljmp
decb
lahf
das
notl
mov
dec
mov
pop
scas
pushf
hlt
stc
and
inc
adcb
adc
cltd
sahf
xor
xchg
in
mov
daa
call
or
pop
pop
int
mov
push
lods
push
mov
and
xor
push
mov
mov
or
mov
sub
sbbb
aad
popa
pop
mov
call
push
and
inc
fdivl
into
and
lcall
inc
ficoml
sbb
movsb
ds
lds
notl
sahf
xor
adc
mov
daa
addr16
scas
inc
mov
fcmovne
arpl
cs
orl
jmp
shll
mov
and
nop
daa
loop
stc
test
scas
inc
xor
push
int
mov
ss
test
mov
mov
hlt
inc
pop
es
xchg
fadd
adc
xor
cli
or
test
jge
inc
cmpsb
lds
sub
outsl
or
mov
jb
lods
movsl
scas
das
push
es
fsqrt
cmp
and
mov
sbb
xlat
sub
mov
loop
adc
adc
test
mov
add
xchg
pop
mov
test
sub
fisttpl
inc
les
mov
int
push
in
mov
in
add
adc
aad
jbe
stos
std
pop
sbb
int
jg
repnz
push
push
mov
and
mov
jnp
ljmp
inc
sub
aam
mov
push
ljmp
mov
xor
lea
ss
rcll
lret
xchg
pop
lret
and
push
lahf
jl
repnz
lods
sbb
int3
sahf
scas
xor
movl
mov
push
call
xor
dec
and
popa
push
push
fidivs
mov
cmp
jnp
mov
xchg
es
loopne
push
pop
inc
mov
dec
mov
jmp
lret
dec
leave
push
loope
mov
cmp
test
loopne
fsubrl
mov
mov
mov
test
jg
sbb
ss
not
popf
outsb
cld
das
shlb
mov
xchg
mov
jb
mov
mov
mov
test
pop
xchg
inc
out
movsl
xchg
mov
inc
push
cmpsl
lret
xor
push
mov
mov
or
std
fmull
mov
sub
fmull
aaa
call
fisttps
sbb
shlb
aam
inc
imul
xchg
std
sub
outsl
inc
insb
cmp
add
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
xchg
js
aam
out
cmp
int
adc
or
fsubl
stos
enter
xchg
jp
fldcw
loope
push
orb
mov
loope
rcll
adc
aad
adc
outsl
xchg
rorb
insl
inc
insl
xchg
mov
inc
imul
cmp
sbb
or
cmpsb
mov
jnp
loopne
stos
xchg
jns
int3
cmpsl
pop
mov
psubb
push
cmp
or
cld
cmp
dec
ljmp
or
push
adc
addr16
sti
push
ss
andb
sbb
outsl
xor
aam
loopne
push
insb
xchg
push
test
xchg
insb
push
dec
or
loope
enter
jp
cmpb
jge
adc
cmp
mov
ljmp
je
or
mov
push
in
dec
sub
mov
sub
or
xor
lock
cli
inc
loope
pop
into
mov
add
push
sbb
dec
iret
mov
or
mov
stc
outsb
outsl
iret
xor
test
push
adc
add
mov
pop
pop
inc
inc
xor
stc
psadbw
lret
mov
divb
pusha
nop
lret
sub
jns
cmp
into
and
repz
clc
and
pop
mov
es
push
gs
sub
out
sahf
aaa
scas
pop
lds
dec
dec
add
lcall
jmp
dec
int3
pop
popa
push
outsb
push
mov
test
cmpsl
mov
test
scas
xor
pop
cmp
loope
xchg
test
cmc
lods
adc
add
xor
mov
mov
fbstp
mov
push
cmpsl
xor
and
pop
scas
enter
xchg
add
and
sub
insl
clc
add
ds
hlt
lcall
inc
pop
jp
imull
out
jl
adc
fstpt
jno
daa
push
out
leave
mov
sub
inc
into
cltd
mov
mov
shll
xlat
mov
stos
dec
in
dec
xchg
insl
push
aaa
add
lret
stc
xchg
int3
iret
mov
cwtl
dec
xchg
mov
xor
ret
mov
lret
hlt
or
aaa
out
mov
ss
lret
cmp
std
les
lret
ja
jmp
cltd
push
fldenv
out
adc
add
lds
lea
insl
sbb
std
jp
jmp
or
cmpsb
lock
stos
pop
lods
xchg
jo
notl
adc
stos
lea
jae
insb
shll
pop
incl
adc
in
out
mov
loopne
pop
and
push
icebp
xor
xor
aad
imulb
shrb
mov
ljmp
test
add
cmp
in
sbb
loop
push
mov
jmp
cmpsl
in
mov
call
nop
jno
mov
mov
dec
mov
dec
mov
mov
cmp
shll
aaa
orb
fbld
pop
les
inc
mov
mov
mov
sti
into
xor
std
icebp
jbe
xchg
cmp
je
cmp
fnstenv
adc
out
fidivs
test
cs
scas
mov
sub
mov
ljmp
daa
mov
cmp
daa
mov
push
cmpsl
xor
mov
movsl
cld
mov
ja
pop
mov
pop
mov
cli
out
cli
lock
mov
das
add
aam
das
pop
pusha
fcoms
sahf
bound
cmp
xchg
cli
and
fldl
dec
mov
cmp
mov
stos
xchg
dec
cmp
push
jo
jmp
cmp
pop
lods
lods
das
je
aad
rcrl
sub
daa
mov
xor
cmpsl
std
jl
add
mov
cmpb
mov
outsl
js
adc
test
pop
in
inc
ret
and
mov
sub
cmpsl
pop
icebp
int3
daa
lea
xor
cmp
inc
add
mov
mov
mov
jp
sub
xlat
cmpsl
xor
sahf
pop
mov
add
icebp
test
inc
push
js
adc
jo
jno
pop
or
iret
mov
push
mov
xlat
dec
scas
push
mov
lods
repz
inc
std
and
add
or
dec
sub
sbb
rorb
mov
pop
bound
cli
repz
xchg
add
cwtl
into
clc
jg
insb
sarb
sub
xor
dec
push
inc
mov
push
push
inc
repnz
pop
arpl
adc
psrld
xor
jns
mov
pop
insb
xchg
mov
out
shlb
jno
and
fdivl
lods
add
adc
iret
mov
jbe
mov
fst
in
lahf
daa
cmpsb
mov
pop
dec
fs
sub
mov
pusha
pop
and
sub
push
std
pop
xchg
sub
scas
lods
add
jno
gs
out
jne
arpl
xor
add
xchg
add
mov
mov
cmpsl
add
add
fs
mov
sti
lock
cmpsl
pop
fmulp
jns
test
testl
sub
inc
cld
insl
pop
movsl
bound
scas
xor
pop
mov
mov
push
mov
cli
int3
lods
mov
out
aam
lret
cli
jno
push
je
mov
xchg
fiadds
inc
or
mov
sub
sarl
pop
notb
pop
inc
sbb
lea
in
mov
sbb
xchg
mov
sub
inc
add
in
lahf
sbb
incl
cmp
enter
std
mov
lods
xchg
aad
les
inc
sti
pop
mov
mov
dec
push
or
mov
idivl
ret
lret
and
fnstcw
mov
out
out
rol
dec
es
sbb
dec
cmp
and
xor
xchg
mov
mov
push
fwait
inc
dec
popa
adc
out
sahf
push
inc
popa
addr16
ficomps
mov
pop
mov
jnp
negb
mov
mov
dec
cltd
jno
adc
mov
ljmp
int3
dec
call
movsb
sahf
pop
ljmp
jbe
push
mov
daa
fildll
xor
imul
stc
add
fcomp
cwtl
mov
push
std
and
into
cmpsl
lods
outsb
fnstcw
dec
int
cltd
xchg
xchg
addr16
pop
loope
xlat
sarb
jns
jge
popfw
outsb
ret
dec
add
dec
add
lahf
dec
add
mov
mov
lret
lods
add
lods
lret
stos
sub
push
std
sbb
and
mov
push
pushf
push
iret
adc
jl
pop
xchg
xchg
dec
inc
xor
imul
jmp
