jb
arpl
outsl
inc
add
inc
cmp
add
add
ret
lea
push
mov
add
mov
mov
mov
mov
mov
call
mov
mov
movl
mov
push
mov
push
call
test
je
movw
mov
test
jne
mov
mov
movw
jmp
and
mov
mov
add
mov
add
movw
mov
mov
movl
mov
push
mov
push
mov
push
call
cmpl
jle
dec
mov
mov
mov
mov
movw
mov
movb
xchg
call
mov
mov
cmp
jle
mov
xchg
xchg
call
movw
mov
test
jne
mov
mov
movw
jmp
and
mov
mov
add
mov
add
mov
mov
mov
mov
mov
mov
mov
movl
xor
mov
mov
push
mov
push
mov
push
call
test
je
mov
mov
and
mov
mov
movb
cmp
jle
xchg
mov
mov
mov
mov
mov
movw
mov
add
mov
lea
mov
cmpl
jle
movw
xchg
add
lea
movl
movw
mov
mov
movl
mov
push
mov
push
mov
push
call
test
je
cmp
jne
mov
mov
sub
movb
mov
movl
mov
mov
mov
movl
mov
push
mov
push
call
mov
mov
cmp
jne
movl
movb
mov
xchg
mov
cmp
jg
mov
mov
dec
jmp
mov
add
mov
mov
call
mov
mov
mov
movw
mov
mov
mov
movl
mov
push
mov
push
call
test
jne
call
cmp
jne
mov
mov
sub
movb
mov
movl
mov
movw
mov
test
jne
mov
mov
movw
jmp
and
mov
mov
add
mov
add
movw
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jne
mov
mov
sub
movb
mov
movl
mov
call
mov
mov
movl
movl
mov
push
mov
push
mov
push
call
test
jne
mov
mov
cmp
jle
mov
xchg
xchg
mov
mov
movl
movl
mov
push
mov
push
mov
push
call
test
jne
mov
mov
mov
mov
mov
lea
push
call
test
jne
movb
cmp
jle
xchg
mov
mov
mov
mov
mov
movw
mov
add
mov
lea
mov
cmpl
jle
movw
xchg
add
lea
movl
call
mov
mov
cmp
jne
movl
movb
mov
xchg
mov
cmp
jg
mov
mov
dec
jmp
mov
add
mov
mov
mov
mov
movl
movl
mov
push
mov
push
mov
push
call
test
jne
mov
mov
and
mov
mov
call
mov
mov
cmp
jne
movl
movb
mov
xchg
mov
cmp
jg
mov
mov
dec
jmp
mov
add
mov
mov
call
movw
mov
mov
movl
mov
push
mov
push
mov
push
call
test
je
mov
mov
cmp
jne
movl
movb
mov
xchg
mov
cmp
jg
mov
mov
dec
jmp
mov
add
mov
mov
lea
push
call
test
jne
movw
mov
test
jne
mov
mov
movw
jmp
and
mov
mov
add
mov
add
lea
push
call
cmpl
jle
dec
mov
mov
mov
mov
movw
mov
movb
xchg
movw
mov
mov
movl
mov
push
mov
push
mov
push
call
test
jne
mov
mov
cmp
jne
movl
movb
mov
xchg
mov
cmp
jg
mov
mov
dec
jmp
mov
add
mov
mov
movw
mov
test
jne
mov
mov
movw
jmp
and
mov
mov
add
mov
add
movw
mov
mov
movl
mov
push
mov
push
mov
push
call
call
cmp
jne
mov
mov
sub
movb
mov
movl
mov
call
mov
mov
movl
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
mov
movl
xor
mov
mov
push
mov
push
mov
push
call
test
mov
pop
ret
add
add
cmp
xor
xor
xor
add
add
add
aaa
add
add
xor
add
cmp
cmp
xor
xor
xor
add
xor
xor
aaa
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
cmp
xor
add
xor
cmp
xor
xor
cmp
xor
add
add
add
in
push
mov
mov
mov
mov
mov
cmpl
jle
dec
mov
mov
mov
mov
movw
mov
movb
xchg
pop
pop
ret
lea
mov
mov
cmp
jle
mov
xchg
xchg
call
ret
lea
push
mov
add
test
je
xchg
call
jmp
xchg
mov
movl
mov
cmp
jl
mov
call
mov
mov
xchg
jmp
mov
sub
mov
mov
mov
cmp
jle
mov
xchg
xchg
mov
mov
movl
mov
push
mov
push
call
test
jne
movw
mov
test
jne
mov
mov
movw
jmp
and
mov
mov
add
mov
add
movw
mov
mov
movl
mov
push
mov
push
mov
push
call
test
je
cmp
jne
mov
mov
sub
movb
mov
movl
mov
movw
mov
mov
movl
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
call
movb
cmp
jle
xchg
mov
mov
mov
mov
mov
movw
mov
add
mov
lea
mov
cmpl
jle
movw
xchg
add
lea
movl
call
movw
mov
mov
movl
mov
push
mov
push
mov
push
call
test
jne
mov
mov
cmp
jle
mov
xchg
xchg
call
mov
mov
and
mov
mov
mov
mov
and
mov
mov
mov
mov
movl
movl
mov
push
mov
push
mov
push
call
test
je
cmp
jne
mov
mov
sub
movb
mov
movl
mov
call
mov
mov
cmp
jle
mov
xchg
xchg
mov
mov
movl
xor
mov
mov
push
mov
push
mov
push
call
test
je
mov
mov
cmp
jle
mov
xchg
xchg
call
movw
mov
mov
movl
mov
push
mov
push
mov
push
call
test
je
mov
mov
mov
mov
mov
call
mov
mov
mov
movw
mov
lea
push
call
test
jne
mov
mov
mov
mov
mov
call
cmpl
jle
dec
mov
mov
mov
mov
movw
mov
movb
xchg
movw
mov
test
jne
mov
mov
movw
jmp
and
mov
mov
add
mov
add
mov
mov
movl
movl
mov
push
mov
push
mov
push
call
test
jne
mov
mov
cmp
jle
mov
xchg
xchg
call
movb
cmp
jle
xchg
mov
mov
mov
mov
mov
movw
mov
add
mov
lea
mov
cmpl
jle
movw
xchg
add
lea
movl
call
lea
push
call
test
jne
cmpl
jle
dec
mov
mov
mov
mov
movw
mov
movb
xchg
movw
mov
mov
movl
mov
push
mov
push
mov
push
call
movw
mov
test
jne
mov
mov
movw
jmp
and
mov
mov
add
mov
add
mov
mov
movl
movl
mov
push
mov
push
mov
push
call
mov
mov
mov
movw
mov
call
mov
mov
movl
movl
mov
push
mov
push
mov
push
call
mov
mov
cmp
jle
mov
xchg
xchg
call
cmp
jne
mov
mov
sub
movb
mov
movl
mov
movw
mov
mov
movl
mov
push
mov
push
mov
push
call
test
je
mov
mov
and
mov
mov
cmp
jne
mov
mov
sub
movb
mov
movl
mov
mov
mov
movl
xor
mov
mov
push
mov
push
mov
push
call
cmpl
jle
dec
mov
mov
mov
mov
movw
mov
movb
xchg
call
movw
mov
mov
movl
mov
push
mov
push
mov
push
call
cmpl
jle
dec
mov
mov
mov
mov
movw
mov
movb
xchg
call
cmp
jne
mov
mov
sub
movb
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
push
mov
push
call
test
jne
mov
mov
mov
movw
mov
mov
mov
movl
mov
push
mov
push
call
test
je
mov
mov
mov
movw
mov
call
cmp
jne
mov
mov
sub
movb
mov
movl
mov
lea
push
call
mov
mov
cmp
jle
mov
xchg
xchg
call
mov
mov
cmp
jne
movl
movb
mov
xchg
mov
cmp
jg
mov
mov
dec
jmp
mov
add
mov
mov
mov
mov
movl
mov
push
mov
push
call
mov
mov
mov
movw
mov
mov
mov
movl
movl
mov
push
mov
push
mov
push
call
test
jne
movw
mov
test
jne
mov
mov
movw
jmp
and
mov
mov
add
mov
add
mov
mov
mov
movw
mov
lea
push
call
test
je
call
movw
mov
test
jne
mov
mov
movw
jmp
and
mov
mov
add
mov
add
call
movb
cmp
jle
xchg
mov
mov
mov
mov
mov
movw
mov
add
mov
lea
mov
cmpl
jle
movw
xchg
add
lea
movl
call
lea
push
call
test
jne
cmp
jne
mov
mov
sub
movb
mov
movl
mov
call
mov
mov
cmp
jne
movl
movb
mov
xchg
mov
cmp
jg
mov
mov
dec
jmp
mov
add
mov
mov
movw
mov
mov
movl
mov
push
mov
push
mov
push
call
test
jne
call
call
and
cmp
jle
movw
movw
mov
push
lea
push
mov
push
lea
push
call
jmp
call
movb
mov
mov
movl
add
and
cmpl
jge
movl
call
jmp
mov
push
push
call
and
mov
call
push
push
push
call
mov
mov
cmpl
jle
mov
mov
movl
xchg
mov
mov
mov
movw
mov
mov
cmp
jle
mov
xchg
xchg
mov
mov
movl
mov
push
mov
push
call
test
jne
movw
mov
test
jne
mov
mov
movw
jmp
and
mov
mov
add
mov
add
movw
mov
mov
movl
mov
push
mov
push
mov
push
call
test
je
cmp
jne
mov
mov
sub
movb
mov
movl
mov
movw
mov
mov
movl
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
call
movb
cmp
jle
xchg
mov
mov
mov
mov
mov
movw
mov
add
mov
lea
mov
cmpl
jle
movw
xchg
add
lea
movl
call
movw
mov
mov
movl
mov
push
mov
push
mov
push
call
test
jne
mov
mov
cmp
jle
mov
xchg
xchg
call
mov
mov
and
mov
mov
mov
mov
and
mov
mov
mov
mov
movl
movl
mov
push
mov
push
mov
push
call
test
je
cmp
jne
mov
mov
sub
movb
mov
movl
mov
call
mov
mov
cmp
jle
mov
xchg
xchg
mov
mov
movl
xor
mov
mov
push
mov
push
mov
push
call
test
je
mov
mov
cmp
jle
mov
xchg
xchg
call
movw
mov
mov
movl
mov
push
mov
push
mov
push
call
test
je
mov
mov
mov
mov
mov
call
mov
mov
mov
movw
mov
lea
push
call
test
jne
mov
mov
mov
mov
mov
call
cmpl
jle
dec
mov
mov
mov
mov
movw
mov
movb
xchg
movw
mov
test
jne
mov
mov
movw
jmp
and
mov
mov
add
mov
add
mov
mov
movl
movl
mov
push
mov
push
mov
push
call
test
jne
mov
mov
cmp
jle
mov
xchg
xchg
call
movb
cmp
jle
xchg
mov
mov
mov
mov
mov
movw
mov
add
mov
lea
mov
cmpl
jle
movw
xchg
add
lea
movl
call
lea
push
call
test
jne
cmpl
jle
dec
mov
mov
mov
mov
movw
mov
movb
xchg
movw
mov
mov
movl
mov
push
mov
push
mov
push
call
movw
mov
test
jne
mov
mov
movw
jmp
and
mov
mov
add
mov
add
mov
mov
movl
movl
mov
push
mov
push
mov
push
call
mov
mov
mov
movw
mov
call
mov
mov
movl
movl
mov
push
mov
push
mov
push
call
mov
mov
cmp
jle
mov
xchg
xchg
call
cmp
jne
mov
mov
sub
movb
mov
movl
mov
movw
mov
mov
movl
mov
push
mov
push
mov
push
call
test
je
mov
mov
and
mov
mov
cmp
jne
mov
mov
sub
movb
mov
movl
mov
mov
mov
movl
xor
mov
mov
push
mov
push
mov
push
call
cmpl
jle
dec
mov
mov
mov
mov
movw
mov
movb
xchg
call
movw
mov
mov
movl
mov
push
mov
push
mov
push
call
cmpl
jle
dec
mov
mov
mov
mov
movw
mov
movb
xchg
call
cmp
jne
mov
mov
sub
movb
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
push
mov
push
call
test
jne
mov
mov
mov
movw
mov
mov
mov
movl
mov
push
mov
push
call
test
je
mov
mov
mov
movw
mov
call
cmp
jne
mov
mov
sub
movb
mov
movl
mov
lea
push
call
mov
mov
cmp
jle
mov
xchg
xchg
call
mov
mov
cmp
jne
movl
movb
mov
xchg
mov
cmp
jg
mov
mov
dec
jmp
mov
add
mov
mov
mov
mov
movl
mov
push
mov
push
call
mov
mov
mov
movw
mov
mov
mov
movl
movl
mov
push
mov
push
mov
push
call
test
jne
movw
mov
test
jne
mov
mov
movw
jmp
and
mov
mov
add
mov
add
mov
mov
mov
movw
mov
lea
push
call
test
je
call
movw
mov
test
jne
mov
mov
movw
jmp
and
mov
mov
add
mov
add
call
movb
cmp
jle
xchg
mov
mov
mov
mov
mov
movw
mov
add
mov
lea
mov
cmpl
jle
movw
xchg
add
lea
movl
call
lea
push
call
test
jne
cmp
jne
mov
mov
sub
movb
mov
movl
mov
call
mov
mov
cmp
jne
movl
movb
mov
xchg
mov
cmp
jg
mov
mov
dec
jmp
mov
add
mov
mov
movw
mov
mov
movl
mov
push
mov
push
mov
push
call
test
jne
call
call
movl
mov
mov
mov
mov
mov
pop
ret
xor
xor
cmp
aaa
aaa
ss
xor
aaa
add
add
add
add
xor
add
xor
xor
xor
add
add
add
add
add
add
xor
xor
add
add
xor
cmp
add
xor
xor
cmp
xor
xor
xor
xor
xor
xor
xor
add
add
xor
xor
xor
xor
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
xor
xor
add
xor
xor
add
add
cmp
cmp
xor
xor
add
xor
xor
aaa
add
add
xor
add
fs
fs
cs
insb
add
in
add
mov
mov
cmp
jne
movl
movb
mov
xchg
mov
cmp
jg
mov
mov
dec
jmp
mov
add
mov
mov
movw
mov
mov
movl
mov
push
mov
push
mov
push
call
movb
cmp
jle
xchg
mov
mov
mov
mov
mov
movw
mov
add
mov
lea
mov
cmpl
jle
movw
xchg
add
lea
movl
mov
mov
movl
mov
push
mov
push
call
test
jne
movw
mov
test
jne
mov
mov
movw
jmp
and
mov
mov
add
mov
add
movw
mov
mov
movl
mov
push
mov
push
mov
push
call
test
jne
mov
mov
mov
movw
mov
mov
mov
movl
mov
push
mov
push
call
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
push
mov
push
call
test
je
mov
mov
mov
movw
mov
call
movw
mov
mov
movl
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
lea
push
call
test
je
mov
mov
mov
mov
mov
call
lea
push
call
test
je
mov
mov
mov
mov
mov
call
lea
push
call
movb
cmp
jle
xchg
mov
mov
mov
mov
mov
movw
mov
add
mov
lea
mov
cmpl
jle
movw
xchg
add
lea
movl
mov
mov
movl
mov
push
mov
push
call
cmp
jne
mov
mov
sub
movb
mov
movl
mov
mov
mov
movl
xor
mov
mov
push
mov
push
mov
push
call
test
je
movw
mov
test
jne
mov
mov
movw
jmp
and
mov
mov
add
mov
add
mov
mov
movl
movl
mov
push
mov
push
mov
push
call
test
je
movw
mov
test
jne
mov
mov
movw
jmp
and
mov
mov
add
mov
add
mov
mov
movl
xor
mov
mov
push
mov
push
mov
push
call
test
je
mov
mov
and
mov
mov
mov
mov
cmp
jle
mov
xchg
xchg
lea
push
call
mov
mov
mov
mov
mov
cmp
jne
mov
mov
sub
movb
mov
movl
mov
mov
mov
movl
mov
push
mov
push
call
test
jne
mov
mov
cmp
jle
mov
xchg
xchg
mov
mov
movl
mov
push
mov
push
call
mov
mov
cmp
jne
movl
movb
mov
xchg
mov
cmp
jg
mov
mov
dec
jmp
mov
add
mov
mov
mov
mov
movl
mov
push
mov
push
call
test
jne
cmp
jne
mov
mov
sub
movb
mov
movl
mov
mov
mov
movl
xor
mov
mov
push
mov
push
mov
push
call
test
je
mov
mov
mov
mov
mov
call
mov
mov
movl
mov
push
mov
push
call
mov
mov
cmp
jle
mov
xchg
xchg
mov
mov
movl
mov
push
mov
push
call
test
je
mov
mov
mov
movw
mov
call
lea
push
call
test
jne
movb
cmp
jle
xchg
mov
mov
mov
mov
mov
movw
mov
add
mov
lea
mov
cmpl
jle
movw
xchg
add
lea
movl
call
lea
push
call
mov
mov
cmp
jne
movl
movb
mov
xchg
mov
cmp
jg
mov
mov
dec
jmp
mov
add
mov
mov
cmp
jne
mov
mov
sub
movb
mov
movl
mov
mov
mov
movl
mov
push
mov
push
call
test
je
mov
mov
mov
movw
mov
mov
mov
movl
mov
push
mov
push
call
mov
mov
cmp
jle
mov
xchg
xchg
movw
mov
mov
movl
mov
push
mov
push
mov
push
call
mov
pop
ret
xor
aaa
xor
xor
add
cmp
cmp
xor
xor
add
xor
xor
xor
cmp
xor
add
xor
xor
xor
add
xor
xor
add
xor
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
add
xor
xor
xor
cmp
xor
xor
xor
add
add
add
add
add
add
add
add
xor
xor
xor
cmp
add
xor
xor
xor
xor
xor
add
xor
xor
cmp
xor
xor
cmp
xor
cmp
add
add
in
push
mov
mov
cmp
jne
movl
movb
mov
xchg
mov
cmp
jg
mov
mov
dec
jmp
mov
add
mov
mov
mov
mov
mov
mov
mov
call
cmp
jne
mov
mov
sub
movb
mov
movl
mov
call
movb
mov
pop
pop
ret
mov
push
mov
add
mov
mov
mov
and
cmp
jle
movw
movw
mov
push
lea
push
mov
push
lea
push
call
jmp
call
movb
mov
mov
movl
mov
mov
mov
cmp
je
jmp
cmp
jl
mov
call
mov
mov
xchg
jmp
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
movl
mov
mov
mov
mov
mov
mov
pop
ret
cmpl
jle
dec
mov
mov
mov
mov
movw
mov
movb
xchg
call
mov
mov
and
mov
mov
call
ret
push
mov
add
mov
mov
mov
mov
cmp
je
mov
jmp
mov
movw
mov
add
mov
mov
mov
cmp
je
jmp
push
call
mov
cmp
jge
movb
add
mov
jmp
and
sub
mov
mov
mov
xor
divl
test
jne
add
and
cmpl
jge
movl
call
jmp
mov
push
push
call
and
mov
call
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jl
mov
call
mov
mov
xchg
jmp
mov
sub
mov
mov
mov
pop
ret
nop
push
mov
add
mov
mov
lea
add
and
cmpl
jge
movl
call
jmp
mov
push
push
call
and
mov
call
mov
mov
mov
mov
mov
mov
movw
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jl
mov
call
mov
mov
xchg
jmp
mov
sub
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmpl
jle
mov
mov
movl
xchg
mov
mov
mov
movw
mov
mov
movl
test
je
xchg
call
jmp
xchg
mov
movl
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
push
call
mov
cmp
jge
movb
add
mov
jmp
and
sub
mov
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
mov
cmp
je
mov
jmp
mov
movw
mov
add
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
call
push
push
push
mov
call
push
mov
mov
call
push
mov
mov
call
mov
mov
mov
add
and
cmpl
jge
movl
call
jmp
mov
push
push
call
and
mov
call
mov
pop
ret
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
ret
lea
adc
aas
jbe
gs
push
dec
sbb
xchg
in
jmp
sub
dec
iret
into
outsl
insl
cmp
rcl
in
jecxz
cmpsb
ljmp
mov
scas
mov
lahf
scas
cmpsl
ljmp
xchg
mov
nop
test
or
ja
orb
jge
pop
jl
pop
pop
bound
pop
push
dec
push
inc
inc
inc
mov
jl
cmp
adc
cmp
aaa
das
sub
cmp
adc
bound
adc
addb
clc
xchg
stc
cwtl
out
pushf
scas
mov
push
lods
fidivl
mov
loop
in
loopne
mov
int3
xchg
lahf
les
mov
pushf
lods
xchg
lea
add
pushf
cmpsb
mov
jb
sbb
movsl
push
mov
jmp
repnz
inc
dec
mov
int
sarl
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
sarb
fistpl
shlb
add
sbb
enter
jecxz
test
aas
aad
jle
add
xor
sarb
add
dec
nop
mov
inc
add
int
outsl
leave
cmp
jle
add
loope
mov
inc
fdivrl
add
in
push
lea
loopne
inc
add
stc
pusha
push
ret
sbb
inc
std
pop
pop
shrl
jle
add
dec
cmp
pop
sbb
ss
cmp
lea
das
jnp
hlt
leave
insl
push
jns
cmp
adc
push
push
cltd
pop
add
addr16
push
xor
in
mov
cmp
sbb
mov
ret
xchg
aad
lock
pop
pop
shll
shlb
sub
das
xchg
sub
icebp
inc
lods
add
jle
inc
movsb
pop
shll
pushf
sbb
mov
data16
icebp
mov
pop
mov
mov
fcompl
pop
mov
cmc
in
mov
jnp
idivl
mov
sub
sbb
mov
push
lock
imul
jmp
into
in
add
movl
or
shll
pushf
jnp
cmp
loope
dec
mov
mov
cmp
cmpsb
add
faddl
inc
xchg
pop
int
pand
sbb
lret
out
fiaddl
out
xor
cmp
inc
int
into
fcomp
fimull
and
imul
and
mov
mov
or
push
fisubs
xchg
push
mov
popf
gs
scas
jnp
mov
dec
dec
push
fisttpl
lcall
jmp
bound
das
loop
cmp
cmp
rorb
adc
push
jmp
add
out
and
std
sbb
fiadds
aad
ficoml
jl
movsb
ficomps
dec
ja
data16
in
lret
pop
mov
mov
fwait
dec
ret
test
hlt
xchg
lods
insl
loopne
mov
add
pop
push
fstps
lret
pop
jmp
lret
jo
xor
aaa
fiaddl
sbb
sbb
add
push
sbb
sahf
or
lcall
imul
mov
js
pop
push
dec
lret
rcll
fsubp
loop
test
mov
jnp
xor
data16
add
push
fcompl
clc
dec
movsl
pop
sub
pop
push
mov
loope
mov
mov
push
ds
mov
pop
pop
sbb
loope
mov
xor
test
pop
shlb
xlat
pop
and
lcall
dec
lock
jl
add
dec
mov
xchg
es
sti
aas
cmp
test
insb
daa
les
sub
jg
andl
rclb
sub
addr16
cmpb
jae
lret
dec
lds
test
int
mov
add
and
mov
mov
push
xchg
xchg
xchg
add
adc
jbe
loope
sub
xor
repnz
stc
jl
pop
push
inc
repnz
mov
adc
dec
xchg
dec
addr16
cmpsb
test
cmpsl
sbb
push
rcrl
mov
xchg
push
sarl
sbb
and
cmp
mov
test
mov
rolb
dec
ret
xchg
fisttpl
add
sub
inc
mov
das
scas
jo
jp
sub
xor
std
dec
mov
cld
xchg
mov
mov
mov
mov
insl
push
xor
mov
stc
cmp
ficompl
aam
mov
sbb
out
lock
mov
hlt
adc
test
leave
and
adc
popa
sub
inc
repnz
jmp
pop
xchg
out
ljmp
inc
bound
mov
xchg
mov
xchg
xchg
cs
je
test
test
nop
xchg
add
mov
lods
jmp
inc
cmp
or
pop
cmpsl
adcb
arpl
into
push
mov
in
adc
inc
sub
push
sbb
sbb
movsl
mov
add
fwait
push
adc
xchg
aad
stc
div
repz
loope
hlt
mov
mov
enter
adc
nop
inc
add
imul
test
cmpsl
jo
mov
cmp
hlt
or
inc
add
xchg
ljmp
aad
sahf
and
outsl
insl
imul
out
pop
cmp
arpl
enter
inc
rolb
push
dec
xchg
inc
addr16
ss
out
sbb
sub
and
sbb
sbb
dec
push
or
ficoml
push
cli
pop
stc
cmpsb
jae
sub
push
outsl
loopne
clc
ja
inc
adc
mov
sbb
or
addr16
mov
cmpsb
jnp
clc
inc
stos
jne
push
or
inc
add
popa
cltd
addb
sbb
jg
sbb
inc
add
ja
fs
je
add
inc
or
inc
add
cmp
push
ret
cmp
xchg
aam
dec
cs
mov
or
sub
repnz
pop
or
pop
or
mov
or
jl
nop
inc
add
shlb
pop
adc
sbb
faddp
or
or
inc
add
nop
or
or
inc
add
push
mov
or
or
inc
add
add
or
iret
loopne
nop
inc
add
inc
add
fmull
inc
add
in
dec
or
fmull
inc
add
push
cmpsl
je
js
aaa
cltd
dec
ret
xchg
add
or
inc
add
roll
xlat
jl
aad
fstps
cmp
push
add
inc
push
push
aad
push
lods
out
xor
and
add
fists
inc
add
sub
add
inc
add
in
pusha
inc
add
out
bnd
fcoml
xchg
pop
pushf
jle
add
inc
add
or
fwait
adc
pusha
inc
add
add
and
add
add
add
arpl
stos
cwtl
dec
inc
add
sar
xor
jle
add
mov
rcll
and
sbb
sub
and
in
jle
add
xor
xchg
aas
rolb
add
not
repnz
out
stc
loope
mov
sub
rclb
pushf
jle
add
popf
mov
jle
add
shll
push
push
call
inc
add
pusha
inc
add
shll
sbb
fsts
pusha
inc
add
daa
out
pusha
inc
add
repz
pusha
inc
add
or
add
add
iret
add
add
sbb
add
iret
daa
pusha
inc
add
nop
dec
inc
add
add
and
add
cmp
sbb
add
pop
add
add
add
mov
sbb
add
test
add
inc
or
inc
add
pusha
inc
add
punpcklbw
sarl
pusha
inc
add
pop
sbb
add
jns
jae
pusha
inc
add
jnp
scas
outsl
sub
add
and
jg
pusha
inc
add
mov
pusha
inc
add
mov
nop
xchg
cli
aas
lcall
mov
test
push
gs
or
inc
add
pop
pusha
inc
add
es
inc
add
xchg
or
add
fcomps
add
add
dec
lea
mov
das
sub
inc
add
fisubrl
lahf
add
adc
add
add
mov
mov
cmp
fmuls
jecxz
mov
mov
add
add
and
add
gs
pusha
inc
add
imul
push
es
inc
add
mov
add
pusha
inc
add
add
icebp
pop
sbb
test
inc
add
cmp
inc
add
sarb
inc
add
decl
pusha
inc
add
cltd
add
add
popf
sbb
add
fidivrl
inc
add
lea
je
xchg
push
inc
add
mov
xor
push
inc
add
in
mov
push
pusha
inc
add
rclb
or
cmp
out
stc
sbb
int
pusha
inc
add
inc
add
push
pusha
inc
add
or
add
add
roll
pusha
inc
add
add
add
push
xchg
dec
or
push
inc
add
div
in
sub
pusha
inc
add
xor
pusha
inc
add
mov
add
add
mov
add
stos
xlat
gs
pusha
inc
add
fwait
pop
or
inc
add
pusha
inc
add
punpcklbw
fnsave
pusha
inc
add
dec
sbb
add
repz
add
outsl
push
ret
subl
inc
add
or
pusha
inc
add
lret
xchg
sbb
dec
pushf
stos
lcall
call
cmp
sub
lret
adc
mov
sti
pop
dec
adc
rcll
dec
fwait
cs
mov
cmp
divb
sbb
adcl
sbb
adcl
sets
and
sub
addr16
andb
cmp
cmp
or
iret
int
and
fistpl
mov
dec
es
inc
add
jae
pusha
inc
add
les
dec
and
add
jns
pusha
inc
add
sub
jl
add
addl
fisttpl
sti
jbe
outsl
and
push
cmp
sub
inc
add
or
adc
push
les
sbb
out
lock
sbb
jl
mov
adcl
xchg
push
pushf
cmpsl
push
push
test
jno
arpl
scas
inc
ror
loop
xchg
xlat
or
mov
fildll
mov
cs
sti
aaa
lret
je
pop
mov
pop
rol
xchg
fnstcw
xlat
pop
and
andb
pusha
mov
idivb
inc
movsb
or
xchg
and
fsubp
imul
ret
sbb
ss
cld
xchg
repnz
xchg
arpl
xchg
sub
pop
shll
lahf
shrb
scas
jle
loop
cmp
sub
adc
inc
add
inc
sub
add
aad
sub
add
add
sbb
fildll
fbstp
sti
aas
mov
push
mov
add
shrl
lcall
bound
mov
cmp
push
xor
xorb
ss
inc
inc
dec
xchg
cmp
bound
inc
arpl
sbb
mov
aaa
cli
cltd
cs
dec
add
push
movsl
and
je
inc
into
cmp
jge
mov
aad
iret
sub
pusha
out
sbb
jl
popf
nop
popf
fwait
jge
mov
lods
adc
ret
test
test
hlt
jno
dec
jge
pop
pop
mov
outsb
dec
xchg
xor
xchg
rcll
cmp
aaa
lret
ljmp
and
jno
sbb
mov
jg
sbbl
pusha
inc
add
inc
or
add
pusha
inc
add
and
sub
pusha
inc
add
sub
pusha
inc
add
add
add
jbe
inc
pop
inc
lret
inc
push
pusha
inc
add
add
and
add
lcall
add
insl
sub
add
sub
inc
add
inc
data16
cmp
inc
add
mov
mov
mov
stos
in
scas
in
insl
clc
xchg
mov
mov
into
rcl
jae
jle
add
fabs
lock
add
xchg
pop
fwait
xor
call
inc
add
mov
and
add
add
sub
add
add
sbb
add
jne
or
and
pusha
inc
add
inc
add
and
sub
inc
add
call
inc
add
inc
add
add
add
mov
fnstcw
pusha
inc
add
pop
lock
inc
add
mov
lret
or
mov
push
push
imul
inc
add
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
mov
mov
movl
mov
mov
mov
mov
mov
push
mov
push
call
mov
add
and
cmpl
jge
movl
call
jmp
mov
push
push
call
and
mov
call
mov
mov
pop
ret
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
mov
mov
sub
jb
inc
mov
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
movw
mov
lea
push
call
test
je
cmp
jne
mov
mov
sub
movb
mov
movl
mov
mov
mov
movl
xor
mov
mov
push
mov
push
mov
push
call
mov
mov
cmp
jle
mov
xchg
xchg
call
movb
cmp
jle
xchg
mov
mov
mov
mov
mov
movw
mov
add
mov
lea
mov
cmpl
jle
movw
xchg
add
lea
movl
movw
mov
mov
movl
mov
push
mov
push
mov
push
call
test
jne
mov
mov
cmp
jle
mov
xchg
xchg
movw
mov
mov
movl
mov
push
mov
push
mov
push
call
cmpl
jle
dec
mov
mov
mov
mov
movw
mov
movb
xchg
lea
push
call
mov
mov
mov
movw
mov
mov
mov
movl
mov
push
mov
push
call
test
jne
cmp
jne
mov
mov
sub
movb
mov
movl
mov
call
mov
mov
cmp
jne
movl
movb
mov
xchg
mov
cmp
jg
mov
mov
dec
jmp
mov
add
mov
mov
lea
push
call
mov
mov
mov
mov
mov
call
mov
mov
cmp
jne
movl
movb
mov
xchg
mov
cmp
jg
mov
mov
dec
jmp
mov
add
mov
mov
lea
push
call
test
je
movb
cmp
jle
xchg
mov
mov
mov
mov
mov
movw
mov
add
mov
lea
mov
cmpl
jle
movw
xchg
add
lea
movl
mov
mov
mov
movw
mov
mov
mov
movl
mov
push
mov
push
call
cmpl
jle
dec
mov
mov
mov
mov
movw
mov
movb
xchg
mov
mov
movl
mov
push
mov
push
call
mov
mov
cmp
jle
mov
xchg
xchg
movw
mov
mov
movl
mov
push
mov
push
mov
push
call
mov
mov
and
mov
mov
movw
mov
mov
movl
mov
push
mov
push
mov
push
call
test
je
mov
mov
cmp
jne
movl
movb
mov
xchg
mov
cmp
jg
mov
mov
dec
jmp
mov
add
mov
mov
call
mov
mov
mov
movw
mov
movb
cmp
jle
xchg
mov
mov
mov
mov
mov
movw
mov
add
mov
lea
mov
cmpl
jle
movw
xchg
add
lea
movl
lea
push
call
test
je
mov
mov
cmp
jle
mov
xchg
xchg
call
mov
mov
mov
movw
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
push
mov
push
call
test
jne
cmp
jne
mov
mov
sub
movb
mov
movl
mov
call
lea
push
call
test
jne
cmpl
jle
dec
mov
mov
mov
mov
movw
mov
movb
xchg
mov
mov
cmp
jne
movl
movb
mov
xchg
mov
cmp
jg
mov
mov
dec
jmp
mov
add
mov
mov
movw
mov
mov
movl
mov
push
mov
push
mov
push
call
test
je
mov
mov
and
mov
mov
cmpl
jle
dec
mov
mov
mov
mov
movw
mov
movb
xchg
mov
mov
movl
mov
push
mov
push
call
movb
cmp
jle
xchg
mov
mov
mov
mov
mov
movw
mov
add
mov
lea
mov
cmpl
jle
movw
xchg
add
lea
movl
call
cmpl
jle
dec
mov
mov
mov
mov
movw
mov
movb
xchg
mov
mov
movl
mov
push
mov
push
call
test
jne
mov
mov
cmp
jle
mov
xchg
xchg
lea
push
call
mov
pop
ret
add
add
add
add
add
add
add
add
add
add
add
xor
cmp
xor
xor
add
xor
xor
xor
aaa
xor
add
cmp
aaa
add
add
xor
cmp
aaa
cmp
add
xor
xor
xor
aaa
xor
cmp
add
xor
xor
add
push
mov
add
mov
mov
mov
cmp
je
mov
jmp
mov
movw
mov
add
xor
mov
xor
mov
mov
cmp
je
jmp
push
call
mov
cmp
jge
movb
add
mov
jmp
and
sub
mov
mov
mov
mov
call
mov
mov
cmp
jl
mov
call
mov
mov
xchg
jmp
mov
sub
mov
jmp
mov
mov
mov
mov
cmpb
jne
mov
inc
call
test
je
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
incl
incl
mov
mov
dec
cmp
jae
test
je
xchg
call
jmp
xchg
mov
movl
mov
mov
pop
ret
lea
push
mov
add
mov
mov
and
cmp
jle
movw
movw
mov
push
lea
push
mov
push
lea
push
call
jmp
call
movb
mov
mov
movl
mov
push
mov
push
call
mov
cmpl
jle
mov
mov
movl
xchg
mov
mov
mov
movw
mov
mov
pop
ret
nop
push
mov
add
mov
movb
mov
mov
cmpl
je
mov
mov
mov
cmp
jb
mov
mov
cmpl
je
mov
mov
mov
cmp
jbe
mov
mov
jmp
mov
mov
mov
cmp
jne
movb
mov
mov
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
cmp
jl
mov
call
mov
mov
xchg
jmp
mov
sub
mov
push
call
mov
lea
mov
subl
movb
movb
movb
movb
movb
movb
sub
movl
mov
mov
mov
mov
mov
mov
call
mov
test
je
xchg
call
jmp
xchg
mov
movl
mov
mov
mov
call
mov
lea
mov
subl
mov
mov
add
mov
call
mov
cmpl
je
add
and
cmpl
jge
movl
call
jmp
mov
push
push
call
and
mov
call
mov
mov
add
mov
call
mov
cmpl
je
and
cmp
jle
movw
movw
mov
push
lea
push
mov
push
lea
push
call
jmp
call
movb
mov
mov
movl
lea
push
push
mov
sub
push
mov
push
call
movl
xor
mov
mov
mov
cmp
je
mov
jmp
mov
movw
mov
add
addl
mov
cmp
je
call
mov
call
test
je
addl
addl
jmp
cmp
jne
mov
mov
sub
movb
mov
movl
mov
mov
addb
movw
mov
test
jne
mov
mov
movw
jmp
and
mov
mov
add
mov
add
mov
and
test
jne
incl
mov
mov
and
mov
mov
mov
dec
mov
inc
xor
mov
mov
mov
movw
mov
incl
incl
incl
mov
cmp
jne
and
cmp
jle
movw
movw
mov
push
lea
push
mov
push
lea
push
call
jmp
call
movb
mov
mov
movl
mov
call
test
je
xchg
call
jmp
xchg
mov
movl
mov
mov
push
mov
push
call
cmpl
je
push
call
mov
cmp
jge
movb
add
mov
jmp
and
sub
mov
mov
mov
mov
cmp
je
mov
jmp
mov
movw
mov
add
add
and
cmpl
jge
movl
call
jmp
mov
push
push
call
and
mov
call
pushl
mov
pushl
add
push
jmp
cmp
jl
mov
call
mov
mov
xchg
jmp
mov
sub
mov
mov
pop
ret
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
add
push
mov
add
mov
mov
and
mov
mov
lea
push
call
test
je
cmp
jne
mov
mov
sub
movb
mov
movl
mov
call
mov
mov
and
mov
mov
lea
push
call
test
jne
mov
mov
cmp
jle
mov
xchg
xchg
movw
mov
mov
movl
mov
push
mov
push
mov
push
call
movw
mov
test
jne
mov
mov
movw
jmp
and
mov
mov
add
mov
add
call
movw
mov
mov
movl
mov
push
mov
push
mov
push
call
test
je
cmp
jne
mov
mov
sub
movb
mov
movl
mov
call
mov
mov
mov
movw
mov
mov
mov
movl
movl
mov
push
mov
push
mov
push
call
test
je
movw
mov
test
jne
mov
mov
movw
jmp
and
mov
mov
add
mov
add
mov
mov
movl
mov
push
mov
push
call
test
je
movb
cmp
jle
xchg
mov
mov
mov
mov
mov
movw
mov
add
mov
lea
mov
cmpl
jle
movw
xchg
add
lea
movl
call
mov
mov
movl
xor
mov
mov
push
mov
push
mov
push
call
test
jne
mov
mov
cmp
jne
movl
movb
mov
xchg
mov
cmp
jg
mov
mov
dec
jmp
mov
add
mov
mov
call
movw
mov
test
jne
mov
mov
movw
jmp
and
mov
mov
add
mov
add
movb
cmp
jle
xchg
mov
mov
mov
mov
mov
movw
mov
add
mov
lea
mov
cmpl
jle
movw
xchg
add
lea
movl
lea
push
call
cmpl
jle
dec
mov
mov
mov
mov
movw
mov
movb
xchg
lea
push
call
test
je
call
cmp
jne
mov
mov
sub
movb
mov
movl
mov
mov
mov
movl
movl
mov
push
mov
push
mov
push
call
test
jne
movw
mov
test
jne
mov
mov
movw
jmp
and
mov
mov
add
mov
add
call
movb
cmp
jle
xchg
mov
mov
mov
mov
mov
movw
mov
add
mov
lea
mov
cmpl
jle
movw
xchg
add
lea
movl
cmp
jne
mov
mov
sub
movb
mov
movl
mov
mov
mov
movl
movl
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
mov
movl
movl
mov
push
mov
push
mov
push
call
test
jne
mov
mov
and
mov
mov
mov
mov
movl
mov
push
mov
push
call
test
je
mov
mov
mov
movw
mov
call
mov
mov
mov
mov
mov
movw
mov
mov
movl
mov
push
mov
push
mov
push
call
movw
mov
test
jne
mov
mov
movw
jmp
and
mov
mov
add
mov
add
movb
cmp
jle
xchg
mov
mov
mov
mov
mov
movw
mov
add
mov
lea
mov
cmpl
jle
movw
xchg
add
lea
movl
mov
mov
movl
movl
mov
push
mov
push
mov
push
call
cmpl
jle
dec
mov
mov
mov
mov
movw
mov
movb
xchg
call
mov
mov
mov
movw
mov
mov
mov
movl
mov
push
mov
push
call
test
jne
cmp
jne
mov
mov
sub
movb
mov
movl
mov
movw
mov
test
jne
mov
mov
movw
jmp
and
mov
mov
add
mov
add
movw
mov
mov
movl
mov
push
mov
push
mov
push
call
mov
mov
cmp
jne
movl
movb
mov
xchg
mov
cmp
jg
mov
mov
dec
jmp
mov
add
mov
mov
mov
mov
movl
movl
mov
push
mov
push
mov
push
call
movw
mov
test
jne
mov
mov
movw
jmp
and
mov
mov
add
mov
add
call
lea
push
call
test
je
call
movb
cmp
jle
xchg
mov
mov
mov
mov
mov
movw
mov
add
mov
lea
mov
cmpl
jle
movw
xchg
add
lea
movl
cmp
jne
mov
mov
sub
movb
mov
movl
mov
movw
mov
mov
movl
mov
push
mov
push
mov
push
call
test
jne
call
movb
cmp
jle
xchg
mov
mov
mov
mov
mov
movw
mov
add
mov
lea
mov
cmpl
jle
movw
xchg
add
lea
movl
mov
mov
movl
xor
mov
mov
push
mov
push
mov
push
call
test
je
mov
mov
mov
mov
mov
call
cmpl
jle
dec
mov
mov
mov
mov
movw
mov
movb
xchg
movw
mov
mov
movl
mov
push
mov
push
mov
push
call
call
mov
mov
cmp
jle
mov
xchg
xchg
mov
mov
movl
mov
push
mov
push
call
test
jne
cmpl
jle
dec
mov
mov
mov
mov
movw
mov
movb
xchg
lea
push
call
test
mov
pop
ret
add
add
add
add
xor
xor
aaa
add
add
add
add
add
aaa
cmp
xor
xor
add
add
add
xor
cmp
xor
xor
aaa
add
add
add
add
add
add
cmp
cmp
xor
xor
xor
aaa
add
cmp
add
add
xor
xor
xor
add
xor
xor
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
xor
xor
xor
cmp
xor
add
xor
cmp
xor
xor
xor
add
cmp
xor
xor
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
aaa
xor
xor
add
add
in
add
push
call
mov
cmp
jge
movb
add
mov
jmp
and
sub
mov
mov
mov
mov
cmp
je
mov
jmp
mov
movw
mov
add
movb
mov
and
mov
test
je
xchg
call
jmp
xchg
mov
movl
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
inc
xor
add
dec
cmp
jne
pushl
push
call
mov
add
dec
cmp
jne
movl
mov
mov
mov
mov
cmpl
jle
mov
mov
movl
xchg
mov
mov
mov
movw
movb
add
and
cmpl
jge
movl
call
jmp
mov
push
push
call
and
mov
call
mov
mov
pop
ret
nop
push
mov
add
test
je
xchg
call
jmp
xchg
mov
movl
mov
movb
cmp
jle
xchg
mov
mov
mov
mov
mov
movw
mov
add
mov
lea
mov
cmpl
jle
movw
xchg
add
lea
movl
call
test
jne
call
jmp
add
and
cmpl
jge
movl
call
jmp
mov
push
push
call
and
mov
call
movw
movl
mov
mov
mov
mov
call
mov
pop
ret
nop
cmpl
jne
jle
mov
xchg
xchg
mov
lea
mov
adc
inc
add
add
fisttpll
add
add
out
add
mov
mov
mov
mov
cmp
jle
mov
xchg
xchg
mov
lea
mov
call
movw
mov
test
jne
mov
mov
movw
jmp
and
mov
mov
add
mov
add
ret
nop
add
pop
xor
adc
movsl
adc
push
dec
adc
test
and
mov
cmp
add
repz
insb
stos
adc
movsb
jl
and
add
stos
test
push
add
enter
xor
xchg
iret
mov
pop
cmpsl
adc
add
xor
or
add
xor
cmpsl
add
fimull
mov
add
jp
sahf
add
cld
mov
outsl
dec
in
sahf
aaa
jae
push
ljmp
addr16
jo
add
sbb
cmp
out
adc
dec
xchg
out
push
loop
adc
add
ja
mov
adc
mov
sbb
or
andl
mov
mov
add
prefetch
loope
push
push
mov
outsl
insb
add
ror
push
push
add
mov
lcall
repnz
mov
sub
bound
add
stos
js
and
outsl
mov
in
mov
mov
add
cs
in
js
cmp
adc
data16
and
push
cli
xchg
popa
in
xor
mov
push
add
and
add
or
fisubrs
hlt
mov
add
in
xor
sahf
in
add
out
lock
jl
pop
test
mov
je
inc
lret
pop
ds
push
subl
std
mov
xor
aaa
cmpsl
mov
add
dec
popa
add
sub
inc
and
imul
pop
xor
rorb
add
adc
cwtl
and
sub
call
aam
sbb
cmp
pop
mov
xor
test
sbb
test
and
and
hlt
sub
icebp
add
mov
xor
and
test
pop
shlb
out
dec
lret
pop
dec
scas
jp
add
mov
test
push
add
das
int3
dec
adc
pop
cmpsb
add
xor
jo
cmp
sbb
and
std
out
test
lret
ret
popl
xor
data16
jg
lods
cmp
mov
movsl
sbb
and
jmp
add
jno
jb
jmp
adc
sti
out
add
xchg
push
cld
dec
dec
aas
xchg
jae
add
lds
xor
int3
adc
sbb
lods
push
pop
clc
pop
pop
loope
cmp
lret
push
dec
add
mov
ja
xchg
aaa
xor
mov
ret
add
mov
and
push
mov
loopne
sbb
mov
sub
sub
mov
dec
mov
add
incb
mov
adc
add
add
add
mov
pusha
outsb
xchg
movsb
fstps
sti
add
lcall
dec
push
sbb
xor
jo
adc
js
mov
add
sub
pop
sub
push
ds
add
sbb
mov
repnz
lret
push
call
dec
add
xchg
insl
rcr
add
or
mov
dec
mov
xor
xchg
stos
xor
add
inc
das
divl
aas
test
adcl
mov
and
add
ret
add
add
loopne
out
scas
or
scas
fstpt
jo,pn
dec
icebp
inc
dec
mov
add
cmp
or
or
ljmp
lret
push
lcall
iret
xor
pop
fmul
jmp
stos
sbb
and
jg
jmp
jbe
mov
mov
call
out
cltd
push
add
rolb
add
xchg
jo
imul
popf
jbe
xchg
sub
mov
mov
mov
push
sbb
and
mov
pusha
ret
jno
pop
insb
push
mov
mov
pop
inc
insb
out
sbb
add
mov
fldenv
nop
add
xlat
sub
add
jo
push
pusha
pop
add
add
sbb
pop
add
enter
fmull
jl
sbb
jo
insl
add
aaa
sub
test
lods
mov
cli
add
imul
add
cwtl
add
sub
xchg
ficomps
jg
lods
jne
add
push
aad
sbb
dec
fldenv
lret
mul
clc
cmpl
mov
mov
xor
sti
es
jno
add
add
mov
lret
inc
dec
sbb
add
inc
aas
or
pop
stos
add
mov
bound
adc
inc
insl
scas
loopne
adc
ljmp
push
add
sub
sbb
mov
ja
dec
popl
cmp
add
push
sub
add
dec
dec
pop
pop
add
mov
rcll
test
mov
inc
or
adc
push
xchg
test
add
int
and
inc
push
cwtl
inc
pop
shl
add
mov
add
cmp
cld
ret
mov
xor
jbe
adc
fdivs
std
das
inc
aas
sbb
or
mov
add
rolb
in
xor
out
incl
hlt
int3
xlat
and
arpl
xor
add
mov
sub
or
xor
xchg
add
mov
pop
inc
adc
cmpsl
rolb
es
sahf
jp
add
cli
lds
lock
push
arpl
dec
mov
mov
test
data16
sbb
pop
add
add
add
inc
icebp
jno
xchg
pop
ret
xchg
lds
push
cmpsl
push
inc
pusha
jb
out
iret
push
adc
cmp
add
imul
das
push
fiadds
xchg
ljmp
aam
cmc
enter
dec
jns
rcrl
push
loope
lret
pop
add
movl
lods
adc
insb
inc
fsubrs
jns
std
lds
add
push
add
add
sahf
rorb
lea
imul
push
sbb
dec
cmp
and
roll
push
add
sbb
add
xchg
dec
inc
fsub
mov
outsl
add
movsb
or
repnz
push
fldl
fs
pop
add
enter
pop
fnstsw
movsb
or
loop
dec
sub
mov
and
movsl
cli
add
and
gs
add
add
xchg
push
pop
lock
mov
lcall
outsl
sub
dec
iret
inc
cmp
lods
add
add
ret
out
mov
repz
movb
fwait
imul
sub
dec
add
xchg
stos
or
add
push
add
outsl
test
adc
call
or
ret
mov
dec
jmp
fucomi
add
mov
inc
insl
mov
inc
mov
fwait
cli
pop
add
cmp
mov
cltd
loopne
outsl
dec
inc
add
sub
xchg
add
inc
push
add
shr
push
add
inc
push
mov
or
jle
aam
jp
roll
add
out
cmpsb
repz
faddl
push
add
push
adc
test
imul
rcl
jl
xchg
mov
add
nop
add
xchg
aaa
or
add
cmpl
mov
outsb
adc
xchg
pop
xchg
fwait
repz
cli
dec
lds
leave
mov
dec
push
add
or
movsb
mov
and
mov
popa
enter
mov
scas
jge
and
fistps
call
lock
fiaddl
enter
mov
pop
sbb
jmp
cmp
dec
add
sbb
xorl
or
add
lahf
inc
push
arpl
adc
js
dec
push
cmp
sbb
add
mov
pop
xor
mov
or
adc
sbb
mov
mov
sbb
jge
pop
add
xor
cmpsb
shl
add
dec
dec
lret
dec
push
mov
pop
dec
fldt
mov
or
lret
jle
in
or
xchg
add
shl
add
mov
sub
or
add
fildl
fisubrs
dec
add
pop
cmp
daa
pop
daa
jle
jl
jl
xchg
add
add
mov
add
in
cmp
gs
push
aam
xor
and
mov
frstor
pop
add
inc
into
dec
loope
adc
mov
loopne
xchg
xor
out
xor
mov
jnp
mov
stc
jle
popa
or
gs
repz
lcall
movl
mov
push
ja
add
outsb
jle
dec
jne
out
cltd
int
push
addr16
inc
add
jle
ret
jae
and
inc
mov
push
insb
push
sub
shll
pop
js
jae
loopne
push
fiadds
stos
aaa
test
inc
mov
pop
or
ret
mov
pop
push
cmp
fs
add
in
xchg
xchg
cmp
add
shrl
pop
out
mov
mov
stos
ret
cmpsl
mov
mov
lret
xchg
mov
ret
push
lea
imul
push
sbb
sbb
adc
in
xchg
cmc
leave
cwtd
add
sub
call
lcall
add
ja
add
add
add
outsb
and
aam
jle
cwtl
push
mov
loopne
or
xor
subl
pop
and
push
js
push
icebp
mov
leave
mov
in
es
add
nop
aas
rcrb
add
std
pop
cmp
es
mov
and
lds
call
mov
dec
bound
add
dec
mov
in
out
add
add
add
mov
add
insl
loopne
cmp
add
test
mov
outsl
add
jae
cmc
rolb
push
add
fs
and
pop
add
lds
pop
push
mov
add
cmpl
jo
dec
movb
dec
les
add
add
cmc
fidivs
jns
and
popf
out
adc
ja
aaa
popl
push
jle
sbb
dec
sbb
add
mov
mov
pop
jne
insl
pusha
test
stc
mov
lret
adc
inc
push
scas
or
jge
dec
das
or
mov
sar
imul
pusha
sub
adc
aaa
cmpsb
mov
add
pusha
ret
or
cmp
shll
add
jl
cmc
aas
mov
movsl
das
push
xor
cltd
enter
and
scas
popa
in
bound
sub
sbb
push
push
add
mov
loope
xor
add
sbbl
add
inc
les
les
mov
xor
xor
adc
dec
add
mov
stos
add
inc
into
aaa
loopne
outsl
and
pop
ja
xchg
cld
xchg
fsubs
nop
jmp
lods
sub
mov
js
addr16
xor
pop
pop
gs
hlt
mov
jbe
or
push
xor
leave
imul
mov
add
and
pop
clc
stos
or
pop
aad
jg
inc
pusha
popf
scas
adc
clc
and
sbb
aas
leave
faddl
popf
iret
sbb
cmp
push
inc
cmp
ljmp
sub
les
pop
jo
fdivrs
sbb
in
lahf
xchg
inc
in
aad
jge
xor
neg
cs
pop
dec
push
jns
xchg
add
inc
sub
push
xor
add
jg
aas
pop
and
add
pop
rcr
aaa
jb
rorb
inc
inc
scas
add
outsl
add
pop
mov
mov
xchg
cmpsl
add
repnz
movl
xchg
test
xor
repnz
jae
popa
cmpsb
or
cli
pop
mov
pop
inc
aaa
add
inc
mov
jl
cli
mov
cmp
mov
mov
rorl
mov
popf
fs
add
test
clc
and
pop
das
aam
pop
add
add
int
add
mov
cmc
and
cmp
fmuls
xchg
lahf
pop
sti
add
sbb
rol
xchg
rorb
mov
ja
or
jle
mov
add
cmpsl
sbb
jl
sub
mov
mov
bound
lods
sub
ret
push
mov
or
repnz
push
jne
jge
adc
fstpt
pop
jb
rorb
enter
lds
cmc
pop
loope
mov
into
jmp
xchg
add
loopne
add
out
add
sbb
divl
inc
in
adc
stos
cmpsb
fcoml
out
mov
ret
xchg
cmp
mov
xlat
add
into
fldl
dec
shl
test
adc
leave
int
pop
mov
pushf
mov
nop
mov
jle
add
add
in
mov
fadd
dec
in
add
int
inc
mov
xchg
jmp
mov
clc
and
mov
pusha
rolb
test
mov
pop
push
add
jmp
repz
test
add
dec
mov
sub
xor
stos
cli
mov
and
dec
inc
clc
add
loope
mov
mov
aaa
add
pusha
cmp
mov
lock
or
test
shlb
add
add
push
fistpll
jne
push
add
pop
add
jle
jle
into
pusha
adc
add
shrl
lock
inc
mov
sahf
popa
add
jp
je
fs
bnd
add
add
fdivl
xchg
and
stos
add
push
xchg
addr16
outsb
gs
add
mov
add
mov
scas
push
pop
ds
test
or
pop
jmp
lea
test
and
mov
pusha
jp
inc
add
lea
jmp
repz
sbb
add
and
cmp
push
shlb
imul
fcomi
add
ja
leave
mov
add
push
dec
add
jne
add
push
jne
int3
add
adc
nop
rcr
inc
and
pop
and
add
xor
leave
je
cwtl
cmp
inc
add
lcall
pop
adc
lods
xchg
pop
inc
push
add
or
add
add
cmp
inc
mov
fcomps
sub
enter
sahf
add
ret
fcmovne
fdivl
testb
movl
add
loopne
lods
add
sub
jle
pusha
jbe
push
dec
mov
pop
xchg
push
leave
mov
inc
mov
aam
ljmp
pop
add
aam
popf
and
adc
jle
pop
shrb
ret
and
movsl
mov
inc
repz
jmp
add
pop
sub
stos
data16
sbb
divb
inc
lods
es
mov
sub
rcl
and
mov
lahf
idiv
aas
push
add
or
testb
mov
adc
bound
inc
inc
fwait
fs
add
imul
push
push
into
enter
aas
add
movl
or
subb
jmp
loope
cmp
jecxz
xchg
xchg
add
and
clc
je
enter
arpl
adc
and
sbb
add
loope
js
andb
movsb
filds
dec
ljmp
dec
gs
mov
or
jnp
lods
add
test
sahf
lret
shlb
cmpsb
add
and
ss
fcoml
leave
mov
jge
xchg
and
add
xchg
mov
loop
jle
imul
and
enter
sti
ret
fisttpll
and
mov
and
aam
xor
mov
in
add
jae
jmp
repnz
xor
sbb
mov
dec
sbb
add
int3
scas
mov
call
add
sub
lahf
add
jmp
add
in
fwait
pop
add
add
or
add
imul
icebp
cmp
lock
add
cmp
sub
sbb
pop
adc
mov
dec
lret
inc
xor
add
adc
int
fs
xchg
mov
mov
add
add
add
aam
xor
add
cmp
daa
add
cwtl
cmpsb
jl
adc
mov
fcomp
mov
repz
xchg
inc
pop
psubsw
mov
cmpsb
jne
add
pop
sbb
cmp
mov
push
scas
ret
mov
mov
inc
pop
add
add
or
push
or
inc
repnz
add
sub
data16
sar
sub
sbb
rorb
push
leave
notl
jae
les
divb
add
shrl
jp
xchg
add
add
pop
insl
add
xchg
subb
iret
into
aaa
jmp
or
xor
in
or
fimull
outsl
xorl
jbe
adc
pop
xor
pushf
das
test
shlb
inc
or
jl
inc
add
and
in
add
test
add
inc
lahf
add
test
les
inc
fucom
add
aad
push
div
xor
xchg
test
add
enter
push
popl
add
cmp
add
pop
add
jle
dec
ss
mov
sub
ret
icebp
jmp
cmp
sbb
sarb
or
xchg
add
add
push
jp
add
shlb
cmp
jnp
mov
pop
iret
daa
test
pop
mov
lds
mov
int3
dec
xor
or
xchg
out
add
sub
filds
cld
out
xor
seta
jne
xor
in
sbb
jecxz
add
push
or
sbb
mov
nop
add
cmp
fldt
repz
add
xchg
add
mov
fisubrs
int
lcall
xchg
mov
adc
jbe
jb
insl
xor
dec
ja
sub
xchg
push
pop
jmp
leave
fwait
insl
jbe
add
out
addb
and
subl
filds
push
inc
add
stc
test
aaa
add
sbb
out
add
sub
xchg
outsl
pop
loopne
add
adc
scas
push
jg
ficoms
sub
frstor
xchg
jecxz
in
cmp
cli
add
pushl
adc
out
cmpsl
add
adc
out
fisubs
pop
mov
cmpsb
mov
xor
jbe
cmc
je
fistl
loopne
mov
jno
aas
sbb
adc
and
test
repz
mov
and
test
inc
bound
test
jne
stos
cmc
sbb
add
lock
push
les
frstor
outsl
lock
jg
outsb
movsl
push
outsl
sbbb
stc
fisubrl
stos
lods
dec
mov
data16
cmp
bound
adc
cld
popf
scas
dec
dec
ficompl
add
shll
movsl
dec
arpl
mov
inc
test
aad
add
andb
data16
and
xchg
iret
add
stos
movsl
int
adc
inc
in
add
cmc
cmc
or
cs
inc
push
je
lahf
icebp
mov
or
testl
xor
loope
scas
pop
decl
aam
dec
add
add
iret
pop
mov
add
and
mov
or
mov
sub
daa
test
loope
js
push
add
and
adc
sub
xchg
add
rolb
dec
outsb
dec
shrl
push
xor
adc
jl
sub
mov
adc
mov
add
es
dec
pop
lea
add
sub
xchg
nop
scas
or
mov
inc
outsb
mov
rorl
xchg
mov
stc
sbb
insl
je
add
xchg
mov
mov
jl
add
imul
incw
es
add
stc
movsb
pop
xor
mov
decb
mov
push
lea
add
sbb
cwtl
movsb
mov
dec
dec
out
dec
loop
mov
fstpl
add
stc
cmp
mov
rcrb
sti
add
lret
lahf
push
jmp
sti
sahf
push
xor
stos
cmp
inc
or
mov
outsl
dec
jae
inc
xchg
mov
pop
fldl
sti
jecxz
imul
push
jns
push
pop
jnp
dec
and
jnp
sub
je
mov
add
xor
mov
mov
cmp
adc
stos
add
pop
test
mov
std
add
add
aaa
rol
mov
test
aam
sbb
leave
jbe
cmpsb
add
inc
pushf
subb
and
or
test
mov
mov
out
imulb
push
cltd
xlat
in
mov
std
pop
loope
cltd
push
cmpl
stos
sub
dec
repnz
pop
add
inc
xchg
mov
or
or
mov
pop
rcrl
cmp
testb
aaa
pop
addr16
stos
add
add
pop
fs
xchg
push
push
adc
xchg
rolb
sbb
or
add
sti
mov
mov
xlat
or
in
fs
enter
leave
movsl
loopne
ficompl
mov
push
jmp
stc
xor
shlb
xor
adc
jnp
push
outsb
add
add
jno
ljmp
mov
add
in
dec
pop
xlat
add
std
mov
add
sub
dec
add
jmp
js
pop
or
mov
mov
dec
mov
enter
faddl
add
or
mov
add
xor
shr
popf
push
dec
push
pop
subb
aas
add
xchg
fwait
mov
std
add
mov
inc
out
fisttpll
cmp
pop
mov
add
icebp
fsubl
dec
xchg
xchg
outsb
add
add
add
out
and
ja
sub
xchg
aaa
add
mov
sbb
rcrl
push
pop
arpl
xchg
adc
pop
jge
jo
add
and
in
sbb
sbb
shr
xchg
add
mov
rclb
aad
cld
ss
sti
test
fwait
lds
inc
adc
loop
mov
cmp
pop
in
lods
cs
add
stc
pop
xchg
push
mov
rorb
in
in
dec
add
adc
add
or
gs
jl
add
cmp
adc
jo
push
add
add
sbb
pop
dec
repnz
xor
jp
xchg
fwait
mov
add
adc
and
in
add
int3
orb
movsl
pop
add
arpl
daa
add
arpl
push
test
add
jge
les
sahf
mov
in
inc
sti
stos
xor
add
add
pop
insl
lret
jg
in
lock
or
push
jo
cli
cltd
orb
cmp
mov
xlat
test
fs
xlat
xor
xchg
incl
test
add
mov
dec
xor
add
sub
push
arpl
les
cld
pop
jle
mov
mov
add
mov
pop
sbb
into
testl
sbbb
push
sahf
imul
out
cmp
mov
mov
sti
sti
add
sbb
out
imul
arpl
stos
inc
jbe
test
jl
movsl
imul
adc
fwait
jl
or
sub
add
or
out
pushf
add
int
xchg
push
fsubs
xchg
dec
into
pop
add
mov
add
cmc
add
pop
jmp
addb
mov
adcb
jp
xor
add
in
enter
mov
imul
and
movsl
lcall
out
arpl
cmpsl
cwtl
or
push
int3
or
xchg
inc
mov
add
add
iret
int
std
stos
dec
or
movsl
loop
jnp
iret
sub
fs
insb
mov
add
data16
sub
fiaddl
aam
mov
xchg
dec
imul
popf
dec
scas
dec
add
sub
inc
pop
imul
lahf
pop
icebp
lret
mov
ja
jge
in
add
insl
jecxz
jecxz
pop
lock
inc
pop
jle
mov
out
push
jnp
cmpsl
add
out
or
shlb
pop
mov
fsubrs
leave
push
xchg
push
hlt
push
inc
add
mov
fnstcw
and
movzwl
jns
or
mov
add
mov
add
cli
add
add
in
xor
nop
add
dec
mov
xchg
popa
sbb
sahf
movsb
add
mov
loop
add
int3
fwait
mov
jecxz
out
aad
aad
lahf
aam
in
jmp
and
aad
sbb
scas
stc
lock
jns,pt
scas
adc
test
xor
out
add
lahf
test
test
aad
clc
add
mov
lret
add
xor
and
jle
call
repnz
and
test
loop
jle
mov
sti
mov
jmp
jnp
inc
xor
xchg
add
int3
add
clc
xor
add
repnz
adc
xor
imul
add
inc
fmuls
aam
and
in
add
inc
jge
sbb
xchg
adcb
ss
pop
cli
cmpsl
add
test
jbe
add
add
cmp
ljmp
sahf
mov
mov
repz
repnz
xchg
jecxz
xchg
filds
leave
shll
ss
adc
lea
lahf
cmp
xchg
out
add
inc
xchg
gs
add
mov
adc
fistpll
in
cmpsl
fiadds
leave
push
lret
roll
add
ljmp
cmp
add
dec
or
sub
jecxz
push
mov
add
inc
xorb
mov
sbb
add
mov
mov
add
bound
aad
and
in
ret
sahf
clc
es
add
xchg
sahf
in
mov
jns
call
lods
jmp
xor
jge
pop
jb
enter
push
jo
and
push
sahf
flds
sub
pop
subb
jo
or
cltd
add
leave
mov
je,pt
mov
fimull
dec
dec
and
jl
sub
dec
lahf
add
daa
jae
mov
sub
push
lcall
mov
jmp
ljmp
add
leave
adc
add
loope
xchg
add
sbb
fisttps
fisttps
data16
mov
dec
insl
aam
add
jg
ret
jg
mov
dec
cwtl
fisttps
sbb
movsl
push
inc
mov
xor
sbb
gs
popf
sub
or
push
dec
dec
bound
pop
not
or
loopne
add
pop
add
and
add
sub
or
adc
add
inc
fcompl
add
daa
int3
xor
daa
insb
pusha
mov
add
in
add
push
lock
out
out
jno
enter
sub
mov
sahf
add
push
les
cmovae
cld
call
lahf
fsubs
rep
adc
movsl
or
push
xor
out
add
add
add
loopne
xor
in
jne
add
jne
lea
test
mov
pop
add
jle
jle
fwait
out
adcb
mov
rolb
in
inc
add
enter
jmp
imul
add
cwtl
cmpsl
call
jno
sbb
hlt
out
adc
test
data16
movsl
aaa
xchg
push
jle
add
push
or
inc
dec
add
mov
add
xor
inc
add
pop
mov
add
test
mov
pop
pop
add
sbb
jae
lret
sbb
add
ss
dec
adc
adc
pop
and
mov
cmp
cli
sub
xchg
lahf
inc
nop
inc
test
add
pop
cmp
pushf
add
faddl
mov
lods
xchg
xchg
cmp
sub
xor
xor
mov
push
sub
inc
add
xor
mov
sub
icebp
jae
add
in
or
adc
mov
je
add
js
lock
loope
cs
mov
jmp
aas
hlt
daa
jge
xchg
sub
fnstsw
je
cmp
xchg
adc
imul
repz
jecxz
or
xchg
add
cmp
std
incl
stos
xor
add
int
lcall
push
movsb
add
das
shrb
pop
inc
lret
testl
iret
stos
xor
out
xor
mov
xchg
xchg
sub
add
sub
mov
push
ror
add
push
je
mov
lret
push
loop
mov
mov
jae
inc
sbb
add
les
add
shl
data16
add
cmp
inc
jmp
shrl
inc
call
stc
mov
fs
mov
push
out
inc
movsb
add
out
int3
es
xor
push
add
insb
js
pushf
mov
and
mov
out
enter
xchg
mov
into
add
xchg
pop
xchg
inc
addb
scas
xlat
fnstenv
and
cmp
push
pop
stc
xchg
repz
xor
xor
jmp
loope
push
lods
add
sub
scas
or
and
inc
add
imul
fwait
add
xor
popa
add
cli
aas
push
iret
lea
add
add
incb
cli
pop
push
addb
in
dec
or
add
mov
scas
cmpsb
out
and
dec
jbe
cmpsl
loop
cmp
and
add
push
sub
in
add
xor
mov
sub
inc
push
std
add
in
aaa
lea
nop
cmp
shlb
inc
mov
int3
and
mov
cli
fidivl
outsb
cwtl
sub
aaa
sbb
pop
bound
in
sub
test
inc
sub
dec
xor
pop
dec
add
pop
mov
jg
in
out
or
add
rcll
stos
add
dec
sahf
pop
ffreep
and
mov
adc
mov
in
mov
jg
pop
int
and
adc
or
add
add
pushf
cmpsl
add
adc
jne
mov
cmc
xchg
insl
add
in
addr16
fs
add
add
daa
imul
sti
jbe
fidivl
sub
imul
mov
push
add
fistl
pop
mov
add
jns
movsl
and
lret
mov
jmp
loope
stc
xor
add
roll
add
into
or
daa
pusha
jl
iret
sbb
testl
into
scas
inc
repnz
inc
cmp
mov
add
sar
and
add
add
add
xchg
into
in
jae
movsb
sbbb
inc
add
adc
add
cltd
enter
in
add
loopne
adc
popf
sbbb
cmp
movsl
sbb
in
sub
pop
xchg
cmp
jl
popl
loop
dec
mov
out
mov
jno
and
nop
int3
jnp
test
add
data16
mov
call
pop
mov
xchg
sarb
sbb
sbb
outsl
mov
add
stos
sub
lea
out
shl
xchg
jg
mov
or
xchg
xchg
testb
add
dec
xchg
mov
fstl
jecxz
mov
in
fiaddl
dec
pop
add
faddl
add
js
pushf
cs
jbe
icebp
sti
xchg
jb
test
sbb
adc
mov
lret
mov
cmpl
lret
pop
inc
lret
add
inc
lret
ljmpw
fwait
roll
das
or
or
out
or
cmp
add
arpl
loopne
add
push
xchg
pop
sbb
cmp
sbbb
das
cltd
jmp
les
outsl
outsl
fidivrl
pop
cmp
add
addb
roll
outsl
mov
add
subb
mov
int
clc
xor
fldenv
add
and
testb
fstpt
push
filds
divb
push
jne
pop
mov
mov
mov
fildl
and
cmc
xchg
mov
jge
ss
je
add
jnp
add
jnp
imul
sbb
pusha
hlt
cmpsb
out
xchg
add
scas
mov
xor
xor
cmpb
sbb
mov
mov
fcomps
add
mov
add
sub
pop
or
cmp
pop
jmp
pusha
jb
dec
and
outsl
mov
mov
fdivrp
adc
fiadds
push
dec
jmp
dec
sbb
or
mov
ret
ret
pop
jmp
jbe
pop
mov
add
and
add
add
or
popf
mov
or
push
xchg
mov
inc
sbb
or
cmpsl
sub
divb
mov
sub
add
inc
shlb
testb
add
sub
lret
ror
ss
loop
mov
repnz
fnstcw
imul
shr
xor
std
sarb
mov
xchg
mov
repz
cmc
popf
or
jecxz
fadds
dec
call
or
or
add
js
loopne
dec
mov
mov
adc
shlb
addr16
cltd
sti
add
jg
cltd
add
add
das
in
fwait
push
add
xor
add
or
sub
cmp
mov
test
int
add
fidivrl
xchg
mov
sub
jp
sbb
add
cmp
pop
pop
pop
roll
mov
add
add
push
mov
mov
sbbb
mov
add
insb
add
test
jle
cmp
popf
or
cmp
mov
leave
shll
jbe
lock
push
out
add
sub
add
lods
mov
mov
pop
add
movsb
mov
ret
add
add
add
notl
add
cmpsl
idivl
jecxz
mov
arpl
pop
pushf
and
inc
outsl
add
rcrb
mov
add
xchg
mov
mov
push
sub
mov
js
jb
mov
push
inc
jno
sub
rolb
push
or
mov
push
sbb
add
cld
jmp
sbbb
pop
cmp
jns
add
insl
addl
and
pop
cld
xchg
ret
xor
mov
imul
bound
add
sbb
pop
jno
mov
lock
sub
fistl
test
lcall
scas
inc
add
iret
mov
or
ficompl
add
adc
add
xorb
mov
hlt
jbe
inc
xchg
clts
int
ja
add
lds
subb
sbb
cmp
lods
andl
add
fcom
mov
dec
mov
sbb
int3
aam
pop
add
cli
lods
and
pop
movsl
jb,pn
mov
incb
pushf
or
dec
mov
dec
jb
mov
scas
adc
inc
push
stc
and
std
sbb
mov
inc
inc
sbb
jp
push
xchg
jno
and
xor
add
call
vpsrld
loopne
popa
stc
add
mov
loope
cmc
out
or
lret
aam
retw
xorl
in
push
add
dec
mov
out
add
mov
add
sub
imul
and
mov
sbb
sbb
add
mov
pop
push
je
pop
je
hlt
sbb
cli
lds
xchg
stos
add
das
cwtl
lcall
lahf
mov
jns
mov
pop
int3
ds
add
shrb
dec
add
mov
scas
add
cmp
pop
pop
stos
out
scas
cmp
and
sub
dec
add
push
sbb
push
add
inc
add
cmp
add
jg
add
add
xor
sti
pop
insb
add
sub
push
lods
mov
adc
or
inc
add
add
cmpsb
cmp
add
movsl
xlat
add
or
push
jp
inc
ljmp
jg
into
aad
push
sbb
add
jp
mov
xor
add
jae
sti
jo
mov
fldl
icebp
add
fstl
mov
jns
jae
daa
add
mov
lods
shll
sbb
lahf
cli
add
add
push
and
pop
adc
adc
jecxz
inc
fscale
les
popa
push
push
out
and
add
imul
sub
es
xchg
inc
out
imul
arpl
add
out
in
int
mov
in
add
inc
add
or
pushf
add
jge
dec
add
jmp
dec
cmp
sub
incb
push
push
imul
mov
lahf
cmp
outsl
mov
push
cmpsl
jmp
inc
mov
mov
aad
and
ja
insb
ret
jecxz
lods
dec
mov
mov
sbb
dec
add
mov
push
sbb
ja,pt
inc
inc
mov
xchg
lods
mov
jl
std
add
jbe
lods
jb
dec
sub
inc
mov
inc
pop
cltd
pop
verw
out
repnz
lret
push
rclb
and
sahf
sbb
les
mov
test
test
and
xor
stos
cli
jmp
xchg
insl
push
fisubrl
out
adc
in
rcr
repz
pop
das
pop
test
pop
test
xor
sbb
add
inc
fisttpll
sub
jne
test
lock
pop
or
and
cmpsb
add
loopne
jnp
insl
sbb
push
mov
push
jle
or
pop
add
test
and
femms
adc
cmpsl
lcall
mov
mov
cwtl
add
int
or
inc
popa
popa
in
jnp
dec
roll
cltd
adc
pop
adc
flds
mov
sub
inc
add
jmp
shll
push
add
jnp
mov
icebp
or
aas
rorl
cmp
push
add
lods
inc
pop
mov
fsubl
or
aam
nop
adc
sti
push
mov
imul
movsl
cmp
jg
popf
pop
jmp
or
add
imul
or
test
rcll
sub
jecxz
inc
dec
xchg
jb
adc
cmc
add
and
ljmp
pop
enter
sub
inc
mov
lods
xchg
lcall
fadds
mov
add
pusha
fcoml
pop
les
iret
xor
add
insb
cmp
pop
add
and
inc
mov
rolb
les
mov
scas
in
lods
inc
ret
add
add
add
sub
xor
sub
icebp
xor
add
aas
add
xor
jmp
test
out
inc
data16
ret
arpl
fwait
pop
orb
and
ja
mov
cmp
xor
or
pop
inc
xchg
and
sbb
outsl
add
add
outsb
add
scas
mov
jmp
insb
fiaddl
cmp
movsl
ret
add
xor
mull
out
arpl
or
sub
dec
push
pop
in
movsl
and
cld
jae
add
inc
inc
les
pop
popa
pop
adc
mov
push
dec
add
out
sub
push
cltd
cs
and
adcl
lods
adc
pop
mov
shlb
add
add
fwait
popa
call
jl
bound
mov
loopne
cmp
xor
mov
cmp
fdivs
fldl
cmp
jg
add
jnp
push
imul
sub
mov
bound
add
add
fs
flds
inc
sti
dec
jg
mov
pop
cvtdq2ps
fcoml
lret
or
xchg
mov
lret
adc
dec
in
and
hlt
mov
inc
jl
add
dec
push
int3
rclb
add
inc
jnp
adc
idivl
adcl
xchg
jg
add
add
add
setae
xchg
pop
inc
add
mov
mov
mov
fucomi
xchg
xor
mov
mov
lods
ja
lock
xor
mov
movsb
shl
call
jmp
pop
imul
add
xor
fldcw
push
adc
outsl
add
jmp
adc
add
ljmp
les
xlat
pop
or
pmulhuw
push
add
sbb
sbb
test
das
jne
jecxz
sub
xlat
jle
jne
sbb
mov
xchg
imul
xchg
jns
xor
fidivrs
add
fisubrs
jp
rorl
data16
fdivs
or
add
mov
add
push
aaa
xor
das
jae
std
add
xchg
add
pop
je
imul
xchg
mov
test
jns
add
sbb
inc
mov
movsl
js
add
iret
jp
mov
aad
add
jnp
mov
hlt
fiadds
add
in
xor
push
add
push
push
xor
add
into
jnp
imul
add
arpl
mov
fadd
push
push
lds
daa
adc
cmp
je
xlat
pop
push
dec
inc
push
ret
iret
lods
mov
imul
insl
dec
ficomps
sbb
mov
gs
adc
movl
ds
mov
jne
xchg
sbbl
add
loopne
ret
pop
cmp
xor
push
addr16
imul
fs
ds
stos
jo
out
jo
pop
cmpsl
sub
pop
leave
shll
pop
aaa
popl
push
jb
rolb
push
cmp
scas
cli
or
std
jmp
jne
xchg
sub
add
rolb
xchg
xor
daa
sarl
sub
push
dec
push
and
pusha
add
add
and
adc
mov
dec
cmpsl
add
mov
aam
xlat
add
add
mov
push
shl
add
mov
shl
fsubl
and
sbb
jmp
addr16
fildl
nop
mov
pushf
add
sahf
push
mov
or
xor
or
fst
add
scas
push
pusha
dec
inc
rcrl
jp
sub
movsl
mov
mov
lds
ss
addb
movntq
scas
adc
loopne
out
push
sub
cld
int
dec
aas
jmp
adc
mov
rclb
add
mov
inc
ljmp
fbld
ja
mov
jg
add
insb
dec
cmc
inc
xchg
pop
mov
mov
sub
mov
imul
or
jo
push
mov
mov
add
sub
pop
mov
mov
orl
add
fdivl
lcall
add
leave
xchg
inc
test
pusha
add
addl
test
add
add
pop
andb
movsl
int
add
addr16
mov
inc
mov
lock
ljmp
mov
xchg
daa
fiaddl
aas
add
xchg
add
add
mov
inc
or
jecxz
stos
cmp
add
or
imul
pop
mov
cmp
int3
outsl
pop
mov
mov
push
add
add
jp
cwtl
not
xchg
jae
dec
add
stos
push
out
popa
and
hlt
pop
sub
sbb
adc
dec
or
add
add
dec
cmp
outsb
inc
addr16
dec
ljmpw
sahf
dec
enter
push
enter
ja
test
mov
shlb
fldl
outsb
mov
push
scas
mov
pop
mov
fnstenv
add
lcall
add
add
push
add
mov
les
out
mov
add
and
clc
fadd
lret
mov
ljmp
lea
pushf
lods
add
and
dec
lds
pop
xor
cmp
xchg
lock
pop
imul
ljmp
jo
add
icebp
lods
nop
stc
inc
lods
add
jb
scas
add
push
sbb
add
jge
mov
outsb
cmc
inc
add
loopne
sub
mov
pop
push
pop
cli
push
add
add
jle
xchg
aam
inc
dec
das
dec
aad
adc
or
lcall
push
fcompl
pop
dec
pop
inc
mov
lods
xchg
push
or
out
add
cmp
bound
push
add
sbb
lods
add
popl
filds
lds
jno
clc
jae
call
imulb
and
or
xchg
nop
adc
mov
into
lods
fidivs
add
add
cmpsb
test
jp
sahf
repnz
outsb
mov
je
sarb
loopne
mov
jg
or
aas
jae
adc
xor
movsb
fldcw
ljmp
inc
ret
jne
or
mov
mov
aam
test
inc
or
mov
iret
in
outsl
xchg
and
mov
out
fxch
dec
mov
pusha
jmp
ljmp
jnp
pop
add
add
nop
data16
pop
clc
leave
mov
add
or
movsb
xlat
mov
in
in
inc
cmpsb
push
sub
arpl
add
aaa
push
add
pushf
jle
xor
add
test
adc
pop
sub
adc
inc
inc
jbe
add
xor
xor
loope
test
sub
dec
cmc
push
push
clc
or
push
out
mov
cmp
add
ljmp
repz
loop
loope
or
add
rolb
and
cmp
daa
push
push
xchg
mov
lret
mov
pop
sub
xor
lret
mov
insl
adc
aaa
js
dec
mov
xor
dec
loopne
daa
sbb
pop
dec
and
out
push
out
dec
out
pop
push
dec
ss
out
or
pop
dec
ret
pop
addb
cmp
inc
fwait
pop
xchg
lcall
lahf
add
insl
add
xor
movb
sarb
and
mov
xchg
adc
out
repz
insb
test
add
xchg
sbb
mov
and
push
mov
insb
loopne
pop
jns
and
xchg
pop
sbb
into
pop
fnstsw
repz
jno
das
add
add
fcomps
shld
jb
push
adc
and
add
aad
jge
sbb
add
sbb
ret
sti
mov
dec
inc
clc
push
iret
les
mov
sbb
subb
cmp
loopne
adc
movl
pushf
mov
scas
xor
cwtl
mov
sbb
dec
lea
clc
xchg
cmp
add
inc
in
mov
add
add
add
push
add
bound
repnz
push
cmpl
or
ja,pn
out
pop
out
pop
addb
call
add
mov
mov
xchg
pop
icebp
inc
jo
insb
push
push
or
test
lcall
add
jb
loope
cwtl
lock
sub
jecxz
loop
add
xor
push
xchg
mov
or
lret
psubb
mov
mov
int3
xchg
insl
cli
push
add
decb
add
scas
cli
and
add
jecxz
sarl
xchg
jg
out
call
xchg
imul
add
out
sub
jp
loopne
xchg
icebp
das
out
mov
push
jnp
xchg
mov
ja
je
cmp
js
lds
sub
inc
or
jno
add
cmp
jl
popf
shlb
add
xor
fisttpll
inc
and
jecxz
leave
push
repnz
lret
mov
mov
mov
repz
into
or
xchg
addb
add
int3
cmc
push
inc
add
ficompl
sbb
addl
dec
cmp
mov
jae
adc
pop
sahf
add
push
movsb
add
aam
sbb
add
jp
inc
dec
xchg
stos
lods
cmp
cmp
or
bound
lods
test
clc
jo
xorl
push
into
mov
leave
movsl
xchg
xchg
mov
mov
ds
ret
inc
pop
sbb
xchg
or
aad
popf
js
adc
or
pushf
lahf
xchg
scas
mov
mov
sbb
out
faddp
stos
push
jge
push
gs
sub
push
mov
pop
dec
sub
pop
or
lcall
adc
pop
addb
add
add
cmp
daa
pop
test
sbb
lods
insb
enter
sub
hlt
jge
lea
jno
cmc
repnz
add
stc
inc
pop
cmp
sbbb
sub
test
jno,pn
mov
inc
faddl
insl
shr
ficomps
push
xor
xor
lds
mov
data16
andb
aas
jns
fldenv
adc
scas
int3
add
adc
cmp
or
sub
idiv
sahf
xchg
test
andl
enter
outsl
sbb
icebp
xchg
jo
sbb
push
dec
jo
sbb
and
xchg
push
sub
or
out
dec
aas
jo
aad
loopne
add
jmp
push
and
ret
cltd
cmpb
sbb
mov
xor
ficoml
lcall
lock
str
inc
dec
int3
adc
push
add
mov
xchg
sahf
add
lock
jne
insb
cmp
push
add
add
add
xor
mov
xchg
flds
loop
fadd
fmuls
test
mov
cltd
add
add
lock
jne
in
sti
icebp
add
andb
fwait
bound
dec
nop
add
rol
add
add
mov
push
adc
add
mov
test
pusha
in
jecxz
push
or
mov
jmp
jnp
xor
mov
push
and
push
shlb
or
sbb
pop
jbe
cltd
push
jg
sub
pop
dec
add
movsl
inc
and
movsb
push
inc
xchg
jge
sub
and
stos
dec
ret
cmp
stos
add
movb
xor
pop
push
or
test
add
jecxz
push
rcr
inc
pop
lods
pop
in
inc
push
in
and
out
mov
xor
dec
sbb
mov
inc
add
mov
fadds
imul
pop
lcall
arpl
push
bound
fldl
sahf
out
bound
xchg
mov
and
xchg
mov
aas
mov
cmc
fucomi
jecxz
pop
sbb
add
sbb
adc
int3
sub
mov
std
mov
add
fdivrp
cmp
add
aaa
xchg
loope
mov
jne
cmp
aam
aam
sahf
add
adc
aaa
and
sbb
add
xchg
xor
test
xchg
sar
cmpsl
mov
stc
jns
add
aaa
xchg
xor
sub
xchg
repnz
jae
cmpsb
add
inc
mov
pop
mov
test
sub
and
clc
mov
js
and
mov
add
sbb
nop
mov
lods
add
and
jbe
inc
testb
jmp
or
sbb
add
add
sbb
cmpsb
jmp
into
icebp
and
adc
shll
mul
jo
nop
pop
je
inc
add
push
dec
jmp
add
add
aad
xchg
add
verr
add
pop
std
fcmovnbe
mov
sub
call
add
or
sub
ret
das
sbb
insl
sub
jnp
out
cs
and
mov
cmp
and
add
add
mov
movsl
das
daa
or
sub
pop
popl
adcb
dec
dec
ret
rolb
shl
add
imul
xor
mov
and
xchg
arpl
addb
mov
stc
lret
aam
and
add
into
jae
sbb
adc
imul
add
jmp
fldl
out
xacquire
outsb
mov
add
fs
add
pushw
add
out
fldcw
inc
pop
stos
mov
std
fsubl
cmc
std
outsl
into
shlb
in
add
sbb
mov
add
jbe
dec
xchg
repnz
aam
xlat
adc
cmp
aam
std
mov
add
data16
xchg
adc
int3
push
fnstsw
pop
call
xchg
add
sub
xchg
aas
shll
add
add
fs
test
mov
xor
nop
movsb
out
cltd
xchg
pusha
add
iret
mov
push
std
add
roll
and
add
aas
sti
cmpsb
in
xorl
jp
pop
lcall
push
sub
add
pop
pusha
js
sub
add
mov
cmp
add
sbb
jge
jae
scas
sub
add
add
and
fdiv
add
jecxz
dec
inc
adc
subb
push
imul
lret
js
adc
fnsave
sbb
inc
imul
sub
xor
lcall
xchg
jge
and
inc
aam
pop
add
inc
je
fnstsw
sarb
add
add
mov
out
dec
icebp
dec
jne
push
jb
inc
push
mov
or
ret
pop
dec
sbb
jecxz
inc
lea
es
add
je
add
scas
popa
cmp
test
cmp
test
loop
loop
add
push
push
in
add
lea
add
enter
xor
lock
mov
sub
push
sbb
xlat
icebp
sub
add
pop
cld
daa
cmpsl
insb
push
dec
roll
adc
push
add
add
cs
add
dec
add
mov
test
or
test
pop
mov
adc
iret
sbb
jne
add
push
fstpl
pop
dec
jecxz
add
xor
jb
das
repnz
or
lods
cmpsl
mov
adc
xor
fildl
gs
int
dec
ret
icebp
jae
stc
cmpsl
jg
repnz
cmp
test
jecxz
xor
bound
out
sbb
mulb
add
insl
mov
imulb
cmp
and
jbe
movsl
test
hlt
les
mov
pop
add
movsb
insl
adc
outsb
jmp
enter
or
fcomps
pop
imul
sbb
mov
rclb
iret
add
lea
shrb
mov
into
add
cmp
push
pop
add
gs
jo
leave
ja
sahf
add
and
add
xchg
ljmp
sahf
add
xlat
push
bound
push
jl
daa
movsb
add
inc
sbb
add
cmp
mov
jmp
mov
outsb
xorb
jl
add
add
ljmp
add
add
rorb
push
leave
fs
and
adc
xchg
push
sub
mov
add
rcr
add
xor
sub
daa
popf
or
xchg
add
sbbl
unpckhps
mov
ffreep
mov
xchg
aam
mov
jg
test
ret
cmp
add
sbb
add
int
mov
mov
adc
loopne
aam
xor
cmp
jmp
dec
ljmp
xor
xor
popa
fdivr
leave
add
add
das
jne
push
cli
je
add
push
add
jns
mov
or
das
sbb
shr
fdivs
out
outsb
mov
add
shrl
fisttpll
push
daa
add
int
add
mov
notl
fwait
mov
add
xchg
mov
push
jmp
add
mov
jnp
daa
mov
sti
call
jno
add
cmp
mov
xor
insl
dec
add
lock
dec
add
data16
data16
repz
cli
xchg
pop
or
or
xor
add
hlt
add
popa
push
mov
jg
mov
add
dec
adc
rcrl
dec
ss
push
add
add
inc
mov
push
push
xchg
jp
mov
call
xlat
add
push
addr16
mov
cmp
mov
mov
sub
mov
lods
push
mov
push
add
add
pop
jge
xlat
out
in
push
lret
sti
xchg
bound
fcmovb
mov
inc
jge
hlt
cli
fsubrl
sbb
mov
xchg
js
or
xor
ror
mov
adc
in
mov
test
das
mov
xchg
sub
add
loop
ljmp
out
jo
adc
xchg
and
cmpsl
add
add
movsb
or
in
dec
xchg
ret
sub
imul
loopne
adc
inc
les
xor
xor
jmp
add
gs
add
cmp
add
repnz
adc
mov
fistl
test
push
dec
mov
xchg
fiaddl
mov
add
inc
cmp
cmp
inc
mov
mov
stos
add
sbb
xchg
sub
lahf
arpl
ss
inc
daa
std
add
test
cmp
inc
adc
test
icebp
in
mov
aas
leave
add
pop
jnp
and
sub
mov
xchg
insb
and
lret
cli
lods
cmpsb
add
sar
insl
cltd
scas
movl
insb
add
add
cltd
add
shl
sub
test
shrl
pop
and
pop
and
sub
fwait
add
cmp
cmpsl
sub
ljmp
mov
fcompl
mov
shl
mov
add
dec
mov
std
int3
cmp
sub
add
stos
add
xorb
add
shrl
enter
sar
xor
ret
sahf
dec
sbb
xchg
sub
xchg
xor
mov
inc
inc
stos
adc
scas
addb
cmpsb
add
mov
add
xchg
cmp
xchg
aad
in
push
lcall
fdiv
jns
xchg
sbb
incb
push
cmpsl
inc
test
add
dec
insb
xchg
push
inc
sbb
push
in
sbb
repz
adc
jno
pop
adc
add
add
mov
icebp
mov
int
ret
add
add
fidivrs
jl
pop
xor
add
dec
outsb
scas
fucomip
sub
mov
dec
scas
mov
hlt
test
xor
addr16
inc
scas
fwait
pop
dec
sti
dec
xor
xlat
cld
add
fcomps
push
add
add
outsl
enter
add
add
jg
xchg
add
adc
test
and
test
mov
xchg
add
lods
aaa
in
pop
lahf
mov
sub
dec
movsb
push
aad
dec
add
mov
data16
mov
lret
int3
dec
in
add
je
add
enter
add
add
mov
in
or
pop
sbb
outsb
adc
or
add
aad
icebp
dec
add
push
and
int
fisubrl
fidivl
loope
enter
bound
cld
add
cltd
add
inc
mov
push
inc
add
pop
sbb
pop
sub
fiaddl
xchg
inc
mov
movsb
xlat
mov
lds
add
js
sub
mov
mov
jmp
jmp
or
insb
scas
enter
shlb
xor
add
cmp
negb
sub
sahf
inc
cld
pop
jb
out
pop
sub
shrb
and
inc
add
js
add
fisubrs
shl
std
ret
adc
into
add
xchg
or
cwtl
rolb
mov
inc
jmp
add
mov
push
cmc
rcll
adc
rcrb
imul
mov
add
add
push
mov
jp
pop
rcrl
sarb
add
and
push
pop
filds
mov
fisttps
push
add
adc
add
add
push
fsubr
add
sbb
mov
add
or
push
pop
pop
add
fcmove
ret
or
add
insb
pop
hlt
gs
and
repnz
dec
mov
add
cmp
stos
stos
add
add
int
insb
clc
add
cmp
incl
bound
sti
jns
or
hlt
xchg
enter
loop
repz
fldl
insb
push
dec
add
inc
movsl
lret
ret
add
je
lea
adc
sbbb
add
cld
mov
aas
and
xchg
xor
add
mov
xchg
inc
pop
cmp
movswl
add
mov
gs
or
xchg
mov
add
shll
jo
sti
add
ja
mov
cld
or
or
fstpt
add
add
add
and
orl
add
rolb
out
mov
addb
add
add
cmp
subb
or
and
mov
and
jnp
imul
and
and
stos
aaa
cmp
push
movsb
mov
add
add
arpl
ret
inc
lods
xchg
add
movsl
call
jecxz
sbbb
test
aas
roll
imul
lock
and
add
cld
es
xchg
std
rolb
loope
adc
repz
out
xchg
sti
lcall
int3
add
lret
jno
pop
add
in
sbb
add
add
cwtl
and
js
push
push
test
mov
add
dec
add
movsb
or
or
ljmp
add
sub
imul
loope
dec
mov
mov
xor
push
push
jmp
pop
push
xchg
add
ret
add
data16
inc
jecxz
fstpt
jmp
xchg
xchg
pop
sub
add
mov
out
ret
add
std
es
jb
push
cmovne
repnz
xchg
dec
in
je
sbb
add
lea
shll
sub
jl
cwtl
divb
add
les
repz
fcoml
inc
pushf
sbb
mov
push
in
mov
insb
jle
adc
add
mov
dec
mov
xor
jb
pop
adc
push
inc
xor
cmp
cmp
push
sub
and
or
add
or
and
fldlg2
inc
jecxz
sub
popa
push
or
cwtl
pop
sub
mov
add
xor
leave
lcall
leave
or
movsl
shlb
lds
pop
and
das
pop
mov
inc
je
insl
add
xor
int3
push
lds
add
lea
dec
hlt
mov
in
imul
filds
mov
xchg
test
out
insb
ficoms
stos
jmp
shrl
dec
rolb
add
shll
inc
cs
cmpxchg
arpl
es
sub
push
cltd
movsb
jns
outsl
incl
jmp
or
xor
push
add
repnz
ret
mov
add
sbb
add
pop
loope
sub
add
push
and
sbb
sub
sub
das
hlt
dec
aas
lock
or
xchg
hlt
rcll
pushf
add
push
push
xor
movsl
add
add
movsl
std
sbb
add
test
std
stos
lahf
add
jge
xchg
add
xor
mov
add
add
lcall
shlb
jp
xor
add
jns
icebp
pop
inc
aaa
lret
xchg
add
mov
repnz
std
cmp
mov
cld
push
or
out
aam
add
cmpsl
jge
lock
xor
mov
fs
inc
xchg
addl
testl
add
xor
adcl
mov
xor
stos
sbb
cmp
xor
inc
adc
lds
xchg
add
dec
inc
add
lea
test
outsb
or
push
cmpsb
pop
daa
or
push
stos
add
lods
jno
or
pop
inc
sbb
adc
cmp
xorl
bswap
xchg
xor
add
cmpsb
into
lods
jns
jmp
movsl
pop
pop
adc
push
sbb
add
dec
mov
add
mov
mov
xchg
out
add
mov
or
in
pop
bound
push
cmp
xor
add
add
dec
cmp
lcall
mov
stc
idivb
aad
ret
les
test
mov
add
push
sub
pop
sarb
aad
push
jmp
sub
mov
stos
or
sub
mov
add
pop
and
xchg
insb
add
add
addl
xor
sub
cmp
lcall
add
jo
inc
sub
out
lods
mov
ret
cmpsl
mov
push
inc
imul
sub
loope
jae
inc
add
in
add
pop
add
add
movsb
movsl
ret
mov
inc
push
mov
fs
popa
add
xor
std
sub
mov
push
or
jbe
mov
xchg
lods
sub
and
or
add
addl
jle
repnz
and
mov
repnz
outsb
mov
add
pop
out
fdivrl
mov
out
sldt
mov
nop
fadds
jno
xchg
add
lods
add
lods
sub
rorl
dec
arpl
in
add
sub
ja
add
cmc
daa
loopne
jae
stos
add
cltd
adc
jg
sarb
inc
mov
lods
mov
inc
jbe
or
or
pop
ret
add
pop
xchg
inc
push
pushf
add
inc
out
shrl
sbb
and
jge
cmp
xor
int3
fcmovne
mov
mov
adc
cmp
push
push
ficompl
call
int3
cmpsl
push
arpl
in
clc
xor
or
add
add
pop
arpl
data16
cld
push
mov
pop
add
out
inc
outsb
push
std
xlat
inc
fsts
add
cmc
cs
and
cmp
pop
outsb
jge
mov
sub
fstl
pushf
mov
mov
jecxz
pop
lcall
cld
pop
sbb
or
push
push
pop
mov
and
popa
add
aaa
jbe
add
mov
or
movsb
mov
aas
sbb
add
nop
sub
js
mov
mov
sbb
jno
jnp
add
outsl
jb
cmpsl
add
rcr
and
outsb
jno
push
add
mov
adc
cmpsl
fstps
mov
inc
repz
out
mov
stos
mov
xchg
or
dec
xor
add
pop
enter
jb
push
dec
jnp
into
ret
insb
mov
insb
pop
jbe
sbb
mov
movsl
dec
jnp
rcll
lea
fists
mov
sub
xor
add
xchg
mov
mov
lock
fimull
mov
in
loopne
or
add
mov
test
jg
sub
jmp
mov
xchg
fcoms
mov
inc
pop
loopne
adc
cmp
jae
mov
mov
add
xlat
out
aas
mov
mov
scas
imul
inc
add
xor
xchg
pop
dec
add
ret
lret
xor
adc
xchg
aas
fbld
stos
add
popf
imull
adc
cmp
mov
jl
les
subl
popf
sahf
adc
clc
mov
and
sbb
fisubrs
fidivl
inc
pop
je
sub
inc
add
test
adc
mov
fs
jb
ror
js
mov
adc
mov
movsb
fdivl
popa
cli
cmp
bound
stos
punpckhbw
shlb
lret
add
mov
add
ds
das
sarb
mov
xchg
lret
loopne
inc
pop
shl
arpl
mov
or
lahf
sub
sbb
jb
add
push
mov
std
sbb
inc
je
fdivp
jle
mov
rcrb
pop
add
rcrl
shll
out
lea
daa
test
cld
shrb
aaa
jmp
cmpsl
push
push
fnstenv
cld
add
fmull
push
cmp
loope
mov
fisttpl
das
mov
shrl
in
popf
stc
pop
lea
cwtl
jle
adc
xlat
mov
add
insb
sbb
clc
iret
mov
push
inc
fucomip
iret
jnp
repz
lea
insb
mov
repz
sub
dec
and
push
mov
jb
lea
jecxz
pushf
fcoms
pop
adc
pop
fstpt
les
mov
xor
mov
cmp
cmp
add
outsb
shl
add
add
loopne
cmp
pop
push
stc
jns
add
call
movsb
push
imul
add
sub
add
int3
outsb
jo
daa
inc
gs
push
stos
push
pop
testl
lods
push
add
jmp
test
lahf
adc
push
gs
and
testb
or
or
test
xor
mov
imul
xchg
push
add
nop
in
mov
pusha
mov
or
inc
push
aad
cld
out
mov
add
das
push
add
pop
jne
mov
add
cmp
sbb
sbb
pop
cmp
rcl
pop
lret
sub
add
lea
lock
imul
cmpb
add
or
mov
outsl
mov
cs
sub
add
dec
loopne
in
push
stos
rolb
das
imul
fmul
lret
lods
mov
icebp
loope
xchg
mov
scas
mov
mov
dec
int3
sbb
dec
mov
push
add
mov
push
cmp
pop
jg
fcmovnu
adc
push
mov
pop
push
fbld
push
sahf
mov
pop
mov
dec
sarl
push
inc
dec
clc
add
dec
add
repnz
xor
xchg
and
cmp
iret
aam
imul
push
lahf
mov
add
cmpsb
dec
sub
sbb
repnz
cmpsl
jl
repnz
je
loope
stos
and
add
add
mov
in
inc
ja
xor
in
roll
call
push
subl
fnstenv
push
aad
ds
sti
xchg
sbb
mov
addb
adc
cmp
push
mov
lods
push
dec
fisubs
stos
add
test
test
or
int3
mov
jmp
lret
xchg
push
jbe
dec
aad
outsb
imul
lods
mov
mov
movsl
jecxz
ljmp
cwtl
adc
jp
and
fistps
xor
and
jbe
mov
push
cld
or
push
aaa
add
idivb
xor
fcomp
add
lds
sbb
pusha
inc
xchg
mov
dec
add
jns
pop
movsb
int3
mov
inc
sbb
mov
ds
and
xchg
lea
sbb
data16
aaa
aas
shll
cmp
mov
adc
imul
aas
ljmp
in
sub
in
orb
dec
jae
add
cwtl
fisubrl
add
sub
add
push
push
mov
xor
push
add
mov
and
add
das
sbb
dec
out
pop
xchg
add
adc
push
add
aad
add
pop
inc
adc
push
push
xor
add
add
aaa
lret
and
add
xlat
mov
cmp
jb
aam
xchg
mov
adc
xchg
add
and
js
inc
pusha
or
testb
pop
inc
pop
scas
in
inc
movsb
pop
sbb
fldl2e
fsubrl
inc
ja
adc
add
push
lock
cmp
push
adc
out
shl
mov
pop
test
xchg
addb
mov
add
sbbb
cli
add
xchg
xchg
jmp
sub
mov
loopne
mov
stos
push
jge
xor
cwtl
add
pop
mul
and
and
les
fiaddl
push
fs
mov
jmp
inc
push
ljmp
adc
stc
sbb
mov
pushf
add
arpl
push
add
hlt
push
popf
mov
xchg
sub
mov
scas
push
pushf
jge
jnp
xchg
mov
sub
dec
add
or
mov
dec
mov
or
lds
mov
movsb
add
xor
xorb
dec
or
lds
repnz
add
dec
xchg
and
lods
addr16
sbb
mov
ret
pop
jecxz
test
cmpsb
lods
adc
addr16
mov
add
jae
mov
in
jecxz
add
cmp
fstps
scas
sub
ja
adc
mov
pop
popf
adc
faddl
test
sarl
add
and
add
and
xchg
sub
xchg
lods
lock
fsubrp
scas
add
imul
add
add
xchg
sbb
cmpsl
jne
add
test
data16
push
out
push
jge
mov
mov
into
pop
pop
sub
out
cmp
not
dec
inc
jecxz
pop
inc
adc
adc
xchg
repnz
jb
inc
xchg
mov
add
sti
fs
add
add
inc
and
push
inc
testl
xor
fcom
clc
and
adc
adc
add
mov
mov
or
leave
fidivs
das
add
jbe
lods
pushf
adc
and
sub
pop
add
out
popa
sahf
insb
jg
cmc
or
into
add
std
inc
push
add
push
cs
add
ds
ds
add
iret
add
xor
push
and
cmp
push
add
xchg
mov
sbb
lahf
push
cwtl
push
lahf
add
fmulp
add
loopne
dec
add
adc
xor
aad
pop
mov
sub
cs
jb
sub
pusha
out
cmpsb
lods
ja
sub
or
in
shlb
jle
scas
sbb
scas
rcl
repnz
cmp
fstl
add
sbb
mov
add
adc
fldenv
sbb
stc
rolb
add
test
arpl
in
pusha
scas
inc
sub
aam
stc
dec
test
mov
daa
pop
scas
jecxz
imul
out
inc
rcll
loop
ljmp
xorl
add
add
pop
cli
int
xlat
add
icebp
mov
fildl
mov
xchg
cmp
cmp
in
pop
add
test
js
lcall
int
scas
pop
imul
insl
xchg
sub
jp
push
lcall
xchg
add
in
add
mov
or
in
sbb
sub
sbb
lret
lds
loopne
fisubl
add
push
add
imul
and
mov
fsin
add
jg
cmp
shll
test
hlt
xchg
imul
add
pop
ss
in
rcrb
inc
push
push
outsl
jo
add
cmp
add
inc
lods
add
movsl
imul
sbb
pop
daa
lret
stc
add
and
addr16
sbbb
push
loope
push
add
xchg
dec
push
mov
mov
cmp
out
pop
or
sub
xchg
cld
mov
subb
push
hlt
mov
sbbb
jns
adc
fcmovne
pop
xor
imul
add
mov
jecxz
dec
nop
jecxz
xor
or
mov
aad
pusha
movsb
lret
orl
fldcw
dec
enter
push
sub
lock
mov
out
xorl
dec
lahf
es
pavgb
sub
cmc
jae
inc
push
cmp
mov
aaa
adc
add
add
dec
aas
popf
jp
ds
jns
es
push
pop
idivl
enter
pusha
cmp
push
cwtl
and
jmp
movsb
sahf
dec
decl
add
mov
out
lods
xchg
mov
add
arpl
popa
div
add
add
repz
add
add
add
inc
fidivrl
dec
outsb
mov
push
addl
inc
add
aaa
mov
jp
incl
inc
in
scas
pop
mov
pop
xchg
adc
aad
jb
push
fwait
stos
mov
pop
push
adc
les
xor
cmp
jmp
imul
hlt
push
inc
mov
cltd
insl
push
add
and
fsubrs
add
cmp
sbb
test
lods
push
lret
inc
pop
ret
mov
in
adc
jp
push
aam
cli
mov
add
pop
rcll
arpl
push
inc
or
jmp
outsl
mov
push
test
add
jns
sbb
dec
imul
cltd
ja
cmp
les
fistps
test
jp
loope
popa
and
add
xchg
mov
clc
add
add
push
loop
xor
loope
push
insb
cmp
push
add
mov
sahf
xchg
jge
ja
negl
add
push
cmp
add
xchg
add
add
scas
aad
icebp
sbb
xor
mov
mov
cs
push
sbb
std
rclb
fdivs
sbb
scas
das
jle
add
push
sbb
push
add
or
xchg
pop
and
mov
adc
add
push
fwait
rclb
cmpsb
popa
sub
subl
add
or
mov
jg
pop
push
jb
xor
push
and
repz
imulb
sbb
add
xchg
test
add
or
and
jecxz
sub
sarl
add
into
mov
mov
adc
dec
mov
dec
mov
lock
add
bound
rolb
sahf
cmp
ljmp
adc
das
inc
in
xchg
add
pop
rol
add
lods
loope
stos
gs
pop
fadds
pusha
xorl
mov
ds
mov
call
jmp
sahf
inc
cwtl
and
scas
add
insl
call
fisubl
mov
xor
fiaddl
mov
gs
lds
ret
push
int3
or
mov
add
xor
cmp
jg
push
in
add
add
lods
xchg
pop
mov
mov
cmp
rcll
add
rcrl
add
jmp
inc
cmp
cmp
cmp
mov
scas
jle
sbb
and
sbb
adc
mov
jbe
fstl
pop
adc
sbb
cmp
cs
repz
cs
bound
jno
add
adcb
push
test
adcl
repz
xchg
lds
add
loop
cmp
mov
xor
and
or
mov
lea
add
cmpsb
mov
add
lds
fbld
inc
or
mov
movsb
sbb
mov
add
mov
enter
dec
xchg
xorb
add
inc
in
roll
fsubrl
imul
sub
pop
xorl
add
pop
fsubr
mov
cmpsb
push
pop
rorb
lahf
jge
mov
sahf
add
stos
dec
xlat
add
xchg
xchg
scas
mov
and
mov
push
in
sbb
sub
add
cmp
mov
enter
addr16
xor
push
pop
popa
mov
cmp
les
xchg
and
cmp
add
pop
add
add
mov
xlat
aam
xorb
gs
pushf
add
es
jb
ficompl
in
push
adc
sbb
jle
mov
jl
xchg
cmp
addr16
pop
add
and
add
movsb
mov
sbb
mov
in
xlat
int3
or
dec
and
test
popa
jle
push
cltd
mov
out
in
sbb
jo
add
and
mov
mov
in
arpl
aaa
adc
out
mov
lret
pop
or
sub
jl
mov
mov
mov
lods
add
mov
add
jge
hlt
dec
add
out
shlb
dec
add
fisubl
add
stc
adc
jp
cmpsl
sar
push
inc
add
add
adc
iret
data16
dec
add
inc
cmp
dec
sub
sahf
sbb
add
and
mov
push
adc
mov
or
mov
cwtl
adc
and
add
push
das
mov
xor
xorb
add
add
sbb
mov
jno
lret
adc
or
sbb
int
jp
inc
sti
add
add
pop
shr
jp
loope
add
in
xorb
adc
jbe
pushf
add
jb
mov
arpl
jbe
loope
cld
repz
xchg
incb
pusha
and
xchg
pop
ds
push
adc
add
pop
shrb
inc
incb
cmp
mov
outsb
cmp
clc
shl
adc
add
roll
xchg
add
inc
add
in
cmp
mov
push
pushf
add
pop
inc
stc
add
mov
arpl
fldt
add
mov
add
add
popa
fs
pop
push
sub
pop
jno
mov
cmp
jo
or
xchg
stos
jl
push
add
stc
add
ljmp
adc
inc
add
sub
test
jae
movsl
daa
out
mov
mov
jb
push
mov
sbb
add
sub
std
dec
xor
cmp
cmc
sbb
sbb
cmc
cmpsl
loopne
sbb
push
iret
sbb
in
xor
mov
arpl
cli
and
les
mov
add
imul
aaa
testl
aam
mov
cmpsb
fstpt
int3
xchg
ds
out
enter
pushf
add
popa
sub
or
pop
dec
enter
sub
push
jg
mov
movsl
xchg
lds
out
xor
add
rcll
popa
out
sahf
cld
jnp
aaa
push
pop
and
cld
or
ret
ret
add
hlt
in
add
jbe
sti
aas
leave
lret
sub
aad
adc
gs
cmp
movl
cmp
add
xchg
mov
out
mov
push
rorl
gs
bound
enter
sbb
add
sbb
add
rcrl
push
xor
add
scas
lcall
jb
add
rorl
or
pop
fwait
add
popa
xor
rol
xchg
or
call
mov
loop
mov
repnz
push
cmp
nop
add
add
cmpsl
ljmp
notb
xor
imul
cmp
jl
cmpsl
in
mov
mov
dec
or
das
mov
daa
add
pop
add
add
mov
addb
jge
popa
loope
data16
pop
sahf
jp
cmp
ds
in
inc
mov
imul
dec
shll
pop
icebp
repz
mov
inc
imul
mov
scas
ljmp
add
loop
ffree
adc
fidivs
add
shrb
rcl
add
sub
sub
icebp
xchg
lea
call
aaa
mov
inc
mov
add
call
fcoms
adc
xor
movl
push
xchg
sub
pop
jl
add
lea
mov
add
aaa
pop
xchg
add
fstl
push
lea
adc
out
add
jo
in
and
add
add
pop
gs
add
ret
cmp
cmp
rcll
add
loop
mov
test
les
into
add
popa
out
adc
insl
cmpl
scas
roll
sbb
fwait
hlt
stc
stc
inc
gs
je
mov
sbb
insb
hlt
push
fwait
ja
adc
mov
sbb
dec
lahf
addl
mov
add
or
pop
add
arpl
gs
sbb
in
lea
cwtl
mov
sbb
movsl
aas
xchg
push
jg
cmp
sbb
sbb
arpl
dec
add
inc
pushf
add
push
fwait
xchg
add
jb
adc
sbb
xchg
add
mov
dec
xchg
inc
sti
push
pop
fadds
jno
in
in
adcb
jne
arpl
sbb
insl
scas
adc
shrl
ret
mov
and
xchg
mov
and
hlt
or
push
push
aad
stc
mov
lods
mov
sub
add
mov
adc
std
movsb
loope
stos
jae
or
sbb
and
add
xor
stos
inc
and
daa
xchg
add
push
sti
add
xor
adc
test
and
cmp
inc
arpl
es
in
nop
xor
sub
mov
mov
enter
dec
add
lahf
or
enter
in
jg
shll
add
int
adc
add
in
icebp
sub
dec
jge
adc
mov
cmpl
ss
jbe
sahf
add
lods
dec
pop
add
inc
pop
push
addb
and
jg
xor
leave
add
pop
sub
push
mov
add
xor
push
loopne
push
sarb
addr16
pop
rcrl
jle
xlat
shlb
test
lea
sub
in
jo
jne
jnp
ret
nop
lock
loopne
xchg
pop
ss
mov
shll
or
mov
push
mov
sbb
stos
xor
mov
or
scas
push
push
adc
or
orl
xchg
add
add
jle
sbb
add
shl
pushf
imul
xchg
sub
mov
pop
sbb
cmpsl
or
inc
std
dec
fmuls
add
cmp
mov
or
ss
mov
add
stos
test
push
lret
mov
icebp
dec
in
fstps
in
mov
jne
sub
cmp
add
push
xor
xchg
add
xchg
dec
lds
xor
push
add
jle
mov
dec
rorb
into
out
insl
repz
dec
adc
lock
mov
lods
mov
in
push
inc
sub
push
add
rcrl
cmp
adc
fbstp
jl
push
mov
insl
stc
gs
and
xor
sar
ljmp
mov
addr16
sbb
mov
ds
xchg
dec
pop
outsl
inc
mov
ds
xorl
imul
outsl
stos
add
adc
add
add
cmp
faddl
sbb
ljmp
jl
xchg
sub
pop
adc
ljmp
and
rcrb
add
sub
call
lret
mov
roll
iret
mov
cld
daa
push
iret
mov
push
xchg
cmpb
sbb
mov
mov
cmp
and
xor
cld
imul
jno
cmp
jle
adc
jbe
fistl
negl
xchg
and
add
fcmovbe
add
sbb
dec
sub
mov
mov
dec
imul
sbb
mov
or
lret
into
fisubrl
cmp
divb
push
faddp
and
cli
pop
cmpsb
lods
push
fstl
xor
fldcw
jge
jp
add
int3
add
inc
xchg
in
movsb
mov
enter
scas
pop
ret
or
dec
dec
ja
add
test
add
add
in
test
sub
push
xchg
icebp
fwait
adc
and
cmpsl
or
lret
add
inc
add
adc
and
pop
sti
ss
mov
jnp
leave
mov
mov
add
jnp
add
add
or
scas
pop
sub
mov
sub
mov
jp
outsl
fsubs
inc
mov
pop
xor
mov
xchg
out
or
roll
xor
lds
fldl
int3
repz
loopne
add
add
stc
popa
out
add
and
mov
icebp
add
add
mov
jae
inc
and
mov
into
xchg
push
adc
jbe
outsl
inc
movsb
inc
inc
les
cmpsb
pop
ret
adc
lret
outsl
add
jp
popa
rorb
inc
jae
xchg
cmp
fsin
leave
jae
lock
test
add
fstpt
mov
jno
es
scas
ret
xor
cmp
or
add
xchg
add
fiaddl
repz
div
add
sahf
sbb
cmp
lret
test
inc
aas
inc
cld
add
imul
ja
xchg
adc
inc
sbb
popa
fimull
roll
sbb
in
add
stos
je
inc
daa
push
adc
loop
aad
xchg
mov
fcmovne
outsb
test
imul
add
in
add
xchg
and
pop
push
add
pop
push
jb
add
mov
xorl
pusha
cmp
data16
into
add
inc
push
in
rolb
add
fadds
sub
dec
inc
loope
addr16
pop
imul
adc
movb
add
repz
rclb
add
cmp
xchg
xor
fildll
mov
add
lret
inc
pusha
add
out
cs
lret
das
jbe
sub
cld
add
add
icebp
imul
pop
in
ret
out
popa
call
push
aam
push
add
lods
rol
lcall
sub
push
cli
add
add
mov
int3
xchg
pop
pop
pop
or
sub
in
arpl
jp
repz
add
adc
sub
xor
add
jb
rolb
nop
jp
daa
movb
incl
add
add
dec
js
roll
mov
adc
push
add
add
inc
add
enter
xchg
pop
add
lods
aam
xchg
stos
push
imul
lds
xchg
bound
sbb
mov
sub
lea
add
add
adc
bound
or
add
add
adc
add
jne
pop
ds
add
xchg
mov
or
jmp
stc
js
push
mov
test
mov
cli
movsl
pop
inc
js
push
into
inc
shll
dec
into
sbb
and
mov
loope
jns
mov
ret
xchg
pop
or
push
dec
out
add
mov
cld
out
ret
add
hlt
pop
shrb
push
adc
sbb
shll
stos
lcall
push
add
pop
and
and
mov
jne
scas
xor
mov
addr16
sarb
sub
or
cmp
inc
insl
insb
push
inc
stc
imul
in
cmp
filds
fldl
aas
inc
pop
jno
movsb
mov
ds
or
lods
repnz
inc
sub
orl
pop
sub
nop
ret
jg
mov
cmpsb
add
je
push
inc
shll
mov
push
add
xchg
jb
out
enter
xlat
push
jnp
je
pop
mov
pop
in
mov
test
repz
and
fsubr
cmp
dec
andl
adc
add
push
out
sbb
and
pop
fs
jmp
insl
fidivs
aas
gs
inc
fcomp
add
jno
add
je
dec
ja
add
inc
jo
add
inc
mov
jge
add
jl
push
push
icebp
add
cmp
cmp
fisttpll
push
add
sub
pop
cmpsl
dec
loopne
jle
pop
and
mov
mov
addr16
movsb
scas
push
push
adc
sub
ss
daa
out
sub
jle
ror
push
add
in
bound
pushf
sbb
es
inc
sbb
test
orl
ficompl
xor
xor
adc
orl
sbb
fisubrl
or
mov
mov
insl
xchg
pop
mov
add
add
lcall
mov
sahf
add
lds
shl
inc
mov
add
filds
and
jmp
subl
sbbl
add
fcmovnb
lret
adc
jne
movsl
insb
arpl
outsb
xor
es
movsl
adc
mov
push
add
fdiv
add
into
add
add
push
sbb
fbstp
or
movl
fcompl
add
lods
in
sbb
fcmovb
test
clc
negl
movl
push
outsl
pop
lret
push
pop
stc
fsubr
mov
add
les
nop
mov
fimull
pop
insl
push
jbe
notb
adc
sti
lcall
das
addr16
pop
aad
add
xor
sbb
add
xchg
add
jge
jecxz
addl
xchg
inc
push
add
outsl
lret
or
cmp
or
lock
mov
pop
xor
js
data16
sti
and
das
add
sbb
cld
cwtl
ds
mov
das
ja
js
aam
mov
fistpl
sub
add
add
push
addr16
addl
adc
sub
xchg
cmp
xchg
flds
fcmovnu
loopne
nop
mov
and
sub
cmpsl
inc
shrl
jns
xor
jecxz
jae
inc
cld
add
add
lock
movb
xchg
cmpsl
lret
rcrl
push
pop
dec
scas
addr16
mov
clc
mov
add
add
mov
dec
add
xor
movb
cli
adc
out
add
enter
repz
add
add
mov
lods
xchg
add
jle
insl
xor
xor
lret
adc
jbe
add
movsb
jns
add
and
add
mov
xchg
dec
aam
xchg
dec
and
fs
jo
add
add
xchg
int
sub
lret
jns
icebp
fldcw
fsubl
jg
scas
xor
inc
add
and
push
push
add
mov
and
scas
inc
add
sbb
xor
js
jecxz
xchg
test
sub
jnp
out
mov
pop
add
mov
das
insl
outsb
pop
mov
add
push
and
movsl
xor
jbe
xlat
lfs
add
jne
or
or
inc
cs
repz
push
push
test
mov
ror
mov
and
jg
test
ss
mov
fidivrs
sub
xchg
decl
frstor
add
mov
sarb
lds
xchg
sbb
push
inc
pop
pop
add
lods
cmp
outsb
xor
iret
cmp
add
rcl
xchg
sti
push
jnp
dec
ss
mov
sub
es
adc
sub
arpl
aas
mov
or
test
add
insl
test
inc
std
fiaddl
sbb
cwtl
cld
add
test
push
ret
xchg
insl
mov
push
and
push
and
fidivrl
xor
rcll
pop
and
fsts
in
sub
add
pop
add
and
mov
xchg
or
inc
pop
mov
jmp
cwtl
push
push
jmp
sub
mov
push
insl
sub
out
jnp
push
add
mov
pusha
push
or
cli
push
or
jae
ljmp
push
sub
pop
cmp
push
sbb
insb
pop
add
dec
cmpsl
popf
mov
push
add
icebp
pop
loope
pop
add
jbe
rolb
ja
cmp
xchg
and
imul
mov
loope
ret
sub
pusha
fxtract
cmpsl
mov
sub
mov
arpl
inc
inc
movsb
lret
sahf
xchg
je
jb
movsl
negl
add
shlb
rcrl
cli
inc
in
pop
cld
jne
sub
xchg
imul
dec
sub
mov
mov
pop
add
lods
ret
ja
inc
cmc
pop
fisttps
add
pop
sbb
call
add
rcll
xchg
rcrb
out
and
leave
add
xchg
jbe
xlat
jl
cmp
inc
outsb
jg
xor
gs
test
mov
cmpsb
or
je
je
mov
sbb
pop
jg
push
ret
cmp
push
repz
fildl
sbb
ret
cmp
add
sub
repz
mov
inc
add
jg
loope
and
sub
aas
sub
mov
dec
add
mov
push
nop
add
adcl
into
adc
std
jb
add
daa
add
adc
mov
inc
icebp
sbb
aam
fidivrs
sbb
stos
push
push
cmc
push
pushf
xor
imul
mov
fiaddl
sub
cs
imul
mov
cmpl
aaa
gs
in
outsl
fs
and
and
and
add
mov
mov
insl
loopne
repz
mov
mov
add
test
ds
fwait
mov
xchg
mov
add
repz
sub
lahf
add
movsl
lods
sub
mov
pop
add
cmpl
jp
data16
mov
ljmp
xchg
add
and
add
mov
mov
inc
xor
es
add
stos
or
xchg
inc
adc
lods
cs
movsl
adc
xlat
dec
sub
adc
xchg
adc
cs
cmpsb
pushf
insb
mov
mov
scas
cmp
add
rcrl
mov
dec
pop
into
add
gs
outsl
add
fcoms
add
xchg
add
or
add
add
xor
daa
fmull
or
pop
push
cmp
pop
pop
cmc
frstor
mov
sub
add
dec
ret
and
push
add
add
aam
add
sub
cmpsl
adc
ja
cli
mul
cmpsb
or
add
lods
cli
insb
cmpsb
cmpsl
sub
pop
mov
hlt
jns
cmp
jge
nop
add
std
add
lea
cmp
jae
push
test
lds
add
inc
mov
inc
pop
xor
mov
jp
mov
test
mov
add
xor
ret
pushf
add
dec
testl
push
jae
in
nop
inc
out
cmp
inc
xor
adc
pop
cmp
lea
in
lds
aam
loop
add
in
mov
call
jnp
inc
shrb
imul
lods
sbb
out
lock
cmp
cltd
cmp
or
and
dec
inc
iret
inc
add
aaa
add
es
sub
scas
or
loopne
pushf
and
add
roll
sub
mov
popa
mov
pop
xchg
adc
lea
imul
es
inc
stos
add
filds
cmc
std
loope
pop
lods
fdivrl
loopne
pop
dec
cli
add
in
add
addl
mov
js
or
filds
cmpsb
les
or
pusha
push
add
pop
mov
xor
sbb
cmp
inc
fmull
in
pop
xchg
inc
sbb
add
pop
mov
add
mov
pop
negl
je
nop
scas
pop
xlat
sbb
or
jnp
ljmp
mov
xchg
push
cmp
mov
pop
sub
xchg
movsl
ficomps
stos
stc
fisubl
and
mov
imul
sbb
mov
jns
add
push
jmp
adc
out
idivl
add
loop
mov
mov
dec
add
add
cmp
loope
push
fdivl
add
or
add
hlt
popa
gs
in
dec
cmp
testb
mov
dec
iret
add
add
daa
out
sbb
mov
ja
mov
popf
pop
mov
popa
xor
add
push
clc
shrb
call
iret
les
mov
test
sub
in
dec
loope
mov
cmc
jb
imul
xrelease
repz
fbld
add
add
fists
sub
adc
cmpb
dec
xchg
test
ret
add
add
flds
fisttpl
cmp
cmc
sbb
lea
xchg
dec
cmp
adc
add
sub
xor
add
xor
fiadds
adc
das
mov
sub
mov
leave
es
jne
lods
add
mov
divl
aad
aas
mov
inc
add
test
popa
cmc
pop
invd
xchg
xor
sub
add
add
mov
repnz
cmp
dec
mov
pop
aaa
iret
stos
add
push
jne
or
jno
adc
dec
mov
add
ss
jne
mov
xor
dec
stos
loop
adc
daa
push
lahf
jno
mov
pop
and
and
cmp
aad
jecxz
mov
cli
gs
add
cltd
movsl
jmp
ja
imul
nop
mov
add
scas
sbb
jmp
or
dec
in
add
xlat
add
jbe
sub
add
add
push
add
add
jle
mov
add
cmp
dec
pushf
adc
push
lahf
cmp
add
jo
xor
aaa
sub
push
add
lret
in
es
je
orb
fwait
inc
add
add
and
pop
jno
or
in
loop
sahf
enter
cli
push
ret
add
nop
sub
inc
jl
aam
cmpsl
and
add
rcrl
dec
ss
addb
push
push
scas
add
shlb
movl
call
repz
push
out
cmp
addl
lds
add
in
cmpsl
xor
inc
add
add
xor
inc
adcb
jl
dec
xchg
lahf
fimull
stc
add
ss
test
push
mov
push
or
add
add
cmp
pop
pop
mov
add
daa
xchg
cmp
dec
movl
cmp
mov
add
lahf
cmp
push
xchg
inc
std
add
mov
rorb
stos
and
addb
in
shl
movsb
add
das
add
cwtl
icebp
add
mov
pop
push
shlb
sub
add
adc
or
popa
add
xor
cmp
xor
push
lods
add
imul
dec
mov
add
add
imul
add
leave
or
add
cmp
cmp
pusha
pop
cmp
cmpsb
out
mov
movsb
add
and
inc
mov
lds
mov
mov
inc
popf
in
add
sbbb
sub
mov
inc
addb
push
add
xchg
insl
mov
pop
add
jg
xor
out
pop
or
pusha
rcl
dec
ficoms
add
test
add
pop
aam
aad
xchg
cltd
out
mov
popa
mov
push
sbb
xchg
stos
add
adc
leave
xchg
dec
cmpsb
mov
jg
sub
fdivrs
rcrl
int
pop
add
pop
je
mov
xchg
adc
push
xchg
dec
mov
sbb
add
leave
stos
push
popa
lret
ja
mov
inc
cmp
add
test
aas
or
mov
add
xor
adc
or
fisubl
js
or
pop
out
pop
mov
mov
cmc
dec
jp
jno
test
aad
sarl
loopne
add
push
ret
and
in
jmp
adc
mov
test
sbb
icebp
mov
add
out
in
out
lcall
insl
mov
inc
negl
jmp
sbb
dec
inc
mov
test
daa
dec
orb
and
repz
fs
out
add
out
mov
add
sarl
mull
push
add
outsb
mov
xor
movsl
add
add
sbb
push
xor
mov
lret
sbb
xchg
pop
in
add
pop
inc
dec
push
add
lods
leave
mov
add
je
loop
loope
push
jl,pt
xor
inc
ucomiss
add
lret
sub
adc
cs
mov
add
cmp
push
xchg
add
ljmp
int3
lods
jge
repz
sbb
pushf
in
jne
in
popa
test
subl
push
flds
xchg
jg
pop
add
lret
add
mov
dec
or
cmp
xchg
sub
add
mov
adc
movl
fstpl
lods
addl
cmc
sbb
jns
xchg
xchg
fldl
adc
cmpsb
xchg
jmp
jp
insb
fdiv
inc
mov
shlb
dec
pop
es
xor
add
jnp
add
subb
pop
jo
add
nop
dec
lods
sub
or
xchg
lock
add
pop
fists
cmp
push
addb
lock
data16
mov
sbb
push
ljmp
add
add
dec
push
sub
stos
bound
push
loope
add
adc
loop
jp
mov
fdivl
push
xor
dec
add
int
add
push
rorl
add
sbb
verw
mov
mov
mov
push
push
int
mov
std
idiv
jns
push
cltd
ret
mov
pusha
and
popa
popa
cltd
sbb
dec
add
xor
add
arpl
adc
add
in
js
mov
inc
sbb
fsubrs
pusha
pop
daa
mov
xchg
daa
jno
push
push
loope
xchg
sub
arpl
cmp
jl
stos
push
std
push
inc
add
cmp
mov
sub
lret
cmc
adc
lahf
aaa
imul
mov
js
cmpl
movsl
mov
rclb
push
je
sbb
and
cmpsl
in
fldcw
push
add
cmp
push
lret
add
cmp
sbb
fisubl
pop
fisttpll
mov
adc
in
out
filds
mov
je
adc
es
adc
cmp
dec
sub
mov
add
lret
testl
imul
divl
pop
add
add
xor
inc
add
imul
cli
iret
jbe
fwait
add
and
cwtl
fistpl
adc
lahf
inc
sub
lret
ret
and
shlb
popa
add
lret
mov
je
in
add
subb
jbe
sub
inc
jge
xor
jp
add
or
mov
cmpsl
insb
icebp
lock
pop
add
dec
sbb
push
xchg
shld
sbb
add
je
mov
andl
inc
xor
mov
ss
ja
add
aas
test
mov
filds
cmp
xchg
push
or
or
push
rcr
stos
pop
jnp
mov
xor
jo
add
add
sbb
push
add
aam
jae
insl
in
testl
cmpsl
pop
pop
xor
int
and
out
roll
and
gs
imul
iret
and
jecxz
sub
test
test
jno
adc
ss
cmc
mov
xchg
hlt
push
add
mov
mov
push
mov
jp
add
inc
je
out
cwtl
mul
xchg
add
jmp
rolb
cmp
push
dec
leave
add
and
cwtl
aaa
sbbb
push
adc
call
in
out
call
adc
add
pop
movsl
xor
jbe
jge
inc
and
or
mov
ds
lods
gs
inc
mov
dec
xlat
lock
sub
add
call
add
in
stos
ds
jmp
fucomip
add
and
adc
std
jb
imul
cli
add
or
add
adc
ret
insl
add
aam
mov
cli
add
inc
xor
jno
cmp
pushf
loop
gs
mov
mov
jo
push
ljmp
sub
fcompl
daa
out
add
and
xor
mov
xchg
cli
filds
add
jno
fiadds
inc
jmp
mov
cmp
call
jnp
pop
xchg
inc
das
out
mov
and
jb
fs
push
stos
in
add
mov
pop
and
scas
sahf
fs
pusha
fsub
fstl
jmp
stos
jbe
fmull
dec
lock
xor
and
xchg
add
and
and
pop
lret
sub
lods
subb
scas
fldcw
mov
sub
mov
add
and
mov
and
mov
mov
das
or
push
adc
jp,pn
dec
mov
arpl
or
mov
add
jge
inc
mov
out
in
inc
cmp
loopne
add
or
nop
mov
pop
nop
pop
addr16
sub
mov
mov
mov
dec
and
orl
iret
pusha
notb
jp
scas
loope
add
cwtl
out
sbb
inc
nop
icebp
add
mov
add
add
adc
sbb
hlt
push
je
mov
dec
jg
nop
cmp
out
sub
mov
movsl
loop
flds
ljmp
and
xchg
sub
jmp
popf
push
scas
clc
or
pop
imul
insb
add
incl
lret
adcl
mov
aaa
sbb
pop
lldt
jmp
stc
sbbl
add
mov
or
iret
dec
nop
lds
add
outsl
sub
fs
rorb
jo
clc
push
inc
aam
or
sub
adc
xchg
mov
dec
mov
push
subl
pushf
add
sub
lods
jl
sub
dec
xor
fincstp
fs
dec
mov
add
xchg
dec
cli
mov
daa
push
repnz
hlt
and
mov
popa
popf
push
dec
dec
add
mov
dec
leave
inc
add
adc
cmp
adc
ret
add
stc
mov
cmp
pushf
fstl
inc
cs
adc
add
add
sar
shr
push
jbe
jp
adc
mov
add
adc
in
cmc
xchg
xchg
mov
xorb
arpl
fcmovne
dec
out
mov
pop
fwait
js
add
fisubrs
bound
add
ds
into
jno
andb
add
dec
sub
ret
in
and
and
add
lahf
inc
add
sub
and
or
cs
xor
add
add
add
gs
outsb
xchg
inc
arpl
mov
mov
jecxz
lods
lock
fisubs
xchg
lcall
rorb
push
sbb
dec
xor
mov
dec
andb
iret
and
pop
add
in
and
pop
jmp
mov
aaa
mov
or
mov
cld
cmpsb
cmp
lea
add
stos
ljmp
xor
aad
and
lea
jl
mov
or
xlat
add
xor
leave
jle
xor
imul
cltd
add
loop
lods
and
sbb
pop
lcall
push
prefetchnta
add
add
add
mov
pop
add
mov
jns
lahf
add
sub
push
nop
lea
push
inc
xchg
movb
insb
sub
pop
outsl
clc
fistl
sti
out
dec
out
add
sub
sarb
or
mov
or
add
lds
movsb
push
fisubs
sub
subl
pop
push
or
sub
mov
cltd
ret
push
imul
add
and
add
xchg
adc
fs
or
das
mov
scas
data16
fisttpll
sbb
add
dec
pop
mov
jbe
mov
jo
mov
std
jb
mov
mov
sar
mov
mov
push
xor
mov
jae
xchg
push
in
sbb
sub
and
inc
inc
fcmovnbe
mov
loopne
inc
jg
mov
add
and
mov
out
inc
xor
inc
mov
ss
adc
aad
xchg
mov
adc
sbb
leave
lret
popf
icebp
add
jle
rolb
mov
clc
push
push
jmp
or
enter
out
in
mov
jg
add
adcl
andb
in
js
xchg
xchg
ja
add
xchg
or
xorl
insb
dec
inc
test
add
xor
addr16
pop
insl
add
xchg
pop
pop
cmpsb
add
add
or
add
lret
mov
push
add
fmulp
xchg
adc
clc
push
fs
cmp
and
add
xor
adc
fcom
mov
repz
fmul
stos
fiadds
adc
add
dec
add
lret
mov
push
out
popf
fcomps
add
lret
cld
push
jae
leave
pop
aad
sbb
push
fwait
lods
leave
jb
in
or
vmread
adc
test
jb
add
sub
out
push
xor
and
cmc
popa
pushf
nop
std
add
xor
mov
add
mov
sahf
mov
xchg
test
lods
addl
and
adc
bound
out
mov
or
rcr
cli
push
arpl
jecxz
cmp
and
sub
jnp
dec
enter
cmp
incb
jnp
add
ret
adc
cmp
push
xchg
stos
cmp
cmp
fs
outsb
xchg
inc
jmp
roll
hlt
xor
into
xchg
lods
xor
add
xchg
repnz
push
fidivrl
and
lcall
imul
add
sbb
or
mov
lea
xor
inc
sldt
jns
xor
filds
adc
decl
jae
lret
push
dec
xchg
das
xor
sbb
fbstp
hlt
fwait
add
sahf
jmp
cmpsb
imul
cmpsl
add
mov
jl
xor
sbb
add
bound
lea
jp
imul
aad
int
out
jno
push
sbb
mov
add
jge
pop
mov
jne
arpl
xor
adc
xlat
mov
pop
sbb
xchg
mov
orl
add
adc
cmp
insl
mov
sbb
int3
dec
push
pop
add
cmpb
dec
xchg
mov
je
jge
cld
outsl
test
dec
addb
outsb
lds
lret
addr16
sbbl
adc
sub
ljmp
mov
int3
or
inc
call
pop
add
inc
test
xchg
es
clc
stos
add
jns
jmp
dec
xor
test
jecxz
inc
inc
cmp
add
test
xor
add
dec
mov
pop
add
cmp
jo
outsl
jmp
mov
pop
in
inc
add
xor
icebp
pop
cltd
adc
out
add
out
add
das
cld
insl
dec
cmp
jns
bound
arpl
pusha
push
add
jge
add
and
ror
add
fcoms
sbb
in
mov
inc
xchg
pop
pop
add
movsb
xchg
hlt
add
call
dec
stos
push
jp
lcall
fistps
add
add
test
mov
add
stos
mov
push
sub
mov
mov
jle
pop
adc
sub
mov
icebp
out
sub
fchs
sbb
xorb
leave
jb
movsb
push
pop
rclb
push
stos
pop
shlb
pop
dec
cmp
add
add
add
sub
sub
or
pop
out
es
cmc
das
cld
push
pop
sub
lahf
roll
orb
imul
jb
movsb
cld
sub
jmp
pop
xchg
add
add
add
xlat
scas
adc
sbb
sub
imul
negb
call
loopne
push
adc
repnz
andl
xchg
clc
mov
jecxz
rcll
and
xchg
add
add
insb
pop
leave
sub
add
add
mov
repz
das
cmpl
add
jo
sar
sbb
xchg
frstor
xor
add
movd
xchg
rcrb
jg
cmc
fldcw
jne
mov
pushf
fbld
jp
dec
ss
sub
add
nop
jl
fs
mov
es
inc
mov
push
jecxz
jmp
inc
rcr
and
mov
push
testl
test
mov
mov
mov
insl
aas
jb
push
jle
jae
mov
sbb
or
cmp
add
lods
cmp
or
sbb
add
icebp
fdivrs
push
in
and
aaa
data16
lds
mov
lock
repnz
in
dec
mul
add
mov
dec
lods
les
mov
daa
and
insl
pop
xor
outsb
dec
insl
leave
repz
call
lcall
xor
shlb
out
push
pop
testb
cmp
add
sbb
dec
mov
jmp
imul
sub
outsb
add
xchg
and
divl
pop
xchg
minps
loopne
jl
push
cmpsl
pop
fstpl
std
cmp
jae
xor
dec
dec
jb
in
loopne
inc
mov
mov
in
das
jle
fmulp
repnz
dec
push
cmp
rolb
popf
sahf
or
loope
into
mov
int3
call
daa
mov
aas
inc
call
repnz
popf
mov
dec
add
mov
mov
add
jecxz
icebp
pop
cmpsl
add
js
xchg
je
movsl
sub
jle
push
add
outsl
add
jl
ja
pop
push
int3
aad
add
in
add
pop
add
sbb
mov
jle
add
inc
in
and
add
test
es
mov
adc
add
jo
in
sbb
fldenv
and
imul
push
cmpl
push
dec
and
add
push
out
pusha
or
out
mov
inc
fndisi(8087
pushf
stos
and
mov
sub
or
jmp
inc
in
add
out
pop
add
push
add
jmp
lahf
fisubrl
sub
xchg
mov
enter
jae
aaa
aaa
push
add
add
add
or
cld
push
stos
inc
pop
cmc
inc
test
test
xchg
out
push
add
sbbl
add
adc
add
outsl
xlat
mov
addb
pop
nop
std
or
cld
mov
add
pushf
out
cmp
gs
in
das
add
imul
and
or
negb
xchg
mov
cmp
xchg
jp
push
mov
xchg
stos
sub
or
xlat
cltd
outsb
cmp
test
incb
loope
aas
jecxz
dec
push
insb
push
ss
jmp
scas
cmp
dec
test
adc
mov
add
sbb
or
add
xchg
jl
pop
add
add
ret
lods
mov
xor
jnp
dec
lods
notl
popa
out
imul
out
xchg
and
add
add
lcall
push
sub
inc
xor
jb
or
test
fcom
lcall
add
movb
inc
push
add
add
pusha
add
ja
ss
jns
pop
dec
sbb
out
nop
or
cmp
xor
adc
jae
jge
dec
test
add
dec
add
dec
xchg
push
pop
scas
add
push
xchg
cld
push
mov
or
aaa
xor
add
add
add
or
call
jge
mov
add
dec
add
fs
sbb
add
arpl
cmp
lcall
mov
aad
add
xchg
jae
xchg
pop
jne
push
sbb
in
dec
cwtl
or
cltd
add
ds
add
push
imul
cmp
clc
and
stc
sbb
cltd
mov
jl
push
cmp
jbe
hlt
cmp
xor
xchg
sub
sbb
sbb
faddl
xchg
mov
push
add
mov
les
ficoms
push
or
mov
lret
cmp
push
mov
push
push
stc
lock
adc
jge
gs
add
stos
cmp
adc
or
adc
imull
icebp
push
aas
call
lock
test
fwait
es
inc
add
add
cld
std
add
aam
lcall
jp
ja
jo
insl
lods
loope
rcrb
push
add
sbb
add
loopne
dec
xchg
add
mov
pop
stos
push
js
aam
push
ja
xchg
or
jge
mov
cmpsl
xchg
push
mov
add
rcrl
daa
sub
loopne
add
pop
adc
mov
dec
add
mov
out
scas
xor
mov
xlat
movsl
lock
aam
movsb
add
inc
mov
sbb
jp
int
aas
iret
dec
pusha
sti
push
inc
push
add
or
scas
sub
fiaddl
xchg
stos
jge
push
and
sti
add
pop
mov
dec
cmp
fisubl
cmp
sub
icebp
ficoml
mov
test
add
aas
lcall
enter
add
jb
dec
icebp
sbb
adc
dec
fdivs
push
movsb
dec
inc
mov
add
push
xor
mov
add
mov
push
xor
push
adc
popf
scas
add
jg
add
cmpsb
loopne
mov
sbb
add
dec
fstpl
xchg
xchg
repz
icebp
pop
xor
add
pop
clc
shl
lcall
sbb
push
sub
addr16
clc
add
sub
mov
add
sub
mov
push
cmp
pop
and
fs
je
ds
push
pop
negb
rcll
inc
dec
xor
ret
ret
flds
dec
mov
pop
jg
std
notb
push
mov
adc
mov
push
push
aaa
add
add
cmpsb
sbb
loope
and
nop
negb
sarb
dec
and
add
add
sub
ja
ljmp
cli
mov
sub
lds
jae
in
mov
daa
jl
add
add
add
add
mov
inc
add
add
jecxz
mov
lock
mov
pop
icebp
call
jne
jae
lock
hlt
mov
pcmpgtw
lret
movntq
pusha
das
mov
push
xchg
cmp
sbb
xor
inc
jmp
hlt
add
dec
mov
or
addr16
add
or
push
push
cmpsb
xchg
add
or
inc
mov
das
xlat
jl
addr16
and
add
mov
out
int
out
insb
sbb
jne
mov
mov
add
cmpsl
cwtl
les
test
dec
ret
inc
and
xchg
push
setb
inc
lret
or
cmp
mov
jp
sub
testb
aaa
add
xchg
add
add
mov
fsts
lock
test
stos
inc
or
or
xchg
movsb
add
arpl
and
ror
and
stos
push
testb
lret
cmp
mov
xchg
add
sbb
or
orl
sbb
add
sahf
fistpl
idivb
sub
add
add
lret
add
add
clc
arpl
aas
dec
cld
cmp
aas
adc
cmpl
add
dec
hlt
enter
sbb
jg
pop
jmp
push
add
lret
xchg
dec
inc
or
fldl
dec
lock
add
jmp
mov
jnp
pushl
dec
pop
cli
mov
mov
repnz
xchg
add
push
repnz
flds
pop
in
pop
loopne
sub
mov
jge
cli
add
or
sbb
pop
lods
fucomip
lds
push
imul
ds
loope
testl
mov
cmp
shl
mov
xchg
out
xor
js
add
pop
jnp
xchg
lcall
pop
in
insl
mov
outsb
and
sbb
jl
lret
les
in
je
push
add
stc
push
add
sub
sbb
inc
mov
add
adc
xor
jo
push
add
adc
jle
and
pop
lock
adc
mov
rolb
jl
inc
add
test
add
add
lock
mov
cltd
jecxz
push
sub
add
lcall
loop
sti
sbb
inc
jmp
sub
test
add
mul
stos
bound
sub
adc
add
inc
cld
push
cmp
dec
dec
add
cmc
loopne
pop
xchg
add
sti
rcrl
push
push
sub
nop
add
movb
pop
add
inc
movsl
int3
or
fistpll
mov
test
adc
jo
imul
add
xor
sti
push
scas
fildl
nop
xor
push
scas
ja
and
inc
push
or
or
fldl
fwait
and
out
inc
cmp
test
push
sub
jg
or
push
subl
push
out
mov
clc
add
fsubl
add
gs
mov
cmc
add
push
ljmp
lret
lahf
pop
or
clc
bound
add
dec
xchg
add
dec
xor
push
xchg
mov
add
int
testb
mov
bnd
sub
andb
adc
and
sahf
test
cs
add
xor
sbb
xor
outsb
movd
jge
and
xlat
aaa
mov
add
or
insl
add
jp
cwtl
je
pop
sub
sbb
mov
lds
jge
add
stc
addr16
int3
testl
add
adc
mov
mov
sub
and
jnp
push
add
popa
add
lds
add
push
insb
insl
pop
pop
dec
adc
fdivl
push
xchg
scas
nop
adc
push
insb
inc
arpl
outsb
jle
jmp
jae
cwtl
jmp
rclb
add
add
loopne
das
mov
adc
jae
and
fwait
add
jp
sub
dec
lea
add
sbb
xchg
loopne
jb
frstor
dec
or
mov
xor
sti
adc
push
add
sub
sti
inc
and
stos
rcrl
add
add
inc
imul
les
or
xchg
lods
fst
imul
jge
mov
int3
rol
jl
incb
sbb
insl
xor
out
sbb
je
repnz
jnp
daa
mov
mov
add
mov
add
bound
sub
aaa
repz
push
push
ficoms
jo
dec
aad
add
mov
and
sub
jmp
fadd
and
in
xchg
inc
mov
out
cmp
push
fdivl
and
and
sti
dec
ss
loope
pop
cwtl
mov
test
add
popf
pop
fsubl
add
sbb
popf
inc
adc
or
jb
testb
add
test
outsl
aad
inc
xchg
xorl
dec
jge
mov
pop
mov
sarl
adc
subb
aad
js
inc
and
sub
ss
push
lock
pop
ds
mov
add
stos
add
xor
cmp
stc
adc
push
cmp
sub
cmp
mov
or
push
in
cmpsl
push
sub
jmp
pop
mov
mov
xchg
fcomp
mov
repnz
add
and
roll
ja
inc
mov
std
dec
push
lahf
inc
sub
clc
insb
push
adc
pop
enter
outsb
imul
xchg
add
roll
addr16
jbe
mov
pop
mov
imul
ja
cmp
psubsw
xchg
jp
pop
mov
in
push
sbb
cli
daa
call
pushf
push
cli
jl
into
mov
js
add
push
and
jle
shlb
add
mov
mov
std
mov
push
mov
add
addr16
add
in
clc
loop
inc
xchg
push
add
test
add
mov
push
test
and
adc
add
jmp
or
mov
shll
add
add
movsl
mov
add
mov
lods
lods
pop
mov
xor
cmpsb
addr16
and
mov
xor
fdivr
stos
add
push
or
xchg
jl
jp
pop
dec
mov
inc
gs
add
addr16
cmp
push
mov
dec
leave
stc
mov
mov
ds
jno
bound
xor
push
and
sti
lock
sbb
out
sbb
or
lds
push
fisubrl
sub
add
xchg
sub
jle
loop
add
add
mov
stc
lock
mov
pop
aam
and
jne
push
mov
xchg
mov
pusha
rolb
add
fldl
int
jo
cmp
mov
pushw
inc
popa
int3
sbb
incb
fldenv
mov
daa
inc
stos
xor
add
jne
mov
add
repnz
pop
lea
xchg
loop
cltd
adc
in
add
addr16
or
fadds
bound
xchg
mov
sbb
push
xlat
jne
mov
sub
mov
lock
imul
pusha
jp
pop
xchg
push
stc
aad
add
sbb
bound
add
fdiv
sub
rolb
cmp
add
test
das
mov
add
fimuls
add
xor
test
mov
sub
jl
add
imul
dec
add
ret
mov
daa
jmp
sub
xlat
xor
push
and
push
popa
sti
mov
movsl
add
aam
adc
aaa
or
dec
cmp
sub
sub
add
andb
jo
lret
xor
cmpsl
ret
int
sbb
adc
add
add
movsb
cmpsl
int
add
xlat
and
aam
add
daa
add
pop
into
jg
jle
bound
stc
add
jns
pop
hlt
pop
jb
mov
cwtl
mov
inc
add
add
mov
pop
add
mov
jg
pop
push
hlt
dec
cwtl
push
adc
loopne
pop
nop
aam
mov
testb
lret
xor
dec
mov
shll
pop
mov
insb
xchg
test
sbb
je
jne
in
push
add
push
pop
pop
push
stc
or
lock
cwtl
leave
sbb
mov
scas
shlb
xchg
inc
jmp
hlt
jo
rolb
repz
pop
call
int
dec
bound
insl
jns
inc
std
test
push
cmp
mov
cmc
jg
sbb
scas
insl
mov
push
outsl
dec
mov
push
popa
jo
aad
ret
xchg
mov
add
inc
xlat
jp
fldcw
add
add
decl
stos
decl
push
popf
orl
or
add
dec
stc
sbb
sub
lds
js
or
inc
add
cmp
mov
out
mov
adc
sarl
add
fmul
mov
adc
add
ds
xchg
pop
mov
push
filds
xchg
add
lods
popa
jae
adc
out
push
data16
xor
daa
inc
mov
sub
cli
mov
pop
jmp
testb
int
jb
add
add
daa
insl
lcall
sub
jg
xlat
xor
mov
bound
add
mov
inc
push
inc
aaa
mov
add
movsl
mov
push
inc
pop
sbb
jbe
fcmove
test
cmc
sub
push
add
movsl
add
dec
xchg
inc
add
pop
add
pusha
leave
inc
mov
jle
push
sub
jecxz
fucomip
stos
add
cli
idiv
push
out
repnz
add
or
and
add
mov
les
rcl
push
xor
ss
or
xchg
stc
insl
push
fisubrl
mov
push
mov
sub
xchg
sbb
mov
ds
add
xchg
mov
jnp
imul
mov
pop
fstpt
add
add
ret
scas
mov
pop
sahf
loop
xor
add
xchg
pop
jbe
push
pusha
mov
add
jecxz
add
in
xor
jbe
mov
sbb
xor
or
cmp
add
sti
add
mov
mov
cmc
add
imul
push
addr16
testb
mov
jbe
sbbb
cmpsl
mov
add
addb
dec
mov
test
add
bound
mov
int3
lahf
rol
and
mov
add
addr16
gs
jae
xlat
and
or
add
jae
fldl
xchg
aam
pop
cmp
in
or
popa
push
add
add
pop
push
ret
add
aas
lcall
mov
test
int3
mov
mov
push
ret
repz
add
xor
mov
mov
cmp
add
sbb
sbb
movsb
adc
sub
inc
jno
cmp
mov
add
jle
add
shlb
pop
add
mov
jns
push
sub
adc
xor
jns
add
xchg
lods
add
add
loop
arpl
stos
inc
mov
inc
jmp
mov
jne
aas
ja
mov
mov
arpl
xor
lock
mov
aad
add
add
jo
xchg
insl
arpl
pop
add
hlt
xchg
in
adc
lahf
fildl
or
and
outsl
roll
stc
pop
sbb
pushl
arpl
fnsave
push
test
add
jmp
xor
xchg
and
cmp
out
mov
and
imul
push
mov
or
popa
add
xor
mov
add
imul
mov
arpl
add
inc
nop
add
or
adc
jno
repz
test
adc
xchg
insl
jne
out
and
adc
cmp
negb
cmpsl
repz
pop
bound
cmc
add
sub
test
add
pop
jo
sub
pop
rorb
orl
sbb
and
iret
testl
cs
movsb
cwtl
dec
adc
je
lods
add
push
cmpsl
add
and
mov
arpl
mov
add
je
add
fdivr
hlt
add
push
adcb
mov
adc
pop
add
popa
test
pop
jg
aas
add
jg
adc
push
mov
and
xchg
xchg
and
mov
shld
or
xor
lcall
nopl
fistps
xchg
scas
xor
or
pop
and
int
add
lcall
mov
push
mov
and
mov
pop
gs
test
je
push
mov
ss
or
pop
pop
add
add
cwtl
add
js
pop
js
cmp
mov
data16
or
popf
pushf
add
push
cmc
sahf
jle
sub
fimuls
sub
cmp
sbb
add
pop
jo
sbb
sbb
push
push
add
pop
aam
mov
xchg
add
push
divl
cmp
add
add
lret
inc
fdivr
fisubrl
push
stos
mov
les
jecxz
jnp
push
mov
std
aaa
inc
add
add
ds
mov
test
cld
ja
addb
in
add
mov
jb
std
mov
jo
into
sbb
or
fiaddl
push
adc
mov
jae
add
hlt
push
push
stos
rolb
mov
inc
mov
sar
xor
testl
jcxz
sub
cmp
fsubrl
lret
int3
jno
jl
adc
add
inc
add
add
insl
and
std
out
inc
insb
inc
add
push
cmp
push
ds
lahf
and
es
repz
jecxz
jecxz
jno
popf
cltd
outsl
clc
add
add
add
xchg
jg
add
and
ds
mov
add
data16
sub
in
cmp
jecxz
jle
fdivrs
xlat
in
mov
mov
repz
pushf
and
insb
lods
xchg
neg
mov
dec
xor
or
push
add
mov
mov
xchg
enter
add
subl
pop
push
xlat
push
mov
inc
add
mov
inc
es
cmpsl
sub
pop
add
mov
outsb
add
out
arpl
insb
mov
cltd
repz
push
stc
pop
stos
dec
cmc
icebp
in
lahf
dec
adc
stos
andb
jmp
in
xor
dec
les
pop
add
xchg
lret
jae
mov
dec
in
push
xchg
xor
fiadds
call
mov
leave
inc
pop
lea
and
adcl
add
call
dec
sub
mov
in
xor
fs
add
flds
jo
ljmp
loop
insl
cwtl
sbb
add
jns
cmp
mov
push
lds
ss
add
jns
mov
lret
xchg
cmp
je
inc
push
out
pop
mov
leave
icebp
add
jo
add
inc
stc
loope
subb
stos
popa
add
repz
push
les
and
or
mov
xchg
mov
clc
and
add
add
cs
push
lods
mov
lea
xor
push
pop
jp
inc
cs
lret
adc
fstps
sub
into
xchg
js
rorb
xor
in
add
jnp
insl
add
jae
xchg
das
add
xchg
sbb
out
mov
loopne
add
add
insb
inc
mov
out
push
mov
and
and
jbe
sub
repnz
mov
or
inc
fucomip
add
into
adc
xchg
loop
push
ljmp
pop
ret
add
cld
xchg
jl
arpl
mov
mov
and
loope
leave
clc
rcl
add
dec
sbb
jnp
int3
and
sbb
sbb
and
or
psrlq
outsl
xchg
sub
movsl
repz
sbb
les
dec
dec
add
jp
dec
stc
rorb
mov
push
xor
adc
xor
inc
divl
or
sub
jl
in
into
movsl
test
add
add
pop
add
jns
bound
shrl
push
cmp
in
add
lock
lcall
xchg
add
add
sarl
xor
push
jae
dec
lret
inc
add
inc
dec
lea
fwait
cmp
add
aam
adc
out
mov
les
add
pop
or
fisubl
mov
add
and
and
sub
push
cli
pop
add
xchg
cmp
add
push
daa
mov
mov
add
or
inc
xchg
addl
xor
jno
and
cmp
movsl
loope
bnd
cmp
fildl
add
inc
sbb
std
inc
xchg
loop
lahf
sbb
mov
push
push
add
ja
scas
and
push
movsl
and
sbb
das
mov
cwtl
add
mov
sbb
add
rol
push
insl
add
fstpt
ret
outsb
mov
lcall
vpperm
aam
xor
dec
shll
push
add
add
or
jae
add
push
fscale
add
cmc
xchg
push
jnp
ljmp
add
hlt
jnp
mov
cmc
push
lds
sub
adcl
fiadds
lret
pop
inc
arpl
add
int3
add
push
add
shlb
sub
xor
inc
jp
or
add
mov
mov
lcall
push
add
andl
ljmp
push
mov
add
add
ljmp
addr16
icebp
fdivs
mov
xchg
mov
jne
cli
andl
subl
ficoms
xchg
mov
aad
cmp
bound
out
pop
repnz
mov
xor
insl
imul
jp
pop
cmc
push
add
aas
loop
clc
lret
fs
stos
sbb
arpl
and
dec
inc
pop
mov
or
xchg
cmp
push
adcb
mov
jl
mov
in
ds
xor
stos
stos
in
aad
popa
add
sbb
js
lea
loop
cmc
add
ds
add
pop
add
inc
dec
fisubs
jecxz
rolb
enter
mov
add
mov
fcompl
push
add
cmpsl
adc
cmp
nop
rcrl
add
in
loop
push
add
jns
add
add
jb
das
add
sbb
jle
subb
in
mov
inc
add
pop
jno
add
stos
or
inc
mov
sti
xchg
adc
add
jmp
push
and
incl
inc
mov
enter
sbb
fdivs
and
aam
pop
gs
push
add
jb
scas
pop
xchg
mov
mov
dec
add
mov
popa
and
nop
mov
insl
add
shr
pop
lahf
imul
clc
push
data16
jle
cmp
push
fs
js
iret
mov
push
mov
sbb
or
cmp
fs
or
int3
inc
push
cmp
sbb
xor
dec
add
add
fptan
lea
hlt
aad
lret
and
sub
jb
fbld
mov
mov
add
add
mov
hlt
mov
and
pop
mov
ficompl
lods
mov
popa
mov
add
test
mov
push
mov
subb
push
lret
outsl
lock
lahf
stc
add
dec
js
push
add
and
inc
cld
das
cmp
push
mov
notl
sbb
sbb
mov
push
add
sub
test
test
data16
push
out
cmp
out
push
dec
sbb
fbld
xchg
jecxz
and
dec
mov
add
mov
add
dec
sbb
add
xor
add
and
gs
dec
add
cmpl
add
hlt
popa
rol
and
loope
ret
call
mov
push
and
adc
cmp
in
add
sbb
xchg
push
pop
mov
jo
xchg
pop
mov
insl
dec
addl
insb
shll
leave
inc
in
movsb
subl
jl
add
add
pop
loop
pop
lods
add
iret
in
push
push
xor
xor
out
shll
lret
jmp
mov
lret
and
fmul
pop
mov
jecxz
push
repz
add
mov
pop
cmc
outsb
lods
cmpsl
push
je
add
add
fldcw
cmc
mov
inc
jmp
xchg
add
repnz
jnp
add
fdivl
inc
add
enter
push
add
xor
cld
mov
add
or
cmpl
loope
add
leave
and
sbb
rcrb
push
add
mov
add
inc
ljmp
lock
push
inc
enter
out
outsl
lahf
pop
add
dec
add
jle
aad
cmp
int3
cli
sahf
decl
pop
xor
test
leave
inc
xor
loopne
sahf
add
nop
js
movsl
scas
sahf
scas
lds
les
dec
mov
add
fisubrl
xor
mov
add
add
dec
xor
lea
rolb
adc
pop
add
add
dec
cwtl
dec
add
add
mov
sahf
xor
push
push
lahf
aad
xchg
and
loop
stos
pop
add
and
push
test
adcb
lds
push
into
movsl
push
lods
add
incb
mov
xor
fbstp
jne
add
jo
sbbb
ret
loop
and
outsb
dec
sti
movsl
or
stc
inc
imul
fstp
add
add
gs
mov
push
sbb
lahf
add
add
jl
and
add
movsl
sub
mov
mov
das
jne
adc
sub
imul
or
fiadds
mov
xchg
int3
leave
imul
mov
mov
add
add
push
decl
pop
lods
xchg
test
add
sbb
pop
mov
cmpsl
and
movsl
inc
je
lahf
push
lret
jns
sbb
or
mov
sub
fwait
add
cmp
and
sbb
pop
dec
pop
pop
push
add
add
inc
adc
dec
mov
xchg
repz
loope
inc
pusha
inc
pop
aaa
sbb
push
inc
cmp
stos
lret
add
inc
int3
aas
xchg
jge
adc
js
int3
ds
aam
add
shlb
enter
mov
inc
pop
xlat
enter
push
pushf
insb
add
test
in
cli
aad
push
ss
push
push
jbe
mov
or
add
jnp
add
add
ja
push
je
ret
stos
cmp
popa
pop
sub
add
popf
stc
addr16
das
dec
sti
push
add
mov
xor
rcr
loop
lods
cmp
out
jecxz
sti
pop
jle
add
sqrtps
add
sbb
bound
xlat
or
iret
xchg
push
fidivrl
and
imul
sbb
cmpsb
and
jp
data16
roll
ret
push
add
nop
jmp
pop
push
dec
stos
add
je
xchg
shl
lcall
jne
inc
sbb
sbb
mov
pop
mov
add
xchg
test
add
into
add
xor
insl
lcall
int3
inc
out
jbe
pop
add
fs
outsb
add
test
add
add
fildl
push
imul
pop
jne
add
sbb
scas
pop
add
fwait
cwtl
pop
outsb
test
movsb
mov
sub
jbe
arpl
js
jl
dec
add
data16
xchg
dec
xor
mov
add
outsb
hlt
fildl
nop
fdivrl
call
out
push
faddl
ljmp
or
jge
add
lods
test
or
aad
mov
add
lds
das
into
pop
aad
rcll
dec
loop
popa
jmp
pop
dec
pop
leave
add
and
and
and
cmp
iret
mov
xchg
dec
push
jo
rorl
icebp
sbb
arpl
shlb
enter
js
sub
insl
repnz
cwtl
or
dec
xchg
add
add
jg
xchg
sub
js
dec
inc
jmp
mov
mov
es
xor
mov
aas
pushl
cmpsb
xchg
add
jl
ja
push
xrelease
sbb
sbb
scas
pop
pop
fcmovb
movl
cltd
xchg
pop
jmp
push
mov
sbb
xchg
sub
add
jecxz
jns
cvtpi2ps
add
cli
ss
mov
mov
add
in
add
add
mov
std
mov
sub
xlat
pushf
add
fildll
lcall
xor
adc
xor
arpl
add
bound
test
or
mov
jo
std
add
test
add
fcmovu
add
and
push
xchg
repz
add
sub
cmpsb
adc
or
aad
add
pop
jno
add
add
ja
add
xor
stos
or
mov
add
add
dec
lret
lret
and
sbb
or
jl
out
mov
popa
loopne
cs
pop
stc
out
xor
jl
and
inc
add
and
pop
or
add
add
pop
fldenv
add
pop
dec
pop
dec
out
sbb
xor
add
popf
or
out
push
fnstenv
and
or
xchg
inc
scas
out
cmp
int3
hlt
add
insb
rorb
mov
ja
jmp
sub
mov
rolb
jae
je
add
mov
lahf
push
shlb
inc
popf
enter
xchg
add
loopne
in
fldenv
ret
inc
push
aaa
in
sbb
xchg
lcall
inc
loopne
pushf
andl
add
rcrb
add
cmp
cld
xchg
hlt
sbb
mov
test
or
insb
mov
in
adc
push
clc
add
mov
fwait
enter
lret
add
outsb
fdivs
aaa
mov
xor
xor
mov
push
sahf
push
add
add
mov
insl
dec
es
jmp
add
jp
pop
outsb
aam
xor
pushl
mov
add
jmp
into
add
ljmp
ret
jecxz
add
call
xor
mov
call
ljmp
sbb
js
add
hlt
pop
cmp
mov
mov
pusha
aas
sahf
jp
sbb
add
lds
add
ftst
mov
add
out
jle
xchg
push
push
loope
fisubrl
iret
sub
xor
xorb
gs
data16
xchg
mov
add
mov
aaa
add
scas
les
mov
sbb
add
mov
add
push
add
insb
add
sbb
int
divb
test
mov
sub
in
incl
ja
add
loopne
jle
sbb
dec
xor
jecxz
add
ret
cmpl
pop
add
nop
bound
mov
lock
inc
ret
jno
mov
dec
addl
jne
sbb
aaa
js
loopne
jnp
fucomp
ret
in
lahf
add
adc
and
stos
or
xchg
mov
dec
add
mov
jo
mov
daa
cltd
push
jae
das
mov
enter
jecxz
ret
js
sbb
mov
add
mov
add
push
cli
fildll
and
mov
mov
scas
mov
addl
filds
mov
lret
xchg
es
mov
sub
cmp
mov
and
mov
add
push
sbb
test
and
loop
or
sub
daa
fidivrl
pop
and
loope
pop
add
add
and
pusha
sub
or
cmp
add
stc
dec
rol
sbb
pop
inc
jecxz
adc
push
xor
sub
test
add
dec
sar
leave
pop
shll
jmp
test
daa
adc
testl
leave
mov
sub
xchg
mov
sbb
jae
sbb
pop
jle
inc
std
lcall
xchg
inc
imul
xor
or
hlt
mov
jp
add
add
and
cld
pop
adc
lds
lock
inc
arpl
insl
cwtl
outsl
jnp
jns
test
mov
jge
cmpb
add
mov
pop
out
popa
stc
daa
test
lcall
cmp
shl
scas
les
add
inc
mov
add
pop
push
movsb
icebp
dec
mov
jns
faddl
and
shll
inc
push
mov
push
mov
add
stc
add
add
jb
lods
cmp
loopne
xor
lods
std
out
inc
xor
xor
sahf
push
dec
out
push
dec
add
add
pop
xchg
into
cmc
add
lock
push
data16
popf
cmc
add
outsl
int
ja
add
cmpl
add
or
mov
sbb
mov
jbe
std
adcl
mov
mov
out
ds
adc
add
dec
add
loope
or
sahf
sub
pop
and
lods
jbe
add
add
js
push
dec
jl
test
mov
cmp
and
push
adc
leave
sub
es
pop
lock
nop
mov
test
and
test
cltd
lret
pop
or
dec
xchg
dec
lds
push
orb
inc
xor
movsb
test
cmp
mov
add
jmp
jb
movsb
pop
cmp
push
mov
and
inc
fstl
rorb
or
mov
inc
xchg
add
test
push
inc
push
dec
add
movsb
cs
lods
xor
add
loope
call
inc
mov
pop
cmp
pop
pop
dec
fs
pushf
add
jmp
aam
adc
adcb
mov
push
mov
fbld
add
enter
jns
jno
movsb
mov
decl
je
pop
add
dec
jge
cwtl
jmp
push
adc
xchg
jne
inc
add
add
add
cmpsl
lods
cwtl
push
sub
push
mov
sbb
xchg
fiaddl
fsubrs
inc
lds
pop
jle
ljmp
add
imul
pop
hlt
push
add
mov
popa
add
loop
push
shrb
inc
mov
or
mov
and
mov
add
xor
pop
xchg
pushf
sub
arpl
pop
fs
out
sub
mov
cs
ss
popa
out
add
imull
mov
scas
jo
popa
jbe
or
add
test
lret
jg
data16
adc
pop
imul
add
pop
test
aad
lahf
mov
pop
push
pop
mov
push
mov
pop
sbb
jne
dec
icebp
incl
lock
cmpsb
outsl
jle
roll
jns
es
push
out
cs
imul
mov
insl
and
add
adc
add
into
mov
js
sbb
push
sbb
shlb
inc
stc
pop
imul
mov
inc
xchg
out
sti
out
dec
xor
in
push
test
add
sarb
out
add
in
mov
jno
testb
in
outsb
mov
repnz
lds
add
jmp
add
mov
nop
and
and
sbb
shll
mov
je
call
pop
scas
ret
ret
js
mov
mov
xor
es
or
loop
imul
add
xorb
insl
arpl
test
add
dec
mov
and
cmp
imul
jmp
mov
fisttps
shrb
sbb
xchg
popa
rcr
call
icebp
cli
sbb
add
xchg
push
jp
cwtl
xor
outsl
xor
pop
btc
ja
pop
imul
jg
push
and
inc
sar
data16
repz
mov
cmp
xchg
mov
xchg
xchg
cwtl
add
ret
out
add
sbb
inc
out
push
xchg
add
das
popa
test
add
add
es
mov
dec
add
jp
push
mov
dec
add
xchg
rcl
dec
out
cmp
insl
sti
sbb
jae
and
test
roll
leave
jmp
das
jbe
movsb
sahf
inc
push
notb
cmp
add
pop
cmp
jne
or
and
addr16
ficoms
and
adc
mov
test
aaa
mov
add
inc
in
jnp
jnp
lcall
push
mov
xlat
mov
call
jecxz
popa
cmc
pushf
stos
aam
xor
or
in
xchg
cmp
mov
mov
inc
jmp
add
sbb
das
and
movsb
fildl
mov
ret
add
clc
add
arpl
jnp
mov
jo
jmp
push
imul
jo
xor
xchg
outsb
hlt
scas
xchg
roll
lea
je
mov
or
add
mov
add
add
outsl
pop
imul
fildll
mov
rolb
xchg
push
sti
pop
lahf
cmc
inc
pop
xorl
xor
outsl
hlt
pop
lret
filds
loope
aam
add
icebp
mov
mov
pop
out
and
enter
hlt
inc
push
les
cs
jb
xchg
nop
jb
rolb
and
cwtl
cmpsl
mov
lock
jmp
nop
inc
movsb
mov
add
push
pop
mov
aaa
sub
add
mov
insb
mov
adc
or
addl
loope
add
mov
and
jno
cmpb
cmp
outsb
bound
add
js
or
mov
cmpsb
add
dec
adc
imulb
add
cli
je
sbb
hlt
add
roll
aam
add
add
mov
mov
daa
push
loop
sbb
pop
lods
inc
xor
mov
lea
cli
repnz
loopne
jp
mov
jnp
mul
movsl
popf
xor
or
xchg
or
pushf
xor
int
imul
ljmp
mov
cltd
mov
add
or
lea
mov
sahf
mov
shlb
fcompl
icebp
or
pop
nop
xor
mov
and
add
add
addl
add
and
mov
movsl
sub
shr
sbb
xchg
dec
lcall
add
push
ret
nop
jne
popf
in
lea
sbb
add
stos
jp
cmp
cmc
inc
jp
loop
std
inc
stos
mov
adc
sti
les
xchg
neg
jl
xchg
mov
pop
add
add
int3
xchg
and
rcrb
mov
push
cmp
add
jl
lahf
mov
lock
lods
sub
mov
cmp
in
jmp
dec
iret
push
jmp
mov
add
fnstcw
xor
subb
test
xchg
addb
mov
mov
xchg
jb
add
fisttpll
addl
mov
addr16
pop
cmp
xor
pop
or
daa
add
mov
add
test
in
aad
jnp
push
movsl
or
out
and
cmp
inc
pop
je
aam
sub
push
mov
add
ficomps
lret
int
mov
push
std
aam
xchg
xor
add
cmpsl
cmc
push
in
or
cmc
and
out
adc
adc
aas
inc
sbb
hlt
pop
mov
subb
fists
dec
mov
push
or
stos
popa
adc
insl
pop
add
add
es
fldt
lcall
sbb
mov
add
dec
dec
or
ja
ljmp
add
fidivs
lret
ret
push
jmp
js
push
add
scas
sbb
push
inc
inc
sbb
iret
sti
add
jnp
lret
adc
pop
jmp
cs
ds
mov
dec
test
mov
xor
mov
sub
push
sub
add
jge
add
add
popa
mov
add
add
sub
into
mov
gs
pop
data16
push
xchg
icebp
in
add
inc
inc
inc
or
push
inc
ja
or
dec
add
mov
test
mov
mov
jp
mov
mov
sbbb
lea
fsubrl
scas
fsubrl
push
mull
xchg
jns
jecxz
cmp
repz
mov
push
lcall
add
jecxz
cld
xchg
mov
js
leave
push
lretw
lods
mov
aam
les
jge
cmp
adcl
add
jl
or
fdivs
xchg
add
insl
paddw
or
je
push
loop
or
sub
imul
pushf
mov
popa
iret
jns
insb
and
add
adc
add
aad
in
add
test
add
pop
cmp
mov
cmp
aad
ss
add
test
stc
test
add
adc
cmc
out
imul
dec
and
sarl
and
jmp
push
out
mov
inc
add
imul
bound
xchg
push
jmp
mov
push
dec
add
xor
add
fdivl
jne
push
inc
stos
sub
xchg
add
add
xor
sub
imul
out
in
jl
adc
shrl
sbb
andb
je
popf
adc
nop
mov
xor
sub
mov
pop
adc
fldcw
inc
fnstenv
xor
stos
sbb
popf
bound
cmova
pushf
xorb
or
inc
mov
and
in
lret
adcb
addr16
lcall
cs
sbb
mov
out
out
add
mov
or
mov
fbld
push
pop
cmp
jae
or
add
cmp
pop
or
mov
add
lods
mov
clc
or
rclb
stos
scas
mov
or
and
test
in
cld
push
mov
xchg
add
mov
testb
lods
xor
sub
test
loopne
insb
imul
aas
pop
pop
ret
cmpsb
aas
shrb
xor
fidivrs
insl
fadds
roll
pop
jnp,pt
jns
sbb
add
addl
lcall
test
fisubl
imul
jle
add
cmc
shlb
jle
or
adc
mov
add
pop
sbb
sahf
fs
jbe
rcr
lret
dec
sbbb
add
add
mov
add
out
insl
dec
add
add
pop
push
push
popa
lret
cmp
popa
nop
mov
int
cmp
dec
into
lret
sbb
rcrl
inc
mov
loope
cmpsb
lds
arpl
add
mov
jp
or
pop
cmp
movsl
add
add
adc
ljmp
in
call
rclb
stc
add
out
add
add
push
xor
cwtl
aad
sbb
mov
dec
aam
fidivrs
add
lods
icebp
add
pop
int
inc
cmp
add
movsl
incb
nop
and
xchg
mov
xlat
xchg
adc
add
ja
in
add
add
sbb
dec
add
mov
nop
stos
add
mov
pop
cmp
cmpsl
xchg
or
jp
add
insb
testl
outsb
je
fnstcw
jmp
jbe
push
testl
cmpsb
cwtl
mov
add
int
push
pop
shlb
add
inc
test
stos
adc
jns
xchg
sti
fwait
call
add
imul
and
flds
aam
jmp
gs
fists
les
mov
popa
int3
add
jge
jae
push
pop
dec
sub
add
sti
add
notl
jae
lret
sti
inc
lahf
inc
mov
stc
dec
add
lcall
mov
dec
and
push
jmp
cmp
push
clc
cmp
jb
sahf
xchg
imul
mov
mov
jnp
fimull
cltd
jecxz
dec
fisttpll
sub
jmp
leave
add
xor
test
sarl
inc
mov
int3
aas
push
bound
mov
ja
repz
xor
add
or
nop
pop
arpl
jl
mov
inc
ljmp
xchg
fnsave
popl
sub
or
and
and
enter
xchg
lahf
add
inc
cmp
and
ds
js
inc
loop
adc
sbb
push
jo
jle
fsub
hlt
cmpsb
inc
inc
fpatan
mov
lahf
add
add
mov
dec
add
inc
icebp
pop
cld
mov
add
fisubrs
lea
pop
add
xor
pusha
pop
fldl2t
or
pop
lods
adc
testl
or
scas
mov
xchg
out
femms
mov
stos
loope
mov
cmp
sbbb
jp
popf
pop
xlat
cs
aas
stc
cmpsl
add
sbb
sahf
fucomip
stc
mov
and
jle
or
mov
xchg
sbb
roll
jae
js
sub
inc
pop
push
scas
and
sbbl
sub
add
pushf
filds
add
or
dec
push
pop
in
add
mov
in
add
js
adc
mov
bound
sub
pop
push
js
xchg
mov
cld
inc
test
add
fcoms
test
insl
fmull
in
clc
mov
mov
pop
stos
call
xchg
pop
stos
movsb
sbb
mov
loop
push
xor
dec
xor
in
adc
mov
jns
adc
lock
mov
mov
or
xchg
mov
pop
push
pusha
pop
lods
lea
mov
mov
ljmp
les
je
cli
sbb
mov
enter
sbb
add
jle
xorb
loopne
movsl
add
dec
push
add
repz
mov
add
sbb
and
jl
adc
dec
add
add
outsl
add
daa
negl
outsl
mov
add
jle
xchg
add
xlat
popa
or
push
fsubrl
jb
insb
fiadds
mov
xor
push
adcl
add
sbb
ret
push
je
pop
ret
cmp
cmp
aad
mov
enter
jecxz
jnp
dec
arpl
mov
in
dec
mov
enter
sbb
push
mov
insb
add
out
dec
pop
sarb
add
ljmp
popa
dec
pusha
stc
out
test
lds
hlt
mov
fisubrs
daa
add
mov
in
pushf
jp
sub
add
pop
rolb
sbb
ds
xchg
add
sub
xchg
mov
mov
xchg
sub
push
sub
push
cmovne
insb
add
add
add
fldl
ficomps
addl
and
movsl
lahf
jmp
add
sub
call
mov
inc
xchg
dec
add
mov
scas
dec
push
sahf
add
ficoml
add
mov
enter
lahf
out
stc
ljmp
mov
je
and
dec
rorl
dec
pop
mov
add
and
or
fsubr
in
int3
es
xor
jecxz
aam
add
cltd
push
cmpsb
cmpsl
fdiv
leave
and
sarb
add
sub
cmc
mov
scas
movsl
adc
nop
imul
mov
aas
pushf
add
outsb
mov
out
mov
mov
ficompl
add
pop
roll
jmp
pop
add
inc
pop
add
out
aaa
add
add
add
in
fsubs
adc
out
dec
mov
mov
dec
dec
add
jl
test
loopne
jb
xchg
in
fdivrl
push
fdivs
jo
mov
insl
and
xor
fsubp
adc
add
test
mov
push
sub
add
lret
mov
insb
mov
lock
pop
jle
out
add
xor
inc
inc
push
lret
lcall
mov
pop
adc
push
dec
add
scas
test
aaa
pushf
jge
push
inc
mov
sbb
mov
stos
inc
movsl
sbb
loope
add
orl
pushf
in
xchg
int3
out
int
loopne
sar
ret
and
push
add
mov
addb
push
insl
aad
pop
dec
arpl
mov
cmp
popa
stos
lock
aaa
xchg
cltd
into
jle
cmc
add
in
add
adc
movsl
sbb
jl
xlat
out
add
int3
mov
add
mov
pop
arpl
add
jp
sar
sub
cld
xchg
add
pop
aam
jge
test
lods
push
mov
add
inc
or
pushf
shll
pop
fistps
sbb
leave
add
lods
enter
push
popf
add
add
in
adc
add
pop
add
xchg
hlt
ja
int
inc
and
and
in
jb
xchg
push
fists
pop
pusha
mov
xchg
add
mov
jb
jnp
xor
test
jne
sub
stc
push
mov
std
out
adc
pop
test
call
movsl
pop
lretw
fs
pop
inc
dec
add
push
cmp
mov
add
jl
jae
xchg
jle
xor
inc
xor
loop
stos
push
xor
add
jo
pop
dec
cmp
stos
xor
test
js
les
add
bound
mul
in
popa
pop
test
test
popf
add
push
pop
jbe
orb
add
xchg
xchg
xchg
mov
xchg
mov
sbb
or
inc
xchg
addr16
jns
mov
adc
and
jne
insl
dec
and
add
lock
lods
xchg
add
aad
mov
scas
push
push
lret
cmp
cli
sub
outsb
movsb
imul
int
add
push
int3
outsl
xchg
and
fldcw
rcl
add
rcrb
mov
xchg
add
xor
dec
test
out
push
es
shlb
xchg
sub
add
aaa
call
in
repz
push
mov
outsl
push
pop
push
pop
testb
repnz
sbb
sbb
xchg
mov
jno
push
cmp
sbb
pop
mov
das
inc
sahf
lcall
cmc
jp
test
sub
dec
jbe
andl
jae
add
xchg
mov
sahf
push
in
mov
aam
imul
mov
sub
mov
add
lcall
mov
scas
incl
dec
add
mov
inc
fs
dec
stos
push
rolb
pop
pop
xor
aad
xor
mov
mov
idivb
inc
pop
add
stc
lcall
sbb
rorb
push
cmc
pop
addl
sbb
mov
out
add
sbbb
jno
add
and
inc
sbb
test
xchg
incb
test
xchg
shrb
sub
in
push
add
xor
mov
cmp
sbb
ss
std
subb
arpl
pop
jle
test
or
xchg
rcrb
adc
cmp
int3
nop
mov
sub
pop
leave
lock
jne
xlat
nop
mov
inc
cmc
and
addl
out
mov
xchg
mov
dec
enter
lods
cwtl
shll
mov
aad
add
add
mov
sbb
push
cld
pop
mov
stos
add
outsb
add
js
add
cld
fldl
jnp
dec
mov
push
out
loop
popa
shll
sbb
pop
push
imul
add
cmp
xlat
xlat
int3
jecxz
lret
out
cmp
sbb
popf
in
dec
mov
inc
dec
add
nop
sbb
sbb
add
xorb
ret
or
lods
arpl
movsb
sbb
das
js
mov
fnstenv
fisttpl
adc
mov
add
les
aam
js
mov
dec
dec
insl
scas
add
js
dec
add
xchg
das
and
das
jnp
pop
ja
dec
aas
inc
add
jecxz
es
sub
cs
mov
sub
pop
pop
fistpll
mov
inc
and
in
in
cmp
xchg
xor
popl
xchg
dec
inc
js
adc
add
mov
negl
cwtl
xor
add
fs
loopne
bound
in
add
mov
daa
sbb
cmp
lret
fs
scas
not
or
outsb
cmp
js
movsl
push
inc
mov
xor
cld
or
je
and
adc
dec
adc
add
lock
add
ror
ret
add
dec
popa
add
cmp
sub
add
add
add
pop
and
add
lret
pop
xchg
push
lahf
push
insl
sbb
add
add
stos
xor
push
packuswb
scas
in
jl
fiaddl
sbb
subl
imul
vpmadd52huq
lret
pop
int3
sub
dec
mov
adc
add
sbb
loopne
mov
add
xlat
push
repz
sar
int
jl
xchg
dec
stc
enter
jp
xor
push
lretw
std
jne
add
in
dec
pusha
cmp
and
or
es
adc
jnp
mov
data16
and
mov
add
push
cli
mov
add
add
std
lret
lret
mov
lea
in
add
cli
je
push
in
cli
andl
scas
mov
and
das
add
je
popf
stos
lock
add
cwtl
or
add
loop
cmc
mov
in
icebp
ficoms
add
js
fdivrs
xor
loop
cmpsl
arpl
out
mov
lret
pop
push
mov
popl
lret
xlat
aad
jo
scas
sbb
scas
mov
pop
in
in
hlt
add
ljmp
add
add
pop
clc
movsb
test
insb
mov
fnstenv
jp
sbbb
add
addb
add
clc
imul
dec
repz
add
xchg
add
enter
xchg
imull
jp
xorb
cltd
mov
aad
add
lahf
je
in
push
inc
pop
das
clc
fistpll
sbb
add
jne
popf
les
aad
dec
mov
add
jbe
xchg
stc
push
lock
imul
add
popa
mov
pusha
push
add
iret
jae
cmp
aaa
or
mov
adc
jmp
loop
lret
cmc
out
scas
in
xor
fisubs
sbb
fs
mov
sarl
and
pop
sahf
cmp
adc
dec
add
fwait
add
cli
sbbb
mov
mov
clc
sbb
adc
xor
shll
std
and
cwtl
hlt
adc
add
pop
stos
jne
add
jle
cmc
fstpl
pusha
lret
int3
adc
adcl
or
pop
lret
movb
cmp
dec
imul
jmp
clc
and
add
add
mov
leave
fsubrl
add
add
and
cmpsl
pop
jo
and
mov
cwtl
and
repnz
fwait
imul
fsubr
lods
push
pop
std
add
xchg
out
addb
jo
pop
pop
cmp
call
test
cmp
add
aad
push
or
add
jne
mov
sub
sub
popl
push
add
daa
outsl
add
jbe
add
hlt
ja
inc
es
lret
lods
mov
jae
hlt
clc
arpl
cltd
push
mov
pop
fs
and
shrb
je
xchg
imul
arpl
sarb
mov
sahf
ss
xchg
or
or
mov
flds
and
imul
sahf
rolb
xor
mov
add
xor
add
add
movsl
add
cmp
dec
in
xchg
pop
and
push
aam
add
push
push
push
xor
add
sti
out
mov
pop
mov
idivl
imul
rcrl
xchg
inc
lock
outsl
adc
mov
adc
inc
imul
sub
ficomps
scas
cmp
aaa
aam
xor
sti
add
arpl
fdivl
pop
and
mov
fists
add
cli
movsb
movb
cmp
cmp
cld
add
fisttpl
cld
jg
loop
ss
stc
jle
sub
imul
sbb
pop
jnp
and
xchg
mov
fdivrs
add
enter
jmp
pop
sub
xchg
clc
add
add
inc
add
test
scas
inc
sbb
inc
xor
fmulp
sbb
imul
cmp
push
xchg
add
xchg
mov
add
cmp
aam
in
cmp
pop
imul
ret
cmp
jmp
fildll
adc
dec
sbb
add
sbb
aad
lret
and
jl
xor
add
fsubl
sub
das
test
maskmovq
idivl
inc
jnp
mov
add
mov
add
jmp
add
iret
add
jecxz
aad
add
shr
into
cmp
add
xchg
add
sbb
pavgb
imul
dec
cli
push
jp
mov
sarb
jno
jns
test
iret
data16
andl
xor
das
add
dec
add
loope
xor
icebp
sub
push
aas
pop
sub
dec
jg
ror
in
cltd
js
inc
xchg
add
mov
loopne
fs
sub
bound
dec
int3
and
xchg
adc
es
dec
jle
pop
pop
and
lcall
pushf
or
iret
das
imul
movsb
mov
imul
jl
adc
lods
push
mov
pop
pop
mov
or
jne
inc
add
fwait
sbb
aas
out
das
ffree
test
mov
or
jl
push
add
sbb
and
scas
les
jl
xor
add
cmp
dec
rolb
cwtl
sub
or
mov
cmp
leave
xchg
scas
lods
pop
sub
add
and
jge
or
and
leave
add
insb
testl
hlt
es
rorl
out
push
jge
xchg
cmpsb
and
cmc
lock
add
lahf
stc
add
data16
add
push
add
out
add
pop
idivb
add
jno
jl
jno
add
add
sub
daa
add
loope
out
push
cmp
test
jae
fbstp
std
and
push
add
xchg
cmp
sub
add
pop
lods
mov
scas
add
lock
daa
add
pop
and
cs
loope
cmp
or
lods
mov
movaps
add
add
mov
lods
hlt
nop
sub
popf
movsb
pop
add
sub
popa
inc
xor
dec
cwtl
add
dec
jb
xchg
mov
pop
add
add
test
test
add
add
add
cmp
in
dec
mov
mov
ret
ljmp
adc
jle
shl
fidivl
push
in
adc
lock
dec
mov
dec
inc
lret
loopne
dec
sbb
inc
sub
add
add
imul
add
enter
fisubs
test
and
xchg
xor
lret
popl
cwtl
push
xchg
xchg
mov
xchg
and
aam
loope
mov
pushf
imulb
ss
mov
outsl
xor
in
lret
push
aas
jb
add
fisubrl
adc
sub
mov
js
mov
aam
pop
add
add
pop
add
cmp
jbe
xor
fcmovu
mov
ja
mov
inc
test
outsb
mov
and
xchg
add
add
pop
jo
add
or
add
add
cmpsb
gs
inc
scas
sbb
sbb
leave
in
cmp
add
mov
or
movntq
out
mov
sahf
in
stos
add
cmp
ret
add
pushfw
or
push
mov
pop
cs
bound
int
ds
inc
sbb
lods
push
mov
xchg
data16
mov
or
dec
repz
inc
popf
add
jne
add
mov
sbb
push
lock
call
pop
adc
cltd
in
out
cmp
adc
addb
or
push
mov
pusha
or
cmpsb
pop
sbbl
fwait
cmpsl
xor
cmpl
inc
cmp
adc
imul
add
and
lea
inc
push
mov
add
cmp
add
and
add
ljmp
sbbl
add
xchg
or
add
sahf
jl
jnp
and
sbb
dec
cld
adc
aaa
in
daa
pop
mul
add
cltd
inc
jp
in
sub
cli
add
or
adc
adc
add
lods
ret
js
push
add
mov
push
jnp
cmpsb
pop
fs
dec
das
mov
inc
fs
add
arpl
add
lret
mov
mov
in
lods
push
mov
pop
add
mov
mov
lahf
movsl
dec
adc
xchg
add
jp
fildl
sbb
xchg
cmp
leave
aaa
add
add
mov
mov
mov
std
inc
loop
add
inc
mov
sub
or
pop
jb
clc
int3
repz
add
or
add
jge
adc
jo
shrl
cltd
push
inc
ja
mov
in
cmp
lods
push
jmp
push
xor
dec
add
je
ss
mov
add
aas
add
add
lods
mov
mov
and
clc
add
sahf
data16
xchg
and
xchg
mov
sbb
fidivrs
xorl
pusha
xchg
ja
aaa
insb
add
out
inc
push
mov
fnstenv
cmp
arpl
shrl
cmpsb
outsl
lds
mov
push
push
sti
test
enter
repz
add
cmp
jl
and
pop
xchg
cwtl
adc
notb
push
int
xorl
idivl
push
push
mov
add
cmpsb
add
scas
xchg
dec
test
sti
incl
iret
mov
push
xlat
add
push
imul
inc
add
jle
dec
sbb
sub
stc
lock
push
jmp
sbb
sbb
das
jnp
cmc
out
fidivrl
add
inc
and
jb
in
push
or
test
cmpb
add
sti
in
aam
inc
sbb
fistps
dec
lea
cmpb
pop
inc
jno
add
into
or
loop
jecxz,pn
sub
or
mov
mov
addr16
add
xchg
add
add
add
leave
sub
test
insb
ja
add
sbb
fimuls
ds
jno
lcall
fs
or
and
and
fcmovnu
imul
repnz
or
imul
mulb
leave
cmp
mov
jnp
add
popa
dec
lret
and
addb
js
push
clc
leave
sub
push
aas
stc
dec
sbb
popf
xor
pop
fisubs
pop
push
add
lret
insb
inc
into
cmp
mov
adc
imul
add
push
xor
test
inc
push
sub
add
jb
add
data16
jp
stos
data16
xchg
mov
push
movsl
mov
inc
rcl
or
xchg
mov
dec
cmp
and
push
fmul
incb
repnz
ficoms
in
sub
push
sbb
dec
outsb
add
stos
add
sbb
inc
and
inc
loopne
push
pop
lods
loop
mov
data16
repz
jns
and
lahf
add
add
cmc
mov
add
out
cmp
into
test
lcall
xchg
mov
mov
mov
pop
shll
test
add
pop
ss
mov
ret
shrb
add
sbb
add
inc
jle
cmp
add
add
clc
outsb
push
dec
jo
mov
push
xor
into
xor
mov
inc
mov
push
jbe
aam
sbb
and
xlat
mov
xchg
fdivrl
icebp
in
in
testl
lods
mov
out
out
lahf
out
loop
popa
add
arpl
adc
lret
loopne
pop
popf
dec
movsl
add
add
sbbl
sub
xor
xchg
outsl
fadd
push
jae
sub
daa
in
add
pop
add
add
popf
adc
jge
and
add
loop
mov
add
add
js
in
add
or
movsl
add
in
add
jnp
mov
sti
mov
inc
cmpsl
mov
mov
mov
leave
mov
add
test
cmpsb
add
outsl
push
nop
cmpsl
or
pop
leave
pop
sub
stos
outsl
inc
push
add
inc
add
xor
int3
repnz
flds
fwait
add
bound
sbb
push
xchg
add
mov
imul
lods
push
fadds
adc
cmp
xor
out
clc
sub
mov
mov
imul
aas
add
add
xor
xor
push
xchg
repz
repz
mov
add
lahf
adc
push
out
cmp
cmpsb
add
cmp
ret
movsl
daa
mov
add
inc
lret
int3
out
lahf
lahf
mov
dec
mov
insl
pop
push
xor
cs
rcrl
mov
add
sbb
pop
add
jmp
adc
into
lret
jno
jnp
fwait
xchg
out
faddl
xchg
inc
out
inc
sub
pusha
mov
pop
dec
addr16
jbe
aas
pop
cmp
test
sbb
mov
cmp
aad
jo
sub
sti
mov
rolb
hlt
xchg
icebp
ret
fidivrl
cmp
xor
std
mov
jnp
insl
fists
adc
mov
incb
ss
and
inc
mov
and
add
pop
insb
hlt
in
dec
xor
mov
sub
fwait
add
pop
mov
pushf
add
adc
leave
aad
aas
test
sahf
shl
push
add
cltd
mov
push
xlat
roll
add
inc
popa
add
xchg
xchg
cmp
inc
mov
insl
aaa
aad
loopne
or
mov
sbb
sub
sahf
sub
add
insb
jg
arpl
add
rol
mov
dec
test
adc
mov
adc
pop
fnstenv
and
xchg
push
and
pop
add
push
insl
push
sbb
xor
loope
xchg
add
xchg
mov
movsb
adc
xchg
dec
out
add
movhps
jb
xchg
hlt
test
add
pop
push
xor
das
push
lods
cwtl
inc
xchg
add
dec
imul
jle
add
pop
add
int
test
pusha
pushf
test
aas
lock
sldt
hlt
les
jecxz
or
and
popa
insl
jno
adc
mov
cmp
lods
or
fiaddl
in
dec
repnz
scas
add
pop
sbb
pushf
repz
add
xor
xchg
jle
add
jmp
mov
mov
repnz
lock
test
cmpl
pop
add
sub
adcb
or
jbe
add
jle
movsl
pop
push
lock
loopne
shlb
add
add
iret
jecxz
push
popf
movsl
arpl
stos
xchg
fwait
pop
xchg
sub
xlat
mov
cmp
push
xor
sub
jne
pop
add
notb
mov
and
add
mov
gs
add
push
and
aas
ret
icebp
fsubl
adc
ljmp
and
flds
pop
ja
jle
dec
rolb
imul
ficoms
xor
add
das
cltd
xlat
repz
add
xor
xor
push
stos
add
push
add
add
or
xchg
or
push
mov
lret
in
es
inc
add
adc
add
ljmp
dec
inc
les
pop
fbstp
loope
xchg
cli
lock
push
inc
mov
jp
add
andl
rorl
adc
stos
push
lret
out
fiaddl
and
out
adcb
and
dec
clc
cmp
xchg
dec
fnstcw
sub
push
cmp
sbb
lahf
cmc
insl
repz
rolb
fiaddl
sti
dec
inc
stos
scas
scas
or
jo
mov
jo
xor
mov
push
sbb
cmp
lods
sub
sub
pushf
push
popf
add
push
cmc
mov
add
xor
fs
scas
and
mov
add
add
mov
adc
scas
jbe
inc
add
js
and
dec
sub
inc
repnz
aaa
dec
lahf
xchg
mov
push
cmp
xchg
out
adc
sub
add
xor
loop
add
sub
push
add
ja
js
insl
mov
push
dec
add
jb
in
push
mov
xor
das
add
pusha
cmp
mov
test
jns
mov
dec
mov
outsb
dec
mov
mov
add
aaa
out
aaa
jl
ljmp
mov
lods
xchg
adc
add
inc
push
xchg
push
add
add
adc
ljmp
mov
dec
dec
popa
add
jne
data16
idivl
aas
scas
lock
add
lcall
mov
dec
mov
push
jmp
jbe
sbb
add
jne
popf
pop
push
test
jae
or
sbb
lock
mov
mov
cld
pop
loope
push
inc
jno
add
aaa
inc
lcall
movb
cs
ret
je
cli
pop
fwait
js
or
add
push
inc
xlat
mov
cmp
jge
add
add
xor
cmp
mov
or
mull
cmp
out
dec
daa
inc
xor
cmp
pushl
and
out
je
lret
fmuls
pop
add
sub
sbbl
in
stos
and
fildl
inc
dec
xor
shrb
xor
std
jae
scas
add
pop
xchg
add
jno
in
hlt
mov
sbb
ljmp
imul
ljmp
adc
pop
add
aad
add
fmuls
add
push
cwtl
add
mov
inc
into
sub
mov
and
mov
addl
jg
xchg
je
sbb
jl
mov
dec
bound
push
imul
repnz
add
out
aas
loope
mov
cmc
mov
icebp
add
mov
stos
jns
fiaddl
gs
push
add
pop
and
dec
js
cmpsl
in
mov
cmp
or
dec
push
add
in
repnz
jne
add
fdivs
adc
popa
loopne
sbb
or
push
pushf
inc
sbb
push
mov
sti
mov
rolb
sub
jle
jp
xchg
and
adc
fstpt
push
popa
or
jns
add
aad
ljmp
es
out
mov
sbb
pop
jg
lods
adc
test
imul
push
inc
test
cmpb
outsl
pop
or
jnp
cmpsb
inc
pop
cmpsl
test
daa
pop
mov
movb
pop
dec
add
loopne
fsubs
scas
lods
lds
add
test
testb
ss
jbe
jge
jmp
jp
ss
lock
shlb
pop
push
shrb
jge
mov
jnp
imul
jb
xor
std
mov
xor
xchg
cmp
and
fs
pop
sub
xchg
add
inc
aad
cwtl
adc
inc
inc
aam
mov
mov
testb
outsb
gs
mov
xchg
inc
js
inc
add
fs
cmpsl
add
leave
mov
daa
movl
mov
or
aas
mov
xchg
jne
outsb
mov
hlt
sub
lcall
ror
push
add
dec
add
push
adc
dec
decb
dec
outsb
cmpsl
fisubrs
sbbb
jge
sbb
jg
cmpb
add
xor
cld
out
add
sahf
mov
sub
inc
clc
in
add
cmp
loope
stos
add
jmp
cli
add
cmp
out
mov
lock
subl
add
jno
sbb
add
fcomps
add
push
imul
jmp
out
inc
add
xchg
pop
clc
mov
into
sub
xchg
out
pop
push
test
ss
inc
popa
fstps
popa
mov
jne
inc
mov
movl
or
daa
add
mov
cmp
xor
in
sbb
ret
inc
or
add
push
cmp
pop
inc
xorb
movsb
insb
fcoms
into
outsb
enter
add
mov
and
inc
cmp
sub
add
mov
add
xchg
jge
xchg
dec
cld
adc
lods
cmc
lcall
pop
je
stos
xchg
xchg
dec
and
fstl
xor
mov
pusha
scas
add
mov
add
jge
xchg
mov
lret
icebp
add
jnp
xchg
add
jnp
lock
cmp
test
and
ret
in
add
test
jb
or
les
xor
imul
jmp
jb
add
mov
jl
pushf
sub
testl
movq
div
add
dec
mov
test
in
incl
dec
sbb
sbb
pop
mov
rol
sbb
jge
cltd
xor
pop
cmc
jp
in
mov
mov
add
push
add
loopne
xchg
pop
add
fisubrl
add
mov
and
jne
loopne
js
add
fisubrs
add
add
dec
mov
pop
out
add
cmp
inc
add
mov
jae
add
dec
addr16
cmpsl
ljmp
sbb
shl
jnp
lock
jmp
je
inc
pop
adc
dec
jg
push
jne
lods
and
imul
push
push
xor
jge
xor
addr16
push
xchg
add
pop
shl
add
sbb
jae
push
adc
pop
pop
lcall
ja
mov
leave
pop
test
and
jbe
add
popf
add
ja
and
loope
sbb
das
pmaddwd
add
jnp
je
bound
fsubr
and
jnp
mov
mov
cmp
incl
xchg
das
fcmovb
add
cmpsb
push
sbb
inc
xor
test
xchg
dec
cwtl
notl
xchg
mov
das
bound
pop
jns
rolb
test
add
test
sbb
pop
pop
add
popa
leave
lret
repz
ret
add
imul
inc
ret
dec
in
mov
jae
xor
add
add
mov
lods
adc
fcoms
out
push
cltd
js
lret
lcall
xchg
fdivl
dec
rolb
mov
lods
loop
push
mov
pop
imul
cmp
mov
add
adc
xor
int3
imul
xor
pop
push
rclb
mov
add
addb
add
push
pop
sbb
and
shll
add
push
nop
mov
aas
add
add
stc
add
jp
adc
repz
mov
fldcw
jl
shrl
mov
xchg
nop
and
clc
add
in
stc
sub
add
and
ss
add
and
cmpsl
fistpl
sub
inc
jle
sub
rorl
fwait
lods
notb
mov
pop
std
or
pop
jmp
rclb
mov
mull
add
cld
jno
out
pop
adc
jmp
lahf
cmpsb
aad
sbb
sbb
outsl
xor
fcompl
mov
lock
xchg
add
push
and
imul
sub
and
and
xchg
pop
add
call
es
ret
rorl
push
adc
pop
jge
mov
add
iret
dec
or
pop
insb
and
or
push
xor
int3
jle
push
sti
bound
repnz
lcall
mov
lods
sbb
out
aad
xor
and
ljmp
dec
add
push
push
add
sbb
fstp
xlat
es
div
je
nop
push
xor
mov
add
dec
jl
ja
dec
stc
insb
and
and
addl
aas
jmp
addr16
aad
xlat
xor
fdivrs
add
test
lahf
call
sub
addr16
test
insb
dec
xchg
xor
out
repnz
call
cmp
arpl
call
repz
sbb
pop
nop
jb
rclb
nop
add
std
hlt
incb
mov
jmp
sti
jecxz
fwait
sub
test
negl
mov
fnstcw
nop
sub
xor
aas
mov
iret
push
loope
jno
fbstp
mov
std
mov
sub
mov
mov
and
int
pop
push
xor
and
adc
in
roll
add
pop
dec
add
scas
inc
xchg
xor
dec
jge
push
add
sub
js
out
and
stc
test
scas
lret
jae
adc
xor
xor
pushf
add
xchg
out
jle
out
cmp
jno
lock
sub
dec
aad
cmc
push
arpl
movl
add
mov
test
xchg
push
jecxz
jg
arpl
adc
inc
cmp
pop
push
insb
fiaddl
shr
xor
xchg
xor
inc
push
push
add
sub
cmpsl
and
lret
mov
test
pop
pop
mov
ljmp
inc
mov
jae
xor
mov
pop
out
lahf
add
push
inc
add
push
in
adc
data16
and
test
fiaddl
jb
add
add
or
lret
xor
pop
jecxz
adc
sbb
fdivl
cmpsb
jae
sub
dec
dec
sbb
push
clc
sbb
add
das
mov
dec
adc
out
jb
xor
jae
adc
addl
xchg
cmpsl
add
adc
or
inc
xor
in
inc
add
imul
dec
leave
or
xchg
jne
leave
icebp
inc
fucomp
insl
lret
frstor
lods
add
insl
add
cmp
add
xchg
jecxz
jae
jnp
imul
jo
icebp
out
shlb
sub
cmp
cmpl
add
jne
jae
out
xor
adc
shll
pop
jmp
jns
loope
fisubl
cwtl
in
das
jnp
cmp
hlt
jmp
push
xchg
insl
cli
add
mov
add
mov
call
daa
add
int
jl
mov
repnz
jmp
xlat
jbe
dec
jmp
lcall
add
imul
jecxz
in
outsb
xor
sub
daa
push
inc
or
jo
shlb
mov
add
aaa
lret
pop
imulb
aam
test
xchg
jb
cmp
sub
outsl
cs
jne
cli
sahf
and
inc
test
lods
scas
test
loop
add
pop
add
pop
bound
add
lock
mov
es
shlb
in
jg
std
add
sub
jge
add
pop
leave
std
add
adc
daa
push
cmc
jge
jge
adc
aad
xchg
jl
add
dec
ljmp
or
popf
push
lods
mov
push
hlt
cmc
push
hlt
sbb
add
movsl
mov
repz
push
lea
push
or
cmp
add
add
push
iret
fistpl
mov
add
scas
push
push
outsl
sti
test
imul
sub
adc
push
jmp
dec
inc
clc
les
cmp
add
mov
lock
sahf
sbb
pop
cmp
add
xor
ja
cmpl
add
cltd
insb
add
mov
js
xor
pop
adc
fnsave
sub
gs
fnstsw
in
pop
add
add
scas
cmp
outsl
inc
lret
xchg
sbb
adc
imul
add
insb
add
dec
jae
xor
jo
mov
mov
mov
popa
mov
mov
add
and
nop
mov
inc
or
mov
lcall
jno
add
call
push
sti
lock
jne
push
push
sub
ret
mov
shrl
mov
std
cltd
xlat
mov
int3
inc
jbe
pusha
push
mov
add
in
call
sub
cli
addl
test
xlat
mov
add
xchg
push
add
inc
fimull
add
dec
xchg
push
ds
jae
movsb
or
mov
cmp
lock
imul
cs
mov
pushf
aam
mov
pop
jmp
add
mov
mov
das
stc
add
add
int3
xchg
dec
sub
add
rcl
add
cmp
or
cmp
xor
gs
mov
jle
add
cmpsb
test
inc
push
xor
outsb
sbb
adc
flds
int
dec
xor
loope
dec
inc
pop
repz
dec
movsb
add
sbb
add
push
add
insb
sbb
or
or
jno
jle
jl
or
pop
dec
clc
cmpl
ja
push
add
sbb
andl
test
stc
out
mov
mov
rolb
and
frstpm(287
repz
stc
add
movsb
loopne
cmp
popf
popf
fcoml
pop
adc
enter
add
pop
sbbl
or
pop
aad
fwait
out
enter
xor
subb
and
sub
aad
inc
and
hlt
pop
pop
ficoms
out
jb
add
test
insb
scas
adc
add
mov
or
ljmp
mov
orl
cmc
cmp
mov
ficoml
inc
jae
std
xor
xor
js
aas
inc
cltd
insb
test
pop
pop
push
jge
sbb
jae
gs
lods
pop
pop
daa
sbb
add
repnz
add
cmp
mov
andb
repnz
adc
sub
pop
add
mov
push
push
dec
add
dec
icebp
and
mov
inc
add
rclb
add
lods
in
scas
push
pop
popa
ljmp
inc
ja
stos
mov
in
or
leave
add
cmp
stos
jmp
out
or
loopne
mov
push
ja
add
dec
add
jg
scas
std
jmp
add
push
arpl
jo
daa
sub
rcrl
adc
int3
bound
ljmp
lea
int3
add
add
jbe
jb
cwtl
je
loope
add
mov
insb
js
cwtl
add
add
fsts
insl
dec
loop
mov
outsl
adc
mov
inc
add
and
fidivs
add
lods
add
add
out
test
adc
add
stos
sbb
push
pop
insb
in
jle
fdivl
dec
mov
push
pushw
loop
add
and
mov
aas
inc
mov
out
lods
test
in
int3
inc
mov
mov
and
add
mov
jge
pop
add
or
mov
xchg
inc
add
add
mov
aam
mov
sbb
add
mov
inc
dec
addl
and
mov
sahf
dec
fucom
lock
pop
dec
push
loop
sub
add
xchg
add
aaa
mov
lahf
sbb
testb
clc
push
xchg
mov
inc
xor
inc
push
loopne
pop
cmp
lahf
pop
add
add
out
add
aas
int3
inc
add
add
add
xor
dec
cmc
sub
adc
add
sub
push
add
decl
push
rcr
scas
andl
add
loope
xchg
xor
cmpsb
jo
aam
hlt
dec
pop
outsb
xchg
dec
mov
andl
aaa
and
ds
bound
dec
add
inc
repnz
add
incb
cwtl
lret
orl
out
adcl
jnp
lahf
pop
out
push
jp
data16
rcll
imul
pusha
ret
add
sub
mov
inc
lahf
push
fwait
cmpsl
mov
push
je
test
mov
iret
cmp
add
rorb
cmp
icebp
push
fidivrl
lahf
add
cmp
pop
imul
push
push
mov
sbb
clc
out
je
cmc
enter
or
sbb
xchg
add
add
clc
fildll
ss
add
dec
int3
mov
sub
push
jecxz
dec
fsubs
add
rclb
inc
insb
fisttpll
cmp
mov
inc
mov
clc
clc
les
outsl
jmp
fwait
insl
mov
xchg
xchg
and
pushl
mov
sbb
add
ss
or
add
push
jno
push
xor
sub
pop
cmp
imul
outsl
imul
adc
outsb
adc
add
dec
arpl
xchg
out
mov
aaa
xchg
movsl
aas
jmp
popa
inc
jb
jecxz
inc
ljmp
dec
pop
fiaddl
cmp
scas
insb
repnz
into
mov
cmpsl
leave
mov
lret
aaa
mov
cli
verw
addr16
faddl
inc
cmp
sti
lock
out
sbb
je
pop
lret
lds
xor
daa
mov
divl
addr16
out
add
jge
movb
enter
xchg
pop
iret
xchg
add
add
pop
aas
lock
add
hlt
repz
dec
dec
mov
mov
clc
stos
add
pop
out
sahf
inc
lea
push
mov
add
cmp
push
aam
movl
in
adc
es
ret
mov
repz
bound
hlt
xchg
fstps
xor
xor
flds
jl
xor
add
pop
or
mov
sbb
cld
out
add
add
add
rcrl
out
push
adc
add
out
push
add
dec
mov
add
pop
sub
cmp
add
lods
inc
jge
pop
xchg
xor
pop
rcll
dec
adc
add
lods
jl
pop
lldt
jno
adc
or
popa
jns
dec
jne
add
inc
dec
sbb
mov
cmp
mov
add
add
imul
movb
ret
insl
fadds
into
in
dec
add
call
aas
dec
pop
sub
push
pop
neg
mov
jae
orl
gs
scas
sbb
out
adc
dec
andl
andb
dec
dec
jo
add
dec
xchg
xchg
rcrl
sub
iret
sbb
mov
pop
loopne
fiaddl
insb
add
gs
push
dec
push
mov
daa
xlat
mov
les
outsl
daa
repz
sub
outsb
leave
cs
cltd
sbb
adc
or
xor
and
add
je
cmp
mov
daa
inc
lds
push
add
fildl
jge
decb
or
add
mulb
icebp
insb
xchg
or
rorb
js
repnz
push
test
in
daa
cmp
orb
ficoml
mov
jnp
jns
fistpl
pop
dec
and
and
in
and
add
and
lcall
add
lods
mov
cmpsb
xor
lret
add
out
ja
add
mov
add
mov
mov
sbb
pop
es
aaa
dec
ja
xchg
dec
or
cli
pop
pop
adc
shll
push
add
dec
pop
xchg
repnz
movb
jl
daa
pushf
enter
dec
in
cmc
outsb
mov
cmp
leave
incl
inc
sub
sbb
mov
sbb
leave
mov
sub
test
or
out
jo
stos
popa
icebp
mov
push
cmpsb
fstpl
push
test
add
add
loopne
jb
cmp
pop
fs
insl
ljmp
cwtl
iret
sub
in
sub
iret
push
shlb
lods
divb
sub
fldcw
cwtl
push
add
and
bound
ja
out
mov
ja
jbe
nop
xchg
dec
add
popa
push
sarb
mov
into
xorl
cmp
inc
jnp
push
bound
sbb
scas
cmpsb
add
jns
insb
lea
mov
lods
mov
repnz
mov
inc
andl
adc
xchg
xor
xchg
mov
subb
sub
pushf
mov
and
incb
data16
dec
jae
push
xor
int3
push
ficoml
mov
cmp
andl
push
add
pusha
rcr
push
pusha
add
popa
mov
shll
fs
jmp
add
aam
popf
jecxz
insl
mov
cwtd
cmc
add
inc
mov
fsubr
test
addb
add
push
out
leave
xor
cli
faddp
cmp
pop
cwtl
rolb
fcomp
lods
lods
or
add
xor
outsl
pop
mov
lea
dec
xchg
fmuls
push
lods
add
imul
dec
or
xor
add
jb
sti
lret
inc
add
repnz
push
pop
divb
shl
int3
lea
mov
mov
sbb
and
sbb
mov
xor
insl
pop
xchg
lods
sbb
lods
sti
pop
insb
daa
stos
mov
add
in
adc
add
enter
incl
sub
aad
fisubrl
jo
adcl
es
add
lds
jecxz
push
out
cwtl
adc
add
add
data16
sti
les
add
test
lds
add
add
push
jae
lds
pop
mov
xchg
push
add
lret
dec
mov
push
sbb
insb
outsb
sbb
mov
xchg
ret
xchg
or
pusha
dec
cmpsl
insl
orb
push
mov
add
sbb
aad
pop
mov
loopne
cs
sub
xchg
and
aad
mov
fldt
fwait
sarb
add
dec
push
shll
cmpsb
add
add
mov
push
int3
push
sub
inc
shlb
lcall
push
test
ja
jecxz
inc
xor
loop
in
lods
push
fwait
mov
sbbl
add
cld
adc
add
adc
out
sub
or
ljmp
dec
jo
ja
dec
mov
add
add
aad
add
add
inc
and
stos
add
add
adc
dec
lret
push
add
out
insb
and
fcmovnbe
out
bound
cwtl
cmp
add
mov
add
stos
shlb
jne
testb
lahf
cmp
popf
repnz
popl
push
pop
add
sarl
fistpll
push
push
xor
xchg
jmp
das
add
fwait
loope
add
sub
lcallw
xchg
cli
mov
dec
filds
jge
aaa
stc
mov
ds
mov
loop
popf
out
xor
and
cmc
add
cld
imul
cmp
stc
xor
insl
cmp
je
jmp
lods
lods
fmulp
popl
pop
xchg
mov
mov
cmp
out
add
mov
add
fadds
or
outsl
adc
fistps
pop
dec
sub
out
xchg
add
mov
mov
lods
push
mov
mov
mov
out
insb
add
dec
loope
rorb
or
or
pop
add
popf
test
dec
push
pusha
in
inc
int
and
add
or
xor
add
jne
xchg
stos
add
test
in
fldenv
adc
mov
xchg
nop
sbb
pop
dec
stos
jg
rcrl
adc
imul
pusha
data16
mov
mov
adc
or
and
mov
insl
pop
jb
or
add
xor
roll
add
push
and
push
lea
xchg
jno
mov
jp
movnti
mov
cmp
xchg
mov
test
push
leave
jp
enter
test
mov
pop
dec
loope
lods
orl
and
addl
xorb
in
sub
pop
xor
xchg
nop
js
add
add
outsb
cs
adc
push
jae
insb
xchg
add
addb
mov
and
nop
jbe
xchg
push
mov
popf
inc
mov
adc
sub
adc
xchg
ret
inc
shr
add
mov
xchg
inc
add
ficomps
sbb
int
lock
sub
jmp
roll
fildl
fldt
popa
or
pop
pop
pop
add
mov
and
mov
mov
cmp
fstpt
or
call
icebp
addr16
jnp
addb
inc
insb
ljmp
or
popa
push
cmp
dec
mov
rcll
add
faddl
adcb
or
push
in
lret
test
add
add
bound
aaa
pop
xor
pop
mov
mov
lcall
lret
in
orl
add
cs
add
cli
lret
out
add
pop
mov
fwait
mov
xchg
aam
cmp
xchg
add
dec
jl
je
rcr
sahf
lea
add
pop
movsl
mov
leave
out
sbb
loop
inc
je
cmp
jge
inc
xor
incl
mov
add
mov
add
add
push
add
push
sub
cwtl
fldl
sti
test
fldl
jle
inc
pop
rorb
int3
das
mov
add
lods
push
int3
ss
add
inc
sahf
jle
cli
mov
fmull
mov
sbb
aaa
repz
adc
add
sbb
push
int3
out
mov
add
dec
sarl
shrl
push
test
repz
add
mov
xchg
ss
mov
ja
push
gs
inc
fnstenv
loop
xor
mov
clc
hlt
mov
clc
movsl
idiv
lods
add
cmp
cmp
mov
les
je
iret
imul
adc
pop
cld
jg
mov
es
test
enter
lret
lock
or
push
mov
rcl
sbb
nop
ret
popf
ljmp
cmp
adc
mov
cmp
add
leave
and
add
rorl
xchg
adc
push
out
gs
add
xor
add
xor
jo
jns
mov
ffreep
mov
xor
cltd
jp
add
lods
aam
adc
dec
nop
xchg
in
out
negl
cwtl
int
daa
addr16
dec
outsl
test
add
xchg
mov
sub
jl
add
out
mov
loop
cmpsl
jge
rcll
call
lret
lret
cmp
repz
das
adc
add
popf
mov
popf
loopne
mov
pop
add
scas
mov
add
or
adc
outsb
idiv
inc
popl
rolb
inc
dec
cmc
mov
daa
pop
mov
mov
jb
imul
pop
mov
cli
sbb
xor
pop
fsubrl
sub
and
movsl
les
jge
mov
stos
and
jae
inc
aam
out
add
xor
mov
mov
iret
lds
lods
not
outsl
hlt
pop
inc
fmul
xor
add
int3
arpl
repnz
xor
add
pop
add
add
add
xor
cwtl
xchg
add
dec
xchg
cltd
dec
movsb
pop
push
fiaddl
xchg
jmp
add
cli
push
loopne
ja
bound
fcoml
repz
fld
xchg
insl
nop
xchg
sub
add
stos
or
sbb
and
inc
and
jae
out
xlat
cmp
bound
and
sbb
add
mov
in
movsl
idivl
and
hlt
sub
bound
jmp
cmc
xchg
adc
add
mov
mov
repnz
icebp
inc
cmpsb
fiadds
insl
and
mov
repnz
sbb
add
mov
push
add
add
add
adc
lods
out
sub
insl
daa
cld
int3
push
or
stos
in
and
arpl
inc
adc
mov
aam
inc
push
adc
mov
push
add
inc
add
xlat
sub
pop
pop
test
jp
dec
push
add
dec
cmc
jmp
rcrb
xor
mov
subb
jmp
mov
loope
add
fdivs
ds
inc
std
adc
daa
jecxz
xchg
push
fistps
scas
inc
mov
mov
mov
stos
sbb
mov
dec
lods
dec
loopne
mov
mov
add
aas
in
mov
and
ljmp
pinsrw
mov
mov
add
adc
stc
xchg
sub
aad
test
test
insl
mov
mov
xor
add
add
iret
ror
aam
mov
cmp
inc
jnp
dec
mov
ja
lods
dec
add
scas
dec
aaa
aas
ljmp
cltd
jb
scas
sub
jp
mov
dec
add
pop
cmp
leave
sub
add
icebp
push
inc
mov
xchg
xor
aad
adc
sbb
dec
lds
sub
jl
pop
push
andl
cmp
jl
mov
mov
fldl
or
inc
add
and
aas
or
sbb
gs
cmp
add
mov
out
push
lods
test
imul
cmc
cld
fwait
mov
jnp
push
adc
sbb
icebp
mov
add
aaa
scas
or
dec
mov
aas
adc
outsl
je
stc
aam
movsl
imul
mov
jge
mov
hlt
mov
xchg
inc
cmp
add
std
xchg
arpl
outsl
mov
scas
jno
xchg
in
ret
imul
add
rcl
in
loope
pop
ds
dec
add
pop
push
popf
add
daa
je
or
pop
xlat
inc
jp
test
add
pop
sbb
add
push
movsl
aam
aad
loope
or
repnz
pop
push
jle
pop
dec
or
cmp
add
addr16
pop
pop
jnp
xor
sti
clc
mov
lea
pusha
stc
bound
pop
in
sub
and
ja
xlat
jbe
add
shrl
mov
add
push
popa
xchg
add
stc
test
xor
adc
sub
add
shlb
add
adc
add
popf
add
das
add
inc
jno
or
mov
into
nop
cmp
fisubrs
ds
mov
mov
cmp
insb
sti
repnz
pop
mov
xchg
push
addl
leave
aad
xchg
or
mov
or
add
je
xor
adcl
sub
test
jp
inc
sti
add
dec
fcomps
sub
add
aaa
and
ret
cmp
ficompl
outsb
mov
test
jbe
mov
pop
push
push
dec
add
cmpsl
test
adc
imul
add
push
add
push
int
add
push
and
mov
outsb
sub
xlat
add
xchg
and
scas
cwtl
bound
addr16
in
add
add
pop
add
xor
or
and
mov
adcl
jno
sbb
add
icebp
shll
add
dec
jno
ror
add
lds
xor
lods
xor
sahf
push
cmc
jnp
inc
ljmp
sbb
test
movsb
adc
in
lcall
cld
sti
xor
mov
fstpt
lock
sbb
lcall
push
cwtl
ret
or
repz
imul
push
ljmp
mov
into
mov
test
cld
outsb
mov
js
scas
mov
mov
popa
out
mov
jg
add
movsb
nopl
jp
loope
inc
sbb
mov
das
pop
pop
imul
xchg
dec
call
test
adc
sub
lahf
add
push
xor
dec
cmpsl
lods
add
pusha
idiv
test
nop
adc
xchg
je
mov
adc
pop
mov
cmp
push
imul
xchg
test
call
xor
xchg
cwtl
addr16
cmp
mov
add
inc
add
adc
mov
xchg
dec
pop
push
dec
jno
rcrl
xchg
xchg
add
mov
push
arpl
fdivrs
add
fbstp
add
dec
imul
fidivrl
add
mov
add
pop
lea
fimuls
sub
inc
in
icebp
or
dec
inc
add
cmpb
add
sbb
mov
aaa
push
sahf
es
inc
push
adcl
fwait
cld
jle
sbb
out
add
inc
xchg
adc
add
imul
pop
lahf
mov
push
dec
clc
int
and
xchg
mov
pop
mov
inc
in
add
push
lds
cltd
push
shll
pop
xor
dec
mov
dec
outsb
movl
int3
add
ficoml
jb
xchg
aaa
out
sbbl
and
add
mov
push
jnp
leave
pop
cmp
add
loope
imul
cmp
lds
mov
clc
adc
ja
popa
pop
xchg
xor
repnz
ljmp
push
jb
pop
icebp
add
inc
mov
dec
jg
rolb
mov
rcll
jge
mov
cwtl
mov
push
in
add
in
mov
test
xchg
xor
test
aaa
jb
insb
mov
sbb
bound
lds
xchg
mov
into
lcall
add
xor
and
add
cwtl
into
scas
add
stc
add
jbe
hlt
mov
xlat
jmp
cli
add
add
add
push
or
pop
add
in
sub
jg
mov
test
andb
jg
cmp
out
xchg
mov
pop
or
bound
test
add
pop
sbb
es
clc
or
sbb
mov
lods
scas
add
lds
mov
xor
dec
jno
popf
adc
pop
add
cs
sub
adc
add
push
addb
std
dec
lret
mov
pop
mov
pop
add
scas
jle
add
add
add
push
lret
and
push
loope
lret
test
jle
inc
mov
push
dec
cmp
push
cwtl
add
sbb
mov
pop
or
mov
notl
jge
cmpsl
les
icebp
mov
push
negl
pusha
aam
xor
add
xchg
cmp
shrl
cmpsb
aaa
and
sbb
inc
add
xor
lock
or
add
movsb
lock
aam
rorb
inc
lock
mov
mov
jno
adc
add
sbb
dec
lock
lea
rclb
mov
std
jno
and
jnp
jbe,pt
add
mov
or
pusha
rclb
testb
ds
xor
fs
lock
add
sub
dec
ss
push
jbe
pop
lds
push
xchg
mov
pushf
lret
iret
mov
push
xor
dec
sbb
add
add
popf
test
cli
filds
push
mov
add
test
jecxz
dec
sub
inc
or
cmp
inc
pop
popf
test
imul
mov
sbb
add
add
mov
cli
pop
pop
shl
jmp
cltd
mov
sub
mov
scas
jb
add
add
fucom
bound
add
push
mov
fdivs
xor
ret
mov
fldt
decl
inc
xchg
push
adc
lock
nop
inc
cmp
xchg
pop
add
daa
add
pop
mov
pop
xchg
inc
insl
add
sbb
gs
movsl
push
dec
add
ss
and
rorb
mov
stc
mov
fs
je
add
pop
stc
cli
mov
inc
enter
cmp
cmp
in
movb
pop
mov
cmp
add
addr16
push
mov
in
in
mov
sub
shlb
scas
sti
xor
add
jp
cmp
push
add
add
add
inc
ds
dec
ljmp
add
repnz
add
dec
lea
add
pop
jns
sbb
push
adcb
add
shll
aam
ja
pop
mov
jp
xlat
gs
cmp
jbe
idiv
cmp
mov
clc
lret
fwait
cld
mov
sbb
and
push
in
js
add
pop
xor
cmpl
movsl
and
gs
sub
add
add
jp
cwtl
pushf
arpl
add
add
mov
fildll
mov
cmp
adc
pop
dec
pop
cmpsb
popf
adc
movsl
test
mov
push
push
aad
adc
xor
cmp
and
sbb
out
or
repnz
call
cltd
push
jnp
jmp
sub
dec
adc
sbb
cmp
je
mov
movsb
in
add
push
ss
add
test
jb
fsubrs
push
pop
shl
adc
inc
pop
pop
mov
icebp
jbe
dec
sbb
xor
dec
push
daa
add
add
mov
repz
pop
or
mov
and
add
lcall
add
adc
add
add
movsb
jmp
push
add
test
inc
sub
add
decb
fidivrl
sub
inc
xchg
loopne
test
lcall
leave
nop
add
sub
test
xchg
mov
loop
roll
cli
mov
lods
and
xor
and
jae
rcll
js
in
insb
add
mov
inc
push
lock
push
rolb
or
fcmovu
jb
xchg
mov
cmp
jp
xchg
and
jo
adc
std
mov
data16
mov
push
aas
pop
push
pop
leave
in
add
cmp
daa
imul
mov
and
rolb
out
inc
inc
jb
push
add
jge
add
ffreep
push
leave
push
shrb
mov
fisubrs
inc
xor
jle
cmc
clc
dec
sbb
sbb
clc
add
push
jo
pop
cmpsb
mov
pushf
sub
movsb
lods
dec
mov
movl
add
mulb
imul
add
loopne
sbb
lret
data16
das
add
lea
sbbb
jl
xor
xor
icebp
aam
add
aaa
aas
sbb
icebp
ds
add
popf
cs
inc
pop
add
push
sbb
add
nop
dec
xor
pop
lock
sbb
sub
add
pop
mov
add
mov
das
xchg
add
mov
add
pop
data16
rcll
sub
add
add
adc
mov
fnsave
cmp
js
mov
push
lock
imul
mov
add
xor
add
sub
int
jg
or
and
scas
pop
add
xor
fsts
popl
dec
cltd
sbb
test
mov
aaa
addr16
push
cmp
mov
dec
add
cmp
pop
sub
sti
popa
sub
mov
out
imul
clc
xchg
mov
mov
sub
imul
add
arpl
push
clc
inc
icebp
gs
pop
push
std
sub
mov
and
cmp
cmp
icebp
xchg
loop
xchg
xchg
sub
dec
pop
adc
arpl
add
add
fldl
addb
dec
pop
icebp
icebp
add
je
aaa
push
pop
xor
pop
push
cld
gs
sbb
wbinvd
add
push
and
sbb
push
fidivs
and
into
ljmp
or
dec
divl
adcl
vmovq
or
and
push
jmp
add
add
mov
inc
testb
imul
sbb
pushf
lea
fs
mov
inc
jns
add
dec
add
xor
sbb
pop
pop
xchg
roll
out
cmc
push
popa
add
add
lods
into
std
nop
or
mov
add
add
add
add
inc
call
mov
dec
incl
loopne
push
in
faddl
jne
filds
rcr
call
lock
add
jle
xor
add
jo
add
mov
add
mov
adc
rorl
testl
lahf
add
add
jno
sarl
mov
outsb
clc
xchg
mov
iret
add
mov
jnp
and
mov
cmp
rorl
inc
idivb
and
aad
xchg
push
icebp
xor
data16
xchg
pop
inc
aad
js
fstl
fld
mov
shr
icebp
add
arpl
aad
bnd
pop
and
daa
test
add
es
jb
add
add
adc
adc
push
dec
xchg
xchg
add
xchg
divb
cld
mov
out
push
sarb
inc
inc
test
in
enter
add
mov
lods
xchg
sbb
mov
testb
add
and
fsubl
subl
push
nop
dec
or
divb
ret
xchg
mov
shrb
lret
mov
add
fbstp
sbb
mov
int3
push
xor
out
cltd
jae
shl
frstor
lods
sbb
add
sbb
or
push
add
add
cmp
inc
add
adc
cmp
test
and
filds
movsb
add
pusha
rcr
mov
bound
mov
mov
popf
cmp
add
outsb
sarb
add
mov
test
or
pop
fistpll
inc
rolb
icebp
iret
adc
in
lret
push
mov
je
test
loope
into
icebp
orb
add
neg
testb
test
in
add
shrb
lret
inc
cmp
add
sbb
sub
adc
mov
stos
mov
adc
push
push
std
add
mov
arpl
mov
or
mov
rcll
iret
mov
add
mov
faddl
scas
add
jne
jbe
jns
add
mov
es
loopne
ret
cmpsl
repz
lea
stos
add
xchg
fisttpll
add
iret
and
mov
addr16
imul
int
fadds
xor
outsl
inc
mov
out
fnstenv
enter
inc
rorl
lds
push
fidivrs
sbb
xor
jae
imul
mov
inc
insb
popa
mov
lret
call
pusha
mov
sub
sub
mov
call
sub
int
arpl
leave
or
icebp
mulb
mov
inc
push
stos
flds
vmovhps
xor
add
add
loop
jb
sarb
xchg
iret
fildl
pop
repnz
jmp
stc
cmp
xchg
inc
xor
gs
mov
add
repz
in
mov
int3
out
cwtl
in
add
movsl
movsb
push
jns
or
add
daa
xlat
push
adc
popa
add
test
es
cwtl
pop
movsl
leave
adc
cltd
in
mov
pop
popf
adc
popl
insb
or
push
imul
pop
es
add
out
mov
or
push
stos
jnp
xchg
inc
sub
jg
cmp
filds
pop
icebp
outsb
ds
sub
shll
lahf
nop
roll
jmp
add
repnz
xor
imul
popa
cs
mov
or
cmp
pop
xor
popf
sub
call
lcall
or
pop
add
lret
xor
push
adc
jbe
iret
sbb
add
fsts
aad
std
push
out
mov
xor
call
jg
sbb
mov
pop
push
jno
mov
das
outsl
mov
insl
sahf
in
and
mov
mov
push
pop
lds
cli
outsl
jmp
into
imul
cmpsl
dec
incb
sbb
aam
mov
push
repnz
add
add
outsl
adc
pop
sti
aam
add
mov
lahf
pop
imul
fdivs
das
add
or
push
dec
or
stos
mov
rolb
xor
xlat
movups
and
jp
push
out
lods
add
pop
jge
iret
add
push
and
add
popa
mov
lds
jno
adc
jg
out
cld
mov
mov
ss
dec
cwtl
test
icebp
mov
pusha
add
out
mul
fadds
cmp
bound
mov
mov
lock
and
stos
or
int3
sub
jg
add
lds
push
or
mov
jno
aas
add
out
and
mov
mov
xor
add
push
jecxz
jle
lea
mulb
jge,pt
mov
cltd
jge
mov
loop
mov
add
daa
adc
cwtl
xor
sub
dec
mov
pop
or
scas
sbb
dec
ja
xchg
fcmovnbe
pop
dec
jno
sub
test
loope
push
jno
dec
add
push
pop
dec
popf
mov
xchg
insb
fwait
mov
shll
out
adc
pop
cli
sub
push
adc
push
add
xor
add
fwait
add
iret
xchg
mov
icebp
int3
ficompl
add
sub
inc
add
inc
add
xchg
add
mov
loop
pop
cmp
std
pop
out
and
sbb
aas
sbb
adc
push
es
xor
mov
mov
add
push
add
xor
addb
jle
push
cmp
arpl
fimuls
sarl
cmc
rolb
stos
dec
mov
out
out
jo
jle
add
mov
jg
add
movsb
jo
lea
add
jb
testb
test
jno
mov
fscale
and
and
out
daa
les
mov
adc
push
fcmovnbe
jp
loop
cld
cmp
xchg
lret
mov
roll
flds
sub
loopne
push
mov
popa
add
adc
dec
jp
ljmp
fnstcw
sbb
add
add
in
sub
inc
mov
lock
inc
in
orl
and
pop
enter
aaa
xor
add
add
loop
add
repz
adc
sbb
lods
add
jbe
jns
push
fmuls
in
sarb
push
jecxz
add
push
je
add
add
mov
lcall
cwtl
sub
jb
jnp
outsb
jle
mov
fildl
pusha
pop
add
jge
push
leave
lahf
pushf
jae
add
pop
mov
add
push
rorb
hlt
lods
add
out
std
cmpsb
ror
xlat
push
jno
fcmovnbe
or
arpl
repnz
cli
adc
jnp
add
pop
outsl
jmp
repz
jmp
sbb
stos
add
push
add
jg
add
orb
imul
add
ret
in
or
xchg
add
ret
jmp
mov
pop
add
mov
ffreep
test
js
testb
cmpsb
add
and
add
sub
popf
cmpsb
lcall
cmp
pushf
cmp
sub
rolb
addl
sbb
insl
aas
xor
arpl
add
jmp
cwtl
sub
dec
pop
inc
lea
mov
mov
inc
mov
push
sahf
es
add
jecxz
mov
push
std
inc
mov
stos
or
inc
mov
leave
sbb
or
add
push
adc
jg
mov
mov
push
xor
mov
mov
jno
jp
push
add
push
testl
popf
add
fldz
lret
mov
add
add
test
dec
out
push
xlat
xchg
les
popa
rcr
add
jmp
push
mov
call
pop
dec
stc
sub
js
sub
loopne
sbbl
push
adc
jmp
test
adc
add
adc
add
pop
inc
sbb
sti
fbld
inc
dec
mov
leave
out
jne
nop
adc
sub
addl
xor
mov
out
add
and
pusha
mov
imull
add
lods
lcall
dec
ret
add
sbb
sahf
add
rclb
nop
jno
popf
add
mov
pushf
in
add
stos
nop
add
push
mov
mov
and
aas
lods
add
cmpsb
sahf
adc
cmp
fidivl
add
jecxz
test
bound
lds
idivb
sahf
cld
xor
jne
xchg
cmp
mov
loopne
sbb
mov
sbb
jle
cmp
dec
mov
add
stc
jle
rclb
aad
in
mov
push
outsl
adc
rcrl
add
stc
add
lret
popl
or
aad
or
push
arpl
ret
stc
test
push
sbb
cld
sbb
pop
mov
mov
adc
inc
add
mov
sbb
sldt
inc
inc
push
out
sti
rcrb
pusha
test
scas
mov
jl
repnz
pop
mov
sbb
dec
xchg
addb
outsl
lret
into
fisttpll
mov
add
inc
push
xor
inc
inc
fbld
leave
mov
xor
add
sub
xor
insb
add
pop
dec
cmpsl
daa
mov
shlb
pop
sahf
dec
lods
jecxz
pop
add
outsb
pop
xchg
fcmovnu
js
int
mov
xchg
mov
aaa
outsl
fcompl
push
mov
mov
add
dec
add
and
sub
sub
repnz
dec
in
imul
jg
jmp
cmp
aam
enter
pop
and
cmp
out
scas
pop
xlat
into
fmull
je
add
jp
addb
out
call
add
xor
mov
fsts
pushf
mov
add
jmp
aam
inc
add
jns
add
addl
add
insl
dec
mov
jbe
movsl
sbb
insl
xor
scas
arpl
out
addl
pop
add
inc
sti
cmpsb
test
lret
mov
mov
mov
mov
add
pop
ret
test
pop
jb
jecxz
cld
aad
leave
mov
dec
mov
add
inc
xchg
iret
and
jnp
pop
mov
mov
add
mov
add
in
mov
dec
stos
xor
add
ss
add
outsl
mov
imul
mov
in
cmp
pop
mov
mov
inc
lods
add
adc
sbb
or
out
dec
add
shr
frstor
dec
and
mov
lret
shlb
mov
in
insb
and
or
jge
dec
jne,pn
outsb
xor
aas
jno,pn
inc
dec
add
mov
popf
pop
add
into
jp
dec
clc
loopne
sub
rorl
mov
push
insb
lods
pop
or
lods
or
mov
and
loope
pop
add
ret
pushf
movsb
xor
and
test
gs
push
jl
add
std
mov
mov
out
add
fidivl
scas
and
and
aam
cmp
dec
push
and
ret
stos
cmpsl
xlat
enter
ret
bound
xor
rolb
les
and
cmp
cltd
nop
fsin
movsb
add
adc
cld
mov
test
xor
sbb
inc
cs
fisttpl
dec
lcall
inc
jbe
xchg
jle
inc
jl
push
aaa
scas
add
cli
add
cmp
cmp
loop
add
push
sbb
ret
mov
nop
jl
jecxz
orl
mov
ret
aaa
sahf
cwtl
popf
mov
cmp
xchg
add
pop
add
push
js
nop
dec
je
mov
sti
ret
add
jecxz
test
cs
xchg
push
sbb
mov
ret
pop
out
adc
jno
cld
adc
adc
iret
or
aas
sub
leave
lea
fidivrs
or
mov
nop
movsl
xchg
icebp
add
add
xchg
test
pusha
xchg
and
sahf
mov
sarl
and
js
nop
inc
add
push
mov
js
jbe
cwtl
xchg
scas
jg
xor
or
and
and
xor
add
add
add
fstps
add
push
add
mov
lock
mov
je
nop
mov
add
arpl
in
mov
dec
push
adc
call
les
sahf
arpl
push
xchg
push
mov
ficoms
lret
out
add
leave
jo
outsl
in
fs
rep
xchg
add
lea
pop
shr
jo
xchg
pop
dec
xchg
and
push
add
aad
pop
repnz
push
ret
dec
and
inc
inc
add
scas
in
idivb
scas
push
dec
in
les
aad
add
mov
mov
push
fadds
fdivl
fidivl
cmp
mov
add
or
jbe
aad
push
sub
pushf
inc
add
fwait
mov
mov
cmpsb
and
add
xchg
cmp
jle
push
cld
stos
cmpsb
xchg
loope
enter
push
jbe
sub
inc
and
or
jmp
adc
add
or
in
jg
or
and
mov
adc
fistps
lcall
sbb
xchg
rorl
hlt
add
cmpsb
adc
cwtl
mov
popf
or
mov
push
lahf
push
add
js
cmp
loop
movsl
test
jp
and
pop
je
sbb
std
sbb
adc
sub
adc
cmp
lds
or
stos
aaa
pushf
add
xchg
imul
add
insl
add
push
out
test
mov
xchg
pop
inc
inc
daa
movsb
mov
push
mov
add
ds
leave
repnz
scas
movsl
sbb
imul
cli
sub
icebp
mov
fsubl
sti
adc
jp
hlt
aad
roll
scas
loopne
lock
out
add
mov
inc
add
outsl
inc
inc
les
andl
fiadds
inc
push
jle
pop
sahf
and
lods
add
mov
add
icebp
add
add
jo
call
clc
stc
insl
rorl
xchg
dec
inc
cwtl
cmp
cli
xlat
inc
out
bound
testl
int
mov
jbe
jmp
cmpsb
scas
std
lldt
hlt
das
das
into
fucomi
fs
xor
shll
lret
push
pusha
js
das
cmc
dec
ret
ret
pop
push
and
enter
lods
add
test
cmp
push
push
out
outsb
or
push
add
arpl
or
subl
push
mov
cli
and
aaa
pop
loope
xlat
stos
mov
lcall
ficompl
aas
js
dec
pusha
mov
jmp
roll
mov
pop
or
add
not
pop
mov
xchg
jl
inc
add
addr16
into
or
mov
xor
mov
pop
push
jno
pop
adc
ror
js
nop
pusha
mov
and
lods
addr16
jge
cmp
ret
imul
xor
mov
add
pop
lods
add
dec
sub
mov
add
add
mov
fisubl
cld
jmp
add
ret
sarl
add
cmpsb
ds
dec
xchg
add
gs
aam
add
and
add
lahf
icebp
push
lret
out
add
pop
or
sub
pop
sahf
in
add
xor
add
and
push
push
dec
fcoms
out
add
or
adc
xchg
pop
mov
mov
lcall
in
mov
jmp
or
fcmovnu
ret
jl
mov
jbe
jmp
cmp
sub
adc
cmovno
xchg
pop
add
add
add
push
xchg
popa
cs
inc
and
cmp
adc
dec
jg
add
bound
inc
icebp
sbb
into
push
xchg
out
repz
bound
mov
adc
add
jmp
lods
aam
xor
add
nop
push
addr16
add
test
dec
or
lock
add
shrb
add
mov
xchg
add
dec
out
xchg
cmc
add
sub
testb
pop
cmp
pop
adc
pushf
lret
jge
sbb
push
and
ds
rol
add
adc
mov
shll
push
cli
popf
adc
xchg
xor
pop
add
insl
popf
push
pop
dec
sbb
mov
add
lcall
pop
add
lcall
xor
pop
add
mov
rcrb
add
add
push
mov
adc
ror
push
sahf
js
mov
push
push
adc
push
inc
out
ror
jae
ret
add
dec
cmpsb
pop
mov
es
pusha
loope
xlat
add
add
insb
add
ljmp
hlt
jb
fmul
lea
enter
jno
push
jmp
mov
stos
inc
add
mov
clc
aam
lods
sbb
pop
inc
add
daa
repz
sbb
xor
into
add
mov
das
xor
mov
lret
out
add
adc
in
les
push
out
das
popf
jno
jae
inc
loop
xor
into
dec
sbb
lret
es
cmc
mov
les
inc
mov
jge
fisubs
push
lret
popf
mov
popf
add
push
cli
clc
ror
sbb
cltd
ljmp
jge
add
fldl
add
jecxz
sub
das
ljmp
cltd
test
nop
loop
mov
rcl
push
or
pop
les
jp
sub
add
jg
pop
loope
pusha
in
stos
mov
insl
pusha
movsb
lods
add
cltd
push
sub
lock
push
xchg
es
add
add
mov
pop
cmp
mov
mov
xor
enter
add
push
mov
or
aas
add
ret
cmp
cld
xor
call
and
stos
out
adc
add
sbb
je
mov
adc
hlt
add
add
adc
inc
add
gs
movb
push
add
jnp
stc
xchg
cwtl
add
add
cmpsb
test
jb
add
leave
rcrb
xor
ja
xchg
mov
out
push
inc
scas
sbb
imul
inc
ja
mov
pop
xor
or
add
out
insb
add
cmp
int
cmpsb
add
sbb
test
jnp
add
xchg
and
cltd
stc
sbb
and
rcll
push
xlat
stos
cmp
std
add
sub
sub
sbb
repnz
xchg
test
sub
int3
cmc
add
mov
clc
imul
xchg
insl
lock
xchg
pop
daa
adc
xor
mov
sbb
fiaddl
jg
repz
out
mov
imul
add
sub
xchg
stos
and
pop
and
adc
in
pop
pop
xchg
push
es
lea
add
jne
add
pushf
cmp
loop
test
push
test
call
jo
adc
inc
add
xchg
add
add
xor
insl
movsb
lds
aaa
clc
mov
add
loope
popl
ja
in
add
adc
in
mov
push
mov
inc
sub
aam
sub
jecxz
add
cmp
call
dec
fucomip
mov
pop
fldt
mov
cmp
inc
dec
mov
and
sub
inc
pop
cmp
das
aas
rcll
sub
rolb
pop
jg
add
in
out
add
adc
pop
add
pop
out
add
enter
add
arpl
mov
cmp
and
popa
sbb
mov
add
sub
jmp
in
push
mov
fwait
mov
or
in
mov
out
mov
outsb
sbb
add
filds
sarl
cmp
add
out
les
je
cmc
test
rcrb
cmpsb
pop
in
add
inc
lock
mov
mov
pop
test
into
lods
add
push
mov
sub
repnz
dec
sbb
jg
fisubl
scas
fs
add
js
sub
dec
cltd
fwait
pop
mov
mov
add
add
mov
mov
sub
mov
mov
add
gs
sbb
fbld
mov
xchg
sbb
bound
sbb
jge
dec
jns
je
mov
mov
lds
je
xchg
sti
sbb
adc
arpl
je
outsl
ret
bound
sbb
out
sbb
adc
inc
ret
cs
xchg
lods
ficompl
stos
pop
lret
lds
test
pop
jne
imul
add
filds
sub
jns
ja
add
and
ljmp
enter
int3
add
cmc
add
xor
ja
fbstp
inc
jbe
push
mull
lahf
cmp
add
pop
fwait
and
aas
addb
add
in
xor
dec
push
xchg
lock
rolb
fisttpll
add
xchg
cmp
mov
lahf
rolb
add
jo
xlat
repz
xchg
add
pop
inc
add
sbb
fildll
fs
adc
sahf
add
pop
scas
sbb
and
xchg
sub
add
dec
mov
cmpsb
dec
icebp
pushf
js
daa
mov
mov
mov
add
and
add
dec
stc
push
adc
sbb
add
or
cmp
movsl
rcr
mov
ret
lret
in
stos
add
nop
adc
or
jno
inc
je
jge,pn
pop
cmp
push
dec
data16
rcl
mov
in
add
aam
ja
sbb
add
or
mov
mov
stc
mov
decb
jo
fsubp
lods
outsl
enter
sbb
scas
sbbl
sbb
pop
cmp
sahf
add
add
int
add
and
insl
dec
pop
in
dec
push
sti
imul
or
push
sahf
add
cld
les
nop
mov
cld
xlat
push
inc
enter
add
sbb
jns
dec
sbb
sbb
cmp
out
lods
jno
fimull
push
imul
add
mov
add
test
lds
fdivr
movsl
pop
ljmp
adc
iret
pushf
std
add
mov
jno
xchg
hlt
sub
es
loope
cmpsl
add
dec
pop
sub
mov
data16
fimuls
cmpsl
adc
add
ret
incb
int3
sbb
sbb
lahf
shll
mov
mov
repnz
dec
or
add
insb
pop
or
bound
dec
fldl
scas
fcoms
or
dec
iret
adc
jp
cmpsl
out
add
sbb
jb
mov
jnp
mov
mov
pushf
loope
mov
push
add
loopne
dec
mov
je
insb
add
xchg
orl
xchg
pop
mov
aaa
ja
add
add
and
stos
fs
test
xor
movsl
add
push
outsb
jno
xchg
outsb
scas
imul
in
add
adc
pop
bound
sahf
mov
pop
add
stc
lahf
and
outsb
stos
dec
xor
jmp
sub
add
inc
sub
xorb
push
add
mov
inc
test
xor
repz
cmpsb
jns
cmp
fwait
inc
add
cmp
mov
push
cmpsl
add
pop
jb
lea
fisubs
dec
aas
pop
sub
mov
inc
ret
mov
loopne
iret
outsb
dec
lret
mov
add
les
lods
loop
sti
fldl
inc
and
fs
insl
xlat
call
fcmovu
dec
fcomi
lock
or
mov
js
test
dec
dec
xlat
xchg
xor
add
fwait
xchg
in
dec
sti
sbb
mov
inc
xor
add
jbe
icebp
and
outsl
inc
mov
fnsave
imul
add
dec
add
xlat
jmp
add
and
addb
pop
add
das
sbb
cld
int3
sub
fisttpl
cmp
add
xor
pop
push
and
sbb
aaa
addr16
push
ret
int3
add
adc
push
jmp
inc
movsl
test
cmp
jne
mov
lods
mov
xor
js
push
adc
add
enter
inc
mov
jns
iret
in
sbb
movsl
shrb
xor
push
cmp
push
out
or
daa
gs
mov
hlt
adc
and
insb
push
int
stos
call
mov
adc
add
jbe
add
bnd
loope
lret
add
fwait
inc
out
mov
loopne
jo
adc
jnp
scas
inc
and
add
cmp
or
fbld
cmp
je
sti
aas
dec
adc
xchg
outsl
arpl
cmpsb
push
test
xor
lret
ljmp
dec
xor
mov
add
inc
bound
cmc
jl
or
xchg
into
inc
lds
pop
aam
add
add
shrl
pop
fsubl
xchg
movsb
icebp
out
repnz
and
out
es
push
inc
in
lds
jb
inc
inc
les
movsl
add
xchg
pusha
mov
xchg
addr16
and
mov
push
popw
sub
filds
sahf
mov
add
mov
jb
mov
ss
stos
inc
mov
ds
pop
inc
add
adc
add
inc
inc
cmp
xlat
adc
test
pop
dec
repz
repnz
dec
cmp
jmp
in
int
jge
push
pop
add
movsb
add
rcrb
dec
je
mov
les
lds
xor
push
xchg
adc
mov
popa
iret
inc
add
int3
aaa
jae
rcl
sarb
or
mov
jo
add
push
sti
out
mov
dec
mov
roll
insl
das
add
icebp
mov
jb
stc
aas
cs
arpl
add
sub
add
mov
lods
or
dec
aas
and
adc
sub
inc
inc
pop
jns
inc
mov
xor
cmp
gs
cltd
mov
xchg
dec
inc
dec
push
dec
add
sub
or
sub
add
add
add
xchg
cmp
lret
adc
jle
jno
mov
xchg
and
scas
jno
mov
xor
add
and
icebp
shll
hlt
add
xlat
adc
jbe
xor
cmp
idivl
add
push
popf
add
xor
mov
cmp
sbb
add
cmpl
and
add
scas
cli
or
push
cmp
cld
mov
xchg
int3
ljmp
not
push
push
add
std
icebp
add
jg
xchg
jg
or
clc
jle
xchg
mov
mov
adc
cmpb
fisubrs
add
addr16
in
sub
fxch
sbb
shlb
sub
or
xchg
addb
cmp
aad
push
fistpl
ret
cmp
inc
jno
js
adc
rcrl
xlat
int
js
add
lea
add
push
add
or
jb
enter
xor
insl
dec
jbe
add
jp
roll
testl
sbb
imul
cmp
scas
fdivrs
imul
or
aam
pop
pop
sbb
imul
out
ja
fisubl
or
pop
roll
push
rcrb
jo
cld
jle
inc
adc
push
pop
data16
shl
or
inc
pop
hlt
enter
iret
and
shr
fadds
inc
add
loope
and
sbb
pop
push
stc
dec
or
xlat
nop
les
pushf
ljmp
adc
cmp
xchg
mov
mov
xor
hlt
test
pop
cli
mov
mov
inc
dec
cwtl
and
shl
add
xor
push
pushf
stos
jno
jae
add
dec
fildll
shlb
push
mov
adc
test
or
les
sti
cmp
mov
fcmovu
mov
dec
add
mov
xchg
mov
add
and
add
out
in
pop
mov
movsb
add
ds
and
aad
adc
mov
adc
adc
add
jg
and
adc
insl
ljmp
cld
testb
push
adc
test
mov
and
nop
jecxz
sub
rclb
jp
or
add
ds
mov
push
movsl
outsl
sbb
add
xor
pop
mov
mulb
add
faddl
cmp
mov
out
cltd
adc
sbb
push
dec
lahf
insl
scas
ljmp
push
jecxz
mov
or
aam
jecxz
and
add
out
fiadds
push
ret
scas
ljmp
dec
aad
xlat
pop
dec
into
nop
add
push
in
mov
sub
out
mov
aam
pop
ja
jge
push
fwait
sbb
lret
das
daa
ss
je
sub
xor
clc
sarb
jno
jnp
jns
test
add
jge
mov
or
in
push
xor
bound
mov
cwtl
inc
outsb
scas
pusha
fwait
aaa
pushf
rorl
jg
add
jp
iret
dec
add
popf
mov
push
addr16
in
inc
cwtl
cmp
add
jnp
inc
xchg
xlat
xor
add
jb
push
xchg
cwtl
jno
into
flds
xchg
roll
lock
adc
scas
hlt
pop
out
sbb
aaa
cmpsl
mov
add
lcall
pop
add
in
add
lret
inc
or
jp
adc
pushf
ror
inc
addl
aaa
out
loop
mov
add
push
popa
add
fwait
jl
pop
add
mov
add
push
adc
movsb
je
xlat
inc
xorb
cmpsl
sub
addl
and
pusha
adc
daa
mov
inc
push
add
mov
jns
loope
outsb
sbbb
sarb
daa
iret
sub
pop
cwtl
popf
lret
sti
inc
mov
xchg
pop
lret
hlt
adc
and
ret
and
push
jge
inc
lods
xchg
add
movb
aas
fwait
shlb
std
cmp
lcall
jno
add
loopne
dec
push
inc
out
stos
divl
lcall
xchg
lcall
fisubl
pop
and
pop
or
or
add
lret
cltd
stc
pop
inc
xchg
int
movsb
jnp
inc
bound
and
mov
cmp
out
std
jmp
scas
mov
jmp
pop
jecxz
fwait
in
add
mov
inc
out
push
imul
stc
popf
cmp
add
cmp
std
movsl
jne
testl
mov
push
test
hlt
test
adc
xchg
enter
adc
insb
cmp
lret
add
or
and
sub
repnz
xor
cmp
stc
insb
lahf
add
popf
pop
jecxz
mov
push
pop
loope
and
pop
mov
out
add
xchg
cmp
add
xchg
push
xchg
or
dec
incb
ljmp
xchg
out
add
cmp
add
add
dec
mov
add
lock
jo
push
add
fwait
cs
or
arpl
or
mov
xor
adc
push
adc
inc
add
ljmp
push
cmpsb
sbb
cmp
jnp
adc
pop
jmp
cld
inc
pusha
out
add
add
sbb
repnz
popf
add
fistps
ds
in
add
negl
stos
pop
or
pushf
in
jmp
into
cmpsl
pop
mov
cmp
add
lcall
loop
jmp
fcmovnb
imul
add
add
add
jp
in
cmpsb
sarb
fidivrl
pop
js
insb
mov
andb
sub
add
lcall
xor
cmp
mov
mov
sbb
test
dec
out
fdivrp
in
ss
mov
divl
clc
insl
repz
repz
in
add
aas
push
and
xchg
or
popf
fildl
inc
pop
inc
fbstp
add
call
add
mov
rcll
or
push
sbb
cwtl
dec
xchg
and
jg
fcomps
add
xor
add
insl
jge
add
and
lods
enter
pusha
mov
js
mov
lahf
inc
loop
sti
ja
sbb
push
or
mov
mov
movb
cmp
mov
cmp
test
or
pusha
add
dec
ss
stos
aam
ja
ret
add
daa
mov
out
pop
sub
xchg
mov
cmp
add
in
loope
out
pusha
xchg
cmp
jl
cld
call
addr16
fcoml
pop
fsubrp
lock
jb
clc
fmull
jl
movl
push
ficoms
popf
jnp
in
test
into
loope
mov
mov
add
jecxz
add
test
mov
jg
das
testb
fisttps
jae
sbb
push
dec
add
sbb
mov
cli
pop
cmp
dec
jne
pop
adc
jle
out
add
dec
test
jle
pop
cltd
add
les
sub
add
add
or
jbe
mov
mov
test
push
pop
jno
push
stos
fs
dec
scas
push
ja
and
ljmp
insl
xor
fldcw
mov
pop
jnp
jecxz
subb
jmp
mov
sub
ret
cmp
pop
and
hlt
or
iret
pshufw
push
sub
add
call
sbb
push
mov
movsl
and
ja
imul
cmc
add
add
sbb
adc
loop
out
pop
pop
lahf
lahf
inc
sbb
or
add
sarb
xchg
push
incl
ja
ret
ljmp
push
insl
lret
add
mov
loope
mov
mov
pop
roll
mov
shl
adc
addr16
add
in
xchg
test
jno
shlb
jge
call
incb
and
mov
out
jge
sub
aad
sub
aam
push
cld
cmc
add
repnz
rolb
and
add
mov
sbb
inc
push
xor
inc
dec
cltd
iret
jno
loope
xchg
sub
xor
or
stc
insl
add
loope
cld
data16
pop
lds
pop
es
call
xchg
mov
add
mov
lret
push
cld
sbb
in
out
mov
add
fwait
cmp
shll
add
add
cmp
sti
out
sub
icebp
popf
in
repz
or
inc
inc
add
push
add
mov
roll
xchg
mov
popa
xor
outsl
int3
mov
jbe
add
add
cmpsl
nop
sub
roll
sub
ja
push
cmc
or
jbe
mov
popa
add
sub
mov
jmp
leave
insb
rol
loop
pushw
test
mov
lds
into
lret
nop
in
add
xchg
jmp
test
jmp
imul
cmpsl
icebp
lcall
addl
xor
loop
add
sbb
sub
into
push
movl
stc
mov
jae
mov
add
leave
cs
mov
adc
pop
mov
or
loop
shr
add
xchg
add
mov
add
push
lret
xchg
out
jecxz
jl
lea
pop
fnstsw
cmp
add
add
xchg
pushf
add
xorb
add
pushf
xor
jne
mov
inc
xor
jbe
mov
call
sub
mov
mov
mov
outsb
or
jns
jae
gs
das
inc
pop
orl
inc
inc
push
pushl
push
rcrl
addl
mov
subb
add
cmp
push
sarb
dec
add
jmp
adc
or
and
popa
pop
pushf
push
mov
cmc
fmull
or
dec
aas
pop
mov
mov
sub
aas
insb
add
pop
outsl
add
pop
xchg
add
add
and
pop
std
ss
dec
test
and
jno
fistpl
adc
jl
add
stc
aam
cwtl
mov
ret
push
mov
in
fadds
repz
xchg
mov
xor
add
push
fs
push
loope
out
adc
roll
sbb
mov
sbb
lcall
add
lcall
ficoms
pop
add
fistl
sub
outsl
jle
xor
mov
jmp
imul
xlat
push
mov
lahf
mov
movb
rcrl
lcall
addr16
jp
loop
add
add
add
pusha
in
and
bound
add
aad
jmp
and
enter
pop
sub
in
lea
std
add
add
cmp
mov
mov
js
pop
aad
jnp
jecxz
mov
push
mov
jecxz
sbb
dec
dec
cltd
addr16
repnz
adc
repnz
jno
push
inc
pop
sbb
mov
add
cld
add
sub
mov
sbb
dec
sub
mov
in
inc
into
add
inc
mov
ja
fsts
lcall
xchg
data16
icebp
add
cmp
loopne
imul
xor
out
repz
decl
mov
push
jge
jp
roll
pop
xlat
add
xchg
fs
js
bswap
add
rolb
inc
sbb
fsts
jmp
mov
xchg
shll
outsb
dec
test
out
add
adc
cmpsl
ljmp
sbb
fbstp
loop
mov
stc
mov
shl
gs
inc
sbb
shl
stos
add
add
das
mov
pushf
sbb
xor
fisubrl
fsubs
add
roll
mov
shrl
or
scas
insl
rorl
pushf
rolb
lcall
add
sub
add
outsb
cmp
cmpsl
int3
sbb
add
loopne
cmp
sbb
pop
mov
int3
stos
pop
add
xchg
and
inc
pop
ljmp
shll
add
int3
xor
mov
adcl
je
mov
cmpl
add
and
arpl
add
add
or
add
bound
mul
dec
jne
xlat
cmp
inc
ljmp
push
xorl
sbb
xchg
or
movsb
jae
add
inc
outsb
add
xchg
push
sti
roll
imul
cmc
das
or
sub
mov
cmp
pop
pop
xor
sahf
dec
ret
xor
cmp
xchg
adc
push
jmp
adc
mov
ljmp
call
adc
je
or
popf
push
jbe
scas
cltd
fucomp
aad
dec
or
pushf
add
outsl
arpl
xchg
in
push
enter
mov
test
loopne
into
inc
lods
inc
pop
jmp
pop
add
pop
push
ja
dec
in
dec
and
add
andl
sbb
jne
mov
jmp
sarb
loope
add
incl
mov
test
jbe
add
sbb
add
jge
adc
dec
xor
lcall
or
mov
jecxz
jg
ljmp
cltd
repz
add
mov
adc
jle
mov
add
add
mov
fadd
xchg
popf
mov
pop
xchg
inc
xor
add
xchg
in
sub
lea
test
sub
push
lret
into
scas
push
fbstp
jle
add
or
sti
add
push
bound
enter
ucomiss
xchg
add
xor
add
push
inc
mov
daa
cmp
mov
aas
mov
adc
mov
jmp
sbb
cld
aas
cli
push
adc
lock
scas
pushl
popa
and
push
pop
jl
adc
xchg
inc
mov
sti
jb
inc
imul
cli
add
ljmp
hlt
pop
cld
mov
sldt
lock
loopne
adcb
andb
aaa
mov
add
fdivrs
insl
sbb
push
mov
filds
cs
jne
stc
adc
add
cs
xor
xor
stos
mov
int
mov
leave
push
ror
mov
add
repz
add
js
push
mov
inc
into
mov
push
dec
jb
push
faddl
cmpb
push
jae
mov
add
sahf
jb
sbb
push
fs
in
inc
arpl
cmp
xchg
add
pop
inc
leave
cmp
adc
nop
pop
fsts
push
xor
add
xchg
sbb
xor
fs
in
add
repz
xchg
push
add
add
dec
test
mov
rcrb
popf
rcrl
and
or
add
sbb
je
inc
imul
test
stos
add
iret
or
inc
or
aas
loopne
test
sar
add
pop
and
add
add
stos
hlt
mov
cmp
stc
paddusb
stos
clc
sub
jmp
pop
inc
movsb
into
add
cltd
mov
pop
outsl
pop
add
not
sbb
fisttpll
push
push
shlb
mov
mov
jl
fisttps
dec
das
add
hlt
dec
sbb
xor
rcr
cli
pop
cmpsb
inc
jbe
fwait
add
dec
pop
in
lds
loope
add
js
mov
shll
pop
das
ss
fldcw
jbe
adc
and
in
std
movsb
jae
pushl
push
cmc
xor
push
add
jl
mov
sub
lcall
jmp
add
dec
test
jno
in
dec
xchg
add
add
jnp
and
nop
add
inc
add
fstp
ror
xchg
sbb
into
test
lahf
rclb
nop
loope
add
test
movsb
out
mov
popa
xor
pop
jmp
add
xor
lock
add
ret
pop
fildll
xlat
test
jnp
fildl
fs
sar
mov
icebp
fstps
pushw
mov
loope
and
cmp
jns
pop
jnp
imulb
push
movsb
sub
add
lds
dec
scas
add
cmpsl
xor
cmp
cwtl
push
add
rol
mov
clc
scas
mov
xchg
mov
lret
aam
and
push
sub
sub
mov
dec
push
inc
lcall
scas
add
rcl
pop
add
sahf
and
sub
mov
push
out
inc
add
ss
pop
xor
add
jecxz
pushf
inc
xor
or
adc
lods
pop
push
or
jne
ss
movlps
jno
push
sub
push
and
or
add
rolb
push
add
xorb
loope
add
ds
fcmovu
and
push
cmp
inc
jnp
xor
add
gs
add
xchg
add
add
loop
hlt
add
mov
mov
popl
out
mov
pop
in
jno
dec
enter
bound
clc
lods
or
repnz
clc
mov
sub
clc
add
inc
out
jle
jl
push
or
and
mov
mov
rcrb
push
mov
stc
add
stos
jg
stc
addl
mov
add
add
es
movsb
add
cmp
adc
mov
imul
jae
inc
xlat
mov
stc
std
aam
dec
pop
add
or
add
inc
lods
int3
ljmp
add
push
adc
sbb
inc
and
xchg
or
cmp
mov
mov
xchg
in
movl
sbb
mov
jae
or
or
shll
test
stos
or
movsb
roll
orl
div
cmpsb
imul
inc
or
inc
sahf
cmpsl
pop
sbb
shrb
pop
jl
jb
test
push
add
sub
mov
divl
jno
add
add
mov
out
les
push
insl
add
add
jg
push
cmp
sbb
sbb
std
mov
jnp
dec
outsl
aaa
sub
and
xchg
js
push
scas
pop
iret
mov
movsb
ret
adc
adc
ds
sbb
mov
pusha
mov
mov
jl
inc
xchg
add
pop
mov
add
aad
add
cld
shll
fxch
add
add
add
dec
mov
dec
inc
lcall
aam
sahf
loop
stc
leave
push
andl
lea
pop
popf
push
mov
and
dec
sahf
inc
fnstenv
push
pop
dec
incl
or
cld
jbe
fcomps
or
ja
mov
add
inc
in
adc
aad
lcall
and
insl
ja
add
cmp
das
ljmp
sbb
or
js
lods
xor
cld
xchg
outsl
test
loop
xor
mov
add
cmpsb
pop
pop
je
add
stos
add
push
push
ret
inc
test
mov
bound
jo
in
xlat
das
push
xor
jl
into
fisubrl
jg
pusha
out
sbb
add
add
sub
xor
out
xchg
fsub
cmp
int3
xor
xchg
sub
jae
fbstp
and
aam
sbb
aam
mov
add
clc
cmp
cli
or
xchg
xlat
clc
loop
insl
lods
ficoml
inc
add
cmp
call
cltd
stos
repnz
xchg
clc
pop
mov
clc
add
insb
popa
dec
mov
add
and
mov
pop
push
test
cltd
push
imul
sbb
int
sti
lock
cs
add
xlat
lret
add
add
ss
xchg
add
leave
pop
repnz
aaa
outsl
fnsave
movsl
cmp
insb
dec
cwtl
shlb
add
pusha
int3
popa
add
sti
add
xchg
pop
mov
add
fnsave
jnp
test
lcall
push
ret
repnz
add
pop
out
xor
out
xchg
mov
push
xor
test
mov
add
in
lock
out
or
pop
adc
arpl
xchg
mov
mov
add
cwtl
out
add
cwtl
add
ret
xor
add
lods
push
sub
xor
ss
in
add
and
mov
add
shr
sbb
aad
xchg
pop
outsb
verw
jecxz
lds
add
sti
addr16
add
xchg
jg
or
jg
sbb
xor
push
addr16
mov
jae
sub
dec
jo
pop
add
ljmp
scas
add
add
sbb
add
mov
xchg
cmp
push
idivb
popa
inc
inc
ja
lock
add
int
mov
out
lahf
in
mov
inc
ljmp
sbb
inc
jmp
testb
test
inc
add
dec
fmull
push
mov
ret
inc
ds
lret
xchg
add
out
add
repnz
or
add
add
mov
xchg
push
add
dec
add
sbb
sti
cmpsb
inc
add
pusha
adc
add
nop
jg
pop
jl
add
push
popa
push
cmpsl
pop
ja
imul
fsubr
add
outsb
xchg
inc
clc
leave
mov
std
sub
clc
lret
mov
lret
push
ficoml
aas
add
add
daa
popf
std
sub
and
popa
push
mov
jl
outsl
adc
add
and
les
in
addr16
int
xor
shll
sbb
mov
xchg
dec
hlt
dec
add
nop
mov
add
add
add
or
pushf
jg
add
dec
add
push
sbbl
lds
fcmovnu
bound
mov
or
cwtl
and
add
add
add
mov
sti
bound
xchg
fstl
push
clc
or
int3
repnz
iret
push
jle
dec
pop
inc
adc
cmp
push
leave
push
jns
insl
outsl
add
mov
push
cld
push
repnz
movsl
add
jp
mov
lock
scas
add
stos
dec
inc
int3
or
add
add
leave
push
mov
sahf
rorb
add
jecxz
mov
inc
arpl
scas
xlat
or
push
je
jle
sbb
jb
push
inc
repnz
insl
mov
subb
jl
jmp
jl
add
notl
cmpl
jno
sbb
sbb
pop
inc
push
sahf
add
imul
xor
fistpl
jp
add
mov
mov
lea
pop
or
push
sub
or
xchg
mov
add
add
lret
dec
jo
adc
xchg
pop
jnp
adc
xor
aad
jno
insl
mov
dec
add
cli
xchg
push
add
dec
icebp
cmpsb
int
add
js
inc
ret
add
xor
test
mov
into
dec
test
pop
adc
inc
iret
pop
mov
cmp
add
sbb
cmp
imul
ret
add
mov
cmp
dec
mov
pop
or
sbbb
push
jge
jnp
mov
xor
jae
ja
lods
add
add
outsl
les
jl
add
xchg
and
add
hlt
cmp
add
hlt
popf
add
cwtl
push
pop
loope
jb
jb
add
movsb
jmp
jno
xchg
inc
repz
in
stc
mov
mov
mov
xor
add
fsubs
add
out
add
inc
mov
bound
imul
xchg
sbb
adc
fstpl
jns
push
outsl
into
lahf
popa
mov
add
addr16
pop
aas
push
jo
dec
or
fwait
or
ja
fnstsw
sbb
mov
sub
inc
out
mov
jecxz
xor
aaa
jne
into
in
and
arpl
add
in
push
and
fidivl
sbb
add
pop
mov
in
packssdw
sbb
and
add
sub
loopne
cmp
repz
hlt
js
sbb
out
out
push
adc
scas
in
nop
inc
les
push
and
out
jp
sbb
add
add
or
lock
xor
repnz
sub
lds
int3
andl
jo
and
push
mov
mov
cmp
fstpl
mov
add
xchg
cmp
sahf
idivl
fldt
add
mov
loope
sbb
and
cmpb
ja
icebp
enter
cmp
sti
or
xchg
push
int3
mov
add
cmp
sub
jo
jno
push
mov
jp
sub
or
add
jnp
push
add
ret
pop
pusha
in
xchg
mov
mov
mov
lcall
cmpsb
add
add
mov
sbb
jbe
hlt
test
jns
adc
ficompl
into
pop
lahf
neg
icebp
add
mov
add
decl
lock
mov
inc
or
insb
xlat
push
insl
mov
clc
lock
andps
aam
mov
push
xchg
inc
xchg
inc
mov
cld
bound
add
mov
icebp
or
imul
mov
inc
xchg
jne
outsl
inc
cmp
sub
dec
cmp
bound
pop
adc
adc
out
cmp
pop
and
mov
or
out
jg
push
add
add
add
dec
add
or
jl
out
in
add
shlb
push
add
test
std
add
dec
cmp
cmp
lcall
pop
cmp
dec
push
cmp
adc
test
fistl
lcall
add
sbb
mov
das
or
adc
jbe
test
add
std
fldl
sub
in
xchg
push
xchg
mov
cmc
push
std
jp
or
movsl
sbbl
xor
fiadds
or
sub
in
pop
sub
mov
aaa
cmp
js
add
mov
repnz
add
shlb
jbe
je
pop
jl
add
inc
and
in
outsb
ficompl
and
add
mov
arpl
sbb
sub
stos
scas
cltd
inc
mov
mov
jg
mov
fisubs
shll
jbe
xor
movsl
inc
daa
lret
call
jg
mov
filds
push
sub
roll
push
nop
bound
testl
xchg
aad
mov
xlat
add
orb
adc
ret
or
add
add
jne
pop
outsb
add
shrb
cwtl
push
add
or
jbe
rol
jecxz
sarl
cmp
test
popa
in
add
xor
add
add
stos
mov
inc
in
andl
push
dec
add
sub
and
mov
stc
sub
hlt
inc
je
sbb
cmc
add
mov
out
pop
test
insl
inc
sbb
movsl
popl
bound
sbb
or
jae
mov
pop
add
fildll
enter
xlat
inc
ret
pop
add
cmp
add
push
out
jge
in
fwait
test
dec
loop
inc
adc
add
aam
out
push
push
mov
std
fildl
mov
clc
add
add
and
cwtl
mov
mov
out
leave
pop
or
xchg
pop
or
fcmove
movsb
xor
les
cmpsl
add
add
add
pop
loope
xor
jns
and
sbbl
clc
lods
push
add
data16
sub
xlat
adc
add
lock
rcr
push
add
pusha
and
jae
aam
mov
idivb
aad
pusha
imul
xlat
icebp
inc
lahf
xchg
movsl
adc
jle
push
add
pop
or
fildl
int3
jmp
adc
xor
dec
clc
xchg
das
cld
and
loopne
cmp
fdivs
adc
add
enter
test
add
sbb
inc
cmp
dec
add
cmp
mov
outsl
dec
int3
extrq
jnp
imul
mov
pop
repnz
add
xchg
inc
and
sbb
sub
icebp
insl
mov
sbb
add
je
mov
sub
push
dec
add
in
sahf
loop
adc
mov
inc
into
cmp
adc
xchg
flds
or
dec
int
ret
add
dec
pop
daa
aas
pop
add
gs
bound
cmp
or
sti
mov
negl
push
repnz
scas
leave
xchg
mov
sub
sbb
jb
popf
xchg
jmp
in
jne
cwtl
or
movsb
xchg
xor
inc
pop
repnz
and
add
mov
adc
ss
sbb
adc
mov
or
in
loop
mov
call
in
xor
and
add
add
dec
popf
inc
lods
add
out
adc
leave
rcrl
test
cmp
cmp
das
mov
bound
or
jge
jg
outsl
enter
xchg
jge
sbb
bound
imul
cmp
add
cli
mov
adc
clc
xor
cmp
cs
pop
fidivrs
mov
or
push
dec
add
std
cmp
rorl
cmc
sub
add
jo
add
xor
add
mov
add
je
mov
cmp
lock
fldl
push
add
ss
xlat
push
push
addl
test
adc
jle
or
shr
add
add
mov
scas
fnstsw
xor
testl
popa
dec
test
das
in
inc
in
mov
insb
int3
iret
mov
mov
arpl
insb
or
test
loope
push
mov
add
jmp
dec
sub
ret
roll
push
mov
clc
popa
cltd
jl
mov
loop
mov
rolb
test
add
in
jecxz
push
add
cmp
and
add
lret
lock
add
sbb
add
sub
gs
in
add
add
lds
add
scas
lock
jne
mov
sti
jae
cs
negl
inc
call
test
mov
jl
adc
inc
mov
push
cmp
mov
add
out
push
mov
inc
cli
dec
imulb
push
cli
cmp
sbb
push
add
rcr
xchg
stos
add
ss
mov
add
add
jbe,pt
test
pop
clc
add
sub
fwait
pop
lret
sub
dec
push
inc
pusha
pop
daa
mov
adc
inc
adc
loope
shlb
adc
cmpsb
insl
mov
pushf
jnp
and
ljmp
push
push
add
mov
push
add
xor
inc
mov
add
inc
add
jo
orl
fldl
mov
lret
icebp
or
frstor
or
mov
cli
fadds
aam
sbb
xorb
out
mov
and
lahf
es
gs
add
xorb
hlt
jmp
jl
push
bound
add
mov
sti
cmp
ficompl
cld
jae
add
or
mov
add
add
out
dec
dec
adc
stc
push
add
xchg
add
inc
mov
adc
xchg
leave
lcall
imul
adc
sbb
mov
jnp
jmp
icebp
xchg
xchg
xchg
add
mov
out
mov
jle
gs
movsl
lahf
ja
mov
push
leave
stos
inc
sbb
cs
adc
pusha
ret
jp
mov
mov
pop
jns
mov
add
add
add
and
add
push
icebp
push
sub
xor
hlt
mov
lods
lcall
or
jl
ret
mov
add
push
jb
aaa
pop
pop
mov
nop
test
dec
sti
mov
leave
inc
dec
add
mov
mov
add
loopne
pop
adc
add
aas
inc
add
or
jp
rcrb
imul
mov
mov
js
add
adc
mov
add
imul
xor
push
repnz
sbb
xchg
xchg
inc
test
pop
mov
daa
mov
out
xchg
idivb
pushf
mov
pusha
outsl
add
rclb
inc
add
mov
iret
push
fstpl
push
add
scas
ss
push
add
and
loopne
cmp
xchg
add
pop
add
xchg
scas
jno
and
std
cmp
add
test
roll
out
jmp
clc
rorl
add
cmpsb
out
loop
push
push
xor
fs
es
push
pop
lods
push
and
cmp
add
dec
jno
leave
add
fiaddl
loope
add
add
jne
xchg
ja
pusha
sti
add
add
add
pusha
ja
add
xor
insb
add
push
repz
push
enter
sbb
std
mov
pop
mov
pop
js
or
popf
rcr
subb
push
data16
mov
mov
stos
or
fildl
adc
inc
lcall
add
add
jl
push
or
insl
mov
add
icebp
mov
mov
mov
push
repnz
icebp
dec
xchg
cmp
nop
ret
add
mov
jne
das
and
cmp
push
jbe
aam
shrl
cwtl
rorl
pop
add
jge
enter
pushw
add
sbb
sbb
lock
jae
ret
insb
mov
mov
xchg
add
dec
adc
mov
clc
add
add
aad
shrb
push
aaa
sub
mov
lea
xchg
scas
or
in
fstpl
or
xor
xor
lahf
xchg
cmp
fwait
mov
inc
adc
add
pop
add
in
out
sbb
add
jmp
sub
mov
or
dec
cwtl
pop
divb
push
iret
enter
cmpsb
push
fildl
loop
add
repz
jns
lods
jg
cmp
lea
xor
fldl
add
add
sub
das
pop
and
in
add
mov
in
xor
cmc
insb
sbb
inc
nop
fs
notb
jmp
push
jmp
insb
sub
shrb
outsl
jge
xchg
add
mov
lret
jno
add
lea
add
add
push
jecxz
les
mov
push
pop
cmc
dec
add
push
stc
adc
roll
fst
jmp
push
bound
movsb
addr16
and
push
mov
or
xor
pushf
ss
rcrl
jno
divl
insl
adc
inc
pop
push
dec
add
push
testb
xchg
sbb
in
dec
xor
and
in
mov
add
or
add
mov
add
or
fincstp
fimuls
adc
xchg
test
inc
push
aad
add
mov
clc
jle
imul
stc
push
jecxz
pop
mov
add
adcl
enter
push
mov
push
scas
add
popf
loop
cmp
movsl
push
dec
inc
pop
mov
mov
jge
mov
xlat
inc
flds
in
cmp
add
mov
xor
adc
push
aad
push
sub
cmpsl
jle
xor
xlat
cltd
mov
and
mov
adc
adc
sbb
shr
pop
add
fdivp
in
jnp
es
hlt
xlat
add
fistpll
add
cwtl
xor
xchg
xor
cs
mov
jp
add
out
and
sbb
add
das
movsb
aam
cmp
pusha
sbb
aad
addb
xchg
mov
add
outsl
mov
clc
popa
dec
xchg
xor
jecxz
fst
add
pop
mov
pop
mov
xor
add
add
adc
dec
pop
mov
pusha
mov
add
or
jmp
xchg
add
stos
adc
imul
pop
add
inc
inc
movsl
and
sbb
test
imul
insl
sarl
pop
xor
in
add
mov
pop
xchg
mov
adc
in
outsl
mov
int3
add
mov
loope
insb
sub
add
sub
ja
jl
add
push
cwtl
xor
jecxz
ret
sbb
push
stos
cli
inc
es
sub
cmp
dec
stc
sub
add
shr
out
pop
push
adc
popf
dec
pop
fldt
add
outsl
add
test
mov
add
test
jo
lret
loop
ss
ret
jg
and
push
mov
aam
test
and
pop
cs
mov
test
les
outsb
adc
sbb
repnz
ret
add
and
sub
add
lret
inc
inc
fsts
add
mov
add
mov
jbe
ss
add
mov
lods
mov
ficompl
cli
rcr
mov
lock
add
push
pop
add
push
add
jnp
pop
add
leave
jecxz
xchg
movsl
cmp
aaa
and
cmp
add
add
lcall
in
ds
fdiv
daa
pop
push
cmp
add
add
jp
pop
test
mov
cmp
dec
jb,pn
sub
sbb
add
out
scas
push
mov
andl
push
sbb
faddl
mov
shrb
mov
mov
movsl
cmp
inc
cld
add
dec
cmp
add
test
jne
xchg
push
xchg
out
mov
sti
xor
mov
mov
or
cmpsb
add
xchg
add
jl
imul
xchg
adc
lahf
mov
mov
add
sahf
add
ds
sub
add
or
cmpsb
or
pop
pop
mov
jmp
sub
add
scas
cwtl
xchg
or
add
scas
cmc
mov
sbb
add
inc
mov
add
repnz
pop
jnp
mull
jno
add
add
pop
fidivrs
xlat
test
leave
dec
xchg
aaa
lods
cmp
nop
aad
mov
sub
push
add
cmp
push
pop
outsb
or
lret
pusha
ja
add
sbb
inc
scas
adc
cmp
movsl
push
cmpsb
pop
cltd
out
cmp
mov
inc
lahf
bound
and
lock
cmc
add
ljmp
ss
jp
sahf
sbb
cli
pop
leave
add
lods
mov
add
rcrl
cmpb
iret
sub
fs
mov
stos
xchg
mov
add
ret
es
iret
popl
jge
shll
jle
mov
out
scas
or
xchg
lods
mov
dec
cwtl
loope
ds
testb
adc
ljmp
dec
test
hlt
movl
popf
movzwl
push
cmp
lcall
ljmp
pop
adc
in
pushf
pop
adc
cmc
mov
inc
pusha
in
mov
mov
add
add
cld
cmp
push
mov
testl
in
hlt
lret
gs
cmc
or
and
rcr
jo
xchg
and
jo
ret
stos
pop
lahf
es
add
add
mov
jle
fs
xchg
sub
jo
inc
cwtl
mov
sbb
sbb
add
sub
cmp
sub
std
arpl
test
pushf
inc
mov
addr16
insl
std
hlt
fisttps
fiadds
xor
add
sbb
xor
or
out
or
sahf
xor
popa
iret
movsb
mov
xchg
add
mov
pop
dec
pop
in
pop
add
mov
dec
fs
and
je
push
jge
add
gs
pop
sub
fisttpll
push
loope
adc
testl
and
insl
idiv
sahf
inc
loop
jmp
rcrl
sbb
adc
lock
les
sbb
mov
imul
aad
sub
outsb
shrl
out
mov
cmpsl
cmc
mov
and
push
xlat
dec
ds
cmp
push
dec
and
pushf
jo
xchg
ja
inc
push
xchg
adc
jno
int
daa
mov
aad
js
fldenv
xchg
in
mov
js
test
pop
cmpsb
xchg
sarl
add
rcrl
add
cmovl
and
add
add
in
dec
sub
add
fs
sbb
push
or
cmpb
shr
add
int3
dec
xor
into
xchg
loopne
lahf
add
cwtl
pop
sub
mov
test
ds
cmp
test
lds
pop
loop
xchg
add
push
xchg
dec
ss
adc
cmp
cmp
aas
inc
adc
inc
bound
cs
adc
push
sub
pusha
and
adc
push
add
xor
xchg
and
inc
lcall
add
cmpsl
sub
sbb
jg
scas
xor
jo
aad
popf
out
add
leave
add
negl
lret
add
jl
xor
jbe
lods
or
inc
sbb
add
cli
fldcw
std
adc
mov
sub
pushf
and
fdivl
test
out
xor
movsl
dec
sbb
imull
idivl
out
inc
pop
mov
add
cltd
in
jnp
sarb
mov
lret
mov
scas
add
or
sub
or
fidivs
xor
orl
add
and
or
lds
hlt
add
movsl
jae
ss
add
inc
sbb
stc
add
add
out
stc
nop
pusha
fwait
inc
pop
cltd
dec
xchg
pop
inc
jne
inc
and
jmp
add
cmp
shrb
mov
dec
shrl
inc
jne
cmp
aad
and
imul
add
cmpsb
adc
lock
fsubs
les
sbb
mov
add
lea
mov
icebp
inc
rcpps
cmp
sub
outsb
addl
addr16
sub
fs
xlat
loopne
aad
jle
add
aaa
add
or
fsubs
xchg
jno
stc
dec
xchg
and
add
loop
str
shr
pop
add
push
add
inc
and
push
test
cmpl
popl
lahf
pop
pop
shlb
or
clc
add
and
or
inc
dec
push
fs
fs
pop
stos
and
add
pop
mov
pop
mov
and
mov
and
sahf
sub
push
mov
fidivrs
push
mov
push
pop
mov
adc
sbb
into
xchg
in
push
add
pop
cmp
dec
push
stos
fs
out
xchg
shr
pop
adcb
jg
imul
insb
enter
ret
stc
cmp
inc
add
cmp
std
pop
mov
add
cli
stos
pusha
jne
pop
mov
sbb
mov
ret
frstor
push
movq
or
add
out
push
cmc
fsubrp
xor
add
and
add
or
nop
pop
push
shrl
popf
jmp
push
jle
xchg
sub
and
jbe
inc
add
loopne
enter
push
je
lea
movsb
sub
xor
outsl
add
xor
shlb
rorb
fimull
imul
cmp
arpl
cmpsb
add
add
or
data16
add
cwtl
add
adcl
fisubrl
push
sub
mov
xor
pop
jl
in
mov
dec
xor
loope
les
outsb
loope
sbb
pop
cltd
test
push
add
add
shl
rcr
xor
add
out
add
add
aam
outsb
xchg
add
stc
push
test
hlt
xor
fiaddl
add
bound
mov
add
inc
add
in
test
sub
push
pop
insb
and
add
imul
mov
les
orb
pop
add
out
es
add
test
in
lret
add
mov
pop
push
lcall
sbb
jge
pop
add
dec
ja
insl
aaa
ja
add
pop
add
jo
xor
mov
gs
cli
or
mov
out
int
mov
movsl
jle
adc
icebp
push
fnstenv
das
xchg
fiadds
aad
sub
mov
cmc
jne
add
orb
or
leave
std
data16
xor
outsl
insl
inc
add
movsb
popf
add
add
icebp
add
cmp
jnp
lcall
xchg
pop
dec
stos
adc
cmp
fs
add
add
inc
sub
add
and
inc
add
mov
add
bound
add
inc
pop
jb
insb
fmul
cmp
ljmp
add
js
xchg
mov
fsub
sub
push
jbe
push
nop
add
dec
ds
inc
imul
cmp
mov
scas
fldl
cmp
call
dec
int3
xchg
jp
lods
jle
inc
call
clc
repz
aad
cmpsb
xchg
or
add
pushf
mov
lods
cmp
add
xor
lea
jg
sbb
fldt
add
call
sbb
push
mov
cwtl
add
add
lret
push
std
test
sbb
add
add
xchg
pop
lods
cmp
add
pop
mov
ss
fisubrl
cmp
int
add
or
xor
shll
lock
ja
push
jmp
lds
push
and
push
sub
cs
ficompl
xchg
add
imul
js
sbb
cmp
xchg
adc
out
pop
ret
cmp
push
or
stos
sbb
pushf
mov
imul
arpl
ds
mov
xlat
outsl
sbb
push
in
dec
lea
es
sbb
loop
mov
aas
push
fnstcw
addr16
dec
bound
mov
icebp
jae
push
lock
jbe,pt
dec
faddl
ret
addr16
push
push
cmp
mov
xchg
jmp
add
push
inc
cmp
daa
movsl
inc
or
imul
lods
lock
pop
or
lret
mov
add
rolb
and
cmpsl
xchg
xchg
jl
popa
sub
lcall
or
leave
cmpsb
dec
sti
cmpsb
fwait
mov
dec
roll
cli
pop
push
data16
push
add
xor
das
sbb
push
cmp
adcl
push
inc
mov
add
xchg
movsb
jno
shrl
xor
stos
inc
scas
arpl
add
xchg
pusha
pop
xchg
sti
adc
sub
cli
stc
pop
cmp
mov
xchg
out
add
and
xor
ds
arpl
xchg
jbe
and
add
inc
or
leave
add
xchg
call
cltd
sbb
out
xchg
or
add
mov
int
pop
pop
clc
add
std
dec
inc
andl
pop
jae
sbb
and
es
loop
and
dec
xchg
addl
paddsw
test
mov
ds
aas
inc
out
mov
push
jmp
cmpb
je
out
xchg
dec
int3
je
out
mov
push
jl
in
aas
outsb
cmp
jo
dec
cltd
xchg
pop
shrb
dec
loope
icebp
and
push
lahf
aam
mov
push
jnp
xlat
or
dec
and
lahf
jp
mov
add
mov
mov
rclb
add
inc
add
or
fimuls
mov
or
fcompl
push
je
pop
cwtl
in
xor
jb
mov
mov
mov
into
out
dec
adc
int3
push
add
add
mov
dec
lds
jnp
pusha
jne
pop
jno
mov
or
mov
jbe
adc
fcoml
shlb
mov
sbb
push
fists
sub
sbb
pop
inc
xor
xchg
push
fnstcw
add
xor
loop
int3
arpl
add
mov
imul
add
mov
push
add
dec
add
sbb
add
sbb
add
jnp
stc
pop
bound
add
movsl
out
add
xor
pusha
add
and
inc
lock
add
popa
push
shl
addb
cmp
dec
lcall
ss
add
xchg
add
sbb
add
std
rolb
add
xchg
ljmp
sub
cmp
mov
hlt
inc
lea
pop
xchg
pop
stc
pop
add
adc
push
addr16
aaa
adc
sbb
add
sub
add
fadd
dec
sub
jmp
mov
mov
loopne
lcall
cli
sub
push
sti
jae
jns
xchg
in
pop
lock
arpl
pop
imul
shl
fadds
mov
mov
cmp
mov
mov
je
outsb
add
add
push
cmpsb
jno
test
lea
push
push
push
mov
hlt
shrb
mov
das
fiadds
pop
add
inc
fists
mov
je
mull
dec
out
cmp
rorl
sub
ret
adc
sub
push
add
stc
ljmp
add
test
je
inc
push
push
test
bound
mov
cmp
jmp
int3
mov
add
xor
push
add
push
addb
loopne
subl
in
push
jb
or
mov
add
pop
mov
add
inc
int
mov
mov
mov
push
mov
adc
stos
imul
and
icebp
lock
jl
cmp
inc
jnp
jge
xlat
data16
mov
inc
jge
das
mov
inc
mov
lods
lds
into
jle
mov
js
push
pop
pop
insb
dec
add
add
aam
movsb
adc
add
jae
add
jnp
add
add
lods
icebp
mov
call
test
pop
js
jecxz
adc
cmp
add
add
jmp
push
mov
aaa
ffreep
jne
aam
cmp
sub
add
adc
dec
xchg
push
sbb
inc
push
add
mov
shll
jmp
xor
jp
pop
cmp
push
add
cmp
sub
popf
adc
inc
adc
mulb
dec
mov
inc
insb
sarb
push
xor
ret
pop
xor
sbb
andl
inc
lcall
mov
es
ja
fildl
mov
jp
pop
lcall
test
lret
add
aam
push
jb
push
data16
fstpt
push
into
fbld
lds
fstl
pop
in
mov
and
xchg
add
out
mov
and
add
cmpsb
into
sbb
sahf
fisubl
push
jo
sub
xchg
add
into
shrb
stos
into
stos
aad
int
pop
faddl
add
xor
jmp
xor
adc
cmpl
in
lods
push
roll
push
add
and
loope
stos
hlt
les
push
incb
adc
sub
movsl
lock
in
xchg
jae
cmc
in
cmp
add
cmp
testb
mov
js
and
push
test
xchg
mov
xor
adc
jo
stos
add
incb
inc
sbb
arpl
xchg
fs
jo
fisubs
pop
jg
xchg
xor
popl
repz
add
sub
add
std
loope
add
imul
xchg
test
sub
mov
pop
add
sbb
add
test
or
jecxz
mov
test
stos
add
pop
mulb
jb
jne
mov
setns
pop
mov
jo
ljmp
addr16
xor
push
add
aad
mov
icebp
fimull
movl
or
mov
addr16
mov
loope
xor
add
cmpsl
xchg
jle
xchg
leave
test
push
clc
fsubrl
sti
out
rol
add
add
add
xchg
loop
gs
stc
jbe
lods
jne
das
filds
cmp
add
pusha
mov
add
ljmp
testl
fiaddl
sbb
lods
adc
imul
outsb
stc
pop
movsl
sbb
inc
sbb
je
push
imul
test
pop
add
inc
jns
cmp
out
add
push
xor
mov
mov
loop
mov
fcomi
add
add
xchg
inc
add
xchg
mov
shl
push
mov
cmpsl
icebp
or
pop
lods
fdivl
popa
dec
pop
add
inc
stos
pop
xchg
out
inc
or
add
adc
add
mov
adc
adc
jge
mov
xchg
fdivrp
jnp
bound
andps
jae
add
fcomps
fisubrs
jmp
lds
mov
add
mov
mov
es
adc
les
scas
adc
xchg
jno
or
pusha
push
stos
mov
add
pop
xorl
mov
mov
adc
inc
add
sahf
inc
push
push
int3
mov
cld
scas
pop
sbb
mov
mov
imul
lcall
add
or
sub
add
and
add
xor
dec
fdivrl
jmp
hlt
add
fcomi
add
pusha
xchg
xor
mov
lahf
fldl
push
cmp
popa
add
movups
mov
pop
cvtdq2ps
loopne
call
fcomp
jmp
cld
scas
pop
inc
add
push
cld
mov
or
lds
push
add
and
ret
and
jg
in
orl
outsl
mov
aad
sbb
pop
jb
add
sub
mov
push
adc
add
cld
lds
add
fstpt
cmp
push
inc
pop
add
les
imul
add
cmp
rclb
sub
inc
pushl
outsb
mov
imull
fstl
mov
lret
sub
loop
push
cmp
xor
add
sbb
inc
sbb
sti
adc
push
xchg
ret
loope
mov
xor
repnz
push
daa
movl
pop
cmpsb
mov
sbbl
pop
lds
push
incl
int3
stos
sti
and
cmp
adc
xchg
add
add
sub
repz
and
and
arpl
xor
push
fistl
add
xor
pop
add
shl
daa
add
dec
inc
cld
mov
dec
addr16
lcall
sbb
or
add
les
cltd
add
int
add
sahf
sub
pusha
fisubrs
popa
daa
int
bound
out
add
lea
mov
or
dec
test
add
dec
mov
add
outsl
or
push
ja
sub
hlt
dec
loopne
dec
cltd
dec
push
stos
mov
imull
add
add
add
push
dec
pop
loopne
fwait
and
rolb
lock
add
in
add
add
fbstp
ret
cmp
mov
mov
cmp
push
arpl
pusha
jnp
jmp
out
fcomps
insl
std
sub
nop
sub
outsl
push
dec
add
ret
fidivrl
adc
xlat
adc
fnstsw
add
test
jge
pop
add
mov
dec
gs
test
jb
dec
inc
dec
add
jae
mov
adc
inc
xchg
filds
mov
jl
repz
aas
cmpb
in
in
or
push
xchg
mov
icebp
repnz
push
loope
scas
sbb
jg
lcall
ficompl
and
js
add
jge
xor
add
inc
in
cmp
fistl
int3
cmp
cmpsb
out
ret
inc
fstps
fs
add
dec
xor
xor
clc
lret
add
fists
cmp
dec
dec
dec
add
xor
mov
add
jecxz
push
outsb
add
inc
inc
inc
jmp
hlt
fchs
test
add
jecxz
pop
xor
inc
add
add
mov
cltd
popf
xchg
xor
push
in
out
or
or
in
add
addl
pop
push
mov
rol
add
mov
jns
push
pop
test
jecxz
inc
add
lea
sbb
imul
xchg
sbb
repnz
test
ljmp
mov
or
cmp
rolb
je
imul
or
scas
mov
jb
jge
and
add
incl
mov
test
fcmovnbe
cmp
fiadds
sbb
arpl
cmp
mov
add
mov
cld
and
cmpsl
outsb
pop
add
out
cmpsb
cwtl
jae
pop
mov
add
repnz
xor
icebp
cli
imul
in
in
das
mov
dec
add
jp
testl
add
cwtl
fs
xorl
mov
iret
pushf
add
add
inc
scas
rorb
mov
xor
js
call
push
cmpsb
mov
and
push
mov
cmp
xor
xchg
add
lahf
cmc
and
icebp
mov
fsubrl
inc
push
adc
or
inc
cs
js
pusha
add
or
insl
and
pop
push
add
push
test
inc
lret
imul
aas
cmpb
add
scas
add
sub
push
daa
add
sub
and
outsb
add
add
mov
add
adc
movsb
jl
jecxz
xchg
insb
xchg
test
clc
add
add
rcll
xchg
out
add
lds
les
add
inc
mov
ja
push
shlb
mov
xor
sub
pop
in
sbb
stos
ret
add
cli
add
xor
jg
addr16
ret
bound
arpl
cmp
xchg
mov
push
imul
sbb
add
add
add
enter
add
add
mov
test
sti
inc
add
jne
jo
mov
fidivrl
sgdtl
repz
pop
add
enter
add
mov
jbe
mov
sbb
xor
mov
dec
dec
xchg
lea
pop
push
adc
movsl
dec
add
ds
adc
add
pusha
mov
ret
shll
inc
add
rcr
add
add
js
push
push
sbb
add
call
sub
ja
addb
inc
add
xor
adc
and
sub
sahf
cli
verr
jnp
pushf
jl
test
and
cld
lret
xchg
sti
and
mov
push
xchg
lds
imul
pop
pop
es
sbb
shrl
add
inc
add
push
jmp
xchg
das
aam
pusha
icebp
sarb
add
loopne
mov
fiadds
dec
test
imul
mov
and
and
add
or
jl
pusha
icebp
pop
icebp
out
push
inc
xor
add
pop
aaa
add
mov
jnp
sbb
leave
fs
or
test
test
push
add
add
xchg
notl
push
pop
add
lea
in
inc
adc
cmp
dec
jp
jo
xor
insl
mov
fsubl
in
ljmp
push
jno
xor
nop
adc
aam
bound
add
pop
test
jmp
pop
cmp
and
mov
lahf
mov
sbb
pusha
aaa
sub
add
jp
imul
and
fstps
mov
fcoml
mov
pop
add
inc
loopne
stos
mov
jno
les
rcrl
test
das
cs
add
add
lods
add
in
add
mov
push
aaa
add
add
rep
ss
jle
testl
addb
dec
dec
add
pop
jp
xchg
sub
pop
sbb
pop
ret
add
test
dec
inc
test
leave
call
pop
cld
add
mov
pusha
inc
imull
jo
adc
sarl
cli
add
ret
adc
rolb
nop
add
mov
xor
sbb
add
enter
xor
and
movsb
scas
mov
adc
xchg
mov
jae
add
mov
dec
pop
in
or
mov
fildll
movsb
sbb
cmc
std
test
add
or
add
es
repz
mov
pusha
bound
imul
dec
add
add
shlb
add
mov
jo
addr16
pop
sbb
stos
rclb
lret
js
fldt
ret
or
data16
std
fbstp
pop
add
mov
xlat
mov
mov
aas
imul
cmpsl
fbld
fcoml
xchg
xchg
popf
add
pop
add
add
xchg
es
mov
jl
leave
shrb
ror
icebp
mov
loope
imul
add
repnz
or
rcl
inc
xor
cmp
jmp
dec
les
decb
mov
stos
aas
add
cmp
jp
mov
mov
fs
and
xor
add
clc
std
mov
sbb
mov
push
jge
add
add
inc
orl
movsl
add
mov
je
call
rcll
aad
icebp
add
sbb
jl
pop
adc
add
outsl
test
add
jbe
loope
sbb
jae
scas
enter
and
mov
mov
fidivs
xor
sbb
jbe
lods
adc
and
movsb
add
jae
lret
aaa
roll
xor
adc
xchg
stos
xchg
pop
sub
or
push
and
xchg
inc
pop
pop
add
add
push
vunpckhps
sub
add
mov
add
jge
sbb
loop
and
jbe
inc
ret
inc
xor
add
je
imul
xor
add
nop
sub
xchg
add
pushf
add
test
stos
add
sbb
in
dec
xchg
mov
dec
fdivrs
fisubs
xchg
in
mov
cmp
pop
mov
inc
pop
or
movsl
jno
faddl
cmc
adc
in
fs
ja
add
pushf
push
incl
mov
xchg
gs
adc
rcrb
jno
clc
loop
stos
cs
pop
mov
sbb
add
test
mov
inc
add
mov
sbb
push
mov
roll
push
add
adc
js
jns
jb
mov
push
stos
dec
stos
add
js
cmp
xchg
or
inc
xlat
rcrb
add
add
pop
push
add
add
dec
ja
or
adc
adc
pop
and
add
scas
dec
jge
shll
insl
arpl
fstpl
add
mov
dec
add
add
fiadds
outsl
sbb
push
cli
lds
fldl
mov
push
mov
add
mov
cli
shll
cmp
ror
ret
add
push
dec
push
push
movsb
sbb
adc
or
mov
sub
mov
add
and
cmc
mov
cli
add
cmp
pop
or
dec
add
push
add
dec
addr16
test
add
xchg
ret
insb
mull
cmp
xor
adc
imul
int3
clc
add
call
and
scas
out
ret
jle
xchg
push
mov
rclb
jp
cltd
xchg
push
movsb
add
clc
hlt
fsub
add
imull
insb
add
sbbb
add
push
ljmp
and
aaa
scas
hlt
ds
xor
outsl
pop
or
push
dec
add
rcpps
mov
out
push
fldenv
sub
fstl
jle
outsb
insb
inc
adc
js
insb
int3
push
out
pop
inc
mov
mov
movsl
add
popa
push
iret
add
add
movsl
cmc
rcl
rcrb
cwtl
mov
test
jmp
add
mov
lret
into
pop
inc
ss
xchg
sarl
mov
mov
shlb
inc
pop
cld
add
mov
jno
fnstcw
andb
jns
fwait
xor
cltd
jae
repz
outsb
jmp
sbb
leave
xor
sub
cmp
inc
cmc
jne
mov
add
lcall
lret
frstor
add
add
test
inc
and
cld
jns
arpl
push
or
adcl
mov
jge
lods
shl
pusha
fidivl
add
sub
or
lods
mov
xchg
movsl
xchg
fildl
xor
add
cmc
cmpsb
or
orb
push
call
dec
jno
mov
daa
push
cmp
and
sbb
dec
fstl
and
sbb
in
cmp
stos
bound
xchg
xor
and
sub
pusha
dec
mov
mov
je
add
add
and
stc
jl
jmp
roll
push
sub
cmp
cmp
jle
add
xchg
sbb
gs
aaa
ja
adc
sub
lret
pop
add
in
cmp
pop
lods
cmpsb
scas
add
dec
and
mov
xor
addr16
into
out
inc
add
sbb
sbb
mov
cmc
adc
fisttps
mov
mov
lret
cmc
scas
pop
add
add
dec
insb
sbbb
add
insl
push
ljmp
add
xchg
adc
or
jae
add
in
cmp
insl
xor
stc
inc
lock
cmpl
mov
mov
push
jge
pusha
ss
cmpsb
push
in
pop
iret
sbb
dec
das
pop
and
into
mov
mov
jb
xchg
xor
fcmove
sbb
aas
jns
push
add
xchg
add
dec
add
fnsave
mov
mov
sub
add
popa
leave
imul
or
jmp
add
mov
or
add
push
jo
sbb
lcall
adc
stos
insl
cmp
jbe
inc
addr16
add
add
mov
decl
iret
aaa
mov
and
insb
mov
jl
mov
cmp
leave
add
sbb
ss
cmpsb
arpl
lahf
in
sbb
fiaddl
xchg
stos
sub
ret
filds
loop
xchg
cmpsb
add
sub
mov
mov
push
add
sub
pop
insb
add
add
adc
ss
mov
std
cmp
sub
adc
test
push
int3
push
jb
dec
push
minps
aaa
ret
cld
loope
add
inc
sub
sbb
daa
add
pop
flds
addl
push
sbb
insb
xchg
movsb
inc
flds
pop
add
ret
add
out
outsb
mov
xor
push
inc
mov
add
adc
popf
xchg
mov
mov
push
dec
bound
push
in
xchg
mov
test
mov
testl
jecxz
mov
testb
jno
std
add
and
rolb
jne
mov
rolb
fstl
jns
jge
jno
push
jno
pop
or
pop
hlt
inc
sahf
sub
or
ljmp
loop
in
sbb
loopne
shrb
popf
cmp
and
mov
roll
lock
jns
xlat
test
add
and
shll
movsb
xchg
mov
add
adc
inc
vpmacsdd
adcb
mov
mov
push
clc
jbe
outsl
nop
add
sbb
into
push
cwtl
add
into
jns
and
bound
movsb
and
lcall
push
mov
pop
lods
inc
add
cmpsb
inc
std
add
aaa
add
mov
jno
inc
sub
push
jo
imulb
fmull
in
push
jge
sbb
test
add
hlt
xor
cmpsl
add
pop
add
into
fistpll
roll
sub
add
pusha
jno
push
pop
cld
cmp
jle
loope
jns
hlt
mov
sahf
adc
add
fmuls
mov
addr16
and
xchg
ret
fmuls
mov
add
mov
push
mov
add
push
jne
movsl
dec
clc
outsl
mov
bound
sbb
mov
adc
mov
jo
lock
lds
les
xlat
or
add
mov
mov
shlb
jl
add
mov
adc
xor
or
lods
sbb
push
fs
add
bound
mov
clc
inc
into
aas
xor
push
add
add
aam
lcall
cmc
dec
loop
inc
add
cmpsb
fistl
sbb
jns
test
mov
xchg
push
or
add
scas
dec
mov
add
mov
cmp
mov
jecxz
add
add
mov
out
inc
ljmp
push
enter
mov
inc
or
or
mov
jge
mov
mov
daa
push
cwtl
scas
sti
sbb
add
fs
xlat
add
add
fmuls
mov
xchg
xor
inc
adc
fisubrl
leave
add
imul
add
fnstcw
fwait
dec
fadds
ss
nop
push
add
inc
adc
clc
add
lods
stos
add
push
ret
xchg
mov
pusha
in
mov
pop
shll
or
fbld
adc
stos
xor
sbb
ror
inc
push
pop
sub
pusha
pop
add
ss
movsl
push
xchg
add
mov
enter
int3
ds
xor
sbb
mov
lods
inc
lret
mov
lea
pop
imul
cmp
imul
ret
sub
gs
add
jae
push
fldl
cmp
in
popf
fiaddl
jbe
mov
lea
push
loope
add
jg
cmc
add
add
add
pop
add
mov
popf
xchg
shlb
leave
add
add
xor
fstl
adc
imul
inc
movsb
pop
inc
popa
outsl
test
cld
aad
filds
and
call
and
dec
and
sbb
add
test
pop
lock
push
negb
daa
add
out
cmp
outsb
add
push
sti
mov
add
push
jbe
mov
rorl
movsl
ss
or
push
push
adcl
clc
jns
jp
pop
add
inc
icebp
mov
test
pop
xor
add
adc
sbb
add
mov
jno
pop
or
and
icebp
inc
loope
dec
cmp
mov
push
mov
repz
jp
loop
push
incl
push
icebp
push
push
popl
mov
jns
repnz
add
int
mov
pop
movsl
cmp
add
add
add
test
add
mov
daa
or
pop
je
mov
add
ds
sub
insl
jns
or
in
dec
xchg
cli
fidivl
add
loope
or
mov
hlt
jb
cmp
sub
add
stos
mov
mov
pop
sub
add
rcrb
add
fistpll
out
cmp
mov
sub
jl
add
inc
jg
scas
cmp
xchg
aad
add
mov
dec
push
lock
gs
or
and
mov
pop
nop
jne
cmp
push
dec
repnz
pop
adc
fs
inc
xchg
stos
add
int
in
adc
mov
cmp
and
das
test
int
ja
fisttpll
dec
movsb
cld
aad
lret
xor
mov
data16
jo
fwait
push
add
arpl
add
push
jl
push
popf
xor
lds
into
ret
in
in
les
lds
lss
pop
ljmp
addr16
and
add
sbb
addr16
ss
xor
aad
jno
push
adc
xor
add
sbb
mov
stos
or
sbb
add
mov
add
loop
xchg
pop
jg
push
outsb
fnstenv
mov
pop
add
mov
mov
mov
subb
test
js
mov
sti
ds
pop
icebp
sbb
dec
xor
into
mov
adc
insb
mov
add
add
popa
sbb
aas
addr16
add
das
mov
jge
fs
pop
pop
xchg
mov
add
xor
cli
orl
incb
clc
jmp
mov
notl
cmp
jne
add
mov
lods
mov
jo
jno
outsl
movsl
pop
push
add
xchg
fnsave
call
add
xchg
inc
aaa
aam
imul
aas
xchg
push
outsl
lds
add
add
push
call
add
insb
xlat
imul
sub
mov
out
out
out
xor
aam
out
enter
push
mov
in
or
push
int3
add
dec
cmc
dec
pop
or
sub
cmpl
jae
adc
xchg
enter
pop
push
push
add
leave
inc
xchg
repz
stos
push
imul
in
pop
pop
out
rol
mov
add
push
mov
fiadds
xorb
cli
xlat
nop
add
add
add
fistl
idivb
sahf
fimuls
rorl
mov
add
aas
inc
xchg
dec
jecxz
cs
add
out
pop
lret
add
outsl
ficompl
test
push
idivb
sbb
rcll
mov
fwait
imul
lahf
or
outsl
jbe
push
push
stc
test
popf
add
mov
hlt
les
sbb
mov
xor
dec
jecxz
and
xor
dec
cmp
loop
sbb
xlat
xlat
daa
cwtl
sbbb
add
nop
jg
fwait
sbbb
lret
sub
xlat
cmp
pop
lcall
xor
mov
pushf
scas
add
push
sub
iret
cmp
bound
add
lret
xor
imulb
aad
mov
enter
rorl
std
js
push
lock
test
push
sub
push
imul
xlat
cmp
not
sub
inc
pop
dec
add
push
cmp
mov
xor
stos
adc
fwait
add
aaa
sub
adc
inc
xor
add
xchg
stos
xchg
insl
addl
pop
sbb
mov
jno
mov
push
add
negl
lock
stos
jge
imul
ret
push
ds
pop
and
add
add
lds
imul
aaa
in
dec
js
lret
or
mov
push
pop
mov
lcall
shrl
fcoml
divb
add
push
clc
push
inc
mov
add
adc
add
test
push
fcomi
ret
imul
cmp
mov
add
int
enter
dec
out
pop
xchg
pusha
test
adc
add
sub
jecxz
rolb
pop
sbb
mov
imul
pop
push
sbbb
add
popl
roll
les
inc
add
aaa
dec
insl
imul
dec
jmp
jb
mov
divl
scas
inc
sub
inc
scas
or
outsl
insl
data16
add
fidivs
sbbb
or
cmp
in
icebp
or
add
jno
stos
loope
mov
lret
sahf
daa
in
adc
test
aas
pop
arpl
mov
ret
pop
xor
push
popa
rcrb
adcl
add
add
mov
add
lods
icebp
add
pop
scas
cwtl
cmp
outsb
leave
mov
jle
add
ja
call
movl
push
es
sub
pop
test
fiadds
ja
insl
stc
sbb
les
dec
cmp
add
ret
inc
and
rclb
into
pop
sub
enter
and
aad
roll
ljmp
push
rcrb
outsl
cmp
fisubrs
into
loop
enter
pop
cmp
xlat
mov
rcr
add
ja
aas
or
lcall
pop
or
adc
mov
js
int3
sub
add
mov
add
aam
les
push
and
xlat
xchg
lds
dec
into
addl
dec
adc
xchg
fildl
and
imull
fstpt
sbb
loop
xor
or
add
stos
xchg
cmp
clc
mov
jg
sbb
lahf
add
rcl
add
out
je
movsl
mov
rorl
fsts
cmp
add
xor
jge
push
dec
or
add
add
in
fistps
aam
inc
and
xor
adc
sbb
sbb
or
add
sbb
test
jg
xor
les
push
lods
jo
mov
cmpsb
xor
add
int
jns
dec
sub
stos
mov
and
add
test
lods
add
scas
in
pop
add
and
pop
mov
add
xor
inc
cmp
jp
in
dec
xchg
push
jb
add
fcom
addl
add
xchg
in
and
loop
xor
add
int3
pop
cmp
xlat
add
push
add
in
loop
xchg
outsl
pop
pop
imul
xchg
cli
add
add
orb
fs
push
add
out
pop
add
xor
adcl
mov
xor
add
add
lock
loopne
inc
cwtl
add
cltd
mov
add
add
int
sub
jge
in
mov
fucomi
add
and
jp
aaa
add
jns
add
mov
push
jno
inc
ja
push
imul
add
mov
test
push
lcall
outsl
add
or
dec
jbe
push
sbb
pop
mov
and
or
pop
sub
jmp
inc
jno
les
dec
add
add
cwtl
add
push
pop
leave
lods
popf
mov
leave
fimull
inc
hlt
jns
push
mov
ret
das
push
add
scas
jecxz
test
push
pop
imul
bound
leave
sbbl
icebp
bound
test
xchg
enter
sbb
add
sbb
add
movsb
pop
adc
adc
add
jbe
shl
imul
jmp
xchg
fwait
loopne
rcrl
jne
sbb
ja
les
cmpsl
addb
and
outsb
fadds
rcrb
insl
add
xor
cmp
push
jl,pn
mov
pop
enter
popa
xchg
sbb
push
xor
popa
mov
add
lahf
sub
ja
jnp
test
add
sbb
mov
data16
lahf
imul
add
dec
imul
and
jb
sub
out
in
inc
nop
testl
inc
loopne
add
push
arpl
push
popf
dec
fisubl
push
ljmp
add
adc
das
out
mov
sbb
xor
fs
jbe
inc
sbb
dec
sbb
fdivrl
jae
jmp
xor
add
jmp
add
daa
xlat
call
add
loope
add
xchg
mov
and
mov
test
sub
pop
rclb
movsl
adc
fs
mov
dec
aas
sbb
mov
xchg
sub
jg
mov
dec
inc
out
mov
mov
fmul
adc
ret
ficompl
add
inc
dec
jo
adc
add
loope
inc
add
es
add
inc
sti
mov
lret
or
and
mov
and
inc
sub
push
lds
stc
jns
push
or
das
orb
add
add
sbb
add
rcrb
xchg
sub
push
mov
jl
add
and
jp
fiadds
add
add
add
add
popl
sub
ret
cmp
jle
inc
stc
xchg
lret
ljmp
mov
jecxz
add
rorb
fiadds
aam
add
in
aaa
lret
mov
testb
sar
movsb
mov
fldt
out
push
data16
sbb
add
jge
ret
push
rcr
icebp
inc
push
cmpsb
and
clc
outsl
rorl
xchg
sbb
add
stos
push
clc
push
push
fisttpl
mov
cmpsb
jg
xlat
fwait
jmp
or
out
mov
add
mov
add
mov
xor
add
xchg
int3
sbb
popf
lea
mov
xchg
jne
aam
cwtl
xchg
in
das
aaa
test
lock
dec
add
lahf
pop
sarl
cltd
add
jno
imul
ficompl
ret
pop
add
imul
cmc
xlat
out
sub
add
ljmp
movb
in
add
jbe
add
add
add
pushf
icebp
and
rcr
pushf
mov
fidivrl
pop
mov
pop
rolb
sbb
pop
add
adc
jae
loopne
sub
or
push
add
cwtl
sub
into
mov
loop
adc
mov
imulb
push
jl
inc
pop
je
push
lcall
sbb
xor
add
add
in
cmp
js
adcb
add
push
and
push
movsl
xchg
sbb
cmpsl
add
out
arpl
add
insb
or
jge
daa
push
punpckhbw
dec
push
pop
lret
or
pusha
hlt
and
or
cmp
inc
testl
popa
xchg
adc
in
and
incb
and
bound
movsl
cmp
xchg
pop
repz
addr16
dec
cmp
pop
xor
inc
push
inc
mov
int3
xchg
out
add
jb
add
jo
jg
and
add
pop
hlt
add
add
add
test
jae
mov
das
movsl
mov
mov
xor
add
decl
pushf
mov
add
ljmp
adc
push
sub
dec
imul
inc
push
jae
jne
mov
pop
aad
movsb
pop
cmp
pop
arpl
lcall
mov
mov
jecxz
xchg
and
dec
xchg
subb
xchg
sbb
shl
fisttps
and
push
pop
xor
push
add
dec
test
add
jl
outsl
cltd
rolb
iret
and
dec
push
leave
mov
add
nop
stos
sti
xor
scas
call
out
rclb
aam
loopne
adc
fcomp
mulb
lahf
xor
in
lcall
cmp
cmp
push
jae
adc
xlat
xor
inc
sub
mov
popf
loopne
ljmp
std
add
mov
insb
out
add
cwtl
inc
xor
sbb
cmove
cld
fsubrs
jl
mov
mov
testb
roll
add
mov
add
in
inc
mov
sarb
hlt
jg
xchg
lods
mov
xor
jne
push
add
pop
stc
pop
mov
push
push
mov
or
inc
aad
cmp
inc
movsb
repz
sbb
sub
mov
or
sbb
lods
xchg
loope
data16
mov
imul
jns
adc
mov
xor
cs
fisubrs
add
pop
xor
in
cld
jbe
int3
pop
or
xchg
andb
jo
jecxz
getsec
sbb
ljmp
add
cmc
sbb
inc
add
adc
dec
fucomp
dec
jne
add
adc
pop
mov
std
ljmp
fdivrl
and
ljmp
add
add
imul
imul
xor
add
cs
sub
out
int
add
dec
shll
xor
outsb
mov
add
orb
inc
dec
add
pushf
inc
idivl
clc
js
mov
aam
rolb
addl
cwtl
iret
add
xor
in
sub
dec
add
mov
dec
pop
sbb
sbb
scas
add
ja
leave
mov
cmp
xchg
mov
sbb
imul
xor
add
sti
mov
shlb
shll
out
add
dec
mov
dec
add
int
push
add
in
dec
pop
and
ljmp
sbb
add
cltd
cmpsb
mov
ljmp
or
mov
sub
lret
add
cmp
xchg
add
ror
and
sub
mov
cmp
push
xor
cs
jb
in
xchg
push
test
in
push
loope
mov
cs
sub
dec
ftst
add
add
add
or
xchg
mov
or
gs
add
fstpl
mov
lret
pop
int3
push
add
outsl
jb
add
fs
xor
sbb
jo
pop
cmpsb
add
push
push
add
fnstsw
sub
sub
scas
imul
sbb
add
and
sub
sub
call
mov
into
out
xor
mov
inc
add
mov
add
adc
add
add
jns
mov
and
add
push
mov
rcrb
fildll
nop
out
jns
add
jne
out
stos
add
ds
stc
popf
fstpl
add
add
jle
pop
mov
sub
jnp
or
lahf
je
hlt
aaa
and
test
iret
add
add
jecxz
jb
push
add
out
or
add
push
and
int
cmp
xor
xchg
mull
repnz
in
add
jo
xchg
push
movsb
add
aas
jl
rolb
and
icebp
and
mov
xchg
add
add
cmp
subl
sub
sbbb
insb
lea
in
and
dec
das
mov
popa
add
ja
add
adc
pushf
ret
adcl
arpl
or
cmpsb
mov
loop
fmuls
in
testl
cltd
das
scas
jge
imul
push
dec
add
inc
fnstcw
cmp
test
jne
dec
add
or
add
jecxz
rcrl
xor
fldl
and
clc
jbe
dec
add
pop
inc
push
enter
jecxz
mov
iret
xchg
fwait
cld
adc
add
jnp
add
pusha
add
add
ret
adc
add
or
adc
mov
push
jae
sub
cld
and
cmp
adc
cmp
stos
pop
add
sub
lret
mov
fcmove
sarl
fiadds
sbbl
add
pop
lret
jle
mov
popf
neg
adc
jne
mov
pop
or
fwait
and
mov
mov
dec
leave
aad
popf
sub
out
cli
test
imul
xchg
cmp
mov
cs
rcl
inc
dec
ljmp
add
addr16
stos
cmp
pop
pop
jae
sub
cmp
add
or
ret
dec
jmp
jge
sbb
bound
test
add
push
dec
pop
add
iret
adc
imul
add
sbb
lock
lock
ret
mov
push
xor
sbb
popf
add
and
dec
inc
add
movsb
aad
fadds
jo
fs
mov
fsubrs
mov
push
fnstsw
testb
imul
jge
pop
push
in
xchg
mov
ja
add
mov
mov
add
adc
cmp
jnp
dec
pop
add
into
insl
jno
lcall
imul
and
or
test
mov
add
pop
cmp
push
and
mov
out
adc
push
pop
push
fdivl
cmp
test
and
add
daa
cltd
sub
xchg
imul
add
nop
inc
orl
das
and
adc
jbe
xor
iret
insl
repz
jmp
loop
cmpsl
cltd
into
repnz
xchg
les
xor
add
add
repz
mov
popa
inc
jl
cld
mov
mov
jne
add
int3
shl
icebp
mov
sbb
insb
sub
cmp
or
dec
add
xchg
add
add
faddl
scas
inc
pop
loopne
sub
mov
orb
movsb
or
xor
fisttpll
lret
or
and
jnp
inc
add
popa
push
clc
aaa
inc
imul
arpl
push
or
hlt
movsl
sti
xor
dec
jge
lods
mov
fldl
dec
jb
add
pop
rcll
mov
jb
dec
stos
add
cmpsl
icebp
shr
push
testb
sbb
add
pop
cmp
push
mov
push
mov
xchg
add
add
pusha
cs
mov
stc
pop
cli
sahf
fbstp
push
rcrl
je
call
mov
gs
mov
mov
rorb
popw
push
mov
in
lds
push
in
pushf
sub
cmp
mov
ja
hlt
loop
dec
add
mov
pusha
lret
push
push
push
aam
cli
push
mov
add
push
bound
lds
or
mov
and
add
cmpsb
and
out
add
test
inc
faddl
mov
inc
mov
push
pop
add
push
xor
xchg
mov
into
fcompl
cld
xor
pop
dec
mov
jecxz
decb
jmp
xchg
add
cmp
sub
jb
add
xchg
sbb
xor
test
dec
adc
mov
fldl
fsubrs
fidivs
inc
inc
push
add
add
cmp
pop
sub
jae
pop
add
push
aam
test
loop,pn
cs
add
ret
inc
lock
sub
add
cmpsl
cmp
inc
add
jae
stos
sahf
mov
sub
push
xor
mov
pop
and
pushf
pop
add
add
mov
fadds
add
sub
pop
into
sub
mov
sub
add
sbb
add
stos
cmp
loopne
inc
mov
mov
dec
stos
and
or
mov
sub
xor
leave
stos
testb
xchg
push
pop
lods
adc
cmp
mov
add
dec
mov
jbe
mov
mov
add
xchg
lea
out
into
add
xor
or
push
add
mov
rcrb
mov
std
int3
add
iret
push
fs
cmc
rolb
test
flds
xor
daa
arpl
iret
jb
jne
lds
pop
int
mov
lods
sub
add
mov
and
add
fstpl
test
add
lahf
cltd
add
add
add
fwait
dec
shlb
jnp,pn
out
cmp
sbb
add
cmpsb
xor
out
pop
pushf
fwait
push
xor
mov
inc
add
xchg
mov
cltd
xchg
sbb
pop
inc
pop
loopne
add
dec
daa
add
fadds
int3
xchg
sub
cmp
rolb
popa
shr
enter
mov
test
stos
outsb
cli
ljmp
add
loop
ret
pop
add
lea
jno
shll
enter
pop
incb
mov
test
push
adc
mov
insl
leave
add
push
add
cmp
and
or
lahf
mov
xchg
fisttpl
mov
mov
lods
ljmp
or
je
movsb
lods
mov
and
dec
xchg
add
test
mov
add
movsl
xchg
or
test
fldlg2
push
sub
pushf
mov
add
push
add
xor
call
pop
sahf
push
roll
or
cld
inc
jg
imul
xchg
add
fistpll
sub
imul
dec
or
push
sbbb
sti
loop
addl
cmp
jle
xchg
daa
fcoml
sarl
div
jmp
ret
sub
or
dec
add
dec
lret
in
stc
hlt
push
add
xchg
mov
xchg
xlat
sbb
jmp
dec
adc
ficoml
mov
mov
mov
addb
pushf
les
add
mov
fstl
cmp
or
adc
add
inc
add
xchg
mov
in
jnp
inc
outsb
push
push
add
jle
jno
dec
add
pop
inc
sahf
add
lret
mov
add
and
xchg
icebp
jbe
push
dec
mov
and
add
mul
add
add
add
test
jl
cltd
enter
inc
and
jno
sub
xchg
mov
fstl
push
or
hlt
mov
out
add
test
mov
lods
pusha
add
xor
xchg
std
outsl
cmp
shll
insl
pushw
adc
push
mov
lea
jb
insb
mov
ja
lret
lret
bound
gs
sti
inc
add
mov
mov
pop
mov
push
pop
mov
imul
mov
add
and
cmp
mov
lret
mov
dec
ret
add
xchg
ret
jg
push
popa
jns
mov
stc
mov
pop
push
rclb
jne
add
push
fcompl
jno
pop
mov
not
jno
sti
mov
mul
add
mov
shrl
push
imul
call
test
popa
pop
and
mov
ret
add
rclb
dec
cmp
cmp
sub
mov
jns
push
xor
test
pop
jecxz
inc
bound
les
data16
cltd
inc
sahf
aaa
xchg
pop
int
aaa
cwtl
gs
push
sbb
push
sbb
out
add
dec
loope
or
popa
xor
push
xor
add
dec
dec
xchg
or
addb
xchg
add
fs
ret
stos
rorl
jo
pushf
lods
outsb
outsl
mov
dec
jmp
imull
add
fimuls
xor
out
add
jge
dec
cmp
jo
roll
xor
cld
test
pop
test
dec
in
fcompl
mov
mov
adc
jl
pop
or
xchg
ret
sbb
dec
mov
lret
jno
mov
or
lods
push
mov
in
dec
shll
enter
add
add
add
fdivl
and
add
jg
aad
jbe
xor
add
sub
dec
mov
je
je
push
lea
mov
push
add
push
add
or
sub
scas
aas
xor
add
inc
repnz
and
xor
repnz
push
into
pop
add
aaa
cmp
fdivs
mov
jno
push
push
inc
and
sahf
aam
jns
add
mov
movsb
adc
inc
dec
sub
lcall
shl
jge
add
imul
and
dec
ljmp
je
push
mov
ret
add
jge
movsl
lret
add
lahf
push
aam
add
out
rolb
sub
add
fnsave
cmc
cltd
in
inc
ret
xor
popa
mov
movsb
mov
out
iret
roll
add
adc
inc
stos
adc
add
mov
mov
inc
xor
mov
loop
in
fs
add
or
lods
fistps
mov
add
popa
scas
or
aad
call
mov
sahf
arpl
jno
pop
mov
mov
mov
mov
cmp
scas
cmp
jg
test
add
sbb
jb
sbb
and
js
popf
leave
xor
mov
ret
push
mov
shr
cmp
sbb
sub
cltd
fs
fwait
add
push
pop
add
in
lahf
add
fstps
scas
push
add
data16
test
add
sub
lret
sbb
add
xchg
inc
daa
add
jge
adcl
repnz
rorb
inc
add
xchg
in
cmpsb
imul
dec
sbb
leave
inc
sbb
and
or
mov
fisubrl
fdiv
jne
aad
dec
lods
jbe
fsubl
xor
inc
mov
push
adc
pop
jp
repz
aam
rcrl
push
stos
add
dec
movb
outsb
es
jno
fidivrs
out
pushf
lods
add
inc
sub
mov
fildl
and
sbb
je
adc
aas
lods
add
int3
imul
bound
les
insb
das
addb
sbb
loope
mov
pushl
fwait
scas
cld
addr16
or
in
or
xchg
jb
imul
das
std
add
sub
fsts
mov
mov
jg
jmp
ds
mov
cmc
nop
adc
cmp
add
xchg
and
add
jecxz
imul
fdiv
push
mov
clc
lret
jo
mov
cli
add
adc
es
dec
cmp
jecxz
push
cmpsl
pop
xchg
push
cmc
repnz
mov
xchg
into
pop
stc
adc
cmp
add
pop
call
xchg
cmpsl
stc
or
pop
rcll
pop
adc
aas
fsubl
das
jbe
inc
mov
push
into
inc
add
xor
mov
mov
out
pop
stos
in
test
dec
add
push
jb
jbe
mov
pop
cmc
fldcw
inc
dec
stos
repz
xchg
scas
pop
inc
bound
sub
rolb
push
add
cli
mov
clc
fs
js
repz
mov
gs
push
push
gs
push
mov
mov
mov
loope
pop
mov
lods
aas
into
jns
mov
mov
xchg
push
test
js
add
or
fsubr
add
jle
mov
divl
mov
xor
sti
dec
in
add
mov
adc
cli
aad
add
or
mov
xchg
push
movsb
sbb
jge
cltd
adc
hlt
cmp
and
add
add
dec
movsb
add
test
lret
pop
cmp
mov
aaa
jg
adc
ret
sahf
add
and
je
lret
push
mov
shll
loope
mov
ud1
lret
orl
dec
mull
jle
add
add
lret
cmpsl
rol
add
jae
add
addl
sub
jno
movsb
push
jno
jp,pn
inc
and
sarb
fs
add
ss
ljmp
repnz
adc
xor
cli
mov
fs
sub
clc
es
out
in
in
mov
jae
les
mov
inc
inc
adc
popa
cli
dec
push
add
add
sbb
add
adc
adc
jle
mov
push
add
stos
mov
add
fiadds
pop
xorb
lea
hlt
lea
push
and
aad
stc
cmpsl
cmpsb
orl
test
mov
repnz
frstor
repnz
or
fprem
add
mov
add
rorb
repz
test
inc
imul
adc
adc
and
scas
dec
add
test
xchg
scas
lock
std
mov
pop
andps
mov
popf
cli
cmp
jp
jo
jmp
add
int
xor
rcrl
aam
add
sti
jle
insb
jle
loopne
and
pop
or
sbbb
and
fldenv
cli
das
xchg
push
pop
outsl
push
cmp
and
add
sbb
add
jmp
lock
push
mov
aam
shll
add
cwtl
sahf
ds
fdivrl
incl
mov
push
push
add
add
xchg
inc
das
mov
xchg
xor
outsb
enter
fmuls
in
push
jo
xlat
cmp
mov
xor
fcomp
fisubs
out
jbe
adc
add
and
out
xchg
sbb
call
jae
arpl
movsl
pop
iret
sbb
orl
out
jo
movsl
sbb
repnz
or
fdivs
mov
rclb
add
cmp
add
adc
xlat
mov
call
jmp
inc
popf
outsb
rolb
push
and
cmpsl
mov
push
pop
mov
add
push
pop
mov
insb
mov
testb
adc
lods
mov
push
cmp
adc
mov
add
mov
xlat
mov
addb
addr16
pop
push
jmp
inc
aam
dec
scas
outsl
push
insl
out
xor
mov
lret
jns
mov
lock
mov
subl
add
mov
movsb
das
add
jge,pt
sbb
mov
mov
cld
test
add
add
xchg
or
cwtl
cltd
mov
jge
push
loop
jne
into
add
add
mull
jecxz
mov
loope
add
add
xor
cmp
sub
cmp
add
mov
sub
pop
aaa
popa
mov
push
aam
or
inc
mov
std
es
mov
add
pop
and
fisttpl
repz
mov
add
add
fisttpll
push
repz
mov
xchg
mov
mov
sub
or
add
testl
add
sbb
leave
and
add
and
scas
aam
add
add
cmp
add
sub
fldenv
add
mov
lret
insb
frstor
idivb
push
add
pop
or
fadds
mov
jae
add
outsb
ret
add
add
sbb
cwtl
and
cmp
dec
out
mov
pop
pop
pop
add
add
add
and
xor
pushf
pop
das
mov
add
jnp
insb
cmc
dec
adc
insl
add
or
and
fldcw
or
mov
shll
add
out
jmp
add
outsb
adc
pusha
xchg
sbb
fiaddl
add
jl
fs
out
shrb
jne
pop
imul
outsl
pop
cmc
xor
add
xchg
xchg
add
lret
and
push
in
xor
or
mov
popf
jmp
and
cmp
cmc
add
movsb
or
add
pop
pop
jg
add
scas
ljmp
sahf
and
sub
mov
pmulhuw
rcl
adcl
faddl
pushf
sti
add
sti
add
mov
outsl
cli
mov
rolb
fisttpll
aaa
fxch
decl
fimuls
call
out
mov
insb
cmp
es
ja
jmp
pop
xor
cmp
popf
sub
cmp
in
jo
push
push
jb
add
and
ljmp
add
fmul
mov
mov
fbld
jg
shrl
lcall
das
lods
dec
pop
or
cld
gs
pop
cmp
adc
cmpsl
cs
cmpl
add
mov
nop
test
in
mov
daa
enter
dec
ss
inc
adc
jmp
subb
pop
add
push
iret
push
mov
add
lods
ss
add
enter
sub
add
add
mov
pop
and
pop
ss
into
inc
rclb
lahf
mov
add
mov
add
out
add
add
subl
lcall
adc
add
or
add
loopne
ret
mov
dec
cmpsb
testl
add
add
add
adc
xor
dec
arpl
mov
out
add
popf
repnz
dec
stos
push
mull
mov
imul
cld
clc
add
mov
sub
and
cmpsb
and
xchg
xor
aam
push
cmp
leave
jl
imul
xchg
inc
faddl
cmpsl
adc
and
dec
js
aas
add
add
aaa
in
inc
xor
lahf
push
mov
mul
add
cmp
add
in
leave
imul
insl
or
add
insl
cmp
dec
mov
add
push
push
lods
sbb
add
in
ret
lahf
insb
cmp
lret
add
pop
sub
fidivrs
out
mov
pop
add
push
push
cld
mov
cld
ret
shrb
shr
movsl
and
fcoml
or
sti
mov
or
incl
xor
movsl
mov
enter
inc
and
lods
mov
jns
add
incl
test
mov
add
xchg
add
sub
and
inc
leave
je
add
pop
cmc
and
adc
jmp
add
test
add
add
leave
inc
addb
lock
fdivrl
pop
jg
lahf
push
push
lret
xor
jecxz
or
or
popa
shll
push
push
sub
mov
add
adc
xchg
dec
jecxz
and
pusha
add
movsl
add
add
sti
pop
daa
test
pushf
sbb
out
sub
fwait
jae
fdivs
or
pushl
and
jp
push
pop
xchg
data16
clc
jbe
dec
iret
lcall
pop
mov
or
ret
testb
in
mov
jg
add
adc
fidivrl
insl
data16
add
pop
push
lea
add
add
fisubs
insb
lret
push
sbbl
add
pop
aaa
sub
repz
jge
xchg
and
jb
jnp
add
jmp
sub
imul
mov
pushf
out
in
cmpsl
add
decl
add
pop
pop
add
mov
js
cli
cmp
lea
add
cmp
push
xchg
mov
hlt
pop
sbb
into
add
xlat
adc
sub
adc
jmp
in
dec
cmpsb
xlat
add
fwait
push
decb
pop
push
pop
jnp
jecxz
and
xchg
mov
fs
dec
add
ret
pop
add
add
add
add
pop
dec
imul
or
or
repz
add
testl
dec
rolw
sbb
inc
mov
pop
mov
adc
loop
cmp
dec
jmp
jg
jl
add
inc
cmc
xchg
repnz
jge
push
movsb
push
enter
mov
bound
fisubs
cld
inc
orl
xchg
test
frndint
into
sti
fcomip
repnz
ja
jp
daa
fnsave
rclb
or
or
into
jo
inc
pushf
fwait
or
mov
jbe
push
xchg
add
push
aad
insl
jns
das
sub
and
mov
xchg
mov
xchg
add
bound
sub
popf
xchg
jecxz
sbb
cmp
mov
shll
or
sub
cwtl
mov
fildll
gs
mov
ljmp
push
negb
sub
add
add
aam
adc
xchg
add
add
ret
xchg
data16
lret
and
push
add
pop
xchg
push
jge
aam
data16
cld
lods
rolb
popa
jb
push
add
xor
sbb
cs
loop
or
fdivl
sbb
sbb
push
cmp
mov
cli
sub
sbb
push
pop
inc
xchg
add
push
sub
add
pop
popf
push
add
pop
stc
adc
add
test
fnstsw
cmc
push
push
jns
add
pop
lcall
xor
push
into
addr16
add
or
inc
mov
cwtl
aaa
arpl
stc
add
outsb
add
add
fadds
orl
inc
data16
add
cmp
push
add
add
scas
imul
sbb
and
xor
loope
or
add
add
and
and
iret
add
fnstcw
aaa
decb
add
out
mov
scas
in
lahf
and
hlt
lcall
xchg
mov
xchg
push
leave
bound
dec
and
sbb
sarl
sub
pop
and
stc
lahf
stc
data16
add
int3
cmp
xor
xchg
cmp
add
mov
push
int3
subl
push
mov
sub
ljmp
mov
dec
pop
push
add
mov
ja
push
cmp
orb
cmp
add
call
or
mov
out
out
insb
mov
out
add
or
fisubl
lods
sub
incl
adc
dec
inc
jmp
imul
shll
ss
jae
inc
add
in
movsl
lcall
cmpsb
loopne
subb
outsl
inc
mov
dec
dec
iret
mov
popa
fwait
les
insb
jbe
xor
sbb
pop
xchg
data16
cltd
imul
stos
scas
fisubl
test
out
addb
xchg
int3
iret
sbb
mov
int3
add
sub
mov
out
iret
jbe
movsb
cld
add
cs
gs
loop
push
mov
add
or
das
std
or
adc
shrb
test
pop
pop
or
add
mov
jns
cmpsb
cmp
add
nop
loop
lcall
add
cmp
bound
add
popw
add
popl
mov
sub
xor
mov
xchg
and
cmp
loop
xchg
movsl
pop
xchg
loopne
adc
sahf
lods
mov
mov
shll
sahf
adc
and
add
test
add
in
mov
addr16
jl
ljmp
bound
aad
inc
imul
aad
leave
jae
adc
pop
mov
xlat
addr16
sahf
mov
stos
pushf
and
pop
mov
push
cmc
jp
mov
enter
sti
mov
in
sbb
bound
mov
add
fstpt
test
int3
std
dec
cs
jp
out
push
jns
clc
xchg
orl
outsb
add
jmp
add
sub
fidivrs
lock
sbb
mov
pop
sub
add
fcoml
out
add
pop
dec
int
cmc
jp
lret
bound
inc
push
mov
aaa
sti
roll
repnz
jae
inc
or
add
jb
pop
stc
les
inc
dec
jbe
inc
out
imul
and
mov
shll
roll
gs
cmp
xchg
pop
mov
fmulp
add
push
add
mov
stos
mov
out
sbb
addr16
stos
out
and
pop
push
dec
jbe
dec
dec
test
add
pushl
call
inc
sbb
sbb
sbb
xchg
push
xlat
add
pop
mov
jnp
xchg
sbb
push
sti
mov
nop
clc
leave
scas
jbe
enter
mov
aas
movsb
cli
insb
int
push
mov
dec
mov
mov
lret
mov
ss
insl
scas
sar
mov
out
add
jecxz
add
or
xchg
sub
push
or
dec
ja
xor
xor
push
and
sahf
add
add
scas
push
push
cmp
jne
leave
mov
add
add
mov
push
add
movsb
xor
bound
add
pop
ds
push
add
jmp
jo
sbbl
test
mov
in
xchg
bound
insb
sbb
inc
add
cmp
or
mov
imul
sbbb
pop
jo
stc
xchg
jg
rorb
and
add
out
push
gs
rcrb
mov
pop
hlt
enter
dec
scas
or
cld
xchg
int
dec
add
pop
imul
out
sub
sbb
repz
cld
add
and
call
add
xchg
and
add
dec
add
lret
cltd
out
ficoml
in
xor
enter
lea
jge
cwtl
mov
loope
popa
test
in
add
add
arpl
adc
outsb
push
push
int
jne
loope
add
pop
movsb
mov
and
push
rorb
inc
shl
aas
enter
mov
mov
aas
push
cld
jae
lock
mov
add
popa
or
std
enter
inc
add
push
pop
je
adc
xchg
out
add
and
aam
pop
xchg
out
push
data16
mov
mov
add
pop
cli
mov
cmp
sbb
ret
jnp
das
or
sbb
bound
fs
fwait
add
int3
inc
add
sub
out
mov
inc
rol
imul
clc
sub
sbb
sub
dec
add
stc
enter
jne
push
mov
and
dec
mov
push
cmp
jbe
or
pop
sub
or
add
pop
mov
add
in
ds
pop
ficompl
hlt
sahf
jmp
mov
test
jge
rolb
out
lods
dec
jecxz
pop
adc
ret
push
cmp
mov
jge
jae
movsl
imul
xchg
add
dec
pop
in
inc
outsl
mov
cltd
fisttpl
idiv
add
stc
imul
clc
leave
add
in
scas
sbb
inc
add
pusha
addb
lea
pop
aas
and
inc
mov
mov
push
or
push
push
shll
shlb
aam
cwtl
aaa
cmc
jp
or
out
xor
or
add
xchg
mov
test
outsb
pop
in
stos
imul
popa
xchg
and
mov
xchg
cmp
jg
fimull
enter
jnp
inc
push
jl
ss
xchg
sub
imul
mov
xor
jmp
push
insb
into
out
add
add
sahf
mov
add
push
add
lods
pop
pusha
or
xor
add
into
addr16
xorb
test
cmp
add
push
sbb
xor
insl
dec
jecxz
or
add
adc
push
test
xchg
loop
jmp
popa
lahf
addb
cmp
mov
xchg
arpl
add
ljmp
add
push
test
mov
je
xchg
pop
loope
addr16
sahf
add
stos
sbb
ret
sbb
and
movsl
adc
or
jg
test
in
call
bnd
or
aam
jle
idivb
add
mov
push
add
enter
popl
mov
cltd
imul
jmp
repz
xor
xchg
cld
and
je
gs
dec
movsb
mov
add
insb
push
dec
aaa
insl
xchg
sbb
fisubrl
add
cld
pop
jnp
lea
test
and
push
mov
mov
mov
sbb
cmc
les
inc
add
cltd
test
and
jp
cli
das
sti
add
sbbl
popa
add
add
sbb
repnz
out
jmp
sub
sbb
stc
pop
xlat
xchg
loope
test
add
inc
rcrl
mov
cmp
dec
or
push
scas
xchg
stos
jns
je
adc
add
cmovb
mov
imul
mov
lret
shlb
stc
push
sbb
in
sbb
mov
xorb
fdivrl
mov
add
faddl
adcl
cmp
fs
add
cmp
fmull
fsubs
mov
add
mov
ljmp
cmpsb
inc
aas
aaa
sbb
dec
inc
add
cltd
cmpsl
and
push
add
add
push
cli
cltd
or
jbe,pt
scas
add
mov
aas
lret
jae
xor
fwait
push
adc
xorb
mov
ss
nop
dec
dec
mov
jmp
cmp
add
mov
push
xchg
test
add
dec
add
mov
add
int
push
sub
aas
xchg
int
lret
mov
in
lret
dec
pop
sahf
sub
adc
enter
out
sbb
add
jl
dec
sbb
inc
push
test
xor
pop
mov
adcl
push
mov
addr16
daa
hlt
aad
jnp
and
test
sti
inc
fldl
xchg
mov
add
stos
cmp
insb
dec
test
xchg
jl
lcall
or
add
xlat
int
scas
bound
scas
ret
xchg
lcall
decl
mov
into
add
enter
lret
push
iret
stc
and
and
orl
int
push
sub
lret
add
xchg
dec
sbb
orb
and
mov
pushf
mov
aaa
adc
and
ljmp
outsl
jbe
sbb
mov
mov
std
je
mov
sub
ret
mov
leave
dec
rcr
push
jnp
lret
lahf
dec
les
pop
xlat
add
ret
loope
or
dec
cmp
push
and
jmp
add
cmc
sub
and
testb
jecxz
add
push
push
insb
or
jnp
jae
jmp
mov
rorb
aas
pop
jo
insb
inc
push
mov
pop
rcrb
lea
push
cmp
ret
imul
adc
loope
cmpsl
cltd
cmp
mov
push
push
add
add
push
jmp
inc
loope
adc
jge
mov
and
sub
enter
sbb
pop
fmull
inc
adc
shrb
out
or
mov
loope
subb
push
andb
les
add
add
test
dec
addb
out
rclb
and
out
pushf
jp
outsb
loope
sbb
ljmp
filds
icebp
pop
adcl
cmp
mov
push
mov
in
sbb
or
mov
aam
sub
add
mov
psubsb
int
xor
or
push
int3
jg
sbb
aad
pop
outsl
cmc
push
fbld
clc
inc
imull
mov
add
addr16
into
ljmp
pop
push
cmp
cld
movsl
dec
push
ja
dec
jbe
push
push
in
loope
fadds
push
inc
pop
xor
or
test
sub
pop
mov
andl
movsl
stos
jnp
testb
dec
lea
lret
mov
loope
dec
ror
mov
mov
pop
jne
sbb
hlt
push
sbb
mov
jg
or
push
inc
xchg
scas
pop
mov
mov
push
xor
inc
negb
inc
xor
aam
mov
xor
into
and
push
cwtl
outsb
jle
dec
mov
pop
aaa
inc
add
loop
inc
cld
movl
add
add
add
lahf
dec
mov
mov
mov
mov
push
mov
mov
call
adc
jo
and
mov
jae
xor
add
push
sub
imul
sar
dec
rcrl
les
in
add
testl
add
push
add
and
lds
pushf
adc
jge
or
dec
inc
xor
add
sbb
into
xchg
sbb
xchg
cmp
add
add
push
add
xor
fiaddl
mov
in
stos
and
cwtl
pop
pop
push
sahf
mov
out
imul
mov
jbe
testb
fdivrs
fwait
popa
add
mov
sti
xchg
outsl
or
xchg
xor
xchg
fidivs
fs
es
mov
push
arpl
adc
push
mov
bound
loope
xchg
mov
or
xchg
outsb
incb
mov
add
push
pop
stos
sub
ret
cmp
jns
lret
xor
add
jl
fwait
inc
xchg
mov
stos
insl
jmp
ud1
cmpsl
push
je
cmpsl
inc
mov
add
test
sub
jne
xor
cmp
mov
add
dec
and
mov
cmpl
jo
cmp
add
mov
and
mov
in
repz
adc
add
popw
mov
cmp
in
xchg
lods
sbb
enter
add
ljmp
js
jp
xchg
and
mov
jo
push
shlb
mov
sarb
sti
or
add
mov
aaa
scas
and
pop
xchg
insb
inc
add
enter
add
mov
pop
jnp
add
pop
mov
fnsave
push
add
add
icebp
stos
push
incl
into
pop
repz
data16
test
stos
add
and
mov
push
mov
add
sbb
in
ror
out
xchg
push
mov
jle
stc
enter
mov
out
in
mov
outsb
ret
out
lret
lock
jp
test
mov
add
add
add
mov
sub
push
cmp
js
daa
adc
movsl
mov
loop
and
data16
push
add
mov
aaa
add
loopne
stc
pop
sub
mov
imul
pop
jns
in
cmc
std
gs
out
imul
int
dec
dec
jmp
adcb
mov
add
fistps
fldt
dec
adc
repnz
sahf
add
dec
bound
xchg
ret
push
cmp
xchg
mov
add
push
add
push
std
imul
xor
lods
popa
dec
add
dec
repnz
mov
cmp
je
movsb
adc
cmpsb
push
pop
and
arpl
rorb
stos
jns
mov
or
roll
sbb
jae
add
sub
int
add
pop
insl
lea
iret
stc
icebp
ret
add
adc
add
push
or
sbb
xlat
ret
frstpm(287
add
cmp
pushf
add
insl
bound
in
sahf
add
cs
push
cmp
repnz
add
outsb
lret
lea
cs
sub
cmc
pop
and
movsl
jecxz
fcompl
fisubs
and
add
std
xor
enter
push
jae
arpl
icebp
fiadds
add
add
sbb
and
data16
jnp
or
out
pusha
add
and
adc
add
add
xor
int3
ficoml
out
ljmp
loope
add
jle
roll
add
js
pop
sub
push
test
std
add
iret
add
mov
sub
adcl
hlt
in
inc
adc
xchg
lds
dec
sbb
push
jne
jne
fs
mov
push
lcall
mov
lahf
mov
push
int
and
add
cmp
rorl
push
add
xchg
xchg
addl
call
jge
jb
add
xor
outsb
xchg
dec
jge
push
add
jecxz
add
pushf
sbbl
das
fistps
ja
jmp
sub
testl
or
sbb
cmp
add
pcmpgtw
pop
lock
add
pop
add
stc
loop
add
add
add
repnz
add
mov
roll
jnp
or
push
enter
cmpsl
mov
and
adc
or
adc
cmp
xor
add
xor
mov
mov
js
in
mov
xor
nop
loopne
xor
pushf
aas
xorl
or
imul
mov
mulb
sub
outsl
add
jecxz
out
pop
jmp
mov
test
mov
imul
cmp
add
lret
push
dec
aam
and
imul
outsb
lods
sbb
mov
ja
daa
sbb
and
clc
adc
pop
push
add
jecxz
cld
adc
je
xor
push
push
xor
loop,pt
add
ds
stc
add
roll
cmp
pop
add
inc
add
xchg
xlat
fidivl
lods
xor
ljmp
inc
or
shrb
ja
or
arpl
movsl
or
cmp
dec
cmpsl
adc
push
mov
cmpsl
lret
js
pushf
out
lret
add
in
aad
aad
push
out
cmp
lcall
mov
es
loope
ror
jo
cmp
or
fbld
push
rcl
push
xchg
into
and
jge
jecxz
add
pop
or
in
sub
push
cli
jno
add
push
cmpsl
add
scas
sbb
shlb
dec
movsb
add
loop
add
xchg
jg
push
pop
clc
out
add
or
xor
push
mov
fcmovnbe
scas
ret
push
loop
sbb
sbbb
pop
sub
dec
add
xor
jbe
add
cmp
xchg
add
adc
mov
mov
imul
cmpsl
cmp
add
dec
sbb
int
pop
ss
jmp
shl
ss
mov
cmc
inc
stos
movl
sbb
scas
dec
xchg
rol
sub
add
cmp
xchg
push
inc
stos
mov
scas
out
inc
cmp
lds
sbb
push
or
add
add
lds
jmp
sbb
in
stos
sahf
mov
adc
roll
inc
add
push
scas
lret
add
repnz
adc
mov
add
jb
iret
addr16
add
repnz
pushf
add
xchg
add
mov
add
pop
push
sti
inc
add
js
rcl
xchg
ret
lret
add
pop
rcrb
das
rolb
mov
add
mov
push
mov
mov
add
dec
jecxz
cmc
add
pop
jns
add
and
and
cltd
xchg
pop
call
pop
cld
add
adc
in
inc
add
push
notl
add
and
xor
and
pop
dec
and
adc
and
jbe
cli
in
es
add
test
cltd
clc
in
out
lods
push
pop
xchg
es
add
xor
add
nop
cmpsl
add
mov
or
add
xchg
adcl
outsb
pusha
pop
and
add
divl
stc
ret
loope
sub
jecxz
addl
sbb
add
pop
popl
fdivr
out
cmp
sbb
and
mov
xchg
aas
lods
insl
sbbb
lods
mov
add
paddw
andb
mov
fcompl
mov
lock
add
xor
stos
dec
repz
pop
mov
or
cmp
pusha
pop
lret
mov
cmp
movsl
pop
or
adc
inc
scas
mov
jns
cli
pushf
and
pop
add
xchg
shll
jb
filds
mov
movsb
lods
into
dec
cmp
add
lods
push
jbe
sub
and
ret
or
add
and
and
out
cmc
push
outsb
jmp
jnp
adc
dec
std
roll
sbb
mov
and
xor
icebp
xchg
int
cmpsl
sub
inc
test
stos
bswap
into
std
jecxz
cli
push
cs
lret
or
ljmp
xchg
push
icebp
stos
sub
popa
sahf
repnz
xor
xchg
insl
dec
mov
movl
lret
je
mov
and
sub
jb
call
xor
add
insl
xchg
in
add
out
sub
loopne
jne
sub
adc
into
adc
cmp
mov
test
in
arpl
mov
inc
add
mov
adc
add
and
mov
xor
mov
lret
mov
sbb
mov
stos
int
dec
sub
or
and
and
nop
cltd
shrl
or
sub
xor
in
push
fstl
int
xor
ja
sub
pop
scas
loopne
push
jmp
or
mov
jmp
inc
iret
add
imul
ja
divb
cwtl
push
add
shlb
pop
roll
inc
jno
and
add
sub
push
mov
out
push
std
fiadds
or
add
fldt
aam
imul
mov
push
popa
sbb
add
jmp
aaa
xchg
add
pop
cmp
xchg
jmp
sbb
mov
notb
rolb
lret
mov
data16
sbb
mov
out
insl
or
hlt
testb
cmp
bound
add
es
adc
or
add
add
iret
aaa
xchg
gs
hlt
stos
cmp
les
xchg
sub
pop
outsl
add
or
pop
lret
and
pop
add
gs
push
xor
aad
xchg
pop
mov
push
fstl
pop
leave
loope
aas
minps
lcall
jg
xor
add
cmpsl
cmp
pop
adc
xor
or
mov
sbb
dec
jmp
ja
js
scas
popf
addl
jo
sbb
add
es
jle
in
daa
scas
out
ljmp
xor
repnz
xor
add
sti
or
sub
int
mov
adc
push
into
sub
xor
imul
mov
clc
push
sub
xchg
and
mov
jmp
imul
std
scas
lcall
js
aam
mov
sbb
mov
jmp
sti
mov
imul
rorl
pop
scas
add
add
sarl
cmpsl
movsb
data16
pusha
outsl
sbb
stos
or
add
or
testb
out
pop
or
negl
cmp
test
push
fisubs
hlt
adc
inc
idivl
iret
stos
push
rol
sub
add
mov
jg
out
inc
test
add
mov
int3
add
jge
push
and
pop
push
sub
mov
outsb
and
aam
xchg
cmp
sbb
xor
ljmp
sbb
inc
or
mov
stos
mov
in
pop
jae
add
add
enter
hlt
dec
jns
push
jns
and
mov
mov
sub
int
je
jo
popa
inc
mov
push
pop
dec
mov
add
dec
cmp
sbb
push
jle
lahf
mov
ja
movsl
cltd
inc
stos
outsl
fwait
es
adc
in
aam
mov
add
jmp
inc
in
into
push
add
pop
imul
add
cmp
dec
xchg
dec
adc
in
dec
and
jge
xor
ja
data16
aas
js
daa
hlt
xlat
xor
jmp
push
add
mov
inc
cwtl
add
push
or
cs
push
or
push
bound
mov
xor
mov
cmp
dec
cmp
lods
out
out
insb
push
jmp
idivb
leave
add
add
aas
jg
ljmp
bound
pusha
add
lods
ret
das
das
pushl
add
loopne
sbb
inc
sti
sbb
xchg
les
stc
test
add
jno
add
js
ss
inc
push
add
sbb
push
lods
movsb
loope
xor
sub
adc
rcrb
mov
inc
je
stos
loop
jb
sbb
inc
imul
lcall
mov
popa
sahf
shlb
add
mov
lea
add
mov
jb
add
movsb
xchg
sub
xor
adc
mov
push
popa
mov
cli
mov
add
dec
loope
lock
in
sbb
sbb
add
add
inc
outsb
jge
aam
lods
add
mov
dec
fmul
add
stc
rcrl
sbb
or
dec
aaa
aam
jp
arpl
push
cltd
add
mov
sahf
paddsw
jecxz
xchg
clc
push
aaa
lcall
add
std
cmp
inc
ret
es
xor
cvtpi2ps
pop
notb
sub
mov
sub
and
imulb
loopne
fcomi
pop
mov
push
movsb
add
lret
add
cli
in
add
xchg
fsubrl
add
cmpsb
gs
mov
add
push
cmp
arpl
fwait
daa
mov
or
or
jb
mov
inc
imul
xchg
movsl
adc
add
add
mov
out
into
jae
dec
sarl
add
push
sti
jge
mov
sahf
xor
mov
add
dec
and
scas
xchg
stc
add
popf
ret
add
pop
fiaddl
pop
inc
mov
inc
or
rorl
shlb
sbb
and
xchg
lods
fsubp
addl
int
add
loopne
lret
fiaddl
in
xchg
inc
shll
add
dec
jbe
loop
inc
add
fmul
pop
test
add
cmpsl
inc
add
add
adc
pop
cmpsl
add
mov
xchg
jmp
xchg
jl
and
jp
inc
xchg
fiaddl
mov
fcmove
adc
les
inc
and
jl
and
xor
add
mov
in
mov
insl
inc
sbb
ror
fwait
test
fs
lods
or
add
lock
cwtl
in
add
cmpl
add
repnz
stos
add
int3
add
lods
add
mov
out
aam
xchg
add
add
and
add
add
dec
push
or
cmc
add
sbb
pop
jo
repnz
add
mov
clc
mov
shlb
xor
jbe
pop
popl
lcall
les
or
and
add
mov
addr16
shll
shl
lret
jecxz
into
pop
stos
lods
nop
sbb
cmpsl
popa
sbb
xor
mov
add
xchg
ljmp
pop
jns
inc
xchg
in
js
and
jecxz
fidivrl
iret
xor
fldt
iret
cli
ljmp
cmpsl
insb
push
out
jo
push
or
jbe
sbb
repnz
ja
mulb
and
loope
add
and
mov
repz
xchg
jb
or
adc
mov
add
mov
mov
and
test
es
stos
gs
mov
and
xchg
jnp
push
into
hlt
xchg
mov
icebp
pusha
mov
sbb
out
aad
cmc
add
cs
sti
xchg
push
jne
push
adc
add
mov
mov
fs
add
lea
push
sub
jecxz
add
jmp
cmpb
enter
call
add
or
faddl
sub
in
add
ljmp
out
mov
sub
insb
mov
mov
push
push
pop
lret
mov
and
push
xlat
pushf
mov
add
push
push
insb
jge
cmp
divb
nop
pop
add
xchg
ja
aaa
int3
xchg
push
adc
cmp
sbb
shr
push
pushf
push
and
cmpsl
mov
or
push
out
mov
pushl
jnp
movsb
jae
ss
repnz
sub
lret
cmpsl
add
shlb
mov
repz
pop
and
jo
test
lods
test
push
lock
add
movsb
jle
dec
xchg
jp
inc
push
ja
insb
cli
cmp
add
mov
punpckhbw
pusha
bound
mov
xor
fcompp
jnp
mov
flds
cmp
frstor
sub
pop
or
orb
add
mov
aas
add
lods
add
or
lods
or
pop
test
mov
adc
cltd
pop
adc
pop
stos
and
addl
mov
add
xchg
mov
mov
lcall
jge
gs
cmc
clc
push
cmp
pushl
loopne
sbb
pop
inc
fwait
insb
xor
push
jno
lods
cld
shll
movsb
test
adc
xchg
dec
lcall
push
inc
inc
rcrb
sbb
ret
add
mov
int
dec
xchg
arpl
cmp
leave
add
fsubr
cmp
pop
cmp
jp
mov
sti
jo
cld
jno
or
mov
clc
jo
pop
nop
ja
mov
ljmp
addb
and
ja
fs
add
ds
mov
pop
push
pop
sahf
cmp
mov
in
or
xor
push
add
dec
mov
nop
and
add
mov
xor
repnz
push
insb
dec
add
cmp
arpl
inc
adc
lods
sbb
pop
mov
sti
mov
sti
xor
xor
fidivs
cltd
push
dec
aaa
add
push
add
mov
mov
out
aam
fidivs
mov
jb
cs
pop
push
mov
xlat
or
stc
jle
mov
jp
add
adc
rolb
bound
xchg
mov
lret
push
test
gs
test
imul
pusha
inc
dec
push
pop
xor
dec
testl
or
push
add
pop
xor
sub
dec
jle
pop
jmp
in
sbb
inc
test
mov
cli
sub
sbb
xchg
shll
int
xchg
pushf
jle
inc
pop
push
xor
je
mov
add
out
aam
push
out
aaa
mov
movsl
out
ss
add
outsb
add
rcr
add
xchg
pop
push
cmp
xchg
adc
and
push
lahf
in
jp,pn
sub
arpl
mov
and
rorb
push
add
jp
mov
push
dec
fstpl
pushf
mov
xchg
push
and
and
pop
or
jbe
pop
cmc
lcall
add
sbb
sbb
add
mov
jns
jae
xchg
sbb
jae
xchg
adc
dec
ja
jae
push
pop
add
sbb
add
adc
xor
cmp
loope
push
pop
repnz
mulb
add
mov
ds
fwait
mov
adc
or
std
push
sbb
icebp
iret
dec
sbb
dec
mov
jecxz
cmp
mov
in
cmp
sub
rorl
insb
cmp
stos
push
mov
jg
push
jnp
rcrb
mov
add
dec
loop
scas
push
inc
add
lds
pusha
outsb
push
inc
add
ja
dec
inc
aad
sub
imul
mov
inc
daa
iret
jne
jecxz
cmp
and
ret
lcall
imul
add
stc
cmp
pop
cmp
add
nop
inc
aas
dec
mov
rorl
popa
test
fldl
pop
mov
nop
jnp
push
push
cmp
stos
fwait
jne
jg
jne
ret
push
dec
adc
pop
mov
testl
cmp
shrl
inc
icebp
push
imul
inc
xchg
xor
ficomps
sub
ljmp
lret
pop
add
jecxz
jbe
movsl
pop
in
xchg
fstl
sub
test
xor
aam
pop
shll
popa
cld
jnp
jmp
add
insb
and
adc
inc
add
ljmp
or
or
jae
sub
sub
fiaddl
jnp
movb
fildll
or
dec
cmp
out
mov
std
adcl
add
dec
adc
jge
push
sahf
add
pop
xor
mov
setae
stos
inc
test
sbb
inc
add
cltd
add
outsl
or
and
jmp
inc
loop
pop
insl
pop
jmp
mov
idivb
mov
clc
xchg
clc
mov
popf
push
xchg
mov
cmp
lret
dec
leave
in
sub
sub
sbb
insb
popa
repnz
stc
inc
out
sub
mov
mov
add
add
lock
add
push
in
sub
ret
out
pop
add
push
loop
mov
add
add
popf
mov
add
scas
add
clc
add
add
push
add
das
dec
push
inc
sahf
das
int
adc
jnp
movsb
ljmp
fadds
andl
cld
lcall
add
or
jg
cwtl
ret
xor
xchg
mov
aam
aaa
and
adcb
cmp
notl
dec
xor
push
and
not
push
push
data16
xchg
leave
sub
sub
push
add
add
add
into
pop
pushf
fnstenv
sub
mov
or
leavew
lret
cmpl
jmp
out
fldl
inc
xchg
js
cmp
jns
push
mov
sbb
mov
aad
out
dec
mov
xor
cmc
insl
pop
sub
mov
add
cmp
hlt
pop
or
rorl
rcrl
add
test
add
xchg
xor
add
ljmp
sbb
push
push
in
test
jb
push
add
es
mov
mov
test
mov
cmpsl
outsb
inc
jp
mov
add
scas
inc
push
imul
cmp
popa
xor
xor
add
add
cmp
cmp
mov
dec
add
imul
jecxz
loopne
pop
mov
cmp
push
jp
adc
xchg
and
in
xchg
add
sub
lds
lcall
dec
aad
stos
jecxz
adc
push
or
add
add
add
test
jae
dec
push
or
adc
inc
lds
into
js
push
jge
or
into
stc
loop
jle
imull
add
sub
test
or
add
aas
dec
mov
scas
aaa
add
lahf
sub
jmp
cld
adc
or
mov
enter
mov
hlt
mov
ljmp
scas
adcb
sahf
movsl
add
rorl
sub
adc
pop
test
ljmp
cmp
pop
push
cmp
add
xchg
aam
add
dec
pop
bound
je
sbb
xor
or
test
dec
arpl
ror
inc
inc
jnp
out
add
add
add
add
cmp
call
fcoms
or
push
add
mov
daa
ds
sbb
jp
dec
pop
popf
ret
pop
dec
push
loopne
mov
adc
insb
pop
imul
push
cli
pop
scas
add
outsb
xor
adc
std
pop
add
jp
sbb
push
lret
add
dec
sbb
stos
ljmp
mov
pop
dec
add
pop
push
incb
and
xlat
xchg
icebp
ss
fucomip
dec
add
imul
inc
dec
sbb
push
add
adc
leave
movsb
mov
mov
cld
test
ljmp
cmp
inc
xchg
add
pop
xchg
mov
addl
pop
dec
clc
sahf
je
sub
adc
push
outsl
test
enter
pop
dec
xor
mov
jl
push
dec
push
cmp
outsb
popaw
pop
mov
mov
add
adc
nop
pop
push
inc
les
sub
and
mov
mov
shlb
out
add
pop
aam
or
and
js
shlb
cmp
mov
movsb
cmp
add
imul
or
loope
inc
dec
xor
add
mov
jecxz
dec
out
cmp
add
add
inc
addl
ret
add
xchg
ljmp
xchg
and
pop
cltd
push
fwait
add
fs
xchg
jnp
cs
inc
aad
add
repnz
add
jmp
mov
out
and
and
stc
and
fdivl
sub
add
fistl
and
xchg
xor
pop
pop
imul
xor
test
pop
push
cmp
sti
rcrl
mov
dec
mov
lock
xchg
xchg
dec
add
xchg
pop
xchg
add
push
hlt
es
push
icebp
dec
add
and
cmc
xor
push
pop
pop
add
mov
in
adc
inc
push
mov
pop
lret
or
xor
movsb
das
xor
mov
push
pop
add
xchg
int3
pop
data16
popf
push
notb
inc
cmp
adc
add
verr
add
xchg
cmp
add
shl
cmpsl
and
adc
jno
or
ss
or
das
adc
add
or
popf
and
add
lea
pop
push
or
add
outsb
leave
pop
mov
push
xlat
mov
mov
xor
fs
cmp
repz
cmp
mov
in
mov
pop
lock
jmp
testl
mov
testb
std
xchg
cmp
add
jp
pushf
fbld
push
insl
cmp
test
and
xchg
lret
iret
mov
add
sti
jecxz
push
sub
jb
xor
out
jmp
cmp
lds
stos
mov
and
test
sub
ror
xor
xor
fisttpll
add
xor
cmp
mov
dec
insl
roll
xor
push
stc
lods
in
out
call
xchg
in
mov
jbe
and
cli
jbe
pushf
mov
push
sub
mov
dec
lahf
add
icebp
enter
addr16
add
push
add
push
push
fidivrl
lret
and
test
jle
push
in
or
sub
xor
adc
inc
mov
and
mov
jnp
xor
add
jno
cmp
pop
out
add
add
xchg
and
mov
add
lods
roll
enter
inc
xor
inc
pushf
fs
jae
inc
ror
and
mov
inc
mov
test
mov
mov
push
mov
inc
bound
add
inc
cs
pushf
rcrb
pop
push
cmp
add
arpl
ror
adc
pushf
adc
xchg
cltd
subl
add
or
xchg
inc
adc
add
add
hlt
insl
mov
mov
imul
iret
sahf
sub
add
add
xor
adc
lret
jecxz
pop
add
mov
imul
xor
mov
inc
insl
scas
dec
sbb
icebp
mov
imul
cmp
jle
test
mov
cli
cmc
jo
xchg
inc
add
jge
add
add
les
cmp
loope
jl
dec
dec
lods
xchg
repnz
cwtl
jecxz
xchg
add
incb
lods
mov
cmp
in
pop
sahf
stos
xchg
mov
test
imul
sbb
out
dec
inc
cli
mov
aaa
fcoms
addl
mov
cmp
add
arpl
ret
mov
mov
mov
or
mov
ret
mov
add
cmp
dec
adc
inc
mov
add
pusha
sbb
pop
scas
add
das
pop
add
fcomi
add
or
out
xchg
nop
mov
out
fistpll
sbb
sub
add
call
add
push
push
fidivrl
sarl
pushf
add
mov
sub
mov
andl
daa
pop
fwait
rolb
sub
xor
mov
push
movb
in
cs
cmp
jl
gs
or
fmull
mov
insb
push
add
adc
aaa
cld
sub
dec
imul
push
push
mov
sub
movsl
daa
test
pushf
inc
inc
or
fistpll
outsl
jno
sbb
add
xor
sbb
lds
dec
nop
push
stos
pop
cmp
ljmp
jmp
pop
xlat
pop
push
xchg
push
push
push
shrb
jge
lret
lea
push
sub
test
inc
std
sub
ficompl
hlt
mov
inc
or
js
leave
lods
add
fadds
xchg
out
add
xchg
add
mov
incl
bound
lret
add
loope
xchg
mov
add
mov
xchg
push
in
push
int
sbb
xor
insb
ror
or
and
mov
add
cmc
popa
add
add
xlat
and
sub
lea
add
fs
mov
dec
lahf
or
inc
sahf
pop
mov
mov
push
repnz
insl
sbb
sub
cli
adc
jb
addr16
jae
bound
add
dec
call
in
lock
push
shl
sub
push
movsl
xor
scas
out
xor
sbb
cmp
adc
adc
stos
cmp
or
pop
mov
mov
data16
add
icebp
mov
mov
scas
stos
mov
sbb
and
push
lds
xchg
add
add
adc
or
leave
out
mov
insb
inc
leave
hlt
add
add
add
adc
dec
rcll
add
xor
push
cmovno
cmp
test
sbb
xchg
xchg
lods
jnp
add
arpl
popf
repnz
or
lods
rolb
cld
dec
in
mov
mov
loopne
loopne
add
pop
dec
cmp
mov
insb
ret
test
outsb
add
int
mov
pop
pop
jg
xor
inc
lods
mov
jle
std
or
xchg
pop
sbb
pop
inc
stos
xor
jne
or
cmc
or
adc
add
add
jmp
xchg
addr16
add
lret
addl
xor
add
add
mov
jecxz
mov
leave
inc
and
cmp
inc
leave
and
sbb
add
rolb
mov
jne
cli
loop
jno
sbb
lret
int3
cwtl
jb
or
xchg
out
mov
daa
dec
loopne
mov
mov
mov
clc
mov
dec
enter
lret
add
ja
inc
add
xor
lret
add
add
mov
and
hlt
ficomps
movsl
into
and
sbb
addr16
mov
jnp
cs
add
adc
cld
clc
jb
lcall
add
cmp
cltd
inc
int
sbb
decb
dec
cmp
pop
add
cmp
incb
inc
sbb
out
push
ret
clc
adc
jne
mov
pop
rol
arpl
cmp
or
es
and
sbb
add
hlt
ret
jle
push
imul
pop
add
mov
jl
in
dec
xchg
add
add
pop
push
ja
jmp
dec
add
mov
idivl
sub
adc
add
push
mov
fdivs
rolb
mov
lods
sti
rcr
inc
or
jne
es
cmpsb
jne
cmp
lahf
icebp
jge
sub
cmpsl
popa
add
or
push
sbb
jl
xchg
push
popa
lret
xchg
pop
cld
add
add
jge
add
lahf
movsb
add
sub
lds
adc
aad
jecxz
flds
je
imul
mov
testb
add
lret
push
faddl
shrb
push
sub
push
add
aas
xor
aaa
cli
or
add
dec
int
and
sbb
fiaddl
fidivrl
dec
mov
ret
mov
jecxz
imul
mov
xchg
je
ds
mov
ds
in
imul
or
pop
rclb
insl
sbb
add
mov
fwait
sub
xchg
fisubrl
pop
popf
cld
lods
add
loope
inc
shlb
dec
jb
xchg
xor
push
xor
pop
sbb
nop
fisubrl
pop
mov
ljmp
jmp
add
ja
dec
mov
mov
in
iret
sahf
out
ja
cltd
adc
cli
add
jmp
xor
mov
add
leave
mov
pop
jmp
test
ret
fisttps
and
sub
fidivrl
sub
mov
test
daa
push
mov
dec
fsts
orb
jge
mov
push
cs
add
sbb
mov
jge
or
mov
lock
aad
push
imul
inc
dec
or
pop
jp
cmpsl
dec
sbb
in
jg
xor
adc
scas
bound
adc
add
out
xorb
jg
jg
xchg
or
sbb
jnp
adc
push
mov
cwtl
and
roll
add
sbb
add
lret
fnstenv
pushf
add
shll
arpl
add
xchg
out
test
sahf
mov
in
rcll
jg
sar
mov
test
jnp
jp
fxch
xchg
push
jns
std
add
jae
es
mov
mov
mov
stc
outsl
xchg
cmc
dec
out
mov
xor
fisubl
icebp
rclb
push
sub
sub
xchg
adc
add
sbbb
mov
inc
push
sbb
imul
mov
clc
inc
jg
sub
imul
push
mov
filds
das
outsb
pmaxsw
hlt
loopne
mull
daa
mov
dec
jp
mov
and
mov
inc
test
adc
outsl
xchg
fisubrs
imul
add
int
clc
stos
jns
add
and
lcall
inc
mov
xchg
sbb
inc
popa
sub
add
incb
lret
xchg
rcl
mov
cmp
je
jns
adc
inc
std
outsl
add
test
outsl
out
insb
mov
sub
lret
mov
data16
cmp
adc
xchg
movsl
adc
pop
dec
sarb
cmp
lds
dec
dec
sbb
add
sub
xchg
push
and
sub
fisubs
in
and
add
dec
xchg
push
stos
fwait
xlat
stos
int3
jno
test
dec
lods
ret
out
repz
jnp
add
in
dec
les
add
jb
and
xlat
das
mov
add
jl
daa
cmp
mov
add
add
stc
dec
mov
xchg
adc
add
fcomps
add
in
int3
mov
cmp
adc
divl
insl
fnstenv
test
add
lahf
out
pop
subb
cmpsb
scas
movsb
xchg
push
dec
bound
dec
adc
pusha
scas
add
xchg
pop
pop
jecxz
dec
add
add
rcrb
hlt
mov
dec
out
mov
xor
mov
add
or
loopne
out
std
push
cmc
popf
push
lds
mov
lret
stc
xor
xchg
inc
xor
out
stos
movsl
add
cli
adc
push
mov
popf
in
ss
aam
lods
cltd
adc
push
add
iret
add
std
add
or
inc
dec
aad
pop
and
cmp
cmpl
add
push
pop
or
mov
add
pop
shr
in
ljmp
movsb
ss
mov
add
pop
jno
add
push
adc
repz
ja
pop
rcl
fstpl
xor
insl
pop
mov
add
je
dec
lahf
lock
enter
lods
pop
int
pop
outsl
mov
dec
sbb
adc
mov
mov
mov
in
lahf
or
cmp
cltd
shll
jle
fistpl
movd
xor
lods
mov
add
push
fsts
push
add
add
fimuls
push
lcall
jmp
cmp
ret
add
movsl
out
adc
add
repz
or
cmpb
cmp
fldcw
push
sti
rolb
add
and
mov
mov
push
data16
in
pop
adc
adc
or
test
xor
dec
push
xchg
leave
cmpl
mov
sub
sub
mov
xchg
rorb
add
jg
shlb
add
jne
jge
fldl2t
pop
roll
add
add
gs
les
movb
mov
mov
cld
add
fcomi
sbb
out
loope
xchg
cmp
mov
sti
stc
push
add
outsl
lock
sbb
jae
jne
cld
dec
pop
popa
daa
push
mov
sub
in
mov
in
sub
aam
lea
addl
and
in
fnstsw
mov
mov
ficoms
mov
jp
push
dec
out
add
add
push
sbb
cmp
aad
inc
jmp
mov
enter
daa
dec
addb
dec
push
mov
cli
add
out
imulb
pop
cmp
call
cmp
add
out
add
stc
xor
and
int3
add
stos
push
add
pop
push
push
mov
outsl
and
push
add
pop
add
aad
cmp
pop
out
add
xlat
pop
mov
ret
cld
cwtl
lds
repnz
mov
jle,pn
mov
lea
push
sub
jg
xor
jnp
cltd
add
xchg
mov
and
jne
add
stos
add
mov
add
popf
movsb
push
jge
add
mov
or
cltd
jne
shlb
add
addr16
add
fadds
cmp
jl
sarb
add
movsb
cwtl
jle
mov
int
jl
xchg
movsl
and
rolb
add
pop
adc
dec
test
xor
cmp
incl
psubsw
gs
mov
bndldx
or
mov
sarl
pop
xchg
stos
shlb
pop
add
mov
mov
mov
neg
xchg
add
fdivrs
lahf
or
mov
popf
ret
lea
add
or
push
pop
out
scas
sti
and
jo
shrl
pop
xor
jmp
add
cmpsl
jecxz
add
jne
sbb
arpl
add
outsb
jmp
add
cmp
lds
sbb
or
xchg
daa
loopne
pop
sbb
test
add
fucomi
add
pop
sub
sbb
or
xchg
xor
cld
jns
ljmp
push
fiadds
inc
add
out
sbb
add
push
stc
sbb
mov
mov
lahf
inc
pop
add
pop
add
mov
test
add
scas
cwtl
jle
ret
jge
leave
sub
test
fimuls
stos
aam
lcall
repz
aas
add
pop
add
add
mov
sub
inc
mov
aaa
or
movsl
or
jno
sbb
add
popf
xchg
or
push
adc
cmc
cltd
outsb
mov
add
add
dec
xchg
sub
pop
adc
cmp
scas
mov
push
dec
aad
add
lods
iret
sbbl
data16
incb
lret
inc
pop
test
and
inc
stos
jno
daa
add
xor
ret
in
pop
add
movsl
pop
into
inc
or
cli
mov
lds
mov
xor
addr16
jne
cwtl
loope
pop
cld
in
in
mov
add
or
add
cli
dec
add
ret
push
shl
mov
ljmp
lret
and
dec
imul
sub
sbb
in
fxch
add
pop
testb
dec
dec
adc
in
into
lods
dec
mov
mov
pop
dec
jo
add
sbb
inc
cmpsb
pop
xchg
sbb
lea
lods
jecxz
push
pop
repnz
jnp
sub
inc
stc
hlt
addr16
fcoms
sbb
jg
sub
jns
ljmp
cs
test
lods
scas
clc
test
lcall
mov
sub
add
and
outsb
mov
add
rolb
aas
rolb
adc
shll
xchg
push
inc
outsb
ds
add
push
mov
add
in
jbe
lods
sahf
ja
jb
jb
sbb
and
mov
or
dec
inc
push
sbb
cwtl
add
xor
mov
movsb
add
aas
into
sub
lods
fstpt
add
cwtl
fimuls
mov
add
out
stos
add
inc
aaa
sahf
cmp
or
add
xchg
mov
or
in
lods
sub
shlb
loopne
fldl
cli
movsb
fwait
push
cli
adc
addb
scas
mov
lea
clc
jmp
and
jg
and
or
leave
jp
sarb
add
nop
mov
mov
add
cmpsl
add
jl
arpl
jmp
xchg
rclb
in
add
fiaddl
and
imul
inc
xchg
cld
jnp
and
add
pop
add
aaa
pop
dec
pushf
jmp
roll
out
lods
insb
jge
xchg
sahf
icebp
push
out
adc
mov
sub
shlb
out
add
enter
fsubrs
xchg
ret
mov
test
les
lods
in
xor
dec
movsl
cmp
aaa
inc
lods
insl
push
cmp
das
or
in
mov
cld
test
mov
shl
inc
xchg
cld
add
mov
xchg
mov
cmp
add
loop,pt
in
loopne
mov
arpl
cmp
mov
data16
add
test
lret
jns
xchg
push
mov
js
push
add
mov
inc
int3
add
sbb
jno
push
ss
cmp
push
lcall
xor
fcmovnb
lods
lret
cmp
subb
add
fisttpl
inc
add
dec
xchg
or
mov
push
fnstsw
lods
call
dec
dec
in
lretw
sbb
push
sbb
movsb
jmp
mov
add
fisubrs
mov
sub
inc
sarb
ror
pop
jbe
jns
repz
aad
push
push
mov
bound
mov
pop
add
xlat
xor
mov
mov
add
cmc
xor
and
add
xchg
lret
add
pop
add
cmp
hlt
dec
xchg
std
or
into
add
pop
add
test
lods
insb
xchg
xchg
in
lcall
movaps
out
pop
lods
fs
push
sub
dec
xchg
inc
ss
cmp
jne
inc
ljmp
int3
add
fldl
jns
sbbl
xchg
sbb
test
sbb
add
mov
imul
inc
inc
fdivrl
dec
push
js
or
lods
movsl
add
pop
mov
jne
xor
xor
add
mov
cmpsl
add
adc
xlat
mov
jae
adc
push
push
add
movl
mov
bound
sti
mov
inc
les
inc
cmpsl
and
gs
push
add
ret
add
mov
and
rorl
and
inc
xor
lea
pop
inc
add
fildl
push
in
xchg
sti
xor
ja
add
enter
es
adc
cltd
add
setno
sti
sti
loop
add
incb
movsl
std
add
mov
cmpsb
mov
imul
hlt
ja
cld
jge
and
popa
scas
mov
dec
add
or
outsl
add
sbb
adc
xchg
int
lcall
mov
repz
add
cltd
push
push
add
in
out
mov
in
insl
sbb
in
add
add
loop
dec
lret
add
bound
add
pop
aas
sub
fisubs
imul
dec
outsb
cmp
adc
cmpb
push
xchg
mov
decb
jnp
les
mov
jns
movsb
push
push
add
jns
ds
jge
adc
pusha
jae
dec
cmp
add
mov
push
pop
jge
das
stos
icebp
add
adc
push
out
aam
pop
jo
pop
mov
mov
add
jno
push
xchg
fidivl
add
ret
mov
add
ret
ret
fadds
add
cmp
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
or
add
add
add
or
add
or
add
add
in
or
add
push
add
or
add
add
add
mov
add
add
add
add
add
pop
adc
add
add
add
adc
add
add
add
add
or
add
adc
add
add
pop
pop
add
push
add
add
add
add
sbb
add
add
stc
sbb
add
add
add
add
add
ret
push
add
ja
add
or
add
add
add
pusha
and
add
add
add
add
push
and
add
into
and
add
mov
add
mov
add
add
add
add
sub
add
add
add
sub
add
add
add
sub
add
add
add
add
scas
sub
add
add
pusha
das
add
bound
add
aas
xor
add
add
add
add
fidivl
add
add
add
fbstp
add
xor
add
add
adc
add
mov
add
cmp
add
cmp
add
dec
inc
add
push
inc
add
popa
inc
add
addl
add
add
add
add
add
add
add
dec
add
add
add
das
dec
add
xchg
dec
add
rorb
add
add
add
add
mov
add
add
add
add
add
dec
add
add
add
pop
dec
add
mov
add
add
add
add
add
or
add
add
out
add
pop
pop
add
negb
add
bound
add
add
add
stc
add
xor
add
add
pop
data16
or
add
sbb
push
add
add
add
add
add
insb
add
xor
outsl
add
fisubrs
add
add
add
jb
add
add
add
add
daa
jae
add
jne
add
add
mov
add
jns
add
add
add
jns
add
add
add
jns
add
add
add
jl
add
add
push
jle
add
add
add
jg
add
add
add
addb
sub
add
addb
jecxz
add
ret
add
test
add
add
add
add
add
xchg
add
add
jmp
mov
add
add
imul
mov
add
add
add
add
xchg
add
push
xchg
add
cli
xchg
add
add
add
add
add
jne
add
dec
xchg
add
add
add
stc
xchg
add
add
add
dec
cwtl
add
add
add
mov
add
add
lcall
repz
push
pushf
add
out
add
jne
add
dec
mov
add
add
add
in
add
stos
movsl
add
in
add
add
add
add
add
add
add
add
add
xchg
lods
add
add
add
gs
add
or
add
add
add
sub
add
inc
mov
add
mov
add
add
add
mov
add
mov
add
mov
add
xor
add
add
add
es
add
push
add
movswl
add
add
add
mov
add
and
add
add
add
dec
rolb
insl
ret
add
in
add
inc
les
add
add
add
movb
adc
add
fwait
movl
add
add
add
add
or
add
dec
add
pop
lret
add
mov
add
add
add
add
add
and
add
aaa
into
add
loope
add
cwtl
roll
add
roll
add
rolb
add
add
add
roll
add
add
add
add
flds
add
add
add
fildl
add
add
add
filds
add
add
clc
loopne
add
add
add
jecxz
add
add
add
jecxz
add
add
add
add
scas
out
add
add
es
add
add
add
add
add
in
add
add
add
push
in
add
add
add
pop
out
add
add
add
repz
add
nop
lock
lods
lock
mov
add
fcomi
add
repnz
add
add
out
add
dec
repz
repz
mov
add
add
testb
and
add
add
add
idiv
add
ds
add
mov
sti
add
add
add
mov
add
add
add
pushf
std
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
push
pop
add
and
add
sub
add
cmp
add
hlt
or
add
add
stos
or
add
sgdtl
std
adc
add
add
cwtl
adc
add
pop
add
and
sbb
add
sbb
add
sbb
add
sbbl
add
rcrb
add
add
and
add
add
add
and
add
add
add
aaa
daa
add
js
add
shrl
add
sub
add
add
add
add
add
add
add
sub
add
xor
add
xchg
add
loopne
add
xchg
xor
add
xor
add
xor
add
add
add
add
divb
add
xor
add
add
add
aaa
add
add
add
lcall
add
add
add
add
jl
add
add
add
les
add
xor
add
mov
add
jle
add
or
add
add
pop
inc
add
int
add
jbe
add
add
add
mov
inc
add
add
add
mov
inc
add
jecxz
add
or
add
add
add
dec
add
testl
add
dec
add
add
add
scas
push
add
mov
add
add
add
push
add
sub
add
add
add
add
add
push
add
leave
push
add
add
add
push
add
sbb
add
add
add
add
push
pop
add
lock
add
add
add
lds
add
add
lcall
add
add
sub
add
pop
add
mov
add
add
dec
add
add
add
outsb
add
mov
add
cld
add
add
add
push
add
jmp
add
sub
add
add
es
add
subl
add
add
mov
add
add
add
imul
add
add
mov
add
lret
insl
add
xorl
loope
add
add
add
sub
add
add
add
add
adc
add
add
jns
add
add
add
add
add
add
mov
add
add
add
jl
add
add
add
add
add
add
add
add
and
add
add
sub
add
mov
add
and
add
sub
add
cmp
add
mov
add
sbb
add
add
add
add
sub
add
sub
add
add
add
add
fldt
add
add
add
add
cmp
add
pop
add
subb
add
add
add
das
add
mov
add
call
add
add
add
add
xor
add
add
add
add
add
add
add
xor
add
pop
xor
add
mov
add
add
add
add
mov
aaa
add
pop
cmp
add
cmp
add
add
add
add
add
add
add
cmp
add
add
push
inc
add
jmp
add
fiaddl
add
inc
add
cmp
add
add
inc
add
push
inc
add
add
add
jl
add
add
add
push
dec
add
insb
dec
add
and
add
dec
add
arpl
add
dec
add
sub
cmp
mov
add
add
ja
add
add
add
cmp
add
dec
add
sbb
add
add
add
mov
add
push
add
gs
add
add
add
dec
pop
add
sbbb
xchg
pop
add
rcrb
xlat
pop
add
add
add
arpl
add
add
add
add
mull
add
push
add
fildll
add
jo
add
jo
add
add
add
add
add
add
add
jbe
add
add
add
add
push
ja
add
jns
add
add
add
add
sbb
cmp
add
add
add
add
jle
add
add
pop
addb
add
add
inc
addl
add
add
add
add
add
add
add
popa
addl
add
add
test
add
add
add
add
add
add
mov
add
push
test
add
add
add
add
and
add
or
add
or
add
add
add
add
mov
add
mov
add
mov
add
add
out
add
add
add
add
xchg
add
add
add
add
add
sub
add
add
add
push
cltd
add
out
lcall
inc
fwait
add
bound
add
popf
pushf
add
add
add
lret
popf
add
add
add
xor
add
je
add
lods
lahf
add
add
add
lahf
add
mov
add
pusha
mov
add
inc
cmpsb
add
add
add
mov
add
daa
test
add
add
jb
add
add
add
lahf
test
add
sub
add
add
lods
add
push
lods
add
pusha
lods
add
xor
add
mov
add
add
mov
add
mov
add
add
add
add
add
add
add
mov
add
mov
add
mov
add
add
add
add
pushf
mov
add
add
add
add
add
add
les
add
add
add
add
add
add
add
add
add
add
add
in
add
sub
add
jae
add
fld
add
add
add
mov
add
add
add
add
lret
add
push
add
pop
int
add
add
add
add
add
add
add
rolb
add
add
push
flds
add
flds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
jnp
add
lret
add
add
add
bound
add
ja
add
mov
add
cmpsb
push
add
mov
add
mov
push
add
movl
add
fiaddl
add
loopne
add
ljmp
add
push
add
incb
add
add
pop
add
adc
pop
add
and
add
sub
add
inc
pop
add
push
add
jo
add
jbe
add
jge
add
addl
add
pop
add
movsl
pop
add
stos
pop
add
mov
add
mov
pop
add
enter
int
add
xlat
pop
add
out
pop
add
sbb
add
pop
or
add
or
add
or
add
add
dec
or
add
add
pop
or
add
add
push
or
add
add
add
jg
add
mov
add
nop
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
pop
or
add
add
test
add
mov
add
xchg
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
inc
or
add
add
dec
or
add
add
data16
add
add
jbe
add
jl
add
xchg
add
xchg
or
add
or
add
or
add
or
add
or
add
or
add
add
inc
or
add
add
push
or
add
or
add
add
dec
or
add
add
pop
or
add
or
add
dec
or
add
pop
or
add
gs
add
ja
add
orb
add
or
add
aam
add
fisttpll
add
testb
add
push
add
or
add
femms
add
pop
push
add
sbb
push
add
sub
add
xor
add
ds
add
inc
push
add
dec
push
add
push
push
add
pop
push
add
sti
cli
mov
add
mov
add
add
inc
or
add
add
add
je
movq
fs
jae
add
lea
lods
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
inc
add
dec
inc
add
inc
add
add
add
add
add
add
add
add
add
push
imul
jb
je
arpl
add
adc
or
insb
adc
add
add
add
lea
addb
add
add
add
repnz
add
inc
add
add
add
add
pusha
add
add
add
add
add
add
add
fldl
add
add
add
roll
add
add
add
add
adc
add
add
add
add
push
arpl
add
add
add
add
add
aad
js
push
add
add
add
add
dec
lods
jbe
jb
add
roll
add
fs
add
add
inc
add
add
push
add
loopne
jo
add
add
add
add
movsl
add
add
add
add
add
add
mov
cli
add
add
add
add
mov
add
add
add
add
add
add
add
jl
add
add
add
add
dec
add
add
add
jle
lods
mov
cmp
popl
push
add
loope
aas
add
ljmp
add
add
jo
add
add
add
cmpsb
cmp
add
add
add
add
add
add
add
cld
add
add
add
inc
add
add
add
add
add
add
mov
add
add
add
add
add
cmpsb
push
push
add
je
add
jns
add
add
add
add
add
add
add
add
add
add
add
jne
add
add
add
filds
add
loope
add
add
add
add
add
jmp
inc
add
add
cmp
repz
add
mov
add
add
sub
add
add
add
mov
aam
and
add
add
add
cmp
lahf
movb
add
add
add
add
add
add
xor
mov
add
add
add
add
push
jecxz
add
add
add
lds
add
dec
mov
dec
insb
add
add
add
test
add
add
jl
add
mov
add
addl
add
add
lds
add
add
add
into
dec
fdivrs
add
add
push
mov
xchg
jle
add
add
add
add
add
add
adc
add
add
add
jne
js
add
add
add
fs
inc
mov
add
add
add
add
cmpsb
add
add
add
add
pop
jge
add
add
add
add
add
add
add
add
add
and
add
cs
add
add
add
add
int
add
add
movb
add
add
add
add
add
add
add
add
add
add
decb
add
add
add
clc
aad
add
inc
mov
add
push
add
add
rolb
add
add
add
add
add
mov
add
add
adc
add
add
add
add
lea
add
add
add
add
aad
int3
add
pop
add
add
add
icebp
add
add
add
add
and
add
jnp
add
in
add
add
add
push
add
mov
add
inc
xchg
add
add
add
roll
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
cmpsl
sub
sldt
add
add
add
add
add
add
add
add
call
add
add
dec
lods
add
sbb
add
add
add
add
fadds
stc
add
rolb
add
loopne
add
xor
push
add
xchg
add
add
add
gs
push
mov
cwtl
jle
add
inc
add
inc
add
jle
add
pusha
inc
add
jnp
.byte
mov
cld
mov
add
mov
mov
add
andb
add
mov
add
mov
add
bound
add
mov
add
test
add
add
add
mov
add
add
add
inc
mov
add
je
add
mov
add
mov
mov
add
mov
add
mov
add
push
add
add
mov
add
mov
add
fisubs
add
add
add
adc
add
movsb
add
inc
movsb
add
pop
movsb
add
push
add
add
add
jne
gs
xor
fs
insb
add
add
inc
jb
popa
je
push
imul
inc
add
add
outsb
imul
push
imul
add
je
jbe
je
dec
gs
outsl
popa
jb
dec
popa
jns
jne
add
add
dec
jae
imul
dec
outsl
outsl
imul
je
insb
insb
gs
add
outsb
inc
gs
je
jo
add
add
push
gs
insb
imul
push
imul
add
dec
jae
push
ja
jb
add
add
inc
gs
imul
jb
add
add
je
insb
popa
jae
dec
popa
insl
gs
add
jbe
jo
xor
cs
insb
add
add
inc
jb
fs
gs
popa
jb
gs
outsb
outsw
inc
add
add
inc
outsl
outsb
jbe
jb
inc
arpl
jae
push
outsl
push
arpl
imul
imul
add
add
dec
inc
dec
outsl
outsl
imul
imul
jb
fs
add
add
imul
gs
imul
je
inc
outsb
fs
popa
insl
gs
add
add
imul
insb
gs
je
insl
inc
add
add
imul
arpl
inc
arpl
jae
push
imul
add
add
dec
outsl
je
data16
push
inc
jbe
outsb
je
outsl
add
add
inc
imul
jo
imul
jne
push
add
add
gs
je
push
jb
arpl
jae
imul
push
add
add
push
gs
outsb
outsw
jb
popa
je
outsl
outsb
push
jb
jae
gs
outsl
insl
popa
imul
gs
insb
jne
push
add
push
gs
gs
popa
insb
jne
inc
add
add
inc
gs
arpl
imul
js
add
add
dec
outsb
imul
jae
gs
push
push
ja
push
add
add
gs
jae
popa
jb
push
inc
jb
fs
je
popa
insb
push
add
add
dec
jae
inc
fs
jb
jbe
insb
gs
outsl
inc
arpl
jne
je
add
dec
bound
arpl
outsl
jae
inc
jne
imul
add
imul
gs
xor
cs
insb
add
add
push
outsb
push
gs
js
gs
imul
gs
add
add
gs
je
inc
imul
gs
push
dec
outsb
outsw
add
add
inc
gs
popa
insb
jne
add
add
je
inc
push
add
add
inc
gs
jne
jb
outsb
je
push
dec
add
add
inc
gs
je
dec
popa
outsb
fs
add
add
dec
outsl
arpl
inc
jb
add
add
fs
imul
add
add
dec
outsl
popa
fs
imul
js
add
add
inc
gs
jb
arpl
fs
jae
add
add
push
gs
imul
bound
gs
add
add
inc
gs
je
insl
dec
popa
insl
gs
add
add
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
jb
jno
outsb
arpl
add
inc
add
nop
inc
add
rolb
add
add
add
add
add
clc
add
add
xor
xor
xor
xor
xor
ja
jge
test
mov
xchg
xor
xor
jecxz
jmp
xor
xor
or
adc
sbb
das
xor
xor
pop
xor
push
jo
jbe
jl
xorb
xor
xor
fnstenv
loop
call
xor
xor
rdmsr
pop
xor
xor
xor
xor
cmp
inc
xor
push
xor
insb
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
push
xor
xor
xor
xor
inc
xor
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
and
aaa
xor
dec
xor
arpl
xchg
lahf
xor
mov
mov
xor
push
ss
adc
ss
ss
ss
ss
ss
ss
ss
ss
ss
jle
mov
mov
mov
ss
fdivl
loop
out
ss
ss
ss
aaa
or
and
sub
xor
aaa
dec
aaa
push
aaa
pop
aaa
pop
aaa
fs
push
jl
xchg
mov
xchg
aaa
cwtl
aaa
lahf
aaa
cmpsl
aaa
lods
aaa
mov
ret
aaa
add
or
adc
sbb
pop
cmp
cmp
dec
cmp
push
cmp
push
cmp
test
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
inc
cmp
push
cmp
pusha
cmp
insb
cmp
jns
cmpl
lcall
cmp
cmp
cmp
cmp
cmp
cmp
adc
push
cmp
sub
cmp
cmp
jb
jl
cmpb
cmp
cmp
cmp
idivl
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
daa
cmp
cmp
inc
cmp
push
cmp
xchg
cmp
stos
cmp
cmp
sbb
push
ds
ds
ds
ds
jne
jnp
cmpl
mov
ds
ds
fidivrl
loopne
out
out
ds
ds
add
or
adc
aas
sub
xor
cmp
ds
inc
aas
dec
aas
dec
aas
jnp
mov
xchg
aas
lahf
aas
cmpsl
aas
scas
aas
mov
sarb
aas
iret
aas
xlat
aas
fnstsw
jecxz
jmp
aas
add
add
in
add
add
or
sub
xor
cmp
inc
xor
dec
xor
pop
xor
insl
xor
xor
xor
xor
xor
xor
xor
xor
xor
and
sub
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sahf
xor
xor
xor
xor
xor
sbb
and
sub
das
xor
xor
push
xor
pop
xor
jno
ja
jge
xchg
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
and
xor
xorl
xor
lods
xor
mov
xor
cmc
xor
or
ss
sub
xor
ss
inc
ss
ss
ss
ss
ss
test
mov
xchg
ss
mov
fidivs
in
ljmp
aaa
adc
sbb
and
aaa
cmp
inc
aaa
dec
aaa
push
aaa
pop
aaa
bound
jo
scas
aaa
mov
mov
aaa
cld
aaa
push
cmp
adc
sbb
sub
cmp
dec
cmp
pop
cmp
outsb
cmp
cmp
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
and
cmp
cmp
cmp
cmp
mov
scas
cmp
iret
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
mov
xchg
cmp
mov
mov
mov
cmp
cmp
cmp
adc
sbb
pop
cmp
cmp
dec
cmp
jp
lea
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
and
sub
inc
cmp
pop
cmp
jo
js
cmpl
mov
cmp
loop
add
ds
ds
cmp
inc
ds
ds
ds
test
mov
xchg
ds
mov
idivl
std
adc
pop
aas
sbb
aas
inc
aas
jne
jnp
test
mov
cltd
aas
lahf
aas
movsl
aas
lods
aas
mov
mov
xor
add
pop
xor
xor
xor
xor
xor
jae
jge
xorl
xor
xor
lds
lret
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
inc
xor
dec
xor
xorl
xchg
xor
xor
xor
xor
xor
xor
xor
xor
and
sub
das
xor
xor
dec
xor
pop
xor
xchg
lea
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
jb
jl
xorb
xor
xor
xor
shlb
fnsave
in
in
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
and
sub
xor
cmp
inc
ss
ss
ss
ss
ss
xorb
lods
ss
mov
ss
fdivl
loop
call
add
or
adc
sbb
ds
inc
aaa
push
aaa
push
aaa
pop
aaa
addr16
insl
aaa
jae
jns
jg
test
nop
aaa
mov
mov
aaa
shll
aaa
divl
std
aaa
add
or
cmp
cmp
cmp
cmp
push
cmp
bound
push
jp
pushf
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
cmp
jns
cmpl
mov
cmp
cmp
cmp
cmp
adc
push
cmp
sub
xor
cmp
dec
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
das
cmp
cmp
pop
cmp
cmp
jg
test
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
pop
cmp
xchg
cmp
stos
cmp
aad
fstpt
cmc
cmp
or
pop
and
sub
xor
push
ds
ds
ds
jno
ja
jge
mov
ds
mov
ds
ds
fdivrl
or
adc
aas
sub
push
aas
gs
imul
aas
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
and
daa
xor
pop
xor
xor
xor
fidivl
loopne
in
xor
xor
xor
xor
xor
cmp
xor
dec
xor
pop
xor
imul
xor
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
xor
pop
xor
jb
jle
test
mov
mov
xor
fidivs
or
ss
ss
ss
ss
ss
ss
ss
ss
adc
aaa
xor
aaa
pop
aaa
data16
outsb
aaa
jbe
jle
xchg
jp
jle
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
imul
ds
ds
ds
ds
imul
js,pt
cmpb
ds
ds
ds
cmpsb
lods
ds
mov
add
or
push
aas
adc
aas
xor
cmp
aas
push
aas
pop
aas
pusha
aas
gs
outsl
aas
xchg
mov
mov
lds
int
xlat
aas
fnstsw
in
out
aas
hlt
aas
cli
aas
add
add
add
add
add
xor
xor
adc
pop
xor
xor
xor
xor
xor
dec
xor
pop
xor
xor
jb
jl
test
lea
lods
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
xor
jae
jge
xorl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
xor
xor
xor
inc
xor
push
xor
bound
imul
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
and
cmp
insb
xor
mov
mov
xor
shll
xor
repnz
and
sub
xor
cmp
inc
ss
ss
ss
bound
push
jb
jp
xorb
ss
ss
ss
shlb
fidivl
loop
ljmp
aaa
or
adc
sbb
and
sub
ds
push
aaa
push
aaa
insb
aaa
jb
js
xorl
mov
aaa
fdivl
out
aaa
std
aaa
push
cmp
cmp
dec
cmp
pop
cmp
jle
test
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmp
cmp
xor
cmp
inc
cmp
push
cmp
insb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
outsl
cmp
jl
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
outsl
cmp
mov
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aas
cmp
push
cmp
insl
cmp
xchg
lcall
cmp
leave
cmp
loopne
out
in
cmp
add
or
adc
ds
ds
ds
ds
ds
jae,pt
jns
jg
mov
mov
les
lret
xlat
fnstsw
add
or
adc
push
aas
sbb
and
sub
xor
cmp
inc
aas
inc
aas
dec
aas
pop
aas
pusha
aas
data16
insb
aas
js
jle
xchg
nop
aas
xchg
aas
movsb
aas
fnstcw
fistpll
call
aas
aas
add
add
add
add
or
adc
pop
xor
xor
xor
bound
push
jo
jnp
xorl
xor
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
in
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
bound
outsb
xor
xor
xor
xor
xor
xor
xor
jl
mov
popf
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
inc
xor
push
xor
je
xchg
xor
stos
xor
fnstenv
or
adc
cmp
dec
ss
mov
ss
fnstenv
fbstp
in
in
ss
aaa
getsec
sbb
pop
aaa
es
xor
ss
cmp
inc
aaa
dec
aaa
dec
aaa
popa
aaa
addr16
jo
jbe
xchg
mov
xchg
aaa
cltd
aaa
mov
aaa
lret
aaa
aam
cli
aaa
or
sub
xor
cmp
arpl
outsb
cmp
jnp
cmpl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
cmp
inc
cmp
pop
cmp
cmpl
lods
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
pop
cmp
data16
jbe
jl
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
outsl
cmp
jnp
cmpl
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
xor
cmp
dec
cmp
addr16
lea
mov
cmp
lds
repnz
or
cmp
inc
ds
ds
ds
bound
push
jp,pt
cmpb
ds
ds
mov
ds
ds
ds
fnstsw
out
out
ds
ds
aas
and
es
xor
pop
aas
popa
aas
addr16
jno
jbe
mov
aas
mov
mov
aas
out
aas
idivb
aas
add
add
add
add
xor
xor
xor
xor
ja
jle
mov
mov
xchg
xor
xor
ret
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
outsb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
xor
data16
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
insb
xor
js
jle
test
movsb
xor
lds
int
aam
fdivl
loop
call
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
outsb
xor
xorb
xor
loopne
repz
sub
xor
ss
ss
ss
ss
arpl
outsb
aaa
jns
xorb
aaa
mov
xchg
aaa
lcall
aaa
ret
aaa
shlb
fidivl
loopne
clc
aaa
aaa
add
push
cmp
cmp
pop
cmp
jae
jns
jg
mov
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pusha
cmp
outsl
cmp
jge
cmpl
cmp
cmp
sarb
fstpt
in
cmp
cmp
cmp
cmp
sub
cmp
pop
cmp
cmp
je
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
add
pop
add
add
adc
push
aaa
and
sub
cs
xor
cmp
inc
aaa
inc
aaa
dec
aaa
push
aaa
pop
aaa
pop
aaa
fs
push
jo
jbe
jl
xorb
aaa
mov
xchg
aaa
lcall
aaa
mov
mov
aaa
lret
aaa
aaa
fdivl
loop
call
aaa
cli
aaa
add
push
cmp
pusha
add
or
add
mov
add
add
add
add
add
les
enter
sarb
aam
fdivrs
fdivrl
loopne
in
call
addb
and
add
dec
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
rolb
adc
add
add
add
or
or
add
add
add
repz
aas
add
add
add
add
add
add
addb
add
mov
add
lock
addb
add
repz
aas
add
add
or
add
orb
add
and
add
cmp
add
push
add
cmpb
add
addb
and
add
cli
add
xorb
add
es
add
clc
add
addb
adcb
add
sub
add
inc
add
addb
add
pop
add
addb
add
repz
aas
add
add
add
push
add
or
add
add
mov
add
mov
or
add
or
add
add
or
add
call
add
add
add
aas
add
add
add
add
add
add
add
add
repz
aas
add
add
add
add
or
add
add
add
add
add
add
aas
add
add
add
add
or
add
add
add
add
add
add
aas
add
add
add
add
or
add
add
add
add
add
add
aas
add
add
add
add
or
add
add
add
add
repz
aas
add
add
add
add
or
add
add
add
add
repz
aas
add
add
add
add
or
add
add
add
add
repz
aas
add
add
add
add
or
add
add
add
add
repz
aas
add
add
add
add
or
add
add
add
add
aas
add
add
add
add
or
add
add
add
add
aas
add
add
add
add
or
add
add
add
add
aas
add
add
add
add
or
add
add
add
add
aas
add
add
add
add
or
add
add
add
add
add
add
aas
add
add
add
add
or
add
add
add
add
add
add
aas
add
add
add
add
sbb
add
add
add
add
add
add
aas
add
add
add
add
or
add
add
add
add
add
add
aas
add
add
add
add
or
add
add
add
add
add
add
aas
add
add
add
add
or
add
add
add
add
add
add
aas
add
add
add
add
or
add
add
add
add
add
add
aas
add
add
add
add
or
add
add
add
add
add
add
aas
add
add
add
add
or
add
add
add
add
repz
aas
add
add
add
add
or
add
add
add
add
repz
aas
add
add
add
add
or
add
add
push
add
add
add
cmp
add
inc
clc
add
mov
add
add
add
add
add
loopne
add
in
add
cmp
add
and
add
adc
add
xor
add
movb
add
cld
add
dec
add
add
add
push
add
add
add
add
add
add
add
inc
add
add
hlt
add
add
insb
pop
add
and
add
nop
pop
add
mov
add
inc
or
add
add
add
add
add
add
sbb
add
pop
or
add
add
add
add
adc
add
sub
add
cmp
add
sahf
add
add
or
add
pop
add
dec
add
push
add
add
or
inc
add
dec
add
push
add
add
pop
add
dec
add
dec
add
inc
add
add
dec
add
dec
add
inc
add
add
add
push
add
push
add
inc
add
dec
add
or
inc
add
inc
add
inc
add
add
add
add
inc
add
dec
add
inc
add
push
add
add
dec
add
push
add
push
add
or
add
inc
add
push
add
dec
add
dec
add
dec
add
add
push
add
inc
add
add
push
add
add
add
dec
add
or
push
add
dec
add
push
add
dec
add
pop
add
inc
add
dec
add
dec
add
rolb
addb
add
push
add
add
add
add
add
add
outsl
add
data16
add
jb
add
add
outsl
add
je
and
dec
add
add
imul
add
or
dec
add
and
push
add
outsb
add
and
push
add
jb
imul
add
add
add
add
add
add
add
add
incl
add
push
add
add
mov
add
add
add
incl
add
arpl
add
add
add
add
add
push
add
add
str
add
add
incl
add
and
add
bound
jne
add
add
jne
je
jo
jne
je
and
add
jb
imul
and
outsb
add
js
je
and
bound
outsl
add
je
cmp
add
add
add
or
add
add
add
add
add
add
add
add
incl
add
add
add
outsl
add
jns
add
add
or
add
add
add
add
add
add
add
add
incl
add
add
imul
add
add
or
add
add
add
add
add
or
or
incl
add
arpl
push
add
outsl
add
jae
insb
add
and
je
outsl
add
add
imul
add
add
rolb
addb
add
add
add
add
add
outsb
add
add
and
push
add
insl
add
je
add
add
outsl
add
jo
jne
je
add
and
dec
add
insl
add
and
outsl
add
and
dec
add
and
inc
add
add
add
jae
add
or
dec
add
and
push
add
outsb
add
and
push
add
jb
imul
add
inc
add
push
add
add
xor
adc
mov
inc
add
add
incl
add
add
add
push
add
add
mov
add
incl
add
add
add
add
add
push
add
add
iret
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
outsb
add
add
add
add
add
push
add
add
push
add
add
add
add
incl
add
jo
jne
je
add
cmp
add
add
rolb
nop
add
add
add
add
add
add
add
add
add
add
jne
add
imul
and
push
add
insl
add
je
add
add
outsl
add
outsb
add
arpl
je
add
add
add
add
add
push
add
add
popa
add
jae
and
push
add
jb
imul
add
add
add
add
add
flds
adc
in
add
incl
add
add
outsb
add
and
jne
jo
and
jb
add
outsl
add
add
add
jns
jae
je
add
add
add
add
add
add
add
add
add
nop
add
add
add
add
add
add
add
add
jne
add
imul
and
push
add
insl
add
je
add
add
outsl
add
outsb
add
arpl
je
add
add
add
add
add
push
add
add
popa
add
jae
and
push
add
jb
imul
add
add
add
add
add
flds
adc
in
add
incl
add
add
outsb
add
and
jne
jo
and
jb
add
outsl
add
add
add
jns
jae
je
add
add
add
add
add
add
add
add
add
push
add
add
pusha
add
add
add
incl
add
add
add
rolb
addb
add
add
add
add
add
add
add
jb
outsl
add
add
jae
imul
and
inc
add
popa
add
push
add
insl
add
add
add
add
add
add
push
add
add
popa
add
jae
and
push
add
jb
imul
add
add
add
add
add
add
add
add
add
add
incl
add
arpl
add
add
add
add
add
add
add
add
add
je
insb
add
pop
add
jb
outsl
add
jb
add
jae
xor
xor
add
push
add
outsl
add
jb
add
jae
xor
add
add
add
add
add
add
add
add
incl
add
add
add
push
add
add
mov
add
add
incl
add
add
add
add
add
push
add
add
pop
add
push
add
add
incl
add
add
add
incl
add
add
add
add
or
addb
add
add
lret
add
add
add
add
push
add
dec
add
push
add
add
add
jne
add
imul
and
push
add
insl
add
je
add
add
insb
add
add
je
and
jbe
xor
add
add
add
add
add
push
add
add
popa
add
jae
and
push
add
jb
imul
add
add
add
xor
push
add
add
add
incl
add
imul
add
add
add
add
add
add
incl
add
je
imul
add
add
add
add
add
adc
incl
add
dec
add
dec
add
add
add
add
rolb
nop
add
add
add
add
add
add
add
add
add
add
jne
add
imul
and
push
add
insl
add
je
add
add
add
arpl
outsl
add
outsb
add
arpl
je
add
add
add
add
add
push
add
add
popa
add
jae
and
push
add
jb
imul
add
add
add
add
add
add
flds
adc
in
add
incl
add
add
outsb
add
and
jne
jo
and
jb
add
outsl
add
add
add
jns
jae
je
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
addb
add
add
add
add
add
add
add
jne
add
imul
and
dec
add
jae
je
outsl
add
jns
and
inc
add
jo
je
push
add
add
add
push
add
add
popa
add
jae
and
push
add
jb
imul
add
add
add
add
andb
push
inc
add
add
add
in
add
add
incl
add
add
add
add
incb
add
insl
add
arpl
je
insb
add
pop
add
jo
add
ja
outsb
add
add
add
add
jo
imul
add
add
add
add
xor
push
add
add
add
incl
add
jo
insb
add
add
add
add
add
add
add
incl
add
jae
add
add
push
popl
add
add
add
add
add
incl
add
outsb
add
add
add
add
push
push
add
add
incl
add
je
outsl
add
jns
and
inc
add
jo
je
push
add
push
pop
add
add
add
incl
add
imul
outsl
add
jns
and
inc
add
jo
je
push
add
and
xor
and
jae
imul
imul
add
and
outsb
add
and
add
jo
je
push
add
insl
add
je
and
sub
popa
add
add
add
jne
je
jo
jne
je
and
imul
jb
add
add
outsb
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
jne
add
imul
and
inc
add
jo
add
add
add
outsl
add
insl
add
outsb
add
add
add
push
add
add
popa
add
jae
and
push
add
jb
imul
add
addb
push
add
add
or
adc
rolb
or
or
add
add
add
add
add
pop
add
add
jb
add
add
add
add
incl
add
jo
add
add
add
add
add
push
add
add
stos
add
add
add
add
add
incl
add
outsb
add
add
add
add
add
push
add
add
or
pop
add
incl
add
add
and
je
add
je
and
je
outsl
add
add
jo
jo
add
add
add
add
add
add
and
arpl
jne
jb
jb
add
je
and
arpl
outsl
add
jo
jne
je
add
and
outsl
add
je
jo
jne
je
cmp
add
add
add
rorb
addb
add
add
add
add
add
add
add
add
jne
add
imul
and
inc
add
add
outsb
add
add
add
insb
add
arpl
je
and
popa
add
and
dec
add
and
inc
add
add
add
jae
add
or
dec
add
and
push
add
outsb
add
and
push
add
jb
imul
add
add
add
add
add
add
add
incl
add
push
add
add
mov
and
xor
push
add
add
incl
add
arpl
add
add
add
add
add
push
add
add
pop
add
add
incl
add
jne
add
imul
and
push
add
add
add
add
je
add
add
jne
insb
add
add
insb
add
and
dec
add
and
popa
add
add
add
jae
add
and
outsl
add
and
jns
outsl
add
jb
and
jae
jns
jae
je
add
add
add
insb
add
popa
add
add
add
add
add
je
and
je
push
add
outsb
add
and
jns
outsl
add
and
ja
popa
add
je
and
je
push
add
add
jne
add
imul
and
arpl
insb
add
add
je
and
je
outsl
add
add
jae
add
add
push
add
add
push
add
add
add
add
incl
add
add
je
and
dec
add
and
inc
add
add
add
jae
cmp
add
add
add
add
and
add
add
and
add
add
incl
add
add
add
addb
add
pop
add
and
aam
push
add
add
add
add
jne
add
imul
and
push
add
insl
add
je
add
add
add
imul
or
dec
add
and
push
add
outsb
add
and
push
add
jb
imul
add
addb
push
add
add
xor
sub
dec
add
out
add
incl
add
add
add
add
cmp
dec
add
out
add
incl
add
add
add
push
add
add
xchg
add
add
add
add
add
incl
add
push
add
add
xchg
add
add
add
add
add
incl
add
arpl
add
add
add
add
add
push
add
add
adc
sub
push
add
add
incl
add
outsl
add
outsb
add
add
push
add
add
or
cmp
and
or
incl
add
jae
ja
outsl
add
add
add
add
add
add
push
add
add
or
pop
add
incl
add
jb
and
popa
add
arpl
outsl
add
outsb
add
add
add
jae
and
outsb
add
je
and
push
add
and
popa
add
jo
jb
outsl
add
jb
imul
add
add
jb
imul
insb
add
add
jae
and
je
outsl
add
add
arpl
arpl
add
jae
and
je
push
add
add
outsl
add
add
add
outsl
add
jo
jne
je
add
add
add
insb
add
popa
add
add
add
outsb
add
add
and
je
push
add
popa
add
add
add
outsb
add
add
popa
add
jae
ja
outsl
add
add
add
data16
add
outsb
add
add
arpl
arpl
outsl
add
outsb
add
add
add
je
and
add
add
add
add
add
add
add
nop
add
add
add
add
add
add
add
add
jne
add
imul
and
push
add
imul
imul
add
add
add
add
add
push
add
add
popa
add
jae
and
push
add
jb
imul
add
add
add
add
add
popa
add
add
add
incl
add
je
imul
add
add
add
add
add
add
or
add
add
add
incl
add
outsb
add
add
add
add
add
nop
add
add
add
add
add
add
add
add
add
add
jne
add
imul
and
push
add
jb
outsb
add
outsb
add
add
or
dec
add
and
push
add
outsb
add
and
push
add
jb
imul
add
add
add
add
sbb
sbb
push
add
add
incl
add
add
add
add
add
push
add
add
pop
add
add
adc
incl
add
add
add
push
add
add
xor
pop
add
incl
add
je
add
and
insl
add
insl
add
jb
jns
and
jne
jae
popa
add
add
add
popa
add
and
add
arpl
add
add
add
add
add
add
add
add
jne
add
imul
and
ja
imul
and
arpl
add
jae
add
add
add
add
add
outsl
add
add
arpl
je
imul
and
jne
outsb
add
add
add
add
outsl
add
jns
and
jne
jae
popa
add
add
add
add
jo
jae
add
add
add
add
sub
xor
adc
add
add
add
add
add
add
add
data16
jns
push
add
add
addb
add
or
add
add
add
add
add
jne
add
imul
and
inc
add
outsb
add
add
add
add
add
add
add
push
add
add
push
add
add
add
add
incl
add
outsb
add
add
add
add
add
and
add
add
add
add
incl
add
add
add
push
add
add
insb
add
add
or
inc
add
incl
add
je
and
push
add
add
insb
add
cmp
add
add
add
add
and
add
add
add
inc
add
incl
add
add
add
push
add
add
mov
add
push
add
add
incl
add
jp
add
add
add
add
add
or
push
add
add
mov
or
add
incl
add
add
add
push
add
add
cmpsb
add
add
add
add
incl
add
push
add
add
cmpsb
add
sub
add
incl
add
arpl
add
add
add
add
add
push
add
add
pop
add
popl
xor
xor
incl
add
jo
insb
add
add
add
add
addl
add
adc
pop
add
pop
add
incl
add
bound
pop
add
pop
add
or
add
add
add
add
je
jb
insb
add
add
sub
add
adc
inc
add
jo
je
jne
jb
add
add
add
je
jb
insb
add
add
sub
adc
inc
add
je
outsl
add
arpl
jb
outsl
add
add
add
add
je
jb
insb
add
add
sub
push
add
insb
add
popa
add
and
sub
inc
add
add
add
sub
add
add
sldt
imul
add
and
sub
inc
add
add
add
add
add
add
add
add
je
jb
insb
add
add
sub
add
dec
add
add
sbb
push
add
outsl
add
and
inc
add
insb
add
and
push
add
jae
je
add
and
inc
add
je
imul
je
jns
push
add
push
add
add
add
imul
jb
jns
and
inc
add
je
imul
je
jns
add
and
push
add
outsl
add
and
push
add
outsl
add
add
jae
and
popa
add
add
add
add
add
add
add
arpl
je
imul
je
jns
adc
dec
add
add
insb
add
add
je
and
sub
inc
add
add
add
sub
sbb
inc
add
outsb
add
jb
popa
add
add
add
jb
outsl
add
imul
outsb
add
and
inc
add
add
je
jae
pop
add
jne
insl
add
and
je
outsl
add
add
bound
push
add
je
and
sub
inc
add
add
add
sub
or
inc
add
je
add
add
add
add
add
add
push
add
outsl
add
add
jae
and
dec
add
insl
add
add
push
add
inc
add
add
jo
add
popa
add
add
outsb
add
add
add
jne
insb
add
add
add
add
insb
add
add
add
jne
add
arpl
add
add
add
outsl
add
jo
popa
add
jns
or
inc
add
jae
arpl
jb
imul
imul
or
inc
add
insl
add
popa
add
add
add
add
add
push
add
add
or
dec
add
popa
add
add
add
popa
add
add
add
add
jae
imul
push
add
jbe
add
je
and
inc
add
insl
add
insb
add
je
add
push
add
je
push
add
inc
add
add
insl
add
add
and
dec
add
popa
add
add
jb
popa
add
add
add
add
add
jae
jae
or
add
add
add
add
add
add
add
add
add
popa
add
add
outsb
add
add
add
add
add
data16
add
add
push
add
outsl
add
add
add
add
add
popa
add
add
outsb
add
add
add
jae
imul
or
inc
add
add
je
and
inc
add
add
jae
adc
inc
add
je
push
add
add
popa
add
add
outsb
add
add
inc
add
add
imul
jne
popa
add
add
add
add
outsb
add
add
jb
imul
add
cmp
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
jae
insl
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
jb
jo
imul
jb
jb
and
arpl
and
je
jo
xor
xor
or
fs
jb
jo
imul
and
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
and
arpl
imul
and
and
and
and
gs
gs
gs
jb
jbe
insb
gs
or
and
and
and
and
and
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
push
jbe
imul
and
and
and
and
cmp
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
and
jae
arpl
imul
and
cmp
je
jne
je
outsb
outsw
ds
insl
jo
je
bound
imul
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jo
je
bound
imul
and
popa
jo
insb
imul
and
and
and
cmp
sub
gs
je
outsl
outsb
and
jo
outsl
jb
and
jb
push
imul
or
and
and
and
cmp
jne
jo
jb
gs
push
and
cmp
xor
cmp
popa
sub
sub
sub
sub
xor
xor
jge
das
and
and
and
cmp
sub
and
insb
imul
and
jo
outsl
jb
and
je
and
or
and
and
and
and
cmp
jne
jo
jb
gs
push
and
cmp
xor
xor
xor
sub
sub
sub
gs
xor
das
and
das
popa
jo
insb
imul
and
outsl
insl
jo
je
bound
imul
das
popa
jae
gs
bound
