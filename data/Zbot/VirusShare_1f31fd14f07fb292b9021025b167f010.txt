push
mov
sub
push
pushl
push
call
add
pop
mov
mov
mov
add
call
add
in
sub
push
push
push
push
pushl
call
add
pop
mov
mov
mov
add
call
add
add
shlb
pop
pusha
call
add
add
in
sub
push
push
pushl
call
add
pop
mov
mov
mov
add
call
add
in
sub
push
push
pushl
pushl
call
add
pop
mov
mov
mov
add
call
add
add
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
mov
push
pushl
pop
call
mov
mov
mov
add
call
add
add
nop
nop
nop
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
mov
mov
add
call
add
add
add
push
pop
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
pop
call
add
lea
sub
sub
mov
pop
mov
mov
lea
mov
push
xorl
pop
sub
or
xor
mov
push
push
push
pop
push
pop
stos
pop
pop
subl
neg
clc
sbb
pushl
lea
lea
pop
repz
add
cmp
jne
mov
pop
lea
add
call
add
in
sub
push
pushl
push
call
add
pop
mov
mov
mov
add
call
add
in
sub
push
push
push
push
push
call
add
pop
mov
mov
mov
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
mov
mov
add
call
add
add
in
sub
push
pushl
push
push
push
call
add
pop
mov
mov
mov
add
call
add
add
nop
nop
nop
jmp
ret
sub
mov
sub
mov
mov
shl
xor
push
sub
push
mov
mov
mov
sub
je
sub
lea
mov
sub
jb
mov
sub
ja
lea
jbe
popf
push
pushl
decl
jmp
add
fxtract
xor
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
mov
add
call
push
mov
sub
push
push
push
call
add
pop
mov
mov
mov
add
call
add
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
mov
mov
add
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
mov
mov
add
call
add
add
nop
nop
nop
push
mov
sub
push
push
push
push
push
call
add
pop
mov
mov
mov
add
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
mov
mov
add
call
add
in
sub
push
push
pushl
pushl
call
add
pop
mov
mov
mov
add
call
add
add
in
sub
push
push
pushl
pushl
call
add
pop
mov
mov
mov
add
call
add
add
nop
nop
nop
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
mov
mov
add
call
add
in
sub
push
push
push
push
call
add
pop
mov
mov
mov
add
call
add
in
sub
push
pushl
push
call
add
pop
mov
mov
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
push
call
add
pop
mov
mov
mov
add
call
add
nop
nop
nop
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
mov
mov
add
call
add
add
in
sub
push
push
push
call
add
pop
mov
mov
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
mov
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
mov
add
call
add
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
mov
mov
add
call
add
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
mov
add
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
mov
add
call
add
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
mov
mov
add
call
add
push
mov
sub
push
push
push
call
add
pop
mov
mov
mov
add
call
add
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
mov
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
pushl
call
add
pop
mov
mov
mov
add
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
call
add
pop
mov
mov
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
push
call
add
pop
mov
mov
mov
add
call
add
in
sub
push
push
pushl
pushl
push
call
add
pop
mov
mov
mov
add
call
add
push
mov
sub
push
push
pushl
push
call
add
pop
mov
mov
mov
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
call
add
pop
mov
mov
mov
add
call
add
push
mov
sub
push
pushl
push
push
call
add
pop
mov
mov
mov
add
call
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
mov
add
call
push
mov
sub
push
push
push
call
add
pop
mov
mov
mov
add
call
add
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
mov
mov
add
call
add
add
nop
nop
nop
push
mov
sub
push
push
pushl
push
call
add
pop
mov
mov
mov
add
call
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
mov
mov
add
call
add
add
in
sub
push
push
push
pushl
push
call
add
pop
mov
mov
mov
add
call
add
add
nop
nop
nop
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
mov
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
call
add
pop
mov
mov
mov
add
call
add
in
sub
push
push
push
pushl
call
add
pop
mov
mov
mov
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
mov
mov
add
call
add
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
mov
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
call
add
pop
mov
mov
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
mov
mov
add
call
add
in
sub
push
push
push
pushl
call
add
pop
mov
mov
mov
add
call
push
mov
sub
push
pushl
push
push
call
add
pop
mov
mov
mov
add
call
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
mov
mov
add
call
add
add
in
sub
push
pushl
push
call
add
pop
mov
mov
mov
add
call
add
in
sub
push
pushl
pushl
push
call
add
pop
mov
mov
mov
add
call
add
add
in
sub
push
pushl
push
call
add
pop
mov
mov
mov
add
call
add
in
sub
push
push
push
push
call
add
pop
mov
mov
mov
add
call
add
in
sub
push
push
push
pushl
call
add
pop
mov
mov
mov
add
call
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
mov
mov
add
call
add
add
in
sub
push
pushl
push
push
call
add
pop
mov
mov
mov
add
call
push
mov
sub
push
push
push
call
add
pop
mov
mov
mov
add
call
add
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
mov
mov
add
call
add
add
in
sub
push
push
push
call
add
pop
mov
mov
mov
add
call
add
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
mov
mov
add
call
add
nop
nop
nop
push
mov
sub
push
push
pushl
call
add
pop
mov
mov
mov
add
call
add
in
sub
push
push
push
pushl
pushl
call
add
pop
mov
mov
mov
add
call
je
add
mov
add
cwtl
and
add
and
add
and
add
add
inc
and
add
and
add
and
add
add
mov
and
add
and
add
and
add
and
add
and
add
and
add
add
or
add
add
add
in
add
enter
lock
add
and
add
add
inc
and
add
add
push
and
add
and
add
and
add
add
xor
add
and
add
and
add
and
add
add
add
add
add
add
adc
add
xor
add
add
add
push
add
add
add
add
and
add
add
mov
add
add
add
add
add
and
add
add
movsb
and
add
add
and
add
and
add
and
add
add
inc
and
add
and
add
and
add
add
mov
and
add
and
add
and
add
and
add
and
add
and
add
add
or
add
add
add
in
add
enter
lock
add
and
add
add
inc
and
add
add
push
and
add
and
add
and
add
add
xor
add
and
add
and
add
and
add
add
add
add
add
add
pop
add
je
outsl
arpl
gs
outsb
outsw
push
add
ret
gs
jne
jb
outsb
je
jb
arpl
jae
call
inc
imul
bound
gs
add
rolb
insb
outsl
bound
dec
outsl
arpl
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
inc
jne
jb
outsb
je
push
add
dec
add
popa
insb
inc
insb
popa
addr16
add
inc
gs
je
imul
inc
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
enter
jae
gs
popa
insb
jne
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
movsl
add
je
gs
imul
aad
inc
imul
add
add
gs
outsl
jbe
inc
imul
jns
add
je
push
gs
popa
jae
inc
jb
outsl
jb
add
add
popa
jo
jb
add
call
inc
imul
bound
gs
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
gs
outsl
insl
insl
inc
jb
popa
imul
repnz
imul
jb
je
arpl
add
addl
jb
popa
je
inc
imul
jns
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
pop
or
jae
dec
gs
popa
addr16
add
mov
dec
jae
imul
jae
popa
addr16
add
jnp
inc
gs
imul
outsb
addr16
add
mov
inc
imul
dec
gs
popa
addr16
add
jae
push
gs
jne
jae
jb
outsl
jae
add
push
imul
js
push
add
int
dec
outsl
popa
fs
jne
jae
jb
add
pop
dec
jae
imul
xchg
push
push
gs
jae
addr16
add
sbb
ja
jo
imul
or
je
outsl
arpl
add
cwtl
push
inc
gs
insb
addr16
jb
arpl
jno
push
gs
jne
jae
jb
push
push
inc
push
xor
cs
insb
add
or
push
push
dec
inc
jb
outsl
jb
add
add
dec
inc
imul
arpl
add
dec
inc
popa
outsb
arpl
add
add
dec
inc
outsl
outsb
outsb
arpl
dec
push
dec
push
inc
dec
xor
cs
insb
add
or
dec
jae
popa
je
push
push
inc
add
push
dec
push
push
dec
cs
insb
add
loope
data16
cwtl
rcrb
add
mov
add
xchg
pop
pushf
inc
sub
lods
mov
jp
xchg
cmp
les
push
pop
orl
push
push
mov
fidivrs
inc
inc
call
inc
jl
repnz
mov
ret
push
jno
ficoml
sbb
fwait
adc
lret
rcrl
push
cltd
icebp
xchg
dec
cmp
cwtl
jno
lret
mov
or
jb
icebp
out
add
lret
pop
rcrb
nop
adc
stc
in
adc
pop
push
xor
cmp
hlt
dec
push
ret
nop
divl
popf
cmp
fidivs
mov
insb
push
in
push
jge
shlb
dec
jbe
pop
popf
stos
shll
es
mov
test
jp
sub
mov
test
shll
xlat
jb
shll
out
adc
push
inc
lods
jne
jns
jae
sub
arpl
add
push
movsl
std
and
dec
xsaveopt
test
xor
fcomps
bound
inc
push
mov
and
dec
dec
jne
and
test
data16
fiaddl
shll
les
and
jg
out
nop
movsb
push
pushf
or
enter
jo
add
fistl
test
into
outsl
mov
jne
hlt
mov
lahf
or
inc
fwait
imul
mov
dec
xor
cwtl
std
fimull
and
mov
push
fimull
sbb
sbb
add
lea
push
icebp
pop
popf
push
shrb
xchg
pusha
ja
incl
push
jmp
adc
out
adc
mov
jl
pop
sarl
xchg
insl
inc
mov
fistpl
sbb
aad
cwtl
lds
rorb
out
shr
cmp
mov
mov
add
add
add
add
xor
add
add
add
pusha
add
adcb
add
pusha
add
addb
add
add
add
js
add
add
add
hlt
add
add
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
add
add
add
add
add
pusha
add
test
add
cwtl
xchg
add
ss
cwtl
mov
add
sub
add
xor
add
pusha
add
add
add
add
add
add
and
add
or
add
or
add
imul
sub
xchg
xchg
xchg
add
scas
scas
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
stos
stos
lods
mov
mov
lcall
jle
add
jp
stos
stos
stos
add
cmpsb
cmpsb
push
mov
mov
mov
ret
leave
lret
leave
lret
int
rcl
shr
rcl
shl
rcl
iret
hlt
int
lret
hlt
enter
leave
lret
mov
mov
mov
lods
lods
lea
lcall
add
add
add
add
add
add
add
add
add
add
add
add
mov
lahf
add
mov
mov
lret
rcl
sar
aad
aad
fdivr
xlat
aad
dec
into
sar
int
into
aad
sar
rcl
iret
inc
rol
mov
mov
lods
iret
mov
xchg
and
add
push
add
add
add
add
add
add
add
add
lods
scas
lods
add
scas
scas
sbb
mov
jnp
mov
ret
mov
lret
call
iret
sar
aam
fcomp
fcos
fcom
fdivr
aam
aam
int
int
into
int
call
rcl
dec
int3
int
rol
mov
mov
scas
std
cmpsb
cmpsb
cmpsl
ljmp
pop
or
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
pop
pop
add
inc
add
push
add
push
or
inc
or
sbb
push
add
add
add
add
or
or
add
add
mov
mov
add
mov
inc
mov
mov
mov
mov
ret
inc
mov
into
int
call
aam
call
xlat
fdivr
xlat
xlat
fdivr
rcl
aad
into
int
dec
lret
into
int3
int
mov
inc
rol
mov
mov
ljmp
mov
cltd
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
pusha
or
imul
pop
pop
pop
fs
inc
aas
inc
sbb
sbb
sub
sbb
aaa
cmp
sub
and
adc
add
add
add
add
gs
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
enter
sar
aam
sar
aam
sar
iret
iret
iret
dec
enter
mov
mov
mov
jmp
pushf
popf
cwtl
cwtl
xchg
lcall
addl
inc
add
add
add
add
add
add
add
add
add
adc
add
or
add
push
add
insl
xor
lcall
jb
bound
push
push
push
xchg
cmp
inc
inc
mov
insl
outsl
insl
nop
bound
inc
inc
inc
xor
add
add
add
add
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
dec
enter
int3
dec
int3
int3
inc
leave
enter
ret
mov
mov
ljmp
cmpsb
movsl
lcall
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
xchg
cltd
cwtl
cltd
in
addb
push
or
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsb
jo
add
pop
or
js
xchg
lea
incb
jl
idivb
jmp
outsl
outsl
out
gs
fdivs
ret
xorb
arpl
inc
inc
inc
cmp
sbb
sbb
adc
or
scas
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
jmp
sahf
pushf
call
test
decl
xchg
xchg
mov
mov
xchg
mov
ja
ja
cs
add
add
add
add
add
add
add
add
add
mov
pop
push
cmpl
in
mov
mov
addl
mov
mov
jle
jno
jb
je
jne
jle
jge
addb
xchg
addr16
cmp
and
jg
cmp
mov
stos
stos
icebp
stos
lods
lods
sti
stos
lods
lods
stos
stos
stos
stos
test
std
movsb
movsb
movsb
std
cltd
lcall
mov
jg
js
jns
jnp
jl
mov
xchg
cmpsb
movsl
movsl
mov
mov
mov
mov
mov
mov
mov
scas
scas
stos
test
push
adc
add
or
add
add
add
add
add
add
pop
pop
adc
mov
lods
call
addl
mov
xchg
std
xchg
xchg
xchg
stc
xchg
xchg
xchg
in
mov
or
addb
mov
pop
push
or
inc
inc
dec
insl
insb
insb
jl
xchg
leave
lcall
out
cltd
lcall
mov
mov
mov
mov
nop
nop
lcall
cmpsb
ljmp
mov
std
mov
mov
sti
mov
mov
mov
movsb
movsb
mov
or
add
add
pop
pop
adc
stos
stos
call
fwait
xchg
xchg
incl
test
decb
xchg
xchg
popf
pushf
pushf
std
mov
mov
xchg
in
xchg
nop
nop
in
test
push
jne
adc
dec
add
or
inc
sub
push
dec
dec
dec
data16
jae
mov
xchg
rclb
xchg
std
mov
xchg
call
popf
jmp
test
test
mov
cltd
xchg
std
ret
std
ret
mov
mov
ljmp
mov
add
pop
pop
adc
mov
jmp
pushf
xchg
cwtl
decl
mov
mov
xchg
xchg
xchg
xchg
pushf
pushf
popf
movsl
cmpsb
movsb
test
movsl
cmpsb
notl
jp
movsl
push
push
push
outsl
dec
dec
dec
popaw
pusha
bound
jb
mov
sbbb
mov
in
xchg
testl
lea
jmp
mov
mov
push
dec
mov
cmp
push
mov
mov
stos
mov
movsb
movsl
add
mov
add
pop
adc
mov
ljmp
lcall
nop
xchg
call
xchg
call
xchg
cltd
lcall
lahf
mov
movsb
std
mov
cwtl
lcall
xchg
xchg
les
lcall
lea
stc
xchg
test
std
xchg
jae
fwait
imul
cmpsb
push
dec
ljmp
inc
pushl
sub
push
ljmp
or
lods
and
mov
inc
mov
mov
lods
pushf
movsb
cmpsb
cmpsb
and
add
add
mov
add
pop
adc
mov
ljmp
pushf
call
xchg
xchg
lcall
fwait
fwait
lcall
pushf
sahf
call
xchg
xchg
call
xchg
xchg
call
fwait
cld
fwait
lcall
sahf
xchg
xchg
cld
popf
mov
xchg
push
xchg
pop
push
cwtl
dec
dec
lcall
popf
daa
sbb
jmp
and
ljmp
and
ljmp
adc
mov
adc
mov
adc
mov
adc
inc
mov
mov
scas
cmpsb
cmpsb
movsb
sub
movsl
movsb
mov
add
add
add
pop
pop
adc
mov
mov
fwait
call
popf
popf
lcall
mov
movsl
jmp
xchg
cltd
decl
mov
decl
jbe
cwtl
outsl
jo
cltd
fs
xchg
push
push
call
xor
call
adc
call
or
add
mov
and
ljmp
sbb
mov
sbb
mov
pop
mov
xor
mov
xor
inc
inc
fwait
xchg
mov
scas
lods
mov
mov
movsb
movsl
add
pop
pop
adc
scas
lods
ljmp
cltd
lcall
mov
cmpsb
ljmp
test
test
lcall
decl
inc
decl
das
sub
mov
adc
incl
or
decl
or
call
or
lcall
adc
jmp
das
pop
mov
cmp
mov
cmp
sub
lds
dec
inc
sub
dec
push
inc
dec
xchg
inc
mov
mov
cmpsb
movsl
movsb
dec
mov
movsb
movsb
add
push
push
adc
test
scas
lcall
mov
test
ljmp
mov
scas
scas
scas
jmp
outsl
jno
mov
daa
incl
or
xchg
or
test
incl
add
add
xchg
add
lea
add
nop
or
call
push
add
mov
adc
ljmp
cmp
aaa
inc
dec
cmp
leave
dec
cmp
lret
dec
push
cmp
iret
push
cmp
rclb
call
push
cmp
rcrl
lret
xchg
mov
lds
mov
cmpsb
cmpsb
movsb
push
mov
mov
add
add
add
mov
dec
dec
adc
mov
lods
jmp
cmpsb
cmpsl
ljmp
mov
pushl
mov
mov
mov
lods
test
lcall
and
decl
pop
ud0
adc
incl
or
decl
add
xchg
push
add
fwait
adc
jmp
adc
ljmp
cs
dec
push
inc
dec
pop
inc
call
pop
inc
call
pop
dec
call
pop
dec
fcomps
fldenv
fldenv
call
nop
xchg
mov
mov
movsb
movsb
cmpsb
arpl
mov
add
add
add
cltd
cwtl
xchg
add
dec
adc
jnp
movsb
popf
sahf
jmp
mov
test
mov
mov
mov
mov
mov
mov
mov
pushl
mov
decl
and
decl
sbb
adc
mov
pop
decl
add
xchg
or
lcall
adc
jmp
adc
pushl
cmp
dec
pop
dec
call
gs
call
addr16
fldcw
fsubrl
jmp
insb
push
jmp
jo
jmp
outsl
pop
jmp
outsl
pop
call
xchg
xchg
int3
sarb
cmpsl
movsl
cmpsl
jne
sahf
lahf
or
cwtl
xchg
xchg
add
inc
adc
jne
sahf
fwait
cltd
jmp
mov
lods
lods
pushl
mov
mov
mov
mov
ljmp
dec
inc
call
sub
and
xchg
daa
pop
call
pop
or
xchg
push
add
xchg
or
add
mov
adc
ljmp
adc
or
enter
xlat
imul
fbstp
loope
jmp
js
jmp
jns
call
jl
ljmp
fcoml
mov
in
cmpsl
cmpsb
cmpsb
mov
lahf
mov
add
add
add
inc
inc
adc
jae
fwait
xchg
xchg
call
sahf
popf
popf
ljmp
mov
pushl
mov
mov
mov
lahf
mov
call
das
lcall
xor
call
adc
add
lcall
jmp
adc
pushl
adc
adc
rclb
fidivrs
jmp
subb
xorb
test
jmp
xchg
jmp
jbe
in
mov
out
mov
out
xchg
jecxz
mov
sarl
mov
lcall
sahf
add
add
ds
insb
js
out
cwtl
cwtl
lcall
mov
pushl
mov
mov
mov
mov
test
popf
popa
pop
lcall
ds
sahf
inc
cmp
lahf
cmp
lcall
adc
call
adc
jmp
add
scas
adc
add
mov
xor
fsubs
jmp
mov
jmp
mov
in
xchg
cmp
lock
cmp
repnz
test
repz
test
hlt
xchg
cmp
aam
mov
rol
imulb
popf
pushf
daa
lahf
lahf
sahf
add
add
add
popa
add
cmp
push
pusha
pop
jne
jle
out
test
xchg
xchg
xchg
pushl
mov
mov
mov
rol
ret
pushl
outsl
insb
lcall
dec
inc
jmp
inc
lcall
adc
pushf
jmp
adc
ljmp
push
add
mov
sbb
es
fbstp
jmp
fwait
mov
out
pushf
push
sahf
mov
repnz
push
mov
xchg
clc
mov
xchg
stc
sahf
mov
out
lahf
nop
fstpt
ret
scas
lods
mov
pushf
popf
xor
popf
fwait
add
add
add
inc
inc
add
xor
push
inc
dec
inc
jb
pop
dec
in
imul
mov
mov
mov
mov
sar
ret
ret
mov
jg
lcall
push
dec
ljmp
cmp
adc
lcall
jmp
adc
pushl
sbb
inc
pop
add
leave
and
jmp
mov
out
mov
cwtl
push
test
fwait
push
stos
pushf
push
stos
popf
stc
scas
sahf
sti
scas
popf
sti
scas
lahf
std
stos
fwait
push
cmpsb
xchg
fidivrs
cli
mov
scas
rcrb
mov
cltd
cltd
cltd
add
add
add
cs
or
cmp
dec
jecxz
pusha
pusha
call
mov
mov
mov
sar
inc
mov
jmp
push
push
pushl
ss
lcall
jmp
adc
pushl
pop
add
rcrb
dec
sbb
call
es
loopne
inc
out
pushf
mov
repnz
push
mov
clc
mov
clc
mov
stc
mov
sti
mov
sti
mov
test
sti
mov
sahf
jmp
shll
mov
mov
popf
popf
popf
dec
xchg
xchg
xchg
add
fwait
fwait
add
add
add
xor
add
sub
inc
inc
inc
bound
xlat
je
jb
mov
mov
ret
rol
ret
ret
ret
inc
vpaddd
lret
mov
xchg
jmp
pop
push
pushl
daa
sbb
popf
adc
jmp
adc
pushl
push
add
lds
add
int3
sbb
call
pop
add
loope
adc
in
jno
push
scas
sahf
sti
mov
mov
cld
mov
mov
std
ret
mov
inc
mov
cld
les
cld
enter
mov
idivb
mov
iret
lret
leave
mov
mov
lahf
lahf
sahf
pusha
xchg
xchg
xchg
or
add
add
sbb
dec
dec
dec
outsb
jo
mov
mov
jmp
aad
test
int3
iret
dec
lret
leave
lret
lret
inc
enter
mov
pop
pushl
inc
lcall
adc
ljmp
add
mov
sbb
dec
sbb
call
sbb
add
jmp
xchg
cli
mov
mov
cld
leave
mov
std
lret
mov
std
into
mov
cld
rol
cld
iret
mov
jmp
lds
mov
mov
xchg
or
add
add
xor
xor
add
or
leave
movl
out
test
in
test
loop
leave
fucom
fcmovu
xlat
cli
aad
std
iret
into
sar
mov
outsb
push
ljmp
adc
add
mov
add
mov
sbb
dec
sbb
call
pop
add
fsubl
add
in
add
out
dec
xor
stc
pushf
mov
sti
enter
into
std
into
cld
rol
rol
cld
rol
aam
aad
cld
xlat
leave
std
xlat
leave
cld
lret
into
mov
call
iret
int
mov
mov
xchg
adc
add
add
std
add
std
add
cld
std
add
hlt
hlt
or
out
out
pop
in
in
in
sub
in
out
dec
jmp
call
call
aad
fcmovnu
jmp
mov
jo
test
cmp
movsl
and
jmp
adc
pushl
add
les
add
into
sbb
add
fbld
add
jmp
popa
inc
sti
mov
cld
rol
cld
lret
std
lret
lret
fmul
std
fxch
std
fmul
std
fcmovnbe
fst
std
loopne
std
out
lret
fst
sar
out
cmpsb
movsl
movsl
mov
cwtl
xchg
add
add
add
std
add
incl
clc
clc
cli
add
cmc
repnz
repnz
out
lock
pop
out
lock
out
out
pop
fsubp
loop
lds
jae
mov
adc
jmp
adc
add
mov
sbb
call
push
add
add
loop
add
in
xor
push
jne
std
shlb
std
loopne
jmp
sar
cld
loopne
loopne
std
jecxz
std
in
std
in
cld
fst
push
into
sar
dec
lret
test
stos
fwait
xchg
xchg
xchg
and
xchg
cwtl
add
std
cld
add
cld
cld
add
cli
sti
add
div
or
aam
xor
mov
jae
fwait
and
add
cmpsl
adc
ljmp
push
add
ret
dec
sbb
add
fcompl
add
in
add
lock
ja
cld
into
loopne
cld
loopne
std
loopne
std
loop
loop
std
in
std
in
out
out
call
cld
push
rol
jmp
call
iret
iret
clc
lods
lods
lods
lods
xchg
xchg
xchg
outsb
outsl
insl
add
add
add
fsubp
add
mov
cmpb
sub
lcall
adc
pushl
push
add
ret
sbb
dec
sbb
add
fisubs
add
call
dec
sub
sti
mov
sar
std
loop
in
cld
in
std
loope
cld
loop
sti
loope
sti
stc
clc
fcmovne
cli
fxch
push
rol
out
mov
call
aam
sti
mov
mov
lcall
add
add
add
add
vunpckhps
mov
jmp
adc
pushl
pop
add
les
add
into
sbb
fstps
add
loop
add
jmp
push
ss
stc
stos
xchg
std
aam
sti
aam
stc
rol
cli
int
push
int3
mov
push
leave
mov
in
mov
jmp
into
ret
iret
ret
rol
imul
loopne
cmc
fucomip
mov
mov
xchg
add
add
add
enter
rol
mov
xchg
xchg
loopne
aas
xor
ljmp
adc
mov
sbb
dec
and
call
daa
or
fldt
jmp
aaa
sbb
out
inc
ljmp
out
mov
out
scas
std
jecxz
scas
cld
fistpll
neg
ret
mov
ljmp
lret
rcl
shl
fcmovnbe
out
fnsave
icebp
out
in
popf
jmp
lret
scas
scas
lods
adc
cmpsl
test
add
rol
mov
rol
mov
sahf
aam
push
dec
popf
daa
sbb
cmpsl
sub
scas
ss
mov
xor
mov
push
inc
sti
ret
stc
lret
test
xchg
mov
shrl
mov
aad
mov
lret
rcl
enter
int3
mov
fcom
sarl
fcomp
jb
gs
jecxz
in
out
jmp
out
xor
div
clc
and
out
lock
fstp
or
mov
int3
add
add
add
mov
ret
mov
les
jo
lock
jbe
mov
and
xchg
mov
mov
xchg
sarb
stos
test
cmpsl
leave
mov
les
int
addr16
iret
push
rcl
aam
aam
inc
aad
fdivs
daa
fstpl
fists
fsubp
in
loope
out
out
in
pop
in
icebp
icebp
add
cld
sti
add
std
add
incb
std
add
mov
shrl
mov
mov
mov
lods
xchg
mov
mov
mov
mov
rcll
les
leave
xor
int3
into
daa
int
shll
rcl
aad
rcl
aam
rcl
aam
rcl
flds
aad
fiaddl
add
fstp
add
loop
add
call
xlat
add
std
incb
mov
mov
add
ret
les
ret
sub
mov
mov
push
ret
mov
enter
leave
add
int3
int3
add
rcl
add
aad
add
aad
add
xlat
aam
fcom
xlat
add
xlat
loopne
faddl
fstp
loop
fcmovnu
loopne
in
in
icebp
out
lock
incl
incl
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
pop
dec
add
push
push
mov
mov
bound
fucomip
adcb
pop
icebp
jne
pop
sahf
arpl
and
sub
or
popa
clc
pop
nop
shrb
jl
lods
jecxz
xchg
aaa
push
movsl
push
mov
mov
fisttpl
or
fbstp
sub
xchg
dec
jg
sbb
mov
ret
repz
pop
lock
js
ja
data16
cwtl
lret
xchg
std
mov
sbb
dec
jo,pt
shlb
ret
repz
xchg
adc
cmovbe
xchg
sub
mov
dec
loop
or
imul
xchg
dec
xchg
xorb
roll
lds
hlt
ret
pop
es
dec
jecxz
inc
loope
jns
push
fstpl
mov
xor
sbb
cmp
jno
les
xchg
pop
lock
clc
loop
sub
ja
pop
dec
add
push
dec
in
mov
dec
adc
imul
addr16
xchg
mov
popf
xor
data16
xchg
inc
mov
in
in
inc
ficomps
sbb
push
das
gs
mov
roll
inc
sti
and
cmp
dec
ja
push
test
dec
fnsave
add
adc
adc
cwtl
das
and
fisttpl
mov
aam
enter
ds
es
sbb
aad
out
push
ljmp
jno
repz
adc
inc
lods
xor
fisubl
scas
inc
pop
sbb
dec
jp
arpl
ljmp
and
mov
inc
jb
mov
cwtl
push
lods
inc
mov
lret
fmull
sbbb
jnp
popl
sahf
jno
cltd
xor
xchg
and
dec
xor
push
inc
cmpb
test
cmpsb
xchg
leave
insl
cld
xchg
mov
dec
loop
insl
adc
pop
mov
adc
mov
or
adc
notl
mov
adc
add
lea
adc
scas
inc
and
ss
lret
cld
jecxz
jmp
push
or
data16
jmp
ret
hlt
fldcw
push
movsl
cmp
sub
and
ret
pop
fwait
jg
aas
mov
loope
out
rol
pop
add
add
push
bound
mov
js
cltd
test
lret
sti
push
pop
repnz
sbb
dec
pop
jns
mov
hlt
lahf
stos
xchg
cs
jnp
repnz
mov
xor
xor
shrl
addr16
mov
mov
sub
cmc
mov
sub
stos
xchg
fwait
dec
loop
mov
enter
add
push
push
out
inc
xchg
jb
outsb
add
lds
ret
pop
sbb
stos
inc
xor
loope
insb
push
enter
call
xlat
loopne
mov
stc
add
sub
cmp
fs
and
mov
inc
xlat
into
xlat
ja
or
pop
cmc
and
xchg
sub
inc
jl
je
mov
mov
lcall
jmp
out
xchg
insl
outsb
js
movsb
test
lret
sti
loop
test
dec
xor
outsl
push
in
roll
or
mov
pop
push
test
mov
loope
in
rol
pop
add
add
push
popa
push
mov
ja
cltd
test
cmp
in
and
sbb
dec
push
jns
mov
hlt
sahf
stos
xchg
fdivrl
mov
das
adc
push
mov
mov
or
jle
les
mov
mov
scas
dec
xor
jle
xchg
sub
shll
inc
cmpsl
dec
xchg
sub
sbbb
mov
out
test
jnp
sti
test
jae
jmp
jp
je
stos
mov
pop
repz
jp
imul
dec
inc
fdivrs
lea
jb
mull
jns
jecxz
lahf
das
int
jo
mov
jnp
imull
jno
imul
cmp
mov
xchg
jno
leave
sbb
sbb
ja
outsb
or
cmpl
pusha
xchg
sub
mov
or
dec
cmp
pop
stc
nop
nop
xlat
sub
add
sbb
push
ss
xor
in
test
mov
push
out
fbstp
xor
jmp
cmp
sub
pusha
and
xchg
push
mov
ret
repz
data16
pop
scas
push
mov
jmp
inc
jb
jmp
pop
mov
or
cli
jne
or
ljmp
aaa
into
jne
sbb
ror
lods
inc
sti
inc
testl
shlb
or
add
xor
sarl
sbbl
imul
out
dec
fwait
xor
xchg
sbb
fcoms
mov
xchg
jg
repz
stos
pop
mov
inc
xor
jne
adc
fsubrs
jge
jle
in
test
sbb
fisttpl
and
jns
jg
dec
loopne
stos
jno
fisttpl
or
mov
subb
sub
dec
sbbl
push
sahf
outsl
push
iret
push
jae
sbbl
mov
popf
xor
push
call
jl
jmp
leave
movsl
jnp
fcoms
mov
je
jg
lret
push
pop
sbb
js
jns
lret
stos
xchg
sub
pop
mov
mov
sbbb
pop
ret
pop
jmp
or
xchg
or
pop
mov
hlt
mov
sub
rolb
cmp
inc
add
fldt
mov
jbe
stos
or
ret
dec
lahf
ss
add
loopne
movsl
cmp
xor
into
arpl
js
mov
mov
add
movsb
imul
cwtl
mov
icebp
mov
inc
lods
inc
jne
icebp
mov
sbb
out
daa
xchg
push
and
mov
fucomp
adcb
fs
xor
sti
xor
sub
inc
xlat
psubsb
sbb
push
out
xor
push
dec
jno
das
leave
addr16
sti
loop
cli
adc
leave
pusha
sbb
push
test
xchg
sub
sub
test
mov
mov
cmpsl
sti
xchg
cmp
add
pop
sub
push
push
dec
and
rep
pushf
inc
pop
into
lds
imul
xlat
out
and
push
movsl
dec
inc
jne
je
push
popf
pop
lods
push
call
dec
add
xor
jmp
sbb
pop
or
push
cmp
add
sbb
lea
dec
out
mov
and
sbb
xchg
dec
cmp
movsl
imul
xchg
add
shrl
cmp
insb
aam
testb
mov
loop
add
jne
sbb
pop
lock
sbb
ja
cmp
sbb
mov
outsl
push
inc
xlat
xchg
push
out
cmp
aaa
jno
ss
xchg
mov
arpl
pop
mov
mov
and
leave
xchg
mov
cmp
and
leave
push
pusha
testl
pushf
mov
rorl
lahf
jnp
inc
xlat
jp
mov
mov
inc
or
jb
fidivs
xchg
sub
enter
shr
jo
sbb
add
daa
cmp
xchg
sub
loopne
mov
cmp
lcall
test
mov
fimull
cmp
frstor
xlat
cmpsb
test
mov
dec
fcomip
fcomps
or
push
outsb
dec
sub
or
icebp
or
mov
adc
aas
es
xlat
push
pop
ret
jae
jne
lods
mov
sar
loope
sub
push
popf
subb
popf
mov
cmpsl
ds
in
cs
sub
mov
dec
fcomip
in
and
std
xchg
aaa
inc
fdivp
jae
imul
stos
sbb
fucom
and
sbb
mov
xor
fcomip
insb
push
inc
fldl
test
jns
loopne
adcb
adcb
xor
sub
or
mov
nop
daa
iret
shl
jle
in
and
push
aas
hlt
mov
mov
cmpl
mov
cmp
imul
cmpsb
imul
jmp
inc
push
sbbl
adc
inc
imul
cwtl
addl
arpl
scas
lahf
and
and
sub
test
sub
jns
and
xlat
pop
out
jns
fbld
hlt
bound
add
cltd
scas
aad
jbe
enter
icebp
adcb
jns
jns
hlt
mov
jns
sti
loope
or
fs
loop
pop
mov
bnd
sbb
mov
pop
stos
je
fdivp
sbb
outsb
adc
cmpsb
sarl
outsb
std
mov
mov
movsl
lcall
push
adcl
push
adc
out
sub
inc
fsubrp
lcall
pop
sti
xlat
jmp
mov
sub
movsb
jl
lods
test
pop
jb
mov
fldenv
mov
movsl
dec
push
icebp
inc
fldcw
sbb
jmp
dec
aad
fld
push
sub
or
sub
mov
fdivs
fprem1
andl
in
or
xchg
call
mov
jmp
or
popa
dec
add
dec
or
xchg
push
sarb
cmp
dec
push
dec
pushf
and
out
movsb
cwtl
sbb
cmpsb
mov
xor
and
xor
mov
mov
mov
or
sbb
rorl
adc
mov
loopne
push
mov
mov
inc
repz
movsb
xchg
mov
ds
mov
lea
cmp
adc
sti
addl
dec
sub
popf
jnp
cmc
int3
test
mov
push
sbb
enter
fistpl
adc
mov
idivl
xchg
ljmp
sub
cmc
mov
jbe
jne,pn
cli
cs
add
std
sti
test
mov
mov
mov
push
test
mov
and
in
into
rcll
lcall
ret
imul
jb
mov
dec
in
mov
xor
mov
outsb
iret
cmpsl
mov
shrl
fisubs
call
push
inc
std
loop
push
int
sub
inc
cmp
xchg
fs
fmuls
ficoml
or
pop
inc
sbb
insb
iret
aad
sbb
repz
and
xchg
call
dec
pop
jmp
push
mov
dec
popf
add
clc
in
aaa
inc
sbb
mov
mov
mov
push
fldl
jp
daa
lods
sahf
add
inc
cmp
fwait
in
mov
inc
add
xchg
scas
pop
pop
movsl
dec
popf
roll
push
jecxz
data16
jbe
adc
in
repnz
aaa
lret
push
sahf
jbe
stc
jmp
push
adc
in
xchg
or
popa
sarb
or
jno
cld
int
enter
cli
push
jmp
sbb
and
mov
inc
call
mov
push
in
ret
pop
enter
mov
ret
jns
jecxz
test
mov
daa
jecxz
or
js
pop
xlat
cltd
in
jmp
add
in
mov
int
sbb
ficomps
xor
shll
into
rcl
sub
movsb
mov
sbb
out
xchg
insb
add
mov
add
pusha
out
jmp
lock
or
sbb
sub
xor
pop
lock
fiadds
scas
gs
shrb
sbb
mov
pop
add
mov
data16
fidivs
fldln2
test
cld
xchg
icebp
popf
push
mov
sbb
mov
aas
cmp
and
rcrb
mov
addr16
sti
jmp
xchg
cmpsb
call
mov
push
outsl
mov
insl
das
iret
insw
xchg
addr16
xchg
xchg
fbstp
sbb
sbb
aaa
into
dec
aas
daa
mov
jb
inc
fdivrl
pushf
jae
lret
cli
add
xchg
sub
sub
scas
inc
adc
test
jmp
xor
or
iret
mov
es
pavgb
daa
arpl
pop
mov
sbbl
mov
lahf
ss
mov
sti
fildll
imul
out
loop
testb
pop
and
scas
push
and
movsb
movl
std
mov
popa
clc
test
jg
fmul
mov
xor
out
stos
inc
lods
dec
mov
jae
push
fnstenv
or
xchg
or
testl
aas
lahf
and
lret
inc
fidivl
test
call
fistpll
outsl
push
jo
outsl
push
loope
lea
or
orb
mov
mov
in
imul
xchg
or
sbbb
mov
sbb
adc
sbbl
add
lahf
or
push
ljmp
jno
jle
fwait
mov
nop
mov
rcrl
pop
scas
repnz
data16
xchg
mov
jb
fmuls
nop
daa
and
sub
les
inc
mov
inc
ficomps
mov
testb
adc
mov
mov
leave
das
xchg
mov
out
mov
jae
mov
cli
xchg
in
cmp
orl
mov
add
out
inc
dec
push
jmp
scas
clc
jg
ret
enter
in
popf
xor
cmp
xlat
mov
gs
pop
cmc
testl
out
shll
xor
iret
test
cmpsb
push
aas
pop
cmp
sub
jl
add
cwtl
cmpsb
add
dec
fisubs
mov
adc
aas
xchg
cmp
pop
hlt
call
add
int
lcall
adc
dec
in
pop
xor
incb
popa
clc
test
cmc
mov
jg
lods
pushf
adc
jge
xor
xlat
xchg
mov
out
mov
insl
add
xor
jle
mov
das
lds
mov
mov
setno
test
pop
mov
add
repnz
movsl
adc
mov
das
je
cltd
xor
dec
in
lahf
cmpsl
ds
imul
and
pop
call
adc
push
fwait
mov
xchg
mov
mov
cld
jecxz
or
cmp
iret
and
cwtl
pop
call
pop
mov
mov
cmp
cmp
stc
pop
repnz
sbb
pop
dec
cmp
sarb
shrl
push
push
out
xchg
fs
xchg
mov
push
mov
sete
pop
in
sarl
dec
movsl
xchg
pop
icebp
inc
into
shlb
insb
js
mov
out
test
or
imul
pop
jge
sub
adc
fbstp
pop
data16
jbe
and
loop
ds
or
cmp
pop
rcrl
jp
insb
fbstp
sbb
nop
jl
std
xchg
fsts
pop
sahf
sbb
ss
clc
mov
fiaddl
scas
popa
clc
rclb
push
sbb
lods
inc
ret
xor
jmp
bound
mov
nop
ss
jno
pop
pop
scas
lcall
xchg
sbb
xchg
mov
arpl
fbstp
mov
push
ljmp
jno
mov
scas
inc
xchg
es
scas
int3
arpl
mov
lret
bound
mov
xchg
int3
sub
fimull
mov
cmp
push
mov
pop
out
mov
and
xlat
fsubrs
jbe
lret
mov
clc
es
shrl
push
push
lods
cli
xor
xchg
mov
movsb
mov
xlat
sub
icebp
mov
add
sbb
push
subb
sbb
lock
cmp
dec
ret
pop
icebp
mov
shrl
dec
and
sbb
imul
fadds
add
repz
loop
xor
add
or
push
test
dec
inc
scas
movsl
cmp
insl
aam
sub
les
dec
push
popf
lods
loop
leave
mov
mov
add
clc
dec
push
mov
adc
aad
cmp
out
insl
add
cvtdq2ps
jbe
mov
insb
mov
mov
das
dec
and
testb
lods
adc
lret
push
and
sbb
ss
out
aam
in
imul
ja
mov
mov
fsubrs
dec
imulb
pop
fs
insl
mov
out
pop
aad
xchg
fdivrl
add
aaa
cmc
push
mov
pop
and
inc
sahf
inc
xlat
loope
dec
jecxz
or
xor
pop
jge
inc
sbb
xor
mov
in
outsl
hlt
int3
arpl
aaa
ljmp
push
or
in
es
inc
fistl
stc
jle
stos
cmp
test
roll
popa
adc
pop
dec
push
mov
push
leave
jo
mov
dec
stc
nop
repz
mov
ds
fdivl
repz
das
push
ljmp
jno
in
loopne
pop
out
nop
daa
inc
adc
push
ja
mov
inc
mov
shrl
out
cli
xchg
adc
add
dec
mov
ss
outsb
aas
sbb
push
jmp
ss
hlt
push
inc
jb
jle
imul
xchg
nop
daa
mov
scas
inc
mov
mov
arpl
sub
jo
sub
xorl
or
testl
inc
fmull
inc
fstpt
pop
push
jmp
ficoml
pop
ret
repz
sub
out
xor
sub
push
imul
push
lret
out
test
cmp
jge
xor
mov
stos
subl
mov
dec
jae
pop
data16
scas
jb
in
leave
test
xor
jnp
mov
sub
mov
jbe
pop
in
pop
jmp
xchg
adc
add
mov
lret
add
dec
sub
outsl
fs
in
mov
adc
arpl
popf
xor
mov
mov
lods
inc
jae
nop
daa
sub
scas
inc
jbe
call
arpl
push
push
popf
ljmp
lods
cmpb
cwtl
stos
xor
gs
mov
sub
inc
fildl
sbb
outsb
stc
cmpsb
in
es
adcb
fildll
xor
data16
mov
enter
push
subl
pop
mov
js
push
stos
sbb
into
mov
xchg
imul
add
movq
scas
sub
sti
jb
inc
and
inc
mov
jne
lahf
xor
mov
fld
pop
adc
leave
pusha
mov
repz
scas
add
fistl
pop
xchg
or
xlat
sbb
inc
repz
and
dec
in
inc
or
jae
sub
push
xchg
cmp
aaa
push
out
popa
out
notl
subl
xor
or
sahf
xor
pop
fadd
pop
push
xorb
pop
mov
mov
hlt
arpl
cmp
and
rolb
or
push
aad
or
xor
xchg
rorb
xor
lods
inc
aam
mov
mov
sbbl
and
sub
ss
rcrb
fnstsw
inc
pop
mov
mov
mov
jns
shr
popl
dec
ret
fisttpl
sub
fcmovnbe
and
jnp
sbb
dec
stos
jle
stos
dec
sti
mov
loopne
and
into
pop
mov
sub
inc
pop
xchg
dec
sub
sbb
out
je
je
or
xor
jl
dec
cmp
mov
adc
stc
movsb
mov
and
popa
ret
outsl
scas
daa
leave
popf
into
pop
jge
adc
dec
lods
cli
imul
sbbb
subb
mov
loop
flds
lds
not
xchg
sbb
test
aam
cmp
xchg
xchg
andb
stos
cmp
sti
cmp
cmp
jecxz
jmp
cmc
movsl
lret
ret
cmpsb
fdivrs
fstps
cmp
jmp
nop
mov
dec
add
jg
js
sbb
cli
dec
mov
into
mov
xchg
aas
xchg
add
sahf
rcrb
cmp
and
data16
lds
push
sub
add
mov
pushf
cmp
insl
fsubl
insl
es
jns
pop
mov
adc
movsb
jge
xor
xlat
pop
mov
mov
leave
xor
mov
and
ficompl
cmp
movsl
pop
mov
stos
inc
cmp
pop
lahf
test
das
fisttps
jmp
idivl
pop
sbb
loop
call
fstpl
imull
cmp
sbb
sub
js
loope
loopne
jl
xchg
dec
imul
in
das
inc
lock
cmpsl
push
and
and
and
adc
sub
pop
mov
test
adc
aad
outsb
jnp
cltd
aad
pop
pop
pop
fistpll
nop
mov
add
pop
gs
in
int
daa
std
js
in
dec
lret
add
loopne
scas
dec
push
div
xor
aam
lret
and
test
cmp
sub
repnz
in
int
imul
add
jae
sbb
and
mov
cwtl
mov
cmp
aas
sub
test
jno
insb
icebp
lcall
pop
xchg
xchg
push
xor
lods
sbb
mov
and
mov
sti
mov
imull
lods
pop
xor
insb
lcall
jo
test
cmpb
sub
add
mov
in
pop
dec
shr
add
test
sbb
mov
fs
and
inc
push
in
orl
mov
dec
jne
aam
xchg
xor
lcall
push
std
test
fldt
outsb
and
in
imul
mov
push
imul
xchg
repz
cmp
andnps
mov
xchg
cmpsl
add
pop
outsb
lock
sarl
xchg
hlt
jns
stos
dec
adc
and
dec
pop
mov
cmpsl
call
out
dec
xor
lods
inc
mov
cli
mov
es
cltd
pop
mov
xlat
pushf
ljmp
sbb
cmpsb
js
negb
cmp
test
cmp
out
jge
sub
mov
jno
in
aad
push
cmp
jnp
mov
push
jno
es
addr16
int3
jbe
stc
add
jg
into
push
xor
je
cmp
cmpb
ja
test
bound
inc
mov
mov
push
outsb
cmp
push
pop
popl
fdivp
jg
ja
xchg
mov
fiaddl
pop
push
jns
icebp
rcll
test
adc
mov
push
shl
aas
push
sub
pushf
cmpsb
sar
mov
cwtl
out
and
push
mov
mov
outsl
xchg
sub
jae
out
stc
cmc
sbb
mov
adcl
inc
in
into
mov
daa
adc
jmp
lods
in
addl
xchg
mov
xchg
xor
jmp
add
lcall
jb
ret
imul
jno
xchg
and
and
aaa
mov
adc
dec
iret
cmp
nop
mov
in
xor
int
add
inc
aad
int
mov
fdiv
sub
sbbb
lret
mul
xor
jo
cmp
addr16
ja
mov
imul
sbb
fldenv
jo
mov
add
out
in
test
cmp
mov
jb
hlt
fidivrl
or
mov
adc
xor
std
sub
fcoms
ficomps
mov
int
shll
mov
add
inc
aas
mov
test
mov
repz
loopne
jecxz
mov
rcll
data16
repnz
add
sbb
mov
fdiv
mov
rol
push
adc
and
data16
jg
xchg
xchg
push
fisubs
mov
xchg
mov
and
imul
fcoml
scas
xchg
lahf
jo
out
idivb
std
push
add
lods
popf
push
cmp
mov
inc
mov
cmp
inc
ret
xchg
out
pop
push
mov
movsl
out
push
inc
sbb
scas
or
xchg
enter
xchg
rorl
les
push
mov
sub
dec
test
pop
fsubrs
and
xchg
insl
outsl
jle
mov
rorl
mov
lcall
cwtl
adc
std
imul
das
xchg
sub
push
popl
jne
fucomi
scas
leave
adc
mov
cmp
lds
cmp
cmp
push
sbb
mov
inc
jnp
pop
stos
pop
mov
test
mov
daa
mov
ljmp
sub
divb
fmull
push
fld
repnz
imul
gs
xchg
mov
repnz
iret
hlt
and
add
mov
jecxz
arpl
ss
pusha
dec
cmpsl
icebp
out
lods
outsb
xor
push
or
sahf
lret
and
sbb
dec
mov
and
pop
add
sub
add
pop
pop
lea
ret
mov
mov
insl
pop
xchg
and
fwait
mov
mov
ss
ja
rol
push
popa
enter
push
aas
pop
in
or
test
aaa
jo
cmp
dec
icebp
cmc
inc
rcr
mov
and
mov
mov
and
pop
insb
lcall
cwtl
mov
cli
inc
add
cmp
sub
fldpi
or
repnz
test
pop
sub
or
clc
lea
adc
shrl
xor
movsl
jle
lret
test
mov
out
mov
xchg
xchg
add
das
or
mov
pop
call
add
call
adc
mov
lds
cmp
in
jbe
in
test
add
inc
add
jp
push
decb
lds
dec
sbb
call
mov
or
ret
push
mov
dec
xchg
dec
lret
push
inc
hlt
sti
jle
or
jbe
mov
push
sbb
das
push
ficoms
add
xor
aaa
pusha
push
xlat
enter
xchg
psubw
insl
adc
pop
loop
mov
adc
cmp
jns
subb
jno
andb
mov
imul
mov
mov
lret
sub
add
movsl
sbb
loopne
outsb
repz
lods
lock
out
clc
mov
lds
push
or
jl
mov
adc
jecxz
sarl
arpl
lock
js
or
mov
mov
push
movsl
pop
push
push
into
jns
inc
arpl
loop
push
inc
popa
shlb
sub
jmp
lret
rorb
aas
flds
cmp
fwait
mov
dec
rorb
je
out
adc
adc
js
xchg
push
adc
push
shrl
out
mov
mov
and
adc
pop
daa
addl
outsl
pushf
push
sahf
mov
jecxz
cli
ficoms
loope
test
mov
sub
aaa
push
int3
cvtps2pi
xor
and
xor
scas
pop
aas
jle
inc
fistl
adc
jp
mov
das
loopne
jmp
xchg
arpl
shrb
mov
or
ljmp
jno
dec
sub
rcrb
xchg
in
fs
out
sbb
push
xchg
cmc
sbb
inc
xchg
add
inc
out
or
fistpl
xor
or
imul
pop
cltd
xor
out
and
mov
adc
jl
add
mov
movsb
mov
push
dec
mov
sbb
fwait
xchg
push
pusha
daa
pop
dec
jp
add
iret
xchg
adc
divl
jl
sahf
or
xor
jne
out
xchg
sub
mov
and
bound
rolb
arpl
mov
push
xchg
mov
jb
sub
rolb
stc
ja
aad
loop
hlt
cwtl
int
mov
mov
mov
sbb
aaa
out
cld
mov
fnstcw
imul
pop
sbb
ja
in
dec
rorl
aam
test
push
inc
xor
sbb
ja
dec
mov
mov
pminsw
jo
inc
mov
nop
inc
rcrb
lcall
mov
push
xor
push
push
jne
movsl
jnp
loopne
or
or
lahf
mov
mov
mov
dec
mov
pop
test
jo
add
into
out
lcall
cmc
cmpsl
ljmp
fbstp
sbb
sti
push
loope
lcall
inc
jae
push
mov
and
pop
push
stos
insb
testb
insb
mov
ljmp
mov
and
nop
stos
and
ss
push
pushf
mov
std
push
insl
push
jmp
fadd
inc
out
add
push
xchg
shll
ror
fmuls
or
fs
out
fists
add
or
push
imul
lods
les
movsb
sbb
out
cltd
jne
push
cmp
push
ja
inc
stos
mov
inc
pop
cmp
sbb
and
mov
mov
dec
int
test
push
adc
aas
pushf
loope
mov
dec
sbb
mov
lret
imull
mov
ret
scas
jl
frstor
sub
adc
stos
test
repz
push
bound
adc
add
jbe
shrl
cmp
xchg
test
sub
test
pop
sbb
in
xchg
imul
xchg
es
imul
je
push
add
enter
sbb
ret
cli
mov
mov
jb
jo
fs
ss
fidivrs
fists
pop
repz
scas
mov
sub
mov
mov
push
xor
ss
loope
jbe
mov
lret
fisubs
mov
pop
and
jae
pushf
iret
fldenv
mov
arpl
into
call
loopne
push
fcmovnbe
outsl
aas
push
hlt
and
out
lret
dec
pop
mov
loopne
sbb
jecxz
inc
xchg
aaa
lds
idiv
pop
sub
inc
xchg
lea
sarl
or
sbb
mov
pusha
jmp
fisubrs
enter
cs
cmp
cmp
std
out
sbb
repz
push
dec
mov
mov
cmp
and
mov
outsb
lahf
loopne
lods
mov
test
fistpll
mov
mov
daa
cmp
or
popf
xchg
leave
pop
adc
es
div
pop
pop
sbb
xchg
scas
stos
ljmp
testl
not
pop
pop
das
ljmp
push
in
ds
inc
sub
xor
imul
test
imul
shlb
pop
movb
sub
fcmovnu
ret
rorb
pop
adc
pop
in
jne
dec
jne
lea
ret
ja
sub
enter
pop
out
mov
ja
adc
mov
in
loop
es
into
xchg
lds
xlat
inc
cli
outsl
pop
push
pusha
or
xor
push
jno
xchg
xorl
sbb
ret
test
call
jg
icebp
jo
add
fiadds
or
fdivr
loop
cmpsl
not
gs
shll
hlt
fcomps
mov
add
sub
iret
xor
add
push
test
pop
es
aad
stos
inc
mov
pushf
lea
adc
in
outsl
adc
mov
imul
aaa
xchg
add
cmp
xchg
mov
cld
ljmp
rcll
adc
xchg
hlt
adc
sahf
rorl
cwtl
into
dec
xchg
std
adc
ljmp
xor
mov
enter
xor
cmc
and
and
testb
cmp
xchg
pop
sbb
cmpsl
xchg
ja
pop
dec
sbb
jae
add
rol
mov
testb
pusha
lods
movsl
shll
stos
sarb
fwait
dec
dec
out
repnz
mov
das
pop
xchg
out
fldl
cmp
adc
dec
jnp
test
dec
dec
stc
push
or
jb
or
fimuls
jo
cli
or
cmc
cmc
add
cmc
cld
lgs
arpl
adc
pop
sub
sub
mov
loopne
push
fidivrs
rcrb
xchg
pop
dec
enter
shll
movsl
xchg
std
adc
in
and
sbb
shl
jb
imul
pop
lods
out
dec
push
pop
pop
adc
das
mov
outsl
sub
cli
pop
pop
jnp
scas
inc
cmpsb
incb
cmpsl
sbb
js
xor
bnd
pop
sti
jge
pop
test
sub
popf
ret
movsb
push
mov
xchg
cmp
std
xchg
mov
shr
shrl
jecxz
xchg
sub
popa
pop
insb
mov
sub
addb
cld
jp
add
inc
insl
or
inc
imul
pushf
clc
fcoml
dec
pop
out
xchg
lret
or
loopne
and
pop
sbb
pusha
insb
push
and
hlt
and
rol
mov
mov
pop
pusha
xor
sub
daa
pop
shrl
adc
push
sub
aaa
pop
pop
inc
xchg
and
dec
cmp
stos
scas
dec
stos
outsl
outsl
ljmp
mov
or
bound
mov
das
hlt
mov
sti
int3
pushf
push
rolb
dec
fisubrl
cmpsl
mov
dec
aaa
outsl
xchg
push
or
lds
cmovae
aas
cmp
rcrb
out
repz
xor
fwait
or
in
test
sar
inc
xchg
out
mov
arpl
cs
repz
shlb
or
and
xor
xlat
push
test
leave
inc
lret
les
sub
xchg
gs
leave
aam
das
mov
addr16
mov
es
in
mov
or
pop
lahf
mov
sbb
and
push
pop
bound
sbb
xor
mov
cmp
sarl
dec
add
pop
cmpsb
std
lret
pop
sarb
jno
mov
push
or
push
mov
or
rorl
call
mov
push
add
push
mov
xor
lds
jo
and
adc
mov
xor
ret
jge
test
test
js
sahf
int
shll
xor
jbe
and
dec
and
mov
sub
pop
and
out
test
xor
sub
inc
ljmp
mov
inc
adc
insb
cmc
icebp
dec
std
adc
loope
jne
sub
dec
fisttpll
aas
mov
aam
stos
stos
jnp
scas
push
into
pop
mov
cmp
into
lret
insl
xchg
push
inc
pusha
mov
mov
je
xchg
sbb
outsb
push
jp
inc
fcomi
stos
and
inc
and
int
arpl
out
xchg
fwait
outsl
pop
jns
movaps
xchg
push
fbld
popa
mov
das
ds
pop
pop
adc
sub
es
push
fdivrs
or
add
scas
xchg
pop
push
pop
push
push
nop
mov
pushf
cmp
xor
xor
or
dec
or
xchg
mov
dec
std
fisttpl
lods
adc
dec
imul
cmpsl
xchg
pop
xor
xchg
xor
inc
out
aad
imul
push
and
pop
mov
sti
jo
or
imul
jmp
add
jl
xor
pop
dec
testl
inc
dec
insl
jno
mov
add
call
je
xorb
gs
jnp
mov
sub
sahf
sub
mov
es
inc
mov
xchg
sub
jge
fsubr
movsb
jae
div
scas
push
push
sub
or
stc
sub
xor
addb
sar
mov
push
es
xlat
lods
stc
cmpsl
pop
and
push
test
sbb
mov
adc
ror
outsl
push
and
aad
stc
or
movsl
sub
icebp
loopne
andl
adc
xor
xchg
fwait
ucomiss
push
cmp
jge
ljmp
dec
push
fxch
je
jne
pop
ficomps
mov
adc
rorb
outsl
dec
in
push
test
jecxz
pop
je
fstpt
popa
sub
dec
sahf
movsb
or
dec
adc
add
aad
jno
xchg
out
push
in
out
mov
xor
xchg
test
jle
mov
jl
and
sbb
ret
into
lea
cs
scas
cmp
xchg
add
lcall
in
lret
mov
ret
out
insb
mov
stos
xchg
lea
cmp
dec
jg
mov
cmp
mov
pop
arpl
jp
enter
jne
fcompl
add
std
xchg
cmp
popf
scas
aaa
xor
int
dec
leave
xchg
push
sub
into
cmp
push
lret
xchg
out
xchg
jl
popf
pop
sub
add
sbb
mov
andb
dec
inc
dec
movsb
mov
jecxz
dec
outsl
jge
mov
negl
dec
jno
cwtl
fwait
scas
fistpll
inc
fstps
adc
ret
movsl
scas
mov
in
movsb
cmp
adc
std
cmp
sbb
mov
pop
jbe
loop
lds
cmp
inc
fs
out
jmp
adc
enter
fsubrl
ss
sahf
and
push
mov
cmovl
mov
into
push
aaa
inc
int3
daa
les
or
movsb
pushf
mov
in
hlt
test
mov
loopne
add
stc
pop
pop
ljmp
mov
arpl
test
aam
mov
int
inc
idivl
and
imull
pop
pop
pushf
fisubs
popf
mov
cmp
div
mov
mov
rorb
ja
stc
aas
xor
out
cmp
mov
push
insb
inc
dec
add
lret
adc
in
cmp
jp
call
jecxz
xchg
es
and
aad
gs
rorl
fnstsw
enter
imul
addl
pmulhw
jl
cmp
mov
push
jl
push
mov
pop
jb
cwtl
aaa
pop
sbbl
sub
rclb
mov
mov
and
mov
inc
js
icebp
daa
xadd
sti
xor
push
inc
in
mov
rcr
jg
idivl
pop
push
call
inc
mov
fwait
aaa
jne
mov
dec
mov
int3
in
fistps
jmp
sbb
push
dec
add
popa
cltd
fmull
mov
push
aad
lahf
shlb
sahf
aad
inc
imul
cmpb
adc
aas
in
pop
mov
ja
rcl
out
push
and
in
sub
jg
adc
mov
xor
jg
gs
jns
mov
loop
push
mov
movsb
mov
push
dec
cwtl
add
cmp
add
mov
inc
dec
pop
repz
fsubrl
xlat
sbb
sbbb
lea
dec
mov
push
xchg
call
sbb
icebp
push
pushf
mov
push
or
pusha
rclb
rcll
xorb
cmpsb
push
inc
mov
das
dec
jp
xchg
in
and
mov
xchg
cld
sub
xor
dec
xchg
lahf
mov
test
or
add
mov
mov
aas
xchg
adc
adc
push
mov
bound
inc
jnp
cmp
mov
lret
pop
push
adc
xchg
or
stc
imul
push
mov
xor
pop
sti
addr16
add
mov
ljmp
sti
jb
mov
stc
lret
insb
repnz
test
dec
ret
aam
in
jp
movsl
mov
data16
mov
jl
fistpl
cltd
mov
ret
scas
mov
push
enter
mov
cmp
fnstenv
mov
mov
cwtl
cmp
or
xchg
sbb
lcall
inc
jnp
add
int3
dec
aam
sbb
sbb
cmpsl
cltd
and
in
xlat
inc
outsl
call
fs
mov
mov
imul
pop
cs
or
xchg
call
jb
xchg
je
test
mov
xchg
cltd
mov
sti
sahf
cmp
setnp
mov
loop
sub
and
jae
lret
aas
adc
inc
or
xchg
loopne
testl
ds
rol
push
addb
jg
dec
sub
mov
cmp
repnz
or
mov
mov
or
add
in
mov
push
sti
ffreep
sbb
iret
popa
int3
jne
ss
pop
dec
and
xchg
hlt
mov
inc
fidivrl
mov
das
dec
jp
lahf
sbb
or
xorb
sbb
jnp
dec
test
and
push
in
cmp
jge
sahf
pushf
cwtl
mov
mov
pop
cmp
xor
mov
fistps
jp
jle
int
imul
fistpll
push
int3
inc
xchg
out
adc
ljmp
push
mov
test
pusha
xlat
sbb
or
xor
dec
dec
adc
ret
mov
fists
dec
and
out
lods
nop
mov
sbb
sbb
pusha
cmp
les
aad
dec
shll
pop
mov
pop
outsb
add
out
or
mov
sbb
jo
or
add
adc
cmp
sarl
and
or
test
and
es
jae
or
stos
mov
mov
adcl
xor
neg
dec
loop
scas
add
push
inc
xchg
xor
push
gs
roll
add
push
sti
mov
pop
add
push
adc
xchg
adc
das
dec
mov
adc
stos
xor
shll
or
xor
js
add
jle
mov
sub
fldt
leave
xchg
hlt
jl
xor
add
mov
dec
sarb
lea
jne
mov
mov
sti
mov
outsb
adcb
das
lock
adc
jo
push
and
jge
mov
jle
or
test
sub
ja
flds
cmp
pop
out
xchg
mov
outsb
rol
push
mov
jmp
sti
xchg
insb
test
or
loopne
fistpll
dec
push
xchg
sbb
fbstp
mov
add
adc
dec
ljmp
stos
and
xchg
js
scas
cltd
dec
pop
test
ficoms
gs
pop
cltd
lock
pusha
mov
mov
jge
in
xor
ret
lcall
dec
lds
dec
int
jg
push
lahf
sar
stos
xor
jge
xor
mov
xchg
ret
iret
stos
gs
shl
or
notb
xchg
push
pop
nop
call
push
cwtl
arpl
push
adc
and
scas
push
and
out
mov
adc
je
data16
cmpsb
fbld
movsl
ljmp
fxch
rclb
dec
mov
mov
jl
fidivs
push
xchg
imul
or
sbb
sbb
push
xor
mov
aam
clc
or
call
ds
leave
or
add
mov
adc
andl
mov
repz
stc
bound
jb
inc
into
push
stos
xchg
loopne
push
outsl
mov
inc
xchg
mov
ficomps
mov
add
loop
popa
inc
push
orl
add
in
inc
lea
loope
dec
push
rclb
pusha
mov
cmpsb
xchg
sbb
push
xchg
cmp
pop
and
js
and
jo
les
add
jno
cmpsl
inc
mov
loope
scas
in
or
pop
sbb
inc
ret
in
sbb
sbb
pop
lahf
add
pop
jnp
xor
cmp
lds
scas
out
or
xor
scas
imul
mov
out
pop
shlb
cmpb
lcall
arpl
mov
popa
aas
lods
mov
ljmp
fldcw
add
adc
add
sarl
cmc
bound
sbb
and
mov
cmpsl
dec
lcall
iret
lret
shrb
outsb
inc
rcll
mov
jnp
in
inc
cmp
xor
div
test
cmp
rclb
lds
lods
push
adc
decb
mov
out
jae
fcom
cwtl
mov
sub
push
outsl
movsl
pop
xor
aaa
push
dec
aas
push
push
cltd
sti
push
jmp
sub
dec
xor
jae
outsl
or
cmp
cmpsl
lahf
lock
mov
jg
push
jb
ja
sbb
das
sbbl
sub
aam
ret
aas
sbb
bound
clc
mov
pop
bound
fwait
push
add
lahf
adc
subb
inc
adc
sbb
add
repz
and
mov
or
int3
repnz
jns
adc
mov
pop
enter
push
jo
or
data16
sub
call
pushf
sti
sti
stc
pop
cld
les
stc
sub
loope
popa
into
jnp
cltd
jl
scas
into
cli
xchg
in
lods
push
xor
jge
mov
stc
ret
sub
pop
nop
jb
adc
in
mov
nop
jecxz
ret
xorl
push
add
ret
push
imul
ljmp
cmpsb
mov
aam
addr16
and
das
scas
inc
mov
jnp
imul
rol
sahf
rol
push
outsl
cmp
xlat
or
mov
jl
jns
jmp
imul
jge
push
inc
fs
lds
push
fs
out
mov
fs
cmpsb
xor
sarl
fildl
fists
jmp
sti
cmp
nop
push
dec
sbb
call
or
sub
push
cli
inc
pop
in
add
sub
ljmp
xor
testb
jbe
xor
mov
jns
fucomi
dec
push
push
sbb
lock
cltd
xchg
mov
mov
int3
cltd
call
test
loope
inc
lock
xor
sarb
or
daa
ss
mov
xchg
lock
jmp
test
arpl
adcb
cmp
cwtl
cmpsl
or
jno
int3
dec
mov
das
scas
cmp
or
roll
push
outsb
into
mov
cwtl
es
pop
adc
fnstenv
cmp
rcl
xchg
ss
jge
cmc
or
mov
idivl
stos
jns
insb
popf
add
pop
idiv
out
enter
add
xchg
pop
and
fwait
dec
scas
push
adc
inc
out
loop
cmpb
and
sbb
clc
add
push
mov
data16
xchg
adc
lods
inc
mov
xor
xchg
or
jmp
nop
or
cmp
nop
daa
mov
inc
loope
sbb
mov
into
gs
cmp
ficoml
test
test
outsl
push
jg
lds
mov
rorl
fistpll
scas
inc
mov
enter
sbbl
fwait
loope
int
cmpsb
cmp
pop
cltd
les
das
adc
add
stos
and
xchg
pop
int3
push
in
std
jg
mov
push
jne
push
sarl
add
sub
mov
divl
adc
enter
imul
popf
sbb
mov
mov
shl
repz
adc
lahf
inc
mov
add
pushw
mov
pop
xchg
sub
mov
cmpsl
mov
pop
out
cmp
imul
add
js
scas
xchg
sub
push
sti
xchg
test
test
mov
xchg
inc
fldt
test
stc
jnp
add
iret
dec
and
and
mov
hlt
and
fidivl
inc
jnp
ja
clc
sbb
cltd
xor
cmp
mov
int3
sarl
jne
loop
ljmp
in
test
stc
push
mov
data16
pop
repz
push
call
lret
sub
sub
mov
ret
xchg
std
xchg
les
push
sub
inc
in
scas
inc
push
imul
gs
pusha
imul
xchg
scas
inc
int3
push
mov
test
pop
jge
test
outsb
add
filds
push
movsl
cmp
out
test
pop
xchg
test
ds
cmpsb
scas
inc
loopne
lds
push
in
negb
jp
pop
das
push
cmpsb
aaa
into
fbstp
or
int3
out
negb
xchg
cmpsb
movsb
cmp
jb
imull
int3
push
jmp
pop
inc
fadds
cmpsb
test
aam
add
cmp
sbb
test
mov
cmpsb
outsb
add
xchg
add
cmp
sbb
cmp
pop
lret
bound
test
sub
test
ret
pop
cmpsl
aam
loope
fwait
xor
sub
cmp
pop
icebp
mov
test
test
inc
repz
mov
repnz
add
out
ljmp
sbb
push
fwait
cmp
les
dec
jecxz
in
scas
push
mov
lods
push
mov
mov
movsl
cmp
aam
sbb
jnp
lret
movsb
das
iret
pop
lds
jne
and
test
lds
ja
and
sbb
jnp
and
add
jnp
and
insl
pop
sbb
cmpsb
and
jmp
movsl
and
pop
popf
xor
jl
mov
and
aaa
into
jnp
mov
shlb
jnp
lods
movsb
and
pop
lds
jnp
and
cmp
gs
and
outsb
out
jnp
mov
adc
ljmp
push
xchg
and
pop
mov
ss
jecxz
adc
insb
ljmp
xchg
and
mov
icebp
jp
pop
movsb
adc
dec
lds
in
pop
mov
mov
push
jecxz
adc
push
icebp
imul
xchg
adc
inc
out
imul
aaa
mov
cld
out
pop
or
adcb
out
dec
mov
in
xchg
std
in
es
jg
pop
hlt
cmp
xchg
and
sbb
xor
xchg
fisttpl
hlt
je
les
xchg
data16
iret
dec
ja
jae
fnsave
in
or
cmpsb
cmp
sbb
and
popa
loop
or
mov
fucomp
addl
jbe
shll
jbe
loope
hlt
sbb
push
in
popa
ficoms
or
sbb
push
fstl
data16
sub
push
int
jg
je
adc
iret
sbb
outsb
stos
pop
jnp
push
lret
xor
repz
rep
adc
decl
pop
repnz
outsl
fbstp
sbb
je
mov
lcall
rcrb
pop
ja
xchg
add
and
lahf
repz
sub
imul
dec
mov
ja
pop
hlt
inc
cwtl
testl
pop
mov
cmpsl
jnp,pt
mov
inc
pushf
push
out
bound
out
push
and
adc
xor
outsl
push
lds
sbb
mov
hlt
in
inc
dec
out
push
arpl
cmp
fdivl
out
and
push
out
add
cmp
jb
and
cmpsl
pop
movsl
sbb
push
jnp
jb
es
push
out
dec
pop
hlt
jb
pop
mulb
xchg
push
jmp
jp
fnsave
lahf
ss
cmp
out
test
mov
outsb
add
add
cmp
push
loop
jno
jbe
sahf
mov
ret
jne
notb
int3
arpl
in
and
xchg
inc
ljmp
cwtl
inc
xlat
rolb
push
xor
push
fnstenv
dec
pop
repz
add
and
mov
push
jle
shrl
lahf
adc
enter
aad
out
xchg
imul
xorb
lods
inc
outsl
push
push
mov
xor
xor
xor
mov
add
mov
lahf
ss
cld
xchg
das
xor
mov
mov
jbe
cmpsl
cmp
rcr
out
or
dec
fbld
cs
pop
inc
gs
js
testb
into
sbb
sbb
das
dec
cmp
stc
cltd
mov
jb
mov
add
dec
ss
scas
imul
out
rorl
add
jne,pn
pop
pop
notl
lods
mov
aad
hlt
notl
and
xorb
stos
lods
xchg
fld
gs
xor
xchg
xor
pop
mov
dec
mov
ror
pop
push
std
fldcw
fldt
push
out
js
jle
mov
cli
mov
repz
leave
das
pop
or
jg
pop
mov
xchg
push
lock
mov
fucomip
loope
and
or
cmp
push
nop
push
add
xchg
cmpsb
xchg
xor
push
adc
sub
inc
icebp
xchg
jl
je
repz
pop
test
push
cmpsl
inc
inc
loope
mov
xchg
push
cmp
nop
mov
dec
fiaddl
push
shlb
xor
pop
data16
lods
xchg
xor
adc
push
cld
pusha
and
dec
notb
adc
lods
cmp
push
fisubrs
push
fidivrs
cmpsl
sbb
cmp
push
stc
push
ficompl
bound
cmpsb
sub
filds
mov
mov
dec
into
mov
or
xchg
mov
ficoml
mov
scas
cmovo
inc
inc
out
std
jge
lcall
mov
imul
adc
sbb
inc
mov
and
cmp
xchg
mov
dec
and
pusha
ficomps
ficompl
rol
jb
enter
cmc
adcb
jns
jno
sahf
inc
in
xchg
mov
aad
or
push
in
xorb
test
in
and
sbb
sub
xchg
ja
xor
or
fsts
fistps
insl
dec
in
mov
fnsave
repnz
testl
push
inc
aam
mov
jmp
shld
cs
xchg
xor
inc
push
hlt
jge
shlb
jg
shll
xchg
mov
iret
and
adc
xor
bound
mov
jo
lret
fsubl
dec
ljmp
cmpsb
or
mov
sub
cmp
dec
inc
jmp
pusha
cmpsb
subl
adc
insb
xor
bnd
inc
add
push
mov
out
shll
jp
in
cs
hlt
cmp
mov
rorb
stos
dec
mov
ret
fstps
stos
jg
in
jbe
sbb
testb
int
add
cmp
mov
ss
aam
inc
add
loope
push
stc
lret
imul
mov
fnstcw
les
shlb
sti
dec
pop
fldl
dec
in
or
mov
clc
push
mov
loop,pt
jg
cmpsl
add
pop
xor
push
in
mov
mov
pushf
fisubrl
jno
sti
and
repz
cmp
jle
and
shlb
enter
pop
and
mov
in
cmp
cwtl
das
leave
pop
fs
mov
sahf
xor
loope
in
subl
fdivs
nop
jp
ret
jbe
jecxz
iret
adc
cmp
dec
addr16
pop
repnz
jns
jle
icebp
mov
mov
adc
and
inc
loope
js
dec
filds
es
in
in
sub
rep
aas
or
cld
xchg
test
nop
dec
jecxz
pop
adc
cmp
jl
ret
hlt
popl
lcall
and
popf
sub
pop
cmpsb
adc
into
or
cmp
dec
in
add
decl
pop
mov
adc
movsl
in
out
mov
mov
test
lret
mov
cli
xchg
lahf
test
jns
xchg
sub
inc
add
enter
jns
dec
je
insl
xchg
imul
fmul
xchg
sub
cli
adc
push
cmp
shlb
adcl
loopne
test
and
push
movsl
dec
inc
xchg
sub
imul
pop
fcomi
adc
sub
enter
lcall
adc
pushf
hlt
outsl
push
addr16
mov
nop
aas
rol
push
inc
mov
aam
push
lods
inc
xchg
fidivl
repnz
dec
ss
xor
repz
lret
es
or
xor
pop
sub
mov
pop
out
xchg
sbbl
leave
mov
adc
ljmp
je
adc
jno
out
gs
cmp
sub
popf
xchg
cmp
inc
jnp
test
sub
add
xor
mov
and
push
lods
inc
sahf
cltd
into
gs
sbb
jmp
je
lea
adc
lea
and
mov
push
jmp
dec
jo
mov
lret
movsl
sub
inc
push
xor
shll
shll
jae
push
movsl
inc
fimull
out
push
and
outsl
pop
jns
cmp
sbbb
stos
mov
mov
mov
ljmp
icebp
outsb
mov
pusha
xchg
scas
clc
sbb
mov
and
mov
jae
call
or
sub
and
push
pop
scas
inc
jne
adc
enter
add
xchg
sbb
push
jo
lock
ret
hlt
notl
sub
add
inc
dec
out
test
add
int
lock
fbstp
inc
sbb
xchg
xchg
sbb
mov
stc
call
or
cmp
lahf
imul
fnstcw
movsl
arpl
fucomp
mov
cmc
push
add
inc
cmp
jle
icebp
addb
mov
mov
jmp
dec
adc
mov
mov
or
ljmp
out
dec
movsb
xchg
repz
xor
cmp
dec
lods
mov
sub
add
mov
mov
jecxz
lret
push
or
lret
idivl
and
cmp
xor
hlt
lahf
sbb
dec
pop
sbb
leave
xchg
mov
notb
inc
outsb
xchg
fsubrl
and
int
dec
sbb
sub
jl
lcall
popa
adcl
and
pop
leave
add
adc
push
dec
imul
lods
scas
movb
xor
or
movl
mov
mull
cltd
in
or
xor
pop
jmp
mov
or
bound
jbe
dec
test
jmp
push
lahf
mov
push
cli
sub
sub
adc
js
xor
xor
inc
push
ljmp
jbe
cmp
cmpb
sub
fbstp
mov
xchg
lds
icebp
mov
leave
or
adc
imul
dec
mov
mov
aad
jns
inc
mov
xor
test
sub
mov
int
lds
repnz
shll
mov
add
enter
cmp
and
inc
fstl
jbe
lret
jp
js
or
sbb
repz
mov
in
lds
lock
mov
inc
fldl
daa
mov
mov
int3
pop
incb
add
imul
xchg
cli
cmpsb
cmp
rep
cmp
sbb
aad
and
mov
mov
sti
ds
cmp
shlb
sti
aad
mov
arpl
pop
cmpsb
cmp
mov
pushf
xor
mov
cmp
xor
xor
cmpsb
mov
jnp
pop
pushf
xor
sbbl
movsl
cmp
inc
and
ja
cltd
xor
ret
pop
shlb
cmpsb
cmp
sub
lcall
movsb
cmp
xchg
xchg
sub
call
mov
jnp
cmp
mov
and
pop
push
xchg
sub
and
cmpsb
cmp
cmpsb
cltd
mov
or
mov
add
and
pop
loopne
and
js
and
ret
repz
and
sbb
cmp
popa
and
fistpll
cmpsb
cmp
cmp
add
rcll
xchg
stc
test
inc
fnstenv
mov
mov
andl
sbb
fsub
jge
repz
and
ret
pop
orb
add
and
sub
lds
pop
negb
fldl
int
add
mov
in
mov
sbb
mov
loop
mov
ret
loopne
sbb
loope
xor
cmp
mov
addb
lock
stc
adc
add
mov
andl
lret
fcoml
or
jne
cmp
jns
subb
mov
popf
xor
loopne
mov
fidivrl
repnz
das
mov
mov
mov
add
mov
int3
loop
lcall
inc
dec
pop
xchg
add
mov
xor
pop
in
aaa
fwait
xor
stos
xlat
outsb
sbb
add
sub
mov
insl
add
inc
fsubl
dec
cmp
jns
cmp
pop
lods
stos
test
mulb
mov
xchg
inc
lds
mov
stc
int
rclb
add
pop
repz
mov
fdivrl
aam
jns
sbb
pop
mov
test
iret
mov
mov
xchg
les
mov
cli
push
sbb
pushf
test
shll
test
fisttpll
mov
js
mov
xchg
mov
ror
les
and
jmp
sbb
pusha
mov
es
pop
mov
pop
int3
arpl
es
bound
mov
cwtl
leave
pusha
or
dec
test
cmp
out
sub
pop
call
js
popa
jg
mov
int3
sbb
ds
les
lret
gs
mov
mov
cwtl
and
js
pop
cmp
cmpsb
xchg
mov
test
fistpll
loope
lods
idivl
sbb
fsubrs
cmp
mov
lahf
mov
or
test
mov
cmp
pop
and
iret
data16
aad
lret
incl
or
jns
sub
xchg
pop
jns
or
cwtl
das
test
and
hlt
pushf
mov
nop
pusha
push
dec
data16
inc
jp
add
hlt
lds
mov
call
jmp
ret
dec
fistps
mov
jbe
shlb
ret
adc
in
test
push
mov
jno
bound
xor
push
add
xor
lea
or
movsl
xlat
cmp
scas
ljmp
mov
and
push
lea
inc
xchg
movsl
pop
out
aad
insl
add
std
out
test
sbb
mov
jnp
mov
and
cltd
and
mov
inc
jge
sbb
sbb
test
lret
push
lods
mov
mov
cs
lret
cmpsb
scas
in
pop
pop
scas
xchg
sub
inc
pop
divb
push
movsl
xchg
pushf
clc
iret
rclb
sbb
and
fs
and
mov
mov
jmp
mov
bound
mov
mov
fcomps
mov
inc
adc
dec
push
xor
out
aam
lahf
jbe
stc
lods
inc
ljmp
sbb
jb
andb
mov
rcrl
sub
dec
adc
dec
xchg
xchg
jle
mov
mov
push
movsl
dec
sub
test
add
lock
ljmp
lea
xchg
loope
movsl
rol
sub
repnz
jg
sbb
dec
push
push
cs
call
cmp
xor
push
jmp
push
test
pop
mov
jo
pop
jnp
push
push
jg
inc
xchg
gs
push
imul
pushf
inc
mov
inc
call
add
xor
out
test
cmpsb
ret
ficoml
and
sbbl
jns
push
jmp
ret
pop
daa
in
inc
fstps
xor
add
ret
or
outsb
jl
and
aam
xor
pop
fs
xchg
sub
mov
shl
psrld
add
test
movsl
cmp
mov
mov
mov
in
or
and
fsubrs
andb
sbb
pop
insl
mov
gs
push
mov
lods
daa
addb
mov
aad
cltd
fsubl
cmpsb
int
inc
fsts
lret
bound
ret
mov
sbbb
mov
and
test
movsl
ffreep
pop
ror
gs
std
adc
adcl
push
mov
movsb
cmp
mov
mov
jl
flds
pop
sbbb
or
push
jg
and
sar
mov
daa
pushl
lds
inc
xchg
leave
pusha
enter
aad
outsb
add
mov
scas
inc
mov
mov
dec
loopne
xor
inc
cmpsl
cmp
test
inc
ficompl
test
inc
dec
loopne
lds
nop
inc
flds
cmp
test
add
mov
movsl
scas
inc
push
sub
inc
pop
push
inc
flds
dec
loopne
jne
inc
data16
in
testb
fwait
dec
fucompp
orb
test
sub
inc
xlat
in
jg
mov
sbb
inc
fiaddl
popa
jl
xchg
and
clc
push
fmuls
push
test
lret
cld
in
clc
sbb
hlt
mov
jo
outsl
mov
ret
cmc
mov
movsb
xor
push
adc
sub
lret
insb
add
mov
lea
rorb
jae
cmp
test
and
inc
leave
pop
jbe
stos
inc
in
in
into
add
pusha
cmp
stc
xchg
and
xchg
or
sti
daa
mov
and
fadds
test
fstpl
sbbl
push
lahf
xor
mov
mov
clc
xlat
outsb
sub
adc
jle
lds
adc
mov
cmove
jne
mov
bound
cmpsb
cmp
sbb
les
pop
test
cli
push
jg
fwait
scas
inc
in
xor
mov
xchg
test
inc
faddl
sbb
sahf
dec
cmp
aas
mov
pop
repz
add
mov
inc
pop
les
andl
mov
fwait
es
int3
arpl
push
mov
xchg
aam
test
sub
test
je
push
jmp
lahf
and
inc
cld
add
stc
dec
movsb
cmp
test
out
xchg
inc
fcmovb
out
mov
loope
in
sbb
fbstp
sbbl
adc
and
mov
sbb
or
and
pop
hlt
mov
jae
mov
mov
inc
ficompl
mov
movsb
je
jnp
cmpsl
fnstenv
rolb
mov
and
pop
fwait
push
mov
jbe
pop
test
xor
stos
ret
repz
lret
sbb
dec
or
arpl
lock
mov
pop
lock
sbb
jnp
arpl
push
sbbl
xchg
pop
repz
and
icebp
push
pop
hlt
inc
sbb
pop
dec
jbe
lock
lcall
out
dec
fs
aas
pop
fnstenv
ds
lock
jle
test
sbb
xchg
or
sti
push
pop
out
xchg
pop
cmc
subl
stc
and
pop
hlt
inc
push
and
hlt
scas
les
negl
out
fs
cmp
dec
loope
push
add
mov
dec
jecxz
incb
das
stos
pop
hlt
sbb
jnp
sub
fwait
xchg
mov
ret
stos
pop
cmc
sbb
pop
mov
pop
push
jmp
cmp
lock
orl
call
out
fucomi
jg
out
pop
icebp
fbld
jg
pop
push
push
in
nop
jb
scas
mov
lret
scas
inc
std
lret
mov
into
push
out
shlb
repnz
fwait
out
push
adc
cmp
mov
inc
fiaddl
mov
jnp
xorb
add
mov
stc
mov
dec
loope
sti
arpl
sub
xor
cld
inc
add
ja
push
lods
sbbb
add
sub
insb
dec
inc
jecxz
jne
cmpsl
ds
test
iret
pushf
cli
xchg
psubsb
mov
xor
les
inc
cmp
mov
mov
add
pop
dec
push
in
cmp
dec
inc
fnstsw
dec
adc
jp
dec
jg
inc
xor
bound
push
pop
les
cmp
cli
push
xchg
int3
jnp
fwait
lods
push
in
lock
mov
je
inc
faddl
adc
clc
imul
popf
or
jge
test
shrb
mov
inc
adc
pop
pushf
mov
daa
and
arpl
call
add
and
mov
pop
pop
cmpsb
inc
cltd
les
repz
and
push
mov
and
push
shrl
mov
aam
or
and
mov
fmuls
ret
mov
subl
pop
mulb
sbb
nop
and
inc
shrl
mov
aam
cmp
es
fcoms
jne
ljmp
fsubrp
mov
fdivrp
push
mov
push
testl
jge
mov
push
testl
outsl
ss
outsl
testb
arpl
push
jle
dec
mov
int3
adcb
dec
nop
daa
aas
and
out
mov
cld
xchg
iret
mov
and
out
inc
sub
fbstp
inc
js
xchg
xchg
sub
lods
inc
fucomp
pandn
add
xchg
sub
fidivs
fdivl
sub
fadds
das
mov
out
sahf
movsl
into
gs
mov
outsb
add
xor
lds
cmpsl
ds
stc
xlat
aas
inc
fldcw
scas
out
and
cmp
sbbl
ret
xlat
pop
scas
jmp
jns
pop
scas
inc
js
test
jnp
ljmp
call
pop
or
stc
push
push
and
lods
test
cmp
mulb
and
push
sbb
mov
mov
xchg
push
and
mov
push
jns
pop
stos
addr16
pop
ret
stc
hlt
push
mov
dec
outsb
mov
popa
addr16
xchg
gs
add
jmp
mov
aam
cmp
push
test
mov
shll
xor
loope
loope
inc
or
insl
cmp
addr16
jno
test
push
lods
fbstp
stos
inc
test
mov
sub
gs
lret
inc
push
or
nop
fwait
adc
int3
popa
clc
mov
scas
loope
and
xchg
dec
gs
stc
test
push
in
mov
fdiv
mov
gs
lock
sub
jne
xor
mov
gs
cmc
insl
or
and
push
add
jb
push
lods
scas
test
outsb
test
dec
in
adc
out
inc
xchg
data16
insl
lock
mov
push
jmp
add
mov
mov
movsb
loop
pop
cmpsb
popa
clc
xlat
push
dec
out
incl
popf
xor
cmp
inc
fst
repz
jmp
js
call
xchg
lea
inc
fcmovb
inc
sbb
orl
xchg
xchg
js
and
pop
ss
pop
push
andb
ljmp
or
jge
jge
mov
leave
pop
jb
fisubs
loopne
add
insl
add
sub
in
jae
mov
mov
pop
add
or
pop
shr
mov
push
sahf
mov
lret
std
jne
ret
inc
fildl
xchg
sub
inc
push
sub
daa
mov
mov
sbb
ret
push
add
out
mov
add
cmp
inc
fistpl
stos
fwait
xor
pusha
imul
sub
test
ja
les
lahf
and
stos
out
pop
sbb
arpl
arpl
arpl
add
mov
fsubrs
push
and
loop
xchg
sbbl
mov
dec
fistpll
fmull
and
mov
push
daa
or
mov
push
call
or
mov
mov
xorb
movsl
ret
cli
xchg
mov
dec
mov
sub
lods
subl
mov
loopne
mov
in
insb
add
adc
mov
icebp
mov
mov
jp
sub
hlt
mov
mov
mov
xorb
pop
cmc
dec
sub
xchg
in
hlt
mov
mov
call
mov
rcrb
mov
mov
jp
scas
pop
hlt
loopne
sbb
cmp
in
mov
lret
mov
into
fbstp
jmp
xor
or
mov
fnstenv
cmpsl
pop
out
fdivrs
out
xchg
dec
mov
jg
or
movb
pushf
sbb
adc
jne
mov
jo
addb
or
test
or
and
adc
cmpb
mov
fnsave
lds
adc
push
mov
repz
rclb
test
fsubs
xor
pop
repnz
jecxz
jne
or
lods
movsb
push
jmp
adc
sti
jae
insl
xor
in
jbe
shlb
fildl
mov
inc
adc
shll
loop
fistl
test
ret
mov
mov
mov
mov
test
sub
push
iret
out
bound
sbb
cwtl
or
adc
inc
aam
mov
sbb
dec
fcomi
add
and
popf
stos
add
xor
inc
aad
cmp
popa
pop
push
sub
rclb
mov
sub
movsb
and
shlb
mov
ret
xor
add
loop
xchg
cmpsl
sbb
jae
pop
jmp
inc
and
inc
sbb
push
jnp
mov
cmp
mov
xchg
test
xor
xchg
mov
repz
test
ljmp
mov
jg
ret
mov
pop
repz
jecxz
and
andb
cli
orb
sbb
aas
aaa
adc
inc
aas
cmp
test
mov
push
or
ret
outsb
xchg
nop
out
js
push
js
xor
ret
xchg
mov
or
rorl
addl
or
lods
int3
adc
out
aam
fildl
lret
adc
mov
test
test
inc
std
subb
into
fwait
arpl
jne
lock
mov
push
cld
adc
out
sahf
pop
jae
mov
cmp
in
movsb
fwait
cmp
jbe
mov
aas
rcrb
sub
mov
or
or
and
fld
and
cmpsb
mov
inc
jno
and
shr
rorl
push
hlt
fdivs
rcrb
cli
in
lahf
outsl
inc
mov
shlb
xor
test
xlat
jae
bound
mov
pop
inc
cli
lods
ret
iret
xchg
push
or
mov
jb
out
xlat
outsb
and
cmc
mov
scas
sub
xor
enter
out
cmp
imul
mov
add
xor
push
pop
hlt
mov
pop
repnz
test
jns
mov
xchg
sub
pop
std
mov
das
sub
imul
iret
icebp
lea
add
mov
push
mov
aad
leave
push
lock
and
push
out
inc
pop
icebp
jae
outsb
add
popf
je
sbb
mov
push
inc
sbb
jo
insl
ret
push
adc
sub
das
mov
dec
jecxz
dec
in
add
push
mov
sbb
xchg
pop
mov
or
inc
fdiv
sub
rcrb
inc
jge
fisubrs
jb
out
mov
bound
cs
dec
call
or
insb
cmp
sbb
cmc
mov
daa
cmp
xchg
push
in
cmpl
mov
fwait
or
push
push
in
xchg
js
cmpsl
add
fxch
call
sub
push
mov
dec
mov
rcrl
rcrb
icebp
jnp
and
cltd
xor
xchg
sub
leave
mov
insl
sbb
push
push
mov
icebp
test
xchg
sahf
sbb
enter
lahf
cmp
rorb
sub
adc
repnz
and
bound
addr16
add
dec
mov
test
dec
aam
or
mov
inc
cmp
pop
pusha
jne
cmp
lods
mov
out
ret
hlt
adc
inc
adc
in
test
mov
mov
jmp
sub
cmp
jecxz
pop
dec
fisttps
lods
data16
fnsave
test
xor
mov
pop
mov
jp
neg
jne
incl
cwtl
xor
xchg
jge
pop
mov
sahf
sbb
aam
cmp
and
pop
repnz
inc
push
in
je
jns
jp
je
fwait
xchg
cs
xchg
sub
out
mov
and
andb
loope
movl
adc
imul
pop
fnstsw
sub
test
int3
inc
jb
loop
sti
cmp
jnp
lods
push
xchg
mov
out
mov
mov
xor
push
imul
inc
push
loope
shlb
xchg
iret
inc
xor
inc
mov
push
leave
shll
mov
or
divl
gs
pop
mov
jae
adc
jae
and
lds
jle
cmpsl
xchg
and
fcomp
push
pusha
xchg
loope
lret
loop
sub
cli
test
stc
jmp
mov
mov
popa
add
nop
mov
mov
mov
in
in
ds
xor
je
cmp
xchg
nop
cmpsb
js
aam
mov
jmp
or
mov
jg
xchg
shrb
test
lock
cli
es
xchg
dec
inc
fstpt
dec
jecxz
lcall
inc
ljmp
popf
inc
and
inc
out
cwtl
test
inc
jmp
in
adcl
or
jae
pop
icebp
cmp
adc
add
xchg
ja
data16
mov
and
mov
mov
jb
pop
mov
gs
push
std
xchg
paddq
jo
sbb
fwait
mov
loop
call
sub
lea
and
and
dec
pop
mov
repnz
sbb
cmpsl
vxorps
inc
gs
jp
adc
jg
pop
mov
cmp
mov
test
ret
jecxz
lock
js
sub
mov
mov
jnp
insb
repnz
inc
out
jp
add
and
or
es
rep
pop
sarl
xchg
push
fildll
mov
stos
hlt
adc
ljmp
ja
cmpsl
add
scas
std
add
jo
insl
sub
pop
fldl
xor
push
fstp
fstps
int
gs
pop
dec
movsl
pushl
sub
inc
nop
push
add
add
adc
jno
sar
push
repz
or
aam
or
pop
lcall
adc
cmp
xchg
ret
dec
cld
int
pushf
lock
int3
push
and
daa
je
cmp
imull
outsb
cmp
mov
in
sbb
mov
or
faddl
inc
shl
dec
lcall
popa
and
sbb
adc
outsl
stos
cli
add
arpl
shll
cmp
sub
insb
inc
inc
jno
popf
mov
inc
int3
je
pop
fsubrs
rcl
ret
jmp
fadds
es
push
scas
adc
mov
in
pop
adc
xchg
arpl
scas
into
into
xchg
mov
repz
and
out
mov
clc
xor
xlat
in
mov
out
in
mov
or
pop
das
cmc
sbb
pop
cmp
or
xchg
dec
adc
lods
popf
lods
insb
lods
xchg
pop
adc
adc
idivb
mov
loope
dec
adc
mov
sub
test
or
pop
loopne
leave
stos
dec
cwtl
xchg
stc
into
or
jp
xchg
imull
mov
xchg
inc
xor
sub
cs
mov
js
or
ret
add
mov
outsb
ret
addr16
out
repz
in
fidivrs
pop
data16
fsubl
mov
inc
mov
cld
pop
sub
mov
aad
cwtl
ss
xlat
fsubrp
enter
shll
add
loope
mov
push
inc
adc
and
cmp
push
int3
or
mov
mov
xchg
es
xor
loopne
dec
pop
out
mov
lock
cmp
pop
jle
enter
xchg
es
jnp
sub
test
test
mov
rcr
xor
add
inc
bound
aas
pop
arpl
lock
je
mov
decl
push
xor
sarb
jbe
or
pop
testl
out
pusha
and
movsb
push
sbb
or
mov
or
leave
mov
mov
xchg
and
jb
ljmp
xchg
push
adc
enter
fsts
lret
pop
sbb
jecxz
addr16
dec
or
jl
fs
cmpsl
xor
push
add
aad
jmp
jbe
ljmp
clc
leave
data16
loope
jmp
cmc
mov
xchg
push
dec
or
mov
rcrl
and
mov
test
ret
mov
mov
imul
outsb
out
cmc
jl
jb
shl
push
pop
das
and
scas
jp
jae
mov
daa
comiss
insb
ljmp
dec
or
rolb
mov
stos
lcall
aaa
repnz
arpl
mov
mov
ret
data16
xchg
inc
jo
mov
lds
mov
loop
loope
insl
in
mov
insl
or
jnp
rcrb
mov
fcmovb
push
arpl
push
cmp
mov
mov
sub
imul
pand
mov
adc
rorb
hlt
sub
sahf
je
dec
ret
mov
dec
ja
xchg
xchg
cs
lret
sbb
int
lods
jl
test
jp
add
outsb
frstor
and
push
add
jnp
xor
jecxz
icebp
inc
xchg
cmp
adc
ret
and
adc
and
push
inc
and
or
jp
and
fstps
xchg
sbb
push
push
mov
push
cmp
dec
sub
loop
sarb
aam
and
cs
les
jle
push
jp
jo
jmp
outsb
js
mov
stos
dec
and
push
addr16
xorl
lret
xchg
mov
ljmp
std
pop
add
addr16
arpl
mov
jg
movsl
andl
ss
pushf
mov
ffree
fs
fwait
pop
fisttpl
sbb
bound
inc
gs
ret
xor
adc
push
add
aam
and
pop
das
mov
cmovge
push
xchg
ret
mov
jae
aas
in
es
mov
pop
cmc
dec
inc
mov
cmp
icebp
or
aam
inc
sbb
aas
shrl
dec
pusha
les
dec
test
jl
or
push
xor
js
jl
xor
inc
xor
repz
test
test
repz
sub
aaa
into
and
pusha
or
fidivl
fcoms
outsb
bnd
inc
int
or
roll
popf
rcl
lock
insb
adc
bound
popf
scas
jmp
push
lcall
jmp
les
jb
das
sub
add
je
pop
imul
inc
outsb
cmpsl
and
insb
sbb
adc
lock
xor
std
xchg
mov
push
sahf
jl
pop
repz
xorl
cmp
test
jo
xchg
popf
stc
nop
movd
pop
popa
leave
pusha
push
mov
mov
cli
fcoms
sbb
mov
aaa
adcb
rcrl
daa
mov
xchg
js
xchg
lret
lock
shrl
xor
aas
mov
out
test
mov
mov
and
sub
dec
inc
jo
jbe
pop
repnz
xchg
mov
icebp
ljmp
inc
cmp
mov
cwtl
nop
call
mov
add
mov
out
xor
mov
cmp
push
in
sbb
call
lea
lahf
mov
adc
xchg
add
sahf
sbb
das
popf
adc
xchg
or
jp
cmovg
aad
dec
mov
in
sbb
cmpsb
mov
loopne,pt
xchg
adc
and
pop
mov
inc
pop
cmc
jb
cmp
adc
dec
pop
bnd
lcall
cmp
and
mov
je
hlt
mov
xchg
shrl
xor
test
sbb
insl
or
insb
add
dec
loop
jg
and
shrb
push
mov
fisubl
jnp
sub
add
mov
and
add
sbb
movsl
adc
or
mov
push
pop
ja
sti
rol
xor
jmp
aam
das
call
push
pop
lock
adc
mov
jns
cmpl
pop
add
fbld
jae
xchg
add
sahf
or
mov
stc
popf
mov
jge
lods
mov
bound
insl
fldcw
push
inc
cs
inc
push
aas
test
mov
push
cwtl
enter
and
mov
xchg
mov
insl
or
das
hlt
mov
aaa
into
pop
adcb
mov
push
in
stos
aam
movl
and
add
lret
mov
std
into
gs
push
test
test
pop
mov
in
idivb
add
dec
adc
inc
imul
std
xchg
mov
test
out
pop
idivb
pop
mov
adc
pop
rcrl
fwait
xor
lods
fbstp
test
dec
cmc
pushf
dec
xchg
sub
rcrb
in
jge
lock
pop
insl
add
iret
ja
negb
mov
insb
mov
inc
fistpl
cmpsl
mov
out
cs
pop
xchg
lcall
and
int
or
lahf
ss
dec
pop
repz
cmp
fistpl
ret
iret
mov
outsb
popa
pop
sub
or
and
push
incb
xchg
sbb
sbbl
cmp
mov
xchg
jno
mov
sub
mov
loopne
sub
ss
lods
in
sti
xchg
sub
or
enter
insl
or
xchg
sub
mov
shrl
push
adc
inc
sub
push
push
std
fbstp
jbe
movsl
sarb
and
and
lea
loope
and
stos
lods
inc
or
adcl
pop
pop
push
in
push
sti
adc
mov
push
mov
mov
pop
fnstenv
jle
xchg
movsl
mov
inc
and
and
and
mov
dec
add
mov
push
or
adc
jle
adc
jecxz
fistl
mov
stos
and
test
jns
xchg
sub
shrb
dec
or
cmp
pop
icebp
dec
out
ficoml
outsb
push
jmp
icebp
add
repnz
ja
ret
cmp
mov
dec
out
je
mov
fsubrs
lock
daa
adc
inc
mov
sbb
icebp
mov
jecxz
jo
mov
xor
sbb
sub
fwait
repz
sub
in
cmp
adc
packsswb
xchg
push
test
jge
push
mov
filds
daa
push
popf
gs
mov
and
push
inc
inc
std
xchg
xor
pop
scas
and
outsl
dec
lds
cwtl
or
ret
pop
mov
mov
jl
insl
je
nop
xchg
mov
mov
andl
inc
fsubrs
mov
decl
repz
loope
shrl
dec
out
lds
iret
cld
imul
xchg
cmp
int3
jge
mov
gs
mov
dec
outsb
add
xchg
and
iret
addr16
loop
adc
push
aaa
rorb
cmc
pop
jmp
dec
sahf
lahf
ss
push
lods
inc
xchg
jle
xorl
scas
inc
add
add
adc
data16
mov
push
or
dec
sub
pop
pusha
icebp
jl
and
int
stc
cli
adc
mov
pop
sbb
movsl
test
es
pop
int3
je
mov
loopne
add
enter
hlt
test
test
in
pop
call
out
lcall
jae
jns
lahf
sbb
dec
rol
mov
pop
scas
adc
xchg
mov
addr16
fadds
data16
ljmp
pop
jge
sahf
inc
xlat
pmaddwd
mov
les
pusha
mov
push
jae
xchg
jmp
xor
popa
out
cld
call
or
or
adc
jns
cmpsb
gs
repz
fsts
lret
les
in
lock
mov
ret
sub
lock
enter
imul
xor
je
aaa
push
out
test
adcb
leave
pop
mov
fnstsw
jmp
into
gs
sbbb
add
lret
mov
pop
pop
nop
sub
jnp
mov
sti
xchg
cmp
or
inc
rorl
mov
push
stos
inc
fcmovbe
jne
jb
jns
sbb
mov
xchg
repz
sub
cmp
mov
dec
and
testl
ficoml
daa
inc
ja
mov
push
shrl
jnp
out
insb
adc
in
test
pop
and
xchg
rolb
lahf
and
xchg
inc
mov
cmp
xchg
dec
add
push
std
pop
fdivr
xchg
adc
pop
outsl
mov
testb
and
mov
data16
sub
or
push
jmp
out
jne
sub
scas
dec
jnp
cli
insl
imul
ret
in
insl
xchg
stos
adc
addl
mov
xor
cmp
test
fnstenv
lret
mov
fstpl
into
xchg
shrl
out
mov
or
in
je
or
push
shlb
xchg
cltd
xchg
outsb
add
sub
jo
mov
dec
sbbb
pop
mov
push
sub
sub
jb
dec
fs
cmpsb
cmp
mull
movsl
cmp
js
xor
sbb
mov
mov
mov
cmp
and
rcrb
into
gs
icebp
shrl
clc
push
popf
jmp
or
test
lods
fbstp
popf
pop
repz
lea
mov
ret
mov
std
xchg
jae
loopne
movl
sbb
lret
sti
scas
inc
in
js
int
push
mov
jle
jne
mov
mov
mov
sbb
imul
or
sbb
sbb
xchg
lret
scas
and
rcrl
lds
ljmp
xchg
jbe
add
es
pusha
cwtl
push
in
sub
in
dec
mov
or
cmp
ss
jae
and
mov
cs
push
in
stos
sbb
mov
nop
stos
imul
mov
push
sub
mov
push
mov
mov
push
call
jbe
sub
dec
pop
call
and
lahf
ss
cs
out
lahf
nop
add
xchg
mov
jnp
lahf
shrl
mov
xlat
or
mov
testb
xchg
jl
add
lock
and
mov
mov
mov
ret
mov
xor
ss
jae
shrl
call
imul
sti
jmp
mov
addb
cmp
js
adc
adc
cmpsl
fcomi
xchg
leave
push
ljmp
pusha
test
in
pushf
xor
dec
lret
add
dec
xchg
push
jmp
add
cmp
adc
sub
mov
jno
pop
lods
inc
push
dec
mov
ret
arpl
shrl
test
shl
insl
add
pop
mov
mov
jecxz
sbb
movsl
cmp
cmp
adc
ret
cmp
aam
adcb
cmc
lcall
or
pop
aad
adc
sub
shrl
lods
ja
fbld
out
xchg
xchg
pop
cmpsb
pop
dec
mov
lret
loop
fisubl
fisubs
fwait
jno
xor
arpl
clc
jge
jp
and
cwtl
das
ds
fcomps
xchg
mov
out
jno
rep
setl
sahf
mov
mov
loope
push
jmp
xchg
mov
aad
sbb
push
mov
and
and
outsb
mov
fidivl
test
mov
repz
shrl
adc
outsl
lods
mov
shll
fsubrs
hlt
mov
and
in
aaa
ret
jno
jecxz
mov
aaa
pusha
testl
jns
es
cmp
out
mov
pop
cmp
inc
pop
mov
adc
rcrl
inc
cltd
js
mov
repz
aad
sbbl
daa
ret
xchg
sub
dec
adc
pop
dec
lcall
fwait
in
arpl
sbb
lods
xor
sbb
stos
mov
dec
outsl
lods
adc
ret
mov
xchg
dec
lods
inc
cmp
pop
arpl
cltd
xor
dec
push
out
outsb
test
insb
test
mov
jge
loopne
sbb
test
add
pushf
jge
das
jmp
jmp
xchg
shl
mov
mov
lret
push
cmp
pop
fnstenv
mov
cltd
xor
inc
das
pop
dec
int
pusha
jl
enter
and
aam
sub
xchg
add
dec
ss
mov
push
int
mov
pop
mov
inc
call
pop
xchg
fmull
jmp
jns
jne
cmp
dec
mov
jge
std
filds
sub
divl
fcom
in
test
add
mov
dec
jne
lods
pusha
mov
pusha
sub
leave
pusha
pop
hlt
jp
pop
cmp
dec
cld
test
dec
inc
sti
jl
mov
mov
fucomi
shrb
cmp
lds
sahf
pop
std
mov
sub
shrl
mov
pop
jg
mov
adc
push
jl
repnz
fsts
mov
jno
inc
movsl
insl
loopne
orb
mov
lahf
es
and
test
jmp
adc
mov
out
push
stc
add
pop
sti
cmp
popf
imul
test
adc
mov
inc
adc
std
daa
jecxz
mov
push
scas
shlb
aas
in
jno
out
inc
je
les
inc
push
mov
xor
cmp
add
inc
test
mov
pop
xchg
cmc
lcall
ret
jae
jecxz
mov
ja
jb
repnz
cwtl
add
mov
cmp
mov
jo
pop
repz
xchg
test
mov
push
cli
xchg
data16
mov
mov
std
jecxz
lret
inc
pop
leave
aas
loopne
insb
adc
int
ds
daa
mov
das
jl
and
jp
movsb
cmp
and
aam
loope
cmp
test
sbb
xchg
mov
insb
mov
mov
hlt
mov
fadd
add
sar
jp
mov
fstp
jae
clc
sub
jl
sarb
lds
iret
xchg
xor
fnsave
clc
xor
test
fstl
or
rclb
mov
push
inc
mov
ja
jge
push
inc
imul
dec
fs
xchg
push
ret
pop
sub
push
push
inc
sbbl
test
lahf
ss
mov
ljmp
imul
xchg
sbb
pop
push
cmp
mov
mov
add
sahf
clc
xor
push
rcr
repnz
aas
jae
loopne
inc
xchg
pop
hlt
sub
js
dec
pop
out
jl
call
into
pop
insl
add
out
sbb
pop
xor
lods
inc
and
punpckldq
jg
lock
jmp
test
in
push
xchg
fisttpll
int
and
lret
jbe
fdiv
mov
stos
xor
mov
aam
leave
push
or
orb
mov
mov
sbb
lret
daa
inc
jmp
das
or
cs
xor
lahf
pop
int
pop
rclb
sub
jbe
out
setne
lods
add
inc
shrl
ret
dec
mov
sub
push
lock
pop
lock
lret
mov
out
xchg
lods
sbb
pusha
sarl
jmp
xchg
sub
icebp
cmp
loope
cmp
xchg
dec
shrb
jle
push
sbb
mov
js
int3
popa
xsha256
cmpsb
push
sub
lret
jns
das
gs
inc
imul
orb
push
cmp
inc
fwait
stos
mov
inc
out
sbb
inc
xor
mov
bound
dec
push
les
mov
push
jmp
popa
cwtl
das
push
rclb
ret
movsb
mov
jo
ja
test
mov
sbb
mov
inc
fidivs
rcrl
shr
xchg
testl
dec
in
scas
push
jmp
push
cltd
sub
mov
mull
push
cld
nop
jp
pop
or
fistpl
les
out
xchg
sbb
dec
lock
mov
add
jl
xor
dec
test
cwtl
das
dec
cmovge
jle
fdivl
mov
outsb
add
or
scas
bound
test
cmp
jo
lods
sahf
xor
xorps
mov
lahf
out
adc
in
mov
lret
jp
jp
lds
fcmovnu
push
mov
in
mov
mov
fs
lds
xor
fadd
ds
std
inc
fcmovnb
testl
rcl
vpsraw
adc
dec
jecxz
xor
sub
ss
rorl
sbb
movsb
and
fstl
pop
lock
je
mov
mov
divl
out
sbb
dec
push
insl
add
imul
xor
imul
cmp
mov
icebp
mov
sbbb
sub
add
or
je,pn
subl
xor
stos
sbb
inc
fdivr
mov
and
sbb
fnsave
xor
aam
mov
shll
fadds
test
inc
fnstcw
adc
popa
movsb
pop
cmp
push
mov
into
sbb
lret
cmp
enter
daa
nop
daa
lret
fcoms
scas
inc
mov
inc
fimull
push
shrl
aam
hlt
in
test
mov
sbb
in
sbb
sub
mov
mov
ret
or
xchg
sub
mov
jnp
lods
adc
xor
popa
clc
stos
push
pop
sahf
cld
pusha
rcrl
jne
popf
pop
mov
xchg
add
sbb
jae
gs
jp
xchg
cwtl
and
jb
insl
leave
pusha
or
popf
xor
push
cmp
insl
mov
imul
jecxz
outsl
adc
ss
daa
mov
shrl
stos
adc
jp
lret
cld
mov
lcall
mov
lock
icebp
push
and
lds
mov
jbe
data16
cmpsl
xchg
rclb
imul
ljmp
mov
ficoml
pop
rorl
pop
loop
xchg
mov
outsb
add
leave
outsb
lods
inc
dec
ljmp
aas
lock
ret
pusha
stos
inc
cmp
ljmp
fisubrl
mov
imul
mov
mov
call
sbb
pop
xchg
test
negl
repnz
dec
iret
data16
ljmp
jno
xchg
pop
or
jg
in
add
outsb
js
leave
pusha
pop
add
shlb
mov
incl
cmp
cltd
test
lret
icebp
popa
jl
sahf
adc
push
icebp
inc
dec
in
movsb
mov
scas
pop
shrl
call
cmp
pop
sahf
add
dec
pop
pop
jge
mov
lcall
jo
shr
xchg
lret
ret
lock
in
lods
pop
and
mov
cmpsb
mov
mov
fisubl
adc
dec
out
xor
xor
outsb
add
push
test
and
aaa
cltd
xor
es
xchg
xchg
xlat
or
inc
and
add
jecxz
mov
xchg
sub
and
rcl
xorb
xrelease
sti
bound
push
imul
mov
sti
xchg
jg
cmpsl
ds
loop
loope
scas
inc
sub
push
bound
pop
add
mov
adc
fidivl
xor
cmp
testb
dec
cmp
cltd
add
sbb
mov
sar
jl
icebp
nop
inc
fldl
lock
outsb
sarl
lcall
scas
jmp
dec
mov
imul
aam
pop
fcoms
mov
enter
xchg
jmp
fnstenv
cmp
pop
outsb
push
add
rcrl
mov
jmp
shrb
cmp
stos
pop
loopne
dec
jno
push
mov
int3
arpl
mov
cld
xchg
mov
pop
hlt
movsb
mov
inc
and
push
fcoml
mov
jmp
aam
loop
stos
insl
inc
frstor
or
arpl
outsb
add
insb
pusha
aam
xchg
lea
or
ret
fsubrs
mov
cmpsl
cmp
icebp
mov
adc
inc
out
mov
sub
sbb
adc
jecxz
jno
jnp
mov
xor
push
dec
in
push
mov
push
shrl
out
pop
hlt
in
out
inc
fldt
xchg
jb
inc
adc
mov
push
test
popf
arpl
ljmp
xlat
ret
xor
fildll
jle
out
dec
pop
mov
in
fnstcw
jp
jo
mov
loopne
out
xchg
ficompl
call
insb
add
hlt
push
sahf
fadd
frstor
mov
arpl
sbb
testl
lahf
mov
and
addb
arpl
pop
ss
jne
sbbb
js
arpl
jmp
xor
fdivrl
inc
dec
fidivrl
rorb
inc
mov
lock
insb
jbe
mov
pop
jno
inc
dec
testb
push
jne
bound
adc
jle
out
push
jbe
pop
cmc
jno
out
xor
scas
fldl
pop
or
push
negl
test
std
stc
and
mov
fdivrs
in
lods
ljmp
xchg
dec
and
xchg
xchg
gs
mov
sub
jbe
jnp
or
data16
aaa
outsb
adc
cmp
cmp
movsb
dec
insb
loop,pn
dec
push
out
pop
imul
ja
out
pop
jge
jle
jns
cli
ss
jle
arpl
fldenv
jne
inc
psrld
stos
jo
sbb
dec
dec
mov
push
pop
dec
popl
sub
dec
mov
popf
mov
sub
dec
in
dec
mov
inc
cmpsl
xlat
sub
cmp
xchg
roll
ret
rclb
mov
push
in
rcl
push
mov
inc
fsub
fcom
imul
or
nop
loopne
adc
add
sti
xchg
adc
ss
pop
mov
mov
mov
faddp
dec
in
jg
aam
movsb
mov
cli
ja
in
inc
test
and
imul
divl
jbe
mov
sti
shrb
xor
and
add
push
js
mov
lock
pop
xchg
rclb
lds
ret
call
les
xlat
addr16
or
pusha
xchg
mov
pop
sub
leave
inc
out
inc
fmuls
stos
in
mov
jns
out
lret
inc
movsl
cmp
lret
fstl
aad
iret
into
ret
cmp
adc
jge
jmp
sbb
arpl
mov
lods
jle
in
scas
into
mov
dec
loopne
add
mov
xor
fistl
sub
lret
in
dec
jmp
clc
rorb
minps
sbb
in
call
and
push
xor
lock
rdtsc
in
arpl
cmpsb
ja
daa
scas
jge
cmp
mov
mov
xchg
dec
fildll
jnp
jne
adc
pop
pop
dec
mov
fs
pop
enter
jle
lea
sub
adcl
ja
mov
jl
or
cmp
dec
dec
mov
pop
mov
fidivs
sub
stos
inc
xchg
outsl
lea
push
stos
popa
push
cmpsb
mov
dec
js
cmp
jo
shlb
inc
out
xor
dec
sbb
and
psubsw
push
insb
movsl
cmp
outsb
and
push
movsb
cmp
sbb
mov
and
aad
mov
enter
test
sbb
adc
out
scas
inc
and
inc
nop
mov
jbe
ss
mov
popa
push
inc
xor
fdivrs
or
cmp
stc
nop
inc
xchg
in
mov
cmpsl
cmove
adc
mov
in
push
push
push
xchg
sti
addr16
and
jno
inc
cmp
push
jmp
out
test
pop
es
add
lahf
xor
int
fisubs
and
dec
shr
push
scas
sub
loopne
lret
xchg
sub
dec
sbb
jo
cmp
xor
std
and
sbb
push
test
out
push
or
leave
addr16
pop
xor
in
popa
mov
cli
adc
jae
lahf
ret
insl
test
mov
push
and
sbb
push
outsl
xchg
xchg
cmpsl
fisubs
sbb
jbe
xchg
cmpsl
cmp
jb,pt
fstl
or
mov
push
aad
pop
pop
js
sahf
bound
push
xlat
mov
rorl
mov
js
xchg
lret
xchg
cs
xchg
pusha
pop
mov
xchg
mov
addb
mov
shrb
ja
cmpsl
xor
xchg
mov
lock
pop
inc
fimull
jbe
pop
fsubl
mov
loope
or
insl
decl
xor
mov
mov
out
jle
cltd
xor
jbe
int
mov
add
leave
fwait
stos
out
dec
push
mov
test
pushf
fildl
push
arpl
xchg
push
dec
add
pop
mov
or
dec
sarb
jns
xor
jae
js
or
or
xchg
sbb
sbb
cmp
sub
lret
cmp
mov
mov
adcl
pop
adc
fs
inc
scas
dec
out
sti
xchg
cltd
add
mov
lcall
jp
jbe
push
sbb
add
dec
inc
xor
push
and
and
xchg
faddl
xlat
inc
gs
addb
adc
addb
rcrb
xchg
rcrb
sbb
ss
enter
aaa
mov
repz
stos
mov
dec
shll
cmpsl
sbb
movsb
pop
stos
lret
bound
movsl
jl
xor
mov
enter
sbb
pop
call
cmpsb
fiadds
cwtl
cvtpi2ps
addr16
rol
out
bound
xchg
xchg
notl
lock
cmpsb
xor
ds
sbb
aam
xor
lock
or
jmp
mov
nop
adc
jns
mov
hlt
cmc
pop
jb
add
mov
test
cwtl
ljmp
out
fidivs
sbb
subb
ljmp
dec
mov
mov
mov
dec
cmp
mov
stos
mov
call
adc
pop
test
add
inc
or
rcrl
mov
sbb
imul
ret
lods
fwait
xor
pushf
mov
xchg
in
es
xchg
adc
cmpb
fildll
das
mov
cmp
cmpsl
mov
add
ffree
or
es
cmp
cli
pop
pop
ja
push
mov
cwtl
loopne
push
popf
mov
fadd
test
cltd
enter
aas
out
shlb
push
fadd
fildll
adc
addr16
pop
push
push
in
rcrb
add
popa
pop
or
outsl
push
adc
fs
loopne
mov
sbb
fmulp
push
adc
mov
cmp
icebp
arpl
cs
js
mov
lock
sahf
push
pop
jbe
mov
in
xlat
sub
popa
pop
sbb
mov
mov
xchg
mov
adc
xor
lret
jl
jle
sti
adc
in
cmp
mov
cmp
mov
and
ret
jecxz
jecxz
jmp
pop
mov
adc
pop
inc
jb
push
out
xchg
enter
jns
or
sub
or
dec
jo
jnp
dec
jg
stc
and
jg
je
shl
or
popf
push
jge
pop
jae
mov
sti
das
lock
loope,pt
pop
fisttps
les
xchg
cmc
fwait
adc
aad
clc
push
add
cmp
in
lea
mov
jp
sub
push
inc
lahf
xor
mov
leave
jnp
add
data16
inc
dec
adc
call
mov
aas
ja
jecxz
pusha
mov
jle
cmpsl
insb
inc
pushf
cmc
sbb
mov
adc
cmp
push
cmp
insb
andl
or
shr
out
and
dec
and
or
and
aam
cvttps2pi
push
jo
xor
std
aas
mov
add
cwtl
sbb
sub
sub
test
js
and
enter
jecxz
jge
cmp
jbe
in
sub
sti
imul
adc
dec
pop
inc
pop
push
das
dec
or
xor
sbb
and
xlat
outsb
out
jae
mov
mov
cmp
mov
test
jl
mov
loope
mov
ss
inc
mov
jmp
loope
jo
add
pop
fisttpll
addr16
jns
adc
in
jae
fistl
bound
mov
ret
sbb
arpl
and
inc
push
jb
jb
leave
xchg
stc
push
adc
mov
add
sub
cmp
or
push
sub
aaa
sub
dec
dec
xor
push
ds
ret
adc
push
pop
loop
cmp
sub
loopne
add
add
loop
sti
scas
hlt
pop
out
and
inc
andb
and
stc
shrb
inc
xchg
popa
add
mov
push
sbb
mov
push
xchg
adc
dec
loope
rolb
push
xchg
sahf
lock
push
lret
scas
ljmp
add
and
ds
sbb
pop
mov
in
loope
push
adc
das
dec
cmp
jle
mov
xchg
sub
lds
addl
es
subl
out
jle
shlb
sub
adc
scas
xor
jp
shrl
daa
addr16
and
inc
or
pop
mov
jl
arpl
adc
mov
movsb
dec
gs
cmp
add
adc
ss
push
lea
lods
pusha
jl
xor
rclb
lahf
bound
mov
xchg
cli
adc
std
in
mov
jmp
push
iret
loopne
repnz
cmp
ret
mov
or
rcrb
push
stc
inc
imul
ret
shrl
mov
sub
mov
stos
push
and
or
pop
stos
sub
sbb
test
mov
push
ss
xchg
push
and
mov
gs
in
pop
add
rorb
fnsave
mov
lods
sub
push
and
sti
add
in
or
push
mov
iret
adc
cmp
mov
or
inc
mov
ss
adc
pop
cs
inc
addb
inc
inc
fdivl
pop
iret
scas
hlt
mov
lock
xchg
mov
lock
mov
test
in
push
jb
shrb
out
sub
mov
ljmp
mov
dec
je
inc
int3
loope
and
push
lret
cmc
jecxz
push
daa
and
pop
in
and
stos
icebp
cld
pop
jge
push
repnz
jb
rep
mov
sbb
stc
or
xchg
mov
call
stos
mov
rcrb
mov
xchg
jmp
mov
xchg
xchg
jecxz
in
xchg
aam
repz
fimuls
nop
adc
jae
xor
outsl
push
inc
mov
addl
movsl
push
jo
sahf
mov
sbb
xor
ja
mov
mov
lret
mov
sbb
int
xor
fisttps
jno
push
std
mov
and
ja
test
iret
icebp
mov
stos
cmc
mov
dec
pop
push
jmp
call
addr16
fnstenv
repnz
in
mov
adc
pop
sbb
pusha
dec
jae
int3
cwtl
jle
and
mov
nop
sbb
pop
cltd
loope
lea
adc
dec
mov
pop
aad
adc
inc
fstp
test
pushl
icebp
jle
push
push
lcall
jo
test
pop
mov
mov
test
leave
mov
loope
and
or
outsb
cli
mov
mov
add
stos
and
inc
addr16
movsl
jbe
inc
mov
repz
sbb
mov
dec
cmp
lahf
add
dec
dec
imul
jnp
dec
inc
dec
jecxz
inc
cmp
and
xchg
or
std
xchg
ljmp
nop
sbb
stc
loopne
mov
push
les
cmc
in
gs
fucomi
pusha
divl
ja
mov
bound
aam
xor
mov
pushl
call
jbe
mov
sbb
sub
sub
jbe
outsb
xor
xchg
mov
cmp
fldz
aas
outsb
add
cmp
loopne
push
movsl
lods
data16
push
or
dec
mov
aas
mov
push
out
into
repnz
imul
xchg
mov
out
fwait
stc
outsl
sub
stc
addr16
es
pushf
in
into
jb
xor
sbb
xor
fsubrs
jl
rclw
mov
pop
xchg
sub
xor
jg
les
sub
dec
cmp
cmp
push
repnz
mov
adc
subl
lcall
xchg
fldt
or
mov
popf
adc
or
adc
pop
jmp
out
xor
es
and
inc
stos
add
or
inc
fxch
iret
pop
mov
jbe
sbb
int3
pusha
add
adc
add
popa
sbb
xor
mov
xchg
sub
scas
push
popf
pusha
aad
inc
bound
ret
in
mov
fdivrs
repz
mov
pop
movsb
es
mov
jmp
cmp
outsb
lcall
jl
push
out
jecxz
and
fidivl
or
adc
divb
in
loop
mov
push
popa
insb
push
iret
scas
not
sub
aas
mov
test
pop
enter
loop
mov
xor
dec
leave
pusha
subl
inc
xchg
xor
pop
add
loop
je
pop
hlt
xchg
adc
dec
mov
sbb
call
adc
lock
sarl
dec
inc
pop
aad
loop
cld
mul
sbbl
or
arpl
xor
lods
xchg
stos
addr16
das
sbb
lds
lahf
push
cmp
inc
addr16
lods
inc
les
mov
dec
push
fistpl
lds
popf
cmp
push
lock
das
dec
imul
push
mov
lret
imulb
add
outsl
cmp
insb
iret
xor
fcompl
sub
fcompl
dec
insl
xor
sahf
outsb
xchg
pop
insl
loope
or
push
mov
pop
fcompl
jg
rcrb
push
loopne
inc
rcrb
in
mov
sbb
inc
inc
adc
ret
in
mov
aam
jae
scas
loopne
lea
rcl
xchg
mov
mov
xor
out
xchg
mov
adc
pushf
stos
xchg
out
shlb
lret
push
scas
add
scas
inc
iret
outsb
imul
mov
imul
jge
pop
aam
rcr
jp
jae
aad
jl
lods
mov
mov
inc
and
leave
adc
je
or
imul
xchg
sbb
xor
mov
xorb
adc
mov
sahf
or
xor
aad
adc
aaa
gs
cs
fwait
in
addr16
bound
push
add
xlat
loope
jo
push
pop
xchg
jecxz
in
pusha
mov
cmpsl
or
or
jge
data16
subb
jns
jge
hlt
stos
xor
cwtl
push
xchg
cmp
mov
xchg
lods
insb
inc
and
jbe
xchg
mov
cmp
mov
or
rorl
pop
jp
rolb
inc
lods
outsb
jno
idivl
ja
into
xchg
addr16
imul
call
cmpsl
mov
adc
das
ss
cmpsb
xor
xchg
mov
loop
repz
and
sbb
add
shlb
push
pop
pop
add
mov
imul
cmp
ja
add
jecxz
xchg
jb
xchg
addr16
movsl
rolb
shl
push
add
pusha
cmp
xchg
lea
jle
mov
pushf
cmc
mov
inc
lret
or
xor
lods
cs
fs
mov
insl
pop
aas
adcb
bound
pop
ljmp
xor
mov
test
jp
jmp
dec
sbb
push
cmp
sbb
repz
and
mov
mov
lahf
shld
stos
out
ds
les
push
cmp
sub
jne
dec
dec
loop
inc
add
dec
int3
add
or
repnz
jno
and
jmp
gs
adc
jb
dec
in
and
decb
test
out
sub
hlt
jnp
mov
xchg
and
cmc
or
std
xchg
xor
mov
xchg
dec
mov
out
mov
aam
adc
xchg
push
mov
pop
add
add
aaa
push
loop
sbbl
lods
mov
enter
jb
push
pop
jbe
and
imul
add
sbb
mov
out
or
xchg
fidivl
in
or
dec
mov
repz
dec
in
imul
cmp
or
mov
fnsave
xchg
mov
popa
push
mov
or
pop
imul
add
rcr
adcl
mov
mov
or
mov
mov
mov
mov
insb
push
mov
lahf
push
jmp
adc
mov
cwtl
xor
or
fistps
fnstcw
mov
jmp
in
sbb
xchg
sub
push
sub
repnz
cs
mov
push
mov
enter
xor
cmpsl
shr
pop
mov
push
call
jmp
ds
mov
xor
xchg
or
jp
fsubrl
mov
iret
inc
fadds
arpl
ret
adc
imul
in
mov
mov
cmp
sbb
mov
push
pop
mov
popa
push
not
fsubl
cmpsl
ljmp
xchg
cs
je
adc
jl
cmp
dec
dec
sbb
and
sub
inc
cmp
or
adc
push
dec
addr16
daa
pop
nop
mov
andl
xchg
movsb
dec
loop
enter
dec
pushf
xor
push
jl
xchg
sub
lds
shlb
mov
pop
and
daa
scas
inc
scas
inc
pop
iret
lret
xorl
sbb
push
fwait
jno
shl
es
dec
pushf
xor
shrl
mov
jmp
aaa
mov
jmp
cmp
es
int3
cmpl
mov
fsubrs
andl
aam
int
pop
cmc
cmp
es
dec
mov
pop
icebp
js
shrl
lcall
push
in
xchg
sub
stos
inc
mov
jb
sub
cld
xchg
shrb
sbb
lock
jo
jmp
ret
mov
fldenv
sbb
sbb
in
incb
les
mov
add
das
fstpl
sqrtps
pop
sbb
adc
sbb
cli
imul
lods
mov
ficomps
or
icebp
mov
cltd
inc
fcmovne
fcomip
cmp
ljmp
push
das
xchg
scas
cmp
pop
test
dec
cmp
hlt
xor
push
mov
jb
sarb
loop
call
pop
insb
xor
cli
sub
add
decb
and
push
jmp
inc
cmp
lcall
dec
sub
cli
add
jne
repz
mov
mov
pop
scas
push
pusha
push
flds
leave
gs
aas
insl
ds
hlt
or
mov
mov
or
dec
into
movsl
inc
in
aam
mov
jne
mov
movsb
adc
in
inc
dec
enter
pop
rcrb
pop
pop
lahf
hlt
push
cmp
ja
cmp
das
mov
lret
jg
lock
inc
fstps
jl
push
testb
add
pop
ret
rcrl
shl
xor
sbb
pop
inc
lret
mov
or
ret
add
jge
or
xor
dec
shlb
sbb
push
scas
inc
test
int3
push
call
js
pop
add
xchg
pushf
shl
rolb
inc
mov
test
or
cwtl
adc
sub
sub
adc
scas
and
out
adcb
inc
pop
jge
iret
mov
rol
push
jae
inc
arpl
mov
fistpll
push
or
hlt
jns
adc
jns
dec
insb
clc
xchg
pop
arpl
push
mov
and
push
push
popa
into
aaa
jbe
inc
push
out
ficoms
orl
test
jbe
jno
inc
xchg
push
mov
popa
dec
mov
cli
push
je
imul
cld
cmp
jl
xchg
pop
inc
popa
stc
enter
daa
ss
sbb
push
jne
cs
mov
pop
xchg
or
icebp
push
jb
stos
add
je
ret
xlat
mov
cmp
fsubp
imull
jbe
lret
cs
mov
and
ja
mov
ljmp
or
in
mov
ret
ja
and
push
push
cltd
sub
test
sti
fcomi
jo
dec
add
and
adc
sbbb
call
gs
cmp
popf
insl
mov
int3
and
sbb
ds
inc
mov
gs
iret
jno
ss
cmpsl
addb
cmp
xchg
addr16
shrb
pushf
adc
jbe
clc
inc
popl
mov
fwait
sahf
pushl
xor
in
cmp
adc
cs
xor
out
fstps
das
mov
cmpl
sbb
mov
lods
xor
dec
pop
es
xor
cwtl
and
cs
jae
sub
pushf
and
push
mov
sbb
add
and
inc
fs
js
arpl
sub
mov
cmp
lods
test
and
mov
insb
sub
lds
pop
dec
pop
mov
push
cmc
adc
pop
hlt
dec
add
adc
adc
icebp
inc
lcall
andl
sbb
sub
pop
mov
mov
pop
gs
ret
call
or
mov
out
jg
cld
sbb
sbb
les
pop
aaa
jo
cmp
and
xchg
aaa
into
movsb
aaa
mov
push
or
jle
dec
inc
dec
mov
iret
cwtl
out
jnp
out
xchg
andb
mov
pop
mov
jne
clc
mov
xchg
cmp
scas
adc
addr16
sub
or
aam
inc
and
sarl
dec
pop
and
inc
movsb
daa
cwtl
aas
test
mov
cmpsb
adc
or
and
push
mov
sub
sub
test
ljmp
pop
lods
xor
das
loopne
pop
gs
mov
fs
out
subb
or
ficomps
int
aas
mov
jbe
stos
sti
push
es
xchg
test
clc
jb
and
insl
xchg
jg
xchg
pop
testb
ficoml
or
xchg
fsubr
mov
mov
shll
out
xchg
xor
stc
leave
pop
and
fisttps
pusha
in
icebp
mov
cld
and
xchg
push
or
add
jns
inc
xorb
jne
cld
bound
je
and
js
push
jge
jbe
xor
icebp
lods
roll
jge
jl
popl
or
pushf
in
push
adc
sbb
and
notl
mov
lea
push
sbbb
xchg
testl
dec
sub
jge
jns
ret
test
mov
popa
adc
push
lods
loopne
shlb
mov
int
popf
and
sti
xchg
push
jbe
mov
fistpl
repz
dec
or
out
xchg
out
push
fidivs
clc
push
cli
iret
and
jbe
mov
push
dec
add
xor
cltd
jb
pop
sub
xchg
in
xor
jbe
cmp
add
push
adc
mov
cld
shll
loop
mov
loopne
xchg
icebp
orb
inc
xchg
and
inc
int3
ds
jp
inc
mov
mov
pop
xchg
out
test
lods
cmp
test
lret
sahf
mov
and
stc
pop
or
push
xor
xchg
sub
fabs
mov
mov
xchg
pop
pop
and
in
and
xchg
dec
mov
push
push
cmc
outsb
and
lea
bound
dec
fwait
call
mov
enter
arpl
adc
push
mov
xchg
push
sub
mov
arpl
pop
mov
dec
out
jmp
pop
jns
stos
mov
mov
enter
jne
mov
jb
pop
imul
in
ja
push
dec
pop
test
aaa
cmc
fwait
pop
test
mov
jbe
test
dec
adc
adc
insl
aam
cmc
stc
pop
xor
testl
adc
or
mov
fbld
mov
push
push
xor
pop
jnp
cli
call
aas
push
popf
jo
fs
out
mov
ss
or
mov
fisttps
jg
adc
leave
lahf
jnp
decl
mulb
and
inc
sbb
jg
test
mulb
lcall
mov
testl
dec
mov
xor
xchg
repnz
shl
gs
pop
mov
pop
in
cmp
sbb
lods
fists
xchg
shrb
rclb
orb
cmp
subb
cltd
ror
xor
pop
mov
dec
cmp
xor
push
xchg
xchg
sbb
jecxz
add
jb
jb
and
push
jge
jmp
cmp
das
lret
xorl
sub
pop
cli
decb
dec
in
cwtl
ret
xchg
cmp
adc
push
int3
fidivs
rol
lds
lods
push
outsb
lea
idivl
adc
out
notl
mov
mov
fmull
xchg
push
mov
aam
lcall
fdiv
mov
push
movsl
cld
test
jl
push
into
sbbb
cld
jecxz
fldt
mov
mov
sub
cmpsb
repz
in
std
adc
inc
dec
sbb
push
ja
sub
stos
jbe
cmp
fstl
and
xchg
fidivl
cmp
sbb
cli
xchg
cmp
inc
fimull
cs
lods
hlt
sub
insb
add
in
dec
ret
push
jbe
dec
arpl
jae
imul
daa
mov
inc
mov
mov
cmc
mov
sbb
mov
sbb
and
fwait
push
mov
and
rcr
jne
lcall
sbb
push
popf
out
or
std
push
enter
lock
scas
jge
add
push
xchg
sub
xor
xor
xchg
out
and
arpl
sbb
pop
mov
into
cld
outsb
inc
pop
sbb
and
das
inc
ret
and
push
rcrl
push
out
daa
fisttps
leave
inc
xchg
mov
repnz
cwtl
push
das
xchg
mov
adc
pop
insl
lret
fwait
pop
sti
repz
les
and
add
xchg
jno,pt
jp
pop
sbb
add
mov
das
inc
push
scas
push
movsl
loopne
movsb
xchg
pop
sub
nop
mov
idivb
and
in
xchg
inc
int3
ss
push
out
xchg
hlt
mov
and
xor
mov
ljmp
or
cwtl
lods
outsb
out
mov
pop
testb
cmp
mov
cmp
mov
sub
sub
sub
js
mov
jno
xchg
sub
outsb
add
lea
pop
scas
inc
rcrb
pop
es
loopne
ficompl
stos
movsl
enter
mov
lcall
mov
test
mov
jae
and
and
fldcw
lods
inc
movsb
out
data16
cwtl
bound
das
das
xor
gs
mov
leave
bndldx
push
cmp
cli
lahf
dec
add
sub
push
and
adc
imul
inc
aas
in
jno
xchg
ret
icebp
mov
inc
push
imul
push
pop
adc
mov
incb
inc
xchg
dec
lods
pop
cltd
mov
sub
and
decl
adc
sbb
hlt
dec
div
mov
adc
xchg
add
xchg
rorb
dec
pop
cmc
subb
ret
rcrb
pop
std
jp
dec
arpl
pushf
xchg
subb
xchg
insb
sahf
cltd
iret
dec
or
imul
mov
inc
mov
dec
and
pop
adc
mov
or
jmp
ds
xchg
mov
leave
cmp
rorl
mov
notb
scas
xchg
ja
std
call
mov
and
cmp
js
mov
push
pop
es
jns
frstor
or
inc
add
adc
pop
mov
pop
lods
push
mov
push
mov
popf
xor
xlat
in
or
add
add
lahf
bound
idivl
ret
insl
sbb
inc
sahf
loopne
vsqrtpd
or
dec
out
push
arpl
cmp
or
adc
outsb
add
pop
aad
popa
popl
pop
popf
mov
les
cli
pop
xchg
push
or
jecxz
imul
push
push
icebp
mov
into
pop
repz
mov
decl
call
cld
subl
or
movsb
in
and
xor
xor
aad
mov
xorb
adc
inc
pop
js
mov
sbb
cmp
adc
adc
jmp
test
jns
jle
rorl
sbb
cmp
sub
sub
ret
pop
cli
lahf
dec
mov
xchg
filds
les
sbb
out
cmp
cmpsl
sbb
mov
jae
out
jl
jne
outsl
mov
jg
aad
cmp
in
push
mov
jno
push
mov
mov
mov
mov
and
lret
bound
jmp
imul
lds
push
loope
lahf
aaa
shrl
xchg
scas
push
mov
inc
loop
test
jecxz
xchg
jne
cmc
lcall
fldl
and
mov
mov
iret
gs
push
in
das
enter
das
gs
xor
popa
push
mull
lret
cmp
pop
ljmp
push
lahf
push
pop
dec
fs
cmp
sub
dec
mov
add
xor
jp
lahf
lahf
cmpsl
xchg
test
in
repz
cs
and
mov
lcall
in
in
std
rol
xor
out
outsl
call
into
fldcw
imul
pop
icebp
sub
pop
mov
ret
sbb
mov
jae
in
push
sbb
rol
lock
das
add
out
sub
push
lock
lods
jns
xchg
sub
add
jge
scas
mov
fimull
push
cltd
test
inc
cmc
testb
call
fisubrl
enter
dec
pop
scas
nop
adc
lds
nop
sti
imul
sbb
mov
mov
int3
and
das
fcmove
dec
icebp
mov
ret
pop
hlt
hlt
bound
rcll
xor
xor
jp
xchg
mov
aaa
mov
or
xorl
orl
add
test
fstpl
cwtl
push
or
pop
jne
add
aas
mov
sbb
imul
cmpsb
or
shld
or
adc
and
fidivrl
les
cltd
dec
sbb
adc
xor
notb
pop
or
lock
lds
add
fbld
mov
rorl
push
xchg
ret
cld
pop
cmc
repz
ret
mov
movsb
cwtl
mov
out
xchg
sub
mov
and
push
push
or
test
sub
mov
mov
jmp
jecxz
mov
xchg
sbb
cmp
nop
xchg
clc
test
int
loope
ds
std
cs
jl
and
imul
div
scas
and
es
inc
in
sbb
xor
jno
call
mov
and
test
outsb
andl
imul
xchg
divl
aad
adc
cmpb
and
jecxz
add
rorl
or
and
dec
cmpsl
inc
testl
inc
pop
jmp
jnp
repnz
adc
cmc
sub
mov
dec
fldl
data16
stos
popf
je
sub
pop
orl
fsub
add
sbb
inc
fldt
popa
aam
dec
mov
jae
pop
jbe
js
lods
jnp
xchg
sub
shlb
into
scas
in
fs
shl
cmp
mov
dec
fimuls
test
decl
ffree
popf
push
lods
lret
dec
dec
jmp
xlat
sbb
les
mov
adc
jp
cli
mov
add
int3
gs
std
movsl
pop
lret
xor
sahf
fsubs
sahf
and
into
testb
in
lock
jbe
mov
inc
stc
jne
aas
push
lret
scas
stc
fistl
mov
push
jns
sbb
push
data16
xchg
dec
cmp
mov
inc
fcompl
sti
out
arpl
scas
or
stc
mov
notl
xlat
fcmove
or
test
aad
js
jne
push
push
lret
call
in
pxor
sub
mov
test
je
add
cmp
test
sbb
imul
xor
pushf
and
sti
lea
repz
fldt
je
sub
xchg
mov
mov
or
and
std
fldl
mov
sbb
xor
cmpsb
mov
rcll
loopne
cwtl
push
jge
mov
jo
aam
fmul
hlt
cmc
add
xor
xor
shr
stc
nop
xor
pop
scas
cmp
xor
pop
fidivrs
jne
jmp
ja
stos
js
sub
xchg
subl
sbb
sub
in
div
adc
push
loope
sbb
push
test
icebp
int3
icebp
jg
mov
int3
dec
daa
mov
mov
inc
lods
and
xchg
push
jne
pop
sti
test
rcrl
idivb
pusha
lret
bound
fwait
jmp
sahf
lcall
push
lret
adc
imul
cltd
mov
push
sbb
push
jecxz
jle
test
adc
lcall
cmp
sub
or
jb
int3
add
jne
enter
inc
sub
adc
cmpsb
sbb
pop
ljmp
push
or
lds
inc
sbb
xor
sub
or
pop
mov
fnstsw
cmc
sub
or
inc
pop
nop
dec
add
xchg
sub
push
cld
cmc
sub
pop
or
inc
jae
mov
pop
xor
sti
out
fmul
arpl
stos
dec
or
xchg
sub
rol
insb
data16
xor
xchg
jmp
sbb
stos
jo
mov
in
stos
rcll
sti
iret
repnz
mov
fldcw
test
ret
xchg
cmp
sbb
inc
leave
sub
int
notb
push
icebp
stc
mov
pop
jne
mov
jae
fiadds
fistpl
sub
lahf
pop
aaa
dec
jg
add
pushf
ds
int
jnp
loop
jmp
cmp
insb
mov
loop
test
and
mov
ss
test
out
es
out
shr
cmp
jp
dec
pop
icebp
jp
in
mov
push
in
orb
fdivrp
cmp
out
adc
mov
int3
out
dec
mov
pushf
mov
ftst
mov
adc
je
inc
push
negl
pop
inc
mov
je
into
push
fucomp
ja
xchg
add
mov
repz
mov
cltd
das
rcl
pop
hlt
mov
mov
mov
adc
pop
push
and
lcall
mov
out
mov
flds
and
xchg
sbb
les
inc
cmpsb
imul
xor
cmp
out
fmuls
push
fs
push
sbb
jns
aam
mov
repnz
push
add
shll
bound
dec
inc
push
out
push
dec
in
xor
fcom
imul
adc
jmp
sbb
push
les
sub
mov
cmp
lret
push
adc
and
mov
data16
push
sbb
sub
mov
pop
sub
out
movsb
mov
idivl
jno
mov
sub
push
jle
fdivs
add
dec
lcall
out
in
div
dec
push
cs
xor
sbb
lcall
mov
mov
or
movsb
adc
sbb
xchg
ss
push
mov
shll
jb
xor
mov
arpl
dec
cli
call
sbb
add
pushf
call
cmp
test
inc
leave
pop
movsb
and
mov
pop
leave
sub
lods
adc
mov
das
imul
test
nop
ror
jle
jno
jo
mov
push
mov
repz
mov
dec
movsb
pusha
rcrl
sub
dec
popf
psadbw
fldl2t
xor
cli
inc
push
fstpt
xlat
cmp
out
mov
in
mov
pusha
push
shl
add
sahf
xor
cld
or
in
mov
call
dec
mov
rcr
pop
pop
fldenv
pusha
xor
lret
push
mov
jae
loop
fmuls
adc
bound
jmp
xchg
fstpl
dec
pusha
inc
cmp
loope
inc
addr16
gs
xchg
sti
ja
push
push
mov
pop
adc
xchg
imul
icebp
popa
icebp
jl
push
add
mov
in
cld
push
cmpsb
call
jbe
pop
je
xor
sub
sbb
inc
and
inc
pop
xchg
dec
fistps
jmp
outsl
dec
jo
jl
lcall
jmp
cmpb
xchg
pop
mov
jns
movsl
adc
es
pop
xor
mov
insl
in
jg
pop
mov
loop
negl
pop
push
mov
call
sbb
inc
ret
push
mov
dec
scas
xlat
sub
cli
mov
movsl
inc
enter
lock
jbe
push
in
ja
ljmp
call
pop
sbb
sbb
jl
hlt
sub
mov
scas
sub
out
pop
xor
test
lret
out
sahf
fmull
idivl
sub
xor
inc
or
addl
push
xchg
xlat
xchg
push
movsl
in
movsl
nop
sub
mov
adc
sarl
mov
cmpsl
nop
mov
xchg
and
out
andl
in
lahf
and
push
xor
xor
shl
pop
mov
daa
lret
jo
ret
and
add
mov
mov
shlb
aaa
mov
mov
mov
inc
add
ss
js
push
notl
lret
jno
stos
outsb
jnp
scas
pusha
add
or
pop
sbb
mov
fsts
mov
push
mov
adc
inc
lods
jns
mov
mov
inc
lahf
clc
xchg
or
inc
std
mov
adc
jns
pop
pop
js
and
cmp
fbstp
jg
out
inc
cmp
ret
shr
adc
mov
and
leave
sbb
int
mov
stc
xor
sub
push
in
std
adc
push
push
mov
xchg
push
outsb
orb
in
popf
fdivrl
out
pop
scas
and
or
xchg
jno
cmpb
or
cld
mov
decl
dec
and
xchg
dec
dec
mov
pop
repnz
out
adc
sub
pop
and
jnp
sbb
inc
in
ja
cmc
mov
cmp
lcall
dec
jno
enter
cmp
dec
shlb
and
cmpsb
xorb
hlt
cwtl
sub
xchg
fs
sub
aad
inc
cli
cmpl
cmp
fisubrl
out
cltd
aaa
cltd
test
fildll
push
or
test
fs
int3
ret
rol
adc
push
push
fcoms
nop
xchg
sbb
pop
cmp
sub
call
mov
js
push
insl
cmp
or
pop
mov
pop
imul
push
lds
sbb
mov
fwait
mov
fcoms
and
push
jno
add
xor
lods
jb
int3
cmp
adc
sub
dec
nop
mov
rcl
in
cltd
dec
pop
push
mov
jae
adc
sbb
stos
inc
sbb
pop
inc
outsb
jle
sbb
xlat
mov
pop
stc
xorl
xchg
in
add
decb
push
pushf
sbb
loope
aad
stos
dec
jle
outsb
mov
sbb
xor
data16
ficompl
cmp
repz
push
loopne
xchg
sbb
xchg
jbe
fisubrs
cmp
fwait
inc
fsts
scas
dec
sbbl
cli
push
sbb
dec
or
scas
xchg
or
mov
popa
subl
leave
hlt
cmp
push
lcall
push
push
leave
ljmp
in
jns
xor
add
and
cs
push
lods
jno
cmp
push
lock
fisubrl
cmpsl
pop
test
mov
pop
cli
outsl
shll
shrb
xchg
scas
mov
aad
and
mov
xor
add
pushf
cmp
or
push
xchg
repz
push
dec
xlat
sti
aam
pop
jbe
mul
dec
dec
mov
aaa
push
popa
adc
in
jb
push
dec
pop
push
in
cmp
mov
xchg
xchg
pop
test
cmp
int3
iret
jbe
rcrb
inc
aas
movsl
pop
lods
imul
shrl
jne
cli
dec
stos
imul
jp,pn
sbb
loope
push
cltd
sbbl
xor
int3
imul
movsl
imul
lods
or
ret
adc
pop
bound
xchg
imul
mov
jp
push
jge
sbb
or
push
sbb
fisubs
ret
cmpl
cmp
shlb
cwtl
push
mov
sub
push
pop
test
imul
mov
movsl
jle
xlat
inc
scas
lds
jne
xchg
lods
push
repz
fcom
out
mov
and
gs
xchg
jae
movsb
cmp
enter
jmp
fstl
insl
sbb
mov
mov
inc
mov
fisubrs
pop
fidivrs
or
cmp
pop
add
inc
jmp
xor
inc
sub
js
fwait
cmpsl
push
mov
pop
jmp
aaa
outsl
add
jne
xor
fisttpl
cmp
shrb
fildll
adcl
push
sbb
lahf
cmp
or
sub
je
or
rclb
fildll
pop
pop
dec
test
sbb
rcr
add
adc
sub
aas
in
mov
movsl
dec
cmc
inc
mov
cmp
insb
mov
and
ss
sbb
lea
pusha
not
add
lods
push
leave
mov
or
out
adc
jp
xchg
outsb
in
xor
pop
or
dec
shld
int
js,pn
pop
cmp
mov
mov
lods
sub
add
arpl
cld
xchg
jnp
pop
fstpl
nop
lods
arpl
dec
stos
icebp
mov
jnp
sarl
into
push
clc
adc
push
js
lock
hlt
mov
bound
xchg
cwtl
jae
les
jns
in
pusha
daa
bound
adc
push
push
cmp
pop
repnz
movsb
jno
xchg
sub
je
xor
std
and
jge
dec
std
mov
mov
cmpsl
stos
push
jo
enter
inc
jl
popa
pop
push
fmul
xchg
jae
push
ljmp
inc
fcoml
sub
imul
pop
rcrl
inc
or
pop
pause
das
pop
jne
jmp
sti
adc
lds
or
sub
fnstsw
jbe
data16
sahf
addb
aaa
adc
leave
push
cmpsl
fs
les
loopne
sbb
pop
xchg
jno
push
mov
sti
cmp
xchg
sub
ljmp
icebp
rdtsc
cmp
sbb
cmp
mulb
aad
fisttpl
jle
and
jns
pop
rcrl
daa
jae
fstps
mov
decb
xor
xlat
outsb
inc
dec
lea
or
test
fisubrl
std
rcrl
adc
sbb
fwait
lret
mov
pop
jo
jns
bnd
rolb
pop
pop
sbb
ret
scas
sub
hlt
or
mov
push
lds
push
iret
fnstcw
or
or
jg
xchg
lahf
xor
and
cmp
fnstenv
gs
sub
add
ss
xchg
pop
or
or
sbb
xchg
adc
add
shlb
jge
icebp
sbb
dec
or
int
ret
cs
pop
mov
dec
inc
jne
sub
or
cmpb
xor
sbb
lods
jbe
jno
dec
data16
xchg
dec
jno
push
mov
popl
rol
adc
loop
jo
push
sbbb
sbb
xor
mov
push
test
mov
movsl
mov
add
test
inc
out
sarb
inc
fistpl
scas
dec
aad
mov
insb
bound
test
push
cmp
stos
jmp
out
mov
jmp
sarl
add
stos
mov
xor
or
jnp
sub
dec
lock
cmp
xchg
add
shl
push
mull
pop
mov
je
pop
lret
in
or
inc
dec
sbb
inc
pop
push
sub
stc
pop
xor
push
lds
add
pop
or
jp
fcmovne
mov
inc
faddl
insl
adc
outsl
fisubs
push
insl
aam
fcomip
cli
xchg
and
iret
sbb
sub
dec
mov
loopne
push
pushf
and
dec
addr16
ds
scas
add
sbb
or
xor
push
pushf
push
xor
in
test
repnz
pusha
or
shlb
roll
pop
jbe
mov
add
bound
jno
inc
push
xchg
loope
aas
xor
xlat
sahf
jge
shr
xchg
pop
push
or
cltd
orb
sbb
fidivl
sub
cwtl
ja
adc
sbb
ret
jns
inc
xor
jbe
or
lds
jg
mov
and
pop
pop
adc
insl
push
and
or
jae
shlb
mov
fildll
das
or
jle
xor
shlb
inc
lret
push
movsl
sbb
sub
pop
adc
pop
loope
mov
ds
int3
in
stos
xor
mov
or
sbb
jmp
push
push
mov
gs
loopne
inc
push
adc
sub
xchg
xchg
adcb
inc
mov
arpl
fwait
out
bound
fwait
mov
jmp
cmpsl
into
and
and
lods
ljmp
stos
dec
frstor
cltd
and
test
iret
add
roll
mov
test
fdivs
inc
lods
addr16
or
inc
fcmove
and
jb
out
inc
jnp
loop
and
addr16
pop
jb
ja
and
jns
subl
pop
cmc
and
or
sbb
jno
mov
daa
inc
rclb
or
adc
pop
packsswb
push
ret
mov
push
fdivrl
dec
das
movq
jbe
sub
dec
imul
stos
dec
fbstp
add
xor
std
inc
mov
psllq
and
repnz
outsb
pop
push
xor
fmuls
cld
mov
dec
shll
jnp
push
and
adc
cmpsb
pusha
sbbl
add
hlt
push
dec
mov
cld
xchg
imul
mov
xchg
mov
mov
cmp
faddl
mov
inc
pop
sbb
inc
push
sub
sub
les
mov
leave
jg
gs
mov
mov
inc
lea
inc
jecxz
jmp
xor
mov
mov
fimull
lcall
std
pushf
pop
rcrl
sbb
clc
sbb
jge
jle
mov
sahf
lahf
mov
adc
sub
and
push
push
inc
cld
pop
or
fwait
sub
push
lahf
clc
das
mov
push
stos
and
lea
loope
sbb
outsb
sbb
lret
cld
aaa
mov
dec
std
test
sbb
rcrb
pushf
les
into
mov
fdivs
daa
scas
mov
shlb
mov
jg
sub
fldcw
mov
mov
test
adcb
inc
lcall
js
xor
movsb
outsl
cmove
ret
int
cmpsl
and
pop
cld
or
mov
jno
aas
daa
mov
rcl
lahf
outsb
jb
mov
inc
out
ljmp
inc
loopne
pop
xchg
loopne
fidivs
out
push
loope
mov
ja
mov
mov
loopne
or
push
shrl
lret
cmpsb
dec
and
jmp
sub
test
push
and
mov
shr
jle
adcl
dec
push
jne
cmpsb
jbe
popf
lret
dec
pushf
data16
pop
pop
cwtl
jg
bound
mov
sbb
sub
mov
addr16
xlat
jmp
stos
test
cmp
push
mov
inc
iret
arpl
fistpll
fisubl
add
sbb
dec
cwtl
sbbl
imul
rdpmc
cmp
cs
dec
scas
fistpll
insl
push
scas
mov
mov
cmpsb
out
pop
xchg
and
or
push
mov
lret
lret
cmc
jnp
fisttpll
and
fildll
fisubl
and
js
xor
xchg
mov
int3
fstpl
je
adcb
test
cmc
in
enter
adc
shll
rcrl
je
jg
sub
cmpsl
jmp
arpl
inc
pop
std
int3
lds
mov
inc
test
add
jmp
sub
rcrl
dec
test
je
xchg
out
add
scas
xor
inc
xchg
xor
xchg
cmp
repnz
out
or
jne
mov
mov
add
add
push
xor
mov
aad
and
inc
cmp
pop
outsb
popa
add
insb
push
sbb
pushf
lea
add
mov
or
push
movsb
push
cltd
adc
pop
mov
push
xchg
add
mov
xor
mov
jg
insb
mov
and
clc
and
cmpsl
rcll
lret
mov
push
mov
movsl
fs
jb
idivb
jmp
hlt
aam
lea
movsw
repz
mov
lea
leave
lret
out
pop
sbb
pop
stc
testl
lcall
shlb
xchg
nop
pop
adc
es
movsl
push
mov
cmp
cmp
ret
out
xchg
sbb
pop
lock
call
add
sbb
pop
pop
shrl
pop
les
stos
xlat
pop
icebp
cwtl
int3
sub
lret
mov
add
add
mov
sbb
rolb
andb
movsl
inc
adc
pop
subl
sbb
jge
mov
adc
xchg
add
cmp
sub
das
xlat
mov
pop
push
mov
or
loop
test
mov
sbb
lds
pop
push
mov
and
test
fidivs
xchg
pop
mov
cmp
hlt
adc
movsl
sub
dec
iret
xor
push
push
xor
xor
sbb
jo
iret
aaa
pusha
cld
std
jo
push
int
adc
dec
ljmp
mov
iret
inc
inc
mov
aad
or
pop
loopne
mov
hlt
pop
and
bound
into
test
rorl
sub
xor
ljmp
xchg
fmul
xor
gs
sbb
mov
dec
aaa
adc
jns
mov
stos
jg
hlt
xchg
lret
mov
lahf
push
push
out
dec
xchg
mov
xchg
cld
shrl
mov
jle
cmp
scas
nop
dec
loopne
mov
jne
cmpsb
lds
dec
push
sahf
cmp
lods
push
and
shrb
add
fldenv
xor
jae
popa
push
fmul
lods
call
movsl
in
sub
adc
call
mov
stc
push
add
movsl
adc
fldcw
cmp
js
aas
stos
in
rclb
cmp
and
lret
cld
js
xlat
mov
pop
cmp
out
hlt
adc
sbb
push
lcall
or
js
aad
frstor
imul
outsb
inc
sbb
scas
xchg
jo
es
int3
cmp
push
insl
mov
jae
jae
mov
ffree
or
add
data16
xor
test
or
push
jbe
sub
push
cmpsl
lods
mov
movsl
or
mov
das
jno
adc
push
pop
orb
or
aam
pop
pop
sbb
orl
dec
mov
mov
cwtl
and
add
cmpsl
jno
dec
jl
insb
xchg
push
fwait
mov
les
test
es
sbb
movsl
dec
sbb
cmp
sbb
daa
adcb
sub
ljmp
push
mov
cltd
loop
enter
clc
adc
out
lods
jmp
push
inc
or
jge
outsl
ret
inc
or
push
mov
in
fwait
stos
testl
xchg
mov
jecxz
sti
repnz
outsl
loopne
cld
stos
negb
icebp
dec
lret
inc
pusha
std
jo
pop
mov
jnp
test
arpl
sub
pop
mov
lock
aad
movsl
cmp
inc
lcall
xchg
cmc
stos
ss
jp
js
or
adc
push
xor
push
data16
adc
ss
pop
test
arpl
sub
test
push
call
ljmp
mov
inc
stc
outsb
aam
push
mov
test
ja
int3
test
cli
cmp
jnp
stos
mov
leave
and
cltd
lock
xchg
sbb
push
mov
or
faddl
mov
push
imul
icebp
xor
stos
test
inc
ret
mov
arpl
xlat
push
mov
ret
mov
mov
mov
cwtl
femms
and
pop
dec
int3
out
dec
rorl
push
pop
cld
popa
sbbl
es
shlb
out
mov
adc
cmp
repz
pop
dec
lahf
pop
imul
out
pop
cmpl
ljmp
out
jbe
pop
outsb
out
stos
fnsave
stos
mov
sarb
xor
cmpsb
push
aas
aas
mov
inc
adc
pop
sbb
add
pop
sub
push
cmp
fdivrl
lods
stos
js
stc
cmp
fbld
sub
adc
out
add
push
repz
add
mov
sbb
inc
popf
jb
push
xchg
push
fsubs
test
pop
insl
in
lcall
sub
pop
pop
scas
out
lods
or
lds
movsl
mov
xchg
pop
xchg
mull
cmp
add
cmp
lahf
fidivl
aas
push
jmp
or
mov
repz
adc
test
add
adcb
stc
mov
pop
push
push
ret
mov
adc
adc
addb
dec
pop
cmp
pop
imulb
add
cmp
mov
xchg
cmc
mov
push
and
pop
or
dec
loope
imul
arpl
add
xor
jbe
insl
arpl
jmp
jge
mov
jge
je
jge
fcoml
enter
loope
aad
pop
insl
sar
sbb
push
pop
daa
addl
insl
push
pop
cmc
repnz
lea
xchg
ret
insl
popf
sahf
ret
pop
adc
pop
insl
sarb
out
fcmovb
das
adc
jmp
add
outsl
sbb
push
ljmp
nop
fucomp
mov
test
rcrl
mov
push
jl
dec
scas
ret
enter
jmp
call
test
and
mov
sbb
cmpsb
mov
dec
add
adc
addr16
stos
push
out
test
push
js
sbb
or
sub
cmc
outsl
fwait
jnp
push
rolb
mov
and
into
cmp
cmpsb
je
add
jmp
test
lock
leave
movsb
or
mov
or
std
xchg
jae
sbb
jg
movsb
pop
pusha
gs
mov
cmpsl
cmpsl
sub
fnstcw
nop
and
fwait
test
loop
xchg
mov
lahf
pop
or
and
and
lods
add
fwait
cmp
test
mov
add
out
push
jbe
mov
jge
adc
xor
push
insb
in
aas
iret
cs
add
lods
out
popf
out
jle
xchg
stos
inc
dec
add
lods
test
sahf
sbbb
xor
idivl
pop
cwtl
lcall
hlt
or
addr16
imul
test
leave
sub
mov
add
mov
test
inc
divb
outsl
jb
in
xor
xchg
in
js
jecxz
fcom
mov
jmp
ret
mov
jo
cmp
mov
cltd
jp
xchg
xchg
int
dec
cmp
sti
xchg
sahf
pusha
mov
div
lahf
aam
inc
sbb
lahf
aad
mov
pop
and
mov
cltd
adc
lods
xlat
nop
data16
inc
cmp
xchg
inc
sbb
push
dec
pushw
popf
inc
ror
into
hlt
xor
pop
xor
notl
xchg
bound
fwait
loopne
out
aas
inc
icebp
jae
cs
or
movsl
inc
scas
pop
cmp
xchg
pop
outsb
mov
mov
mov
cmp
mov
fcomip
fstps
jp
add
adc
addb
mov
push
push
fstpl
mov
sub
sbb
push
leave
out
xchg
pop
cld
fidivs
push
js
xchg
mov
pusha
jne
fdivp
or
iret
cld
xchg
adc
xchg
ficoml
mov
clc
out
cmp
setnp
ljmp
lret
push
pop
out
jl
stos
lods
adc
test
dec
in
lds
cmp
dec
cmpb
popf
cwtl
movsl
sbb
repnz
mov
scas
aas
xchg
xchg
daa
jnp
roll
mov
js
jmp
dec
out
ret
jle
out
orb
inc
mov
int3
ret
and
push
inc
sbb
sbb
mov
mov
push
scas
or
or
pop
xor
hlt
xchg
rcrb
cmpsb
xchg
in
push
sub
movsb
scas
push
into
lret
push
fs
adc
jecxz
push
lret
inc
in
gs
sub
add
stc
or
and
sbb
fcompl
lods
xor
repz
cmp
std
hlt
pop
cmc
and
jl
jecxz
and
or
sbb
xchg
sbb
loop
enter
popf
insl
sub
mov
xchg
stos
fisubs
and
lods
mov
subb
mov
cmp
dec
inc
pop
stc
jp
mov
and
lret
lret
fdivrs
repz
lret
dec
or
in
or
icebp
adc
and
pop
push
add
es
iret
out
fnsave
shlb
pushf
dec
mov
push
push
cmp
sub
inc
fwait
std
jg
jne
shrl
xlat
sbb
das
mov
push
outsb
or
es
xchg
sub
dec
aas
xor
inc
xchg
pusha
hlt
mov
int
ds
mov
shll
cli
xor
enter
jmp
cmp
stc
cmc
mov
jge
inc
jnp
pop
gs
cmpb
add
or
sub
sub
bts
icebp
xor
in
stos
rclb
bound
inc
push
inc
push
pop
rorl
mov
fstp
mov
cmp
fwait
lcall
cmpsb
xchg
fldenv
inc
lret
shrl
int
jns
cmpsl
jno
dec
adc
insl
leave
in
orl
cmp
jg
mov
push
insl
lret
arpl
int3
int3
pop
subb
push
sub
inc
lret
xchg
imul
sub
pop
mov
fdivrs
movsb
mov
cmp
lret
addr16
in
js
mov
pop
cltd
mov
shlb
sarb
mov
pop
dec
movsb
mov
fmuls
cltd
dec
sbb
ret
cmp
lea
out
xchg
das
stos
es
in
es
pop
mov
push
test
insl
jmp
sti
testb
outsb
mov
mov
or
test
sub
lcall
mov
sbb
sbb
lahf
mov
fnstsw
sbbb
xor
jns
or
inc
test
shr
notb
and
mov
sti
stos
mov
and
or
xor
fsubl
sub
neg
int
mov
and
push
xor
sbb
inc
insl
sub
rcl
rclb
lret
sub
inc
fstpt
lea
icebp
pusha
xor
cltd
pop
jecxz
mov
stos
and
xlat
js
aad
aam
sbb
loopne
add
outsl
push
cmp
push
or
sub
repz
pop
xchg
pop
add
mov
jl
mov
add
popf
clc
sbb
jae
jge
repnz
inc
add
cmp
mov
sbb
mov
inc
mov
mov
dec
adc
dec
les
pop
mov
addr16
ret
bound
push
xor
and
jbe
mov
xlat
fdivs
or
xchg
sub
lds
sbb
jbe
lahf
xchg
sub
dec
jl
push
mul
push
cmp
in
cmpsl
frstor
pop
lahf
idivb
outsl
mov
xor
lock
add
xlat
jg
adc
push
loopne
sub
adc
in
mov
fnstsw
enter
sbb
in
jno
and
mov
fchs
sub
test
dec
into
data16
jecxz
cwtl
sahf
in
push
in
add
xchg
fucomip
lock
sbb
or
iret
cld
in
pop
xlat
mov
mov
in
push
jmp
add
adc
hlt
fdivs
xchg
call
mov
ret
fs
nop
and
add
jne
add
xor
jmp
xchg
cmp
in
cwtl
in
stos
jg
int3
stos
mov
xchg
das
sub
dec
dec
cmp
ds
out
in
lahf
cwtl
fisubl
cmp
into
movsb
mov
mov
lock
push
mov
rorb
test
icebp
xchg
das
mov
das
fldenv
add
test
push
fldt
dec
loopne
lds
imul
int3
xchg
pop
sbb
jbe
insb
jle
cwtl
out
and
sbb
fwait
mov
pop
addr16
mov
xchg
and
rorl
cli
xchg
xor
push
in
inc
fwait
sub
jecxz
fiaddl
add
xlat
movb
notb
cwtl
dec
in
adc
insl
mov
je
cmp
test
loope
inc
push
jmp
xchg
je
enter
adc
out
test
sbb
fbld
dec
out
sbb
test
nop
imul
decb
dec
insl
and
cltd
cmp
jae
iret
dec
aam
sbb
clc
push
and
ret
fcmovb
add
mov
mov
cmpsl
inc
roll
mov
push
scas
inc
loopne
mov
lock
dec
add
pop
fcoml
ret
inc
sbb
out
cli
cmpsb
les
aaa
xchg
std
test
xor
ss
and
pop
in
add
cmp
jo
nop
xor
mov
cld
out
dec
stos
pop
ficoms
mov
jno
cmpsl
addr16
enter
jmp
sbb
std
push
mov
imul
pop
inc
pusha
cmp
test
and
cmpsb
popf
xchg
sbb
pop
es
leave
push
or
fldcw
daa
mov
jno
dec
mov
add
std
mov
push
add
xchg
in
cs
fcomps
rep
mov
arpl
add
test
mov
pop
lahf
jp
add
or
and
push
ljmp
inc
push
scas
mov
xchg
in
out
jecxz
mov
xchg
mov
dec
repz
lods
cmp
jl
into
stos
inc
rcl
mov
shlb
fsubl
lods
mov
add
adc
das
or
xor
push
or
bnd
lret
pushf
out
xor
punpckldq
mov
cmpsb
mov
inc
cmp
mov
push
and
sbb
cmp
adc
and
pop
divb
dec
adc
xchg
jnp
inc
int
push
scas
fldt
rep
in
stc
add
jae
and
cwtl
lret
mov
inc
mov
mov
xchg
in
movhps
ret
imul
lahf
adc
lret
hlt
xor
ret
jbe
js
std
push
or
cld
mov
mov
insl
or
dec
xor
jbe
xlat
mov
mov
shll
pushf
dec
cld
push
jmp
push
enter
js
mov
mov
ss
xor
std
mov
pop
fisubs
test
add
outsl
rcrl
mov
out
fisubs
xor
test
inc
cmp
ja
and
inc
push
pop
jo
scas
leave
mov
jp
ljmp
lock
dec
lcall
fnstsw
dec
sbb
mov
aaa
rcrl
ret
mov
out
dec
out
or
mov
pop
mov
adc
mov
cmpsl
dec
popa
sub
xor
nop
jbe
mov
or
mov
mov
data16
repnz
jecxz
popa
clc
popf
mov
adc
and
lock
flds
dec
pusha
fcomp
cmc
or
into
cmp
in
cmp
insb
insl
fdivl
je
leave
xor
pop
pop
pushf
mov
mov
jle
adc
daa
cltd
mov
pop
push
push
cli
gs
pop
out
outsl
push
js
xor
jbe
outsb
stc
test
push
add
enter
xchg
aad
dec
repnz
and
in
push
push
andb
in
xchg
push
mov
cs
push
mov
adc
aam
popa
clc
jl
cmp
inc
sub
lahf
sbbb
sbbl
xchg
sub
in
test
loop
imul
scas
inc
or
xor
jl
mov
sbb
xchg
repnz
inc
dec
daa
outsl
dec
popa
test
fmuls
repz
dec
xor
call
jge
hlt
lods
push
loope
insl
and
sbb
push
jo
iret
ds
inc
or
mov
or
push
dec
sbb
je
pop
cld
adc
or
pushf
push
jb
faddl
bound
adc
shrb
mov
dec
in
rcll
test
repnz
jmp
in
lahf
jbe
jbe
cmp
test
popf
mov
xor
fdivr
cltd
or
add
xor
xor
sbb
test
jmp
mov
jnp
push
pop
cld
sarb
mov
add
xchg
xor
orl
in
mov
add
push
dec
cwtl
insb
mov
xchg
mov
mov
mov
movsl
out
lret
es
test
dec
mov
pop
mov
dec
rclb
std
test
dec
adc
push
add
inc
test
push
push
fistpl
and
sub
sub
dec
sbb
notb
jmp
xchg
sub
dec
and
mov
cmp
and
jno
jns
dec
push
or
cmp
shr
and
dec
in
inc
hlt
ljmp
mov
fisubrl
pop
and
jecxz
jge
loope
and
push
sub
aam
jbe
adc
movsl
ret
dec
xchg
jp
mov
cmp
iret
sbb
add
imul
jne
sbbb
push
sti
xor
lds
add
pop
test
in
adc
pop
add
inc
pop
sbbl
lret
jb
jo
adc
mov
mov
fisubrl
popa
pushf
out
sbb
push
mov
add
push
inc
aam
sbb
cmpsl
mov
and
mov
cmp
mov
test
push
and
imull
xchg
fwait
shrl
enter
call
or
stos
inc
aam
add
ljmp
ficomps
subl
xchg
adc
test
xor
arpl
popf
lahf
adc
ret
xor
pop
out
aam
iret
mov
fstl
pmaxub
nop
or
mov
dec
out
inc
jo
sub
daa
lcall
dec
mov
xor
mov
rclb
xchg
inc
movsl
fdivl
inc
std
and
adc
sub
mov
rolb
in
out
ss
dec
mov
ret
sub
sbb
cmp
and
pop
outsl
hlt
jne
ret
cmp
dec
inc
dec
scas
je
je
xchg
pop
test
in
lcall
pop
or
fisubl
sbb
xor
popf
jbe
fs
mov
cld
pop
in
push
xorb
sarl
sub
xor
cltd
mov
push
inc
xlat
sbbl
lods
lock
push
add
ret
popa
and
into
cmpl
cmp
cmpsl
imul
sahf
cmp
mov
imul
jns
mov
mov
jle
or
ljmp
and
push
mov
ret
shrb
dec
dec
rclb
sbb
mov
jns
and
scas
cmp
in
pusha
loopne
jmp
rcl
jl
push
in
pop
lahf
loope
xchg
movsb
je
or
scas
cmp
jl
pop
dec
inc
lahf
bnd
and
jecxz
pusha
adc
data16
xchg
outsb
lret
and
mov
stos
jo
xchg
sub
push
les
les
inc
aas
repz
call
xchg
lahf
movsl
out
test
cli
or
adc
sbb
pop
shll
das
clc
or
cmp
jle
mov
ret
mov
and
stc
movsl
mov
mov
ret
pusha
cmpb
sbb
jo
movsb
adc
jns
sub
push
push
shl
ret
cmp
sub
out
stos
sbb
pusha
das
loop
cmc
repz
mov
shr
bswap
test
xor
loop
mov
add
sub
pop
test
inc
in
push
repnz
pop
mov
push
sub
sarl
push
mov
mov
cmp
cmp
ds
xchg
mov
jne
mov
sarb
jae
adc
pusha
push
jno
int
sub
push
decb
js
mulb
jle
std
cmp
xchg
mov
lock
and
dec
in
out
pop
lahf
insb
dec
notl
aas
shlb
ss
jo
push
ret
fdivl
testl
ja
call
cltd
aaa
add
cmpsb
lcall
insl
sub
popa
jno
cmp
jae
shll
clc
mov
out
rcl
or
mov
or
mov
insl
mov
imul
ljmp
leave
xor
dec
outsl
aam
clc
popl
shrl
adc
testb
jge
cmp
pop
jmp
out
popf
pop
mov
imul
sub
popl
or
add
js
or
push
mov
fists
mov
sub
sahf
lcall
js
loop
ret
loopne
mov
xchg
jmp
test
mov
and
xlat
jle
pop
jno
or
dec
daa
in
mov
xchg
and
subl
cmp
jb
dec
stos
pop
sti
aad
push
aad
lods
dec
fcoms
in
movsl
sbb
ret
hlt
les
lds
adc
jmp
mov
cld
inc
aas
push
cmpl
adc
xor
sbb
and
inc
bound
inc
cmp
mov
push
ja
push
sub
pop
ds
mov
sub
daa
push
pop
push
fistps
lods
mov
push
or
push
cli
inc
push
mov
outsl
dec
push
push
push
nop
loop
lds
add
dec
test
into
sub
bound
adc
inc
adc
das
decl
pop
int3
out
pop
and
jp
hlt
mov
mov
push
sbb
imul
and
lahf
std
imul
shrl
cmpsb
sbb
jnp
cmc
cmp
dec
cs
mov
and
lods
xor
inc
cmp
mov
jecxz
mov
jl
mov
cmp
cmp
inc
sbb
mov
stos
jno
out
fnstenv
jno
mov
ficoml
push
sbb
dec
icebp
adc
mov
pusha
aad
xor
cmpb
adc
lods
xor
lahf
stos
stos
or
push
out
sbb
push
push
imul
ja
cli
loop
xor
cs
mov
pop
mov
jbe
mov
movups
push
pop
and
lods
fmull
jmp
es
aaa
sbbl
push
clc
fdivl
push
jo
popa
rcl
cmpsb
mov
pop
call
dec
push
sub
jecxz
rcrl
in
or
imul
mov
loope
popf
ret
int
jns
imul
sub
mov
outsl
shr
ja
in
cwtl
loop
mov
push
sub
jp
push
scas
adc
lret
push
sub
jo
or
jp
test
jno
push
mov
mov
je
lea
xor
push
or
ds
imulb
add
sbb
jb
dec
jecxz
ja
mov
push
cmpsb
xchg
jle
int3
shrl
add
mov
mov
movsl
cmp
in
ds
sbb
add
mov
fsubr
ss
xor
pop
into
or
mov
cmc
push
lods
dec
jecxz
orl
int3
xor
push
or
mov
leave
insb
sti
xor
popa
je
xlat
mov
push
pop
adc
loope
jnp
inc
jle
test
mov
jne
push
into
lods
mov
xchg
cld
andl
cmp
push
inc
and
hlt
fdivl
out
pop
iret
and
jae
pop
sub
lea
sub
sbb
fstl
jg
or
fldt
or
mov
pop
cs
ffreep
addl
ja
or
jae
sub
bound
mov
imul
jmp
sub
dec
shl
dec
and
or
sub
rclb
mov
lret
scas
rorb
sti
sbb
in
js
mov
out
pop
jno
sbb
and
and
mov
aaa
dec
xlat
shlb
je
stos
sbb
test
mov
data16
insb
les
pop
pop
and
push
fwait
mov
adc
test
jp
fwait
dec
rclb
inc
xor
or
dec
ret
mov
jl
nop
out
sahf
rclb
mov
mov
and
das
sub
bnd
rcrb
cmpb
flds
xor
pop
dec
andl
jo
insl
into
fsub
addl
hlt
add
pop
je
pop
jae
test
pop
mov
or
movsl
cmp
cmp
sti
aaa
push
sbb
cltd
sub
xchg
sub
push
jno
sbbb
lock
stos
xchg
push
repnz
jns
fimuls
ss
push
iret
mov
mov
cld
stos
push
popf
sub
testl
dec
jmp
ljmp
push
inc
jae
mov
xor
inc
push
lods
pop
sbb
stos
orl
movsb
or
aam
subl
in
fucomp
mov
add
push
nop
pop
inc
je
test
test
fstl
fdivrl
or
pop
jge
sbbb
pop
repz
add
insl
aaa
mov
fistl
pop
hlt
or
call
jmp
lret
fimull
dec
jg
push
cmc
sbb
cmp
mov
jp
adc
aam
imul
scas
or
dec
mov
out
push
cmp
movsb
nop
mov
and
jp
sti
in
inc
adc
fcomps
lahf
xchg
mov
push
movsb
aas
movsl
cmp
dec
testb
lret
cld
add
movsl
and
das
decb
xor
js
repnz
pop
mov
leave
xor
out
xor
sub
rclb
xor
sahf
lods
fsubr
xor
push
push
repnz
adc
xor
test
push
push
leave
xchg
sbb
scas
sbb
inc
stos
and
push
outsl
sti
xchg
xor
mov
xchg
xchg
jns
adc
imul
in
iret
or
shl
in
push
pop
add
jnp
lret
mov
pusha
ss
pop
stos
jbe
dec
sub
cmp
jb
sbb
fs
ss
das
mov
jecxz
fcompl
pop
imul
mov
divl
mov
lahf
lods
int3
xchg
jl
shlb
aad
icebp
cmp
xor
xor
push
adc
mov
push
shrl
push
shlb
out
fadd
shr
xchg
enter
and
xchg
sub
ret
imul
sbb
inc
xor
and
mov
fnstsw
inc
dec
int
out
outsb
mov
adc
cmc
jnp
push
jae
inc
mov
inc
pop
ss
jne
sub
in
xchg
add
or
push
adc
or
pop
fs
fstpl
aaa
int
pop
ds
fwait
lds
inc
cmp
cmpsl
cli
push
mov
push
repz
xchg
add
mov
lock
push
inc
cmc
out
adc
xor
je
aam
mov
gs
outsl
pop
in
xor
je
test
mov
cmp
inc
and
rcrb
push
cmpsl
cli
inc
or
nop
jle
mov
cmp
inc
in
nop
add
mov
cli
out
aad
stos
inc
iret
sbb
iret
andb
outsl
cwtl
rcr
mov
jecxz
ja
mov
fadds
cltd
pop
cmpsb
lret
mov
mov
xorl
fidivl
xchg
inc
sub
icebp
cmp
dec
sub
loop
ds
mov
roll
xor
imul
push
push
fldenv
bound
subl
or
sbb
hlt
ret
ss
push
cmp
pop
add
inc
mov
sub
in
in
nop
jmp
out
pop
lahf
in
xchg
add
mov
push
jb
adc
adc
ja
inc
mov
pop
pusha
mov
shlb
es
repz
aam
sbb
push
fwait
ret
fnsave
xor
and
aad
in
inc
and
inc
scas
dec
lret
lret
loope
ss
data16
lods
inc
sbb
xchg
dec
adc
inc
pop
add
aad
stos
adc
movsb
lahf
bound
test
lds
xor
mov
xor
inc
cmpsl
lds
sub
das
mov
cmp
scas
sbb
icebp
outsl
imul
bound
stos
aas
mov
add
rcrl
insl
les
dec
aad
jmp
push
xchg
inc
enter
lods
dec
ret
jecxz
dec
pop
stc
cmp
daa
inc
xchg
test
ss
insb
mov
fwait
in
imul
cmpsl
mov
inc
mov
rorb
lds
fidivl
orl
out
inc
mov
mov
popa
add
arpl
jge
sbb
xor
sbb
inc
xchg
fidivl
test
mov
mov
imul
sbb
lcall
and
shlb
outsl
jne
movsb
cs
ret
xchg
cmp
add
cmp
jl
mov
adc
lret
lret
aas
lret
push
stc
or
pop
mov
mov
aam
cmp
cmc
inc
dec
dec
repnz
mov
in
fstps
mov
cmp
imul
daa
xchg
seto
inc
or
cltd
dec
sbb
push
fs
fdivr
mov
xor
test
jmp
or
sub
sbb
insl
sub
clc
iret
movsl
mov
mov
mov
xor
loop
sbb
ds
gs
test
test
cwtl
notb
rolb
adc
push
js
xchg
rcll
mov
or
mov
dec
stos
rcrl
ljmp
push
xchg
adc
das
cmp
fisubl
mov
inc
ja
imul
ds
pop
cwtl
and
cs
pop
dec
std
jae
mov
fidivs
push
mov
jo
or
pop
ds
clc
cmpsl
jns
nop
daa
insl
pop
xor
iret
sub
add
shll
lods
mov
cli
repz
sbb
clc
xor
xor
bound
xor
mov
fcoml
mov
je
ss
adc
fisttpl
cmp
iret
sbb
stos
lds
jne
push
insb
out
xchg
xchg
mov
mov
test
sbb
xchg
and
cli
rcrb
mov
sbb
ja
cmp
jl
cmp
loopne
xor
mov
dec
push
ljmp
out
test
repz
or
shrb
sub
mov
rep
incl
sub
loop
xchg
and
test
pop
ret
mov
aad
mov
pop
cmp
pop
xchg
mov
ffreep
mov
jecxz
pusha
mov
mov
cmp
mov
sbb
mov
int
test
lds
cmpsl
fwait
cmp
cmp
jmp
test
fcmovnb
cmp
inc
fdecstp
mov
aaa
xor
sbb
test
and
xchg
xchg
sub
adc
scas
inc
shll
into
movsl
lret
mov
lods
loop
repz
mov
scas
leave
movsb
pop
cmpsl
pop
inc
jle
add
mov
mov
xchg
movsl
fs
testb
xor
lods
push
xchg
push
cwtl
fcoml
fnstcw
jmp
inc
inc
lods
js
add
test
pop
les
add
lcall
or
or
fnstenv
out
mov
std
rclb
cmp
jnp
pop
jmp
icebp
insb
xor
out
daa
push
mov
ficoml
repz
pop
fists
test
in
mov
mov
push
es
sbb
mov
push
dec
fbld
xor
aas
sbb
imul
fnsave
mov
lret
cmp
and
sub
sub
add
mov
adc
mov
mov
outsl
dec
inc
fsubrs
rcrb
bound
jp
xchg
mov
cmp
adc
xchg
addr16
out
loope
lock
lock
xchg
jg
cli
clc
cmpsl
test
mov
pop
add
movsb
dec
fs
jl
jle
std
aam
int3
scas
push
jae
or
lods
jb
fbld
inc
and
imul
adc
ss
repz
add
mov
fidivl
cmp
add
xor
xor
in
gs
rorb
scas
fcmovnb
fimull
and
loop
push
and
fxch
jp
cmp
pushf
xor
mov
mov
ror
bound
sub
aaa
jmp
jp
jp
lea
or
cmp
dec
mov
mov
sbb
adc
sarb
push
cmp
inc
scas
pop
adc
xchg
jo
scas
es
stc
fisubrl
or
andb
mov
mov
sbbl
loope
ds
insb
test
int
rol
aas
mov
sahf
stc
pop
xchg
out
push
ss
or
sbb
ss
push
enter
xchg
xchg
mov
psraw
clc
jo
ficoml
jecxz
dec
rcrl
fxsave
ficompl
lock
repnz
and
adc
dec
xor
xor
imul
mov
iret
xchg
aam
dec
mov
sarl
xor
add
dec
fwait
mov
lds
jbe
nop
jae
mov
ljmp
ss
push
sti
add
xchg
scas
fdivl
fcoml
sbb
add
push
in
cmc
arpl
inc
nop
xor
mov
test
mov
xchg
xchg
mov
jb
mul
sbb
mov
out
and
daa
dec
add
out
or
mov
sti
inc
testb
sub
stos
out
repz
cmpsl
adc
lret
pop
jbe
in
push
push
pop
xchg
mov
lds
push
insb
icebp
lods
lea
out
mov
ret
push
sbbb
test
ret
add
add
nop
fidivrl
hlt
outsl
jnp
outsl
addr16
lock
in
repnz
bound
cld
aas
mov
movsb
and
sbb
out
mov
mov
cmp
stos
subb
adc
fcomp
mov
les
jns
dec
std
cli
insl
or
inc
decb
sbb
mov
mov
pushf
cmp
xchg
loop
or
jp
js
mov
scas
xchg
arpl
scas
ud0
insl
in
arpl
arpl
push
push
stc
pop
aam
fisttps
xchg
mov
ret
nop
cmpb
or
mov
in
pop
neg
in
sub
arpl
mov
xor
jns
pop
addr16
xchg
das
addb
xor
arpl
ficompl
jle
inc
lea
js
add
test
inc
adc
and
mov
sub
dec
fidivrl
xor
imul
xchg
xchg
push
mov
pop
or
add
dec
sti
cs
add
pop
push
lret
adcl
bound
jl
adc
aaa
in
inc
es
mov
and
sub
cmp
pop
fsubp
or
dec
mov
lret
call
dec
push
ret
mov
xchg
imul
xchg
stos
mov
rcr
and
cmpsl
in
sbbl
sti
or
loopne
adc
addl
dec
xchg
mov
aas
ss
cmp
int
aam
cmp
enter
mov
test
repz
mov
xchg
cmc
inc
mov
or
jl
test
mov
dec
jae
push
xor
mov
and
xchg
push
popf
enter
addl
push
push
std
xchg
inc
bound
adcb
cmp
and
adcb
mov
mov
popa
cmpl
or
bound
adc
mov
popf
subb
adc
mov
sahf
fnsave
lret
loopne
adc
push
add
mov
xor
push
test
mov
cmpsl
int
add
test
in
jno
clc
iret
insb
xchg
push
out
pop
popl
and
push
mov
inc
stos
mov
dec
pop
inc
lods
enter
cmp
pop
xchg
les
dec
popa
xor
in
sbbb
push
pop
inc
mov
inc
test
jnp
rorb
out
and
inc
sbb
lret
bound
cld
inc
cmpsb
dec
jbe
mov
test
popf
vunpcklps
mov
loopne
sti
mov
shlb
mov
das
xchg
and
push
clc
insl
jg
inc
cmp
pop
cmp
xchg
sub
fldenv
pop
pop
xor
jl
sub
mov
xor
lret
int3
icebp
daa
jbe
data16
adc
or
testb
fadds
es
ds
cmpsl
push
mov
cmp
push
int3
push
std
mov
ret
loopne
add
les
ss
xchg
out
scas
pusha
pop
mulb
dec
jge
pusha
lret
xor
push
sti
push
push
cmp
lds
and
fnstcw
mov
test
lods
shrl
push
leave
lret
and
addb
lock
fistpll
fistpll
shrb
jp
fmull
mov
icebp
out
xchg
sbb
jl
enter
push
add
inc
es
add
jecxz
inc
call
jle
mov
lods
xchg
cs
mov
mov
xchg
and
shr
popa
je
sbb
adc
jle
test
mov
les
fwait
sti
pop
jecxz
shll
shrb
and
pushf
push
mov
jge
fiadds
sbb
aaa
shrb
push
insb
push
jle
mov
mov
jns
xor
lea
in
and
je
clc
add
enter
sti
jl
mov
ss
pop
insb
insb
push
inc
push
xor
subl
gs
je
mov
mov
pop
xchg
stos
int3
in
push
dec
mov
cmp
ds
scas
mov
mov
in
scas
lods
mov
push
or
fisttpl
adc
sbbb
push
mov
inc
xchg
sub
addl
mov
data16
iret
outsb
and
sarl
dec
outsb
mov
mov
pusha
push
jl
mov
subb
mov
ljmp
jecxz
jmp
push
dec
and
sbb
gs
add
xor
cmp
mov
rorb
rcl
rorb
push
mov
pop
out
adc
idiv
sbb
sbbb
clc
mov
sbb
cltd
xor
fcomps
push
inc
pushf
cltd
xchg
mov
and
iret
loopne
push
dec
mov
push
mov
lret
jae
ja
js
adc
jno
scas
daa
les
inc
or
jbe
fbstp
push
jp
fdivrs
push
ljmp
or
std
pop
jnp
rep
sti
or
andl
inc
stos
pop
out
fsubl
inc
and
into
sbb
mov
mov
adc
ret
lds
enter
adc
inc
jle
das
stos
and
jns
push
and
and
xor
dec
pop
ds
out
dec
aaa
and
leave
rep
push
cmpsl
ret
or
je
adc
mov
mov
ret
or
add
cmp
aad
mov
cmpsb
add
and
dec
or
jns
xchg
inc
cmpsl
xchg
adc
daa
lahf
ss
ficoms
sub
inc
inc
sub
adc
pusha
adc
pop
inc
sbbl
mov
add
roll
daa
adc
cmpsb
scas
cmp
xor
dec
bound
fcoms
dec
sub
adc
pop
pushf
inc
aaa
or
ss
or
jb
push
xor
mov
xlat
outsb
test
sbb
cmpsl
ss
push
push
outsb
sbb
outsl
sub
cmp
inc
std
test
xchg
adc
cmp
pop
shrl
int3
pop
jbe
and
popf
stos
mov
das
sbb
lea
pop
adc
movsb
cmp
subb
jae
mov
jnp
idiv
mov
idivl
sbb
jle
xchg
das
bound
cmp
pop
mov
lods
pop
repz
int
rcrl
ds
dec
mov
mul
push
cmp
mov
jmp
test
xsha1
cmpsb
or
jle
mov
mov
or
aam
push
mov
es
cli
fiaddl
or
fnstsw
jo
xor
lock
inc
mov
outsl
enter
sbb
adc
xor
sbb
dec
add
mov
mov
xorb
scas
sahf
or
ds
pop
mov
xchg
out
ds
divl
outsl
jo
ret
rcrb
ja
ja
or
sarb
lock
pop
push
or
dec
hlt
dec
and
ret
ja
stos
inc
outsb
adc
leave
mov
imul
jns
adc
int3
cmp
and
ret
iretw
lret
sub
lret
ss
mov
pop
mov
sub
jno
pop
sub
xchg
pop
in
pushf
faddl
mov
push
adc
push
adc
inc
fisubl
push
push
shrb
fwait
das
int
aam
xchg
inc
sti
nop
pop
sar
pop
mov
pop
jg
jle
pop
daa
xchg
pop
in
push
and
push
or
andl
adc
mov
inc
push
add
xchg
or
lock
outsl
mov
push
push
add
cltd
xor
pushw
mov
or
push
repnz
leave
ds
lahf
adc
mov
lcall
test
sahf
stos
in
mov
push
call
mov
or
in
sub
add
mov
dec
icebp
insl
mov
mov
mull
ja
jne
jmp
jecxz
cli
pop
aaa
mov
jp
pop
and
or
fstps
xchg
push
stos
dec
pusha
jb
shr
sub
add
imul
xchg
addr16
js
popa
cmp
lahf
sub
mov
adc
cmpsb
inc
js
imul
addr16
mov
in
cs
das
pop
lds
lds
mov
addr16
mov
push
inc
imul
inc
test
inc
in
push
and
push
nop
dec
sub
ss
xchg
mov
icebp
ret
fwait
jb
addr16
fsubrs
adc
shll
cmp
ret
outsb
xor
xchg
add
lods
push
jae
mov
pop
data16
push
push
dec
push
jo
xchg
int
add
pop
out
stos
mov
xor
insl
jge
add
ja
mov
mov
push
cmpsl
mov
xchg
and
and
mov
int
mov
jl
repz
xchg
sahf
lods
mov
rcrl
icebp
mov
jl
push
flds
out
cmpsb
std
loop
addl
inc
cs
and
neg
mov
push
outsl
repz
adc
add
mov
sbb
xor
mov
mov
lcall
push
or
es
dec
inc
pop
inc
inc
jl
and
orb
call
xor
push
mov
add
int
popa
sbb
push
xlat
mov
stos
jecxz
xchg
sub
push
lret
rolb
rol
cmp
data16
push
sub
mov
xchg
adc
movsl
outsb
add
call
or
and
adc
aaa
mov
mov
dec
fidivs
add
inc
inc
fstpt
dec
shrl
movsb
imul
or
mov
ljmp
out
dec
push
pop
inc
xor
jge
fsubrl
jne
dec
mov
insb
lret
adc
lret
and
or
fisubl
push
inc
lcall
in
xchg
xor
clc
es
push
out
aaa
xchg
cld
stos
cltd
mov
test
pop
arpl
pushf
add
scas
aaa
jg
jo
sub
pop
cmp
repz
and
mov
and
iret
and
add
inc
add
pop
and
mov
lret
sbb
mov
add
nop
dec
jle
stc
out
pop
or
xor
stc
fnstenv
dec
daa
inc
aad
idivl
sti
clc
add
jmp
cmpsl
dec
push
decb
sbb
xlat
sbbl
or
js
shrl
out
popa
sbb
inc
hlt
cmp
dec
imul
rorl
mov
clc
jno
mov
adc
jbe
cmp
sub
dec
pop
scas
bound
and
andl
mov
cld
mov
mov
setle
scas
out
cli
mov
mov
push
je
add
addl
dec
cmp
or
cwtl
repnz
mov
mov
rcrb
sbb
mov
xor
femms
sti
iret
popf
sub
cmp
mov
xchg
popa
rorl
push
cmp
push
jae
push
and
xchg
dec
in
aaa
xchg
cmp
mov
pop
xor
fs
push
jl
aas
mov
jno
mov
pop
pop
scas
jl
add
and
cwtl
popa
xor
stos
push
xor
fwait
add
jl
mov
ret
pop
lds
push
or
push
adc
test
xor
addb
cld
dec
fucomip
adc
jnp
dec
loope
push
mov
lds
bound
add
mov
rclb
idivb
cmp
aad
lods
jge
dec
insl
inc
inc
lahf
sub
shll
imul
xchg
mov
sub
push
or
out
das
shl
xchg
xlat
sahf
das
sahf
decl
sub
add
add
dec
mov
stos
je
test
cmp
aaa
or
jmp
xchg
push
push
mov
pop
fs
sub
sub
ret
addr16
adc
xchg
pop
lret
cli
and
imul
dec
add
ds
xchg
pop
or
stc
and
pop
into
test
inc
mov
lock
daa
lcall
sub
mov
cmp
stc
call
cmp
fdivl
outsl
mov
or
fstl
pop
dec
fwait
repz
sub
call
dec
movl
lahf
adcb
cmp
insl
push
incb
jg
lods
mov
push
inc
movl
das
cltd
repz
cmp
sub
sub
xor
lcall
jle
in
add
xor
or
shlb
imul
push
jle
das
cmp
jo
and
add
fidivl
insb
subb
dec
or
sub
mov
sbb
xchg
cmc
inc
dec
call
inc
fs
xor
dec
dec
jmp
adc
or
xchg
leave
test
fldenv
or
xor
push
bswap
sbb
jno
dec
iret
gs
xchg
lock
fsub
xor
sub
sub
dec
dec
cmpsb
sbb
jecxz
scas
adc
adc
sbb
sub
mov
dec
xor
mov
outsl
mov
bound
loopne
adc
adc
sbb
repz
test
jp
jmp
inc
test
and
ss
fbld
cmp
shll
test
jne
or
out
shll
dec
xor
cmp
dec
loop
and
imul
jns
fsubrs
fwait
cmp
sti
xlat
shrb
lret
ffreep
pop
jns
shlb
sbb
loope
push
mov
mov
xor
and
bound
movsb
mov
outsb
mov
mov
outsb
cmc
mov
pusha
jne
cli
push
andl
jp
dec
scas
cmpb
cmp
rorb
test
xlat
cmp
jne
js
sub
inc
cltd
pop
repnz
sub
jns
scas
dec
or
jo
xor
push
imul
xor
xor
xchg
dec
push
mov
arpl
xchg
ds
inc
insl
mov
shlb
call
and
xorb
sbb
mov
dec
mov
pop
xchg
stc
or
xor
mov
cmp
int3
repz
ficomps
sub
cmpsl
pop
lock
inc
data16
push
adc
xlat
inc
popf
inc
xor
sub
inc
fidivrl
fdivrs
adc
adc
xchg
testb
jp
sbbl
jp
out
stc
mov
cmpsb
cmp
and
add
pop
xchg
sub
test
aam
fbld
lret
xorl
pusha
mov
cmpsb
stos
mov
pop
cs
lea
pop
add
cltd
jl
and
fbstp
jnp
bound
mov
mov
out
mov
pop
aam
shrl
xor
fisubrl
pop
dec
cmp
push
mov
jecxz
insb
mov
mov
jecxz
inc
and
inc
into
loope
fistpl
scas
or
ss
lcall
lcall
int
int3
lret
std
jge
dec
out
mov
repz
rorb
dec
jg
loop
and
aad
testb
push
or
jbe
push
test
dec
sti
xor
mov
sbb
loop
dec
sub
addr16
adc
inc
jns
mov
mov
enter
addr16
and
mov
xchg
sub
jno
sub
cs
pop
outsb
jle
shll
or
out
mov
cmp
cwtl
mov
adc
sarb
cmpsl
sbb
sbb
pushf
movsb
mov
es
testl
sub
sti
jbe
jmp
dec
clc
jno
testb
incl
pop
stc
lods
fiadds
dec
std
ret
mov
sbb
jle
adc
aad
dec
mov
jecxz
fcoml
enter
cmp
arpl
outsb
jnp
mov
shl
jle
fcoms
icebp
sub
xlat
mov
mov
mov
stos
push
add
movsl
xchg
ds
mov
mov
mov
push
jecxz
mov
shl
ss
xchg
fiaddl
push
cmp
inc
test
inc
fcmovbe
daa
xorl
push
mov
sbb
lret
and
mov
clc
stos
mov
lock
andb
mov
mov
dec
mov
mov
les
mov
minps
inc
outsb
push
push
shr
sub
inc
inc
stos
mov
mov
pop
fwait
xchg
fadd
inc
cwtl
pop
cmc
leave
shlb
jl
ret
sahf
loopne
jle
push
aad
rol
cld
lcall
jle
cmp
push
stos
push
sti
adc
fildll
pop
jmp
jae
push
repz
and
mov
mov
aad
jg
xor
daa
mov
pop
ret
stos
test
jmp
loopne
imul
daa
std
mov
hlt
xlat
mov
lret
add
movq
mov
mov
and
std
or
dec
dec
rcrb
jns
dec
cmp
or
test
sub
inc
cmp
hlt
mov
das
cmp
pop
dec
adc
and
xchg
jl
sbb
inc
popf
pop
adc
icebp
insl
sub
add
fidivl
mov
xchg
add
daa
mov
fmul
ret
or
cltd
mov
dec
cmp
aad
rorl
fstps
mov
adc
imul
imul
fldenv
jmp
push
and
loop
dec
test
and
pop
dec
out
jecxz
xchg
pop
sub
mov
outsl
shlb
jge
mov
lea
cmp
dec
xchg
inc
inc
push
mov
test
xchg
sbb
or
or
call
iret
mov
mov
inc
fisubl
mov
mov
and
mul
adc
mov
cmpsl
push
sub
mov
adc
xchg
sub
dec
movsl
setno
adc
rcrl
sub
aad
stos
pusha
fistpl
inc
push
scas
leave
adc
int3
ljmp
mov
ret
or
aam
or
adc
outsb
push
inc
loope
mov
lds
and
out
les
jecxz
mov
inc
movsb
mov
push
movsl
lods
xchg
xchg
aaa
mov
jecxz
lahf
data16
xchg
les
addl
pop
insl
pop
cmpb
push
xchg
dec
lods
test
pusha
mov
leave
es
lret
flds
popf
mov
pop
and
jmp
or
repz
les
xor
notl
and
xchg
lret
lcall
xchg
jae
imul
jmp
inc
pop
jb
cmp
cwtl
stos
or
data16
cmpsl
cmp
fstl
dec
hlt
mov
or
and
pushf
subb
icebp
mov
fsubr
push
push
ljmp
inc
fisubl
and
mov
popf
loope
lcall
push
cld
push
mov
popl
mov
cmp
test
push
xchg
aaa
or
jnp
inc
dec
out
inc
ja
into
test
leave
mov
popa
clc
push
cwtl
out
xor
rorl
pop
xchg
stos
nop
lret
xchg
pop
jmp
xchg
jne
js
push
mov
pop
mov
call
repnz
cli
ja
cmp
and
insb
mov
inc
adc
mov
es
xchg
sbb
out
sbb
adc
mov
dec
sarb
or
enter
ljmp
lret
dec
aas
dec
out
gs
cmpsb
in
pop
repnz
imul
lock
ja
ja
mov
cwtl
in
dec
dec
out
mov
fsubrp
pushf
pusha
lods
lea
cs
pop
cmp
adc
jnp
or
jmp
movsb
xorl
cmpsb
movsb
sub
push
outsb
cmp
pop
sub
xchg
iret
xchg
jmp
push
cltd
and
mov
in
or
jno
or
lock
xchg
xchg
or
cwtl
lods
mov
push
cltd
sub
clc
xorl
lea
dec
mov
sar
jl
dec
fwait
and
jecxz
jnp
fwait
insb
cmpsl
movsl
shll
sub
jne
push
loope
xor
or
push
cmp
popf
fs
outsb
add
fs
movb
ss
xor
clc
adc
or
adc
or
jl
xor
push
and
fwait
test
mov
mov
mov
pop
jl
and
jl
gs
ja
scas
inc
jnp
js
fldt
cmpl
cs
push
mov
ficomps
lods
pop
aas
in
into
in
mov
inc
push
fwait
xchg
xchg
ret
mull
sub
add
shlb
push
inc
icebp
outsb
test
sbb
cmp
movsb
popf
pop
jmp
sbb
pushf
ret
pop
lahf
hlt
dec
daa
icebp
adc
test
out
dec
or
not
aaa
xchg
xchg
mov
ret
repz
out
xchg
or
cmpsb
xchg
aaa
das
fcoms
push
adcb
sub
fdivrl
call
fstps
pop
bound
mov
jno
les
xchg
push
addb
push
popf
push
push
rol
inc
and
pusha
out
lods
clc
addl
leave
sub
add
cmp
jno
xchg
push
stos
jbe
cmp
xchg
lock
xchg
stos
mov
rorb
push
repz
ja
jmp
mov
dec
and
nop
push
outsb
cmpsb
cmp
aas
ret
jle
ljmp
rcr
cmp
xchg
int3
popl
sbb
les
dec
repnz
cmpsl
push
sbb
nop
mov
lds
mov
mov
jg
clc
mov
cmp
jg
add
fsts
aad
in
cltd
les
pop
sub
pop
in
clc
loope
jbe
outsl
add
pusha
cmp
jns
cmc
pop
jp
lahf
mov
repnz
xor
sub
insl
ja
xchg
loopne
jb
sbb
int
push
cmpsb
jb
cwtl
and
fidivs
sub
pop
aas
negl
ficoml
cmp
mov
jmp
lods
rclb
inc
jecxz,pt
adc
add
pop
sub
pop
inc
rorb
xor
add
fucompp
jae
or
or
cmp
sti
test
mov
lock
std
in
mov
movsb
mov
incl
cmp
xchg
add
sbb
fistps
dec
add
lock
int3
lret
push
movsl
andl
push
inc
icebp
dec
cld
jbe
lods
sub
out
jle
cmp
mov
push
jmp
lock
or
fsubp
ret
jl
out
inc
push
xorb
lds
pop
outsl
fucom
rorl
sub
inc
daa
cmp
xor
ja
incl
mov
lret
inc
sti
lret
popa
xchg
lods
lahf
sub
pushf
pop
mov
sahf
dec
push
mov
dec
mov
mov
xchg
imul
lock
in
fidivrl
shll
enter
push
add
push
orl
lcall
orl
ja
push
test
lret
mov
add
mov
aam
add
addr16
pop
add
push
lret
xchg
sbbl
sub
cs
inc
inc
mov
shrb
cmp
xchg
push
add
cmc
divb
push
ds
pop
sbb
push
aas
or
xchg
jge
lods
push
mov
aaa
int
sbb
xor
pop
mov
sbb
sbb
iret
mov
push
push
test
psllq
into
das
add
icebp
dec
fldl
cli
insl
ror
cmp
sbb
inc
sahf
popa
add
shrl
loopne
inc
jge
inc
fbstp
lcall
cwtl
sub
xlat
mov
and
inc
mov
jmp
call
inc
xor
fwait
mov
out
daa
pop
in
push
inc
and
ss
cmpsl
lds
test
je
xchg
test
xchg
scas
xor
and
adc
xchg
roll
ljmp
jmp
jecxz
in
pop
addb
out
loope
frstor
jns
stc
pushf
fs
cltd
addr16
stos
add
jns
cmc
mov
dec
adc
dec
push
aas
rcrb
pop
and
dec
mov
jmp
pop
icebp
mov
push
js
mov
xchg
pop
ds
xor
test
cmp
push
outsl
push
xchg
sahf
or
in
jecxz
clc
jne
xor
dec
and
pop
clc
nop
mov
ret
outsl
lea
lss
cs
lock
cltd
aad
cwtl
popf
xchg
mov
mov
repz
les
xchg
lcall
ds
push
sub
inc
fst
add
fs
outsb
add
insl
sti
daa
cmp
pop
fwait
out
or
andb
xchg
outsb
ror
jnp
sub
add
jmp
das
push
hlt
mov
repz
loop
lock
add
mov
dec
push
bound
mov
andb
scas
jno
test
hlt
scas
xchg
mov
enter
pop
lods
fcoms
arpl
add
stos
push
sub
adc
and
dec
dec
inc
pop
stos
mul
xchg
pop
dec
sub
pop
roll
cmpsb
lock
cmp
mov
jle
rcrb
mulb
fisttps
loopne
adc
scas
jne
popa
lock
sub
push
add
movsl
xchg
stos
jnp
aaa
rcll
pushf
and
inc
dec
loopne
sbb
mov
push
mov
and
mov
imul
mov
pop
push
test
push
fwait
xor
add
sub
mov
gs
push
and
push
pop
lahf
and
sub
xchg
push
cmc
mov
jmp
lock
popa
mov
adc
outsl
cltd
adc
and
stc
sub
jg
and
cmp
push
ja
int
addb
add
cmp
rcr
mov
jg
std
in
push
pop
cltd
fdivs
jb
je
push
sahf
pusha
push
stc
mov
adc
inc
pop
das
and
lds
xchg
int
pop
jp
cmp
mov
cmpsb
pusha
xor
insb
lcall
icebp
loope
jg
cmp
cli
mov
pushf
iret
std
add
and
fucomi
les
and
fimuls
insb
mov
jecxz
add
add
inc
out
add
fldenv
lret
mov
xchg
jmp
mov
mov
or
xchg
xchg
icebp
push
ljmp
add
daa
jns
lods
sub
inc
xor
insl
jno
pop
ds
xchg
cmp
xchg
xchg
or
xchg
and
test
js
add
mov
add
pop
pop
xorb
push
popf
lahf
xlat
cmp
sarb
imul
add
sbb
imul
cmp
fdivl
fs
pop
loopne
dec
insl
stos
add
cmp
repz
xchg
xchg
add
out
jnp
lahf
xchg
cs
addl
enter
and
rolb
inc
mov
jge
or
add
push
xor
or
mov
lahf
cltd
xchg
out
jecxz
out
ja
bound
mov
mov
insl
adc
cmpsl
test
popf
sub
dec
mov
cwtl
inc
jbe
mov
or
push
stos
mov
jge
jecxz
jp
adc
jne
push
in
ljmp
mov
popa
jnp
outsb
decl
or
cmc
insl
idivb
mov
mov
repz
xchg
les
cmp
inc
pop
jge
dec
aaa
into
aas
mov
xchg
sub
xor
in
test
push
xchg
dec
mov
jg
pop
out
lahf
mov
sub
jge
mov
int
cwtl
cmp
lock
sbb
jns
clc
xor
jg
mov
and
push
xor
inc
jo
stos
xorl
or
shlb
push
push
sbb
xor
ss
psubb
flds
shlb
mov
in
cmp
lcall
pop
icebp
hlt
rcl
test
fistpl
lret
sbb
cmpb
adc
sub
nop
outsb
xchg
sub
xor
mov
sub
scas
xor
jp
popf
in
cmpl
jno
lock
push
cltd
jmp
pop
out
cmp
sub
add
jo
mov
icebp
mov
and
sbb
lcall
je
sub
push
jb
js
inc
into
push
loop
aaa
fidivrl
xchg
stos
pushf
or
pop
rcl
push
or
push
push
jp
and
add
mull
jae
loopne
ret
fwait
inc
fidivs
lret
insl
ret
mov
pop
sarb
mov
mov
ja
inc
xlat
mov
push
xor
sbb
and
movb
add
dec
gs
jo
test
rol
orb
les
inc
hlt
mov
mov
xchg
call
mov
rcr
add
filds
cmc
mov
add
and
into
sub
loope
orl
clc
mov
inc
stos
sahf
test
inc
aam
jns
cmp
fsubrl
sub
fcoms
test
cwtl
mov
test
sti
mov
lahf
xor
loopne
mov
push
mov
xlat
mov
push
jp
push
ret
outsb
mov
ss
insl
stos
lock
imul
movsl
cmp
popf
js
fisubrs
cmp
dec
das
inc
in
pop
cmp
add
movsb
jge
sbb
push
ds
cmp
sbb
pushf
movsb
dec
popl
jp
and
jg
pushf
pusha
sbb
pusha
cmp
out
or
xchg
popa
rorb
popa
and
inc
flds
ror
lock
movsl
push
sub
ret
cmpsb
mov
mov
mov
sub
xor
inc
sub
das
pop
nop
sub
mov
test
fldenv
mov
into
mov
subl
xor
mov
in
xchg
push
repnz
dec
pop
push
xchg
js
sbbl
out
cltd
and
inc
pop
clc
xchg
pop
jecxz
sbb
jnp
inc
jmp
lret
mov
or
inc
into
test
lcall
push
sti
sbb
dec
adc
sub
pop
popa
rcl
sub
dec
pop
mov
nop
les
loop
sti
pop
mov
icebp
ss
fcmovnbe
rcll
push
lock
adcl
mov
jne
inc
ret
sbb
mov
stos
sbb
mov
and
push
in
lods
jno
cmp
inc
inc
bound
cmp
sub
xor
pushl
dec
xchg
lretw
inc
lcall
ds
xor
imul
push
nop
cmp
ret
pop
daa
and
push
mov
jns
test
pop
fwait
test
add
and
mov
stos
cmp
arpl
mov
in
pop
and
inc
push
clc
subl
or
adc
mov
mov
or
ret
sar
stc
and
push
inc
sub
and
mov
retw
scas
cmp
cwtl
cmp
or
jp
xor
js
xchg
jp
or
mov
fs
xchg
dec
outsb
pop
outsl
add
cmp
lods
inc
insl
inc
lret
int
cltd
imul
cmp
add
sbb
push
insl
mov
pushf
loopne
jmp
aaa
shr
jo
orb
or
xchg
cmp
out
push
mov
dec
leave
xor
cmp
inc
add
insb
mov
shlb
ss
push
adc
cmp
mov
xor
pop
out
sbb
inc
leave
inc
pop
cmc
jnp
xor
cmpsw
loop
addb
lds
std
cmpsl
ret
imul
push
out
out
leave
or
jae
sbb
pop
push
jbe
orl
jg
shr
iret
jo
insl
cmpsb
or
cld
mov
mov
adc
sti
xchg
in
in
hlt
scas
dec
push
sub
es
mov
xor
jp
sub
test
pop
dec
mov
or
pop
rcr
int3
dec
sub
mov
mov
sub
dec
mov
push
fsubrs
mov
mov
mov
xor
or
fcoml
jg
int
sbb
sbb
push
pushf
and
or
sub
aas
jns
js,pn
sub
add
add
jle
stos
cmp
cmpsl
fs
stos
sub
cmpsl
hlt
or
inc
pop
repz
sahf
mov
lods
inc
jmp
xor
sub
push
mov
in
or
mov
mov
jne
bound
pop
int
lret
jmp
jb
push
mov
in
imul
inc
mov
push
loopne
es
adcl
aas
cld
mov
enter
push
sub
lds
push
push
aaa
push
dec
fiaddl
jmp
mov
mov
push
inc
fimuls
in
pop
in
gs
push
mov
pusha
shll
mov
movsb
testl
jo
popf
das
inc
out
or
in
arpl
mov
xchg
jl
rcrb
ret
fucom
les
decl
push
xor
jecxz
cs
inc
push
dec
mov
or
in
pop
lds
mov
dec
shr
ds
shl
std
imul
xchg
mov
out
add
cli
lcall
rcll
repz
sbb
ss
cmp
push
std
dec
mov
cmp
int3
mov
or
jl
movsb
popa
rcll
mov
pop
icebp
mov
mov
sti
xchg
aaa
repnz
cmpsl
xchg
and
pop
cld
xchg
test
stc
scas
out
fmuls
or
popf
out
out
push
popf
pop
dec
shll
push
and
sbb
sub
xor
call
jge
repnz
jecxz
xor
sahf
fsubrl
lods
fs
adc
pop
adc
inc
mov
cmp
popa
ret
or
movsl
push
and
push
movsb
stos
mov
scas
cmc
rolb
pop
sbb
sbb
mov
scas
sbb
mov
nop
leave
add
add
subb
test
sti
xchg
push
pushf
lret
push
jmp
mov
pop
pop
add
outsb
add
fcomps
sub
inc
mov
push
cwtl
inc
aaa
int3
rcrb
das
cmp
iret
pop
mov
xchg
xchg
insl
add
mov
insb
sti
push
jne
mov
inc
stc
and
lret
dec
pop
xchg
push
ss
lea
and
or
sbbb
jle
loope
mov
out
sub
mov
out
cltd
jmp
pop
jecxz
test
fldl2t
rcll
fnstcw
dec
lods
cli
daa
cmp
sti
cmc
sbb
or
adc
dec
mov
arpl
mov
and
mov
pop
push
sub
out
mov
pop
repz
mov
roll
add
mov
xchg
xor
ja
cmp
loop
xor
lock
add
sub
add
test
lcall
jge
test
ds
dec
mov
xlat
dec
mull
xchg
mov
xor
mov
out
xor
push
addr16
scas
nop
adc
push
shrl
js
jns
jle
inc
push
or
mov
push
xor
iret
add
es
push
sbb
pop
addr16
xchg
cltd
aas
mov
jge
sbb
fcomps
filds
dec
mov
dec
push
xor
push
add
shrb
scas
sub
aaa
mov
adc
sub
mov
cmpsb
adc
xor
jo
xchg
js
inc
in
inc
jg
ljmp
inc
lods
cmp
jmp
cmp
mov
in
mov
int3
push
push
clc
pop
scas
mov
dec
xor
into
mov
push
jo
xlat
sbb
add
xchg
ja
and
inc
cmp
ficompl
loopne
sub
movsb
cltd
sub
lds
cmp
xor
xchg
sbb
sbb
jmp
cmp
arpl
pop
ss
sbbb
nop
sti
cmp
fsubl
add
fdivrl
and
cmpl
mov
dec
lcall
pop
cmpsb
pop
cmp
mov
push
xchg
pop
icebp
les
js
int3
jns
lea
aam
xor
lea
pop
sub
jge
mov
lds
pop
adc
fidivs
adc
inc
aaa
scas
inc
push
pop
sub
lock
inc
pop
call
addl
das
dec
or
xchg
shrl
gs
aad
addr16
jo
ja
or
das
jecxz
test
scas
dec
dec
cmp
xchg
pop
leave
call
in
test
stos
jl
mov
shll
xlat
or
or
or
sbb
jmp
clc
cmp
pop
out
pop
adc
sub
mov
sbb
dec
xchg
inc
subl
or
jnp
sbb
rorl
sarl
and
shr
inc
xchg
mov
push
fadd
jns
dec
cmpsl
and
lahf
or
or
or
mov
push
jne
jmp
ss
mov
push
inc
stos
test
lret
push
jns
or
jl
test
jmp
xlat
sub
sahf
sbb
fcmovne
cld
push
inc
outsb
into
mov
mov
rclb
dec
jle
mov
sbb
mov
addl
push
cltd
lret
out
jecxz
cmp
add
aas
mov
sbb
or
pop
cmc
movsb
addl
mov
ret
outsl
cwtl
aam
leave
dec
jl
loop
iret
pop
dec
lret
mov
sbbl
cmp
mov
into
xor
push
push
std
mov
dec
fs
inc
imul
pushf
jns
add
outsb
add
push
in
sbb
sahf
jge
fidivs
mov
mov
and
mov
movsl
fmulp
and
add
inc
sahf
outsl
rclb
aaa
jecxz
cld
push
mov
fstps
xchg
add
xchg
dec
pop
imul
mov
push
pop
shrl
push
sbb
stos
and
pop
cmp
add
sbb
pop
jle
cmp
cmp
mov
xchg
ret
loopne
adc
add
mov
mov
popf
setge
xor
mov
dec
or
std
addr16
push
add
jbe
fistps
inc
imul
jo
sub
aam
hlt
rclb
jo
lahf
fdivl
pop
clc
jl
test
push
in
sarb
je
lock
sti
mov
sahf
sbb
sub
push
fildl
out
div
lods
inc
jmp
and
pop
mov
and
hlt
cmc
stc
nop
jecxz
sub
jns
jmp
xchg
lret
mov
dec
push
fnstcw
repz
push
sub
push
sbb
jbe
fnsave
jp
sub
arpl
mov
pusha
mov
fstl
mov
ret
cmp
ss
dec
mov
jae
jo
pop
push
xchg
xchg
ds
das
inc
insb
pop
cmp
jbe
test
cs
add
sbb
out
push
mov
insb
out
dec
out
ret
sbb
jecxz
enter
xor
xor
test
xchg
icebp
movsl
pushf
sub
jno
pop
loope
rcr
mov
dec
dec
jle,pt
pop
movsl
mov
pop
sbb
dec
sub
aad
adc
jecxz
call
stc
cmp
mov
or
mov
popf
pusha
sub
sub
pop
dec
stos
in
jo
sahf
out
lcall
sbb
add
pop
xor
mov
sub
and
popf
jge
lea
inc
ss
pop
jecxz
into
popl
cmc
stc
and
add
adc
cmpsl
nop
shlb
xor
xchg
inc
out
push
hlt
rcr
and
adc
addl
mov
jbe
loopne
xlat
addr16
add
sbb
addr16
sub
andl
and
add
shr
add
xchg
icebp
cmp
loop
fisubs
adc
mov
hlt
test
pop
cmp
mov
das
jb
and
inc
sub
sahf
leave
test
cmp
sti
imul
int3
jae
or
rep
movsl
cmp
repz
iret
fs
in
pop
das
xchg
adc
aad
popa
push
data16
jnp
and
ficompl
aad
push
fisttpl
cwtl
filds
stos
mov
aad
fildl
adc
or
push
mov
fcoml
sbb
mov
add
aas
sbb
sbb
shrb
sar
lahf
lds
jae
pop
push
cmpsl
add
push
mov
mov
dec
mov
and
jb
mov
xor
jae
pop
mov
scas
mov
jns
imul
icebp
movsl
std
sub
mov
call
xchg
cmp
fcoms
imul
std
pop
inc
inc
adc
dec
outsb
jp
imul
inc
jecxz
xchg
repnz
leave
xor
fnstenv
xor
jno
push
xor
pop
cmpsb
flds
test
dec
cmp
gs
xchg
orl
jno
aas
sub
int3
mov
aas
push
outsb
and
cmpsl
mov
inc
jecxz
or
and
shlb
stc
les
cmp
dec
mov
mov
or
in
mul
or
push
ds
and
stos
orl
jns
jns
dec
ret
push
jmp
xchg
call
test
stos
mov
in
xchg
xchg
mov
mov
push
fwait
push
dec
pop
pop
adc
and
outsl
and
aaa
xchg
and
pop
pop
popf
scas
sahf
lea
ljmp
insl
je
mov
inc
jo
addb
or
adc
test
ja
nop
repnz
or
adc
sub
push
mov
cmpsb
nop
fbstp
push
in
ljmp
pop
mov
jmp
repnz
cld
rcll
inc
sub
mov
jbe
lret
mov
popa
fs
aas
pop
push
int3
sub
mov
pop
jle
dec
daa
insb
add
mov
test
cmp
cmovp
repz
pusha
xor
imul
sub
mov
mov
dec
pop
ret
ret
ret
ljmp
ret
cmp
cmpsl
in
inc
push
mov
jg
ret
scas
call
das
sbb
sbb
scas
sti
inc
jne
lods
shlb
push
xchg
mov
imul
xchg
shrb
inc
cwtl
cmp
leave
dec
add
sarl
testl
test
stc
nop
and
dec
pop
xchg
jb
lea
adc
jl
int3
adc
push
or
lock
test
fcoml
push
fsts
je
mov
xchg
sti
pop
imul
arpl
push
fs
or
movsl
icebp
imul
int
xchg
add
fcoms
out
pop
sahf
xchg
ja
mov
ljmp
out
mov
push
call
movsb
lea
dec
dec
inc
xchg
aad
lea
movsb
mov
dec
jecxz
pushf
arpl
dec
pop
push
addr16
and
inc
rcr
movl
sbb
adc
es
add
xchg
shrb
call
push
ja
fsubr
mov
cmpsb
cmp
mov
fstps
mov
cwtl
imul
int
and
movsb
ljmp
jae
mov
enter
dec
and
outsb
leave
iret
push
aad
mov
popa
cmpsb
xchg
sahf
or
ss
out
or
js
xor
faddl
push
das
mov
xor
stos
in
sub
mov
enter
push
dec
dec
xor
fucomp
pusha
jp
int3
xchg
adc
push
add
cmp
popf
ffreep
inc
sub
push
push
nop
out
nop
sbb
sbb
fucom
das
cmp
cmp
out
or
out
mov
clc
jne
aaa
call
call
add
xchg
cmpsl
or
xchg
dec
pop
scas
mov
call
cmc
repnz
popa
mov
sbb
insl
add
cmc
outsl
ds
push
mov
es
in
add
sti
icebp
jo
pop
bound
sbb
cmp
cmp
ret
aaa
les
bound
lock
mov
leave
xor
repz
enter
ss
mov
mov
cmp
inc
dec
mov
pop
mov
fistpll
jno
hlt
jle
mov
sbb
out
dec
jns
mov
jne
xchg
and
mov
ret
inc
inc
hlt
scas
test
mov
and
icebp
lret
or
sub
rcl
bound
xchg
ljmp
push
rcrl
mov
sub
dec
mov
fildl
sbb
pop
jecxz
jbe
and
lret
mov
adc
test
inc
jmp
movsb
xor
mov
xlat
push
pop
xchg
mov
fbstp
fnsave
dec
fildll
or
data16
push
push
jo
fstl
push
popf
inc
and
in
xor
adc
inc
or
cmp
push
push
xor
jno
sub
rcrl
je
jbe
cmc
push
lods
test
adc
iret
addr16
xchg
out
sub
mov
fwait
xchg
dec
pop
or
adc
and
mov
dec
movsl
js
sbb
jp
jecxz
push
js
std
mov
rcr
outsl
mov
mov
inc
xor
ja
mov
mov
sbb
inc
pop
into
mov
fnstcw
and
ljmp
mov
ljmp
stos
je
pop
jnp
imulb
or
cmpsb
xor
jmp
adc
imul
mov
imul
sbb
pop
std
outsl
fcmovnu
jl
pop
dec
les
push
cltd
les
cli
stc
inc
imul
push
push
cmp
loopne
mov
pop
aad
pusha
repnz
xorb
add
jnp
das
push
rcr
push
movsb
inc
sbb
mov
xchg
cmp
sti
sahf
xor
loopne
mov
lock
rcr
int3
mov
shrb
xor
in
cmpsb
push
loope
dec
inc
lcall
inc
in
hlt
loope
std
popf
lds
add
pusha
mov
add
jmp
push
sub
jmp
pop
mov
in
jb
mov
pop
int
mov
out
mov
subl
int3
pop
lock
cwtl
or
ds
in
jmp
mov
andl
addr16
loop
addr16
lods
inc
inc
sub
aad
lret
jg
push
jno
dec
loope
mov
mov
inc
clc
andl
pop
mov
cmp
pop
push
xchg
pmaxub
xchg
and
pop
add
pusha
xorb
dec
fadd
adc
or
test
xchg
mov
mov
lods
push
icebp
or
cmp
nop
adc
sub
pushf
sub
sub
or
cmp
adcl
mov
xor
jae
popf
pop
dec
in
cmp
mov
cmpsb
fwait
pusha
sbbb
inc
fld
adc
push
mov
popf
push
mov
xchg
mov
and
or
test
mov
sarl
inc
push
or
insb
jmp
icebp
dec
or
out
push
mov
jle
cltd
scas
jecxz
mov
adc
outsb
or
mov
push
sbb
xchg
dec
shr
dec
inc
ficompl
sahf
paddb
cltd
mov
jb
pop
sti
in
xchg
mov
sbb
adc
jecxz
mov
push
or
jno
in
pushf
jecxz
test
jb
inc
movsb
mov
cli
cmpsl
scas
xchg
mov
leave
jae
jecxz
icebp
aam
shlb
cld
addl
xchg
push
or
idivl
cmc
mov
jb
movsl
pop
inc
enter
les
int3
sahf
in
lods
repnz
jl
jl
xor
aad
or
in
dec
xlat
and
lcall
xchg
stos
fs
sub
jp
mull
add
jb
push
stc
xor
pop
jb
lods
pop
out
pop
les
push
movsl
movsb
mov
push
popf
inc
adc
int
and
cwtl
mov
mov
dec
adc
or
iret
mov
stos
mov
insb
vucomiss
push
pop
ret
jg
lcall
add
or
rcr
icebp
cld
sub
push
jbe
data16
add
repz
addr16
mov
add
movsl
jo
cli
jne
sbb
xchg
add
js
lret
adcl
cmp
inc
in
inc
pop
push
adc
aas
lret
ljmp
xor
mov
incb
sar
pop
gs
sbb
ja
mov
imul
inc
xchg
ss
xor
and
mov
je
sub
and
cmp
and
int3
dec
std
adc
ss
fwait
dec
xchg
or
mov
or
jnp
push
sbb
out
ret
xchg
sbb
push
in
cmp
dec
stc
test
repz
stos
cmp
or
js
dec
fisttpl
cmp
xor
cmp
mov
cmp
lcall
out
jl
mov
sbb
lds
sbb
mov
jb
sub
push
cs
jmp
inc
adc
mov
adc
aaa
sbb
inc
nop
loop
dec
and
shlb
xor
ret
xchg
xchg
push
stos
lea
jmp
cmp
les
out
sbb
mov
leave
pop
and
inc
mov
out
lea
mov
mov
clc
cmpsl
in
xlat
dec
inc
pop
mov
in
dec
out
xchg
in
hlt
jbe
push
cmp
test
mov
iretw
mov
mov
xchg
in
mov
lods
mov
push
jmp
test
je
sub
sbb
dec
mov
adc
in
movsb
std
or
arpl
out
sub
mov
push
jne
divb
adc
dec
mov
add
inc
test
ret
push
push
mov
movsb
shr
lret
xor
push
jl
lods
in
clc
push
pop
xor
cmp
mov
jl
js
nop
mov
test
pushf
sub
aam
mov
mov
mov
push
push
pop
idivl
sub
xor
mov
subl
inc
or
inc
xor
lret
fstpt
inc
adc
stos
sbb
movsb
lahf
or
push
js
sub
mov
jmp
repnz
mov
and
sub
mov
arpl
sub
pop
jns
mov
and
fs
stos
adc
and
iret
add
adc
xorl
jns
cmp
fbld
cwtl
adc
aad
popa
or
ds
inc
jb
mov
sub
gs
xchg
out
fisttps
std
aad
ss
and
sbb
repnz
mov
jecxz
xchg
push
cli
or
aad
pop
xchg
and
lds
lss
pop
das
scas
mov
xorl
jae
xchg
or
add
call
fiadds
sbb
mov
movsb
and
mov
call
in
or
pop
fcompl
xchg
push
notl
xchg
mov
and
cld
push
or
jne
pop
jno
mov
fbld
cs
cmp
out
mov
xchg
inc
rcrb
sti
mov
or
mov
rcl
and
cmp
xchg
cmc
push
imul
xorl
dec
jb
sub
loope
dec
add
sub
andl
insb
enter
cmp
push
rcrl
xor
add
inc
fldl
enter
hlt
inc
xchg
xor
rorb
jle
lods
push
sub
inc
xor
push
adc
sbb
jb
mov
pop
xchg
dec
loop
dec
js
ds
fidivrs
jns
xchg
imull
cs
xchg
aad
push
icebp
push
add
cltd
jbe,pt
sub
or
por
dec
dec
out
push
lret
jbe
mov
sbb
adcl
jg
push
ja,pn
ljmp
popa
pusha
dec
mov
int
in
add
or
push
jo
or
lods
xor
scas
push
add
idivl
add
sbb
cwtl
or
cmp
arpl
lods
fwait
sub
and
outsl
cli
xchg
mov
jg
mov
pushf
aam
hlt
out
inc
sbb
sbb
notl
xchg
add
adc
inc
sbb
mov
adc
xchg
pop
bound
jl
dec
out
xchg
out
nop
daa
outsl
sbb
fnsave
sub
jecxz
les
cmp
sub
fidivs
ljmp
pushf
icebp
insl
scas
lret
mov
xor
sub
es
cmp
je
add
push
and
fldcw
mov
mov
sti
and
jo
and
mov
inc
lret
sbb
arpl
mov
add
stos
mov
dec
dec
shlb
shlb
and
stos
xchg
stc
push
sahf
mov
roll
ffree
mov
ficoml
int
iret
js
pop
lahf
lods
xchg
cmp
fwait
or
int
push
or
jecxz
xor
xchg
sub
adc
inc
sbb
sub
clc
jae
inc
jecxz
jl
popa
mov
test
jl
enter
cs
lods
mov
in
pop
in
sub
jo
in
test
pushf
xor
inc
fisubrl
in
fisubrs
dec
popa
jl
push
and
cmp
inc
push
data16
mov
arpl
mov
jle
enter
shl
paddq
add
lcall
mov
and
mov
cli
insb
ret
sbb
daa
jmp
fcmove
leave
add
or
jp
mov
call
inc
ficoms
xor
cld
mov
cs
inc
fidivrl
pop
lcall
dec
pop
cld
jmp
jp
cwtl
fld1
aad
mov
scas
hlt
sahf
xor
data16
xchg
mov
lret
pop
popa
pop
dec
fistpll
nop
push
icebp
pop
push
inc
cmp
enter
fldl
inc
mov
subb
loop
mov
cmp
xor
adc
jmp
popf
in
call
sub
or
sub
dec
popa
aas
jle
std
inc
mov
sub
jbe
scas
inc
sbb
fnstsw
pop
jnp
push
push
imul
sub
jo
inc
mov
int3
xor
xchg
clc
or
adc
xor
push
rcrb
pop
outsb
bswap
loop
sti
xor
push
cltd
into
movsb
insl
xor
flds
pop
xor
jge
stos
cld
mov
push
or
sbb
mov
push
xor
das
cltd
mov
cltd
mov
cmpsl
fisttpl
xchg
sti
jbe
mov
mov
fldz
and
es
mulps
inc
xchg
mov
movsb
mov
mov
mov
mov
mov
js
pop
sbb
movsb
jmp
mov
jns
popa
mov
inc
mov
jb
xchg
out
or
loope
sahf
cmc
pop
cmpl
xor
inc
push
ss
pop
xorb
fwait
movsl
cmp
in
inc
sub
sub
cmc
pop
sub
or
mulb
pop
repz
pop
jp
inc
mov
sbb
or
mov
ds
cmpsl
inc
pop
xor
bound
shl
rclb
jbe
test
dec
jbe
xchg
enter
mov
in
imul
or
xor
lock
sbb
mov
mov
jp
shlb
mov
mov
leave
sbb
jmp
das
in
mov
idiv
sbb
jecxz
cmp
lea
and
cli
mov
jne
fadd
pop
in
mov
ss
rolb
sti
lret
lds
xchg
sub
out
jo
fisubrl
scas
sbb
xchg
and
pop
dec
cmp
inc
xlat
aaa
pop
mov
add
popa
sbb
jmp
xchg
mov
into
mov
es
outsl
fildl
sbb
sti
icebp
ret
and
xchg
push
sub
jnp
mov
popf
push
mov
cltd
push
jae
mov
xchg
mov
fwait
lods
data16
loope
mov
add
or
mov
push
pop
dec
loopne
adc
shrl
lods
push
stos
push
cmp
call
and
cmpsb
pop
sbb
add
sub
insl
push
dec
jge
divb
mov
sahf
mov
or
xor
test
mov
test
jne
mov
or
icebp
push
xchg
stos
xor
repz
push
cmp
cmp
aaa
in
and
shll
or
push
push
loop
inc
dec
popa
mov
je
shrl
gs
in
sub
idivb
xor
or
jbe
adc
fnstsw
add
int
mov
aad
cs
faddl
loop
movsl
inc
pop
jmp
int3
push
addr16
cmp
cmp
call
or
cmp
pop
sub
mov
shll
repnz
adc
sub
shrb
out
cwtl
push
mov
pop
cmp
or
dec
jecxz
cli
std
or
cmp
xchg
movsb
in
insl
popa
adc
sbb
int3
fst
out
push
out
daa
inc
out
das
xor
add
shrb
and
imul
pop
pop
xchg
pop
xor
test
xor
add
xchg
popf
mov
cmp
pusha
lock
dec
inc
push
pop
fcoms
push
adc
push
lret
sbbb
mov
and
push
pop
imul
jle
add
dec
jnp
lods
mov
sbb
in
popf
lods
or
push
inc
or
mov
or
das
sarl
mov
mov
adc
xorl
xor
sbb
or
mov
push
xor
enter
movsl
js
xchg
pop
adc
sbb
ret
adc
cltd
jbe
mov
mov
rcr
data16
xlat
cmp
movsl
icebp
xchg
mov
popf
out
lahf
pop
jb
jne
int3
jbe
or
aad
pop
cs
mov
push
dec
bound
push
repnz
jns
push
nop
nop
mov
sbb
in
cmp
adc
mov
ljmp
mov
dec
jl
movsb
xlat
mov
mov
bound
mov
movsb
aam
jecxz
cli
jno
add
add
jl
adc
lea
mov
sahf
pop
insb
int3
xchg
cmp
std
gs
push
jae
cmp
adc
push
sub
cmp
and
enter
mov
mov
mov
lods
mov
test
lea
jg
daa
and
data16
stos
mov
push
test
test
xor
fstpt
push
outsb
ja
popa
sub
cltd
xlat
mov
push
jae
push
ret
sar
mov
xor
insb
jle
jl
add
xchg
adc
pop
cmc
xor
subb
iret
jl
cmp
dec
es
xor
in
dec
xor
adc
pop
ffreep
add
push
push
jno
insl
es
fisubl
xor
pop
adc
cmp
movsb
ja
lods
shlb
in
pop
pop
jmp
stos
pop
mov
xchg
push
divl
adcb
mov
mov
fs
bnd
cmp
mov
dec
sub
cs
jmp
push
or
mov
jecxz
adc
leave
fidivrs
inc
dec
jecxz
out
and
lcall
lock
jg
iret
mov
add
sahf
jne
cld
sub
fcompl
les
inc
sub
movsb
push
jmp
jb
repnz
push
jae
pop
loop
ljmp
inc
cld
dec
mov
and
xchg
je
stos
in
pop
mov
aas
mov
lret
lock
lods
cmp
divb
or
fidivs
pop
mov
shl
bound
push
ljmp
out
xor
adc
mov
xchg
xor
cmp
into
fwait
inc
sahf
mov
and
data16
aaa
add
or
lret
out
imul
and
scas
add
adc
mov
scas
and
xor
inc
lret
cs
jns
and
aaa
into
dec
aad
int3
out
inc
push
inc
repnz
stos
push
mov
xor
popf
ja
fs
mov
idivb
push
inc
andl
ljmp
push
mov
sub
cmp
sbb
pop
lahf
sbbb
sbb
jnp
inc
pop
out
dec
hlt
lcall
jbe
enter
jns
mov
lahf
pop
ja
lea
imulb
pop
cmp
dec
add
shlb
inc
push
out
ja
jge
daa
dec
jne
shrl
mov
leave
cmp
dec
aad
inc
fwait
lds
dec
xor
test
xchg
mov
fcmovu
je
pusha
push
shrl
add
inc
mov
pusha
adc
out
fldcw
mov
adc
inc
pusha
es
mov
outsl
out
xor
adc
arpl
iret
loop
add
xor
dec
cwtl
lock
sbb
push
gs
push
outsl
pushf
movsl
xor
sub
xor
aad
jae
movsl
dec
or
mov
ljmp
loopne
adc
inc
jl
push
cld
push
and
das
leave
mov
jne
dec
scas
insl
stos
fldcw
jb
fisubl
pop
push
inc
xlat
js
repz
or
cmp
sbb
pop
xor
and
repnz
lods
push
test
jo
mov
fiadds
iret
add
jo
pusha
fisubl
ret
mov
dec
in
and
imul
insb
jmp
sbb
in
inc
cwtl
jge
pop
jg
jp
into
sahf
sbb
lea
cwtl
and
mov
inc
dec
xlat
jle
call
inc
js
inc
mov
inc
mov
or
test
cmp
cs
mov
cli
test
mov
stc
inc
jp
ja
cmp
fwait
jbe
fwait
push
jmp
xchg
add
push
cmpsl
or
jle
ss
out
int3
sbb
push
mov
push
inc
pop
shl
shlb
dec
ljmp
sbb
stos
stos
cli
call
icebp
pop
mov
push
cmp
jno
outsb
add
cmpl
addb
xchg
dec
sarl
add
fnstcw
adc
xorl
push
mov
add
jecxz
adc
sbb
addl
ja
ret
dec
push
pushf
or
in
sahf
imul
dec
mov
and
pmulhuw
sub
in
ljmp
jbe
daa
bound
pop
sub
xchg
push
push
loope
icebp
push
jne
push
jnp
or
lahf
lahf
lock
lods
pop
hlt
adc
stos
add
add
ds
out
popf
pop
inc
arpl
into
cmpsb
or
xor
pop
js
inc
pushf
adc
icebp
out
push
fcompl
jns
cmp
xchg
mov
pop
jns
leave
cmp
stos
notl
xor
xchg
shlb
xchg
mov
call
ret
pop
cmpl
or
push
imul
jnp
ja
add
in
dec
test
dec
ret
jg
sbb
mov
or
xchg
push
loope
rcl
jno
cmpsl
ds
adc
lods
scas
out
mov
inc
xor
dec
scas
sbb
aas
push
popf
test
rorb
cltd
pop
sub
fidivrs
mov
mov
roll
ljmp
lret
mov
jp
xchg
xchg
stos
mov
push
or
or
out
test
jmp
ret
fadds
sbb
ret
pop
push
mov
stos
xchg
xlat
sub
jle
push
cmp
lahf
xor
daa
popf
xor
mov
mov
xor
ss
leave
test
mov
adc
repz
mov
out
adcl
sub
and
jo
aad
out
cmpsb
pop
frstor
je
shlb
or
cld
push
hlt
cli
jl
add
dec
out
mov
ljmp
xchg
xor
fmulp
push
fmull
or
scas
xor
mov
dec
in
inc
xor
mov
dec
pop
jne
pop
and
and
mov
test
ds
adc
pushf
lods
aas
sub
jns
ja
jnp
add
inc
andb
xchg
aas
ret
push
mov
cmp
cmp
add
jnp
cmp
and
push
cmp
ret
add
popa
adc
loopne
fmuls
xor
test
xor
nop
add
addr16
cmc
mov
pop
movsb
mov
cmpsb
int3
aad
add
aad
pop
leave
in
jae
push
mov
or
sub
dec
pushf
mov
inc
arpl
cltd
mov
shrb
xor
pop
pop
xchg
or
ret
lret
outsl
mov
mov
or
out
or
push
stos
mov
jae
negb
adc
lahf
dec
popa
ljmp
cmp
outsb
push
je
mov
xor
loope
mov
out
xor
mov
cld
jbe
test
cmp
into
scas
push
sahf
sub
dec
mov
data16
enter
std
xor
jecxz
mov
mov
pop
dec
lea
data16
adc
xor
cmp
xchg
mov
adcb
cmp
fidivs
out
fdivrs
dec
push
mov
scas
fnsave
push
pop
data16
dec
dec
mov
push
xchg
popf
js
lret
sbb
outsl
aas
dec
jp
pusha
inc
xchg
mov
ret
hlt
dec
aam
push
pop
adc
xor
lods
incl
fnstenv
repz
sarb
mov
test
mov
fadds
in
sbb
mov
test
mov
fdivl
push
mov
xchg
jb
arpl
xor
mov
push
push
popa
mov
adc
xchg
fldenv
mov
stos
xchg
sub
cmp
loopne
mov
cmp
shl
cmp
or
pop
outsb
cmp
testb
mull
int3
mov
popa
push
ljmp
jno
push
icebp
cmpsl
cmp
shr
psrad
sub
aam
sub
xchg
in
fisttpl
mov
push
mov
pop
test
data16
lahf
add
fldcw
ret
pop
mov
mov
sub
xlat
popf
sub
popf
popa
jge
cmpl
addr16
lods
hlt
dec
dec
cmp
call
mov
jg
push
iret
movsl
jl
pop
movsb
jns
lcall
dec
mov
pusha
ret
push
insl
cltd
mov
sub
inc
xchg
push
jmp
add
sub
fidivs
mov
add
jae
out
hlt
push
pusha
cmp
xchg
mov
sbb
fldt
lea
inc
mov
outsl
sub
or
imul
mov
add
repz
dec
outsl
ret
fidivrl
into
mov
int3
mov
xor
jnp
fs
or
test
inc
inc
mov
int3
pop
sbb
mov
sub
inc
xor
arpl
sahf
pushf
enter
xchg
movsb
notl
in
and
lahf
jbe
fucom
pop
xchg
push
pop
lret
pop
pop
jns
insl
loopne
lock
es
inc
ret
jno
push
test
aas
pop
out
sbb
or
xor
add
mov
cltd
stos
cmp
xlat
jle
mov
mov
or
scas
lret
cmp
scas
popf
mov
ficomps
cwtl
repz
sub
lcall
lret
movsb
jno
jne
or
cmp
outsb
ret
pop
pushf
xor
add
fimull
cld
push
push
sub
hlt
mov
cmpsl
inc
jae
pop
fwait
pop
aam
jge
pop
and
jge
mov
xor
out
popa
nop
xor
bound
bound
adcb
test
movups
popf
movsl
stc
je
ss
pop
pop
inc
jmp
xchg
pop
lods
adcb
sub
pushf
sbb
ss
jb
jmp
das
sbb
xor
xchg
xor
add
shlb
pusha
stc
jae
imul
sub
in
pop
mov
shll
test
jbe
xchg
or
in
mov
mov
insl
xor
jmp
psrad
pusha
cmp
insl
and
mov
or
mov
jnp
inc
insl
ret
xor
lret
inc
lods
adc
lods
call
fcmovbe
sahf
mov
data16
jge
clc
sub
xor
adc
test
bound
fcomi
mov
in
nop
mov
mov
inc
mov
xchg
inc
cmpsl
ret
push
sub
mov
inc
std
pop
mov
shl
je
dec
in
jns
add
jns
sbb
pushf
mov
mov
jne
sub
push
stos
xor
cmp
adc
sti
push
jb
imul
xor
je
push
jmp
jp
outsb
push
mov
pop
jno
push
ds
out
mov
jp
out
add
iret
arpl
clc
imul
insb
jbe
dec
jo
adc
adc
dec
pop
fldl
stc
aaa
clc
in
movsl
in
push
mov
sarb
aad
repz
shrb
ret
lahf
call
pop
fimuls
sti
popa
rolb
push
mov
mov
adc
inc
cltd
or
add
cmpsl
leave
xor
or
cmc
loop
aaa
enter
outsl
pop
mov
mov
jg
cmpsl
mov
ds
out
enter
outsb
pop
mov
mov
imul
mov
dec
aad
add
imul
jno
inc
and
fs
adc
shrb
mov
daa
xchg
lds
mov
bswap
lea
sbb
xchg
icebp
popa
loope
sbb
push
mov
mov
push
arpl
push
mov
mov
sbb
aad
add
sub
xchg
mov
sarb
adc
or
cwtl
cmp
push
jecxz
add
insl
data16
xor
shr
out
sbb
dec
icebp
icebp
jbe
cmpsb
iret
enter
out
mov
mov
jmp
mov
cmpsl
xorb
stos
cmpsl
gs
jl
and
jns
add
cmpsl
inc
popf
mov
pop
and
jl
jno
and
pop
pop
inc
incb
fmul
pop
fisubrl
xor
ja
mov
sbb
nop
lcall
clc
and
fcomp
xchg
mov
nop
jae
xchg
pop
xor
sub
pop
jmp
xchg
adc
dec
pusha
testl
test
icebp
push
dec
fistl
shlb
cmpsb
pusha
push
add
addl
sub
push
mov
pop
pop
lock
and
jbe
jl
out
incb
and
mov
mov
ret
add
mov
jle
lds
out
jl
or
mov
out
shll
inc
movsb
push
cs
les
cmpsb
lcall
sbb
xchg
push
out
push
xor
jg
push
add
loope
mov
js
and
lock
sbb
adcb
pop
pop
sub
daa
addr16
and
pusha
add
and
dec
fsts
fildll
mov
pushf
sub
cmp
cmp
dec
mov
out
lret
test
clc
sub
shrb
ret
mov
ret
imul
call
mov
div
lcall
into
push
iret
push
xchg
sbb
mov
cmpl
dec
push
lcall
mov
pop
fadd
sub
cmp
lds
frstor
xchg
cmp
imul
adc
into
rclb
jae
lea
jl
mov
fildll
out
shll
xchg
rolb
mov
pushf
mov
test
out
push
or
jbe
leave
pop
pushf
push
dec
out
fnsave
pop
ja
iret
fsts
frstor
jl
repnz
movsb
fstpl
out
lds
xlat
and
insb
sub
lods
aas
add
stos
mov
lock
jge
sarl
pop
mov
pop
jl
and
icebp
dec
loop
jg
inc
fiadds
lcall
dec
mov
dec
pop
rcl
mov
in
push
cmpsb
pop
mov
scas
ljmp
loope
pop
jp
aas
stc
adc
cmc
adc
popf
jmp
das
cmp
test
cltd
add
dec
and
adc
pop
xchg
pop
repnz
lods
dec
fs
jge
cmp
loopne
add
mov
lret
dec
notl
mov
leave
rolb
lcall
push
lea
insb
out
ficompl
adcl
shlb
movsb
pop
test
xchg
mov
mov
insl
dec
sub
fwait
in
jns
movsb
sub
imul
or
sbb
fcoml
jae
inc
lock
add
adc
pop
jo
xor
xchg
xchg
adc
dec
xchg
cltd
pop
mov
lahf
sub
dec
test
pushf
cmp
jo
ljmp
sti
jnp
cmpsl
cltd
movsl
xor
cli
pop
lret
adc
insb
mov
jmp
and
repz
push
std
movsb
or
adc
inc
lock
in
jb
movsb
and
or
lret
jl
lcall
lods
int3
cli
jge
or
xchg
mov
fstpl
jbe
push
fcompl
sub
fnstenv
sbb
loop
push
sub
mov
int
repz
movsb
rcr
pop
fiaddl
movb
pop
jno
mov
xchg
fs
xchg
cs
pop
cs
int
jnp
mov
or
scas
lcall
push
in
sarl
mov
sbb
lea
adc
js
xchg
push
cwtl
ret
push
mov
and
fisttps
repnz
dec
sub
sarb
add
loop
xchg
gs
or
xorl
out
jbe
push
inc
stos
inc
xlat
cs
fisubrs
sub
sub
dec
sarl
push
fs
fidivrl
call
movsl
jbe
adc
add
into
jb
sahf
pop
mov
nop
xchg
sbb
icebp
mov
mov
dec
cli
cmp
push
or
push
pop
orb
lahf
cli
xchg
int3
inc
orl
mov
out
mov
sbb
dec
cld
inc
cmc
mov
mov
dec
sti
fwait
out
jecxz
or
dec
in
mov
rcll
cmpsl
mov
sub
xor
pop
dec
mov
ret
ret
or
pop
sbb
xchg
movsl
dec
cltd
mov
jl
bound
fcmove
ljmp
fisubs
inc
clc
xor
jae
aaa
cs
xchg
std
fwait
sbb
lret
dec
mov
mov
cltd
xor
cmpsl
mov
test
jge
scas
shl
outsl
lock
or
mov
pop
adc
rol
xchg
sub
mov
xor
movsb
clc
jae
ret
cmp
cmp
scas
push
ljmp
fucomp
xor
xchg
pop
sub
shl
dec
mov
sub
rcrl
popf
mov
cmovbe
sarb
push
aas
pop
orb
jmp
xorl
ffree
jge
stos
pushf
dec
sbb
xor
mov
cwtl
das
sub
mov
cld
xor
lahf
into
adc
icebp
dec
sub
mov
loop
inc
int3
stc
pop
or
pop
in
loope
dec
or
aas
fs
ja
dec
rcl
je
cli
jns
and
adc
addl
out
mov
jp
dec
push
stc
in
popa
mov
push
je
iret
loopne
cmp
fidivl
or
sarb
js
cmpsb
inc
pop
out
inc
push
sub
cmc
int3
rcrb
xor
lea
or
xor
sub
adc
rorb
push
add
dec
clc
out
jg
call
xchg
loope
or
dec
adc
aaa
cmc
mov
nop
inc
mov
push
sbb
jnp
into
insl
shlb
dec
ljmp
mov
xor
cld
notb
jae
sbb
inc
sbb
movsl
cld
dec
jo
adc
inc
add
sahf
xor
dec
cmp
mov
icebp
xchg
and
push
adc
pop
inc
outsb
mov
movsb
dec
mov
mov
adc
adc
in
cld
xor
adc
pop
cmp
mov
test
lahf
adc
inc
das
adc
jge
push
out
sub
dec
push
test
jbe
shlb
adc
adc
inc
cmp
addr16
push
call
adc
ds
rorb
je
add
out
shrl
adc
gs
stos
xchg
sbb
pop
int3
fwait
cmpsl
ds
in
ljmp
negb
ljmp
rcr
je
test
lahf
cmp
xlat
imul
loope
mov
les
dec
xor
test
push
push
out
inc
mov
jmp
inc
loop
adc
inc
add
outsl
test
cmpsl
jle
inc
cmp
adc
test
add
fdivs
dec
pop
jns
sbb
inc
inc
inc
inc
test
stc
outsb
mov
mov
repz
outsl
mov
loop
pop
jns
jno
sbbb
sub
arpl
mov
adc
cwtl
mov
lret
xor
leave
jecxz
push
aaa
mov
stos
pop
mov
rcrl
cmp
xchg
in
or
roll
xor
add
call
xor
shld
dec
jl
dec
loop
jmp
fdivl
xor
imul
jbe
mov
std
popa
xor
js
scas
inc
xchg
xchg
je
stos
mov
inc
push
xchg
fidivl
xchg
xor
adc
jg
popa
mov
or
mov
scas
std
xchg
fstp
int
mov
jb
add
stos
cmp
add
aad
mov
in
fwait
mov
cmp
sbb
ret
sub
inc
or
mov
fdivrs
test
push
xor
insb
faddl
adc
jo
repnz
and
inc
or
ss
lock
loope
loop
andb
out
xor
jle
orl
or
push
dec
loope
push
mov
cmp
mov
test
jns
or
nop
and
push
fidivs
mov
push
sub
mov
fstpl
jbe
fiaddl
dec
repnz
aam
lods
cli
jns
sub
les
hlt
enter
push
pop
xchg
mov
cmc
cmpsb
mov
mov
loop
daa
fwait
jp
test
lret
hlt
lds
and
mov
or
jl,pn
dec
out
push
jl
xor
jne
adcb
adc
rorb
jp
sbb
jae
out
mov
push
jecxz
push
int
inc
sbb
jp
int
test
ss
popa
leave
jmp
or
xor
inc
cld
sub
lret
mov
test
mov
sub
dec
sbb
mov
pop
mov
fbstp
cwtl
enter
int3
test
decb
and
cs
adcl
mov
enter
call
fxch
addr16
or
mov
jnp
sti
fidivl
pop
jmp
xchg
test
mov
and
scas
fcmovu
mov
and
add
imul
and
adc
push
push
into
imul
mov
fwait
jp
test
jecxz
mov
mov
inc
mov
jne
inc
sub
test
and
xor
dec
fbstp
and
adc
and
sbb
or
rep
shl
pusha
pop
test
lret
in
sahf
mov
sub
mov
xchg
jl
push
mov
out
mov
and
add
cmp
pusha
pop
ret
in
sahf
popa
add
mov
pop
fs
outsl
pop
cmp
inc
in
xchg
inc
jmp
xor
inc
xchg
mov
push
mov
mov
dec
scas
aad
cmpsl
loope
push
adc
and
add
stos
mov
ljmp
leave
inc
mov
icebp
ljmp
inc
stos
jmp
jb
jg
inc
cmp
xlat
fcmove
xlat
mov
push
xchg
pop
cmp
mov
pop
push
push
xchg
stc
jl
int
int
stc
popa
add
scas
push
sub
es
cmpsl
push
popf
push
dec
push
sbb
and
push
mov
ss
je
dec
adcl
jb
lret
inc
push
and
in
mov
mov
pushf
gs
mov
mov
adc
shll
out
adc
or
xchg
addb
lods
push
in
and
mov
arpl
push
fisubrl
ljmp
jle
int
ljmp
add
cmp
jbe
add
cmp
das
jl
popa
icebp
es
push
ror
pop
or
jne
mov
cld
stos
push
fnsave
sbb
push
ret
ljmp
ljmp
add
mov
adc
mov
test
je
xor
and
mov
roll
add
adc
and
ljmp
setno
jnp
lahf
notb
xor
xchg
jmp
or
xor
fldcw
iret
mov
push
cmpsb
insb
or
push
dec
ret
test
push
popa
fsubs
lds
push
insb
add
sbb
rclb
test
int3
gs
ret
ret
jge
outsl
mov
shrb
repnz
dec
mov
sti
xchg
xchg
sar
push
add
xchg
mov
ret
ret
mov
pop
xchg
jecxz
xchg
pop
inc
jecxz
jae
push
test
int3
mov
addr16
pusha
aaa
cmpsb
and
icebp
mov
popa
add
shrb
add
inc
fsubs
pop
out
xchg
data16
aad
ja
inc
xor
mov
add
imul
ja
pop
lock
cmpsl
out
loop
sahf
dec
jl
repnz
ljmp
mov
jecxz
cmp
pop
lods
iret
xor
out
cmp
dec
push
and
dec
cmp
push
lods
sti
rcrl
jns
ss
mov
test
addl
mov
and
scas
popa
shlb
aad
adcl
cmp
mov
sub
cmp
add
dec
in
mov
test
js
fsubs
add
jle
mov
test
clc
outsb
leave
cwtl
and
push
mov
insb
sti
pop
iret
mov
test
dec
pushf
xchg
jo
test
into
and
mov
inc
push
cwtl
inc
cmpsl
and
lcall
jbe
bound
std
sub
mov
and
adc
xor
jp
gs
mov
push
push
imul
xor
xchg
sbb
cltd
stos
push
cmp
jl
pop
mov
jae
or
call
cmp
xchg
mov
rcrl
scas
sub
lret
addr16
inc
imul
mov
incl
icebp
xchg
jecxz
cwtl
cmp
inc
and
mov
adc
arpl
jb
repnz
add
cs
stc
imul
sbbl
daa
rcl
or
jbe
and
inc
xor
pop
mov
test
es
data16
je
fstpl
lock
in
lret
dec
enter
dec
stos
push
into
xchg
ror
mov
shrb
ret
pop
mov
pop
orl
xor
mov
xor
dec
and
pop
jb
lds
fmull
mov
inc
xlat
cmp
pop
push
pop
inc
fistl
mov
scas
in
push
lock
dec
jg
push
inc
inc
lret
ja
jge
cmp
ss
into
gs
push
push
mov
and
cmp
cltd
pusha
mov
mov
push
fwait
sub
fdivl
in
inc
adc
mov
jle
and
bound
push
mov
cs
lods
test
loop
jg
fnsave
shll
mov
shl
sbb
stos
xor
adc
fs
add
fistpl
jno
mov
js
jbe
mov
lret
lds
xchg
sub
or
cld
aam
mov
clc
sahf
pop
fcoms
shrb
cmp
jns
sub
or
inc
or
mov
or
pop
cmovb
dec
ret
hlt
sub
inc
push
sbb
mov
xor
inc
leavew
push
sbbb
ljmp
sarl
notb
movl
fs
xchg
cmpsl
test
pop
int3
push
or
ds
or
adc
lahf
lock
lods
xchg
int
cli
inc
cmp
clc
iret
sbb
or
jb
clc
andl
dec
mov
fwait
lcall
add
dec
dec
lods
lods
xchg
shlb
ret
shlb
bound
frstor
das
push
add
or
shr
sbb
sbbb
in
std
inc
in
int
fstl
push
imul
jmp
popa
clc
fs
or
arpl
add
cmp
jg
mov
xor
je
xchg
loop
mov
lret
mov
clc
pop
movsb
fisubrl
jb
jmp
cmc
cmpsl
out
scas
inc
inc
pop
jge
repnz
bound
cs
sbb
mov
sbb
push
dec
jg
jg
ficomps
or
push
cs
adc
sub
mov
mov
fdivrp
add
rclb
dec
xor
shl
sbb
out
fwait
mov
into
aas
sahf
out
outsl
jl
inc
push
xchg
mov
pusha
dec
sub
pop
lcall
decb
subb
jg
push
dec
mov
sub
pop
lock
pop
jno
xor
push
lock
outsb
sub
jle
fdivrs
jecxz
jge
pusha
mov
lret
fnstsw
or
scas
outsl
into
popa
inc
pop
repz
pop
movsl
iret
cmp
xor
mov
push
popf
loopne
into
mov
fidivrl
mov
test
xor
hlt
shr
adc
mov
rcl
test
daa
or
pop
push
xor
xor
add
cli
sub
xchg
sahf
mov
cmp
ds
rclb
mov
lods
movsb
ljmp
mov
movsb
inc
adcb
add
lock
xor
ja
outsl
scas
out
xrelease
cmc
pop
pop
add
push
cmp
jl
outsl
fs
sahf
mov
negb
mov
call
mov
pushf
pop
and
xlat
hlt
sbb
hlt
sar
mov
push
adc
pop
repnz
cmp
push
mov
aaa
and
inc
fmuls
pusha
sbb
adc
sbb
cmpsl
cmp
add
out
dec
lods
sbb
sbb
bound
cmp
xlat
aad
sbb
fists
add
sbb
pop
std
and
inc
sbb
aas
lods
sti
in
lock
mov
push
int3
xchg
adc
adc
xchg
sbb
mov
lock
into
fcompl
dec
push
outsb
test
sbb
inc
inc
xor
fidivrs
sbb
mov
outsl
ja
in
hlt
adc
testl
push
cltd
call
fwait
ret
and
fcmovnbe
mov
sbb
mov
and
mov
cli
jne
mov
scas
imul
andb
pop
mov
mov
shll
mov
idivl
movsl
mov
iret
fidivrl
pop
sti
xor
mov
add
xor
daa
fs
push
mov
dec
data16
add
inc
mov
mov
ret
in
out
push
sbb
leave
inc
test
fldl
add
out
data16
and
jg
aas
negb
add
mov
push
xchg
shrl
loope
in
cld
push
int
outsl
jp
andb
mov
gs
inc
jecxz
ficomps
inc
shlb
mov
fwait
cld
lcall
in
dec
loope
int
and
sahf
push
call
test
push
lods
cld
jne
icebp
aaa
jge
mov
int
inc
stos
cmp
in
and
xor
dec
sti
adc
inc
inc
push
add
jle
cs
sub
stos
dec
cmpsl
out
mov
ret
sub
lret
pop
jmp
dec
jmp
mov
or
icebp
in
jg
in
mov
lds
sbb
pop
and
stc
fsubs
orb
pop
push
mov
add
mov
and
aaa
int
cmp
and
cwtl
lahf
xor
lret
mov
cwtl
in
xlat
data16
leave
lcall
and
xchg
jge
mov
xor
add
adc
das
adc
int3
shufps
bound
repnz
rol
pop
mov
pop
mov
in
gs
mov
fsubl
pop
out
lods
cmp
call
and
cltd
adc
cltd
pop
cltd
jo
in
jl
imul
or
das
imul
lahf
in
pop
jg
add
adc
call
out
enter
adc
fsubl
mov
adc
jne
pushf
test
push
add
dec
icebp
insl
xchg
les
and
push
addr16
flds
push
imul
ficoml
std
fldenv
stos
pusha
sbb
and
sbb
test
dec
hlt
sbb
fnsave
fistl
dec
push
movsb
xor
stos
int
sbb
push
adc
adc
push
mov
std
ret
sahf
stos
jo
sbb
movsb
xchg
cmp
cmp
out
mov
dec
fbstp
std
adc
dec
xor
xor
push
sub
sub
fmulp
in
das
adc
dec
fidivl
xchg
mov
pop
arpl
or
scas
pusha
mov
xor
movsb
sbb
xor
mov
rorl
mov
sbb
jno
sub
xor
sub
les
insl
jecxz
mov
jo
in
pop
ja
sub
lret
xchg
pop
outsb
add
mov
or
push
scas
xor
int
fstps
movsl
retw
push
jbe
push
jge
cltd
mov
fs
sbb
adc
push
ret
mov
daa
out
insl
add
les
fildll
les
mov
das
inc
cwtl
sub
int
cmp
or
dec
loopne
je
adc
gs
dec
cmp
dec
sub
mov
lods
and
push
lock
push
xchg
int3
fsubrs
mov
cmpsb
outsb
push
pop
xrelease
jp
inc
lods
int3
inc
pop
inc
lods
push
repnz
ljmp
jno
push
and
cmp
or
pop
dec
mov
int3
push
push
adc
pop
push
insb
add
lods
and
inc
aaa
add
and
push
loopne
jae
and
xor
mov
stos
adc
jg
test
jl
scas
lea
sti
hlt
test
jno
call
and
loop
loopne
ret
pop
out
xlat
xchg
jno
xor
lock
leave
arpl
push
std
lods
cmp
pop
stc
cli
sbb
xor
sub
and
ret
movb
daa
jmp
add
sbb
aaa
or
imul
pop
or
fdiv
fs
in
dec
mov
pusha
fisubl
iret
xchg
sub
mov
inc
sbb
imul
push
push
cmp
push
cmpl
cmp
mov
lcall
out
add
inc
xor
arpl
xor
es
pop
jns
test
jbe
cs
and
sub
jbe
inc
out
dec
or
push
divps
stc
mov
pop
movsb
and
jnp
imul
xor
and
cmp
inc
test
inc
neg
xor
insb
xchg
mov
sahf
push
mov
jo
mov
adc
mov
imul
and
loopne
ret
dec
cli
rcrl
xor
ljmp
dec
in
jmp
out
stos
push
jb
cwtl
stos
fidivl
push
add
outsb
imull
jns
adc
das
cmp
bound
pop
stc
test
xchg
je
mull
imul
fidivrs
push
insl
push
push
xor
sbb
jnp
data16
stos
mov
pop
lret
mov
inc
es
mov
lock
fnstsw
ds
lea
les
mov
push
sbb
cwtl
jmp
mov
lcall
je
out
jmp
nop
into
fidivrs
mov
shl
cld
jne
es
dec
lods
jno
fxch
bound
ja
push
and
xchg
push
rorl
fs
cltd
xor
in
mov
cmp
inc
mov
fwait
sti
jno
lds
xchg
add
aam
lret
adc
imul
pusha
adc
nop
lods
add
jecxz
mov
jp
cld
push
cmp
push
pop
movsl
rcr
out
cmpsl
jb
loopne
int
or
adc
in
stos
jecxz
add
les
sub
sbb
fadds
mov
fstps
pop
push
scas
fadds
fnstenv
imul
or
add
out
mov
mov
int
and
popa
insb
mov
je
lea
jb
cmp
addl
out
incb
and
addr16
into
dec
add
js
mov
and
add
fildll
sbb
xchg
sub
xor
data16
psllw
xchg
adc
loop
push
sub
mov
lahf
lret
rorb
js
insl
pop
addr16
cwtl
sbb
mov
fcomi
sbb
out
sahf
cmc
in
xchg
inc
mov
jge
cmp
xchg
sub
pop
std
and
lcall
mov
cltd
test
jnp
test
jle
test
dec
and
mov
stos
out
xchg
in
arpl
fs
test
inc
lcall
and
das
xchg
add
mov
xchg
sahf
push
or
leave
mull
mov
fisttpll
pop
xchg
xor
and
adc
imul
push
popf
cmp
cmp
mov
add
rcrl
test
pushl
sbb
subb
addr16
mov
bound
lahf
add
xor
jbe
enter
pusha
push
sbb
dec
inc
mov
add
cli
jecxz
push
sub
shr
inc
inc
xchg
add
loopne
and
inc
mov
jp
nop
cmp
fsubl
push
movsb
fadd
test
pop
push
fsubrl
adcl
ja
jge
les
xchg
inc
inc
mov
test
clc
aam
loopne
add
dec
mov
subl
jge
dec
mov
call
in
repnz
idivl
enter
ss
xchg
cltd
push
sub
xor
pop
bswap
mov
jle
adc
popa
xor
inc
fiaddl
dec
push
iret
inc
lahf
or
inc
and
fwait
xor
in
mov
into
ds
repnz
std
fldl
inc
jo
add
pusha
mov
xchg
inc
out
je
push
ljmp
cmc
push
test
and
add
in
pop
repz
fwait
and
cmp
loopne,pt
xor
jae
daa
stos
adc
mov
jnp
pop
imul
scas
inc
sti
addr16
push
push
sbb
addr16
pop
stos
ret
stc
sub
popa
cli
pushf
or
cmp
xchg
mov
mov
mov
subb
fsubrs
push
mov
punpcklbw
and
push
sbb
pop
icebp
daa
or
in
outsl
js
shl
mov
xchg
icebp
orb
shlb
lcall
loope
mov
sarl
push
push
int
ficompl
sti
sbbl
addr16
push
imul
test
jo
test
and
jno
shlb
scas
inc
js
push
jno
cs
arpl
sbb
loopne
dec
ljmp
mov
cs
shll
pushf
cli
xor
rcll
test
or
xor
sbb
pop
daa
jns
push
sbbl
push
adc
xchg
clc
and
popf
jg
add
stos
stc
add
invlpg
inc
pushf
jl
mov
ljmp
xor
push
sub
into
fcomp
jo
outsl
sub
sub
idivl
add
jnp
ss
mov
fsubrl
push
cmpsb
inc
shrb
jo
mov
lock
adc
mov
or
incl
mov
pusha
not
cmpsl
loopne
xchg
es
mov
movb
push
test
pop
mov
mov
pop
mov
in
fucomip
mov
dec
dec
stos
shl
lea
mov
subb
adc
je
adc
dec
and
adc
repz
pusha
inc
lock
stc
out
in
pop
addb
test
cmp
and
xchg
bound
lahf
xchg
data16
enter
imul
jp
lahf
in
enter
test
int
pop
ss
cmp
fcmovnu
loope
cmp
fisubrs
push
cmp
cltd
and
push
btc
xor
jp
or
push
test
inc
out
int
mov
cltd
mov
in
cld
fcmovnu
inc
cli
xchg
jae
cmc
or
das
add
lret
lods
xor
pop
lods
inc
cmp
inc
jl
movsb
aaa
into
std
lahf
popf
rcrl
xchg
sbbb
mov
into
jne
pop
cmpsl
out
loopne
dec
mov
mov
divb
sub
stos
rorl
fdivl
push
mov
inc
add
push
ss
adc
sub
mov
mov
fimull
loope
int3
jo
fdivrs
leave
clc
testl
pop
dec
daa
sahf
lahf
push
iret
sbb
ret
jb
sub
lds
push
packuswb
lods
mov
push
jmp
adc
mov
xchg
sub
jle
repnz
lcall
cwtl
das
popa
ret
call
xlat
pop
adc
mov
inc
push
inc
jmp
mov
or
xchg
sub
pop
sarl
ljmp
nop
add
sahf
call
and
jp
or
jno
push
les
add
insb
and
scas
test
gs
sbb
add
xor
pop
cmp
fwait
push
or
daa
adc
cmc
mov
xor
push
push
push
adc
int
or
xchg
pop
xor
dec
push
push
lock
es
push
sbb
push
negl
and
je
push
xchg
out
ret
mov
psraw
adc
xchg
mov
push
je
mov
lds
nop
adc
ret
mov
cs
adc
dec
fisubrs
es
pop
out
xor
mov
mov
jae
rcl
mov
mov
jno
and
ret
add
lcall
cmpsb
xlat
cs
fidivl
mov
pop
adc
push
fldenv
aad
test
mov
mov
mov
das
jno
cmpsl
ds
mov
mov
fsubrl
add
dec
leave
movsl
xchg
sub
ret
xabort
xchg
hlt
fwait
mov
mov
aad
cmpsl
lret
sti
pushf
sbb
bnd
and
fs
fdiv
mov
pop
xor
inc
add
arpl
sub
lods
int3
jg
gs
jb
insl
cli
test
jae
sbb
mov
scas
stos
push
in
test
lcall
inc
outsb
inc
fisubs
inc
or
mov
pop
and
and
sub
pop
pop
push
mov
jae
pop
fnstcw
mov
push
push
or
negl
xor
cld
mov
adc
sub
mov
popa
lock
ffree
or
pusha
jge
jl
cmp
lahf
push
sbb
or
and
aaa
dec
cmp
mov
std
mov
lods
out
test
push
out
xchg
mov
pop
adc
or
mov
jo
fstps
xchg
adc
mov
push
sahf
sbb
mov
jl
cld
mov
fidivl
into
clc
jno
es
sahf
fwait
into
mov
xchg
lock
push
notl
mov
out
push
testl
rcll
in
push
frstor
shrl
lcall
mov
sbb
adc
insb
out
shl
repz
stc
adc
sub
push
popf
sbb
fnsave
sbb
xor
int3
arpl
daa
fldenv
sbb
orl
jmp
cli
stos
add
xor
gs
pop
das
push
clc
pop
adc
cmpl
test
push
rcrl
sub
repz
stos
mov
cmp
imul
lret
jno
aas
jno
inc
and
dec
js
jg
andl
add
pop
sti
test
pop
lds
and
vcvtsd2ss
cs
sbb
out
xchg
add
call
lcall
mov
inc
out
push
clc
mov
loope
test
lods
iret
jl
mov
cli
xor
ret
sbb
cmp
adc
and
jge
pop
arpl
jge
mov
addr16
test
inc
sub
jae
ffreep
lahf
scas
rclb
push
ret
imul
adc
mov
jno
incl
dec
mov
lret
icebp
dec
loopne
stc
rclb
lds
adc
and
in
in
inc
insb
add
mov
xor
sbb
mov
sahf
or
nop
sub
push
stos
xor
rcrl
lret
pop
jnp
lahf
jo
mov
xor
in
or
icebp
testl
vpunpckhbw
jmp
out
dec
int
aam
pop
add
repnz
outsb
out
sub
es
and
sub
pop
or
nop
push
testl
decb
or
jg
popf
mov
xlat
mov
push
or
and
int
jne
jne
push
or
ja
add
jge
stos
fisubrl
fmull
pop
loop
lods
jmp
cmp
popf
jg
fiaddl
mov
and
ficompl
push
out
shlb
test
movsl
js
fs
mov
or
movsb
dec
xchg
mov
insl
sbb
aad
xchg
jle
aas
scas
push
xor
jns
inc
mov
scas
push
sub
mov
sbb
fcmovnbe
xchg
sub
and
out
mov
and
ss
dec
hlt
xor
sbb
rcrl
repnz
movsb
lods
mov
outsl
iret
std
data16
push
push
mov
or
jmp
testb
test
fcoml
cld
pushf
shrb
aad
and
xor
imul
sbb
adc
call
mov
adc
and
xor
lret
xchg
add
insl
fwait
jb
negb
mov
xchg
push
xchg
adc
aam
xchg
jle
or
jbe
pusha
dec
loop
inc
lock
push
icebp
sbb
cmp
enter
movsl
or
bound
dec
loope
xchg
and
iret
ss
push
push
xor
push
mov
jecxz
mov
sbb
pop
xchg
sub
sub
cs
sbb
push
cmc
push
hlt
aaa
fistpll
lock
cmpxchg
movsl
cmp
popf
sub
sbb
aad
xlat
xlat
xor
imul
out
mov
jl
mov
test
and
dec
pop
mov
shrl
pop
fidivl
mov
pushl
paddusw
ja
adc
out
xchg
movq
xor
dec
or
xor
mulb
pop
fadds
adc
stc
fsubs
adc
mov
fistl
mov
inc
loop
xor
fidivs
stos
fsubr
pop
aas
mov
cmp
mov
int3
arpl
ret
imul
mov
dec
cmp
das
in
cmp
cltd
dec
adc
out
ret
push
pop
clc
xchg
movsl
jge
push
imul
cmp
rorb
hlt
test
insl
stc
mulb
call
aad
scas
lret
flds
call
out
or
sub
sbb
push
cmpsb
xlat
and
and
int
imul
pop
test
loopne
daa
notb
lods
add
enter
mov
add
idivb
cmc
cmp
mov
push
pop
pop
test
push
testb
mov
add
xchg
roll
mov
xlat
jmp
in
stc
push
sahf
adc
nop
sahf
xchg
jg
jb
mov
int
cmpsb
mov
int
hlt
das
sub
lods
enter
test
or
xchg
ss
mov
scas
xor
repz
js
jg
nop
jnp
ret
mov
roll
cmp
fiadds
inc
or
push
fisttps
in
push
imul
test
fmull
jecxz
push
push
cmp
dec
push
imul
icebp
outsl
dec
push
dec
jae
das
addr16
insb
dec
je
testl
insl
out
dec
rcll
add
or
pop
jbe
add
repnz
mov
test
scas
xchg
hlt
dec
stos
and
cld
mov
mov
loop
xor
in
and
push
lods
cld
push
sub
pop
add
aad
je
push
mov
out
rcr
xor
mov
mov
push
cmp
outsb
out
call
pop
push
sahf
jno
addr16
fnstcw
ljmp
jb
add
inc
sbb
sbb
push
push
aas
mov
jnp
or
arpl
xchg
sbb
xor
pop
ss
lea
and
movsl
push
mov
enter
stc
jmp
pushf
repnz
push
dec
inc
inc
ljmp
movsl
jae
mov
xorb
sbb
jne
shrb
add
pop
mov
ds
jl
xor
cmp
mov
sahf
mov
push
and
mov
stos
test
mov
hlt
sub
pop
cwtl
lods
dec
mov
out
or
xor
push
push
repnz
sbb
dec
repnz
cmpsl
pop
movsb
adc
dec
fists
inc
cmpsb
data16
aas
into
pop
loope
rcll
or
hlt
movsl
subb
or
test
pop
lods
rcr
mov
mov
cmpsb
lock
add
repnz
jb
subl
mov
and
mov
imul
popf
je
sub
inc
bound
mov
push
cmpsb
adcb
in
ret
mov
inc
sbb
cmc
ror
test
fucomip
gs
or
mov
sub
test
dec
dec
rcrb
jle
out
jge
dec
sbb
lea
push
sub
adc
test
cwtl
mov
adc
xchg
pop
cltd
subl
sbb
ret
push
push
sahf
add
cmpsl
sub
pusha
or
dec
les
mov
cmp
mov
and
lahf
push
mov
daa
xor
es
test
sbb
int3
mov
sbb
xorb
inc
rclb
aam
push
ja
out
xor
sub
rep
mov
enter
fidivrl
dec
pop
enter
inc
mov
test
inc
cltd
out
cltd
xchg
mov
mov
jmp
daa
mov
and
inc
cli
ficoml
xor
movsb
call
shrl
cmp
cmp
fiadds
icebp
pop
imulb
insl
jo
and
adc
test
hlt
icebp
push
xchg
xchg
popf
add
mov
movsl
jns
test
es
sub
lods
mov
inc
lcall
cltd
repnz
test
pop
sbb
in
push
push
nop
push
sub
jecxz
pushf
cmpb
lret
cmpsb
mov
xlat
mov
sahf
lods
out
mov
cld
push
sub
dec
pop
xchg
cli
outsl
out
jge
dec
and
les
lods
sub
out
pop
dec
xor
mov
xor
sbb
add
mov
in
push
sub
pop
nopl
jecxz
aaa
dec
lock
push
popa
cld
xchg
xchg
in
repz
sbb
jo
cmp
inc
inc
je
jae
jbe
mov
out
sbb
jbe
mov
mov
test
das
cld
das
lds
mov
fpatan
fstp
popl
push
inc
push
push
mov
sbb
jns
fs
cmpl
imul
lods
inc
ficomps
mov
xor
adc
dec
rol
addr16
fsubs
rolb
dec
push
jnp
pop
dec
stos
mov
pop
out
and
cltd
ret
pop
clc
xchg
popf
push
lahf
push
cmp
movsl
cmp
adc
data16
iret
sbb
push
cmc
enter
lcall
jno
testb
dec
decb
clc
dec
mov
push
rorb
popa
or
cmp
rorl
xchg
arpl
out
js
inc
popa
jo
testl
mov
cmp
mov
mov
out
popa
cs
pop
lahf
fsubrs
xchg
jecxz
jno
pop
hlt
in
adc
cmp
pop
xlat
mov
xchg
xchg
push
pop
jo
mov
sbb
gs
mov
or
adc
scas
xchg
mov
loopne
lods
js
dec
adc
ror
jp
ret
sti
or
jmp
xor
mov
sbb
call
test
inc
mov
dec
sbb
push
addr16
cltd
js
push
jp
or
dec
cmpsb
xor
xor
adc
or
cmpsl
mov
or
cmp
pushf
ret
ljmpw
sub
jae
out
out
imul
push
pop
icebp
cli
fcomp
xchg
sub
inc
scas
dec
xchg
lret
sub
mov
cmpsl
mov
pop
pusha
jmp
jo
ret
pop
inc
sub
ret
pop
fisubrs
stc
xchg
andb
fndisi(8087
pop
fstps
sbbl
xchg
xor
inc
xor
and
xchg
pop
xor
add
sbb
outsb
fistpll
or
hlt
cmp
and
jbe
sbb
mov
and
shlb
adc
lods
in
lcall
test
stos
xchg
dec
adc
test
loopne
in
push
mov
pop
data16
shll
add
jge
jno
and
or
adc
push
adc
out
xor
sbb
in
xor
rcrl
icebp
aam
pop
lret
fwait
pop
mov
inc
fcmovnb
add
aad
repz
leave
push
xchg
arpl
lock
and
btr
mov
dec
ss
mov
es
xor
sub
sbb
jg
cmp
fnstcw
dec
xchg
leave
dec
test
sub
jno
xor
xchg
or
add
sbb
push
movsl
cmp
xlat
aaa
fmull
pop
daa
mov
sbb
pop
dec
adc
xchg
add
add
les
push
or
arpl
test
xchg
fsubs
popf
ljmp
data16
inc
fs
mov
cmpsb
sbb
cmpsb
lds
popa
push
or
mov
push
mov
mov
dec
mov
mov
or
push
and
add
sbb
enter
mov
in
std
xchg
ss
sets
insl
xchg
push
aam
sub
pop
cmpsb
idivl
sub
xchg
or
push
pop
cmp
in
aaa
pusha
clc
faddl
ds
std
jg
xor
cmpsl
int3
das
add
mov
and
aaa
sbb
xor
lds
mov
add
dec
jge
or
add
ret
cld
sub
out
mov
mov
inc
mov
xor
push
mov
sbb
ret
out
test
mov
iret
pop
jnp
mov
sbbb
out
ja
iret
hlt
xchg
aas
mov
sbb
repnz
cs
jae
fdivs
xchg
add
pop
out
movsl
aaa
loopne
imul
jge
pop
shrl
int
pop
xor
pop
repz
addr16
jmp
cwtl
push
push
mov
push
fidivl
dec
icebp
push
xchg
data16
lret
test
push
or
push
in
insl
data16
and
or
test
jbe
sbb
mov
cmpb
xchg
leave
and
dec
sub
xlat
and
cld
testb
add
inc
pusha
int
xchg
shl
mov
das
pop
sbbl
insb
jmp
add
addl
in
pusha
int3
arpl
sahf
popa
push
dec
jg
push
mov
imul
rcr
ret
cmc
shlb
pusha
mov
test
add
shlb
imul
jg
dec
bound
test
adc
pop
push
inc
nop
into
je
or
mov
inc
jle
jae
outsl
ss
mov
mov
jae
rorl
mov
pop
aam
pop
insb
pop
jbe
sbb
push
add
dec
std
es
inc
xlat
pop
push
loop
movsl
mov
sub
sub
mov
xor
inc
int3
pushf
add
lea
push
mov
testb
mov
inc
cmp
xor
xor
inc
fs
ljmp
out
icebp
jp
adc
jbe
rcrl
pop
and
mov
xlat
addr16
popa
mov
inc
push
movsb
das
or
and
ficomps
scas
inc
lds
add
adc
in
inc
xchg
ja
fidivs
xchg
and
adcb
pusha
pushf
dec
fst
cmp
ljmp
ss
hlt
addr16
loope
dec
cld
imull
mov
ret
hlt
inc
test
ficompl
mov
sub
mov
outsb
mov
mov
jmp
cmp
call
idivb
cld
add
cmpsb
xor
dec
and
xchg
call
xchg
pop
lret
sub
xorl
loopne
adc
jg
xchg
mov
jno
mov
adc
pop
xor
sub
mov
inc
xor
sarb
push
xor
leave
pop
cmp
fucomip
test
xchg
out
jnp
inc
fsubrl
inc
arpl
inc
mov
std
jp
int
xor
outsl
push
or
shll
mov
xor
shll
xor
mov
push
jmp
mov
aas
ja
adc
insb
sahf
mov
xchg
popf
dec
movsb
push
jmp
sbb
pusha
push
rcll
lods
xor
sar
inc
stos
cmp
jno
push
movsb
pop
jge
jo
lret
jge
and
cmc
add
pop
mov
mov
xchg
mov
mov
int
frstor
loop
push
insb
add
in
cmp
shl
xchg
sub
mov
fadd
leave
test
add
push
mov
cli
inc
push
filds
mov
mov
xchg
pop
cmp
cwtl
or
xchg
jl
pushf
and
ret
ja
out
insb
or
out
ja
fsubp
insl
shll
adc
sbb
or
mov
xor
mov
test
dec
gs
push
xchg
loopne
and
or
imul
inc
mov
xchg
lea
and
mov
xchg
call
mull
faddl
scas
cmc
xlat
add
jbe
mov
outsb
pop
outsb
xor
xor
sub
stos
mov
xchg
call
lods
sahf
pop
sub
adc
push
bound
nop
inc
mov
pusha
bound
pop
mov
int3
sub
xor
cli
inc
pop
lods
inc
xorb
test
dec
add
xchg
aam
enter
outsl
bound
mov
or
xchg
mov
push
out
std
dec
push
imul
cmc
and
xchg
mov
push
jb
lods
add
mov
fidivl
incb
mov
mov
fiadds
es
lcall
lods
dec
jg
pop
xchg
pop
cmc
testb
clc
outsb
inc
gs
adc
mul
mov
lcall
adc
mov
and
ret
notl
mov
je
fcomps
mov
mov
fidivs
add
mov
sub
fsubrl
in
dec
xchg
jmp
std
xor
add
xlat
outsb
icebp
xor
and
push
decb
daa
fnsave
mov
mov
insl
roll
testl
mov
push
xlat
lret
add
sub
fildl
shr
cmp
pop
ljmp
lods
or
xlat
cmp
mov
iret
dec
pop
rcrl
int
mov
fistl
nop
in
mov
lock
xor
cmp
stos
insb
testl
rol
enter
xchg
out
out
nop
call
mov
stos
and
rorb
xor
push
testl
push
inc
cwtl
push
cmp
shlb
adc
cwtl
xor
mov
jnp
loop
cmp
dec
lods
mov
int
int
jns
aas
lock
fistps
adc
cld
pop
addr16
hlt
mov
pop
call
mov
sub
jl
pusha
adcl
dec
ljmp
cmp
jnp
test
xor
ja
add
sub
inc
jge
dec
push
and
ljmp
fcomps
push
lcall
sahf
or
mov
fs
ja
mov
or
mov
sahf
cmc
xlat
fdivl
xchg
lcall
pop
scas
adc
ljmp
arpl
xor
pop
sub
push
call
cltd
inc
outsl
push
jne
pop
das
gs
lea
test
stos
dec
pop
jl
gs
jb
jo
mov
mov
gs
int3
jl
dec
lcall
js
or
das
int3
fsubrs
or
mov
pop
adc
aad
sbb
stos
into
add
addr16
inc
call
dec
add
mov
or
sub
in
sbb
js
daa
jnp
out
ret
mov
sub
and
push
daa
das
or
jbe
fisubrs
xor
dec
add
cmp
xor
dec
xlat
add
sbb
lahf
xor
jb
dec
push
sbb
mov
ja
inc
fcomi
shrb
fchs
and
push
push
xor
mov
out
clc
and
pop
sbb
aas
testl
lods
xchg
jb
fiaddl
fcoml
ficoms
cmp
push
ret
pop
and
inc
cwtl
in
inc
loopne
lcall
inc
push
sahf
xlat
dec
cmpsl
mov
add
sbb
dec
mov
notl
popa
es
imul
icebp
cmpsl
out
jge
and
push
jg
pop
fimull
int
cmp
or
or
mov
in
in
mov
fidivrl
shlb
sub
outsb
std
bound
inc
dec
int
sbbl
mov
icebp
or
pop
push
clc
inc
or
lret
test
jno
cmp
or
sub
popf
xchg
loope
or
test
or
jge
sbb
into
popa
sbb
aad
jno
add
mov
pushf
loop
adc
enter
outsl
sbb
push
jmp
xchg
ret
lahf
cmpsl
out
pop
jge
cmpsl
stos
inc
fdivrs
push
fsubs
iret
loope
adc
mov
pop
mov
mov
insb
jg
pop
adc
dec
xchg
mov
jecxz
frstor
pusha
stos
cltd
xor
and
stos
mov
xchg
pop
out
cmp
mov
outsl
shll
iret
xor
out
cmp
mov
bound
adc
testb
adc
cli
lcall
xor
sahf
mov
fisubl
sub
mov
mov
push
fcoms
add
xor
outsl
callw
fimuls
sbb
mov
inc
pop
mov
cmp
movsb
and
cmp
out
jl
fldcw
into
cmpsb
mov
inc
ds
out
push
mov
call
inc
loope
ja
jne
icebp
cmp
lods
dec
and
out
cmp
adc
mov
mov
pop
pop
sbb
and
clc
mov
add
fstl
or
fwait
leave
sub
in
pusha
das
pop
stos
movsl
das
aad
mov
pusha
popa
je
pop
xchg
xor
fiaddl
pusha
mov
xlat
aad
addl
shll
lcall
decb
scas
mov
imul
cld
xor
mov
lcall
sbbb
aaa
ret
hlt
pop
out
scas
xchg
push
push
ret
iret
xchg
sub
pop
jb
push
adc
aad
insb
mulb
in
add
mov
shrb
mov
xchg
into
lret
in
lods
lahf
in
push
out
jp
int3
dec
js
jbe
mov
adc
int3
out
test
cmp
adc
pop
loop
out
dec
in
fildll
shlb
lea
sub
out
lods
jae
push
sub
xor
pop
outsl
push
test
sub
xlat
repz
or
cmpsl
adc
mov
pop
dec
fiadds
cld
push
aam
scas
iret
cmpsb
in
sbb
pop
fsubrs
fisttps
mov
loope
jo
and
aad
or
pop
scas
pop
pop
or
ja
aaa
cmp
mov
fldcw
es
movsl
jg
cmpb
iret
data16
dec
add
popf
or
ljmp
or
push
jnp
je
loope
arpl
outsb
ss
inc
popf
je
add
pop
shlb
iret
pop
sub
fistps
cmp
mov
jnp
pop
adc
cwtl
call
xlat
mov
fidivs
cli
sahf
push
jbe
je
xor
push
orl
in
stos
cld
cmp
sub
mov
shlb
dec
gs
jne
sub
sahf
jno
push
bound
aam
cmp
inc
scas
repnz
mov
dec
cmp
pop
mov
mov
shlb
filds
movsb
je
adc
imul
push
inc
aas
or
icebp
xchg
cmc
lahf
popw
xlat
cmp
mov
xchg
sub
jmp
sub
fs
inc
fdivrl
mov
icebp
mov
loop
hlt
push
xchg
ljmp
add
lcall
inc
enter
sbb
mov
mov
adc
cmp
subl
or
fildll
les
dec
push
call
decb
push
rcrb
ljmp
jno
adc
push
jmp
loop
xchg
subl
or
test
xchg
jge
sahf
lahf
test
push
xlat
mov
dec
in
dec
xchg
jmp
mov
inc
out
sbb
pop
sub
and
sbb
dec
push
ret
jb
or
inc
movsb
pop
push
pusha
mov
out
mov
push
jg
adc
movsl
mov
mov
ss
pop
insl
cmp
fcomip
cs
mov
or
cli
push
repnz
sahf
xor
lcall
and
ret
pop
cltd
test
ret
and
sbb
push
icebp
out
rcrl
in
jle
cmp
pop
fiadds
pusha
mov
sti
cmpsb
je
push
loop
scas
mov
adc
inc
test
pop
insl
fadd
cmp
jp
stos
push
icebp
adc
ss
mov
push
or
adc
pop
jns
add
divb
inc
pusha
mov
sub
push
bnd
xlat
ja
pusha
xor
gs
test
lds
test
cmp
stos
insl
add
dec
sbb
mov
mov
add
mov
dec
leave
jns
insb
jl
lds
bnd
hlt
aaa
adc
mov
push
es
cmp
jg
jecxz
test
or
fstpt
into
cs
or
cmp
int3
and
push
stos
add
adc
inc
lock
movsb
jae
enter
sub
push
out
enter
or
xchg
gs
loopne
xor
mov
mov
iret
push
inc
out
out
fs
gs
lret
and
test
shlb
sbb
fstl
sub
mov
sbb
aad
sbb
jp
aad
mov
mov
sub
push
cltd
cld
inc
nop
mov
push
jmp
lret
mov
jecxz
pop
xor
vandnps
lahf
pusha
jae
dec
out
pop
mov
lds
cmp
std
cli
ja
lods
jns
fsts
mov
sarl
daa
xlat
stos
pop
jbe
jmp
int
mov
fdivrl
pop
icebp
shlb
js
andb
cmpsb
push
dec
cmc
mov
mov
mov
dec
sub
jmp
cwtl
cmpsb
ss
test
addr16
mov
bound
and
adc
mov
push
mov
or
xchg
pushf
dec
dec
mov
jg
sahf
and
sbb
sahf
dec
lock
xlat
cmp
clc
or
addr16
push
mov
cmp
fs
mov
ljmp
stos
mov
mov
insl
sub
sahf
ljmp
sbb
push
cmp
int
pop
cmc
mov
insb
jl
xchg
movsb
add
or
cmp
ficompl
inc
fisubs
lret
xchg
xor
mov
je
scas
shl
shll
cmc
push
call
loopne
std
sbb
fnstenv
cli
sbb
mov
cwtl
xor
into
push
out
aas
lds
pop
inc
lcall
pop
outsl
push
mov
in
popf
inc
ljmp
xor
dec
mov
adc
out
lret
mov
rorl
sbb
mov
mov
dec
repnz
adc
cs
jge
or
shl
sbb
loop
fucomi
sub
sub
mov
mov
push
push
repz
ja
call
std
enter
push
es
fwait
subb
lods
inc
jns
lret
bound
jmp
push
push
xor
or
pop
xchg
insb
or
mov
outsl
push
sub
call
imul
xchg
fdivr
mov
shr
inc
pop
jb
lret
repz
iret
clc
jecxz
push
inc
jge
stc
sub
sti
dec
movsb
xchg
lea
sbbb
rclb
push
sbb
add
stos
fldcw
mov
push
lock
mov
data16
jmp
shll
cmp
mov
inc
aas
adc
mov
out
jb
xchg
sub
and
push
pop
sbb
lahf
mov
xlat
repnz
push
call
pop
fisubrs
and
xchg
mov
inc
push
out
xlat
sbb
mov
fwait
push
mov
jae
dec
push
pushf
push
out
jmp
or
and
push
mov
fucomip
test
out
shlb
into
movsl
ret
jg
mov
ret
cld
out
popa
mov
shll
xor
lcall
ja
mov
fstpl
clc
sub
subl
into
dec
lock
gs
xor
out
dec
out
dec
xorl
push
repz
push
push
add
rsqrtps
aad
add
dec
inc
sub
das
sub
shlb
fbstp
or
std
add
and
pusha
sti
and
fisubrs
inc
fcomps
in
xor
imulb
cmpsb
push
or
divl
or
sub
daa
pop
mull
imul
push
lods
dec
test
inc
cmp
ja
ljmp
sbb
repnz
lcall
sub
mov
popa
test
loop
add
sub
lds
cmpsl
adcb
dec
mov
xchg
sub
or
mov
xchg
pop
push
imul
xchg
pop
ficoms
cmp
mov
lock
scas
pushf
shrl
inc
scas
aaa
xchg
leave
mov
sti
dec
cmp
xchg
outsb
sbb
mov
inc
xchg
xor
push
idivb
loop
xlat
insl
push
push
cmpsb
hlt
or
lea
jmp
hlt
outsl
inc
pop
mov
jg
out
inc
mov
fisubs
or
mov
inc
push
or
cmp
mov
mov
push
xchg
dec
inc
icebp
xlat
mov
je
jecxz
jp
notl
fwait
dec
xchg
dec
std
xchg
shll
xlat
xor
fs
test
pop
xchg
aas
cmp
inc
mov
scas
mov
fdivl
sub
fildl
dec
mov
je
ss
cmp
pop
cld
outsl
dec
jg
inc
jo
jle
stos
push
out
loopne
lahf
push
push
outsb
add
sbb
or
adc
xchg
sub
add
fistpl
sbb
push
cmp
daa
mov
and
ja
int
jne
xchg
addr16
hlt
dec
dec
sub
sbb
insb
lcall
mov
xor
pop
test
ss
insl
xor
shr
pop
push
out
mov
cmp
add
xchg
adc
fldl
shll
fstps
lds
stc
push
in
mov
lahf
gs
xor
sbb
movsb
cmp
mov
ret
in
or
pop
mov
and
mov
sub
sbb
mov
js
ret
test
js
lea
sub
seto
cli
incb
mov
push
in
sbb
mov
xchg
test
cld
adc
divl
pop
in
sbb
dec
mov
in
lock
mov
into
inc
lret
mov
cwtl
xchg
cld
xor
inc
inc
xchg
inc
mov
jne
jb
cmpsb
dec
loop
xchg
adc
ret
and
mov
insl
hlt
push
pop
lahf
ret
call
fwait
xor
cmp
push
push
ss
and
cmp
addr16
push
les
mov
or
pop
sub
adc
mov
pushf
mov
lods
jmp
ss
repz
jmp
cmp
xor
sbb
mov
cs
rcrl
jo
mov
sub
leave
in
push
push
call
popa
jae
mov
or
outsl
sti
fstpl
into
mul
imul
aaa
jle
fidivrs
add
and
ds
loop
loope
jne
popa
jnp
addr16
mov
repz
idivb
sbb
jecxz
dec
push
imul
scas
dec
sub
lahf
adc
je
jmp
std
scas
mov
test
xor
adc
push
jp
les
addr16
xchg
call
dec
add
cli
lea
fisubrs
pop
push
dec
insb
push
insl
mov
inc
sbb
aaa
and
fisttpll
dec
mov
adc
and
mov
aam
and
adc
xor
pusha
decb
and
xchg
aam
cmpsb
or
and
addr16
cs
xor
cwtl
rclb
mov
or
sahf
jns
negl
jl
adc
and
pop
jnp
jns
jno
loope
pop
pushf
scas
inc
sbb
push
sub
add
mov
shll
repnz
lds
movsl
into
loop
pop
or
xorb
dec
rol
xor
adc
aas
adc
mov
push
inc
test
fisubs
push
std
cltd
mov
stc
shrb
xchg
adc
sbb
in
cmp
icebp
nop
sahf
jne
sub
mov
adc
sbb
out
push
pop
arpl
cmpsb
xorl
ja
cmp
das
fdivs
fsubrs
add
xchg
stos
int3
daa
dec
ficomps
imul
in
inc
mov
jns
out
test
push
xlat
movsb
sbb
test
mov
cmp
mov
lock
pop
pop
aam
sub
ja
dec
jecxz
popf
jecxz
cs
cmp
xchg
lret
les
jle
aam
inc
xor
lret
or
jno
pop
cmc
inc
daa
clc
xchg
test
or
push
jne
and
ds
int
dec
jnp
stos
and
std
pop
loop
inc
pop
mov
testb
cmp
jecxz
sahf
imul
movsl
mov
dec
mov
dec
in
andl
cmp
or
jbe
mov
add
lods
fs
ficomps
mov
pop
setb
mov
push
and
pusha
jecxz
dec
mov
cli
divl
ret
adc
lods
add
aas
loope
arpl
outsl
daa
nop
xor
cmp
rclb
daa
rorl
mov
pop
cwtl
das
orl
pushf
lea
ss
ret
pop
inc
push
rcrl
xor
gs
mov
mov
aaa
fwait
adc
mov
movsb
inc
jl
lock
or
fisubrs
jecxz
push
lcall
or
ret
ret
hlt
mov
arpl
call
cmp
ljmp
ja
xor
adc
fsubrp
stc
pop
sbb
stc
mov
cs
or
mov
rcl
ret
in
enter
xor
sub
and
arpl
jecxz
rcrb
or
dec
pop
pop
stos
push
or
fldl
jl
mov
enter
mov
or
lret
or
adc
aad
lret
jecxz
dec
fsubs
mov
sbb
lds
ljmp
jne
mov
and
arpl
mov
incl
and
cmp
push
xchg
es
mov
mov
fs
popf
lahf
movsb
repnz
adcb
jae
push
push
xchg
in
scas
incb
lods
sbb
fdivs
push
mov
pop
inc
cld
inc
roll
add
inc
aam
cmpsb
push
movsl
and
pop
mov
jl
adc
mov
movsb
xor
xchg
add
movsb
imul
xor
add
cmp
dec
cmp
push
mov
and
out
aas
es
movsl
loope
jae
dec
dec
mov
in
ret
test
cmp
fsubl
pop
and
scas
les
jae
mov
rcll
dec
fs
mulb
lods
daa
outsl
xor
dec
ret
adcl
test
ds
in
push
fsubrs
adc
mov
and
add
and
sti
cmc
mov
mov
cld
das
inc
push
dec
js
jbe
mov
shll
addr16
cmpsl
call
outsb
mov
sub
in
fs
add
jl
stos
orl
cmpl
xchg
pop
add
int
lea
push
or
f2xm1
and
pop
out
mov
lret
and
push
in
cmp
into
and
add
out
push
arpl
out
sti
leave
adc
sti
sbb
jbe
js
aaa
push
es
dec
pusha
push
jb
lea
sub
sarb
pop
cmp
nop
jb
dec
jns
popf
and
sti
sbb
inc
push
dec
sub
test
leave
imul
arpl
xchg
cwtl
xchg
sahf
stos
repz
mov
aas
mov
xor
push
daa
push
movsb
fwait
inc
sbb
fwait
repz
inc
adc
int
xor
mov
ret
stos
addr16
xlat
push
inc
cwtl
push
cld
inc
movsl
cmpsb
mov
pop
outsl
xlat
or
inc
fisubl
fists
mov
scas
cli
pusha
scas
sub
into
enter
adc
push
sub
sub
ror
xor
hlt
mov
xchg
scas
or
inc
mov
clc
nop
rorb
imul
clc
xchg
sbb
lret
xchg
mov
cmc
dec
dec
cmp
popf
and
xchg
xorb
push
push
xchg
adc
outsb
push
inc
ret
scas
movsb
pop
sub
inc
stos
cmp
and
push
jno
jg
out
lret
xchg
xor
shl
push
push
mov
jnp
sahf
ss
fadd
cltd
fwait
mov
push
or
rorl
push
xlat
xor
fldl
out
js
popf
sub
xor
mov
shrb
fldt
cmp
push
bound
popf
inc
dec
xchg
adc
xor
pop
push
fistps
loopne
scas
es
rcrb
ret
loope
jnp
fsubrs
push
movsb
sbb
fs
jb
xor
cmp
push
dec
rclb
loopne
rorb
ja
and
stos
nop
aas
hlt
sub
pusha
testl
jmp
dec
fsubrs
push
adc
jmp
add
daa
popf
stos
or
ljmp
mov
andb
pop
cmc
xchg
push
stos
daa
jl
pop
lret
shrb
cmpsl
push
scas
sbb
lock
xor
mov
mov
cld
xchg
and
mov
adc
sbb
in
out
push
clc
enter
jmp
arpl
dec
loope
sub
xchg
enter
or
jbe
sbbl
jae
in
jns
imul
lcall
lock
test
in
movsl
jmp
jae
scas
in
jo
pop
sub
sub
enter
insl
inc
push
nop
filds
adc
sahf
lret
dec
shll
pop
mov
sahf
mov
scas
mov
cmp
test
jmp
or
lret
mov
mov
jne
rcl
pop
jle
mov
sbb
lods
adc
mov
and
or
cmpsl
nop
daa
fxch
lret
shrl
and
call
test
add
xchg
ljmp
mov
sbb
dec
mov
bound
sub
sbb
xchg
insb
lods
xor
stos
rolb
int
mov
push
out
iret
repz
adc
cmp
add
jae
push
inc
jecxz
xor
xchg
gs
testl
into
pop
faddp
pop
adc
in
adcb
mov
fisubl
cmp
xchg
popf
jnp
test
pop
add
popa
lods
imul
nop
mov
push
push
popf
sbb
add
cmc
xlat
popf
icebp
add
sbb
inc
dec
and
xor
insl
inc
xchg
pushf
lret
testl
imul
icebp
push
out
mov
in
orb
pushf
adc
vphaddbq
mov
iret
mov
push
shlb
add
pop
xchg
addb
mov
lret
push
mov
fsubrs
mov
insb
inc
out
sbb
mov
dec
pop
clc
pop
cmp
cmp
arpl
jge
stc
or
lock
add
add
dec
fst
into
sbb
pop
pop
xchg
cmp
dec
mov
mov
sbb
pop
lahf
push
jb
ret
adc
loopne
jb
sbb
jmp
mov
pop
lock
or
mov
adc
jp
outsl
subl
icebp
imul
es
nop
mov
jne
mov
mov
pop
jge
add
and
dec
out
cmp
sbb
adc
stos
mov
cmpsb
xchg
mov
in
sti
cmp
rol
outsl
cmp
jle
jmp
pop
dec
jno
pushf
dec
movsb
aaa
repnz
sub
mov
cmp
sahf
xor
cld
or
or
test
pop
mov
xor
xor
cmp
in
adc
and
out
push
enter
push
cmp
cltd
std
pop
aaa
xchg
call
sbb
push
or
out
cmp
setge
xor
gs
sbbb
pop
mov
ja
xchg
sub
dec
popf
mov
shrb
rcl
fisttps
adc
pop
mov
mov
outsl
cmp
lcall
into
in
push
xlat
std
hlt
adc
or
js
sti
sbb
lds
cmp
stc
js
add
or
dec
adc
push
lods
mov
pop
out
sbb
imul
xor
clc
les
sbb
add
loopne
or
ja
fidivl
fistl
pusha
mov
push
mov
pop
fnstenv
sti
mov
lcall
xor
jno
add
rolb
cmp
mov
jb
and
add
ret
push
fstps
pusha
push
or
int3
out
adc
daa
or
gs
pop
leave
or
lret
xor
jb
adc
xor
inc
push
mov
lea
sub
add
mov
mov
mov
outsl
ljmp
test
aas
mov
sub
out
push
pop
mov
jle
jge
mov
inc
push
sub
rcrl
jno
mov
push
data16
mov
repnz
movsb
inc
not
aaa
xor
and
push
movsl
inc
mov
insl
aam
xchg
push
jb
pop
jne
jp
jmp
insl
adc
addr16
push
imul
xchg
imul
repnz
push
bound
mov
adc
jbe
pop
add
adc
gs
mov
push
stc
or
push
inc
icebp
test
jns
cmpsb
fdivl
out
xor
pop
xor
bound
or
data16
cltd
pop
cmp
ss
push
sti
push
and
xchg
adc
testb
lea
imul
cmp
cwtl
add
or
ja
insb
js
adc
mov
adc
stos
in
push
insb
sbb
or
sub
adc
cmpsb
cmp
lahf
mov
mov
test
sbb
adc
je
pop
xchg
and
testl
sbb
xchg
dec
adc
mov
xchg
je
mov
jmp
idivl
or
notb
inc
mov
pop
mov
arpl
mov
mov
aad
mov
sub
jns
out
aaa
dec
inc
cmc
fwait
fs
mov
arpl
test
ficoml
mov
bnd
pop
mov
or
shll
enter
pop
js
dec
xchg
pop
jnp
add
iret
push
aas
xchg
cli
lock
gs
dec
fs
int3
or
cmp
push
jle
int3
and
xchg
out
aas
dec
or
push
dec
mov
mov
and
sub
hlt
push
es
or
test
mov
cmc
cmp
mov
daa
lods
icebp
out
push
mov
cs
out
loopne
jmp
xor
ffree
rorl
push
repnz
and
inc
outsb
xchg
gs
outsb
inc
inc
pushf
or
push
popa
inc
mov
xorb
rorl
pop
out
ficoms
add
sub
jo
loope
das
xchg
mov
adc
xor
cmp
pop
notl
xchg
lea
and
es
xchg
jne
gs
mov
add
sahf
jmp
sub
push
fdivl
cmp
pop
data16
and
jg
repz
movzbl
jbe
outsl
stos
loop
or
lods
ds
xchg
jecxz
repz
sub
iret
movsl
lahf
push
outsl
ror
xchg
test
repnz
mov
mov
test
xlat
out
outsl
mov
mov
lcall
sub
or
or
mov
aam
sbb
dec
fdivrs
xor
xchg
cmpsl
cmpsl
dec
xchg
das
push
enter
sub
dec
push
sbb
mov
mov
sub
test
jno
mov
inc
sbb
cmp
fucomip
jbe
aad
lds
sbb
out
in
movsb
in
fiaddl
dec
pop
pop
shr
pop
or
inc
xor
mov
loope
shlb
cmp
out
pushf
les
es
das
inc
xchg
cmp
stos
inc
cmpb
imul
xor
pop
aam
inc
data16
mov
mov
cwtl
push
arpl
cmpl
and
mov
test
cmpb
in
jmp
add
xchg
xchg
sub
mov
sbb
jbe
stos
test
inc
mov
pushf
andb
mov
sub
sbb
push
mov
mov
js
rorb
out
pop
nop
loop
in
add
imul
adc
xchg
in
jl
dec
adc
pop
xchg
pop
test
icebp
xchg
or
adcb
cmp
push
nop
cmp
jmp
aaa
pusha
sub
out
adc
inc
push
sub
xor
mov
xor
adcb
cmp
pusha
push
fildl
stos
cmpsb
jns
in
cli
insl
or
lcall
fisttps
je
lret
sbb
insl
pop
imul
pushf
jle
sbb
decl
mov
jb
outsl
in
clc
or
mov
xchg
adc
enter
dec
mov
sub
adc
mov
cmp
aam
pop
cmp
fimull
aaa
in
mov
xorl
push
inc
jecxz
shlb
aam
scas
addb
cmp
loop
xchg
adc
mov
sbb
out
rorl
mov
lahf
sbbb
xlat
fidivs
xor
fs
jge
xchg
push
cs
bound
fs
cmp
pop
and
out
cmp
dec
jbe
lds
push
out
out
push
mov
fnstenv
or
jno
bound
mov
in
ss
xchg
es
cwtl
scas
xchg
loop
lods
addr16
fiadds
roll
and
sbb
in
xchg
xchg
outsl
out
jg
insb
add
bnd
jmp
pop
jmp
add
aam
adc
addb
xor
cs
cmpsb
pop
insb
test
jb
sub
inc
xchg
or
cmp
xor
sub
and
gs
ja
out
xchg
int
mov
dec
cmp
add
nop
pop
jecxz
jle
jnp
xchg
jns
adc
add
imul
outsl
inc
arpl
mov
jbe
int3
notb
std
mov
aas
lret
iret
mov
jno
imul
movsb
int
jno
xchg
daa
les
scas
sub
scas
in
sub
dec
and
inc
rcrl
push
or
jb
xchg
es
add
pop
jae
fisttps
test
dec
popa
insl
push
inc
shrl
push
dec
out
dec
mov
popf
fwait
ret
outsl
test
cmp
imul
mov
xchg
popf
xor
sub
in
stc
nop
push
repz
push
icebp
mov
aad
cmp
sub
mov
popl
rcll
jg
movsb
mov
insl
shr
sub
mov
loop
or
test
hlt
mov
sbb
push
movsb
nop
or
test
cmp
xchg
scas
mov
daa
lds
lods
jle
loope
js
inc
xchg
data16
pushf
stos
xor
repz
outsb
ja
push
push
jns
cmp
loop
push
repz
mov
cmc
nop
shll
jecxz
dec
lcall
mov
das
loope
cmp
add
in
stos
aad
xchg
mov
and
inc
sbbb
xor
mov
pop
clc
pushf
scas
cmp
call
loopne
xchg
fstpt
dec
imul
push
mov
outsl
mov
lret
daa
inc
fcoml
cmp
xor
aam
dec
aaa
mov
jne
cmp
gs
jns
movsb
outsb
sub
aas
in
nop
cwtl
scas
sbb
sbb
or
scas
mov
out
inc
pop
dec
scas
icebp
fcomps
aaa
lcall
xor
fdivs
rol
repnz
jnp
gs
insl
lock
mov
stos
mov
dec
push
inc
insl
cmpsl
out
insb
data16
subl
or
insb
test
mov
test
pop
stc
mov
xchg
dec
and
sti
es
xchg
mov
and
andl
pop
ret
rcr
scas
mov
repnz
rcrl
or
movsb
movsl
pop
in
mov
rcrb
call
aaa
ljmp
push
jmp
lock
xor
pop
push
mov
fwait
decb
xchg
popa
dec
mov
fcomi
xor
int3
lcall
push
scas
dec
imul
out
rol
movl
repz
pop
fdivs
dec
sub
out
fdivrl
mov
int3
push
ds
cmp
sub
lock
mov
add
out
cmpsl
inc
sbb
dec
aam
pop
dec
stos
xchg
test
icebp
adc
push
adc
sub
adc
add
loope
xor
jg
outsb
push
adc
mov
pushf
cld
in
lods
pop
sbb
cmp
push
movsl
pop
les
sub
xor
lods
or
cs
and
and
lds
gs
lcall
sbb
popa
mov
popa
and
popl
sub
xchg
scas
xchg
and
iret
mov
ds
outsb
es
imul
addr16
ror
int
outsl
mov
mov
pop
loop
push
adc
add
test
cmp
cmp
dec
adc
ds
inc
push
in
cmp
pop
scas
add
xchg
xchg
push
mov
icebp
xchg
bound
mov
aas
and
sbb
pushf
and
test
xor
fdivrl
nop
cli
int3
ficoms
push
adc
test
out
lea
add
pop
inc
xor
adc
add
push
cmp
cmpl
jbe
in
or
fsubrl
mov
insb
clc
sub
pushf
or
clc
ret
mov
idivb
sub
xchg
loop
loop
pop
ljmp
bound
inc
cmp
cmp
out
dec
shrb
hlt
adc
iret
fisubrs
lahf
cld
push
adcl
scas
ficompl
sti
or
out
adc
xchg
push
lret
lahf
inc
add
or
bound
xor
inc
lock
mov
andb
pop
add
dec
cwtl
jne
jns
out
or
push
inc
pop
movsb
xchg
push
adc
or
dec
xchg
pop
loopne
xorl
dec
sbb
sbb
jae
aaa
out
jecxz
mov
jge
sti
insb
xlat
cmp
clc
mov
insl
dec
push
into
in
xor
fstpl
lock
cmpb
dec
call
lods
dec
xchg
clc
mov
pop
mov
cmpsl
sub
jge
inc
es
aad
dec
pop
cmpsl
adc
sub
dec
xor
push
xor
call
add
bound
aaa
repnz
cmp
aad
mov
pop
lods
int
ret
fnstcw
in
repnz
dec
jo
or
outsb
insl
adc
mov
repz
in
nop
lods
xchg
push
jb
adc
hlt
dec
mov
xlat
fwait
mov
loopne
jb
test
jbe
and
fmul
cmp
ds
push
aad
or
cmp
dec
fwait
lods
jecxz
addl
dec
popf
in
hlt
stos
sub
test
in
hlt
and
push
out
jg
sbb
loop
les
jae
dec
pop
xchg
sbb
and
xchg
push
mov
aad
ror
adc
pop
pop
outsb
or
or
outsl
or
xorl
dec
out
std
mov
decb
fnsave
loop
pop
adc
in
lret
ja
pushf
test
lret
enter
adc
cwtl
mov
mov
pop
adc
mov
inc
push
les
in
sti
mov
or
adc
xchg
dec
loopne
push
outsl
and
lock
sahf
jmp
sbb
sbb
jmp
movsb
shll
inc
imul
fmuls
cmp
xlat
fldl2e
inc
inc
andb
ret
push
inc
add
bndstx
push
mov
sub
roll
fucomip
mov
mulb
outsl
leave
in
int
decb
sbb
cld
jl
xor
jns
sbb
in
push
push
fstpt
and
pop
lret
std
push
jae
add
jmp
xor
xchg
mov
cmp
jge
jecxz
aam
mov
icebp
inc
lcall
cli
fdivr
rol
into
sarl
into
add
and
in
mov
dec
fucomp
cltd
decb
int3
ror
jo
mov
in
cltd
inc
cmp
bound
jmp
inc
out
rorb
jge
stos
add
jae
mov
xor
mov
dec
cmp
testl
jp
inc
pop
cmpsb
repnz
inc
ret
das
mov
je
sbb
sbb
mov
jl
ja
lock
addr16
cmp
inc
fwait
test
test
in
inc
fs
cmp
rcll
sub
xchg
cmp
mov
outsb
add
lahf
mov
cwtl
test
mov
notb
pop
mov
jnp
dec
xlat
cmpsb
lds
test
and
jmp
xchg
and
xchg
mov
das
mov
xchg
ret
jl
lcall
in
mov
add
mov
stos
mov
fmull
xchg
ss
mov
mov
sub
push
jge
lea
pushf
pusha
and
xorb
dec
add
dec
add
in
cmpsb
mov
mov
or
jl
pop
jmp
cmpl
movsb
mov
fldcw
fnstenv
add
lods
jo
mov
mov
lahf
jnp
lcall
xorl
and
cli
sub
cli
cltd
add
push
cmp
xor
push
ret
lock
fistl
mov
std
popl
xchg
xor
xchg
cmp
testb
jns
in
dec
stos
mov
cld
push
mov
sbbl
pushf
fsubrs
sbb
fwait
insl
movsb
imul
cmpsb
into
jmp
add
mov
ret
mov
les
cmp
loop
or
fadds
out
test
mov
stos
cmc
xchg
mov
cltd
test
aas
fidivrs
pop
imul
popa
cmpsl
adc
push
in
jmp
jno
jb
add
por
or
pop
mov
fimuls
sbb
xchg
sub
xchg
push
mov
pop
xchg
fs
popa
lods
js
fiadds
sbb
cmpl
push
popf
inc
or
shrl
push
sbb
or
jno
mov
jno
in
xchg
mov
xchg
mov
cmc
pop
notl
jnp
xor
push
fcomi
mov
outsb
fs
mov
mov
test
je
and
rcrl
sub
ds
sti
xchg
jae
popa
sbb
push
cmc
ljmp
mov
inc
mov
gs
pusha
adc
movsl
mov
pop
xchg
lret
sub
pop
pop
fdivs
sub
das
ds
addr16
lcall
imul
xchg
and
push
cld
arpl
xor
mov
cmp
dec
ficoms
out
and
int
cmc
xor
popf
xor
insb
inc
bound
mov
pop
pop
sub
cmp
fimull
rcrb
pop
push
addl
jns
fdivrl
and
lds
sbb
icebp
dec
pop
cmp
mov
out
jecxz
mov
cmp
xchg
mov
lds
mov
cmp
test
jnp
shl
jbe
cmp
stos
sub
sti
lret
dec
push
cmp
lahf
or
adc
rolb
xor
dec
sub
xor
pop
dec
pop
test
mov
jmp
addr16
jb
mov
fnstcw
adc
sub
popa
pop
pop
or
xchg
mov
stos
lock
mov
jo
xchg
sbb
arpl
call
mov
or
xor
dec
notl
leave
ror
shll
mov
sub
cmp
jne
mov
cmp
push
outsl
sub
std
add
sbb
xor
imul
jo
add
mov
pop
pop
ficompl
bound
je
xor
ds
setge
cmc
imul
push
jp
into
jae
sbb
outsb
es
scas
jmp
push
add
mov
outsl
push
sbb
insb
sbb
xchg
push
sbb
and
add
cmpsl
xor
aad
mov
out
call
xor
fadd
xor
sbb
cmp
pop
sbb
dec
nop
xor
popf
xchg
sub
xor
filds
mov
enter
out
jecxz
fnstenv
lret
jbe
mov
xchg
mov
mov
mov
incl
mov
into
push
lods
mov
mov
int
cs
hlt
ret
repz
int
or
sub
xchg
stos
sub
push
lds
sub
shll
xchg
sbb
xchg
lods
cld
stos
cmp
pop
cmc
jbe
inc
mov
inc
or
sub
sub
call
push
pop
les
mov
mov
sub
cmp
mov
jo
cmpsl
pop
sbb
stos
insl
lods
insb
sbb
data16
lcall
push
shrb
jl
js
aas
stos
js
test
lret
and
js
int
imul
nop
test
sti
jns
or
xchg
subb
shrl
push
xlat
sub
dec
divb
insl
cmp
test
mov
pop
mov
push
inc
mov
cmp
int
frstor
data16
mov
out
orl
call
fisttpll
andw
and
in
mov
loope
lret
jnp
cmp
push
mov
ret
cli
sbb
mov
shlb
movsb
fdivrl
scas
enter
inc
mov
pop
push
lods
xchg
mov
js
add
out
leave
mov
sti
adc
fistpl
in
out
push
ljmp
pushf
jae
mov
mov
imul
filds
cmpsl
xor
data16
daa
out
fbld
push
adc
fld1
popf
jo
lahf
data16
notl
jnp
or
scas
sbb
or
mov
fs
in
mov
loop
in
and
shlb
leave
jns
pushf
in
or
nop
insl
in
into
jge
mov
mov
test
jle
idivb
jo
ret
inc
sti
mov
pop
add
rclb
test
adc
daa
cs
daa
daa
push
dec
xchg
jg
jbe
cld
sbb
xor
ds
pop
mov
loop
idivl
rcrl
outsl
pushf
hlt
das
jb
stc
lds
aas
negl
xchg
mov
repz
inc
cmp
in
mov
lahf
ret
pop
cmp
inc
pusha
dec
insb
cli
or
out
cld
lcall
std
and
ret
xor
cpuid
shl
push
stc
jle
aam
fcmove
ds
xchg
push
std
mov
insb
push
sbb
lods
iret
ja
and
mov
fucomip
cli
or
push
out
sub
jno
xchg
add
loopne
sub
push
mov
movsl
fadds
pop
test
imul
test
cmp
or
test
loop
stos
mov
repz
mov
push
pop
cmp
inc
push
insl
imull
xchg
sbb
fs
pop
sbb
cmp
mov
incb
dec
pop
or
push
fistl
cmp
pop
stos
popf
jns
sub
scas
jmp
push
into
pop
les
sub
push
sbbb
rep
xchg
mov
or
loope
sub
sbb
pop
or
insb
lods
movsl
aaa
or
mov
xchg
inc
sbb
in
inc
fcmovbe
and
scas
mull
into
sbb
xchg
mov
mov
pop
mov
fstpt
scas
push
mov
test
mov
cmp
data16
enter
cmpsl
or
das
repnz
ret
pop
outsb
pop
int3
jg
jge
je
stos
mov
je
xchg
lods
pop
imul
in
pop
push
pop
loop
add
sbb
or
jnp
push
sub
mov
mov
push
sub
lods
sarb
imul
mov
mov
leave
sar
shlb
or
mov
jno
and
xor
popa
gs
les
and
xchg
std
test
inc
rcll
sarb
xchg
out
rol
push
call
mov
dec
notl
mov
lock
xchg
adc
sbb
dec
mov
or
pop
push
test
xchg
push
jnp
shll
test
hlt
inc
inc
push
outsb
jns
xor
xor
xchg
xchg
setns
mov
push
sahf
daa
imull
aaa
jmp
addl
jb
lret
sbb
negl
push
aaa
int
cmp
lds
int3
arpl
dec
ljmp
dec
add
jg
clc
aas
push
adc
mov
jae
inc
lret
aaa
push
lret
dec
inc
inc
xchg
movsl
cmp
adc
loop
btl
dec
in
mov
cmp
shl
pop
pop
sbb
aam
mov
jecxz
mov
xor
add
cmpsb
sub
adc
test
aaa
into
jbe
and
cmp
add
and
pop
aaa
dec
dec
sti
fcmovne
es
sub
jae
push
movsl
mov
in
dec
fstl
cmp
das
jno
and
inc
mov
jbe
fiadds
mov
enter
loop
jb
aad
mov
cltd
iret
or
mov
pop
mov
in
cmpsl
mov
ret
dec
sbb
mov
mov
pushf
lods
rorb
jno
push
pop
out
int
test
mov
les
lods
movsb
push
inc
cli
imul
dec
fld
clc
stc
cli
shlb
scas
testl
xor
and
cmpl
push
mov
insb
push
sahf
pop
lds
testl
clc
adc
test
inc
push
and
mov
or
mov
dec
xlat
cmp
divb
jae
sub
xchg
xchg
xchg
mov
testl
icebp
xorb
out
xor
sbb
cld
pop
les
stos
mov
repnz
pop
repnz
cltd
les
add
movsl
aaa
jp
fisubrl
sub
mov
mov
int3
mov
movsl
fsubs
and
mov
push
je
mov
ja
cmp
xor
sub
fwait
vmread
push
bound
js
cmpxchg
shll
pop
pop
push
inc
in
cmpsl
and
or
test
mov
or
lret
mov
cmp
sub
icebp
sbb
cltd
lahf
faddl
lock
lcall
push
inc
test
push
xchg
test
add
into
mov
mov
hlt
inc
loop
dec
pop
sbb
insl
jb
lcall
in
in
adc
fsubs
daa
pop
cmpsl
in
pop
inc
cltd
enter
or
xor
nop
icebp
test
inc
call
fisttpl
push
xchg
push
push
rolb
jns
das
mov
rcr
icebp
inc
xchg
and
adc
push
xchg
cltd
xor
lcall
mov
test
xchg
xchg
imull
sub
shll
ret
add
shrb
cmp
outsb
sub
stos
sub
pop
xor
xorb
jb
iret
scas
push
dec
iret
data16
and
lcall
xor
out
ret
js
lea
icebp
rep
out
ss
sahf
flds
sti
mov
fstpt
push
or
adc
sahf
sar
xchg
out
xor
jo
hlt
lahf
imul
and
adc
push
sub
repnz
rcrb
pop
stc
rcll
popa
mov
adc
ret
mov
mov
cmpsb
sbb
cmp
out
movsl
sub
pop
add
cmp
pop
rol
sub
sub
add
das
mov
test
mov
testl
or
cli
sub
dec
fdiv
pop
push
sar
lea
xor
and
push
mov
and
insl
sarl
pop
out
mov
jmp
mov
and
lcall
movsl
mov
data16
mov
sbb
jge
outsl
xlat
cmc
add
mov
roll
mov
dec
enter
imul
mov
cld
jecxz
lret
mov
inc
popa
clc
hlt
inc
les
mov
add
rcrl
test
lret
mov
test
dec
flds
pop
in
orb
pop
dec
mov
cmpl
lcall
and
gs
popf
cmp
mov
fiadds
out
cmc
pop
push
mov
pop
test
andl
add
lock
mov
iret
out
add
jmp
int3
ds
push
or
mov
push
sub
clc
sbb
ret
stos
sbb
pop
and
lcall
fs
adc
fnsave
pop
add
loop
pop
leave
inc
test
jle
sub
add
loope
test
xorb
adc
into
push
test
pushf
data16
imul
jecxz
ds
xchg
push
add
and
pop
dec
jo
test
inc
stos
mov
jb
pop
addr16
arpl
xor
xrelease
das
adc
gs
pop
movsb
ljmp
lahf
inc
inc
aaa
xchg
and
je
jecxz
in
mov
jae
push
and
xchg
insb
cmp
or
std
push
mov
inc
mov
test
push
sahf
stos
cmpl
repz
sahf
mov
lret
or
dec
add
cmpsl
dec
cltd
pop
cmp
inc
push
mov
push
sub
pusha
mov
jne
in
test
add
je
xchg
fs
lods
add
insl
lods
mov
jg
and
movhps
cmc
push
xor
decl
in
ret
mov
mov
mov
aam
test
aaa
xor
mov
dec
xor
jb
pop
pushf
add
aaa
inc
flds
xchg
iret
push
mov
dec
and
jno
stc
xchg
xchg
int
leave
add
int3
and
cmp
dec
aad
repnz
fnstenv
mov
cmpsb
out
in
inc
dec
jno
movsb
pop
sbb
adc
inc
cmp
dec
sahf
mov
dec
mov
out
das
ljmp
push
mov
adc
sub
sub
jg
movsb
daa
mov
data16
nop
pop
mov
leave
fisubrs
ror
dec
add
and
pop
and
fidivrl
xchg
scas
jg
push
popa
and
mov
data16
lret
push
mov
in
shlb
pushf
in
ret
in
push
and
inc
cld
mov
testl
pop
jge
xor
aam
ficomps
push
shrl
popa
sahf
cmpsw
pop
fnstsw
call
movl
mov
sub
stc
nop
cmpsl
mov
sbb
add
aaa
adc
aaa
jb
mov
std
jecxz
xchg
sahf
call
sbb
rcrb
mov
cmp
mov
push
xor
pop
loopne
lods
mov
int3
pop
xorps
xchg
dec
push
mov
and
fidivl
scas
mov
lds
sbb
inc
push
aas
sarb
jae
push
push
repnz
sbb
sbb
ror
sbb
lods
sub
xchg
xor
inc
shr
xchg
sub
popa
dec
xchg
cwtl
jnp
and
xchg
mov
sbb
fdivs
into
pop
and
adc
inc
cmp
cmpsl
out
xor
lahf
daa
pusha
mov
sub
test
inc
bound
sub
sarl
loop
js
imul
push
int
fs
test
or
jl
sub
dec
add
xchg
push
je
fs
xchg
outsl
jo
adc
push
loopne
mov
movsb
std
ret
push
and
xor
xor
icebp
mov
cmc
pop
push
sub
sbb
pop
lock
lahf
or
cmp
dec
push
shr
stos
nop
popa
and
mov
je
mov
js
xchg
add
lea
add
pminub
mov
and
fsubrl
mul
jbe
pop
xchg
icebp
je
dec
sub
int
es
and
je
mov
and
mov
pop
sub
mov
mov
call
daa
clc
iret
and
add
and
mov
xchg
pop
xor
mov
fs
fstpl
test
aad
lock
test
pushf
fidivl
push
js
lcall
mov
mov
push
into
std
leave
jne
lods
push
out
push
sti
ds
inc
sbb
cmp
insl
dec
cld
decl
imul
xchg
or
imul
lds
fwait
mov
std
test
inc
push
fmull
lods
mov
jle
mov
lods
arpl
test
mov
hlt
aam
push
or
sub
lock
in
in
test
das
es
xor
loopne
ljmp
mov
jb
pop
fwait
and
or
test
dec
iret
jecxz
inc
adc
enter
lock
and
push
outsl
pop
daa
mov
test
ret
lods
sub
mov
sahf
or
inc
push
inc
mulb
xchg
xchg
sahf
push
adc
mov
cs
sub
repnz
stos
or
jb
shl
sti
xchg
repz
add
dec
inc
faddl
cli
jmp
repz
ljmp
dec
jl
xchg
xchg
push
inc
out
xchg
sahf
leave
push
xchg
sub
shl
negl
push
test
int3
push
sahf
lds
mov
outsl
push
pusha
pop
les
jne
xchg
xchg
lods
pop
cmc
jmp
outsl
sub
xchg
andl
jecxz
popa
dec
pop
or
inc
push
int3
lea
jnp
pop
jp
lret
popa
or
aaa
stos
insb
test
sbb
pusha
loope
cmp
mov
shlb
test
test
dec
in
mov
sub
scas
dec
scas
leave
mov
push
mov
test
pop
cmc
jle
inc
ljmp
jno
mov
outsl
jnp
movsl
loope
mov
leave
mov
fsubs
push
adc
test
pop
testb
xchg
fdivl
sarl
and
dec
xor
push
mov
inc
dec
add
xchg
insl
notb
loop
add
mov
mov
cmp
mov
loop
rcrb
loope
iret
pusha
add
gs
add
push
xchg
xor
cmp
data16
adc
aaa
add
sub
pop
push
jbe
addr16
fsubs
lret
dec
jl
lret
cmp
push
push
sub
jle
sbbl
fwait
sbb
cmpsl
pusha
dec
insb
xor
add
jnp
mov
sub
je
addr16
mov
jmp
nop
aas
fsubr
fwait
inc
aad
jg
jecxz
fwait
cmp
jnp
cmpsb
pop
jge
shrl
loope
repz
and
xchg
out
adc
jg
dec
xor
push
inc
cmpsl
loope
cld
into
xor
mov
inc
nop
shrl
addr16
push
push
mov
xchg
mov
pop
jecxz
xchg
rcr
aad
fsubl
sbb
popf
inc
cmp
js
push
mov
push
popf
pop
mov
fiadds
xor
push
rcll
inc
or
xor
testl
in
pushf
cmpb
out
cmpsb
sahf
ljmp
js
lahf
daa
out
xor
es
jp
sahf
lds
mov
int3
lret
push
addl
mov
add
sub
out
pop
push
ud2
push
and
mov
sub
dec
xchg
scas
add
add
fldl
stos
inc
mov
or
orl
add
arpl
sbb
lret
dec
nop
div
daa
enter
movsl
sbb
jbe
lret
xchg
and
pop
mov
ret
sahf
pop
mov
push
cmp
out
sti
cmp
cmp
stc
stos
xchg
inc
sahf
fwait
or
inc
rclb
sbb
test
jle
adc
lds
inc
cld
nop
adc
mov
adcb
jno
pop
xchg
push
clc
inc
test
add
jl
sub
pusha
sbbb
out
push
inc
xchg
or
das
adc
js
push
adc
sub
or
sbb
cwtl
adcb
jnp
mov
cmp
push
das
or
test
and
imul
and
mov
cmp
ja
jmp
test
inc
aad
cmp
jae
popa
sub
in
fwait
repz
adc
test
movb
lock
jno
jmp
scas
ret
sub
cmp
mov
je
rcrl
sbb
xchg
gs
pusha
les
mov
lds
bound
data16
push
mov
add
xor
xchg
ljmp
cmp
sub
jno
lds
clc
sar
cwtl
mov
sub
xor
cmp
push
cmp
add
xor
inc
int
xlat
sbb
mov
jmp
mov
int
adc
cmpsb
mov
push
add
xor
arpl
notb
das
jmp
shll
adc
jne
sub
push
cmpsb
outsl
in
push
jmp
clc
and
xor
pop
test
inc
jmp
ds
sbb
mov
xchg
scas
inc
call
jno
inc
cmp
in
je
cmpsb
xor
adc
call
cli
xor
cli
push
inc
fdivr
lcall
inc
std
mov
push
add
dec
mov
sbb
xchg
cmp
ss
aaa
add
shrl
or
and
fwait
mov
int
sub
inc
pop
jge
adcl
and
pushf
or
xor
enter
jmp
andl
or
jmp
fisubl
stc
testb
jnp
jae
fisubs
push
lock
lahf
leave
pusha
fwait
push
daa
je
mov
adc
lahf
cmp
jmp
sarb
mov
jg
xor
add
in
iret
scas
pop
lret
shlb
movsb
push
mov
mov
sahf
in
nop
je
enter
cmp
ljmp
out
xchg
xchg
popf
push
insb
iret
mov
lods
enter
shll
fsubrl
sub
cs
pop
mov
repnz
xchg
cmpsl
sarb
inc
pop
mov
fsub
push
mov
lock
cwtl
and
and
test
rcrl
nop
push
push
mov
mov
movsl
jbe
mov
js
clc
mov
movsb
scas
incl
int
dec
jecxz
out
inc
dec
cmovnp
jnp
ret
fistpl
cli
mov
stos
pop
lret
aam
frstor
cmc
repz
jp
jecxz
or
jae
into
aad
outsl
cmp
rcll
nop
jnp
mov
and
dec
std
xchg
addr16
dec
gs
rclb
add
popa
cmp
xor
inc
out
inc
mov
dec
orl
jns
sub
popf
xchg
cmpl
or
scas
int3
and
test
inc
or
mov
push
sub
ror
clc
push
add
sbb
test
cmp
adc
xchg
mov
push
movsl
and
adc
outsl
sti
lods
jmp
or
cmp
push
mov
arpl
cmp
nop
jl
in
adc
add
lock
arpl
lcall
sub
and
push
into
scas
pop
lret
loopne
mov
jne
addl
andl
cld
inc
and
push
adc
adc
xor
imul
or
std
lahf
data16
mov
int
push
xor
jae
adc
movsb
xor
push
sub
xor
dec
jmp
js
xchg
xor
cmpl
sub
pop
lods
mov
test
sub
mov
or
fistl
rclb
loop
xchg
inc
mov
hlt
xor
cmp
cld
rcrl
xor
inc
sti
fdivrl
adc
lcall
sbb
pop
cmp
test
mov
mov
or
add
inc
fmul
fnstcw
xor
mov
lret
fstpl
dec
rcll
xor
leave
or
sub
loope
popa
adc
in
push
imul
dec
icebp
inc
fidivl
imul
mov
adc
outsb
clc
into
icebp
pop
cwtl
fbstp
inc
fisubs
cmpsb
dec
jmp
shll
popa
call
xchg
jns
xor
repz
dec
add
or
mov
out
aam
xchg
lock
loopne
mov
mov
out
cmp
movb
push
popw
pop
and
fstps
add
jns
rolb
cltd
or
shl
xor
shrb
pop
enter
loopne
sahf
xor
xchg
aas
push
adc
je
xor
call
fmulp
pop
aad
scas
repz
movsb
loop
popa
adc
into
movsl
pusha
jg
loope
jo
cmp
jnp
xor
sbb
in
fwait
mov
mov
sarb
movsl
jnp
adcb
scas
jg
test
mov
mov
adc
fidivs
jns
aam
xchg
mov
adc
iret
data16
mov
add
mov
jg
arpl
jge
sub
xchg
aas
sub
in
xchg
mov
push
lods
mov
pop
insl
xor
inc
inc
or
mov
add
xlat
out
and
adc
push
call
or
jge
xchg
xor
ret
push
pop
in
cmp
inc
pop
in
insl
icebp
cmp
mov
or
icebp
xlat
push
daa
pop
adc
call
mov
sbb
idivl
fidivrs
pop
pushf
push
popf
sti
jnp
cmp
popf
inc
jns
test
pusha
mov
notb
mov
loop
mov
scas
sbb
jne
mov
aas
dec
mov
jb
inc
inc
das
mov
inc
adcl
bound
ficompl
lds
pop
popf
xchg
out
enter
int
mov
cmp
out
or
and
sbb
mov
mov
cli
lds
imul
mov
outsb
sub
mov
les
cmp
cld
mov
push
jns
fistps
icebp
mov
jl
scas
sub
sbb
push
sbbl
dec
test
cmp
sub
repz
pop
fistps
aam
leave
or
jae
movsb
lods
push
mov
lds
pop
outsl
push
sub
ret
add
notb
je
dec
into
mov
mov
sub
clc
jecxz
cltd
in
int3
pop
dec
add
jmp
js
cs
arpl
fwait
sti
inc
mov
push
pop
test
cmp
pop
fsubs
mov
in
mov
push
push
add
in
test
stos
lret
lahf
cmpb
xchg
pop
mov
xchg
imul
icebp
fs
daa
js
jbe
mov
push
sub
mov
pop
lods
rol
rcrb
dec
ss
mov
loopne
cmpsl
cmp
loopne
ljmp
ret
outsb
mov
xchg
into
push
and
cmpsb
jb
add
jno
cli
sub
or
es
adc
push
xchg
and
and
aas
movsl
xchg
cmpsl
push
out
mov
repz
mov
insl
mov
sti
es
sub
inc
xchg
data16
pop
mov
cmpsb
pusha
mov
xchg
pop
repz
and
jl
hlt
inc
xor
cmovp
shlb
fmull
dec
or
mov
dec
insl
mov
dec
loopw
ljmp
push
aaa
dec
fs
dec
cs
inc
cmpsl
rolb
mov
in
sahf
fst
and
repnz
fldenv
arpl
xchg
mov
ret
mov
cld
imul
int
inc
fldcw
outsl
jge
aad
int
mov
test
cmp
xor
int3
hlt
imul
adc
aad
jae
push
jle
pop
in
mov
aad
sti
mov
adc
in
jle
out
xor
mov
mov
adc
xor
fwait
cld
loope
xor
mov
js
loop
jns
adc
adc
add
insl
push
rolb
test
dec
rep
test
push
push
mov
in
or
mov
mov
insb
iret
jl
popf
mov
jae
or
je
mov
aas
fidivrl
lea
sti
add
inc
loope
jle
bound
mov
adc
push
mulb
inc
adcb
and
pop
andb
jmp
call
or
push
or
mov
stos
adc
xchg
cli
cltd
lods
push
jno
xor
mov
mov
sbb
jne
mov
test
push
div
adc
je
push
into
call
mov
mov
push
add
inc
mov
cmp
lret
outsl
sbb
roll
or
cmp
and
sti
xchg
dec
data16
jmp
mov
pop
addl
das
nop
shrl
inc
jp
scas
and
popf
gs
out
mov
inc
es
icebp
xchg
mov
dec
and
sbb
jmp
cmp
lods
xor
leave
pusha
xor
bound
mov
and
mov
bound
fimuls
addl
mov
or
fs
adc
popf
shrb
xor
aam
mov
into
push
jl
repz
aad
sarb
dec
cli
movsl
inc
out
call
mov
push
pop
ss
push
loopne
mov
jl
cltd
add
jnp
pusha
outsb
push
fnsave
bndstx
test
scas
xor
or
xor
pop
sub
data16
outsl
add
mov
mov
dec
pusha
es
cmp
call
pop
mov
xor
mov
cmpsb
iret
and
adc
stos
es
shll
pop
lahf
cli
inc
cli
sub
out
stos
inc
clc
je
sbb
pusha
scas
mov
and
xor
shlb
stos
cld
in
es
sahf
push
or
shll
xchg
idivb
test
mov
idivl
nop
xchg
push
fistpl
lods
inc
push
pop
inc
xchg
sbb
xchg
mov
repz
add
cmpsl
aam
and
icebp
add
aam
stos
jmp
dec
outsb
lds
dec
jecxz
test
inc
fiadds
push
loope
in
int
aam
shll
fiaddl
sub
jecxz
or
out
stos
cmpsl
push
xor
and
shl
sahf
pushf
in
les
sub
or
push
out
adc
ss
test
mov
sbb
cmp
mov
dec
mov
push
loope
cli
arpl
gs
xchg
inc
push
je
ja
adc
mov
repnz
cwtl
add
jnp
sub
lret
mov
mov
fnsave
adc
or
stos
pop
xor
push
cld
fnstenv
insb
pop
adc
cmp
lds
sub
add
pop
mov
add
cmp
sbb
in
cmp
sub
jbe
decb
imul
rcll
sbb
jl
jnp
xchg
xor
sbb
popf
inc
cmp
xchg
add
push
js
daa
data16
cltd
xlat
outsb
lret
push
clc
fildll
pop
pop
push
scas
mov
push
mov
in
xchg
add
orl
sti
out
dec
filds
jns
dec
es
push
jo
push
bnd
les
adc
or
ljmp
call
loop
ffreep
iret
mov
jp
fsubrl
sub
pusha
ja
mov
dec
push
inc
call
test
lods
dec
rcrl
mov
dec
and
fcomps
sub
scas
ja
cld
xchg
mov
adc
pushf
push
shll
mov
pop
adc
xchg
test
pop
push
movsb
add
inc
pop
pop
cmc
sub
lret
xchg
fcomps
lods
in
sbbl
mov
testl
mov
push
mov
icebp
push
mov
outsb
lods
lret
jmp
xor
mov
fldcw
inc
stos
out
pop
mov
lods
mov
enter
mov
sbb
jns
mov
rorl
out
cli
jno
ret
jbe
mov
jnp
mov
mov
jl
into
xlat
push
outsl
cmc
or
xchg
rorl
insb
int
or
mov
rcl
cld
push
and
and
sbb
leave
ss
add
mul
in
dec
pop
mov
push
pop
sub
jnp
je
ljmp
push
lods
call
or
test
or
jo
aaa
clc
lahf
inc
dec
ljmp
ss
dec
jbe
or
jmp
mov
pop
mov
ror
inc
push
sti
arpl
fsubl
or
std
inc
out
xor
into
jl
fwait
or
aaa
dec
in
add
bound
or
fwait
mov
por
inc
push
pop
cmp
mov
jb
inc
hlt
fwait
lcall
adc
cmp
sub
les
add
fiadds
aaa
jb
add
aam
mov
push
xorb
fwait
insl
test
inc
int
jb
sub
daa
popf
or
pop
cmpsl
ds
push
jns
test
or
ds
xor
hlt
insl
mov
lds
cmp
movsl
or
enter
dec
jg
lcall
jmp
push
or
mov
xchg
mov
mov
sbb
mov
mov
sub
push
and
cmp
inc
and
push
cbtw
pusha
imul
mov
mov
daa
pusha
sub
je
sahf
cmpsb
mov
pushf
in
jp
ret
sbb
sub
push
jl
inc
sbb
jne
cld
xchg
dec
test
and
mov
ficompl
rorb
call
test
shll
scas
in
and
xor
adc
and
mov
out
sub
xlat
ljmp
mov
imul
aam
popf
lcall
jnp
fiaddl
loope
xchg
sbb
fstpl
dec
iret
xchg
xchg
cmpsl
xchg
gs
pop
add
cmp
xlat
and
pop
cwtl
fs
out
aad
fidivs
jo
in
dec
xchg
lret
lret
ret
add
clc
inc
push
sbb
stos
mov
jg
adc
mov
inc
jae
lds
cmpsb
in
pushf
out
aaa
icebp
movsl
stc
add
inc
popa
js
test
shl
push
add
pop
cld
out
sub
scas
ret
arpl
test
xchg
scas
orl
sub
mov
lods
mov
gs
push
test
ret
pop
mov
xchg
pop
out
cmp
cli
push
je
jbe
add
and
push
or
movaps
jbe
lret
lds
shll
mov
or
mov
in
cs
out
cmc
pop
sbb
or
imul
ret
inc
xor
inc
out
insl
jecxz
sahf
mov
add
fdivs
insl
hlt
push
popa
scas
inc
or
mov
jg
mov
dec
and
dec
mov
roll
lcall
das
lods
cmp
rorl
inc
mov
sub
dec
sub
mov
dec
pop
shl
xor
rep
sub
bound
pushf
push
leave
push
or
jl
scas
lds
pop
mov
sub
pop
add
clc
cmp
push
push
or
mov
les
loop
mov
jnp
xlat
movsb
addr16
sub
lret
xor
jle
mov
adc
adc
xchg
pusha
cmp
push
pushf
jo
lods
mov
lea
sarl
stos
jbe
dec
loopne
mov
out
adc
arpl
popa
and
popa
shll
in
xorb
subl
mov
mov
inc
fcmovb
fistl
insl
and
outsl
fs
icebp
mov
ret
push
jg
dec
xchg
stos
dec
movsl
jp
xor
sbb
fcomps
dec
jns
xor
adc
push
popf
push
xchg
inc
pop
adc
add
movsl
push
lds
stos
mov
sub
mov
faddl
nop
pop
ja
or
jmp
and
cmp
xchg
ja
stc
push
cwtl
je
gs
bound
iret
out
inc
pop
popa
fistpl
sub
fstpt
mov
jle
fmull
pushf
inc
pop
leave
fs
xchg
jecxz
inc
and
fldt
mov
aam
fidivl
aaa
xchg
test
aad
arpl
sbb
xor
or
adcl
dec
daa
inc
mov
adc
ljmp
xchg
enter
cmp
lods
lahf
test
aam
orb
mov
jge
int3
shll
ja
pop
jo
test
aaa
mov
pop
shll
pusha
jle
sub
pusha
push
mov
mov
orl
je
icebp
movsl
scas
mov
jae
cmp
stos
inc
lahf
pop
mov
in
sahf
or
ds
out
mov
mov
sbb
mov
cmp
mov
sub
mull
inc
lods
bound
sti
rolb
xchg
pop
cmp
inc
sbb
shlb
scas
pop
loopnew
add
shl
push
ret
shll
dec
pop
addb
fwait
sbb
mov
test
cmp
and
bound
jns
dec
stos
xchg
popa
add
xchg
or
dec
jne
std
das
xor
adc
sub
dec
gs
aaa
cmpl
push
in
orl
or
cmp
jns
mov
mov
pop
xchg
sbb
sahf
jne
xchg
stos
xlat
stos
es
sub
outsb
push
pop
cmp
push
cltd
or
push
call
and
mov
adc
popa
cltd
cmpsl
xchg
inc
push
lods
jno
test
dec
sbb
pop
mov
clc
movsl
paddq
js
dec
push
sub
inc
mov
ja
loopne
shll
test
push
add
sbb
push
stos
cmp
ja
and
inc
fwait
ds
pushl
out
loop
inc
out
adc
leave
popa
es
xor
sub
ret
jl
shrl
cwtl
clc
pop
mov
mov
or
bound
adc
xchg
lods
sbbl
mov
sub
jno
mov
mov
pop
cmp
addr16
aad
fisttpll
lcall
add
and
xchg
cltd
insl
dec
pop
shll
jp
add
into
cmpsb
push
hlt
xchg
mov
sub
in
xchg
pop
out
pop
std
add
aad
jae
pop
sub
sti
push
dec
jge
andb
mov
hlt
adc
and
jge
adc
or
add
sub
xorl
lock
inc
test
xor
popa
or
stos
mov
pop
scas
xchg
stos
pop
movsb
int3
push
inc
test
xlat
sub
push
push
int3
xlat
ljmp
ljmp
insb
add
popa
repnz
fcmovbe
pop
mov
imul
repnz
sarb
cwtl
rorl
cmp
adc
mov
cmpsl
add
cmc
jo
cmp
sahf
xor
jmp
or
das
push
mov
xchg
pop
ficoms
pop
jbe
jbe
mov
mov
leave
fwait
cli
rclb
es
lahf
dec
push
scas
mov
imul
mov
cmp
pop
ss
dec
xchg
xchg
mov
sbb
sbb
stc
dec
mov
dec
loope
stos
inc
outsb
rcrl
xor
jae
adc
jge
nop
scas
sbb
adc
cld
or
push
push
jbe
rclb
xor
mov
lock
je
cltd
xlat
rep
xchg
xchg
or
addr16
ds
loopne
shl
mov
sub
and
shrl
in
or
xchg
cmc
and
ljmp
or
sahf
mov
mov
fisttpll
imul
or
dec
hlt
mov
mov
mov
push
xchg
mov
fidivrl
popf
mov
cmp
pop
mov
jl
mov
jle
sbb
xor
fistl
rol
ss
js
stos
mov
and
lea
xchg
stc
push
mov
pop
xlat
ljmp
add
shl
push
inc
out
pop
imul
sub
inc
push
pop
or
adc
into
cmpsb
inc
outsl
xchg
push
xchg
sub
dec
cmpl
fisubrl
ret
icebp
mov
add
sub
cmc
jg
and
fists
cmp
jo
cmc
adc
mov
int3
xchg
ljmp
push
push
cmpsb
imul
mov
mov
test
jb
lcall
adc
enter
mov
pop
cltd
lret
out
test
arpl
ljmp
les
mov
loop
sub
fadd
add
jle
adc
sub
les
popf
or
sbb
enter
test
mov
loopnew
jns
std
sub
fwait
push
sub
dec
xchg
inc
jne
xor
movsb
push
push
in
add
push
aaa
add
leave
push
movsl
mul
dec
cs
adc
mov
or
push
add
inc
iret
xchg
add
rorb
mov
orb
daa
mov
gs
mov
push
call
push
js
bound
int3
enter
xor
add
sbb
adc
pop
adcb
test
jmp
add
test
dec
fimuls
negl
lods
mov
adc
xorb
sub
mov
inc
xchg
je
mov
shl
out
push
in
dec
in
inc
lahf
xchg
inc
cmp
cli
mov
pop
movsl
mov
mov
es
pop
ds
mov
out
loop
fdivs
mov
rcrb
addr16
cli
aam
sub
stc
shl
dec
mov
cmc
adc
xor
aaa
cmpsb
mov
cmpsb
pop
arpl
cmpsb
cmp
imul
out
rorl
adc
faddp
pushf
fiadds
lretw
xchg
outsb
mov
sub
stc
dec
mov
mov
dec
fldcw
push
ja
jg
mov
out
les
add
movsb
and
js
cmp
gs
mov
xlat
mov
enter
pop
mov
int
xor
inc
js
decl
shlb
and
sub
movsl
push
xchg
sub
xlat
scas
jb
adc
pop
xchg
shl
mov
lret
xchg
test
into
lods
inc
inc
cs
ret
lret
jae
test
xor
dec
fs
adc
in
mov
xor
cmp
xchg
insb
in
sbb
mov
out
test
les
outsb
pop
xchg
xor
add
xchg
sti
and
pusha
addb
outsl
sub
and
add
je
xchg
mov
loop
pop
dec
shrl
mov
add
testb
or
rolb
mov
mov
pop
insb
shll
inc
mov
mov
ret
jae
add
sub
cs
sub
fldenv
or
push
pop
dec
leave
adc
iret
push
lds
push
push
and
fstl
out
pop
mov
mov
jg
xchg
sbb
dec
jno
test
imul
es
dec
pop
call
stos
adc
fs
dec
lods
xchg
push
fs
and
popa
lretw
scas
xorb
xor
push
pop
flds
dec
jns
mov
add
sbb
or
cli
dec
pop
sub
faddl
dec
xchg
push
mov
or
out
or
fisubs
test
sbb
pop
pusha
cmpsl
ret
pop
xchg
lods
jae
add
inc
mov
std
add
mov
inc
cltd
push
xchg
rcrl
xor
out
scas
repnz
sbb
insl
int3
sahf
push
imul
movsb
and
jle
adc
mov
mov
mov
cmp
addl
sbbl
lods
inc
push
xchg
repz
dec
mov
gs
and
in
jno
shrb
push
dec
lock
jecxz
sub
pop
push
das
or
pop
xor
and
in
mov
push
div
loop
inc
in
shlb
adc
lods
jns
out
lcall
lods
mov
iret
jle
and
cmc
mov
decb
testl
shrb
das
lds
mov
dec
out
xchg
xor
push
pop
outsb
add
mov
add
add
pop
xchg
push
push
setnp
ja
out
xchg
les
in
xor
fwait
mov
imull
sbb
jge
mov
jns
mov
stos
hlt
fiaddl
out
outsl
jne
rcl
stos
add
mov
int
into
or
out
es
jecxz
fwait
dec
xorb
popf
repnz
inc
xchg
sub
or
adc
movsb
leave
stc
mov
scas
dec
cmpsl
jnp
rolb
pop
xchg
mov
inc
ja
mov
jae
cmp
xchg
test
dec
hlt
mov
inc
fildl
scas
mov
mov
ss
jne
push
and
lahf
in
jb
leave
add
sbbb
dec
arpl
pushf
out
sbb
mov
cli
je
lret
sub
in
jp
out
mov
rol
cmp
push
push
daa
out
jge
mov
jae
adc
das
sbb
sub
in
lcall
xchg
mov
inc
sbb
jl
and
fwait
pusha
outsl
sti
sub
popf
jo
dec
mov
js
sub
dec
ds
in
cmp
loop
leave
push
sub
pop
call
sub
mov
clc
inc
pop
scas
xor
xchg
jnp
sbb
nop
add
pop
sbb
mov
and
les
push
and
and
fiaddl
movl
and
leave
sti
jbe
scas
xchg
mov
adc
xchg
gs
mov
addl
mov
mov
mov
jae
divl
xchg
jmp
shrl
sbb
and
scas
and
cmpsb
dec
lods
dec
cmp
popa
pop
mov
mov
mov
cmp
sbb
pop
cld
lcall
in
pop
push
jnp
and
pop
pop
pop
mov
bound
les
pop
test
daa
cmp
push
ds
pop
aas
dec
fdivl
cmpsl
push
rorb
icebp
test
push
mov
dec
out
into
or
lret
or
mov
stos
testl
fwait
jle
pop
jl
push
adc
ja
xor
pop
std
cmc
adc
adc
push
pop
pop
lret
pop
lret
jne
pop
fmull
dec
mov
dec
mov
sbb
aam
push
test
dec
pop
sub
int
and
fwait
test
fwait
ss
and
scas
push
repnz
push
sub
inc
clc
dec
enter
shll
pop
or
xchg
push
in
or
cmp
mov
xor
lds
ljmpw
cmpb
fwait
dec
pushf
scas
adcb
into
ret
stc
decb
lret
in
add
cwtl
cmp
mov
stos
lods
int3
rcrl
xor
or
js
out
insl
push
add
adc
fildl
movsb
cmp
mov
pop
jmp
sti
pushf
outsl
push
js
arpl
mov
and
xchg
mov
fisubrl
cs
lods
jg
push
nop
adc
incl
popf
xor
xor
add
and
test
jae
or
pushf
xor
inc
inc
sub
cs
inc
add
nop
movsb
push
mov
cli
imul
add
push
fwait
popf
cwtl
cmp
mov
fiaddl
lahf
mov
mov
xchg
xor
repnz
daa
rcrb
mov
jecxz
lret
into
repz
arpl
push
push
lock
and
push
notl
shlb
pop
xor
push
gs
cld
jp
sbb
push
adc
loop
cltd
int3
push
sbb
test
inc
or
fiadds
xchg
mov
inc
sbb
mov
les
jb
jle
les
sbb
inc
divl
es
daa
xor
pop
jecxz
lret
enter
add
or
cmc
adc
movsb
mov
aad
ds
pop
aas
xchg
xchg
sbb
pop
addb
je
jecxz
mov
cltd
xor
popf
imul
mov
sti
stos
es
fld
js
ja
or
jg
jle
mov
icebp
sbb
mov
mov
sbb
out
popa
out
lahf
push
cmp
adc
mov
inc
fadd
dec
cmp
cli
xchg
mov
sahf
decl
pop
mov
cmpsl
ret
call
stos
jns
movsb
mov
xlat
or
daa
pop
mov
pop
rol
adc
mov
sahf
out
lods
pop
dec
xchg
aad
xor
xor
test
bound
mov
fs
cmc
xchg
sar
xchg
das
movsl
movsb
addr16
int3
sbb
lcall
iret
xchg
cmpsl
movsb
pop
cmpl
jmp
divb
notl
lods
cmpsb
cmp
fbstp
xchg
rcll
inc
push
xchg
xchg
fidivrs
lret
sbb
push
mov
pop
push
filds
pop
fildl
mov
sarl
test
mov
loope
mov
pxor
push
lahf
xchg
xlat
jmp
jno
pop
je
scas
cmpsb
mov
es
jle
out
mov
rolb
shr
pop
sub
out
in
imul
divb
daa
in
xor
mov
push
or
jmp
ja
sahf
jbe
xchg
pop
xlat
mov
test
es
or
add
dec
gs
xchg
push
pop
sub
pop
xchg
xor
clc
xorl
mov
fdivrl
cltd
data16
add
xchg
lret
inc
sarb
cmp
ret
cmp
fmull
jbe
gs
jne
xor
add
mov
adc
pop
stc
movsb
jl
mov
out
ss
xor
pop
inc
movsl
mov
pop
inc
and
pop
test
outsl
jno
cltd
sbb
or
shll
xlat
xor
lods
enter
cwtl
inc
cld
inc
push
cmc
mov
adc
inc
xchg
out
clc
cmpsl
pushf
daa
mov
inc
loopne
cli
daa
inc
stos
cli
mov
sarl
outsb
mov
fstp
and
shr
es
sbb
out
stos
or
and
dec
lods
std
pop
adc
outsb
jnp
jle
jo
lods
movsl
aad
clc
shlb
outsl
ljmp
ret
cmc
pop
ret
shll
xchg
push
bound
xlat
mov
sarb
mov
ficomps
enter
call
outsl
xor
sbbl
les
xchg
cli
dec
lahf
outsb
mov
pop
xchg
or
lds
call
add
jo
imul
inc
test
or
xchg
or
cmpsl
cld
pop
lcall
jbe
or
xchg
push
mov
in
xor
pop
insl
push
mov
mov
mov
add
inc
popa
outsb
sbb
fisttpl
push
negb
push
cmp
fidivs
loope
fisttps
cs
imul
mov
adcl
mov
dec
mov
cmp
cmp
jle
lds
xlat
popw
and
adc
scas
dec
mov
sbbb
out
test
xchg
imul
cli
adc
mov
inc
and
mov
adc
fstpl
mov
ret
jne
out
adc
dec
sbb
pop
lcall
xor
jnp
add
inc
xlat
icebp
pop
lock
cmpsl
jo
ret
sarb
ja
testb
mov
insb
sti
add
andb
lock
push
hlt
cmp
pushf
fildll
xchg
cmp
and
jne
popa
lahf
push
arpl
or
adc
push
cmp
mov
and
jecxz
je
ds
mov
lret
xchg
data16
mov
je
inc
popf
dec
lea
cmp
and
icebp
jecxz
fcoml
int
inc
add
push
sbbl
adc
lahf
gs
repnz
pop
outsl
adc
push
mov
cli
enter
enter
push
jmp
mov
clc
push
test
xor
and
popf
add
aad
loope
test
add
cmpsl
sbb
jns
sahf
mov
cmp
xlat
test
mov
pop
dec
outsl
mov
lahf
cmp
jge
dec
popf
xor
push
jnp
xchg
add
add
xchg
ret
das
xorb
lea
and
inc
in
ja
cmpsb
stc
sbb
xor
dec
or
cmp
push
das
scas
push
mov
or
add
lods
inc
push
ret
repz
enter
mov
jns
xlat
cmp
and
jnp
jb
cmp
jo,pt
dec
sbb
push
ret
mov
std
nop
repnz
pop
jbe
inc
inc
mov
jmp
leave
mov
push
dec
cmpsl
cmp
jle
pop
scas
cmp
or
les
loop
adc
lods
aad
xor
inc
push
jmp
es
insl
add
out
mov
push
adc
sub
or
fnclex
cmp
pop
sub
lret
iret
shrl
mov
out
push
dec
lea
push
sahf
sbb
ljmp
or
mov
cmc
add
and
movsl
xchg
mov
in
dec
xor
pop
push
hlt
fsubs
dec
sbb
xor
mov
pop
xor
add
pushf
jae
inc
sahf
sub
loopne
xlat
or
mov
aam
cltd
stos
in
cmpsb
cmp
leave
ret
popf
push
mov
clc
iret
sbb
jo
icebp
ja
rolb
cmp
icebp
push
mov
add
shlb
iret
pop
mov
repz
in
xchg
in
inc
data16
push
jno
jnp
xor
xchg
inc
mov
sarb
lcall
test
mov
lods
data16
insl
mov
daa
les
push
cmp
pop
dec
loope
jg
lahf
and
pop
inc
call
popa
jl
lock
or
nop
out
ljmp
sub
sbb
lret
stos
inc
push
int
sbb
mov
adc
pop
inc
lret
fnsave
jle
jle
adc
mov
aam
shll
popa
clc
gs
jmp
int
mov
xchg
mov
inc
leave
fucomp
cmp
inc
test
stc
push
stos
fwait
sbb
mov
adc
inc
std
sarb
cmp
mov
aas
push
clc
fmuls
sub
pop
fnsave
sub
pop
loop
stos
pop
nop
fmuls
test
movsl
mov
outsb
mov
sahf
cmp
mov
xchg
add
add
adc
lcall
sbb
repz
dec
loope
pop
lret
xchg
icebp
sahf
inc
pop
clc
nop
pop
addr16
xor
add
jo
push
loop
sbb
push
jecxz
gs
jns
stc
sub
cld
lcall
in
dec
sbb
and
insl
hlt
inc
arpl
mov
gs
sbb
pop
lret
cld
or
mov
inc
mov
xlat
jno
mov
test
cmp
insl
and
popf
sbb
cmp
out
add
cmp
xchg
mov
sub
fisubl
add
push
mov
add
loop
push
push
loope
cmp
and
pop
ja
mov
push
popa
andl
cld
notb
insb
ja
sub
pop
xor
dec
xchg
hlt
mov
jmp
adc
pop
ja
sub
xor
cmpsl
push
cld
lcall
jne
push
jl
dec
clc
push
ljmp
jno
jnp
xor
outsl
and
fistl
popa
push
fmulp
sub
sbbl
ret
aaa
pop
push
rclb
pop
jle
insl
fucom
add
sbb
adc
push
jmp
ficoms
push
test
test
rep
addb
cmp
fucomp
add
mov
stos
rcr
cmc
mov
sbb
dec
push
ds
lods
pusha
test
scas
adc
xchg
pop
lcall
stc
cmp
mov
push
scas
outsb
push
xor
daa
lds
ljmp
xchg
test
sbb
pop
mov
sti
pop
and
or
sub
jge
cmp
pop
jp
scas
pop
jp
cwtl
cmp
inc
repnz
lcall
popa
cld
push
push
fwait
xchg
xor
push
adc
lret
or
xor
cltd
push
sub
mov
movsl
aad
ljmp
pushf
repz
mov
cmpsl
cld
xlat
outsb
cs
or
cmc
or
or
add
jnp
xchg
movsl
pop
push
movsl
mov
cmpsl
sbb
in
scas
and
mov
aad
test
jg
shlb
sbb
cmc
les
mov
in
adc
stc
ss
mov
sbb
movsb
cmp
loop
xchg
leave
imul
mov
gs
or
cmp
jae
test
jle
jne
dec
dec
aam
cmp
or
push
mov
pop
jbe
sbb
add
aas
ja
push
stos
pusha
fwait
xor
jae
inc
sub
push
mov
pushf
and
addr16
xchg
sub
repnz
inc
mov
push
pushl
dec
loop
decb
das
or
cld
cmp
sbbl
movb
dec
mov
into
int3
sub
pop
pop
in
aad
fcomi
nop
sbb
lods
jg
push
push
ret
push
dec
leave
mov
icebp
imul
jge
pop
jo
push
es
rcrl
add
cs
cwtl
out
andb
std
imul
cmp
aad
fs
cmp
sar
sub
test
sub
mov
cltd
in
ljmp
int3
call
cmc
hlt
push
pop
repnz
mov
sahf
sub
xchg
sub
std
or
or
push
mov
add
dec
rcrl
aam
outsb
icebp
mov
out
pop
push
mov
jl
sbb
pop
test
mulb
dec
fildl
push
sub
or
mov
pop
mov
mov
sbb
pop
lahf
stos
mov
mov
fs
or
mov
mov
shll
lods
mov
pop
fnsave
je
cmpsb
in
push
lcall
aas
in
pop
ja
inc
xchg
sub
nopl
fimull
repnz
mov
outsl
loop
js
mov
pop
pop
lods
roll
inc
inc
outsb
ficoml
test
or
lods
jo
das
loopne
mov
xor
lock
mov
mov
pop
lock
xor
fsubl
push
sahf
cmp
xchg
lret
pop
jmp
mov
cld
out
mov
jnp
xchg
ret
fiaddl
test
gs
jmp
mov
movsl
divl
xor
sub
ja
scas
das
adc
jg
rclb
int3
mov
adcb
and
lods
add
fsts
or
in
dec
push
xlat
mov
scas
inc
mov
pop
scas
mov
je
test
jno
cmp
mov
add
mov
or
xchg
popf
fwait
inc
mov
push
mov
into
subl
dec
nop
inc
nop
insb
adc
sahf
icebp
flds
or
test
int3
mov
icebp
sub
xor
sub
jno
push
push
test
flds
iret
or
inc
ret
sub
imul
push
test
sarb
cmp
test
add
pop
lods
inc
adc
mov
dec
fisubs
rorl
test
or
pop
ja
jb
ljmp
aad
addr16
enter
xchg
insb
sub
in
add
les
or
sti
leave
mov
lret
int3
daa
leave
int
jmp
pop
ljmp
pop
add
inc
sbb
fdivrs
sbb
inc
pushf
adc
popf
sub
and
jecxz
aas
push
cli
call
mov
out
out
ficomps
lret
push
les
fldenv
cmp
out
cmp
dec
cmpsl
or
jmp
movsl
mov
xlat
scas
jno
xor
push
jmp
xlat
outsl
jmp
loopne
sahf
or
jmp
hlt
cmp
cltd
jmp
or
aam
les
mov
sahf
dec
jge
movl
xlat
insl
das
cld
push
loopne
xchg
insb
inc
fsubrs
xchg
hlt
inc
push
call
xor
add
jnp
mov
out
int
out
ds
stos
arpl
lcall
dec
push
insb
js
lods
add
das
or
inc
cmp
adc
stc
xor
jne
inc
sub
sbb
dec
inc
push
jnp
lahf
inc
dec
subb
jecxz
out
call
test
sbb
das
cmp
test
xor
sahf
xor
or
call
in
pop
jg
nop
mov
lcall
mov
mov
jnp
push
and
push
pop
push
stc
ret
or
mov
push
pushf
call
cmp
push
jno
mov
jmp
push
inc
inc
movsl
in
push
dec
shll
pop
xchg
adc
jmp
sarl
sub
mov
adc
pop
cmp
roll
inc
sbb
imul
adc
or
das
mov
or
adc
enter
dec
leave
push
mov
cmpsl
cmpsb
dec
sub
mov
add
mov
fstpl
xchg
arpl
mov
pop
or
mov
xorl
out
jnp
pop
or
pop
mov
fs
clc
jbe
mov
pop
push
inc
inc
push
and
or
mov
test
popa
cs
jmp
stos
cld
xor
sbb
ds
xchg
repz
xchg
fbld
std
movsb
orl
std
or
xchg
pop
std
insl
idiv
test
or
cmp
inc
aas
xor
fadd
cmp
call
add
and
leave
aaa
or
subl
xchg
pop
inc
iret
fstpl
testb
shrb
mov
or
cmp
outsb
sbb
sub
sbbb
add
mov
lret
popf
cmpsl
std
mov
jp
or
add
dec
in
out
popw
push
cmp
cmp
ficoml
test
lret
ja
push
pop
pop
jg
jnp
sti
aas
xor
jae
and
shl
mov
sbb
lahf
push
ljmp
and
jp,pt
icebp
jecxz
push
dec
adc
jnp
in
scas
push
aas
aam
jns
pop
in
daa
test
sub
pop
pop
subb
mov
dec
pop
push
jecxz
stos
xchg
xchg
shrl
push
cmp
push
outsl
dec
adc
aaa
mov
inc
popa
lods
xchg
sub
cmpsb
mov
fwait
popa
fdiv
movsb
es
daa
ret
psadbw
and
push
xor
xor
add
test
shrl
dec
sub
cmp
test
mov
scas
xor
push
and
insl
add
movsl
icebp
cmp
push
subl
imul
mov
insb
push
jmp
test
sbbb
add
shlb
cwtl
sbb
dec
inc
cli
nop
popa
and
xchg
icebp
jbe
push
clc
imull
es
push
and
test
push
inc
push
mov
mov
sbb
pop
leave
insb
mov
rol
pushf
jbe
xchg
jnp
pop
cmpsb
jbe
pop
out
and
adc
movb
jmp
mov
popa
addl
fwait
pop
adc
int
dec
test
inc
cs
rcrl
sub
sub
sub
dec
jge
out
fsubr
inc
lds
push
jb
enter
js
lahf
fidivrl
pop
inc
jne
out
jnp
subl
inc
rcll
mov
stc
fcomip
mov
adc
or
mov
mov
xchg
aad
xor
dec
in
dec
aam
fcoms
dec
cmp
out
push
or
dec
stos
and
inc
lret
jb
mov
push
lods
add
fnsave
repz
pop
adc
mov
cmp
js
lea
je
xchg
notl
movsb
mov
pusha
ja
cltd
pop
ljmp
fimuls
into
insl
popa
mov
mov
scas
jmp
into
enter
lahf
pushf
pop
mov
mov
mov
mov
out
nop
out
rolb
jno
outsl
mov
adc
xchg
imul
mov
sahf
mov
mov
movsb
push
jns
lods
pop
jle
or
out
jae
sahf
dec
out
sbb
inc
push
push
mov
loopne,pt
jno
mov
data16
xchg
pusha
loope
cmp
fnstsw
dec
ds
dec
ljmp
add
aam
jp
xchg
cltd
mov
adc
fs
push
mov
scas
arpl
push
and
xchg
std
or
out
int
add
cwtl
xchg
mov
lods
repz
xor
addr16
popa
pop
push
in
add
cltd
repz
sbb
insb
imul
imul
jnp
pop
stos
inc
dec
add
cmp
jb
fistpl
and
out
or
lea
int3
pop
xchg
sbb
xor
adc
lods
jnp
push
movsl
fdivrs
shl
push
inc
adc
ds
lods
test
adc
cli
jl
inc
pop
fwait
pop
nop
push
xchg
pop
dec
pop
xchg
and
add
pop
pop
add
xor
and
fiaddl
icebp
stos
inc
push
cwtl
mov
push
lret
mulb
pushf
repz
mov
inc
fisubs
repz
aas
add
add
das
or
pmaxsw
fbstp
pusha
fincstp
insl
std
xchg
or
add
icebp
jb
cmp
sub
leave
jne
loope
shrl
lret
je
push
rclb
imul
mov
jo
xchg
dec
dec
pop
xor
jge
mov
jge
fwait
jmp
mov
aaa
pop
push
xchg
mov
inc
jl
xor
shrl
into
xor
pop
jno
lea
int
jne
adc
imul
bound
orb
repnz
loope
mov
mov
stos
mov
mov
ljmp
adc
xchg
sub
dec
mov
ss
or
and
nop
mov
mov
jle
imul
cwtl
cs
pop
jo
xor
pop
cmp
inc
jno
sbbb
icebp
ret
icebp
sub
ljmp
xchg
adc
adc
push
mov
icebp
xor
int
addr16
js
test
push
xor
dec
add
add
add
je
push
sub
shld
xchg
jnp
rorl
stos
popf
nop
inc
fcmovb
mov
pop
lock
mov
es
daa
xchg
pop
cmpsb
fwait
shl
inc
xchg
sub
cs
fcompl
addr16
mov
out
or
aad
sbb
ret
or
ljmp
lret
orl
inc
sbb
mov
out
push
dec
mov
xor
sbb
mov
repz
lahf
inc
fsubr
fwait
xor
mov
in
imul
add
in
or
aas
xchg
out
xchg
mov
pop
pop
mov
xor
mov
jne
pop
push
sbb
scas
inc
lcall
arpl
pop
jmp
pop
aad
jns
push
lods
ljmp
push
cmp
xchg
mov
or
mov
inc
enter
sub
shll
sub
jl
add
sets
cs
fldenv
and
test
pop
sahf
out
leave
rcll
std
nop
jo
fisubs
add
push
pop
xor
add
pop
inc
mov
adc
lahf
adc
mov
out
jecxz
call
call
or
add
and
xchg
xor
int3
stos
mov
repnz
sub
push
adc
mov
andl
and
push
sahf
insb
orl
ss
cli
push
sbb
jb
imul
and
jl
jle
sub
adc
into
adc
and
push
dec
stos
mov
push
mov
mov
pop
ret
or
les
popf
push
cld
lahf
rcrl
jecxz
in
add
sbb
call
or
loopne
mov
cmp
or
shlb
loopne
mov
out
dec
and
insl
mov
dec
iret
dec
adc
pop
dec
push
stc
and
jnp
or
loop
cmpsb
jp
jle
inc
fs
pop
clc
dec
or
rcl
jp
push
mov
daa
mov
sbb
cmp
test
add
popa
dec
cmpsl
rclb
cmp
or
sbb
fistps
jnp
push
xchg
aam
inc
jns
sbb
cltd
jmp
cld
bound
pushf
mov
insl
and
mov
int3
mov
mov
sbb
sarb
or
std
pop
push
clc
out
pop
add
jg,pn
or
or
push
icebp
pop
loope
mov
fidivl
fisubrs
jp
pop
mov
jnp
ret
bound
fdivl
aaa
into
out
push
push
xacquire
xchg
int3
sub
push
xchg
xchg
xchg
adc
fisubrs
lock
sub
cwtl
jle
jmp
scas
cmpsb
ds
lock
lods
jnp
sub
iret
sub
push
pop
sub
cmpsl
mov
jne
testl
mov
lods
inc
ficompl
fcomps
pop
loope
xor
into
push
lods
faddl
test
je
add
fiaddl
inc
shll
mov
pop
loop
arpl
inc
inc
and
sbb
pop
cmp
cmp
fcmovne
fs
and
xchg
test
in
stc
sbb
in
sub
mov
sub
ret
lods
fbld
cmp
movsl
fldl2t
ret
adc
imul
cwtl
cld
lods
mov
xorb
loopne
sub
mov
jns
inc
push
ja
cmp
test
push
adc
inc
inc
sti
fsubr
frstor
xchg
sub
inc
cmpsb
rcrb
cmpsb
xchg
outsl
cs
jne
adc
push
mov
out
sbb
sub
daa
or
pop
sub
fwait
xchg
push
and
lret
sarl
push
xor
pop
pop
imul
idivb
sub
inc
popa
push
dec
mov
jle
mov
fmull
sub
xchg
sub
or
movsl
jl
push
xchg
sub
push
subl
push
cmp
incl
sub
pusha
jns
push
pop
push
dec
cmp
cmc
add
clc
add
daa
subl
push
stc
icebp
jp
cmp
test
push
jb
sub
and
pop
adc
loope
out
jns
sbb
xor
add
shrl
cmp
or
cmpsb
fdivl
scas
aas
fdivs
cld
packuswb
push
lods
push
cmp
sbb
adc
jle
and
adc
cwtl
sbb
cmp
popl
and
jmp
mov
mov
xor
adc
or
xor
xor
stos
adc
out
icebp
cmp
in
adc
push
ror
out
in
out
dec
xor
push
and
test
push
adc
movsl
sbb
out
mov
sub
pop
sub
dec
pop
and
or
xchg
jl
arpl
hlt
lcall
xlat
adc
inc
pop
xor
fdivrs
xchg
aad
ja
leave
test
icebp
pop
or
mov
jecxz
test
popa
ret
enter
mov
rcrl
or
in
mov
inc
stos
rcrl
mov
popf
in
adc
ret
mov
push
pop
insl
fsubr
addr16
test
push
fisubs
ja
sti
nop
xchg
test
mov
imulb
mov
je
scas
loopne
push
xlat
mov
das
repnz
out
loopne
rcrl
addr16
addr16
ret
push
cmc
hlt
inc
add
out
leave
xchg
in
cmp
pop
inc
add
inc
lahf
bound
int
mov
adc
push
dec
jbe
loop
cs
insb
es
pop
lea
shr
xchg
inc
add
xchg
jle
push
loope
test
int3
push
iret
pusha
push
cmc
xchg
jp,pn
add
cwtl
in
push
or
js
push
jno
test
xor
dec
cmpsl
push
outsb
jbe
cwtl
arpl
mov
dec
mov
jge
lahf
mov
cmp
pusha
push
stos
xchg
dec
and
in
lahf
pop
popf
xor
stos
es
fnstenv
mov
mov
push
popa
stc
fs
pop
lcall
sub
mov
push
mov
mov
test
and
insb
xlat
jmp
hlt
pop
sub
dec
or
xor
xor
scas
mov
subb
jns
mov
shl
int3
jbe
call
mov
loop
stc
jle
lds
push
pop
aad
xchg
pop
and
add
push
xchg
mov
divb
movsl
rcrb
mov
mov
test
dec
jb
test
sub
fiadds
stc
mov
cmp
dec
lock
jl
jecxz
dec
popf
sbb
inc
jl
pop
pop
xor
mov
push
sbb
pop
mov
mov
das
ja
cmpsb
inc
sbb
inc
and
scas
add
sti
xor
xchg
rcl
adc
xchg
sahf
iret
and
js,pt
push
and
ljmp
test
pop
mov
popa
cs
dec
add
adc
push
jg
pushf
and
cmp
cwtl
sub
call
je
das
mov
test
sbb
dec
and
js
loopne
mov
inc
loope
nop
sub
rcr
cmc
out
dec
loope
and
addr16
fs
pop
dec
sub
imul
jecxz
jne
test
movsl
imul
test
pop
movsb
insl
shll
test
dec
dec
pusha
movsb
mov
popa
dec
mov
adc
es
jo
xor
clc
stos
sti
xor
or
in
aaa
lods
and
cltd
mov
sub
mov
movsl
lret
pop
push
inc
addr16
adcb
aas
test
sbb
cmp
cmp
in
jecxz
mov
push
fs
pop
movsl
xor
push
jmp
mov
sarl
dec
loope
or
sbb
fwait
adc
add
mov
xchg
int3
push
dec
xor
ljmp
sub
pop
test
rol
push
and
inc
fmulp
xchg
cmp
jbe
cmp
int
in
movsb
loop
fsubr
mov
gs
fdivs
sbb
dec
pop
mov
mov
cmp
cmp
inc
or
vpcmpeqb
inc
push
dec
xchg
mov
mov
push
inc
test
cmpsl
xlat
loopne
addr16
and
test
aas
je
movsb
out
out
jnp
jle
xchg
pop
cwtl
sti
cmpl
pushf
pop
push
jnp
inc
xor
ljmp
inc
gs
cwtl
in
mov
jle
xor
xchg
jns
mov
scas
iret
insb
clc
lret
ficoml
cmp
push
inc
jge
mov
or
push
push
inc
dec
cmpb
gs
adc
loopne
sbbb
outsb
jno
mov
cmc
mov
stos
xchg
cmp
lcall
pop
pusha
mov
shlb
adc
pop
mov
scas
ret
lea
jmp
movb
jecxz
sbb
mov
sbb
xor
daa
xchg
xor
mov
mov
add
dec
pop
inc
fimuls
and
adc
std
or
pop
cltd
dec
and
ret
arpl
pop
jns
outsl
dec
insb
dec
xchg
mov
leave
push
lcall
sahf
scas
lcall
mov
mov
dec
fcoms
dec
xor
ret
pop
jbe
push
sub
dec
mov
mov
jecxz
ds
pop
stos
addb
and
jp
leave
sub
je
pop
das
rcrl
sbb
mov
repz
cld
jne
mov
xchg
sbb
xchg
xchg
pop
in
add
test
xchg
sub
fcompl
scas
dec
lea
scas
ret
loop
mov
sub
cmp
nop
push
jmp
ds
fucomip
cmp
jnp
mov
loope
lds
pop
test
fdivl
mov
in
int
xchg
adc
sub
cwtl
jae
out
or
jbe
or
ja
nop
test
dec
outsb
lahf
popf
xor
add
popf
dec
or
movsl
mov
sbb
rcll
call
or
imull
adc
mov
arpl
push
pop
cs
jp
daa
inc
add
jmp
dec
mov
lahf
jg
pop
bnd
out
jp
pop
lods
cmpsb
addb
test
outsb
jmp
sahf
jns
std
jmp
scas
inc
pushf
push
add
les
in
cmpb
or
xor
imul
in
test
xchg
clc
add
push
repnz
nop
cmp
pop
push
mov
test
push
cmpsb
inc
gs
mov
fsub
jge
push
dec
xchg
das
jg
xchg
pop
hlt
jmp
dec
clc
inc
jmp
jg
push
mov
dec
daa
cwtl
pusha
pop
sub
push
into
lea
stos
mov
fisttps
repnz
xchg
push
cmp
pop
outsl
hlt
sub
or
cmp
sub
mov
mov
xchg
inc
lds
dec
dec
add
xchg
leave
adcl
ljmp
call
popa
stos
fidivrs
bound
xchg
testl
mov
adc
cmp
mov
fnstsw
in
jae
stc
sub
js
imul
decl
cltd
out
out
out
fsubp
jnp
adc
push
mov
fbstp
daa
mov
xor
adc
shr
fistl
lcall
xorb
sub
ficoms
enter
iret
and
sub
xchg
arpl
add
jae
add
adc
movsl
out
jmp
fs
mov
repnz
aas
and
or
scas
jno
test
stos
xchg
xchg
pop
lahf
xor
jp
shrb
pop
jb
pop
repz
lahf
inc
xlat
rclb
fs
sbb
pop
mov
insb
rcl
out
and
int
pop
mov
out
inc
push
lock
out
cli
jno
push
jecxz
jne
xchg
icebp
mov
mov
lock
rcl
adc
imul
aaa
pop
push
bound
ja
pop
cmp
and
fs
xchg
cmp
ret
imul
std
jg
pop
xor
inc
in
and
ret
pop
icebp
lret
or
inc
push
adc
jo
sbb
or
ljmp
aaa
hlt
cmp
loopne
and
and
inc
dec
mov
stc
rorb
push
push
jo
ljmp
ljmp
clc
inc
mov
sub
js
cmp
cs
xlat
xchg
and
add
push
mov
pop
mov
xlat
or
xchg
push
pop
add
jno
adc
push
push
mov
sahf
hlt
inc
stos
in
cmp
aam
cmp
lea
xchg
dec
hlt
or
jl,pn
fucomip
popf
std
xor
loopne
fcoml
mov
shr
std
lock
or
xor
add
out
addb
xchg
cmp
or
mov
jg
dec
pusha
fstpt
pop
dec
pop
sbb
cmp
hlt
xor
inc
ret
imul
or
sbb
rorl
sbb
bound
hlt
mov
sti
fwait
out
rcrl
mov
inc
jecxz
jle
shll
fwait
mov
add
out
pop
enter
inc
mov
push
outsl
xor
xor
or
repnz
adc
xlat
mov
popf
jg
call
out
popa
adc
jmp
mov
jb
pop
pop
outsb
aas
inc
lahf
or
cmp
cmp
mov
and
call
jl
pop
ret
pop
sbb
rorl
mov
mov
xor
adc
mov
sti
lds
xlat
xlat
jno
and
scas
mov
lock
dec
sub
pushf
sub
aas
dec
fstps
enter
xchg
push
mulb
dec
pop
lret
push
jae
jno
imul
and
inc
mov
mov
and
ljmp
fildll
add
inc
insb
jb
mov
mov
xor
popa
push
clc
movsl
pop
mov
pushf
imul
inc
into
dec
adc
mov
rcr
and
mov
jl
sub
xchg
movsb
cmc
push
clc
adc
mov
sbb
sbb
dec
pusha
rcrb
push
xchg
sti
ja,pn
add
mov
xchg
es
and
sti
add
cltd
mov
loop
or
mov
ljmp
and
and
xchg
ss
mov
nop
jnp
push
push
or
push
pop
aas
sub
xlat
sbb
cmp
adc
or
cmp
add
repz
fisubs
cwtl
ret
int3
fdivrs
push
ja
xchg
mov
dec
xor
mov
out
add
jl
fmuls
idivb
stc
lcall
dec
cltd
and
adc
mov
test
lahf
jbe
rolb
repnz
jp
fistl
mov
mov
test
daa
ret
movsl
xlat
movsb
push
jge
jp
hlt
repz
mov
dec
fbstp
push
fidivl
xchg
xchg
scas
xor
add
sub
xchg
jecxz
adc
xchg
push
sbb
sbb
pop
sbb
push
and
mov
gs
bound
cmpsb
in
lods
inc
xchg
mov
mov
mov
pusha
push
leave
inc
les
mov
xlat
ficomps
adc
mov
mov
mov
push
lds
sbb
popa
adc
cmp
add
bound
sbb
das
fidivrs
push
mov
add
mov
mov
divb
aam
int3
mov
mov
mov
test
xor
add
out
les
into
in
hlt
sbb
push
movl
std
in
lret
push
jb
jne
sti
dec
inc
or
jecxz
int3
clc
arpl
js
int3
pop
adc
aas
xchg
jo
call
cli
call
out
jmp
fsubrs
or
mov
rcrl
leave
sbb
call
mov
push
popa
hlt
xor
jl
test
cwtl
das
negb
jae
pop
mov
dec
pop
xlat
outsb
fisttpll
cmc
mov
dec
sub
jl
xlat
cmp
enter
sahf
xor
fildl
jmp
and
cmp
mov
pop
in
mov
mov
sbb
lds
xor
mov
shll
pushf
pop
scas
and
inc
cmc
push
inc
xor
cwtl
imul
inc
roll
mov
popa
clc
fcom
sbb
sub
dec
lds
xchg
sbb
daa
cld
pop
test
or
jbe
shrb
ret
jns
lods
lods
dec
loopne
int
cs
js
cmpsb
sahf
pop
mov
fbstp
sub
das
lcall
aas
bound
jge
sub
cmp
ljmp
or
idivl
ficomps
add
xor
jno
arpl
add
xchg
jns
jns
leave
dec
cmpb
jo
inc
inc
add
dec
pop
js
lret
sub
rorb
jmp
icebp
es
add
add
xchg
push
push
adc
jns
mov
nop
jg
aam
xor
fldl
nop
jp
or
and
stc
or
stos
xchg
mov
int
inc
js
mov
jns
mov
pop
or
aam
and
ja
shlb
add
jno
jg
lahf
sbb
jnp
or
sbb
mov
les
insl
imul
test
scas
mov
fisttps
pop
mov
sbb
jnp
mov
jno
or
mov
ficoml
cmpsl
loop
mov
icebp
mov
inc
or
jb
stc
movsb
cli
imul
jle
push
cmp
in
inc
dec
or
cli
nop
sub
inc
gs
jb
add
mov
imul
push
loope
pop
inc
sub
pop
ret
jl
out
notb
add
test
lcall
mull
inc
cmc
mov
mov
pop
rcrb
cmp
cmpsb
lea
mov
jecxz
gs
sub
ret
mov
sub
cmp
mov
adcl
inc
push
cmp
pusha
ret
stos
fistl
jnp
mov
pushf
fmuls
faddl
dec
adc
clc
pop
out
sub
iret
adc
push
ljmp
fs
inc
fnsave
jo
add
and
popf
jo
mov
mov
daa
testl
and
adcb
repnz
test
xor
or
and
or
pop
cmp
imul
jge
mov
rorl
mov
into
ss
or
adc
push
inc
pushf
and
daa
dec
jecxz
push
mov
sbb
icebp
pop
js
mov
stos
xchg
mov
flds
lcall
ret
mov
test
dec
cmp
in
nop
daa
pusha
sbb
ja
push
js
pop
xor
out
loope
mov
push
xchg
test
sahf
repz
and
sub
clc
nop
and
sbb
add
je
addr16
movsb
mov
mov
fldl2t
sub
mov
dec
or
xor
dec
push
xor
fcoml
or
sub
mov
loope
sub
insl
nop
mov
fidivrs
aad
dec
pop
mov
cmc
nop
xor
jns
icebp
xchg
push
lods
ret
jns
stos
lods
jmp
imul
inc
jecxz
push
push
cmc
enter
push
adc
sarl
ret
out
rorl
jg
fimull
mov
adc
cmp
cs
lds
in
arpl
xor
mov
data16
rclb
pop
jle
arpl
push
shlb
dec
xchg
cltd
nop
clc
jge
push
in
lret
xor
jae
xchg
fwait
loopne
or
dec
jbe
and
add
es
mov
jns
enter
mov
pop
xchg
enter
in
pusha
orl
scas
in
stc
insl
push
js
ja
ja
push
mov
pusha
jne
xchg
mov
outsb
pop
dec
xchg
inc
jp
dec
jo
stc
xchg
mov
shl
rcl
pop
inc
stc
push
inc
faddl
and
mov
nop
jno
add
scas
ret
loopne
test
int
mov
shlb
mov
aaa
fidivl
inc
daa
std
and
test
mov
or
scas
push
lods
dec
lds
cmpsb
ret
xor
jns
pop
icebp
mov
insl
mov
int3
mov
hlt
mov
xchg
jmp
push
lods
mov
mov
mov
push
in
pop
repz
stos
jge
or
pop
mov
mov
cmp
mov
daa
xchg
xchg
adc
lret
repz
inc
mov
popl
sbbb
data16
outsb
xor
pop
mov
and
push
xlat
cmp
cmc
movsl
loope
jb
xchg
cmp
movsl
aaa
sbb
jg
pop
cs
insl
inc
lods
xchg
ret
add
mov
and
push
jne
mov
push
sbbl
pavgb
mov
mov
jg
cmpsb
les
imul
xchg
jbe
jl
lods
mov
fwait
cmpsl
hlt
loop
inc
and
jb
iret
inc
mov
std
jl
xor
lahf
cmp
lea
mov
sti
or
cmp
sahf
inc
dec
outsb
jecxz
mov
add
ljmp
mov
loopne
cmpsl
hlt
mov
xchg
mov
sbb
int3
aam
std
mov
mov
push
jo
pop
mov
add
mov
inc
jge
je
lret
and
push
mov
mov
psubw
mov
xchg
stos
lods
int
adc
push
out
and
xorl
nop
cmp
cltd
lods
dec
inc
in
test
movsl
push
ds
mov
aaa
xchg
and
inc
mov
enter
nop
pop
sarb
leave
mov
push
fistps
imul
sahf
sub
push
fcmovnu
ljmp
lcall
test
xchg
xchg
fidivs
mov
imul
dec
inc
push
add
sbb
cmp
into
shr
or
addl
lahf
mov
xchg
mov
stos
jb
mov
dec
fldl
jbe
and
mov
jae
pusha
cwtl
das
cmpsl
ret
pusha
stc
stc
iret
subl
in
addl
fildl
sbb
test
xor
push
mov
fsubs
and
test
mov
lods
pop
in
sbb
adc
inc
sub
mov
rorl
shrl
add
cltd
jns
dec
push
xchg
xor
shll
inc
loopne
xor
repz
mov
jbe
addr16
lret
xchg
das
rcrl
mov
or
pop
idivl
aas
sbb
and
xorb
xor
inc
push
shll
data16
data16
xchg
cmp
and
outsb
repnz
adcb
cmp
bound
cwtl
mov
pop
movsb
mov
nop
divb
stc
mov
sbb
ret
movsl
lret
shr
push
shrl
into
sbb
sbb
iret
bound
jg
jb
pop
dec
inc
ds
fcomps
cmp
push
jo
and
mov
lret
roll
movsl
inc
push
xchg
adc
jbe
sbb
repz
or
adc
add
push
xor
cmp
jbe
fsubrs
xlat
aad
xorl
push
mov
push
ds
in
ljmp
sti
mov
mov
cld
sbb
fildll
ds
stos
inc
repnz
inc
push
loop
in
rcrl
scas
insl
xor
in
mov
imul
daa
ljmp
call
lahf
int
jmp
cmp
add
mov
in
in
push
pop
lret
lea
scas
cmp
shl
ljmp
jae
dec
in
sahf
inc
loop
jl
push
push
out
inc
dec
mov
adcb
out
push
out
sbb
nop
cmp
dec
test
or
icebp
or
xchg
sub
imul
ds
out
add
fwait
or
stc
loope
aas
daa
sub
or
lret
adcb
push
mov
cli
sub
ss
inc
roll
add
js
xor
outsb
test
out
sub
cmp
lock
popf
or
out
jle
rorl
adc
aam
test
insb
or
sub
in
les
ja
outsb
or
std
fdivrp
and
pop
adc
std
xlat
lods
sub
std
mov
popl
sti
aam
roll
mov
mov
hlt
pushl
shlb
mov
fldl
mov
xchg
sub
xor
xchg
bound
mov
cmp
repnz
lods
push
iret
inc
test
fildll
add
pop
les
adc
ret
stc
lret
stc
andl
lcall
add
cli
cmp
mov
adc
mov
in
daa
cmp
shrb
adc
mov
push
mov
adc
in
das
xchg
pop
in
sbb
leave
ret
sbb
mov
jecxz
inc
pushf
mov
iret
pop
jne
jge
mov
out
sarl
mov
pop
dec
loopne
mov
pop
outsl
cmpsb
sbb
aam
cmp
xlat
pusha
adc
mov
loope
bound
sub
lods
jp
jge
mov
adc
aas
push
loope
push
sahf
xlat
loopne
or
out
inc
sahf
out
movsb
cmp
shlb
inc
sbbl
jne
enter
mov
shr
xor
pop
xchg
push
xor
imul
mov
push
xchg
sub
add
pushf
jo
and
frstor
cmc
adc
mov
gs
gs
loope
sbb
sub
inc
xchg
mov
xchg
jle
call
ret
cmp
in
cmp
adc
fimuls
fucomip
jmp
test
sarl
imul
loop
and
fistpll
aad
sub
mov
nop
fs
les
mov
push
mov
sbb
hlt
stc
xchg
and
or
int
push
jmp
call
inc
fcomps
inc
push
rorl
test
and
mov
dec
mov
cld
inc
ficompl
repnz
sahf
clc
in
sti
sub
mov
or
xchg
sub
scas
xor
adc
pushf
jo
in
ficoms
test
movb
cmp
call
or
lret
mov
loope
loop
push
dec
jecxz
les
arpl
sub
inc
pop
adc
sysenter
lcall
add
fwait
divl
pop
sub
sbb
sti
pushf
daa
lret
test
mov
mov
popa
das
push
popa
enter
jo
movsl
sub
insb
xchg
int3
jo
fwait
imul
mov
inc
xor
shll
xor
jmp
jnp
in
and
dec
xor
dec
dec
pop
push
outsb
int
xchg
xchg
mov
daa
or
fiaddl
mov
xor
lods
scas
out
fs
sbb
lahf
mov
sbb
inc
cmp
cld
ret
sbb
dec
push
push
cld
fcoml
test
sub
fwait
stos
aas
mov
ret
fsubr
insl
ret
add
or
sub
leave
mov
and
xlat
fdivs
clc
mov
insb
xlat
xor
jmp
sbb
sbb
aam
dec
adc
fdivrs
sub
fs
jle
mov
mov
mov
fst
cmp
sub
insb
jg
shl
mov
stos
mov
dec
repnz
loop
mov
jne
mov
outsb
lcall
pop
pop
lock
and
and
adc
cmpsl
sbb
jnp
jb
aaa
ficoml
sbb
pushf
insb
sbb
les
std
lds
ss
lahf
mov
jae
sbb
cmpsl
into
push
cli
ficoms
mov
jne
arpl
negb
pop
sbb
inc
fwait
lret
push
jno
cmove
adc
inc
push
popf
repnz
faddl
mov
xor
aad
sub
sbb
push
adc
inc
inc
sub
xlat
outsb
and
pop
jo
insl
jge
xchg
lcall
pop
test
pop
jae
add
call
or
loopne
gs
add
pop
sub
pop
loopne
jo
pop
std
mov
mov
push
cltd
in
nop
and
pop
sahf
sarb
mov
xchg
inc
fcmovnb
push
sub
mov
idivb
xchg
sbb
dec
mov
push
hlt
jl
jne
rorl
out
jg
jnp
sbb
cltd
jae
and
push
mov
mov
mov
mov
daa
shrl
scas
jmp
outsl
outsl
je
stc
mov
push
push
jbe
mov
int
shlb
lcall
xchg
or
loop
movsb
jmp
add
cmpsl
in
cmc
popa
cmp
jae
xor
stos
cmp
loope
inc
popf
test
dec
and
sbb
inc
les
xchg
add
into
sti
xchg
rorb
les
mov
enter
mov
mov
push
jg
and
xchg
out
mov
mov
mov
push
stc
adc
mov
std
pop
call
mov
jno
cmp
jo
and
rcrb
stc
ds
dec
iret
fs
fbld
adc
and
cmp
pop
das
iret
je
add
in
push
stos
lahf
testl
dec
xchg
test
mov
mov
outsl
pop
rolb
popa
jbe
dec
cmp
xchg
daa
shl
js
inc
lds
fistl
dec
outsb
stos
dec
push
xlat
insl
loopne
rclb
repz
daa
pushf
popa
push
in
shl
jmp
flds
nop
and
lret
shlb
aas
loop
dec
mov
dec
xchg
dec
movsb
mov
ja
adc
jno
cmp
insl
push
ljmp
roll
mov
push
pop
cmpsb
xor
pop
pop
aam
sahf
push
cmp
mull
dec
sbb
stc
inc
and
ljmp
fldt
pop
repnz
movsl
notb
int
jnp
jae
insl
je
ds
adc
repz
loop,pt
xchg
outsl
sbb
call
adc
push
lods
lret
or
bound
jns
pop
inc
mov
pop
xchg
popf
cld
dec
cmp
jle
add
outsb
fistps
add
in
dec
xchg
jmp
inc
insl
pushf
mov
iret
aas
pop
repnz
mov
push
scas
ja
mov
rcl
push
pushf
mov
add
ret
pushf
xchg
or
cli
sub
inc
sbb
dec
call
adc
xchg
les
mov
sbb
push
sbb
into
in
add
aaa
mov
test
out
jmp
and
sbb
dec
loope
push
adc
pop
sbb
mov
jno
or
nop
outsb
adc
dec
jnp
stc
das
fdivs
pop
sbb
jecxz
enter
test
loope
fwait
mov
in
and
mov
adc
call
imul
cmpsb
lock
or
test
pop
sub
out
push
aaa
or
and
stos
xchg
cmpsb
jo
adc
jno
or
adc
loop
xorb
lea
out
out
fldt
mov
ret
jge
loop
jnp
cmpsb
push
roll
jmp
insb
les
insb
jle
lret
outsl
cltd
es
fadd
sub
push
ret
sub
push
gs
push
call
mov
out
xchg
pop
sub
xor
lods
dec
je
lods
lods
lods
jmp
sub
test
das
and
fisttpll
mov
fisubrl
negl
cmp
push
sahf
divl
xchg
sub
pop
hlt
movsl
cmp
js
push
stos
mov
scas
inc
loopne
push
hlt
fs
scas
inc
in
xchg
mov
ret
adc
push
in
dec
xor
push
fs
jae
pop
or
cmp
enter
in
movsl
push
daa
xor
xchg
add
movsb
pop
test
lret
xchg
inc
add
xchg
adc
outsb
fmuls
mov
push
xor
and
cmp
dec
dec
insb
mov
mov
dec
fs
std
or
lds
mov
shl
push
inc
loop
out
inc
pop
loopne
push
push
inc
int3
sub
xor
inc
bound
rcrl
out
cmp
pop
pop
or
and
cmpsl
mov
or
mov
fldl
sbb
das
or
cmp
push
dec
xchg
bnd
jp
clc
and
dec
fdivr
add
inc
nop
fbstp
bound
ja
std
pushf
and
mov
cmp
push
movsb
arpl
mov
mov
mov
aad
loop
stos
daa
int3
adc
sub
jo
xchg
push
or
fsubrs
inc
insb
into
lods
xchg
add
lea
andb
mov
adc
clc
iret
push
mov
inc
sbb
bound
mov
xor
ljmp
stc
sahf
xchg
sub
mov
mov
int3
xchg
jo
mov
scas
roll
mov
and
mov
fimull
stos
push
mov
pop
hlt
stos
mov
mov
xchg
and
data16
cs
mov
cmp
pushf
test
add
xchg
cmpsl
outsb
sub
and
mov
and
cs
sub
subb
jecxz
cmpb
je
repz
lock
stc
scas
lods
mov
aas
fmull
or
xchg
lret
pop
icebp
mov
loop
cwtl
mov
loop
mov
mov
cltd
or
mov
sbb
mov
idivl
gs
jo
or
jmp
cli
add
add
push
push
jle
xor
rcr
loopne
sub
das
mov
xor
cli
test
ss
scas
out
cmp
cmpb
mov
popf
mov
js
rcr
push
stc
ltr
ficoml
aaa
icebp
push
xchg
xor
pop
push
fidivs
jne
mov
sbb
fcmovnb
dec
gs
xlat
lcall
dec
iret
mov
cli
cmpsb
bound
xchg
insb
xorb
xor
push
and
lret
xor
add
cs
xchg
fucom
sahf
jae
sbb
fbld
fdivs
xchg
int
push
psubusb
add
cmc
mov
out
es
pop
fisttpll
add
lods
popf
stc
sub
test
xor
jae
ret
fadds
lods
sub
jp
mov
cmp
sbb
out
cld
xor
push
insb
les
aaa
push
imul
sahf
or
cltd
mov
movsl
cmpsl
repnz
sub
movsl
mov
xor
cltd
and
pop
loope
pop
add
add
test
or
cmp
aad
repz
and
cltd
pop
push
std
inc
leave
xor
aam
sub
dec
mov
or
inc
pop
sub
sub
lds
xchg
daa
ret
scas
call
or
and
gs
call
and
das
in
pop
pop
cmpsl
and
jmp
jbe
pop
dec
stc
dec
inc
in
xor
add
rorl
sub
pop
mov
aas
or
mov
dec
jbe
sbb
loope
fdivrs
arpl
xorl
fildll
mov
rcrl
dec
or
test
mov
dec
sbbb
fnstenv
xchg
jbe
fsubl
adc
gs
jg
and
sub
data16
cmpsl
sbb
mov
mov
xor
cmp
dec
repz
cmp
int
mov
mov
lock
push
adc
xchg
pop
movsl
ret
jle
scas
pop
mov
or
pop
dec
xchg
idivb
push
cmp
xlat
cmpsl
xor
push
stc
mov
xchg
arpl
sbb
mov
ja
mov
jecxz
jne
inc
cmp
jne
lods
sub
push
loope
or
out
sub
add
lret
lahf
leave
test
scas
arpl
fbstp
inc
xchg
inc
je
or
rorl
jno
sub
repz
sbb
mov
dec
xchg
mov
cmpsb
mov
pop
hlt
imul
sbbl
pop
or
mov
fstl
dec
mov
test
andb
imul
and
xchg
and
das
add
scas
cmpl
aaa
xor
mov
orl
mov
lcall
out
stc
pop
adc
xchg
inc
ss
jo
mov
out
sbb
ljmp
pop
mov
jge
inc
xor
xlat
xchg
lock
call
or
lds
xchg
dec
aam
shrl
jne
pop
cs
mov
add
jp
adc
dec
fwait
mov
cmpsb
aaa
push
jmp
stos
mov
pop
pop
ja
mov
shlb
lds
add
cltd
or
pop
or
and
test
in
test
cmp
mov
mov
ljmp
sahf
dec
shrl
pusha
mov
rcrl
inc
inc
dec
cmp
or
ss
dec
push
jl
xchg
ds
movsl
cltd
call
cwtl
ljmp
inc
fcmovne
add
stos
jmp
je
fs
push
out
xor
mov
stc
iret
cld
adc
inc
push
dec
lret
sub
xchg
lret
push
or
xchg
dec
shll
outsl
sbb
bnd
not
addr16
arpl
repnz
push
loopne
adcl
inc
subl
dec
sub
icebp
divl
ret
mov
cmp
popa
clc
add
in
cli
dec
xchg
pop
psrlq
lock
enter
pusha
inc
push
xchg
fistps
push
mov
mov
addr16
pop
pop
mov
push
adc
mov
sub
aas
jae
call
inc
pushf
ljmp
push
or
fstl
mov
std
stc
sbbb
xchg
xchg
mov
mov
test
sbb
push
hlt
out
rclb
pop
fsubrl
lods
mov
mov
mov
test
fists
push
adc
fst
jae
xor
jmp
aas
scas
mov
aaa
stos
rcrl
inc
sbb
scas
fdiv
imul
inc
push
or
push
and
mov
push
stc
mov
pusha
cmpsb
popf
xchg
sub
pusha
insb
fists
mov
add
outsb
aad
xchg
mov
cld
test
scas
notl
out
mov
je
mov
xchg
add
lods
mov
sbb
in
or
add
shlb
inc
mov
pop
push
sub
stos
lods
mov
stc
pop
xchg
repz
dec
dec
pop
rclb
xchg
sub
loop
mov
add
movsl
xor
fnstenv
sub
dec
adc
push
lret
dec
sbb
mov
stos
xor
int
int3
xlat
repz
cmp
add
cmpsb
sbb
lcall
push
sub
add
ficoms
sub
rorb
aaa
loop
addb
cli
int3
mov
and
aam
xchg
mov
push
pop
repnz
xor
add
sub
inc
add
cwtl
cmp
popa
mov
push
aam
loope
push
out
mov
or
test
jl
xorb
imul
xchg
mov
ss
pop
push
inc
fldl
mov
enter
ret
jae
jo
jno
sahf
jne
test
xor
cmpsl
jno
cwtl
dec
loopne
xchg
stos
push
jecxz
lock
lret
xor
dec
or
fidivs
lods
sbb
out
ja
sbb
icebp
dec
rorl
or
das
cs
and
mov
mov
enter
sbb
das
add
jp
mov
or
cld
loope
mov
sub
rol
xor
in
adc
pop
stos
repnz
jne
leave
jecxz
xchg
jp
enter
xlat
sbb
xchg
and
ret
jge
mov
mov
aam
or
push
mov
int3
adc
lcall
insl
in
sbb
rcrl
mov
movsl
into
fisttps
nop
mov
jbe
fcomip
call
push
push
sbb
imul
lret
mov
xchg
mov
fsts
test
int3
lahf
xor
xchg
imul
push
gs
test
in
inc
add
mov
sarl
mov
adc
push
pop
fcoms
sub
dec
mov
mov
test
rorl
inc
gs
pop
repz
mov
push
insb
sub
sbb
ljmp
cwtl
nop
aam
jmp
mov
jo
push
incb
mov
and
insb
sbb
jb
retw
xchg
inc
mov
sahf
cmp
loop
dec
pop
stos
add
std
mov
push
in
xorl
rep
je
dec
sbb
push
dec
fiadds
or
cmp
push
jno
inc
or
fsubs
sub
out
push
and
icebp
jo
sub
add
sbbl
push
mov
pop
sahf
mov
pop
cmp
popf
sub
sbb
xchg
jbe
repnz
mov
adc
cmp
jp
mov
test
ljmp
and
pop
and
popf
xor
test
loopne
jnp
sub
pop
ljmp
cli
add
mov
sbb
pop
or
imul
adc
mov
stos
roll
mov
and
lahf
andl
lods
sbbl
or
outsb
sarb
or
es
adc
jo
push
inc
rclb
xchg
pop
gs
insl
xchg
sub
pop
jb
cwtl
arpl
mov
cmp
pop
scas
hlt
in
jo,pn
ss
dec
aam
dec
in
rorb
sbb
pop
cmovp
jl
jne
xchg
dec
cmp
faddl
xor
ror
repz
ja
pop
cmpl
jmp
mov
lock
push
stos
cmpl
lds
mov
popf
shr
push
push
or
icebp
dec
repnz
sub
xchg
and
jl
outsb
inc
jb
or
lea
popf
stc
iret
out
push
mov
stos
shld
mov
mov
dec
outsb
mov
cmp
xchg
or
cmp
xchg
lret
leave
test
jmp
clc
out
adc
push
lret
fdivrl
mov
push
push
arpl
out
push
xor
nop
daa
addl
popf
cmp
inc
mov
push
leave
xlat
xchg
popf
sub
orb
mov
mov
add
mov
in
lcall
and
test
or
clc
cmp
cmp
mov
mov
test
and
in
add
sub
icebp
mov
cmpsb
cmp
inc
roll
add
jp
cltd
jb
je
fisubrs
addr16
rcrl
xor
scas
bound
jp
push
ss
aad
sbb
jne
daa
lods
movsb
aad
out
test
xchg
mov
sbb
sar
lret
or
sbb
loope
push
loopne
sbbl
repnz
mov
pusha
xor
sbb
adc
movsb
pop
das
out
iret
data16
jns
xchg
mov
sarl
int
out
jb
jno
pop
movsl
jge
sbb
bound
lahf
jge
jmp
pop
leave
cs
mov
xchg
sti
jns
add
lret
pop
imul
ret
adc
and
dec
push
pop
xchg
sub
lret
xor
xor
jae
orl
dec
sbb
or
shlb
testb
pop
pop
inc
mov
jnp
fwait
stos
addr16
mov
xor
push
test
jle
jno
shlb
shll
mov
or
ret
jae
dec
sub
je
cli
jecxz
xchg
add
lds
sub
dec
lods
das
xlat
and
pop
stos
in
cmp
add
fbld
xorb
movsl
mov
cmp
fs
je
xlat
jmp
lds
rcrb
sti
cmp
imul
test
mov
shrl
scas
fucomp
mov
and
push
call
repnz
loopne
and
arpl
and
mov
dec
mov
xor
mov
ljmp
mov
or
adc
inc
inc
xor
inc
adc
inc
inc
fisubrl
imul
movsl
test
xor
inc
inc
std
push
ret
sub
jecxz
hlt
sbb
jae
imul
add
jnp
push
mov
cmp
push
movsl
out
ja
cmp
pop
push
dec
pop
icebp
addl
inc
and
xchg
scas
sub
les
sbb
pop
fbstp
test
dec
shrl
adc
xor
lods
mov
in
fstpl
scas
or
les
into
mov
mov
ret
and
or
pop
ficoms
mov
jbe
sahf
jnp
mov
inc
inc
mov
sbb
bound
xchg
pop
sti
lahf
lods
pop
js
mov
stc
shrl
aaa
loop
mov
das
jnp
jno
sbb
aam
mov
cmp
es
inc
addl
sbb
cs
mov
ljmp
lods
mov
dec
dec
adcb
sbb
outsl
imul
lds
mov
pusha
imul
push
stos
inc
mov
cli
xchg
pop
push
push
stos
or
sbb
into
es
jns
retw
stos
add
es
mov
mov
sbb
lea
lret
jno
pop
adc
sbb
dec
repz
lret
cmp
cmpsb
sbb
nop
dec
dec
jno
inc
daa
in
xchg
push
dec
cwtl
cli
or
mov
sub
lods
pop
out
loope
sub
in
js
lahf
push
scas
adc
aad
rclb
iret
fwait
ja
cltd
test
push
fwait
outsl
enter
nop
adc
in
jmp
mov
mov
sbb
loopne
mov
out
jg
lock
outsb
push
shlb
lea
inc
push
out
test
les
pop
pop
jns
dec
ljmp
jno
xchg
stc
icebp
pop
sub
scas
aaa
add
xchg
adc
cmp
xor
insb
jle
bound
js
cwtl
mov
cld
mov
les
jae
test
lahf
ret
cmp
inc
pop
mov
push
imul
mov
push
xor
jns
mov
jno
mov
lock
mov
sbb
xchg
sub
addr16
testb
mov
filds
loope
pop
xlat
and
call
or
add
out
ss
sub
bound
aad
stos
cmp
push
insl
movsl
cmp
ja
mov
add
adc
push
and
les
cmpsl
sti
orl
adc
jmp
test
cs
clc
lret
sbb
loop
pop
sbb
dec
xchg
push
pop
push
sti
xchg
and
pop
out
add
fstpt
push
mov
mov
xchg
push
inc
out
addr16
inc
ss
push
in
sub
jns
and
add
and
cmpsb
sub
std
repz
sub
fcmovne
je
cld
cmp
jecxz
sub
add
xchg
gs
into
jg
and
int3
out
ret
rcll
push
call
pop
sti
scas
mov
dec
sub
cmp
int
adc
pop
cmp
cmpsl
outsb
adc
push
lret
cld
aas
fs
push
aam
jbe
add
xor
into
loope
adc
inc
cmp
js
sub
fistpl
adc
ss
and
scas
xor
push
rorb
in
loope
adc
adc
insb
pushl
xor
cmpl
or
popf
je
mov
es
mov
push
pop
clc
test
sub
mov
mov
cmpsl
xchg
jle
loop
xchg
sbb
mov
fdivl
mov
les
popa
adc
iret
sub
dec
mov
or
or
lcall
ss
cwtl
in
bswap
sub
push
lock
fwait
in
arpl
fcompl
addr16
ljmp
out
add
pop
pop
jg
repz
dec
loopne
adc
inc
clc
outsl
add
mov
jbe
test
cltd
push
cwtl
loopne
daa
repnz
dec
xor
flds
enter
data16
mov
and
cmp
sub
jo
stos
movb
dec
fistpll
xchg
jae
adc
jmp
nop
dec
mov
popf
inc
fwait
icebp
mov
ja
ret
pandn
xchg
sub
push
div
xchg
sub
mov
div
cltd
sub
and
xor
inc
cmp
adc
mov
hlt
dec
faddl
int3
andb
ja
repz
xor
ds
mov
mov
mov
mov
out
icebp
xchg
rorl
jp
or
sub
jmp
test
lahf
sub
or
sub
nop
xchg
shll
add
loopne
and
dec
in
nop
add
and
mov
jbe
mov
mov
push
inc
jl
mov
test
in
repnz
imul
inc
mov
mov
add
mov
popf
and
push
jp
in
stos
in
je
adc
mov
ss
insb
hlt
adc
xchg
inc
cmc
shlb
and
arpl
cmpl
and
adc
mov
outsl
cmp
sub
mulb
andb
sub
jmp
popa
icebp
or
stos
mov
lods
mov
clc
out
cmc
mov
jle
adc
and
sbb
jo
rcr
lcall
loop
in
cmpl
sbb
ds
icebp
outsl
mov
push
jle
or
cmp
out
dec
out
cmp
sbb
lds
cmp
test
adc
aad
pop
in
fmuls
mov
rcll
and
mov
pop
ret
outsl
or
inc
sub
sub
mov
repz
fldenv
pop
xor
mov
push
cwtl
das
imul
mov
cmpsb
fnsave
xor
xchg
push
repnz
pop
shrb
or
outsl
cmp
or
xlat
mov
mov
sbb
lcall
dec
dec
jo
pusha
testl
dec
dec
lds
cli
pushf
ja
mov
ja
idiv
xchg
fidivl
lcall
icebp
push
sbb
inc
pusha
mov
adc
sub
cmp
roll
mov
ret
popf
mov
arpl
add
push
dec
xchg
sbb
sub
repnz
mov
les
shrb
sub
pop
js
push
js,pn
or
frstor
rol
dec
data16
mov
xchg
fwait
in
lahf
xor
cmp
shll
std
adc
lahf
mov
xor
jge
subl
das
push
dec
enter
cmp
cmpsl
imul
cwtl
gs
insl
xor
out
loope
dec
notl
notl
inc
rorl
adc
aad
jo
pop
sti
dec
daa
push
sbb
push
mov
mov
cld
pop
adc
lods
test
fsubl
popf
into
mov
fwait
std
push
adc
andl
gs
jno
and
leave
mov
cld
fstl
jle
jno
pop
out
xor
ffreep
adc
sub
fnsave
sbb
pop
jo
lods
inc
add
push
adc
mov
loopne
insb
outsl
jmp
mov
stos
inc
movsb
add
leave
xor
les
pop
cmp
stc
ret
ja
and
dec
cwtl
bound
fucomip
dec
fcomip
sbb
rol
mov
pop
or
repz
lea
and
les
inc
fwait
arpl
test
xor
popa
cmp
test
lret
std
repz
sub
lret
mov
xchg
or
pop
pushf
fst
mov
outsl
sbb
pop
mov
arpl
test
movsl
or
arpl
ret
sbb
call
cltd
mov
pop
ja
inc
cmp
xor
jnp
adc
or
dec
and
lret
ss
dec
xchg
loopne
ljmp
js
mov
inc
leave
js
pop
lds
cmp
pop
xchg
mov
sub
mov
lret
fldcw
xchg
xor
sbb
cmp
adc
and
aaa
inc
lods
ja
dec
pop
repnz
xor
mov
pop
cmp
dec
pop
xchg
test
cmp
cmp
mov
mov
xchg
inc
cmpsl
dec
inc
lret
mov
in
call
or
sahf
cmp
scas
in
dec
push
or
mov
push
mulb
clc
repnz
mov
push
test
lock
cltd
je
pop
lret
lcall
sbb
jmp
mov
aaa
lock
icebp
adc
js
jmp
ficompl
and
sub
addr16
out
int3
movsl
cs
rdmsr
enter
icebp
enter
mov
cmpl
or
rcrb
or
lds
mov
orl
mov
sub
mov
and
xor
add
in
jns
dec
inc
xlat
push
sbb
xchg
nop
pop
pusha
add
fyl2x
mov
pop
into
xor
test
insl
pusha
adc
xchg
pop
push
jbe
clc
mov
and
sbb
pop
add
popa
cmp
push
rcll
rclw
out
rorb
repz
das
sarb
cltd
cmp
sbb
out
cld
xor
pushl
test
xchg
inc
push
sti
pop
pop
adc
xor
mov
test
fists
mov
out
lea
lock
stos
mov
xor
jl
dec
aaa
mov
pop
mov
rolb
sub
test
movsl
out
scas
push
cld
adc
fldenv
lret
leave
mov
pop
adc
push
mov
mov
fnstenv
lds
das
clc
pop
push
fdivrl
fidivrl
out
pop
lods
cld
mov
xor
outsb
out
sbb
lret
les
adc
inc
sbb
je
or
mov
adc
leave
aaa
pop
test
repz
inc
dec
or
sti
movups
or
fs
add
daa
jbe
sbb
pop
aam
xchg
pusha
les
rorl
aam
xor
adc
rclb
roll
and
mov
imul
xor
inc
and
mov
push
jge
sub
mov
imull
push
loope
pop
aam
inc
mov
in
cmp
jnp
cwtl
add
mov
hlt
xchg
dec
pop
add
add
retw
dec
ss
pop
push
adc
test
loopne
sbb
xchg
repnz
xchg
repz
pop
add
inc
out
adc
fnstsw
sar
fs
jecxz
xchg
dec
push
hlt
outsl
in
mov
fldt
int3
out
cmc
movsl
outsl
add
add
cmovp
pop
sub
imul
add
in
in
sbb
movsb
pop
imul
lods
mov
push
notb
sbb
dec
insb
add
stos
xlat
clc
sbb
inc
mov
adcl
out
sub
dec
fucomip
imul
sbb
and
sar
dec
scas
pop
adc
cmp
fdiv
pop
mov
ja
jle
das
cwtl
adc
mov
dec
cmp
adc
mov
stc
in
pop
xchg
dec
nop
das
addr16
jl
inc
mov
jnp
cmpb
adc
imul
imul
andl
aad
push
sahf
mov
frstor
andl
insb
cmp
aad
pop
xchg
adc
adc
adc
cltd
std
imul
dec
dec
shlb
mov
out
hlt
sbb
mov
push
cmp
cmp
dec
mov
pusha
fisubrs
lret
jmp
jmp
adcl
adc
rcll
dec
or
mov
fisubs
mov
or
xchg
out
lret
adc
pushf
add
xor
insl
sub
scas
and
and
push
or
shll
loop
fadds
test
lret
mov
sbb
fwait
mov
mov
jbe
or
loope
cs
inc
aam
movsb
aad
ds
push
jb
rcrl
push
jno
push
sub
xchg
lret
int3
out
inc
lods
sub
sti
mov
mov
push
fbstp
pusha
addr16
jne
cmp
ret
repnz
pop
inc
shlb
push
push
in
adc
popf
dec
mov
dec
aaa
fs
ret
xchg
shlb
mov
popf
outsb
out
push
mov
daa
test
mov
in
fldlg2
cld
sbb
xor
cli
pop
das
cmp
negb
inc
xchg
call
in
cld
punpckhwd
scas
push
cmp
call
sbb
ja
call
test
pop
or
push
xchg
mov
in
scas
and
mov
je
mov
cmp
adcb
nop
mov
inc
lcall
inc
fsubl
jl
adc
arpl
insl
pop
adc
nop
out
shlb
mov
or
cmp
sbb
popa
push
fbstp
inc
nop
cmpsl
sbb
add
xchg
mov
xchg
lret
cmpsb
iret
mov
cmpsb
xlat
sub
lods
cmpsl
adc
adc
enter
xlat
mov
lds
insb
adc
pop
inc
push
sub
loopne
out
fstpl
fwait
in
mov
push
inc
stos
push
inc
fidivrs
fsubr
sub
xchg
adc
xor
mov
fidivrl
and
out
inc
mov
test
lds
sub
inc
aas
insl
out
shll
dec
add
mov
imul
jmp
sbb
aad
sbb
jo
aam
cmp
outsl
mov
inc
mov
and
lods
jge
cmp
adc
sbb
hlt
bound
pop
jle
mov
or
rcll
xchg
call
or
gs
mov
cltd
mov
aad
xchg
and
les
inc
push
imul
jne
sbb
cmp
repz
ljmp
adc
mov
jmp
pop
imul
fwait
and
test
cld
sub
or
je
mov
fs
and
push
mov
sub
cli
pop
push
loope
das
mov
adc
icebp
movb
xchg
pop
addr16
xchg
sub
fidivl
cltd
rorl
add
imul
push
mov
sahf
xor
rorl
es
or
jno
insl
test
imul
inc
shlb
push
pop
fists
movsb
cmpsb
repnz
aas
jp
test
or
mov
push
sbb
aas
int3
pop
jno
mov
into
or
dec
jno
ja
cmpsl
incb
outsl
repz
mov
sahf
mov
mov
cmpsl
lahf
testl
jo
ljmp
pusha
xorb
pop
push
xor
cmpsb
xchg
dec
xchg
int3
scas
cltd
adc
dec
lahf
jno
cmc
mov
test
mov
mov
dec
mov
and
push
jbe
xchg
sub
cmp
cmp
xchg
sbb
movsb
inc
iret
cwtl
testb
jnp
sarl
movsl
mov
out
add
or
adc
pop
divb
xor
sahf
jbe
cmp
or
xchg
lahf
bound
mov
mov
inc
mov
mov
or
sbb
sub
repz
sbb
sub
ficoms
addl
fwait
sbb
scas
sbb
out
outsb
sarb
arpl
int3
and
fsub
movshdup
adc
pop
push
lret
mov
in
xchg
sbb
adc
pop
stos
sbb
enter
push
jb
sub
mov
imul
in
pushf
fdivl
pusha
xchg
xchg
jno
sti
lahf
adc
sub
ljmp
cmp
inc
fisttpl
add
xor
or
pop
lods
rcrl
inc
pop
cltd
loope
dec
cmp
movsl
stos
outsl
subl
adc
adc
rclb
push
mov
jnp
cwtl
cltd
lock
lret
aaa
iret
xlat
test
mov
lret
lods
orl
push
mov
sbb
lahf
mov
jecxz
add
fidivs
xor
mov
iret
fisttps
push
stos
ljmp
mul
cs
bound
movsl
jl
mov
xchg
fmull
xchg
ss
pushf
sub
add
insl
sti
push
add
ret
pop
cmc
adc
sbbl
lcall
aad
mov
out
mov
push
jecxz
dec
stc
or
push
mov
ret
xor
sahf
cmp
push
dec
popa
lea
ljmp
shrb
in
or
out
stos
subb
mov
jmp
or
mov
in
daa
cli
cltd
lds
fs
sub
inc
xchg
idivl
and
jg
shrl
sub
mov
and
adc
shl
push
and
ret
sbb
add
add
nop
mov
sar
cmp
sbb
dec
in
imul
or
cmp
dec
popf
shl
jp
cmp
jl
xchg
push
cmp
icebp
test
mov
add
mov
or
jmp
shll
add
xchg
jle
adc
rorl
cmp
xor
xchg
sti
xchg
in
xchg
sbb
movsb
mov
xor
dec
xchg
sub
jecxz
mov
in
xchg
xor
xor
cwtl
loop
fldcw
fisubrs
insb
pusha
dec
jne
sub
mov
add
lret
dec
lock
mov
sti
outsl
lret
add
pop
cmc
shrl
sub
fwait
or
outsl
dec
loopne
addr16
bound
xchg
mov
dec
mov
push
jp
sub
jle
lods
stos
lret
mov
popf
out
iret
iret
or
sbb
imul
outsb
shrl
sbb
xchg
gs
mov
cmp
imul
lcall
and
cmp
fwait
std
cltd
mov
rorl
inc
or
sub
mov
dec
daa
nop
push
push
sahf
mull
out
cmp
push
pop
imul
mov
xchg
mov
add
int
mov
push
jmp
mov
and
xlat
jb
or
popl
cs
or
daa
ja
xchg
test
je
mov
rorb
jp
fwait
cmp
add
fcoml
push
lods
cmp
mov
lret
push
repz
outsl
mov
sbb
imul
loopne
mov
cltd
sub
lea
arpl
sbb
daa
push
rolb
clc
inc
ret
sbb
xor
loop
add
add
inc
daa
and
push
aad
pop
jp
cli
pushf
das
stos
popa
fsubl
ss
pop
and
repnz
lods
xchg
int3
testl
test
out
xchg
push
push
movsl
dec
xor
mov
sub
or
adc
mov
sub
cmp
and
jns
repnz
add
mov
subb
and
fcomip
mov
loope
test
adc
xor
in
dec
pop
ficoms
mov
pop
ds
mov
sub
inc
fmuls
push
insb
jecxz
inc
jmp
fsts
inc
stos
das
and
pslld
movl
pop
or
mov
sbb
fidivrs
repnz
stos
in
inc
int
dec
stc
cltd
repz
in
xor
mov
xchg
cltd
das
cmp
test
sub
mov
cwtl
jmp
or
jecxz
in
xchg
ret
shll
lret
sub
bound
jnp
xchg
cmpsl
or
fstpt
inc
bound
push
lahf
jo
lods
rolb
loope
sub
insb
mov
mov
rdpmc
cmp
add
xor
mov
fwait
jge
repnz
add
xor
or
rol
xchg
or
incb
sub
js
adc
pop
outsb
loope
and
cmp
icebp
testl
and
fwait
in
or
add
lahf
inc
cmpsl
push
inc
mov
inc
jmp
mov
sarb
xor
push
push
push
add
leave
mov
sti
add
insb
adc
out
mov
insb
jecxz
mov
test
pop
cmp
dec
cwtl
mov
xor
cmp
mov
mov
and
inc
adc
jno
lock
dec
xchg
rorb
push
loopne
call
roll
jp
mov
clc
xchg
daa
push
jmp
clc
mov
fistl
and
int3
incl
and
inc
push
outsl
std
lcall
xor
mov
add
aad
leave
xor
mov
xchg
pushl
jle
imul
cs
cmp
jbe
sbb
stos
inc
or
mov
int3
mov
cs
xchg
pushf
fwait
lods
popf
out
insb
xchg
je
add
pop
jb
mov
gs
jle
lods
inc
xchg
pavgw
movsb
scas
aam
test
roll
shrb
sar
cmpsb
mov
sbb
dec
ja
jg
jbe
inc
sbb
mov
fldt
pushl
inc
push
das
stos
sbb
mov
fistl
mov
stos
sbb
inc
fcmovnbe
les
sbb
push
test
mov
xor
lock
shl
xchg
sub
pop
rcr
das
add
push
sub
subb
mov
mov
fildl
movl
jmp
cmc
mov
jne
outsb
dec
in
lea
popa
fbstp
and
add
and
shll
and
loope
outsl
out
sbb
sbb
andl
add
repz
stc
test
jns
or
das
xchg
adc
pop
mov
shr
call
jno
xchg
adc
mov
adc
pushf
inc
xchg
adc
jle
and
aas
aad
mov
pop
repz
push
push
and
xlat
outsb
test
mov
pop
mulb
loop
filds
roll
icebp
cmpsl
hlt
test
outsl
and
push
ds
pop
out
pop
fdivl
test
add
mov
mov
aaa
add
scas
sti
test
les
loopne
std
jb
pop
or
js
and
add
push
push
mov
dec
shll
add
lods
sar
rcll
das
ss
aas
aad
xor
sub
pop
mov
ja
std
hlt
push
cmp
adcl
pop
out
pop
js
inc
and
mov
push
in
inc
frstor
loop
mov
jmp
mov
add
inc
test
mov
fwait
jp
int3
jnp
cmpsl
lret
cs
or
xor
lcall
fnsave
insb
fcomip
push
popf
dec
push
xchg
push
outsb
dec
inc
cmpsb
xchg
gs
jecxz
pop
pop
scas
dec
hlt
fcoml
jmp
cwtl
sbb
cwtl
fnsave
aad
pop
add
mov
popa
sbb
lds
jmp
xchg
pop
cwtl
loop
dec
icebp
sbb
and
and
jp
sahf
add
addr16
mov
add
jmp
cli
sbb
pop
xchg
ss
mov
add
mov
inc
inc
jp
push
cmp
inc
sub
lret
lret
jae
adc
scas
xor
test
mov
inc
xchg
inc
fnsave
jle
les
xchg
push
out
and
mov
out
pop
cwtl
or
inc
lea
pop
jb
mov
or
inc
push
dec
test
jle
in
imul
push
xor
pop
lods
ret
pop
lahf
jns
out
arpl
xchg
mov
or
cli
in
mov
orl
xchg
scas
sbb
mov
adc
insb
mov
mov
inc
pop
rcl
repz
push
mov
sub
fucomip
pop
sub
pop
pop
jne
xchg
sub
outsl
bound
js
adc
mov
cs
cmp
popa
pop
pop
inc
xchg
lods
jno
fbld
jb
movsb
repnz
gs
cmp
dec
adc
pusha
mov
xchg
jo
pop
adc
mov
pop
pop
cmp
lahf
xchg
sub
aas
adc
in
mov
cmpsl
sbb
and
mov
in
pushaw
es
sbb
in
inc
xchg
push
lods
adc
push
cltd
test
pop
je
inc
dec
popa
fwait
push
das
xchg
loop
lds
hlt
lods
jmp
popa
fiadds
lret
push
fbstp
jo
iret
inc
xchg
mov
shll
sbb
push
cmp
sahf
push
lods
out
and
into
xchg
mov
out
xor
and
in
int3
dec
stos
sbb
xor
xchg
rol
jno
push
call
jmp
outsl
inc
fdivs
shlb
xchg
mov
jnp
bound
inc
aam
sbbl
mov
ja
dec
test
out
das
sbb
mov
fadd
aas
push
push
test
ss
ljmp
jno
xor
push
out
jae
inc
mov
xchg
jbe
cmpsb
mov
in
sub
outsl
int
jmp
mov
shlb
ret
loop
ljmp
cmp
xchg
or
sbb
andb
leave
lock
mov
shlb
es
movsl
push
pop
adc
mov
arpl
xor
add
cld
shlb
repz
mov
and
dec
jo
fnsave
hlt
int3
pop
sbb
iret
jnp
mov
std
jns
cmp
pop
lret
mov
aad
imul
add
mov
sbb
cmp
scas
adc
jbe
or
adc
outsl
ljmp
add
ja
push
pop
push
push
sbb
lea
fldcw
or
ds
incb
rep
sahf
in
inc
in
xor
enter
push
add
aad
sub
orb
rorl
scas
pop
mov
and
mov
movsl
cmp
fnstenv
std
adc
or
and
inc
or
scas
rclb
cld
stos
lret
stc
xlat
outsb
xor
cmc
mov
fisttpl
cmp
push
scas
and
aas
out
cwtl
mov
outsl
add
int
mov
or
inc
daa
es
test
repz
jg
jmp
sti
das
sub
mov
pusha
mov
or
dec
das
sub
fadds
jle
or
aas
mov
fnstcw
andl
mov
pop
repnz
shlb
lret
scas
inc
sti
sbb
stos
lock
bound
repnz
cmp
mov
mov
push
pop
cmp
and
push
sbb
cmp
xor
xchg
gs
cmpsl
mov
fdivs
andl
or
cli
scas
ficoms
mov
and
shlb
incb
add
pop
xchg
int3
aaa
push
cmc
stos
add
test
push
cmpsb
sbb
jne
or
or
aad
ret
fdivl
mov
xlat
cli
inc
leave
inc
outsb
loope
pop
sahf
xor
jmp
inc
fdivl
pop
arpl
scas
adc
inc
rcrb
mov
fidivrs
adc
in
shll
sbb
xor
jmp
jmp
jnp
jno
jbe
fcoms
adc
ss
push
es
mov
pop
mov
cli
cmp
and
mov
push
lods
lods
mov
pushf
int3
stc
or
arpl
push
jle
xchg
add
xor
and
push
mov
out
sbb
cwtl
shlb
les
insb
add
out
pop
push
cmpsl
mov
push
ret
sbb
cmp
jno
fidivl
or
stc
adc
mov
arpl
cmp
sub
adc
repz
add
inc
fisubs
dec
adc
mov
movsl
xor
mov
mov
test
nop
leave
lods
or
bound
jne
addl
xlat
xor
out
cld
mov
ret
inc
adc
inc
ds
test
jb
lret
jg
add
jbe
add
jno
ds
leave
xchg
sbb
out
imul
in
mov
inc
add
push
scas
and
test
lret
mov
cmc
call
inc
inc
push
add
jecxz
cmp
xchg
inc
fwait
pop
add
or
mov
fcompl
cmp
ljmp
mov
mov
jno
sub
mov
movsl
cmp
mov
mov
xchg
loopne
pusha
cwtl
mov
jmp
jmp
cmp
and
and
xor
dec
test
fdivrl
pop
push
mov
and
cmc
adc
adc
mov
imul
adc
jns
movsl
sbb
ret
jnp
pushl
jl
sbb
mov
ror
js
pop
test
iret
test
sbb
aas
adc
push
cmp
jle
inc
mov
mov
adc
inc
jmp
xor
inc
mov
push
ljmp
pushf
or
mov
mov
push
andb
imul
pop
scas
sbb
and
sbb
mov
adc
enter
xchg
pop
clc
adc
jbe
xor
cmpsb
jl
lea
les
fisttps
mov
add
subb
cltd
push
sub
xor
leave
sub
test
mov
jbe
sub
adc
fldl
lods
xor
sbb
es
int
inc
fmull
mov
andb
push
pop
mov
stos
pop
popa
cmp
jbe
xor
mov
loop
mov
in
xor
mov
repz
or
out
xor
loop
pushf
mov
shl
out
nop
call
xor
inc
test
push
and
sarl
mov
loope
fcom
int3
mov
in
mov
imul
inc
mov
test
pop
sub
data16
and
sarl
sbb
sar
insb
dec
and
sbb
in
in
fnsave
add
jp
mov
popf
dec
inc
mov
dec
lods
jnp
cmp
jae
pop
jno
aam
xor
js
fimuls
inc
lret
adc
xchg
mov
push
les
mov
push
mov
add
add
inc
xchg
mov
inc
addr16
jle
fistl
scas
or
test
lea
mov
fmul
xor
arpl
jge
cmpsb
out
stos
jmp
push
inc
jmp
push
xchg
aad
out
fdivrs
fildll
dec
cmpsw
fwait
test
mov
arpl
mov
mov
sbb
push
mov
mov
imulb
mov
icebp
pop
sbb
cmpsb
ds
pop
ljmp
add
mov
cmp
icebp
fiadds
aad
fwait
jbe
add
lahf
mov
cmc
pop
push
cmp
push
stos
inc
dec
stos
movsb
push
push
cmp
into
sbb
jne
push
mov
sbb
in
sahf
cmp
pop
es
fwait
push
inc
mov
push
jp
add
pop
cmc
call
jno
das
pop
pop
mov
cmp
mov
loopne
mov
add
xchg
mov
push
aas
and
out
fwait
sti
sub
cmc
xchg
outsb
into
mov
push
fwait
incb
sahf
mov
arpl
cmpsl
xor
pop
mov
mov
les
repnz
jb
add
xor
mov
mov
addr16
xlat
insl
repz
cmc
inc
bound
lret
stos
or
pushf
add
ja
shll
cltd
jo
pop
repnz
sbb
cmp
mov
iret
jo
add
addb
dec
xor
dec
mov
pusha
roll
pusha
aaa
pop
xchg
and
out
test
lret
mov
mov
cmp
cmp
gs
adc
hlt
and
push
fnsave
and
pop
cli
inc
dec
orb
sbb
dec
divb
pusha
sub
fnsave
sub
cli
push
or
mov
adc
jo
mov
xchg
sub
scas
test
cltd
push
xlat
sbb
subl
enter
dec
call
out
xchg
insb
pop
cmp
jge
pop
mov
ljmp
imul
xorb
and
int
adc
sbb
aas
dec
in
outsb
mov
ss
lahf
ja
sbb
push
scas
push
mov
lahf
popf
or
arpl
mov
scas
inc
push
lea
jle
xor
adc
ljmp
inc
xchg
idivl
data16
es
lahf
or
pop
mov
jmp
xchg
pop
in
xorl
lret
imul
jno
sahf
xor
xchg
or
sbb
jo
outsb
xchg
sub
test
pop
stc
mov
mov
addr16
stos
jl
push
and
icebp
adc
inc
sbb
mov
push
movsb
cmp
adc
sbb
adc
stos
dec
lea
fwait
repz
ret
jp
enter
mov
sbb
fs
pop
and
push
insb
add
jg
push
adc
stos
inc
mov
push
xor
sbb
xor
scas
fstps
stos
mov
or
les
and
mov
inc
bound
out
roll
pop
cmp
popa
enter
cmp
ds
pop
mov
or
cmpsl
sbb
cmp
sbb
roll
sbb
mov
jge
xchg
push
repz
mov
push
cld
ret
mov
pop
mov
fdivl
inc
sbb
push
sti
ds
mov
cmp
jne
cmp
adc
sub
dec
push
fstps
pop
adc
cmp
mov
aad
lds
inc
enter
lods
push
insl
aam
inc
fdiv
cmc
push
inc
cmp
insl
push
inc
pop
xchg
adc
adc
mov
mov
inc
inc
mov
test
int3
xor
dec
add
fisttpl
xor
jne
addr16
cltd
aad
adc
jae
mov
in
sbb
sarl
xor
aam
xor
pop
pop
int
je
mov
loop
mov
push
loop
imul
and
or
dec
flds
sub
inc
cmp
mov
mov
add
mov
jo
pop
cld
dec
dec
xor
jecxz
nop
adc
cld
int3
nop
shll
and
flds
pusha
shlb
cmp
mov
pusha
mov
xchg
mov
jp
mov
imul
lcall
cmp
pop
mov
sub
add
cmp
sti
adc
xchg
imul
repnz
cwtl
and
and
into
and
jmp
jg
ds
pop
popl
fcmovne
test
ret
bound
mov
sub
push
or
push
mov
shrl
shlb
and
test
loopne
lret
add
addr16
inc
js
cwtl
xchg
es
fwait
imul
div
fdivrl
aam
hlt
push
lods
sbb
xor
mov
xchg
fs
xchg
push
repz
sbb
adc
sbb
jno
add
jle
adc
cmp
fs
daa
sbb
dec
sahf
push
stos
les
or
sub
push
adc
cmp
icebp
dec
shll
shrl
fldcw
jae
stos
mov
lret
dec
cli
dec
stos
in
adc
or
sub
jnp
lret
mov
mov
push
stos
in
push
jecxz
insb
xor
sahf
adc
dec
mov
mov
scas
adc
sub
test
rcr
pop
sti
mov
lret
adcb
pop
fs
sub
jae
or
xchg
sbb
or
inc
les
inc
or
adc
mov
ret
sub
xor
fdivrs
add
jno
outsb
mov
push
xor
inc
add
lods
push
into
pop
mov
lahf
xor
out
xchg
aaa
or
data16
fs
xchg
push
add
inc
sahf
cmp
lret
and
repz
jl
mov
push
stc
add
or
fdivl
filds
mov
adc
int3
sbb
insb
dec
jne
addl
cwtl
cmp
dec
int
and
popf
cmp
xorb
or
insb
push
push
sbb
fnsave
mov
nop
mov
add
cmp
testb
repnz
sbb
es
mov
leavew
and
inc
test
jbe
mov
loop
mov
push
int3
jnp
ret
fnsave
fistpl
or
jnp
int
or
fistl
mov
into
inc
xchg
outsb
shlb
pop
jecxz
fimuls
sahf
clc
lods
mov
sub
sbb
leave
jg
and
stos
mov
sbb
lds
in
lods
js
push
jbe
stos
xor
adc
cmp
mov
xor
or
loope
push
sub
loope
push
hlt
jo
cs
mov
divl
lods
inc
iret
xchg
xchg
je
or
inc
mov
jle
mov
sbb
xlat
push
pop
jmp
cmp
xor
add
dec
mov
mov
fistpll
add
push
cmp
adc
mov
jg
sub
xor
push
roll
loope
push
test
je
imul
jae
cmp
sub
rcrl
cmp
imul
idiv
loopne
scas
mov
pop
cmp
mov
add
dec
push
fildl
test
sbb
sub
adc
mov
lret
jne
sahf
cwtl
mov
scas
cmp
lock
stc
push
xchg
dec
idivl
shl
mov
test
jecxz
lcall
inc
and
mov
pop
mov
psrlw
xchg
sub
mov
fistps
sbb
bound
int
mov
shrb
adc
push
sbb
xchg
sub
mov
je
outsb
mov
imul
rorb
std
or
sub
and
ljmp
imul
pop
outsb
in
std
mov
out
inc
sbb
pop
inc
ds
push
outsl
insl
ds
pop
in
push
inc
adc
out
cmp
ror
and
pop
loop
push
cltd
dec
jecxz
xchg
lret
push
push
jl
in
js
scas
inc
dec
cltd
jg
mov
test
shl
adc
pop
sub
repnz
jle
xlat
scas
inc
push
je
lods
sbb
sbb
iret
mov
push
in
push
repz
sbb
sub
pop
lret
push
push
xchg
sub
push
jecxz
xchg
jo
inc
push
lea
data16
push
mov
or
mov
mov
ja
cmc
cwtl
es
sbb
or
in
sbbl
hlt
sarl
sbb
in
imul
push
enter
mov
cltd
out
repz
sbbl
daa
in
lahf
ss
cmp
mov
jb
and
loop
lret
bound
mov
jg
pusha
push
movsb
xchg
lods
jb
mov
sub
cli
pop
daa
mov
xchg
sarb
call
pusha
inc
mov
mov
mov
test
cmp
in
stos
jmp
jmp
repz
loop
data16
mov
mov
rolb
sub
fs
add
or
imull
stos
pushl
xor
xchg
lea
shl
pop
cmp
adc
ret
mov
sbbl
push
sub
cmpb
sub
jnp
dec
pop
outsl
add
sbb
cmc
mov
leave
push
cmpsl
adc
adc
or
add
fistps
stos
mov
cmp
jb
out
int3
add
out
xchg
adc
data16
mov
and
jl
cmovns
stos
push
scas
stc
fistpll
mov
in
adcb
push
imul
push
test
mov
lcall
adc
add
sbb
jbe
add
dec
mov
xchg
xchg
or
outsb
data16
ja
xchg
push
cmp
bound
cli
pusha
jo
adc
mov
in
retw
pop
sub
popf
cmp
mov
ljmp
xor
dec
jl
movsl
mov
out
mov
xor
cltd
inc
lcall
push
std
andb
loopne
shl
fisttpl
in
lcall
pop
jne
jl
or
inc
mov
jne
sbbl
xor
xor
test
jns
test
add
je
xor
push
enter
jg
ret
ljmp
jno
jo
fwait
lea
andb
dec
sbbl
mov
or
cmpl
dec
stos
out
aas
cmc
call
xor
dec
cld
push
lret
addr16
stos
inc
dec
stos
add
out
and
and
ret
scas
aas
dec
std
or
mov
adc
mov
cli
cs
mov
lret
sbb
adc
lods
pop
xchg
cmpsb
popa
dec
push
mov
arpl
rorb
or
cmpb
or
push
and
test
roll
mov
decb
roll
lahf
cwtl
pop
pop
mov
sub
cmp
or
ljmp
mov
movsl
ss
sub
push
out
icebp
sarb
std
sbb
das
test
lea
mov
mov
leave
mov
pop
push
add
sarb
leave
add
aam
mov
rol
jecxz
push
sbb
mov
negl
cld
sbb
dec
sbb
stc
sahf
jp
xor
add
push
jbe
adc
int3
cmp
cmpsl
std
and
dec
xor
adc
loop
sub
lea
jle
in
orl
data16
arpl
adc
test
insb
add
sahf
cwtl
mov
mov
cmp
and
orb
mulb
mov
pop
xchg
mov
add
xor
enter
mov
imul
lds
lahf
lret
outsl
pop
repnz
fnstcw
adc
xor
sbb
jnp
xor
mov
shlb
lods
cmp
pop
insb
into
inc
adc
pop
mov
lret
movsl
sbb
rsm
in
scas
cmc
push
push
sbb
bound
icebp
popa
fs
inc
ja
lods
mov
add
shrb
fiaddl
mov
dec
loope
mov
push
xchg
pop
adc
adc
inc
je
into
andl
es
hlt
add
cmpsl
or
jns
lods
sub
lds
jp
repz
and
cltd
clc
cmpsb
adc
push
mov
pop
clc
dec
fisubrs
add
push
and
adc
cli
arpl
mov
push
lds
divl
push
mov
in
adcb
iret
xchg
imul
inc
mov
inc
shlb
pop
pop
jle
xchg
adcb
add
mov
pop
stc
add
adc
inc
xchg
cmpsl
xor
fcmovnu
sarb
xor
int3
mov
bound
push
sahf
sub
sbb
fs
shlb
mov
ds
repz
or
cmp
imull
outsl
loop
popf
lret
ja
ds
sahf
sti
stos
xchg
jp
add
sub
shll
adc
sub
push
daa
dec
inc
bound
movsl
sbb
push
jno
mov
pop
push
mov
cmp
nop
pop
ror
mov
into
push
jo
popf
outsl
add
mov
test
xor
pop
stos
out
jmp
inc
push
mov
ret
dec
or
clc
jae
dec
shrl
push
loope
xor
add
pop
add
sub
inc
mov
test
les
out
test
push
cmpps
es
jno,pt
jae
xor
cltd
call
mov
daa
jmp
rcr
and
mov
cmp
filds
pop
sub
dec
sahf
xor
or
mov
test
dec
mov
dec
pop
sbb
nop
fwait
add
push
mov
sbb
cmpsl
xchg
enter
and
mov
pop
daa
lock
jno
fs
jmp
cmpsl
push
push
or
fsubrl
xchg
dec
pop
xor
adc
hlt
addr16
aas
jecxz
mov
and
xor
inc
jge
jb
stc
je
jp
xor
inc
pop
lret
ret
adc
pop
push
pop
jbe
in
or
inc
adc
in
jmp
push
out
mov
push
outsl
icebp
lock
test
testb
stc
pop
sbb
sbb
data16
shrb
ja
in
push
xor
cmp
imul
mov
imul
cld
mov
push
jg
aas
pop
movsb
dec
lea
mov
out
lods
inc
inc
ljmp
pop
jmp
popa
in
jb
sbb
fbld
sbb
pop
inc
fildl
xchg
jns
cmp
jecxz
test
icebp
dec
aas
pop
int3
push
jge
cld
cmp
cmp
mov
rorb
les
xlat
jmp
dec
fldt
jae
or
push
xor
jbe
into
enter
es
cli
inc
fadd
popa
std
aam
xor
adc
sub
cmp
and
add
dec
mov
jae
aad
imul
test
imul
sahf
test
or
imul
rcll
pushf
add
daa
xor
lea
int3
and
fwait
xchg
mov
sbb
jge
xorb
das
ss
out
inc
jg
jbe
mov
cmp
push
push
cld
sbb
pushf
mov
mov
sbb
push
jecxz
mov
xor
jns
mov
or
xor
xchg
jmp
push
pop
jne
or
mov
mov
into
imul
pop
adc
xor
das
mov
insb
out
xor
outsb
xor
arpl
and
push
add
idivb
cmpsl
dec
dec
dec
mov
and
sbb
mov
cwtl
incb
sbb
fbstp
popa
inc
push
cld
xchg
ss
call
fucomp
mov
jne
fldenv
mov
sub
mov
sub
into
dec
test
fidivs
push
imul
mov
out
xchg
mov
jmp
je
clc
test
iret
pop
out
ja
dec
test
dec
shlb
imul
xchg
mov
pop
sbb
or
push
jl
and
add
lds
es
xor
arpl
iret
mov
dec
dec
or
sbb
dec
and
pop
jge
adc
int3
nop
xor
push
jle
jge
shrb
pop
nop
push
movsl
mov
xor
xchg
mov
test
pusha
stos
imul
jae
inc
je
lods
cs
fildl
int3
inc
sar
rol
sbbb
jne
xchg
and
in
pop
mov
add
ret
dec
lahf
ss
aad
scas
sbb
subl
pop
je
xchg
jb
sub
cmp
inc
jle
fcompp
icebp
repnz
and
jns
xlat
pop
xor
stos
shrb
outsb
or
jp
dec
cmp
clc
mov
sbb
lahf
lds
ja
jno
rcrl
cmpsl
jns
shll
adc
shl
mov
gs
xchg
mov
fsubrs
and
push
arpl
push
mov
ror
sbb
sti
and
sbb
xorb
repnz
cltd
xor
mov
mov
xor
and
mov
push
jne
rcr
je
aam
insl
xchg
aaa
sti
sahf
mov
inc
push
inc
out
adc
add
cmc
pop
or
out
push
mov
jp
or
pop
fistpl
sbb
or
aam
adc
pop
or
push
scas
movsb
repnz
std
or
jge
lret
pushf
test
mov
ljmp
and
jp
decb
enter
cli
test
sbb
xor
or
insl
or
lods
xor
scas
pop
imul
inc
push
out
inc
cltd
rorb
or
dec
fildll
push
test
dec
fdivrl
pop
lds
jp
lods
ds
sahf
insb
add
mov
inc
in
and
loop
es
fdivs
aaa
sbb
xchg
add
jle
dec
sub
mov
test
inc
mov
cltd
jmp
or
repz
pusha
pop
out
push
inc
mov
loope
jecxz
mov
lods
je
inc
dec
push
jge
enter
mov
out
push
rcr
aaa
fimuls
pop
dec
frstor
out
inc
adc
mov
inc
add
dec
aaa
scas
jl
pop
pop
ror
mov
test
mov
push
loope
adc
mov
mov
cwtl
rcrb
sbb
rolb
in
xor
lcall
mov
stos
xor
sub
sahf
pop
sbb
jno
add
add
lcall
int
add
fstl
aad
dec
mov
inc
cs
adc
xchg
cvtps2pd
sbb
test
jge
or
and
repnz
or
mov
cmpsl
mov
fsubrl
fimuls
mov
pop
xorl
nop
daa
movsb
or
rcll
lret
sbb
jmp
movb
sub
dec
cmpsl
dec
shl
rep
sub
lods
clc
xlat
push
add
out
test
push
sub
loopne
lret
adc
imul
cmp
cmpsb
mov
xadd
fdivp
lcall
mov
mov
mov
pop
fmuls
push
insl
cmpl
push
push
bound
jo
test
in
repnz
call
leave
movsb
cmp
outsl
shl
aaa
sbb
and
test
push
stc
push
dec
cmp
scas
imul
movsl
push
shl
cmp
daa
adc
xor
cmp
inc
push
shl
mov
cmpsl
sub
sti
adc
sbbl
xchg
jno
dec
sbb
stos
into
and
inc
jl
sti
mov
xchg
jbe
mov
flds
movsb
ret
sbb
adc
add
js
add
push
inc
xchg
dec
test
iret
sbbb
xor
mov
xchg
inc
mov
xor
pop
loope
mov
inc
fdivs
jle
loopne
ficompl
aad
adc
or
orl
jb
imul
cmp
mov
xsave
ljmp
and
loope
shrl
jge
mov
add
mov
jmp
arpl
pop
popf
or
xlat
cmc
fsubl
xchg
inc
fs
ror
test
insl
mov
sarb
xor
push
popf
clc
xchg
mov
in
arpl
inc
aaa
lret
cmp
pop
test
sbb
lret
jbe
push
mov
push
sbb
inc
insl
cmpsb
pop
xor
rcrb
js
cmp
dec
pop
hlt
rol
mov
icebp
loopne
jmp
sbb
out
mov
out
xchg
dec
call
cmpsb
sti
arpl
xor
xor
lods
out
adc
cmp
cmp
and
in
xchg
lcall
push
push
sub
shrl
cmpsb
stc
int
dec
addr16
xchg
mov
and
sbb
pop
mov
addr16
mov
push
xchg
mov
push
jecxz
test
in
movsl
dec
and
sbb
adc
or
imul
mul
jl
lret
cmp
add
repnz
push
xchg
cld
add
cs
cltd
xor
adc
stos
sbb
xchg
mov
loop
mov
iret
js
pop
xlat
mov
adcl
leave
pop
cmpsl
add
mov
mov
mov
nop
insl
add
push
adc
in
cmp
and
mov
pop
push
decl
daa
mov
fstl
popa
clc
add
jnp
ret
popf
arpl
insl
jnp
sub
mov
test
sub
inc
loop
pop
xchg
iret
sbb
mov
mov
clc
arpl
ss
mov
ja
dec
push
jno
xchg
pop
xor
pusha
and
mov
ja
repz
xchg
sbb
xor
addr16
sbb
enter
cmpsb
test
fcmovnbe
push
jmp
cmp
xchg
mov
sbb
mov
stos
cld
mov
jp
xchg
cs
pop
and
cwtl
mov
inc
and
mov
out
push
xor
push
out
jns
idivl
dec
lds
js
ds
mov
stos
or
call
fadds
movsb
xor
pop
mov
int
call
push
jmp
jg
pop
test
bound
and
lcall
mov
cmp
out
sub
fldenv
dec
push
cltd
push
popf
in
nop
xchg
and
call
or
inc
pop
push
mov
xchg
imul
sbb
lods
dec
push
daa
pusha
negl
sbb
push
dec
aaa
mov
mov
xor
push
fdivl
out
dec
loopne
push
or
mov
in
xchg
outsl
push
sbb
mov
inc
ror
mov
fdivrs
pop
scas
inc
xchg
pop
in
pop
ds
ljmp
xchg
aas
push
mov
icebp
popf
aas
inc
ret
mov
mov
mov
mov
pop
or
mov
adc
cli
ja
out
jo
cmp
test
ja
jecxz
push
cs
push
sbb
push
int3
loopne
mov
mov
pop
test
inc
sub
mov
sahf
jg
xchg
jmp
sbb
jmp
push
fimuls
mov
sbb
fisubs
shll
sub
xchg
dec
ret
mov
add
movsl
adc
inc
bnd
lret
jno
rorl
push
push
insb
dec
mov
scas
jle
shrl
push
jne
inc
in
jnp
inc
sbb
popf
adc
clc
int
mov
mov
xlat
sub
mov
push
push
mov
lret
fadd
insl
push
cmc
ficoms
mov
mov
sub
loope
in
popa
cs
and
loopne
cmp
fcmovnu
addr16
jno
xor
jbe
xchg
imul
icebp
cmp
xchg
jge
and
push
mov
ja
pop
push
imul
aaa
repnz
sub
dec
and
call
cmp
jmp
addr16
inc
es
mov
inc
inc
test
xor
pop
loop
into
mov
fisubrl
pop
lods
and
adc
sbb
icebp
push
inc
mov
repnz
insb
and
data16
loopne
inc
test
imul
xor
push
cmp
sbb
outsl
mov
add
xchg
xchg
clc
sbb
cmp
movsb
outsb
jg
imul
sbb
nop
jns
in
es
xor
andl
pusha
addb
fsubr
repz
aas
lcall
push
mov
fdivl
push
out
dec
mov
ja
icebp
sub
mov
push
ss
shl
fisubs
xor
mov
arpl
cmpsb
push
dec
cmp
jecxz
enter
loop,pt
push
into
orl
sbb
comiss
mov
mov
cmp
mov
adc
cmp
testl
imul
mov
orb
adc
mov
adc
cmpsb
sti
dec
ja
and
dec
adcb
ret
arpl
fwait
xor
mov
imul
xlat
jmp
stos
xor
fsts
xor
push
aam
jge
ret
outsl
movsl
mov
outsb
xchg
int
out
int
aad
test
lock
sbb
sub
push
inc
mov
leave
cmp
cmp
pop
adc
pop
mov
ss
mov
jb
pop
adc
cmp
nop
repnz
out
test
notb
fisubs
jp
push
ret
nop
shl
inc
mov
into
in
insl
sub
scas
hlt
fistpl
mov
mov
aad
loop
insl
pop
or
mov
xor
sub
imul
sub
scas
movsb
pop
icebp
and
xor
push
jb
movsb
xchg
sub
mull
jmp
xor
push
std
lods
xchg
mov
or
sub
or
mov
pop
pop
lock
mov
add
jbe
or
and
add
movsl
in
adcb
xchg
adc
stos
push
addb
mov
xlat
jecxz
das
xchg
les
ret
ror
mov
pop
pop
clc
xchg
jns
dec
aam
mov
scas
cmp
ljmp
cmp
out
fistpll
fidivrs
out
in
jnp
rorl
sub
pop
ret
add
jg
dec
add
inc
ret
loop
stos
lea
xor
shlb
xor
rcrl
inc
push
push
pop
in
cmp
xlat
xchg
and
aad
push
ret
stc
mov
dec
addb
mov
movsb
jns
push
sub
jne
add
dec
inc
push
push
sub
into
shrb
loopne
fs
repnz
mov
inc
sahf
roll
mov
cmp
mov
sub
or
cld
add
dec
dec
ss
pop
stos
negl
mov
cmp
xlat
push
push
sbbl
decb
mov
xchg
clc
cs
jg
loope
pop
push
mov
jmp
xchg
push
and
scas
mov
daa
in
add
push
add
movsl
dec
int3
inc
push
sub
pop
dec
sti
cmpsl
mov
lea
and
add
dec
cmpl
or
int
hlt
pop
loopne
cmp
leave
and
inc
sub
sub
fistpl
mov
aad
out
xlat
jecxz
clc
dec
sub
mov
test
adc
call
mov
stos
les
test
fistl
or
adc
xor
outsb
adc
adc
in
add
mov
js
idiv
faddl
rorb
add
push
pop
cmc
inc
std
push
push
xchg
je
clc
push
call
jg
sbb
cli
pushf
in
push
mov
lea
sbb
xchg
scas
mov
xchg
mov
mov
xchg
sub
jecxz
cs
xor
mov
xorb
pushf
pop
lcall
or
cmp
pop
outsb
int3
adc
mov
lahf
jbe
or
sub
out
sub
out
inc
cmp
dec
outsb
popa
lds
xchg
dec
dec
repnz
sbb
bound
cli
shll
xor
jne
cmp
shrl
pop
dec
in
mov
sbb
ret
sbb
dec
rorb
pusha
cmp
sbb
es
pop
adc
jns
cmp
out
cmpl
les
xchg
and
and
push
cmc
movsb
add
add
or
fs
xchg
sbb
sbb
lds
mov
xchg
leave
dec
movsb
or
scas
sub
aad
and
loope
jnp
lods
inc
inc
mov
cltd
pop
insb
inc
adc
leave
in
cli
jbe
jne
cwtl
add
pop
clc
daa
cmp
inc
fld
addr16
add
xor
jecxz
sbb
push
push
mov
mov
push
popf
movsl
xlat
push
aad
xlat
jae
push
and
iret
xchg
and
nop
or
adc
aas
inc
pusha
aas
leave
lea
or
enter
test
ss
inc
aam
lahf
mov
enter
inc
flds
mov
std
and
into
push
add
nop
xchg
push
testl
popf
jb
faddl
imul
scas
test
dec
ljmp
cs
clc
or
into
and
or
enter
xchg
mov
xlat
cmp
aad
adc
add
push
jbe
dec
cmp
push
or
inc
mov
je
jnp
das
movsl
test
aas
push
scas
aaa
outsb
icebp
pop
imul
cmp
movb
and
and
cld
xor
pop
stc
dec
pop
add
inc
mov
push
stc
adc
nop
sub
pop
out
addr16
out
bound
lret
xlat
ss
inc
adc
inc
call
mov
sbb
and
cmp
dec
push
lods
sbb
jno
sub
dec
or
jl
inc
inc
andl
adc
fnstenv
imul
adcl
push
int
sub
mov
in
std
xchg
adc
enter
sbb
jb
divb
dec
ret
add
lods
test
ficomps
push
add
les
sub
shl
push
rcr
sub
mov
popa
in
cmp
push
add
rolb
add
loop
mov
je
xor
in
test
mov
ds
mov
xchg
adc
add
lods
and
mull
xchg
lahf
hlt
mov
enter
add
cmp
inc
enter
mov
xchg
fs
das
leave
int
lea
jne
aas
pop
push
fwait
jno
adc
cmp
adc
ljmp
in
std
sbb
adc
dec
mov
fsubl
into
adc
andb
xchg
dec
fsubrs
adc
fcmovu
xchg
loope
shll
add
repnz
rcrl
mov
loopne
mov
jno
lods
fisubrs
pop
add
add
lods
ljmp
fdivl
add
fs
stos
and
adc
les
cmc
lock
mov
jge
mov
loop
and
cmp
pop
adc
lahf
dec
sahf
cmc
add
cld
aaa
addb
es
pop
shr
cli
or
xchg
pop
and
push
jle
mov
add
in
adc
add
or
lods
ficomps
or
or
or
nop
loop
jno
mov
leave
cmp
adc
and
cmp
and
std
xchg
out
cmpsl
stos
adc
cmpsl
mov
iret
sub
les
push
jae
sarb
aas
lds
mov
outsl
out
or
mov
sub
rorb
mov
push
fbstp
dec
inc
and
rol
sbb
dec
in
xor
jno
mov
subb
xchg
call
sbb
jg
std
sti
mov
insb
pop
inc
repnz
inc
dec
or
sub
aaa
xchg
mov
or
xchg
fistpll
mov
pop
sbb
inc
inc
cmc
jl
and
bound
loop
scas
sbb
popa
popf
lret
mov
or
adc
stos
dec
bound
ficompl
insb
mov
movsl
push
es
jo
js
mov
inc
adc
mov
add
call
leave
push
jne
sbb
dec
pop
ljmp
test
out
jg
xchg
stos
push
sbbl
push
xchg
dec
inc
sub
pop
std
cld
inc
fs
cmpsl
dec
push
jmp
push
fnsave
lock
xor
outsl
pop
jns
lea
and
lahf
sub
adc
jb
test
adc
jp
fists
in
out
lock
sahf
push
jnp
scas
push
ret
add
pop
jecxz
call
push
insb
add
repnz
mov
dec
test
jns
mov
xor
jne
sti
insl
push
data16
mov
xchg
in
test
xor
idivl
inc
push
sbb
mov
xchg
cmp
dec
push
dec
inc
mov
adc
mov
shll
xor
loop
das
sti
mov
adc
cmp
dec
lock
lock
out
stc
adc
push
sbb
daa
pop
sbb
lahf
hlt
scas
lcall
cmpsl
cltd
mov
cmp
and
stos
inc
push
lcall
subb
sahf
loopne
int3
popa
test
sbb
xchg
dec
mov
and
jg
imul
lcall
and
xchg
int
mov
add
mov
test
inc
cmp
test
shll
loopne
add
and
icebp
cmp
adc
int
mov
jbe
inc
push
repz
test
or
adc
jo
mov
notl
mov
push
test
in
jecxz
rorl
test
add
lret
in
push
fwait
push
testb
mov
into
std
hlt
roll
lods
jmp
and
pushf
fidivs
aad
inc
dec
cmp
jno
int
adc
or
mov
mov
pop
sub
aad
mov
jnp
mov
xchg
sub
jle
das
inc
addr16
bound
add
popl
cld
xchg
addl
xor
xor
out
push
xchg
int3
xchg
mov
mov
fistpl
add
jl
shrb
iret
faddl
cltd
fildl
jae
ljmp
sahf
mov
fucomip
inc
fcoms
mov
adc
adc
insl
dec
aam
dec
ret
hlt
push
daa
inc
mov
cmc
daa
jae
xorl
fldcw
or
lods
bound
test
lock
push
ffreep
fwait
lods
ret
xchg
stos
pop
test
sub
sub
xor
fisttpll
cmp
or
vaddps
addb
xchg
mov
pusha
dec
test
test
das
mov
rorl
sub
aaa
sub
lret
mov
push
jns
out
jle
jae
xchg
jmp
outsl
add
pop
test
cmp
clc
fidivrs
xchg
or
sub
daa
mov
nop
or
aas
mov
out
dec
mov
sub
xchg
cmc
dec
push
sbb
addr16
inc
sub
testl
and
mov
adc
inc
pop
mov
mov
add
lock
and
jo
cs
push
add
lea
daa
push
mov
jno
fmuls
adc
mov
scas
daa
mov
xchg
call
in
cltd
test
or
and
popa
sahf
xor
mov
or
xor
adc
loop
pop
out
clc
and
inc
fnstenv
xchg
jle
and
lcall
cwtl
mov
mov
ja
xchg
sti
mov
mov
test
xchg
lret
inc
out
jge
adc
stos
fnstcw
mov
xor
mov
call
es
sbb
cmp
xor
fs
push
out
pusha
jmp
push
and
push
and
arpl
stc
fisttps
hlt
ljmp
fbstp
call
out
add
pop
or
inc
sbb
inc
inc
rolb
pushf
cli
sub
clc
xchg
pop
out
test
sub
mov
mov
push
pop
dec
out
mov
insl
cmc
and
fs
sub
jle
in
daa
cmp
cmp
xor
jmp
inc
psrad
inc
jae
in
insl
mov
push
sbb
push
push
add
in
sub
mov
in
or
jg
movsl
inc
out
loope
mov
or
sbb
fsubrl
xor
in
and
cmpsl
mov
cs
sub
outsl
shrl
and
and
push
lods
jnp
push
in
arpl
xchg
jnp
sbb
pop
jmp
rol
dec
scas
push
adc
pushf
cmc
xor
or
cld
rcr
xor
mov
jp
lahf
sub
sbb
aad
cmp
jbe
fists
adc
pop
dec
jo
pop
in
cld
sub
mov
dec
arpl
dec
loop
push
fimull
jle
adc
pop
jmp
loope
rclb
or
fs
xchg
mov
or
insb
and
jns
ret
outsl
jae
jge
nop
xchg
lcall
xorl
mov
jecxz
fbld
dec
cmp
gs
add
sahf
in
mov
mov
mov
mov
test
outsl
sub
sti
pop
jne
fistpl
push
xor
xchg
cwtl
inc
jecxz
je
movsb
test
outsl
nop
mov
cmp
add
mov
xor
sub
or
mov
aas
imul
mov
gs
add
dec
jl
cltd
test
jl
in
test
lds
test
arpl
js
inc
call
cwtl
aas
loope
jmp
jo
dec
add
xor
sub
or
mov
push
addr16
xchg
push
loopne
lahf
movb
shrl
sub
mov
mov
dec
fldl
movsl
inc
out
mov
push
fidivl
cmp
lods
gs
push
push
aas
ss
push
push
push
loop
add
repnz
mov
ficoms
int3
add
gs
fdivl
das
orl
mov
jmp
add
testl
dec
adc
outsb
mov
pop
aaa
adc
jne
rorb
sbb
xor
push
lods
aad
cmp
xor
addl
xchg
cmp
gs
xchg
pop
mov
fwait
ss
or
fisttps
daa
data16
add
lret
inc
aad
mov
push
ror
shll
ljmp
jb
mov
mov
xchg
jb
insl
sub
icebp
pop
movsl
sub
push
mov
and
cld
and
pop
outsl
sbb
xor
cltd
addb
mov
push
jns
mov
pop
rorl
add
dec
mov
mov
stos
push
xor
pop
jns
insb
xorb
mov
shlb
cmpsb
inc
lret
jae
jle
jne
dec
pop
out
cmpsl
cmpb
push
push
neg
outsl
cmpsb
inc
pop
push
cmp
movsl
aas
dec
testb
das
inc
sub
push
divl
bound
push
insl
test
test
popf
sub
mov
push
lahf
pop
xchg
add
jge
fildll
sbb
xchg
add
xor
arpl
push
inc
popa
subb
scas
lods
mov
push
sub
or
xor
jle
fists
jnp
aad
scas
dec
cwtl
jecxz
in
push
mov
cmpsl
mov
std
mov
push
ret
jno
out
scas
push
out
test
cmc
aaa
bound
addb
adc
pop
jo
bound
into
fcompl
mov
mov
ret
sarb
push
pop
cltd
scas
mov
icebp
jl
iret
push
mov
xlat
outsl
push
or
lea
psllw
add
insl
xor
push
push
push
mov
jns
fistpl
push
xor
fwait
xchg
faddl
push
aam
repz
sub
sti
xchg
aas
into
cltd
std
fs
sub
adc
mov
mov
gs
sub
stc
or
in
add
dec
adc
cld
adc
mov
cmp
push
gs
pop
and
dec
cmpsl
jecxz
xchg
scas
jb
faddl
in
scas
ret
shl
mov
add
mov
adc
jo
clc
lea
cmpl
icebp
daa
adc
fstl
std
nop
xorb
scas
out
jb
enter
mov
inc
adc
loopne
mov
aaa
adc
adc
es
lret
movsl
dec
jno
xlat
mov
nop
cmp
mov
mov
dec
push
mov
mov
lods
je
cld
push
mov
xor
lret
mov
dec
mov
mov
mov
xchg
push
mov
pop
ss
and
mov
paddusb
mov
adc
and
inc
outsl
jbe
sub
sub
xchg
ja
jns
cs
add
adcl
lods
leave
push
das
lcall
and
aas
add
shlb
xchg
aad
pusha
notl
mov
sub
mov
mov
in
pusha
mov
jno
imul
and
or
cmp
inc
lret
jl
data16
sbb
out
inc
in
mov
test
xchg
sub
gs
in
wbinvd
mov
mov
les
xchg
pop
mov
jecxz
xchg
arpl
aaa
mov
imul
stos
lret
sub
dec
and
jo
inc
aam
repz
mov
lret
cmpsl
push
in
fcomps
in
test
mul
xor
or
fdivp
push
cmpsb
lock
add
call
aaa
push
inc
enter
or
jnp
push
mov
je
push
xorb
jns
pop
jg
test
rcr
add
negb
mov
mov
push
cmpsb
test
shrl
mov
je
lret
imul
pop
push
add
push
mov
pop
fs
sub
mov
push
push
mov
and
jge
xor
data16
inc
js
mov
int3
and
stos
ljmp
pop
in
fnstenv
or
jbe
xorl
xchg
pop
cmc
ja
mov
mov
or
aaa
outsl
sbb
xchg
fs
mov
mov
rorb
outsl
adc
mov
rcr
outsl
add
lret
fisttpl
pop
div
insb
cmp
into
lcall
loope
out
mov
fyl2x
mov
rclb
mov
out
jbe
in
push
orb
push
sub
lds
mov
mov
mov
jnp
mov
leave
js
out
fisttpl
ror
or
mov
out
pop
cmpsb
arpl
xlat
adcb
sbb
dec
jl
inc
lods
shlb
cmp
xchg
sahf
dec
loope
pop
hlt
into
or
mov
mov
mov
sbb
xchg
and
pop
push
clc
shr
adc
cmp
mov
mov
gs
ja
xchg
mov
iret
packsswb
and
jno
outsl
cmp
hlt
mov
cmp
sbb
fbstp
jle
fwait
cmp
xchg
sbbb
xchg
xchg
fidivs
outsl
jge
mov
stos
testb
adcl
and
xchg
xchg
mov
ret
pop
push
inc
stos
cmpl
test
scas
mov
sub
js
jbe
jecxz
adc
aaa
add
push
ss
xor
rcrl
popa
or
dec
mov
mov
mov
jne
data16
fdivl
push
mov
in
and
das
xor
mov
add
mov
mov
jle
mov
jne
in
repz
xchg
inc
or
dec
inc
sub
fldl
test
mov
icebp
fistpll
mov
jb
fnsave
fadds
fldt
jge
nop
out
iret
xchg
sub
xor
cmpsb
cmp
pop
mov
fcmove
jbe
dec
inc
push
cmp
jb
stc
adc
scas
lcall
jge
loope
adc
frstor
and
xchg
push
lods
sbb
cld
xchg
hlt
dec
ret
repnz
jmp
dec
jecxz
in
pop
or
imul
sub
sbb
out
outsb
or
aaa
mov
or
cwtl
sbb
shrb
mov
out
cmp
addr16
push
cmp
dec
xor
pop
rcrl
pusha
add
adc
jne
cld
cmpsb
dec
test
mov
test
inc
movsl
dec
je
std
xchg
inc
mov
in
nop
jl
mov
push
int3
arpl
mov
xchg
sbb
push
sti
xor
out
test
cmp
cmovo
cmp
loopne
negb
cld
inc
hlt
jge
push
mov
les
inc
cltd
arpl
mov
cmpsl
clc
mov
mov
out
ljmp
and
arpl
ret
jp,pt
ljmp
jno
mov
js
mov
loopne
mov
mov
lret
aad
jb
jg
jae,pt
jno
aam
outsb
pop
push
lret
dec
mov
pop
push
or
adc
sub
push
ss
push
sub
aad
negb
icebp
mov
rcl
repz
push
sub
xchg
ja
std
jnp
outsl
xor
cmp
add
stc
cmp
and
stos
jno
push
pop
xor
jg
daa
scas
lret
mov
dec
pushf
and
xlat
sbb
and
cld
popa
xor
mov
test
scas
pop
or
popf
mov
iret
pop
out
rcr
rorl
xchg
pop
inc
push
ficoml
xor
fcmovnb
call
inc
jl
cltd
xor
popf
ss
aaa
ljmp
mov
in
jnp
xchg
and
pop
jg
sgdtl
xchg
sub
scas
pop
dec
in
mov
xor
stos
cmp
ret
pop
leave
push
xchg
mov
or
mov
and
jbe
inc
mov
popa
sbb
jecxz
push
out
loop
inc
dec
dec
icebp
mov
movsl
push
outsl
mov
addr16
repz
mov
pop
loop
iret
stc
rcrb
add
mov
mov
inc
lahf
loope
xchg
sysenter
sbb
popa
mov
cmp
imul
test
aaa
xchg
mov
mov
pop
cmc
popa
mov
mov
or
mov
pop
loopne
mov
bound
mov
push
lock
push
in
xchg
xchg
jnp
sbb
cmp
add
inc
jmp
leave
pop
jae
xor
sub
in
dec
test
shrb
es
ljmp
and
bound
jge
xor
scas
mov
xor
inc
and
mov
dec
or
nop
lods
adc
push
psubusw
or
ljmp
mov
ds
leave
mov
pop
sub
pop
loopne
imul
push
lret
and
inc
int3
out
push
jmp
sti
push
pop
adc
loope
and
je
inc
test
adc
cmp
jge
movb
dec
add
or
scas
inc
mov
lret
jns
sti
pop
ret
add
popf
fldenv
pop
cmc
mov
sbb
inc
sarl
in
leave
xlat
mov
pop
cmp
gs
aad
outsb
cmpsb
int3
adc
insb
mov
pop
in
imul
add
fucom
pusha
addr16
sub
adc
push
test
sub
arpl
rol
jns
sahf
jne
push
pop
in
sar
xchg
lds
and
mov
mov
jo
inc
es
push
ljmp
jno
in
sbb
push
loop
inc
cltd
push
xchg
outsb
mov
cltd
or
fstpt
mov
aad
ja
daa
inc
mov
dec
push
or
adc
ret
mov
int
dec
inc
fnstsw
push
sub
inc
cwtl
push
xor
mov
notb
mov
push
icebp
outsb
js
push
mov
mov
push
and
sbb
jns
pop
mov
push
mov
dec
scas
inc
enter
push
inc
rclb
cmp
fistl
xor
test
fmull
subb
mov
addr16
add
cli
cmp
fcompl
pushf
shl
dec
add
scas
cmpsb
les
push
push
divb
and
inc
ds
arpl
iret
pop
jb
loopne
or
mov
enter
call
push
jns
jg
add
into
pop
lods
fstp
xchg
dec
inc
js
adc
rcl
insb
insl
add
fwait
jg
sbb
lds
pop
cmp
xchg
fldl
mov
lcall
mov
bound
mov
shlb
ss
mov
mov
stos
xchg
sbb
mov
int
hlt
mov
cmpsl
mov
loopne
test
sub
pop
add
push
pop
cmp
add
stos
in
stos
sar
cmp
ja
pop
jo
sbb
or
pusha
cmpsb
mov
leave
jo
ficompl
sbb
insb
ficomps
mov
sbb
xor
adc
xchg
cld
lret
out
pop
xchg
sbb
sub
fidivrs
mov
cmp
inc
pop
in
loope
xchg
and
xchg
stc
cs
rcrl
lahf
out
sti
mov
arpl
scas
out
sub
push
aad
push
inc
negb
xchg
pop
repnz
mov
jmp
iret
mov
cmp
loope
mov
xchg
add
popa
push
add
bound
or
cmp
out
cmp
sub
insl
rclb
lods
sub
std
add
and
test
or
bound
dec
jbe
js
adc
ss
hlt
out
dec
push
mov
jl
jb
mov
inc
push
mov
fbld
dec
inc
js
jge
stos
inc
adc
ror
cmp
pushf
lock
cmp
lods
jp
inc
xor
stos
adc
dec
xchg
insb
jle
sub
mov
out
mov
pop
testb
sub
or
xchg
dec
dec
hlt
sbb
sub
inc
loopne
sbb
js
fs
inc
and
jne
dec
mov
xchg
movsb
lds
adcb
pusha
cltd
or
xor
test
jecxz
push
sbb
and
mov
jbe
std
mov
and
mov
je
out
xchg
sub
inc
sahf
mov
mov
push
test
int3
hlt
xor
and
sti
pop
loopne
icebp
roll
sub
insb
iret
push
scas
or
inc
test
adc
mov
mov
test
in
and
adc
cmp
dec
pop
cmp
testb
es
adc
test
lret
or
adc
stc
dec
mov
shlb
test
out
xchg
fdivrs
push
push
enter
xor
inc
push
test
lock
dec
icebp
add
cmp
jecxz
pop
cmpsb
dec
mov
pop
cmp
dec
imul
push
xchg
mov
push
pop
scas
nop
les
add
movsl
cmp
in
cmp
sti
lock
into
cli
inc
jmp
cmpsl
sbbl
cmp
xchg
adc
or
mov
or
and
mov
icebp
es
and
and
and
rcrb
arpl
das
lahf
inc
fistpl
adc
jp
dec
jno
jle
inc
pop
jp
mov
dec
test
and
jb
rorl
or
jne
pusha
in
xchg
dec
sarb
add
fdivrs
xchg
into
and
mov
jbe
inc
pop
pushf
cmpsl
sbb
mov
xchg
sub
inc
test
sub
or
movsl
and
add
mov
das
mov
mov
pop
push
fdivrl
pop
cltd
mov
lods
dec
negb
stos
stos
push
push
cmc
lret
bound
popf
jo
push
popf
xor
mov
aaa
mov
leave
pop
sahf
aam
inc
lret
aaa
cmc
jnp
mov
jbe
idivb
test
pcmpeqw
fmul
in
sahf
cmp
cwtl
orl
ss
clc
test
scas
into
int
ja
and
fsubp
jns
lahf
sub
push
mov
jge
ds
pop
hlt
je
pop
cltd
imul
pop
xchg
lahf
lods
neg
gs
or
push
je
jp
dec
lds
push
mov
adc
jl
cmp
lods
cmp
mov
dec
and
add
mov
add
jno
mov
roll
sub
mov
mov
mov
cmpsl
mov
repz
lea
push
lcall
push
inc
arpl
push
jo
push
cmp
mov
jno
cmpsl
test
call
stos
pop
fldenv
and
cmpsl
xor
xchg
je
insb
xchg
push
insb
je
mov
js
or
jle
inc
lret
jl
jb
cmpsl
ds
sub
fstps
xor
movsl
pusha
js
scas
adc
inc
sti
fcmovnb
insl
jmp
mov
add
or
aam
out
cmpsl
in
cmpsl
rcrb
xor
pop
jmp
fcoms
xor
push
repz
sbb
je
jge
pop
in
mov
xor
cli
popf
in
push
mov
jg
push
cmpsb
iret
ljmp
sub
in
jno
xchg
fs
nop
push
test
incl
jno
xchg
xor
push
outsb
popf
mull
add
sahf
push
adcb
mov
cmp
and
dec
je
jno
les
mov
xor
ret
lds
lret
sub
stc
lods
sub
adc
xor
gs
sbb
into
gs
ret
mov
mov
inc
lods
jmp
iret
mov
inc
xchg
sarl
mov
add
fmull
cli
mov
push
outsl
mov
xchg
lahf
lods
pop
push
xchg
outsb
mov
jb
stos
pop
jmp
sbb
add
lret
xor
push
inc
push
shl
cmovl
scas
call
xor
cmpsl
cld
push
push
insb
jno
jnp
into
adc
pop
cmp
or
jmp
mov
sub
pop
sbb
loope
mov
mov
push
lea
insb
xor
lret
and
lock
repz
lahf
imul
jge
aas
mov
loopne
sahf
sbb
push
ret
and
stos
jb
pop
lods
mov
aas
dec
sub
and
xchg
pop
fwait
lret
int3
mov
fsts
sbb
call
int
cmpsb
jne
repnz
and
adc
les
mov
add
sub
mov
mov
rol
pop
sbb
push
or
fiadds
pop
mov
test
ret
ss
jb
push
cmp
lods
jmp
and
out
xor
cwtl
xchg
test
cmp
gs
jbe
adc
testb
pop
pop
test
jbe
das
stos
aas
ret
or
mov
out
push
es
add
xor
stc
nop
dec
aam
or
testb
fcoml
push
loopne
notb
jle
pop
mov
xchg
jno
mov
sbb
test
es
mov
and
and
fs
xor
cmpsl
xchg
fiadds
and
sbbl
mov
pusha
ljmp
push
cmp
outsl
mov
call
mov
std
dec
lea
outsb
mov
or
pop
adc
sub
dec
add
js
mov
iret
data16
xchg
mov
addr16
mov
push
add
imul
mov
xchg
neg
outsb
add
xor
movswl
inc
std
dec
fnsave
repz
mov
cmpsl
sbb
shl
xorl
lock
das
sub
ja
fadd
ljmp
xor
xchg
stos
xchg
lret
ljmp
or
mov
xchg
out
ret
inc
adc
cmp
push
mov
enter
shrb
loope
cld
or
arpl
jns
xor
dec
inc
fsubrs
xchg
jle
adc
arpl
jp
fs
mov
pop
bound
loopne
lcall
jp
roll
ss
mov
inc
or
and
jo
stos
xchg
pop
push
cld
shrb
shlb
popa
mov
dec
aad
jnp
ret
addr16
insb
inc
xlat
fists
mov
adc
mov
shl
enter
pop
in
jmp
sub
popa
aam
shrl
lret
adc
mov
xchg
or
jp
cmp
mov
sub
mov
inc
rorb
sbb
mov
fisubrl
mov
int
cltd
xchg
xor
loopne
dec
popf
fld1
lret
hlt
adc
ljmp
stos
pop
repnz
sbb
data16
adc
dec
out
das
insb
inc
stc
fsub
add
sbb
mov
mulb
mov
inc
imul
icebp
les
scas
enter
pop
cmpsb
inc
xchg
sbb
push
inc
cmpsl
inc
fdivr
arpl
rclb
add
in
and
scas
mov
push
ss
aaa
dec
fisttps
sub
mov
or
mov
push
roll
sub
loop
cmp
adc
js,pn
adc
rcrl
mov
leave
movsl
cmc
cmpsl
jle
ljmp
outsl
pop
add
icebp
and
cmc
jg
cwtl
daa
mov
mov
push
sub
sbb
sbb
mov
das
add
es
mov
out
decb
movsl
push
outsl
iret
fldt
addr16
xorb
push
dec
lea
add
or
pushf
push
shlb
jbe
push
push
mov
or
cwtl
mov
cltd
jb
push
mov
repz
add
cs
jp
stos
and
sub
hlt
sub
xor
ja
aam
add
pop
repnz
int3
les
lret
pop
inc
cmp
ljmp
sbb
sub
or
shll
sbb
sahf
jmp
mov
mov
ret
push
pop
dec
movsb
std
inc
and
movsl
data16
pushf
mov
jecxz
jbe
push
stos
mov
xor
sub
xchg
push
add
shl
sub
dec
inc
rcl
push
jnp
sbb
mov
fdivrl
mov
into
mov
pop
mov
dec
mov
mov
sub
adc
sbb
xor
popa
adc
jp
or
scas
lock
push
cmc
test
rcll
inc
inc
adc
fs
cmp
scas
xchg
push
mov
adc
ds
xor
push
inc
jmp
cmp
push
mov
pushw
movsl
aad
add
out
xchg
in
pop
push
mov
insl
jnp
pop
xchg
dec
adc
roll
pop
adc
sub
add
cld
adc
mov
addr16
dec
fmull
mov
jmp
addr16
sbb
ss
adc
aam
mov
and
sub
xchg
push
mov
popa
mov
sub
cli
pop
lock
sahf
cld
jl
loopne
mov
aad
inc
rcl
std
or
fdivl
push
shl
jno
test
jbe
enter
jle
gs
dec
inc
cli
and
jb
cld
dec
push
pop
push
jne
xchg
repnz
testl
cmp
mov
mov
bound
shlb
jb
mov
mov
jbe
or
push
mov
in
lods
push
rcll
pop
push
mov
popf
or
mov
mov
pop
dec
jne
mov
cmc
xchg
aaa
mov
dec
outsl
pop
icebp
sbb
fwait
sub
xchg
adc
dec
pop
fists
mov
rcl
sbb
add
jo
iret
gs
mov
loop
shl
mov
add
push
push
inc
fimull
icebp
or
mov
mov
aam
stc
rol
cmp
popf
ret
push
pop
xor
mov
jns
call
orl
call
cmp
xchg
int
enter
sarb
dec
dec
mov
mov
or
pop
xchg
jl
into
inc
in
xchg
push
sub
outsb
adc
fidivs
mov
lock
aaa
push
inc
xchg
imul
sub
xchg
pop
or
mov
sub
lcall
cmpsl
push
iret
push
test
pop
pop
sti
test
lock
adc
add
jnp
xchg
leave
pusha
xchg
sub
loope
jp
sub
dec
lock
sbb
dec
pop
mov
mov
xchg
jmp
cmp
sti
imul
inc
xchg
push
mov
xchg
lret
gs
push
repnz
push
lods
scas
ficoms
push
int
sbb
pop
aaa
inc
arpl
aad
jg
adc
in
add
xor
gs
mov
aaa
inc
out
js
andb
xlat
jl
or
fldt
xchg
jge
mov
gs
mov
std
mov
jle
mov
adcl
push
test
icebp
aaa
push
loop
jae
pop
les
idivb
xchg
mov
sbb
inc
loope
adc
jbe
test
xchg
push
aad
adc
push
test
stc
push
popf
xor
sti
insl
xchg
insl
push
jmp
shrb
cmp
mov
mov
clc
fidivrs
cmp
jbe
lods
test
sub
jns
adc
cmpsl
dec
sub
mov
rol
loope
mov
repnz
pop
jne
xchg
mov
xchg
in
mov
fldcw
sub
mov
neg
jne
add
and
push
mov
je
lret
shrl
icebp
packssdw
insb
add
fsts
movsb
sub
fs
pop
jecxz
push
cmc
cmpsl
mov
les
lret
test
repz
das
xchg
sub
xchg
mov
dec
daa
push
xchg
mov
aaa
pop
or
xchg
or
or
or
xor
mov
imul
dec
cmp
xchg
repz
mov
mov
lods
mov
out
cwtl
inc
cmpsl
shrb
pop
sub
lahf
adc
mov
ljmp
pushf
dec
inc
bound
iret
lods
inc
mov
notl
dec
xor
push
xchg
and
rcr
xor
lret
fptan
xchg
arpl
mov
faddl
pop
pop
fcoml
cmpsl
or
xchg
scas
test
mov
into
out
and
pushf
fsts
cld
cmp
das
mov
testl
ja
nop
mov
push
and
js
insl
mov
dec
pusha
mov
push
in
inc
arpl
mov
xchg
cmp
fsts
pop
add
out
mov
jo
outsb
jle
das
dec
lods
xlat
or
inc
in
into
add
bound
mov
or
andb
lods
mov
ret
xorl
or
in
push
mov
jp
scas
arpl
or
fiaddl
and
mov
inc
adc
cmp
std
cmp
out
jno
pop
popa
adc
xchg
add
pop
xor
sbb
popf
cmp
jo
sub
cli
sub
mov
clc
pop
roll
add
add
pop
testb
push
imull
adc
cs
nop
cwtl
mov
mov
out
adc
pop
aam
and
jp
jl
cmpsl
mov
push
pop
add
lods
mull
mov
jmp
or
or
pushf
or
mov
jbe
pusha
rcl
or
cmc
sti
jbe
aam
mov
fadd
fcomps
jecxz
mov
mov
lret
add
or
dec
mov
mov
adc
xor
sbb
loopne
push
push
fldl
bound
rcll
or
les
test
xor
inc
cmp
testl
call
jnp
int3
pop
ret
sub
inc
cs
je
insb
add
xchg
or
cmp
fmuls
adc
mov
xorb
repnz
daa
dec
pop
pop
fs
pop
cmp
test
add
or
out
add
or
inc
fimuls
and
insl
shl
testl
cs
sbb
mov
mov
xchg
das
jmp
mov
test
xchg
sub
pop
aad
int3
and
push
mov
int3
data16
cmp
in
mov
or
pop
ds
xor
out
cwtl
out
mov
xchg
mov
inc
std
outsb
daa
mov
dec
pop
ficomps
jb
orl
or
cli
iret
mov
or
cmpsl
cmp
std
daa
lcall
adc
dec
lds
stos
adc
sub
iret
adc
xchg
stc
xor
xchg
xchg
pop
push
inc
pop
push
ljmp
out
or
ret
add
ss
popw
aas
out
negb
enter
inc
loopne
dec
pop
add
in
inc
sbb
add
dec
imul
popf
outsb
adc
xchg
lret
call
imul
adc
sti
cmpsb
inc
shrb
fsincos
xchg
sub
out
mov
and
mov
jnp
mov
cmp
and
add
icebp
add
add
pop
sbb
out
inc
and
xor
push
pop
arpl
sahf
and
into
and
scas
adc
sti
test
sub
pushf
clc
sbb
add
lds
cmpsl
fildll
jnp
jae
ljmp
pop
mov
inc
sbb
pushf
push
adcb
adcb
or
add
jne
outsl
and
clc
ret
fistpl
adc
adc
fstpl
sbb
pop
jp
sti
arpl
xchg
sbb
or
iret
and
sub
mov
cmp
ds
stos
movb
in
sub
in
jb
dec
xchg
xlat
call
cmc
out
and
sahf
sub
pop
mov
mov
cmpsl
push
sbb
xor
and
rcrb
sahf
shrl
mov
jno
cmpsb
or
sub
cmpsb
cs
pushf
dec
sahf
xor
lret
std
inc
stos
cs
scas
fisttpll
arpl
cmpsl
jbe
pop
sahf
mov
sub
mov
dec
add
dec
repz
lcall
dec
jae
xchg
and
iret
pushw
notb
sub
loope
mov
aas
fcomi
push
jmp
imul
cmp
dec
lahf
pop
cmp
xchg
cmc
es
push
jb
popa
mov
in
push
mov
jp
add
adc
jnp
xor
xchg
arpl
push
call
cmc
push
pop
insb
dec
rolb
pushf
jp
scas
stos
stc
jp
sub
testl
and
mov
scas
call
loopne
test
jecxz
fists
inc
leave
jge
pop
jne
mov
cs
push
scas
out
cmpsl
loopne
shrb
inc
add
mov
mov
and
xor
cld
add
or
inc
cmpsl
imul
mov
cli
lret
popf
xor
lahf
mov
and
xor
mov
inc
enter
enter
push
dec
mov
cmp
and
xor
mov
push
enter
dec
pop
sub
enter
pop
xchg
lods
mov
dec
mov
lret
out
mov
int
push
add
pop
xor
jl
outsb
inc
repnz
pop
fiadds
mov
cmp
das
mov
mov
rcrb
jmp
mov
cmc
imul
sbb
shr
movsl
je
ja
lret
mov
and
jo
xchg
test
adc
xchg
lret
out
cld
or
mov
inc
aaa
push
mov
dec
lds
sahf
mov
and
xor
cmp
in
mov
test
pop
mov
or
addb
cmpsl
pushf
lods
and
jno
xchg
inc
mov
mov
fstpt
iret
sbb
dec
and
xlat
jbe
rorb
divl
and
pop
dec
sbb
adc
imul
in
cwtl
xor
test
push
add
fnstcw
push
rol
pop
add
push
pop
gs
ja
into
push
jmp
out
sbbb
jb
loopne
mov
aaa
cmp
test
popa
cli
mov
rorl
ds
xchg
aaa
mov
cmp
lahf
std
xchg
hlt
lret
inc
push
daa
mov
in
leave
inc
mov
loop
sbb
flds
in
test
dec
pop
insb
sbbb
mov
cmpb
test
fstl
xlat
xchg
addr16
outsl
jnp
lcall
in
test
inc
or
dec
loopne
stc
loopne
dec
dec
push
insl
cwtl
cs
cmp
sub
xor
sti
fnstcw
iret
loop
dec
mov
add
pop
in
rol
xor
std
adc
xchg
daa
jns
xor
movsb
push
hlt
jno
and
call
jae
cmp
out
std
push
cmpsl
aaa
lret
jcxz
adcl
sbb
sbb
jecxz
mov
fcoml
fdivrl
sub
bound
lahf
rorb
mov
inc
add
into
sub
repz
mov
dec
pop
imul
sub
shll
jno
jne
mov
pop
mov
mov
mov
push
cwtl
push
inc
lret
cmp
and
and
push
sub
inc
pop
fmull
mov
mov
imul
sti
push
adc
cmp
jns
decb
cmpsb
inc
fdivr
and
aaa
push
fsubrp
cltd
dec
stos
or
dec
arpl
js
cmp
xor
xor
pop
stos
pop
test
mov
loope
adc
andl
jbe
rorb
stc
push
pusha
cmpsl
enter
pusha
mov
aas
fcmovnu
pop
xlat
fistps
aas
cmpsb
das
loopne
stc
scas
mov
jns
bnd
in
sti
jmp
mov
xor
in
outsb
jp
mov
cmp
push
mov
mov
lods
jns
dec
test
mov
jp
mov
adc
sahf
xchg
testb
xor
les
or
lods
scas
jno
out
stos
aam
add
ss
push
aas
lods
cmp
sbb
push
movsl
cmp
fadd
lcall
inc
repz
pop
pop
lock
sbb
aam
dec
push
stos
pusha
imull
lret
outsl
jne
mov
test
jns
movsl
sti
xchg
xlat
cmp
jg
sbb
ljmp
call
cli
add
in
and
or
push
out
shr
into
xorb
out
or
pushf
push
dec
data16
cmp
mov
test
sbbb
lret
fstpt
out
xchg
push
mov
dec
test
pop
imul
repnz
inc
lock
es
sbb
push
ljmp
jo
xor
bound
dec
das
mov
mov
or
xchg
movsb
shlb
jmp
cmpsb
in
sub
add
xor
testb
aam
xor
lea
je
mov
or
enter
cmp
fistl
push
aaa
or
ss
fs
rol
pusha
inc
in
push
xchg
out
mulb
mov
cmp
sub
shll
pop
mov
push
pop
je
fisubrl
or
adc
push
stc
mov
mov
xchg
pop
xlat
and
cmp
clc
in
sub
stos
adc
js
pushf
xor
nop
push
push
mov
daa
inc
xor
jl
xor
jmp
out
dec
int3
arpl
psllq
imul
stos
push
sbb
call
push
sbb
mov
xchg
pop
xor
pop
and
repz
inc
jnp
movups
or
scas
inc
push
fucomi
into
xchg
sub
or
imul
rol
jnp
loopne
adc
fdivl
mov
jb
fistpll
adc
and
xor
fisubl
aas
mov
mov
test
xchg
xlat
jbe
jge
push
aad
mov
ljmp
xchg
popf
add
mov
xchg
out
adc
pop
test
sub
clc
xchg
push
leave
test
mov
stos
mov
imul
fidivl
cmp
test
inc
xor
loopne
dec
xchg
cmp
mov
out
or
xor
mov
lret
mov
xor
inc
xlat
or
mov
jg
sub
jle
mov
fldenv
test
xchg
sti
aas
mov
roll
mov
cltd
and
ja
fstpt
or
es
mov
and
mov
dec
fwait
sub
inc
sbb
adc
aad
pop
jge
pop
int
adc
mov
aad
push
lcall
aad
iret
jbe
mov
and
adc
lods
push
ljmp
scas
mov
les
mov
push
test
lea
or
jo
mov
shrl
pop
daa
sub
pop
js
cli
aaa
push
or
dec
std
sbbl
pusha
les
or
jmp
lock
push
test
test
hlt
mov
andl
mov
scas
mov
push
jb
mov
mov
adc
fcomp
out
sti
aaa
or
dec
xchg
pusha
xor
movswl
xor
pushf
cld
jmp
and
aaa
xchg
mov
mov
push
std
adcb
sub
xchg
adc
decl
imul
push
jg
enter
repnz
negb
push
jno
std
sub
push
add
pop
inc
add
xor
add
pop
addr16
mov
mov
pop
aam
cmp
out
scas
or
inc
int
in
lahf
test
push
add
push
sub
mov
jp
in
mov
mov
je
out
lret
cmc
cld
outsl
jecxz
mov
adc
mov
or
je,pn
and
xchg
xor
sbb
test
pop
out
inc
inc
aaa
shrb
push
insb
insl
ja
pop
stc
aaa
mov
pop
data16
push
outsl
mov
mov
insb
js
inc
loopne
pushf
fs
pop
add
sub
cmp
cs
xlat
jge
test
mov
and
mov
sbb
rcrb
imul
dec
or
pop
in
insl
sub
addb
add
dec
jle
jmp
gs
outsl
jb
jecxz
int3
mov
mov
sbb
data16
cmp
test
add
cmpsb
cmc
sub
fidivrs
shl
cld
ret
hlt
cmp
fiadds
sbb
push
inc
bound
shr
popf
scas
cld
pop
pop
xor
out
xchg
idivl
jnp
clc
fldenv
dec
out
je
aaa
subb
cs
cmp
scas
arpl
sbb
je
mov
jne
mov
test
ret
cld
stos
test
sub
or
ror
outsl
adc
mov
push
fcomp
pop
dec
inc
je
cmp
lock
inc
fistps
jmp
leave
movsl
push
movsl
jmp
in
push
rcr
inc
pop
sbb
pusha
sub
push
mov
inc
cmpsb
cmp
sahf
mov
bound
push
add
movsl
mov
xchg
adc
sbb
repz
lahf
cmp
push
push
lods
jle
scas
scas
into
fnstcw
loope
mov
movsb
in
cmp
mov
mov
lahf
sub
sbb
aam
mov
cmpsb
inc
into
adc
xchg
mov
jmp
in
sahf
adcl
xor
add
push
insl
insl
in
push
xor
cmp
pop
pop
add
pop
xchg
das
cmp
mov
leave
jne
xchg
jae
mov
mov
pop
jno
pop
hlt
out
int3
jle
inc
decb
mov
xor
sbb
movsl
fs
cli
jne
ret
jl
pop
vunpckhpd
jle
pop
enter
push
pop
fcomi
jno
xor
fldenv
jmp
xchg
inc
inc
jge
cmp
pop
out
jns,pn
mov
or
or
push
loope
dec
mov
jb
mov
push
js
inc
mov
nop
sub
mov
rolb
lds
and
inc
jl
push
lds
xchg
shrl
call
lds
add
fiadds
loop
pop
stos
cli
jne
clc
xchg
inc
mov
enter
outsb
xor
dec
shrl
xor
mov
or
push
mov
push
rcll
js
dec
sub
push
rcl
push
out
cs
xor
loopne
xor
add
ja
sbb
rol
movsl
mov
dec
fldt
test
cli
inc
pop
int3
arpl
stc
inc
push
inc
mov
lcall
int3
imul
and
push
adc
inc
cmpb
bound
daa
xchg
mov
push
pop
xchg
ficomps
xorb
inc
mov
jg
sbb
jp
mov
popf
in
mov
push
mov
adc
push
lcall
and
cld
outsl
pop
out
dec
aam
xchg
dec
jmp
sbbl
xor
pop
aad
or
add
push
jg
jnp
ja
dec
test
dec
inc
scas
jg
je
rclb
lahf
jg
inc
ret
inc
enter
int
push
xor
jmp
mov
sub
movsl
adc
xor
mov
int3
or
cmp
mov
xchg
xor
rolb
jmp
mov
jnp
stc
in
rcl
test
xchg
sub
shll
insl
pop
pop
jnp
lea
sub
pop
xor
pop
popa
cmp
and
out
jl
cli
je
push
out
lcall
imul
or
xchg
dec
dec
jno
test
aad
cmp
lock
sub
rclb
xor
stos
mov
ss
cmp
cli
clc
mov
or
mov
push
cmc
push
rcrl
scas
push
ljmp
xor
sub
pop
jg
jmpw
iret
jmp
ficoml
mov
or
ss
std
faddl
fldenv
xor
addr16
gs
dec
pop
shr
inc
fwait
dec
jmp
inc
add
out
jmp
out
notb
sub
loopne
mov
cmp
das
mov
cltd
pop
nop
or
fcomps
pop
divb
fidivrl
sbb
sbbl
or
dec
loope
xor
mov
inc
cld
mov
adc
cmp
dec
mov
cli
imul
sarl
dec
jbe
fistpll
adc
mov
mov
cmp
inc
ret
sub
leave
xor
jne
jns
cmp
loopne
es
jbe
daa
and
lods
inc
xor
insl
cmp
push
jb
cmp
stos
jbe
xor
and
scas
repz
dec
repnz
dec
mov
xchg
jg
add
aam
pop
lock
push
and
cli
test
sarl
cmp
lea
bound
inc
or
cli
push
dec
lahf
dec
adc
cmpl
adc
lret
xchg
ret
xor
popa
mov
mov
aaa
xor
cmp
inc
lcall
or
or
test
push
sub
cld
mov
fidivs
enter
movsb
test
into
es
ds
inc
clc
adc
sbb
fstpl
cmp
cmpsl
push
rolb
es
or
cmpsb
popf
jmp
dec
mov
adc
mov
pop
out
aad
cmp
pop
hlt
cmp
inc
out
xchg
scas
in
es
rcrb
mov
gs
in
sub
mov
mov
dec
xchg
push
clc
std
add
cmp
adc
arpl
jae
icebp
mov
dec
enter
and
xchg
and
scas
jbe
ret
sbbl
data16
pop
out
add
je
frstor
or
out
nop
sub
mov
xor
div
or
lock
jne
int3
cmc
jnp
les
je
pop
add
scas
or
call
insl
jo
xchg
and
movsb
test
sahf
dec
out
hlt
aaa
cwtl
jae
les
cmpsb
lcall
out
inc
inc
jbe
pushf
cs
sahf
jno
inc
andb
dec
and
cli
pushf
and
inc
fnsave
mov
pop
ret
stc
inc
push
xor
fbstp
stos
mov
xor
inc
push
jbe
mov
pop
sbb
pop
rorb
out
out
or
sub
mov
lock
dec
lds
daa
les
mov
in
outsb
jl
inc
cmp
pop
xchg
dec
pop
shl
pop
sbbb
xchg
ret
jle
mov
loop
jo
cmp
mov
aam
inc
mov
xor
lahf
and
xor
js
lock
jno
pop
movsl
insl
add
jle
mov
pop
std
sub
rcrl
out
mov
movsb
pop
sahf
lods
mov
push
lret
bound
arpl
bound
adc
cltd
ret
jmp
rorb
mov
clc
xchg
jge
jns
push
cli
xchg
lcall
imul
fldcw
test
loop
bswap
shll
and
das
mov
out
int
ss
hlt
imul
lret
cs
adc
fucom
enter
loop
dec
loope
repz
inc
adc
xchg
mov
das
imul
lret
in
aam
fsubs
push
lds
int
add
cli
test
dec
out
push
xchg
mov
dec
jo
stc
std
dec
fmull
push
push
cmc
dec
cmpsb
cmp
and
pop
jge
ds
jo
xchg
sub
pop
and
xchg
xor
jmp
dec
icebp
mov
mov
sbb
pushf
dec
xchg
jp
ret
and
mov
push
add
push
adc
mov
insb
mov
sbb
xor
ss
or
inc
sbb
cmp
inc
and
leave
aaa
push
add
bound
xlat
mov
bnd
stc
test
sub
xor
decl
or
xlat
jmp
jae
or
rcr
bound
roll
test
sbb
lods
fidivrl
pop
mov
loop
jecxz
sbb
jle
pusha
xlat
pusha
or
insl
cs
mov
lret
mov
sahf
xor
inc
es
daa
xchg
jl
dec
dec
aaa
insl
jno
imul
jno
cmp
xchg
inc
sti
pop
xchg
clc
loopne
repnz
mov
test
aad
ljmp
add
push
lret
jae
in
inc
mov
adcl
mov
mov
cmp
fcomps
xchg
sahf
cmc
inc
movsb
inc
bound
or
test
scas
fnsave
mov
int3
add
lret
cmpsb
les
movsb
sbb
into
shlb
das
push
push
mov
xor
sbb
aaa
jmp
cs
out
fstl
lods
pop
cmc
pop
rclb
stos
movsb
pop
adc
mov
jnp
insl
or
test
lret
gs
xor
mov
adc
xchg
ja
push
mov
mov
les
insb
jecxz
hlt
jnp
jo
xor
leave
out
xlat
xor
or
jb
mov
push
arpl
test
stos
dec
std
jmp
sub
mull
dec
adcb
lods
and
in
inc
dec
add
test
movsb
shll
repz
addr16
ljmp
cmp
out
imul
shll
je
cmp
mulb
scas
push
pop
test
icebp
push
adc
into
adc
or
dec
pop
scas
hlt
aas
xchg
test
out
xor
xor
in
dec
iret
shl
inc
test
jnp
dec
inc
push
mov
in
scas
dec
pop
xorb
pop
mov
idivl
cmp
clc
fiadds
inc
xchg
sbb
out
ja
je
xchg
cmpsb
bound
outsl
add
mov
fnstsw
psrad
adc
add
inc
shll
push
sbb
sub
mov
pop
inc
out
jnp
lods
mov
int
and
enter
lds
stc
push
pop
sub
lods
jae
xor
testb
stc
xor
shrb
pop
mov
out
xor
mov
aad
aaa
or
inc
fbstp
mov
lahf
adc
in
test
leave
adc
rcr
mov
mov
pop
jne
xchg
daa
jle
mov
rcrl
clc
or
jle
out
sub
paddb
dec
jbe
xor
and
movsb
jge
or
mov
mov
pop
sub
xchg
sub
mov
mov
std
arpl
loop
stos
mov
sti
dec
sahf
xor
add
jnp
push
es
popa
pop
cmp
mov
jo
jno
rolb
inc
sbb
lahf
xchg
stos
inc
cmp
xor
push
stos
push
or
mov
xorb
neg
lods
mov
and
outsb
sbb
push
js
bound
mov
fs
adc
jl
mov
sub
or
insb
pop
popf
cmp
dec
lcall
jecxz
sarl
mov
faddp
sub
adc
jge
enter
mov
mov
loope
insl
xchg
out
enter
fstpt
xchg
sub
xchg
push
dec
mov
pusha
jp
jbe
das
sbb
and
movsb
stos
jne
and
call
and
dec
cwtl
cmpsl
lcall
pop
in
sbb
sbb
and
mov
add
rol
push
sub
lods
int3
arpl
lods
xchg
cmpsl
mov
fisubrl
push
pop
jo
push
movsl
sub
mov
stc
xor
pop
adc
into
fs
clc
and
lcall
mov
push
lcall
push
aad
out
push
or
pop
cld
xchg
lahf
shll
jb
stos
inc
jg
or
push
mov
push
mov
inc
bound
fnstsw
mov
cmpsl
fadds
lds
iret
push
mov
outsb
sub
jge
es
shr
xchg
push
or
lret
adc
ja
jnp
cltd
cmp
jle
dec
dec
push
in
cli
icebp
clc
dec
bound
adc
shrb
mov
dec
inc
fidivrs
sbb
test
inc
jp
jae
loopne
daa
adc
inc
inc
dec
subb
xchg
fdivrp
imul
je
jecxz
and
out
add
mov
shlb
shrb
bound
sub
mov
outsb
pusha
mov
cmc
sbb
mov
andb
insb
sbb
int
sub
adc
sub
xor
jns
xor
push
inc
pop
dec
xchg
mov
mov
rorb
sahf
ljmp
shl
dec
ss
clc
jecxz
xchg
pop
scas
xor
sbb
lock
out
sbb
rep
hlt
test
sbb
cmc
sbb
shrl
pushf
nop
sub
fimull
mov
pushf
clc
xchg
loopne
popa
mov
stos
jne
mov
imul
imul
cld
inc
in
dec
add
ret
call
sub
sbb
xor
dec
movl
push
addr16
stc
or
scas
inc
pusha
add
mov
or
adc
das
cwtl
pop
sbb
arpl
and
push
ljmp
jno
arpl
or
jle
inc
popa
xor
cmp
fbld
mov
std
adc
int
xchg
mov
inc
mov
dec
sahf
and
xor
cltd
inc
push
sbb
push
ja
in
cmp
xchg
test
js
dec
dec
and
outsb
xchg
out
sbb
xchg
sub
push
inc
subl
hlt
dec
fistps
clc
dec
jmp
cs
popa
jmp
cmp
cwtl
mov
or
cmc
cmp
pop
xchg
sub
mov
repnz
or
add
mov
and
decb
in
outsl
clc
aas
jns
aad
push
out
push
xchg
in
jg
xchg
jg
and
ljmp
pop
out
pop
mov
imul
dec
push
cld
xchg
test
out
pop
xchg
sbb
dec
js
pop
and
push
js
fstpt
jns
mov
and
add
fiaddl
outsb
loopne
rorl
in
aaa
mov
sub
pop
testb
sub
pop
jo
fiadds
sbbb
mov
imul
aad
xchg
cltd
push
test
call
jg
cld
mov
xor
std
push
pop
jne
and
stos
push
leave
cmp
std
and
push
adc
frstor
andl
stos
push
pop
mov
jo
jns
jo
mov
leave
clc
int3
decl
fxch
clc
sbb
push
sahf
cmc
xchg
aas
mov
mov
jno
arpl
jmp
loopne
push
repnz
call
popf
xchg
stos
mov
jae
ss
xchg
dec
loopne
test
push
stos
cmp
fstpt
sbb
xchg
pop
and
in
add
xchg
nop
sbbl
xchg
jmp
cmc
aaa
xchg
fyl2x
mov
mov
stc
arpl
clc
xchg
jg
jl
cmp
sbb
rorb
stc
push
dec
mull
loop
xlat
jnp
mov
or
imul
in
es
sub
jg
ja
aaa
out
fs
push
nop
cmp
pushf
into
and
pop
outsb
dec
std
mov
cmpsl
cmp
xor
jnp
jle
call
loope
stos
jmp
xor
insl
cmp
dec
imul
push
pushf
pop
or
jle
loop
adc
pop
idiv
adc
aas
shlb
push
andb
stos
insb
mov
outsl
jp
sub
stc
lcall
outsb
fs
int
out
adc
iret
jecxz
mov
mov
out
or
ret
mov
daa
popa
push
xchg
jmp
jle
and
push
adc
mov
daa
jmp
pop
idivb
push
jp
test
jne,pn
sub
fwait
xchg
jo
ljmp
pushf
scas
lds
bound
mov
jnp
pop
insl
add
and
fistps
jae
outsb
ss
adc
push
out
je
sub
mov
outsb
jge
mov
fisttps
jl
scas
mov
loope
sbb
inc
sub
and
xchg
add
subb
nop
jae
jbe
xchg
das
inc
fidivs
pop
mov
mov
mov
les
pop
and
out
aam
dec
mov
dec
jo
sub
das
mov
or
push
pop
sub
iret
mov
cmc
test
and
pop
xchg
ljmp
scas
cmc
pop
out
add
mov
cmp
adc
lret
dec
push
mov
add
adc
adc
sbb
push
ds
lcall
ja
stos
jmp
cwtl
adc
adc
mov
and
push
xor
addr16
in
dec
mov
out
ss
push
jbe
fimuls
lret
repnz
lret
dec
xchg
out
jns
pop
sub
jmp
xchg
pop
sub
es
xchg
pop
out
nop
mov
mov
xor
cmp
ficompl
add
jb
outsl
jae
in
add
adc
cltd
sub
imul
push
xchg
out
pop
scas
adc
push
jecxz
das
mov
js,pn
jno
cmp
xor
aam
push
xor
jns
fsubl
clc
mov
sub
push
pop
icebp
aas
sub
cmpsl
sbb
mov
fldenv
jg
xor
imul
call
dec
or
rcrb
lret
adc
ja
cli
push
imul
mov
jo
and
fs
adc
and
inc
xorl
push
xor
xchg
outsb
cmp
push
jne
sti
icebp
das
push
and
popf
fdivs
test
pop
xchg
in
mov
ja
divl
scas
pushf
and
dec
xchg
adc
mov
and
setg
loope
jmp
mov
ret
pop
sbb
or
mov
insl
dec
jp
insb
xor
rcrl
push
mov
dec
push
lods
dec
mov
fistl
cmpl
out
mov
pushf
test
hlt
lds
jmp
lret
or
and
jp
or
jmp
pop
fwait
popa
int3
and
add
push
inc
xor
icebp
popa
js
imul
xchg
pop
push
cmp
mov
outsl
jb
dec
outsb
pushf
incl
ja
or
aaa
dec
ds
xchg
cs
out
lcall
icebp
lods
inc
xchg
xchg
fbstp
mov
out
rorb
sbb
pop
and
and
xchg
add
fdivr
cwtl
mov
adc
xor
imul
xor
inc
xchg
inc
mov
cli
out
mov
aad
arpl
jns
shll
xchg
jmp
push
insb
popf
mov
mov
cmc
es
jl
rcrl
jg
test
clc
je
sub
push
sbb
fisubl
cmp
xlat
push
rcrl
fsubr
call
orl
mov
pop
lea
inc
push
sbb
adc
push
mov
out
inc
xchg
pop
icebp
sub
jbe
push
fs
push
and
aam
push
add
or
ss
mov
lds
mov
mov
mov
vmovsd
clc
sbb
mov
mov
scas
cmpsb
rorl
enter
cmpsl
push
cmc
ss
mov
mov
mov
adc
insl
in
nop
fs
mov
jne
pop
scas
xchg
adc
clc
lea
xchg
in
mov
loop
mov
jp
dec
inc
gs
dec
xchg
sub
add
aam
pop
xor
cs
xor
pop
xchg
sbb
push
stos
roll
jmp
sub
popf
hlt
stos
dec
fwait
mov
or
loope
xchg
adc
sub
cmpsb
add
mov
sbb
cmp
jo
pop
pop
mov
shlb
lret
imul
push
mov
lock
fisttpll
push
loopne
push
shlb
or
pop
jno
arpl
lret
lods
insb
cmp
cs
sbb
ja
lea
repnz
jmp
stc
lods
dec
or
dec
mov
inc
ljmp
call
pop
push
inc
sub
jmp
out
hlt
mov
push
sub
jecxz
cltd
or
shl
lar
inc
cmpsl
ds
sub
inc
shrb
or
pop
lock
fisubrs
add
fs
pop
mov
or
and
push
push
inc
pop
mov
jnp
das
out
jp
push
mov
mov
out
push
pop
mov
add
shlb
xchg
aaa
or
sub
das
stc
mov
adc
nopl
cli
fists
push
or
sti
gs
sbb
sbb
bt
push
stos
jne
gs
inc
xchg
xor
in
or
mov
decb
mov
sub
into
cmc
mov
push
pop
out
jge
adc
sub
leave
fmuls
mull
adc
xchg
ret
xchg
stos
dec
mov
pop
xchg
dec
inc
jmp
fistpll
mov
iret
jb
loope
scas
pop
or
jns
shll
in
push
in
lahf
das
sbb
mov
and
xor
xchg
cltd
orb
stc
sar
mov
cmp
subl
into
mov
sub
scas
xchg
sub
pusha
cmp
pop
pop
cmp
mov
sub
sub
lea
fbld
cld
xchg
xchg
adc
fistpll
add
mov
pusha
dec
lock
adc
cltd
scas
repz
mov
dec
mov
cmpsb
in
sub
mov
and
and
add
mov
bsf
inc
mov
in
adc
fcmovbe
les
movsl
movsl
lcall
loope
mov
add
jge
and
push
rcll
inc
push
addl
or
mov
mov
in
into
mov
pop
gs
push
add
insl
popl
or
cmp
test
push
addr16
loop
popa
push
shr
inc
lea
es
cmpsb
in
and
sbbb
mov
outsl
mov
scas
add
repnz
inc
fidivs
adc
icebp
xchg
push
add
push
mov
mov
popf
stos
ret
adc
aad
test
int3
mov
add
sbb
insb
rcrl
jecxz
scas
in
loopne
shrb
loope
ds
jl
and
or
out
pop
cmpsl
dec
xchg
inc
flds
in
push
ret
add
mov
imul
scas
add
jo
or
xor
push
inc
push
xor
mov
xor
pushf
icebp
inc
cmpsb
in
insl
ds
lds
cs
add
pop
ljmp
cmp
adc
jmp
js
out
inc
xchg
or
dec
ffreep
iret
in
or
iret
push
fistpll
sbb
push
rcrl
cmc
in
push
in
push
mov
xor
sti
push
sti
xchg
pop
jmp
sbb
aaa
fimull
dec
dec
call
into
jb
paddsb
scas
bound
mov
dec
pop
repnz
add
adc
xor
aas
xor
std
jl
cmp
sti
clc
lock
js
sub
jge
sub
repnz
adc
pop
movsb
mov
outsl
xchg
and
lds
lahf
sub
jecxz
jmp
lods
inc
and
dec
push
inc
cltd
xchg
aaa
in
sub
and
cmp
xchg
rolb
xchg
add
lea
sub
push
jp
inc
mov
int
xchg
imul
sbb
sub
or
inc
test
rcrb
popa
insl
xchg
dec
rorl
dec
popa
pop
imul
scas
subl
jae
aas
movsl
insl
pop
sahf
popf
ss
outsl
sbb
popf
add
mov
dec
mov
sub
aad
xor
xchg
std
lods
pop
xor
pop
sbb
ds
lds
psrld
or
pop
fstl
adc
fs
and
out
push
dec
push
fnsave
adc
pushl
sti
ret
dec
in
dec
out
ret
mov
adc
jg
xor
sahf
imul
jno
jbe
inc
sbb
stos
add
rcll
cmp
pop
and
xchg
sbb
xchg
in
or
add
mov
out
sub
adc
or
pop
pop
out
loope
and
test
insb
and
sahf
xorb
xchg
xor
js
or
adc
scas
jg
jo
jg
and
rcl
ret
jno
add
movsb
lret
dec
sbb
cmp
fidivs
push
mov
or
cmp
enter
inc
jbe
inc
leave
rcrl
cmp
lods
imul
sub
repz
lods
pop
jg
mov
adcb
sbb
scas
jecxz
ja
int
dec
stc
movsb
imul
pop
inc
jmp
xchg
mov
fnstenv
dec
or
sub
outsl
lahf
adc
sub
pop
test
add
lea
xor
loop
ss
out
ficompl
jge
add
xor
adcl
pop
call
xchg
cs
lahf
sarl
push
jae
mov
push
xor
push
scas
mov
in
ja
inc
fcompl
jne
cli
mov
enter
mov
fsubs
lods
call
shr
clc
scas
ficompl
loope
sbb
stc
imul
xorl
pop
cmp
jmp
in
dec
aas
lret
cmc
or
outsl
add
mov
lods
in
mov
xchg
ljmp
inc
pusha
out
xchg
mov
iret
sti
adc
fsubrs
or
sub
sbbl
jnp
adc
les
push
popf
jb
xchg
popa
sbb
sub
cmc
sub
pop
push
outsb
jp
push
push
jmp
cmp
inc
fidivl
jecxz
fsubl
lahf
xlat
lods
test
lahf
mul
js
call
test
xor
enter
fabs
shrl
sub
xor
inc
ds
aad
inc
and
repnz
fs
jp
arpl
jbe
das
addr16
sub
aad
bnd
stos
cmp
mov
xchg
movsl
stos
push
mov
mov
sub
xor
iret
ret
lds
dec
ds
sahf
cmp
sbbl
ljmp
sub
or
add
mov
cmc
les
lea
mov
jo
mov
mov
arpl
lods
mov
movsb
mov
fbstp
call
add
dec
cmp
xchg
movsb
mov
lea
lahf
mov
push
mov
cwtl
bound
push
mov
push
add
pop
lcall
insl
sub
paddsw
addr16
mov
fsts
jno
dec
or
in
and
nop
cld
sub
xor
mov
mov
pusha
lods
int
pop
adc
and
add
pusha
mov
jmp
insl
leave
push
out
cmpsl
mov
mov
xor
adc
sub
and
int
push
repz
jne
clc
scas
push
cmp
pop
jne
sub
stos
into
and
cli
frstor
mov
pop
lret
loopne
pop
cmc
enter
inc
fs
ret
mov
aam
or
ja
lods
pushf
dec
xchg
stc
and
lea
leave
xchg
add
les
insl
mov
test
mov
and
leave
cmp
arpl
jne
pop
add
dec
inc
jne
sahf
subb
push
adc
sti
jbe
xchg
and
adc
shll
sbb
int
add
inc
mov
xor
fcomps
jl
lock
push
nop
ljmp
xchg
aaa
js
aas
lea
push
xlat
push
repz
xor
xchg
mov
xchg
jae
or
xchg
sbbb
addr16
mov
js
inc
jecxz
mov
jb
aaa
into
cmp
pop
mov
movsl
cltd
jnp
add
fwait
cmpsl
js
orb
jns
fbld
jno
jo
push
fsubl
cmc
pop
push
nop
leave
lahf
sti
rorb
dec
dec
sub
pushf
mov
ljmp
inc
sbb
rolb
cmp
adc
rorb
pop
jne
loope
mov
cli
test
cmpb
jg
stc
cmp
mov
xchg
mov
xor
aad
cmp
daa
cmp
dec
loop
push
pop
dec
in
xchg
push
aas
lahf
add
lock
inc
fmulp
inc
pop
ficoml
or
push
popf
into
adcl
call
out
ljmp
decl
and
aaa
sub
dec
sub
xchg
cmpsb
push
sub
pop
lock
icebp
scas
sub
jae
lods
xchg
adc
hlt
sbb
adc
leave
mov
xor
loop
out
sbb
stos
fs
test
xor
mov
lret
pop
test
pop
fbstp
jp
dec
insb
inc
mov
fmulp
add
lods
push
and
pop
inc
fnstcw
mov
subb
and
or
leave
fidivrl
ret
hlt
pusha
popa
mov
lea
xor
ljmp
jecxz
dec
scas
frstor
mov
testl
call
mov
xchg
fiadds
pop
aad
mov
je
mov
sahf
or
fwait
inc
ficoms
mov
jo
movsb
popf
push
sbb
xchg
xor
outsl
outsb
push
pop
jg
dec
out
out
xchg
sarl
stos
push
mov
fstpl
cmp
mulb
jns
cmp
pop
inc
and
sub
scas
loope
xchg
aas
dec
pop
in
push
sub
xchg
xchg
int
cltd
jmp
cmp
mov
sub
sahf
int3
push
aaa
mov
mov
scas
out
xchg
xor
clc
push
fs
call
imul
cli
pop
scas
orb
push
cltd
movsl
jns
and
jp
insl
std
xchg
mov
sub
jae
push
inc
dec
xchg
push
clc
lret
dec
imul
rcl
pop
jecxz
jmp
sub
pop
enter
shl
insl
pop
add
add
cmp
or
push
mov
es
pop
cmp
cmpsb
cmp
fsubrs
imul
std
cld
mov
es
pushf
lahf
mul
jno
pop
sub
movsb
cmp
pop
andl
repnz
aaa
pinsrw
out
loop
xor
fs
jmp
je
add
sti
and
sub
jbe
sub
xor
lock
mov
lock
xchg
mov
or
fimull
add
jg
ret
cmp
xor
xor
loope
or
imul
pop
or
inc
mov
addr16
adc
add
inc
cmpsl
jmp
ja
in
cli
ja
aaa
xor
and
movsl
sbb
add
dec
hlt
adc
dec
xor
xchg
fsubrp
enter
jne
sbb
and
sbb
and
or
aas
lea
out
or
dec
mov
jle
cwtl
xchg
jl
mov
insb
andb
std
sub
or
mov
mov
and
scas
fnstsw
xchg
mov
or
lds
dec
loope
inc
aas
dec
jle
lock
mov
dec
lret
fdivs
sub
sub
and
adc
jmp
pop
sti
or
clc
sbb
push
dec
mov
stc
fs
call
xlat
lds
loop
xor
imul
lret
outsl
outsl
iret
test
out
jo
cs
fdivl
je
out
das
roll
sti
xchg
xchg
js
loope
jae
mov
arpl
inc
stos
jle
pop
cmp
dec
andl
ds
bound
das
jo
jmp
mov
dec
jp
aaa
clc
mov
leave
cmp
arpl
sub
ja
fadd
out
or
and
or
jmp
cmp
sti
outsb
xlat
or
enter
ret
cmp
mov
or
dec
sub
clc
or
mov
lret
inc
rcrb
and
icebp
sbb
lahf
outsl
lods
and
or
in
fwait
popa
push
insl
lret
xor
fistps
cmp
inc
or
inc
sub
popa
cmp
sbb
into
xchg
scas
dec
ret
adc
sbb
jmp
addr16
inc
mov
mov
mov
outsl
jl
or
cmp
inc
cli
test
iret
ret
pop
stc
test
leave
sbbb
add
inc
mov
mov
and
fidivs
adc
in
pusha
sub
ret
loope
or
sub
clc
and
xlat
imul
pop
jae
sbb
shr
cmpsl
cmp
jmp
mov
loop
push
loopne
dec
push
jb
jo
subl
mov
nop
fiaddl
dec
out
sub
daa
pop
in
std
dec
sti
jg
sarb
fs
cs
movsb
test
loop
push
icebp
bswap
and
les
pop
enter
aaa
loopne
jmp
cmp
shlb
xchg
in
pop
xchg
aad
shlb
push
and
mov
test
and
add
sub
xchg
sbb
push
push
or
stos
arpl
sub
and
test
stos
sub
clc
push
adc
aaa
and
popa
cld
pop
cld
mov
loope
aam
sbb
adc
mov
repz
fiaddl
ret
mov
lods
xchg
imul
aam
lods
sub
mov
dec
call
inc
dec
cmpsb
in
stos
mov
fmul
sub
iret
sub
fidivl
inc
sbb
sbb
inc
test
push
push
push
xor
popf
push
mov
leave
pusha
enter
test
xchg
add
or
push
movsl
xchg
dec
scas
shr
and
push
hlt
and
jnp
lahf
enter
fsubr
push
push
add
xor
lret
fwait
cmpsl
gs
fiaddl
fwait
pop
je
std
in
das
call
js
mov
and
add
sub
hlt
das
inc
es
xchg
scas
adc
pop
mov
leave
jb
jle
pop
jbe
xchg
les
add
ljmp
inc
lods
mov
jle
shlb
push
cmpsb
nop
sahf
xchg
inc
xor
test
insl
sbb
xor
add
and
adc
jbe
and
call
testl
insl
xor
daa
repnz
add
mov
or
mov
mov
mov
inc
in
xlat
xchg
data16
ret
cltd
outsb
cli
int3
shll
lcall
idivb
ret
push
jmp
adc
out
push
out
xor
test
add
lcall
sarb
sbb
mov
sbb
push
pop
sub
jl
cmp
mov
aad
jge
push
imul
mov
jnp
pop
test
mov
call
popa
dec
sbb
push
mov
leave
in
xor
imul
inc
sahf
xor
mov
adc
shl
sbb
testb
mov
mov
jp
lock
ret
cld
mov
jmp
or
lahf
or
loope
fildll
ds
pop
xor
rcrb
fisubl
cmp
test
or
add
cli
mov
leave
ret
inc
pop
cmp
bound
mov
int3
aaa
loopne
fdivrs
pop
cmc
mov
hlt
fadds
stos
test
shrl
jl
xchg
movsl
jns
sbb
leave
push
out
cltd
dec
xor
mov
insb
mov
lret
sub
out
jb
pop
scas
mov
and
cli
fcomps
sbb
mov
nop
dec
addr16
jge
jle
push
fildl
aaa
cltd
adc
pop
sbb
fwait
test
out
jbe
das
in
mov
jns
mov
insl
cli
pop
and
rorb
push
movsl
cmp
xchg
dec
test
sub
push
test
mov
testl
test
pop
fbstp
cmpsl
je
or
stos
dec
sahf
iret
popf
adc
test
mov
xchg
inc
xor
rcrb
add
jge
das
mov
mov
leave
outsb
loope
out
jo
xor
push
pop
out
mov
jno
pop
sub
test
enter
cmpsb
push
test
pop
movsl
push
jae
testl
xor
push
stos
stc
adc
mov
adc
nop
ror
gs
scas
in
and
push
repnz
mov
mov
ret
pop
sbb
lods
test
jp
fidivl
aad
xabort
cli
hlt
sub
mov
xchg
adc
popf
cld
mov
inc
gs
or
fdivrp
into
cltd
jmp
adc
out
subb
adc
ds
lods
lods
or
jne
fnstenv
fnstsw
mov
fcmovu
jae
adc
jle
pop
add
add
imul
mov
jle
fxch
pusha
daa
push
out
xchg
jne
and
xor
sahf
xchg
cmp
repz
aam
jmp
lret
or
sub
push
in
mov
sub
jl
or
pop
mov
push
outsl
cmp
sub
push
outsb
jne
icebp
mov
inc
sti
iret
xchg
adc
adc
in
jae
jl
xchg
cmp
sub
dec
sbb
movsl
ds
mov
loopne
es
stos
push
hlt
cmpsl
mov
bnd
and
adc
add
pop
mov
jne
mov
xadd
sbb
xor
imulb
or
stos
frndint
xchg
lret
icebp
ds
daa
fdiv
mov
cltd
and
adc
ret
jnp
and
nop
sub
push
add
xchg
xor
notl
stos
inc
je
pushf
push
out
enter
gs
pop
clc
mov
imulb
fs
hlt
dec
popa
jns
cmp
dec
iret
scas
ss
aaa
into
inc
dec
and
lahf
push
mov
iret
das
xor
enter
sbb
faddp
fwait
mov
jne
xor
sbb
or
fsubl
add
and
mov
or
int
fcoms
jmp
insl
push
inc
fidivl
mov
mov
adc
jmp
addr16
pop
mov
mov
orl
test
push
bound
jg
test
add
cmpsb
pop
xor
daa
call
jg
repnz
jno
xchg
pop
inc
shlb
sbb
add
jae
movsl
inc
pop
and
xchg
lods
pop
movsb
fisttps
outsb
ret
push
jecxz
mov
sbb
stc
popf
sbb
mov
repnz
scas
cmpsl
sbb
pop
xlat
cmp
rol
inc
fnstsw
pop
fs
int
hlt
subb
push
dec
int
jecxz
mov
cmp
mov
icebp
or
and
or
jle
xorl
mov
movsb
imul
ja
pusha
mov
sbb
addb
cltd
or
lret
xchg
adc
pop
insl
and
shl
mov
cmp
jecxz
aad
cmp
mov
jle
cmp
mull
lea
or
jge
cmp
push
mov
add
scas
in
call
sub
outsb
icebp
fwait
sti
inc
mov
mov
pop
pop
dec
mov
adc
inc
dec
mov
ret
icebp
sub
std
rcrl
pop
cmpsb
lcall
push
pop
aas
out
add
or
sahf
cmpsl
dec
and
adc
ljmp
push
xchg
push
mov
arpl
inc
pop
shr
mov
sub
dec
push
pop
jecxz
test
ret
xor
pop
cmp
push
repz
inc
cmp
flds
ljmp
jb
repz
daa
ss
pop
je
mov
sbb
jg
inc
in
add
test
push
push
cmp
lret
xchg
pop
pop
shl
cmp
cltd
shrl
pop
testb
movsl
mov
cltd
pop
mov
dec
xchg
pop
stos
xchg
mov
adc
in
xorb
stc
push
cmp
push
xchg
jnp
fs
arpl
test
subb
cltd
bound
pop
fsubp
jns
stos
jbe
popf
inc
xchg
sbb
add
fistpl
out
pop
lds
fisubrl
outsb
pop
sti
add
fcompl
jp
mov
pop
sub
cmc
aaa
jecxz
in
call
sbb
and
lret
imul
xchg
pop
push
jb
fs
pop
dec
icebp
pop
iret
rcll
andl
lds
dec
sti
add
xchg
inc
inc
jmp
xlat
sbb
aam
inc
out
add
and
mov
dec
loope
mov
mov
out
jae
jmp
test
dec
xor
clc
shl
xlat
mov
sub
imul
fs
mov
notl
and
imul
mov
pop
mov
iret
mov
testb
jl
and
xchg
pop
ret
mov
sbb
mov
xor
push
imul
inc
mov
add
test
mov
jbe
inc
xor
add
push
icebp
fsubr
mov
pop
xor
je
dec
test
mov
push
inc
and
jl
aaa
aad
inc
pop
js
fisttpl
sti
in
xchg
xor
lahf
sub
sar
aaa
stos
mov
inc
shlb
fdivrs
mov
inc
jns
push
xchg
test
jp
xchg
mov
add
xor
data16
shll
xchg
mov
test
test
sahf
in
repnz
mov
xchg
dec
rol
adc
add
sbb
and
push
scas
jne
jg
push
push
mov
pmaxub
add
mov
push
jecxz
cmpsl
out
xor
xchg
test
and
push
insl
push
adc
mov
sub
hlt
out
push
popf
lock
popf
mov
dec
sbb
push
clc
mov
fsubl
test
xchg
jmp
mov
lods
jne
push
loope
es
pop
mov
cmp
sbb
and
inc
je
mov
pop
jp
movb
pop
push
mov
pop
ja,pt
mov
push
ror
lock
jnp
jge
mov
push
and
rcl
jns
sbb
mov
gs
pop
int3
push
mov
mov
lret
test
inc
and
push
pop
cmp
xchg
out
call
and
push
xchg
and
fisubl
mov
jno
fs
clflush
and
or
or
es
xor
xchg
pop
negl
fdiv
and
stos
adcl
inc
test
or
xchg
xlat
scas
mov
flds
test
dec
dec
fistpl
lods
lods
pop
sub
repz
dec
adc
xchg
add
mov
es
jmp
leave
pusha
imul
jb
js
jmp
popf
dec
lds
in
das
roll
shll
mov
push
and
pop
jp
insl
setge
mov
or
ret
cltd
inc
xlat
test
jae
adc
mov
rep
jns
adc
leave
test
leave
push
jecxz
jb
push
insl
testl
stc
nop
or
mov
orb
icebp
jae
sub
or
std
lahf
and
ficoml
js
adc
into
aaa
cld
cmp
call
shrl
bound
inc
push
mov
fldt
and
idivl
jle
xchg
mov
scas
je
mov
mov
hlt
sbb
sub
lea
cmpsl
xchg
cld
cld
cld
imul
sub
out
mov
jg
popa
inc
out
iret
stc
in
test
cmp
fiaddl
testl
add
cmpsl
mov
cmp
movsb
leave
mov
mov
push
xor
and
test
cltd
dec
sbbl
inc
xchg
bound
add
aad
ja
mov
jecxz
inc
pop
xor
xor
jmp
cwtl
cs
xor
repz
ficoml
cs
cmp
and
in
add
jne
xchg
inc
xlat
ret
cli
jns
sub
sub
sub
inc
pop
dec
xor
push
bound
xor
push
hlt
sub
sbb
int
imull
outsb
mov
fnstenv
repnz
lret
xchg
loopne
mov
inc
mov
andb
cmp
shr
xchg
inc
iret
jp
inc
loope
jb
mov
mov
lret
mov
adc
mov
ljmp
imul
xor
cltd
push
sub
mov
gs
jo
sbbl
cmp
outsl
pop
fldenv
adc
xor
es
repnz
adc
aas
push
clc
pop
jae
rorl
add
adc
cli
pop
ret
jmp
sub
cld
jecxz
fisubs
lods
ljmp
xchg
mov
lock
repz
cmpsl
ljmp
pusha
lds
daa
incl
lock
lods
out
sbb
dec
aaa
in
lods
jo
sbb
ds
push
xchg
cli
pushf
repnz
dec
popa
arpl
fbld
jl
insl
jl
js
jne
stos
inc
test
xchg
or
cli
in
push
push
repz
sbbl
repnz
shl
jp
dec
stos
and
inc
xchg
fldl
pop
cmc
jmp
mov
arpl
xor
sbbl
pushf
fistl
das
ficomps
xlat
add
or
std
lock
jl
push
je
loope
inc
adc
mov
push
aaa
insb
sub
mov
cmp
insl
ret
push
jg
push
mov
add
pop
sub
jo
mov
add
adc
lret
and
adc
dec
push
or
test
movsl
addr16
cmpsb
cltd
sbb
out
adcl
inc
push
stc
out
sti
push
enter
adc
fldcw
popa
xchg
dec
ja
push
bound
mov
shld
cmp
and
sub
adc
pop
js
pop
inc
sbb
clc
fildl
xlat
xor
sub
icebp
ret
outsb
das
lea
jnp
xor
ds
adc
adc
scas
shlb
dec
or
cmp
jmp
push
repz
mov
pop
mov
jne
jb
fldcw
xchg
arpl
mov
xchg
stos
rolb
sbb
fsubrl
out
xor
pusha
pusha
aad
sub
cmpsl
in
mov
push
or
push
push
inc
pop
std
jno
pop
cmp
jmp
xchg
or
mov
in
jmp
cmc
mov
inc
loopne
in
cmp
push
mov
iret
cmpsl
cld
lahf
rep
jo
cmp
cmpsb
cmpb
ljmp
add
fsubs
cmpb
das
mov
jbe
xor
dec
mov
lret
sub
aam
inc
das
in
pop
mov
shll
inc
sbb
inc
loopne
add
xor
adc
popf
or
or
loope
sbb
idivl
push
dec
in
mov
inc
xor
out
in
cli
pushf
lea
test
sti
xor
pop
fsts
lods
or
dec
std
aad
or
xchg
outsb
jp
outsl
pop
push
xor
sub
sub
call
testl
jl
pop
xchg
ret
jp
sti
adc
inc
scas
pop
out
loopne
mov
push
or
stc
dec
into
leave
dec
jns
sbbb
adc
test
add
jno
xor
add
and
std
or
popf
mov
add
fcmove
jae
test
dec
das
cmp
out
out
jle
negb
xchg
stos
shl
xchg
jecxz
mov
dec
mov
insb
dec
out
les
ds
cmc
std
mov
xlat
jne
xchg
std
scas
xchg
test
sarb
fs
loop
test
imul
mov
mov
pop
clc
std
fdivs
add
sbb
mov
lahf
iret
outsl
mov
cmpsb
jo
or
jp
clc
jo
out
outsb
and
jge
cmc
sbbb
mov
jl
xor
fwait
jmp
jns
inc
cmpsl
inc
push
sub
cmp
enter
jns
andl
cmp
pop
add
dec
mov
fdivp
dec
push
es
arpl
add
sub
dec
mov
push
xchg
stos
aas
ret
jbe
loop
mov
vpshufhw
popf
das
bndstx
xor
imul
pushaw
les
daa
lds
pop
call
es
cmpsb
iret
jl
add
mov
aam
test
mov
add
std
shlb
xchg
in
addr16
fucom
add
jo
mov
repz
sbb
inc
cltd
mov
jnp
pop
jo
pushf
aaa
into
stc
sbb
inc
add
jnp
sahf
test
repz
inc
dec
pop
jb
aaa
push
repnz
imul
adc
loop
adcl
stc
test
adc
cmpsl
xor
fsubrl
fstpt
sti
xchg
shrl
adc
mov
sbb
into
dec
inc
pop
xlat
data16
pop
push
inc
lods
xor
filds
roll
lods
xchg
or
mov
jns
imul
int3
inc
adc
jae
push
push
adc
mov
insb
and
and
sbbl
imull
aad
pop
mov
xchg
inc
and
mov
pop
push
gs
pop
sub
stc
pop
pop
jp
pushf
jnp
add
pop
fsubl
cmp
xchg
mov
mov
fnstsw
int
int
jge
lea
lahf
inc
cld
or
leave
mov
cltd
sub
ja
pop
in
and
dec
lret
das
jne
notb
xchg
mov
scas
cltd
cld
lretw
rolb
mov
inc
inc
mov
mov
iret
inc
cwtl
or
and
push
push
sti
loope
xor
xchg
loopne
push
cmp
inc
lock
jbe
push
mov
and
push
shlb
into
jne
push
jne
int3
dec
and
mov
ja
inc
jbe
aas
in
xor
fldcw
sbbl
and
je
fidivrs
in
cmc
push
sub
push
stos
mov
mov
xor
fisttpl
int3
leave
mov
adc
jl
in
cmpsb
or
mov
mov
fstpl
cmc
rorl
mov
pop
jl
or
iret
xor
jecxz
push
out
cltd
sbbl
sbb
jp
jbe
jge
mov
sbbl
mov
lahf
xor
xchg
mov
cmp
sbb
jae
dec
pusha
test
movsb
or
jle
cmp
push
shrd
xor
sbb
and
mov
ss
mov
push
jmp
out
mov
filds
call
lods
mov
shr
jmp
inc
fiaddl
adc
rcr
pop
mov
cmp
mov
ljmp
lock
stc
arpl
xor
pop
or
imul
lret
pop
cmp
mov
xor
cmp
fldenv
push
cli
in
xchg
in
xor
jmp
es
or
sbb
cmpsl
cwtl
jo
movsl
test
xor
ret
mov
push
cmpsl
dec
pop
xchg
sub
outsl
mov
push
xchg
pop
stos
push
aas
out
xor
imull
xlat
daa
lds
lcall
loopne
and
rcll
or
test
adcl
push
pushf
mov
sub
mov
mov
les
lret
mov
mov
ret
dec
xor
int3
arpl
out
fdiv
por
xlat
mov
bound
add
mov
xor
or
lret
cmc
push
push
adc
negl
cli
xchg
ret
in
imul
je
cmp
in
repz
popf
dec
sbb
call
in
repz
adc
ja
insl
xor
adc
jno
popf
stc
mov
pop
clc
inc
xchg
pusha
movsl
mov
dec
pusha
or
jp
jge
push
rcrl
int
loopne
xlat
test
cmp
rol
or
data16
lods
dec
fcmovnb
pop
mov
das
movsl
popfw
imul
fs
add
mov
sbb
out
jns
mov
mov
ljmp
jecxz
sahf
fisubrs
inc
xlat
movsb
cld
test
daa
in
iret
lcall
fildll
jle
pop
cmpsb
cmpsl
arpl
stos
jne
negl
sub
fadd
scas
pop
sub
mov
std
or
xchg
adc
xchg
pop
adc
pop
mov
pop
jo
push
inc
div
cmp
cmp
add
cmp
aad
inc
jns
add
pop
cmpsb
sub
aaa
fwait
cmp
cltd
cwtl
movl
fildll
das
sbb
mov
inc
pop
sbb
dec
fisubl
aaa
pusha
loop
jp
ret
mov
mov
or
ja
and
mov
mov
inc
call
and
pushf
leave
push
push
out
fsubrs
js
addr16
sbb
and
inc
dec
pop
dec
mov
pop
pop
add
enter
xor
je
dec
xchg
test
arpl
popa
xor
pusha
ja
cmp
lret
ja
sbb
ja
or
pop
nopl
mov
int3
int3
enter
mov
xor
xchg
pushf
and
fimuls
mov
sbb
sub
inc
jmp
pop
sahf
inc
push
xor
xchg
and
bound
std
js
fwait
mov
aaa
das
inc
cmp
je
into
jl
setle
test
mov
imul
aam
movsb
stos
pop
lock
sbb
dec
push
nop
ja
ret
lock
adc
xchg
sub
lahf
dec
jg
mov
push
push
xchg
es
and
mov
hlt
add
out
cmp
pushf
mov
mov
push
aam
dec
test
adc
icebp
adc
loop
adc
das
adc
adc
mov
mov
jg
mov
jg
in
push
es
test
ret
jg
les
push
fiaddl
setp
or
flds
hlt
adc
jmp
bound
add
adc
test
xchg
shl
es
push
cltd
cmpsl
inc
and
cmp
push
pop
mov
loope
mov
cmp
icebp
adc
pushf
cs
icebp
jnp
loopne
loope
mov
dec
aaa
mov
imulb
cmpsl
cs
add
mov
fcoml
xlat
xorl
nop
push
jo
hlt
dec
or
sub
fxch
daa
lret
clc
in
insl
mov
les
mov
pop
xlat
sbb
aad
enter
pop
push
xchg
jnp
sub
and
out
jb
mov
xor
int3
push
and
xchg
inc
xor
dec
add
xor
fisttps
leave
and
stos
aaa
stos
adc
xchg
out
mov
cmpsb
cmc
les
or
int3
push
stos
fs
cli
xchg
inc
xchg
lds
movsb
fwait
xor
bound
daa
sbb
adc
xor
jge
mov
scas
xchg
sub
mov
in
outsl
and
xor
fucomip
mov
repz
aas
sbbb
loope
and
in
stos
dec
mov
dec
mov
frstor
mov
cmp
xor
es
sub
push
pop
shl
sub
iret
push
jmp
ds
imul
add
lret
cli
mov
test
mov
sub
sahf
push
shll
fs
insl
mov
jp
sbbl
cmpsl
out
push
xchg
mov
outsb
cmp
pop
je
lret
jns
cmp
les
insb
mov
mov
inc
push
add
adc
push
xchg
or
rcll
test
jmp
mov
imul
cwtl
test
and
hlt
adc
jle
mull
lret
cmp
in
push
aaa
or
sub
push
jg
xchg
mov
jl
outsl
cli
and
mov
or
adc
jnp
xchg
xor
push
jnp
mov
jg
sub
pop
inc
xlat
mov
jg
inc
es
ljmp
sbb
mov
test
mov
out
orb
cmp
inc
or
fcoml
rol
jne
push
shrb
push
push
dec
pop
inc
inc
bound
pop
xchg
in
jns
lds
lods
idivb
sbbb
xchg
xor
fistl
jmp
imul
sbb
rcll
sbb
addr16
pop
inc
aaa
sub
sbb
or
test
ret
sbb
cmc
push
das
clc
or
mov
int
ja
adcb
lds
data16
lahf
push
pop
dec
mov
incb
clc
cld
scas
jo
out
sahf
cmpsl
mov
jnp
and
repz
ja
in
push
test
dec
lock
loop
repz
aaa
xchg
arpl
or
ret
mov
sahf
fsubp
pop
jmp
ja
mov
push
fsubl
adc
cmpsb
lret
push
test
jge
enter
fbld
pop
andl
add
inc
sub
icebp
stos
ret
aad
jp
or
sbb
pushf
sub
cld
hlt
into
in
bt
xchg
fsubrl
cmp
adc
movsb
hlt
adc
dec
jecxz
jne
out
cmpsl
jp
xor
std
pop
mov
push
pop
rcll
in
pop
jecxz
loop
lret
push
rclb
adc
and
push
push
cld
lahf
mov
adc
out
icebp
inc
popa
sub
insb
shl
testb
incl
dec
cmp
loopw
sub
xor
xor
jns
pushf
and
jmp
aas
pop
cld
cld
mov
push
push
arpl
addl
cmpl
xor
add
mov
cltd
xor
aad
andl
inc
dec
cli
test
push
movsb
adc
bound
cmc
jo
cmp
pop
js
xchg
and
jge
lret
in
xchg
jge
outsl
arpl
or
je
sub
pushf
xor
or
out
jne
icebp
xchg
pop
scas
adc
or
add
test
insl
repz
lds
push
mov
xchg
xchg
mov
dec
jp
mov
shl
mov
inc
cld
sar
sbb
lret
psadbw
loopne
push
das
icebp
rol
and
in
push
rorl
dec
ja
js
dec
lods
xchg
es
aad
pop
negb
add
stos
test
pop
sar
insl
in
mov
cmp
notl
or
cld
ret
jl
xchg
adc
enter
adc
cmpsb
pop
sbb
push
cmp
xchg
sub
xchg
add
js
scas
ret
movsl
jge
push
movsb
movb
loop
and
jo
lods
inc
jbe
sbb
mov
add
xor
out
mov
in
and
jbe
xor
mov
scas
test
xor
lods
int3
into
mov
in
push
jo
xadd
jge
xchg
test
sbb
sbb
jle
addl
jecxz
int
jle
outsb
std
iret
arpl
dec
pop
imull
adc
dec
dec
add
adc
movsb
and
stos
inc
imul
test
stc
enter
pop
fs
xchg
cmp
lahf
sub
daa
mov
dec
cmp
dec
fcomi
jae
fisubl
lret
out
insl
pushf
aas
inc
ljmp
jb
mov
push
mov
jecxz
push
rcll
sbb
sbb
mov
dec
adc
aam
fidivrs
inc
stos
dec
mov
and
loope
fldt
or
jmp
or
sub
push
int3
xchg
cmp
lods
adc
pop
in
test
sbb
in
pop
ds
cmp
ret
insl
sbb
shrb
adc
sarl
popf
sbb
mov
dec
stos
andl
jns
repz
mov
and
test
sub
daa
sbb
fimuls
pop
or
fcmovb
add
jmp
and
aam
in
inc
fwait
shrl
and
add
or
mov
pusha
adc
mov
sbb
push
jb
jae
daa
dec
std
xor
pop
inc
sub
sbb
adc
rcr
daa
xchg
mov
loope
push
and
insl
scas
and
roll
ja
jns
lret
bound
call
ljmp
rol
icebp
jb
fildl
jno
shll
add
shrl
cmp
test
faddl
xor
sti
pop
xor
pop
imulb
sub
add
jne
and
jo
inc
icebp
mov
mov
pop
pop
and
loop
add
inc
sub
mov
xor
sub
xchg
in
jo
adc
mov
push
cmpsb
xchg
cmpsl
mov
mulb
aam
mov
lahf
stos
adc
jbe
movsb
cmp
sub
dec
pop
or
shlb
jbe
pop
xor
dec
dec
das
mov
shl
add
dec
cmpsb
addb
mov
stos
insb
inc
fnstenv
xchg
cmp
nop
mov
stc
cmp
and
jno
xchg
xchg
dec
and
inc
in
hlt
xlat
inc
aas
push
adc
lods
sub
pop
push
jbe
xor
sbb
xor
outsl
jns
orb
imul
sahf
adc
and
bound
fisttpll
test
cmpsl
lret
mov
inc
loopne
bound
inc
pop
jbe
pusha
ljmp
shlb
pop
adc
cmp
inc
pop
test
out
or
js
mov
int
xor
test
jmp
sub
or
movsb
cld
into
nop
call
cld
sahf
aas
mov
push
sbb
ret
sub
jbe
dec
push
fwait
in
jb
loopne
rcr
adc
sub
sub
jne
fnsave
and
lods
xor
xor
stos
shlb
daa
pop
cltd
jmp
hlt
push
mov
imulb
insb
fnsave
pop
int3
sub
and
mov
add
sbb
jnp
dec
add
aam
test
jp
push
lods
call
mov
les
dec
insl
pcmpgtd
je
aam
jp
jns
adc
adc
ret
pop
movsb
sbb
cmpsb
push
dec
add
push
or
out
mov
int
movsl
js
out
je
and
sub
dec
loopne
xlat
imul
sbb
sti
andb
pop
cmp
call
push
fcomip
jb
add
fdivrs
or
inc
xchg
sub
inc
sarb
daa
push
xor
cmc
add
or
cpuid
leave
test
pop
out
push
jnp
mov
rorb
xchg
gs
push
fwait
jb
cmp
jl
lret
cmp
add
mov
stos
fists
jg
aaa
mov
pop
push
subl
inc
push
jno
mov
cmpsl
mov
add
adc
addb
mov
pop
mov
inc
xchg
pop
insb
jle
out
lcall
lcall
testl
or
or
iret
jge
push
jbe
jp
push
mov
sbbl
xchg
aaa
sbb
cmpsl
dec
into
lcall
pop
mov
cltd
pop
dec
pop
push
mov
loop
fisttpll
mov
pop
lret
add
andl
push
ss
push
das
mov
inc
push
inc
sti
fwait
out
mov
sbb
jno
ljmp
push
repnz
sbb
cltd
test
jge
push
and
stos
scas
test
leave
xor
les
stos
movsl
mov
in
in
and
dec
push
jmp
xor
dec
nop
jg
mov
jg
lahf
xchg
cli
adc
adcb
loope
xchg
es
in
xchg
and
cmp
jl
pop
lahf
jmp
in
dec
pop
cmp
hlt
mov
adc
or
or
mov
push
pop
into
out
cld
aad
push
imul
xchg
jno
lret
pop
add
sbb
mov
inc
sti
and
sub
dec
aaa
mov
test
fldcw
filds
imul
sbb
jno
mov
mov
jno
rol
cmpsb
jb
jmp
jp
jmp
mov
call
in
rorl
inc
push
add
pop
jae
repnz
fmuls
pop
gs
cli
jne
and
xchg
and
pop
or
lahf
xchg
xor
decl
pop
imul
outsb
push
xchg
mov
jb
inc
in
out
lds
mov
add
sbb
or
outsb
adc
xlat
in
cli
adcl
fucomi
jbe
pop
std
ss
cmp
ja
fsubr
cmpsl
je
mov
pusha
adc
inc
std
mov
mov
mov
arpl
movb
dec
sbb
int3
lret
test
clc
jmp
pop
lcall
push
inc
or
sbb
in
jge
push
in
pop
cmp
scas
test
inc
inc
xlat
ja
decb
sbbl
icebp
jae
mov
mov
dec
pop
in
cmp
sbb
fwait
cmpb
movsl
sbb
pop
shlb
in
mov
lcall
inc
lret
mov
inc
jb
pop
mov
div
les
pusha
cmp
fwait
mov
mov
adc
in
add
cltd
stos
dec
add
xor
xlat
out
addr16
xor
xchg
jae
js
loopne
inc
pop
xchg
lods
stc
movsl
loop
sbb
lock
lock
jo
push
jmp
cmpsl
xchg
jg
adc
jge
in
int3
pop
out
jmp
test
xchg
mov
in
add
or
ds
mov
jns
icebp
mov
push
hlt
andl
jg
pushf
mov
inc
movsl
inc
pop
mov
mov
add
iret
xor
cmp
add
fadds
jno
loopne
jns
jno
loope
leave
sbb
imul
add
addr16
sub
adcb
sub
lds
rcll
fdivrs
mov
lods
jl
jg
lret
and
or
jns
jbe
add
and
mov
push
inc
cmp
xchg
jae
mov
and
shl
in
imul
mov
cmp
and
push
cs
cmp
sarl
xchg
test
jnp
pop
in
push
jle
and
pop
mov
ret
push
loopne
inc
popa
adc
lcall
daa
pop
testl
xchg
inc
mov
into
fistps
mov
add
adc
mov
stos
dec
xor
jbe
add
adc
sahf
cmp
push
in
push
and
scas
push
fdivrs
xchg
lcall
rclb
test
pop
xor
lea
dec
dec
sbb
xchg
ret
pop
ret
sub
sub
cmp
mov
pusha
lret
inc
mov
andb
cmpl
fstpl
and
inc
leave
sbb
ljmp
ficoml
lahf
fildl
es
pop
movsb
push
nop
lea
aaa
lea
pop
in
mov
xchg
movsl
stos
xor
jno
mov
out
inc
inc
stc
nop
das
ret
movsb
jb
sub
dec
adc
pop
into
shrb
jno
jns
sbb
jb
push
mov
in
das
xlat
pop
mov
iret
jno
aam
lock
data16
ret
in
test
inc
or
or
mov
fimuls
aaa
jo
jb
pop
insb
or
repnz
xchg
popa
or
fsubp
inc
jl
sbb
cmc
in
lea
xchg
js
mov
call
jnp
loopne
sbb
pop
stos
dec
sahf
sub
add
or
ja
lea
int
mov
ficoms
cmp
movsb
insl
gs
aam
fdivp
mov
adc
dec
es
cmc
jb
sbb
js
lock
mov
inc
test
pushf
mov
pop
cmp
xchg
jbe
add
lods
inc
rcll
add
sbb
inc
lock
and
rcrb
imul
mov
aaa
inc
sub
roll
fnsave
sbbl
adc
filds
jno
es
jg
cmpsb
fimull
fs
xchg
test
leave
xor
xchg
mov
push
pop
xacquire
sub
jns
dec
lahf
insb
or
xchg
push
pushf
lahf
cltd
and
in
aad
pop
enter
cmp
adc
rcll
in
sbb
popa
pop
xchg
andl
cmpsl
adc
fxch
stos
in
fs
adc
add
inc
push
loope
call
popa
repz
imul
add
jle
sub
cld
add
aad
push
lds
and
lock
fs
xchg
xor
ret
dec
stos
xchg
scas
fsubl
push
and
mov
jnp
cld
addb
sar
jg
andb
and
sub
int3
xchg
out
ret
sbb
mov
imull
insb
xchg
xchg
enter
mov
jnp
jg
cmc
cmp
test
add
mov
cmc
mov
sbb
pop
sbb
xor
repnz
cmp
cmc
cli
push
inc
stos
push
mov
push
fldt
lea
fcmovu
sbb
stos
jle
mov
or
mov
push
clc
or
out
cli
inc
push
out
sbb
push
jnp
jno
lahf
adc
sti
push
mov
sbb
imul
mov
sub
mov
adc
out
jb
sbb
loopne,pt
int3
or
pop
mov
pop
push
xor
mov
mov
rol
fmull
scas
mov
jle
int
fcompl
mov
pop
in
loop
arpl
mov
lods
in
test
push
dec
mov
lahf
and
lcall
mov
mov
or
push
mov
cmp
push
mov
adc
fwait
out
js
mov
jle
icebp
ja
and
push
pop
mov
mov
jge
aam
test
xor
lahf
and
mov
stc
pop
test
test
and
and
mov
shl
mov
jo
loop
add
ret
and
mov
sub
adc
jmp
dec
xor
push
jo
clc
cli
or
repz
cmp
sub
add
xor
xchg
mov
fsubl
pop
sub
xorl
js
mov
sbb
int3
inc
mov
add
xchg
outsl
daa
cs
decb
push
aam
aaa
jge
lret
das
cltd
sbb
or
ja
sbb
inc
mov
push
or
push
sahf
xor
xchg
fistl
clc
sbb
and
in
test
push
mov
cmp
fs
loopne
pusha
mov
dec
iretw
xor
xchg
and
add
xchg
test
mov
sbb
loope
dec
mov
xlat
lea
popf
mov
pop
xchg
cmp
aad
aad
push
inc
mov
cmp
fninit
dec
or
cmp
push
add
iret
icebp
mov
push
loop
push
mov
jl
in
xchg
inc
ret
mov
adc
dec
and
inc
fcoml
mov
insb
scas
ret
add
jne
les
stos
popa
add
mov
or
adc
jmp
push
adcb
mov
adc
mov
jg
xchg
pop
cmp
jne
into
addr16
shlb
jp
pop
mov
dec
sti
adc
sub
cmp
inc
pop
repz
rcrb
cmp
test
popf
hlt
lret
fwait
jle
xchg
sti
pop
add
aas
xor
mov
mov
inc
push
pop
xchg
shrb
test
pop
jecxz
popf
adc
rcrl
mov
push
cmc
mov
push
aas
jp
pop
xor
pop
ret
jo
lahf
push
push
mov
icebp
cmc
leave
leave
test
sub
mov
pop
lock
pop
pop
cmp
fst
sar
sti
stos
add
cmp
xor
mov
out
ljmp
add
ds
push
push
inc
daa
shlb
fucomi
xorl
call
cmp
lret
aas
out
push
push
leave
stos
stos
xor
gs
mov
add
gs
sub
xchg
mov
out
inc
dec
add
gs
inc
fs
xlat
jmp
lahf
jge
out
shrb
icebp
sbb
aam
pop
add
test
orb
jecxz
rcrl
mov
jo
insb
add
imul
and
test
mov
xchg
sub
loope
mov
mov
push
mov
pushf
ja
xchg
roll
add
cmp
or
and
lods
cmp
inc
fpatan
jmp
inc
fcomps
xor
jg
sbb
xchg
sbb
mov
loope
mov
pop
inc
stc
addr16
fists
xchg
xor
gs
sub
cltd
xchg
cltd
or
testl
fwait
inc
xchg
sub
pop
out
push
mov
into
test
mov
dec
ja
jne
jae
mov
ja
aas
sar
stc
aad
dec
sub
add
mov
cmp
push
cmpsb
jo
popa
movl
repnz
push
inc
fmull
rcrl
loopne
lret
xor
popa
push
scas
fisttpl
es
cmp
inc
mov
js
test
rcl
stc
out
pop
adc
decb
icebp
mov
ficompl
cmp
cmpsl
jns
and
outsb
sbb
push
mov
add
data16
popf
jle
lret
ljmp
lods
jp
outsl
add
data16
pop
sbb
inc
and
pop
inc
xchg
js
dec
leave
push
add
or
and
and
cmp
aad
xchg
mov
push
icebp
daa
mov
or
lea
mov
mov
or
or
mov
push
jae
dec
mov
pop
xor
je
pop
das
add
stc
lds
mov
mov
push
or
push
push
jecxz
addr16
test
sbb
ja
mov
aad
hlt
jns
scas
scas
test
mulb
cwtl
lret
pop
pop
or
js
sub
pop
jbe
ror
dec
pop
inc
mov
xor
xchg
xor
jne
or
pop
ret
adc
lcall
jge
add
fcoms
scas
lret
inc
mov
pop
out
stos
shl
push
add
mov
cmpsl
and
fs
test
repz
test
ret
jbe
iret
xchg
cmpsb
xchg
sbb
ds
xchg
pop
jbe
inc
arpl
mov
adc
mov
mov
adc
adc
nop
ja
ljmp
pop
pop
inc
loop
cwtl
sti
sub
xchg
or
add
jl
out
push
fdivrl
into
stos
xor
pop
movsb
sub
xchg
add
cld
pop
jbe
arpl
and
sbb
inc
push
movsl
jnp
sbb
xor
add
enter
pop
pop
mov
push
sub
test
in
sub
push
cmp
mov
or
jae
sub
or
cwtl
dec
movsl
push
aaa
iret
xchg
xchg
sub
push
shlb
int3
sti
xor
xchg
push
shlb
mov
or
sub
or
jg
movsb
bound
push
iret
mov
mov
out
push
xchg
dec
mov
je
dec
out
test
mov
push
ja
hlt
push
mov
add
pop
test
sbb
jo
jle
cmp
add
stos
or
sbb
sbb
rolb
data16
stos
dec
cmp
xor
nop
xor
pop
hlt
pop
sti
pop
in
inc
jle
xchg
jns
push
stos
loopne
or
scas
rorl
lods
in
push
push
fmull
scas
xorl
int3
jp
js
test
decb
hlt
in
mov
fimull
mov
shrb
mov
repz
add
int
out
inc
fdivrs
inc
jmp
punpckhdq
insl
cmp
adc
lret
adc
xlat
jo
mov
frstor
xchg
push
cmp
dec
lods
pop
mov
pop
cwtl
lods
mov
xchg
adc
inc
repnz
pop
pop
cwtl
dec
int
and
xchg
inc
fcom
dec
mov
sbb
daa
jle
add
xchg
sub
add
and
push
movsl
dec
dec
lea
push
push
push
or
fs
cmp
xor
cmp
push
push
or
adc
and
cmp
in
mov
popl
inc
lret
lock
icebp
sarw
xchg
stc
mov
mov
insl
shl
das
lcall
cli
cmp
and
xchg
sbb
lods
mov
add
dec
mov
pop
lock
mov
mov
lea
test
push
jbe
jecxz
or
aas
ss
outsb
add
sub
inc
inc
stos
repz
jmp
arpl
lcall
dec
movsb
test
xchg
test
lret
das
mov
jnp
mov
imul
in
xchg
cld
sbb
xor
lahf
rclb
or
fs
pop
sbb
or
jmp
mov
push
cltd
xor
divl
insl
xchg
loop
cmp
sbb
mov
or
push
stos
xor
fsubrs
loopne
adc
inc
testb
dec
adc
jnp
andb
mov
adc
mov
mov
dec
cs
cmc
and
enter
mov
fwait
shl
notl
sub
rorb
push
test
ds
movsl
stos
mov
adc
mov
mov
aas
nop
cmpsl
pop
xchg
mov
pop
cmc
pop
int
addr16
jl
xchg
inc
mov
push
jno
andb
push
outsl
jnp
dec
cmpsl
sub
mov
cmp
mov
push
sbb
jae
sub
pushf
cltd
pop
add
xchg
shl
sub
gs
shlb
mov
jbe
jmp
inc
fisubs
lock
ja
lcall
add
mov
andl
sbb
cld
mov
push
jo
cmp
mov
pop
dec
pop
mov
or
push
test
mov
ja
dec
fimuls
add
push
push
xlat
or
jmp
std
fsubr
mov
xor
jo
jno
scas
mov
mov
loop
andb
cld
fdiv
sub
jp
iret
stos
rorl
add
bound
ljmp
cmp
add
inc
push
fldcw
fdivrp
rclb
dec
and
adc
clc
daa
xchg
push
test
lret
in
sbb
popf
sub
mov
xchg
jp
dec
add
sub
outsl
jnp
dec
sub
dec
mov
lcall
xchg
pop
loopne
jns
aas
push
pop
add
xorl
push
sbbl
mov
mov
scas
loopne
enter
mov
rcll
jnp
adc
jg
out
loop
stc
push
sub
das
push
push
dec
loop
sti
mov
test
sub
inc
mov
lods
inc
and
xchg
outsb
call
sub
imull
mov
mov
sbb
js
in
adc
add
fwait
fs
sbb
ret
fbld
popa
cmp
push
fwait
int3
andb
fiadds
xchg
push
popf
push
mov
xchg
in
jle
es
push
xor
xchg
xchg
lods
cmpsl
out
push
xchg
jae
shrl
jae
movsb
mov
es
inc
in
ljmp
sub
pop
pop
lods
frstor
je
inc
add
ficomps
imul
stc
fs
xchg
arpl
dec
mov
pop
push
leave
or
pop
pop
xchg
or
and
leave
fwait
jg
mov
mov
lcall
lcall
adc
pop
cld
sbb
test
ds
jg
in
jp
xor
loop
xchg
mov
cs
lock
mov
sub
pop
notb
cmpb
jge
dec
xor
xchg
mov
lds
imul
test
push
pop
xchg
test
loop
push
and
in
std
rclb
or
xor
cmpsl
mov
xchg
push
sti
cmpsb
mov
and
aad
dec
int
jmp
mov
shrb
movsl
jbe
andl
jg
cmp
sbb
into
xor
fmul
pop
mov
cmp
lcall
cwtl
es
mov
sbb
xor
vphaddbw
push
or
or
jl
stc
aas
mov
jbe
aad
inc
arpl
ss
addr16
push
sub
xor
inc
repz
ret
jg
pop
pop
or
jae
pop
mov
mov
scas
movsl
das
cmp
cmc
lds
mov
ret
fadds
or
mov
js
push
rcrb
mov
push
pushf
sbbl
ret
push
mov
cltd
insl
mov
mov
ds
and
fldl
mov
dec
pop
cmp
cmp
jns
push
xorl
fsubl
add
aad
ret
mov
mov
aaa
pop
movsb
pop
je
push
cli
pushf
fsubr
cmp
insl
sub
ror
std
jmp
sub
adc
scas
mov
pop
sub
insb
push
jge
cmp
lahf
repz
fsubs
mov
jle
jmp
call
push
jp
cltd
mov
lock
or
jle
sbbl
xorb
sub
push
scas
inc
xlat
mov
adc
or
rcrl
in
and
xchg
loop
in
sti
mov
roll
lock
sbb
cmpsl
ret
sub
push
jg
js
adc
pop
mov
inc
cmp
cmp
mov
fwait
pop
mov
andl
pop
mov
mov
push
cld
xor
outsl
imul
sbb
arpl
ret
inc
xchg
pop
inc
mov
insl
mov
xchg
lea
movb
add
xchg
scas
outsl
push
jl
mov
arpl
cmpsb
in
ja
stos
jne
stos
cmc
cmp
jbe
fisubs
test
xchg
inc
cmc
lods
cmp
fistps
mov
fisttpll
cwtl
jbe
in
jno
push
or
out
insl
cmp
xlat
cli
jne
mov
in
test
or
jno
call
jnp
fwait
push
lods
rolb
insb
sub
fmull
dec
mov
jmp
adc
mov
mov
mov
push
inc
insl
mov
data16
mov
add
testb
int
add
aam
push
out
jno
frstor
test
sarb
mov
stos
into
dec
jmp
out
pop
in
fstpt
leave
inc
jmp
mov
pushf
pushf
daa
ljmp
incb
hlt
imul
out
xchg
cmp
sbb
jge
jns
or
ljmp
lock
lahf
in
mov
lahf
pop
outsb
gs
int3
in
outsl
in
test
ret
pop
loope
pop
xchg
sub
test
fcompl
shll
and
lock
scas
test
repnz
std
push
xchg
jle
xchg
push
pop
in
add
push
add
mov
data16
xchg
dec
dec
add
push
enter
stos
popa
mov
cmp
gs
cmp
popa
out
jns
adcl
xchg
scas
ja
fldt
nop
pop
cmc
sqrtps
iret
scas
popa
movsb
push
mov
hlt
pop
and
xor
out
dec
ret
test
push
mov
and
dec
mov
jge
fcomps
xor
mov
ja
mov
adc
inc
pop
add
sbb
jl
sub
shll
dec
mov
cmp
sbbl
in
push
cmpsl
adc
sub
push
jbe
bound
cmp
gs
fs
mov
cltd
xor
cmp
push
ficoms
daa
inc
mov
es
mov
int
add
gs
jns
jmp
sahf
push
ss
shll
cmp
ds
mov
mov
fdivl
gs
shlb
adc
scas
sbb
jnp
sbb
lret
int3
jl
pop
test
or
data16
mov
jb
fwait
imull
lcall
mov
cwtl
in
enter
sti
ljmp
push
xorl
pop
repz
jne
mov
testl
shlb
xor
jge
lret
rcrl
sub
jbe
nop
lret
lods
lret
arpl
xorps
fisubl
js
add
je
call
jns
jo
mov
call
out
push
add
inc
adc
push
jno
mov
or
and
adc
push
fistl
fistl
sub
inc
dec
sub
gs
dec
int3
fnstsw
ss
cmpsl
inc
gs
mov
cs
xor
push
jge
stos
cmp
mov
pop
fiadds
dec
rol
fsub
arpl
jo
adc
sahf
mov
orl
std
aaa
or
daa
pop
out
push
xchg
arpl
aad
inc
push
aaa
cld
pushf
mov
gs
test
pushf
iret
data16
mov
xchg
xor
cltd
pop
insb
inc
or
dec
pop
or
sub
insl
idivb
pop
adc
push
inc
mov
jmp
inc
fistpl
cmc
mov
push
mov
mov
int3
xchg
scas
push
in
inc
fnstcw
hlt
in
mov
dec
shr
inc
out
stos
sub
mov
mov
int
sahf
xchg
pop
mov
cmp
sub
sbb
call
inc
mov
aas
insl
outsb
mov
push
icebp
ret
xchg
fdivrs
popf
cmp
mov
cmp
shlb
movsl
faddl
loop
icebp
lret
movsb
jnp
push
push
and
cli
add
aaa
pop
gs
xor
andb
sub
or
and
xchg
popa
loope
imul
ret
mov
sub
mov
pop
cmc
mov
jge
add
mov
es
movsl
cmp
cli
cwtl
das
ljmp
lret
dec
pop
sub
std
rcrb
jno
and
pop
ljmp
push
xchg
push
xchg
mov
les
sbb
mov
pop
xchg
sub
shll
adcl
jecxz
mov
xchg
pop
test
mov
clc
adc
mov
xchg
push
ss
cmp
pop
jb
bound
stos
cmp
gs
das
movsb
gs
mov
fidivrs
xchg
sbb
fisubrs
mov
mov
loope
cmp
mov
add
outsl
shrl
mov
mov
add
in
test
xor
test
mov
cmp
test
ret
imul
lock
or
xchg
mov
mov
jecxz
inc
add
xchg
xor
out
pushf
xor
mov
mov
loope
fsub
mov
std
repnz
cmpsl
cmpl
lret
imul
dec
cmpsb
mov
sbb
xchg
inc
mov
fldln2
jns
flds
sahf
or
sbbl
jmp
cmp
push
mov
mov
dec
in
test
in
adcl
mov
rcrl
xor
jo
adcl
notb
push
mov
mov
mov
int3
decl
outsb
adc
cs
imul
or
pop
into
nop
gs
lret
cli
sub
fwait
mul
dec
addl
sbb
lods
push
mov
hlt
sub
fs
data16
mov
add
loop
sbb
lret
mov
data16
in
adc
test
int3
cmp
cmp
push
imul
dec
cld
shl
popa
sub
sbb
jb
mov
inc
jnp
cmp
stc
nop
cmp
lcall
xchg
jb
cmp
inc
push
mov
mov
xchg
je
test
testb
inc
arpl
insl
inc
push
cmp
pop
stos
aaa
ret
int3
pop
je
into
insb
roll
inc
lret
es
shrb
imul
cmp
push
or
mov
dec
pusha
lock
repnz
scas
mov
sbb
test
xor
adc
mov
les
adc
jmp
movsb
mov
sarb
mov
push
addr16
sbb
xor
dec
or
aas
push
xor
lret
or
cmp
sub
mov
sbb
nop
stos
in
dec
mov
mov
sarb
out
lcall
and
and
add
mov
xchg
cmpsl
les
xchg
push
mov
int3
pop
and
push
fdivs
test
movsl
push
push
mov
mov
bound
orl
jl
insb
dec
cs
addr16
cmp
xchg
das
mov
test
add
mov
daa
sub
int
imul
adc
lret
cli
test
mov
mov
pusha
push
and
int
out
ja
jl
push
lds
cmp
jmp
push
call
jmp
add
es
fidivrs
ljmp
dec
test
sub
gs
inc
jae
les
lahf
enter
pop
cmpsb
xlat
xchg
shrb
insl
andb
gs
in
insl
fcmove
pop
push
hlt
loopne
pop
sub
scas
jae
push
push
in
movsl
xor
popa
out
pop
mov
mov
ficoml
inc
loope
hlt
pop
scas
mov
push
insl
pop
push
scas
xchg
mov
sub
pop
mov
mov
xchg
inc
xchg
xchg
dec
cld
in
movsl
inc
imul
and
pop
das
mov
mov
in
lret
push
push
mov
or
xor
pop
andb
or
jbe
lods
ljmp
pushf
ret
or
jp
fsts
cli
aaa
jmp
mov
jl
push
adcl
fidivrs
adc
into
push
jns
xchg
into
mov
jle
sub
mov
sbb
insb
xor
test
or
cs
fwait
pop
je
jae
and
pop
cli
or
xchg
xor
cmpsb
jl
sti
mov
inc
dec
mov
sbb
hlt
ret
push
add
arpl
inc
inc
push
subl
jmp
pop
sub
int
sbb
out
mov
popa
sahf
xor
rcrb
inc
fs
pop
fisubrl
int
nop
add
or
shrb
mov
adc
xor
and
call
inc
negl
pushf
mov
push
mov
stc
adc
cwtl
pop
cli
push
sbb
mov
notb
cmc
sbbb
or
xchg
add
add
or
push
mov
mov
add
mov
lret
movsb
pop
jne
cli
cwtl
jns
sub
mov
pop
cmp
aad
mov
mov
pop
lea
mov
pop
mov
and
push
add
popf
insb
mov
jo
popf
jb
fdiv
jb
mov
or
jno
and
sub
or
addb
addr16
es
loopne
fucomi
mov
xchg
insb
mov
inc
testl
add
cld
mov
jg
test
test
test
cmpsl
test
mov
rcrl
mov
call
mulb
inc
pop
loope
sbbl
pusha
shrb
mov
ja
mov
mov
fdivs
test
mul
test
push
adc
sbb
or
ret
je
mov
pushf
stos
rcll
aad
mov
fdivl
mov
inc
and
cli
popf
movsb
jmp
int
jl
loope
mov
jge
dec
jno
jg
ret
shrl
movsl
sti
mov
hlt
fidivl
aam
sub
sbb
pushf
orb
lcall
pop
push
xchg
arpl
push
aad
call
flds
push
pop
test
push
sub
push
mov
in
jle
sbb
and
mov
mov
mov
outsl
lcall
push
scas
loop
loope
jne
pop
lahf
adc
inc
jb
les
mov
int
sub
cltd
icebp
or
push
int3
xor
dec
stos
pop
mov
adc
jbe
xor
data16
mov
in
loopne
mov
lock
and
sbb
in
sub
pop
mov
mov
pop
xchg
mov
dec
aad
leave
xchg
js
push
adc
lcall
push
sbb
cli
add
pop
mov
popl
add
xor
sub
adc
push
adc
dec
sub
push
and
push
mov
daa
and
xchg
iret
lahf
sub
repz
cmp
push
dec
dec
dec
and
ja
es
cmp
mov
push
mov
jns
stc
dec
add
and
idivb
add
jl
arpl
sbb
sar
sbb
cmp
inc
cmc
lods
or
dec
ret
je
add
push
pop
inc
testl
push
inc
cwtl
nop
test
aaa
nop
subb
jbe
add
xchg
push
or
fldl
icebp
jle
mov
xchg
mov
call
cmp
repz
mov
mov
jnp
call
out
add
rclb
aaa
fs
pop
fldt
pop
inc
mov
add
xor
push
push
or
push
aad
out
out
testb
sub
leave
loope
lds
imul
and
pop
stos
pop
rcr
stos
inc
xchg
mov
mov
lahf
dec
gs
xlat
repnz
imul
cwtl
sub
imul
jae
dec
mov
xchg
in
mov
cld
push
dec
sbb
imulb
outsb
into
bound
or
rcrl
and
jp
jns
adc
sbb
adcb
sbb
mov
cld
leave
mov
jecxz
xor
shrb
pop
dec
cmpsl
cmp
lahf
mov
mov
and
mov
push
jp
xor
ret
rep
into
pop
lods
fsubrp
popl
or
mov
adc
dec
movsb
jns
mov
mov
into
decl
lods
cmp
adc
aas
jne
pusha
xchg
rcrb
xchg
sbb
lock
cmp
stos
dec
les
mov
inc
enter
insb
xchg
xor
pop
in
shll
aaa
mov
adc
pop
nop
daa
mov
cmpsl
cmp
iret
mov
or
insl
add
sub
or
imul
inc
push
rolb
xor
and
sub
cmp
out
sahf
cwtl
sbb
dec
mov
sbb
pop
xor
push
sti
inc
push
lods
jno
es
jp
aas
aad
sbb
mov
and
ds
fiaddl
mulb
cmp
sub
bound
cltd
mov
adc
fmull
pushf
mov
jo
enter
pusha
call
shll
call
push
rcl
mov
pop
insb
inc
pop
sbb
jp
insb
cmp
test
popl
push
xchg
and
movsb
sahf
fdivrs
sub
inc
iret
mul
sti
add
loope
sub
pop
insb
and
pop
scas
rcrb
mov
xor
orl
add
stos
lds
adc
sub
pop
push
pop
ret
repz
imul
out
mov
dec
fidivrs
pop
cmp
mov
dec
mov
mov
mov
rclb
xchg
jp
scas
xchg
mov
mov
xor
or
push
aam
sahf
mov
xlat
movsb
int
push
insb
sbb
or
xor
sbb
pushf
push
add
mov
stc
add
lock
adc
shrl
pushl
push
xor
mov
call
sbb
xor
add
pusha
fdiv
sahf
add
call
mov
sub
out
jecxz
dec
loop
arpl
sbb
add
mov
fyl2xp1
cmpsl
sub
adcb
std
addr16
fdivrp
sbb
xchg
mov
cmp
outsb
jle
push
xor
call
xchg
mov
fidivs
lea
in
test
or
mov
movsb
enter
adc
sbb
and
dec
mov
mov
rcll
mov
clc
fs
fsin
das
or
sbb
cmpsl
and
xlat
mov
nop
movsl
addr16
adc
and
bound
sarb
sbb
mov
pop
test
xor
mov
daa
lods
in
push
je
shll
push
outsl
out
js
popf
adc
xchg
fisttpl
sbb
cmp
jle
addl
or
in
or
fdivrs
orl
and
cld
stos
cmp
cmp
xor
test
dec
and
fwait
shrl
mov
jl
or
shrl
clc
xchg
aad
sbb
sub
out
add
lcall
lds
idivl
rcrb
js
arpl
and
pop
adc
push
leave
xchg
aas
cmp
es
xchg
add
test
or
daa
lret
mov
mov
fildll
add
cltd
xor
xchg
sbb
cmp
pop
pop
je
jp
inc
jo
aad
in
xchg
xchg
mov
or
push
mov
cmc
push
lods
mov
imul
outsl
sbb
adc
lret
scas
popf
jb
testl
inc
sbb
push
jne
pop
xchg
das
jnp
test
nop
push
xor
jns
cwtl
add
mov
test
aam
xor
xchg
lahf
jo
mov
in
test
push
or
mov
xor
sarl
sub
cmp
ljmp
andb
lret
xchg
xchg
out
pushf
xchg
jno
mov
out
xchg
sub
mov
lcall
in
scas
mov
pop
das
mov
sbb
push
cmp
clc
pop
in
xor
test
aas
pop
faddp
inc
idiv
sahf
test
les
pop
fsubs
sub
lret
jns
jbe
mov
mov
jb
jne
sbb
outsb
ret
xchg
xor
cmc
jmp
out
imul
jo
add
cmp
or
repnz
out
lea
das
jb
aaa
lret
call
mov
mov
mov
pop
out
add
int3
mov
in
mov
cmpsl
xchg
cmp
push
jns
into
shl
addb
xchg
adc
or
shlb
or
rcr
lock
xor
ss
xor
rorb
cs
stos
or
sahf
jnp
outsb
out
shrl
adc
sub
stos
sbb
push
je
call
push
movsl
jns
xchg
cmp
ret
cmpsl
push
sbb
fs
cmpsb
repz
push
jp
test
xchg
xlat
jbe
nop
mov
sub
jbe
in
into
pop
xor
aad
das
xlat
lods
push
mov
gs
dec
push
jmp
mov
ret
mov
repnz
mov
mov
inc
and
fwait
test
lcall
cmpsb
pop
push
stos
rcl
adc
xor
mov
jbe
or
cli
and
adc
or
and
sbbl
stos
je
jnp
int3
imul
dec
fcomi
mov
dec
out
imul
xorl
fidivrl
or
out
push
pop
adcl
cmp
mov
cmpsb
mov
cmpsb
ds
pop
lcall
and
test
cltd
fcmove
mov
imul
and
test
mov
jb
and
xchg
adc
addr16
scas
in
xor
sub
dec
and
into
jg
xchg
fstpl
insl
mov
or
push
je
outsl
mov
movsl
cmp
vcvtps2dq
sub
push
cmp
xor
dec
xlat
std
pushf
negb
adc
xor
pop
in
cmp
popf
mov
fwait
aas
outsb
add
cmp
testl
xchg
sbb
mov
lcall
and
out
mov
test
mov
xchg
stos
xchg
push
xchg
test
or
lret
pop
je
dec
add
add
sub
xor
lret
je
in
hlt
dec
sub
cmp
int
mov
inc
mov
lea
sbb
push
or
xchg
adc
popf
shlb
mov
xor
and
lret
xchg
lock
sarl
adc
xor
mov
sub
mov
push
inc
insb
add
jge
dec
fmuls
xchg
pop
pop
hlt
or
jnp
loope
daa
outsl
mov
data16
jbe
mov
or
push
data16
sbbl
repz
sbb
sbb
mov
jg
xchg
cmp
pop
lods
ljmp
pushf
repnz
mov
ja
jae
arpl
and
dec
cs
insb
pop
or
sub
test
mov
mov
pushf
xor
jge
popf
pop
push
add
std
mov
mov
fmull
es
adc
mov
in
jns
movl
push
hlt
cwtl
cmp
xchg
xchg
and
sub
orl
rcrb
or
iret
pop
sub
hlt
sarl
hlt
bound
jns
movsb
sti
mov
xor
xlat
xchg
dec
mov
lods
pop
sub
mov
dec
mov
jns
loop
cmp
mov
pop
pop
xchg
dec
xchg
jo
out
rcll
sub
into
fwait
mov
jno
pusha
push
sbb
nop
cmp
pop
xchg
nop
pop
cmpsl
ds
sub
imul
mov
cmpsl
and
xor
and
test
shrl
bswap
and
mov
int
lahf
shl
in
pop
adc
push
pop
jbe
xor
jle
pop
in
xchg
dec
dec
mov
mov
xchg
jmp
out
push
lahf
roll
or
stos
rcr
hlt
bound
sbb
cmp
mov
stos
rcrb
mov
fists
arpl
mov
movsl
fwait
lret
pop
scas
push
ja
test
jno
adc
push
inc
mov
lea
adc
sbb
mov
xchg
stos
jns
sbb
testl
sti
mov
pop
daa
ss
jmp
sbb
inc
les
int
jecxz
push
in
inc
push
daa
mov
int3
aad
and
pop
jge
push
pop
mov
dec
rorl
fisttps
sbbb
push
rorb
bound
insb
jle
pusha
fld
pop
int
pop
sahf
daa
pusha
push
jmp
jmp
ds
inc
scas
popa
cmp
push
jnp
xchg
imul
mov
mov
push
call
pop
rcl
mov
bound
cmpsb
push
jne
fildll
fsubrs
rolb
repz
push
outsl
sub
add
mov
jne
jnp
dec
imul
pop
out
mov
or
daa
pop
xchg
cld
fnsave
sbb
fwait
and
dec
loopne
addb
subl
and
out
sti
adc
in
das
imul
xchg
mov
add
xchg
sub
xchg
xlat
outsb
add
adc
push
ror
aam
insb
lock
pop
into
mov
push
or
sbb
int3
rorl
pop
movsb
sbb
xchg
and
xchg
jmp
les
das
jo
xchg
repz
mov
mov
popf
add
lock
mov
cmp
xlat
xor
push
test
testl
sbb
mov
cli
and
mov
pop
lods
lret
ljmp
movsl
xor
jmp
xchg
fcmovne
fs
jnp
mov
shl
cs
mov
pushf
and
out
movsl
push
sahf
mov
fucomi
cmp
push
jp
test
leave
mov
mov
sbb
push
sub
xor
in
sub
and
mov
stos
sarl
bound
subb
fdivrl
pop
adc
dec
fcomps
aaa
in
repnz
cmp
sbb
jg
test
lods
xchg
bound
inc
fnstcw
push
push
popa
cmpsb
inc
push
pop
xor
cmpsl
int3
dec
addr16
sti
push
adc
mov
loop
pop
repz
pop
test
adc
sahf
out
xchg
js
test
mov
and
lea
or
push
shr
ret
fisttps
rorl
jecxz
call
sbb
or
rclb
mov
sub
es
sbb
movsb
and
sub
sbb
cmp
cltd
add
cli
clc
mov
stc
and
movsl
cmp
call
insl
out
mov
sti
xor
mov
jge
movsl
pop
out
gs
repz
jne
loopne,pt
pushf
fs
leave
lea
mov
imul
adc
sbb
lock
push
add
sub
xchg
or
loope
cmp
mov
in
mov
sub
rclb
or
pushf
aad
mov
or
mov
sub
inc
arpl
cmp
add
idivb
push
std
cmp
mov
loope
xchg
rorb
in
jnp
mov
mov
inc
in
adc
cmpsl
dec
lret
inc
lret
inc
xchg
inc
push
xchg
pusha
mov
repnz
push
into
aas
xor
testl
or
ss
sub
stos
daa
loop
lret
mov
mov
mov
in
push
cmpsb
test
es
ljmp
mov
bndstx
cmc
dec
fisubrs
int3
cmp
and
push
cmp
push
dec
cmc
in
es
dec
leave
inc
inc
cmp
mov
dec
incl
scas
aam
sbb
push
inc
mov
jns
cwtl
das
cld
lcall
fdiv
mov
and
xlat
and
outsb
sub
ret
cmp
fiaddl
sub
add
enter
push
jbe
or
xchg
sub
ss
out
inc
enter
aad
mov
push
add
aam
sbb
push
sub
popa
mov
test
fwait
dec
pop
adc
fucomip
push
cld
or
mov
xchg
enter
repnz
rorb
or
and
aas
push
test
mov
fdivrl
lahf
jbe
popf
pop
out
int3
lcall
iret
jmp
mov
imul
subb
push
xlat
je
sbb
pushf
fs
xsha256
cmpsb
push
dec
pop
cld
jp
ffreep
or
clc
clc
je
movsl
shrb
rcr
push
mov
cmp
xor
dec
jle
daa
mov
sarb
inc
sub
loopne
rol
outsb
pop
cmp
pop
rcl
push
add
cltd
test
test
aaa
sub
adc
gs
lods
fsubrl
adc
jne
jmp
pushf
hlt
add
xor
ret
sti
rorb
leave
push
test
les
pop
lahf
jge
mov
xor
or
ds
cmp
push
in
push
push
aad
lods
jo
lods
xor
dec
dec
in
or
dec
insl
rclb
clc
lret
shl
cld
fsts
and
sub
jno
dec
sub
xchg
cmp
lret
sarl
es
inc
aad
add
sub
push
jecxz
mov
cmp
daa
cmpsl
mov
pop
dec
cmp
out
cmpsb
dec
testl
aam
loop
dec
cltd
sub
sbb
insb
js
lahf
test
out
sub
call
sbb
cmp
adc
fwait
mov
scas
pop
rcr
enter
scas
loope
mov
dec
adc
fildll
loop
mov
iret
lods
and
sub
fidivs
cmp
stc
aam
movsb
add
inc
or
push
jo
or
sarb
rcrb
icebp
outsb
add
cmp
mov
iret
enter
jbe
rol
add
or
imul
pop
ss
adc
sbb
add
adc
movsb
sti
fcoms
adc
cmp
int3
mov
clc
jae
insb
sub
test
xor
jnp
int
sarl
mov
or
push
mov
sub
push
mov
sbb
sub
or
aaa
jmp
cmpb
call
call
add
push
jne
xchg
adc
clc
mov
stos
cmp
or
or
mov
ss
aas
cli
jne
xor
pop
inc
mov
adc
push
jnp
ret
pushf
fsubrs
xchg
add
or
mov
nop
call
add
pop
sub
pop
mov
sahf
lock
push
fnstcw
fwait
movsb
lods
in
inc
push
shll
mov
jae
mov
adc
sbb
sbb
pop
xor
imul
imul
scas
sbb
out
sbbl
pop
push
out
mov
test
inc
dec
inc
cmpsl
lret
push
call
mov
cmp
in
call
or
loope
and
nop
clc
mov
out
inc
sbb
sbbl
sub
fstpl
sbb
cli
jge
outsl
test
lcall
loopne
movsb
mov
mov
jo
mov
fsubr
pop
mov
fstp
ds
pop
jmp
imul
xchg
das
add
sbb
jns
insb
pop
xchg
inc
jae
fldl
push
or
fs
or
aaa
jae
movsb
lods
xor
in
and
sub
mov
jno
cmc
adc
sbb
mov
inc
aad
ss
lret
ret
cmp
add
aas
imul
jmp
mov
pushl
inc
imul
das
jnp
scas
mov
xchg
sbb
lret
adc
test
js
pop
fwait
and
mov
add
cwtl
notl
movsb
into
lea
imul
jae
mov
push
jl
std
jl
lret
mov
cld
cmpsb
test
sbbb
movaps
mov
bswap
out
xchg
xchg
or
push
cmp
out
test
push
gs
or
js
jae
mov
dec
stos
jmp
jns
adc
xchg
mov
xchg
xchg
dec
adc
and
inc
sbb
fwait
inc
aaa
fstl
and
xor
pushl
adc
push
and
rcr
shrl
inc
test
shrl
jg
mov
jle
mov
push
pop
adc
mov
gs
mov
add
fadds
add
jmp
adc
push
insl
cmc
js
std
popf
repnz
inc
or
adc
push
sbb
push
pusha
mov
shrb
aam
test
pop
std
sbb
insb
das
inc
sahf
pop
nop
mov
mov
sbb
xor
push
pop
loop
std
mov
mov
mov
jmp
test
add
std
fs
and
adcl
dec
push
insb
int3
or
stc
dec
pop
out
jp
jb
outsl
pop
jmp
je
sub
sbb
mov
pop
fstl
mov
das
mov
fsubrl
push
sub
testl
mov
test
sub
sbb
enter
pop
pusha
enter
rclb
sbb
testb
movsl
inc
or
sbb
iret
scas
arpl
lcall
cwtl
dec
rcr
mov
jo
scas
insl
shrl
mov
adc
hlt
loope
adc
dec
mov
sarl
daa
push
cmp
or
cmp
jae
sub
adcb
dec
in
xchg
outsb
js
lcall
and
ret
pop
shrb
mov
push
add
mov
cltd
cmp
in
push
adc
mov
mov
cmc
jnp
es
ds
arpl
pop
dec
loopne
cmpsb
jp
mov
fdivs
adc
mov
push
bound
cmc
mov
dec
icebp
dec
inc
arpl
aam
inc
xor
mov
fisubrs
outsb
push
and
sahf
fsubrs
push
inc
mov
mov
or
movsl
push
jge
push
adc
dec
cmp
stos
imul
xchg
push
stos
cmp
popa
aam
out
or
pop
add
mov
fmul
and
lea
pushf
mov
mov
pop
jno
cwtl
mov
inc
shrl
jbe
pop
pop
push
stos
mov
test
fidivrs
fstpt
inc
shll
pushf
out
pusha
idivl
jmp
dec
jb
hlt
or
and
loope
jae
lret
icebp
aas
xchg
cmp
testb
pop
sti
inc
mov
mov
and
std
fisubrl
orb
and
out
pop
popf
pop
outsb
push
jae
add
icebp
mov
or
fs
xchg
xchg
stos
scas
ss
out
xchg
shl
jne
lret
daa
leave
xor
rolb
mov
pop
adc
popa
cld
outsb
inc
in
inc
outsl
inc
fiaddl
in
inc
push
out
sbb
dec
cld
lahf
xor
push
cs
sbb
jnp
aaa
push
loope
dec
cli
adc
dec
cwtl
mov
push
out
xchg
mov
cltd
mov
jle
lds
cmp
out
lods
jmp
adc
lret
mov
cmc
jle
sbb
sbb
in
lea
ret
inc
mov
xor
into
enter
xor
xchg
and
movsl
mov
adcl
push
add
and
or
cmp
ja
test
arpl
xor
xor
arpl
iret
xor
fistps
lods
xor
sbb
sbb
cmp
lods
pushf
or
inc
push
je
jg
dec
add
adc
add
xor
mov
and
pusha
cmp
xchg
cmpsl
cmpsb
mov
out
add
cmp
aaa
and
fists
repnz
outsb
fwait
aam
int
pusha
jp
xchg
les
cmp
add
idivl
jmp
push
ljmp
inc
in
pop
cmpsb
or
out
mov
xchg
mov
loope
hlt
xchg
mov
and
inc
call
cmp
test
cmp
fwait
sahf
push
testb
xchg
push
lahf
xchg
pop
shll
xlat
xor
inc
pop
popf
js
cmpsl
out
pop
cmpsb
cmp
mov
cmp
lret
test
iret
inc
mov
jle
cltd
aam
cld
cld
sbb
daa
sbb
loopne
lret
or
ja
sbb
or
cltd
dec
push
int3
mov
movsb
mov
inc
test
inc
ljmp
je
outsb
test
cmpsb
leave
cwtl
and
ljmp
mov
addl
scas
loope
mov
shlb
xor
test
mov
rolb
fimull
push
adc
fdiv
xor
inc
adc
push
cs
or
loope
inc
lret
fisubl
xor
or
mov
mov
orb
xchg
mov
sbb
inc
popf
cld
add
push
mov
leave
push
push
iret
pop
jae
xor
sahf
add
mov
push
insb
andl
in
xchg
stos
and
jb
mov
xlat
bound
mov
and
insb
xchg
aas
push
lds
sub
icebp
sbbb
lock
push
adc
jno
or
push
mov
or
push
cli
xchg
xchg
xchg
mov
mov
pop
clc
sbb
rcl
mov
mov
jo
ret
sbb
fnstenv
xor
lcall
cmpsb
es
loopne
out
aam
incb
es
cmp
cmp
xchg
push
sub
mov
ret
mov
adc
cmpsl
pusha
cltd
ret
mov
repnz
xor
jmp
lret
dec
arpl
jae
adc
jl
mov
pop
lea
lea
cli
lds
mov
mov
mov
dec
lahf
mov
dec
es
jmp
lret
out
dec
adc
imul
outsl
push
adc
frstor
out
mov
cmp
cmp
sbb
sahf
sub
lahf
xchg
mov
clc
xbegin
pop
lahf
sub
mov
cltd
stos
popf
stc
push
arpl
adc
stos
mov
das
cwtl
cli
push
sbb
mov
cs
push
jns
pop
sahf
adc
xor
push
xchg
cld
push
mov
adc
mov
repnz
dec
cmpsb
out
mov
aas
push
adc
mov
gs
xchg
outsb
loopne
cltd
add
add
les
ret
jbe
aad
insb
dec
mov
adc
xor
daa
or
jae
loop
ljmp
out
xor
and
jge
lds
imul
adc
push
sbb
add
sub
mov
out
cmpsb
outsb
icebp
in
mov
jp
push
add
mulb
jae
fs
cmpsl
std
in
ret
subl
add
mov
add
xchg
lahf
insb
sub
lea
faddl
repz
stc
sbb
in
mov
add
ljmp
sbb
addr16
mov
sub
pop
jo
push
sbb
push
sbb
ret
or
mov
push
jb
lods
in
push
xor
mov
popf
shrb
das
cmp
cmp
mov
and
popf
outsl
outsl
xchg
fstl
lock
add
cmpsb
inc
and
fiaddl
push
call
aaa
outsl
inc
xlat
enter
jmp
xor
push
sarb
mov
jg
adc
xchg
movsb
add
je
push
mov
sarb
mov
loope
in
add
sbb
adc
or
mov
or
mov
iret
loop
sub
pop
mov
push
out
imul
sub
ljmp
lcall
pusha
std
push
movsb
push
lock
dec
fldt
dec
xchg
pop
xor
int3
mov
ret
jp
rcl
cmpsb
sbb
or
pushf
jle
lret
cmp
shll
les
loope
pop
xor
aas
inc
enter
dec
hlt
mov
and
xchg
outsl
fmuls
testb
dec
or
lret
sub
sbb
jne
aaa
outsb
arpl
add
test
push
jbe
mov
scas
jge
iret
sahf
jle
xor
adc
push
jmp
nop
lahf
push
popf
cmpsl
jne
fmuls
stos
jno
lods
xchg
cmp
call
bound
jae
int3
jge
out
cmp
fcomp
sub
mov
scas
mov
cwtl
mov
repz
or
cmp
sub
dec
dec
mov
mov
mov
daa
cmp
test
add
push
daa
jmp
mov
xor
mov
cmp
rolb
cmp
and
loope
clc
lock
inc
ja
mov
cmpsb
adc
dec
das
push
xchg
in
mull
sti
push
jno
dec
punpcklwd
jo
push
xchg
jbe
rcll
xchg
insl
sub
xchg
insl
jno
push
addr16
iret
xchg
aaa
lods
and
add
cmp
cli
pop
aaa
icebp
dec
int
insb
inc
cmp
and
lcall
incl
add
les
cmpsl
cli
jmp
rcll
jno
sbb
rorb
xchg
hlt
lcall
rol
inc
pop
shlb
fs
fdivl
or
movsb
pop
mov
das
push
int
push
insb
xor
out
pop
add
and
sbb
push
sbb
cltd
cmp
loopne
cmp
xlat
jno
dec
and
outsl
push
add
lods
sbb
testb
iret
adc
lret
fadd
sub
adc
gs
sub
sub
jo
pop
mov
ja
pop
movsb
jae
push
lds
repz
stos
scas
hlt
shl
aad
adc
mov
cmpsb
pop
jno
scas
xchg
cs
push
xor
fistps
int3
ss
xor
jbe
push
xchg
fists
aas
inc
lods
aaa
loop
data16
push
sub
pushf
cld
jmp
mov
filds
outsl
js
sahf
jns
iret
pop
add
in
xor
mov
insb
out
mov
jmp
ljmp
inc
inc
ja
inc
popa
das
add
xor
popf
outsl
test
sbb
lods
dec
adc
sbb
mov
lret
cmpsb
fisubs
out
bound
aam
add
inc
ss
or
cld
push
call
jecxz
in
push
lret
cmp
xor
nop
pop
mov
adc
adc
sub
lret
test
pop
in
cmp
scas
ret
data16
mov
lret
add
push
mov
mov
mov
lods
add
outsl
or
insb
cmc
push
mov
inc
imul
xchg
shlb
lret
xor
pop
addr16
hlt
xchg
arpl
or
int
add
sbb
mov
xor
mulb
and
lock
push
fsub
adc
and
pushl
lock
sub
add
mov
xchg
add
mov
sbb
jb
dec
ljmp
dec
mov
dec
in
shr
xchg
loopne
mov
mov
les
call
push
xchg
push
cmpb
lret
cld
cmp
xor
test
and
ja
flds
lock
rcr
mov
and
mov
fildl
frndint
adc
push
into
pusha
idivl
pushf
sti
or
mov
shrl
stos
mov
insl
jne
jp
mov
sbb
push
sub
pop
mov
pop
xchg
jp
data16
sub
int
pop
repnz
test
pop
repz
jnp
jecxz
and
lods
jg
mov
push
les
mov
pop
outsb
add
sti
jg
leave
outsb
mov
adc
or
in
outsl
ret
mov
adc
loope
mov
mov
sbb
mov
stc
xchg
push
ret
insl
and
and
add
or
push
cld
pop
ss
jge
dec
jp
jl
mov
repnz
cmpb
fs
sbb
int3
cmp
fs
pushf
inc
pop
out
sbbl
stos
xchg
xchg
pop
out
jb
mov
xor
cmp
jg
ret
popf
stc
cmp
cmpsl
or
stos
mov
xor
inc
subl
cwtl
fimuls
loop
stos
out
movsb
mov
mov
xor
pop
cmp
lret
fsubrl
sbb
add
les
bound
and
adcb
dec
std
cltd
cld
mov
imul
or
pushf
jl
xchg
test
mov
push
js
cs
jbe
push
lds
dec
icebp
int3
xchg
or
fnstenv
push
scas
and
sti
xor
and
jnp
shl
sbb
lcall
rolb
and
inc
inc
push
pop
xor
sbb
or
movsb
rclb
test
nop
clc
icebp
cwtl
movsb
nop
dec
ficoml
addr16
mov
inc
jb
mov
pushf
pop
loopne
xchg
call
aam
ss
add
mov
adc
pop
mov
stos
adc
xor
xlat
insl
andb
sbb
cli
pop
sub
cli
mov
lods
jnp
test
shrb
mov
stos
out
xorb
es
push
xchg
mov
lock
ret
loop
pop
or
add
mov
push
es
jbe
test
jle
jg
cmp
in
int
ret
fdivl
push
adc
iret
sub
insb
push
jg
out
int3
sti
movl
push
sbb
mov
fnstenv
pop
jl
mov
out
insb
loopne
sbb
repnz
bound
pop
repz
cmc
mov
mov
inc
pushf
cwtl
aaa
pop
cli
out
and
mov
lock
xchg
movsl
xlat
outsb
pop
test
xor
int
cltd
or
negb
test
out
push
dec
mov
clc
ja
mov
test
push
ficompl
xorl
mov
pushf
adc
jbe
mov
cmp
pop
cld
mov
dec
sti
push
idivb
cli
or
add
popf
dec
and
aaa
inc
test
adc
stos
xchg
push
mov
loopne
cmc
mov
adc
sbbl
and
xchg
mov
jnp
dec
std
sarl
popa
or
pop
push
aam
xchg
push
pop
jb
bound
test
or
adc
cmp
ljmp
pop
imul
scas
mov
xor
jnp
jbe
xchg
ss
xchg
cs
cmp
push
or
aam
ja
popf
mov
push
cltd
inc
fsubp
and
iret
cltd
cld
mov
xor
pusha
dec
mov
sbb
jp
outsl
sub
adc
jbe
xor
aaa
push
rol
adc
addr16
popa
lcall
pop
leave
pop
scas
mov
fwait
mov
dec
push
dec
repnz
adc
gs
mov
repnz
jle
mov
xchg
add
into
pop
cltd
push
pop
fwait
mov
cmp
xchg
pop
dec
loope
aam
aam
scas
jmp
or
and
or
inc
dec
in
mov
iret
add
mov
ret
add
xchg
lahf
mov
xchg
enter
imul
fldl
or
in
enter
xchg
stos
and
sbb
cmpsb
jp
and
cmpsl
pop
sub
jo
dec
lea
jo
inc
lds
and
push
int3
inc
ret
std
aaa
or
and
clc
shll
cltd
stos
ds
lds
stc
add
xchg
into
add
pop
out
mull
hlt
adc
or
lret
mov
fsubl
loop
test
mov
cmpsl
jecxz
xchg
pusha
pop
sbb
push
inc
stos
std
adc
insb
paddq
xor
lods
negl
ret
mov
push
sub
dec
jecxz
std
outsb
outsb
std
xor
test
enter
push
pop
push
shlb
aas
daa
fnsave
jno
and
out
rclb
xchg
scas
add
shrl
dec
push
ljmp
popf
pop
cmc
mov
insl
repnz
xor
leave
jae
adc
lock
cmp
fimuls
pop
rolb
or
test
cwtl
stos
push
inc
push
dec
inc
sbb
addl
outsb
fdivl
mov
mov
fstpt
pop
arpl
jp
push
ret
roll
mov
xchg
mov
mov
xor
je
ja
xchg
lods
faddl
or
lock
sub
imul
jge
xchg
mov
push
push
cwtl
iret
cmp
jns
fstpl
jae
aam
jnp
test
adcl
xchg
fdivl
or
arpl
jge
xchg
lahf
loopne
sub
das
inc
test
notb
fsub
rcrb
cmp
les
nop
mov
sbb
mov
mov
cmp
cmp
mov
out
and
mov
test
jl
cld
out
add
sub
push
ss
lea
add
das
aas
push
add
je
and
iret
data16
add
mov
push
fidivrl
and
ljmp
mov
rcr
xchg
mov
inc
in
jmp
mov
xchg
push
xchg
ja
xchg
sub
fcoms
iret
and
mov
movsl
cmp
cmp
mov
filds
push
add
jns
sarb
sahf
mov
xchg
mov
dec
and
mov
jno
mov
imul
leave
in
movsb
repnz
or
mov
cmp
xchg
fcompl
push
mov
mov
cmp
mov
test
inc
ficoms
mov
testb
sbb
sub
or
call
shrb
inc
cmp
dec
cmp
in
inc
imul
pop
out
cmp
js
lahf
aam
cmpsb
cltd
jo
nop
mov
out
idivl
jp
fiadds
rorb
jp
insl
lods
ja
mov
push
hlt
mov
nop
movsb
add
test
mov
jp
test
or
xor
or
inc
xor
fs
push
or
das
jmp
mov
orb
xlat
jmp
jbe
push
out
pop
xor
ljmp
dec
dec
movsb
loopne
mov
shlb
jl
leave
pop
jnp
push
loopne
pop
pop
cmc
mov
pop
cmp
jecxz
adc
outsl
arpl
mov
mov
lcall
or
test
add
xor
or
imul
dec
mov
or
outsb
in
and
pop
addl
lret
ds
jecxz
fists
cmp
int
xor
ss
xchg
dec
sbb
mov
nop
cmp
adc
lret
xlat
fwait
xor
lahf
out
push
mov
out
xchg
inc
pop
mov
or
fdivs
ret
scas
xor
cltd
arpl
in
pop
xlat
lret
mov
xchg
push
cltd
inc
jnp
scas
mov
push
call
decb
mov
mov
lods
mov
ficompl
out
xor
cmpsl
hlt
imul
out
dec
add
or
imulb
in
cld
dec
push
in
mov
fidivs
inc
lret
sub
mov
pop
idivb
xchg
repz
add
or
inc
xchg
cltd
mov
push
mov
mulb
movb
negl
inc
fdivl
cwtl
out
push
pop
pop
sahf
mov
ljmp
popl
sub
xor
pusha
pop
jl
push
nop
jo
cs
int3
sub
mov
filds
jl
movsl
inc
pop
push
adc
mov
vrsqrtps
push
addr16
adc
xchg
mov
jne
ror
insl
test
mov
popa
fwait
or
xchg
rol
pop
add
xchg
mov
xchg
jb
fnstcw
sbb
xchg
fisttpll
mov
jmp
loopne
add
push
rol
adc
iret
xchg
jmp
mov
insl
std
pop
push
lcall
sbb
ds
add
pop
loop
pop
mov
mov
out
js
fwait
and
xchg
std
and
add
dec
push
adc
aaa
hlt
push
nop
repnz
push
add
jno
sbb
xchg
insl
scas
mov
out
sbb
cld
cmp
insb
fisttpll
add
lret
dec
repnz
pop
notb
dec
adc
jo
or
addl
dec
enter
cmp
pop
loopne
fldt
adcb
push
sahf
jne
sub
loope
pop
mov
shlb
ffree
test
ss
inc
lods
jmp
int
jmp
scas
inc
filds
adc
adcb
xor
inc
and
jb
sbb
in
icebp
lea
dec
cmp
jecxz
shll
push
dec
lods
push
out
mov
sbb
mov
jl
sub
rcrb
dec
loopne
jmp
addr16
and
loope
pusha
pushl
push
xor
jmp
aad
fistl
fwait
lret
add
add
adc
sub
rcrb
xchg
pushf
lds
rcr
test
jo
leave
pusha
adc
jb
push
ds
and
sbb
ljmp
popf
lods
pop
daa
out
movsl
les
cmpl
ret
out
sbb
or
mov
test
loopne
cltd
cmp
std
adc
lds
push
or
leave
mov
out
dec
pushl
fistps
call
xor
test
adc
cld
call
fistpl
and
add
lahf
jp
dec
mov
mov
les
insb
jle
rorl
and
clc
cmp
sbb
sti
or
cld
test
mov
cmpsl
loope
loop
xchg
pop
or
jmp
in
in
jo
jnp
cltd
pusha
pop
pop
mov
nop
clc
or
add
sbb
test
mov
push
loope
sbb
popf
xor
mov
pop
xchg
adc
incb
das
push
iret
arpl
or
sbb
dec
addr16
mov
or
pushf
mov
sti
adc
add
sub
cli
sbbl
mov
lock
lea
aam
xor
je
pop
lret
xchg
leave
push
push
aaa
mov
adc
daa
xchg
test
pop
cmp
lea
cmp
lcall
push
jno
jl
sub
dec
mov
shlb
mov
push
mov
hlt
imul
push
pop
push
out
in
dec
int
aad
data16
jnp
push
jns
cmpsb
sbb
push
mov
jmp
call
out
sbb
mov
loop
push
rolb
in
push
mov
inc
repz
jno
inc
movsl
and
sbb
mov
cmp
pop
xchg
mov
xchg
cmp
fsubrs
pop
lcall
sub
pop
xchg
mov
adc
mov
lds
std
xor
adc
inc
and
cmpsl
pop
leave
inc
clc
mov
pop
jle
testl
test
sbb
mov
das
sub
repnz
push
push
loope
lea
xor
decb
mov
ja
ljmp
imul
shlb
adc
lcall
xchg
xor
jo
xchg
push
mov
les
sbb
dec
pop
add
adc
test
outsb
xor
fisttps
in
das
cmp
xlat
int
or
xchg
lods
mov
aad
sbb
fdivl
enter
dec
jmp
push
pop
jp
jge
mov
sbb
cs
mov
mov
sub
mov
in
jl
pop
sub
repz
insl
adc
out
push
mov
movsl
push
dec
pop
mov
mov
ja
int
xchg
daa
sub
xchg
lods
sbb
xor
ret
push
adc
push
movsl
fwait
and
and
lods
push
jecxz
mov
pop
aam
push
pop
dec
je
pop
out
lods
rclb
hlt
push
or
fisubs
enter
xlat
and
movsb
std
movsb
fildll
cmp
pop
insb
imul
mov
fcmovnu
rcrb
or
test
mov
je
cmpsb
mov
add
add
xchg
cmp
int3
push
arpl
lret
and
push
mov
and
sbbb
aam
sti
inc
fwait
lahf
testl
add
outsb
shlb
insb
shrb
mov
xor
adc
addr16
outsb
inc
mov
push
jg
test
add
rcrb
mov
and
out
jne
push
cmp
imul
or
sbb
stos
mov
mov
std
nop
inc
push
insb
sub
movsl
or
xchg
std
fisubrs
ljmp
jno
testl
popf
lods
popa
sbb
cmp
stos
ljmp
cld
push
xorl
push
test
in
gs
imul
notb
cmp
pop
out
fsubl
in
mov
lcall
jbe
orl
sbb
fbld
inc
push
loop
mov
inc
popf
xor
cmp
inc
out
mov
mov
mov
dec
xor
add
cli
or
adc
push
mov
jae
pop
pop
pop
add
jg
stc
ja
push
loope
insl
sahf
sub
repz
mov
pop
pop
lret
dec
pop
mov
dec
mov
ja
pop
mov
fldenv
xchg
and
jbe
inc
sbb
stc
push
pop
jmp
mov
add
cs
mov
stos
out
pop
imul
popf
jp
xchg
scas
push
xchg
ds
sbb
in
shrb
imul
ljmp
cwtl
cmp
call
ret
ret
sti
fwait
divl
dec
pop
sub
push
cmp
arpl
adc
mov
loop
dec
outsl
pop
ret
jg
lret
mov
mov
dec
and
outsb
cmp
ret
and
jb
in
js
adcb
jo
divl
xor
in
jl
fiadds
cmpsl
xchg
fwait
bound
loopne
push
jbe
push
pushf
xchg
flds
xchg
jb
inc
pop
sbbl
add
stc
sbbl
ds
sbb
fadd
test
rol
pop
adc
xchg
push
int
ss
push
movsl
and
sub
jne
ja
fsts
xor
lcall
fsubrl
cld
stos
shlb
mov
stc
cmc
shr
cmp
test
gs
mov
es
add
int3
test
gs
mul
scas
mov
pop
add
repnz
jle
sub
data16
sub
sbb
jecxz
push
ljmp
xchg
daa
xor
fisubl
xor
and
mov
xor
fcompl
lahf
fnstenv
push
cmpsl
sub
test
dec
popf
fimuls
ja
sub
pop
insl
mov
and
mov
mov
je
inc
push
push
inc
pop
sub
xor
insl
loop
les
fsubl
and
cmp
jb
xor
mov
les
jae
xchg
dec
jno
imul
outsl
dec
or
cltd
cmp
pop
jb
daa
mov
dec
xor
jle
nop
test
leave
dec
in
je
push
adc
fnsave
pop
mov
pop
out
pushf
push
nop
das
push
std
lahf
xor
jns
jp
inc
repnz
cld
movb
stc
call
lcall
mov
and
sbb
and
add
inc
cmp
scas
cmpsl
jp
mov
mov
mov
insl
fmuls
lret
imul
inc
pop
and
fisttpll
fdivl
sub
sub
xchg
sahf
sbb
data16
loopne
rolb
pop
scas
mov
sub
repnz
rcr
rclb
shlb
mov
mov
sbb
mov
movsl
outsb
arpl
push
dec
push
or
cmpsb
mov
push
clc
subb
fistpl
xor
outsl
outsl
dec
arpl
jp
pop
nop
pop
dec
and
cmp
pop
xchg
out
enter
rolb
inc
push
fidivrs
lods
jmp
sbb
jmp
push
dec
icebp
sbb
push
sub
stos
in
repnz
xor
adc
rcll
js
je
das
sub
xor
jo
lcall
mov
pop
pushf
imul
lds
notl
pusha
ss
movsl
ret
mov
pop
cmpsb
and
adc
sbb
dec
jecxz
sub
les
adc
aas
sbb
hlt
mov
sub
pusha
and
sbb
cmp
aaa
inc
fiadds
shlw
test
pop
xor
out
rcll
repz
adc
cld
arpl
inc
outsl
ss
std
push
pop
add
lret
rcrb
rorl
mov
xchg
daa
outsl
jns
movsb
test
lret
je
cmc
mov
into
movl
mov
jl
ret
sub
dec
imul
lods
lahf
push
fisttps
in
out
pop
scas
std
sub
cmp
ss
movsl
pusha
ds
sbb
jo
fists
pushl
sub
cmpb
adc
inc
addb
mov
mov
mov
subl
add
jne
fldcw
addb
cmp
outsb
add
ss
jecxz
pop
outsb
add
sub
and
sub
adc
bound
fisubrs
scas
sbb
cmpsl
mov
push
push
xlat
sub
shlb
sar
pop
out
xor
sbb
fwait
test
push
ljmp
jno
xchg
aas
shl
out
es
mov
popl
mov
xor
xchg
js
mov
adc
outsb
sub
xor
push
dec
stos
jmp
lret
dec
push
divb
cmc
mov
inc
fbstp
inc
or
lcall
mov
insb
ffreep
jp
iret
in
or
iret
adcb
movsl
ret
imul
adc
pop
pop
arpl
and
test
out
sbb
gs
fldenv
bnd
aam
sbb
cmp
sub
jg
inc
pop
mov
das
movsb
pop
mov
pop
cmp
loop
cs
int
add
mov
cld
and
imul
dec
imul
and
movsb
pushf
push
cmpsb
inc
test
jecxz
adc
aam
or
pop
xor
xchg
pusha
mov
sbb
std
mov
ds
outsl
mov
adc
pop
outsb
aas
or
and
cmp
dec
outsb
xlat
push
pop
push
mov
fistl
jb
cmpsl
sub
and
movsl
jp
int3
or
mov
adc
inc
push
or
and
xchg
inc
cmp
int
mov
iret
mov
jmp
in
dec
fucomip
mov
aas
push
in
addl
incb
mov
or
and
inc
xchg
test
test
pop
cmpsl
sbb
xlat
cmp
pop
sub
pop
mov
nop
jmp
repnz
mov
mov
fldcw
dec
mov
dec
into
mov
iret
mov
xchg
mov
sub
loope
pushf
dec
or
mov
adcb
sub
lea
mov
test
pop
lds
xor
xor
cwtl
data16
das
adc
stos
sub
int3
arpl
data16
loopne
jl
mov
data16
cld
cmp
std
or
jp
sub
lods
aas
xchg
mov
push
inc
cs
test
mov
and
dec
pop
enterw
xchg
ss
pusha
cmpsb
push
leave
fsts
out
push
es
jbe
jns
scas
xchg
imul
cmp
out
jmp
or
pop
jl
mov
jnp
rclb
insb
pop
and
and
jg
lret
dec
dec
mov
mov
push
sahf
addb
mov
dec
pop
inc
dec
mov
mov
xor
cmp
clc
inc
adc
aad
pop
leave
inc
dec
loopne
sub
arpl
pop
repnz
pushf
jmp
dec
mov
out
popf
std
call
xor
mov
mov
or
insl
mov
repz
out
cmpsl
adc
mov
pop
push
xor
sahf
jo
adc
lret
inc
or
imul
dec
inc
mov
xchg
cltd
je
andb
pop
sahf
clc
pop
repz
sbb
dec
jp
lcall
in
pop
psubb
scas
fldenv
add
shl
mov
and
adc
popf
xor
fnsave
dec
add
cmp
add
adc
imul
jno
repz
ficomps
clc
dec
in
jno
lock
push
jae
jle
mov
mov
inc
loop
push
mov
xchg
out
sbb
xlat
cmpsl
sbb
push
rcl
pushf
les
xchg
pop
adc
mov
xor
mov
test
cli
jns
aaa
cmpsb
push
out
pop
inc
cmpsb
mov
mov
inc
imul
cmc
or
xlat
cmp
imul
jge
push
mov
fldcw
push
fistps
shl
test
pop
pop
rep
out
arpl
shrl
xor
jl
js
test
cwtl
xor
adc
inc
pop
fsubrl
out
cltd
inc
std
out
xchg
push
fisttps
loope
stc
jl
jle
sbb
push
push
jg
adc
push
and
sbb
push
jg
dec
pop
adc
push
lods
addr16
daa
inc
add
fisubrl
shlb
enter
mov
inc
add
int3
icebp
xchg
insb
jbe
pop
pop
into
pop
out
shl
xchg
adc
xor
inc
cmp
scas
nop
addb
loop
jno
push
out
sarb
sbb
add
movsb
pop
stos
sub
mov
xchg
cmp
lret
fbstp
into
in
jns
fdivl
dec
xor
adc
push
mov
cmp
into
push
lcall
cmp
fprem1
loop
cmpsl
lcall
jo
mov
sti
dec
lret
and
fwait
outsb
in
mov
lds
bound
and
shll
sub
sbb
cltd
sbb
inc
outsl
jo
mov
out
enter
mov
and
in
js
xor
mov
ljmp
cltd
jecxz
jae
jmp
jb
mov
out
sub
jp
mov
or
lret
jo
push
fstl
imul
andl
or
jmp
mov
push
roll
faddl
mov
aad
mov
aaa
jg
hlt
mov
jmp
ret
test
roll
push
mov
push
fwait
cwtl
sub
or
cmpsl
push
fnstcw
fidivrs
mov
aas
data16
stos
popa
xchg
cmpsl
lret
jbe
cltd
scas
in
xor
and
iret
fsubl
inc
bound
lret
mov
cwtl
xor
jae
sub
mov
ds
pusha
in
cmpsl
ret
aaa
setb
and
iret
in
popa
mov
sar
or
aam
aam
mov
out
shlb
inc
in
jbe
xlat
iret
loopne
lods
sbb
xor
cmp
scas
bound
sub
fdivs
scas
aam
mov
negb
jno
popa
fs
fldenv
hlt
cmc
mov
sahf
jo
mov
sbb
cmp
test
xor
test
shll
or
das
shlb
into
mov
inc
lea
mov
push
jns
push
push
or
add
cli
sarb
mov
mov
and
adc
and
inc
popa
idivl
in
scas
dec
jbe
jl
mov
dec
aaa
sub
test
insb
repz
loop
orb
dec
in
inc
sbb
jb
push
xchg
sbb
rorl
mov
mov
enter
outsb
mov
mov
jle
push
add
xchg
addr16
xchg
nop
test
adc
xor
cmp
int
jns
pop
aad
stos
mov
mov
mov
lret
or
lret
aam
sub
cmp
mov
movsb
addr16
jno
gs
add
lahf
push
xor
cs
mov
mov
cli
mov
int
stos
inc
hlt
inc
mov
jnp
leave
pop
xchg
push
xchg
rcl
lcall
pop
popa
orl
pop
cmp
sub
mov
fistps
mov
orb
std
lods
cmp
dec
dec
or
aaa
adc
fidivrl
dec
dec
xchg
lret
outsb
rcll
add
pop
and
lahf
std
andb
sub
clc
jp
sub
xchg
insb
sub
ja
mov
outsb
dec
loopne
repnz
mov
addr16
out
mov
insl
fnstenv
xor
inc
imul
lcall
push
scas
fisubl
jmp
fbstp
xchg
mov
mov
add
mov
rorl
gs
ret
pop
icebp
mov
inc
sub
dec
mov
mov
dec
cli
or
mov
mov
je
int
popa
sbbl
aas
rcrb
fmull
cmp
test
das
test
cs
jns
adc
jmp
xor
mov
std
inc
inc
jl
andl
inc
push
cmp
loope
push
xlat
cmp
fldcw
add
fnstcw
mov
sbb
sub
mov
aaa
int3
out
cmp
xorl
or
hlt
add
mov
or
imul
shll
mov
shlb
lds
adc
pop
inc
inc
push
or
loopne
das
pop
xchg
mov
aaa
out
imul
dec
in
jnp
dec
scas
dec
lret
icebp
sarb
pop
sub
rcll
push
vpsrlw
outsl
pusha
dec
int
addb
ret
xchg
stos
mov
adc
mov
add
push
jp
jle
repnz
daa
mov
dec
dec
xorl
cmp
fwait
xor
jecxz
mov
pop
xchg
lret
pop
rorb
pushf
movsl
push
sub
mov
jb
sub
mov
jns
pop
stos
dec
adc
adc
ss
addr16
cmp
mov
dec
pop
cli
std
pop
js
add
lds
daa
jo
pop
mov
shlb
rol
mov
pusha
mov
movb
hlt
mov
clc
scas
adc
rcrl
jnp
enter
fisttps
pop
push
and
test
test
lret
or
inc
enter
test
dec
adc
dec
adc
mov
jb
sbb
js
jmp
xchg
fmuls
xor
push
fidivs
jae
adc
sti
rcrl
dec
sbb
popf
inc
push
test
testb
push
enter
jb
push
lret
add
add
jge
mov
mov
aad
xor
cli
in
xchg
xchg
fimull
and
out
or
cmpsl
inc
loop
out
jns
push
jno
jg
rclb
or
jge
mov
cli
push
jne
jae
fnsave
push
cltd
leave
stc
nop
sti
or
addb
lret
sub
insl
in
mov
test
pop
lret
cmp
addr16
jecxz
loop
insl
in
mov
jecxz
lret
subb
insl
mov
ffreep
inc
mov
cmp
ljmp
ret
jl
int3
lret
mov
pop
jb
jl
daa
pusha
enter
stos
push
sub
inc
lods
fldt
out
cmpb
pop
mov
rcr
dec
cli
xchg
mov
sbb
cmpsb
mov
cmpsl
sbb
dec
sub
scas
adc
push
and
mov
mov
int3
jnp
incl
cld
inc
push
dec
inc
jns
push
jb
pop
lret
push
out
stc
or
test
gs
nop
sub
sbb
movsl
inc
js
das
add
cltd
mov
daa
inc
sub
sti
inc
andb
sahf
push
jmp
lahf
fidivrl
jl
stc
xchg
dec
andl
ret
xor
jbe
stos
cmp
sahf
jg
ret
cld
push
daa
jge
fmull
pop
push
out
sti
iret
clc
and
popa
ret
mov
push
mov
lea
jl
out
sbb
mov
into
loope
rorl
inc
fdivl
jl
sub
dec
cmpsl
ja
push
push
popf
jl
mov
lahf
das
pop
shl
cli
sub
nop
sub
or
push
sahf
scas
inc
setp
xor
dec
repz
in
fldt
addl
or
adc
jae
cli
xor
sub
cmp
aaa
sti
lahf
sub
dec
loop
sub
aam
sbb
add
adc
dec
lcall
sbb
fs
mov
push
adc
pushf
inc
aaa
pusha
xor
es
adc
inc
mov
mov
adc
push
and
imul
pop
addr16
lds
sub
decb
sub
fsubs
sbb
mov
inc
jo
jmp
cmpsb
lcall
mov
mov
mov
bound
stos
in
inc
ficompl
mov
in
mov
call
push
aam
xchg
mov
cmp
in
loope
push
mov
mov
cmp
imul
in
iret
lods
jg
xor
mov
pop
xchg
add
cmp
push
mov
add
xchg
or
mov
gs
hlt
sub
movsl
scas
jge
inc
mov
lcall
std
and
xor
pop
mov
je
cmp
js
cmp
mov
inc
lds
jae
mov
inc
pop
loopne
mov
pop
cltd
scas
or
dec
out
mov
repz
and
push
inc
dec
add
xchg
mov
pop
jb
cmp
mov
scas
nop
pop
xchg
add
icebp
sub
pop
imul
insb
push
ret
mov
jp
pop
jmp
cmpsb
mov
xchg
aam
push
inc
cmp
movsl
mov
call
mov
out
mov
das
xchg
aaa
ficompl
test
cld
lods
jmp
movsl
or
ss
jnp
mov
scas
mov
mov
sub
test
xchg
mov
jp
mov
cld
push
rcl
cmpsb
mov
mov
adc
or
pop
imul
sbb
xchg
mov
shrl
pop
pop
mov
jl
test
dec
and
mov
inc
insb
in
pop
push
and
xchg
repz
xchg
inc
mov
sub
adc
mov
outsl
mov
sbb
and
mov
jge
inc
mov
in
mov
js
xor
lods
sbb
pop
cmc
jge
sub
sar
std
or
popa
xchg
push
stos
dec
mov
pop
test
pop
icebp
scas
pop
clc
adc
cmc
dec
fbld
mov
loop
dec
pop
xchg
scas
dec
das
cmp
pusha
std
test
sbb
mov
addr16
dec
add
mov
lock
ds
fidivl
xlat
push
cmpsb
adc
cwtl
add
bound
loop
sbb
aas
cs
inc
lret
mov
or
clc
mov
sbb
jnp
ficompl
mov
pusha
and
out
int3
jbe
lds
loope
clc
mov
sub
mov
cmpsl
adc
divl
scas
xor
popa
insl
ja
dec
mov
fstpl
xor
shrb
or
nop
inc
scas
mov
rorl
mov
rol
test
pop
sub
pop
mov
push
test
int
jne
mov
in
mov
add
inc
mov
inc
or
and
mov
loopne
push
mov
cltd
pop
repnz
imul
and
adc
xlat
xchg
int
les
cmp
pop
imul
dec
cli
data16
dec
test
inc
lds
xchg
das
push
cmp
sbb
pop
xor
in
sub
push
push
movsb
push
mov
xchg
mov
cltd
mov
xchg
add
in
mov
fucomp
lret
xlat
adc
rcrb
add
mov
lods
jecxz
jbe
and
adcl
loopne
xchg
dec
xor
pop
fwait
push
xor
mov
inc
out
pop
pop
icebp
mov
fidivrs
adc
test
int3
ret
mov
mov
fcoml
inc
cld
push
jecxz
frstor
bound
repnz
outsl
mov
jo
inc
cld
dec
and
xor
arpl
cmp
or
ret
or
mov
or
daa
cld
and
or
ljmp
hlt
icebp
sub
push
fiaddl
sbb
mov
inc
int
cmp
ret
mov
pop
jge
sub
lods
push
loope
popf
jmp
jmp
out
push
inc
in
or
mov
xor
push
xchg
dec
or
xchg
and
mov
dec
mov
mov
mov
push
inc
dec
out
out
into
mov
mov
lock
jg
loope
lcall
out
sbb
xchg
lahf
jb
aas
call
adc
inc
mov
jmp
jae
jno
gs
cmp
jge
jp
es
add
jge
push
pusha
lods
push
xor
daa
jo
std
stos
shll
xchg
sub
inc
fcomps
sub
sbb
inc
push
pop
inc
cmp
jno
outsb
sub
jp
jge
ret
neg
test
orl
mov
mov
xor
mov
mov
pusha
pusha
add
jecxz
sub
ret
xchg
imul
push
aaa
push
lahf
xor
jbe
push
mov
pop
fstl
push
es
sbb
jmp
je
lret
imul
and
mov
jae
leave
xor
adc
jae
pop
movsl
xor
mov
adc
rclb
jp
test
cld
outsl
adc
data16
push
mov
cmp
mov
mov
add
jne
inc
arpl
rorl
push
clc
adc
lods
inc
push
xchg
imul
pop
rclb
fstpt
movsl
mov
outsl
test
push
sar
or
bound
xchg
test
js
mov
jp
xchg
add
rcl
sub
les
or
pop
lret
pop
sub
push
lods
xlat
push
or
jg
adc
jl
jno
aam
add
mov
daa
xchg
dec
ficoml
test
xchg
cmp
xchg
insl
stc
cltd
dec
dec
add
inc
xor
ret
dec
in
sbbl
dec
orb
cmp
cmp
rorl
lea
cli
push
bswap
lea
arpl
ds
lods
xor
lret
mov
out
sbb
xchg
inc
push
mov
loop
jnp
jb
imul
xchg
cmp
pop
fcomps
xor
xor
std
inc
fs
pop
sarb
popa
ret
gs
and
xchg
mov
jp
add
mov
lret
add
add
call
test
test
fs
sub
fsts
test
mov
fsubrl
adc
push
gs
jne
hlt
fidivl
shrb
xchg
ja
addb
xor
cmp
cmp
lea
sub
or
or
jecxz
jns
and
inc
pop
popa
sbb
enter
repz
dec
dec
cmp
es
xor
dec
sbb
and
sbb
aad
cs
les
mov
fiadds
and
in
adc
in
mov
jno
pop
mov
test
mov
outsl
andl
sub
into
gs
jecxz
cld
dec
in
pop
cmp
mov
ss
and
imul
ror
xchg
add
sbb
cs
mov
mov
test
ss
jle
xchg
lock
lahf
push
inc
mov
lahf
xor
push
inc
fadd
movnti
cmpl
aaa
or
dec
repnz
pusha
ret
pop
dec
jecxz
loope
daa
or
xchg
scas
pop
mov
fsubrs
push
dec
dec
cmp
testl
xor
addr16
xchg
cmc
cmpsl
dec
cltd
std
out
or
xchg
inc
mov
push
bound
ljmp
pushf
xor
push
test
push
shl
add
push
bound
xchg
and
mov
test
inc
sarl
pop
add
into
data16
gs
iret
in
ret
test
sbb
xor
xor
movsl
enter
mov
sahf
mov
ja
push
and
push
fsubs
push
ds
test
fdivrs
xlat
scas
xor
inc
shll
or
arpl
aam
mov
xchg
sub
jle
loop
test
sahf
lret
movsb
mov
push
xchg
lcall
in
subl
dec
fisttpll
push
or
push
insl
xlat
sarl
in
xchg
pop
movsb
addr16
out
pop
lret
mov
gs
add
push
xor
jge
xchg
lock
mov
aam
xor
out
xchg
rorl
jp
xor
out
inc
fisubs
dec
aas
dec
test
jg
ret
pop
into
ret
mov
sub
cld
or
push
test
imul
xor
sbb
sbb
lea
mov
pop
add
orl
cmp
xchg
je
sbbb
jecxz
inc
lcall
push
ficoml
mov
ret
outsb
enter
insb
xor
sub
lods
inc
inc
stos
lcall
adc
add
xchg
mov
dec
pop
mov
js
push
mov
dec
mov
fidivl
jl
mov
jl
cmp
lret
jmp
inc
fimull
push
cmpsb
in
arpl
insb
inc
cs
test
mov
ja
test
js
insl
test
dec
cmp
cmpsb
lods
sub
inc
ss
stc
jp
mov
or
xor
aad
lods
mov
les
xchg
and
out
fsts
jecxz
mov
lcall
mulb
ja
popa
pop
je
pusha
outsb
ds
dec
lods
add
je
sbb
fcomps
mov
and
add
xor
rorb
sbbl
loope
inc
mov
pop
fdivrl
mov
pop
lea
dec
mov
inc
add
sbb
push
iret
imul
ja
add
and
cmpb
adc
add
adc
mov
mov
jbe
test
fldt
xchg
imulb
sti
lods
xchg
rcll
sti
dec
pop
pushf
cmpb
or
aam
pop
insb
scas
xor
ret
lods
xchg
or
pop
inc
out
mov
inc
das
push
push
test
scas
loope
jnp,pn
pop
and
call
test
decb
push
cltd
lea
xchg
push
xchg
in
ror
movsldup
movsl
mov
rcrb
movsl
stos
into
xor
arpl
sub
fsubrl
sbb
pop
out
push
dec
dec
addr16
dec
xchg
clc
ds
out
imul
divb
mov
dec
out
and
sbb
out
mov
flds
out
dec
cmc
cwtl
lods
and
mov
fnop
add
ljmp
cmp
inc
clc
mov
add
aas
scas
xor
test
xlat
fdivl
pop
fistpl
adcl
adc
add
push
sub
ds
es
mov
call
mov
stos
fmuls
lahf
pop
shl
int
shl
sbb
or
imul
adc
ljmp
es
xlat
push
jnp
fdivs
sbb
jl
cmpsw
imul
js
negl
add
in
jl
xchg
mov
lock
ficomps
lar
dec
push
iret
aaa
mov
fwait
cld
stos
in
fnstsw
and
jp
jge
cltd
xor
add
sbb
out
cmp
jne
jno
and
dec
jmp
jns
push
mov
push
mulb
out
rorb
je
or
add
popf
push
and
pop
adcl
xlat
push
inc
repnz
out
sbb
sarl
cld
out
out
bound
push
push
add
dec
clc
or
dec
es
int3
xchg
int
loopne
inc
mov
mov
jecxz
repz
inc
push
insl
enter
xchg
lods
ljmp
shll
lds
dec
inc
mov
loopne
cmpsl
adc
cld
and
pop
mov
sub
dec
idivb
lret
idivl
or
clc
and
fwait
xor
test
rclb
jo
push
mov
mov
rcrl
cmp
cmp
sub
stos
fldl
inc
das
push
test
outsl
push
pop
inc
lret
mov
cmp
push
inc
push
fsub
sub
daa
inc
xchg
scas
push
mov
hlt
inc
xchg
add
je
ja
lea
jle
stmxcsr
mov
fadds
pushf
outsl
jle
iret
data16
jns
cwtl
xor
lcall
adc
bound
rorb
mov
call
pop
cmpsb
leave
insb
adc
addr16
pop
pop
pop
inc
popa
mov
lods
das
sbb
enter
push
out
adc
aas
daa
sub
in
das
mull
mov
lods
fbld
xchg
or
push
or
pop
test
jp
mov
lcall
dec
mov
mov
mov
mov
jecxz
sbb
mov
inc
cmp
imul
jle
pop
pushf
lds
jbe
jle
push
stos
xchg
dec
sub
xlat
das
jg
int
sub
std
jno
push
or
ja
mov
adc
mov
scas
inc
das
pushf
movsb
popl
push
mov
test
sbb
inc
std
adc
movsb
aad
xor
jg
pop
mov
stos
push
push
out
mov
xor
cmpsb
sahf
insb
mov
ja
and
xchg
adc
std
icebp
pusha
movzbl
and
ja
in
mov
inc
ret
cmpsl
notl
mov
jl
insl
adc
sub
sarl
icebp
jb
push
insb
mov
jp
lea
dec
mov
jnp
aad
mov
add
hlt
inc
dec
mov
icebp
call
f2xm1
sub
jo
inc
jmp
dec
adc
mov
jae
or
mov
test
inc
push
inc
in
xchg
leave
dec
dec
or
jne
fmuls
addr16
xor
stos
adc
mov
movsl
pop
insb
mov
daa
ljmp
sub
adc
js
cmpsl
sbb
lds
xor
pop
ljmp
push
xorb
mov
bound
mul
rorb
push
out
adc
int
jns
in
and
mov
out
push
xor
cld
test
push
inc
xor
movsl
icebp
push
fdivrs
mov
xor
lea
jbe
adc
pop
jecxz
out
cltd
jecxz
push
lcall
fistpl
out
pop
cmc
shrb
push
and
div
lret
add
js
inc
mov
mov
int
in
add
xchg
xor
test
in
sub
out
xor
popf
mov
jmp
in
adc
push
pop
mov
stc
adc
push
lock
sbb
test
add
divb
push
sbbb
mov
xorl
push
out
and
insl
mov
aad
flds
xchg
jp
dec
daa
pusha
daa
fimuls
addr16
scas
pop
mov
loope
test
inc
xor
ds
iret
dec
repnz
call
sub
pop
jo
addb
dec
mov
inc
enter
mov
inc
cld
sub
or
stos
mov
std
leave
and
test
scas
ss
outsl
in
inc
sub
je
cmp
shr
mov
xlat
dec
and
shl
jg
sub
je
cmp
sbb
into
ja
es
or
jg
xor
push
sub
cmp
cmpb
or
add
orb
outsb
scas
mov
pushf
xor
xchg
add
adcb
add
sbb
ds
je
jge
mov
scas
mov
xor
sti
pop
dec
ja
loope
insl
jge
cli
inc
jecxz
push
push
pop
and
outsl
cmpsl
mov
rcll
add
arpl
mov
or
jg
pop
adc
jmp
gs
adc
mov
sbbl
cmpsb
xchg
mov
push
int
negl
cmp
lods
cmp
daa
adc
or
fs
add
push
add
aas
push
es
pop
xor
inc
cltd
cmp
movsl
stos
div
and
sub
aas
or
insl
shr
aaa
fiaddl
sarb
js
test
fildll
faddp
mov
adcl
call
loopne
cltd
push
sbb
xchg
ret
xor
xchg
jmp
add
mov
movsl
and
insl
imull
roll
dec
fisubrs
fisttpl
rcr
outsl
loope
andl
movl
or
mov
sub
movsb
into
bound
sub
or
jg
add
mull
popf
xor
fdivr
mov
fldl
xor
in
sbbl
lcall
xor
or
pop
shrb
push
jp
mov
test
lahf
subb
loop
xchg
mov
sbb
movsb
sbb
sti
lret
cmp
cwtl
roll
jle
negl
lret
sub
movsb
pop
fs
lcall
push
push
test
jo
or
inc
xchg
jo
inc
mov
sbb
cmp
mov
mov
lret
adc
les
leave
stos
pop
into
ror
fdivs
ficomps
mov
int3
push
or
lods
shll
cmpsl
out
dec
popf
in
mov
rol
xchg
dec
mov
push
stc
je
sbb
daa
mov
mov
inc
cwtl
jne
xor
addr16
dec
inc
pusha
jmp
out
mov
mov
out
inc
mov
stos
stc
pop
fnstcw
sbb
daa
stc
ss
jb
sub
adc
cld
rcrb
scas
cmp
outsl
jmp
test
lea
jno
push
movsb
pop
adc
cmp
jecxz
jne
lock
inc
cmp
filds
adc
pop
mov
mov
push
or
sbb
mov
and
xchg
hlt
roll
fwait
verw
add
outsl
push
sti
fadd
in
gs
lods
adc
mov
div
cld
std
pop
out
inc
dec
jecxz
sbb
bound
add
push
shlb
negb
mov
xchg
movsb
fcomip
sbb
into
fimuls
mov
add
aas
out
stos
or
ret
xchg
dec
or
movsb
pop
sahf
and
movb
sbb
cltd
pop
push
jecxz
icebp
sub
repz
jle
pop
test
rcl
xor
dec
mov
dec
mov
xrstor
fcoms
inc
cmp
pop
adc
ret
cmp
outsb
pop
jae
rorl
inc
call
sbb
pop
mov
popf
inc
popa
cmp
lods
ljmp
popf
and
jb
in
mov
inc
cli
aad
mov
mov
xor
push
cmpsl
sbb
rcl
scas
pusha
lahf
and
xchg
addl
mov
push
in
push
out
enter
stc
nop
fsts
insb
aam
lret
addr16
ret
pop
sbb
mov
mov
sub
adc
clc
and
push
mov
or
adc
aam
es
test
sahf
fnstsw
inc
sub
into
inc
mov
lods
repz
scas
mov
xor
push
inc
adc
xorb
or
push
inc
rorl
jnp
xchg
mov
dec
pop
fcompl
fs
leave
or
mov
xchg
cmp
pop
xchg
add
mov
inc
stc
popf
mov
aaa
lock
ret
scas
mov
adcl
cmc
add
jns
mov
jmp
pop
jg
int
ja
push
xchg
xor
ljmp
mov
xlat
inc
inc
mov
mov
mov
or
inc
arpl
cmp
subl
sti
mov
leave
orl
std
popf
dec
and
sbb
xchg
inc
ret
lahf
lods
jmp
push
cmc
jmp
push
lret
cmp
adc
mov
test
repnz
push
pop
in
movb
cmp
loopne
pop
sarb
stos
roll
inc
push
loope
cltd
fdivr
sbb
cmp
sarl
call
test
pop
add
mov
outsl
pop
cmp
movq
adc
ds
lods
or
jo
or
fidivrs
jge
jo
fidivrl
xor
mov
add
jnp
shlb
xchg
inc
fwait
xchg
push
push
cmc
aaa
or
in
add
ffree
mov
in
and
mov
insb
popa
lret
adc
fnstsw
push
sbbb
pop
jmp
xchg
xchg
add
mov
adc
sbb
sub
shr
je
test
data16
xchg
push
test
outsl
daa
adc
mov
std
pop
xor
add
das
adc
xorb
nop
cmp
mov
inc
mov
adc
mov
adc
xchg
dec
insb
test
xchg
mov
xchg
rcl
icebp
mov
jl
push
inc
push
mov
push
jo
cwtl
mov
ficoml
jg
mov
lods
mov
enter
jmp
xor
push
and
clc
or
fneni(8087
pop
mov
jae
sbb
bound
je
inc
sbb
call
mov
inc
cmpsl
and
ret
cmp
repnz
stos
xchg
out
ds
cmpsb
push
repnz
enter
in
adc
mov
mov
push
dec
push
and
ret
cmpsl
test
ja
mov
out
cmp
pop
fsubrs
not
mov
or
stos
pushf
daa
cli
in
jo
dec
mov
and
hlt
sti
sbbb
pop
push
pop
mov
mov
jle
jecxz
mov
push
xor
mov
negl
bound
shll
ds
mov
aaa
inc
cmp
out
xchg
and
es
xchg
daa
dec
leave
loope
dec
sbb
notb
lods
mov
add
push
imul
and
gs
inc
loopne
jp
out
mov
les
dec
insl
adc
mov
xor
mov
enter
out
push
or
add
in
and
pushaw
adcl
xor
push
cltd
outsb
or
fdivs
mov
mov
testl
cmp
outsb
movb
pop
jge
or
shlb
sarb
xor
cmp
adc
mov
jb
scas
xor
push
test
stos
imul
lods
loope
sub
inc
pushf
jb
cwtl
push
push
mov
jge
clc
jb
fwait
insb
and
mov
int3
xor
xchg
je
or
ffreep
mov
pusha
add
xor
cmp
data16
sbb
leave
testb
into
mov
std
scas
and
xchg
pop
scas
call
lea
xor
imul
adcb
negl
mov
xchg
and
clc
lret
out
inc
testb
mov
dec
dec
rcrl
sub
pop
call
addb
roll
xor
inc
lock
cld
or
pushf
cmpb
and
ds
or
mov
daa
popa
rcrl
pushf
xor
data16
jae
aas
push
xchg
test
mov
jnp
test
test
into
push
mov
dec
js
push
push
stc
adc
in
inc
sbb
repnz
insl
mov
lahf
lock
inc
in
add
mov
fcmove
cmp
push
mov
loop
dec
dec
jecxz
jae
adcl
fisubs
or
dec
cltd
jae
mov
push
jnp
inc
xor
pusha
pop
jae
sbb
jl
cli
xor
push
fidivrl
push
add
mov
outsb
fdivrl
hlt
and
in
cmp
iret
movsl
repz
sub
scas
jno
shlb
pop
lret
addl
out
push
mov
mov
call
aaa
mov
mov
xor
inc
and
add
ss
lea
lock
clc
xor
ljmp
lock
popa
mov
jl
mov
sbb
sti
push
mov
xor
lcall
dec
jno
cli
cmc
jg
scas
push
les
dec
loopne
jg
jns
xor
out
push
loope
pop
jg
pop
mov
xchg
push
dec
push
pop
mov
jo
ss
lea
lods
fmulp
xchg
push
push
xlat
sarb
shrb
mov
dec
inc
insb
testb
jns
mov
in
clc
xchg
sbb
inc
sub
das
mov
mov
dec
das
mov
mov
mov
pop
lret
lret
mov
fs
add
cmp
call
xchg
sub
or
mov
aad
xchg
pop
sub
fsubrs
xlat
add
pop
dec
aam
sbb
cmpsb
shr
mov
rcrl
mov
sub
pop
cmpsb
rcrl
push
or
cmp
push
out
mov
mov
inc
mov
outsb
push
mov
sub
sti
fbstp
push
cld
and
inc
sub
dec
cmp
das
pop
or
push
xor
sbb
ret
stos
pop
icebp
mov
mov
cmp
pop
insb
rolb
mov
xor
stc
xchg
inc
fcmovbe
out
push
xor
es
mov
push
ret
shlb
inc
mov
and
icebp
outsl
add
aaa
mov
inc
fisttpl
push
scas
jno
inc
ss
ds
mov
push
push
lcall
int3
pop
jg
push
in
push
ja
xor
xchg
push
cmp
mov
and
mov
rcrl
cmp
outsb
fldenv
adc
adcb
sbb
inc
mov
ret
pushf
ljmp
int
icebp
jnp
mov
movsb
loop
int
lea
push
arpl
loop
pop
add
pop
lahf
mov
push
xchg
sbb
inc
dec
ss
in
or
add
ljmp
cmp
jno
push
mov
shrl
and
pop
call
std
pop
in
cmp
jns
dec
pop
ljmp
jno
dec
mov
repnz
xchg
shll
pop
add
pop
repnz
fstps
aaa
xlat
jl
stc
and
sbb
inc
sbb
push
jecxz
push
dec
sbb
ja
rcrl
inc
or
imul
dec
dec
dec
push
aad
push
sbb
inc
call
cli
in
je
dec
xor
cltd
lods
outsl
push
rclb
push
test
push
divl
stc
and
pop
aaa
test
js
and
fisttpl
cmp
gs
les
movsb
inc
jecxz
outsl
fldz
xor
pop
jge
push
scas
mov
xlat
jbe
xor
std
mov
outsb
cmpb
cmp
xchg
pop
ljmp
pop
xor
push
in
or
cli
adc
sbb
pop
stc
xor
out
dec
sarb
adc
push
test
xor
cmp
test
mov
sub
xor
jg
into
cmpsb
out
jl
lret
dec
mov
inc
sub
movsl
sti
pop
push
mov
mov
push
clc
adc
out
pushf
out
gs
dec
shlb
pop
mov
jl
mov
inc
inc
stc
push
sub
ficompl
jb
cmp
out
and
fadd
fstps
test
sbb
jl
popf
mov
div
dec
pop
int
mov
mov
inc
xlat
push
push
jle
mov
xchg
imul
lods
pushf
cmc
xchg
aam
mov
mov
adc
push
inc
pop
sub
or
sbb
xchg
adc
int3
dec
add
jl
lock
fcmovu
lfs
sbb
sbb
fwait
cmp
jne
movsb
and
xchg
or
stc
inc
push
scas
sub
das
pop
lods
xchg
sub
ret
sar
xchg
and
fsubl
add
mov
xchg
outsb
add
andl
leave
mov
test
fdivrl
outsb
jge
xchg
pop
pop
mov
cmp
jae
loopne
aad
push
outsl
inc
dec
pop
jmp
das
mov
add
mov
mov
addl
fidivrl
andb
sbb
sbb
stos
out
div
mov
adc
pop
dec
outsl
pop
mov
fnstenv
push
push
jbe
or
mov
std
lods
fwait
orb
xchg
cs
lods
imul
sbb
mov
inc
push
jbe
push
aaa
push
sub
or
xor
fisubrs
xor
test
imul
sub
push
jg
jecxz
mov
scas
dec
cmc
mov
pop
add
cmpsb
push
test
sub
sub
cmpsb
aas
loopne
in
clc
jge
fidivl
mov
out
sti
xchg
add
lret
push
cwtl
cmp
dec
push
pop
xchg
jns
fwait
movsl
cmp
test
ds
mov
adc
push
push
sar
sbb
fxch
mov
scas
out
int
cmpl
mov
lods
stos
jg
ss
sbb
pop
aas
std
stos
imul
xor
test
lret
call
or
lcall
int3
and
xor
adc
jl
push
xchg
xorb
xchg
sub
loopne
lea
loop
lea
int
push
mov
popa
ror
pop
mov
cmp
inc
push
jns
dec
mov
push
inc
out
inc
jecxz
cmp
adc
js
sbb
sub
and
xor
dec
dec
dec
mov
and
add
fldenv
mov
mull
cmp
lods
addb
push
inc
push
fiaddl
pop
push
insb
shrl
popa
shl
cmp
and
jecxz
fstps
add
xor
mov
jle
test
lahf
pop
shll
sbb
imull
xor
pop
jle
cmp
stc
nop
sbb
and
fs
iret
mov
dec
pop
hlt
jl
inc
enter
mov
jns
xchg
stos
ljmp
cmp
dec
mov
popf
xlat
scas
dec
pop
shrb
add
cmpsl
lods
inc
ljmp
addr16
cmp
dec
imulb
xor
add
stos
jecxz
push
sub
xor
and
lcall
in
push
push
xor
test
or
jmp
mov
lock
sub
repz
jbe
out
imul
sbb
and
and
adc
inc
jmp
rorl
paddq
addr16
push
fwait
xor
leave
mov
dec
mov
jbe
jle
rcll
mov
out
xchg
or
jmp
jbe
inc
xchg
je
xchg
push
insl
movsb
jp
adc
add
stc
arpl
ss
subl
push
sub
xchg
inc
inc
lcall
and
lock
loop
mov
push
inc
dec
out
insl
movsl
ret
sahf
rcr
test
or
imul
pop
jmp
sub
pop
xor
pushf
xchg
out
stos
and
stc
sbb
or
cltd
rclb
test
aaa
mov
lret
dec
push
loop
pusha
add
iret
fcmovnbe
jecxz
jmp
mov
push
push
inc
icebp
cmp
adc
mov
and
xor
xchg
mov
in
pop
stos
mov
testl
aas
push
mov
and
xchg
pusha
pushf
lcallw
xor
jmp
cld
push
in
sub
lods
dec
shll
and
mov
packuswb
arpl
jo
shll
ret
jge
fnstenv
pushf
cmpsb
push
mov
gs
or
cs
pop
adc
push
addr16
add
mov
dec
xchg
sub
aaa
or
dec
cmp
mov
fs
dec
jecxz
push
addb
sti
lock
fstpt
cmp
aad
imul
cmp
add
sub
mov
std
xor
adc
and
inc
mov
mov
add
movsb
aaa
mov
testl
rorl
sti
xor
ret
jo
xor
inc
out
xor
fisubs
xchg
mov
adc
out
jo
inc
jg
adc
cs
rcl
mov
or
scas
mov
test
sub
mov
cmpsl
cmc
sbb
mov
roll
in
ja
mov
pop
adc
dec
lret
inc
aam
push
int3
jno
push
das
cmp
push
or
add
xchg
fsubr
or
repz
dec
daa
outsl
jecxz
loop
aad
imul
mov
stos
xchg
pop
in
xor
out
lea
jecxz
pop
dec
inc
fisttpl
and
and
jnp
nop
and
mov
push
mov
fwait
cmp
int
pop
pushf
bound
aam
add
sarb
push
addr16
cmpsl
lea
xchg
leave
stos
pop
cmp
daa
mov
dec
inc
shrl
mov
pushf
lock
andb
sti
outsb
std
dec
ljmp
insl
push
jbe
push
pop
fdivrl
push
mov
loop
adc
loop
loope
and
shrb
nop
int3
stos
in
arpl
fwait
sub
bound
and
cltd
mov
into
cwtl
sub
sti
lret
mov
cmp
fildll
push
jno
movsb
into
jb
or
out
dec
test
pop
xchg
enter
pop
filds
in
fnstcw
dec
movsb
shl
push
sub
fdivr
inc
cltd
mov
dec
lock
in
pop
lahf
sbb
dec
push
cmp
out
lock
dec
pop
xor
or
push
jnp
or
insb
sbb
rol
adc
lds
hlt
xchg
loop
pusha
mov
fwait
and
mov
ds
out
aam
xor
out
add
pop
inc
dec
dec
cmp
mov
jle
in
jp
pop
mov
les
adc
add
popl
roll
ret
outsb
jae
pop
lods
cmp
cmc
popf
jmp
insb
mov
data16
loope
mov
xlat
aas
cmpl
loop
data16
mov
cmp
test
mov
fcomps
jne
test
hlt
lods
xchg
or
sbb
ljmp
and
pop
cmp
mov
cmpsb
and
popa
rorb
jle
sti
mov
pop
aaa
dec
aam
push
push
popa
aam
fstpt
lret
cmp
jns
int
xchg
add
movsb
decb
jo
aas
movsb
lea
fnstenv
sbb
sub
add
out
cld
and
mov
ja
xchg
cs
push
add
mov
hlt
dec
fs
adc
outsl
sbb
icebp
jae
push
mov
arpl
rorl
sbbl
adc
std
leave
aam
push
inc
mov
fmull
push
push
arpl
arpl
shrb
dec
int
je
mov
inc
test
dec
notl
mov
stos
inc
lock
int3
xor
repz
adc
pop
cmpsl
in
mov
movsl
je
cmp
sti
mov
jns
jge
adc
rclb
jnp
mov
xchg
mov
cmp
lcall
xchg
lcall
xchg
mov
jg
int3
sub
leave
dec
dec
mov
sbb
jg
std
sub
leave
adcb
loop
outsl
sbb
pop
stos
ficomps
ss
jbe
insb
sti
imul
sub
mov
pop
sti
and
andl
and
adc
insl
imul
push
pop
sbb
imul
sbb
adc
jno
int3
and
in
adc
dec
pop
testl
data16
jo
mov
outsb
out
add
jp
mov
sarl
dec
or
dec
leave
pop
lds
ljmp
pop
push
mov
ret
cmp
pop
cwtl
or
pop
mov
psraw
adcl
sub
mov
in
roll
imul
or
pop
and
iret
aad
adc
push
cwtl
or
leave
test
shl
test
stc
out
cltd
cmp
inc
or
xlat
and
jns
outsl
jb
in
mov
dec
jge
add
add
push
inc
shrb
gs
imul
mov
xchg
and
pop
mov
daa
inc
and
stc
lods
lahf
lea
rcll
out
stos
adc
out
hlt
call
aaa
daa
inc
gs
cmpsb
icebp
cmp
adc
pop
out
scas
ds
notl
sti
mov
sahf
neg
lock
inc
fwait
mov
fs
adc
dec
mov
ds
jmp
lds
push
scas
fiaddl
jb
lcall
fs
cmp
jg
test
add
sbb
cmp
mov
outsl
jge
adc
mov
xchg
test
xchg
mov
movsl
test
and
add
push
and
cld
mov
movsl
mov
adc
xor
push
insl
xchg
sub
add
lds
orb
lret
in
mov
ss
sub
adc
les
ret
push
jmp
iret
xor
push
jo
dec
in
test
xlat
pop
xor
pop
mov
repnz
add
loope
out
add
out
cmp
aaa
imul
cmp
aas
cmpsb
inc
fstps
inc
lds
add
lods
xor
lcall
lcall
sbb
or
icebp
sarb
nop
xor
fldt
xor
js
int3
testb
fmull
add
xchg
mov
sbb
mov
pop
insb
cmp
repz
xchg
and
pusha
add
push
add
insb
push
xchg
adc
inc
and
and
xchg
sbb
daa
in
insl
dec
xchg
imul
roll
movsl
pop
out
dec
rorb
nop
loope
jg
repz
pop
mov
sbb
jno
xchg
sub
add
or
fwait
adcb
loopne
es
inc
repnz
inc
cmp
sub
pop
in
movsb
xor
fst
in
add
lret
stc
and
adc
pop
pop
ret
mov
imul
sbb
nop
cs
jl
int
fnstenv
jne
in
out
insl
push
inc
jns
sub
mov
out
lods
addr16
lcall
ja
fcompl
stos
out
mov
xchg
fidivs
shrl
mov
divl
sbb
scas
xor
xchg
mov
dec
and
sub
dec
fwait
push
insl
insl
push
push
mov
es
inc
iret
lds
notb
adc
out
stos
sahf
mov
mov
jg
adc
xchg
popf
push
mov
insb
and
xchg
pop
scas
sub
add
shl
lds
dec
scas
pop
mov
mov
aad
add
cld
dec
push
cltd
pop
out
mov
ljmp
mov
cwtl
push
inc
and
mov
jmp
mov
inc
inc
and
inc
jb
sub
fstpl
add
dec
fs
sub
mov
push
ds
pop
test
imul
sub
nop
xchg
repnz
insl
inc
or
out
lds
cmp
test
nop
mov
cmp
dec
in
push
mov
aas
sub
jl
out
dec
sub
inc
es
add
mov
fsubl
push
jg
sbb
inc
dec
loope
ja
aad
rcrb
out
mov
dec
arpl
or
ret
js
sbb
lods
cmpsl
dec
or
addr16
aam
sahf
pop
in
jne
and
push
mov
adc
outsb
push
sbb
or
mov
mov
or
jns
sbb
fwait
insl
jmp
rcrl
and
lcall
and
outsb
mov
pop
xchg
mov
out
loop
inc
test
inc
sbb
dec
sub
shlb
sub
outsb
jle
mov
adc
lods
hlt
iret
fcmovnbe
jb
insl
out
jg
repz
xor
testl
fildl
mov
pop
pop
ja
xor
in
mov
push
xor
shrl
mov
adc
ror
xchg
scas
clc
rcrl
je
iret
pusha
bound
inc
and
fs
in
xchg
je
aaa
lods
jne
cmpsl
mov
out
in
pop
popa
fstl
sbb
fidivrs
jle
sbb
cmc
test
push
jno
movsl
jl
xchg
push
push
cmp
xchg
pop
aaa
xlat
push
cmpsl
cli
pop
dec
dec
xlat
mov
xchg
fnstcw
js
and
mov
push
or
pop
popf
pop
imul
lods
xchg
repnz
insl
sub
dec
stc
stos
fisubrl
dec
fnstenv
push
jb
mov
shrb
scas
inc
aam
data16
dec
pop
ja
rclb
mov
aad
jle
mulb
jns
data16
and
sub
pop
fldt
xchg
sub
or
lods
lds
mov
dec
pop
and
mov
mov
adc
outsb
out
shll
ja
jp
fistps
and
pop
mov
ljmp
xor
movsl
jmp
inc
fisttps
pop
cmp
popf
inc
add
es
je
addr16
lret
out
xor
inc
mov
mov
out
movsb
adc
jb
push
mov
add
cmp
cli
pushf
mov
sbb
xchg
ljmp
cmpsl
xor
mov
addr16
mov
aaa
or
inc
inc
adc
xchg
cmpsl
mov
or
adc
pop
inc
mov
scas
hlt
and
sub
or
cmp
mov
xor
jecxz
push
mov
sub
cmpsb
sar
mov
imul
pop
je
adcb
subl
push
ret
outsl
iret
insl
mov
sbbb
in
rorb
and
test
inc
mov
adc
sbb
adc
nop
sub
mov
cld
clc
repnz
loop
in
lret
movsl
mov
mov
xchg
movsl
lods
imul
jo
in
add
pop
sub
dec
repz
sbb
in
pop
je
fdivrl
lahf
jmp
fwait
cld
arpl
and
dec
mov
fs
sbb
sub
mov
xor
pop
test
sbb
sbb
arpl
test
cmp
sarl
lahf
enter
loope
fwait
scas
or
loopne
cs
push
sbb
xorl
inc
aaa
dec
jl
out
cmp
mov
insl
hlt
sub
popf
add
sub
inc
or
lea
cs
pop
fists
adc
sub
cmp
jecxz
jmp
test
sub
andb
sti
xor
test
shlb
adc
add
mov
data16
mov
cmp
sbb
inc
adc
mov
test
jl
cwtl
jge
stos
xchg
xchg
dec
lcall
cmpsb
mov
iret
addr16
xchg
fdivr
sbb
mov
ret
call
mov
outsl
jae
aas
add
test
ss
repz
xor
xorl
in
shl
push
mov
or
and
mov
add
pop
mov
je
scas
mov
add
orl
insb
or
fisubrs
or
pusha
outsl
xchg
movsb
push
xor
jle
pop
mov
mov
into
popf
sbb
and
fbstp
inc
insb
xchg
pop
cmp
addr16
push
lds
clc
inc
mov
dec
cwtl
mov
popf
mov
xor
dec
push
inc
ds
xor
aam
icebp
test
xorb
inc
aas
mov
out
imul
push
sbbb
fwait
pop
lock
cli
push
and
xchg
cmpsb
lods
push
push
xchg
dec
inc
dec
jecxz
sub
dec
push
outsl
jl
or
ret
cwtl
fcomps
fiadds
lds
push
or
mov
jmp
cmp
push
cmpb
fimull
loopne
mov
fadd
jmp
popf
and
push
rcrb
mov
mov
mov
xor
pop
ret
dec
rol
imul
and
sbb
jns
pop
es
popa
push
xchg
cmp
fdivrs
int
addr16
sbb
sub
popf
mov
fsubr
sti
cli
mov
xor
mov
jp
fisubl
xor
lret
or
mov
sbb
popf
mov
inc
ja
and
rcrl
out
lods
and
dec
or
sub
mov
popf
sbb
fdivs
add
test
jno
les
xchg
lds
pop
outsl
push
xor
clc
mov
pop
push
jae
cmp
ss
xchg
pop
add
dec
icebp
repz
gs
rcrl
lds
ds
or
mov
inc
mov
mov
les
fisubs
repnz
jg
mov
xchg
inc
push
xlat
dec
repnz
je
scas
jecxz
popf
cmpsl
sbb
jb
hlt
out
jb
cmp
test
cld
aas
adc
arpl
ret
js
and
jg
sbb
push
jmp
pop
inc
sti
or
xchg
aam
sub
out
mov
in
lahf
pop
in
mov
mov
repnz
cmp
cmp
mov
aaa
push
add
ret
mov
and
cmp
ret
lods
js
pop
icebp
adc
adcb
sbb
jne
push
sub
movsb
adc
out
std
sahf
repnz
lods
pop
inc
mov
dec
mov
push
push
sarl
push
mov
movsb
mov
dec
jb
pop
pop
cmc
std
or
test
rolb
xchg
xor
mov
jg
repz
push
aas
lcall
mov
adc
and
and
mov
jbe
mov
cmp
xor
sbb
pop
xchg
movsb
mov
or
push
mov
push
fistpl
dec
adc
mov
and
sub
pop
out
cld
and
sub
in
xchg
hlt
leave
dec
push
imul
jg
xor
js
adc
mov
mov
push
add
int3
xor
fdivl
pushf
out
jnp
and
test
shlb
sti
dec
cmp
in
push
mov
es
push
test
inc
fucom
jae
mov
ret
xchg
shrl
xor
fdiv
jbe
ljmp
in
loopne
sub
xor
shrl
mov
adc
sub
pop
movswl
inc
pop
cmp
xchg
repnz
shr
push
sbb
scas
cwtl
lcall
cltd
cmp
je
xor
prefetch
fadd
leave
fbld
aam
loopne
sbb
dec
pusha
cmp
jnp
imul
pop
mov
lods
je
fildl
sbb
or
inc
and
cwtl
mov
ljmp
je
pusha
xor
outsb
lock
sbb
int
movsb
xor
push
jo
inc
fnstenv
push
in
test
ss
mov
nop
aam
mov
lds
mov
adc
mov
es
aas
push
xchg
mov
mov
xchg
add
adc
cmpsl
or
andl
xchg
pop
mulb
mov
add
lahf
repnz
push
mov
add
movsl
sti
dec
jp
loop
loopne
dec
jecxz
movb
dec
loope
mov
and
cmp
lahf
sub
hlt
xchg
mov
jg
inc
or
clc
adc
jmp
add
mov
xlat
out
pop
je
mov
adc
fldenv
add
lret
or
xchg
popa
nop
loopne
es
pop
icebp
movsl
sub
inc
popa
insb
nop
mov
repz
loope
cmp
cmpsb
cmp
cmc
xchg
lock
aas
inc
add
mov
test
lret
test
imul
mov
push
jo
outsb
dec
push
and
cmp
mov
inc
fs
out
mov
adc
rolb
push
stos
xor
gs
fsubs
mov
sub
shr
jnp
push
jns
gs
mov
lahf
jb
push
shlb
imul
mov
subb
or
and
push
leave
adc
ljmp
iret
inc
call
cld
dec
and
in
out
stos
and
inc
movsb
lret
jnp,pt
mov
pop
hlt
add
inc
push
loope
mov
adc
loopne
inc
pop
pop
cld
jl
sub
jnp
fsubrl
arpl
sub
cld
push
mov
inc
pop
stos
cmp
xlat
test
lret
movsb
dec
in
push
and
sub
imul
fldcw
sarl
adc
xchg
lret
sbb
loop
int
push
hlt
or
cmp
or
add
mov
sbb
xor
outsl
cmp
clc
pop
cmp
xchg
sub
adc
xor
adc
inc
lcall
popa
or
adc
gs
jmp
in
cld
xchg
mov
addb
mov
pop
pop
jbe
stos
mov
mov
and
xchg
sub
les
mov
lock
imul
scas
ret
aad
sbb
dec
xchg
xlat
jnp
jecxz
mov
add
mov
push
adc
jne
mov
adc
adc
repnz
fwait
or
hlt
push
imul
fsubs
je
cmpsb
daa
aam
mov
mov
pop
push
push
pop
test
imul
push
sti
xchg
movsl
sub
das
test
add
or
inc
mov
jp
pushf
bound
mov
mov
and
jne
mov
mov
sub
xchg
adc
dec
sub
loop
or
test
mov
data16
lock
repnz
mov
aas
cmp
jl
shll
inc
or
jg
int
fisubrs
pop
sarb
insb
jp
jl
inc
aaa
loopne
or
pop
mov
fisttpll
mov
cmp
and
adc
je
xchg
test
adc
mov
pop
cmp
sbb
aas
adc
xor
aas
je
xchg
ljmp
sbb
pop
jmp
push
jno
lea
sti
into
outsb
mov
faddl
arpl
imul
scas
ret
jle
cmp
inc
xchg
loopne
in
lea
or
sbb
orb
int3
ffree
push
or
in
test
scas
arpl
or
xor
jg
repz
pop
hlt
jns
cmp
add
push
insl
pop
ljmp
sbb
inc
pop
pop
xor
movsb
mov
or
adc
insl
leave
sbbl
mov
leave
or
cmp
pop
loopne
pop
addr16
add
jle
scas
addr16
xchg
push
cmp
leave
mov
mul
out
mov
sarb
popf
xor
out
mov
loop
dec
mov
aam
sub
shr
mov
jle
ljmp
jno
sbb
icebp
movsl
mov
sahf
and
push
or
jae
int3
adc
popw
sbb
call
stos
shlb
xor
and
push
int3
lret
pop
mov
pop
das
ja
add
test
inc
add
addr16
pop
cltd
lret
movq
pushf
std
cmovns
pop
mov
adc
sbb
jle
dec
pop
dec
arpl
aad
dec
jl,pn
test
mov
fwait
ret
ret
les
mov
or
jbe
lds
adc
add
sarb
mov
jmp
out
jle
fnstenv
loopne
adc
jp
sub
push
ja
pop
dec
mov
mov
xorb
mov
daa
or
add
or
xor
aam
cli
push
inc
and
sub
fsubs
add
cmc
shrb
repnz
icebp
pop
cs
stc
pop
sti
jl
bound
sbb
mov
jno
fsubrl
adc
jae
stos
mov
jb
fwait
cmpsl
add
ds
loop
mov
jl
dec
jo
lret
push
ja
push
into
xchg
out
cmp
and
xor
pop
out
outsl
cmp
push
mov
je
dec
dec
adcl
cmp
cmp
mov
xchg
push
push
fiaddl
dec
xor
jg
and
test
clc
lods
andb
mov
cmp
jecxz
jle
push
ret
ror
testl
imul
fnsave
mov
jb
mov
aas
jae
push
test
push
jg
sar
sahf
pusha
ja
imul
push
adc
rcrl
add
jno
aaa
mov
xor
sbb
jae
pop
enter
adc
enter
mov
js
icebp
and
iret
cs
mov
mov
inc
lcall
pop
decb
scas
xor
jp
pop
mov
cs
xchg
push
mov
addr16
leave
popf
mov
xchg
mov
scas
icebp
jecxz
dec
cmp
ds
add
add
or
lea
mov
xchg
jb
push
addr16
lret
leave
iret
xor
gs
mov
popa
pop
outsb
push
pushf
test
push
mov
ret
xor
push
pushf
jmp
jp
mov
add
rcr
in
or
jns
loop
je
icebp
mov
push
xchg
mov
fst
rclb
xor
xor
add
xchg
ficomps
lcall
out
cmpsl
xor
pop
inc
adc
xchg
cmc
sbb
dec
movsb
mov
int
and
or
or
cltd
mov
fs
outsl
ja
push
push
add
popa
xor
mov
push
inc
pop
xchg
rol
es
push
test
jbe
and
push
lds
outsl
decb
xchg
sbb
push
inc
pop
lret
ret
shll
out
push
je
lock
inc
mov
dec
inc
jmp
jl
mov
sbbb
adc
les
adc
inc
stos
rcl
jge
aas
push
mov
pusha
arpl
sbb
lret
loope
jle
cmp
sub
sbb
aad
add
sbb
mov
mull
sub
push
jo
shll
sub
dec
pop
cmpl
rcrl
push
js
cmpsb
fisubrs
fucomp
in
stos
xor
push
ret
in
push
pop
xor
das
lock
int3
jle
aas
mov
pop
test
into
adc
or
dec
mov
fwait
push
in
int3
adc
test
bound
dec
fisttpll
in
mov
outsb
jl
inc
in
std
test
dec
pop
lds
loop
bound
mov
jb
and
lods
xchg
shlb
pop
adcl
ret
loop
push
sti
pushf
pop
cmp
pop
mov
pop
xor
jbe,pn
mov
and
mov
dec
pusha
dec
lods
xchg
icebp
movsl
cltd
out
sub
pop
cmp
push
adc
and
sub
sbb
or
mov
add
bound
and
fimuls
jmp
jne
mov
or
rol
fdivrs
sahf
outsl
out
lds
out
lret
popl
dec
fdivl
mov
jge
aas
push
arpl
popf
ss
adcl
jmp
dec
cmpxchg
push
loopne
stos
ja
pop
int
xchg
js
in
outsb
fisttpl
filds
mov
movsb
dec
insb
pop
add
test
aas
push
divl
out
mov
pop
imul
ja
cmpsl
push
dec
inc
dec
pop
out
shlb
push
mov
sahf
stos
jnp
mov
arpl
cmp
in
outsb
sub
xchg
mov
cmp
dec
pop
sahf
mov
mov
sbb
sarb
pop
lea
mov
pop
push
in
adc
cltd
cmpl
movsl
fsubrl
xor
and
xor
fiadds
test
and
sub
fistps
shrl
arpl
push
dec
ljmp
mov
insl
mov
arpl
movsb
rcrb
add
arpl
mov
push
cmp
jle
std
in
daa
add
shrb
gs
xor
xor
jecxz
adc
xor
jge
push
sbb
loope
pop
ljmp
mov
jo
pop
lock
ja
fildll
dec
lds
or
inc
lahf
xorb
call
mov
out
popf
sbb
popf
xor
xchg
mov
mov
push
lea
cmc
mov
adc
jge
xor
pop
mov
enter
mov
mov
push
adc
cmp
pop
cs
in
iret
loope
and
jo
mov
ret
mov
call
outsl
iret
pop
xor
dec
sahf
in
test
insl
xor
push
jge
fwait
daa
inc
push
jmp
in
jmp
xchg
sbb
sahf
push
jl
adc
aas
and
xlat
pop
nop
andl
stos
jno
gs
nop
faddl
jb
or
int
outsb
je
ss
int
mov
mov
mov
scas
outsb
sub
mov
mov
hlt
lcall
nop
cld
push
dec
xor
and
jne
xchg
out
into
and
sub
dec
jp
jmp
stos
jp
push
jg
cmp
popf
mov
or
inc
pop
cmpsb
mov
xchg
dec
sub
xor
add
leave
xor
jp
pop
and
pop
cmpsb
repnz
cmpsl
dec
dec
xchg
outsl
mull
inc
enter
popa
icebp
mov
xor
push
mov
pop
pop
push
xchg
sub
imul
dec
jle
hlt
scas
out
shrl
fidivl
or
push
decl
mov
fstpt
cmp
pop
out
xor
cmc
sbb
adc
insb
inc
push
popf
icebp
ret
mov
jmp
outsb
add
imul
add
jnp
push
xor
mov
scas
popf
gs
mov
xorb
jg
ja
push
lea
cltd
cmp
in
pop
sbb
sub
gs
sub
sub
scas
arpl
pop
xchg
stc
int3
mov
xchg
sbb
loop
neg
jmp
jno
imul
add
fdivrs
xor
leave
movsb
movsb
rcr
cmp
jb
shl
xchg
fcomps
jg
adc
je
and
inc
cmpsl
ret
xchg
rcrl
neg
mov
fcos
fucomp
shlb
fisubrl
sbbb
rclb
icebp
dec
and
sarl
add
xchg
rcrl
mov
mov
mov
add
data16
cmpsl
std
add
and
cmp
sub
inc
arpl
inc
pop
add
lods
clc
ss
and
sbb
fsubs
or
sub
leave
mov
stos
lods
stc
or
or
movsb
hlt
aad
fdivrs
aam
jns
dec
dec
fildll
jecxz
mov
push
gs
test
jae
popf
inc
push
imul
mov
mov
das
test
insb
and
push
inc
xor
sbb
mov
cmp
xlat
fucomi
pop
lea
sbb
pop
xchg
adc
mov
adcb
fidivrs
push
mov
push
in
inc
dec
sub
leave
push
cmp
pop
sub
jmp
cmp
mov
inc
push
dec
out
clc
mov
xor
push
in
add
movsb
stc
inc
es
insb
pop
call
xor
sub
fwait
xchg
sbb
mov
daa
xor
clc
dec
push
xor
sbb
mov
mov
mov
cwtl
das
jmp
loop
push
xor
push
mov
mov
jmp
fdivrs
mov
jbe
fstps
push
inc
dec
aaa
dec
out
and
out
cmp
je
adc
sbb
jmp
aaa
mov
jae
out
les
cmpsl
sbb
cli
les
hlt
pop
mov
bswap
xchg
hlt
inc
jbe
mov
xchg
and
sub
dec
adc
jg
addl
ss
pop
cmp
cwtl
aas
std
push
sub
loopne
jle
mov
sub
inc
outsl
mov
inc
jmp
adc
adc
add
mov
outsl
inc
repz
mov
xchg
mov
pusha
mov
addr16
out
sti
fisubs
adc
or
out
outsb
shll
mov
es
pop
lret
pop
ss
pop
stos
xchg
pop
mov
fsubl
lret
iret
cwtl
std
push
inc
cmp
jb
jmp
cmp
cmpsl
or
cmp
sbb
xlat
shlb
and
push
or
adc
outsl
inc
or
scas
jge
lds
not
mov
and
cmpsb
push
mov
pop
sub
mov
lods
dec
and
clc
push
mov
ja
jmp
or
stc
dec
test
loopne
jl
mov
in
imul
dec
cvtps2pd
pop
nop
cmp
or
push
cmp
dec
stos
inc
rclb
push
push
add
int
dec
test
xor
std
xchg
mov
aaa
int
jecxz
add
inc
in
sub
popf
dec
test
testl
jb
addl
out
aam
xor
bound
jb
inc
mov
shr
nop
adc
pop
mov
xor
adcl
cltd
out
xor
sti
xchg
popa
mov
pushf
mov
inc
pop
mov
sarl
dec
arpl
inc
outsl
shl
add
cs
sahf
outsl
add
jbe
fsubrl
aad
cld
inc
lds
mov
push
fdiv
mov
ds
std
loopne
nop
aam
push
adc
pushf
arpl
inc
test
outsl
inc
shlb
notb
jmp
aaa
add
insb
sub
cmpsl
push
sbb
or
loop
ja
adc
imul
loope
mov
movsb
imul
bound
or
jle
xchg
jo
fs
jno
nop
mov
mov
mov
test
sbb
xchg
popl
cmc
int
jo
mov
jo
shll
adc
leave
pop
sub
imul
xor
fcoms
loope
lods
adc
es
push
dec
xor
and
cltd
adcl
out
add
pusha
adc
jae
sbb
mov
push
push
jl
sub
repz
xchg
pop
xchg
pop
add
daa
movsl
cld
inc
jno
lock
and
mov
fstpt
insl
sarl
fistpl
or
ss
add
add
iret
sub
push
lods
mov
mov
fmuls
cmpsb
leave
test
mov
shlb
mov
dec
ds
aam
or
sbb
pop
adc
ret
xor
in
and
notb
xor
fucomip
test
mov
ds
fimull
jnp
lret
cmpsb
mov
cmp
jle
fwait
mov
sbb
imul
in
xor
cli
or
roll
jecxz
and
mov
fadd
sbb
xor
mov
bound
xchg
insb
lea
cld
inc
adc
out
mov
cwtl
sbb
clc
mov
inc
arpl
ljmp
out
cmpsl
and
sahf
addr16
pop
and
in
addr16
imul
jne
popa
cmpsl
cmp
cltd
insb
cmp
or
inc
xchg
call
push
out
cmp
outsl
dec
lods
xchg
mov
sbb
arpl
inc
pop
imul
lds
cmpsb
js
packsswb
and
mov
das
cmp
fimuls
push
in
js
xor
mov
add
imul
xchg
shrl
push
aas
daa
ja
in
push
cmpsl
xchg
cmpsl
xor
repz
stos
xor
jmp
jmp
jmp
fistps
mov
dec
ret
push
sub
imul
xor
pop
inc
push
ss
clc
notb
inc
push
push
add
push
dec
dec
aad
jne
xor
rol
andb
loop
js
movsl
je
xor
cmp
mov
sarl
mov
inc
ficoms
cmp
imul
out
xchg
lods
aam
fwait
stos
or
mov
sbb
pop
xchg
fs
enter
int
inc
sbb
pop
add
imulb
pop
adc
jnp
dec
pop
sub
xchg
pop
xor
outsb
rcrb
mov
add
out
loopne
sub
aaa
dec
in
mov
push
cmp
test
adc
push
dec
orb
ret
rorb
mov
jecxz
pop
cmp
jecxz
sbbl
adc
insl
outsb
dec
lods
push
pop
or
sub
arpl
push
inc
xchg
sub
icebp
mov
in
sub
xchg
fmul
pushf
mov
mov
scas
imul
in
imul
mov
movb
int3
fdivrl
scas
push
push
int3
test
incl
aam
ljmp
and
data16
int3
dec
and
call
shrl
and
xchg
jb
inc
mov
scas
jne
subb
or
out
or
add
movsb
movsl
stos
add
sbb
lret
lods
jo
outsb
dec
nop
sbb
or
sti
rorl
notl
ljmp
mov
out
mov
mov
pop
addr16
mov
pop
cmp
sub
mov
test
mov
aam
mov
leave
ret
leave
xor
and
xchg
adc
mov
sub
cwtl
xor
mov
mov
clc
fs
fimull
test
ficomps
pop
fwait
mov
out
cmpsl
inc
dec
cli
adc
sbb
mov
push
loopne
push
jbe
loope
gs
dec
mov
imul
dec
mov
xor
insl
add
ljmp
and
mov
sub
add
mov
sub
out
mov
shlb
test
jns
fnstsw
ret
adc
icebp
cmp
test
jne
sub
popf
adc
aas
jb
cmp
push
out
psrad
jbe
xchg
popa
shr
inc
or
lcall
cwtl
gs
push
out
adcb
shlb
shr
xlat
data16
stos
les
xchg
popa
lret
fnsave
add
call
mov
ja
stc
pop
aam
hlt
mov
sbb
xorb
push
pop
in
sbb
insb
pop
xor
jno
push
shl
data16
jb
push
sbbl
pop
jno
xor
mov
push
test
popf
mov
arpl
cs
out
into
repz
rorl
sub
out
lcall
dec
push
shrb
xlat
aad
or
repz
fistps
scas
sub
cld
inc
or
xchg
sbb
iret
cli
cmp
sub
add
dec
dec
and
cld
xchg
mov
cltd
inc
enter
mov
sub
add
adc
jecxz
pop
xor
cmp
incl
and
into
shlb
add
hlt
adc
outsb
inc
pushf
or
dec
in
sub
lods
cltd
les
mov
cmc
adc
movnti
xor
xchg
xchg
scas
popf
sub
and
mov
andl
dec
fs
jbe
xchg
arpl
xchg
addl
adc
mov
cmp
int
xor
ljmp
nop
lea
mov
lret
xchg
xchg
nop
push
push
sub
mov
jmp
dec
fcmovne
sbb
aaa
push
loopne
stc
pushf
daa
mov
sub
fs
cltd
insl
movsl
cld
or
sbbb
jbe
pop
sbb
mov
xor
sarb
and
lret
pop
dec
inc
sub
jmp
push
out
jnp
adc
cmp
popa
sub
adc
nop
clc
and
mov
adc
stos
sbb
jae
push
push
xchg
push
out
pop
inc
dec
mov
inc
gs
aam
add
fnstcw
push
int
pop
jmp
lret
lea
add
orb
jge
aad
mov
cs
push
pop
xor
sub
push
outsl
inc
data16
pop
pop
stos
int
arpl
cmc
out
sbb
push
out
mov
mov
stos
shll
popa
into
xor
jb
push
sub
out
outsb
lahf
dec
or
mov
push
push
jne
adc
mov
fcoml
mov
cs
mov
xor
neg
psrlq
aas
mov
jno
mov
sbb
jmp
sbb
aam
sti
mov
sbb
aad
jb
pop
fdivrl
loopne
xor
and
int3
and
inc
jns
cmp
dec
add
xor
call
in
cmp
repz
fwait
and
imul
int
dec
inc
sbb
call
mov
out
rolb
imul
pusha
out
add
mov
insb
adc
jge
xchg
fstpl
jecxz
cmpsb
fnstsw
pop
fidivs
fbld
cld
sub
das
adc
xchg
sbb
xor
xchg
mov
xchg
std
dec
orb
out
out
ror
popf
xchg
ror
jmp
mov
mov
xlat
and
inc
pop
roll
mov
jnp
pop
add
std
jl
icebp
pop
and
mov
mov
inc
and
inc
fwait
into
mov
imul
add
int
sbb
pop
data16
cmpsb
push
cmp
push
mov
fsubl
rol
ror
pop
cmc
loop
int
push
or
mov
xor
insb
xchg
adc
xchg
sbb
lds
rorl
or
mov
das
repnz
or
mov
aas
pop
cmpsb
je
cmp
ds
jecxz
push
stos
pop
cmc
out
lock
subb
arpl
in
or
jl
push
add
push
cmp
cmpsl
sbb
jle
lret
scas
out
inc
inc
mov
dec
les
xchg
mov
dec
sub
xor
jb
jmp
repnz
mov
push
sbb
loopne
sbb
mov
iret
fildll
pop
or
add
and
sbb
stos
mov
cmp
pop
cmpl
nop
mov
stc
pop
or
xchg
jle
test
in
dec
loopne
ret
loopne
push
inc
pop
sbb
fyl2x
cli
mov
fwait
shrb
int
in
icebp
push
add
dec
cltd
lods
cltd
outsl
ficoml
shrl
dec
sub
sub
mov
cs
fldt
lds
push
mov
outsl
repnz
sub
dec
and
add
aas
neg
inc
fmull
push
out
ret
and
divps
rorb
das
pop
sbb
cmc
int
loopne
mov
setle
dec
imul
hlt
shl
addr16
dec
loopne
insl
xchg
popa
sti
cmp
mov
jecxz
add
sub
fcmovne
pusha
or
insb
jb
pop
jno
ljmp
rcrl
xlat
mulb
movsb
mov
inc
pusha
or
adc
iret
pop
mov
ljmp
in
lods
pop
cmc
fimuls
decl
lods
out
call
popf
gs
fidivs
and
out
push
out
pop
add
in
out
and
nop
nop
imul
or
cmp
cmp
cs
xlat
adc
mov
cli
sbb
nop
pop
jl,pt
daa
mov
sub
dec
cli
add
aad
adc
arpl
add
sarb
adc
in
xchg
int
pop
xchg
xor
setns
jae
and
shlb
cmp
fdivl
push
aaa
inc
ret
or
in
loopne
and
sub
cmp
add
loope
push
in
jae
out
xor
mov
sbb
inc
fisttpl
xor
push
or
mov
sbb
adc
xchg
pusha
inc
pop
subb
fwait
sub
test
lret
arpl
or
clc
push
addr16
fldl2t
imul
and
xorb
cmp
jmp
jns
aam
ret
cmc
in
push
mov
mov
test
xchg
inc
dec
inc
jmp
loope
into
gs
dec
cmp
dec
pusha
aad
aam
cmc
mov
cld
sub
xor
or
repz
or
sahf
imull
xchg
pusha
push
int3
jb
xor
xchg
mov
and
ljmp
pop
movsb
jmp
pop
jg
cmp
lock
into
and
add
adcl
cmpsl
repnz
dec
cmp
outsb
and
testb
xchg
adc
dec
lds
das
imull
stos
sbb
mov
push
cwtl
fiadds
mov
call
jg
sbb
inc
lea
aam
pop
pop
sub
jb
pusha
rcll
add
insb
mov
push
stos
mov
arpl
mov
lods
rol
xchg
ret
int
jl
fsub
cmp
cwtl
push
adc
loop
sbb
xor
in
sbbb
xchg
loope
push
and
in
addb
push
mov
sahf
icebp
mov
cli
push
es
adc
lahf
cmpsb
xor
or
adc
mov
sub
or
dec
ja
pop
arpl
test
lock
xchg
fucomp
es
jae
pop
cmc
leave
xchg
mov
addb
and
lods
mov
scas
jg
mov
mov
push
xchg
rcr
sti
push
mov
outsb
int3
mov
in
std
andl
int
leave
or
jno
clc
test
sbb
push
or
aam
cmp
ja
lahf
hlt
xchg
cltd
pop
lock
mulb
xchg
cmp
movsl
mov
in
std
sbb
xor
aad
orb
xor
fs
outsb
xchg
sub
mov
insl
out
pop
out
jp
xor
xchg
movsl
mov
fnsave
fldt
call
insl
xor
sahf
popf
adc
outsl
in
cs
gs
negl
jp
pop
sub
inc
mov
orl
or
ja
test
outsl
dec
sbb
sarl
dec
into
add
int
fs
inc
inc
pushf
push
xchg
xchg
fadd
ficompl
lods
cmp
pop
sbb
mov
dec
mov
cmpsb
cld
mov
in
cmpsl
xorb
mov
mov
cmp
mov
leave
movb
mov
fisubs
pop
aas
cli
push
out
jle
dec
mov
pop
cmp
mov
stos
fs
jmp
movsb
adc
sub
vsubss
pusha
mov
insl
into
pop
insb
sti
ss
data16
or
xchg
sbbl
sub
sbb
sahf
movb
adc
jge
xor
push
add
mov
stos
xchg
xor
xor
cmp
cmpsb
pusha
testl
xor
clc
stos
loop
pop
popf
stc
hlt
dec
sub
adc
dec
add
jbe
scas
pushf
das
push
je
lock
scas
xor
dec
insl
call
sub
es
mov
cmp
mov
xchg
cmp
mov
pop
incl
loop
jnp
nop
xchg
xlat
mov
inc
enter
sub
cwtl
das
aaa
mov
xor
loope
fcomps
mov
addr16
out
rcr
ja
lret
pop
mov
jnp
stos
sahf
outsl
push
ss
inc
push
fistpll
fidivrs
and
pushf
fistps
push
test
js
test
xchg
inc
fnstcw
mov
sub
pop
pusha
lods
mov
add
sbb
ljmp
stos
mov
cltd
lret
lods
lret
mov
leave
fldcw
outsb
sbb
or
sbb
daa
add
push
push
test
je
mov
sub
mov
xor
outsl
xor
mov
or
test
sbb
add
addr16
imul
sub
and
out
rcll
mov
dec
jnp
sbbl
clc
iret
lahf
pusha
push
xchg
mov
xor
bound
dec
push
lock
and
push
mov
shrb
shlb
jb
in
dec
pop
pop
inc
and
mov
cld
sbb
hlt
daa
mov
lcall
mov
lret
jecxz
sahf
and
out
test
xchg
sub
sub
sub
mov
aaa
push
dec
out
test
aam
scas
insl
add
jo
mov
xchg
unpcklps
jb
xchg
cltd
jne
inc
mov
in
hlt
cmpsb
xchg
fstpl
dec
mov
sbb
sahf
les
inc
mov
mov
mov
je
test
mov
xor
adc
sub
jb
mov
push
lods
ljmp
push
or
jns
inc
fdivrp
xchg
jecxz
lds
pop
loope
outsl
cwtl
cwtl
dec
icebp
xchg
test
popa
add
outsl
and
pop
dec
mov
out
push
sahf
dec
loop
aas
out
std
push
lcall
mov
daa
mov
andl
pop
insb
inc
in
push
movsl
orb
sub
in
inc
bound
sahf
xor
outsb
mov
ret
cmovl
sti
jge
dec
dec
in
cmp
shll
sub
mov
sub
pop
lock
imul
dec
decl
xchg
jp
pop
out
mov
cmpsl
cmp
les
xchg
shrb
fidivrl
mov
jo
sahf
lea
fdivp
mov
les
faddl
pop
adc
rclb
cmpsb
and
test
fisubrl
and
xor
idivl
cltd
mov
call
push
sbb
insb
mov
aad
adcb
push
sbb
test
cli
xchg
cwtl
imul
lret
lret
gs
mov
pop
stos
and
cmp
mov
bound
or
mov
add
lds
and
les
aas
rol
jecxz
hlt
adc
pop
hlt
popf
cmp
insb
jle
sti
out
mov
dec
shll
sbb
shlb
or
cmp
fdivs
push
out
movl
jecxz
stos
pop
cmp
add
and
mov
push
mov
iret
xor
xchg
inc
cld
mov
mov
rolb
outsl
push
out
sbb
mov
arpl
inc
cmp
add
test
mov
sub
dec
and
inc
fiadds
frstor
push
loope
fwait
jae
jae
mov
push
in
ja
push
dec
dec
adc
fstl
outsb
ficomps
mov
push
xchg
dec
or
or
out
addb
push
arpl
sbb
test
out
or
sub
xchg
hlt
or
daa
sub
jl
or
mov
into
cmp
cmpsb
stos
cld
sub
stc
add
enter
adcb
rcrb
clc
fidivl
cmp
rorl
adc
das
imul
mov
lea
stos
inc
inc
fs
shrb
mov
sub
int3
lock
mov
add
lea
xor
xlat
and
mov
test
push
sub
rcr
sbb
sub
scas
movsl
jne
scas
or
push
les
sarl
cwtl
insb
jge
xchg
pop
lcall
fsubr
inc
es
jae
inc
popf
cmp
add
or
mov
xchg
inc
es
addb
xor
scas
clc
mov
imul
jnp
icebp
add
push
or
dec
pop
inc
sub
jne
popa
loopne
adc
cld
adc
jle
dec
mov
cmp
pop
dec
ficoml
scas
inc
scas
in
fiaddl
lea
push
push
push
in
cwtl
test
cmp
lea
repz
mov
dec
jp
adc
sub
and
mov
dec
bound
push
arpl
adc
xchg
popf
sub
mov
mov
out
in
test
jle
es
and
mov
or
inc
sbb
cs
addr16
cmp
out
xchg
ds
jbe
fisubs
cmpsb
cmpsb
jbe
int3
loop
jg
dec
loop
jnp
aad
cld
inc
bound
push
pop
mov
mov
mov
ljmp
cli
int
data16
shl
push
xor
mov
xor
mov
hlt
mov
aad
mov
inc
inc
bound
sbb
mov
xor
jg
xor
sbb
jbe
mov
clc
leave
xlat
ljmp
mov
xor
repz
mov
or
jnp
pop
xor
nop
in
dec
dec
xor
xchg
sbb
lds
mov
cmpsb
dec
and
xchg
ljmp
in
mov
and
xchg
cs
xchg
aas
inc
adc
jno
pusha
cmp
mov
roll
stos
mov
in
push
mov
enter
andb
movsb
pop
stos
sbb
test
inc
movntq
pop
jmp
jl
int3
lods
adcl
mov
ss
ret
push
sbb
inc
xor
fistpll
mov
cmpsl
fnstcw
and
push
out
gs
xor
jne
iret
and
dec
adc
mov
cmpsl
mov
push
loope
scas
lock
leave
push
inc
loop
mov
imul
or
mov
call
lcall
add
out
ds
adc
mov
lret
loope
jmp
ja
pop
inc
fmuls
fsubl
sbb
stos
cmp
push
rcr
es
sbbl
sbb
xor
hlt
and
cmp
add
jge
ja
shr
mov
pushf
arpl
jbe
or
addr16
push
add
jae
int3
pop
jae
cmp
test
aas
ljmp
pop
cmc
mov
mov
rclb
out
jge
mov
xchg
call
mov
cmc
jl
out
xchg
pop
jns
stc
mov
test
cmp
pop
dec
or
rclb
ret
sub
mov
in
jae
and
fdiv
mov
mov
adc
test
xor
xor
mov
lods
cmp
mov
mov
inc
pop
and
fsubs
jg
call
mov
lds
andb
pop
mov
adcb
ja
cmp
adc
popf
sub
and
and
fsubs
adc
cmp
sti
xorb
idiv
and
mov
xlat
into
faddl
fsubrl
jnp
push
lods
mov
es
repnz
push
cmp
xor
sahf
orb
xor
popa
xchg
mov
push
bound
pop
adc
orl
cli
or
mov
add
dec
andl
lea
push
add
push
adc
into
push
stc
outsb
outsl
sub
nop
sbb
dec
ds
mov
jbe
xchg
mov
shrl
sub
add
mov
push
daa
and
insb
xchg
imul
mov
in
push
push
inc
ljmp
insb
cmp
sub
adc
push
loop
das
adc
roll
data16
sub
andl
adc
sbb
fmul
pop
out
sub
inc
inc
lahf
sti
push
mov
lahf
div
xchg
add
xchg
in
addl
jne
je
movsl
push
inc
push
sbb
push
movsb
adc
aaa
mov
lods
or
jno
into
xchg
into
push
add
arpl
sahf
mov
mov
jecxz
out
test
mov
and
std
cltd
test
std
hlt
pop
mov
adc
aad
pop
sbb
jp
push
addb
and
pop
pop
mov
loopne
inc
sbb
mov
data16
jecxz
faddl
out
into
imul
cmp
xchg
inc
adc
in
test
xor
or
in
push
arpl
loope
repz
mov
rorl
lock
in
inc
faddl
and
mov
jno
xlat
psubsw
sbb
mov
test
out
mov
hlt
mov
daa
lea
mov
adc
jns
bound
inc
pusha
push
fisttps
pop
jp
cmp
je
das
add
aad
rcrb
sub
cli
xor
sbbb
pop
loopne
inc
jl
rcrl
cmp
jg
jl
notl
mov
mov
cmp
outsl
pushf
push
nop
dec
dec
repz
inc
jmp
loop
pop
adc
popf
pusha
push
nop
insl
mov
pop
scas
mov
movsl
or
jecxz
sahf
mov
mov
es
rcrl
and
mov
std
shl
pop
pop
sub
ss
ljmp
jge
ficomps
cmpsb
test
int3
arpl
cmpsb
ljmp
cmp
stc
pop
cmp
pop
push
xor
nop
adc
mov
sbb
add
aas
push
fbld
lret
adc
clc
hlt
inc
push
jmp
mov
fiaddl
popf
or
and
pop
outsl
loop
lret
lods
mov
sub
xchg
addr16
cmp
movsl
outsl
loope
inc
pop
pop
sub
push
cmp
mov
sbb
lods
adc
push
dec
adc
jo
repnz
sti
cmp
jecxz
inc
push
mov
mov
pushf
and
push
add
ss
inc
leave
inc
loopne
repnz
xor
mov
push
jo
out
clc
lahf
jo
daa
xor
ja
jo
xor
and
sub
je
dec
cmpsb
mov
shl
push
add
mov
xlat
xor
cmpsb
cmp
add
inc
mov
repnz
jbe
mov
les
into
gs
mov
and
mov
adc
cmp
add
mov
push
push
sti
pop
icebp
icebp
mov
mov
add
das
popf
cmp
mov
in
xor
shlb
insl
lret
addr16
nop
in
push
outsl
lcall
mov
dec
push
dec
mov
inc
cltd
mov
sbb
mov
mov
xor
aaa
dec
mov
aam
pop
movsb
cmp
fstp
je
add
sub
and
ret
adc
xorl
jl
push
insl
sbb
std
sbb
lods
test
pop
xor
lret
jnp
mov
popf
xor
call
in
fwait
mov
push
jb
dec
scas
fs
stc
fdivrs
repz
cltd
pop
test
add
ret
cmpsb
in
jmp
jp
or
je
mov
pusha
sbb
mov
dec
or
fs
cwtl
out
xor
inc
addr16
xor
push
std
mov
aam
scas
out
dec
fbld
or
in
sarb
repz
push
lcall
mov
add
and
out
inc
test
dec
cmp
cmpl
pop
inc
push
leave
cmp
pop
and
mov
sub
das
testl
pop
out
mulb
cmp
in
sbb
xchg
stos
add
out
dec
and
lret
and
inc
shrb
xchg
or
cmp
mov
cmpsb
lahf
ret
cmpsb
test
jp
je
lds
sub
aam
scas
mov
shlb
clc
fwait
and
cld
push
adc
repnz
jne
loop,pt
adc
pop
fdivl
lds
gs
mov
adc
push
sbb
and
cwtl
add
xor
fs
ss
inc
shlb
out
rorb
sarl
cli
push
fsubrl
mov
push
sti
mov
dec
ljmp
cmc
cld
lahf
arpl
hlt
cmp
sti
sbb
in
daa
popf
cmp
lret
in
add
dec
or
lods
xor
and
push
xor
rorl
ja
mov
mov
faddp
mov
scas
adc
outsb
cmpsl
roll
mov
pop
xor
jbe
jns
add
cwtl
outsb
sarl
insl
jmp
dec
aad
rclb
sti
and
and
sahf
ret
pop
add
in
ja
fmull
jmp
mov
pop
push
ret
add
dec
lret
cmpsl
data16
in
push
hlt
adc
jnp
jo
pop
jmp
xchg
ds
inc
out
xchg
adc
cmc
pop
xor
je
addl
negb
test
or
rclb
arpl
subb
add
mov
out
xor
cmpsl
mov
adcb
mov
and
fwait
stc
sub
or
sbbb
adc
and
dec
rclb
cli
mov
cmp
push
ljmp
lock
stos
pop
fsts
mov
or
mov
mov
xchg
sub
mov
inc
xor
ss
in
cmp
xor
push
cmp
jbe
sub
xor
or
add
push
aam
or
cmc
mov
daa
in
mov
incb
shrl
inc
frstor
push
fistpl
lods
int
push
pop
jns
xor
adc
loop
mov
in
les
jo
lea
fadds
lods
ret
fisubrs
test
adc
addr16
js
xchg
shl
clc
sbb
mov
loop
call
pushf
mov
test
jb
in
fwait
imul
ljmp
pop
into
xchg
mov
inc
sbb
or
or
fcom
add
cmpl
cmp
xor
xchg
adc
cltd
int
jae
in
xor
push
cltd
imul
cld
mov
jnp
sbb
adc
xchg
sbbl
dec
insl
in
dec
inc
cmp
sarl
sbb
cmp
push
imull
adcl
or
stc
scas
mov
jle
jge
scas
pop
es
loopne
dec
repnz
xor
outsl
cmpsl
adc
add
mov
mov
fadd
xor
push
mov
fidivrl
add
or
xor
int
fidivrs
lock
xchg
jge
aam
cld
fidivrl
dec
xor
andl
push
in
fisttps
mov
inc
sbb
sbb
lea
fwait
cld
jb
adc
cmp
mov
cmp
not
pop
jecxz
ret
pop
sbb
in
mov
push
inc
loop
sub
stos
inc
jle
sahf
lods
pop
dec
mov
arpl
jo
out
call
and
clc
in
cld
mov
xchg
xchg
in
jg
mov
lcall
aas
jp
push
popf
sub
movsl
mov
add
mov
mov
inc
rcrl
in
ret
iret
adc
cli
ds
push
out
or
cmpsl
aam
xchg
stos
pop
stos
sbb
stc
cmpl
add
jae
dec
loopne,pt
lret
xlat
and
cmp
scas
jp
je
jb
ss
cmp
shrb
into
gs
notl
cwtl
loope
in
cmp
and
mov
in
jp
push
jo
mov
push
push
movsl
mov
jp
out
xchg
leave
test
jl
loop
push
mov
inc
aaa
ret
std
movsb
jp
pushf
movsb
cmp
pop
icebp
adc
ret
mov
dec
test
mov
adc
cmp
inc
sahf
xor
daa
or
xchg
sarb
add
xchg
notl
cld
enter
aaa
dec
pop
dec
ljmp
out
imul
es
scas
inc
inc
sbb
jl
sub
lcall
jecxz
pop
fdivl
add
mov
push
jp
sbb
popf
fwait
sbb
xchg
push
and
in
imull
imul
jbe
outsb
orb
scas
or
sarb
xchg
sub
pop
pop
cmpsb
insl
push
add
fucomip
mov
arpl
loopne
je
stc
push
push
addl
push
xchg
dec
sti
jbe
cmp
sub
inc
lcall
and
cmpsl
push
ljmp
jno
sub
loop
bound
clc
mov
sub
push
push
mov
lods
and
and
jle
sub
sbb
xor
sub
push
mov
std
test
mov
adc
loopne
mov
mov
and
test
clc
lods
jbe
dec
pop
mov
xor
xchg
push
mov
idivb
in
xorl
adc
loop
jge
lcall
shll
mov
pop
shlb
push
xor
shll
mov
xchg
insl
hlt
adc
dec
inc
cmpsb
mov
xlat
rclb
call
fidivs
cmp
iret
divl
inc
push
sbb
ljmp
fidivs
and
dec
xor
popf
cmp
dec
les
insl
lds
scas
xchg
mov
mov
xchg
ja
mov
push
or
stos
push
cli
pop
cmp
mov
fisubrl
les
popa
lcall
cs
push
add
hlt
push
cs
pop
cwtl
repz
das
popf
xor
cmpsl
push
add
aaa
mull
xor
sbbb
inc
lcall
test
inc
mov
sub
aam
mov
insb
cmp
ljmp
add
add
test
xchg
andb
shll
sar
pop
xor
pop
into
or
gs
mov
push
xor
sbb
xchg
clc
inc
cli
loopne
push
ljmp
jno
repz
mov
frndint
fwait
mov
sbb
cli
dec
das
pop
push
fs
rsm
lds
push
ljmp
insb
cmp
xchg
ret
xlat
pop
sbb
ret
mov
jecxz
stos
ret
cmpsl
add
test
insb
add
test
mov
fwait
xlat
xlat
add
adc
insb
add
fcomps
das
jb
sbb
inc
dec
cmp
data16
xchg
cltd
je
and
inc
call
repnz
mov
jno
ds
xor
push
shll
mov
adc
lret
repz
adc
mov
shlb
and
rcr
imul
and
dec
mov
testb
adcl
cmp
lock
dec
dec
mov
push
test
mov
in
xchg
sbb
cmpsb
enter
sub
adc
out
notb
xchg
jnp
mov
sbb
dec
lcall
repnz
sbb
imul
jbe
fwait
cs
push
test
inc
pusha
scas
jno
fs
shll
push
push
jmp
les
jl
mov
xchg
sbb
pushfw
jmp
in
inc
push
mov
rclb
dec
loopne
fmulp
imul
ljmp
cmc
xchg
fnstenv
fdivrs
push
fistpll
jl
mov
xor
shlb
insb
shrb
into
scas
or
fdivs
xchg
jb
movsb
mov
aam
lds
pop
fs
mov
ja
inc
xor
loope
and
mov
inc
or
dec
push
dec
lahf
adc
testl
or
adc
or
jb
je
push
test
or
inc
sub
movsl
call
cmp
imul
push
xor
cmpsb
jp
push
fidivrs
je
sbb
pop
movsl
sbb
and
or
add
xor
inc
jns
test
ds
out
test
ret
sbb
dec
dec
test
out
mov
pusha
data16
leave
dec
fsubrl
imul
js
cld
aam
sahf
cwtl
das
shl
pop
stos
cltd
xor
lds
jp
dec
sub
aad
dec
leave
fidivs
out
mov
fbld
fiadds
lret
test
aam
sub
cmpsl
cmc
cmp
stos
subl
sub
xchg
jb
scas
mov
add
jnp
insl
cwtl
rclb
lods
jbe
push
pop
aaa
xchg
rcr
incb
cmpsl
jle
mov
xchg
mov
add
mov
lcall
fdivrl
out
mov
mov
dec
push
push
cmp
cli
sub
inc
popa
icebp
sbb
adcb
clc
xor
repz
pusha
aaa
js
sub
push
sub
jl
dec
adc
pop
dec
mov
leave
dec
cmpsb
addr16
test
aas
push
jns
cmp
add
and
adc
mov
and
stc
or
lcall
xor
xchg
test
lods
rcr
jmp
jg
inc
xor
imul
cmp
in
cs
dec
lds
fwait
dec
gs
loopne
mov
jmp
mov
xor
jb
andw
adc
pop
mov
pop
xor
push
sub
xchg
imul
push
push
das
or
in
cmp
loope
jecxz
in
out
adc
push
shll
mov
and
in
cltd
sbb
mov
push
fldcw
mov
sti
mov
adc
outsb
fmull
and
out
movsb
mov
adc
pop
push
mov
or
cwtl
push
mov
out
jp
icebp
jmp
lahf
push
jae
mov
xchg
xchg
flds
push
or
daa
repz
subb
scas
jmp
push
add
aas
and
sub
inc
sbb
xchg
ja
leave
inc
and
push
inc
xchg
or
xchg
aas
aad
outsl
or
adc
xchg
push
sub
xor
das
dec
mov
iret
xor
lods
sbb
push
outsb
into
cmp
rcrl
lcall
cltd
cmp
inc
inc
push
cld
push
fwait
xor
pop
bnd
les
lock
jns
or
xchg
or
push
rep
jp
mov
mov
or
shll
test
into
push
adc
inc
mov
mov
mov
lret
sbb
sahf
dec
out
rorl
scas
adc
loop
add
cmpb
or
inc
rcll
lret
cwtl
or
push
mov
fistpl
mov
cmpb
mov
adc
daa
test
out
jne
shlb
mov
xchg
test
sbb
mov
fcmove
adc
sbb
or
xchg
add
sub
mov
repnz
mov
cmp
jg
inc
mov
xor
stos
add
in
dec
xor
jnp
inc
fcmove
and
fucomip
popa
clc
and
fsubr
rcll
or
mov
nop
outsb
xchg
mov
rcrl
mov
insb
fbstp
les
shll
mov
repz
scas
int
mov
ret
insl
mov
xchg
push
lock
sbb
cmpb
jne
xchg
or
lods
inc
fnsave
cltd
ja
xor
cmp
arpl
pop
sbb
sbbb
adc
add
daa
cltd
test
mov
ja
lret
pop
mov
push
lcall
hlt
pop
cmp
mov
jb
push
inc
out
fnstcw
and
out
fsubl
xchg
xlat
jle
out
sub
daa
pop
sahf
ds
and
sbb
cmp
stos
mov
dec
cmp
inc
jae
fldt
jae
add
fcompl
popa
cmp
mov
jg
add
push
int
lock
jno
pop
orb
push
xchg
shlb
mov
ficoms
scas
push
jmp
xor
test
adc
jge
push
mov
mov
mov
xor
jns
pop
bound
sahf
sti
sbb
xchg
mov
jp
sub
or
add
jmp
loop
dec
dec
std
adc
pusha
or
xchg
mov
jmp
jecxz
in
std
add
adc
cmp
cs
and
inc
xchg
mov
push
push
inc
pop
ds
movsb
cmc
sub
pop
add
sub
jb
add
add
mov
sub
test
or
mov
fsubs
mov
das
repz
cmpsb
rol
cmpsl
adc
adc
push
mov
fs
out
pushf
std
sti
mov
mov
shrb
shrb
cld
jno
pop
movsb
inc
push
jne
or
mov
loope
xchg
cwtl
into
mov
test
mov
sahf
jb
lea
xchg
add
mov
mov
dec
hlt
ss
stos
cs
jno
push
dec
mov
cmc
mov
gs
mov
add
and
sar
test
das
cmp
notl
mov
mov
loope
sub
dec
enter
or
dec
pop
mov
jo
andl
xchg
mov
gs
iret
das
test
mov
inc
sbb
pop
push
adc
pop
and
fdivrp
cli
push
ds
lea
test
es
call
outsl
mov
mov
sti
int3
arpl
pushf
adc
mov
cmp
xor
arpl
jg
es
outsl
push
xchg
mov
cmp
popf
xchg
pop
mov
and
aaa
fnstenv
sub
jge
cmp
stos
sub
adc
or
adc
cmp
xor
inc
cmp
insl
jbe
inc
ds
ror
repnz
xchg
or
or
lea
mov
pop
xor
xchg
sbb
stos
and
popa
cs
dec
pusha
subb
inc
icebp
or
jne
push
daa
lcall
repnz
ss
inc
dec
jmp
gs
mov
push
xor
pop
ret
pop
or
dec
or
pop
inc
lahf
mov
or
cmp
loop
add
inc
fistl
bound
jae
push
jo
das
add
pop
xor
adcl
inc
sub
adc
mov
mov
mov
jecxz
ret
push
push
call
movsb
movb
fildll
in
fdivrs
lods
pop
das
leave
cmp
xor
and
outsb
mov
ljmp
test
xor
jbe
cmc
insb
push
leave
pop
pop
dec
in
jbe
pop
mov
cwtl
lret
andb
adc
or
lret
jne
jno
dec
sbb
sahf
jo
pop
sarb
shlb
add
ror
sbb
lret
aas
sbb
mov
and
mov
aaa
push
pop
cmc
push
mov
jl
lcall
sub
add
rorl
mov
addr16
daa
mov
jmp
ret
andb
movsb
js
outsl
jne
in
pop
mov
xchg
jnp
std
jge
out
sub
sub
fwait
pop
lds
lcall
sub
inc
xchg
jbe
pcmpgtb
ret
pop
xchg
dec
pusha
aas
xchg
xlat
repz
ret
and
in
js
ror
and
adc
mov
pop
bound
xor
inc
pop
mov
or
mov
repz
mov
pushf
xchg
imul
je
or
iret
push
in
fldcw
ds
push
mov
dec
or
xor
fwait
mov
inc
pop
sbb
push
jmp
cmp
lret
mov
out
inc
fdivl
je
cmp
jecxz
fsts
js
scas
aaa
xorps
xlat
cmc
and
aaa
into
sbb
scas
cmp
ds
pop
sub
imul
fdivs
inc
fsts
mov
cwtl
pavgb
inc
test
outsb
scas
leave
fstl
fsubrs
iret
std
jbe
daa
movsb
inc
cwtl
push
int
orb
and
mov
lcall
and
cmp
les
andl
in
aam
hlt
fmull
jnp
lret
stos
sub
lret
bound
divl
push
stc
jo
push
add
std
cwtl
test
mov
ds
adc
push
loopne
shll
adc
inc
sahf
je
push
cld
add
scas
inc
add
test
fstps
sub
addr16
push
mov
pop
lret
rcr
in
sbb
cmp
cmp
icebp
insl
andb
test
test
push
sbb
imul
je
adc
adc
dec
jne
ror
and
xchg
cmp
paddb
xor
push
push
inc
fstl
loopne
inc
test
movsl
cmpsb
sti
sub
sbbl
and
daa
into
dec
lret
sub
imul
sti
pop
pop
mov
push
in
fmul
fnsave
rorb
out
pop
sbb
movsl
cmp
or
push
lcall
js
add
adc
cmp
shlb
push
daa
es
aas
xor
jns
scas
jns
test
std
sub
mov
es
les
mov
ja
xchg
dec
test
icebp
adc
rcl
in
pusha
or
dec
addr16
mov
int3
sub
and
jle
lret
fidivrl
add
add
dec
dec
and
dec
push
fs
push
or
push
jae
leave
pop
out
aad
xchg
cmp
sbb
cmpsb
mov
stos
ds
or
lea
jno
enter
movsl
enter
add
aaa
cltd
mov
mov
loop
add
mov
fcmovbe
pushf
sbb
out
sbbb
inc
stos
mov
sbb
test
jmp
xor
or
cmpsl
imul
xchg
hlt
sbb
out
adc
outsb
sub
dec
mov
sbb
outsl
jl
push
jne
mov
pop
or
jmp
and
pop
xchg
movb
jg
sub
inc
into
cmpsb
ret
js
lcall
stc
test
lea
inc
push
call
data16
cltd
les
push
mov
jbe
cmp
push
adcl
inc
shrl
sti
jle
ljmp
loopne
jmp
fistpll
ljmp
sub
enter
pop
inc
daa
mov
jecxz
push
or
jmp
popa
pop
mov
dec
sub
cmp
xchg
sub
enter
fs
jecxz
inc
pop
sub
xchg
imul
inc
lret
in
std
out
repnz
lcall
push
or
mov
arpl
test
push
and
pop
mov
pop
into
ss
jle
loopne
jmp
out
lds
or
push
cli
sub
pop
popl
fadd
loop
shlb
cmp
lock
enter
sbb
jecxz
push
hlt
mov
nop
stos
popa
clc
or
loopne
sbb
shlb
test
jl
stc
sub
lods
xchg
iret
sbb
mov
sarb
std
xchg
cmc
arpl
mov
dec
and
psubd
jge
popf
adc
push
add
scas
aad
in
ljmp
es
mov
enter
lds
lret
cli
mov
mov
inc
pop
jno
lods
mov
dec
push
outsl
jnp
jae
imul
scas
push
mov
mov
inc
jo
cmc
in
scas
sahf
jmp
mov
push
jge
pop
mov
data16
sub
cmpsb
test
sbb
pop
inc
add
dec
movsl
lcall
xchg
fldt
xchg
fildll
push
xor
das
mov
sti
int3
sarb
cmpsb
cmp
and
sbbl
mov
lret
pushf
or
cmp
mov
and
test
jle
pop
repz
cmc
and
addr16
fisttpl
jbe
xchg
mov
mov
ds
xchg
xchg
sub
mov
mov
std
dec
mov
aad
icebp
jo
lods
jnp
xchg
push
pop
cmp
dec
les
or
dec
and
mov
dec
pop
imul
out
mov
mov
cmc
jge
xor
mov
ljmp
or
lahf
jp
mov
cmp
xor
mov
mov
mov
pop
cmp
sub
and
push
test
stos
xorb
cmp
sub
mov
repz
shll
enter
dec
pop
sahf
xlat
pop
decb
pop
jg
test
jo
js
mov
js
shll
out
cli
jb
dec
mov
push
rcrl
ljmp
pop
mov
mov
push
push
lds
jne
mov
and
mov
push
jmp
mov
inc
sti
xor
iret
aaa
push
inc
or
mov
scas
mov
int3
into
fdivr
and
jae
cltd
pop
sbb
aad
rorb
shll
adc
sbb
loopne
mov
jg
pop
in
inc
flds
push
mov
gs
mov
fsubrl
push
adc
push
inc
inc
leave
push
fldt
sub
jae
xor
std
lock
push
jno,pt
cmpsl
ret
loopne
adcb
cs
jbe
sbb
in
shlb
push
lea
out
scas
popf
inc
inc
xor
xor
mov
aam
vpsadbw
xchg
mov
sbb
ljmp
icebp
xor
aas
in
in
cltd
fwait
sbb
pop
cmc
jb
ret
leave
add
testl
xor
mov
mov
adc
or
popa
call
in
sub
inc
push
testb
lea
int
int3
arpl
sub
in
mov
sub
insl
les
movsl
dec
push
enter
ret
lods
cwtl
bound
add
xor
andb
sti
pop
sbb
ret
push
outsb
jmp
dec
in
add
clc
and
xor
dec
sbb
dec
jno
popf
and
inc
outsl
push
jp
push
sbb
push
adc
jmp
aaa
mov
mov
or
mov
sahf
pop
sub
push
sbb
das
scas
ret
jns
xor
popa
in
lcall
mov
inc
je
cmp
les
shl
in
or
fs
jp
nop
dec
in
inc
push
out
daa
ss
inc
nop
daa
jne
mov
xchg
push
ds
ja
cli
fsubr
sub
jmp
fcoms
pop
and
mov
pop
je
add
jmp
pop
pop
loope
xor
repz
xor
rolb
mov
mov
ds
rcr
jg
roll
imul
push
adc
cld
xchg
repz
std
or
cltd
sbb
mov
inc
jno
sub
sub
sahf
stos
fidivrl
out
std
or
adc
mov
faddp
test
mov
fs
xor
lcall
mov
mov
aad
xor
cmp
add
mov
call
gs
pop
inc
jg
or
jb
sub
pop
addr16
ds
imul
dec
xchg
decl
push
dec
sarb
sub
add
fld
inc
stc
nop
jne
or
aas
pop
push
jp
xlat
mov
or
lods
fistps
or
lods
test
das
ret
sti
scas
xchg
mov
adc
sub
ret
push
and
adc
icebp
ja
cld
inc
sub
fwait
shl
xorl
scas
mov
xorl
js
sub
xor
or
xchg
cmp
movsl
les
mov
ret
inc
ss
mov
int3
fcmovnb
cmp
call
in
push
jmp
mov
add
xlat
and
in
mov
fimull
outsb
mov
in
cs
insb
mov
xor
xor
mov
mov
inc
stos
mov
lods
mov
mov
inc
outsl
xchg
call
movsb
jg
ljmp
repnz
jns
ret
lahf
mov
nop
ficompl
cltd
adc
int3
rcll
es
xor
dec
fildl
in
add
fldcw
jae
xor
mov
push
pushf
fisubs
xchg
sub
popf
mov
dec
sahf
push
fdiv
loopne
dec
dec
cmp
mov
xlat
dec
in
addr16
cld
mov
bound
fwait
pop
arpl
int
jl
ret
dec
push
xchg
push
fbstp
jbe
jb
cld
jl
clc
inc
fwait
scas
push
das
out
jl
cmp
lcall
sbbl
jg
xchg
dec
dec
sbb
dec
mov
dec
adc
mov
mov
xchg
nop
mov
cmp
pop
shrl
or
shlb
inc
push
hlt
mull
pop
mov
cmpsb
jo
sbb
sub
enter
sub
xchg
sub
mov
sub
mov
nop
mov
popf
adc
imul
pushf
and
sbb
pop
out
sub
incl
lret
xlat
mov
pop
mov
sbb
bound
adc
sbb
adc
daa
fimull
jne
push
or
push
jecxz
pop
xor
or
cmp
and
popf
loope
loop
xor
imul
rcll
scas
inc
inc
mov
out
je
sbb
push
ljmp
mov
stc
push
push
ds
pop
jne
je
pop
addr16
insl
stos
nop
xor
or
jne
sub
lcall
sbb
shr
aaa
into
sbb
sub
pusha
mulb
jl
shlb
add
pushf
push
stos
lds
lods
mov
cld
cli
jae
adc
or
call
inc
push
popa
adc
xchg
cmp
int
pop
adc
faddp
mov
pop
xor
dec
int3
push
sbb
and
sbb
mov
adcb
pusha
arpl
xchg
fsubs
lds
and
aad
incl
xchg
out
test
jl
xlat
jmp
ret
mov
pop
fwait
dec
mov
xor
outsb
and
cmp
xor
pop
xor
add
fists
pop
ja
adc
enter
in
in
xchg
adcl
decb
loopne
cmp
subl
stos
xchg
dec
inc
jp
sub
stos
inc
outsl
or
jecxz
cmp
mov
dec
add
outsl
push
insl
outsb
sub
sub
adc
jo
cmc
into
mov
aam
push
movsb
and
mov
jbe
mov
iret
ret
fisttps
or
out
inc
mov
fbstp
pop
and
push
pop
std
xor
fwait
mov
inc
push
mov
or
adc
fbld
aam
sub
cs
hlt
mov
outsb
cmovp
dec
out
jl
jecxz
idivl
pop
pop
aas
sarl
nop
cmp
fcompl
xchg
xor
adc
or
xor
sahf
bound
in
enter
fs
or
xchg
into
jmp
xor
or
lea
aaa
pop
aam
pop
sbb
adc
sub
call
or
mov
decb
dec
in
hlt
sbb
fsubr
cmp
mov
nop
mov
rclb
pop
out
cmp
mov
movsb
shll
test
sbb
scas
inc
mov
cmp
int3
ss
cmpl
xchg
ja
ret
pop
test
mov
imul
push
hlt
mov
aaa
sub
jle
cld
lods
lcall
bound
ja
loopne
lret
pushf
pop
rcrl
xor
ljmpw
out
dec
outsb
push
popa
adc
lret
ds
and
lret
shrl
mov
inc
push
jnp
stos
and
xchg
jno
aad
xchg
cmpsb
int
scas
inc
fneni(8087
call
push
mov
str
push
mov
ret
movl
mov
jle
pop
lcall
sub
arpl
xorl
mov
adc
xor
fbld
adc
mov
dec
andl
in
jbe
movsl
inc
or
xchg
xchg
ficoms
jo
sub
in
aas
xchg
outsl
loope
imul
jbe
idiv
lods
mov
inc
mov
inc
mov
int
mov
pop
and
stc
in
call
in
mov
or
int
mov
mov
jns
mov
and
mov
outsl
stc
sahf
dec
loope
mov
adc
scas
jge
sbb
add
cmc
add
cmp
mov
fisubrs
ret
repz
in
jle
imul
fcompl
mov
ficoml
loopne
push
jl
pop
test
mov
xor
xchg
push
mov
cmpsb
jb
xor
and
icebp
pushf
push
jmp
loope
or
inc
mov
jb
xor
xchg
xchg
mov
ljmp
pop
fabs
push
or
sub
push
in
aas
pusha
jg
or
test
rcll
jmp
imul
les
in
cmc
pusha
sbb
nop
mov
xor
cmpsl
mov
mov
and
push
in
lea
lahf
fs
imul
xchg
sbb
rorl
jno
mov
inc
sti
insb
push
iret
stos
inc
inc
lcall
jae
and
in
ljmp
jb
dec
mov
dec
cmp
aad
or
mov
fwait
and
enter
repnz
mov
fs
inc
mov
dec
int3
fcompp
jge
adc
repz
adc
pop
mov
pop
inc
in
nop
int
rcrl
in
sub
outsl
adc
cs
adc
stc
jb
mov
mov
add
or
mov
shrl
add
repnz
imul
int
lret
imul
movsl
pop
jns
add
pop
inc
mov
pop
jnp
test
push
mov
hlt
movsb
test
clc
xor
shlb
fmul
jl
ret
cmc
jnp
mov
leave
int3
ds
ljmp
jp
mov
cmc
mov
addr16
jge
xor
ja
push
mov
cld
xchg
mov
xor
or
rolb
mov
rcrl
int3
test
pusha
insb
cmp
add
es
mov
insb
push
jo
add
mov
fcomps
push
cltd
xor
out
test
jle
pop
leave
add
mov
mov
aad
outsb
pop
mov
lea
xlat
mov
jmp
mov
jno
cmp
lahf
sbb
idivb
push
xor
cmp
mov
pop
push
jmp
pop
xor
std
or
xchg
sbb
push
sbb
popa
ljmp
into
fwait
sub
xor
push
push
addl
add
arpl
mov
jmp
test
mov
ljmp
push
mov
ret
in
xchg
loopne
xor
movsl
xlat
std
loop
mov
dec
pushf
push
sub
lock
loopew
add
adc
mov
or
pop
jns
add
pusha
ja
xchg
push
cmp
fdivl
int
test
xchg
mov
add
jge
cli
dec
cmp
dec
xchg
fwait
and
lock
stos
push
push
int3
stc
xchg
enter
dec
daa
inc
loop
lahf
mov
inc
add
daa
xchg
inc
sbb
aad
out
je
pop
mov
cmpsl
dec
adcl
in
mov
sti
addl
sbb
adc
fcompl
sahf
sahf
jae,pt
jo
test
fucom
stos
mov
mov
sarb
xchg
mov
xchg
xchg
stos
dec
jmp
lcall
stos
repz
or
fs
cli
mov
push
mov
add
inc
pop
cli
test
in
mov
sarl
and
iret
data16
pop
sahf
in
or
and
daa
jae
sub
inc
or
ss
sti
mov
dec
mull
mov
push
arpl
int3
pop
test
js
mov
in
push
and
popf
and
sahf
mov
pop
aam
aaa
mov
iret
inc
xchg
ljmp
pop
cs
shlb
test
arpl
pop
sub
xchg
adc
insb
and
pushf
hlt
adc
daa
movsb
cmp
sbb
jbe
int
push
and
inc
aam
jge
out
fs
and
and
addr16
push
test
les
mov
int3
xchg
adc
push
sti
add
cltd
mov
icebp
cmc
cmp
sub
mov
xor
sub
stos
jmp
hlt
imul
xchg
dec
nop
popa
leave
loope
cmp
inc
mov
lret
mov
ror
cmpsb
cmp
mov
les
imul
xor
push
out
sbb
jne
mov
mov
out
sbb
jmp
jbe
ljmp
testb
nop
or
lret
shlb
or
and
testl
sbb
xchg
fchs
mov
ja
inc
lea
mov
pop
jno
mov
addr16
mov
mov
jp
mov
adc
mov
xchg
push
inc
dec
pop
fsubp
or
dec
add
pop
sahf
and
test
mov
push
pop
loopne
in
inc
and
push
adc
aam
jo
stc
mov
or
dec
out
jns
shrb
inc
loop
sub
loop
cmp
daa
ds
xchg
mov
rep
js
jecxz
inc
sbb
sti
pop
mov
mov
int3
pop
addr16
mov
jns
adc
scas
insb
mov
mov
xchg
mov
mov
fs
dec
cmc
loop
stc
push
outsb
add
inc
add
mov
scas
imul
mov
ljmp
mov
pop
dec
int3
and
mov
dec
jecxz
lahf
adc
mov
addr16
sub
pop
sub
lcall
xchg
cmp
xchg
fldt
adcl
std
fcoml
mov
in
pop
pop
jecxz
mov
pop
pop
pop
jae
xchg
jle
sbb
cmpsl
dec
imul
rclb
lock
mov
xchg
and
sub
adc
cmc
iret
inc
in
adc
pusha
xchg
lds
subb
mov
pop
mov
inc
sti
mov
mov
cmp
insl
repnz
loope
jbe
pop
sahf
xorl
aaa
mov
adc
ss
lock
adcb
es
mov
xchg
sub
jmp
mov
dec
mov
dec
mov
lock
daa
or
xor
xchg
les
jecxz
mov
mov
sub
pop
adc
cmp
idiv
divl
std
outsb
inc
xchg
adc
hlt
mov
or
loop
sbb
and
mov
inc
mov
add
adc
lock
dec
cmp
leave
cs
out
dec
inc
push
in
xor
lea
push
lahf
out
andl
mov
jecxz
inc
add
lahf
push
stos
adc
sahf
add
xchg
nop
movsb
pop
es
push
dec
mov
loopne
scas
andl
insb
push
mov
push
mov
ret
cmpsl
icebp
adc
movsb
lods
mov
adc
js
xchg
or
ss
notb
and
into
iret
jge
pop
add
and
scas
xchg
popf
repnz
lods
mov
mov
fcmovne
inc
pop
or
push
add
sbb
repnz
inc
daa
lds
adcb
pmulhw
repnz
push
dec
call
pop
outsl
call
cmp
jmp
adc
and
mov
dec
lahf
inc
mov
mov
cwtl
jmp
addl
xchg
xchg
jbe
sub
nop
fsts
or
lret
pop
in
jmp
out
aam
hlt
mov
sub
jle
out
or
imull
mov
sbb
insl
test
rcl
inc
push
loop
pop
lock
jnp
jle
daa
mov
pop
in
nop
lahf
hlt
iret
sub
rorl
pop
and
xchg
and
out
sti
xchg
mov
in
jecxz
pop
sbb
pop
test
xor
adc
es
divb
inc
arpl
pushl
lret
add
or
and
shlb
mov
test
xor
insb
ja
or
daa
add
push
xor
outsb
add
leave
into
testl
mov
fstps
inc
enter
lods
imul
rorl
jne
or
cld
out
and
cltd
xor
mov
in
add
xor
mov
aaa
in
loopne
pusha
addb
pop
push
cmp
jno
cmpsl
dec
aaa
or
pop
cmp
pop
jge
pop
sub
push
aam
adcl
iret
push
mov
call
push
arpl
daa
fs
pop
sbb
inc
gs
orl
cmp
cmp
or
loopne
or
les
ds
inc
or
mov
sbb
mov
test
mov
das
movsb
cs
or
mov
in
loopne
mov
aaa
mov
out
into
cwtl
push
popf
inc
sti
cs
jg
sbb
popf
mov
inc
scas
fildll
push
je
inc
push
std
lods
push
ja
push
in
cwtl
fldenv
jnp
and
fidivs
mov
cld
incl
test
leave
fdivrs
inc
es
cwtl
mov
xor
in
xchg
jne
fists
mov
xchg
pop
cmc
popf
cltd
test
js
jmp
ss
leave
je
lret
cld
test
jbe
push
push
or
add
dec
pop
push
fwait
push
cmpsl
xchg
and
lcall
jbe
dec
mov
or
shrl
aam
cmp
pop
jae
cmp
xchg
bound
and
pop
repz
loopne
int3
add
decl
lea
pop
or
int
xchg
int
idivb
in
jle
into
stos
push
or
add
xor
mov
mov
fsubr
sarl
gs
dec
pop
test
out
sub
dec
jne
rcr
mov
mov
jle
fsubrs
movsl
pop
imul
or
cmp
popf
mov
pop
xlat
push
stos
int3
repz
push
mov
std
in
pop
pop
push
js
fsubrl
std
cmc
fldenv
pop
das
cmp
xchg
and
and
jp
pusha
xchg
xchg
lcall
and
lods
enter
nop
arpl
fistpll
inc
ret
sbb
cwtl
fstps
out
rol
pop
nop
and
and
adc
pop
push
test
push
data16
dec
aad
jne
out
ss
call
insl
aam
pop
sbb
nop
cwtl
inc
jecxz
daa
xor
bnd
inc
sbbb
clc
xor
adc
xchg
daa
leave
pop
cmp
lock
enter
mov
test
in
fsubrs
rcl
lret
adc
xlat
push
jae
lea
cli
pushf
cmpsb
ds
sbb
lcall
movsl
icebp
jnp
mov
xchg
hlt
push
or
into
and
vphadduwq
sub
adc
int3
lret
pop
movsb
out
jnp
xchg
idiv
jae
sub
out
mull
sbb
or
inc
sub
pop
sets
and
cmp
negb
xlat
nop
sahf
mov
mov
adc
mov
add
inc
mov
out
out
mov
mov
imul
loope
aam
repz
adc
in
jmp
push
scas
iret
jb
mov
mov
ja
mov
stc
xchg
pop
xor
sbb
addb
popa
insb
ljmp
into
mov
imul
mov
mov
nop
inc
jg
pop
popf
ds
jmp
dec
adc
and
lods
push
fs
cmp
xchg
mov
add
icebp
prefetch
jge
pop
mov
jns
pop
mov
int3
add
jbe
ss
shlb
jecxz
adcb
add
inc
js
lahf
test
test
fcomp
jge
cs
sbb
cmp
mov
scas
pop
or
addb
mov
bound
pusha
or
sbb
shlb
and
popf
sub
mov
jae
fnsave
loop
jns
mov
lcall
jecxz
test
sbb
je
ljmp
dec
adcl
push
mov
ja
in
mov
xor
xchg
rolb
mov
notl
out
jmp
movb
fs
mov
and
adcl
add
aad
ljmp
dec
fnstcw
shr
das
cmp
dec
cwtl
and
pop
jge
and
inc
mov
push
rcll
maxps
cmp
or
mov
inc
and
push
iret
adc
push
enter
sub
addr16
adc
fsubrp
sbb
ss
addr16
cwtl
jge
mov
fwait
cmpsl
adc
sub
cwtl
clc
xor
divl
or
sbb
cmpsb
cwtl
in
mov
cmp
jl
pop
jb
insb
insb
hlt
dec
pop
cs
outsb
xchg
pop
popa
enter
mov
push
hlt
daa
fsubrs
psubusw
xchg
clc
xchg
out
fisttpll
lods
imul
data16
repnz
enter
fsubrs
cmp
rorb
sub
fstpl
jmp
push
jmp
sub
mov
loopne
loope
clc
shll
pop
roll
aas
mov
in
adc
push
sub
jne
inc
sahf
clc
in
lret
test
cmp
xor
mov
fisttpl
rcr
lea
xchg
cmpsl
adc
cmp
pop
fisubrl
mov
popa
enter
dec
or
stc
cmp
imul
cmp
mov
test
or
lahf
lds
imul
in
test
push
adc
or
pop
popf
test
mov
cmpsb
inc
cli
pop
clc
rcrl
cs
add
rol
and
push
and
xor
cld
gs
jno
cmp
inc
cmpsl
aam
jecxz
sub
cltd
mov
adc
les
jmp
sti
lahf
or
add
xor
cmp
pop
fdivl
or
ja
jbe
enter
popf
jl
push
stos
xchg
and
push
mov
xchg
js
xchg
jo
pop
out
jle
pop
in
pop
mov
decl
push
mov
repz
icebp
mov
ret
mov
and
xchg
jp
dec
jecxz
adc
push
or
aad
leave
movsl
add
ljmp
mov
loopne
into
dec
sub
xor
mov
jmp
mov
jb
rolb
shrl
adc
fisttpl
das
jl
and
mov
inc
mov
aaa
sub
mov
jmp
pop
mov
in
ja
test
adc
add
in
or
fxtract
fdivl
cmpsb
std
enter
xchg
sub
inc
aad
sub
jmp
dec
loope
dec
ret
add
xchg
mov
inc
in
scas
dec
out
adc
or
push
outsb
add
sbb
mov
leave
out
push
cltd
fbld
jno
loop
mov
inc
mov
pop
dec
pop
insb
mov
sbb
cmc
push
lret
pop
pop
mov
aaa
xor
pop
out
push
mov
inc
rol
test
mov
jp
and
xor
mov
mov
push
mov
cltd
idivb
loopne
insl
adc
push
pop
ljmp
xor
sbb
leave
jo
dec
lods
push
into
ljmp
pop
in
pop
hlt
sub
cwtl
daa
cli
enter
or
sbb
inc
in
mov
add
pop
xchg
ret
outsl
les
jl
push
lcall
testb
mov
jne
xor
and
popa
xor
push
call
addr16
sub
sbb
cld
lcall
mov
mov
sub
lds
jl
mov
into
pop
and
jle
jle
adc
push
mov
pop
cmp
jmp
test
mov
add
test
push
mov
je
cld
stos
fidivs
cs
adc
std
xchg
sbb
test
cmp
ret
cwtl
inc
fs
std
arpl
test
xchg
pavgb
js
pushf
xor
ljmp
outsb
mov
mov
push
lcall
cmp
js
fs
mov
ja
jl
mov
xor
rorl
dec
pusha
clc
adc
pop
lcall
das
sub
cltd
pop
push
es
mov
sbb
outsl
mov
shr
nop
mov
ret
jl
mov
ja
push
test
sub
mov
pop
loop
cmc
mov
test
repnz
fimuls
repz
add
pop
sub
stos
lock
dec
mov
and
orl
daa
shrb
dec
subb
sub
jmp
or
sub
dec
je
out
mov
xchg
or
mov
inc
xor
out
rcrl
sbb
adc
fs
loopne
aaa
mov
insb
and
sub
xchg
or
xchg
sub
sub
or
dec
push
mov
je
in
test
xchg
fst
clc
sub
std
fs
out
out
mov
data16
int3
or
mov
push
out
jp
stc
cli
pushf
repz
mov
cs
cmp
dec
or
pop
shl
dec
and
sarb
dec
push
divb
sbb
outsl
or
fucomip
repnz
adc
jl
leave
popa
leave
mov
xor
dec
gs
pushf
add
mov
int
and
shl
jb
dec
hlt
nop
pop
je
dec
loope
cwtl
fsubl
pusha
loop
dec
dec
test
mov
jo
repnz
mov
leave
popa
int
add
jmp
xor
dec
sbb
mov
into
add
out
jb
dec
add
dec
movsl
pop
jge
cmp
mov
and
sbb
jge
xchg
mov
enter
push
fbstp
or
inc
loop
in
inc
fiadds
push
xchg
sbb
adc
sbb
dec
test
inc
fstl
popf
repz
mov
das
jp
xor
lret
aas
dec
dec
pushf
ret
sbb
roll
adc
rcrb
push
pop
out
das
js
aad
mov
jg
arpl
mov
jnp
addr16
fcoml
icebp
lods
xor
or
mov
int3
in
stos
in
pop
negb
int3
call
mov
add
dec
inc
imul
jecxz
xlat
in
cmp
shrl
pop
add
pop
popa
push
xchg
inc
sahf
push
dec
cmp
shrb
adc
addr16
shlb
clc
sbbb
jae
fisubrl
testb
es
aas
inc
and
add
dec
xchg
xor
cmp
out
cmp
jb
out
inc
and
nop
adc
push
jmp
sbb
dec
sbb
sub
popf
push
adc
popa
clc
push
xor
jle
and
xor
arpl
loope
jp
nop
push
cmp
inc
aad
sahf
repnz
mov
std
cmpsl
pushf
push
mov
dec
movsb
pop
xlat
adc
and
adc
pop
dec
sbb
jbe
loop
inc
sbb
std
pop
xor
fists
add
fld
ret
dec
and
int
out
xchg
inc
mov
lret
cld
test
xor
fnstenv
leave
and
xor
fsubr
insl
repnz
sbb
jp
xor
sbb
arpl
ss
movsb
push
ljmp
adc
ss
push
push
mov
cmc
ja
loop
repnz
jle
or
mov
sbb
scas
xchg
push
insb
add
push
mov
dec
cmpsl
dec
sbb
cmp
or
and
in
jns
bound
add
sub
lahf
pop
sub
in
xchg
mov
jae
cmpsb
iret
inc
fsubs
or
sbbl
and
inc
enter
xchg
sub
lcall
push
out
dec
fistps
js
sub
pop
cmc
notl
xchg
sub
idivb
adc
inc
call
cmpsb
cmp
push
decl
icebp
rorb
cmp
lock
dec
loopne
xor
aas
and
addr16
inc
rdmsr
adc
and
ja
inc
add
push
xchg
push
pop
test
out
addr16
mov
pop
mov
ljmp
js
sbb
and
es
cmpsl
ds
dec
push
movsl
icebp
cmc
les
scas
out
or
cwtl
cmpsl
mov
insl
sbb
mov
add
push
std
fwait
stos
int
push
xor
loope
daa
inc
loop
mov
add
xchg
dec
lret
jle
arpl
icebp
test
iret
sub
sub
mov
xchg
and
cmp
mov
cs
add
and
xor
jmp
jne
jmp
repnz
int
jo
mov
jne
mov
pop
vprotb
out
icebp
jb
jmp
mov
mov
bnd
subl
testb
or
idivl
fbld
aaa
push
jno
xlat
and
pop
lods
les
stos
mov
lock
psrad
mov
jmp
sbb
hlt
ficoml
push
shlb
xchg
ja
adc
rcrl
push
mov
je
sub
insl
mov
or
cld
sarb
fs
add
int
sub
iret
in
push
into
and
sbb
lock
popa
fdiv
hlt
stc
notl
add
push
out
mov
outsl
inc
xchg
add
ss
mov
xchg
test
aad
call
sub
and
outsb
fmulp
or
mov
arpl
testb
enter
imul
repnz
sub
xlat
xchg
cmp
bound
sbb
rorl
and
sub
mov
mov
xchg
rorl
leave
repz
scas
shl
xor
aad
das
inc
inc
fs
out
or
js
adc
lods
sub
mov
xchg
xor
xbegin
pop
addr16
mov
push
repnz
cs
xchg
add
dec
mov
loope
movl
addb
xchg
in
adc
lods
mov
popa
sbb
inc
adc
adc
sahf
jmp
lods
lea
mov
popa
loop
fistl
cmp
imul
lds
xchg
dec
dec
lcall
add
sbb
dec
dec
inc
mov
ljmp
insb
outsb
mov
outsl
iret
mov
adc
pop
testb
in
xor
mov
xchg
adc
int3
lret
bound
fcmovne
mov
and
inc
sub
xor
es
sub
in
imul
mov
lods
mov
test
das
stos
daa
popf
test
jae
adc
adc
jnp
inc
insl
loopne
mov
arpl
into
xchg
jo
jl
outsb
xchg
test
aaa
push
xlat
insb
loop
xchg
sub
rorl
sbb
aam
push
in
pop
xlat
aas
inc
cli
lods
jge
fsubr
mov
pop
pop
inc
inc
sbb
mov
push
test
dec
lods
cwtl
aad
lret
jg
push
lea
outsb
test
scas
mov
sarb
adcb
ret
adc
push
mov
pop
jmp
xchg
ss
imul
lods
iret
xchg
loope
mov
cltd
sub
iret
and
ror
sahf
cmc
jp
ss
test
adc
xchg
add
fldenv
shll
add
jns
mov
mov
int3
dec
jae
jns
jmp
std
lods
daa
mov
mov
jge
sti
rol
xchg
add
in
fld
aas
or
aaa
scas
addl
ja
push
jb
mov
mov
call
or
mov
mov
mov
mov
mov
in
fstl
add
stc
nop
push
and
lcall
jge
add
cmpsb
cmpsl
cmp
gs
mov
out
adc
and
sbb
stos
pop
jne
fnsave
pop
insb
add
push
punpcklbw
jl
xor
jmp
mov
push
lods
push
mov
stos
bndldx
insl
pop
inc
leave
pusha
aas
mov
push
lret
movsb
jne
push
ljmp
lock
dec
sbb
adc
movsb
repnz
add
xchg
test
and
cltd
push
mov
mov
xchg
loope
leave
dec
ds
es
fists
pop
aaa
or
jge
add
data16
xchg
insl
dec
fstl
jae
cmpsl
mov
or
sbb
pop
mov
pop
inc
mov
dec
mov
xchg
insb
push
lahf
dec
sub
movaps
cmp
imul
mov
jmp
in
pop
and
test
xchg
cmp
xchg
lret
mov
in
add
jne
js
aas
imul
jmp
pop
mov
sar
arpl
test
je
decl
cmpsl
test
or
movsb
push
aam
pop
int3
jle
aam
sahf
mov
stos
lock
test
xor
xlat
or
insb
aam
fisttps
adc
lods
in
mov
xchg
and
cmp
mov
mov
fdivp
push
ffreep
mov
cmp
pop
inc
outsb
loopne
pop
jnp
les
shl
call
lock
sahf
mov
push
jmp
add
jmp
jge
clc
cmc
sub
in
sbb
xchg
sbb
scas
jecxz
movsb
fistps
cmc
and
mov
mov
bound
mov
jae
jp
jmp
sbb
imul
xor
out
mov
adc
repz
xor
and
push
mov
cmp
call
adc
jle
scas
cmp
pop
sti
rcl
outsl
and
fdivl
dec
addr16
dec
jle
mov
fninit
mov
xlat
jno
xor
lret
jecxz
loope
push
push
push
inc
push
js
fimull
andb
ficomps
mov
sahf
jmp
clc
shrl
sub
mov
mov
xchg
stos
xchg
rclb
sub
test
icebp
cmp
jns
int3
fcompl
andb
cs
jl
sbb
push
mov
loop
lret
pop
dec
inc
mov
jg
mov
push
popa
xor
sbb
sbb
ss
fnstcw
jmp
clc
sbb
pusha
mov
out
lahf
xor
inc
outsl
int
fstps
mov
in
cmp
dec
mov
cmp
pop
aad
test
ret
mov
addr16
ds
andb
nop
into
gs
enter
lret
iret
negb
add
cmpsb
add
dec
push
movsb
icebp
stos
xchg
sbb
sbb
or
test
sbb
inc
incl
pop
mov
pop
mov
mov
cmp
mov
push
in
int3
fwait
lret
push
int3
push
testb
jecxz
pop
in
addps
jnp
pusha
push
in
xchg
int
and
je
ret
cmp
loope
loop
sbb
and
and
mov
fmull
jno
lods
das
sbbb
sbb
inc
into
mov
jb
loop
dec
fiadds
xchg
adc
mov
jnp
scas
out
jecxz
add
mov
aam
mov
fdecstp
dec
or
ja
aam
or
clc
lcall
rclb
sti
dec
out
adc
addl
or
pop
outsb
jne
pop
icebp
subl
imul
adc
mov
das
cmp
ss
testl
cmp
rcll
sbb
hlt
adc
orb
mov
push
mov
jmp
js
mov
cs
mov
sbb
adc
test
mov
test
mov
lea
jbe
aam
sub
sahf
aas
cmp
push
pop
mov
repz
add
dec
shrl
lcall
dec
shr
pop
out
jnp
adc
popw
mov
insb
pop
push
icebp
mov
and
repnz
pop
xor
fidivrl
push
jno
push
in
or
mov
xchg
in
es
mov
and
ljmp
jae
int3
jle
or
add
scas
push
pop
push
sub
cmc
and
jp
clc
inc
push
xor
cmp
inc
pop
jp
dec
lret
adc
mov
clc
ja
cld
xchg
jg
jg
shlb
shll
mov
mov
pop
jbe
insl
push
nop
les
mov
loop
xlat
xor
sbb
out
cld
and
insl
jge
cmc
aad
xor
into
in
jbe
fdivs
fnsave
push
pop
arpl
das
xchg
pop
inc
xchg
and
push
cmp
and
mov
pusha
cmpsb
pusha
jb
push
add
aad
rolb
pop
outsb
xlat
sahf
dec
loopne
add
test
push
xchg
pop
or
jg
push
mov
mov
out
pop
andb
sbb
lods
addr16
je
add
sub
popf
mov
inc
and
and
mov
jecxz
and
and
push
nop
lods
ljmp
pushf
sbb
pop
mov
loopne
mov
cmp
test
mov
jb
loop
jecxz
xlat
fcoms
or
xor
outsl
jnp
push
pushl
cmp
lds
es
mov
int3
adc
pop
jg
movsl
mov
scas
fldenv
nop
imul
jne
add
sbb
push
sbb
and
mov
xor
mov
inc
mov
adc
stos
aaa
xchg
mov
jne
mov
dec
add
into
xor
fldcw
push
movsl
fdivrl
ret
mov
enter
cs
mov
cmp
lret
xlat
dec
and
fisubrl
jge
dec
ja
jle
ja
nop
outsl
dec
fbld
dec
data16
mov
sbb
outsl
jb
mov
jmp
enter
mov
xor
mov
les
cmp
shll
sarl
mov
rcrl
jge
mov
movsb
pushl
fisttps
fldt
jge
pop
cld
movsb
cmp
jbe
pop
push
repnz
fisubl
repnz
add
mov
ret
push
jno
add
cmp
and
dec
add
push
xor
loop
out
pop
sti
jg
imul
inc
cs
pop
outsl
lcall
in
je
test
pop
dec
add
ffreep
das
shl
add
fildl
pusha
mov
testb
test
pop
mov
xor
test
push
aam
mov
gs
cmp
dec
pminub
cmp
jg
aam
mov
daa
stos
cld
add
mov
test
jno
adc
xchg
daa
mov
aad
hlt
sarl
hlt
push
xchg
test
jp
outsb
jno
stos
out
ret
or
inc
in
std
inc
fists
fs
bound
xchg
mov
jecxz
cld
pandn
out
imul
sti
adc
inc
fldl
aam
or
rorb
jo
clc
xor
flds
outsl
jne
das
shrb
rcll
lea
mov
testb
loop
rclb
dec
jb
call
dec
cs
clc
xor
fs
and
mov
test
mov
add
add
orb
sahf
sub
test
dec
and
jg
popa
aad
lret
sbb
sbb
repz
outsb
ret
pop
lret
data16
in
leave
jle
sub
outsw
test
cld
and
outsl
cli
in
jae
jmp
dec
inc
scas
call
call
ljmp
stc
leave
pop
mov
or
push
aas
lods
pop
mov
add
das
mov
cs
inc
mov
dec
xor
fdivr
jl
cmp
jbe
fiadds
and
dec
das
adc
stc
test
push
stos
aas
mov
iret
jmp
sbb
xor
out
xchg
and
in
pop
ja
mov
inc
mov
cmp
popa
call
push
mov
sarl
leave
mov
repnz
shrl
sub
add
dec
addr16
outsl
add
dec
pop
shlb
daa
pop
jl
cmp
cmp
arpl
xor
fists
push
dec
sti
push
xchg
push
mov
jnp
inc
adc
sbb
orb
mov
jmp
cmp
int3
ror
add
push
jmp
in
push
dec
dec
popf
xor
sub
fcoml
sub
mov
je
int
int
mov
xchg
into
aad
testl
sbbb
mov
repz
mov
cmpsb
aad
or
movsl
ret
xchg
and
cmp
jne
cltd
mov
push
in
test
sbb
sti
data16
mov
push
aaa
dec
js
cmpsb
ljmp
movsl
jp
xor
dec
inc
data16
in
fwait
cmp
inc
icebp
xor
cld
add
inc
push
bound
ss
sbb
sbb
inc
test
mov
int3
push
loopne
xor
and
ss
push
in
inc
lahf
out
mov
jecxz
daa
lret
aas
inc
and
xchg
ja
pop
mov
aam
movsb
mov
pop
adc
dec
fidivrl
xchg
mov
jne
sub
inc
shl
mov
jp
call
test
movsl
jg
adc
mov
add
cli
std
dec
movsl
stc
cld
mov
push
sbbl
negl
pop
fidivl
add
add
or
cmp
pushf
outsl
ds
push
xchg
xchg
mov
and
aad
cld
sbb
sub
and
testl
sub
mov
cmp
lret
push
sub
js
jns
fsubrs
cmc
sbb
cmp
mov
xor
fwait
or
imul
mov
push
sub
and
jge
mov
cld
sahf
adc
adc
mov
push
cwtl
xchg
outsb
shll
add
clc
fldcw
mov
stos
aad
in
dec
das
movb
mov
xchg
dec
cmp
in
fcoms
icebp
inc
xor
adc
inc
pushf
lods
cmc
mov
movsb
adc
cld
subb
jne
in
test
shl
lcall
cmp
ficompl
shr
dec
push
or
xchg
addr16
add
in
jge
push
popf
cld
shl
sbb
shrb
stos
mov
sahf
aas
push
xchg
and
dec
sbb
and
data16
push
inc
pop
outsb
jl
jbe
pop
push
jle
hlt
fadd
mov
int3
insb
jbe
jnp
xchg
aam
in
repz
insb
jge
in
fwait
call
xor
lock
daa
pushf
scas
pop
jp
in
and
fcomps
lret
movsw
mov
cmp
cwtl
inc
cmp
jg
pop
in
pop
and
decb
repz
sbb
sub
in
int3
nop
out
xchg
sub
dec
mov
xor
movsb
cld
xchg
add
pop
mov
lods
mov
push
inc
mov
sarl
scas
push
lea
clc
mov
sbb
insl
jbe
push
test
stos
cwtl
xchg
rcrl
jmp
lret
mov
sbb
outsb
sub
lahf
popa
mov
and
cmc
xor
and
push
in
je
stc
push
scas
push
divl
jmp
addl
shl
sbb
inc
nop
jmp
and
fimull
shl
repz
cmp
nop
mov
sbb
lods
fisttpll
mov
std
push
xlat
inc
add
add
pop
in
cmp
xchg
mov
filds
cltd
jae
clc
test
lea
and
pop
aad
aam
jp
cmc
mov
into
int3
in
int3
mov
stos
andb
icebp
notl
out
test
jl
ja
cmp
lock
inc
push
jl
nop
mov
jle
ss
lcall
xor
popf
mov
testl
push
hlt
push
cli
sub
fwait
push
call
inc
icebp
mov
and
ret
sbb
xor
mov
mov
mov
aam
mov
xor
inc
loope
in
dec
push
cs
xchg
ljmp
pop
xchg
mov
out
xor
shlb
or
sbb
lret
cld
loop
sub
or
dec
sahf
push
jno
cli
loope
mov
pop
jns
inc
iret
mov
aaa
cmp
xchg
ljmp
push
sub
xor
popf
adcb
pop
mov
xchg
mov
dec
sub
and
dec
inc
into
pop
dec
loope
xor
test
subb
xchg
pusha
sbb
pop
fcomps
stc
push
data16
stc
pop
js
les
loopne
push
in
cwtl
icebp
aad
add
je
jl
adc
push
sub
pop
add
jmp
mov
pop
lcall
ds
shl
aas
loop
or
ds
mov
mov
clc
fisttps
lahf
and
sahf
mov
aam
rcrb
imul
sub
cmpsb
add
out
ja
mov
loopne
jmp
repnz
jecxz
and
std
cltd
notl
in
mov
mov
fdivrl
mov
int3
arpl
enter
inc
and
xchg
or
cmpl
xchg
mov
lods
push
movsb
sbb
sub
pop
mov
mov
lock
sub
sbb
lea
xor
or
inc
mov
sub
lcall
push
je
data16
decb
xchg
in
fbld
or
std
outsb
xor
scas
ss
nop
rorl
call
ret
jle
xchg
sbb
mul
daa
adc
mov
es
movsl
fnstsw
sbb
xor
mov
rclb
or
ja
add
pop
stc
psrad
fnsave
push
sbb
aas
fnstenv
inc
clc
xor
xorb
dec
out
mov
ljmp
xor
movsb
fldenv
cmp
jecxz
jmp
jecxz
inc
push
add
or
pop
shr
pop
add
dec
sbb
xor
cmp
mov
scas
stc
ret
int3
imul
mov
ja
aam
mov
sahf
negl
mov
jl
int3
cltd
lret
cmp
cld
mov
pop
in
push
add
jge
imul
push
call
adc
xchg
jne
pop
cmpsl
mov
xchg
and
rcrl
pop
clc
add
fistl
and
pop
sbb
pop
sbb
iret
popaw
sbb
addb
adc
and
mov
jg
cmp
push
adc
dec
icebp
sbb
sub
cmp
mov
loop
stc
push
cmp
fisubrl
or
xor
jecxz
cwtl
arpl
pushf
fimull
orl
pop
inc
nop
pop
es
or
jl
ss
push
dec
pop
js
xor
mov
add
in
xor
add
dec
cmp
adcb
fs
xchg
add
xlat
jb
js
add
rorl
add
mov
stos
int3
subl
or
mov
lods
and
dec
cmpsl
and
aas
cs
sbb
xchg
cmp
pop
aas
in
subl
insl
push
fiadds
inc
mov
xor
mov
mov
and
sbb
inc
out
inc
jmp
loopne
sbb
pop
add
and
mov
aas
inc
cltd
into
aaa
add
xor
bound
adc
sbb
add
sbb
movsl
ljmp
xchg
orb
jl
scas
or
hlt
adc
add
jnp
sbb
fsubl
adc
shlb
or
jb
loop
into
mov
sbb
mov
adcl
push
cmp
adc
inc
pop
out
aas
xor
push
std
loope
adc
fsubrp
mov
mov
xchg
shl
pop
cmp
dec
testb
pop
imul
lock
scas
test
dec
rorl
jg
jo
mov
inc
mov
test
mov
das
mov
int
mov
add
or
adc
mov
and
fsts
les
adc
popa
push
and
lcall
jmp
and
sbb
push
loope
mov
je
repz
test
sbb
ja
mov
mov
fimull
ss
add
pop
cmp
sbb
cmp
loop
mov
cmp
mov
jg
decb
sbb
dec
test
aaa
je
fwait
push
push
or
inc
jae
arpl
cmpsb
lock
aaa
mov
cmpsl
repz
fadds
push
mov
ss
cmp
sbb
daa
sub
pop
or
jmp
cmp
fisttpl
aam
loope
pop
adc
loop
js
loop
inc
bnd
add
cmp
sub
cmp
stos
sarb
ss
sub
in
add
mov
and
js
test
lcall
imul
enter
sub
pop
sbb
dec
ret
ljmp
es
pop
xlat
movsl
push
push
imul
andl
rcrb
lea
sub
pop
roll
mov
in
stc
mov
ja
cmp
movsl
imul
xor
lock
or
test
or
hlt
mov
add
xor
sbb
rol
or
or
mov
lret
lea
inc
iret
in
stos
outsl
cld
or
scas
push
in
xchg
xchg
jno
inc
mov
push
cmpsl
scas
fisubrl
scas
jae
lods
lock
scas
rcl
test
add
ss
cmp
dec
loop
pop
out
rcl
mov
arpl
loop
gs
mov
jb
mov
jle
adc
mov
insl
add
xor
sbbb
mov
scas
inc
pushf
dec
in
test
testb
and
adc
stc
inc
mov
repnz
push
cwtl
loopne
xchg
jbe
dec
loopne
adc
inc
sbb
push
ficoms
outsl
and
enter
mov
imul
sbb
jne
mov
repz
outsl
cld
xchg
pusha
popf
and
gs
das
stc
popf
add
and
mov
mov
out
pop
lods
dec
in
jecxz
inc
aam
mov
cmc
into
enter
sarl
shrl
ret
hlt
fyl2x
movsl
push
sub
cmpsb
sahf
jmp
paddusb
add
push
mov
inc
mov
jae
leave
int
lods
aas
sbb
mov
lret
lret
sub
lds
addr16
js
fs
ficompl
mov
ss
xor
cmp
jecxz
shlb
xchg
imul
pop
xlat
movsl
or
clc
out
sub
pop
mov
mov
lods
fidivl
aad
roll
dec
cwtl
das
jnp
ret
mov
loopne
rorb
cmpb
dec
in
dec
out
jnp
lock
xlat
push
movsl
add
ss
data16
stc
nop
roll
scas
adc
jns
and
push
xchg
xor
ret
je
xor
jnp
push
lods
sub
mov
xchg
addl
call
sbb
cmpsl
push
xchg
shlb
jno
lds
les
cmc
and
cmp
mov
cmpsb
pop
cmc
mov
int
add
sub
push
mov
mov
lret
and
lahf
sbb
dec
rclb
cmc
push
jbe
push
mov
fadd
pop
jecxz
negb
stos
pop
repnz
mov
repnz
xlat
outsb
loope
pop
add
pcmpeqd
fwait
bound
jmp
xchg
sub
push
add
sub
push
out
xchg
dec
out
sub
pop
jecxz
add
xor
mov
mov
das
mov
fnstenv
shll
cmpsb
or
in
jo
sub
cltd
ret
loop
jecxz
mov
iret
imul
cmp
cmp
push
call
xlat
outsb
incb
fdivl
and
push
and
sti
in
sub
in
adcl
fbld
shlb
sub
rep
add
add
and
imul
and
sub
add
sub
rcrl
mov
stc
dec
repz
and
and
or
pop
sub
sbb
testb
sti
push
movsl
sub
fs
inc
icebp
add
or
lods
inc
cs
test
xchg
daa
mov
add
or
inc
xlat
daa
sub
test
jne
or
int
push
sti
in
out
adc
es
lcall
xchg
loopne
dec
adc
push
movsl
dec
aaa
aam
imul
out
mov
cltd
mov
imul
imul
xchg
lds
lret
push
xor
test
mov
std
xchg
sub
pop
push
mov
xchg
lret
xchg
js
cs
pop
push
pop
cmc
xchg
mov
call
shlb
pop
mov
arpl
test
xchg
mov
scas
inc
imul
out
lea
mov
cmp
divl
pushf
xor
jbe
adc
je
sbb
jge
xor
jg
mov
flds
lds
jo
cwtl
stos
fidivs
mov
mov
jnp
add
fidivs
jg
dec
insl
jl
loopne
mov
jbe
pop
cmpsl
dec
mov
xorb
mov
jbe
cmc
cmpsb
push
dec
in
jno
movsb
xchg
test
jae
movsl
mov
ja
int
xchg
dec
in
jae
pop
mov
jbe
arpl
jno
daa
movsb
push
push
movsl
xorb
xchg
mov
xor
arpl
xchg
pop
icebp
enter
mov
sbbb
outsl
fs
popf
popf
stos
inc
rolb
mov
ja
mov
mov
and
enter
stc
fmull
mov
jg
out
test
jne
inc
test
and
stos
xchg
dec
jecxz
jnp
push
stos
pop
cmp
mov
mov
lock
popa
pushf
xor
mov
popa
lret
push
xor
nop
lea
mov
xor
andl
cwtl
xchg
inc
fcmovne
mov
pop
mov
insl
mov
mov
movsb
inc
ds
insb
push
jmp
mov
nop
daa
movsl
inc
push
lods
je
outsb
add
icebp
xchg
and
insl
dec
push
jmp
mov
ds
pop
push
movsl
lea
push
mov
adcl
xor
push
addb
or
cmp
push
stos
cmc
rcrl
jo
xchg
out
sbb
fwait
adc
dec
in
sbb
cltd
inc
dec
in
mov
dec
in
or
xor
loop
push
sbb
hlt
nop
cmp
mov
mov
xchg
jecxz
cmp
rolb
ss
stc
adc
inc
mov
adcb
xchg
and
out
out
pop
shrl
adc
inc
xchg
or
or
sub
cmp
mov
inc
fcompl
xchg
mov
xchg
sub
insb
fnstenv
xor
sbb
ljmp
xchg
insl
add
mov
mov
repnz
cmp
push
mov
cmp
in
insb
std
xchg
mov
jge
hlt
scas
rcrb
mov
ret
arpl
icebp
lds
add
xchg
cs
ret
hlt
jle
dec
scas
cs
pop
ja
push
cmpsb
enter
adcb
push
insl
mov
mov
jnp
sahf
test
jb
push
mov
jl
xor
pop
and
lcall
pushf
mov
popa
shrl
into
dec
jecxz
mov
mov
sbb
rorb
sub
mov
les
mov
ficoms
pop
out
dec
jo
sub
xor
lcall
icebp
out
cmpsb
aam
aam
mov
cmp
cmp
and
outsl
push
xchg
inc
ljmp
xchg
or
enter
cmp
nop
daa
pop
pop
sbbb
lods
and
fists
mov
xor
lock
pop
push
sbbb
aaa
sub
imul
lds
loopne
mov
mov
xor
arpl
jmp
add
pop
sarl
pop
pop
sub
pop
mov
movsb
in
pop
cmc
lods
push
testb
pop
cmpsb
mov
mov
push
stos
cmp
loopne
in
add
add
xor
mov
test
xor
cmpsb
jno
fsubrs
fwait
stc
sbbb
mov
es
cmp
les
pop
ret
in
push
in
sbb
int3
arpl
outsl
sub
dec
sub
jg
test
or
pop
out
pusha
in
lret
mov
sbb
lock
and
inc
cli
xchg
je
loop
or
outsl
push
dec
pop
out
test
xchg
test
pop
push
jmp
pop
dec
fisttps
lods
pusha
neg
pop
sbb
jg
aas
jmp
mov
ljmp
dec
shrb
mov
les
jle
movsl
dec
in
ljmp
scas
mov
fwait
push
in
in
mov
adcl
mov
loopne
dec
call
mov
imul
cmp
jne
flds
fwait
dec
sub
cmpsl
ds
popa
scas
pop
pop
pop
jecxz
test
mov
pop
mov
std
and
or
rorb
imul
mov
loope
mov
pushf
sbbb
lret
shl
cmp
iret
xor
mov
fnsave
sub
hlt
sbb
mov
cmc
hlt
das
nop
push
add
imul
jno
xchg
jp
push
aam
dec
aad
pop
out
pop
fistl
mov
mov
push
test
out
mov
push
jbe
pushf
and
mov
push
dec
in
xchg
popa
movsb
notl
fcoms
shll
jbe
xchg
xor
cmp
xor
sbbl
push
mov
push
daa
xchg
add
adc
sub
orl
sub
bound
mov
dec
stos
sub
clc
pop
js
ficoml
test
int
adc
test
mov
stc
sbb
jb
and
push
cmpsb
inc
push
xor
push
and
pop
push
in
cmp
rorl
pop
sahf
sbbl
inc
pushf
push
jae
sbbb
pusha
mov
fwait
push
ljmp
sbb
xchg
sub
outsb
push
push
or
gs
testb
sahf
ja
and
mov
xchg
ja
cli
xchg
lods
out
xor
or
push
stos
xchg
push
ljmp
imul
shl
mov
stos
jne
es
sbbb
mov
testb
pop
repnz
dec
adc
lods
inc
daa
fcomps
pop
enter
pusha
es
sti
test
cmp
mov
sbb
leave
lahf
push
test
xchg
ja
lahf
movsb
shll
add
fcmovu
add
sarb
loop
or
xchg
stos
loopne
add
cmc
xor
std
lret
ss
lret
jbe
ror
inc
fsubrs
mov
mov
and
movsb
mov
stc
dec
rcr
pushf
test
cmp
push
sub
jbe
testl
jp
cmp
mov
scas
je
clc
or
xchg
sbb
imul
mov
inc
cmp
jl
mov
xor
add
xchg
jns
aaa
out
test
pushf
mov
sub
dec
iret
call
mov
push
or
mov
pop
pop
fs
mov
mov
sub
push
jnp
and
in
pop
cld
sub
scas
xor
sbb
and
sbb
cmp
les
cld
es
jecxz
fidivl
pop
sub
jb
test
jne
js
imul
jg
mov
sub
pop
jnp
mov
xchg
jmp
or
mov
inc
or
gs
lods
pusha
je
stos
jne
xor
push
adc
mov
repz
mov
xchg
js
sub
test
aam
sbbl
out
xchg
jl
mov
bnd
or
pop
lahf
push
imulb
mov
dec
ret
iret
arpl
xor
push
das
stos
pop
mov
repnz
mov
out
push
push
mov
pop
adc
mov
ljmp
ds
inc
je
xor
mov
push
inc
in
fs
mov
dec
sahf
movsl
sarb
repz
loop
jecxz
mov
int3
add
mov
loope
fistpll
cmc
cmp
dec
mov
imul
jbe
fimull
push
in
rorb
sahf
rcrb
addb
shll
fdivrs
shrb
cli
jb
mov
add
lcall
in
inc
jmp
icebp
inc
xor
jb
dec
pop
add
stos
sub
call
roll
or
jle
inc
or
pop
xchg
ss
sbb
lea
adc
js
int3
mov
imul
out
mov
test
data16
pop
iret
mov
aad
jmp
inc
mov
hlt
dec
mov
sti
fcomps
fidivs
inc
xlat
sbb
pop
lds
or
in
jge
subb
inc
aam
xor
std
sub
shll
loop
add
jo
fcoml
or
adc
mov
lahf
test
adc
stos
dec
jge
push
stc
xor
mov
fldenv
loop
jnp
in
loopne
adc
and
add
shl
aam
leave
inc
lods
fcmovne
cmpsw
into
lret
in
cmpsl
imul
pop
mov
std
mov
addb
jg
pushf
in
lods
inc
mov
sahf
gs
adcb
sub
lahf
ss
jge
sub
outsb
dec
push
out
jo
mov
mull
ret
fsubs
dec
shr
popa
lea
icebp
loop
mov
mov
cmp
jo
cmp
and
test
push
lods
adc
or
pop
out
xchg
addr16
notl
lock
sarl
in
in
lret
xchg
shrb
jns
rcll
test
loope
dec
in
add
cmpsl
jge
add
jmp
cltd
mov
repz
dec
les
inc
dec
in
push
dec
add
push
cmp
int3
xor
xor
and
ret
dec
cmp
xor
sbb
inc
lahf
pop
ljmp
imul
movsl
lods
data16
jne
fbld
leave
jb
fnstcw
jb
scas
jg
repnz
xlat
or
mov
or
add
ficompl
nop
push
push
stc
lcall
decb
xor
mull
pop
scas
out
data16
xchg
mov
push
mov
push
push
dec
rorb
cmp
into
sub
sbb
in
push
daa
mov
pushf
jbe
js
sbb
lahf
pop
pushf
nop
pop
sbb
mov
inc
outsb
cmp
outsl
push
orl
sbb
in
mov
hlt
cmpsb
andl
pop
in
enterw
pop
out
dec
cmpsb
pusha
adc
cmp
out
xchg
cmp
mov
push
or
out
xor
cmp
mov
cmc
push
test
out
jo
dec
insb
mov
fsubl
lods
inc
mov
fidivs
fcom
aas
adc
fidivs
fcomi
scas
decb
cmpsb
ds
insl
mov
stc
pop
or
pop
mov
cmp
dec
mov
and
leave
inc
push
cltd
data16
cltd
fildll
jb
scas
int
or
jmp
lods
mov
jmp
negb
fwait
mov
add
sub
cmp
ja
movsl
imul
xchg
ljmp
mov
in
dec
mov
ljmp
je
xor
test
lea
ret
mov
ret
lods
xchg
mov
out
test
jo
fmull
popf
mov
dec
das
les
loope
mov
inc
rolb
out
push
push
push
mov
loopne
jae
daa
dec
adc
cmc
mov
and
adc
movsb
inc
mov
scas
push
mov
iret
cmpsl
fstpt
jecxz
jecxz
cmc
mov
pop
adc
sbb
xchg
scas
faddl
icebp
loop
clc
adc
mov
mov
fldenv
fsubr
push
sub
cmpsl
es
or
or
popa
psubsw
in
xchg
in
ret
repz
xchg
lcall
rcll
push
cmp
aaa
out
xchg
mov
push
leave
push
pop
cmpsl
jae
and
outsb
cmp
mov
in
xchg
push
imulb
push
push
in
daa
push
and
outsl
out
test
orl
dec
cmpl
or
test
sub
cmp
mov
inc
lds
in
jp
cmp
in
fistl
jmp
adc
add
test
icebp
sub
out
rcll
jp
mov
jmp
cmpsb
lods
inc
sub
xchg
xchg
pop
push
adc
pop
xor
inc
mov
subps
pop
nop
sub
out
pushl
sarb
inc
fdivr
popl
arpl
sti
dec
andl
inc
sbb
lahf
sub
or
test
jb
mov
pop
mov
xchg
add
jbe
push
or
push
aas
jmp
js
adc
stos
xchg
add
call
iret
or
rorl
addr16
xchg
ret
fbld
jno
cltd
imull
fstpl
push
jmp
mov
icebp
movsl
add
aaa
jmp
fdivr
or
mov
clc
out
into
roll
aam
out
rcl
popa
not
repz
shl
cmp
mov
repnz
ljmp
push
cmpsl
fstps
jo
popf
lret
push
shl
push
sbbb
add
push
lcall
cmp
iret
shrb
fcmove
ja
mov
sbb
inc
arpl
lret
aam
xchg
in
xchg
mov
mov
mov
sbb
cmp
divl
out
add
dec
mov
and
dec
sti
xchg
cwtl
sbb
rcll
clc
sub
lock
pop
icebp
fidivrl
pop
int3
jl
sbb
cmpsl
and
je
es
xchg
pop
jne
dec
or
mov
dec
pop
lret
adc
inc
outsl
xor
dec
inc
adc
dec
out
stos
movl
shl
add
xchg
push
push
mov
mov
fs
pop
repnz
out
int
pop
add
ret
inc
enter
inc
push
fisttps
jmp
test
inc
or
sbbb
imul
push
dec
ret
fcoms
loopne,pn
jns
inc
stos
add
mov
dec
stc
and
orl
pop
in
sbbl
pop
cmpb
sbb
arpl
out
adc
ss
fistl
xchg
mov
fildll
bound
je
add
mov
leave
cmp
js
fidivl
cltd
lcall
push
in
jnp
icebp
sub
xor
testl
sti
mov
pop
in
js
and
dec
mov
cmp
jg
mov
push
jmp
xlat
mov
fadds
ja
into
cmp
jae
fidivrs
adc
inc
jbe
ds
inc
and
sahf
jns
ja
jne
xchg
pop
push
mov
jne
jno
cmp
filds
inc
rcr
xchg
insl
scas
sub
or
leave
lea
dec
ljmp
outsl
cld
push
aad
and
jecxz
iret
and
jae
call
lds
add
mov
call
dec
lret
sub
loop
inc
mov
jecxz
test
inc
inc
lret
push
sarl
lds
ret
and
loopne
push
enter
mov
cmp
add
push
out
inc
xchg
dec
push
in
jl
rorb
jnp
and
les
imul
mov
push
sbb
es
mov
out
ret
dec
jne
lahf
outsl
test
xchg
jp
out
sbb
iret
inc
repnz
loopnew
outsb
sarl
push
stos
mov
inc
sti
or
mov
rorl
xchg
mov
ret
jmp
mov
mov
jno
sub
nop
dec
popl
xchg
adc
or
jmp
jb
mov
sub
pop
enter
sbb
inc
sub
sbb
call
mov
loop
cmp
fcmovbe
cmp
sbb
pushf
mov
xor
xchg
cwtl
fildl
mov
js
sahf
rcrb
mov
add
imul
cvtdq2ps
into
cmp
push
lock
fsub
jp
filds
or
outsb
sti
sbb
xchg
mov
lahf
addb
inc
push
hlt
push
sub
xrelease
lods
jbe
push
push
or
add
fucomp
enter
inc
jmp
inc
mov
fldcw
rcll
enter
cmpl
and
xchg
xchg
xchg
repnz
aad
jmp
sbb
dec
mov
cwtl
int
sub
cmp
jo
lock
mov
jmp
xchg
mov
sahf
fs
out
addr16
lea
call
xchg
sub
push
es
lods
or
cld
sub
or
xor
mov
jmp
or
cmp
out
sbb
lahf
arpl
dec
pop
les
xchg
jl
sub
fisttpl
sbb
fimuls
pop
inc
mov
mov
jb
cmpsl
aad
jno
jecxz
cmp
fcomps
pop
call
mov
mov
into
inc
int3
mov
add
jmp
scas
hlt
adc
dec
sysret
pushl
aaa
dec
inc
pop
clc
pop
pop
out
and
sbb
push
cs
push
inc
negb
adc
dec
loope
jo
add
fnstsw
lock
es
pusha
dec
push
test
rclb
js
popf
add
pushf
lea
mov
cwtl
jmp
inc
fxch
inc
jmp
mov
aam
and
scas
pop
mov
daa
push
pusha
repnz
sub
pop
and
repz
push
xchg
adc
shrb
stc
cmp
ljmp
inc
ret
out
pop
std
xor
repnz
jnp
jmp
enter
add
fcoml
test
and
xor
movsl
je
mov
mov
sbb
pop
mov
jmp
gs
vandps
cmpsb
cwtl
xchg
add
rolb
pop
lds
sarl
flds
mov
out
push
or
jecxz
repz
int3
pop
sbb
lret
call
faddl
repnz
jbe
mov
mov
or
fcoml
scas
inc
dec
lods
loopne
xor
daa
xor
loopne
jmp
mov
lods
inc
test
jmp
test
or
xchg
movsl
xchg
cli
clc
call
aad
or
fwait
nop
sub
fldl
jp
mov
cmp
lret
test
or
fdivrl
adc
cmc
jg
xchg
push
push
int3
cmp
cli
and
outsb
adc
imul
rcrb
sub
cmp
jne
pusha
pushf
rclb
and
lcall
push
and
sbb
sub
sahf
sub
inc
jl
adc
push
dec
mov
push
jno
mov
and
mov
jbe
jo
jge
mov
dec
mov
jl
pop
scas
popf
hlt
xor
call
loope
push
frstor
or
lcall
jns
icebp
xor
js
xor
cld
fists
shr
sbb
int3
lods
xchg
lock
aas
jns
shlb
movb
fisubrl
cltd
mov
adcb
jbe
imul
adcb
jno
jg
aaa
xor
int3
jns
mov
das
adc
movsb
pop
mov
or
push
cli
pushf
xor
std
das
dec
lcall
insl
scas
fmuls
fnstsw
cmpsb
iret
push
div
add
mov
mov
or
mov
in
xchg
ja
and
gs
mov
es
dec
mov
push
lods
push
mov
cmp
js
das
hlt
add
out
push
sub
loope
jmp
sub
enter
add
out
iret
inc
mov
loope
cmp
aaa
test
out
xchg
lret
pop
rcl
lods
pop
xor
xor
mov
lods
pop
aaa
in
lods
push
jo
jo
aaa
imul
cmp
pop
jle
cmp
add
mov
sti
sub
mov
sub
mov
pop
add
lea
xchg
xchg
pop
nop
cmpb
andl
and
push
jbe
push
addr16
jne
daa
mov
jbe
sub
push
push
jns
and
xor
fadds
gs
cmp
dec
nop
cltd
loopne
cld
mov
adc
mov
jecxz
mov
rorl
xlat
push
cli
aam
scas
bound
fdivrs
or
addr16
mov
fs
fidivrl
lea
or
pushf
sub
test
lea
sarl
fisttps
in
cmp
jnp
es
sbb
cwtl
cmp
sub
or
add
push
aaa
mov
ret
fbstp
push
scas
fsubs
repz
inc
ficompl
jmp
stc
aad
insl
mov
fdivrp
pop
mov
lock
fsubrs
outsb
xchg
jl
aas
adc
push
popa
stos
add
xlat
popa
xchg
pushl
rcll
adc
repz
lods
xor
dec
rcrl
nop
xor
mov
or
fldenv
xor
mov
std
or
fcmovnbe
je
sarb
push
mov
aam
inc
sahf
ljmp
mov
icebp
lcall
scas
fdivl
ljmp
mov
hlt
lods
inc
es
xlat
dec
pop
jle
sub
arpl
ds
xchg
mov
adc
add
dec
inc
fadds
repnz
or
out
sbb
push
cmpsb
sub
adc
and
add
out
xor
lcall
insl
inc
dec
mov
dec
pop
push
mov
push
dec
les
mov
push
andl
lea
mov
dec
mov
adc
jo
test
jl
cmp
jns
cmp
pusha
cmpsb
cmpl
jne
xlat
push
cld
and
jecxz
mov
popa
or
js
or
xor
mov
xchg
xchg
mov
loop
mov
icebp
cmpl
push
mov
mov
loopne
push
lret
shrb
lds
aas
mov
ja
push
filds
inc
loopne
bound
mov
mov
out
jne
xchg
pop
jne
mov
jns
sti
mov
nop
xor
negl
mov
repz
les
pop
bnd
enter
mov
cmp
xchg
push
sbb
loopne
aad
scas
inc
shll
cmp
subb
call
shrb
cmp
test
loope
das
loopne
leave
es
out
push
psubusb
in
lahf
fiadds
add
or
or
sti
add
in
cmpsl
pusha
cltd
mov
lea
xchg
lret
bound
sbb
bound
add
ljmp
push
divl
inc
rcrb
push
popf
dec
sub
jo
stc
dec
iret
inc
or
dec
mov
je
in
stc
mov
ret
mov
mov
jmp
lret
lret
imul
int3
out
leave
push
ss
lock
nop
inc
xchg
sbb
add
mov
and
xchg
inc
dec
rclb
xchg
popa
les
call
or
in
cmc
sbb
ret
or
xlat
shrb
lret
and
add
add
jp
cmc
cmp
pop
daa
fisubl
icebp
cmp
popf
jp
and
aam
jbe
imul
aaa
or
jmp
add
push
scas
and
cld
inc
shrb
sbb
scas
adcb
inc
fdivrs
jae
add
lcall
pop
push
push
push
push
push
dec
push
push
sub
push
push
out
xor
inc
mov
xchg
or
dec
fists
pop
leave
or
jl
hlt
inc
jmp
jmp
mov
inc
stos
fimuls
adc
cmpsl
loope
fdivl
fmuls
sarb
sti
mov
rcll
pop
nop
movsb
pop
mov
ficoms
xor
or
pop
nop
clc
in
mov
hlt
lret
insl
push
mov
push
outsl
inc
mov
mov
cmp
inc
idivl
mov
pusha
int
jmp
nop
clc
test
or
adc
int3
fwait
loop
sbb
jmp
ljmp
aaa
lods
nop
inc
push
in
jge
aaa
into
push
stc
test
cmp
out
fidivs
xchg
inc
lret
adc
mov
cli
subb
and
jb
lret
mov
enter
mov
in
cmpb
int3
aaa
popf
adc
inc
mov
push
fnsave
push
gs
fbstp
mov
add
in
xchg
mov
imulb
andl
mov
inc
rorb
jmp
aam
mov
pop
movhps
jmp
adc
out
push
out
int3
cmp
jmp
xor
cmpsl
mov
testl
dec
shrb
xchg
inc
sub
pusha
cltd
jbe
sbb
cmp
pop
cmp
pop
out
stos
popl
or
adc
xchg
sub
xor
mov
movsb
mov
jb
vpunpckhbw
nop
or
cs
scas
pop
insb
push
movsl
popf
xorb
out
rclb
add
dec
loop
and
or
imul
test
lret
cld
or
arpl
les
sbb
bound
mov
adcb
je
loope
out
cmpsb
sti
xchg
fdivs
jg
gs
and
sub
mov
push
dec
fdivl
jb
das
iret
popaw
sar
mov
scas
orb
xchg
push
cmpsl
sub
lds
in
popf
dec
jecxz
lds
insb
push
imul
mov
loopne
lcall
mov
xchg
and
jne
push
inc
and
movsb
xchg
dec
in
vpunpckhbw
jmp
out
xchg
int3
or
clc
sbb
sbb
and
gs
xchg
sub
pop
pop
jp
popf
stos
jg
aaa
mov
ret
mov
leave
cli
and
push
sbb
dec
jne
in
xchg
testb
out
mov
jne
mov
cld
push
das
loop
add
ficompl
stc
jae
call
cmp
ret
in
cmp
add
aad
lret
jnp
push
pop
fmuls
loope
cmp
mov
mov
or
mov
call
sbb
aam
scas
into
cmc
pop
mov
sub
fs
cmp
imul
orb
ja
mov
xor
cwtl
dec
lcall
xchg
pop
rolb
dec
and
mov
sub
mov
outsl
jae
repz
push
movsl
xor
lea
lcall
jno
addr16
jl
mov
adc
pop
imul
jg
fisubl
jmp
xor
push
clc
sub
sub
fcompp
test
or
push
mov
xchg
mov
repz
jo
pop
inc
jp
mov
cwtl
or
xchg
mov
mov
inc
jecxz
in
mov
lods
mov
mov
cmp
loop,pn
xor
pop
fwait
ja
push
mov
fmuls
roll
addb
sbb
mov
and
in
pop
bound
inc
scas
jo
mov
inc
cmp
mov
mov
fnsetpm(287
insb
out
cmc
lahf
in
xorps
mov
scas
cwtl
sbb
mov
lcall
pop
in
ds
xchg
or
loopne
add
jecxz
sub
popf
pop
jge
xor
push
push
adc
fidivs
sbb
not
adc
push
xor
mov
mov
call
push
push
stos
pop
and
add
sbb
aas
mov
es
cltd
xchg
mov
and
push
ljmp
pop
cmp
mov
cwtl
lods
js
xchg
ljmp
lds
mov
push
push
loopne
xchg
push
sbb
dec
out
bound
mov
into
sub
xor
mov
adc
push
into
loop
mov
aad
jo
stc
mov
pop
bound
dec
loope
les
or
or
push
popf
mov
and
xchg
outsl
push
push
or
jp
cmc
mov
and
sbb
xor
in
test
dec
dec
in
mov
es
clc
into
les
mov
mov
popa
push
sti
xchg
dec
add
je
fnsave
fs
xchg
insl
daa
scas
inc
cltd
push
fidivs
cmp
iret
stos
and
cmpsl
xchg
dec
dec
in
xor
aad
fiadds
sbb
jb
inc
fs
std
pop
cmp
lods
inc
mov
cltd
in
and
sub
je
frstor
out
test
mov
xchg
sub
and
movsl
popl
fbstp
ret
icebp
xchg
dec
or
lret
xchg
sbb
aas
addb
lahf
sub
lea
pop
hlt
xor
hlt
pushf
sub
pop
shll
sub
test
js
fisubrl
jecxz
insb
mov
test
mov
insl
adc
push
add
dec
mov
mov
sub
inc
insl
mov
cmpsl
js
push
adc
mov
dec
lahf
cmpb
dec
xor
addr16
dec
aas
cmpsb
movsl
sbb
add
pop
add
sbb
bound
and
sbb
js
iret
dec
mov
sub
repz
pop
cmp
sbb
mov
out
iret
xchg
and
ss
dec
dec
ss
movsl
fwait
imul
mov
out
pop
sub
push
jp
or
sbb
and
daa
sbb
adc
inc
ret
negl
mov
lahf
dec
and
mov
jne
sbb
inc
or
sbb
adc
mov
sbb
sub
cmp
adc
dec
rorl
notb
test
dec
and
cmp
jge
jb
inc
or
sbb
pop
jge
mov
adc
mov
and
cmpsb
jge
jnp
rorb
pop
adc
adcl
dec
cmp
xor
and
jg
aas
mov
adc
xor
dec
mov
push
cmp
xor
shlb
xchg
sub
jmp
cmpsl
mov
mov
mov
stos
sbb
daa
test
sbb
mov
push
and
and
mov
xor
sarl
xchg
push
sti
xor
xchg
lock
data16
mov
addr16
jns
mov
xchg
out
outsl
mov
lods
xchg
cmp
xchg
stc
push
push
inc
pop
sti
mov
push
out
sub
jp
pop
cmp
flds
or
xchg
cmp
stc
gs
arpl
outsl
or
mov
sahf
testb
cmp
jle
inc
sbb
jl
pop
sbb
adc
inc
cmp
cmp
mov
inc
outsl
sbb
pop
pushf
icebp
pop
cli
xchg
adc
mov
dec
adc
add
push
mov
movsl
or
inc
sub
jp
outsl
in
pcmpgtw
dec
test
inc
adc
loopne
negb
test
xchg
insl
out
xchg
fimuls
jp
mov
mov
and
lret
sub
pop
mov
popf
cmp
mov
loope
sub
out
mov
cmp
sub
cmpsl
or
popf
mov
or
je
lahf
cmp
mov
test
int3
and
in
cs
xchg
loope
mov
jp
jo
cmp
mov
mov
test
xchg
inc
sbb
cli
inc
adc
mov
pop
incb
add
and
mov
inc
ljmp
aas
cltd
and
jne
pop
cmp
jp
imulb
jnp
lods
in
sbb
mulb
aaa
mov
data16
nop
xor
ljmp
mov
xor
outsl
ret
test
push
jmp
insb
das
cmp
xchg
daa
mov
js
hlt
dec
out
in
xchg
pop
mov
shlb
aaa
mov
add
fcomps
pop
fildl
adc
xor
sub
cmp
mov
xchg
push
sub
or
gs
jge
fiaddl
xchg
inc
mov
sub
push
cmp
xor
add
data16
pop
fildl
test
ss
cmpsl
push
in
lea
push
int
or
push
sbb
push
add
das
jge
push
hlt
and
fadds
mov
jnp
test
imul
and
shll
stos
sbb
aad
sbb
inc
cmc
popa
jb
dec
or
outsl
hlt
bound
xchg
aas
scas
arpl
sbbl
push
add
dec
xchg
aas
outsl
inc
cmc
popa
clc
jno
mov
jmp
xchg
aas
das
arpl
sbb
or
sbbl
inc
hlt
mov
loope
adc
orl
inc
push
pop
and
js
shl
pop
out
push
mov
sbb
mov
xor
mov
jo
jb
lock
rcll
pushf
inc
push
add
xchg
inc
push
into
xchg
jle
or
out
jo
lahf
jge
orl
ljmp
adc
test
mov
nop
cwtl
inc
outsb
divl
loope
insl
pop
add
insl
mov
repz
mov
jle
shl
hlt
adc
adc
inc
inc
or
mov
jl
xchg
filds
cmp
out
inc
or
test
mov
cmpsl
sub
adc
popa
lcall
or
inc
mov
pop
add
scas
lods
xor
pop
sbb
popa
jbe
out
je
mov
dec
xchg
lahf
pop
add
daa
sub
int3
imul
pusha
cs
filds
hlt
push
popa
mov
push
std
cs
pop
and
jmp
aaa
repnz
lods
es
stos
mov
test
pop
jns
std
dec
adc
and
xor
jne
mov
jno
and
sbb
fs
into
xchg
adc
inc
or
sbb
scas
out
and
xor
push
imul
sub
mov
lcall
scas
sarl
xor
gs
lcall
lret
jb
sbb
les
movsl
mov
or
xor
jp
cmp
lahf
sbb
cmp
cmpl
or
lods
and
popa
lcall
and
dec
cmp
fs
jecxz
mov
mov
push
mov
mov
nop
inc
sahf
or
and
nop
inc
ret
imul
xor
les
lcall
mov
xor
pop
push
sub
sub
divl
scas
mov
jns
stc
pop
frstor
leave
or
test
adc
push
daa
daa
mov
mov
icebp
addb
loope
dec
insb
sti
data16
enter
ss
into
shrl
das
stos
pop
or
pop
testb
out
sbb
jle,pn
pusha
enter
notl
sbb
dec
rcll
pop
mov
mov
stos
testb
sbb
jmp
out
data16
fistl
lods
dec
dec
or
mov
stos
ss
sub
lahf
mov
in
ret
lret
aaa
cmp
scas
fadds
stos
sti
push
lods
sub
test
mov
xor
movsb
xor
sub
sbb
mov
cmp
sbb
lods
pop
sbb
sbb
incl
mov
jmp
cld
add
sbb
imul
popf
cmp
dec
lret
xor
xchg
sub
cmpsl
ds
js
pop
or
sub
pusha
in
jns
cs
insl
mov
adcl
push
adc
pop
add
bound
lret
xor
sub
jns
mov
mov
cmpsb
jmp
mov
dec
and
mov
lock
jnp
les
inc
or
mov
fstl
pop
add
sub
imul
stos
xor
icebp
ja
pop
jle
in
mov
test
inc
or
xor
mov
lret
fcmovnb
in
fadds
fisubl
or
or
out
pop
sbb
cwtl
pop
test
jecxz
mov
mov
mov
clc
adc
test
out
loop
data16
jns
ja
lods
stos
cmp
repz
pop
fs
test
adc
scas
push
dec
stc
arpl
push
cld
cmp
stc
arpl
xor
iret
adc
imul
das
stc
mov
mov
cmp
daa
sarl
int3
mov
push
stos
jp
add
push
enter
xlat
ficomps
mov
pushf
in
jge
pop
lcall
xor
jle
jmp
clc
lret
int3
jecxz
gs
pop
icebp
in
adc
clc
sub
push
push
jae
or
xchg
mov
mov
mov
fnstcw
push
fwait
mov
out
push
aam
call
rol
xchg
imul
ljmp
or
cmpsl
sub
inc
or
fnstsw
or
dec
lods
fwait
mov
call
mov
fistpll
push
xchg
cmp
iret
mov
lods
xor
push
mov
clc
fcom
ja
jmp
cld
data16
xor
or
les
cmpsb
xor
xor
rcll
push
sahf
push
jl
ror
cs
push
dec
lahf
enter
in
mov
ss
stos
add
push
push
ja
inc
adc
xor
and
ret
scas
test
fs
fbstp
test
mov
int3
xchg
mov
arpl
aam
mov
jge
sub
pop
jbe
push
scas
sub
add
mov
sub
pop
outsb
sbb
jmp
popf
push
pop
push
lret
pop
xlat
sbb
jne
push
and
clc
cld
stc
arpl
mov
movsb
leave
stos
sub
mov
add
aad
mov
sahf
push
xor
mov
mov
jbe
hlt
cmp
out
adc
test
in
jge
mov
cmp
xchg
jb
imull
test
adc
sub
fsubr
add
nop
aas
xchg
cmp
rcrl
lods
popa
stc
pop
mov
stos
xor
in
jmp
dec
lods
insb
testb
test
push
bound
aad
push
scas
xor
mov
ss
out
inc
push
sarl
adc
sub
imul
popa
gs
lahf
icebp
test
imul
pop
push
mov
sbb
add
outsl
dec
or
jecxz
push
push
inc
aaa
mov
std
jno
sub
sub
jb
xchg
jne
cwtl
nop
daa
lret
xor
sbb
xchg
add
dec
push
out
test
mul
imul
pop
pop
xor
jne
mov
outsl
inc
xchg
or
jns
dec
push
jbe
mov
mov
imul
sub
fistpl
callw
push
cs
test
imul
mov
fs
cmpsl
sbb
xor
jmp
pusha
push
push
add
jp
outsb
cmp
imul
jle
pop
in
movsb
xchg
mov
stos
lods
into
into
mov
mov
ja
jecxz
into
repnz
icebp
arpl
outsb
ljmp
cmp
jp
movsl
lcall
lea
scas
js
ljmp
adcl
test
popa
sub
roll
jge
jp
mov
mov
xor
xchg
xchg
mov
into
cmp
xor
lods
cwtl
insb
sub
jl
push
scas
or
in
cs
dec
sbb
sbb
xchg
push
cs
ret
ret
test
xor
lods
lea
imul
xchg
test
stos
add
imul
push
test
and
flds
addb
mov
popa
in
jns
jg
pushf
outsl
fidivrs
lds
scas
mov
mov
dec
or
sub
or
pop
inc
adc
stos
ret
nop
cs
int
out
imul
std
xchg
inc
mov
stc
pop
add
pusha
inc
adc
ja
push
stos
sbb
dec
sbb
cld
pop
jl
lcall
in
cltd
jns
or
inc
mov
cmp
adc
fidivrl
dec
mov
push
roll
mov
mov
push
add
lods
jns
imul
ret
leave
rorl
add
sub
repnz
pop
repz
bound
jle
imul
jo
fmulp
pop
push
stc
imul
sarl
push
push
stc
outsb
loopne
jnp
jnp
and
in
jmp
pop
add
mov
mov
dec
jp
and
xchg
jl
xchg
pop
outsb
jmp
shrb
push
adc
mov
sub
push
movsl
mov
mov
loopne
rcr
stc
push
int
or
mov
xchg
adc
imul
dec
aaa
cs
sahf
cmp
stc
movsb
mov
out
mov
mov
repnz
lret
add
cmpsl
dec
mov
inc
in
ja
cwtl
aam
punpckhwd
push
inc
pop
lahf
aas
mov
push
notl
adcl
sbb
push
int3
data16
adcl
mov
inc
outsb
mov
outsl
hlt
or
or
inc
pop
fiaddl
inc
sub
adc
inc
mov
mov
gs
push
nop
test
pop
add
pop
xor
in
cwtl
adc
jnp
les
test
dec
adcb
rcll
adc
dec
inc
lcall
mov
fimull
adc
inc
enter
cld
imul
lret
fidivrl
fwait
lock
cltd
mov
lret
push
outsl
repnz
outsb
add
xchg
test
shll
or
gs
fs
jb
mov
inc
das
rorb
xor
int3
insl
enter
jp
fmuls
daa
nop
cmp
popa
icebp
pop
pop
xor
xchg
cmp
fs
rorl
cmp
push
sub
sahf
jbe
dec
or
outsl
jb
in
adcl
outsl
in
cmpsl
out
ss
cmpsb
xor
mov
inc
cli
dec
push
add
dec
or
or
jb
mov
lods
outsl
hlt
jl
daa
stos
sbb
loopne
dec
or
push
lds
scas
xor
adc
lret
and
mov
fwait
mov
dec
adc
test
sarl
inc
or
jo
xor
xor
ret
adc
repnz
dec
cmpsb
xor
aam
fistpl
jns
mov
movsb
roll
mov
pop
stc
jge
pop
shll
shl
jno
jb
inc
outsl
out
sub
push
push
or
lea
or
pop
pop
pop
stos
xor
mov
mov
iret
data16
mov
pop
add
test
xchg
mov
xor
test
push
pop
pushl
fisubrl
and
inc
gs
lahf
dec
or
cmpsb
sub
sub
iret
fdivl
jns
jl
mov
arpl
cmp
jge
mov
or
dec
sbb
ja
sub
mov
aas
call
int3
sub
adc
cli
bound
aaa
cwtl
push
jne
lock
test
ror
pop
push
sub
test
cmp
pop
jno
adc
mov
mov
push
cmp
fiaddl
mov
mov
popf
cmp
sub
adcl
mov
mov
jl
mov
add
addr16
pop
popa
hlt
push
enter
nop
fdivrs
push
add
mov
push
mov
stos
outsb
xlat
out
sbbl
dec
bound
popf
jmp
stos
gs
cmp
fnstcw
sub
pop
test
lods
sub
fidivs
out
js
push
mull
pop
cmp
ljmp
xchg
inc
push
fidivrs
mov
lret
push
test
lea
mov
push
mov
dec
loopne
push
fidivl
aaa
pop
out
mov
scas
mov
mov
and
mov
xlat
sahf
inc
pop
aam
lock
mov
jae
cmp
movsl
mov
movsb
repnz
dec
sahf
ds
mov
mov
scas
jns,pn
mov
inc
mul
adc
inc
out
sbb
xor
outsl
ljmp
popf
cmp
add
sub
xor
scas
pop
test
imul
aaa
pop
add
lds
test
in
shll
add
mov
dec
pop
adc
movsl
mov
dec
mov
cmc
pop
mov
lea
mov
je
add
cmp
inc
dec
inc
or
xchg
mov
jnp
sub
ljmp
pop
cld
daa
lock
inc
mov
aas
xchg
push
mov
pop
pop
inc
ja
jne
mov
mov
mov
in
cmpsl
sti
fs
lods
xor
sub
gs
mov
inc
add
mov
call
add
xchg
scas
sahf
inc
xchg
or
mov
fdivl
repnz
nop
inc
out
push
mov
rcrb
lods
adc
out
scas
dec
mov
lahf
sub
repz
pop
xor
outsl
aam
scas
add
xor
cmp
or
out
mov
xor
mov
cld
gs
mov
fmull
insl
cmc
xchg
cltd
jl
js
in
mov
frstor
sbb
mov
es
add
movsb
xor
ljmp
mov
inc
ret
out
ljmp
int3
test
cmp
imul
inc
xchg
pop
and
aaa
fwait
inc
push
or
mov
xchg
jmpw
or
mov
mov
fwait
and
inc
or
xor
inc
adc
xor
insl
out
outsb
es
sub
mov
xchg
inc
inc
lods
inc
adc
clc
inc
int
leave
loop
insb
loope
inc
paddsb
mov
and
mov
ret
cmp
fsubrp
leave
jns
fwait
repnz
and
xchg
sub
cmc
xchg
daa
sbb
orl
xchg
cmp
shll
sbb
mov
je
lahf
arpl
sbb
add
sbb
fwait
inc
xchg
mov
in
in
jbe
stc
bound
mov
dec
xchg
bound
shll
add
or
xchg
lods
lock
pop
ret
ret
dec
cwtl
inc
pop
adc
rol
ret
xchg
jl
jb
nop
fldl
mov
paddb
or
xchg
xor
and
jg
and
xchg
in
roll
rcrb
mov
mov
mov
jno
mov
sub
add
sbbb
and
out
faddl
sub
cmp
lret
push
repnz
push
test
fcoml
xchg
or
addr16
les
insl
xor
sub
add
push
sarb
sub
mov
cmpsl
into
cmc
leave
jb
jp
orb
fadds
mov
lods
mov
xchg
rolb
and
sbb
sti
lcall
xor
sbb
xor
adcb
jg
pushf
or
bswap
pop
in
inc
xchg
sub
mov
jg
mov
xchg
shlb
lods
sub
xchg
popf
cmp
into
inc
fdivrp
fidivl
pop
sbb
mov
sarl
mov
sbb
lock
adc
mov
inc
xchg
ds
dec
icebp
pop
mov
jne
filds
jmp
fnstsw
mov
xchg
push
incl
push
ret
insb
pop
loopne
nop
jno
fsubl
inc
pop
jge
je
fldt
mov
jge
cmp
clc
popa
cmpsl
ds
stc
push
in
sub
adc
jb
popf
xor
outsb
pop
scas
popf
idivl
shll
and
call
std
mov
xor
ds
mov
sub
enter
popa
out
scas
and
sbb
int3
push
cli
pop
pop
lods
xor
mov
out
mov
mov
inc
sbb
dec
flds
sub
daa
cmpsl
sub
cmp
lds
mov
addr16
dec
sbb
pop
scas
inc
or
sub
cmp
in
lods
mov
sahf
andb
dec
lret
popf
pushf
rorl
jno
daa
cli
mov
and
popf
nop
out
jnp
sbb
pop
insl
inc
adc
lea
pop
mov
jno
aam
and
jno
inc
sub
sub
fdivrl
and
pop
push
mov
subb
push
insl
lock
out
lea
rolb
mulb
lods
sub
fsubl
push
mov
add
pop
jge
jp
xchg
inc
adc
add
dec
jecxz
jge
or
sub
cwtl
nop
dec
mov
cli
ret
sub
or
adc
popa
je
cmpsb
loopne
call
xchg
pop
movsb
outsb
icebp
nop
mov
lret
add
push
sub
into
add
inc
xchg
popa
lock
jge
aaa
dec
or
les
outsl
fistps
in
and
push
or
loop
jns
pop
repnz
add
sub
lods
out
fbstp
scas
repz
pop
sbb
enter
js
shll
jo
push
out
mov
dec
aaa
repnz
shll
mov
adc
fnsave
rcrb
shrb
insb
insl
cs
jl
call
outsb
scas
pop
std
pop
js
ror
cmp
or
pop
sti
xor
jbe
sbb
mov
xchg
into
xchg
mov
mov
ja
cs
cmp
jo
bound
iret
into
xchg
sub
mov
in
xor
scas
shrl
stos
mov
jl
mov
sub
lock
push
push
out
cmc
xlat
pop
ret
mov
add
movsl
mov
mov
push
push
or
aad
xchg
insl
pop
in
jo
jp
jo
ljmp
and
mov
dec
push
dec
jno
stos
push
mov
mov
xlat
cli
add
push
pop
sbb
into
lea
xor
popf
pop
sub
jg
orb
lret
xchg
inc
popf
adc
fisubrs
push
add
mov
sub
popa
das
sbb
lret
js
xor
or
pop
dec
mov
xchg
pop
xchg
pushf
cmp
ret
repz
movsb
dec
loopne
sbb
ss
jbe
shlb
inc
or
add
les
pop
add
jmp
js
dec
xchg
cmp
jbe
mov
mov
hlt
fs
stos
lcall
pop
orl
add
or
add
mov
bswap
pop
cmpsb
inc
or
int3
xchg
jno
sub
jns
jmp
call
xorl
popf
aaa
xlat
mov
dec
or
aam
pop
sub
cmc
mov
mov
ds
loop
jnp
inc
pop
repz
fiadds
sbbb
stos
sub
jle
cmpb
rorb
xor
ss
call
mov
andb
add
mov
outsb
jmp
out
jb
lret
sarl
aaa
cltd
inc
inc
push
out
sbb
dec
xor
mov
cmpsl
fnstsw
test
movsl
mov
or
sub
inc
or
jo
arpl
push
rcrb
jo
andl
aam
je
ret
push
mov
mov
cmpsb
cs
jns
mov
scas
ja
fisttps
sub
dec
les
cmc
negl
imul
in
lea
enter
nop
flds
clc
into
add
adc
xchg
cmp
pop
fnstenv
testb
mov
mov
cmpsb
and
mov
mov
mov
add
mov
ret
jecxz
pop
cli
xor
jbe
push
sub
ljmp
lods
sub
sub
hlt
scas
or
jmp
scas
adc
inc
mov
shl
adc
sub
fs
jbe
dec
jbe
leave
mov
mov
sahf
inc
jns
fldl
fnstsw
xchg
mov
pushf
pop
rorl
mov
js
mov
mov
test
movsl
and
adcb
jb
mov
jnp
aas
mov
xor
rclb
pop
clc
ficompl
int
dec
outsl
adc
sahf
lods
adc
rorb
or
mov
daa
lods
push
imul
sahf
cmpb
cs
pop
lret
negl
mov
mov
xchg
outsb
in
or
ror
test
daa
sbb
gs
push
mov
sbb
mov
mov
and
fs
sahf
inc
inc
jne
in
or
rorl
in
pop
ja
push
iret
cltd
arpl
call
jno
sarl
rorb
test
push
sbb
fnstcw
inc
ret
xchg
sub
int
jmp
add
jo
enter
scas
sub
sub
adc
or
mov
fldcw
lods
xor
mov
mov
push
fidivrl
mov
test
jle
imul
pushl
mov
pushf
jno
pusha
gs
pop
sti
movsb
jnp
in
mov
insb
add
lds
mov
cmpsl
dec
xchg
imul
pushf
sbb
sbb
sub
xchg
mov
arpl
pop
pushf
adcb
ds
and
daa
jb
insb
jmp
imul
sbb
ljmp
ret
lcall
cli
clc
movsb
les
sbb
xchg
pop
or
mov
sarb
push
add
pop
pop
js
pusha
ds
insb
sub
aaa
jae
in
xchg
int3
clc
test
into
stos
daa
xchg
divb
jae
push
mov
ffreep
add
cmp
cmp
daa
pop
test
cmp
repz
dec
pop
mov
cs
cmp
lods
cmp
mulb
cmp
mov
cmp
adc
mov
mov
scas
sub
mov
mov
and
push
aas
fistpll
lea
fimuls
pusha
cmc
bound
dec
fildll
shr
jne
stos
aaa
popf
and
sub
cwtl
inc
std
cmp
repz
sbb
xor
and
loope
nop
mov
push
cli
sbb
jb
leave
mov
imul
mov
mov
in
outsb
cmpb
mov
pop
ret
arpl
into
mov
test
stos
mov
out
imul
lock
loopne
sbb
lods
sub
faddp
xchg
mov
cmpsb
test
mov
cmpsl
fwait
jae
aad
rclb
pop
mov
or
aas
cmp
les
and
push
push
lods
xchg
push
test
xor
fst
mov
mov
mov
dec
mov
stos
xor
es
xchg
movsl
pop
mov
imul
aas
fsubs
faddp
or
ss
pop
add
jle
mov
push
fistps
mov
push
mov
inc
jno
sub
xchg
sub
fstl
jmp
xchg
inc
sahf
fs
mov
test
mov
jecxz
fwait
leave
xchg
jecxz
mov
negb
jb
loop
add
gs
xchg
jg
sub
sub
cmp
dec
pop
xchg
and
add
mov
out
mov
and
out
dec
push
rcl
movb
cli
pop
mov
fdivrl
shll
fnsave
fs
jp
pop
lock
jnp
add
mov
push
enter
dec
fidivs
icebp
pop
sbb
inc
into
mov
mov
add
in
pusha
lods
in
mov
and
and
jecxz
rclb
push
std
xor
scas
cmp
jae
aam
ja
incl
int
push
jnp
adc
leave
fstpt
in
cmpb
xor
insl
jns
sbb
movsl
sub
pop
push
aas
rorl
mov
and
stos
ss
notb
cmp
shrb
mov
jns
cmpb
adc
fidivl
xor
add
and
inc
hlt
push
xlat
pop
push
xchg
add
add
xlat
xchg
push
pushf
cmp
inc
push
mov
movsl
xor
jb
es
push
mov
mov
push
add
sub
and
inc
lcall
xor
cmp
loope
mov
adc
inc
sarb
cmc
fnstcw
mov
mov
lds
call
std
repnz
mov
loop
nop
movsb
push
clc
dec
lds
mov
cmpsb
sub
movsb
into
xchg
into
xchg
ficompl
sub
adc
xchg
rorb
add
fiadds
xchg
cmp
or
int
out
rcrl
mov
mov
mov
inc
loope
dec
mov
aas
sahf
aaa
mov
cmc
xchg
xor
jp
int3
movsb
xor
xchg
add
pop
pop
pop
scas
pusha
pop
hlt
xchg
mov
lods
std
into
daa
mov
fistps
jbe
int3
adc
bound
std
sarl
adc
outsl
mov
jecxz
jne
push
cld
and
sbb
xor
jge
lret
sbb
push
sarb
inc
jns
lock
outsb
call
das
lods
int3
mov
mov
pop
adc
mov
loopne
dec
movsl
cmp
out
dec
repz
shrl
or
test
ds
ja
adc
dec
insb
jmp
jmp
test
mov
xor
pushf
pop
fistpll
push
loopne
lahf
cmp
sti
adc
aad
dec
pop
pop
adc
mov
cmp
loopne
ret
jns
mov
or
mov
push
push
add
movsb
pop
jne
ljmp
lods
insl
call
lret
js
pop
add
cmp
clc
pop
es
or
enter
test
imul
sahf
loop
lods
pop
mov
pop
rcrb
in
push
jecxz
inc
js
adcb
js
cltd
mov
shl
dec
xchg
sub
cld
addr16
sbbb
sub
xchg
sbb
ja
adc
mov
push
stos
imul
cli
je
or
add
mov
ret
jecxz
js
inc
repz
lret
jp
sbb
push
push
out
js
andl
ljmp
stc
xor
sbb
pop
ds
subb
data16
movsl
ja
or
mov
or
fnstsw
push
push
negl
pop
lahf
inc
iret
sti
push
pop
pop
adc
cltd
aaa
sarl
leave
push
add
pop
mov
push
lahf
pop
push
jnp
pushf
outsl
leave
push
clc
xchg
jl
dec
ljmp
les
sbb
pop
xchg
mov
std
fildll
pop
push
jl
cmp
cmp
sub
inc
ficoms
push
sti
fisubl
filds
je
sarl
add
les
pop
mov
adc
or
and
sub
jnp
and
mov
mov
nop
pop
xor
enter
inc
and
pop
sbb
ret
dec
or
or
mov
pop
lret
sub
push
clc
jecxz
mov
mov
test
dec
adc
lret
dec
add
mov
mov
test
clc
push
jmp
adc
jnp
dec
jb
jl
add
iret
mov
scas
inc
and
aas
cmp
int3
arpl
pop
hlt
mov
jnp
loope
or
xor
push
mov
fstpt
fbld
adc
hlt
mov
xor
test
mov
xor
rcr
mov
in
sub
jno
inc
insb
add
clc
mov
mov
int3
rclb
lods
add
test
and
pop
jae
push
jmp
leave
jo
sti
out
cltd
sbb
and
mov
ret
lret
cmc
fstpl
pop
ljmp
push
lahf
fwait
sbbb
in
aad
dec
pop
cmovne
inc
sub
imul
cli
xchg
jnp
mov
into
adc
cmp
das
push
pop
mov
in
lods
fdivl
les
idiv
cli
xchg
xor
mov
dec
push
sbb
popf
movsb
ss
mov
push
jmp
adc
jl
dec
jb
jp
add
int
and
and
inc
xlat
cmp
arpl
pop
cmc
lea
adc
out
lahf
sbb
fwait
xor
es
xchg
xlat
outsb
fcmovu
stc
push
cld
cmc
mov
xor
stos
addb
enter
push
or
dec
out
sub
jno
inc
insl
add
jge
scas
cltd
mov
lret
rclb
lods
add
test
lret
push
inc
pop
jb
push
jmp
vpshuflw
out
lcall
and
mov
ror
repz
or
jnp,pn
pusha
push
cltd
xor
aam
dec
push
or
aad
pop
pop
arpl
nop
jp
mov
adc
ss
xor
push
push
mov
in
stos
fdivl
ret
insb
add
std
cli
xchg
das
pop
mov
dec
push
sbb
pushf
mov
pop
out
hlt
push
jmp
adc
jge
inc
jb
js
add
xchg
cltd
nop
daa
lret
mov
mov
push
or
cmp
int3
arpl
pop
testb
adc
in
lahf
push
add
push
mov
cmpsl
fsubrs
or
testb
dec
adc
jg
sahf
xor
rcl
mov
out
sub
jno
inc
outsb
add
lods
cwtl
mov
lret
lods
jmp
inc
sbb
ds
push
ljmp
jno
mul
add
adc
and
sahf
mov
mov
ficompl
or
jmp
inc
sub
adc
or
mov
daa
mov
add
inc
fnstsw
fs
mov
mov
lret
adc
xor
xor
dec
push
mov
out
test
je
shrl
sti
sti
xchg
sub
dec
sbb
lcall
pop
in
repnz
in
and
out
inc
inc
jae
jbe
add
sub
mov
mov
sbb
inc
fnstcw
cmp
pusha
testl
jecxz
mov
xor
daa
mov
test
fsubrs
fisubl
or
testb
dec
adc
jge
lahf
ss
xor
iret
sarl
out
daa
inc
outsb
add
lods
xchg
mov
enter
jmp
ss
cmp
pop
outsb
jb
jmp
out
rol
or
loop
fwait
adc
xchg
sub
and
popf
xchg
mov
int
lock
or
in
addl
pop
or
scas
mov
mov
add
inc
fidivrs
and
insl
push
pop
gs
lea
mov
leave
adc
xor
xor
dec
push
rclb
dec
out
cmpsl
fidivs
mov
cld
xchg
sub
mov
inc
dec
sbb
cwtl
lahf
cmp
sarb
push
in
and
je
jne
add
sub
mov
mov
sbb
into
outsb
push
pusha
testl
loop
mov
das
xor
mov
fnstsw
fldenv
div
lea
sub
sbb
adc
jnp
mov
leave
int
mov
out
fdivl
inc
outsb
add
stos
xchg
mov
int3
sbb
sbb
aaa
into
push
cmp
pop
insb
jno
in
mov
ret
jae
cmc
loopne
fwait
adc
xchg
sub
and
pushf
test
mov
into
gs
pop
cmc
pop
adc
test
jl
pop
or
lods
mov
shl
mov
fistpll
and
insl
push
pop
data16
mov
cmpsb
lods
test
ffreep
adc
xor
xor
dec
push
rcrl
dec
out
cmpsb
fbstp
mov
std
xchg
sub
mov
inc
dec
sbb
xchg
sahf
cmp
iret
mov
pop
jmp
or
jle
inc
jne
je
add
sub
mov
mov
sbb
inc
fnstenv
iret
insw
push
pusha
testl
loope
mov
sub
dec
mov
fidivs
fsubs
or
testb
dec
adc
jns
mov
leave
lret
sarl
out
and
outsb
add
stos
xchg
mov
lret
sbb
pop
push
cmp
dec
cmp
pop
push
push
in
mov
ret
hlt
fiadds
movhps
mov
fwait
addb
mov
pop
cmc
add
es
pop
arpl
xchg
jns
xor
int3
mov
loopne
pop
xlat
outsb
push
pop
decb
mov
adc
xor
xor
dec
push
rcrl
push
out
movsb
fbstp
mov
std
xchg
sub
lea
dec
sbb
xchg
pushf
cmp
int
leave
pusha
call
or
jg
inc
jne
jb
push
popf
mov
and
loopne
mov
sbb
inc
fidivl
cmp
imul
mov
test
fisttps
mov
sub
sub
arpl
push
jg
inc
fidivs
gs
pop
hlt
testl
js
mov
lret
mov
call
push
outsl
push
jo
sti
xchg
test
lea
leave
sbb
push
sbb
iret
dec
aaa
leave
pusha
imul
jle
shlb
add
sub
and
cltd
addl
in
rcrl
add
out
test
jge
push
popa
or
xchg
js
xor
lret
mov
loopne
push
fsubrs
push
decb
lea
les
cmc
cld
mov
lret
rcrl
push
call
aam
outsl
push
in
cmc
std
xchg
daa
jle
mov
bound
lret
mov
popa
out
push
out
sbb
jne,pt
jo
pop
sahf
lea
and
dec
push
add
aaa
iret
imul
mov
test
or
sub
sub
popa
dec
mov
fidivs
aam
cld
add
daa
sbbl
inc
push
lods
ja
mov
lret
leave
int
push
ljmp
push
cmp
pop
outsb
je
xchg
cmpsb
mov
clc
loop
inc
adc
cmp
dec
xor
push
out
popf
mov
jg
mov
push
popf
or
xchg
sub
mov
xchg
jg
fnstenv
shll
add
xchg
and
push
pop
or
xor
leave
mov
loope
sbb
jo
push
push
mov
ret
repz
movsb
cmp
ret
addr16
jmp
sarb
xchg
and
inc
sbb
ja
lods
inc
xchg
cwtl
cmp
leave
mov
in
pop
out
sbb
ljmp
pop
or
shrl
adc
inc
shlb
push
stc
orb
pop
aad
or
or
das
sub
pusha
dec
mov
fbstp
shll
add
clc
and
test
pop
inc
push
lods
jne
mov
lret
int3
rclb
push
jmp
push
cmp
insb
jae
xchg
movsl
lea
mov
loopne
inc
adc
cmp
dec
xor
popa
imul
xchg
jg
mov
push
popf
or
xchg
sub
sub
pop
fs
xchg
jge
fldcw
iret
pusha
testl
and
push
pop
push
movsl
je
xor
mov
loop
sbb
jo
push
imul
lahf
cmpsl
xchg
fld
adc
cmp
adc
inc
dec
ret
pop
jg
push
jmp
shlb
call
cmp
pop
lods
inc
nop
cwtl
cmp
leave
mov
ljmp
aaa
cmp
push
outsb
pop
or
shrl
dec
adc
inc
fldt
shrl
dec
stc
orb
pop
rcr
or
xor
pusha
dec
mov
loopne
fidivl
shll
add
clc
and
test
inc
push
lods
jae
mov
lret
pop
out
jmp
push
cmp
push
xchg
movsl
mov
mov
fisubrs
dec
xor
popa
arpl
lock
test
jg
mov
push
popf
or
xchg
sub
pop
fs
xchg
jnp
fldcw
pusha
idiv
or
mov
jg
push
pop
xsha1
cmpsb
mov
xor
scas
sub
push
testl
fidivl
push
push
test
popf
cmpsb
mov
fdivrs
cmpsb
cmp
inc
dec
les
arpl
xchg
lahf
loop
shll
add
cmp
jne
scas
inc
mov
int3
arpl
call
jmp
xor
push
or
mov
loopne
dec
adc
inc
fsubrl
shrb
dec
arpl
jle
lock
fimull
movsl
or
lahf
ss
inc
mov
loope
cltd
shrl
add
stc
nop
pop
and
sbb
jno
movsb
cmp
lret
cld
in
ljmp
jno
push
mov
mov
fsubrl
rorl
lret
bound
pop
icebp
lcall
paddsw
pop
sahf
push
seta
inc
daa
and
dec
xchg
jns
fisubrl
lret
popa
clc
cld
or
mov
sbb
adc
mov
ret
mov
jecxz
pop
push
push
subl
pushf
movsb
mov
mov
cmpsb
cmp
inc
dec
les
bound
popf
loop
iret
mov
or
lock
cmp
mov
pop
scas
inc
lea
fs
pop
icebp
pop
add
xorl
punpckhdq
mov
mov
fidivs
sub
shrb
dec
fs
jge
lock
fmuls
movsl
or
mov
ret
pop
inc
mov
loope
cwtl
fdivl
iret
push
xchg
push
and
scas
jo
movsb
cmp
enter
jecxz
jmp
sbb
js
xor
call
mov
fldt
roll
int3
arpl
pop
icebp
cwtl
sub
por
or
aas
es
xchg
js
fldt
lret
sti
push
repnz
sbb
sbb
adc
mov
ret
hlt
std
dec
jecxz
push
fdivl
dec
push
subl
pop
aam
sbb
daa
getsec
into
inc
dec
les
popa
push
in
xchg
fwait
loop
int
jae
in
add
cmp
mov
pop
mov
mov
into
gs
pop
icebp
adc
ss
push
mov
rcl
mov
push
stc
inc
fisubrs
xor
imul
lock
push
movsl
pop
icebp
mov
ret
pop
inc
mov
loope
xchg
fnsave
push
xchg
sbb
xchg
push
cmp
movsl
cmp
aaa
into
rol
pop
clc
loope
in
adc
loop
dec
xor
gs
add
mov
fldcw
aam
sub
fs
fs
repnz
jg
xorb
or
cmp
daa
mov
jbe
fsubl
enter
add
mov
push
adc
lahf
test
fld
mov
in
adc
je
dec
imul
addr16
xchg
cltd
lahf
mov
sarl
cmpsl
ds
cmp
ds
lds
push
in
nop
cwtl
jecxz
lret
or
jmp
cwtl
sbb
xchg
sub
cmp
mov
mov
iret
data16
pop
repnz
in
test
xor
adc
or
mov
fidivl
fisubrs
shrl
dec
gs
jp
icebp
mov
aam
cmpsb
add
daa
sub
push
je
dec
loop
xchg
fnsave
imul
sbb
mov
push
cmp
mov
jb
cmp
mov
fists
adc
jecxz
dec
xor
arpl
popf
test
mov
xlat
scas
inc
or
ds
sub
fs
arpl
jge
subb
or
cmp
daa
mov
mov
movsl
scas
aad
loope
arpl
testl
sbbb
push
adc
popf
cmpsl
xor
fdivrs
dec
in
adc
je
dec
insb
add
sti
xchg
xchg
sahf
mov
sarb
test
and
cmp
cmp
pop
jbe
push
in
mov
je
loope
add
xor
push
mov
mov
iret
data16
pop
repz
in
test
xor
gs
or
mov
fnstenv
fisubs
sub
gs
js
repnz
rcll
cmpsl
add
mov
lds
mov
jecxz
xchg
fnsave
push
cld
out
xchg
sbb
mov
push
cmp
mov
jno
mov
lds
push
in
push
sbb
jnp
das
jae
popa
imul
pushf
adcb
out
aad
inc
pop
adc
inc
sub
fs
bound
xchg
jnp
subb
or
cmp
sub
mov
frstor
les
add
mov
push
sbbl
push
adc
fwait
movsl
xor
mov
dec
out
adc
jne
dec
insl
add
arpl
xchg
xchg
pushf
mov
into
mov
mov
out
test
sarb
inc
pop
je
push
out
mov
jne
fucomip
add
xor
and
xchg
addr16
pop
hlt
psubq
test
dec
or
jg
cltd
xor
xlat
mov
or
dec
fbld
aad
pop
inc
data16
jbe
repz
rcll
test
jmp
cmp
rclb
dec
in
xchg
fidivs
enter
in
xchg
push
sbb
and
sbb
mov
ret
hlt
fistl
or
in
dec
sub
add
mov
and
add
es
gs
pusha
pop
cmc
xchg
jns
subl
or
aaa
push
sub
dec
pop
mov
fisubs
ret
repz
cmc
mov
adc
adc
lcall
push
in
cmc
dec
out
pandn
inc
insl
add
std
xchg
xchg
lcall
out
test
sarl
inc
pop
jb
pop
out
mov
jbe
fsubp
add
xor
and
test
shrl
fcompl
or
das
jnp
popa
dec
or
xor
mov
pop
repnz
loopne
sub
insb
pop
inc
addr16
jne
repz
iret
adc
sbb
das
push
cmp
dec
in
nop
fbstp
imul
jecxz
xchg
adc
sbb
lahf
mov
sarb
ficoml
or
or
add
xchg
sub
shlb
xlat
cmp
pop
pop
cmc
js
test
lret
or
xor
push
mov
fbld
shll
cld
cmc
mov
adc
sbb
dec
adc
cltd
mov
rcrl
dec
out
push
loopne
inc
inc
insl
add
popa
xchg
xchg
cwtl
mov
lret
mov
jmp
inc
sbb
ds
pop
jo
pop
lock
ja
fucom
add
xor
and
test
shrl
fistpl
or
out
xchg
jnp,pn
pusha
dec
or
xor
aam
dec
push
icebp
dec
loopne
sub
insb
pop
inc
addr16
je
repz
into
adc
sbb
xor
push
cmp
pop
insl
jae
in
mov
jbe
lds
loope
xchg
adc
mov
dec
xor
mov
insb
test
shlb
fcoms
or
out
inc
sub
pop
data16
xchg
jge
sub
shlb
fdivrs
iret
push
pop
pop
testb
jge
loope
or
xor
sub
dec
push
mov
fistps
mov
testb
dec
adc
jg
mov
leave
sarl
push
out
or
ja
inc
outsb
add
cmpsb
cmp
xchg
inc
and
loopne
fs
sbb
xor
mov
ss
ljmp
inc
lahf
js
push
pusha
shl
mov
inc
rcrl
cs
fdivrl
push
std
repz
insl
loop
or
cld
jbe
mov
inc
mov
ds
xor
aas
jmp
xchg
lods
push
inc
in
adc
or
xor
push
scas
int
out
sbb
push
and
imul
xor
jno
pop
and
out
gs
jge
stos
pop
sbb
ret
test
jecxz
scas
jmp
fldenv
pushf
aad
cld
pop
stc
cld
fcos
movsl
loop
push
pop
xchg
lods
adc
cmp
inc
movb
push
or
lret
jecxz
pop
add
jg
ret
pop
adc
dec
pop
push
je
pop
xchg
movsl
shlw
or
and
cmpsl
jl
xor
lds
or
xlat
clc
or
test
and
and
notb
xor
out
sbb
scas
addr16
shrb
cmp
mov
adc
mov
adc
cli
jle
ds
imul
jb
sub
cs
mul
jge
out
roll
mov
pushf
dec
ds
sahf
cltd
ret
aas
testl
mov
sar
cmp
and
inc
ficoms
fs
sbb
icebp
insb
mov
sbbb
sub
xchg
mov
jl
les
jg
lock
in
subl
inc
call
mov
mov
or
fsts
or
cmpb
pop
cmc
sbb
lods
lods
bound
sbb
test
testb
incb
popf
add
xor
sub
adc
inc
push
pop
jge
add
add
add
xor
add
add
add
add
push
in
sub
lea
xchg
or
imul
inc
jmp
sbb
scas
cmpsl
and
and
mov
fisttpll
xchg
stos
dec
or
mov
int3
rclb
ja
sub
xlat
sbb
lahf
cmp
or
inc
dec
or
into
sub
add
lds
jae
mov
mov
inc
decl
pop
inc
and
sbb
fidivrl
out
pop
cld
or
test
pop
or
outsl
dec
push
push
add
add
add
cmp
sub
mov
and
mov
rorl
push
mov
scas
pminsw
cwtl
dec
sub
outsb
cmp
mov
in
cmp
and
adc
and
dec
lods
push
mov
xchg
xchg
mov
sarl
push
sbb
in
rclb
out
cwtl
sbb
and
pop
out
pop
add
ljmp
cmp
jle
dec
push
xor
repz
das
and
rorl
or
xor
lea
pop
or
add
nop
inc
mov
pushf
xchg
mov
xchg
lods
sbb
hlt
fistl
clc
xchg
pop
shrl
and
and
jge
xor
enter
jno
add
jns
or
push
pop
mov
decb
pop
negb
adc
mov
lock
call
lds
pusha
clc
stos
movsb
popa
push
stos
push
push
popa
push
shr
push
xchg
pop
push
stc
jp
mov
add
stos
xchg
js
sbb
out
gs
xchg
add
das
push
test
sbb
pop
mov
das
int3
pop
pop
xor
adc
stc
int3
push
cmp
adc
scas
or
sbb
dec
lea
imul
mov
popf
inc
mov
adc
bound
adc
xchg
or
cmc
das
cmc
push
sbb
dec
push
lahf
cwtl
out
addr16
out
addr16
cs
cmp
pusha
cmp
shr
scas
repz
aas
out
outsl
mov
xchg
mov
fnsave
das
lds
inc
pop
hlt
or
mov
insb
cltd
nop
xor
sbb
icebp
xchg
pop
xor
fs
adc
cli
cmpsl
mov
imul
mov
pop
shll
unpcklps
xchg
shr
addr16
fnstsw
test
int3
lret
cwtl
mov
mov
aas
sub
or
je
mov
cld
insb
mov
imul
fwait
aaa
push
cmp
xorl
fs
fwait
mov
jns
fs
push
push
xchg
xor
sub
test
leave
in
rolb
jae
rcr
xchg
xor
mov
sbb
lret
dec
inc
shlb
jno
loop
lds
and
jmp
push
fisttps
ror
out
loop
popf
fs
xchg
xchg
mov
es
push
mov
adc
jnp
sbb
nop
jne
and
mov
insl
movsl
dec
fstpl
mov
sti
rcrb
loopne
test
mov
js
out
xchg
mov
mov
sbb
cwtl
loop
and
and
push
sti
clc
or
dec
insl
or
add
push
lret
xor
out
dec
rclb
inc
cmpsb
ret
out
aas
rcrl
ds
fnstcw
ljmp
sbb
cs
mov
adc
inc
in
xor
jae
or
shll
std
add
xchg
js,pt
or
push
scas
add
scas
repz
stos
aas
orl
scas
jle
in
outsl
inc
mov
mov
sbb
push
in
and
xchg
mov
pop
int3
push
clc
jae
incb
sub
xlat
incl
dec
jne
push
sub
mov
js
push
insl
fcompl
inc
add
push
mov
add
cmp
push
scas
rcrb
movsb
aas
fsubl
and
inc
mov
call
mov
jnp
push
jle
out
lods
inc
shll
leave
xor
adc
aaa
mov
jp
or
and
xchg
xchg
daa
jns
cmpsb
jae
xchg
mov
clc
fisttpll
clc
leave
jl
iret
or
ret
jo
lahf
rclb
das
pusha
pop
jmp
push
and
int3
fisubrs
xor
aad
clc
jae
sub
call
push
push
or
push
pop
mov
pop
test
pushf
hlt
or
fstp
in
sub
sub
inc
mov
nop
adc
xchg
test
mov
popa
add
dec
mov
decb
push
xor
fwait
xor
xor
xor
cltd
ret
inc
mov
xchg
jns
int3
add
add
ret
leave
cld
cli
sbb
jo
mov
and
mov
cmpsb
mov
rorb
cmp
loope
mov
es
jae
jbe
ret
dec
mov
xchg
das
mov
and
sub
sub
and
out
jecxz
fwait
jb
or
hlt
pop
push
notl
jmp
inc
bndldx
inc
aad
lock
insl
out
adc
adc
mov
lcall
je
stc
xor
dec
lret
inc
adc
add
roll
mov
xchg
cmp
aaa
lret
out
outsl
popf
sub
xchg
aad
js
in
xor
pop
je
rcll
jbe
mov
mov
add
mov
in
sbb
cmp
dec
and
xchg
out
mov
cmp
mov
test
movsl
push
jbe
add
cli
arpl
cltd
push
or
in
jbe
stos
mov
pop
stos
and
jbe
lret
cli
pslld
sti
ja
insb
lret
mov
jae
cmp
xor
xor
xor
lcall
adc
mov
in
adc
sub
lods
fisttpl
popa
push
lahf
scas
pusha
dec
mov
cmp
dec
push
pop
psrlq
xchg
adc
cltd
add
gs
std
mov
lock
fstps
inc
mov
push
cmp
enter
repz
aas
icebp
dec
mov
scas
ja
pop
into
lcall
into
cwtl
imul
into
xchg
imul
ss
popa
into
xchg
insl
xor
xchg
outsl
addr16
lcall
clc
pop
sub
cmpsb
sti
ja
pop
mov
ficomps
mov
in
xlat
adcb
jmp
pop
