jg
incl
xchg
jecxz
add
pusha
mov
mov
jmp
add
jo
mov
ss
pop
jmp
mov
inc
sub
mov
mov
xchg
jg
or
cmpl
sbb
out
jno
push
adc
mov
mov
mov
idivl
mov
shrb
push
fsubrl
flds
call
pusha
push
or
or
add
and
flds
jmp
leave
push
pop
lods
popa
xor
idivb
std
sub
mov
mov
scas
mov
add
sub
cld
mov
outsb
ret
inc
jl
and
popa
call
and
call
pop
mov
dec
mov
add
inc
mov
loope
sub
dec
cs
inc
mov
mov
mov
mov
add
test
mov
je
outsl
mov
mov
add
sub
push
in
mov
add
inc
popf
out
add
dec
jne
adc
faddl
outsl
jnp
rcrl
das
flds
mov
or
cmpsb
add
inc
or
push
jle
paddd
cwtl
test
jne
orl
jg
mov
fdivrs
ret
sti
mov
mov
std
loope
scas
cmp
jne
ret
xchg
iret
inc
jo
pop
mov
push
out
std
push
pop
jmp
inc
clc
imul
aaa
ja
jmp
daa
lcall
mov
clc
mov
push
mov
stc
jg
out
fnstsw
mov
flds
xchg
push
xchg
stos
push
stos
mov
mov
in
mov
addr16
insl
pop
inc
mov
mov
arpl
inc
cld
cmp
fcompl
or
sbb
mov
out
dec
jno
mov
dec
lds
jb
or
and
btc
mov
inc
jp
mov
adc
repnz
mov
or
int
divl
jae
adc
or
out
xor
push
lock
repz
cmp
add
hlt
push
cs
sti
insl
mov
test
sbb
cld
lods
sub
inc
mov
std
das
inc
sub
cmp
inc
mov
mov
inc
jnp
aam
cld
jmp
fwait
push
xor
adc
test
cmp
cmp
sbb
fidivrs
das
jne
mov
pop
js
jns
xchg
ret
cltd
test
mov
fbstp
sbb
aas
pop
jge
mov
adc
fnstsw
fstps
xlat
xchg
ret
xchg
lds
mov
in
lcall
jae
ds
mov
aas
clc
pushl
stc
cwtl
ss
mov
out
scas
inc
sbb
jne
mov
dec
mov
jbe
notl
roll
mov
mov
jl
repnz
insb
test
pop
mov
pop
stc
pop
lods
inc
add
mov
pop
imul
push
jp
and
adc
or
mov
dec
mov
icebp
idivl
pushl
outsb
ljmp
sarb
add
sahf
mov
iret
cmc
pushl
cwtl
jae
call
pop
and
mov
mov
lds
popf
js
outsl
fistpll
pushf
jecxz
mov
or
adc
inc
jno
cmp
std
imul
inc
test
es
sti
pop
mov
mov
sub
pop
pop
sub
adcb
out
cld
push
scas
loope
fmuls
cmpb
es
mov
jle
pop
add
dec
dec
and
cmp
sub
les
cld
outsl
js
mov
jae
xchg
fstp
jbe
pop
adc
jge,pn
adc
xchg
inc
jle
pop
lock
mov
xchg
mov
push
sub
mov
jne
mov
pushf
ljmp
sbb
mov
adc
push
pop
stc
stos
pop
pop
mov
scas
dec
cmp
sti
push
out
mov
push
jmp
sbb
inc
xchg
cld
mov
jns
pop
test
jg
out
lahf
ret
pop
mov
dec
mov
or
and
mov
mov
mov
inc
fs
stos
lcall
sahf
push
fsubrs
stos
pop
incb
jle
call
or
adc
xchg
mov
cmpl
add
xor
sbb
mov
and
ss
or
int
daa
cld
jmp
mov
imul
mov
jnp
ds
add
mov
ror
xor
roll
jae
test
mov
mov
jg
sarl
cmp
xchg
in
data16
lahf
insb
orb
adc
cltd
cmp
cmp
xor
and
mov
mov
std
push
out
lret
insb
test
fmull
pop
mov
inc
mov
mov
ja
subl
ja
mov
std
loopne
mov
ret
insl
xchg
ret
dec
sbb
sub
int3
push
push
mov
jg
outsb
push
mov
pop
sti
mov
mov
sbb
push
shl
adc
pop
scas
or
pop
jg
cmp
jnp
mov
push
arpl
aas
outsl
mov
jecxz
add
adc
mov
mov
mov
inc
inc
and
mov
rolb
dec
dec
shl
mov
addl
xor
aaa
mov
jecxz
mov
arpl
mov
mov
mov
lcall
ja
daa
cmpsl
push
lods
aam
repnz
xor
mov
jmp
jl
sahf
xchg
inc
xchg
shll
lcall
cli
cld
sar
stos
dec
pop
daa
cmp
add
and
push
add
or
adcb
mov
fbld
add
outsl
fisubrl
push
xchg
push
mov
mov
inc
push
jg
nop
adc
loope
imul
lea
push
jmp
inc
rcr
mov
orb
shll
cld
dec
pop
mov
cmp
call
sarl
clc
mov
insb
lock
fbstp
mov
mov
fucomi
lahf
sbb
fwait
mov
insl
scas
push
sbb
mov
sbb
push
mov
push
decl
es
and
out
dec
mov
mov
aas
pop
jns
aas
mov
cmp
xchg
mov
fs
dec
cmpsl
mov
sbb
mov
cltd
jns
out
xcrypt-ofb
mov
mov
mov
pop
pop
push
inc
test
jg
in
pop
dec
jge
xchg
inc
popf
xlat
sbb
lahf
in
icebp
in
xor
jb,pn
mov
pop
cld
btrl
mov
insl
mov
dec
pop
lcall
out
mov
movl
push
jb
mov
and
mov
fstp
andb
push
mov
fs
dec
lock
movsl
test
dec
mov
dec
cmp
ret
dec
mov
gs
mov
inc
push
clc
mov
gs
aaa
iret
sub
bswap
or
enter
xchg
mov
aad
icebp
ljmp
das
lcall
dec
xchg
mov
push
clc
lock
in
fwait
mov
cmp
sbb
or
mov
mov
loopne
fwait
ret
cmp
mov
fsubp
dec
mov
lahf
outsb
pop
lock
mov
xchg
jns
cmp
in
stos
push
aad
push
les
arpl
jbe
lods
adc
mov
jbe
and
dec
jbe
adc
js
mov
scas
ret
int
outsl
mov
mov
mov
outsl
daa
inc
xchg
mov
push
fildll
popa
jl
jb
sub
pop
das
mov
clc
pop
cld
insl
not
mov
scas
ret
sahf
mov
dec
mov
addr16
lahf
jbe
ret
lcall
std
iret
cmpsb
inc
sub
dec
mov
stc
shl
pop
aas
and
mov
out
dec
ja
cli
push
cmp
mov
sbb
ret
mov
shrb
mov
mov
jg
mov
push
stc
dec
test
mov
sbb
pusha
in
push
jnp
mov
push
push
sub
call
addr16
je
rcrl
cmpl
bnd
mov
jb
lret
mov
insl
repnz
mov
fiadds
outsl
jo
mov
mov
icebp
mov
xor
bnd
mov
imul
or
cmc
jge
sub
add
pop
mov
dec
fsts
dec
push
mov
pop
adc
rorl
ss
leave
mov
sti
push
dec
adc
mov
add
fwait
push
cmp
stos
test
daa
pop
cld
push
push
mov
mov
bnd
fbstp
pop
xchg
shrb
mov
dec
out
dec
pop
push
mov
jl
pusha
push
fldenv
addr16
mov
add
mov
stos
xchg
dec
push
jge
push
or
mov
ss
push
mov
lea
decl
jecxz
enter
fcmovne
xchg
add
push
mov
fnstenv
pop
push
jae
fsubs
rolb
icebp
jg
sti
decl
jns
jge
lcall
mov
aas
jno
mov
pop
xor
mov
pop
cmc
test
mov
add
inc
add
imul
vmwrite
push
adc
mov
hlt
subl
mov
push
faddl
icebp
jae
mov
frstor
push
and
push
cmpsb
subl
arpl
sti
and
ja,pn
mov
mov
pop
sbb
mov
clc
fildll
shr
movsl
xor
mov
mov
push
xchg
jns
or
ret
jnp
lret
insl
dec
push
mov
mov
jg
stos
decl
stc
std
sub
fsubp
mov
int3
fwait
mov
mov
jge
test
rcll
mov
push
cli
xchg
subl
mov
inc
decb
push
std
insl
push
mov
push
jecxz
call
lds
ficompl
pusha
adc
push
aas
mov
sti
push
or
xchg
mov
or
mov
and
mov
loopne
notb
inc
pop
cld
xchg
sbb
int3
sbb
test
in
xchg
mov
andl
push
imul
mov
aaa
mov
mov
xchg
arpl
loop
lret
cmp
shll
mov
mov
xchg
push
sub
mov
das
outsl
sbbb
push
mov
mov
div
mov
ja
mov
inc
mov
push
stc
mov
xchg
pop
ljmp
sarl
repz
sar
mov
mov
mov
aaa
lods
nop
mov
sahf
pop
sub
adc
xchg
mov
xorl
aam
xor
dec
adc
mov
movsb
mov
xor
sub
ficoml
cmp
lods
imul
or
push
mov
jns
mov
jnp
cmp
jp
pop
xchg
or
movl
inc
clc
dec
xchg
mov
notb
xchg
popf
es
adc
shll
mov
outsl
fdivs
mov
outsb
mov
pop
lret
dec
inc
lock
pop
je
por
mov
jmp
mov
ja
sub
leave
and
mov
mov
sub
mov
cmc
inc
loop
int
lods
adc
dec
ud0
pop
cmpb
jae
dec
xor
nop
mov
sbb
mov
xor
mov
cmp
or
mov
out
pop
mov
sub
aas
in
lcall
add
pop
cmp
mov
loop
mov
data16
fisubrl
pop
xor
roll
mov
dec
inc
sub
icebp
sbb
call
lcall
mov
cmpsb
push
pop
push
xor
pop
clc
leave
push
jmp
and
cmp
decb
mov
push
xor
incl
push
enter
mov
lock
jmp
sti
outsb
lods
cs
in
insl
pop
lock
mov
mov
ds
iret
outsb
clc
fsubrl
and
mov
mov
sbb
lcall
jl
mov
sub
xor
adc
aas
mov
push
aad
jge
inc
mov
adc
aam
mov
mov
mov
xchg
hlt
mov
aas
fscale
or
mov
icebp
enter
enter
mov
lret
mov
jle
scas
popf
jp
lds
mov
inc
pop
cli
adc
out
pop
ret
and
lock
mov
dec
xor
mov
jno
xchg
iret
ds
xor
mov
loop
sub
push
cld
ja
mov
jo
mov
arpl
mov
and
mov
mov
cmpsl
je
outsb
sbb
jb
cmp
mov
lret
popf
or
stos
xlat
js
mov
fildl
outsl
pop
test
cmp
into
xor
ss
cwtl
mov
test
lds
out
jg
add
shll
dec
out
decl
push
andl
mov
jge
insb
pop
mov
scas
pop
pop
mov
push
clc
inc
mov
lock
cmpsb
jae
in
mov
filds
out
adc
jbe
sub
aas
jg
mov
sti
das
xchg
mov
lods
mov
fistpll
imulb
popf
add
int
in
mov
pop
mov
add
ss
add
mov
arpl
imul
lahf
dec
inc
adc
mov
es
js
test
mov
mov
xchg
out
cli
ret
incl
adc
cmp
xor
or
clc
daa
popf
dec
sbb
loope
jle
decl
pop
and
pop
sub
mov
jne
mov
sbb
ja
xor
icebp
lahf
mov
mov
sbb
das
lds
and
lock
daa
je
je
stos
out
push
cmpsl
sbb
mov
inc
aaa
je
cmp
ljmp
fwait
les
hlt
loopne
push
fnstenv
jl
push
cli
loope
jmp
sub
nop
dec
mov
sarl
mov
in
ja
mov
mov
pop
jns
mov
push
out
mov
fwait
xchg
jbe
jg
cmp
ja
mov
repnz
arpl
aam
pop
idivb
jecxz
fscale
xchg
cmpsb
cmp
movsl
mov
icebp
pop
clc
mov
xor
sub
jp
sarl
cli
ljmp
push
push
cmp
lea
mov
push
jns
xor
and
repz
or
jne
std
jg
cwtl
pusha
xchg
fsqrt
adc
adc
jg
xchg
icebp
cmpsb
dec
push
inc
das
bound
xor
sbb
clc
jg
hlt
lret
mov
movsb
cmpsb
popf
mov
mov
cmp
xor
psrlw
push
jo
xchg
xchg
jb
push
push
insb
icebp
ficoms
lods
mov
sub
push
loope
ds
pop
xchg
add
mov
mov
pop
loope
and
mov
jbe
repnz
pop
dec
mov
fwait
push
addr16
decl
sbb
call
mov
mov
or
jns
mov
mov
mov
popa
push
cvtps2pd
inc
and
mov
out
std
repz
dec
js
and
mov
xor
hlt
pop
idiv
js
jne
add
mov
cli
mov
mov
pop
xchg
out
mov
inc
push
and
cmp
dec
cld
mov
mov
mov
lahf
lods
mov
dec
jne
int
mov
jle
mov
mov
mov
ret
push
cmp
pusha
test
std
xlat
adc
lods
mov
cmp
imul
xchg
push
mov
inc
call
pop
inc
pop
fsub
pop
mov
fsubrs
mov
mov
jmp
jg
cld
and
rcpps
sub
mov
sbb
cmp
mov
push
call
movsb
rorl
mov
aad
loope
mov
cmp
pop
lock
ret
inc
addr16
leave
push
jg
hlt
dec
mov
fsubr
adc
jg
daa
cld
bsr
sub
pop
stc
adc
pusha
mov
aas
std
psrlw
loopne
fs
dec
push
pop
mov
lock
mov
push
in
aam
aam
mov
jge
lret
hlt
mov
cmp
lahf
dec
fld
xlat
mov
push
gs
adcl
cmp
js
scas
inc
jge
in
push
sbb
test
and
push
mov
shl
fistpll
mov
pop
imul
ja
push
loopne
fdivs
loope
ss
jecxz
push
icebp
mov
ret
loope
clc
daa
testb
mov
enter
repnz
push
pop
mov
dec
mov
fists
xor
inc
sarb
xchg
sub
pop
inc
adc
push
ds
leave
das
divl
popa
inc
leave
sub
jae
cmp
mov
lods
insb
fists
mov
jno
mov
jno
xchg
sub
loopne
pop
or
scas
xchg
mov
push
cmp
outsb
fwait
jge,pt
mov
inc
xchg
mov
jle
ret
jmp
mov
xor
pushf
or
stos
inc
loop
rcrl
jge
add
mov
mov
mov
pop
into
inc
fwait
insb
add
les
jmp
ret
das
sti
enter
jne
mov
outsl
imul
daa
pop
mov
daa
sub
adc
daa
mov
lock
push
push
mov
aaa
sbbb
clc
jne
sbb
adc
mov
roll
mov
dec
jb
pop
mov
popl
pop
mov
cmp
pop
mov
mov
push
jae
mov
idivl
mulb
in
scas
outsb
clc
stos
mov
loopne
stos
mov
negl
add
loope
movsl
imul
pop
shrb
mov
adc
inc
dec
mov
mov
adc
repnz
push
sub
mov
mov
das
jg
add
xchg
mov
pop
lock
cmp
dec
push
and
in
jbe
or
push
mov
fcomip
rorl
adc
fistps
dec
pop
std
test
nop
inc
shl
out
mov
in
mov
lods
and
mov
shr
out
pushl
mov
push
mov
mov
pop
cmpb
cmovno
daa
jp
xchg
mov
jnp
jmp
mov
inc
add
pop
pop
lods
mov
outsb
popa
stc
aad
int
pop
dec
cmpb
stos
mov
add
jge
mov
mov
push
cmp
push
push
fidivrs
dec
call
fstpt
mov
lods
cld
aas
fldcw
stos
loope
mov
mov
das
test
dec
push
loopne
nop
insb
xchg
xchg
mov
jno
adc
lahf
in
fmulp
dec
pushf
mov
fisubl
pop
dec
sub
mov
imull
mov
addr16
std
xchg
pop
lret
mov
stc
jg
mov
aad
les
cmpsb
cmc
adc
cmc
pop
cmc
fcoms
hlt
mov
jbe
mov
sbb
add
gs
in
incl
mov
cmp
pushf
daa
sbb
jl
sbb
popf
jb
filds
das
enter
lcall
jmp
jl
negl
shrl
pop
lods
mov
push
mov
jns
mov
cmp
mov
dec
out
sbb
out
dec
sub
in
outsl
ljmp
mov
xor
mov
cmp
xchg
push
shl
int
cmp
inc
outsl
orb
xchg
notl
fwait
subl
subl
mov
ja
mov
push
pop
xorl
xchg
addr16
loopne
adc
xor
mov
imul
orb
std
dec
push
adc
and
and
pop
lcall
popa
dec
push
cltd
sbb
arpl
mov
fbstp
mov
pop
dec
test
lahf
insb
hlt
test
mov
dec
fwait
xor
pop
cli
mov
mov
call
pop
mov
cmp
xor
lret
lret
imul
ljmp
aam
ljmp
cmpsb
xchg
mov
icebp
or
dec
imul
xchg
xchg
imul
decb
push
leave
icebp
adc
and
mov
dec
scas
jecxz
out
movsl
mov
insb
mov
aas
inc
jmp
in
mov
clc
outsb
les
mov
pop
add
inc
mov
pop
xchg
push
mov
lock
lahf
add
mov
call
inc
add
push
mov
adc
imul
lods
mov
add
inc
mov
testb
test
push
fsubr
lret
pop
jp
dec
in
mov
scas
xor
xchg
xchg
inc
sub
rcll
push
outsl
aaa
aam
inc
push
xchg
imul
mov
mov
pushf
adc
mov
mov
std
jmp
ficoms
xchg
cltd
sbb
stos
push
out
mov
outsl
push
pop
into
pop
test
das
test
or
inc
out
adc
jge
mov
mov
sbb
pop
xchg
xchg
aaa
clc
mov
pop
jbe
mov
jle
cli
fimuls
mov
or
add
cmp
cmp
gs
sahf
sub
mov
or
or
jg
scas
seto
add
xchg
mov
jne
and
and
mov
leave
out
xchg
imul
xor
mov
pop
outsl
mov
packssdw
stos
sbb
je
jmp
mov
loop
in
fcoms
ret
push
jne
pop
insb
lret
rcrl
cltd
jge
mov
pop
mov
fs
jle
jnp
and
mov
jg
clc
lahf
in
dec
push
fstl
cmpl
fisubs
inc
inc
mov
ss
imull
mov
xor
js
mov
dec
push
fsubrp
push
mov
mov
imul
jl
jecxz
es
pop
mov
dec
popf
in
push
mov
sbb
jns
aaa
mov
call
push
mov
movsb
mov
test
xor
lock
mov
lret
idiv
rcr
popl
cmp
mov
dec
out
pop
shlb
adc
bnd
inc
aad
pop
mov
out
repz
pusha
pop
cmc
mov
sbb
push
loop
xchg
or
fdivrp
pushl
cmc
mov
pop
jp
xor
dec
ja
mov
mov
jp
inc
jns
mov
mov
mov
mov
pop
lret
dec
int3
in
and
dec
leave
pop
iret
jae
jp
call
or
xor
cs
bnd
scas
mov
sbb
fs
mov
ljmp
pop
or
xorb
out
mov
cmp
inc
jmp
fistpl
repz
loop
push
cmp
fs
int
jg
and
pop
jmp
pop
mov
out
repz
fidivrs
pop
xchg
mov
lock
outsl
cmp
add
or
inc
pop
stc
xor
pop
fs
cld
je
mov
jg
in
lods
std
mov
mov
je
outsb
mov
mov
sbb
adc
cmc
jg
leave
cmp
out
mov
mov
mov
sarl
fistpll
xor
adc
mov
jg
pop
addl
cmp
jg
add
mov
sub
cmc
sahf
call
jecxz
pusha
mov
and
or
mov
xchg
lock
stc
fmull
in
mov
call
pop
mov
inc
add
loope
cmp
outsl
adc
stos
loope
xchg
aas
mov
mov
jmp
push
mov
sbb
adcb
iret
sub
mov
dec
mov
jns
and
sub
jge
les
incl
ljmp
test
xor
outsb
lds
loopne
je
sub
dec
sub
mov
xchg
jno
std
decl
dec
lcall
insl
and
clc
cmp
mov
test
cli
xchg
pop
out
nop
dec
mov
mov
jmp
pop
or
decb
xchg
adc
sub
sarb
or
mov
sub
cmpl
popa
aam
mov
lret
sbb
incl
popf
insl
rorl
popa
sbb
mov
jmp
mov
test
leave
notl
shll
mov
iret
cmpl
adc
pop
xchg
push
addl
fwait
lods
sub
xchg
psubsb
jbe
adc
inc
loope
test
cld
mov
dec
sub
sbb
inc
pop
xchg
lea
mov
fldenv
daa
xor
scas
mov
cli
mov
cli
or
xchg
fidivs
dec
push
mov
sbb
gs
dec
aaa
sub
out
mov
mov
in
xchg
mov
fwait
mov
cmp
ljmp
movsl
fldl
mov
push
cld
mov
mov
mov
jmp
aas
mov
xchg
or
mov
mov
icebp
jecxz
or
cld
jg
sti
call
xor
push
inc
jno
pop
out
jg
jle
inc
or
inc
mov
call
dec
adc
mov
jg
push
repnz
sbb
lret
jb
fisttpll
or
loopne
mov
clc
bnd
outsl
lds
mov
popl
call
lods
outsb
es
mov
xor
clc
push
sbb
push
xor
int
and
pop
mov
cld
add
jno,pt
lret
mov
leave
pavgw
pop
mov
aad
pop
cld
push
jbe
mov
das
ja
xor
ret
cmp
mov
fs
pop
dec
shl
aaa
in
and
les
pop
or
mov
in
mov
jns
mov
mov
out
cmp
fcmovne
inc
and
mov
sub
add
mov
mov
cmc
xor
rolb
inc
mov
cmc
xor
sbb
add
sub
mov
mov
pushf
std
arpl
sub
cmc
pop
mov
xchg
out
mov
data16
jle
mov
mov
mov
out
xchg
in
test
out
lock
fadds
cmp
pop
fwait
sahf
push
mov
sbb
ret
inc
fstp
mov
mov
aaa
jne
mov
pop
dec
out
loopne
jg
and
mov
aad
push
mov
mov
jb
jecxz
cmpsb
das
js
xor
inc
test
lock
cmp
mov
aaa
mov
jnp
dec
cmc
mov
sar
or
mov
xor
inc
mov
mov
add
fists
loopne
mov
jl
push
mov
loope
jno
cmpsl
pop
xchg
icebp
lea
push
sahf
mov
adc
stos
loop
outsl
xchg
xchg
and
lock
aas
outsb
xor
mov
pop
stc
inc
pop
pop
mov
adc
incb
cld
cmp
negl
cmpsb
ret
aad
push
ss
mov
mov
repz
clc
mov
dec
xchg
lea
sbb
scas
mov
loopne
cmp
call
xchg
pop
outsb
pusha
jne
std
xchg
xlat
cli
sbb
cmpsl
mov
lcall
mov
bound
paddsw
int
push
pop
jns
mov
mov
inc
adc
fistpll
jp
mov
test
mov
ret
mov
hlt
dec
popf
inc
iret
mov
sbb
in
pop
xor
mov
fs
jg
sbb
in
pop
loopne
and
loope
mov
stos
cli
mov
xor
push
stos
decb
pushf
scas
mov
sub
jns
xor
scas
bound
mov
push
and
dec
aad
sub
jae
sub
mov
pop
inc
les
rcrl
in
rorb
dec
mov
dec
sbbb
das
jp
arpl
jnp
jo
xchg
fstl
in
mov
xorl
clc
sarl
jp
jne
jg
adc
mov
push
xchg
fildll
insl
mov
das
mov
clc
sbb
xchg
dec
ljmp
or
fdivrs
gs
jp
xchg
dec
das
test
mov
mov
pop
adc
xchg
mov
lds
add
pop
push
inc
push
inc
mov
addr16
jle
mov
pop
ret
stos
lret
dec
pop
inc
mov
into
test
xor
in
jb
lds
and
push
inc
mov
int
cmp
ja
icebp
pop
stos
jae
mov
mov
xchg
sbb
ss
push
xchg
xchg
or
mov
lock
aaa
imul
jge
xorl
lods
jl
sub
ja
fcoml
mov
jl
dec
hlt
ljmp
mov
pop
test
neg
mov
mov
fbld
mov
scas
sub
stc
sbb
in
adc
dec
sbb
pop
mov
add
loope
fcmovnbe
clc
aaa
lret
mov
push
xchg
mov
add
sbb
sbb
mov
in
xchg
mov
das
clc
cmc
or
adc
cli
xchg
jge
sbb
mov
mov
xchg
inc
rorb
js
mov
jle
test
dec
sarl
mov
pop
rol
mov
cmp
stos
test
call
jcxz
xchg
add
fabs
cmp
cmpsl
jle
mov
mov
aas
jnp
push
aam
mov
mov
mov
fbld
inc
scas
and
mov
std
ja
mov
test
jecxz
lods
pop
lahf
das
test
xchg
dec
rclb
mov
imul
jne
icebp
jb
scas
outsl
rol
and
mov
lods
icebp
jmp
jmp
mov
sub
adc
xchg
arpl
rorl
pop
xchg
fwait
dec
daa
cmp
clc
loop
pop
das
mov
in
imul
dec
cli
pop
mov
clc
out
cld
std
aaa
mov
and
jge
or
movsl
jno
mov
cmc
dec
sbb
das
aas
lea
mov
lret
sti
leave
push
cmp
in
popf
mov
mov
mov
pop
fiaddl
loope
push
fistps
push
adc
sbb
xor
mov
jg
mov
add
imulb
popa
pop
clc
stos
mov
cwtl
pop
dec
cmp
mov
mov
jae
sbb
mov
push
ret
outsb
and
cs
aad
mov
fs
adc
jmp
xor
jbe
mov
icebp
aaa
stos
mov
add
lock
cmp
ja
mov
icebp
add
mov
pop
test
stos
test
aad
fnstcw
push
mov
add
cli
or
cmpsl
mov
push
adc
sub
cld
cld
ja
stos
fidivrl
fwait
call
pop
jmp
pop
adc
mov
outsb
lock
out
clc
call
jle
aad
repnz
mov
jo
sbb
mov
add
fnstsw
inc
lock
scas
fs
jmp
mov
xchg
idivb
dec
pusha
cld
fmull
xor
mov
mov
loop
sbb
dec
xor
mov
jg
movq
pop
push
xor
inc
jge
inc
aaa
mov
gs
decb
jl
outsl
fstpt
mov
daa
icebp
mov
call
fnsave
mov
daa
sbb
jecxz
cmp
icebp
mov
stc
dec
stos
cmc
jmp
mov
loopne
lock
inc
aam
inc
pop
or
xlat
outsl
incb
stos
in
bound
push
inc
das
mov
js
or
push
call
mov
cmp
fisttps
mov
jb
mov
push
lahf
dec
sbb
sub
mov
es
fbstp
cmpsl
mov
loope
rcll
ljmp
ja
xchg
xor
pop
shrl
cmp
test
mov
fmull
call
pop
mov
jae
mov
lahf
pop
popf
mov
lret
das
clc
mov
mov
leave
mov
mov
pop
dec
dec
mov
aad
cld
jg
inc
js
adc
pop
pop
scas
stos
pusha
mov
mov
cli
jg
xchg
repnz
inc
loopne
pushf
push
decb
dec
pop
mov
cld
ss
cs
aas
mov
jecxz
jl
popf
inc
gs
and
ljmp
adc
scas
jno
movsbl
and
jecxz
pop
enter
idiv
cmpsl
jg
imul
xchg
pop
fcomip
call
sub
or
pop
jb
testl
inc
sbb
dec
jns
out
mov
mov
mov
push
and
cwtl
pushl
jnp
lods
inc
cmpb
lcall
or
cmp
adc
mov
js
mov
add
mov
sbbl
sub
das
jle
scas
aad
add
and
cwtl
mov
sar
repz
pop
xchg
sqrtps
into
mov
dec
loop
adc
mov
jl
pop
mov
jmp
bound
clc
inc
loope
test
or
mov
sub
cld
pop
insl
mov
das
popa
mov
sar
xchg
push
pop
test
and
lahf
insl
repnz
pop
icebp
jg
jge
inc
fbstp
push
or
or
pop
movsb
subb
enter
shr
mov
insb
mov
andl
shrb
in
mov
lret
jge
mov
jecxz
mov
call
jae
out
movsl
jne
and
inc
loop
sub
jg
push
fsubp
jg
pop
jno
es
sbb
mov
js
xchg
dec
cmp
aaa
std
in
xor
iret
data16
fcmovnb
mov
ret
cs
dec
mov
or
inc
or
ljmp
jge
repz
ljmp
hlt
add
push
stos
in
subb
sbb
insl
mov
fstl
lret
out
adc
js
mov
pop
decl
das
sub
out
dec
clc
popa
idivb
push
mov
dec
mov
popa
lea
mov
and
ret
push
cmp
lahf
sbb
inc
in
inc
cmpsl
maskmovq
insl
xor
push
insl
cmc
jae
xor
add
lcall
test
sti
or
jmp
iret
scas
mov
xchg
mov
jecxz
mov
jge
mov
adc
cmp
mov
mov
test
ja
fstl
sbb
add
or
in
shll
sbb
mov
sarl
and
test
mov
adc
push
sahf
nop
push
aad
xor
hlt
inc
call
outsb
aad
call
sub
pusha
and
idivl
and
lods
mov
inc
shlb
das
jge
mov
mov
jo
inc
repz
cmp
mov
movsl
fucom
xchg
xor
out
lret
push
mov
jle
aaa
xor
lods
ss
call
in
test
and
clc
test
pop
and
mov
in
add
push
push
gs
mov
add
mov
lock
xchg
pop
repz
push
mov
mov
push
mov
imul
dec
add
sub
push
jmp
iret
xor
mov
cld
clc
ret
lcall
sub
dec
mov
mov
xchg
cld
cmp
and
in
hlt
push
fwait
push
mov
and
ret
frstor
fistpll
xchg
cmpsb
das
jp
hlt
lea
mov
bound
push
xchg
dec
clc
aaa
aas
movb
jo
mov
mulb
daa
pop
loope
in
sarl
cmp
xchg
mov
mov
pop
and
or
add
fcoms
aaa
jecxz
mov
fildll
mov
inc
inc
push
dec
into
mov
decl
jb
mov
outsl
clc
fprem
mov
mov
insl
and
lcall
or
stos
jmp
mov
test
lcall
cwtl
lods
mov
lret
pop
mov
or
ljmp
adc
adc
sti
test
xor
test
mov
push
popa
mov
push
imul
add
pop
jl
push
mov
jp
jae
stc
mov
scas
mov
movsl
jg
mov
sar
test
in
sbb
idivl
add
mov
aad
lea
aas
ja
inc
test
arpl
mov
jmp
jb
shlb
sbb
ret
lock
inc
jg
add
mov
push
pop
outsb
movsb
aas
push
xlat
dec
clc
mov
scas
scas
test
dec
mov
lahf
cmp
daa
jp
ret
fwait
pop
inc
cli
fidivrl
loopne
cmp
out
aaa
lcall
into
cmpsl
scas
sub
les
mov
xlat
loope
hlt
mov
popf
pop
and
add
rorb
hlt
xchg
adc
cmp
jmp
sti
iret
sub
inc
fnstenv
push
in
mov
xchg
cmp
push
jne
icebp
dec
mov
jmp
cmp
aas
clc
push
mov
in
mov
movsb
pop
mov
pop
mov
arpl
not
idivb
push
ja
push
hlt
push
lea
mov
hlt
clc
mov
xchg
dec
ret
iret
xchg
inc
aaa
ret
lea
fisttps
mov
je
into
lods
mov
or
cld
dec
sysenter
insb
cmpsb
or
mov
dec
idivb
imul
fmul
mov
mov
cmpsl
mov
add
lret
mov
mov
push
in
add
inc
mov
lods
sbb
test
sub
mov
pushl
jg
cmpsb
pmaxsw
mov
fidivrs
jge
mov
andb
mov
and
fildll
stos
cmp
push
pop
andb
mov
cmc
sar
jo
mov
jge
cmp
mov
iret
and
orb
lods
fistpl
aas
movsb
pop
add
sub
nop
incb
sub
mov
xor
jb
test
scas
push
mov
mov
xchg
daa
sbb
adc
or
xor
mov
roll
imul
jo
sbb
cmp
and
inc
lds
js
scas
jecxz
movsb
jle
out
stc
js
ror
rcr
pop
cmp
mov
and
jg
fisubl
aaa
stc
inc
pop
xchg
jne
shr
sarb
xor
es
dec
xchg
mov
cmp
adc
loopne
xchg
jp
test
int3
sub
aas
mov
mov
insl
outsl
iret
jg
incb
aam
test
dec
popf
incl
or
scas
les
sahf
cltd
push
mov
adc
pop
out
mov
std
loopne
mov
sub
jae
lock
mov
das
push
jecxz
jle
jg
xor
scas
dec
adc
mov
jg
mov
inc
xchg
sub
mov
mov
pop
dec
dec
push
mov
addr16
push
jl
stc
dec
andl
stos
mov
mov
mov
or
or
pop
push
ret
addl
push
lods
mov
push
lods
and
push
arpl
std
mov
adcb
mov
push
pop
push
xorl
push
mov
cmp
add
sbb
jle
xchg
dec
bound
adc
jp
fcmovnb
roll
icebp
icebp
jg
outsb
pushf
cli
in
dec
fidivs
jne
cld
popf
push
mov
or
mov
mov
fistps
mov
push
push
loopne
jmp
pop
cld
loopne
std
dec
xor
pop
dec
imul
and
mov
out
aaa
sarl
pop
lods
mov
loope
cmp
xorl
rcr
mov
mov
jns
mov
inc
lahf
mov
lock
jb
adc
or
push
pushl
jne
repz
sti
mov
cmpsl
mov
jmp
lar
shll
jno
testl
adc
cld
fs
hlt
and
mov
pop
add
or
fcompl
push
ss
mov
call
xor
sbb
sbbl
mov
imul
push
inc
jl
mov
fbstp
rcr
mov
mov
and
push
mov
cld
icebp
enter
mov
push
ljmp
push
or
fldenv
mov
inc
xchg
leave
outsl
pop
in
xchg
loop
sub
cld
add
das
ja
jb
sub
stc
and
mov
movsl
in
jge
fldcw
xlat
xchg
lret
rcrb
xchg
jns
cwtl
sahf
xchg
fadd
sbb
inc
jae
stos
pop
cld
aas
lock
lods
or
divb
ljmp
add
in
xor
popf
and
jge
mov
cld
rorl
push
sbb
adc
mov
mov
xor
sub
mov
enter
out
mov
xchg
cmpsl
rcrl
jp
adc
sti
sbb
mov
lods
std
in
test
in
daa
daa
out
ret
xchg
js
fistpll
mov
jb
jmp
lea
xchg
push
dec
mov
sbb
jbe
pop
push
clc
leave
pop
clc
add
repz
mov
mov
mov
int3
imul
jne
mov
add
popa
cwtl
movsl
in
dec
adc
cli
fisubl
mov
rclb
pop
xchg
pop
iret
jge
daa
icebp
sub
out
fildll
cmp
mov
mov
stc
mov
sti
mov
mov
in
and
dec
jge
xor
lods
icebp
call
pop
leave
bsf
xor
andl
decb
jle
dec
push
jg
xor
dec
std
scas
mov
mov
das
pop
dec
fwait
push
push
cli
mov
jnp
lret
rcll
les
push
cmp
xchg
shrb
xchg
mov
cmp
pop
rorb
jl
inc
cwtl
daa
xchg
fcmovu
repnz
lcall
sbb
out
mov
ret
fbld
dec
xchg
and
mov
cwtl
push
adc
lcall
hlt
mov
stos
jecxz
pop
mov
clc
jb
push
mov
inc
cmpsb
jne
jg
jg
push
mov
dec
adc
rcll
pushf
mov
das
push
adc
loope
mov
cli
subl
shlb
mov
incl
loop
pop
cmpb
pop
mov
ja
jno
aad
loop
mov
clc
and
int
adc
jb
fidivrl
push
rorb
aas
test
hlt
iret
sbb
push
or
pop
jle
sarl
sarl
sub
fildll
and
fstpt
lds
mov
leave
stos
xchg
jle
mov
movsl
call
or
lods
mov
movsb
push
sbb
mov
inc
or
mov
mov
pop
stos
adc
push
adc
insl
sbb
notb
stos
push
lahf
in
mov
mov
andb
lea
hlt
jg
pop
bound
out
inc
dec
add
rorb
imul
lahf
sbb
es
fldenv
shlb
and
mov
clc
push
daa
cli
pop
stc
pop
dec
inc
icebp
ja
test
mov
jge
push
leave
push
mov
dec
mov
or
pop
pop
jns
mov
div
dec
pop
shlb
clc
dec
pop
pop
xchg
mov
mov
inc
lahf
sti
jle
mov
loopne
aas
dec
movsl
mov
frstor
adc
vpavgw
pop
and
mov
mov
sbb
clc
subl
push
cli
mov
ds
mov
test
mov
mov
push
loop
push
ljmp
clc
dec
andb
xchg
add
popf
cmp
scas
jmp
dec
inc
inc
xchg
push
cmpsb
lret
mov
inc
pop
mov
sbb
pop
push
mov
cli
fildl
dec
jmp
inc
pop
call
cmpsl
push
aaa
int
decl
popa
repz
push
xchg
push
int
dec
arpl
clc
jecxz
mov
insl
push
fsub
test
mov
or
iret
outsb
cld
xor
shll
mov
enter
fbld
push
imul
ds
dec
imul
lds
mov
adc
or
lock
pop
shrl
sarl
mov
cld
incl
sahf
int3
inc
mov
hlt
out
pop
lds
dec
ds
mov
xor
pop
xadd
xlat
mov
stos
popa
add
test
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
roll
pop
pop
add
mov
jmp
cmp
push
mov
nop
cld
je
dec
loop
decl
call
ret
cmpsb
scas
jb
out
mov
in
sub
sti
jg
cld
insb
js
xchg
lcall
mov
sbb
pusha
jp
jns
adc
test
cltd
lods
out
dec
mov
pushl
test
stc
fsubs
push
and
fcoms
pop
enter
lcall
js
push
loope
pop
sbb
in
push
adc
xchg
inc
sbb
jne
inc
repnz
call
outsl
add
xchg
aas
sbb
leave
inc
aad
adc
sbb
mov
add
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
mov
pop
popf
aam
and
pushl
add
rcll
gs
adcb
in
inc
das
and
decl
fnstsw
jne
inc
popa
jl
add
and
loopne
inc
lcall
or
and
shll
dec
jbe
loope
or
lods
pop
and
in
push
add
sub
cmpsb
fsubs
test
cmp
shll
orb
lea
idiv
ljmp
xor
inc
outsb
ds
or
jg
ret
or
mov
test
shr
dec
jmp
xchg
sysret
icebp
push
push
add
out
jbe
fcomi
decl
out
push
mov
out
inc
mov
paddd
jg
xchg
adc
lock
sbb
cmp
or
add
lahf
outsl
decl
inc
popf
xchg
gs
mov
or
rorb
jg
xor
sub
popa
popa
inc
push
sub
orb
push
sbb
xchg
jecxz
mov
nop
xor
mov
push
or
and
push
decb
jle
out
xchg
loope
out
xchg
xchg
lea
rolb
ds
repz
rcrb
pop
pop
cltd
fdivrs
mov
ljmp
mov
in
adc
push
test
ljmp
rorb
push
mov
out
movsb
and
incl
mov
mov
fs
movsl
enter
in
gs
dec
idiv
mov
ss
xchg
in
push
stos
nop
jmp
scas
mov
pop
lods
test
adc
mov
outsl
mov
add
mov
xor
and
sbb
jge
mov
dec
mov
mov
lcall
lahf
or
fiaddl
jmp
lcall
jle
push
xor
flds
or
test
sub
int3
mov
lcall
lcall
clc
add
lock
les
rorl
xor
fistl
mov
scas
cli
lcall
lcallw
arpl
cmp
in
stc
adc
ret
jnp
stc
sbb
popf
pusha
loop
xchg
clc
gs
mov
clc
jbe
sti
mov
jmp
out
fisttps
xchg
adc
jbe
loopne
push
test
mov
out
in
jnp
jl
push
cli
cmpsl
jge
std
jle
adc
sbbl
fcomip
int
cwtl
test
mov
call
gs
fcmovnbe
rcll
aaa
jle
sbb
sbb
adc
push
xchg
jge,pt
jge
pop
push
add
push
std
pop
push
jmp
movsb
addb
arpl
gs
in
push
lcall
fsub
movsb
in
popaw
pop
andb
cmp
fdivl
incl
fimuls
cmpl
in
pop
pop
nop
mov
fs
mulb
shlb
subb
pop
inc
mov
stos
sbb
lods
out
pop
cmp
fistl
idivb
cltd
lds
cmp
fsubrp
into
ds
jecxz
fwait
jbe
shlb
dec
in
add
ds
add
mov
scas
loopne
mov
aas
testl
in
jg
and
in
int3
out
pop
mov
xchg
lahf
mov
inc
popf
cmp
xchg
jge
andl
xor
lods
bound
fucomp
fs
mov
lock
in
xorl
stos
xchg
out
js
or
push
xchg
mov
xlat
xchg
add
xchg
mov
jg
adc
sbb
daa
mov
std
nop
enter
shll
mulb
lods
jp
lret
imul
idiv
incl
lea
outsl
notl
adc
mov
lret
sbb
push
movsb
repnz
imul
xchg
mov
es
adc
xchg
push
mov
xchg
cltd
mov
fs
call
cld
inc
push
out
adc
xchg
sub
add
imul
aad
ret
push
adc
jb
fstpl
incb
sub
std
sahf
in
dec
clc
or
pop
sbb
lods
lcall
neg
mov
cli
push
pop
in
add
and
adcl
ss
xchg
loop
mov
scas
inc
out
dec
adc
push
or
lcall
jb
jp
xchg
cmpsb
pop
imul
gs
push
out
mov
decl
je
xor
dec
sbb
es
pop
pushf
imul
call
daa
mov
jmp
daa
or
inc
push
cmpsb
inc
popa
or
lcall
incb
cmpsb
hlt
or
add
ficoms
push
adc
sar
std
mov
mov
xorb
out
lcall
fbstp
push
in
add
gs
pop
lcall
mov
and
bswap
mov
repz
incl
icebp
cmpsb
cmp
int3
pusha
inc
jno
cmp
out
cmp
xor
mov
call
mov
sahf
cmp
sbb
movsb
sbb
ljmp
mov
loopne
xchg
scas
xor
das
loopne
xchg
mov
push
andl
xor
mov
call
negl
dec
dec
add
jp
pop
lock
fcomp
cmc
mov
or
lahf
sbb
push
cmpsb
jbe
loopne
fdivrl
imull
inc
imul
call
mov
push
add
jecxz
and
jecxz
movsb
and
and
incl
bound
mov
mov
add
out
das
in
jb
fstp
iret
push
repz
lcall
in
dec
fdivs
pop
adc
or
je
fs
insb
jns
jbe
ljmp
mov
adc
dec
outsl
outsb
addr16
dec
js
push
push
gs
xor
xor
inc
dec
dec
ljmp
pop
cmp
jno
bound
inc
inc
dec
outsb
push
push
dec
push
js
dec
js
push
js
fs
je
lcall
jns
ja
push
push
pop
push
dec
jno
imul
push
pop
outsl
imul
call
xor
jne
xor
push
arpl
outsb
insb
jbe
bound
jne
dec
push
imul
dec
decl
cmp
arpl
outsb
jo
dec
inc
push
ja
inc
xor
push
dec
inc
jbe
push
dec
bound
jg
bound
xor
push
inc
addr16
outsb
xor
jbe
dec
dec
push
pop
aaa
inc
push
pushw
call
xor
jp
inc
push
dec
dec
push
fs
dec
inc
insb
xor
jns
inc
dec
imul
inc
fs
dec
xor
push
push
xor
pop
aaa
jne
inc
pop
jne
popa
push
pushl
inc
push
dec
je
outsb
pop
xor
popa
inc
push
pop
xor
ss
xor
push
jg
pushl
inc
inc
xor
jo
gs
cmp
insb
ss
pop
ja
push
push
inc
jp
fildl
dec
adc
push
imul
push
mov
shr
imul
jns
jb
push
arpl
jle
adc
ljmp
dec
jae
ret
push
std
sbb
xor
addr16
push
imul
gs
dec
dec
mov
jno
mov
cld
add
xor
jns
inc
outsb
dec
push
adc
mov
adc
sub
adc
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
adc
mov
ds
adc
sbb
adc
and
sbb
repnz
decl
push
pusha
mov
xor
push
stos
in
call
dec
or
fst
je
mov
call
push
inc
insb
mov
xor
test
push
dec
imul
hlt
scas
imul
pushl
inc
xor
mov
sbb
fmul
rclb
insl
xor
das
js
cltd
mov
sbb
pop
aas
inc
aas
pop
iret
xchg
js
and
mov
jae
sub
cmpsl
movsb
icebp
push
lods
mulb
jmp
orl
push
pop
sub
sti
push
pop
lahf
xor
jl
mov
dec
sub
fldcw
in
push
es
ror
ret
mov
inc
les
mov
pop
cld
inc
in
decl
es
adc
fdivl
mov
or
mov
xchg
mov
jp
xlat
js
sbb
popf
daa
outsb
out
jbe
pop
sub
arpl
stos
add
stos
jg
mov
js
decl
repz
js
jg
roll
jecxz
popa
pusha
add
adc
sub
jmp
or
lcall
sbb
pop
add
movsl
out
or
adc
inc
pop
mov
mov
push
in
shl
cwtl
and
sbb
fsubr
sub
cmpsl
inc
fistpll
incl
out
cmc
addr16
jmp
adc
cmp
fstl
mov
pop
push
ficompl
mov
decl
fistps
insl
ror
dec
mov
mov
ret
iret
pop
add
xchg
sub
es
jmp
mov
lcall
in
jbe
fsubl
nop
dec
push
inc
inc
xchg
aas
xchg
out
test
adc
mov
jmp
or
push
movsb
cmp
push
scas
outsl
fcoml
sbb
stos
adc
mov
scas
or
mov
pushl
loope
shlb
iret
cwtl
cmp
pusha
push
stos
pop
xor
es
lods
push
out
xchg
ljmp
ljmp
or
sbb
pop
pop
or
sub
movsl
dec
cs
add
in
push
lcall
and
ja
jle
aas
lock
inc
stc
clc
add
mov
pushf
pop
test
jb
pushl
pusha
pop
dec
fs
cli
int3
stos
dec
clc
push
xor
or
xor
dec
push
xchg
xchg
aaa
lcall
adc
jnp
int3
fidivl
push
xchg
je
cmp
pop
dec
pop
daa
adc
fwait
jns
enter
or
popf
decl
jae
xor
fs
sti
xchg
ljmp
aaa
jns
gs
dec
dec
bound
push
adc
gs
push
pop
jo
sub
mov
inc
sub
int
add
inc
add
push
mov
ss
aaa
call
add
in
ljmp
add
xchg
mov
add
and
sub
sub
hlt
and
add
push
or
pushl
xor
add
add
add
cmp
outsb
mov
adc
jo
add
push
add
jle
add
sbb
push
addb
fcomi
sbb
push
loope
or
sub
add
dec
mov
mov
xorb
push
inc
pop
repnz
push
orl
inc
or
outsl
mov
inc
inc
fs
inc
hlt
aam
add
sub
or
add
xor
push
add
dec
dec
inc
dec
mov
add
shrb
fidivrs
bound
mov
push
inc
adc
pusha
cmp
mov
add
adc
xor
and
or
pusha
add
inc
push
push
push
sbb
imul
lcall
push
in
mov
insl
lock
sti
cmp
adc
outsl
outsl
in
xor
scas
add
pusha
push
andl
dec
imul
loope
dec
lret
aad
add
js
mov
loope
addb
es
sbb
stos
bound
clc
add
jge
mov
sbb
sbb
mov
fbstp
or
in
xchg
loop
scas
imul
push
out
sub
add
pop
repz
push
pop
mov
sbb
xor
in
hlt
popa
es
loopne
xor
negl
dec
mov
mov
loopne
xchg
jmp
and
dec
sbb
pop
inc
cmpsb
mov
lcall
icebp
fcomip
lea
insb
jmp
lret
push
inc
mov
and
jbe
push
xchg
aas
out
push
pusha
vmread
out
or
sub
in
int3
mul
or
dec
mov
test
in
pop
or
or
bound
jle
xchg
pusha
sbb
push
in
cmpsb
les
loopne
loopne
inc
ficoml
dec
in
push
sbb
loopne
add
sbb
ljmp
push
icebp
lcall
push
repz
pop
and
mov
cmpsb
jmp
call
pmaxub
push
sbb
jg
jle
ret
pop
sub
call
loope
mov
jg
sbb
inc
popf
mov
cwtl
or
lcall
pop
xor
cmp
loopne
stc
or
fmul
cld
ret
data16
lock
xchg
mov
pop
filds
and
fsub
pop
int3
fimull
cmp
pop
loopne
loope
push
cmc
xchg
test
pop
dec
dec
push
jo
jecxz
xchg
add
push
mov
icebp
popa
movsb
sbb
inc
or
lret
dec
or
pop
xchg
sub
notb
adc
fisubrl
xchg
add
pop
lods
sbb
mov
sahf
in
adc
sub
lcall
cmp
outsb
sbb
fucomi
dec
rcrl
cs
xor
les
lock
sbb
hlt
stc
fwait
dec
mov
mov
xchg
xchg
lock
repnz
jg
mov
or
add
jb
stos
xor
icebp
ja
mov
inc
fcomip
imul
cmpsb
cmpsb
jns
negb
inc
push
sbb
add
outsl
mov
dec
sub
jo
push
mov
push
stos
pop
cmpsb
xor
sbb
add
loopne
in
pop
jo
push
scas
mov
clc
add
ljmp
mov
ljmp
and
push
subb
cmpsl
loope
ret
aam
or
jle
sbb
lods
jns
cmpsb
jns
inc
push
push
sub
adc
fdivs
pop
add
sbb
test
mov
push
lock
dec
aaa
je
xor
mov
or
xor
stos
and
lods
xor
add
inc
adc
mov
push
xor
stos
xor
add
sub
adc
test
pushl
mov
jle
test
jo
dec
xchg
add
pop
ljmp
add
sahf
fsubrs
out
and
inc
sub
and
nop
jae
lret
mov
call
faddl
mov
push
pop
repnz
outsl
mov
cld
cli
scas
daa
aad
in
push
cld
jg
ret
sbbb
rcr
mov
push
popa
lock
mov
xlat
aad
test
fistpl
push
push
or
lds
cmp
lea
dec
mov
das
clc
mov
repnz
leave
insb
adc
dec
clc
xchg
mov
cltd
xor
sub
clc
ljmp
hlt
mov
push
scas
aaa
fsubrl
push
xchg
aam
pop
std
push
stos
in
popf
jl
mov
data16
scas
mov
inc
push
test
popf
sbb
clc
jae
xchg
or
imul
pushf
push
inc
push
inc
dec
inc
mov
loope
push
add
push
nop
add
inc
inc
and
and
push
push
dec
adc
loopne
mov
and
inc
inc
adc
push
shlb
fcomip
push
movsl
icebp
or
mov
and
cmpsb
mov
and
movsl
rcrb
adc
mov
sarl
or
sbb
adc
jge
ljmp
pop
sub
test
jo
and
mov
inc
add
mov
fstpt
pop
inc
push
push
push
add
mov
sub
pop
aad
jle
pop
push
mov
testb
mov
push
andl
and
and
adc
int
cld
int
mov
mov
jle
mov
and
mov
int
cld
and
and
and
push
and
jnp
xchg
and
and
jg
fwait
inc
and
int3
and
and
and
int
and
in
sbb
out
and
and
ljmp
in
mov
and
arpl
repnz
cmc
not
pop
shlb
and
stc
adc
and
adc
out
incb
shlb
and
and
lds
sbb
daa
and
and
out
cmp
int3
and
and
das
and
and
and
fs
and
outsl
out
and
jno
fsubs
jns
push
and
iret
orb
and
add
push
xor
adcb
and
ficoml
adc
and
mov
lock
add
pushf
and
and
outsb
adc
jo
sub
adc
and
adc
or
roll
jl
and
and
shlb
add
cmp
enter
and
and
cwtl
jbe
and
rclb
sbb
lahf
xor
add
inc
and
insb
sbb
and
and
and
and
xor
push
and
adc
lcall
ss
and
inc
and
ficompl
repz
mov
push
int3
clc
pop
rclb
dec
push
and
adc
and
and
out
xchg
adc
push
and
or
data16
xchg
and
rcll
pop
add
push
cmp
dec
push
lock
cmp
dec
xor
and
and
out
sub
andl
and
adc
adcl
outsl
adcl
and
pushf
adc
adc
adc
adc
fcoml
xchg
and
adc
test
xchg
and
adc
adc
out
out
adc
xchg
adc
xchg
adc
adc
fwait
adc
lahf
adc
and
adc
outsl
out
in
jecxz
out
in
adc
and
adc
jmp
out
out
out
adc
in
adc
and
adc
out
adc
and
adc
out
cmc
adc
and
adc
sti
adc
and
adc
call
icebp
and
adc
fwait
mov
repz
adc
rol
adc
and
adc
enter
mov
adc
lret
and
adc
int3
adc
and
adc
jmp
fwait
mov
rcll
mov
and
cmp
lahf
outsl
out
adc
es
add
loop
es
add
in
es
out
out
es
es
pop
es
or
ljmp
jmp
or
in
or
in
and
es
and
out
adc
icebp
and
es
es
and
adc
mull
es
and
out
sbb
shlb
ret
es
arpl
les
add
adc
and
es
leave
int
imul
lret
imul
and
es
and
int
iret
outsl
shlb
shlb
lcall
jae
adc
es
pop
rcll
adc
es
adc
lds
into
adc
es
sub
and
es
adc
loop
mov
and
es
and
adc
cltd
mov
and
adc
cmpsb
clc
adc
sub
sub
cmpsb
clc
cmpsb
les
sub
es
adc
clc
cmpsb
clc
cmpsb
adc
and
outsb
loopne
adc
adc
adc
es
in
adc
mulb
fs
adc
add
gs
adc
push
cmp
sbb
sbb
sbb
int
mov
sbb
lock
and
sbb
outsl
and
pusha
and
adc
hlt
bound
cmp
fists
arpl
es
and
mov
dec
es
and
stc
imul
mov
adc
es
std
imul
jno
es
es
adc
xor
adc
jno
jno
es
je
xor
lds
xor
jno
xor
cmp
jg
jno
cmp
es
into
es
shlb
aas
shll
seto
and
shll
add
es
aaa
ret
aaa
aad
add
js
xlat
xor
es
dec
aaa
jg
or
es
or
es
pop
jne
and
es
fbld
or
daa
cmpsb
add
in
andl
adc
mov
daa
scas
mov
daa
mov
mov
scas
mov
movsl
and
xchg
daa
mov
daa
in
outsl
and
daa
adc
daa
mov
daa
in
and
daa
in
cltd
daa
jmp
lcall
loope
mov
cld
int
cld
daa
mov
jecxz
mov
daa
mov
in
mov
daa
mov
out
mov
cld
int
call
daa
mov
jmp
mov
in
int
cld
int
mov
out
daa
mov
icebp
daa
xor
daa
andl
daa
test
daa
call
mull
stc
fwait
mov
daa
mov
daa
mov
shll
ret
and
daa
xchg
mov
daa
xchg
and
daa
xchg
daa
xchg
and
daa
xchg
enter
leave
daa
fwait
mov
daa
lcall
pushf
and
daa
popf
into
daa
stc
fwait
mov
daa
lahf
shlb
loopne
shll
loope
daa
jecxz
shll
loop
stc
fwait
mov
aad
in
daa
out
xlat
daa
out
daa
call
lcall
add
subl
add
add
sub
out
xchg
addl
sub
mov
mov
cld
int
mov
mov
orb
mov
inc
add
sahf
sub
lahf
sub
loopne
adc
loope
cmp
sub
add
sub
call
sub
sub
add
sub
add
cld
in
outsl
out
sub
imulb
cmp
sub
adc
sub
add
sub
icebp
add
pop
add
sub
iret
push
add
sub
filds
sub
push
sbb
fisubrs
mov
and
add
fwait
mov
out
sub
add
sub
les
sub
sti
lds
sub
and
leave
sub
add
sub
inc
lret
sub
add
repz
adc
sub
sub
js
imul
subb
shrb
pushf
shrl
popf
add
sub
jnp
sub
xlat
sub
sub
and
scas
ljmp
and
and
outsl
incb
sub
mov
xor
mov
xor
push
mov
loopne
nop
sub
xchg
sub
sub
xchg
sub
aaa
jg
add
add
jp
cwtl
mov
adc
sub
or
sub
mov
or
add
sub
in
jl
in
jge
out
jle
jmp
les
mov
loopne
sub
add
out
sub
add
lock
fcmovnu
mulb
icebp
sub
call
repz
add
sub
and
sub
and
pop
test
mov
std
sub
jl
ret
out
add
shrb
sub
stos
ss
sub
lds
mov
outsl
int
std
sub
and
sub
mov
int3
sub
and
adc
sub
into
sub
incb
roll
mov
or
and
inc
aam
aaa
pop
aad
dec
xor
sub
outsl
testb
sub
fsubrs
pusha
push
fldcw
fisubrl
xor
outsl
in
das
pushf
fsubrl
sbb
cmp
mov
add
xchg
push
add
mov
add
and
sub
mov
sub
sub
add
sub
ds
sub
repz
add
sub
jg
icebp
insb
clc
sub
sub
add
int
shrb
shrb
sub
and
ret
sub
and
jg
aaa
lds
sub
and
sub
repz
jg
and
sub
and
sub
and
repz
jg
sub
and
sub
and
sub
and
jle
aaa
aad
lds
sub
and
decb
and
insb
sub
and
sub
mov
adc
sub
mov
fwait
mov
sub
mov
mov
cld
int
adc
sub
cs
sub
cs
int
cld
int
xor
sub
ss
sub
cmp
sub
cmp
sub
cs
sub
fistps
sub
loop,pn
add
sub
int
dec
push
adc
sub
push
out
pop
cs
int
jmp
sub
cs
sub
cs
int
cld
int
push
out
sub
adc
sub
adc
cld
int
cld
sub
adc
sub
push
imull
sbb
cld
int
stc
sub
sbb
sub
pop
shrb
cld
int
popa
ret
cs
sub
lds
sub
addr16
leave
sub
cs
sub
sub
insl
shrb
jno
sub
int
jae
sub
jne
sub
ja
mov
js
fldcw
adc
subb
adc
adc
test
adc
out
adc
cs
xchg
pop
adc
sbb
out
out
sbb
cs
cs
out
decb
cs
xchg
cs
adc
arpl
xchg
cs
out
xchg
cs
adc
cltd
imul
lcall
pushf
cs
popf
cs
adc
outsl
lahf
outsl
adc
jo,pn
jno,pn
loop
jb
jae,pn
in
je
out
in
jne
out
jbe
ja,pn
call
jns
out
out
jp,pn
jnp,pn
in
jl,pn
jge,pn
out
jle,pn
out
out
jg,pn
lock
icebp
cs
adc
cs
repz
adc
fistps
call
mov
testb
clc
fistps
sbb
adc
lea
cli
adcb
cs
xor
fistps
sbb
adc
cs
xor
adcb
cs
xor
fistps
sbb
adc
cs
xor
adcb
cs
xor
fistps
sbb
adc
cs
xor
adcb
cs
xor
fistps
sbb
adc
cs
xor
adcb
cs
xor
fistps
sbb
adc
loope,pn
into
adcb
cs
adc
out
jg
cs
or
cs
adc
cs
adc
mov
outsl
mov
aad
cmpsb
adc
lods
xlat
cs
adc
xchg
shlb
stos
aaa
add
fbld
test
mov
fstpt
jb
popf
xor
into
xor
andb
addb
orb
or
add
mov
mov
add
push
mov
add
add
mov
add
fists
popf
jbe
fadds
sub
add
add
inc
jnp
out
xor
sbb
push
cmpb
add
jo
add
or
jae
pop
je
imul
int
cmpsb
add
lock
or
int
mov
or
inc
sbb
lock
movsl
fwait
mov
or
jno
lods
add
sbb
mov
lcall
push
mov
mov
lcall
pop
pop
out
mov
mov
mov
lcall
adc
dec
imul
add
add
xor
repz
lea
dec
xor
repz
dec
jo
nop
inc
xchg
sahf
jbe
cmp
inc
xchg
imul
xchg
inc
add
ss
cwtl
dec
push
push
dec
add
or
lahf
inc
lods
je
fneni(8087
or
stos
loop
mov
jns
add
push
in
in
push
repz
repz
out
call
pop
jmp
xor
repz
in
pop
in
pop
repz
repz
mov
repz
mov
repz
repz
hlt
cmpsb
cmc
cmpsl
repz
repz
outsl
pop
addb
lock
or
test
or
int3
fs
cld
xor
inc
fdivrs
bound
xor
jbe
push
call
inc
cmp
lock
cmp
shrl
test
fildl
out
sbb
dec
sbb
je
mov
imul
jo
lods
divl
clc
and
inc
push
lock
cli
pusha
icebp
add
test
shll
fldcw
jb
xor
decl
in
sbb
aad
adc
add
add
inc
mov
ficompl
pop
icebp
outsb
les
jl
mov
or
or
lcall
dec
push
xchg
scas
es
shrb
mov
xchg
xor
cli
push
lret
push
dec
dec
cmp
std
clc
xor
inc
les
push
add
mov
add
push
leave
test
mov
sub
lcall
add
call
stos
sahf
rclb
cmp
fsubl
je
ds
sub
add
subl
lret
dec
push
jne
cld
sbb
lcall
ja
adc
inc
or
add
in
lods
lock
shll
mov
mov
push
mov
push
sub
stos
cmpsb
cmpsb
ljmp
push
pop
mov
jnp
lock
xor
pusha
cld
ficompl
sbb
sub
aaa
add
push
or
out
fmull
push
jnp
movswl
pop
js
adc
sahf
into
jnp
mov
loopne
add
mov
jb
mov
lock
add
or
pusha
mov
aad
jne
bound
je
pop
or
pop
inc
jle
or
mov
push
test
push
push
push
pop
dec
and
mov
jl
mov
and
fs
push
jae
xchg
add
mov
in
rcll
jg
cld
xlat
inc
sbb
sti
mov
call
cmpsb
lock
jge
mov
pop
imul
aaa
inc
xor
je
andb
lock
adc
ds
sub
testb
jb
sbbl
pop
fsubr
shlb
int3
movsb
pop
lock
testl
add
movsb
cs
shrl
outsl
inc
jb
aas
add
hlt
sbb
nop
lock
adc
lret
or
jno
and
int3
insl
push
xlat
je
mov
call
mov
sbb
add
sbb
push
inc
fs
dec
fnsave
dec
add
sahf
cmp
xor
jno
jo
pop
and
aam
mov
xor
mov
je
jle
ss
rolb
orl
pop
ffree
pop
addr16
mov
lock
rcr
dec
sbb
lock
jl
cmp
mov
popf
add
dec
lock
jo
or
fimuls
and
sbb
sbb
outsl
jno
daa
add
add
shlb
ja
sti
dec
icebp
jno
push
push
adc
out
mov
pop
in
dec
sbb
push
je
mov
sbb
pop
fs
push
sbb
and
cs
and
mov
mov
xor
adcb
inc
ljmp
or
inc
sbb
add
push
iret
sbb
mov
pop
ljmp
and
aam
ficoml
sbb
loopne
add
dec
loopne
push
xchg
or
test
sbb
add
mov
bound
push
sub
add
push
repz
or
push
sub
mov
mov
push
inc
jl
or
inc
or
add
orb
jne
pop
stos
cmp
cli
pop
cmp
pop
mov
sti
shr
dec
stos
loop
cs
xchg
or
stos
mov
add
ret
faddl
or
mov
push
mov
pop
xorb
stos
js
push
decb
and
lods
cltd
adc
push
and
sbb
cmp
push
cmpsb
adc
addb
ljmp
and
cmp
mov
add
js
dec
sub
cs
fdivs
add
lods
push
inc
adcb
loopne
pushf
push
orb
out
imul
dec
orb
orb
fdivrp
sbb
andb
daa
sbbb
xor
adc
rcr
cmp
rclb
cmp
jae,pn
loopne
mov
subb
shrb
imul
testb
and
divb
mov
pushf
cmc
xchg
test
fcmovnu
jmp
mov
mov
inc
iret
pop
shrl
ficoml
adc
push
adc
pop
add
and
adc
rolb
rorl
out
ret
push
inc
daa
mov
popa
rorb
fidivl
rolb
nop
dec
add
dec
sub
push
sahf
sarb
fcmovb
cld
sub
inc
je
sub
lods
loope
gs
je
pushf
fadds
negb
fadds
cmp
lock
fiaddl
popa
push
in
pop
add
cmp
sarb
and
inc
fidivs
inc
push
leave
add
pop
add
aad
add
mov
aaa
les
jecxz
add
rorb
xchg
bound
or
addr16
push
out
push
in
mov
pop
inc
sbb
inc
inc
push
stc
repz
pop
pusha
mov
sub
sarb
ret
or
arpl
or
in
push
xchg
push
popa
inc
inc
imul
or
xchg
stos
push
pop
sbb
rclb
sub
loope
jne
sbb
and
sbb
add
inc
sbb
add
xchg
push
mov
add
clc
outsl
mov
jo
ljmp
add
mov
inc
fisubrl
mov
cmp
push
movsb
rolb
adc
or
movsb
cmp
in
pop
fcoml
xor
add
add
add
or
or
or
les
and
add
add
push
roll
add
int
xchg
in
and
cmpsl
add
add
add
add
add
add
inc
add
cli
sbb
sbb
ja
sub
sub
inc
and
sbb
mov
mov
iret
ret
mov
call
push
mov
outsl
cli
or
cwtl
and
movsl
mov
cmp
jl
in
pop
jae
pop
icebp
decl
jg
hlt
add
mov
loope
es
pop
lea
push
fcomip
decl
jecxz
add
loopne
pushf
push
aas
lds
jbe
dec
mov
arpl
cli
bnd
mov
mov
test
xlat
inc
testb
push
xor
movsl
sbb
xchg
pop
inc
cmc
aaa
cld
scas
mov
lret
push
sub
test
adc
filds
sbb
jle
andl
cmp
roll
mov
dec
add
loop
icebp
out
stos
sub
cmpb
add
nop
jno
push
xchg
xor
dec
out
inc
rcll
mov
mov
pop
xor
psubw
push
pusha
loop
fs
cwtl
adc
incl
xchg
jecxz
push
gs
cmp
sbb
mov
push
sbb
sbb
jbe
out
or
dec
mov
decl
sbb
cmp
mov
std
pop
cli
add
insl
sbb
lock
lock
xchg
add
out
cmp
sbb
loopne
cli
mov
inc
sbb
stc
pop
xchg
repz
nop
jne
rcr
lock
mul
bound
dec
mov
fnstsw
data16
loope
incl
mov
sub
pop
add
cmp
in
incl
pop
shr
outsb
dec
jg
pushl
adc
xchg
jo
ljmp
fadd
ss
jo
mov
sbb
sbb
sbb
sbb
sbb
adc
stos
jg
push
loopne
pop
and
xor
dec
shrl
jno
lcall
ja
mov
push
pop
xchg
jge
cmpb
pushf
add
fcomip
movsl
xchg
sub
popa
loopne
jge
push
aam
outsb
cmpsb
mov
clc
ljmp
bound
lret
add
push
adcb
adc
loopne
push
pop
mov
xor
outsl
orb
notl
jl
in
lods
scas
std
jmp
pop
sti
and
mov
daa
std
mov
inc
hlt
mov
inc
inc
push
into
je
dec
and
push
push
fcmovu
jecxz
jg
push
adc
add
pop
dec
dec
sub
fnstcw
fbstp
or
sub
push
incl
insl
stc
push
push
xchg
inc
mov
or
xchg
cli
arpl
push
cmp
dec
or
inc
hlt
sub
push
xchg
js
mov
jp
outsl
cmp
adc
cmp
rcrb
push
idiv
das
mov
push
sbb
add
in
into
std
jns
ljmp
push
jg
ja
sbb
cltd
sbb
pop
fwait
aaa
rcll
dec
hlt
or
ljmp
call
fisubrl
sahf
cmp
add
mov
ffreep
adc
adc
adc
adc
adc
adc
les
fnsave
out
incl
mov
add
inc
mov
aas
lods
cli
sbb
sbb
insb
sbb
mov
lret
sbb
sbb
mov
dec
pop
jb
xchg
dec
in
incl
pop
push
cwtl
push
lret
add
add
lds
or
sar
aas
sbb
push
xchg
add
adcb
sbb
ret
mov
pop
and
mov
add
jg
es
jb
lock
ss
sbb
sbb
sbb
jp
jmp
sbb
les
fisttpll
insb
mov
mov
ljmp
and
cmp
adc
adc
adc
adc
adc
insl
repz
adc
adc
adc
adc
mov
mov
out
in
scas
idivl
sub
xchg
cmc
mov
std
dec
dec
adc
adc
inc
push
adc
adc
adc
adc
mov
filds
jg
in
rcr
sub
mov
cmpsl
aas
lock
out
dec
pop
jbe
enter
cld
idiv
adc
adc
adc
add
cli
adc
adc
adc
and
shrb
lahf
imul
pop
cmpsb
push
scas
pop
pusha
ss
dec
addl
in
push
shlb
jg
call
adc
mov
xchg
adc
sbb
ja
decl
adc
mov
mov
incb
adc
cmc
in
ficoml
es
sub
sub
out
dec
rclb
cli
cltd
imul
pop
jbe
out
stc
or
mov
push
push
outsb
cld
dec
subb
push
jbe
xor
sbb
jmp
aaa
sub
scas
std
inc
pushf
aas
xor
push
lods
int
fbstp
rol
sub
or
mov
jne
add
adc
mov
add
adc
adc
cld
mov
mov
mov
cmpsb
jns
or
pusha
mov
inc
in
andb
andl
pop
sahf
adc
fs
pushl
jg
adc
adc
mov
mov
sub
lock
cli
mov
or
imul
inc
sbb
xchg
sbb
sbb
stos
pop
sbb
lds
or
mov
push
int
or
idiv
jp
addr16
mov
int3
sbb
fsubrl
scas
mov
mov
lock
sbb
push
cld
out
sbb
arpl
movsl
and
js
sbbl
mov
aad
mov
xchg
loopne
arpl
mov
test
xor
push
icebp
add
sbb
call
push
es
cwtl
inc
sub
ror
pusha
xchg
outsl
cli
sbb
inc
js
inc
pop
movsl
pop
pop
pop
mov
mov
adc
or
lcall
fsub
add
xchg
push
mov
push
jecxz
xchg
sbb
out
cmpb
adc
mov
adc
adc
dec
cmp
call
inc
into
js
xor
or
cmpsb
xor
mov
or
arpl
dec
adc
adc
fs
xlat
adc
adc
adc
jmp
js
jge
and
jg
inc
test
cmp
push
add
cmpsl
jbe
inc
push
mov
push
jl
into
lret
push
ds
cmp
rol
dec
mov
movsb
cmp
mov
add
adc
jg
lods
mov
lcall
call
xlat
mov
push
cmpsl
call
mov
pop
push
jg
gs
mov
add
jg
dec
jmp
dec
outsl
cli
out
add
enter
pop
xor
jae
out
fs
inc
lret
aaa
std
in
icebp
mov
in
hlt
pop
mov
jbe
mov
das
add
dec
pop
sub
lock
in
xor
cmp
xchg
sub
fwait
mov
and
shrb
sub
sub
add
pushl
xor
xor
cmp
cmp
add
add
or
or
std
inc
or
adc
sbb
sbb
adcb
loopne
inc
inc
inc
inc
inc
inc
add
or
dec
dec
mov
push
push
push
push
push
push
push
add
pop
pop
jnp
jge
or
inc
clc
add
cmc
lcall
add
mov
cmpsb
add
lods
lods
inc
scas
mov
mov
mov
mov
add
mov
addl
xchg
nop
xchg
xchg
xchg
xchg
xchg
xchg
add
pushf
popf
jecxz
cli
push
push
lahf
loopne
loop
in
out
call
in
out
jmp
icebp
repnz
cmc
mov
sti
cld
std
ljmp
rol
lds
lret
int3
int
add
rcl
rcl
aam
incl
xlat
fcomp
fcmovu
fidivrs
decl
add
punpcklwd
bound
incw
mov
push
insb
insl
outsb
outsl
jo
mov
jne
ja
jns
jp
clc
mov
cmc
pshufw
rclb
push
add
and
pop
mov
add
sbb
fidivrs
mov
daa
aas
add
jmp
cld
add
add
cli
fbld
rolb
sbb
lds
mov
xor
dec
pop
fwait
add
fists
mov
cmp
adc
add
add
mov
rclb
xor
mov
push
add
insl
push
mov
mov
bts
mov
mov
mov
add
aas
pop
test
mov
add
add
jl
data16
xor
sub
addr16
cmpb
sbb
add
mov
call
std
xlat
mov
enter
cs
and
arpl
mov
xchg
lahf
sbb
mov
fiadds
mov
pop
stc
add
cltd
jecxz
dec
xor
adc
xor
mov
mov
imul
add
es
decb
dec
incl
stos
xchg
inc
jbe
mov
lea
add
movsb
or
pop
cmp
lcall
jp
push
rcll
flds
inc
or
icebp
pushf
mov
inc
pop
cld
incl
add
rolb
xor
mov
loope
clc
dec
add
mov
lcall
cltd
push
xchg
cmpb
mov
sub
xor
in
dec
push
push
add
mov
cld
fildl
gs
or
orl
cli
out
xchg
lcall
pop
sub
cmp
das
sbb
dec
sbb
nop
in
test
and
jl
or
lods
cli
enter
xchg
mov
pop
mov
add
mov
adc
addb
shrb
or
or
push
or
and
adc
push
roll
cmp
pop
nop
jge
mov
pop
add
mov
stos
out
sbb
sbb
and
orl
pop
sub
push
test
and
jns
leave
test
ja
imul
mov
cwtl
pmullw
add
ja
fildll
imul
cli
add
sub
outsl
das
push
adc
pop
jg
xlat
jg
pop
adc
lea
pop
ret
cmpb
mov
jle
inc
lds
adc
rol
sbb
add
xor
and
pop
inc
je,pt
add
jo
aam
xor
lods
pusha
add
mov
sub
add
mov
dec
shrl
pop
fldl
inc
and
adc
stos
dec
pusha
jnp
aas
cli
test
add
add
jae
bound
arpl
out
dec
data16
mov
je
data16
insl
lcall
gs
jb
subb
insl
gs
cmp
arpl
arpl
jne
add
jmp
popa
arpl
imul
add
xchg
insb
mov
add
jb
jo
jg
incl
imul
outsl
jbe
rorl
imul
add
inc
in
shll
mov
or
jb
add
mov
and
outsb
outsb
and
je
in
divb
push
test
jae
push
loop
bound
clc
andb
gs
inc
dec
dec
dec
inc
sbb
ret
cmp
push
mov
dec
pop
and
or
push
cs
sub
jno
push
or
mov
dec
push
stc
in
popw
lock
push
or
dec
cs
adc
inc
add
fidivs
test
push
pop
dec
inc
inc
add
inc
adcb
icebp
scas
and
push
inc
loopne
sbb
dec
fiadds
insl
xor
lds
xor
xchg
and
dec
lods
and
mov
js
add
sbb
sbb
push
sub
pop
inc
sbb
test
jns
or
decl
jbe
mov
enter
add
mov
add
andb
cmp
loopne
or
data16
ja
popa
push
jno
das
xor
and
dec
loopne
mov
mov
mov
inc
loopne
and
sbb
push
mov
sub
and
arpl
push
pusha
push
mov
pushf
mov
adc
dec
xchg
decl
or
inc
and
and
jp
pusha
sub
mov
add
mov
xchg
and
add
inc
push
jo
addb
inc
push
inc
out
js
or
dec
add
insb
dec
inc
push
rclb
popa
shlb
mov
aam
arpl
inc
cwtl
je
or
adc
dec
in
push
mov
add
idiv
insl
jae
ss
adc
pop
imul
andl
pusha
mov
jb
dec
inc
add
push
test
mov
or
dec
dec
bound
sub
add
inc
adc
push
sub
das
cli
adc
sub
push
cmp
shlb
loop
pop
add
pop
dec
je
sbb
push
dec
push
push
push
and
ss
sub
mov
and
push
andb
dec
rclb
dec
jg
jle
sahf
and
add
push
call
push
sar
je
popa
inc
jo
add
nop
inc
imul
or
xor
adc
add
pushf
dec
push
jae
pop
jbe
inc
loope
popa
decl
mov
mov
dec
inc
mov
les
cmp
clc
fimull
xchg
jno
lret
enter
xorb
cli
jmp
jb
cmpb
xor
cmpxchg
sbb
pushl
push
jae
mov
pop
pusha
clts
add
add
pusha
adc
push
jnp
adc
jne
cld
jl
in
mov
push
sbb
sbb
xorps
push
ret
pop
hlt
inc
shlb
pop
js
inc
inc
dec
dec
inc
inc
xchg
add
adc
stos
xchg
inc
dec
push
add
fs
mov
in
jo
mov
incl
mov
add
shll
adc
lock
mov
fwait
outsb
jp
xchg
mov
and
push
sub
add
fdivr
pop
lock
mov
add
add
sbb
or
stos
mov
add
cld
jp
add
jmp
xor
outsb
lock
nop
xor
pusha
inc
mov
scas
or
or
pop
outsl
clc
incl
dec
lock
pop
xor
pop
stc
add
imul
es
inc
mov
push
ja
sarl
adc
popa
lock
push
std
ds
lock
aad
mov
adc
lcall
dec
jo
insl
nop
inc
imul
xor
ljmp
jp
xchg
cmp
add
sarb
inc
xor
jnp
daa
adc
incl
dec
push
add
inc
xchg
ds
aas
inc
lock
xor
pop
hlt
pop
add
adc
push
mov
jae
sbb
cwtl
cmp
insl
mov
dec
pop
add
push
adc
aaa
dec
subl
jo
cmpsb
js
add
jg
mov
inc
sbb
or
adc
insb
xor
or
or
push
adc
adc
jno
arpl
inc
inc
xor
cli
mov
mov
dec
add
cmp
outsl
inc
fsubrl
repnz
and
inc
jo
mov
push
es
sbb
fsubl
pop
bound
inc
and
dec
inc
add
and
icebp
push
sbb
xor
ds
cmp
add
xor
ds
mov
cmp
das
xor
fadds
int
lret
rcr
iret
push
frstor
xchg
xchg
xchg
mov
mov
sahf
mov
or
jecxz
ja
sti
jmp
icebp
add
aam
fnop
ror
add
scas
ss
daa
or
in
decl
pop
or
sbb
icebp
lods
daa
add
gs
cmp
decl
bound
rcl
xchg
pop
adc
pop
pop
add
sub
sbb
sub
das
clc
nopl
and
adc
or
or
xor
outsl
mov
sub
xchg
lods
add
mov
mov
mov
cmpsl
xchg
xchg
mov
xlat
mov
mov
xchg
fisttps
xchg
sti
mov
mov
fdiv
ja
lods
in
ljmp
icebp
mov
cli
xor
loop
cmpsb
add
cmp
outsl
jo
testb
or
ficoml
push
jl
pop
jb
sbb
mov
or
push
pop
push
dec
and
inc
pop
push
add
or
push
icebp
add
jns
add
jg
push
jg
fcomi
mov
xchg
repz
in
repz
pushf
hlt
in
enter
stos
lds
fbstp
fcmovnbe
or
lcall
repnz
lock
cmc
adc
loopne
ret
outsl
cmp
in
add
jmp
stc
jp
mov
loopne
cld
mov
mov
mov
mov
mov
dec
inc
inc
push
lcall
dec
pop
inc
adc
add
jmp
cli
jecxz
loopne
fcomip
ljmp
xchg
test
xchg
cltd
xchg
or
cmc
jmp
mov
xchg
int
or
mov
mov
mov
mov
je
in
mov
movsl
mov
mov
xchg
xchg
mov
in
xor
and
sbb
adc
push
and
jbe
pop
jnp
mov
js
jnp
jle
push
sbb
pop
dec
or
dec
dec
adc
add
js
adc
add
sti
mov
bound
sub
mov
decl
dec
push
dec
test
ljmp
add
dec
pop
add
dec
push
scas
lcall
inc
outsl
add
inc
push
sbb
sbb
inc
add
push
faddl
cmp
or
decb
xchg
pushf
mov
mov
stos
mov
mov
mov
mov
push
ljmp
mov
pushl
test
mov
movsb
ljmp
mov
mov
out
cld
mov
pushl
ret
leave
addb
in
out
out
jmp
out
mov
hlt
mov
mov
ljmp
stos
mov
add
push
add
inc
inc
pop
dec
dec
dec
add
fbld
inc
inc
push
push
add
jno
bound
cmovge
lock
ss
inc
dec
push
dec
inc
orb
pop
add
notb
or
stc
out
vpmuludq
in
dec
stc
repz
stos
add
aas
cmp
cmp
sub
sub
adc
sub
add
xor
sar
fcmovnbe
rcl
aad
fcom
lret
sar
loope
addb
addb
nop
xchg
fwait
xchg
pop
mov
decb
xchg
scas
mov
cmpsl
lcall
jmp
movsb
lahf
mov
test
adc
adc
add
or
add
pop
dec
gs
dec
push
imul
xor
adcl
stos
xchg
test
mov
mov
push
addr16
dec
jae
pusha
dec
outsl
inc
jns
nop
sbb
lret
fiadds
enter
ljmp
add
ljmp
outsb
jb
pop
push
push
pop
pop
push
adc
push
pushl
push
ret
loope
out
repz
icebp
clc
out
in
add
mov
push
push
inc
push
jl
add
pushl
out
fcmovu
sbb
into
int3
fcmovnbe
aam
lret
add
xor
mov
xchg
mov
cmpb
add
pop
jne
fs
jno
gs
xchg
pop
gs
subb
popf
sahf
xchg
add
pop
cld
add
xchg
fwait
lcall
mov
loope
lods
dec
adc
mov
add
in
out
fcom
lds
inc
cmp
sub
cmp
pop
and
xor
cmp
add
cld
ljmp
lret
hlt
incl
mov
pop
inc
push
pop
pop
pop
and
pop
push
push
jo
aas
fbstp
lret
in
fcomp
enter
mov
pop
cmp
addb
cmp
daa
cmp
ss
xor
scas
clc
xchg
addl
imul
xor
and
std
scas
xchg
cmp
sub
xor
xor
js
lea
subb
sti
fnstsw
shr
jecxz
lock
rcl
pop
cs
sub
push
add
int3
aad
rcl
call
iret
divl
push
cli
loope
test
stc
jmp
sti
mov
rcr
outsl
in
jg
clc
in
in
div
sti
divl
sti
out
es
or
adc
add
pop
adc
aas
and
cmp
cmp
xor
jno
add
or
fwait
jbe
pop
add
or
sbb
xlat
aam
shlb
adc
push
adc
psrlw
scas
mov
bound
lock
inc
gs
dec
inc
pop
mov
loop
lock
in
out
rolb
adc
popa
aaa
push
dec
push
push
loope
jg
movd
pop
fs
pusha
fs
jne
pop
dec
dec
dec
pop
fstpt
fidivrl
dec
nop
inc
push
push
jae
inc
pop
dec
pop
adc
add
adc
mov
call
in
in
cmc
fistps
loopne
lock
mov
mov
mov
enter
mov
repnz
xor
xchg
mov
mov
ljmp
cli
iret
sub
and
cmp
xor
outsl
mov
lea
dec
dec
dec
push
lret
push
jg
insl
jnp
cli
out
in
popa
push
or
or
mov
cli
mov
xchg
mov
test
cmpsl
call
icebp
movsb
mov
test
mov
mov
xchg
adcb
push
mov
shlb
and
sub
push
dec
ja
out
fstl
xchg
out
jmp
lock
pop
or
pop
sbbb
or
or
dec
push
pop
dec
dec
pop
in
push
ja
and
ljmp
dec
inc
jg
push
jnp
insb
jg
pop
outsb
push
fcmovbe
ret
rolb
decl
in
loopne
out
jecxz
call
sub
mov
cld
cld
rcl
and
lret
stc
cld
xchg
mov
dec
inc
inc
dec
push
inc
mov
xchg
inc
push
pop
jns
rorb
xorl
sub
in
jmp
std
xchg
mov
fisubl
jb
pop
clc
xchg
pop
add
incb
sub
push
mov
push
or
sbb
nop
lea
add
mov
scas
mov
mov
movsb
xchg
mov
scas
xor
pop
push
sbb
add
insb
push
pop
or
push
pop
push
imul
out
sar
call
lcall
data16
cmp
sub
daa
daa
xor
rcrb
xchg
xchg
xchg
fwait
fimull
lcall
mov
test
repz
sbbb
aam
pop
pop
inc
inc
push
pop
pop
push
push
dec
std
jmp
jg
pop
sbb
and
add
push
mov
mov
mov
mov
outsb
icebp
pushl
mov
mov
movsl
xchg
mov
sub
xchg
aaa
sub
addr16
mov
scas
movsl
add
mov
lret
int
pop
add
push
cmp
mov
jg
jb
popa
jge
je
cmpsb
lock
mov
hlt
cmpsl
pop
xchg
iret
fadd
out
repnz
sub
ret
mov
push
jp
push
jae
std
incl
sub
xor
and
daa
xor
add
sbb
sub
add
std
in
in
and
out
fisubs
icebp
in
cmovp
mov
jg
jbe
imul
and
cmp
cmp
icebp
sti
jg
lahf
test
mov
mov
clc
fdiv
in
cmpsb
fucomip
out
std
repz
xlat
loope
jmp
clc
mov
fildll
scas
in
idiv
mov
lock
mov
call
or
add
or
and
push
jns
daa
popa
jg
sbb
addr16
pop
outsl
mov
sub
xor
sti
hlt
in
mov
dec
pcmpgtw
gs
insb
popa
push
push
inc
inc
pop
addr16
push
push
push
std
fucomp
pop
pop
push
fs
dec
sbb
push
scas
orb
stos
test
mov
add
sub
sub
sbb
cmp
pop
loope
ja
loop
cltd
xchg
and
sahf
lcall
cmpsb
lcall
mov
mov
repz
test
lds
jmp
rol
ret
enter
sbbl
sub
mov
sbb
xor
outsb
cmp
bound
sub
das
js
gs
idiv
call
out
loop
out
hlt
aad
loope
enter
es
jne
push
sbb
jl
adc
jns
subb
ljmp
stos
mov
mov
das
sub
sub
xor
daa
cmp
imul
and
imul
lcall
xlat
rcr
aam
lret
xlat
addr16
jge
movq
pop
jns
mov
std
loope
mov
clc
testl
call
xchg
pushf
mov
mov
popl
mov
add
mov
mov
inc
inc
push
inc
push
pusha
jo
pop
ret
mov
push
jp
dec
dec
inc
in
push
bound
inc
add
or
sbb
adc
dec
or
or
rcl
lret
iret
into
leave
call
jmp
fcmovu
add
xchg
fdivs
mov
sarb
mov
outsl
fs
jno
and
imul
pop
push
jne
bound
pop
jae
jne
pop
jge
jg
mov
push
jge
push
jns
fs
mov
push
pop
ljmp
cmc
decl
addr16
dec
fs
jbe
push
inc
push
xchg
in
out
call
push
popf
test
mov
fdivr
outsl
call
ret
mul
ljmp
outsb
jle
dec
inc
push
dec
push
dec
pop
xchg
jmp
outsb
jg
pusha
jns
jg
push
inc
outsb
inc
jl
jae
popaw
xor
jp
jge
ret
mov
in
imul
mov
push
mul
push
pop
pop
inc
pop
push
push
dec
push
pop
pop
pusha
lret
imul
out
in
adc
rcll
cli
loopne
stc
cmc
ljmp
out
cli
sti
call
push
push
or
lret
xchg
xchg
xchg
inc
mov
mov
icebp
test
scas
xchg
cwtl
and
xchg
lret
sarl
mov
mov
lea
movsl
call
or
das
xor
and
addr16
and
pop
pop
pop
dec
mov
ror
jo
inc
push
inc
push
inc
ja
incl
pop
inc
pop
inc
push
inc
insl
addr16
pop
push
pop
dec
dec
gs
dec
dec
pop
insl
jbe
gs
insb
imul
shl
incl
jnp
jg
jbe
xor
bound
jne
inc
inc
jno
jns
call
inc
adc
ret
leave
enter
xchg
incl
pusha
push
sub
insl
data16
jae
js
inc
push
je
jge
std
mov
pusha
xor
pop
dec
pop
inc
pop
inc
push
inc
inc
pop
incb
fstpl
sub
sub
sbb
int3
rol
ret
sarl
mov
shlb
mov
sbb
lahf
mov
mov
lcall
movsb
lahf
lahf
cmp
xchg
and
pop
test
jl
outsl
cmp
jae
adc
or
cmp
fcomip
sbb
or
xor
pop
or
inc
daa
sbb
or
push
mov
xor
out
adc
or
dec
or
sbb
pop
add
add
out
adc
incl
add
or
adc
sbb
pusha
cmp
jg
inc
jb
inc
cmp
aaa
and
and
xor
cmp
sub
jle
mov
rclb
add
dec
dec
dec
pusha
or
cmp
out
clc
scas
pop
pop
cmp
pop
pop
dec
inc
or
dec
inc
push
push
dec
dec
push
adc
push
push
push
inc
call
push
pop
pop
pop
pop
push
dec
imul
daa
sub
sub
push
or
jmp
jg
cmp
data16
adc
or
sub
xor
adc
pop
ljmp
adc
push
cwtl
pop
adc
pop
push
pop
push
push
adc
sub
pushl
inc
cmp
sbb
xor
cmp
sub
add
and
or
leave
fsubr
aaa
mov
mov
fdivrl
add
ror
fldt
mov
rol
out
rol
jmp
lods
std
in
jmp
clc
in
lock
test
mov
in
ret
sti
out
icebp
cmc
std
lret
out
hlt
hlt
mov
mov
xchg
addb
incl
mov
adc
roll
mov
mov
mov
sahf
mov
sbb
stos
xorl
outsb
repz
repz
inc
pop
dec
and
add
jle
push
mov
pop
adc
dec
pop
pop
dec
dec
pop
inc
dec
sbb
inc
pop
push
jg
fs
jg
insb
push
incl
cld
je
bound
addr16
je
jbe
xor
jle
or
lahf
fwait
lock
push
bound
sti
loope
sti
out
fsincos
out
and
loope
idiv
sti
icebp
mov
loop,pn
fbld
pop
loop
mov
add
sbb
adc
incl
shl
out
div
stc
out
hlt
cld
call
inc
or
pop
pop
mov
es
or
mov
cmp
out
imul
pop
inc
pop
inc
ds
stos
movsb
mov
xchg
fwait
xchg
xchg
mov
mov
movsb
mov
dec
jp
pop
outsb
sbb
add
addb
mov
das
les
jo
cmp
add
out
clc
push
lret
xchg
lea
enter
rol
xlat
ret
fstp
fsubr
pop
mov
sahf
test
stos
mov
mov
subb
cmp
sbb
clc
aad
int3
std
call
fcmovbe
leave
xchg
call
fbld
dec
inc
pop
inc
inc
dec
dec
add
dec
inc
pop
dec
int
cmp
or
dec
inc
dec
inc
add
or
xchg
addb
loop
int
call
int
mov
enter
mov
scas
pop
decl
fwait
inc
loop
jbe
xor
rcl
fld
fadd
lret
clc
ja
cmpsl
test
movsb
negb
das
fs
xlat
mov
cltd
lahf
xchg
leave
int3
test
stos
incb
jp
call
mov
mov
cmp
stos
dec
cld
lcall
mov
scas
scas
in
out
jmp
dec
clc
pushl
sbb
push
sbb
adc
push
add
add
sbb
pop
or
or
incl
jae
sub
sub
and
and
and
out
call
ljmp
loopne
movsl
in
in
loope
sti
repz
out
jmp
push
jg
jecxz
fucomp
jne
sbb
mov
negl
mov
jle
in
stos
mov
mov
mov
iret
leave
inc
ja
mov
xchg
mov
lret
cli
push
mov
sub
add
xchg
jmp
div
cmc
out
negb
loopne
xchg
cwtl
stos
mov
sub
dec
sbb
or
adc
shll
inc
inc
ss
dec
or
adc
push
push
pop
jg
cmp
fisttps
std
sbb
sbb
jnp
dec
popa
push
xchg
rcr
mov
mov
mov
test
movsl
loope
incl
jns
push
xor
insb
cmp
outsl
arpl
lea
inc
ja
adc
sbbb
push
outsl
insl
push
jmp
and
insb
js
jo
je
inc
push
daa
cmp
pop
lock
das
and
out
mov
pop
stos
aas
sahf
aam
fxch
mov
addb
aas
lock
dec
inc
or
mov
mov
test
mov
mov
and
xor
ja
sbb
mov
mov
cld
incl
xlat
rol
into
xchg
enter
icebp
das
clc
lcall
test
mov
movsb
stos
stos
call
fidivrs
inc
inc
outsb
lea
int3
int
mov
mov
lea
sarb
mov
adc
scas
test
adc
std
mov
mov
mov
mov
xchg
jle
jae
push
inc
rorl
push
add
jo
movsl
jnp
lods
push
dec
cmp
mov
popa
ficoms
push
ds
cs
fnstsw
dec
add
imul
jle
fcoms
inc
inc
push
push
push
ret
dec
in
or
xor
and
dec
jl
mov
push
push
inc
xchg
fcmovnbe
push
add
sbb
dec
dec
sub
or
push
rorb
push
and
xor
inc
sub
dec
jg
fistl
adc
and
dec
push
sbb
or
push
jb
outsb
add
cmp
mov
dec
and
inc
push
cmp
pcmpgtd
and
mov
push
sbb
pop
arpl
dec
sbb
xor
mov
mov
adc
sub
adc
push
pop
outsb
dec
push
dec
push
jns
out
adc
popf
pusha
shlb
push
mov
insb
inc
mov
add
and
and
cli
adcl
dec
inc
push
push
sbb
push
call
dec
inc
xor
mov
xchg
xor
ficoml
or
mov
mov
jl
add
inc
push
push
subl
bound
js
shl
arpl
push
inc
je
add
int
push
pop
add
jo
and
push
jb
cmp
lret
ja
add
push
add
pop
cmpsb
pop
mov
pop
rcrb
movb
cmpsb
pusha
fiaddl
rolb
push
add
clc
pop
das
bound
data16
push
inc
add
or
add
dec
dec
push
repnz
cmp
or
add
cmp
cmp
fcomip
ja
bound
adc
sub
jg
add
add
lds
cli
incl
push
add
stos
int3
jno
jbe
dec
or
add
fists
out
xchg
sbb
faddl
fbstp
and
aaa
jae
call
das
movsb
in
pop
stos
sbb
dec
add
fsubrp
jmp
jae
push
cmp
or
add
adc
loopne
inc
xor
push
xchg
adc
cmp
les
sbb
and
outsl
dec
sub
idivl
call
xlat
stc
push
test
mov
mov
xor
lret
sub
test
jle
jl
add
inc
or
data16
loope
mov
sti
jbe
sbb
jo
stos
add
jns
xor
add
fmuls
mov
sbb
push
and
or
xor
decb
xor
add
sbb
push
and
sti
testb
xor
enter
xor
fadds
cmp
das
xchg
jg
jnp
loop
mov
mov
movsl
mov
arpl
pop
xchg
stos
push
and
cld
pop
lock
sub
dec
adc
js
rolb
sub
pop
mov
js
sub
jo
jg
jg
lods
push
add
enter
cmp
inc
inc
scas
xchg
inc
or
jo
mov
addb
mov
rolb
rolb
pop
sbb
loopne
rolb
sbb
jle
ficoml
enter
es
push
fistps
mov
jp
enter
or
cmp
out
jb
incl
or
and
sbb
push
arpl
lock
push
ds
rorl
jmpw
adc
fcoms
adc
lret
negb
inc
adc
lret
inc
sbb
sbb
adc
std
aaa
mov
lret
stos
xor
pop
cmp
adc
loop
mov
mov
lock
pop
mov
push
les
rorb
shll
jge
in
pop
hlt
push
andl
and
or
and
fisubs
pushl
insb
mov
dec
enter
lret
inc
push
sub
push
mov
lock
pop
mov
jne
jno
mov
test
or
jl
or
lods
popf
add
enter
mov
xor
lods
xchg
js
sbb
adc
jo
add
rorl
or
add
movsl
rorl
xor
call
inc
xchg
mov
orl
add
push
loop
add
lret
aam
push
cmp
add
add
sbb
sbb
add
adc
leave
and
fwait
push
cli
sbb
int3
enter
gs
ret
mov
mov
gs
pop
and
and
js
pushl
inc
hlt
inc
adc
scas
add
orb
pop
int3
dec
fbstp
add
ficompl
sub
mov
addl
inc
and
add
mov
ja
fidivrl
and
push
fadd
jge
fwait
mov
fimuls
push
pop
stos
rorb
lods
arpl
jbe
sub
test
inc
cmpsb
adc
fsubrs
shll
sbb
push
pop
stos
orb
and
movsl
rclb
push
std
cmpsb
or
andb
sbb
fneni(8087
dec
cwtl
adc
or
and
jo
mov
ret
or
gs
sub
mov
xor
xor
pushf
mov
daa
dec
xchg
pushf
pusha
push
test
mov
inc
push
jno
stos
jecxz
out
enter
add
sbb
insl
cmp
pop
adc
xor
fistpll
loopne
enter
sub
test
add
add
pop
fbld
aad
insl
clc
adc
pcmpgtw
lods
xor
clc
outsb
sbb
outsb
test
and
loopne
push
fsubs
mov
mov
push
enter
das
testb
sbb
and
pushl
push
fisttps
jp
addr16
stos
loopne
jmp
or
add
mov
dec
or
and
lret
mov
xchg
loopne
add
add
loope
jle
hlt
incl
movsl
repnz
addb
sbb
lock
ss
clc
hlt
or
or
mov
and
in
or
mov
or
inc
push
subl
icebp
push
lret
push
icebp
mov
ficompl
inc
insl
enter
mov
outsb
jp
add
or
push
or
movsl
push
sub
lds
xchg
mov
test
xchg
pop
push
enter
dec
push
mov
in
hlt
cld
loopne
pop
jmp
imul
hlt
mov
inc
das
lods
cli
fstl
or
or
into
and
mov
jne
push
jb
adc
bound
cwtl
imul
out
je
fistpll
and
dec
push
and
pop
fbld
jbe
dec
inc
lock
mov
and
adc
push
sub
pop
loop
mov
sub
in
das
mov
sub
xchg
xor
adcb
stos
mov
test
movsb
fwait
movsb
and
and
mov
sbb
sarb
xchg
stos
rclb
fistps
xlat
movsb
jno
jne
enter
mov
push
pop
ja
mov
sub
decl
in
pop
add
sbb
dec
loopne
sub
pop
inc
push
xor
add
clc
mulb
push
xchg
jl
add
rorb
sub
enter
pop
repnz
jno
sbb
das
and
or
jno
jg
add
and
andb
pusha
pshufw
adc
inc
xor
fisttps
test
and
push
and
pop
inc
cmp
add
pop
jmp
pop
ss
fs
add
pop
and
enter
rorb
mov
and
push
push
cmp
cmpsl
xor
pusha
je
ds
insb
repnz
loop
or
subl
insl
cmpb
incl
mov
data16
push
push
and
mov
xor
stos
data16
rolb
cli
mov
fdivs
push
push
rclb
pop
mov
repz
mov
cli
adc
jmp
push
or
dec
and
xchg
fidivrl
fbstp
push
mov
jae
sub
mov
lds
jg
and
fs
mov
push
jbe
mov
jl
lsl
pusha
add
ljmp
jmp
cmp
fistpll
incb
xor
mov
jge
rcrl
out
rolb
shl
es
pusha
test
add
outsl
add
rorb
inc
out
loop
dec
adc
clc
es
pusha
sbbb
inc
test
ret
add
push
add
pop
cmc
xchg
pop
push
add
and
jo
and
sub
dec
outsb
and
jbe
ljmp
add
add
sub
scas
clc
and
jecxz
cmp
mov
sbb
filds
pop
push
gs
or
lcall
fdivl
bound
fs
jp
add
mov
mov
pop
add
and
push
and
loop
sub
xorl
sub
jne
out
shl
dec
dec
dec
lock
je
xor
stos
insb
repz
mov
sti
fisttpl
nop
and
dec
aas
and
loope
aas
lock
jp
pop
je
aam
xor
adc
jo
insl
jbe
jmp
add
add
sub
test
dec
push
dec
push
xchg
dec
in
fwait
push
push
push
push
and
add
xchg
jp
in
jmp
sub
out
bound
iret
loopne
popa
pop
shlb
or
aaa
fmul
xor
or
lock
aas
jg
fmull
dec
in
sub
mov
jle
or
push
je
push
fldt
or
faddl
adc
testb
addb
xlat
stc
and
sti
push
insb
fs
or
jge
stos
test
popa
loopne
sbbb
pusha
sub
and
dec
push
int3
shl
cmpsb
ffreep
aam
and
addb
jbe
jmp
pop
mov
sub
add
push
cmpsb
lods
inc
or
outsb
dec
adc
nop
cltd
lock
outsl
ret
loopne
cmp
loopne
ja
add
sub
push
incb
add
clc
lret
int3
jmp
sbb
mov
dec
jecxz
push
sbb
pop
shrl
cld
jnp
decl
daa
incb
add
lret
insb
icebp
lret
lods
arpl
inc
mov
cli
add
imul
sbb
fistl
jmp
or
xchg
and
add
enter
xorb
jmp
rol
push
mov
ret
popa
push
shl
ds
stos
or
call
sub
push
or
sub
xchg
xor
add
sbb
and
sub
push
enter
or
add
and
mov
sub
das
subb
xor
xor
mov
hlt
sub
rclb
js
and
or
push
lock
pop
xor
ljmp
sbb
inc
sbb
mov
adc
jae
adc
clc
jg
jae
loopne
sub
push
adc
insb
xor
adc
pop
mov
xor
rolb
xchg
and
sub
add
xor
or
dec
jae
adc
jmp
cmovo
mov
push
fists
fcomip
add
sbb
call
dec
sub
jge
lret
pop
and
lahf
push
sbb
inc
push
icebp
jl
fildll
pushl
or
sub
xor
sbb
and
xorl
lret
sub
mov
and
and
push
jae
mov
in
test
daa
ret
loopne
pushl
std
sti
cmp
fsubp
inc
or
scas
sub
fisubrl
clc
stos
xor
stos
push
dec
mov
dec
or
pop
sar
lcall
fimull
pop
loope
or
xor
jae
add
movsl
fistps
pusha
rclw
fisttps
add
stos
cmp
outsl
popa
sbb
pop
ds
pop
lret
xor
jnp
addb
stos
xorb
sbb
push
es
ljmp
and
int3
es
adc
roll
leave
add
aas
jg
loopne
jo
gs
data16
das
mov
and
dec
cmp
out
enter
cmp
ss
mov
cmp
adc
inc
adc
or
inc
push
clc
pop
stos
das
cmpsl
lea
add
loopne
add
fidivl
lods
or
je
outsl
and
shrb
loope
pop
and
ja
fidivrl
das
mov
int3
xor
movsb
movsl
rcrb
and
outsb
dec
mov
cmpb
xor
lods
mov
fldt
stos
jmp
call
mov
nop
xor
std
pop
sub
sub
pusha
add
add
in
rcrb
or
icebp
fcoms
dec
inc
jg
xchg
stos
cmpsb
jno
push
cwtl
stos
add
mov
cmp
cld
call
xor
rolb
loopne
scas
mov
test
loopne
mov
cmc
inc
lods
ja
movsb
sub
dec
mov
movsb
leave
rclb
adc
mov
addb
push
out
inc
push
jbe
dec
or
ret
jg
inc
push
xchg
inc
and
sbb
ljmp
clc
jo
aas
cmp
jo
xor
inc
addb
insb
xchg
adc
mov
sbb
movsl
mov
push
leave
adc
and
int3
ja
or
andb
stos
jbe
cmpb
lods
mov
fsubrs
sahf
aam
lock
data16
mov
cwtl
icebp
xor
mov
mov
dec
add
or
loop
or
jg
rclb
outsb
add
fnstsw
cwtl
mov
std
outsl
sbb
sbb
data16
dec
jo
push
lahf
lock
mov
mov
mov
or
stos
adc
data16
mov
and
add
xchg
cmp
mov
jns
movsb
or
sbb
mov
loop
sbb
add
stos
and
addb
imulb
sbb
xchg
add
jl
mov
fdiv
mov
xor
and
add
sbb
fsubs
data16
add
xor
mov
add
ljmp
add
mov
add
pop
add
xchg
das
and
inc
in
pop
loopne
xchg
sub
xchg
inc
jnp
clc
lods
lret
push
sub
jp
sub
add
and
shrl
add
xlat
add
adcl
inc
stos
divl
mov
ret
out
loop
jbe
lcall
lock
fadds
add
add
sub
adc
outsl
xor
loop
subb
sbb
lods
fstp
jle
addb
bound
movsb
cs
movb
inc
enter
lock
fsub
mov
jne
mov
adc
jo
sub
push
add
add
orb
outsb
fisubl
incb
push
ljmp
mov
aam
xchg
or
push
xchg
outsl
pop
loopne
adc
xchg
pop
add
jl
add
stos
aaa
loop
aad
pop
inc
in
clc
cmp
pusha
mov
das
mov
sbbb
sub
daa
lcall
lods
movsl
addb
inc
jl
pop
sub
xor
stos
scas
add
popa
mov
inc
shll
js
xchg
leave
push
inc
or
add
rolb
pop
add
push
dec
addb
lods
lods
jne
shrb
mov
jbe
sub
sbb
or
popl
inc
add
pop
icebp
lods
cwtl
sub
and
xor
lock
inc
xor
scas
add
sub
stos
add
xor
addb
or
scas
mov
adc
push
inc
push
sahf
fisubl
and
inc
movl
addl
add
das
test
loope
inc
xor
fists
sahf
push
push
xor
pop
mov
lcall
lods
mov
leave
adc
fcmovnb
jnp
rolb
mov
dec
mov
push
inc
mov
mov
mov
dec
mov
fidivrl
rcl
leave
call
cmp
mov
push
add
in
push
pop
add
mov
inc
movsb
sub
push
jl
push
andb
pop
jne
aad
sub
and
subb
dec
adc
xor
mov
and
cmp
and
ljmp
movsl
and
andb
mov
add
daa
adc
jg
aam
or
sub
shrl
mov
xor
adc
push
in
loopne
jno
adc
and
and
or
das
mov
pop
push
sti
test
or
pushw
mov
xchg
xor
inc
movsl
adc
test
mov
imul
lods
pop
popa
add
add
or
pop
add
adc
call
sahf
sbb
add
pop
test
and
loope
adc
and
jae
in
sar
or
aas
dec
movsb
stos
add
test
mov
lods
dec
rorb
sbb
cld
cmpsb
movsl
dec
mov
lods
mov
adc
ja
call
inc
xchg
adc
es
push
add
test
jmp
loopne
cmp
mov
aas
test
aas
jmp
pop
loopne
imul
nop
jge
sub
xchg
and
cli
decl
inc
and
stos
jle
and
idivb
xlat
pop
cli
pop
in
add
mov
add
les
push
das
push
push
addb
mov
push
adc
decl
shl
ja
das
dec
movsl
cmp
and
cmp
mov
incl
inc
cld
pusha
push
add
movsl
xor
mov
adc
loop
leave
or
addr16
movsl
rcrl
movsl
and
scas
into
and
ljmp
ljmp
stos
mov
jo
inc
lahf
push
test
insl
lcall
jno
adc
sub
or
leave
addl
mov
decl
add
or
or
call
dec
or
scas
stos
push
clc
insl
adc
and
sub
mov
lret
and
inc
add
mov
js
std
mov
adc
lahf
add
jp
jbe
lcall
jge
test
js
out
jg
sub
mov
or
cwtl
jmp
sub
add
dec
pop
cmp
out
push
hlt
ljmp
mov
insb
test
loope
jecxz
out
fs
sub
cmc
aaa
fstl
and
nop
or
es
xchg
xorl
push
jmp
xchg
xchg
sub
xchg
cmpsl
loopne
gs
inc
enter
mov
jp
inc
add
pop
add
inc
push
mov
or
in
addb
stos
xor
jno
inc
stos
movsl
filds
mov
xlat
aas
mov
cmpsb
cmp
add
add
inc
mov
cmpsb
fwait
sbb
cmpl
push
dec
push
dec
sbb
mov
es
dec
mov
cmp
insb
adc
push
and
int3
cmpsb
xor
pop
jmp
lods
xorb
jbe
shlb
dec
es
ljmp
ss
or
call
subl
xor
jbe
testb
insl
push
enter
sub
pusha
sbb
or
scas
xor
addr16
mov
lret
iret
inc
decl
sbb
data16
lret
ret
sub
ret
bound
mov
mov
push
sbb
pop
das
aam
inc
pop
inc
xorl
adc
loopne
inc
push
cmpsl
stos
rolb
sbb
outsb
addb
mov
arpl
and
mov
outsl
mov
mov
mov
jo
ljmp
cld
inc
inc
add
aas
fnop
or
add
icebp
cmpsb
add
lret
or
push
add
push
cmp
sub
jno
mov
cmp
sbb
mov
push
adc
mov
pop
clc
loop
mov
add
out
mov
inc
xlat
push
or
scas
mov
outsl
ds
sbb
or
pop
faddl
sub
pusha
shrl
ret
push
lods
push
jmp
pop
adcb
and
add
cmp
pop
push
es
mov
mov
push
stos
add
call
sub
leave
adc
and
push
mov
pop
jo
xor
stos
ljmp
sub
cs
bound
loop
xchg
inc
pop
fiaddl
jbe
inc
xor
jbe
add
loope
data16
fwait
sbb
aaa
addr16
push
sub
add
sbb
das
mov
lret
daa
and
pushl
stos
mov
stos
loop
adc
rcrl
xchg
arpl
incl
dec
xchg
or
movsl
add
add
push
add
repz
lock
mov
movsb
fildl
sbb
in
or
pop
and
inc
mov
or
push
push
sti
addb
test
scas
in
aaa
add
or
js
adc
incl
and
and
mov
inc
add
in
mov
inc
icebp
add
dec
xchg
hlt
add
fsubl
push
adc
push
add
leave
stos
mov
jge
sub
jae
mov
add
fsubrs
outsl
or
cmp
push
sub
add
sub
fdivp
jmp
ss
cmpsb
out
lock
or
fidivl
into
cld
inc
lock
or
cld
inc
aas
stc
mov
sbb
mov
in
add
cltd
cs
aaa
mov
jp
mov
push
rolb
xchg
cli
scas
sub
mov
pop
and
push
push
lods
mov
jg
sub
inc
pop
add
mov
cmpsb
dec
pop
icebp
add
cld
outsb
jge
push
movsb
dec
push
jg
mov
shrb
add
pop
inc
je
pop
adc
adc
scas
xchg
outsl
push
das
lods
mov
xor
sbb
add
add
pop
shll
mov
pop
std
or
cmp
mov
sbb
dec
jg
mov
mov
loop
mov
outsl
inc
adc
mov
cmpsb
mov
nop
leave
scas
lock
cmp
cmpsb
clc
test
mov
dec
adc
add
push
sub
jle
loopne
aam
jl
imul
adcb
ja
add
and
movsl
add
pop
daa
stos
jo
or
and
out
push
jbe
push
add
jle
sub
pusha
repz
test
add
int
call
and
push
fs
mov
cmpsl
out
mov
ja
cmp
jg
xchg
and
pop
insl
int3
add
imul
loop
pop
ret
loopne
push
sub
cwtl
jo
pop
nop
decl
out
test
push
lcall
mov
pop
inc
pusha
mov
and
nop
fldl
idiv
incl
movsl
jo
or
filds
fbld
ljmp
fists
stos
out
stos
jmp
hlt
dec
dec
iret
andb
adc
and
les
clc
movsb
mov
imul
jb
jg
mov
add
gs
or
mov
or
leave
cmpsb
and
sub
or
aaa
and
mov
dec
lods
pusha
and
inc
int3
jg
cmp
xchg
data16
dec
mov
inc
outsl
outsl
adc
insl
adc
adc
aas
adc
sar
aaa
xor
adcb
sub
inc
stos
adc
rcll
andb
ret
stos
stos
lcall
ret
add
pop
pop
insl
mov
movsb
xor
adc
add
and
insl
xor
in
aam
sti
into
inc
mov
test
out
add
add
fxch
mov
add
mov
adc
sbb
xor
lock
movsl
das
mov
lock
sbbb
ret
pop
mov
xchg
xor
adc
cld
fidivs
inc
xor
repnz
cli
mov
adc
ja
xchg
or
fidivl
pmaddwd
ja
adc
push
fsin
cmp
int3
nop
mov
addr16
sbb
popa
jecxz
out
sub
ds
shlb
in
icebp
push
add
shlb
pop
lods
push
mov
test
pop
xor
jp
xor
cs
adcb
sub
sub
js
mov
and
aam
cwtl
cltd
mov
push
adc
pusha
in
adc
movsl
and
add
push
cmp
mov
add
and
add
aas
call
or
dec
test
sub
jbe
xor
add
sbb
and
subb
cld
dec
fsubl
loop
insb
sub
sbb
sbb
inc
push
cmp
sbb
fsubrs
add
sbb
ret
xchg
cmp
add
add
cs
or
xchg
add
fsubs
or
fimuls
cmp
mov
sbb
adc
jp
push
inc
xor
stos
testl
pop
arpl
filds
or
int3
push
imul
movsl
icebp
mov
js
hlt
sbb
sbb
sbb
cld
and
xor
pop
add
addr16
adc
test
andl
or
mov
jg
sbb
sbb
sbb
fs
cmp
push
cmpsb
push
andb
fs
and
push
mov
sub
sbbb
pop
xchg
das
clc
or
sbbl
outsl
ja
and
fisttpl
and
push
and
sub
mov
mov
lret
lret
cld
lcall
test
mov
movsl
rolb
addl
push
loop
adc
add
and
inc
add
data16
sbb
fwait
add
add
push
add
add
idivb
rorb
xchg
mov
mov
mov
dec
sbb
jno
imul
jg
movsl
push
lahf
movsl
outsl
add
mov
adcb
movsl
sbb
xchg
cmp
lcall
push
inc
sbbl
adc
adcb
mov
shll
mov
push
sbb
sbb
push
sub
sbb
leave
cmpsb
test
lcall
pusha
add
std
imul
add
mov
loopne
add
sub
push
and
mov
push
pop
rol
stos
loope
out
inc
les
dec
inc
out
js
outsl
add
ljmp
mov
pop
jns
or
pusha
push
and
cmp
lret
adc
inc
mov
jb
inc
dec
shlb
add
and
insl
rcrb
dec
xchg
pop
addl
ljmp
incl
shlb
rorb
or
sbb
movsl
jmp
inc
pop
sub
ss
rcrb
mov
inc
and
loop
inc
fisubrl
hlt
sbb
add
ret
filds
mov
loop
lods
imul
mov
insb
das
cs
pop
cmp
push
cmp
nop
repnz
lea
bound
lods
jmp
jno
jbe
mov
stos
sub
ljmp
or
lcall
loopne
mov
xchg
stos
imul
or
and
mov
sbb
and
cli
add
aam
loopne
inc
cmp
and
leave
ljmp
fadds
lcall
shrb
arpl
pushl
mov
or
pop
xor
fisubrl
bound
rorb
add
mov
test
and
scas
pop
loopne
ret
push
mov
push
into
add
arpl
adc
or
es
pop
test
les
cmp
add
jp
popa
cmp
test
pop
in
leave
and
jmp
push
lods
push
and
and
pop
movsl
out
cmp
in
rol
jne
adc
leave
mov
inc
inc
jmp
cwtl
out
mov
pop
mov
insb
mov
test
mov
pop
lock
or
jbe
push
lods
shlb
ret
and
imul
pusha
aas
shl
aas
push
add
jb
add
sub
sub
shl
addr16
outsl
incl
test
leave
cmp
cs
outsb
pop
mov
std
inc
sub
push
repnz
std
pushw
sub
push
and
cmpl
incl
movsb
jne
add
dec
inc
pop
adc
inc
pop
pop
dec
dec
add
ds
or
adc
ja
incl
or
add
add
movsb
lret
rclb
push
mov
mov
jne
mov
adc
mov
pop
xor
pop
adc
loopne
cli
add
stos
ss
cli
xor
pop
pop
dec
inc
aam
push
pushl
loope
cmp
ss
call
add
push
adc
add
loop
add
sub
pushl
and
data16
add
stos
arpl
adc
cmp
add
lret
or
fimull
call
or
sbb
push
inc
stos
clc
fwait
iret
xchg
xchg
push
ret
push
loop
les
add
pop
fs
lcall
xchg
add
jnp
adc
lds
stc
lret
xchg
xor
cmc
xchg
pop
pop
xor
daa
pop
mov
or
scas
clc
fistps
add
add
mov
out
insl
xorl
dec
mov
adc
or
in
leave
inc
rolb
xchg
xor
cmp
pusha
push
insl
das
hlt
mov
add
pusha
push
mov
jbe
mov
sub
fdivrl
sub
addb
add
jo
mov
xchg
mov
pop
adc
ret
sub
out
nop
cmp
loop
add
leave
xchg
mov
pop
cmpsb
mov
pop
addb
mov
or
roll
sub
jns
lret
bound
out
leave
mov
push
dec
adc
jb
clc
das
xchg
nop
aaa
and
xor
jl
adc
outsb
fistl
add
add
sbb
insb
movsb
or
pop
pop
test
xor
sub
ss
lods
push
mov
cs
pushf
movsb
out
lods
jmp
sub
stos
sub
pop
push
xor
jmp
cmpsb
sub
pop
inc
dec
sub
pop
hlt
add
adc
add
fwait
loope
pop
daa
and
das
add
fdivr
aad
fbstp
leave
mov
sub
and
ja
xchg
jp
js
and
lock
cli
jmp
jo
xor
inc
adc
jno
incl
jmp
mov
das
jo
fists
hlt
ljmp
daa
shlb
cmp
pusha
jo
cmp
push
testl
jnp
mov
mov
movsl
je
sub
dec
adc
cmpsl
lock
fimull
or
sbb
test
mov
clc
imul
ss
jbe
or
pop
push
xor
dec
and
push
fwait
mov
movsl
fdivr
mov
jb
and
or
in
nop
add
loopne
shr
push
sbb
les
jmp
add
test
and
es
test
fdivrs
cwtl
jo
lret
leave
clc
nop
add
adc
or
hlt
push
pop
test
cmp
jg
stos
jmp
jo
or
movb
and
enter
stos
adc
mov
push
mov
fcoml
rol
inc
add
jns
sub
lods
ljmp
addr16
insl
mov
mov
pop
pop
stos
dec
mov
mov
leave
adc
mov
xchg
mov
adc
mov
and
inc
cwtl
cmp
push
leave
mov
call
mov
in
xor
in
and
cwtl
cmp
add
add
mov
daa
or
pop
and
and
add
sub
lock
and
mov
les
jo
and
add
outsl
add
add
enter
jns
out
sahf
lret
mov
or
adc
jecxz
aad
lock
out
test
adc
leave
fcomp
in
mov
les
or
rcr
flds
sbb
fbld
adcl
stos
xor
clc
xor
insb
add
aaa
lock
add
out
mov
ljmp
adc
cmpsl
stos
scas
movsb
mov
test
fildll
sub
aaa
and
sub
mov
aaa
adc
cmp
dec
sub
push
loopne
adc
add
es
movsb
mov
pushf
xchg
shlb
add
adc
decl
lods
shrb
fimuls
addr16
mov
jb
add
and
push
subl
sub
or
sbb
sbb
sbb
add
pop
xor
and
jle
lock
add
fsubrs
stos
add
enter
loopne
cmpsb
in
add
stc
or
pop
add
cmp
sti
enter
inc
mov
inc
jo
push
les
jae
xchg
sbb
fimuls
add
leave
ror
sbb
jmp
sbb
push
mov
or
movb
shll
pusha
into
mov
outsb
adc
test
mov
push
xchg
mov
addl
adc
push
pusha
leave
and
dec
inc
ljmp
add
fstps
les
inc
movb
and
or
cli
es
hlt
xor
or
add
jl
fwait
adc
into
inc
lock
add
add
adc
pop
clc
ret
add
push
xor
fdivrs
add
lods
lods
sarb
push
fdivs
cld
lret
cmp
call
rcl
pop
mov
xor
dec
or
leave
movsl
cmpb
push
std
mov
sbb
jae
fbld
xor
mov
sbb
stos
adc
sbb
cmp
inc
mov
add
call
or
xchg
and
ja
fwait
adcl
cmpb
xor
nop
fsubrs
mov
push
sbb
test
add
jmp
call
jae
pop
add
push
cld
addl
in
int3
fdivr
test
inc
inc
and
pop
dec
stos
and
mov
lods
movsl
inc
cmp
call
addb
sarb
leave
push
filds
or
push
push
filds
lods
and
pextrw
or
sub
mov
mov
inc
cmp
enter
shlb
cld
incb
mov
inc
js
add
mov
lds
in
cli
lods
repz
pusha
sub
sbb
inc
mov
sbb
add
inc
sbb
inc
push
dec
dec
add
push
mov
dec
int3
add
or
xor
sbbl
jge
sahf
fiaddl
pop
outsb
orl
or
add
xorb
mov
sbb
aas
cwtl
pop
mov
sbb
lods
and
inc
xor
loope
mov
inc
inc
scas
push
add
daa
xchg
stos
cmpb
jno
test
dec
outsl
inc
add
cmpsb
inc
add
or
jnp
std
pop
add
push
push
repnz
fcmovb
lds
ds
sub
pushl
inc
xor
add
leave
ffree
sbb
or
adc
add
call
and
cwtl
mov
jg
push
stc
mov
leave
icebp
and
and
or
push
or
decl
push
and
and
pop
inc
dec
add
jmp
adc
ja
adc
and
lods
adc
and
sbb
inc
insl
push
imul
inc
ljmp
clc
orl
clc
inc
add
cs
pop
add
leave
rolb
or
add
in
add
leave
stc
mov
or
aaa
push
jo
pmulhw
mov
add
add
sbb
je
and
jg
adc
xchg
es
addb
and
clc
mov
mov
add
js
orb
push
test
push
add
orl
mov
jmp
lds
cltd
leave
jne
or
insb
rol
mov
dec
push
movsb
rcr
icebp
jecxz
pop
push
fincstp
inc
push
fidivs
stos
pop
pop
imul
addl
mov
movsb
sbb
mov
cmp
leave
inc
inc
add
push
cmp
push
out
add
jb
push
arpl
cmp
inc
aaa
cld
inc
mov
sti
scas
mov
mov
neg
lret
cmp
jmp
iret
mov
std
sub
inc
add
pushf
sar
fisubs
pop
add
mov
dec
mov
pusha
sbb
lcall
inc
movsb
testl
dec
cli
mov
xor
dec
cmp
jecxz
add
sbb
incb
mov
sbbl
push
mov
leave
mov
daa
or
andl
incb
add
push
push
mov
fdivr
adc
inc
pusha
rsqrtps
or
push
lret
imul
adc
push
push
popa
mov
sbb
pop
lock
in
add
xchg
dec
xor
jg
ss
xor
andl
sbb
pushf
and
pop
adc
pop
add
shrl
js
jle
add
incb
and
mov
dec
mov
lods
pop
test
mov
push
adc
imul
sbb
push
adc
out
dec
pusha
stos
add
mov
aaa
int
sub
xlat
dec
jo
mov
fdiv
add
jo
adcb
pop
or
jbe
fwait
and
aam
cs
or
bound
jbe
mov
loope
and
add
test
cs
fwait
push
pop
xor
xor
jl,pn
push
int3
hlt
push
lret
sub
pop
pop
shlb
sbb
pusha
adc
lods
insb
push
push
repz
mov
mov
xor
sbb
das
xor
test
adc
xor
popa
add
test
sbb
sbb
std
int
js
stos
push
jo
mov
or
add
cmpsb
mov
iret
mov
dec
inc
jge
and
lcall
pushf
sub
imul
movsb
inc
xor
addb
adc
sub
mov
or
or
mov
add
punpckhwd
add
adc
push
push
fildl
adc
ret
xchg
incb
sbb
sbb
add
adc
fists
mov
repz
adc
andl
adc
cmc
xor
loopne
vpunpckhwd
lock
push
inc
int
std
cmpsb
pusha
pop
push
cmpsl
popa
into
add
sti
fildl
fdivp
add
xor
movsl
pusha
push
cmc
add
or
add
cmpsl
nop
stos
mov
mov
mov
adc
push
lcall
lock
adc
sub
inc
add
jne
adc
mov
sbb
aas
jne
mov
insl
shrb
push
das
and
test
mov
mov
cmc
adc
and
nop
fsubrl
xchg
test
push
sar
pop
les
in
stos
sbb
jecxz
jp
ret
daa
dec
ffree
mov
fwait
sbb
push
mov
enter
cmp
sbb
das
add
xchg
rolb
cmp
dec
shrl
aaa
jmp
leave
xchg
cmp
xor
test
sbb
test
mov
sbb
nop
cmp
das
add
add
mov
and
cwtl
or
rcrb
pop
or
add
gs
jo
inc
inc
movsl
in
xor
add
jo
ljmp
adcb
and
xor
pop
orb
in
add
lock
enter
loope
and
add
jg
jp
and
andb
aad
leave
and
cmp
rolb
adc
aad
push
rorl
out
and
stos
insl
xor
push
lock
gs
mov
orb
add
fcmovnu
and
movsl
push
adc
data16
push
sub
rclb
mov
cmp
add
roll
inc
dec
push
jecxz
daa
rcl
lods
std
add
add
or
or
push
dec
or
mov
xchg
popa
rcrl
out
push
push
add
nop
add
subb
mov
and
ret
jl
mov
loope
popf
pop
loopne
jp
inc
addb
sbb
xchg
cwtl
aam
push
cmp
cmp
scas
test
out
scas
lret
xor
or
loope
sub
movsb
enter
mov
and
test
stc
push
and
cld
xchg
push
inc
mov
int
imul
add
decl
jecxz
out
imul
push
mov
movsl
push
sbb
pop
call
or
cwtl
sub
mov
popf
add
sbb
orb
push
cld
in
sbb
sub
and
mov
movsl
insl
mov
loopne
dec
sub
lret
fldcw
and
pop
jo
or
add
inc
add
bound
enter
jmp
sbb
leave
inc
icebp
stos
push
sbb
shlb
cmp
add
dec
cld
incl
dec
and
flds
fiaddl
pop
movsb
pop
jne
add
sub
call
xlat
incl
and
or
out
mov
adc
xor
and
dec
add
inc
mov
mov
and
lods
and
mov
mov
movb
pop
popf
adc
scas
inc
shll
lods
cld
and
sbb
pop
rclb
enter
mov
mov
test
test
outsb
jo
icebp
fsubs
push
or
or
xchg
add
add
outsl
clc
add
pop
hlt
mov
or
pop
rolb
stos
call
mov
mov
pop
pop
lock
gs
int3
stos
xchg
push
rorl
fistl
or
dec
mov
roll
inc
and
icebp
das
adc
shl
xor
adc
and
stos
bound
stos
jne
cmpb
sub
or
cmpsl
mov
or
out
imul
rorl
mov
fstps
insl
adc
fs
das
sub
rclb
xchg
dec
loope
lods
ret
ss
push
insl
add
adc
sub
jo
adc
or
fcoms
ljmp
adc
sbb
popf
xchg
sbb
inc
push
xor
push
push
add
sbb
push
inc
scas
test
imull
das
sub
and
adc
or
lret
cmp
xchg
and
xor
jp
movsb
cmp
push
adc
add
xlat
fcompl
ljmp
test
addb
xchg
int3
leave
mov
jno
outsl
sbb
movsl
ret
sbbb
cmp
sbb
decl
add
xchg
push
dec
lret
push
and
add
cmpb
push
insl
rol
fdivl
xchg
or
add
lcall
push
or
out
push
mov
clc
pop
push
mov
popa
sub
xor
jne
push
xor
inc
subl
or
sub
mov
add
fildll
push
nop
xorl
loopne
incb
sub
mov
rclb
sub
sbb
push
dec
pop
or
or
push
inc
adc
pop
add
loope
enter
push
sahf
mov
mov
mov
in
push
cli
sbb
fs
push
cmp
out
mov
pop
inc
ret
sub
rorb
add
call
mov
lret
cmp
insb
insb
or
or
lret
and
cs
pop
loopne
mov
sub
add
cmp
test
and
movsl
and
ja
mov
loop
stos
jmp
mov
mov
mov
mov
test
sbb
subb
adcb
ficompl
cmp
sbb
loopne
roll
sbb
pop
cltd
es
sbb
aaa
sub
scas
cmc
add
xor
movsl
out
loopne
mov
jl
mov
and
icebp
scas
mov
lock
jp
jbe
add
xor
push
imul
adc
pop
outsb
les
pop
add
pop
add
cld
pop
jg
movsl
add
movsl
insb
addl
add
and
or
xchg
xchg
fcoml
mov
xorb
js
mov
or
push
aas
jo
mov
add
jg
fwait
pop
sub
sbbb
inc
pushf
adc
or
dec
lret
add
add
xchg
clc
inc
sbb
push
ja
cld
or
lods
orb
mov
add
and
or
aam
stos
cli
adcb
call
pop
mov
push
popa
jp
jmp
mov
addb
dec
pop
jl
xchg
sub
test
outsl
cli
leave
stos
inc
orb
mov
stos
push
cmp
mov
test
fisubs
dec
inc
xchg
dec
xchg
cli
push
jnp
movsl
rcrl
loopne
sbb
addl
orl
push
jbe
pop
mov
js
adc
rorb
and
dec
mov
push
adc
andb
les
and
add
in
mov
jne
jno
test
xor
mov
sbb
mov
rcr
js
adc
push
mov
jbe
outsb
push
outsb
sar
sbb
js
push
js
sar
addb
mov
add
lods
push
aam
xchg
stos
sub
es
movsl
sub
add
dec
push
ret
call
cmc
mov
test
add
shlb
clc
outsl
js
sbb
pop
les
or
mov
incl
loop
mov
inc
add
enter
sbb
xor
mov
and
mov
bound
outsl
bound
and
add
rorb
add
clc
adc
xchg
mov
hlt
shrb
nop
or
loop
subb
nop
and
inc
ljmp
clc
incl
sub
and
jne
movsl
xor
push
jl
pop
inc
stos
test
fcomps
stos
pusha
cs
fbld
pop
xor
ret
pop
cmpsb
rclb
dec
sub
jp
dec
cli
dec
filds
push
movsl
or
sub
jbe
insb
jnp
js
fwait
cmc
ror
cmp
jo
ja
xor
das
clc
lcall
xor
jbe
loopne
cwtl
filds
enter
sub
inc
es
stos
filds
inc
mov
mov
pop
nop
cwtl
add
inc
rorl
cld
orl
push
sub
cs
imulb
adc
cwtl
xor
and
pop
or
add
sbb
and
cmpsb
add
add
sub
push
mov
inc
xchg
push
sbb
add
inc
enter
pusha
adc
hlt
loopne
push
int3
cli
add
lds
push
mov
loop
push
adc
dec
and
repz
and
sbb
jp
push
adc
adc
sub
popa
add
and
sbb
in
and
push
movl
or
ljmp
add
add
rcr
hlt
cmp
add
loope
cld
pusha
or
sub
cli
std
decl
loop
dec
icebp
lds
fwait
cmove
pop
adc
test
add
mov
mov
jg
cmp
mov
or
add
fisttpl
jbe
inc
and
scas
test
push
lahf
mov
adc
ja
inc
addr16
fldt
sbb
sub
mov
lcall
add
or
lea
mov
mov
add
decl
lods
mov
idivb
shlb
mov
test
xchg
or
lcall
sbb
mov
test
sub
inc
add
or
mov
leave
sahf
mov
cmp
inc
decl
es
pop
adc
push
adc
mov
sub
leave
xchg
inc
sub
fisubrs
or
idiv
adc
shrl
lods
je
into
test
in
fildll
out
fwait
or
add
or
dec
fsubrs
jg
rcrb
sbb
jge
push
push
sbb
xor
pop
mov
fstpt
inc
pop
inc
pop
iret
sbb
mov
pusha
adc
add
xchg
popa
adc
xorb
inc
adc
mov
push
xor
push
scas
dec
sub
call
scas
mov
ljmp
push
pushf
cld
enter
das
div
dec
add
jmp
xchg
jl
or
into
sbb
push
pop
push
dec
push
adc
and
and
add
jmp
jb
dec
testb
cld
and
jmp
xor
mov
xor
test
ljmp
loope
out
gs
call
clc
ljmp
lods
inc
popf
shll
add
int3
adc
xor
pop
mov
rolb
adc
je
or
add
stos
jecxz
out
and
jle
stos
call
sub
sti
push
xlat
pushl
dec
xor
inc
subb
fstpl
mov
pop
nop
in
inc
mov
mov
rolb
ljmp
clc
cmp
mov
add
jo
jl
fsubrp
or
sbb
or
add
movsb
cmp
sbb
cmp
mov
push
ja
or
leave
add
int
icebp
decl
or
push
loopne
dec
push
push
jmp
fcomip
ficoml
cmp
mov
push
add
inc
popa
push
xor
pushf
rolb
decl
adc
adc
xor
add
ss
stos
cmp
cld
incl
cmp
or
sbb
jp
sub
inc
hlt
pushl
mov
mov
xor
pusha
ret
loope
jg
xor
es
xor
mov
in
cwtl
add
pusha
xor
inc
ljmp
sbb
das
movsb
and
mov
inc
inc
add
jl
xor
jecxz
jbe
dec
inc
fdivs
ss
jno
cmpsb
mov
outsl
lods
filds
lock
mov
outsl
sarb
daa
jae
pop
adc
push
dec
push
lods
push
lcall
jg
sbb
xchg
fadds
add
gs
add
push
add
inc
and
sarl
cmp
adc
push
push
daa
adc
jno
cmp
or
inc
lahf
or
inc
push
add
lock
les
scas
fwait
mov
inc
dec
add
cmp
xor
xlat
and
push
sbb
das
movsl
ret
sbb
fcoms
in
cmp
and
cwtl
lcall
fists
adc
orb
push
lcall
jle
mov
pusha
inc
rcll
push
nop
xchg
pandn
enter
dec
outsl
cli
icebp
arpl
lods
mov
shrl
outsb
stos
jecxz
adc
and
outsl
clc
mov
bound
pop
sbb
push
xlat
fcmovnu
xchg
les
repnz
add
add
test
ret
add
pop
adc
push
jg
jg
sbb
add
or
push
add
mov
inc
fcomip
das
rcrb
shlb
push
movsb
int
je
add
insb
std
out
clc
orb
aaa
sbb
ja
add
enter
mov
cld
mov
adc
sub
or
pop
stos
xor
jno
xchg
cmp
and
loopne
enter
and
in
scas
jmp
roll
xchg
sarl
negb
pop
icebp
mov
aam
cwtl
cld
popa
lods
sbb
shlb
fists
dec
and
mov
nop
mov
mov
adcl
sub
jns
int3
and
enter
ljmp
add
mov
pop
or
mov
cwtl
call
add
loope
mov
adc
adcb
popa
sub
cmpl
mov
mov
add
clc
enter
or
add
movsb
add
xor
lahf
push
ljmp
or
add
inc
lea
je
mov
cld
sbb
dec
dec
orb
or
xchg
andl
hlt
incl
adc
sub
cmp
mov
inc
sbb
or
das
add
test
adc
fsubrl
jecxz
outsl
cs
xor
shlb
push
add
jno
push
add
jo
and
lock
outsb
and
jge
add
call
lock
and
stos
inc
add
xor
mov
rolb
sub
mov
and
fisttps
lret
je
sub
push
or
pusha
callw
mov
mov
lods
out
mov
or
dec
or
adc
add
add
mov
xor
sub
xchg
xchg
xchg
nop
std
cmpsb
ljmp
xchg
add
je
ret
inc
jae
shll
daa
and
mov
jo
mov
mov
leave
adc
nop
popa
insb
inc
fsubs
fwait
mov
xor
mov
push
sub
bound
rcrb
lret
shrb
add
rol
cmp
push
add
xor
jp
inc
das
adc
inc
add
mov
add
lcall
pop
test
cli
lea
ficompl
repz
mov
outsl
and
adc
in
ja
or
and
roll
add
mov
test
insb
cli
pop
xchg
clc
xlat
movsb
inc
push
xchg
and
adc
imulb
add
and
add
pop
inc
add
fiaddl
sub
enter
test
jl
push
sub
add
insb
movsb
fdivrs
lock
ret
and
or
rolb
ja
mov
fadd
scas
sbb
adc
sbb
push
mov
add
add
pop
add
pop
loopne
add
dec
sub
stos
cli
stos
fiaddl
in
add
mov
out
inc
mov
pop
lock
xor
sbb
or
or
add
mov
lock
nop
inc
sbb
pusha
cwtl
rolb
sahf
xchg
fidivl
add
mov
xor
clc
mov
fmull
fisubl
data16
testb
adc
push
lcall
adc
dec
lock
rcl
aam
into
int3
push
and
test
adc
call
loopne
sbb
in
cmp
and
dec
movsl
icebp
xor
fdivp
sbb
add
mov
subb
lock
jbe
aaa
nop
pop
dec
adc
pop
fs
pop
jo
push
dec
push
cwtl
add
xor
mov
mov
add
pop
push
fwait
ss
les
cmp
push
add
fistpll
mov
test
or
enter
push
ds
xor
push
mull
xor
pop
xlat
add
jbe
or
mov
add
add
das
rolb
test
and
or
lock
sbb
add
lret
data16
adc
and
jnp
adc
or
std
pop
insb
aam
adc
push
cs
pop
add
or
les
push
lock
xor
mov
cwtl
decl
push
adc
add
adc
clc
incl
xor
cmpl
and
stos
jl
sub
mov
cli
push
outsb
enter
and
xor
popa
lds
inc
push
xchg
xor
repnz
sbb
lock
or
or
ja
add
loope
aas
call
daa
or
addr16
das
rcrb
data16
mov
xlat
adc
mov
in
and
add
mov
xor
outsl
les
mov
sbb
jbe
cs
push
add
cli
jge
fst
lds
push
cmp
xchg
aam
mov
and
sbb
adc
lret
sub
pop
fbstp
pop
jbe
in
xor
adc
dec
pop
out
mov
xchg
enter
test
add
test
sbb
pop
call
dec
xor
outsb
cld
xor
es
sub
insb
inc
sub
sub
add
pop
jne
sub
mov
add
or
add
fcmovbe
dec
add
xchg
mov
add
jle
stos
and
adc
and
pop
add
pusha
push
call
adc
jbe
fisubl
sbbb
fbstp
cmpb
push
dec
enter
add
mov
int
add
sbb
das
xor
push
push
add
bound
fisubrl
or
add
aam
in
sbb
xchg
xor
or
push
pusha
test
jb
adc
shrb
adc
mov
add
andl
and
andl
nop
cmp
shlb
mov
insb
movl
inc
pop
sarb
aas
nop
mov
jle
lds
mov
xorb
andl
ljmp
sahf
add
and
insb
fimull
je
adcb
xchg
pop
lods
enter
lods
xchg
cmpb
xor
fcomi
filds
sbb
jo
fidivrl
dec
dec
pusha
fbstp
dec
lods
imul
hlt
enter
cli
fs
adc
rolb
sub
cmp
push
sub
or
mov
inc
xchg
ds
pop
ss
adc
in
add
into
hlt
inc
pop
test
imul
shr
orl
and
and
cmp
cmp
add
pop
scas
inc
adc
ja
data16
insb
nop
ja
fsubr
nop
and
jle
jecxz
pop
jle
or
mov
rolb
and
rorl
push
scas
jl
jle
push
cld
pop
xor
imull
inc
lret
gs
adc
add
push
je
xor
sbb
push
xchg
mov
addl
inc
inc
clc
adc
cmp
xor
addb
jne,pt
outsb
jg
fcomp
mov
stos
sub
cli
and
aam
dec
lock
hlt
cmp
or
or
add
sbb
bound
decl
adc
mov
jae
push
ljmp
jb
sub
scas
push
add
dec
data16
lods
andb
mov
dec
loopne
bound
jo
add
int
fbld
ss
arpl
pop
push
pusha
sub
xor
or
aam
pop
lret
and
jmp
dec
data16
or
cli
in
sbb
and
and
mov
addr16
outsl
sub
xor
loope
das
jo
incl
sti
test
add
jl
sub
push
inc
cmp
mov
enter
pop
mov
cld
movsb
nop
loopne
enter
xchg
inc
inc
fdivl
inc
ja
and
or
das
adc
xor
outsb
dec
fmul
cli
xchg
test
and
lock
xchg
sbb
cld
loopne
mov
cli
mov
fcoms
stos
inc
push
js
dec
or
mov
inc
dec
scas
xlat
pusha
add
pop
mov
loopne
and
les
dec
adc
movsb
testb
je
or
xor
imul
outsl
push
sbb
jecxz
addb
xchg
loop
rclb
ja
cmp
rorb
insb
test
stos
and
xor
mov
sar
xchg
rolb
and
stos
push
sti
aaa
mov
lods
lods
lret
and
and
mov
jae
xor
jo
cmp
push
and
mov
adc
shlb
or
neg
push
cli
xor
pop
pop
and
add
ss
call
mov
xchg
xor
pusha
ds
cli
aas
aad
xchg
xor
mov
ret
or
addl
adc
sbb
out
mov
orl
loopne
mov
dec
sbb
inc
test
sub
add
imul
sub
dec
jecxz
add
sub
ljmp
je
shrb
sbb
aaa
inc
rolb
jbe
dec
xchg
adc
insb
popa
and
pop
inc
add
add
and
adc
add
addl
xchg
movsl
adc
rcl
aad
out
roll
mov
test
dec
jg
inc
and
xor
ret
inc
mov
lret
pop
pusha
gs
cld
das
xor
xchg
sub
orb
into
andb
aaa
cld
in
mov
ds
lea
xchg
and
lahf
mov
pop
and
orl
lock
loopne
xorl
add
subb
nop
mov
frstor
jecxz
stos
inc
enter
enter
push
inc
inc
pusha
jno
mov
mov
flds
xchg
inc
xchg
sbb
rclb
dec
test
add
or
mov
mov
mov
pusha
cld
lahf
shr
sub
int
scas
shrb
push
adc
or
js
hlt
jg
scas
cmp
out
aam
sbb
pop
sbb
adc
sarb
cmc
incl
sbb
dec
adc
ds
ss
jbe
cmp
subps
mov
pop
dec
shlb
push
push
pusha
and
lock
xchg
loop
adc
push
rolb
mov
and
cmp
and
or
push
lock
sub
sub
fwait
push
js
out
jge
add
lds
fdivl
nop
andb
jle
adc
in
adc
jbe
add
lods
ret
pop
inc
push
cltd
shlb
ljmp
fistl
or
lret
daa
sbb
xor
adc
stos
adc
mov
jns
cli
fcmovne
adcb
dec
or
je
adc
call
mov
idivl
push
dec
fcmovnu
mov
in
movsb
cmpsb
sbb
shrb
dec
into
mov
add
pushf
cwtl
mov
jnp
add
and
jg
pop
outsl
jge
pop
push
xchg
mov
notb
lcall
cmpsb
jl
add
cmp
adc
popf
jb
cli
push
call
sub
ss
out
and
push
cli
lcall
fistl
push
fwait
lods
add
push
jmp
push
mov
jg
xchg
loope
sti
loopne
add
test
mov
or
incl
imul
mov
xor
and
movb
popa
cwtl
fucomi
or
iret
andb
add
pop
mov
xlat
fldt
mov
incb
mov
lods
aad
cmp
call
test
in
sbb
and
adc
pop
lret
insb
pop
nop
popf
in
mov
adc
aam
call
add
jae
pusha
sbb
sub
cli
sub
dec
loopne
pop
mov
jp
aam
and
xor
es
sbb
sbb
add
imul
sub
mov
add
jo
adc
popa
dec
cwtl
mov
mov
sbb
mov
dec
sub
jnp,pt
popf
je
popa
jns
jno
xor
pop
in
add
sbb
push
sbb
cmp
and
sub
mov
enter
mov
fcmovnu
je
clc
pop
and
and
cmp
add
inc
sub
js
fs
cmpsb
add
or
pusha
addb
mov
stos
jecxz
xor
dec
adc
dec
mov
cs
stos
xchg
pusha
popa
shlb
outsl
push
std
sub
add
popa
add
dec
mov
add
js
mov
cmpsl
xchg
mov
or
or
enter
add
push
inc
or
xchg
cs
xor
sub
pop
inc
mov
and
enter
push
xchg
mov
es
bt
xor
pop
sub
pusha
xor
clc
push
sub
and
mov
xor
or
negb
sub
stc
insb
fcoms
nop
push
jo
inc
jo
enter
jns
sbb
movsb
sbb
xchg
test
or
add
das
mov
loopne
xorb
insb
loopne
stos
clc
pop
rorb
fcoml
jb
pop
or
imul
mov
pop
rorb
fwait
repnz
push
daa
adc
push
lds
add
in
test
sub
std
sub
test
ja
cld
movsl
adc
fildll
push
or
and
fdivl
jp
test
mov
sbb
add
sbb
cmpsl
or
and
cmp
es
mov
nop
xchg
cmpsl
xchg
jo
std
lcall
inc
cmpsb
mov
jo
repz
loope
lods
adc
out
add
popa
add
lods
add
cmc
mov
sbb
in
pop
mov
fwait
and
dec
stos
jecxz
mov
push
pushl
lret
or
jb
repz
or
add
popl
mov
call
sti
inc
or
sub
clc
daa
and
cmpb
sbb
cmpsl
rclb
insb
add
rol
clc
pop
test
dec
sbb
push
dec
push
sub
call
adc
push
and
adc
inc
inc
adc
rorl
js
dec
aam
cwtl
test
and
add
sub
and
clc
sbb
enter
and
lahf
add
fwait
and
das
data16
add
sub
add
and
popa
cld
jmp
jnp
and
and
pop
jle
dec
sub
test
or
data16
sarb
and
dec
sub
je
add
repnz
mov
cmp
sub
xor
subb
add
addb
outsl
jg
push
cli
push
adc
ljmp
cmp
and
mov
push
xor
add
push
xor
in
sbb
sbb
push
stos
out
fcomip
xor
add
leave
pop
or
xor
fists
dec
or
movsl
adc
subb
cld
add
lods
and
mov
icebp
push
sbb
push
ret
in
jl
dec
xor
sbb
cmp
adc
in
cmc
mov
and
push
push
das
lods
test
push
push
sbb
mov
and
add
imul
xchg
mov
in
mov
sbb
push
add
xorl
push
insl
sti
mov
lods
stos
sub
sub
nop
xor
sti
push
mov
fsubrl
jb
push
sub
adc
aaa
and
inc
sbb
dec
add
add
and
adc
and
xor
data16
fidivrl
loopne
mov
incl
inc
pop
sti
xor
popa
or
repnz
shrb
add
andb
mov
push
add
inc
adcl
sbb
cmc
out
and
xor
mov
mov
add
xchg
push
dec
adc
sub
dec
adc
mov
inc
xchg
icebp
sub
inc
stos
jecxz
enter
ljmp
les
add
arpl
sub
cli
add
fiaddl
sbb
cli
fistpl
pop
and
or
insb
sub
add
jmp
and
cmc
add
loop
xor
sbb
std
and
out
mov
sbb
pop
out
mov
mov
push
sub
add
add
sub
cld
hlt
mov
ljmp
adc
add
xchg
inc
mov
push
outsb
inc
inc
and
add
sub
ret
mov
push
movsb
cmp
jecxz
push
xor
cmpl
test
add
add
sbb
sbb
pop
mov
lcall
das
pop
lods
scas
xor
les
in
xchg
insb
dec
pop
add
mov
outsl
inc
dec
pop
movsl
xor
adc
data16
aaa
push
aas
adc
xor
add
movsb
fiadds
xchg
pop
sub
mov
lret
jle
fbld
lods
icebp
shlb
scas
call
subl
or
fwait
sub
and
mov
js
insl
andb
push
das
pushf
pop
push
adc
aaa
mov
sbb
xor
je
pop
mov
les
idivb
sub
scas
add
leave
cmpsb
or
mov
or
lcall
insl
shll
push
push
daa
cs
leave
shrl
std
imul
dec
xor
leave
push
adc
test
cmp
cmp
movsb
adc
in
fldl
push
call
add
hlt
pop
lock
push
aaa
stos
je
xchg
mov
mov
test
outsb
add
sbb
add
pop
lock
lock
mov
mov
xor
shlb
ret
lcall
leave
cld
add
fstpt
cli
inc
push
and
add
inc
js
rclb
xor
mov
int
iret
sub
add
push
scas
enter
push
inc
rcll
add
push
sub
mov
leave
call
faddl
or
leave
lcall
testb
leave
mov
sbb
dec
inc
neg
outsb
in
push
stos
and
push
rcll
ret
pop
inc
or
pop
hlt
aaa
std
ljmp
inc
aas
mov
es
or
inc
stos
add
cmpb
jmp
jbe
into
dec
andb
shlb
inc
or
push
mov
sub
and
jae
orl
lret
or
sbb
dec
jg
mov
or
es
sbb
sbb
cmp
push
and
inc
dec
leave
mov
inc
sub
int3
cld
mov
add
subl
addb
push
mov
pop
lret
inc
mov
inc
add
shrl
inc
inc
inc
or
sbb
pop
sub
das
scas
stos
mov
sbb
jbe
bndldx
inc
add
push
inc
add
inc
add
add
adc
sub
adc
lds
inc
xchg
outsl
sub
adc
cs
or
nop
in
imul
mov
shrl
xor
xor
test
cld
add
sub
lods
push
or
cmp
out
fbld
mov
jb
add
or
cmp
xchg
loopne
addl
movsl
push
xchg
mov
push
rolb
pop
movsb
push
cmp
add
clc
add
in
jecxz
cwtl
enter
push
aaa
jo
inc
add
inc
bound
mov
xchg
push
ss
xor
jbe
std
sbb
pop
cmp
push
cmp
adc
xchg
jbe
ljmp
jo
xor
nop
leave
and
test
add
incb
mov
pusha
or
push
add
adc
sub
and
aam
mov
jae
cmp
adc
mov
call
sub
ret
sbbb
mov
add
push
les
stos
call
pop
sub
or
push
inc
pop
lods
ret
adc
leave
jae
mov
mov
mov
and
fdiv
sbb
rorl
mov
and
cmpsb
incb
add
xchg
popa
add
xor
je
xor
pop
lret
sub
sbb
add
cmc
mov
lcall
or
push
dec
loope
popa
add
push
xchg
dec
and
sbb
in
fbstp
mov
and
push
cmp
mov
mov
add
scas
mov
leave
sbb
sub
loope
gs
add
rolb
jl
sbb
cmpsb
mov
movb
cmpsb
push
mov
loopne
xor
jmp
inc
loope
push
ljmp
sbb
or
xorl
cwtl
mov
or
hlt
loopne
sub
aad
xchg
and
in
test
and
sbb
or
cld
jo
stos
add
sub
inc
mov
xchg
fsubs
cmp
jns
fsubrs
mov
sbb
add
lret
lcall
rolb
dec
insb
add
lret
jmp
cmp
cli
or
roll
inc
punpcklwd
pop
es
aam
add
in
dec
xor
jg
in
add
sbb
xchg
and
sub
cmpb
pop
sti
fs
cmpsb
in
jb
and
pop
sbb
jmp
leave
int
and
call
inc
daa
push
pop
jo
shrl
repnz
sbb
add
and
add
lcall
outsb
das
lret
mov
aaa
mov
outsl
add
add
cmp
push
je
jb
fidivl
cmpsb
sub
pop
xor
mov
dec
add
fmul
inc
jno
testb
xchg
push
mov
add
cmpsl
popa
push
mov
inc
xor
loope
mov
cmp
aas
push
stc
out
mov
ss
pop
daa
das
lods
cmpsl
inc
pop
out
jg
pop
jb
rcrb
pop
xor
cmp
movsl
out
add
cltd
inc
xchg
cmp
xchg
loop
xchg
and
sbb
sbbb
clc
ret
mov
sub
ljmp
dec
cli
push
pusha
addb
daa
sub
inc
sbb
push
add
sub
incl
loopne
sub
add
add
add
sub
pop
into
add
push
testb
push
and
jg
xchg
pop
sub
pusha
shrb
or
adc
mov
mov
xor
aad
sti
test
push
add
dec
xchg
lea
push
add
das
pop
rcrl
movsl
xchg
pushf
inc
sbb
or
lret
ret
sti
addr16
pop
adc
xor
les
adc
pusha
leave
stos
mov
aam
insb
insb
sub
cmpsl
jb
clc
fwait
aam
mov
mov
add
add
and
adc
inc
sub
pushf
add
fstpt
inc
add
adc
push
and
incl
and
and
cmp
push
cmp
repnz
movsl
lock
lcall
lcall
cmp
mov
mov
mov
lock
ja
mov
add
stos
add
cmpsl
xor
adc
pop
xchg
push
mov
or
leave
mov
inc
rolb
mov
imul
add
icebp
aad
imul
mov
enter
mov
jg
je
rorl
leave
inc
nop
dec
outsl
aaa
addb
cmp
aaa
push
and
stos
mov
mov
and
push
in
xlat
or
shlb
lret
cs
push
shrb
push
cmp
mov
cli
fdivs
das
scas
and
push
mov
adc
adc
add
data16
and
mov
ja
lods
roll
rcrl
push
mov
div
clc
ljmp
gs
jmp
push
ret
mov
sbb
sub
sbb
daa
push
loope
add
loope
push
push
cmp
pusha
pop
mov
aam
sti
mov
int3
push
or
les
fistl
jmp
rcrb
ss
loop
add
jle
push
clc
and
sbb
xor
adc
pop
cmp
out
inc
adcb
cmp
push
and
pop
and
pop
mov
push
mov
pop
xchg
mov
ljmp
cld
inc
push
inc
sti
lcall
add
pop
add
aaa
and
ss
inc
std
jg
pusha
nop
movsb
add
mov
push
mov
and
daa
push
lods
outsb
sub
stc
sub
scas
clc
mov
sub
movsl
mov
adc
lds
jecxz
push
adc
movsb
loop
jp
ljmp
or
or
scas
rorb
or
mov
pop
push
inc
add
mov
or
push
xor
mov
sub
sub
and
jecxz
es
stos
fcmove
fbstp
fldenv
movsb
sub
imul
sbb
insb
loopne
jnp
aam
jae
xor
xor
jl
lcall
nop
push
add
push
pop
sub
data16
and
or
cld
enter
stos
jmp
add
pop
mov
mov
mov
xchg
pop
hlt
in
push
pop
push
stos
addl
push
push
and
and
sarb
sub
or
ljmp
inc
jno
push
add
add
loope
loop
adc
add
add
in
sbb
sub
rolb
prefetch
int3
xchg
push
imulb
filds
das
test
ljmp
das
mov
or
mov
inc
ljmp
xchg
call
jb
mov
add
xcrypt-ctr
cmpsl
sbb
stos
mov
leave
pop
lret
add
popa
or
rolb
scas
nop
lock
out
pop
jmp
mov
mov
sti
push
ds
iret
adc
adc
push
mov
clc
inc
push
or
jle
pop
fldenv
push
adc
inc
or
cmp
xor
push
lret
add
or
and
sub
or
rorb
fmul
add
push
fisttps
push
sbb
test
mov
sub
xor
leave
cli
push
add
ss
out
iret
pop
out
adc
divl
in
andb
add
jp
and
addb
jb
ficoml
add
push
mov
cmp
cs
jmp
add
inc
stos
stos
sub
cmc
insb
mov
test
data16
sbb
fmuls
or
test
push
jg
mov
adc
pop
mov
mov
pop
and
pop
test
sub
div
and
ss
add
cmpsb
cmp
add
out
stc
fidivl
popf
je
lahf
pop
sub
std
inc
sbb
dec
loopne
dec
jnp
int
cmp
jg
add
jmp
incl
loop
lgs
gs
fistl
dec
subl
popf
not
mul
or
call
lcall
jmp
push
add
orb
dec
or
mov
bnd
bound
add
insl
ss
or
push
push
repz
inc
and
subb
add
mov
das
xorb
stos
add
lock
fldt
adc
adc
push
add
stos
sub
mov
test
shll
sub
and
aad
jmp
inc
xor
cs
repnz
add
and
adc
add
ss
add
sub
int3
xor
jo
or
mov
pop
dec
push
lret
mov
lcall
cmp
adc
out
pop
stos
and
fbstp
adc
and
dec
pop
filds
add
push
popa
jge
inc
add
adc
aad
add
loopne
lods
mov
or
ficoms
into
sahf
xor
add
ja
pop
shrl
fsubrl
fxch
test
aam
pop
jo
fisttps
pusha
inc
adc
adc
aad
jno
jle
jecxz
loopne
lock
andb
andb
fldt
outsl
add
add
mov
pop
inc
mov
lds
sub
push
inc
xor
les
lock
pop
mov
cmp
insl
aam
sbb
in
pop
mov
xor
jae
mov
enter
sub
mov
pusha
and
and
adc
add
and
movsb
out
rcrb
adc
ret
pop
add
jno
shll
dec
ljmp
insl
ss
and
push
or
xor
and
fdivs
add
push
adc
enter
dec
add
push
jmp
movsl
int
pusha
lret
insl
enter
ret
push
sbb
rcr
nop
xor
pop
in
adc
test
cmp
adc
mov
add
negb
or
call
rorb
test
repnz
loop
rolb
add
insl
mov
add
push
sbb
inc
shll
or
inc
cmp
sbb
pushf
sarb
push
add
inc
push
push
xchg
mov
and
sub
ljmp
xchg
jp
leave
push
and
popf
adc
cld
enter
outsl
cli
incl
push
enter
out
sub
addb
mov
enter
sbb
mov
shrl
or
or
pusha
push
testb
icebp
push
lock
and
les
loopne
pop
pop
fsubr
add
xchg
clc
mov
mov
filds
inc
dec
les
and
idivl
fcom
das
mov
dec
mov
jmp
in
inc
stos
sbb
add
dec
or
pusha
xchg
stos
mov
and
cld
add
sbb
clc
enter
movsb
add
jnp
daa
push
add
aam
call
sub
lock
andl
xchg
in
or
sbb
adcb
push
mov
gs
lods
loope
jo
shrb
aam
fsubrs
inc
dec
xchg
loopne
scas
inc
sbb
xor
mov
add
inc
and
inc
mov
sub
xor
repnz
sbb
mov
mov
jecxz
mov
adc
loopne
push
push
mov
xlat
lods
nop
ret
das
push
sub
push
fwait
and
mov
sub
sub
xchg
push
cli
bound
adc
inc
sub
mov
pop
xor
adcl
and
lods
dec
gs
cmp
jo
popa
fists
pop
in
lock
mov
or
out
in
in
subb
add
aam
pop
push
jge
lods
arpl
rorb
xchg
mov
sub
adc
enter
adcb
cmp
sbb
lock
bound
mov
xchg
jmp
fisubrl
ret
out
gs
dec
pusha
dec
hlt
xor
cmp
pop
rcr
add
add
sub
es
or
push
shlb
dec
sbbl
push
sub
inc
add
jg
dec
and
into
dec
andl
sub
push
xor
sub
mov
loop
enter
pusha
pop
sarb
lret
loop
movsl
adc
fs
add
fdivs
daa
cld
jno
lcall
adc
cmp
das
add
pop
aad
dec
and
add
clc
cmp
fisubrs
pusha
mov
pop
cmp
adc
push
push
add
push
dec
pop
ja
test
js
adcb
jg
lock
data16
enter
loopne
loope
jmp
inc
mov
and
mov
or
mov
jo
or
mov
enter
mov
je
repnz
pusha
xor
or
sbb
and
sbb
pusha
sub
lret
ficomps
jbe
jmp
clc
add
shlb
adc
rorb
adc
sbb
sub
inc
cs
push
incl
rolb
sub
push
es
js
mov
sub
and
and
jp
pushl
jne
sub
jnp
pop
mov
xor
dec
mov
inc
pop
fbld
xchg
gs
in
inc
xor
mov
cmc
add
sub
sub
xor
fiadds
mov
and
enter
cmp
sub
int3
cld
das
mov
add
icebp
pop
add
mov
shrl
mov
out
xor
enter
mov
imul
or
pop
lock
insl
call
stos
and
mov
repnz
xchg
xchg
add
push
cld
xchg
sub
inc
mov
decl
mov
ja
sbb
pop
js
xor
aas
xchg
xor
js
inc
and
xorb
push
hlt
in
clc
adc
jae
xor
shrb
add
dec
sbb
jo
push
scas
xor
stos
outsb
pop
hlt
cs
insb
mov
add
cmpsb
dec
xchg
add
add
loop
cmp
adc
cmp
add
jg
mov
xor
pop
mov
movsb
adc
jo
cmp
jbe
cmp
loope
and
jmp
and
sahf
jo
ljmp
inc
das
push
outsb
add
jp
mov
mov
fisubrl
popa
std
sbb
mov
xchg
data16
fsubl
pop
mov
enter
and
loopne
fdivrp
call
and
mov
cltd
add
sub
loope
sbb
or
leave
cmp
mov
and
adc
sub
cld
mov
push
sbb
sbb
cld
out
loope
pop
jae
pop
sbb
js
jo
and
jecxz
cld
xchg
sbb
sbb
dec
dec
or
sbb
js
adc
pusha
mov
adc
fisubrs
and
add
cs
and
inc
xchg
adc
out
sub
inc
add
pusha
cli
lret
add
inc
add
ret
enter
cld
sbb
jo
repnz
test
lret
xor
add
or
bound
or
iret
sbb
nop
xchg
mov
mov
pop
sub
pop
adc
sbb
sbb
xor
inc
enter
xor
ja
cmp
rorb
or
rolb
enter
push
pop
sub
sbb
mov
jb
cmp
and
clc
jmp
lock
clc
sbb
ret
mov
push
stos
push
xor
cmp
arpl
add
mov
and
cli
popl
jbe
loopne
cmp
or
adc
cli
mov
int3
sbb
mov
fsubrl
or
je
mov
aam
cld
lcall
pop
out
enter
insl
mov
sub
push
les
wrmsr
adc
pop
xchg
adc
jl
and
mov
pusha
rcll
push
push
pop
push
jmp
js
xchg
aam
bound
int3
and
orb
push
out
push
outsl
je
add
dec
je
filds
xor
daa
stos
cmp
mov
jb
bound
mov
jmp
jnp
icebp
into
test
outsl
clc
inc
enter
jecxz
and
pop
loopne
adc
cwtl
and
push
pop
jae
jle
jl
mov
out
and
fwait
movsl
orb
dec
adcl
sbb
add
push
dec
aaa
xchg
jo
jle
adc
dec
je
and
adc
loope
lods
cmpsb
movsb
mov
loopne
addb
es
cmpb
aam
enter
out
and
nop
mov
enter
or
ljmp
push
add
daa
icebp
pop
lods
jg
jge
jg
call
xchg
insb
push
jg
push
dec
push
add
push
leave
cmp
pusha
sbb
and
lods
and
ss
lret
roll
sbb
enter
incl
outsl
hlt
or
push
fcomip
xor
push
adc
add
daa
add
rolb
cmpsl
mov
add
inc
add
out
daa
loopne
push
and
inc
adc
jo
ret
adc
mov
push
xor
jbe
addb
sbb
pop
inc
jl
mov
sub
addb
pop
pop
scas
mov
movsb
mov
shlb
cmp
jle
loopne
repz
and
test
inc
pop
xor
xlat
pushl
pop
fs
nop
dec
mov
mov
lea
test
inc
jl
push
pop
push
mov
in
xchg
fisubl
add
or
ret
jle
xchg
lods
outsl
ljmp
cmp
add
cmc
push
sbb
xchg
pusha
dec
outsb
push
shrl
rolw
xchg
xor
dec
pop
hlt
cmp
adc
ficoml
inc
daa
insl
inc
or
pushl
xchg
repnz
adc
push
push
cmpsl
inc
push
shlb
xor
enter
cmp
adc
or
inc
mov
push
push
idivl
fdivs
cmp
push
ret
and
movsb
pop
add
outsb
ljmp
lcall
push
and
jae
inc
gs
fdivrl
push
jmp
inc
nop
call
je
icebp
push
fcoml
loope
js
adc
clc
pop
dec
cld
sbb
and
and
pusha
xor
loopne
xor
sub
mov
add
jnp
sub
fdivrp
mov
and
push
clc
or
rclb
rolb
add
push
push
in
and
mov
lahf
outsb
add
adc
mov
inc
scas
dec
add
gs
adc
adc
outsb
cmpsl
add
cli
call
adc
decl
clc
dec
sti
sbb
ds
jno
lods
fcoms
pusha
cwtl
sbb
adc
sbb
add
dec
cmpsb
arpl
fs
pop
aam
or
jne
outsb
fisttps
dec
sbb
xor
jbe
jne
push
sub
and
pop
add
loopne
gs
adc
sbb
outsl
pop
mov
enter
loope
push
ljmp
add
inc
loopne
add
sbb
xchg
shll
test
cmp
xor
mov
sub
rorb
inc
cmp
jg
dec
add
or
inc
pop
rolb
mov
lock
and
ljmp
pop
enter
lret
add
dec
lock
lock
add
clc
outsl
cmpb
sub
loopne
sub
or
insb
mov
xchg
leave
push
add
xor
jo
cs
stos
pop
push
cld
mov
cli
push
lock
scas
iret
jo
push
mov
in
loopne
jl
add
mov
cmp
test
push
mov
pop
out
pop
mov
dec
add
push
jnp
sbb
ja
push
jo
ljmp
xchg
in
lods
imul
add
insl
and
dec
aam
inc
mov
fdivrl
and
enter
or
pop
xor
lods
xor
outsb
stos
add
adc
cs
pusha
fidivl
fwait
insl
xor
lret
insb
push
test
je
sbb
inc
faddl
add
cmpsb
decl
lods
adc
enter
pop
xor
pop
or
test
inc
es
call
dec
gs
mov
cmp
outsl
ret
orb
push
cmp
enter
fwait
sbb
sub
mov
ret
add
insb
cld
incl
fadds
mov
add
jo
inc
cmp
mov
pop
mov
je
add
push
mov
add
fs
mov
jo
ljmp
ljmp
inc
int3
inc
cmp
sbb
orl
movsl
orl
dec
or
jbe
orb
orb
in
mov
push
mov
add
or
or
or
fisttpl
test
mov
mov
inc
adc
inc
adc
ret
outsl
orl
push
sub
sarb
out
cld
stos
lock
push
inc
adc
and
inc
lret
cmp
insb
fcoms
add
or
sbb
dec
and
sbb
jbe
inc
fisubrl
mov
push
pop
push
push
xor
adc
rclb
aas
das
pop
add
cmp
in
insb
cmpsl
cmp
scas
sarl
addb
xchg
js
sub
push
sub
xor
cwtl
mov
and
cmpb
sbb
fs
and
inc
xor
fdivrp
mov
andb
or
jp
inc
or
roll
pop
mov
les
iret
jo
mov
xor
mov
lods
insl
mov
inc
scas
mov
adc
incl
movsb
cmp
inc
push
rorb
movsb
fisttpl
jo
stos
push
pop
add
push
clc
adc
cmpsl
scas
add
and
test
les
add
in
stos
and
loopne
decb
jle
push
mov
add
aas
jae
dec
rorl
and
sbb
scas
xor
enter
mov
jl
in
jg
inc
insb
cmp
lret
jp
sbb
mov
or
and
adc
pop
lock
and
out
pop
xchg
inc
pop
xor
jo
mov
cli
lods
movsb
add
shrl
lods
dec
ljmp
addb
sbbl
or
rolb
orl
xor
movsl
inc
sub
andb
jbe
push
pop
add
or
cli
jmpw
inc
sbb
das
mov
sbb
inc
sbb
inc
mov
add
or
js
sub
pop
mov
add
mov
mov
dec
mov
cwtl
push
call
inc
test
dec
or
mov
fisttps
lret
sub
jg
mov
mov
rorl
inc
add
mov
pop
add
inc
inc
les
xor
and
test
filds
roll
add
pushl
cld
push
xor
andb
or
loop
push
insb
add
inc
mov
push
add
pushl
rcrb
outsb
fists
enter
push
shrl
and
add
jbe
jno
xor
xor
mov
dec
fbstp
jns
loop
movsb
fcomip
or
xor
add
jl
sub
or
push
test
xor
lcall
push
xlat
jle
or
fcoms
mov
ret
inc
add
ret
cwtl
pusha
cwtl
mov
jle
subb
xchg
pusha
daa
add
pusha
push
and
jae
add
subb
ja
mov
sbb
shrl
xor
inc
ljmp
add
iret
add
xchg
inc
clc
push
das
inc
xchg
loope
loop
shll
or
jecxz
pop
ja
icebp
or
shlb
pop
dec
cmp
call
push
mov
jno
or
xchg
and
xchg
inc
orb
ja
add
push
and
hlt
pop
add
dec
and
int3
dec
fisubrs
xchg
sub
fs
sbb
cmpsb
incl
cld
inc
push
lods
and
mov
add
adc
adc
scas
prefetchw
jg
push
aaa
mov
loopne
sub
mov
andl
enter
es
movsb
sti
push
out
pop
stos
add
jnp
loopne
inc
add
xor
and
lock
enter
sub
jg
sub
es
popa
and
sub
jl
jne
push
leave
jns
test
test
add
and
jmp
or
call
nop
pop
mov
enter
inc
xor
push
inc
xchg
or
sub
pop
jbe
test
push
add
inc
jl
cmp
rorb
xchg
test
add
or
adc
clc
stos
cs
fdivrs
and
lret
mov
jno
ja
mov
pop
faddl
push
dec
mov
loop
fisubl
fisubs
mov
ja
xor
pop
pusha
jecxz
adc
mov
das
xchg
clc
mov
adc
sbb
add
inc
add
or
lcall
pusha
orb
movsb
sub
cwtl
mov
and
out
inc
sub
hlt
jno
shlb
and
push
data16
jmp
and
xor
cmpb
xor
adc
pop
pop
icebp
fs
pusha
out
cmp
test
pusha
and
mov
sbbl
or
loopne
lret
push
sbb
loopne
xchg
add
adc
push
mov
out
and
push
sbb
sti
mov
lock
int
stos
shlb
lods
push
cmc
stos
daa
ja
sub
push
xor
xchg
test
adc
dec
cmp
gs
inc
inc
jbe
cli
les
push
negb
andb
aam
in
fwait
push
push
jb
xlat
fsubs
dec
dec
push
or
add
inc
dec
adc
out
jbe
int3
ret
or
out
jne
jae
or
cltd
out
ss
inc
enter
test
faddl
mov
ljmp
or
insl
pushl
std
xchg
orb
hlt
dec
mov
imul
cs
ja
addb
test
subl
add
and
mov
inc
in
insl
push
xlat
add
and
dec
mov
call
sub
or
lea
and
pop
adc
hlt
jl
popf
je
outsl
push
out
jnp
mov
add
xor
ja
or
out
rorb
adc
sub
or
xor
adc
add
cs
rolb
outsl
clc
decl
and
and
test
push
ret
dec
push
add
loopne
arpl
adc
mov
mov
add
mov
xchg
or
daa
loopne
adc
das
or
jmp
es
xchg
inc
sbb
mov
pop
fsubrs
pop
jns
test
je
nop
sbb
outsl
mov
out
bswap
imul
push
mov
mov
or
push
jmp
sti
dec
lock
cmp
jl
pusha
aaa
shlb
adc
sbb
push
pop
mov
fstpt
loopne
sbb
adc
aam
sbb
ja
mov
pusha
jge
and
add
nop
add
jl
in
jo
test
add
rcll
adc
mov
mov
fcomp
mov
icebp
add
dec
fistpll
xchg
add
fbld
insb
mov
jno
mov
mov
pop
sub
add
add
jle
or
pop
pop
rcrb
pop
sub
sti
cmp
out
call
jg
or
add
sbb
jno
or
jbe
pop
pusha
or
mov
subb
fs
push
add
mov
push
out
add
jo
dec
and
jnp
pushf
aam
and
add
jns
xchg
and
cmp
mov
out
and
jo
jg
outsb
dec
int3
lret
loop
mov
adc
xor
cmp
adc
pushf
xor
fs
jne
jae
cld
mov
in
sti
jecxz
inc
pop
adc
xchg
add
xor
addr16
add
daa
mov
mov
push
icebp
jmp
and
add
add
jecxz
lods
dec
add
add
test
mov
stos
push
push
sub
adc
out
mov
test
std
dec
cmpb
nop
adc
mov
or
mov
das
cmpsb
jo
mov
pop
mov
imul
test
js
icebp
mov
xor
aad
adc
mov
push
sbb
add
test
out
xlat
aad
andb
dec
enter
nop
sbb
adc
xchg
mov
adc
in
mov
loopne
pop
aas
lds
ds
fcoms
stos
dec
shrb
adc
pop
mov
outsl
sub
xlat
push
insl
inc
sbbb
push
push
and
mov
sub
mov
inc
andb
fdivrs
or
inc
xor
jl
and
push
sbb
xor
inc
xor
sub
rcrl
add
test
mov
dec
jle
in
jmp
mov
jbe
mov
pop
sti
aam
in
loopne
out
adc
mov
push
add
stos
out
enter
ljmp
jb
repz
stos
out
adc
lods
int3
mov
pop
xchg
js
adcb
or
push
inc
cwtl
shll
les
jg
icebp
push
in
push
add
or
sbb
loop
adc
lret
adc
jp
clc
stos
push
push
nop
inc
and
push
sbb
ljmp
scas
sbb
enter
sub
xor
jl
jecxz
insb
mov
push
adc
fs
adc
inc
idiv
add
add
cwtl
enter
cld
mov
inc
fistps
jge
ds
sbb
aaa
cld
pusha
stos
sub
sub
faddl
aad
xor
xchg
loopne
dec
shlb
stos
pop
shlb
movsl
inc
loope
bound
flds
notl
rclb
test
fs
incl
add
inc
movsl
rolb
rcrl
fmuls
adc
inc
xor
or
add
jno
xor
lock
mov
repnz
jo
nop
add
sub
pop
push
pop
sub
stos
add
loope
icebp
or
lcall
outsl
dec
xor
loop
icebp
mov
shll
icebp
loope
std
mov
loope
sub
popa
arpl
imul
adc
inc
jo
daa
rcrl
sar
cmp
dec
sub
rcl
rolb
adc
inc
in
add
ss
or
lret
adc
mov
lods
filds
push
sub
cwtl
rolb
add
cmp
andb
mov
sbb
xor
aad
or
or
jns
imul
ss
cmp
cmp
call
cmp
cmp
jge
xor
cmpsl
pop
ror
cmovo
add
dec
sub
or
call
into
push
xor
sarb
sub
or
mov
xchg
and
jge
adc
and
mov
xor
add
xchg
push
or
pusha
lcall
sub
push
add
cmp
nop
ss
test
lea
cmp
and
clc
dec
push
jne
mov
push
xor
xor
sbb
testb
enter
jge
pop
jle
jecxz
jb
push
sarl
xorb
sub
les
fstpt
mov
and
es
and
in
push
jb
fs
rcl
mov
and
push
sub
data16
inc
and
shrb
test
sub
adc
fisubl
add
movsb
es
ja
push
arpl
push
sub
jo
inc
jmp
stos
or
cmp
sub
ffree
push
ss
and
sbb
mov
pop
subb
sar
xor
shlb
adcb
push
adc
mov
push
sbb
fidivl
pop
xorb
push
cmp
xchg
push
sub
add
add
jle
sub
xchg
aam
fistps
add
repnz
xchg
test
lret
subb
jmp
push
add
mov
jne
lret
and
mov
jmp
pushf
push
add
add
pop
dec
jg
hlt
adc
fmull
adc
fisubs
push
and
gs
cmpl
pusha
mov
cmp
and
incl
shrb
jo
and
subb
sbb
aam
loopne
push
dec
sbb
lock
dec
inc
jle
les
jl
xor
fwait
sub
jb
popf
fsubs
stos
jbe
xchg
cmp
test
add
mov
rcll
enter
or
dec
inc
add
in
mov
cld
push
xchg
loopne
inc
or
rorb
call
inc
sbb
inc
push
jle
rcll
push
push
pusha
into
inc
mov
pop
hlt
pop
or
adc
enter
fmuls
and
add
or
xor
ljmp
cmp
sub
das
shlb
clc
andb
and
add
lods
mov
and
pop
sbb
and
lock
push
sub
xlat
push
mov
nop
dec
jecxz
jae
mov
add
add
push
push
or
dec
andb
leave
into
aas
lods
pop
sub
xor
push
jbe
add
aaa
lock
push
and
cld
cmp
inc
push
jg
ja
sbbb
cltd
loopne
add
insb
mov
sbb
out
mov
or
inc
bound
jbe
pushf
adc
xchg
adc
lcall
mov
add
mov
pop
icebp
and
mov
push
andb
xchg
inc
rolb
add
xchg
ret
sbb
xor
das
movb
add
push
sub
add
insb
push
lock
push
jno
adc
fsubrs
and
call
sub
test
loop
push
daa
mov
icebp
pushl
and
jns
and
jp
cmp
cs
les
in
aam
push
inc
aaa
sub
dec
add
movsb
adc
push
lods
jne
sti
push
sub
es
stos
aad
adc
jl
and
andps
jne
fsub
jne
fisttps
push
jo
dec
sub
cmp
pop
addb
das
inc
and
or
lret
popf
add
js
xchg
mov
push
jno
mov
decl
stos
push
stc
cwtl
sub
enter
and
lods
test
and
movsb
add
xor
sar
idivb
or
mov
add
mov
loopne
loopne
adc
pop
adc
int
and
adc
push
sub
insb
mov
mov
add
sub
ss
jg
scas
rolb
fsubs
and
add
jne
inc
or
addr16
js
scas
test
add
js
jecxz
inc
add
inc
add
or
ja
or
addl
lcall
test
cmpb
add
dec
xorl
shll
rorb
dec
fmuls
outsb
mov
push
xor
adc
add
call
enter
ficoml
inc
das
jo
mov
addl
and
and
push
jl
addb
push
sbb
hlt
das
and
push
inc
sub
xchg
je
test
mov
add
cmp
jne
sub
or
adcb
xchg
and
rorb
imul
or
lds
sbb
or
stos
push
cmp
sub
cmpb
cmp
push
mov
fstl
cmp
push
pusha
sbb
and
pushf
adc
pop
mov
in
enter
sub
or
dec
xor
jno
sub
mov
shlb
and
inc
sub
cmp
mov
test
pop
incl
fadds
mov
int3
pusha
cmp
mov
mov
mov
cmp
shlb
imul
push
and
push
push
lahf
add
icebp
lcall
sbb
pop
inc
inc
push
add
sbb
fs
cli
cmp
or
sub
orl
xor
cmp
fidivrs
adc
insl
ss
mov
enter
call
add
cmpsb
sbb
pop
rcrb
dec
enter
and
subb
jl
and
cmc
lcall
movsb
lret
mov
add
and
mov
test
lock
xor
and
inc
insl
adc
lods
cmp
adc
loop
les
sbb
pop
add
loopne
sub
mov
out
pusha
pop
xor
add
xchg
inc
jb
pusha
lcall
std
jg
push
or
and
in
cs
adc
jg
sbbl
insl
cmp
mov
sbb
test
jl
int
jno
scas
sub
sbb
and
ja
sbb
aaa
xchg
sub
add
push
and
push
fiaddl
in
cld
in
out
xchg
stos
jge
rolb
add
push
sbb
pop
nop
push
subb
add
bound
nop
hlt
enter
cmpsb
test
cld
popf
pop
inc
adc
or
mov
xor
jg
add
popl
lock
data16
clc
mov
sbb
enter
shrb
and
push
or
add
fbstp
adc
cmp
dec
out
movntq
out
ja
mov
and
adc
add
and
jmp
adc
adc
xor
ret
incl
and
add
push
or
xchg
test
pop
push
call
hlt
or
or
adc
outsb
nop
cmp
cmp
filds
add
ja
testb
xor
adc
jbe
push
xchg
xor
or
and
sub
jo
je
or
cld
sub
cmp
xor
xor
sbb
add
mov
mov
dec
nop
pushaw
loope
pushf
add
fmulp
push
jle
mov
xor
mov
mov
in
add
subl
enter
fcomps
jg
lock
pop
adc
push
dec
addl
dec
js
push
mov
mov
sbb
pusha
dec
loope
leave
xchg
icebp
lcall
jae
and
fbld
xor
cmp
add
push
imul
mov
push
adc
sub
sbb
or
jmp
add
andl
push
push
and
mov
add
xor
jb
enter
fdivr
outsl
mov
lret
inc
adc
enter
add
add
or
sub
pop
jp
adc
fmull
test
xchg
or
xor
jbe
or
or
rorb
imul
test
gs
popa
sub
or
fbstp
test
subl
movd
nop
cltd
stos
sub
adc
or
loopne
enter
mov
in
es
mov
jl
and
push
xor
rorb
or
pusha
adc
pop
adc
sbb
lods
addb
sbb
xchg
pop
cli
push
jmp
data16
enter
cmp
xor
mov
inc
cld
jg
dec
inc
rolb
fs
loope
enter
aam
cmp
mov
jae
andl
and
dec
xor
mov
cli
filds
lock
fs
push
shll
or
std
jmpw
and
push
nop
push
es
mov
cs
lret
push
xor
call
push
orb
sub
push
inc
addb
shlb
xor
cmp
mov
cld
lcall
subb
insb
das
lahf
pop
addr16
push
add
pop
or
mov
inc
adc
push
sub
mov
adc
loopne
or
push
sub
mov
hlt
insb
xor
sbb
dec
loopne
push
dec
cwtl
dec
or
adc
lcall
scas
push
xor
ja
sub
divb
stos
mov
adc
leave
cli
daa
std
jmp
adc
mov
fisubs
addb
push
push
jae
subb
stos
xchg
push
inc
jp
and
sub
inc
xchg
lock
lcall
icebp
sbb
test
mov
dec
xchg
sbb
push
or
icebp
test
mov
ja
enter
mov
pop
mov
out
push
mov
xchg
test
ret
lock
push
inc
std
push
outsb
repnz
sar
cmpsb
push
shrb
sub
push
sbb
xor
loopne
push
pop
sub
sahf
loopne
sarb
cmp
fildll
decb
and
pop
fdivl
sbb
in
adc
ss
jns
rcll
add
ljmp
pusha
fs
add
dec
xor
push
and
loopne
lret
cmp
daa
push
adc
add
test
adc
and
loopne
add
xchg
das
mov
fbld
sub
sub
sbb
sbb
push
jno
pop
xor
movsb
jle
je
loopne
add
or
sbb
pusha
push
imul
pop
test
xor
es
push
hlt
or
rolb
xchg
push
and
add
out
fiadds
movsb
push
add
or
pop
push
outsl
add
or
repnz
jnp
sub
adc
dec
shlb
fidivs
clc
scas
filds
insb
add
sbbl
outsb
adc
fildll
xor
push
push
push
adc
pusha
and
add
rclb
pop
lock
mov
sbb
push
push
pusha
inc
add
cltd
jmp
push
add
xor
sbb
pusha
lods
sbb
enter
xchg
std
rolb
movsb
out
sub
jo
rcll
jbe
decl
pop
push
and
jg
loop
add
enter
dec
es
add
js
or
inc
or
cwtl
test
call
out
sbb
jno
loopne
fwait
jbe
stos
inc
or
dec
ljmp
rcl
cwtl
test
mov
push
or
mov
lock
add
inc
xchg
push
js
xor
dec
ljmp
addb
ja
dec
and
xor
xor
jo
push
leave
xchg
bound
xor
ja
stos
sub
outsb
mov
jle
call
xor
dec
cmpsb
xor
inc
inc
or
mov
fwait
test
sub
movsb
adc
insl
sub
imul
inc
ret
incl
pop
push
nop
mov
lret
cmpb
lods
fadds
insl
add
push
push
jae
cmp
adc
sbb
push
ds
sbb
pop
fcomip
fistps
and
and
ljmp
loopne
mov
pop
in
mov
and
push
mov
xchg
loop
rolb
rorl
add
mov
jp
out
lock
icebp
enter
cwtl
int
adc
add
into
test
xor
ljmp
insl
or
mov
js
out
mov
hlt
cmp
push
jnp
or
sub
add
jecxz
push
adcb
sub
ds
jbe
movsb
popa
mov
add
dec
pop
sbb
into
or
fildll
mov
inc
jb
adc
mov
xor
mov
out
nop
stos
sbb
mov
jg
jecxz
xchg
add
in
add
cmpb
jg
shrb
mov
je
andb
add
out
rorb
pop
jle
inc
add
jae
push
ja
jge
imul
nopl
sub
pop
lods
sbb
push
aas
push
adc
andb
int
cmp
cmp
and
daa
cmpsb
add
mov
icebp
jae
filds
sti
mov
and
aas
lret
jecxz
or
scas
fistpll
rcrb
or
orl
push
jle
pushf
data16
dec
and
dec
stos
jne
outsl
add
xchg
sahf
adc
mov
and
or
mov
sub
and
add
cld
and
aam
pushf
xorb
lods
push
xchg
sbb
imul
cs
addb
sbb
push
sub
stos
push
add
inc
cmp
dec
inc
cmp
add
jno
cmpb
adcb
shlb
push
and
fcoml
orb
lock
jmp
bound
push
fiadds
sbb
push
inc
cs
pop
das
sbb
pop
inc
inc
push
and
push
movsl
pop
clc
sbb
adc
aam
pop
movsl
push
imul
test
xchg
test
fdivrs
ret
or
push
cltd
imul
xor
mov
addl
lods
add
dec
rorb
mov
jmp
lcall
subb
push
popf
inc
rolb
push
and
xchg
inc
lods
call
xorb
lods
roll
push
sub
call
pop
inc
lret
inc
add
es
js
or
and
imul
fs
loopne
cmp
icebp
sbb
push
rcrb
and
mov
mov
aas
add
or
out
adc
dec
daa
jle
push
mov
mov
pop
push
fld
xor
fisubrs
ret
add
jo
out
add
ss
insb
mov
sub
mov
add
hlt
add
outsl
rcl
testb
loop
stos
mov
xchg
cwtl
and
push
sbb
test
add
and
mov
rolb
inc
push
scas
and
inc
mov
bound
push
jl
add
add
jae
orb
dec
pop
xchg
and
cmp
popf
aam
jle
icebp
dec
or
daa
and
jae
inc
inc
adc
add
adc
push
or
shlb
push
sahf
add
xor
mov
gs
call
scas
test
test
add
das
push
outsb
inc
jg
jnp
mov
inc
shlb
pop
and
inc
popa
jle
cmp
lods
and
and
and
inc
test
fistpll
hlt
add
and
jbe
mov
and
sbb
dec
and
cld
adc
jbe
inc
xor
mov
or
out
add
and
aaa
inc
mov
inc
sbb
or
inc
xor
jb
clc
dec
lcall
push
fists
pusha
or
and
or
jge
sub
scas
rclb
hlt
loope
mov
rolb
mov
push
scas
dec
mov
push
testb
pushw
jbe
sbb
stos
dec
loopne
sbb
decl
das
add
stos
push
or
cmp
sbb
inc
pop
and
loope
mov
ret
fistpll
add
stos
bound
stos
xor
stc
jg
orl
enter
push
adcl
sarb
loope
repnz
sub
sub
or
ja
sub
scas
xchg
andl
enter
dec
xchg
inc
cs
icebp
push
cld
stos
push
clc
in
add
or
jl
outsl
shr
es
enter
inc
rorl
pusha
xchg
and
adc
add
cwtl
inc
pop
enter
xor
filds
sbb
mov
and
dec
hlt
jl
pop
test
or
dec
loopne
mov
add
lods
sar
aaa
xor
add
daa
add
and
xor
pusha
mov
push
add
and
add
push
push
sbb
or
or
and
test
push
xor
fsubrl
or
add
sbb
loop
frstor
sub
mov
enter
sbb
out
sub
and
ja
mov
adc
add
sbbb
adcw
pop
jle
mov
add
dec
in
subl
aaa
out
add
push
jl
inc
or
mov
insl
mov
sbb
bound
and
pop
in
and
sbb
and
bound
inc
pop
and
xchg
pusha
push
xchg
fwait
push
push
call
cmpl
inc
pop
ja
adc
jle
add
addl
or
pushl
jle
mov
pusha
sub
or
push
mov
mov
cmp
lea
jo
rorl
inc
cmp
andb
andb
lcall
mov
jge
mov
add
dec
popf
add
pop
adc
inc
lods
mov
fucomi
add
and
pop
fsubr
bound
mov
iret
cmc
popa
mov
dec
jbe
adc
shlb
das
cmpsb
ljmp
push
sbb
jnp
dec
and
enter
inc
addl
mov
pushf
xchg
pop
enter
inc
or
movups
mov
adc
pop
ror
inc
fisttpll
loope
enter
jbe
sbb
pop
lods
ja
sbbb
mov
inc
ja
xchg
lret
xor
mov
push
mov
and
xor
jb
imul
imul
jbe
push
or
and
mov
cmp
or
sbb
jle
sub
dec
and
jecxz
ja
test
xor
add
test
pop
aam
sbb
adc
orl
jg
mov
jbe
and
lods
xchg
cmp
inc
dec
cmp
std
or
and
enter
push
icebp
adc
out
into
push
fs
sub
dec
add
adc
popa
sub
jbe
aam
mov
add
jo
popa
icebp
ja
push
cmp
in
mov
pop
testb
mov
inc
fsubrl
loop
jle
xorb
orb
mov
insl
pop
sub
add
arpl
mov
loope
fmuls
int
aas
sub
add
inc
jo
movsb
sbb
sub
cmp
mov
test
push
fcoml
cmp
addb
ljmp
adc
ss
push
sub
add
mov
mov
jb
or
mov
loopne
lock
aam
loopne
cwtl
pop
icebp
add
mov
les
jb
sub
add
jecxz
or
adc
test
sahf
jg
ljmp
inc
sbb
jo
mov
insb
inc
push
jae
pop
and
push
cld
sub
sub
sbb
and
xor
cmp
ret
cmp
daa
out
jno
adc
cwtl
nop
push
xchg
jns
cmp
scas
les
fisubrs
imul
adcl
sbbb
int
pop
sbb
xor
mov
xor
mov
push
enter
jle
sbb
push
add
adc
and
dec
jmp
inc
rolb
adc
jae
mov
mov
jl
push
enter
adc
rorl
push
icebp
pop
std
xor
pop
icebp
add
addl
cmp
lock
enter
ljmp
fcomip
mov
fmuls
add
and
adcb
jno
lods
movsb
sbb
in
inc
add
jle
and
adc
and
or
cwtl
xor
imul
dec
push
faddl
out
rclb
xor
mov
insb
andl
dec
scas
enter
lret
loopne
push
or
cmp
bound
lods
jp
cmp
shll
fidivs
pop
push
stos
mov
push
add
pop
push
push
lods
aam
ljmp
jbe
lret
xchg
inc
es
xor
dec
xchg
in
hlt
sub
shlb
decl
xchg
dec
xchg
adc
pusha
cmpsb
nop
ss
sbb
mov
sbb
push
sub
inc
shll
xchg
loopne
bound
or
dec
fidivs
incl
lock
stos
insl
mov
xchg
sbb
pop
js
pop
mov
add
into
adc
out
clc
dec
jbe
mov
das
push
rclb
mov
or
or
inc
rolb
int3
push
mov
xor
adc
cs
jl
push
filds
out
jl
jno
jecxz
jl
lock
sbb
sti
push
xor
in
or
jmp
and
push
mov
xor
jmp
jp
sarl
pop
or
and
xor
and
outsb
cmp
jae
add
add
push
dec
and
lods
sbb
jno
cmp
or
fbstp
and
add
repnz
bound
out
sti
fwait
mov
push
shlb
loop
rorl
mov
lret
hlt
or
lcall
or
mov
orb
xor
popa
cs
movsb
leave
cs
pushf
lods
inc
xchg
pop
xchg
add
cmp
and
mov
lods
mov
push
stos
xor
inc
nop
ror
out
clc
gs
or
nop
sbb
sub
fsts
jecxz
mov
jnp
push
dec
jae
ja
add
mov
es
jp
dec
xchg
shrl
mov
fcom
mov
xor
push
icebp
mov
sub
sbb
push
inc
lods
cwtl
inc
enter
icebp
adc
push
pusha
cwtl
aad
push
mov
adc
mov
jo
push
enter
jl
shrb
cwtl
adc
jg
icebp
outsb
push
test
and
dec
ja
push
dec
out
adc
mov
movsb
rorb
or
addb
into
and
fwait
fs
and
adc
aaa
inc
and
sub
lock
adc
shll
jl
neg
mov
mov
jle
aad
pop
mov
xchg
or
leave
mov
shr
sub
dec
add
sbb
dec
loopne
lcall
push
pop
je
jnp
sub
outsb
loopne
add
repnz
inc
inc
jnp
jg
jmp
pop
sub
mov
pusha
mov
popa
data16
test
xor
adc
mov
push
push
dec
sub
loope
and
out
out
stos
xor
xor
ret
cmpsb
fcomip
xor
push
pop
hlt
cwtl
fisubrs
das
cli
jg
xchg
ficoms
jo
push
data16
popa
enter
lock
in
icebp
pushl
xor
and
adc
pop
adc
lret
inc
push
loope
or
mov
rol
cs
and
xchg
sub
or
scas
inc
test
inc
sbb
mov
sahf
divb
adcb
push
movsb
sahf
add
ret
dec
adc
sarb
insb
cwtl
or
rcrb
aam
adc
lock
outsl
fwait
push
fwait
mov
lret
adcb
enter
popa
adc
sbb
fbld
add
pop
ss
lods
sbb
sarb
lods
sub
mov
std
aam
add
add
in
ds
outsl
sub
jnp
sbb
lods
outsl
and
xchg
cmp
pop
cmc
jae
mov
push
xor
add
movsb
sbb
ljmp
pusha
dec
mov
xor
imulb
imul
or
or
movsl
aam
mov
ss
das
movsl
scas
mov
out
out
aaa
subb
and
add
lods
add
jno
fistps
faddl
push
add
fists
mov
or
jae
and
jo
dec
fadds
pop
sbb
fwait
clc
mov
aad
xor
pop
sub
dec
js
add
push
adc
xchg
adc
fsubs
lret
push
mov
xor
add
aaa
pusha
stos
inc
insb
and
add
adc
mov
inc
pop
add
xchg
fldenv
pop
mov
iret
xchg
scas
lea
cmp
jg
xchg
add
jnp
add
adc
out
data16
icebp
clc
adc
or
ja
lock
push
sbb
mov
std
sub
and
pop
adc
dec
fs
adc
sub
add
or
insb
cwtl
addl
test
stos
shrb
mov
imul
imul
movsb
daa
les
test
xorl
adc
clc
lds
stos
xor
andl
pop
aaa
and
adc
dec
mov
fwait
hlt
add
sbb
clc
adc
mov
shrb
jg
inc
stos
and
and
sub
dec
in
cli
add
orb
push
xor
je
add
push
inc
mov
out
cli
or
mov
jne
add
mov
pop
or
xor
and
inc
dec
adc
pusha
test
xor
lods
mov
push
pushf
inc
inc
mov
jno
mov
mov
ret
jno
mov
enter
call
sbb
faddl
dec
mov
xor
mov
aam
mov
inc
add
jg
add
jp
popf
mov
and
int3
ret
or
lock
jp
test
xchg
imulb
mov
pusha
add
shlb
add
inc
dec
lods
cltd
outsb
jp
jl
out
sub
sub
push
imul
add
or
call
enter
push
add
mov
out
dec
add
xchg
push
les
mov
lods
adc
xchg
je
rcr
mov
mov
fadds
inc
adcb
scas
push
scas
xchg
cltd
ret
in
inc
push
jnp
jg
std
add
sub
jecxz
ss
or
mov
sub
fistl
dec
cld
sub
adc
or
xor
enter
xor
adc
push
and
ss
imul
mov
cmp
or
xchg
xchg
jp
push
mov
and
dec
xor
outsl
xchg
sub
xor
xchg
jb
inc
add
or
out
ss
cmp
les
add
outsb
shl
nop
jle
fimuls
jo
adc
pop
sbb
in
xlat
add
andb
sbb
aam
jge
and
mov
test
jne
add
out
pop
jg
jo
sarb
loope
push
sub
inc
mov
xor
or
fcomip
mov
test
pusha
or
xor
add
decl
daa
fs
xchg
add
push
pop
pop
addl
sti
orb
dec
fiaddl
movsb
sub
xchg
pushl
push
bnd
ret
inc
dec
xor
cmp
pop
and
jbe
gs
or
add
add
mov
push
out
sub
mov
or
adc
fidivrs
enter
loope
addl
add
mov
and
test
or
sbb
test
cld
loopne
lods
movsb
adcb
sub
sarb
stos
adc
decl
rorl
sbb
or
jecxz
mov
adc
pop
cli
adc
xor
ja
or
pop
shrb
push
add
leave
int
adc
jle
dec
push
loopne
add
adc
inc
and
cmp
ret
xchg
jo
fcom
add
adc
cwtl
test
leave
push
dec
orl
loopne
lret
xor
sub
mov
push
sub
push
fbstp
xor
adc
xchg
mov
sbb
mov
rcll
mov
jp
mov
clc
add
enter
decl
loop
add
push
push
add
push
dec
add
pop
inc
cmp
inc
inc
rcrl
sar
pushl
cmp
and
je
cmp
push
push
sub
dec
mov
jecxz
es
fidivl
adc
and
sbb
outsl
jp
mov
das
cmp
cld
cmp
adc
inc
xor
movsl
call
and
das
mov
mov
xchg
je
loop
lods
mov
add
add
enter
add
cli
mov
hlt
cs
stos
mov
adc
clc
outsl
clc
test
rorb
rolb
push
sti
movl
xor
pop
je
push
loop,pn
xor
test
test
add
std
cmpsb
pop
inc
inc
adc
and
pop
test
mov
push
sub
popa
adc
clc
jo
imulb
rorl
adc
jecxz
sbb
or
mulb
add
movsb
cs
adc
xorb
pop
aad
lret
inc
cmp
fistps
add
mov
sub
mov
xchg
push
inc
mov
loopne
es
cli
jmp
js
pusha
mov
lods
inc
xadd
or
pusha
ljmp
or
aaa
or
outsb
or
popa
push
add
test
je
inc
push
bt
sub
daa
push
in
lcall
lret
and
cld
push
aaa
inc
or
and
or
movsb
mov
sbbl
ror
xor
xor
aaa
jge
andl
and
push
movsb
jg
decl
push
xchg
enter
jno
mov
stos
add
push
or
out
rcrb
enter
ret
inc
add
jecxz
lock
mov
adc
mov
jo
ret
nop
add
sbb
ret
ja
ret
dec
dec
push
sub
dec
jle
popa
adc
mov
push
out
pop
movsl
cmp
rcrl
rorb
mov
pop
mov
xchg
nop
sbbb
inc
fadds
or
jl
cmpb
jb
sahf
xor
sbb
in
out
popa
mov
nop
sub
inc
add
push
inc
adc
push
insb
movsb
and
pop
test
in
add
in
mov
add
shlb
fsubs
push
lret
sahf
gs
enter
popa
fsubl
adc
sbb
push
rclb
outsb
add
out
fisttps
les
jo
add
inc
adcb
cmp
aam
fsubl
pop
pop
xor
insb
xlat
rolb
cwtl
into
pusha
push
loopne
clc
loope
push
aaa
hlt
add
rcrl
or
lock
cmpsb
decl
sbb
push
adc
pop
mov
pop
nop
scas
outsl
mov
inc
adc
insb
xor
push
push
insb
xor
xor
test
rcl
jno
inc
ficoms
rolb
inc
push
movsl
test
pop
pop
fisubs
ja
dec
movsb
or
pop
xlat
push
mov
push
push
sbb
imulb
push
push
xor
gs
addb
addb
cwtl
dec
loopne
push
out
and
ror
or
or
in
xchg
jbe
insb
and
hlt
fistpll
sbbb
add
cmp
push
enter
jo
adc
movsb
jge
ret
lcall
add
pushl
ja
rolb
sbb
mov
jmp
ds
and
clc
inc
mov
mov
les
push
sub
popa
jge
fs
adc
and
push
jno
aaa
and
andb
xchg
test
adc
shlb
mov
pop
and
clc
add
in
fldcw
mov
add
movsl
test
cmp
pop
ror
cmp
or
pop
xor
xor
icebp
out
inc
mov
idiv
pop
sbb
lret
xchg
inc
mov
mov
pop
xor
jae
xchg
pop
adc
push
lret
jl
add
enter
xchg
lock
lcall
int3
add
add
push
enter
add
outsl
mov
movsb
sub
out
es
ja
loopne
loop
mov
and
push
mov
icebp
sbb
or
cmp
add
jecxz
cltd
pop
fs
lcall
xchg
or
inc
add
sti
dec
jne
cs
inc
sub
jbe
cmpsb
mov
js
movsl
jmp
add
arpl
loopne
add
sbb
and
mov
xchg
sub
sahf
sbb
icebp
stos
jg
xchg
inc
cli
jle
mov
add
jmp
push
sbb
xor
stos
add
pop
cmpb
fists
pop
out
add
lret
sub
add
stos
fcoms
popa
call
dec
jmp
mov
out
call
dec
xchg
or
xchg
add
and
sti
mov
lcall
jp
mov
subl
adc
and
add
lods
xor
cld
das
add
mov
push
adc
dec
cmp
jbe
pop
mul
mov
sbb
add
adc
mov
adc
pop
loop
aad
aaa
and
mov
adc
cli
pop
ljmp
sub
xor
fnsave
gs
std
jmp
jbe
push
adc
lods
cwtl
adc
lods
nop
add
adc
sub
outsb
xchg
xor
inc
loopne
add
and
mov
adc
loopne
push
and
jne
xchg
push
je
adc
cli
and
cltd
call
or
clc
xchg
push
inc
or
add
jno
jo
ja
cld
jg
scas
pop
dec
add
sub
in
inc
inc
and
lret
xor
icebp
add
movsb
fwait
add
pop
sahf
loopne
shll
pop
jge
sbb
or
or
mov
mov
xor
pop
push
stos
cmpsb
or
scas
sbb
inc
pop
inc
add
enter
fld
inc
add
push
lahf
rcll
pop
ret
filds
enter
call
push
xor
mov
push
fs
mov
enter
lea
jbe
add
enter
xchg
adc
add
inc
test
xor
push
push
add
add
fistpll
push
pusha
subl
ljmp
bound
sahf
rclb
jno
pop
adc
enter
and
pop
adc
xor
roll
enter
or
pusha
adc
test
mov
xchg
pop
mov
fstpt
xor
clc
les
and
lcall
mov
filds
inc
and
adc
or
jge
add
jne
out
stos
and
inc
and
or
mov
push
decl
and
and
pop
push
dec
jl
push
idivl
xor
jge
cmp
sar
decl
xor
or
pop
add
cmp
adc
sub
add
nop
or
sub
add
out
test
andb
aas
clc
jmp
or
inc
ret
dec
push
xchg
or
xchg
or
or
popf
adc
call
xchg
or
lret
adc
jg,pt
call
adc
add
leave
xor
mov
shrl
or
or
inc
and
lock
cmp
pusha
dec
fs
jmp
stos
stos
out
push
sub
jmp
inc
and
sbb
sub
daa
cmp
inc
adcb
and
shlb
mov
add
dec
shl
andb
dec
ljmp
mov
ds
jg
jle
int3
mov
sub
dec
mov
dec
cmp
xor
jae
fadd
sbb
mov
dec
sub
pop
sub
pop
data16
push
mov
push
and
adc
add
and
and
clc
mov
clc
jne
add
push
cmpsb
and
and
add
popa
ja
xchg
add
jbe
rclb
popf
cmp
xor
xor
xor
adc
js
incb
dec
push
loopne
push
or
sbb
sbb
mov
mov
fsub
xchg
jle
adc
mov
jae
shr
add
pop
add
inc
pop
test
jbe
push
inc
test
sbb
jp
je
mov
mov
push
mov
fnstsw
lcall
xor
movsb
or
loopne
dec
adc
inc
scas
int3
loopne
sub
mov
fcoml
push
clc
mov
add
add
loopne,pn
scas
add
or
or
lcall
lock
int3
jo
or
adc
sbb
add
and
add
out
int
adc
inc
mov
je
xor
and
aas
cmpb
dec
add
movsl
nop
fstpl
and
addb
in
add
std
dec
insb
xor
fists
add
stos
adc
movlps
adc
stos
ror
and
inc
cmc
addb
or
sarb
es
es
or
push
into
jno
jne
jle
lock
adc
out
and
mov
or
sbb
dec
or
test
rcrb
xlat
repnz
orb
sbb
dec
jg
inc
adc
repz
sbb
jmp
fists
push
cmp
roll
je
sbb
aaa
cmpl
sbb
stos
add
inc
push
les
loope
sub
push
or
lea
add
ljmp
int3
test
inc
mov
fiadds
ljmp
cmp
or
inc
inc
jo
movsl
xor
push
inc
mov
pop
addb
push
or
or
sbb
cwtl
sub
pop
mov
xchg
popa
mov
ss
pop
cmp
sub
mov
sub
or
adc
or
pop
mov
bound
shrb
mov
xorb
std
cmp
jo
enter
imul
mov
cli
jle
sbb
jg
mov
shlb
sbb
adc
sbb
jo
outsl
clc
fwait
in
mov
xor
xchg
adc
pop
test
mov
jo
adc
rcrl
cmp
mov
insb
mov
xor
jmp
mov
or
push
lock
and
inc
mov
or
add
les
mov
sahf
xor
xchg
push
stos
lahf
xor
loopne
mov
out
test
push
jecxz
dec
sbb
test
rclb
dec
mov
or
add
cmp
cmp
test
fidivrs
sub
sar
cmpb
mov
cmp
mov
or
adc
jne
pusha
or
testb
repnz
add
mov
jp
js
sbb
hlt
inc
in
testb
sbb
jl
add
adc
shlb
lock
push
aaa
sbb
pusha
inc
shll
cmp
cmp
inc
add
pop
jno
mov
test
shlb
insl
fists
inc
pop
push
dec
push
ficomps
repnz
imul
jne
lret
movsb
ficoms
das
xchg
push
inc
pushf
es
outsl
lods
sahf
ficoms
test
es
fs
sbb
insl
sub
push
dec
repnz
add
imul
sub
adc
test
addr16
mov
int3
stos
or
mov
push
test
stos
insl
fisubrs
mov
dec
rolb
mov
jecxz
insb
insl
jae
and
dec
and
loope
pusha
mov
sar
add
stos
xor
das
subb
lret
pop
out
pop
std
dec
test
outsb
push
movb
adc
icebp
loope
and
mov
xchg
fdiv
jne
fldenv
loope
add
into
and
inc
push
pop
clc
shrl
and
and
test
aad
aaa
and
inc
ret
decl
or
loope
adc
ljmp
xchg
and
push
xor
ret
pop
adc
test
in
mov
dec
inc
test
aad
sbb
out
loopne
sub
or
fwait
sbb
and
push
xor
stos
jge
test
add
andb
push
pop
jg
sbb
sbb
sub
xor
push
dec
adc
lods
pop
push
stos
stc
sub
incl
mov
sbb
lcall
sbb
push
outsb
adc
movsb
jmp
loopne
stos
sub
and
scas
lret
adc
push
sub
loope
dec
sbb
sbb
mov
imulb
jecxz
add
jl
push
in
push
daa
data16
orb
add
test
bound
add
or
sbb
xor
or
dec
adc
shll
enter
pop
insl
fisubrl
fbld
and
sub
loopne
pop
xor
sub
test
mov
jbe
cmp
frstor
jno
dec
cmp
sub
lock
sub
sbb
sbbb
mov
xor
mov
inc
les
mov
shrb
pop
lods
sub
xor
and
shrl
adc
fwait
push
sub
mov
sbb
and
jo
jo
mov
outsl
sub
popf
shlb
stos
insb
add
sub
push
testb
add
mov
push
pop
ret
add
push
pusha
jae
jbe
loopne
rclb
and
pusha
pop
ljmp
push
dec
mov
add
fcmovb
fildll
sbb
cmp
or
push
mov
sbb
jg
mov
loope
pop
outsl
push
out
adc
xor
pop
ss
adc
add
cmp
adc
or
sub
addl
clc
add
jmp
insl
xchg
pop
mov
push
xor
inc
call
int
mul
out
loopne
cli
cmp
push
scas
xor
jbe
jno
and
leave
jecxz
sub
and
enter
stos
xor
add
push
xor
sub
cmp
mov
sbb
int3
add
push
mov
fsubr
js
inc
pushf
add
je
test
add
mov
cmp
lock
movsl
loopne
into
xor
adc
or
scas
outsb
and
or
fs
pop
ret
sbb
pop
push
push
push
repnz
cmc
or
xor
cld
jmp
loop
ss
rorl
or
or
lcall
stos
notl
inc
add
or
fildl
mov
or
jecxz
inc
call
jecxz
or
and
push
leave
xor
lea
cmp
or
lock
push
xor
lret
rcrb
push
add
incl
and
sub
enter
mov
shlb
imul
push
daa
cwtl
incl
push
jp
lret
add
sub
add
js
incl
add
xor
mov
ss
mov
mov
pop
xor
push
call
lcall
fisttpl
add
fnstcw
pop
and
jg
loop
push
arpl
lret
sbb
push
add
add
dec
hlt
add
ss
outsb
and
inc
or
out
add
xchg
sub
fbstp
push
fcom
sbb
std
push
fsubrl
and
jo
cmp
andb
sbb
push
add
adc
mov
sbb
mov
sub
sub
jg
icebp
ljmp
out
fbstp
test
sub
push
push
icebp
push
add
dec
js
and
lock
inc
stos
pusha
insb
inc
jg
mov
inc
sub
mov
jno
cmp
mov
enter
int3
sbb
xor
dec
out
sbb
lods
test
jo
push
adc
add
xor
mov
inc
add
nop
aaa
mov
enter
je
inc
pop
insb
aam
jmp
mov
mov
mov
jle
mov
pushf
sbbb
mov
adc
repnz
clc
pop
push
js
inc
mov
les
mov
push
leave
out
adc
mov
jo
mov
enter
sbb
mov
mov
and
xor
add
imul
inc
insl
stos
jbe
loopne
cmp
leave
scas
shl
sti
pop
or
jle
outsl
inc
test
mov
add
sarb
mov
jmp
inc
cmp
adc
enter
push
or
jb
lods
mov
inc
pop
cli
fldl
mov
mov
pop
inc
inc
jl
or
aaa
cmc
das
movsl
adcl
add
loope
cltd
xchg
adc
mov
mov
add
push
and
xor
push
pop
addb
add
xor
or
or
add
pusha
push
insb
ja
or
fdivr
jmp
lock
adc
add
inc
aam
adc
mov
mov
push
dec
push
add
add
mov
cmp
jl
push
xchg
lcall
test
divb
or
jle
sbb
loopne
dec
and
mov
xor
adc
push
loopne
fists
mov
push
shl
ljmp
adc
sbb
jo
sbb
xchg
insb
adc
pusha
cld
jae
jg
push
frstor
je
add
das
sarb
enter
and
stos
adc
inc
sbb
jle
mov
jg
cmp
sti
xchg
xchg
sti
jmp
shl
and
sub
mov
push
push
inc
push
add
pop
fs
jp
inc
sbb
mov
arpl
mov
mov
xchg
push
push
or
and
enter
push
or
test
fsubrs
test
dec
rcl
dec
and
out
add
adc
mov
call
test
adc
enter
sbb
sbb
pop
cmp
add
mov
mov
outsl
mov
pop
and
push
mov
aam
push
or
xchg
fiadds
sbb
mov
add
loopne
lds
loope
add
mov
inc
add
push
fildll
push
add
jo
aas
in
cld
push
push
shr
dec
test
and
xorb
cltd
loopne
sbb
cmp
stos
add
dec
cmp
add
xor
and
adc
cmp
add
ja
adc
xchg
pusha
aas
or
or
inc
fwait
or
or
xor
push
ja
je
lock
or
push
add
ds
dec
add
mov
sub
jmp
adc
or
pop
add
test
push
je
push
inc
in
ljmp
gs
and
push
jbe
push
or
jo
add
xchg
mov
rolb
std
mov
cs
fbstp
push
or
add
das
clc
ja
adc
movsl
add
fisubs
xor
add
add
push
ljmp
pop
push
data16
jo
xlat
enter
iret
int3
push
int3
push
xor
dec
sub
mov
pop
jle
mov
shll
and
dec
xor
lods
int3
lods
pop
fdivl
jp
cmp
push
or
mov
push
and
push
cmp
fidivl
inc
push
loopne
cs
lock
or
in
push
stos
cmp
enter
and
addb
aas
xchg
inc
inc
cmp
fcomip
aas
add
xor
nop
cmp
xchg
inc
in
pop
add
sbb
push
sub
jg
xor
rorb
pop
dec
js
adc
imul
stos
add
call
or
cmp
fidivs
rcl
mov
fnstcw
addr16
pusha
pop
loopne
stos
or
insb
add
xor
push
add
push
add
pop
cmp
inc
insb
mov
orb
jl
sub
lock
jbe
outsb
nop
fmul
xor
mov
xor
mov
mov
icebp
nop
mov
js
push
xorl
dec
nop
push
pushf
and
enter
add
js
sbb
pusha
leave
dec
and
roll
fnstenv
jecxz
pusha
add
mov
test
sub
cld
and
push
jo
pop
hlt
sbb
dec
inc
xor
negb
movsl
test
pop
test
cmp
je
dec
test
pusha
aaa
in
add
add
xor
cli
in
pop
je
xor
outsb
and
ljmp
mov
adc
stos
add
lods
jo
mov
mov
add
sbb
and
jmp
cmp
aaa
push
jl
das
fimull
add
lret
daa
loopne
and
mov
out
dec
es
xor
fsubl
xchg
sub
sub
and
sbb
enter
mov
orb
sarl
sbb
lahf
xchg
add
inc
xor
lcall
mov
pop
lret
hlt
mov
push
lea
loopnew
cmp
inc
mov
and
mov
scas
dec
dec
add
sbb
or
sub
pop
icebp
xor
xor
outsl
lcall
in
mov
icebp
xchg
sbb
sbb
pop
out
inc
inc
enter
or
jge
cld
test
int3
fs
pop
lods
jge
add
sbb
xlat
mov
mov
sub
out
push
or
pop
mov
sbb
aas
and
rclb
pusha
adc
test
add
add
arpl
dec
sbb
jl
sub
pop
push
pusha
insb
sub
das
inc
mov
cmp
inc
sbb
dec
shl
adc
sub
and
or
push
xor
gs
add
je
dec
add
add
adcl
or
mov
xor
and
xchg
add
lcall
subb
sbb
das
addl
jge
xor
and
inc
dec
insl
lods
sahf
add
fs
cli
adc
mov
movsb
bnd
ja
rcl
dec
fcmovu
fisubl
hlt
out
je
jbe
adc
fidivrl
or
xchg
push
and
callw
ss
lods
jp
xor
outsl
push
or
and
ljmp
lods
lret
push
xor
xchg
movsl
int3
movsl
sbb
rorb
or
ja
xchg
jmp
loope
pop
pushf
and
filds
mov
add
rolb
adc
add
aam
loop
loopne
dec
mov
js
insl
xor
push
adc
lcall
mov
cld
sub
ror
adc
pop
ret
bound
add
ret
mov
sbb
out
out
dec
jmp
mov
sbb
loopne
sbb
js
rcr
add
enter
out
addl
int3
aam
mov
cmp
roll
fsubrs
sub
inc
loope
outsb
mov
mov
pusha
cld
cmp
adc
enter
inc
or
add
sub
and
outsb
cmp
add
ret
sub
scas
pop
in
arpl
jecxz
addb
mov
add
lods
insl
fidivl
cmpsb
es
aad
stos
adc
enter
mov
ss
xor
push
enter
and
cs
pop
clc
in
sbb
inc
push
and
enter
orb
stos
outsl
xor
add
cmp
movsl
pop
mov
add
and
sti
or
rorl
call
roll
xor
xorl
or
ror
hlt
clc
loopne
mov
push
jo
rorb
inc
dec
pop
cmc
sbb
push
pusha
and
inc
outsl
jl
mov
sbb
mov
adcl
or
push
and
add
push
mov
imul
mov
pop
push
test
addb
cmp
popa
roll
inc
loop
add
push
sub
pushf
pusha
jge
std
fisttpl
adc
jge
sbb
pop
jp
enter
inc
mov
dec
arpl
mov
ret
add
mov
add
and
mov
sbb
sub
pusha
add
std
filds
adc
movsl
jmp
push
adc
and
or
ljmp
test
mov
mov
sti
lcall
aam
pop
pop
sub
pop
dec
ret
fldl
push
mov
and
sbb
test
mov
or
cld
sarb
test
jp
loopne
nop
addl
inc
xchg
nop
in
mov
inc
es
and
cmp
add
cmp
ljmp
sbb
push
lcall
fdivp
mov
and
sub
mov
mov
and
add
incl
subl
sub
pusha
mov
shrb
or
enter
sbb
sub
mov
push
add
hlt
ljmp
stos
insl
cmp
enter
sub
aam
fistpll
push
and
sub
ja
nop
mov
jp
lock
scas
sub
mov
mov
mov
stos
mov
lret
rcr
sbb
jg
rolb
and
or
testb
std
inc
adc
cmp
push
test
roll
sub
pop
add
enter
mov
and
incl
dec
xor
sbbb
add
and
loopne
inc
stos
inc
aam
push
inc
lcall
lret
xchg
movsl
mov
es
jno
pop
adc
stos
dec
scas
lods
mov
jg
pusha
push
pusha
rorb
xor
rcrb
enter
rolb
pop
adc
pop
cmc
lcall
bts
das
adc
popa
ret
rcrb
inc
ss
cmp
pop
pop
fadd
dec
and
mov
sbb
lret
outsl
sbb
xor
mov
fstpl
sub
arpl
pusha
adc
js
push
das
clc
out
pushf
fs
pop
lods
and
xlat
enter
dec
or
mov
inc
nop
js
rclb
popl
ret
mov
ja
jle
pusha
dec
add
lock
add
enter
incl
in
and
jg
push
mov
jae
inc
xor
lods
inc
push
or
inc
mov
sbb
movsb
mov
inc
add
ja
push
add
xor
push
ljmp
arpl
dec
inc
je
push
aaa
js
add
xchg
push
add
inc
mov
sbb
jbe
xchg
leave
mov
xor
sbb
jne
mov
pop
dec
jg
ret
sub
add
cmp
dec
pop
dec
mov
sub
adc
xchg
js
lret
sub
add
jne
call
fdivl
ret
and
pusha
push
mov
jo
pusha
sbb
mov
out
dec
add
dec
jge
and
and
pop
stos
enter
rcr
mov
stc
push
cmp
enter
outsl
addb
pop
push
sub
xor
or
shrb
cs
xor
mov
call
testb
ret
xor
dec
andb
lods
cmp
push
mov
pushf
adc
test
stos
xlat
test
movups
fsubr
stos
mov
incl
addb
adc
fbstp
add
ja
outsb
xor
shlb
jl
dec
push
scas
jbe
divb
nop
add
dec
mov
es
cmp
add
xchg
fs
and
out
loop
inc
cmp
add
addr16
je
orb
jg
push
or
cli
jecxz
pop
nop
push
test
push
xor
scas
test
mov
mov
cmp
push
in
mov
cmp
xor
jo
clc
call
adc
int
adc
push
leave
mov
xor
fadds
add
mov
mov
and
xchg
xchg
inc
loop
cmp
inc
jecxz
pusha
and
xor
filds
call
hlt
ja
lahf
shlb
adc
or
enter
cmp
ja
fwait
push
xor
and
adc
or
push
shlb
cltd
movsl
jg
xor
cmpsb
xchg
xchg
or
or
jmp
loop
xchg
sbb
or
add
ja
mov
push
stos
mov
sarb
nop
push
xor
lods
pusha
mov
paddd
add
dec
inc
jb
and
fadd
or
clc
adc
hlt
nop
or
fmull
aas
jle
pop
mov
adc
jg
xor
or
add
push
or
and
out
and
lock
inc
mov
mov
sbb
push
cld
cs
and
push
dec
test
scas
fwait
enter
jecxz
pop
mov
sbb
and
or
and
shr
popa
dec
andb
outsb
jp
pusha
ljmp
jb
adc
mov
or
jl
jle
or
jmp
pop
jecxz
push
daa
sbb
sbb
adc
lods
rolb
add
cmp
or
es
cltd
cmp
repnz
loopne
add
add
pushf
and
rolb
test
dec
aaa
fdiv
push
test
pop
int3
loope
dec
stos
std
push
add
cli
fwait
mov
mov
mov
adc
rcll
movsl
adc
adc
subb
aam
add
jmp
loopne
lock
adc
movsl
xor
push
xchg
arpl
ss
jle
adc
xchg
add
mov
mov
xor
lock
adc
in
push
jo
push
lods
les
xchg
shlb
jno
mov
nop
clc
mov
inc
lods
pop
xor
ret
cwtl
out
mov
mov
adc
ljmp
adcb
xchg
push
inc
and
and
mov
test
outsb
and
inc
and
push
push
icebp
jno,pn
aaa
adc
scas
popa
repnz
add
popa
push
in
push
push
ja
sbb
fwait
adc
test
or
pop
push
cwtl
cmpsb
push
add
dec
xor
pusha
pop
add
decl
and
xor
enter
or
lock
sbb
push
push
mov
adc
adc
outsl
pusha
mov
and
mov
pop
and
or
addl
popa
mov
push
or
adc
dec
outsl
cli
mov
xorb
clc
pop
and
addb
shlb
or
enter
jo
jg
loopne
push
or
mov
push
loopne
inc
aad
std
or
inc
aad
sub
enter
xor
push
mov
nop
clc
inc
add
insl
cwtl
inc
enter
fmuls
loopne
mov
add
loopne
scas
adc
inc
or
lods
mov
sar
dec
sbb
dec
adc
mov
mov
add
daa
mov
decl
inc
add
aam
and
lods
sbb
adc
xchg
in
xlat
jno
ja
nop
ficoms
mov
fists
push
data16
ret
cld
nop
or
or
incl
jae
rorb
xor
jbe
pop
sub
mov
xchg
ja
int
mov
shlb
adc
mov
jg
enter
out
cmp
lock
add
adc
jnp
add
loope
sub
inc
shll
lret
xor
jbe
dec
testb
cmpb
jns
and
subb
or
mov
and
and
or
pop
lret
or
inc
call
in
jg
lock
adc
add
sbb
add
push
and
xchg
jo
push
and
enter
nop
fwait
or
insb
sbb
dec
ljmp
lcall
clc
lret
shl
xor
loop
cmp
xor
loop
xor
lock
push
nop
decl
cmp
cmp
cmpb
lret
shlb
std
scas
insb
cld
lret
rcll
sbb
adc
mov
sbb
add
cmp
add
mov
and
jecxz
hlt
mov
mov
adcb
loopne
lods
lea
xchg
lods
orl
push
adc
inc
and
xor
test
add
add
sub
inc
xchg
adc
test
clc
mov
orb
rclb
call
or
int
and
ds
and
xor
pushf
sub
mov
ficomps
jno
rcr
add
ljmp
and
or
adc
cmp
add
test
jecxz
movsl
push
andb
das
xchg
mov
sub
mov
data16
mov
add
sbb
xor
jp
adc
and
pop
mov
lods
pusha
mov
es
inc
dec
jno
rcrb
pusha
dec
js
add
and
ret
pop
or
jae
movsb
lock
dec
ja
or
xor
xorb
push
cmp
inc
pop
loopne
xchg
sbb
out
in
addl
rsqrtps
dec
mov
stos
pusha
lock
mov
xor
add
sbb
test
or
sub
mov
enter
fldl
mov
out
pop
cmpsl
je
pushf
sti
dec
int3
adc
adc
adc
or
or
pop
or
sbb
sub
inc
test
cmp
std
dec
xlat
add
cmp
inc
out
add
test
or
dec
lea
sub
add
fadds
fwait
mov
add
adc
out
nop
jae
addb
adc
push
push
jl
add
inc
test
arpl
mov
push
push
push
mov
add
inc
fisttps
jle
sub
jo
insb
push
fdivr
subb
cmp
xchg
cmp
jns
inc
pop
enter
sub
add
sarl
sbb
pusha
inc
je
arpl
movsb
cmp
cmp
enter
lods
addl
insl
enter
push
loope
push
inc
ja
pop
pushf
add
add
xchg
jl
loopne
dec
or
pop
test
ljmp
add
js
je
add
fsubl
loop
jge
ja
dec
and
cmc
inc
cmp
mov
push
sub
sbb
xor
adc
cmpsb
es
inc
fwait
xor
sub
mov
inc
cld
add
dec
adc
mov
fadd
dec
sbb
dec
inc
jl
enter
and
and
notb
push
adc
and
rclb
lret
sbb
sbb
cmp
mov
jp
jge
loopne
and
movsl
leave
push
fists
mov
add
xchg
inc
mov
fidivl
rcl
xor
add
or
fisubl
add
rclb
dec
inc
or
add
add
inc
or
scas
ljmp
das
addb
cmovb
sbbb
icebp
sub
out
jecxz
push
sub
push
jae
ja
mov
adc
inc
push
and
sbb
loopne
adc
les
inc
lods
xchg
loopne
or
in
or
dec
scas
mov
sbb
cmpsl
test
jp
push
loop
enter
cld
dec
inc
xor
sub
rorb
rolb
js
mov
rolb
sub
lcall
adc
and
push
in
push
pop
mov
jae
add
adc
bound
add
adcb
push
es
lret
ss
outsl
xchg
lret
hlt
push
enter
add
sbb
and
add
sbb
sbb
decb
jnp
jmp
fcomp
push
stos
mov
add
inc
push
sub
imul
sti
lret
push
push
inc
add
incl
das
movsl
mov
adc
rorb
cmp
dec
incl
int3
mov
add
add
jnp
jecxz,pn
sbb
push
sbb
add
stos
inc
push
out
add
subb
jae
push
cmp
cmp
add
ja
jbe
lods
inc
lret
jae
sub
jbe
in
ret
incl
cmp
roll
les
rorb
add
rcrb
enter
iret
and
or
cmp
sub
sbb
add
call
mov
loope
push
adc
loopne
mov
sar
cmp
aaa
mov
rclb
adc
loopne
pusha
adc
xor
scas
decl
cmpsb
and
es
mov
cs
push
jae
stos
aam
ljmp
jecxz
mov
movl
or
xor
sti
ffreep
xorl
out
fs
nop
fisttps
mov
push
sub
sbb
js
mov
and
fbld
leave
sub
lea
adc
dec
push
or
sbb
jl,pt
inc
ja
mov
loopne
xor
mov
dec
pop
sarb
push
inc
in
or
out
data16
enter
or
xor
push
aas
test
xchg
pop
push
push
push
inc
cmpl
and
loope
clc
add
mov
lea
mov
inc
adc
or
sbb
cli
sbb
ds
sub
push
dec
loop
aaa
mov
push
inc
hlt
pop
loopne
or
ljmp
add
decb
das
loope
xchg
sub
js
out
ret
ja
lds
dec
and
or
loopne
cmp
add
loopne
loopne
inc
rolb
fnstcw
addb
fiadds
aaa
xor
es
lret
sbb
ret
sbb
or
test
jg
mov
or
enter
xor
or
jg
pop
sub
and
rorb
pusha
ret
test
clc
shrb
cmp
pop
sub
pop
shlb
rcrb
fdiv
adc
movsb
jecxz
add
pop
or
xchg
or
add
loop
enter
dec
push
enter
push
inc
aad
jg
inc
fsubrs
andb
pusha
or
and
or
cld
outsl
nop
pop
jecxz
sbb
add
mov
sbb
pop
and
adc
jb
jno
out
mov
pusha
fsubp
push
pop
dec
mov
ja
sarb
adcb
fwait
ljmp
dec
lock
int3
mov
mov
aas
sbb
cmp
dec
sbb
dec
push
pop
add
xor
and
add
mov
and
mov
ja
or
mov
lock
cwtl
ret
xchg
jl
lods
push
shlb
xchg
lock
and
mov
cmpsl
and
jo
inc
xchg
add
mov
rcrl
mov
add
fisttps
or
mov
add
adc
add
inc
mov
push
jecxz
and
loopne
mov
nop
js
call
rolb
push
xor
add
push
sbb
mov
call
mov
jno
xchg
inc
cwtl
addb
add
xor
xorb
or
add
push
cmp
cmp
stos
mov
in
into
xor
lods
lret
and
inc
mov
xor
das
dec
xchg
push
add
std
mov
push
mov
push
dec
enter
push
adc
mov
adc
or
mov
xor
add
xor
sub
clc
mov
sub
push
xor
enter
aaa
inc
add
test
push
or
push
lock
add
lcall
or
mov
adc
sbb
sbb
cmc
push
jmp
and
xchg
mov
xor
xor
add
sbb
and
jbe
adc
sbb
sub
cwtl
add
ffree
aas
push
add
pop
inc
aas
mov
jae
adc
sub
xchg
xchg
push
sahf
clc
hlt
fneni(8087
add
or
pop
je
jmp
dec
shrb
mov
jp
pop
xchg
loopne
loopne
ret
cmp
mov
or
out
xchg
ljmp
in
push
xor
adc
nop
sbb
mov
or
pusha
pop
ja
jo
loop,pn
sti
sbb
or
add
std
pop
dec
insb
pusha
mov
add
mov
outsl
clc
call
jno
ja
adc
enter
adc
adc
xchg
mov
int
decb
push
cmp
ja
rcrl
insb
rcrb
test
insw
sub
test
lds
fwait
push
cwtl
test
outsb
or
jbe
bound
or
jl
loope
ficoms
sbb
cwtl
sub
cmp
cwtl
mov
pop
xchg
addb
ret
dec
test
add
push
cwtl
loop
push
jmp
jl
pop
push
jl
sbb
stos
sbb
inc
test
fcomp
and
rol
call
or
lods
insl
in
mov
enter
add
mov
adc
repnz
jle
arpl
sbb
add
jb
ljmp
fidivs
mov
push
mov
movsl
nop
push
movsl
push
mov
ljmp
sbb
inc
pop
adc
rcr
aam
call
and
notb
lods
jge
mov
jae
pop
test
inc
test
add
or
cld
ja
bound
jae
mov
mov
pop
icebp
mov
push
xor
stos
mov
popa
jo
inc
pop
inc
fbld
sarb
inc
enter
pusha
pop
icebp
mov
inc
and
nop
xor
je
adc
in
lods
mov
adc
stos
cmp
add
call
push
add
xor
das
movsb
int3
add
inc
or
push
mov
sbb
xor
pusha
add
pop
icebp
call
xor
rcl
sti
jecxz
cmpb
jo
sbb
inc
and
decl
dec
mov
sub
xor
lahf
nop
add
inc
dec
loop
movsl
push
iret
add
and
or
out
clc
pop
and
adc
jbe
mov
add
out
adcb
mov
adc
push
mov
adc
mov
add
xor
mov
bound
and
jmp
test
dec
mov
pushl
or
dec
push
outsb
dec
aam
push
jge
aaa
cmpsl
fcoml
mov
rol
xchg
sbb
ja
cmp
xor
push
xchg
and
leave
mov
push
sbb
xchg
jbe
mov
adcb
insb
enter
lcall
mov
cmp
or
aad
mov
clc
rorb
mov
and
and
iret
fmuls
std
cmp
and
sbb
add
mov
mov
cmp
cmp
incl
imul
and
mov
enter
pusha
lods
test
adc
stos
jecxz
inc
cmpsb
ds
movsb
xor
add
rclb
mov
nop
out
stc
or
test
adc
push
push
cwtl
jo
dec
add
adc
lock
or
cmpb
lahf
push
and
into
jl
nop
shrb
dec
jae
in
lods
mov
pop
insb
cmp
ss
add
add
or
movsb
cwtl
aam
cwtl
jae
add
adc
xchg
mov
jg
adc
inc
xor
mov
cmpsb
cld
push
pop
aaa
cmp
div
jo
pop
add
mov
enter
out
cmp
pop
loopne
inc
aam
test
jo
out
clc
jecxz
or
enter
mov
sub
shrb
or
shr
pusha
nop
sbb
lea
rorl
add
and
aaa
inc
add
add
bound
mov
and
inc
orb
adc
add
sbb
mov
shlb
pusha
movsb
or
add
ret
sbbb
and
shl
and
inc
sbb
or
dec
add
push
aam
jle
rcl
repz
or
pop
sub
aad
lods
daa
movsl
xor
das
test
add
sahf
add
sar
add
cmp
repnz
xchg
call
stos
in
push
and
add
orb
and
into
out
rorl
pop
pusha
stc
inc
pop
sub
stos
pop
fists
mov
mov
xchg
dec
or
adcb
call
inc
ret
jns
popa
sbb
sub
cs
adc
cwtl
arpl
js
adc
or
push
xchg
fadds
shlb
push
inc
cmp
cwtl
aad
pusha
nop
sub
hlt
inc
and
pop
jle
mov
in
enter
sub
add
adc
and
jbe
sub
add
sbbl
sub
aam
gs
test
aaa
push
xor
notb
pusha
ja
mov
lret
roll
pop
lea
outsb
jns
sbb
arpl
mov
leave
cld
addb
jb
mov
push
mov
or
lcall
jecxz
push
add
mov
mov
adc
push
test
fsubs
shrb
push
or
push
adcb
xchg
clc
fists
inc
mov
cltd
mov
cltd
mov
add
insb
ss
mov
bound
in
ror
repz
cmp
add
test
xor
mov
mov
shlb
adc
add
sbb
sbb
mov
jne
and
sub
es
shrb
lret
rclb
ljmp
add
test
mov
fwait
nop
and
rcll
or
lods
mov
and
rorb
decl
mov
mov
sbb
adc
fldl
and
mov
push
add
cwtl
enter
jp
jg
inc
sbb
sub
mov
push
add
or
subl
loope
add
inc
mov
adc
dec
loope
push
fs
int3
jo
and
add
imul
and
sub
loop
lret
std
cmp
mov
and
sbb
jge
cmpsb
inc
adcb
aad
mov
scas
test
fninit
ds
add
cmp
inc
add
xor
mov
mov
subb
dec
fsubrl
inc
dec
rolb
mov
aam
sar
popa
cmpsl
mov
mov
movsb
push
or
lret
aas
add
inc
imul
ljmp
add
pop
enter
or
sbb
pop
je
sbb
and
sbb
pop
enter
dec
and
sub
jecxz
jg
jne
cmp
lret
jnp
movsl
je
pushf
loope
add
shl
decl
ja
jg
mov
and
dec
add
inc
les
roll
push
mov
or
dec
cld
dec
push
jo
pop
cmc
xchg
sarb
and
mov
mov
dec
ss
pop
mov
pop
rcll
test
dec
xchg
ss
mov
inc
adc
sbb
inc
or
ja
or
or
orl
lds
push
pusha
dec
mov
inc
xor
pop
scas
push
or
or
clc
pop
lcall
adc
out
ret
adc
and
jne
popa
xchg
jb
call
icebp
pop
test
sub
pushl
jae
sarb
mov
mov
ret
pusha
dec
enter
jo
xor
xor
adc
push
lods
pop
mov
add
inc
xchg
mov
jg
jno
out
lods
and
or
xor
adc
out
xlat
aad
xchg
es
hlt
add
pop
call
loope
xlat
add
ds
cmp
test
push
add
push
mov
rclb
fs
out
sbb
push
or
lret
xor
loop
cwtl
xlat
shrb
ljmp
adc
mov
outsb
mov
cs
cmp
sbb
roll
or
add
insb
adcl
fcoms
jno
xchg
pushf
sub
cmp
jg
mov
andb
add
lea
sbb
ljmp
adc
cwtl
and
and
pop
add
xor
cld
fisttps
repnz
push
das
mov
ja
mov
andb
lret
addl
mov
icebp
jb
mov
nop
push
stos
and
xchg
add
cmp
jmp
sub
xorb
sbb
mov
int
sbb
xchg
xorb
bnd
or
dec
add
andb
andb
ret
ljmp
cmp
and
sbb
jle
xor
stos
xor
add
xor
xor
mov
andb
adc
mov
push
jae
cmp
push
call
sub
sarb
pop
mov
cmpsb
pushf
sub
lods
arpl
dec
jg
mov
mov
pop
add
add
cmp
data16
push
test
ljmpw
lods
insb
cmp
sbb
push
add
inc
icebp
add
cs
fildll
add
insl
adc
inc
call
add
pop
mov
and
addr16
adc
jg
rorl
inc
inc
jbe
inc
out
enter
inc
jbe
lret
sub
jno
or
in
filds
lods
and
or
loopne
and
push
push
nop
or
push
or
inc
jns
inc
cmpsl
jnp
f2xm1
pop
fists
add
fistpll
pusha
or
and
jge
add
mov
inc
xchg
adc
daa
ljmp
and
mov
push
aaa
shlb
call
in
out
and
inc
xchg
in
adc
out
add
or
push
inc
movsb
ror
jb
nop
mov
mov
idivb
mov
or
aaa
cmp
popf
js
xchg
test
decl
xor
xchg
popf
jnp
shll
out
sub
icebp
fnstsw
mov
inc
cmpsb
enter
mov
shl
push
adc
adc
lret
bound
call
das
cmpsb
imul
aaa
cli
or
icebp
or
inc
packsswb
decl
inc
movsl
ds
shll
int3
or
pop
adc
or
ds
and
movsl
adc
sbb
nop
inc
out
push
shlb
xor
pop
push
mov
inc
cld
mov
sbb
and
movsb
iret
and
scas
icebp
dec
push
lcall
push
ds
xor
outsl
enter
pusha
cmpsl
cld
inc
sbbl
mov
or
adc
push
push
push
mov
mov
and
xchg
xor
adc
push
clc
test
cmp
aad
sar
pop
mov
xor
rcrb
mov
sbb
sbb
push
mov
fbstp
repnz
test
stos
loopne
push
cmpsb
cld
addl
and
jmp
inc
lods
xchg
inc
mov
out
int3
and
decl
incl
sbb
jl
inc
mov
push
inc
push
fstpt
hlt
pop
sbbl
sbb
rorb
fildl
inc
jle
fs
add
incl
inc
push
inc
sbb
lret
inc
sbb
push
lods
and
xchg
int
sbb
lret
jbe
mov
and
jmp
enter
jae
ljmp
jne
addr16
andb
decl
jae
mov
add
dec
cmp
sbb
das
sbb
cmpsl
andl
outsb
enter
enter
leave
pop
dec
leave
mov
mov
sbb
inc
daa
test
jo
adc
add
icebp
shrb
or
loop
jbe
lock
push
mov
das
pop
movsb
xchg
sarl
int3
jp
ret
lret
outsb
xor
or
loopne
pushl
xchg
sbb
mov
lock
push
sbb
shrb
inc
call
xor
sub
jl
jecxz
int
rcr
pusha
fdivrl
and
rcrb
xor
enter
loope
fsubr
scas
xor
call
inc
stos
sub
mov
mov
pusha
shrb
inc
fs
std
lret
and
xor
lock
and
data16
jmp
xor
lret
clc
mov
mov
add
rorb
jle
or
nop
arpl
loope
push
jae,pt
jge
cmp
in
dec
push
push
icebp
push
mov
repnz
or
loope
lcall
pop
shll
or
int3
enter
or
pop
and
jmp
cld
loopne
push
pusha
and
jne
mov
add
jbe
ja
jle
lahf
add
fwait
push
shrb
ss
adc
inc
sar
popa
enter
loope
jo,pt
lods
xor
scas
clc
mov
xor
int3
int
push
or
aad
push
add
xor
xor
dec
gs
mov
aaa
or
mov
movsb
mov
in
sub
pop
and
push
pop
mov
mov
push
jle
push
add
add
in
mov
movsb
cld
sbb
add
mov
sbb
mov
aad
ret
int3
sub
sub
mov
sarl
pop
test
mov
test
movsb
sub
push
rcl
adc
sub
loopne
das
popl
push
mov
mov
dec
push
jbe
push
push
sbb
and
add
jbe
add
xor
add
inc
or
es
fistps
and
xor
mov
sbb
adc
clc
jg
icebp
loop
xor
sbb
pop
and
push
push
and
add
xor
push
adc
cwtl
adc
sbb
cld
enter
outsl
pop
and
test
add
enter
xchg
add
stos
gs
add
or
or
pop
mov
xchg
xlat
jle
cwtl
pop
mov
pop
daa
movsl
and
into
jl
mov
add
jno
adc
shll
test
leave
or
fldt
dec
xor
xorb
outsl
sbb
inc
pop
lret
inc
xor
loopne
lcall
sbb
mov
add
loopne
push
inc
xor
clc
scas
or
jb
jno
dec
xor
sub
jnp
fdivs
add
pop
loopne
push
xchg
cmp
jle
dec
shrl
pusha
xor
aas
sub
push
inc
and
movsl
inc
addb
sub
je
adc
sbb
mov
add
das
repz
es
enter
cld
xorl
xor
ret
fmul
repnz
push
jne
push
adc
les
add
jbe
push
ret
dec
or
adc
incl
or
lods
xor
or
dec
cld
gs
decl
push
fldl
shlb
push
gs
int3
jl
in
jg
scas
daa
stos
out
or
cmp
or
pushf
jo
inc
or
push
push
mov
dec
shll
inc
mov
icebp
cmp
sub
pop
push
or
pop
lock
inc
add
inc
cs
arpl
adc
add
orb
add
pushfw
xor
push
lcall
dec
ds
adc
imul
ret
pop
and
push
shlb
mov
les
push
mov
out
les
push
push
stos
xchg
mov
adc
push
aas
ret
adc
int
dec
add
cmp
test
sti
fsubl
add
add
lret
cmp
rorb
mov
mov
sub
mov
lock
push
mov
mov
out
shlb
adc
movsl
inc
cmp
pop
xor
mov
sbbl
pusha
inc
dec
jg
leave
inc
outsl
pop
xor
push
mov
lcall
inc
mov
cwtl
ljmp
sub
and
shll
dec
addl
and
jecxz
imul
pop
fcoml
jmp
test
pop
cmp
shlb
inc
push
push
adc
stos
rorb
push
push
stos
push
adc
xchg
adc
jmp
cmpsl
sub
jo
js
and
outsb
push
mov
push
scas
push
imulb
add
or
outsl
sub
add
roll
jg
insb
jg
sbb
inc
inc
add
enter
inc
shrb
and
aad
lahf
or
push
pop
jno
or
enter
loopne
cs
subb
sub
sub
mov
sub
add
rcrl
sahf
int
test
and
adc
leave
gs
jne
mov
pushl
xor
xor
in
add
inc
pop
inc
aaa
push
stos
adc
arpl
xchg
dec
inc
sbb
in
mov
mov
xor
je
lret
xchg
loopne
mov
ret
mov
bound
or
shll
clc
cmp
jl
daa
aas
arpl
in
adc
cli
insl
es
int3
dec
sbb
lods
inc
sbb
add
add
in
sub
add
mov
push
loopne
add
mov
and
xor
push
xchg
daa
cmp
pusha
mov
pop
inc
shrb
fsubs
mov
adcl
add
popl
jecxz
xchg
pop
add
gs
jg
loope
or
jmp
popa
and
push
insb
sbb
pop
fisttpll
push
jle
mov
mov
mov
enter
jl
cmp
adc
dec
lods
add
rclb
movsb
ret
enter
pop
icebp
lret
and
add
push
mov
add
adc
xchg
dec
loopne
lret
loop
push
jmp
add
mov
jo
add
push
je
aaa
inc
cmp
mov
loopne
inc
mov
pop
pusha
enter
mov
mov
rorl
test
out
popa
test
pusha
pushf
dec
cld
scas
jp
das
aad
fiaddl
mov
inc
rolb
push
stos
jmp
jg
or
orb
arpl
xchg
sub
push
aas
mov
clc
sub
addb
fdivrs
std
lods
and
daa
dec
add
xchg
stos
rolb
or
es
popa
and
stos
rorb
pop
and
add
mov
cmpsb
dec
data16
adc
pop
and
fisubrs
icebp
loope
mov
mov
or
rcrb
and
pusha
inc
sbb
outsb
call
rolb
mov
enter
push
fmuls
dec
sub
xor
lock
add
jecxz
xchg
fdivrs
sbb
jbe
rolb
jecxz
push
sbb
lods
inc
pop
and
mov
xchg
jp
jbe
jecxz
or
scas
aam
sbb
stos
data16
jmp
fldl
mov
sub
fs
and
je
sti
fbstp
xchg
sub
rcrb
dec
mov
add
pop
xorl
rol
mov
add
xor
cld
aas
enter
inc
xor
sahf
mov
popf
sarb
pop
adc
inc
sti
push
out
lret
pop
push
or
out
or
adc
je
nop
dec
pop
add
cmp
or
adc
pop
cmc
pop
popa
xchg
outsb
inc
movsl
int
outsb
or
sarl
sbb
fadds
and
popf
rorl
in
jno
popa
or
add
dec
sahf
sub
mov
push
test
clc
jl
outsl
push
pusha
dec
mov
loopne
xor
inc
mov
roll
mov
ja
inc
sub
and
fnstsw
cmpsb
lret
adc
sbb
enter
test
and
xor
shlb
ss
pop
cmp
sbb
jg
addb
xor
push
and
inc
outsb
mov
inc
rorb
sbb
jb
and
push
push
mov
or
enter
and
ss
or
xor
fwait
lret
dec
sbb
and
insl
int3
scas
mov
repnz
enter
pop
inc
sub
aad
inc
das
add
adc
add
test
mulb
mov
sub
mov
movsb
jo
outsb
addr16
adc
jg
xchg
sub
orb
add
pop
xchg
ret
mov
sbb
hlt
adc
xchg
addl
ss
push
nop
pop
mov
sub
lock
push
dec
loop
adc
aaa
sbb
lret
push
es
sbb
insb
jecxz
sub
add
xchg
cli
jg
sub
pop
and
add
inc
xor
enter
adc
jae
add
xor
inc
push
adc
rolb
mov
lret
adc
std
scas
scas
fcomps
shlb
push
and
and
or
inc
shrb
and
and
or
xchg
sbb
inc
mov
in
jo
push
push
push
aaa
rcrb
xor
add
adc
or
cmp
xor
bound
jo
movsb
pop
adc
mov
xor
and
cld
call
leave
push
push
sbb
jl
add
inc
push
or
fisubs
and
adc
cld
inc
xchg
test
or
pop
popa
sbb
enter
or
pushl
pop
push
xor
cli
xor
movsb
or
inc
xor
sub
jae
add
mov
ret
mov
mov
loopne
add
inc
mov
xor
mov
mov
inc
rcrb
and
hlt
jae
imul
pusha
cmp
add
jmp
inc
push
lock
or
sbb
pop
cmp
mov
fnstsw
jg
mov
xor
aad
movsl
popa
fmuls
mov
cmp
mov
add
mov
and
out
push
adc
and
repnz
cld
stos
mov
ret
aad
add
add
add
cwtl
or
fsubr
or
ss
mov
aaa
sub
mov
mov
xor
mov
shrb
dec
and
xchg
inc
xor
push
bound
dec
lods
loopne
ljmp
orl
push
adc
add
loopne
mov
push
enter
and
adc
fs
pop
xor
jl
adc
aaa
jg
divb
mov
push
mov
test
aaa
enter
test
and
sahf
daa
and
jo
or
shlb
jp
lock
enter
nop
cmp
lock
es
je
adc
ljmp
ljmp
inc
and
jl
adc
cwtl
push
cmp
and
adc
jmp
rorb
mov
clc
nop
cmp
jae
push
ds
mov
cmpsb
jl
sbb
out
jno
add
mov
or
xchg
push
mov
sbb
fwait
mov
pop
cmp
nop
sbb
cld
mov
sbb
sub
dec
mov
mov
push
fcmovbe
inc
mov
add
xchg
pusha
push
mov
adc
fbld
pop
dec
pop
filds
fsubp
push
in
add
notb
dec
push
daa
and
ljmp
mov
mov
mov
cmp
add
movsl
aad
das
cmpsl
shll
mov
add
adc
mov
scas
or
in
cmp
into
arpl
push
mov
mov
and
insl
adc
and
mov
hlt
mov
bound
pop
addl
xor
or
outsl
push
int
push
enter
hlt
add
mov
sbb
rorb
jno
nop
add
pop
pop
dec
and
stos
mov
and
adcb
add
cld
fwait
call
lock
push
xor
mov
and
inc
mov
and
push
and
je
cmpl
jo
inc
gs
push
push
mov
jp
add
lret
data16
lret
jbe
add
push
xchg
dec
xor
push
adc
stos
mov
inc
loopne
push
mov
dec
lcall
cli
push
adc
and
lock
fdivr
or
push
and
mov
gs
cli
cmp
sub
sub
add
and
sbb
inc
enter
push
cwtl
ljmp
xchg
jb
adc
popa
cmpsl
rolb
stos
loope
loop
xor
and
gs
dec
js
push
in
adc
loope
outsb
jne
xchg
mov
enter
repz
shrb
pop
addb
adc
jae
adc
mov
adc
das
mov
in
lret
sub
add
and
lcall
inc
adc
and
sub
adc
and
or
pusha
rcrb
pusha
sbb
and
add
push
cmp
push
adc
push
push
loopne
jno
add
fcomip
add
adc
in
xlat
enter
adc
nop
sbb
pop
in
jb
icebp
rolb
pusha
mov
add
outsl
call
add
adc
js
mov
adc
adc
push
jp
les
jo
mov
push
nop
sbb
mov
jo
adc
jo
enter
push
das
dec
mov
ss
dec
and
sbb
sub
add
xchg
ss
sar
lods
add
sub
sub
inc
and
push
inc
add
inc
sbb
incl
dec
movsl
xor
cs
movsb
add
and
cmp
push
subb
test
add
pop
adc
push
jae
and
scas
nop
xor
sub
leave
mov
repnz
gs
push
stos
insb
lods
add
int3
cmp
aam
loop
nop
fisubl
push
incl
jne
push
rolb
lret
inc
lea
jbe
sbb
push
adc
push
xchg
andb
add
and
std
mov
xor
test
js
lret
out
sbbb
xchg
push
push
dec
push
imul
icebp
mov
sbb
and
stos
sar
xor
jo
enter
add
clc
loopne
push
mov
push
mov
sub
jo
adc
stos
sbb
cmp
cmp
or
nop
and
popl
mov
stos
push
and
mov
push
loope
push
int3
add
add
add
daa
leave
xlat
addb
xor
xchg
mov
or
mov
movsb
aad
mov
mov
sti
decl
sub
inc
push
faddl
inc
push
mov
adc
fcos
adc
aaa
cmpsb
in
add
push
sub
mov
or
or
sbb
imul
enter
or
lock
jmp
inc
aas
xor
pop
push
rorl
inc
or
mov
in
cs
mov
cwtl
push
mov
incl
fbld
push
jge
and
cmpb
push
add
or
jecxz
loop
test
and
inc
and
or
add
mov
jae
cwtl
dec
add
mov
cli
outsl
adc
in
inc
or
inc
or
test
movsl
das
out
inc
enter
jp
push
jmp
rclb
cld
lds
bswap
fsubr
rorb
decl
add
enter
test
adc
mov
push
add
movsl
and
aas
push
lock
mov
roll
stos
and
cmp
sbb
inc
dec
lret
cmp
xchg
cmp
enter
inc
es
dec
lods
cmp
push
enter
cli
xchg
stos
pop
xor
inc
pop
and
adc
mov
add
rclb
mov
sbb
and
mov
arpl
inc
add
inc
add
gs
sbb
pop
pop
dec
inc
xor
iret
andb
andb
addl
adc
dec
addl
lods
push
mov
into
js
pusha
ret
jg
adc
and
or
pusha
and
and
jmp
fbld
pop
cmp
pusha
add
sub
adc
sbb
jb
aaa
cld
dec
mov
and
adc
jno
mov
jo
movsb
push
lods
js
pop
movsb
adc
sub
and
mov
mov
push
add
and
sbb
sub
push
or
pushl
popa
jb
data16
add
cmp
jno
out
call
jno
and
in
loopne
or
imul
sub
js
shrb
clc
pop
sub
pop
movb
testb
mov
add
mov
pop
rol
dec
cwtl
sub
and
mov
jecxz
and
filds
jne
sub
lds
or
je
add
lds
lock
je
roll
mov
test
push
cld
enter
or
and
mov
cld
aaa
fistps
mov
xor
sbb
hlt
push
fstl
pop
or
cmp
pop
push
aas
out
mov
shl
aaa
and
add
xor
and
out
nop
jbe
cmp
loop
cwtl
pop
add
mov
push
pusha
or
out
or
fildll
popa
pop
in
adc
lods
sarl
push
or
test
outsl
and
sub
lret
sub
inc
and
loope
push
test
sub
push
sub
inc
lods
inc
inc
lret
cs
dec
and
loop
inc
mov
and
shlb
and
mov
sbb
fisubs
mov
cmc
adc
jae
sbb
mov
imul
push
rolb
mov
loope
in
fwait
sar
loope
mov
dec
jl
test
push
enter
aaa
inc
jl
add
xchg
shrb
add
sub
dec
stos
lock
cmc
fildll
fdivrs
test
add
ja
std
dec
call
xor
andb
mov
roll
pop
jl
adc
sbbb
sbb
mov
rclb
and
dec
and
jl
jle
imul
pop
pusha
cwtl
xorb
xor
rcl
orb
mov
sub
in
imul
arpl
in
adc
rorb
inc
xor
lock
inc
addb
push
cld
outsl
fwait
sub
mov
pusha
add
call
test
xchg
sub
stos
jge
lock
lods
inc
loope
adc
and
mov
jnp
andb
lret
push
mov
pop
push
loopne
lock
je
sbbb
pusha
lret
push
pusha
jb
and
lcall
shlb
sub
add
dec
and
test
xchg
mov
mov
sarb
sbb
stos
cltd
pop
push
or
jbe
sbbl
or
ret
pop
leave
mov
add
faddl
jp
out
mov
imul
and
or
cld
clc
and
bound
cld
dec
std
ja
lret
pop
xchg
fs
iret
adc
lret
adc
sti
and
add
aad
xor
inc
jo
xchg
push
enter
or
loopne
add
add
push
pop
inc
jo
jae
or
mov
adc
sub
loope
ret
dec
push
daa
sbb
aaa
add
and
inc
push
das
pop
data16
fisttps
mov
stos
dec
rolb
insb
in
jecxz
lret
cld
leave
and
fs
jl
xchg
mov
xor
xchg
pop
cmpsl
roll
jp
stos
or
add
aam
popa
pop
dec
addl
ljmp
enter
push
inc
mov
adc
movsb
adc
stos
xor
cmc
push
xor
clc
aaa
mov
leave
pop
loope
push
arpl
ja
pop
stos
inc
xchg
add
pop
push
rolb
jno
jnp
jecxz
xorl
jb
call
push
cmp
dec
ss
roll
mov
or
pop
lock
nop
adc
addb
js
lea
jp
mov
sub
push
shrb
pop
sub
push
cmpsl
inc
push
inc
jb
adc
inc
pop
mov
jmp
jle
leave
icebp
xchg
adc
enter
adc
push
mov
pushl
dec
add
or
mov
sub
lods
imul
adc
xor
std
pop
sub
push
push
sub
inc
sbb
jbe
or
loope
shlb
out
sub
rcr
jp
loopne
mulb
addr16
scas
and
push
push
bound
popl
push
push
sub
add
mov
lds
pop
fstps
xchg
cwtl
lods
pop
lock
adc
fstps
hlt
cmp
cld
cs
les
push
add
insb
test
ds
push
dec
lret
das
xor
adc
ret
inc
xor
addb
repnz
mov
lock
int3
bound
cmp
movsb
mov
addb
movsl
dec
sub
pop
es
filds
enter
adc
aam
sub
and
sub
cmp
addb
dec
aaa
sub
push
pop
nop
xor
cmpsl
jbe
or
mov
pop
pusha
mov
cwtl
push
add
inc
pop
adcb
movsb
xor
cmp
mov
lods
sub
inc
jno
and
rclb
test
jbe
jecxz
xor
ret
insb
test
rcrb
daa
mov
loopne
aas
adc
add
adc
mov
sub
movsb
add
jo
sub
push
imul
sub
iret
push
call
ret
data16
add
inc
je
fcmovne
pop
sub
inc
mov
jecxz
mov
stos
jae
adc
cmp
mov
mov
dec
sub
jno
test
fisttps
addb
adc
dec
sbb
imul
mov
push
add
insb
push
in
jle
pop
das
ljmp
cmc
lods
add
and
mov
push
cs
dec
sub
push
popa
cmp
shrb
mov
dec
les
adc
mov
jecxz
sub
fdivl
pop
mov
push
mov
add
dec
insl
mov
in
data16
enter
pusha
cmp
xor
mov
call
dec
inc
xor
pusha
pusha
dec
les
clc
jo
loope
mov
icebp
sbb
out
push
roll
out
outsb
aam
xor
fsub
add
jmp
sti
sub
lcall
cs
outsl
xchg
orb
bound
addb
mov
fwait
add
fadd
add
or
arpl
adcb
add
pop
mov
shrb
cmc
mov
fbld
xor
in
mov
ljmp
fbstp
mov
movsl
add
mov
stos
es
add
dec
jo
xchg
jge
lods
rcr
push
lret
roll
mov
addl
cmp
jbe
xchg
inc
in
mov
push
scas
scas
mov
cs
gs
dec
or
and
sub
out
xor
mov
dec
add
sub
adc
mov
aam
and
mov
ja
add
cmpsb
test
xor
out
mov
cwtl
rorl
movl
and
mov
push
adc
test
call
dec
fcom
mov
sbb
lods
or
push
and
pop
cmp
orb
jno
mov
push
shr
add
cmp
movsb
jno
xchg
in
mov
stos
movsb
pop
xor
adc
je
std
outsl
ss
jle
sub
stos
and
adc
enter
mov
pop
mov
add
loop
sub
and
cmp
jo
repz
cwtl
out
adc
pop
loope
jecxz
ljmp
shll
mov
push
and
call
dec
nop
into
push
lock
dec
cwtl
enter
cmp
mov
mov
dec
mov
test
mov
or
sbb
rorb
xor
cld
insl
jnp
in
pusha
roll
add
dec
push
popa
adc
lods
inc
and
mov
lock
nop
out
nop
lods
ret
inc
out
adc
mov
and
cmpsb
inc
call
adc
mov
pop
dec
inc
pop
fsubrl
incb
push
clc
dec
adc
and
jg
adc
ret
fwait
roll
mov
add
and
shlb
add
mov
lret
test
ljmp
pushl
clc
adc
add
or
add
mov
mov
jo
push
lcall
xchg
or
cmp
inc
es
jno
shlb
clc
dec
lret
outsb
jbe
add
fcoml
add
jo
pop
and
adc
sub
inc
and
dec
inc
pop
sub
fisubl
sbb
push
sbb
pop
and
insb
je
push
das
addl
or
push
dec
enter
add
mov
jb
or
inc
cltd
jne
mov
add
call
aad
ficoms
push
push
sub
sbb
dec
push
push
loope
adc
mov
or
je
cmp
sub
andb
dec
xchg
les
inc
jle
addb
adc
add
inc
test
enter
xchg
mov
fcoms
sbb
cli
xorl
sbb
mov
jp
push
push
xor
adc
out
leave
addl
ds
sbbb
push
aam
and
sbb
sbb
insb
jp
cwtl
pop
add
jbe
ret
incl
mov
bnd
rcrb
and
and
leave
gs
roll
lret
xor
and
lock
or
jp
mov
fisttpll
sbbl
xor
pop
lcall
and
dec
xor
sbb
mov
dec
inc
add
pop
mov
pop
ret
or
scas
out
push
jmp
xorb
sub
ds
mov
jnp
adc
jo
mov
inc
jnp
out
or
cltd
stos
push
xor
push
mov
roll
test
aad
push
add
push
in
push
mov
mov
enter
dec
in
sub
mov
xor
subb
dec
aad
mov
out
cli
and
fs
andb
fadds
push
dec
push
std
dec
pop
push
out
sbb
push
ljmp
xor
sub
add
sub
aam
sub
cld
aam
dec
mov
outsb
sub
or
or
adc
pusha
xor
testb
fs
push
rorb
int
push
outsl
bound
add
shlb
jbe
dec
dec
add
xchg
cmpsb
jns
add
jecxz
mov
add
cmp
cwtl
push
inc
inc
mov
jnp
or
leave
test
icebp
inc
add
push
pop
outsl
jp
sbb
jb
inc
sbb
les
adc
sub
andb
ret
adc
hlt
or
inc
js
adc
dec
mov
test
mov
inc
adcl
add
mov
dec
adc
inc
int
adc
add
xchg
mov
sti
sub
outsb
or
and
push
xchg
out
adc
fwait
mov
mov
mulb
dec
add
or
xchg
push
rclb
add
cltd
jle
rolb
sub
sub
sub
or
cmp
in
adc
push
cwtl
jne
rorb
les
imul
fcoms
jl
jg
pop
push
push
add
rol
mov
jmp
lahf
cmpb
nop
add
rclb
inc
mov
loop
push
stos
adc
js
lcall
pop
add
adc
mov
stos
adc
dec
movb
aaa
cwtl
in
dec
add
pop
cmpsb
enter
and
in
push
ss
ret
dec
push
inc
mov
xchg
sbb
sbb
jg
pusha
push
loope
and
pop
add
mov
sbb
loop
pusha
xchg
dec
push
lods
adc
xor
mov
mov
fildll
mull
movsb
jmp
fadds
and
add
enter
inc
inc
push
mov
pop
or
enter
stos
jecxz
in
push
dec
loopne
mov
outsb
adc
mov
and
or
add
mov
pusha
push
jb
stc
inc
push
cli
fbstp
lods
mov
add
pop
subb
fadds
push
xchg
out
aas
cmpb
fbstp
movsl
mov
pop
hlt
pop
xor
mov
mov
inc
data16
xchg
add
rcrl
cmc
pop
lock
and
dec
insb
cli
enter
xor
jecxz
and
dec
inc
sbb
adc
cmpb
jl
addl
or
or
dec
push
sub
pop
jg
loopne
pusha
dec
lret
and
dec
inc
push
mov
mov
andl
clc
cs
sub
and
aam
add
stos
jg
lock
push
push
jne
or
xlat
cltd
add
cld
rcrl
xor
pop
push
adc
pusha
mov
push
jbe
rol
jbe
clc
add
in
loope
mov
lock
xor
popl
and
mov
push
movsl
pop
ret
andb
ds
inc
mov
mov
and
ss
and
pusha
and
mov
mov
outsl
mov
es
jnp
popa
add
add
pop
add
loopne
mov
or
inc
push
add
and
rcrl
inc
mov
pop
and
add
mov
jle
mov
ja
jecxz
sbb
and
lret
and
inc
mov
stos
sbb
dec
data16
pusha
cli
xchg
ror
mov
dec
jge
ljmp
filds
dec
and
xor
pop
lods
adc
pop
in
js
inc
jl
inc
es
and
dec
adc
js
cmpb
mov
andb
mov
int3
enter
inc
sbb
bound
or
mov
enter
orb
xor
pop
mov
outsb
jo
jp
and
cmc
aaa
push
push
adc
ja
outsl
mov
out
dec
add
xchg
into
mov
xchg
mov
ja
mov
inc
mov
sub
pop
fsubrs
enter
and
or
enter
cmpsb
loop
lods
lods
mov
orl
push
mov
xor
adc
popa
setge
call
cmp
mov
push
xor
das
adc
sbb
sub
daa
ljmp
or
loopne
and
xor
roll
adc
cmpsb
dec
test
je
or
jns
rclb
add
in
add
add
sbb
loope
push
push
or
shlb
mov
mov
clc
ljmp
jne
in
jb
xor
fbstp
mov
or
add
mov
loopne
dec
xor
dec
clc
and
pop
jo
cmp
mov
loopne
ret
add
add
inc
xchg
push
xchg
xor
enter
jb
dec
xchg
jno
mov
call
bound
add
add
push
add
addb
and
cmp
cmpsb
out
dec
movb
loop
pop
int
fnstsw
xchg
pusha
pop
jle
cmpsb
fcompl
dec
push
inc
cmpsb
and
sub
lock
sub
add
mov
add
dec
pusha
jp
es
add
clc
xor
xor
ja
cmp
push
fcoms
cmp
adc
lock
repz
sbb
add
enter
adc
cs
add
dec
cld
pusha
dec
sti
mov
cmp
add
lock
or
test
les
int3
mov
je
pop
idivb
loopne
adc
fists
mov
rolb
das
mov
ret
lahf
xor
stos
xor
jb
cmp
pshufw
add
addl
fdivl
cld
sub
outsb
rolb
mov
jo
scas
clc
or
mov
sbb
push
jno
clc
inc
pop
cld
loopne
sub
inc
mov
inc
das
shl
test
sbb
and
ja
jl
inc
insb
les
daa
ret
jg
pop
cmp
lock
mov
inc
mov
fcoms
push
add
mov
mov
mov
pop
pop
orb
or
faddl
xchg
hlt
or
add
movsl
int3
lds
sbbl
lock
rorb
cld
xor
add
xorb
and
fwait
xchg
clc
or
add
dec
adc
andb
or
pop
push
enter
addl
or
mov
sub
jmp
adc
or
inc
inc
or
xchg
pop
jle
dec
xchg
dec
jb
jl
xorl
flds
pusha
push
xor
inc
sub
pushl
adc
push
rolb
add
and
mov
and
push
push
cmp
push
or
scas
pop
fbstp
lock
sub
pop
enter
fiadds
cmpsb
mov
inc
hlt
sbb
and
psrad
xchg
pushw
fs
adc
ljmp
xchg
in
stos
pop
aam
inc
inc
dec
jae
into
arpl
test
push
push
and
push
testb
mov
enter
mov
pop
inc
call
stc
fcmovnbe
dec
and
sbb
ljmp
xchg
push
mov
and
test
push
rolb
jbe
xchg
orb
dec
xchg
lret
aaa
or
mov
push
xor
mov
jne
pop
inc
sbb
fbld
dec
and
adc
std
push
and
add
add
mov
add
sbb
mov
jg
mov
stos
and
adc
movsb
sub
sub
mov
push
imul
or
loop
inc
test
fldl
std
jmp
out
pop
lock
cs
add
inc
mov
pop
add
push
pop
enter
pop
dec
push
ja
cmp
push
add
push
jp
adcb
dec
insl
mov
shlb
or
fs
pusha
ret
cltd
inc
push
adc
sbb
jmp
xchg
les
pusha
cltd
lcall
push
or
test
rclb
nop
xor
shll
enter
cmpsb
mov
loope
loop
or
inc
adc
and
dec
push
xchg
mov
mov
sar
inc
add
pop
add
cltd
in
sbb
pop
shlb
add
out
mov
shrb
or
adc
push
idivb
push
and
add
xor
adc
push
aad
clc
outsl
mov
add
test
les
out
ljmp
inc
add
sahf
imul
pop
mov
add
push
insb
adc
outsl
outsl
lcall
or
std
and
sbb
cmpsb
aam
push
mov
pusha
jae
ja
or
aaa
movsb
xchg
sub
dec
xor
pop
xor
subb
xor
push
pop
loopne
dec
mov
add
and
lods
push
push
movsl
push
fst
scas
push
cmp
inc
flds
mov
ljmp
imul
arpl
orb
push
add
jae
adc
pop
xor
or
enter
add
xor
icebp
pop
xor
pop
mov
out
les
cmp
and
outsb
lock
jg
dec
push
add
int3
loope
mov
shlb
shlb
xchg
mov
movsb
mov
add
and
dec
mov
xchg
xchg
and
in
lret
jp
push
add
and
pop
lods
loope
les
inc
push
pop
ret
decl
xchg
loopne
mov
mov
lods
popf
test
ja
test
mov
or
add
add
pop
shrb
xchg
add
es
into
push
inc
dec
pop
add
add
inc
add
push
rolb
mov
push
push
cmp
mov
shlb
pop
jae,pt
adc
loope
sub
dec
inc
and
into
test
in
dec
adc
data16
out
outsb
hlt
and
into
push
xor
imul
je
cmp
pop
push
lret
or
and
fidivrs
mov
xor
xor
inc
mov
sti
es
es
fisubs
pop
push
pusha
inc
cwtl
mov
nop
mov
push
sub
pop
and
loop
push
sbb
and
fistpl
or
pop
or
test
and
sub
iret
adc
sbb
inc
sub
mov
pop
je
dec
jno
fdivrl
jo
out
push
sub
pop
adc
add
jo
or
add
jno
adc
mov
adcb
dec
test
cld
push
les
ja
mov
orb
divps
filds
xstore-rng
cmpsl
add
test
rorb
subb
sahf
fildl
or
mov
cwtl
pushf
add
cli
mov
push
dec
sub
sbbb
jo
outsl
inc
mov
or
xchg
add
rolb
xchg
les
mov
mov
sti
fisttpl
pop
addl
mov
aaa
dec
sbbb
movsb
push
pop
jp
jecxz
cmp
dec
js
sbb
cmpsb
movsl
adc
xor
lcall
sub
sahf
inc
addr16
rolb
sarb
hlt
jae
push
add
adc
pop
adc
icebp
ja
xchg
push
aam
add
std
in
outsl
push
cld
adc
enter
ds
pop
pusha
dec
push
lods
xchg
adc
jo
es
int
add
dec
jp
mov
dec
lcall
xor
lret
insl
sbb
or
xor
ret
adc
cmp
inc
pop
movsl
adc
rclb
aad
inc
adc
add
aam
popf
or
add
loop
cltd
je
lds
or
outsl
shrb
add
aas
arpl
or
sub
and
add
inc
add
adc
das
shr
cli
push
xchg
sub
sub
scas
mov
mov
call
ja
add
and
fwait
adc
sub
movsl
rorb
outsb
mov
enter
dec
add
cli
fwait
and
jb
stos
adc
and
mov
pop
sbb
testl
sbb
jae
push
sub
les
mov
ffreep
add
out
les
add
adc
sti
ljmp
xor
adc
subb
test
test
pop
popa
lods
bound
jle
loopne
add
test
mov
inc
push
cld
add
dec
push
cmp
pusha
adc
int3
push
sbb
loopne
fldl
xor
dec
stos
push
popf
cld
lods
add
je
add
sbbl
mov
cmp
jo
adc
mov
movsl
es
or
je
push
xchg
and
jge
add
imul
push
insb
sbb
dec
lods
movsb
xchg
jo
daa
pop
insb
jl
cmc
insl
push
cmpsl
add
cmp
mov
daa
add
call
mov
cmc
adc
and
add
daa
pusha
fcoms
cmc
ljmp
jo
or
and
stos
rorl
lds
xchg
outsl
add
pop
jg
stos
cmp
push
xor
lods
inc
add
and
incl
inc
sbb
mov
mov
dec
inc
loop
xchg
test
cli
inc
dec
pusha
sarb
mov
xor
loop
pop
pop
dec
inc
push
xor
cli
incl
mov
enter
leave
xlat
and
and
cmp
jbe
inc
mov
test
pop
add
jb
and
and
mov
dec
and
lea
xor
movsl
lea
lea
inc
mov
cmp
filds
xor
cmp
dec
jl
lods
shll
insb
mov
cmpsb
xor
scas
outsb
adc
adc
jle
dec
repz
mov
xor
mov
ljmp
add
insb
jl
mov
push
sbb
add
mov
and
push
add
xor
add
xor
shlb
mov
push
mov
add
mov
outsb
push
sub
add
aad
fidivrl
mov
pop
add
loopne
or
push
loopne
add
push
push
je
xchg
xchg
orb
orb
pop
inc
ret
sbb
push
xchg
outsl
call
and
arpl
dec
imul
cmp
rorb
insl
mov
cmp
dec
rolb
enter
jle
shrb
jns
mov
test
fdivp
movsb
mov
fs
fs
sbb
and
sahf
mov
subb
mov
pop
mov
mov
and
rclb
cmp
insl
mov
bound
enter
lcall
mov
cwtl
mov
add
inc
enter
int3
push
pop
movsl
aas
jo
aam
cmp
jno
adc
lahf
adcl
bound
dec
andl
pop
cmp
ret
fildll
xor
push
xor
mov
inc
cs
adc
mov
sbb
stos
imul
test
dec
mov
xchg
cmp
ret
add
xchg
jp
in
nop
sbb
addl
xor
clc
pop
mov
xor
mov
add
mov
testb
jno
jg
push
sub
pop
dec
test
sub
lods
jmp
incl
add
or
daa
enter
inc
sar
fistpll
inc
add
sbb
jo
mov
push
rclb
jb
pop
je
mov
lret
inc
and
loope
inc
mov
adc
mov
or
push
add
movsb
mov
rcrl
mov
push
pop
add
sub
and
push
ljmp
push
add
insb
pop
add
pop
add
negl
or
push
add
orb
cmp
xor
or
rorl
adc
inc
movsb
add
jmp
add
mov
adc
ficoms
add
pop
xorb
dec
je
adc
enter
fstpt
xorb
xor
push
sub
xchg
push
sub
out
dec
xor
mov
pop
and
mov
push
mov
cmp
mov
cmp
sbb
cmp
cmp
enter
sub
ss
imulb
jg
rorb
jns
xor
pusha
inc
inc
add
add
lock
outsl
out
xchg
ja
enter
or
sbb
sbb
nop
or
sbb
inc
inc
fbstp
push
add
movsb
fisttps
dec
cmp
andb
jle
lock
inc
pop
or
or
and
or
cmp
pop
xor
push
out
mov
ds
xor
cmp
inc
cmp
in
mov
popf
enter
mov
mov
dec
ljmp
push
jle
jns
je
mov
xchg
mov
pushl
shll
ja
jge
adc
stos
sbb
and
or
jmp
je
ficomps
lock
cmp
movsb
jmp
nop
jp
add
icebp
dec
repnz
test
stos
add
ljmp
push
iret
jle
jmp
add
sbb
mov
xor
sub
sbb
xor
decl
mov
orb
sbb
cmc
push
lods
dec
push
add
xor
enter
or
jae
xchg
xchg
rclb
pushl
cwtl
addl
loopne
orb
push
adc
adcl
add
and
insl
shlb
or
aam
stos
gs
xor
ds
decl
dec
add
and
cmc
cmpsb
scas
dec
je
add
add
push
lret
xor
leave
cmp
les
jl
fidivrl
mov
dec
in
faddp
fisttps
rcr
icebp
inc
mov
or
jbe
cmpsb
dec
gs
fisttps
add
cwtl
add
push
ljmp
mov
rcrl
add
xor
mov
call
rorb
test
push
xor
rclb
mov
push
jg
rol
cs
xor
push
outsb
mov
xchg
cmpsb
xchg
lret
mov
dec
pushl
sar
ja
jne
xorb
les
lret
je
xchg
nop
insl
jae
xor
outsl
stos
cld
enter
adc
adc
or
int3
das
pop
add
imul
jo
add
mov
jle
adc
pop
nop
pop
sbb
xchg
data16
test
push
inc
sub
cld
mov
cwtl
test
adc
cld
icebp
inc
sub
xor
add
in
es
jnp
ljmp
xchg
sub
cmpsb
ja
mov
inc
in
xchg
shl
and
shrl
push
repnz
cmc
cmp
lods
inc
and
lret
es
int
and
cs
sbb
loopne
mov
lods
xor
xchg
adc
notb
dec
xor
insl
sahf
pop
or
adc
and
insl
insb
jge
data16
and
adc
pop
adc
adc
add
sbb
pop
rcl
and
push
lock
sbb
call
les
cmp
loopne
movsb
push
int
sub
es
mov
popa
push
cld
test
out
loopne
mov
adc
out
gs
subl
ss
mov
adc
addb
push
pop
sbb
push
popa
aaa
xchg
cwtl
adc
pop
push
cli
mov
xchg
add
je
inc
jge
bound
test
or
addr16
aam
push
jne
ret
jecxz
call
pop
gs
mov
out
bnd
shr
fmull
daa
int3
and
pop
fs
inc
mov
sahf
dec
or
add
cmp
ljmp
and
ret
mov
mov
pop
stos
gs
insb
push
add
lock
test
mov
or
sub
fcoms
ret
adc
pop
mov
and
hlt
repnz
or
pop
dec
notb
inc
and
add
mov
ljmp
loopne
fsubrs
and
xchg
insb
mov
or
sbb
jecxz
fdivrs
jle
cltd
sbb
and
inc
icebp
daa
push
xor
sub
sahf
sub
or
outsb
inc
lea
xchg
enter
ja
mov
mov
fsubrl
push
popf
movsb
cld
subb
or
mov
or
arpl
push
loope
cmp
add
sub
fstps
stc
sub
icebp
daa
add
jecxz
sbb
int3
dec
add
push
or
dec
test
add
std
and
xor
push
les
mov
jbe
inc
rclb
into
push
xchg
cs
add
jne
mov
push
int3
push
sbb
ret
popa
jmp
addb
jo
aad
adc
call
jle
aas
lods
add
orl
leave
jl
jo
add
or
adc
aaa
mov
push
popa
sbbb
mov
add
pop
pusha
adc
nop
dec
rcll
add
roll
clc
xor
and
inc
sbb
adc
movsb
inc
cli
decl
test
mov
sbb
sbb
mov
outsl
in
adc
sub
adc
sbb
or
pop
test
ror
push
and
mov
out
js
cmp
add
in
sbb
inc
push
adc
mov
clc
insb
mov
add
add
xor
das
clc
fbstp
and
or
mov
or
inc
out
out
push
push
clc
sbb
pop
jbe
lods
xchg
jmp
mov
lcall
sub
push
es
adc
cmp
mov
mov
es
dec
jp
sbb
add
adc
xor
test
out
sub
decl
aas
or
rsm
es
xchg
or
add
stos
and
fcoml
sbb
push
sub
mov
inc
cmc
testb
addb
add
add
gs
lock
xchg
add
and
inc
incb
mov
sub
xor
mov
add
push
sbbl
mov
inc
movsb
adcb
dec
mov
mov
hlt
mov
push
cmp
sbb
push
aad
pusha
pop
arpl
cmp
rclb
push
sub
xor
inc
push
xor
mov
and
pusha
inc
test
ja
adc
dec
adcb
arpl
add
or
orb
cld
mov
dec
and
and
enter
adc
lea
bound
and
cmp
addr16
sbb
enter
add
adc
xchg
or
add
inc
dec
jl
icebp
mov
mov
or
fcomp
push
pop
movsl
fwait
lock
jbe
adc
adc
jle
aam
mov
repnz
pusha
inc
jbe
jbe
adc
jbe
popf
and
or
dec
or
movsl
push
and
mov
dec
inc
ja
mov
sub
enter
call
sbb
and
jb
inc
jb
xchg
call
or
mov
adc
enter
adc
loope
orb
add
mov
enter
push
adc
fsubrl
xor
movsb
add
and
addl
lods
xchg
push
xchg
call
cwtl
sbb
popa
sub
addb
cwtl
inc
add
fstp
in
outsl
push
pushf
cwtl
xchg
and
mov
adc
cwtl
xchg
xor
stos
mov
xchg
dec
pushf
inc
mov
add
add
and
rolb
daa
add
add
push
xor
inc
mov
add
ss
mov
aam
cld
mov
dec
rclb
lret
in
add
mov
add
jne
hlt
and
or
push
push
inc
mov
and
daa
lock
push
sub
push
mov
pop
or
sbb
mov
loopne
cld
loope
mov
pushl
enter
enter
jge
mov
adc
sbb
icebp
mov
adc
lock
or
inc
in
pusha
push
stos
sub
int3
loope
enter
mov
repz
popa
or
add
lcall
sub
add
inc
cmp
movsb
cwtl
add
sbb
and
test
jp
mov
incl
and
stos
cwtl
sti
das
sub
scas
cwtl
mov
and
cwtl
pusha
rorb
cwtl
bound
inc
mov
aaa
jg
scas
add
mov
cwtl
inc
dec
jecxz
mov
ljmp
mov
and
cwtl
add
test
cwtl
or
stos
in
xor
or
ja
mov
jbe
mov
or
test
mov
std
pushl
cwtl
dec
roll
xchg
cwtl
scas
int
adc
cwtl
cwtl
lcall
int3
test
inc
test
call
loopne
add
loop
incb
ret
add
cwtl
loop
jns
mov
lret
push
dec
ljmp
lods
out
fcmovnbe
out
jg
lock
pop
adc
cwtl
adc
mov
dec
inc
hlt
or
cwtl
jmp
cwtl
stc
adc
and
cli
sub
fidivl
mov
push
and
and
cwtl
sbb
or
cwtl
frstor
outsl
pop
rorl
enter
pop
lret
sahf
add
xor
int3
cwtl
cmp
into
mov
pop
pusha
pusha
jle
outsb
js
rorb
inc
jnp
add
inc
inc
pop
cmp
cwtl
mov
xlat
adc
insb
enter
push
insb
fcompl
scas
imul
cwtl
stos
scas
sbb
fisttpl
into
inc
aam
es
mov
or
jl
dec
mov
lock
sub
sub
andl
insl
adc
xor
adc
xchg
xor
mov
cli
dec
ss
sub
or
aam
lcall
cmc
aaa
cmp
xchg
inc
mov
loopne
add
push
aaa
mov
cltd
sbb
insl
add
mov
cltd
clc
cld
subb
sbb
insl
or
cltd
les
loop
dec
xor
or
fisttps
cltd
adc
push
adc
gs
jl
xor
clc
jg
adc
cwtl
addr16
push
cltd
lahf
pop
adc
clc
adc
pop
insb
adc
cltd
lret
jg
aaa
adc
popa
loopne
add
insb
pop
bound
fs
push
imul
cbtw
jg
xchg
cmpb
mov
decb
cwtl
out
xchg
mov
int3
jo
xorb
inc
jb
and
test
push
jbe
or
and
js
sbb
jnp
jl
pop
ret
stos
andb
hlt
inc
cwtl
adc
inc
in
sbb
push
inc
cwtl
mov
inc
cwtl
pop
flds
jmp
sbb
sub
inc
pop
dec
mov
scas
dec
cwtl
mov
jg
lds
ds
cmp
push
out
gs
out
lcall
ja
add
push
pop
cmp
nop
add
lods
adc
loope
and
push
push
loopne
add
jecxz
push
dec
pop
sub
ret
stos
pop
es
aaa
adc
sub
inc
sub
xor
inc
adc
loop
jmp
mov
stc
adc
sub
out
rclb
pop
icebp
data16
movsb
sbb
lock
lock
cwtl
imul
movsb
push
mov
mov
dec
jne
adc
je
rorb
mov
adc
jnp
inc
jno
inc
jno
shrb
push
ret
je
cmpsl
push
mov
xor
popf
test
jp
enter
leave
push
adc
dec
push
push
lock
push
cwtl
add
push
fbstp
mov
bound
cld
xchg
leave
shrl
subb
ret
and
push
leave
out
inc
movsb
adc
xchg
out
aam
jne
add
inc
ret
inc
adc
cwtl
orb
mov
and
xchg
loope
push
lcall
pop
xor
movsb
xchg
insb
adc
lock
outsb
push
jb,pt
mov
push
mov
nop
subb
dec
loop
xorb
mov
rorl
add
ds
add
enter
int3
xor
mov
lods
test
jb
lret
xor
rorl
les
add
les
xor
stos
clc
rcrb
ja
inc
add
cwtl
pop
add
pop
push
sub
pop
or
push
fcoms
stos
subb
sub
js
lock
add
push
pop
sbb
push
pop
add
pop
fcoms
sub
jb
fsts
rolb
int3
and
fwait
lods
in
pop
sub
jg
mov
js
inc
sbb
adc
mov
push
rcr
test
jo
dec
mov
push
jne
cmp
xor
lahf
cmp
adc
jne
lahf
inc
jmp
loope
sub
rolb
and
int3
inc
enter
shr
jo
out
mov
or
and
lods
sbbb
push
xchg
add
pop
insl
loop
add
jae
mov
and
pop
jmp
push
int
pop
dec
add
xchg
jg
or
lods
xchg
mov
mov
rcrb
xchg
push
call
bswap
pop
dec
push
mov
lahf
roll
push
mov
xor
xchg
add
xchg
mov
adc
adc
and
out
mov
les
and
scas
pop
cmpb
adc
out
fists
and
mov
mov
add
aas
dec
jo
pop
std
xor
call
mov
and
loope
sbb
outsl
notb
mov
test
mov
sub
adc
jp
push
dec
das
mov
repnz
jmp
bound
daa
lock
fst
adc
mov
xchg
fwait
in
das
and
dec
ret
dec
inc
add
movl
clc
mov
mov
adc
aad
mov
lret
daa
std
sbbb
mov
add
aad
add
push
test
add
jbe
push
and
je
fsubrs
cmpsb
xor
jle
push
cmp
xor
insb
pusha
mov
pop
push
xchg
shlb
add
xchg
je
mov
dec
call
or
inc
fdiv
pop
testb
in
leave
pop
test
das
jle
sbb
fadds
or
cmpl
mov
repnz
add
adcb
bound
sbb
xchg
enter
add
and
xchg
jp
out
xor
scas
movsb
lcall
push
sub
xchg
popa
and
add
rclb
sbb
jecxz
pop
in
adc
pop
lea
jl
out
push
push
push
imul
or
add
inc
adc
push
ljmp
lods
push
and
lock
adc
lds
mov
js
fisubs
xlat
or
sub
cmp
int3
add
call
add
fistpl
addb
add
push
lcall
dec
push
and
xor
lcall
and
adc
outsl
lcall
jns
pop
or
mov
add
sub
pop
incl
lret
in
subb
out
and
add
and
xchg
icebp
pop
ljmp
and
int
es
jne
into
sbb
xor
data16
add
addb
ljmp
add
incb
inc
sbb
pop
sub
jo
cmp
jnp
ror
pop
jle
or
je
dec
jae
mov
jp
inc
dec
movsb
xor
ret
cld
jl
add
add
cwtl
mov
fmull
aam
in
add
xchg
ljmp
add
push
test
outsb
movsb
scas
push
ljmp
clc
sub
push
pop
and
jle
cmc
aas
add
push
je
adc
inc
and
mov
out
push
add
pop
fadd
pop
hlt
adc
leave
pop
push
ret
pop
fadd
sbb
sub
pop
cmp
sbb
xor
dec
andb
das
add
adc
andl
and
shrb
and
jmp
jno
sub
ja
cmp
or
add
test
mov
pushf
fcomps
cmovo
inc
or
enter
dec
inc
test
mov
add
ja
mov
faddl
lret
push
cmp
or
or
xchg
push
jle
add
and
andb
adc
jle
mov
push
xchg
add
shlb
ficompl
inc
mov
std
inc
ds
out
or
jge
inc
andb
and
inc
lcall
aam
frstor
adc
jle
jo
cmpsb
pusha
cmp
or
mov
fists
add
or
add
loope
mov
mov
js
ds
fildll
test
sbb
cmpsl
clc
inc
or
inc
pop
mov
cld
sub
lods
add
mov
shrb
es
push
or
movsl
jb
add
cld
and
xor
lea
xor
push
mov
stos
sahf
mov
arpl
mov
add
pop
test
inc
stos
or
push
lahf
sub
fildll
mov
sub
add
add
pop
cmp
jno
sti
ljmp
and
test
push
xor
stos
inc
add
pop
or
dec
or
inc
push
inc
jg
ja
mov
jl,pn
leave
jbe
js
jbe
test
mov
adc
push
and
adc
out
xchg
add
push
and
pusha
adc
and
mov
cmpb
jo
push
add
or
or
call
cs
mov
imull
addb
push
rorl
int3
mov
icebp
pop
loopne
fsubs
movsb
dec
in
call
and
decl
shlb
or
push
cmp
das
adc
rcrb
cs
jle
clc
lcall
adc
mov
push
dec
or
rcr
mov
cs
push
jecxz
jae
cwtl
sar
pop
inc
adc
mulb
xlat
in
mov
enter
shlb
shll
loopne
mov
addb
lods
gs
mov
push
or
adc
movsb
loopne
push
loopne
jo
jo
aaa
cld
sbb
add
test
jne
fdivl
xor
and
adc
push
sbb
shlb
dec
lea
push
push
xor
test
fsubrs
std
mov
cld
adc
and
sbb
jbe
mov
and
jl
addl
loopne
loope
clc
outsl
mov
add
popa
lcall
sbb
jae
cmp
loopne
and
loopne
and
push
add
data16
pusha
aaa
push
push
js
sbb
push
cmp
incb
mov
xor
add
loope
adc
jo
add
scas
clc
data16
subps
jae
mov
add
idivb
mov
pop
or
and
stos
xchg
pushf
mov
les
push
sub
orb
dec
stos
dec
orb
sub
fistps
test
add
arpl
stos
or
mov
xchg
test
ret
pop
fs
stos
imul
movsb
clc
push
push
and
lods
mov
add
jbe
jmp
shl
divb
shrb
addb
or
adc
hlt
call
sbb
push
outsl
movsb
mov
test
add
sti
sbb
test
popa
xor
adc
pop
push
fdivr
inc
add
orl
lret
cmp
cmp
adcl
stos
fsubs
push
and
cmpsb
insl
lods
stc
and
jo
or
or
pop
dec
cmp
testb
mov
fnstsw
fcomip
and
jae
or
sbb
pop
add
insb
xor
inc
inc
rcrl
mov
mov
push
enter
std
ret
loopne
outsb
push
movb
inc
icebp
cmp
mov
sub
lock
or
push
add
jo
cld
mov
fcomi
sub
inc
and
sub
and
les
pop
test
mov
xchg
mov
stos
jno
push
lods
divb
adc
or
mov
movsb
incl
adc
int3
js
loope
insl
push
xor
stos
ficompl
push
adc
ret
mov
jb
mov
nop
push
mov
cmp
cmp
ds
and
enter
add
pushf
jmp
dec
ret
dec
and
sbb
or
lret
stos
ficoml
repnz
pushf
adc
push
push
cld
int
fnstcw
rorb
mov
sbb
ljmp
xor
enter
les
shll
adc
call
dec
jbe
mov
dec
mov
mov
cmpsl
adc
mov
mov
movsb
jge
ret
add
xchg
ss
mov
mov
add
ss
xor
aam
add
pop
xor
add
test
xor
arpl
addb
cld
addl
push
or
xor
xor
push
call
push
fdivs
xchg
add
sbb
add
in
dec
nop
add
dec
mov
mov
pusha
push
xchg
add
stos
push
adc
and
imul
mov
adc
rorl
andb
add
sub
sub
nop
push
jle
adc
pop
bound
or
data16
xor
jbe
dec
xlat
or
push
push
adc
sub
fs
in
cli
pop
cwtl
loopne
gs
sbb
enter
fisttpl
cmp
loope
add
loope
xor
and
jecxz
xchg
push
lock
adc
enter
pop
rorl
mov
adc
lcall
js
xor
jle
test
rcrb
int3
inc
and
lds
push
add
jb
xchg
sub
jbe
jg
adc
arpl
lods
pusha
gs
in
and
push
les
das
sbb
add
xor
xor
push
jmp
das
enter
add
loopne
shll
fdivr
sbb
mov
add
repnz
cli
sub
add
incl
push
cmp
adc
loope
aaa
fsubrs
sub
lret
loopne
cmp
sbb
sbb
fld
pop
mov
mov
pop
add
mov
push
adc
dec
ss
or
lods
mov
ja
fstp
je
or
or
ret
fmull
mov
subb
push
adc
sbb
test
ja
xor
adc
pusha
add
push
add
inc
lea
jle
or
mov
pop
mov
je
std
call
or
mov
adc
mov
lcall
in
adc
outsl
lcall
repz
test
push
test
lea
cli
imul
enter
fstl
cwtl
and
inc
shlb
call
jbe
enter
test
add
cwtl
adc
jo
xchg
popa
add
sbb
add
cli
outsl
push
cld
cwtl
mov
or
add
decl
add
xor
sub
test
bound
add
jle
pop
popa
call
push
xor
mov
push
pop
or
ljmp
push
pop
icebp
xchg
xchg
inc
scas
scas
int3
in
push
ljmp
push
movb
mov
lret
or
enter
orb
or
fcomi
sbb
mov
or
fstl
xchg
loop
adc
adc
in
loope
clc
xchg
cmp
jecxz
sub
pop
out
sbb
insl
pop
mov
sbb
jg
xor
adc
lods
push
adc
adc
xor
pop
and
jo
jmp
outsb
inc
sbb
sbb
mov
insb
mov
mov
inc
pop
rorb
shr
sub
ret
add
or
adc
add
mov
pusha
and
push
aam
cli
mov
dec
adc
and
ja
bound
push
test
xchg
add
ja
enter
or
cmp
mov
dec
push
lock
call
pusha
xchg
aam
push
data16
cld
nop
rcl
in
shlb
dec
dec
cmp
pop
and
dec
push
sub
sbb
add
add
adc
loop
push
hlt
sub
jbe
pop
cmp
arpl
stos
push
sub
not
and
orl
and
adc
out
sti
mov
jmp
pusha
pop
mov
cmp
es
xor
inc
push
in
mov
jno
test
cmp
pop
pop
out
and
das
add
stos
pop
and
pop
cld
pushl
pop
and
adc
add
push
into
or
sub
bound
imul
mov
imul
shl
mov
and
or
xor
or
adc
jecxz
cmpsb
push
and
xor
cwtl
add
and
fwait
lods
mov
addb
inc
mov
push
mov
xchg
and
ljmp
test
call
orl
inc
pop
sbbl
addl
xchg
xor
mov
mov
push
xor
mov
arpl
xor
sbb
imul
mov
adc
dec
mov
sub
xchg
lock
jmp
add
push
jl
cmp
adc
outsl
push
push
or
sub
jb,pn
adc
sbbb
loope
out
add
sahf
sbbl
push
add
imul
push
add
mov
adc
push
adcb
les
inc
sub
add
cmp
mov
add
and
jg
das
movsl
outsl
and
mov
inc
dec
mov
enter
mov
push
adc
dec
push
jl
sbb
adc
adc
call
or
mov
push
adc
inc
fcmovb
inc
dec
sbb
call
pop
and
sbb
add
pop
nop
adc
aas
lcall
push
lret
add
adc
ret
push
jnp
imul
pop
das
or
mov
fiaddl
sbb
xor
sub
loop
inc
inc
ljmp
and
and
and
cmp
jbe
push
ljmp
adc
andb
pop
jle
movb
inc
push
cli
push
xor
dec
add
push
pop
xchg
xchg
sbb
scas
add
adc
fidivs
push
or
cld
adc
lods
jo
es
adc
cmp
leave
sbb
inc
mov
fimuls
fisubrl
mov
add
pop
jg
jle
add
popa
add
xchg
push
sbb
push
mov
les
clc
pusha
jge
sarl
fdivs
out
adcb
push
fdivrl
aam
std
or
jbe
add
and
push
pusha
les
test
inc
xor
ret
clc
and
dec
test
lods
popf
mov
sbb
and
dec
incl
add
nop
jo
and
inc
nop
inc
mov
lock
mov
adc
xchg
sbb
fsubl
int
rcrb
mov
fidivl
adcb
ja
add
or
add
outsl
cmp
insb
sub
inc
mov
icebp
pop
add
add
loopne
jg
dec
sti
pop
adc
test
sub
adc
inc
dec
cli
dec
add
sub
fs
mov
mov
shr
loopne
je
mov
push
movsb
and
js
hlt
pop
pusha
jns
pushf
add
pop
rorl
inc
push
and
movsl
and
sub
inc
out
xchg
decb
or
inc
stos
imull
push
push
stos
popa
lds
arpl
inc
pop
push
cmp
xchg
inc
mov
mov
jns
pop
add
popa
and
aad
cld
data16
cmp
inc
pop
enter
add
aas
fisttps
stos
scas
data16
lret
daa
fs
inc
adc
add
sbb
pop
sar
lret
sub
test
or
sti
add
mov
mov
gs
add
xor
cmpl
mov
addl
and
dec
dec
adc
test
cmc
cmp
loopne
add
icebp
incl
testb
cld
and
pop
cltd
arpl
daa
loopne
or
and
inc
add
jmp
adcl
mov
sbb
dec
jbe
mov
xchg
push
cmp
or
sub
out
cs
cmp
jp
test
inc
je
adc
sbbl
pop
or
cmp
or
dec
xchg
or
inc
or
adc
add
cmc
es
mov
lods
or
and
and
enter
fadds
sub
enter
mov
add
dec
fistpl
sti
inc
or
mov
ss
popa
cmp
orl
call
mov
add
adc
aad
add
jb
stos
lcall
pusha
add
bound
insl
imul
dec
adc
les
and
mov
lods
xor
adcb
xchg
and
andb
and
mov
aam
or
add
push
sub
cmpsl
das
xchg
fdiv
test
int3
sbb
pusha
push
adc
sub
mov
movsb
sbbl
in
aaa
sbb
xorb
add
adc
and
dec
test
mov
inc
roll
and
pusha
enter
mov
add
movsl
sbb
lock
fmull
cld
mov
or
push
adc
inc
insl
cld
stos
sub
push
jle
sub
xchg
cli
or
add
push
xor
and
add
dec
mov
and
add
dec
jmp
inc
mov
lret
push
ljmp
shrb
enter
push
add
sub
clc
and
jno
aaa
inc
and
add
jmp
pop
insl
hlt
mov
sbb
stos
int3
sub
sub
sbb
pslld
pusha
xor
in
fildl
fs
and
adc
and
mov
dec
jbe
xchg
mov
adc
jno
xor
push
nop
xor
lods
adc
jo,pn
mov
pusha
adc
jp
push
sub
test
in
stos
mov
in
ds
ds
arpl
sbb
adc
ret
rorb
add
adc
xor
jno
nop
add
decl
sbb
nop
inc
push
push
loop
sbb
and
mov
mov
adc
mov
sbb
push
insl
call
test
arpl
dec
or
add
into
js
mov
rolb
push
push
lods
arpl
mov
sub
enter
or
outsl
lods
movsb
loopne
inc
stos
pop
subb
enter
adc
fbld
or
cmp
leave
mov
test
subb
push
xor
dec
std
ja
or
pusha
sub
jle
add
decb
test
ja
es
cmp
add
dec
adc
pusha
add
movb
sarl
test
xor
push
test
or
pusha
jno
adc
push
in
movsb
jle
push
or
jb
adc
mov
mov
int3
jno
sub
lcall
lods
sbb
sub
add
or
jae
shlb
and
jno
dec
rorb
and
loopne
push
jo
push
and
dec
pushl
fists
adc
mov
mov
cmpsb
cs
mov
or
je
clc
add
inc
or
cli
decl
adcb
fists
xor
les
pusha
and
push
ja
lods
push
mov
ja
ljmp
adc
jns
pop
cmp
and
inc
xchg
jo
les
sahf
rcll
add
test
and
movsl
cs
sbb
pop
sbb
cmp
adc
loop
inc
clc
jns
jne
and
test
ss
sbb
or
add
push
jno
xor
and
orb
add
mov
mov
cmpsb
sub
add
mov
std
fldt
pop
push
sbb
pop
sbbb
fisttpll
jno
or
stos
or
js
lea
push
rcrb
add
cmc
test
sbb
pop
pop
add
xor
incl
push
push
cmp
aas
push
mov
lods
push
push
fidivl
aam
dec
popl
cmp
dec
mov
or
loope
loop
push
cmp
xor
sbb
fildll
jmp
inc
add
iret
mov
ljmp
and
sbb
rolb
adc
sbb
or
add
mov
adc
lret
loopne
dec
push
xchg
ss
xor
add
lea
inc
and
ret
or
push
xchg
jle
enter
loopne
jp
ja
xchg
pusha
add
xor
sbb
adc
adc
add
inc
inc
jae
mov
jb,pn
and
pop
mov
add
and
sbb
clc
es
stos
ss
adc
cmp
nop
sub
jo
adc
push
mov
lock
ljmp
or
xchg
adc
push
or
dec
sbb
sub
and
fistpll
and
jmp
lss
ret
xlat
lcall
movl
imul
jecxz
loop
loop
inc
jo
add
icebp
stos
test
and
jg
mov
movsb
jnp
pop
sub
push
or
stos
out
shlb
mov
or
and
and
add
mov
enter
and
stos
and
push
add
inc
dec
in
xchg
mov
inc
mov
sub
or
adc
jb
mov
push
das
add
add
fiaddl
es
mov
nop
insb
and
or
xchg
and
dec
push
mov
movsb
xor
test
inc
lcall
and
repz
mov
sbb
nop
stos
lcall
mov
stos
push
rolb
add
push
inc
ss
dec
inc
xor
adc
insl
test
cs
sbb
jmp
mov
repz
sbb
loop
inc
sbb
scas
push
inc
hlt
lcall
jbe
mov
adc
sarb
fadd
fsubl
jo
or
imul
add
dec
fmul
mov
test
adc
decl
into
sub
push
lods
or
loopne
lods
rorb
push
add
push
push
mov
adc
faddl
pop
jl
pop
mov
mov
sub
jl
add
add
dec
test
nop
add
push
push
fildl
pop
and
pusha
sub
lcall
mov
mov
scas
add
nop
je
xor
dec
and
adc
add
mov
fdivs
arpl
ret
aad
scas
stos
or
hlt
pusha
mov
mov
loopne
lods
push
in
and
nop
sbb
lret
xor
mov
insb
jnp
sbb
outsl
filds
jo
stos
rorl
lock
dec
jg
mov
cmpl
and
ljmp
cmp
adc
push
mov
and
pop
and
and
lcall
rol
jp
add
mov
hlt
movsb
inc
pop
push
test
jo
pop
rcl
adc
xor
sarb
cmp
adc
mov
push
sub
jg
push
adc
push
ror
data16
and
test
clc
inc
fcoms
sbb
sbbb
rcr
and
dec
adc
sbb
xlat
xor
data16
cli
inc
sub
loope
hlt
cmp
and
test
xor
mov
pop
push
cmpsl
loopne
shlb
loopne
xchg
sbb
loope
and
push
mov
stos
loope
adc
fbld
jo
and
test
lret
sti
push
pop
add
or
lcall
cmp
cld
pop
and
enter
loope
out
jnp
pop
and
stos
adcb
rclb
je
rcrb
pushl
inc
push
add
adc
or
nop
xor
inc
call
test
cmp
push
jmp
loopne
rclb
adc
fdivr
lahf
dec
cwtl
sub
hlt
and
stos
mov
pop
mov
jb
sub
or
mov
or
add
xor
jbe
in
xlat
xor
je
idivb
add
shr
hlt
inc
push
and
inc
stos
imul
sub
cmpb
sbb
pop
mov
push
mov
push
loopne
lret
push
fistpl
adc
adc
test
scas
dec
xchg
mov
jo
inc
test
flds
and
sbb
xchg
fwait
aam
add
fcomip
aam
or
fsub
test
or
push
dec
loopne
add
jb
in
xchg
sbb
xor
lret
inc
arpl
decb
add
cmp
daa
int3
jmp
add
iret
rcrb
and
test
add
test
or
and
mov
aas
data16
pop
stos
int3
inc
lret
xchg
xchg
stos
mov
mov
mov
das
bound
jae
cltd
ret
or
lcall
push
or
adc
jmp
adc
sbbl
lcall
cld
data16
ja
push
add
lret
push
ret
jno
mov
ja
pop
inc
fs
es
insb
insl
jge
inc
xor
outsl
pop
add
pop
add
cmpb
or
add
push
or
xchg
adc
addl
add
pusha
mov
adcb
out
cltd
out
sub
jg
push
jae
pop
lods
push
sbb
test
fiadds
ss
pop
aam
xor
pop
sub
ror
mov
dec
inc
adc
idiv
mov
push
jnp
aaa
and
mov
fnsave
add
adcl
sbb
stos
ret
out
push
xor
cmp
lock
xorb
dec
mov
lcall
and
sub
jno
inc
push
inc
add
jl
bound
aas
sbb
lcall
shll
mov
movsl
inc
mov
movsb
dec
mov
sub
mov
cltd
add
mov
xor
sbbl
jne
mov
inc
popa
mov
add
das
test
pop
pop
inc
add
pop
add
mov
adc
popa
pop
rorb
push
pop
dec
xor
test
das
cmpsl
stos
sbb
inc
jbe
add
call
cwtl
jp
andl
jp
out
dec
adc
leave
sti
fldl
push
add
pop
lcall
adc
xorb
add
ja
xorb
mov
xchg
test
jmp
shlb
and
das
adcb
daa
cwtl
es
and
xchg
mov
dec
sbbl
outsb
and
inc
add
sbb
dec
mov
push
sub
jae
test
xchg
incl
cmp
ja
stos
pop
jl
add
adcb
jne
roll
fldenv
mov
add
inc
inc
sbb
mov
cld
popa
leave
clc
mov
mov
xor
push
sub
clc
test
pop
or
jmp
stos
js
lods
nop
or
sub
hlt
lret
popf
or
and
je
inc
das
filds
pusha
or
loopne
jge
inc
dec
xchg
mov
push
add
cmp
inc
dec
sbb
adc
or
inc
push
mov
mov
push
dec
push
dec
pop
aam
movsb
shll
cmp
pop
jg
mov
push
lret
das
jmp
dec
fs
daa
loopne
mov
add
js
mov
cmp
inc
mov
push
xchg
enter
arpl
push
cld
xor
mov
cmp
pop
mov
scas
cmpsb
mov
aam
jle
adc
ljmp
leave
loopne
shrb
rcr
call
mov
sbb
mov
das
loopne
shlb
adc
jg
mov
add
outsb
out
addr16
jo
add
ja
imul
clc
addl
add
and
js
jle
enter
push
clc
test
xchg
mov
sub
jl
add
xor
add
ret
shrl
or
jae
dec
mov
dec
subl
leave
sbb
ror
ljmp
movsb
jg
jns
xchg
mov
clc
rcrb
scas
andb
push
cmp
jle
add
mov
dec
pop
adc
or
enter
cmp
mov
aas
mov
push
arpl
fistps
cwtl
cmp
sub
or
fbld
les
std
sub
adc
push
inc
add
incl
aas
adc
movsb
shll
pusha
mov
and
pop
pop
mov
push
sub
pop
ret
mov
adc
sbb
xchg
andl
es
std
out
es
xor
adc
leave
push
mov
adc
mov
mov
test
mov
dec
hlt
ja
clc
ds
inc
aaa
js
add
sub
imul
adc
xchg
dec
jo
js
lea
bound
mov
ja
cmp
enter
sub
repnz
loop
popa
xchg
jp,pn
or
push
mov
lods
or
add
or
test
decb
and
sbbb
data16
push
inc
loopne
add
push
ljmp
cmp
insb
xor
add
cmp
add
inc
lcall
and
adc
jl
add
mov
sbb
mov
push
imul
jbe
in
add
add
push
in
jp
dec
or
xchg
mov
mov
inc
jmp
cmp
add
lretw
js
filds
test
push
dec
repnz
push
xchg
add
shr
and
leave
xor
xchg
dec
adc
pop
mov
rorl
or
dec
add
test
mov
sahf
mov
cmpsb
subl
inc
enter
inc
xor
jl
cmc
push
jge
xor
adc
sahf
adc
jl
inc
ds
push
or
cmp
sbb
pop
add
inc
call
andb
jle
ficomps
xor
push
enter
or
jp
jbe
inc
test
lret
les
adc
sub
nop
mov
outsl
xor
jnp
mov
push
inc
out
cmpsb
mov
nop
je
fs
fdivrs
mov
data16
ret
imul
jbe
adc
sbb
or
dec
clc
icebp
fldt
add
and
sbb
lock
adc
lock
pop
and
loopne
fs
mov
fnstcw
fildl
xor
fs
es
add
sub
loope
lret
or
dec
int3
jo
or
sbb
enter
pop
mov
or
push
xchg
pop
push
and
les
jl
gs
add
or
add
mov
push
sbbb
lcall
pop
add
and
cld
mov
xor
pusha
cli
or
mov
push
and
xor
dec
inc
add
lcall
pop
shrb
int3
hlt
pop
mov
fisttps
xor
lods
or
cli
mov
loopne
fdivrs
mov
sub
add
aam
xchg
adc
rolb
js
ja
push
add
rclb
rclb
aam
cmpb
int3
jb
jo
pop
stos
or
hlt
rcr
xor
mov
sub
and
in
or
mov
les
mov
inc
cmp
add
add
fmull
insl
xchg
fidivrl
inc
push
cmp
push
orb
xchg
push
xchg
push
inc
aam
or
jg
test
hlt
and
pop
pop
shl
adc
sar
icebp
add
push
call
cmp
add
add
lret
fildll
fsubl
movsb
pusha
mov
hlt
adcl
or
pushf
cld
fbstp
push
sbb
gs
push
pop
rorb
adc
lcall
adc
mov
jl
jbe
dec
and
add
push
test
cs
add
aaa
xor
and
push
inc
inc
sbb
adc
mov
add
fbld
rclb
and
xor
push
mov
mov
fs
lods
push
inc
mov
adcl
ficomps
sub
stos
daa
push
inc
and
sbb
mov
sar
lods
adc
jo
mov
sbb
inc
ss
cmp
add
add
and
cli
ja
lahf
add
sub
movsb
push
and
pop
jbe
mov
mov
cmp
daa
jne
add
dec
and
movsl
js
xchg
mov
xlat
bound
mov
dec
shlb
sub
aas
decb
or
push
add
or
pop
sub
jo
cmp
and
jo
ss
inc
ficompl
xor
adc
mov
inc
inc
or
dec
adc
out
js
xorl
xor
fcoml
test
jg
fildll
xor
and
loopne
lret
sarb
daa
enter
bound
or
sbb
or
cmp
shlb
aaa
or
adc
add
sub
test
loopne
push
inc
hlt
jmp
add
enter
and
insl
add
movsb
stos
and
push
inc
dec
push
add
push
push
and
or
inc
inc
fcoml
enter
add
add
inc
pop
sbb
lods
adc
cli
xor
mov
clc
push
dec
sbb
push
add
ds
data16
repnz
add
add
pusha
sbb
jae
push
mov
mov
fsubl
sbb
lret
mov
sti
cmp
adc
adc
nop
add
add
insl
pusha
xchg
jecxz
call
inc
or
ja
dec
jno
rorl
sub
lcall
test
mov
xchg
fdivs
jo
jbe
mov
add
push
add
shll
push
test
xor
mov
rolb
mov
mov
jo
or
mov
cld
sbb
add
push
aas
lods
cs
adc
jo
lock
sub
adcl
std
sub
cli
inc
dec
pop
mov
mov
enter
push
add
add
fdiv
jle
jge
sub
fcomp
mov
ljmp
rcrl
loop
popa
popw
imul
add
pop
fisubs
push
adc
cltd
stos
jg
in
fistps
mov
movsl
movsb
das
push
xor
popf
nop
jle
cmp
xor
fucomip
aaa
in
push
aad
and
and
push
pop
shrb
cltd
in
fcmove
and
sbb
ficomps
and
imul
clc
lret
and
and
fildll
inc
jo
xor
shlb
cmp
add
insl
cld
fcoms
and
and
dec
incl
push
stos
push
and
inc
pusha
and
and
push
or
inc
jg
and
test
jbe
sbbb
das
xorb
add
mov
sbb
out
arpl
out
daa
shr
and
test
mov
call
int3
jle
mov
jg
mov
cmp
aaa
inc
inc
mov
je
ja
add
add
call
add
testb
sbb
add
arpl
mov
and
mov
out
test
jecxz
mov
mov
and
lret
xor
aad
xchg
loopne
cli
fsubrl
lock
ror
push
add
fsubr
mov
jno
ljmp
xor
test
or
sub
sub
sbb
outsl
pop
sbb
add
loop
add
adc
rolb
enter
jae
jae
nop
clc
incl
and
push
imul
inc
sub
push
push
enter
dec
cmp
fwait
repnz
loopne
dec
push
lock
rcll
pop
ja
xor
clc
das
addr16
jecxz
push
push
andb
mov
fadds
sbbb
outsb
mov
jbe
push
add
fadds
jg
mulb
mov
adc
push
loope
xchg
addl
and
inc
inc
leave
dec
loop
dec
mov
xchg
in
orb
cmp
add
ljmp
or
adc
loope
add
and
scas
jno
ljmp
push
movsl
dec
sbb
shrl
cmpl
mov
or
jo
popa
sbbb
add
jns
repnz
jg
and
scas
and
sti
push
or
pop
imul
cmp
add
jecxz
sub
popf
aam
mov
loopne
and
dec
lods
and
push
jo
pop
and
shlb
push
cmp
jo
xor
sar
call
stos
xor
adc
adc
icebp
popa
test
push
push
xchg
pusha
and
jb
or
call
add
inc
pop
push
or
bound
hlt
ljmp
inc
or
ficompl
ljmp
inc
add
and
cmp
pop
push
stc
or
jnp
adc
sub
xor
sbb
insb
cmp
out
inc
add
movsl
test
sbb
jne
push
jnp
enterw
shll
addb
cmp
adc
add
daa
mov
adc
hlt
ret
pop
or
outsl
adc
insb
sub
jle
mov
dec
push
inc
mov
push
orb
mov
sub
sbb
rclb
sarb
add
pop
sub
cwtl
adc
pop
xchg
add
nop
sbb
inc
add
subl
imul
js
mov
and
jae
inc
rcr
fsubrl
sub
add
sub
lcall
or
int3
adc
dec
mov
lret
aas
sub
inc
or
ja
outsb
add
loopne
rolb
xor
sbb
ret
ror
insl
shlb
lcall
jg
push
jb
enter
add
je
fistpl
pop
mov
rorl
adc
or
cmp
add
idivb
xchg
inc
xor
lods
decl
push
dec
add
push
push
ret
call
lock
add
cmp
add
stos
loopne
inc
rorb
mov
sbb
push
in
jecxz
add
lods
les
and
mov
clc
push
dec
adcb
jp
mov
pop
or
or
subb
filds
and
lcall
fs
add
adc
pusha
mov
or
shlb
sbb
push
push
sub
adcb
ja
movsl
in
or
aas
shlb
push
add
scas
xor
xor
push
dec
pushf
cmp
fildl
push
push
aaa
cmpl
add
insl
cld
mov
fistl
sbb
add
mov
or
sbb
cld
fwait
adc
cmp
xchg
push
and
loopne
jbe
scas
es
loopne
or
je
fbld
push
and
mov
pop
sub
push
or
in
mov
std
imul
popa
ds
outsl
add
loope
ljmp
dec
and
inc
test
mov
mov
fcmovu
add
xchg
movsb
xor
add
in
es
add
xor
inc
inc
and
inc
imulb
lods
inc
fldenv
and
or
sahf
jb
pop
imul
inc
mov
movsb
or
xchg
test
test
mov
daa
inc
mov
inc
or
rorl
add
inc
and
hlt
inc
outsl
adc
pop
mov
xchg
arpl
popa
stc
movsb
sbb
mov
mov
push
shll
mov
addr16
imul
hlt
mov
mov
fcomps
pushl
stos
jecxz
lea
or
or
and
aad
cmp
push
sub
enter
sub
mov
or
push
xchg
ja
test
and
xor
sbb
insl
push
inc
test
jge
and
mov
pop
bound
jb
mov
pop
pop
or
adc
jle
jmp
das
mov
push
ss
add
add
xchg
add
loop
adc
daa
jmp
mov
mov
mov
add
xchg
push
mov
ret
sbb
lret
inc
xor
inc
xlat
push
lds
xchg
xor
jne,pt
aas
test
xchg
jne
pop
nop
shll
jl
sub
out
jo
sbb
popa
enter
adc
push
jecxz
mov
add
or
lock
xor
enter
das
call
mov
call
mov
rclb
loopne
mov
out
and
ss
sub
or
xor
fs
xlat
and
addb
adc
les
shlb
mov
push
inc
rorl
out
cmp
xor
or
pusha
add
mov
mov
jl
and
push
xor
pop
enter
xchg
ffreep
mov
shll
xorb
lock
daa
lcall
jns
pushf
sub
push
push
jl
out
adc
pop
inc
jp
mov
xor
xorl
adc
pop
mov
jo
push
dec
add
sbb
add
fwait
adc
fistps
clc
je
mov
xor
adc
inc
orl
popf
adcb
pop
and
es
xor
xchg
loopne
stos
jnp
mulb
dec
dec
loope
clc
and
fcoml
daa
add
pop
mov
pop
mov
insb
jle
xor
push
push
js
aas
adc
fimuls
push
lahf
push
daa
dec
pop
xchg
jmp
or
rcrb
test
aad
sub
jae
fadds
or
mov
les
stos
push
push
mov
pop
mov
dec
fsts
xchg
pop
or
adc
push
add
or
test
mov
loope
clc
dec
ficompl
js
scas
adc
sbb
and
js
sbb
cld
pusha
mov
mov
or
ss
mov
mov
mov
push
jp
movsb
call
fldt
nop
jnp
adc
idivb
mov
nop
mov
mov
cwtl
ret
icebp
sbb
leave
mov
xchg
dec
loope
stos
push
loop
mov
mov
add
loopne
pop
push
pop
aad
das
dec
movsb
inc
loopne
adc
pop
lret
cli
jo
arpl
mov
add
xchg
xchg
lock
std
pop
push
adc
in
roll
jg
bound
call
ljmp
cmp
insl
add
fisubl
add
and
decl
add
sub
mov
rcrl
cmp
inc
add
ja
pop
int3
add
and
adc
lock
and
rolb
enter
sub
lret
pusha
sahf
sbb
sub
push
call
sub
mov
or
push
or
jle
jns
xlat
rorb
adc
js
rcr
and
push
push
rorb
shlb
aad
aam
out
sbb
enter
pop
push
or
ret
clc
in
jo
cld
dec
xchg
or
sub
outsl
aas
inc
pop
or
xchg
fsts
sbb
xlat
loopne
mov
and
ja
hlt
xor
add
adc
rorb
mov
div
in
xor
lcall
or
push
and
push
adc
test
pop
add
bound
xchg
sahf
jge
adc
and
popf
clc
scas
andb
push
add
and
lock
inc
movsb
std
inc
mov
movsl
adc
push
sahf
movsl
mov
inc
enter
mov
cmp
mov
and
sub
jle
cltd
stos
dec
add
or
outsb
jmp
loope
sbb
sbb
ja
test
push
rclb
mov
lock
mov
hlt
mov
enter
xor
push
sub
or
es
or
lock
rorb
mov
push
xlat
or
in
sbb
rorb
out
fsub
pop
inc
add
icebp
pop
push
or
push
ja
mov
scas
xchg
and
jl
daa
sti
xchg
push
das
adc
or
lret
shr
push
aam
mov
shlb
cmp
iret
adc
sbbb
int
jbe
push
dec
jle
and
jae
add
push
mov
lods
pop
mov
xor
stos
test
sub
or
add
stos
fmuls
add
and
lcall
and
sbb
push
fcoms
loopne
subb
andb
mov
add
sub
cld
cmp
lods
push
loopne
fmul
pop
nop
push
lock
add
lret
aaa
sub
shrb
mov
and
push
imul
and
and
inc
push
test
xor
inc
mov
or
rcrb
dec
out
push
jne
pusha
adc
mov
and
push
leave
ljmp
rcrb
enter
add
and
std
rorb
inc
fmull
fldl
sub
jle
mov
insl
or
popa
or
or
mov
mov
popa
aaa
cmp
in
xor
dec
jl
ss
xchg
mov
fst
fwait
mov
inc
mov
loope
dec
repnz
add
enter
ret
dec
or
arpl
sub
sub
cmc
lret
mov
stos
rep
pusha
out
fbstp
loopne
mov
jo
in
sub
or
lret
inc
add
add
add
les
add
int3
pop
nop
ljmp
adc
add
je
add
rolb
outsb
das
in
orl
adc
bound
sarl
ret
gs
in
lcall
push
mov
call
xchg
and
es
leave
pop
push
adc
mov
dec
add
aad
adcb
fsubs
xor
andl
lds
fcomps
lock
pop
jb
mov
out
test
andb
test
xchg
push
pop
hlt
in
inc
cmp
inc
xor
push
jo
lcall
xor
leave
push
enter
add
fwait
popa
sbb
mov
push
sbb
pop
dec
add
js
incl
shrb
or
adc
nop
dec
addl
rolb
push
test
dec
ret
shlb
push
sbb
mov
pusha
pushl
sbb
cmp
or
mov
push
test
outsl
sub
cs
lds
inc
add
sub
dec
xchg
add
sub
adc
out
inc
dec
cmc
ljmp
or
and
sub
out
adc
fldl
inc
xchg
inc
and
jmp
ret
xor
movsb
adc
pop
int3
adc
fldl
adc
add
and
es
dec
daa
cmp
rorl
sbb
mov
sub
leave
test
shl
cmp
xchg
mov
add
adc
enter
bound
jle
andb
add
and
pushf
xor
add
pop
or
call
lea
shrl
sub
loope
stos
pop
fistps
adc
xor
inc
movsb
sub
insb
les
add
je
lcall
repz
test
adc
mov
xor
movsb
or
lock
and
ficoms
mov
mov
jge
and
cmp
out
adc
mov
mov
adc
xlat
jo
inc
and
mov
push
addb
out
push
jle
lods
ljmp
and
sub
inc
clc
mov
outsb
scas
sub
add
dec
add
inc
je
mov
adcb
and
push
inc
xor
xor
dec
leave
cld
je
inc
push
dec
mov
inc
adc
dec
push
add
pop
add
imul
push
gs
push
repnz
add
cwtl
sti
popa
js
and
cmp
push
sub
pop
xor
xchg
stos
loop
add
adc
add
push
cwtl
ja
decl
jl
orb
xor
add
add
clc
push
mov
mov
enter
fdivl
std
mov
enter
xor
sub
xor
int
out
enter
mov
adc
adc
test
sbb
ss
js
jne
dec
ja
mov
jo
push
shlb
inc
inc
mov
rolb
add
dec
mov
psrlq
adc
jp
sbb
push
sbb
mov
frstor
sti
pushl
fwait
push
sbb
dec
movsl
loopne
orb
xor
and
jle
pop
push
sub
sub
test
sbb
push
or
pop
dec
test
and
and
mov
jl
xor
sbb
jo
stos
das
lods
xchg
push
and
fisubl
mov
push
arpl
xchg
xor
lcall
sub
nop
shlb
add
mov
fbld
cmp
adc
nop
sub
inc
cmp
cwtl
inc
or
jl
fwait
jno
out
pusha
push
and
js
outsl
and
jle
mov
xchg
lcall
pop
xchg
sahf
sub
std
ja
push
notl
rorb
and
push
add
outsb
dec
mov
add
sbb
loop
xor
fs
mov
mov
add
adc
pop
rcrb
stos
push
jl
jl
fists
jge
push
push
inc
mov
js
add
sub
adc
xor
fcomp
ja
fistl
enter
or
add
popf
xchg
into
push
add
lods
mov
add
jno
mov
sub
scas
add
push
mov
orb
xchg
rolb
out
xor
jge
and
push
sub
and
sub
or
or
add
outsb
sub
push
shl
je
jae
pop
icebp
das
sbb
sub
lods
pop
fdiv
cwtl
test
loopne
or
dec
cli
les
notl
enter
inc
xchg
dec
test
jg
add
and
sbb
ss
and
clc
dec
lock
push
cs
or
stos
sbb
faddp
or
cmpsb
fbld
mov
and
test
xor
pop
popa
mov
adc
rcrb
dec
enter
inc
imul
pop
cld
lcall
jge
or
aad
jae
xorb
xor
or
jnp
sbb
mov
dec
jl
stos
push
cld
sbb
and
jae
ljmp
nop
jne
or
cli
inc
mov
jg
jae
add
add
cld
mov
push
adc
push
inc
sbbl
mov
mov
add
int
xor
mov
cli
out
shlb
inc
movsb
sub
ja
test
dec
mov
fldenv
inc
addr16
out
enter
push
inc
push
xor
jnp
xlat
test
data16
push
jno
xor
lods
pop
rolb
push
add
add
cmp
jmp
shl
call
cld
add
and
add
inc
shlb
jo
ss
push
inc
and
push
mov
cmp
cltd
jle
ret
sub
fidivl
adc
test
adc
pop
sbb
mov
stos
mov
sbb
incl
pushf
sub
lods
adc
mov
fbstp
sbb
loope
nop
push
cmp
ret
das
push
sbb
push
add
loopne
test
pop
sub
fsub
xor
sub
push
je
movsb
aaa
cs
adc
sub
jbe
movsl
mov
add
and
jmp
bound
sbb
push
shlb
and
xchg
jno
fwait
pop
add
xchg
shlb
call
fidivs
repnz
icebp
and
stos
loopne
adc
add
shll
lock
jbe
xchg
mov
pop
mov
orb
add
fmul
xor
pop
dec
add
sub
aas
push
enter
and
cmp
loopne
mov
clc
pop
sbb
scas
adc
loopne
add
rcrw
mov
sahf
or
and
shr
aam
test
jge
enter
pusha
dec
data16
fisttpl
outsb
jl
jecxz
inc
mov
inc
mov
or
mov
je
cld
pusha
or
pop
decb
ljmp
test
mov
add
add
or
add
and
lds
and
and
mov
pop
push
sub
dec
dec
outsb
sub
mov
mov
add
clc
mov
jle
cmp
dec
add
pop
rorb
cmp
adc
or
test
shrb
add
mov
cmp
fdivp
aaa
add
lret
xor
aaa
test
addb
jg
movsb
and
cwtl
orb
pop
sub
pusha
bndstx
js
enter
add
adc
inc
testb
orl
sub
jg
jecxz
add
add
adc
ret
addr16
int3
test
adc
pop
mov
arpl
add
or
rcrb
addb
sub
imul
lret
or
or
inc
push
mov
je
mov
mov
cmp
pusha
or
add
cmpsb
push
push
push
pop
jp
loopne
adc
hlt
push
stos
movsb
int3
test
xchg
xor
stos
push
cmp
mov
dec
jbe
add
lods
inc
pop
outsb
inc
filds
das
movsb
decb
and
jbe
jno
jo
dec
add
add
push
sbb
movl
add
cmp
movsl
dec
pop
mov
ljmp
xor
adc
jno
and
sbb
fcomip
ds
sub
lods
xor
sahf
jb
jmp
js
and
shl
outsl
xor
fldenv
pop
mov
adc
mov
xlat
roll
scas
and
inc
loop
sub
enter
call
fcomip
inc
xor
inc
adc
lcall
add
aam
pusha
inc
sbbb
mov
xor
inc
mov
cld
popa
outsl
push
adc
imul
pop
aaa
or
inc
repnz
xchg
push
inc
ja
adc
sub
push
inc
rcr
adc
add
add
cli
sbb
mov
and
lret
imulb
add
lock
sub
or
adc
cmp
clc
dec
sbb
inc
inc
cs
pop
pop
adc
add
xor
pusha
sbb
scas
inc
add
mov
ja
xor
xor
ja
outsb
je
lcall
mov
loop
inc
add
js
call
lods
jp
push
or
pop
enter
inc
jge
mov
pusha
pusha
out
stos
push
xchg
sub
sar
jp
das
mov
mov
das
scas
mov
mov
lret
hlt
ffree
outsl
mov
dec
mov
out
push
xor
cli
adc
hlt
mov
enter
rolb
push
pop
imul
ret
dec
call
xorl
pop
shlb
mov
push
or
in
or
ds
andl
std
fstpt
mov
add
or
pop
xor
xor
adc
xchg
rclb
in
aas
imul
icebp
adc
inc
adc
push
push
movsb
push
popa
loop
inc
sub
jae
and
push
sbb
push
std
fldt
and
sub
lcall
xor
add
je
mov
inc
xor
add
xchg
mov
lods
loop
cmp
jg
jb
xor
cmc
lock
and
and
add
and
ss
subb
xor
and
or
add
push
xchg
jno
ret
jecxz
xchg
ret
jge
add
add
insl
push
mov
rcr
mov
rorb
add
inc
loope
ret
adc
insb
loope
shr
lret
adc
fdiv
lods
sbbb
cmp
loope
jle
cmpsb
push
add
and
jae
enter
cli
bound
outsb
fisubl
js
sub
and
xor
mov
jno
loope
dec
sub
movsb
ljmp
xor
pusha
xor
push
cld
outsb
insb
stos
jno
push
adc
inc
pop
imul
or
mov
cld
mov
jg
push
xchg
cs
enter
mov
add
push
sub
or
pusha
lods
ja
add
es
rol
pop
cmp
shrb
or
add
sub
add
imul
mov
mov
add
movsb
mov
loope
cld
jo
dec
and
pop
lock
pusha
push
repz
xchg
add
push
fists
mov
push
mov
inc
enter
out
jno
sbb
push
pop
pop
and
push
jo
push
xor
inc
test
mov
and
xchg
scas
adc
aas
and
xor
test
jno
bound
js
and
in
adc
pusha
mov
mov
xor
clc
dec
mov
negl
inc
cmpb
mov
push
push
sbb
incb
push
add
sub
sbbb
adc
push
stos
add
adc
mov
push
or
jo
add
push
arpl
orb
cmp
jg
push
sub
mov
jecxz
jbe
cli
mov
sarb
jg
or
outsl
mov
and
enter
or
push
fimuls
inc
je
add
jle
and
add
cld
mov
loopne
mov
jbe
js
cmp
inc
loopne
dec
or
addb
cmp
mov
mov
add
pop
shlb
add
push
cli
inc
inc
mov
mov
int
xchg
dec
cmp
fdivr
jno
sbb
inc
xor
push
xor
xor
mov
enter
xchg
aad
fs
shlb
jbe
jg
in
fbstp
mov
mov
mov
dec
pushf
icebp
or
std
mov
popf
sub
add
test
add
adc
jo
ret
adc
lea
out
inc
inc
and
adc
dec
inc
xor
loopne
push
or
dec
clc
dec
scas
add
outsb
push
inc
adc
pop
push
orb
dec
inc
roll
adc
ret
clc
push
decl
mov
movsb
mov
add
add
pop
jb
outsl
xor
test
lock
jb
pop
xchg
js
xor
add
ja
adc
int3
push
push
shll
adcb
out
push
adc
fmuls
add
ja
dec
inc
lcall
jbe
pop
xor
add
or
ret
pop
adc
cld
adc
les
pop
enter
call
pusha
cmp
jle
shlb
add
xchg
mov
sar
sub
adc
mov
stos
test
mov
jg
pop
lds
xor
push
mov
test
arpl
mov
xor
ret
pop
sbb
dec
inc
movsl
pop
xchg
ja
inc
cmp
or
mov
ret
cli
jo
xor
jnp
lahf
dec
and
incb
cmp
enter
test
loopne
lods
bound
cs
or
lcall
clc
add
and
mov
jae
add
sbb
jne
loop
dec
mov
and
add
incb
push
ficompl
movsl
add
add
cmc
scas
insl
pop
ds
dec
fidivl
jo
add
shlb
add
add
mov
stos
adc
enter
pop
dec
push
jge
incb
inc
add
fwait
data16
mov
sbb
movsl
mov
lahf
sub
and
cwtl
lea
or
cmp
lods
filds
inc
call
add
cld
and
adc
and
lcall
dec
mov
sahf
sbb
imul
stos
pop
lcall
enter
xlat
add
jg
or
clc
lret
cs
fcmovbe
pop
add
jnp
add
addb
mov
movl
mov
cld
or
lret
add
add
fimull
pop
sub
test
adc
test
hlt
jnp
fdivs
outsb
mov
fsubs
xchg
push
dec
adc
shlb
inc
mov
cmp
add
aas
sahf
add
xor
add
movsl
pop
dec
dec
push
xor
or
enter
or
roll
lock
jnp
imul
xor
lds
adcl
mov
pop
sub
rorb
popw
adc
add
xchg
icebp
incl
ror
push
shlb
fisttps
fisubrl
fisubrs
adc
lods
add
test
push
push
pop
insl
mov
shrl
sbb
jg
inc
ds
movsb
or
cmp
cmpb
jae
jl
orl
pop
call
jns
pop
loope
sahf
es
xor
enter
inc
inc
call
les
pop
insb
call
xor
fsubs
out
pop
filds
lods
and
enter
mov
add
add
insb
inc
pop
icebp
lods
outsl
inc
pop
add
loope
stos
pusha
sbb
adc
inc
mov
push
repnz
jle
das
inc
sbb
cmp
mov
pop
add
and
fimuls
jp
adc
aad
lock
ret
ljmp
js
rolb
adc
test
andl
cwtl
nop
nop
push
inc
in
fbld
mov
inc
cmp
add
test
fisubrl
popf
or
or
adc
xchg
call
and
xor
addb
fwait
cmpb
sub
or
mov
sub
test
pop
loop
or
push
fsubp
sbb
or
fbstp
lods
and
push
enter
dec
movsb
pop
jae
adc
outsb
sbb
js
cmp
outsb
adc
inc
jmp
fadds
repz
mov
insb
sub
enter
and
aaa
loopne
xor
pusha
jg
jne
cmpb
or
mov
pusha
xor
or
fwait
loop
inc
inc
cmp
neg
xchg
popa
push
loope
sub
mov
aas
outsl
rcr
sbb
jb
jae
or
push
leave
or
sub
repnz
push
xor
mov
stos
sbb
and
fwait
loope
into
xlat
dec
adc
es
cld
lock
add
pop
enter
outsb
das
fdivrs
ss
push
jg
notb
inc
addl
sar
mov
or
jecxz
aaa
or
xchg
cmp
inc
stos
push
and
ds
out
adc
push
lahf
out
cwtl
daa
and
xchg
loop
fbld
add
cmp
mov
add
mov
outsl
pop
push
add
xchg
loop
pop
xchg
and
js
mov
lcall
jl
scas
mov
scas
sub
or
mov
jo
xor
das
mov
fsubs
xor
addr16
pop
xchg
push
adc
shrb
or
stos
out
rcll
sub
sbb
mov
push
aam
fdivp
adc
cwtl
je
inc
nop
and
jns
add
cwtl
mov
jg
or
repz
loope
inc
mov
push
out
jg
mov
cmp
and
dec
call
mov
adc
and
and
xor
sbb
bound
jg
adc
xorl
or
mov
in
sbb
ss
sub
add
leave
sub
loopne
bound
fcomps
loope
push
cld
or
lods
sbb
lods
pushf
movsl
repnz
xor
sbb
sub
std
dec
push
int3
sbb
add
sub
pop
sub
adc
adc
imul
das
js,pn
or
push
inc
jl
add
fmulp
mov
add
mov
add
mov
subb
js
sub
loop
loope
pop
stos
mov
fildl
clc
sub
or
inc
and
sbb
loop
mov
ss
sub
and
fildl
push
lret
sbb
mov
push
push
int3
bound
rolb
push
decl
ljmp
and
mov
dec
popaw
push
fsts
loope
and
dec
or
sbb
push
and
sub
jge
sbb
sub
inc
cld
andb
sub
mov
cmpsb
push
push
add
das
or
mov
stos
cs
inc
ret
mov
inc
addr16
out
pop
ret
test
shlb
push
enter
pop
adc
in
and
aam
sbb
add
cmc
nop
or
xor
sub
outsl
and
lods
stos
push
adc
inc
adc
xor
xchg
inc
out
adc
add
bt
stos
sbb
add
sbb
inc
push
push
xor
pop
mov
push
pop
out
sbb
add
xor
cmovbe
aaa
push
add
call
lret
and
mov
pushl
das
test
adc
add
dec
fsubl
xor
test
or
sbb
inc
sbb
adc
inc
lock
add
fcmovnb
push
adc
rcll
xchg
js
mov
add
enter
xor
add
fwait
aam
pop
loopne
test
sarb
cmpsb
mov
test
jo
dec
xor
jno
lret
xor
cmp
push
or
mov
or
push
sub
pop
ficoms
add
jb
outsb
mov
sbb
dec
push
push
aam
sbb
xor
enter
or
hlt
push
cwtl
xchg
and
and
add
xchg
iret
insl
dec
add
roll
adc
pop
rcrb
enter
and
xor
add
or
adc
adc
xor
mov
mov
subb
mov
aam
inc
push
jo
int
dec
push
jbe
or
push
mov
or
mov
imul
fdivrl
pop
out
cmp
xor
leave
mov
push
pusha
mov
or
mov
xchg
cmp
push
out
adc
pop
jl
sahf
adc
or
rclb
or
push
pushl
or
add
xor
push
into
lret
popa
dec
jno
pop
loope
repnz
ja
gs
cwtl
sbb
xor
cmp
popa
cwtl
inc
jp
add
or
rcll
popa
push
hlt
das
mov
loop
pop
iret
lret
and
rorb
and
push
cmp
add
adc
add
cmpsb
scas
cli
cmove
or
or
jbe
notb
pop
rorb
repnz
psrld
add
daa
push
add
or
push
jl
or
sbb
add
fldt
clc
fildl
lret
gs
or
or
cmp
loop
or
nop
pop
shrl
addb
jmp
add
or
and
pusha
stos
sub
or
aad
rclb
jle
into
xor
nop
aaa
inc
in
sarb
xor
or
sub
or
jmp
jecxz
jnp
into
sbb
mov
and
push
jae
push
mov
and
push
pushf
or
jle
jle
pop
shlb
or
enter
jnp
xor
adc
sub
pop
push
adc
xor
mov
fs
lret
mov
pop
jnp
jecxz
push
inc
lods
popa
add
sub
xor
adcb
push
movb
sub
lods
gs
or
adc
sbb
out
mov
adc
cmp
outsl
add
ss
and
shrb
mov
jo
popa
pop
xchg
mov
pusha
aaa
mov
add
pop
adc
push
dec
enter
lret
dec
sbb
cwtl
add
sub
cwtl
stos
pushl
dec
fmuls
out
aad
aas
inc
scas
push
add
push
sub
mov
add
xchg
cmc
push
mov
adc
mov
or
sbb
jg
jne
leave
fnsave
enter
or
nop
mov
pop
sbb
cwtl
xorl
push
pusha
push
data16
lret
or
dec
adc
lret
or
or
and
movsb
sub
cmp
xor
mov
test
fistps
add
jecxz
ljmp
and
push
sbb
push
mov
out
add
jle
rcrb
mov
and
add
pop
xchg
notb
mov
sbb
shrb
in
popa
or
das
xor
pusha
mov
adc
add
xchg
data16
push
jb
nop
push
push
sbb
jbe
testb
iret
addb
xor
ds
add
push
ss
adc
dec
ror
mov
add
sbb
push
data16
add
mov
lods
stos
add
daa
jle
xchg
enter
cmp
mov
mov
dec
and
lret
push
stos
or
test
push
insl
aam
test
adc
push
xor
jl
lods
add
pop
cmp
ror
pop
or
jle
call
aam
sbb
outsb
stos
xor
adc
popl
loope
out
shrb
or
push
cmp
cmp
mov
jecxz
add
push
cmpsb
push
pop
push
mov
cmp
rolb
stos
clc
adc
and
and
jmp
push
stos
jne
fistps
cli
push
jle
jbe
stos
lcall
aas
push
pop
scas
add
xor
add
jl
and
dec
push
xor
andb
inc
in
sbb
dec
mov
aad
sub
xor
mov
outsb
and
test
cmp
jl
adc
mov
rorb
sbb
sub
or
and
test
lfs
mov
in
bound
push
stos
jbe
jo
mov
test
sbb
adc
adc
pusha
add
sbb
jno
cmc
mov
gs
or
clc
sbb
or
mov
or
cs
outsb
xor
loopne
movsl
pop
lock
sbb
leave
bound
sub
xor
test
adc
push
adcb
sbb
jl
sbb
loope
rcrb
xchg
jmp
mov
cmp
push
aam
pop
or
or
jge
int3
pop
subl
addr16
mov
lods
or
out
sbb
fisubs
sub
xor
lods
fs
push
adcb
fisubrl
dec
int
inc
das
neg
add
test
loopne
in
and
fistpl
test
insb
mov
sub
and
pop
inc
data16
add
bound
cvttps2pi
jge
add
add
add
mov
or
push
push
and
mov
fcmovnbe
jle
push
adc
add
imul
lea
pop
jp
jb
add
sub
ficoms
test
jl
orb
xlat
sub
dec
cwtl
pop
dec
sbb
stos
clc
pop
push
rcr
fmuls
lcall
pop
cs
jmp
pop
adc
movsl
add
mov
daa
mov
push
and
or
push
or
enter
mov
pop
cld
je
pop
sub
rclb
jbe
out
lea
jb
adc
add
xor
push
add
or
jo
fsubs
cli
pop
jb
adc
mov
stos
mov
into
sbb
mov
repz
dec
add
ja
and
and
loopne
mov
orb
negb
add
xor
loop
mov
test
ret
adc
pushf
add
inc
orb
imul
fcmovb
rolb
mov
fcom
jecxz
mulb
cs
das
jp
push
ss
xor
enter
js
xor
sbb
pop
mov
add
in
aam
push
pop
xor
sar
sub
outsb
repnz
fs
add
rolb
sub
movsb
mov
push
rclb
or
mov
mov
ja
xlat
clc
orb
int3
xor
out
add
movsb
test
sbb
cld
dec
mov
mov
and
into
mov
and
push
test
pop
inc
or
push
pop
cld
es
popa
loopne
nop
and
mov
xor
push
inc
mov
mov
mov
sub
pusha
xor
cld
add
mov
lea
nop
popa
ja
sbb
movsl
and
test
stos
pop
sub
push
sbb
mov
scas
add
inc
mov
inc
adc
insb
inc
outsb
inc
popf
xor
or
mov
mov
pop
xchg
sub
daa
aam
xor
and
ffreep
xor
sub
popa
mov
adc
adc
push
or
fwait
sbb
fs
ret
test
in
fisttpl
sbb
and
in
jo
pop
adc
ss
shrb
cmp
mov
or
mov
sbb
filds
adc
cmp
enter
push
sub
mov
cs
rcr
mov
in
and
das
push
gs
jg
sbb
pop
pop
adc
push
or
add
push
xor
xor
jg
adc
pop
es
adc
pop
inc
or
and
inc
xchg
add
or
cld
incl
mov
nop
lods
arpl
test
inc
mov
adc
enter
mov
shrb
sub
xor
mov
cmp
sub
sub
sbb
in
xchg
add
mov
test
add
or
incl
fistl
pushf
add
or
loope
sbb
add
or
push
movsb
insl
xor
or
addb
stos
inc
repnz
ja
mov
shrl
mov
loope
and
sub
sub
push
lea
push
and
outsb
dec
outsb
add
sbb
icebp
pop
cld
cmp
xor
xchg
mov
and
and
enter
sbb
pop
adc
data16
sub
add
mov
lahf
add
aad
test
xchg
ret
test
and
add
add
mov
add
sbb
or
stos
cltd
push
and
rcrb
jo
push
pop
lods
fisttps
adc
adc
cmp
add
jbe
fnstenv
cs
dec
add
je
sub
loopne
sbb
adc
push
rolb
call
dec
clc
aaa
dec
adc
test
xor
pusha
outsl
testb
mov
mov
cmp
push
enter
push
fwait
data16
xor
enter
lock
inc
cmp
clc
outsl
add
in
pushl
mov
mov
arpl
push
movsl
mov
pop
aaa
cmp
or
jge
lret
add
inc
insb
lcall
mov
adc
sub
test
dec
push
sbb
inc
push
or
subb
sbb
inc
cmp
test
mov
or
adc
mov
jecxz
shlb
adc
push
mov
jbe
clc
jg
ds
adc
movsl
add
enter
and
in
pushl
movsb
add
and
add
mov
jle
adcl
mov
push
xchg
rcrb
inc
inc
jne
mov
add
dec
jbe
inc
fistpll
or
data16
pusha
cwtl
sbb
dec
push
loopne
add
add
add
xchg
repz
xchg
adc
sbb
lret
add
hlt
mov
data16
push
repz
mov
xor
clc
es
inc
sub
inc
push
pop
aam
data16
add
stos
or
mov
push
jle
mov
test
loopne
cmpsl
in
mov
ljmp
dec
fidivl
loope
mov
aaa
leave
mov
or
fldt
das
add
mov
adc
pop
stos
add
add
pop
shlb
pop
mov
and
xor
dec
pop
test
es
lret
dec
jp
sub
loope
xor
ss
fld
pop
pop
repnz
fmulp
outsl
lret
mov
pusha
sub
mov
push
add
lret
sub
push
cmp
adc
cmp
js
and
mov
add
pusha
js
jo
sub
setbe
xlat
lock
xor
mov
aam
lods
add
and
add
cmp
and
in
push
inc
fidivrs
mov
mov
pop
in
xor
add
insl
sbb
dec
add
and
xor
test
inc
loopne
add
xor
cmpl
insl
ficomps
add
rcrl
cwtl
sub
sub
sub
xchg
add
scas
shrb
jb
xor
and
or
add
add
repz
movups
hlt
dec
xor
pushf
clc
lea
adc
cmp
mov
idiv
pop
add
nop
mov
mov
outsb
jo
lds
test
rolb
push
push
or
nop
outsb
xor
adc
push
adc
add
inc
sbb
outsl
clc
cmpb
add
mov
mov
enter
call
aam
outsb
xchg
cli
adc
fwait
dec
pop
cmp
xor
mov
sub
push
or
mov
imul
add
sub
cmp
ret
mov
ret
in
jb
cmp
mov
mov
fmulp
bound
add
pop
xor
rclb
mov
les
test
jecxz
xor
xchg
jo
dec
aam
les
or
bound
jo
lock
or
or
test
dec
sbb
or
add
xchg
mov
or
push
insl
dec
int3
jns
fsubrs
sbb
jp
or
and
mov
js
movsl
sub
sub
jno
sub
add
or
xchg
out
xchg
mov
sbb
daa
or
addl
and
icebp
push
decl
inc
dec
xchg
push
push
or
adc
sbb
inc
pop
clc
stos
sub
add
enter
or
cld
sub
je
or
or
imul
or
add
or
ds
fcomip
push
mov
sahf
leave
icebp
pop
push
sub
push
push
pop
xor
jmp
jo
push
xor
sub
call
push
je
adc
clc
sbb
push
nop
or
dec
pop
dec
inc
add
shll
mov
test
fsubl
loope
leave
jb
inc
jo
mov
nop
or
ja
adc
xor
fsubl
cmpsb
add
xchg
xchg
add
ja
das
or
out
das
les
pushl
dec
call
loope
adc
nop
incl
push
push
push
xor
xchg
daa
inc
roll
jmp
push
cmp
add
jmp
rcr
push
inc
and
lcall
je
fs
sub
ds
mov
xor
movsb
int
add
lock
mov
lods
push
push
push
and
fcmovu
cli
or
test
sbb
jbe
pusha
add
sbb
sbb
sbb
test
leave
add
add
es
cmp
dec
xchg
jns
mov
mov
xor
pop
jae
jp
add
leave
push
shr
sub
mov
jb
loope
dec
mov
cmp
enter
mov
dec
push
or
xor
and
inc
mov
adc
or
jo
mov
decb
adc
cmc
test
push
out
add
push
sbb
add
sbbl
xchg
mov
or
pop
lock
sub
sbbb
mov
inc
push
cmpsb
dec
push
std
pusha
andl
xchg
bound
test
xor
or
mov
imulb
aaa
inc
sbbb
inc
mov
push
lock
sbb
xchg
add
adc
sbb
push
and
push
pop
inc
sub
dec
in
popa
gs
notb
dec
sub
push
mov
inc
sbbl
incl
sbb
xor
addb
leave
push
push
mov
jl
jo
shlb
clc
lcall
aam
sbb
add
scas
movsb
fcmovu
dec
mov
bt
mov
scas
inc
jle
pop
not
add
mov
sti
enter
mov
add
dec
cmpsb
add
push
and
adc
adc
scas
inc
jg
and
lock
push
mov
dec
dec
jecxz
or
push
rorl
movsb
add
sub
pop
pusha
das
mov
fistl
shlb
push
and
mov
sub
push
insl
ja
inc
add
add
inc
cmp
and
or
out
add
mov
enter
jp
fwait
xor
jo
fists
adc
decb
xchg
pop
pop
xor
mov
inc
gs
test
loopne
aas
fsubs
inc
popa
icebp
pop
fldl
rcl
andl
cltd
add
lock
adc
push
xor
and
ss
jg
adc
cmp
cmp
sbb
aam
inc
mov
adc
push
inc
or
in
fnstenv
ret
push
scas
add
shlb
xor
jg
in
jo
adc
cmp
mov
mov
les
daa
push
sarb
mov
fistpl
add
cmpsb
mov
mov
shll
rclb
jno
add
outsl
loopne
push
add
jp
and
sbb
xlat
decl
mov
xchg
push
adc
mov
and
ret
lock
out
pop
mov
adc
sbb
sbb
sbb
fdivs
lcall
loopne
fmul
and
icebp
and
je
fmull
lret
and
sti
or
pop
mov
dec
addb
add
insl
loopne
push
dec
fdiv
aam
cmpsl
jno
fsubr
or
decl
fstpl
add
add
insb
push
insb
mov
sub
push
add
mov
stos
and
or
add
ss
push
pushf
stos
mov
imul
xchg
xorb
xchg
adc
test
ret
or
or
ficompl
push
mov
das
or
push
sbb
cs
and
call
aaa
nop
xor
cmpsb
insl
pushf
or
pop
cmp
enter
cmpsb
and
and
jo
add
scas
mov
cltd
inc
mov
das
and
dec
xor
pusha
xchg
sbb
clc
cmp
movd
data16
add
sbb
push
test
and
insb
pusha
dec
jg
push
cmpb
fmull
and
enter
and
sbbl
cmp
int
arpl
pusha
inc
add
call
push
gs
pop
cwtl
push
loope
imul
push
xor
dec
aam
add
das
xlat
fbld
or
mov
bound
int3
sbb
hlt
jbe
sbb
test
mov
jmp
fcmove
inc
aaa
inc
sbb
or
sub
add
pop
shll
add
cmp
les
pusha
jnp
dec
and
jno
sbbb
dec
adc
sub
mov
adc
adc
push
adc
ds
dec
and
cmp
rcrb
cs
jmp
sbb
sbb
stos
and
jecxz
js
or
inc
mov
add
xor
add
push
inc
jae
stos
sbb
inc
add
mov
push
xchg
popa
adc
add
loopne
iret
inc
add
xor
cmpl
rclb
ja
dec
dec
sub
les
push
or
rclb
js
cmp
sbb
or
std
jg
stos
or
sbb
inc
or
jge
xor
add
mov
call
sbbl
popa
cwtl
inc
add
mov
loope
add
rorb
inc
test
outsb
or
shl
sarb
aam
push
adc
fisttps
roll
sub
adc
add
cmc
sarb
repnz
orb
inc
mov
ljmp
sbb
or
and
jl
add
fldt
push
and
popf
adc
call
dec
xor
bound
ret
out
jnp
lock
and
dec
inc
or
lcall
add
je
and
or
or
pop
cltd
push
mov
pop
and
sbb
mov
adc
pop
hlt
stos
jo
roll
adc
pusha
push
loope
and
roll
dec
adc
aaa
enter
andl
and
sub
sti
and
call
and
mov
daa
bound
lods
decl
fbld
das
popa
add
xor
test
mov
loop
loopne
push
push
addb
cwtl
dec
cs
popa
js
sub
ror
mov
sahf
ss
dec
mov
push
push
add
pop
or
loopne
fisubl
xor
popf
cmpb
mov
push
inc
sahf
adc
sahf
in
sbb
pop
xor
cmp
mov
sub
dec
in
add
add
mov
and
sahf
rorl
add
or
mov
sbb
popa
dec
jnp
pop
add
pop
sub
repnz
push
pop
scas
mov
stos
push
add
test
xchg
and
pusha
xor
rorb
sub
cmp
dec
push
add
addl
add
or
jle
pop
push
push
lds
dec
enter
add
mov
bound
xor
mov
mov
add
add
push
push
imul
add
das
xor
add
das
cmpsb
cmp
push
inc
outsb
xor
mov
jg
xor
mov
add
inc
or
dec
mov
sbb
bound
adc
add
and
mov
push
add
dec
mov
xor
mov
and
sti
inc
push
xchg
hlt
push
dec
je
push
or
or
and
cmpb
mov
mov
cmp
outsb
dec
and
adc
adc
clc
mov
roll
inc
mov
int3
mov
test
loop
fiadds
sbb
test
ret
loopne
scas
mov
enter
sbb
inc
das
add
addb
add
in
inc
push
das
lock
test
jp
rolb
call
adc
pushf
and
mov
xchg
pop
push
fs
push
sub
push
lods
mov
push
das
mov
push
push
jg
scas
sub
cmp
mov
sar
inc
loopne
and
mov
push
aam
ret
movsb
adc
xchg
xchg
push
sbb
sbb
push
aam
push
push
fimull
pop
push
cmpsb
add
fadd
out
lcall
movsb
dec
inc
ss
add
data16
pop
in
adc
mov
or
mov
stos
testl
pusha
pop
ss
sahf
add
inc
dec
ret
sbb
push
leave
adc
pusha
inc
cmp
popa
stos
cmp
inc
xchg
or
enter
push
sbb
pop
or
push
orb
push
rorb
nop
loope
adc
jo
dec
cmp
adc
test
clc
add
jo
and
jae
sbb
loopne
ret
lods
mov
jae
xor
shrb
lods
decl
and
nop
or
mov
loopne
and
nop
add
sbb
jmp
lock
jbe
arpl
pop
shll
jbe
cli
sti
fdivrs
popl
ret
dec
orb
sub
push
aam
xchg
push
aam
push
int
int3
aam
sub
lods
addr16
sub
cld
mov
shlb
sti
fwait
sahf
test
xlat
mov
push
fisttpl
sub
lret
and
mov
or
xor
xchg
mov
loope
sub
and
aaa
push
stos
push
or
add
xor
test
daa
push
push
inc
or
mov
xor
mov
shlb
call
cs
pop
push
inc
scas
test
mov
dec
cld
mov
ret
enter
test
stos
out
pop
add
add
aad
jecxz
flds
aam
push
or
or
adc
jg
mov
jo
rcrl
bnd
cli
add
or
rolb
insb
push
nop
pop
push
rorb
jmp
sahf
add
cmc
ret
add
cmp
or
mov
movsl
jb
sub
jo
jmp
add
js
rclb
or
jmp
push
mov
aas
stos
and
rclb
inc
xor
dec
sub
push
sub
push
adc
fisubrs
test
sbb
cmp
push
stos
adc
pop
lret
push
or
add
push
lods
mov
push
and
sbb
mov
mov
rol
leave
sub
add
sbb
and
pop
add
add
add
movsb
sbb
bound
and
pusha
fisubs
xchg
cli
push
stos
dec
std
adc
and
icebp
adcb
dec
es
push
push
enter
lcall
out
pusha
add
jg
xlat
push
aaa
push
push
add
test
shrb
push
xorb
popf
das
sbb
xchg
sbb
movsl
push
je
push
inc
loop
test
repnz
movsb
shll
mov
jg
add
cs
decl
mov
push
add
or
mov
add
mov
sbb
dec
or
incl
push
add
dec
shlb
adc
sub
je
shlb
or
push
adc
test
cmp
cwtl
ss
inc
cmp
dec
cmc
push
stos
out
rolb
jle
cli
test
inc
add
mov
jg
mov
sbb
inc
pushf
inc
cwtl
cmpsl
adc
cld
xor
out
add
loopne,pn
loopne
lret
inc
xchg
adc
sub
sbb
and
adc
xor
mulb
push
and
lods
inc
jno
add
lea
icebp
add
push
dec
pop
push
sbb
and
sub
cli
mov
jae
andb
int3
add
fsubrp
mov
add
out
clc
or
icebp
test
jb
test
cmp
inc
loopne
and
push
clc
prefetch
or
adc
cli
pop
std
divb
stos
pusha
scas
dec
loopne
pusha
jbe
cmp
or
push
add
xor
mov
les
shlb
mov
sub
mov
sahf
gs
lret
inc
clc
xchg
pusha
adc
adc
inc
imul
sbb
push
ja
inc
or
adc
lock
add
shlw
fldl2e
test
fimull
push
xor
mov
adc
push
insl
rolb
shlb
std
sbb
push
inc
cmp
jo
pop
inc
jecxz
adc
pop
sub
lock
sbb
or
orl
xchg
icebp
fcomip
test
add
push
shrl
loopne
adc
inc
adc
push
stos
adc
mov
cmp
ret
inc
loope
adc
sub
sub
push
and
push
mov
aam
outsl
test
bound
sarb
xchg
lock
sub
inc
or
arpl
fcmovnbe
scas
push
sub
inc
add
xlat
fistps
cld
jecxz
hlt
aas
lods
sub
push
jl
and
mov
ss
sbb
daa
sbb
and
pop
cmp
jg
loop
xor
inc
mov
xor
popf
mov
nop
adc
jl
mov
pushl
jl
sbb
rcll
shll
mov
ja
cvttps2pi
jo
or
add
or
test
push
sub
jno
enter
inc
xor
mov
xorl
lods
jmp
movsb
pop
xor
jae
jg
stos
adc
xchg
inc
sbb
or
aam
mov
bound
sub
dec
shlb
rolb
loopne
ja
sbb
mov
inc
mov
mov
add
sub
or
dec
and
add
push
cmc
sub
mov
sub
out
push
cmp
notb
fcoms
jno
rcl
xchg
xchg
shrb
jno
and
rorb
xchg
add
sbbb
aas
mov
mov
pop
nop
add
and
or
and
add
or
and
test
push
and
and
sbb
jne
std
adc
fdivs
or
loope
sub
imulb
and
pop
and
jp
add
xor
clc
mov
and
cld
adcb
cltd
inc
stos
mov
fs
mov
aaa
cwtl
clc
pop
sbb
mov
sub
orb
add
xchg
mov
aad
mov
sbb
ret
pop
clc
inc
xchg
call
loop
es
enterw
mov
jb
dec
sbb
sbb
cmc
loop
jmp
add
scas
pop
pusha
mov
xchg
push
fisttpl
push
cmpsb
jg
push
inc
mov
rcrb
lods
outsb
es
and
cld
mov
add
mov
or
loope
inc
push
mov
movsl
or
add
pusha
fsts
movsl
push
mov
and
lds
bound
repnz
or
sbb
aam
jbe
arpl
orb
push
add
and
imul
sub
adc
inc
pop
fs
mov
inc
lret
push
jo
xor
rdmsr
aad
inc
nop
add
add
mov
pop
ja
pop
fdivl
lods
in
fbld
je
arpl
add
adc
and
add
sub
movsl
sti
stos
call
xor
call
sbb
adc
mov
test
int3
xchg
hlt
or
mov
xor
adc
mov
add
xchg
pop
or
adc
mov
add
or
repnz
divl
cs
cmp
sub
lahf
add
and
sbb
mov
mov
xor
xchg
xor
add
movsb
adcl
pop
fsubrl
add
loope
in
add
or
testb
jbe
xor
sub
xor
testb
mov
pop
or
inc
enter
add
xor
and
pop
aaa
fs
cwtl
jb
or
inc
cmp
and
imul
sub
add
sbb
fcomps
test
iret
and
pop
mov
aad
int
cmp
xchg
add
push
sbb
cmpsl
hlt
into
cmc
inc
popf
and
loopne
movsb
xchg
pop
xlat
loope
or
xchg
cmpsb
adc
push
add
lods
outsl
stc
push
sub
or
mov
fistl
pop
imul
add
push
push
add
and
adc
imul
insb
pusha
sbb
fcomp
fcmovne
adc
arpl
imul
or
cmp
stos
adc
add
inc
mov
jmp
and
xchg
push
pop
push
bound
or
fsubrs
imul
push
or
out
sbb
fmuls
out
xorb
jmp
pusha
pop
sub
xchg
shll
sub
and
dec
add
inc
into
mov
sbb
pop
push
mov
stos
shlb
shlb
stos
and
adc
sti
dec
and
push
pop
call
addl
xor
nop
cmpb
adcb
adc
fdivrs
enter
add
push
cmp
add
cmp
aaa
nop
and
mov
mov
mov
in
pushf
daa
in
inc
cmpsb
xor
inc
shll
call
push
in
and
adcb
inc
dec
or
inc
mov
inc
xor
inc
pop
inc
add
stos
dec
inc
add
js
andb
mov
xor
push
mov
in
jg
lcall
add
add
fiadds
test
inc
pusha
push
sbb
addb
add
fmuls
ss
mov
xor
push
orb
rol
cmpsb
cmp
clc
lods
sbb
push
add
addr16
arpl
sub
das
push
fld
inc
inc
fs
sub
adc
cmpsb
das
adc
das
aam
sbb
popf
pop
movsb
adc
jl
inc
pusha
cmpb
or
out
cwtl
dec
xchg
testb
shlb
pop
out
and
sub
mov
cmp
ss
fs
push
pop
fwait
out
add
subl
push
into
fcoms
inc
push
fistps
sbb
jg
mov
pop
add
add
sbb
addr16
push
les
in
pop
add
mov
hlt
enter
nop
incb
inc
or
and
xor
add
cwtl
adcl
xchg
bound
mov
fiadds
notb
or
insl
lock
mov
test
pop
xor
scas
and
add
and
add
inc
pusha
jo
sarb
mov
rcrb
inc
and
mov
xchg
sbbl
ds
rclb
cltd
add
popa
and
sub
cli
and
mov
mov
sbbb
adc
jo
add
sbb
xor
sub
pop
inc
mov
cwtl
enter
inc
xor
aam
in
sti
adc
push
mov
lea
adc
or
dec
sub
cmp
dec
sub
add
imul
push
sbb
xor
inc
lcall
out
es
test
and
dec
sub
or
xchg
mov
mov
pop
sub
add
or
cmp
inc
mov
lret
cmp
jp
enter
sti
loopne
cmpb
jo
test
push
mov
test
mov
cmp
incl
lret
cmp
add
mov
call
ss
fimull
jb
in
test
xchg
sbb
aas
or
cmpsb
push
jl
scas
js
outsl
in
idivb
pop
mov
pop
or
outsl
adc
sbb
sbb
clc
or
cld
add
loope
adc
aam
and
push
fldl
push
mov
out
sbb
popa
mov
mov
sar
roll
lahf
arpl
aas
inc
jmp
stc
mov
movsl
adcb
enter
dec
adc
add
push
add
pop
adc
hlt
push
adc
fcomip
jo
nop
jmp
fiaddl
sbb
clc
popa
or
xor
mov
inc
xchg
notb
lcall
dec
push
les
push
ret
or
adc
xchg
jno
cmp
mov
inc
xor
jle
push
add
bound
mulb
les
mov
add
pop
cmp
imul
adc
aam
dec
jge
rclb
and
xchg
jle
push
rorb
add
dec
enter
mov
into
and
nop
stos
sub
enter
sub
push
sub
sub
mov
roll
add
jae
dec
les
mov
or
adc
and
push
cmp
jo
int3
inc
mov
or
fcmovnu
pop
rcrl
stos
adcl
dec
dec
or
lods
push
mov
adc
or
daa
shl
cld
pop
cld
sbb
sub
loop
out
and
push
arpl
xchg
movsb
lea
pop
fistps
adc
jmp
cld
and
and
jg
sbb
mov
sbb
mov
jg
incb
pusha
enter
test
cmp
sub
mov
adc
add
add
or
test
subb
int3
stos
pop
mov
inc
mov
rorb
ret
sub
and
jno
and
fisttpl
outsl
adc
xchg
les
add
call
dec
xor
insb
xlat
sub
cmc
jg
pushf
adcl
fsubrs
or
jmp
js
lock
push
pop
sbb
lods
pop
rorb
cmp
roll
xchg
cwtl
add
shlb
loop
addr16
inc
icebp
data16
shrb
int3
push
loop
add
popa
cmpsb
sub
arpl
rclb
mov
and
xor
sub
cmpsl
adcl
mov
idiv
add
cld
pushl
sahf
jne
andb
add
sub
rclb
repnz
mov
icebp
push
les
repz
and
push
int3
xor
inc
adc
push
loopne
call
jno
enter
ret
sub
and
insb
jno
cmp
jae
lcall
add
data16
jo
add
clc
add
rcr
es
call
clc
mov
jle
hlt
scas
push
mov
cmp
mov
or
add
jmp
xchg
mov
push
xor
pusha
mov
xor
sbb
push
push
les
xchg
sbb
xchg
es
and
and
xor
mov
inc
ja
xchg
fdivl
out
enter
inc
xor
test
push
mov
push
jp
das
mov
add
push
pop
insl
fsubs
jo
and
xchg
icebp
and
add
ds
daa
pop
loope
xchg
cmpsb
inc
outsb
push
push
ror
sbbb
push
gs
add
push
divb
arpl
loopne
jb
cmp
inc
adc
inc
add
pop
cwtl
fwait
sub
push
or
cmp
dec
fiaddl
dec
in
cmovnp
mov
jbe
push
das
stos
add
or
rolb
add
out
add
xchg
fsts
push
mov
lcall
adc
add
push
stos
gs
insb
cmp
mov
hlt
mov
xchg
orb
test
scas
or
push
daa
add
into
jb
adc
add
pusha
jle
mov
adc
mov
mov
sbb
test
xor
or
mov
adc
stos
mov
stos
loop
ds
xor
pop
or
sbb
mov
int
cmpb
rclb
js
sub
outsb
inc
xor
leave
repz
xor
pusha
mov
push
ja
mov
inc
das
push
jb
sub
adc
or
inc
or
lods
add
and
sbb
push
mov
xchg
test
add
scas
adc
addr16
dec
dec
sub
dec
clc
adcb
stos
je
xchg
mov
add
sub
push
subb
pop
inc
mov
mov
es
adc
adc
adc
movsl
inc
cmp
jno
xor
orb
pop
xchg
sbb
xchg
les
adc
lret
jl
inc
xchg
movsl
call
add
pop
jg
push
add
cltd
arpl
dec
gs
inc
push
stos
enter
sub
push
push
and
jbe
icebp
add
pusha
sbb
push
rolb
and
inc
mov
cmc
outsl
fbstp
or
xor
sbb
mov
cmp
push
add
jle
mov
sbbl
popa
stos
sub
or
ss
and
cmp
or
xor
cwtl
adc
and
daa
dec
and
jp
push
fadds
and
or
ja
out
jo
stos
mov
mov
std
out
xchg
je
xor
pop
adc
loope
pop
jb
xchg
mov
jmp
ss
adc
dec
xor
ret
xchg
ficompl
enter
push
pushaw
mov
inc
adc
push
leave
das
imul
call
cltd
xor
stos
add
xor
adc
bound
and
aam
mov
adc
mov
sbb
shrb
push
loopne
dec
test
jno
jl
inc
loopne
ljmp
mov
and
insb
dec
xchg
and
int3
enter
xor
mov
pop
rclb
fdivs
pusha
pop
enter
ljmp
push
adc
movsb
ss
add
push
push
pusha
xchg
pop
mov
rcrb
mov
sbb
mov
add
cmpsb
ja
call
cmpsb
sub
pop
push
cwtl
sub
pop
fs
in
or
pop
es
test
ret
cmp
pop
mov
ficoml
das
mov
das
cmpsl
mov
push
lods
divb
stos
insl
cmp
data16
pushl
clc
arpl
mov
jecxz
xor
and
and
mov
imul
fdivl
sub
cli
enter
push
adc
add
sahf
jbe
mov
test
and
in
aad
mov
js
or
and
jae
jmp
fwait
scas
ss
add
sarl
fs
or
add
push
repnz
movsl
and
or
add
ficoms
movsb
and
das
ss
stos
mov
dec
das
xor
pop
push
adc
push
inc
rclb
aaa
mov
inc
mov
adc
scas
cli
push
lret
xor
dec
xor
push
xor
enter
rclb
jbe
xor
out
pop
fwait
ljmp
sbb
insb
pop
sbb
cmc
aaa
adc
xlat
add
notb
sbb
mov
dec
aad
add
mov
add
shl
jp
xor
lock
stos
add
cmp
push
aam
xor
fsubs
movsl
rdtsc
or
fcomps
push
jne
push
roll
dec
mov
sbbl
and
mov
push
das
and
scas
and
nop
fmul
and
in
sub
subb
pop
fsubs
ss
pop
icebp
mov
aam
inc
jb
loope
shrb
push
xor
movsb
rclb
cmpsb
push
push
xor
push
mov
je
add
sbb
cmpsb
mov
xchg
xor
test
sahf
addb
shrb
mov
push
and
pop
dec
aam
fwait
adc
fldl
test
movsl
test
in
cwtl
fistpll
push
mov
sti
push
add
push
das
add
mov
push
push
adc
or
jae
or
cmp
and
cmp
inc
adc
aam
mov
add
roll
test
inc
inc
jnp
mov
pop
stos
cli
pop
js
imul
fdivs
xchg
xchg
movsb
sbb
adc
dec
shr
push
leave
in
push
adcb
leave
shlb
push
aaa
mov
nop
xchg
mov
pop
daa
mov
cmp
lods
adc
sub
sbb
inc
and
sub
lret
mov
test
fstps
add
call
add
pop
sbb
inc
add
das
cmpsb
aam
xor
popa
cmpsb
dec
sbb
ljmp
cmp
push
push
das
and
enter
adc
xor
mov
lret
or
xchg
xor
in
loopne
pusha
xchg
lock
and
mov
and
add
ljmp
push
imul
and
xor
add
xor
xlat
mov
push
jo
cld
enter
cmp
call
inc
cld
clc
jp
push
add
loopne
sbb
push
add
test
dec
push
pop
cld
fiaddl
jno
add
push
xor
dec
sub
add
enter
inc
mov
cmp
cwtl
dec
sbb
arpl
aam
jo
xor
mov
jle
subl
fdivs
push
test
ror
push
sub
movsb
sahf
pop
cltd
pushf
and
lret
or
fidivl
or
fcompl
lods
cmpsb
in
add
push
push
or
inc
mov
jo
in
enter
jo
adcb
inc
enter
sub
inc
cmp
jmp
and
sbb
scas
cmpsb
ret
pop
shl
dec
fs
test
mov
push
incl
sbb
rorb
jg
sti
pop
sbbl
sub
jp
jecxz
push
mov
jecxz
jo
xlat
loope
and
rolb
int3
ss
mov
out
sub
and
call
cmpb
pop
sub
add
inc
xor
in
ja
test
outsb
rcrb
lret
or
xchg
daa
lock
mov
shrb
add
cltd
adc
ret
fisubrl
add
std
cmovl
cmp
sarb
inc
scas
pop
inc
cld
adc
loopne
xlat
add
ds
or
jp
orb
add
sbb
mov
enter
pusha
sbbl
enter
mov
test
push
pusha
mov
add
rorb
test
jecxz
pop
mov
lods
enter
adc
fimull
add
add
push
mov
mov
dec
test
sub
into
cmp
aas
les
outsl
push
aad
jg
imul
fdivs
test
testb
pop
call
pop
pop
clc
mov
stos
shlb
mov
loop
loopne
fidivrs
shrb
adc
clc
add
mov
mov
mov
push
popa
mov
add
jmp
pop
cmp
flds
xchg
and
jl
inc
mov
mov
popa
push
adc
or
leave
les
scas
mov
dec
cld
sbb
sahf
cmp
mov
dec
push
add
and
inc
mov
imul
add
mov
xchg
adcb
shlb
or
subb
xor
add
decl
push
adcb
dec
loopne
jecxz
loope
orb
loope
testb
stos
xchg
cmpb
mov
stos
adc
push
mov
sub
scas
or
call
insl
decl
mov
popf
mov
pop
repnz
add
lret
xor
push
es
fs
rorb
add
and
je
adc
ljmp
or
and
cmp
push
jbe
adc
mov
mov
int
lret
outsb
pop
xchg
fdivr
pop
pop
lea
ret
sub
pop
loopne
sbb
jae
or
or
xor
in
scas
push
fwait
add
cmc
and
mov
add
add
mov
xor
addr16
adc
cmp
push
inc
mov
fisubs
xor
xchg
adc
or
jo
rolb
bound
or
inc
dec
sub
mov
xor
test
xor
sub
mov
test
pop
das
out
mov
mov
jle
or
adc
adc
orb
shll
ja
ja
cmp
insb
mov
shll
xchg
aaa
outsb
sbb
jecxz
cmp
mov
sbb
nop
mov
fbld
roll
adc
cwtl
enter
test
outsl
lock
fcoms
mov
bndstx
cs
mov
or
xor
add
mov
push
cmpsl
add
int
jbe
ja
mov
ret
fists
inc
enter
jno
je
data16
push
fsubrp
out
jbe,pt
inc
add
bound
adc
adc
cmc
pop
push
sub
shr
jg
bound
fdivl
jno
das
adc
enter
incl
movsl
jbe
push
addb
adc
sub
fwait
loope
add
movsb
and
xchg
sbb
adc
enter
pop
js
mov
js
test
mov
enter
mov
call
enter
add
dec
add
call
test
sbbb
lret
arpl
adc
cwtl
adcl
adc
jb
dec
mov
add
lea
or
xchg
jbe
add
or
adc
daa
rorl
pop
inc
jo
jb
inc
insl
pop
jl
jle
bound
inc
enter
ljmp
sbb
inc
add
add
call
push
or
dec
fwait
or
loopne
cwtl
jl
jg
add
call
stos
pusha
sub
addr16
es
enter
fwait
pop
push
dec
sbb
adc
push
push
lret
outsb
add
inc
add
dec
nop
mov
or
std
lods
add
rorb
cli
add
or
xor
lret
mov
lret
adc
or
nop
or
clc
orl
mov
add
movsl
in
and
xchg
lods
dec
rclb
dec
jp
mov
fwait
cli
es
add
aaa
rorl
jg
clc
mov
ret
and
add
imul
mov
cltd
lea
hlt
enter
or
ret
imul
cmp
push
insb
or
mov
das
push
push
cmp
lock
push
nop
add
in
mov
pusha
fsubrs
ret
push
shll
adc
mov
ja
in
test
and
test
inc
inc
ja
lods
push
fs
jo
or
cld
sub
daa
mov
push
push
inc
in
das
push
sbb
jmp
jno
sahf
mov
add
subl
xchg
xorl
insl
sub
test
adc
bound
sub
and
mov
jmp
xchg
pop
popf
aam
aaa
mov
push
xor
ret
dec
push
cli
inc
xor
cmpsl
inc
mov
add
enter
adc
push
mov
add
push
dec
cmp
adc
test
add
rolb
add
sbb
out
push
pop
scas
sbb
mov
popa
add
dec
pop
mov
aaa
incl
or
jb
add
clc
repnz
push
cmp
dec
test
cmc
dec
test
or
push
out
push
or
cmp
sbb
xlat
fnsave
js
sub
aaa
mov
stos
pop
cmpsb
xor
and
xchg
dec
add
pop
sub
and
push
adc
or
inc
or
cs
sbb
push
outsb
mov
inc
adc
lea
cld
sbb
cmp
inc
lret
push
push
add
push
inc
mov
pop
pop
lods
jmp
add
cmp
push
add
push
test
popf
add
nop
or
dec
je
xor
loopne
jecxz
push
out
rorb
rorb
mov
adc
mov
inc
incb
push
inc
and
or
push
out
xor
pop
mov
xor
leave
adc
push
fs
add
inc
mov
push
xor
and
shl
mov
push
push
add
pusha
addb
mov
sarb
jecxz
shl
sbb
in
mov
jo
dec
jo
loopne
shrl
adc
enter
lea
adc
jbe
and
int
aas
aam
dec
xor
adc
pop
nop
add
jg
subb
xor
and
nop
jl
push
jb
clc
adc
cli
dec
add
mov
inc
xor
mov
pop
jno
inc
ret
cld
sub
adc
lods
add
mov
pop
or
xchg
xchg
add
adc
adc
sahf
add
lods
jo
and
mov
clc
dec
sbb
enter
inc
xor
cmpsl
sub
pop
pusha
cld
jg
in
add
movsb
cmpsl
repnz
push
dec
xor
sub
xor
or
or
mov
std
shrb
mov
ljmp
push
ds
scas
add
mov
dec
fimull
adc
mov
xchg
pop
mov
push
shll
add
sbb
cmpsb
sub
dec
mov
aaa
sti
mov
cmc
and
into
mov
or
std
xor
add
pop
push
loope
subl
or
adc
sbb
xchg
addb
clc
mov
adc
loope
xorb
lds
add
sub
cmp
lcall
push
jge
jmp
inc
loopne
xor
test
pop
mov
stc
jbe
sbb
notb
call
inc
jbe
shlb
aaa
adc
and
push
mov
scas
inc
cld
xor
xor
andb
xor
mov
lods
push
hlt
mov
add
inc
mov
nop
mov
cmp
add
fcoml
adc
dec
loope,pt
adcb
jl
push
cwtl
inc
mov
mov
addb
fwait
cwtl
fbld
ret
movsl
outsl
adc
hlt
enter
sub
ss
movsb
fsubs
jmp
subb
mov
rorb
jg
adc
lock
push
sub
jg
inc
xor
jnp
pusha
xor
xorl
js
adc
das
push
fldt
and
cmp
sbb
jg
xor
arpl
cmp
test
cs
cs
addr16
push
sbb
sarb
dec
repnz
cwtl
orl
lock
or
sti
xchg
jp
adc
mov
mov
loope
lahf
mov
adc
rcrl
adc
dec
push
push
mov
sub
jns
test
mov
xchg
sbb
jbe
mov
xor
inc
inc
pop
addl
fs
sub
adc
and
aaa
xor
sbb
mov
loopne
mov
imul
lock
or
xchg
das
addr16
push
mov
push
outsl
adc
push
sbb
mov
adc
pop
movsb
test
sti
jae
pop
mov
mov
inc
pop
aam
mov
test
out
dec
in
mov
sbb
inc
rolb
mov
mov
mulb
aad
mov
mov
and
cld
notl
push
sub
movsb
sub
outsb
movsl
outsl
jmp
loop
inc
ja
nop
jae
sbb
jg
mov
push
sub
lock
mov
push
and
add
xor
clc
or
or
nop
outsl
dec
mov
test
cld
pushf
push
popf
lret
push
fs
leave
add
push
hlt
push
dec
push
js
push
out
dec
inc
cli
mov
in
add
inc
cmpl
stos
sarb
mov
shlb
sub
loopne
daa
pusha
scas
pop
adc
bound
add
push
mov
test
or
outsb
inc
lea
cmp
and
dec
jl
inc
pushf
rcrl
inc
xorl
adc
es
add
push
mov
stos
je
sub
je
sub
push
and
fldcw
fsubrl
inc
jo
cmp
inc
push
push
mov
or
push
sbb
xor
add
pusha
popa
add
jl
sub
daa
mov
cmp
clc
and
add
es
enter
jb
bound
cli
lret
push
nop
xor
pop
sbb
dec
adc
aam
loopne
sbb
xchg
lock
jp
pop
add
arpl
and
and
divb
test
movb
das
insb
or
xchg
sub
cmp
and
shlb
mov
outsl
outsb
out
rolb
test
or
or
push
cmp
sub
ret
movsb
or
faddl
mov
repnz
aam
shll
insb
inc
mov
dec
ffreep
nop
mov
pusha
inc
mov
adcb
movsb
jl
add
add
fidivrs
lret
fmuls
movsl
lods
jo
and
mov
sub
ljmp
jb
xor
cmp
ljmp
shrl
sbb
jle
les
sub
push
pop
mov
js
sbb
cmpsb
mov
dec
dec
or
or
inc
xchg
lret
adc
and
fidivrs
lock
inc
popf
push
mov
and
push
push
mov
push
xchg
push
push
cmp
adc
push
or
cli
aaa
addb
mov
pop
xor
test
or
sbb
add
inc
pushf
fiadds
sub
inc
fstp
or
or
dec
or
and
lock
adc
js
test
and
stos
sarb
test
or
enter
fadds
addb
das
cmp
and
sub
push
subb
xchg
sub
xchg
inc
sub
jae
and
dec
aad
lods
or
inc
inc
insb
xor
dec
enter
push
push
inc
cmp
push
mov
js
rcr
fsubs
jecxz
shrb
mov
dec
jmp
xchg
jbe
rorb
inc
jno
inc
sub
mov
test
fwait
inc
inc
stc
push
cli
push
and
add
inc
xchg
js
xor
lret
or
jo
sub
loopne
adc
xor
or
ret
adc
js
pop
push
cmpsl
hlt
mov
xchg
add
addb
bound
outsb
test
inc
mov
rcrb
test
push
add
push
inc
xor
scas
inc
stos
xor
in
lret
leave
faddp
xchg
mov
xchg
outsb
dec
mov
adc
mov
fisubs
cmp
test
or
mov
cld
sub
lcall
jno
outsl
push
pop
mov
out
es
dec
pop
inc
les
push
mov
arpl
add
stos
jb
jo
or
and
dec
add
xor
xchg
mov
out
sbb
inc
mov
ficomps
xorb
jmp
add
pop
mov
je
cmp
add
jb
sub
push
enter
loope
and
in
cmp
pusha
sbb
test
jnp
xor
enter
ret
mov
shrl
and
je
or
pusha
fdiv
inc
add
out
addl
mov
mov
mov
cld
sub
inc
and
add
mov
inc
lods
add
lock
mov
mov
sbb
xor
data16
xor
add
add
cmp
mov
sbb
ljmp
aaa
adc
pop
out
add
add
dec
mov
inc
xor
and
data16
in
mul
daa
pop
int3
push
fimull
data16
dec
mov
mov
push
push
scas
and
ret
dec
xorb
cltd
add
pop
push
fdiv
stos
pop
bound
addb
fs
sbb
inc
inc
push
pop
and
cs
xchg
push
lods
jl
add
ja
arpl
ja
fs
and
pusha
sti
pop
fstpt
xor
test
adc
sub
push
inc
cmp
adc
or
adc
xchg
mov
jno
repz
cmp
mov
mov
inc
mov
inc
mov
push
les
pop
adc
and
mov
scas
inc
add
loop
inc
mov
pop
decb
inc
jo
dec
or
adc
loop
inc
ljmp
jecxz
pop
call
roll
xor
push
and
jmp
mov
pop
stos
rolb
sahf
pusha
sub
jp
inc
clc
enter
push
or
clc
mov
orl
sub
loope
fbstp
jmp
shll
add
or
orb
sub
mov
outsl
or
stos
jle
add
mov
push
xor
cmp
and
cmpsb
out
jg
jnp
push
fwait
aam
jecxz
inc
ret
fwait
mov
adc
cwtl
add
push
sub
xchg
rorb
inc
xor
sbb
add
dec
sbb
loopne
shlb
addb
incl
shlb
adc
fcomps
mov
add
shrl
cmp
dec
test
sbb
adcb
lock
ret
lock
out
pop
sbbb
inc
pop
mov
fs
decl
jle
ret
pusha
cmp
or
sarl
daa
gs
xchg
pop
outsb
mov
inc
push
or
sub
mov
jle
sub
and
push
jb
jmp
push
jo
sub
push
jl
xor
sar
mov
sbb
add
pop
adc
push
or
add
mov
jl
pop
dec
test
movsb
js
fsubp
rolb
incl
movsb
sti
jnp
rolb
push
lock
jns
pusha
insl
xchg
adc
jmp
jne
adc
add
pop
stc
rcrb
stos
test
xchg
leave
mov
lods
push
in
mov
add
jge
mov
sbb
jne
jg
or
push
add
sbb
icebp
or
mov
pop
push
xor
cmp
xor
loopne
sbb
andb
int3
jbe
incb
add
xor
das
xchg
movsb
mov
cmpsb
movsl
stos
rolb
and
test
push
and
xorb
call
lcall
fstl
dec
sub
add
sbb
stos
or
push
sbb
fnstsw
push
test
add
push
jae
inc
dec
insl
inc
sbb
cli
mov
cmp
or
jle
xor
lret
add
or
or
jbe
je
cmc
lret
mov
les
jmp
adc
rorb
jns
dec
repnz
xor
je
pusha
popa
rorl
xchg
clc
jg
sbb
mov
es
jae
mulb
pusha
push
xor
cmc
ljmp
enter
sbb
mov
xor
fdivs
das
jp
js
pop
pushf
dec
dec
mov
and
outsl
sbb
jecxz
clc
cmpsb
inc
mov
ret
push
adc
pop
sbb
dec
inc
pop
mov
ficompl
sarl
sbb
incl
mov
add
inc
pop
xchg
mov
add
sbb
mov
inc
push
inc
imul
push
push
stos
lock
nop
sub
call
shlb
xor
cmp
dec
es
ss
push
inc
pop
cmp
pusha
adc
or
push
int3
je
outsb
dec
or
mov
or
or
and
sbb
aaa
lret
cli
stos
jae,pt
push
mov
push
add
jb
push
mov
out
shrb
and
adcb
out
pop
pop
adc
and
lahf
sbb
ljmp
cmpsl
int
imul
or
insb
adc
mov
pop
cli
adc
lock
pop
inc
pop
push
jne
push
jl
and
enter
sub
sbb
xor
inc
xor
adc
mov
adcb
sbb
imul
dec
fs
test
lock
adc
test
dec
imul
pop
data16
sbb
add
pop
insb
add
out
pusha
xor
sub
sub
insl
mov
loopne
enter
mov
xlat
adcb
pop
sbb
adc
aas
mov
das
mov
sarb
mov
cmp
add
add
adc
enter
add
push
pushf
outsb
push
jmp
push
push
add
sbb
mov
adc
fs
nop
arpl
les
aam
scas
and
cld
call
movsb
and
add
add
out
aam
daa
add
xorb
add
push
or
or
mov
fwait
ljmp
mov
mov
movsl
loopne
sbb
dec
addr16
sub
mov
sbb
adc
pusha
and
pusha
mov
out
loop
and
inc
xchg
clc
cmpsl
lcallw
xor
inc
add
pop
repnz
add
and
push
mov
stos
nop
addb
aaa
inc
clc
pop
mov
dec
jl
inc
mov
ds
add
pusha
push
mov
es
jb
sub
mov
lahf
sbb
xlat
fbstp
pop
and
dec
clc
scas
add
and
out
push
add
jg
mov
ljmp
adc
sarb
or
rolb
gs
sub
stos
repz
push
and
lret
mov
inc
jbe
cmpsl
int3
mov
mov
xchg
adc
stos
push
dec
jg
mov
adc
sub
nop
sub
inc
cld
imul
mov
andl
mov
daa
and
and
push
pusha
jle
cmp
xchg
sub
or
jbe
and
mov
xchg
in
push
test
cmpsb
cltd
clc
in
jmp
xor
popf
addr16
sub
sbb
loopne
and
add
mov
mov
adc
inc
sbb
daa
or
pusha
cmpsb
or
adc
stos
or
lods
mov
mov
shlb
xor
in
push
or
sbb
test
xor
add
push
clc
cmp
push
xchg
xor
fwait
mov
add
ja,pt
ss
push
adc
jo
aas
jns
add
inc
fsubr
insb
lock
sarb
movsb
or
fisubs
rolb
jbe
cli
dec
out
mov
inc
add
add
fiadds
cmpsb
popa
xchg
xor
enter
out
push
loopne
push
imulb
xor
push
loopne
sarl
pusha
mov
sbb
inc
adc
add
fmull
das
add
mov
add
mov
ret
sub
and
add
xchg
fs
stos
inc
jecxz
out
xchg
add
cmp
and
in
stos
iret
movsl
addl
inc
push
sbb
push
loope
sub
dec
and
adc
and
ret
mov
mov
into
imul
push
push
test
stos
add
add
jle
and
mov
mov
inc
es
mov
in
nop
inc
push
in
push
xor
sahf
inc
add
lock
les
mov
aam
shlb
aaa
mov
xor
loopne,pt
and
pusha
push
pusha
mov
mov
lds
add
lcall
fucompp
xor
jp
stos
jge
les
or
enter
or
clc
xchg
sbb
sbb
movsb
cmc
cmp
add
sub
or
mov
or
dec
cwtl
lock
or
pop
sbb
pop
mul
sub
out
mov
mov
rcrl
nop
lahf
pop
enter
icebp
call
xor
aaa
add
sub
and
push
leave
jo
mov
pop
xor
push
xor
sbb
mov
pop
sub
cli
leave
icebp
and
mov
mulb
test
mov
test
lea
sahf
jl
sbb
cmp
popa
orb
bound
adc
xor
dec
mov
add
clc
pop
int3
jbe
xor
ficoml
aaa
sub
cwtl
aad
rclb
scas
lods
add
pop
lea
repnz
adc
dec
adc
hlt
jbe
add
rol
addr16
jbe
pop
pop
data16
mov
add
and
rcll
or
data16
sub
test
ljmp
add
inc
xor
adc
fdivr
sub
test
pop
lcall
dec
dec
push
push
push
cmp
dec
mov
add
into
adc
or
cltd
mov
and
push
ja
add
lods
int
add
and
jp
jne
icebp
addl
pushl
int
cmp
enter
add
sbb
add
out
jo
xchg
adc
cmp
or
sbb
mov
scas
xorl
outsb
push
push
and
popa
or
stos
push
mov
fwait
sbb
cmp
add
mov
movsb
retw
or
repnz
pusha
popa
jmp
mov
pop
dec
dec
addl
add
sbb
fsubrl
bound
add
sub
cmpsb
subb
mov
sbb
sub
and
pusha
inc
sbbl
dec
dec
sbb
pushl
mov
dec
add
add
sbbb
mov
add
cli
imul
clc
mov
sub
data16
es
push
rcrb
dec
les
or
lret
movsl
or
dec
fs
mov
mov
inc
outsb
nop
mov
xor
fs
jl
sbb
jle
and
inc
cmp
cs
xor
outsb
ja
dec
xorl
mov
jo
cmp
rcrb
mov
sub
insl
pop
adc
hlt
sbb
lods
cs
leave
aad
pop
add
jo
push
out
and
dec
or
sarl
pop
xchg
es
add
lock
dec
xchg
or
mov
or
or
das
pop
andb
add
call
lea
push
test
mov
or
sahf
and
ret
add
mov
and
fldcw
ret
nop
es
es
push
sbb
dec
cmp
sbb
andb
sbb
inc
pop
rcrb
fidivrs
add
add
cmpb
adc
sbb
add
pop
mov
out
inc
inc
rorl
popf
dec
ret
pop
cmp
filds
inc
add
inc
leave
push
sbbb
mov
adc
adc
subb
lea
jae
push
mov
pop
xor
dec
loope
sub
xchg
jmp
fsin
fldl
in
xor
mov
and
shr
and
sub
mov
das
in
mov
test
aad
hlt
nop
sahf
cmp
mov
dec
pop
lds
je
inc
aam
fisttps
out
or
mov
test
cmp
adc
test
movsl
cmp
pop
push
push
inc
xchg
ret
call
pusha
and
or
fadd
shrl
cli
cmp
add
jb
loopne
call
movsl
filds
adc
push
shlb
and
or
add
lock
pop
inc
loop
ret
inc
orb
subl
mov
js
push
xchg
shrl
inc
test
dec
mov
stos
out
pop
sub
mov
cwtl
ss
fwait
and
push
mov
mov
add
arpl
push
pop
dec
add
mov
fcoml
and
loopne
or
mov
sbb
dec
inc
stos
adc
stos
fisubs
and
push
push
add
inc
pop
rcrb
mov
adcb
test
cmp
js
shll
and
mov
add
loop
ljmp
add
ret
mov
insb
xor
inc
or
scas
xor
dec
xchg
imul
mov
add
dec
push
sub
outsl
push
jbe
rcrb
xorl
inc
add
pusha
sbb
pop
xorb
and
push
dec
dec
outsb
xor
pop
cld
scas
cld
and
rcrl
dec
rol
sbb
es
ja
lea
loopne
sub
fs
xchg
dec
xor
loope
mov
mov
adcb
mov
rorb
xchg
loopne
fdivl
sub
pop
divl
push
aas
xchg
sub
adc
xor
inc
push
orl
inc
xor
addl
or
cs
adc
and
jle
xchg
push
dec
cmpsb
sbb
jo
jg
mov
and
fisttps
xor
std
inc
rorb
adc
loope
or
js
test
or
dec
or
dec
inc
and
push
js
inc
aas
and
sbb
loopne
mov
adc
sbb
daa
shlb
inc
push
lods
fidivl
adc
ds
add
or
add
adc
mov
fbstp
cli
addb
sbb
mov
cmp
add
lcall
ds
loop
push
inc
and
push
xor
jle
xchg
jmp
adc
test
lahf
adc
adcl
sbb
adc
out
cld
inc
loope
and
adc
add
sahf
and
adc
add
mov
add
push
out
fcompl
dec
mov
into
test
push
or
repnz
adc
push
cmp
inc
jno
cmp
fcoms
and
sar
or
mov
adc
jge
loop
daa
clc
lea
pop
js
pop
mov
mov
or
xor
ds
sub
sub
bnd
cmp
nop
fisubl
xor
and
jno
xchg
sbb
xlat
outsl
inc
push
sbb
aam
inc
dec
rorl
cmp
adc
add
nop
pop
rcrb
shrb
in
xlat
pop
pusha
leave
push
push
add
pop
test
add
test
ds
and
pop
cwtl
pop
mov
push
mov
add
movsb
xor
shrb
fdivr
xor
lods
inc
adc
data16
mov
xor
jmp
xor
add
mov
add
mov
fists
cwtl
xor
enter
add
dec
sbb
pop
sub
adc
nop
or
pop
jae
sbb
or
cld
pop
lock
jb
sub
or
pop
pusha
inc
ss
lods
xchg
push
bound
loop
push
movsb
sahf
insb
push
add
testb
push
sbb
lods
jle
out
and
or
inc
pop
sub
addb
cmc
test
cwtl
aam
add
cmp
cmp
inc
mov
mov
data16
jo
lock
xchg
add
or
push
inc
in
push
clc
jg
adc
xor
mov
cmp
or
xchg
adc
cmp
data16
aam
clc
fwait
and
or
cltd
mov
or
cmp
pop
and
rclb
call
xor
loopne
add
mov
data16
xchg
stos
cmp
int3
and
pop
mov
jbe
ja
fabs
add
add
sub
adc
fmul
inc
sbb
ljmp
test
dec
loopne
mov
loope
and
jl
add
adc
fs
ds
adc
xchg
int3
xchg
add
lcall
mov
or
gs
adcb
lock
daa
xor
cwtl
out
sbbl
jb
es
sbb
je
adc
out
fs
adc
enter
stos
fiaddl
mov
xor
add
jo
mov
cli
sbb
insl
fistps
insl
sub
aam
test
stos
je
xchg
es
sarb
bnd
fs
or
inc
pop
pusha
add
adc
stos
cmp
sub
lock
inc
or
xor
adc
inc
mov
into
lock
loope
sahf
xor
scas
mov
stos
jge
add
rcll
mov
and
jge
enter
sub
das
clc
mov
push
adc
jo
lock
fbld
clc
inc
bswap
cmp
or
adc
jbe
adc
mov
lock
or
jns
leave
cmp
mov
or
push
sub
push
dec
ss
xchg
pusha
and
cmp
sti
shll
lods
cmp
and
rolb
shlb
fld
jl
dec
xor
lods
jo
push
inc
adc
in
rcrb
sbb
push
inc
outsl
mov
or
dec
cmpsb
inc
lods
mov
loopne
loop
loope
and
and
jno
bound
pop
loopne
clc
jg
mov
fdivs
adc
push
cmp
mov
push
mov
and
inc
clc
add
and
inc
lret
aam
clc
mov
ja
loopne
push
dec
aam
xchg
rolb
out
inc
push
mov
add
mov
sbb
xchg
push
jo
mov
movsb
jo
sbb
push
out
push
or
cs
cmp
mov
hlt
adc
sbbb
sbb
adc
in
stos
xchg
sbb
mov
add
add
adc
xchg
cmp
scas
xor
sbb
icebp
sbb
cltd
mov
call
mov
push
adc
and
push
pop
test
test
mov
push
mov
sbb
xchg
add
and
or
fdivrs
movsb
push
int3
repnz
testl
ja
dec
and
xor
nop
ljmp
or
adc
les
or
add
add
nop
les
shrb
out
add
cwtl
push
mov
push
adc
inc
fldl
add
jmp
or
enter
mov
jb
mov
inc
jbe
push
mov
inc
push
pusha
fdivp
push
jmp
add
mov
pop
out
push
inc
adc
call
sbbl
jbe
sub
dec
test
add
inc
mov
mov
dec
movsb
add
imul
aam
sub
jo
lock
sbb
rolb
jl
insb
inc
sbb
inc
popf
cli
filds
leave
cld
mov
enter
lret
test
cli
das
xchg
sarb
int3
sub
lock
ja
sbb
andl
stos
push
fadds
jg
cli
fbstp
mov
fdivrs
push
addr16
cmp
dec
push
lret
xchg
xorb
sub
aaa
push
sbb
add
loope
add
sub
aas
add
and
dec
fistps
push
lods
xor
subl
mov
jbe
rclb
xchg
pop
loopne
test
sar
xchg
jb
fnstcw
push
push
lret
sub
jl
xchg
sub
push
and
add
mov
sub
fistpl
dec
test
popa
pop
loopne
sbb
push
into
inc
dec
loopne
and
add
dec
and
lock
or
pop
push
adc
or
in
outsl
fwait
mov
je
jae
sub
lods
dec
popa
xchg
mov
add
pop
pop
pop
hlt
iret
xchg
fisubrs
or
xor
lods
data16
mov
or
negb
push
or
add
pop
or
adc
or
mov
adc
addl
cmp
sub
and
inc
mov
das
sbbl
and
xor
xor
lcall
xor
in
jnp
roll
push
js
push
jge
cmpsb
cmp
mov
inc
andb
sbb
loopne
lock
shlb
add
mov
add
testb
enter
pop
fisttpl
push
adc
xor
pusha
test
sti
out
lret
orl
mov
mov
sbb
or
mov
pushf
add
sbbb
orl
lock
fisubrs
cwtl
nop
rorl
dec
in
in
jnp
aad
push
sbbl
fbstp
push
mov
shlb
sbb
fiaddl
add
mov
push
addb
pop
mov
loopne
fdivl
inc
rolb
les
stc
add
shlb
xor
hlt
push
and
sbb
cmp
sarl
pusha
push
jo
mov
mov
cmpb
add
sbb
scas
adc
jmp
jecxz
in
pusha
push
lcall
mov
stos
testb
roll
mov
xchg
add
adc
add
fcmovnu
cmpsb
or
add
and
out
xor
enter
stos
xchg
aas
loop
fists
push
call
mov
or
mov
jbe
mov
stos
push
and
imul
adc
dec
add
outsb
jbe
testb
inc
test
mov
sbb
ror
jle
pop
fcoms
les
inc
fists
xor
mov
or
add
jbe
add
xchg
imull
xchg
nop
and
xchg
mov
adc
sarb
roll
clc
fists
cmpb
in
add
adc
push
mov
rcll
and
out
mov
fistps
sub
test
enter
addb
add
fistps
lds
into
sbb
push
and
jnp
inc
adc
das
xchg
xor
xorb
test
xchg
and
lret
and
loopne
push
testb
adc
andb
add
lods
daa
in
pop
das
sub
add
bound
sbb
pop
dec
test
lods
sbb
fsubp
sbb
sbb
aad
add
sti
loopne
hlt
sub
lret
push
ret
xchg
bound
push
ss
push
inc
sbb
jb
imul
push
sub
pusha
xor
sti
in
jg
mov
sbb
pusha
add
sub
in
mov
add
adc
sbb
xor
sti
rcrl
mov
imul
hlt
pop
mov
movsb
lods
jbe
adc
sub
mov
push
inc
ja
and
cmp
adc
test
mov
or
out
loopne
adc
inc
rclb
or
popa
incl
daa
mov
push
and
and
or
pop
inc
out
push
ficompl
pop
xor
lcall
mov
xor
inc
ret
and
mov
shlb
and
stos
xchg
adc
add
add
icebp
lock
mov
sbb
aam
stos
mov
or
add
mov
xor
cltd
cs
imul
pop
pop
sub
cmp
xor
jmp
jmp
push
xchg
dec
and
mov
push
sti
jl,pn
js
lret
xor
sbb
xorb
push
mov
test
mov
lea
mov
add
adc
add
pushw
enter
stos
sarb
subb
into
cmp
pusha
mov
mov
lret
push
mov
dec
mov
cmp
enter
adcb
lock
add
and
lret
cld
add
sbb
pop
fadds
cwtl
incb
subb
nop
enter
and
fmuls
mov
adc
cmp
pop
and
add
push
sbb
dec
ja
or
pushl
push
add
or
pop
push
jae
and
and
mov
push
pusha
xchg
es
jle
add
sarb
mov
cmc
dec
push
shr
jnp
and
inc
seto
and
insl
adc
add
test
pop
rorb
addr16
xorb
or
or
add
and
jmp
add
mov
jg
hlt
pop
ficoms
test
pusha
jno
loopne
sbb
ret
rolb
add
jge
jbe
sub
dec
stos
ret
fsubrs
insl
mov
mov
jbe
dec
xor
xorb
pop
rorb
movsb
xor
je
inc
push
ret
adc
or
and
mov
stos
mov
push
sub
mov
add
xchg
outsb
loop
add
mov
dec
and
clc
out
ds
sbb
jno
add
pop
add
aas
jo
dec
and
dec
push
xchg
fs
daa
inc
aas
lea
mov
add
adc
pusha
pop
sub
inc
es
cmpb
notb
ljmp
adc
add
add
adc
and
cli
add
jbe
add
mov
ja
decl
xor
or
push
sub
je
add
cmp
xchg
scas
inc
mov
add
sub
sub
insb
push
adc
dec
mov
hlt
int
mov
out
and
dec
mov
add
clc
jle
push
js
sub
sub
push
pop
cmp
sub
and
std
or
xor
cmpb
ljmp
fists
push
add
mov
pusha
cmp
sbb
or
les
cld
sbb
lock
add
mov
inc
test
add
adc
inc
test
sub
dec
sub
jecxz
adc
fistps
sbb
xchg
mov
cmp
dec
pop
xor
loopne
lock
mov
mov
push
add
test
fsubrl
fadd
adc
popa
add
movsb
pusha
add
fstpt
test
add
or
adc
sbbl
test
or
aam
in
incl
push
out
ss
popa
sub
pop
andl
loopne
jno
sub
inc
jb
jecxz
hlt
jg
es
inc
jle
sub
fistps
add
decl
incb
enter
xor
jno
dec
je
sub
outsb
xor
xor
les
fcoms
loop
les
cmpsb
push
aas
std
mov
pop
fs
pop
movsb
xchg
xor
dec
mov
fisttps
sub
add
mov
cmpsl
add
and
jbe
loopne
pop
cmp
mov
sub
or
xor
fsubl
stos
js
jno
fs
jo
inc
xchg
loopne
imul
nop
cmp
dec
adcb
fwait
pop
and
push
inc
sbb
inc
add
imul
push
addb
push
sub
add
test
dec
mov
in
xor
adc
cmp
fmulp
lret
adc
lret
xchg
fdivl
icebp
aad
es
add
pop
and
andl
sub
and
sbb
mulb
mov
push
add
and
shlb
mov
cmp
sub
xor
pop
sbb
sbb
movsl
in
push
ret
sbb
pop
jp
jo
insl
cmpsb
jl
xchg
pop
add
adc
enter
fdivrs
xchg
adc
or
shlb
mov
or
and
add
jp
adc
push
fisttps
and
adc
push
adc
sub
enter
orl
push
fdivs
sbb
push
cmp
cmp
mov
and
pop
jno
push
add
sub
lods
movsb
and
cmp
aad
adc
mov
jo
mov
push
movsb
inc
fcomi
adc
and
test
push
ja
xor
fcomip
inc
icebp
dec
adc
push
add
sub
fidivrs
inc
and
push
jne
repnz
ror
inc
push
rol
push
push
mov
pop
pusha
push
add
or
push
jbe
push
push
sub
mov
push
and
sub
jae
es
xor
inc
hlt
mov
sub
sbb
push
xchg
xchg
stos
push
adc
hlt
inc
shrb
es
and
and
aaa
adc
call
and
cmp
push
lcall
loop
insb
xchg
lea
and
jbe
add
or
jle
mov
push
rcrb
test
inc
inc
mov
neg
sbb
inc
xchg
add
and
and
adc
and
jmp
mov
loopne
xor
das
cmpsl
mov
cmp
dec
leave
and
and
imul
mov
adc
add
jo,pn
or
mov
pusha
fimull
and
in
jg
fcoml
stos
outsl
cmp
fsubrs
ljmp
push
pusha
lret
es
xor
fildll
sbb
push
adc
or
and
lret
xor
fidivrs
outsl
add
push
cwtl
and
mov
and
add
fidivl
add
xorb
mov
xchg
leave
or
jg
les
jne
das
scas
stos
add
jnp
dec
into
fnsave
sbb
xor
int
inc
bound
insl
dec
sub
xor
insl
jo
push
jecxz
push
pop
repnz
jne
dec
subb
dec
pop
dec
xor
jp
cwtl
aam
add
pop
sbb
stos
decl
jge
pop
cs
inc
add
adc
shrb
ror
ss
inc
add
rcrb
mov
movsb
inc
mov
xor
mov
and
inc
shl
inc
fldcw
push
xor
inc
loopne
or
fwait
pusha
orl
add
fadd
or
or
stc
es
hlt
out
rcrb
nop
push
mov
fstl
push
clc
and
or
and
nop
dec
loop
adc
add
scas
xchg
adc
add
clc
and
mov
push
sub
push
lock
stos
add
shll
and
push
outsl
and
fsubrp
shlb
ljmp
test
pop
andb
add
mov
pusha
ds
lock
pop
mov
jne
push
push
icebp
into
hlt
stos
and
adc
lret
cmp
adc
mov
adc
and
test
adcb
movsb
pop
das
push
and
lcall
lock
lock
xor
sbb
outsl
mov
ss
and
cld
cmp
pusha
nop
adc
subl
test
push
aaa
hlt
push
sub
push
and
and
aad
sub
imul
shlb
imul
or
dec
lret
lret
adc
pusha
mov
lcall
or
jae
es
addb
xor
dec
inc
push
rorb
loop
lock
nop
leave
cmc
clc
lock
or
add
xor
out
adc
dec
cld
xchg
cld
mov
add
add
mov
or
or
lea
fs
ljmp
push
jg
scas
sub
data16
lret
clc
inc
mov
aad
call
xchg
mov
div
and
and
jb
push
pushf
add
stos
xor
das
or
loopne
inc
sbb
lea
mov
data16
dec
rcrb
add
xor
outsl
lods
inc
push
and
clc
xor
pop
in
loop
and
pop
sahf
loop
jl
rclb
stos
jne
clc
adc
aaa
adcl
fbld
aaa
push
and
in
das
and
dec
and
inc
add
sbb
shll
cmc
fwait
mov
stos
daa
push
aas
mov
jg
fistl
sub
test
test
sbbb
fisubrs
lretw
lret
insb
xor
sbb
lods
pushf
ss
fisttpl
push
in
push
adc
mov
jle
rclb
or
in
out
clc
add
add
out
daa
and
outsl
push
jg
fmulp
mov
add
fwait
shlb
rcrb
inc
and
shr
xchg
and
mov
add
and
lods
pop
jbe
xor
fiadds
in
or
and
outsl
or
push
adc
xor
movsl
push
or
xor
inc
add
push
cmpsl
mov
mov
cmp
outsl
enter
shlb
scas
xor
fdivrl
fcompl
and
lods
mov
xor
dec
enter
stc
enter
adc
jo
les
rcll
dec
or
sbb
lods
sahf
or
nop
cmp
push
insb
adc
das
add
addl
push
xor
cmp
jbe
dec
and
or
lea
inc
ja
mov
dec
mov
and
jmp
lret
movsb
data16
jo
int3
fcomp
leave
popa
adc
fs
or
mov
fcomp
clc
cmc
fldcw
les
add
sub
xlat
aam
mov
aam
xor
repnz
scas
loopne
je
das
adc
pop
sub
push
fsubrl
stos
and
stos
int3
stos
in
inc
add
or
ljmp
dec
scas
jmp
push
adc
mov
pop
pop
cmp
mov
mov
push
sbb
xor
fcmovb
add
lret
adc
jnp
pop
inc
les
add
stos
scas
in
inc
test
clc
pop
mov
out
fadds
add
adc
adc
mov
inc
sbb
sub
xchg
rolb
rclb
and
add
call
ficoms
and
aad
js
lods
push
aad
jo
repnz
push
std
adc
stos
fiaddl
andl
xchg
jmp
ret
in
in
lcall
cld
lock
dec
aam
cs
push
adc
mov
imul
xor
pop
inc
jg
hlt
mov
jmp
das
push
push
pop
dec
inc
push
fdivs
pop
enter
jnp
add
mov
lcall
inc
jl
shrb
out
insb
ss
inc
jnp
pusha
enter
push
mov
mov
and
fisubl
cmpb
lock
pusha
push
and
or
push
aaa
loopne
sbb
rolb
sti
fbld
mov
adc
pushf
inc
jl
jl
bound
cld
cs
jne
ror
ret
pop
add
and
es
or
lcall
stos
enter
or
or
or
loopne
repnz
pusha
jle
add
sbbl
or
jne
or
jne
push
or
or
test
push
sub
sub
jo
cmpsb
inc
nop
cwtl
add
or
mov
and
or
enter
xor
movsl
sbbb
sub
push
pushf
notb
test
ret
movsb
mov
push
jg
test
and
subb
adcb
shlb
arpl
sbb
outsb
rolb
call
add
push
push
in
mov
or
aas
or
cwtl
sbb
push
fcomip
jmp
andb
loope
mov
sub
xorb
mov
jge
mov
enter
ret
jg
sbb
add
sbb
push
imul
sub
test
add
mov
sbb
or
or
xor
xorb
std
and
jmp
mov
mov
mov
es
movsb
in
fwait
dec
inc
mov
mov
or
mov
jg
in
stos
jg
and
stos
pop
insl
outsb
popa
ret
pop
dec
pusha
jl
sbb
and
ljmp
enter
subw
xchg
or
loopne
lret
cmp
test
aam
xorl
mov
pusha
sub
cmp
lock
subb
cmpl
sarl
test
jo
jbe
and
add
loopne
add
dec
fwait
pusha
cmp
sub
push
mov
or
and
jo
mov
or
fidivl
jp
inc
or
fadds
dec
icebp
scas
cmp
push
inc
clc
adc
aas
xchg
lock
lods
sbb
add
add
addl
outsb
ret
and
call
outsl
or
shlb
inc
xor
xor
jl
inc
xor
xchg
insl
ret
inc
icebp
into
xchg
and
pop
call
icebp
jge
mov
cmp
je
and
push
xchg
jmp
jp
and
inc
aas
push
jo
xor
inc
inc
inc
cmpsl
xchg
inc
mov
mov
and
push
or
out
jo
xor
cmp
sbb
testb
xor
insl
pushf
push
adc
mov
loope
aas
sti
int
or
subb
cmp
push
add
shlb
jl
insb
xchg
add
add
inc
push
ds
aam
inc
test
scas
pop
mov
and
push
cwtl
lcall
xchg
jg
mov
xchg
xchg
sub
jno,pt
inc
jnp
inc
shlb
mov
or
insb
inc
and
xorl
add
add
mov
mov
mov
push
adcb
pop
xchg
adc
xor
and
mov
insb
subb
dec
ret
loopne
sub
addr16
in
mov
sbb
push
shrb
jg
and
and
out
or
jg
xor
add
push
adc
cmp
mov
lret
or
add
dec
add
inc
push
add
inc
cmp
jmp
or
or
test
movsb
pop
push
cmpsl
mov
cmpl
mov
fs
popa
dec
cmpsl
xchg
mov
adc
mov
insl
adc
sbb
ret
and
addb
int3
sbb
call
mov
inc
or
in
cld
add
in
or
test
or
inc
adc
dec
inc
jle
rclb
pop
shlb
addr16
inc
pop
dec
inc
test
lcall
subb
ja
dec
shlb
pop
xchg
cmovo
inc
aaa
enter
adc
stos
fstpt
or
out
add
repnz
mov
add
adc
push
insl
test
and
or
mov
push
lods
jl
inc
mov
adc
add
fsubs
jge
out
mov
movsb
insl
lock
add
shrb
pushf
jg
jle
pop
cmc
push
sbb
push
pop
mov
jecxz
aam
add
cmpsl
lcall
out
call
push
loopne
shrb
fsts
inc
ror
ja
jbe
loopne
sbb
inc
add
xor
inc
int3
iret
and
inc
out
xchg
or
leave
movsl
and
push
push
popa
stos
bound
std
sbb
xor
add
push
add
push
gs
push
loopne
call
adc
jb
dec
test
mov
cmp
add
cld
fcmovnu
leave
ret
add
mov
icebp
add
mov
lods
inc
les
xor
add
xor
aam
lock
adc
add
or
xchg
lock
decl
cmp
adc
add
sub
push
lods
and
test
mov
das
adc
jle
lahf
ja
jno
addr16
icebp
cltd
push
jo
and
fs
xchg
test
and
fidivs
sub
and
es
or
sub
rorb
es
loope
mov
push
or
jge
pusha
enter
pushf
movsb
movl
sbb
push
es
pop
push
fsts
sub
hlt
loopne
ror
fbld
mov
mov
jno
nop
sbb
je
lea
mov
int
call
shlb
in
and
sbb
or
bnd
leave
add
frstor
jne
and
add
jns
lods
add
das
or
lret
sbb
mov
aas
lock
loope
adc
push
jge
enter
es
aaa
pop
inc
call
adc
and
loopne
add
xor
cmp
pusha
adc
sub
ss
inc
lods
lret
enter
sub
add
inc
fsubrs
shrb
or
ret
mov
dec
dec
aaa
xor
gs
stos
stc
inc
inc
pusha
jge
data16
dec
aam
adc
mov
jle
mov
push
jo
sbb
add
and
xor
fiadds
cld
lret
loopne
outsb
sub
lock
mov
or
lret
jo
or
pusha
xor
inc
add
sub
push
sub
inc
or
stos
adc
bound
pushf
mov
roll
lods
and
ljmp
xchg
loope
mov
and
rcr
push
mov
addb
test
and
lock
inc
add
data16
xchg
and
sbb
adc
shlb
ret
push
aaa
out
pop
mov
add
adc
mov
fwait
jbe
aas
mov
lret
cmp
enter
test
push
sub
filds
push
xchg
lret
add
dec
xor
test
fwait
add
jo
push
adc
test
nop
jp
add
or
or
sub
push
jae
pop
dec
ret
add
jne
or
lcall
data16
adc
inc
adc
insb
loop
and
jne
mov
enter
insb
cmp
jno
and
push
adc
sarl
add
gs
xor
inc
js
push
mov
xchg
pop
dec
push
sbb
mov
add
cmp
loope
add
push
or
fs
and
loopne
mov
add
jno
mov
and
subb
push
loope
push
mov
out
inc
sti
stos
mul
add
sbb
pop
loope
shrl
push
xor
popa
faddl
enter
and
lcall
dec
loopne
cmpb
movsl
in
and
mov
int3
pop
bnd
rolb
loope
push
sub
cwtl
inc
cmp
pop
and
add
inc
pusha
dec
pusha
push
cmp
divl
adc
inc
add
adc
mov
call
mov
icebp
fwait
mov
xor
les
fists
add
xor
fisttps
add
cwtl
add
add
push
sub
in
fistps
or
and
cltd
jbe
and
and
sbb
and
cs
addr16
test
inc
lock
and
adc
pop
shl
imulb
push
add
sbb
cmpsl
outsb
rolb
and
ljmp
add
mov
std
gs
bound
adc
fsubrs
push
add
add
jge
pusha
data16
or
outsl
sub
in
mov
filds
add
mov
cmpsb
in
dec
test
or
jae
push
ret
es
movsb
cli
pop
pop
xor
push
jb
push
outsl
or
in
or
lods
bound
pop
stos
xchg
imul
or
ss
sub
adc
cmc
cmp
sub
or
stos
out
push
lock
add
xor
jmp
dec
cltd
xchg
cmp
adc
ja
movsb
add
jo
aaa
sbb
dec
fimull
jae
andb
or
stos
sar
pop
stos
push
mov
test
add
and
rol
mov
adc
inc
test
xor
sbb
xchg
mov
ljmp
in
stos
out
mov
test
jne
xor
icebp
mov
inc
cli
notl
fldl
mov
and
add
mov
int3
push
fdivrs
addl
mov
fiadds
push
and
add
or
fsubs
sahf
addb
aam
or
call
or
adc
jo
push
add
dec
mov
aam
inc
addb
mov
call
and
jg
fildll
cmpl
fwait
dec
jl
add
imul
pushl
je
xlat
inc
sbbl
mov
or
inc
pop
xchg
xor
das
mov
lock
pop
mov
adc
addr16
add
mov
shlb
dec
jmp
sub
or
popa
add
call
or
andl
cld
pop
mov
inc
mov
inc
inc
mov
xor
cld
in
mov
ret
xor
sarb
adc
in
rolb
addl
rorb
adc
insl
mov
adc
add
push
les
shrb
das
stos
clc
icebp
inc
mov
or
mov
add
test
cmp
jp
adc
test
jbe
or
pusha
mov
inc
inc
pop
mov
pop
push
je
sbb
bound
inc
inc
sub
push
xor
add
xchg
cmp
xor
mov
lods
mov
pop
pop
and
stc
shll
shll
and
fisttps
sub
or
jne
sub
adc
mov
shl
mov
and
rcll
sahf
and
leave
xchg
in
shrb
add
das
int3
ret
ljmp
cltd
jp
les
into
imul
lret
das
or
sub
in
scas
xor
sub
cwtl
mov
adc
push
sub
inc
aam
mov
aam
add
cmpb
add
sbb
call
jbe
je
fiadds
jge
rclb
aas
inc
scas
xor
dec
pop
mov
rol
add
les
dec
add
push
js
push
pop
test
stc
outsl
add
shll
or
add
adc
jo
push
sahf
ficomps
cmp
xor
inc
lds
inc
mov
sub
subb
mov
enter
xchg
loopne
mov
pop
adcb
and
ret
mov
shll
add
inc
or
jns
mov
add
pop
xor
cltd
and
repnz
out
push
mov
or
lock
popa
das
inc
ljmp
icebp
add
sub
sbb
lods
in
sbb
sarb
and
push
and
adc
push
addr16
sub
pop
or
push
int3
and
and
cmp
xadd
sub
pusha
push
mov
insb
and
inc
dec
loop
cli
and
lods
leave
sbb
or
adc
roll
push
and
pop
loopne
cmpsl
mov
and
les
movsl
insb
adc
mov
out
xor
or
or
mov
xor
cmp
sbb
fs
fs
jg
xor
insl
adcl
pusha
pop
mov
fadds
ljmp
or
add
lcallw
les
insb
adc
orb
loope
loopne
and
pop
test
xchg
loope
lcall
shrb
push
pop
and
add
sub
push
add
sub
andb
sbb
push
push
dec
je
js
and
adc
test
outsl
in
add
mov
xchg
lret
and
mov
mov
out
loopne
into
subb
xchg
jae
mov
aaa
cmp
mov
pop
cmp
xchg
sub
mov
and
clc
xchg
add
popa
rclb
cmp
sbb
iret
fidivrl
leave
mov
fbld
adc
jae
sbb
mov
add
sbb
and
sub
mov
mov
sub
push
dec
xor
mov
sub
sbb
or
sbb
xchg
mov
xlat
sub
inc
inc
sub
pushf
mov
inc
inc
xor
dec
je
mov
mov
add
adc
mov
and
dec
inc
add
fsubl
jns
lar
es
scas
push
xor
lods
loope
mov
xchg
insb
inc
test
enter
lea
filds
xor
sbb
scas
les
mov
sub
rorl
add
rclb
shrd
push
jno
add
repnz
cmp
jp
and
or
and
pop
sub
adc
je
mov
xor
add
jo
jg
pushf
pop
lret
jnp
aas
adc
mov
loop
add
adc
test
loop
jne
add
add
lock
ret
adc
adc
rolb
jg
shrl
add
stos
xor
loop
mov
outsl
sub
inc
rcrb
daa
imul
call
sahf
xor
mov
add
repnz
jecxz
mov
int3
add
ret
cld
add
push
mov
cmp
test
les
lret
inc
add
outsb
jg
aaa
jmp
adc
mov
fsubl
add
jo
and
lock
pop
subb
jbe
mov
test
xchg
xor
and
sub
pop
lock
and
stos
dec
pusha
fcomps
rcrb
xor
and
js
xlat
cwtl
push
aas
mov
adc
add
xor
push
add
pusha
push
pop
enter
lods
adc
jmp
jns
mov
xor
sub
xor
mov
adc
mov
addr16
cmp
sbb
push
int3
sub
test
loopne
call
loop
or
xor
push
or
pushf
outsb
mov
lcall
scas
adc
out
inc
add
add
es
inc
adc
daa
adc
outsb
adcb
stos
out
xor
mov
and
push
pop
stos
or
adc
xor
xor
inc
rcrl
out
sub
and
lea
mov
pushf
jecxz
fstpt
ss
adc
and
or
inc
adc
ficoms
and
inc
jecxz
or
sahf
lock
and
xor
inc
xor
loope
fbstp
or
sub
cwtl
xor
jmp
js
mov
mov
icebp
add
enter
inc
filds
fildl
xchg
dec
subb
idiv
xchg
movsl
add
mov
and
adc
dec
pusha
test
cmp
roll
cmp
mov
nop
push
mov
push
stos
nop
js
sub
pop
and
and
aaa
xor
mov
and
movsb
mov
sbb
sbb
stos
push
fdivs
inc
xor
and
pop
add
sahf
clc
bound
pop
mov
sub
cmp
sbb
lock
or
jb
push
ss
adc
nop
mov
fbstp
je,pn
pop
lret
mov
in
sbb
mov
adc
cld
push
add
xchg
hlt
or
push
shlb
mov
bound
call
test
clc
xchg
or
movsl
rolb
mov
jp
lods
adc
mov
out
movsl
adc
inc
pop
and
nop
xor
imul
sbb
pop
mov
outsb
mov
push
cld
adc
and
add
pop
hlt
pop
mov
dec
outsl
pusha
or
mov
sub
and
addb
js
add
mov
shlb
jae
fildll
outsb
xchg
mov
popa
mov
sarl
mov
add
call
push
dec
stos
inc
insl
push
add
inc
mov
jbe
lods
imul
pop
stos
cli
sbb
push
push
lods
test
add
or
fs
mov
jno
jb
mov
add
stos
decb
or
movl
out
mov
aas
inc
cmp
mov
cmp
jnp
dec
subb
add
arpl
mov
push
test
jle
ret
mov
xchg
nop
adc
push
or
movsl
or
push
or
movsl
add
push
shrl
xchg
adc
mov
shlb
adc
add
fldt
jg
add
mov
mov
call
add
add
mov
add
jle
cli
and
aam
sub
and
cld
adc
push
sub
lods
add
rorb
lods
inc
loope
rcl
push
sub
or
test
test
sbb
adc
add
add
enter
pop
shl
and
shlb
adc
xor
push
nop
xor
out
nop
inc
cld
jg
pop
addb
jae
jo
add
cmp
ja
adc
xor
lock
mov
xor
push
jmp
imul
cmp
push
xor
call
or
shr
or
mov
ds
sbb
lcall
mov
mov
sbb
jg
xorb
sbb
or
add
mov
add
pop
add
cli
pop
inc
cli
mov
push
mov
stos
ror
mov
mov
xlat
push
add
adc
cmpsb
or
fcomip
push
aas
cmc
inc
pop
sbb
push
xor
sub
push
pusha
add
cld
xlat
inc
add
stos
xlat
or
or
or
out
lock
push
xor
lods
pop
push
push
test
pushl
cli
push
sbb
sbb
stos
dec
and
sub
mov
cmpsl
add
notb
mov
pop
sbb
leave
push
into
mov
daa
mov
and
test
daa
adc
mov
add
ja
popa
push
and
mov
rclb
cli
stos
cmp
rolb
xor
outsl
fdiv
mov
lock
les
pusha
xchg
fists
in
pop
pop
inc
mov
mov
js
rolb
or
push
inc
shlb
mov
push
adc
ficoml
and
push
push
lods
adc
lods
jl
xchg
lea
xchg
aam
sub
mov
in
dec
mov
pusha
in
ficoml
mov
dec
cmpsb
add
rorb
addl
cli
neg
fsubp
pusha
add
sarb
push
adc
jne
or
mov
push
inc
fldt
adc
xor
subb
jge
push
inc
shrl
add
cwtl
push
cli
add
dec
insb
xor
add
fists
add
cmp
push
mov
popl
push
inc
adc
cmpb
inc
or
mov
ja
addb
pop
leave
sbb
mov
dec
jo
or
xorb
jge
mov
pop
bound
jno
les
push
xor
xchg
fiadds
mov
or
add
ret
add
scas
mov
add
add
popa
fs
or
insb
lods
pop
push
ficoms
outsb
and
out
adc
jg
fwait
push
add
jbe
add
inc
pusha
and
nop
xor
and
add
hlt
mov
fsubrl
imul
clc
loopne
fstpt
es
mov
xchg
mov
ret
repnz
subb
sub
xor
add
or
mov
or
arpl
fsubrs
adc
cmp
add
inc
xor
jmp
xorb
andb
dec
mov
jl
std
out
jb
push
dec
rclb
sbb
dec
or
jmp
in
adcl
clc
or
xor
xor
cs
outsb
or
js
push
xor
stos
rep
call
mov
jmp
lcall
add
sbb
ja
cmp
lods
sbb
jno
jmp
enter
push
int3
shr
mov
push
les
arpl
inc
xorl
inc
add
mov
or
sbb
lods
xor
mov
mov
and
or
scas
push
and
mov
ret
mov
call
add
aaa
inc
and
rcl
movsb
adc
inc
add
jle
push
data16
mov
inc
add
addl
pop
xchg
inc
movsl
clc
sub
add
addb
mov
fistpll
dec
add
aaa
inc
xor
and
rcrb
cmpsb
pop
dec
lcall
push
test
scas
inc
out
xlat
or
pop
loopne
sub
push
jecxz
outsb
mov
add
add
add
icebp
outsb
push
das
mov
mov
stos
jl
push
cld
popf
rolb
loop
leave
icebp
sti
icebp
lret
sub
push
adc
adc
fiadds
aaa
std
outsl
aaa
cmp
and
cs
or
or
out
push
sub
shrl
push
cmp
sarb
clc
mov
enter
stc
inc
push
out
jle
ljmp
int3
ret
jae
fwait
xor
shlb
sub
andb
lods
jg
add
and
dec
sub
xorb
jns
jns
inc
sbb
out
fcomip
jecxz
into
add
inc
insb
shlb
jg
jmp
jne
sbb
loope
subl
jo
mov
es
incb
stos
loop
sub
add
pop
sbb
dec
xchg
popa
test
xchg
or
ljmp
sub
cmp
add
push
sub
xchg
dec
nop
and
push
sub
bound
sbb
push
enter
jl
inc
jno
lock
adc
push
lods
mov
sahf
add
mov
sub
dec
jns
pop
sbb
xor
fistps
add
add
mov
loope
aas
xlat
lock
add
ljmp
nop
mov
mov
push
adc
pop
xchg
xchg
mov
and
adc
add
push
adc
jg
rorb
xorl
and
mov
push
mov
xlat
inc
shll
shrl
or
fs
shll
clc
add
or
dec
dec
adcl
mov
add
cmp
mov
fidivrl
xor
in
test
push
inc
fistps
fs
pusha
andl
inc
and
loopne
insl
add
adc
jns
or
jge
or
sub
andb
mov
and
mov
inc
dec
add
push
pusha
enter
or
ss
filds
std
sbb
loope
xorl
nop
mov
movhps
verr
mov
or
mov
jne
in
jae
pop
pop
pop
cmp
and
or
pop
sub
push
mov
popa
orb
mov
pop
cmp
mov
loopne
pop
add
xor
js
daa
pop
or
andb
sbb
popa
sub
loop
mov
push
adc
imulb
test
out
pusha
adc
push
mov
in
jecxz
add
shl
inc
adc
shlb
jle
scas
mov
mov
loopne
adc
mov
adc
dec
and
fildll
dec
imul
xchg
jle
fnsave
add
mov
aad
mov
int3
pop
test
outsl
add
xor
push
adc
inc
fbstp
test
pusha
dec
jnp
cmpsb
sbb
adc
add
dec
pop
xchg
add
sbb
call
mov
divl
or
fwait
orb
add
fcomps
insl
push
and
or
lods
test
andb
add
les
ret
pop
xchg
add
loopne
pushf
aad
fistpl
sub
jp
fiaddl
push
mov
test
add
lock
loope
pushf
mov
xor
pop
xor
mov
xor
cmp
sub
add
sub
idiv
xlat
sbb
and
std
or
add
or
sbb
add
imul
sbb
fldcw
out
cmp
imul
add
fsubrl
or
cs
fcmovnu
dec
adc
cs
hlt
mov
mov
test
mov
lahf
aaa
cmp
mov
in
push
pshufw
pushf
ficoms
xor
in
cmp
addb
mov
mov
lods
test
movsb
mov
or
push
sti
icebp
add
add
add
fs
cmpsb
inc
pop
repnz
xor
rorl
subl
add
mov
and
mov
jle
rcrl
stos
lock
sbb
sbb
shrb
push
pop
clc
hlt
icebp
sbb
sbb
loopne
jg
inc
or
jge
jg
aad
imul
std
add
lock
cmc
add
push
notl
mov
sbb
and
dec
mov
or
mov
call
out
xchg
adc
or
pop
mov
push
mov
sbb
jno
mov
xchg
lock
pop
dec
adc
xor
aad
loope
mov
mov
cmp
into
sar
add
or
outsl
out
add
jo
cmp
shll
xorb
xor
jp
adc
sub
icebp
ret
ret
lods
repz
in
ret
or
push
mov
inc
sti
addb
jl
cmc
or
addb
sbb
divb
cmp
add
jne
out
mov
and
lock
js
push
push
push
add
adc
add
push
push
adc
add
jbe
xor
std
fcomps
sbb
add
lret
not
in
sti
xchg
ret
mov
divb
or
add
aaa
mov
fs
adc
jae
stc
addl
fsubrl
push
sbbl
sti
stc
icebp
xor
repz
lock
call
jno
mov
in
aaa
cld
aas
enter
lock
pop
mov
sti
stos
nopl
sbb
call
or
xor
lock
fiaddl
aad
dec
xchg
pop
push
push
cmpl
mov
push
cmpl
sub
push
sbbl
adc
lcall
or
ret
dec
loop
mov
cld
lock
icebp
mov
jo
cli
lret
or
icebp
stos
test
out
ljmp
popa
int3
fimuls
shll
inc
rolb
popf
popaw
or
dec
vpsubw
add
stos
addr16
addr16
repnz
sub
stos
enter
repnz
dec
decb
add
jo
jnp
sbb
out
mov
mov
loopne
scas
in
test
pop
push
jnp
mov
push
lea
daa
add
push
mov
int
adc
stos
push
sbb
or
push
push
cmp
mov
lret
fiaddl
gs
jo
jb
fnstenv
aad
rcl
mov
cmp
pushw
add
stc
cmc
mov
in
loop,pt
or
add
sub
mov
test
pop
xchg
push
sub
push
mov
and
mov
adc
enter
lods
add
movsl
mov
mov
add
pop
pop
jnp
jne
loop
sahf
add
sbb
imul
xor
mov
mov
add
stos
cmpsb
push
mov
lcall
dec
repz
repz
inc
jle
jbe
repz
jb
push
bound
xor
repz
push
adc
or
xor
repz
add
cmp
and
push
sub
pop
xor
add
sub
fimull
shll
stos
lret
ret
xor
cli
div
out
ljmp
sahf
lcall
mov
xor
mov
stos
xor
shll
mov
xor
rcll
dec
inc
inc
dec
shll
jle
jbe
outsb
push
dec
shll
bound
sbb
shll
rcll
push
or
add
xor
cmp
xor
sub
pusha
or
add
shlb
imul
into
sahf
sarl
cli
testb
dec
repnz
ljmp
cmp
xchg
xchg
mov
xchg
sarl
mov
cmp
push
push
dec
dec
sarl
jp
dec
sarl
bound
cmp
sarl
push
adc
or
add
sub
push
ss
mov
daa
mov
dec
fisubs
sbb
or
stos
mov
subl
adc
mov
dec
imul
inc
jg
ja
pusha
addb
jae
movsl
or
movsb
cmp
sbb
femms
adc
add
stos
movsl
mov
data16
daa
jo
add
pushf
andb
pusha
andb
movsb
jo
mov
fcmovu
mov
push
fisubs
loopne
or
add
rolb
into
add
sbb
ret
pusha
dec
test
adc
repnz
sbb
xlat
fsubs
out
lcall
xchg
add
sbb
fisubrs
xor
mov
adc
cmpsb
imul
dec
dec
inc
inc
jle
lcall
loopne
daa
cltd
adc
add
add
add
lcall
sbb
add
xor
jo
nop
loopne
mov
or
cmp
imul
out
sbb
pusha
jo
subl
and
movsb
mov
mov
add
stos
mov
adc
mov
in
add
bound
add
push
adc
pusha
dec
aas
sub
xor
jmp
dec
cmp
clc
or
xlat
jl
ret
inc
fldcw
aad
int
sbb
sar
cmc
in
shll
loope
cltd
icebp
je
int
xchg
lea
jg
fists
scas
add
call
dec
and
and
add
push
xorb
cmp
pusha
push
daa
mov
dec
or
stos
adc
ficoml
fcomip
ljmp
gs
in
jge
pop
pop
aam
mov
jo
fdivl
out
dec
or
add
repnz
add
fildll
cvtdq2ps
and
and
adcb
loope,pn
incl
rolb
jo
adc
mov
add
or
sbb
inc
ja
je
and
add
lods
mov
xor
xor
or
jae
test
add
and
jle
jecxz,pt
inc
mov
pop
push
int3
add
adc
or
shlb
adc
enter
mov
jo
xor
add
add
enter
or
mov
cmovae
mov
add
sub
pop
cld
and
add
xor
and
jg
push
sti
xchg
add
adc
and
adc
inc
add
or
adc
or
push
loopne
jb
mov
fbld
das
and
xchg
jae
pop
cmp
roll
and
add
pop
jg
adc
out
pop
lock
or
push
pop
ds
or
lret
cmp
popa
add
dec
sbb
push
or
call
mov
outsb
adc
or
fisttpll
int
dec
ss
add
xor
cmp
sub
clc
mov
push
pop
inc
adc
push
and
ja
das
xchg
mov
and
incb
hlt
sbb
mov
test
add
test
mov
and
daa
adcl
jg
test
and
push
fstp
push
es
enter
loopne
push
fsubl
pcmpeqw
out
out
or
stos
lods
mov
ss
lock
incl
arpl
add
pop
mov
or
les
ret
std
pop
lret
sub
cwtl
adc
test
pop
shrb
lds
and
and
sbb
add
xchg
cmp
test
and
icebp
adc
mov
test
adc
rcrb
cmpsb
jno
ljmp
dec
shrb
rolb
add
pop
or
pop
add
sbb
inc
adc
and
cmp
mov
add
mov
ffree
sbb
xchg
fistpl
aaa
enter
decb
add
add
test
add
fwait
test
ret
mov
and
adcb
inc
fs
adcb
adcb
rep
das
scas
mov
outsb
mulb
repnz
push
sti
aaa
and
push
add
push
jp
enter
and
jg
push
and
push
push
es
or
hlt
add
push
ds
mov
sub
add
sub
mov
enter
es
inc
or
sbb
adc
mov
lds
mov
inc
mov
and
xor
xor
es
and
fnsave
add
or
jbe
and
orb
mov
add
scas
clc
daa
loopne
jbe
pusha
flds
cltd
rolb
pusha
dec
or
inc
xor
enter
add
push
jb
imul
inc
or
push
cwtl
push
inc
in
addb
push
inc
and
cld
sub
and
xor
push
push
adc
call
mov
fwait
pusha
inc
or
inc
or
flds
fbstp
mov
sub
and
or
push
mov
adc
mov
mov
enter
push
adc
push
pop
pop
orl
movsb
or
sub
fwait
rolb
sbb
inc
test
xchg
movups
cmp
mov
push
jle
xor
sub
mov
sbb
lcall
adc
mov
rcr
push
or
std
int3
sub
fucomi
push
aaa
xor
lds
enter
lcall
mov
les
jo
xor
data16
icebp
or
mov
pop
cmpsb
add
push
dec
cmpsb
fldcw
push
or
jns
sbb
out
mov
or
jae
cli
or
and
push
and
dec
pop
add
out
mov
push
shrb
enter
jo
mov
lret
cmp
add
adc
clc
add
das
dec
mov
dec
mov
loopne
xchg
jge
repnz
mov
jno
push
out
add
xor
add
xchg
add
and
test
xor
roll
andb
sub
enter
sbb
add
add
loopne
pop
scas
add
pop
adc
jg
and
add
xor
add
inc
push
sub
je
and
pop
pop
pop
add
ljmp
adc
icebp
leave
test
xor
or
icebp
shrl
enter
xor
jle
test
sub
adc
sbb
push
and
pop
or
decl
or
sbbb
push
add
mov
scas
sbb
add
sub
sbb
std
in
mov
mov
mov
sbb
push
add
cmp
inc
jo
test
mov
add
dec
push
pop
cmp
push
cmp
aaa
cld
mov
subb
push
mov
sub
adc
inc
jp
mov
cmp
sub
or
push
pusha
and
lahf
dec
pop
adc
inc
xchg
dec
scas
mov
stos
add
orl
or
or
pop
inc
movb
dec
and
inc
add
inc
inc
rorl
lods
push
cmpl
loop
lret
and
dec
dec
inc
cmpsl
cld
sub
fbld
outsb
jp
add
push
cs
pop
sub
xorl
and
add
addl
or
add
fidivs
inc
scas
pop
cmp
mov
lock
es
sbb
shrb
std
sbb
andl
mov
inc
sbb
addl
aam
sbb
enter
cmp
xchg
sbb
push
sub
pop
and
rcll
sbb
dec
in
test
add
or
int3
cmp
aas
push
ss
dec
add
decb
inc
push
add
pop
andb
in
in
sbb
pop
pusha
out
das
lret
xor
or
push
sub
cmp
mov
outsb
call
loopne
sub
sbb
and
dec
daa
sub
daa
pusha
fiaddl
data16
add
daa
test
aas
or
cmp
shll
push
and
subl
and
push
mov
rclb
ret
add
lds
ficoml
rcrb
gs
or
shrb
inc
add
push
xor
dec
loopne
inc
or
sbb
loope
add
rorb
in
add
fcomip
in
mov
push
pop
pop
inc
add
icebp
nop
aam
mov
add
adc
mov
xchg
sti
lods
fucomp
xor
add
in
or
test
sbb
call
push
adc
or
in
outsl
add
hlt
call
cmp
push
xchg
je
adc
jmp
neg
es
add
add
ljmp
test
lret
repz
jno
shlb
mov
in
out
or
or
sar
pop
xchg
pop
pop
lcall
and
repnz
jg
push
rclb
and
add
sub
add
or
or
or
in
adc
xor
mov
inc
push
cli
test
lcall
sub
cmp
mov
mov
jecxz
scas
fsubrs
sub
ret
int3
outsb
int3
int3
and
or
pop
shl
inc
mov
nop
jecxz
sub
pop
cwtl
dec
stos
pusha
fildll
sub
sbb
sbb
pop
filds
loopne
rol
fistps
xchg
pop
js
fists
filds
pop
fists
push
mov
mov
cmp
ja
or
outsb
xor
mov
call
mov
jmp
adc
lock
push
jb
mov
xor
mov
sahf
push
pop
mov
out
scas
mov
leave
sub
add
idivl
cmp
test
shlb
pop
test
push
mov
inc
push
xchg
add
adc
pusha
fisttpll
cmc
pushf
push
pop
jne
in
test
inc
sti
imul
or
mov
clc
push
les
popa
mov
inc
fimull
inc
push
add
push
shll
lret
test
jp
bound
stos
pusha
fdivl
add
push
cmovb
jp
mov
and
push
push
jg
sbb
decl
fdiv
xor
adc
and
adc
push
mov
mov
in
scas
and
xor
push
push
ss
adcb
mov
sub
xchg
cld
push
cmp
pop
sbb
or
stos
and
pop
pop
bnd
int3
or
out
mov
or
enter
outsl
add
dec
dec
add
sbb
and
dec
xor
into
hlt
and
loop
mov
mov
sbb
xchg
lret
sbb
sub
mov
aam
jo,pn
adc
loope
mov
and
pushf
div
rorb
add
popa
lods
movsl
sbb
jo
sub
aad
or
push
mov
sub
mov
aad
lods
pusha
popa
stos
xlat
push
data16
cmc
mov
xor
or
mov
or
test
loope
xor
jl
xchg
push
outsb
pop
sbb
adc
push
ret
add
insb
test
mov
dec
mov
lods
xorl
push
fldt
mov
pop
mov
xor
pop
lods
addb
nop
or
fildl
fildl
adc
sub
dec
pop
lods
addb
or
push
mov
jbe
adc
daa
push
or
inc
mov
ret
mov
stos
mov
lret
cmpsb
ret
pusha
faddl
test
push
rcr
add
les
lock
loopne
addb
popa
mov
sbb
pop
test
push
fnsave
inc
sub
mov
dec
add
addb
or
mov
lock
add
dec
push
inc
dec
dec
inc
addb
fcoms
in
jb
sub
and
lar
inc
dec
dec
push
jae
loope
adc
dec
add
mov
addr16
jo
inc
dec
arpl
and
mov
adc
je
nop
jo
testl
std
push
push
adc
push
or
push
add
bound
inc
jg
push
mov
add
add
push
pusha
add
and
inc
push
dec
clc
push
test
and
in
inc
xor
add
xor
popa
push
inc
add
loope
ficoml
outsb
add
aam
adc
gs
or
push
inc
and
sub
mov
ja
jae
sbb
pop
and
dec
push
dec
sub
dec
dec
xorb
inc
push
fistpl
add
fisubrs
adc
fistpl
jno
out
je
jo
jbe
dec
push
mov
xchg
mov
cld
bound
je
out
cmpl
add
or
lock
inc
push
dec
adc
adc
push
xchg
mov
or
pop
orb
sub
in
pop
and
dec
out
inc
and
div
subb
test
mov
rorb
and
xor
sbb
push
jle
sbb
sbb
or
add
in
jg
imul
insl
loopne
adc
adc
insb
call
sbb
cmp
insl
inc
push
inc
jbe
inc
push
outsl
inc
adc
not
and
inc
sar
mov
add
fstl
add
insb
rolb
push
rcrb
push
dec
push
lock
cli
or
and
sbb
popa
push
add
mov
or
inc
adc
add
movsb
dec
sahf
inc
out
adcb
mov
iret
or
movsl
push
push
add
add
xlat
cmc
daa
insl
push
dec
pop
push
push
adc
and
add
xchg
popa
dec
push
push
jmp
xchg
out
mov
jle
dec
push
jno
cmc
and
icebp
pusha
mov
add
and
dec
call
mov
mov
add
push
jne
adc
and
and
push
push
add
or
fwait
jmp
jecxz
jb
inc
scas
pop
jl
jmp
faddl
xchg
idivl
mov
xchg
mov
dec
lret
es
mov
and
inc
push
dec
or
andl
repnz
mov
add
je
push
mov
xchg
cmpsb
outsb
inc
dec
pusha
mov
dec
in
xchg
xchg
insb
adc
sbb
and
lcall
push
scas
adc
pop
inc
mov
or
mov
push
jecxz
insl
int3
add
dec
add
loopne
ret
jg
mov
add
movsl
add
andb
mov
inc
add
leave
sarl
pop
popa
in
inc
push
cmpb
inc
ret
jg
dec
loopne
fs
mov
sbbb
orb
xor
pop
add
or
daa
cmpb
andb
dec
push
dec
add
push
out
cmp
push
shlb
andb
orb
xor
addr16
call
pop
lcall
xchg
int
jo
push
insb
sbbl
es
scas
imul
pusha
xor
into
xchg
in
push
and
mov
add
addb
push
fistl
outsb
mov
mov
add
push
fs
lret
shl
push
rcrl
das
adc
js
mov
xchg
jo
dec
inc
rorb
push
or
outsl
data16
rorl
clc
fcomi
mov
pushl
inc
outsl
xor
add
push
inc
or
roll
inc
mov
dec
movl
pop
subb
push
sub
inc
or
ret
out
push
pop
add
xchg
addr16
adc
pop
sbb
rol
aad
and
adc
je
jo
mov
pop
lock
sarl
mov
testb
les
mov
jmp
les
mov
and
mov
mov
add
xor
les
xorb
push
mov
xor
adc
dec
shlb
enter
push
jl
imul
ret
dec
cli
and
xlat
lds
ret
das
je
and
fwait
or
jecxz
adc
inc
inc
subb
mov
js
sub
inc
fiaddl
shll
jb
cmpb
sub
inc
inc
loopne
jne
insb
out
scas
pop
incl
adc
inc
inc
insb
bound
push
push
sar
xor
pop
jne
jp
push
sahf
ss
sub
fiaddl
xor
les
sbb
add
pop
aas
fisubrs
jo
and
mov
and
add
inc
lds
or
and
inc
daa
and
add
xor
adc
insb
adc
sbb
fsubrs
in
inc
dec
xlat
dec
adc
call
push
push
test
popa
and
gs
test
inc
orl
mov
out
pop
push
xchg
test
inc
movsb
dec
outsl
in
pushl
xor
insl
mov
rcrb
push
add
call
sbb
fisubl
pop
roll
andb
inc
push
or
push
dec
rorb
push
loopne
mov
cwtl
mov
add
insl
loope
bound
iret
movsl
push
xor
dec
movsl
and
cli
pop
mov
loopne
add
adcl
xor
mov
pop
call
inc
shl
mov
inc
bound
pop
inc
mov
gs
dec
fisubrs
jb
gs
dec
orb
push
daa
cmpb
sbb
xchg
or
hlt
and
imul
pop
cmc
lcall
mov
shrb
inc
loopne
pop
and
dec
pushf
inc
insl
sbbb
mov
sbb
add
rorl
push
in
adc
cld
sbb
insb
lock
xor
lea
jb
mov
push
add
push
pop
push
jno
cmp
mov
and
inc
cli
incl
add
loope
jne
inc
mov
bound
test
mov
mov
push
cmp
sub
add
push
xor
out
outsb
or
std
in
dec
or
mov
add
add
outsl
or
cmp
inc
add
and
enter
pop
shll
and
dec
or
mov
cli
andl
sub
inc
call
popa
add
pop
ss
rclb
test
fs
push
xor
and
fcoms
sahf
sbb
scas
loope
jbe
mov
pop
test
adc
or
add
dec
mov
and
or
add
mov
inc
fcomp
icebp
sbb
mov
xor
and
in
add
jne
data16
or
xor
and
sbb
push
stos
push
add
inc
or
xor
inc
out
int
mov
or
sbb
jo
in
and
dec
sbb
xchg
add
sbb
icebp
add
and
and
jg
or
inc
int
or
add
jno
mov
ljmp
icebp
or
mov
ja
pop
adc
pop
dec
addl
addb
inc
hlt
push
push
nop
push
test
std
mov
cmpsb
in
xchg
push
dec
rcrl
jno
push
loopne
aaa
add
add
add
mov
scas
xor
add
add
sti
jno
scas
push
add
push
fwait
mov
adc
rclb
shll
push
insl
imul
in
xor
adc
pop
jno
or
clc
cmp
xor
push
dec
push
fs
dec
xchg
cmpb
in
push
mov
orl
add
sub
daa
icebp
push
mov
gs
ret
jp
dec
je
mov
jle
xchg
fiaddl
sub
inc
dec
insb
push
push
lock
adcl
clc
scas
and
push
insl
fisttpl
xchg
jge
push
add
aad
insb
lret
and
push
and
mov
push
or
jl
mov
cmpsb
adc
push
inc
mov
std
xchg
aas
repnz
and
jno
imul
pushl
add
nop
pop
and
add
adc
pushf
fisubrs
adc
jp
inc
cwtl
addl
push
std
incl
inc
jo
jnp
jno
movsb
add
inc
and
sub
mov
inc
rolb
push
gs
rorb
push
push
clc
mov
sti
adc
or
lock
or
add
adc
inc
insb
inc
dec
add
sbb
push
dec
adc
add
mov
lods
ror
stos
loop
or
roll
jbe
xor
add
inc
mov
push
sarl
add
adc
or
sbb
frstor
inc
or
inc
cli
inc
push
daa
add
cmp
push
inc
ja
shrb
mov
icebp
jbe
sub
mov
lds
rolb
es
in
outsb
push
adcl
jae
jg
lea
push
outsl
adc
or
and
adc
loop
jbe
adc
mov
push
jo
push
add
adc
popf
xor
adc
push
or
into
loop
pushf
pop
xchg
pusha
ret
aam
testl
jae
mov
scas
inc
pop
push
push
inc
mov
nop
push
lcall
and
push
push
lock
jmp
jae
jb
insb
in
xchg
push
je
ret
add
xchg
outsb
adc
ljmp
loopne
cld
call
test
outsb
sbb
add
push
push
or
aad
mov
cmpsl
push
and
enter
mov
and
adc
xor
dec
repnz
je
incl
divb
inc
xor
inc
mov
pushl
mov
jo
mov
inc
lods
push
dec
mov
mov
loop
pop
jne
xor
fcoms
mov
cmpsl
das
test
push
jp
icebp
in
inc
inc
adc
add
lods
sub
rcll
adc
fstpl
subb
or
xchg
pop
pop
insl
mov
push
jb
inc
dec
dec
mov
lret
dec
or
clc
jg
push
push
adc
shrb
scas
dec
adc
or
add
mov
shrb
cmp
mov
xor
push
shll
pusha
jb
cld
xlat
and
and
outsl
mov
rorb
xor
dec
inc
popa
ss
dec
xor
add
ljmp
mov
xchg
add
repnz
cmp
sbbl
cmp
in
je
popa
push
or
jne
or
xor
lret
aam
ret
jle
inc
loop
ja
test
outsl
xchg
inc
dec
push
rclb
mov
fs
test
jne
xchg
add
out
push
cmp
push
or
stos
add
xchg
xchg
mov
shlb
inc
inc
pushf
or
inc
xor
or
ja
cwtl
mov
mov
jo
pop
add
sbb
dec
push
xchg
aam
add
jnp
imul
push
jo
mov
aaa
jb
dec
push
mov
push
or
push
xchg
pop
push
push
in
andb
mov
outsb
sbb
mov
push
pop
andl
and
bound
jg
mov
pop
add
sbb
faddl
or
add
in
jb
movsb
dec
adc
mov
push
push
aam
push
pushf
push
mov
dec
push
or
push
or
sbb
data16
mov
test
inc
add
or
outsb
mov
inc
inc
or
test
mov
xchg
mov
dec
jo
orb
out
or
int3
loop
xchg
add
sbb
popa
pop
add
push
push
inc
or
pop
mov
add
jbe
dec
dec
or
inc
push
popa
push
inc
push
orb
pop
test
sahf
inc
fs
jo
fldl
std
gs
dec
insb
adc
push
and
push
xor
in
js
lock
adc
push
xor
stos
pop
data16
test
inc
std
xor
inc
lret
or
stos
fadds
push
imul
push
sbbl
inc
inc
add
push
cmp
pop
call
clc
jae
and
and
cmp
pop
addl
addl
add
lds
cmove
shlb
inc
pop
and
sub
das
hlt
sbb
push
mov
xchg
and
push
js
pop
test
imul
loope
add
push
sar
dec
cmp
cli
scas
sbb
repnz
rorl
cmp
add
dec
or
cmp
adc
dec
inc
cmpsb
jno
movsb
add
sbb
or
dec
and
ret
inc
and
popa
daa
xorl
test
jg
bound
inc
and
xor
inc
movsb
mov
arpl
mov
bound
adc
adc
cmp
popa
push
add
pop
ss
sbb
and
inc
push
add
rorb
stos
jb
xor
ret
clc
add
inc
add
jle
sbb
dec
test
add
push
orb
mov
pop
sbb
inc
roll
inc
pop
jno
aam
dec
inc
repnz
shrb
pop
or
xchg
adc
add
js
loopne
mov
aam
mov
pusha
inc
ret
jo
mov
sbb
dec
adc
xorb
sub
fcompl
mov
aaa
and
js
rol
fdivp
dec
imul
gs
or
ret
fs
dec
loop
or
nop
cli
xor
pop
jno
mov
add
sub
das
jb
push
push
rorb
cld
ja
arpl
jo
adc
push
lods
sbb
stos
in
push
pusha
js,pt
dec
mov
add
and
outsl
dec
jns
push
sbb
push
inc
or
inc
adc
es
jp
fdivs
add
and
std
sbb
repnz
or
outsl
js
aas
out
push
mov
add
adc
mov
mov
jnp
add
inc
cmpsl
add
mov
fwait
or
add
fimull
in
fstpt
and
push
ds
lahf
inc
xchg
dec
jl,pt
sti
fldl
jge
scas
mov
xchg
out
or
sub
jo
cli
push
jo
decl
pusha
or
mov
subl
rolb
js
sbb
negb
and
sub
in
or
ret
pop
push
cmc
or
and
les
or
mov
xchg
or
jae
or
sub
imul
adc
insb
inc
popa
jne
rcr
popa
dec
rclb
mov
outsl
das
pop
mov
data16
data16
movsl
add
mov
and
push
and
push
add
imul
mov
dec
in
push
pop
adc
and
dec
pusha
xchg
into
and
fbld
push
or
inc
mov
shrl
sbb
push
rcr
sub
push
dec
mov
mov
insl
xchg
jo
push
jbe
mov
dec
push
push
inc
mov
call
clc
fistps
pop
sub
inc
jecxz
loopne
push
cmp
rclb
inc
loopne
add
mov
mov
shr
repz
fs
and
add
dec
or
jle
add
jmp
shlb
ss
mov
pusha
sub
add
sbb
push
jg
pop
sbb
adc
outsb
pusha
and
or
fwait
xchg
cmp
add
cmp
add
and
call
or
push
call
pusha
dec
mov
mov
sub
push
sub
pop
push
dec
push
add
adc
mov
mov
mov
jecxz
xlat
outsl
mov
or
xor
mov
mov
or
pushf
add
cmp
jg
jmp
mov
or
push
outsb
not
mov
aaa
les
mov
jge
add
cmp
pop
fwait
add
mov
mov
cs
pusha
loop
sar
add
xor
lahf
sbb
xchg
ljmp
aas
pop
loop
pusha
dec
jo
leave
mov
mov
popa
lcall
pushf
movsl
dec
jne
sbb
bound
mov
mov
incl
add
or
movsb
mov
xor
mov
mov
ret
in
in
fs
xchg
rcl
add
shrl
out
gs
in
out
xchg
push
cmp
sub
xor
push
ffreep
les
cwtl
add
lds
add
inc
stos
mov
mov
jge
rolb
add
jp
incl
jle
fsincos
inc
mov
mov
roll
lahf
sub
jmp
das
push
mov
mov
subb
push
push
add
ja
in
in
add
sub
orl
push
je
fsubrs
jp
sbb
outsl
lods
mov
xor
aad
jecxz
or
cmp
js
xchg
icebp
shll
das
add
pop
test
out
xchg
pop
pusha
xchg
pop
cmpsb
lret
xor
sbb
loope
pop
lds
test
loop
fucomp
fisubs
push
in
mov
xor
insb
jnp
insl
in
mov
jmp
fistpll
sbb
sahf
mov
lcall
xchg
out
mov
out
lock
out
add
pop
or
jne
loope
xchg
jae
push
sub
fwait
jg
test
mov
xor
pop
test
sbb
pusha
add
or
pop
mov
add
ret
xchg
inc
pop
mov
rclb
and
sbb
pop
inc
add
bound
clc
mov
jmp
negl
cld
test
cmp
and
movsb
bound
xchg
mov
sbb
push
ljmp
addb
imul
pop
clc
divb
test
ret
frstor
fs
xor
adc
jae
mov
incb
cld
out
dec
add
loopne
loop
fcmovne
out
mov
std
test
ja
sbb
sbb
cmp
inc
inc
out
lcall
es
jl
mov
xor
xchg
sub
sub
mov
and
and
clc
arpl
xchg
add
pop
add
shrl
sub
inc
sti
add
or
adc
push
push
fcompl
shrb
add
add
out
cmp
jbe
add
cmp
and
fcmovnu
add
cmp
add
xchg
test
adc
pop
sahf
and
push
movsl
push
cld
sbb
cltd
fistpl
xchg
pop
push
lcall
cmpsb
stc
fistpl
and
stos
mov
vmovdqu
testb
stos
cmp
stos
shll
ds
xor
ss
imul
lods
push
xlat
dec
sti
or
fadds
jge
push
daa
dec
out
adc
outsl
adc
and
testl
or
pusha
sbb
sbb
add
pusha
pusha
adc
js
mov
inc
rcrb
xchg
ljmp
dec
pop
testw
nop
sub
push
dec
mov
xor
cmp
mov
inc
popf
test
add
aas
movsb
fidivl
jle
sbb
jl
pop
mov
mov
popl
and
push
lods
push
mov
mov
push
xchg
push
pushf
push
in
call
in
push
hlt
push
cld
push
les
int3
push
aam
fcoml
and
sub
xor
cmp
jbe
pop
adc
sbb
call
fs
insb
pop
je
jl
inc
pop
dec
pop
push
pop
pop
pop
movsb
mov
pop
mov
jmp
call
in
pop
hlt
pop
cld
sbb
pop
aam
fcoml
and
ljmp
sub
xor
cmp
add
sbb
sbb
sbb
sbb
sbb
lcall
pop
sbb
mov
sbb
in
sbb
sbb
sbb
sbb
sbb
lock
lcall
fcompl
and
sub
xor
cmp
add
or
adc
sbb
sbb
sbb
imul
dec
loope
fidivs
movsb
sbb
sbb
pushf
sbb
sbb
sbb
push
sbb
sbb
sbb
sub
sub
lcall
xor
cmp
add
or
adc
sbb
fs
jg
sub
jl
inc
pushf
push
sbb
sbb
mov
mov
sbb
in
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sub
cli
lcall
xor
cmp
add
or
adc
sbb
sbb
sbb
call
xor
pop
sbb
mov
sbb
pushf
sbb
sbb
sbb
cli
sbb
sbb
sbb
sbb
sbb
sub
xor
cmp
jnp
sub
add
sbb
sbb
mov
inc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
xchg
sbb
sbb
sbb
in
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
cmp
add
or
adc
sbb
fs
insb
sbb
dec
sbb
movsb
sbb
lods
sbb
test
sbb
hlt
sbb
dec
sbb
and
sub
xor
cmp
add
or
adc
sbb
fs
insb
push
je
jl
inc
push
decl
push
pop
push
movsb
push
lods
push
mov
mov
push
xchg
push
pushf
push
in
in
push
hlt
push
cld
push
les
cli
add
aam
fcompl
and
sub
xor
cmp
pop
or
adc
sbb
ljmp
pop
insb
pop
je
jl
inc
pop
dec
pop
push
pop
pop
pop
pushf
pop
loopne
call
pop
cld
pop
enter
loopne
aam
cmpsb
loope
test
push
sub
fwait
in
out
insl
or
call
js
std
fcoms
adc
push
xor
cmp
lods
fwait
ret
xchg
incb
sbb
add
mov
adc
fists
adc
adc
adc
fwait
ret
lcall
cmp
jge
pop
sbb
push
sbb
xchg
jmp
jnp
mov
js
insl
jbe
ficompl
aaa
outsb
adc
adc
sbb
sbb
outsl
jle
push
jo
outsb
or
adc
cli
mov
adc
sbb
sbb
mov
out
in
test
push
sbb
mov
addr16
popa
mov
gs
push
jp
pop
jb
cmpsb
cmpsb
lock
aas
cmp
ficoml
ficoms
and
adc
adc
adc
out
ss
pop
pop
adc
ljmp
inc
sbb
bound
adc
adc
adc
adc
adc
adc
adc
adc
dec
loope
inc
adc
fbld
aaa
fwait
ret
mov
mov
fwait
ret
adc
adc
adc
adc
adc
cli
loop
sub
inc
push
inc
cld
aas
adc
adc
adc
adc
adc
adc
adc
adc
cs
cmp
cmp
cmp
adc
push
clc
jmp
adc
repnz
adc
lret
jbe
ret
das
or
push
cmp
ds
cld
fcmovnu
or
or
push
push
adc
add
push
push
push
bound
pushw
ss
mov
in
and
xchg
push
pop
jg
push
ljmp
ret
push
cmpsb
loopne
or
divl
test
sbb
add
sbb
adc
push
adc
pop
adc
adc
xor
dec
paddd
mov
loop
push
jne
mov
mov
incl
mov
sbb
sbb
jb
fistl
add
fsubl
sbb
sbb
sbb
sbb
test
aaa
sbb
sbb
jo
pop
sbb
push
pop
insl
or
lcall
imul
inc
sbb
sbb
sbb
sbb
sbb
sbb
test
sbb
lods
in
jmp
hlt
call
int
xor
cmp
sbb
imul
mov
push
or
mov
jl
jecxz
nop
loopne
ljmp
pop
stc
pop
lds
nop
lods
add
adc
adc
fwait
sub
adc
mov
mov
pop
adc
adc
push
ficoml
call
sahf
adc
adc
adc
adc
adc
adc
adc
stos
dec
ror
or
outsb
insl
lret
fistl
lret
insl
enter
loopne
adc
pop
pop
int
das
insb
stos
mov
push
hlt
in
into
sbb
jmp
enter
adc
adc
adc
adc
adc
adc
pop
jne
in
adc
je
sub
push
cmp
cmpsb
ja
cmp
mov
jbe
pop
add
inc
sbb
xchg
mov
icebp
sbb
aaa
add
das
mov
sbb
sbb
sbb
lcall
lcall
sbb
sbb
sbb
sbb
sbb
jb
sbb
sbb
sbb
sbb
decl
xchg
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sub
cld
lcall
cmp
sbb
adc
xchg
into
popa
sbb
insl
sbb
jns
jge
inc
sbb
out
dec
sbb
pop
sbb
movsl
sbb
sbb
loope
jmp
xchg
push
into
push
jbe
jge
inc
pop
dec
pop
movsb
pop
lea
xchg
into
lock
jg
adc
adc
pusha
adc
mov
mov
adc
adc
lcall
xor
add
mov
dec
dec
adc
jo
mov
pop
cmc
mov
mov
pop
mov
lock
push
ficompl
stos
sbb
loope
rcrl
daa
sbb
lcall
sbb
sbb
jle
pop
cld
sbb
sbb
sbb
push
pop
sbb
push
repnz
or
movsb
mov
inc
nop
or
adc
jl
inc
mov
push
adc
movsl
adc
sar
push
sbb
inc
adc
adc
adc
adc
dec
sbb
jb
ss
adc
lock
push
test
stc
push
into
push
fsts
jle
mov
adcb
pop
cltd
outsb
ret
mov
addr16
sbb
sbb
or
incl
xlat
sbb
xor
xchg
sbb
sbb
sbb
lcall
jp
test
add
sbb
pop
ficoms
lret
outsl
pop
dec
pop
push
rcrb
lcall
lock
adc
pop
out
adc
adc
adc
adc
sbb
std
jmp
adc
adc
adc
adc
mov
cmp
cmp
inc
jmp
mov
mov
bound
dec
sub
pushf
adc
rorb
and
push
or
jns
jg
dec
push
push
cld
lcall
push
pop
push
movsl
push
stos
xchg
push
icebp
push
push
ficoml
and
jg
aad
rclb
pop
pushf
popa
pop
inc
pop
dec
pop
mov
cmp
call
sub
sbb
sbb
mov
jbe
mov
push
sbb
jge
inc
push
cmpsl
sbb
scas
xchg
aad
sub
cmp
adc
sbb
and
lcall
loope
xor
mov
dec
pop
pop
sti
pop
into
pop
inc
aaa
fcomps
dec
and
add
adc
addr16
xchg
adc
adc
inc
lahf
or
out
movsl
adc
or
adc
mov
and
push
add
adc
adc
decl
adc
adc
adc
adc
adc
adc
ljmp
stos
jp
adc
adc
adc
adc
adc
sub
das
adc
adc
jg
imul
adc
adc
adc
adc
cs
add
adc
adc
adc
adc
adc
out
adc
call
sub
mov
mov
adc
adc
jge
inc
test
call
scas
adc
rclb
and
lock
add
add
icebp
or
push
mov
adcb
push
lcall
scas
sub
lcall
repz
pop
jg
sti
pop
sub
cs
nop/reserved
push
sbb
stos
xchg
sbb
idiv
sbb
repnz
mov
push
sbb
subb
mov
sbb
sbb
out
or
mov
jmp
negb
sub
mov
or
mov
push
aas
pop
push
pop
fucompp
lret
pop
rcrl
xor
out
and
sub
adc
adc
fcoms
ficomps
adc
adc
cmpsl
adc
shl
mov
xchg
js
inc
or
jmp
adc
adc
adc
adc
push
adc
popf
adc
adc
sbb
out
inc
faddl
push
adc
data16
inc
adc
adc
icebp
inc
sub
adc
jp
xchg
adc
cld
aas
mov
pop
outsb
fwait
pop
pop
pop
and
sarb
insb
aaa
push
sbb
inc
sbb
push
sbb
pop
sbbl
adcl
sbb
mov
add
adc
sbb
loop
cld
negb
sbb
divb
sbb
lock
push
dec
jle
sbb
push
push
push
adc
inc
cld
push
mov
push
test
popf
cli
shll
or
iret
and
lods
add
sbb
arpl
jne
mov
mov
mov
dec
adc
mov
pop
pop
pop
xchg
pop
ret
sbb
outsl
adc
pop
cli
pop
sbb
sbbl
inc
clc
sbb
pop
sbb
inc
js
sbb
jne
inc
sbb
stos
sbb
mov
sbb
sbb
lcall
adc
ficoms
in
cld
dec
sbb
xorb
pushf
mov
adc
scas
mov
enter
and
xor
stos
ja
push
gs
insb
or
push
push
pop
lea
push
out
nop
js
jo
inc
xchg
stos
pop
mov
int
push
notl
dec
sbb
fcomps
add
pop
sbb
fmull
sbb
rorl
sbb
sbb
mov
sbb
ss
sbb
fmulp
sbb
sbb
sbb
sbb
sbb
push
lret
orl
jbe
mov
sbb
sahf
xor
sbb
lock
lcall
sub
adc
pop
push
call
pop
loope
fcoms
mov
pop
adc
adc
ljmp
dec
adc
adc
sbb
jo
adc
push
scas
push
mov
sbb
adc
adc
sarb
adc
loope
pop
adc
push
js
pop
pop
pop
inc
pop
ljmp
std
incl
sbb
mov
sub
sbb
clc
mov
mov
into
ss
lret
mov
lock
pop
inc
pop
mov
jo
pop
and
adc
mov
dec
xor
adc
ljmp
xor
push
mov
or
scas
cli
lea
notb
rcll
push
pop
pop
pop
jecxz
ficoms
daa
das
ret
sbb
sbb
or
cmpl
sbb
dec
sbb
pop
sbb
lret
cli
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pop
aaa
decb
push
jmp
sbb
lcall
addr16
mov
clc
push
cmp
inc
jl
push
out
sar
xor
adc
adc
adc
mov
adc
adc
adc
jp
sub
jne
add
adc
dec
sbb
jb
add
es
sbb
sbb
jl
xor
mov
cli
scas
clc
mov
dec
insb
push
adc
adc
enter
mov
adc
adc
adc
jmp
or
adc
sbb
scas
mov
inc
sbb
sbb
sbb
mov
push
push
cmp
and
mov
dec
adc
out
adc
xor
push
adc
jle
sbb
clc
sbb
jne
ret
bound
sbb
test
xchg
sbbb
push
sbb
xchg
sbb
inc
popf
clc
mov
add
pop
sbb
test
push
adc
stos
pop
mov
jo
jle
in
or
adc
pop
cld
ljmp
adc
adc
adc
jno
les
cli
scas
pop
mov
sbb
sbb
sbb
sbb
sub
lods
mov
sbb
mov
push
iret
push
add
iret
clc
pop
loopne
lcall
int
mov
adc
adc
sbb
mov
scas
rolb
es
test
push
dec
jbe
push
sbbb
cli
xchg
mov
scas
pop
mov
pop
rclb
icebp
cmc
xor
nop
and
cmp
ja
cmp
out
notl
fstl
add
adc
rcr
adc
pop
cmp
call
pop
adc
adc
mov
notl
xor
rclb
adc
bound
push
xchg
xor
bound
mov
mov
xchg
test
cli
bound
mov
sub
mov
push
mov
push
jecxz
add
lods
mov
push
pop
add
dec
pop
pop
loopne
cs
xchg
adc
mov
sbb
outsl
sbb
inc
adc
sbb
rcrl
adc
lods
dec
mov
sbb
sbb
sbb
rcl
fdivl
sbb
sbb
sbb
adc
xchg
in
dec
stos
sbb
adc
sbb
sbb
sbb
add
orb
mov
sbb
adc
and
jo
push
push
xchg
loope
sbb
xchg
negb
mov
arpl
into
loope
and
push
aaa
adc
jl
lods
adc
out
sbb
adc
sub
adc
cmp
out
adc
or
adc
push
push
lods
or
lods
dec
mov
adc
cli
das
rcr
adc
adc
jp
inc
adc
cmp
add
rorb
add
push
push
aad
filds
push
notl
sub
push
fsubs
mov
popf
aam
pop
sbb
pop
sub
ficoml
push
lods
ja
subb
mov
mov
push
mov
js
pop
xchg
ds
mov
pop
cmc
pop
or
pop
ror
test
push
les
orb
aaa
jl
adc
adc
test
add
adc
adc
adc
mov
or
stos
adc
loope
jb
adc
adc
stc
adc
mov
rclb
aaa
adc
adcl
xchg
xlat
movsb
daa
push
adcb
jnp
aaa
inc
rolb
xchg
push
mov
lcall
push
aas
add
or
pop
jle
inc
add
pop
ljmp
lcall
pop
sbb
sbb
movsl
aad
sbb
test
xchg
sbb
sbb
sbb
add
mov
mov
sbb
or
inc
sbb
fistpl
xor
js
jle
dec
sbb
add
int
stos
clc
fbld
add
sbb
sbb
sbb
test
dec
jp
sbb
adc
pop
pop
popa
xchg
sar
sarb
add
jmp
or
dec
in
popa
add
fldt
inc
adc
adc
mov
adc
adc
adc
jnp
imul
jl
pop
arpl
mov
mov
xchg
data16
mov
mov
push
mov
mov
shr
ret
cs
push
fadds
jg
or
push
push
push
mov
jns
pop
repz
into
or
push
push
rclb
shlb
rcll
es
jo
mov
add
mov
xchg
lock
cld
out
ret
mov
push
aaa
xchg
push
adc
hlt
hlt
and
notb
fisttps
pop
cmc
pop
and
sbb
jle
incb
dec
shrb
cld
inc
inc
aad
xor
cld
push
or
add
sbb
dec
inc
rolb
out
mov
negb
xor
inc
jb
sbb
pop
lock
adc
sbb
sbb
sbb
stos
sbb
adc
push
adc
cmp
inc
subl
sbb
cli
aaa
jg
sbb
push
push
out
push
cs
pop
inc
jl
inc
out
add
pop
aam
test
pusha
shlb
inc
incl
call
test
add
adc
adc
adc
je
xor
fcoms
sub
cmp
sub
pop
ret
je
in
and
sbb
dec
cld
and
push
pop
mov
adcb
fcompl
adc
inc
adc
add
adc
push
xchg
pop
rclb
aad
ficoms
and
lea
xor
or
adc
cmpb
adc
adc
inc
xchg
add
adc
in
scas
clc
in
adc
adc
or
adc
adc
adc
adc
adc
adc
adc
push
rcr
fsts
mov
inc
mov
inc
xchg
pop
cmp
pusha
add
fsubrl
or
push
sub
ljmp
jbe
out
adc
cld
adc
add
je
daa
add
add
inc
sbb
sbb
and
sbb
dec
js
adc
push
ds
jg
pusha
sbb
jb
inc
push
dec
adc
push
lods
push
xchg
push
ljmp
push
pop
outsb
pop
pop
out
pop
lcall
rcrl
fmulp
and
sub
push
dec
jg
adc
pusha
inc
adc
mov
mov
adc
adc
mov
jl
adc
adc
and
adc
pop
adc
jb
jbe
jl
inc
adc
insb
enter
js
mov
bound
imul
adc
adc
add
xchg
subb
xchg
push
cld
loopne
xor
sbb
and
jge,pn
sbb
sbb
stos
add
sbb
call
test
sbb
adc
jl
mov
adc
push
loopne
jbe
mov
pusha
pop
add
mov
mov
pop
bound
inc
pop
or
add
lcall
adc
inc
ljmp
sbb
mov
pop
mov
mov
and
fwait
bound
mov
lcall
pusha
or
add
loopne
call
adc
in
xchg
jb
pop
into
adc
ja
sub
add
decl
cmp
push
jne
rclb
push
sub
and
pop
sbb
cs
fs
outsb
push
incl
sbb
xchg
loopne
add
sbb
sbb
gs
imul
cld
inc
sub
sbb
mov
pop
adc
push
ficoms
into
jne
inc
mov
incl
fstl
mov
adc
or
jae
stos
icebp
dec
xor
pop
adc
inc
add
adc
mov
pusha
xchg
inc
std
jg
push
push
add
mov
xchg
adc
adc
mov
test
mov
adc
arpl
mov
lock
stos
push
add
add
in
push
jle
movl
and
sbb
jb
and
sbb
mov
rorb
adc
sbb
mov
push
mov
enter
mov
cmc
or
push
dec
adc
adc
iret
enter
xor
mov
mov
adc
stos
add
es
pop
lock
pop
cwtl
mov
adc
push
adc
sub
pusha
pushf
xor
adc
adc
adc
lret
dec
and
pusha
mov
pop
aam
push
test
pop
add
push
lcall
rcr
sbb
jnp
sbb
mov
sbb
sbb
mov
sbb
xorb
jns
inc
sbb
mov
push
inc
pop
sbb
sbb
push
sbb
decl
and
jl
sbb
xchg
sbb
and
adc
and
sbb
outsb
rcrl
mov
push
add
sbb
add
pop
xor
mov
fstl
pop
sbb
sbb
scas
outsl
aam
push
sbb
inc
add
lock
int3
jmp
jo
mov
mov
ret
or
popf
mov
loop
out
icebp
sub
sbb
stos
out
add
es
pop
fldenv
and
outsl
add
xor
aaa
cmp
add
or
adc
adc
add
call
or
jge
mov
push
dec
mov
fsubl
cmp
adc
sub
push
cwtl
adc
adc
push
lcall
adc
movsb
add
push
fisttpl
pop
xor
les
stos
std
pop
aas
pop
add
pop
pop
pop
mov
jg
xchg
mov
shlb
nop
jp
sbb
xchg
insl
sarb
adcl
xor
mov
adc
lret
sbb
mov
pop
mov
rclb
mov
imul
and
addb
js
pushl
jbe
pop
adc
lods
adc
and
adc
adc
jmp
adc
das
leave
nop
mov
stos
ss
push
xor
aaa
mov
or
mov
sahf
or
adc
repnz
mov
xor
aad
outsl
mov
cli
adcl
pop
nop
add
test
dec
dec
or
mov
sbb
or
sub
sbb
sbb
ret
sbb
adc
hlt
lcall
mov
mov
and
inc
push
mov
pop
mov
ljmp
movsb
mov
sbb
sbb
adc
adc
jg
mov
push
inc
push
in
cmc
push
aas
ljmp
nop
int
loop
pop
sub
dec
repnz
sbb
nop
adc
sbb
push
jo
jbe
jl
hlt
push
dec
mov
pop
push
movsb
pop
stos
push
mov
pop
sbbl
push
pop
out
mov
outsb
add
push
sti
cmp
pushf
fstpl
lock
sub
xor
pop
fwait
adc
pop
lcall
sub
xor
int3
xor
xorl
lock
adc
sbb
lods
loopne
scas
pop
dec
adc
adc
lock
add
push
int3
adc
adc
push
imulb
adc
xor
adc
push
mov
add
adc
xor
adc
xchg
adc
adc
les
aam
and
xor
jo
adc
dec
je
push
inc
inc
aad
call
sbb
ds
aam
enter
xor
lods
fs
jg
rorb
push
sbb
adc
sbb
adc
mov
push
add
xchg
fs
je
push
push
movsb
ljmp
jbe
add
add
int3
push
sarb
aam
ja
cwtl
jne
idiv
pop
and
pop
sub
sub
xchg
xor
cmp
cmp
and
or
or
sub
pop
jbe
pusha
xor
movsb
js
jl
inc
pop
inc
mov
fwait
aam
push
push
pop
loopne
pop
rorb
add
fcomps
push
add
pop
add
and
push
inc
cmpsb
paddusb
or
xchg
mov
add
scas
cld
int3
call
pop
mov
fbld
fdivrl
mov
sub
mov
lcall
add
adc
pop
add
xchg
mov
jle
inc
rcrb
adc
lea
or
pop
out
xchg
push
outsb
ret
xchg
xlat
call
inc
mov
add
decl
xor
mov
stc
mov
prefetch
je
enter
movsb
add
xchg
out
shlb
shll
shr
push
andb
lret
adc
jg
mov
insb
enter
jmp
mov
inc
pop
xchg
push
jg
or
push
jmp
mov
xlat
movsb
ljmp
cmp
push
add
fs
or
xor
bound
pusha
sub
aam
mov
mov
frstor
xchg
jp
inc
daa
push
jns
jge
les
ficoms
bound
dec
sub
int
sarl
in
add
cmpsl
ret
clc
pop
add
test
fwait
orl
incl
lcall
cmp
jb
mov
push
add
cld
pop
mov
mov
out
mov
clc
in
pop
jg
sub
lods
push
leave
lcall
cs
jl
mov
addr16
or
pop
inc
add
decl
cld
call
hlt
into
xchg
cmpb
mov
add
cmpsb
dec
outsl
loopne
inc
loop
cld
or
enter
cmp
jle
lock
add
out
icebp
jge
jno
sbb
xor
mov
ljmp
cmpb
fidivl
pop
shll
xor
mov
fisubrl
iret
popf
mov
mov
cmp
pcmpgtd
jle
push
icebp
mov
push
add
aas
sub
add
or
mov
xchg
outsl
and
dec
xchg
inc
std
shrl
xorl
dec
cmp
add
sub
fbld
sub
scas
mov
push
mov
push
std
xor
movsb
repnz
inc
cwtl
cmp
add
push
adc
cmp
adc
lock
dec
int3
adc
push
jp
jp
jg
das
cmp
adc
fisubrs
daa
add
mov
push
sub
mov
push
pop
cwtl
add
sub
xlat
test
push
std
jg
cmpl
jl
sub
cmp
mov
cmpsb
pop
xchg
dec
mov
push
jo
rorl
add
insl
or
cmp
cmpb
inc
jb
popa
je
inc
imul
gs
je
jb
jne
dec
outsb
outsw
push
and
fs
imul
jb
jns
js
push
gs
imul
gs
sub
push
popa
imul
test
push
jae
mov
add
movsl
mov
bound
insl
gs
push
cmc
fnstcw
imul
cmpsb
pop
push
shr
xchg
pop
out
dec
mov
sbb
lahf
sbb
lods
mov
push
jb
dec
popf
adc
adc
aam
pop
or
mov
jo
mov
push
mov
jo
jb
jo
mov
stos
push
pop
xor
xor
sbb
sub
adc
mov
rep
mov
inc
test
rol
inc
ljmp
sbb
rcrl
daa
mov
les
repnz
or
push
mov
mov
mov
leave
jmp
lods
and
mov
xchg
push
insl
jno
dec
add
mov
iret
shrl
pop
lods
fsubrs
add
adc
mov
sbb
fs
jg
adc
mov
insb
sbb
clc
add
into
dec
add
fdivrl
in
ffreep
cltd
loop
insl
push
jne
jbe
pop
jne
jns
ret
fisubrs
outsb
outsb
pop
imul
adcl
xchg
push
mov
xor
inc
push
push
dec
xor
push
cmp
mov
add
pop
xor
imul
bound
push
push
roll
pop
xor
outsl
imul
jb
sbb
subl
outsl
lret
inc
es
ja
pop
sbb
jb
inc
push
pusha
in
pop
push
sub
jbe
repz
adc
mov
sbb
xor
dec
fs
fimull
or
mov
inc
fs
fiadds
dec
arpl
gs
push
movsb
sub
add
insb
mov
adc
incb
jo
popa
loope
mov
in
push
hlt
sub
mov
mov
es
push
inc
cmp
or
jae
push
jl
sbb
sub
imul
jne
arpl
cmp
imul
dec
add
jne
push
leave
sarl
outsl
icebp
lret
mov
add
mov
mov
mov
sub
mov
stos
jg
push
lods
sub
bound
ficoml
ljmp
mov
mov
sbb
addb
inc
popa
aaa
add
xlat
popa
xlat
inc
or
and
add
cmp
adc
sti
add
push
shrl
mov
mov
mov
add
mov
adc
int
push
push
lods
sbb
vmovsd
adc
xchg
add
cmp
pop
adc
shll
scas
or
jnp
inc
pop
inc
mov
xchg
leave
add
cmp
xor
jno
xlat
add
inc
leave
jo
fdivs
dec
xchg
popa
sbb
sub
and
scas
jle
mov
mov
bound
outsl
ja
jb
pop
pusha
outsb
test
jae
cli
ss
lock
movsb
sub
jae
ljmp
push
outsl
in
xchg
je
arpl
movsl
push
hlt
add
push
xor
in
inc
jb
jae
pop
adc
daa
rol
jae
lea
inc
jo
loope
pop
addr16
sbb
insb
les
outsl
push
push
add
add
pop
inc
add
xchg
xor
insb
xor
sub
mov
inc
inc
rorl
lret
ret
and
sbb
aad
and
out
ds
lcall
insl
mov
insl
jmp
or
fldcw
mov
mov
lods
push
adc
aad
inc
fdivr
xchg
shll
push
arpl
lock
adc
cmp
inc
and
xorb
lods
sub
test
insl
sbb
mov
or
adc
add
lods
pushl
movsl
ss
stos
pop
push
jmp
icebp
lds
ja
xchg
stos
push
shrl
les
xor
arpl
cmp
jg
sbb
rorl
pop
add
mov
push
pop
fs
mov
stc
mull
es
popl
pop
or
mov
xchg
or
and
pop
pop
sti
pushf
sbb
add
lea
rcrb
lcall
mov
adc
imul
push
add
nop
xchg
adc
fs
popa
imul
or
add
ja
in
shrb
push
xchg
rcrb
sahf
out
cltd
jb
shlb
cmpsb
pmaxsw
dec
inc
jae
arpl
sbb
mov
jo
add
dec
xchg
test
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
or
add
and
add
pusha
add
addb
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
rolb
add
add
add
test
add
add
add
add
add
add
add
add
add
cwtl
add
add
mov
add
or
add
add
add
add
add
add
add
add
rolb
add
mov
add
in
add
add
add
add
inc
add
push
add
and
mov
in
inc
pop
inc
out
inc
push
aad
pop
iret
loope
dec
or
push
mov
pop
cmp
insl
ficoml
aad
cmp
cmp
cmpsl
cmp
lcall
fidivrs
push
cld
xchg
jne
xchg
mov
lret
scas
std
shrb
movb
leave
adc
je
and
mov
pop
fildl
inc
idivb
call
cmpsb
cli
add
gs
sbb
xchg
jecxz
pop
pop
in
push
push
sbb
or
jne
imul
lock
and
filds
mov
insl
aaa
lcall
mov
or
and
jmp
in
icebp
and
inc
outsb
dec
xor
rcrb
lret
aam
add
push
es
jle
sbb
push
aam
and
shrl
adc
pop
in
aad
xchg
outsb
mov
imul
dec
and
mov
mov
inc
sub
sub
xor
ret
jbe
lcall
in
push
fsubr
mov
scas
out
mov
fcomp
cmp
inc
xchg
add
mov
jge
jg
and
adc
into
jns
mov
push
pop
lods
jl
add
xchg
lea
xlat
xor
xchg
cld
adc
cmp
jmp
iret
lods
xor
mov
jg
fistpl
and
fdivrl
inc
sbb
stc
sti
xchg
add
dec
pop
mov
cmp
outsb
mov
cmp
cmpsb
gs
mov
cmp
gs
in
push
inc
mov
mov
push
dec
aad
imul
dec
lods
jge
mov
dec
push
outsl
mull
mov
test
xchg
xor
shll
sbb
jae
data16
hlt
fcompl
push
push
fidivl
out
int3
es
scas
mov
popa
mov
shll
jno
call
fstp
sarl
adc
ss
dec
test
pop
std
pop
clc
cmp
das
daa
or
add
dec
aaa
dec
sub
xchg
push
inc
out
inc
push
dec
push
pop
orl
pop
and
out
cmp
mov
test
mov
psubw
testb
mov
sar
jle
stos
xlat
jg
jg
sub
mov
add
xor
push
and
lcall
cmpsl
ret
sti
cmc
inc
fistpl
repnz
sub
jecxz
not
mov
ds
push
popa
cld
lret
inc
cmp
and
or
dec
je
shl
mov
lods
rcr
jge
add
nop
lahf
outsl
fistpl
push
xor
sbb
inc
xchg
and
mov
stc
cltd
int
and
cmp
lods
int3
stos
ljmp
pop
and
or
in
fstpt
testl
shrb
fildll
lock
outsb
mov
outsl
imul
dec
adc
inc
test
jo
daa
inc
xor
pop
dec
mov
cs
xor
mov
add
jg
aas
adc
dec
out
fisttpl
push
push
aaa
sbb
nop
sbb
divb
mov
pop
cmp
mov
mov
sub
cmpsb
adc
mov
mov
sub
pop
aad
mov
or
push
mov
loopne
push
cmpsl
mov
inc
or
jb
hlt
push
inc
add
scas
jle
sbb
add
or
push
adc
icebp
mov
add
fsubp
es
jne
sbb
or
sub
cmc
sbb
aam
shll
sahf
add
push
add
dec
jo
sub
loop
scas
xchg
mov
out
out
cmp
jae
add
push
cmp
fistps
mov
and
out
dec
pop
cwtl
pop
pusha
mov
aam
test
adc
neg
test
mov
insl
adcl
mov
sti
sbb
push
or
les
into
dec
pop
adc
cmp
dec
clc
cmp
call
addr16
xchg
ljmp
pop
movsl
sbb
mov
inc
inc
ja
inc
jns
jl
andb
mov
scas
addb
mov
ss
out
mov
mulb
cmc
push
sub
adc
lock
jae
xor
cmp
fisubs
adc
es
xchg
mov
xchg
rolb
loope
dec
insl
dec
in
sti
movsl
xor
ror
outsl
in
aad
xorl
lahf
pop
ret
cmc
test
insb
cld
mov
das
rclb
sub
pop
mov
push
add
gs
test
inc
cltd
ds
lret
mov
aas
or
in
shlb
or
in
sub
jmp
lock
cmp
test
jo
sub
jmp
add
push
push
mov
mov
jle
add
pop
sbb
cmp
push
xchg
mov
nop
sub
mov
sub
push
mov
test
cmpsb
jle
je
push
fmull
jo
cwtl
loope
loop
xchg
movsb
leave
lods
mov
xor
dec
cmp
pop
cmp
ret
jae
loope
not
repnz
int
cmp
dec
je
sbb
addr16
lods
push
push
adcb
imul
loop
mov
mov
sbb
repnz
leave
sub
jns
test
nop
mov
push
fstl
inc
adc
add
and
jo
sti
bnd
xchg
dec
adc
sbb
outsb
icebp
xor
popf
repz
mov
ret
shll
popf
in
mov
int
mov
mov
fidivrl
test
adc
xor
mov
mov
das
mov
jp
nop
push
leave
sbb
xchg
xchg
enter
mov
fldenv
in
loop
gs
pop
out
in
mov
fadds
adc
pop
and
mov
or
xchg
sub
cmp
pop
bound
in
loopne
push
les
ds
popa
mov
ljmp
test
lods
in
push
sbb
sbb
cmp
hlt
and
mov
aad
pop
cli
movsl
sub
andb
call
jl
hlt
xlat
outsl
out
pop
dec
adc
fdivs
jns
dec
or
lret
aam
dec
xor
ds
mov
and
add
and
js
outsl
cmp
mov
sti
jae
not
jne
sbb
pop
lock
push
xchg
rcll
pusha
aas
mull
pop
inc
int3
mov
cmpsb
ljmp
dec
mov
stos
rcr
ret
mov
xor
mov
xchg
lock
hlt
rcll
outsl
outsb
push
je
jo
mov
pop
pop
jbe
xchg
cmp
or
mov
sub
cmpsl
fwait
pop
sbb
push
xchg
lret
into
fbstp
mov
shlb
or
inc
movsl
pop
loopne
mov
pop
jnp
ss
and
or
fs
pop
mov
mov
sub
lcall
in
cmpsb
in
pop
pop
pop
addr16
lds
and
dec
xor
jnp
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
jo
add
add
xor
xor
xor
cmp
xor
xor
add
add
push
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
push
add
outsb
add
add
je
jb
add
and
push
add
data16
add
jb
add
add
outsb
add
add
add
add
pop
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
and
push
add
add
add
outsb
add
sub
add
arpl
imul
add
and
inc
add
add
outsb
add
add
add
sub
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
je
add
outsb
add
insb
add
popa
add
add
add
push
add
inc
add
add
add
sub
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
imul
add
je
jb
add
and
push
add
data16
add
jb
add
add
outsb
add
add
add
or
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
inc
add
xor
add
add
add
add
add
pop
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
outsb
add
add
and
push
add
add
add
outsb
add
sub
add
arpl
imul
add
and
inc
add
add
outsb
add
add
add
sub
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
pushf
add
mov
pushf
add
pushf
add
mov
pushf
add
pushf
add
mov
add
push
mov
pushf
add
pushf
add
add
mov
adc
pushf
add
pushf
add
pushf
add
mov
pushf
add
add
add
mov
add
aam
pushf
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
push
outsb
jno
insl
cs
insb
add
jns
gs
dec
cs
insb
add
cs
insb
add
arpl
push
cs
insb
add
jae
xor
fs
insb
add
insl
insb
imul
jne
gs
xor
fs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
popa
insl
inc
outsl
outsb
outsb
arpl
inc
gs
inc
