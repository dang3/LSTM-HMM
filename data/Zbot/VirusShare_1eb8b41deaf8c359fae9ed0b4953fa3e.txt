mov
add
leave
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
push
adc
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
arpl
add
add
add
xchg
add
xchg
adc
add
add
add
adc
add
adc
add
add
add
adc
add
adc
add
adc
add
add
add
add
pop
adc
add
add
lea
add
adc
add
sub
add
mov
add
add
add
and
add
inc
adc
add
add
add
pop
sub
inc
dec
sbb
add
add
cmp
push
gs
sub
add
add
add
add
add
add
add
insb
mov
add
add
add
add
xor
sbb
pop
pop
xor
add
add
and
sbbl
sbb
add
gs
addr16
add
add
add
jno
add
add
add
inc
jp
add
jbe
add
add
add
aaa
add
add
and
add
add
add
add
push
data16
add
add
add
add
inc
inc
add
add
cmp
add
add
add
insb
pop
add
add
add
add
add
jne
add
jl
mov
js
add
add
pop
outsl
arpl
add
add
inc
pusha
dec
test
add
mov
xor
add
inc
pusha
jle
inc
adc
xor
adc
js
dec
addb
add
add
ja
add
add
add
add
pop
xor
add
push
mov
and
xor
jns
and
insl
push
push
cmp
popa
addr16
outsb
add
cmp
jg
push
add
jb
addr16
inc
xchg
add
add
add
aaa
push
add
add
xor
js,pt
pop
cmp
imul
sbb
add
add
add
add
ds
and
add
insl
inc
ja
xor
dec
adc
mov
add
add
add
add
dec
add
add
mov
inc
jl
jl
pop
adc
add
jnp
ja
imul
add
push
outsb
js
daa
jae
ja
add
data16
add
add
add
cmp
dec
pop
add
add
add
mov
add
add
add
and
add
sub
mov
pop
add
add
add
push
pop
and
pop
push
add
add
push
insb
cmp
add
push
sbb
add
ja
add
sub
mov
add
inc
data16
add
dec
jg
and
cmp
gs
push
lea
aas
pop
add
add
jns
pop
pop
add
pop
mov
add
add
add
cmp
ja
dec
insl
sbb
add
pop
add
add
add
dec
push
push
add
xor
add
add
add
xchg
jg
mov
add
add
adcl
add
add
add
imul
add
add
cmp
sub
add
add
sub
pop
inc
xchg
test
add
add
add
aaa
insb
add
mov
imul
subl
gs
sbb
sbb
and
add
push
cs
outsl
mov
add
sbb
add
add
xor
pop
add
pop
es
add
add
add
push
das
add
and
test
add
add
add
cmpl
sub
add
jno
adc
add
popl
pop
jg
sbb
sbbl
adcb
movsl
mov
loope
pop
scas
cmp
xlat
adc
xchg
pop
mov
lds
scas
cmovle
xor
aaa
and
mov
pusha
cmp
cmp
mov
ret
mov
push
notb
and
cmc
mov
call
or
insl
fcomi
shrb
jmp
push
pop
add
push
inc
jmp
jo
pop
xchg
aaa
mov
aas
dec
dec
push
and
lods
dec
jns
sub
dec
in
and
xor
xor
movsb
push
pop
pop
stc
mov
enter
jmp
xor
mov
lret
mov
xchg
js
adc
repnz
xchg
fnstenv
out
arpl
mov
shlb
sti
mov
pmaxsw
xchg
loope
pop
inc
cmp
dec
xor
sbb
xchg
aam
add
clc
clc
cmp
sbb
loope
or
jne
xor
adc
cltd
clc
aad
imul
pop
push
nop
cmpsb
dec
push
mov
insb
pop
add
mov
in
push
fstpl
push
repz
pop
sub
push
outsl
or
mov
inc
sbb
repnz
jae
imul
lret
shlb
cmc
arpl
sub
cmpsl
lds
xor
aas
or
lcall
pop
mov
into
jmp
imul
loopne
ljmp
pop
inc
stos
push
ds
outsb
movsl
add
jmp
ljmp
pop
stos
mov
dec
test
repnz
hlt
mov
xchg
and
sarb
dec
mov
dec
mov
dec
xor
fs
or
aaa
iret
fnsave
nop
popa
push
fistpll
leave
inc
xchg
pop
add
pop
int3
pushf
mov
or
or
xor
cmp
enter
outsb
jle
sub
add
cmpl
xchg
cs
xor
adc
fmul
call
std
ja
es
fmull
inc
pop
jae
faddl
into
fucom
inc
arpl
cmp
ret
mov
xchg
fsubrl
inc
mov
cmp
sbb
push
imul
mov
divl
out
mov
xor
pusha
lcall
subb
cli
sub
rorb
cs
sub
sub
fldt
orb
cli
sub
mov
xchg
ljmp
push
in
sub
or
test
loopne
scas
cmpsb
popa
mov
lcall
imull
lods
adc
sub
fsubrl
js
jae
cltd
popf
sbb
pop
mov
in
cmp
adc
push
adc
test
jae
pop
dec
sbb
inc
sub
cld
sub
cmp
ficoml
adc
dec
sbb
imul
adc
lds
mov
loopne
pushf
jmp
pop
movl
push
sbb
lds
test
adc
jno
mov
lcall
call
sub
aas
sub
test
xor
push
xchg
jo
push
lret
ret
imul
js
aaa
hlt
imul
mov
cmp
addl
jmp
mov
js
out
pcmpeqb
push
loopne
push
dec
or
mulb
add
sahf
stos
mov
std
call
mov
mov
jne
sbb
je
sub
pop
adc
dec
iret
jbe
das
popa
cld
stos
test
out
push
aad
popf
movsl
jl
fimull
cmpsb
adc
fstpl
sbb
cmpsb
shlb
mov
repnz
push
push
insb
lcall
rcrl
adc
push
inc
mov
subl
mov
dec
arpl
stos
xchg
stos
add
cmpsl
repz
mov
fmull
jnp
push
cmp
or
ficomps
jg
loop
pop
jb
push
xchg
xlat
aaa
inc
pushl
push
int
mov
inc
xchg
rcl
xlat
data16
test
mov
cld
push
add
ret
dec
fbstp
sbb
testl
jle
stc
dec
stos
frstor
gs
adc
aaa
mov
push
int
repnz
mov
adc
xchg
adc
pusha
mov
or
xor
ds
push
leave
jbe
shl
imul
mov
pop
lods
cmpsb
in
cmpsb
aaa
js
test
lcall
or
mov
sub
mov
or
int
push
lods
jp
movsb
in
ss
sub
push
xorl
push
addr16
jbe
fidivl
adc
mov
push
das
xor
adc
sbb
adc
inc
pop
movsl
inc
mov
lahf
cmp
or
fmuls
adc
out
mov
sbb
mov
ret
outsl
mov
inc
add
and
mov
sbb
shll
enter
shl
mov
shll
inc
cwtl
hlt
adc
push
lods
je
imul
jge
mov
pop
xor
icebp
xor
dec
mov
call
lret
push
mov
push
sbb
jno
mov
dec
xor
and
fisttpll
push
or
cs
or
fisubl
or
mov
pop
jmp
inc
ret
push
or
push
cmp
int
cltd
push
orb
xor
xchg
push
outsl
mov
dec
int3
jbe
enter
repz
sub
call
or
inc
int
loopne
pop
fsubrl
jmp
adc
add
xlat
or
cmp
mov
push
insl
push
andl
rorb
cmp
addr16
or
push
test
in
test
push
je
inc
stc
cli
cmpsb
mov
dec
or
mov
int
xchg
dec
mov
jns
pusha
pop
shlb
aaa
push
sub
jbe
aam
ret
sbb
sub
ds
xchg
outsb
out
stc
mov
mov
add
out
or
stc
xchg
in
fidivrs
stos
xchg
nop
lock
cli
adc
and
arpl
call
pop
aas
xor
dec
in
out
outsb
jecxz
jp
lea
filds
lock
xchg
pop
test
xor
dec
push
mov
sub
pop
push
sti
xor
adc
mov
and
pop
jne
push
xchg
enter
outsl
js
insl
xchg
movsb
cld
test
les
jle
jae
enter
outsl
dec
mov
push
inc
shr
pop
lock
in
mov
mov
and
fsubl
xor
xorl
je
mov
push
sti
adc
mov
out
xchg
adc
hlt
xor
jo
addb
fsubl
or
jns
stos
call
cmp
push
xchg
out
cmp
fistps
jo
popa
dec
dec
sub
mov
outsl
out
lret
add
mov
and
ret
mov
add
pop
push
subb
xor
adc
jo
mov
jno
and
sti
jmp
sub
xchg
idivb
data16
fisttpll
lret
xchg
data16
movsl
mov
test
ss
xorb
xchg
xlat
fists
sub
mov
icebp
sub
or
stc
sbb
dec
cmp
mov
ret
mov
enter
test
clc
fsubrl
cmp
mov
and
cmp
in
mov
cltd
mov
dec
std
inc
jno
pop
dec
lods
pop
lock
lret
adc
les
xchg
lahf
test
jbe
daa
dec
pop
push
rcrb
or
pushf
testl
adcb
ss
pop
mov
pusha
inc
adcl
hlt
cmpsl
fnstsw
mov
call
and
dec
cli
jb
jnp
pop
out
dec
dec
mov
icebp
cmp
sti
dec
stc
ljmp
dec
aam
jae
mov
lret
out
xlat
loopne
inc
fiadds
push
push
loop
adc
push
lods
jno
rcrl
jecxz
cmc
int
ret
inc
fldt
sub
pop
incb
dec
sub
iret
imul
xchg
mov
js
ljmp
dec
and
cmpb
inc
enter
scas
nop
sbb
mov
xchg
pop
jmp
mov
push
outsl
jns
push
lahf
ljmp
sbb
je
mov
mov
jb
ds
jmp
sti
shl
cmpsb
loope
enter
add
clc
sbb
es
into
mov
xor
sub
scas
adc
insb
test
sbb
ds
push
cli
fnstenv
out
sub
or
inc
or
adc
fdivrl
xchg
cmpsl
and
push
xlat
insb
inc
pop
call
shll
xor
inc
sbb
mov
jb
mov
xor
cmc
andl
adc
jmp
popf
jb
xchg
shrl
incb
fwait
icebp
push
sahf
push
call
scas
mov
push
jbe,pn
in
loop
aam
fistl
out
out
in
xchg
and
outsl
inc
or
jle
dec
mov
jle
xchg
pop
repz
inc
gs
rorb
pushf
jo
xchg
sbb
sbb
mov
cli
xchg
xor
xor
aad
mov
fwait
out
sub
adc
pop
scas
jnp
cs
adc
sub
stos
pop
ret
pop
cmp
outsl
sub
adc
movsl
sub
leave
add
leave
scas
and
clc
pop
mov
mov
out
mov
negl
iret
test
jno
movsb
dec
leave
int
jp
outsb
jge
push
ja
add
loopne
cltd
jg
xchg
mov
mov
push
jecxz
xchg
insb
loopne
jg
arpl
leave
sub
mov
xchg
mov
mov
jmp
gs
fisubl
movsb
add
lods
inc
fdivp
xchg
out
mov
mov
cmp
adc
cltd
dec
sub
mov
movsb
dec
push
sub
xchg
xchg
mov
stos
daa
xchg
cld
and
push
sbb
mov
repz
lds
les
lret
inc
and
pop
mov
aaa
xchg
cli
inc
std
in
jo
mov
imul
out
sub
push
movsb
movsl
mov
and
test
push
push
fs
mov
popf
ret
sbbb
adc
faddl
les
and
cli
cmp
mov
popa
jns
rol
les
subb
mov
dec
mov
push
jle
popf
pushf
test
sahf
rcll
pusha
in
or
shlb
adcb
cmpl
pop
test
lcall
adc
jne
lcall
ja
sahf
xchg
inc
or
test
jbe
jns
ds
jno
aam
je
outsb
sbb
or
into
mov
mov
jp
sbb
dec
jno
call
mov
cmpsl
int3
sbb
push
int
repnz
insb
and
std
fadds
mov
push
cmc
push
repz
xchg
cmp
jmp
jo
jbe
imul
jbe,pn
addr16
xchg
popa
push
and
push
ljmp
cwtl
cmp
rorb
mov
jbe
mov
dec
inc
xor
shll
mulb
jno
rcrl
xchg
int3
mov
inc
sbb
outsl
mov
jmp
sahf
sub
mov
lahf
and
adc
cmp
mov
cmp
jo
mov
xchg
or
stos
std
pop
push
jne
push
inc
call
ror
ror
lds
pop
inc
adc
and
adc
std
cld
push
shlb
cmp
jae
mov
lods
idivb
stos
ret
or
hlt
ljmp
cmc
pushf
pop
in
js
or
mov
jae
notb
gs
xor
loopne
test
adc
lret
push
sub
test
fisubl
out
mov
repnz
add
imul
mov
movsb
pop
cmp
inc
adc
dec
add
push
sbb
sbb
or
enter
push
push
sub
add
repnz
jo
mov
fnstcw
neg
sub
insb
dec
or
adc
loope
cmp
lahf
add
inc
sub
leave
lods
inc
into
pop
out
loope
xor
shlw
jo
call
sti
movsl
or
push
xchg
pushf
ss
repz
push
xchg
lahf
into
je
mov
int3
cwtl
fidivrs
push
flds
sub
insb
adc
aam
rorb
fdivs
cmp
mov
sub
clc
scas
or
dec
adc
pusha
test
and
je
mov
push
loopne
mov
jns
xchg
pop
in
mov
jbe
or
adc
adc
mov
ss
inc
xchg
loop
fisttpll
dec
and
imul
imul
daa
adc
mov
push
jge
or
aas
inc
int3
adc
gs
out
mov
adc
dec
stc
xor
scas
imul
and
in
add
testl
addb
pop
cwtl
adc
mov
scas
mov
mov
sub
data16
test
out
or
push
sti
lods
or
sbb
mov
xor
mov
cmp
push
jno
test
mov
sti
sub
xor
es
add
lcall
loope
inc
clc
xchg
or
add
mov
aaa
test
mov
jb
mov
dec
mov
push
add
xor
in
popa
das
dec
push
mov
outsb
inc
or
sub
xchg
mov
lcall
mov
daa
pop
xor
or
mov
mov
and
jp
cmp
nop
das
test
add
ljmp
movsb
lods
mov
jmp
xchg
push
jle
fs
stos
rcrb
sub
adc
ljmp
test
or
inc
xor
jb
leavew
or
cwtl
prefetch
aas
aad
mov
push
cmp
adc
int
mov
push
mov
mov
push
xor
jle
xchg
sbb
jae
adc
inc
push
sub
shlb
dec
dec
and
cld
add
aaa
stos
pop
aam
lahf
clc
sub
out
popa
jl
inc
xor
xor
xchg
or
sbb
pop
aam
and
fnsave
push
xchg
enter
sbb
std
and
cwtl
pop
and
leave
mov
hlt
inc
aad
and
icebp
adc
sbbl
push
loope
push
jnp
push
push
mov
ja
mov
xchg
imul
cmpsb
xor
jae
xor
cs
sbb
movsl
enter
test
repnz
call
jb
xlat
pop
add
roll
push
dec
sbb
dec
mov
lcall
imul
mov
testl
jno
and
int3
mov
lods
cmpsl
and
cmp
movsl
push
movsb
hlt
jnp
cld
mov
sub
inc
dec
add
sub
jge
insb
and
call
cs
pop
push
test
aad
dec
xchg
cld
dec
and
push
push
scas
fidivrs
cltd
lea
xor
pushf
inc
shlb
jg
addr16
add
mov
mov
jl
ss
xorl
jp
into
int
cmpsl
jb
push
sbb
cs
mov
fs
pushl
jecxz
inc
cwtl
jl
jge,pn
add
xor
cmc
movsb
clc
dec
add
repz
xor
and
fmull
mov
lcall
push
xor
jg
test
popf
jle
fcoms
jae
dec
ds
fsubrl
xor
dec
xchg
scas
sub
or
xchg
cltd
ret
test
arpl
pushl
jmp
push
sbb
iret
ret
rcr
hlt
jns
fsubs
jle
jmp
jmp
xor
stos
xor
ja
mov
pop
mov
push
xchg
int
push
fsubs
ret
cltd
in
les
outsb
mov
iret
cmp
shll
inc
dec
repz
sub
dec
xchg
xor
movsb
inc
fidivrl
dec
loope
loope
mov
fistps
sub
xor
les
pop
add
movsb
mov
rolw
outsl
lret
fucom
pop
mov
lret
add
pusha
enter
aad
or
push
mov
outsl
add
mov
js
data16
dec
push
mov
orl
cmpsb
xor
xor
scas
pop
cltd
lods
jno
mov
mov
mov
je
xchg
movsb
or
lret
stc
mov
add
sbb
mov
or
std
sub
outsb
data16
push
push
popf
jbe
sub
push
lds
shl
pop
dec
dec
sbb
pop
cli
add
mov
movl
mov
push
mov
pushf
and
pop
and
mov
adc
jmp
es
add
inc
xor
leave
clc
fstpt
push
cmc
or
jb
div
cmp
inc
sahf
mov
in
mov
inc
mov
pop
mov
ret
mov
mov
sahf
push
jle
andl
jns
lret
or
call
push
rcl
and
xchg
aas
jb
add
dec
inc
movsbl
lahf
adc
dec
pop
lods
cmpsl
shll
lods
pop
mov
push
lock
cld
ret
ret
pop
push
push
rcrb
stc
vmwrite
sarl
dec
mov
cmp
fdivrs
sti
adc
push
or
push
xchg
mov
push
pop
and
cmp
adc
outsl
lea
mov
sbb
sbb
jp
lcall
sub
pop
cmp
or
in
inc
pop
aad
push
inc
fwait
cmp
and
push
cmp
pop
mov
cmovl
loopne
fbstp
mov
xchg
pop
imul
sub
add
je
cli
test
mov
mov
and
sbb
inc
shl
stc
stos
add
or
popf
mov
xchg
sbbl
lods
sahf
pop
ffreep
add
pop
mov
mov
movsb
sbb
adc
aaa
xchg
or
inc
mov
push
in
call
sub
push
faddl
fincstp
aad
ja
cmpsb
addr16
rcrb
jne
mov
adc
jl
pusha
fmull
cmpsb
js
xchg
and
push
repz
or
mull
je
or
pop
inc
sbb
jge
mov
dec
test
sub
or
subb
cli
inc
sbb
int3
psrld
jecxz
into
sbb
into
jnp
push
push
sbb
or
mov
jns
mov
fstpl
sbb
xor
addl
sbb
xor
sub
push
in
sbb
imul
fnstenv
mov
push
call
xchg
out
mov
adc
push
fcomps
adc
ss
pop
cltd
ds
dec
mov
pmaddwd
mov
cltd
mov
fisttpl
stos
add
enter
outsb
jbe
std
and
inc
cmp
rorl
adc
push
loopne
popf
mov
lret
ret
pop
pop
mov
sbb
fwait
and
cmpb
cld
mov
xchg
je
cmp
insb
xchg
sub
stc
xchg
sub
mov
sbb
stos
and
mov
jl
aaa
sub
jb
xor
icebp
sbb
das
mov
cmp
mov
jg
inc
stc
icebp
imul
push
mov
sub
rorb
xchg
push
ljmp
mov
dec
pop
call
in
mov
in
cmp
addb
fs
loopne
stos
popa
xor
mov
jcxz
bound
loop
jno
inc
cmpsb
icebp
xorl
test
ss
xchg
mov
jo
adc
bound
sti
push
push
cmpl
sbb
sub
stos
icebp
lret
add
shll
sbb
insb
stos
imul
pushl
outsb
or
dec
jmp
stos
mov
cltd
push
cmp
add
loope
add
pop
in
mov
adcb
sub
cmpsb
mov
pop
sbb
xor
jl
repz
out
jb
jmp
xchg
add
or
and
fcmovnb
cmp
insb
mov
leave
sub
push
andb
out
jge
xor
xchg
ds
cmp
mov
comiss
movsl
into
xchg
push
cmp
loop
or
xor
stos
push
mov
mov
pop
jb
test
movsl
jnp
mov
lcall
movsb
in
pop
push
imul
dec
or
jbe
cmp
mov
cmp
jge
mov
jge
mov
std
dec
bound
data16
dec
dec
adc
bound
pop
mov
push
xchg
and
mov
mov
cmpsb
xchg
cmp
sbb
loop
jb
xchg
call
mov
outsl
mov
adc
mov
test
mov
das
cmpsl
jge
add
dec
ret
jb
or
jae
xlat
mov
aad
cmp
xchg
aaa
jne
fstpt
sbb
xlat
pop
sub
dec
subl
pop
loop
test
fwait
xchg
call
jge
push
loopne
adc
movsb
jno
js
xor
out
jmp
popf
in
jle
xchg
pop
ja
or
faddl
add
loop
sarl
mov
clc
and
cld
fwait
mov
movsb
cmp
add
call
pop
mov
push
mov
repz
sub
ret
adc
jbe
into
out
add
cmpsb
lds
xor
pop
push
daa
jo
outsb
mov
mov
pop
sti
lcall
inc
in
fimuls
sti
xor
dec
lds
jbe
cmp
mov
data16
pop
push
mov
push
dec
shl
jnp
cmp
pop
cs
lret
out
lret
sub
sbb
push
cmp
arpl
test
cmp
adc
neg
aad
sub
and
jbe
cli
xor
cli
fsts
xor
test
or
popf
mov
add
cltd
fildl
frndint
std
or
out
repnz
mov
dec
or
std
or
pop
xor
pushf
mov
sbb
jmp
pop
mov
or
fwait
stos
xchg
or
or
leave
fs
xchg
pop
xor
mov
push
push
adc
clc
hlt
mov
cmpsl
andl
inc
jo
fistpll
outsb
das
push
push
lock
pop
cmp
call
inc
dec
mov
ljmp
push
js
jae
in
sbbl
into
jne
or
into
cmp
repnz
jae
sub
pop
fs
cmpb
cmp
pop
bndldx
mov
mov
data16
test
dec
lods
add
stc
in
mov
out
icebp
ja
arpl
pop
adc
enter
cli
jecxz
and
mov
mov
jp
sub
mov
dec
mov
bound
mov
inc
xchg
addl
sub
mov
gs
jp
and
or
les
lahf
fdivl
data16
pusha
or
dec
mov
mov
pop
cmp
push
mov
xchg
push
jnp
fldenv
mov
dec
insl
stos
mov
test
pusha
dec
cmp
cmp
movsb
jnp
jge
adc
subl
btr
push
imul
std
dec
xchg
dec
adc
inc
mov
insl
sti
xor
or
int
pop
dec
adc
ja
cs
stos
inc
xchg
loope
inc
movsb
ds
and
sti
jns
jmp
xor
ds
pcmpgtd
cmp
mov
xchg
cmpsb
pop
movsl
inc
add
jp
sbb
rcrb
push
aam
daa
mov
sbb
jns
and
lahf
cmp
je
lret
jo
jns
testl
movsl
xchg
xchg
outsb
mov
jno
mov
fmull
push
in
je
push
dec
out
xchg
mov
mov
mov
cmp
dec
fs
test
lcall
gs
inc
sub
sbb
rclb
cltd
sub
adc
imul
int
inc
mov
cs
popa
dec
xchg
cmp
mov
mov
test
xor
lds
cltd
adc
gs
test
imul
xchg
pop
xchg
sbb
jae
cwtl
outsb
aad
mov
in
push
push
sbb
xor
ss
cmp
mov
dec
fs
lods
movsl
mov
xor
push
adc
sub
mov
cli
xor
repz
jb
cmp
test
adc
mov
lcall
mov
fwait
idiv
jne
sbb
or
dec
push
lods
mov
scas
mulb
pusha
mull
inc
mov
inc
in
push
mov
mov
loope
fldl
inc
lea
mov
jmp
xchg
or
test
inc
int
cs
pop
mov
sub
sub
jbe
negb
aam
push
call
xchg
pop
ror
cmp
lock
test
xor
jmp
aad
mov
mov
and
and
or
ftst
in
cltd
test
repz
mov
sub
cmpsb
pop
or
add
bound
mov
sub
iret
push
xchg
xchg
mov
addl
les
pop
insb
mov
add
fcoms
push
in
cmp
ret
pop
fidivs
push
shll
xchg
sub
cmp
sti
jnp
jp
pop
adc
out
bound
mov
sti
fnstsw
pop
dec
imul
rcr
flds
inc
pop
lcall
xlat
add
mov
lret
mov
cmpb
jmp
adc
xorb
inc
sti
pusha
in
fcmovu
fistps
push
pop
push
sub
rolb
cmp
mov
push
jg
mov
xor
sbb
rclb
ljmp
fnsave
call
or
orl
push
jg
mov
into
mov
sub
push
pop
movsb
lock
pusha
dec
push
movsb
in
std
cli
enter
sub
lret
insl
pop
dec
fisttpl
cmp
insb
sbb
mov
jno
popa
lods
xchg
and
push
rcl
push
xor
xchg
mov
sti
enter
fbld
adc
es
xor
cltd
push
adc
cmp
dec
mov
mov
sub
or
arpl
les
sbb
shlb
jns
js
andb
push
push
jo
pop
and
jb
mov
sub
les
test
int
xchg
jp
cmp
mov
adc
outsl
fisubrs
nop
out
cmp
sbb
dec
xchg
adc
mov
cs
lock
xchg
dec
push
inc
and
shl
in
movsb
cmp
test
mov
sbb
aad
and
mulb
pop
sub
loopne
in
sbbb
inc
push
push
mov
dec
push
in
cmp
pop
scas
cmp
pop
sti
pop
clc
add
test
or
mov
je
dec
mov
aaa
les
xchg
cli
mov
aad
or
push
inc
xchg
or
push
cmpsl
xor
mov
jo
pop
js
mov
jo
pusha
push
testb
and
pop
mov
into
mov
jecxz
adc
inc
dec
ljmp
add
sbb
xor
aad
jbe
dec
push
cli
leave
cld
out
adc
call
push
pop
stos
das
sbb
mov
jge
inc
ffreep
jp
add
sbbl
push
add
pop
mov
xor
add
mov
aam
aam
fsubr
pop
mov
bound
jge
hlt
lcall
cwtl
adc
and
or
inc
jb
rolb
adc
aaa
fisubl
idivl
push
add
ret
loopne
xchg
jno
inc
testb
jbe
aaa
or
das
cli
jnp
imul
xchg
mov
sub
int
nop
aam
mov
lods
jecxz
movsb
pushf
push
lahf
mov
aam
dec
imul
cmpsb
movsl
pop
push
sbb
addl
scas
pop
dec
stos
aam
in
jle
push
mov
pop
js
mov
fists
movsl
jge
ss
dec
mov
shll
xor
gs
out
mov
repz
inc
xchg
rclb
pop
pop
rol
mov
mov
pop
outsb
mov
or
and
rol
rolb
aaa
dec
dec
jae
popa
cmp
gs
in
mov
fistl
std
jle
xchg
or
fidivs
and
lcall
fwait
out
ret
and
mov
pop
dec
mov
lret
out
xor
enter
scas
or
leave
mov
sbb
fildll
test
push
imul
push
mov
fcoml
js
les
dec
lret
sub
jno
xchg
mov
outsl
add
sub
scas
rolb
dec
mov
mov
cs
xor
hlt
or
rclb
lahf
mov
push
adc
clc
sub
bound
xchg
insl
and
loopne
sub
pop
mov
mov
mov
pop
into
fldl
in
cmp
dec
data16
jmp
and
rcll
fmul
fisttpl
xchg
dec
and
sbb
stos
jne
xchg
mov
in
lcall
movsl
xor
adc
pop
repnz
xchg
aas
add
aad
and
aas
jns
xor
fldcw
cmp
fxch
scas
sbb
inc
xchg
es
cmp
aas
dec
js
insb
mov
cmpsb
and
fs
cmpsl
add
xchg
sub
movsb
push
fs
into
mov
sahf
pop
sar
out
pop
ds
sub
shlb
jmp
push
cmp
or
add
lock
enter
mov
cmp
xor
adc
push
or
jecxz
in
sub
sti
dec
push
fistps
push
dec
lret
cli
data16
into
add
add
mov
imul
mov
and
xlat
in
test
adc
or
jecxz
lock
loope
cli
dec
adc
mov
inc
pop
insb
and
adc
sar
lea
or
jecxz
test
das
push
lds
jle
enter
cld
rcr
cmc
imul
jecxz
fsubrs
add
sbb
ja
out
bound
stc
push
ret
add
imul
loop
or
rorl
imul
fstpt
test
ret
jmp
loop
les
int
test
addr16
and
jns
lods
in
gs
mov
popl
in
mov
aam
pop
lret
repnz
rol
addr16
ja
push
or
jle
inc
ja
lret
dec
mov
gs
rclb
jbe
xchg
jge
pop
or
sbb
push
jge
jge
add
sub
dec
lea
add
insb
cmpsb
dec
pushf
out
sub
or
push
fucom
mov
or
dec
call
mov
ss
out
or
sub
ljmp
adc
cmp
insb
dec
int
xchg
mov
ss
or
fistps
inc
inc
dec
push
sbb
push
xor
cmc
aad
xchg
bound
cmc
adc
lods
push
sub
scas
iret
fcmovu
push
jo
dec
pop
imul
fs
aad
cmp
stos
adc
fs
into
imul
jb
mov
add
shr
out
in
or
inc
fdivs
cmc
and
xlat
and
xchg
mov
jbe
test
mov
outsb
sbb
ljmp
data16
sbb
rorl
xchg
lret
add
mov
adcl
into
inc
sbb
mov
fbstp
in
jne
xorl
movsl
inc
call
ja
pop
repnz
xchg
xor
pop
imul
sahf
xlat
and
sub
jbe
ja
stos
dec
cmp
adc
xor
data16
dec
stc
sbb
push
sub
xchg
bound
fsubrl
lock
jo
nop
test
nop
push
push
add
inc
mov
pusha
popa
movsl
mov
idivl
sub
and
in
fwait
mov
mov
es
data16
mov
adc
loopne
leave
push
cmc
pop
loopne
push
popf
aaa
daa
pop
and
jb
popf
lods
xchg
pop
pop
xor
cmp
inc
fsubrp
inc
jnp
mov
cld
hlt
push
jae
gs
lcall
push
clc
mov
jmp
je
and
dec
cmp
outsb
cli
int3
jecxz,pt
pop
sbb
mov
mov
push
fnstenv
sti
fsubrs
and
xor
cwtl
adc
jmp
aam
popl
xor
and
das
bnd
or
jl
push
stc
mov
arpl
push
mov
clc
ljmp
mov
mov
test
lcall
inc
in
push
xchg
xchg
xor
lods
xchg
test
ror
mov
scas
jp
mov
ss
dec
mov
sbb
push
fldl
mov
loopne
rorl
aam
adc
cmp
lea
sahf
xchg
jne
pop
outsl
mov
ja
lods
xor
imul
stos
je
push
sahf
jmp
icebp
xchg
cmpsl
cmpsb
xchg
scas
in
mov
ss
sub
jb
xchg
mov
movsl
add
adc
ja
xor
fisubl
mov
mov
or
stos
scas
mov
ret
aas
test
jecxz
mov
xchg
lods
sub
repnz
sbb
adc
xor
xchg
push
lods
pop
jle
xchg
mov
nop
loopne
mov
xchg
sbb
mov
and
add
mov
sbb
mov
xchg
cld
adc
in
sub
jb
cmpsb
loope
scas
jo
call
mov
and
dec
paddsb
cmp
icebp
imul
xchg
js
js
sahf
push
inc
sub
mov
addr16
cmpsl
cmpsl
mov
incb
movl
dec
cltd
jl
sub
test
shrl
out
lret
rclb
fcoml
pop
sub
and
adc
mov
ljmp
icebp
push
add
test
jle
jmp
lods
or
lret
daa
xor
int
out
out
push
xor
rcr
out
add
mov
xorb
cmp
call
mov
mov
jp
in
dec
mov
ret
cmp
movl
sahf
pop
push
fbstp
sub
jl
sbb
roll
sbb
push
jp
jp
daa
sbb
jle
jns
shll
mov
jno
test
icebp
aaa
int3
sbb
sahf
sbb
mov
loope
mov
iret
aad
je
mov
cmp
fdivs
jl
fdivl
xchg
sbb
mov
mov
jo
lret
icebp
xor
dec
and
lods
movsb
xchg
or
push
out
cmp
sub
mov
orl
push
sbb
jb
out
and
cli
fistpll
mov
push
popa
mov
sub
popa
inc
lcall
lcall
push
dec
sub
or
adc
cmp
insb
jns
dec
daa
imul
lods
inc
imul
mov
ficomps
dec
sbb
dec
insb
andl
mov
push
push
inc
adc
mov
push
ret
cmpsb
xchg
mov
jmp
pop
mov
or
gs
enter
push
sbb
bound
sbb
scas
sbb
xchg
or
test
push
sbb
or
add
push
lahf
test
shr
push
jb
inc
lcall
add
arpl
and
test
ja
dec
inc
cmpsl
xlat
pop
outsb
cmc
imul
inc
push
pop
push
imul
stos
pop
cmp
push
xchg
pop
in
les
push
test
dec
xor
or
sbbl
push
add
arpl
rcrb
insb
pop
mov
and
xor
mov
lea
movsl
adc
jg
sbb
xchg
aad
adc
jo
outsb
add
rcl
and
adc
xchg
fcomp
xchg
fwait
push
mov
sub
movsl
out
data16
inc
add
push
cmp
fwait
lock
push
adc
cli
stc
sbb
out
daa
mov
and
popf
adc
mov
sbb
jne
adc
pop
dec
in
repnz
mov
mov
ffreep
icebp
fs
lcall
push
mov
mov
mov
cmp
mov
test
and
fbld
sub
jmp
vmread
mov
scas
or
sub
in
mov
xor
push
popf
cmp
lods
mov
or
cld
arpl
dec
ficompl
mov
jge
je
adc
pop
loopne
xchg
xor
sbb
sbbl
mov
push
movsb
sbb
lcall
les
or
ret
cwtl
mov
inc
mov
clc
cmp
xor
push
popa
loop
scas
xchg
sub
dec
xchg
cmp
sub
sbb
jl
jle
gs
push
int
jo
push
lods
js
dec
insb
iret
out
mov
add
xor
jo
lods
out
cli
fsub
or
inc
rcl
and
cwtl
sub
inc
mov
xor
aam
repz
mov
jns
icebp
cli
adc
lods
or
sbb
adc
or
in
jno
scas
jbe
ret
loope
jecxz
popf
jmp
lods
pop
ss
mov
scas
and
and
lret
dec
aam
mov
cmp
sti
push
pop
cld
xchg
xor
inc
in
popf
lods
fmulp
push
jae
inc
std
xchg
inc
xor
or
push
jecxz
xchg
sti
sahf
xor
movsb
lea
addb
pop
rcrl
push
xchg
push
adc
lret
cmp
adc
jno
je
sbb
movsl
repz
int
out
test
mov
mov
push
and
divl
inc
dec
mov
int
and
leave
aas
imull
pop
cmpsl
ss
sub
in
mov
idivb
sbb
std
xchg
frndint
fsubrs
out
in
xor
rcl
nop
std
out
fisubs
sahf
inc
pop
cmp
ljmp
or
add
and
sbb
aam
ljmp
shl
mov
out
aad
dec
sub
xor
enter
xor
sahf
xlat
mov
popl
std
rcrl
sti
xchg
gs
je
push
pop
mov
push
xor
lods
or
lock
or
test
pop
xor
ficoms
loope
pop
pop
shrl
add
dec
mov
jae
inc
movsl
sbb
shrl
pop
mov
mov
xor
or
insb
add
scas
mov
js
imul
lret
jbe
enter
add
mov
mov
int
nop
orl
insl
insb
sub
sbb
jmp
dec
sarl
cltd
stc
popa
into
sbb
cmp
xchg
ret
pop
mov
xor
dec
cmpsb
sbb
stos
pop
mov
ss
aaa
fnstenv
inc
jb
cltd
dec
lea
cmpsb
cli
shll
sub
out
aad
add
cli
rclb
push
bound
push
cmp
lcall
push
cmp
sub
cmpb
push
jle
test
or
scas
mov
in
dec
sahf
xlat
aam
mov
pop
leave
rcr
shrl
fwait
out
repz
ret
push
sbb
out
lock
stos
jle
insb
ret
jns
leave
aaa
sbb
mov
stos
into
hlt
sarb
imul
jge
lahf
sbb
xlat
adc
xor
add
testb
scas
pushf
fbstp
sub
push
mov
out
mov
pop
imul
sub
in
cs
sub
aas
xchg
mov
sub
and
pop
gs
arpl
scas
jb
rclb
push
push
inc
pushf
mov
sub
es
sti
test
sbb
mov
cmp
xchg
aas
lods
mov
lcall
rcrb
pop
push
mov
cmp
mov
mov
xchg
dec
out
mov
js
daa
rcll
pop
out
cmp
push
rorl
or
cmp
rcr
in
mov
inc
push
inc
sti
mov
in
sub
adc
mov
and
das
cwtl
pop
mov
mov
fiaddl
inc
dec
xchg
add
xchg
lahf
xor
mov
popf
xor
xchg
jle
mov
lret
or
mov
mov
or
sbb
sub
outsb
insb
shr
pushf
sbb
mov
jno
pushf
mov
mov
sbb
inc
mov
adc
push
dec
jae
je
pop
lret
insb
pop
pop
inc
adc
cmp
and
hlt
ljmp
or
cmp
adc
out
adc
lcall
fisubs
std
pop
add
sbb
andb
jmp
mov
sub
fimull
sbb
mov
cld
cmp
pop
sbb
push
jbe
xor
andb
pusha
jmp
cs
xor
stc
xor
cmp
push
add
mov
add
pushf
dec
cld
fdivrs
pop
shlb
clc
scas
clc
je
inc
mov
push
lods
or
pop
int3
sub
jmp
mov
dec
adc
in
ds
or
loopne
cmp
mov
dec
pusha
std
dec
in
mov
or
in
stos
push
shrl
or
cmp
pop
lar
mov
popa
pop
cltd
mov
xor
xor
test
lahf
xchg
insb
cltd
negl
ret
cmpl
call
daa
stos
jno
inc
pop
sub
mov
scas
dec
mov
shll
data16
mov
in
cltd
test
int
add
pop
add
sbb
mov
xchg
cmp
pop
mov
in
adc
adc
ja
sbb
pop
lcall
xor
addb
cs
roll
mov
adc
popa
mov
in
jo
stos
push
lock
xchg
jb
sub
lds
pop
or
add
pop
lods
mov
jo
pop
push
inc
imul
mov
loope
fs
popf
adc
inc
jp
inc
mov
pop
movsb
std
jp
push
add
inc
ficomps
mov
xchg
pop
dec
dec
pop
lods
imul
lds
sti
stos
push
pop
rcl
popa
and
inc
test
fsubrs
or
mov
cld
lret
imul
jns
xor
je
in
xlat
lcall
sbb
call
out
mov
aaa
scas
lret
mov
adc
xchg
fisubl
popf
scas
sub
xchg
imul
push
fwait
mov
pop
scas
lcall
inc
jns
hlt
adc
mov
adc
lods
xlat
mov
insb
pop
add
pop
clc
jbe
jae
pop
and
and
lret
cmpsb
sub
rorb
js
js
dec
inc
cli
cli
xchg
sub
mov
xor
jmp
call
cmc
pop
or
jbe
push
mov
jle
lock
mov
add
cli
sbb
xchg
mov
sub
jg
cwtl
out
xor
push
xchg
hlt
sbb
jbe
std
data16
mov
or
lds
dec
jno
xchg
es
int
aas
jae
adc
mov
jp
adc
icebp
pop
jbe
push
fdiv
or
push
fwait
scas
imul
pop
mov
jae
add
in
jg
jmp
jg
test
out
sub
sarb
mov
xor
ret
aas
sub
add
cmc
in
fadd
add
pop
jmp
mov
loopne
jns
fbstp
rcrb
add
pusha
fcmove
jle
adcl
sub
jbe
pushf
adc
jl
xchg
jbe
fidivs
lods
stos
and
data16
lcall
clc
nop
dec
icebp
sub
fadd
fwait
scas
call
sub
mov
addr16
inc
dec
xchg
xor
add
sbb
adc
fildl
and
mov
ss
xchg
inc
enter
aam
mov
imul
fdivrl
fsubrl
xor
sahf
cmp
mov
dec
add
push
push
negl
jmp
loopne
cmp
mov
leave
arpl
pop
in
dec
in
cwtl
popf
das
shl
jp
sbb
movsl
mov
sbb
into
mov
sbb
adc
jnp
aas
xchg
jge
into
pop
fdivp
rcrb
shll
dec
push
mov
push
sbb
mov
mov
fnsave
mov
jae
int3
dec
inc
push
push
jmp
xchg
sbb
pop
sbb
popf
mov
or
roll
lret
inc
inc
fwait
dec
xor
in
dec
jnp
cmpsl
inc
loope
fsubs
test
insl
in
mov
and
sub
cmp
fnstenv
jmp
lods
sbb
stc
testl
insb
mov
cmp
jmp
test
cmp
cmp
loope
call
das
popf
xchg
les
inc
cwtl
frstor
aas
lds
je
and
xchg
sub
pop
test
std
popf
adc
call
aas
inc
mov
mov
cs
push
mov
add
outsb
in
dec
je
mov
mov
or
jnp
dec
mov
mov
pop
outsb
and
pop
and
rcl
push
jg
insb
mov
xchg
push
std
out
push
lret
jne
in
arpl
rorl
add
repnz
imul
push
fnstcw
mov
gs
insl
jmp
rcrb
call
push
mov
es
fwait
adc
or
xchg
push
sub
or
stc
pop
cld
js
push
sahf
mov
ja
sahf
ljmp
jp
dec
mov
fcmovnbe
in
jp
dec
int3
aam
push
fcomi
jl
cld
lahf
mov
ret
cmpsb
rcr
xor
xorb
out
inc
dec
mov
adc
inc
mov
scas
xor
pop
jb
or
mov
add
sub
in
adcl
cs
cltd
sub
shl
fxch
pop
test
cmp
inc
rolb
imul
test
mov
xor
push
insb
xor
dec
or
xor
inc
pop
jp
ljmp
int
popa
cmpsb
and
lcall
in
and
cld
and
stos
outsl
push
cs
cwtl
sub
or
lret
es
stos
dec
sahf
xchg
cmp
lock
inc
push
pusha
cmc
jecxz
push
sub
lock
stc
pop
loope
pop
jne
leave
xor
rolb
nop
sub
jmp
hlt
mov
sti
dec
xor
cld
push
jbe
xlat
rol
pushf
cmc
mov
sbb
mov
sbb
lds
cli
lods
cs
jae
ja
out
push
mov
or
jp
ret
mov
sahf
scas
sub
pop
out
jge
sbb
xchg
fistps
aas
jo
lcall
cld
fiadds
jmp
inc
push
mov
loop
sub
out
jl
push
or
arpl
lahf
and
pop
xchg
and
aam
add
add
inc
sub
test
xor
adc
dec
sbb
add
and
test
shrl
imul
adc
xchg
aam
or
inc
mov
js
out
cs
xchg
and
imul
int
xchg
or
fwait
fs
pop
lcall
jno
repz
lret
lds
push
rcll
and
fbstp
fs
jp
lock
pop
dec
cmp
out
dec
test
mov
out
out
mov
aaa
cli
inc
or
stos
jnp
adc
movsl
idiv
mov
fistl
sbb
aaa
add
mov
scas
das
push
cmp
sbb
fmul
repz
lret
into
push
scas
mov
aam
dec
daa
loopne
add
sub
iret
lahf
push
ss
mov
movsl
xor
push
adc
pop
mov
adc
idivb
les
inc
inc
sar
or
movsl
add
out
addr16
cmp
popf
dec
ds
sarb
and
push
mov
sbb
mov
jne
clc
pop
leave
sub
pop
sbb
into
inc
cmp
jno
add
or
pop
add
lahf
sub
sub
sbbb
sbb
ja
add
dec
dec
lds
subb
stos
dec
sbb
jmp
insl
ds
out
pop
jg
cmp
xlat
pusha
test
lcall
insb
cmp
sbb
inc
aaa
dec
mov
scas
insl
test
movsl
mov
inc
push
lock
xchg
movsl
push
ljmp
test
mov
movsl
push
ret
xchg
stos
cmpsl
mov
mov
mov
addr16
push
subl
ja
insl
clc
outsb
adc
xchg
enter
fsub
push
rcr
fucomip
mov
dec
mov
push
aad
sbb
mov
jns
adc
js
push
daa
adc
xor
ss
adc
aaa
dec
pop
nop
xor
in
add
stos
and
cwtl
sub
pop
mov
adcb
push
jle
je
ficoml
mov
outsb
jl
dec
scas
sbbb
test
fisubl
dec
sbb
inc
loopne
repz
mov
loop
frstor
hlt
pop
push
pop
stc
addb
push
les
pop
xchg
in
bound
ss
stos
mov
loopne
mov
xor
mov
xor
push
adc
int3
mov
hlt
xor
aas
mov
ljmp
sbb
dec
xor
mov
xor
stos
cwtl
lret
mov
decb
mov
mov
xchg
ret
mov
and
add
inc
or
data16
or
ds
lahf
mov
xchg
and
or
or
cmp
mov
into
push
jo
repz
stos
mov
ljmp
lods
and
lods
int3
aas
push
cmpl
mov
mov
sub
jle
add
mov
dec
loopne
into
jp
mov
jl
jmp
insb
xchg
out
pop
mov
and
dec
sti
pop
add
incl
nop
loop
mov
cmp
in
push
jae
dec
jno
cli
mov
aas
and
sbb
inc
mov
push
pop
inc
test
jl
fsubrs
mov
jp
jg
jge
add
xchg
shlb
mov
sub
imul
in
mov
enter
mov
insb
jo
sbb
add
mov
imul
dec
inc
popf
sub
or
shlb
xchg
popf
or
sbb
and
lcall
ret
xchg
mov
gs
rcll
insb
aas
pushaw
mov
or
cld
sbb
xchg
lea
stos
test
jo
jbe
daa
xor
data16
pop
cmpl
outsl
mov
jo
mov
mov
push
pop
sbb
push
sarl
xchg
mov
or
rcr
adc
mov
or
adc
push
push
int
movsb
es
add
xchg
arpl
mov
inc
dec
rcll
xchg
dec
xchg
xorl
in
jns
add
lcall
jge
inc
cli
das
cmp
and
ss
jno
mov
mov
bound
mov
sbb
adc
sub
mov
or
lcall
push
ljmp
xchg
mov
movsb
push
xchg
dec
mov
push
sahf
mov
repnz
xchg
mov
sub
inc
fsubrl
xor
or
xchg
mov
mov
lock
cmp
xor
test
push
pop
pop
push
jl
xchg
mov
mov
dec
add
popa
subl
test
jno
xor
idivl
mov
mov
mov
movsl
push
fsubr
inc
aaa
push
lcall
loope
jmp
fwait
mov
sbb
jle
leave
pop
pop
and
cmc
in
arpl
pushf
mov
cli
test
sub
sbb
xchg
enter
jno
pop
sbb
mov
fwait
add
shl
test
mov
addr16
push
loope
mov
lock
jbe
jp
jg
mov
aas
test
cmp
push
mov
mov
cmp
mov
shlb
in
push
adc
stos
push
das
push
fnstenv
sahf
xchg
fwait
orb
imul
jge
push
scas
iret
out
mov
outsl
pop
lret
lcall
mov
and
stos
cmp
xchg
in
stos
pushf
xlat
out
mov
out
adc
scas
roll
pusha
and
in
inc
cmp
lock
or
sub
mov
stc
push
pop
imul
hlt
adc
sub
aaa
xor
or
mov
xchg
lock
xchg
or
lock
scas
loop
push
fs
cmpl
and
inc
sub
or
shrl
fwait
or
mov
insl
dec
dec
xchg
flds
inc
std
dec
xchg
add
xchg
push
stos
aad
popf
jmp
pop
aad
repnz
fimull
xor
lcall
sbb
jbe
stos
les
jmp
adc
repnz
cmp
or
push
mov
lcall
pushf
push
int
lds
loop
mov
fcmovbe
cmp
lret
repz
cmpsb
xor
xor
lods
insb
aad
fidivrl
neg
pusha
jg
cmp
push
adc
xchg
in
rcrl
dec
jno
or
loopne
lret
cmp
and
in
push
rorl
mov
test
inc
lds
dec
addr16
xor
xor
push
push
rorl
push
ret
pop
jp
orl
jne
loopne
jge
push
pop
fcmovnb
cmpsb
inc
lcall
sub
add
pop
aaa
loopne
outsb
mov
and
fisttpl
shll
dec
jb
mov
popf
sub
sbb
dec
js
scas
sbb
xlat
add
push
test
push
insb
xchg
inc
cli
push
xor
mov
xor
sahf
fadds
jge
xchg
cs
jae
out
rorb
pop
int3
call
xor
xor
and
mov
adc
in
je
pop
jae
in
jno
jmp
in
inc
daa
cmpb
aas
nop
call
inc
adc
cli
mov
adc
arpl
adc
fnstsw
push
dec
sbb
mov
out
mov
bound
repnz
jo
leave
out
pop
test
loope
xor
out
lods
in
test
call
mov
or
xchg
cmpsb
xchg
push
add
xchg
mov
adc
dec
mov
and
push
daa
cmpsl
scas
adc
inc
das
lret
or
cmp
mov
push
jmp
bound
pusha
jns
outsl
xlat
jne
cs
out
out
dec
push
dec
mov
cmp
inc
jge
fs
push
data16
pop
ret
subl
mov
loopne
xchg
jecxz
aaa
loop
or
dec
ja
push
insl
psrad
xor
sahf
scas
pop
adc
cmc
push
mov
ret
sub
adc
push
std
pop
sub
shl
movsb
and
dec
loope
push
cmp
and
add
adc
push
sbb
jl
cmp
aaa
insb
aad
push
sti
xor
shll
dec
pop
sbb
cmp
xchg
adc
pop
dec
cmpsb
sbb
dec
mov
es
mov
out
xor
xchg
dec
mov
mov
inc
xorb
xor
fmull
mov
add
and
addr16
ja
cltd
or
aam
xchg
adc
jmp
mov
fwait
and
out
pusha
mov
imul
sbb
repnz
xchg
jo
ret
dec
add
jl
mov
out
push
stos
jmp
es
imul
adc
sbb
pop
dec
mov
add
mov
int3
repnz
dec
mov
xchg
jae
jnp
jg
pop
insl
cmp
ret
push
popf
xor
je
cmp
scas
xor
into
pop
jge
stc
cli
popa
out
jae
mov
xchg
inc
adc
dec
mov
xor
mov
inc
mov
jno
scas
repz
fcomps
outsb
loop
pusha
dec
or
loopne
out
out
mov
sub
out
inc
mov
xorl
aaa
sub
mull
dec
lret
pop
jo
dec
xor
arpl
pop
scas
sub
jecxz
push
les
jno,pn
mov
push
call
testb
ret
movsl
jae
adc
cmpsl
and
lahf
and
pusha
pushf
inc
cmc
push
insl
ffree
repz
mov
xchg
mov
addr16
orb
xor
sub
pop
lods
fldt
sub
pop
and
ljmp
aas
mov
and
xlat
hlt
push
lret
pop
lock
add
push
cld
rclb
xchg
sub
mov
push
or
pop
jg
inc
adcl
lret
out
rcr
push
xchg
mov
mov
in
lds
sub
inc
stc
pusha
mov
xchg
pop
jmp
rolb
lret
mov
sbb
movsb
add
mov
add
xchg
nop
dec
mov
repz
cmp
xor
aad
adc
imul
rolb
shlb
mov
and
sub
fidivrl
cmc
xor
pop
jp
lret
out
cld
mov
and
or
loope
inc
dec
jbe
cmpsb
push
js
mov
dec
pop
mov
push
adc
scas
fdivr
xchg
sbb
add
out
dec
jno
mov
xchg
dec
adc
xchg
shrl
inc
ret
mov
cmp
xorl
insb
pop
sbb
mov
inc
or
jae
ja
movsl
mov
and
mov
cmp
push
es
cmp
inc
fistl
mov
xchg
fwait
dec
push
xchg
ljmp
fisubl
mov
mov
ds
jg
pushf
xor
mov
or
and
mov
jns
adc
lds
inc
sbb
outsb
je
out
sti
xchg
mov
cmpsb
sbb
mov
xor
sbb
adc
outsb
mov
sti
mov
jae
fwait
leave
cmp
shrl
sub
ror
fnsave
adc
push
and
faddl
mov
pop
jbe
lods
sar
rclb
cmp
lods
pop
cmp
inc
data16
cmp
xor
inc
lods
lds
xchg
xchg
and
push
xchg
test
dec
add
ret
pusha
dec
sbb
sbb
push
jnp
and
notb
lods
push
mov
xor
mov
sti
aas
pop
int
lret
add
outsl
mov
outsb
dec
push
leave
add
or
popf
aaa
aad
dec
arpl
cs
jmp
xor
sbb
dec
fs
enter
or
push
testl
push
mov
fcomip
and
or
test
xor
stos
movsl
lret
movsb
lods
scas
and
nop
gs
dec
out
push
cmpsb
fcompl
inc
in
in
xchg
stos
in
bound
call
clc
cmp
into
test
mov
insl
pusha
rorb
loope
push
addr16
shl
cmp
mov
cld
cld
lock
sbb
xchg
pop
loop
pop
push
mov
mov
mov
and
jecxz
mov
shl
scas
sbb
stos
sbb
cs
ljmp
mov
jb
pop
mov
adc
inc
inc
dec
ret
push
jbe
lea
sub
rcll
add
shrb
lcall
outsl
add
jg
je
push
sbb
push
pop
jge
fisttpll
sbb
or
push
jmp
mov
sbbl
dec
mov
test
jecxz
pop
insl
jp
adc
movsl
icebp
enter
mov
int3
jo
xchg
pop
clc
adc
xor
xlat
inc
loope
cmp
pop
movsl
jl
push
push
cmp
xchg
pop
xor
dec
xchg
push
jecxz
add
adc
xchg
sbb
pushf
sbb
or
inc
movb
nop
addr16
inc
cli
sub
sbb
stos
push
in
mov
inc
jb
icebp
sub
lcall
push
popa
dec
and
inc
and
mov
mov
pop
dec
cmp
imul
std
xor
jae
insl
mov
dec
stc
ljmp
dec
sub
repz
imul
sub
ljmp
popf
or
mov
add
sub
nop
mov
daa
enter
sbb
mov
stos
lret
mov
jnp
sbb
mov
mov
fstp
xlat
mov
movsl
and
push
in
jmp
push
push
or
aad
adc
or
scas
pop
sub
push
mov
and
push
clc
xchg
inc
jb
in
cmp
dec
and
dec
outsl
outsb
adc
fs
or
lods
stos
arpl
loop
or
rcll
stos
sbb
mov
lods
sub
pop
push
sub
mov
js
popa
add
sub
aad
sbb
fucom
and
mov
jl
and
mov
push
jb
mov
adc
clc
in
mov
daa
pop
adc
ret
rorl
jle
testb
cmpsl
adc
mov
inc
pusha
sbb
movsb
daa
add
bound
or
mov
pop
cmpsb
sub
and
sarl
inc
adc
pusha
imul
enter
out
sub
popf
fsubrs
or
or
mov
test
in
cmp
mov
cmp
dec
out
cli
xchg
and
out
mov
or
push
dec
cmpps
std
into
inc
std
idivl
out
adc
push
enter
outsb
pop
mov
dec
push
xchg
es
lods
rcll
icebp
add
insb
inc
insb
js
mov
mov
xor
sub
push
jp
js
add
cmp
enter
pusha
and
mov
outsb
mov
stos
test
testb
dec
lock
lods
push
cmpsb
xchg
mov
pop
std
popa
in
pop
cmp
mov
test
cmpsb
leave
leave
mov
pop
pop
pop
or
es
jne
pop
into
pusha
mov
pop
icebp
pop
call
daa
sbb
fadds
shlb
cmc
sub
add
pop
sub
lss
push
je
popa
mov
int3
push
mov
cmpsb
mov
push
cmpsb
mov
jmp
enter
cs
movsl
inc
adc
cmp
or
pusha
mov
push
mov
out
je
loop
stc
sbb
sbb
jnp
enter
jnp
ret
sub
cwtl
addl
jne
mov
push
sti
test
inc
push
imul
dec
loope
jmp
or
decl
imul
push
jmp
test
pop
leave
int
pop
jl
daa
mov
ja
cli
push
fisttps
jecxz
insl
pop
scas
mov
mov
mov
lods
scas
test
jo
push
fs
push
loope
gs
adc
adc
loop
sub
pop
sub
jp
stos
mov
lret
jge
dec
test
out
inc
sbb
jg
fldenv
lods
das
mov
shrb
test
vpunpckhqdq
pop
pop
and
sbbl
adc
fldenv
mov
addr16
popf
rcl
add
dec
sub
push
jle
jnp
mov
fsts
divb
cmpsb
and
stos
mov
jnp
incl
mov
sbb
mov
cmp
and
loop
sub
insb
loopne
mov
sbb
jecxz
cs
mov
andb
mov
adc
pusha
jb
push
xorl
and
mulb
xor
push
sbb
pop
mov
aaa
dec
aad
test
cmp
cmpsl
es
inc
notl
mov
gs
daa
testl
or
aaa
inc
jp
mov
in
ljmp
mov
iret
popl
lods
out
mov
xorl
mov
in
cmp
xor
sbb
xchg
movsl
push
adc
jne
push
mov
arpl
adc
mov
jbe
mov
lods
xchg
adc
push
mov
xchg
stos
dec
sbb
jae
mov
inc
out
add
fwait
hlt
out
cmpsb
test
enter
xchg
push
test
cwtl
jmp
push
push
dec
loop
in
leave
repz
xchg
sti
popa
test
push
cmp
sub
cmp
pushf
sbb
jb
in
add
aas
mov
push
cltd
fsub
push
jecxz
aad
cltd
adc
add
pop
loop
inc
mov
push
fstps
aas
cmp
mov
or
test
aas
movsb
jmp
push
or
mov
xchg
pop
ret
lds
loop
pop
into
sub
sub
pushf
mov
inc
mov
mov
fwait
test
dec
dec
sarl
lret
fstp
hlt
mov
sub
jno
pop
xor
or
inc
lea
loope
lods
adcl
mov
xchg
sti
sbb
andb
cs
push
fsubr
sub
jl
fcomip
sti
clc
sub
or
daa
outsb
inc
sbb
adc
push
in
cmpsl
or
popa
xlat
mov
or
mov
cli
or
sahf
scas
aas
andb
test
fisubs
jmp
outsl
and
pop
in
out
cmp
jnp
cltd
xchg
aam
mov
adc
das
sub
mov
sbb
cmp
popa
sub
mov
pop
stc
push
cmp
push
mov
dec
lahf
push
jns
ud2
jnp
test
faddl
push
cmp
jl
aam
fwait
add
out
cmpsb
xor
arpl
enter
pop
mov
pop
xchg
add
cmp
xchg
jecxz
pop
jbe
pop
pop
je
inc
xor
xchg
pop
xchg
push
mov
sub
mov
lret
xchg
in
or
cmc
mov
pop
test
ja
out
mov
out
jno
mov
icebp
pop
arpl
pop
ds
aad
cmc
push
js
jnp
mov
prefetchnta
into
scas
movsb
das
loope
xor
mov
loop
add
mov
mov
cmp
mov
mov
stc
loope
sbb
mov
testb
mov
jg
call
mov
sub
repz
out
ret
filds
fistpll
shrb
jmp
scas
rcrl
sbb
push
push
je
jns
repnz
imul
scas
in
ss
ja
xor
and
addr16
push
push
ljmp
scas
inc
and
aas
bound
das
ja
ret
out
stos
iret
cmp
pop
xor
rclb
adc
add
cmc
cmp
mov
js
stc
jg
push
xor
inc
xor
xor
mov
jnp
test
or
jae
in
int
mov
inc
mov
cmpsb
cltd
test
mov
mov
bound
das
aad
pop
adc
es
pop
push
and
jne
sahf
test
push
addr16
nop
loopne
mov
push
je
orb
dec
xchg
gs
mov
xchg
dec
push
sbb
movsl
mov
movsl
mov
orl
xchg
dec
xchg
cs
push
in
mov
sub
inc
fwait
sub
movsb
scas
mov
rcrb
test
xchg
sbb
jg
inc
mov
cmp
sti
idivl
xor
test
push
lcall
push
xlat
roll
jnp
popa
pop
sbb
cmp
imul
mov
mov
and
jmp
repz
sub
jmp
outsl
and
jle
cmp
pop
xor
jbe
jmp
push
leave
add
out
cmp
insb
icebp
inc
mov
or
jbe
out
das
bnd
cmp
leave
add
inc
jg
adc
push
pop
sbb
jecxz
and
or
xor
sub
loopne
dec
rorb
cld
outsl
push
xchg
lcall
cmp
stos
xorb
int
dec
addr16
and
ss
bound
ret
jle
gs
sub
or
sbb
xchg
cltd
bound
sarb
mov
and
lods
mov
fwait
mov
mov
sti
fisubs
mov
lret
jbe
adc
jg
in
fwait
loope
dec
adc
cmpsb
nop
and
and
cld
data16
xor
xchg
push
adc
xchg
sbb
ficomps
test
cmp
adc
mov
dec
lock
enter
sub
les
xchg
mov
pushw
shll
sbb
xchg
adcb
add
push
xchg
and
push
adc
xor
movl
movsl
inc
or
arpl
jb
mov
mov
and
sub
sub
daa
shl
mov
jl
roll
mov
mov
mov
cmp
scas
mov
sub
jl
test
push
lahf
fs
aam
or
out
out
sub
mov
mov
add
out
test
std
leave
in
pop
repnz
jp
aaa
cmpsl
pop
aad
loope
lock
aad
aam
xchg
pop
and
loope
mov
rcll
jmp
add
add
cmp
xchg
push
mov
mov
push
cmc
bound
fidivs
js
les
push
pop
mov
in
mov
mov
mov
cmp
loopne
add
call
lods
ds
pop
cmc
inc
sbb
and
inc
mov
adc
scas
cmpb
insl
ljmp
xor
testb
and
xchg
mov
pop
adc
lahf
iret
mov
push
ficoms
mov
dec
jle
jno
test
movsb
xchg
mov
adc
push
pop
mov
adc
nop
pop
jmp
and
aad
cmpsl
pop
icebp
mov
das
lahf
jp
bound
jnp
movsl
and
inc
lods
mov
or
mov
test
pop
add
add
fs
cli
data16
mov
jb
imul
pop
or
gs
ds
loope
lret
in
rol
xchg
mov
movntps
std
jl
cs
int3
fistpl
mov
aaa
ljmp
adc
pusha
sub
sbbb
jbe
ds
lahf
rcll
sub
mov
dec
roll
pop
jnp
shlb
mov
xlat
cltd
in
dec
sbb
data16
ja
ljmp
pop
in
adc
jl
aas
iret
dec
push
mov
icebp
jge
leave
or
sub
repz
xor
dec
mov
inc
inc
cmp
jnp
fucomp
mov
inc
and
xchg
cmc
xor
xorb
lods
and
xchg
idivl
ret
xor
stos
pop
mov
sbb
adc
pop
xor
sar
out
push
cli
outsl
ss
les
fxch
sub
jnp
jnp
call
jmp
add
dec
or
iret
xor
pop
push
scas
gs
test
xchg
iret
hlt
pop
pop
sar
jle
sbbl
mov
mov
pop
cmpsb
call
sbb
dec
push
hlt
jg
sub
mov
insl
dec
mov
test
xchg
sub
jb
mov
or
iret
hlt
mov
mov
jb
bound
xchg
fs
sbb
push
push
or
mov
loopne
cmp
popa
gs
shll
mov
insb
and
lea
andl
popa
int
push
xchg
inc
xor
outsb
popf
inc
mov
adc
or
test
sarl
sub
jae
pop
or
bnd
es
rorb
pop
ss
ljmp
shrl
bound
lret
in
ss
cmpsl
mov
sti
sbb
rolb
es
jecxz,pn
arpl
sbb
sub
xchg
xchg
arpl
jecxz
jns
out
sub
aas
cmpb
aaa
sbb
mov
mov
push
sub
push
mov
push
lea
push
clc
icebp
xchg
mov
pop
sub
cmpsl
mov
mov
lods
and
or
mov
mov
jl
dec
enter
sti
adc
jl
mov
ljmp
inc
test
and
dec
or
xor
add
jb
ja
lret
xchg
je
leave
test
and
test
jp
sub
pushf
jmp
cld
cli
sarb
or
mov
mov
push
cwtl
push
lret
pushf
frstor
test
cltd
or
sub
notl
cmp
test
fstl
mov
jno
xor
adc
cmp
mov
adc
cwtl
mov
push
ljmp
bnd
jl
iret
cmc
ret
and
cli
popa
dec
pop
jne
je
jb
jno
addl
fxch
sbbl
out
lods
xchg
imul
cmpsl
ds
les
popf
inc
aas
dec
lea
adc
mov
leave
les
fs
or
lea
and
data16
sub
test
mov
lret
cmc
fwait
push
out
popf
inc
in
cli
ret
cmpsl
ljmp
std
xlat
pop
ficoml
movsl
test
fdivs
xor
cmpsb
pop
insl
fisttpll
and
lret
mov
pop
xlat
xor
jbe
jp
insl
fisubrs
cmpsb
and
push
insb
xchg
cwtl
sbb
xorl
cmp
loope
push
cmpsl
and
mov
adc
lods
das
mov
and
jno
cmpsl
xchg
push
add
cmpsl
push
inc
es
shl
ss
test
shrb
nop
sbb
push
stos
adc
xor
jo
jmp
in
test
sbb
insl
mov
out
ret
jge
pop
mov
xchg
test
aaa
or
push
arpl
scas
je
jg
xor
push
cmp
rorl
mov
add
mov
inc
jno
mov
xor
cmp
lret
hlt
xchg
loope
jbe
adc
jbe
sti
mov
cmp
pop
fs
adc
sbb
push
xchg
fmull
mov
fwait
and
jne
out
sbb
into
addr16
je
xor
mov
adc
std
test
outsl
jno
jno
enter
les
cs
cmpb
or
ret
cltd
inc
js
mov
inc
mov
sbb
arpl
inc
xchg
jb
dec
dec
sbb
lcallw
cmp
push
aaa
sarb
pusha
mov
subl
je,pn
jno
sub
jmp
pop
test
jg
fnstsw
jg
iret
pop
mov
decl
mov
inc
mov
push
cmp
mov
sub
insl
dec
jecxz
iret
dec
ret
dec
rcll
sahf
ljmp
sbb
push
data16
loop
cmpsb
mov
xchg
test
sub
push
inc
hlt
js
mov
outsl
add
repnz
jle
cmp
adc
pop
cmp
out
daa
sbb
ret
or
sbb
pop
les
mov
dec
push
add
add
or
cmp
push
jo
bound
jl
mov
mov
xchg
sbb
mov
mov
nop
outsl
dec
cmpsl
and
cmp
in
sti
repnz
jo
rclb
mov
xor
push
mov
mov
rclb
testl
mov
push
repz
cmp
shrb
mov
sub
outsl
in
cmp
das
lret
ret
cmpsb
nop
cmp
mov
mov
add
fwait
sbb
sbb
push
aas
adc
xchg
int3
and
push
xor
inc
jae
scas
sub
sti
pop
pop
pop
ljmp
and
pop
inc
cltd
jle
inc
dec
ret
cli
clc
popa
cmpsl
clc
imul
mov
daa
test
push
or
orl
jecxz
push
dec
leave
lret
jle
mov
lds
rdpmc
aaa
in
ds
mov
imul
jb
cld
sbb
shll
shlb
repz
inc
jle
cmp
mov
dec
add
pop
out
lcall
and
add
in
xor
mov
fcmove
adc
shll
rep
std
int
cmc
sarb
fs
je
push
aam
xchg
pop
mov
sub
or
push
ljmp
cs
gs
repz
into
popa
inc
ret
out
sub
cli
es
sbb
sub
vminps
out
cmp
ret
xchg
dec
adc
sbb
jno
sti
aam
rcll
stos
imul
mov
dec
es
xchg
and
jge
movsb
adc
xchg
enter
insb
call
bound
imul
outsl
lods
and
push
imul
adc
xchg
mov
bound
int3
cmp
aam
sbb
jmp
pop
jnp
or
sbb
mov
cli
mov
sarb
shll
dec
xor
jno
into
mov
bound
xor
sub
stos
cmp
pop
ss
and
bound
mov
cmp
adc
mov
je
lret
cld
push
adc
test
sbb
stos
jns
xchg
dec
inc
push
daa
in
repz
sarb
repnz
ds
jecxz
xchg
and
imul
adc
push
lahf
push
mov
inc
and
je
fld
stc
mov
and
jae
out
out
mov
and
inc
in
mov
or
hlt
jo
mov
jl
or
gs
fs
pop
xchg
shrl
xchg
mov
cltd
dec
sub
lret
jge
mov
bound
sbb
push
sub
push
jle
ret
shlb
push
into
pop
xorb
js
and
push
jb
cld
sub
push
or
or
test
ss
add
test
mov
mov
jmp
inc
sbb
repz
mov
std
cli
sbb
imul
push
sub
aam
xchg
mov
push
lret
sub
imul
fidivrl
and
pop
mov
dec
mov
jmp
mov
mov
xlat
adc
cwtl
rcll
sbb
or
loopne
inc
int3
sbb
xchg
das
inc
je
das
jbe
popa
and
push
popf
inc
addr16
jns,pt
xlat
xlat
adc
jg
or
or
sarb
mov
pop
repnz
repz
jns
cli
addb
jge
mov
mov
inc
dec
jmp
scas
or
pop
ljmp
sub
mov
adc
roll
cs
repz
sbb
lret
dec
out
in
adc
inc
imul
inc
add
and
mov
pop
adc
xchg
sub
bound
cmp
jecxz
loop
outsl
ss
adc
scas
push
insl
xchg
and
and
dec
sbb
adc
add
add
lds
popf
xlat
out
mov
cmpb
imul
push
in
mov
or
movsl
testl
xorb
adc
jge
sub
push
xor
sti
cmc
rclb
adc
cmp
outsl
in
push
jbe
pop
aas
imul
enter
rcll
mov
cmc
insl
push
push
inc
imul
jne
out
lods
sub
mov
jae
popa
lret
or
jbe
sbb
mov
add
xchg
pop
ljmp
add
add
mov
jbe
lret
and
pusha
outsb
mov
xor
or
adc
xor
pop
call
cmp
fsubp
fcmove
pop
int
ret
movsb
mov
push
and
xor
out
scas
pop
std
and
jmp
jle
lods
cmp
sub
cmpsl
dec
je
mov
inc
loope
xor
push
scas
push
push
push
rcll
dec
mov
xor
enter
ret
in
sbb
test
inc
dec
or
add
inc
inc
push
pop
cmpl
sbb
push
lock
xor
jecxz
mov
add
cmpsb
bound
aad
mov
iret
gs
out
dec
cmp
mov
lret
cmp
test
fimull
adc
fwait
bound
dec
jnp,pt
jl
in
mov
xchg
lock
sub
lcall
jno
rcl
lcall
xor
jne
push
mov
pusha
ds
pop
jg
mov
pop
or
arpl
ss
jbe
mov
negb
mov
push
sbb
add
les
xor
bound
pop
sbb
jns
jmp
frstor
rclb
popf
aam
jg
xchg
xchg
sbb
sbb
mov
rorl
cmp
mov
pop
test
push
adc
pop
jno
pop
icebp
fdivl
lea
and
dec
dec
push
inc
mov
ss
push
das
jb
shrb
sub
or
pop
mov
inc
add
insb
cmp
fst
mov
jns
fisubrs
add
sar
xchg
mov
adc
js
adc
dec
popa
inc
inc
test
mov
cld
call
rolb
pusha
aaa
sub
jb,pt
js
fnsave
cld
cmp
cmpsl
dec
sub
cmpsl
sub
aaa
movzbl
mov
setne
aad
fs
scas
or
pushf
pop
or
push
popl
les
dec
arpl
sbb
dec
ret
jno
addr16
stos
mov
dec
into
sub
xchg
jge
sbb
add
dec
ja
jmp
inc
xchg
mov
faddl
add
push
mov
or
and
icebp
jmp
jle
and
cmpsb
jl
das
pop
pop
adc
fs
inc
int3
mov
nop
push
jo
ficoml
jno
movsb
xchg
dec
sti
mov
and
test
faddl
xchg
bound
adc
xor
mov
mov
vmovhps
cmp
jno
test
cmp
or
lcall
push
sbb
fnstenv
xor
out
lds
imul
mov
mov
inc
xor
arpl
xchg
inc
stc
sub
cmpsb
xlat
mov
or
jle
loop
repz
adc
arpl
cwtl
imul
movd
sub
push
arpl
or
andl
mov
std
xchg
cwtl
fisubl
mov
inc
lods
xor
mov
hlt
inc
movsb
mov
je
fwait
jae
adc
bound
adc
fmuls
inc
and
mov
hlt
nop
call
mov
cmp
mov
mov
insb
mov
cmc
sbb
pop
rolb
cmp
test
rolb
pop
icebp
call
lea
xor
loop
mov
mov
das
movsb
xchg
xor
cmp
jl
cltd
ret
scas
mov
add
fs
inc
inc
sarb
stos
push
jb
jnp
lds
addr16
cld
pop
movsl
mov
push
jle
mov
arpl
mov
mov
nop
in
mull
lods
dec
mov
in
mov
jp
ss
mov
inc
pop
xor
sbb
push
aaa
enter
test
add
add
adc
adc
mov
scas
popf
xor
rclb
dec
jne
mov
sbb
dec
lret
movsb
cmpsb
clc
pushf
jb
test
pop
jne
scas
cmp
mov
mov
pop
mov
imul
loopne
call
cltd
pop
outsb
xchg
or
sub
xor
std
jne
add
sbb
icebp
pop
lahf
mov
sbb
in
push
and
pop
xor
or
adc
jle
pop
leave
jle
imul
out
or
stos
inc
mov
out
mov
xchg
mov
data16
sbb
pop
push
lea
xchg
sub
sub
push
cld
nop
xchg
pop
out
addb
imul
lods
in
scas
std
xor
jecxz
in
xchg
mov
cs
mov
movsl
lods
lret
mov
pop
mov
imul
out
sub
mov
les
mov
push
enter
cmp
lret
pop
imul
pusha
out
mov
jmp
imull
cli
or
shrl
fisubl
lret
imul
pop
mov
ret
cld
bound
aas
mov
mov
inc
int
xchg
sahf
insb
aas
leave
mov
cs
add
and
stos
fscale
cld
fwait
inc
scas
call
push
add
dec
push
or
outsl
xchg
xchg
lods
xchg
sbb
xor
xchg
mov
mov
pop
inc
stos
outsb
jno
xchg
mov
inc
mov
out
ss
cmp
cld
pop
dec
inc
cwtl
repz
and
adc
sar
adc
repz
cli
in
jbe
arpl
and
test
cmp
movsb
int3
mov
add
popf
or
gs
aaa
clc
sahf
inc
dec
pushf
mov
add
xor
push
stos
cmp
test
inc
loope
sbb
inc
mov
add
adc
inc
jae
push
sbb
repz
aaa
loopne
data16
into
jmp
dec
iret
mov
or
fidivrl
js
dec
xchg
cltd
daa
and
mov
dec
ret
dec
je
loopne
jge
xlat
adc
or
inc
in
adc
pushf
cmp
subb
sub
xchg
mov
pop
and
mov
lods
mov
add
cmp
push
in
cmp
movsb
inc
jle
inc
cmp
sbb
imul
nop
mov
mov
out
fdivrl
iret
sub
mov
in
cmp
je
stos
mov
or
enter
lods
dec
add
sbb
xchg
cli
dec
inc
outsb
test
fwait
fwait
jbe
bound
xor
out
mov
popf
jae
push
cmp
pop
add
jns
dec
adc
sub
outsb
shr
test
inc
mov
jb
ret
adc
fs
aas
inc
mov
arpl
rclb
lock
scas
add
divl
movsl
fidivrs
mov
bound
lods
inc
popa
mov
out
cmp
ja
or
inc
jns
push
adc
push
fidivs
adcl
jg
repz
add
or
pop
or
xchg
dec
xchg
push
mov
test
jnp
ret
lret
and
mov
aaa
or
xlat
mov
dec
sbb
mov
sbb
sbb
dec
dec
lods
add
pop
pop
pop
mov
mov
mov
jecxz
fwait
mov
and
test
sahf
fcom
cmp
test
jmp
add
sti
lcall
sub
xor
icebp
ret
ret
test
or
sbb
lret
ljmp
arpl
sub
xor
mov
pop
dec
cmp
stc
shl
out
dec
xchg
cld
ja
cmp
add
ja
subb
cmpsb
dec
cltd
pop
dec
ljmp
mov
shrb
popf
jne
fwait
pop
repz
ljmp
incb
adc
icebp
mov
cld
push
sbb
sbb
push
pop
das
outsl
ja
outsl
int
xor
das
repz
xchg
and
mov
sbb
enter
aam
lds
or
imul
add
xchg
mov
adc
dec
movsl
addr16
dec
fwait
je
sbbl
mov
jge
loopne
or
xor
xorl
xchg
ficoms
or
imul
xor
cld
test
rcll
outsb
out
iret
int3
frstor
sbb
inc
fiadds
and
cmp
paddq
test
andl
and
test
std
pop
cmpsl
stc
and
in
bound
pop
mov
push
fldl
and
cli
stos
fisubl
mov
cmc
adc
add
sub
shrl
cmp
sbb
dec
inc
lahf
test
ss
xor
lock
adc
test
rclb
rol
popa
aad
dec
adc
testb
push
cs
fisttpl
movsb
es
xlat
loop
inc
xchg
mov
into
rcrl
push
dec
loopne
mov
push
mov
js
mov
arpl
xor
inc
or
test
pop
int
pop
lock
lds
ret
add
sub
jle
cmp
adc
cmp
inc
or
push
jbe
dec
test
stos
mov
jo
xor
xor
lret
das
je
out
outsl
mov
or
push
mov
mov
push
mov
mov
jg
ret
lcall
inc
cwtl
mov
out
mov
add
test
xchg
cmp
pop
inc
out
pusha
mov
pop
push
xor
mov
scas
clc
dec
pop
jb
inc
outsl
fstpt
cld
push
test
scas
loope
adc
jle
aas
jae
test
adc
mov
push
fcmovbe
lret
rorb
adc
jns
insb
testb
cmp
mov
inc
arpl
aam
sub
in
in
mov
in
icebp
push
jne
add
cli
add
mov
repnz
sar
lods
ds
dec
pusha
ja
jno
push
or
jge
xor
sbb
sbb
adc
dec
inc
nop
pop
mov
push
stc
in
xchg
fisttps
scas
push
push
fs
push
push
outsb
add
cmp
out
in
out
lcall
xchg
inc
add
xchg
xor
inc
cmp
pop
jnp
dec
mov
dec
data16
lret
pop
xor
pop
popa
test
cmpsb
jecxz
lcall
adc
cmpsl
mov
sbbb
aas
imul
mov
faddl
cmp
aas
bound
dec
jns
pop
scas
addr16
mov
sub
out
jne
int
out
jmp
outsb
ds
scas
or
push
mov
sub
or
dec
je
adc
pop
push
cmp
xchg
aam
insb
mov
sub
mov
cmp
pop
sahf
lea
mov
add
jge
jp
cmp
daa
ss
popf
xor
add
sbb
mov
fwait
pushw
mov
adc
mull
roll
cmpsb
out
aaa
idiv
pop
jae
leave
mov
mov
pop
add
xchg
test
cld
arpl
out
sarl
roll
shlb
inc
leave
jecxz
pusha
inc
mov
add
mov
idivl
imul
dec
ljmp
and
test
xor
inc
sub
test
mov
test
adc
gs
jnp
push
mov
mov
aaa
outsb
add
inc
pop
sbb
pop
stos
daa
inc
popf
push
pop
fistpll
dec
std
push
push
mov
fsubrs
add
dec
sub
xor
into
loope
cli
jl
push
lret
ficoms
ror
loope
xor
or
xchg
xchg
and
out
ja
inc
sub
jmp
pop
mov
test
mov
push
aad
pop
push
mov
add
mov
push
popf
arpl
lret
les
adc
mov
ret
pop
cmp
ja
cmpsb
fwait
lods
outsb
lods
jg
jg
outsb
push
cmp
pop
inc
dec
test
addb
fimull
and
xchg
or
bound
add
jmp
fsubl
popa
je
repnz
lahf
movsl
push
lea
push
cwtl
lods
popa
movsb
cmovge
ret
inc
sub
loop
ret
jp
sub
ret
adc
xor
daa
jp
adc
xchg
test
xchg
mov
shl
push
sbb
jbe
sub
and
add
jbe
sbb
adc
mov
cmpl
and
lahf
shrl
cmp
push
fadds
jnp
sti
cmp
xchg
add
mov
pop
sbb
pop
mov
cwtl
mov
mov
pop
in
and
mov
push
xchg
xchg
repz
mov
dec
mov
jb
test
mov
mov
cmp
leave
in
jecxz
mov
arpl
dec
sbb
aaa
xchg
xor
pop
mov
and
jae
mov
xchg
rorl
jg
loopne
fdivl
nop
adc
fisubs
fisubrs
cmp
and
pop
push
and
mov
inc
jmp
mov
testb
ss
in
cmp
dec
es
dec
xchg
out
js
push
cmpsl
lods
push
fldl
xor
or
pop
sbb
push
sub
sub
jae
icebp
dec
push
pop
cmp
out
clc
in
xchg
xchg
jno
cld
mov
call
dec
xchg
loope
pop
pop
jge
mov
addr16
cmp
jl
xchg
and
push
mov
cmp
push
sub
sbb
aam
loope
xchg
bnd
jbe
cld
fisubs
xchg
xchg
mov
shl
mov
push
push
mov
cmp
ljmp
js
movsl
xor
xor
adc
dec
lods
and
mov
in
mov
or
movsb
cmp
in
je
push
rcrl
push
negb
or
dec
add
mov
sub
inc
xor
pop
jmp
mov
mov
xlat
mov
sarb
aas
pop
mov
test
gs
into
ret
into
mov
lahf
fadd
xchg
std
out
cltd
and
je
mov
movsl
mov
pop
sahf
jno
movsb
movsl
movsl
mov
out
popf
sbb
sbb
mov
jecxz
leave
pop
imul
loope
dec
in
inc
jmp
dec
xor
arpl
or
imul
mov
dec
lea
shl
xor
pop
cltd
lcall
pop
fwait
loop
shl
lea
into
dec
stos
and
daa
jns
inc
push
or
pop
jp
adc
fdivs
cwtl
cmp
or
ror
hlt
adc
cmp
xor
cmp
inc
xchg
sbb
or
sbb
sub
loope
mov
movsl
loopne
sub
add
sbb
sub
dec
adc
fistpll
imul
or
xor
cmp
push
inc
mov
push
jno
push
pop
negb
fcompl
fdivrs
mov
cmp
sub
cmp
push
mov
clc
pop
nop
repz
mov
lds
dec
mov
mov
xchg
mov
data16
mov
pop
sub
jmp
inc
push
fldl
jl
pushf
int3
repnz
sbb
xlat
ds
adc
or
inc
pusha
mov
mov
xor
push
xchg
dec
mov
xor
xor
push
jns
les
and
sbb
sub
imul
addr16
xor
les
jbe
vandnps
and
sub
je
test
addl
popf
lock
icebp
mov
in
add
dec
js
retw
fidivrs
dec
idivl
mov
bound
dec
xor
mov
jmp
push
add
adc
xchg
xor
mov
dec
cmp
xor
loop
cltd
or
jle
mov
jmp
mov
and
sbb
mov
cmpsl
jno
xor
xlat
or
mov
iret
inc
call
add
xchg
iret
mov
enter
push
xchg
clc
inc
test
jg
add
jae
mov
lea
jle
loope
xor
inc
pop
mov
aaa
aas
adc
jecxz
cmp
push
sbb
or
mov
idivb
dec
pop
fidivs
cmp
mov
mov
xchg
insl
imul
popa
cs
mov
or
push
mov
ja
add
in
sub
jnp
xor
lods
clc
and
ret
jb
push
mov
popf
movsl
adc
jp
inc
rcrl
stos
call
neg
sub
xchg
sub
es
js
leave
push
lea
stos
ret
xchg
sarl
push
hlt
push
cmpsl
and
and
pop
or
imul
shl
js
xchg
cs
or
lcall
loope
out
mov
popa
push
mul
dec
push
jge
lods
or
in
sub
call
inc
sub
orb
mov
sbb
fisubs
test
test
pop
jne
iret
add
mov
stos
add
push
cld
gs
push
or
fldcw
test
sub
sbbl
js
sub
out
xor
mov
in
push
mov
loope
xchg
and
pop
mov
adc
sbb
enter
or
mov
jmp
mov
int
nop
pop
aas
aam
cmp
inc
pushf
xchg
or
gs
dec
shrb
leave
xor
sahf
hlt
inc
jmp
lret
ret
push
lea
cltd
cmp
pop
adc
jmp
sub
pop
stc
incb
je
cmp
jl
dec
imul
cltd
imul
push
into
or
or
aam
aaa
jno
or
and
out
xor
or
xor
mov
cwtl
imul
sbb
pop
popf
push
sahf
ds
and
adc
test
mov
jbe
lcall
les
stc
fimull
pop
iret
sub
mov
arpl
addr16
mov
xor
mov
pop
fisubl
ljmp
rorb
dec
add
ljmp
mov
push
xchg
inc
imul
pop
out
js
mov
insb
ja
mov
jle
sub
lea
mov
sti
loopne
cmpsb
xchg
mov
shl
mov
inc
mov
sub
or
repz
ss
xchg
sub
pop
sbb
push
addl
ror
mov
jp
and
leave
or
test
or
mov
jecxz
sahf
xlat
cwtl
gs
add
imul
push
push
sub
test
inc
and
sbb
scas
mov
cmc
xchg
popf
xor
dec
dec
or
lea
loope
pop
and
scas
and
iret
mov
add
xchg
aaa
push
or
stos
dec
xchg
aas
cmp
popa
stos
dec
inc
dec
adc
push
push
movsb
int
mov
addr16
sub
xor
dec
cmp
cmp
pop
and
call
mov
lock
fdivl
mov
jl
scas
decl
orl
icebp
mov
in
pop
push
and
push
pop
aaa
notl
adc
fcompl
das
inc
out
xor
subl
mov
clc
jbe
hlt
lods
in
cmp
or
and
fwait
or
sbb
out
pushf
jl
jp
pop
aad
lea
jg
test
rcll
sahf
add
dec
ret
lret
fwait
jns
inc
mov
jno
jecxz
in
mov
int
rolb
testl
inc
jecxz
ficoms
and
jle
adc
pop
jae
push
mov
inc
cld
push
mov
popf
pop
add
xchg
lret
jbe
lret
sub
mov
adcl
pop
push
scas
cltd
andb
push
mov
jno
lods
les
stos
in
notl
scas
dec
sub
pop
enter
cmp
dec
and
and
outsl
std
insl
xchg
sbb
lret
mov
fisttpl
mov
xor
popf
push
cs
or
and
shlb
hlt
mov
out
and
ja
mov
xor
aad
pop
xchg
aam
lods
je
mov
push
mov
push
dec
or
and
insb
or
rcll
adc
mov
lds
popa
pop
push
test
and
test
stos
lahf
xchg
repz
jae
pop
cmp
mov
jle
xchg
in
jge
outsb
dec
inc
movsb
xor
or
sub
fisttpl
cmpsl
fimull
mov
push
in
cli
test
mov
push
adc
jns
and
fcoml
sbb
bound
ret
push
stos
loope
rcrb
jl
cmp
jo
or
sti
xlat
cmp
push
xchg
js
sbb
adc
lea
push
cmp
cmpsl
test
or
mov
lcall
fstpl
inc
pop
sub
and
push
jno
je
or
sarl
je
je
push
adc
call
jo
popf
sahf
adcb
adc
push
lahf
cmc
mov
scas
mov
lcall
push
xor
aad
push
imul
xor
loope
mov
xchg
xor
sbb
sub
cmpsb
stos
leave
pop
in
dec
lds
fstl
cmp
ljmp
push
fld
mov
in
test
jb
hlt
mov
pop
dec
xchg
arpl
dec
gs
pop
arpl
xor
mov
push
fcmovne
inc
leave
cmpsb
shl
movsb
xor
xchg
or
inc
test
out
push
ret
loopne
icebp
push
xor
in
push
cmp
rcrb
jno
addb
test
loop
and
dec
sbb
mov
mov
shl
lret
sbb
push
pop
out
adc
out
mov
daa
and
mov
lahf
push
and
push
pusha
jg
jge
cmp
cmp
mov
jmp
lcall
ficompl
scas
insl
mov
adc
mov
aaa
lds
cmpsb
mov
dec
push
lds
jl
sbb
push
add
add
xchg
out
push
add
cmp
push
xchg
inc
cmpl
aaa
sub
push
mov
xchg
out
xor
sbb
inc
add
jge
in
pop
test
mov
popf
je
bound
jo
cmp
movl
jle
add
scas
ss
sbb
push
mov
pop
jo
mov
mov
adc
jge
popa
mov
cmpsl
dec
loop
xor
xchg
lock
add
xchg
je
addr16
clc
push
ja
push
nop
mov
xchg
imul
fistps
xchg
mov
adc
shlb
push
xchg
bound
cmp
xor
in
je
into
das
pop
ret
arpl
jle
or
and
and
ret
push
sti
add
sbb
inc
ficoml
xlat
xor
mov
and
gs
mov
negl
gs
sbb
push
cmp
cli
daa
push
cmpsb
std
sbb
push
cmpsb
je
mov
xor
arpl
popw
jge
sti
lcall
and
mov
push
test
outsl
push
hlt
mov
gs
xor
push
sub
movsl
pop
xchg
or
jae
xchg
mov
andb
mov
fcoml
inc
mov
xchg
mov
iret
sbb
in
in
mov
sbb
adc
sahf
sbbb
inc
call
call
test
jp
xorb
sub
popa
shll
ficoml
js
frstor
cltd
mov
adc
in
adc
adc
ret
jp
push
roll
cmpb
in
pop
js
pop
add
js
cs
scas
js
imul
or
mov
jbe
daa
call
pop
adc
stos
xchg
popa
ja
out
mov
repnz
and
dec
ljmp
sbb
push
jae
out
bound
mov
shl
pop
adc
or
aam
vshufps
clc
scas
pop
addr16
dec
js
std
out
inc
sbb
inc
pop
das
pop
stc
sub
pushf
cli
mov
or
adc
xchg
flds
push
lahf
add
inc
icebp
cs
bound
orl
hlt
lcall
dec
popf
mov
xchg
stos
push
in
loopne
out
fdivrs
sarl
jge
rcl
hlt
pop
sub
mov
rcl
out
adc
add
mov
es
sub
rcrb
cmp
mov
mov
scas
loopne
mov
in
frstor
sti
xorl
mov
lahf
jne
xchg
icebp
ret
xchg
ret
rcl
ret
sbb
in
dec
push
and
lea
cmc
pop
mov
int
lcall
mov
leave
sbb
scas
cmpsb
xchg
mov
xchg
or
jae
fcmovnbe
jno
xchg
adc
inc
and
ret
lahf
add
inc
test
in
ret
mov
push
aas
in
add
adc
mov
ljmp
inc
dec
xor
mov
push
jno
shl
or
dec
pop
or
pop
bound
adc
mov
int3
cltd
gs
or
lods
rorl
add
ficoml
push
fadds
jg
add
push
mov
fwait
scas
xor
mov
dec
xchg
cmpsb
cmp
push
jbe
push
add
gs
psubusb
out
mov
sbbb
jae
lret
and
sub
add
sub
fildll
sub
xor
mov
mov
test
popa
sar
roll
test
cmp
out
into
adcb
lods
popf
xchg
sarb
adc
xchg
mov
ljmp
pop
cmc
push
mov
aaa
bound
repnz
std
loope
and
stos
leave
shlb
jp
insb
sti
hlt
mov
fnstsw
inc
cmp
add
mov
imul
les
or
les
pop
jnp
ds
mov
adc
sub
sbb
jmp
leave
xor
lret
mov
xor
mov
xchg
sbb
or
mov
jae
xchg
mov
fildll
jmp
xlat
into
pop
sub
clc
push
mov
ret
stc
negb
idivb
ret
gs
adc
data16
jo
jbe
fsubp
lahf
sbb
push
cmc
ss
cmp
add
add
sbb
sub
jo
rorl
mov
push
test
pop
dec
sbbl
iret
hlt
into
and
cltd
lret
mov
cmp
jle
push
mov
mov
dec
jb
decl
pop
mov
jmp
lods
dec
or
stc
push
sub
lret
adc
push
jg
movb
or
mov
inc
lret
pop
mov
push
repnz
mov
out
repz
mov
jno
cmp
inc
push
push
adc
sub
add
lcall
fcmovu
xor
in
aaa
xor
iret
jbe
cmp
ss
mov
push
out
mov
jnp
and
les
dec
mov
ret
inc
dec
jbe
cmp
movsl
std
hlt
stos
stc
das
cmpsl
pop
inc
xlat
insb
pop
adc
cwtl
mov
cld
sub
stc
push
fbstp
fcmove
shll
sub
sahf
aad
xor
and
in
push
testl
xchg
mov
mov
jl
shl
inc
icebp
lock
mov
lret
cmp
outsb
jg
xor
jne
mov
inc
fsubrl
repnz
int3
loope
sbb
hlt
push
loopne
sbb
pop
cmp
das
aaa
xchg
sub
hlt
or
mov
aaa
icebp
lret
or
push
rorl
popa
dec
or
sub
dec
test
xchg
test
fisttpll
repz
bound
test
scas
xchg
shll
mov
xchg
ljmp
pop
mov
clc
idivb
push
mov
addb
daa
aas
jno
mov
int3
pop
lret
mov
fs
inc
push
ds
repz
cmp
xchg
pop
clc
xor
adc
pushf
test
mov
jb
nop
stos
xchg
fldl
xlat
mov
sub
lods
cmp
scas
sbb
adc
mov
or
popl
mov
lods
rolb
dec
push
lahf
shll
scas
push
push
add
sub
or
loopne
sub
inc
scas
pop
sbb
xor
jle
sbb
scas
ret
loop
adc
inc
into
rolb
mov
mov
sbb
add
sbb
jge
lods
stc
shlb
push
add
xor
insb
loope
sub
adc
push
push
cld
or
std
adc
dec
call
adc
pop
xchg
add
jl
cmpsl
mov
xor
cmpsl
daa
and
mov
sbb
aaa
je
push
ret
push
lods
add
call
fisubs
add
lret
std
and
dec
xorb
movsl
mov
sub
jno
fstl
test
dec
fbld
and
lret
test
faddl
and
mov
std
jne
inc
out
and
mov
ss
xor
fwait
sbb
cmp
mov
das
mov
lcall
xchg
xchg
sbb
dec
push
add
lahf
test
mov
bound
mov
fnstcw
sbb
xchg
jne
jno
int
cwtl
push
iret
add
sub
in
mov
xchg
push
xor
inc
int
test
xlat
das
sbb
data16
dec
adc
cmp
popf
push
inc
push
or
pop
idiv
sub
or
inc
adc
loop
lret
and
and
ljmp
mov
negl
add
push
xchg
sub
movsl
mov
repnz
aaa
ds
cmpl
pop
adc
jnp
push
repnz
xchg
shr
fcoml
pop
lret
mov
sub
outsb
clc
ret
fidivl
lahf
mov
mov
setl
or
lahf
jle
dec
cmpsb
add
test
add
xor
push
adc
dec
sbb
xor
mov
pushf
daa
sub
xorb
jne
das
push
lret
mov
in
mov
mov
dec
inc
lds
scas
xor
lods
movsl
not
jbe
shlb
push
sub
imul
ret
pop
xchg
adc
pushf
sbb
xchg
in
imul
cltd
jbe
filds
popf
adc
popa
inc
cmp
std
add
mov
pusha
xchg
rorb
mov
out
mov
add
inc
add
mov
dec
or
ja
sbb
mov
jge
or
shrl
jmp
push
xchg
xor
dec
sub
xor
adc
xchg
jmp
fucomi
lahf
out
pop
mov
subl
scas
jl
ret
sbb
xchg
mov
adc
and
mov
cmp
icebp
andl
movsb
mov
arpl
cld
xchg
ret
insl
adc
cmp
xor
pop
mov
pop
testb
call
test
daa
insl
push
cmp
aam
pusha
cmpsl
mov
fdivs
outsb
xchg
sbb
pushf
jmp
lret
adc
cwtl
test
xchg
insb
cmpsl
js
cmpsl
pop
jmp
daa
outsb
in
inc
ja
in
icebp
cwtl
paddb
pusha
in
and
ret
xchg
mov
cvtdq2ps
jg
popa
push
mov
pop
pop
pop
add
dec
adc
pop
xchg
in
data16
pusha
or
push
stos
xor
lock
lods
das
cltd
je
pop
mov
test
aad
dec
push
outsb
sahf
cld
mov
inc
enter
imul
js
pusha
jg
inc
or
repz
mov
add
mov
pop
fucomp
mov
das
subb
aaa
xchg
fisttpll
outsl
ss
je
adc
mov
out
adc
jb
sub
adc
pop
repz
xchg
mov
jne
ja
jne
xlat
push
cwtl
leave
xchg
pop
dec
or
mov
jp
loop
je
xchg
push
mov
sub
cli
data16
iret
jecxz
dec
adc
gs
movsb
pop
cmp
mov
or
sbb
add
shrb
cmpb
test
loope
fistl
xlat
push
shlb
dec
cld
and
stos
push
add
jnp
clc
inc
ret
push
sbb
dec
js
ja
dec
scas
cmp
xlat
cmp
and
jecxz
rorb
cmpsl
mov
testb
dec
scas
cmpsb
movsl
mov
xor
sbb
mov
mov
add
cltd
mov
lret
inc
aaa
inc
enter
int
add
fst
roll
mov
sub
repnz
and
sarb
push
pop
fld1
loope
les
in
lret
jle
andb
rcr
jo
out
jmp
sub
scas
pop
fsub
adc
xor
push
jo
adcb
xchg
xchg
gs
jle
cmp
push
xor
add
ret
mov
add
sub
pop
xchg
xchg
cld
push
dec
cmpsl
addr16
and
cmp
push
loopne
daa
fwait
hlt
xor
rorb
adc
fucom
imul
mov
jne
in
jnp
jno
sub
jb
pop
xor
dec
mov
mov
mov
dec
pop
or
mov
lcall
mov
dec
dec
fcmovb
sbb
or
imul
jne
cmpsb
mov
pop
cmc
jge
cli
out
mov
gs
inc
daa
dec
jb
inc
hlt
sub
mov
gs
inc
adc
add
inc
xchg
bound
xchg
cmpl
aaa
aaa
jg
adc
push
mov
loop
ret
mov
jmp
jg
cmpsb
daa
pop
aam
je
sub
jbe
lods
in
in
xchg
enter
push
ljmp
xlat
xor
mov
xor
mov
test
sbbl
mov
xchg
cmp
lret
jnp
adc
add
cli
xor
or
and
into
add
mov
xchg
cld
dec
or
pop
loope
inc
test
push
jle
outsl
jmp
push
ljmp
test
mov
add
xchg
jbe
inc
fwait
ret
int
xor
std
icebp
leave
or
clc
jle
cs
jne
imul
lods
lcall
dec
dec
xchg
out
gs
leave
push
mov
xchg
lret
in
loopne
ljmp
fnstsw
pop
xlat
or
insb
xchg
inc
daa
lcall
aas
call
push
arpl
pop
rcll
in
or
test
dec
and
mov
arpl
adc
shl
cmc
cld
mov
aaa
aas
das
jnp
icebp
test
inc
lods
stc
mov
hlt
je
cmp
dec
cmp
pop
push
cmp
sbb
jmp
push
mov
add
xchg
in
jbe
dec
xor
sub
gs
mov
sub
mov
push
pop
mov
xchg
stc
in
jg
mov
jl
push
push
cs
push
and
mov
dec
pushf
js
sbb
call
cltd
imul
sar
fwait
jne
movsb
and
dec
lret
jb
add
push
jae
add
lret
lods
aas
xorl
lahf
xchg
insl
cmp
jl
xor
or
or
fisubrs
adc
push
push
or
xchg
mov
stos
jbe
push
mov
xor
lret
in
inc
sub
stos
mov
sti
inc
sbb
push
psubsw
xchg
xlat
xor
mov
les
adc
sbb
stos
pop
add
and
outsl
out
xchg
enter
add
sahf
test
or
sbb
or
or
es
xchg
mov
add
sbb
int
or
js
inc
pop
sarb
test
in
mov
scas
insl
or
jge
mov
dec
cmpsl
sahf
jmp
sarl
aam
sub
je
push
push
fiaddl
jmp
rcrb
popa
and
repz
dec
xchg
push
in
and
push
xchg
xlat
fdivl
into
inc
ja
push
sbb
cmp
into
sub
hlt
mov
movb
ret
jb
fildl
ds
mov
fyl2x
ret
mov
xor
fstps
je
je
std
decl
adc
in
imul
icebp
mov
push
insb
inc
or
hlt
inc
fwait
xor
mov
xchg
es
jae
dec
push
pop
sti
push
insl
sbb
and
ss
mov
sahf
push
movsl
test
dec
and
fnstenv
mov
lahf
add
add
jae
push
mov
test
adc
adc
jnp
mov
test
pop
out
dec
push
mov
cmpsl
xor
cmpsl
mov
push
pop
mov
aad
test
stos
popa
fs
mov
repnz
popa
fstps
addl
dec
mov
subl
adc
and
mov
cmp
mov
lods
daa
push
xchg
xorl
mov
stos
inc
add
std
xor
mov
jns
pushf
jns
xor
xchg
xchg
data16
pop
cltd
sbb
mov
mov
pusha
sahf
fstps
push
mov
or
jl
xor
cltd
jge
fdivp
ret
outsb
rorb
outsl
mov
test
fdivp
and
fbld
fidivl
mov
insl
int3
mov
ds
inc
enter
pop
push
popf
inc
mov
cmc
inc
cltd
jo
addr16
add
js
je
lret
jg
xor
adc
es
sbb
arpl
shll
imul
or
sbb
shll
dec
mov
pop
in
fldt
xor
outsb
addr16
mov
outsb
orb
cltd
incb
bound
mov
jb
pop
jg
or
ret
subb
pusha
or
popa
outsl
call
push
xchg
dec
ja
push
adc
cmp
mov
in
mov
dec
mov
cmpl
mov
addr16
repnz
mov
xor
popa
seto
je
sbb
js
aad
les
push
xchg
jbe
sbb
push
lret
or
aaa
mov
ljmp
cmp
push
test
ss
rcll
xchg
push
push
add
cwtl
xor
fisttps
stos
push
jnp
push
cmc
push
add
sub
push
pushf
xor
push
fsubrs
adc
fisubl
scas
inc
sbb
outsb
push
cld
inc
rcrb
pop
xor
jno
sub
lds
and
ds
mov
push
lds
mov
int
ds
mov
xor
ret
add
in
or
mull
fwait
or
icebp
repnz
loope
dec
sub
and
push
testb
pop
pushf
in
pushf
popa
sti
sar
xchg
call
loope
mov
mov
stos
shrl
addr16
add
sti
sbb
mov
push
fdivs
jecxz
ljmp
xor
jmp
cmp
movsl
mov
pop
addr16
add
jno
cmp
add
mov
mov
xor
push
lret
psrad
sti
je
cmp
rcrb
std
sbb
mov
popa
stos
inc
nop
inc
lret
cli
cmp
test
je
cmp
in
movsl
jl
push
dec
mov
lds
into
lret
dec
mov
imulb
inc
stos
out
xchg
and
jmp
aad
xor
fs
xorl
ret
or
xor
push
fdivrs
pop
scas
sub
mov
loop
xchg
es
add
ljmp
jns
fisttps
in
xchg
inc
out
jne
sub
std
lock
fadd
xor
adc
xor
xor
jns
test
jge
or
add
shll
bnd
and
xchg
icebp
adcb
push
outsl
in
mov
aad
or
sub
or
xor
aad
mov
xchg
jl
cmpb
clc
mov
jle
into
movsl
mov
and
movsl
fmull
inc
cmp
inc
pop
or
push
fincstp
sub
jp
mov
or
sarl
movsl
adc
lcall
addr16
call
add
in
adcb
pop
ret
mov
cli
mov
repnz
jmp
out
fidivrl
mov
adc
movsb
adc
cmp
add
subl
cmp
mov
enter
int
mov
jnp
popa
cmp
jecxz
in
or
cmpsl
insb
xor
clc
jge
js
fisubrl
rcrb
cld
mov
adc
enter
xchg
ds
sub
lahf
or
scas
shr
sahf
ret
mov
in
mov
jmp
mov
add
inc
jbe
nop
ja
int3
arpl
outsl
popa
pop
mov
lret
pop
iret
decl
mov
push
xor
test
adc
inc
jmp
addl
out
jb
movsl
adc
fs
insb
mov
push
cmp
adc
cli
enter
and
pop
jecxz
inc
aad
fildl
aas
lock
mov
push
jbe
add
lds
adcb
ss
jg
jnp
jg
push
xor
iret
push
insb
sbb
pop
inc
sbb
cmp
xchg
sbb
stos
js
rcr
sbb
or
lret
ja
aaa
repz
mov
xor
iret
adc
rol
pop
je
ret
push
imul
aaa
test
xchg
iret
adc
faddl
mov
jnp
out
je
inc
or
daa
adc
sti
xor
aas
pop
enter
xor
stc
aaa
push
jecxz
jl
xchg
mov
mov
cli
sarl
and
mov
cmp
sti
xchg
test
mov
ficoml
cmp
test
sarl
sarb
add
dec
and
or
pop
sub
imulb
nop
hlt
insl
mov
cs
fcoms
pop
mov
dec
int
mov
jecxz
prefetchnta
cwtl
cltd
fdivs
inc
stos
add
cmp
scas
divb
sub
adc
shl
test
push
mov
push
and
lods
loop
jp
mov
insb
or
lods
inc
loope
ds
outsl
sub
int
push
jl
loope
pop
jne
shrb
je
into
ja
push
or
adc
mov
les
mov
or
shrl
out
xchg
dec
out
xor
dec
mov
mov
shl
xor
mov
adc
sbb
pop
mov
xchg
test
jno
sub
stos
jg
jbe
mov
popf
sbb
jnp
shlb
lock
pop
lahf
mov
push
mov
fimuls
pop
das
dec
cmp
imul
xchg
dec
lret
inc
add
in
ds
xchg
push
call
fstpt
mov
inc
out
xchg
mov
fstps
not
gs
roll
jnp
mov
fucomi
jg
scas
or
nop
inc
mov
aas
arpl
cwtl
push
mov
subb
add
adc
mov
xchg
daa
jg
and
pop
clc
stc
loop
mov
fs
rcrl
mov
mov
adc
xchg
mov
shlb
sbb
pop
lock
mov
dec
mov
sbb
icebp
or
into
stc
push
add
and
push
lds
cs
and
pop
sbb
adc
cwtl
xlat
mov
aas
cltd
stos
lret
jle
cwtl
sub
xchg
pop
test
sbbl
js
push
lahf
push
xchg
loopne
adc
ds
outsb
sbb
jge
in
push
cmp
sahf
adc
lcall
in
sbb
pushf
jp
int3
inc
and
in
cmpsl
mov
sbb
mov
imul
imul
sti
cmc
jp
xor
inc
sbb
ss
xchg
out
adc
sbb
call
push
mov
lret
push
out
leave
sbb
mov
or
popa
inc
fdivrs
mov
arpl
push
sbb
fistps
cmp
pop
jecxz
push
fisubl
in
popf
js
xchg
inc
int
xlat
andl
lods
sub
dec
sub
popf
cwtl
jp
roll
je
sub
xlat
shlb
out
xchg
loope
fstl
rcll
popa
dec
sub
in
cmpsl
sarb
mov
shl
sub
sbb
aam
leave
test
shrb
cmp
fdivl
pop
in
xlat
loopne
in
xchg
add
addr16
lahf
cmp
cmp
loop
inc
xchg
xor
xchg
mov
ds
sub
xchg
js
test
mov
fsubrs
sbb
and
dec
sbb
sbb
mov
mov
cmpsb
ds
daa
xchg
cmp
sbb
outsb
adc
roll
nop
int3
pop
lods
enter
mov
sbb
adc
pop
pop
stos
mov
movsl
ss
call
cs
dec
mov
adc
mov
clc
push
rcll
outsb
pop
xor
subl
es
add
sbb
data16
jnp
xor
lret
push
push
cli
dec
sub
scas
dec
test
sti
pop
add
mov
mov
nop
push
mov
std
pop
outsl
out
pop
ja
jnp
adc
ret
sbb
mov
lret
test
jmp
js
mov
pop
xchg
sub
lods
scas
idiv
xchg
lea
jecxz
in
xchg
stos
nop
inc
mov
jno
sub
or
fiadds
jp
fcom
stos
mov
pop
add
rcrl
pushf
pop
xchg
xchg
jae
movsb
xorb
dec
dec
add
mov
in
in
cld
mov
pusha
ljmp
jae
leave
mov
pop
sub
push
cs
mov
push
rolb
jle
xchg
fucomip
sbb
add
or
mov
xchg
lahf
sahf
int
shl
dec
push
out
aaa
je
dec
and
sub
sub
sbb
subl
lahf
mov
sarb
mov
xor
out
fs
call
int3
or
pusha
jno
lret
rclb
daa
bound
loopne
cmp
pop
push
xchg
dec
cmp
or
adc
aas
int3
popa
cwtl
lea
aad
lock
xorb
je
push
mov
sub
fmul
imul
aam
add
xchg
xchg
mov
or
test
fsubrp
rolb
dec
xchg
pop
mov
mov
dec
inc
lret
sbb
ret
xor
scas
insl
cmp
fstpt
mov
arpl
dec
test
pop
pop
int
pop
out
lds
mov
jle
adc
mov
leave
mov
mov
add
sahf
pop
mov
mov
ss
dec
stos
imul
lea
mul
jmp
cmp
cld
push
rclb
add
cmpsl
push
push
sub
adc
cs
jg
scas
movsb
ss
test
je
and
sbb
sbb
pop
mov
and
dec
lahf
push
stc
jecxz
inc
outsl
sbb
xchg
mov
aam
arpl
and
mov
sub
ja
cli
rcll
and
adc
dec
sahf
int
sbb
or
adc
addr16
out
imul
cwtl
and
and
int
pop
jns
loopne
mov
pop
cwtl
frstor
sbb
push
mov
push
mov
andl
xor
push
test
andl
inc
xor
std
clc
mov
loop
inc
lret
push
popf
adc
and
outsl
sub
sub
dec
in
push
imul
mov
fwait
dec
push
out
aas
add
dec
or
js
mov
pop
lret
and
push
addr16
adc
cmp
out
mov
jp
adcl
xor
aaa
ljmp
pop
pop
jns
push
imul
sarb
aaa
ret
aas
inc
in
jae
adc
pop
repnz
push
repz
mov
testl
mov
push
rcl
ljmp
aam
sub
mov
mov
in
and
adc
lret
nop
cmp
sub
movsl
hlt
and
pop
test
dec
sub
jo
xchg
in
out
mov
inc
inc
xchg
add
pop
lcall
ret
in
sub
shlb
or
add
out
jns
ret
ja
daa
adcl
mov
hlt
mov
pop
jge
ret
or
xchg
ljmp
movsl
in
sbb
pop
scas
repz
das
jb
cwtl
jecxz
add
add
sti
fldenv
rorl
call
dec
test
ljmp
xchg
and
faddp
fwait
movsb
add
pop
adc
mov
lret
and
xchg
dec
and
jns
adcl
stos
jp
mov
push
mov
sub
repnz
add
leave
les
cmp
push
insl
repz
into
fnstcw
add
addr16
adc
stos
icebp
cli
jecxz
xchg
rclb
pop
loop
or
xor
clc
mov
das
fistpll
mov
and
xchg
sbb
gs
loopne
sbb
jmp
lods
jge
fs
jnp
inc
sbb
outsb
imulb
jmp
cli
aas
in
movsl
sar
mov
xchg
mov
or
arpl
sub
in
and
jmp
cli
rcrl
cmp
dec
cmp
test
arpl
notl
mov
inc
filds
dec
cltd
sub
out
cwtl
addr16
push
test
mov
outsb
push
push
mov
pop
cmp
fimuls
adc
pop
ret
in
ret
mov
rolb
push
pop
sbb
aam
push
fwait
andl
arpl
cmp
in
popw
popf
jp
cmpsl
movsl
xor
and
xchg
cmp
xchg
inc
push
imul
sbb
lock
aam
inc
nop
std
js
push
fs
or
pop
pop
mov
out
adc
xor
and
push
xchg
enter
sbb
xchg
dec
mov
dec
negl
rorb
sbb
jmp
fmull
jmp
pop
iret
sbb
loope
iret
pop
push
scas
les
fs
movsl
lret
mov
cs
test
pop
adc
cmp
xor
outsl
xor
nop
jb
or
xor
mov
dec
ljmp
lods
rcr
mov
cmp
lahf
cwtl
sbb
cmp
or
mov
adc
mov
push
pop
aas
xor
lret
int
fldl
lcall
xchg
dec
aaa
fisubl
push
fsubl
ljmp
ja
mov
jmp
test
jle
sarb
and
icebp
xor
fistpll
sub
pop
push
add
mov
mov
or
mov
test
inc
sbb
js
rcrl
xor
ss
call
mov
ret
loopne
push
sub
dec
sbb
shr
xchg
outsl
cwtl
loope
imul
xchg
inc
shll
jmp
adc
in
data16
mov
xchg
fwait
insb
xchg
xchg
loopne
xlat
push
out
in
enter
mov
jl
xchg
out
mov
push
out
adc
push
scas
mov
push
ret
in
sbb
inc
les
mov
leave
mov
or
inc
jle
in
adc
xchg
push
popf
repnz
pop
stos
fidivl
or
test
enter
xchg
add
loop
loopne
jmp
sub
mov
in
sahf
inc
ljmp
rcr
ds
scas
div
dec
leave
lahf
lret
add
xor
sarl
dec
mov
jp
pop
cmp
inc
lret
sbb
pop
movsl
scas
scas
jns
jbe
jecxz
sub
mov
test
jmp
je
js
inc
adc
shll
negb
jmp
cmp
hlt
inc
mov
cmpsb
push
sbb
or
out
and
pop
out
lcall
add
bound
dec
jne
gs
mov
add
in
leave
cmpsb
and
jge
shr
mov
sbb
adcb
jmp
repz
aam
out
movsb
xchg
inc
cmc
ljmp
sahf
push
loop
ja
aaa
adc
push
test
lods
scas
dec
out
shr
popa
loopne
rcrb
addr16
jl
sbbb
stos
push
je
adc
jle
add
jae
ret
data16
add
jae
pavgb
push
fsubp
mov
mov
adc
aam
cmp
lret
dec
cmp
cwtl
fdivs
stos
add
icebp
jb
push
dec
xchg
arpl
xchg
xor
pop
and
dec
add
fisubrs
andb
push
pop
hlt
mov
sub
push
das
pop
div
or
mov
add
and
popa
mov
lods
insl
xor
xchg
gs
arpl
adc
push
cmp
dec
inc
xchg
adc
mov
jmp
xchg
mov
cmpsl
mov
gs
or
lcall
roll
ljmp
mov
or
mov
repnz
das
je
fisttpll
sub
jb
inc
xor
imul
aad
pop
push
jmp
mov
jb
lds
dec
dec
lea
nop
push
outsb
sub
sub
scas
cwtl
stc
repz
std
jl
int
test
mov
mov
ficompl
sbb
mov
sub
sbb
addl
js
sub
cld
nop
lahf
ljmp
push
xchg
shrl
fdivr
push
imul
and
pop
sub
xchg
cmpsb
mov
jno
popa
fnstcw
hlt
fisubs
nop
xchg
setb
inc
arpl
or
mov
mov
xorb
pop
subl
fmuls
mov
cmp
inc
mov
mov
push
fcoms
ret
ja
mov
dec
xor
pushf
ljmp
jne
cmpsb
nop
negl
inc
or
cmp
push
test
js
iret
aas
pop
hlt
arpl
fcompl
orl
test
ljmp
repz
mull
sti
push
mov
rcll
fwait
xchg
ret
lods
cs
imul
pop
mov
add
andl
pop
fisubs
or
mov
jbe
adc
and
stc
pop
mov
sarb
adc
xchg
out
and
cmp
mul
cmp
imul
stos
insb
push
imul
lcall
dec
mul
outsb
sub
pop
sbb
mov
or
int3
shr
push
or
mov
mov
nop
sub
ss
out
pop
sub
cmp
cld
or
or
dec
fxch
fs
mov
add
notl
add
repz
hlt
mov
mov
sub
lcall
in
jl
lock
ljmp
and
adc
dec
movsb
mov
clc
mov
cmp
ss
sbb
jae
cmp
js,pt
cltd
in
push
pop
sub
jnp
xchg
mov
adc
adc
or
add
je
or
sub
movsl
jnp
dec
lea
add
cwtl
sub
scas
pop
or
lret
aad
out
xor
xor
push
decb
adc
add
imul
xchg
ss
popl
lds
xchg
mov
xchg
cwtl
dec
lods
call
sub
cli
and
test
pushf
ds
lds
lret
cltd
iret
mov
push
add
and
hlt
push
inc
mov
push
xchg
inc
adc
pusha
mov
fadds
dec
dec
xor
xchg
dec
insl
stc
cs
into
inc
leave
push
les
add
icebp
ret
pop
jp
adc
stos
ror
pushf
jno
mov
pop
imul
repz
pushf
xchg
jge
adc
jmp
mov
les
in
ss
in
or
addb
push
lret
sti
jge
dec
fnop
xor
jge
mov
xchg
xchg
inc
jae
jmp
add
and
lret
dec
jnp
and
loopne
scas
xchg
mov
cmp
addb
jns
cli
adc
insb
push
mov
clc
enter
or
or
lahf
repz
fs
sbb
mov
in
xor
stc
xchg
std
movsb
adc
int3
sbb
xchg
and
insl
mov
mov
mov
mov
gs
js
clc
add
insl
push
ffree
add
mov
fldl2e
iret
ja
sub
lea
addr16
outsb
mov
ljmp
xor
push
dec
dec
popa
mov
inc
or
xor
cmp
mov
rcll
cmp
popf
xor
scas
shlb
jb
and
mov
rcll
mov
mov
les
movsb
jecxz
xchg
cmp
insl
cltd
pop
loop
cmpl
pusha
sub
repnz
mov
shr
sub
inc
data16
xchg
outsb
mov
les
or
dec
orl
les
mov
or
mov
adc
jmp
cli
popf
mov
shlb
ret
leave
push
rorl
cmp
push
mov
mov
movb
test
daa
lcall
add
jne
inc
jno
lods
sbb
dec
mov
jecxz
sub
ja
loopne
and
mov
or
adc
ficoms
int
push
cmpsl
sbb
sbb
inc
push
sahf
or
ss
inc
dec
out
dec
fnstsw
lods
imull
fcoms
idivl
cli
les
loop
jno
xorl
jmp
sbbb
lret
dec
dec
cld
xchg
cli
adc
pop
jle
push
mov
or
in
xchg
fsubrs
shlb
movsl
inc
les
xchg
pop
loope
pop
dec
lods
mov
ja
popa
aaa
pushf
xlat
ss
push
pop
adc
sub
and
mov
sub
mov
pop
jmp
push
insl
in
pop
or
loopne,pn
xchg
inc
add
mov
imul
loop
xchg
sub
loope
and
cltd
mov
jb
mov
jmp
mov
cs
push
sbb
les
xchg
pop
mov
out
cld
insb
mov
jnp
pop
notb
adc
fisubrl
jge
int3
das
int
mov
lods
add
stc
mov
mov
jbe
and
adc
push
mov
adcb
inc
or
pop
add
ret
mov
addb
gs
clc
or
sub
mov
nop
xor
in
pop
insb
sahf
push
and
sbb
jbe
daa
je
fstps
pop
mov
test
cmp
sbb
xor
rolb
inc
adc
push
mov
iret
push
sbb
add
je
mov
movsl
adc
jge
enter
cmp
and
jecxz
stos
rcrl
jge
add
pop
sub
mov
test
and
xchg
mov
in
pop
xchg
xchg
mulb
mov
adc
sub
inc
xchg
mov
je
testb
inc
mov
xchg
pop
cli
shlb
adc
movl
repnz
jmp
aam
inc
inc
or
sbb
stos
cmpsl
jle
int
mov
leave
mov
ja
enter
cmpsb
cmpsb
fsubr
call
and
xorl
xor
jae
ljmp
pop
sbbb
xor
jne
faddl
outsb
mov
jmp
scas
fsub
mov
fstps
aad
push
lret
pop
xchg
push
enter
bound
pcmpeqb
sbb
loopne
sub
pop
sbb
or
dec
sub
jae
cmpl
fdivrl
pop
ds
fwait
outsl
insb
lock
cld
sbb
mov
mov
cmp
stos
push
fnstcw
jb
leave
adc
insb
and
int
and
add
inc
cmc
cltd
stos
push
ss
shrb
jae
pop
push
or
mov
cmp
mul
and
fs
mov
add
pushf
cli
mov
dec
imul
mov
inc
outsl
enter
nop
ss
dec
add
mov
sub
cld
sarl
inc
lock
xor
jnp
fnstenv
or
adc
das
mov
testl
fs
out
cmp
outsb
mov
pusha
fsubrl
je
sub
cli
cmp
dec
adc
mov
pusha
pop
imul
lods
shrb
sbb
jp
mov
push
fistpl
mov
pushf
and
ljmp
mov
fnstcw
out
push
mov
ret
xor
pop
push
push
stos
cwtl
aaa
addr16
push
stc
xor
js
push
and
pop
or
mov
xorb
in
daa
adc
mov
push
test
sbb
adc
shll
pop
jg
test
fsubl
jb
adc
adc
xchg
lahf
sub
pop
jecxz
in
and
sub
js
xor
jle
inc
mov
mov
and
push
dec
popa
imulb
cmc
mov
aaa
sbb
jl
lcall
std
fbld
ret
pop
jns
adc
ja
fsubs
punpckldq
cmpsl
repnz
and
int3
scas
add
ret
add
sub
xchg
loope
mov
gs
dec
and
dec
mov
jg
jo
jns
pop
jmp
mov
push
push
repz
dec
fmull
movsl
popa
ret
stos
loop
arpl
rorl
pop
roll
dec
ficoml
pop
es
jp
insl
movsb
xor
mov
dec
pop
mov
loop
mov
push
scas
mov
or
add
dec
sub
mov
push
hlt
aam
pushf
push
xchg
cld
dec
xchg
jbe
and
inc
fcmovb
in
sub
mov
roll
add
out
xor
iret
or
fisttpll
dec
stos
out
dec
mov
test
push
ds
xor
testb
mov
out
cmpsb
or
xor
loop
mov
mov
mov
and
cltd
sahf
xor
inc
mov
in
xor
sub
xchg
je
jl
aaa
rcrl
mov
pcmpgtb
loope
jb
lret
sbb
push
pop
lods
jecxz
mov
lcall
cmp
xor
and
mov
mov
push
mov
ss
sub
mov
shl
aaa
mov
cli
stos
push
das
cmp
cmp
and
add
or
sub
test
inc
mov
fdivrs
mov
fstps
push
lret
test
pop
jp
sub
daa
push
jno
add
sbb
leave
sub
cmpsb
mov
sbb
fwait
lcall
jb
dec
cmpb
push
sti
out
mov
mov
mov
shrb
scas
or
inc
arpl
cmpsl
inc
mov
imul
es
adc
mov
hlt
sbb
faddl
inc
push
xchg
mov
xor
fcomip
jno
sbb
scas
testl
in
pop
in
dec
cmp
ja
ss
inc
test
mov
mov
sbb
mov
sbb
mov
out
movsb
jns
mov
loop
div
pminub
adc
icebp
pop
les
pop
ja
mov
out
push
sbb
dec
aad
cmp
or
test
cmp
testb
sbb
jge
push
or
push
addr16
pmullw
in
loopne
pop
inc
mov
add
nop
psubq
nop
sub
iret
jo
fwait
sbb
xor
and
das
pop
scas
ja
mov
sbb
adc
out
adc
movsl
sub
loopne
pop
mov
pop
mov
enter
imul
xchg
enter
aam
repz
lock
dec
mov
and
test
pop
xchg
mov
mov
mov
mov
push
scas
out
add
add
test
loopne
push
jmp
mov
xchg
mov
loopne
sbb
jns
sbb
push
les
mov
mov
data16
cmpsb
icebp
and
lds
sbb
loope
sbb
mov
cwtl
inc
dec
lret
pop
sbb
aam
int
sbb
fucom
xchg
xchg
icebp
aas
insb
hlt
sbb
jmp
inc
xchg
push
mov
cltd
mov
bound
mov
pop
jle
test
push
insb
push
push
popf
add
das
adc
scas
xchg
in
js
inc
sbb
sub
inc
int
and
add
mov
ss
jo
lcall
loope
push
dec
dec
mov
cmpsb
mov
and
iret
xor
dec
sub
aad
pop
aaa
test
pop
roll
lret
cmpsb
cmp
iret
jle
cmp
lods
cmpsl
fsubl
in
in
sbb
xor
pop
loopne
cmp
cld
std
push
gs
inc
icebp
xchg
xchg
xor
pusha
imul
inc
push
ss
lods
data16
pop
lock
ss
outsb
cmp
mov
push
nop
jge
jb
mov
xor
repnz
or
leave
sub
xor
xor
or
into
notb
mov
js
mov
or
idivl
jbe
mov
adc
sbb
add
sbbb
xchg
push
dec
ret
jnp
inc
fidivrl
push
mov
idivl
jb
mov
hlt
movsb
sub
mov
cli
nop
fisubs
shrb
loop
in
ds
bound
jl
push
push
or
in
adc
inc
jge
icebp
jp
js
or
xchg
push
push
jbe
enter
sahf
subl
es
inc
stos
mov
sub
jecxz
mov
or
add
in
xchg
dec
mov
pop
mov
insb
add
inc
iret
cmp
cmp
lahf
mov
repnz
and
rorl
cmc
mov
pop
out
sbb
xor
xchg
ja
or
xchg
pop
sbb
mov
mov
outsb
loope
in
cld
mov
mov
pop
in
push
inc
adc
xor
repz
cmp
mov
fnstenv
je
pop
or
stos
sbb
test
add
popa
into
mov
cwtl
mov
xchg
xchg
fwait
mov
loope
es
into
add
int3
shll
popa
mov
xorl
xor
fidivrl
mov
clc
les
add
mov
ljmp
jp
test
mov
push
cs
push
ja
jne
hlt
out
mov
xchg
cmp
loope
xchg
loop
mov
xchg
cmpsb
popa
imul
jbe
sbb
repz
sahf
dec
cmp
outsl
cmpsl
fs
push
sub
mov
popa
ja
ds
adc
enter
nop
push
lahf
dec
push
dec
inc
xlat
mov
mov
bound
cs
xor
test
ss
add
int
lret
andl
push
or
push
pop
ss
scas
out
out
mov
or
sar
sahf
shll
lret
outsb
into
push
push
push
ficompl
push
hlt
cmp
int
testl
repz
push
enter
test
bnd
mov
fstl
add
fildll
lock
jb
mov
xchg
fsts
imul
fcompl
es
jns
xchg
mov
movsl
cmp
cmpsb
xchg
cmpsl
les
jno
cmp
shlb
inc
inc
test
xchg
mov
dec
sahf
xchg
mov
nop
decb
fisttpll
xchg
mov
mov
xchg
sahf
sbb
ret
shlb
lock
mov
mov
dec
sbb
popa
or
mov
int
imul
xor
cmp
xchg
push
adc
xchg
cmp
pop
shl
fcmovbe
pop
loopne
push
mov
std
aam
sub
mov
daa
push
je
subb
lods
cmp
mov
test
movntps
rorb
jne
and
lret
imul
inc
fisubrs
imul
mov
jp
xchg
mov
jno
jnp
or
and
jl
pusha
ret
addr16
stos
dec
sub
mov
scas
loope
in
sub
lods
repnz
in
xor
push
push
pop
mov
inc
inc
add
sbb
pop
mov
and
add
negl
pop
mov
call
xchg
faddl
out
jae
adc
icebp
sub
cltd
pop
mov
fucom
push
adc
popa
mov
or
dec
fistps
test
test
stos
lcall
fsubrl
hlt
adc
out
and
sbb
pop
outsb
pop
add
push
pop
fisubl
adc
loopne
cmpb
scas
xchg
shl
cwtl
pushf
sbb
dec
popf
test
negb
mull
jmp
lock
jns
push
ret
push
xchg
sub
jp
fs
push
mov
and
sbb
and
and
fidivrs
fadds
rorl
faddp
inc
rcrb
imul
inc
out
mov
out
lret
fcmovnu
push
sbb
cld
mov
loop
fisubrs
push
jecxz
xchg
mov
inc
test
sub
pop
cmp
lret
rol
nop
adc
ljmp
stc
lret
sub
shlb
cmp
ficompl
call
pop
lods
lock
loopne
cwtl
inc
addr16
shl
and
or
push
lcall
and
test
mov
std
cmp
add
shl
push
sarb
data16
xlat
jno
sub
lock
pop
inc
negl
lret
push
inc
xor
xor
sbb
add
rcr
test
pop
lock
sbb
out
push
adc
mov
fbstp
out
jl
sti
lahf
in
aas
std
mov
add
dec
xchg
dec
push
add
sbb
inc
lret
cli
push
or
cmpsb
cmpb
inc
lock
enter
call
inc
sub
cmpsb
pop
inc
inc
inc
xorl
lret
mov
dec
call
push
sti
sub
and
fldcw
mov
xor
sbb
repnz
les
shlb
cmpsl
xor
inc
add
and
daa
cmp
cmp
notb
fs
in
push
xchg
mov
push
imul
cmp
adc
or
lcall
int3
dec
rcll
les
push
loopne
repnz
out
int
mov
out
call
push
rol
jbe
aad
adc
pop
cmp
aad
jl
outsb
mov
push
in
jnp
push
add
call
js
push
aas
xchg
enter
testl
jp
in
rcl
repnz
pop
and
pop
mov
sarb
fidivrs
mov
je
dec
lds
xchg
pop
mov
mov
fwait
mov
gs
insb
ss
cmp
sbb
sub
es
cmc
in
mov
iret
pop
and
and
stc
scas
call
inc
inc
std
lea
mov
frstor
push
jge
add
inc
sbb
xchg
xor
sahf
jge
jne
sbb
pusha
inc
jg
inc
mov
xchg
popa
repnz
scas
dec
sub
pushf
pop
movsb
inc
inc
fistpll
cmc
adc
mov
push
pop
mov
inc
cld
in
adc
es
sti
sbb
push
shr
stos
in
mov
enter
cmpsb
or
or
push
xorl
shrl
ficoms
sub
pop
sbb
je,pn
adc
fnsave
das
mov
gs
jmp
in
jno
or
movsl
leave
es
inc
mov
mov
fistps
pusha
lods
lea
add
sahf
and
jl
imul
add
push
das
mov
pop
outsl
jp
ficoms
insl
inc
push
stos
mov
push
mov
js,pt
loopne
jecxz
subl
sub
aaa
pop
int3
test
add
test
out
sub
mov
outsb
orb
ja
scas
jnp
fldt
mov
jae
in
jle
fimull
mov
clc
pop
sti
dec
mov
jmp
mov
scas
push
test
scas
mov
adc
jge
std
sbb
repnz
push
mov
fildll
or
test
fcmovb
mov
enter
dec
sub
xor
shll
jnp
shlb
ljmp
popa
mov
lcall
jge
mov
mov
dec
repz
nop
pop
cld
and
daa
mov
sbb
inc
jnp
mov
pop
xor
jns
xorl
test
popa
repz
scas
lea
jecxz
and
jns
or
mov
xor
jo
sbb
xchg
mov
dec
cld
inc
xchg
mov
and
out
leave
fbstp
and
mov
xchg
pop
xor
jecxz
mov
neg
cmp
inc
cld
stos
aam
mov
popa
push
mov
push
stos
pop
gs
sbbl
push
outsl
mov
out
and
dec
in
pusha
stc
aaa
gs
dec
xor
xor
pop
loopne
sub
loop
xorb
int3
shl
lods
pop
jge
aam
xor
fisubrl
lcall
cld
lock
out
sti
insb
lea
test
cmp
hlt
mov
cli
aam
and
sar
lcall
fdivs
or
dec
movsb
jl
je
sub
push
data16
incb
pop
int3
cmp
loop
and
add
lret
movsl
and
in
mov
aam
jno
loop
adc
add
cmp
sbb
stos
mov
fs
fincstp
sbb
bound
outsl
test
dec
loope
pop
addb
or
call
mov
add
dec
loop
mov
xor
sub
insb
popf
sbb
mov
push
jg
ja
jns
int3
inc
mov
inc
ja
in
lock
mov
dec
mov
adc
fsubs
dec
fdivrs
cmp
test
adc
in
sbb
jl
in
push
insb
xchg
xor
inc
data16
add
jae
cmp
pop
dec
stos
test
xchg
les
stos
outsl
add
enter
and
dec
or
stos
cwtl
das
ss
jp
xor
mov
jle
fdivl
push
xor
mov
cmp
jnp
push
add
fcoml
xchg
mov
push
outsb
jae
sub
adc
xchg
and
xchg
xor
pop
out
popa
dec
mov
mov
ret
dec
or
insb
push
push
inc
mov
push
ret
mov
dec
pop
dec
fmull
imul
pop
pop
aas
rclb
cmp
stc
xchg
sbb
cltd
popf
xchg
aam
into
imull
sahf
jbe
lods
push
sub
popa
dec
sbb
pop
ret
push
iret
cmp
inc
push
or
dec
and
pop
scas
mov
sbb
stc
loop
repnz
cmpsl
fisttpl
stos
cltd
insl
out
mov
gs
in
xchg
cmp
pop
push
xchg
lret
inc
ret
imul
sarb
jle
sbb
xchg
pusha
xor
cmp
icebp
iret
test
sahf
lcall
pop
loope
xchg
sbb
inc
js
or
jp
fidivrl
dec
imul
fmul
aas
mov
cs
push
shrl
jb
decb
ja
sbb
push
int3
xlat
mov
xor
mov
cld
arpl
jle
or
and
push
xor
sub
pop
sti
push
les
stos
clc
loop
add
xchg
outsb
jne
fwait
xchg
mov
push
aad
lock
daa
adc
shlb
mov
pop
dec
std
fcompl
sub
xchg
or
push
mov
adc
inc
das
popa
dec
mov
scas
push
inc
inc
insl
aas
jne
and
pop
in
jecxz
mov
loopne
mov
daa
hlt
sub
loop
jecxz
je,pt
pop
jb
push
pop
or
ds
sbb
mov
push
push
test
sub
bound
inc
shrl
sub
frstor
dec
adc
stos
std
fsts
jp
push
jo
lret
scas
cmp
into
or
mov
mov
mov
popa
iret
test
ds
data16
push
test
jg
push
push
fcoml
fsubs
std
aas
lds
dec
mov
mov
xor
sub
adc
mov
mov
xlat
xor
idivb
push
dec
xchg
insb
dec
movsb
jl
imul
not
test
cltd
js
dec
jbe
mov
out
sbb
in
mov
repz
lcall
and
add
inc
cmpsb
and
xchg
js
mov
test
icebp
aad
inc
mov
and
mov
fldenv
inc
dec
xor
xchg
in
das
test
mov
fdivl
cwtl
mov
jge
push
fs
adc
pop
xchg
add
adc
loope
fs
mov
xor
fs
scas
mov
imul
sbb
ss
dec
add
out
sbb
xchg
cwtl
xchg
pop
les
jl
jp
lcall
les
jo,pn
and
push
dec
sub
mov
cmp
sub
nop
lods
aaa
sbb
stos
mov
push
xor
fst
sub
add
xorl
fiaddl
rcl
into
sub
sbb
sbb
fistpll
mov
int
jae
sbb
call
ret
lods
push
iret
pop
pop
cmp
mov
fldlg2
jno
js
sti
leave
jl
dec
aas
xchg
in
cld
das
fsts
adc
cli
mov
flds
test
mov
ss
and
cmp
push
ds
stc
pop
mov
mov
mov
pop
pusha
jmp
sbb
movsb
mov
dec
lods
xchg
xor
pop
lret
dec
pop
aam
lock
inc
dec
push
gs
leave
cwtl
jo
outsb
lea
xor
test
xor
and
pop
out
repnz
rcrb
notb
clc
pop
push
into
and
xor
and
lahf
push
push
in
xor
push
fadds
xchg
aaa
ds
lahf
push
cmp
cmp
mov
adc
pop
adc
or
inc
inc
sbb
push
cmp
cmp
les
and
and
xchg
xchg
jge
subb
aam
mov
rolb
mov
jmp
les
cmp
add
sbb
sbb
mov
pusha
stos
or
xor
scas
aam
scas
enter
pop
icebp
lret
data16
mov
push
dec
push
dec
pop
not
cmp
das
cmp
shlb
push
mov
adc
shr
ds
sub
stc
icebp
push
hlt
pop
test
mov
daa
or
add
cmp
push
popf
insb
mov
nop
pop
inc
div
mov
mov
cli
in
loope
xor
push
sahf
mov
mov
test
out
aam
and
add
cltd
popf
int3
push
lcall
sbb
xchg
xor
fnsave
js
nop
and
add
jb
mov
lret
xchg
shll
mov
into
fcompl
scas
sub
outsl
sbb
jp
es
push
xchg
hlt
inc
shll
jbe
mov
pop
out
adc
mov
stos
push
insl
daa
in
inc
shlb
dec
lods
in
and
out
int
inc
lea
mov
adc
sti
inc
aam
push
adc
iret
daa
cwtl
mov
movsb
sub
test
mov
repz
jo
pop
fimull
das
movb
out
ror
mov
sub
inc
mov
subb
adc
xor
movzbl
sbb
cmpl
ss
sbb
inc
leave
cmp
test
xor
stos
fs
out
test
stos
push
adc
mov
pop
cmpsl
lret
xor
mull
sbb
xor
pop
iret
stos
sbb
insb
hlt
mov
mov
outsl
pop
lock
xchg
cmc
jno
jae
xchg
or
test
ljmp
add
lods
sarb
loope
movsl
movsb
mov
inc
xor
daa
cs
push
gs
sbb
jnp
jns
das
movsl
sbb
fs
andl
pop
popf
cmp
rorl
push
fwait
je
leave
jge
sub
cmpsl
bndstx
aam
popf
icebp
jl
clc
roll
xor
adc
dec
push
mov
add
shrb
jno
dec
push
xor
dec
nop
fbstp
cwtl
test
ret
dec
sub
pusha
lods
xchg
lea
adc
and
fiadds
pop
jno
out
out
std
scas
push
and
and
inc
vpsubsw
out
hlt
adc
sub
cmp
cmp
push
cmp
cmpsb
cli
cmp
fiadds
sbb
mov
pop
jp
mov
out
aad
jl
pop
mov
xchg
mov
mov
xor
mov
mov
push
fs
xor
mov
mov
out
lcall
jnp
jns
pusha
inc
push
idivl
outsl
fucom
and
pusha
movsb
adc
sub
popf
sbb
std
aam
pop
adc
pop
pop
int3
push
xchg
out
or
pop
scas
aad
xor
rolb
xlat
mov
or
lods
dec
push
rep
or
or
or
loope
xor
jmp
loope
dec
mov
stc
adc
cmp
inc
sbb
movsl
cmp
pop
stc
push
sub
add
jns
sub
loope
mov
call
ja
jne
push
fwait
addr16
bound
jbe
mov
fldcw
rcrl
aaa
fs
icebp
dec
pop
xor
in
les
test
pushf
cmp
and
daa
jns
ds
push
pop
inc
ret
pop
scas
sbb
xchg
lret
cmc
ss
or
lret
movsb
jecxz
decl
jmp
push
scas
loope
fmul
adc
and
sbb
rcrl
inc
test
movsb
mov
cmp
mov
push
sbb
inc
ss
pop
ds
sbb
jns
sbb
pop
out
add
sahf
cmp
or
push
ret
jle
adc
imulb
bound
pop
jg
jl
xlat
and
int
mov
int3
mov
xor
pusha
test
push
push
loopne
dec
jmp
and
testl
mov
subb
lods
ljmp
and
ljmp
push
mov
pusha
push
xor
lea
xor
lods
hlt
pop
inc
out
xor
les
xor
scas
mov
sarl
arpl
movsl
mov
mov
push
lock
cmc
imul
data16
fisttpll
pop
lods
sub
adc
and
cmp
push
movl
and
mov
pushl
cwtl
xchg
insb
cmp
repz
dec
sti
sbb
inc
rcll
loopne
stos
lea
sbb
je
fcomps
cmp
pop
loopne
pop
popf
mov
mov
jg
mov
int3
push
dec
pop
dec
out
imul
sbb
out
out
xchg
pusha
nop
xchg
das
fisubrl
adc
ret
in
pop
stos
rolb
sub
jmp
insl
mov
mov
in
mov
clc
cmp
sub
in
pop
pop
sti
lahf
mov
inc
push
push
mov
and
movsb
ss
ljmp
mov
mov
add
test
mov
fwait
xchg
xchg
pop
mov
in
or
rcl
dec
xchg
xchg
pop
jae
fimull
and
pop
push
call
int
dec
loopne
mov
popf
jbe
test
sbb
test
adc
push
cmp
xchg
daa
inc
repz
and
in
outsl
adc
test
dec
push
jmp
cmp
shl
push
push
mov
lar
imul
push
popl
inc
icebp
pop
nop
mov
adcl
jg
insl
popf
insl
mov
mov
aas
call
or
in
hlt
xor
mov
jge
sbb
xchg
in
push
push
gs
jge
pop
or
cmpsl
cmpsb
lods
mov
cmp
sbb
out
xchg
jno
inc
sbb
dec
or
cmp
sarl
inc
sbb
outsb
sub
scas
fs
inc
out
push
pop
clc
cmp
mov
fs
cmc
cli
outsb
push
cwtl
rclb
and
rolb
xlat
cmpsb
xchg
dec
jecxz
test
pop
aam
xor
negl
add
xor
jge
mov
pushf
ret
pop
jno
inc
loop
int
punpckhbw
pop
rcrb
in
mov
loopne
cvtps2pd
sbb
or
ja
pop
sbb
cwtl
ds
popa
adc
push
les
scas
insl
loop
jmp
or
sbb
movsb
sbb
outsb
outsb
jae
repz
push
fdivr
inc
cmc
repz
xchg
mov
mov
lret
sub
mov
shrb
sbb
or
adc
mov
imul
popa
sub
mull
frstor
and
push
cli
icebp
es
adc
lahf
movsl
sbb
vmovhpd
out
adc
and
into
mov
jg
inc
xorl
jnp
int
sub
jge
out
push
sbb
cltd
xchg
mov
jp
jmp
int3
cmp
mov
sbb
push
outsl
lcall
fiaddl
or
xor
pop
adc
orb
cwtl
add
rolb
test
cmp
icebp
inc
std
xchg
mov
sbb
shll
jle
dec
fs
xor
test
in
rcrl
out
sbb
push
mull
pop
fnstsw
dec
pop
push
cli
rcr
cmp
ja
xchg
xchg
mov
mov
jp
sahf
imulb
movsb
push
mov
test
inc
pusha
cmp
sbb
pushf
push
in
outsb
inc
ret
adc
pop
lahf
cmp
scas
add
leave
dec
ljmp
insb
xchg
sub
rcrl
mov
dec
js
icebp
jle
push
ja
and
ret
lret
fs
shll
add
cld
xchg
outsl
cwtl
sbb
add
shl
rcrb
push
xchg
hlt
fsubrl
stos
loop
in
sbb
push
loope
adc
test
cwtl
cmp
xchg
mov
movsl
cmpsb
popf
int3
or
adc
pop
lods
mov
cs
das
aaa
push
int
pop
or
pop
imul
insb
fnstenv
pop
mov
fistps
out
xchg
in
and
dec
cmpsl
pop
xor
loope
xchg
shll
mov
cmp
pop
lcall
iret
lea
xchg
out
or
push
testb
mov
jb
xchg
jne
inc
push
test
and
xor
xchg
movsl
fists
add
and
dec
add
mov
rorl
xchg
shr
ss
pop
mov
push
dec
in
dec
in
cmp
pop
pop
ror
xchg
jle
enter
stos
push
jo
pop
xchg
add
shlb
int3
fcmove
or
das
or
dec
sub
orb
aam
mov
daa
jnp
xchg
fldenv
lahf
arpl
cmp
cmpsb
xlat
scas
push
sahf
push
mov
popf
mov
inc
int
sahf
adc
and
xchg
dec
clc
lds
add
scas
push
out
sbb
dec
gs
cmp
dec
fs
dec
out
loope
fs
inc
aas
jns
push
inc
dec
or
sbb
fisubl
mov
jg
pop
push
push
dec
wrmsr
hlt
sub
cmp
or
or
aad
sbb
and
jns
ljmp
lcall
loop
xor
cld
inc
jl
mov
gs
in
jne
xchg
jge
outsb
sarl
das
cmp
pusha
andb
andl
mov
je
sub
stos
mov
in
shrb
lock
cmp
cmp
sbb
xor
sbb
inc
jnp
in
test
sub
scas
mov
xor
xor
loop
dec
lods
and
xchg
scas
xchg
ja
dec
es
lret
pop
or
loop
sbb
rcll
pop
shrb
lret
out
mov
mov
cmp
dec
adc
pop
mov
xor
das
movsl
data16
jecxz
jg
cmpsb
cmpsb
int
xor
daa
cmpsl
or
fwait
mov
inc
jnp
pop
xchg
mov
xchg
leave
cld
xlat
in
inc
pop
sahf
and
pop
pushf
mov
push
cmp
mov
push
addr16
sub
addr16
cmp
loop
lock
and
sbb
and
jge
ja
sub
cmp
xor
or
jne
fwait
adc
dec
mov
push
notl
stc
mov
cmp
popa
sti
js
mov
or
or
sub
xchg
sbb
test
xlat
mov
scas
mov
loop
cmp
cmp
push
rcll
in
cltd
lahf
repz
sbb
cmp
call
mov
in
mov
push
imul
sub
aas
jbe
movsl
clc
nop
aas
mov
dec
xor
xor
imul
jne
jmp
mov
es
mov
jecxz
sbb
push
push
adc
out
inc
int
cmp
fiadds
ljmp
inc
nop
sbb
mov
jecxz
sub
jno
scas
int
ret
les
aad
adc
inc
jecxz
fsubrs
jnp
jns
test
xor
xor
imul
push
nop
push
sbb
or
ret
xor
cmp
jle
push
addr16
push
int
push
push
lret
outsl
stos
jl
popf
mov
mov
mov
leave
lods
testb
cmpsl
xor
sub
aam
add
or
xor
add
cmp
mov
mov
pop
divl
imul
cmc
arpl
sub
fstpt
jne
fdivrs
fsubrs
popa
arpl
out
dec
jne
push
mov
popf
pop
pop
push
les
adc
lea
lea
sub
pop
or
dec
inc
mov
mov
les
pop
push
push
add
divb
outsl
inc
cmp
adc
movsl
mov
cmp
or
pop
sbb
mov
in
sbb
mov
cmp
jg
jmp
mov
jmp
sub
mov
in
pop
inc
inc
movsl
inc
dec
cmp
cmp
clc
dec
cmpl
adc
lahf
push
mov
push
mov
dec
icebp
sti
sub
lret
mov
or
mov
pop
sub
lods
into
mov
add
adcb
jo
cmp
mov
out
xchg
push
fidivs
sub
xchg
pusha
push
cmp
int3
cmpsb
lods
shr
push
in
xor
add
xor
sbb
push
sub
cmpsb
jmp
arpl
insl
mov
aaa
adc
sub
ja
fs
push
popf
mov
loop
mov
mov
out
add
adc
pop
roll
ror
out
test
cmp
sub
push
andl
lods
nop
cmp
jp
out
and
ja
aam
push
xorb
sbb
sub
dec
dec
fldt
test
cmp
mov
add
lcall
enter
ss
mov
sbb
cld
fstpl
push
mov
cmpsl
push
jbe
adc
icebp
lods
movsl
pusha
out
adc
in
sbb
popf
xchg
adc
iret
out
mov
xlat
stos
dec
add
stc
push
dec
insb
push
add
xchg
xor
xchg
in
jle
mov
sub
xor
nop
imul
mov
sbb
out
pop
movsb
push
leave
push
ficoml
add
mov
aad
dec
ss
push
testb
int
test
and
pushf
pop
mov
loopne
jge
call
add
and
adc
fxch
or
and
xor
icebp
cmpb
gs
lahf
outsb
sarl
mov
add
clc
andl
iret
int3
mov
cmc
pop
enter
xchg
xor
aad
repz
push
fidivs
and
xorb
rclb
jg
rorb
sbb
add
and
push
in
imul
cmp
test
jg
stos
ficoms
add
inc
icebp
mov
and
mov
mov
adc
nop
ljmp
ljmp
dec
das
adc
je
into
addl
dec
dec
cmc
int
shl
and
cld
stc
popa
dec
lcall
shll
xchg
hlt
into
pop
mov
lret
popa
mov
fdivs
int3
mov
lods
xchg
mov
pop
xchg
mov
imul
jne
test
out
xor
dec
lret
pusha
sub
sub
cs
adcl
in
xchg
sbb
enter
in
cld
nop
mov
call
imul
xor
jle
push
and
xor
jns
test
push
or
pop
lahf
push
movsl
cmp
gs
xlat
scas
pop
xchg
sub
push
add
push
sub
cs
test
clc
mov
mov
lcall
or
jo
outsl
mov
jp
adcl
or
js
dec
scas
push
sbb
cmpsb
fmulp
in
pop
neg
mov
sahf
mov
adc
push
ficoms
push
lea
jnp
pop
outsb
stc
mov
jg
mov
ljmp
mov
roll
sbbl
into
dec
scas
cli
lds
shlb
mov
pop
push
pusha
sub
pop
pop
repnz
jmp
aas
jae
es
faddl
mov
sbb
popa
pop
jge
jle
sbb
push
imul
pushf
adc
lret
scas
cmp
loop
cmc
roll
cwtl
pop
push
pop
enter
jle
dec
push
imul
es
cltd
sbb
xor
push
mov
pushf
or
push
adc
shll
data16
pop
call
std
xchg
inc
pop
ss
and
cli
and
test
cltd
inc
test
je
add
sbb
ljmpw
loopne
ret
imul
or
js
fmull
in
mov
popa
xor
shlb
mov
cmp
xor
es
jne
xchg
lret
jno
std
or
push
jno
sbb
mov
out
es
nop
insb
jmp
cmp
shlb
nop
jbe
gs
pop
push
xchg
rolb
out
cmpsl
popa
sbb
xor
aaa
and
lods
xor
fdivr
mov
mov
sbb
cmp
and
in
jp
adc
mov
sbb
push
nop
mov
lahf
outsb
jmp
mov
push
xor
push
mov
dec
mov
out
out
inc
push
in
pop
outsb
and
jb
ret
jnp
sub
lds
push
das
aas
xchg
int3
xchg
inc
int
mov
push
mov
xchg
push
out
mov
push
mov
xchg
mov
mov
sbb
sub
add
or
stos
push
jnp
popa
mov
add
into
je
xchg
insb
outsl
lea
inc
flds
jnp
dec
xor
jle
int
jbe
jl
jne
mov
gs
jbe
mov
arpl
mov
dec
idivb
jnp
stc
xchg
jle
test
push
push
mov
add
dec
push
push
outsl
inc
idivl
push
aad
bound
fs
sti
sub
or
push
jg
xchg
push
pop
int
fwait
jg
leave
call
dec
xchg
mov
xchg
sbb
push
std
jg
cmp
or
out
xchg
lcall
pusha
out
sahf
push
jle
lret
cld
sbb
test
or
cmp
fcmovne
in
movsb
and
jae
mov
mov
out
mov
push
pop
icebp
imull
adc
arpl
mov
sti
mov
cmpsb
mov
lea
mov
out
dec
xchg
arpl
mov
sbb
push
addb
sbb
mov
jmp
mov
inc
mul
mov
push
jp
shl
js
mov
or
push
cmpsb
jne
or
mov
cli
push
sbb
push
xchg
mov
adc
and
jp
adc
rorl
popa
lds
cmp
mov
fdivr
out
sbb
out
rcrb
inc
sbb
mov
push
lcall
push
mov
cs
ljmp
aas
mov
pop
lcall
inc
mov
xor
sub
xchg
pushf
push
xchg
push
push
lcall
sub
adc
sahf
and
cmpsb
in
ret
sbb
jge
cld
xor
pop
mov
mov
sub
pop
mov
sub
xchg
push
cld
push
inc
push
in
sub
je
lret
cltd
sbb
insl
ljmp
imul
dec
jg
pusha
int
sub
cld
lods
fsubs
cld
pop
jno
lods
data16
push
jp
cmc
or
mov
push
sub
cmpl
hlt
jg
int
addr16
and
adc
pusha
add
inc
je
and
and
mov
sbb
xor
jo
push
sbb
hlt
or
add
and
jp
push
addb
in
add
mov
pop
jecxz
cmp
push
orl
test
jl
imul
sbb
push
mov
outsl
in
inc
push
data16
mov
or
in
loop
adc
adc
sahf
push
mov
or
rcrb
sub
loop
leave
add
fimull
movsb
and
push
inc
mov
jecxz
xchg
add
cltd
xchg
scas
mov
and
and
subb
fiadds
or
test
xchg
mov
fadds
sub
and
and
addr16
test
jo
xor
pop
daa
in
mov
imul
jnp
repz
cs
dec
and
mov
rolb
push
mov
fs
pop
mov
add
jne
iret
loope
aad
push
and
jg
out
rorb
sub
pop
xchg
test
das
imul
cmpsl
mov
mov
sbb
mov
test
cmp
loopne
out
push
dec
sub
ss
jle
scas
into
adc
xchg
inc
ret
cld
push
cmpl
js
mov
lcall
mov
cli
out
adc
lods
push
mov
and
mov
fstpl
lock
popl
cmpsb
cmp
pop
cmp
adc
jp
mov
add
fisttpl
pop
or
mov
pop
js
mov
inc
lret
pop
adc
dec
adc
jbe
imul
ja
dec
mov
data16
dec
mov
sbb
cld
test
pop
fists
int3
xor
xchg
sub
dec
and
enter
push
cmpsl
aas
insb
mov
push
leave
test
out
movsb
outsb
xor
gs
mov
or
sti
xor
jmp
dec
pop
lea
in
sbb
xchg
hlt
mov
leave
jl
inc
out
cltd
mov
call
test
cltd
push
pop
mov
mov
out
add
stos
loop
mov
out
clc
or
push
mov
fwait
stos
xchg
fwait
jecxz
iret
lods
inc
pop
pop
out
xchg
mov
inc
aaa
fs
ret
mov
js
enter
pop
rcrb
outsl
push
clc
clc
rol
jo
dec
jp
daa
xlat
jge
push
push
cmp
movsl
test
aam
out
dec
or
add
stc
xchg
jecxz
mov
inc
push
gs
mov
mov
daa
lods
xchg
jle
mov
mov
int
push
insb
push
cmc
mov
daa
xor
mov
pushf
xorb
lods
stos
mov
subl
rcl
jl
pusha
inc
mov
pop
jns
push
add
in
inc
ja
sbb
xor
mov
pop
adc
dec
xor
outsb
mov
bound
jo
mov
or
jbe
mov
push
pop
mov
rcrb
xchg
lods
mov
xor
lock
sub
pop
add
jb
inc
mov
in
enter
icebp
jbe
sbb
dec
les
inc
ja
xor
add
sbb
sbbb
jo
arpl
sub
dec
mov
pshufw
pop
pusha
and
es
dec
iret
xchg
inc
pop
pop
lea
mov
dec
repz
mov
push
pop
icebp
imul
lret
push
or
movsl
out
pop
dec
ficoms
movsl
pop
pop
jb
test
inc
dec
outsl
jbe
lods
xchg
sbb
xor
mov
dec
lcall
mov
hlt
add
psllq
pop
imulb
lea
sbb
add
and
outsl
dec
nop
ds
mov
sub
xchg
adc
jae
ficompl
rcrb
and
jp
mov
mov
scas
mov
andl
jp
jo
jg
jae
pop
jno
mov
mov
movsb
adc
loope
ret
movsb
pop
xchg
push
nop
inc
push
mov
fmull
movsb
loope
mov
xchg
push
mov
xchg
pop
cmpsb
push
pushf
jmp
xor
sbb
push
xchg
xor
xchg
mov
push
mov
repnz
adc
ror
ret
mov
jge
inc
rcll
cmpsl
and
xor
sarl
neg
xor
leave
jns
std
pop
wbinvd
inc
pop
stc
les
or
pop
loope
pop
aaa
jne
cmpsb
in
adc
xor
jg
in
sbb
mov
pop
push
jp
jle
xchg
jnp
fsts
inc
pop
pop
bound
xorl
fsts
pop
imul
mov
jno
or
inc
cmc
pop
dec
imul
jbe
in
adc
mov
in
fs
xorb
out
cld
lret
movsb
scas
jne
lds
dec
mov
and
mov
cmpsb
jle
aad
pop
negb
addl
dec
sbb
inc
cld
sarl
pusha
mov
cltd
fwait
pop
xchg
mov
sbb
sbb
imul
mov
fsubrp
insb
xor
fcompl
xchg
and
xchg
and
movsl
in
leave
aaa
adc
fistpl
pusha
in
jns
loop
inc
ljmp
xchg
hlt
push
xchg
jecxz
leave
int3
add
jne
incl
nop
mov
sarb
mov
pop
or
rcrb
xchg
std
mov
xchg
and
out
scas
js
mov
sbb
mov
sbb
pusha
xor
mov
cwtl
repz
outsl
mov
dec
repz
rol
mov
mov
and
push
adc
and
or
xor
xor
add
lea
iret
cmp
gs
mov
test
mov
sbb
mov
jno
cmovbe
shlb
jb
inc
add
mov
mov
xor
fbld
inc
aaa
out
outsl
jnp
testb
and
cmpsl
and
ljmp
fldt
pop
push
hlt
xchg
or
jl
out
dec
cmp
stos
xchg
lcall
xor
or
aaa
test
mov
fnstsw
gs
dec
mov
das
and
adc
mov
clc
outsb
lods
jno
push
xchg
jnp
fldl
addl
rorb
js
popa
push
pop
fisttps
dec
imul
xor
lcall
and
mov
push
ret
insl
inc
jmp
stc
inc
dec
mov
xchg
or
dec
push
adc
lahf
shlb
shrb
xchg
sbb
fldt
sbb
cs
mov
imulb
push
or
push
loop
mov
call
pop
insl
mov
shlb
mov
pop
inc
lcall
lcall
and
add
pop
push
in
insl
or
sbbl
add
fs
mov
push
dec
lret
adc
movsl
cmp
xor
mov
cmpsb
mov
push
stc
jo
dec
cmp
adc
stos
dec
movsb
ror
push
outsb
add
cmp
jno
cmp
or
mov
push
sbb
push
iret
arpl
pop
jmp
dec
inc
ja
roll
jbe
cmp
xchg
jecxz
sub
xchg
inc
push
push
dec
push
loop
cmp
jl
jmp
xor
nop
out
pop
sarb
mov
dec
lock
pop
add
mov
xchg
jo
clc
inc
int3
hlt
sbb
mov
loope
daa
subl
xor
mov
xchg
or
arpl
out
aam
add
lcall
bound
lods
and
adcl
sub
test
rcrl
jno
sub
pusha
leave
jmp
pop
mov
movsl
mov
mov
fadd
movsb
or
push
loopne
sub
jmp
pop
sti
sub
mov
mov
fadds
int
jp
pop
adc
stos
sub
dec
idiv
push
aad
adc
movsb
repz
sbb
imul
and
lret
mov
and
pushf
ja
mov
xorl
or
and
notl
mov
sub
push
fmuls
out
mov
and
pop
sti
out
mov
jbe
ss
add
scas
pop
add
cld
push
inc
mov
push
cmp
rcrb
cmp
arpl
or
dec
in
cmp
pop
fdivl
jle
lcall
push
fsts
jl
test
push
into
jb
aam
imul
std
push
xlat
xchg
mov
jle
inc
aad
pusha
or
inc
andb
dec
lds
cli
adc
rolb
cld
das
test
fcmove
mov
adc
or
je
fbld
rorb
mov
loop
fcomps
dec
inc
inc
sbb
or
loopne
pusha
jb
xchg
imul
mov
test
fsts
addr16
mov
cmc
mov
lret
mov
dec
insl
mov
pop
adc
ret
push
add
xor
lods
in
sub
in
mov
jb
clc
sar
sbbb
ljmp
jg
loopne
fldl
sbb
xchg
mov
sahf
aam
adcl
adc
popf
divl
sbb
add
out
cli
jl
subb
xchg
mov
jns
nop
into
mov
xchg
pop
push
popa
xchg
or
cmp
lcall
mov
in
add
mov
add
insl
cmp
mov
inc
mov
dec
jb
repz
adc
aas
mov
dec
mov
inc
push
lds
popf
iret
mov
xchg
jge
adc
xchg
ret
xchg
inc
dec
mov
push
mov
mov
adc
data16
cmpsb
orl
xchg
sbb
test
inc
dec
or
mov
inc
insl
jbe
mov
inc
cmp
push
leave
cmp
inc
mov
std
pop
add
xchg
daa
xchg
xchg
out
les
push
gs
ja
inc
jno
in
je
and
iret
rcrl
cld
jo
push
ja
ret
jecxz
shll
je
and
sub
push
fcomps
mov
mov
adc
jne
mov
orl
daa
imul
sbb
or
sbb
ds
ljmp
sub
jg
pop
js
pop
sbb
add
out
jp
testl
inc
jbe
push
mov
sbb
pop
pop
loopne
pop
push
mov
inc
mov
daa
xchg
repnz
loope
sub
inc
push
xor
aaa
iret
insb
test
pop
xor
cmpsb
sub
sub
xchg
add
ror
out
imul
pop
jbe
pop
mov
mov
enter
add
mov
mov
sbb
loope
scas
fwait
pop
jnp
jbe
adc
sti
mov
repz
mov
push
xchg
stos
mov
jae
inc
mov
or
add
shl
mov
ret
add
sub
xchg
lods
xor
ret
addr16
clc
pop
xchg
jbe
xor
mov
scas
lret
call
jbe
test
and
add
je
lods
pop
divb
or
dec
dec
sbb
scas
sub
push
fnstenv
cmpsl
or
pop
mov
gs
clc
lds
adc
scas
jns
and
push
std
or
pusha
aas
icebp
subl
les
cmp
and
in
xchg
out
sbb
fs
test
aaa
shrb
lods
adc
inc
cmpsb
push
adc
imul
mov
lcall
mov
xor
aam
inc
jb
fs
inc
aaa
adc
rclb
adc
nop
sub
cmova
lcall
jne
pop
clc
mov
dec
inc
bound
fldl
out
sbb
add
dec
cli
push
pushf
test
inc
jbe
mov
scas
and
xor
jmp
push
sbb
push
adc
push
or
call
lret
loopne
stos
fsubl
jae
and
lret
push
or
mov
aam
lds
adc
dec
jge
or
inc
cmc
add
and
xchg
aad
xchg
push
sti
into
out
pop
jle
push
inc
arpl
enter
xor
adc
dec
mov
lods
rolb
imul
pop
in
add
adc
mov
in
pop
dec
insl
jl
or
push
jmp
aad
adc
mov
pop
xchg
loope
cmp
sub
stc
out
orl
push
int3
cmpsb
sbb
pop
lahf
test
stos
xchg
mov
pop
cli
hlt
xchg
pop
pop
inc
sub
rorb
ljmp
stos
call
or
shrb
push
cmpsl
and
push
jb
xor
sub
and
jns
sub
xor
adc
xlat
mov
mov
pushf
pop
push
lods
ja
xchg
mov
fimull
inc
dec
push
adc
subb
and
loop
scas
xorb
shrl
pushf
push
lea
lret
mov
vfrczss
sbb
cmp
xchg
xchg
in
push
cld
pop
inc
cmp
jnp
test
arpl
mov
push
or
dec
xchg
test
cmp
jge
pop
adc
call
movsb
nop
inc
xchg
xchg
inc
test
mov
jno
push
jne
leave
and
xchg
mov
inc
aad
cmpsl
outsl
hlt
stc
ret
lret
aaa
jmp
mov
mov
sti
scas
xchg
sahf
push
or
rclb
int3
fildll
mov
add
inc
xor
cmp
xchg
pop
xchg
push
and
sbb
mov
cmp
fs
les
shrl
adc
mov
xchg
ror
call
test
push
add
cmc
sbb
imul
mov
lock
call
pop
adc
imul
add
cmp
fwait
ja
adc
cmp
push
inc
jb
stc
push
cltd
lea
xor
gs
js
dec
mov
test
subl
enter
inc
push
mov
or
xchg
lcall
jge
cmp
roll
pop
mov
xor
sub
jmp
test
xchg
pop
mov
fmull
pop
jg
xchg
cli
pop
lock
xor
push
pop
test
stos
in
mov
popf
nop
mov
stos
aas
xchg
lahf
lds
and
push
inc
lahf
fwait
rcl
cmc
push
cs
sbb
repnz
mov
dec
jns
movsl
sub
in
push
and
cwtl
fs
mov
popa
test
out
pop
out
mov
inc
bound
movsl
xor
and
sbbb
and
ret
mov
pop
inc
mov
mov
jl
and
aam
scas
int3
push
jl
or
lock
xchg
daa
sub
adc
push
jo
xchg
inc
in
test
cs
in
out
xchg
inc
or
and
push
cmpl
js
fstl
stos
notb
add
adc
mov
fcomip
in
addr16
mov
push
xchg
xchg
mov
leave
add
jb
mov
xor
and
int
aam
popf
cmp
inc
push
ret
dec
inc
cmovb
popa
test
xchg
pop
insl
outsl
popa
pop
adc
mov
enter
adc
scas
push
shl
xor
push
lds
cli
pop
es
ss
fs
xchg
sub
adc
mov
jo
mov
mov
mov
or
inc
inc
mov
xchg
jne
xchg
ljmp
add
mov
sbb
loopne
neg
pusha
push
repz
xor
data16
loopne
out
leave
out
in
add
inc
adc
and
inc
stc
mov
jmp
pop
sub
mov
push
movsb
push
imul
adc
lock
fcomps
lock
push
adc
imul
pushf
mov
pop
cs
mov
push
vpmullw
push
mov
xchg
pop
int3
inc
jbe
or
inc
and
xor
xor
ljmp
mov
clc
mov
inc
pop
cmp
ss
xchg
add
and
fsubrp
mov
mov
push
je
sbb
xchg
jmp
jne
pop
andl
inc
mov
push
hlt
jle
pop
cwtl
ja
pop
rolb
add
push
jg
sub
cmp
lret
dec
fidivs
inc
mov
call
test
ret
or
push
loope
push
mov
pop
arpl
filds
cmpsb
mov
sub
test
gs
sub
push
pop
scas
inc
inc
mov
es
xor
in
xchg
stos
icebp
xor
jmp
cmp
lret
jle
fs
and
arpl
pop
add
mov
rcr
sbb
push
iret
stos
jecxz
jle
pop
mov
xchg
stc
into
insl
into
mull
popa
add
add
mov
repnz
arpl
aam
mov
jbe
xchg
mov
test
or
adc
orl
sub
arpl
mov
rcll
addr16
jle
fst
pop
scas
sub
ret
out
or
mov
aam
mov
inc
in
add
xlat
insl
js
dec
call
popa
push
add
sbb
cli
sbb
mov
add
inc
lahf
inc
mov
push
insb
inc
je
and
pop
add
dec
movsl
bound
ds
xchg
enter
mov
fstpt
dec
aad
loopne
pop
popa
sub
lcall
cmp
xor
dec
mov
inc
stos
jg
sub
xchg
test
das
adc
outsl
in
or
or
push
stc
inc
ds
pop
sub
push
in
push
test
add
and
in
and
jne
or
xchg
inc
les
jae
cmpsb
sbb
add
and
or
std
int3
notb
push
sub
and
mov
dec
in
and
ljmp
sub
out
push
or
out
pop
mov
pusha
push
xor
pusha
clc
xchg
decb
mov
divl
stc
cmp
popa
xchg
push
in
sahf
adcb
adc
loop
pop
mov
mov
mov
iret
mov
pop
lahf
mov
shr
xchg
rorb
addr16
xor
movsb
jecxz
push
xchg
jge
jno
jae
dec
movsl
push
xor
mov
pop
vminsd
inc
pop
fistps
dec
adc
sub
cld
jns
inc
aas
shrb
inc
sub
cmpsb
outsb
xchg
loop
mov
and
fucomi
aam
ss
sub
test
daa
shll
les
sub
xor
mov
out
lock
push
add
loopnew
mov
scas
jb
push
push
loope
imul
or
lods
rclb
enter
sbb
aas
test
sub
mov
cmc
out
das
arpl
cmc
in
add
push
loopne
daa
inc
addr16
ret
lcall
test
lods
inc
push
out
cmp
popf
or
data16
mov
mov
xchg
repz
jae
mov
push
test
lock
call
adc
fldl
arpl
testl
jmp
or
je
add
sub
test
aam
pop
ss
cmp
mov
jmp
mov
lods
ljmp
ljmp
push
and
mov
add
mov
fs
cld
aas
push
jno
mov
lea
imul
jne
mov
lcall
lahf
or
jo
add
push
loope
dec
and
fistl
xor
add
cld
int3
popa
lds
int
mov
push
shlb
sub
repnz
mov
lahf
or
push
shl
and
mov
addr16
add
adc
ljmp
and
orl
cs
cmp
mov
jg
imul
bound
xchg
push
stos
add
imul
inc
inc
in
mov
popf
and
inc
cltd
mov
xor
pop
subb
mov
mov
lods
and
imul
xchg
push
mov
call
pop
dec
inc
cmp
mov
outsb
je
test
push
outsb
sbb
jb
call
xchg
mov
add
daa
mov
push
pushf
sbb
inc
test
mov
inc
movsb
inc
mov
test
scas
ja
outsb
dec
sub
sub
adc
in
out
mov
and
addr16
sub
nop
sub
or
inc
xchg
into
sub
push
push
mov
mov
jno
leave
shr
insb
push
inc
dec
cmp
les
sbb
gs
fmul
cmp
mov
adc
inc
cmp
adc
lods
dec
aas
je
xchg
mov
add
inc
cmc
xor
loopne
or
jne
in
sbb
notl
cs
push
mov
xor
adc
ljmp
add
call
pop
fidivrs
inc
or
mov
dec
push
add
movd
cli
push
mov
adc
sub
dec
out
lods
pop
push
mov
mov
ror
or
int3
ret
dec
pop
cli
pop
push
rolb
xchg
mov
xchg
sub
inc
loopne
sbb
add
jbe
jne
sti
insl
add
push
std
push
test
mulb
mov
pop
int3
sub
push
movsb
outsb
push
push
call
pop
std
rorl
pusha
dec
orl
jbe
adc
jge
outsl
and
icebp
mov
cmp
outsb
movsl
jp
cltd
repnz
jle
pop
js
xor
mov
loopne
cmpsb
add
sbb
push
xchg
mov
mov
lock
xor
stos
xor
jmp
gs
lds
cmp
inc
addb
stos
loop
dec
into
xor
popa
mov
movsb
pop
fiadds
and
daa
incb
arpl
subl
and
jb
pop
fwait
outsb
inc
imul
fistpl
push
ds
fisttpl
lds
sub
push
das
mov
jg
or
imul
out
ret
andb
out
cmp
add
mov
adc
jle
or
sbb
sbb
jae
in
movsb
cwtl
lods
arpl
push
daa
add
fcomp
cmp
mov
out
ljmp
jno
push
cmp
push
xor
sub
push
xor
int3
loope
outsb
adc
push
std
jno
add
mov
pop
popf
dec
and
adc
leave
adc
sbb
out
insb
fidivs
cmpl
lret
int
or
jo
sub
or
jb
mov
xchg
xchg
lret
sbb
sub
addr16
pop
mov
jg
inc
inc
inc
ljmp
xchg
pop
cs
cmpsl
dec
imul
mov
adc
sbb
pop
xor
or
or
sub
repz
cmp
call
xchg
loop
mov
mov
sub
dec
push
mov
in
mov
stos
pop
in
mov
mov
movsl
pop
pusha
scas
aam
mov
pop
cmp
fadds
push
xchg
mov
sbb
stos
pop
mov
or
sbb
daa
js
stos
sahf
add
daa
sbb
sbb
adcb
mov
or
test
sbb
mov
stc
dec
test
push
cmc
dec
xor
leave
or
jo
inc
imul
ss
sti
orl
ljmp
mov
push
sub
dec
and
or
outsl
out
pop
push
jae
sbb
mov
rorb
nop
cmp
adc
roll
insb
stc
pop
pop
pushf
pusha
sbb
mov
mov
std
sub
push
fwait
aaa
mov
fsubl
rcll
pop
dec
adc
sbb
mov
repnz
jmp
jno
sub
adc
push
daa
adc
or
jns
hlt
lods
sub
arpl
in
bound
adc
lods
sti
inc
popa
push
mov
push
lods
dec
sbb
pop
sbb
dec
xor
rolb
cmpsb
rclb
pop
aam
les
or
out
inc
stc
mov
sbb
inc
xor
or
sbb
pop
mov
fisubl
push
jno
pop
daa
inc
lret
lcall
int
test
ss
xor
ds
pop
dec
jmp
sub
lock
inc
and
es
or
push
push
fdivs
jl
mov
loope
pop
emms
push
test
jne
inc
test
sub
ss
mov
dec
xchg
sbb
pop
xchg
out
dec
mov
jge
icebp
push
add
pop
lea
push
lret
addl
pop
in
cmc
xchg
xorb
repz
es
loopne
push
adc
out
incb
xor
add
loop
nop
icebp
js
cmp
lret
test
sbb
out
into
jns
xchg
ret
xor
pop
inc
mov
cli
lcall
push
aaa
lods
repz
repnz
sbb
mov
dec
stos
sahf
scas
cmp
pop
psrad
and
push
stos
mov
push
adc
rclb
xchg
and
push
adc
push
sbb
mov
dec
xchg
int
inc
cwtl
adc
pop
xor
inc
lahf
xchg
push
and
pop
jmp
shll
sub
push
xlat
outsl
jge
pop
and
out
ds
popf
sbb
cltd
nop
push
adc
add
or
shl
add
scas
jb
xchg
adc
cmp
mov
jbe
dec
xor
xor
jp
and
cmp
xor
fcmovu
test
mov
loop
fmuls
hlt
and
and
add
dec
pusha
clc
push
hlt
cmp
lds
ret
pop
push
jns
xor
adc
lahf
mov
xor
xor
xor
dec
fdivrl
rcrb
jo
sub
dec
ret
loopne
xchg
arpl
jno
add
sbb
xlat
adc
je
shll
mov
ficomps
xchg
inc
dec
sub
jnp
mov
xor
in
popf
iret
adc
les
cwtl
adc
jmp
bound
xor
jnp
mov
mov
movsl
es
push
mov
std
rcrl
into
jecxz
bound
xor
stc
adc
in
mov
incl
mov
add
cltd
loop
sbb
pop
push
enter
outsl
xor
cmp
lahf
outsb
push
mov
jl
idiv
push
insl
sbb
mov
fistl
enter
outsl
imul
or
and
push
scas
testl
mov
inc
push
pushf
loopne
cmpsl
sub
or
jle
jmp
mov
sub
scas
repz
icebp
mov
orl
sbb
js
out
or
mov
mov
xchg
pop
lods
fdiv
xchg
testb
and
cs
xor
and
in
and
xchg
xor
cltd
dec
xchg
fldcw
leave
push
inc
pushf
push
xor
xor
pop
push
int
lock
gs
daa
inc
xor
dec
inc
sbb
gs
push
mov
push
xchg
xor
push
xchg
call
pop
inc
loope
dec
jae
call
das
int
push
mov
xor
add
shlb
pop
iret
orl
btr
mov
pushf
mov
mov
in
jecxz
pop
imul
cmc
sub
scas
xchg
stos
cmp
dec
test
rcll
bnd
movsb
sbb
das
xchg
push
adc
loopne
pop
stos
je
or
in
mov
fdivs
push
and
xor
jg
sbb
xchg
fs
inc
mov
or
sti
rorb
fbld
or
lods
iret
icebp
out
adc
xor
test
fisubrl
cmp
fsubrp
test
stos
bound
jo
mov
lret
lret
adcl
adc
and
test
sub
push
jmp
aad
adc
idivl
sub
adc
xlat
fildll
dec
sub
cmc
add
pop
add
mov
aas
mov
cs
lret
adc
scas
fsubrl
mov
inc
lods
jp
jae
aaa
lcall
in
imul
mov
mov
and
fiaddl
mov
das
push
insl
sbb
leave
sub
mov
movb
and
repz
mov
and
xchg
and
inc
dec
daa
and
mov
cmc
mov
dec
adc
xlat
cmp
push
push
dec
sbb
mov
inc
das
out
jge
push
push
add
test
pop
adc
push
jne
push
xchg
fwait
xor
cs
push
mov
xchg
jge
sbb
push
lock
ret
cld
sbb
addr16
cld
jb
mov
mov
popa
jl
mov
pop
adc
xor
ja
sbb
mov
ljmp
popf
lods
iret
xor
ds
outsb
cli
mov
sbb
push
mov
sub
dec
sub
cmpsb
mov
lods
cwtl
stos
cmpsl
jb
divl
lret
lret
imul
mov
stos
call
gs
enter
xchg
jge
mov
mov
mov
lret
inc
repz
sub
cwtl
mov
mov
xchg
mov
mov
cmp
lods
ss
out
cmp
ja
pop
faddl
pop
add
je
adc
push
adc
jno
rorl
in
ud0
aaa
and
jnp
cmp
stos
dec
sub
fldl
xor
cmp
mov
jb
ds
iret
xchg
lahf
inc
fimull
clc
into
fisubrl
xor
sbb
mov
xchg
js
jmp
mov
and
ret
hlt
std
mov
sbb
xchg
loopne
mov
lcall
shlb
fistl
repz
or
and
jmp
jle
cs
fstpt
mov
cli
inc
cmpsb
inc
movsb
cmp
add
inc
pop
fmul
in
sub
in
adc
sarb
xchg
stos
ljmp
mov
xchg
and
adc
jb
sub
sarl
pop
or
bound
pop
add
aam
int3
movsl
mov
push
add
push
dec
mov
subl
ret
movb
call
out
mov
cmpsb
inc
push
cmp
rorl
jbe
inc
rcr
xchg
movsl
lcall
loope
in
pop
mov
fldl
jmp
incl
repnz
imul
pop
and
mov
push
in
cli
mov
sub
cmp
sti
jge
jno
fmull
fistps
adc
xor
jo
push
pop
fwait
mov
xor
je
fnsave
lock
jl
pop
adc
adc
je,pt
sti
and
jp
inc
adc
es
xchg
aaa
push
jp
out
test
sub
pop
mov
sti
sbb
in
xchg
mov
xchg
adc
add
mov
into
or
or
or
pop
lret
ljmp
xor
inc
mov
mov
lret
xor
fisubrs
pop
dec
fisubrl
stos
stos
lcall
cwtl
jns
iret
cld
sub
loop
mov
push
pop
fisubrl
sub
lret
and
stos
cmp
add
xor
pop
jecxz
pslld
or
adc
dec
outsl
jp
loopne
mov
ds
inc
shlb
mov
inc
fstps
pop
mov
push
aaa
das
push
outsb
push
stos
xchg
in
push
pop
daa
xlat
add
repnz
insb
fnstcw
cmc
adc
xlat
std
inc
lods
adc
xchg
jge
cmp
add
dec
imul
xchg
cmpsb
rcll
adc
sub
dec
mov
test
nop
push
imul
shlb
dec
adc
lret
lods
or
jo
adcl
sbb
lds
push
push
aad
cmpsl
lahf
adcb
push
daa
lret
jns
int3
sub
xchg
inc
les
test
cld
into
mov
and
jb
daa
jb
subl
cs
pop
push
rcll
xchg
cmpsb
clc
stos
ds
in
jne
mov
or
mov
cmp
mov
lret
pop
adc
pop
mov
insl
mov
jnp
dec
xchg
cmpsl
push
push
pop
fisttpll
push
jmp
pop
mov
or
outsb
mov
mov
cmpsb
mov
and
mov
push
testb
inc
shr
add
mov
ds
into
adc
mov
xchg
mov
sub
mov
jns
into
push
int3
lds
enter
rol
jne
ret
mov
inc
lock
mov
xchg
sbb
and
cmp
jle
xchg
dec
nop
shlb
cmp
cltd
sbb
mov
ljmp
sbb
jbe
fbld
dec
aad
dec
insb
andb
daa
jnp
sub
push
lock
les
das
mov
xlat
jb
adc
fimull
jecxz
imul
cmp
sub
xchg
out
sbb
xchg
push
fadds
and
mov
cmpb
cli
xchg
aad
repnz
subl
lods
je
outsl
std
mov
scas
mov
pop
ljmp
push
cmp
sbb
les
gs
push
xor
mov
xor
push
xchg
push
repz
push
sbb
fstpl
inc
gs
cltd
sbb
imul
push
scas
stos
cmpsb
push
hlt
cld
mov
and
in
jb
push
push
lret
mov
push
mov
cmpsb
mov
leave
out
lcall
or
das
aaa
adc
mov
iret
add
xchg
mul
icebp
les
sbb
and
daa
jb
outsb
sub
or
push
outsb
aas
cmpsl
xor
jmp
ret
fmuls
mov
cmp
loope
dec
jnp
loop
mov
mov
out
add
stc
arpl
or
loope
mov
aas
xchg
sar
mov
int3
repnz
xor
mov
lret
sub
jg
cmpsb
addl
int
sbb
lret
icebp
movsb
nop
imul
int3
inc
cmpsb
pushf
lcall
jp
icebp
int
mov
fs
jmp
aaa
sub
jb
xchg
fildll
leave
inc
mov
insl
jl
stos
and
push
pushl
sbb
stc
fcmovnb
popa
adc
fmulp
outsl
sbb
and
int3
movswl
rolb
mov
push
pop
xchg
js
lock
sti
ret
outsl
pop
push
js
in
movswl
loopne
add
sti
mov
lock
add
mov
ret
push
dec
add
and
prefetch
in
jae
xor
decl
mov
add
in
push
decb
push
add
pop
stc
lds
dec
or
jmp
and
inc
lcall
ds
fstl
mov
jbe
jge
adc
aas
fldt
inc
dec
and
cmp
jns
and
fnstsw
mov
inc
inc
out
aam
xor
imul
jo
dec
insl
mov
bound
aaa
clc
mov
in
mov
test
push
mov
dec
jmp
test
mov
ljmp
loope
lret
jno
scas
mov
add
mov
daa
add
jecxz
add
sub
add
add
add
dec
adc
pop
inc
pop
pop
jge
inc
push
add
add
add
test
outsl
pop
jp
cmp
add
dec
add
adc
add
pop
sub
push
daa
das
jge
add
xor
pop
add
add
adc
adc
add
add
insl
arpl
dec
and
add
arpl
dec
adc
cmp
add
imul
add
je
pop
dec
inc
inc
ss
add
add
add
add
add
imul
add
inc
push
push
mov
sub
add
mov
add
call
sub
push
mov
mov
cmp
jl
sub
or
sub
sub
mov
add
ret
int3
int3
lea
sub
sub
push
mov
sub
sub
add
mov
sub
sub
push
xor
mov
cmp
jne
add
add
mov
sub
push
call
shl
add
pop
push
call
or
mov
sub
lea
pushl
pop
mov
add
mov
add
add
add
mov
mov
mov
add
add
sub
sub
mov
push
push
mov
call
mov
add
dec
mov
add
add
sub
lea
add
mov
sub
mov
add
cmp
jne
sub
mov
mov
sub
cmp
jne
add
mov
sub
call
mov
sub
add
call
xor
mov
add
pop
mov
add
lea
add
mov
add
add
add
add
sub
sub
sub
mov
add
mov
add
sub
mov
cmp
jne
add
mov
sub
sub
cmp
je
mov
mov
mov
jmp
sub
inc
mov
mov
mov
sub
cmp
jne
mov
sub
sub
add
mov
mov
shl
mov
xor
add
add
shr
sub
mov
mov
sub
mov
mov
add
mov
sub
add
mov
mov
sub
add
add
sub
mov
imul
sub
add
add
add
sub
sub
add
mov
mov
sub
cmp
je
sub
jmp
sub
call
sub
add
ret
add
sub
sub
sub
jmp
sub
mov
test
add
jmp
add
call
mov
xor
add
sub
dec
sub
add
mov
add
cmp
je
lea
mov
push
mov
pop
sub
cmp
je
sub
jmp
mov
sub
add
sub
push
mov
mov
mov
add
mov
mov
imul
shr
cmp
jne
add
ret
add
sub
jne
sub
mov
add
add
call
add
mov
add
cmp
jne
push
jmp
add
add
jmp
and
and
mov
add
push
mov
mov
ret
sub
mov
mov
mov
pop
cmp
jne
add
jmp
add
xor
mov
call
add
add
ret
mov
add
pop
mov
cmp
jne
mov
call
mov
sub
jmp
push
movl
mov
sub
add
sub
add
call
add
mov
jns
adc
cmp
xor
inc
mov
cmp
outsl
jbe
and
pop
daa
push
mov
push
xor
push
add
dec
push
inc
adc
dec
add
sbb
dec
cs
sub
add
add
add
and
daa
inc
jo
add
lea
push
sbb
add
add
dec
jge
add
add
jns
and
add
add
add
cmp
pop
mov
add
add
imul
add
subb
add
add
add
sub
add
jle
arpl
push
mov
add
addr16
test
add
add
adc
add
add
es
jle
add
add
add
sub
add
push
pop
sub
add
add
add
ss
imul
aaa
push
and
insl
jg
add
mov
add
xor
inc
and
add
add
mov
add
add
dec
jle
sub
add
add
push
sub
add
add
add
mov
adc
mov
add
add
add
add
add
add
jle
add
add
add
add
cmpb
cmp
adc
jp
add
add
jb
dec
jge
add
mov
add
add
add
add
pop
inc
add
add
add
sub
add
xchg
daa
cmp
add
sub
and
inc
and
add
add
add
add
adc
add
add
cmp
add
jb
jp
add
pusha
add
add
add
pop
push
sub
add
add
add
add
push
add
add
add
add
add
push
ds
add
add
add
xchg
jnp
add
add
cmp
add
add
pop
dec
add
add
add
add
xchg
andl
pop
add
sub
add
add
subb
add
push
add
add
insb
adc
adc
add
add
add
inc
js
and
add
imul
ja
xor
add
add
xor
adc
add
imul
xor
add
add
add
add
add
xchg
add
lea
jge
daa
and
mov
ja
add
jle
adc
add
add
add
add
mov
pop
and
test
add
adc
add
add
add
add
push
sub
add
add
xor
add
lea
jp
ja
inc
sbbl
jns
add
add
add
imul
add
add
add
lahf
adc
add
add
add
stc
adc
add
add
test
add
push
adc
add
add
popf
adc
add
adc
add
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
push
adc
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
arpl
add
add
add
xchg
add
xchg
adc
add
add
add
adc
add
adc
add
add
add
adc
add
adc
add
adc
add
add
add
add
pop
adc
add
add
lea
add
adc
add
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
dec
add
popa
insb
inc
jb
add
add
je
jne
jb
outsb
je
push
dec
add
aad
inc
gs
imul
je
add
inc
jne
jb
outsb
je
jb
arpl
jae
fs
add
je
jns
je
insl
push
imul
insb
gs
imul
jb
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
add
je
outsl
outsb
jae
insb
gs
outsl
outsb
je
add
push
jb
jbe
je
push
jb
imul
je
outsl
outsb
dec
popa
insl
gs
add
jmp
push
gs
outsl
outsb
jae
insb
gs
outsl
arpl
inc
push
inc
inc
add
dec
jne
bound
dec
inc
outsl
outsb
jae
insb
gs
outsl
jne
gs
jne
je
outsb
jae
add
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
popa
insl
gs
imul
insb
gs
je
je
inc
add
xchg
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
dec
popa
insl
gs
add
movsb
add
insb
jae
imul
add
outsb
dec
outsl
bound
push
arpl
add
add
jb
insb
insb
inc
outsl
outsb
jae
insb
gs
arpl
outsb
inc
jne
data16
add
pop
add
popa
jo
popa
insb
imul
jg
inc
gs
gs
push
inc
dec
inc
outsl
insl
insl
popa
outsb
add
inc
gs
imul
bound
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
mov
pop
arpl
je
outsl
insb
data16
add
insl
outsl
jbe
add
push
inc
push
push
cs
insb
add
mov
dec
outsl
outsl
imul
arpl
jne
je
imul
push
popa
insb
imul
je
inc
gs
jb
jo
outsl
jb
and
push
jne
jb
push
gs
imul
arpl
arpl
imul
inc
push
dec
xor
cs
insb
add
inc
add
je
popa
jo
jne
add
add
push
outsl
jae
dec
gs
popa
addr16
add
jecxz
inc
imul
outsl
ja
add
popa
insb
imul
je
add
push
je
outsb
push
arpl
push
push
inc
push
xor
cs
insb
add
xchg
add
insb
inc
insb
insb
outsl
arpl
gs
outsb
fs
outsb
imul
push
imul
gs
jb
je
push
popa
je
push
je
inc
gs
je
jb
fs
je
jns
add
imul
insb
gs
bound
arpl
add
js
gs
outsl
jbe
push
jb
imul
fs
insb
cs
insb
push
push
push
inc
add
add
inc
popa
add
ss
add
add
sub
add
xchg
test
xchg
sbb
inc
fisubl
mov
ljmp
mov
daa
ljmp
adc
aaa
and
es
fisubl
mov
ljmp
xchg
repnz
dec
fisubl
xchg
dec
mov
and
shlb
mov
ss
aam
lcall
incb
repnz
lcall
cmp
mov
dec
lods
lods
cmpsb
rol
mov
ret
add
and
xor
dec
jg
out
dec
mov
cmpsb
rol
ja
imul
popf
ret
imul
sarl
out
aaa
lcall
lret
add
and
ds
fisubl
ljmp
aas
dec
fisubl
insl
fwait
shrw
bnd
lods
cmpsb
rol
in
ja
out
insl
fwait
rol
hlt
aam
lcall
ja
out
insl
fwait
rclw
data16
jp
aaa
icebp
dec
leave
aaa
lcall
ja
mov
leave
ret
dec
mov
ljmp
stos
int3
ret
inc
mov
mov
xor
sbb
test
mov
cwtl
mov
cltd
or
xor
or
and
std
data16
or
mov
push
rol
jle
ficoml
test
fsubs
stos
or
cwtl
push
mov
cmpsb
push
int3
and
lcall
jl
js
sahf
into
mov
es
shlw
cmpsl
int
or
dec
mov
and
out
aaa
push
push
and
pop
repz
cmpsb
rol
call
ja
jmp
lds
and
call
ja
jmp
inc
iret
stos
cmpsb
rol
add
ja
adc
mov
ljmp
aaa
and
popa
dec
fisubl
lea
inc
iret
stos
cmpsb
rol
lock
mov
je
mov
push
std
shlb
push
mov
int
cmpsb
rorl
push
xlat
stos
cmpsb
shrl
daa
in
inc
les
sbb
out
xchg
popf
jmp
mov
sahf
test
rclw
dec
lret
shll
rolb
mov
gs
cmp
cwtl
ret
out
mov
lock
shll
sbb
jne
fwait
rolw
data16
shll
sbb
lcall
ret
shll
dec
pop
sarb
mov
imul
inc
and
mov
sub
es
cmp
nop
ret
ret
lahf
shrl
push
xor
adc
testl
xchg
mov
push
enter
inc
negl
mov
loop
inc
sbb
pop
jnp
fcomip
mov
mov
dec
mov
in
ret
mov
and
jb
ret
les
cmp
mov
repz
test
arpl
shlb
es
test
dec
sahf
fstp
negl
test
pop
pop
fstp
cmp
lret
xor
dec
imulb
jnp
aaa
lcall
aaa
shll
rolw
add
add
add
orl
add
sbb
jbe
sbb
je
sub
