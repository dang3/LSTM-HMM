call
lcall
mov
fidivl
mov
cwtl
adc
inc
fstpt
push
ljmp
or
add
or
mov
push
mov
fidivrs
dec
jmp
loop
in
push
pop
add
loopne
push
das
sbb
lahf
pop
sub
in
std
mov
incl
sbb
and
ss
mov
pop
xchg
xor
test
push
add
call
scas
inc
mov
or
pop
dec
cwtl
cmp
mov
pop
movsb
cmpsb
iret
pop
cmp
decl
das
pusha
mov
inc
push
notl
xchg
mov
xor
enter
inc
mov
call
cmp
pop
dec
sbb
inc
xor
int3
xorb
dec
fcomps
inc
gs
inc
xlat
mov
mov
mov
sbb
pop
sub
mov
pushl
push
mov
xchg
ljmp
sbb
mov
cld
mov
adc
mov
movsb
fcomps
test
jp
mov
imul
and
xor
decl
push
pop
pop
jg
sub
mov
popf
ret
mov
pop
dec
push
mov
hlt
testb
repz
stos
sub
xchg
ds
arpl
sbb
lds
orb
decl
sub
pop
xchg
outsb
jecxz
aad
or
or
dec
jle
xor
push
or
push
push
rol
insl
negb
shrl
lods
mov
out
or
incl
inc
ljmp
sub
adc
popf
and
xchg
sarb
call
imul
decl
shl
icebp
jp
dec
pop
pop
outsl
mov
stos
imul
adc
ljmp
shlb
idivl
aaa
into
mov
lahf
insl
cmp
mov
dec
pushl
xor
and
movsl
dec
add
push
mov
mov
in
jne
pop
mov
mov
jmp
jb
adc
pop
sub
outsl
sbb
mov
repz
cmp
inc
test
in
lret
incl
int3
cmp
adc
cltd
fisttpll
in
leave
shr
pop
jmp
mov
leave
inc
test
xchg
adc
subb
and
outsb
cmc
adc
loope
xchg
sbb
lods
loope
incl
sti
cmp
jno
es
push
adc
push
jae
adc
adc
xchg
or
mov
dec
push
push
fwait
pop
ror
shll
push
lea
jg
cs
ret
outsl
clc
fstpt
call
fwait
cli
mov
pop
add
fdivrl
inc
mov
decl
movsb
jl
pop
jne
pop
xchg
xchg
inc
mov
cmpsb
mov
jb
movsb
mov
lcall
push
dec
or
or
or
clc
mov
push
test
les
fcomip
fcomps
stc
imul
inc
mov
aaa
repz
in
lcall
push
imul
mov
int3
es
ret
sub
jecxz
pop
jp
imul
hlt
in
out
dec
push
mov
and
jp
jns
adc
cmp
add
mov
fcmovne
mov
aam
fdivrs
cmpsb
pop
stos
xchg
xor
xchg
lret
mov
popa
pop
lea
pop
in
mov
pushf
xor
cmp
xor
xor
fsubs
stc
pop
push
sarl
inc
mov
adc
lcall
pop
cmpsb
push
dec
test
lret
mov
mov
xor
sarl
call
std
push
sbb
dec
out
ror
insl
les
lret
jo
lods
ds
jmp
in
stos
push
dec
xchg
mov
shll
repz
push
mov
xor
jp
ja
dec
call
shlb
aad
movsb
push
nop
adc
jb
loopne
hlt
mov
decl
test
in
das
mov
insb
inc
clc
popa
jnp
test
xor
and
sub
mov
sbb
jmp
mov
rcr
outsb
jb
movsb
xor
ja
pop
hlt
faddl
hlt
lods
inc
inc
aas
mov
pop
repz
stos
xlat
sbb
mov
ja
cld
adc
adcb
hlt
push
rorb
cmp
popf
loopne
shll
pop
seto
xor
jl
and
jnp
mov
push
shll
or
push
leave
adc
gs
cwtl
push
aam
addl
ss
mov
sahf
test
and
fmull
fnstenv
jns
aad
mov
adc
les
out
dec
push
cmp
sub
in
pop
adc
jmp
push
sub
mov
ds
ljmp
clc
cld
jecxz
mov
call
pusha
in
dec
pop
and
movsl
xchg
adc
incl
xchg
cwtl
fists
nop
xlat
arpl
pop
test
cmpsb
aaa
insb
ret
fisttpl
shl
bound
mov
or
call
rolb
and
pop
adc
cmp
xchg
jae
incl
scas
popf
inc
shl
cmp
mov
cmp
push
repz
pop
leave
lcall
mov
lcall
cmpsl
or
imul
adc
repnz
or
xchg
mov
sar
cld
pop
sbb
push
in
je
cmpsb
cwtl
lods
insl
dec
mov
call
data16
mov
data16
movsl
xlat
pusha
push
sub
pop
popl
adc
inc
add
push
gs
movsb
add
ja
fdivl
fldenv
xchg
mov
pop
push
leave
out
sbb
cmpsb
fbstp
fcoms
sub
lahf
shr
lods
outsl
xlat
in
mov
mov
pop
inc
inc
mov
pushl
outsb
hlt
mov
inc
jl
repz
push
mov
adc
inc
fs
lods
or
cld
cwtl
out
sub
inc
movb
fistps
or
movsl
cli
mov
xadd
cwtl
daa
stos
fdivs
cs
sbb
xlat
decl
cmp
mov
add
mov
mov
dec
js
les
and
hlt
incl
sub
or
test
xchg
sbb
faddl
mov
push
cld
call
shl
fcmovnb
nop
mov
xor
push
push
rcrb
cld
mov
call
call
pusha
fisubs
ja
orps
jno
mov
push
int
cmp
decb
inc
mov
xchg
mov
and
loopne
adc
hlt
mov
stos
fisubs
sub
mov
xor
jl
stc
aad
jmp
dec
jmp
xchg
adc
fwait
or
mov
xor
and
lea
inc
js
lret
and
ja
decl
jge
loopne
in
cltd
xchg
xchg
dec
sub
xlat
xor
scas
ds
ficoml
in
and
lcall
mov
lret
and
dec
gs
or
outsb
out
mov
sub
jmp
ds
in
cmp
pusha
hlt
pop
sar
jmp
out
jmp
cmp
mov
pushl
adc
jbe
in
addb
adc
shll
scas
cli
pop
push
insl
loopne
sti
mov
int3
lods
nop
pop
adc
les
dec
dec
lcall
mov
cld
pop
mov
in
in
push
fdiv
mov
xchg
mov
or
test
lret
notb
pusha
mov
outsb
cmc
jae
pop
pop
lea
jo
ljmp
jae
ret
rclb
addr16
sbb
lods
icebp
dec
sbb
mov
lea
jo
push
pop
xchg
jle
call
xor
fs
adc
sub
jno
test
sub
leave
outsl
mov
cmp
decl
lock
in
and
shlb
add
mov
repnz
rol
jo
incl
lret
push
jg
mov
jle
jg
jo
subl
movsl
mov
cmp
loope
jp
jb
js
push
gs
orb
int3
or
movsl
lods
incl
jmp
dec
sbb
push
test
pop
daa
iret
push
gs
mov
lds
sahf
cmp
popl
jnp
cld
dec
sub
xor
and
data16
ljmp
jg
insb
jae
cmpsb
jl
addr16
jb
push
mov
cmp
cmp
aaa
inc
push
mov
std
cltd
sub
cmp
out
popl
add
mov
jg
or
ljmp
mov
cltd
dec
add
aam
xchg
or
push
jno
pop
push
xchg
cld
mov
lcall
dec
test
mov
ffreep
sub
mov
jmp
inc
mov
bound
aas
mov
sub
push
dec
adc
mov
or
les
jnp
jmp
cmp
stc
outsb
mov
xor
sub
mov
mov
xchg
out
and
mov
call
mov
push
sti
sbb
xor
cmc
cmp
popf
std
jmp
mov
cwtl
repnz
jp
sub
mov
idivl
mov
adc
cmc
sbb
movsl
ljmp
add
sti
lods
mov
push
inc
inc
cltd
mov
mov
int3
jle
test
mov
mov
repnz
push
gs
je
scas
mov
into
movsl
cmc
mov
dec
outsl
fistps
pop
cmp
das
ds
maskmovq
imull
or
cmp
ret
add
shll
inc
dec
inc
jno
test
imul
popa
pusha
mov
inc
loopne
ret
push
aaa
ret
push
mov
mov
add
adc
dec
and
jmp
jp
jo
lock
or
imul
pushf
outsl
mov
push
test
inc
sbb
mov
xchg
and
push
scas
nop
mov
and
inc
filds
icebp
mov
xor
xchg
add
andb
je
popa
out
jmp
out
and
jl
sub
mov
sbb
sub
loopne
adc
xor
inc
inc
add
push
add
enter
dec
cltd
sbb
adc
and
mov
andb
push
add
add
add
adc
enter
nop
inc
add
mov
incl
negb
imul
ret
jp
aaa
mov
call
pop
cmp
mov
call
imul
imul
cmpsb
ja
mov
iret
test
das
sbb
inc
mov
aaa
out
fsubrs
mov
sbb
dec
sbb
ljmp
mov
cmp
xchg
push
and
mul
cli
mov
movsl
cmc
out
sti
pop
adc
pushl
scas
push
fsubr
sub
pop
xchg
jge
sbb
xchg
repnz
adc
jmp
xchg
pop
stos
loop
pop
insl
inc
jns
iret
mov
mov
mov
fiaddl
decl
sub
xor
lea
mov
enter
scas
nop
pop
ja
leave
lea
jge
or
out
mov
xor
push
xchg
aas
or
bound
lret
sbb
fwait
push
incl
jo
jb
jno
enter
inc
and
fs
rolb
jle
loopne
and
mov
inc
push
or
bnd
pop
jge
pop
sub
cmp
sub
xor
lret
xor
cmp
and
jae
pop
jle
push
and
std
fidivs
adc
mov
sbb
cmp
mov
pop
mov
xchg
jbe
in
cmp
xor
mov
adc
jl
dec
mov
cmp
mov
sub
jno
mov
inc
and
mov
pop
xor
and
mov
cltd
inc
jmp
xchg
int3
ja
and
inc
or
jmp
push
mov
add
idivb
cld
sbb
mov
aas
jmp
push
jmp
add
push
ret
sub
imul
mov
call
pusha
js
call
dec
sti
je
mov
jg
sub
or
sbb
or
add
nop
inc
add
add
subb
cltd
dec
call
adc
test
add
mov
loopne
dec
add
loope
loop
xor
stos
decl
or
push
add
and
push
test
push
and
subb
push
and
sub
add
add
adc
nop
inc
add
add
subl
inc
add
bound
incl
mov
or
push
nop
and
or
add
nop
inc
add
pop
decl
stos
dec
outsl
fildl
call
xchg
jp
std
jg
xchg
std
popl
mov
pop
jb
pop
out
sti
pushl
and
xor
jnp
jmp
mov
je
std
xchg
insb
push
lods
jo
orb
lcall
imul
xchg
dec
je
fmuls
std
jmp
clc
dec
jle
push
dec
cmpsb
call
cld
mov
xchg
je
outsl
jle
mov
cmpsb
div
addr16
clc
std
adc
xor
xchg
sbb
fbstp
aaa
adc
cmp
movsl
mov
push
sub
mov
or
call
hlt
adc
in
adc
push
sbb
cwtl
pop
cmp
iret
ds
cwtl
or
ret
mov
add
adc
rclb
or
filds
adc
jbe
dec
dec
sub
jae
sti
les
inc
sub
mov
fisttpl
pop
fildll
loopne
repz
std
cmp
stc
jg
mov
pop
mov
pop
inc
ss
pop
pushf
adc
stos
push
inc
test
loopne
clc
or
push
outsl
mov
out
mov
adc
out
mov
js,pn
pushf
pop
pusha
sarb
add
mov
ss
out
incl
xlat
xchg
sub
out
neg
ss
inc
jg
jg
das
clc
sbb
fwait
sbb
or
fwait
pop
push
sahf
adc
loop
add
imull
push
xor
sbb
mov
jg
mov
jl
ss
rcll
xchg
int
or
inc
fnsave
scas
sbb
sub
mov
sub
je
add
dec
add
dec
push
xorb
das
fdivr
das
push
push
xchg
push
dec
into
ficoml
subb
jl
inc
cltd
mov
mov
test
push
cld
xchg
into
cmpsl
xlat
mov
pushf
decb
xchg
out
andb
lcall
rolb
sbb
fisubrl
cmp
lcall
jae
aaa
test
ss
stc
int
xchg
sub
and
fcompl
jge
mov
jg
fisubrl
mov
test
xchg
and
fnstcw
js
sub
cli
adc
push
cld
shlb
cmpsb
cmc
inc
push
xor
fwait
jge
fdivrs
jg,pt
std
andb
ss
out
jl
enter
jae
or
icebp
mov
mov
lahf
adc
sub
jecxz
or
ljmp
xorl
add
daa
adc
cs
jle
xchg
pop
adc
push
push
imul
mov
jle,pn
inc
es
fs
cs
xor
sub
push
scas
jle
xor
xchg
clc
or
out
aaa
inc
cmp
inc
mov
mov
pop
or
sub
int
fisttpl
push
dec
jns
mov
stos
xchg
ljmp
je
js
inc
mov
xchg
or
cmc
sbbl
incl
inc
pop
mov
inc
cmc
mov
test
std
lods
not
dec
inc
jg
mov
std
hlt
sbb
addr16
je
xchg
not
inc
ljmp
clc
scas
es
out
jge
popf
cmp
cld
jns
mov
adc
div
pushl
scas
int
ds
mov
inc
add
test
or
in
xchg
aas
mov
aas
xorb
pop
mov
pushl
mov
mov
in
hlt
sub
sub
cmp
call
add
and
mov
and
cmp
jne
cli
scas
mov
mov
mov
decl
scas
cltd
aas
xchg
add
cmp
popa
cmp
andb
mov
outsl
xchg
sub
jns
cmc
jo
jo
jle
pop
clc
aaa
adc
pop
mov
mov
stc
xchg
fnstcw
mov
jmp
dec
push
push
cltd
hlt
pop
cmpb
mov
notb
mov
mov
das
inc
mov
aaa
int
dec
lret
and
je
dec
mov
dec
scas
lcall
sbb
repnz
cmpsb
add
fstl
cmp
xchg
clc
cmpb
divl
cmp
icebp
icebp
cli
xchg
popf
hlt
push
mov
dec
cmp
dec
aaa
xor
inc
cmp
xor
imul
sub
inc
add
ss
cmp
hlt
jbe
jbe
mov
jo
cmp
mov
push
mov
xor
mov
aas
dec
sub
pop
lock
idivl
jnp
idivl
cmp
sbb
mov
mov
cmp
hlt
jp
sub
fisttpl
xorb
cli
in
mull
push
div
mov
inc
stos
or
pop
pushl
cld
test
jb
adc
inc
data16
mov
sti
push
pop
clc
incl
jp
testl
std
insb
xchg
arpl
dec
lods
sub
out
repnz
lret
clc
das
es
loop
aas
out
pop
lea
push
repnz
outsl
clc
cli
int3
shrl
addb
lret
push
sub
cmp
sbb
lea
mov
dec
dec
psubq
push
std
out
repz
pop
pop
hlt
jg
lcall
mov
addb
jbe
int
push
hlt
or
mov
mov
jae
ja
cli
stc
jbe
ret
clc
mov
hlt
mov
add
outsb
cmp
data16
bnd
mov
mov
mov
cs
cmpsb
repz
aam
addr16
lret
inc
lods
sbb
inc
call
lcall
sbb
scas
popf
subl
jb
and
int
pop
rcl
test
daa
loope
test
inc
aaa
cmp
push
push
inc
inc
push
dec
imul
jo
xor
lcall
jns
imul
jne
jns
insl
fs
ja
imul
push
arpl
xor
push
data16
mov
inc
push
aaa
es
dec
imul
imul
jns
jns
pop
jp
push
xor
inc
xor
in
pushl
jae
dec
outsl
inc
arpl
arpl
dec
gs
pop
jle
jo
xor
outsb
data16
mov
imul
inc
ja
dec
inc
push
push
xor
dec
jbe
inc
call
push
jp
idiv
or
inc
jae
pop
jae
dec
push
jae
imul
aaa
outsb
xor
std
ja
inc
dec
dec
addr16
sbb
jo
jb
inc
xor
dec
xor
fildll
addr16
push
jne
inc
push
xor
jb
push
imul
incb
inc
dec
bound
inc
jb
jns
dec
mov
inc
jno
pop
in
fildll
outsl
imul
imul
popa
dec
xor
imul
inc
gs
inc
inc
hlt
je
imul
je
call
dec
inc
xor
push
push
jno
outsb
pop
popa
pop
mov
inc
rcrb
loopne
pushw
lock
xor
inc
push
popa
mov
jl
xor
inc
dec
jo
dec
dec
pop
inc
imul
dec
pop
ljmp
clc
xor
js
adc
push
push
pop
pop
jns
inc
je
jne
arpl
dec
les
call
ja
dec
aaa
push
popa
imul
add
sbbb
mov
or
popf
add
cwtl
fwait
pop
lcall
add
sub
sub
mov
fnsave
jecxz
add
add
shl
mov
push
out
push
inc
sahf
or
sahf
in
imul
sub
adc
int
cld
jmp
dec
in
sahf
das
in
fs
jecxz
jo
out
push
mov
lcall
cmc
inc
cmp
and
ja
inc
sub
outsb
sbb
ss
idivb
push
mov
adc
insb
aaa
inc
push
adc
adc
sub
fwait
in
jnp
or
sbb
sbb
jbe
dec
out
imul
mov
lods
int
shlb
jle
xor
sti
cmpsl
jge
loop
loopne
inc
xor
ret
xchg
cmpsl
insl
mov
dec
dec
mov
push
mov
sbbl
idivb
xchg
push
xchg
adc
lcall
and
jmp
idivb
daa
out
dec
test
dec
push
popf
inc
out
mov
pop
jnp,pt
js
rolb
pop
sti
jbe
sbb
cs
or
pop
adc
outsb
orb
push
in
sarl
push
inc
fisttpll
out
orb
fld
cmpsl
dec
push
iret
lock
jmp
ret
jo
sbb
jbe
pop
xchg
loop
addb
xlat
inc
aas
inc
enter
sahf
loope
out
clc
ss
pop
jbe
pop
test
ret
sbb
push
cmp
es
sub
inc
adc
es
jb
shll
into
push
pop
xor
cmp
aas
leave
mov
scas
leave
jne
push
push
push
mov
xchg
insb
mov
push
jo
out
icebp
sarl
add
insb
ss
int
dec
loopne
mov
ret
fucomip
pop
pushl
jns
test
psubq
pop
sti
fiaddl
das
jge
scas
fsubrs
les
out
jmp
sti
sbb
call
out
into
loope
jbe
push
jae
imul
push
scas
ds
data16
fldl
out
rol
push
in
mov
shl
imul
gs
xor
cs
insb
pop
inc
mov
fistps
gs
inc
jb
je
arpl
push
arpl
outsl
outsb
cs
gs
jbe
mov
aad
add
pop
jb
dec
outsb
and
std
aad
and
imul
inc
jb
fldt
outsl
arpl
or
pop
in
lods
loopne
xor
push
xchg
imul
call
pop
push
jne
jns
push
outsw
jb
popa
outsb
arpl
sbb
imul
push
adc
sbb
lock
jb
cmp
popa
fs
fs
push
pop
sub
mov
fs
pop
mov
mov
adc
dec
jmp
pop
push
imul
dec
jne
mov
jns
int3
into
insb
sub
sub
sub
mov
jae
movsb
mov
pop
arpl
sbb
sbb
jb
jns
js
push
js
push
and
cmc
and
popa
divb
jbe
and
inc
and
cmp
fs
jae
or
dec
outsl
fs
gs
push
or
arpl
dec
popa
insl
sub
cltd
and
inc
inc
mov
cmp
pop
outsl
insl
mov
outsb
add
fs
push
bound
jae
cmp
xor
imul
out
sub
outsb
push
addr16
cmp
xor
out
int
fwait
push
outsl
xchg
and
dec
data16
cmpl
xorb
cmp
xor
in
popa
imul
imul
and
jo
shl
xchg
rcl
outsb
pop
xchg
adc
pop
insb
sub
push
gs
pop
jb
jae
clc
subl
mov
fsubl
gs
outsl
jnp
mov
mov
dec
gs
push
inc
jbe
jo
cmpsb
clc
icebp
pusha
jae
jg
add
scas
mov
movsb
outsb
mov
mov
outsl
adc
je
fs
data16
push
jns
sbb
pop
pop
push
lret
insb
idivb
and
loopne
sbb
lods
cmpsb
leave
in
or
inc
out
stos
pusha
jno
cmpsl
sub
mov
inc
push
lcall
push
insb
push
dec
bound
mov
jg
jo
pop
or
jae
into
xor
jbe
ljmp
out
stos
jne
lret
inc
imul
rolb
pop
and
xchg
xchg
add
arpl
pop
dec
fnstsw
loop
insb
adc
jp
add
lods
jne
insb
cwtl
inc
inc
insb
push
sbb
xchg
adc
sahf
stos
ja
shll
mov
inc
mov
pushf
xchg
mov
xchg
push
sub
sub
ss
insl
daa
push
notl
inc
sbb
push
addb
frstor
ljmp
in
ret
xor
mov
xor
loop
insl
inc
jo
loop
mov
sbb
ret
movsb
dec
jmp
or
rcrl
add
mov
cmp
hlt
add
or
out
inc
xor
sub
in
data16
mov
in
ret
fs
fistl
push
xor
inc
imul
in
mov
js
dec
fistpl
movsl
jecxz
sub
int3
idivl
pop
push
and
ret
jo
xorl
xchg
ret
dec
sbb
fsubs
jo
popa
jo
movsl
shr
lock
jecxz
fdivs
movsl
outsl
pop
inc
inc
cmpsl
push
add
push
xchg
adc
daa
addl
je
inc
xorl
dec
addr16
push
push
or
push
test
cltd
in
out
pusha
mov
arpl
sbb
xor
xchg
fldl
inc
lret
add
adc
mov
inc
gs
adc
push
subl
decl
inc
add
push
add
add
add
nop
inc
add
inc
push
add
add
add
pusha
adc
test
test
or
andl
inc
add
adc
movsb
subb
icebp
or
mov
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
mov
daa
xchg
cmp
jl
or
js
mov
in
je
push
or
mov
jns
notl
jns
negl
push
push
xor
jns
out
pop
insb
js
mov
iret
repz
fdivp
push
vmwrite
ss
out
sahf
out
mov
jns
fsubr
cld
adc
and
cmp
repz
pop
jb
lcall
loopne
push
adc
cmp
repz
insb
xor
iret
repz
scas
aam
out
lcall
dec
sahf
out
sahf
pusha
js
sahf
mov
xor
out
cli
adc
sub
cmp
repz
js
iret
repz
movsb
mov
fdiv
add
cmp
mov
cmp
iret
repz
jbe
sahf
mov
ficomps
or
sbb
dec
jns
out
pop
push
xchg
mov
mov
enter
xor
sbb
ds
insb
repz
repz
stos
mov
iret
ljmp
out
sahf
inc
pop
jo
mov
jns
fsubr
decb
sbb
cmp
rcrl
xor
pop
insb
iret
repz
jl
mov
cmpsl
stc
cmp
or
and
dec
jns
out
pusha
jo
mov
out
out
sbb
sbb
xor
sahf
out
dec
pop
jb
cwtl
out
sahf
out
mov
repz
or
and
dec
pusha
jo
iret
repz
xchg
cmpsb
mov
imul
testb
out
sahf
out
dec
pop
je
lahf
out
sahf
pushf
mov
add
adc
xor
repz
repz
cwtl
test
repz
mov
push
sahf
out
sahf
and
inc
pop
jo
jns
out
xchg
cmpsb
mov
out
cmp
out
or
sbb
dec
iret
repz
bound
lcall
lret
adc
into
push
iret
repz
cmp
jo
xchg
cmp
repz
mov
sahf
cmpsl
stc
push
and
ss
pop
out
sahf
out
adcb
sahf
shr
add
adc
cmp
repz
push
xchg
mov
mov
and
and
cmp
repz
pusha
jo
cmp
xrelease
jns
iret
in
add
adc
cmp
out
sahf
dec
pop
insb
test
ret
add
repz
dec
pop
jbe
repz
xchg
sahf
out
or
and
dec
pusha
jns
out
jo
xchg
cmpsb
mov
shr
cli
adc
pushw
cmp
out
dec
fs
movsb
repz
out
aam
add
iret
repz
sbb
dec
pop
push
cmp
repz
mov
sahf
out
clc
or
sbb
cmp
jns
out
pop
jbe
sahf
lahf
out
sahf
scas
mov
sub
repz
cmp
push
cmp
repz
mov
ds
loopne
push
sub
sub
out
sahf
inc
push
insb
jl
movsb
jl
out
mov
sub
cmp
shrl
inc
push
bound
repz
sbbb
cmpsl
stc
cmp
add
sahf
out
push
push
jl
out
or
sbb
repz
xor
data16
cmp
repz
mov
loop
jns
cmpsl
stc
push
das
and
dec
pop
out
sahf
out
adcb
sahf
enter
xor
sub
iret
repz
push
insb
jl
repz
repz
mov
in
out
sahf
out
xor
ss
pop
sahf
out
sahf
outsb
jle
movsb
mov
jns
ljmp
out
sahf
ss
data16
sahf
jns
out
scas
mov
cmp
repz
sbb
cmp
repz
pop
jo
cwtl
test
lcall
add
sbb
sahf
out
sub
pop
je
out
sahf
out
lods
aam
iret
repz
cli
adc
cmp
repz
adcb
repz
out
push
ss
out
sahf
out
ds
fs
out
sahf
mov
cmp
repz
add
sbb
inc
repz
repz
push
mov
mov
out
or
out
lcall
jns
out
nop
cmpsb
mov
sahf
ja
imul
cmp
cmp
xor
sahf
out
pusha
jo
nop
mov
mov
out
int
cmp
push
cmp
cmp
bound
sahf
out
sahf
js
sahf
mov
aam
popf
idivl
hlt
cmp
cmp
sub
out
sahf
cmp
bound
cmpsb
jl
out
mov
fdivp
push
cmp
cmp
rcll
cs
push
repz
jp
cmpsb
mov
fcompl
or
and
inc
jns
out
pop
push
xchg
mov
mov
iret
repz
push
ds
pop
outsb
cmp
repz
pushf
mov
fidivrl
iret
repz
jns
out
push
outsb
xchg
cmpsb
mov
fsubrp
cmp
sarl
and
push
push
cmp
repz
test
inc
pop
cmp
cmp
inc
inc
inc
push
xor
repz
repz
insb
jl
stos
out
cmp
mov
inc
sahf
out
sahf
sbb
cmp
push
js
cwtl
test
repz
out
in
add
xor
repz
dec
bound
cwtl
scas
lcall
add
sahf
out
and
inc
pop
jo
jns
out
nop
cmpsb
mov
sahf
fsubrp
decb
inc
push
cs
repz
push
fs
repz
repz
mov
aam
out
lcall
cmp
pusha
jo
sahf
scas
ja
out
aam
inc
inc
push
sahf
out
sahf
sub
pop
push
out
sahf
mov
repz
repz
cs
push
iret
repz
data16
movsb
mov
cmp
add
xor
sahf
out
push
push
jns
out
enter
dec
iret
repz
es
pop
jbe
cmp
repz
lods
mov
into
sti
repnz
into
dec
push
sub
cmp
repz
jp
test
stc
cmp
repz
push
dec
out
sahf
cmpsl
push
cs
push
push
out
sahf
sbbb
out
cmpsb
add
dec
push
sub
out
sahf
push
bound
mov
jns
mov
iret
repz
push
cs
push
data16
iret
repz
pushf
mov
aam
sahf
out
ljmp
jns
out
pop
jbe
sahf
lahf
out
sahf
scas
mov
push
cmp
repz
xor
jo
cmp
xrelease
iret
cmp
lock
into
push
push
and
inc
repz
repz
data16
cmpsb
out
cmp
mov
in
add
sahf
out
sahf
sbb
inc
pop
insb
test
out
xchg
stos
ret
repz
out
push
push
and
dec
iret
repz
fs
pushf
mov
fidivrs
push
cmpsb
push
push
sub
out
cmp
js
out
sahf
out
mov
out
jns
out
or
movb
push
pusha
jo
jns
out
pushf
lods
ret
dec
adc
ss
repz
pop
outsb
xchg
ret
repnz
adc
cmp
jns
out
jo
mov
sahf
out
in
cld
or
sbb
repz
xor
jb
mov
mov
out
jns
cmpsl
stc
adc
sub
dec
pop
out
sahf
out
sbbb
sahf
shl
clc
or
cs
repz
dec
pop
outsb
jle
cmp
repz
jns
iret
cli
adc
inc
push
sahf
out
sahf
data16
mov
out
shr
cli
adc
cmp
repz
push
iret
nop
test
out
sahf
out
ds
pop
sbb
inc
pop
jns
out
jo
nop
test
repz
out
fsubr
clc
or
repz
and
dec
pop
push
cmp
scas
fsubr
jns
cmpsl
stc
add
adc
inc
push
out
sahf
out
jl
movsb
mov
lret
or
cs
repz
push
insb
jl
repz
rep
mov
fsubr
out
sahf
out
popa
sbb
inc
pop
sahf
out
sahf
outsb
jle
lods
ret
xor
jns
nop
push
adc
iret
repz
xor
outsb
jle
cmp
repz
ret
bnd
cmpsl
stc
add
sub
out
sahf
out
jbe
sahf
scas
int
jns
mov
fs
iret
repz
inc
pop
insb
jl
cmp
repz
movsb
mov
aam
jns
iret
ljmp
out
sahf
inc
push
insb
jl
test
sahf
out
rcl
mulb
data16
out
fiadds
ds
fs
jns
out
mov
repz
repz
sub
dec
iret
repz
pusha
js
mov
repz
loopne
push
push
jns
inc
pop
jo
out
sahf
out
lods
iret
repz
push
imul
cmp
repz
test
repz
or
out
sahf
out
ds
data16
out
sahf
mov
out
fidivrs
imul
es
sahf
out
sahf
pop
je
pushf
mov
cmp
out
in
adc
repz
repz
pop
outsb
jle
out
cmp
lods
ret
add
out
sahf
adc
cmp
je
sahf
out
mov
sahf
mul
insl
into
insl
outsb
push
cmp
sahf
out
pusha
jo
cwtl
scas
sarl
fsubr
add
adc
repz
sub
push
pusha
jo
cmp
repz
scas
mov
out
cld
adc
inc
push
out
sahf
out
adcb
sahf
add
es
repz
pop
outsb
test
ret
clc
out
sahf
out
jb
cs
sahf
out
sahf
insb
jl
mov
out
add
sub
cmp
repz
pop
insb
jl
repz
xchg
mov
jns
data16
out
sahf
out
push
data16
fwait
add
movsb
mov
out
push
iret
repz
adc
sub
je
cmp
repz
mov
loopne
jns
cmpsl
stc
sbb
push
data16
jns
out
mov
fdivp
iret
repz
or
xor
cmpb
cmp
stos
mov
pop
lock
cs
ds
push
repz
repz
cmpsl
stc
cmp
enter
jns
sahf
out
sahf
xor
outsb
jle
jns
out
stos
mov
cmp
repz
cs
push
iret
repz
push
lret
repz
out
decb
jnp
jns
out
xor
jb
add
or
cmpsb
add
adc
push
shll
push
add
add
lcall
aad
adc
jmp
outsb
cmpsl
sti
xor
mov
popa
jg
sarl
mov
fcmove
mov
ljmp
out
lock
les
cmp
cmp
mov
in
xchg
pop
scas
push
call
jbe
bound
mov
aaa
inc
jmp
push
jp
jo
iret
aaa
add
sbb
xchg
jmp
sti
mov
jge
cmp
push
dec
in
loope
xor
lods
call
mov
cmp
ljmp
stc
xlat
dec
lods
outsb
cmpsb
lock
pop
or
lock
adc
inc
stos
jle
push
call
iret
pop
pop
jns
inc
es
aad
sbb
cs
addr16
cmpsl
lret
inc
in
sbb
mov
incl
outsl
mov
xchg
xchg
sahf
jmp
fstps
fstpl
jno
addr16
mov
mov
mov
mov
test
in
in
popf
dec
jecxz
popa
gs
jno
adc
xchg
das
aaa
es
decl
hlt
pop
icebp
inc
std
pushf
xchg
pop
inc
pushf
push
inc
rcll
and
sub
mov
lcall
jnp
pop
lock
aaa
pop
jno
adcb
fs
jns
and
in
stos
add
ljmp
stos
mov
add
ret
lret
sbb
xlat
xor
int
movsb
pusha
xchg
adc
pop
push
push
imul
mov
cmp
clc
push
sti
rorb
shll
inc
in
lea
or
lcall
inc
retw
and
test
xor
je
jge
inc
loop
mov
sub
dec
shrb
push
xor
clc
cmpsb
jbe
icebp
fbstp
ds
call
das
push
mov
mov
fstp
sti
loope
jecxz
dec
lods
out
xchg
cmp
test
pop
das
fisttpll
jle
sbb
and
pusha
add
cmp
sbb
inc
dec
cli
lds
call
decl
divb
decb
frstor
push
and
xchg
xor
cmp
aam
clc
test
movsl
add
sub
cmp
pop
test
sbb
sbb
incl
lock
mov
or
xor
or
call
cld
cmp
out
jg
mov
mov
out
ds
ja
sbb
jp
pusha
lods
add
pusha
xchg
cltd
mov
gs
mov
sub
sti
aam
jl
cmpb
rcll
scas
imul
movl
ss
sub
or
jbe,pt
and
dec
out
dec
hlt
es
test
ljmp
pushl
xchg
sub
pop
jmp
inc
insb
lods
xor
jb
pop
add
jo
incl
shrl
idivl
jle
stc
mov
xor
mov
dec
mov
cld
call
out
sar
enter
or
orl
and
fs
loopne
jmp
loop
das
adc
pop
cmc
fsubp
dec
inc
sub
icebp
mov
xor
pushf
pop
jmp
call
cmp
scas
frstors
or
test
dec
mov
inc
xchg
mov
push
push
adc
js
sahf
mov
jne
cmpsb
pop
and
ficomps
xor
test
decb
lcall
jl
lret
bound
and
in
push
cmp
cmpsl
or
sarb
mov
jo
xchg
push
mov
sub
je
imul
decl
dec
cmp
adc
ss
xchg
and
in
cmp
xchg
add
in
cmp
mov
test
cmp
pop
mov
dec
push
inc
or
out
fmull
sti
es
mov
repz
sbb
jo
or
shll
mov
bound
cmp
outsb
dec
or
decl
je
mov
fsubl
push
mov
rcrl
not
xor
jmp
inc
inc
adcl
inc
loopne
in
xor
shl
add
cmp
xchg
and
xor
push
jmp
je
or
std
adc
and
sub
int
lock
mov
pop
daa
sub
popa
mov
bound
test
jmp
jg
sub
xchg
jg
jp
imul
inc
sarl
aad
mov
out
and
cmp
cmp
mov
insb
jg
inc
lea
shll
xor
enter
fadds
inc
cmpsl
or
adc
lahf
aas
inc
dec
lcall
jmp
ja
pop
jb
cmp
adc
pop
ds
cmp
xor
adc
into
xchg
or
outsl
adc
push
bnd
sbb
ljmp
lock
out
jle
aaa
mov
out
dec
cmpsb
sti
push
xor
dec
mov
call
cs
adc
jns
dec
fldl
in
lcall
movsb
mov
inc
imul
lcall
jnp
xor
xorb
cmp
pop
clc
in
lcall
or
pushf
popa
xlat
pop
adc
pop
or
or
hlt
cmp
ljmp
inc
add
ljmp
bnd
sbb
and
and
mov
adc
jno
dec
or
adc
xlat
enter
add
daa
pop
mov
lahf
addr16
inc
push
stos
push
jp
pop
push
dec
sbb
ja
outsl
decl
jo
test
gs
jb
mov
sbb
shl
cltd
shl
sub
stos
jg
pushl
pop
test
push
sbb
xchg
sub
xchg
xor
jle
jge
ljmp
pushf
push
or
add
sbb
xor
test
sahf
cmpsl
pushl
data16
jecxz
out
inc
sti
inc
fmul
lcall
jecxz
loope
into
inc
dec
rcrb
sub
jecxz
inc
fnstsw
ljmp
daa
add
inc
and
mov
or
fwait
add
ss
cmpsl
dec
scas
jecxz
jmp
clc
incl
test
shrl
mov
cmp
pop
cld
in
xorb
aaa
mov
add
xor
test
stc
fsubrs
mov
popf
or
mov
jg
incl
mov
pop
push
imul
test
jnp
inc
ds
insb
cmp
test
add
aas
dec
leave
pop
outsb
mov
mov
add
sbb
cmpsb
in
and
sbb
popa
xorb
std
jbe
ret
push
xchg
cmpsl
push
sbb
sub
stos
jbe
xor
xor
and
loope
ljmp
jge
mov
mov
pop
pop
pushl
add
adc
test
pushf
mov
add
incl
fdivp
rcl
test
ret
jp
push
cli
bound
scas
sar
inc
lods
outsb
dec
push
xchg
out
jp
add
dec
sbb
add
jle
lret
je
call
jg
dec
inc
cmp
scas
cmpsb
pop
negl
rorb
sub
add
xchg
imul
cmp
lret
jg
mov
nop
call
mov
jmp
mov
jb
mov
mov
lds
mov
rcl
or
call
and
repz
pushl
addr16
xchg
xor
jne
add
lret
imul
pop
ror
inc
push
xlat
pop
aad
jmp
cmc
add
dec
flds
jo
es
cmp
fsubs
movsl
jnp
movsb
decl
cli
ret
imul
dec
cmpb
arpl
cmp
adc
xchg
decl
push
int
movsb
sbb
and
nop
les
imul
xchg
das
or
inc
insb
pushf
jne
cwtl
fnstenv
pop
ret
adc
add
out
add
dec
loopne
jmp
add
mov
adc
inc
push
test
jbe
xor
or
inc
es
sbb
ljmp
jle
cwtl
xchg
test
mov
mov
jmp
xor
js
dec
dec
xchg
mov
pop
test
dec
sub
xchg
jo
mov
sti
je
inc
std
pop
push
sarl
jnp
daa
ficompl
movsb
psubsb
cmc
mov
inc
and
push
cltd
xor
xor
mov
jg
add
ret
inc
inc
imul
dec
leave
xchg
cli
rcll
pop
cmp
incb
aad
xor
sub
mov
pop
cmc
jle
pop
shlb
loopne
iret
dec
inc
mov
cli
push
fisubrs
out
test
out
xchg
stos
xchg
fisubl
stc
ljmp
push
push
dec
into
mov
xor
lcall
cmpsb
cltd
dec
xor
jno
push
xlat
jl
dec
mov
inc
xor
xor
ret
push
call
cld
arpl
lock
cwtl
jp
add
and
ror
aad
mov
incl
aam
cmpsl
cmc
popa
mov
jp
std
js
lret
ficoml
aas
and
je
sub
sbb
mov
shlb
jl
nop
mov
decl
jae
xchg
jecxz
insl
mov
loope
data16
sbb
das
sar
hlt
add
cmp
pop
sub
ljmp
sarb
fs
sbb
push
sub
xor
inc
cmp
jmp
sbb
fsubrs
and
mov
in
shrb
push
sub
fists
pop
roll
addr16
push
jb
fcmovnu
mov
pop
xor
outsl
mov
ljmp
push
nop
inc
jecxz
sub
jle
push
sub
sub
in
inc
jp
xlat
dec
sar
in
dec
xor
push
add
out
push
test
push
and
mov
decl
aad
f2xm1
mov
pop
pusha
or
mov
int3
in
pop
loop
mov
shr
arpl
call
orb
sbb
or
outsl
sbbb
cmp
adc
mov
int3
cmpsb
incl
xor
jno
xor
mov
add
mov
sti
scas
inc
call
call
pop
fucomi
fsts
mov
sub
mov
jne
inc
clc
rclb
sar
call
out
rcr
cmp
xchg
lock
das
fs
incl
cmp
test
jge,pn
cmp
insb
aaa
dec
loop
xchg
mov
mov
mov
clc
call
mov
mov
sti
push
mov
pop
popf
mov
das
mov
add
jno
jmp
and
mov
push
cmp
jg
sahf
out
daa
scas
or
rorl
mov
ja
mov
insb
sbb
push
pushf
sub
loope
xchg
adc
push
jbe
clc
jns
nop
mov
jmp
outsl
adc
cmp
pop
test
sbb
arpl
cmp
decl
mov
or
mov
data16
into
jl
int3
mov
pextrw
xor
ss
jb
stc
sub
ljmp
and
push
outsb
push
cs
fs
loope
pusha
insl
std
or
movsb
add
cld
xchg
and
rol
in
cmp
ret
div
roll
sbb
dec
gs
call
mov
ljmp
mov
outsl
in
in
insb
stos
sbb
clc
sub
jmp
jns
and
jns
icebp
fcmovnb
movsb
add
cmp
push
arpl
leave
and
das
movsl
ja
fcomip
jmp
add
out
mov
clc
inc
rcr
sti
push
cmpsb
mov
inc
cmpsl
cmp
roll
mov
call
decb
adc
ljmp
inc
movsl
mov
orl
std
imul
push
inc
pop
inc
and
dec
cmp
jmp
push
popa
pop
pop
inc
push
into
imul
mov
into
jmp
add
js
jae
cltd
inc
dec
mov
jmp
addl
inc
jno
inc
sti
inc
dec
jne
pop
repz
in
inc
push
nop
lods
outsl
in
ror
inc
mov
jmp
dec
add
rcr
cmp
loop
jns
and
mov
mov
out
aad
and
call
repnz
enter
fldenv
pop
imul
int3
decl
xchg
repnz
adc
cld
dec
and
rorl
add
xchg
mov
mov
hlt
push
lods
ds
cmp
xchg
mov
mov
inc
lcall
icebp
and
mov
mov
das
dec
jnp
lods
cmpl
jo
jmp
mov
xchg
or
mov
xor
decb
xchg
cs
shrl
xor
lcall
cltd
xlat
das
mov
xchg
gs
sbb
dec
push
ds
mov
call
inc
movsl
enter
cmpsl
jb
sub
shrb
out
loope
out
jbe
repz
fsubrs
push
adc
mov
movsl
dec
repnz
or
add
add
jg
sub
push
or
mov
inc
push
pop
or
pop
xor
es
stc
sti
mov
xchg
nop
or
jmp
adc
ret
cmp
loope
mov
inc
int3
rorb
or
dec
fldenv
test
ret
pop
adc
jmp
aaa
mov
loopne
movsl
mov
sbb
arpl
inc
test
push
mov
sub
fwait
incl
or
ljmp
sarb
cwtl
std
es
orl
cld
fs
stos
mov
loop
jnp
xchg
stos
cmpsl
jnp
inc
mov
out
cli
decl
stos
mov
mov
cmc
lds
adc
jg
test
ljmp
pop
sbb
add
outsl
push
push
les
fs
leave
jo
mov
incl
mov
add
lret
push
das
mov
add
sahf
sbbl
in
pushl
cld
dec
jne
sub
ds
or
mov
add
ror
xlat
loope
mov
bound
int3
pushl
in
out
mov
jns
or
loop
add
aas
or
jnp
pop
popa
jg
decl
jl
loope
arpl
bound
mov
lcall
cmp
fidivrs
in
sub
movsb
xchg
loope
mov
mov
leave
dec
or
scas
call
adc
jl
mov
stos
or
dec
jo
jg
fsubl
ja
scas
jge
loope
stos
jg
jmp
xor
mov
jle
pop
xchg
daa
addr16
and
inc
xchg
pushf
mov
sub
imull
out
mov
mov
lds
jo
mov
inc
pushf
lock
pushw
add
inc
jb
jmp
xor
mov
idivb
or
or
fisubl
or
movsl
push
lcall
cld
int
das
add
in
sbb
call
cltd
and
popf
pusha
sub
jg
std
sbb
sbb
js
test
pop
and
es
mov
icebp
push
mov
push
xchg
stos
xor
ret
mov
imul
aas
inc
int3
inc
fidivrl
push
in
mov
rolb
add
imul
in
insl
lcall
dec
aaa
jo
jo
adc
add
incl
sti
jle
lret
pop
ds
fs
cmp
mov
dec
mov
xchg
cs
mov
cmp
mov
dec
pop
adc
outsl
hlt
and
pop
mov
adc
mov
mov
in
stos
or
pop
addr16
call
cmpsl
pop
fiaddl
mov
loop
imul
inc
pusha
sub
inc
call
add
ficomps
imul
or
jg
lods
pop
and
mull
push
rcrl
lcall
dec
call
xchg
cs
fsubrl
push
int3
insb
add
sahf
lret
outsl
cmp
xor
ljmp
jmp
jl
mov
mov
dec
notl
ret
adc
orb
ret
sbb
test
dec
jmp
ds
fs
cltd
sub
mov
pushl
sub
nop
sbb
addr16
outsl
mov
ja
push
mov
lds
dec
add
pushl
jmp
lret
loope
in
test
out
and
mov
out
adc
out
psubusw
xchg
jle
inc
in
mov
mov
push
mov
jmp
decl
aaa
leave
cmp
and
les
mov
inc
jne
push
and
lcall
je
in
imul
in
stos
and
cmp
faddp
mov
daa
cmp
andl
stos
sbb
out
cld
das
mov
call
std
testl
dec
aam
dec
sub
psrld
and
jmp
shrl
adc
mov
cmp
pop
das
jecxz
roll
jmp
sub
dec
cmp
cltd
mov
aaa
jle
sbb
push
iret
stos
mov
mov
and
jmp
addb
scas
pop
sub
jecxz
jbe
or
lds
cli
add
aaa
cld
jae
stos
mov
pop
sbb
push
dec
push
or
cmp
jne
add
cmc
mov
add
jno
sti
mov
in
jmp
adc
push
popf
ja
dec
ret
cltd
sbb
idivl
pop
lcall
shl
xor
mov
sub
and
aaa
pop
mov
jl
mov
out
mov
jge
mov
scas
add
and
jge
xor
sub
ret
xor
test
cmc
push
add
and
mov
pop
cmp
jp
and
icebp
outsl
xchg
xchg
jbe
or
and
lcall
mov
add
push
aaa
arpl
in
add
mov
jmp
dec
adc
mov
aas
mov
mov
mov
cmp
and
mov
addr16
mov
cmc
xor
ds
je
push
pop
push
aas
jg
dec
mov
add
adc
sub
mov
mov
fxtract
pop
jg
push
mov
xor
pop
xlat
lret
jo
mov
jmp
pushl
out
scas
scas
vpcmpeqb
jle
add
stos
in
pop
jnp
xor
inc
pop
loope
lods
scas
jmp
sub
loope
xchg
bound
adc
xchg
dec
sbb
or
mov
push
ds
ljmp
sub
push
mov
dec
dec
push
stos
jecxz
addr16
in
mov
xchg
cwtl
mov
pushf
or
iret
sar
pushl
push
dec
mov
data16
stos
loop
sub
mov
jle
ljmp
inc
out
or
and
sub
lock
adc
test
sub
ret
inc
dec
inc
lds
dec
les
outsb
addr16
insb
xchg
mov
ds
pop
add
jne
jmp
mov
jmp
mov
push
in
inc
mov
test
sti
je
and
adc
inc
decl
add
pushl
mov
jge
lret
push
or
into
test
xchg
pop
loopne
repnz
decl
xor
dec
jmp
sub
js
sti
sub
cmpl
sub
ljmp
jmp
sahf
sbb
inc
inc
adc
test
mov
cwtl
cmp
pushf
push
insb
xchg
mov
rclb
and
inc
nop
repnz
divl
or
inc
jno
incl
inc
mov
imull
and
fwait
jo,pn
jecxz
js
jb
push
incl
stos
mov
in
xor
sbb
and
jl
xchg
aad
lods
mov
dec
pop
lea
pop
and
jmp
loop
jmp
mov
in
nop
push
mov
sbb
cmp
decl
pop
rorb
xlat
cmp
shll
and
lahf
decl
xor
pop
adc
lods
jmp
ds
outsb
adc
test
push
cld
incl
icebp
je
ret
mov
push
stos
sub
adc
fcomip
shll
mov
push
imulb
cmp
push
jecxz
add
ljmp
push
xchg
xor
in
push
dec
rol
repnz
out
repnz
inc
stos
inc
adc
sub
repnz
jmp
movb
ret
adc
or
jb
jne
mov
sar
inc
sahf
iret
mov
jne
pushl
sbb
fs
ds
insb
fldenv
subl
push
sbb
mov
iret
xlat
sar
pushl
imul
mov
jle
gs
pop
js
dec
xchg
jmp
loopne
lahf
aas
into
adc
pushf
mov
adc
fsubr
mov
pop
cld
inc
aas
ret
xchg
ljmp
js
xor
add
into
xchg
cmpsl
mulb
add
ljmp
cmp
jnp
outsl
sub
mov
rcll
out
rorl
jb
lahf
pop
xchg
lock
or
decl
inc
and
aaa
loope
pop
imul
push
and
into
das
clc
decl
cli
test
cmp
or
std
lcall
cmpsl
js
lret
repnz
inc
adc
test
or
fmull
dec
or
mov
incl
imul
pop
adc
lea
pop
or
adc
aad
and
decl
jae
in
sbb
fstpt
lea
sbb
ljmp
mov
and
cwtl
aaa
sbb
jp
cwtl
xchg
push
sub
enter
and
mov
adc
cmp
icebp
sbb
lock
andl
mov
cmp
out
clc
jg
mov
xchg
push
sbb
dec
mov
call
stc
cli
fnstenv
in
or
inc
jmp
adc
jb
outsb
pop
adcb
jmp
ret
leave
pop
push
pop
loopne
cs
test
mov
push
dec
dec
mov
scas
outsb
cmp
outsb
push
cld
cmp
shlb
cld
into
out
xchg
popa
dec
nopl
scas
daa
cmpsl
aaa
mov
outsl
cli
call
mov
or
push
cmp
mov
push
xor
dec
popf
into
pop
mov
into
push
dec
sub
push
lock
imul
push
mov
mov
jmp
mov
lret
aas
dec
stos
cmp
mov
mov
jne
lcall
insb
jp
mov
es
mov
dec
cmpsl
pop
loopne
repz
enter
decl
aad
repnz
xor
jo
out
imul
mov
pop
lret
adc
arpl
divl
cmpsb
mov
cmc
cmp
negb
or
loop
out
insb
cmc
xchg
mov
cmpsb
push
sbb
inc
jge
mov
jl
jmp
jp
out
sar
clc
mov
push
pop
jmp
add
adc
xchg
or
xorl
shlb
call
je
out
adc
cwtl
loop
xor
dec
movsl
push
bound
fadd
jl
dec
enter
icebp
rcrb
pop
jns
jbe
sub
push
cs
cmp
clc
call
cmp
orl
and
sub
adc
jae
call
mov
mov
scas
jb
aas
fsts
mov
mov
jp
das
pop
pushl
repz
pop
push
sub
mov
lea
push
inc
sarb
jmp
mov
dec
dec
out
in
inc
movsb
sub
or
and
cmp
decl
incb
or
sub
pop
push
sahf
xor
rolb
ljmp
adc
cwtl
fisttpll
sbbb
mov
mov
cs
pushf
lret
cmp
fcoms
or
sub
adc
inc
es
and
xor
pop
jle
sub
fidivs
int3
sarl
stos
mov
jg
push
lret
popf
out
cmpb
js
mov
and
clc
cltd
or
out
pushl
sub
push
dec
inc
sub
pop
or
fxtract
cli
jle
adc
cld
call
cwtl
mov
ljmp
sub
sbb
stos
or
int
inc
mov
lcall
jecxz
test
rcr
scas
add
in
push
push
imul
dec
nop
inc
daa
int3
es
ja
decl
xorl
in
js
pop
push
sbb
aaa
push
incl
int
and
imul
add
push
mov
hlt
fistps
testl
decl
stc
push
or
iret
jns
cmc
jo
mov
push
sub
push
xor
mov
mov
xor
test
xchg
int3
lahf
int3
mov
lcall
mov
outsl
mov
in
add
clc
pop
lods
push
test
dec
movsb
sbb
decl
hlt
int3
repnz
xchg
cmp
push
mov
mov
push
or
adc
shl
and
xchg
out
xchg
sbb
cs
jnp
jb
popa
test
jg
jmp
ja
loope
push
push
adc
popa
or
ret
incl
jo
fxch
jle
pop
fistpl
inc
popa
xor
test
mov
nop
cmp
jmp
jnp
lock
scas
push
aaa
repz
sahf
push
adcb
pop
jmp
imul
and
push
aaa
test
mov
sarl
mov
arpl
lea
dec
push
icebp
call
adc
push
add
ljmp
xchg
rolb
mov
ljmp
push
and
fisubrs
sti
clc
movsl
adc
les
pushl
lcall
lds
nop
or
or
dec
push
and
inc
fsubrp
decl
cmp
mov
ss
inc
insl
int3
cmpsl
pop
or
fwait
rcll
inc
test
rcl
jmp
fstpt
das
movsl
inc
pop
inc
mov
jge
in
lock
cwtl
add
rdmsr
xor
dec
mov
pushl
movsb
xor
pop
stos
xchg
push
stos
xor
iret
sarl
sbbl
jmp
ljmp
std
bound
pop
pop
outsl
or
dec
and
mulb
mov
cmc
daa
fcoms
call
das
ja
jae
in
rcrb
push
test
adc
lods
sahf
incl
push
push
add
mov
xchg
pop
lcall
cmpsl
inc
push
fstpt
inc
add
loop
sub
iret
jae
mov
mov
dec
stos
xchg
dec
jne
call
shll
std
adc
pop
pop
sub
mull
xor
insl
push
sbbl
out
incl
popa
mov
adc
mov
sbb
ja
loope
and
rorb
pop
call
cmpsl
pop
push
fidivs
clc
mov
bound
lock
test
les
push
push
sbb
addl
adc
jg
push
ficoml
inc
and
or
pushl
jp
sub
pushf
popa
mov
imul
addr16
aam
and
and
adcl
and
cmp
xor
xor
fstps
inc
outsl
fists
sub
inc
sbb
push
imul
adc
mov
imul
cmp
dec
mov
aaa
out
imul
fucomi
ret
enter
jle
pushl
shll
andb
pop
xchg
push
call
jp
lcall
xchg
cs
mov
mov
repz
or
dec
mov
inc
mov
adc
pushl
ret
imull
es
dec
jnp
jl
outsb
push
pop
loopne
push
jb
xchg
sbb
xlat
pop
mov
and
push
inc
fisubs
js
sub
xor
lret
into
or
das
ljmp
pop
xchg
mov
scas
adc
mov
sbb
and
lcall
sub
cmp
push
hlt
add
mov
loop
pop
dec
loopne
mov
mov
inc
lret
sub
imul
in
hlt
push
push
mov
rcrb
mov
dec
mov
fisubrs
repnz
add
add
lcall
imul
js
addl
dec
dec
mov
jg
mov
and
jmp
inc
inc
outsb
mulb
lret
subl
pusha
out
je
mov
sahf
ret
std
in
mov
adc
cmp
mov
xor
sbb
and
sbb
mov
lds
mov
hlt
inc
pop
ret
mov
mov
es
fimuls
lret
notb
inc
mov
xchg
pusha
xchg
aas
jbe
sub
push
fs
je
fdivrs
insb
pop
popf
icebp
and
jmp
jg
sbb
sub
cli
sbb
sbb
add
sti
inc
pop
sbb
jmp
popa
dec
lret
jns
push
xor
cwtl
mov
loop
nop
jg
push
fisubl
pushl
jns
clc
cmc
sub
or
scas
mov
xchg
fstp
outsl
mov
jge
fs
call
and
out
int3
or
cmp
mov
inc
lods
repz
jecxz
incl
jo
and
call
mov
sbb
jecxz
arpl
mov
int
dec
dec
es
popa
out
inc
cmp
lcall
fidivl
or
push
lcall
adcl
mov
rsqrtps
ud0
add
gs
push
xor
out
push
mov
iret
xchg
sbb
call
in
cwtl
lcall
outsl
call
and
mov
sub
xchg
andb
add
stc
jns
add
jnp
inc
lods
leave
in
enter
sahf
mov
xchg
mov
shrb
push
push
mov
mov
mov
mov
mov
sbb
movsl
imul
lahf
xchg
ljmp
add
in
mov
bound
repz
lods
test
daa
jg
mov
les
insb
fcoml
inc
jge
into
lods
dec
mov
inc
aad
roll
int
dec
mov
ja
pusha
out
in
sub
cmp
add
sub
cmp
cmp
mov
pushl
xlat
xor
test
jmp
mov
mov
cltd
inc
aam
out
pcmpeqw
std
decl
outsb
xor
cmp
jecxz
mov
mov
cmp
pushl
fsubr
push
nop
jge
gs
call
sbb
outsb
daa
divl
mov
or
adc
adc
in
sbb
adcb
jne
inc
xorl
fcomip
incl
cwtl
sub
mov
enter
cli
cltd
out
sbb
mov
jo
pushf
call
push
xchg
xchg
inc
out
dec
movb
dec
icebp
add
and
inc
xlat
in
pop
stos
jmp
jbe
addr16
lods
inc
fwait
xchg
mov
cmp
jnp
mov
ljmp
cmp
movsb
lea
fwait
movsl
test
pop
fsubl
jne
or
mov
nop
mov
inc
cmpsb
hlt
jb
and
pushl
cmpps
pop
sbbl
xlat
xor
cmp
adc
cmp
aaa
aaa
mov
ds
aad
roll
and
xor
xorb
fs
ss
incl
out
mov
mov
inc
daa
mov
jnp
or
inc
fisttps
sbb
fs
lea
aad
in
ss
inc
mov
push
push
and
ljmp
sbb
clc
cwtl
pop
jecxz
mov
mov
orb
push
sbb
ljmp
fwait
dec
adc
in
scas
addb
inc
pop
lcall
or
sarl
fsubp
fsub
jnp
dec
mov
jle
sub
gs
fs
ljmp
pushl
aas
pushf
and
cmp
cmp
sbb
jp
aad
incl
or
jo
popa
jp
rcll
dec
jg
mov
ret
sbb
out
decl
lret
mov
mov
pushl
jae
push
push
gs
mov
push
decl
cli
jge
scas
cmp
lcall
test
ret
add
sub
outsb
pop
xchg
cmp
imul
mov
pop
lret
aas
fs
mov
cwtl
ds
fcomip
nop
push
bound
xchg
repz
cltd
mov
pop
icebp
pop
pop
lock
cld
cs
incl
sbb
adc
mov
sbb
inc
call
add
xor
ret
pushl
enterw
push
mov
mov
in
mov
inc
enter
cmp
mov
jl
ret
sbb
sub
cltd
pop
push
pop
and
dec
push
test
cmp
xchg
imul
push
dec
sub
repz
js
xlat
aaa
sbb
pop
insb
sti
repnz
pop
jg
push
inc
lea
xor
push
das
and
stos
and
inc
cmp
jns
pusha
xor
mov
js
push
ret
cmp
xor
es
inc
inc
xor
out
clc
mov
lret
subb
call
pop
lock
mov
dec
into
jg
jb
imul
jo
loope
push
outsl
jne
pushl
pop
xlat
push
xor
adc
mov
in
mov
and
pop
fcomi
bnd
fisttpll
ds
lock
push
xchg
lret
icebp
fdivrl
add
mov
lahf
pop
xor
stc
incl
cld
lcall
ljmp
push
mov
xchg
push
cli
or
lcall
inc
cmpsb
movsl
insl
addr16
movsl
clc
push
clc
and
and
mov
scas
incl
cmp
stos
xlat
push
in
movsl
xchg
mov
dec
clc
int3
addl
shll
mov
decl
lock
cwtl
es
mov
pop
fildl
scas
bound
add
mov
mov
js
mov
xchg
mov
or
testb
loop
icebp
and
pushl
lea
inc
arpl
adc
or
lcall
cmp
push
dec
pop
dec
test
lods
add
leave
js
lcall
cmpsb
sbb
or
mov
or
enter
das
mov
movsb
xor
mov
mov
in
dec
jne
mov
fisubs
daa
ds
or
adc
sbb
sbb
call
dec
pop
out
mov
pop
xchg
pop
and
sbb
push
idivl
cmp
add
pushl
xchg
hlt
test
inc
sub
inc
daa
pop
pop
outsb
or
mov
in
adc
inc
inc
mov
pop
mov
enter
and
mov
and
decl
mov
mov
pop
jbe
out
popa
mov
in
cld
lret
lock
sub
and
cmp
or
or
cs
addr16
push
inc
cmc
dec
call
mov
aam
and
push
pop
jg
jns
sbb
jbe
push
inc
or
sub
cli
fcomip
jmp
adc
psllq
sub
jae
adcb
jno
cmc
fildll
call
and
sbb
xchg
in
loop
cmpl
mov
xchg
mov
push
jge
pushl
push
jge
jecxz
in
mov
or
inc
push
ret
decb
repz
xchg
cmp
jle
push
push
shrb
iret
cmp
cli
cld
test
add
add
call
inc
out
mov
or
cs
sub
push
ret
push
fucomp
arpl
gs
cmpsb
mov
mov
lret
mov
and
stos
xchg
cmp
movsl
or
lcall
orb
leave
mov
in
out
jb
push
int
jo
fadds
adc
fnstcw
push
mov
fs
cmc
cmpb
adc
pop
mov
push
mov
push
push
mov
in
push
sub
cmpsl
orl
jns
stos
sahf
or
mov
ja
rclb
push
lea
loopne
les
loop
rorb
mov
cmp
pushf
shll
dec
jmp
cmpsl
ljmp
push
add
popf
mov
das
inc
jge
cmp
stos
mov
aam
pop
xchg
negb
mov
data16
lcall
push
ds
ss
push
jl
mov
push
aad
pop
add
push
loopne
out
shlb
inc
or
loope
mov
push
addr16
shll
pop
and
or
push
mov
push
mov
stc
fstpt
jae
jmp
inc
jno
push
add
pop
adc
mov
sarb
movsl
mov
lods
leave
pusha
cmc
pop
push
scas
cmp
sub
jge
jge
mov
mov
das
pusha
push
fdivr
sub
mov
jo
adc
les
adc
cmp
cmp
hlt
jmp
jbe
test
sub
lret
push
test
mov
dec
sbb
dec
mov
lcall
loop
dec
aas
pushf
push
inc
fistl
out
scas
out
pop
icebp
or
test
pop
jmp
icebp
sub
mov
cmpsl
push
or
xchg
sbb
sub
push
adc
std
cwtl
cmc
xor
pusha
mov
mov
in
jmp
or
sbb
aaa
std
lcall
mov
pop
xor
outsl
xor
mov
xchg
add
xor
call
push
pop
add
ret
push
scas
cli
fnstsw
in
fsts
add
andl
dec
dec
add
sar
lcall
loopne
xor
adc
lret
sub
adc
and
sbb
lcall
insb
daa
xchg
add
stos
out
out
adc
popl
adc
fcmovnu
cmp
pop
jns
mov
shll
lock
scas
andl
adc
icebp
sub
jl
push
inc
dec
xchg
and
pop
xchg
pop
jge
inc
push
jnp
cld
mov
jl
or
mov
push
out
int3
jle
xchg
pop
inc
pushf
push
pcmpgtd
mov
jle
xchg
je
rol
push
sarb
loopne
call
mov
and
push
pop
dec
adcl
lahf
loop
fists
mov
jae
and
ja
test
adcl
jmp
out
inc
pop
jp
inc
cli
inc
loope
mov
pop
in
adc
xor
pop
rcrl
incl
pop
mov
out
addr16
icebp
xchg
addr16
in
sub
das
push
ljmp
adc
cmpsl
aaa
icebp
pushf
cli
bound
jecxz
ret
repnz
and
push
fcos
fisubrl
movl
cmc
sbb
xorb
jecxz
insl
fnstenv
sarb
aaa
mov
mov
incl
ret
push
int3
lret
mov
aad
aas
sbbl
sbb
mov
jg
lock
notb
push
ficoml
sub
add
outsb
sar
push
push
sarl
mov
jb
lahf
decb
lea
and
cmpsb
jg
call
insb
lods
enter
mov
inc
test
scas
pushf
pushf
shll
fildl
lcall
cmp
cld
aaa
pop
inc
mov
push
shll
cmc
sarb
cs
jb
jns
mov
push
mov
ja
mov
incl
xchg
and
cmpsb
enter
cmpsb
hlt
in
icebp
mov
mov
test
ss
cmp
jg
inc
addr16
xor
in
mov
int3
addr16
rol
dec
incl
push
xor
repnz
lods
push
ret
loopne
or
lea
or
test
jmp
scas
adc
jno
xlat
sub
lock
adc
je
das
xor
sbb
push
add
pop
imul
out
xor
out
mov
int
test
push
call
imul
popf
cld
jmp
and
fldenv
or
aad
lcall
push
xchg
mul
push
xor
sbb
push
cmpb
dec
mov
clc
lcall
xchg
sbb
mov
push
push
cmp
enter
out
ret
pushl
jne
pop
push
std
cmp
xchg
es
adc
stc
ljmp
mov
lds
lcall
in
inc
ds
jp
jl
jmp
xchg
xchg
out
mov
or
incl
addr16
xlat
mov
pop
pop
adc
je
sbb
cmp
xor
cli
ljmp
jbe
push
add
lret
insl
rcrl
das
push
and
mov
cmpsb
incl
cld
repnz
adc
sub
xor
gs
stos
arpl
inc
mov
xlat
nop
xchg
adc
xchg
cmpsl
jl
or
push
adc
adc
pop
pop
inc
adc
mov
jp
add
call
test
or
and
cli
or
or
ds
xor
sahf
xchg
sub
aas
adc
or
out
fnstsw
sub
sbb
hlt
lret
mov
enter
cmp
jl
sahf
loopne
sahf
fildll
sbb
ret
dec
jmp
inc
pop
cmc
ljmp
lret
pusha
out
cmpb
sub
divb
add
cmp
in
lret
cld
in
jp
push
lea
aaa
push
jb
ja
add
inc
pop
or
mov
xor
call
adc
sub
sbb
dec
cmc
imul
xchg
push
sub
mov
sbb
mov
sub
sub
outsb
inc
repz
mov
ljmp
xlat
outsb
jg
ljmp
dec
fimuls
fistps
mov
sbb
or
sbb
ljmp
sbb
xchg
loope
or
in
sbb
push
lahf
pushf
add
xor
fwait
add
add
into
xchg
jl
xor
xor
pop
hlt
je
icebp
ret
fadds
mov
cld
lcall
decb
int
fnstsw
out
mov
and
and
call
mov
les
popf
push
mov
std
jns
mov
mov
jbe
jmp
inc
stos
movsb
and
pop
jno
cmp
icebp
cli
push
jmp
mov
xchg
cltd
mov
pop
adc
rcrl
iret
iret
subl
inc
sub
sbbb
jno
and
sub
incl
sub
dec
jle
xchg
je
test
mov
dec
jmp
cmpsb
call
aas
dec
cmp
adc
in
sbb
mov
xor
bound
call
sub
add
repnz
sbb
inc
in
sarb
push
and
xchg
xchg
mov
in
inc
aaa
movb
imul
push
adc
or
sub
push
dec
loopew
jle
pop
dec
and
ret
and
pusha
popf
jl
aaa
cmp
jb
mov
inc
mov
sbb
cmp
mov
stos
fsubl
arpl
cli
lcall
aad
hlt
inc
mov
adc
jecxz
outsb
daa
push
int3
adc
or
sub
lods
aam
lcall
out
incb
push
mov
data16
xchg
push
incb
in
repz
mov
scas
cli
mov
and
cmpsl
push
sbb
jae
push
push
xchg
in
xor
jne
lcall
dec
call
add
or
inc
ret
fisubrl
leave
and
bound
dec
idivl
in
divb
sbb
loope
sbb
pop
int3
adc
jbe
jo
inc
cs
lds
fisubs
call
mov
pop
ficompl
sub
das
mov
mov
bound
dec
adc
jg
push
aaa
hlt
call
jno
mov
lods
xchg
lcall
pop
inc
xchg
sahf
imul
mov
mov
lret
lcall
ja
popf
mov
jns
in
nop
xchg
adc
mov
pushl
pop
xor
adc
inc
ljmp
js
pop
in
insb
dec
sub
add
loop
incl
mov
lds
int3
mov
inc
dec
add
sbb
dec
and
mov
in
out
sbb
cs
shrl
stos
mov
stos
pusha
push
jnp
cmp
mov
clc
stos
decb
lods
push
test
push
jnp
shl
cmp
pushl
push
fs
and
imul
sbb
pop
test
fxch
outsl
jmp
and
mov
incl
mov
push
and
imul
je
add
inc
xor
add
ljmp
ljmp
pop
mov
insb
mov
test
ja
in
js
or
push
int
addb
sub
rorl
nop
pop
lcall
jbe
aaa
mov
dec
adc
jg
mov
fimuls
loop
dec
and
mov
sar
ljmp
and
aad
pop
inc
pop
ficomps
or
ljmp
cmpsl
daa
pop
mov
je
mov
roll
mov
dec
jmp
pop
leave
adc
andb
push
pop
sub
imul
test
or
adc
mov
in
pop
mov
divb
and
jne
jge
push
aam
daa
int3
lea
jbe
neg
movsl
and
and
call
xor
xchg
roll
test
nop
loopne
lcall
rorl
jae
test
into
sbb
xchg
add
mov
cli
adc
and
es
adc
ret
sub
rcrb
int3
push
ljmp
lcall
mov
fsqrt
rolb
dec
sbb
inc
cmp
addr16
mov
pop
loop
jp
inc
adc
fwait
jmp
lret
jecxz
int3
push
out
dec
arpl
xor
push
sbb
adc
cltd
ret
int3
mov
sbb
push
cwtl
fwait
sahf
push
lret
jp
and
pusha
ret
decl
and
incl
mov
xlat
xor
xchg
inc
inc
jl
loopne
mov
jmp
fisttps
fstl
lret
in
push
jmp
dec
fimull
pop
push
aad
sbb
cmp
mov
stc
push
outsb
incl
xor
fdivrl
adc
dec
jbe
mov
adc
pop
add
ljmp
inc
or
sub
jg
jns
jbe
push
enter
mov
mov
push
jo
test
jg
cmp
xchg
jb
loopne
pop
sub
and
cmp
int
shl
or
pop
ss
rcll
jle
push
mov
mov
sub
jno
cmp
mov
push
xchg
in
sahf
sbb
adc
testl
mov
les
dec
adc
in
cli
pop
jle
jo
add
push
stc
cmpsl
xchg
popa
fmuls
dec
xor
stos
in
sub
addb
clc
or
pushl
mov
pop
jo
add
adc
rcrb
pop
push
repnz
xor
out
fs
xchg
cmp
mov
out
es
das
addl
mov
lcall
jp
push
call
sub
xor
loop
sub
cwtl
sub
jg
push
loope
sub
xor
pop
xor
xchg
push
cmpsb
sub
dec
mov
in
incl
jnp
arpl
movsl
call
jecxz
xchg
jp
and
ret
call
xor
inc
nop
xor
mov
mov
pusha
push
dec
cs
lods
adc
mov
mov
cld
mov
loopne
inc
into
sbb
mov
dec
lret
jo
call
sbb
sub
pop
jo
lret
mov
nop
aas
mov
inc
push
int3
cli
pop
mov
call
lcall
mov
int3
adcl
out
xchg
ficompl
sbbl
ret
dec
insl
call
scas
cmp
sub
popfw
enter
mov
pop
cld
incl
inc
andl
cmp
sub
pop
xchg
fnstsw
ljmp
popf
in
call
xchg
cli
pop
mov
movsb
xchg
orb
cs
das
push
mov
lds
cs
cmp
jmp
mov
loope
enter
xor
ret
inc
out
mov
mov
xlat
outsl
pusha
stc
xor
adc
jl
mov
daa
inc
cmc
loope
inc
testb
inc
cltd
adc
aam
mov
push
call
inc
pop
jmp
cmp
pusha
iret
jae
push
inc
mov
arpl
mov
jge
pop
pop
mov
loope
push
push
adc
inc
pop
sbb
push
add
rorl
insb
scas
sbb
decl
sbb
popf
mov
jmp
pop
mov
jo
push
fcmovnb
jg
mov
in
xor
enter
mov
mov
mov
adc
aam
add
jge
cmp
orb
stos
jo
sub
and
pop
lcall
fldl
pop
mov
cmp
fdivs
jb
pop
sahf
fistpll
pushf
js
cmp
call
push
stos
movsl
lea
or
stos
and
iret
jp
and
in
hlt
fimuls
hlt
jp
jg
stos
jmp
mov
cmpsb
xchg
loop
xor
pop
mov
sbb
call
das
sbb
fcoml
je
out
jle
push
std
idivl
mov
push
add
mov
dec
lcall
fwait
fs
pop
fists
insl
jnp
out
addb
jns
jg
fidivrs
dec
daa
lcall
or
mov
adc
movsb
push
fistpll
cld
dec
mov
repnz
inc
dec
mov
in
push
in
and
pop
jmp
mov
dec
cli
adc
lcall
nop
pusha
clc
orb
mov
rcrb
cmp
push
push
jno
js
and
data16
cld
fstpl
sbb
mov
call
pop
ljmp
add
aas
mov
and
repz
xor
adc
incl
adc
jo
dec
and
shlb
jno
dec
cmp
das
pushf
jae
fsubrl
mov
outsl
cli
pop
loopne
xchg
aaa
loop
pop
mov
and
cmp
jmp
jp
jb
repz
mov
adc
out
add
jmp
rcr
pop
xchg
movsl
and
ljmp
repz
push
lret
ja
in
mov
aaa
push
sbb
mov
jne
pushl
fdivrs
mov
adc
cmp
jns
mov
push
movl
mov
push
adc
dec
mov
out
sbbb
mov
in
incl
inc
push
roll
fnsave
mov
cld
mov
mov
add
aaa
mov
dec
jg
dec
aaa
mov
sbb
mov
inc
es
push
in
cmp
and
push
mov
mov
cmp
and
jno
fildl
pop
ljmp
test
push
stos
inc
jmp
imul
fildl
mov
sub
mov
iret
arpl
jge
sbb
mov
out
jp
jo
repnz
mov
repz
stos
insl
xor
or
pushl
cld
push
adc
sub
jp
sbb
push
add
add
push
stc
jns
adc
jmp
dec
enter
dec
jbe
inc
bound
push
or
add
mov
sbb
cmp
sbb
push
bswap
xchg
sbb
test
mov
incl
jle
mov
jg
pop
pop
push
inc
incl
nop
minps
inc
daa
jno
fwait
jb
fildll
sbb
insb
rorl
dec
ret
lahf
insl
out
xchg
xlat
in
movsb
gs
xor
ljmp
inc
sub
stc
testb
xchg
jmp
or
or
ret
cmp
test
fldlg2
jl
jg
shll
push
sbb
push
dec
out
ljmp
sub
aam
pop
mov
cs
or
inc
popf
sbb
gs
pushl
xchg
shlb
jecxz
xchg
rclb
cltd
imul
incl
je
ljmp
leave
dec
push
rolb
jae
enter
call
idivb
insl
pop
test
adc
stc
add
xor
dec
es
insl
mov
fdivrp
sbb
call
and
sarl
imul
cld
outsb
add
mov
pop
xchg
imul
fwait
inc
sbb
inc
inc
pop
adc
pop
jl
adc
bound
mov
adc
xor
mov
adc
enter
lcall
xchg
jg
in
jp
movsb
mov
pop
fcompl
in
std
or
mov
icebp
jle
pop
push
xchg
decl
lods
pop
aas
mov
dec
test
dec
push
push
orb
lcall
push
cmp
inc
lahf
sahf
push
lds
mov
mov
scas
add
lcall
mov
iret
test
sub
pop
aam
cmp
xchg
call
in
stos
int
sbb
jo
gs
jmp
xor
adc
pop
and
jo
jbe
xor
push
jle
arpl
mov
jmp
incl
mov
ljmp
pop
dec
pop
lock
pushf
and
jo
std
pusha
mov
inc
xchg
jmp
mov
rclb
mov
pop
xchg
adc
dec
cmc
imull
lret
pop
and
in
push
inc
repz
loop
mov
stc
std
xor
jb
shr
out
or
dec
leave
adc
pop
decl
decl
xor
adc
pushf
jo
jns
rcr
in
add
int3
xchg
or
incl
jg
clc
adc
jb
ficomps
push
pop
inc
mov
dec
in
stos
and
in
pop
icebp
fidivrs
add
std
in
and
rolb
cli
dec
lahf
addl
pushl
stos
sub
les
xor
scas
dec
iret
das
pop
and
sbb
jno
data16
lock
cmp
call
jl
dec
nop
fnstsw
cmp
lret
int3
mov
loopne
popf
fs
ds
pushf
lcall
mov
outsl
and
ficoml
adc
mov
sar
ljmp
xor
dec
scas
div
bound
lods
ret
shll
mov
stc
popl
mov
leave
in
and
push
inc
cmp
pop
sub
repz
or
jns
jp
cltd
in
ljmp
pop
dec
jmp
xchg
and
fstl
xchg
ss
ja
xlat
or
ljmp
lock
addr16
out
mov
mov
clc
aam
out
fstl
mov
jmp
cmpsl
divl
call
adc
pop
jbe
fadds
jnp
daa
push
andb
jg
jmp
data16
orb
jp
cmp
nop
pushf
push
inc
clc
sti
xchg
or
pushl
dec
les
mov
jbe
shrl
sbb
or
mov
pop
mov
sar
fcomip
decl
arpl
imul
lea
daa
cmp
inc
xchg
fcos
call
xchg
cmc
cs
lret
inc
addr16
sbb
cmpsl
ret
fs
loope
je
pop
push
js
fwait
jae
or
lahf
lret
int3
fsubrl
jns
scas
sti
mov
cld
jg
loopne
cmp
cmp
cmp
data16
lcall
imul
popf
lahf
inc
int3
mov
mov
das
clc
push
xor
pop
rcr
loope
adc
adc
mov
stos
repz
lods
lock
in
sub
lcall
pop
push
std
lcall
jns
popa
mov
mov
jae
push
imul
pop
jbe
ss
out
jnp
sbb
mov
inc
sub
in
int3
insb
nop
add
fidivrl
mov
inc
fidivs
popf
scas
dec
insb
dec
hlt
xchg
pop
cmpsb
sar
pop
jmp
dec
lret
cld
pushl
iret
test
mov
mov
jbe
jg
lahf
popa
incl
mov
xchg
lahf
xor
push
sti
sti
ss
addr16
insb
rcrl
dec
xor
add
mov
inc
hlt
jle
ret
sti
jns
jnp
xchg
mov
loope
inc
in
sbb
incl
sbb
xchg
and
pop
mov
in
leave
mov
test
or
jnp
das
repz
or
mov
jmp
inc
mov
mov
and
push
mov
pop
jp
call
xlat
iret
jge
add
inc
dec
incl
or
mov
out
push
mov
and
enter
sub
jmp
fadds
inc
loopne
xchg
sti
adcl
jmp
cmpsl
into
jg
pusha
stc
mov
jge
and
jl
addl
loop
mov
lcall
push
pop
into
dec
push
dec
or
mov
xchg
pushf
mov
push
push
stos
test
adc
aas
inc
jg
mov
fldenv
add
iret
ss
cmc
bound
inc
pop
cmpl
imul
jg
push
ror
pop
in
inc
mov
pop
repz
cmp
and
rorl
in
pop
adc
cmp
push
jbe
dec
push
clc
xor
cmp
cmp
cld
inc
aaa
out
rcrl
push
push
fwait
jns
add
inc
out
jmp
pop
jbe
scas
xchg
rorl
jmp
fnstcw
xchg
xchg
xor
or
xchg
insb
sahf
jns
or
fimuls
out
arpl
call
mov
push
jno
fistl
adcl
insl
mov
pop
push
fsubl
adcb
inc
test
and
loop
int3
pop
sbb
push
cmp
push
out
pop
rol
add
fiadds
dec
jne
pop
push
enter
insb
sbb
cmc
push
inc
jnp
cmp
xchg
or
test
cmp
xchg
lret
sbb
call
cltd
adc
cltd
push
fcomip
ja
lret
dec
jns
sub
stc
and
lret
pop
xchg
ja
pushl
mov
inc
popf
inc
mov
subl
ljmp
inc
inc
aam
sub
or
and
aad
jno
das
setbe
fcomip
pushl
arpl
adc
sti
enter
shll
mov
sub
mov
push
cmpsl
add
shll
aaa
jo
push
fs
push
push
test
mov
call
ret
xchg
mov
sub
aas
jmp
nop
das
xchg
call
orl
ds
pop
loop,pn
and
adc
jp
sub
ds
xchg
jle
xchg
in
xor
cli
and
jmp
das
into
and
outsl
jmp
das
push
push
outsl
in
sbb
arpl
adc
in
inc
add
mov
negl
call
loop
add
mov
fistpll
inc
mov
daa
les
dec
pop
ret
jbe
jmp
and
mov
jl
push
int3
and
andb
repnz
sbb
loope
push
mov
fisttpl
add
push
outsb
in
push
adc
lcall
cmp
imul
inc
sub
pop
mov
xchg
mov
call
mov
jmp
movsb
xor
cmp
daa
inc
inc
imulb
iret
mov
lcall
cmpsb
mov
mov
add
in
cs
push
and
rcrb
arpl
jg
push
movsb
nop
bound
icebp
in
or
xchg
enter
mov
decl
mov
rcl
mov
repz
ret
sbb
stos
inc
mov
fiadds
push
lcall
push
in
xor
xchg
jmp
stos
shr
outsl
mov
cmp
push
push
jb
push
add
incl
sbb
orl
pop
mov
enter
stos
jne
loop
lahf
mov
call
and
mov
out
in
shrb
iret
push
add
xchg
das
scas
xchg
push
add
decl
int
or
jg
push
cwtl
sbb
xchg
jbe
clc
pop
pushl
inc
dec
sbb
insl
sub
xorb
ljmp
pop
push
mov
jae
sarb
lret
add
mov
cli
jmp
pop
mov
push
or
cmp
jmp
dec
cltd
adc
cld
mov
cmpsl
cmp
ljmp
loopne
push
sti
lea
es
pextrw
or
in
sahf
sub
jae
mov
nop
dec
pop
cmovns
sbb
pop
jnp
lret
sub
nop
or
inc
add
add
inc
mov
shlb
divb
jg
push
mov
mov
add
addb
sbb
in
gs
mov
mov
push
mov
add
cmp
mov
adc
decl
sbb
std
stos
inc
bound
xchg
and
loope
jno
cmp
dec
sub
adc
jno
int3
loopne
jp
test
and
pop
addr16
adc
incl
cli
outsb
mov
pusha
push
inc
mov
cld
xchg
push
sub
pop
into
sar
jmp
iret
add
adc
incb
dec
stos
jp
mov
jg
xor
faddp
fdiv
pop
fs
in
lods
mov
cwtl
lds
mov
and
jmp
jmp
or
jge
or
xchg
jmp
cmp
shll
call
call
sbb
stos
push
ret
and
in
sahf
xor
adc
mov
pushl
je
dec
xor
adc
dec
rorb
shlb
pop
push
push
adc
cmp
jmp
jb
jl
adc
pop
mov
inc
xchg
cmp
adc
mov
fdivrs
pushl
out
mov
sub
ja
out
inc
ja
or
test
insb
loope
leave
or
cmp
sbb
and
sbb
das
cmp
daa
mov
mov
mov
jl
rolb
cmpsl
jg
pushl
in
pop
xor
je
mov
lea
incl
inc
pop
sti
lds
push
and
cmp
lods
push
mov
lcall
cmpsb
jmp
or
mov
fdivr
and
mov
cmc
cmp
call
mov
dec
dec
or
fiadds
push
jl
or
enter
mov
dec
ja
cmp
xchg
and
pop
dec
popa
add
rcrb
or
jg
lea
decl
fs
and
int3
scas
sahf
pop
pop
lock
in
sub
lret
jmp
or
inc
shlb
decl
lret
xor
faddl
jmp
shr
and
popa
int
imul
mov
mov
call
jbe
add
lret
pop
mov
mov
jmp
cmp
xchg
mov
in
push
cld
mov
std
int
int
and
add
ud0
sti
mov
rclb
or
outsb
mov
call
mov
je
or
in
jne
xchg
sub
lcall
xor
mov
pushl
pop
rcrb
and
aad
test
push
aaa
cmpsl
mov
imul
mov
call
and
pushf
inc
hlt
data16
aad
mov
stos
out
adc
dec
data16
push
mov
ljmp
pop
cmpsl
int3
sahf
dec
rcrb
test
xchg
loop
push
push
mov
and
pop
lock
mov
lret
bnd
mov
cmp
mov
mov
fcomi
sbb
jmp
dec
into
sub
cmp
shrl
xchg
mov
jae
scas
les
stc
adc
incl
and
fwait
or
push
pop
das
mov
xorl
test
push
mov
inc
cld
xor
iret
push
or
aas
inc
sbb
pop
std
loopne
enter
dec
stc
jne
lock
incl
aad
cmp
stos
idivl
xlat
mov
pop
lret
bound
clc
movsb
fisttpll
mov
ljmp
jno
ret
test
in
popf
sbb
sahf
je
mov
icebp
shll
sub
ret
clc
call
and
mov
cmp
je
addl
scas
push
jg
scas
es
sub
sub
les
lcall
push
data16
ljmp
shr
push
test
mov
pop
push
pop
cmp
nop
pop
mov
inc
dec
mov
cmc
cld
jnp
sbb
into
pushl
pop
xchg
xor
daa
inc
or
dec
or
stos
es
dec
std
jmp
mov
sub
mov
bound
leave
sbbl
sbb
in
jnp
ljmp
xor
cmp
cmp
call
pop
shll
adc
ds
insb
xor
fs
mov
and
xchg
lahf
decl
cmp
xchg
icebp
popa
test
inc
dec
mov
fcomps
incl
jno
mov
cmp
jmp
les
add
scas
xor
mov
setbe
daa
jne
dec
sbb
loopne
pop
clc
icebp
lcall
outsl
cmpsb
out
inc
jb
aam
mov
pop
jecxz
and
pop
add
pushf
call
add
lods
or
rcrl
mov
adc
fnsave
icebp
push
or
mov
cmp
push
jmp
adc
lods
sbb
or
outsl
lcall
gs
xor
ret
jle
ljmp
push
jns
push
jg
insl
gs
xchg
mov
das
xchg
lds
add
add
aas
pop
push
aam
stos
mov
cwtl
shlb
mov
dec
xchg
aam
cmpsl
jne
gs
cmc
xchg
scas
xor
cmp
add
shlb
roll
cs
repz
stc
clc
inc
dec
in
scas
clc
sti
stc
lds
xchg
push
loop
ds
add
adc
inc
sbb
pushl
or
out
push
dec
mov
fidivl
hlt
stos
std
or
test
mov
jmp
lahf
jp
popf
or
data16
sub
inc
jge
dec
lods
int3
inc
inc
push
data16
dec
inc
or
stos
push
cmp
mov
in
dec
out
fbld
in
cmc
pushl
das
enter
jae
or
inc
loope
xor
int3
das
shll
aaa
std
popa
jp
mov
mov
inc
pop
movb
lcall
and
clc
hlt
sbb
inc
lahf
jae
mov
outsb
adc
mov
and
sub
mov
jo
mov
sub
das
iret
dec
push
push
cmp
decl
dec
mov
lret
adc
imul
pop
mov
in
sub
js
ljmp
and
test
cmpb
orl
or
shr
sub
dec
add
jp
mov
push
mov
iret
dec
dec
add
cmp
lcall
int
jecxz
int3
mov
cld
push
shll
cmp
popa
insl
popa
mov
fnstsw
add
push
cmpsl
idivb
aaa
ljmp
popf
es
leave
cmp
xor
rcll
negb
xchg
sbb
push
jecxz
jg
mov
inc
std
test
dec
jns
pop
test
faddl
fsubs
adc
jmp
jp
pop
movb
insb
or
jns
adc
or
bound
sbb
dec
test
and
sub
add
call
or
mov
and
das
sub
pop
add
push
ljmp
jg
pop
xlat
sbb
lcall
gs
or
mov
inc
xor
ja
incl
lahf
mov
ret
popl
cs
rcrl
adcl
lahf
add
scas
in
test
dec
mov
jmp
push
addl
aad
push
ret
jp
dec
sub
cwtl
mov
ffreep
lcall
pop
dec
outsb
int3
mov
mov
xlat
sub
dec
movsl
pusha
push
xchg
stos
adc
pushl
xchg
out
bound
aad
je
and
xor
fisttpll
xchg
popa
mov
add
jge
shrl
jmp
cmp
pusha
dec
cmp
cmpsb
pop
xor
nop
test
outsl
cli
jmp
call
jmp
jnp
xor
sti
std
arpl
lret
loope
dec
outsl
test
ss
sub
jo
adc
divl
pop
xchg
imul
shlb
mov
jl
mov
jb
mov
sti
sahf
fdivr
decl
scas
xor
dec
loopne
xlat
jno
movsl
xor
cmp
adc
xor
mov
adc
jmp
jg
push
popf
andnps
cs
sub
cmp
sub
data16
push
dec
dec
lods
pusha
gs
fisttpl
nop
sbb
jo
rcl
mov
in
jp
scas
ret
aad
pop
icebp
in
ficoms
pusha
int3
loopne
js
cmpl
jg
sar
loop
cmp
in
sub
sub
push
pop
mov
pop
les
call
sub
adc
fwait
inc
xor
push
aaa
loopew
push
psubq
ficoms
push
push
push
mov
sub
es
pop
subl
mov
jmp
mov
sbb
fdivrp
rclb
mov
mov
cwtl
mov
mov
gs
call
xor
inc
pop
push
gs
and
cmp
push
and
adc
sbb
adc
in
jo
data16
ljmp
das
push
out
dec
stos
ds
push
ret
cmp
fisubrs
inc
mov
mov
test
mov
fwait
jl
inc
xchg
push
lahf
mull
nop
fidivs
push
cmp
lds
icebp
js
add
stos
add
testl
incl
call
dec
lea
xor
xchg
or
jmp
push
das
push
xchg
jnp
ljmp
sub
push
mov
loope
in
mov
aas
sub
jne
jne
mov
jmp
test
mov
icebp
dec
enter
cmp
lahf
lret
sub
mov
inc
add
cwtl
push
cli
incl
dec
cwtl
cld
jle
icebp
cmp
outsb
ljmp
or
or
pop
and
push
cld
lret
jns
inc
cs
push
cli
testl
jmp
mov
xchg
xchg
daa
mov
fdivl
mov
sbb
decl
sbb
clc
mov
sbb
xor
push
scas
cltd
out
jno
fidivrl
push
in
inc
sbb
mov
in
in
test
stos
xchg
xchg
cmp
adc
jae
pop
clc
scas
call
sbb
jne
jo
fisttps
sub
or
inc
jl
adc
mov
cli
jnp
or
mov
mov
fisubrl
jmp
mov
cmpsl
sarb
std
ljmp
add
inc
adc
dec
lds
xchg
sub
cwtl
call
pop
cmc
xchg
mov
jp
int
push
xchg
pusha
adc
add
ret
out
pushl
pusha
mov
xchg
sub
jecxz
das
mov
push
xchg
pop
mov
mov
push
push
pop
stos
push
and
push
sbbb
mov
sarb
in
push
add
clc
incl
jl
push
rcll
pop
popf
add
xchg
sub
std
and
sub
in
cmp
aam
adc
sar
jb
and
repnz
jmp
push
jle
dec
xchg
inc
or
in
clc
movsl
jg
shl
add
outsb
ss
mov
ficompl
jbe
push
lods
test
lcall
testb
mov
hlt
es
adc
stos
lret
fcmovnu
pushf
cmc
jge
lock
call
mov
dec
or
mov
cmp
dec
or
jae
daa
pop
cmc
test
decl
rclb
loope
sub
inc
mov
aaa
dec
push
push
imul
xchg
mov
test
jg
and
xchg
ja
fucomip
mov
or
push
cld
push
mov
fdivrs
cmpsb
add
jl
and
sbb
ss
lcall
imull
mov
out
imul
out
daa
inc
or
push
fwait
xor
mov
insl
mov
pop
adc
jno
stos
gs
sub
jno
xchg
xor
call
std
shlb
mov
pushf
fdivs
and
ja
sub
mov
aam
rcrl
push
xor
mov
test
pcmpgtb
aad
insl
leave
into
push
cmpsl
out
rcrb
pop
add
out
stos
inc
into
cltd
mov
call
add
lods
dec
popa
cmp
sub
aas
sub
js
pop
iret
or
add
and
xchg
jbe
int3
push
mov
repz
or
xchg
fsubrl
into
in
cmp
idiv
insb
psrld
in
and
decl
lret
push
daa
cmp
fcomps
push
cmc
xor
mov
pop
dec
insb
lfs
aad
pushl
ss
and
adc
out
movsl
mov
shll
fldt
lods
xor
aaa
std
pushl
dec
pop
aaa
jmp
loop
movsl
data16
pop
call
sbb
neg
inc
inc
pushl
xor
push
add
jae
dec
dec
mov
jmp
fs
xlat
inc
sub
jmp
in
stos
std
pop
add
inc
jmp
iret
movsb
jbe
lods
test
push
jae
mov
add
jmp
js
pop
bound
mov
je
xor
jns
shlb
mov
sbb
imul
dec
or
mov
cmp
sbb
mov
out
xlat
dec
out
cli
cld
std
or
sbb
xchg
xor
imul
sbb
dec
sbb
pop
pop
cmp
mov
push
pmuludq
lock
mov
gs
dec
pop
dec
xlat
lret
fmul
sub
and
xor
mov
outsb
jp
negl
add
testb
jp
lret
test
sbb
loopne
dec
jns
xchg
pushf
lea
or
out
mov
cvtpi2ps
push
call
daa
jbe
out
iret
fdivs
movsl
call
cmp
cmpsb
pop
imul
dec
lock
incl
int
sbbb
dec
dec
xor
lcall
dec
mov
in
les
sti
repnz
decl
aam
cli
fisttpl
nop
lahf
add
add
outsb
cmp
es
scas
cmp
ljmp
das
and
inc
xchg
out
mov
add
push
pop
loope
sub
jecxz
and
adc
inc
jg
call
jle
lret
inc
lds
xor
sbb
or
test
leave
push
dec
es
call
add
and
sub
sub
push
sti
aaa
cmpsb
mov
or
push
jne
std
incl
add
mov
mov
in
je
cwtl
xchg
add
ret
pop
push
mov
call
mov
add
subb
addr16
pop
jnp
lock
xor
add
ljmp
mov
mov
inc
and
mov
iret
cmp
cwtl
push
sub
stc
imul
or
ds
push
nop
popf
test
out
jbe
iret
sub
mov
fmul
add
mov
popa
adc
xor
or
cli
decl
aam
pop
sub
hlt
xor
pop
movsb
ret
mov
call
ret
or
push
pop
mov
xor
lods
imul
aad
dec
jns
mov
incl
ja
push
xchg
pop
push
dec
clc
lret
jle
hlt
shll
add
mov
fiadds
lods
pop
insb
popf
jno
or
lock
mov
loope,pt
dec
push
inc
rcrb
mov
scas
add
repz
cld
dec
arpl
imul
or
dec
out
in
arpl
lods
clc
test
jb
fstps
imul
ficomps
sbb
scas
lds
outsb
andl
pop
fs
shll
std
mov
lret
cmp
or
sbb
xor
or
int
cmp
lods
test
mov
ljmp
push
scas
sbb
adc
shrl
in
jae
cwtl
lock
cmpsl
and
decl
or
add
insl
jne
xchg
lahf
clc
lock
mov
fsubs
push
jns
icebp
cmpsl
lock
or
xor
xchg
popa
mov
ret
push
roll
push
sbb
cmpsl
fistpll
out
ljmp
dec
scas
xor
daa
lret
push
pop
comiss
sub
loope
dec
jp
mov
xchg
orl
sub
sbb
aad
jl
and
in
loopne
lods
es
call
and
xor
mov
lcall
inc
addr16
push
rcll
xor
sub
aad
sub
push
loopne
repz
ljmp
repz
sub
xchg
mov
mov
test
cmp
pushf
xlat
movsl
and
lods
cmp
mov
xchg
js
add
inc
jg
popl
std
and
in
lret
das
fiadds
pop
loop
mov
pushl
or
push
rolb
cld
rcll
in
mov
push
sbb
popl
aam
mov
pushl
nop
jo
mov
pop
es
loope
mov
rclb
dec
sbb
mov
bound
dec
jp
in
pop
pop
and
out
fisubs
fwait
aaa
and
leave
inc
xlat
ljmp
gs
clc
ljmp
mov
adc
stos
movsb
cmp
je
push
enter
fwait
mov
out
shlb
jge
das
push
orl
insl
add
mov
push
pop
leave
rol
inc
dec
xor
cmpsb
loop
cld
aam
add
lock
std
mov
out
pushl
jne
xlat
mov
aad
insl
inc
cld
mov
jne
sub
decl
push
insl
xor
xchg
dec
mov
push
add
lock
pop
test
or
pushl
repz
sti
and
outsl
push
sbb
ja
pop
cmp
adc
dec
ja
pop
push
mov
aaa
lret
loop
loope
or
mov
dec
mov
stc
popf
lea
pusha
sub
adc
mov
fwait
jnp
adc
sbb
pop
push
sti
loopne
add
and
js
pushl
cld
ja
cld
je
cwtl
movsb
push
jno
pop
rorl
pop
xor
cltd
in
fwait
lock
inc
pop
les
xlat
inc
ds
lcall
and
aaa
test
addr16
sti
jne
jns
lods
sbb
lock
jmp
jle
and
outsb
cmp
clc
mov
jo
ds
pop
pop
sub
pop
sbb
clc
jp
jmp
icebp
sub
mov
loope
or
push
pop
sbb
ss
int
pop
lds
add
incl
adc
ljmp
and
aad
shlb
inc
dec
add
sub
incl
adc
xchg
dec
push
fwait
jns
lret
ja
out
cli
cwtl
jp
incl
cmp
ret
notl
out
ret
inc
jp
jl
xor
jmp
out
add
sbb
push
imul
lahf
inc
or
ja
jg
push
mov
jno
ret
mov
call
addb
jo
sbb
pop
adc
stos
dec
pop
mov
outsl
and
icebp
jb
mov
xchg
adc
jbe
fcos
jmp
cmp
bound
rcrb
xor
cli
out
adc
push
push
sbb
fdiv
jmp
inc
push
mov
inc
push
fists
inc
cmpsl
push
pop
ja
inc
arpl
or
stos
in
pop
sub
xchg
push
inc
fstpl
scas
push
mov
cmc
lods
cmp
cmpsb
out
xor
inc
pop
aas
loope
mov
cmp
cmp
ljmp
shl
jbe
xacquire
xchg
daa
out
in
mov
out
clc
mov
sti
sbb
fnstenv
imul
sbb
mov
icebp
pushl
pusha
addb
andl
dec
in
hlt
clc
adc
fisttpll
mov
into
aam
pop
fsts
call
int
xor
lret
push
mov
cli
call
cli
shll
inc
ret
and
pop
mov
sbb
add
and
hlt
incl
daa
pop
xchg
sbb
ret
dec
test
and
hlt
loopne
filds
icebp
mov
js
sbb
jg
adc
inc
in
fstpl
movsl
jae
dec
push
popf
out
adc
loope
xor
jl
mov
xor
iret
dec
push
pop
fdivrl
hlt
icebp
pop
pushl
cld
dec
popa
cs
mov
jge
sbb
ret
cwtl
test
clc
xchg
xorl
aam
into
dec
or
cmp
insb
mov
jp
fwait
cmpsw
cli
inc
inc
sbb
mov
leave
mov
imul
lcall
mov
sub
push
scas
push
out
out
aas
int
aas
fs
xchg
sub
in
mov
ss
mov
cmp
mov
jmp
adc
adc
xor
mov
sbb
jmp
mov
inc
mov
movb
in
push
dec
std
jge
jmp
leave
mov
fwait
cmpl
sbb
push
pop
inc
cmp
loop
mov
in
sub
sbb
cld
and
add
dec
adc
mov
call
jae
cs
cmp
xlat
mov
inc
adc
cmpsb
and
arpl
jg
pushl
cli
sub
xchg
cs
in
lds
gs
dec
int
pop
jb
mov
mov
popf
mov
xlat
iret
mov
push
std
lcall
lods
clc
xlat
rcrb
vminss
xlat
sbb
pop
xor
aas
insl
jb
jmp
mov
test
loopne
add
dec
rclb
pop
test
subl
push
fwait
jne
mov
mov
jge
rcr
pop
out
xor
mov
lea
insl
ja
xchg
ljmp
pop
inc
push
or
aas
jmp
ljmp
repz
jb
incl
lret
sub
dec
mov
loope
and
ljmp
jp
pop
sub
imul
push
push
fs
jle
outsb
ret
xlat
dec
sub
je
cmp
sarb
or
and
and
pop
nop
jo
fdivrl
jne
sahf
or
mov
mov
mov
loope
popa
sub
out
les
gs
jg
fdivrs
and
inc
lret
or
int
jns
dec
test
inc
adc
pop
mov
mov
add
adcl
add
jg
data16
cmp
pushf
or
adc
sti
xchg
mov
loopne
in
push
imul
popa
adc
lcall
std
arpl
js
jne
jno
inc
mov
jbe
pop
mov
xchg
loope
add
int
lret
call
mov
add
xor
sbb
cld
push
ret
mov
mov
imul
in
pusha
mov
lcall
ret
push
popf
sti
out
mov
int3
sbb
mov
mov
mov
ljmp
outsb
jbe
pop
or
jg
mov
ljmp
jg
pop
clc
mov
mov
icebp
add
or
jns
pop
xchg
push
mov
jnp
ljmp
ss
push
movsb
dec
mov
pop
and
push
wrmsr
dec
mov
xor
pop
lock
mov
xorb
adc
insb
push
shrb
aam
dec
xchg
dec
xor
sti
or
clc
mov
cld
js
sahf
or
push
xchg
push
jg
ljmp
fdiv
fsts
push
stos
sarb
lcall
lock
cmp
push
xchg
in
add
xlat
cmpl
lods
out
cmpsl
fcomip
incl
add
xchg
into
call
sub
xor
inc
xchg
pop
jmp
fstps
nop
lahf
inc
or
jmp
pop
adc
pop
xchg
inc
jp
push
jno
call
cmpsl
insb
and
mov
adc
pop
jnp
addr16
imul
ljmp
cld
lcall
aas
jle
add
fisttpl
sub
dec
adc
push
inc
outsb
rorb
xor
aaa
std
cmp
pop
adc
stos
sti
dec
pop
mov
jne
xchg
dec
jg
decl
sarb
or
aas
add
sub
jg
xor
mov
mov
outsl
or
inc
and
repnz
mov
idiv
mov
dec
ss
jge
mov
cld
mov
push
add
sbb
aaa
sub
add
int3
adc
xlat
fldt
mov
inc
les
or
inc
lcall
mov
out
sub
pop
sub
sub
cmp
shl
jbe
cmp
push
iret
enter
mov
push
fnstenv
test
pop
sub
stos
mov
fldenv
gs
in
scas
data16
jl
in
lock
cmp
cs
jbe
fcomip
adcl
inc
pop
lret
jmp
or
pop
mov
and
xor
incl
lahf
xchg
pop
lods
push
divb
jge
cmpsb
jle
adc
adc
daa
inc
les
loop
out
call
popf
mov
test
and
fcomps
xlat
add
inc
jbe
push
addl
incl
xchg
imul
out
mov
aam
inc
bound
inc
jne
fimull
fsubl
subl
mov
test
mov
sub
sub
push
mov
test
fdivrl
fcomps
jne
jo
fisubl
test
jmp
movsb
sub
mov
dec
sub
dec
xchg
push
cmp
cmp
push
arpl
mov
mov
mov
cmp
xchg
add
outsl
push
jg
pop
mov
jl
dec
and
or
ja
filds
call
imul
fs
dec
xchg
pop
stos
add
test
jg
add
and
or
jl
jg
jmp
imul
pop
movsl
fbld
ret
pop
mov
jns
nop
mov
or
subl
jecxz
lock
dec
shlb
les
sbb
push
jg
jmp
adc
fs
and
mov
lea
imul
cmp
push
aam
les
or
scas
in
push
clc
push
ds
ljmp
fwait
out
fisubl
and
xorl
add
fsubrl
iret
mov
mov
cld
decl
add
imul
clc
jns
push
xchg
add
ja
lods
in
in
loope
jg
jmp
or
lcall
cmp
roll
and
incl
dec
scas
push
dec
leave
outsb
in
das
leave
pop
and
mov
cmp
jbe
jle
sbb
cli
movsl
lcall
call
jnp
fs
mov
mov
decl
or
pop
lods
movl
mov
xor
xlat
dec
xchg
mov
pushl
xlat
int3
adcb
lods
xchg
mov
subb
int
lea
decl
daa
mov
pop
sahf
stc
lds
pusha
mov
fidivrs
mov
xlat
cmc
lock
pcmpeqw
out
gs
fs
cld
ret
addr16
or
pushl
sub
lcall
dec
outsl
popa
clc
and
es
decl
and
jg
mov
stos
iret
sti
xchg
jge
dec
mov
cltd
mov
xchg
and
jl
les
sub
shr
cld
jb
popf
fcmovnbe
xor
mov
decl
mov
cmc
adc
pop
icebp
xchg
xor
adc
sbb
and
xor
jne
jne
popl
push
mov
pminsw
inc
insb
incb
addr16
test
sbb
popa
add
rcrb
enter
add
push
ljmp
push
cwtl
adc
sub
es
jle
into
and
push
mov
mov
daa
dec
imul
fcomip
jge
xor
inc
xchg
sti
dec
shll
inc
fnstenv
sahf
lods
or
push
call
cmc
dec
sahf
ss
loopne
std
rcr
inc
lods
fistps
mov
fstpl
out
or
pushl
adc
out
andl
fnsave
out
jbe
pusha
push
bound
dec
pop
std
incb
jbe
xor
ret
pop
mov
out
leave
inc
xlat
out
out
hlt
xor
fmull
mov
aam
mov
addr16
imul
xchg
and
notb
sub
mov
jmp
sbb
fisttpll
notb
jmp
dec
push
and
ljmp
sbbl
push
jns
mov
and
jmp
push
mov
nop
jg
xlat
xchg
rcrb
push
pusha
push
icebp
sbb
mov
es
add
xor
je
repz
jno
scas
lcall
je
incl
push
rcll
push
clc
sub
jb
and
sbb
test
ret
idiv
call
arpl
sbb
into
push
mov
imul
andl
push
push
cmp
xchg
xchg
add
loop
ljmp
mov
and
inc
xor
sarl
clc
dec
arpl
mov
fwait
push
ret
sahf
dec
push
ds
push
cwtl
mov
mov
xlat
dec
out
mov
cs
ljmp
mov
sbb
xor
fs
mov
jmp
xor
push
std
test
hlt
jp
dec
mov
pop
and
stc
xchg
push
push
cli
pop
enter
mov
sub
fists
sub
inc
jbe
adc
xlat
addr16
pop
dec
push
or
sahf
jecxz
sar
ljmp
adc
mov
mov
cmc
insb
cli
xor
fwait
mov
push
mov
loope
decl
into
push
repz
adcl
or
mov
jnp
pushl
int3
je
test
xchg
movsb
or
fwait
cmp
lock
aas
add
std
repz
call
mov
mov
push
iret
and
aad
aas
imul
clc
push
std
mov
push
mov
adc
repz
fdivl
mov
decl
es
pop
call
or
jne
pop
cmp
xor
imul
js
pop
sqrtps
pushl
cld
fs
jle
mov
xorl
inc
or
push
lock
ljmp
push
fbld
in
loope
cmp
xchg
cmpsl
xlat
cmp
insb
js
jne
imul
cli
lret
fidivrs
fsub
int
add
and
jb
jnp
adc
data16
lods
mov
decl
dec
jbe
int3
mov
cld
mov
adc
sti
mov
push
int3
ficompl
mov
fcoml
lea
fcom
sarl
movsb
xor
push
ljmp
push
push
and
inc
add
arpl
add
sahf
outsb
insb
push
sbb
lcall
bound
data16
cmp
sahf
sbb
out
orl
pop
incl
rorb
adc
xchg
fcomp
mov
sbbl
cmpsl
call
xlat
pop
aas
push
push
or
inc
mov
dec
movsl
aas
test
fdivl
ljmp
add
daa
xchg
inc
mov
stos
jmp
decl
sar
push
int
cmp
mov
add
inc
adc
int3
inc
mov
xor
lock
std
incl
inc
je
roll
dec
sbb
mov
pop
daa
xchg
sbb
insb
or
adc
fdivr
incl
mov
outsl
mov
xchg
lahf
fnstcw
pop
hlt
stc
sbb
arpl
cmp
jns
imul
repz
inc
mov
and
mov
movsl
stos
push
sti
adc
sarl
sub
outsl
jle
pop
aad
in
mov
push
aad
xchg
push
pop
insl
aam
clc
lods
sub
jno
decl
xor
out
pop
xor
pop
sbb
or
out
jno
data16
ljmp
xor
in
aad
mov
int3
outsb
jb
xor
mov
jl
xchg
iret
sti
mov
pop
mov
inc
pop
push
rcrl
mov
adc
decl
not
leave
pop
cmpb
lea
mov
jecxz
and
js
jg
add
fistpl
lock
dec
xor
divl
cld
call
sub
add
cmp
loop
jmp
imul
sub
xchg
js
mov
jmp
push
aad
popa
push
out
mov
xlat
mov
decw
jmp
cs
out
mov
push
cmpl
sbb
push
sbb
call
mov
cmp
jnp
cmpsb
sbb
pop
pop
push
lcall
xor
call
adc
pop
sub
movsl
push
adc
popa
out
test
jg
clc
sbbl
mov
jo
adc
inc
push
mov
pop
fists
lcall
jmp
into
jbe
inc
call
lea
decb
or
jle
decl
jb
jp
ds
jg
in
sub
in
jne
push
jmp
ds
fildl
sbb
xchg
lds
stos
aaa
cmp
and
jl
mov
lcall
and
push
sbb
sub
adc
je
push
push
repz
lcall
xchg
jl
pusha
push
xor
dec
mov
clc
lret
cmp
jecxz
lcall
mov
jp
ret
imul
cs
jae
out
cmpsl
or
mov
inc
mov
movsl
cltd
pushl
std
adc
cmp
dec
nop
sub
das
andnps
xchg
pushl
call
pushf
test
rcrl
jle
cli
fistps
call
inc
dec
sub
mov
aad
cmp
and
push
rcr
push
pushf
xchg
idiv
push
lock
sub
ljmp
pushf
mov
cld
lret
rolb
sbb
or
std
mov
test
mov
or
stos
ljmp
dec
fisttps
adc
xlat
xchg
push
xchg
pop
aas
insb
mov
dec
inc
cs
mov
insb
das
in
shl
fcomip
mov
pop
add
adc
stos
lret
inc
push
in
stos
dec
sti
arpl
enter
pushl
fwait
mov
dec
push
fiaddl
pop
test
adc
les
pop
cmc
ljmp
xchg
and
mov
in
dec
ret
sahf
mov
mov
or
push
inc
movsl
insl
pop
hlt
mov
mov
xchg
mov
pushl
mov
scas
mov
and
test
cltd
mov
insl
adc
add
cmpsw
into
jmp
xchg
xchg
mov
push
cli
outsl
negb
fsubr
pop
aam
sbb
insl
lods
ljmp
cs
fwait
fwait
and
adc
mov
jb
add
pop
xchg
push
gs
cmp
xchg
cltd
js
icebp
mov
xchg
push
pop
repnz
out
push
jne
lahf
ret
push
std
mov
add
jmp
test
xor
in
cs
pop
and
les
mov
pop
ljmp
mov
icebp
fsubrp
cld
dec
adcb
mov
cltd
out
cmp
outsl
clc
lcall
xor
pop
xor
fcomp
fildl
cmp
pop
or
jl
ljmp
xchg
call
lcall
imul
rcr
xchg
and
call
jo
add
gs
add
stos
cmp
mov
push
xorb
jo
incl
js
in
or
push
mov
je
insb
sub
sti
int3
pop
bound
push
lods
mov
inc
adc
mov
cli
ljmp
mov
cld
loope
sub
pop
fsin
mov
decl
or
and
pop
pop
push
sbb
adc
pusha
jae
push
ret
sbb
scas
mul
mov
dec
in
fucomip
ljmp
mov
mov
inc
adcb
cmp
pop
and
faddp
pushf
jecxz
add
xchg
jge
or
andl
lcall
add
pushf
dec
push
add
sti
pop
mov
pop
add
decl
pop
cmp
daa
test
mov
mov
mov
or
sub
ljmp
sti
mov
lcall
fcmovnbe
pop
adc
jae
leave
sahf
xor
inc
lcall
lcall
or
mov
ret
jno
and
and
out
push
aaa
movq
jbe
clc
scas
add
push
push
mov
xor
fsubl
enter
dec
cmp
add
xor
xchg
xor
loop
mov
jae
mov
mov
clc
add
xchg
sub
push
mov
cmp
jge
mov
cmp
mov
jo
in
ljmp
inc
pop
es
outsl
nop
imul
push
dec
push
movsl
test
mov
mov
dec
cmpb
cmp
jge
mov
jle
and
mov
aad
mov
call
mov
and
jge
or
cld
test
dec
sbb
fcmovnu
aad
inc
xlat
cmpsb
call
sahf
aad
or
je
ja
push
pusha
xchg
aam
ret
xor
ljmp
call
fsubr
xchg
ss
mov
mov
lods
xor
or
lcall
xor
pushf
sbb
es
adc
mov
xchg
mov
xchg
fnstcw
and
jg
addb
lahf
mov
lds
cmp
cltd
insb
xchg
xor
ljmp
dec
mov
xlat
rcl
fcmovnu
sbb
in
sbb
shr
ret
loope
push
mov
mov
call
das
add
loop
jae
add
sahf
out
sbb
ljmp
pop
cmp
daa
gs
mov
sub
sub
outsl
mov
std
scas
cltd
xchg
sahf
sar
shl
add
push
push
idivl
xor
dec
dec
or
pushl
jp
xchg
mov
movsl
mov
xchg
xor
pushf
and
xchg
or
incl
dec
pop
xchg
mov
mov
jle
cmp
or
push
lcall
aas
sub
testl
inc
rcrb
or
imul
scas
clc
call
scas
xchg
xchg
pop
push
sub
pop
push
sbb
es
add
cmpsl
xchg
jl
or
lcall
jns
cld
cmp
repz
sbb
enter
lret
push
push
divl
pop
push
push
lret
sub
iret
inc
dec
pop
pop
mov
inc
sub
in
jg
lret
xchg
fbstp
or
test
xlat
pop
mov
mov
loopne
add
or
mov
cmp
pushl
dec
sbb
lret
lods
sub
cmpsl
repnz
test
imul
cs
ljmp
xchg
push
ja
aam
adc
mov
pop
mov
shrb
mov
outsb
jns
decl
xchg
pop
out
jecxz
push
jb
mov
insb
push
mov
rcll
dec
xorb
in
lea
ljmp
adc
mov
movsl
fisubrs
jle
dec
mov
into
aas
jmp
push
push
sar
pushl
jecxz
in
dec
jo
outsb
and
cmc
mov
test
aas
gs
cmp
shrl
jmp
inc
js
test
add
fstp
or
xchg
mov
or
ljmp
ret
and
mov
mov
sarl
es
jnp
pushl
out
aad
data16
lret
dec
fwait
jno
cmpsb
dec
shr
dec
out
sbb
add
incl
adc
notb
xchg
jmp
dec
mov
test
jne
mov
mov
jg
mov
mov
or
sub
pushf
sub
sahf
adc
jns
popa
sub
scas
aad
addl
jle
mov
sahf
aaa
add
xchg
jge
jl
repz
popa
clc
inc
cltd
inc
xlat
in
xor
ljmp
ss
and
pop
mov
aaa
mov
or
jl
and
fs
pop
push
xor
lcall
mull
movsl
negl
mov
sub
lods
pop
lods
cmp
or
lcall
sbb
cltd
jno
test
hlt
pusha
dec
lods
ret
or
scas
jns
sbb
xchg
arpl
fwait
incl
mov
xor
dec
inc
imul
jle
lret
les
outsb
jo
pop
or
decl
jae
enter
pop
push
shrl
dec
xchg
dec
push
mov
mov
das
cli
lcall
hlt
and
fwait
stos
sbb
frstor
hlt
test
or
insb
adc
inc
pop
mov
rol
mov
enter
xchg
lcall
pop
sti
loopne
or
push
ds
add
pop
test
or
jg
fsubs
scas
iret
pop
mov
xor
dec
dec
push
xor
mov
push
mov
aas
or
movl
hlt
mov
leave
adc
mov
xor
das
test
jno
adc
fyl2x
incl
stc
cmp
fimuls
or
arpl
cld
pusha
std
mov
dec
mov
daa
daa
and
scas
and
mov
lcall
pop
xor
sub
je
hlt
pop
inc
je
pop
mov
repnz
clc
aas
out
add
sub
mov
dec
hlt
loop
test
xor
jmp
fistps
add
ljmp
jecxz
cmpsb
cmpsl
call
ss
sbb
pop
adc
ja
jmp
lock
shrb
mul
inc
pop
sbb
decl
fcmovnb
mov
inc
push
add
push
push
push
pop
in
cld
insl
jo
jo
roll
out
sub
fnstcw
decl
inc
sbb
in
adc
adc
repnz
es
std
fucomi
cltd
xor
jl
cwtl
pop
sub
jmp
push
icebp
jns
rcrb
jnp
fimuls
pushl
push
adcb
push
je
out
push
mov
icebp
push
sub
scas
push
adc
mov
lcall
cli
je
push
out
xchg
jno
or
push
clc
es
jns
bound
clc
adc
mov
in
icebp
sub
data16
pop
incb
push
aam
sbb
and
decl
loope
mov
js
mov
pop
lcall
mov
xor
cwtl
pushl
std
pushl
popf
xchg
fdivr
sbb
and
xchg
dec
xor
sub
cmp
flds
incl
fbld
mul
lods
inc
addb
xchg
nop
mov
dec
je
xlat
lock
out
lods
pop
pop
hlt
add
push
test
jae
sbb
sbb
xor
mov
jne
push
fwait
push
ja
cwtl
lahf
jno
mov
cmp
imul
in
aad
sub
mov
sti
cltd
fsub
inc
xor
cli
int
mov
sub
jmp
stos
decl
stos
jno
stos
dec
dec
and
sti
xchg
jo
ja
adc
es
pushl
dec
mov
cmpsb
push
es
pushf
xchg
and
inc
fdivs
pop
sbb
lcall
pushl
sub
pusha
mov
lods
push
mov
jle
test
mov
incl
pop
ljmp
js
push
ljmp
data16
in
and
in
out
call
cld
push
ffree
inc
int
pop
pusha
xchg
sbbb
pop
scas
aas
fldenv
lcall
cli
and
push
jo
xchg
xchg
jmp
ret
and
add
cli
filds
movsb
and
inc
incl
cmpsl
loope
enter
or
test
loope
or
ud1
sub
decl
mov
andl
inc
mov
jle
fsubrs
sarb
xlat
call
sub
ljmp
out
test
or
pushf
cmp
mov
dec
fcos
ljmp
movsb
ja
out
cmp
dec
notb
je
jg
repnz
mov
call
fistpll
xchg
push
jne
in
add
insl
les
push
mov
lods
cmp
incl
add
cmp
mov
xchg
fucomi
xor
xchg
push
aas
fwait
add
adc
call
cmp
pop
and
dec
mov
mov
dec
sbbl
cmpsl
jb
decl
shlb
int
push
dec
add
xor
dec
stos
inc
outsb
in
mov
ret
add
jmp
add
stos
push
mov
pop
xor
stc
xchg
xchg
pop
movsl
lds
js
push
or
addl
pop
sti
je
inc
test
add
mov
mov
fstl
in
in
mov
ret
pop
loopne
ja
cld
mov
in
and
outsl
xor
into
cld
mov
test
push
cli
jl
into
fcmovnbe
test
mov
xchg
insl
and
add
scas
xor
ret
mov
adc
rcrb
lahf
mov
mov
in
push
jle
mov
xor
fisubl
pushl
cmpsl
fnstenv
mov
mov
sbb
adc
and
enter
jae
push
movsb
sbb
lcall
out
xchg
lcall
aad
mov
iret
pop
loop
add
enter
hlt
outsl
mov
inc
movsb
xor
popf
fildll
sub
decl
rolb
mov
movl
mov
fwait
xchg
push
pushl
std
inc
mov
mov
mov
jbe
push
dec
xor
icebp
loop
test
ljmp
lock
fsubs
ss
inc
jae
mov
std
cmp
mov
jp
aas
cli
adc
dec
rcrb
fcompl
pop
js
jmp
stos
fiadds
jle
loope
sub
rcl
dec
adc
mov
jb
sub
mov
clc
fwait
jbe
pop
cli
out
add
mov
mov
sbb
inc
ljmp
jb
cli
adc
inc
mov
popl
xchg
lret
and
decl
fisubrs
jns
fistpl
sub
pop
cld
addr16
and
test
movsb
aam
mov
int3
lock
cmp
sbb
jmp
insb
in
push
gs
jmp
hlt
cmpsl
sbb
retw
decl
ljmp
mov
sub
push
sbb
add
cli
lret
jp
call
mov
decl
popf
adc
mov
pop
sbb
daa
insl
ja
cltd
add
or
hlt
decl
mov
xchg
xlat
inc
pop
dec
sbb
out
out
sbb
lcall
cld
mov
dec
add
cltd
sub
out
test
jb
mov
into
cmc
xchg
and
addb
mov
pop
xorb
sbb
loop
incl
mov
and
sub
sub
scas
into
imul
or
pop
mov
les
imul
mov
ret
pop
or
xor
push
add
pop
xchg
mov
jge
sub
decl
push
shl
aad
jbe
push
imul
cltd
shll
fwait
sbb
fcmovu
mov
es
scas
jno
inc
pop
or
outsb
int
mov
outsl
push
mov
and
ljmp
mov
jl
mov
or
jecxz
adc
cmp
dec
cmp
inc
pushf
testl
add
hlt
cs
sbb
fmull
xor
testb
incl
add
cmp
add
cmp
icebp
sub
jo
stos
push
ja
lcall
xchg
push
fimuls
pusha
test
jns
push
mov
mov
out
mov
lods
mov
int3
aad
call
decl
out
dec
je
stos
dec
popf
lock
lret
and
aaa
sar
incl
sbb
fwait
pusha
dec
lods
pop
imul
repz
sbb
push
aas
movsb
mov
jb
xlat
mov
push
mov
push
push
lcall
inc
incl
push
outsl
xor
inc
or
outsb
movsl
std
mov
inc
clc
mov
pop
sbb
cmp
dec
dec
repz
push
dec
and
and
test
pushaw
sub
jae
lahf
xchg
icebp
jp
out
pop
mov
pushf
and
xor
xlat
cmpsb
enter
cmc
adc
xor
sub
xor
orb
int
inc
dec
adc
fs
out
roll
es
mov
sar
mov
dec
mov
mov
movsl
pop
sub
cmp
mov
pop
cwtl
test
arpl
fdiv
mov
fwait
hlt
fdivs
xchg
shrl
pushf
sbb
pop
cmp
daa
adc
repnz
call
dec
gs
cmc
jns
mov
lds
test
repnz
and
vpaddsw
fnsave
and
dec
pop
adc
sbb
inc
out
mov
addl
dec
sub
mov
out
lock
decl
jg
lods
or
ret
sbb
repnz
pop
push
xchg
mov
movsl
dec
mov
mov
in
inc
les
filds
mov
in
mov
xchg
dec
call
xchg
xor
adc
pop
gs
je
loope
dec
adc
add
jae
idivl
inc
iret
cmc
rcl
jecxz
jge
js
mov
mov
push
loop
mov
out
mov
push
cs
xchg
sbb
xor
jo
xor
mov
fists
outsb
fstpl
movsl
sbb
push
ret
out
mov
inc
and
fxch
nop
js
int
lahf
mov
data16
adc
movsl
adc
jo
pop
clc
mov
clc
call
jmp
xchg
fisubs
xor
popa
inc
push
jae
ficomps
mov
jl
decl
adc
movsb
je
pop
aam
loope
inc
xchg
in
sub
dec
leave
mov
cmp
pop
mov
sbb
into
xchg
pop
or
pop
mov
lcall
add
dec
jns
ss
inc
and
out
lods
mov
mov
jmp
push
xchg
pop
popf
imul
sbb
jl
push
mov
movsl
xchg
bound
inc
lret
jmp
cld
out
xor
add
add
test
clc
dec
lds
xor
scas
cli
jmp
cmpsb
in
xchg
and
jae
mov
stos
inc
es
inc
pop
arpl
or
decl
inc
pop
add
div
mov
add
mov
aam
ja
lcall
jo
out
fdivrs
dec
xchg
mov
dec
sarl
lock
fdivr
out
jge
enter
jge
incl
loop
inc
and
outsl
mov
dec
stc
add
pop
cmpsl
inc
clts
push
or
pop
repnz
jg
jmp
into
jns
sbb
dec
inc
clc
sub
pop
ficomps
stos
cmp
lcall
jne
scas
out
xchg
loop
das
or
xorb
cltd
xlat
push
jle
adc
inc
jl
lcall
xor
sub
call
int3
in
inc
setno
ror
scas
out
and
pushl
pop
sbb
gs
imul
sbbb
fst
in
jmp
ja
jecxz
adc
call
ljmp
les
fs
mov
sahf
mov
incl
adc
jae
dec
push
push
test
inc
cmp
sbb
push
movsl
jo
movsl
jne
popa
mov
fisttps
push
add
movb
pop
push
ljmp
in
xor
mov
jge
pop
mov
mov
mov
ds
mov
cli
ljmp
hlt
xor
popa
and
cmpl
inc
popa
mov
push
test
repz
rclb
sbb
mov
cwtl
sbb
mov
dec
mov
adc
cld
addr16
ljmp
mov
ja
xchg
inc
je
loop
jge
and
mov
mov
mov
jg
jmp
js
shlb
ret
gs
dec
sahf
loop
dec
xor
test
mov
fwait
cmpl
or
push
inc
iret
inc
stc
lods
lods
aam
ljmp
lcall
jp
ss
xchg
mov
out
lahf
cwtl
outsb
aas
fwait
pop
int
mov
mov
mov
mov
cltd
pop
aas
mov
aaa
xchg
cld
cld
int3
daa
push
pushl
in
into
jmp
sti
cmp
out
adc
into
xor
pusha
call
popa
jo
xchg
pop
xlat
jmp
cmp
push
lahf
imul
mov
imulb
dec
inc
pop
add
jg
incl
push
cmp
mov
adc
addr16
scas
aas
or
xor
aas
pusha
pusha
mov
sar
dec
das
imulb
pop
mov
push
dec
jg
je
xor
xchg
aad
dec
adc
call
ljmp
jp
mov
cltd
fidivrl
fwait
mov
outsl
in
jle
out
lret
insb
xchg
das
mov
nop
jl
or
add
ljmp
pop
in
jle
mov
loopne
push
imul
out
clc
jmp
and
mov
xchg
divb
insb
call
inc
sub
decb
out
adc
call
xor
mov
lock
ljmp
cmpsl
stc
sbb
bound
sarl
mov
decl
mov
arpl
cmc
jae
sahf
loope
in
int
icebp
mov
pop
sbb
pop
int
xlat
fiaddl
mov
mov
pop
jns
push
rcll
aam
sub
cmp
jg
rorb
fsubrs
mov
popa
cmp
out
jle
jo
mov
sub
ljmp
or
inc
push
mov
jmp
and
jb
lock
fxch
jg
push
or
jmp
mov
mov
xlat
xchg
lods
subl
call
out
mov
mov
push
call
imul
adc
iret
fs
popa
mov
scas
jbe
cmp
sar
mov
xchg
in
xor
push
sbb
rcrb
cmc
jmp
cltd
pop
ficoml
shrb
out
mov
pop
ja
inc
pushl
pop
dec
es
test
cmpl
fiaddl
imull
sub
jb
adc
lock
ljmp
and
mov
adc
fptan
mov
cs
pop
clc
mov
test
cmp
jmp
daa
mov
cmp
sbb
mov
std
incl
mov
sbb
sarb
fcomip
sub
xor
push
movsl
in
inc
aas
data16
arpl
jnp
aaa
jl
inc
pop
and
enter
int
jg
incl
cmp
dec
lahf
sbb
mov
inc
jb
pusha
push
lret
mov
jmp
inc
lods
add
ljmp
push
outsl
outsb
adc
mov
xor
fcomip
cmp
out
shll
insb
fwait
cltd
mov
jl
int3
pop
ss
ljmp
call
and
xor
imul
iret
cmpsb
lods
xor
sub
or
stos
push
push
shlb
mov
ljmp
mov
inc
in
adc
mov
shl
les
outsl
cmp
dec
inc
sub
call
xlat
push
pop
mov
push
jbe
lods
xchg
mov
sub
pop
clc
out
sbb
mov
stc
xchg
movsb
scas
in
and
incl
popa
push
mov
jmp
push
cmp
leave
pop
hlt
sbb
dec
sti
call
xlat
test
fstpl
ret
aas
in
dec
push
mov
cmp
jns
adc
fadd
jg
push
jb
shl
add
daa
testl
pusha
lock
test
andb
or
xchg
loope
push
lret
lock
shlb
xor
in
fstp
loope
pop
inc
ffreep
adc
out
jbe
addr16
das
in
dec
les
adc
fs
adc
incl
movsl
xor
add
mov
sub
pop
jns
popa
call
mov
mov
mov
outsl
mov
repnz
aas
adc
aas
push
cld
aaa
out
xorb
test
test
pop
or
insl
enter
push
insl
ljmp
scas
sbb
sbb
iret
dec
mov
aas
cli
jg
incl
push
mov
fistps
mov
clc
dec
adc
cmc
decl
cmp
shll
mov
push
cmp
lcall
stc
fsubr
push
xor
xchg
cmp
bound
inc
repz
lcall
inc
sub
ret
mov
insb
push
mov
lea
test
cmp
mulb
and
iret
and
popa
add
lahf
fcoms
sbb
pushf
mov
xchg
pop
add
ljmp
cs
out
popa
pop
pop
lods
enter
and
test
mov
lods
cli
jg
decl
cs
push
jmp
scas
push
or
ret
mov
in
andl
pop
jg
mov
pop
fnstcw
jo
adcb
xchg
movsl
hlt
or
pushl
ljmp
push
ljmp
insl
lods
ljmp
int3
test
insl
push
popa
mov
ljmp
mov
imul
mov
sbb
lcall
mov
test
cld
xor
enter
sti
fwait
out
and
xor
or
iret
popf
xorb
call
add
inc
pop
sti
and
sub
into
aas
sub
lods
je
dec
popa
xchg
or
shlb
incl
pop
enter
out
cmp
std
test
idiv
ja
pushl
and
push
imul
jecxz
call
adc
call
sub
cmp
std
xchg
popa
fsub
in
lock
pop
fwait
clc
nop
shrb
sbb
clc
pop
rcrl
push
adcl
insl
out
mov
arpl
int
and
jo
enter
lcall
incl
jle
jne
addr16
popa
shll
fiadds
dec
cmpsl
sub
adc
cld
scas
mov
decl
jmp
scas
dec
sahf
fbstp
mov
cmp
cmp
mov
call
push
adc
cs
popa
clc
cmpl
dec
jmp
ds
icebp
bound
inc
cmp
mov
pop
fs
push
sub
test
pushl
lods
sub
inc
add
outsl
adc
or
cmpsb
lods
out
add
enter
popa
inc
jmp
hlt
out
fbld
je
cmp
ds
jg
je
ljmp
push
loop
mov
stos
and
adc
movsb
add
lock
mov
popf
aaa
mov
call
cld
fs
jno
clc
push
xor
jecxz
adc
push
aaa
inc
popa
jb
repnz
sbb
jns
jmp
adcl
add
sub
jns
cmp
fcmovnb
xchg
adc
bound
add
mov
dec
dec
push
js
sbb
fstps
push
push
stos
lcall
cmpsb
fildll
lcall
jo
cmp
inc
enter
mov
or
call
lret
lods
sbb
inc
adc
lcall
mov
int
adc
incl
test
loopne
push
out
shlb
call
sbb
rorl
jle
mov
mov
and
add
test
pop
scas
mov
das
sub
push
inc
mov
adc
push
add
out
push
mov
jmp
andb
xchg
into
scas
pusha
rorb
ljmp
sbb
into
pop
mov
jo
loope
outsl
xor
push
sbb
ljmp
incl
ja
add
call
repnz
or
cmp
ret
mov
ljmp
jno
jmp
enter
lret
jmp
inc
cmpb
pop
inc
stc
push
mov
push
and
jmp
push
lcall
movsb
pop
ljmp
xor
je
ljmp
inc
mov
jle
stos
int3
push
addl
jmp
popa
pop
lds
ljmp
mov
daa
std
stos
or
ds
and
loope
popf
and
pop
movsl
cmp
dec
lea
sub
inc
ret
lea
mov
outsl
mov
push
stos
xchg
push
add
or
jb
in
adc
sbb
mov
fld
loopne
adc
aad
mov
inc
rep
mov
repnz
mov
wbinvd
enter
dec
andl
mov
mul
nop
fidivs
mov
out
xchg
add
cmp
fsts
cmpsb
popa
adc
into
inc
cld
jno
pusha
mov
dec
jmp
mov
test
call
ja
in
adc
lret
sbb
adc
inc
sub
lret
cld
icebp
call
jg
ljmp
out
fisubs
les
inc
xchg
jmp
cmp
popf
movsb
and
mov
repnz
call
outsb
jmp
adc
lret
xchg
imul
add
call
pop
ror
fdivrs
push
shll
jmp
insb
or
shll
insl
decl
jl
xor
inc
adc
dec
movsb
dec
aas
mov
cld
push
js
and
cld
incl
dec
xchg
jmp
push
sbb
cli
xor
sub
add
popa
repnz
les
aad
mov
call
repnz
lods
cmp
outsb
or
pop
cmp
pop
add
ss
test
in
sub
lock
jmp
mov
cli
mov
jecxz
lahf
enter
sub
jne
orb
jno
mov
dec
insl
jecxz
add
adc
sub
and
cmp
xchg
aas
sbb
incl
dec
das
imul
add
mov
pop
data16
nop
push
ja
incl
lret
mulb
mov
xchg
sub
ljmp
scas
ficompl
cmpsl
or
lods
mov
xor
xchg
mov
sbb
jmp
stos
jmp
mov
xor
push
add
inc
jle
mov
out
clc
jg
aaa
dec
push
sbb
add
sbb
dec
cmp
push
in
push
pop
or
push
mov
jns
in
jecxz
loop
fisubrs
icebp
or
out
stos
aas
sbb
call
pushl
test
ret
xchg
jmp
push
push
cmp
cwtl
addr16
jmp
pop
add
push
lea
sub
mov
cwtl
mov
mov
ret
pop
or
push
lds
sbb
enter
out
clc
sub
mov
add
outsl
add
pminub
incl
aas
and
movsl
sbb
dec
mov
sub
push
and
fdivrl
orl
cmp
inc
lret
add
adcl
aad
fs
inc
test
jmp
mov
stos
imul
sbb
jp
pop
roll
mov
jno
jo
xlat
push
xor
incl
imul
sub
fdivrs
test
incl
mov
and
mov
rcll
shl
ss
test
lock
sbb
in
pop
mov
push
xchg
cmp
idiv
icebp
dec
mov
rorl
loope
in
pop
mov
frstor
repnz
jg
daa
pushf
mov
test
and
xchg
out
sub
mov
adc
incl
push
xchg
test
lahf
push
push
test
out
cltd
out
movsl
dec
adc
sti
out
std
aaa
adc
add
and
dec
shll
out
push
lods
lcall
xor
mov
mov
or
push
fimuls
std
repnz
push
sub
call
xchg
sbb
dec
jl
fstps
rorl
into
push
adc
es
push
jnp
push
pop
out
adc
push
lods
outsb
subb
add
ds
lods
cmp
movsl
ljmp
sbb
or
popa
xlat
repz
xchg
je
cmpsl
pop
adc
mov
fisubrs
ljmp
xchg
ljmp
js
pop
repnz
dec
cwtl
mov
aam
dec
mov
call
mov
rcrb
idivl
pop
mov
cmp
inc
pop
jp
dec
mov
std
mov
sbb
inc
push
shlb
adc
cld
mov
loop
dec
or
dec
cwtl
pop
xchg
fdivr
loope
jbe
popf
mov
add
incl
mov
cmpsb
pop
adc
psubusw
into
test
pushl
lea
sub
loopne
jb
stc
push
push
inc
push
fstps
add
js
call
jae
and
loopne
aaa
adc
addr16
aad
inc
xchg
jp
sahf
pop
lcall
data16
decl
sahf
inc
push
xchg
cmc
inc
xchg
xor
inc
mov
lret
movsl
clc
pop
es
out
mov
inc
and
xor
in
and
or
dec
inc
pop
xor
sar
pushf
sbb
mov
movsb
inc
pop
or
jae
mov
ja
sbb
cmp
ja
lcall
outsb
cs
mov
add
in
add
xchg
loop
aaa
std
decl
lods
inc
add
aam
in
test
push
push
cli
sbb
out
mov
push
jle
mov
mov
cmp
adc
mov
jmp
fidivl
jo
push
xchg
mov
popa
adc
fcoms
mov
data16
data16
in
loope
jl
push
jl
dec
sahf
ja
sbb
dec
mov
add
xchg
sub
mov
jbe
inc
roll
mov
jecxz
sbbb
call
cld
adc
pop
insb
cmp
es
jb
loopne
xchg
loopne
adc
cwtl
arpl
sbb
mov
pop
and
jmp
jmp
mov
cmp
pop
fcmovne
out
lahf
mov
std
decl
pop
ss
int3
cmp
mov
bound
lods
dec
add
outsl
clc
ljmp
cmp
cmp
dec
cmp
dec
outsl
mov
dec
in
jae
in
mov
jne
lret
cld
or
xlat
divb
xchg
sar
lcall
std
push
cmc
jmp
jne
and
xor
ja
pop
add
sbb
mov
jnp
clc
shll
cmp
incl
arpl
orb
xor
sbb
pop
xchg
test
jg
or
shlb
jo
mov
jne
testb
orl
jo
es
sub
lea
dec
jp
inc
push
dec
jp
xlat
not
mov
aaa
std
incl
cmp
popf
xchg
xor
lock
push
add
adc
shlb
mov
jnp
mov
xor
jbe
adc
cmpsl
push
rol
xchg
cmovs
mov
jne
je
out
into
jmp
inc
mov
fbld
mov
pop
clc
mov
inc
ds
sbb
addr16
sub
idiv
lcall
push
push
ljmp
lahf
ljmp
sub
adc
add
insb
ds
call
fidivrl
imul
mov
into
aaa
iret
inc
mov
dec
fstpl
jge
add
mov
ds
mov
xor
lock
jne
inc
sub
test
jmp
xor
enter
mov
insl
imul
xchg
fprem
dec
sbb
incl
inc
sub
adc
push
and
int
dec
out
dec
inc
mov
stos
push
jmp
lret
out
ljmp
movsb
movsl
xchg
mov
lcall
test
jle
xchg
and
mov
incl
rcrb
int3
jno
pop
popf
fwait
jmp
inc
inc
lds
jmp
test
ret
and
inc
lret
outsb
popf
test
xor
loope
cmp
mov
lret
cld
inc
push
add
iret
push
cltd
and
call
cld
ret
xchg
jb
or
cs
jno
xchg
push
faddl
popa
aad
add
movsl
pop
aam
jno
or
xchg
add
add
shlb
push
fstl
lea
xchg
add
incl
cli
xor
sub
dec
cmpb
dec
xor
or
inc
sahf
mov
ljmp
and
push
push
lahf
cltd
fcmovnb
cmp
adc
mov
fcomip
mov
lcall
ss
xchg
lret
mov
movb
jp
sub
add
lahf
shld
add
push
pop
fs
out
cld
push
test
clc
push
xchg
test
scas
jno
jp
adc
mov
loop
push
insb
les
dec
ds
loop
sahf
push
cltd
fists
push
mov
xchg
addl
and
xorb
or
mov
hlt
jp
pop
imul
push
clc
popf
cmp
notb
sbb
mov
sub
scas
jno
push
xchg
push
pushl
cld
push
sti
test
in
pushf
divl
lret
scas
ret
push
sub
mov
dec
xor
xor
std
jg
stc
test
pop
icebp
xchg
add
cmp
out
mov
or
jg
adc
sub
sti
aaa
les
mov
dec
or
pusha
and
pop
ljmp
test
adc
and
add
sti
jge
decl
jmp
fsts
and
rorl
xchg
sbb
lret
or
xchg
in
add
pushl
sbb
int
jmp
xchg
jne
xchg
jl
andb
push
inc
call
pop
xchg
enter
xor
jle
xchg
shrb
das
pop
xor
jl
xchg
cmpsw
sub
clc
fiaddl
lods
in
mov
mov
xchg
nop
push
cmc
lcall
nop
loope
adcl
mov
fst
xchg
xchg
ja
mov
fcomps
lods
cli
out
into
push
stc
push
add
jl
repnz
inc
jge
pushl
lods
in
insl
jg
push
repz
mov
enterw
and
loope
mov
inc
add
add
pop
dec
daa
adc
sub
pop
sbb
sahf
aad
push
jp
aad
cli
in
test
stc
idivl
inc
lods
and
aam
sbbl
ljmp
inc
dec
jl
stos
std
mov
xor
fistpll
sub
iretw
inc
dec
jge
push
ljmp
push
dec
ljmp
adc
mov
pop
add
popa
test
ljmp
sub
sub
ret
les
rcrb
sub
mov
shlb
outsb
fildl
push
subl
cmp
or
push
gs
push
hlt
dec
sbb
int
outsb
xor
dec
cmp
jne
hlt
sub
lret
ljmp
cs
pop
int3
cmp
arpl
sub
fwait
xchg
incl
xchg
aaa
ja
jmp
pop
push
in
imul
ret
mov
adc
pop
fnsave
fwait
nop
enter
and
pop
mov
mov
bound
mov
cltd
iret
sti
data16
jno
sub
aas
add
ljmp
xchg
mov
loop
mov
and
fs
lret
fidivs
shll
dec
lcall
adc
rclb
fldenv
mov
sub
xlat
add
dec
jb
ret
sarl
popf
xchg
xchg
test
jl
sti
jecxz
cmpsl
cmpsb
shl
add
lcall
pop
mov
xchg
dec
push
dec
fisubl
sarl
es
lods
or
arpl
movsb
mov
shr
inc
add
inc
dec
daa
add
sub
cvtpi2ps
jbe
bound
mov
inc
and
pushl
ss
pop
in
jno
popa
frstor
adc
sub
mov
inc
dec
and
or
icebp
adc
fs
sbb
lcall
jg
repz
or
cmpl
test
mov
sar
mov
jnp
xchg
sbb
lods
sbb
lock
test
and
add
push
iret
nop
and
adc
mov
push
dec
lods
sbb
dec
mov
push
and
mov
pushl
cmp
jg
fadds
insb
push
xchg
cwtd
stos
sub
call
xor
daa
sbb
call
inc
jl
xchg
testl
push
dec
adcl
js
in
pushl
cmp
mov
and
pop
shll
js
fcoml
or
js
decl
leave
or
mov
aaa
mov
xor
pop
adc
jae
fdivr
pushl
jne
or
push
inc
and
mov
push
xlat
gs
inc
lds
pop
in
add
inc
icebp
mov
mov
mov
sbb
cmp
mov
push
xor
mov
rcr
mov
xor
int3
loope
rcr
mov
lcall
cmp
in
or
dec
cmp
mov
fdivr
jp
cmc
std
pop
fcomip
ljmp
pop
js
sbb
movb
fmuls
jns
xor
jo
scas
mov
jle
decl
and
ret
inc
xor
inc
mov
stos
call
add
shll
mov
pop
orb
ja
ret
lcall
in
fdiv
das
dec
pop
mov
ja
mov
adcw
mov
sbb
aad
jmp
movsb
scas
movb
movsb
cli
hlt
mov
aad
insb
pop
dec
sbb
in
push
pop
inc
and
pop
jmp
cmp
fs
xchg
or
imul
push
jo
sbb
xchg
sub
addr16
ljmp
xor
out
ss
out
xor
dec
xor
adc
outsl
mov
ss
cmp
mov
inc
adc
fildll
fwait
out
mov
jg
testb
ficompl
stos
and
call
into
ret
dec
ret
data16
ret
loope
sub
sub
inc
bswap
imul
jg
jmp
jo
adc
sarb
es
in
cltd
and
xor
in
in
inc
lret
or
loopne
push
fcmovnbe
add
jne
xor
lcall
decl
nop
dec
nop
popa
and
jp
fidivs
and
test
jl
mov
movl
push
int3
dec
add
enter
loopne
ret
dec
loope
daa
xchg
pop
out
sbb
inc
lret
xchg
cmp
jmp
outsb
out
aad
mov
je
rcl
pop
lock
push
jecxz
add
or
lcall
push
add
inc
ja
mov
inc
sbb
jecxz
loope
jae
pushf
sub
lcall
sub
jbe
ljmp
mov
or
sub
jbe
pushf
sub
adc
incl
push
pop
xlat
or
dec
sub
icebp
fadd
cmpb
in
xlat
lock
pop
cmp
xchg
push
fs
dec
mov
repnz
mov
pop
sbb
dec
or
lcall
or
js
push
cmp
pop
xchg
push
mov
fnstenv
xchg
ljmp
xchg
test
dec
xchg
sub
mov
push
lods
push
add
insb
and
int
pop
jg
decl
xchg
inc
imul
sahf
pop
cwtl
push
in
out
lods
sub
int3
out
xchg
movsb
in
push
dec
sub
ds
sub
clc
jle
xor
add
decl
xor
pop
push
enter
xchg
hlt
lea
ljmp
cld
das
lcall
adc
xchg
das
mov
sbb
jns
scas
push
and
inc
incl
push
jmp
lcall
inc
push
add
dec
jns
fsubr
xchg
std
decl
divb
ret
fstps
sbb
mov
icebp
loope
incl
arpl
xor
dec
popa
enter
xor
std
hlt
dec
notl
pop
jg
mov
cmp
mov
lock
sahf
loopne
cmp
xor
jne
xbegin
decl
add
xchg
xlat
and
cmp
pop
imul
fisubs
xchg
or
and
dec
jmp
push
ss
jo
xlat
push
cmp
dec
std
jae
pop
addl
lea
jg
fnstsw
xor
cld
inc
jns
jmp
cmpsb
jbe
enter
lcall
pushl
fdivrs
mov
or
insl
sti
xchg
fadd
arpl
movsb
sti
mov
scas
jmp
inc
sarb
shlb
push
scas
dec
dec
mov
cmp
lea
shrb
loope
lea
dec
out
iret
out
pushf
test
add
filds
lahf
pop
push
sub
iret
iret
out
cmp
and
mov
js
push
fcmovbe
xor
cmp
call
ficoml
mov
jmp
xchg
jbe
inc
aad
fnstsw
sti
mov
sub
xor
push
addr16
dec
in
clc
jg
mov
jmp
inc
push
sti
or
dec
or
scas
cmpsb
js
mov
shll
sahf
or
push
adcb
jl
ror
inc
mov
ror
cmpsl
inc
imul
loop
gs
mov
fisubrs
rcrl
int
mov
sbb
aam
mov
pop
jmp
mov
insl
stc
rclb
adc
xchg
sbb
xchg
xchg
mov
add
jmp
xchg
pop
adc
add
cmpb
popa
adc
jg
iret
test
xor
xor
lods
aas
push
mov
add
mov
jmp
cmp
sub
decl
rclb
sbb
sub
sahf
mov
cld
inc
sbb
add
pushl
shr
cmp
add
inc
pop
aas
inc
or
xor
aaa
cmpsb
incl
mov
clc
mov
fimull
dec
aad
outsb
xchg
sahf
pop
dec
shll
clc
sub
decl
mov
xor
mov
inc
or
in
mov
in
fsubrl
loopne
or
ja
mov
sysenter
adc
movsb
xchg
dec
stc
pop
pop
icebp
call
push
lahf
inc
push
xchg
mov
xchg
lret
mov
mov
sbb
test
add
incl
cld
sahf
cmp
push
scas
mov
rcl
cmp
cli
test
les
cmpsb
call
dec
push
lds
enter
inc
mov
xor
mov
fldcw
repnz
stc
cmp
add
cmpsb
jmp
mov
push
loop
inc
fwait
and
std
add
std
enter
aas
in
xlat
push
inc
push
sbb
mov
mov
lret
mov
or
dec
sub
or
and
ljmp
xorl
jnp
gs
add
ds
jg
lcall
shl
out
int
adc
fwait
loope
sar
jge
or
in
mov
fcoms
rcrl
stos
fs
dec
stc
inc
shl
nop
fcomip
ficomps
cmp
push
mov
test
push
fimull
jmp
in
push
push
mov
adc
les
cmp
aad
xchg
dec
add
jmp
inc
mov
dec
pop
pop
mov
pop
addr16
lds
fadds
pop
adc
call
add
add
fbld
daa
cmp
int
add
ds
cli
jp
cld
mov
aas
xlat
nop
mov
lods
cmpsb
imul
mov
orl
mov
xor
sbb
ret
mov
inc
popa
lret
dec
out
pushf
dec
insl
jns
repz
pop
mov
stos
adc
mov
test
adc
mov
cmp
decl
gs
dec
outsl
call
dec
out
pop
in
stc
fstpt
lds
pushf
add
ljmp
xor
push
mov
mov
mov
xor
jmp
adc
inc
add
mov
and
mov
sub
incl
sbb
lea
movl
push
or
or
sbb
jo
decl
adc
mov
adc
jp
add
fistpll
lahf
into
scas
test
fcoms
jl
dec
insl
aad
push
lcall
add
aaa
jmp
pop
and
popf
mov
cwtl
lcall
or
or
pop
call
pushl
xchg
adc
cmp
sub
inc
loopne
aad
lcall
sbb
test
push
and
or
lret
pop
cmpsb
test
xchg
nop
mov
sbb
call
loop
xchg
int3
sub
fwait
scas
clc
ja
xchg
les
and
inc
adc
mov
fwait
rorl
sar
out
incl
adc
mov
pop
dec
dec
push
hlt
pop
mov
int
cld
cs
shll
ljmp
mov
inc
into
sar
ja
outsb
pop
test
adc
std
sbb
jg
fisttps
jp
in
das
add
andl
mov
cld
ljmp
adc
and
out
mov
fcmovne
and
push
xchg
sahf
cmp
negl
aam
push
xchg
inc
lock
add
jge
les
incl
and
or
sti
ljmp
lret
repz
pop
lahf
jb
adc
push
dec
adc
jb
mov
lahf
jmp
test
add
incl
sbb
cwtl
mov
lock
loopne
lret
mov
inc
xchg
adc
xchg
test
or
fists
cmc
dec
lcall
jmp
mov
xor
push
shrl
xchg
sub
jo
lcall
clc
fcoms
cmp
ret
mov
dec
sahf
dec
stc
jno
or
or
mov
cld
ljmp
dec
in
push
aad
ds
pop
pop
adc
mov
fsubrl
es
je
pushl
fisubs
dec
scas
inc
fdivrl
sti
xchg
dec
xor
arpl
rcrl
jp
jno
repnz
xor
push
je
popa
cli
pop
test
mov
popa
data16
mov
and
pop
mov
ficomps
pop
sbb
sub
iret
jmp
call
and
mov
repnz
pop
in
and
jb
mov
sbbl
outsb
and
decl
or
flds
daa
jae
adc
or
popa
cmp
jmp
cmp
mov
clc
add
sahf
fcompl
fadds
push
sbb
lret
push
ficomps
jp
stc
mov
and
xlat
push
insl
vmovapd
mov
ret
in
mov
mov
insb
jno
dec
leave
lret
inc
notl
xchg
aam
daa
mov
cld
jl
stc
loop
pop
adc
mov
or
test
jmp
xchg
int3
mov
sbb
jns
cmpb
mov
dec
stos
pop
in
popf
in
test
incl
and
sub
push
mov
loopne
test
test
sbb
call
scas
inc
fcoms
jg
xchg
rcll
adc
repnz
pushl
xorl
sbb
mov
or
testl
jae
adc
push
incl
mov
fucom
cld
out
test
add
or
add
clc
jmp
movsl
aaa
mov
dec
add
movsl
push
sbb
xlat
imul
jp
in
test
push
jnp
ja
ljmp
push
shll
inc
dec
scas
and
xchg
xchg
cld
loop
jl
add
loop
rcr
pop
movsl
push
scas
pop
loop
decl
pop
mov
xchg
scas
or
out
addr16
ljmp
lcall
shll
lahf
mov
fcomip
mov
jns
stc
and
in
xchg
cmp
push
push
xor
mul
inc
js
mov
jnp
mov
call
mov
and
push
xor
cmp
sbb
call
lods
shll
fistpl
or
fdivrl
cltd
mov
mov
mov
adc
add
ljmp
enter
rcrb
lds
pop
inc
fisttpll
adc
roll
lods
cmp
push
jg
lcall
dec
adc
fwait
gs
insb
shl
mov
push
push
and
in
dec
mov
lcall
scas
jns
sahf
fadds
out
aas
jbe
loopne
xchg
fnstenv
jns
jne
mov
jmp
sahf
sbb
cld
sub
pop
and
test
jns
fs
push
cmp
xchg
xchg
enter
sbb
incl
lret
or
test
sub
sbb
or
cld
aad
pop
jmp
mov
call
test
rcrb
jp
inc
and
or
mov
fistps
pop
inc
loope
ret
mov
mov
xchg
fidivrl
dec
ljmp
in
mov
ret
cli
cmp
mov
or
imull
push
movsl
idiv
outsb
call
mov
inc
fmull
test
mov
pop
fcomps
sbb
ja
ljmp
xor
add
dec
in
mov
mov
pop
in
rcrb
incl
loope
test
add
movsl
sub
mov
mov
jo
ljmp
fs
dec
adc
mov
sbb
fcomps
movsb
inc
sub
mov
shr
xor
adc
pusha
dec
push
test
add
fildl
ds
mov
stos
andb
sahf
jecxz
cmc
out
cmc
neg
jns
scas
fidivs
push
xor
lcall
sub
xchg
jo
push
test
cmpsb
ss
dec
pop
mov
mov
or
imul
sbb
xor
rorl
push
out
data16
add
scas
mov
iret
hlt
decl
dec
out
xchg
sbb
insb
scas
jl
dec
or
je
idivl
jmp
pop
pop
adc
mov
jg
jnp
mov
and
out
add
decl
lahf
and
jmp
or
fs
mov
rorb
cmp
filds
scas
add
scas
mov
or
es
inc
jl
lcall
aad
pushf
inc
xchg
mov
adc
push
int
dec
outsl
lret
pop
fdivs
lcall
ss
push
pop
or
imul
and
addr16
add
das
mov
repnz
loop
nop
fdivrl
loop
pop
mov
or
dec
jecxz
push
dec
mov
dec
call
add
fst
lock
xor
sub
jg
pop
fisubrs
or
add
pushf
cltd
ja
dec
inc
mov
out
cli
xchg
roll
xchg
push
mov
or
cmpsb
test
push
stos
cmp
sar
out
es
loope
shll
push
add
xlat
or
in
popa
bound
push
imul
add
xchg
mov
in
dec
jne
inc
shl
mov
ljmp
or
pop
dec
xor
sub
jge
ret
nop
dec
adc
insb
jnp
xchg
cli
xor
lock
movsb
jge
mov
mov
psubsw
ljmp
add
stos
push
or
lcall
data16
jb
jb
lret
pusha
mov
push
dec
popa
repz
cs
mov
push
cmp
adc
xorb
push
mov
sub
mov
mov
mov
pop
sub
hlt
xor
outsb
mov
cmpsb
popf
inc
sub
mov
inc
lock
adc
ss
xchg
jle
push
jnp
jg
mov
jno
push
movsb
fs
nop
or
push
and
int
addr16
loopne
mov
inc
lahf
insl
mov
push
sub
jg
jmp
aaa
les
cmpsl
fstpl
and
xor
lock
lcall
out
mov
pop
pop
lea
pop
fsubrl
cmp
adc
nop
xor
lcall
lahf
and
mov
add
rcrl
cmpsl
sub
mov
mov
push
sub
adc
mov
mov
xor
lahf
push
test
icebp
push
cwtl
leave
lods
stc
add
call
cli
jle
adc
stos
add
inc
daa
xchg
push
std
adc
cltd
jecxz
mov
mov
lcall
sbb
enter
out
fistl
in
cld
pop
and
rcrl
push
imul
pop
mov
decl
gs
push
data16
sbb
adc
mov
inc
mov
inc
xor
aam
mov
mov
lret
mov
xor
andb
sbb
jo
call
lea
enter
dec
mov
sarb
lods
sub
out
lahf
cld
iret
adc
int
pushl
push
jmp
push
iret
rorb
lods
lcall
adc
jl
out
adc
inc
add
or
cmpsb
shlb
adc
cmp
mov
jmp
ret
sub
scas
pop
push
sbb
roll
imul
lcall
inc
lret
mov
jmp
push
cs
jg
mov
mov
imul
mov
repnz
sahf
fadd
icebp
icebp
cli
fcos
inc
or
and
jecxz
in
scas
movsb
mov
cmp
dec
movsl
push
pop
mov
pushl
xchg
mov
xchg
add
mov
int3
mov
aas
arpl
xor
mov
sbb
ljmp
fisubrs
lret
mov
shll
incl
push
adc
ja
sub
jo
inc
mov
inc
sub
sti
aaa
cld
decl
adc
clc
jmp
adc
in
mov
fmull
int3
imul
lds
call
mov
xlat
outsb
loope
cmpsl
into
or
repnz
cwtl
sub
out
popf
loopne
xor
out
clc
lcall
jbe
push
aam
or
or
lods
data16
data16
xor
je
repnz
cmp
jmp
cmp
jg
cmp
ficoms
mov
cmpsb
mov
lret
mov
dec
dec
jne
dec
cmpsl
inc
ret
cmc
dec
push
push
sahf
std
scas
mov
add
scas
mov
ds
aas
or
cltd
sub
mov
cmpsl
jb
pop
loopne
mov
and
adc
cld
mov
bswap
or
incl
xchg
dec
repnz
pop
add
jne
je
test
xchg
or
call
push
shll
push
add
std
or
sbb
jae
lock
pop
add
je
mov
push
mov
scas
cli
rorb
lret
xchg
testl
cmp
xchg
jle
jmp
mov
sbb
pop
inc
xor
or
out
push
decl
push
gs
loop
inc
int3
repz
repnz
xchg
add
xor
push
push
sbb
call
ror
cli
add
inc
dec
inc
fldl
pop
int
subb
call
push
and
inc
dec
cwtl
into
xchg
dec
add
dec
mov
lock
push
loope
xor
push
in
cwtl
cltd
xlat
pop
aad
and
xchg
push
and
scas
stos
test
lea
je
ds
out
mov
ljmp
rolb
adc
and
pop
int
mull
jns
mov
in
in
jmp
stc
sub
int3
and
inc
or
pop
mov
insl
mov
das
cmp
sbb
negb
mull
jo
fcoms
je
aad
jb
dec
and
ret
pop
adc
pop
pop
push
loope
call
cld
adc
inc
xor
dec
inc
leave
loopne
cwtl
xchg
or
inc
rcrb
test
in
call
and
lret
shl
mov
xchg
scas
int
inc
out
lcall
lcall
jg
out
pop
ucomiss
shlb
leave
dec
and
cld
decl
adc
test
sbb
sbb
subl
jl
push
jl
sbb
inc
sbb
ud2
sub
repz
push
cmp
xlat
fcomps
fdiv
add
call
jbe
sbb
inc
pop
inc
stos
xchg
or
pop
adc
ret
cmp
mov
or
test
dec
dec
fisubrs
ja
js
mov
int3
mov
outsl
mov
enter
inc
mov
push
mov
and
lret
out
test
pushl
out
clc
or
scas
cltd
call
test
insl
push
jl
in
int
outsl
pop
mov
sub
add
mov
mov
pop
or
dec
xor
pushf
adc
aaa
incl
rorl
pop
pop
add
jnp
add
cmpl
in
dec
push
sub
pop
call
sahf
push
or
stos
imul
shlb
dec
jae
sbb
call
int
imul
mov
or
idivb
mov
ljmp
fisubl
and
mov
dec
and
mov
xor
jg
fucompp
lretw
pop
stos
sbb
pop
stc
and
cmp
repnz
sub
out
jp
cmp
cmpsb
pop
into
and
push
faddl
xchg
aad
loopne
jne
lcall
std
sbb
sbb
out
imul
loop
movsl
ficoml
sbb
popa
lcall
mov
cld
loopne,pn
pop
hlt
test
shlb
add
inc
jbe
decl
ljmp
rolb
ficomps
push
pop
mov
inc
cwtl
loopne
ljmp
and
mov
pop
in
jae
push
jge
cmp
cld
jle
mov
mov
repz
incl
cs
add
cld
mov
ss
fldl2t
je
adc
pushl
sub
push
movl
loope
jo
pop
inc
in
cmp
push
stc
pop
and
cmpsl
lock
dec
fstpt
outsl
fstps
cmp
nop
cli
lret
adc
dec
jns,pn
lods
pushl
pusha
aam
inc
lret
mov
mov
aaa
mov
outsl
inc
shr
lock
negl
insl
call
and
pop
shrl
xchg
mov
pushf
pop
mov
aas
stos
mov
dec
jno
fisttps
jg
xor
pop
xchg
sbb
scas
mov
cmp
out
push
aaa
outsl
mov
mov
aam
sub
mov
aad
cmp
pop
lock
fsub
sbb
cli
xchg
testb
push
movsb
or
sti
scas
shrb
cmpsb
mov
fdivr
jmp
push
clc
jnp
lods
add
jp
icebp
push
mov
xor
stc
lock
fcomps
xor
or
into
inc
mov
std
sbb
mov
stos
sbb
cwtl
push
movsb
dec
sahf
jnp
sbb
xor
xor
jg
adc
fimuls
movsl
pop
rcrb
movsl
jmp
fdivrl
mov
xchg
xor
fisttpl
lock
in
lds
jecxz
mov
outsb
and
lahf
dec
sub
xchg
sbb
out
mov
pop
mov
inc
xor
ss
jno
arpl
sbb
pop
xchg
push
xchg
pop
cmp
ljmp
mov
pop
nop
xchg
out
in
insl
popa
inc
popf
mov
mov
pop
dec
mov
xor
pushl
popf
dec
pusha
push
and
out
or
cmc
fs
push
icebp
es
xor
fimull
sbb
sbb
subb
les
cmpsl
int
nop
scas
imul
mov
aas
decl
xchg
nop
push
or
inc
mov
clc
mov
scas
pop
mov
decl
inc
shl
test
in
mov
dec
push
add
pop
xchg
or
sarl
cltd
ret
decl
push
adc
jbe
je
pop
out
mov
dec
stos
xchg
mov
adc
xor
nop
movsl
dec
jmp
cmpsb
testl
mov
add
sbb
jae
inc
pop
inc
jecxz
jp
jne
imul
test
cmp
call
repnz
or
pop
dec
pop
mov
pop
into
sub
xchg
hlt
in
jnp
cmp
sub
mov
or
dec
es
fwait
mov
pop
mov
test
jp
aaa
aaa
std
mov
cmpsl
ds
adc
lahf
icebp
inc
lret
arpl
dec
int
push
lods
pushf
pushl
andb
test
lret
test
cmp
xchg
out
mov
push
std
repnz
call
sahf
cltd
in
lea
jmp
cld
xchg
mov
repz
jmp
mov
outsb
mov
mov
dec
push
scas
mov
cmp
ret
call
shrb
fdivs
jecxz
loope
aas
xor
mov
enter
push
push
in
inc
loop
in
pop
or
mov
dec
adc
andb
mov
insb
push
jae
shrl
ljmp
cmp
pop
in
addb
jl
add
test
fwait
mov
daa
jl
push
mov
iret
imul
fisttps
enter
xor
ljmp
clc
shrl
fwait
sarb
jnp
aaa
repz
add
inc
lret
sti
add
sbb
call
jnp
jne
pushf
fidivs
gs
pusha
sbb
addr16
es
mov
inc
add
xchg
pop
cmp
int
push
bound
out
jae
sbb
mov
mov
je
call
xchg
pushf
xorl
push
push
dec
fs
sub
mov
inc
pop
cmp
stc
add
pushl
popf
inc
jno
jecxz
sub
sti
sbb
jecxz
mov
lcall
adc
xchg
push
sbb
adcl
sub
cmp
pop
push
fists
pop
iret
in
sahf
test
mov
jmp
cld
jb
cwtl
xor
ljmp
cmp
cmpsl
mov
pop
sub
incl
mov
ljmp
sub
fldl
mov
push
push
mov
imulb
push
hlt
leave
sbbb
pop
inc
jb
out
dec
ss
pop
aas
scas
ds
adc
ficoml
adc
data16
sub
add
aaa
cmp
incl
lods
fnstsw
mov
je
movsb
mov
das
push
icebp
inc
fsub
and
sarl
or
sbbl
cmp
test
outsl
rclb
xor
push
mov
ret
aad
xchg
sub
xchg
pop
jo
cmc
pmaddwd
jbe
xchg
add
movl
pushl
cmpsl
test
sub
push
or
aaa
test
jno
mov
pop
aas
mov
out
mov
sarl
push
decb
mov
mov
cmc
lcall
call
jb
sahf
pop
js
iret
pop
test
mov
jecxz
imul
adc
iret
xchg
or
jns
push
movsl
cmp
mov
adc
cmp
mov
adc
sti
mov
outsb
ja
daa
xor
jo
fsubr
adc
into
orb
and
push
les
mov
inc
stc
pop
test
adc
xchg
xlat
pushf
dec
and
mov
or
daa
jecxz
movsb
loop
pushf
stc
cmp
mov
lcall
stos
dec
scas
repz
pop
dec
gs
or
test
inc
and
ficompl
cmp
ljmp
mov
in
mov
xor
inc
mov
dec
loope
imul
lock
stos
or
xchg
or
je
aam
xor
incl
sbb
shrb
jl
subb
jmp
jae
bswap
data16
mov
decl
cmp
push
dec
cltd
leave
adc
jnp
cmpsl
push
daa
sbb
lock
add
or
or
sub
mov
outsl
jnp
aad
outsb
xchg
cmp
add
incl
scas
out
pop
shlb
mov
mov
arpl
cmp
call
es
mov
test
jp
and
mulb
call
nop
jae
cmp
in
inc
mov
popa
cmpsb
xor
popa
inc
repnz
mov
jmp
pop
loop
loop
out
dec
xor
sbb
jmp
in
xchg
rcrb
mov
push
xor
jmp
shlb
gs
xor
repnz
incl
das
xchg
and
cld
jg
jae
dec
push
inc
jg
cmc
sbb
pop
shlb
scas
xor
sti
xchg
rcll
pushl
imul
mov
andb
xor
dec
lds
xchg
lret
lret
jg
pop
mov
stc
xor
jle
rclb
loope
sub
call
push
push
stos
movsb
mov
dec
xor
pop
es
ljmp
sahf
jmp
mov
fldt
fcoml
call
pop
sub
test
in
pop
hlt
jmp
pop
xchg
mov
cwtl
jnp
jecxz
mov
cwtl
in
cmp
decl
push
cmpsb
jl
loope
pop
mov
call
add
mov
decl
jne
fprem
dec
jne
adc
mov
xchg
pop
fisubrs
ljmp
cli
sub
sub
movl
cs
clc
imul
push
ja
decl
mov
and
cmp
les
cmp
jp
push
lcall
xor
dec
js
imul
sub
mov
inc
int
lret
test
decl
insb
cmp
pop
adcb
movsb
lcall
xchg
xchg
adc
lcall
xchg
mov
stc
mov
ss
aad
arpl
inc
or
cmpsb
jno
dec
pop
push
pmulhuw
in
dec
out
mov
xchg
inc
sub
cmp
call
test
add
inc
inc
das
xor
push
loop
std
leave
xchg
mov
dec
es
dec
mov
mov
and
sbb
xlat
sub
repnz
adc
je,pt
roll
outsl
cmp
mov
shlb
repnz
inc
popf
lcall
repnz
sub
mov
testl
mov
mov
xchg
cmpsl
add
jle
add
shrb
addb
cld
rcr
jp
mov
test
mov
cmp
and
notl
ss
pushf
rorb
pop
dec
jle
gs
pushl
xchg
pop
rorb
jp
adc
rcrb
clc
pop
test
mov
xchg
decl
fiadds
scas
sub
mov
mov
inc
push
mov
ja
adc
dec
mov
xor
jmp
sbb
jle
fiadds
fildll
xor
std
mov
lds
fdivrs
cmp
jg
jmp
jo
xchg
addr16
faddl
cmp
in
data16
fucomip
popa
hlt
movsl
add
movsb
jge
rorl
xchg
lods
pop
xor
cmp
mov
xchg
add
xchg
sahf
cmp
xchg
aaa
adc
push
pushl
std
lret
xor
push
jmp
in
cmp
lds
sbbl
ljmp
jp
jb
push
jge
push
dec
push
sbb
pop
dec
aas
push
and
loope
ljmp
test
or
xchg
stc
lds
fwait
in
pusha
mov
adc
fs
lea
jle
insb
fmull
push
push
out
cld
push
out
dec
pop
scas
adc
incl
aaa
cli
mov
testb
loop
outsl
popa
sub
iret
and
mov
or
jno
jmp
aaa
rorl
pop
xchg
outsb
paddusw
dec
mov
mov
jo
jae
xor
mov
jge
call
movsl
lods
xor
fidivrs
push
mov
pop
cmp
or
sub
push
ljmp
incl
jnp
jg
test
jbe
dec
fs
pop
cmpsb
cwtl
mov
jecxz
sti
ljmp
pushl
fbstp
adc
adc
pop
addl
out
fwait
mov
jae
incl
fnstsw
pop
push
fwait
aaa
dec
sbb
jns
fsubrs
shl
in
arpl
es
push
xor
or
sar
xchg
repnz
ds
xor
decl
sti
push
popf
jecxz
and
mov
sbb
cs
adc
adc
cltd
idiv
lcall
cld
sarb
xor
sahf
xor
xchg
in
dec
loop
sbb
call
aaa
jl
mov
pop
xlat
jb
sub
je
fisttps
mov
push
fidivrs
movsb
push
mov
decl
pop
jns
jp
filds
mov
pop
jl,pn
jp
shll
mov
scas
add
xchg
adc
push
jno
test
push
sahf
in
fcomip
mov
repnz
popf
and
fucomp
mov
jo
repz
mov
aam
sbb
pusha
enter
add
pop
push
push
fdivr
push
fsubr
mov
adc
push
xchg
mov
scas
mov
xchg
loope
fsubrp
inc
popa
xchg
mov
inc
adc
cmp
stos
jle
cli
insb
loop
push
sbbl
cltd
push
cmpl
inc
jg
out
or
cld
xchg
pop
push
divb
mov
add
rorb
test
into
jle
add
mov
sub
sub
ja
inc
and
jae
mov
js
call
loopne
repz
cwtl
inc
outsb
mov
inc
into
xchg
jp
and
std
push
fsubp
xchg
call
fstp
cld
out
mov
push
jns
mov
insl
add
push
andl
call
out
outsl
pop
imul
aad
adc
lahf
test
fcmovb
mov
nop
mov
pop
dec
or
jb
or
jbe
cld
test
and
lock
test
xor
out
clc
lcall
push
imul
xchg
cmp
test
xchg
popf
sbb
inc
mov
insb
stc
mov
pop
and
or
pop
popa
in
ss
xorl
mov
and
out
cli
rorl
mov
cld
sub
mov
ret
iret
movsb
adc
sbb
pop
inc
call
aam
sub
mov
sbb
cmp
mov
lods
and
jp
sbb
jp
mov
xor
into
out
cwtl
cmp
jmp
stc
int
adc
nop
inc
cwtl
movsb
pop
cld
lcall
sub
pop
js
pop
cli
inc
push
gs
jne
sbb
lcall
bnd
repnz
add
leave
lret
mov
loopne
xchg
fs
lcall
push
ljmp
data16
aaa
sub
inc
mov
push
stc
imul
jmp
dec
mov
cmp
add
sub
inc
mov
dec
xchg
popf
xor
lock
push
lahf
push
cld
loop
cmp
ljmp
popf
cli
xchg
adc
aaa
inc
lret
dec
out
xchg
adc
call
xchg
int
nop
pop
push
pop
dec
sub
test
cmc
jecxz
xchg
ficoms
sbbb
add
push
mov
mov
pusha
imul
cld
fstpl
jne
test
lcall
into
xor
jns
fldenv
cmp
cmpsl
out
xchg
stos
push
mov
es
lea
pushl
adc
mov
das
ret
int3
mov
xchg
jo
les
inc
fs
dec
mov
jo
jne
test
data16
lds
jp
in
jo
or
mov
inc
cld
call
mov
push
ljmp
das
pop
jnp
fcompl
scas
sbb
pop
lcall
aam
sbb
incl
mov
push
lods
dec
inc
fcmovne
sub
gs
cmp
ljmp
test
fidivrl
mov
mov
jmp
lahf
sub
mov
sbb
jmp
jecxz
add
or
ffree
xor
test
clc
bound
and
mov
jg
cmpsl
mov
push
pushf
jl
inc
xchg
mov
cmc
insl
or
xchg
mov
imul
dec
cld
push
fcmovnu
cli
gs
frstor
aaa
xor
out
sub
mov
sub
xor
ljmp
mov
movsl
xor
daa
fdivl
mov
icebp
outsb
dec
sub
cld
or
test
xor
call
cmp
mov
sub
stc
and
jno
xor
gs
int
jge
push
push
push
dec
mov
sbb
cmp
jp
jb
sub
movsb
test
jmp
popf
test
mov
xchg
or
in
scas
pop
sti
aas
jnp
rclb
mov
insb
cmp
xchg
xlat
dec
jmp
test
and
inc
lds
mov
dec
mov
sub
or
bndldx
cwtl
inc
outsl
cmp
push
jmp
incl
cli
xchg
ja
std
mov
or
push
xchg
je
lret
sub
pop
mov
xchg
or
push
sarl
jb
lcall
repnz
cltd
fstpl
sbb
adc
xor
xchg
call
lods
cmpb
sbb
sbb
ds
add
add
dec
leave
add
jmp
std
adc
mov
ljmp
lock
test
pop
mov
incl
or
and
neg
xor
lods
insl
xchg
dec
cmp
pop
pop
sbb
ud0
incl
icebp
fadds
xor
jbe
pop
xchg
xchg
adc
adc
ljmp
out
lds
movsb
insb
mov
sbb
xchg
arpl
mov
push
scas
sti
mov
popf
push
lds
jg
incl
arpl
pop
in
push
or
roll
jg
lock
call
pop
inc
test
push
and
test
fmul
mov
mov
ret
jge
icebp
in
push
mov
xchg
pusha
mov
jmp
inc
ficoms
add
aam
or
xchg
push
insb
ja
xchg
cmp
popa
inc
mov
and
pop
xlat
mov
or
in
cmp
idivl
cmpb
or
pop
mov
pop
incl
loop
test
pusha
dec
jmp
sbb
or
and
mov
sub
call
ret
aas
test
mov
fiadds
jmp
xor
filds
mov
or
aaa
sti
cwtl
push
clc
scas
jne
inc
sbb
pushl
push
outsl
mov
subl
das
and
dec
dec
lods
repnz
in
cmpsl
cli
push
sti
cmp
mov
sub
mov
aad
push
xchg
mov
hlt
ljmp
jecxz
scas
mov
jbe
test
xchg
push
stos
adc
sbb
sbbl
inc
sub
mov
ss
cltd
add
cmpsl
push
add
mov
pushl
sahf
out
cli
jno
imul
add
andb
mov
adc
jg
pushl
push
inc
jge
int
ljmp
sbb
or
and
scas
xchg
stos
and
std
lcall
test
jle
xor
jecxz
pop
mov
sahf
int3
cld
stos
add
call
out
lahf
lret
or
ret
call
cmpsb
scas
jmp
jmp
and
xor
fdiv
call
icebp
mov
ret
data16
out
lods
mov
pop
jg
sbb
lcall
xchg
mov
aas
daa
test
mov
in
ljmp
xchg
dec
add
mov
cwtl
adc
adc
call
dec
add
call
loopne
sub
jg
shlb
xlat
fs
loop
cmp
leave
inc
pop
xchg
jmp
addr16
sbb
xor
push
in
fistpl
in
pop
cld
jg
iret
mov
mov
in
in
bound
out
xor
decl
das
jecxz
or
mov
adc
jb
add
sub
je
loop
ljmp
and
cltd
push
cmpsb
js
shll
sbb
xchg
push
fcomps
out
ljmp
and
ja
add
fcoms
jne
adcl
jp
mov
dec
loopne
fildll
int3
xchg
jo
adc
mov
gs
adc
ss
mov
ljmp
cmp
xchg
into
in
or
and
call
ss
mov
cli
call
and
roll
mov
jmp
gs
and
mov
loopne
mov
ljmp
pop
fstpl
xchg
xor
lcall
addr16
pushl
pop
cli
mov
fildl
test
ljmp
fs
in
mov
fucom
mov
stc
dec
out
out
xor
lds
test
cmp
repnz
xchg
pushl
cld
ljmp
pop
add
cs
subb
insb
jns
cmpsb
lret
and
dec
jle
fcomip
pushl
into
sub
mov
stc
fstpl
mov
push
lcall
inc
push
cmp
ret
loop
roll
in
xor
in
add
gs
jp
loope
lock
cld
leave
lock
or
mov
movsb
in
insl
xlat
push
repz
and
hlt
mov
or
int
jl
sub
pop
xchg
out
test
incl
push
mov
test
mov
and
jmp
pop
cmp
je
ret
fcomip
pushl
inc
or
cld
xchg
jle
sub
mov
ret
mov
jg
pop
sub
jg
scas
push
sbb
dec
repz
popf
push
bound
add
ljmp
and
aaa
int
shll
push
pop
cld
mov
mov
decl
stc
xor
sbb
jp
pushf
call
dec
jmp
jae
in
sarb
bound
aaa
stos
test
in
push
mov
loope
mov
xor
and
dec
bnd
lahf
pop
out
add
test
push
pop
adc
stc
lret
outsl
cmpsb
adc
and
fdivrl
loope
inc
call
dec
cmp
jmp
lahf
fstpt
jge
aas
mov
into
dec
dec
pop
sub
push
movsb
pusha
push
and
call
inc
push
sarl
mov
jle
pop
push
jbe
push
icebp
js
pop
aad
das
cli
incl
mov
loop
jns
jno
out
push
outsb
jno
mov
or
das
clc
das
out
inc
jmp
enter
aas
adc
jl
cmp
inc
push
xchg
daa
in
mov
sbb
test
dec
pop
cmpsb
push
cs
nop
push
cli
mov
incl
sub
in
jle
dec
inc
sbb
insb
cmpsl
dec
leave
push
sbb
cwtl
add
imul
or
jne
ret
and
or
call
xchg
adc
push
jmp
xchg
inc
push
xor
mov
shll
and
jmp
cmp
lahf
mov
pushf
jg
mulb
cmp
mov
subl
sub
push
cmp
cmp
cmp
mov
mov
ret
mov
cmp
sub
adc
daa
cmpb
decl
cmp
lcall
adc
adc
stos
xchg
push
push
insl
cli
js
out
cli
lcall
std
lock
aam
and
lahf
loop
adc
sub
insb
pop
push
decl
mov
mov
mov
pop
lds
mov
ljmp
mov
lahf
adc
aaa
mov
adc
jge
ljmp
ljmp
and
dec
test
in
dec
adc
pop
mov
xchg
lcall
cld
std
push
das
adc
add
pop
or
imul
mov
inc
xlat
push
scas
test
inc
inc
lret
mov
cmp
mov
nop
sahf
aas
lea
loope
andb
push
sub
in
mov
jecxz
or
aad
insl
xchg
rorl
pop
aad
dec
cld
sar
jmp
cmp
inc
out
sbb
sarl
pop
sbb
cmp
shrl
jg
push
inc
addl
jl
in
pusha
out
cli
ss
sub
push
dec
mov
std
jg
mov
decl
jg
out
shr
mov
pushf
mov
ss
lret
mov
loopne
fisubl
sbb
mov
mov
loop
int3
ljmp
dec
inc
shr
pop
ljmp
jle
pop
mov
cltd
aad
or
ljmp
call
push
pop
xchg
fcmovb
repz
test
mov
pop
popf
test
mov
pop
push
dec
leave
cmp
ljmp
dec
and
or
xlat
mov
mov
adc
push
enter
push
sar
mov
or
sbb
lods
addr16
scas
pop
adc
orl
push
mov
xlat
enter
jp
fnstsw
or
rorl
adcl
incl
jb
inc
scas
aaa
cwtl
jle
sbb
pusha
movsb
shl
pop
mov
and
jge
and
lds
ljmp
sbbb
xlat
adc
push
cld
loopne
add
call
push
aad
movsl
push
mov
jmp
repz
sti
adc
decl
dec
jnp
sub
sbb
out
dec
das
xchg
or
push
std
fsubr
in
decl
sahf
pop
dec
aam
xchg
dec
xchg
sbb
push
int3
inc
inc
stos
dec
add
test
icebp
pop
gs
popa
jp
das
and
pusha
outsl
pop
adc
adc
movsl
mov
xchg
and
ret
or
imul
xor
push
stos
out
add
mov
inc
sti
decl
pushl
data16
xor
cmp
ss
inc
loopne
and
add
div
pushl
rcr
out
mov
inc
cmpsb
in
loopne
cmp
adc
cmpsb
xchg
incl
cld
es
lea
mov
xchg
arpl
and
inc
jne
jl
or
pusha
sub
cld
stos
jmp
pop
aas
out
inc
lods
xor
in
loopne
add
pushf
push
push
test
mov
sub
aaa
add
mov
cwtl
loope
sahf
add
mov
rcrl
fsub
adc
or
dec
jecxz
out
or
push
cs
pushl
cmp
dec
lret
mov
lock
mov
add
addr16
add
incl
xchg
in
inc
gs
stc
mov
inc
inc
fistpl
dec
popf
ss
cld
incl
int3
es
or
in
pop
loope
adc
and
jg
add
dec
jg
out
fldcw
scas
les
cmp
enter
jmp
lret
push
push
xchg
dec
out
scas
adc
mov
xchg
inc
lods
sbb
pop
js
mov
sbb
add
jle
test
test
int3
pop
in
test
jne
rcll
call
dec
sub
mov
push
ficoml
jns
jmp
jge
aas
out
jmp
jmp
xchg
test
xchg
movsb
fadds
dec
test
loop
jno
jg
loopne
mov
xchg
ds
mov
daa
sub
inc
mov
mov
cmp
mov
inc
test
nop
out
xor
les
nop
fcos
ljmp
jne
mov
int
sbb
mov
pop
and
mov
dec
sub
pop
mov
mov
cmp
cmp
fcmovnbe
fsubl
cmp
push
jno
or
cmp
mov
int3
fwait
inc
call
es
mov
or
ret
mov
mov
inc
rorl
ret
js
cmp
fs
inc
push
add
adc
push
jne
sbb
idivl
ret
add
std
out
adc
mov
inc
cmpsl
push
add
jb
insl
aad
jl
jl
test
mov
call
stos
xchg
test
scas
xor
lret
js
je
arpl
and
ljmp
clc
push
lcall
fwait
xor
jmp
bound
addr16
push
and
push
adc
les
adc
sbbl
jmp
dec
ret
pop
int
dec
adc
fcoms
cmc
fnstcw
daa
push
fmul
push
sub
or
fwait
js
call
dec
ss
push
sub
and
xchg
inc
pusha
and
push
xor
mov
ljmp
out
add
inc
jo
ja
enter
mov
lcall
ja
jnp
mov
shrl
js
sahf
int3
lahf
inc
pop
ss
xchg
adc
sub
inc
jmp
sub
push
mov
loop
add
movsl
push
in
mov
pop
jle
loope
mov
ljmp
jo
mov
mov
mov
aam
cmc
cmp
lcall
lret
mov
fsubs
inc
adc
mov
stos
cmp
and
and
cltd
inc
aad
call
loopne
inc
sarb
repz
and
ljmp
jp
ss
lcall
dec
mov
incl
icebp
data16
add
sub
loope
cmp
imul
lods
decl
push
add
scas
mov
sar
pop
lret
pusha
mov
and
leave
or
negl
ljmp
sub
in
pop
push
mov
xor
andl
cld
test
mov
pushl
and
mov
int
and
mov
int
and
call
jb
test
int
pop
push
lret
xchg
aam
je
xorb
out
push
inc
loop
add
cpuid
adc
mov
push
jnp
sbb
js
adc
sarb
clc
push
cmpsb
loope
decl
lock
mov
nop
in
fidivs
mov
ljmp
jl
rol
insb
jmp
mov
imul
sar
rcrl
sbb
dec
test
ret
sar
xchg
mov
cmp
inc
mov
xchg
push
or
push
or
out
test
decl
insl
gs
pxor
inc
aam
rcrb
cmp
mov
in
cmc
sahf
imul
mov
loope
in
nopl
xlat
mov
pushl
pop
xchg
call
test
mov
push
cmc
xor
cmpsb
adc
decl
subb
les
pushf
jnp
inc
dec
lret
cmpsl
add
lea
push
jno
cmp
mov
mov
sbb
mov
sbb
add
pop
lods
lret
mov
add
jl
push
and
movsl
das
sub
loop
scas
mov
jnp
cltd
popa
pop
incl
push
dec
jmp
adc
xchg
add
xlat
inc
fsubrl
mov
inc
icebp
push
sbb
dec
fisubrs
fnstcw
ret
xchg
pop
pop
adc
ja
cli
jnp
adc
movsb
mov
leave
call
jno
cmp
cmp
lock
imull
dec
lret
pop
cmp
lcall
mov
mov
and
mov
dec
inc
rcr
cltd
in
in
pop
sbb
leave
xor
jne
popf
sarb
mov
pop
adcl
jecxz
fdiv
inc
or
mov
mov
or
cmc
or
movsb
outsl
and
popa
fs
popl
decl
push
push
and
xchg
sub
popf
push
mov
push
into
test
jg
fs
push
pop
fs
aaa
dec
call
aas
repnz
mov
jg
test
mov
js
xor
loope
gs
adc
fisubrl
push
jl
stos
pop
fcomip
jmp
sub
sbb
insl
ja
rep
mov
dec
les
popf
lcall
pusha
or
sub
je,pt
and
incb
sub
mov
scas
adcl
push
ss
fwait
dec
cltd
adc
popf
cmp
xchg
arpl
fisttpll
adc
cmp
in
adc
lahf
imul
mov
inc
fmulp
nop
mov
xchg
and
movsl
mov
stos
xchg
sar
call
mov
sub
sarl
pusha
and
xor
jg
jmp
jne
xchg
jae
rcrb
adc
and
inc
jne
outsl
stos
dec
push
xor
decl
jnp
mov
sahf
mov
dec
mov
cmpsl
jl
mov
or
push
dec
popf
mov
lea
inc
mov
pop
aas
popa
cmp
mov
xor
flds
dec
movsb
add
mov
enter
sbb
insl
add
loopne
push
inc
push
shl
or
orl
sub
mov
sbb
mov
sub
cli
pop
call
sbb
fistpll
push
xchg
inc
mov
lcall
mov
mov
cmp
add
repnz
ss
jmp
int
aam
xchg
mov
je
pop
adc
lret
cli
pop
mov
pop
pop
pushl
mov
mov
adc
sbbb
outsb
repz
mov
test
lock
std
test
pmaxsw
lret
mov
mov
notb
jmp
fs
rcll
jo
into
mov
icebp
fstl
inc
das
imul
pushl
icebp
push
cmp
and
inc
orl
fucom
and
les
inc
push
cmp
xchg
inc
in
adc
adc
push
and
out
loop
shl
sti
insb
movsl
daa
mov
call
out
into
test
enter
sahf
rolb
push
sub
scas
jnp
cmp
xor
lcall
pop
jb
jmp
aaa
cltd
push
adc
scas
adcb
xor
sbb
in
icebp
int
push
sbb
and
rol
jmp
loope
xor
movsl
inc
in
cmp
mov
mov
push
nop
loope
mov
inc
sub
decl
xchg
or
int
sbb
iret
dec
aad
mov
mov
loopne
pop
or
xor
xor
cld
mov
nop
sub
in
fs
pop
and
outsl
cli
repz
js
pusha
dec
repz
sub
xchg
mov
jmp
jmp
push
andb
nop
shl
adc
addl
jo
jnp
call
js
movsl
dec
pushf
jb
inc
xchg
mov
pop
dec
rclb
mov
push
push
jne
cmc
call
fdivrs
pop
add
mov
shl
fs
je
lcall
pop
aaa
pop
xchg
mov
lret
adc
cmp
add
in
xor
ja
loope
fs
sbb
popa
call
call
sbb
test
stc
lret
inc
scas
sbb
lds
cld
mov
cli
sub
popa
jbe
mov
pop
stos
pop
mov
mov
icebp
pushl
adc
xchg
and
scas
cmp
ret
out
lret
dec
and
das
sub
scas
inc
and
inc
jns
jmp
call
std
testb
ss
cmovp
xor
push
popa
jle
rcl
mov
jae
pop
inc
js
int3
push
scas
jmp
xor
inc
pushf
xor
shll
lcall
or
pop
adc
sarl
jg
in
sbb
mov
call
sub
cmp
sub
call
xchg
cs
test
mov
mov
mov
cmp
sub
aas
cld
clc
addl
orb
outsl
and
filds
scas
jbe
cmp
inc
xor
sub
rcr
sub
sar
mov
cltd
aaa
clc
cs
rcll
es
mov
lock
es
push
and
inc
mov
cmp
ficomps
xchg
xor
call
insl
popa
inc
add
jnp
adc
icebp
mov
mov
out
sbb
daa
test
ljmp
xor
popa
inc
stos
cmp
push
adc
mov
lock
adc
cltd
mov
pop
dec
xor
push
xlat
inc
mov
in
out
push
ret
jle
push
jmp
push
jns
jnp
and
cmp
aad
sbb
ficompl
mov
or
in
ds
jmp
jl
dec
sar
call
shlb
sbb
add
enter
push
stc
enter
xor
mov
mov
clc
inc
cli
cwtl
stc
pop
push
jecxz
pop
lret
jno
subb
sub
sbb
or
lcall
das
enter
adc
xchg
jmp
ljmp
and
sub
scas
je
or
fs
lods
mov
pop
dec
push
call
lcall
in
subl
or
pop
test
cmp
pop
mov
inc
pop
cmp
fcomip
shrl
xchg
cli
xchg
xor
ret
call
imul
push
add
lods
xor
fcomip
lcall
repz
ret
dec
ficompl
gs
push
gs
decl
push
enter
stos
aas
mov
or
cmp
cld
movsb
aad
jl
xchg
push
into
cmp
push
pusha
cmpsl
fmul
lcall
sbb
fcmovb
stc
testl
adc
bound
roll
pop
mov
cmc
cmp
data16
push
push
out
int
push
and
sub
repz
popa
stos
std
fldenvs
mov
decl
iretw
inc
loope
lock
jmp
pop
dec
fsubrl
addr16
jp
fsubrp
repz
push
jmp
xchg
cli
mov
xchg
push
pushl
clc
adc
pop
cli
in
loopne
add
mov
stos
pop
sbbb
incl
ss
loopne
je
loope
push
jns
je
out
bound
mov
subb
sub
incl
int
into
sub
xchg
xchg
or
dec
adc
and
adc
fstpt
adcl
add
mov
int
in
pop
into
and
jns
cli
movsb
jnp
outsl
lds
pushl
dec
lea
nopl
ss
clc
inc
les
pop
push
lret
mov
hlt
test
icebp
inc
adc
fstl
stos
shlb
decb
inc
fmull
pop
xchg
and
jne
hlt
jnp
pushl
push
jg
out
mov
pusha
adc
mov
mov
or
pop
addr16
call
lods
jp
in
cmpsl
mov
shll
mov
inc
pop
push
jnp
ret
leave
in
lret
dec
push
mov
pop
sbb
sbb
inc
xchg
pop
jg
lock
out
cs
jnp
jl
pop
in
mov
mov
popf
cli
loop
inc
filds
fmuls
and
jp
fimull
push
in
incl
fs
call
inc
push
mov
mov
cmp
xor
inc
xchg
sub
jbe
stos
xchg
std
adc
push
pop
faddl
inc
cs
push
not
adc
pop
sub
mov
cmp
orb
mov
lds
scas
in
or
dec
inc
stc
ret
inc
andl
sub
pusha
das
movsb
mov
jge
shl
mov
repz
xor
adcb
or
and
mov
pop
cmpsl
mov
pushl
hlt
int
mov
add
or
jo
in
mov
outsb
pusha
inc
lret
mov
cmp
jp
xchg
sub
pop
xor
data16
fadds
into
popf
int3
sahf
aaa
int3
xorl
decl
leave
inc
add
jns
in
sub
andb
outsb
add
pushl
leave
push
mov
mov
pop
into
pop
xor
into
inc
mov
mov
lock
sti
fldt
aas
incl
cmpsb
xor
jnp
data16
loopne
mov
push
xor
dec
shrl
xchg
jmp
je
imul
and
mov
push
test
jg
popa
push
aas
divb
cmpsl
or
dec
call
ss
mov
in
add
add
pop
into
jecxz
push
sub
fs
pop
push
jge
mov
fs
xor
aaa
push
dec
hlt
imull
sbb
decl
scas
mov
in
mov
lcall
xlat
pop
adc
sti
sub
jne
out
loopne
sbbb
jg
sub
gs
cmp
xchg
pop
jmp
inc
and
sbb
aad
dec
test
outsl
xchg
mov
jle
or
push
incl
cmp
jne
xor
fadd
flds
fisubrs
sub
loop
orl
shlb
aaa
lcall
repnz
loopne
ret
rcl
or
push
es
push
into
leave
cli
add
mov
bound
data16
sub
aaa
add
rcrl
add
and
in
mov
adc
stos
add
ret
out
mov
sbb
jmp
sbb
and
repnz
inc
push
jo
sub
mov
mov
sbb
lea
mov
push
jb
mov
out
push
cmpl
int
pop
hlt
sti
inc
cmp
test
testb
insb
jl
pop
test
xor
decl
mov
add
stos
push
mov
push
cmc
dec
mov
pop
jecxz
lcall
mov
mov
les
mov
dec
jp
loopne
pusha
cld
incl
stos
push
xchg
rdpmc
dec
mov
push
push
cs
xor
je
xchg
cmp
sbb
jmp
and
jno
add
mov
nop
jmp
insl
push
mov
mov
push
or
sar
test
xchg
daa
mov
lcall
add
cmp
jg
sub
mov
mov
movsl
shlb
das
fwait
cmpsl
dec
xchg
test
inc
fidivrs
xchg
sar
in
cmp
mov
cwtl
call
call
xchg
outsb
jae
gs
push
cmp
xchg
inc
mov
stos
out
clc
lret
mov
popl
icebp
enter
frstpm(287
test
push
sbb
jecxz
shll
lcall
ljmp
adc
cmp
sub
aad
dec
daa
ret
sub
lods
aaa
mov
push
lret
push
pop
fldt
rcrb
les
pop
cli
ljmp
jge
mov
ljmp
xchg
xor
dec
sub
mov
icebp
xchg
in
repz
cmp
imul
push
lcall
dec
gs
sub
sub
das
ret
decl
or
stos
int3
inc
sub
sub
out
cmp
xor
mov
adc
outsl
inc
sbb
outsb
inc
mov
aas
je
lsl
add
mov
push
fisubrs
shlb
push
test
data16
xor
inc
sahf
pop
xchg
mov
push
pop
cmp
rol
pop
sbb
call
cmp
std
lds
mov
sbb
jge
push
mov
fldl
mull
add
or
js
mov
repnz
lcall
sarb
int3
adc
adc
xor
loopne
clc
lret
jo
mov
mov
push
mov
jne
lahf
stos
outsb
or
mov
cmpsl
cmp
cmc
das
inc
xchg
mov
popf
test
mov
int3
xlat
inc
xchg
adc
decl
push
aam
push
es
adc
cmp
popf
fildl
xchg
jo
add
jb
adc
adc
loopne
in
psrad
or
loop
int
std
decl
pusha
sbbb
dec
xchg
cli
sbbb
mov
mov
outsb
dec
out
mov
loop
mov
add
pop
mov
xor
mov
cli
mov
mov
arpl
sub
and
dec
xchg
cmp
aad
mov
decl
jg
push
pusha
lds
fstps
mov
dec
inc
adc
movsb
sahf
or
cmp
jecxz
dec
scas
cmp
dec
dec
adc
xor
scas
xor
mov
insb
pushl
std
mov
push
inc
mov
aas
fistpll
aad
jmp
add
push
jno
push
xchg
sti
mov
jno
ret
lods
inc
mov
int
jno
fsubl
sbb
pushl
push
cld
scas
push
cmc
lea
push
ss
dec
push
add
lcall
shrl
add
xchg
aam
pop
add
test
lcall
aas
fs
ret
in
mov
xorl
into
pop
cs
pop
aam
mov
mov
mov
fwait
or
pop
stc
data16
fsubrs
jl
inc
xchg
frstor
or
jg
add
arpl
xchg
push
stos
xor
pop
ljmp
pop
sahf
outsl
popf
push
jnp
add
movsl
imul
imul
lcall
inc
repz
jge
je
in
cs
lock
pop
call
dec
lods
sub
leave
lcall
sub
aaa
push
movsb
sub
dec
fidivs
lea
or
xor
mov
cmp
pop
push
pop
sbb
outsb
ja
in
divl
mov
fnstenv
std
incl
in
pop
inc
jbe
mov
je
pop
aaa
dec
fsubl
and
outsl
cli
inc
fs
and
and
push
cltd
fcmovu
lods
lret
pop
test
nop
pop
jmp
and
sbb
test
sahf
and
stos
in
push
lea
clc
xchg
scas
insl
loopne
mov
fdivr
lcall
mov
aas
scas
cmpb
push
dec
pop
mov
stos
mov
xchg
call
fildl
bound
mov
shrl
mov
mov
les
mov
push
test
stos
stos
inc
insb
shl
and
push
pop
jae
xchg
adc
fcomip
sub
jecxz
mov
and
dec
mov
dec
inc
sahf
dec
dec
jns
popf
dec
jb
ja
or
cmp
inc
in
aam
xor
mov
mov
mov
cvtps2pd
dec
clc
sub
shrb
push
dec
xchg
fwait
movsb
fs
cmpsb
decl
sbb
dec
jl
nop
shl
sub
xchg
jl
lods
movsl
and
jbe
add
sar
aaa
cltd
clc
adc
js
dec
test
inc
dec
stc
es
aam
imul
jmp
push
sub
outsl
xchg
mov
addl
adc
pop
lock
jecxz
push
mov
mov
pushf
push
fisubrl
adc
jbe
sbb
and
mov
push
addb
dec
mov
idivb
in
sbb
out
clc
ret
add
int
xchg
push
lods
das
daa
xchg
aam
xchg
mov
nop
xchg
aaa
gs
jmp
mov
or
lcall
dec
lock
in
lret
mov
stos
mov
and
adc
sub
add
out
lahf
mov
adc
push
cli
aaa
ret
daa
rolb
jmp
sub
je
stos
jns
dec
nop
jno
lods
add
mov
mov
scas
fsubrs
push
jmp
xchg
jns
cwtl
and
lock
sbb
mov
mov
xor
dec
and
xchg
imul
jle
lret
movsb
sub
or
mov
jg
addl
and
sar
push
adc
cmpsl
add
lahf
cmp
mov
aaa
mov
popa
fildll
add
test
mov
jo
clc
mov
loopne
shlb
incl
call
jge
inc
sbb
jp
push
rclb
mov
aaa
jg
rclb
stos
cmp
je
insl
mov
lds
imul
push
stc
ljmp
sbb
push
mov
movsl
imul
adc
dec
mov
js
jl
popf
sub
das
cmpsl
pop
in
jmp
cmp
xchg
int
movsb
aaa
dec
iret
fimull
adc
inc
sbb
mov
mov
add
incl
dec
cltd
insl
mov
jmp
xchg
dec
pop
insl
xor
mov
rcll
pop
adc
fwait
add
push
imul
sti
addl
jnp
pusha
mov
xchg
ljmp
inc
negl
jne
push
mov
mov
jp
inc
adc
mov
jg
xor
sbb
pop
insb
mov
dec
xchg
pop
sub
xchg
inc
cltd
jg
mov
pop
nop
sti
fcomip
decl
cwtl
cltd
xchg
ss
pop
in
mov
add
push
adc
push
sbb
mov
jnp
sub
loop
test
inc
rcrb
lret
sub
jmp
repz
push
adc
vmwrite
or
push
dec
add
fdivs
xchg
scas
cmc
inc
dec
jmp
pushf
repz
mov
xorl
ds
std
adc
mov
inc
shll
mov
clc
inc
sbb
bound
lock
dec
xorl
lahf
mov
xchg
pop
pushl
cld
outsl
ljmp
and
insl
xchg
pusha
xor
pop
fnstenv
mov
pop
dec
ss
sub
into
dec
xchg
lods
sub
rcll
roll
pop
cli
call
pop
into
add
stos
in
xchg
mov
hlt
jae
xor
test
jl
mov
sub
ljmp
sub
mov
pusha
roll
jg
cmp
ret
ds
add
mov
lcall
into
fdivs
iret
inc
fistl
lea
push
shll
imul
add
pop
dec
lea
scas
jmp
mov
pop
sbb
fcmovbe
jb
or
fwait
lret
mov
nop
repz
dec
shll
lcall
icebp
jp
pop
aad
mov
dec
mov
adc
jbe
wrmsr
out
insb
insb
sar
jg
and
pusha
es
gs
imul
leave
mov
push
cld
jmp
sbb
xchg
fdivl
inc
push
xor
xlat
lret
inc
add
cmpsb
add
push
shlb
push
jo
ret
mov
jp
jge
inc
fstpt
xchg
cli
and
insb
cld
jmp
inc
ret
xchg
add
mov
cmc
xor
add
orb
inc
cmc
ret
scas
cli
ljmp
jbe
fsubr
out
mov
outsl
push
or
pushl
lcall
sahf
dec
mov
lret
pop
add
add
ljmp
sub
or
sbb
enter
xchg
addb
stc
decl
mov
adc
rolb
jno
sub
cmpsl
int
xor
sub
ljmp
cld
hlt
xlat
mov
pop
mov
insb
pop
lods
push
stc
add
add
das
adc
sub
dec
pop
lea
test
mov
mov
and
ficoms
fscale
and
jbe
pop
mov
jns
in
jb
pop
sbb
mov
jge
decl
iret
outsl
fildl
jo
inc
aas
jne
xchg
push
push
rcr
fldt
movsb
syscall
fs
mov
call
out
mov
jge
xor
cwtl
mov
pushl
jno
scas
adc
cmp
and
push
or
nop
mov
jno
test
ss
ljmp
xchg
cwtl
or
jb
sub
adc
jecxz
sub
call
lcall
mov
cld
shl
ljmp
sub
shrb
decl
add
mov
in
lcall
mov
mov
in
fistpll
sbb
addr16
mov
xchg
outsb
cmp
loope
jnp
cmpsl
rorl
pop
leave
pushf
dec
addr16
dec
add
or
sbb
sub
fxch
cmpsb
jg
pushl
xor
jge
sub
lret
or
outsl
rorl
sar
or
push
movsl
pop
lcall
or
xlat
mov
jmp
and
mov
fs
into
das
ljmp
jle
sub
lds
push
mov
ret
jmp
dec
and
mov
inc
xorl
add
clc
test
ja
lds
out
les
mov
call
movsl
mov
scas
mov
and
dec
mov
push
inc
aam
pop
insb
mov
pushl
xorl
sub
and
iret
and
clc
in
sbb
sbb
xor
mov
mov
rorb
rclb
cmp
mov
and
mov
ljmp
ficompl
and
addr16
imul
adc
inc
lds
cld
lcall
shrl
hlt
hlt
fs
shl
and
mov
in
mov
leave
push
xor
mov
sub
sub
mov
rolb
and
sbb
push
and
iret
pop
xchg
and
nop
push
or
sub
lods
mov
xchg
mov
leavew
xor
ds
cltd
xchg
mov
pushl
xchg
xor
js,pn
sub
xor
sbb
add
lahf
in
loope
aam
cmp
xorb
sti
mov
in
push
sti
in
adc
jmp
mov
mov
or
fstpl
xchg
sahf
pop
outsl
es
incl
ss
push
cli
mov
adc
jmp
pop
cmp
ljmp
loop
addr16
call
xchg
roll
lcall
sbb
into
ljmp
clc
outsl
addr16
pop
lock
xchg
pop
pop
mov
js
or
in
daa
mov
sbb
pushl
loope
sti
sbbl
pop
xchg
push
inc
sbb
cmpsb
jl
xchg
cmp
pop
and
sbb
ja
inc
push
pusha
xor
and
inc
fmull
jmp
into
sub
add
or
out
sbb
cmp
fildll
in
ljmp
mov
cmpsl
mov
aad
xchg
dec
xor
cmp
lret
movsl
inc
jmp
shrl
jns
and
pushf
mov
cli
jg
pop
add
lahf
outsl
das
jne
lcall
inc
dec
stc
push
adc
aaa
adc
xchg
jo
lods
jo
popf
mov
movb
jge
lcall
daa
or
bound
adc
pop
xchg
and
and
mov
jecxz
fidivs
fsub
insb
or
mov
sub
jl
test
sbb
std
push
adc
inc
push
in
paddq
movsl
fidivl
lret
fldenv
ljmp
pop
sub
js
fistpl
xchg
add
ret
js
inc
fimuls
ss
rorb
xchg
jbe
mov
in
xor
int
xor
jnp
loope
xchg
dec
cmpsb
push
in
jbe
int
ds
mov
std
call
iret
fsubr
rcrb
enter
and
in
mov
and
add
mov
out
sbb
sbb
add
lods
mov
aas
mov
decl
popl
xor
ss
mov
test
or
sub
push
in
jne
jmp
stos
mov
xchg
insb
xchg
fwait
and
ss
lods
jbe
lods
lcall
incl
mov
mov
adc
ds
in
adc
stos
movsl
dec
out
sub
add
rcrb
mov
xor
lcall
dec
fimuls
push
xorb
xor
imul
sub
ljmp
sbb
push
repnz
jg
xor
gs
pop
adcl
decl
xor
xorl
or
push
test
jp
addr16
sub
dec
test
xchg
clc
out
incl
test
cld
movsb
mov
jne
lahf
cmp
add
and
es
ljmp
dec
shr
imul
xor
call
jns
bound
mov
and
mov
mulb
mov
push
mov
in
cmc
lea
sub
popf
jae
or
iret
mov
in
or
scas
sub
mov
xor
imul
adc
test
mov
adc
dec
jecxz
incl
pop
leave
push
pop
push
mov
xchg
aaa
pop
mov
decl
test
push
pop
test
pop
sbb
mov
rcr
sar
cmp
aaa
dec
ss
inc
ror
aam
pop
or
lock
orb
lahf
stos
dec
sbb
ljmp
ss
mov
push
inc
mov
inc
add
shlb
fbld
insb
xchg
lcall
testl
mov
iret
mov
ret
fisttpll
daa
jl
inc
incl
adc
sbb
movsl
insb
fstps
dec
xchg
pop
rcrl
loop
fcoml
sbb
roll
decl
cmp
xor
testl
mov
dec
ret
mov
xor
incl
decb
xor
lahf
es
lret
imul
push
jl
mov
sub
fisubrs
push
jmp
jmp
popa
push
add
ljmp
aad
cmp
sahf
addr16
mov
mov
dec
popf
push
scas
movsl
xor
mov
mov
js
or
push
jb
cwtl
les
daa
push
inc
and
mov
decl
xchg
lret
stos
mov
rolb
andb
jne
scas
inc
pop
arpl
ljmp
jns
rclb
out
mov
push
pop
test
movsl
jae
in
adc
sub
xor
call
aad
xchg
lea
imul
outsb
sub
cmc
jb
fsts
ljmp
and
and
jbe
scas
pop
mov
je
jmp
test
mov
dec
jg
jns
scas
pop
fs
mov
pop
out
xchg
sbb
adc
jmp
xchg
subl
inc
add
das
test
mov
pushf
cltd
ret
xchg
cmpsl
lds
data16
inc
adc
jmp
push
cmp
pop
inc
push
aas
push
push
pop
sub
inc
fxch
mov
inc
inc
out
nop
bound
mov
ljmp
aas
lcall
icebp
in
mov
mov
movsl
pop
lock
fdivrs
pushl
aaa
cmp
or
mov
movsl
or
push
mov
test
xchg
lock
push
jns
or
lret
xor
call
call
sbb
test
sbb
or
pushl
cld
das
mov
cmp
sbb
mov
add
ljmp
clc
pusha
in
in
enter
addl
jle
pushl
add
push
mov
test
add
pushl
and
push
idivb
and
xchg
ja
aad
cwtl
mov
gs
rolb
mov
mov
xor
mov
jb
jl
adc
mov
cmc
fwait
jmp
sub
inc
fsts
pop
mov
dec
out
mov
pop
dec
xor
movsb
lock
std
dec
and
call
and
stos
pop
ret
mov
push
mov
sahf
adc
cmc
jg
movsl
inc
sbb
mov
fildll
cmp
ret
jo
lea
sub
fbld
int3
fstpl
push
repnz
je
test
or
outsl
fbld
xchg
aam
cmp
jmp
cmp
push
jle,pn
jnp
inc
jo
fwait
inc
cmc
add
ret
and
lret
push
lods
mov
fwait
mov
clc
xchg
cmp
ret
cs
mov
sub
mov
mov
das
push
mov
push
jmp
pop
fwait
or
mov
decl
shrb
mov
jle
loopne
dec
ljmp
outsl
dec
loop
lock
sti
mov
cmp
call
inc
inc
cltd
jmp
and
sub
mov
idiv
jmp
ss
push
dec
and
data16
scas
xchg
xor
in
daa
add
jmp
pushl
push
mov
pop
sub
cld
adc
inc
outsb
ds
sbb
mov
loop
cmp
mov
call
push
sbb
mov
mov
adc
sti
fsubr
int3
lahf
ret
mov
incl
sub
cmp
sbb
daa
mov
sub
stos
push
incl
sub
iret
fisubs
jle
cmpsb
jecxz
test
ds
out
clc
push
adc
pop
dec
adc
inc
add
push
mov
push
pop
pop
mov
in
bound
sub
cmpsb
mov
ret
mov
mov
pop
ja
lcall
clc
loopne
scas
pop
sub
jno
mov
dec
mov
aad
mov
mov
fisubrl
outsl
call
in
jbe
xchg
bound
pushf
js
inc
or
fadd
ljmp
js
and
cmp
or
push
mov
cmp
cmpl
or
pushl
inc
lcall
mov
inc
add
dec
sub
pop
test
mov
and
je
incl
stos
rorb
pop
ja
cld
mov
pop
adc
sub
in
loopne
scas
aas
repnz
fldcw
lcall
cwtl
jns
andl
dec
call
pushl
jle
jns
pop
jmp
lods
mulb
into
loopne
in
fdivrl
cmp
inc
jae
push
xor
decl
cmp
xchg
pop
sub
subl
push
push
dec
mov
fcomps
inc
in
imul
mov
dec
add
ret
in
out
test
mov
stc
stos
inc
ja
xlat
scas
sbb
add
mov
cmp
dec
sbb
push
scas
jl
cmp
mov
pop
xor
cmp
pushl
push
mov
mov
hlt
pop
fsts
aaa
pop
mov
pusha
sub
xchg
sub
outsl
jle
loopne
mov
pop
xchg
aaa
xchg
cmp
repz
mov
movsl
push
stc
mov
pop
or
xor
arpl
mov
and
dec
mov
or
inc
fwait
and
mov
jae
inc
ljmp
shl
sbb
push
sbb
xor
js
sbb
mov
popa
mov
test
rcrb
jb
mov
dec
sbbb
in
xor
dec
xlat
pop
loopne
xor
fadd
push
lahf
enter
out
lcall
jg
sub
pop
xchg
mov
out
xor
mov
cmp
mov
mov
sbb
pushl
loop
mov
fidivl
mov
dec
push
inc
or
cmpsl
dec
push
dec
outsl
and
incl
jg
and
dec
roll
icebp
loopne
insl
out
stos
push
inc
sti
and
lods
xor
lea
dec
mov
and
jecxz
mov
test
push
xchg
xchg
fisttps
nop
iret
dec
test
mov
pushl
fcompl
addb
data16
xchg
add
repnz
loope
dec
sub
inc
mov
xor
in
cmp
adc
jmp
cld
rcl
mov
adc
repnz
sub
mov
jo
bnd
sbb
bound
incl
popa
mov
popf
inc
xchg
push
mov
stc
bnd
pop
das
idivb
add
fidivs
and
mov
sti
lret
jae
cmpsb
pushf
fcomip
lcall
outsb
add
xchg
ljmp
cmp
xchg
mov
andb
outsl
loopne
adc
arpl
pusha
jge
mov
sbb
mul
mov
enter
pushl
lahf
push
movsl
mov
pop
in
out
jle
fs
mov
mov
cmp
or
jno
mov
sahf
clc
scas
out
cmpsl
imul
out
scas
mov
addr16
sbb
lcall
lret
mov
jno
lret
or
inc
ret
out
iret
pop
dec
mov
insb
mov
ljmp
les
xchg
jecxz
dec
jl
test
ret
fidivs
cmpsb
fimull
xchg
imul
push
scas
sahf
mov
jns
stos
xor
stos
inc
sub
push
jmp
nop
jl
bound
ljmp
xor
sub
push
addl
xchg
out
mov
push
mov
jmp
sub
test
fstpt
inc
dec
aas
pop
mov
arpl
mov
imul
aam
cmpsb
cmc
hlt
and
jecxz
pop
jmp
cmp
jns
cmc
mov
and
jl
sub
in
and
mov
incl
push
mov
popa
addr16
mov
les
out
pushl
imul
test
sub
fimull
pop
frstor
adc
cmp
outsl
cli
cmp
insb
xchg
lock
int
sahf
in
mov
xchg
inc
pushl
repz
mov
loop
stc
dec
cmp
xor
inc
xor
push
mov
lcall
hlt
into
add
in
imul
xor
aad
or
in
inc
xchg
aam
or
jg
jmp
dec
inc
add
sbb
movsl
xchg
push
aas
push
jmp
cltd
xchg
jb
mov
pushl
push
pop
adc
lahf
and
add
fsubl
fnstsw
xchg
rolb
lods
lret
into
ljmp
sahf
int
inc
jb
mov
mov
arpl
inc
lds
mov
sar
sbb
ss
decl
pop
or
and
loope
sahf
movsl
mov
js
stos
sbbl
lretw
je
xlat
and
jle
movsb
mov
adc
stos
cmp
shl
cmp
xchg
jno
push
push
cmp
fistps
ljmp
ja
ds
ja
sub
les
es
std
xchg
sahf
jo
scas
loope
call
mov
lcall
sar
fisubs
cmp
dec
cwtl
add
xlat
mov
fimull
mov
test
rcr
mov
movsl
add
cli
fbld
xor
incl
cmp
mov
mov
cmp
int
mov
daa
xchg
mov
xchg
jecxz
mov
clc
incl
xor
jmp
and
cwtl
cmpsb
mov
jg
mov
mov
decl
call
icebp
dec
adcb
and
lds
mov
sbb
dec
xor
decl
cli
adc
push
adc
cmp
test
xor
add
fistl
sti
cli
stos
push
incl
add
popa
daa
fcom
mov
test
fsubrl
mov
fs
lahf
sub
pop
call
sbb
inc
mov
hlt
mov
fstps
mov
test
aas
mov
and
mov
popa
jg
rorb
mov
ljmp
xchg
jl
push
movsb
xchg
pop
pop
repz
incl
jbe
dec
int3
jge
in
sub
ret
add
jae
in
fdivrl
enter
decl
aas
cmp
xchg
das
cld
jle
sub
ret
pop
adc
ljmp
jmp
xor
inc
movsb
ja
outsl
or
cmp
mov
mov
out
sarb
aaa
faddp
icebp
orl
dec
jl
lcall
mov
shll
cmp
ficomps
clc
out
or
adc
ja
call
mov
insb
mov
das
mov
andnps
adc
jmp
jno
xlat
inc
sarb
jg
sti
push
push
fs
jbe
jecxz
orb
push
jno
js
rcrl
jmp
jb
jp
icebp
push
inc
les
cmp
xlat
push
jb
push
push
test
sbb
mov
lcall
pop
hlt
or
aam
xchg
ljmp
xor
mov
sub
or
sbb
aad
mov
sub
popa
subb
sub
in
int3
rsm
test
inc
insl
das
pop
addl
lcall
sbb
push
dec
mov
pop
fsubs
icebp
scas
sbb
jo
ss
clc
aam
call
mov
inc
dec
fiadds
mov
out
mov
jecxz
pop
jp
push
arpl
decl
cmpsb
int3
jb
mov
clc
sub
adc
or
stc
or
imul
aad
jbe
mov
lods
js
pop
pop
push
fldcw
push
call
adc
mov
mov
mov
mov
jo
and
in
sarl
stc
xchg
das
gs
incl
cmpsl
cwtl
push
scas
insl
sub
aam
cmp
loope
test
decl
cmpsb
int
lods
or
xchg
sahf
adc
push
jp
call
in
popa
loope
or
stc
push
sub
mov
movsb
popf
mov
mov
xlat
fcompl
dec
int
xchg
popf
add
mov
jne
pop
sbb
aad
inc
fnstcw
mov
mov
xchg
mov
arpl
or
fimull
rcll
hlt
jmp
add
stos
pushl
popa
es
xor
pop
cltd
sbb
pop
fsubrs
mulb
popa
dec
add
sub
aaa
lret
call
mov
jno
cmp
dec
sub
xor
lcall
cmpsb
sub
scas
nop
into
or
dec
in
pop
out
movsb
and
ss
or
ljmp
test
dec
or
xor
mov
mov
jmp
stc
pusha
push
jb
daa
enter
lods
mov
jmp
pop
mov
ds
sti
adc
mov
mov
jg
xor
pop
stos
push
pop
xor
xchg
push
pusha
mov
popa
pop
fisubl
fistpll
adc
cmp
pushl
inc
xchg
pop
mov
pop
dec
xchg
or
popa
dec
pop
iret
movsb
pop
notb
ret
sub
aam
ja
xor
jg
cmp
fisttpll
xchg
mov
cmp
add
jmp
mov
test
xchg
pop
sub
cs
xorl
dec
fwait
aad
lods
sbb
call
and
out
pop
lea
jle
flds
fstl
pushl
movsl
fnsave
jl
sub
shl
in
push
cs
pop
or
and
decl
mov
call
sub
cmp
mov
mov
cs
dec
cli
cltd
lcall
mov
movsl
cmpsb
les
sti
idivl
out
outsb
pop
lock
lods
gs
ret
mov
lcall
mov
movsb
xor
add
mov
data16
push
dec
insb
ror
aam
call
fimuls
inc
jns
fildl
mov
and
test
jecxz
popa
call
jbe
inc
clc
mov
mov
cld
addl
cmp
xlat
jg
xchg
mov
lods
ficoml
pop
jge
gs
arpl
shlb
mov
imulb
dec
pop
aas
int3
fwait
and
insb
test
sbb
xor
or
stos
adc
lds
shll
cmc
movb
xor
push
insl
enter
and
pushw
pop
xor
lahf
mov
inc
std
pop
xor
inc
popf
pushl
pop
sbb
xor
mov
fldt
or
push
dec
mov
int3
xchg
xchg
or
incl
aaa
mov
int3
sub
and
jecxz
inc
fcmovnu
jp
sbb
repnz
call
lea
out
inc
cmpsb
cld
aaa
je
adc
mov
in
lcall
scas
rcl
pop
shlb
out
stos
and
cmp
jecxz
outsb
mov
inc
or
ljmp
mov
push
repnz
dec
hlt
cwtl
mov
setl
mov
inc
inc
jg
test
mov
cmp
shlb
pop
call
jmp
fsub
dec
cmp
add
mov
mov
gs
add
lods
mov
pop
push
adc
and
lcall
inc
mov
fwait
pop
xor
or
adc
mov
pop
and
cmp
lds
lods
sub
xchg
xor
add
cld
cmp
xchg
mov
lcall
cmp
int
inc
mov
mov
outsl
push
inc
mov
mov
inc
in
pop
cmp
push
jmp
xorb
jns
stc
aas
and
xor
jne
ret
xor
fiadds
sub
aad
call
ljmp
test
sub
dec
sbbl
mov
mov
imul
popa
sub
or
clc
or
jmp
ljmp
cmp
xor
out
jb
cld
punpcklbw
jmp
loopne
ss
cmpsl
je
push
xlat
mov
inc
outsl
xor
fdivs
movsl
pop
add
mov
mov
dec
test
call
mov
lret
push
push
ret
js
mov
imul
push
mov
dec
dec
aaa
inc
lret
je
lret
int
and
loopne
aas
mov
mov
roll
in
jns
out
jmp
cmpsl
pop
add
pushl
sbb
sub
shll
mov
jmp
outsb
dec
ficoml
loop
imul
lcall
inc
insb
and
repnz
push
pop
hlt
aam
sbb
mov
push
outsb
hlt
jo
pop
test
ljmp
loope
cmp
cmp
adc
adc
in
mov
adc
inc
lcall
test
sbb
fsubrs
int3
pop
xor
jne
sarl
es
cmp
iret
ret
inc
call
add
fcomps
call
out
es
jl
inc
xor
dec
es
sub
scas
mov
mov
cltd
clc
push
mov
jb
push
lcall
pop
in
imul
daa
loop
add
aaa
loope
frstor
int3
daa
xor
inc
sti
mov
jno
sbb
jo
xor
cmpsl
loop
loopne
pop
xor
rolb
mov
idiv
lds
inc
dec
mov
sub
pop
int3
mov
inc
pop
scas
sbb
lcall
repnz
push
dec
mov
leave
inc
lret
loop
decl
jae
dec
add
pop
arpl
add
mov
jb
incl
mov
pop
jnp
cmp
mov
sbb
push
and
and
inc
sbb
dec
aam
js
add
pop
nop
add
inc
lea
push
jecxz
adc
hlt
jmp
mov
fs
int3
lcall
and
push
out
lahf
pop
cmpsl
aam
sub
lcall
aam
jno
test
cmp
xchg
push
shll
add
loop
ljmp
loopne
push
jns
or
mov
pop
loop
jl
and
ret
mov
call
xor
mov
es
repnz
xchg
js
jmp
clc
into
mov
mov
inc
cmpsl
fnop
pop
adc
mov
in
and
call
pushf
dec
push
pushf
mov
sar
jg
or
xchg
xor
fcomip
lock
mov
sbb
or
jl
ret
jae
push
push
dec
pop
pusha
aam
test
pop
divl
ljmp
mov
popf
ret
cmp
push
out
ljmp
mov
test
mov
mov
or
fadds
xchg
leave
insb
push
and
es
sub
stos
xorb
mov
popf
outsb
movl
pop
dec
sti
inc
xor
pusha
rolb
incl
sti
nop
jb
gs
test
and
sti
fidivs
or
sbb
jg
inc
lahf
sub
mov
mulb
mov
sti
jl
xlat
pop
mov
dec
aad
incl
rcll
pop
rcrb
aas
pop
cltd
mov
fdivs
jg
sbb
ret
push
ficoms
lahf
scas
mov
lahf
fcoml
and
push
bound
dec
in
inc
aad
lods
stos
and
jle
fwait
lods
dec
repnz
inc
xor
xor
xchg
add
or
hlt
popa
cmp
push
sbb
rclb
add
cmp
mov
mov
movsl
push
lcall
fdivs
push
add
xchg
mov
jb
push
out
inc
lcall
decl
adc
call
stc
mov
rolb
movq
jecxz
adc
jb
shlb
xor
xor
xor
clc
subb
filds
pop
pop
pop
jmp
call
pop
icebp
movl
cmpsb
jnp
lcall
and
sbb
mov
aad
adc
lahf
int3
ret
and
add
push
mov
jmp
je
mov
std
es
push
fdivp
push
mov
out
ja
lock
add
decl
sbb
popa
xor
in
sbb
push
add
jnp
enter
inc
into
push
xchg
adc
int3
push
cs
lcall
adc
mov
xor
dec
add
ds
dec
xlat
std
add
xorb
add
push
push
add
pusha
dec
enter
push
mov
insb
dec
sbb
rol
std
add
lcall
leave
xorl
mov
adc
or
call
movsb
mov
dec
outsl
rcll
push
mov
and
xchg
out
out
adc
or
mov
jl
jg
cmp
pop
or
pop
xor
sub
lock
cli
fidivs
push
cmpsl
sbb
push
xchg
mov
mov
cmp
push
jle
pop
cmc
nop
hlt
or
lods
outsl
cli
ljmp
sbb
cmp
les
jns
test
sub
repz
ljmp
lcall
add
cmpsb
imul
sahf
dec
cmp
and
mov
inc
inc
decl
inc
mov
aas
cld
push
fwait
mov
mov
and
lds
add
lods
lods
cmp
mov
mov
pop
negl
mov
arpl
ljmp
and
inc
mov
stos
push
pop
adc
cmp
xchg
dec
jae
pop
popa
xchg
jbe
mov
xchg
aam
fidivl
lods
adc
inc
fs
push
notb
mov
dec
inc
call
jae
push
das
arpl
xchg
pop
jg
lcall
imul
repz
mov
push
cltd
pop
push
test
or
incl
mov
shl
add
push
jmp
ror
ret
pop
adc
cmp
scas
call
cld
aaa
pop
jno
daa
dec
sbb
adc
inc
cli
bound
scas
lods
test
jmp
xor
push
enter
clc
pop
sbb
mov
cmpb
call
add
nop
sub
in
sbb
xor
sbb
aam
push
jb
pop
out
push
sti
pop
cmc
pop
enter
inc
fstpt
dec
pop
jl
scas
push
stc
mov
aam
pop
mov
daa
fdivrl
stos
cmc
mov
jge
dec
stos
stos
jno
mov
popa
mov
adc
lahf
jmp
mov
hlt
cmp
xor
pop
jnp
xlat
shl
cmpl
imul
mov
inc
ret
mov
mov
lahf
add
enter
scas
insl
sbb
int3
loop
dec
out
pop
mov
shll
mov
cmp
and
imul
pop
mov
fldenv
adc
mov
outsl
daa
dec
sbb
imul
adc
stos
pushl
cld
dec
cmp
mov
jle
mul
fld
or
jle
jl
add
add
clc
push
mov
or
cld
pushf
loope
insb
hlt
inc
das
or
jmp
std
pop
insb
pop
lcall
lods
or
into
mov
out
cli
lcall
stos
jae
cmc
dec
out
lock
mulb
in
adc
ljmp
pop
in
lods
push
mov
rorl
xchg
iret
aam
sbb
aaa
fmulp
jb
xlat
int
out
incl
cmc
mov
movsb
xchg
cli
mov
daa
cmpsb
sbb
inc
pop
aas
shr
enter
sbb
inc
movsb
repnz
addr16
add
sbb
jle
dec
sub
imul
daa
in
call
divb
cmp
stos
add
loope
sbb
aam
int3
popa
sti
je
push
ja
pop
fisubl
inc
dec
xchg
dec
mov
mov
ret
mov
insb
jo
lods
int3
pushf
mov
hlt
out
hlt
test
insb
out
jbe
int
push
out
cld
sub
sbb
fmull
rcl
in
jg
movsb
jne
add
mov
in
dec
mov
ficomps
jb
mov
xchg
or
mov
and
push
imul
mov
jg
stos
ss
push
mov
pusha
sti
cmpsl
je
je
dec
xchg
xchg
decl
decl
xchg
in
gs
call
scas
and
stc
cmc
jns
sub
divb
pushl
add
ljmp
outsl
inc
or
cmp
mov
loope
jle
xlat
clc
decl
adc
mov
loop
imul
push
push
mov
pop
in
xchg
or
cmpsb
loope
stc
jecxz
mov
incl
mov
pop
sbb
push
movsl
inc
lret
mov
repz
std
scas
rcll
test
dec
icebp
hlt
hlt
cmp
adc
push
jnp
clc
call
mov
shrb
lcall
push
xor
movsl
and
dec
xchg
sub
mov
mov
cli
sti
mov
decl
or
jecxz
mov
shlb
dec
jle
dec
ret
mov
test
mov
pushl
stos
icebp
call
jae
xchg
popf
or
aaa
jmp
push
js
dec
mov
scas
popf
or
incl
daa
or
fisttpl
xchg
sbb
cmpsl
adc
dec
jnp
in
ret
es
jle
scas
pusha
add
jmp
add
ss
popf
xchg
cmp
push
cmp
addb
adc
test
int
aaa
or
fdivr
ljmp
mov
xlat
push
movsl
stos
in
mov
cmpsl
dec
xchg
mov
call
jns
cmp
pop
lcall
xchg
xchg
out
sub
dec
xor
inc
push
cld
or
pop
out
ljmp
mov
out
push
sti
test
push
mov
and
subl
test
jmp
sub
or
sahf
dec
std
sub
push
sub
push
pop
stos
cmp
cmp
dec
add
int3
jnp
jp
sbb
addl
cli
mov
push
lds
pop
jp
and
jmp
pop
dec
fstpt
decl
bound
jae
pop
or
int3
rol
mov
mov
ret
popa
shrb
sbbb
inc
push
cld
stos
sarl
hlt
sbb
jge
inc
xchg
fsubrs
idivb
mov
inc
mov
andb
add
mov
mov
in
test
mov
mov
scas
sbb
mov
cld
jg
in
cmpsb
inc
dec
add
stos
out
push
mov
cmc
std
fistps
outsl
pop
jmp
or
lds
ss
pop
inc
xchg
out
jg
xchg
mov
divb
out
das
es
inc
cs
mov
xor
push
into
movsb
mov
punpckldq
mov
jl
lock
out
loope
add
clc
xchg
insb
dec
pop
mov
mov
sub
int3
push
ret
test
aam
jns
decb
stos
xchg
jg
test
popa
insb
movsl
cmp
notb
cmp
rcrl
mov
pop
aaa
adc
and
int3
data16
stc
cs
into
shlb
inc
jnp
lcall
nop
es
daa
cmp
mov
ret
test
jg
andb
xchg
mov
cmp
cwtl
pop
xchg
lea
dec
jns
call
out
icebp
xor
imul
inc
sub
xchg
pop
mov
test
insb
pop
ljmp
hlt
aaa
mov
int
fldenv
pop
add
sub
push
adc
jae
dec
adc
jmp
pushl
stos
or
popf
scas
sub
in
clc
inc
jnp
stos
mov
sbb
cmp
aam
jg
lcall
pop
rcll
es
lods
inc
sbb
dec
repz
mov
jg
insb
pop
mov
or
dec
imul
into
and
cmp
lcall
or
ret
push
cwtl
ljmp
dec
fsubrs
push
test
mov
repz
or
or
cmp
mov
adc
dec
fwait
std
push
pop
iret
inc
arpl
js
xchg
cmpb
loopne
sbb
popa
jl
testb
pop
mov
mov
push
sbbb
lock
repnz
jg
mov
hlt
test
and
cmpsb
or
cmp
push
cld
lcall
daa
adc
sbb
push
inc
cmp
les
xchg
xor
pop
cltd
pushl
roll
jo
and
push
cmpsb
xchg
stos
xchg
mov
or
jmp
gs
xchg
fldl
sbb
lods
mov
pop
push
inc
loope
aad
push
sar
decl
ss
and
lock
ljmp
call
jg
jge
mov
insl
sbb
popf
push
push
inc
scas
insl
clc
mov
sub
sbb
cmp
xchg
cwtl
xor
adc
mov
aam
sbb
push
jg
loop
les
mov
divl
imul
mov
stc
pop
sti
mov
test
dec
rcll
or
cmp
inc
sub
jae
cmp
pushl
inc
sti
mov
dec
ds
pop
cmpl
jg
insb
test
in
push
shll
or
xchg
repz
push
push
call
ret
lea
loopne
push
mov
lret
ret
icebp
xor
cmp
jmp
roll
ljmp
nop
test
popf
sysexit
bound
adc
mov
sub
call
fidivrs
int
pop
mov
ds
mov
fimuls
dec
mov
mov
shll
jbe
pusha
ret
cmc
popa
fldcw
test
cld
mov
insb
insb
call
enter
lcall
cmp
out
cmpsb
ljmp
jmp
hlt
in
jnp
sub
sarb
jae
jecxz
add
pushl
dec
addr16
jbe
and
and
cs
aam
test
inc
test
movsl
arpl
mov
ret
imul
call
and
xchg
add
add
fs
cmp
outsb
sub
or
or
mov
xchg
jne
inc
jns
add
in
das
adcb
dec
sbb
inc
sub
push
jg
xchg
mov
pop
mov
mov
mov
stc
sbb
push
sarb
lcall
mov
cmpsb
inc
aas
push
sar
sbb
mov
out
xor
push
jns
mov
decl
sub
adc
xor
mov
adc
mov
mov
decl
sbb
mov
mov
outsl
push
cmp
pop
push
push
ret
mov
pop
mov
decl
sub
mov
xor
dec
push
adc
jb,pt
test
xchg
mov
jmp
push
jb
ljmp
pop
mov
add
dec
call
lods
dec
andl
fcmovu
jmp
cmpb
mov
mov
and
outsl
scas
lods
sbb
rcl
push
addb
imul
jbe
inc
lods
mov
add
push
rcrl
lcall
stos
adcb
jns
iret
push
sub
fsubp
leave
mov
pop
sub
cmpsl
outsl
sub
adc
mov
dec
lret
rol
push
nop
add
es
jmp
pop
xchg
add
mov
mov
insl
outsb
add
dec
or
rcll
inc
adc
test
xor
scas
push
xchg
pop
call
sub
out
testl
cs
test
xchg
push
or
mov
mov
les
orb
shll
test
push
pop
cs
pop
or
clc
jne
mov
cli
incl
pop
sahf
mov
repnz
ds
mov
cmp
jb
xchg
rorb
xor
and
ljmp
mov
cwtl
mov
inc
mov
pusha
cmp
sbb
mov
and
dec
cld
jp
or
or
add
add
das
jge
add
jb
pop
mov
in
pop
xor
mov
or
pop
dec
dec
cli
pop
in
adc
sbb
sub
add
call
mov
pop
pop
cmp
test
mov
movsl
cvtdq2ps
shrl
call
sbb
xchg
stos
test
insb
movsl
cmp
shll
dec
push
rcrb
sahf
les
loop
inc
mov
and
xchg
push
cmp
mov
push
loopne
popa
insl
fdivrl
or
cmp
mov
jg
leave
bound
inc
cli
out
shr
inc
lret
xor
in
ja
mov
lahf
inc
push
incl
pusha
mov
stos
mov
int3
jl
mov
push
add
cltd
mov
jecxz
jmp
cld
cmpsb
mov
insl
xchg
es
out
leave
mov
mov
xor
jecxz
lcall
jae
pop
cwtl
nop
stc
sub
cli
mov
fldt
mov
mov
jns
ss
sbb
pop
into
add
scas
jl
add
je
jle
sub
adc
ljmp
push
data16
addl
xor
mov
sub
jb
add
sub
jb
leave
jmp
icebp
xchg
cmpsl
sbb
popf
inc
rolb
rorb
bound
lods
negl
or
jmp
fsubl
and
mov
insl
mov
and
leave
xor
add
call
mov
flds
arpl
jo
cmp
insb
cmp
ret
pop
loopne
call
nop
rclb
outsl
jns
mov
ds
popf
push
out
loope
decl
push
cmpsl
or
int
cmpsb
pop
or
daa
fldt
popf
xchg
push
jae
pop
xchg
addr16
dec
ret
xor
movaps
mov
cmp
lock
inc
mov
rorb
aaa
ljmp
syscall
mov
sub
sub
mov
sub
jl
lds
jo
std
dec
bound
push
movsb
xor
adc
js
cmp
enter
decl
cmp
cmp
jecxz
imull
nop
sbb
and
push
orb
ret
aam
lret
xchg
push
sti
mov
adc
sarb
xlat
mov
call
cltd
fidivrl
sbb
mov
ja
test
gs
lret
inc
mov
xor
mov
test
cmp
and
stos
rol
popa
aam
lcall
push
xchg
inc
dec
les
pop
mov
pop
cli
xor
incl
stos
dec
jp
mov
mov
popa
pop
cmp
xchg
dec
imul
mov
decl
aaa
in
pop
and
pop
add
testl
pop
cmp
push
mov
into
icebp
std
sbb
stos
mov
fucomp
xlat
test
xrelease
das
push
and
jmp
lea
decl
push
repnz
rolb
push
ret
cwtl
dec
push
xchg
lret
and
or
decl
sti
jg
in
out
shlb
dec
jbe
pop
fsub
mov
adc
cs
mov
cmp
pop
cmp
loop
and
addr16
fiadds
inc
sub
stc
out
aad
dec
rorb
jecxz
and
mov
fistl
xor
lcall
add
jp
rorl
jb
lods
jnp
jge
in
lretw
fisttpl
decl
adc
or
ret
nop
cmpsb
jnp
mov
xor
aaa
daa
or
incl
cmp
test
cli
mov
lods
movb
push
mov
cld
mov
out
sub
adc
add
dec
in
jne
jmp
les
incl
inc
pop
jne
xor
aam
aad
test
in
cmpsb
insl
jne,pn
dec
clc
fdivr
incl
jmp
lahf
sub
int
pop
inc
mov
mov
call
inc
sub
dec
in
addl
shl
lea
addl
iret
pop
mov
in
jbe
mov
test
pop
clc
rolb
jmp
mov
jp
or
jb
pop
paddb
std
jnp
aaa
xor
das
outsl
jg
movb
jge
in
xchg
xlat
pop
jo
fsubr
add
mov
stos
lahf
ret
mov
in
mov
mov
daa
jmp
mov
adc
or
push
fnstsw
mov
test
adc
dec
pop
mov
adc
icebp
repz
stos
jb
stos
imul
jns
js
clc
mov
mov
fsincos
jge
push
pop
clc
sti
add
sbb
test
xor
aaa
fildll
push
pop
sbb
push
fldt
mov
push
out
aas
test
daa
jge
rorl
xchg
ficompl
imul
mov
cs
inc
pusha
repnz
insb
adc
mov
push
icebp
pop
sub
jp
loop
jb
inc
sub
pushl
cld
cmc
notl
cli
popf
xor
dec
stos
es
mov
add
mov
sbb
mov
ss
jo
push
add
jnp
femms
push
gs
hlt
push
sub
pushf
daa
push
cli
sub
out
lea
adc
frstor
and
mov
xor
jmp
fcomps
add
fisubrs
adc
mov
mov
decl
call
jp
orl
push
jb
cwtl
xlat
loope
lahf
std
les
ljmp
shrb
movsl
jnp
push
pop
cs
bound
mov
pushf
or
lcall
out
push
repz
sub
nop
lcall
jae
jno
or
cmpsl
mov
jnp
cmpsb
pop
sar
in
rcrb
jmp
shll
stos
stos
shlb
sbb
fs
ljmp
sbb
pop
and
jnp
leave
inc
leave
add
push
add
push
inc
add
dec
ljmp
mov
jp
push
add
mov
imul
xor
pop
cmp
pop
lahf
push
mov
add
sbb
cld
xor
leave
adc
loopne
jmp
jge
pop
cmp
push
les
sbb
xor
lcall
js
sub
xor
ret
pop
xor
clc
inc
lcall
xchg
and
pop
jecxz
lret
pop
ss
or
cli
jmp
mov
jo
pop
outsl
leave
dec
lret
jecxz
mov
mov
fidivrl
and
mov
icebp
and
and
outsb
shrl
or
jmp
pushl
push
and
cmp
lods
mov
jb
out
pop
fwait
lods
mov
dec
add
ljmp
fwait
inc
or
xlat
out
dec
fnstenv
test
or
jg
mov
mov
test
bound
enter
jle
or
and
jbe
rorb
lods
mov
fmull
popa
loop
call
inc
fnstsw
out
aam
shl
in
mov
int
aad
dec
push
adc
push
imul
push
push
mov
pop
leave
mov
sub
scas
pop
jg
dec
dec
dec
sbb
rorb
and
mov
fidivrs
dec
stc
sbb
js
push
pop
add
jbe
mov
jbe
popf
inc
ljmp
cmp
outsb
mov
fnsave
cmc
pop
mov
icebp
out
jp
mov
daa
dec
nop
inc
ret
jmp
mov
stc
imul
sahf
fbld
fs
js
mov
mov
sbb
jno
repnz
mov
sahf
jno
jl
outsl
clc
lea
push
xchg
lahf
push
insl
mov
mov
pushl
and
mov
repnz
rolb
mov
outsl
shr
push
push
in
inc
stos
out
decl
fdivrs
and
aam
into
cmpb
aam
adc
mov
aam
fidivrl
push
call
sahf
lahf
pop
leave
je
jl
mov
sbb
in
ret
and
imul
dec
adc
jecxz
pop
jo
mov
push
mov
mov
jg
ret
rclb
jge
cmp
in
push
xchg
sub
xchg
aad
sub
repnz
lcall
out
xor
xlat
xor
xchg
jo
flds
mov
xchg
pop
cmpsb
decl
pop
cmp
ss
dec
sahf
cmp
lds
mov
pushl
push
push
fs
jnp
lods
sbb
inc
mov
mov
and
jo
push
in
xlat
or
xorb
and
ljmp
jo
das
xchg
xor
xor
jle
call
or
pusha
mov
xchg
stc
fstp
fidivrs
inc
out
add
dec
xor
js
jmp
popf
push
or
adc
rcl
jno
leave
sub
dec
mov
dec
add
push
or
pop
shl
iret
std
inc
in
sbbl
rclb
xchg
mov
das
adc
ret
loope
sub
mov
idivl
sub
les
fs
push
sub
dec
in
cld
sbbb
push
dec
xchg
pop
mov
ljmp
inc
call
xor
ret
xor
shl
jecxz
inc
fcoms
dec
nop
jbe
shrl
lods
add
sbb
mov
fsubrl
cltd
pop
mov
mov
scas
loope
xor
adc
cs
pop
lods
ret
xchg
outsb
fs
inc
movsl
add
ret
mov
pop
push
hlt
and
adcl
push
testl
bound
dec
mov
push
sbb
jnp
mov
xchg
mov
outsb
loope
sub
jge
push
icebp
ret
loop
cmp
mov
xor
add
sub
mov
sbb
outsl
loop
out
pusha
hlt
add
mov
jle
xor
leave
jmp
mov
mov
arpl
xchg
adc
adc
loope
fisubs
nop
push
bswap
push
jno
aas
adc
hlt
mov
lock
mov
lret
mov
push
cmp
dec
js
pushl
into
mov
inc
fwait
insb
gs
adc
clc
popf
add
adc
mov
jecxz
mov
movsb
sbb
adc
pop
push
ja
testl
mov
adc
cltd
cmpsb
add
lods
pop
mov
pop
dec
ret
mov
lret
pop
jge
lret
xchg
orl
repnz
fsubrs
nop
std
shll
roll
and
jmp
jmp
subl
mov
test
pop
or
addr16
notl
jmp
xor
xlat
test
mov
inc
fsubrs
mov
adc
cs
ljmp
dec
shlb
sub
lret
enter
adc
xor
loop
add
mov
jmp
mov
xchg
cmc
xor
lock
ljmp
ljmp
lods
lock
inc
adc
dec
cmp
bound
jbe
fucomip
cli
add
mov
in
outsl
faddp
insl
pushf
jae
lds
inc
sar
incl
popa
andl
mov
sbb
dec
mov
test
cmp
inc
mov
sarb
je
cmp
enter
or
pop
mov
loopne
sbb
decl
aaa
mov
jg
iret
out
call
stc
dec
add
sbb
and
rolb
stos
and
mov
es
pop
idiv
jb
add
outsl
push
pop
idivl
and
lods
push
or
rcrb
cmp
stc
fdivrs
js
es
sbb
and
inc
or
cmp
fistps
jge
push
jo
ror
dec
mov
dec
dec
xchg
push
dec
push
sub
lcall
in
dec
scas
sub
aad
out
sti
push
cs
sbb
sub
xor
std
pop
lds
mov
mov
stos
pop
addr16
loopne
xor
and
mov
xchg
jle
inc
pop
movsb
push
mov
idivb
mov
aam
loop
fildl
sar
divl
add
lock
xor
incl
lock
dec
adc
into
push
push
out
xor
pop
adc
mov
iret
call
rclb
push
adc
mov
dec
and
jo
decl
jb
lods
jb
sbb
rcll
incl
test
dec
daa
aam
sbb
rcr
mov
mov
ror
mov
mov
cmp
pop
sbb
add
ljmp
icebp
add
fcmovnb
push
scas
std
mov
test
test
push
ljmp
shll
xchg
call
mov
enter
lsl
mov
pushl
add
sti
xor
xchg
mov
push
outsb
and
pop
or
sbb
mov
jmp
dec
bound
sub
ja
or
add
cld
jg
leave
ficoml
in
jecxz
mov
pop
imul
dec
xlat
mov
icebp
cmpsb
addb
jbe
cmp
sbb
mov
mov
jg
mov
decl
rcrb
int3
xor
data16
adc
out
dec
hlt
pusha
sbb
in
sti
fimull
jno
inc
jmp
push
data16
jmp
mov
aam
push
pop
iret
movsb
xor
adc
mov
xlat
push
movsb
mov
sbb
call
loopne
loopne
sub
or
scas
xchg
push
insb
movsl
addr16
rcr
cmc
adc
test
mov
xor
fmul
in
and
xor
aad
in
sub
mov
xor
out
push
inc
sub
xor
mov
aad
adc
sub
mov
add
inc
fidivrs
loop
push
sbb
xor
dec
fisubs
cmc
cld
add
pushl
fildll
adc
in
cmp
cwtl
icebp
add
in
pushl
scas
and
pop
popa
mov
test
jmp
jnp
jmp
ja
and
lret
or
sub
jmp
fdivrl
and
aad
pop
mov
jb
or
lcall
xor
decl
es
out
lahf
dec
negl
rclb
ja
dec
sbb
mov
mov
pop
insl
in
cld
mov
ja
xchg
aad
push
xchg
ret
mov
or
add
aaa
call
adcb
dec
pushl
nop
mov
insl
xor
cwtl
shll
bound
or
ret
add
jecxz
movl
fmuls
add
pusha
ror
in
int3
fbld
loopne
inc
mov
ret
fidivs
pop
mov
out
stc
sarl
cwtl
sbbb
das
add
mov
les
push
lret
adc
push
mov
inc
orl
inc
or
loop
loopne
cmp
lock
int3
push
mov
pushl
pop
cwtl
movsb
push
test
data16
popf
mov
push
or
ret
pop
test
lcall
add
mov
push
test
pop
sbb
cld
ljmp
psubusb
out
adc
jae
sub
mov
dec
push
sar
jg
leave
divb
fcoms
loopne
leave
cmp
jp
ljmp
into
dec
rorl
mov
mov
push
outsl
ljmp
jnp
in
adcl
pop
repnz
sbb
in
push
pop
jl
ljmp
jae
cmpsl
adc
mov
in
jb
in
xor
adc
int3
xchg
ret
popa
xchg
adc
call
cmp
or
mov
pushf
mov
push
sub
rclb
or
sar
aaa
std
xorb
jmp
out
insb
stc
sub
xchg
jmp
shlb
das
jb
orl
pop
ss
dec
out
inc
pop
test
movsl
and
cmp
outsb
sahf
jg
cmp
inc
divl
ljmp
pop
jbe
shll
sahf
imul
shll
repnz
les
pop
ja
shl
jg
cmp
xchg
out
in
and
or
adc
xor
std
fs
pop
dec
push
addr16
mov
mov
sub
fsubrl
popa
pop
stc
movsl
lea
xor
daa
ljmp
pop
sbb
lods
push
sub
in
in
notl
mov
pop
scas
mov
int
daa
jg
lcall
xchg
insb
insb
mov
push
ja
sbb
jo
imul
dec
add
in
jmp
ljmp
in
mov
pusha
test
nop
sbb
andl
rcrb
ljmp
loope
adc
lods
lea
movsb
sbb
push
cmp
out
sar
ljmp
jp
je
rcll
push
lods
cli
bound
call
sbb
jle
ja
push
icebp
push
push
lcall
or
insb
insl
push
dec
loop
xchg
xchg
pop
icebp
sarb
ret
insl
and
dec
in
mov
inc
cmp
call
lahf
cmpsb
jecxz
pop
cmp
jmp
cmp
icebp
fsubl
mov
cmp
cwtl
cmpsb
daa
loope
cld
jge
mov
xor
iret
jl
add
rorl
dec
cmp
pop
fsub
sub
fnstcw
mov
mov
popf
movsb
clc
cmp
aad
cmp
cs
in
movsl
jecxz
pop
icebp
ljmp
testl
orl
pop
daa
insb
test
add
decl
fists
sbb
mov
andl
mov
movsb
cld
jle
ret
lock
js
mov
pop
or
lret
mov
add
rclb
mov
or
ds
mov
inc
inc
push
js
loope
popa
push
popa
fisubrs
test
leave
stc
scas
shrl
xchg
out
ljmp
sar
aas
mov
push
jb
cmpsb
mov
icebp
mov
pushf
les
nop
das
sar
adc
mov
adc
cltd
cmp
inc
mov
incl
negb
push
adc
cmp
xor
sub
inc
lods
xchg
lods
add
in
mov
cmc
or
cwtl
int
mov
jecxz
mov
jecxz
lds
lea
cli
setge
testb
sti
ret
sub
cmpsl
sbb
add
fimull
xchg
ds
call
sti
lahf
inc
ficoml
cmp
pop
out
cmp
dec
sarb
das
int
cs
pushl
adcb
dec
out
xchg
sbb
pop
inc
add
call
rorl
rclb
jo
jecxz
sbb
cmp
mov
ret
jp
jl
inc
decl
mov
sbb
pop
clc
adc
arpl
fcomps
mov
inc
sahf
stos
jne
test
jle
lcall
jp
daa
adc
std
das
xchg
xor
sbb
adc
fldcw
and
loop
ljmp
clc
or
push
mov
pop
adc
cmp
int
lcall
mov
call
aam
mov
in
fsubl
into
jmp
sbb
sti
adc
test
pop
call
adc
mov
add
repz
js
hlt
jne
call
cld
andb
fdivr
xchg
jge
dec
es
repz
jg
ljmp
pop
icebp
ud0
cld
fcmovb
mov
scas
gs
call
sub
mov
ds
sub
sbb
fstp
push
or
mov
aas
enter
stc
icebp
int
in
test
sbb
daa
jb
lcall
sbb
test
into
and
fidivrs
ficomps
sub
push
jno
push
out
mov
adc
frstor
pop
push
xchg
in
cli
sbb
xorb
and
mov
lock
mov
and
mov
fidivs
jmp
call
scas
xorl
sti
inc
lea
adc
cld
dec
dec
test
fimull
mov
call
icebp
lods
sbb
fs
pop
mov
sub
test
xor
js
lcall
mov
stc
jge
dec
xor
push
add
sbb
lcall
and
jmp
pop
fcoml
sti
cs
or
ret
int3
inc
les
int
rcrl
fs
mov
test
push
pop
jg
pop
lea
ficoml
push
cmp
add
aad
movzwl
jo
adc
outsl
adc
addl
mov
enter
pop
ret
stc
mov
pushf
sub
aaa
mov
xchg
rorb
cmp
loop
sub
out
or
lret
sub
fnstenv
mov
lret
pushl
ret
cmpsb
leave
sub
mov
xor
xor
mov
push
popa
ljmp
jbe
fcomip
decl
sub
shlb
mov
and
dec
iret
sahf
adc
incl
jb
idivb
push
dec
insb
mov
out
sbb
or
and
jg
xchg
dec
mov
jmp
mov
sub
mov
sbb
cmpxchg
pop
jns
cld
loop
sub
pop
fildll
call
inc
es
sub
inc
ljmp
mov
push
aad
sbb
adc
cs
mov
mov
or
mov
gs
mov
mov
mov
int
ja
loope
push
push
xor
stos
pop
es
mov
sbb
sbb
std
fcomip
lcall
aam
mov
adc
int
inc
fstpl
call
adc
cli
inc
xchg
dec
mov
ret
mov
inc
std
pop
inc
add
addr16
cmp
push
jo
xor
mov
jg
int
in
mov
push
fistpll
mov
jle
mov
mov
rorl
pop
or
fs
nop
ja
aaa
movsl
shrl
add
ja
stos
daa
jmp
ror
int3
in
add
pushl
xor
pop
push
dec
mov
pop
adc
jmp
cmp
ljmp
xchg
stos
jmp
dec
roll
enter
hlt
xchg
aam
jae
lret
aad
push
sbb
and
lcall
mov
test
push
sbb
cmp
les
das
push
movsb
and
fcoms
loop
repz
stos
ljmp
sti
mov
adc
call
pop
mov
in
sbb
sub
cmpsl
cmp
ja
mov
pop
into
or
jg
mov
sub
inc
ja
loopne
cmp
icebp
jo
add
fdivp
sub
mov
push
in
jge
notb
cmp
inc
dec
call
std
incl
insl
js,pn
insl
jne
outsb
movsb
inc
lret
jp
daa
push
addr16
mov
lcall
fiaddl
mov
cmp
out
sbb
xchg
in
push
lds
scas
mov
outsb
mov
sub
mov
lahf
ds
pop
add
xchg
dec
cmp
mov
push
mov
incl
jo
pop
sub
add
rcrl
imul
inc
aaa
loope
or
ljmp
mov
sbbl
inc
mov
ret
hlt
movsb
mov
call
pop
dec
sbb
adc
fimull
and
mov
inc
cmc
or
int3
xor
sbb
ja
sbb
inc
jb
mov
insl
repnz
gs
push
and
fwait
sbb
xchg
popa
mov
jne
mov
xor
push
call
inc
mov
or
sub
mov
sub
and
les
bound
fcomip
decl
add
adc
mov
aas
dec
sub
js
add
adc
repz
call
mov
inc
stos
mov
or
mov
push
cmc
gs
sbb
aas
or
inc
roll
jmp
call
mov
jns
test
mov
fwait
mov
jmp
mov
sbb
ret
outsl
jb
push
fidivrs
pop
sbb
vpsllw
icebp
mov
inc
cmc
scas
outsl
cli
in
pop
repz
loopne
adc
andps
mov
inc
adc
sbb
rorl
mov
jno
dec
xchg
sub
in
scas
sar
dec
or
into
mov
xor
adcl
push
test
inc
xchg
pop
mov
xor
ljmp
loop
mov
mov
push
jnp
mov
dec
aam
jg
cmp
jmp
pop
shlb
stos
dec
inc
adc
jl
fdivrl
loope
aad
paddsb
test
sbb
add
shrb
jl
cltd
mov
adcb
jmp
call
add
mov
pop
mov
mov
mov
aad
jg
fildl
add
je
in
dec
dec
out
and
sti
cld
sbb
ror
inc
ljmp
loop
xchg
sbb
jns
xchg
js
xchg
add
pop
or
ret
out
out
fcomps
jb
jmp
pusha
add
loope
sbb
sub
fsubrs
inc
xchg
sar
lcall
sbb
lods
cmp
lcall
cmp
cmp
aam
xchg
push
aad
fisubl
add
ljmp
test
inc
and
cmc
inc
push
mov
xlat
push
in
xchg
xor
pop
fldt
cmpsb
jmp
shlb
and
pop
fwait
shrb
sub
dec
dec
ljmp
clc
stos
arpl
mov
xor
movsl
jae
mov
jmp
js
stos
mov
pusha
lods
inc
pop
push
inc
mov
jno
sahf
add
jg
mov
cli
sbb
aad
mov
jne
push
push
xor
decl
call
inc
add
push
or
mov
fidivs
pop
icebp
inc
dec
stc
mov
jge
adc
decl
push
pop
stc
xchg
cmp
rorl
xchg
daa
adc
ds
fstpl
adc
adcl
jmp
loop
in
sbb
dec
push
fs
subl
and
and
hlt
jne
jg
call
jb
je
push
out
inc
mov
inc
out
xchg
jmp
dec
cmp
xlat
in
es
into
insb
test
jle
mov
lcall
inc
in
enter
mov
loope
nop
mov
call
out
and
sub
mov
in
dec
arpl
jl
pop
addb
cmp
add
mov
les
cmp
aas
dec
cltd
ds
insb
mov
incl
push
sbb
xor
popf
mov
mov
btr
and
mov
pushl
nop
popa
scas
xor
es
aam
adc
call
in
dec
ljmp
sub
inc
lret
mov
or
xchg
fdecstp
jp
mov
pop
call
in
je
popf
adc
rol
aad
fstpl
mov
push
and
flds
in
popa
inc
push
in
lea
jbe
scas
lahf
xor
sbb
dec
js
decl
std
insl
cmp
mov
jbe
pop
cmp
testl
jl,pt
adc
movhpd
addr16
cs
push
cmpsl
xchg
jge
lahf
mov
nop
mov
popa
and
faddl
mov
in
packuswb
pusha
cmp
stos
pop
hlt
addr16
jg
add
fwait
movsl
mov
lock
jmp
in
sub
inc
or
push
out
ror
xchg
lcall
push
test
xchg
shr
pop
dec
es
ljmp
ljmp
xchg
sahf
push
mov
ret
push
dec
push
outsl
push
jns
adc
sahf
outsl
fisttpl
and
fsubs
lcall
jecxz
cmpsl
lock
fists
xchg
pop
jbe
test
clc
push
addr16
popf
and
lcall
pop
dec
jp
int
inc
iret
je
mov
pop
arpl
ss
pushl
cmc
push
popf
cmp
add
inc
inc
ficomps
cltd
mov
push
pop
push
jns
decl
sbb
lds
xchg
into
out
lret
in
jo
lahf
shl
sub
jl
jnp
sub
incl
stos
je
sbb
mov
sbb
dec
inc
xchg
sub
dec
inc
aad
push
rorl
jmp
icebp
mov
xor
orb
fs
mov
rcrb
push
add
cmp
lods
insl
scas
nop
movb
sbb
cmp
sar
dec
stos
imul
jp
push
cwtl
imul
outsl
pushl
cld
dec
dec
ret
mov
dec
fiadds
and
mov
cli
decl
mov
cli
sub
mov
cmpsl
fcmovbe
dec
dec
data16
jle
popf
xchg
mov
push
inc
outsl
push
inc
lret
sub
xor
jb
int3
js
xor
testb
iret
lret
jb
jle
in
cmp
movb
push
push
adc
push
decl
sbb
out
fmull
cmp
lret
push
sub
ljmp
in
push
imul
out
je
lds
addr16
daa
loopne
dec
inc
xchg
ret
mov
incl
aam
add
and
loope
xlat
sti
cmp
insl
imull
xlat
mov
mov
pop
hlt
decl
lea
add
lahf
add
out
lahf
xchg
stc
inc
movsl
lret
mov
pop
sahf
std
call
cmp
mov
adc
push
and
push
push
mov
lahf
call
push
jae
cltd
negl
mov
rolb
jp
or
dec
add
inc
mov
push
xchg
sbb
xor
sbb
les
adc
sbb
pop
frstor
inc
scas
xchg
dec
in
psllw
xlat
dec
inc
mov
add
cwtl
hlt
ljmp
hlt
cmpsl
pop
sub
pusha
adc
adc
push
xorb
inc
loop
fdivs
cs
fistps
xor
xor
inc
dec
clc
aad
xor
lcall
loop
nop
xchg
add
push
out
fcmovnbe
call
bound
xor
cli
inc
xchg
pop
jecxz
incl
sti
pop
adc
dec
in
mov
push
mov
sbb
mov
scas
lcall
popf
mov
xor
lds
outsb
inc
sbb
mov
inc
mov
pop
int
out
inc
cmp
lcall
movsl
add
leave
movsb
dec
adc
decl
pushf
cmovno
xor
xor
es
leave
or
mov
xor
lcall
cmp
into
inc
or
movsb
mov
scas
movsl
dec
cld
add
xor
fstps
lcall
faddp
ljmp
mov
test
pop
test
movsl
dec
mov
adcl
movsl
mov
jle
in
lcall
push
cld
fildl
or
imul
shl
jp
adc
fmull
pop
idiv
ljmp
jp
lds
mov
xchg
mov
push
xor
in
std
pushl
push
loope
das
bound
inc
and
pop
mov
adcb
loope
imul
ljmp
repz
lret
jb
xchg
enter
shlb
sbb
pusha
pop
aad
cmc
cmp
inc
jmp
js
adc
cmc
xor
mov
movsl
push
cwtl
fisttps
pop
add
arpl
dec
stos
ljmp
cmc
push
mov
push
sub
inc
and
pop
nop
dec
inc
repz
push
ljmp
jmp
xchg
cmp
ljmp
mov
decl
loope
and
cmp
or
sub
push
mov
inc
imul
psubq
xchg
xor
call
scas
xchg
in
push
mov
cld
out
loopne
adc
cltd
mov
cmpsb
xchg
es
cmp
mov
sahf
xchg
pop
inc
sbbb
pop
mov
aas
xchg
rcl
movsb
and
mov
movsl
out
call
cmp
push
jp
cli
xchg
jle
ljmp
and
in
mov
clc
fnstcw
and
sub
xchg
mov
inc
test
std
movb
xchg
nop
rorb
out
mov
jle
pop
xor
push
xchg
sbb
test
cld
decl
ja
sub
mov
popa
jo
outsl
xor
dec
decl
pusha
mov
sub
mov
inc
and
test
mov
adc
push
nop
pop
inc
adc
mov
subl
pop
mov
in
adc
pop
imul
mov
inc
sbb
jmp
pop
cltd
in
test
insb
inc
lds
inc
sub
in
or
xlat
xchg
or
in
pushf
mov
enter
mov
add
push
mov
inc
mov
jne
loopne
and
jns
xchg
ss
mov
push
sbb
imul
jmp
inc
shll
aad
fwait
nop
mov
sbbl
mov
out
ljmp
popf
jmp
add
leave
mov
xchg
adc
mov
int3
iret
imul
adc
sti
incl
ja
or
or
mov
aam
push
sti
and
or
cmp
lea
lods
scas
in
cmp
jg
sahf
inc
imulb
jne
stc
es
outsl
and
icebp
shll
xchg
fsubs
fnstsw
out
jge
testb
xchg
dec
lret
push
data16
mov
loope
js
mov
jb
push
mov
out
lds
sbb
pushf
adc
mov
ja
incl
test
sbb
add
out
cltd
mov
adc
sti
or
sbb
nop
ljmp
shrb
and
fnstcw
ficoms
in
fwait
das
add
push
mov
jg
outsb
and
inc
fiaddl
xchg
add
mov
nop
xchg
repz
arpl
cltd
aas
mov
sbb
ljmp
cmpb
pushf
xor
mov
std
inc
std
sub
dec
xchg
dec
das
adc
lcall
les
cltd
cmp
lea
push
fbld
fdivr
ljmp
xchg
js
mov
dec
sub
sbb
adc
icebp
inc
add
ja
mov
ljmp
testb
mov
inc
mov
stos
xor
jbe
lcall
jo
js
inc
jno
inc
inc
andb
pushf
jecxz
push
lea
add
mov
push
ret
sub
lods
cmp
mov
inc
and
pusha
and
lcall
and
xor
sub
jb
movsb
mov
push
mov
fwait
jge
call
out
lea
out
shlb
in
popl
dec
jne
cmp
imul
push
in
cmp
fwait
cmp
incb
pop
jb
xchg
push
push
out
sbb
in
int
mov
jb
je
clc
lcall
dec
addr16
add
push
and
sbb
aas
push
mov
inc
push
insb
jl
stos
incl
cmp
or
and
cs
aad
mov
mov
mov
jg
call
dec
repnz
sub
cmp
stos
xor
fdivr
in
insb
xor
cmp
ret
inc
lahf
jle
jg
inc
mov
lods
fbstp
pop
xchg
ja
popa
pop
push
push
fnstsw
jo
sbb
mov
js
and
les
and
pop
sub
arpl
decl
sub
dec
lahf
out
out
xchg
lret
in
icebp
mov
push
xor
and
mov
cld
mov
xor
lock
cmpb
adc
jb
insl
mov
sti
data16
or
xchg
ds
into
popa
sub
pop
mov
sub
or
ja
ljmp
pop
inc
jge
dec
xchg
les
call
cmp
decl
cmp
push
xor
lock
cwtl
lret
or
ss
jmp
push
and
or
icebp
sub
dec
ret
mov
in
mov
mov
cmp
out
paddusw
mov
jge
lods
ret
aaa
mov
cmpsb
mov
les
mov
rorb
push
cmp
jge
push
sarl
arpl
fsubs
clc
pop
pop
ljmp
popf
insb
add
lods
or
inc
fcmovnu
out
xchg
in
in
js
ud0
call
sbb
sub
shl
ljmp
das
push
xor
jg
xchg
mov
jmp
push
and
movb
jl
push
sti
int
inc
inc
dec
xor
and
imul
sub
add
xor
xchg
jne
addr16
sahf
push
xchg
ret
sub
repnz
and
sbb
arpl
mov
mov
dec
hlt
adc
aam
out
les
lret
add
pop
xor
lcall
pop
mov
fldl
sub
fidivrs
subl
lcall
fidivl
push
mov
and
clc
outsl
jne
and
cmc
lds
fsubl
and
inc
add
pushf
jge
sbb
cmpsl
sub
repz
xchg
add
icebp
lock
xchg
or
cmpsb
sub
lcall
push
repnz
xchg
xor
mov
xorl
mov
and
ljmp
dec
lahf
sub
add
jle
ds
cmc
in
push
call
out
js
pop
outsl
data16
mov
repz
test
mov
pushl
clc
push
mov
mov
sub
xchg
sbb
int
mov
cmp
sar
call
add
mov
push
scas
addr16
shrb
ljmp
testl
jle
mov
sahf
mov
pop
test
inc
int3
mov
data16
pop
push
mov
and
mov
imul
cltd
adc
pushl
xchg
adc
dec
mov
test
fcoml
dec
add
inc
fsts
arpl
lcall
cs
push
lahf
pusha
and
cltd
sub
shrb
int3
or
mov
ret
adc
int3
dec
push
ja
call
rorl
mov
and
mov
or
out
lea
xchg
xor
push
push
jg
dec
out
iret
pop
xor
nop
mov
loope
movsb
mov
loopne
daa
xor
ss
outsl
xchg
adc
or
cld
mov
xchg
pop
insl
xor
aas
loope
pushl
pop
popf
jge
sub
jg
cld
pop
rorl
cmp
dec
xor
inc
mov
inc
test
arpl
lahf
rcll
lods
jbe
and
pushf
inc
inc
push
fildl
mov
inc
add
push
dec
into
dec
mov
xchg
movsl
mov
xor
lods
das
into
movsl
imul
jbe
test
decl
adc
and
outsb
mov
mov
repz
subl
loop
sub
inc
adc
nop
inc
mov
xchg
add
xchg
ljmp
adc
push
cmp
roll
incl
mov
sub
xchg
xchg
push
ljmp
out
push
jb
mov
out
in
xor
sub
jns
mov
mov
daa
gs
add
push
lahf
in
cmp
aaa
push
xor
push
ljmp
xchg
loope
dec
sbb
push
adc
jmp
out
leavew
fcmovne
inc
call
sbb
lods
xlat
jle
popa
test
outsl
lods
push
rcrl
testl
in
movsb
hlt
mov
data16
push
cmp
in
sbb
mov
rolb
mov
push
xchg
movsl
and
cmp
sub
lahf
rcr
mov
mov
xlat
adc
cs
cmc
mov
add
daa
sti
inc
cmp
sub
jo
sahf
andl
jg
push
dec
and
enter
out
xchg
idiv
scas
jmp
lods
popa
sub
push
fisttpll
mov
and
fisubs
adc
jb
jle
call
pop
gs
outsb
mov
inc
adc
add
and
loop
jmp
into
lds
test
cmp
decl
loopne
and
test
data16
test
hlt
leave
or
incl
inc
mov
fwait
pusha
shr
cmpsb
inc
fisubrl
or
mov
mov
push
lret
push
push
or
test
loope
ljmp
lcall
pop
push
push
imul
pusha
outsb
xlat
push
inc
lods
add
pop
lcall
stos
jmp
lea
and
jmp
mov
jnp
outsl
sub
jnp
sarb
pop
lods
mov
lret
cmpsl
or
mov
inc
out
lcall
push
lock
inc
inc
xor
or
mov
sub
sub
cli
inc
inc
cmp
insl
xchg
hlt
jne
mov
cmp
test
or
test
add
lcall
inc
sub
add
sarl
mov
sub
push
ljmp
aas
jp
test
outsb
mov
leave
xor
mov
ret
inc
push
jmp
jb
xor
push
mov
cli
jmp
xor
mov
cmp
jmp
pushf
and
fildl
pop
out
movsl
adc
test
adcb
inc
movsl
into
leave
lods
mov
outsl
fbld
aad
xchg
add
sbb
cs
negl
subb
mov
decl
pop
cld
outsb
cmc
cmpb
jp
orl
mov
leave
iret
lea
mov
xlat
mov
add
push
orl
decl
scas
in
adc
arpl
cwtl
in
mov
sub
mov
pop
ss
pushl
test
push
pop
pop
movsl
arpl
cli
add
out
popa
std
aaa
mov
adc
fisttps
mov
dec
scas
sub
mov
sarb
mov
add
out
ret
cmp
sbb
mov
and
dec
xor
pop
movsb
decl
lds
scas
stos
fistl
fistps
sub
pop
cs
cwtl
push
push
add
xlat
lds
mov
xchg
pop
push
movsl
mov
sbb
call
cmp
sti
pop
lret
adc
mov
test
push
pushf
add
xchg
pusha
add
fcoml
addr16
add
or
jp
das
lods
mov
les
mov
mov
or
and
rorb
inc
sbb
popa
inc
xor
incl
sub
dec
rcrb
add
adc
in
push
decl
mov
mov
cmpsl
nop
pop
and
adc
test
call
jmp
das
iret
mov
out
pop
outsl
mov
stc
loope
pop
lods
imul
adc
mov
xchg
and
sub
cwtl
mov
mov
jmp
xor
mov
and
xor
xor
mov
sub
fwait
and
add
mov
ret
fidivs
mov
lret
add
adc
dec
dec
push
bound
or
test
insb
mov
je
mov
dec
ret
sbb
bound
jecxz
dec
int3
ret
jl
sub
mov
mov
jp
clc
jg
mov
mov
mov
aas
fwait
mov
push
insb
or
jmp
int
mov
test
pop
add
outsl
mov
nop
and
loopne
lods
in
mov
lcall
mov
les
popa
ret
add
pop
xor
bswap
pop
sub
mov
jo
xor
test
cmc
loop
lahf
add
in
fwait
inc
jl
add
jnp
or
xor
pusha
out
inc
pushl
daa
fincstp
test
pop
mov
outsl
mov
enter
dec
pop
jae
popf
adc
pop
inc
lcall
mov
enter
test
inc
jo
cmp
loop
adcb
and
adc
and
mov
and
mov
adc
lds
sbb
mov
and
mov
test
gs
out
test
bound
jl
jp
jl
jg
xchg
push
pushf
leave
xchg
gs
and
pop
ja
inc
and
or
cmp
in
dec
sub
dec
pop
daa
push
mov
pop
mov
sahf
sub
ss
sbbl
clc
icebp
or
out
mov
jge
jb
and
xchg
inc
call
jnp
xor
pop
xchg
pop
insl
test
push
xlat
sarl
outsl
inc
adc
lcall
and
sahf
clc
jnp
xchg
mov
enter
shrl
adc
sbb
test
imulb
and
ljmp
outsl
ja
and
repnz
cmp
xlat
cmp
out
mov
clc
out
unpcklps
popw
repz
popa
xchg
aas
sbb
out
lcall
dec
push
pusha
sbb
cmpsb
popa
mov
in
inc
ficoml
ficompl
pop
push
call
mov
fldl
mov
cmp
loopne
iret
mov
rcl
lock
ljmp
das
out
imul
std
lock
inc
cli
rcrl
xchg
ljmp
xor
int
test
imul
mov
sbb
call
push
jg
adc
pusha
repz
sbb
fistpl
gs
decl
adc
mov
ja
and
mov
inc
pop
push
sbb
shl
pop
movsb
mov
call
pop
es
popf
notl
mov
xor
jne
mov
push
mov
pop
es
sti
push
pop
xor
push
movsb
or
xor
cmpsb
hlt
shlb
shr
push
arpl
rclb
call
scas
mov
jge
and
daa
pop
fwait
aaa
rolb
popa
lcall
bswap
or
stos
inc
lahf
add
jmp
dec
inc
push
pop
dec
lea
in
hlt
int3
cmpb
add
push
les
xlat
or
jg
pop
xor
jns
push
push
fdiv
xchg
pop
jne
sub
repz
xchg
mov
dec
sti
imul
jg
sub
je
jns
adc
cli
push
rcl
lret
popl
mov
jb
jp
dec
and
inc
cmp
xchg
xchg
insb
sbb
cmp
xchg
ljmp
subb
insb
mov
fadd
mov
and
dec
in
jno
fcompl
divl
fidivs
add
pop
jle
shrb
lcall
sbb
xchg
test
and
test
in
or
lret
mov
movsb
push
push
lods
ljmp
in
aad
push
sub
decl
fisubrs
or
mov
mov
ds
enter
int
mov
decl
xlat
jno
and
inc
in
cs
mov
fndisi(8087
sti
hlt
or
xor
jbe
fdivs
jg
or
rcrl
jo
mov
adc
cmp
jle
mov
xor
xchg
sub
add
push
sub
adc
add
cmp
repnz
aaa
cwtl
cli
repz
cwtl
popf
cmpsb
sub
in
adc
rcrl
decl
add
jl
fwait
pop
mov
movsb
and
jae
pushf
mov
xchg
sbb
add
iret
or
stos
and
jb
outsb
adc
adc
icebp
je
rsqrtps
lock
call
inc
jp
roll
add
adc
cmpsb
cld
cs
jg
xchg
sub
incl
mov
pop
incb
add
add
js
hlt
and
in
cmp
push
mov
mov
js
xchg
sub
or
test
jmp
or
pop
fiadds
sbb
pop
mov
lods
adc
stc
mov
hlt
fists
pop
lds
xchg
sub
pop
jg
sbb
das
sub
xor
cmp
ljmp
incl
cld
or
sbb
mov
or
add
fstpt
inc
clc
cmp
divb
dec
inc
mov
pop
cmp
cmp
lcall
pop
not
xchg
mov
stc
test
rcrl
mov
mov
add
lock
bound
sub
fsubrs
xor
xchg
sub
fcompl
push
cltd
dec
lret
lock
or
adc
cmpsl
daa
insb
push
sbb
out
mov
sbb
add
xor
dec
xchg
sub
dec
xor
push
fisubrl
mov
rolb
scas
sbb
bound
mov
ret
xchg
ljmp
add
in
mov
stos
int3
xor
bound
cmpsb
sub
dec
mov
int3
gs
xchg
mov
xchg
adc
rcr
push
mov
mov
mov
cmpsl
push
sbbl
test
nop
call
arpl
dec
popa
call
cwtl
jp
dec
cmp
cmp
push
loope
jnp
jecxz
push
mov
push
mov
sub
movsb
push
sarl
mov
jmp
out
dec
mov
popa
dec
stos
push
dec
xchg
sti
sub
jmp
lea
inc
lds
imul
dec
jmp
lods
out
hlt
stos
sub
mov
ljmp
insb
jbe
push
arpl
cs
xchg
push
cltd
mov
or
xchg
int3
jo
xlat
push
lcall
call
je
loop
js
push
adc
imul
repnz
arpl
test
ljmp
aad
or
mov
inc
fildll
bnd
aas
aaa
add
lock
incl
push
lock
inc
mov
test
and
ljmp
sbb
ret
dec
fidivrl
jmp
into
rdtsc
pminub
shlb
mov
and
call
inc
sub
sarl
arpl
dec
pop
dec
xor
fildll
xor
push
lcall
clc
shl
test
push
bound
imul
hlt
pop
sub
pop
cmp
inc
fstl
outsl
cli
lcall
sbb
adc
shl
pop
and
outsl
mov
pushl
mov
sbb
movsl
inc
cmpsb
fistpl
or
mov
outsl
ja
sbb
dec
aaa
dec
std
jmp
ljmp
enter
mov
xchg
aaa
ja
cmp
lods
sbb
ret
loop
data16
dec
fwait
notl
fnstcw
pusha
jle
out
inc
xchg
jmp
add
sub
mov
mov
xchg
loope
lcall
mov
es
addr16
adc
addr16
fldenv
jl
test
arpl
sbb
fmuls
mov
push
pop
xor
mov
cmovne
sub
and
dec
fstpl
cli
and
inc
outsb
popf
cmp
sahf
in
loop
mov
add
jmp
ljmp
or
mov
adc
inc
fwait
jo
push
mov
fisubrs
inc
cmp
lcall
dec
stc
dec
mov
lods
push
punpckhbw
pop
xor
mov
jbe
mov
dec
mov
imul
push
or
cli
cmp
xor
lret
call
add
notl
jle
movsb
fwait
xor
cmp
pop
ret
rcrl
cld
lcall
repnz
sub
sti
stos
and
je
pushf
adc
push
dec
popa
pop
and
fistpll
shl
sub
pop
cmp
addl
aad
adc
xchg
inc
into
adc
mov
pop
inc
mov
stos
insl
sub
push
repz
xor
cmp
push
push
jo
pop
push
mov
mov
out
mov
dec
push
cmp
lret
or
scas
inc
data16
push
push
mov
nop
cmp
mov
pop
shlb
lret
in
in
jae
mov
dec
out
xor
lcall
ljmp
insb
out
jmp
adc
inc
call
imul
test
sbb
or
and
or
xchg
cli
incl
jl
sub
adc
adc
xchg
lcall
sub
fmul
ljmp
loope
enter
mov
call
rol
pop
xor
std
push
les
in
push
incb
ljmp
lcall
dec
adc
lock
push
cwtl
and
fwait
popf
stos
fisubrs
push
test
inc
hlt
dec
dec
outsb
mov
stc
loope
inc
push
mov
jns
mov
gs
ror
popa
test
mov
mov
add
pushl
xor
std
jecxz
dec
cmc
loope
mov
pop
cli
mov
sub
inc
push
lock
push
mov
sub
stos
insb
sub
inc
xchg
movsb
sti
xlat
xlat
jbe
pop
lcall
das
or
sbb
iret
adc
xchg
inc
cmpl
lock
clc
call
hlt
push
ss
xchg
mov
add
jle
xchg
lds
dec
mov
jmp
push
add
fs
cmp
loop
out
pushf
sbb
shr
fisubl
cmp
mov
jno
int3
psrlw
inc
cmp
or
mov
pop
jo
ret
test
decl
repnz
mov
push
and
jg
mov
sbb
aas
and
jg
or
js
lcall
mov
pop
mov
lods
aad
insl
out
in
adc
call
adc
and
xor
je
add
pop
xchg
mov
fstps
add
aam
adc
cltd
adcb
pushl
out
push
push
shr
jmp
int3
or
imul
mov
aaa
jnp
adc
mov
mov
js
jmp
and
push
popl
aad
pop
or
inc
adc
imul
fs
loope
xchg
pop
xor
shrl
testb
xchg
mov
out
nop
fwait
or
cld
call
mov
fadds
jae
sbb
pop
faddl
test
nop
in
subl
out
push
test
call
decl
popf
mov
iret
rolb
and
mov
push
cmp
pop
loopne
fwait
mov
and
push
mov
adc
xchg
dec
jmp
xchg
sbb
or
in
shl
jl
cmpsb
inc
stc
pop
leave
stos
lock
aad
test
adc
out
mov
and
icebp
lcall
cmpsb
xlat
scas
fsubp
test
dec
push
mov
dec
push
mov
and
mov
xchg
add
decl
add
andb
ffree
inc
int3
insb
xchg
js
mov
mov
mov
pop
inc
insb
pop
jns
sub
cmp
mov
ljmp
fists
push
lahf
adc
std
mov
mov
sub
and
sub
popa
lods
jne
ljmp
sbb
push
push
mov
insl
pop
cmp
adc
dec
sub
sub
and
mov
jmp
mov
or
dec
dec
mov
fs
arpl
mov
dec
mov
lcall
movsb
pusha
sub
mov
test
test
movsb
clc
lcall
add
daa
test
repz
cmp
cli
hlt
inc
dec
and
filds
rorl
or
test
orb
and
xor
fbstp
clc
jmp
sub
pushl
movsl
pop
and
inc
ret
jmp
pop
movsb
js
das
jnp
cli
mov
frstor
rcrl
sti
push
lcall
jmp
cli
out
push
mov
in
fsubrl
push
lahf
cmp
packsswb
mov
imul
mov
add
and
lds
mov
pop
mov
adc
ljmp
test
adc
mov
mov
pop
test
jo
mov
rcl
mov
jmp
int3
and
and
jp
into
or
mov
mov
or
enter
mov
incl
jge
jge
inc
xchg
imul
std
jae
jg
and
mov
incl
mov
and
add
stos
loopne
cmpb
dec
xchg
mov
lret
lods
in
fcos
jmp
inc
ss
push
hlt
test
test
lock
lcall
js
dec
lods
push
mov
push
mov
jbe
mov
mov
inc
cmp
pushl
jo
mov
leave
cmp
or
push
sbb
dec
mov
xchg
imul
lcall
daa
fst
pop
and
pop
fsubrp
and
pop
jecxz
dec
cmp
lods
jecxz
lcall
loop
mov
pop
and
dec
add
pop
gs
test
or
adc
aas
lahf
mov
testl
push
in
decl
pop
in
mov
cmp
imul
push
js
push
fbstp
stc
imul
push
sub
xor
ficoml
fs
jo
fldl
mov
movb
pop
aas
pushf
ljmp
pop
fs
fs
push
mov
mov
call
cs
shrl
in
rcll
cmp
push
arpl
es
dec
pop
add
adc
sbb
sub
stc
imul
push
sarb
pop
repnz
decl
test
cmpsb
cmp
cmp
lret
imul
jb
faddl
inc
xchg
fstpl
xchg
mov
imul
lds
mov
xchg
ficoms
mov
andb
mov
cld
pop
cltd
jo
fldcw
scas
in
pop
pop
cmpsb
mov
cwtl
mov
inc
call
in
mov
dec
lds
inc
mov
add
out
incb
fstps
or
dec
jmp
mov
stos
fcomip
inc
test
fidivrs
lahf
or
mov
add
cmpsl
call
jg
cmp
lock
push
cmp
xchg
loope
add
xchg
hlt
int
stc
fsts
push
inc
aad
or
pop
nop
adc
cmp
lds
push
ffreep
popf
or
cmp
pop
js
in
loope
and
dec
aad
xor
fs
subb
jmp
dec
add
jne
fisubs
bound
cmpl
scas
out
mov
push
and
inc
dec
insb
jmp
jne
sub
jae
mov
das
push
lods
cmp
movsl
aad
mov
pop
rolb
sub
je
mov
xchg
mov
je
dec
mov
push
mov
fstpl
pop
lock
insl
dec
xor
adc
lahf
ret
xchg
lea
cmp
call
imul
sub
jae
add
mov
divb
mov
dec
xor
jmp
mov
adc
jo
xchg
inc
call
jg
aas
push
enter
arpl
push
ficomps
pop
lods
mov
inc
sub
jmp
xor
call
and
mov
add
pand
xor
out
xor
scas
pusha
clc
fstps
nop
cmp
mov
lret
stos
mov
in
mov
decl
lock
and
jle
push
imul
mov
jg
mov
movsb
cmpsb
frstor
call
push
out
inc
push
adc
push
pushl
fcoml
enter
mov
mov
repz
sti
mov
outsb
call
cs
dec
cld
jbe
mov
test
into
adc
shlb
loopne
xchg
mov
push
stc
insl
jns
incl
or
mov
push
fs
movsb
push
mov
pop
mov
mov
ljmp
add
xor
adc
jo
in
pop
add
push
out
or
mov
ljmp
add
fmull
das
popa
enter
mov
repnz
xor
fcomps
push
sarl
ret
lcall
push
xchg
pop
jmp
xor
mov
lock
decl
or
mov
cmp
and
pop
xchg
mov
clc
fcomip
ljmp
push
fmull
sub
adc
push
popa
test
and
call
das
fsubrl
or
pop
push
xor
xchg
test
mov
gs
pop
daa
xchg
push
and
mov
pushl
sbb
movsb
out
lea
out
int
fnsave
push
xor
das
mov
xchg
jg
jge
add
je
mov
xchg
jmp
test
jno
jp
adc
mov
inc
sti
adc
in
mov
jbe
xchg
cld
mov
cmpsb
lods
dec
cli
push
out
cmp
addl
and
dec
push
push
lret
lods
fstps
pop
cmc
stos
jbe
mov
das
cmp
and
scas
lcall
sub
xchg
jle
and
mov
pop
enter
iret
xchg
aam
jns
aas
loop
push
mov
pop
incl
aam
jnp
mov
jp
mov
decl
jg
dec
push
insl
jle
or
mov
insl
and
inc
in
cmp
cmp
ljmp
sbb
cli
or
clc
adc
hlt
js
add
insb
sub
cmp
fcomip
jl
and
add
mov
mov
cmp
push
repnz
jae
decl
gs
gs
lock
hlt
dec
jl
sarl
pop
outsl
aam
sub
ret
adc
push
pushl
enter
lods
xchg
sub
cmp
fs
mov
mov
rcr
add
mov
cwtl
adc
mov
sbb
movsb
pusha
movsl
lret
and
xor
js
mov
mov
mov
jae
mov
add
repnz
sahf
xchg
scas
das
pop
movsl
rcll
outsb
lea
pushl
xor
inc
mov
pop
jmp
jnp
das
push
mov
roll
fsubs
mov
ss
xchg
out
xor
pop
or
inc
push
pushf
and
in
sbb
push
sbb
xorl
jle
in
hlt
add
jnp
xor
push
push
sub
int
fldl2t
xchg
out
push
cmp
fcos
call
stos
lods
movsb
jne
xor
cwtl
dec
pop
inc
dec
cwtl
mov
mov
rcrl
decl
dec
andl
hlt
test
imul
inc
repnz
jle
call
in
cmp
mov
push
dec
dec
xchg
aam
lret
mov
xlat
push
mov
jmp
add
adc
mov
add
in
in
jle
inc
out
imul
insb
add
mov
incl
sub
mov
ret
push
cmpsb
xorl
aad
adc
stos
mov
test
jno
jae
or
sbb
sbb
xor
dec
cmc
xchg
mov
incl
inc
ds
inc
out
loop
jb
mov
pop
lds
mov
pushf
out
jmp
and
lret
and
popa
inc
imul
push
insl
lret
ljmp
cld
popf
pop
or
dec
lret
mov
cmpsl
cmp
xchg
sahf
adc
loopne
stc
into
mov
clc
and
cmpsb
pop
jl
pop
push
cmovle
cmp
or
sub
adc
pushl
nop
pop
xor
shll
dec
cmc
jp
pop
mov
cwtl
aad
or
dec
sbb
xlat
cltd
cmp
leave
fstp
test
add
lret
mov
test
lcall
jns
lret
mulb
dec
int3
mov
mov
push
xchg
sbb
fstpt
lcall
jmp
sbb
cmpsl
in
pop
imulb
pop
inc
lods
fdivp
or
mov
and
lret
ljmp
clc
stc
dec
js
ljmp
dec
jl
mov
aaa
pop
pop
and
out
mov
incl
jl
int3
xlat
fisubs
sbb
lods
jecxz
add
and
inc
inc
ljmp
pop
dec
stc
xor
jnp
pop
inc
pop
pushl
nop
fiadds
outsl
xor
pop
sub
and
popa
xor
lods
imul
dec
sbb
inc
jmp
pop
ljmp
mov
xor
test
push
enter
jecxz
or
decl
pop
inc
iret
xchg
adc
push
sbb
sub
or
lods
fs
mov
pop
lahf
lcall
pop
js
add
jl
inc
pop
rep
loopne
jnp
arpl
out
adc
push
cmp
pusha
mov
cmc
jg
jae
ror
sub
mov
fcoml
in
jbe
mov
lcall
pop
cld
mov
std
jno
fists
call
enter
mov
fidivs
shll
pop
stc
decl
and
leave
das
xor
jbe
test
mov
push
push
aaa
sarl
loopne
adc
sti
add
xchg
js
sbb
es
xchg
push
lods
and
daa
push
outsb
jg
xchg
test
or
aas
sbb
jge
ljmp
sub
add
testb
sub
sti
sbb
icebp
outsl
mov
dec
data16
lcall
sbb
repz
fs
jb
push
lock
cmpsl
scas
nop
movsb
loop
or
lods
pusha
xor
lcall
add
cltd
inc
int
pop
imul
add
stc
fsubl
outsl
pop
stc
idiv
jg
jg
dec
or
int3
arpl
or
jg
daa
adc
or
test
add
lcall
dec
adc
jo
inc
push
cs
clc
ss
call
jg
inc
cmp
cmpsb
dec
hlt
jge
jb
xor
out
sub
xchg
inc
call
xlat
cli
fcomip
cli
mov
div
fldl
into
jle
lods
testb
xor
call
pushl
sbb
and
lret
in
xor
out
inc
jge
mov
data16
lcall
xor
jne
jb
shlb
jbe
add
js
lea
inc
dec
sbb
lcall
sub
pop
or
sti
jb
loop
xor
add
mov
addr16
daa
dec
push
fs
call
adc
ljmp
xlat
push
fcompl
int
jp
dec
and
pop
sbb
inc
call
arpl
sub
lea
inc
daa
test
dec
pop
mov
xor
mov
shll
or
mov
sbb
jmp
pop
mov
xor
or
aaa
cmp
mov
mov
aaa
dec
test
push
inc
push
pop
sar
pop
cmc
pushl
sbb
sahf
push
je
dec
ss
sub
adc
dec
sbb
aam
mov
cs
into
jp
pop
aaa
dec
add
aas
test
outsl
cli
sbb
ljmp
add
loop
scas
in
pushl
jecxz
lods
dec
std
jle
enter
xchg
xchg
mov
ror
mov
roll
lcall
movsb
mov
fstps
outsb
add
mov
pushf
out
fisttps
xor
mov
inc
inc
xchg
scas
lea
sub
push
filds
sar
adc
in
sub
fsubl
mov
cld
mov
mov
imul
cmpb
insl
xchg
mov
xlat
sub
inc
inc
in
mov
aam
incl
leave
jnp
or
int3
pop
scas
mov
jne
mov
lret
bound
out
fcos
call
aad
jae
cli
push
xor
mov
push
fistpl
pop
test
fcomip
incl
push
xchg
aas
fs
repnz
subl
adc
mov
cmp
call
mov
lahf
ret
sbb
leave
or
fidivrl
push
sub
cmc
sbb
ljmp
adc
dec
dec
fsts
scas
ret
push
fstps
movsl
mov
dec
iret
scas
sub
jb
sub
push
loop
push
hlt
mov
jns
cmp
sbb
mov
mov
out
dec
pcmpeqw
push
lcall
bound
jb
rol
hlt
dec
mov
fsubrs
int
stos
push
incl
xchg
dec
or
loop
jb
and
cld
lods
stos
fisubrl
jmp
push
xchg
xor
fistpl
pop
xlat
and
jne
enter
dec
arpl
stc
cli
lcall
sbb
push
neg
call
mov
lret
rcrb
xchg
repz
inc
dec
dec
and
xadd
mov
adc
inc
fmulp
push
lcall
out
lea
ljmp
inc
call
lods
ds
fsubs
sbb
arpl
pushl
pop
aaa
sub
push
pop
lods
je
loopne
test
push
push
and
pop
or
pushf
push
setbe
adc
fcomip
jmp
xchg
pop
add
sar
jns
mov
jo,pn
cwtl
cld
xlat
mov
add
add
leave
icebp
jecxz
jg
mov
fs
adc
test
into
cs
popf
repnz
lcall
in
sub
mov
mov
adc
cwtl
pop
cmp
pop
es
leave
shr
add
dec
sbb
ficompl
inc
stos
jge
add
pusha
sahf
mov
popf
pusha
hlt
fs
call
into
and
int
sub
ret
xchg
sbb
pop
cmc
push
insl
aaa
repnz
loop
das
clc
das
sub
push
push
das
pushf
xlat
xchg
ds
xor
push
mov
mov
ss
inc
lea
fimuls
jge
xor
subl
xor
incl
mov
les
sar
push
cmp
sbb
mov
decl
mov
inc
sbb
aas
pop
push
ds
int3
adc
movsb
pop
mov
xor
mov
push
jae
mov
add
shll
push
and
sahf
jne
mov
decl
std
je
imul
repz
add
cltd
stos
in
pushl
in
cmp
popa
pop
es
xlat
arpl
enter
jmp
dec
and
xor
fs
add
dec
sub
and
push
mov
ret
dec
dec
cltd
sti
mov
push
das
jge
pushl
dec
pusha
xor
movsb
aam
push
dec
ds
mov
idivb
jbe
loope
add
shrl
aad
fstpt
adc
jmp
stos
push
aad
add
push
int3
mov
inc
xor
mov
sbb
jl
sbb
call
dec
rcr
mov
ja
lods
jne
xchg
pushf
cmp
pop
das
popa
mov
mov
inc
jle
lock
std
add
ds
pop
loopne
sahf
push
jo
mov
pop
mov
ja
fnstcw
rol
lea
push
sbb
mov
mov
movsl
data16
incl
into
xchg
push
mov
xor
loope
jbe
loop
xor
ds
jmp
wbinvd
push
repnz
push
and
loop
mov
sub
xor
pop
and
orb
fadds
incl
scas
and
movsl
fdiv
fwait
mov
nop
scas
sbb
aaa
jae
or
movsl
shrl
aam
push
mov
mov
pushf
icebp
push
sbb
incl
jo
aaa
pop
sub
jno
jp
movsb
mov
icebp
sar
adcb
inc
push
push
mov
pop
loopne
rcl
inc
push
jp
add
mov
sti
sbb
jmp
sahf
cmp
fidivrs
push
addr16
pop
and
or
inc
push
ljmp
pushf
push
cmpsb
clc
cmpsl
and
popa
stos
outsb
mov
bound
popf
gs
cmp
pushf
xchg
popf
cmc
mov
ljmp
out
popa
outsl
sti
loope
fldl2t
inc
stos
decb
mov
mov
pusha
into
fmuls
jge
cmpsl
lahf
jnp
call
jmp
pop
adc
push
in
or
in
inc
pop
xchg
xchg
pushf
fmuls
inc
fsubrs
xchg
dec
and
and
stos
pusha
sub
xchg
adc
aaa
jbe
push
push
loop
inc
enter
sub
into
pop
pop
hlt
dec
cld
testb
sti
or
shll
incl
and
push
pop
xchg
call
mov
push
push
mov
xor
fiaddl
aad
call
stos
xchg
mov
movl
pop
jg
mov
xchg
cmp
adc
movsl
cmp
hlt
jmp
mov
sub
adc
insb
mov
xchg
xor
cmp
xchg
negb
movsb
push
loope
mov
pushl
cli
shl
adcl
dec
cli
into
je
shlb
mov
rorb
fsubrs
jle
jmp
cld
push
ljmp
fadds
fs
mov
pop
inc
sbb
xchg
mov
xchg
sahf
shll
mov
or
fsubs
push
jg
mov
out
mov
lret
repnz
pop
lcall
dec
mov
dec
subb
rol
cltd
stc
mov
test
or
lea
mov
jmp
stos
cmp
pushl
outsb
fwait
loopne
fbstp
test
adc
xchg
popa
lods
mul
xor
dec
add
decl
ret
aad
mov
rolb
fadd
inc
outsl
orb
mov
movsb
jl
push
sbb
lods
adc
pop
outsl
popa
push
je
cmp
cmp
test
in
push
adc
jae
or
shlb
decl
aad
shrl
inc
add
and
xor
mov
lcall
xchg
mov
pop
shl
push
outsl
call
pop
jno
or
and
aas
scas
adc
lcall
out
lahf
push
ret
cmp
icebp
push
mov
stc
dec
aad
mov
cmp
pop
das
incl
jne
jle
addr16
pusha
adc
fiaddl
cmp
aas
stos
fs
mov
hlt
dec
decl
lcall
and
gs
scas
jno
xchg
mov
and
sahf
ljmp
pop
and
pop
mulb
adc
js
sbb
dec
pushf
pop
jmp
jae
jmp
movsb
out
jl
aaa
fmulp
and
jecxz
sti
scas
cmp
sbbb
lret
loope
popf
xor
lcall
mov
popf
add
fisubl
jmp
push
pop
jecxz
outsl
fwait
cmp
insl
stos
pop
gs
xor
aas
and
pop
pop
jle
rolb
decl
es
cmp
fs
out
inc
cmp
dec
push
ds
mov
leave
sub
pusha
aad
or
mov
test
adc
mov
lods
push
int3
bound
movsb
ret
aaa
mov
das
cli
incl
shlb
sub
test
dec
test
xor
jmp
dec
decl
cmp
dec
dec
xchg
jns
cmp
fistpll
pushf
les
shlb
and
mov
jo
push
iret
mov
sub
push
xor
sbb
ljmp
fcoms
mov
nop
mov
adc
incl
movsb
call
cld
xor
adc
xlat
cmp
or
xor
jb
js
push
mov
jmp
addr16
repz
add
inc
imul
xor
lahf
test
fsubrl
pop
fisttps
lods
fisttpl
pop
jo
fstpl
dec
push
jp
ja
movsl
fs
fistpll
sbb
pop
out
std
aad
xor
push
mov
push
xor
ret
nop
testb
pushf
jno
lea
out
cmp
add
aam
cmpsl
cmc
pop
cwtl
in
les
dec
xor
ljmp
mov
scas
lcall
shll
push
sbb
lcall
mov
jns
cmpsb
lds
or
and
cmpsl
xchg
or
and
mov
stos
aas
inc
inc
xchg
outsl
jg
fnsave
jbe
pushf
lcall
popf
push
dec
push
cmpsb
popl
sub
sub
jle
jge
dec
and
loopne
cwtl
mov
cld
xor
int
leave
xor
and
loope
movsb
cmc
inc
adc
pushl
pop
dec
adc
xor
pop
cltd
xchg
imul
cmpsb
add
cmp
cld
sahf
inc
pusha
cmp
xchg
adc
ljmp
fstpl
insb
mov
call
jmp
sarb
in
and
movsb
test
cmp
imul
rcrl
aaa
inc
leave
cwtl
mov
add
aaa
jmp
push
mov
ret
adc
fstl
jecxz
ja
in
call
mov
test
mov
and
adc
xorl
outsb
je
push
sti
inc
lahf
cltd
scas
add
lea
mov
stc
cmp
mov
in
jmp
push
lret
push
xor
mov
and
jo
pop
test
cmpsl
mov
jmp
rcrb
and
loope
scas
testb
dec
int
loopne
stos
mov
les
push
lods
pop
outsb
pusha
test
mov
pop
popa
clc
jmp
mov
push
and
jno
nop
rclb
repnz
ljmp
xor
enter
adc
push
xor
dec
lds
sub
std
int
xchg
mov
jmp
jno
sbb
cmp
mov
sub
ljmp
xchg
enter
out
lods
or
sarl
sbb
popa
mov
jo
cld
dec
and
dec
shll
sub
out
call
xor
popa
xchg
stos
nop
xchg
jns
fildl
stos
push
cmpb
lds
ja
cli
sarl
xchg
cmp
inc
test
jmp
add
enter
ss
or
lods
jae
pop
sbb
xlat
pusha
test
pop
push
popf
out
or
dec
or
aaa
sbb
dec
movsb
ficomps
mov
and
jle
jmp
mov
push
std
ljmp
sbb
add
movsb
das
jge
outsl
mov
clc
sbb
mov
std
dec
fildl
jns
jns
lea
fldcw
cmp
jmp
cmp
xchg
test
cmpl
ja
fstp
inc
xchg
sub
mov
imul
lcall
fistpll
pop
out
jecxz
pushf
xor
test
add
add
jecxz
xor
and
incl
pop
push
and
push
xor
rol
sbb
mov
je
jae
repz
cmpsb
hlt
cmp
push
xchg
xlat
push
pop
ret
nop
and
filds
push
es
mov
inc
cs
cmc
pop
mov
pushf
ljmp
sub
xchg
xor
inc
jg
aaa
add
into
frstor
mov
inc
scas
clc
decl
jecxz
test
test
inc
lock
or
call
xlat
adc
ljmp
inc
mov
fstp
sub
sub
js
ljmp
insl
and
mov
dec
aaa
sbb
leave
aam
cltd
clc
cmp
lods
mov
inc
sti
enter
dec
filds
je
mov
pop
push
cmp
test
ret
or
ret
pop
repz
out
call
pop
pop
fwait
and
sbb
jp
sti
xchg
ljmp
repnz
jmp
nop
push
addb
test
adc
mov
dec
add
dec
mov
inc
sub
sub
in
inc
iret
out
dec
and
stos
orb
xorl
sbb
nop
lcall
jmp
call
pop
arpl
push
add
cmp
mov
jl
jge
repz
dec
pop
inc
xchg
je
jmp
xchg
dec
test
sarl
retw
adc
adc
cmpsb
das
icebp
or
movsl
mov
bound
incl
push
movsl
jmp
int3
fimull
sahf
test
xchg
push
decb
lods
sbb
lods
dec
cmp
fcomps
dec
mov
jle
in
fs
shrb
cmp
jne
ss
jno
sbb
mov
call
inc
cmpsb
loope
add
repz
or
movsb
dec
sbb
call
sbb
push
or
iret
and
cmpsl
xor
inc
in
mov
insb
icebp
adc
ror
stos
lcall
subb
inc
inc
dec
cmp
fwait
stc
or
addr16
mov
xor
and
adc
repz
and
mov
lahf
xor
pushl
sub
sarb
mov
sub
push
and
mov
call
dec
movsl
add
jo
jmp
add
loopne
aad
mov
call
insb
inc
in
aad
sbb
cwtl
les
aam
or
in
sbb
sub
mov
push
bound
and
and
mov
xor
loope
repnz
cmp
cli
stc
push
add
scas
incl
cmp
out
mov
sahf
cmp
gs
lret
test
inc
xor
pushf
aad
add
call
jle
data16
sub
xor
clc
and
pushf
jg
push
jae
ds
mov
adc
in
jmp
xchg
mov
sub
pop
out
sahf
lahf
mov
ror
loop
scas
mov
jae
lret
in
mov
loope
sahf
in
inc
jno
jg
call
imul
ret
pop
cmp
lret
xor
or
outsl
push
ljmp
mov
std
into
imul
jae
cmp
or
dec
cmp
mov
shll
lahf
inc
nop
popa
mov
xchg
jns
adcb
int
stc
xchg
jg
cmpsb
and
add
pop
adc
daa
jmp
rclb
adc
mov
call
xchg
jae
dec
repz
rcll
insb
and
inc
cwtl
jbe
sub
cmp
mov
xchg
mov
jp
dec
or
push
cmpsb
idiv
scas
inc
xchg
cmp
test
ljmp
test
pop
cmpsb
cltd
flds
imul
fstpt
out
cmp
insb
add
mov
incl
fmuls
ja
cld
outsl
dec
int3
mov
in
loopne
jge
mov
dec
aad
testb
pop
pushl
adc
mov
inc
lods
adc
mov
pop
incb
lahf
pop
and
and
jge
ljmp
fdivrl
lcall
in
cmp
cli
jmp
and
push
fadd
cmp
nop
leave
pop
and
hlt
jne
mov
in
add
es
xlat
sub
pop
ja
lahf
gs
fdivrs
ds
test
pushl
in
movsl
in
int3
inc
lods
pop
ljmp
movl
and
push
in
jge
aad
lcall
xchg
outsb
or
fisttps
incl
orl
xchg
out
push
decl
cmp
xchg
jmp
fistpll
lds
sub
je
rclb
mov
sub
xchg
mov
shll
dec
jb
jmp
xchg
mov
outsl
lcall
mov
mov
mov
fdivp
cmp
xor
gs
mov
dec
aam
jl
popl
lcall
call
fildll
scas
jecxz
mov
inc
cwtl
idivb
or
xor
dec
stos
cltd
cltd
jle
cmp
pcmpeqw
xor
add
sbb
lods
movzwl
ljmp
push
pop
add
push
mov
call
push
insb
jnp
mov
loope
dec
mov
inc
jle
lock
sahf
leave
mov
xor
stc
out
mov
xchg
loope
incl
mov
lcall
shlb
push
pop
repz
std
test
leave
cmp
inc
cli
ret
pushl
pop
and
icebp
push
dec
pop
and
add
sub
sub
cmpsb
lahf
fs
ljmp
enter
adc
cli
sbb
iret
adc
int3
mov
jle
jmp
push
sbb
jmp
call
pop
dec
stos
in
test
aas
fbld
sub
jns
gs
and
out
test
jmp
imul
fwait
rcrb
lods
mov
cmpsb
in
hlt
das
pmuludq
dec
fdivs
push
inc
sub
out
inc
sub
in
pop
jnp
mov
push
cmp
lds
mov
mov
sahf
mov
xor
xor
int3
sub
xorl
call
shll
nop
ficompl
iret
aaa
and
adc
jge
adc
mulb
call
scas
outsb
or
push
cwtl
cmp
jp
js
push
sbb
mov
adc
add
inc
outsl
dec
lcall
ljmp
push
enter
jge
pop
subb
mov
xor
daa
cmp
decl
mov
inc
in
xor
call
lock
lods
xor
jnp
in
outsl
cmp
xlat
mov
fsubs
cld
jbe
fs
jl
push
popf
mov
sub
xchg
adc
push
push
sub
mov
decl
pop
jmp
xchg
jle
pushf
cmp
lcall
icebp
shrb
pop
iret
hlt
jle
movsb
mov
jb
call
and
push
stos
push
or
sti
mov
movsb
adc
push
cmc
lret
adc
fimuls
leave
movsb
decl
mov
pushf
cli
out
jne
cwtl
mov
mov
jecxz
jno
xor
rcr
pushl
aas
and
bound
lea
rol
js
xor
bound
inc
lret
jmp
pushf
pop
cmc
cmp
or
fstl
jp
mov
xchg
sub
enter
sbb
dec
adc
jne
cmp
fisttps
push
test
xchg
mov
add
dec
mov
cli
incl
call
jne
in
incl
sti
dec
test
out
rcrb
aas
or
jnp
inc
adcb
incl
and
cs
mov
stos
repz
mov
mov
mov
in
daa
or
or
xor
sti
push
jbe
fistpl
jle
cmp
into
lcall
clc
mov
add
ret
scas
clc
jmp
add
in
adc
leave
push
cmp
std
cmpsb
inc
xlat
cmp
mov
in
cmp
mov
mov
repnz
call
sbb
jl
add
or
xchg
loopne
daa
repnz
mov
or
testb
cmpsl
lret
ss
call
sub
pop
fidivrs
jne
sub
notl
jo
in
ljmp
dec
mov
cwtl
push
daa
xchg
mov
out
xchg
hlt
push
in
dec
cmp
out
sahf
or
push
incl
push
sahf
js
iret
imul
mov
iret
push
push
xchg
jo
mov
sbb
in
pushf
xchg
scas
setns
movsb
mov
ret
mov
out
loop
cmpsl
out
imul
adc
pushl
adc
jecxz
xchg
out
outsb
xchg
subl
lock
push
mov
mov
ds
call
fldenv
aas
dec
js
mov
jbe
adc
fwait
test
jnp
adc
jmp
push
fwait
jno
pushf
fcoml
pop
or
jb
and
sti
jmp
fstl
shll
ss
and
orb
jge
mov
movsb
inc
ds
mov
cmc
push
test
and
adc
dec
jo
test
mov
jle
push
pop
ret
arpl
es
lcall
sub
sbbb
cltd
push
jecxz
insl
mulb
int3
mov
loope
and
cmp
mov
fisttps
pop
test
faddp
andb
mov
or
sti
movsl
loopne
loop
cmp
xor
call
cmp
je
or
shll
cmc
inc
dec
lds
rorb
and
jmp
sub
dec
mov
add
cmpl
dec
xchg
inc
nop
xchg
out
frstor
out
push
adc
add
push
sbb
int
cmp
pop
push
cmovl
jns
pop
test
jmp
push
cmpsl
in
sbb
mov
push
cmp
mov
mulb
sbb
popf
cmp
xchg
jg
lcall
sub
sub
jmp
pop
dec
enter
inc
xchg
mov
and
add
pushl
inc
aam
jae
cmp
jbe
add
in
xchg
sbb
loopne
fiaddl
pushl
mov
js
mov
daa
ljmp
jl
insl
lds
gs
jp
decl
test
daa
dec
dec
jmp
addl
inc
push
and
ljmp
jmp
out
cmp
mov
dec
xchg
lea
sub
add
mov
cs
aas
enter
stc
adc
sub
into
std
push
lds
jl
ljmp
dec
out
push
and
pop
in
xorb
fcompl
push
cwtl
addr16
mov
jne
jae
bound
ret
cmp
fwait
mov
loope
call
and
xor
cmp
add
cmpl
daa
mov
out
call
decl
jle
mov
mov
pop
stc
js
xchg
sub
int3
out
mov
aas
lcall
xchg
jle
movsb
pushl
stc
aaa
lret
mov
inc
pop
sbb
adcl
lock
fisubrs
mov
inc
or
push
leave
mov
sbb
push
in
out
mov
arpl
dec
adc
in
xor
sub
mov
jecxz
jmp
or
hlt
cmpsb
iret
mov
je
ret
int3
add
xor
repz
push
ficoms
pop
xchg
xor
add
jg
fbld
stc
int
scas
sbb
push
jle
inc
cmpsl
popw
lahf
negb
lods
cld
call
sahf
lods
popf
cmp
jb
push
popa
orb
mov
push
cwtl
repnz
sar
incl
mov
cmpsb
daa
sub
jecxz
hlt
test
add
cmp
cmp
aas
arpl
movsb
mov
adc
outsl
hlt
cmp
loop
fs
out
mov
fildl
notb
mov
jge
mov
and
divl
fistpl
inc
mov
and
add
lods
push
xor
and
ret
sub
mov
ljmp
repz
negb
sbb
inc
mov
pushf
lcall
or
ljmp
jae
data16
lods
xlat
inc
fcomps
and
sub
sub
mov
mov
sbb
xchg
mov
cli
rolb
xchg
push
js
push
xchg
outsb
decl
mov
pop
jnp
mov
add
pop
rcr
imull
cmp
xchg
xor
ja
lcall
bound
nop
outsb
sub
fs
lcall
les
jg
js
sbb
decl
lock
ljmp
loop
mov
pop
xor
lods
test
cmp
dec
cmp
add
mov
imul
jmp
decl
inc
push
sub
xor
inc
sub
outsb
addb
cmpsb
sub
push
call
sbb
push
sbb
repz
or
cmp
fsts
lds
dec
std
decl
inc
lcall
pop
bnd
mov
call
int
jp
pop
pop
sbb
adc
pushl
ljmp
push
or
dec
std
fcomip
xchg
mov
sbb
jno
xlat
or
shl
clc
pushl
mov
scas
fcompp
stos
mov
addr16
sbb
xor
incl
pop
jb
ret
test
sub
adc
les
pop
cmp
cmpsb
fcmovu
xchg
fistpll
mov
jmp
or
add
icebp
fisubrs
test
pmaxsw
push
mov
stos
jecxz
call
push
push
lea
xlat
sbb
add
adc
jns
pushl
push
mov
mov
mov
mov
sbb
std
xchg
jo
or
sub
cli
pushl
mov
mov
icebp
jb
dec
jmp
adc
hlt
dec
pusha
or
ffreep
outsb
lret
popf
mov
xlat
loopne
insl
pop
call
cli
decl
jne
xor
fwait
mov
sub
aaa
into
jmp
fists
mov
stos
lcall
faddl
xchg
push
fbstp
jns
inc
inc
cmpsl
mov
xor
jmp
jge
inc
push
insl
push
mov
mov
adc
repnz
popf
dec
xchg
and
add
lcall
jl
call
sbb
arpl
add
jnp
fs
mov
call
je
gs
icebp
xor
sahf
xchg
mov
adc
adc
rcl
imul
test
xchg
mov
arpl
sbb
and
shlb
cmp
cmp
adc
mov
adc
test
in
imul
mov
scas
data16
call
popa
mov
ret
push
push
xor
loop
nop
subb
movsb
jmp
sub
call
mov
xchg
push
imul
cmp
lret
push
xchg
enter
push
fisubs
loop
loopne
add
jg
inc
adc
pop
outsl
xchg
cmp
nop
dec
faddl
dec
in
sub
out
in
lcall
push
daa
cmp
lock
jnp
pop
or
jle
fsubrl
lret
ljmp
icebp
out
mov
jne
loopne
sub
xchg
xor
cmpb
jmp
mov
insl
das
imul
lcall
xor
xchg
push
dec
pusha
ljmp
js
add
mov
mov
xlat
out
jmp
mov
push
and
decl
mov
lahf
jne
lea
xor
fstpl
jge
or
jmp
dec
lcall
lods
ficompl
int
scas
sub
push
cld
ja
push
stos
add
jg
test
into
inc
sub
stos
push
popa
dec
sbb
call
inc
mov
in
lret
sar
ljmp
out
stos
std
mov
or
sbbl
xlat
jl
mov
decl
aaa
ds
add
loope
push
fcmovnbe
push
lret
add
mov
mov
jbe
jnp
rol
mov
outsl
mov
lcall
jge
mov
test
xchg
mov
imul
inc
push
testl
add
lcall
push
pop
sub
xchg
jnp
lcall
mov
rorb
jmp
ljmp
int
xchg
push
mov
nop
mov
xchg
das
pop
fwait
sub
sub
test
ljmp
ds
mov
ljmp
ljmp
dec
jbe
dec
pop
fstpt
fmul
ficoml
fnstenv
repz
cmpsb
icebp
ror
jbe
cwtl
and
fucomp
cmp
mov
outsl
mov
test
cmp
in
loope
es
mov
ljmp
iret
and
dec
pop
pop
insb
pushf
jge
add
std
out
add
mov
sahf
in
mov
push
mov
mov
loop
call
int
in
or
xchg
in
sahf
mov
bound
jmp
lds
stc
pop
mov
les
add
ljmp
or
cld
aas
push
mov
out
iret
loope
pop
pusha
sub
decl
jg
lods
ljmp
xchg
out
push
pop
or
hlt
push
jmp
fstpl
fisubrs
arpl
jo
lods
and
add
mov
cli
push
cld
ds
call
hlt
icebp
mov
les
sub
popf
inc
ljmp
cld
fs
push
sub
ljmp
xlat
push
stc
inc
pop
lods
ret
sahf
fistps
incl
outsb
cmp
int3
push
adc
jb
std
lock
xor
xorb
fnsave
pushl
cld
ljmp
push
mov
cmp
ds
repz
dec
pop
outsl
jns
mov
jmp
adc
lahf
mov
or
stos
mov
aas
fldcw
ljmp
je
add
mov
lds
jnp
or
out
pop
out
push
fildl
frstor
add
ljmpw
sti
push
mov
enter
mov
and
insb
decl
faddl
mov
sub
lret
push
fisubl
out
mov
ljmp
sbb
rcr
mov
stos
jge
pusha
cmp
dec
inc
nop
mov
pop
adc
popa
add
pusha
push
xchg
inc
out
jne
ficoms
jmp
mov
mov
insl
hlt
in
test
sbb
call
adc
cli
out
ret
notb
aas
test
inc
or
lcall
lcall
pop
lock
dec
popf
push
mov
sbb
es
dec
mov
es
stos
rorl
ja
sti
push
outsl
lods
fwait
cwtl
lock
pop
ljmp
pop
jnp
stc
adc
push
out
cmp
sub
leave
mov
pop
mov
scas
mov
roll
test
jb
push
sbb
adc
decl
movsl
cmc
xchg
adc
cli
inc
mov
add
stos
fdivs
adc
push
mov
mov
lds
out
sbb
stos
cmp
mov
mov
push
inc
jge
adc
cs
inc
mov
cmp
sarl
insb
push
call
push
pop
out
dec
loop
pop
lcall
sub
jecxz
pop
fwait
je
roll
push
adc
xor
ljmp
xorb
test
inc
xor
sbb
pop
sbb
adc
add
adc
incl
jo
ja
loope
into
arpl
mov
dec
sub
xor
xor
inc
cld
jg
pushl
pushf
mov
adcb
pop
orl
ja
xchg
mov
and
push
mov
adc
dec
leave
scas
mov
dec
cli
mov
cmc
fst
adc
clc
stos
cld
push
pop
push
div
mov
inc
lea
or
mov
mov
lcall
or
mov
fwait
jb
aad
sbb
stc
lds
aad
sbb
imulb
sub
aam
inc
incl
mov
mov
clc
inc
xchg
pushf
fildll
mov
data16
sbb
sahf
scas
mov
call
mov
mov
mov
sbb
bound
mov
sub
scas
jnp
hlt
popf
cli
cmp
lods
inc
mov
inc
adc
and
mov
sar
jg
stos
out
pop
call
mov
in
cmpl
lcall
inc
jmp
insb
loope
clc
cmp
sar
add
repz
insb
jae
lcall
pop
xchg
int
pushf
mov
jnp
pop
cs
stos
aas
sbb
ret
cld
lods
data16
fstl
fsubl
xlat
jns
cwtl
push
shrl
jo
jns
adc
lock
decl
sbb
das
adc
lcall
shr
xlat
jecxz
mov
outsl
mov
jbe
clc
mov
fdivl
repz
cmp
fmul
cmc
mov
ret
imul
out
sbb
mov
xchg
sub
leave
insl
push
imul
int
mov
loope
sbb
xchg
test
shrb
add
sbb
out
outsb
sub
pop
std
ljmp
outsb
fs
rcrb
xchg
stc
jle
sub
dec
jns
mov
push
or
sbb
xor
cmpsl
imull
out
fsubp
decl
or
mov
push
dec
iret
jae
or
push
cmp
add
stos
enter
mov
cli
dec
das
inc
adc
test
incl
nop
je
mov
ja
shr
add
pop
push
inc
or
add
ds
and
icebp
pusha
push
mov
inc
lcall
ja
in
jb
or
lods
arpl
cltd
leave
movsl
fcomps
call
cld
lods
bound
mov
data16
push
outsb
cmp
mov
pushl
push
xchg
lods
ja
fcmovnb
fdivrs
push
mov
jp
sbb
aas
stos
sarl
cmp
sub
xor
lcall
xchg
sub
or
decl
or
ret
cmp
adc
call
inc
scas
xor
cmp
ljmp
lcall
ljmp
adc
loopne
stc
clc
or
push
into
gs
mov
decl
sbb
dec
or
call
jge
pop
test
ljmp
int
stc
jge
or
into
mov
mov
mov
pop
jne
push
ljmp
ret
scas
mov
rolb
fmull
push
fisubs
fmul
sub
fidivrl
les
ljmp
addb
sbb
fcmovnbe
add
or
mov
inc
xlat
inc
add
dec
cmp
inc
push
aam
idiv
jg
dec
push
test
mov
pop
adc
fwait
cmp
aaa
xchg
jmp
xor
sbb
mov
std
or
stos
ret
add
and
ss
insl
xchg
jno
dec
dec
cmp
aas
adc
repz
sarl
and
xchg
cld
inc
out
sbb
mov
sbb
ljmp
loopne
pop
add
ds
cmpsl
subl
push
movsl
xchg
xchg
mov
aam
imul
call
stos
dec
shlb
inc
sub
stos
leave
dec
push
jno
mov
push
mov
mov
push
pop
or
loope
push
pop
insb
rcrb
sbb
mov
pusha
push
rcll
incl
dec
in
loopne
scas
push
cmpsl
mov
popf
or
int
mov
sub
lock
dec
mov
rorb
jbe
adc
mov
or
icebp
mov
push
std
decl
inc
xchg
and
incb
sub
inc
ss
jge
js
int
jnp
inc
stc
bnd
lcall
ss
jp
cmpsb
jnp
in
enter
mov
mov
stos
cmp
fs
jbe
mov
or
clc
cmp
mov
insl
hlt
js
sub
jo
add
clc
scas
fcomip
aas
insb
adcb
neg
jmp
out
sub
leave
cmp
or
fwait
out
punpcklbw
cmpsl
leave
data16
lds
mov
pop
cmc
pop
pop
cmp
push
adc
shl
mov
sbb
lcall
cmp
pop
shll
leave
xchg
mov
fisttps
pushw
cmp
jmp
mov
movsl
dec
jl
scas
lea
mov
pop
loop
sub
mov
clc
daa
adc
ljmp
dec
pushf
jp
sahf
movsb
ja
aaa
into
pop
sub
sub
pushl
fsubrl
pop
scas
or
fcompl
enter
arpl
and
out
mov
push
cmpsb
push
cs
jns
pop
adc
cwtl
xchg
lret
lods
mov
lock
call
ss
pop
pop
adc
pop
mov
mov
iret
dec
xchg
or
cltd
fs
fidivrs
call
cmpsb
and
or
and
mov
incl
fcomip
and
ljmp
push
sbb
and
repz
fistl
lret
fwait
push
dec
test
mov
xor
in
cmp
ds
insb
cmp
pop
push
lock
outsl
mov
pushl
or
pop
mov
daa
lds
loope
pop
sub
cmp
cmpsb
inc
movsb
lods
xchg
dec
or
cmpsl
jbe
adc
incl
sub
mull
jl
popl
cli
fwait
addr16
ror
decl
xchg
dec
jnp
loop
lods
stc
enter
rcll
sub
dec
cmp
out
sar
sbb
cli
mov
or
pop
or
dec
mov
es
lods
out
pushl
fcomps
int3
mov
leave
pop
mull
fs
call
mov
mov
std
xor
cmpsb
test
pop
in
jb
out
cmpsl
sub
mov
sti
sub
cmp
rcrb
lret
lds
stos
jmp
lods
lahf
sbb
lcall
pop
mov
mov
mov
xchg
inc
lcall
sub
mov
pushl
adc
mov
sub
test
out
popf
ss
mov
pop
cld
lcall
xor
ret
fidivrl
fisubs
mov
std
out
fistl
daa
sahf
movsl
sbb
pop
jmp
sti
push
shr
jnp
bound
jp
cld
fsubr
in
sti
pushf
sbbb
adc
pop
int
lock
sti
jmp
lret
adc
xchg
outsl
aaa
adc
rclb
jl
call
addr16
imul
je
dec
xchg
hlt
out
pop
rcrb
decl
stos
int
dec
pop
sar
outsl
cmp
in
ds
pushl
pusha
sbb
dec
outsl
jno
xchg
adc
lcall
mov
fs
and
or
sbb
cmp
or
adc
push
lods
mov
inc
jp
mov
and
scas
cmp
mov
lcall
cmpsl
std
dec
cltd
int
cs
jmp
pop
jle
mov
data16
mov
pop
retw
cld
mov
scas
push
lds
dec
inc
fstps
jge
jae
pop
cmp
jo
sarl
repnz
call
add
das
in
out
idiv
push
mov
inc
sub
mov
lret
lea
push
sahf
lods
cmp
decl
aaa
push
sub
sub
test
aad
or
and
imul
jae
pop
mov
ljmp
adc
sbb
xor
leave
sti
mov
sbb
push
aaa
and
ljmp
sub
push
sbb
and
decl
sub
push
push
add
out
ficompl
adc
nop
xchg
les
test
add
aaa
push
into
fcoms
lret
lcall
lahf
comiss
jle
push
enter
lock
scas
imul
inc
dec
pop
loope
jle
add
adc
jo
jae
fnstcw
test
sbb
mov
pop
loop
loope
std
lcall
in
ret
or
out
add
es
push
push
imul
in
enter
aaa
adc
bound
int3
filds
insl
imul
movsl
in
or
pop
pop
mov
pushl
and
xchg
rcrl
lds
test
mov
fwait
add
insb
dec
adc
cmp
loop
inc
jno
je
inc
sub
jne
vpcmpeqw
out
orl
mov
repz
dec
cmp
push
repnz
mov
pop
sub
or
xlat
std
jno
sarb
mov
jle
mov
ret
xchg
mov
insb
xchg
hlt
rcrl
mov
call
mov
lock
pop
test
pop
daa
out
xlat
sub
pushl
negl
mov
lcall
push
add
repz
dec
call
cmp
xor
mov
jecxz
ficoms
adc
adc
call
xchg
jg
fwait
in
cmpsb
scas
lcall
scas
xchg
push
push
dec
xchg
cmp
loope
or
stos
data16
call
dec
stc
pop
or
shlb
loope
jmp
inc
xorl
cmp
add
mov
sbb
outsb
pop
rcrb
jne
jb
xor
jg
mov
out
imul
or
and
add
fisttpl
addr16
cmp
cmpsb
add
out
inc
andl
cmp
mov
js
mov
call
push
jge
loope
dec
pop
adc
mov
inc
sbb
lock
jle
test
roll
xchg
pushf
cmc
sbb
divl
es
sbb
jmp
ljmp
inc
xchg
bound
pop
inc
lcall
and
jmp
add
adc
pop
dec
mov
addb
jmp
xor
decl
lock
xor
out
shl
mov
loope
jnp
lcall
stos
pop
call
clc
nop
jecxz
insl
fldlg2
xchg
lret
int3
xorb
jmp
xchg
movsl
dec
sbb
ss
jbe
das
lret
jno
minps
sub
sub
loop
jg
sub
push
in
ds
test
mov
sub
roll
mov
and
adc
and
movsl
fst
adcb
call
add
imul
test
mov
and
dec
jae
call
jg
enter
xor
scas
fwait
jo
mov
lcall
call
int3
mov
lcall
outsl
das
mov
or
push
stos
jbe
stos
push
sbb
or
sbb
pop
xor
repnz
jno
les
clc
inc
sub
outsb
add
or
and
call
ss
mov
push
scas
test
ret
jb
or
jmp
xchg
cmp
std
out
cli
call
and
mov
lahf
int3
jae
sub
in
pop
ljmp
lock
test
push
dec
jb
adc
aas
iret
in
dec
add
mov
add
stos
ss
mov
lahf
mov
dec
ja
xchg
jge
dec
outsb
jb
xor
insb
mov
jecxz
ljmp
cmpsb
mov
test
adc
mov
subl
outsl
add
icebp
jo
aad
cld
incl
xchg
mov
push
in
mov
pop
xchg
mov
cli
clc
cs
lock
mov
mov
arpl
call
push
ret
cli
xor
cmp
mov
es
movsb
xchg
mov
lcall
lods
pop
jl
sub
loopne
lahf
aad
inc
loopne
fimull
jno
incl
nop
push
dec
imul
lods
add
xchg
inc
iret
stos
pop
iret
arpl
adc
or
mov
fdivrs
mov
sub
jg
pop
xchg
fstl
dec
mov
xchg
push
dec
je
pop
hlt
bound
ficompl
mov
fsts
jmp
insl
ds
lock
or
les
pop
lret
mov
lret
call
sub
xor
pushf
ret
pop
pop
add
shll
pushf
mov
pushl
test
and
popf
xor
pop
dec
dec
adc
int3
push
mov
fidivl
cld
test
imul
ss
decl
repz
mov
mov
fcoms
and
xchg
push
mov
cld
popa
addr16
test
andb
jge
fcmovnb
pushl
call
repnz
stos
cmp
cmpsb
sub
nop
jae
push
cld
mov
lea
push
rol
cmp
dec
push
and
repz
insl
xor
cli
lods
lea
repnz
pop
xor
push
cmpsl
mov
test
inc
mov
sti
cmp
and
push
jbe
lret
push
adc
movsl
out
loopne
ret
sub
inc
sbb
inc
int3
je
push
dec
jp
out
ret
mov
mov
js
push
add
outsb
mov
xor
pop
clc
and
ds
add
les
pop
cs
xchg
or
mov
sub
push
mov
xor
add
call
mov
jl
aad
dec
jbe
cs
in
in
loopne
out
int3
pop
fcomip
lea
jno
dec
pop
dec
lods
lock
cmp
mul
mov
xor
imulb
adc
fldl2t
aam
test
jg
adc
pop
mov
cmp
pop
cs
idiv
gs
mov
cmp
int3
scas
scas
mov
in
dec
dec
lcall
jb
int
in
jnp
fcmovu
mov
pop
adc
add
in
cmc
aad
sar
decl
aas
lcall
jmp
aaa
pop
shll
aam
rclb
lahf
sbb
ljmp
data16
test
push
xor
fldt
rcrb
jo
stos
sub
pushl
dec
mov
mov
sub
negl
stc
push
sbb
inc
xchg
aaa
insl
mov
stc
mov
pushl
stc
mov
cmpsl
mov
xchg
push
sub
or
fisttps
incl
cmpsb
movsb
ss
and
sbb
shrb
mov
or
xor
cmp
sub
pop
add
pushl
cmpsl
cmp
addl
inc
andb
push
lcall
in
mulb
je
ss
nop
sub
pushl
shlb
mov
xchg
mov
call
inc
icebp
das
pop
mov
sub
iret
adc
lods
mov
test
dec
mov
clc
imul
enter
inc
outsb
int
aam
loopne
in
mov
push
rclb
movb
call
xor
sbb
push
mov
xorb
xor
sbb
dec
mov
xor
decl
aad
das
mov
aam
mov
ret
scas
sub
out
mov
call
call
cld
inc
nop
inc
dec
mov
pop
jne
into
push
fildl
pop
cmp
inc
jl
push
bound
outsl
push
aaa
cs
mov
js
push
pusha
cld
add
dec
call
cli
cwtl
lock
idivl
ljmp
out
mov
adc
mov
ret
dec
xor
pop
aam
cmp
nop
jmp
decl
sub
push
std
inc
dec
inc
xor
ja
loope
mov
movsb
mov
mov
pop
ud0
dec
mov
popa
or
cld
mov
out
add
in
jg
push
shr
imull
cmp
push
cmp
pushl
movl
mov
repnz
inc
mov
rolb
das
cli
ljmp
jmp
cmpb
in
cmpb
sbb
decl
sbb
jl
imul
out
inc
add
repz
fldt
lret
jmp
sbb
call
gs
push
notl
sbb
xchg
mov
sarl
and
dec
pop
lahf
mov
iret
leave
adc
cmp
and
dec
stos
pushf
int3
sbbb
sbb
lret
jmp
jmp
mov
out
fildll
dec
cmp
pop
sub
push
push
ljmp
dec
outsb
movsl
jo
and
jg
dec
imul
stos
jb
andb
jg
call
mov
nop
mov
rolb
and
adc
cli
es
dec
in
pop
dec
out
testb
push
lcall
popa
add
test
jbe
into
ljmp
dec
inc
and
clc
lcall
dec
movsl
in
push
cmp
lcall
je
jno
and
mov
push
ficomps
cli
push
sbb
push
mov
pusha
movsl
jae
fisttpl
shrb
push
inc
pop
mov
push
mov
jmp
inc
sti
mov
cmpl
repnz
clc
cs
pop
sbb
adcb
addl
incl
daa
cmp
jge
add
xor
pushf
pop
test
or
lcall
push
aas
shr
lahf
das
jb
xor
add
jl
cli
mov
dec
dec
cli
into
mov
pushl
push
pop
xor
pushf
xchg
xchg
sub
addl
lea
in
lcall
xor
repz
sbbb
adc
pushf
scas
sbb
inc
inc
cltd
mov
pop
lret
adc
call
pop
stos
ret
loopne
ret
pop
dec
xor
movsl
rolb
call
pop
mov
lcall
stos
movsl
minps
lret
dec
mov
jecxz
xor
push
sub
or
mov
dec
arpl
int
or
lcall
aas
mov
cmp
stos
and
and
dec
aad
pop
jg
pushl
dec
xchg
xchg
out
jecxz
add
jo
mov
ret
out
mov
test
mov
imul
pop
js
mov
daa
fiadds
test
je
and
repnz
sub
ficomps
decl
je
out
xlat
mov
xchg
sub
push
adc
fs
jns
fsubrp
sahf
sbbl
aas
mov
add
gs
and
xchg
insl
sarl
and
inc
xchg
adc
push
into
jg
lcall
adc
push
lret
jns
popf
adc
cmpsl
add
jo
lods
sbb
jmp
outsb
cmpsl
sbb
lcall
gs
xchg
imull
xchg
sub
push
leave
mov
jno
ror
add
or
fisubl
xchg
ret
cmc
gs
lods
into
mov
mov
scas
jmp
loope
cmpl
jae
repnz
addr16
adc
push
mov
sahf
outsb
cmp
fistl
jmp
push
dec
mov
stc
sti
cwtl
shlb
mov
inc
ficoms
test
cltd
add
lcall
xor
jo
leave
loop
jp
or
arpl
insb
mov
repz
dec
test
lods
sub
or
decl
xor
cltd
push
repnz
pop
out
pop
pop
sti
xchg
fwait
outsb
mov
inc
adc
push
xchg
mov
cmc
cmp
fnstsw
popf
cltd
sbb
and
icebp
dec
aas
inc
xchg
fnsave
scas
lock
pop
test
xchg
shlb
cli
jne
sub
lcall
test
mov
mov
and
imul
out
inc
mov
inc
out
mov
cmp
or
mov
cwtl
cmpsl
lods
dec
stos
pop
add
lcall
dec
dec
lock
out
sahf
cltd
xor
and
lock
adc
jl
repz
jl
in
cmp
pushl
std
call
sub
pop
sti
adc
dec
push
or
mov
adc
adc
cmp
add
sub
sbb
and
call
sub
or
and
adc
popa
mov
xor
push
lret
lcall
mov
imul
mov
pop
shrl
mov
fisttpll
ds
imul
pushl
lock
ja
dec
jg
sub
sbb
lds
inc
xchg
gs
jne
sbb
decl
pop
mov
xchg
pop
push
mov
cmc
or
addr16
pop
out
inc
push
mov
xchg
add
call
shr
arpl
ret
sub
sti
and
sub
std
and
aad
push
scas
pushf
pushl
xor
ret
das
xchg
push
xchg
pop
xor
lret
jge
jg
test
pop
out
dec
popf
cmpsb
dec
mov
mov
enter
add
ljmp
push
sub
stos
shll
and
fsubl
aad
jl
insb
int3
inc
adc
xor
lcall
dec
cmpsb
adc
ficompl
mov
cmc
push
adc
fcos
lcall
push
fiaddl
dec
jnp
les
fdivr
pop
pop
push
sbb
es
repz
int
insl
push
nop
aaa
dec
adc
lcall
std
pop
sti
dec
test
jmp
adc
cltd
scas
mov
xor
pop
stos
jge
inc
outsb
inc
push
dec
pushf
push
ret
test
gs
paddq
cmp
sub
aad
xor
call
std
cmpl
lods
cwtl
add
jae
dec
lcall
inc
or
push
daa
dec
push
pop
cmp
mov
int
sub
or
xor
subl
dec
mov
jmp
incl
mov
addr16
jp
push
fcmovnb
dec
fsubrs
ja
dec
cmp
push
push
push
jp
jne
lahf
pop
inc
lcall
xorl
jge
sbb
pop
fdivl
roll
insl
stos
dec
incl
xchg
sub
inc
jb
cmp
fbstp
xor
mov
adc
out
inc
adc
inc
cli
cld
sarl
ds
rcr
push
pushf
outsb
loope
cmp
pushl
adc
rclb
pop
int3
sbb
push
test
xor
lcall
out
cmpl
add
sarb
add
push
repz
jg
mov
sbb
iret
fcoms
repnz
cwtl
leave
or
mov
jmp
outsl
xor
jbe
xor
mov
sub
aaa
jae
add
xchg
xchg
jmp
ljmp
sbb
inc
repnz
cmp
test
pop
inc
ja
adc
or
in
das
mull
inc
loop
lahf
jo
call
int3
adc
pop
xor
push
out
sar
pushl
das
push
sbb
das
bound
ljmp
cmc
loope
xchg
adc
aaa
cmp
out
or
or
xlat
insb
iret
xchg
xchg
insl
push
or
leave
add
cmc
dec
pushl
in
cwtl
repnz
or
addr16
clc
xchg
lock
fstpt
insl
hlt
jne
pop
push
push
bound
mov
push
cmp
push
dec
pop
mov
jl
xor
dec
jo
rcrb
das
cli
decl
pop
sbb
or
test
jnp
add
dec
xchg
push
jp
inc
mov
enter
xchg
addr16
inc
xchg
cmp
loop
cltd
and
and
jg
adc
rolb
xor
push
ret
test
sub
addl
jno
push
inc
lea
pushl
add
mov
in
add
push
ret
jo
xchg
cld
jb
ds
sbb
out
scas
decl
xor
sbb
ss
ljmp
and
pop
dec
loop
jnp
inc
sahf
iret
mov
out
mov
scas
pop
fcompl
call
and
test
dec
or
xor
and
aaa
fldcw
cmc
inc
and
stos
and
jge
adc
and
lds
jbe
or
jb
add
testl
jns
ljmp
jb
push
or
xchg
lcall
incl
add
clc
xchg
push
cs
sub
or
push
test
dec
jl
mov
addr16
lcall
jbe
repz
fsubrs
rcr
or
adc
xor
add
ljmp
into
or
jnp
das
xchg
iret
out
loope
ja
sub
jg
jg
jne
sbb
scas
loopne
in
cmc
lea
js
std
enter
pop
ljmp
sub
mov
fcomp
xchg
out
mov
test
and
movsb
sahf
inc
and
decl
sbb
add
sub
rol
adc
mov
inc
jl
dec
and
jmp
call
dec
subb
movsl
rcll
xchg
aas
mov
int
inc
pop
cli
js
push
xor
icebp
and
inc
xlat
dec
jb
cmc
test
jecxz
adc
mov
mov
je
ljmp
add
mov
addr16
jne
pusha
test
push
inc
out
push
in
ficoml
fadds
adc
pop
aam
scas
pop
call
mov
lret
mov
pop
lcall
mov
adc
adc
push
dec
ret
rcll
xor
and
inc
gs
call
loopne
mov
fdivs
xchg
mov
outsl
pop
sahf
leave
call
jbe
and
ljmp
xchg
sbb
sub
loopne
and
mov
jp
into
jns
xchg
mov
dec
xchg
xlat
pop
add
testb
mov
xor
ficomps
repz
mov
jg
inc
push
lahf
loope
sbb
sarb
and
sbb
scas
add
nop
jecxz
incl
clc
push
call
in
aam
rolb
in
int
mov
add
cmpsl
cltd
mov
lcall
xchg
jae
adc
sub
inc
cmp
aaa
or
sbb
dec
jmp
popa
push
bound
lcall
pop
mov
arpl
fisubl
cltd
sti
data16
incl
test
mov
mov
fadd
cmp
cmp
pop
stc
mov
inc
and
jmp
xchg
or
cmp
add
rclb
sub
jb
cs
fldl
test
call
enter
cmpsb
sbb
add
mov
cmp
mulb
mov
xchg
cmp
imul
push
xchg
mov
fwait
or
dec
insl
sub
decl
add
sub
sbb
mov
loopne
fisubrl
dec
shll
jmp
sbb
and
mov
filds
cmpsb
jge
push
andb
addr16
pushf
jmp
xchg
or
adc
mov
jb
and
jmp
mov
aad
mov
pop
movsl
mov
lcall
arpl
cs
pop
or
jns
sub
sbb
mov
push
push
sub
mov
xlat
sbb
daa
push
dec
or
adc
outsl
inc
dec
inc
lahf
or
pop
xor
xchg
in
sahf
inc
je
add
jmp
or
into
mov
ljmp
cmpsl
and
cmpsb
cwtl
loopne
pop
divl
push
out
popf
loope
scas
lahf
in
mov
out
cli
aas
or
and
cmp
sub
mov
jl
js
dec
dec
shlb
fcmovnu
jne
add
out
cli
push
push
rclb
dec
scas
inc
loop
mov
ljmp
dec
scas
data16
xchg
and
mov
pop
je
xlat
test
call
mov
scas
insb
das
fisttpl
mov
jl
lret
sbb
add
and
fcompl
out
out
push
movsb
fnstsw
pop
jo
push
icebp
cmpsb
xchg
jno
pushf
pop
xor
fidivs
mov
pop
mov
or
test
jp
lcall
sub
mov
ljmp
mov
mov
pop
rclb
xchg
mov
xchg
inc
jmp
pushl
push
inc
fdivp
mov
ret
adc
in
push
gs
mov
int3
sti
add
mov
inc
mov
sahf
int
fildll
sbb
decl
lret
scas
out
jo
pop
push
std
xchg
cmp
lret
lods
lret
or
in
stos
mov
mov
push
stos
xchg
in
fcoms
mov
pusha
and
popf
jge
ds
adc
ljmp
sbb
rcll
sub
mov
mov
pop
push
cmpsl
push
loopne
out
cmp
test
lcall
push
push
and
cmp
push
aaa
pop
addr16
stos
jge
ljmp
jecxz
sahf
dec
stos
xchg
xchg
add
in
dec
test
push
add
jbe
stc
popa
test
xchg
leave
ljmp
cmc
push
iret
cmp
in
fldenv
shlb
fidivrl
or
push
push
mov
fdivr
adc
rcll
out
stos
mov
call
ljmp
push
dec
mov
inc
jns
inc
aad
adc
call
fdivs
mov
hlt
jl
in
jae
test
xor
sbb
jg
mov
pushl
out
iret
js
daa
mov
insb
es
push
out
inc
add
inc
push
push
int3
stc
ret
aas
or
mov
in
movb
stos
in
xchg
or
jae
adc
inc
jecxz
pop
xor
jp
mov
cmc
add
cmp
pop
insb
xchg
scas
sahf
jle
jl
push
jle
pop
inc
sub
and
jns
mov
mov
adc
leave
pop
inc
imul
dec
add
addl
addr16
add
sarb
pop
sbbl
test
cmp
sub
push
ljmp
xchg
ljmp
add
ror
lahf
add
cltd
cmpsb
mov
mov
sub
dec
pop
mov
xchg
repnz
jge
cmpsl
popl
mov
push
mov
inc
inc
xor
imul
dec
adc
lahf
jno
mov
xor
sub
jg
sti
aas
int3
fnsave
xor
addr16
pop
je
cmp
xchg
jle
std
pop
hlt
jmp
in
jae
dec
clc
add
loop
jae
fadds
pop
mov
cltd
int3
das
mov
mov
or
int
push
push
xchg
mov
push
ret
jb
cmp
or
push
int3
add
es
push
xchg
pushl
jbe
sbb
outsl
sub
andb
aam
les
int
sbb
decl
mov
loop
jmp
cli
push
inc
lahf
popa
aaa
pop
psrlq
mov
addl
js
aas
std
daa
popa
mov
loope
fadds
shl
lcall
arpl
call
cs
mov
lcall
inc
adc
std
pop
fst
adc
scas
fadds
mov
outsl
add
lahf
jne
jl
cli
cld
mov
push
cwtl
es
call
mov
cltd
stos
push
rcl
sbb
cwtl
adc
xchg
push
ljmp
or
and
das
adc
cmp
in
push
jp
push
dec
dec
jmp
push
adc
pushl
clc
fwait
scas
in
gs
in
sub
jb
call
xlat
cli
mov
add
out
mov
sarb
fldl2e
orb
out
js
mov
dec
and
in
push
dec
in
lcall
mov
or
pmulhw
mov
adc
mov
add
out
xlat
pop
mov
mov
cmp
add
into
inc
repz
ljmp
add
pop
inc
stc
jne
adc
adc
or
fwait
arpl
jmp
ret
jl
popa
outsl
or
testb
sub
nop
mov
jl
jle
lods
mov
push
jo
jmp
daa
rolb
out
pop
or
add
sysexit
mov
dec
test
shl
std
adc
sub
outsb
add
ror
out
js,pn
adc
out
ficomps
cmp
inc
mov
pushl
mov
and
repnz
dec
mov
pop
adc
sub
lahf
cmpsl
xor
sahf
inc
shll
mov
dec
xchg
cmc
call
test
mov
sahf
scas
sub
cmp
movsb
sbb
outsw
or
jmp
es
inc
adc
add
xchg
sti
pop
lcall
mov
dec
notl
push
test
mov
incl
xchg
inc
inc
jae
lret
push
mov
cmpsl
jbe
call
es
inc
pop
cmp
stos
dec
mulb
adc
ficomps
inc
cltd
pop
stos
or
fs
cmpsb
mov
cld
cmpsb
sahf
test
jb
cmp
mov
in
push
lods
ljmp
in
mov
mov
pop
movsl
imul
add
push
push
push
jmp
fcompl
pop
mov
cld
aam
test
movsl
xchg
dec
mov
loopne
dec
incl
jl
xor
xlat
xor
popf
xor
je
inc
hlt
dec
lret
decl
or
mov
sub
in
and
pop
sub
movsb
or
das
xchg
call
or
dec
and
and
jae
or
sbb
dec
imul
jg
ds
jg
jbe
int
flds
push
hlt
and
in
ja
mov
jmp
ljmp
pusha
add
pop
mov
dec
add
in
les
push
dec
popf
into
push
arpl
jmp
repz
pushf
dec
cs
das
stc
inc
mov
iret
jl
push
ss
xchg
insb
jbe
inc
mov
mov
jge
or
inc
repnz
es
jg
in
ret
jmp
js
out
jo
xchg
fildll
dec
and
sub
pusha
stos
mov
jmp
xor
mov
add
jbe
mov
shl
mov
push
test
out
lcall
sbb
inc
dec
nop
xchg
cmp
and
xlat
test
and
jge
pop
inc
jb
sbb
mov
dec
call
add
dec
test
mov
jmp
add
mov
stos
push
cs
incl
cwtl
in
dec
adc
or
add
cli
decl
mov
or
cmp
lods
xor
sub
add
call
pusha
test
sti
daa
push
lods
inc
out
sbb
dec
and
xchg
mov
jmp
scas
pushl
into
mov
adc
mov
scas
push
inc
xchg
iret
sbb
cmc
push
loopne
call
dec
sbb
test
inc
dec
fwait
cmpsb
filds
sbb
loop
mov
int3
mov
push
and
aad
je
je
test
add
xchg
jg
mov
fcmovb
loopnew
fs
fs
sub
push
pusha
mov
ljmp
shll
nop
lock
mov
push
dec
mov
jp
and
mov
aaa
sbb
hlt
ljmp
sahf
pop
mov
decb
cmp
sub
pop
loop
jge
push
mov
decl
add
es
inc
inc
push
iretw
dec
fwait
in
adc
cmp
sbb
cwtl
push
and
sbb
incl
cli
fnstsw
mov
mov
sub
mov
int3
cmpsb
jne
in
pop
ja
sahf
loopne
pop
sbb
push
jbe
cmp
inc
ds
ret
xchg
out
adc
mov
lret
pop
addr16
jns
in
xchg
xchg
stos
sub
add
add
aas
lret
cmp
sar
call
jo,pn
pop
sub
jbe
aad
into
cli
cmpsb
fwait
or
dec
jecxz
jecxz
push
jns
lahf
jge
aad
sbb
xorl
lea
jno
gs
insb
jae
cli
cmpsl
loope
call
movsl
pusha
out
incb
sub
jp
pop
aaa
push
xlat
movsl
and
test
into
push
mov
adc
fcomip
ljmp
dec
cltd
ret
das
jbe
imul
jbe
shrl
inc
enter
lcall
outsl
adc
push
dec
ja
mov
fcoms
pop
adc
xor
or
mov
sbb
dec
xchg
pop
rcrb
or
cwtl
and
imul
cmp
dec
loope
mov
and
lods
xor
subl
mov
lea
fisubs
mov
std
sub
pusha
xchg
cmp
pop
xor
add
ljmp
dec
aaa
fisttpl
hlt
push
push
iret
adc
jecxz
cld
push
xchg
incl
add
fcoms
dec
xor
inc
add
loopne
dec
in
fldcw
call
int
pop
cmp
pusha
jnp
ret
loop
add
lcall
stos
fisttpl
xchg
xlat
push
sti
cmpsb
or
mov
mov
repz
mov
inc
bound
or
lods
stos
adc
or
xor
inc
pop
sbb
jo
cmp
and
jmp
sarl
cli
gs
pop
push
sbb
xor
lcall
xor
or
pop
stos
mov
jo
add
movsb
gs
jmp
lahf
sahf
jmp
lcall
std
shll
ljmp
mov
add
jnp
cs
mov
scas
in
data16
adc
decl
sbb
mov
push
jne
or
pop
jecxz
mov
xchg
jecxz
into
xor
fidivl
cmpsl
fstps
test
in
lods
hlt
jg
mov
push
inc
push
cmp
push
add
and
sbb
repz
mov
sar
cld
aaa
aaa
test
imul
fistl
jnp
pop
icebp
push
xchg
jmp
in
xor
pop
xchg
sarl
outsb
in
push
pop
xchg
mov
add
jg
data16
adc
int
jmp
mov
daa
sbb
out
fcomip
pop
dec
cmpb
sub
or
incl
or
fs
xchg
or
add
arpl
lret
jg
fsubrp
fwait
outsl
or
rcrb
stc
incl
filds
add
lock
cmp
popa
dec
mov
ud0
stos
mov
int
jb
cmp
fsubl
sbb
popf
push
icebp
fcomip
inc
lahf
jae
push
xchg
mov
xchg
push
rorl
clc
lods
and
ret
mov
stos
popa
call
jmp
cmp
and
fnstsw
inc
sub
outsb
iret
sbb
aam
sbb
hlt
mov
ljmp
sub
lcall
rorb
pop
stc
fbld
push
mov
ljmp
pushl
fisubs
cmp
cmpsb
adc
dec
add
mov
xor
out
cli
jle
ret
jle
pextrw
xchg
xchg
cli
lods
aaa
leave
lock
ljmp
stc
dec
xlat
push
lcall
fldcw
fbstp
stos
mov
jne
pop
adc
pop
icebp
sarb
xchg
add
mov
mov
and
enter
jno
inc
cmpsb
inc
in
inc
inc
lret
push
stos
add
sahf
push
lcall
inc
and
nop
mov
xchg
mulb
lret
hlt
rorl
lods
out
jecxz
inc
cmpsb
cmc
jmp
pop
stc
push
pop
lret
in
lods
in
sub
insl
ds
sarb
cmc
cltd
in
sbb
sub
add
sbb
or
xchg
rolb
and
sbb
mov
incb
subb
cmp
inc
adc
mov
cmp
cmp
mov
jno
or
aas
jo
mov
insl
aas
cld
jno
icebp
cwtl
cmp
ret
repnz
sar
dec
mov
sahf
inc
in
es
out
pop
mov
arpl
jne
pop
inc
out
mov
mov
add
leave
out
les
push
leave
sub
jmp
pop
dec
int3
out
das
nop
test
clc
lods
std
sbb
dec
fisttpl
pop
out
pop
cmp
jmp
jne
bound
push
insl
fldcw
lret
dec
xchg
lret
mov
adc
lds
cltd
mov
repz
inc
enter
cmpsl
cmpl
push
repz
loopne
aaa
mov
mov
sahf
mov
in
aam
inc
outsl
push
mov
sar
add
push
dec
push
or
jbe
jecxz
mov
cmpsl
scas
lods
jno
jns
out
frstor
cmc
imul
out
inc
sbb
ljmp
xchg
add
fs
out
nop
lock
out
das
shrl
pusha
mov
fmuls
je
or
outsb
sti
ljmp
mov
out
jbe
jnp
xor
movsb
pusha
sbb
fbstp
in
or
pop
stc
dec
int
lods
or
aaa
data16
call
inc
imul
sbb
roll
scas
loope
dec
jg
mov
fldcw
das
add
clc
jo
in
mov
mov
push
lods
or
pop
arpl
shr
sbb
enter
stc
movsb
aas
jle
pop
mov
xchg
sub
dec
mov
insl
lahf
icebp
mov
icebp
sarl
pop
mov
andl
fldl2e
dec
aaa
xchg
xor
into
add
stc
inc
cmp
mov
mov
hlt
out
cmp
pop
leave
jbe
shll
sbb
sbb
in
cmp
mov
outsb
adc
clc
in
xor
push
sbb
nop
pop
lret
cmpsl
adc
push
adc
cwtl
clc
shrb
push
inc
xchg
push
cltd
mov
add
iret
repnz
clc
and
call
in
sbb
stc
lods
popa
push
sbb
fs
dec
and
jnp
stc
sub
hlt
mov
loopne
cmpsl
jae
jno
or
xor
inc
aad
mov
inc
push
iret
inc
add
cmp
sbb
imul
cwtl
inc
jp
stos
xor
call
sub
sub
mov
aas
mov
sbb
xchg
dec
jmp
out
enter
popa
mov
or
mov
add
push
cmp
add
addr16
ljmp
mov
cmc
subl
ror
dec
pop
xor
push
push
cli
pop
sahf
cmp
lret
mov
jecxz
xchg
sahf
adc
mov
xchg
ret
xor
push
jb
mov
add
call
test
shll
sar
jg
push
clc
adc
inc
mov
add
add
pop
subl
pop
pop
cli
fldt
aad
add
pushf
cli
mov
lock
and
in
lcall
mov
pop
or
adc
ds
push
sub
or
mov
cmc
pushl
mov
adc
adc
push
jae
loopne
mov
jl
call
jg
ret
aad
stc
sbb
and
fstps
pop
xor
fildl
clc
stos
mov
cmp
movsb
out
ja
jg
fld
pop
test
add
jmp
add
mov
sbb
sub
fcoml
xor
sub
sub
xor
fcomip
jl
mov
pop
push
mov
mov
dec
or
mov
loope
shrl
js
popl
sub
je
fdivl
call
call
add
inc
repz
test
pop
sbb
dec
js
push
push
loope
ret
pop
test
jmp
cld
shrb
lcall
xor
outsl
pop
imul
fxtract
push
stos
je
pop
push
add
ljmp
arpl
jmp
or
jge
xchg
inc
xor
fiadds
sbb
clc
incl
daa
jns
fsubs
ja
jb
lret
pushl
js
leave
mov
mov
gs
jb
and
lcall
lea
movl
jmp
sahf
sbb
stos
mov
inc
pop
push
data16
push
stos
jle
es
popa
movsl
repnz
cwtl
arpl
std
pop
push
lret
in
fs
sti
and
pushl
pop
xorl
jge
and
or
inc
sbb
pop
jl
aas
push
jmp
push
lea
jb
sbb
cltd
add
js
addr16
pop
inc
mov
movsl
sti
call
cmc
repz
jp
xchg
call
outsb
inc
dec
add
mov
jg
pop
sarl
loop
pop
and
test
jne
imulb
dec
jnp
pop
jns
or
xchg
pop
or
cmpsl
jge
jle
mov
sbb
pop
cmp
arpl
push
xor
mov
lcall
call
push
repnz
sub
fidivrl
nop
cmp
je
outsb
int3
movsb
mov
push
dec
insb
hlt
insb
xchg
jmp
and
out
insl
lds
movsb
es
test
leave
shr
sbb
or
nop
mov
ret
mov
movsl
inc
mov
js
fcos
jmp
test
xchg
loopne
ret
sbb
xorl
insl
cmp
incl
inc
or
lds
dec
adc
pop
sub
mov
dec
mov
push
fdivrs
nop
pop
cmc
ljmp
mov
test
dec
in
outsb
inc
lods
push
add
loopne
movsb
or
sub
mov
jl
insl
notl
mov
popa
popf
dec
fucom
shlb
imul
mov
jnp
or
aaa
xchg
ljmp
lcall
pop
ja
mov
push
clc
lret
push
mov
andl
jmp
xor
lcall
dec
xor
inc
rcrl
loope,pt
xchg
jle
push
mov
add
stos
pop
data16
sbb
cmp
fidivl
adc
mov
dec
add
pushf
and
inc
sub
aas
inc
das
ret
popf
push
mov
je
fwait
lods
push
icebp
pop
xor
jle
adc
jno
stos
std
cmp
call
cli
aad
scas
push
mov
rcrb
mov
lcall
mov
ret
inc
fmuls
iret
fwait
pop
adc
lcall
sub
mov
decl
sbb
sarl
test
adc
dec
in
dec
jp
shrb
movsl
xor
call
in
xor
jae
mov
cmp
jns
lret
outsb
add
incl
inc
xchg
fsts
pop
ljmp
loopne
lock
cmp
into
gs
jg
lods
sti
xchg
adc
fwait
call
mov
call
mov
pop
aam
shlb
mov
mov
movsb
sar
js
lret
out
mov
adcb
mov
adc
mov
cmp
jg
icebp
and
push
xchg
dec
rclb
add
mov
cmpsl
push
cwtl
lahf
std
pop
sbb
mov
sbb
jo
out
enter
cmp
pusha
movsl
mov
rcrl
jmp
dec
lea
dec
out
lods
in
dec
orb
lahf
push
push
xor
inc
ljmp
lods
flds
popf
pop
jmp
or
iret
into
outsl
xor
std
fldenv
icebp
les
sbb
insb
inc
jns
out
cld
incl
gs
sub
std
lcall
adc
mov
jg
add
pop
xor
xlat
jg
hlt
stc
xchg
fildll
pusha
and
hlt
mov
fs
and
cmp
decl
or
rorb
and
movntq
repz
sar
call
dec
xlat
rclb
dec
add
cltd
inc
cmp
lcall
push
dec
push
ret
int
ret
sub
jmp
loopne
jmp
cmp
out
cmp
jnp
out
outsl
xchg
scas
dec
rcr
sub
sub
sbb
incl
in
add
add
hlt
cmc
pop
pop
sub
ja
out
inc
inc
daa
cmpsb
cmpsb
mov
ljmp
jnp
xchg
mov
xor
popf
cmp
xchg
aad
gs
jmp
sub
jo
ljmp
sbb
enter
pop
or
lea
sub
shl
jno
add
imul
jg
int3
push
arpl
cmp
clc
jp
mov
xchg
scas
mov
aas
in
in
inc
cli
pop
dec
fbstp
ss
std
mov
clc
mov
mov
mov
sub
repz
push
cmp
adc
int3
pop
lods
push
mov
lock
movsb
xor
xchg
in
movsl
push
icebp
fs
fisttps
repnz
inc
test
xor
pop
loope
in
jbe
mov
cwtl
xorl
decl
movsl
lea
sub
sbb
pushf
add
dec
lods
cmp
fcomip
incl
pusha
jg
mov
stc
cmpsl
sbb
mov
jmp
add
incl
xor
pop
into
movsl
cmp
dec
jo
adc
nop
mov
jo
cli
jno
inc
decl
movsb
lret
xchg
std
les
xchg
push
push
pop
loopne
cltd
pop
loop
addr16
mov
cwtl
in
aaa
xchg
iret
ja
test
mov
les
xchg
mov
xchg
cmpsl
xchg
mov
lret
cmp
add
jmp
pop
and
and
push
push
and
xchg
sbb
rorl
mov
outsl
dec
xchg
sar
ljmp
imul
dec
push
sub
ret
pop
aaa
push
xchg
and
inc
in
jnp
or
sbb
lcall
rolb
push
mov
fiaddl
mov
and
ljmp
jg
lcall
pop
mov
xlat
movsb
cmp
aad
jne
rcll
jno
shlb
imul
inc
mov
cld
or
lcall
int3
cmp
xchg
call
cld
in
pop
sysexit
popa
pop
add
mov
push
mov
sub
sub
shlb
xchg
sbb
aaa
ljmp
dec
movsb
gs
dec
xor
fldt
or
jmp
fbld
sub
mov
test
fsubrl
xor
and
or
shl
add
dec
lcall
push
loop
scas
or
cmp
mov
jg
fnop
outsb
add
mov
xchg
push
push
xchg
xor
dec
cmp
ljmp
or
scas
fidivrs
add
pop
imul
popa
loopne
xchg
call
aam
add
push
repnz
ret
scas
cmp
scas
or
jne
cmpsb
jbe
int3
pop
inc
out
xrelease
mov
stos
mov
push
aas
pop
jecxz
or
dec
pushf
dec
sti
xor
loope
fcomip
incl
xchg
lods
sub
or
lea
fcomp
adc
mov
test
lret
lods
popf
xlat
cs
dec
adc
mov
lcall
jg
leave
push
mov
inc
loop
mov
repnz
add
les
ds
push
decl
imull
lret
adc
mov
test
repz
sub
xor
stos
pop
xchg
in
sub
insl
pop
lods
mov
jmp
xchg
or
jmp
xchg
subl
out
pop
loope
cwtd
and
movsb
and
test
and
mov
clc
jg
or
lahf
push
loopne
and
leave
push
xchg
push
out
test
mov
pop
mov
outsl
sub
cld
inc
cld
mov
dec
gs
adc
cmp
mov
iret
push
mov
ljmp
decl
xchg
orb
sti
mov
call
mov
pusha
mov
pushl
xor
jne
and
cmp
push
dec
sbb
aas
mov
pop
stos
addr16
jmp
sub
mov
int
hlt
adc
loopne,pt
decl
mov
push
mov
xchg
loop
pop
je
test
push
cmp
imul
incl
mov
repnz
sub
jo
outsl
movsbl
ljmp
xchg
jb
xchg
rcrl
push
test
cmpsl
jnp
popf
xchg
push
loop
pop
pop
sub
pop
ret
sbb
ljmp
loop
insl
int3
fsubl
aam
jne
sti
leave
and
jp
dec
xchg
jnp
fs
mov
jmp
in
dec
pop
xor
rorl
cmp
int
push
lcall
stc
mov
fucomi
and
adc
inc
jmp
mov
pop
testb
jo
das
push
cmpsl
pushl
fnstsw
mov
cmp
sub
fsubs
arpl
cli
mov
cmc
pushl
stos
adc
iret
push
xchg
or
sbb
movsl
cli
cmp
dec
int3
push
call
adc
mov
push
mov
testl
pop
mov
mov
xchg
pop
lret
adc
movsb
fildl
mov
cld
push
repz
pushl
xor
mov
jbe
inc
xchg
mov
daa
mov
arpl
iret
test
sub
dec
js
mov
leave
ss
jb
jno
lcall
stos
daa
mov
das
test
pop
orb
add
mov
movsb
push
cmp
mov
aad
adc
or
out
mov
xor
mov
pop
xchg
cmp
push
sarb
in
inc
jecxz
cmp
out
ss
mov
rol
loop
inc
jns
lahf
and
xchg
daa
xor
decl
pop
movb
dec
pop
xchg
imul
popf
mov
ljmp
lcall
mov
cmp
cmpsb
sub
xchg
cmp
movsl
dec
push
test
push
fbld
sbb
mov
push
and
lock
out
ljmp
mov
add
mov
and
mov
mov
mov
mov
and
push
xchg
push
xchg
inc
xor
into
mov
inc
pop
xor
fisubrl
jb
adc
xor
gs
push
test
ret
cmp
adc
cwtl
jno
mov
stc
cmpsl
mov
std
call
cmp
jo
nop
std
imul
mov
cld
out
icebp
repz
xor
dec
xchg
add
mov
cs
xchg
lcall
cld
adc
sbb
xchg
arpl
scas
lea
ljmp
ds
lods
pushf
sub
adc
push
mov
fistpl
out
jae
xor
adc
ljmp
fdivrl
rcrb
andl
imul
decl
sahf
repnz
sbb
ljmp
rclb
and
jge
dec
adc
fstps
jns
lcall
lock
sub
inc
int3
push
push
inc
jae
cmp
and
ret
jmp
lods
inc
dec
inc
scas
ror
mov
fcomps
or
push
and
mov
jae
test
subl
lock
cmp
adc
dec
repnz
pushf
lcall
fbld
and
stos
mov
fdivrl
dec
or
mov
fwait
jb
sbb
sub
fldenv
inc
cmp
ficomps
cmpl
lock
add
les
mov
movsb
dec
dec
rclb
mov
out
dec
and
sbb
mov
xchg
mov
mov
mov
pop
les
jg
jbe
add
test
mov
outsb
cmp
xchg
stos
les
mov
xlat
xchg
xchg
sub
dec
lret
jnp
cmp
dec
out
sbb
cmp
pop
inc
insl
sbbl
dec
mov
mov
incl
fdivr
cwtl
aas
sbb
orl
xor
lret
add
pop
adc
add
lcall
andb
gs
test
jns
push
push
fbld
mov
dec
jnp
jno
stos
gs
enter
scas
nop
idivb
mov
mov
cmp
mov
cld
jle
cmp
les
call
out
popa
loope
adc
out
into
pop
adc
push
imul
push
mov
push
enter
jno
jo
sti
in
mov
jg
mov
cli
sub
sahf
mov
test
xor
jmp
jns
data16
push
lret
inc
push
ds
jbe
and
mov
scas
loop
jg
fisttpll
mov
cmp
add
xchg
dec
jne
dec
int3
and
xchg
sahf
bound
shlb
cmpsb
lock
pop
sub
loopne
sbb
add
mov
mov
ljmp
sbbb
or
dec
test
mov
cmp
pop
sbb
lcall
xor
push
fs
pop
add
cld
add
movsl
mov
ljmp
aas
or
hlt
scas
out
loope
addr16
push
shl
lock
or
decl
divb
out
adc
xorl
pop
cmp
sbb
scas
clc
push
mov
fcoml
mov
or
insl
test
mov
mov
adc
inc
ljmp
mov
and
and
test
adc
lcall
mov
jbe
clc
jne
int
add
iret
or
arpl
out
and
inc
mov
push
dec
mov
fistps
or
sbb
dec
ja
mov
call
repz
sub
pop
fsub
shrl
and
dec
sub
fstl
push
and
sub
sbb
xchg
jge
out
jne
add
pop
sbbl
cli
jg
jle
imul
cmp
push
orb
mov
fisubl
insb
lods
jb
inc
and
xor
sbb
mov
decl
fdiv
inc
xor
stos
push
jnp
xlat
sub
popf
stc
nop
fiaddl
lret
push
and
dec
call
push
bound
xor
cld
xchg
and
xchg
jge
cs
fsubr
and
mov
sti
lods
ss
dec
out
lret
in
adc
mov
decl
xchg
shlb
loopne
int
sbb
jne
std
imul
mov
fsubrl
add
lcall
loopne
xchg
testb
js
jmp
mov
pushf
adc
cld
call
sub
sbb
popl
jne
mov
pushl
pop
insb
les
cli
add
inc
mov
mov
dec
sbb
adc
ja
or
lcall
push
xchg
mov
or
push
movsb
fisubrl
rcr
xchg
incl
adc
stos
sub
add
out
xlat
inc
ret
out
inc
in
imul
call
ljmp
loopne
and
lods
outsl
add
push
xor
js
lods
movl
jmp
insl
outsb
ficoml
xchg
xchg
dec
ficompl
jns
xchg
push
sub
cmpsl
jp
push
jmp
pop
or
push
inc
cmp
jbe
idivl
filds
sbb
pushl
mov
push
cmp
mov
add
xor
ds
xchg
test
sub
cmpsl
or
sarl
or
adc
cmp
ja
mov
mov
aam
mov
push
loop
or
movsl
and
mov
lret
arpl
and
add
push
mov
and
and
int3
sub
in
aad
ljmp
int
cmp
sbb
sbb
mov
mov
push
jecxz
fs
fistps
cmp
mov
mov
add
inc
mov
jns
lahf
xchg
aas
xchg
lea
lods
cli
hlt
or
mov
jmp
push
jne
jbe
aam
jb
dec
movsb
pushf
or
xchg
in
ds
mov
incl
cmp
pop
sbb
push
leave
hlt
je
inc
leave
repnz
lcall
and
dec
mov
int3
mov
add
xchg
push
and
std
decl
ret
sbb
in
mov
outsw
aas
jl
xor
pop
xor
ljmp
pusha
leave
add
test
xorb
push
fsts
and
sub
jg
fiaddl
and
mov
scas
xchg
cmpsb
mov
push
es
xchg
dec
xchg
lods
mov
or
mov
xchg
out
iret
mov
pushf
or
mov
lcall
cmp
loopne
adc
lods
push
das
push
xor
mov
xchg
scas
xor
sbb
pushl
ret
push
adc
mov
cmp
mov
bndldx
xorb
ljmp
inc
stos
std
fistpll
xchg
cmp
scas
pop
mov
fidivs
nop
stc
aaa
adc
nop
mov
sbb
xor
push
jl
dec
mov
fsubrs
pushl
fdivrl
push
or
lret
dec
pop
dec
push
outsl
fldenv
ljmp
ret
out
ret
daa
test
lcall
test
sbb
aam
cmpsb
out
jmp
lock
dec
inc
mov
xchg
cmp
out
dec
leave
lcall
mov
fcoml
pop
js
dec
enter
or
ljmp
addr16
adc
jle
insl
jecxz
inc
adc
push
ret
push
push
dec
fisttps
popf
pop
jmp
aaa
jne
jns
out
xor
cli
mov
inc
repz
xlat
sub
xchg
adc
jmp
es
sub
dec
imul
and
mov
mov
outsb
sub
push
fisubs
stos
int3
shrl
sub
divl
ret
insl
inc
xchg
xchg
sbb
sti
ljmp
mov
test
jmp
scas
pop
xchg
inc
push
mov
pushf
outsb
daa
sbb
pop
push
mov
out
jne
push
in
cltd
or
outsb
push
jp
jmp
insl
adc
test
adc
nop
adc
scas
ja
jg
in
cmp
je
pushf
add
addr16
decl
add
push
push
pop
mov
insl
sub
out
sbb
or
idivl
outsb
mov
mov
rcll
aaa
mov
inc
push
xor
std
repz
gs
dec
movsl
ljmp
push
sbbb
fidivrs
pop
jo
fiadds
jle
mov
jg
or
mov
fisubs
leave
or
pop
and
popa
or
stos
les
cmc
cmp
fsubrs
fiadds
fbstp
jecxz
lahf
out
cli
push
and
insb
push
lea
cwtl
dec
cld
sahf
leave
pop
fcomip
int3
or
jle
movsl
xor
sbb
sahf
cld
mov
rol
das
sahf
jmp
inc
cltd
mov
push
cmp
addb
inc
or
bound
lcall
loope
push
push
movsb
fmul
insb
jmp
rep
jl
out
cmp
sti
lcall
or
aaa
test
push
mov
ljmp
xlat
insb
hlt
ja
xor
cmp
cmp
inc
add
shrb
jmp
jmp
repnz
mov
sub
mov
cmpsl
pusha
sar
pop
inc
or
clts
data16
jne
jmp
mov
mov
iret
sub
hlt
jge
mov
jo
cmpsb
jg
into
test
sarb
xor
jns
add
mov
push
xchg
inc
les
sbb
fisttpl
lcall
cmp
sbb
aas
xchg
inc
xchg
dec
mov
or
sub
mov
adc
filds
mov
adc
std
idivl
mov
filds
mov
mov
insl
jb
or
fsubp
dec
shlb
jo
hlt
cltd
test
neg
popa
pop
sub
jg
std
aas
pop
mov
push
pop
popf
lahf
aam
add
inc
les
cmp
xor
frstor
sbb
addr16
lcall
jecxz
push
movsb
push
jle
mov
or
stos
bound
jge
cli
inc
and
in
and
xchg
mov
mov
jmp
shlb
add
dec
outsl
outsl
xor
mov
push
xchg
or
add
mov
inc
adc
adc
fsubrs
xchg
int
popa
in
out
das
sar
add
cmpsb
out
push
push
cmp
add
push
fs
mov
enter
in
das
or
lcall
mov
pop
test
rcr
and
xchg
das
mov
xor
pop
jmp
rorl
cmp
push
das
sub
outsl
movsl
and
xchg
fwait
and
adc
jp
pusha
push
je
dec
xor
std
dec
jmp
pop
pop
into
loop,pn
xchg
testb
mov
mov
lcall
sub
cmc
add
mov
mov
lret
hlt
hlt
xchg
push
arpl
movsl
outsl
fisubrl
repnz
mov
jb
sub
flds
xor
lods
sbb
decl
rcrl
push
mov
cmp
out
jl
out
loope
scas
icebp
mov
fimull
and
mov
inc
fs
jb
dec
cmp
subl
int
das
cli
pushl
in
mov
lret
movb
repz
lock
hlt
ljmp
jecxz
cmc
mov
push
test
ret
push
ffree
add
sub
mov
dec
data16
call
push
xor
jle
push
aaa
test
push
in
mov
in
jae
jae
ud0
adc
mov
inc
pop
push
lods
jnp
and
out
push
int3
pushf
add
sahf
lds
push
das
sbb
loop
pop
pop
lcall
loop
imul
inc
stos
sti
fwait
inc
stos
xlat
add
add
je
gs
aam
xchg
mov
insb
movl
aas
test
mov
pop
fninit
cmpsb
hlt
insb
adc
push
in
push
adc
int
cld
mov
es
ret
cmpsl
and
incl
in
scas
addr16
aam
imul
fcoml
outsl
mov
jb
xchg
ret
pop
cmp
pop
cmpsl
cmp
shrl
mov
std
lcall
frstor
sub
push
fnsave
jge
mov
fcmovne
fisttps
cmp
cmp
mov
push
std
lcall
mov
enter
int
mov
mov
nop
jecxz
enter
addr16
sbb
repnz
dec
gs
nop
push
sbb
dec
cmp
jbe
sbb
les
ret
rep
adc
sub
out
dec
push
adc
orb
dec
jg
xchg
add
in
inc
call
push
dec
jnp
sub
cmpsb
outsl
bound
mov
fbld
sar
ljmp
jle
daa
je
icebp
cmp
lods
push
jle
mov
cs
jg
mov
pusha
jae
in
xchg
or
cwtl
ss
pushf
pop
out
sbb
pop
jne
dec
insl
mov
shl
push
les
push
lods
cwtl
in
and
sub
lcall
vpavgb
outsl
jg
pusha
cltd
sbb
int3
jbe
call
adcl
pop
cmpsb
mov
mov
faddl
inc
shrb
push
cmp
and
aas
lcall
stos
lret
pop
es
push
jnp
jo
xchg
sub
mov
shll
clc
incl
fdivs
cmp
cs
mov
mov
pop
cwtl
arpl
shlb
fistpl
lcall
push
cs
lods
push
shr
int
mov
dec
mov
clc
js
addb
dec
sub
out
cmp
int3
arpl
inc
sub
inc
jle
dec
stc
repnz
sub
inc
test
sbb
inc
popa
dec
push
mov
cmp
cmp
fbstp
inc
out
cs
test
sbb
outsb
aas
ds
mov
cmc
fld
jo
pop
jmp
out
mov
or
jo
repnz
sbb
les
jae
sarb
arpl
add
cmp
and
xor
addr16
add
lcall
sbb
mov
inc
sbbb
lret
sti
out
xor
or
das
push
mov
sub
inc
filds
sbb
cmp
cmp
mov
cmp
push
cmp
adc
ja
mov
loopne
pop
cmp
shll
shlb
into
mov
mov
inc
xor
dec
inc
je
lret
add
cmc
jle
hlt
mov
sbb
adc
cmp
movsl
fistpll
lret
in
jg
jp
pushf
inc
xchg
hlt
and
outsb
in
sbb
cmc
in
out
push
jge
test
stc
cld
mov
xchg
add
jo,pt
cmp
rclb
mov
cs
ljmp
fiadds
inc
jae
pop
enter
adc
inc
mov
inc
call
pushl
incl
ljmp
lahf
mov
push
mov
in
mov
inc
add
sbb
cs
shlb
stc
enter
push
inc
pop
adc
std
adc
sub
push
or
jmp
lods
out
cmpsl
adc
aas
xchg
sbb
mov
data16
out
lcall
pop
int
dec
into
std
int3
dec
xor
and
cmpsb
jle
adc
ljmp
into
sub
stos
mov
mov
push
idivb
pushf
cltd
ret
jne
and
aad
cmp
decl
jle
rcrl
dec
jl
scas
mov
and
push
jle
std
ja
mov
lret
jmp
stos
loope
cmp
je
fmul
sub
cmpsb
cwtl
jp
scas
xchg
and
mov
inc
inc
lcall
mov
out
jl
cli
out
std
adcl
xor
pushl
gs
push
pop
push
jne
adc
pop
add
in
in
lret
pushl
cli
sbb
xor
arpl
xchg
and
jg
outsl
outsb
dec
xor
scas
sub
pop
sub
and
xlat
clc
jmp
movsb
rcl
scas
dec
sub
and
xchg
mov
or
add
mov
into
xchg
mov
inc
or
jnp
mov
out
cmc
lea
pop
div
lret
fldenv
push
sub
mov
ffreep
adc
insl
orl
inc
cmp
mov
shll
mov
xchg
sub
mov
lret
xchg
in
lock
jg
shlb
push
and
dec
push
les
push
adc
mov
add
jg
imul
cltd
stos
aad
add
fdivp
jp
mov
inc
jne
pop
cmp
loopne
test
sbb
jmp
jl
sub
jnp
jbe
je
je
pushl
arpl
push
jle
jmp
jecxz
pop
sbbl
fxch
inc
std
cmp
lcall
cmpsl
pop
pusha
daa
lds
xchg
sbb
test
les
int
rcrb
mov
out
clc
call
jbe
push
pop
fldenv
jmp
btr
ss
sahf
jge
cltd
cmc
cmpb
and
jmp
je
out
pop
mov
adc
jmp
insl
pop
adc
push
jnp
clc
and
mov
xchg
outsl
mul
iret
mov
xchg
dec
ja
in
sbb
xchg
scas
fldenv
dec
xor
add
mov
imul
cmp
dec
mov
push
repnz
nop
fmull
mov
dec
lods
call
enter
lahf
repz
out
push
jp
dec
xchg
es
lret
imul
jg
sub
add
je
lods
fs
scas
mov
adc
aaa
es
shl
add
inc
sub
outsb
mov
daa
lret
je
fsubrl
jns
jae
rol
mov
fstpl
shrb
or
cwtl
ss
mov
bnd
xorb
iret
shl
stc
sahf
xchg
xchg
repz
ljmp
xor
cmpl
repnz
or
lea
inc
andl
pop
incl
mov
arpl
inc
addr16
cld
and
xor
push
mov
inc
aad
cmp
out
dec
push
arpl
xchg
adc
mov
pushf
cs
xor
pop
pop
cmpsl
add
decl
mov
add
in
jg
jns
jl
inc
cmpsl
jns
lcall
cmpsl
in
push
mov
icebp
cmp
xchg
or
push
in
sub
mov
xor
xchg
mov
call
jp
lret
xchg
inc
xor
xchg
mov
add
xor
lret
push
cmp
mov
sbb
popf
movsb
pop
or
or
mov
inc
into
or
cmp
int3
inc
dec
mov
cmp
xchg
jecxz
scas
cwtl
sti
shlb
ret
fidivs
dec
stc
das
cli
xchg
add
xchg
sahf
inc
xchg
dec
mov
mov
pushl
movsl
sbb
aam
lret
repnz
pop
ret
and
jg
lds
test
incl
inc
sub
std
popf
scas
jmp
jae
movsb
lcall
loope
lods
jg
add
fprem1
push
stc
clc
mov
aaa
mov
mov
inc
xor
jg
sbb
mov
push
rcll
sub
lea
push
dec
negb
push
call
xchg
xchg
mov
xchg
fdivrp
sbb
jno
xchg
rcrl
ljmp
mov
adc
in
int3
imul
sbb
iret
lea
cltd
neg
sbb
ja
mov
or
loop
int
adc
jne
mov
and
pop
adc
jge
lock
movsb
dec
loopne
xorl
cwtl
fwait
leave
stos
out
imul
or
lcall
add
aas
arpl
into
inc
mov
shlb
xchg
subl
or
lea
mov
jge
mov
icebp
pop
push
dec
pop
out
leave
outsb
jb
add
jmp
inc
sti
lret
sbb
jg
icebp
jnp
test
mov
inc
or
clc
imul
push
sbb
inc
dec
lret
icebp
dec
cs
mov
or
and
aaa
pusha
push
cmp
mov
scas
repnz
in
movsl
mov
push
cmpsb
mov
clc
mov
jecxz
dec
xor
sub
jg
dec
and
repz
std
rcll
xor
dec
push
enter
push
dec
clc
ret
stos
sahf
mov
mov
cmp
push
int3
inc
and
push
ja
push
add
fsubr
adc
dec
adc
lods
push
stos
dec
pushl
mov
xchg
cmp
push
outsl
data16
lods
push
bound
sub
jns
aaa
dec
sub
push
idivl
cli
pushl
pop
dec
rclb
hlt
adc
xlat
jb
ljmp
ljmp
inc
je
cmp
cmc
pusha
pop
pop
sub
add
ljmp
sub
inc
lea
shrb
jg
insl
xor
jmp
lahf
or
bound
sub
xor
orl
orb
dec
inc
mov
sub
pushw
mov
loope
dec
mov
sahf
xor
icebp
adc
in
incl
lret
jbe
mov
das
pop
jge
adc
add
popa
repz
dec
push
std
sbb
packuswb
sbb
and
repz
loopne
cmpl
push
repnz
push
popa
fistps
sqrtps
scas
xor
sti
adcl
daa
negb
jg
and
pop
scas
mulb
clc
ljmp
popa
aam
insl
mov
dec
lret
repz
fsubs
add
add
or
sub
adc
jg
or
inc
pushl
loopne
mov
das
or
cmp
xchg
outsb
jnp
or
das
cmpsl
std
outsl
cli
incl
in
imul
add
pop
js
xchg
enter
sub
push
cmpsl
xchg
mov
pmuludq
popa
adc
icebp
data16
sti
mov
mov
jecxz
decl
je
pop
leave
pop
jne
fs
pushf
repz
lds
outsb
loope
clc
lret
sub
add
adc
lcall
and
data16
decb
lret
sarl
js
dec
rcrb
push
ficoms
or
adc
sub
and
mov
scas
and
xor
mov
ja
mov
rcll
add
inc
scas
faddl
dec
sbb
mov
outsb
inc
adc
mov
pusha
or
sysexit
repnz
push
add
lret
sbb
pushl
push
bound
jl
cli
sub
push
outsl
scas
outsb
dec
mov
lcall
dec
push
adc
fbld
movsl
xchg
xchg
xbegin
push
hlt
fcomip
stos
or
xchg
inc
mov
push
lds
inc
imul
sar
outsl
mov
mov
inc
leave
enter
jle
xchg
add
fstps
adc
jmp
sub
mov
hlt
sub
pushl
aad
jg
ja
js
fdivrs
fcoml
adc
test
add
jmp
cmp
mov
mov
pop
adc
mov
insb
decl
icebp
adc
sahf
popa
pop
aam
sbb
sbb
add
in
adc
push
inc
insl
push
cli
mov
jmp
inc
fcoms
lcall
stos
sbb
xchg
push
xchg
into
mov
shrb
sbb
decl
int3
fldt
xor
aas
insl
lret
insb
or
jae
andb
mov
lcall
or
xchg
jg
jecxz
push
std
orb
jae
gs
je
sbb
xchg
jmp
ljmp
arpl
hlt
mov
loopne
xchg
call
pop
repz
inc
sub
test
pusha
int
inc
loopne
dec
insl
int3
or
and
insb
xchg
cmp
loop
mov
ja
jne
mov
push
aas
enter
ljmp
sahf
mov
outsb
sub
sub
mov
fwait
push
divl
cmp
jl
mov
loopne
lds
xor
movsb
sub
sub
add
gs
inc
addr16
call
imul
or
test
imul
add
adcl
xor
ljmp
loopne
call
mov
pusha
stos
inc
insb
fcmovnbe
xchg
repnz
pop
xchg
call
call
sbb
or
dec
xor
push
xchg
std
jmp
arpl
adc
dec
xlat
and
sub
push
cmpps
jns
inc
cs
popa
and
decl
sbb
fimull
ds
rcrl
pushl
mov
rorl
push
fwait
out
pop
xchg
sub
xchg
jmp
push
iret
or
in
scas
fiaddl
add
icebp
xchg
dec
rorb
dec
or
jmp
xlat
push
pushl
std
lcall
mov
adc
or
mov
into
dec
adc
pushl
stos
cli
fucomip
inc
mov
icebp
addb
cmp
cmp
xor
mov
daa
jmp
push
sbb
lods
divl
aas
shlb
mov
cmp
jb
cs
call
pop
push
pop
lret
and
cmpsl
ret
and
xchg
icebp
int3
ret
mov
ds
jne
popf
xor
push
jo
xor
enter
jl
orb
and
test
out
cmp
call
daa
imul
jb
mov
out
fxch
insl
cmp
ljmp
hlt
std
or
cmpsl
push
sbb
jne
push
daa
aam
cmp
dec
out
adc
call
inc
testl
cmp
outsl
lret
movsl
mov
fs
ljmp
cmp
or
cli
dec
and
lds
mov
bt
jmp
out
add
ljmp
hlt
mov
arpl
pop
or
hlt
outsb
imul
adc
out
mov
fnstenv
fisttpl
mov
jmp
inc
pop
test
xchg
xchg
jns
adc
adc
out
or
out
decl
xor
das
loop
jno
mov
je
into
cmpsb
push
mov
jne
jle
mov
in
leave
cmpsl
shlb
add
xor
shlb
lods
sbb
or
movsb
inc
pop
adc
int3
inc
inc
decl
daa
stos
mov
add
js
arpl
sub
sub
mov
call
fsubrl
and
dec
fwait
test
mov
add
adc
cmpsb
ret
sbb
cli
cmp
or
ds
test
cltd
addr16
je
hlt
fucom
ljmp
pop
mov
mov
pop
gs
dec
cmp
pop
jl
dec
sbb
loop
mov
xor
push
or
popf
push
cmp
sbb
mov
das
and
fdivr
pushl
pop
xchg
lahf
pop
stos
pop
fld
pop
sub
push
sub
scas
or
test
call
inc
mov
lcall
push
shr
shlb
cmp
sbbb
ljmp
push
fmull
sbb
fwait
sub
adc
int3
repz
inc
in
nop
add
test
mov
jg
cld
decl
movsl
cmc
and
adc
push
adc
dec
fcmovne
movsb
xchg
push
call
pop
mov
sahf
das
in
mov
or
mov
shrl
outsl
mov
inc
dec
hlt
jae
call
in
nop
repnz
or
fimuls
add
das
into
mov
rol
loope
ljmp
jbe
push
js
push
clc
rorb
mov
inc
cmp
inc
loopne
cli
adc
dec
mov
fs
cmpsl
shlb
cmp
cmp
dec
cli
jle
sahf
adc
pavgw
mov
push
outsl
test
mov
push
inc
cli
decl
repz
lret
ja
mov
xchg
sbb
add
or
xor
push
jg
insl
and
dec
pop
lods
sbb
pop
adc
and
ljmp
int3
or
out
pop
mov
loope
or
ljmp
jne
xor
cmp
ret
and
test
into
pop
loopne
push
int3
loop
scas
mov
js
lcall
jns
stos
mov
mov
pop
mov
sti
pop
out
pop
and
or
cmc
mov
imulb
cs
jecxz
lods
fidivrl
adc
sar
rcrb
jmp
xchg
xchg
jecxz
icebp
push
mov
jbe
mov
pop
jno
loopne
dec
cmpsl
xor
icebp
ja
pop
push
mov
cmp
cmp
add
ja
xchg
sbb
mov
imul
mov
imul
adc
mov
or
loopne
and
jle
pop
sbb
add
add
or
fidivs
jge
mov
daa
loopne
cmpl
lods
push
xchg
xor
cmc
mov
decl
pop
jo
shlb
pop
std
addl
cld
and
pushl
inc
or
and
dec
sbb
fistpll
pop
cmpsb
xchg
pop
mov
cmp
cmpsb
cmp
out
repz
scas
pop
ds
loope
adc
push
cmc
inc
xchg
add
pop
cltd
icebp
sbb
mov
fnstenv
icebp
push
ja
out
add
scas
dec
ds
pop
data16
gs
sub
and
fadd
dec
mov
les
loope
push
outsl
cmp
shrl
cwtl
sub
hlt
cmpsl
mov
inc
sub
mov
lret
fistpl
call
in
daa
dec
xlat
ljmp
rorl
jb
lods
fbstp
xor
and
call
cld
stos
pop
sbb
lea
js
sbb
jl
or
add
shlb
jbe
outsl
jmp
cmp
out
ret
mov
dec
orl
inc
and
and
lea
sbbl
push
test
icebp
or
jae
movsb
scas
or
cmc
repz
push
scas
gs
jecxz
ljmp
cwtl
push
ret
push
aad
in
add
jno
lods
sbb
mov
setne
push
inc
add
repnz
pop
out
xorb
ja
jnp
call
sbb
adc
mov
ljmp
mov
mov
fmull
subb
and
divl
sarb
dec
sub
ljmp
cmp
push
and
sbb
mov
insl
js
jl
or
sub
ja
push
in
loopne
xorb
test
ss
push
jnp
pushf
pushf
cmpsb
aaa
adc
into
push
xorb
pushl
mov
imul
and
adc
in
xorb
push
pop
aam
movsl
sub
and
test
pop
jbe
pop
es
ljmp
imul
adc
fdivs
out
mov
xor
inc
ret
dec
xchg
in
das
decl
std
dec
xor
pusha
adc
aam
and
mov
out
inc
mov
jno
orl
data16
nop
sbb
ljmp
jg
jns
cmp
or
mov
jmp
out
frstor
ret
enter
xchg
inc
retw
int
or
int
cmp
fisttpl
inc
dec
jns
pushl
pop
and
inc
cmp
pusha
sbb
cltd
or
mov
lods
cmpsl
and
das
ljmp
out
sbb
xorl
jle
push
push
rorl
daa
fistpl
gs
sub
adc
and
repnz
call
push
and
inc
mov
outsl
add
les
dec
daa
ds
lds
fwait
xchg
xor
mov
pushl
imul
push
bound
ret
imul
inc
xchg
sub
bound
cli
xor
dec
pop
adc
mov
fnstcw
incl
stos
scas
mov
scas
adc
sbb
fs
aas
fmull
xor
jmp
jmp
test
insb
inc
cmp
sub
jns
in
out
mov
mov
scas
jle
sub
in
sbb
scas
add
test
bnd
outsb
ja
jg
sub
mov
mov
inc
sub
add
fcomip
ljmp
mov
stos
lods
jo
xchg
andb
stos
addb
scas
in
stos
lcall
loopne
pop
pop
jl
dec
cmp
mov
jae
jo
subl
lahf
mov
and
pushl
cmp
shl
enter
mov
mov
sub
call
push
sub
sarb
pop
sub
jle
add
or
inc
mov
imull
and
decl
stos
sub
and
inc
pusha
fwait
out
pop
out
ljmp
push
fimull
cld
ret
cmc
fdecstp
jne
push
cmp
mov
in
jne
inc
mov
decl
into
jae
cmp
aas
imul
push
pop
testl
add
lcall
push
fldenv
cmp
xor
pop
dec
pop
xor
loope
dec
push
cmpsl
cmpsl
mov
and
jg
or
dec
mov
out
add
jg
inc
push
in
pushl
lods
mov
fisttps
popa
sub
xchg
sub
bound
sbb
or
mov
add
mov
jnp
push
adc
and
aam
cwtl
les
les
shr
out
incl
arpl
cmpsl
jae
lds
xchg
das
int
sub
adc
mov
dec
leave
inc
cmp
pusha
jge
adc
cmc
into
cs
aam
sub
loop
xchg
mov
cmpsb
inc
mov
mov
roll
daa
xchg
enter
dec
cs
mov
dec
arpl
mov
jl
fstl
xchg
fiadds
cwtl
push
pop
int3
or
call
jg
call
incl
pop
sub
outsb
inc
pushf
cmp
push
push
fbld
jp
dec
stc
sbb
cli
xlat
insl
push
sbb
enter
bound
dec
decl
or
pop
testl
iret
popl
out
test
test
rorb
decl
fists
sub
gs
pop
in
std
or
mov
xchg
aad
dec
je
jae
call
decb
fstp
lds
shrb
insl
push
push
test
movsb
mov
ljmp
xchg
dec
ret
add
jmp
xor
pop
pop
cmp
push
and
pop
jle
outsl
mov
push
imul
lods
add
push
scas
pop
imul
xchg
jmp
and
adc
int3
adc
sub
int3
movl
jb
push
xor
pushl
inc
sbb
push
xor
sub
cmpsb
fsts
jmp
mov
xchg
ret
lea
jp
sbb
int
mov
adc
pusha
rol
mov
mov
rorb
es
cmc
mov
lds
push
std
pop
mov
sti
push
pop
jg
ja
lds
push
arpl
mov
fcompl
decl
dec
movsb
sub
insl
cs
outsl
into
jecxz
adc
mov
ljmp
lcall
mov
stos
jp
mov
xchg
dec
add
push
ror
out
out
in
jo
xchg
outsl
sti
adc
mov
fucomi
pop
out
call
mov
movsb
xchg
or
in
dec
shll
and
dec
or
push
sub
push
cmp
decl
lcall
call
xchg
sahf
mov
or
outsb
mov
repnz
incl
lds
adcb
add
aas
mov
mov
stos
into
fwait
xlat
mov
call
out
mov
mov
cld
mov
mov
jg
mov
pop
and
mov
jne
aas
mov
adc
js
cmp
pop
dec
pop
rorb
jb
aaa
into
aaa
dec
add
mov
push
sar
add
and
repnz
sub
jl
push
mov
sub
into
lcall
adc
xchg
iret
frndint
push
lock
call
das
clc
inc
lret
mov
leave
int
aaa
call
mov
icebp
pop
push
popf
jg
aas
sbb
outsl
sbb
popa
xchg
dec
jne
push
push
in
xchg
cli
idiv
addl
sahf
fbstp
lcall
mov
push
mov
into
mov
mov
lods
outsb
loopne
pushl
les
rclb
loop
jecxz
aas
cld
jbe
fbld
ljmp
ds
sub
insb
cli
test
jnp
ret
jge
or
jmp
pop
adc
inc
shlb
push
insl
sub
call
mov
repz
xor
incl
xchg
popa
or
ja
shlb
sub
cmp
sbb
sbb
mov
sbb
add
lods
lret
icebp
xorl
loop
les
push
inc
dec
test
xor
call
push
cltd
xlat
sub
push
gs
test
pop
mov
ret
fisubrs
cmp
aam
pushl
xchg
jg
lahf
inc
cld
add
jmp
sbb
je
dec
push
outsl
xchg
inc
daa
int3
hlt
add
bound
jmp
ds
dec
clc
mov
cmp
xorb
sbbl
jne,pn
inc
sbb
mov
rolb
loop
mov
lcall
out
adc
enter
push
lahf
in
mov
sbb
decl
fisubrs
jle
out
mov
sti
aas
stc
mov
pushl
std
fistpl
imul
mov
cltd
in
pop
sarl
and
test
lds
xchg
orb
decl
pop
fs
sahf
insb
pop
mov
orb
ljmp
mov
cmp
inc
or
mov
data16
adc
pop
adc
inc
adc
in
mov
mov
mov
pop
lret
test
xchg
lahf
insb
cmp
ja
mov
pop
sub
jae
adc
rcl
lcall
fistpl
addr16
movsb
mov
test
gs
icebp
and
inc
jno
jno
arpl
incl
dec
neg
dec
mov
das
mov
or
clc
inc
jb
lods
pop
sar
xorb
stc
incl
das
scas
dec
mov
dec
ja,pn
aad
ror
or
mov
lcall
mov
jecxz
pusha
sbb
mov
into
xchg
xchg
dec
ja
imul
scas
and
cmp
lret
or
or
loope
clc
pop
lcall
mov
lret
mov
into
test
xor
outsb
out
pop
ljmp
mov
and
push
jbe
dec
dec
incl
ss
cmpsb
aas
sub
pop
shlb
xor
xchg
mov
jge
xchg
xchg
les
add
fdivrl
stos
test
hlt
lods
dec
pop
andb
ja
push
lods
cmp
mov
cmc
call
fbstp
dec
cs
fwait
pop
mov
dec
push
sub
mov
incl
pop
lcall
imul
mov
fidivs
lcall
test
divb
jmp
loopne
aas
pushl
mov
mov
mov
inc
out
xchg
xchg
dec
sahf
push
adc
popf
xor
fnsave
xchg
add
int3
mov
mov
test
mov
gs
push
jo
incl
les
imul
adc
fwait
and
adc
movsl
mov
popf
in
stos
lock
int
xchg
ret
mov
aam
aaa
and
movsl
push
das
out
pushl
std
adc
js
cmp
xchg
push
push
andb
xchg
xchg
mov
cmp
xor
into
stos
xchg
dec
popf
and
into
sbb
popf
fidivl
bound
mov
mov
incl
push
pop
das
fisubrs
mov
mov
xchg
lock
inc
pop
jmp
mov
stos
bound
in
ficompl
or
je
int3
jnp
sbb
push
addr16
jmp
call
xor
mov
cwtl
cmp
jecxz
adc
jle
repz
jmp
push
mov
repz
jp
je
jno
mov
mov
add
add
sub
das
clc
decl
xchg
push
int
mov
lahf
xor
popl
xchg
daa
jno
push
cld
pushl
adc
dec
adc
pushf
dec
test
pop
fmull
mov
fcomip
lret
cwtl
test
dec
jle
mov
mov
stos
movl
jge
call
arpl
and
dec
adc
xchg
cmp
out
push
inc
sbb
stos
shll
xchg
add
rcrl
enter
in
negl
daa
mov
iret
ljmp
inc
cwtl
sub
dec
daa
stos
xchg
fdivr
faddl
sbb
add
popf
pushl
loope
or
jb
pop
add
dec
dec
xorb
ljmp
pop
call
cmc
pop
xchg
xor
push
adc
nop
pop
cmpsl
add
stos
and
scas
call
shll
push
and
or
jmp
mov
sar
jg
inc
rcrb
pop
mov
js
xchg
cmp
hlt
ffree
loopne
jg
lock
jns
and
lods
sub
sub
inc
add
push
gs
cmp
incl
adc
call
xchg
insb
add
cmc
jne
outsb
push
mov
xchg
and
jecxz
std
jl
inc
and
insl
jmp
jae
or
xorb
xor
sbb
decl
mov
sbb
fcmovbe
xor
mov
cmp
popf
repnz
out
jg
xor
lea
xchg
mov
shlb
pop
cmp
dec
xorb
cld
je
fildl
call
sbb
fwait
popa
rorl
inc
push
inc
dec
pop
xchg
inc
fidivs
fidivrs
nop
int3
lods
enter
xor
cs
mov
jno
jp
jmp
cmp
push
sbb
inc
sbb
fbld
repnz
mov
mov
sub
test
pushl
pop
hlt
mov
mov
cmpsb
call
scas
mov
jnp
add
push
movsl
push
add
arpl
int3
cmp
cld
adc
adc
add
aad
sbb
scas
mov
loop
dec
cmc
and
pop
jae
sar
dec
out
xchg
xchg
mov
add
cli
push
inc
xchg
cmp
stos
aam
scas
push
sbbl
mov
mov
jge
add
jge
fidivl
das
cmp
xchg
in
pop
enter
mov
mov
out
lahf
inc
or
sti
jmp
in
movl
push
imul
mov
fs
and
sbb
dec
fnsave
sbb
jge
popl
cmp
div
lcall
mov
mov
cld
sti
pop
sarb
xorl
sub
subl
loopne
pop
pop
push
inc
pop
rolb
jmp
das
leave
mov
int3
shrl
je
fwait
mov
decl
mov
data16
and
mov
and
and
sub
leave
sub
mov
jmp
adc
xchg
add
lcall
mov
dec
sub
jae
fsubl
push
mov
hlt
lahf
mov
jne
jmp
das
xlat
lcall
aam
dec
sub
mov
xchg
cmp
jnp
or
fidivl
mov
lods
mov
jno
imul
pop
inc
pop
out
andb
ret
and
ficompl
push
xchg
repnz
sbb
in
loopne
mov
adc
mov
push
add
clc
repnz
je
out
mov
cs
xchg
outsl
cli
pushl
mov
inc
ret
pop
mov
ss
setnp
inc
fnstcw
pushl
mov
cmpl
into
jg
inc
das
mov
sbb
rol
jmp
insl
lds
sti
add
add
mov
and
cmp
xchg
jno
dec
lods
int3
push
dec
mov
dec
pushw
nop
ss
bound
mov
sub
aas
lds
jmp
xchg
js
imul
dec
mov
ret
into
jge
cmp
cli
or
xchg
mov
lods
lcall
das
lock
adc
into
movsb
test
dec
jg
std
mov
sbb
sbb
sbbl
jle
mov
cli
std
dec
push
fcmovbe
push
loopne
ljmp
repnz
jb
xchg
loop
mov
pop
fisttps
incl
fdivrl
or
and
scas
push
lods
ret
xlat
scas
xchg
test
loop
incl
mov
jno
mov
mov
fimull
pop
andb
cli
icebp
add
xchg
pusha
mov
call
loopne
sub
andb
or
inc
repz
add
iret
es
cli
popf
icebp
jbe
cmc
jb
adc
mov
out
dec
sbb
pusha
and
xchg
add
cld
push
int3
popa
mov
movsb
ficomps
xorb
lods
incl
lret
push
add
enter
hlt
in
iret
jle
and
push
sub
rcll
sbb
outsb
cltd
sub
das
call
in
mov
ljmp
cmovp
sub
ds
push
ret
shrb
movsl
pop
xchg
mov
or
lcall
inc
pop
popa
loope
popf
mov
pop
daa
add
or
mov
incl
cwtl
push
enter
pop
cmpsl
jo
inc
sbb
mov
stos
mov
jmp
or
adc
enter
aad
dec
cmp
inc
pop
fmuls
stos
jnp
push
je
inc
cwtl
das
dec
cmp
sub
sub
sbb
cltd
cld
fidivrs
sub
popf
outsl
mov
movsl
outsl
pop
leave
test
push
adc
sbb
mov
xorb
sbb
insl
mov
fldcw
call
test
inc
dec
or
in
push
int3
add
or
sbbb
xchg
int3
test
ja
add
ljmp
mov
inc
fmull
bound
mov
jle
push
pop
cmp
adc
inc
lret
xchg
inc
rcl
and
cld
addr16
int
jecxz
and
cmpb
xchg
lret
std
cli
clc
sub
fisttpl
mull
mov
jg
lret
xchg
pop
xchg
jmp
mov
adc
mov
adc
out
imul
and
sbb
lcall
adc
cld
lcall
into
ret
adc
aaa
adc
nop
das
int3
mov
mov
pop
shll
mov
scas
mov
jle
lret
loop
or
call
fld
jbe
lea
fld
jmp
dec
adc
lahf
pop
push
bound
inc
mov
scas
cli
dec
xchg
jmp
js
ret
mov
insb
outsb
dec
mov
jg
imul
sbbb
call
fdivp
cmp
mov
ljmp
add
cmp
xchg
bswap
push
fs
push
les
fnsave
outsl
leave
cmpsb
lcall
xchg
push
xchg
jge
push
pushf
insl
bsr
aad
dec
or
mov
mov
dec
mov
mov
jmp
iret
mov
xadd
jno
outsb
mov
test
sbb
repz
shld
jle
jnp
gs
push
hlt
push
icebp
mov
inc
mov
das
cmpsl
addr16
scas
out
jne
addr16
repz
xchg
add
lret
call
arpl
sbb
mov
pop
cld
cmp
nop
repz
push
and
xchg
movsb
jne
add
sbb
push
sahf
jmp
jge
int3
mov
push
push
lahf
je
cltd
adc
lods
test
mov
dec
movsl
fidivrs
sub
fwait
dec
mov
jl
and
dec
jbe
sbbb
mov
outsl
xor
jp
adc
lock
jmp
stos
mov
push
adc
xchg
xor
mov
or
inc
lcall
decl
clc
jl
ret
mov
mov
mov
dec
sub
mov
adc
jmp
mov
pop
pusha
adc
and
xchg
jae
sbb
sub
sti
ror
call
dec
ss
insb
add
in
lret
sbb
add
and
add
cld
push
jno
roll
fistpl
dec
jne
xchg
test
add
push
xchg
mov
jo
ret
xor
xor
clc
decl
sbbl
out
dec
pop
sbb
add
js
addr16
cmp
cmp
cmp
push
xchg
lcall
cli
incl
sbb
dec
cmpsl
loop
xlat
movsl
insl
dec
xchg
inc
xor
popf
jbe
lea
jmp
pop
pop
popa
out
mov
dec
sub
fwait
data16
rcrl
fsubs
cmp
gs
test
mov
iret
sbb
dec
andb
lea
cmp
xor
adc
lea
fcompl
and
test
adc
sahf
rcl
mov
sub
insl
mov
pop
xor
scas
jne
mov
pop
jle
bound
mov
fisubrs
mov
mov
inc
jg
jbe
xor
js
ret
cmp
pushl
mov
jp
daa
in
shl
jecxz
sbb
and
jmp
adc
call
sar
sub
add
jae
std
sub
and
jp
fisttps
sub
xorb
jecxz
sbb
lret
mov
ljmp
pop
sbb
in
jae
hlt
fmull
add
pop
in
rolb
stos
in
jmp
cmpsl
jmp
lods
cli
mov
hlt
adc
xchg
push
xchg
add
fstpl
xlat
and
stos
scas
pusha
shl
sti
adc
into
jbe
mov
pop
in
mov
mov
mov
dec
push
push
sarl
inc
sbb
mov
dec
push
decb
and
xchg
dec
jmp
jmp
lock
out
mov
jp
push
dec
ja
out
mov
call
dec
pop
cs
adc
cmp
jg
sub
lcall
loop
ja
push
aad
push
or
es
and
ret
jecxz
adc
xor
xchg
in
inc
inc
insb
in
iret
imul
in
shrl
jno
sarl
jne
jbe
lcall
ljmp
mov
mov
fst
dec
fisubrs
hlt
cs
imul
gs
decl
inc
popa
xor
cmp
pop
ljmp
xchg
push
push
adc
sub
stc
ds
push
pop
jae
popa
repnz
push
jmp
mov
enter
and
popa
fmulp
mov
pushl
adc
and
add
jp
xchg
sahf
inc
mov
mov
mov
add
incl
mov
adcl
movsl
inc
call
dec
push
jmp
inc
lcall
inc
jl
dec
insl
push
ljmp
dec
addb
mov
mov
pushl
stos
pop
xchg
pop
jns
jno
test
inc
sahf
and
or
adc
ret
pop
cmp
and
and
int3
and
popa
and
add
mov
xor
and
inc
je
push
fcmovb
pushl
inc
repnz
movsb
adc
call
incl
movl
daa
jle
mov
push
mov
nop
call
mov
dec
rolb
call
adc
inc
cltd
add
and
mov
outsb
stos
fdivr
mov
in
dec
orl
aad
gs
rorb
pop
xor
decl
pcmpgtb
or
rorl
scas
dec
and
scas
add
scas
push
dec
ret
or
xchg
jge
mov
and
jmp
sub
mov
sbb
pusha
in
or
mov
movsb
icebp
in
mov
mov
cmp
mov
popf
cmpsl
loope
and
mov
xchg
jns
lds
loopne
mov
cli
cld
jmp
loopne
ffree
jmp
js
das
daa
inc
or
sbb
adc
fisttpll
pushl
stc
fwait
ret
enter
rolb
or
cltd
enter
outsb
inc
ret
lods
dec
pushf
and
pop
inc
data16
mov
insb
pushf
sarb
sub
xor
lret
flds
outsl
clc
sti
mov
popl
jle
inc
ja
sub
xor
pop
out
mov
dec
push
fidivrl
push
into
sbb
fildll
ljmp
mov
mov
sbb
jne
mov
jl
sbb
mov
inc
loope
lock
and
jae
mov
movsb
jb
xor
lods
scas
clc
xor
jne
decl
sbb
nop
inc
mov
cmp
push
cmpsl
emms
jmp
xchg
xchg
rcrb
das
mov
movsl
idiv
pushl
inc
bt
cs
test
inc
mov
cmp
addl
cmpsl
jo
fimull
pop
lock
ljmp
test
pop
xchg
jnp
add
mov
popl
jle
dec
mov
mov
out
pop
nop
nop
fildl
xchg
dec
das
inc
cld
mov
out
lods
lret
out
les
mov
dec
in
ljmp
fsts
fdivr
jmp
arpl
call
jmp
shrb
shrl
lcall
test
or
imul
out
fistpll
outsl
call
adc
sarb
ret
les
inc
add
es
fcomip
sbb
js
sub
or
mov
ret
ds
mov
add
xor
dec
xchg
or
pushf
daa
dec
in
or
test
lods
xchg
xlat
in
cmp
outsl
adc
sub
imulb
pop
jo
ljmp
pop
ljmp
pop
je
bnd
or
insb
lret
and
ljmp
push
push
adc
and
mov
scas
jns
out
pushf
pusha
sub
outsl
clc
pushl
sub
aam
testb
insl
or
vmread
and
mov
daa
lock
out
adc
fdivl
cmpsl
dec
dec
test
lcall
mov
loopne
dec
dec
enter
and
jg
add
ds
sub
inc
fisubs
add
dec
jmp
je
inc
das
movsl
fwait
lea
rorl
xchg
movsb
nop
add
leave
test
arpl
les
pop
push
test
xchg
xchg
shll
or
loope
add
lcall
lret
push
sbb
xchg
loop
adc
stc
sub
loopne
fistpll
into
inc
es
imul
fsubl
inc
dec
jp
scas
filds
cmp
mov
push
sub
lahf
mov
std
mov
push
push
sub
inc
inc
dec
rorl
mov
rol
into
lret
hlt
mov
adc
or
jl
dec
mov
push
lret
push
xchg
and
jmp
and
sbb
lock
call
lea
pop
and
je
cmpl
aas
pop
das
shr
push
dec
xchg
adc
or
iret
fcmovnbe
adcl
iret
cld
mov
xor
cmpsl
leave
jae
jp
out
mulb
in
inc
pushl
pop
popf
js
dec
mov
jbe
pop
data16
xorb
loop
cmp
inc
sarl
mov
xor
xor
aad
cmp
or
or
dec
sti
inc
jl
std
pushl
movsl
cltd
into
pop
xchg
idiv
adc
or
inc
inc
jmp
adc
orl
rolb
and
std
cltd
sub
aad
aam
cmp
mov
aas
lea
paddb
sub
fimuls
std
out
push
add
lock
sarb
or
bound
pop
test
jmp
mov
decl
and
lret
add
xor
mov
xchg
xchg
mov
cmp
cmp
iret
into
inc
bound
push
adcb
cmpsl
ss
mov
adc
incl
leave
adc
repnz
lods
gs
cmpsb
je
insl
ss
nop
sbb
jmp
xchg
ret
int3
jecxz
gs
iret
xchg
jecxz
or
inc
lret
adc
popa
add
mov
xchg
int3
std
pushl
aaa
mov
incb
aaa
in
stc
enter
pop
sub
outsb
or
mov
pushl
outsb
mov
mov
jnp
ljmp
popf
ja
fbstp
pop
jp
pop
jp
jmp
mov
mov
and
xchg
lods
rcrb
and
mov
cmp
pop
push
sbb
stos
lods
sub
hlt
xchg
push
lret
int
inc
sub
in
fildll
or
popf
lock
mov
add
stc
out
xlat
push
test
sbb
push
inc
pushl
dec
in
movsl
mov
lods
lods
mov
jp
shlb
xchg
out
mov
mov
ja
cmpsb
jecxz
popf
movsb
xor
rcl
mov
out
aaa
adc
ljmp
mov
push
scas
fcomps
out
into
out
in
outsb
sahf
mov
in
jmp
sarl
pop
movl
dec
rolb
pushf
mov
jmp
sub
popf
mov
jbe
sbb
adc
loope
sbb
int
lahf
lods
jne
pushl
std
push
sbb
dec
cmp
xor
adc
and
je
loop
scas
and
in
test
shlb
ss
jnp
fists
in
popf
aad
jge,pt
insl
cs
ljmp
add
rcll
lret
fildl
movl
shr
stos
xchg
push
sbb
decl
aad
ja
and
icebp
pop
sti
fstpt
push
xlat
cli
push
in
aam
decl
add
addr16
mov
adc
sbb
and
lods
push
lock
dec
stos
lds
sub
outsl
adc
lods
jp
sub
or
lret
loopne
fcomip
xor
cmp
sbb
jl
pop
jbe
stc
ret
xchg
clc
mov
inc
ds
jo
sti
scas
or
jmp
out
mov
scas
test
xchg
call
lret
inc
std
ljmp
mov
insl
lcall
jmp
inc
jnp
cmp
pop
xor
xchg
shll
xchg
mov
mov
cltd
dec
aad
mov
rcr
int
jmp
sbb
clc
in
ja
mov
or
pop
js
sbb
cmpsb
mov
call
iret
cmc
push
lret
jp
mov
cmp
add
jno
arpl
icebp
lea
decl
sahf
push
rorb
aas
fisubl
add
lret
pcmpgtb
push
dec
out
add
xchg
mov
popf
loopne
pusha
adc
ja
jbe
addl
xchg
in
lcall
ljmp
sub
js
fists
loopne
inc
inc
xor
jae
mov
icebp
pop
repz
jl
pushl
cmpsb
aad
pop
int
out
dec
ja
sti
lea
mov
lcall
ja
loop
aas
cmp
fwait
xchg
push
or
sbb
mov
fwait
js
cmpsb
cmpl
loopne
lock
ljmp
cmp
out
mov
add
jb
fsts
jge
mov
outsl
bound
jae
loopne
add
cmp
repnz
iret
test
lret
ljmp
push
jp
loope
out
jecxz
cld
nop
jg
lods
stos
or
rcrb
push
mov
cs
imul
pop
data16
repnz
fdivs
dec
stc
pusha
test
fldl
jmp
add
adc
lods
in
cmp
inc
shrb
call
stos
push
fcoms
push
in
sub
out
cli
jmp
xchg
insb
test
mov
adc
inc
lods
push
out
inc
add
incl
rorl
inc
xor
repz
hlt
push
popf
adc
jg
mov
enter
icebp
xchg
xor
pop
insb
lcall
ja
dec
data16
fists
mov
push
jg
inc
decl
ret
adc
mov
add
cmp
incl
jg
lods
or
pop
dec
cmp
enter
in
andb
pop
data16
jp
shll
add
or
popf
jle
lods
out
scas
in
lods
fbstp
ljmp
ret
add
stc
jp
cltd
ret
push
lahf
fildl
into
lcall
movsl
cmpsb
jmp
xchg
mov
mov
fidivrl
fdivs
fbld
out
clc
ljmp
dec
mov
mov
lret
dec
sub
inc
dec
les
sar
jmp
insl
test
mov
stos
mov
imul
mov
or
call
sbb
mov
rorb
sub
adc
lcall
or
adc
push
daa
or
les
mov
jp
sub
incl
in
in
cmp
cmpsb
mov
incl
push
sub
xchg
push
mov
add
out
lock
dec
push
fidivs
jl
mov
dec
hlt
inc
insb
rcrb
mov
jg
mov
mov
loopne
popa
shll
pop
decl
jp
test
inc
mov
jg
lcall
cmpsl
push
lcall
mov
xchg
int
push
sbbb
out
xchg
lock
jns
fucomip
adc
xor
lock
pop
push
enter
dec
push
fs
jg
adc
xor
xor
xchg
outsl
int3
andl
or
or
movsl
jle
arpl
xor
jl
cmp
push
push
xchg
call
call
mov
cmp
jl
imul
push
pop
cmp
insl
mov
incl
jmp
loop
adc
xchg
lods
cmp
fildl
add
or
jo
gs
mov
push
mov
sarl
mov
push
dec
imul
aaa
cli
dec
add
lahf
xor
mov
push
mov
sbb
add
xor
ljmp
out
pop
ljmp
dec
or
jge
dec
jae
movsl
fldl
ljmp
jmp
dec
in
add
stos
xor
repnz
adc
sub
jnp
lods
test
test
mov
inc
mov
fimull
add
jmp
and
daa
pop
mov
add
sbb
bound
insb
sbb
aad
fcomip
push
mov
adcb
push
dec
push
pop
movups
mov
mov
xchg
and
mov
lret
cmpsb
and
mov
lret
xchg
push
push
cld
mov
outsl
sahf
mov
stos
out
add
jge
rcrl
inc
loope
xchg
clc
inc
ljmp
lret
fwait
mov
popf
dec
inc
mov
mov
dec
sbb
pop
test
mov
jno
imul
or
xor
lods
pop
iret
scas
cmpsl
nop
in
mov
daa
adc
jnp
movsb
xchg
or
mov
das
shlb
jle
lcall
add
mov
xor
push
movsl
enter
pushf
sbb
push
mov
mov
cmp
sarl
xor
pop
cmp
int
outsl
ljmp
adc
cmpsl
sbbb
addr16
sub
in
mov
ja
add
iret
nop
mov
lcall
lods
dec
add
into
dec
fimull
xor
cltd
stc
sti
ja
adc
loop
jno
lcall
icebp
push
xchg
xchg
or
test
xlat
std
aam
mov
fs
jg
and
mov
jne
mov
lret
inc
jg
jg
popf
fwait
mov
inc
mov
popf
les
rolb
adc
fnstcw
push
add
loope
decl
inc
jmp
cmp
cmp
push
cmpsl
mov
pop
cmc
sbb
sar
cmp
xor
push
jb
mov
adc
jae
arpl
xchg
pushl
fwait
shrb
ljmp
and
mov
call
and
les
out
jne
call
dec
stos
add
jecxz
adc
or
out
addr16
pusha
js
push
std
lcall
sti
shrb
xchg
jae
mov
stos
fistps
mov
incl
jle
orl
fildll
scas
sbb
int
jnp
pop
pop
decl
lret
mov
andl
or
out
clc
incl
les
and
in
xchg
push
pop
fwait
mov
fs
jb
jns
pop
xchg
call
sub
and
push
inc
mov
push
xchg
push
sbb
push
clc
sahf
stos
nop
ss
js
icebp
push
cmc
aaa
push
xor
mov
arpl
dec
lret
lea
push
movsb
mov
push
in
push
and
call
sbb
cmpsb
iret
xchg
jge
dec
outsb
cmp
je
mov
js
lods
mov
cmp
out
in
adc
or
cmp
mov
cs
cmpsl
das
jecxz
dec
sahf
or
test
daa
pop
in
js
ljmp
inc
add
mov
or
jl
in
xchg
jnp
imul
incl
aas
push
notb
xor
out
rolb
push
cs
dec
inc
fs
notb
les
fisttps
int3
addb
jbe
push
stc
xorb
pcmpeqw
incl
cld
call
repnz
mov
mov
or
sbb
stos
imul
ljmp
mov
outsb
pushf
push
push
sti
loop
lret
clc
pop
cmp
jnp
pop
jecxz
cmpl
mov
shrb
and
xchg
mov
loope
and
cmp
inc
fmull
ljmp
adc
lahf
xchg
in
mov
xchg
aaa
add
imulb
lahf
scas
stc
popf
jg
aas
cmpsl
pop
jae
sbb
loope
pop
add
jbe
adc
inc
nop
sub
call
jb
or
sbb
xor
hlt
push
outsb
mov
enter
imul
sub
cli
jg
sub
inc
cmp
and
lds
pop
enter
les
cmp
mov
imul
bound
cmpsb
and
inc
xchg
test
or
jp
outsl
movsb
cmp
cmp
or
dec
mov
filds
sub
sub
or
mov
sbb
pop
fwait
cltd
adc
and
ljmp
daa
jle
jp
outsb
fisttps
rcll
mov
int3
mov
cmpsl
lret
js
jmp
cmp
fisttpll
cmpb
cmp
incl
and
mov
jl
adc
negl
mov
call
cltd
mov
add
mov
mov
scas
jmp
jl
mov
aam
lcall
incl
adc
xchg
jp
xor
jle
lods
nop
outsb
sub
movl
decl
xor
mov
or
xchg
mov
cmp
cmpsl
sbb
pop
rol
popa
push
flds
rclb
out
fimull
sahf
jmp
sbb
mov
ds
pop
andl
adc
add
jmp
je
dec
in
xchg
jle
dec
xor
ret
xchg
orl
fs
jg
push
mov
fmul
mov
shl
imul
ret
arpl
jmp
push
xor
psllq
xorl
pop
icebp
das
clc
ljmp
cli
xchg
mov
pop
add
call
decl
jp
lock
add
dec
mov
inc
mov
bound
sub
inc
mov
mov
mov
add
cli
add
hlt
int3
int3
mov
les
push
shrb
scas
lcall
mov
xchg
xchg
pop
or
imul
cmc
adc
mov
jmp
iret
xor
sub
fwait
les
std
and
jmp
stc
xchg
xchg
cmp
push
jno
sub
je
mov
mov
jno
cmp
pop
insl
add
adcb
dec
call
call
fxtract
aad
xor
cmp
nop
rcr
mov
neg
nop
sbb
pop
xor
je
incl
dec
dec
rorb
pushf
xchg
test
imul
sbb
movsb
das
mov
fstpl
call
and
mov
jnp
adc
pop
inc
jle
je
in
jmp
sbb
std
and
xor
and
pop
and
pop
add
ljmp
clc
lcall
lods
mov
xor
xchg
push
repnz
adc
bound
mov
std
decl
and
int
cmp
xor
out
pop
or
imul
xor
jns
pushl
mov
enter
adc
lods
mov
movsl
test
and
mov
in
dec
cmpsl
call
xchg
sbb
mov
lds
jo
mull
dec
notl
int3
fnstenv
and
or
roll
xchg
js
pusha
jmp
cmp
adc
sbb
or
xchg
outsb
ret
pop
mov
leave
sub
jno
sbb
pop
loopne
lods
xor
out
mov
pop
pop
inc
sub
incl
rcrl
mov
xchg
rclb
cmp
mov
or
push
adc
pop
mov
jns
mov
test
pushf
jae
sbb
mov
shll
xor
ljmp
mov
outsl
clc
dec
std
pop
scas
aad
out
push
pushf
pop
nop
inc
inc
adc
mov
mov
mov
pushl
aaa
int
enter
add
les
adc
inc
adc
cmp
aam
pushl
pusha
xchg
clc
push
mov
xchg
or
in
xchg
data16
pop
xchg
lods
push
ss
mov
sub
ficomps
sbb
adc
push
std
aam
pop
sbb
pop
adc
sbb
incl
xchg
fistpl
pop
add
ret
sub
lcall
js
pop
adc
sbb
dec
xchg
ja
add
in
dec
das
es
mov
mov
push
push
pusha
xchg
ss
mov
inc
jl
cmp
mov
dec
pop
es
cli
popa
adc
icebp
test
mov
pop
push
jge
loopne
and
pushl
sbb
mov
jnp
dec
int3
popa
into
xchg
incl
loopne
jbe
lea
xchg
aas
jb
or
insb
push
inc
clc
pop
cmc
cmpsb
inc
insb
dec
out
xchg
cmpsb
outsl
aaa
mov
xchg
xor
incl
or
xchg
xor
in
dec
int3
leave
adc
ljmp
jmp
xchg
push
push
push
xlat
xor
inc
pop
jbe
decl
ret
andl
cmpsb
outsl
cmp
arpl
nop
scas
cmpsb
movsl
pop
cld
pop
adc
out
lahf
mov
or
jae
cltd
xor
mov
mov
xor
mov
sub
push
test
lret
or
jmp
pop
cwtl
js
sbb
pusha
clc
adcb
nop
push
inc
mov
xor
arpl
mov
mov
push
xor
dec
rclb
pop
mov
pop
xchg
scas
lock
ret
clc
xlat
push
dec
xor
sar
call
ret
sub
repnz
ljmp
mov
repnz
decl
repz
insb
into
add
repz
pop
stos
dec
aaa
std
fistpll
jbe
cltd
mov
popl
rclb
gs
subl
mov
out
dec
mov
int3
fisubs
ljmp
pop
les
ljmp
js
lods
fmuls
mov
in
mov
in
xor
call
ja
inc
mov
out
sbb
xchg
aaa
pop
mov
les
ret
mov
inc
mov
xor
ljmp
push
push
sti
rol
sub
roll
stc
dec
jecxz
fwait
sub
insl
add
inc
arpl
test
in
jo
push
sbb
ret
decl
clc
repnz
stos
xor
sub
inc
xchg
jmp
inc
cmp
cmp
fdiv
sbb
outsb
mov
enter
stos
pushl
mov
mov
gs
push
icebp
inc
add
xchg
ja
loopne
out
dec
push
mov
lock
repnz
sahf
xor
out
test
mov
dec
cmpl
bound
adc
dec
inc
or
push
adc
ds
xor
lcall
push
adc
frstor
cld
cmp
adc
es
pushl
pusha
mov
or
dec
sti
sub
sbb
addr16
filds
inc
sbb
leave
incl
cmpb
pushl
adc
ss
mov
mov
adc
add
dec
mov
ljmp
adc
shrb
or
xor
jmp
aas
in
pop
mov
stos
decl
addl
inc
push
dec
add
cs
adc
pop
pop
testb
fidivl
popf
cli
and
icebp
sbb
sbb
jl
pop
jmp
mov
out
cli
scas
sti
mov
mov
notb
sub
subl
inc
test
aaa
adc
out
gs
jbe
xor
push
xchg
xor
movl
jae
jl
push
arpl
xchg
inc
mov
mov
iret
decl
xor
outsb
cmp
mov
ljmp
push
pop
js
xlat
cmp
cmp
test
insl
inc
in
ficoml
push
icebp
das
add
xor
in
testb
call
movd
mov
dec
cmp
or
mov
jno
out
mov
jp
dec
stos
jmp
ret
mov
xchg
adc
mov
mov
or
add
fstps
add
xchg
adc
pop
push
shll
mov
mov
xchg
dec
cmp
decl
xchg
insl
inc
xchg
repnz
fs
mov
jnp
les
ja
push
imul
jmp
add
psubusb
bound
cmp
test
inc
mov
out
decb
enter
push
mov
clc
jnp,pt
push
push
mov
push
mov
test
jg
fcompl
mov
cld
pop
leave
hlt
lcall
add
xchg
jmp
jo
pop
in
jns
cli
push
and
mov
fcos
out
fsubrs
out
bound
dec
jp
cwtl
cmp
jne
sbb
or
stos
xchg
xchg
and
and
fistpl
out
ss
jmp
setne
call
inc
mov
adc
ret
flds
and
push
imul
popl
or
adc
cli
adc
cld
cmp
shufps
adc
xchg
stc
add
mov
or
push
pop
pop
fwait
popa
jo
jg
jo
das
shr
insl
xchg
out
daa
fsts
pop
and
arpl
pop
andl
pushl
pop
dec
nop
mov
ds
pop
add
outsl
int
cmp
add
or
xor
pop
pusha
sete
in
mov
lret
imul
mov
jb
jno
cmp
movsl
test
outsb
imul
mov
lret
jg
lods
xor
test
dec
or
loop
and
mov
jp
adc
dec
inc
call
adc
fbld
sub
sub
xlat
xlat
fistpll
incl
insb
adc
pop
loop
push
mov
cmp
lret
mov
data16
test
call
out
into
xchg
inc
decl
and
jne
lret
pop
cmc
lcall
adc
pop
xlat
inc
cmp
jmp
pushf
add
out
mov
es
mov
loop
cltd
nop
jmp
incl
pop
push
lret
cmp
roll
mov
jo
adcl
ljmp
shrb
gs
icebp
shll
mov
push
push
mov
loope
and
dec
jl
inc
in
jl
pushl
mov
sbbl
dec
adc
add
mov
cld
mov
imul
ljmp
stos
sbb
mov
xchg
lahf
xor
test
call
dec
rclb
dec
pusha
cltd
dec
aad
push
clc
adc
lahf
dec
bound
jns
inc
jl
pop
pusha
xchg
ret
jg
add
std
mov
xlat
cmc
ficomps
fsubrl
adc
cmc
lahf
into
repz
ja
or
or
ret
orb
push
out
inc
movsb
leave
sbb
mov
call
test
push
inc
shlb
jno
mov
cmp
aad
xor
jne
ljmp
mov
out
shrb
call
lock
push
cmp
sbb
cmp
dec
xchg
sbb
ds
sub
cmp
out
lcall
and
xlat
enter
fistpl
inc
or
or
insl
aam
mov
and
decl
out
adc
dec
xchg
mov
mov
loope
lret
or
jge
fs
popf
or
decl
sbb
fsqrt
cmp
mov
jno
mov
cmp
in
push
xchg
lods
repnz
fsubp
dec
test
push
rcrl
mov
daa
aaa
mov
sub
sub
decl
mov
mov
jl
jl
jmp
scas
cltd
in
aam
jno
mov
jl
subb
fcomip
fnstenv
inc
call
sub
dec
xor
insb
xor
mov
mov
mov
das
in
add
inc
addl
pushl
mov
push
inc
dec
and
enter
adc
lods
pop
adc
inc
jg
shr
mov
fcomip
jmp
stos
mov
jmp
ficoms
jg
repnz
jmp
cmp
or
fmull
lods
shlb
dec
mov
push
lret
adcb
pop
pop
cmpsl
arpl
in
push
lds
dec
sub
jb
in
pushl
mov
call
pop
push
outsl
inc
inc
popl
mov
mov
outsb
fcomps
lock
or
decl
gs
jge
or
out
mov
mov
mov
ljmp
enter
inc
aam
mov
fxam
sub
dec
adc
mov
lret
inc
mov
fildl
mov
test
and
stc
push
jno
jg
fs
add
sbb
call
and
int3
jp
fldcw
arpl
mov
xchg
repnz
repnz
cmp
xchg
dec
mov
lcall
aam
out
out
aaa
stc
test
add
stos
lcall
adc
jnp
jno
xor
sub
lods
pop
sbb
aad
out
stos
inc
push
inc
inc
lcall
test
cltd
jnp
ss
mov
jle
sbb
add
xor
mov
mov
out
leave
jmp
das
scas
fisubs
jle
adc
mov
lret
cmp
das
sar
xchg
jg
fisubl
sub
fimull
inc
mov
mov
add
movsl
cmp
ret
pushl
leave
shlb
jp
xor
adc
scas
mov
xor
in
int3
mov
out
lea
lods
into
pop
pop
fildl
adc
clc
pop
mov
jp
sarb
fdivrl
cmpsb
mov
adc
sbb
testb
lret
xor
dec
rcl
lcall
lock
out
jmp
mov
inc
or
pop
mov
or
loopne
pop
out
stos
xchg
sub
pop
mov
loopne
mov
mov
fadd
shrl
and
push
outsb
cmp
lret
dec
ljmp
cltd
andl
xchg
mov
and
lea
movsb
cltd
loope
das
clc
pushl
cmc
movsb
lahf
sub
dec
xchg
sbb
xchg
mov
int
out
dec
mov
js
lret
in
out
fisubrl
int
sub
mov
arpl
jg
xchg
dec
stc
movsl
loop
add
pop
scas
xchg
lret
movl
sub
ret
adc
pushf
adc
sbb
dec
mov
cli
jmp
dec
mov
mov
jbe
fbstp
aad
test
or
cmp
ljmp
push
mov
imul
pusha
sub
lahf
xor
outsl
or
jne
sbb
push
incl
jp
inc
add
cmp
mov
push
cmp
or
ljmp
fisttpll
ljmp
mov
add
aad
and
mov
xchg
ss
repnz
mov
je
mov
and
dec
mov
mov
popa
icebp
sub
xor
mov
insl
sub
adc
fcompl
lock
pop
pushl
inc
out
mov
daa
decl
ja
or
xlat
xor
sbb
jl
pop
push
mov
hlt
adc
xor
data16
add
sub
ds
ja
mov
clc
jp
cmpsb
or
ss
iret
jae
cmpsl
adcb
mov
dec
cmc
or
jne
lcall
xchg
shll
mov
jbe
jnp
jp
adc
inc
mov
dec
dec
call
sar
jmp
mov
cld
inc
movsl
mov
sarl
scas
cld
and
jl
lcall
dec
inc
pop
push
pop
or
ljmp
jg
fisubrs
push
adc
stos
push
sbb
xchg
add
decl
and
adc
je,pt
bound
fildll
push
jecxz
and
inc
sti
sahf
es
push
xchg
mov
dec
xchg
cwtl
int3
mov
daa
int
mov
ss
cmp
push
adc
fcmovu
add
repz
in
and
cwtl
ds
or
and
add
ljmp
push
fchs
add
lret
outsb
sub
mov
negl
shll
xor
dec
fdivr
fbld
fistpl
notb
jb
orb
call
in
fwait
mov
xchg
iret
pop
mov
mov
cli
xor
or
mov
jnp
pop
xorb
jo
imul
repz
and
clc
shrb
dec
fs
jg
jg
and
mov
push
push
lahf
rcl
push
jle
pop
jg
das
lods
lret
cmovl
xchg
fildll
repnz
arpl
mov
mov
mov
ret
leave
lret
fsubrs
mov
and
jg
inc
fwait
cwtl
xchg
lret
mov
mov
xchg
inc
xor
iret
jno
pop
cld
decl
sub
rorb
sub
test
jp
jmp
mov
jle
inc
push
fdivrp
xlat
imull
scas
cmp
in
mov
mov
sbb
mov
or
shrl
sbb
pop
nop
aam
push
push
insb
in
push
imulb
dec
jl
rol
pushl
mov
jb
addr16
pop
mov
pop
add
jle
std
subb
aas
mov
add
decl
dec
mov
mov
cwtl
cmpl
inc
lcall
mov
pop
jns
bound
xor
push
add
lods
jmp
fsubrl
ljmp
mov
or
movsb
add
test
pop
xchg
iret
jne
lock
test
mov
das
xchg
or
mov
dec
mov
mov
cmp
jnp
jne
or
call
test
lods
cmp
inc
out
ret
cwtl
js
adc
cli
inc
aam
ja
pushl
cltd
das
stos
add
push
bound
out
cs
fs
xchg
push
cmp
jmp
xchg
insl
inc
lds
dec
test
mov
mov
outsb
mov
xchg
jecxz
cld
lcall
int
and
sub
dec
adc
mov
data16
sub
cli
push
and
xchg
testl
jg
daa
fidivl
sbb
movsb
sub
cli
xchg
arpl
mov
push
mov
js
test
add
jg
sub
xchg
or
cmc
add
hlt
pop
sub
push
ret
addr16
cmp
out
jg
lock
fisttps
or
and
jp
lods
call
xchg
sbb
mov
aas
call
enter
sbb
xlat
xchg
test
push
stc
jne
push
pop
test
call
inc
sbb
sbb
pushf
adc
es
aad
je
je
sbb
hlt
mov
addr16
jl
add
adc
xor
ret
jp
iret
testl
fidivrs
hlt
stos
insb
adc
mov
and
scas
cld
push
std
mov
jne
cld
dec
ret
ret
pop
or
jbe
mov
push
sar
push
pop
popa
xor
and
add
push
lahf
cmp
push
mov
lock
adc
jbe
ret
xchg
loope
mov
add
xchg
fimuls
or
mov
jae
inc
push
adc
inc
fwait
mov
push
jb
jg
inc
sub
mov
jae
pop
adc
dec
call
mov
mov
cmpsb
and
mov
inc
mov
inc
sbb
sbb
sbb
cmpsb
cld
movsb
mov
inc
jmp
insb
test
mov
and
test
rcll
push
lcall
dec
xchg
fdivrp
cmp
popf
enter
or
mov
jecxz
jmp
insl
adc
or
jae
in
ret
sub
add
mov
decl
jnp
xor
or
xchg
jae
fstp
cli
pop
adc
hlt
fcomip
jg
add
fisttps
insl
mov
out
sarb
and
or
jl
mov
mov
sbb
dec
cmp
push
mov
inc
xchg
mov
das
popf
orl
call
inc
xchg
xchg
sub
mov
enter
icebp
div
adc
pop
test
pushf
pop
iret
repnz
jp
xor
push
popf
mov
mov
fcomps
cmpsl
ss
pop
push
in
lds
sbb
aaa
std
lcall
enter
dec
and
stc
cmp
dec
lcall
dec
cmp
ljmp
fs
cmp
imul
add
sub
icebp
xor
sub
inc
fwait
lcall
incl
dec
vpxor
and
lret
es
and
hlt
fldt
call
cmp
cmp
ja
inc
ss
sub
cmp
jnp
in
adc
and
lcall
imul
mov
das
jno
mov
add
sti
rcrl
fnstenv
push
mov
iret
sub
add
ret
cmp
clc
lods
test
loop
rolb
push
ljmp
aaa
lret
and
sbb
pushl
clc
xchg
insl
mov
add
cs
cmpsl
sbb
orb
fs
or
aad
iret
sarl
adc
xor
pop
cmp
inc
out
or
fstpt
out
mov
pop
out
gs
pop
xor
js
jle
mov
call
dec
adc
sub
mov
jmp
inc
add
divb
fsubrs
std
fucomip
jmp
call
popf
jecxz
rcrl
shlb
add
jp
aaa
jg
push
and
adc
aaa
push
mov
push
das
rcrb
lcall
das
mov
sahf
pushf
decl
sti
add
test
dec
mov
jl
mov
inc
jae
paddq
mov
ljmp
inc
scas
insl
push
add
add
mov
xchg
adc
imul
inc
call
fimull
scas
pusha
pop
in
pop
cmpsl
mov
sbb
cmp
jg
ljmp
push
xchg
pusha
fsub
orb
mov
add
ficoml
enter
pushl
mov
xor
jne
imul
pop
inc
xchg
add
out
xor
lods
lret
ficomps
stos
pop
aas
gs
rcrb
push
paddb
fwait
out
mov
cmpsb
sahf
jle
movb
test
xor
jg
adc
rorl
in
decl
loop
paddsw
je
jp
gs
add
mov
inc
movsl
loop
cltd
icebp
sub
lret
inc
popa
xchg
pushf
pop
shll
loop
testb
in
clc
call
or
addps
inc
mov
and
fisubrl
cmpsb
pop
xchg
sub
std
enter
ljmp
xchg
sub
and
pop
loopne
push
add
ret
enter
in
idiv
decl
sub
push
push
inc
push
sar
movsb
adc
aaa
jo
ds
ss
aad
cwtl
sbb
and
dec
mov
push
test
insb
pop
fcmove
cmpsb
add
inc
cwtl
adc
std
xchg
addr16
call
iret
jae
jno
sbb
push
mov
cmp
cltd
lret
xor
shlb
cmp
cmp
adc
jnp
push
clc
pop
or
test
cmpsl
mov
incl
data16
out
popa
xor
and
push
nop
out
sti
data16
lcall
shll
adc
inc
xor
loop
jnp
in
push
cmp
fildll
xor
ja
aam
sub
in
cwtl
and
in
scas
sub
sar
faddl
rdtsc
rcll
inc
sbb
xchg
in
xchg
lods
inc
mov
shl
xchg
lcall
ret
shl
xor
xorl
rcrb
jg
std
cwtl
lock
sbb
jg
jne
sar
pop
outsb
jmp
jp
imul
sbb
ljmp
sub
sbb
out
pop
lea
lea
mov
sub
iret
push
ret
or
pop
loop
int
aaa
jmp
scas
jmp
inc
repz
inc
dec
and
aam
daa
cmpsb
shr
mov
mov
pushl
cmp
push
test
gs
or
add
add
int
xchg
pop
ja
lcall
xor
xchg
scas
pop
je
jae
inc
mov
sbb
xlat
in
lds
and
xchg
daa
call
js
lods
fisubrl
cmpxchg
idivb
scas
clc
cmp
jns
inc
addr16
jmp
pop
sbb
fistps
rolb
pop
mov
dec
imul
std
sarl
fbld
sub
les
cmc
loop
hlt
dec
aad
loop
lock
and
lfs
dec
out
cmpsb
call
int3
mov
jecxz
imull
pop
punpcklbw
test
popa
mov
in
mov
and
int3
mov
outsl
nop
cmp
idivb
sub
dec
pushl
movsl
mov
scas
mov
pop
cmpb
mov
notl
lock
jmp
jne
mov
mov
lods
adc
jns
push
in
test
mov
lcall
mov
in
mov
pop
pop
test
test
shlb
loope
jbe
xchg
cli
out
cli
loopne
popa
sub
cmpsb
scas
mov
aad
imul
push
sbbl
sbb
ljmp
rcl
xorl
push
mov
mov
xchg
test
leave
xchg
call
incl
out
ret
mov
aas
cmp
cmpsb
jl
and
push
push
jno
or
pop
das
pop
pushl
enter
sbb
ja
or
or
sub
jns
pop
adc
dec
imul
jg
mov
syscall
ret
push
dec
ss
imul
mov
addb
call
dec
rcrb
in
les
jnp
das
adc
jb
xlat
add
decl
es
lods
testl
filds
jns
mov
lcall
scas
mov
les
ds
push
lea
hlt
shlb
mov
incl
push
imul
outsb
xor
loope
sbb
je
int
leave
pop
push
adc
pop
pushl
jl
scas
rsm
mov
leave
jnp
add
xor
cld
and
sub
fimull
enter
icebp
je
mov
mov
test
push
imulb
pop
js
cmp
cmp
cmp
adc
repz
pop
xchg
lods
pop
fisttps
pop
fmul
lock
mov
decl
jno
cwtl
mov
imul
es
xchg
push
pop
cmpsl
xchg
pop
ja
inc
into
pop
add
addr16
mull
push
ljmp
adcb
cltd
fmuls
aaa
ljmp
test
mov
jne
mov
arpl
xchg
cmp
jns
call
push
nop
and
mov
xrelease
pop
aad
mov
aaa
imul
outsl
cli
inc
xor
xchg
aaa
add
shlb
mov
insb
xor
decl
orb
ljmp
bound
stos
xchg
push
enter
bound
cmp
clc
dec
aas
push
push
push
fisttpl
in
fcoms
jg
fisttps
pushl
and
dec
ljmp
mov
out
shlb
inc
ret
push
add
cmc
jmp
stos
mov
mov
fmull
sub
stos
inc
or
outsl
loopne
mov
incl
push
pop
loopne
sbb
cwtl
cmp
add
jecxz
cmp
inc
lahf
stos
dec
jge
fildll
xorl
adc
ljmp
cmp
sub
mov
shll
adc
cli
movsb
repnz
cmpb
ja
jge
or
subl
out
frstor
and
inc
fcoms
fsubs
incl
mov
std
je
rcrb
iret
repnz
lret
movsb
daa
pop
xor
scas
push
sub
cmp
lock
loope
addr16
decb
xchg
xor
push
push
mov
movsb
and
dec
jge
mov
lahf
mov
call
repnz
push
in
inc
xor
push
or
or
scas
movups
aad
mov
lcall
mov
loop
jb
jg
pop
push
push
push
inc
call
push
cwtl
stos
mov
es
inc
call
fwait
js
pushf
adc
std
fsubl
pop
rcrl
call
out
xchg
or
pop
popa
mov
xchg
stos
in
push
loope
push
mov
adc
push
mov
mov
popw
movb
ljmp
stos
push
mov
jmp
cmp
cmpb
out
push
testb
xorb
lret
mov
or
xchg
inc
je
pop
adc
mov
lds
mov
xchg
or
aad
inc
pusha
out
loope
ljmp
mov
sub
dec
push
inc
cmp
add
jnp
jl
push
stos
xchg
xor
pop
jne
and
call
jns
popl
stos
sub
fucomip
adc
sub
push
sub
pop
dec
cmp
in
ja
movsb
out
jae
xchg
mov
loop
loope
pushf
sub
pop
inc
push
cwtl
dec
decl
pop
insb
xor
out
xor
push
pop
jle
stos
in
arpl
pop
push
shrb
and
test
cmp
stos
mov
leave
xchg
out
xor
mov
gs
int3
call
sbb
mov
shlb
int3
loope
cmp
fsub
pop
sub
insb
les
push
pushl
stos
leave
mov
inc
clc
xor
xchg
mov
mov
dec
jae
cmc
cmp
call
sub
imul
pop
ss
in
jb
lods
pop
cmp
ficoms
xor
ljmp
jge
jle
ret
rcrb
adc
fcomi
cmp
pop
xor
mov
inc
std
imul
inc
leave
dec
adc
mov
sahf
popa
sub
sub
movsb
ljmp
inc
pop
mov
adc
adc
and
lods
pop
mov
lods
push
arpl
incl
sti
mov
dec
aam
xchg
out
push
mov
push
lret
fistpl
push
inc
lds
incl
dec
cltd
jg
lcall
adc
push
repnz
ljmp
cmp
shlb
movlps
aam
dec
rorl
ss
mov
mov
pop
or
or
jmp
pushl
sbb
cld
adc
std
or
adc
add
jp
aaa
pop
inc
adc
pop
ljmp
insl
cs
loop
fs
lret
fists
jno
sti
lods
push
outsl
or
mov
fs
lods
mov
xchg
and
call
jl
and
clc
movsl
push
movsl
jno
push
xor
dec
xchg
xchg
test
leave
call
lds
jge
lcall
cmc
jecxz
jns
xchg
aad
add
fnsave
lret
pop
les
add
cwtl
addr16
ficoms
or
cmp
jne
mull
cmp
test
xchg
dec
add
mov
out
adc
std
loop
ja
shll
incl
pusha
add
sbb
rcl
movsb
jbe
ds
cwtl
mov
xor
out
adc
out
clc
incb
mov
or
repnz
inc
pusha
mov
lcall
fistps
xor
les
dec
movsb
mov
fstl
mov
sbb
ss
ljmp
jg
inc
cmpsl
push
sbb
pushl
add
push
pop
popa
add
xor
fidivrl
enter
pop
int
sar
decl
mov
sbb
xor
cmc
add
mov
jl
pushl
cld
lcall
adc
loop
jle
mov
int
and
add
and
decl
sbb
cmc
sub
adc
rcrb
cld
mov
mov
lcall
push
pop
fildll
dec
or
icebp
sub
out
xchg
or
xor
incl
scas
sub
hlt
notl
sahf
call
mov
scas
stos
jmp
inc
rcr
decl
mov
jmp
xchg
mov
ret
and
pop
lcall
add
mov
js
sub
call
sbb
ret
lock
lods
jnp
ds
ljmp
xor
out
pop
aaa
lea
lret
out
inc
push
push
push
sbb
dec
or
push
sar
shl
out
xchg
in
movsb
pop
rcrl
dec
jns
shrl
and
jno
imul
lea
adc
test
decl
imul
sbb
xchg
js
push
sbb
sbb
movsb
push
cld
mov
and
call
or
xor
popl
ficoms
sbb
sar
lcall
add
in
inc
pmullw
sar
daa
aad
out
jp
je
inc
pop
add
sbb
sbb
pop
icebp
ljmp
sub
ret
das
sub
xor
fnsave
adc
sbb
xor
xchg
lcall
pop
pop
jb
xchg
push
addr16
lret
pop
jl
add
pop
mov
ret
xchg
fbld
std
xchg
dec
cmp
mov
out
mov
inc
movsb
mov
xchg
aad
mov
push
or
add
xor
jo
pop
das
mov
psubusw
loop
outsb
or
push
mov
cmp
ja
jge
jmp
dec
outsl
out
fwait
shlb
iret
fisttpl
cmc
mov
test
cli
add
push
inc
ret
call
enter
cli
xlat
sahf
enter
xchg
xor
and
lods
mov
sbb
cli
cmp
mov
fisubrs
loopne
sbb
outsl
push
mov
std
jg
insb
add
cld
jecxz
push
gs
ret
jg
fstpt
andb
xlat
adc
sbb
sar
pop
push
jmp
rdtsc
mov
add
outsl
js
pop
nop
push
or
xchg
aas
xchg
js
insl
fimull
out
mov
cmp
and
mov
call
cmp
ljmp
mov
sub
in
sub
mov
movsb
cmp
mov
loope
or
push
aam
fiaddl
call
popl
dec
xorl
mov
sbb
xor
decl
divb
and
and
in
xor
add
popf
inc
mov
das
push
nop
std
cli
jecxz
nop
pop
dec
push
out
pop
scas
movsl
sahf
into
mov
mov
test
add
pop
std
incl
adc
and
hlt
sub
add
in
fsubrs
test
sar
mov
int
dec
xor
ds
fiaddl
mov
js
add
pop
cmp
mov
dec
inc
stc
mov
xlat
sbb
mov
lock
mov
call
mov
rol
iret
call
adc
ds
ljmp
fisubrs
in
pop
dec
cmp
mov
inc
xchg
mov
icebp
pop
jge
pop
mov
adc
adc
mov
xchg
enter
call
dec
pop
dec
push
out
xor
scas
clc
jnp
and
jnp
mov
cmc
clc
dec
fisubrl
cmpsl
pop
sti
daa
pop
cmp
movaps
pushl
jl
test
mov
cmp
std
jle
push
add
mov
leave
sub
test
mov
adc
cltd
sbb
xchg
mov
scas
dec
lods
adcb
mov
jnp
sarb
sbb
pushl
testl
movsb
inc
push
cmp
fldenv
mov
rcr
inc
andb
call
push
mov
out
mov
cmpsl
outsb
and
in
lea
pusha
dec
mov
int3
inc
and
lcall
loopne
mov
xchg
mov
mov
leave
push
scas
into
js
dec
call
data16
addl
jb
outsb
add
fmull
scas
cli
cmp
outsl
sbb
faddl
xor
mov
jg
enter
mov
cmp
sbb
ljmp
gs
gs
jle
ret
fldcw
aam
sub
lret
lock
out
xchg
inc
sub
clc
call
fdiv
push
inc
jns
mov
cs
movsb
xchg
and
or
ljmp
lcall
pop
push
out
icebp
idivb
fmuls
stos
inc
or
sub
nop
xor
popa
incl
pushf
mov
dec
test
jecxz
sbb
fs
jl
pop
js
mov
incl
xchg
mov
fcompl
je
sub
arpl
scas
cld
jbe
in
pop
push
lcall
pop
push
xchg
jg
sti
and
sbb
add
call
adc
ficoms
shrl
xchg
pop
js
stc
adc
dec
aad
roll
xchg
iret
jb
jmp
imul
clc
lock
ds
faddl
sub
fdivrs
jmp
adc
inc
int3
pop
mov
mov
imul
popf
sub
xchg
adc
mov
lcall
inc
stos
ljmp
sbb
loopne
jecxz
jns
cmp
jg
inc
jmp
pushl
std
xchg
jbe
cmp
sbb
xchg
incl
mov
mov
das
lock
test
add
jmp
sub
lahf
cs
fsubs
xor
jg
rcll
aaa
sti
or
adc
lods
cld
add
lcall
sub
mov
fisubrl
cmp
out
lcall
mov
scas
dec
repnz
adc
cwtl
lock
ljmp
fwait
cmp
imul
dec
inc
jns
stos
add
sbb
leave
je
jmp
or
mov
fisttps
jb
mov
in
in
mov
xchg
fld
ljmp
clc
ljmp
push
mov
jl
jge
add
jmp
mov
add
call
pop
int3
lock
pushf
rolb
or
pop
sbb
mov
push
decl
gs
repnz
or
scas
loop
movb
mov
negl
mov
jmp
scas
dec
pop
or
xchg
rorb
and
idiv
or
subb
mov
adc
decl
std
hlt
stos
xor
int3
or
clc
dec
mov
clc
dec
mov
outsl
xor
fs
fimull
lods
add
aam
ljmp
repz
out
int3
pop
loop
add
roll
and
or
clc
mov
mov
jae
outsl
jns
mov
inc
and
pop
insb
in
sbb
inc
mov
nop
arpl
lods
mov
mov
add
add
mov
stc
stos
movsl
ss
sub
mov
inc
dec
dec
mov
and
pop
scas
mov
cmp
lret
incl
push
ss
divb
push
pusha
sub
scas
push
pop
scas
shrb
rolb
std
jge
cld
pop
inc
adc
jg
xchg
and
push
mov
mov
cmp
jecxz
daa
cli
decl
into
cld
jmp
jg
cmp
cld
sbb
xlat
movsb
ljmp
add
stc
adc
lret
sbb
sbb
xor
push
inc
dec
fdiv
jg
aam
cmp
push
mov
insl
mov
jmp
popa
icebp
push
lret
andl
pop
jmp
leave
negb
int3
add
mov
out
mov
cltd
out
add
xlat
dec
lods
mov
sub
roll
and
mov
mov
decl
loop
push
fwait
inc
xor
xor
ret
jmp
push
fdivl
push
test
scas
dec
dec
addl
or
loopne
push
ret
cwtl
inc
enter
inc
out
sahf
in
bound
dec
mov
and
pushf
inc
ss
decb
pushl
shll
scas
lcall
push
xor
sub
dec
insb
sti
mov
sub
inc
inc
push
popf
shll
in
pop
push
sarb
nop
adc
js
in
clc
int3
out
dec
mov
enter
lret
dec
fimuls
inc
mov
push
sub
add
out
bound
js
push
cmp
movsl
clc
in
mov
call
das
jge
popf
cmp
fdivrs
push
nop
sub
mov
jb
and
std
and
xlat
push
inc
ret
cmp
stc
dec
fisttps
rcr
mov
pop
int3
imul
sub
imul
out
sub
adc
std
mov
mov
jns
and
jecxz
cmpsl
insb
pusha
test
aas
in
jmp
aas
mov
aaa
loop
adc
outsl
mov
mov
inc
adc
mov
ljmp
adc
add
adc
pop
xchg
int3
insl
dec
inc
es
mov
cmp
sub
mov
cld
daa
sarl
ja
mov
mov
dec
loope
fbstp
mov
int
mov
lahf
out
outsb
test
fstpt
lcall
loopne
enter
xor
mov
sbb
sahf
fdivr
out
clc
out
lcall
dec
inc
sbb
and
cmp
fs
insl
fdivrp
push
mov
call
pop
bound
adc
or
imul
mov
test
call
nop
cmp
adc
stos
or
in
arpl
pop
das
mov
sbb
mov
out
xchg
adc
je
mov
loopne
lcall
mov
les
insb
das
push
fstpl
mov
mov
popf
lret
fldl
mov
add
adc
clc
xor
cli
cwtl
sub
lcall
and
dec
mov
hlt
es
adc
mov
mov
js
jle
fsubs
sub
jle
bound
dec
pop
jle
add
popf
ds
ljmp
in
gs
mov
add
sbb
adc
sbb
cwtl
mov
cmpl
rolb
adc
stc
sbb
fdivl
rcll
lods
pop
xchg
xor
mov
add
repz
ljmp
stos
push
sub
jb
push
cmpsb
call
fsubs
orl
jns
xlat
cld
dec
cwtl
and
push
lea
cwtl
sbb
fstpt
dec
adc
push
rorb
jne
jg
or
jp
rcr
lods
add
pop
dec
push
xor
cli
fcomip
and
jle
jno
popf
pop
mov
or
decl
or
fildl
pop
jb
push
pop
jmp
lcall
sbb
shll
sahf
loopne
mov
pop
outsl
xchg
pop
pop
mov
stc
out
decl
jp
or
or
lcall
aaa
jge
stos
fs
pushl
loop
add
fnstcw
push
lock
dec
add
loopne
bound
xchg
adc
cli
mov
inc
jns
inc
add
mov
into
sub
jno
xchg
stos
push
outsb
and
sahf
decl
pop
sbb
sbb
cld
jge
call
inc
stos
sub
out
aas
clc
incl
cli
sbb
or
lds
add
cwtl
cli
es
jl
jl
decl
cmpsb
icebp
xor
popa
mul
int3
es
jecxz
push
inc
scas
xchg
data16
scas
jb
stos
xchg
mov
scas
sub
call
nop
xor
insb
xor
sub
ljmp
loopne
mov
dec
add
pushf
cmp
rcll
pushf
ret
mov
xchg
shrl
test
ljmp
ret
stos
insb
repnz
fsubrl
adc
jg
movb
xor
add
or
mov
xlat
or
out
inc
sarl
push
loope
daa
push
mov
sbb
jecxz
xchg
xchg
or
loopne
mov
decl
or
sbb
in
inc
push
mov
fstl
xor
jne
jae
dec
ret
cmp
inc
xchg
loopne
cmp
sub
mov
pushf
lods
clc
pushl
scas
pop
lret
in
mov
push
or
ds
icebp
xor
mov
pushl
cltd
push
test
cld
inc
enter
dec
lret
fs
jmp
jne
mov
jg
iret
push
inc
cmpsb
jns
mov
aas
mov
sbb
sbb
xchg
call
dec
ret
mov
adc
in
xchg
insb
mov
roll
arpl
movsb
push
jno
sarl
movl
in
push
sub
outsb
incl
inc
daa
test
pushf
lret
pop
adc
mov
incl
fcomps
popa
add
push
test
es
std
setge
lea
sub
push
mov
and
xchg
int3
sbb
sbb
scas
mov
lods
lock
bound
in
jo
add
lcall
push
pusha
xchg
cli
jns
inc
xchg
pop
mov
jg
push
mov
mov
mov
inc
sbb
orb
loop
clc
jno
add
sbb
dec
loop
mov
das
add
incb
sub
pop
popa
fs
les
shrl
sbb
addb
adc
push
pop
adc
pop
mov
cmpsl
loope
int
mov
xchg
cld
dec
dec
mov
jg
fstps
sbb
out
nop
mov
ficoms
sub
decl
mov
insb
dec
cmp
repz
add
jp
in
iret
push
aad
inc
and
jl
jno
xchg
les
mov
sbb
cmp
testl
fcmovnbe
stc
fs
adc
pop
repz
ljmp
cmp
out
mov
xor
js
lret
nop
ljmp
fsubl
dec
fs
aaa
flds
mov
push
push
out
fisubrs
int3
xor
rcrl
ja
clc
pushl
cmc
aam
xchg
std
sar
cld
decl
xchg
push
jle
add
repnz
dec
jecxz
ret
cmp
ss
pushl
in
push
push
cli
fidivl
addb
pop
ljmp
outsl
mov
das
add
faddl
mov
clc
ja
jl
stos
je
add
sbb
cmp
imul
jns,pn
adcl
lcall
neg
mov
enter
cmp
push
in
lock
add
cmp
ljmp
enter
add
dec
gs
mov
sti
fadds
push
test
mov
ja
ljmp
in
ss
test
and
jbe
test
jecxz
jmp
decl
in
jae
mov
in
adcb
xchg
fdecstp
es
mov
jg
inc
mov
int3
or
and
mov
je
decl
sbb
int
mov
pop
xchg
mov
xchg
movsl
out
inc
sahf
inc
mov
jg
jge
pop
in
mov
ss
dec
xchg
bound
and
icebp
push
sub
fsub
dec
leave
lods
mov
mov
call
add
lret
sbb
push
jl
add
add
pushl
push
call
or
nop
fcoml
jge
push
lds
rolb
hlt
movsl
fmull
lods
mov
sar
out
hlt
xchg
repnz
inc
cmp
stos
push
je
mov
pop
jp
bound
idivl
add
gs
int3
mov
inc
jnp
sbb
pop
jle
popa
push
outsl
call
iret
dec
jmp
add
cld
mov
pop
aam
loopne
mov
pop
xor
adcb
cmp
shl
cs
scas
adc
testl
shl
add
xchg
mov
fcmovbe
negl
pop
in
rol
add
push
ljmp
dec
jmp
add
inc
lahf
dec
in
sub
lds
inc
sub
aaa
dec
cld
roll
lock
bound
negb
ljmp
cmpsl
cwtl
sub
jg
and
or
jecxz
mov
aad
xchg
mov
sub
xchg
push
ss
lea
xchg
lret
repz
in
add
scas
sbb
js
adcb
mov
ja
jmp
cld
mov
rcr
out
xor
push
inc
inc
cwtl
cmp
cmp
int3
iret
testl
test
popf
mov
mov
mov
push
fsubrl
movsl
scas
sub
jmp
add
insb
fildll
and
hlt
xchg
dec
flds
leave
out
dec
into
pushl
pop
push
or
mov
je
xchg
dec
aam
out
mov
out
sub
repz
decl
shll
cmc
out
mov
iret
aas
xchg
leave
movsb
ja
jg
out
lea
mov
xchg
loope
iret
addb
sub
sar
jg
pop
cli
xchg
pop
xchg
jb
sub
adc
or
daa
and
fdivrp
fwait
dec
add
call
mov
in
imul
leave
movsl
clc
ss
push
ljmp
pushl
pop
xchg
hlt
pop
les
push
stc
andb
jg
outsl
jmp
je
ljmp
lcall
push
and
ret
sbb
push
inc
and
enter
cmp
push
fnstsw
mov
sub
inc
adcb
jno
inc
pop
gs
insl
sub
cmpsb
mov
jnp
das
orl
sub
cmpl
rcrl
call
sub
decl
andb
test
mov
stos
mov
jo
out
into
iret
fs
jge
inc
divb
xor
mov
sahf
aaa
and
stc
icebp
dec
xchg
in
pop
xchg
arpl
cmc
xchg
idiv
jg
incl
push
adc
orl
bound
sbb
mov
push
js
mov
adc
cmpeqps
int3
xchg
or
sub
mov
dec
out
sub
jmp
dec
sbb
mov
inc
pop
cmpsb
or
loop
inc
mov
or
ljmp
mov
sbb
sbb
cmpsb
int3
jg
mov
mov
mov
mov
fcomip
pushl
into
movsl
jg
test
test
push
add
ret
dec
mov
sar
clc
bnd
inc
cli
pop
fstpl
mov
lods
mov
and
std
cli
or
mov
or
out
push
inc
stos
fmull
faddl
stos
lds
push
inc
loopne
std
aas
faddl
lea
mov
inc
xchg
mov
int3
push
fcomp
cmp
sahf
rcll
les
or
cmp
jp
lods
int
jle
pushf
lods
dec
in
call
sub
cmp
add
imul
movsb
hlt
lcall
pusha
lea
adc
ja
dec
xor
icebp
jmp
aad
lcall
add
outsl
das
mov
or
xchg
scas
xchg
mov
push
mov
decl
pop
mov
insl
xchg
dec
aad
pop
lods
sub
lods
sbb
sbb
scas
cli
pop
test
push
jbe
cli
je
and
xorl
jmp
stos
andb
jmp
test
cmp
stos
orb
xor
rol
cltd
pop
faddl
cmp
mov
ret
mov
movsl
pop
pop
push
fstl
add
gs
popa
sub
or
mov
lret
dec
pop
addr16
fstpl
call
test
add
adc
mov
and
pop
out
imul
popa
stos
mov
jnp
xorw
jbe
cmp
xor
popf
int
bound
das
lcall
pop
stc
mov
inc
jns
mulb
jno
test
and
dec
insl
repz
incl
adc
daa
mov
mov
adc
inc
sbb
lcall
mov
xchg
xchg
xchg
cmpl
les
loop
mov
mov
mov
lock
out
ss
sbb
test
in
xchg
loope
inc
xor
or
mov
pop
cmp
mov
push
movl
iret
jnp
cmpsl
lret
loope
jmp
adc
repnz
jmp
inc
repnz
cwtl
xchg
sti
pushf
or
std
sarl
lea
ds
daa
or
mov
jle
sbb
daa
mov
mov
or
mov
jnp
das
adc
add
ja
cld
pushl
push
call
sub
and
movsl
mov
adc
rcr
dec
adc
incl
jae
daa
cs
in
mov
and
shlb
push
sbb
xchg
adc
jmp
pop
adc
mov
fwait
jne
ret
jmp
xchg
int
dec
push
lret
jnp
pop
or
decl
inc
dec
fsubr
jnp
rclb
es
push
mov
loope
mov
stc
loop
sti
add
arpl
pop
jbe
inc
mov
stc
out
sub
mov
sbb
fnstcw
cmpsl
add
pushf
ss
loope
cmp
and
jnp
or
pushl
popa
aad
push
ss
fwait
lret
ljmp
in
insb
jnp
icebp
adc
dec
cltd
fcomip
pop
mov
xchg
xchg
inc
sarl
pop
add
int
dec
push
fwait
ds
jb
xor
pop
cmp
repnz
rcrl
xor
pusha
fimull
fs
adc
push
repnz
decl
jo
xor
cmp
or
lret
hlt
popf
mov
sbbb
test
xchg
scas
pop
into
fbld
sar
jg
mov
push
mov
fcoms
pop
fiaddl
sbb
lods
in
out
cli
subl
push
or
sbb
sub
and
inc
push
jb
pop
pop
call
shlb
sbb
and
repnz
lds
stos
mov
jecxz
out
test
xor
pop
hlt
jmp
rep
mov
and
push
in
jg
jae
stc
cmpsb
adc
sbb
mov
jmp
cmp
dec
insb
lcall
pop
mov
call
adc
insl
cmpsl
stos
and
jmp
ret
nop
or
int
xor
popf
cmpsb
xchg
jp
cmp
scas
incl
sti
sbb
pop
pop
jne
in
fnstsw
call
jns
or
dec
out
adc
clc
ljmp
fs
jbe
lret
push
add
push
jl
sub
ljmp
je
imul
adc
xchg
fnstsw
push
or
cs
enter
shlb
mov
push
sbb
fiadds
je
jmp
xchg
push
flds
dec
ds
dec
sbb
jb
int
cltd
je
sti
mull
jl
rcll
int
cmp
mov
push
push
and
mov
arpl
jmp
imul
imulb
loopne
ffreep
mov
js
daa
cmp
adc
ss
decl
jae
iret
rclb
xchg
ss
aad
popf
xchg
enter
inc
cmp
insb
in
mov
jg
mov
sub
subb
pop
mov
pop
das
and
adc
ss
mov
dec
xor
mov
sub
sahf
mov
inc
out
adc
negb
out
arpl
movsb
sbb
cmpsb
cmc
jns
in
dec
call
mulb
pop
or
pusha
adc
in
ja
adc
incl
mov
mov
ljmp
dec
aam
jnp
dec
xchg
xor
sbb
xchg
imul
cmpsl
data16
rolb
jmp
inc
or
xor
jb
decl
hlt
mov
push
std
pushf
or
fstpt
inc
iret
dec
push
jge
fwait
cmp
cmp
xchg
pop
incl
inc
sbb
test
mov
lods
mov
push
fucomip
xor
push
repnz
adc
xor
out
cwtl
lcall
dec
mov
out
pushf
outsb
mov
add
movsl
clc
cmp
mov
bound
movsl
inc
divl
nop
mov
rorl
test
or
inc
sti
cmpsb
lods
int3
and
jecxz
cmpsb
pop
shrl
pusha
and
fmuls
pop
mov
loop
lret
imull
rclb
xchg
xor
mov
lahf
in
jl
adc
xchg
jnp
std
dec
sarb
or
mov
add
icebp
iret
iret
mov
repz
pusha
mov
push
and
sti
mov
xchg
sub
mov
xchg
scas
sti
dec
mov
leave
pop
shlb
ja
sbb
in
sahf
sub
inc
push
mov
mov
mov
orl
pop
jo
call
fidivrs
pop
dec
fsubrs
jecxz
incl
or
addb
sbbb
loopne
pop
jp
scas
cmp
lds
test
cld
leave
add
jmp
ljmp
ljmp
mov
stos
jae
ficoms
je
outsb
daa
add
add
jl
dec
jl
jmp
mov
ja
test
jmp
sbb
enter
in
mov
xor
lcall
xor
cli
enter
ljmp
mov
loopne
shr
es
pushl
push
fnstsw
cmp
and
cmc
inc
insb
ret
mov
enter
or
lcall
mov
imul
sub
or
cmp
pop
adc
outsb
xchg
add
inc
pop
mov
incl
push
hlt
test
stc
ja,pt
sar
cwtl
adc
pop
dec
aaa
jecxz
sbb
stos
gs
cmp
pop
lock
cwtl
push
insl
xchg
add
test
jecxz
jae
nop
xchg
cli
push
or
jp
jle
pop
fisubs
dec
cmp
fcomp
test
sbb
test
jb
mov
setb
fs
and
lcall
imul
int3
stos
shrl
mov
xlat
mov
push
lcall
jns
gs
cmp
pop
in
push
sub
test
push
push
fmull
mov
xchg
pop
ret
sub
push
clc
ljmp
pop
xor
or
adc
sub
ljmp
adc
sub
adc
cmp
shrl
lcall
sar
ja
int3
adc
dec
sbb
sbb
divl
push
jg
clts
stc
push
add
jle
test
stos
nop
fnsave
sub
mov
lret
push
fcomps
add
movsl
nop
jb
dec
rolb
adc
mov
cltd
popf
push
aam
jmp
xlat
out
cmp
mov
cmp
repz
pushl
aas
sub
iret
mov
fst
pop
pusha
stc
lods
xchg
xchg
cld
push
int3
cmp
movsl
mov
outsl
inc
mov
rol
fs
mov
fwait
popf
mov
lahf
js
cli
addl
add
leave
push
cwtl
add
mov
call
sti
stc
push
mov
insb
idiv
or
mov
sub
incl
push
and
mov
rcrl
mov
and
sbb
lcall
sub
mov
sbb
adc
out
mov
je
cmc
jecxz
clc
ljmp
or
xor
lds
cmc
sub
repz
jo
push
ficoml
inc
aas
dec
ljmp
add
test
test
loope
ret
roll
bound
mov
ljmp
lds
mov
cmp
les
dec
loopne
rclb
adc
lcall
decb
inc
leave
repnz
popa
or
push
mov
jmp
xchg
call
js
jb
lea
mulb
andl
jmp
mov
dec
adc
cmc
into
lret
in
jb
cmpsl
stc
cmp
call
sahf
adc
and
jne
jl
add
sbb
cmp
decl
int
cwtl
xor
cltd
scas
mov
sahf
daa
test
mov
sti
dec
cmp
aaa
mov
loopne
sbb
fidivrs
mov
add
mov
pushl
add
les
xor
rcr
jb
mov
cmpl
mov
pushl
pop
cmpsl
and
jnp
cmp
les
push
stos
mov
inc
addb
mov
test
ljmp
and
jb
xor
jo
push
lret
fdivr
call
push
fdivrp
xchg
mov
cli
mov
xchg
adc
lahf
mov
sbb
dec
inc
lret
call
out
lock
cmp
push
hlt
cmpsb
add
sbb
adc
mov
pushl
adc
dec
fbstp
push
sbb
cs
push
lahf
xchg
sbb
test
call
lret
shrb
xor
sbb
js
add
xchg
mov
mov
movsb
out
mov
push
cmp
shll
test
fs
push
in
push
sub
push
es
dec
inc
or
or
in
mov
mov
incl
imul
mov
mov
imul
mov
int3
jbe
std
jae
lret
mov
push
push
data16
stos
xchg
or
arpl
push
pop
ss
out
shlb
cli
lcall
lcall
cmp
ljmp
incl
jae
inc
mov
loopne
xor
add
and
pusha
jmp
popa
popf
cmp
cmpsb
shrb
ja
sbb
paddb
mov
adcb
incl
mov
jmp
mov
adc
dec
cli
aad
hlt
into
aas
xor
xchg
addr16
ljmp
push
jo
xor
into
sahf
mov
mov
pop
xchg
pop
es
xchg
stc
shrb
decl
mov
cmp
mov
pushf
push
outsb
lods
lret
push
jmp
sub
mov
lcall
out
mov
fdivrl
jle
decl
negb
sbb
sti
push
es
imul
and
daa
mov
mov
call
push
jge
cwtl
add
xlat
jbe
loope
push
dec
icebp
imul
shrl
dec
sbb
fdiv
in
loopne
sub
mov
jge
xor
test
pop
movsl
imul
mov
inc
mov
push
adc
sbb
movsl
hlt
or
push
or
cltd
popa
mov
mov
std
shl
dec
fwait
mov
cmp
sub
int
xchg
lcall
mov
loopne
xor
xor
sub
loope
daa
inc
inc
xor
mov
push
inc
mov
imul
dec
outsb
sti
cltd
mov
sbb
in
popa
inc
lcall
mov
pusha
nop
cmp
sbb
xchg
decl
jne
mov
cmp
xor
in
lods
fcoml
fisttps
mov
jg
test
rclb
mov
mov
or
fstpt
jl
call
test
jecxz
sbb
pop
inc
xor
sub
xchg
lahf
mov
fdivl
call
xlat
mov
push
inc
insl
mov
addr16
repz
and
jge
les
sbb
and
insl
xchg
cli
lcall
dec
repz
aas
cmpsb
incl
or
insb
or
sbb
lcall
pop
stos
std
out
xor
or
inc
shrl
jp
bound
adc
cs
call
pop
call
mov
add
shll
xchg
and
mov
cmpsb
call
mov
mov
inc
pop
pop
orl
push
mov
fmull
add
lcall
push
pop
dec
lret
pushf
jge
iret
jns
iret
dec
inc
mov
mulb
insb
rorb
dec
incl
dec
push
push
int
cmp
cld
cld
shlb
fimull
cmpsb
stos
int3
or
or
pop
outsl
pushl
aaa
sar
jbe
push
in
add
or
mov
mov
and
jnp
add
sbb
dec
adc
jnp
add
or
decl
out
and
lods
xchg
jb
inc
inc
idivb
cli
bound
jmp
adc
xor
cltd
pop
cmc
bound
call
pop
mov
lea
xlat
add
mov
push
shrb
mov
xchg
pop
lods
inc
ficompl
cli
and
call
jl
jnp
jae
cmpsb
adc
adc
mov
jo
sub
xchg
pop
jp
call
jmp
and
ret
pop
ljmp
dec
outsl
cmp
xor
ret
call
push
cmp
mov
lock
or
sbb
outsl
add
call
jne
jmp
push
bound
xor
call
out
add
xchg
roll
lcall
pop
ret
jns
add
mov
jp
add
or
decl
push
popa
out
inc
outsb
out
fsubp
dec
mov
cmc
add
inc
jae
push
xor
cmc
cld
jg
movsl
shlb
jmp
cmp
mov
pop
xor
mov
sbb
call
mov
loope
push
clc
dec
add
test
fsubl
jecxz
mov
sub
js
ljmp
jmp
push
scas
imul
jae
mov
ljmp
lahf
bound
int3
cmp
inc
arpl
mov
clc
jb
orb
mov
call
push
lret
adc
decl
mov
xor
dec
mov
inc
mov
jns
das
cli
lcall
jle
in
push
cmp
stos
in
mov
dec
fsubrs
xor
ret
lret
out
lcall
pop
or
push
cmp
push
ja
lods
mov
les
out
iret
sahf
mov
mov
fildll
dec
or
cwtl
decl
jle
out
fistl
jb
mov
jecxz
dec
test
mov
loop
cli
popa
loop
popf
enter
mov
xor
mov
out
pop
mov
push
jl
adc
pop
fisttps
mov
mov
in
call
scas
pop
push
hlt
xchg
sarl
fdivl
or
imul
aas
sub
decl
dec
cmp
sub
pop
and
filds
out
mov
movsb
pop
adc
sbbl
test
mov
jg
call
mov
fidivrs
adc
cmpsb
mov
push
add
and
in
inc
inc
mov
cld
movsb
movsb
cs
cmp
mov
loope
fldenv
xchg
dec
loopne
jmp
pop
adc
test
xchg
cmp
xlat
lcall
leave
aas
mov
pop
setns
xchg
and
pop
push
out
aad
pushl
lret
imul
in
adc
fbstp
dec
cmpsb
add
inc
jle
pop
decl
xchg
fwait
enter
fisubrl
push
sub
jle
int
xor
sbb
es
push
add
mov
xor
test
xor
jg
in
cmp
fmul
enter
jl
fbstp
cld
bound
loopne
movsb
cmp
pushl
xchg
mov
cld
stos
lcall
stos
mov
mov
inc
xchg
pusha
out
shll
shlb
ret
push
xchg
testb
hlt
adc
shrb
push
mov
ret
decl
cmp
movsb
insl
xor
dec
mov
dec
sarl
mov
pop
call
fidivrs
ljmp
adc
sbb
mov
das
leave
mov
adcl
sub
decl
adc
or
jmp
cli
cmp
outsl
shl
push
lds
js
sub
movsl
sub
sub
aaa
jne
adcb
mov
fstpt
lods
and
jmp
jo
and
aam
cltd
mov
ja
push
inc
icebp
nop
aam
lcall
sbb
dec
negl
mov
mov
addr16
dec
xor
ljmp
xchg
iret
ljmp
insb
pop
dec
inc
mulb
inc
xchg
dec
leave
out
cmp
xchg
add
ljmp
lods
cmp
aad
neg
into
ljmp
mov
mov
pop
sbb
test
jg
dec
out
mov
fsub
mov
sbb
fbstp
sub
xchg
inc
lcall
pop
mov
cli
add
sti
cmp
jno
fcomi
mov
jnp
jg
decl
insl
loop
sti
sbb
leave
mov
inc
or
or
lahf
jmp
dec
jg
leave
sbb
cmp
mov
sub
scas
andl
inc
push
mov
pushl
cmp
inc
divl
dec
cmp
mov
ret
int
sub
inc
scas
push
rolb
sbbl
mov
add
add
mov
icebp
sbb
dec
mov
frstor
push
icebp
bound
scas
cli
cmp
pop
jl
cmpsl
sub
decl
mov
das
xor
imul
dec
cmp
jo
xor
pop
mov
repnz
mov
out
jnp
call
pop
mov
inc
add
dec
push
adc
std
daa
dec
jno
aad
mov
cltd
sub
mov
test
sub
loope
inc
push
sarl
mov
jg
adc
mov
adc
jge
sbb
ljmp
add
roll
mov
arpl
cltd
decl
scas
mov
xchg
push
add
xor
stc
ds
mov
sbb
adc
imul
repz
mov
cmpsl
adc
jg
fisttps
mov
jo
call
jo
stos
je
sbb
cmpsb
adc
in
ja
aas
movsb
stos
std
cmp
into
sbb
adc
in
shll
inc
mov
roll
cmp
imul
stos
ljmp
cmp
cmp
inc
cmp
fidivl
outsl
outsl
inc
aaa
xchg
in
enter
in
sar
jmp
xchg
push
pop
fnstcw
cmpsb
dec
xchg
add
add
lods
jg
cs
dec
inc
adc
popw
push
mov
ret
rcrl
in
dec
cmpsl
mov
cli
xchg
lahf
xchg
pop
add
add
fdivs
mov
pop
sahf
aaa
sub
jp
aaa
push
hlt
add
dec
inc
xlat
in
adc
push
sub
mov
sub
or
shlb
cmc
lcall
cmp
jmp
popa
je
dec
xor
popf
pop
out
add
lock
and
lcall
dec
sbb
push
loopne
or
lahf
icebp
or
sbb
les
mov
jg
das
mov
arpl
mov
inc
push
xor
and
stos
loopne
push
add
jl
shll
sub
ljmp
out
loopne
inc
pop
or
jmp
inc
loopne
lcall
xchg
sbb
or
outsb
adc
sub
sbb
rolb
shrl
cmp
jp
int3
ret
inc
shl
mov
or
dec
lock
filds
dec
mov
in
out
ss
sar
decl
insl
dec
mov
jp
lds
fwait
int
mov
push
inc
or
loope
xor
mov
xchg
cmp
xchg
cmp
adc
or
lcall
dec
adc
fs
stc
xor
sti
sub
dec
mov
jecxz
popa
incl
imul
dec
dec
dec
test
jnp
or
adcb
lret
repz
incl
push
mov
xor
rol
jmp
pushf
jo
jne
push
loope
repz
repz
decl
inc
dec
test
insb
fwait
sar
xchg
insl
push
fisttps
lcall
jmp
rorl
xor
dec
dec
shrl
stc
add
mov
stos
inc
sub
js
add
mov
cmp
mov
xor
aam
jne
dec
add
imul
iret
push
lock
jg
mov
mov
in
dec
fbld
fildl
xchg
out
lret
xchg
xchg
sub
js
xchg
pusha
into
mov
jg
mov
or
jl
stc
ja
popf
daa
push
outsb
xchg
xchg
fsub
jnp
xchg
xor
jnp
adc
cmp
adc
jle
add
mov
ljmp
jecxz
inc
lret
push
adc
aad
sub
or
push
ljmp
pop
aam
jae
mov
or
lret
lods
lds
das
js
mov
pop
xchg
lock
cmpsb
imul
rol
icebp
mov
call
cld
dec
jge
and
clc
jmp
xchg
mov
cmc
adc
pop
ds
ljmp
sbb
movb
dec
adc
scas
jmp
lret
sub
ljmp
mov
cmpsl
inc
ret
push
xchg
sub
movsl
sbb
jecxz
out
adc
jne
lcall
clc
mov
mov
dec
mov
pop
movsb
jl
jge
cmp
call
stc
pushf
stos
repnz
sub
xor
xchg
bound
cmp
pusha
xchg
inc
jl
jno
inc
pop
cli
inc
lret
fbstp
jmp
sahf
mov
das
notl
cmp
add
incl
lods
sbb
inc
scas
mov
fwait
stos
xchg
adc
insl
cmpsl
push
repnz
movsl
cmc
out
pop
jmp
xor
mov
data16
xchg
xor
imul
sub
ret
insl
pop
repnz
push
mov
das
pushl
push
sub
in
push
sub
sbb
mov
inc
int3
push
inc
icebp
push
mov
push
pop
inc
sahf
xchg
mov
sahf
ljmp
cld
rorb
sbb
rolb
aad
jmp
xor
stos
aad
mov
loop
js
in
inc
test
push
cli
lahf
lods
aas
pop
out
xchg
jecxz
dec
push
test
loop
or
inc
ds
sbb
lcall
sbb
mov
sbbl
movsb
in
imul
add
out
decl
and
sbb
scas
xor
inc
inc
sub
imul
fdivrl
call
std
dec
nop
jmp
loop
and
and
clc
imul
out
std
inc
stc
and
call
outsl
xor
or
fldenv
dec
xor
in
mov
pop
insl
imul
mov
lods
inc
test
daa
cltd
rorl
mov
das
mov
std
or
pop
testb
jmp
dec
inc
pop
xor
fwait
cmpsl
sbb
lods
in
or
aaa
data16
int
lock
mov
cmp
imul
mov
test
jmp
push
mov
enter
push
sbb
lcall
leave
movd
inc
daa
fs
lcall
pop
adc
sar
push
ds
sub
push
mov
xor
xchg
sarl
sahf
xor
jg
inc
add
xor
inc
scas
ret
push
sbbb
or
xor
loopne
int3
std
stc
mov
xchg
daa
repz
ds
mov
cmovle
roll
jmp
loope
add
repnz
mov
xchg
add
adc
jp
pop
mov
dec
std
jnp
cli
jmp
jns
jmp
xchg
push
decb
leave
lahf
adc
lcall
or
lret
mov
mov
xchg
mov
jne
push
push
pushl
jge
push
mov
dec
movsl
adc
int3
repz
loopne
mov
pop
mov
test
in
mov
cmp
xchg
sub
jl
cmpsl
sbb
and
int3
incl
mov
and
adc
decl
fmul
stos
push
pushf
test
mov
ja
arpl
sti
pop
or
jmp
mov
movsl
sub
or
jg
imul
leave
lods
stos
cli
fsubrp
aad
decl
fisttpll
lret
insb
fcompl
popa
rorl
bound
or
dec
shl
mov
cs
out
pushl
repnz
xchg
cmp
shlb
inc
xor
jp,pn
clc
cmp
mov
xor
mov
fsubl
ja
incl
aas
mov
sbb
push
mov
add
pop
mov
sar
lcall
mov
mov
movq
dec
xor
outsl
testb
jb
stos
xor
lahf
repz
ljmp
lahf
sbb
xchg
fdivs
fistpl
loop
repz
mov
call
shl
outsl
addb
push
les
mov
push
lcall
xor
or
cli
leave
lods
lods
fcoms
dec
into
push
testl
and
dec
imul
mov
pop
jmp
sahf
sbb
insb
in
ljmp
insl
sarl
and
nop
cld
pusha
iret
xchg
lds
lahf
test
incl
or
test
push
adc
outsl
pop
leave
or
xor
das
jbe
orb
daa
add
sti
jnp
idiv
loope
ret
mov
test
shlb
push
mov
add
sub
mov
decl
outsl
data16
out
repnz
shrb
mov
xor
cmp
decl
xchg
inc
xor
popf
pop
outsl
daa
es
or
test
mov
mov
movsl
or
fiaddl
movsl
mov
pop
jne
jle
or
int3
mov
bound
sarl
cmpsb
arpl
and
dec
aad
mov
sub
dec
mov
incl
pop
mov
sbb
mov
hlt
imul
lock
call
addl
imul
aas
je
loope
ret
test
imul
incl
jbe
shll
cwtl
mov
jge
jae
in
movsb
pop
mov
mov
lret
mov
lock
xor
jb
add
push
pushl
scas
pop
faddl
mov
mov
inc
push
lret
fld
inc
notl
push
ljmp
insl
insl
dec
mov
jo
shll
mov
in
or
fiadds
sbb
filds
xor
jo
ss
int3
sbb
mov
ds
cs
add
pushl
outsl
imul
loopne
lret
in
fstpl
loop
aaa
mov
inc
fwait
lret
arpl
fsubrs
ljmp
lcall
fisubrl
xor
mov
movsl
lea
push
adc
into
notl
push
popa
mov
jg
ret
incl
sub
pusha
xchg
outsb
and
sbb
sub
aaa
push
xor
out
fs
push
sbb
or
sahf
cli
add
add
loop
iret
call
xor
jns
out
lcall
incb
out
scas
inc
out
iret
mov
mov
stos
jmp
xchg
cli
xor
out
push
jle
push
dec
inc
movsl
dec
rcrl
jge
pushf
mov
jno
dec
xchg
clc
sub
aas
daa
sbb
push
cmpsl
sti
fwait
cmpsb
mov
outsb
inc
lods
cmp
cltd
jno
incl
lret
or
xchg
int3
mov
cmp
out
xor
icebp
push
jne
aam
daa
dec
sti
inc
adc
xchg
incl
inc
stc
adc
ja
inc
jecxz
sub
and
xchg
mov
lcall
jmp
jp
jo
inc
jnp
lea
popa
jl
push
fnsaves
or
jg
call
fists
out
pop
sar
lcall
inc
mov
ret
adc
fnstcw
insl
mov
mov
hlt
push
loope
dec
fs
ficoms
sbb
mov
jne
mov
lods
pushl
mov
jb
or
and
stos
bound
dec
mov
mov
jmp
xchg
adc
push
sti
push
push
jns
fnstcw
push
into
bound
pop
insb
add
call
out
std
cmpsb
xchg
push
and
test
or
scas
gs
mov
pop
clc
mov
and
neg
jns
jecxz
hlt
ljmp
cmpsl
lret
and
xchg
cmp
into
or
mov
es
jb
call
mov
ljmp
loop
rorb
mov
sub
ljmp
adc
cltd
inc
mov
das
addr16
pop
fistl
pop
hlt
incl
cmpsl
aad
sbb
popa
lea
pop
imul
fcomip
aas
push
gs
cld
jge
jno
outsb
xlat
cltd
mov
lea
xorb
xchg
imul
inc
mov
jnp
cmp
add
stos
add
and
cs
loope
pop
das
icebp
sub
pop
dec
call
jb
std
fwait
jecxz
sbb
testb
daa
in
pop
fsubr
ja
jmp
jo
xorb
pusha
rorl
stos
ljmp
mov
jmp
add
cli
jbe
cmp
jbe
jne
in
loopne
clc
pop
xchg
pop
mov
call
imul
iret
cmp
inc
push
or
cli
xchg
sbb
cld
lcall
push
aas
std
jmp
aaa
repnz
add
subl
jg
pop
scas
daa
push
or
incl
dec
inc
mov
scas
xchg
sti
xchg
mov
adc
movsb
insb
mov
das
rcrb
or
adc
inc
inc
mov
sbb
push
add
push
cmpl
dec
ror
rcrl
insb
pop
push
sub
mov
outsb
popa
jge
ja
int
mov
xor
test
incl
cld
ljmp
mov
jg
xor
pop
push
sub
idiv
ljmp
pop
dec
jo
hlt
fcmovbe
push
xor
movsb
mov
loopne
mov
pop
insl
in
incl
sbb
mov
aad
cli
ret
test
push
ja
scas
stos
loopne
daa
stc
out
xchg
ror
insb
incl
push
inc
xchg
mov
scas
xchg
mov
jg
and
ret
dec
mov
jnp
jbe
add
mov
and
loopne
xor
adc
and
lds
sub
lcall
push
jns
sbb
insl
lret
enter
sahf
stos
jecxz,pn
insb
sbb
jle
decl
sub
into
jae
movsb
aad
or
mov
inc
popa
adc
and
test
ljmp
xor
xor
aam
fs
outsb
pop
gs
mov
xor
pop
push
sarb
out
inc
leave
xchg
jmp
sub
push
xor
mov
cmp
popf
lret
push
dec
mov
cmpl
pushl
jb
push
js
jle
stc
ja
sbb
jno
ljmp
bound
mov
pop
popf
adc
jge
and
xor
jp
fldl
dec
lcall
hlt
adc
test
call
aad
out
jae
jne
lret
xchg
insl
shrb
iret
mov
imul
aad
sbb
mov
jecxz
popa
mov
mov
jle
aas
out
mov
inc
cli
push
xor
adcb
pushf
nop
rcl
pop
jbe
dec
das
sar
inc
dec
jle
sub
jge
cld
fnstcw
inc
test
ud2
movsl
xchg
out
push
xor
adc
adc
ret
fxch
popf
les
add
bound
rol
mov
pushl
lcall
jno
adc
lret
pop
sub
bound
lcall
or
jmp
js
push
dec
insl
or
xor
fcompl
sahf
jmp
lcall
xlat
mov
push
sbb
jle
js
push
movsl
pushf
out
mov
mov
cmp
and
xchg
addr16
aaa
dec
mov
jne
fwait
in
test
add
imul
call
sbb
push
aad
adc
jg
mov
scas
dec
jne
loop
dec
dec
mov
or
xor
repnz
jmp
sbb
adc
or
jmp
jno
pop
dec
add
movsb
fadds
push
cmp
jge
mov
jae
clc
decl
and
dec
sahf
movsb
jno
call
mov
pop
and
movsl
mov
out
call
push
iret
dec
iret
push
jb
pop
sbb
or
adc
fadds
cwtl
dec
inc
xor
adc
dec
mov
cmp
insl
test
xor
mov
mov
sar
mov
insl
mov
sub
push
dec
mov
xchg
decb
sbb
adcl
lock
dec
sbb
lods
ljmp
sub
xor
mul
and
js
fwait
insl
fildll
imul
pop
incl
adc
mov
shll
mov
fists
aaa
mov
sub
decl
push
and
popa
pusha
sahf
dec
mov
dec
out
dec
std
adc
fcomip
lahf
jb
pushf
dec
dec
addb
shl
mov
loop
cmp
decl
fisubrl
mov
xchg
mov
xor
dec
sub
and
mov
pushf
mov
out
jo
mov
pop
mov
and
mov
xor
das
clc
dec
and
jg
icebp
xor
shll
clc
mov
loope
clc
jp
das
cli
jmp
jl
dec
pop
into
hlt
pop
push
pop
callw
inc
pop
js
adc
outsl
fists
int3
mov
xlat
xchg
outsl
ss
mov
rclb
lea
bnd
shlb
pushl
push
mov
add
pop
jg
in
decl
pop
out
ret
aam
jo
aas
fstpt
fmull
hlt
cs
aaa
adc
incl
xchg
sbb
cmp
nop
mov
mov
adc
in
mov
aas
test
xchg
ss
xchg
mov
mov
shlb
imul
sarb
fildll
adc
adc
adc
adc
cld
jg
push
pop
push
adc
xchg
xchg
add
jge
inc
cmp
incl
scas
push
stc
adc
mov
aam
inc
jmp
sub
push
add
push
xchg
sar
dec
gs
cli
sbbb
dec
push
test
aad
bound
sti
pushl
push
sub
adc
push
imul
sarb
out
clc
cld
je
pushf
cmp
leave
cltd
enter
mov
cmp
out
outsl
xchg
mov
sbb
ljmp
test
push
in
cli
sub
adcb
fimuls
stos
decl
lcall
hlt
jbe
dec
xor
or
outsb
lods
pop
adc
dec
fnstcw
xor
inc
ljmp
les
inc
mov
popa
cwtl
mov
cwtl
adc
outsb
xchg
insl
lcall
pushl
xchg
int3
pop
xor
sub
bound
es
xor
sbb
dec
adc
ss
gs
jp
push
dec
ljmp
sub
xlat
pop
inc
adc
sbb
test
inc
mov
inc
xchg
and
mov
mov
pop
inc
or
mov
mov
gs
popf
fs
fsubl
stos
popa
xor
rcll
icebp
sub
jl
inc
pop
in
cmp
mov
cmc
lods
add
cmpsl
mov
add
lcall
adc
xlat
add
out
movsl
repnz
lods
ret
test
aad
xchg
or
aaa
cmpsl
leave
out
das
push
inc
rorb
in
test
push
ljmp
lahf
inc
mov
mov
iret
cld
add
stc
sub
jnp
ljmp
push
and
cmp
jne
shl
pop
loop
lcall
pop
outsl
std
adc
loop
ds
stos
mov
cwtl
nop
lods
or
insl
mov
lret
sbb
ljmp
adc
mov
inc
pop
cmpsl
jle
iret
lea
scas
insl
stos
xchg
mov
jmp
sbb
and
xor
cmpsl
sbb
aaa
out
es
decl
or
outsb
je
sbb
movl
mov
std
popf
bound
call
sub
mov
cmp
loopne
movsb
enter
addr16
in
mov
rcrl
in
xchg
test
jmp
mov
jo
repz
mov
add
ljmp
pop
ljmp
mul
jo
mov
pop
ds
in
mov
out
in
lock
push
sbb
lods
imul
sbb
in
outsb
mov
test
adc
sti
cmc
mov
sbb
sahf
xchg
pusha
adc
ljmp
neg
movsl
cli
in
mov
xor
pop
scas
in
arpl
call
and
sub
loope
decl
inc
loope
push
aam
sub
and
ret
loopne
sub
jg
fucom
hlt
push
pop
mov
daa
mov
xor
fdivrs
cs
ljmp
push
cmp
xchg
adc
inc
mov
cmp
aad
inc
sar
pushw
mov
pushl
push
loopne
jg
dec
leave
popa
mov
insb
lret
lods
inc
jmp
mov
call
adc
insb
call
mov
inc
push
jl
into
xor
outsl
fadds
or
dec
sub
fs
clc
dec
rcrl
repnz
push
cmp
adc
imull
push
sti
cs
push
jnp
mov
cmpsl
ss
xchg
fcoms
fists
jo
or
mov
pop
add
jo
mov
push
sub
ljmp
mov
and
clc
mov
xor
mov
inc
and
aaa
cld
decl
sbb
lock
xchg
adc
dec
std
lret
stos
cmp
pushl
scas
test
add
xor
scas
sub
mov
mov
adc
mov
mov
loop
outsl
stos
sub
incl
cmp
mov
dec
mov
std
dec
stos
nop
xor
push
jno
incl
mov
mov
imul
mov
lock
and
inc
adc
and
mov
in
je
sub
jg
adc
stc
negl
jg
sbb
inc
and
push
xor
in
subl
aaa
and
pushl
push
mov
pop
jnp
aam
aam
sub
out
or
jl
jg
push
push
pop
mov
xor
ljmp
inc
pushf
nop
xor
jecxz
sbb
int3
fildll
fwait
test
divb
xor
jg
jnp
xlat
fbld
jl
nop
mov
sub
movsl
inc
call
pop
xor
push
fildll
push
push
loop
add
addr16
jmp
sub
call
xchg
pusha
jne
es
test
shll
xor
xchg
push
je
xchg
push
sub
aaa
cld
fisttps
jle
push
add
test
push
test
mov
add
pop
fdivl
pop
rolb
sarb
cmp
outsb
add
das
mov
mov
aaa
mov
lcall
mov
push
cmp
imul
nop
decl
cmp
cmp
jmp
ja
adc
pop
insl
sbb
out
xchg
lcall
rorb
or
xor
mov
jg
mov
ljmp
stos
adc
or
test
cmp
cmp
mov
aam
subl
or
mov
incl
lock
adc
push
jp
jg
cmp
dec
pop
or
test
idiv
outsb
stc
dec
shl
aad
cmp
fbld
incl
les
cmp
pop
das
push
xor
pushl
adcl
icebp
dec
add
sahf
mov
movsb
push
add
cmpsb
cmp
and
lcall
js
adc
adc
inc
pop
and
nop
push
mov
or
mov
incl
jge
js
into
imul
inc
mov
pop
xchg
andb
call
and
notb
js
in
mov
adc
jg
fsts
loopne
lock
inc
xor
cmp
xor
adc
mov
sti
dec
mov
add
repnz
lret
jb
nop
decl
mov
imul
or
mov
jo
add
xchg
xlat
or
incl
shrl
push
add
mov
cmp
fsubs
mov
imul
cltd
and
jp
mov
rcrl
push
dec
cld
test
sub
popa
sbb
imul
cmp
in
incl
shlb
push
bound
mov
mov
pop
sub
dec
in
pop
inc
or
insb
adc
test
call
jecxz
jmp
dec
stos
jl
loope
stos
and
or
mov
push
repnz
mov
sub
lds
lcall
dec
inc
dec
cmpsb
pop
and
add
popa
mov
cmp
mov
shlb
bound
adc
sbb
in
pop
xlat
inc
fchs
in
mov
mov
shr
mov
fbstp
jle
xchg
imul
dec
rorl
js
jmp
adc
mov
pop
adc
push
leave
push
push
jbe
int3
mov
pop
jns
dec
jg
xor
add
das
sar
clc
lds
mov
loope
jp
and
cmpb
pushl
lea
sub
clc
jg
test
test
xchg
mov
leave
mov
popa
jns
cmc
ljmp
and
xor
inc
scas
fimuls
adc
lock
xor
fbstp
pushf
stos
cld
cmpsl
dec
mov
push
dec
pop
loopne
sbb
cmp
push
mov
iret
pop
push
xchg
call
das
repz
call
xor
xor
test
loop
cmpsb
enter
pushf
incl
ret
dec
repz
cmpsb
test
jno
pop
cmp
cli
pop
lahf
cmpl
ret
fwait
mov
push
inc
rcrb
stos
mov
xor
sub
add
imul
pop
jo
and
stos
cld
inc
mov
movntq
mov
dec
sub
xchg
adc
imul
mov
dec
xor
in
insl
cmpsb
push
cmc
push
cmpsb
push
push
pop
add
aad
arpl
dec
pop
call
jmp
sbb
fldcw
cmp
test
mov
mov
sbb
inc
stos
cmpl
aaa
cmp
add
jp
fs
pushl
cld
iret
gs
mov
int
sub
incb
push
aad
inc
hlt
push
push
or
iret
enter
fbld
cmp
lcall
pop
or
das
mov
sarb
leave
addr16
cmpsb
sbb
xor
adc
loop
test
mov
stos
dec
cld
xchg
xchg
pop
mov
nop
cs
dec
scas
push
dec
lcall
lret
push
mov
push
int
pop
movsb
lock
pop
pop
fisubrs
push
mov
insb
jmp
xchg
mov
dec
jl
out
fcmovb
out
mov
add
jnp
in
and
ficompl
mov
jge
adc
xorb
xor
ret
mov
lret
outsl
dec
daa
xorb
push
xchg
out
mov
std
pop
inc
fisubrl
repz
out
adc
andl
or
jno
jecxz
jg
stos
pop
add
lahf
jo
or
add
mov
pop
or
in
push
lock
mov
cwtl
mov
jb
faddl
mov
cmp
lock
jne
sub
mov
pop
mov
jbe
add
jg
cmp
push
cmc
adc
push
add
call
mov
lcall
jecxz
movsb
mov
pop
inc
inc
in
pushf
cwtl
jnp
test
cli
sbb
xchg
cld
cs
mov
cmp
out
pushf
mov
mov
nop
and
popa
mov
mov
inc
cmp
lods
hlt
bound
shlb
js
mov
or
cmove
test
lcall
jmp
ret
and
sub
mov
push
pop
xlat
and
push
call
and
leave
scas
add
dec
jbe
xor
inc
fisubl
lcall
in
pop
in
add
das
cmp
iret
xchg
jno
sub
test
fwait
gs
dec
mov
cld
jns
push
mov
cs
dec
pushl
shlb
cmp
add
mov
data16
and
fstpt
loope
popa
pop
cld
decl
cltd
in
mov
rclb
mov
mov
sub
lret
adc
call
sarb
inc
cmp
out
mov
cmp
out
push
push
push
decl
xchg
rorb
cmp
pusha
cmpsb
rol
xchg
xchg
in
repnz
testb
and
cmp
aad
push
decl
out
dec
rcl
xchg
aad
lret
cmc
ds
or
incl
mov
popf
mov
out
sub
stos
lods
mov
pop
hlt
imul
push
lret
sbb
ljmp
push
fnstenv
push
cwtl
cmpsb
rcr
mov
or
aam
aaa
adc
adc
fcomip
pop
loopne
add
xor
jne
push
cmc
lock
dec
dec
sar
ljmp
data16
mov
xchg
lret
mov
dec
je
mov
sub
jecxz
int
inc
leave
lods
aas
ljmp
pop
mov
jae
lock
out
cmc
clc
inc
jecxz
sub
cmp
xchg
ss
iret
repnz
mov
incl
jle
jp
sbbb
loope
inc
adc
mov
rorb
lahf
push
test
jmp
stc
pop
outsl
lds
daa
mov
cmp
sub
add
dec
mov
das
jno
mov
imulb
jle
test
in
in
push
lds
adc
sahf
xor
cmp
out
or
lock
std
test
mov
jp
and
das
jnp
stc
rolb
push
jmp
mov
dec
sahf
dec
in
adc
and
jecxz
push
push
sub
mov
jo
insb
cmp
bound
les
xchg
adc
popa
xor
xor
adc
dec
push
ja
ss
fs
xchg
xchg
fcos
pushl
cli
jno
and
and
and
xchg
adc
cmp
sbb
in
xor
jne
jg
lret
jae
les
les
cmp
inc
pop
dec
gs
iret
aaa
push
cmc
lcall
push
in
das
fstps
les
es
cmp
pop
sti
xchg
rcr
pop
ljmp
pop
mov
popa
xchg
jno
push
incl
mov
push
lahf
aas
mov
push
hlt
ds
es
lea
mov
lcall
lock
sti
cmp
mov
adcl
rclb
and
in
or
dec
adc
rcll
arpl
stos
stos
mov
mov
scas
pop
movsb
cmc
repz
add
std
call
lahf
icebp
adc
push
in
inc
orl
dec
sbb
pop
add
add
ljmp
inc
stos
jno
mov
cmp
jecxz
jne
les
jg
test
fisubrs
lahf
xlat
push
dec
sub
lcall
scas
inc
inc
or
xchg
testl
aam
push
stos
push
mov
lods
inc
sar
sti
out
jne
sub
jecxz
push
inc
sbb
and
jo
add
mov
call
popf
pushf
xchg
rcrl
loop
hlt
nop
sub
and
loop
loope
filds
idivb
push
int3
push
mov
jmp
int3
mov
sbb
clc
cmp
jns
movsb
int
xchg
sbbl
pop
pop
and
and
call
pop
jecxz
pop
sahf
in
loop,pn
call
repnz
ret
fidivrl
fdivs
adc
cltd
inc
sub
or
mov
lret
testl
pop
adc
ja
aas
push
jo
mov
sahf
push
ljmp
js
lods
push
sti
jb
fsubl
push
ss
out
out
jns
imul
lds
ret
decl
pop
js
add
pushf
dec
int
xchg
loop
and
incl
mov
pushf
andl
jae
cmp
cmp
xchg
incl
fstl
inc
jle
aas
pop
or
cmpl
in
cmpsb
popa
leave
jns
ljmp
sahf
push
xchg
xchg
mov
dec
dec
cli
dec
cmpsl
mov
lret
cmpsl
subl
stos
test
das
or
pop
xchg
das
adc
jb
int
pop
popf
ljmp
pop
dec
pushl
mov
xor
icebp
inc
xorb
rclb
push
push
cmp
lret
ss
mov
popa
mov
add
add
inc
inc
xor
std
jmp
ljmp
into
scas
add
pusha
out
sti
jns
insb
jp
rcll
cltd
arpl
movsb
rcrl
ljmp
mov
cmp
leave
inc
dec
mov
std
sbb
jmp
mov
lahf
mov
shrb
dec
aaa
add
aas
addr16
popa
pop
out
cmp
sub
add
cwtl
mov
and
xor
mov
mov
sahf
pop
mov
dec
in
test
and
outsl
inc
test
mov
insb
push
or
mov
imul
ja
sar
adc
dec
lods
dec
jbe
in
popf
lcall
add
inc
cltd
cwtl
std
xchg
push
inc
sbb
jnp
aam
xchg
fcompl
ljmp
mov
inc
clc
jo
shll
scas
sub
ret
cmp
mov
jge
outsb
outsl
dec
xor
dec
xchg
adc
push
dec
rclb
lea
xor
or
decl
fwait
jmp
sahf
dec
int3
fsubs
mov
xchg
cmpsl
cld
adc
xchg
jle
push
inc
sbb
popa
push
testl
cmpsb
ret
add
aam
jg
push
inc
pop
lds
into
mov
aad
inc
push
push
movsb
mov
pop
jbe
adc
hlt
pushl
fdivr
mov
mov
fmul
clc
jb
fldcw
sub
adc
decl
and
clc
ret
ja
mov
fbld
dec
mov
stos
call
pushl
push
mov
pop
xchg
cmp
inc
int
lret
in
xor
loop
mov
in
lahf
ss
divb
fs
imul
leave
dec
dec
dec
mov
sbb
rorb
scas
clc
jg
daa
mov
mov
mov
jmp
dec
xor
push
movsb
out
and
inc
fbstp
pop
cli
pushl
xchg
aaa
inc
jmp
sbb
push
hlt
imul
fdivs
mov
xchg
adcb
lcall
mov
dec
and
add
mov
daa
or
std
mov
stc
cmp
xchg
jmp
test
and
xchg
leave
test
in
idivl
lahf
mov
ljmp
out
adc
push
and
pop
jle
shrb
mov
or
in
push
fcoml
mov
fcmovnu
mov
or
cs
cmpsl
jmp
dec
clc
mov
shrb
mov
and
or
out
test
ljmp
mov
mov
sbb
popf
fisubl
outsl
pop
aam
pop
scas
out
andb
vpsubsw
adc
incl
fsubs
adc
fs
addr16
mov
xlat
aad
push
mov
stc
sti
sahf
aas
int
pop
test
xor
stos
fcoml
jmp
shl
mov
in
ljmp
push
jae
mov
mov
pop
in
pop
pop
adc
lcall
dec
out
mov
push
jg
test
dec
vpshld
notb
inc
call
gs
cs
ret
xor
adc
xchg
inc
cmpsb
or
dec
or
js
out
jg
lahf
and
mov
sub
push
jne
or
adc
push
cmp
jmp
mov
das
xor
test
mov
inc
jl
push
xor
jno
loopne
xor
inc
data16
enter
xlat
mov
fsubl
ljmp
loopne
lcall
push
push
lret
and
push
pop
xor
mov
and
mov
inc
mov
mov
mov
pop
js
mov
loopne
inc
sub
dec
push
push
adc
into
js
and
pop
pop
cld
out
cli
mov
repz
mov
mov
orb
pushl
enter
inc
push
push
int3
push
out
and
mov
lods
xor
push
xchg
jns
incl
clc
and
mov
movsb
leave
or
xchg
mov
roll
or
lcall
pop
nopl
in
jmp
cmpsb
stos
xchg
and
pop
mov
decl
push
push
mov
loope
mov
cmp
cmpb
ja
cmc
sub
pop
leave
repnz
out
das
mov
or
icebp
lahf
cli
lods
jbe
daa
pushl
stos
loopne
push
fsubs
lea
out
add
xchg
pop
lods
out
cmp
sti
sbb
mov
xor
fdivs
push
push
or
mov
fcomip
mov
lcall
adc
dec
add
jmp
push
mov
jge
or
push
je
jp
stos
ljmp
xor
repnz
int3
and
int
pop
push
and
lahf
daa
xlat
mov
mov
mov
sti
xor
fnstsw
xorl
sub
out
call
push
js
lret
popf
push
icebp
xor
gs
jle
fisttpl
push
pop
add
add
lock
and
mov
loope
sbb
stc
mov
or
jnp
and
sbb
sub
fcomip
ljmp
sub
mov
leave
pop
dec
add
prefetch
bound
hlt
mov
ljmp
adc
adc
aam
jns
jecxz
pop
sub
sbb
arpl
fcomip
incl
fdivp
adc
lahf
cwtl
insb
inc
add
decl
fmuls
jbe
dec
data16
mov
sbb
lea
dec
dec
ficoms
mov
sub
lret
insl
call
lret
fisttpll
outsl
add
dec
loopne
cmp
mov
push
inc
andb
cmc
lret
loope
cmp
inc
loop
les
jg
sbb
daa
mov
dec
and
add
pushl
pop
sbbl
jg
in
xlat
and
push
fsts
shrb
jmp
xlat
ljmp
or
fcomps
call
mov
wbinvd
movb
push
in
ret
fcoms
sarl
jns
call
push
mov
xchg
pushf
cmpb
popf
in
call
mov
sahf
fcomps
roll
inc
push
addr16
rclb
in
jno
incl
sbb
jmp
jecxz
cmp
sub
sahf
mov
sahf
or
adc
call
dec
into
jae
or
dec
scas
loopne
clc
jl
in
jge
jp
dec
mov
pop
loope
xchg
shll
mov
xor
pop
sbb
out
push
jo
aad
xchg
pop
adc
test
or
rcrb
jmp
dec
jnp
push
mov
mov
fwait
xor
les
shl
pusha
xchg
or
in
enter
xor
ljmp
popl
pop
decl
jae
adc
sub
ljmp
push
lock
xor
jmp
in
movsb
lcall
cmc
xlat
ja
lret
jno
enter
pop
mov
stc
push
movsl
in
fcomip
fistpll
inc
jne
jmp
sbb
add
icebp
ret
pop
imul
sbb
inc
pop
dec
xchg
and
cmp
lods
or
push
sub
adc
jge
jmp
cmp
insb
mov
stc
out
les
pop
mov
aaa
sub
adc
imul
mov
les
aaa
jo
sbb
xchg
data16
add
call
or
push
sbb
movsb
jne
cmc
xor
jecxz
jle
repz
outsl
fnstsw
adc
fists
or
push
imul
stos
adc
jns
mov
mov
aaa
cld
jg
movsb
incl
cltd
xchg
xchg
mov
inc
aad
push
ljmp
xchg
and
insl
imul
adc
xor
sarl
mov
movb
sub
stos
cld
addr16
adc
jmp
mov
clc
adc
lcall
adc
mov
inc
jmp
sbb
adc
push
and
in
loop
jl
data16
lods
mov
mov
call
loop
inc
mov
fwait
cli
popf
je
ds
notb
mov
scas
out
fisttps
cmp
cli
mov
mov
or
adc
mov
lcall
sub
sub
popf
pop
gs
mov
mov
incl
sub
sub
xor
mov
call
mov
and
addl
and
fbstp
bound
nop
push
jbe
and
jmp
lea
shlb
mov
pop
stos
jo
ljmp
test
xlat
mov
shlb
xor
push
inc
xor
mov
in
aas
ja
mov
lcall
roll
pop
shlb
repnz
sbb
test
sub
js
inc
or
ja
dec
dec
cmp
adc
xchg
fucompp
push
imul
fadds
push
lock
push
mov
incl
xchg
jge
jne
xor
fstl
shrb
std
cmp
ss
add
movsl
adc
jmp
hlt
sub
push
ljmp
fnsave
aas
push
cmp
dec
int
pop
lock
jmp
adc
mov
pop
xor
or
push
popf
out
gs
push
clc
out
or
xlat
add
mov
mov
and
cltd
or
add
jno
cmp
aaa
jge
lahf
pop
lcall
dec
lcall
fldenv
data16
xchg
add
xchg
and
lcall
mov
mov
push
pop
jle
sub
jecxz
icebp
fwait
inc
mov
jnp
sbb
xor
ss
sbb
sti
mov
adc
mov
jp
mov
dec
mov
add
in
push
sub
decl
pop
mov
negl
jbe
lret
mov
data16
leave
test
xchg
imul
rdmsr
xlat
jge
dec
leave
cmp
cmp
push
sub
jbe
sbbb
dec
push
ficoms
cld
pop
lods
sbbb
xchg
push
cmp
les
pusha
pushl
xor
adc
and
pop
fisubrs
sub
out
fistpll
and
pushl
push
inc
cmp
mov
mov
cmpsl
ljmp
push
cmpsl
fcompl
push
lods
into
pop
adc
out
xor
sub
loop
daa
ja
popa
out
add
xor
inc
sbb
dec
lret
inc
mov
call
push
or
inc
push
or
or
dec
mov
or
fnstsw
inc
fwait
push
mov
or
dec
sbb
lcall
sub
aad
pop
mov
ds
cld
push
mov
cmp
pop
sbb
movsb
push
stos
movsb
pusha
ljmp
mov
pop
out
lods
pop
aaa
xchg
mov
push
decb
int
xor
mov
shrb
inc
insb
or
adc
jbe
dec
lahf
fwait
stos
lcall
or
xchg
cmpsl
jnp
pop
fiadds
repz
call
inc
and
sbb
flds
cwtl
and
fstpt
jle
lret
stos
cli
ljmp
push
mov
lahf
js
lahf
ret
xchg
sbb
insb
pop
and
xor
jg
ja
mov
adc
ljmp
push
es
bound
in
sub
call
or
mov
jo
mov
cld
and
test
adc
ds
shr
mov
mov
cmp
into
mov
int
shrl
inc
iret
push
ljmp
out
jno
cmp
jb
jecxz
xchg
inc
fsubs
dec
sbb
mov
mov
stos
mov
mov
dec
adc
out
jmp
jns
test
inc
xchg
mov
push
shrl
int3
cmpsb
sub
out
lea
andb
loope
lods
insb
aas
sbb
popa
ret
or
lret
jg
in
xchg
movswl
gs
lret
daa
out
scas
pop
pop
push
outsb
cmp
cwtl
xor
mov
push
icebp
pop
fstl
and
mov
call
insl
testl
mov
or
subb
add
jg
mov
outsb
addr16
xor
xorb
adc
les
pop
push
repz
scas
jg
mov
xchg
pop
movsb
jnp
inc
inc
jno
pop
cmpsb
repnz
xlat
mov
ljmp
xlat
dec
xor
sub
push
xor
test
cld
imul
and
ljmp
mov
into
pop
not
jmp
xor
sub
fadds
xor
inc
jnp
ljmp
fstpt
enter
jmp
push
cwtl
mov
xor
push
loope
out
cmp
jb
mov
in
sahf
add
decl
push
or
shll
out
cs
sarl
lret
jno
mov
pop
loopne
xor
push
ret
aam
jl
push
fisubrs
icebp
xchg
hlt
push
xchg
call
xorb
add
rcl
mov
pusha
js
call
arpl
aad
inc
into
xlat
add
mov
call
dec
jmp
inc
outsl
popf
int3
icebp
or
mov
call
jge
inc
cwtl
mov
fmul
add
sbb
dec
int
push
mov
aam
popa
cmpsl
in
fistl
ljmp
lods
call
cmp
inc
adc
pop
push
pandn
jb
out
jmp
loop
test
into
mov
or
xchg
jmp
mov
mov
lock
mov
jg
icebp
push
push
loop
push
mov
add
test
movsb
int3
cld
test
adc
or
stos
aas
lcall
xor
lea
pushl
scas
sbb
divl
and
sbb
in
repz
dec
popa
and
dec
sahf
pop
inc
fcoms
sar
push
outsl
in
arpl
les
call
std
ret
daa
lock
adc
pop
push
cmc
adc
ljmp
clc
call
shrl
out
cmp
mov
call
xchg
incl
jmp
pop
push
add
rclb
sub
xor
xchg
jg
inc
mov
lock
ljmp
push
and
imul
inc
mov
hlt
cmpsb
stc
andb
je
jmp
inc
mov
inc
mov
aas
mov
imul
dec
dec
inc
leave
inc
sub
sub
incl
mov
jp
imul
push
sub
sbbb
das
xor
jle
add
incl
lods
jns
mov
incl
mov
je
mov
mov
mov
cli
xchg
sbb
pop
jmp
clc
test
jg
andl
pop
sub
cld
data16
ret
mov
sbb
pushf
jns
mov
insb
adc
dec
add
push
push
fdivl
imul
xor
jge
jmp
rcr
cld
sub
xchg
sub
dec
mov
inc
inc
dec
mov
sbb
adc
dec
jbe
stc
jb
push
push
jbe
pop
pop
pop
insl
sbbl
jmp
out
cmp
std
cwtl
mov
je,pt
sub
jle
adcl
sbb
imul
ljmp
sbb
xlat
dec
ficomps
lahf
lcall
insl
and
bsr
dec
cmp
push
pushf
insl
addb
lods
pusha
mov
add
daa
push
outsb
pop
jge
out
sbb
mov
xchg
fadds
inc
fnstenv
push
xchg
mov
loopne
add
call
xor
lds
ret
jmp
inc
xchg
mov
push
sbbb
pop
fimuls
cmp
cmp
pushl
mov
lret
sub
shll
cltd
test
inc
rcrb
cmc
xor
pop
push
push
repnz
sbb
call
mov
call
filds
lods
mov
fisubs
cmp
sar
ljmp
ss
dec
push
stc
dec
add
jne
test
add
rorl
dec
fcomip
lret
pop
cwtl
xchg
nop
ds
xor
es
cltd
test
pop
mov
mov
jge
or
pop
aam
mov
mov
sbb
arpl
out
inc
jbe
sbb
lock
ficomps
mov
dec
out
icebp
cs
shlb
mov
decl
mov
inc
aas
sub
cmp
fildl
inc
ja
xor
fists
ficomps
arpl
add
into
inc
ljmp
enter
jnp
addb
add
xchg
test
cwtl
sub
mov
inc
clc
and
or
push
sahf
and
test
cmp
or
jns
pop
mov
pop
cwtl
mov
xchg
neg
jne
push
jo
pop
jp
and
shrb
out
fcomps
sbb
inc
or
sub
sbb
jmp
push
mov
int
jmp
cld
mov
ret
or
enter
xor
ret
mov
and
inc
lock
sbb
icebp
mov
inc
xor
mov
mov
decl
dec
fwait
sub
iret
jae
xchg
sub
ret
pop
xchg
add
ffree
mov
add
out
mov
push
cmp
ret
fimuls
ficoml
inc
sbb
dec
test
pop
add
and
js
add
pop
mov
clc
xchg
out
jle
imul
jmp
jnp
sete
mov
or
aam
cld
push
lods
test
sub
decl
or
mov
add
not
mov
pop
ret
cmp
pop
mov
ds
fsubrl
fs
inc
orb
cld
push
push
jmp
pushl
cmp
aad
in
pop
out
ja
inc
xchg
iret
adc
test
aad
mov
std
addb
ret
xchg
sbb
push
inc
jnp
and
inc
and
pushl
add
cs
dec
outsb
add
insb
adc
pop
gs
adc
loope
ljmp
inc
lea
dec
ret
mov
add
jbe
rorb
cltd
int
je
and
adc
notl
lock
jnp
jmp
test
push
xchg
into
movsl
imul
mov
lret
cmpsb
ret
fbld
enter
push
jle
mov
lcall
jno
mov
inc
rclb
cmpsl
xor
and
int
push
sub
jp
or
subb
cmpsl
lret
push
out
js
rorb
inc
xor
mov
movsl
cli
pushl
mov
idivb
pop
fwait
orl
add
imul
ljmp
outsb
push
repz
mov
dec
daa
ficoml
cmp
lea
cmp
lods
fs
leave
jl
pop
ss
popl
aaa
sub
out
divb
push
aam
decl
not
data16
push
out
cmovge
data16
shll
xchg
stc
pop
jno
push
push
mov
incl
add
fists
bound
mov
shrb
das
jmp
adc
mov
decl
jg
sub
out
mov
push
and
test
aam
int3
push
and
lcall
mov
fdivrs
sub
inc
lods
mov
cmc
xor
pop
cld
push
aad
incl
call
pop
pop
cwtl
es
or
adc
ret
lcall
dec
jae
ljmp
add
jb
js
sub
arpl
sbb
jnp
addl
loopne
jge
popf
jp
dec
stc
hlt
xor
repz
mov
lock
inc
add
ret
ror
lock
jp
mov
imul
stos
jne
push
test
shlb
scas
push
movsl
cmp
jecxz
and
call
mov
mov
inc
test
sarl
push
dec
sbb
fidivrs
xorl
add
cmp
mov
jne
incl
pop
popa
sub
outsl
mov
out
push
xor
and
cmp
jbe
push
jnp
jle
mov
mov
shlb
mov
cmpsl
pusha
pop
mov
mov
decl
inc
add
dec
pop
scas
bound
notb
jecxz
sub
js
jb
decl
mov
les
mov
mov
je
ljmp
test
dec
cwtl
movsb
test
loop
stos
mov
push
addb
jg
and
add
xchg
bound
aaa
in
outsl
test
mov
insl
jp
mov
pushl
incl
rcrl
icebp
jl
add
negb
andb
cmp
adc
ud0
jg
sub
cmp
dec
pop
sub
adc
pop
pop
nop
add
sti
jmp
insl
lock
lcall
fcompl
popl
lock
aad
mov
stos
in
cmp
pop
rclb
inc
cmpsl
imul
fdivl
add
lcall
ja
mov
inc
es
aas
push
in
mov
mov
not
lcall
fcoml
adc
add
push
sub
or
push
push
adc
ljmp
mov
in
mov
ffreep
sub
outsb
xor
mov
sarl
orl
inc
ljmp
push
xchg
cmp
daa
ja
rcrl
adc
stos
out
add
inc
adcl
bound
xchg
lret
xor
inc
ljmp
fistpll
fbstp
sbb
mov
shlb
push
sarb
inc
in
xchg
imul
call
inc
daa
fadd
lret
inc
fcomps
sbb
add
inc
or
add
mov
add
call
lcall
data16
push
sbb
cld
popf
xchg
mov
dec
mov
add
lcall
nop
add
lcall
jmp
loope
pusha
out
xlat
xor
in
mov
call
es
fwait
pop
enter
sub
xor
insb
add
pop
pop
fists
mov
jl
sbb
fwait
inc
inc
xor
mov
inc
adcl
pand
jmp
imul
insb
loopne
pop
insl
push
fcomps
xor
cmp
or
enter
in
cld
in
push
add
mov
pop
fiadds
mov
mov
cs
inc
xchg
out
pusha
xlat
xchg
add
sub
ficoms
movsb
push
ljmp
out
inc
rcl
scas
out
or
loop
or
lock
jp
testb
mov
jmp
jecxz
lahf
push
add
pop
in
decl
fldt
xchg
out
cld
inc
incb
xor
out
mov
incl
xor
into
dec
xchg
xchg
test
pop
xchg
mov
clc
add
dec
pusha
test
fwait
shll
sub
addb
push
insl
push
icebp
lods
jb
add
mov
inc
test
push
les
cmc
ret
jl
inc
test
call
sub
adc
into
inc
pop
jg
jp
int
out
ja
ja
dec
mov
adc
sbbl
xor
pushl
fisubrs
popf
pop
mov
shll
inc
push
pop
bnd
cmp
decl
jne
xor
outsb
jns
mov
jl
stc
jns
popf
in
dec
xchg
push
dec
cmc
in
call
aas
out
sbb
xchg
sbb
xchg
leave
repz
and
jmp
out
dec
xor
sub
movsb
push
fiaddl
popa
mov
adc
lcall
in
push
mov
lret
pop
outsl
jmp
sub
jno
xchg
mov
add
push
xchg
sbb
icebp
add
jmp
inc
or
enter
addr16
pop
xchg
cmp
and
ja
mov
cld
adc
mov
mov
ret
inc
xor
push
dec
fisttps
inc
insb
das
sbb
leave
inc
js
je
mov
jae
push
or
iret
xchg
insl
clc
arpl
call
loop
fsubs
or
jl
mov
in
sti
into
sbb
cmpsl
repnz
call
cmp
push
jg
mov
or
mov
popa
xchg
aaa
push
mov
clc
jmp
mov
dec
push
insb
sbb
mov
ljmp
mov
mov
add
mov
in
mov
pop
test
jg
test
ficoml
mov
add
cld
jb
cmp
and
add
adc
rol
inc
dec
xor
dec
cmp
loopne
ljmp
jmp
repnz
imul
push
push
out
sub
in
xchg
jns
lea
clc
push
pop
lret
movsb
test
cmp
aaa
add
mov
xchg
dec
push
mov
incl
nop
mov
add
fimull
outsl
addr16
jl
xchg
cmp
adc
sti
jge
ja
call
mov
cmpsl
sti
lret
das
mov
mov
and
dec
dec
js
js
out
fdivrs
mov
add
cltd
repnz
fsubl
inc
fwait
sti
arpl
decl
adc
xor
std
sbb
xor
add
shl
cmp
mov
incl
aas
aaa
mov
adc
mulb
inc
push
dec
cs
dec
push
inc
gs
cmp
inc
fists
cld
adc
inc
and
popa
arpl
insb
mov
aas
cmp
add
sub
test
pop
insb
mov
call
scas
ljmp
cltd
rorl
add
jb
cmpl
decl
pop
adc
orb
cmp
loope
cmp
fildll
xor
jmp
lods
in
test
shrb
lock
scas
out
cli
test
lods
sbb
push
addr16
cmpsl
add
cld
jmp
popa
mov
sbb
pop
aaa
dec
loope
cmp
jno
inc
mov
jp
mov
mov
les
add
jmp
sub
xor
jl
movsl
jge
sub
mov
lods
sub
ds
jg
mov
push
lcall
sbb
fs
dec
push
movl
jne
rorl
xor
shrl
jge
cmpsb
mov
lcall
leave
pop
inc
fistpl
xchg
je
xchg
je
and
and
mov
jns
sbb
lret
loope
into
outsl
mov
cmp
add
repz
xchg
jg
inc
out
add
jne
dec
push
enter
mov
jbe
add
xchg
push
out
cli
push
add
in
repnz
push
test
cmpsb
push
loop
jae
je
jg
aas
inc
loop
jmp
mov
sub
cmc
adc
ret
push
cmpsl
out
or
jg
cmpsb
rcll
cmc
ja
mov
cltd
dec
icebp
and
sub
cmp
pushl
cmp
inc
dec
test
dec
cmp
push
dec
cmp
mov
into
jnp
loope
cmp
mov
mov
ljmp
pop
inc
mov
clc
pop
mov
es
insl
push
jg
sbb
sub
lock
lea
sub
pushl
aad
cmp
and
push
jbe
iret
and
stos
fmuls
lret
jmp
add
sbb
lods
jbe
and
adc
cld
pushl
dec
adc
xor
sbbb
outsl
cmp
inc
jl
sbb
sub
fxch
decl
mov
adc
push
mov
inc
fisttpll
mov
test
push
out
stc
imul
pop
das
mov
cmpsb
cmp
push
in
in
shlb
les
or
xlat
ljmp
mov
fistpl
es
pop
inc
mov
inc
mul
adc
cmp
decl
ja
fsubs
jl
shr
es
test
or
xor
pop
cmpsl
loope
mov
cmp
into
js
arpl
pop
ljmp
arpl
ja
xchg
sbb
push
xchg
sbb
inc
cmc
test
jecxz
and
push
jmp
repz
dec
inc
push
jnp
pop
or
inc
loopne
jnp
jmp
ja
les
fiadds
cmp
jmp
sahf
add
sbb
push
push
loope
pop
psubusw
or
pop
fcmovbe
scas
in
mov
sbb
out
cli
incl
shrl
into
push
ffree
push
cmp
and
inc
ds
ljmp
test
das
outsl
add
enter
cmp
lods
dec
mov
cmp
lds
push
push
jl
ljmp
cli
sub
jae
mov
repnz
stos
movsl
jecxz
inc
xchg
pop
cmp
into
xlat
test
std
adc
inc
cwtl
inc
sub
scas
stos
dec
sbb
push
jb
dec
xor
push
aaa
xor
mov
hlt
push
addl
rcr
mov
fcmovnu
fnstsw
aas
aas
pop
loop
loopne
xor
xorl
pop
in
out
je
dec
jg
incl
pop
call
push
sbb
push
jmp
or
cli
std
ret
jnp
xchg
jecxz
lock
fimuls
pop
nop
ds
dec
mov
add
notl
lcall
pop
and
mov
imulb
cmc
inc
test
push
sbb
mov
add
cmp
and
push
cmp
lock
cltd
fdivrp
mov
daa
dec
decl
cmpb
sbb
clc
cmp
cmc
mov
js
movsb
xchg
cs
pop
xchg
imul
in
in
and
or
jle
mov
fadds
push
lods
pusha
fiadds
ds
cmpsl
and
loop
sub
cmpsb
adc
push
movsb
sbbl
pop
jp
dec
xchg
jg
mov
arpl
adc
lea
sbb
aaa
fsqrt
lret
mov
mov
mov
lods
fbld
movsl
jle
adc
add
or
cmc
out
sbb
ljmp
movsl
dec
mov
cmp
data16
cmp
fisttpll
call
jns
sub
jecxz
inc
dec
lods
and
dec
js
dec
mov
cli
sti
incl
cmp
add
loopne
decl
jge
and
pusha
outsl
js
cmpb
in
sbb
mov
dec
mov
and
cmp
jge
lock
jl
sub
cmp
inc
or
mov
aaa
jno
push
shrb
push
xchg
and
xchg
xchg
ljmp
mov
jge
test
dec
bound
les
mov
mov
cmp
jmp
lds
mov
stos
lcall
add
mov
mov
dec
add
dec
daa
lock
mov
and
xor
call
xor
fs
xor
push
mov
call
sub
and
mov
xchg
cmpsl
jnp
stos
test
pop
stc
cld
sbb
add
or
test
pushf
pop
scas
jb
xor
pop
dec
dec
cli
push
in
stc
call
xor
mov
iret
lock
xchg
jmp
lcall
psubsw
and
xlat
data16
cmp
shll
aad
sbb
push
decl
or
sbb
cwtl
dec
xchg
rolb
sbb
incl
pop
call
push
push
xor
mov
or
xchg
xor
decl
inc
shll
data16
fdivp
adc
adc
fildl
mov
cld
adc
push
push
xlat
shlb
jecxz
cltd
fs
ret
rcll
pop
stos
or
sbb
jl
sbb
mov
jg
call
in
pop
das
add
push
imul
jg
and
pop
jb
jmp
or
or
in
xchg
mov
in
iret
cmp
mov
jl
aaa
jmp
nop
jbe
loope
arpl
push
lret
inc
aam
and
outsl
pop
xlat
dec
add
xchg
mov
add
xor
mov
sub
sub
test
dec
sbb
push
arpl
decl
add
mov
sbb
ds
arpl
cltd
ljmp
gs
push
xchg
loop
or
mov
jmp
sahf
ficompl
sub
jae
jg
dec
cmp
jnp
fldenv
pop
adc
inc
out
push
jnp
hlt
fidivl
mov
jnp
stos
cmp
and
les
stos
movl
mov
pop
pop
push
and
es
in
out
scas
lods
jns
or
cli
repz
in
ljmp
and
dec
mov
aaa
roll
in
shll
int
scas
clc
outsl
or
jns
mov
cmp
lret
lods
xor
xchg
mov
cmp
add
stc
xlat
gs
lahf
mov
pop
clc
lcall
sbb
sbb
or
push
or
fiaddl
clc
decl
pop
adc
xchg
jg
pusha
or
decl
push
push
adc
addb
mov
mov
sarl
jl
addr16
decl
and
std
stc
inc
jno
sahf
fildll
sahf
mov
aam
stc
push
movl
push
or
inc
in
shrl
clc
call
xchg
cmp
cmp
jmp
mov
insb
adcb
push
int
ljmp
dec
push
inc
pusha
in
cmp
dec
ja
repnz
cmp
stos
sbb
movsb
mov
pushl
mov
stos
and
imul
jae
movsl
push
inc
repnz
mov
dec
mov
pushl
xor
lods
loop
stos
add
mov
sbb
push
gs
incl
je
sbb
pop
jb
xchg
jno
pop
lock
sbb
mov
lods
icebp
pop
push
lock
repnz
cli
fistps
adc
clc
out
sbb
and
cmc
push
pop
pop
mov
add
hlt
mov
ljmp
jle
sarb
imul
sbb
push
cmp
dec
mov
incl
adc
jo
pop
xor
jo
dec
mov
fwait
gs
call
stc
xchg
arpl
mov
cmp
aam
cmp
mov
push
mov
je
push
jbe
push
call
mov
fstps
jnp
aad
jmp
movsb
sbb
jecxz
sub
dec
pop
adc
cmpsb
movl
das
pushf
scas
dec
icebp
loope
dec
int3
dec
push
pop
lods
mov
test
stc
and
mov
mov
sbb
out
sbb
call
int3
and
sub
sub
xchg
shlb
push
out
adc
lcall
sub
sbb
jl
adc
fstpl
jmp
cmp
and
pop
mov
or
cmpsl
adc
dec
icebp
push
pushl
jl
es
bound
cmp
neg
fisubrl
cmp
mov
mov
sar
xor
or
push
mov
neg
shl
std
fcoml
mov
fs
dec
ljmp
movsb
loop
ljmp
subl
jmp
fwait
popf
jb
push
adc
aaa
shrb
cld
cli
filds
test
lret
add
adc
pop
mov
scas
cmp
pusha
les
rol
jne
push
addr16
or
testb
push
push
out
xchg
pop
clc
decl
and
scas
pop
jmp
xchg
pop
fdivrl
es
loopne
pop
je
or
sbb
das
clc
jmp
mov
sub
cli
in
cs
cmp
fwait
popa
in
xchg
jb
push
xchg
cmp
lret
mov
sub
and
sub
clc
out
xor
ljmp
int3
faddl
ljmp
xor
xchg
aas
dec
xchg
ljmp
sub
mov
fnstenv
mov
mov
sbb
cli
rcll
pushl
jno
xchg
cmpsb
pop
cltd
adc
dec
adc
je
mov
and
imul
leave
xchg
ljmp
cmp
sbb
push
cmp
cmpsb
jnp
jg
mov
lcall
inc
and
jg
xchg
xchg
test
cltd
out
daa
sub
inc
jp
fwait
sbb
push
mov
mov
ljmp
jmp
and
out
mov
lcall
lret
outsl
jle
cld
loop
out
mov
push
push
fdivrs
bound
xchg
leave
stos
bound
loopne
push
dec
addr16
inc
ljmp
mov
mov
filds
les
inc
outsb
cmp
ljmp
addl
inc
mov
inc
mov
and
test
mov
cmp
or
imul
pop
or
mov
mov
pushl
ljmp
lret
fisttpl
rclb
push
pusha
push
orb
push
xor
call
jp
xchg
ret
add
mov
out
insb
mov
test
jge
pop
mov
lcall
je
mov
mov
jge
jl
and
cmp
add
rclb
push
jg
out
dec
stc
xlat
mov
xor
mov
mov
sbb
dec
push
loopne
ljmp
mov
jb
cmp
imul
or
add
push
rclb
mov
call
xor
test
addr16
scas
ss
call
int3
or
test
jg
xor
sarl
dec
fucomp
sti
mov
in
popf
repz
dec
mov
decl
push
scas
rorl
adc
xor
int3
xor
jno
or
test
decl
sbb
out
test
lods
xor
dec
popl
scas
lea
das
out
jae
pushl
add
and
js
insb
fs
cs
mov
xor
fldenv
cwtl
stc
int3
decl
jmp
add
and
mov
xchg
sub
lods
loope
test
fidivrl
lock
adc
cs
jae
rcll
or
mov
jmp
mov
call
xor
gs
jmp
test
es
mov
hlt
pushl
int
shll
stc
xchg
aas
push
adc
and
cmpsb
mov
test
std
jo
xchg
add
inc
fs
rorl
cmp
fildll
test
je
add
ljmp
rorl
test
xchg
imul
std
jb
push
out
fwait
popa
loopne
out
aad
in
icebp
sbb
imul
sbb
push
sub
or
pop
lcall
fisubl
add
ljmp
inc
or
arpl
push
int
imul
cwtl
cltd
sub
loop
decl
loopne
ss
cmp
jb
ja
cwtl
jge
sbb
out
aaa
push
test
decl
mov
mov
and
inc
adcb
pop
cmp
aas
cmc
lea
cmp
cld
cmp
mov
cmp
jl
sub
pop
mull
or
insl
fs
xor
mov
pushl
mov
xchg
fldl
mov
xchg
sbb
sbb
inc
dec
mov
mov
testb
ss
sbb
cmp
enter
incl
sub
lds
mov
jmp
sbb
jge
out
mov
loop
jb
cld
stc
jo
ja
adc
ljmp
pop
mov
loop
jnp
xchg
push
cs
gs
push
lahf
into
lahf
lock
decl
pop
in
xchg
or
jmp
mov
arpl
rolb
mov
iret
jae
xor
std
call
arpl
iret
popf
sbb
jae
inc
pop
out
scas
adc
or
pop
push
xor
ljmp
xchg
cmp
aaa
ja
add
lcall
mov
sbb
push
xchg
jne
imul
jb
and
subl
je
and
dec
jbe
lods
jmp
mov
pop
mov
neg
int
sbb
ljmp
repnz
mull
sarl
ljmp
inc
xchg
in
cmpb
inc
mov
and
lds
xor
stos
jno
sbb
jl
mov
ljmp
popa
fmulp
sbb
dec
test
inc
and
test
repz
sar
mov
testb
pushl
in
mov
sbb
sarl
in
loop
sbb
les
hlt
mov
jmp
jns
repnz
ffreep
hlt
xchg
fisubs
inc
popa
xor
xchg
je
xor
test
inc
in
mov
push
pushf
daa
cmp
xchg
add
mov
xchg
dec
lcall
xor
nop
cmp
inc
shll
sbb
pop
dec
jmp
stc
stc
dec
sbb
inc
sub
sbb
sub
enterw
cmp
ficompl
cli
inc
mov
lahf
inc
jns
roll
xorb
outsl
pop
data16
fstl
lahf
push
stc
cmpl
xchg
clc
lcall
into
sub
das
mov
sub
lret
ja
fs
dec
push
insb
or
fsts
sbb
inc
push
or
outsb
push
push
pop
ja
mov
mov
nop
jmp
rcr
mov
push
push
ret
ss
insb
or
jnp
xor
aas
pop
sub
loope
push
nop
sarb
sar
ljmp
adc
insb
nop
and
in
mov
js
lahf
xchg
mov
mov
in
mov
decl
add
cmp
imul
jg
lea
adc
adc
cmp
add
stos
incl
mov
ret
or
loop
call
sub
pop
cmpsb
aad
add
rclb
mov
incl
or
je
movsb
dec
sar
and
mov
mov
test
loope
adc
decl
addr16
stos
cld
inc
mov
imul
xchg
jp
movsl
mov
loopne
jmp
jns
stc
pop
into
cmp
in
shll
jmp
adc
fildll
insl
xchg
aas
mov
xor
ss
cltd
mov
jmp
leave
bound
cmpsb
fucomi
movsb
loopne
bound
in
xchg
roll
cmp
test
dec
clc
cwtl
xchg
aaa
pop
mov
pop
insb
push
inc
ds
ret
or
add
jp
inc
ror
frstpm(287
or
ljmp
das
xor
aam
sub
sbb
mov
scas
cmpsb
aaa
inc
push
and
aam
cmp
cmc
push
dec
push
mov
lcall
sub
pop
push
sub
jmp
jecxz
daa
hlt
fstpt
movsb
cmp
pop
lcall
shufps
xchg
and
leave
xchg
loop
fiadds
test
mov
aas
iret
lcall
jp
mov
or
std
sbb
push
andl
sti
sub
ret
call
xor
inc
sbb
sahf
dec
les
adc
push
sbb
cmp
insb
cmpb
call
test
lret
pop
mov
cmc
fsqrt
outsb
iret
leave
jbe
add
xchg
loopne
add
das
xchg
xor
repnz
sti
lret
adc
jge
mov
jne
dec
adc
std
popf
push
and
cli
xchg
std
jge
cmp
mov
sub
icebp
pop
xor
pop
jmp
cwtl
jae
jp
xchg
or
or
sbb
lds
mov
and
pop
sub
cmc
nop
push
and
fcompl
mov
in
push
movsl
pop
mov
and
add
dec
sub
rcll
mov
mov
mov
call
pop
pop
les
dec
icebp
ljmp
lcall
icebp
cmpsl
stos
adc
aam
popf
inc
fwait
sub
xchg
jne
rorl
push
popf
jecxz
mov
mov
adc
in
jo
and
cmp
dec
std
decl
mov
pop
std
test
repz
pop
out
or
jae
lcall
push
test
pushl
cmp
ljmp
fidivl
test
jns
pop
jmp
decl
pop
test
or
fimull
out
dec
jg
jo
mov
jno
inc
xor
mov
stos
inc
into
roll
aaa
and
dec
aam
fisubrs
mov
hlt
push
add
into
or
or
mov
or
add
mov
jg
ljmp
clc
xor
xor
loope
rolb
in
sub
dec
into
cmp
mov
cmp
sbb
adc
in
aas
sub
mov
ret
cmp
ljmp
test
shr
aam
sbb
cwtl
popa
out
push
jb
xlat
adc
pop
jp
ljmp
jmp
mov
xchg
jno
jle
and
imul
pop
rolb
out
xchg
sar
xchg
inc
mov
sbb
dec
addr16
mov
cmpsb
decl
daa
lock
mov
jnp
adc
pop
or
andb
jg
dec
fdivr
adc
daa
sbb
fsubr
jp
jb
dec
lds
ljmp
das
adc
lods
xchg
xchg
js
aad
push
dec
and
repnz
mov
popa
sub
and
inc
adc
shl
mov
icebp
jg
ljmp
mov
lcall
roll
push
stos
fbld
pop
loopne
xor
and
add
cmp
cli
pop
rclb
push
jg
mov
jle
mov
cmp
out
cmp
ljmp
test
push
ljmp
sub
stos
push
idivl
scas
add
pop
std
jg
xor
ficoms
arpl
jae
xchg
sar
push
ss
mov
aaa
mov
cmpsb
and
mov
add
clc
jno
mov
outsl
adc
cmp
call
sbb
push
pop
sub
xchg
mov
jge
or
outsl
jo
aad
adc
pushl
xchg
out
inc
and
jle
and
xlat
fcomps
hlt
push
ret
scas
and
dec
icebp
dec
mov
lahf
in
call
dec
mov
add
mov
or
adc
iret
outsb
and
insl
rol
in
mov
loope
cmpb
pushf
lea
adc
cmc
mov
pusha
push
mul
loope
popa
cmp
jg
or
aad
lods
xchg
sub
xchg
xor
adc
xchg
ljmp
jne
fsubrs
push
push
out
scas
pop
je,pt
addl
cwtl
mov
lret
adc
cmpb
mov
iret
mov
imul
push
sbb
fcomps
add
out
jb
mov
leave
dec
mov
dec
add
add
ja
inc
inc
roll
v4fnmaddps
rorb
das
clc
ljmp
and
cmp
jns
ror
inc
xchg
cmp
loope
aaa
push
jmp
cs
sbb
inc
cmc
xor
repnz
decl
mov
and
add
sub
xchg
xchg
stos
test
stc
ja
cmp
pop
jmp
xchg
xor
rorl
jne
repz
iret
xor
jnp
mov
loope
flds
pop
insl
and
sbb
pushl
lret
adc
mov
loopne
pop
pop
sarl
sub
decl
shl
inc
add
cli
mov
ret
decl
adc
ror
jp
cmpsb
mov
je
movd
jge
jg
mov
inc
cmp
sbb
sbb
es
frstor
fcomps
inc
jmp
pop
das
cmpsb
stos
inc
mov
mov
aad
mov
add
pop
inc
cli
jp
fdivr
sub
daa
mov
das
pop
xor
adc
pop
jmp
lcall
lret
dec
sub
sub
lret
hlt
popa
in
xchg
pop
cmp
scas
add
subb
mov
pop
popf
mov
incl
and
jle
add
adc
cs
and
inc
fstl
repz
ret
mov
lods
mov
cli
jle
or
mov
add
add
repz
push
daa
inc
es
push
jmp
std
scas
mov
mov
jno
xchg
push
fs
movsl
jb
and
xor
jmp
insl
stc
mov
cmp
insb
imul
mov
adcl
mov
ljmp
mov
test
add
lods
mov
xchg
push
fcomi
dec
dec
mov
cmp
mov
pushl
jecxz
mov
xor
ljmp
jmp
out
dec
test
nop
dec
ret
and
cli
incl
mov
jp
push
out
shrb
push
jge
xchg
fmull
lcall
out
ret
xchg
js
stos
fiaddl
mov
or
mov
mov
pop
jmp
icebp
or
mov
fwait
dec
mov
shrb
xchg
and
push
push
mov
jmp
dec
aas
ljmp
scas
sbb
jmp
mov
out
lds
jp
add
in
adc
dec
push
in
fstpt
jno
loop
lock
pusha
jns
lfs
in
daa
xchg
repnz
xchg
out
cli
movsb
dec
rorl
cs
dec
sub
push
fdiv
imulb
movsl
clc
test
jo
test
lcall
in
scas
ret
imul
fnsave
xor
jmp
repz
mov
call
rclb
fwait
cli
arpl
test
dec
xchg
fadds
sarb
stos
or
xchg
enter
jbe
pusha
ret
mov
pushl
push
inc
cmp
mov
jg
mov
sub
ds
incl
clc
xchg
push
push
nop
test
push
pop
mul
push
or
incl
test
add
mov
push
mov
fmuls
lcall
xorb
outsb
ret
mov
subb
outsl
clc
pop
cmp
cmc
pop
pop
pop
fs
fs
xchg
adc
loope
jmp
es
push
repnz
mov
and
mov
and
fsubrs
neg
adc
xchg
sbb
mov
mov
push
fsubrl
cmc
aas
xchg
mov
out
lcall
push
ja
mov
lock
ljmp
lock
mov
loop
and
into
mov
add
mov
mov
cmp
in
fnstenv
lcall
notl
dec
insb
adcl
ljmp
dec
lret
shrb
shrl
sbb
pop
jnp
and
jb
cmp
jle
jne
shlb
xchg
mov
ret
push
push
push
pop
add
or
pushl
xor
lcall
add
xchg
adc
ficompl
xchg
fstpt
enter
rcl
mov
sub
sbb
mov
call
mov
xor
jae
inc
rcl
out
daa
int
std
xchg
mov
lahf
je
or
pop
or
jmp
outsl
lds
mov
lods
hlt
fiadds
addr16
cmp
jecxz
or
js
cltd
lds
rclb
or
ror
aam
std
push
insb
out
sbb
sbb
lcall
adc
sahf
leave
cmpsb
scas
add
pavgb
outsb
cmpsb
fidivs
scas
fwait
std
pop
data16
xor
fwait
xchg
mov
dec
stos
mov
lcall
scas
sbb
fucomp
jns
cmpsb
cs
pushf
in
sub
adc
xor
cmpsb
mov
cmp
lcall
sub
sti
add
lock
mov
push
xor
cmc
jmp
scas
mov
jle
sbb
mov
or
xorl
fidivrs
mov
clc
lret
xchg
frstor
dec
sub
shlb
stc
pop
add
mov
sbb
mov
gs
lcall
cmp
call
pop
mov
incl
fmul
xor
mov
push
xchg
jmp
push
mov
mov
addl
cltd
xchg
test
mov
cmp
incl
gs
call
jb
sub
incl
dec
test
insl
xchg
sarb
dec
jp
clc
imul
test
sub
push
push
adc
lcall
mov
icebp
lea
push
jg
int3
jns
and
mov
ret
and
or
inc
fisubs
inc
and
mov
clc
mov
mov
jnp
xchg
aaa
lcall
pop
push
xorl
call
ret
xchg
sti
push
xor
out
add
je
xor
mov
aaa
subb
hlt
pop
mov
pop
xchg
adc
decb
fs
sar
mov
mov
or
push
cmp
cli
stos
dec
jne
sub
xchg
scas
sub
pushl
jbe
in
jl
repz
loop
fsubp
inc
mov
xor
jg
xor
decl
gs
pop
xor
adcl
push
push
xchg
in
loope
sub
dec
push
shrb
ljmp
ret
in
mov
lret
or
gs
pop
ret
arpl
xchg
mov
rcrb
and
dec
or
jg
jae
stos
dec
jae
daa
mov
sbb
jmp
decl
adc
cmc
call
sub
mov
push
repz
test
or
xor
dec
mov
incl
mov
sbb
cli
or
jb
push
cmc
mov
lods
inc
push
or
dec
xchg
cmp
sti
out
xchg
lods
inc
mov
scas
stos
mov
jle
jecxz
push
sub
sub
cmp
jmp
ret
dec
insb
jmp
and
mov
jnp
dec
sbb
jp
lcall
pop
xchg
shl
pop
lahf
or
inc
mov
fiadds
pop
test
or
xchg
test
cmc
inc
push
or
ljmp
in
mov
add
hlt
mul
lret
clc
scas
insl
mov
ljmp
inc
push
pop
cmp
xchg
mov
jle
xlat
push
add
test
pop
pop
mov
fisubs
dec
mov
pop
jno,pt
add
mov
and
pushl
and
pop
hlt
jmp
xchg
fst
in
cs
ret
push
test
pushf
lods
pop
dec
pop
cmp
inc
or
pushl
lcall
js
aas
inc
lahf
mov
daa
fcmovne
or
psubw
ja
cwtl
inc
shll
fcomip
dec
add
movsl
xchg
mov
into
movsb
bound
xor
ja
jbe
repnz
out
bound
out
nop
scas
cmc
outsb
push
ret
and
jns
sub
stc
xor
lret
dec
mov
ljmp
call
cmc
fs
push
sbb
push
mov
sub
adc
add
decl
sbb
push
fdivp
mov
mov
fcomip
cmc
cld
mov
sub
xchg
outsb
pop
aaa
xchg
testb
or
cmc
mov
dec
or
jmp
decl
iret
dec
fnsave
push
shll
xchg
sarl
push
mov
loopne
mov
ljmp
call
lret
jo
outsb
insl
mov
cli
fisubs
push
and
fdiv
pop
lea
dec
mov
loop
mov
cld
scas
or
dec
ja
push
stos
pop
scas
sbb
add
incl
in
leave
sbb
scas
inc
ljmp
repnz
cmpsb
ds
xor
sbb
jecxz
push
jg
es
sti
outsb
cmc
sahf
xchg
stos
scas
pop
in
roll
xchg
push
inc
js
xchg
leave
shl
das
insb
add
lcall
leave
inc
outsl
add
aad
push
lock
xor
in
mov
mov
scas
sbb
incl
cwtl
inc
fcompl
xchg
int
jae
fld
insb
into
notl
cmp
call
mov
lea
pop
jae
jno
idiv
insl
dec
jge
notl
add
mov
in
adc
lcall
sbb
sub
cli
sbb
push
xchg
sub
repnz
aam
mov
push
sub
sbb
pushf
mov
call
lock
out
push
mov
adc
call
mov
dec
das
or
jl
or
lds
xchg
pop
xor
enter
leave
sar
lcall
sar
cmpsb
xchg
je
call
ror
fidivs
sub
stc
adc
cmp
call
sub
ret
insl
push
movsl
and
in
or
or
mov
pushl
std
incl
xchg
movb
mov
dec
test
xchg
mov
ret
xlat
jl
fcomip
ljmp
pop
arpl
cmp
in
test
push
xor
es
js
sbb
jmp
insl
xchg
lea
cltd
js
cltd
cmp
aas
daa
mov
pop
imul
sub
lret
mov
in
xchg
pop
sbbb
jg
div
movsb
pusha
fmulp
adc
outsb
or
sub
dec
push
xchg
pop
or
incl
test
dec
cld
imul
mov
test
decl
enter
xor
imul
push
adc
inc
push
in
daa
idivb
push
mov
dec
push
dec
imul
cmp
or
pop
lock
mov
push
jmp
xor
adc
arpl
mov
loopne
mov
cmp
pushl
adc
dec
cld
xor
mov
and
icebp
jge
sbb
push
dec
mov
das
call
gs
push
test
xchg
push
outsb
mov
out
or
pop
pop
jle
mov
sbb
das
test
adcb
int3
cmp
ret
jmp
mov
daa
mov
stos
cs
pop
fxch
fcmovne
test
cs
cmp
rorl
sbb
and
das
leave
imul
push
inc
adc
mov
pop
xor
fs
sbb
add
nop
dec
dec
jge
enter
cli
or
loop
js
mov
cli
decl
fs
lds
fistpll
js
dec
pushl
xor
stc
repz
jno
push
loopne
sbb
in
in
scas
incl
inc
scas
jmp
sahf
cmp
ret
imul
gs
xchg
ret
ljmp
inc
pusha
jb
call
out
mov
mov
push
mov
jge
xor
das
mov
mov
mov
lret
or
cmp
lcall
adcl
cmp
jno
inc
idivl
push
inc
test
lcall
fs
decl
mov
fdivl
xchg
pop
add
cmp
icebp
fwait
jg
fidivrl
pop
test
add
mov
int
stc
dec
dec
fistpll
insl
fmuls
sbb
lcall
jae
and
dec
daa
pop
addr16
xor
xor
lcall
popf
cmp
sub
and
push
fldt
imul
lret
pop
push
mov
in
sub
call
pop
fsubl
mov
lret
fmull
pop
cmc
mov
mov
fstps
fnstenv
imul
and
lret
ljmp
test
inc
int3
push
mov
inc
lcall
mov
adc
pop
jno
inc
mov
cld
push
rolb
ss
pop
repz
test
push
mov
popf
push
inc
aaa
or
mov
xor
loope
dec
and
cli
add
mov
test
rolb
int3
add
fimuls
das
adc
push
int3
hlt
mov
icebp
push
cwtl
jmp
pop
rcrl
jne
jmp
push
nop
cmp
xchg
icebp
jbe
lock
xchg
xlat
pop
decl
or
cmp
mov
and
cmpsb
insl
xor
xchg
imul
push
pop
jle
addl
jne
sub
icebp
je
push
xchg
jb
pop
inc
mov
cltd
adcl
inc
sbb
ret
into
lret
sub
pop
ss
push
leave
adc
add
mov
xchg
addb
je
sbb
sub
adc
mov
inc
mov
cmp
dec
data16
movsb
xchg
ror
roll
movd
lods
stos
aas
xlat
stos
xchg
aam
decl
orb
push
cmp
mov
jmp
mov
mov
jne
ds
call
cld
xchg
xlat
mov
cld
pop
int3
push
push
movsl
xchg
pop
push
pushl
xchg
dec
and
subb
adc
dec
test
jmp
ljmp
xor
inc
std
test
rcr
call
jo
cs
ret
mov
mov
ds
int3
into
out
dec
and
mov
sbb
inc
js
call
adc
or
inc
fs
pop
sub
cmp
jns
inc
in
cmp
pushl
out
ret
sbb
pop
inc
mov
aam
mov
adcb
pushf
inc
mov
pushl
jnp
dec
mov
sbb
mov
in
xor
icebp
rcll
insl
push
mov
aaa
cld
rcll
rcrl
sarb
or
lds
lahf
sahf
out
fisttps
loope
mov
inc
mov
aas
dec
cli
sub
push
jo
xlat
pop
xor
fidivrl
adc
cli
jecxz
jge
jp
jns
idivb
int3
inc
decl
sub
sahf
dec
test
fidivrl
jns
push
loope
jnp
repnz
inc
sub
ljmp
fnsave
and
jnp
rolb
lcall
mov
imul
in
and
or
lds
movsl
xor
xchg
int
jp
lock
add
jecxz
jle
push
mov
std
mov
mov
inc
loopne
adc
cli
lahf
or
mov
hlt
inc
xor
aad
call
in
and
cmp
addr16
jns
sbb
mov
inc
adc
and
add
movsb
and
push
outsb
dec
xor
test
cmp
mov
push
xchg
incb
test
cmp
cmpsb
stos
lret
fcomip
xchg
or
add
cmp
jbe
mov
and
cmp
std
xor
jmp
lcall
ror
adc
or
ret
fmuls
dec
jecxz
push
loope
xchg
push
iret
pop
call
and
test
sub
mov
nop
mov
adc
or
movsb
mov
push
pop
mov
jg
pop
lret
inc
dec
das
loop
inc
dec
and
jecxz
mov
addr16
mov
das
lcall
ss
add
std
jae
bound
xchg
jp
cwtl
incl
sar
nop
lods
and
add
pushf
jne
push
in
clc
call
mov
sub
mov
lock
int
and
cli
inc
adc
or
xor
push
std
je
incl
dec
mov
adc
movb
xlat
xchg
dec
push
gs
jmp
jl
rorl
in
xor
insl
add
jecxz
push
add
add
and
jmp
mov
xor
sub
mov
mov
inc
sbb
mov
popa
sub
je
and
mov
inc
inc
push
notl
jg
pop
popf
mov
push
shrb
cmp
daa
pop
mov
mov
jg
iret
xlat
sbb
dec
push
fnsave
fisubrl
in
mov
add
jno
add
fwait
mov
push
lods
dec
into
pop
daa
inc
movsb
lahf
test
aaa
and
mov
test
or
jb
pop
mov
pushf
insb
aas
or
push
adc
add
mov
int3
scas
push
push
outsl
into
xchg
into
mov
and
sarl
inc
fiadds
lods
inc
movsb
xchg
aaa
data16
call
or
decb
or
cmp
jo
ljmp
shll
jae,pt
cmp
adc
xchg
mov
in
mov
std
loope
enter
icebp
jmp
mov
imul
cmpsb
add
outsb
sti
stos
add
scas
in
mov
jge
and
call
jo
jae
mov
mov
fcompl
xlat
add
fstpl
int3
xchg
and
cwtl
addl
xchg
incl
pop
mov
inc
rclb
in
xchg
cmpsb
imul
mov
test
cld
pushl
push
adc
lcall
mov
push
lcall
mov
int
add
xchg
test
ficomps
mul
cmp
pusha
lret
or
add
sti
mull
out
cli
decl
pop
or
lods
pushf
jl
insb
scas
dec
xchg
scas
dec
inc
xor
int3
xchg
mov
add
jmp
jg
repnz
pop
mov
sti
call
push
in
addr16
ss
sbb
adc
into
mov
shlb
insb
rcl
pushl
adc
mov
add
xchg
and
pop
ret
jg
decl
mov
and
and
lock
lods
das
pop
pusha
int3
cmp
jnp
rolb
push
test
mov
in
inc
inc
xchg
mov
pop
andb
pop
xor
or
mov
repz
mov
jg
cmp
sti
ficoml
fldl
lret
out
sub
loop
push
mov
pop
pushf
and
call
pop
scas
inc
lcall
fisttps
loope
imul
imul
lods
js
inc
lea
outsb
inc
cmp
inc
je
jmp
xor
mov
sbb
das
xchg
and
addr16
out
xchg
cmpsb
std
call
data16
mov
mov
push
in
rorl
mov
push
out
jp
lcall
jbe
dec
mov
sti
imul
dec
cmp
ljmp
pop
mov
sbb
jb
dec
fwait
ljmp
sub
fwait
and
jno
lcall
bound
js
out
ja
incl
push
add
jo
cmp
out
fcoms
add
nop
shlb
xchg
cmpsb
movb
cmc
pushl
test
test
lods
ret
testb
pop
gs
test
jg
xchg
mov
test
shlb
ret
test
dec
jne
stos
das
in
incl
pop
jle
test
addb
pusha
aas
cmp
sub
xor
std
sub
in
fsubr
mov
out
sbb
int
xor
mov
movsb
cmp
pop
jo
shrb
or
jmp
stos
lods
jnp
push
cltd
inc
dec
xchg
fwait
adc
cli
lcall
mov
mov
call
aam
jb
push
dec
rcll
test
adc
xchg
add
mov
repnz
push
lcall
shll
mov
inc
std
add
sbb
aas
sbb
xchg
nop
clc
cs
jmp
push
jmp
and
mov
ds
or
dec
push
pop
add
scas
mov
lcall
push
pop
std
mov
in
movsb
mov
leave
sub
or
jb
insb
ja
lcall
mov
xlat
xor
shll
out
outsl
fnstenv
add
out
scas
sti
lds
cmp
adc
dec
and
xchg
enter
xchg
sub
mov
js
fdivrl
mov
inc
xchg
inc
sbb
inc
outsl
cmp
fsubl
ret
sarb
bound
jmp
int3
lods
jle
pop
xchg
test
xor
cmp
pop
xor
cmpsl
ss
loopne
mov
or
cmpsl
into
pop
mov
lods
adc
lods
in
fcmovne
mov
inc
xor
push
xchg
add
popf
in
aas
loope
lret
lcall
addr16
enter
movsl
dec
jmp
cmpsl
fisubrs
and
jecxz
jno
sbb
dec
ds
ja
jo
xor
incl
adc
test
call
pop
mov
dec
ja
xchg
or
cmp
std
jns
and
jge,pn
dec
mov
jg
es
push
or
lcall
jns
sbbb
fsts
sub
incl
int3
push
out
lods
mov
call
lcall
mov
stc
ficomps
mov
mov
dec
sbb
jne
clc
pop
cmpsb
push
hlt
push
xchg
mov
insl
sub
mov
psubsb
jle
pop
out
pop
jle
iret
mov
in
shll
lcall
mov
js
clc
sahf
cmpsb
and
test
aad
mov
fnstsw
outsb
adc
push
pop
divl
xor
jns
call
inc
mov
aam
lret
in
mov
cmp
arpl
cltd
faddl
ljmp
jo
jns
aad
xchg
sbb
loop
add
mul
js
sbb
ljmp
ret
arpl
out
aaa
sub
jg
das
lret
sub
popf
int3
outsb
popf
adc
loope
incl
pop
mov
stos
and
fstpl
mov
jmp
mov
fbstp
sbb
or
jae
ret
adc
jo
cltd
ljmp
push
out
dec
fs
cmpsl
or
test
xlat
cmp
repnz
ljmp
lds
rclb
loopne
xchg
jns
mov
les
mov
ss
setbe
sbb
test
fidivrl
bound
loope
xor
cmp
adc
xor
lret
stos
or
loope
testb
adc
roll
decl
mov
sub
cmp
mov
lock
mov
sahf
pop
shll
imul
addr16
fcomip
pop
fdiv
shr
rcll
int
push
adc
sub
mov
sbb
ljmp
jge
mov
je
cmp
or
outsb
push
cmp
sbb
enter
pushl
mov
sub
pop
mov
incb
pop
sbb
mov
jecxz
out
cli
jns
daa
jnp
mov
sub
or
les
jns
data16
call
jb
fldcw
enter
mov
sub
jmp
cld
clc
rol
shlb
daa
sbb
xor
pusha
mov
cld
insb
and
or
or
lea
test
into
movb
add
jmp
mov
loop
ljmp
inc
ja
filds
shrb
sub
test
shll
cli
decl
dec
mov
adc
dec
or
sub
adc
push
sbb
cltd
fdiv
ljmp
mov
ret
out
test
gs
cmp
fdivr
out
xor
fs
sub
inc
ret
lds
pop
rorb
lret
jmp
test
insb
cltd
dec
or
or
cmc
cmp
movsb
int
xchg
in
fucomi
push
mov
pushf
ljmp
inc
dec
insl
sub
mov
nop
inc
add
adc
jno
lods
shr
loopne
sbb
call
xor
cmpsb
call
shrb
pop
cmp
mov
aad
dec
mov
push
jle
leave
xchg
xchg
sub
sub
and
ss
test
out
cli
decl
inc
push
rep
test
js
out
ss
cmp
push
sub
inc
jns
and
test
push
in
mov
lret
pop
sub
cmp
outsl
add
fstl
jle
addl
mov
mov
jge
and
pop
add
jl
cmp
fs
shll
push
testb
fildl
inc
push
mov
fbstp
jg
lcall
mov
enter
adc
loope
mov
hlt
jnp
xchg
mov
dec
jecxz
pop
jae
pop
les
pop
mov
dec
mov
pop
lods
xchg
dec
lcall
ljmp
xchg
hlt
hlt
fwait
mov
arpl
xor
data16
jmp
mov
std
ret
push
xchg
xchg
or
data16
add
xor
out
sub
rolb
aas
add
mov
mov
xchg
iret
inc
loop
cltd
filds
out
adc
aad
jmp
sbb
sbb
cmc
mov
sub
adc
mov
outsb
mov
ja
dec
mov
fstps
out
dec
jecxz
gs
xchg
pushf
xor
and
lahf
adc
in
cmpsb
call
rorl
out
test
scas
mov
pop
ja
incl
cli
mov
xor
in
mov
lods
ds
int
adc
cmpsb
push
push
xor
ljmp
ret
cmpl
mov
decl
adc
and
mov
leave
pop
lds
adc
fcompl
cwtl
inc
movsl
into
fdivrp
jmp
dec
leave
stos
pop
jae
push
mov
add
pop
pop
mov
xchg
and
test
inc
inc
push
ds
adc
pushl
dec
daa
xchg
cmpsl
or
lret
xor
jb
mov
gs
cld
lcall
mov
stos
call
pusha
push
adc
xchg
outsl
sub
in
nop
pusha
loope
pop
pop
orb
cmpb
daa
ss
pusha
cmp
loop
mov
mov
inc
cld
fiaddl
jmp
sarb
fsubrs
adc
call
out
and
xchg
outsl
ja
stos
cli
jne
add
mov
call
and
cmp
andl
lods
mov
into
in
mov
pop
and
cmp
leave
daa
jecxz
mov
mov
inc
shlb
jbe
and
das
clc
fstl
mov
iret
add
sub
sbb
add
push
mov
cltd
or
add
std
and
nop
pusha
aaa
lds
add
pmovmskb
ret
sbb
dec
fwait
jmp
sahf
cmp
adc
popf
rcrl
mov
aaa
andb
mov
push
in
lods
pop
out
mov
pop
dec
lahf
shll
loop
in
jp
push
sahf
push
sbb
pushl
movsb
push
sete
mov
std
mov
insb
stos
imul
movsb
dec
repnz
xchg
inc
addb
jb
call
outsb
push
pop
jo
dec
test
sbb
pop
ljmp
push
ret
icebp
imull
adc
jnp,pt
xlat
sbb
aaa
dec
popa
mov
cmp
inc
test
or
imulb
and
jmp
or
sbb
cltd
lock
mov
push
fsubrs
inc
dec
cmp
popf
arpl
jle
mov
mov
loopne
mov
sbb
lea
dec
pushf
push
or
aaa
push
aam
dec
mov
das
adc
dec
sbb
call
push
das
jmp
jg
data16
push
jp
sarb
xor
mov
ljmp
mov
rcl
test
sub
lret
pop
pop
popa
mov
cmpsb
sub
jo
xor
call
mov
mov
pop
mov
mov
fisubs
js
enter
mov
mov
test
subl
xor
or
std
mov
jecxz
push
xor
inc
mov
lock
addr16
fcomi
mov
lcall
adc
hlt
xor
cmpsb
sbb
ret
pop
inc
xor
pop
mov
orl
into
xor
inc
cld
ja
imul
loopne
jne
bound
mov
shlb
mov
cmpsl
mov
add
fwait
dec
jg
insb
mov
xchg
test
push
push
mov
push
inc
lcall
fistl
nop
xchg
jmp
lret
pusha
out
cltd
and
movsb
fidivs
or
jmp
cmpsb
pushl
cmpsl
stos
mov
mov
push
mov
ljmp
sub
clc
mov
stos
xlat
mov
stc
pop
or
add
call
pop
fldl
iret
pop
int
push
repnz
sbb
fs
pop
sbb
push
icebp
imul
jecxz
fcom
mov
cwtl
xchg
xchg
dec
sbb
std
nop
adc
push
adc
lock
mov
call
rorb
xchg
cmp
xchg
add
mov
or
and
sbb
bound
sub
aad
popa
outsl
jno
sbbl
mov
pop
and
jg
jnp
hlt
sbb
movsb
push
leave
mov
sub
jmp
repnz
das
mov
xor
mov
decl
sbb
mov
mov
pop
push
stc
jecxz
pop
clc
imul
outsl
daa
or
or
mov
jne
dec
ljmp
or
xor
mov
push
fwait
xchg
bound
lcall
iret
lret
call
adc
jae
add
mov
and
or
jno
arpl
mov
pop
add
roll
andl
inc
lcall
mov
add
xchg
aas
insl
sub
sbb
rcll
cltd
call
lods
cmp
insb
mov
cmpsb
and
pop
cmp
out
lahf
dec
push
push
mov
enter
lcall
mov
sbb
jmp
xor
push
idivl
pushf
mov
jge
sub
push
mov
stos
mov
iret
jbe
aam
inc
repnz
or
cmp
into
dec
and
cs
cld
and
xchg
repz
lock
cmp
clc
std
push
lret
call
hlt
mov
jns
dec
inc
sbb
mov
loope
or
call
loop
push
loopne
inc
or
imul
fcoml
lds
lods
ljmp
clc
call
sub
testb
sbb
adc
mov
sbb
rcrb
incl
xor
pop
pop
adc
adc
mov
mov
ss
repz
notl
stos
add
pavgb
orl
jmp
jne
xchg
and
add
dec
dec
mov
mov
ds
mov
call
loop
clc
test
cmp
aam
data16
cmpsb
add
inc
or
mov
insl
lcall
movsb
cltd
arpl
xor
fwait
jae
out
push
aas
sbb
les
test
in
push
and
jg
jg
cmc
loope
jb
xor
push
ret
cmpsb
test
jo
cmc
cmp
rcr
and
jbe
xchg
shl
jns
jmp
lock
jno
dec
mov
mov
lea
sbb
push
into
jnp
rclb
call
ja
sbb
pusha
cmp
pop
xchg
rol
add
sti
inc
sar
jmp
int
test
shlb
aam
pop
mov
out
push
pusha
aaa
push
pop
iret
in
popa
repz
stos
gs
add
lcall
aam
lahf
mov
jg
pop
mov
mov
cmc
cmpsb
fdiv
call
pop
dec
adc
or
adc
movsb
inc
pushfw
arpl
movsb
loopne
fists
cltd
cmp
mov
cmp
sub
dec
mov
filds
std
cmpb
iret
dec
inc
cmpsb
jno
das
ja
pop
ljmp
roll
dec
enter
into
cli
dec
fwait
pop
jecxz
or
outsl
xchg
xchg
call
inc
add
xchg
xchg
pop
repz
push
stos
mov
ljmp
stos
pop
cli
pop
aam
mov
enter
cld
stos
idiv
pop
inc
adc
jp
lret
xchg
jl
imul
add
fwait
inc
xchg
adcl
jl
mov
data16
or
ljmp
add
cmpsl
fsubr
dec
mov
pop
push
sbb
mov
mov
and
cmp
movsb
bound
loope
addr16
mov
decl
push
cmp
icebp
ja
mov
js
scas
sbb
dec
mov
cmp
mov
dec
pop
lcall
sbb
hlt
inc
add
dec
or
mov
dec
cmpsb
outsl
fmull
je
bound
loopne
lret
popf
test
movsb
jg
mov
arpl
mov
cmpsb
nop
jl
orl
out
in
stc
pop
push
jnp
adc
ljmp
hlt
aad
cmp
mov
or
sti
daa
test
add
outsl
xor
loope
push
inc
add
cmp
cmp
cs
pop
std
fldl
mov
jmp
ljmp
fwait
lods
hlt
sub
jecxz
sub
out
ret
fisttpl
repz
jmp
popf
push
dec
jmp
sbb
inc
clc
mov
jne
gs
jns
cwtl
mov
sub
lcall
sti
add
lds
jne
fcmovu
enter
or
xchg
adc
mov
xchg
fisttps
dec
pminsw
push
pop
notl
ljmp
shlb
into
cmp
jnp
out
mov
lcall
mov
mov
inc
gs
mov
xor
ss
cmp
mov
cmp
pop
xchg
je
push
outsb
orb
lcall
push
add
aam
xchg
mov
in
ficompl
adc
mov
cld
mov
cmp
push
cwtl
pushf
inc
add
sbb
rclb
pop
add
pop
rorb
cmpsb
push
lcall
fisubrs
int
decl
push
cli
addr16
dec
lods
shll
or
insb
movsl
cmp
adc
push
sbbl
mov
jg
iret
lahf
mov
push
dec
add
pop
js
and
mov
ficompl
mov
adcl
jp
dec
int3
clc
push
sarl
cmp
jnp
out
lahf
jbe
jb
add
test
bound
xchg
in
push
rolb
les
sbb
jge
jmp
add
int3
pop
insl
flds
fs
sbb
mov
and
mov
or
repnz
push
call
enter
mov
fisubs
aam
stc
cmpsl
mov
xchg
cmp
fldenv
test
sub
push
mov
lods
lods
sub
in
ficomps
sar
jp
add
leave
ret
adc
scas
jb
xlat
and
jmp
sbb
cmc
sub
adc
xchg
ljmp
sbb
lea
incl
xor
mov
popa
loope
lods
sbb
mov
jmp
xchg
mov
lea
ds
cmp
les
stc
mov
pushf
bnd
pop
rolb
aas
sahf
add
mov
pop
stc
mulb
popf
std
lcall
dec
test
sub
test
sbb
hlt
clc
decl
lock
bound
pushf
mov
cs
arpl
add
lcall
dec
mov
cmp
dec
xor
sbb
sar
mov
shl
les
insl
adc
dec
in
xor
into
in
cs
lock
fdivrl
sub
jnp
jo
out
dec
sbb
jno
in
out
dec
aam
add
lcall
or
or
mov
rol
ljmp
or
sbb
push
or
ja
push
mov
aam
divl
pop
cs
imul
adc
pushl
jmp
dec
xlat
movsb
xor
sti
test
xchg
movsl
mov
xchg
lret
pop
mov
mov
clc
xlat
mov
dec
lods
ss
cmc
cmp
push
jg
decl
jb
mov
cmpsb
sar
aas
iret
push
loop
shrb
mov
mov
decl
xor
cmp
jnp
xchg
sti
loope
mov
and
sub
jne
jmp
imul
arpl
fcoms
int3
mov
fsubs
inc
iret
jg
sbb
mov
decl
loop
call
xor
dec
sub
xchg
decl
mov
je
jne
adc
jnp
imul
ret
cmp
push
cmp
decb
sub
mov
jmp
ds
out
scas
pop
push
pop
jle
fistps
jle
fnsave
imul
pop
and
je
insl
mov
mov
or
jmp
ffree
arpl
mov
addr16
lahf
les
cld
jge
repz
mov
stos
stc
das
inc
xor
arpl
xchg
adc
subb
pop
repnz
cmp
popa
je
add
lcall
test
jp
mov
out
sarb
fwait
mov
add
mov
or
adc
adc
ljmp
xlat
inc
adc
call
outsb
imul
dec
subb
pop
push
scas
dec
adc
pop
inc
pop
adc
xchg
test
or
adc
jg
pop
and
and
cld
icebp
and
cmpsl
lods
orl
jge
jb
lods
inc
mov
pushf
or
inc
iret
fdivrp
pushl
shrb
or
and
cmp
sbb
inc
push
das
pop
jl
decl
push
sbb
adc
xchg
insl
mov
mov
xlat
mov
ja
jmp
mov
fsub
push
jecxz
xor
lret
lcall
adc
mov
xchg
push
dec
fsubrl
cltd
andb
imul
repnz
pushl
rcr
pop
adc
fistpll
rolb
lods
hlt
notb
jb
adc
push
leave
cmp
rolb
jns
or
sbb
dec
add
loopne
pop
or
mov
jg
aad
je
leave
adc
incb
inc
popa
sbb
sub
mov
xor
push
vpsubusw
lret
loope
sti
push
mov
cmp
xor
pop
icebp
decl
sbb
push
inc
sti
add
lea
sbb
push
lods
out
rcrl
rcl
ja
call
add
and
out
sub
dec
insl
call
xchg
shrl
lock
lcall
das
fisubrl
or
test
popa
fcompl
mov
leave
hlt
fiadds
lahf
in
pop
mov
add
xor
shlb
jg
pushl
int3
mov
jb
jmp
je
mov
mov
adc
inc
add
incl
lret
xchg
dec
and
jnp
mov
xchg
mov
xchg
rcrb
xor
mov
ss
scas
fisttps
and
jecxz
loop
bt
xchg
sbb
push
incl
pushf
mov
sbb
xchg
sub
mov
and
mov
sahf
out
dec
pop
mov
fnstenv
and
js
out
in
pop
psllq
into
xor
push
sbb
push
cmp
incl
jae
add
sbb
and
lds
dec
in
jecxz
and
mov
jns
rorl
jl
cmp
shll
sub
icebp
in
out
dec
lods
jmp
scas
mov
jmp
and
data16
mov
in
push
out
fidivrs
cmp
pop
xorb
fidivs
addr16
mov
jg
sub
outsb
aas
push
pushl
std
ljmp
add
cmpsl
dec
mov
sbb
cmp
adc
movsl
out
das
pop
aam
mov
testb
movups
sub
outsl
lods
mov
or
filds
mov
push
inc
cmpsl
stc
cmpsl
sti
cld
lcall
and
outsb
shl
pop
sahf
jae
mull
ret
mov
aad
mov
mov
pusha
adc
mov
xchg
test
mov
jp
ss
add
fistl
jmp
in
add
rcll
xor
in
lcall
dec
lahf
xchg
sbb
les
shr
xchg
idivb
stos
lea
jge
das
cmp
or
fmul
or
outsb
mov
inc
call
fbstp
sbb
fbld
and
inc
xlat
ficompl
mov
fisubl
add
cmc
sub
decl
cs
dec
adcl
jp
ret
mov
sub
inc
push
into
ljmp
out
test
repz
cmp
push
mov
xor
dec
popf
mov
pushl
inc
cmp
or
xchg
sub
subb
test
or
ljmp
ljmp
out
sbb
jmp
inc
out
aad
mov
xor
pop
dec
repnz
xor
inc
add
out
mov
pushl
test
xchg
xlat
call
daa
push
mov
sarb
cmp
lahf
adc
fwait
fwait
sub
ret
and
outsl
cli
and
mov
movsl
gs
jp
ljmp
push
arpl
adc
test
movl
leave
push
data16
lods
aaa
and
andb
cmpsb
pop
jb
decb
jle
out
mov
mov
xchg
cmp
gs
inc
cmp
pop
sbb
mov
or
mov
ret
jne
jo
cmpsb
dec
push
sbb
adc
movl
lock
ljmp
int
imul
push
add
adc
icebp
pop
call
aas
insl
inc
jbe
adc
repz
pop
xchg
lcall
incl
fnsave
mov
sbb
scas
adc
int3
sub
sub
sbb
lret
scas
add
test
sarl
pusha
mov
int3
popw
pop
xchg
mov
mov
jge
xchg
pop
mov
sbbl
jae
je
icebp
mov
ds
mov
adc
xor
jno
test
les
mov
pop
fwait
mov
inc
adc
sarl
insl
test
pushl
dec
sbb
add
or
inc
pop
xchg
iret
in
xchg
call
mov
ljmp
cli
fisttps
popa
adc
mov
jle
jmp
into
sarb
js
or
dec
xchg
mov
mov
xchg
test
dec
es
lea
sbb
mov
push
pushl
mov
push
xchg
fdivs
arpl
fisubrs
mov
daa
cmp
pop
call
cmp
cmp
jb
mov
mov
fcomps
jmp
ja
jle
ljmp
fsubs
lret
lods
push
mov
aam
mov
fimull
lret
lea
jns
gs
sub
jnp
fwait
or
push
mov
and
incl
sub
adc
and
repz
std
call
sbb
repz
mov
xchg
xchg
pop
fcomi
mov
js
not
insb
lcall
and
ja
insl
xchg
bound
cmp
inc
inc
dec
and
incl
imul
or
jmp
inc
nop
test
in
sahf
dec
lods
sbb
test
jo
mov
mov
repnz
xor
call
mov
dec
push
pop
sbb
mov
jnp
pop
ss
pop
xlat
pop
in
jle
movsl
xchg
pop
mov
pushl
push
and
cmp
lahf
pushf
inc
into
iret
xor
pop
dec
push
cmc
inc
cmovl
sbb
sbb
test
js
aad
xchg
call
fists
add
push
js
xor
mov
xchg
mov
loope
jb
jg
int3
mov
xor
loop
lods
shr
dec
xlat
jae
mov
mov
mov
mov
cmp
imul
cmp
jno
xchg
adc
xchg
movzbl
or
mov
sub
mov
in
dec
jmp
sbb
ja
mov
push
jmp
dec
mov
xchg
jp
sbbb
adc
pushl
repz
adc
andb
or
cmp
sti
add
gs
pop
add
call
mov
movsl
sub
lret
jge
cmp
in
sar
pop
ljmp
jg
out
pop
xchg
inc
and
sub
out
ret
xchg
push
das
and
jmp
dec
je
out
scas
push
sbb
cld
insb
loope
fisttps
cmpsb
mov
or
add
jmp
lcall
daa
decl
arpl
adc
sub
cmpb
icebp
sbb
mov
je
cmpsb
inc
sahf
xchg
popl
add
test
mov
add
jg
cmp
sbb
repnz
hlt
inc
jb
xchg
into
pop
dec
pusha
pop
mov
inc
sbbb
int
pusha
add
cmp
mov
fstps
testl
lds
jb
insb
repz
sbb
dec
nop
and
cmpsb
jle
aam
loop
shl
or
mov
std
out
push
lock
movsl
mov
xlat
pop
cmp
lcall
enter
in
mov
inc
jnp
mov
push
insb
mov
or
fcomip
fisttps
imul
push
adc
mov
sub
lods
mov
out
insb
or
call
pop
sub
je
mov
divl
pop
das
test
push
or
call
sbbb
pushl
shl
lock
int3
mov
lret
fmull
das
out
mov
inc
pushl
ret
rorb
sbb
mov
adc
cmpsb
sub
data16
sbb
adc
mov
sub
nop
add
xlat
les
dec
aaa
test
fwait
out
pop
ret
cmpsl
sub
jmp
pusha
inc
in
test
add
in
jg
ljmp
iret
mov
scas
lods
divb
jl
adc
add
imul
enter
stos
cli
test
adc
fmull
rcrl
dec
jmp
decl
lahf
xchg
shlb
cltd
dec
pop
fiaddl
sti
mov
mov
push
repnz
out
ss
xchg
aaa
hlt
mov
iret
fwait
push
ss
lcall
pop
pop
icebp
lcall
mov
mov
sbb
sbb
lea
lcall
jmp
adc
jl
mov
jg
xchg
sbb
inc
test
pop
or
decl
inc
daa
xchg
ja
sbb
or
jle
mov
out
sbb
fisttps
jmp
mov
test
scas
pop
leave
cmp
push
loope
cli
add
test
push
addr16
out
jmp
iret
sbb
pusha
sti
std
iret
xchg
xchg
or
or
or
aam
fildll
icebp
mov
mov
push
bound
ret
cli
out
jns
cmpsl
insl
in
sub
and
mov
mov
mov
repnz
in
push
ret
in
in
xor
mov
ljmp
sbb
jle
gs
cmp
inc
xchg
push
push
aam
push
add
lods
inc
call
test
add
sub
out
jbe
das
jle
mov
push
xchg
cltd
cmc
mov
dec
add
pushf
sub
xlat
pop
cmp
jge
mov
cld
fildll
das
jecxz
stos
xchg
sub
sub
inc
sub
std
add
leave
pushf
mov
adc
add
test
lcall
cmp
sbb
scas
sti
test
incl
add
addr16
stc
dec
cmp
movsb
xchg
add
sub
lea
push
add
addr16
pusha
xchg
stos
ss
fcomip
jbe
clc
inc
test
jecxz
and
add
xor
add
int3
jns
push
fstp
xor
int3
pop
jmp
dec
ffree
jbe
xchg
fs
int3
scas
cmp
jb
je
jmp
mov
xor
mov
fwait
imul
inc
out
cli
jg
lds
out
sub
sbb
xchg
outsl
incl
lret
jge
in
cld
and
imul
decl
mov
mov
pushf
pop
sub
popa
inc
xchg
scas
cld
pop
enter
sub
mov
jae
das
sub
mov
pushl
push
mov
js
xor
mov
dec
in
shlb
add
fisttpl
adc
cwtl
lret
mov
gs
cld
sbb
stos
push
cmp
sub
call
aad
leave
out
adcl
test
sub
jmp
jno
out
pushf
mov
repnz
repnz
out
pop
sbb
mov
aaa
mov
jecxz
aas
inc
decl
add
and
xchg
outsb
in
jne
add
sub
pop
cmp
xor
ret
test
pushl
ret
fs
cmp
insb
mov
decl
and
ret
mov
shlb
out
sbbb
lcall
pop
js
dec
sti
sub
call
movsl
or
enter
or
out
mov
pop
mov
mov
mov
or
sub
je
mov
xchg
in
incl
adc
sbb
cmp
cltd
jns
sbb
xchg
push
cltd
mov
adc
ljmp
mov
daa
scas
test
fnsave
in
jae
iret
loop
pop
mov
stos
pop
jne
es
hlt
hlt
sti
pop
pop
mov
fbld
fldcw
jmp
std
mov
push
mul
enter
inc
cwtl
cld
rcrb
xchg
outsb
sbb
or
mov
rolb
popa
jecxz
push
cmc
cmp
mov
inc
out
sahf
ffree
cmpl
mov
cmovbe
mov
data16
pop
out
or
inc
sbb
pop
ds
push
push
or
lock
in
sbb
int3
xchg
cmp
ret
inc
add
andb
es
test
incl
jmp
gs
inc
push
sti
inc
dec
not
sbb
ljmp
lcall
lahf
out
mov
cmpl
pop
sbb
push
xchg
call
sub
cmpsl
outsb
inc
inc
pusha
movsl
mov
pop
data16
xor
xchg
popl
stos
clc
mov
push
add
test
push
icebp
jmp
inc
lcall
xchg
call
call
jb
rolb
or
inc
in
insl
jns
pop
cmp
outsb
push
xchg
inc
pop
inc
jb
out
mov
das
jmp
imul
jmp
addr16
repz
stc
negl
cmp
mov
icebp
or
jmp
mov
incl
adc
jo
cmp
pop
scas
clc
call
mov
and
mov
jae
aad
mov
mov
dec
inc
or
in
sub
xchg
ret
adc
or
in
push
sbb
cmp
call
xchg
ret
mov
loope
pushl
dec
xchg
outsl
mov
lds
and
adc
nop
jle
xchg
or
jmp
fcompl
sbb
in
add
push
sub
sub
imul
decl
test
add
push
jnp
mov
jge
repnz
es
lcall
sbb
inc
lahf
pop
scas
sbb
inc
into
xchg
sub
mov
or
mov
inc
xchg
ljmp
adcl
fdivs
idivb
lcall
aam
or
decl
push
push
mov
in
mov
rorl
adc
xor
cmp
sbb
adc
and
adc
iret
pop
jo
sbb
sub
mov
cld
xchg
cmp
int
int
sti
sub
sub
cld
decl
out
pop
fs
sbb
push
mov
jg
sub
xorl
js
mov
int
mov
call
aaa
adc
push
repnz
jb
cli
cwtl
and
mov
xlat
into
aad
jae
inc
shlb
stos
rclb
push
fisubrs
repnz
pop
dec
dec
pop
pusha
push
cli
mov
fcomip
dec
dec
stc
push
mov
test
dec
pop
inc
in
push
fnstcw
rolb
fistl
in
pusha
jb
cmpsl
lods
mov
dec
sbb
push
inc
xor
decl
adc
das
pop
inc
js
aam
arpl
call
in
mov
rclb
mov
and
sub
dec
jecxz
andl
stos
lcall
js
imul
pop
and
call
enter
cld
dec
insb
les
test
xor
ja
ret
add
push
pop
out
xchg
dec
enter
cli
ljmp
in
push
or
mov
ds
mov
aam
push
jns
ljmp
pop
mov
sti
xor
inc
mov
xchg
cwtl
lock
daa
fnstsw
mov
xor
adc
and
stc
xor
cld
mov
add
shrl
loope
pop
das
mov
sub
rol
mov
pop
add
scas
pushf
test
incl
or
mov
pop
dec
test
outsl
cmc
add
cld
push
shll
jg
or
sub
pop
pop
arpl
sub
repz
rcrl
cmpsb
ljmp
in
add
sub
dec
lock
and
push
aaa
incl
pop
adc
add
inc
dec
inc
js
push
mov
cld
daa
lods
test
xor
decl
insb
test
call
ret
out
and
xchg
and
mov
incl
loopne
sar
sbbl
nop
add
jbe
sbb
push
mov
aad
jg
and
pushl
sti
shrl
not
std
movsb
scas
sbb
add
mov
out
cltd
jmp
jmp
mov
mov
xlat
cmp
sbb
ja
inc
xchg
mov
mov
dec
xchg
xchg
push
imul
sbb
sub
fs
cld
scas
cli
mov
mov
mov
mov
imul
cmp
lcall
xchg
addb
in
into
mov
push
adc
jl
inc
sub
mov
call
push
les
shlb
pop
mov
jne
push
xor
cmc
add
cmp
sub
pop
cmpsb
pop
loope
mov
stos
pop
lret
add
push
push
cli
xor
cmp
lahf
jle
pop
add
daa
mov
xlat
mov
cmp
lcall
add
lahf
aam
and
addl
rorb
dec
push
jecxz
aas
hlt
lcall
mov
out
stc
xchg
or
mov
add
inc
push
lret
jb
clc
les
xor
jge
loope
gs
ds
push
pop
shr
push
hlt
mov
or
in
in
push
and
and
push
inc
pop
js
jmp
push
pop
sarl
sbb
xchg
mov
lods
sbb
cmc
cmpsl
mov
addr16
inc
icebp
cmp
cmc
insb
ljmp
inc
push
or
push
mov
pop
inc
mov
jb
adc
mov
xchg
fidivrs
sbb
outsl
add
pop
mov
pop
ljmp
adc
and
and
push
pop
imul
cmpsl
repnz
fidivl
fcoms
mov
pop
jmp
je
icebp
add
arpl
pop
xor
inc
sbb
out
xchg
repnz
test
incl
xchg
popa
xchg
pop
lods
imul
lahf
and
loop
out
fwait
enter
loope
add
ljmp
sbb
dec
jg
pop
popf
lret
sbb
in
jle
inc
decl
out
fdivl
inc
shl
fisubrl
cmpsb
mov
mov
mov
popf
push
std
das
pushf
addr16
repnz
xlat
sti
pop
dec
pop
xor
or
sub
add
fdivrl
test
int3
cmp
xor
pop
iret
cli
ss
jns
clc
dec
ret
lods
popa
cmpb
jbe
xchg
and
paddusb
call
pusha
mov
sbb
and
sub
clc
insl
out
jge
cmp
xchg
push
add
jg
mov
pop
mov
out
push
lods
shrl
lcall
ffree
mov
rorl
mov
push
in
into
or
test
pushl
inc
ds
adc
xchg
mov
jge
iret
popa
add
rep
mov
push
jnp
sti
jmp
stc
inc
pop
test
mov
lret
stc
inc
xchg
fldl2t
cmp
add
decl
cmpl
mov
outsl
shll
and
pop
stos
rcrb
mov
mov
push
js
inc
cli
jmp
insb
or
mov
cltd
xchg
lods
jge
test
test
repz
ljmp
sbb
add
aad
adc
popf
mov
out
push
lahf
pushl
xchg
pop
imul
mov
cmp
add
and
xchg
cld
lods
call
sub
andl
lcall
js
lods
scas
inc
xor
add
push
sar
push
in
movsl
mov
mov
jns
stc
roll
adc
or
mov
out
rcl
imul
inc
je
aad
dec
push
ljmp
xor
inc
xchg
sbb
ja
pop
out
pop
or
add
call
cltd
loopne
call
lods
pop
lret
sarl
mov
push
aas
lcall
scas
mov
xor
popa
jg
icebp
xor
nop
dec
pop
scas
sbb
lret
imul
inc
jmp
add
pop
dec
mov
scas
xchg
loopne
and
in
jl
cmp
pop
ds
dec
jg
cmc
lds
jmp
cmpsl
daa
dec
out
lret
adc
or
mov
pop
loopne
push
add
xchg
add
sub
jne
xor
push
jne
mov
test
dec
bound
xor
out
push
mov
jno
call
inc
sbb
mov
arpl
and
xor
jge
loop
setnp
inc
push
negb
lcall
pop
mov
cld
outsl
pop
xchg
lock
mov
lds
decb
repz
dec
xor
jns
fdivr
js
lea
pop
mov
xor
pusha
add
pop
mov
pusha
scas
mov
pop
notl
sbb
stos
mov
cmpsb
mov
into
jnp
sub
cmpsl
les
aam
lahf
add
cltd
lahf
push
into
mov
inc
mov
lcall
aaa
pushf
xchg
sub
in
cmp
insb
push
sbb
xchg
cmp
cmp
stos
adc
jmp
lds
push
push
insl
sub
xor
cli
stos
lret
xchg
mov
int3
inc
aad
test
mov
sub
jg
ja
les
lret
inc
or
pop
xchg
mov
incl
inc
sub
mov
inc
aam
xlat
clc
sbb
jb
insl
or
adc
mov
ds
dec
push
jmp
adc
fisubrs
pop
int3
loopne
jmp
loopne
push
fwait
test
sub
inc
mov
add
lcall
mov
je
mov
pop
cwtl
pop
sahf
xchg
sahf
xchg
xor
jmp
inc
in
pop
dec
stos
out
dec
gs
push
xchg
shl
in
mov
lcall
clc
decl
cmpsl
or
divb
out
popa
pop
pop
call
sub
pop
call
les
out
sahf
push
movsl
mov
fdivrp
sub
mov
xchg
insl
cld
jle
pushf
outsb
es
in
imul
shlb
clc
mov
add
loope
pushl
test
ljmp
pop
loop
mov
push
fs
test
rclb
cmp
xchg
insb
rcrb
push
fsubrs
movsl
push
xchg
xchg
fimuls
jb
jmp
inc
loop
jae
cli
out
jnp
jg
or
test
xchg
les
sbbb
jae
jmp
stos
jmp
out
shll
inc
jg
inc
inc
mov
xchg
decb
fsubrs
pxor
aaa
cmc
sbb
insb
push
outsl
es
insl
dec
lods
daa
inc
xchg
push
decl
push
rolb
ret
jmp
scas
lock
es
loop
scas
pop
adc
aaa
mov
lcall
jmp
or
ja
jns
mov
stos
mov
sbb
or
mov
xchg
sub
adc
push
and
js
sub
mov
mov
icebp
rorb
mov
icebp
arpl
cli
mov
push
lea
adc
or
dec
pop
pop
and
out
cmp
inc
push
arpl
sub
push
popa
sub
push
clc
int3
fs
imul
incl
inc
das
pop
incb
dec
mov
push
jmp
decl
cmc
sub
cmp
sbb
imul
cld
sub
cwtl
mov
pop
cmc
jmp
inc
sub
jge
mov
cmp
insl
push
add
sarb
inc
cld
push
or
xchg
pop
jle
jnp
dec
repnz
jp
icebp
les
js
add
mov
stos
ljmp
jmp
cmp
adc
xchg
sub
imul
das
sub
add
mov
fistpll
inc
mov
mov
ficoms
xor
dec
lds
jbe
inc
in
pop
fdiv
sbb
outsb
testb
fwait
sub
mov
cmpsb
lds
adc
ljmp
inc
mov
imul
push
out
hlt
stos
sub
cmp
add
sbb
xor
test
jo
inc
das
dec
mov
jno,pt
aas
xchg
cmc
outsl
push
push
and
cmp
fs
pop
rcrl
stc
adc
in
add
aam
test
pushl
lret
inc
xlat
jecxz
test
inc
lock
das
and
lods
in
pop
jmp
call
pop
mov
xchg
lret
jge
or
jg
data16
push
rcl
imul
mov
out
cmp
pop
xchg
sar
enter
pop
insl
arpl
add
pop
decl
xor
leave
mov
push
dec
icebp
xchg
hlt
movsb
loope
inc
mov
ss
inc
loop
jecxz
push
add
pop
add
mov
xchg
cmp
xchg
xchg
stc
pushl
mov
hlt
xor
xor
mov
mov
fdivp
cli
cmp
adc
lcall
test
scas
test
imul
ja
push
repz
ljmp
push
mov
push
test
lea
leave
das
jecxz
insl
sub
fbstp
push
mov
xor
dec
test
xor
ds
in
test
aas
cmp
jge
cltd
sarl
cmpsb
adc
or
xlat
out
pop
dec
cmp
std
addr16
sti
jnp
pushf
jb
adc
outsl
jmp
pop
or
es
call
mov
sub
inc
sbb
jge
adc
sub
adcb
incl
aad
stos
lods
shr
fidivrs
xchg
data16
and
out
lahf
sub
jmp
aaa
sbb
stc
mov
push
dec
mov
mov
movsl
insb
gs
jmp
je
icebp
xor
mov
shl
cmp
outsl
mov
fsubr
aas
lds
in
push
adc
fsubs
dec
add
std
xchg
enter
mov
pop
in
ljmp
mov
dec
adc
fwait
pop
mov
fnstsw
shlb
mov
fs
xchg
icebp
jg
lcall
push
ret
xor
add
movsb
jg
adc
sub
imul
ljmp
test
pop
push
jne
mov
jno
jbe
pop
push
push
dec
std
or
inc
cmpsl
inc
jmp
xlat
fnsave
add
xchg
xchg
mov
dec
add
cmp
out
push
cld
push
insl
in
and
adc
mov
in
cs
xchg
pushl
loop
fdivl
xchg
fcomps
add
aad
xchg
adc
lods
clc
imul
pushl
sti
inc
imul
dec
sbb
cmp
mov
or
xlat
incl
dec
adc
popa
dec
jecxz
mov
mov
mov
and
dec
dec
adc
sbb
lcall
popa
outsl
outsb
hlt
pop
sub
and
pop
sbb
xchg
xor
stos
mov
rol
ljmp
xchg
jns
cmpsb
fldpi
cmp
inc
enter
lock
call
lcall
std
dec
ficomps
lds
pop
or
add
dec
xchg
js
sub
dec
addr16
xchg
sbb
add
lahf
add
arpl
push
in
roll
mov
jo
call
popa
dec
inc
inc
fstpl
xchg
xchg
movsb
and
popa
add
lods
loop
mov
pop
subl
push
das
sar
outsl
jle
push
mov
push
adc
mov
jae
test
decl
insb
insb
jno
aaa
imul
adc
mov
jb
pushf
push
mov
repnz
out
push
call
xor
insl
mov
adc
mov
int
js
addl
pop
fadds
xor
push
faddl
sub
add
jg
xchg
std
cmp
lret
js
in
pop
adc
lods
jno
sbb
enter
insl
jmp
dec
ret
repz
lcall
or
lcall
add
iret
sub
add
movsl
bound
ljmp
incl
pop
jmp
add
xchg
icebp
add
mov
decl
add
in
stos
stos
mov
sti
mov
add
add
and
pushl
call
fidivs
sub
inc
inc
fucomi
cwtl
adcb
jg
decl
jmp
push
or
cltd
pop
jb
dec
dec
data16
jns,pt
lahf
imul
mov
fs
and
or
les
aaa
mov
test
push
ret
repz
jmp
push
stos
push
push
aas
jecxz
sbbb
lret
out
inc
fwait
enter
mulb
dec
mov
mov
cmp
inc
outsl
ss
mov
call
lcall
test
cpuid
mov
pushf
movb
inc
lock
mov
and
inc
mov
xchg
mov
push
mov
call
sub
es
jg
jbe
ficompl
stc
jp
sti
repz
inc
mov
mov
arpl
push
jg
outsl
push
add
pop
mov
test
fbstp
hlt
cmp
jmp
push
fdivrs
xchg
mov
cmp
aas
cmp
inc
dec
mov
call
lea
mov
add
xchg
jecxz
data16
add
cmp
sahf
stc
mov
pop
aas
push
out
lcall
jge
loope
and
mov
mov
xchg
outsl
lcall
dec
sub
js
lahf
stos
into
mov
les
xchg
into
adc
or
in
mov
decl
inc
inc
xor
sbb
in
cli
xchg
push
dec
sub
jl
mov
adc
call
scas
add
pop
pop
xchg
cmp
jg
push
lods
mov
fdivrl
xchg
jg
cmp
cltd
pop
and
push
das
push
xchg
shll
test
or
sarb
out
fwait
and
xor
jmp
aam
inc
cli
inc
or
repz
mov
in
pop
xor
ljmp
movsl
mov
mov
xlat
arpl
ds
movsl
lret
cmp
popf
aad
and
jle
adcl
movsl
push
push
jmp
fidivrl
or
fiadds
mov
mov
icebp
testb
jb
mov
ret
push
lcall
sbb
fadd
jge
mov
aas
inc
test
mov
and
inc
push
xchg
add
dec
inc
das
in
loop
fsub
sub
outsl
xor
clc
jp
incl
xchg
sub
aam
mov
int3
mov
addr16
fnstcw
repnz
or
add
inc
pushf
es
dec
div
pop
sub
ljmp
mov
lock
je
xchg
fisubrl
push
adc
bound
cmpsl
or
rolb
mov
loope
in
adc
or
jmp
in
negb
jmp
das
adc
mov
mov
pop
mov
das
and
sub
sub
mov
dec
and
repnz
scas
cmp
mov
inc
outsb
jb
mov
cwtd
lahf
mov
pop
call
adc
les
sbb
cs
cmc
mov
ljmp
dec
inc
jae
and
push
or
push
js
test
xchg
cmp
std
xchg
pop
or
xchg
ljmp
jbe
and
repnz
in
inc
aam
aas
mov
xor
xchg
cmp
add
psubsw
mov
mov
jl
rclb
dec
push
shl
leave
mov
fiaddl
jle
incl
xchg
pop
push
test
or
xchg
dec
pop
push
or
out
shr
lock
incl
stc
mov
pop
mov
jne
bound
movsb
sub
pushf
jmp
adc
into
cmp
inc
mov
and
jmp
sbb
mov
xor
mov
mov
cltd
pushf
nop
push
mov
xchg
add
scas
leave
mov
inc
inc
mov
mov
int3
xor
sbb
in
scas
push
fsubrs
ror
sub
xor
and
pushl
jmp
dec
sbb
shlb
out
aas
cmp
jne
jae
pop
fstps
jmp
dec
cs
dec
inc
xchg
sub
mov
push
cs
leave
dec
or
mov
and
sub
enter
xor
gs
pop
loopne
add
pop
arpl
fldenv
sbb
push
adc
sub
lcall
sar
fstl
cmc
fisttpll
adc
push
outsl
push
aaa
fistps
test
or
xchg
add
adc
insb
mov
call
pop
pop
cmc
in
lcall
std
pop
lret
movsb
pop
negl
or
pop
cmp
ljmp
mov
mov
add
lret
addr16
mov
cmp
or
testb
mov
out
imul
nop
jne
jg
inc
test
push
pop
push
or
push
fadds
jae
and
xchg
in
xchg
or
sti
aaa
push
addl
push
jo
test
lods
jge
mov
cmp
shrb
scas
sti
xchg
jg
faddl
xor
lea
dec
mov
movsl
or
mov
ljmp
cmp
popl
mov
sbb
jns
sbb
mov
test
or
and
cmp
out
addr16
jo
cli
decl
pop
sbb
test
aad
sbb
mov
in
lcall
or
movl
push
test
shll
fdivrl
and
das
ss
sub
dec
cwtl
aas
mov
hlt
pop
jno
fs
dec
or
inc
add
iret
lret
push
sbb
mov
or
call
js
mov
cmp
and
sbb
cmp
popa
loope
sub
or
mov
test
add
pop
push
int3
add
dec
add
inc
jl
adc
fadds
and
inc
mov
adc
test
call
fdivs
push
xor
add
stc
ret
push
into
pop
int3
cmpsl
sar
inc
jp
sbb
sbb
sar
push
pop
int
out
xchg
jle
inc
clc
scas
mov
arpl
popa
mov
icebp
jns
addr16
cmc
fcmovne
adc
dec
mov
into
hlt
call
enter
sbb
test
pop
mov
pop
insb
xchg
push
addl
incl
stc
ret
insl
movsb
test
mov
mov
add
or
mov
sarl
add
sbb
lock
cmp
or
orb
adc
dec
popf
pop
mov
jecxz
xor
call
xor
bound
je
sbb
pop
insl
mov
shlb
jmp
andl
outsl
and
or
inc
xor
xor
jmp
aam
push
test
lods
pop
xlat
mov
pop
xor
xor
and
mov
stos
adc
and
arpl
xor
sub
xchg
jge
imul
mov
sub
inc
or
push
pushf
dec
imul
cmp
repz
adc
int
adc
in
lcall
incb
and
aam
xor
fsubl
int3
sbb
and
xor
ljmp
inc
inc
int
cli
mov
fimuls
mov
cmpsb
ds
in
mov
aam
mov
aad
cmp
int
nop
test
push
in
loope
add
repz
movsb
ret
adc
call
dec
lods
jb
mov
testl
adc
dec
mov
mov
and
decl
mov
xchg
mov
and
jp
fldenv
push
dec
jmp
xchg
fs
js
lret
cltd
xchg
xor
je
ljmp
sti
das
sub
sub
sarl
jbe
xor
pop
cmp
push
cwtl
insb
push
jle
pusha
cmp
fnstenv
pop
test
out
dec
imul
xchg
adc
ds
ljmp
int3
out
cld
ds
mov
inc
sub
fsubrl
daa
fwait
dec
adc
pop
das
add
arpl
pop
xchg
jge
cld
shll
mov
and
pop
inc
or
mov
pop
loop
jecxz
cli
inc
insl
xor
push
fdiv
fsub
lea
cmp
outsl
enter
decl
mov
pusha
in
dec
jge
pop
dec
xchg
in
adc
and
sub
xor
sti
push
sub
sbb
jg
sub
mov
loope
mov
push
shrl
jmp
or
mov
jmp
push
js
dec
aaa
cwtl
cli
rcr
add
imul
into
stos
sub
call
sub
push
mov
cmp
dec
push
arpl
fs
jp
jmp
jo
cmpsl
ss
and
pop
scas
adc
pushf
pusha
sbb
pop
ret
mov
ret
enter
fiaddl
shlb
arpl
popa
jmp
jae
test
dec
inc
inc
adc
xchg
cmp
add
loop
mov
loope
add
ljmp
stc
iret
jne
dec
imul
sti
mov
lods
sub
lea
push
mov
fiaddl
mov
xlat
rep
or
pushl
dec
in
jmp
testl
bound
add
sbb
inc
lods
inc
mov
dec
mov
stc
scas
aam
and
mov
jecxz
shrl
mov
cwtl
jbe
loope
call
cwtl
lcall
leave
mov
je
lcall
test
mov
stos
cmp
or
cmpsb
mov
jno
lock
cmp
add
repnz
imul
mov
popa
push
mov
adc
jmp
sub
mov
jg
rolb
verw
and
int3
add
push
push
mov
mov
inc
adc
daa
in
sbb
clc
add
ret
loop
lds
scas
lods
push
out
add
fdivs
insb
pushf
fcoml
inc
dec
test
popf
icebp
sub
test
and
mov
cmp
mov
pop
jnp
ja
aam
push
mov
dec
psrlw
dec
xchg
mov
mov
aam
test
fisubrl
jo
fwait
lcall
mov
sti
stos
pushl
out
pushl
in
lret
or
mov
in
les
push
cld
jl
add
mov
add
hlt
ss
enter
push
push
xor
xor
ficoms
mov
lock
push
fldt
sbb
cltd
xchg
mov
rorb
cwtl
jnp
jg
and
push
mov
lcall
push
ret
js
xchg
imul
sbb
jae
pop
push
ja
push
push
mov
decl
cld
imul
aad
js
loopne
xor
test
push
out
jmp
testb
pusha
dec
jae
mov
xor
pop
adcl
and
sbb
out
cmpsb
inc
mov
mov
lcall
inc
sub
mov
dec
jnp
sti
je
mov
in
mov
cmc
mov
ljmp
leave
cmc
cmp
xchg
dec
push
jmp
fcoms
imul
rcl
sub
sub
mov
out
test
adc
orl
or
rolb
dec
inc
mov
pop
or
aam
inc
repnz
shrl
lds
decl
es
jno
cmp
es
sahf
into
mov
cmpsl
push
test
lods
repz
mov
imul
decl
xchg
out
into
test
xor
sub
lret
cmp
adc
inc
cmp
movsb
pop
repnz
mov
lods
mov
cltd
mov
adc
inc
xor
popl
lcall
mov
imul
and
mov
stos
lcall
repnz
mov
mov
jecxz
jne
call
repz
cmp
popa
or
das
pop
scas
es
add
add
inc
dec
fldcw
add
sbb
inc
xchg
jb
push
sub
shll
xchg
add
cs
ss
pop
sub
or
sbb
sbb
pushl
fs
xchg
cmp
sbb
fwait
fisttps
add
add
imul
mov
lcall
jns
dec
nop
jmp
scas
adc
or
vmaxps
lock
cmpsl
inc
push
jle
sbb
jecxz
sub
and
jbe
inc
push
xchg
and
inc
cli
es
icebp
cmp
int3
decl
jb
lret
out
cltd
scas
pop
pop
imul
lea
mov
in
mov
stc
jp
orb
adc
mov
push
add
outsl
pop
dec
xor
adc
cld
and
cmp
mov
push
je
pop
inc
idiv
jmp
popa
jae
bound
insl
inc
daa
imull
les
jo
pop
int
push
inc
push
cmp
std
decl
es
int
mov
mov
fidivrl
jl
fsub
movsb
dec
shll
mov
dec
ret
xchg
ret
xchg
inc
add
inc
repz
into
jmp
mov
ret
out
pop
inc
adc
fsub
mov
or
int3
jle
cmp
cmp
xchg
xchg
cmp
push
push
jne
sbb
es
pop
ja
out
int
out
xchg
cmpb
mov
sbb
pushl
xor
iret
inc
dec
out
adc
ficoms
jmp
repz
pop
and
movsb
cmp
das
bnd
cmp
test
dec
push
jp
sub
inc
movsb
sbb
pushf
mov
shlb
call
pop
es
mull
lods
sbb
push
or
dec
push
sbb
repz
jecxz
dec
mov
incl
sub
sahf
or
leave
cwtl
inc
aam
sbb
into
mov
daa
cltd
inc
push
push
cmp
mov
push
inc
rclb
cmp
clc
mov
inc
sti
mov
push
lods
movsb
fisubs
jmp
jmp
cmpsl
stos
mov
inc
sahf
cmp
pop
or
mov
and
or
icebp
push
std
add
push
or
rclb
or
sub
push
inc
subb
imul
leave
in
xor
mov
jg
cmp
mov
or
test
xor
add
cli
sub
pop
fbld
pushl
or
mov
or
sbb
sbb
or
int3
jb
pop
cmp
mov
jg
push
push
into
outsb
mov
shlb
or
mov
lahf
fcompl
mov
decl
loopne
cmp
mov
loop
out
dec
cmpsl
rcll
dec
inc
ret
incl
mov
mov
insb
xchg
sbb
inc
incl
xchg
insb
test
aas
wbinvd
fsubl
jp
iret
dec
sbbl
sbbb
pop
loopne
or
sbb
dec
and
pop
mov
xchg
mov
cmp
clc
lcall
jne
loopne
cmp
ret
js
out
loop
pop
decl
adc
sub
xchg
stos
ds
rcrb
outsl
pop
xorb
scas
or
push
sub
es
jg
and
push
pop
sbb
jecxz
pop
fs
pop
pop
mov
pushl
mov
dec
and
sub
xor
fidivrl
stos
jecxz
jmp
inc
bound
xor
aam
stos
leave
into
inc
movsb
push
mov
in
ja
sbb
fcomip
jmp
sub
cmc
lret
jge
mov
and
cwtl
aad
adc
incl
lock
push
jne
cmp
imul
jns
jge
in
fdivrl
or
push
jns
or
dec
jl
sbb
pop
ljmp
enter
loopne
rcll
lcall
jo
call
mov
ret
incl
je
bound
lret
jge
lock
jmp
or
jne
push
pushl
or
cli
cmp
imul
xchg
cmpsl
and
test
dec
imul
ds
decl
mov
addr16
divl
add
inc
push
inc
add
cs
push
leave
mov
xchg
mov
js
jne
pop
mov
out
in
lea
adc
sbbb
idiv
xchg
lcall
push
push
xor
scas
jg
popf
in
mov
pop
adc
xchg
push
ret
sub
decl
fistpl
ja
mov
cmc
aaa
xlat
lods
dec
jbe
dec
xor
inc
mov
std
arpl
mov
cmp
out
dec
in
mov
mov
pop
dec
into
cmp
mov
aas
pop
mov
mov
mov
inc
incl
aas
pusha
mov
push
mov
push
inc
out
repz
push
imul
rol
decl
push
daa
mov
pmaxub
mov
inc
and
bt
dec
aam
xchg
and
in
jno
xchg
cmp
lcall
sbb
xchg
adc
dec
in
add
or
inc
push
fsubr
adc
js
add
pop
xchg
xor
add
push
pop
movsl
jp
xor
mov
cmc
movmskps
fs
test
fistpl
out
and
pop
fisttps
pop
or
and
out
pop
insl
push
inc
inc
negl
cmp
imul
cltd
cmp
pop
sbb
mov
arpl
xor
mov
mov
bnd
push
dec
mov
popf
xchg
pop
push
xchg
add
push
arpl
sbb
add
dec
cli
jmp
divl
lods
jmp
mov
icebp
fistpll
xor
inc
push
je
aas
aas
ret
mov
ljmp
xchg
lods
sbb
xchg
lcall
xor
adc
pop
jno
adc
jmp
lock
out
in
bound
adc
xor
test
xlat
sbb
push
pop
adc
cld
sbb
cltd
jo
xor
sahf
test
cmp
pop
and
imul
imul
std
movsl
test
nop
scas
xchg
test
lea
fnstcw
cli
pop
dec
push
addr16
fcomi
pushl
add
ss
mov
cmp
call
std
pop
push
inc
aas
add
in
push
pop
cmc
or
jg
jg
dec
cmp
add
cld
xor
xor
jl
daa
ret
sub
movsl
mov
pusha
and
outsl
add
loope
push
les
sbb
push
lods
cli
mov
clc
pushl
gs
mov
and
insl
in
out
loop
add
ljmp
andb
or
inc
pushf
lock
push
pop
sbb
enter
pop
fistps
xor
arpl
mov
and
mov
pop
das
pop
out
adc
dec
dec
or
popf
out
pusha
xor
pop
push
pop
into
cld
call
pusha
scas
imull
push
in
xchg
jecxz
pop
or
push
fxch
insl
rol
icebp
pushl
xchg
lods
pop
cmpsb
mulb
mov
xchg
addr16
nop
sbb
shll
loop
scas
insl
xor
mov
xchg
and
insb
xchg
ret
stc
jo
add
imul
jns
mov
push
lcall
fimull
jae
push
fisubs
mov
sbb
sti
aas
pop
shll
lret
mov
outsl
xchg
lock
or
stc
mov
jmp
out
mov
mov
rcrb
cmp
adc
int3
push
and
sti
pop
repz
clc
and
jg
mov
or
sbb
aam
and
mov
not
dec
cwtl
push
int
push
jmp
imul
lock
mov
mov
jmp
pop
sarl
pop
aaa
mov
mov
jg
jmp
bound
cmp
xchg
out
xchg
jmp
sub
add
ss
xchg
shrb
jbe
mov
out
out
fnstcw
std
pop
jp
cmp
inc
and
inc
iret
or
cwtl
mov
or
pop
repz
js
sbb
dec
jae
js
in
add
or
cmp
jg
or
mov
dec
aaa
insb
movsb
cmpl
xchg
adc
pop
dec
std
fldt
jmp
sub
out
dec
xchg
int3
adcb
outsl
pushf
sbb
insb
inc
push
mov
xor
fiaddl
sub
imul
outsb
fistpl
idivl
fiadds
cltd
sbb
cltd
and
fcoml
xchg
pop
or
ljmp
xchg
shrb
or
cli
call
xor
push
adc
sub
mov
fmul
addr16
jmp
repnz
push
xor
push
push
lahf
or
dec
aad
xor
xor
lcall
adc
adc
mov
push
aam
rolb
dec
jbe
fwait
decl
pushf
bound
mov
clc
clc
outsl
test
mov
cs
popl
xchg
stc
inc
cmc
scas
xchg
std
pushl
jo
adc
mov
in
nop
sub
out
mov
lahf
pop
nop
jmpw
out
cli
jns
bsf
or
cmc
data16
cli
aaa
pop
xabort
jg
test
mov
enter
ljmp
js
jl
mov
cmp
push
or
cmp
xrelease
push
sbb
xlat
jmp
xor
push
jmp
mov
sub
dec
into
push
ljmp
leave
imul
orb
popl
decl
mov
mov
push
push
pop
out
mov
incl
cmpsb
sahf
lret
out
pop
dec
lret
push
inc
mov
or
xor
lea
shr
test
adc
in
cmp
xchg
push
push
lods
loope
pushl
cld
push
sbb
incb
clc
jmp
sub
cwtl
xchg
xor
aam
lahf
repnz
lea
lcall
orb
push
mov
xor
or
mov
and
sbb
bsr
push
lcall
push
cmp
fdivp
pop
xchg
ds
adc
stos
add
cmp
cltd
jecxz
scas
and
push
loopne
pop
in
js
imul
xchg
jge
leave
bound
xchg
mov
or
fidivl
iret
in
test
stos
sub
outsl
cs
cli
das
sbb
mov
in
mov
adc
inc
notb
pop
mov
mov
push
stos
cmp
incl
cld
mov
push
out
sub
pop
scas
inc
ret
mov
pop
mov
test
push
and
sbb
and
jl
outsb
adc
cmc
jg
ljmp
loop
jle
in
add
jno
push
fistpll
push
inc
dec
or
cmp
divl
or
repz
clc
jp
shl
jle
ret
incl
out
lahf
fsub
fimuls
mov
dec
adc
lods
sarl
pop
mov
xchg
sub
hlt
pop
mov
in
incl
filds
shll
ds
std
scas
xchg
rol
fidivl
std
mov
xlat
sbb
call
bound
into
xor
mov
mov
cltd
mov
ret
push
or
rcrb
int
or
jmp
stos
fiaddl
xlat
dec
jb
ror
cwtl
and
sub
test
mov
jge
ret
cmp
je
movsl
cmp
imul
xchg
outsl
enter
push
leave
jbe
mov
gs
decl
push
out
icebp
jne
stos
call
cld
leave
cs
jae
mov
xchg
mov
ljmp
ret
jge
leave
sbb
nop
jne
sbb
aaa
lcall
push
bswap
mov
jmp
xchg
insb
sbb
pop
xor
mov
lods
inc
xchg
and
mov
out
adc
mov
call
cmc
mov
sub
stos
adc
js
or
cli
out
fdivl
adc
sbb
jecxz
shll
fs
popa
mov
jns
pushl
inc
jbe
insl
loope
pop
xchg
adc
std
push
leave
mov
cmpsb
jno
or
inc
pop
ljmp
cmp
ljmp
ljmp
push
andl
iret
jns,pn
cli
push
jno
adc
xchg
aad
jmp
mov
xlat
popa
jae
jl,pn
jns
negb
xlat
sub
movsb
jb
pop
mov
ret
mov
data16
scas
pop
fs
stos
das
in
sbb
pushl
push
clc
or
xchg
add
inc
xchg
imul
mov
das
xchg
out
or
xchg
mov
jmp
shrl
jo
frstor
cmp
out
jecxz
or
mov
mov
loope
pop
sbb
or
jns
fs
add
ljmp
fbstp
push
mov
pop
jae
cmpsl
scas
lods
xor
or
fsubl
lods
decl
mov
xor
jmp
cmp
pop
mov
jg
repz
fmuls
jge
mov
js
pusha
fadd
outsl
sub
dec
inc
jae
out
jbe
and
inc
xor
pushl
pop
sbb
loope
pop
jmp
mov
popf
push
int
pop
or
fisubrl
lcall
jecxz
jmp
filds
jge
jb
stos
inc
xlat
in
aam
sahf
enter
sar
lcall
jns
lcall
jbe
push
in
cli
iret
mov
push
or
mov
sahf
sbb
sub
pusha
sbb
fisttps
bound
push
xor
lds
call
lahf
nop
push
jecxz
in
mov
mov
mov
lock
jg
loop
inc
jle
decb
subb
jne
pushl
pop
adc
lcall
sbb
data16
and
mov
scas
stos
rclb
ljmp
mov
out
clc
stc
fsubl
xchg
stos
imul
idiv
sbbb
fidivs
fcom
add
lcall
and
mov
jb
xchg
xor
aam
ljmp
repz
add
mov
add
jg
sub
jle
sbb
xor
jae
loop
scas
mov
ss
gs
loopne
cmp
decl
lock
ret
jo
mov
lahf
or
dec
fwait
insb
xchg
jmp
call
inc
ljmp
or
outsl
movsb
push
adc
data16
jg
movb
cmc
jnp
dec
stos
mov
jbe
hlt
push
jle
add
ljmp
xor
xor
adc
shlb
xlat
adc
das
faddl
mov
popf
jmp
decl
call
sbb
fst
push
mov
and
jmp
iret
rorb
scas
aad
xchg
jl
jbe
cs
dec
lcall
out
pop
mov
inc
insl
enter
scas
lcall
pop
push
xchg
stc
or
std
or
cmp
adcl
push
lods
outsb
in
pushl
sbb
push
cli
mov
push
bound
fsubs
xchg
push
stc
xchg
incl
lret
rcr
or
fsubl
lret
jne
lds
push
mov
mov
lods
inc
clc
aas
test
and
cmp
decl
movsl
flds
mov
pop
adc
es
jno
movsb
pushw
or
mov
dec
les
lods
cmp
lret
xor
mov
jne
call
cld
inc
imul
out
mov
adc
fdivl
sbb
sub
ret
pop
repnz
cmp
push
cmp
or
fnstcw
dec
movq
jmp
cmp
clc
cmpsb
mov
xchg
jl
loopne
fstps
mov
xchg
push
cltd
xchg
lcall
in
imulb
and
daa
imul
pushf
adc
sub
jne
push
test
call
test
into
mov
sbbl
repz
mov
push
sbb
out
pushf
lock
sar
jmp
cmp
icebp
mov
dec
xor
outsl
loopne
pop
mov
je
pop
test
nop
movsl
mov
pop
aad
pushl
sar
cmpsl
mov
xchg
dec
sahf
inc
das
and
sub
incl
push
sub
mov
inc
cmp
loope
pop
fldt
decl
sahf
mov
mov
lahf
shrl
inc
btl
cmp
jb
in
mov
inc
nop
incl
xor
cmp
or
test
loope
imul
aad
pop
mov
mov
add
popf
sahf
fstl
stos
ja
cmp
push
lcall
mov
repnz
xchg
shll
cld
icebp
jl
dec
mov
or
insl
xchg
cmpsl
xor
cmc
mov
xor
ljmp
jge
xchg
fiaddl
push
in
je
adc
ja
mov
ljmp
rorb
mov
push
pusha
sub
jb
imul
mov
popf
dec
ret
cld
dec
int
xchg
mov
clc
insb
or
test
or
lcall
mov
mov
fbld
and
pop
aam
in
lret
jo
dec
test
adc
decl
ret
lods
add
fisubrs
add
ja
frstor
pop
inc
js
je
call
mov
pop
jg
push
out
inc
aam
lret
push
push
lock
push
fistpll
jge
push
pop
jns
jbe
cmp
incl
shll
and
add
mov
into
notb
sbb
cmp
xchg
mov
push
or
sti
rcll
add
inc
sti
loop
outsb
addl
mov
cltd
cmp
ss
pop
cmp
je
or
icebp
adc
mov
popa
cwtl
push
repnz
cmp
push
roll
shrb
fldl
sub
out
dec
xchg
and
mov
cmp
xlat
or
adc
aaa
std
addb
int
mov
aam
out
mov
mov
stos
mov
jmp
mov
test
mov
dec
mov
ret
mov
inc
xchg
pushl
in
sub
mov
int3
aas
adc
stos
in
out
andb
adc
push
outsl
adcb
in
and
out
inc
rcr
sbb
mov
sub
fisttps
or
call
sete
arpl
adcb
pop
or
mov
lcall
add
pop
pop
scas
gs
push
pop
icebp
pop
nop
pop
shrl
imul
sub
jmp
cmpsl
add
and
pop
cmp
stc
decl
adc
xchg
jecxz
sbb
ds
rorl
inc
fildl
mov
jmp
pusha
fimull
incl
jne
inc
in
sbb
mov
add
addr16
imul
clc
fcmovu
pop
inc
cmp
sbb
or
clc
xor
insb
inc
pop
and
cmp
jnp
fcmovne
mov
je
jg
test
mov
jp
xor
mov
decl
adc
pop
mov
test
imul
into
cmpb
jnp
sbb
add
pop
cmpsl
adc
jge
lcall
sbb
mov
jmp
push
test
push
xor
fsubrs
pushl
lret
mov
icebp
repz
dec
in
mov
adc
mov
out
lods
int3
jl
repz
test
int
icebp
int3
ret
mov
nop
sbb
ljmp
adc
lcall
fcmovu
mov
xchg
popf
mov
jle
call
cmp
dec
sub
int3
je
incl
in
out
adc
iret
in
cmp
adc
aas
push
cwtl
xchg
test
mov
push
movsb
ret
lahf
test
push
and
fcompl
decl
dec
pusha
jle
idivb
push
inc
xor
cmp
pop
sbb
mov
lock
aad
push
inc
rcrb
mov
insb
xor
jns
lcall
adc
add
mov
std
mov
mov
loop
mov
mov
mov
xlat
xor
lds
jne
fadds
mov
je
mov
dec
orb
mov
notl
icebp
fcomip
add
dec
adc
pop
out
pop
sub
fldenv
cmp
roll
cmpsl
inc
add
mov
loope
xchg
fdivrs
scas
ljmp
jge
enter
inc
rclb
push
mov
jecxz
mov
adc
in
pushl
and
mov
cmp
test
cmp
scas
or
es
dec
xadd
jmp
sub
add
mov
push
xor
xchg
imul
jp
and
sub
inc
sbb
es
pusha
leave
das
push
inc
mov
xor
add
ljmp
cld
adc
jp
jno
xchg
cmp
loopne
and
dec
stos
sub
sbb
cmp
pop
add
adc
lcall
inc
out
js
mov
pop
jge
orl
push
jl
pop
int3
pop
push
jmp
sti
and
aad
mov
cli
pop
fdivrl
dec
dec
nop
div
and
push
negb
cmp
add
rcl
mov
subl
xor
divb
andb
decl
or
jecxz
ja
jno,pn
adc
out
jbe
out
fnstcw
fdivr
push
jbe
daa
jo
scas
rcrb
fs
ss
inc
jne
cmpsl
xor
decl
je
mov
mov
movsl
out
arpl
inc
xor
ficoml
mov
ljmp
xchg
pop
push
hlt
outsb
mov
push
pop
lret
xor
adc
jg
add
lock
lock
and
push
shll
mov
je
lret
xchg
fmuls
ja
shlb
mov
xchg
jmp
outsb
push
in
divl
mov
mov
std
xchg
aas
sub
pop
and
fdivs
fists
call
out
push
mov
sti
cmp
popf
jns
xchg
push
xchg
dec
arpl
clc
call
pop
cmp
push
xor
lret
aad
mov
jl
ficoms
or
mov
xchg
mov
sub
pcmpgtw
adc
js
push
add
aaa
sar
mov
shrb
cmc
daa
xlat
sbb
cmp
test
fistpll
enter
push
and
cltd
sbb
jno
adc
jmp
mov
test
out
outsl
jne
mov
dec
xor
adc
or
sbb
jo
out
jp
cs
mov
lcall
dec
test
clc
jmp
bound
mov
add
cs
das
mov
fidivs
cmp
or
stc
arpl
or
or
clc
pop
push
lret
mov
ljmp
lret
nop
ficoml
lock
les
sub
jne
es
cmp
add
jg
jmp
xchg
inc
inc
push
shll
and
pop
mov
cs
repnz
jb
adc
add
call
cmp
lock
aam
sub
imul
outsl
outsl
adc
in
and
cwtl
imul
cs
fcomip
mov
les
sarb
push
cmp
cld
filds
sub
and
jp,pn
add
or
out
xchg
sahf
and
pop
js
outsl
pop
call
hlt
sbb
test
lods
jmp
cmp
in
filds
lds
inc
out
push
or
clc
iret
bound
adc
sub
insl
insb
jns
cmp
mov
sbb
jb
xchg
cmpl
call
sbb
ror
inc
ljmp
sbbb
inc
mov
pop
pop
lock
jne
stos
cs
pop
js
sub
ja
je
dec
nop
mov
jg
cmp
xchg
mov
and
shlb
sbb
lret
dec
incl
jge
pop
cmp
sti
shl
popf
sub
mov
incl
mov
dec
and
jo
pop
lds
jge
sbb
in
cli
std
idiv
decl
jae
rol
add
pop
test
jmp
mov
cltd
push
movsb
stos
test
sub
push
mov
test
mov
xor
fwait
push
cmp
mov
inc
andl
cmp
scas
loop
jbe
or
sub
pop
mov
mov
call
btcl
jb
pop
add
idivb
incl
dec
and
jmp
scas
add
mov
jg
sub
and
sahf
push
push
call
decl
dec
jl
jl
lods
xlat
jae
ja
ds
std
ss
nop
mov
out
les
imul
adc
xor
mov
popa
cli
adc
stos
mov
orl
jno
inc
mov
fcomps
inc
jl
sub
xchg
inc
cmpsl
jmp
dec
std
push
daa
rcll
sahf
rorl
cltd
push
out
dec
push
arpl
mov
xchg
fadds
mov
push
jbe
mov
decl
rcrb
ret
into
out
cltd
and
loope
loop
and
aaa
fisubrs
mov
in
roll
adc
push
sbb
dec
sub
mov
in
outsl
fst
mov
adc
std
or
sub
repnz
lds
sub
push
popf
lds
mov
push
mov
rcll
push
jp
aas
mov
pushf
les
dec
mov
xchg
test
sahf
mov
jle
shrb
mov
pushl
mov
rorl
cld
fsubl
arpl
outsb
jbe
pusha
in
sbb
lret
pushl
std
inc
push
rolb
sub
fadds
std
push
aaa
push
push
push
or
cmpsl
pushf
clc
gs
ljmp
mov
adc
ja
jne
xor
pop
test
xchg
inc
stos
jmp
dec
mov
mov
push
inc
or
nop
xchg
mov
arpl
ljmp
stos
addl
xor
movsb
adc
sarb
pop
lea
decl
add
jae
mov
xorb
mov
jl
mov
jmp
clc
adc
xlat
xor
cmpsb
mov
inc
sbb
push
aam
loopne
sbb
clc
jmp
or
rcr
in
cs
push
xchg
sti
push
mov
dec
sub
stos
gs
cmc
outsb
pushl
cld
ljmp
push
addr16
repz
pop
sub
pop
out
jbe
pop
test
push
pushl
ret
sub
cld
lock
jecxz
lret
pop
loop
sub
mov
lods
mov
sbb
icebp
incl
cld
ret
or
pop
pop
mov
dec
xlat
in
and
decl
inc
xlat
in
push
sbb
push
in
lock
mov
jae
shrl
cmpsb
xor
mov
sbb
ret
rolb
ffreep
xchg
stos
sub
mov
xchg
lods
or
cmp
lds
lcall
mov
stos
cltd
je
add
cmp
push
jl
fildll
mov
or
aad
mov
jb
mov
xchg
adc
mov
movsl
inc
inc
stos
xor
popa
dec
or
addb
lcall
and
or
jl
add
jp
ljmp
leave
fs
sub
in
test
mov
mov
cmp
movsb
cmc
fildll
ljmp
movsl
adc
js
push
cmp
or
jg
mov
test
or
js
int3
xchg
dec
out
mov
ljmp
test
lock
repz
inc
mov
push
push
lods
les
ret
mov
fsubs
movsb
and
fs
loopne
dec
lock
xor
cmp
sahf
imulb
xor
ret
out
in
mov
shrl
lcall
stos
jge
repz
mov
cmp
or
mov
in
jp
push
sub
add
mov
or
dec
adc
jnp
fnstsw
and
lahf
lea
lods
lcall
dec
leave
call
cmp
arpl
in
xor
sub
jg
lret
pop
push
call
fnstenv
inc
mov
cs
or
sti
pop
inc
cmp
sbb
scas
jbe
push
dec
lcall
data16
mov
add
mov
mov
pop
cmpsl
cmp
jp
ljmp
rcr
ljmp
fs
or
dec
mov
rol
sbb
jecxz
push
je
xor
sub
fwait
decl
dec
pop
andl
fcoms
push
or
or
repz
lahf
out
cli
and
inc
mov
and
call
sti
add
incl
cmp
sbb
sub
repnz
mov
fucomi
xchg
cmp
xor
mov
jmp
or
test
ja
push
pushf
lret
push
cmpsb
repnz
mov
push
decl
inc
adcl
push
lcall
outsb
sbb
sahf
pop
cmpsl
imull
push
addr16
jmp
mov
lods
std
scas
xchg
push
pop
scas
gs
sub
jne
fists
jl
dec
cmpsl
xchg
decl
mov
adc
lds
sti
insb
test
dec
pusha
cmpsb
inc
sbb
ja
ret
aad
push
sahf
pop
stc
shlb
popa
xor
subl
mov
sub
or
ja
stos
jp
xchg
je
push
xchg
pop
lods
xchg
daa
mov
nop
hlt
push
jae
sti
mov
push
ljmp
pusha
je
xchg
add
cmpsb
shlb
cmpsl
sub
mov
dec
inc
popa
ss
in
push
adc
ljmp
mov
addl
addb
dec
inc
sub
dec
cwtl
sbb
ljmp
hlt
xor
inc
sti
sahf
cmc
add
cli
mov
pop
andb
mov
mov
or
dec
mov
xor
mov
mov
and
mov
sbb
flds
sub
mov
cmp
xchg
lahf
insb
packuswb
cmpsl
mov
inc
imul
neg
movsl
jo
icebp
pop
cld
pop
loopne
sahf
pop
and
inc
jae
xchg
lret
cmp
in
in
jmp
jg
fs
test
xor
push
rol
jge
fnstcw
push
testl
lcall
je
pop
rolb
pop
mov
in
pushl
cld
jmp
pusha
dec
out
loope
in
jmp
pop
add
ja
ret
mov
call
pop
andb
mov
xor
mov
mov
aas
jle
jnp
mulb
mov
shrl
les
add
mulb
sti
outsb
scas
ds
xchg
cli
stc
mov
loop
iret
loop
dec
aad
stos
jns
testb
push
in
or
dec
cwtl
cmpsl
push
fcoml
adc
pop
popf
inc
daa
jmp
movsb
mov
mov
fucomip
outsb
xchg
in
add
andb
call
sbb
stos
pusha
loopne
arpl
dec
sbbb
adc
push
and
cwtl
scas
or
or
mov
shlb
sbb
pop
frstor
lods
mov
rolb
mov
push
fcmovbe
rcr
mov
in
jno
jecxz
cmp
push
les
adc
push
cld
popf
repnz
jmp
popa
out
and
jb
stc
lock
adc
dec
out
jbe
jmp
ret
or
lcall
out
adc
stos
es
or
adc
add
sub
pop
fs
inc
movsb
aas
and
lcall
sbb
cmc
sub
mov
mov
mov
xlat
decl
xchg
faddl
adc
mov
xchg
cwtl
mov
ljmp
repnz
push
adc
sub
nop
mov
mov
ljmp
test
stos
pop
mov
jne
mov
inc
xor
movsb
lahf
jp
stos
out
jmp
or
bound
clc
adc
and
pop
add
faddl
add
incl
cs
pop
clc
int
pop
jle
xchg
daa
xor
lock
cmp
push
dec
pop
rcrb
lahf
sub
push
sahf
dec
out
push
in
mov
insb
daa
mov
test
and
ljmp
dec
or
xor
and
inc
adc
sub
sbbl
pushl
popa
nop
cmp
dec
arpl
in
dec
add
mov
lea
fdivrs
jne
sub
ljmp
lock
inc
xor
adc
sub
lds
lock
outsb
fcmovbe
sub
inc
into
pop
push
or
loope
loope
je
cmp
and
sbb
sahf
mov
push
call
mov
out
pushf
in
bound
xchg
std
xchg
jle
mov
sub
cmpsl
les
mov
jns
imul
stos
push
fidivrl
jmp
jle
inc
test
iret
in
add
push
sub
cmp
add
ljmp
or
pop
leave
cmc
cltd
stc
scas
cld
mov
xor
push
ljmp
cld
scas
push
pop
or
mov
sub
test
add
pushl
mov
enter
push
rcrl
into
and
xchg
in
jo
adcb
mov
ljmp
in
inc
in
and
arpl
loope
in
push
or
lock
lcall
dec
lcall
xor
pop
pop
mov
xchg
mov
pop
sbb
lahf
xchg
in
xlat
mov
out
cmp
push
out
pusha
int3
jg
scas
xor
inc
mov
mov
imul
mov
call
fmul
lahf
inc
sar
push
lret
ret
and
xor
or
es
or
enter
ds
jge
or
lahf
adc
or
dec
inc
mov
lods
mov
aas
jbe
leave
sbb
mov
xchg
clc
and
inc
jne
push
jecxz
dec
ss
ljmp
add
daa
mov
jbe
in
out
inc
aas
ljmp
stc
and
sahf
mov
in
add
loopne
pop
pop
lock
and
lret
insl
lcall
repz
jnp
insb
iret
int3
fdivrp
dec
and
inc
leave
or
xchg
push
filds
sarb
lret
and
call
and
inc
pop
sbb
xchg
push
dec
and
scas
pop
hlt
incl
adc
fcompl
pusha
out
cmc
sbb
push
out
rclb
lcall
aas
scas
xchg
iret
pop
push
cmp
xchg
mov
in
mov
inc
xorb
mov
dec
icebp
jle
jg
lcall
mov
inc
push
cltd
mov
dec
xchg
cmp
call
cmpb
mov
pop
ret
pop
jbe
addr16
repnz
lcall
pop
push
mov
dec
movsb
lcall
gs
mov
cmp
mov
pop
inc
insb
fisttpl
decl
cmp
inc
scas
std
aad
mov
sbb
push
jns
fmuls
xor
cmp
push
jl
sar
push
mull
mov
cmp
ret
dec
jmp
jmp
jecxz
ds
incl
cwtl
cmpsb
inc
xor
jmp
xchg
mov
pushl
sub
push
lcall
ljmp
ficompl
loope
mov
xchg
xchg
jle
pop
push
xchg
pop
sti
dec
xchg
fsubrs
xchg
call
pop
add
push
leave
in
xchg
imul
leave
adc
mov
les
push
mov
push
call
jp
pop
aad
cwtl
mov
cmp
enter
xor
decl
jo
xor
ljmp
pusha
fdivl
outsb
and
enter
jae
inc
adc
ja
rcrb
cs
mov
add
iret
xchg
mov
out
mov
fdivrs
aas
xchg
pop
aad
add
mov
es
rclb
mov
decl
movsl
leave
push
arpl
push
jo
pop
mov
aaa
xchg
or
sbb
jae
adc
je
icebp
adc
add
add
insb
mov
out
out
std
mov
xchg
adc
sub
xchg
out
mov
arpl
subb
inc
ja
mov
xor
fstps
mov
mov
mov
dec
mov
ret
out
cli
dec
rcl
imul
mov
cmpsb
adc
jnp
das
cmpsb
cmc
pushl
insb
jno
adc
cmp
dec
out
fcomip
stos
xor
in
inc
jne
adc
xor
cwtl
icebp
int3
sub
sub
jmp
and
and
test
push
inc
arpl
mov
adc
ds
or
push
insl
adc
add
out
lcall
push
ljmp
cld
sti
call
orl
cmp
jl
xchg
jno
popa
mov
mov
jmp
pop
mov
sbb
sbb
movsl
and
xor
jp
cmp
scas
xor
adcb
sahf
xor
mov
cmpsb
sti
out
inc
pop
test
or
push
sbb
push
lret
cs
ss
mov
and
mov
inc
inc
dec
dec
fnclex
xchg
xor
decl
cvtdq2ps
jecxz
dec
jno
and
clc
mov
les
les
iret
fbstp
sbb
ficomps
popf
add
rcrb
dec
cmp
lea
fcomip
ljmp
test
les
adc
xor
and
cmp
push
xchg
xor
stc
push
xor
pop
fdivrp
cs
pop
ljmp
bound
iret
xchg
inc
sti
sbb
ljmp
dec
fs
pushf
into
push
jg
sahf
orl
pop
shl
in
mov
in
loop
adc
dec
movb
rclb
add
jns
addr16
dec
xchg
cmc
xchg
and
ljmp
aad
pop
push
out
pop
ljmp
test
cli
out
pop
imulb
or
inc
fs
in
push
lods
sbb
cmp
fdivs
call
inc
les
mov
test
push
stos
jmp
pushl
mov
mov
cmp
xor
push
or
dec
loopne
call
adc
shlb
outsb
cmpl
data16
mov
insb
pop
dec
cld
into
or
dec
test
jg
test
jp
push
aam
sahf
jg
jmp
ljmp
test
jns
sub
mov
inc
sarl
pop
mov
sar
jg
aad
sbb
mov
inc
clc
xchg
ljmp
dec
mov
mov
outsb
pop
mov
cs
aas
mov
clc
jmp
pop
ss
fcomps
lret
and
aas
jge
pop
mov
add
xor
xchg
sub
out
lock
dec
push
cmp
sub
mov
or
adc
mov
mov
test
fsubrs
and
test
shl
fs
xchg
cmp
ja
pop
icebp
dec
inc
loop
mov
jg
loopne
xor
dec
iret
add
cmp
inc
xor
scas
xchg
pushf
xchg
aaa
stos
fstp
pusha
popa
call
jo
clc
jbe
add
add
dec
cmp
push
rsm
jbe
mov
lcall
decl
sub
add
fisttpl
push
inc
or
or
in
aaa
cmc
push
cld
gs
xchg
mov
pushl
ljmp
pop
cmp
movsl
outsb
int
test
js
jge
mov
inc
lcall
cmp
sub
push
in
mov
idivb
ds
and
mov
sub
adc
scas
cwtl
inc
dec
adc
pop
sbb
mov
gs
jl
add
das
lret
push
add
mov
xor
inc
fsts
jmp
sub
xorl
mov
in
cmc
ljmp
or
gs
inc
ss
mov
xchg
sbb
jl
sub
or
or
pop
adcb
sbbl
ss
mov
gs
inc
mov
pop
mov
xchg
call
dec
add
cmp
scas
push
call
in
mov
jae
cmpsl
loope
sarl
or
dec
adc
int
ljmp
push
cs
test
jno
and
jo
dec
fnstsw
in
loopne
lcall
aad
ss
insl
and
ljmp
pop
aaa
psubsb
repnz
loope
stos
shll
in
xchg
pop
out
int3
fs
jecxz
push
pop
iret
cmpsb
es
mov
into
aaa
and
pop
sub
lret
icebp
ljmp
jmp
pop
repnz
aaa
mov
or
iret
sub
jmp
cmpsl
xchg
jno
decl
pop
jmp
cmp
js
add
push
addr16
insl
mov
add
pusha
push
mov
cmp
das
dec
jb
shlb
xor
mov
mov
mov
ds
decl
cli
sbb
ds
cmp
xchg
nop
decl
orb
insl
add
call
std
call
lods
adc
and
cli
mov
mov
inc
outsl
jae
mov
pushl
mov
cmc
inc
adc
inc
cs
xor
dec
in
pop
orb
or
push
std
xchg
clc
pushl
ja
inc
rolb
or
push
mov
inc
xchg
stos
ret
outsl
xor
add
mov
mov
mov
jmp
or
dec
adc
in
imul
aad
jg
dec
les
scas
adc
mull
push
stc
mov
adc
in
or
mov
sbb
or
dec
cmp
lods
add
push
dec
icebp
adc
pushl
sarl
leave
push
or
in
push
sti
popa
icebp
fistps
jge
stos
jl
lock
lcall
testl
dec
adc
push
push
das
xchg
push
mov
mov
out
movsb
or
test
out
call
cld
pop
repz
lcall
mov
aam
mov
shll
push
dec
out
mov
call
dec
sub
ljmp
aam
popf
mov
xorb
nop
sahf
mov
cmp
cmpsl
fmuls
adc
call
mov
lret
mov
clc
test
out
dec
das
xor
xor
jmp
es
bound
lock
pop
dec
mov
insb
clc
push
sahf
ljmp
sub
es
or
out
mov
std
movl
je
incl
xor
inc
test
ret
dec
adc
xchg
mov
fimuls
push
cmp
call
mov
pop
mov
inc
sarb
repz
iret
insb
pop
jp
hlt
iret
pop
lret
arpl
arpl
decl
push
negl
shlb
mov
repz
push
icebp
push
enter
mov
and
cld
pushl
popf
mov
insl
mov
add
jg
cmp
sbb
push
xchg
xchg
xor
xchg
ficompl
mov
out
xchg
mov
into
sub
add
mov
orb
test
xchg
enter
xlat
je
mov
jmp
pop
jecxz
mov
fs
adc
dec
inc
sbb
or
ljmp
dec
jo
lods
les
push
aad
dec
pop
push
decl
fldcw
xchg
mov
dec
mov
add
movsb
xor
test
push
inc
into
outsb
daa
mov
push
sbb
scas
rol
test
or
cltd
ud0
ljmp
adc
jecxz
loopne
cld
push
flds
sub
push
fimull
fadd
outsb
shlb
jmp
ret
je
adc
xlat
fs
dec
adc
mov
or
out
xor
call
lret
orb
push
xchg
lea
cmp
jne
cmp
add
sbb
ljmp
inc
jge
push
sbb
cmc
pop
pop
aas
jp
inc
cmp
fsubl
sub
or
stos
std
push
dec
gs
je
add
adc
mov
mov
call
rclb
xor
pushf
arpl
add
sub
ljmp
fs
mov
lret
aas
popf
js
cli
sar
clc
ljmp
std
rorl
ljmp
or
adc
out
lods
std
sub
xchg
jmp
push
jecxz
jecxz
add
and
aaa
lds
add
jmp
mov
gs
jae
mov
adc
mov
pop
jnp
jne
test
test
mov
adc
fildll
and
push
lea
aas
shlb
cld
insl
lcall
sbb
mov
addb
lret
ret
or
mull
jo
ljmp
pop
stc
int3
shll
push
fidivl
add
inc
sub
roll
inc
push
mov
adc
push
xorb
mov
sub
ljmp
xchg
pop
cmc
push
adc
xchg
dec
jo
xchg
nop
pop
movsb
push
adc
xchg
push
fisubs
arpl
jmp
inc
xchg
xchg
div
push
push
imul
sub
mov
cmpb
mov
insb
push
sbb
mov
cmp
mov
cmp
xor
push
lock
decl
leave
loope
sub
sarl
test
mov
icebp
and
or
decl
fwait
xor
adc
stc
gs
in
dec
adc
and
push
mov
repnz
dec
and
lret
shrl
push
xchg
cmpsb
mov
mov
mov
aam
testb
mov
or
iret
add
je,pn
stos
ret
mov
cmp
mov
adc
ss
dec
jl
jne
cltd
lcall
mov
dec
adc
push
mov
pop
dec
popa
jle
lcall
mov
aas
les
imull
or
adc
adc
ljmp
outsb
loope
mov
push
dec
mov
jmp
test
mov
js
pop
pop
fs
insb
push
push
cmp
pop
cld
mov
cmpsb
stos
add
test
stos
test
add
decl
mov
stos
shlb
mov
divl
sbb
push
push
and
fstpt
pop
cmp
push
cmp
xor
add
mov
push
push
nop
stos
mov
incl
jne
cmp
or
in
mov
rorb
ds
pop
in
cwtl
mov
dec
add
divl
mov
mov
sub
lcall
call
push
fprem1
int
popf
bound
mov
lret
or
push
jle
scas
push
dec
mov
cmp
xchg
xchg
jg
xchg
lock
adc
push
lret
push
loop
mov
call
pop
mov
hlt
lods
xchg
or
jns
fnstcw
mov
cli
sbb
dec
in
adc
xchg
pop
jns
or
cld
ljmp
aam
mov
sbbb
xchg
movsl
xor
xchg
in
cwtl
into
jg
add
shll
icebp
out
test
sbb
nop
lock
mov
sti
and
inc
movntps
jecxz
add
aam
aas
lret
hlt
rclb
cs
lock
out
sbb
push
push
sbb
inc
js
add
psrad
lcall
jnp
xchg
popf
aaa
lock
sbb
xlat
shrb
inc
xchg
fs
aam
mov
in
out
pop
fisubrl
dec
shll
inc
xchg
add
push
decl
dec
xor
add
je
cwtl
faddl
out
rcrl
das
cli
incl
adc
lcall
loop
xchg
fstl
or
and
xchg
hlt
add
fstpt
add
xchg
je
mov
rclb
dec
loope
insb
jecxz
dec
es
add
pushl
sub
xor
pop
in
sub
lcall
enter
shll
xchg
cmp
jmp
aaa
mov
test
push
or
mov
cmp
push
adc
xor
pop
stos
mov
pushl
jne
inc
int
fcmovnb
push
push
adc
mov
jns
inc
das
movsl
testl
push
sub
imul
pop
lock
sub
push
imulb
jmp
decl
or
push
pop
mov
addb
cmpsb
mov
pop
cltd
sub
ret
sub
popa
pop
arpl
call
lea
call
cmpsb
cmp
dec
lcall
shl
add
sbb
stos
xchg
mov
pop
mov
cmp
in
or
fwait
jmp
jns
and
pop
dec
dec
call
mov
and
pushf
mov
fcompl
inc
popl
call
data16
mov
adc
inc
cmp
xchg
cltd
mov
jne
repz
pushl
inc
int
push
inc
and
ljmp
xlat
mov
fdivrl
call
outsb
clc
mov
test
mov
loope
int
rolb
incl
test
aas
stos
jecxz
js
inc
dec
aaa
pushf
std
jo
mov
jb
pushf
sbb
loopne
test
sbb
insl
out
push
jae
mov
jmp
cwtl
jmp
jo
mov
pop
das
inc
out
stos
lcall
loope
clc
incl
adc
adc
jecxz
lock
int3
jl
enter
push
sahf
sti
insl
fstpl
incl
fcoml
xchg
imul
inc
dec
add
xchg
pushf
push
cmp
adc
call
or
daa
jbe
xchg
nop
cmp
sbb
dec
pop
out
negl
pop
or
sub
dec
cmpsl
add
jmp
push
mov
mov
decl
inc
rol
mov
shrl
mov
sub
adc
int
xchg
js
pop
sbb
call
rcll
xchg
imulb
push
das
adc
add
js
pushl
ds
lock
pop
hlt
imul
cli
push
pop
fistl
data16
jns
pop
out
incl
repnz
std
clc
lods
cmp
cmp
xchg
in
xchg
jl
ret
cmp
xlat
and
movsb
push
jmp
mov
sub
test
inc
popa
xor
int
xlat
pop
push
or
xlat
push
jae
fwait
jmp
fmulp
push
jmp
adc
pop
mov
push
or
clc
dec
and
incl
jbe
sbb
aam
cmpb
mov
xor
nop
push
lods
in
xor
fstp
shll
adc
pop
jno
test
xor
sar
push
adc
mov
xchg
push
mov
mov
adc
shll
cmpsb
je
es
scas
clc
push
cmp
ret
push
pushl
lahf
mov
orb
cmp
pop
mov
lret
cmpsb
out
xchg
ja
dec
xlat
lea
inc
jg
movsl
ret
pop
add
pusha
pusha
or
sbb
fcoms
push
clc
and
push
pusha
push
clc
cli
sub
jp
or
loope
inc
sahf
mov
sti
mov
or
lods
jmp
jmp
loop
cli
sbb
ljmp
mov
sbb
cs
or
in
cli
sbb
and
insb
or
fldt
cli
sub
pop
pusha
ljmp
cltd
movsl
adc
incl
push
sbb
jg
lods
or
das
testb
push
jp
mov
call
mov
jae
sar
in
xor
mov
push
in
call
ja
inc
xchg
pop
mov
sbb
xchg
sahf
repz
lods
sub
pop
int
clc
mov
and
bnd
mov
cmpsl
cmc
xchg
lahf
mov
fbld
cmp
sbb
mov
cmp
xor
pushl
jecxz
add
enter
test
push
fs
xchg
dec
scas
dec
daa
lods
xlat
inc
jnp,pt
cmp
sti
xchg
in
add
mov
test
ja
pop
or
pop
or
decl
jnp,pn
lods
cmp
mov
fs
das
mov
pop
inc
pop
inc
add
push
sbb
push
or
aaa
cltd
cmp
and
pop
ret
add
jle
lcall
pop
push
mov
nop
cmp
ljmp
mov
lcall
push
shlb
jns
faddp
xor
out
pushl
jns
push
push
sub
and
add
mov
pushl
mov
aas
mov
xchg
lods
sub
adc
sbb
fcomps
pop
repz
lcall
test
inc
and
je
inc
adc
mov
ja
mov
mov
clc
jg
pop
hlt
mov
mov
pop
outsb
inc
int3
aam
in
pop
mov
mov
jno
push
sbb
outsl
xchg
xlat
into
shll
xchg
inc
sbb
pusha
jmp
cs
cld
sti
loope
nop
js
sbb
ljmp
push
psrlq
inc
push
loopne
add
and
mov
lock
aam
fsubrl
sub
xor
push
sub
jo
mov
mov
pop
xchg
outsb
xor
jno
shlb
imul
mov
lcall
xor
add
inc
pop
cwtl
fwait
loop
lret
xlat
ret
cmpsl
push
inc
sub
pushl
negb
pop
arpl
decl
or
cs
xchg
xor
ljmp
jbe
test
lock
hlt
lret
xor
and
push
daa
cli
aas
pop
mov
pop
fsubl
push
cmpsl
pop
decl
mov
dec
loop
adc
sbb
dec
xchg
leave
movsb
push
push
lds
xor
sbb
mov
jg
ret
stc
cmpsl
pusha
adc
dec
mov
incl
sub
fnstcw
lods
mov
jno
shll
insl
mov
and
or
jmp
lahf
cmc
and
divl
idiv
filds
mov
fcmovnb
popa
ja
push
not
sbb
aad
add
fs
jg
lcall
fwait
mov
lret
cmp
push
arpl
inc
add
mov
jmp
clc
mov
sahf
in
cmp
stos
pusha
jl
adc
hlt
lock
stos
sub
pop
lcall
call
jmp
out
ja
stos
inc
in
stos
mov
call
mov
andl
ljmp
adc
lea
pusha
leave
sahf
mov
or
mulb
push
push
mov
ljmp
push
sbbb
dec
adc
mov
sub
ljmp
mov
cmpsl
orl
cmc
into
pop
imul
decl
dec
jge
and
xor
inc
pusha
repnz
adc
add
mov
jo
lret
test
in
dec
sub
ja
mov
dec
or
vpmaxsw
mov
or
dec
jb
or
xlat
pop
xlat
je
arpl
inc
push
ds
stos
pop
jg
pop
cmp
cmc
ljmp
aad
cltd
jnp
jo
mov
jnp
cmp
fbstp
pushl
imul
sti
in
or
and
aas
cmp
ds
xor
jne
xchg
rorb
cwtl
dec
subl
dec
das
shrb
sub
cmpsl
dec
xor
cs
fists
loop
inc
mov
mov
cli
pop
mov
mov
js
lret
dec
mov
cld
incl
jecxz
aas
cmp
jl
push
orl
mov
pushl
sub
aas
fs
jg
fs
icebp
push
leave
clc
mov
and
or
inc
in
hlt
rcl
cmp
in
jg
test
mov
inc
hlt
popa
loope
jae
cwtl
arpl
icebp
call
add
jno
mov
cmp
mov
push
faddl
aad
out
jbe
das
cli
lds
mov
sahf
push
fildll
pop
lock
stos
add
repnz
jnp
add
xchg
rcr
aad
repz
leave
pop
loopne
decl
sub
test
scas
fildl
mov
add
lahf
out
xor
pushl
and
bound
fnstcw
add
icebp
or
pop
das
push
cli
sbb
incl
mov
push
sub
testl
test
dec
sbb
pop
or
mov
inc
ret
jg
push
scas
add
leave
aad
mov
cmp
scas
mov
jbe
lock
sbb
loop
mov
repnz
push
fidivrs
lcall
into
xchg
movsl
loopne
xlat
inc
mov
ja
jg
nop
int
adcb
add
xor
jae
outsl
mov
adc
es
shr
lret
sahf
jne
movsb
fcomip
incl
add
and
and
xchg
and
dec
adc
sbbb
dec
lcall
insb
xchg
dec
js
pop
push
xchg
leave
sub
test
in
jle
jp
sub
ljmp
test
mov
pop
mov
or
mov
call
imulb
xchg
clc
mov
sub
fisttps
pop
in
stc
mov
push
addr16
pushl
js
mov
lret
scas
adc
into
inc
and
in
test
jmp
and
ja
jae
push
xor
push
xchg
dec
out
dec
cmp
int3
and
ljmp
xor
mov
repz
jmp
out
jne
push
mov
ficompl
js
es
lret
mov
pop
xor
imul
jecxz
rclb
jno
and
arpl
call
loopne
pop
shr
scas
cmp
ror
jb
cmpsl
loop
int
ret
gs
pushl
test
xor
sbb
orl
cmpsl
popl
mov
mov
jo
jbe
push
jns
jge
dec
lar
inc
pop
imul
and
mov
pavgw
fwait
dec
or
iret
in
outsb
mov
lret
inc
jb
mov
mov
popf
add
xchg
jle
sub
add
clc
test
add
lcall
mov
xor
push
jno
movsb
jl
or
fldpi
xor
lds
mov
daa
xchg
imul
punpckldq
fdiv
movsb
or
gs
sub
mov
pop
jmp
fcomps
push
cmp
out
add
mov
dec
iret
xor
mov
and
popa
mov
push
push
jp
shlb
insb
mov
sti
xor
es
test
jmp
xorl
mov
addr16
xchg
cmp
xor
push
jbe
incl
xchg
xchg
rcll
sbb
into
or
loop
pushf
dec
xchg
mov
les
xor
push
rolb
sub
pop
sub
clc
pushl
cltd
push
data16
insb
jle
xor
jmp
jb
cmp
mov
mov
data16
ss
add
nop
add
lods
xchg
test
xchg
outsb
enter
into
loop
mov
gs
arpl
pushl
cmp
mov
sub
ret
js
sub
cmpsl
mov
fwait
pushf
mov
or
adc
les
or
dec
ss
sbb
jne
pop
rolb
pop
cmc
mov
mov
in
sbb
mov
daa
adc
add
fwait
incb
mov
lcall
sarb
fnsave
cmc
fcomip
xchg
clc
les
popf
test
cld
repnz
dec
adc
add
adc
icebp
jmp
push
sbb
and
jecxz
into
pop
clc
addr16
insl
jg
lret
cmp
mov
ret
inc
lcall
dec
dec
inc
pop
xchg
lods
pop
cmpsb
inc
push
push
cmp
cwtl
push
pop
and
call
mov
fimull
and
mov
cld
push
cmp
adc
cs
xchg
xor
test
jl
aas
inc
adc
imul
fists
push
out
push
stos
xchg
xor
adc
mov
or
sbb
inc
movsl
outsl
mov
aam
adc
jge
jg
cmpsb
or
sub
icebp
mov
decl
call
mov
leave
and
push
push
mov
popa
sub
mov
ljmp
jmp
bound
cmp
inc
cmp
rcrl
and
sbb
jg
jmp
lods
je
push
jnp
or
int
out
jne
popf
int
lcall
stc
dec
imul
mov
lods
or
not
in
and
loopne
outsb
lock
stos
enter
ficoml
jg
popf
fistpll
mov
inc
ret
sbb
sbb
mov
imul
dec
sbb
ret
pop
scas
adc
cmp
mov
mov
xor
filds
jns
pusha
test
incl
icebp
add
push
sbb
jns
ljmp
pop
or
imul
jmp
xchg
cli
lahf
sbb
lret
shlb
js
inc
les
cmpsl
cli
or
inc
lods
mov
or
pushl
in
xchg
ret
sub
push
call
ja
push
rcrl
fdivp
popa
aad
sahf
inc
mov
sahf
imul
aas
adc
push
sub
rcr
mov
or
out
icebp
cmpsb
xchg
popa
ja
frstor
mov
loope
ljmp
sar
fs
fstp
dec
adc
in
adc
xchg
sub
lds
pop
jnp
loop
inc
insl
pop
mov
nop
xchg
or
jmp
sbb
pop
mov
sub
mov
dec
iret
cmp
dec
xchg
outsb
iret
mov
and
add
loopne
ljmp
sbb
fcompl
and
dec
int3
jmp
add
js
lods
sti
cmp
mov
push
add
shll
das
jg
call
lahf
ret
dec
cmp
mov
adc
jae
sbb
out
fisubs
lcall
lods
mov
pop
outsb
daa
lret
aaa
hlt
out
or
cmp
cli
out
es
dec
mov
dec
aas
inc
mov
loopne
js
push
mov
inc
call
aas
rorb
pop
scas
sete
aaa
in
xchg
loopne
mov
sbb
lcall
dec
jbe
fistl
sarl
push
adc
hlt
sub
dec
xor
fs
push
xor
cmp
outsb
inc
sub
inc
xchg
shll
fwait
xlat
in
call
cld
cmp
jo
gs
hlt
push
cwtl
lea
xchg
cmp
lcall
jmp
or
daa
cmp
js
sbb
xor
mov
pop
arpl
fcomps
into
cmp
pusha
nop
pop
xor
rorb
in
ljmp
jge
xchg
add
ret
jp
lret
cmp
push
enter
cmc
mov
xchg
mov
mov
cmp
lcall
lcall
in
cmpl
cmp
sub
inc
out
ds
outsb
push
xlat
jmp
dec
test
jle
mov
cmpsl
jl
sub
test
adc
call
pop
das
jp
or
js
shll
cs
cmp
loop
mov
call
in
and
fsubl
das
jno
movsb
dec
mov
add
inc
and
sbb
jmp
xor
push
add
les
int
adc
lock
dec
inc
push
mov
fwait
fcmovbe
cmp
cmp
out
jp
ljmp
xor
shrl
lahf
push
push
cmp
jl
mov
popa
mov
pusha
jno
jnp
loop
int
mov
lcall
mov
out
leave
mov
mov
or
imul
mov
push
shlb
aad
imul
loop
jg
jnp
scas
ss
pushl
xchg
inc
mov
mov
add
shrb
mov
push
popf
dec
arpl
addb
lret
clc
incl
addr16
cmp
test
pop
fs
stc
out
pop
xor
jg
mov
incl
xchg
and
repz
addr16
int3
or
lock
add
subb
mov
arpl
jmp
outsl
adc
sbb
xchg
das
outsl
mov
xchg
inc
inc
sub
test
push
les
pop
inc
sub
or
lret
loop
imul
aaa
xchg
movsb
inc
mov
mov
jae
je
dec
cmp
outsl
clc
jns
add
sahf
dec
pop
and
popf
adc
mov
mov
test
fisubrs
mov
test
test
cmp
cmp
dec
adc
sub
loope
pop
and
cli
jge
and
rorl
sub
inc
mov
jecxz
insl
pop
pop
mov
and
ljmp
lret
test
mov
in
pop
mov
leave
push
je
xchg
mov
cld
inc
add
mov
pushf
adc
out
jne
lret
fwait
clc
inc
sub
dec
iret
roll
push
dec
arpl
mov
lods
sbb
sub
ljmp
mov
dec
adc
popl
scas
sbb
inc
cmp
sub
mov
cwtl
jp
imul
push
outsb
or
or
clc
outsb
shrb
jg
leave
xchg
loop
jb
cmp
shrb
sub
xchg
leave
fs
mov
mov
incl
dec
add
lret
jmp
out
mov
insl
xchg
lcall
jae
testb
das
pop
mov
cmp
add
in
push
je
cmp
filds
in
jp
sbb
fsubrl
mov
pop
pop
das
fstpl
mov
jmp
pusha
psrad
les
movsl
ljmp
cmc
in
sbbl
xchg
push
arpl
push
dec
or
inc
adc
adc
lret
mov
clc
ljmp
adc
cltd
dec
sub
push
xor
cmp
inc
xchg
mov
mov
jle
add
movsb
pushf
xor
stos
jmp
jg
cmp
and
enter
add
imul
cmp
loopne
add
xor
ljmp
stc
or
push
jl
lods
cmpl
sub
rol
inc
dec
push
or
ret
mov
xchg
nop
sub
repnz
pop
or
mov
jmp
adc
push
xchg
pop
in
sti
cmpsb
mov
aad
lods
mov
cmp
jmp
das
lahf
out
mov
imul
cmp
out
mov
mov
clc
sub
ret
fwait
push
daa
repnz
mov
jmp
jno
shl
int
xchg
push
sbb
scas
push
push
sbb
dec
mov
pop
fisubs
jne
imul
scas
xor
inc
mov
xor
adc
leave
out
sbb
js
jno
test
lods
xchg
xor
sbb
add
notb
and
push
incl
mov
shll
and
and
lds
xchg
or
aam
or
jne
cmp
or
mov
adc
shr
mov
pop
jo
insb
fistl
and
lahf
outsl
incb
call
jle
inc
call
push
mov
cld
call
mov
or
mov
mov
mov
push
lds
lret
mov
call
ja
cmp
xchg
lcall
mov
bound
pop
adc
adcb
or
cmp
lods
pop
sbb
into
adc
das
sbb
and
sub
cld
mov
xorl
shrb
enter
jmp
adc
cmp
pop
xchg
cmc
roll
lcall
in
inc
idivl
xor
adc
mov
mov
cmp
mov
mov
xor
lcall
mov
call
adc
cwtl
shlb
jmp
pop
outsb
pop
mov
ljmp
mov
addr16
inc
xor
xor
mov
sbb
int3
int
dec
outsl
mov
jbe
mov
mov
rcr
push
pop
lcall
cli
cmp
mov
push
andb
xor
idivb
scas
fmull
mov
jmp
push
mov
outsb
scas
add
sahf
xchg
push
xchg
push
lock
daa
outsb
cs
mull
or
call
xor
rorl
je
std
fisttps
add
push
or
fisttps
into
inc
les
pushf
xor
mov
adc
mov
idivl
dec
mov
mov
pop
cwtl
aam
popa
in
pop
pushf
inc
push
in
cli
cmp
incl
sarw
cmp
ss
push
mov
mov
decl
icebp
xor
pusha
dec
cmpsb
xchg
sub
shll
and
xor
mov
mov
fisttpl
dec
clc
call
pusha
and
cmp
mov
pop
pop
inc
pop
mov
cmc
imul
fldenv
lret
scas
call
or
or
cltd
mov
les
int3
fucompp
outsl
lcall
add
negl
repnz
mov
std
call
push
push
jnp
jge
dec
push
or
lea
ljmp
and
lahf
in
mov
inc
sbb
clc
sti
cmpb
decl
and
es
ror
popa
push
stos
ret
imulb
js
mov
aaa
cs
mov
sub
call
xchg
dec
shrb
push
enter
cmp
push
outsb
jb
cmp
xor
pushl
jo
add
and
insl
cmp
lods
fbld
inc
mov
jecxz
ljmp
icebp
pushf
adc
in
aaa
shll
and
jbe
jo
dec
dec
ret
rcll
mov
jg
mov
mov
or
push
das
cmp
add
ljmp
ljmp
icebp
push
imul
ja
stc
rorl
cmp
mov
js
fstpl
mov
scas
jne
mov
push
loopne
cli
pop
adc
andl
jae
insl
loop
insl
mov
inc
cmpsl
sbb
jo
xor
les
cwtl
mov
in
int
dec
lds
icebp
imulb
lcall
sbb
adc
in
scas
mov
lods
xchg
mov
decl
test
sbb
sbb
cmp
shr
pop
add
mov
hlt
dec
clc
sbb
xchg
orl
jg
pushl
pop
insl
xor
mov
xchg
pop
test
or
xor
nop
aad
js
call
cmp
shll
mov
mov
xor
push
in
leave
pushl
std
push
loope
rcl
jns
inc
jnp
jb
push
sub
inc
xor
mov
lds
adc
and
popa
sub
out
mov
inc
or
push
mov
loopne
incl
mov
add
shll
xor
jnp
ljmp
out
stos
fwait
loope
and
xchg
mov
movl
sbb
ficompl
and
rcll
cltd
repnz
out
mov
je
xor
push
cli
popa
cmp
lods
sahf
inc
sar
jg
fimuls
fs
adc
sub
and
xor
mov
mov
mov
outsb
sbb
repz
ljmp
stos
pop
xor
outsb
dec
iret
mov
fstl
lock
fsubrl
sahf
mov
lret
jp
fcomip
ficoms
out
push
jp
mov
dec
aaa
pop
dec
jns
lods
loopne
add
jmp
inc
xorb
adc
cmp
dec
sbbb
out
xor
ja
sbb
mov
and
inc
dec
pop
rclb
pop
cs
adc
push
cmp
fcmovne
fmulp
cmp
jo
cli
mov
pop
subl
mov
pop
lock
subb
mov
xor
pop
and
fucom
add
ljmp
jnp
or
scas
pop
imul
xor
mov
sbb
test
add
popf
inc
add
cmp
aaa
cmp
arpl
fcomip
adc
sti
cmpsb
mov
test
dec
lahf
repnz
cmp
cli
adc
cld
and
shll
cmp
into
rcl
lret
xor
xor
dec
dec
mov
decl
mov
sub
pop
stc
outsb
into
dec
fcoml
out
dec
insl
mov
incl
mov
lret
sbb
mov
loope
dec
fnstsw
icebp
test
rorl
add
ljmp
es
adc
cwtl
fsub
inc
or
mov
call
sub
lods
adc
mov
mov
sbb
ljmp
jns
test
addr16
outsb
push
cltd
add
pusha
mov
in
sti
test
in
mov
iret
mov
cwtl
sbb
sbb
sub
xlat
cmp
adc
enter
mulb
sub
adc
lcall
jno
sub
hlt
out
loope
test
push
test
pusha
adc
das
jl
sub
incl
mov
arpl
pop
pop
decl
pop
cmpsb
fstpt
jno
cmp
inc
xchg
cltd
fs
imul
call
loopne
and
mov
loop
add
mov
cmc
mov
cmpsb
mov
int
jno
or
add
lcall
pushl
repnz
mov
nop
sbb
mov
in
or
add
jl
repnz
idivl
add
sbb
pop
mov
insl
mov
mov
pushl
inc
ljmp
vpmacswd
pusha
pop
jmp
decl
jb
scas
insl
stc
inc
push
add
pusha
jae
fiadds
cmp
idivb
aas
pusha
push
pop
inc
mov
adc
shl
mov
sbb
jns
inc
push
pop
push
xor
add
sbb
mov
cld
ljmp
pop
das
fs
cs
and
xchg
data16
add
sbb
mov
jb
push
sub
pushl
pop
fisubs
scas
dec
fxch
aam
fwait
loop
mov
mov
or
xor
jns
jmp
lock
fistl
adcb
mov
decl
dec
xchg
clc
mov
fs
jns
mov
out
icebp
clc
and
inc
adc
fwait
xchg
cwtl
cli
clc
imul
jl
push
les
pop
push
mov
adc
shrl
imul
jbe
or
mov
fbld
jo
ljmp
add
ret
call
ds
shlb
mov
lret
and
pop
pop
mov
or
mov
pushl
ja
inc
in
xchg
mov
and
pop
mov
enter
sub
cld
sub
jmp
repnz
cmp
jnp
clc
lods
adc
jp
cmp
lcall
leave
pushf
or
out
jmp
loop
pop
dec
aaa
popa
mov
test
clc
jg
call
clc
xor
dec
mov
and
ucomiss
jle
out
and
dec
mov
cmc
notb
shrb
jl
mov
jns
adc
add
test
ret
pop
jp
mov
jge
std
mov
cmp
ficomps
mov
push
insb
mov
test
shll
mov
jno
pop
add
stc
jb
add
inc
xchg
pop
or
ljmp
fstps
js
cmpsl
aaa
add
shlb
int
sbb
lock
inc
stos
in
xchg
out
shr
add
pushl
and
je
sub
xchg
into
inc
jle
mov
fistps
nop
sub
add
mov
jecxz
dec
stos
xor
sub
repnz
fdivp
in
sub
cmpsb
lret
repz
ljmp
mov
aam
xchg
xchg
test
outsl
cmp
scas
and
inc
mov
lock
fistpl
mov
ret
sub
add
imul
call
cwtl
and
dec
out
sub
xchg
add
cmp
and
mov
xchg
jmp
fcomip
jg
imul
push
cmp
xor
dec
cmp
push
inc
push
xor
push
jge
ja
enter
jmp
mov
or
inc
xchg
mov
adc
jl
in
xchg
div
jmp
fsub
xor
push
or
or
sti
xchg
loop
inc
xchg
js
hlt
mov
xchg
xor
mov
dec
mov
psubw
pop
scas
sub
cltd
stos
cli
push
lods
xor
mov
call
pop
out
sahf
mov
xor
and
lcall
push
jae
xor
cmp
mov
jecxz
call
mov
loop
jle
repz
pop
cmp
sar
mov
pop
pop
jbe
inc
andl
popa
loopne
cs
jbe
jg
inc
or
dec
lea
xchg
inc
mov
lcall
ljmp
movsb
xor
adc
push
jbe
mov
push
std
sbb
push
and
sahf
aad
bound
xchg
popa
stos
pop
mov
pop
jle
les
jae
lahf
xchg
mov
pushl
aaa
cwtl
pop
jnp
jmp
add
outsl
fcomps
imul
cmp
pop
jmp
sub
call
lret
mov
scas
pop
push
jns
pushl
xchg
lea
out
loopne
xor
xor
icebp
pop
mov
les
cmp
adc
xor
mov
sub
ret
or
mov
outsb
mov
mov
or
ljmp
xchg
popl
xchg
and
and
std
ljmp
pop
xlat
shrl
aaa
imulb
push
pop
clc
hlt
pop
sbb
mov
jl
and
jecxz
movsb
aas
ss
push
fs
imul
xchg
xchg
mov
dec
lds
sub
sub
pop
xorb
cmp
jns
pop
mov
mov
mov
dec
sbb
mov
lret
mov
loope
filds
ds
or
jae
imul
andl
cmp
pop
add
mov
add
xchg
inc
sbb
cltd
xchg
cmp
sarl
aam
lret
decl
or
shll
add
stos
xlat
mov
lcall
sub
mov
sbb
or
cmc
adc
sub
mov
jmp
cmp
mov
cmp
popf
arpl
jo
outsb
sbbl
mov
decl
lahf
and
or
inc
incl
insl
fistpl
jae
dec
push
pop
mov
xor
mov
mov
cli
add
or
mov
frstor
in
dec
jo
pop
mov
dec
fdivr
in
fwait
out
mov
aad
push
jl
shlb
decl
das
sbb
pop
or
out
jle
mov
mov
pop
jp
jnp
mov
decl
jecxz
stos
or
xchg
outsb
sub
rcrl
fbld
call
mov
aad
gs
outsl
sub
ljmp
mov
cmc
cli
jmp
adc
push
scas
sbb
sbb
enter
cmp
and
rorb
pushf
mov
mov
stos
xor
bound
inc
test
loope
pop
xchg
push
push
sbb
pop
out
loope
rcl
insb
fs
jo
inc
mov
mov
fildll
in
jno
out
out
pop
hlt
incl
lods
pop
dec
dec
shl
and
test
lret
lret
pop
inc
cmp
ljmp
dec
jae
add
sub
les
xchg
pop
add
nop
movsb
mov
mov
xchg
cld
pushl
xor
ret
int
jge
aaa
adc
or
inc
cmp
dec
ficompl
add
lods
or
jmp
lcall
call
pop
jg
lcall
sub
jecxz
and
incb
pop
call
push
fdivs
adc
rcl
and
xor
add
hlt
push
or
push
or
sarb
sar
cmc
and
ds
dec
adc
sbb
testl
add
pop
scas
mov
ljmp
test
popa
mov
jns
outsb
jge
repnz
nop
lcall
lcall
je
aam
enter
dec
or
shl
jbe
inc
sub
movsb
fisubs
clc
add
xchg
sub
jl
push
xchg
sbb
fcomip
mov
jg
mov
pushl
or
scas
aam
jp
mov
cli
std
call
aas
call
inc
cltd
aas
mov
arpl
incl
jo
add
jb
scas
daa
lcall
ret
cmp
sbb
sbb
test
fcomip
cs
or
cmp
aad
clc
popa
cmpsb
pop
inc
dec
push
xchg
inc
clc
add
outsl
clc
fstps
ss
shll
repnz
sub
outsl
and
push
jb
call
je
rorb
jl
cwtl
jmp
outsl
in
aam
mov
pop
lret
and
ljmp
xchg
inc
add
lret
mov
mov
mov
pushf
mov
orb
das
clc
cs
cmp
ret
notb
aad
decl
mov
insb
imul
add
dec
gs
or
inc
mov
sarl
dec
sub
or
incl
inc
lcall
cltd
pop
push
jmp
pop
mov
das
mov
mov
push
popf
repnz
xor
jnp
xchg
cld
cmpsb
jns
ljmp
ljmp
scas
mov
ds
mov
jae
je
xlat
aad
rcr
pop
mov
dec
std
jg
test
leave
out
inc
push
lock
xchg
sbb
pushl
push
adc
fdiv
clc
mov
cltd
mov
xchg
btc
push
loop
aad
clc
sbb
fdivrs
dec
mov
mov
das
fsts
sbb
jmp
out
sbb
in
fmul
in
std
add
cmp
inc
call
push
clc
inc
pop
lahf
or
sbb
add
mov
gs
dec
mov
cmpsb
jae
xchg
fs
lcall
shrl
lret
or
push
test
inc
mov
outsl
and
xchg
out
in
push
fldl
jmp
xchg
lock
cwtl
inc
cmp
rolb
fbld
and
mov
bound
cmp
fildll
call
pushl
outsl
pushf
add
and
pop
and
shrb
xor
jmp
sarl
lods
in
adc
fs
mov
mov
stc
mov
rcll
decl
dec
xorl
cli
out
mov
sahf
fcoml
pop
cltd
pop
adc
cmp
das
add
ret
xchg
mov
jmp
cltd
sbb
clc
xor
enter
add
imul
mov
inc
push
and
fisttpll
mov
cs
cmp
dec
negl
dec
sbb
dec
in
sbb
add
insl
arpl
aaa
lock
divl
and
fiaddl
fisttpll
in
mov
out
xchg
mov
popw
loopne
data16
inc
mov
fldl
insl
jns
ljmp
and
test
mov
pop
jae
call
fdivs
mov
popa
or
push
cld
inc
outsl
jbe
xor
mov
call
test
imul
inc
sub
lcall
push
icebp
mov
movl
mov
jg
mov
pop
pop
add
and
clc
jne
jb
ljmp
pusha
adc
jbe
mov
lcall
jle
inc
pop
in
jge
push
sahf
mov
xorb
setae
pop
mov
iret
incl
rcrl
pushf
loop
xor
loop
push
xchg
inc
sahf
clc
lret
jne
push
pushl
sahf
addb
mov
sbb
pop
aad
dec
and
mov
sub
pop
mov
in
inc
inc
sbb
adc
push
pop
nop
jge
addr16
fdivr
dec
nop
and
pushf
pop
lods
std
adc
cmc
int
dec
aaa
je
test
pushl
sbbl
sbb
push
adc
daa
clc
mov
imul
sbb
push
sti
movsb
cld
in
idiv
adc
cmp
mov
or
mov
ret
popa
fadd
mulb
cs
fwait
stos
inc
jg
inc
cld
mov
pop
insl
into
cmp
jno
jb
sar
call
jg
adc
push
jp
jmp
and
jnp
jbe
mov
fnstenv
lods
jno
scas
inc
jge
lods
out
pop
xchg
xchg
adc
sete
pusha
or
ljmp
pop
sub
lcall
shrb
dec
adc
stos
cmp
pop
mov
dec
push
xor
inc
xchg
lods
mov
fildll
fbstp
mov
enter
xor
xor
push
pop
aam
or
xor
xchg
mov
aad
lds
fsubrs
or
sub
or
cld
addl
mov
adc
popf
cmp
aaa
cld
incl
xchg
pushf
arpl
outsl
mov
ljmp
mov
mov
push
lods
mov
or
mov
aam
icebp
incl
ror
sbb
loopne
push
shrl
push
outsb
call
cmp
loopne
insl
repz
xor
fwait
adc
xchg
sahf
hlt
dec
sbb
sbb
decl
and
gs
imul
fistpll
scas
dec
out
cwtl
push
jo
xchg
shl
sbb
adc
sub
xor
xchg
add
stos
dec
loopne
scas
cmp
orl
push
pop
dec
mov
adc
push
lahf
xor
lods
lds
fidivl
sub
fs
push
or
jmp
mov
clc
sub
adc
cmpsl
mov
push
lock
cmp
dec
mov
dec
mov
mov
dec
in
les
lods
push
popa
insb
fstl
pop
sbb
decl
loope
lret
das
inc
arpl
sahf
sti
adc
int3
mov
psubsw
pusha
add
call
insl
test
pop
xor
pushl
rol
lcall
xor
lds
pop
call
dec
add
adcl
mov
pop
adc
fsubl
adc
and
and
jmp
test
dec
sub
mov
push
lcall
add
mov
adc
and
push
lcall
push
pop
aaa
movsl
dec
or
fldcw
roll
jg
subb
lods
and
scas
pop
lods
scas
iret
rcr
shl
push
sbb
jmp
add
dec
or
sti
decl
push
pushf
add
imul
test
daa
imul
loope
pop
cmp
and
ss
fmulp
inc
std
iret
sar
lcall
je
inc
add
pop
sub
leave
mov
dec
xchg
jl
push
sub
mov
inc
push
adc
stos
cwtl
cmp
mov
sbb
pop
insl
test
mov
clc
and
aaa
test
dec
lret
pop
gs
dec
push
pop
addb
arpl
inc
rol
int
inc
mov
ljmp
test
les
inc
in
hlt
sbb
cwtl
pushf
sbb
insl
fistps
incl
xor
lock
sub
add
add
pushf
lret
sub
inc
xchg
loope
adc
incl
push
test
cmp
scas
lret
in
shr
jne
pushl
lcall
push
icebp
push
adc
dec
iret
js
push
adc
int
sub
jecxz
xor
dec
mov
sub
pop
cld
dec
add
lcall
cmp
sbb
pusha
mov
add
jae
push
inc
push
decl
stos
and
leave
adc
sti
les
fildl
loop
idiv
test
ret
cs
inc
outsb
iret
push
push
sub
pushl
cs
clc
add
cmp
movsb
xchg
mov
mov
sub
clc
incl
shll
jp
bound
pop
push
pusha
dec
inc
or
cmc
cltd
fcmovnb
pop
inc
jg
sub
jnp
pcmpgtb
insb
iret
scas
icebp
es
mov
outsl
mov
pop
inc
lock
loopne
sar
and
push
daa
or
jg
pushl
lcall
add
iret
cmp
dec
outsl
or
test
call
inc
fadds
aas
or
push
add
push
xor
js
test
cmc
loope
add
lret
fsubl
scas
jo,pt
cltd
call
jp
rolb
xor
pop
arpl
mov
jo
incb
xchg
lock
fldl
lcall
ljmp
sub
dec
push
xchg
or
pop
popl
push
pop
popa
popa
stos
cmp
add
call
int3
push
lahf
sahf
imul
mov
jp
std
lcall
dec
jg
ljmp
jge
in
push
jns
inc
and
pop
hlt
cli
ljmp
clc
push
jp
and
sbb
sti
ret
lret
mov
or
out
fmuls
mov
adc
es
movsb
incl
stos
mov
loopne
fwait
push
outsl
in
aaa
cmp
push
pop
pop
mov
ljmp
push
fld
scas
gs
xchg
out
ljmp
cmp
dec
sbb
out
and
cmp
add
xlat
lahf
add
cmpl
inc
inc
adc
sbb
push
sub
jg
or
mov
sub
leave
test
lods
jge
xchg
jo
divl
dec
outsl
incl
in
pop
sahf
pop
dec
push
cmp
mov
stos
inc
cmp
decl
clc
pop
adc
fcomi
shll
mov
mov
mov
fs
jae
nop
rcrb
mov
mov
sub
cld
rcrl
adcb
pop
jmp
add
ds
call
insl
aaa
rcl
dec
pop
imul
or
call
pop
add
xchg
test
and
ljmp
xchg
cld
mov
lcall
lret
push
mov
inc
scas
nop
pusha
cs
arpl
in
movsl
or
fstpt
sti
test
add
sbb
xchg
out
idiv
mov
mov
dec
inc
je
out
mov
push
jg
and
xchg
xorl
ljmp
push
int3
jp
lock
xchg
fldcw
lret
bound
test
in
mov
in
arpl
push
addb
push
adc
and
jae
ds
aaa
imul
push
aas
pop
lret
push
push
fiaddl
mov
imul
gs
popa
das
dec
mov
xlat
push
std
inc
pop
adc
push
clc
and
cmp
call
lret
ds
jmp
clc
outsb
ds
xchg
xor
adc
pop
mov
jnp
ljmp
cmp
inc
jnp
sub
out
test
mov
pushl
mull
out
cmp
ret
rcr
call
movsb
aam
rclb
push
sub
push
push
cli
ljmp
xor
xor
and
cmp
adc
jle
stc
sub
sbb
out
lds
sbb
jmp
mov
aas
les
or
mov
push
and
jmp
pusha
sub
adc
mov
sub
add
aam
wrmsr
mov
aaa
repz
pusha
sub
push
iret
mov
test
adc
add
xchg
sbbb
decl
mov
lret
in
pop
dec
enter
icebp
push
push
pop
and
lcall
rol
ds
nop
add
jb
sub
cmp
xor
cmp
jg
dec
jb
movsl
stos
lret
out
call
or
rorl
push
aam
stos
pop
test
js
xchg
stos
mov
call
popf
inc
ljmp
stos
jo
pop
insb
imul
mov
cwtl
test
mov
leave
mov
iret
inc
push
cmp
sub
sbb
or
pop
mov
push
sub
call
outsb
sbb
xchg
pushl
pop
bound
cmp
outsb
shlb
adc
leave
shll
mov
ljmp
pop
mov
adc
and
xor
fbstp
jge
cs
dec
pop
push
push
inc
adc
sub
mov
cmp
mov
sbb
push
sbb
stos
sub
cmp
inc
dec
lea
add
cltd
sub
js
xchg
mov
push
or
and
mov
push
ljmp
loope
lcall
ret
sub
push
add
enter
sbb
dec
dec
push
hlt
lcall
inc
push
adc
dec
and
xor
out
cmp
push
mov
lcall
mov
and
or
and
add
add
xor
push
in
xor
decl
or
stc
add
int
lcall
mov
xor
stos
mov
xchg
mov
out
imul
in
mov
jbe
xor
and
jg
stc
scas
fwait
clc
sbb
xchg
imul
cli
adc
in
negl
mov
int
mov
cmp
cs
fildl
jns
test
mov
jne
cmp
fxch
add
scas
int
dec
push
stos
mov
xchg
fmull
jp
repz
pop
mov
xchg
out
cli
imul
stc
popf
decb
mov
jmp
loop
pop
icebp
lock
pop
and
shrl
jns
xlat
mov
ja
test
decl
mov
mov
sbb
mov
mov
clc
adc
inc
cltd
je
ja
inc
push
adcl
add
jo
negb
xchg
imul
dec
cli
ljmp
sub
add
cltd
into
and
dec
xor
imul
adc
jge
cwtl
pushl
rolb
mov
pop
adc
fildll
ret
mov
xor
les
push
push
lcall
mov
rclb
jmp
push
pop
mov
jge
int
je
repnz
add
ljmp
call
push
jp
dec
pop
setno
and
mov
insl
or
mov
notl
dec
add
and
loope
out
rorl
xor
pop
mov
in
sub
mov
add
movsl
clc
mov
rcll
mov
arpl
pushl
shl
imul
mov
arpl
jno,pn
nop
push
fdivrs
jge
idiv
jmp
mov
out
in
cs
loopne
xchg
or
or
daa
xchg
les
scas
lea
pop
call
fwait
rorb
incb
imul
sbb
negl
inc
jp
sbb
adc
mov
jg
incb
popf
rorl
adc
mov
dec
stc
jmp
cmp
mov
ljmp
push
inc
xchg
aam
mov
dec
stos
shlb
pusha
adc
xchg
cld
mov
inc
inc
arpl
scas
lods
fldcw
je
nop
push
negl
jmp
mov
xchg
ljmp
push
out
call
push
ret
dec
rol
add
mov
dec
incl
addr16
push
fisttpl
push
adc
mov
jle
mov
ja
mov
jl
loop
ljmp
popa
cmp
jne
ds
or
push
jle
in
ret
lcall
add
rcrl
call
dec
add
jbe
lock
cltd
test
decl
xor
ja
cmc
fisttpl
mov
inc
xchg
jge
popa
pop
pop
incl
lea
mov
and
adc
push
loopne
mov
sub
inc
lcall
sahf
jae
aad
ret
sub
mov
and
push
int
and
pushl
mov
xor
dec
roll
cli
nop
mov
push
fs
arpl
mov
adc
cmp
incl
ja
icebp
repz
stos
xchg
loopne
ja
scas
lea
jg
dec
jecxz
outsl
ljmp
lcall
lods
xchg
imul
pop
jo,pt
fidivrl
loopne
mull
mov
inc
mov
sub
mulb
or
mov
push
jg
mov
mov
adc
lea
add
mov
cmpsb
xor
dec
leave
sbb
dec
mov
jmp
pusha
add
push
fisubl
push
into
mov
inc
stos
fbld
inc
push
dec
add
aad
inc
ja
stos
fnstenv
or
adc
xor
push
ret
stos
inc
mov
call
or
cmp
pop
or
push
dec
int
out
jl
inc
sbb
mov
dec
push
mov
push
cmp
popf
xchg
lods
fldl
jge
mov
filds
mov
mov
decl
ss
insb
ljmp
xchg
mov
call
sti
into
mov
cmc
lcall
mov
ljmp
into
adc
das
inc
mull
std
std
lcall
mov
inc
ljmp
std
xchg
sbb
cmp
inc
imul
xchg
cmc
aam
xor
adc
shrl
in
mov
push
sbb
imul
shl
push
pushf
and
mov
and
sub
ss
int
mov
lcall
lahf
movl
sbb
add
jbe
push
nop
jae
ds
cld
ss
push
into
pop
cmp
sbbl
in
pop
push
mov
xchg
jo
mov
in
and
daa
repz
mov
rorb
divl
fwait
dec
repnz
jmp
bnd
call
ljmp
test
lret
xchg
insb
sub
sbb
lahf
insl
or
lcall
jnp
nop
stos
mov
icebp
jle
adc
scas
lahf
std
enter
and
les
jmp
test
fsubs
loope
pushl
ret
push
fidivs
push
mov
push
fbld
add
das
adcb
mov
loope
mov
sub
dec
les
xor
jmp
mov
cmp
lock
sub
incl
dec
ret
dec
mov
or
mov
insl
push
xchg
in
and
fidivrs
je
adc
xor
addb
mov
out
ret
sub
add
jg
es
xchg
xchg
hlt
je
in
pushf
jge
jbe
sub
lods
js
lock
cmp
adc
leave
xor
pop
lock
notl
xchg
ljmp
or
jmp
inc
adc
jns
sub
js
loopne
xchg
hlt
leave
inc
es
sub
shlb
popa
inc
mov
ljmp
in
or
pop
inc
jnp
cmpsl
jne
pushl
pop
je
je
out
aaa
jmp
fildll
adc
inc
xchg
int
push
mov
mov
adc
mov
daa
incl
push
enter
mov
cwtl
pop
mov
cmp
push
inc
sub
dec
sub
pop
mov
lock
incl
cmp
lret
fcoml
pop
xchg
std
insl
or
xor
mov
sbb
push
ja
jae
ret
outsl
xor
cmc
jle
js
xchg
ret
aas
rcll
inc
fildll
sti
aam
ja
or
insb
mov
xor
fs
mov
mov
out
and
call
cmp
loop
mov
fisttpl
inc
bound
pop
ljmp
scas
mov
inc
ficompl
pushl
icebp
xor
or
out
cmp
cld
sbb
xchg
jb
repz
rol
in
sbb
cmpsb
aaa
pop
inc
or
or
mov
jae
lcall
or
popf
mov
xor
mov
test
add
push
or
or
pop
inc
hlt
jmp
inc
cmpsb
test
icebp
das
sub
js
fisubl
dec
lcall
adc
add
repnz
je
jb
test
sub
inc
jmp
sahf
adc
fistpl
lcall
test
ret
inc
push
ficoml
adc
mov
mov
scas
mov
ja
jne
mov
xchg
xchg
push
daa
inc
xchg
test
pop
push
jo,pt
test
inc
add
sub
and
movsl
arpl
lock
incl
and
jp
push
mov
mov
adc
test
or
mov
outsl
popa
ljmp
mov
test
xchg
mov
shr
faddl
xchg
int3
xchg
mov
icebp
out
push
sub
in
sbb
jle
adc
adc
jg
push
sbb
or
cmc
addr16
and
pop
ficomps
pop
xor
jno
push
out
jb
or
sub
outsb
sub
popf
adc
and
mov
inc
lods
aaa
adc
dec
cwtl
xor
stc
mov
lods
in
xchg
js
inc
xor
pextrw
pusha
mov
rcrb
jle
mov
out
stos
sub
push
cmc
out
and
lcall
sahf
pop
movsb
aad
inc
xor
lcall
mov
jecxz
jb
lahf
mov
and
icebp
dec
sbb
cmpsl
pop
mov
pusha
fidivrl
adc
pushf
mov
lret
sub
in
fs
addb
aaa
jmp
mov
popf
out
in
shlb
lods
push
in
icebp
mov
shrl
fistps
je
incl
test
mov
jb
sbb
cmpsb
mov
inc
sbb
movsl
icebp
xor
jg
into
lret
fsubrs
cmp
rorl
repz
cmp
xchg
pop
nop
jp
rcrb
loopne
lahf
sti
xor
cmpl
add
lcall
jno
bound
cmp
rcr
push
nop
dec
mov
pop
test
lret
xchg
xchg
jmp
cmp
pushf
mov
cmp
addr16
lret
mov
xor
dec
push
xchg
outsb
mov
clc
inc
imul
iret
and
mov
adc
jno
and
popa
mov
pop
inc
jmp
ret
inc
inc
pop
mov
mov
call
push
leave
enter
cmc
call
push
sti
jae
cmc
inc
stc
pop
repnz
sub
das
stc
enter
jmp
scas
lret
push
sbb
rcr
pop
dec
outsl
in
mov
jl
loope
sahf
adc
lret
mov
fnstenvs
repz
push
xor
mov
jg
or
xchg
mov
mov
mov
add
nop
outsl
inc
mov
movsl
xchg
add
jg
fsubr
mov
add
cmp
insl
push
lods
mov
out
cmp
pop
out
xor
ljmp
mov
aad
jb,pt
ja
cld
popa
aaa
lret
in
adcb
aam
mov
add
rcll
popa
jp
test
pop
dec
cmp
cmp
filds
call
inc
jge
out
lods
xchg
xchg
pop
insl
pop
sahf
sbb
lcall
mov
push
popa
fisubl
clc
jecxz
xchg
incl
adc
repz
movsl
inc
out
repnz
int
inc
cli
ljmp
jmp
fbld
add
test
in
lret
sbb
jo
push
xchg
out
and
ret
les
sub
rcr
aas
dec
and
call
jmp
call
lahf
mov
aas
xorl
stc
or
and
clc
ljmp
enter
xorl
jecxz
cmpsl
jl
and
sub
ffree
incl
push
xchg
call
aas
outsl
aad
pushl
pop
xor
pop
jb
es
xchg
insb
in
pop
cli
ja
inc
decl
lock
sbb
popf
adcb
mov
add
push
mov
jle
jg
call
out
test
inc
and
mov
in
gs
shl
nop
cmp
decl
mov
int3
or
out
nop
mov
enter
pushl
nop
in
sub
push
addr16
xor
fsubp
xchg
pushl
and
sbb
lods
sahf
and
bound
add
movb
aad
mov
icebp
jmp
cmpsb
pop
push
cli
aas
ret
cmpsb
das
xchg
jae
leave
xchg
int
jg
mov
xchg
lahf
pop
incl
jbe
sbbl
rorb
lods
mov
cmp
fsubs
clc
push
ljmp
pop
int3
out
int
jecxz
xchg
fadd
lods
cmp
cmpb
ljmp
inc
xchg
push
fisubs
jp
repnz
pop
xchg
xchg
cmp
cmp
mov
mov
addb
imul
out
movsl
idivb
lds
fnstcw
push
or
rcrb
push
push
add
test
ficoml
adc
call
lcall
lcall
and
nop
sbbl
mov
mov
mov
mov
sub
outsb
iret
jnp
addr16
mov
out
jecxz
adc
mov
lret
test
pop
fmull
addb
inc
incl
add
shr
cwtl
mov
and
jmp
stos
add
and
out
xchg
out
cli
and
ffree
fidivl
mov
arpl
arpl
cmpsl
sbb
pop
mov
mov
and
fidivrl
insl
mov
scas
add
ljmp
add
iret
cmp
sahf
insb
inc
ret
mov
js
mulb
movsl
call
lock
in
jo
and
sahf
jg
jmp
or
call
mov
jl
in
or
out
and
movsl
add
hlt
mov
incl
daa
jl
xor
iret
jmp
adc
mov
pop
sar
mov
in
inc
sar
push
xchg
cmpsb
cmp
dec
push
out
mov
mov
cmpsb
or
mov
aaa
pusha
xlat
jg,pn
xchg
pushf
sbb
loope
lcall
xor
push
and
insl
dec
stos
cmp
adc
std
cmp
cmp
mov
mov
mov
jge
daa
imul
aam
fs
loop
mov
sti
dec
mov
fdivr
mov
test
or
sub
pushl
mov
data16
dec
dec
addb
stos
cmpsl
fimull
sub
dec
fmulp
jmp
push
sub
pushl
rol
dec
xchg
aaa
shrb
scas
out
sub
rclb
out
ds
pop
xlat
sbb
and
test
scas
and
lret
decb
loopne
push
xchg
cmp
xor
mov
inc
cwtl
cmc
popa
scas
mov
das
xchg
shlb
int3
jg
inc
pop
ja
jno
mov
dec
out
sub
out
cmpsb
std
repz
lcall
mov
mov
sub
cmpsl
push
popa
fcoml
push
dec
insb
dec
imul
fmuls
test
pop
add
mov
xchg
mov
incl
push
mov
mov
movsb
pop
lock
roll
leave
jle
les
fs
cmp
xlat
pop
insb
and
mov
ja
adcb
mov
adc
fsubrs
xlat
sahf
ljmp
test
jns
gs
int
dec
xor
cwtl
popf
popl
push
adc
sbb
cmp
push
dec
insb
add
sbb
jae
mov
nop
add
mov
mov
out
adc
xchg
xchg
insb
fists
testl
ljmp
clc
lret
pop
sub
pop
sub
repz
setl
shll
out
jmp
movsl
pop
outsb
les
movb
add
out
fwait
loope
in
repnz
mov
add
lcall
ljmp
iret
dec
xchg
dec
orb
test
xchg
mull
cld
popf
sahf
dec
adc
dec
adc
sub
pop
xor
lcall
test
lods
dec
loope
mov
mov
xlat
bound
mov
jmp
sub
pop
mov
in
pop
lea
push
iret
adc
or
sbb
int
xchg
push
cmp
or
push
sarb
jg
mov
adc
ret
ja
les
sti
fwait
sub
rorb
mov
push
mov
mov
pop
test
and
mov
cs
jecxz
decl
imul
jg
out
stos
push
cli
jno
aaa
int
jl
jmp
inc
sub
incl
scas
add
push
dec
lods
and
dec
into
mov
xchg
jl
jae
push
subb
incl
mov
ficoms
xorb
enter
lock
mov
lcall
lret
in
daa
sbb
mov
sti
cld
fcmovu
xor
div
in
mov
or
div
mov
jmp
jmp
testl
xchg
mov
dec
and
inc
mov
sti
pop
arpl
push
std
jmp
faddl
cmp
popf
daa
pop
mov
repnz
or
std
jmp
xchg
stos
sub
daa
fdivs
je
test
pop
ror
sub
ja
movsb
or
in
out
or
xchg
mov
jb
xchg
lcall
sub
mov
or
loopne
pushl
scas
cmp
pop
sbb
cmp
daa
lock
jbe
fld
cmp
outsb
aaa
add
aas
mov
mov
ret
cwtl
mov
and
in
call
inc
scas
or
sub
jns
push
pop
cwtl
shll
jecxz
xchg
cmp
call
xchg
clc
mov
sub
mov
lret
push
sub
lcall
xor
out
xchg
leave
mov
mov
cli
jecxz
int3
sbb
jb
call
mov
sub
pop
adc
xchg
xor
fcomip
jns
mov
repnz
sbb
lock
or
xlat
push
and
ja
rorl
decl
repnz
mov
pop
sbb
insl
jmp
addr16
ffree
decl
outsb
mov
adcl
insl
ja
mov
xchg
inc
mov
cmp
xchg
ret
loopne
mov
jl
jg
jmp
scas
rep
outsl
jp
push
mov
jne
pop
gs
cld
or
jne
xlat
add
pushl
xor
pop
push
jge
mov
lock
shll
jb
jg
movsl
add
stos
cmpsl
test
sbb
sub
xchg
fnstsw
cmc
lahf
cmp
fdiv
je
loope
jmp
out
cli
pop
arpl
mov
add
jg
sti
mov
loopne
lock
jg
jmp
ja
leave
hlt
adc
cld
enter
push
loop
lcall
sarl
clc
xchg
jecxz
lcall
or
push
repnz
call
decb
dec
jge
push
jge
pop
pop
repz
dec
xor
and
ss
outsl
mov
scas
mov
movsb
ret
mov
fldl
call
xchg
addb
xchg
aaa
fisttpl
dec
xor
outsb
cmp
push
sub
in
dec
loope
inc
jae
call
xchg
jo
daa
jg
mov
cmp
pop
jno
out
sub
idiv
ljmp
jno
sbb
inc
add
mov
mov
leave
aad
sbb
in
mov
push
xlat
fnstsw
cmp
or
mov
xchg
outsl
movl
xchg
or
fstpt
adcl
ficomps
adc
int3
stos
jns
out
push
out
jo
and
inc
incl
add
or
sbb
dec
mov
aad
clc
push
imul
xchg
ljmp
xor
push
stc
jg
sbb
xor
sub
xchg
mov
decl
sahf
fadds
aas
xchg
mov
les
outsb
sbb
and
add
fwait
sbb
idivb
push
dec
and
mov
out
dec
push
mov
push
mov
pop
lods
mov
das
xor
data16
dec
adc
ljmp
sahf
sbb
adc
lcall
mov
insl
orl
out
fldl
dec
jecxz
dec
cmp
pusha
lahf
cs
add
das
insb
adc
jmp
cmp
enter
adc
stos
je
pop
rcll
ret
cli
call
stos
mov
jmp
dec
ljmp
and
jle
aad
push
mov
xorb
repz
sbb
ss
fnstenv
orl
jg
inc
xchg
pop
cli
mulb
repnz
faddl
xchg
sub
jmp
sub
repnz
loopne
lcall
add
jl
cmp
out
clc
fmul
jae
mov
cmp
push
scas
xor
push
jnp
popa
sbb
jbe
pop
cmp
inc
shll
nop
cmp
mov
test
les
test
rolb
shll
adc
dec
sbb
pop
and
ljmp
lcall
rcr
testb
mov
cmp
cmc
fimuls
inc
sbb
pop
aaa
call
push
sarb
fldl
xchg
test
sub
push
push
pop
xchg
icebp
push
push
mov
ret
in
or
aaa
out
add
cli
repz
inc
sub
dec
out
mov
jle
hlt
js
int
call
nop
xchg
enter
mov
push
gs
mov
jmp
ds
pop
shrl
add
add
stc
push
mov
sbb
pop
fsubl
lret
inc
mov
mov
aaa
cld
mov
inc
clc
push
push
mov
sbb
stos
mov
decl
xchg
cli
ret
scas
fs
cmpl
add
por
and
fstl
and
test
push
icebp
jmp
in
or
ja
xchg
dec
dec
inc
mov
mov
xchg
ljmp
jbe
mov
aad
in
loopne
sti
mov
push
cwtl
call
lcall
in
ja
das
jne
sub
iret
lret
test
cmpsb
cmp
and
cltd
sbb
mov
push
pop
icebp
push
mov
mov
movsb
dec
icebp
mov
jno
ljmp
cli
bound
adc
xchg
adc
jnp
cmpsb
pop
pusha
sbb
cmc
into
mov
sub
jmp
pop
nop
popf
and
call
xor
jb
fcos
lcall
scas
add
xchg
or
fadd
sbb
xchg
pusha
aad
push
jecxz
or
ljmp
cmc
lret
pop
pusha
push
icebp
jle
outsl
mov
in
test
jg
outsl
in
sub
inc
xchg
dec
lcall
jns
or
push
jne
and
rcl
push
mov
or
ljmp
stc
pop
shrb
push
cltd
mov
inc
jb
into
std
mov
add
inc
imul
mov
jg
fildll
pop
cwtl
cmpsb
mov
jp
jnp
adc
fcomip
cmc
loope
push
mov
mov
pusha
pop
shr
das
loope
push
mov
in
andl
cld
push
dec
sub
jl
jmp
jg
arpl
dec
leave
xchg
cmpsb
ds
cmp
popl
dec
jle
jp
loope
sub
fdivr
scas
test
iret
in
stos
sub
push
mov
lcall
decl
arpl
mov
pop
rcll
out
cmp
inc
push
dec
movsl
dec
outsl
les
mov
add
jmp
sub
jp
sub
mov
pop
insb
faddl
int3
in
xlat
jecxz
pop
jne
jb
aad
decl
cmp
adc
test
dec
lods
fisubl
pusha
jg
cmpsl
push
aam
insb
xor
stos
jne
das
sbb
movhps
dec
out
rcrb
inc
push
mov
je
pop
in
jae
push
arpl
mov
lods
push
push
stc
movb
and
mov
cmp
outsl
mov
dec
mov
jl
cmp
fcmovnbe
jne
out
mov
xor
jg
jge
xor
xlat
je
dec
xchg
xchg
mov
pop
jno
movl
ficomps
lcall
add
inc
push
ss
fwait
cmp
clc
mov
adc
sahf
les
lcall
mov
addb
out
mov
xchg
sbb
lcall
insl
test
decl
inc
cld
into
add
sub
jge
rol
insl
mov
dec
loop
cld
daa
stos
insb
bound
pop
cltd
mov
ret
or
incl
shll
sub
lock
cmovle
sbb
pop
gs
jmp
inc
mov
les
int3
or
vpavgw
mov
orl
xchg
icebp
xchg
test
lods
mov
test
test
cmpsl
shlb
outsb
je
sub
or
lcall
mov
icebp
adc
ja
jg
ss
mov
mov
ljmp
mov
mov
popa
fists
jge
std
xor
sahf
cs
sub
jecxz
dec
sub
cmp
call
mov
pop
cmp
mov
es
mov
dec
or
jae
or
push
inc
pop
xor
lcall
inc
fistpll
and
roll
pop
jno
dec
jmp
push
int3
push
ljmp
gs
jl
mov
in
jle
dec
outsb
ss
or
add
jg
fmul
jb
dec
int
ffreep
push
and
outsl
xor
mov
and
mov
xchg
movsl
incl
test
and
pop
leave
jl
adc
dec
push
jle
xorl
lcall
cmpb
ret
or
pop
lret
ret
in
aad
push
mov
mov
fcmovne
in
outsl
lds
jo
jg
cmp
lret
in
dec
and
jmp
xchg
lret
xchg
add
add
or
add
cmp
dec
push
pop
lcall
mov
flds
jns
and
sub
xor
jnp
daa
fs
dec
shlb
inc
bound
movb
std
mov
fsts
cmp
cmpsl
lock
push
rcrb
aaa
and
addr16
out
xchg
shlb
movsb
ret
fcom
sbb
dec
incl
arpl
and
in
jns
arpl
icebp
push
sbb
bound
inc
lcall
incl
lods
int
xor
and
jl
fwait
sbb
mov
inc
insb
xor
cwtl
outsb
int
iret
insl
push
int3
cld
sarl
mov
and
cmp
mov
pusha
pop
hlt
pop
sub
shl
popa
inc
std
dec
es
push
mov
adc
movb
push
shrb
jge
scas
cmp
daa
nop
ljmp
mov
jns
test
push
mov
inc
add
xchg
iret
xchg
pop
cmp
mov
repnz
sbb
xor
push
adc
loope
int3
iret
lahf
test
xor
std
lret
bound
aam
clc
insl
jecxz
pop
push
lret
int
mov
or
cltd
jb
mov
mov
dec
cli
mov
ja
lock
jg
pushl
test
sbb
out
sub
add
push
inc
lods
dec
xchg
call
lock
jmp
mov
mov
or
cmp
jns
lcall
ret
cmp
inc
pop
popl
inc
mov
lret
mov
cmpsl
inc
aaa
mov
pop
xchg
lods
or
incl
ret
clc
xchg
test
sti
mov
cld
popf
xchg
lcall
sbb
imul
dec
pop
arpl
add
mov
stos
cltd
pop
fs
fiadds
or
bound
or
mov
sbb
mov
xorl
movsb
aad
jg
out
xchg
sub
push
adc
dec
enter
fildll
sbb
pop
adc
cmpb
dec
pop
mov
sub
sar
sahf
ret
stos
rclb
mov
mov
and
xchg
call
xchg
aam
rolb
pop
sub
enter
cltd
mov
decl
xchg
shlb
test
push
xchg
xor
nop
das
outsl
pushf
hlt
cmpsb
jmp
insl
adcl
sub
rcll
stc
cmpsb
jg
nop
push
dec
scas
adc
inc
xlat
pop
cmpsl
cmpb
call
xor
sbb
mov
loope,pt
dec
adc
xchg
mov
aaa
loop
dec
and
pop
loopne
aam
jmp
sub
inc
test
lret
sub
imul
xchg
xor
jmp
mov
mov
test
xlat
lds
out
subb
sub
loopne
call
sarb
jbe
in
lret
lds
lahf
sub
jno
pop
jmp
movsb
or
rcll
aad
sbb
nop
cmp
dec
inc
lock
and
xchg
std
arpl
sub
cs
int
xchg
loop
int
xchg
mov
rcll
jne
call
push
ret
repnz
imul
xorl
cmp
pop
js
lock
pushl
xor
cli
in
jns
push
movnti
inc
add
imul
leave
add
call
nop
fs
jb
fcos
decl
insl
dec
js
xor
add
inc
cmp
inc
dec
clc
movsb
push
push
push
into
and
xchg
mov
rclb
rorb
xchg
setp
lret
fldl
incl
jns
or
or
pop
ja
xor
ret
jo
dec
decl
test
mov
out
mov
xlat
inc
imul
mov
push
out
xchg
fisttps
add
movsb
sahf
xchg
cmp
lret
in
inc
sahf
call
mov
inc
cmp
jno
xchg
iret
pop
stos
imul
leave
in
fildl
mov
data16
cmp
add
xor
aad
and
adc
pushl
ljmp
scas
lcall
mov
ret
mov
call
inc
jmp
incl
mov
outsl
push
mov
jecxz
xchg
mov
call
fiadds
xor
jne
lret
and
sbb
stos
push
std
jp
xchg
lahf
push
add
jge
cmp
xlat
or
dec
or
xor
inc
sti
adc
xchg
test
dec
sbb
dec
dec
pop
mov
mov
push
cmpsb
icebp
pop
adc
test
andb
mov
ljmp
jg
nop
test
outsl
jp
mov
daa
sahf
dec
xor
pusha
insl
das
push
push
dec
sar
push
xchg
iret
jnp
xchg
inc
add
lcall
stos
test
jg
add
fidivs
cmp
push
xor
jp
mov
je
cmpsb
inc
mov
pushl
ficoml
clc
cmp
mov
sub
imul
inc
out
fdivrp
pushl
pop
popf
xchg
cmpsb
fsubrl
push
subb
movsb
rorl
jp
das
inc
call
les
loope
jbe
sub
sbb
shl
fmul
imul
shlb
jg
mov
xchg
mov
pop
cmp
push
lods
movsb
fwait
push
jo
jnp
xor
in
in
mov
dec
push
adcb
cmpb
add
mov
lcall
jmp
dec
cltd
inc
loopne
mov
lret
adc
xlat
test
aaa
xchg
mov
jg
dec
cld
push
lahf
inc
cmp
adc
data16
in
jo
fstpt
cmp
sbb
inc
shll
cmp
dec
mov
xchg
and
sar
jmp
rcl
mov
sahf
ds
inc
pop
movsl
into
mov
andb
xor
mov
pop
in
decl
in
outsb
pop
ror
clc
std
nop
ret
js
cmp
out
stc
adc
repz
call
cmpsb
sbb
mov
dec
jecxz
loopne
push
pop
push
push
cmpsl
mov
cmp
nop
inc
lcall
frstor
rcrl
aam
cmp
pop
adc
fsubp
or
mov
loopne
aad
sbb
dec
xchg
leave
mov
popf
adc
nop
dec
repnz
sbb
push
loope
inc
add
pop
icebp
outsl
mov
cwtl
fcmovnbe
lret
ljmp
es
sti
sbb
xrelease
std
std
cld
les
mov
xchg
add
lcall
cmpsb
rcll
or
dec
loopne
in
push
hlt
cld
imul
pushl
jl
mov
adc
stos
push
arpl
call
cltd
sub
test
sarb
shlb
adc
add
addl
inc
lret
mov
pop
inc
inc
adc
xor
fimuls
ljmp
push
cmpb
fisubrl
jle
fmul
pop
add
push
and
data16
popf
cld
outsl
movsb
sub
and
loop
addb
pushl
imul
sub
dec
mov
mov
jp
pusha
cld
ret
add
xchg
jl
cmp
add
clc
push
out
pusha
gs
xor
or
insl
jge
sub
popa
jmp
fisubl
xchg
pop
imul
push
mov
mov
or
sbb
or
cmovbe
add
sub
mov
enter
dec
sub
mov
push
add
mov
xchg
push
push
call
sbb
stc
and
lcall
jb
sar
jp
test
add
xor
popf
mov
pop
scas
fildll
aad
cmp
push
cmp
mov
dec
and
inc
xor
xchg
or
sbb
mov
mov
adc
cmc
in
ljmp
lcall
jp
dec
add
jl
or
roll
push
or
inc
push
jle
sbb
lods
jo
fcoml
pop
bound
or
rol
ljmp
fbstp
decl
imul
sbb
aas
push
ror
xchg
addr16
mov
test
incl
push
add
loope
ud2
adc
pop
xchg
xchg
ret
decl
mov
fwait
in
fdivs
dec
stos
sbbl
sbb
shrl
andb
in
arpl
dec
xchg
insb
dec
sub
or
lcall
shrb
imul
cmp
push
call
mov
enter
insb
cs
jp
shrb
mov
inc
sahf
popa
mov
mov
add
jnp
add
adc
in
jge
pop
cmpsb
imul
repz
push
pop
and
fimull
add
into
sbb
and
ljmp
imul
subl
pop
mull
fimuls
mov
lock
jb
ljmp
rcrb
int3
or
jge
mov
xlat
pop
pop
daa
imul
pop
jp
incl
xchg
adc
negl
pop
call
add
pop
or
cmp
add
push
pop
aaa
mov
outsb
fdivr
filds
mov
out
jl
js
add
cs
arpl
jmp
jp
stos
dec
inc
or
sub
test
clc
hlt
nop
insl
je
jmp
push
xor
daa
sahf
xchg
out
fnstsw
fbld
test
lods
adc
sbb
imul
mov
push
gs
mov
cmpb
jbe
push
aad
flds
incl
adcb
sub
not
sarl
scas
add
stc
inc
xchg
xlat
add
lcall
pop
or
adcl
xor
sbb
adc
jg
sbb
inc
inc
bound
cmc
cmp
icebp
popa
inc
mov
cmp
rorb
mov
jp
mov
jmp
jbe
fs
lahf
inc
test
pushf
jecxz
pushl
or
ja
xchg
sahf
fimull
pop
das
mov
clc
pop
xchg
cmp
adc
insl
popa
jge
ljmp
scas
jmp
push
add
test
loopne
sbb
fwait
or
inc
mov
push
push
decb
lods
dec
cmp
in
call
sbbl
aam
cmpsl
dec
pop
ret
pusha
push
mov
clc
fs
and
mov
jmp
out
mov
arpl
mov
pop
xor
cmp
shl
jb
push
sbbb
sahf
fbld
subl
cs
js
sar
fs
push
sahf
cmp
inc
dec
add
repnz
cmpsl
cwtl
xchg
enter
ljmp
es
out
cmp
dec
ja
aaa
nop
mov
push
scas
fwait
xchg
add
xor
xchg
pop
loopne
xchg
rcl
outsl
xchg
ja
lods
in
pop
bound
cli
outsb
fistl
cltd
add
ja
cli
in
fiadds
orb
ret
mov
xor
inc
adc
loop
or
jg
subb
xchg
cld
mov
jns
popw
outsb
outsb
cld
mov
popf
sub
stc
xchg
arpl
dec
stc
orb
into
in
ret
adc
lcall
dec
mov
dec
movsl
mov
push
iret
ljmp
cli
jl
or
sbb
ret
popf
and
jae
pop
mov
jo
out
call
inc
lock
pop
inc
sbb
clc
stc
and
movsb
dec
sub
sbbl
movsb
push
inc
in
push
cmpsb
jp
xchg
jmp
sub
and
inc
push
mov
inc
mov
or
iret
mov
stc
sbb
bound
call
decl
mov
pop
and
sbb
cmp
sbb
fwait
icebp
es
jmp
and
test
movsb
imul
adc
adc
fdivrl
push
rcll
call
inc
push
enter
inc
mov
mov
push
sbb
fisttpll
cmp
inc
sbb
incl
cmpl
pop
lea
push
xor
xchg
hlt
mov
jmp
nop
cmc
mov
pop
pop
mov
ljmp
ret
sub
mov
mov
jbe
and
movsb
pop
out
sbb
jp
pop
fwait
add
out
and
pop
stc
inc
add
mov
mov
pushl
out
xchg
gs
addr16
and
repz
lcall
aam
sahf
push
push
cltd
adc
call
mov
xchg
lret
jecxz
dec
mov
jecxz
or
aad
test
jg
jmp
loopne
pop
jno
pop
pop
outsl
inc
or
sub
fiadds
into
sub
dec
jp
and
pop
call
add
inc
jae
mov
lret
in
enter
stos
jge
pop
or
inc
sub
mov
mov
aad
push
and
or
sub
push
or
notl
fldenv
pop
and
inc
and
inc
fwait
jb
fcmovnbe
jg
pop
les
jmp
inc
mov
and
push
fwait
popf
gs
out
inc
jg
pushl
les
sub
pop
movsl
inc
mov
cmp
pop
js
jg
xor
incl
fldenv
sbb
mov
and
rcll
lds
out
mov
inc
adc
ds
add
inc
sbb
add
stos
pop
dec
adc
sbb
add
add
out
sub
frstor
gs
lcall
mov
push
in
movsb
insb
xchg
mov
rolb
hlt
call
nop
scas
andb
lea
pop
mov
mov
pop
sahf
adc
pop
ret
mov
fisubrs
mov
test
call
or
outsb
cmp
mov
cli
fwait
sub
lea
outsb
out
shll
ljmp
lcall
inc
xchg
mov
lret
repnz
movsl
fstl
mov
sbb
mov
mov
lcall
inc
ljmp
jle
and
in
cmp
jecxz
ret
ds
lahf
pop
jecxz
adc
roll
xchg
cmp
aas
jmp
mov
ljmp
loope
sub
jl
jmp
sbb
loopne
fildl
inc
lret
xlat
ljmp
in
dec
jle
ljmp
pop
xchg
xor
fsubrl
mov
cmpsl
test
nop
pop
movl
push
push
xorb
sbb
pushl
mov
sub
cmp
cld
mov
inc
sbb
imul
or
lods
push
out
mov
sbb
int
jg
gs
mov
inc
out
insb
aad
cmpsl
in
mov
push
movsb
jmp
push
push
out
sahf
fidivrl
or
mov
inc
fsts
iret
sahf
push
cli
pusha
std
jns
add
push
mov
inc
mov
jns
push
xor
add
ret
imul
mov
xchg
pop
cs
or
mov
lret
mov
dec
idiv
sbb
mov
push
insl
pop
mov
test
or
das
cmp
inc
sbb
xchg
mov
xchg
fisubrs
mov
iret
dec
test
icebp
lcall
js
pmaxub
add
andb
int
les
inc
rcrb
outsl
cli
fsubl
lcall
xchg
add
xchg
out
adc
jnp
adc
sub
xorl
jg
mov
add
ss
sbb
arpl
out
adc
fisttpl
or
mov
sbb
inc
mov
mov
repz
mov
aaa
imul
les
mov
int3
out
cli
lcall
sub
pop
imull
jg
xchg
mov
popf
or
cmp
je
push
mov
cmp
enter
adc
or
lret
cmp
and
call
and
pop
mov
xchg
pop
inc
pop
andb
loop
add
push
push
push
loope
and
mov
mov
push
inc
movsl
dec
xchg
outsl
loope
pushf
clc
mov
mov
xor
xchg
sub
in
jg
push
push
imul
ljmp
or
lcall
jl
sti
sub
push
cmp
sbb
jbe
mov
jnp
jecxz
dec
xor
popf
aad
inc
xor
or
mov
lcall
and
lods
enter
aam
scas
pop
mov
adc
push
dec
xor
ljmp
adc
fisttps
mov
push
sbb
add
mov
imul
lea
fisubrl
cwtl
cmp
out
enter
inc
rcrb
out
xchg
mov
push
incl
push
jnp
mov
jl
fiaddl
iret
xor
mull
out
arpl
fcoms
cli
pushl
cltd
mov
jbe
adc
cld
dec
dec
gs
movsb
data16
call
in
cmp
lret
mov
xor
aam
push
es
xorl
ljmp
pop
insb
add
cmpsb
cmp
sti
pop
jle
outsl
jo
mov
cs
loope
test
das
cli
incl
dec
pop
daa
xchg
imul
mov
jl
fdivr
shrb
xchg
pushf
in
mov
mov
dec
std
push
insb
addl
mov
ljmp
shlb
fisttps
pop
ljmp
cmpsl
ljmp
clc
lcall
lcall
mov
cmpsl
adc
je
out
dec
fisttpl
push
cltd
dec
mov
push
shrd
pushl
cld
call
ret
xchg
add
adc
adc
jg
inc
lods
es
idivl
lcall
cli
xchg
add
and
std
leave
fdivr
daa
mov
jb
js
mov
mov
call
jns
jle
call
add
jnp
roll
push
xor
aad
das
cmc
stc
dec
mov
push
xor
push
fistl
xchg
sbb
mov
sub
incl
call
data16
dec
lock
pop
mov
in
mov
call
std
adc
push
clc
cmpsb
cli
mov
pextrw
adc
jns
mov
adc
incl
adc
leave
call
mov
and
dec
cwtl
in
shll
lcall
cmp
int3
inc
ret
out
call
fcoml
xchg
out
push
xchg
xchg
lock
lcall
mov
pop
pop
jg
sbb
js
adc
cld
data16
dec
cmpsb
and
xor
jo
outsl
xor
and
mov
bound
aam
ljmp
in
mov
es
push
sbb
mov
inc
mov
jne
aaa
in
je
loopne
inc
in
fimull
mov
fnstcw
je
cmpsb
das
dec
aas
dec
ss
or
adc
jp
pusha
add
ljmp
rclb
xor
adc
inc
xor
es
jo
fcomip
decl
cmp
test
ret
pushf
lods
and
lret
movsl
jns
pushf
decl
pop
jmp
es
add
aad
out
lcall
push
fidivs
cmp
jb
pusha
in
push
movsl
and
add
xor
aam
xchg
mov
insl
fucomp
adcl
dec
mov
cmp
pop
and
adc
inc
and
inc
inc
or
cmp
or
pop
cmc
mov
or
or
lcall
scas
jmp
es
mov
pop
aam
ds
jg
xor
lock
or
mov
mov
cltd
das
shl
adc
clc
or
loopne
pop
test
test
in
paddq
jmp
xor
adc
push
dec
adc
ljmp
and
lods
mov
mov
ljmp
pop
mulb
mov
imul
jae
mov
add
jge
cmp
xchg
jno
cmp
or
out
sub
decb
sbb
std
aaa
xchg
xchg
jecxz
fwait
cmp
divl
jno
stos
sti
pop
pushl
or
mov
stos
inc
mov
lret
pop
lock
or
inc
in
mov
call
loopne
and
mov
fildl
push
xchg
ret
push
push
stc
out
and
loop
incl
pusha
rcrb
dec
vmovmskps
inc
mov
test
icebp
les
fsubr
aad
fildl
dec
int3
pushl
int
sarb
push
das
out
imul
pushl
jg
mov
mov
push
clc
call
out
fistpll
push
mov
xchg
cmp
add
test
mov
sub
mov
incl
push
neg
ss
ds
or
filds
jge
push
iret
out
mov
inc
mov
adc
movsl
ss
jecxz
pop
mov
sub
test
mov
movsl
loopne
dec
fisttpll
shll
jns
imulb
mov
cwtl
jno
rclb
sub
sub
repz
jp
ret
stos
pmuludq
mov
ljmp
scas
gs
or
sub
ret
push
jecxz
sub
xor
divb
dec
in
stc
lds
movsl
out
or
decl
mov
mov
mov
sti
adc
lcall
pop
sub
add
dec
push
mov
adc
and
jle
pcmpgtb
sti
cmp
lea
roll
aam
xchg
dec
and
inc
rolb
sub
pop
sub
jl
cs
or
movaps
es
gs
pushl
cwtl
xor
enter
in
push
inc
hlt
dec
cmp
call
adc
lods
sub
pop
inc
cltd
adc
push
icebp
xchg
ret
loop
fsubrs
imul
decl
mov
outsb
nop
and
mov
cmc
mov
test
sub
mov
pusha
xchg
xchg
fistps
fcos
pushl
sub
add
ljmp
cmp
icebp
jp
fmuls
clc
incl
stos
in
mov
outsl
shlb
xchg
decl
add
xchg
xchg
dec
mov
mov
ret
mov
hlt
lret
mov
dec
jge
xchg
jl
cmp
mov
pop
mov
add
frstor
bound
push
aad
loop
jg
jbe
clc
pusha
mov
iret
xor
lahf
xchg
pop
sub
sub
mov
addb
push
and
push
arpl
cmp
mov
aaa
push
stc
jge
inc
jmp
arpl
fdiv
stos
adc
xlat
or
mov
or
outsb
sub
dec
add
fcomip
jmp
or
lret
pop
xchg
cli
iret
inc
adc
mov
dec
mov
cmp
pushl
mov
adc
sub
xchg
lahf
cli
sbb
pop
lods
push
jg
and
lcall
jbe
pop
loope
cmp
pop
jge
ljmp
pop
dec
aam
cmp
jmp
mov
or
xchg
cwtl
sub
dec
dec
shl
data16
xchg
lods
imul
scas
cli
call
leave
or
or
pop
xchg
lods
push
leave
push
sbb
pop
inc
lds
jbe
sbb
popa
mov
iret
xchg
lock
fwait
mov
aaa
lret
jb
pop
das
popf
es
lods
mov
incl
movsl
inc
mov
and
cmp
mov
cmp
jbe
call
lahf
clc
inc
orl
fadd
add
push
xchg
jbe
lods
fdivr
ds
lcall
dec
sbb
ror
dec
arpl
inc
dec
sub
sbb
dec
xor
outsl
scas
push
push
mov
mov
push
cld
pop
call
rcll
pop
cltd
or
inc
aaa
in
add
cmc
fwait
mov
repnz
lcall
cmp
dec
adc
in
fadd
cs
leave
mov
dec
mov
inc
adc
mov
incl
sbb
xor
mov
cmp
adc
ret
clc
sbb
bound
mov
sahf
push
mov
test
lcall
sub
lea
into
mov
pop
dec
in
pop
sbb
sbb
cmp
push
mov
shl
shlb
sbb
scas
sub
in
mov
jge
mov
lods
decl
jbe
out
scas
cmpsb
mov
aad
fidivrl
inc
jl
sbb
add
je
jne
int3
mov
scas
addr16
movsb
icebp
lcall
adc
repnz
clc
cmp
mov
in
pop
sub
sub
add
mov
lds
mov
mov
in
hlt
cmpsb
inc
jmp
decl
mov
das
ret
push
aam
mov
testb
inc
mov
decl
push
jp
dec
push
rcr
jns
jne
leave
lock
addr16
push
clc
hlt
jmp
fldcw
adc
mov
rorb
addr16
fsubrs
sti
or
cmpsb
stos
outsl
movsb
hlt
ljmp
lret
add
adc
leave
andb
faddl
cwtl
push
aam
mov
sarl
mov
jmp
xchg
das
jo
into
push
mov
jb
jecxz
lcall
imul
or
or
fildll
scas
iret
shrl
fimull
xor
movsl
lahf
sahf
or
mov
dec
out
cmpsl
out
dec
pop
fcomp
sbb
outsb
std
pusha
jmp
pushl
in
shlb
test
out
mov
movsb
or
sub
xor
incl
into
cmp
fdivrp
dec
shll
mov
fcomip
in
xchg
sbb
sbb
or
add
sub
leave
lret
cld
int
in
inc
fldcw
adc
xchg
ja
insb
lods
sub
pop
xor
decl
call
rcrb
repz
idivb
inc
inc
or
jecxz
sbb
jecxz
sar
call
xchg
and
shlb
sbb
mov
ljmp
or
ja
fnsave
mov
ret
push
pop
js
xchg
outsb
dec
push
movsl
inc
push
pop
xor
jp
out
dec
and
lahf
cmp
ja
pop
sbb
cmc
sub
lret
ds
xchg
jmp
mov
lcall
mov
pop
out
cmp
jg
lea
xor
cmc
jmp
xor
mov
inc
jmp
popf
call
ds
rcll
cwtl
out
xchg
mov
ja
out
pop
inc
adc
jb
push
lea
push
bound
hlt
out
bound
mov
xchg
mov
ljmp
dec
flds
imul
rorb
mov
out
test
xchg
or
mov
push
cmpsb
inc
xchg
neg
mov
subb
insb
lcall
or
sub
in
out
push
adc
dec
dec
imull
fs
call
fdivrl
daa
or
sbb
jbe,pt
std
pushf
cmp
data16
call
push
mov
pushf
push
gs
xlat
mov
dec
mov
pop
aas
es
mov
mov
loope
push
sub
jbe
movsl
jo
push
fwait
call
lcall
pop
fstpl
mov
and
test
adc
clc
cli
mov
pop
sbb
decl
repnz
out
xor
or
ljmp
mov
or
movsb
jecxz
push
testl
jp
and
and
out
xor
pushl
fidivl
rcrl
and
lcall
xchg
into
jecxz
ret
cltd
xor
jo
clc
sub
push
ljmp
jp
push
fs
cld
or
decl
cmp
ljmp
pop
push
fwait
insl
lea
jg
lcall
test
lock
pop
cmc
push
or
shll
arpl
arpl
pop
clc
jmp
jne
cmp
pop
aam
inc
data16
push
xchg
sbb
call
adc
das
leave
pop
jmp
cmpsb
push
pop
sbbb
xor
loope
roll
ljmp
xchg
pop
imulb
fisubs
mov
pop
test
mov
xor
ljmp
rol
test
rorb
shl
mov
xor
sti
mov
xchg
outsl
xor
and
adc
cmp
jbe
in
outsb
sub
xor
incl
or
xchg
cmp
mov
fnsave
jge
fcmove
mov
mov
mov
call
cmp
rolb
or
rcl
sbb
jne
subb
mov
out
lahf
test
and
ret
lret
jg
dec
test
ljmp
lds
lret
pop
scas
push
dec
jnp
lret
movsl
pop
dec
pop
mov
pop
aad
sub
fdivp
rcl
aad
xor
mov
xchg
mov
jbe
call
call
ret
scas
adc
push
popa
xchg
mov
movsb
in
mov
add
pushl
mov
jbe
and
sub
test
inc
jns
sbb
push
add
ljmp
jmp
mov
cmc
jae
call
or
sub
aas
xchg
aaa
fiadds
in
mov
pop
jmp
mov
sub
stc
mov
and
mov
jns
fildll
or
decl
test
sahf
insb
dec
inc
decb
sbb
into
and
lret
sub
sub
dec
jg
and
pop
icebp
sbb
push
push
add
sub
jg
push
lcall
ss
pop
test
mov
cmpsl
int
loop
mov
insl
xchg
incl
cmpsl
mov
mov
test
jo
dec
or
jmp
lret
scas
add
adc
adc
inc
mov
out
mov
jp
lahf
pop
or
push
add
mov
mov
decl
sbb
push
int
inc
cmpsb
inc
push
pop
outsl
mov
popf
popf
test
dec
cmp
jnp
adc
mov
std
nop
sar
jbe
xorl
cmp
cmp
cmp
fisubrs
test
loope
dec
push
fucomi
push
mov
jae
hlt
out
ljmp
mov
insb
xor
mov
leave
divb
call
lret
xor
lock
test
sbb
call
lret
mov
incl
enter
imul
xchg
int3
push
cmp
and
cmp
push
int3
call
jg
fs
test
push
cld
push
cltd
pop
dec
sub
popl
push
in
and
mov
add
movsb
shl
sar
cwtl
fistps
adc
pop
sbb
or
mov
fstl
mov
pop
pushf
nop
add
add
xor
mov
cs
xchg
sub
dec
xorb
push
pop
mov
xor
pushl
push
shlb
xchg
movsl
adc
cmp
stc
andl
daa
cltd
clc
stc
add
in
rol
mov
mov
jmp
adc
inc
orl
inc
jge
pop
test
das
cli
ja
nop
rclb
adc
enter
out
sbb
ja
cwtl
dec
sbb
xor
jmp
and
pop
or
mov
nop
push
sub
fnstenv
jbe
imul
adc
ljmp
in
add
std
icebp
int3
mov
loopne
aad
mov
jns
mov
icebp
pushl
and
cld
and
jge
cmpsb
call
mov
xlat
xor
lret
outsb
cmc
jnp
mov
xchg
call
pop
imul
xchg
pop
clc
push
lods
dec
cmpsb
inc
jecxz
inc
int
aam
out
mov
sahf
inc
ds
xor
dec
call
data16
adc
jns
and
cmc
ret
les
push
adc
pop
std
sahf
les
stos
test
adc
aad
pop
inc
pushf
jmp
pushl
les
cld
in
mov
imul
and
repz
add
jmp
aaa
adcb
lock
jno
inc
fcom
add
cmp
xchg
test
dec
cli
scas
lcall
cmp
sahf
xchg
pop
popf
lods
sub
jg
lcall
popf
cmp
cmp
out
push
or
int3
mov
ret
call
pop
call
lods
push
inc
push
xchg
mov
mov
xchg
pop
adc
mov
jg
call
js
les
dec
mov
mov
ret
push
rorb
lcall
das
inc
add
cmpsl
adc
xchg
or
pop
sub
popaw
jne
popa
btsl
ljmp
popa
cmpsl
mov
in
xor
daa
scas
sbb
dec
jne
iret
cmpsl
mov
test
cmp
dec
decl
ljmp
mov
inc
push
mov
xchg
loop
fwait
mov
cmp
dec
xchg
push
dec
mov
push
sti
mov
sti
pop
cwtl
cmp
and
fcompl
add
call
mov
xchg
jb
mov
push
cli
jg
push
push
mov
fdivs
mov
add
lods
iret
push
sbb
and
sbb
imul
movsb
cmp
movsb
sahf
dec
add
cmp
mov
leave
push
fiaddl
popa
popa
out
pusha
pusha
out
movsb
inc
pop
add
int3
out
pop
icebp
iret
and
movsl
cmp
fprem
call
push
stos
mov
xchg
sbb
or
inc
ss
cwtl
iret
pop
pop
inc
dec
xor
mov
iret
and
cmp
pop
cmp
sbb
pushl
fwait
popa
sbb
les
stc
inc
xchg
jo
rorb
push
lahf
mov
mov
jl
adc
add
sub
mov
push
fsts
sbb
cltd
cmp
icebp
inc
out
add
insl
mov
mov
cmp
arpl
cmp
stos
bound
sub
inc
popf
std
sbb
sbb
adc
in
adcl
ljmp
lea
inc
test
dec
movsl
mov
daa
jmp
and
pop
and
sbb
jle
jg
jmp
out
lods
push
and
cs
sub
loopne
mov
pop
adcb
sar
decl
push
jl
adc
pop
cmp
ror
push
mov
dec
repz
push
jmp
jg
push
lods
add
jno
int
xorl
repnz
fwait
fcoml
pop
stc
pop
mov
movsb
scas
out
dec
gs
xchg
mov
in
dec
cmovg
ret
mov
or
lea
cmp
xor
xor
fldl
inc
or
sbb
and
pop
dec
ljmp
push
subb
movsl
pop
out
pop
inc
std
xchg
mov
hlt
jnp
inc
jb
inc
inc
push
mov
lret
lcall
in
loopne
mov
out
cli
incl
js
push
int3
daa
mov
or
push
add
jns
test
jmp
pop
enter
lahf
or
and
test
cmp
push
hlt
cmp
cmp
addr16
mov
mulb
lock
or
inc
ds
sti
pushf
js
out
cmp
lahf
test
cmp
sahf
int
in
andl
jae
lcall
xor
sti
and
cli
xor
lock
jne
shrl
cli
mov
jp
xchg
or
jg
adc
push
repnz
sarl
mov
mov
mov
fcomp
pushf
sbbl
or
ljmp
xor
negb
add
dec
sub
fldcw
push
jmp
out
test
xchg
pop
das
insl
movsb
sbb
loopne
addr16
mov
add
mov
js
mov
ljmp
ljmp
inc
loope
insl
jecxz
add
jbe
mov
fisubs
cmc
inc
cli
mov
jmp
jne
or
in
nop
inc
test
aam
jmp
imul
ljmp
pop
fsub
test
add
leave
push
loopne
xchg
fdivr
xor
enter
mov
mov
lds
push
or
add
std
cltd
xlat
ficoms
xchg
mov
loopne
inc
fs
es
cmp
imulb
leave
cs
jg
pop
adc
cltd
test
push
adc
push
xor
fwait
dec
dec
lods
pop
inc
sub
mov
incl
pop
inc
je
add
xchg
or
jecxz
dec
push
enter
mov
lahf
cli
adc
mov
push
out
in
sbb
xor
aaa
fcmovnb
rclb
dec
es
mov
mov
lret
lcall
movsl
cwtl
adc
imul
mulb
or
mov
cs
sub
xlat
cs
lcall
mov
mov
push
and
mov
fs
test
push
insl
data16
mov
out
mov
mov
jp
lock
aam
mov
jmp
adc
outsb
xor
int3
add
fadd
sahf
sarb
jle
mov
lcall
sti
push
and
mov
dec
mov
dec
decl
inc
arpl
orb
xchg
jo
mov
xor
sub
ljmp
mov
mov
push
pop
mov
push
int
ror
sub
inc
fcmovnu
pop
les
xor
leave
jle
jno
lret
in
cmp
mov
popf
sub
or
add
sub
dec
push
jns
aam
dec
sahf
inc
inc
in
jle
das
xchg
inc
pop
or
call
mov
add
test
enter
icebp
sub
dec
jmp
mov
filds
mov
fisttps
rolb
repz
mov
std
popa
xchg
nop
jecxz
call
sbbl
aad
out
adc
fstp
ficompl
sub
inc
lock
out
ljmp
lock
js
add
inc
bound
jo
xor
xchg
sar
push
cmovl
push
cmp
or
cmp
mov
das
mov
pop
into
cli
sbb
arpl
adc
or
or
mov
rcll
loop
add
cs
pop
negl
mov
add
iret
inc
aam
cmpsl
or
js
sbb
mov
gs
gs
out
cli
mov
je
add
fcompl
das
inc
inc
jmp
popf
in
js
pop
dec
mov
out
jae
imul
jmp
ljmp
mov
rcrb
test
jnp
cmp
fisttpl
mov
mov
cmp
push
and
push
leave
incl
and
dec
mov
add
cmpsl
adc
sbb
rolb
lods
test
adc
decl
gs
pusha
pop
xchg
mov
pop
stos
xchg
stos
mov
jg
jb
jl
loope
jmp
push
jns
and
out
pop
ljmp
mov
filds
jmp
daa
mov
je
sti
sub
pushl
pop
and
jmp
nop
pop
or
lret
aam
sub
push
adc
inc
add
sbb
aas
test
mov
aad
mov
nop
nop
adc
incl
js
int
aas
mulb
mov
push
mov
outsl
inc
packsswb
pop
mov
sarl
add
fistps
pop
push
mov
and
adc
pushl
pop
repnz
inc
sbb
je
fsubl
fcoms
popl
scas
dec
or
decl
fstp
dec
dec
pop
add
lods
jbe
xchg
ds
cmp
mov
ret
mov
mov
call
addr16
outsl
or
push
mov
lret
out
pop
mov
or
pop
icebp
jmp
push
stc
repnz
lods
jmp
pop
aaa
xor
xchg
cmpsb
out
dec
call
cli
mov
dec
adc
pushf
pop
and
scas
mov
decl
repz
sahf
lock
data16
ljmp
aas
adc
test
aas
mov
and
cwtl
movsb
mov
test
inc
pushl
and
jp
shll
and
mov
fwait
and
xchg
add
inc
or
ljmp
xor
dec
push
nop
xor
mov
leave
test
pushl
shl
jbe
test
shrl
out
std
lcall
in
xor
and
push
ja
mov
addr16
cmp
aad
mov
or
mov
imul
call
loopne
scas
jecxz
into
and
cmp
or
cmp
dec
cmp
push
adcb
ljmp
insl
call
bound
mov
dec
call
mov
sbb
sub
orb
data16
je
push
pusha
mov
xchg
stos
mov
icebp
lcall
not
shll
xor
mov
mov
sub
js
aaa
pop
decl
pushl
pop
cmp
sbb
dec
ss
add
xor
idiv
mov
xor
jb
push
stos
jmp
sub
clc
incl
test
fldl
lods
hlt
add
inc
scas
mov
into
adc
popf
add
jmp
xchg
hlt
stos
cwtl
push
jne
mov
call
aam
mov
jg
loope
fwait
mulb
sbb
cmp
jmp
roll
mov
fidivs
mov
cmp
insb
and
sub
insl
sbb
xchg
jb
sti
pop
lret
inc
jbe
pop
stos
xchg
xor
pushl
aam
or
adc
or
or
and
or
incl
fwait
aam
mov
sbb
sbb
test
jne
ljmp
lods
lock
lret
and
ffree
pop
lods
jmp
arpl
decl
pusha
cmp
sub
aam
mov
test
fbld
ss
fisubrl
imul
fildll
xchg
cmp
incl
movsb
enter
out
xchg
ja
mov
incl
cwtl
jno
dec
pop
cli
inc
cmc
jmp
mov
xchg
sbb
in
sub
sbbl
fdivrl
repz
mov
push
sub
data16
pop
xchg
arpl
add
ljmp
int
lcall
mov
out
int
je
cwtl
stc
cmc
fucom
sub
jnp
test
xor
ret
pop
pop
jg
jmp
adc
pop
sbb
mov
lahf
das
aad
in
ffreep
lods
inc
cmp
jmp
inc
rorb
adc
cmp
and
enter
cmc
decl
loopne
sbb
mov
push
xchg
xchg
jmp
xchg
js
jle
icebp
ljmp
jl
pop
stos
mov
hlt
jnp
add
dec
mov
lahf
pop
lahf
aas
xor
cmpsb
lock
adcl
push
sbb
call
es
mov
mov
fisubl
lret
sbb
out
jb
movsl
cld
mov
mov
ljmp
std
fs
push
sub
pop
pop
icebp
push
inc
addr16
push
and
jmp
inc
aam
mov
add
cmp
rolb
sub
and
cmp
lea
nop
jle
xchg
inc
or
ja
lahf
dec
leave
fdivrs
out
mov
sub
mov
out
adc
and
sti
int3
push
popf
jo
decl
jg
sub
sbb
cld
insb
arpl
imul
incl
movsb
ljmp
decl
add
dec
pop
xorl
mov
xchg
mov
push
jmp
sub
roll
aas
xchg
loope
adc
adc
jns
sarl
stc
dec
sbb
roll
pop
out
xor
ss
xor
cltd
add
and
or
loope
mov
incl
loop
aad
scas
ljmp
mov
mov
rol
scas
int3
push
cmc
jg
adc
repz
jl
test
ds
adc
xor
aad
cmc
mov
test
jg
dec
repnz
xchg
lahf
mov
fs
gs
and
add
mov
sti
inc
xor
mov
pop
lds
daa
notb
js
lods
lods
xchg
pop
jp
fisubrs
inc
insl
mov
fbstp
cli
js
mov
push
out
clc
mov
shll
lods
cld
pushl
xor
int3
jle
cmp
leave
sbb
and
mov
jp
out
sar
pushl
xchg
test
adcl
and
outsb
test
fildll
dec
clc
push
ss
cmp
neg
pop
loopne
push
insb
das
aam
aaa
mov
subl
js
xchg
mov
xchg
ss
test
mov
mov
push
rcrb
icebp
push
push
data16
inc
or
hlt
cld
xor
aas
cmp
mov
popf
or
decl
leave
fistps
xor
xchg
fildl
sub
pop
cmp
mov
cmp
inc
xchg
loop
or
sahf
xchg
or
repnz
roll
inc
cmp
mov
add
loope
jb
mov
ds
pop
dec
mov
ljmp
and
mov
jae
ds
mov
daa
cmc
sub
jg
and
cli
push
fs
aad
shll
mov
aas
jl
xlat
rclb
cmp
int3
add
out
mov
push
jmp
pmuludq
shll
pop
cmp
mov
mov
lods
lret
insb
sub
rclb
lcall
pushf
fcoms
mov
xchg
leave
leave
bound
inc
or
and
adc
push
imul
sbb
jbe
sub
dec
insb
aam
loopne
gs
cli
xchg
lret
movsb
push
adc
inc
jbe
mov
sbb
pop
in
sub
jbe
mov
xchg
cmpsb
ljmp
push
mov
inc
sahf
outsb
push
aas
not
adc
cmp
cwtl
in
mov
pop
xchg
mov
pop
in
mov
adc
pop
enter
adc
addr16
pop
in
jg
pushl
pop
pusha
xor
push
xor
adcl
push
fdivs
pop
add
jo
pusha
pop
or
incl
pusha
js
call
mov
push
arpl
jo
je
mov
les
mov
inc
xchg
sbb
cmp
inc
test
mov
call
xchg
dec
stos
jmp
nop
mov
and
repz
addl
vmread
xchg
scas
scas
sbb
adc
incl
das
lcall
jnp
ja
daa
inc
scas
in
cmpsb
mov
cmp
cld
xchg
xchg
adc
arpl
scas
mov
push
enter
insb
shr
sbb
shl
into
xchg
jmp
push
shll
fimuls
xchg
xchg
stos
cltd
adc
mov
push
or
ja
inc
imul
sub
or
fstps
sbb
jmp
ss
adc
push
xor
fisubs
aas
add
jecxz
rcrl
sbbb
ljmp
out
loopnew
lahf
dec
shlb
or
mov
dec
mov
ljmp
in
cmpsl
jp
inc
sub
sbbb
subl
lock
sbb
jl
push
ror
sub
xchg
mov
jle
sbb
fsubrs
jg
mov
push
jns
sbb
shlb
xor
cli
incl
in
and
jmp
mov
inc
pop
xchg
loope
test
stc
xor
lcall
cmp
adc
sub
adc
test
mov
inc
ljmp
jg
or
push
out
mov
lcall
xchg
xor
call
and
sub
in
push
push
xor
adc
pop
loope
out
out
mov
xchg
xor
and
cmp
pop
jo
cs
inc
add
mov
outsl
cli
fsubrs
xor
sub
sub
and
add
pushl
xchg
pop
jbe
mov
pop
fcompl
inc
xor
stos
adc
stc
fwait
mov
inc
cmp
outsl
repnz
cmp
decl
add
rolb
wbinvd
mov
bound
sub
mov
je
outsl
sub
dec
cmp
xlat
dec
icebp
xchg
test
cmpsl
rorb
cmc
fdivr
mov
ret
push
lods
nop
cwtl
mov
movsb
cs
in
mov
pop
jl
xchg
test
pop
aad
cmp
sbb
cli
pop
or
inc
jl
iret
sbb
loop
addr16
call
pop
lahf
adc
mov
rcrb
xor
mov
sub
sub
in
pushl
scas
xor
out
ret
push
pop
adc
bound
out
inc
sbbl
mov
movsl
mov
lock
out
cli
or
enter
mov
out
hlt
sub
add
aad
test
jp
mov
sar
jg
lcall
mov
push
mov
cmp
sub
lea
jg
jmp
ljmp
cmp
fmull
aam
and
adc
shlb
jns
mov
outsb
std
add
sbb
dec
push
jne
xchg
aad
mov
sbb
ret
pusha
mov
or
adc
jp
cmpb
or
fsubrs
out
push
or
shlb
xchg
dec
fbstp
std
std
ljmp
mov
stos
mov
jg
and
mov
mov
call
sbb
and
mov
jo
xchg
pop
shrb
pop
sbb
dec
push
jne
xor
fcomip
mov
push
fs
incl
sub
loop
sbb
sub
test
sbb
mov
jle
and
scas
cmp
mov
pushl
or
clc
adc
cmp
fnsave
lds
add
push
push
jmp
or
scas
mov
adc
insb
gs
hlt
sub
jne
test
mov
stos
adc
xchg
aaa
imull
inc
adc
sarl
cmp
negl
jmp
aam
sbb
call
ja
sub
sbb
jbe
mov
icebp
aam
loopne
gs
adc
lahf
mov
lcall
sub
cmc
add
repz
ja
daa
cmp
add
pusha
and
imul
add
mov
mov
pop
xchg
sub
sbbb
scas
dec
jno
or
ljmp
loopne,pn
or
push
xchg
pop
aad
daa
jne
cli
arpl
call
xchg
cmp
gs
and
cmp
or
sbb
pop
inc
fisubrs
test
ret
ret
jmp
xor
ror
push
jmp
inc
and
adc
xchg
push
adc
scas
inc
mov
sar
inc
xchg
push
jl
popa
push
ret
mov
cmpsb
xchg
nop
pop
fidivs
sbb
pop
sbb
push
lcall
and
pop
xchg
sbb
repz
outsb
xlat
insb
decb
jne
inc
sub
dec
push
outsl
add
xchg
mov
imul
sbb
bound
add
int3
das
adc
cltd
je
jnp
adc
loope
es
pushl
icebp
cmpsl
cmp
sbb
inc
jge
mov
or
mov
jbe
call
movsb
ljmp
fs
test
bound
imul
pop
jo
call
push
or
imul
adc
push
addb
jmp
ja
push
xor
in
clc
fdivs
rorb
inc
add
enter
ljmp
hlt
adc
mov
add
or
or
inc
popa
mov
ss
clc
ljmp
mov
jl
daa
lret
cmp
dec
es
sbb
inc
lods
lods
mov
cmp
push
mov
push
jecxz
cmp
loope
mov
xlat
adc
or
sar
or
decl
or
jnp
pop
dec
pop
sub
mov
std
loopne
pop
lds
push
call
sti
dec
dec
push
adc
sar
lret
imul
out
sbb
int3
dec
xchg
mov
mov
enter
xor
mov
cmp
and
test
pop
test
outsl
push
int
shrb
push
fsts
stos
xor
lds
out
and
loop
call
cmp
push
call
xor
lahf
and
stos
add
scas
fnstsw
clc
cmp
or
arpl
dec
mov
inc
xchg
jg
sbb
inc
sar
incl
lret
mov
addr16
nop
loopne
test
cmp
cmp
mov
outsl
cli
clc
int
fwait
xchg
sbb
or
inc
ret
fbld
ljmp
dec
xchg
das
sbb
out
xchg
aad
push
sbb
sub
decl
sbb
adc
movsb
inc
and
out
repnz
loop
push
mov
jecxz
cwtl
mov
cwtl
into
push
adc
sbb
adc
mov
push
pop
add
mov
jecxz
dec
inc
jnp
mov
inc
sub
jmp
mov
xor
and
or
and
rcrb
test
aas
test
pop
arpl
sub
nop
jecxz
shrb
xchg
out
loop
dec
jecxz
clc
or
test
clc
add
pushl
mov
and
mov
enter
mov
cmp
fistpll
mov
imul
insb
in
loop
xor
aas
mov
lcall
stos
mov
call
fdivrs
and
or
pop
sub
ffreep
aad
mov
cli
inc
lret
xchg
sub
sbb
mov
repnz
add
mov
cmp
jbe
mov
out
cli
push
cltd
or
sti
xor
enter
jmp
call
mov
mov
or
mov
dec
aaa
inc
aad
cmp
incl
push
int
in
jmp
js
fimull
int3
insl
inc
pop
sub
test
push
inc
das
inc
jecxz
cld
pushl
ds
cmp
mov
mov
int3
aad
addr16
cmp
mov
mov
push
mov
pop
subl
dec
pushf
lea
cmp
jns
popa
xor
stc
es
xor
lods
mov
test
pop
mov
dec
or
insl
mov
mov
test
aad
outsl
clc
mov
xor
and
mov
leave
fcomp
out
cli
or
pushl
gs
mov
out
data16
push
sarl
cwtl
dec
insb
push
movsb
add
and
jle
inc
or
inc
lcall
and
jle
aaa
repnz
lcall
je
sbb
cmp
jne
xorb
xchg
aas
xor
outsb
int3
sahf
call
repnz
incl
andb
bound
ret
xchg
push
xor
out
imul
movsb
in
or
iret
sub
mov
pop
hlt
rcrw
btc
push
mov
mov
outsl
ljmp
stos
fwait
in
mov
cwtl
jbe
bound
decb
lcall
inc
inc
fildll
sub
add
dec
sbb
out
fstp
xor
mov
icebp
orl
gs
pop
inc
jl
mov
cwtl
sub
ljmp
pop
shll
lds
ficomps
sahf
aam
mov
add
in
enter
incl
aad
aas
test
and
fists
fcoms
add
insl
fstp
pop
sahf
test
es
sub
ljmp
clc
test
lock
xchg
fwait
push
in
cmp
xchg
mulb
test
std
pushl
pop
xor
in
das
mov
sub
jl
bound
jg
sbb
insl
add
sub
adc
inc
dec
sub
mov
push
inc
jns
outsl
data16
push
push
ret
push
arpl
xor
jmp
dec
clc
push
cs
js
cld
std
inc
fisttps
and
jns
dec
mov
cmc
or
out
jns
shr
iret
rorb
mov
sub
mov
in
push
shrb
mov
jg
mov
inc
es
pushl
sub
mov
outsb
cmp
notl
lahf
xor
sbb
cmp
dec
sub
incl
jge
push
xchg
rcr
les
call
js
sub
pop
flds
inc
mov
idiv
mov
dec
arpl
stos
or
cwtl
sub
inc
sbb
mov
stos
or
push
mov
cmp
add
xchg
pushl
jle
and
js
int3
ret
daa
stos
push
imul
inc
rol
sub
in
aas
pop
jge
push
xchg
pop
repz
dec
imul
adc
das
fisubrl
add
push
ret
dec
mov
jnp
add
or
int3
sub
call
stos
inc
sbb
jecxz
outsb
scas
cwtl
sbb
loop
dec
in
sub
js
insb
out
clc
and
test
in
jne
ret
pop
scas
adc
popa
jb
sbb
push
push
mov
call
push
stos
les
sbb
pop
lock
dec
pusha
mov
loopne
mov
aad
ljmp
test
inc
cli
pop
mov
xor
iret
xchg
sahf
std
jg
fsubl
mov
mov
pop
sub
jl
jo
cld
ljmp
and
and
cwtl
mov
ret
mov
dec
gs
mov
push
pop
dec
xchg
int
adc
pop
pop
std
sbb
insl
scas
pop
pushf
jle
mov
nop
pop
inc
fwait
push
pushl
lock
cltd
into
sub
dec
and
sbb
mov
out
fwait
dec
xlat
bound
in
icebp
adc
inc
popa
imul
sti
shlb
cmpsl
fnstenvs
adcl
sbb
inc
ja
fucomp
aam
scas
jp
fidivl
ljmp
adc
xor
mov
repz
negl
ljmp
sub
push
mov
xchg
adc
and
xor
push
fisubl
int
pushl
enter
push
push
jns
cli
mov
stos
cs
dec
sub
lcall
cmp
adc
jl
imul
aam
push
out
cli
jmp
sbb
loop
gs
lea
notl
push
dec
and
adc
add
dec
add
out
xor
xor
push
push
test
mov
or
sub
fiaddl
push
clc
ljmp
cli
stc
cmp
jp
insl
aaa
loopne
adc
imul
mov
ret
ljmp
jmp
subl
gs
roll
movsb
lock
lock
push
jle
push
push
lcall
dec
cmp
adc
loop
pop
or
call
inc
enter
cmp
repz
sbb
cmpsl
mov
and
adc
push
lods
jo
shlb
cs
sarl
xor
lods
jge
stc
push
cmp
mov
testb
xor
data16
pop
lods
adc
das
adc
fisttpl
loope
add
and
inc
xchg
or
cmp
movsl
pop
xor
sbb
pop
jmp
leave
or
adc
pop
jl
adc
sbb
stc
mov
adc
ss
mov
pop
push
outsl
in
shlb
lcall
jns
movsb
dec
lea
push
lea
fs
xchg
andb
adc
mov
adc
aas
sbb
scas
js
pop
ds
or
pop
inc
fs
test
arpl
xchg
push
cmp
jg
orl
push
out
ret
push
sbb
dec
jno
fs
call
popa
mov
and
sub
mov
lods
mov
fwait
inc
mov
sbb
iret
xor
data16
and
adc
fbstp
stos
lods
or
mov
pusha
add
cmp
aam
or
mov
orl
mov
lcall
scas
aam
inc
mov
ss
mov
xor
inc
xlat
loop
mov
mov
fcomip
dec
pop
xchg
jnp
fstpt
int
popf
ret
adc
popf
push
mov
push
incl
icebp
or
enter
hlt
hlt
pushf
sbb
outsl
pusha
sar
decl
insb
sub
and
scas
xchg
mov
or
mov
dec
adc
sub
cmp
pusha
testb
js
inc
repnz
icebp
inc
aaa
fcomps
shr
ret
aas
xchg
ss
sbb
ljmp
rcrb
push
cmpsl
add
xchg
jmp
mov
jg
xor
std
mov
into
lret
daa
ffree
test
leave
sub
data16
mov
decl
outsb
xchg
aam
popa
lret
mov
mov
outsb
lcall
adc
loop
or
lret
sbb
incl
out
sbb
lret
clc
pop
sbb
test
inc
int
sahf
inc
inc
notb
mov
mov
fcomip
inc
shll
xchg
mov
xor
daa
stc
add
out
xlat
div
gs
ljmp
jnp
cmp
out
imul
sbb
ficoml
fdiv
pop
pop
lods
push
ds
into
mov
jno
ret
mov
mov
lcall
lds
xchg
cmpsb
test
jp
jg
mov
jp
rorl
test
sbb
pop
add
test
fwait
or
int3
pop
out
nop
xchg
div
call
jne
pusha
push
fsubrs
icebp
cltd
stos
and
jecxz
xor
lcall
ret
es
in
aaa
mov
fsts
and
imul
dec
and
pop
xor
cmp
es
mov
jnp
pop
lods
mov
and
xchg
cmp
das
fnsave
loopne
or
jmp
xor
add
push
jb
bound
bound
cli
inc
sbb
sbb
scas
sub
pop
test
rcr
or
push
jmp
fnstenv
mov
jmp
or
inc
stc
mov
outsb
icebp
sbb
stos
sbb
pop
fiaddl
pushf
imul
pop
decl
jmp
out
or
push
sbb
lods
mulb
mov
push
mov
xchg
jnp
push
mov
pop
jb
outsb
pop
xchg
mul
mov
pop
cli
fildl
shll
mov
cmc
mov
subb
xchg
sbb
cmpsb
ror
sbb
fisubs
dec
out
jg
sahf
in
jle
repnz
cmp
test
mov
mov
fnstcw
add
mov
outsl
aam
in
adc
cli
in
fdivrp
jg
or
mov
lods
loope
cltd
or
or
pop
pop
orb
push
xchg
xchg
incl
mov
aaa
push
push
andb
les
pusha
sbb
xor
jbe
incl
outsb
jle
push
mov
mov
cli
lcall
testb
out
inc
jecxz
clc
sbb
fcoms
cld
sar
outsl
mov
push
sti
jne
jns
ret
push
sub
or
out
xchg
sub
and
xchg
es
mov
sbb
lcall
daa
rcr
pop
jge
pop
cmp
lods
cmp
sub
mov
or
xchg
and
mov
test
sbb
scas
ljmp
lret
add
nop
sbb
jmp
xchg
sbb
cmp
fisubrs
loope
ja
jp
push
ljmp
mov
or
aam
and
or
ljmp
fisttpl
or
sub
xor
aad
adc
ljmp
dec
inc
pop
fdivrs
jae
xchg
cld
lds
xchg
xor
lods
jmp
push
lcall
in
cmp
loop
sbb
mov
mov
aad
jle
jp
pop
jnp
xlat
popf
cmp
sbbb
xchg
ret
cmp
mov
adc
pop
out
cmpsb
loope
push
ja
je
jecxz
sbb
push
mov
push
add
stos
ja
xchg
adc
pop
adc
jg
jmp
and
mul
pop
lock
addb
jns
stos
push
ss
cmc
xchg
stc
jmp
jmp
push
mov
xor
popa
std
insl
popf
test
or
decl
push
jbe
dec
or
mov
gs
sbb
or
popa
or
add
jg
test
inc
or
mov
dec
arpl
or
je
mov
or
cmp
inc
pop
sub
call
mov
xor
ss
mov
adc
jmp
and
iret
call
inc
test
mov
fcomps
in
cld
sbb
movsb
ss
add
jmp
pop
jmp
adc
mov
aam
cmp
push
imul
popf
int3
xor
call
xor
or
sahf
push
lods
sub
cmp
aas
in
mov
jg
movsl
int3
rcr
int
push
lret
divl
and
mov
push
into
adc
mov
or
pop
mov
ljmp
push
scas
dec
sar
ljmp
pop
sub
xor
hlt
mov
mov
nop
sub
cmpb
das
sbb
pop
inc
jl
sahf
in
ret
mov
sbb
insl
mov
incl
and
pop
add
pop
test
in
lcall
ljmp
cmp
push
subl
stos
inc
mov
dec
mov
hlt
sbb
dec
mov
das
leave
movsl
out
mov
lahf
and
inc
xchg
sar
lcall
or
xor
cmp
dec
lret
cli
mov
mov
in
jo
int3
shlb
and
call
or
pop
nop
cmpsl
movsb
shrl
daa
mov
dec
push
push
adc
ss
repnz
icebp
incl
sti
rcr
stos
mov
xchg
setg
fstp
test
addr16
data16
adc
movsl
mov
test
mov
cmp
ljmp
dec
stos
dec
mov
jp
enter
adc
nop
cld
stc
add
iret
movsl
mov
jmp
mov
sbb
push
fwait
mov
lret
mov
rol
inc
dec
adc
repnz
pop
inc
out
mov
scas
fsubrl
pop
jns
push
mov
dec
ljmp
bound
lcall
xchg
cmp
out
pop
push
xor
dec
mov
call
sub
xrelease
pop
xor
mov
ds
or
pusha
test
lcall
or
mov
add
sub
jmp
xor
fisubs
or
cmpsl
out
into
jnp
in
jg
ljmp
shll
sbb
xchg
mov
ficoms
and
jmp
in
outsb
test
lret
out
cmp
and
xchg
dec
lods
hlt
mov
dec
faddl
dec
mov
out
cld
cli
and
mov
test
jg
fwait
out
insb
call
and
mov
mov
adc
jle
mov
iret
fldl
ljmp
push
lods
dec
dec
in
scas
or
pushf
cli
sub
call
out
or
out
cli
mov
scas
ret
or
pop
mov
lods
mov
push
and
loope
fcoml
cmp
mov
xchg
test
sub
pop
dec
fadds
dec
inc
cmpb
lcall
and
into
icebp
mov
in
sbb
sub
sbb
fnstsw
xchg
mov
nop
ljmp
add
push
pop
js
dec
idivb
inc
mov
mov
cli
incb
divb
pushl
stos
xchg
lods
aaa
xor
js
pop
and
testb
fsubrl
ljmp
mov
pop
gs
or
lds
aam
lahf
fldt
out
addl
subb
pop
pop
arpl
rcrb
jg
and
mov
or
cmpb
mov
pusha
and
lcall
mov
push
push
ret
pop
adc
push
push
mov
ljmp
je
test
or
stc
jne
pushf
into
fldl
add
cmp
add
stos
mov
iret
pop
lods
fucomip
lds
dec
mov
push
add
insl
jl
jmp
sbb
xchg
sbb
adc
adc
mov
jmp
jecxz
lret
cwtl
inc
mov
adc
in
adc
sti
cltd
push
adc
pop
push
push
push
inc
sbb
sbb
or
jg
push
lret
fsubs
rcrb
inc
xor
mov
rorl
xchg
stos
jmp
jbe
add
add
jmp
stos
push
dec
push
sub
outsl
and
add
pop
movsl
incl
bnd
mov
sub
nop
or
popa
jg
pop
loopne
lret
add
outsb
sti
or
and
push
fbld
je
sub
inc
je
es
cmp
push
sbb
pop
shll
mov
jg
lcall
clc
pop
mov
sub
mov
test
es
jmp
cs
mov
ja
cltd
cmpsb
pusha
mov
stos
in
pop
adc
adc
inc
cli
adc
xchg
outsl
mov
mov
cmp
pushl
jle
aam
sbb
into
pusha
pop
fldl
scas
cmc
aam
mov
pop
lcall
fists
mov
daa
mov
incl
cmp
push
inc
push
mov
fiaddl
std
sub
repz
outsl
cli
and
and
or
push
or
idiv
pop
sbb
ljmp
inc
mov
test
sub
mov
outsb
mov
mov
arpl
mov
adc
mov
jmp
push
fistps
out
sbbb
in
dec
mov
and
ficoml
and
cli
jg
out
arpl
pusha
jbe
cmp
out
push
mov
cmc
jbe
pop
insl
fisubl
jg
imul
mov
mov
fstpt
enter
mov
pop
je
clc
dec
and
movsb
adc
adc
push
jmp
lods
jl
jbe
mov
push
push
into
add
mov
xor
test
inc
ror
xchg
or
lcall
fnstenv
xor
incl
adc
fstl
cmp
je
in
or
lds
shrl
mov
inc
bound
hlt
xchg
push
mov
push
jo
sahf
sbb
hlt
in
sbb
and
cmpsl
insl
scas
int3
out
cmpsb
adc
jb
sub
xor
out
sub
shll
lods
pop
aad
mov
fisubrl
es
push
mov
clc
hlt
aas
jbe
add
pop
clc
xchg
push
mov
js
sub
jo
add
dec
sub
push
push
mov
jl
mov
sub
jp
mov
imul
sub
fiaddl
push
xchg
or
inc
jecxz
or
push
ss
das
cli
sbb
jp
sub
jne
outsb
pop
sub
ret
fdiv
enter
lock
clc
mov
je
loope
fwait
loopne
xchg
mov
test
inc
sbb
mov
or
shll
jg
mov
pop
sti
inc
mov
outsl
jbe
xor
push
pop
lods
out
ljmp
rcr
and
fmull
dec
pushf
add
test
cmp
clc
mov
jmp
insb
outsb
js
test
pop
adc
negl
mov
dec
fdivrs
popa
cmp
pushl
cwtl
int3
xor
xorl
popa
pop
imul
mov
imul
test
idivb
inc
in
mov
and
out
pop
push
inc
ja
xor
lret
clc
mov
inc
rcr
in
daa
repz
es
test
ljmp
sar
test
inc
data16
sbb
in
xor
inc
pop
dec
filds
std
mov
dec
loopne
dec
clc
mov
jmp
mov
xchg
xor
dec
insb
pop
repz
aas
xor
imul
decl
cs
lds
xor
xchg
dec
push
out
out
rcl
loopne
pop
and
lret
rcr
icebp
call
shl
lods
cli
push
adc
xchg
je
jge
push
ja
aaa
sbb
imul
mov
lcall
sbb
outsb
pop
push
push
xchg
sbb
push
jecxz
arpl
stos
decl
mov
cmp
mov
sbb
lahf
testb
xor
dec
mov
mov
lcall
pop
xchg
adc
sub
pop
ss
outsl
cwtl
and
adc
xchg
in
out
xchg
cmpsb
inc
add
mov
xor
ss
test
fbld
fsubp
orb
decl
add
xlat
xor
in
loop
pop
int
out
sbb
ljmp
orl
mov
rolb
lret
or
sar
push
mov
xorb
xchg
sbb
xchg
mov
add
in
imul
cmp
add
stc
test
sub
dec
arpl
jmp
stc
and
pushl
jp
das
mov
ds
cmc
push
jnp
add
push
jne
sahf
inc
pop
lcall
lea
lds
sbb
jge
lods
rcrb
scas
inc
dec
aam
and
mov
cmpsb
xor
dec
js
mov
ds
mov
adc
jg
nop
jae
inc
cltd
pop
adc
jge
mov
stos
inc
mov
out
adc
push
aam
enter
mov
mov
mov
push
pop
add
nop
outsb
pushf
jae
decb
dec
adc
sub
cmpsl
imul
nopl
adc
fisttpl
and
std
pop
data16
sub
jnp
xchg
push
sub
mov
pushl
pop
sub
cltd
fwait
iret
xor
mov
incl
xor
xor
cmp
and
adc
xlat
or
js
push
pusha
scas
lods
xchg
movsl
lds
icebp
call
cmpsl
pop
dec
lret
pop
imulb
mov
mov
xchg
rsqrtps
cmpsl
insl
mov
aam
mov
xor
mov
ljmp
push
lahf
mov
movsb
and
loopne
in
ljmp
mov
test
ret
cmpsb
fsubs
pop
push
subb
jge
outsb
push
mov
test
cmpsb
add
push
xor
aam
jp
incl
add
mov
clc
decb
add
imul
cmp
mov
dec
sub
and
lea
jnp
iret
jmp
sti
sub
ficoml
lcall
decl
jge
insb
fsubl
jns
outsb
or
sbb
inc
xchg
jb
mov
jbe
push
adc
faddl
data16
fcomip
sbb
aaa
jnp
pop
mov
and
jo
je
gs
pop
dec
xchg
xchg
sub
aaa
sbb
jmp
jb
sub
sahf
stc
mov
add
push
std
add
and
outsl
clc
pushl
pop
sbbb
push
push
popa
fbstp
or
ljmp
movsl
mov
loop
push
sub
and
dec
xchg
mov
icebp
popf
pop
jns
cld
out
and
xor
leave
mull
xchg
divb
push
test
xor
push
decl
dec
lea
cmc
cs
shl
mov
sarb
and
les
mov
lcall
lods
insl
ljmp
xlat
icebp
push
adc
sbb
cmp
inc
sub
in
xlat
insl
or
mov
cmp
ds
sbb
aad
fildl
cmc
xchg
incl
lods
pop
aad
dec
in
jb
mov
jno
and
push
scas
inc
mov
and
ret
push
jl
mov
or
and
jg
add
add
cmc
or
bound
jmp
mov
push
mov
inc
stos
jnp
addb
push
mov
lock
mov
mov
mov
fistps
jg
add
add
jne
pusha
mov
xchg
sub
pushl
push
dec
imul
ds
xchg
loope
cmpsl
cwtl
arpl
sbb
imul
cli
aas
std
jg
outsl
push
pop
sahf
mov
mov
stos
pop
sub
movsl
push
jne
fcom
pop
testb
sbb
xchg
repz
jmp
aaa
mov
add
jecxz
addr16
stos
pop
push
rcll
data16
mov
adc
jmp
push
rcrl
adc
xlat
popf
and
push
ljmp
xchg
lds
push
in
pop
pop
lea
adc
aad
cmp
cmp
rorl
cld
das
cli
cli
fsubr
jnp
outsl
test
loope
imul
js
les
jo
and
inc
ds
cmp
push
call
push
cmp
inc
out
sub
mov
pop
mov
fcoms
jle
aad
icebp
call
jmp
arpl
add
inc
mov
mov
ret
mov
lods
xchg
mov
shrb
int3
and
outsl
and
jns
movsl
jb
mov
cs
rolb
mov
shl
xchg
fisttpl
push
imul
incl
into
sbb
pop
hlt
in
sub
mov
rcll
cmpsb
or
push
cs
or
xor
push
dec
lock
xor
mov
mov
mov
ljmp
ljmp
fisubs
cmp
and
sbbb
xorb
cld
aas
dec
inc
sbb
push
notl
dec
jno
sub
sub
cmovae
inc
gs
push
and
test
xor
call
std
out
inc
das
addb
mul
jmp
adc
ret
int
mov
insb
cld
xchg
test
aas
loope
repnz
call
and
pushf
mov
jno
cwtl
mov
je
into
in
xchg
sub
scas
xchg
sub
jecxz
fmull
cmp
xchg
pop
push
mov
dec
and
call
mov
shrl
cmp
lods
fnstsw
out
fistps
or
lahf
mov
leave
push
ret
scas
js
sbb
cmp
scas
xchg
push
push
cmpsb
inc
lret
aad
mov
cmp
ror
out
icebp
addb
push
repnz
ljmp
mov
mov
rcrb
adc
cmp
jnp
dec
pop
xor
xor
call
fcomps
sub
adc
cmp
out
imul
mov
out
stc
test
add
ret
jecxz
mov
jp
fisttpl
aam
ja
js
cwtl
mov
cmp
in
pop
pop
jo
jmp
add
jle
pop
or
cmp
jg
mov
leave
and
xchg
mull
mull
shl
lcall
mov
jmp
loope
jl
pcmpeqd
scas
sbbb
xor
and
or
sti
loop
cmp
dec
ljmp
in
sbb
and
push
scas
repnz
fisubrl
sbb
add
out
lds
xchg
jle
sub
inc
ds
lcall
cmp
add
jp
cli
call
insb
movsl
dec
imul
sub
outsb
ds
xlat
add
jp
sub
jbe
popa
testl
mov
fildll
iret
lock
xor
mov
sahf
or
cmpsl
inc
cmpsl
mov
adc
xchg
sbb
sbb
test
push
leave
adc
loopne
incl
rorb
mov
fcoml
pusha
adc
push
pop
and
sub
xor
scas
pop
incl
xchg
lret
xlat
inc
xchg
int
jp
jns
pop
jne
jne
mov
sahf
and
filds
test
fs
sbb
sub
adc
nop
xlat
xor
ljmp
or
adc
movsl
mov
stos
test
into
push
sbb
icebp
aam
imul
or
cltd
adc
push
xor
je
lcall
or
pushf
pop
or
pop
bound
arpl
mov
inc
and
cmp
or
or
hlt
into
lret
popf
clc
or
add
push
int
out
mov
push
adc
ds
jmp
popa
cmp
adc
push
sub
inc
lock
testb
jnp
popa
dec
gs
sbb
jb
test
sub
aaa
es
jg
jmp
xchg
rcrl
and
and
jp
das
pushl
clc
das
cli
xor
das
xchg
ja
mov
jle
sub
sbb
aad
jle
inc
shll
pop
hlt
jmp
jb
pop
inc
in
mov
push
mov
call
jl
fisubrl
mov
fdivrs
jno
lods
push
fst
loope
mov
ljmp
sub
pop
sub
jmp
mov
pop
subb
jbe
out
ljmp
clc
pop
loop
mov
xchg
cs
dec
fstpt
push
xchg
shrb
enter
ljmp
sti
aaa
je
mov
sub
cmp
dec
pop
inc
push
push
ret
inc
cli
xchg
outsl
clc
or
into
pusha
popf
lcall
ret
jne
ljmp
lock
fcmovnbe
inc
pushf
push
out
inc
cli
jge
sub
call
lahf
addb
into
fwait
pop
movsl
loopne
sbb
push
test
inc
push
mov
or
jmp
dec
stos
xchg
pop
out
sub
sarl
add
pusha
sahf
and
sar
mov
enter
fistpl
sbb
push
adc
xor
mov
decl
push
mov
addr16
adc
cmpsb
sahf
cmpl
incl
and
es
and
std
nop
icebp
fmull
add
adc
lods
fwait
sub
incl
xchg
pop
xchg
xchg
fimull
ficoms
call
shrb
fs
inc
mov
inc
test
mov
in
popa
test
xor
fdivrl
clc
mov
incl
test
punpcklwd
insb
dec
fnstsw
jle
repz
pop
pop
test
decl
pop
push
jmp
pop
add
cmp
ret
std
fstpt
cltd
imul
ljmp
inc
xor
rcrl
cmp
es
ljmp
aad
outsb
cmp
aam
out
xor
pop
lods
or
aad
int3
mov
aas
les
dec
out
stos
repnz
je
adc
lock
clc
adc
cmp
cmp
lock
mov
out
cs
sub
add
call
push
and
lods
mov
ret
add
push
aaa
bound
xlat
imul
lods
cmpsb
les
mov
lcall
or
sbb
out
lock
cmp
xchg
pop
enter
and
jnp
jns
jge
int3
add
push
sti
scas
mov
ljmp
orl
rclb
int
mov
cs
pop
inc
push
addr16
jle
cmc
sti
sub
fmull
jae
sti
inc
into
jo
adc
int
pop
mulb
lret
sbb
and
inc
cli
call
push
out
sahf
cmpsl
cmovns
mov
gs
mov
fistps
repnz
adc
mov
fisubrs
mov
xor
sbb
jb
cmp
lods
fldl
arpl
nop
enter
or
pop
sub
xor
jbe
ja
sbb
mov
sti
rcll
jmp
fidivrl
cld
sub
inc
dec
inc
call
imul
add
lcall
in
push
add
dec
inc
pop
sbb
fnstsw
mov
outsl
aad
ja
mov
filds
pushl
sub
cli
stos
cmp
stos
adc
decl
rcr
scas
fcoml
jmp
pop
test
sub
xchg
jbe
out
call
repnz
imul
pop
push
lcall
xor
cmp
mov
cmpsl
js
enter
out
cmpsb
mov
in
bound
jno
sti
lcall
push
js
data16
call
mov
jns
push
inc
ljmp
inc
or
pop
xor
mov
shl
mov
popf
fidivrs
les
roll
inc
popa
pushl
lahf
or
push
jmp
ret
jl
mov
lods
sqrtps
sub
sbb
mov
jg
xchg
imul
ds
xor
mov
lahf
jge
mov
sbb
hlt
lcall
inc
xor
aas
sub
pop
mov
and
jo
cwtl
inc
es
filds
inc
cmp
das
lods
jp
mov
sahf
mov
sbb
idivb
dec
mov
in
call
xchg
pusha
push
xchg
cmc
in
sbb
iret
sbb
iret
inc
jge
mov
test
xor
call
outsb
pop
repz
out
fldl
sub
lds
icebp
cmp
dec
out
ret
xor
inc
mov
push
xor
ret
outsl
mov
lods
stos
push
stc
shrb
dec
cmp
mov
or
and
add
movsl
adc
jns
add
mov
dec
sbb
shl
xor
sbb
aad
jae
test
popa
adc
cmpb
fistpl
gs
ljmp
cli
outsb
shrl
cmpsl
push
sub
pop
fwait
or
mov
mov
jb
arpl
es
call
popf
test
mov
adc
lods
sbb
fstp
lods
bound
lahf
pop
jo
call
dec
ds
and
mov
fimull
jns
xchg
out
cmp
test
adc
addr16
mov
cmp
jecxz
mov
mov
adc
inc
cltd
lret
adc
or
clc
pushl
popf
mov
jecxz
or
xor
jg
sahf
call
jmp
mov
mov
insl
in
aad
sub
incl
cmc
int3
xor
out
int3
out
enter
inc
fistps
mov
ljmp
aas
loope
jns
movsb
mov
mov
repnz
shrb
hlt
mov
xchg
cmp
mov
int
cld
cmp
pop
pop
jmp
in
repnz
call
rcrb
cmp
das
hlt
jbe
ss
adc
inc
hlt
lcall
mov
negl
out
fs
mov
dec
js
call
lcall
mov
pop
outsb
or
inc
insb
jo
iret
dec
sbb
jmp
dec
xchg
pop
dec
add
mov
dec
dec
into
fidivl
adc
push
jecxz
test
je
ljmp
push
mov
mov
pop
filds
pusha
hlt
fbld
xchg
aam
test
aas
mov
push
add
push
ljmp
in
mov
cwtl
mov
sarl
bnd
test
jo
and
xchg
insb
mov
shlb
hlt
pop
shrb
push
cmpsl
adc
test
mov
add
push
dec
andl
stc
icebp
jne
xlat
and
cli
ljmp
pop
frstor
fs
xchg
and
pop
aas
inc
setp
pusha
mov
sbb
jge
and
fcomip
fdivrs
imul
call
stos
jg
pop
imul
pushl
cld
mov
popa
mulb
inc
xlat
cmpsl
imul
ja
pop
in
mov
ret
test
jmp
inc
sub
gs
mov
ficoml
js
fs
daa
clc
fwait
out
xor
ror
xchg
mov
mov
pop
and
lahf
jmp
cmp
mov
jnp
jno
aaa
lahf
out
insb
sub
test
jae
mov
sub
cwtl
sub
inc
ja
lods
add
divl
dec
inc
mov
jl
call
out
arpl
jb
enter
lcall
mov
imul
xchg
aaa
call
sub
in
hlt
imul
push
pop
push
sbb
loope
lahf
mov
mov
add
mov
jl
mov
add
mov
jnp
decl
sub
mov
xchg
mov
mov
scas
xor
int
lret
mov
jne
data16
or
fisttpl
jae
jle
out
ret
rcrl
addr16
push
divb
pop
mov
adc
ljmp
fs
and
orb
mov
adc
push
ret
fbstp
fwait
push
lods
adc
and
add
mov
incl
out
std
xchg
or
out
outsl
sti
test
mov
ss
mov
data16
loope
aaa
std
lcall
mov
mov
add
sbb
loopne
dec
mov
sarb
fnstenv
mov
dec
into
arpl
je
jns
insb
fstl
aas
adc
or
push
jg
ljmp
test
sub
pop
shr
in
out
mov
sbb
push
cltd
inc
cmc
push
lahf
sub
jmp
lods
push
mov
ds
push
je
das
test
jle
pushf
mov
add
das
sarb
ret
mov
pushf
cmc
sub
cmp
mov
inc
fisubl
mov
inc
lret
mov
daa
pop
jg
pop
sub
pop
jg
pop
lock
xchg
cld
jge
inc
decl
leave
adc
int3
adc
fldl
in
into
mov
fstpt
inc
xor
lds
cli
sbb
shll
icebp
xchg
dec
mov
xchg
fsts
andl
decl
cmp
xor
test
int3
fists
mov
mov
pop
out
pop
mov
mov
push
jg
jmp
call
fstpt
push
xchg
sub
mov
out
mov
aas
sub
ljmp
addr16
sbb
out
flds
in
xor
adc
push
out
cmp
sub
leave
cmp
pushl
rorl
jg
rolb
addb
out
dec
aad
push
in
jmp
rorb
dec
sbb
in
push
lods
icebp
scas
or
adc
cmp
ja
inc
pushl
jge
ss
inc
leave
loope
sti
leave
outsl
cmp
dec
mov
jbe
fdivr
jmp
xlat
lods
movsl
pop
cmp
add
fcompl
add
adc
clc
or
int3
xchg
pop
add
cli
incl
inc
push
lret
cmp
push
cld
ljmp
mov
add
jne
incl
es
repnz
add
inc
xor
loopne
and
sub
fdivrs
dec
ss
lock
mov
scas
adc
loop
in
add
xchg
cmp
jmp
cmpsl
insb
jp
imulb
cmp
test
xchg
xor
bound
fsubrs
aaa
mov
ljmp
xchg
imul
push
sahf
mov
push
dec
and
mov
scas
clc
xor
jge
or
inc
mov
push
lcall
dec
push
mov
leave
xchg
out
int3
outsb
cld
inc
outsl
lret
enter
incl
push
data16
push
and
adc
and
rol
and
jmp
inc
cld
lcall
addr16
pop
mov
daa
jo,pn
sahf
xor
push
call
loop
cmpsl
jb
pop
jle
cmp
ret
out
mov
test
les
sub
imul
mov
mov
loopne
stos
mov
incl
js
loop
jb
and
in
aaa
fadds
out
rcll
shrl
push
cld
aas
popl
xchg
test
imul
jnp
mov
popa
cmpsb
adc
jmp
push
fidivrs
fcompl
adcl
cmp
cwtl
jl
mov
lods
cmpsb
sbb
push
fwait
xchg
xchg
pop
or
xchg
mov
scas
mov
sahf
inc
mov
cld
jp
pop
dec
mov
push
int
mov
cwtl
mov
jne
cmp
cld
sub
jae
mov
icebp
jg
sbb
xor
add
mov
xchg
sbb
repz
pop
imul
lret
dec
out
adc
mov
fldl
sti
lds
out
lcall
xchg
test
cmpsb
adc
dec
dec
movsl
push
lret
xor
cld
pushl
xchg
data16
push
ret
mov
testl
stos
ja
call
cli
sub
es
lds
lcall
push
icebp
sbb
mov
fwait
or
scas
jecxz
xchg
and
dec
cmc
nop
push
adc
mov
lahf
xchg
ljmp
pop
outsl
pop
jecxz
into
xchg
rolb
pop
xchg
sar
ja
fistpll
out
jmp
xchg
icebp
cmc
ja
push
sub
inc
and
outsb
add
jg
test
sbb
out
add
popa
push
xchg
sbb
push
jb
scas
ds
scas
add
clc
std
push
rorl
test
cmpsl
push
loope
ret
pushl
loopne
fsubl
pop
out
jl
jno
sbb
mov
dec
jmp
inc
xlat
dec
mov
fwait
sbb
cmp
nop
push
ds
mov
xchg
hlt
outsl
cli
pushl
sub
aad
and
and
xor
lcall
int3
inc
and
dec
incl
push
cs
jnp
inc
push
movsl
sub
or
xchg
fstpt
incl
or
push
dec
cmp
sub
push
mov
daa
movsb
mov
cmp
dec
xchg
popa
shl
pop
or
mov
test
addr16
sbb
call
xchg
xchg
nop
push
xchg
outsb
jmp
daa
pop
xlat
pushf
add
xor
jae
cmp
mov
int
bound
adc
fidivrs
rcrb
mov
call
pusha
mov
sub
jns
dec
setle
in
test
sbb
cmpsb
xor
dec
clc
adc
testb
pop
daa
sbbb
adc
cmp
cmp
mov
add
decl
test
js
add
dec
jmp
mov
scas
push
inc
sub
add
inc
test
out
and
mov
jg
lods
sahf
adc
pop
sub
scas
mov
mov
daa
repnz
lcall
lret
pop
xchg
xlat
add
rcl
jae
mov
dec
fcomip
insl
mov
and
xchg
hlt
cmp
mov
sbb
movsb
lahf
xor
or
and
je
and
push
dec
and
add
jmp
outsb
fnsave
dec
or
pop
popf
or
decl
enter
xlat
cli
inc
stos
adc
cmp
icebp
pop
pop
dec
pop
or
push
movsb
xchg
inc
pushf
jmp
cmp
test
jecxz
lea
push
mov
xchg
xchg
popa
testb
and
lds
aaa
sbb
cmp
or
ljmp
test
decl
cmp
shrb
gs
lahf
fnstcw
scas
xchg
or
hlt
andl
lcall
outsl
mov
sti
imul
inc
scas
mov
inc
mov
jecxz
ljmp
cmp
outsl
out
xchg
add
fld
ds
push
lods
lcall
iret
adc
test
addr16
sub
xor
mov
pusha
push
cmp
cmpsl
fs
mov
call
push
mov
mov
loope
arpl
cwtl
int3
mov
push
pop
lock
jp
mov
jmp
movb
cmp
xchg
jecxz
cmpsl
sbb
aam
xchg
mov
out
adc
decl
add
mov
in
add
sbb
push
add
inc
fsubr
pop
std
decl
xchg
pop
dec
js
fisttpll
push
enter
mov
mov
pop
and
loop
adcb
dec
adc
cmpsb
sbb
call
sbb
leave
xor
int3
fcoms
mov
les
dec
rcl
inc
add
xchg
faddl
test
fists
insl
fadd
pop
aas
cmp
inc
inc
mov
into
pop
cld
incl
lcall
and
cwtl
mov
js
scas
jl
jne
inc
add
lock
popf
mov
filds
ss
movsb
dec
sahf
dec
dec
iret
mov
push
icebp
arpl
pop
lret
mov
pushl
clc
cmp
loope
inc
daa
shl
push
xchg
and
inc
sbb
add
rorb
xchg
fbstp
mov
popf
cmp
jl
aam
xor
inc
adc
rep
sbb
fcos
inc
icebp
ljmp
push
jecxz
mov
jno
push
mov
scas
jns
pop
sub
inc
mov
mov
gs
jnp
xchg
in
loopne
lock
mov
ret
rcrl
push
out
xchg
or
out
and
cvttps2pi
fildll
idivl
neg
jecxz
out
jmp
inc
lea
fdivrl
or
dec
fsts
xlat
cmc
sahf
mov
rclb
pusha
orl
cld
or
mov
or
mov
mov
ljmp
inc
mov
jo
cmc
inc
push
gs
or
lds
enter
mov
subl
rolb
frstor
mov
jae
inc
popf
out
sti
mov
sbb
xor
xchg
orb
loop
mov
shrb
cmp
xor
aam
add
xor
clc
mov
enter
push
pop
cli
lret
sarl
icebp
js
in
fildll
movb
fwait
stc
loope
addr16
jmp
xchg
lcall
inc
push
insb
sbb
leave
rolb
jbe
mov
testl
stos
cli
mov
pusha
cmp
lahf
imul
mov
mov
je
mov
clc
fisttps
jb
push
rcrb
mov
dec
sub
pushl
rcrl
aas
jl
push
testl
clc
test
sub
clc
jg
mov
xchg
xchg
pusha
popa
ja
push
adc
ret
mov
decl
rcr
in
lret
repz
lds
sbb
adcl
pop
incl
js
negl
inc
ret
jmp
dec
inc
xor
out
sub
ljmp
fwait
jae
nop
mov
cmp
pop
ja
mov
sarb
arpl
faddl
pop
out
pop
jl
mov
daa
inc
mov
xchg
ljmp
imul
and
push
nop
pop
or
mov
outsb
mov
or
jbe
sub
js
jl
push
enter
jecxz
push
add
repnz
test
stos
fdivl
rdtsc
aas
fsubs
rolb
push
pop
inc
jb
push
xor
sbb
rolb
movb
mov
outsl
mov
sub
shr
pop
fisubrs
in
pusha
lock
call
xchg
push
mov
inc
mov
adc
je
pushf
test
daa
lahf
lock
ljmp
add
cmp
out
iret
push
enter
imul
or
pushl
enter
push
mov
dec
mov
xchg
add
push
aad
ret
ljmp
frstor
clc
lret
dec
dec
test
movsl
jg
sbb
cmp
mov
xor
call
fisubs
repz
repz
lea
cmc
push
scas
cld
and
pushf
pop
ret
inc
dec
sub
jno
outsb
jmp
sub
testl
xor
sub
mov
xchg
xsha1
cmpsb
dec
js
or
mov
in
movsb
jb
incb
cwtl
push
pop
clc
hlt
pop
sub
dec
into
lret
data16
jg
lods
loop
daa
add
mov
push
lcall
inc
push
add
call
pop
icebp
push
ja
and
xchg
roll
call
ret
dec
dec
insb
mov
inc
mov
lcall
jbe
xchg
clc
lcall
push
jb
pusha
insb
xchg
pop
inc
mov
lods
sub
or
shrb
aad
add
call
or
jmp
mov
sub
xchg
sub
mov
inc
lock
movsl
or
into
rcll
adc
inc
cmp
ljmp
daa
xlat
push
mov
or
pushf
and
sub
xchg
pop
enter
dec
ret
loop
lock
or
xor
push
push
stos
jecxz
adc
xchg
or
push
xchg
repz
lcall
adc
or
hlt
nop
push
test
jmp
sbb
int
cmpsb
out
repnz
xchg
adcb
movsb
mov
fcomip
sub
movsl
pop
cli
lds
cmp
jo
aad
loopne
mov
cli
xchg
inc
popa
fcomip
cmp
mov
mov
out
jns
mov
fstpl
or
call
push
cmpsb
cmpsb
lods
add
adcb
fstps
andl
pop
rclb
bound
ljmp
pop
sub
lahf
mov
mov
ret
jp
jae
movsl
les
inc
clc
jb
movsl
mov
les
mov
decl
inc
xor
push
sbb
mov
dec
inc
inc
mov
mov
into
mov
outsb
out
adc
jl
add
dec
mov
pop
pop
xor
push
xchg
clc
cmc
jp
push
les
fdivl
ljmp
test
scas
jne
into
ss
add
daa
add
outsb
outsl
es
jmp
enter
jnp
jg
mov
jp
pushl
cmpsl
push
addl
jecxz
dec
dec
inc
sub
and
daa
loopne
cmpsl
or
mov
mov
decl
notl
sti
mov
lret
lea
xor
stos
aaa
cld
xor
jmp
lret
decl
bound
popf
mov
dec
nop
jg
push
loop
sarb
call
mov
aaa
xchg
push
sbb
push
les
inc
add
scas
lcall
and
mov
cmp
fisubrs
js
sti
loop
and
js
loop
dec
jbe
xor
sahf
cmp
xchg
loopne
testl
fstpt
out
in
jnp
adc
xchg
ret
rolb
xchg
mov
xchg
bound
xor
and
stc
test
imul
dec
jle
mov
test
dec
dec
hlt
pop
jbe
clc
sbb
ljmp
hlt
xor
test
jle
cmpsb
mov
fwait
mov
mov
dec
fistpll
cmp
fs
cwtl
push
dec
pusha
ljmp
add
push
test
jl
xorb
xor
mov
aas
mov
or
pop
aad
jge
or
insl
sti
jae
neg
dec
test
adc
xor
int
pop
out
pop
sar
dec
shrb
jae
loopne
and
add
iret
lea
lret
stc
pop
mov
ret
xchg
mulb
inc
jno
sub
loop
pop
ljmp
sub
adc
shll
xchg
icebp
push
sub
mov
addr16
add
inc
lcall
test
xchg
xor
jmp
enter
shll
icebp
rclb
or
in
call
mov
mov
in
fists
or
push
xor
incl
sbb
ljmp
mov
mov
xchg
and
sbb
call
pop
push
mov
fisubrl
fisubs
mov
popf
sub
decl
add
add
push
cmc
and
xchg
cmpl
test
lds
mov
inc
rclb
ret
adc
push
sbb
lods
cltd
ljmp
cmp
into
and
adc
or
aad
push
and
outsl
adc
test
jno
je
jne,pt
dec
ljmp
cmpb
test
xchg
inc
push
push
jge
mov
add
cli
aad
lcall
call
mov
xchg
mov
jns
mov
mov
adc
cmpb
dec
sbb
dec
iret
xor
xchg
fsubs
lret
fisttps
rcrb
ljmp
jne
xchg
mov
push
seto
and
pop
or
cmp
in
jmp
fs
aas
fiaddl
xor
fnsave
lock
call
mov
andl
inc
or
inc
fwait
inc
ret
test
outsl
mov
add
cmp
push
cs
ja
loopne
lret
or
push
ss
xor
idivl
mov
mov
test
loopne
pop
adc
fdivp
xor
rol
cwtl
sar
data16
xchg
mov
cmp
fimuls
dec
in
mov
jge
call
pushf
stc
arpl
stc
leave
ret
pop
nop
stc
or
dec
mov
addl
lea
or
jmp
js
mov
fwait
and
in
mov
stos
in
sub
xchg
pop
cmpsl
mov
imul
sarb
imul
dec
or
or
mov
addl
pop
cmp
je
jae
call
mov
adc
inc
adc
mov
mov
mov
pop
jmp
mov
fs
ret
call
inc
adc
pop
mov
idivb
xor
lret
pop
arpl
and
push
mov
jg
fidivs
hlt
cmc
adc
dec
cld
popa
or
cmp
ffreep
hlt
push
icebp
js
incl
mov
cmp
loope
or
jne
int
test
inc
imul
clc
mov
jbe
jg
scas
xchg
test
sbbl
mov
in
imul
lods
mov
jmp
add
inc
pop
sbb
sub
and
mov
daa
push
fcmovu
ljmp
add
or
add
cmc
pop
cmp
enter
jnp
stos
out
sub
decl
in
mov
bound
sbb
andl
cltd
adc
popf
cmp
clc
pop
cmp
jbe
shrb
daa
fisubs
mov
mov
push
mov
cmp
mov
cmpsb
sub
pushl
jmp
mov
bound
enter
pop
fs
adc
adc
fisttps
pop
stos
cwtl
jae
jg
incl
loope
add
adc
push
inc
mov
mov
and
jecxz
push
mov
mov
cmpsl
dec
scas
into
pop
dec
xchg
dec
cld
jo
sub
cltd
repnz
dec
iret
sbb
fnstcw
ret
sti
mov
jae
push
aam
dec
out
or
inc
stc
inc
incl
js
push
cmpb
push
push
mov
cmp
push
insb
push
cmp
call
add
or
test
or
xchg
jnp
xor
adc
out
jl
outsl
into
incl
clc
and
inc
lret
call
push
inc
add
cmp
decl
mov
add
pop
pop
ds
pushl
mov
dec
pop
adc
jge
dec
out
popa
push
decl
negl
sti
cmp
pop
add
inc
movb
rclb
cld
decl
cmp
les
xchg
and
mov
adc
jg
sub
lahf
imul
test
filds
or
pop
cwtl
mov
add
aas
mov
jae
jecxz
mov
stc
xchg
je
dec
ret
scas
hlt
mov
fidivl
mov
sub
push
mov
call
adc
push
cmc
jnp
jnp
and
mov
out
mov
incl
jle
shr
adc
test
les
jo
iret
das
xor
or
cmp
test
cld
call
data16
lods
dec
and
fidivl
sub
add
push
mov
dec
mov
xor
xor
and
jg
mov
stc
adc
xor
stc
mov
lret
jle
ljmp
inc
addr16
cs
fidivrs
rcll
popf
adc
mov
inc
insl
push
pop
lcall
mov
mov
mov
jge
add
icebp
lret
mov
decl
roll
sub
mov
ljmp
insb
cs
jl
mov
rorb
xchg
cmpsl
sahf
cmp
ds
aas
jbe
push
cmp
loop
loop
jno
out
test
scas
iret
xchg
mov
sub
xor
add
or
movsb
out
aas
adc
xchg
jo
in
add
or
scas
xor
jg
data16
xchg
mov
mov
mov
cld
and
mov
add
inc
xchg
movsl
sbb
fisubrs
fdiv
mov
mov
iret
insb
test
cli
fnstsw
jle
ljmp
pushf
jae
ljmp
xor
aam
jb
xchg
cmp
sbb
ljmp
fsubrp
std
xchg
hlt
push
mov
jmp
lds
aad
in
roll
push
sarl
ljmp
rorl
out
loope
es
incl
cmpsl
shr
clc
je
rorl
push
push
dec
mov
sar
push
sbb
pop
xchg
cli
jbe
cmpl
add
add
jnp
rep
aam
push
hlt
enter
movsl
jae
pop
jne
push
inc
and
mov
jnp
imul
sub
adc
fidivrl
bound
out
nop
shll
call
push
and
push
std
inc
jg
mov
adc
or
das
mov
inc
cmp
adc
scas
clc
incl
adc
movsb
push
jmp
cwtl
xchg
orb
push
cld
cmp
push
or
jg
add
cli
cmpsb
stos
mov
fdivrs
sub
in
pop
popf
stos
sahf
inc
testb
in
or
icebp
ljmp
mov
push
and
sti
bound
vsqrtsd
mov
movsl
jmp
push
push
mov
pushl
cmpsb
loopne
add
inc
ret
push
sbb
popa
or
add
jmp
lock
adc
ja
mov
lahf
or
call
daa
sti
stc
jbe
lahf
sub
aad
push
dec
push
adc
mov
jb
fmul
dec
insb
cmp
pushl
or
and
and
mov
imul
shl
shl
xchg
daa
rcrb
outsl
push
mov
xchg
xchg
stc
xor
xor
test
inc
decl
sahf
xor
mov
icebp
subb
test
sbb
aaa
std
pushl
push
jno
loopne
push
loope
xchg
jge
cmp
xor
sahf
sub
jmp
cmpsl
dec
sub
jae
loop
jl
stos
jg
loopne
rcr
jmp
mov
mov
movsl
push
fistpl
push
fbld
jge
stos
jb
xchg
or
or
idivb
scas
in
xor
adc
lret
xchg
jae
in
shll
add
dec
cmp
incb
bound
jae
jg
je
dec
insl
jo
dec
adc
and
jo
xor
fdivs
loope
les
out
mov
mov
dec
call
ret
push
sti
icebp
out
iret
mov
or
jg
sub
scas
adc
dec
inc
clc
mov
sub
xor
and
sub
pop
mov
dec
push
sahf
jbe
decl
add
in
loopne
pop
data16
cmp
xor
lcall
mov
push
fs
sub
aad
xor
fwait
cmp
mov
mov
mov
jecxz
stos
out
xchg
pop
jg
pushl
or
sub
or
sbb
add
pop
sbb
adc
dec
int3
add
pusha
xor
or
loope
lea
xchg
pusha
xchg
xchg
mov
vmulsd
pop
addl
outsl
test
adc
mov
cmc
data16
fisttps
jmp
stc
inc
push
mov
sti
loopne
cltd
aam
mov
dec
sub
cld
pop
or
movsb
lods
and
sub
repz
hlt
cli
dec
push
jno
mov
jg
jae
xchg
dec
inc
inc
rolb
adc
movsb
clc
pop
xchg
inc
xchg
dec
ds
incl
es
ret
repz
adc
hlt
jno
xchg
lods
in
insb
xchg
jmp
outsl
jle
out
ss
outsl
movsl
ret
shl
add
jne
mov
std
test
adc
outsl
repz
push
out
pop
mov
and
cmpsl
sar
or
loopne
test
sub
push
and
dec
aad
adc
xchg
mov
bound
sub
mov
out
les
incl
scas
imul
pop
lods
xlat
ret
shll
dec
add
fidivrs
scas
pop
iret
cwtl
mov
pushl
dec
popf
or
aaa
sbb
ja
movsl
nop
in
xchg
rcr
adc
inc
int3
cmp
dec
and
clc
ljmp
lock
pop
addl
ljmp
into
into
mov
cwtl
push
in
or
xor
dec
mov
jle
out
jmp
cli
pop
mov
pusha
jne
idivl
or
sub
sub
inc
pop
pop
sub
dec
or
imul
adc
orl
ret
stos
cmp
orb
and
add
jnp
xlat
pusha
daa
das
mov
bound
dec
js
sbb
jmp
sub
add
pop
push
xchg
sbb
in
scas
pushf
xchg
and
ds
sub
jl
inc
repz
decl
outsb
fstps
sbb
xchg
loopne
test
pushl
mov
mov
lock
xchg
jg
xlat
inc
pop
pushf
rcrl
push
jo
lock
dec
mov
sti
cmp
fimuls
pushl
repnz
pop
test
mov
sub
aad
in
imul
incl
sbb
mov
jge
dec
mov
and
je
ss
cmpsl
das
push
outsl
ljmp
inc
pop
sbb
cltd
xor
push
pop
xchg
mov
daa
std
mov
pop
xlat
loopne
dec
cmpsl
or
aas
fsubp
iret
addr16
aaa
mov
pop
pop
cwtl
or
pop
xchg
les
stc
ja
mov
pop
loopne
adc
cmp
xchg
addr16
roll
mov
outsl
cli
jmp
or
pop
out
xor
push
sub
in
cmp
les
jmp
xchg
popf
aad
pop
xchg
mov
xchg
cmp
loop
mov
outsb
movsl
sbb
call
mov
mov
jnp
jl
in
scas
inc
mov
lods
movsb
incl
jae
xchg
mov
cmp
push
ret
xchg
leave
xor
jle
es
gs
jp
adc
ljmp
leave
xchg
inc
jmp
movsb
in
fs
jne
cmp
daa
cmp
stc
imul
call
das
cmpsb
inc
jg
inc
sub
or
and
jae
dec
xchg
repnz
xchg
inc
jge
dec
lret
pop
gs
popf
aas
daa
xor
scas
stos
rorb
fwait
movsb
ss
jbe
aam
call
mov
inc
add
push
adc
xor
dec
pop
hlt
dec
pop
out
pop
mov
cmp
shlb
lret
jnp
int3
push
pop
sbb
sbb
push
lret
mov
and
mov
and
jnp
call
movsb
sbb
popa
inc
out
jecxz
incl
or
cld
xchg
pop
scas
testl
mov
and
test
sub
mov
pop
repz
jle
jg
mov
loopne
pusha
dec
adc
cmp
jmp
push
fldt
repnz
jmp
out
es
xor
inc
ljmp
pop
and
push
or
jnp
jmp
aaa
cwtl
rcrb
shrl
sub
das
jecxz
mov
call
xor
jmp
addr16
ja
cmp
aaa
fstl
mull
pop
dec
clc
inc
cwtl
adc
lods
mov
sub
nop
jae
push
fwait
loope
cmpsl
adc
cwtl
mov
ljmp
add
aas
dec
and
sub
into
jno
aam
pop
std
sbb
mov
jnp
ds
push
stos
fstl
mov
mov
cmp
mov
mov
out
mov
xor
ljmp
lock
into
ljmp
rcrl
push
les
jge
shrl
test
loopne
scas
jl
inc
jne
inc
nop
in
push
inc
add
push
push
jne
dec
in
pop
sbb
cmc
jmp
rorl
jo
and
jmp
insl
loop
out
mov
or
adc
lcall
adc
loopne
mov
stc
arpl
cli
ljmp
inc
fdivrl
xchg
sti
jg
ljmp
pop
out
push
insb
icebp
mov
sub
fbstp
dec
outsl
jb
arpl
jae
ljmp
and
adc
sub
xor
call
aas
adc
or
jb
testl
imul
mov
in
cmpsl
adc
cmp
lock
ljmp
add
cmp
cmp
lds
bound
sub
incl
lcall
subl
pop
xor
push
jmp
adc
jg
dec
dec
fisubs
icebp
hlt
push
loop
add
test
call
and
hlt
adc
inc
cli
lock
or
jle
sub
and
shll
jae
add
or
data16
cmc
pushf
aad
mov
jle
jns
inc
xor
add
mov
mov
int
mov
xor
icebp
dec
call
inc
xchg
push
or
dec
or
mov
test
xchg
adc
test
or
stos
inc
in
xchg
push
mov
xor
ficomps
call
mov
into
xchg
push
push
lock
stos
lcall
dec
clc
data16
mov
adc
jge
inc
cld
dec
das
enter
push
ss
sub
stos
jg
ss
inc
lea
idivb
pusha
cld
and
push
rolb
pop
das
sbb
inc
fwait
xchg
xor
pop
hlt
ljmp
push
loop
dec
mov
std
inc
push
adc
loope
mov
lcall
scas
mov
pop
fsub
faddl
dec
or
les
jmp
pushl
std
jp
clc
out
cmpb
stos
pop
es
mov
in
sbb
fisubrl
mov
ljmp
aam
rcrl
subb
mov
inc
fbstp
cmp
jle
por
rcll
push
xor
xorl
mov
jmp
das
insl
fisttpll
popf
insb
in
cltd
pop
xchg
adc
mov
pop
pushl
movsb
cli
sbb
aam
shrb
cmp
cmc
fisubl
idiv
mov
gs
dec
dec
lods
addr16
movsb
pop
xor
mov
mov
pushl
lods
in
insl
inc
mov
iret
jle
mov
push
mov
ss
loopne
add
call
push
in
sbb
fwait
movups
cmp
and
xchg
adc
fimuls
push
mov
sub
jmp
mov
outsb
inc
xor
xchg
mov
nop
jns
mov
nop
lods
subb
or
test
xor
mov
mov
mov
mov
test
xchg
cs
cmp
stos
mov
ror
inc
inc
pop
loopne
add
cmpb
add
in
add
std
inc
aam
adc
pusha
add
ja
les
jmp
push
lret
sub
imul
fwait
daa
dec
mov
in
out
insb
rcl
jg
movsl
dec
sbbl
sarb
inc
imul
stos
arpl
xchg
and
fisttpll
fisubrs
ljmp
mov
mov
add
dec
mov
lods
jge
jbe
enter
lret
outsb
xchg
sbb
decl
push
xor
cmc
or
jns
lret
jbe
stos
pop
ret
loopne
fwait
add
adc
inc
bound
mov
decl
data16
mov
pop
fimuls
sbbb
xchg
mov
incb
mov
jl
aad
mov
mov
aaa
lods
mov
aad
cmp
jo
pushf
push
push
mov
jmp
clc
lcall
idivl
dec
bound
adc
rcr
into
mov
mov
cmp
out
ret
jle
daa
in
mov
cwtl
and
ja
daa
add
add
je
xchg
ss
push
dec
aas
sahf
mov
in
sub
jle
aam
leave
mov
push
rcrl
adc
out
push
mov
mov
ds
pop
dec
sub
sti
jp
rcll
mov
jl
inc
movsb
push
inc
test
jne
fildl
nop
inc
pushf
loope
loop
outsb
js
pop
orl
call
cmc
xchg
fidivs
jp
jae
roll
cltd
inc
jecxz
into
fidivrs
pushf
mov
mov
into
push
ljmp
mov
je
add
inc
in
incl
insb
and
bound
cld
ja
fldl
insl
cmpsl
aaa
rclb
mov
adc
mov
jnp
std
mov
xchg
fsubr
es
cmp
test
test
jmp
fisubrl
repz
push
nop
xor
xchg
mov
ds
mov
in
inc
add
decl
loopne
loopne
mov
mov
cwtl
lds
inc
fcomps
incl
mov
inc
jg
mov
dec
pusha
iret
bnd
push
into
stos
add
inc
or
pop
popa
loop
call
push
pop
xchg
cmpsb
dec
dec
dec
stos
ret
inc
mov
push
shr
xor
inc
mov
insb
inc
loop
in
and
sbb
mov
data16
fucomp
lock
or
mov
mov
dec
in
mov
fdivs
mov
mov
push
daa
daa
in
ljmp
shl
xor
pusha
sti
cmp
mov
mov
push
xchg
gs
mov
sub
pop
xor
cmp
leave
movsl
fwait
int
mov
sub
mov
push
or
out
add
sub
inc
adc
insb
movsb
outsl
cmp
mov
pop
mov
stos
repnz
hlt
xchg
ljmp
mov
cmp
mov
pop
sub
pop
clc
pop
js
adc
adcl
lcall
fdivrp
mov
shlb
dec
add
mov
fbstp
jl
sbb
mov
dec
rcl
jmp
incl
jecxz
inc
add
lret
push
pushf
xchg
sbb
and
jnp
mov
inc
out
push
data16
pushl
insl
fs
es
ret
and
outsb
in
dec
pop
rcl
push
shll
adc
push
ds
call
in
mov
mov
sub
ret
mov
mov
inc
das
clc
jmp
stc
adc
mull
xor
inc
arpl
jne
xor
lret
out
jmp
cltd
jp
push
jge
iret
sbb
sub
mov
punpckhdq
push
decb
xlat
jmp
cmpsl
and
cs
xchg
or
clc
push
xchg
cmp
mov
jg
movsl
fldt
outsb
ja
adc
push
jb
push
out
push
xorl
mov
rol
inc
sub
xor
or
xlat
bnd
orl
pushl
dec
icebp
mov
mov
data16
rorb
inc
dec
sub
cmp
mov
orl
in
xchg
into
xor
cltd
push
jle
pushw
push
rorb
sbb
sub
xor
aas
bound
sub
bound
jbe
pop
lds
mov
adc
sub
repnz
fldpi
jp
daa
shr
xchg
add
in
lahf
and
pop
fcmove
fsub
push
sub
fcomip
push
mov
xchg
sub
mov
or
arpl
jp
ja
push
xchg
fiaddl
pop
xchg
jmp
test
jmp
rcrl
inc
and
lcall
pop
push
cld
or
sbb
xlat
adc
js
inc
lock
cmp
jg
mov
mov
push
rcll
scas
pop
cmp
leave
mov
ret
fisttpl
push
xchg
dec
fbld
movsl
ds
mov
pop
mov
adcl
xor
xor
jno
push
cltd
jo
arpl
ss
xchg
jg
das
dec
mov
ret
xor
mov
and
pop
mov
sub
lcall
adc
inc
jo
cmp
ss
xor
sub
fcmovbe
stos
pop
push
lret
out
push
enter
push
lea
mov
push
aas
dec
scas
test
jmp
out
mov
stos
repnz
in
jmp
pop
int
add
shlb
inc
ljmp
imul
mov
notl
pop
and
lret
les
sahf
or
xor
gs
fdiv
mov
inc
dec
dec
test
clc
movsb
ljmp
dec
enter
and
xchg
mov
push
jmp
add
mov
call
mov
fstps
lcall
or
aad
jns
aad
pop
daa
add
xor
and
xchg
cwtl
lcall
loopne
decl
mov
outsb
push
xchg
push
fs
fsub
jl
or
xor
rorb
mov
decl
clc
mul
add
cmp
dec
pop
xchg
jbe
jge
data16
or
pushf
pusha
out
insb
es
jmp
int3
inc
shll
popf
pushf
cld
rolb
shrl
pop
fimull
jg
test
lods
cli
sbb
leave
push
popf
rorb
and
sub
add
out
push
push
movsl
cmc
dec
fwait
or
neg
mov
pop
add
insb
dec
stos
cmp
and
sbb
rol
push
andb
fistps
mov
fcoml
cltd
nop
push
les
daa
lcall
decl
sbb
in
movsb
cmp
sbb
roll
popa
stos
fistpll
dec
jnp
fidivs
arpl
ljmp
xor
lret
xchg
sub
sti
pusha
out
cmc
dec
test
js
insl
mov
inc
iret
xor
jnp
ret
jno
xor
pop
cmp
dec
decl
fldl
das
out
scas
sahf
mulb
loop
add
pop
adc
repnz
or
jle
ja
clc
push
lods
lea
es
aaa
sahf
jl
sub
jmp
pop
sbb
out
adc
mov
fstpt
adc
push
xor
ja
inc
jmp
xor
arpl
cli
mov
adc
iret
add
cmpb
insb
lret
stc
jb
add
pop
mov
pop
lods
adc
inc
xor
aas
xchg
test
pop
mov
test
jg
mov
in
add
cmpb
mov
fwait
mov
cld
das
mov
mov
mov
stos
out
jle
mov
fcomps
jmp
or
out
fcomps
scas
push
sbb
pop
imulb
inc
sub
repz
fwait
loope
mov
pop
pushl
int
pop
mov
dec
adc
and
in
push
pop
inc
cmp
xor
jo
fwait
mov
call
in
xor
cmp
xor
decl
gs
cmp
rcrb
lcall
jmp
jg
repnz
jg
out
dec
jnp
cltd
cld
or
mov
mov
jne
adc
les
or
cmp
mov
leave
sbb
add
decl
sbb
cwtl
test
cmpl
xor
dec
scas
mov
xchg
fcomps
insl
add
es
sar
pop
xor
inc
outsb
or
ja,pn
pushl
cmp
test
pop
push
sbb
int
push
lds
scas
pop
repnz
mov
call
sbb
in
addb
leave
inc
and
or
cmc
in
lcall
sti
jnp
sbb
repnz
ficoml
nop
dec
fsts
insb
mov
outsl
mov
fmuls
xchg
mov
fbstp
dec
sub
lock
ret
scas
cmp
mov
push
adc
xchg
movsb
lcall
adc
jmp
or
bound
clc
lock
add
int
jo
push
mov
add
or
scas
push
je
cwtl
mov
jo
jne
outsl
push
gs
cwtl
mov
dec
int
ret
les
fldl
or
pop
or
jo
push
inc
js
dec
push
fs
dec
bound
insl
push
jns
or
ret
jb
je
pop
dec
dec
test
imul
pop
pop
mov
jecxz
and
add
pop
in
dec
cwtl
rcrb
cmp
push
jb
mov
popa
jl,pn
inc
in
fs
xor
insl
fdivs
stos
push
or
cmp
loop
lcall
xorb
jne
bound
out
push
insb
adc
sub
inc
sub
sub
add
movsb
sub
xlat
or
and
addb
add
add
add
sbb
mov
dec
je
jo
cmc
fcmovb
pop
popaw
cwtl
sahf
js
xor
pop
sbb
scas
popa
mov
dec
or
push
scas
cmpsb
stos
mov
insl
inc
or
or
in
imul
mov
add
sub
andb
or
sbb
mov
ss
mov
push
dec
test
push
mov
shrl
xchg
add
adc
popa
jb
inc
ret
insb
into
push
stos
sub
xor
imul
inc
arpl
repz
push
pop
add
jbe
push
popa
ja
inc
xor
addb
mov
movsl
or
and
stos
and
mov
add
or
and
or
pushf
fwait
in
or
stos
push
out
cmpsb
adc
andb
shll
xchg
mov
aam
mov
adc
sbb
adc
add
cwtl
ja
add
xor
lods
test
addb
mov
cmp
cmp
push
xor
inc
or
add
add
adc
mov
cmp
stos
sub
sbb
aad
xchg
in
mov
roll
inc
rclb
fisttpl
or
or
bound
or
addr16
mov
sub
inc
jmp
add
mov
inc
rcrl
adc
jmp
sbb
test
es
sbb
loopne
test
dec
push
add
notl
mov
adc
shlb
test
add
cmc
inc
lea
aad
rcrl
push
mov
jae
sub
rol
mov
es
orb
cmp
or
shll
add
mov
subl
xchg
mov
inc
adc
or
and
jno
mov
stos
mov
xchg
push
add
bound
test
stos
sub
dec
add
inc
mov
outsl
jne
inc
push
sub
sub
add
outsb
sub
push
shlb
xor
jae
outsb
pop
adc
out
push
insb
insb
xor
xchg
add
adc
add
mov
jecxz
adc
or
mov
or
ds
addb
and
movsl
stos
ja
loope
sub
adc
add
inc
test
push
dec
add
arpl
sub
inc
pop
xchg
adc
adc
dec
test
pop
and
xor
sub
or
orb
sbb
push
ret
xchg
cmp
movsl
mov
mov
test
adc
pop
adc
jge
popa
add
inc
sub
insl
mov
bound
adc
adc
subl
loop
aam
loope
js
adc
xor
inc
test
aad
sub
rolb
test
setg
add
inc
lods
inc
inc
inc
xor
sbb
aaa
adc
jecxz
mov
stos
xchg
sbb
or
sub
add
add
inc
test
and
shlb
or
and
sbb
adc
xchg
repz
je
and
xor
test
lret
fs
aaa
xor
loop
mov
sbb
fwait
add
loopne
xchg
push
mov
push
adc
jae
or
sbbb
and
adc
test
subb
adc
pop
or
add
inc
adcl
cmp
adc
iret
sbb
popf
adc
mov
inc
sbb
faddl
sbb
xor
inc
and
inc
inc
call
arpl
adc
and
pop
adc
xchg
and
bound
mov
sub
add
inc
mov
popf
and
dec
push
cmp
pop
add
lea
insl
and
push
cmpsl
adc
and
xchg
mov
add
xor
push
adc
rorb
test
cmpsl
imul
mov
mov
add
imul
add
add
inc
lahf
adc
test
mov
xor
adc
lcall
inc
mov
adc
iret
add
sub
and
and
subl
push
dec
aaa
adc
and
lea
push
sub
dec
popa
aad
xlat
pop
add
xor
daa
xor
push
sub
adc
mov
adc
or
adcb
add
inc
xchg
push
adc
arpl
mov
je
sub
xchg
jns
inc
inc
or
and
adc
jne
or
add
push
mov
fstpt
movups
stos
popf
addb
insl
xor
loop
pop
add
adc
dec
mov
cwtl
lods
adc
sbb
mov
jno
pop
test
inc
sbb
mov
inc
adcl
jno
add
adc
mov
mov
or
cltd
rolb
subb
test
test
push
shrb
test
test
flds
test
test
add
push
push
dec
stos
lcall
pop
adcb
jne
add
lcall
jecxz
and
add
test
adc
add
fwait
imul
test
and
add
filds
push
sub
adc
sub
xor
mov
test
ret
add
or
inc
dec
dec
inc
mov
adcb
or
mov
shl
pop
rolb
icebp
stos
outsb
sub
push
adc
xor
push
add
imul
mov
xchg
push
je
ret
lea
push
inc
or
add
and
orl
adc
or
sub
xorl
inc
dec
mov
push
lds
std
and
popa
adc
xchg
lds
or
imul
add
les
add
xor
and
sbb
test
add
mov
jle
push
inc
push
dec
add
add
add
add
in
pop
sti
add
push
inc
add
adc
mov
mov
pop
add
prefetcht1
es
lea
mov
or
cmpsl
or
fildl
orb
add
cs
orb
mov
dec
and
cmp
pusha
rolb
mov
ret
fld
jo
popa
mov
mov
div
or
add
shrb
push
mov
testl
inc
in
insb
mov
pop
imull
push
or
dec
jae
dec
ja
repnz
xchg
dec
clc
divl
add
push
dec
xchg
incl
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
adc
add
sbb
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
in
add
add
add
pop
adcb
adc
and
sbb
xor
xor
cmc
loop
jmp
push
ret
dec
loop
nop
cmpsb
jns
xor
push
mov
loop
mov
jmp
cmpsl
bound
outsl
jle
jmp
or
js
je
add
mov
adc
push
cmp
dec
jge
in
fstpt
sbb
ret
xchg
aad
out
add
mov
fcmovne
inc
loop
jg
ja
cmp
fmulp
inc
inc
mov
mov
xchg
push
cmp
add
das
call
stos
negb
outsb
fimuls
sub
incb
sub
cltd
and
mov
jp
cmp
lret
imul
icebp
add
push
aad
cmp
xchg
inc
xorb
cmpsl
push
pop
dec
mov
lea
movsb
cld
sub
and
push
push
dec
jg
push
loopne
loope
xchg
popa
or
xchg
in
add
and
mov
test
add
cmpsb
adc
and
outsb
xor
hlt
mov
fs
cmpsl
ror
sarb
mov
or
dec
xchg
bts
sub
inc
cmc
scas
pop
shll
fcoml
dec
or
and
adc
hlt
movsb
in
mov
int3
inc
das
mov
daa
hlt
test
jne,pn
test
and
sbb
jnp
cmpsb
shlb
test
in
pop
pusha
dec
gs
sub
imul
cltd
mov
adcl
mov
or
push
push
test
das
mov
pop
sbb
scas
test
mov
int
xor
lcall
sbb
sbb
jmp
hlt
inc
xor
dec
pop
ret
loop
adc
rclb
mov
mov
outsb
andb
push
inc
inc
jo
adc
cmp
adc
jge
adc
pop
sub
add
test
adc
lea
adc
lcall
add
sub
adc
in
adc
add
add
repnz
add
add
adc
add
add
sbb
adc
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
arpl
xor
add
outsb
push
ja
outsb
jae
popa
jb
cs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
gs
jae
jb
popa
insl
gs
js
add
inc
insb
insb
push
outsb
jb
imul
jb
gs
add
addr16
jb
push
inc
popa
jb
push
xor
imul
