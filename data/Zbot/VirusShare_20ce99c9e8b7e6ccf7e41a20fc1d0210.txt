xlat
out
lds
cli
ja
addl
cld
jno
inc
mov
scas
cs
arpl
xchg
stos
les
iret
add
dec
test
into
sbb
test
xchg
movsb
and
test
xor
cwtl
xor
dec
mov
mov
inc
addr16
mov
and
pusha
lret
add
das
mov
push
adc
loope
adc
shlb
xor
ror
xor
rcrb
sbb
inc
cmpsb
xor
ret
push
push
int3
nop
lretw
xor
sti
nop
inc
loop
push
lea
mull
cmpsb
fists
pop
mov
rorl
mov
xchg
test
pusha
ret
jp
and
inc
dec
jle
or
push
lret
mov
cmp
test
loop
add
leave
jecxz
test
dec
stos
hlt
and
add
inc
sbb
int
adc
mov
orb
push
and
leave
jecxz
test
cld
dec
repz
loop
push
popf
cmp
push
dec
testb
sbb
dec
mov
std
in
pop
and
inc
movsb
mov
lds
xchg
fbld
imul
xchg
ret
lret
test
cld
dec
or
jl
add
sub
cmc
out
cmp
out
adc
movsl
loopne
adc
lock
inc
dec
mov
dec
inc
xchg
and
adc
pop
lret
std
lea
inc
jl
dec
jle
or
mov
les
dec
or
xor
ljmp
in
cmp
fcmovnb
out
dec
dec
je
inc
xchg
jbe
lahf
sbb
je
mov
mov
and
cs
dec
or
aas
repnz
inc
adc
shll
cmpsb
cmp
jbe
add
jbe
mov
mov
cmpsb
push
mov
or
xchg
out
dec
or
inc
out
andl
pop
push
hlt
mov
lret
add
sub
inc
cli
xchg
cld
in
dec
inc
mov
adc
adc
insb
or
inc
pop
test
dec
inc
cmpb
nop
call
inc
pusha
test
dec
inc
dec
clc
xor
shll
push
addl
and
xchg
xor
push
and
jle
inc
inc
inc
push
hlt
xor
cwtl
sahf
int3
dec
adc
add
mov
sub
adc
dec
int3
dec
pop
call
pop
sub
dec
mov
lret
pop
jae
xchg
push
inc
mov
ret
ret
pop
rcrb
jb
sub
mov
stos
jbe
movb
jge
rorb
rorb
inc
dec
mov
or
jne
leave
xlat
andl
mov
adc
inc
movsb
xor
das
jl
inc
mov
scas
lret
push
das
mov
sarl
js
fwait
sbb
adc
and
test
pop
add
aas
and
add
loopne
and
adc
out
and
adc
fists
push
mov
scas
lret
add
or
jne
lea
dec
andb
das
xor
xor
fbstp
push
mov
inc
lcall
lcall
aad
rcll
cld
dec
mov
push
repz
fs
jp
and
inc
sub
inc
push
cmpsb
in
mov
enter
adc
stos
mov
ret
add
inc
mov
out
lret
dec
adc
std
xchg
hlt
xchg
or
clc
test
adc
inc
test
pop
stos
loop
cli
push
and
xchg
xchg
dec
or
and
test
mov
sbb
and
clc
test
aaa
clc
ror
and
iret
aaa
rclb
out
aas
dec
inc
lret
in
out
or
inc
dec
xchg
push
pop
mov
inc
js
mov
inc
js
dec
adc
in
dec
fadds
std
dec
imul
in
movsb
xor
or
cld
in
aaa
sbb
cmp
dec
divl
rclb
ljmp
hlt
dec
and
or
sbb
sub
dec
or
mov
clc
add
pop
std
dec
imul
in
movsl
xor
inc
push
cmpsb
xor
dec
pop
ljmp
cmp
add
or
xchg
test
mov
in
mov
in
out
or
inc
ljmp
cmp
jno
and
jae
std
enter
je
inc
clc
mov
es
push
or
xor
pushf
jo
pop
jo
cmp
popf
pop
mov
je
inc
movsb
mov
cmpsb
out
ljmp
push
es
mov
mov
add
adcb
jle
inc
clc
jbe
cltd
jp
fcmovbe
aad
push
add
int3
adc
dec
int3
dec
jbe
pop
or
xor
push
and
test
and
test
movsb
repnz
into
jbe
dec
dec
inc
dec
ljmp
fsubrl
cld
or
or
pushaw
inc
inc
stos
xor
stc
or
int3
hlt
mov
fmuls
and
or
pop
es
dec
dec
pop
push
leave
sub
and
cld
dec
mov
xlat
ret
cmpb
out
sbbb
filds
and
fldl
std
imul
inc
lret
add
out
aaa
je
lret
add
dec
cmpsb
mov
loop
ret
xor
push
test
inc
cmpsb
or
js
sbbl
adc
inc
je
lret
add
push
and
cmpl
inc
lret
add
dec
les
out
cld
dec
inc
lret
add
dec
cmp
inc
cmp
sbb
clc
push
leave
cld
or
xchg
lret
in
sub
js
inc
movsb
mov
add
jp
inc
je
subl
cmpb
jmp
mov
dec
adc
out
jb
inc
je
dec
lods
xor
dec
sbbl
add
gs
lea
sub
js
lret
add
adc
add
adc
inc
push
xchg
cld
dec
loopne
iret
and
inc
sbb
add
jge
fimull
rol
ja
mov
in
add
add
fidivrl
adc
jb
enter
and
xchg
call
lahf
add
and
lock
int3
scas
ffree
and
mov
jecxz
fisubrl
mov
mov
jnp
adc
mov
pop
xor
xor
cmc
aad
mov
iret
sti
and
lret
addr16
xor
xor
mov
jle
jb
loop
rol
mov
insl
ss
daa
shl
jmp
js
mov
add
imul
ljmp
and
repz
xchg
mov
sub
push
popa
test
push
or
add
cmp
xchg
imul
mov
test
out
lret
les
insb
jl
sub
xchg
sahf
mov
fnstsw
out
jno
out
int3
xchg
insb
and
dec
jno
clc
addr16
jmp
divb
add
cmp
adc
push
in
mov
xchg
repz
and
mov
ret
xchg
pop
pop
sub
and
cmc
pop
mov
clc
mov
push
pop
jno
shrl
cmc
enter
cli
leave
in
js
ret
inc
pop
jns
lods
pop
jge
popf
stos
aad
push
add
cwtl
lret
out
bound
ds
cmp
cmp
xchg
pop
ss
xchg
mov
sbb
fnstcw
out
xchg
lret
test
push
add
repz
lock
mov
inc
cmpsb
test
clc
mov
scas
rolb
lret
xchg
mov
in
mov
pop
fucom
repnz
pop
lcall
bound
outsb
shll
js
dec
in
les
inc
dec
xchg
lcall
pop
mov
sub
sub
test
push
lret
and
shr
jnp
sub
loopne
loopne
xchg
mov
in
mov
cltd
cli
mov
jmp
push
inc
imul
push
aad
dec
xor
fisttps
push
push
jecxz
pop
mov
dec
xchg
pop
jo
in
xchg
lcall
and
adc
test
js
gs
ja
and
cmovge
fldenv
fisttpll
jmp
lock
imul
add
inc
ret
xlat
leave
cmpsl
inc
dec
and
lds
cmp
and
ja
jno
mov
sub
pop
js
stos
or
shl
pushf
ret
cmc
push
pop
adc
sarb
mov
xor
and
pop
jp
sub
ja
aaa
cmp
std
mov
lret
ret
lret
jmp
in
int
add
mov
jno
dec
rcl
dec
pop
mov
inc
lock
add
dec
or
divl
or
pop
and
mov
mov
cmp
loop
shl
cld
add
dec
ret
pop
lock
xchg
sub
and
enter
cwtl
pop
clc
mov
push
dec
jmp
pusha
test
lods
xchg
inc
sub
mov
je
nop
xlat
push
push
mov
mov
int
fwait
shl
dec
xor
mov
or
adc
mov
arpl
xchg
and
cmpsl
popf
sbb
loope
data16
mov
pusha
mov
sbb
and
push
lods
mov
popa
rcl
test
js
push
mov
inc
xchg
addr16
fisttps
sar
jne
mov
push
jl
xchg
icebp
xor
and
jg
outsb
popa
mov
shll
inc
loopne
int3
movsl
adc
and
scas
xor
das
push
jg
lahf
in
jmp
push
das
es
inc
test
dec
cmp
aam
mulps
xchg
outsl
insl
pushf
shll
cld
add
xor
and
mov
push
sub
push
lret
hlt
mov
xchg
mov
movsl
fisubs
dec
mov
pop
and
cmp
mov
mov
pushf
dec
fadds
pop
mov
inc
add
lret
mov
fstl
pop
inc
test
sbb
aas
pop
sbb
push
test
pop
jne
pop
stc
cld
mov
pop
sub
xchg
rorb
adc
dec
jle
cld
sar
aas
add
push
fiadds
dec
clc
movsl
ret
or
ljmp
mov
dec
or
dec
fisubrs
mov
movsb
stc
cs
pop
sub
and
jge
sbb
push
push
testb
lret
mov
pop
sub
sbb
repz
cs
clc
in
mov
pop
xchg
add
repnz
xchg
or
or
or
cmp
aaa
pop
ljmp
arpl
and
sbb
xchg
jp
je
dec
or
stos
mov
jbe
push
and
push
and
xchg
jae
ja
rcrl
lret
stc
movl
fimull
jl
and
movsl
mov
add
mov
lret
inc
or
repnz
shlb
mov
pushf
dec
call
lea
push
fistl
inc
and
clc
je
cli
gs
push
xchg
cs
jae
shlb
pop
inc
xchg
mov
repz
pusha
cmp
jae
rcr
ljmp
mov
jns
jo
arpl
mov
jle
sbb
xor
iret
mov
inc
mov
mov
movsb
pusha
repnz
sbb
in
fcoms
mov
add
add
cld
dec
ljmp
sarl
jecxz
pop
adc
loop
pop
ljmp
sbb
bound
mov
lret
xor
test
test
xchg
clc
dec
leave
add
into
fcmove
out
push
lret
and
xchg
jne
enter
js
jl
cmp
mov
xchg
dec
dec
fadd
xor
arpl
mov
jmp
jnp
dec
mov
imul
inc
push
test
stos
adc
ljmp
gs
and
add
mov
and
add
xchg
xor
add
dec
add
cmc
lds
sbb
subb
lcall
xchg
pop
dec
pop
inc
pop
aam
sbb
jmp
es
push
xor
mov
lock
sti
out
sbbb
adc
pop
jns
dec
jns
pop
inc
sbb
into
pop
leave
jecxz
mov
hlt
mov
push
lea
cmp
push
push
pop
add
dec
xor
lahf
bound
cld
mov
cli
notl
inc
xchg
clc
lret
xchg
shll
inc
out
jge
mov
and
into
mov
pop
add
xchg
pusha
leave
push
or
dec
add
jb
out
cmc
call
mov
aad
push
jne
jb
adc
pop
mov
aas
lret
jp
in
stos
xchg
aad
add
inc
cmp
gs
sbbl
popf
inc
xchg
je
jmp
ficompl
xor
inc
xor
ja
dec
jmp
pop
cmpsl
call
or
pop
cmp
push
mov
push
mov
daa
call
jge
out
jne
add
jle
into
or
add
dec
sub
jne
xchg
push
imul
dec
sub
adc
insb
gs
lahf
xchg
jo
jns
int
fsubr
or
nop
mov
fcmovnbe
test
sbb
dec
jmp
fsubrl
or
or
mov
pop
stc
sbb
dec
imul
cmp
mov
clc
sahf
sti
lahf
ret
xor
jns
push
add
add
into
loope
js
outsb
mov
loopne
icebp
pop
jmp
les
and
and
arpl
xchg
lret
stos
pop
pop
fmull
and
or
mov
fisttps
jnp
xor
or
std
push
sub
cli
aas
cld
cmp
and
rorl
push
insb
cmc
es
dec
jp
ds
adc
lea
push
into
pop
cmc
imul
jge
xor
int
push
fmull
icebp
daa
imull
add
sbb
js
xor
movb
mov
idiv
xchg
ret
dec
mov
pop
pop
ljmp
cltd
push
mov
push
lock
das
movsl
es
pop
jbe
shr
lret
popf
arpl
std
push
cmpsb
das
mov
and
sub
je
fdivs
add
test
aaa
xor
stos
bound
push
ret
inc
int3
mov
fisttpll
inc
mov
jmp
or
xchg
test
lret
xchg
jns
mov
jb
and
das
arpl
jge
push
sub
aad
inc
add
jge
iret
lret
ljmp
inc
movsb
negb
mov
fs
mov
mov
xor
sub
mov
push
jecxz
xor
imul
js
pop
jp
iret
xor
mov
out
repz
mov
mov
cmpsl
sub
jmp
push
es
fidivl
out
dec
jge
mov
pop
sub
cltd
loope
sub
or
cmp
lret
mul
ja
lods
mov
sub
adc
enter
js
in
aad
pop
in
pop
in
mov
cmpsl
cmp
jae
dec
cmp
sbb
aam
inc
test
imul
popa
mov
scas
add
lret
mov
xchg
out
mov
xchg
pop
jb
and
lods
fdivrs
loop
cmp
xchg
xor
mov
mov
and
xchg
sub
ret
and
and
cmp
and
fimuls
fdiv
pop
mov
in
cmp
stc
outsb
cmp
xor
js
mov
xchg
test
add
lds
jo
inc
add
shlb
test
dec
enter
jle
push
daa
adc
leave
or
add
or
lret
push
mov
stos
loop
ja
lcall
out
cli
out
cmp
pop
mov
or
cmpsl
cld
or
rcrl
or
xchg
shlb
adcb
mov
cmp
test
daa
push
cltd
xchg
testl
imul
loopne
sbb
dec
clc
xor
or
jbe
mov
inc
cmp
aas
cmp
scas
lahf
testl
cli
and
pop
add
sbb
push
out
scas
add
cmp
sbbb
mov
clc
test
mov
movsl
lods
arpl
sbbb
in
clc
test
test
add
test
jp
dec
or
or
dec
mov
lods
out
fwait
inc
nopl
outsb
jmp
clc
xor
mov
add
dec
arpl
in
pop
in
xchg
cmc
mov
or
cmpsl
inc
js
mov
mov
test
fs
mov
jo
sbb
push
add
lret
les
jno
mov
sahf
mov
aas
data16
lret
jmp
cmp
and
mov
push
clc
sarl
add
inc
mov
test
fcmovnb
push
test
pop
cmp
pop
les
arpl
cmp
aad
loopne
and
popa
test
fnstcw
loopne
into
add
dec
loop
mov
ss
jmp
sub
mov
xchg
push
arpl
test
jo
push
out
test
cmc
mov
out
stos
mov
movsl
stos
ret
aaa
mov
adc
adc
jge
push
out
pop
outsl
icebp
shlb
int3
gs
mov
stc
push
dec
fdiv
jge
inc
fiaddl
cmpsl
xchg
cli
or
mov
fmuls
pop
clc
call
cmp
cmp
scas
dec
outsl
add
mov
repz
dec
push
sbb
xchg
and
test
les
popf
psubusb
mov
push
pop
shll
movl
sbb
add
cmc
cmpsb
push
js
xorl
xchg
xchg
add
inc
inc
clc
psrad
wrmsr
mov
rolb
dec
stc
xchg
fisubs
mov
xchg
pop
and
add
sbb
stos
mov
sti
push
sahf
cmp
adc
fisttpll
mov
out
push
lcall
add
int
dec
xchg
std
imul
jl
and
orb
clc
rcrb
inc
cmc
imul
push
loope
cwtl
dec
or
sbb
aaa
repnz
cmc
insl
pop
movsl
sub
pushf
repz
call
sbb
adc
daa
add
and
jl
lret
dec
adc
add
dec
out
lods
pop
or
xchg
pop
hlt
cmp
and
inc
or
cmp
stos
clc
jae
mov
mov
loop
xchg
and
dec
add
scas
pop
sub
push
and
lds
xchg
rolb
cld
rorl
xchg
inc
xchg
pop
sbb
je
fiaddl
js
push
out
ja
jo
dec
js
lea
flds
stos
imul
inc
pop
clc
ljmp
pop
xchg
mov
in
jno
test
mov
cli
dec
mov
std
pushf
xorb
loop
int
cmp
sarb
shlb
adc
pop
dec
push
push
lahf
lods
mov
push
xchg
and
xlat
jle
or
mov
vcomisd
mov
xor
inc
dec
gs
shlb
data16
fcomp
or
fisubrl
and
lret
xchg
in
jns
sub
movsb
icebp
mov
pop
push
insl
mov
xchg
les
or
shll
and
rcrb
push
fnstcw
ret
fcomps
xor
pop
adc
repnz
xchg
mov
lea
scas
lods
mov
fdivrl
mov
add
and
lret
insb
in
or
pop
cmp
ret
dec
or
lds
xor
mov
daa
in
dec
clc
dec
bnd
ret
in
add
dec
push
mov
inc
jmp
lcall
leave
shll
loop
xor
icebp
mov
mov
mov
inc
rclb
add
cmp
and
and
rcrb
ljmp
repnz
xorb
dec
adc
add
lret
fldl
bound
cltd
and
xor
pushf
fucom
rcr
or
mov
fst
adc
addr16
icebp
divl
cmp
clc
push
clc
mov
sub
jbe
dec
es
hlt
cltd
and
int3
movsl
xor
or
sbb
sahf
jno
or
aam
xchg
mull
dec
jecxz
jecxz
pop
ljmp
pop
mov
push
cmp
lret
jle
jp
fsub
mov
test
inc
xlat
cmp
jbe
sub
sub
int
mov
cmp
ret
push
dec
pop
xchg
mov
js
in
inc
and
insl
and
stc
or
stc
fldt
cwtl
loop
in
jbe
push
mov
mov
inc
gs
inc
lcall
imul
push
push
and
push
addr16
in
int
cs
or
mov
mov
adc
pushf
pushf
xchg
dec
out
icebp
push
clc
mov
sub
xchg
sbb
or
aas
aaa
push
mov
pop
sub
rcrb
pop
hlt
push
js
sub
clc
fiadds
movsl
push
shll
xchg
rcll
jb
inc
fimuls
shlb
fnstsw
push
mov
sbb
nop
shrb
test
mov
int3
lods
mov
xor
pop
mov
dec
mov
shrl
sbb
movsb
scas
adc
test
lahf
pop
insb
xor
out
ljmp
orb
in
aad
stc
scas
pop
js
sbb
idivl
les
dec
loop
out
cmp
fs
in
ss
sub
adc
mov
ja
icebp
rcrb
rorb
pop
inc
sbb
xchg
mov
aad
arpl
inc
jne
fnstcw
mov
sbb
cld
push
js
test
pop
das
jecxz
fs
fmull
stc
inc
pop
loope
mov
xchg
hlt
in
cmp
jecxz
sbb
in
push
js
sbb
sahf
and
add
js
adc
aam
clc
inc
xchg
popf
scas
jl
dec
std
sub
mov
adc
lret
insb
add
pop
lret
ja
jbe
jg
pop
adc
jmp
xor
daa
orl
adcb
in
lcall
rorl
dec
jnp
cld
mov
out
data16
out
lods
js
push
pusha
mov
pop
rcl
adcb
jp
dec
lods
lds
jl
xor
mov
js
add
pop
adc
lret
mov
nop
imul
xor
arpl
cmp
lret
mov
shll
mov
inc
loop
popl
dec
xchg
int3
and
icebp
mov
sub
ja
ljmp
mov
stos
insb
js
or
or
lock
sub
dec
fisttpll
into
mov
mov
pop
cs
sbb
fld
xor
enter
cmc
dec
mov
lea
aas
jg
dec
jno
hlt
shll
cmp
xchg
jno
push
lret
xchg
out
xorl
ds
add
dec
mov
std
mov
fcomp
jns
fmul
adc
push
cmpsb
inc
xor
or
lock
or
data16
adc
pushl
outsb
and
xor
lods
dec
outsl
movsb
add
dec
inc
lahf
mov
std
mov
cmp
and
test
ljmp
fsubrs
mov
cld
dec
jnp
and
cmp
xor
jmp
fwait
in
and
sbb
int3
mov
mov
movl
cmc
fdivrs
loopne
rcrl
jno
xchg
test
dec
mov
add
ja
aam
sub
lods
mov
or
jp
jb
bound
in
push
cli
sub
mov
push
pop
mov
inc
fdiv
xchg
pop
inc
or
hlt
popa
sub
adc
xor
and
in
add
dec
pop
xchg
cld
fisttpll
mulb
xor
dec
xor
aaa
dec
decl
jle
push
popa
cli
mov
ja
flds
mov
imul
dec
mov
jbe
push
push
clc
bswap
xchg
mov
adcl
rcrb
test
cmp
test
stos
jnp
inc
clc
push
in
addl
sub
adc
and
dec
sub
jge
lahf
jl
jno
test
mov
mov
push
iret
subl
mov
pop
sbb
das
clc
fdivs
mov
add
dec
sbb
movsb
pop
fdiv
arpl
sbb
add
jne
lret
ret
adc
in
xchg
test
insl
dec
jle
movsl
rol
and
lret
mov
sub
inc
dec
push
test
push
xor
lahf
insb
mov
fildll
pop
das
clc
fucomi
xlat
cmpsl
outsl
jl
or
loope,pt
pop
jmp
jg
ret
add
sbb
lock
test
xchg
pop
mov
js
adc
adc
mul
repnz
aaa
jp
clc
repz
pop
jp
ret
pop
add
and
sub
lret
into
pop
mov
popa
add
cmp
mov
lea
push
push
cmpsb
push
rorb
dec
pop
mov
das
addr16
mov
or
shrb
xchg
sub
dec
adc
mov
cld
loope
inc
sti
mov
into
mov
mov
sub
push
pop
adc
add
xor
ja
dec
test
cmp
lea
jbe
mov
je
outsl
mov
jle
in
adcl
sbb
jl
ret
sbb
jb
adc
js
int3
sub
pop
dec
push
xchg
and
mov
js
jmp
mov
faddl
int3
add
imul
js
pop
dec
inc
bound
pop
adc
lret
movsb
sarl
popf
aam
sbb
fildl
subb
push
push
inc
or
imul
aas
das
mov
ds
pop
ss
testb
int
test
inc
aam
lret
push
add
sbb
out
mov
dec
sahf
push
ss
cli
fisttpl
out
or
movsb
das
aad
mov
dec
js
lds
gs
cwtl
fidivl
mov
sbb
orb
sbbl
push
dec
loop
mov
lock
int3
cmpsl
pop
js
sub
stos
cmp
xor
adcl
lea
ret
pushf
test
outsb
xor
arpl
push
jno
stc
insl
mov
repz
push
scas
test
mov
outsb
xor
imul
mov
pop
xor
jnp
test
xor
jnp
dec
loopne
mov
cwtl
jle
xchg
cmp
add
js
les
add
psubb
xchg
ret
sub
sbb
test
rorb
stc
div
cli
iret
xor
and
or
jno
pop
aad
js
and
sbb
xchg
sbb
push
into
xchg
xor
push
mov
or
and
push
jae
add
inc
imul
and
imul
xchg
ljmp
pushf
or
outsb
aad
sbb
int
movsb
imul
movsl
cmp
dec
int3
mov
push
cmp
cs
push
or
pop
push
sbb
lret
out
sbb
push
aad
add
ja
pop
jmp
pusha
fdivs
sbb
jecxz
outsl
push
js
xchg
mov
popf
into
pop
js
orl
xchg
fcmovnu
ljmp
shll
mov
and
int3
mov
int3
push
cwtl
cmpsb
ja
out
adc
sbb
xchg
or
imul
lret
inc
or
jge
pushf
mov
lea
mov
and
xchg
xchg
mov
pop
push
jne
xchg
out
mulb
adc
or
inc
js
popl
fwait
int3
jl
cs
arpl
iret
js
repz
ror
dec
adc
test
xchg
push
mov
orb
dec
and
jg
mov
or
pmulhw
dec
jp
dec
xchg
push
add
sub
cltd
and
cld
sbb
out
nop
or
clc
lods
sahf
sub
inc
cld
dec
mov
loope
in
xchg
mov
aas
or
inc
mov
jmp
lret
icebp
adc
stos
fptan
add
xchg
and
xchg
lods
or
adc
mov
sahf
iret
push
rolb
dec
mov
imul
cmp
sub
shrl
or
adc
xorl
xchg
subl
fmull
xor
stos
fwait
sub
roll
outsl
sub
pop
sub
stos
mov
add
les
insl
or
or
jmp
das
and
push
cwtl
mov
mov
and
iret
dec
inc
les
add
mov
add
dec
xor
pop
dec
and
out
push
pop
cmp
lcall
mov
insb
adcl
fnstsw
or
xor
or
dec
insb
or
loopne
test
mov
fdivrs
int3
stc
mov
cltd
stos
mov
stc
mov
fld
aaa
notb
test
test
shrb
pop
dec
out
sub
clc
cmp
lret
loopne
negl
leave
ret
sub
inc
xor
repz
sti
hlt
mov
pop
sarb
and
in
sbb
imul
xchg
lea
sbb
push
mov
enter
mov
hlt
shlb
pushf
test
stos
mov
enter
xor
pop
jb
jb
decb
call
and
shll
push
pop
pop
orb
adc
cmpsb
mov
or
mov
fdivr
mov
mov
add
imul
lret
fdivrl
mov
jno
mov
enter
sub
fcoml
or
add
lea
ja
ja
daa
jmp
mov
or
and
cwtl
lret
scas
in
daa
movsb
or
jle
repnz
mov
jns
or
lds
repnz
test
fsts
xchg
in
add
inc
rol
mov
arpl
jb
mov
adc
add
adc
nop
dec
js
xchg
xor
sub
and
popa
ljmp
push
inc
xchg
movl
fwait
lret
fwait
mov
sbb
pop
je
sub
mov
fists
jno
pusha
stos
jge
pop
rcll
add
sub
mov
cmpsb
cltd
adcb
dec
inc
enter
scas
pop
pop
js
push
dec
inc
dec
mov
testl
icebp
jae
orl
das
pop
mov
stos
cmp
xor
xchg
pop
mov
xchg
bound
test
in
cmp
cwtl
add
jp
fcmovbe
xchg
testb
test
loop
or
nop
outsb
push
fadds
mov
into
movsl
lds
js
push
mov
stc
cmpsb
outsb
sbb
xor
scas
and
cmpsl
jge
shll
and
jmp
mov
and
loop
retw
pop
add
jge
movsl
sub
outsb
ja
jnp
lret
test
fwait
push
add
inc
mov
or
lret
shll
test
jno
movsb
mov
mov
call
sub
fstl
shr
adc
out
lock
mov
sbb
pop
dec
and
xor
jnp
mov
sahf
inc
sbb
push
sub
xchg
ja
call
xor
dec
aas
pop
addl
push
ret
popf
aad
stos
sbb
cltd
and
xor
lcall
or
jb
and
clc
out
mov
insl
movsl
sub
cs
cmp
sub
or
pop
scas
enter
xchg
or
xlat
jbe
popa
test
cmpsl
mov
ja
lods
add
jno
shl
call
and
inc
mov
xchg
lcall
add
lods
jb
dec
lea
test
sbb
xor
or
jae
aaa
inc
push
xor
add
jge
adc
pop
js
mov
in
test
cli
sub
movsl
std
add
shll
loopne
pop
loop
arpl
jne
cmp
mov
mov
test
nop
mov
jae
aas
sub
test
sub
sub
jmp
pop
test
lock
jb
inc
imul
repz
jmp
loope
mov
dec
add
push
clc
sub
push
xor
xchg
nop
pop
cmpsl
shlb
in
mov
test
jge
ret
mov
mov
icebp
int
mov
in
jns
in
mov
insb
jmp
xor
dec
fs
loope
cmp
add
hlt
fnsave
popl
xor
jo
js
mov
into
clc
jecxz
cld
add
lret
sbb
adc
loopne
jecxz
scas
sub
popa
push
push
js
ja
fcmovbe
jecxz
divb
sbb
addr16
mov
mov
sarl
testl
pusha
lret
jmp
push
sbb
lret
cld
pop
pusha
adc
dec
jno
bound
in
mov
aas
out
push
mov
inc
push
hlt
imul
repz
xor
jae
in
lret
int
cld
push
dec
clc
popa
push
jne
test
fdivrs
ret
stos
out
jecxz
popf
sub
and
and
inc
out
test
repz
nop
test
jp
xor
and
les
repnz
in
popa
mov
jno
addr16
imul
mov
cmpl
mov
jl
bnd
xchg
sub
js
push
scas
arpl
pop
into
cmp
clc
mov
and
in
test
sub
jg
and
je
or
push
add
xlat
insl
cmp
mov
push
mov
mov
frstpm(287
repnz
scas
jne
divl
fisubrl
das
mov
lahf
pop
fwait
mov
jge
cli
inc
push
test
outsb
andl
inc
sbb
in
jno
add
aam
adc
cwtl
scas
mov
jbe
xchg
pop
cmpl
rcrb
pop
xor
sub
movsb
lods
dec
mov
movsb
in
jb
ljmp
roll
lret
mov
fs
stos
test
push
and
push
clc
adc
in
or
fidivrl
lcall
cld
xor
stos
test
scas
xchg
jae
inc
jg
sbb
mov
bound
mov
dec
repnz
cs
dec
clc
jmp
test
jl
cmp
in
mov
sbb
jae
jbe
sbb
xchg
pop
xchg
dec
cmpsl
sbb
and
dec
jnp
xchg
mov
sbb
mov
bound
jle
push
sti
nop
sarl
sub
add
imul
inc
test
dec
es
mov
pop
movsb
shrb
outsb
mov
repz
int
dec
popf
insb
jg
dec
arpl
add
cmpsl
add
clts
push
lahf
mov
cmp
repnz
xchg
mov
mov
sub
mov
ss
rol
inc
adc
imul
mov
mov
dec
scas
sbb
jp
dec
xchg
inc
pop
xchg
mov
push
push
imul
ja
sahf
mov
movsl
test
loopne
shlb
call
xlat
cmp
lcall
js
or
roll
lret
out
mov
sub
gs
mov
jle
mov
call
cmp
clc
push
push
jg
or
sub
add
mov
pop
ljmp
add
add
repnz
into
arpl
aam
fildll
je
ljmp
mov
cld
filds
outsb
sarl
stos
mov
xor
test
lret
pushl
insb
sarb
adc
or
adc
jbe
jmp
jle
or
imul
pushf
lods
sti
movsb
xchg
bound
pop
push
adc
aas
stos
sub
adc
inc
scas
cmpsb
inc
stc
add
mov
add
jl
inc
add
popa
mov
add
shl
push
clc
push
mov
push
es
cltd
lret
test
mov
dec
inc
daa
xchg
and
sarl
mov
add
add
daa
mov
sti
push
xor
and
mov
sub
repnz
push
fwait
icebp
rorl
or
dec
out
call
pop
cmpsl
adc
or
loope
mov
in
xor
lret
cli
in
jp
nop
add
xchg
pop
push
mov
loopne
fldenv
fdivrs
push
and
insl
push
pop
lock
fwait
mov
clc
add
xchg
xor
cmpsl
lret
mov
pop
cmpl
xchg
int
jp
adc
fmuls
push
adc
ds
movsl
mov
adc
mov
sub
adc
and
add
or
cs
clc
push
xchg
add
mulb
in
add
dec
pop
or
cld
adc
xorl
imul
adc
jne
ret
scas
pop
xchg
ror
or
stos
or
out
ja
mov
push
fidivl
and
mov
cltd
mov
js
inc
icebp
sti
sbb
pop
pop
iret
dec
xchg
inc
test
cmc
pop
pop
lret
mov
and
xchg
dec
pushf
icebp
mov
dec
test
scas
xchg
xor
jmp
cmp
inc
or
push
dec
out
ljmp
imul
push
pop
stc
and
lret
dec
push
popa
jne
insb
mov
fcoms
ret
push
cmp
xor
ljmp
imul
in
sbb
sub
mov
aas
jmp
outsb
rcr
mov
xchg
jmp
aad
loop
push
sahf
mov
mov
mov
lret
test
aaa
mov
ds
mov
mov
xchg
mov
sub
shrl
mov
push
and
cltd
lcall
inc
adc
fimull
xchg
stos
pop
clc
sub
lret
jge,pn
scas
dec
lock
xchg
stc
xor
loopne
sbb
jae
jecxz
aas
lock
push
add
jno
jmp
inc
and
inc
lret
sbb
divb
les
push
push
add
lret
inc
stc
add
push
sub
imul
ja
dec
ficoml
sbb
insb
repz
xor
fsubrl
aam
and
dec
xor
mov
mov
ret
jae
out
add
mov
cmp
jnp
xchg
mov
loopne
aam
push
xor
clc
pusha
mov
adc
ljmp
fnstenv
jmp
or
clc
call
sahf
cmpsb
jnp
popa
int
and
outsl
ja
jno
lcall
push
cmp
cmc
arpl
js
xchg
test
pop
pop
popf
jns
ljmp
and
xor
nop
mov
ja
fisttpl
xchg
sti
cmpsl
lret
call
add
bound
mov
add
lret
negb
dec
shlb
mov
xchg
mov
mov
and
sbb
or
mov
xor
lret
sar
mov
and
adc
popa
in
ljmp
pushf
adc
push
xchg
mov
jge
push
dec
pop
push
dec
testl
lret
lea
and
lret
add
lahf
loopne
loop
jl
dec
jo
cwtl
outsb
push
out
push
aad
js
popa
mov
fstpt
mov
pop
dec
dec
pop
mov
mov
fisttpl
out
sub
in
adc
ret
add
mov
xchg
lea
jno
push
addr16
cld
push
push
nop
sub
sbb
mov
or
push
lahf
repnz
popf
call
test
lret
push
cs
sarb
mov
sub
add
mov
clc
das
test
mov
orb
xchg
cwtl
int3
repnz
clc
rol
cmp
xchg
xlat
paddw
std
dec
arpl
sub
mov
test
cmc
push
sub
sub
dec
in
mov
sub
dec
mov
mov
shlb
icebp
inc
xlat
shrl
ds
sub
ret
mov
lea
cmp
cmp
sub
push
or
xchg
es
mov
test
push
mov
cmp
push
push
inc
aam
xor
movsb
mov
insl
pop
shrb
adc
loopne
iret
mov
rcll
decb
lret
and
xor
popa
pop
repz
scas
xchg
jno
js
xchg
inc
xor
mov
out
sbb
je
dec
je
nop
jo
repz
jp
incl
dec
xchg
rolb
add
push
adc
mov
mov
inc
xor
push
rclb
xor
fstp
daa
pusha
rcrb
inc
sub
movsb
push
sub
jecxz
jb
fwait
mov
lahf
mov
mov
adc
or
inc
adc
imull
mov
dec
add
test
loopne
cmp
iret
fdivp
sbb
jge
inc
mov
js
popa
js
aam
xchg
pop
ret
in
jbe
mov
nop
adc
outsl
mov
pusha
push
sub
dec
push
inc
je
scas
xor
ret
sub
adc
lret
scas
mov
fldt
pushw
add
lods
cmp
add
pop
dec
aam
addb
fmuls
gs
incb
dec
sbb
pop
sbb
inc
add
sbb
int
lea
lahf
loopne
dec
out
jns
into
and
push
and
ret
shl
sbb
mov
bound
push
xchg
jb
xchg
jbe
sub
jle
call
fmuls
mov
loop
hlt
fmull
sub
mov
cmp
add
mov
sub
add
sbbb
xchg
adc
ret
addr16
sub
sub
rcpps
mov
rcrl
jmp
shlb
sarl
outsl
push
mov
movsb
cmpsl
or
std
shlb
cmp
add
gs
pop
sbb
stos
and
or
pop
leave
and
mov
xchg
xor
in
fbld
ljmp
mov
mov
jae
jecxz
mov
and
andb
xchg
mov
inc
inc
xor
mov
sbb
insb
sbbb
xor
xchg
add
jge
sub
nop
jne
mov
rcll
push
scas
mov
jg
ficompl
pusha
out
fs
addb
test
insb
loopne
cmp
lds
xchg
xor
xchg
mov
jns
dec
sbb
pop
insl
xorl
sub
mov
fisubrs
jle
sbb
shl
jb
and
mov
jbe
loop
cltd
jns
in
xchg
cmp
arpl
mov
aam
xchg
arpl
sub
sub
iret
push
ja
js
adc
xchg
jo
in
add
dec
jle
clc
mov
js
mov
je
inc
mov
xchg
aas
cs
clc
push
mov
outsl
xorb
test
sub
lret
out
and
xor
scas
faddl
and
sub
in
jbe
adc
mov
xchg
mov
jo
inc
dec
daa
or
orl
mov
cltd
aam
xchg
mov
bound
std
adc
push
cmp
repnz
out
movsb
jecxz
ds
sub
out
sub
mov
mov
repz
jmp
add
ds
arpl
jmp
aad
std
jecxz
js
loop
or
sahf
in
mov
movsb
dec
push
lds
aas
inc
mov
mov
adc
dec
push
stos
fwait
or
inc
ss
xchg
cmpsb
adc
dec
sbb
xchg
inc
xor
sbb
pop
or
lret
cmc
je
inc
push
imul
in
es
push
call
stos
imul
add
add
mov
jbe
rcll
and
ss
addb
pop
rorb
jae
xchg
jbe
xor
mov
stc
or
mov
xlat
mov
sbb
cwtl
xchg
cmp
pop
cmp
jg
addr16
adc
or
mov
xchg
xor
or
mov
jne
js
mov
jb
jne
aas
clc
pushl
out
push
andl
mov
iret
out
dec
xor
sub
adc
push
decb
dec
out
out
arpl
mov
and
mov
fldt
pushf
xchg
mov
aam
and
or
out
cwtl
pop
gs
shll
in
mov
out
sbb
cmp
and
lods
xchg
xor
jmp
ja
inc
lahf
cmp
push
addr16
movsl
push
je
je
js
icebp
enter
sub
mov
lret
xchg
int
repz
sub
fcmove
fmul
call
sbb
push
or
ret
ss
push
in
xchg
shlb
push
es
sbb
push
push
push
dec
mov
mov
cmp
stos
and
cmp
movsl
out
hlt
and
out
xchg
pop
ror
add
jnp
mov
jp
ret
std
mov
hlt
out
inc
movsl
xchg
cld
stos
xchg
cmc
divl
xor
sub
lods
aas
sub
cmp
stos
mov
add
test
test
pop
das
and
insb
sub
not
jnp
cmpsb
xchg
push
aaa
xchg
lea
addr16
pusha
pop
dec
sub
testb
in
test
add
out
push
outsb
adc
mov
in
sahf
fs
clc
outsb
mov
xor
lcall
popf
xor
sbb
inc
insl
out
jae
adc
sub
int
out
sub
mov
and
or
inc
imul
rolb
scas
push
push
mov
mov
or
into
movsb
loopne
rclb
xchg
pop
cwtl
lret
inc
sahf
and
mov
insl
cmp
ja
test
push
ljmp
and
jp
mov
enter
push
cmp
xchg
xchg
mov
sub
push
add
loopne
nop
mov
rclb
dec
or
lcall
mov
and
mov
sub
xor
add
add
lret
loope
add
call
jns
out
xchg
clflush
sbb
cmp
mov
outsl
pop
mov
imul
ret
dec
imul
aas
mov
push
inc
outsb
mov
push
jns
jbe
xchg
inc
std
sti
xorb
lea
cwtl
lret
lahf
jle
outsl
xor
das
nop
pop
and
cmpsl
daa
sbb
lret
repnz
movsb
out
cld
rorb
xchg
cmpl
jmp
clc
std
adc
testb
jbe
cmpsb
aad
mov
pushf
mov
push
jp
sub
adc
jnp
push
in
js
pushf
adc
pop
insl
pop
add
addb
nop
cli
sbb
dec
lret
cmp
pop
jecxz
negb
adc
inc
loopne
dec
bound
ljmp
cwtl
daa
dec
fwait
push
xchg
loope
sti
hlt
pop
in
addr16
rolb
jp
push
xchg
or
adc
in
mov
cmp
dec
fidivs
mov
scas
or
out
gs
pop
mov
or
loopne
mov
aas
call
and
and
add
sbb
push
dec
mov
je
mov
pop
fsubs
xchg
fldl
add
popa
or
orb
mov
xor
jl
jg
and
pushf
cmpsb
hlt
mov
xchg
out
adc
jb
sarl
add
dec
ret
inc
jecxz
pop
aam
cld
push
mov
nop
jnp
lahf
fdivs
js
mov
in
mov
xchg
cmp
push
pop
mov
mov
stos
and
mov
mov
das
push
push
outsb
sti
fldl
daa
push
inc
sub
push
push
cld
lret
cmc
jmp
mov
push
jle
insl
pop
xchg
xchg
les
jo
imul
cmp
push
xor
add
jp
push
icebp
pop
xchg
hlt
testb
sbb
push
out
outsb
pop
xor
nop
inc
and
ds
imul
or
xchg
adc
mov
inc
mov
push
jno
and
sbb
mov
or
jge
push
sbb
mov
sbb
repnz
notl
ja
xor
sub
cmc
pop
jp
mov
add
imul
imul
addr16
fidivs
ja
mov
dec
pop
fcomps
add
sub
dec
mov
in
popa
push
xor
mov
dec
dec
inc
clc
xor
pop
push
into
stc
mov
adcb
aas
or
and
push
dec
in
xchg
gs
mov
loop
das
popf
lret
add
scas
jge
dec
fistpll
jbe
cmpsb
push
mov
pop
in
test
mov
jno
or
jne
mov
pop
push
push
sbb
clc
dec
aaa
mov
push
xor
repz
xchg
pushf
mov
insl
sti
fcomps
cmp
dec
aam
loopne
data16
lret
stc
clc
ficompl
xor
popa
iret
jo
xor
dec
and
jmp
adc
mov
lret
rcrb
push
cmp
push
movsl
cltd
or
xchg
or
and
mov
jp
mov
mov
pop
fdivrp
hlt
popa
movsb
mov
dec
dec
push
les
mov
add
pop
cmp
test
inc
cmp
arpl
cmp
mov
lds
mov
add
cmp
clc
rcrb
lret
orb
and
aaa
jmp
aaa
repnz
imul
sub
movsl
mov
pop
push
repz
notb
fnstcw
and
mov
gs
sub
inc
inc
dec
movl
clc
repnz
icebp
push
push
test
test
jmp
mov
mov
outsb
je
out
cmp
outsl
jmp
mov
ja
sahf
inc
jmp
enter
lret
sbb
xchg
in
int3
mov
and
pslld
mov
pushl
notb
sbb
js
daa
movsl
scas
mov
pop
loope
and
and
cmp
dec
aas
or
test
orl
mov
push
js
js
ds
or
sub
cmp
jne
sub
mov
adc
sub
mov
or
pop
adc
mov
pushf
cmpsl
hlt
add
dec
ficoms
leave
out
and
xchg
pop
ret
rorl
inc
add
fidivs
mov
inc
stos
inc
cmp
pop
cli
jae
test
xor
cmp
add
insb
or
loope
cmp
or
jp
xchg
stos
add
mov
pop
and
pop
sbb
push
inc
in
or
pop
adc
test
dec
adc
or
push
mov
cwtl
bound
jecxz,pt
pop
hlt
and
dec
bound
pushf
shr
jge
ss
cltd
xor
hlt
lret
std
push
cmp
mov
adc
jbe
dec
clc
sbb
mov
pop
adc
push
pop
std
mov
fisubl
cwtl
push
bound
jp
pop
in
sti
jb
cmpsl
sub
fs
and
arpl
je
jb
push
js
out
mov
jne
xchg
orl
ds
inc
add
cmp
fcom
fs
mov
mov
movl
mov
add
jle
ljmp
sbb
ficoml
jecxz
cmpsb
fadds
lret
xchg
addb
cwtl
aas
push
jl
mov
and
push
lock
and
std
xchg
insl
inc
inc
aaa
mov
mov
fsubl
iret
xchg
fiadds
pusha
xchg
and
jp
aas
push
rolb
test
adc
ficompl
xchg
mov
rclb
mov
insl
cmp
add
cltd
sub
inc
dec
push
repz
sarl
adc
movsl
lahf
dec
and
das
inc
mov
add
cmp
imul
dec
stos
je
fdivrp
mov
cmp
mov
and
xchg
mov
stos
push
popa
loopne
pop
cmp
push
lahf
sbb
mov
xchg
jb
xor
or
pop
add
or
js
gs
js
mov
fcomip
jl
lahf
dec
and
or
mov
push
jmp
pop
clc
aad
movsb
jae
mov
lcall
mov
popf
push
dec
pop
jmp
mov
mov
cli
push
sub
jle
xor
addr16
pop
adc
les
mov
jle
mov
xchg
sub
pop
imul
inc
clc
ljmp
ret
test
jl
xor
std
push
jne
mov
js
inc
mov
inc
xor
testl
imul
push
adc
inc
popf
dec
pop
subl
movsl
divps
jns
add
mov
orb
bound
cmp
add
xlat
mov
scas
cli
cli
mov
filds
test
jecxz
cmp
outsb
loopne
mov
inc
xchg
and
cld
rcl
jns
dec
popf
es
fisubl
lcall
aad
dec
imul
fldl
in
fiaddl
dec
lods
iret
xchg
sbb
push
orl
pushf
mov
xor
fst
dec
and
lock
andb
popa
and
xchg
push
jmp
push
cmp
push
xchg
fistpll
push
imul
lret
movsl
and
je
out
mov
push
popf
std
aad
sub
out
and
ja
pop
pop
js
and
mov
lcall
rcll
aaa
std
mov
dec
xchg
adc
push
fs
xchg
test
pop
cmpsl
out
push
js
out
int3
daa
xchg
dec
loopne
add
mov
mov
int
pop
loope
pop
sbb
push
ret
ds
xchg
push
cmc
ret
orb
and
push
push
ja
stc
clc
jg
jb
pop
xor
and
cwtl
inc
dec
ja
pop
jne
inc
outsb
xorb
das
shl
enter
xchg
or
lods
push
enter
sbb
mov
xor
test
ljmp
pop
outsb
hlt
jecxz
jmp
dec
lret
dec
or
xchg
fidivrl
stos
sbb
pop
push
mov
mov
orl
mov
clc
inc
adc
mov
popf
sti
dec
mov
popa
dec
ret
js
xchg
lret
pop
xchg
xchg
inc
add
lret
cld
aaa
movsl
push
jae
push
pusha
test
add
push
xchg
and
jp
mov
les
leave
aad
clc
pop
das
adc
mov
aaa
movsl
ljmp
jns
mov
test
ficomps
push
push
xchg
lret
or
cmp
xor
lea
rolb
cli
or
ljmp
mov
int3
xor
jmp
inc
jo
clc
adc
pop
adc
add
lcall
scas
xor
cwtl
mov
shll
inc
cli
nop
adc
subl
xor
push
and
inc
jbe
mov
pop
jmp
jo
or
hlt
add
mov
and
mov
sub
rorb
ja
xchg
cmpsb
je
pop
icebp
imul
sub
mov
mov
cld
add
dec
mov
stc
dec
imul
clc
rclb
push
ja
addl
mov
clc
dec
jp
adc
mov
pop
jne
jg
jno
add
mov
js
sub
bnd
sub
mov
inc
cmp
mov
mov
xchg
cmp
mov
and
es
dec
out
movsl
inc
dec
jl
fwait
cmpsl
shl
enter
dec
dec
test
lret
insl
rcll
loop
std
fisubl
or
pop
xchg
or
push
les
cmp
les
pop
ret
out
outsl
dec
or
lods
xor
out
aad
cs
inc
dec
add
jne
fs
pop
sahf
sub
outsl
cli
stos
push
jge
jg
add
and
idiv
cmp
test
scas
mov
inc
sbb
outsb
ret
sbb
sbb
mov
lcall
ja
jl
sub
mov
xchg
xchg
pop
std
inc
and
in
pop
and
nop
js
push
shll
push
push
dec
sbb
jns
push
and
adc
mov
mov
jnp
daa
jle
aas
adc
lret
fnstcw
daa
and
jl
mov
mov
mov
xchg
je
cmp
add
inc
push
adc
or
mov
pop
repz
fmuls
xchg
add
mov
js
inc
mov
push
pop
movb
js
or
icebp
fcomi
fdivrs
movsl
test
mov
lret
rorl
pop
jl
inc
inc
jb
stos
test
and
leave
lea
and
cmp
cmovp
dec
fwait
sbb
fs
push
and
mov
aad
or
or
sub
lods
pop
dec
test
dec
mov
sub
insb
stos
jle
call
insb
push
or
in
movsl
adc
add
out
and
jmp
cmp
and
into
push
inc
subl
std
int
addl
into
cld
pop
pop
pushf
add
or
jge
dec
dec
lods
fisttpll
push
int
imul
and
ret
jl
push
test
loop
xchg
jmp
cmp
jne
cmp
fidivs
pop
sti
and
lret
dec
pop
inc
dec
dec
mov
xchg
in
sub
lcall
push
jmp
sub
and
adc
dec
push
clc
rclb
push
divl
mov
gs
mov
jno
repnz
das
mov
orl
test
cli
aaa
pop
sbb
or
dec
and
cmpl
mov
sahf
pop
add
fisubrl
jae
mov
and
pop
sub
xor
add
arpl
adc
push
inc
push
inc
xchg
pop
xchg
or
testb
adc
push
mov
cmp
jecxz
and
ds
test
outsl
mov
ja
ja
clc
test
jle
pop
js
push
dec
mov
rolb
stos
mov
mov
add
sbb
pop
mov
scas
xchg
icebp
jns
aad
jb
test
fs
push
repz
movsl
dec
in
imul
pushf
add
mov
orb
add
add
mov
mov
xor
or
lret
loope
add
fsubrp
lock
aas
shufps
outsl
int3
mov
xchg
repz
nop
clc
sub
iret
jbe
xor
inc
scas
jp
cwtl
daa
aam
dec
imul
sahf
mov
inc
mov
ret
pop
mov
lret
iret
call
and
ret
push
mov
es
ret
out
rcrl
stos
inc
mov
push
clc
lods
inc
pop
enter
in
lret
scas
ljmp
push
add
cmp
test
cmp
ds
and
in
cmc
cltd
movsl
inc
clc
jecxz
out
clc
in
into
test
inc
ljmp
aam
arpl
arpl
movsl
mov
cmp
jmp
cmp
orl
scas
lods
and
mov
sbb
cwtl
lcall
out
mov
add
sahf
push
pop
xchg
pusha
lods
pop
pushf
les
je
mov
or
mov
int3
adc
sbb
popf
and
adc
sub
mov
xor
std
jmp
testl
xchg
ds
sbb
and
xchg
push
jge
adc
xlat
notl
movsb
or
aad
dec
ret
roll
mov
xchg
ljmp
insl
cmp
adc
mov
sub
mov
rorb
ds
pop
aas
lahf
mov
or
cltd
lret
notb
loop
into
jne
mov
and
sub
xchg
dec
dec
ja
fisubs
lret
or
rcl
sub
out
add
adc
xchg
rclb
adc
addr16
cmp
std
into
loope
cs
sti
imul
jbe
dec
sahf
xchg
icebp
out
mov
ljmp
pop
js
shll
out
xchg
les
inc
ljmp
cld
andb
in
stc
cmp
pusha
jne
int
xchg
add
lds
dec
dec
imul
sbb
ret
xor
jb
cmp
or
mov
push
mov
out
sbb
jp
loope
xchg
out
cs
test
xor
cmp
or
fnstenv
lahf
stos
aad
add
dec
cmp
call
mov
dec
shrl
add
in
popa
mov
mov
dec
rclb
nop
sbb
lret
in
or
fidivrl
sub
imul
add
andb
fisubrl
lret
iret
dec
inc
orl
adc
adc
pushf
mov
int
sub
jnp
dec
lahf
data16
mov
xchg
ss
mov
pushf
cli
insl
sbb
mov
mov
das
pusha
mov
push
ds
div
mov
int3
or
add
push
cmp
mov
in
bound
jp
cmc
setb
add
dec
sbb
mov
rcr
and
imul
mov
jb
inc
mov
insl
and
cwtl
pop
mov
lock
inc
push
mov
into
adc
loop
push
jp
fiaddl
lret
shrl
outsl
in
nop
xchg
sbbl
jle
sub
movsl
cmpsl
jmp
or
push
stos
ljmp
mov
ss
xchg
jb
add
addl
pusha
xor
shlb
outsb
clc
xchg
xchg
pop
bound
cs
inc
mov
stos
xor
xor
xchg
rorl
add
lret
ret
mov
in
lods
inc
roll
adc
inc
sbb
fdiv
movsl
cld
icebp
push
aam
xor
int
cwtl
dec
outsl
push
mov
push
fdivrl
mov
pusha
jo
fiaddl
mov
xchg
das
jno
sbb
xchg
mov
cmovb
dec
sbb
mov
imul
in
push
icebp
sub
scas
test
rclb
les
push
andb
aas
and
stos
mov
fidivs
pop
lock
sub
push
and
shr
data16
out
inc
sub
inc
inc
or
push
jne
xchg
lock
sub
and
xchg
lds
ror
adc
rorb
mov
int3
les
mov
mov
xlat
dec
ds
push
pop
js
cltd
dec
inc
inc
cmpsb
pop
aad
dec
push
mov
jns
addr16
clc
add
cmpsl
movsb
dec
cmp
mov
inc
cltd
aaa
push
xchg
cmp
adc
rcl
iret
stc
lret
les
mov
ret
into
and
data16
inc
rcr
jge
cwtl
and
push
mov
mov
mov
xor
sbb
rorb
fiaddl
movntq
enter
shrb
cmpsl
lods
pop
mov
test
xor
out
push
dec
cld
xor
andb
push
and
add
out
in
mov
dec
popf
mov
fisttps
inc
js
push
cmp
mov
sub
es
sub
inc
movsl
rclb
add
lret
clc
repnz
mov
fs
mov
push
jle
enter
les
inc
pop
cmp
imul
or
xor
sub
jns
or
jne
pop
js
push
mov
lret
shlb
outsl
ljmp
inc
stc
and
sbb
roll
xor
lret
fnstcw
jbe
loop
lea
sbb
sbb
clc
sub
mov
cltd
cmc
add
dec
add
pop
mov
push
je
addr16
js
inc
sub
negl
cmp
fnsave
sti
imul
clc
xchg
call
or
bound
sub
out
aaa
mov
jg
mov
push
outsb
pop
call
push
adc
jge
pushf
pop
jno
sbb
lcall
pusha
mov
out
adc
popa
push
jmp
add
push
lret
lret
add
pusha
pop
ret
in
dec
and
ja
mov
jmp
pop
sbb
dec
int3
icebp
test
test
popf
fisttps
push
xor
mov
and
je
dec
and
lods
lock
jb
push
and
ljmp
repnz
fisubrl
mov
int
aas
sub
sahf
adc
out
mov
mov
dec
sub
xchg
jl
cwtl
adc
mov
add
and
lret
jmp
fwait
lcall
and
mov
je
adc
rcrb
jmp
nop
mov
sub
insl
pop
pop
push
mov
js
xchg
or
jb
ljmp
or
xchg
hlt
arpl
xchg
add
cmp
mov
inc
scas
cmp
dec
aas
and
pop
pop
dec
sub
in
lods
xchg
mov
icebp
sbb
mov
dec
es
cmp
ljmp
sub
lds
mov
mov
or
mov
inc
mov
mov
cli
jp
repnz
cmpsl
dec
sbb
nop
inc
rorl
xchg
pop
mov
dec
mov
adc
pop
and
xlat
data16
int3
sub
mov
and
pusha
inc
lcall
add
dec
jl
fldt
mov
dec
pop
dec
cmc
inc
or
mov
and
cs
adc
repz
push
adc
mov
es
pop
es
pop
push
sbb
push
add
cs
clc
pop
pop
pop
stc
mov
insl
movsl
xchg
pop
lret
inc
xor
dec
xlat
inc
xor
call
dec
dec
cmp
lods
pushf
subb
cmpsl
inc
jno
add
shlb
xor
ss
pushf
ja
or
jecxz
pop
pop
rolb
data16
mov
mov
and
test
pushf
xorl
adc
insl
das
call
mov
add
popf
mov
mov
and
mov
movsb
push
pusha
outsb
or
pusha
mov
insb
data16
inc
dec
loope
pop
lahf
push
clc
cmpsb
xchg
cmp
or
cmpsb
inc
adc
retw
imul
jnp
bound
sbb
push
dec
pop
lods
add
aam
inc
xchg
mov
mov
js
insl
pop
iret
cmp
dec
movsb
add
int3
adc
stos
ret
ljmp
or
imul
and
jo
jne
add
imul
sub
mov
cmp
sbb
push
pop
xor
mov
insl
or
mov
idiv
lret
xlat
xchg
adc
divb
push
mov
mov
jno
out
mov
and
aam
popf
xchg
inc
stos
stos
addr16
stos
test
repnz
lret
shll
cmpl
fcmove
repnz
rorb
jnp
imulb
mov
lea
clc
dec
fs
pop
inc
sub
add
pusha
pop
fldl
gs
in
xor
in
and
and
and
inc
fldt
mov
daa
pop
pushf
dec
cld
mov
xchg
sbb
je
popa
or
mov
inc
mov
sbb
xchg
sbb
gs
inc
push
mov
push
out
adc
dec
xchg
mov
cli
push
xor
adc
loop
sub
or
ds
adc
jge
stc
mov
dec
push
aaa
stc
or
ja
sti
js
adc
popa
pop
pusha
sti
notb
inc
shlb
xor
loopne
xor
ja
push
mov
lcall
out
add
dec
enter
mov
xchg
popf
lock
cmp
es
jmp
popa
jecxz
xor
mov
or
push
xor
xlat
pop
and
push
stc
nop
inc
cmc
add
cmp
sub
mov
mov
xchg
movsb
inc
out
aas
mov
sub
push
js
xor
outsl
stos
inc
dec
sbb
shll
std
fimuls
stos
ljmp
xor
xor
inc
testb
sub
xor
xor
pusha
fidivrl
in
ss
repnz
gs
adc
or
jmp
pop
bound
mov
cmp
aam
pusha
into
sub
dec
fwait
imul
lds
push
add
lret
lcall
inc
mov
xchg
ret
movsb
imul
or
jg
add
dec
mov
repnz
and
mov
test
push
pop
push
push
daa
xchg
xor
mov
mov
push
mov
jmp
mov
lock
inc
std
adc
sbb
push
popa
jb
push
xchg
js
push
push
dec
bound
mov
inc
sub
movsb
inc
pop
mov
mov
adc
dec
gs
add
xor
cmp
out
push
pop
pusha
jb
ljmp
jo
enter
fcmovne
mov
je
pop
cmp
cmp
mov
lahf
pop
mov
lea
xchg
vpsrlw
and
xchg
mov
jns
cmp
add
mov
fucomi
xor
dec
inc
lret
clc
fists
dec
orl
addl
inc
aam
cmp
ljmp
clc
andl
nop
mov
aad
jno
cmpsl
fsts
inc
mov
push
or
and
fucomp
into
test
andl
cwtl
aaa
js
mov
jns
imul
loope
xchg
aaa
clc
xchg
ret
popf
outsl
add
xchg
lret
rcl
lods
and
xor
jne
xchg
addl
into
pop
cmc
pop
dec
int
shrb
popf
mov
push
lods
jo
and
sub
test
xchg
pushf
and
sahf
mov
lahf
or
and
popl
xchg
xor
or
into
pop
sbb
mov
test
add
aam
mov
pmaxub
jge
ja
test
dec
xacquire
cmc
scas
sub
xlat
mov
mov
imul
sti
movsl
lahf
jno
call
clc
and
iret
jb
xor
lret
mov
shrl
loopne
pop
and
lds
rcr
mov
add
mov
cmp
lea
xchg
push
lret
ja
cmc
decl
add
dec
dec
inc
repnz
dec
jnp
pop
mov
mov
adc
jmp
push
jle
icebp
into
mov
pshufw
lahf
cmp
xor
mov
ret
mov
jnp
and
fnstsw
xor
clc
cmp
out
enter
add
arpl
sub
fst
in
mov
lahf
loope
call
out
movsb
icebp
hlt
xor
repnz
jb
fimuls
gs
adc
in
inc
xor
frstor
lret
or
leave
mov
enter
inc
and
mov
pusha
clc
mov
into
int3
pop
push
inc
insb
rcll
lret
cltd
ret
sbb
scas
and
sbb
inc
jns
and
nop
mov
fbstp
push
mov
mov
pop
cld
sub
lret
add
lods
ja
pop
shrl
xchg
and
lods
push
mov
push
xor
dec
pop
in
cmp
loopne
enter
outsl
aam
stos
push
push
cmp
xchg
jl
add
test
cmp
inc
insb
or
andb
add
inc
iret
and
mov
fdivrs
mov
xchg
and
fisttpll
notl
ret
sbb
mov
popa
jns
into
into
movsl
daa
xor
push
mov
pop
mov
subl
xor
outsl
pop
movsl
imul
out
xchg
cld
adc
xor
sbb
dec
orb
jne
loop
arpl
jecxz
add
dec
fnsave
mov
mov
push
cltd
aad
cmp
or
ja
test
cmpb
aaa
push
ss
cs
sbb
mov
push
int
push
movsb
lods
repnz
insl
mov
test
pop
das
imul
xchg
mov
push
rclb
add
inc
lods
adc
mov
pop
sbb
sub
cltd
xor
shll
adc
ljmp
sbb
stos
cmp
and
push
mov
neg
fistpll
mov
and
ret
mov
setns
inc
inc
cltd
in
inc
lods
fisubs
outsl
clc
and
push
inc
arpl
clc
rorb
call
stos
push
inc
add
dec
cmpsb
push
ss
push
jle
mov
pop
clc
xor
stc
addr16
fcmovbe
xchg
out
push
push
xchg
sub
jbe
sbb
adc
mov
adc
scas
xorl
cmp
push
sbb
test
js
fwait
sbb
sbb
xor
loope
in
mov
adc
out
inc
mov
adc
movsl
and
sar
cmp
out
aaa
movsl
jge
inc
pop
xchg
push
sub
mov
mov
xor
lea
flds
lret
stos
cwtl
in
pop
and
sbb
je
rol
xchg
adc
dec
dec
pop
push
or
xchg
rorb
packssdw
test
js
jnp
xor
add
lret
mov
lcall
test
neg
pushf
aaa
mov
js
int
jo
ljmp
test
xchg
pop
sub
mov
inc
inc
cmpsb
dec
adcl
cld
jmp
ret
xchg
lret
ret
jmp
mov
and
dec
rclb
int3
testl
xchg
lea
ss
and
out
out
repz
test
jl
or
les
cmpsb
add
mov
inc
xor
mov
lcall
les
subl
sti
add
stc
inc
add
test
rorb
sub
pop
pusha
aad
inc
fdivs
sbb
push
dec
sub
jns
fwait
sbb
mov
mov
aad
aam
or
xchg
xchg
sbb
out
xchg
push
pop
and
and
push
xchg
aad
scas
and
pusha
sub
add
inc
in
inc
sbb
or
adc
outsb
lds
loop
add
mov
clc
stos
fnstcw
in
xchg
cli
add
xor
clc
sbb
std
xchg
popa
stos
or
lret
mov
test
pop
js
call
mov
repnz
pop
ret
and
jne
pop
cmp
jle
xchg
jl
dec
mov
adc
mull
add
mov
rcr
mov
cmpsb
fldl2t
sub
fs
cmp
test
sbb
orl
jmp
dec
scas
mov
xchg
sub
or
data16
repnz
addr16
mov
inc
dec
inc
dec
pop
lock
and
jbe
insb
addr16
lock
mov
xor
xchg
add
popa
movsl
test
sbb
push
movsl
jb
popf
jecxz
test
enter
add
dec
xlat
fistpll
dec
aas
shr
mov
dec
icebp
xchg
add
aam
jae
add
adc
and
sahf
out
cmpsl
iret
clc
push
adc
push
jmp
js
mov
incb
lret
xchg
cmp
mov
dec
mov
int
jmp
push
ljmp
dec
xor
imul
shll
enter
jl
sub
sbb
sahf
or
jns
nop
or
lahf
xchg
ds
repz
js
mov
andl
mov
pop
mov
fiadds
cmc
add
stos
inc
sbb
mov
xlat
push
mov
push
lahf
dec
and
xchg
xor
pop
icebp
shll
das
pop
xor
inc
test
xor
clc
ljmp
loopne
xchg
mov
fmull
pop
in
jbe
stos
cmp
and
mov
lcall
pop
fsubs
cltd
xor
aam
sub
aaa
int3
pop
cmovb
xor
imul
mov
adc
pop
clc
mov
insl
xchg
inc
data16
adc
mov
jecxz
push
icebp
in
and
stos
cltd
adc
sub
dec
mov
push
adc
sbb
loop
scas
ss
andl
push
jle
icebp
cli
lahf
mov
sbb
mov
shll
jns
movsl
fsubrs
adc
scas
stc
mov
and
cmp
sbb
cmc
cmc
push
mov
sub
addl
fdivrl
hlt
xchg
jle
pop
shrb
imul
stos
dec
cmp
sub
pop
mov
nop
aad
and
popf
daa
and
es
adc
inc
mov
cmp
pop
pushf
xchg
dec
repnz
dec
sarl
add
and
fs
jecxz
dec
clc
mov
sub
test
ja
xchg
cmp
sub
aad
sbbl
ds
test
mov
inc
jmp
stos
sub
xchg
sub
push
bound
js
lods
mov
test
outsl
inc
dec
test
es
xbegin
xor
test
add
inc
pop
lret
stc
mov
mov
cmp
hlt
outsb
mov
int3
repnz
and
pop
in
mov
push
or
test
sub
int3
sbb
cmp
rcl
jno
sbb
js
sub
loop
mov
enter
nop
mov
cmp
arpl
jae
sub
test
adc
sub
xchg
popf
push
sub
fs
inc
out
sub
repz
rcrb
mov
mov
daa
push
iret
mov
ret
pusha
push
cmp
fdivrl
js
mov
sub
sub
pop
push
jecxz
cmp
lret
stos
cli
out
push
pop
jmp
jmp
sub
mov
mov
xor
cld
cmp
fsub
stos
fiaddl
clc
add
call
push
loop
sbb
fwait
and
xor
jnp
jl
xchg
add
scas
mov
movsb
rorl
jae
cmp
imul
fsubrs
push
clc
mov
inc
gs
sub
scas
hlt
jl
div
mov
add
dec
adc
cmc
je
push
jecxz
add
adc
or
scas
stos
sbb
out
in
aam
add
add
mov
xchg
sub
sub
mov
mov
das
xor
xchg
mov
pop
stc
cmpsl
movsl
lock
mov
jb
push
mov
mov
dec
xor
jno
les
jns
pop
subl
pop
mov
sbb
xchg
add
inc
add
pop
out
sub
out
movsb
jmp
and
mov
or
negb
push
inc
stos
dec
addb
sbb
loopne
mov
dec
cmp
icebp
jl
push
pop
movsl
lods
ljmp
xchg
in
test
cmp
ss
into
cld
pmaxub
jge
js
xchg
sub
lret
int3
out
inc
cmovge
in
aad
popa
sub
fisubrl
arpl
mov
popa
push
and
inc
fmull
or
enter
mov
sbb
dec
outsl
fsubl
arpl
push
sub
xchg
fwait
outsl
mov
enter
insb
lock
bound
popf
movsb
lds
sub
lret
shl
cli
adc
pop
xor
pop
leave
sub
loopne
adc
daa
cmpsb
pop
fcomi
cwtl
xor
add
inc
daa
mov
adc
adc
cmp
push
cmpb
cmp
sbb
aaa
ret
push
cmp
lahf
ja
out
add
iret
push
aas
xlat
test
movsb
inc
xchg
xchg
add
outsb
push
cmpsl
xor
ja
sbb
mov
test
sbb
or
inc
imul
sbb
add
lret
rol
aaa
xchg
mov
and
fistpll
or
out
lret
pop
loope
mov
hlt
jno
jnp
sarl
sbb
add
call
pushf
sub
lret
dec
aam
std
out
aad
and
jae
ret
xor
insl
lods
nop
shlb
cmc
xchg
xchg
daa
cltd
addb
shll
add
add
jns
dec
adc
and
inc
stos
push
jae
xor
add
xchg
filds
cmp
jp
lahf
lret
xchg
add
test
mov
add
xchg
cmp
sub
mov
in
jo
add
mov
in
mov
andb
cmp
add
and
in
testb
lock
fdivrl
fwait
jmp
sbb
and
lcall
xlat
ret
dec
out
data16
and
inc
aam
loopne
inc
movsb
inc
in
xor
pushf
pop
lock
hlt
les
imul
in
sub
clc
in
adc
repz
push
mov
out
pop
clc
ret
push
loope
sti
sbb
jae
dec
insl
dec
loopne
pop
pop
mov
and
fistl
lahf
aam
fyl2xp1
in
hlt
in
push
sarb
and
push
pop
lahf
inc
mov
add
cmp
cmp
faddl
push
arpl
sbb
repz
and
xchg
dec
lret
ret
inc
mov
xchg
add
lods
dec
test
sub
push
ret
fcomip
ret
xchg
add
and
jnp
and
shll
mov
das
xor
push
sbb
andb
hlt
mov
mov
mov
mov
sbb
lods
mov
stc
push
mov
ret
pop
pop
dec
push
push
cmp
loop
cmp
push
push
xlat
or
jg
add
dec
inc
dec
lods
xor
bound
mov
addb
subl
sub
mov
sbbl
addr16
sub
sub
flds
dec
fwait
mov
mov
adc
push
cmp
pop
mov
adc
out
cli
mov
cmp
push
test
mov
ret
imul
daa
adc
add
xchg
fiadds
loopne
in
out
sti
add
or
jne
xchg
sub
testb
stos
lea
jne
aad
clc
fs
lret
mov
cmp
test
push
and
push
mov
js
jg
jg
mov
add
leave
dec
in
mov
stos
shrb
inc
testl
jo
inc
addb
stos
pop
xchg
dec
or
jno
sbb
pop
push
iret
pop
test
cmc
imul
decb
cmpsb
push
addl
addr16
push
mov
jne
add
and
inc
add
sbb
je
mov
rcrl
sarb
ljmp
hlt
adc
add
adc
xor
lret
in
lods
push
xor
inc
pop
sub
jmp
lock
cmp
xchg
lret
pop
ja
mov
orl
lcall
imul
mov
icebp
insb
clc
xor
inc
dec
arpl
xor
jo
add
inc
imul
aam
pusha
mov
gs
push
ljmp
lock
inc
jb
js
int
lds
add
lea
mov
xor
mov
pop
jmp
imul
adc
dec
cwtl
stos
je
shrl
insl
xlat
mov
lods
mov
jge
inc
dec
clc
idivl
int
in
orl
sbb
xor
sbb
test
cmpsl
inc
xor
daa
les
movsl
dec
push
enter
out
inc
mov
stc
xchg
xchg
daa
data16
lcall
clc
fcoms
ret
and
xchg
lcall
pop
and
pop
out
mov
lret
dec
out
cmpsl
stc
sarl
inc
cmpsl
out
push
and
add
arpl
lea
mov
xor
out
sbb
sub
xlat
cld
fldenv
dec
mov
add
push
push
js
xor
pop
les
push
xor
jae
fwait
movsb
test
sti
fdivrl
pop
clc
scas
inc
xor
ds
and
mov
xchg
mov
testl
pop
sub
cmp
dec
cmp
js
jg
hlt
mov
adc
nop
arpl
mov
cmp
jbe
test
outsb
mov
add
adc
and
mov
adc
test
mov
inc
push
cltd
inc
mov
mul
repnz
xor
dec
jmp
pop
jnp
test
sbb
int
sbbl
and
cmp
mov
or
lret
mov
mov
insl
cmp
push
ja
and
pop
sub
data16
in
and
push
test
cmpsl
ljmp
inc
mov
ret
mov
sub
mov
dec
dec
push
data16
inc
mov
divl
lret
mov
test
test
dec
xchg
inc
push
push
std
popa
sbb
inc
in
sbbl
mov
rorl
in
jns
lods
cmpb
dec
and
cmpsb
dec
jg
lret
call
xor
xchg
insl
out
push
cmpsl
sti
adc
jp
push
clc
pushf
cs
sbbb
mov
notb
jno
xor
jo
and
jo
repz
inc
sub
pushf
movsl
xchg
push
dec
mov
mov
nop
testb
outsb
cmpsl
add
fwait
or
add
mov
sbb
push
ret
or
inc
mov
movsl
sub
inc
jecxz
dec
mov
pop
ss
and
imul
test
and
std
jbe
in
sbb
mov
xchg
xchg
xchg
cmp
mov
hlt
fsubl
outsb
hlt
adc
pop
add
cmp
sti
repz
or
xchg
mov
mov
xor
fs
outsb
inc
push
xchg
jbe
xor
mov
pop
lds
xor
inc
test
cmp
mov
fbstp
jb
cmp
roll
pop
mov
arpl
nop
inc
push
fcomps
mov
mov
jo
xor
fs
test
stos
scas
or
test
movsl
mov
xchg
xchg
inc
add
pop
aam
and
stc
repnz
lret
lods
or
inc
jmp
sub
dec
xchg
mov
ftst
dec
js
mov
test
dec
insl
and
or
adc
cmp
mov
je
sbb
mov
dec
cmp
test
cmc
adc
dec
ljmp
jns
xchg
movsl
aas
cmp
mov
loop
jae
popa
loop
add
mull
push
ficoms
mov
add
add
inc
jmp
loopne
js
ljmp
cmc
gs
adc
xchg
jo
jl
inc
lret
and
outsl
push
or
js
cmp
shrl
dec
fistpl
pushf
clc
inc
xor
xor
inc
add
adc
mov
jg
flds
clc
xchg
loope
stos
aam
push
xchg
inc
lods
ror
insl
mov
add
mov
fidivl
mov
and
enter
lods
je
mov
mov
cmpsl
into
repnz
dec
outsb
pop
mov
pop
add
dec
mov
std
pop
push
in
mov
dec
sbb
or
imull
xchg
out
movsl
pop
scas
pop
push
xorb
stc
cmp
cmp
mov
sar
mov
push
xchg
test
pop
mov
xlat
or
sub
repnz
leave
pop
bound
clc
xor
test
add
out
jle
dec
jl
test
scas
dec
daa
push
jno
adc
cmp
mov
mov
xor
add
mov
pushf
adc
or
in
arpl
cli
repnz
std
xchg
inc
js
lret
inc
imul
push
sbb
sub
jle
js
gs
xor
int
or
scas
cmp
sbb
inc
xchg
mov
sbb
hlt
push
jmp
xchg
jp
xor
loop
stos
add
jl
or
in
jg
inc
jbe
adc
mov
xchg
inc
dec
jl
out
inc
jle
std
push
movsl
orl
popf
ds
ljmp
mov
lret
jecxz
fmulp
jb
fidivl
push
xor
mov
es
sahf
scas
or
out
clc
repz
jmp
mov
xchg
insl
mov
mov
jl
imull
divl
or
rolb
push
fisubl
ja
ds
mov
xor
mov
fucomp
sbb
pop
fadds
mov
jl
xor
test
sbb
jae
push
mov
jmp
arpl
pop
test
and
popf
enter
clc
xlat
andl
sti
pop
jl
add
mov
mov
gs
jo
mov
jbe
std
sub
jbe
rorb
addr16
push
jmp
sub
xchg
sub
push
clc
loopne
fildll
popa
in
jno
and
cld
mov
xorb
jmp
push
ds
lods
jg
or
mull
sub
adc
and
or
imul
mov
and
stos
iret
inc
push
inc
stc
sbb
adc
pop
push
pop
aam
xchg
cld
or
scas
sub
jl
rorb
clc
test
ret
dec
mov
jbe
and
bound
pop
std
mov
cmpl
hlt
movsl
push
movsb
sub
push
insb
and
xor
push
out
xchg
lock
mov
push
mov
stos
mov
add
shld
out
sbb
int3
mov
sbb
mov
int
inc
repnz
push
inc
mov
adc
and
cltd
pop
out
or
ja
and
test
or
mov
xchg
imul
and
mov
testl
cmc
scas
lcall
ret
aam
subb
out
js
gs
std
inc
js
xchg
ja
in
leave
sbb
rol
leave
jmp
jb
push
push
xor
xchg
in
push
test
mov
xor
cmc
jns
mov
data16
inc
icebp
imul
stc
hlt
mov
lds
js
outsl
mov
outsb
lock
mov
jo
mov
clc
jg
out
ja
sbb
pop
xchg
scas
pushf
lock
jl
call
call
int
enter
add
mov
test
jmp
lock
pop
cmp
test
lret
fisubrl
fcmovbe
lahf
push
insb
icebp
ret
dec
das
ja
movsl
nop
nop
daa
sub
out
jbe
out
jbe
sbb
decb
data16
xor
pop
jle
insl
and
cwtl
popf
lret
xlat
fldt
cmpsb
jno
mov
sbb
mov
and
repz
aam
push
dec
movsl
inc
cli
data16
clc
je
jmp
adc
xor
cmp
inc
std
dec
and
sti
pop
xor
push
sbb
add
adc
nop
jge
add
sbb
push
pop
xchg
loopne
adc
push
xchg
imul
push
mov
add
ficoml
jmp
mov
jb
ret
lret
test
pop
imul
mov
xchg
enter
mov
fwait
sbb
dec
and
shld
pushl
push
out
adcl
sbb
mov
scas
test
subb
xor
add
cltd
mov
and
js
sbb
jecxz
andl
test
mov
pushf
aad
xor
mov
push
jle
jmp
loop
push
daa
daa
test
ficoml
sub
clc
stc
loop
pop
adcb
imul
jnp
xchg
pop
ljmp
xorl
rol
addb
mov
enter
sarl
adc
add
fstl
adc
dec
and
scas
in
mov
xchg
fsub
and
faddl
xchg
xchg
cmpsl
push
mov
bnd
repnz
lret
int3
lret
adc
into
pop
mulb
sbb
push
add
xor
xor
popf
sub
mov
jbe
cmp
dec
xchg
bound
jecxz
fadds
dec
test
mov
sub
fcompl
cmp
lahf
cmp
add
inc
stc
lret
mov
pusha
sbb
and
in
popa
imul
popa
jb
cmp
nop
imul
xor
mov
sbb
add
mov
and
cmpsb
hlt
testb
test
adc
icebp
push
mov
testl
xchg
mov
mov
cmp
pop
sbb
mov
sarl
mov
dec
scas
scas
ret
daa
outsl
mov
movsb
out
mov
sbb
or
clc
or
xor
xchg
lret
aad
mov
leave
imul
in
push
cmpsl
lret
int3
cmp
aam
outsb
xor
lret
mov
and
mov
push
lods
cmpsl
xchg
adc
inc
call
push
mov
add
push
out
enter
call
mov
dec
fimull
push
push
cmp
outsb
pop
aas
and
and
mov
mov
mov
add
dec
out
fsubr
and
xchg
push
add
daa
fwait
push
sbb
test
ds
test
jne
mov
jg
mov
mov
mov
mov
pop
mov
mov
cmc
adc
push
push
clc
mov
ret
test
cli
xchg
test
clc
jns
ret
cmp
imul
jne
clc
inc
bound
sub
push
xor
int
and
cmp
and
aam
scas
cmp
inc
cmp
inc
inc
lret
lock
les
xchg
push
jp
call
dec
and
dec
sub
sarl
sub
dec
inc
and
outsl
sub
push
adc
jns
dec
cli
dec
push
cmp
cmc
jmp
cmp
mov
outsb
clc
sub
add
jns
test
mov
jbe
push
mov
js
lea
mov
insb
test
xlat
jmp
clc
jge
sahf
shlb
loop
lret
aaa
jmp
imul
adc
push
dec
clc
scas
dec
loop
sub
ljmp
shl
pop
xchg
bound
icebp
out
sarl
inc
adc
lret
mov
test
jge
and
stos
xchg
adc
dec
stos
int
jbe
shl
test
dec
jae
add
pop
clc
mov
xchg
call
and
js
ret
cli
int
insb
add
rcll
ljmp
fiadds
scas
ljmp
test
push
xor
lret
shrb
into
adc
data16
pop
js
popa
jno
bound
ret
ja
lock
adc
pop
out
mov
repz
jb
js
adc
insl
lret
pop
mov
fwait
movsb
leave
lret
or
mov
cmp
dec
out
inc
pop
sub
jbe
add
test
decl
and
stos
jmp
loope
out
movsb
sbb
inc
jge
xchg
popa
outsl
push
pop
or
push
movsb
mov
clc
xchg
sbb
sbb
and
mov
dec
lret
mov
mov
lcall
xor
inc
dec
push
pop
clc
add
ljmp
dec
enter
imul
sub
fwait
mov
mov
sub
inc
push
test
push
dec
dec
mov
sbb
xchg
jns
test
inc
subb
div
sub
cmp
in
inc
adc
lret
mov
lret
push
cmp
fstps
aaa
xor
clc
jmp
insl
sahf
dec
js
bound
add
xor
adc
xchg
pop
dec
jge
sub
lcall
inc
sbb
ror
xchg
test
dec
inc
mov
pop
cld
sub
jg
std
shrb
sbb
ret
dec
fstl
pop
out
pop
xor
out
or
cmpsl
sbb
mov
xchg
cli
pusha
push
or
addr16
popf
repz
mov
popf
dec
push
ficomps
or
jno
mov
pop
jmp
clc
sahf
ret
pop
sarb
mov
in
jge
mov
xchg
push
idivl
icebp
data16
pop
leave
cli
add
xchg
cmc
jbe
xor
push
mov
andl
jl
and
mul
mov
jle
and
push
or
jo
xchg
in
daa
pop
fistl
mov
insl
and
les
push
mov
push
dec
das
lods
les
cmp
xor
jne
js
inc
cmp
pop
cmp
push
xchg
mov
sbb
mov
pop
cmp
add
and
ss
imul
push
es
or
ja
jle
sub
daa
lds
ret
ja
lret
clc
pop
bsr
mov
icebp
imul
adc
sub
cs
and
enter
pop
cmp
jge
push
leave
inc
jmp
int3
cld
pop
cltd
or
cwtl
out
sbb
inc
mov
mov
repnz
sbb
xchg
repz
in
loopne,pt
popf
into
dec
fst
inc
or
pop
leave
mov
mov
jae
lret
cmp
cmp
xchg
rcrl
ret
clc
icebp
imul
sbb
fucomp
inc
nop
push
xor
leave
pause
push
gs
and
aam
aad
rorl
bound
cmpl
jno
shrl
clc
jecxz
shlb
lcall
fildll
xchg
and
cli
repnz
dec
mov
lret
jge
jne
test
push
pop
std
mov
inc
js
mov
scas
test
cs
pop
into
dec
test
xchg
mov
mov
sub
inc
jbe
cmp
jmp
lret
rclb
inc
test
sub
push
jne
repz
dec
iret
xor
lods
fdivr
push
loop
jnp
inc
mov
in
push
lret
imul
jl
scas
jecxz
pop
xchg
cli
pop
jmp
jbe
or
movsb
mov
mov
lret
rol
cmp
pop
mov
xor
pop
sarb
mov
cmp
movl
fisubrl
add
xor
fmul
inc
js
test
hlt
fildl
rorb
js
iret
pop
jmp
xchg
xchg
push
pop
call
cmovs
pop
jae
mov
dec
adc
xchg
mov
mov
enter
xor
jge
gs
int
sub
sbb
aad
mov
clc
xchg
into
inc
cld
mov
out
out
outsl
inc
outsl
ror
sahf
push
movsb
xchg
dec
or
es
ss
icebp
lock
push
add
jne
icebp
adc
daa
lret
mov
jae
mov
jecxz
lahf
or
imul
jns
jb
cmp
movl
scas
pop
hlt
mov
mov
cmpsl
sahf
clc
cmpsb
or
lods
gs
xchg
or
cmp
gs
and
jb
insl
inc
cld
mul
js
xchg
popa
adc
sbb
pop
inc
dec
addr16
mov
repz
minps
dec
cmp
xchg
mov
pop
adc
jp
into
xchg
mov
add
lret
mov
rcrl
mov
and
and
cs
mov
sub
jbe
xor
xchg
jg
or
sub
jbe
dec
mov
and
daa
jbe
movsl
jo
mov
pop
lret
repnz
fimull
les
lods
inc
aad
xchg
sub
fs
and
iret
cmpsl
adc
and
dec
inc
jecxz
jns
arpl
push
lahf
mov
cmc
lahf
sub
xor
xor
push
lods
popf
ret
inc
clc
mov
adc
ret
ljmp
mov
pop
xchg
lret
stos
jmp
mov
std
fsts
jle
inc
adc
aas
jo
cmp
xor
cs
pop
dec
clc
inc
imul
ret
jns
push
cmp
js
or
iret
jp
gs
outsl
fsubs
and
ret
mov
add
jmp
das
pand
rolb
cmp
ret
in
jae
mov
push
stc
dec
sub
mov
test
pushf
lds
jp
cwtl
jne
ljmp
cmp
push
or
test
or
int
std
mov
cwtl
jmp
insb
adc
sahf
js
testb
xchg
test
cmp
lods
and
inc
add
and
insb
mov
clc
sub
inc
and
add
dec
adc
cmpsl
and
js
sbbb
add
test
mov
rcll
xchg
scas
sub
lret
into
push
rcr
cmp
ds
add
push
pop
push
scas
inc
js
add
jl
add
cmpl
movsl
scas
movsb
cmc
mov
cmp
pushf
push
push
mov
push
lret
scas
adc
daa
sub
xor
push
adcb
dec
add
push
xchg
sbb
lret
adc
sahf
pop
push
in
rcrb
clc
push
pop
not
cmp
dec
xor
test
lcall
push
cwtl
clc
jb
mov
add
test
mov
mov
and
sti
dec
sbb
inc
mov
sbb
mov
bound
mov
xchg
lret
and
lea
add
sub
js
addr16
push
call
add
fists
adc
stos
cmpsb
addr16
or
add
push
cmp
jne
xchg
aas
cs
shrb
ret
out
adc
mov
bound
adc
mov
fucomp
roll
ja
enter
js
in
sbb
test
jecxz
int
push
loopne
mov
push
into
and
sbbb
lahf
xchg
aaa
inc
loop
adc
into
jl
mov
inc
pop
or
insb
cmp
mov
mov
push
inc
mov
out
xor
lds
xchg
xor
shlb
cmpsl
sub
xor
dec
jmp
sbb
js
pop
dec
fsubs
jge
pop
sub
xchg
int
es
mov
mov
push
dec
cmp
xchg
stos
xor
mov
xchg
mov
or
sub
sahf
mov
mov
ljmp
fwait
pop
mov
pop
mov
mov
stc
xlat
dec
push
clc
aaa
lret
fbstp
push
rcrb
test
idivb
xchg
mov
inc
mov
imul
in
inc
push
aam
mov
mov
js
add
xchg
sbb
ret
add
inc
testb
int
nop
ljmp
nop
fldenv
call
fcomip
dec
js
lret
pop
stos
cld
outsl
ljmp
dec
in
js
push
les
js
test
les
dec
sti
pop
xchg
aaa
mov
xchg
movsb
int3
pushf
stos
sbb
inc
sub
jne
jo
sub
dec
and
mov
push
shlb
ss
loop
push
loope
ret
js
xor
in
xchg
xchg
mov
orb
mov
mov
mov
je
push
mov
stc
ja
mov
sub
enter
xor
jne
cmpb
shlb
add
sub
cmp
or
push
lods
orb
daa
push
mov
push
out
stos
out
adc
push
mov
test
imul
or
cltd
cmpb
sahf
cmp
add
fsubrl
sub
into
out
enter
cli
loop
mov
add
ret
out
mov
outsl
and
or
push
int
and
or
jae
test
js
hlt
lret
test
fwait
loop
fs
push
mov
adc
sub
fnstsw
rclb
std
mov
or
fisubs
clc
mov
arpl
lea
iret
push
imul
jns
mov
xor
dec
clc
cmpl
loope
pop
fwait
jo
rcrb
fmuls
les
jbe
fs
sub
jo
and
adc
or
clc
push
leave
and
adc
mov
add
enter
subl
xor
cmp
testb
mov
out
scas
xchg
lods
test
adc
test
and
shr
pop
add
push
add
jle
sarb
sub
int
mov
jmp
and
push
testb
ds
call
fisubrs
cmp
lock
icebp
push
in
lret
mov
jecxz
push
or
das
and
pusha
mov
inc
lods
int
test
hlt
inc
mov
test
and
mov
jg
and
cmp
cmp
clc
pop
sub
addr16
outsb
mov
cmp
test
mov
das
outsb
mov
sub
popa
fsubrl
repz
std
shll
and
ret
sub
mov
js
fldt
out
std
jns
lret
into
mov
push
push
mov
out
lds
scas
ja
inc
hlt
sbb
mov
xor
lret
hlt
add
adc
sub
mov
roll
sub
les
and
or
cli
roll
lret
fildll
stc
imul
shll
into
lcall
or
inc
adc
cltd
es
and
jmp
and
ret
test
aad
lret
cs
pusha
stos
fbld
shl
mov
call
repnz
js
mov
cmpsb
pop
xchg
or
lcall
cmp
sub
test
push
and
pop
ja
mov
mov
hlt
sub
xchg
test
lds
xor
outsb
inc
sub
and
in
mov
push
xchg
cmpsl
hlt
sbb
jno
cmp
pop
out
orb
gs
pop
ss
mov
call
nop
pop
or
sbb
inc
int3
pop
jae
js
and
imul
dec
dec
add
pusha
insl
inc
add
or
push
xchg
jae
outsb
mov
add
bound
fcom
stos
inc
xor
mov
mov
mov
fcmove
xchg
imull
dec
and
scas
add
clc
add
jae
push
test
dec
clc
or
out
add
jmp
aad
mov
xchg
test
in
inc
insl
push
clc
pop
xor
cmp
push
xor
sub
cltd
xchg
xchg
jno
push
pop
mov
hlt
sbb
push
js
mov
repz
mov
stc
cmp
fldl
movsb
clc
sub
adc
incl
out
imul
hlt
test
nop
jbe
pop
das
mov
mov
mov
add
sbb
dec
dec
sub
lret
aad
scas
les
enter
sbb
cs
pop
loopne
cmpsb
mov
loop
repnz
fs
out
dec
and
xchg
mov
loope
outsb
shll
hlt
loopne
sub
test
xchg
negb
lret
jge
nop
fidivs
push
adc
outsl
and
outsb
ffreep
xchg
add
dec
js
bound
lret
cli
add
inc
icebp
pop
ja
mov
cltd
mov
xchg
pop
xchg
cmp
xchg
or
lock
pop
aam
xchg
scas
mov
dec
mov
push
push
arpl
pushf
insb
je
loop
lea
or
dec
in
cmp
fs
pop
loop
dec
mul
stos
adc
pop
enter
xchg
mov
imul
jge
fs
add
jno
add
ficoml
in
aas
inc
mov
dec
orl
loopne
jno
enter
ljmp
stos
jp
int
fstl
jae
pop
js
addr16
and
add
lret
jno
jecxz
pop
push
adc
nop
aam
jecxz
add
cmpsb
inc
sahf
sarb
and
and
rcll
dec
fadds
sarb
arpl
mov
clc
inc
push
cltd
pop
mov
and
sbb
shl
mov
add
sbb
imul
lods
les
sbb
push
fisubrs
adc
lahf
and
ljmp
mov
stos
js
adc
mov
pop
jmp
xchg
add
mov
test
stc
cwtl
cmp
adc
hlt
imul
lret
jmp
gs
sub
jns
dec
adc
sbb
je
xchg
popf
loop
push
cmp
and
and
mov
dec
and
mov
pop
sti
sub
inc
lret
cmc
push
ret
stos
iret
add
pop
jecxz
adc
dec
dec
push
stc
inc
mov
cmp
dec
pop
xchg
hlt
mov
scas
out
imulb
and
lods
cmp
jmp
fidivrl
inc
xor
jmp
mov
jno
xor
repnz
ja
mov
cmpsl
ret
mov
pushf
insl
js
cmp
cmpsl
mov
mov
sti
shrb
push
clc
mov
xor
stos
add
cmp
mov
dec
push
mov
add
and
sub
ffreep
clc
push
lret
fs
inc
xchg
jle
cmp
enter
clc
push
or
pop
faddl
dec
pushf
add
lods
ret
dec
test
push
jb
and
clc
aas
lods
cmpsl
mov
ljmp
push
adc
fadd
xchg
cmpsl
xchg
shlb
mov
inc
add
repz
add
pop
out
popf
mov
call
adc
jmp
jnp
or
dec
fistpll
inc
xchg
jge
int
test
cmp
lret
stos
cmp
adc
pop
ret
lahf
mov
ficoms
iret
rcr
mov
sbb
in
xchg
push
add
and
mov
stos
sub
mov
mov
popa
or
cmp
iret
cmpl
repnz
fxch
cmp
mov
stos
xor
inc
lock
and
push
jae
jmp
in
bound
xchg
lods
dec
push
in
leave
adc
dec
xchg
out
nop
std
xchg
sbb
mov
arpl
cmc
lret
rorb
lahf
stos
lret
add
push
mov
fmuls
arpl
lahf
add
push
in
sbb
in
sub
idivb
std
or
lods
imul
inc
fs
pop
imul
pop
daa
mov
fildll
mov
xchg
hlt
test
ds
adc
inc
test
add
rcrb
push
js
add
or
and
outsl
and
scas
test
icebp
add
xlat
push
fldenv
icebp
mov
lret
icebp
fs
inc
mov
arpl
add
mov
and
js
fdivs
in
jl
jle
imul
dec
clc
sub
insl
xor
in
out
or
mov
jns
clc
daa
lock
mov
xchg
pop
mov
imul
mov
and
xor
clc
mov
add
test
pop
sub
lahf
xchg
dec
adc
dec
das
out
add
dec
xchg
std
insb
leave
dec
add
fisubrl
stc
add
ret
cmp
mov
mov
fs
xor
adc
push
xchg
mov
xor
mov
xor
jae
add
lret
add
addr16
fsts
icebp
test
aas
lret
dec
outsl
cwtl
icebp
lods
cmp
pop
mov
jg
sbb
sbb
and
xchg
clc
mov
mov
inc
dec
test
jae
cli
pop
dec
int3
ljmp
addr16
pop
and
dec
cmp
es
mul
jb
jge
cmp
fsubs
sbb
ds
in
xchg
mov
test
es
imul
hlt
clc
push
pop
lcall
jg
sbb
fwait
les
dec
decb
mov
jae
jp
inc
test
lcall
js
mov
push
out
test
out
add
dec
loop
mov
rdmsr
out
sub
xchg
mov
in
jns
popa
shrl
sub
xchg
push
popf
inc
aas
movsb
cs
push
and
jmp
aaa
mov
scas
imul
push
jbe
movsb
lret
mov
cwtl
adc
xor
inc
push
je
mov
aaa
fistl
sbb
aaa
or
sbb
movsl
test
xor
mov
mov
and
lock
lret
out
inc
lock
sbb
sub
std
pop
jno
lret
loopne
lds
cmp
sbb
leave
cmp
and
cwtl
xor
jecxz
xchg
stos
jo
push
xchg
mov
cld
test
mov
lcall
xchg
and
test
jno
in
xor
stc
inc
mov
pop
xchg
int3
mov
sub
pop
dec
shrb
sbb
fists
cmp
stc
aad
data16
lea
mov
out
or
push
xchg
hlt
jle
pop
pop
es
rcrl
mov
jmp
arpl
jg
sbbb
std
into
push
stc
push
addl
cltd
sub
mov
lods
push
std
sahf
add
andb
jmp
mov
and
sub
ficoml
or
jge
daa
js
dec
lahf
aaa
cmp
lods
adc
mov
lods
mov
in
in
jo
in
xchg
sbb
add
sbb
pop
repz
movsb
je
jp
cmp
and
notl
lret
sbb
lcall
mov
loop
sbb
mulb
push
jmp
fbstp
push
and
dec
or
dec
cmpl
cli
ja
push
mov
rcrl
and
ljmp
in
out
mov
pop
lods
push
xchg
outsb
push
jge
and
push
mov
jbe
fadds
pop
stos
aam
repnz
arpl
or
and
inc
cmp
add
add
push
test
sub
mov
fiadds
sahf
aad
add
jb
push
sbb
loope
add
sbb
push
and
movups
movsl
lock
sahf
jl
xlat
loope
xchg
test
dec
leave
div
cli
ficomps
cmp
out
xor
test
mov
sahf
inc
dec
pop
repz
aam
add
jo
out
mov
xchg
popf
mov
dec
xchg
adc
adc
ret
inc
out
mov
pop
icebp
cmp
jmp
lods
in
xor
xor
pushf
dec
add
xor
call
jl
xchg
cmp
xchg
xchg
add
pop
rclb
sub
xlat
cld
mov
dec
andb
mov
in
cmc
fisubrs
arpl
loopne
fdivrl
shr
sbb
xchg
les
dec
jne
jle
out
mov
jnp
cmpsb
mov
mov
cltd
jno
and
cwtl
pop
mov
push
nop
pop
mov
add
lods
enter
clc
lds
cmp
or
sub
test
arpl
js
pop
cmp
mov
mov
cmpsl
mov
getsec
dec
fcomi
adc
pop
pop
pop
xor
pop
add
cmovp
insb
add
sbb
cs
dec
mov
xchg
push
mov
push
cmp
cmp
add
add
dec
std
out
imul
jae
mov
cmp
iret
es
pop
mov
adc
add
or
int
sbb
shl
sub
cmp
jnp
jle
mov
or
js
fsubl
push
jae
icebp
add
cld
pop
pop
xor
cmp
push
adc
xlat
enter
mov
or
add
ror
mov
xchg
fbld
jmp
mov
push
xchg
jle
test
mov
push
dec
and
xchg
inc
push
clc
sub
lcall
hlt
scas
xchg
or
pop
push
cmp
xchg
js
je
add
add
dec
cmp
xchg
xlat
jmp
jmp
mov
mov
mov
rorb
shr
jns
out
push
and
bound
mov
frstor
clc
lock
fisttpl
insl
mov
pop
test
pop
push
mov
adc
dec
stos
or
push
sub
outsl
xor
pushf
ljmp
imul
mov
and
or
or
pop
in
mov
js
testl
push
test
xchg
cmp
or
fwait
jb
adc
mov
inc
adc
rorl
shlb
arpl
or
mov
mov
cmpsl
jo
notb
sub
mov
outsl
mov
pushf
sbb
repz
dec
jg
test
icebp
test
les
push
lahf
xor
pop
andl
xchg
arpl
lret
popf
fcompl
pop
mov
stos
in
in
movsb
push
cmp
scas
pop
lret
xchg
movzwl
sub
mov
rcll
ja
lods
sbb
pushf
mov
icebp
add
inc
add
pop
xor
test
xchg
add
shr
jge
or
pop
je
imul
movsl
sub
cmp
ffreep
xchg
mov
mov
mov
dec
jp
loope
je
mov
test
cmp
cmc
int
jle
push
es
push
ds
mov
adc
jbe
ljmp
mov
xor
sub
dec
or
into
mov
cmp
xchg
repz
sbb
mov
xchg
jae
out
test
add
pop
sub
popa
loop
inc
notl
push
push
ret
and
mov
repnz
lods
test
loope
pop
cli
outsb
aam
push
insl
int3
sbb
clc
into
sbb
int3
adc
dec
in
test
clc
pusha
jg
push
jne
pop
leave
test
movsb
adc
inc
shrl
xor
mov
pop
fmul
jno
add
dec
lods
repz
iret
or
xor
add
sbb
xchg
out
mov
test
xor
je
xchg
outsb
les
push
repnz
icebp
sub
daa
lcall
aaa
mov
mov
int3
cmp
js
xchg
and
adc
sbb
mov
adc
xor
and
rorb
and
aas
inc
push
adc
mov
rcrl
and
js
aam
or
test
sbb
cltd
icebp
xchg
ja
in
loopne
push
mov
push
lods
into
jb
inc
or
mov
negl
lret
and
push
inc
sbb
and
enter
cmp
pop
or
lret
cmc
mov
fsub
mov
out
xchg
in
leave
fiadds
lea
and
inc
sbbl
push
movsb
test
adc
rcr
lahf
ja
jle
out
lods
sbb
push
jnp
ret
lcall
mov
and
sarb
dec
movsl
mov
xchg
mov
out
popf
pop
ror
shll
in
sti
add
test
and
hlt
repnz
jb
enter
jne
pop
mov
sub
push
test
xchg
xor
ja
add
push
cmp
sub
clc
in
inc
xor
nop
cmp
push
lret
test
jbe
cmp
loop
cmp
imul
loop
test
repz
push
push
aaa
out
xor
xchg
lret
or
xchg
push
insl
adcl
and
add
fmull
adc
mov
out
jne
add
sub
mov
cmp
add
lret
movsb
lahf
xor
fsubr
mov
rolb
lret
add
jnp
adc
mov
pop
lock
mov
xlat
pusha
push
cs
fdivrl
lods
pop
js
int
inc
mov
mov
push
xlat
dec
push
scas
and
call
test
out
sub
and
dec
and
and
lret
loopne
out
int
icebp
push
repnz
and
lahf
jae
push
cmp
test
bound
mov
xchg
ret
add
dec
mov
test
ficoml
lds
sbb
add
push
xchg
cmp
jo
cld
adc
je
cltd
pop
push
clc
pushf
xlat
jg
push
jp
iret
add
dec
jo
lret
test
lods
adc
push
sarb
jns
fisubrl
pop
jae
roll
mov
inc
and
jmp
imul
fidivl
loope
dec
pop
out
leave
cmp
and
add
jmp
dec
mov
inc
adcl
adc
dec
push
mov
mov
rorb
xchg
scas
dec
mov
or
and
aas
and
fmuls
jbe
fs
imul
inc
out
mov
jecxz
mov
fs
sbb
dec
xor
int3
sbb
xlat
popf
fistps
dec
shll
clc
xchg
mov
movsb
lret
cmc
push
xor
popf
push
adc
out
data16
lret
xchg
inc
push
dec
pop
dec
lcall
inc
les
xchg
iret
hlt
sub
ds
cltd
ljmp
data16
lcall
or
push
adc
mov
push
cmp
mov
inc
ret
in
idiv
mov
xchg
movsl
nop
cmc
scas
mov
lret
mov
fisubs
push
inc
cmp
pop
shrb
add
mov
imul
pop
pop
cli
mov
fimuls
xor
cmp
sahf
push
lock
xchg
xchg
or
out
cmp
jg
xchg
add
jmp
leave
popa
clc
push
inc
lret
insb
clc
mov
andl
mov
adc
pop
cltd
and
push
call
gs
js
mov
outsb
clc
insb
mov
pop
jmp
mov
xchg
inc
mov
test
pop
pop
or
push
sub
inc
mov
jl
push
pop
clc
push
xchg
or
loopne
shr
stos
mov
out
lret
sbb
mov
jle
or
jo
std
cmp
jns
test
cltd
fiaddl
push
inc
jmp
lret
lods
mov
xchg
cmp
xlat
cmpsb
addr16
imul
jnp
lds
push
ret
mov
mov
shr
movb
andl
pushl
sbb
dec
cmp
push
inc
xor
and
stos
or
push
push
nop
imul
ds
mov
add
pusha
mov
test
aaa
pusha
movsl
sub
mov
movl
stos
inc
clc
jae
mov
testl
lods
and
out
add
sbb
pop
sti
aaa
mov
cmp
sbb
mov
inc
jecxz
cmp
push
adc
test
jb
daa
movsb
adc
loope
xchg
and
popa
xor
fwait
mov
push
arpl
pop
pop
or
clc
insl
push
fsubl
xlat
push
xchg
and
das
xchg
outsl
mov
jbe
scas
call
inc
sub
adc
mov
adc
test
leave
pop
xor
shll
gs
enter
scas
and
int
inc
cmp
lret
popf
es
dec
xlat
mov
lods
jp
addr16
cwtl
push
mov
scas
adc
mov
and
scas
inc
pop
jne
dec
cli
lock
sub
or
in
leave
jmp
inc
and
into
xor
pop
clc
sbb
fcomps
enter
call
movsb
and
cld
ret
mov
cmp
addr16
clc
cmp
add
gs
fwait
adc
xchg
cmp
xchg
push
aas
dec
mov
jnp
mov
sub
test
dec
pop
inc
fdiv
repnz
bound
push
push
inc
ss
mov
or
orb
add
push
clc
mov
stos
push
stc
add
shlb
jae
dec
mov
test
mov
lods
jae
sub
imul
push
iret
rolb
insl
sub
sbb
popf
pop
and
push
jne
xchg
xchg
js
and
cmp
add
push
jmp
clc
or
push
xchg
daa
xchg
ja
lods
jge
insl
push
stos
out
mov
jbe
js
subb
xor
sub
aaa
out
mov
sahf
sub
imul
inc
pop
and
xchg
icebp
push
jp
sarl
js
and
arpl
test
add
dec
xchg
pop
add
pop
xchg
sub
nop
xor
jno
insl
dec
pushf
sub
mov
inc
sub
add
lret
notb
stc
int
mov
idiv
sbb
jnp
adc
pop
mov
outsl
repz
mov
cltd
mov
imull
ja
mov
jns
adc
lret
movsl
adcl
ret
test
out
clc
das
lea
push
out
imul
hlt
test
rolb
iret
fstps
ss
insl
jns
xchg
imul
jno
fs
test
mov
xor
iret
ja
sti
mov
pop
adc
pop
js
je
cld
xchg
cwtl
movsb
iret
add
hlt
sub
jns
andl
movsb
sbb
mov
inc
sbb
mov
mov
imul
pop
and
and
push
mov
stos
cltd
shlb
pop
bound
adc
aad
out
out
xchg
jae
int
out
mov
mov
cmp
dec
js
es
or
jmp
aam
dec
imul
enter
mov
inc
push
and
sub
mov
xlat
jmp
add
andl
cmp
xchg
arpl
push
testl
adc
and
ret
in
sub
gs
sbb
call
pop
jl
lods
mov
loope
cmp
add
inc
sbb
mov
or
or
mov
xchg
shll
cmp
out
jno
and
and
dec
cltd
sub
cmp
shll
sbb
fadds
lret
ljmp
mov
mov
add
inc
loop
sub
dec
icebp
dec
sbb
lahf
movsl
xchg
push
xchg
sub
repz
lock
sub
stos
add
xor
xor
or
lret
xchg
xchg
int
std
lret
out
outsl
movsb
mov
cmpsb
mov
popf
call
mov
fcompl
fldt
popf
cmp
add
jnp
fs
xchg
push
and
fdivs
jge
sub
outsb
in
mov
fcmovne
dec
sbb
mov
push
mov
pop
jbe
mov
aas
jecxz
jnp
push
jnp
mov
icebp
gs
call
lcall
test
mov
loopne
jae
mov
xor
repnz
push
push
xor
lret
fsubr
inc
push
loop
sbb
jge
repz
sti
ficompl
popf
inc
aas
adc
mov
pop
mov
push
and
lret
xlat
rorb
mov
lret
lds
cld
mov
mov
push
xchg
push
fildll
ljmp
xor
sarl
mov
add
out
popa
cmpsl
adc
mov
xchg
mov
repz
addr16
cmp
lea
push
sub
push
and
mov
push
subl
and
in
into
hlt
cs
ror
xor
cmpsl
sti
cmovo
mov
mov
clc
es
sbb
push
enter
pop
sbb
adc
adc
xor
pop
js
test
jmp
repnz
repz
lods
xchg
clc
mov
aas
ljmp
push
and
pop
in
jg
cmp
ret
push
cmp
loop
inc
cwtl
outsb
mov
lret
icebp
rolw
and
add
lret
lods
addr16
sti
xchg
in
pop
movsb
jbe
jb
jb
js
jl
rcll
cli
outsb
mov
das
mov
test
outsb
iret
lods
sub
les
out
fwait
pop
lret
pop
fadd
iret
out
data16
or
push
xchg
pusha
mov
clc
adc
cmp
data16
push
jle
xchg
inc
sbbl
dec
in
js
pop
adc
mov
and
jnp
aaa
adc
or
and
mov
dec
sub
arpl
inc
push
mov
add
fwait
divb
insl
push
sbb
movsb
in
pop
jb
inc
dec
inc
add
int
sub
add
push
mov
mov
inc
aas
sbb
sub
out
aam
aam
cmc
gs
inc
aad
cs
jmp
and
cmc
and
fwait
xor
gs
mov
js,pt
xchg
dec
pop
mov
ret
in
prefetch
push
push
sbb
bound
clc
inc
pop
fstl
lcall
lret
rcrl
push
inc
arpl
push
insb
jmp
dec
inc
shrd
cmc
dec
fisubs
fcompl
outsb
jmp
pop
aam
cmp
push
lcall
and
dec
and
pushf
xor
dec
loop
dec
jge
loope
je
sbb
and
fiaddl
mov
mov
xor
lods
pop
cltd
je
jge
mov
outsb
dec
mov
lahf
or
sub
pop
les
adc
or
insl
rcl
popa
and
dec
xor
or
stos
ds
lods
dec
or
xchg
lcall
sbb
jge
leave
lea
int3
and
lret
test
out
dec
jo
clc
mul
xchg
add
mov
ss
push
les
outsl
lahf
jns
out
mov
iret
sub
fdivrs
mov
insl
enter
pop
int
aam
movb
push
mov
shrb
sar
cmp
js
add
xchg
rcrl
in
or
pop
xchg
mov
inc
decl
jmp
test
iret
inc
les
jnp
xor
jo
and
mov
dec
int3
test
adc
mov
repnz
test
je
dec
lret
repnz
xchg
imul
mov
mov
inc
push
cmp
ret
mov
dec
xchg
mov
mov
and
in
cmp
icebp
add
lret
enter
btc
fldenv
test
into
dec
jbe
ret
cmp
rolb
xchg
jp
dec
lock
inc
push
sbb
xchg
cmp
cmp
jle
dec
int3
cli
push
roll
pop
add
ret
test
jge
shlb
ljmp
es
enter
sbb
adc
lock
mov
pop
popa
xor
iret
arpl
cmp
or
cltd
lret
rcrl
les
iret
xor
sub
testl
push
dec
shlb
dec
mov
push
lods
xchg
aaa
cmp
ss
pop
lret
xchg
jno
fwait
dec
sub
add
inc
and
iret
mov
sub
xchg
xor
cmp
sbb
call
cld
pusha
int3
push
lret
push
push
mov
jmp
bound
dec
cs
leave
mov
into
fiadds
popa
and
rolb
es
jae
sbb
aam
lret
add
xor
mov
adc
mov
popf
js
pop
dec
xor
lret
clc
inc
pop
repnz
fwait
mov
pop
push
push
pop
push
inc
mov
pop
lret
mov
xor
push
mov
or
sub
sbb
adc
cmp
mov
or
out
in
das
daa
and
mov
out
mov
mov
mov
or
sub
outsl
add
mov
js
push
push
ljmp
inc
js
xchg
mov
aad
mov
mov
inc
repz
mov
mov
ljmp
pop
or
sub
mov
xor
jg
fs
and
stos
push
shrd
test
jne
cld
mov
cs
je
cmp
clc
iret
push
rclb
test
sbb
jle
xchg
ret
or
leave
xchg
pop
mov
test
lcall
mov
push
mov
dec
stos
cmp
dec
xchg
mov
cmp
sar
xlat
andl
xchg
xor
mov
add
lahf
adcb
fs
icebp
dec
add
scas
mov
and
jnp
lret
orb
fidivrs
loop
int3
push
aaa
xor
pushf
jb
lea
add
lret
pop
xchg
daa
xchg
rolb
enter
sub
testb
push
js
mov
cmp
clc
pop
and
aad
jae
lret
mov
cltd
add
jno
and
sub
bound
xlat
addr16
lea
sub
sahf
rorb
insb
or
mov
inc
js
push
sahf
jg
lock
sbb
mov
enter
js
jle
rcl
dec
adc
mov
js
sahf
clc
sbb
je
push
dec
ja
xor
xchg
dec
js
mov
test
add
cli
dec
pop
add
pop
mov
sar
lock
pop
mov
pop
adcb
movsl
sub
dec
testl
iret
movsw
pushf
jo
in
mov
xor
or
adc
xchg
push
mov
movsb
stos
dec
push
stc
arpl
mov
sub
ds
mov
stc
inc
aam
loope
and
fcmovbe
and
js
lret
pop
loope
fcomi
mov
out
add
mov
jo
data16
push
push
jg
call
lds
jle
cltd
mov
fidivs
mov
adc
or
out
shlb
movl
jmp
mov
add
dec
or
scas
dec
xorb
test
ficoml
pop
popf
lret
std
aas
adc
cwtl
shll
enter
jmp
mov
mov
and
mov
or
dec
int3
into
add
push
cmp
mov
jp
movsl
jo
sahf
ds
dec
jp
fdivrs
inc
es
sbb
and
lock
xchg
inc
aas
loope
mov
xor
inc
and
mov
pop
js
cmp
or
push
fldl
dec
adc
lods
sarl
jmp
mov
addr16
int3
pop
xchg
das
pop
xor
bound
clc
pop
scas
enter
sub
movsb
fcoms
in
adc
jmp
addr16
mov
pop
leave
imul
lcall
not
cli
pop
push
and
lret
scas
stos
insb
mov
push
cltd
and
repnz
mov
pop
js
or
or
cwtl
pop
xor
bound
movsl
cli
cmp
loope
int3
sbb
xchg
adc
adc
mov
icebp
pop
add
pop
and
int
test
pop
filds
in
mov
cmpsl
and
lret
mov
sub
push
inc
ja
mov
hlt
shlb
js
pop
scas
pop
sub
mov
stc
mov
les
hlt
and
dec
xchg
in
int3
jl
xchg
ja
add
ljmp
lds
popa
push
imul
mov
ja
dec
xor
dec
clc
popa
data16
jle
mov
lds
jno
xchg
sbb
push
mov
push
push
sub
or
in
jl
inc
pop
popa
push
jmp
mov
stc
aad
call
pop
subl
test
or
xchg
jg
loope
aam
and
add
divl
mov
cmp
lods
pop
aam
cmp
xor
lret
loope
fildll
pop
mul
xchg
out
mov
mov
add
and
lods
pop
adc
hlt
imul
add
js
cmp
icebp
je
js
sbb
fcmovne
xchg
andl
dec
je
shlb
inc
push
xor
cld
enter
add
outsb
xchg
add
shll
xchg
xor
std
repnz
fcmovnb
xchg
dec
jg
leave
pop
bound
out
aam
mov
mov
movsl
dec
jmp
add
stos
jg
cmpb
aad
fsubl
xor
push
out
and
sbb
pop
mov
cmc
xchg
clc
mov
imulb
inc
fldenv
lahf
fiadds
xchg
push
scas
push
mov
ret
lds
js
push
fnstsw
or
sub
cmp
lret
dec
fdivl
inc
cmpsb
mov
mov
out
cmpsl
daa
or
pop
pop
sub
shll
jmp
aad
pop
mov
ljmp
jl
push
jnp
ficompl
and
mov
jl
push
sti
jb
inc
faddl
roll
out
inc
rclb
shll
sub
mov
pop
fsub
jns
jecxz
clc
adc
cmp
cmp
in
inc
arpl
or
cmc
sbb
xchg
inc
mov
in
je
andb
pushf
les
sbb
mov
cmc
sub
jp
loop
jno
add
mov
mov
leave
aaa
dec
ficompl
pop
mov
jg
xor
jno
int
fcoml
filds
pop
dec
xchg
out
scas
popaw
out
sub
js
or
sbb
scas
push
lret
inc
pushf
insb
dec
mov
mov
xchg
mov
in
sub
inc
in
popl
push
dec
sbb
negl
test
or
mov
insb
jbe
xchg
sub
xchg
pushf
test
movsl
sbb
cmp
jns
lods
fsts
lret
xabort
dec
xchg
mov
xchg
jg
fsubrp
dec
cmp
jns
shrl
sti
add
lret
mov
imul
sbb
or
mov
xchg
pop
iret
xchg
aas
movsb
or
dec
cmp
stos
mov
bound
and
data16
xchg
insb
notl
aas
jbe
sbb
bound
ja
xchg
mov
cmp
xor
lods
adc
push
dec
call
arpl
int3
or
inc
and
adc
cli
lods
fildll
and
mov
mov
clc
subl
scas
test
xor
xchg
out
cmpsl
movsb
push
sbb
std
test
add
dec
insb
sub
mov
mov
in
xlat
xchg
ffree
mov
jecxz
and
enter
and
lahf
insl
clc
mov
out
sbbl
lcall
fs
push
inc
lcall
push
shrb
cld
or
in
ficoms
clts
faddl
js
jnp
clc
ficomps
and
mov
lret
lods
loope
in
in
cmp
mov
or
xchg
dec
mov
push
dec
insl
and
mov
xchg
cmp
repnz
push
loopne
xor
xchg
cmp
cmp
test
adc
mov
mov
fsubrl
xchg
mov
cmp
add
test
jmp
push
push
aaa
hlt
shl
add
cmp
ja
push
arpl
jle
cmpl
cli
push
sbb
js
sub
and
xlat
jbe
add
xlat
pop
das
lods
fnsave
sub
cli
adc
fstps
fistpll
stos
ja
push
lds
out
push
xor
push
mov
iret
lods
xchg
incb
fwait
fs
sti
lret
dec
test
jo
rcr
inc
into
xor
lods
loope
cltd
jg
adc
pop
and
mov
xor
jnp
add
mov
jecxz
sbb
lret
xchg
cmp
bnd
loopne
mov
and
imul
jle
sbb
stos
out
loop
pusha
aad
push
mov
das
xor
test
mov
popa
jmp
and
and
scas
add
sahf
add
shlb
xchg
pusha
cmc
jns
xchg
ret
adc
dec
pop
ds
mov
ljmp
mov
push
adc
pop
and
sbbb
mov
fnstsw
fiadds
dec
fs
movsl
adc
ret
lods
ljmp
loopne
loopne
xchg
or
xor
dec
orb
cwtl
or
std
push
lods
lea
inc
test
adc
lret
add
das
ficompl
adc
pop
mov
lret
add
lret
mov
mov
or
jns
rclb
rol
ljmp
cltd
popa
dec
cmpsb
add
movsb
filds
dec
repz
cmc
fcmovu
cmp
lea
mov
xor
mov
shr
out
rclb
js
out
sbb
fildll
or
test
in
mov
stos
into
mov
and
stc
jp
movsl
add
or
inc
int
cmp
xor
cmp
in
hlt
test
sbb
mov
xchg
insl
pop
and
mov
dec
push
adc
in
pop
sbbb
jae
inc
dec
or
sub
nop
dec
dec
js
or
and
cmp
mov
loop
scas
sbb
or
or
aam
lock
lds
lret
adc
xchg
add
xchg
sbb
sbb
jle
dec
lock
xchg
mov
dec
xchg
mov
and
loope
push
loopne
adc
and
popa
jns
imul
cmp
mov
loop
xchg
les
test
sti
push
cmpsb
test
and
push
fs
dec
jg
xchg
jecxz
loop
push
pop
push
pop
fisubrs
mov
mov
leave
mov
or
in
xchg
inc
fcomps
mov
mov
repz
das
or
cli
leave
lret
pushl
or
jno
and
cs
mov
xor
js
cmp
pushf
push
sub
test
pop
push
pop
out
cmp
pushf
jmp
fbld
adc
xchg
rcrb
clc
inc
and
test
lds
loop
fisttps
ret
add
sub
sti
jle
and
mov
js
sti
and
shll
jle
jbe
out
std
sub
stos
stc
flds
popf
jne
ss
inc
add
mov
pop
hlt
and
and
fistpll
xchg
sbb
cs
pop
adc
push
mov
iret
ror
pop
js
dec
jl
or
or
pop
and
pop
imul
sbb
and
sub
mov
sarb
lret
sti
aad
mov
xor
fcoml
sbb
clc
push
dec
xchg
por
fcompp
les
clc
aaa
dec
test
js
dec
data16
xchg
inc
adc
add
roll
mov
push
subl
je
nop
out
stos
xor
clc
imul
inc
push
xchg
xchg
xchg
mov
outsl
aam
cmc
mul
cmp
sub
mov
iret
stc
add
rol
xchg
pusha
mov
pop
mov
push
ja
mov
jmp
xchg
sub
push
xchg
lahf
sub
imul
xchg
lock
sbb
mov
negl
lret
add
mov
ret
mov
push
filds
je
fiaddl
dec
cli
adc
dec
imul
xor
push
ret
jg
aas
les
inc
pop
repnz
imul
hlt
jecxz
test
loope
js
sub
ja
movsl
inc
adc
sbb
das
or
addr16
cmp
mul
cmp
leave
and
push
cmc
pop
test
lret
into
in
jo
or
and
dec
pusha
icebp
js
sub
adc
das
in
add
push
or
jnp
push
js
fwait
sub
or
mov
dec
jne
lret
insl
pop
pop
push
icebp
data16
shrb
fsubrl
or
or
cld
add
mov
cmp
dec
pop
mov
adc
inc
adc
jmp
loop
fnsave
mov
sub
inc
insl
cmp
xor
pop
in
outsl
xchg
mov
add
jg
aaa
xor
cmp
cmp
jo
movsl
mov
xchg
push
inc
les
arpl
in
push
mov
jne
pop
fdivrs
aas
xchg
pop
fdivr
add
clc
bound
pop
or
sub
cmp
jge
cmp
out
xor
and
movsl
movsl
icebp
rcrb
js
jae
adc
or
jmp
add
xchg
popa
ds
in
nop
sti
push
lret
loope
insl
dec
dec
dec
movsb
je
mov
daa
pop
mov
mov
jg
ja
imul
add
xor
mov
fists
stc
xchg
jp
stos
sub
or
xlat
add
jb
in
dec
fs
and
push
rcrl
int
sub
in
inc
mov
ds
test
adc
inc
lret
mov
mov
dec
sbb
jl
fmulp
inc
dec
push
jp
call
mov
lea
fstpt
mov
repz
push
fwait
dec
test
inc
jo
mov
dec
xchg
mov
cmpsb
push
das
stos
xor
mov
xor
dec
lds
and
dec
popl
jo
out
out
ljmp
popa
je,pn
mov
rol
sysexit
ret
xchg
cmovb
lods
fwait
dec
cmc
jmp
mov
loopne
and
sub
jno
xor
lods
arpl
sub
push
scas
or
out
adc
add
std
mov
jp
arpl
jno
mov
push
js
add
out
mov
cwtl
stos
test
aas
xchg
test
mov
mov
add
sbb
hlt
cwtd
es
gs
dec
mov
sbb
mov
insb
and
daa
insl
ss
adc
dec
cmp
xchg
das
pop
xchg
adc
jl
sbb
fstpl
inc
leave
jmp
and
pop
andl
cmpb
adc
push
mov
sti
mov
dec
andl
icebp
inc
enter
js
stos
inc
push
dec
xchg
adc
push
push
pop
orb
push
jo
mov
mov
dec
pop
cld
ja
dec
clc
inc
fs
mov
add
roll
bound
or
fidivrs
jecxz
cmp
lds
jp
aas
sub
mov
push
aam
and
jbe
cltd
mov
xchg
std
lock
jge
sbb
push
or
mov
sbb
aaa
fisttps
mov
mov
cmp
xor
aam
sbb
push
repnz
xchg
or
loope
xchg
je
xor
mov
xor
push
sbb
mov
lret
ja
cwtl
and
add
clc
test
cwtl
hlt
shrl
pop
pop
cli
sub
pop
push
ret
add
lds
push
shll
lds
dec
test
and
test
dec
and
or
lret
leave
lret
sbb
mov
and
mov
mov
push
js
mov
xor
rorl
je
sub
aaa
imul
pop
and
mov
sbb
call
cmpb
dec
push
in
sbb
inc
pop
js
filds
repz
xlat
or
cmp
lods
adc
mov
mov
pop
cmp
aas
cli
stos
sbbb
loope
adc
pop
sub
xor
aas
push
pusha
mov
nop
jne
sbb
sub
jecxz
mov
imul
cmp
adc
test
dec
pushf
out
mov
jns
in
cmc
add
test
int3
fnstsw
insb
jp
pop
cmp
pusha
repnz
dec
movsl
mov
mov
lret
xchg
pop
pop
lea
clc
adc
pop
pop
loop
sbb
jg
aaa
add
lods
movsb
fldt
inc
sbb
pop
mov
jbe
popa
adc
jecxz
push
imul
jle
lret
stos
shll
pop
xchg
push
dec
pushl
call
adc
pop
nop
mov
orb
mov
mov
stos
sbb
inc
xor
rol
stc
je
and
call
fstpl
hlt
pop
adc
pop
sub
jb
push
in
sub
mov
cmp
test
pop
enter
add
adc
js
mov
imul
lret
mov
data16
stos
aaa
dec
dec
and
dec
lahf
pop
add
sub
sbb
jp
push
lcall
jp
bound
sbbl
sub
xchg
pop
mov
ljmp
faddl
dec
repz
mov
js
push
pop
mov
mov
mov
sbb
fisttps
xor
push
jns
ret
mov
mov
stc
pop
jmp
aaa
push
call
sub
inc
flds
clc
mov
shll
xor
rorl
dec
test
inc
jbe
scas
int
mov
cmpsl
sbb
ja
or
pusha
jg
pop
rorb
ja
mov
outsl
clc
cmpsb
add
or
dec
mov
in
shl
push
fsubrl
inc
pop
sbb
sahf
sub
rcrl
js
arpl
jae
push
xchg
mov
aam
mov
sbb
pop
pop
es
and
add
into
mov
sbb
test
cmp
cld
add
fwait
mov
clc
jns
fdivrl
cmp
cmpsb
add
addr16
push
xchg
test
mov
popa
cmpl
jne
popf
sbb
out
mov
cmc
jne
cli
mov
push
sahf
cmp
das
xor
popa
mov
cmc
aam
jbe
ret
sub
movsl
cmp
dec
mov
cmp
mov
in
je
fs
pop
jmp
and
push
xor
dec
stos
pop
mov
add
xchg
movsl
add
xchg
mov
test
aam
push
mov
adc
into
cs
js
jecxz
lcall
icebp
or
fcoml
inc
cmp
nop
pop
sbb
test
push
inc
dec
push
icebp
divl
cs
push
das
hlt
lret
pop
loope
popf
adc
jbe
xchg
stc
sbb
andl
mov
sub
jno
ror
mov
cltd
push
jge
sbbb
cmp
mov
roll
dec
cmp
add
inc
in
xor
lds
inc
xor
sbbl
aam
mov
cmpsb
inc
mov
mov
lds
push
sbb
pop
cwtl
jne
js
xor
add
sub
jp
fiadds
test
dec
pop
pop
js
push
pop
sbb
mov
xchg
dec
andb
lds
ds
pop
leave
pop
dec
or
or
js
icebp
mov
repz
rcll
fmull
or
dec
push
pop
inc
rolb
add
xor
adc
mov
dec
jg
dec
js
cmp
pop
mov
icebp
icebp
add
stos
sbb
ret
mov
or
push
gs
aas
div
xlat
or
adc
mov
mov
cld
mov
dec
clc
loope
inc
aas
lods
xor
add
or
clc
inc
pop
cwtl
aam
lods
xchg
dec
test
loope
popf
imul
js
aas
inc
gs
int3
add
inc
mov
adc
fcomps
jmp
test
enter
ljmp
filds
nop
jo
lcall
arpl
jg
int3
je
cld
test
lret
cltd
cs
lcall
sbb
fcoml
out
jmp
clc
sub
sbb
std
cmp
movsl
add
mov
jg
fcomip
jae
mov
push
push
rolb
movsl
mov
inc
mov
lock
or
xor
xor
rcrb
sub
inc
and
mov
stc
setbe
fnsave
fidivrl
stos
or
pop
clc
push
and
xchg
cmp
fmuls
js
enter
push
jne
test
jg
in
push
data16
outsb
inc
mov
js
mov
mov
test
pop
and
pusha
dec
sbb
je
sbb
imull
push
js
sbb
loop
inc
push
mov
xchg
xchg
fs
aas
movsl
pop
jae
icebp
loop
out
sbb
sti
stos
data16
divl
adcl
shrl
or
push
leave
shll
mov
mov
dec
push
pop
or
pop
cmc
and
fmuls
push
mov
lahf
xchg
cmp
mov
pop
push
fwait
rorb
gs
out
xchg
mov
pop
pop
insl
mov
xor
mov
pop
sti
jnp
cmp
sbb
lea
jp
outsl
gs
mov
lcall
push
sbb
stos
lea
jbe
xchg
stos
jns
mov
jl
add
in
sub
adc
ljmp
sbb
or
incl
add
mov
fwait
stc
fs
daa
dec
sbb
test
les
xlat
push
and
push
jns
pop
sub
sbb
je
clc
cld
in
sub
cld
mov
mov
pop
pop
push
xor
mov
dec
inc
out
pop
gs
or
cli
pop
cwtl
jno
add
add
loopne
aam
mov
cmc
mov
js
int3
sahf
jns
fildl
xchg
xchg
push
addr16
inc
lea
or
add
mov
lahf
daa
lret
push
sbb
xchg
shlb
nop
in
je
fdivs
lods
jg
push
adc
xchg
fcoml
mov
js
adc
add
lret
cli
mov
cmp
dec
dec
mov
mov
xchg
xchg
pop
lods
clc
mov
jne
dec
sub
setns
cmp
push
mov
mov
dec
lret
int
test
inc
fsubl
sub
push
dec
in
mov
push
into
push
xor
push
add
cmp
xlat
ret
xchg
dec
xchg
pop
jne
jg
xor
in
lahf
and
in
jnp
ret
lahf
mov
stc
ret
lret
sbb
sarl
push
or
fcomps
pop
and
mov
push
mov
iret
lret
mov
mov
lret
lret
stos
in
mov
pop
adc
add
vmwrite
jne
fdivp
es
xor
push
adc
cmpl
enter
fnstcw
ds
pop
fnstsw
sahf
in
ret
inc
dec
mov
shll
addr16
je
inc
and
inc
js
sbb
testb
test
repnz
pop
cwtl
aaa
outsb
orl
mov
lret
out
dec
push
aas
lods
js
shll
in
sub
mov
inc
jb
inc
jg
push
mov
clc
and
add
test
fchs
test
push
mov
push
dec
xor
lock
lods
mov
inc
mov
insl
cmp
ljmp
bound
adc
and
out
scas
sbb
pop
jmp
dec
test
mov
mov
jle
sub
add
push
js
stos
faddl
xchg
pop
mov
stos
or
mov
pop
aam
push
popf
pop
cmp
sahf
lret
mov
xor
out
dec
mov
movsb
outsl
jo
xchg
mov
dec
gs
out
or
sub
popa
jb
negb
lret
jmp
and
xor
mov
ljmp
xor
mov
and
or
outsb
inc
lods
pop
clc
adc
xchg
data16
out
cmp
jo
out
inc
mov
cmp
mov
xchg
in
jp
cli
pop
aaa
inc
bound
jmp
lods
jns
je
out
cmp
mov
push
aaa
fadd
mov
sbb
cld
push
xor
jl
rcr
xchg
mov
lcall
stc
xchg
jnp
inc
in
daa
cmc
js
sbb
mov
pop
mov
push
jmp
mov
sbb
lea
or
call
push
mov
outsl
mov
adc
mov
mov
dec
push
lods
es
pop
xchg
cmp
in
mov
mov
mov
or
sub
cmpb
xchg
mov
add
repnz
mov
fimull
fcoms
xor
or
js
call
test
and
pop
nop
in
nop
mov
lods
mov
or
daa
jl
sahf
sub
insb
dec
js
sub
pop
leave
add
mov
xor
daa
mov
fsubs
and
mov
pop
and
jb
loop
stc
inc
aas
imul
jg
mov
fldl
xchg
lahf
das
adc
and
jmp
fs
sbb
pop
or
jg
aaa
call
mov
fdivs
mov
add
movl
out
mov
or
outsl
test
dec
fstps
ljmp
int
inc
clc
adc
adc
push
addr16
rorl
aad
xor
lret
movsb
mov
pusha
push
rol
cli
adc
push
fldenv
cmp
push
mov
fldl
add
es
fs
shll
and
negb
jg
jge
inc
stos
sbb
mov
pop
xor
xlat
test
in
xor
sub
stos
mov
xchg
push
add
lods
fs
insl
pushf
fwait
int3
add
xor
inc
js
popa
add
loopne
jecxz
push
dec
pushf
vpavgw
movsl
push
push
cltd
dec
xchg
loop
sbb
lcall
lret
xchg
call
mov
sbb
inc
mov
incl
add
js
jmp
mov
inc
mov
std
nop
adc
fcom
aad
jecxz
add
fdivl
add
and
loop
xchg
rclb
adc
incl
jle
mov
inc
jne
mov
lods
add
cmp
inc
sub
pop
fnstenv
test
jnp
bound
dec
xchg
cmc
xor
pop
lret
lret
cmpsb
outsl
imul
xchg
js
pop
cli
and
pop
lret
mov
dec
es
fdivrl
and
jmp
popa
or
pop
jbe
nop
incl
mov
pop
cmp
scas
mov
dec
push
fs
mov
loopne
test
sbb
sub
nop
aaa
mov
xor
cmpsb
push
les
rolb
shrl
outsl
mov
pop
jno
out
mov
ljmp
add
adc
or
pushaw
add
aad
mov
dec
and
xor
dec
dec
pop
mov
sbb
es
dec
icebp
aaa
lock
outsb
sti
cltd
cmp
gs
jns
cmc
mov
cwtl
and
jecxz
pushl
and
js
stos
test
loopne
xor
hlt
icebp
mov
xorl
loop
popl
mov
xchg
jno
in
mov
lret
es
in
xchg
mov
lock
hlt
dec
shrl
pop
jg
clc
mov
lea
cmp
dec
clc
xor
inc
or
sub
dec
inc
mov
xor
add
or
xchg
clc
sbb
xchg
push
idiv
ds
shr
pop
js
or
xchg
rorl
and
cmovp
push
sub
xchg
lret
inc
push
xchg
lds
mov
fildll
leave
xor
mov
or
pushl
gs
orl
in
push
push
pushf
mov
mov
add
xor
add
cmp
mov
shl
stc
add
aas
pop
mov
push
push
cmp
in
mov
dec
scas
call
add
push
sbb
dec
mov
mov
dec
call
add
or
mov
sub
bound
notb
mov
mov
test
repnz
js
ds
sbbl
rol
fdivrl
mov
mov
lret
std
ret
push
xchg
lret
mov
int
xchg
xchg
jp
mov
bound
inc
ret
push
adc
or
push
adc
and
idivb
cli
loope
sbb
imul
les
and
push
outsl
fwait
jae
fsubr
test
pop
push
inc
pop
and
adc
je
repnz
cmp
pop
mov
les
aas
clc
and
testl
add
dec
dec
fsub
test
lret
mov
ljmp
fdivs
cltd
sbb
xor
cmovp
pop
sahf
cltd
add
or
and
out
fwait
jbe
gs
adc
or
mov
test
mov
dec
cmp
push
clc
fdivrl
test
or
jns
dec
push
aas
sub
pop
xchg
into
adc
clc
arpl
nop
dec
popf
mov
movsb
sub
fiadds
iret
into
mov
ljmp
and
test
jecxz
imul
push
cli
out
or
mov
mov
xchg
dec
or
cmp
and
aaa
dec
sbb
dec
aam
scas
jmp
sub
push
push
push
jo
dec
push
subb
ds
cmpsl
aas
rcrb
and
je
jbe
or
pop
sbb
stc
push
jo
jecxz
add
dec
pop
pop
stos
ficompl
lock
cmp
clc
clc
cmp
push
arpl
jbe
pop
fndisi(8087
sbb
out
or
ja
outsb
loopne
clc
cmpsb
pop
ret
mov
mov
jp
arpl
stos
jmp
decl
sahf
test
mov
dec
cltd
dec
in
aam
pop
outsb
mov
rcll
mov
orb
daa
sbb
add
add
or
std
cmp
push
js
cwtl
push
popa
adc
xchg
cmpsl
dec
lds
push
dec
fs
push
shll
fcmovu
imul
and
pop
or
dec
daa
faddl
lret
repnz
jg
cld
stos
insb
daa
mov
hlt
or
cmp
js
lods
ja
xchg
inc
sbb
pop
mov
cs
loopne
loopne
add
adc
xor
lock
movsb
loopne
sub
inc
fs
sub
addb
std
push
lret
add
xor
and
mov
loop
lret
sbbb
roll
xchg
jl
sahf
fidivs
mov
clc
mov
cwtl
outsl
stos
lret
mov
fwait
mov
mov
gs
fimull
push
or
aaa
cmpsb
inc
lods
lret
shrl
test
clc
mov
lock
adc
lds
sti
ja
jg
or
mov
daa
jp
dec
leave
rolb
xchg
lock
mov
insl
cld
aaa
dec
mov
sub
int3
add
hlt
dec
cmp
lret
mov
xor
js
push
push
add
mov
inc
pop
roll
mov
cmp
out
jbe
rcll
mov
sbb
std
add
test
scas
lds
scas
ficoms
push
jae
shrb
jmp
push
imul
imulb
adc
sbb
icebp
cmp
outsb
jg
inc
jne
stos
test
mov
testl
pop
cmpl
popf
jno
and
lret
mov
ljmp
mov
xchg
and
xchg
add
inc
subl
mov
push
insb
je
push
inc
xchg
xor
cld
mov
adcb
push
outsl
mov
adc
pop
add
push
outsb
andb
repz
sbbb
inc
loop
ja
xchg
dec
mov
dec
cs
stos
popa
mov
pop
push
xchg
add
ljmp
ret
test
mov
mov
mov
push
movsl
jbe
sub
fstl
push
in
clc
stc
test
lods
and
mov
mov
repnz
xor
add
dec
mov
std
test
pop
testb
mov
outsl
jp,pn
fdivs
aas
cmpsb
adc
mov
xchg
jle
inc
add
sub
push
lea
xchg
int3
pop
dec
mov
cmp
cmp
nop
pop
sbb
push
cltd
push
idiv
add
shl
dec
sbb
shll
lret
jmp
cltd
jmp
xor
cli
inc
push
sub
popf
out
jns
dec
pop
inc
ljmp
fsubrs
xchg
sbb
jb
imul
mov
adc
push
clc
pop
fnstenv
xorb
sub
add
lret
popf
mov
cli
jp
dec
xchg
mov
cmp
scas
lods
jns
addb
cltd
jbe
cmpsl
test
ds
icebp
addr16
xor
lock
or
mov
add
push
leave
pushf
fcmovne
dec
mov
and
mov
add
ljmp
or
cmp
jp
notb
gs
scas
pop
pop
mov
xchg
in
js
lods
mov
sbb
mov
mov
jmp
jne
dec
or
mov
add
or
nop
pop
and
mov
sar
movl
push
push
lcall
lret
mov
lods
jge
lahf
add
addr16
or
cmc
or
fiadds
adc
pop
mov
mov
mov
jl
call
ret
sbb
or
popf
jno
cmp
mov
out
inc
jbe
cmp
bswap
and
shll
imul
xor
adc
or
push
clc
and
mov
pop
and
clc
xor
clc
pop
pop
aam
js
jb
xor
push
sub
xchg
sbb
ffreep
and
fcoms
out
add
push
int3
sahf
mov
clc
pop
fstp
stos
pop
cmp
jo
xor
cli
or
dec
mov
push
lock
and
aas
jnp
cmpsl
pop
gs
or
js
leave
inc
sub
fisubrs
mov
add
pop
adc
and
stc
repz
je
ret
jg
adc
cli
mov
mov
push
pop
fisttps
mov
xor
mov
dec
shll
stc
dec
movb
pushf
mov
add
mov
jp
ja
movsl
or
and
pop
inc
sub
clc
leave
in
repnz
or
mov
hlt
cli
sbb
adc
call
add
fwait
sbb
add
icebp
rorl
ret
add
add
add
icebp
fldcw
and
mov
gs
push
push
aad
and
sar
push
or
dec
inc
mov
add
xchg
int
sti
sub
xchg
je
sub
hlt
insl
cli
loopne
cld
adc
dec
xchg
jl
pop
xlat
rorb
dec
jmp
xor
jg
daa
ret
lahf
add
push
pop
pop
push
data16
outsb
xor
adc
sbb
lds
dec
ret
mov
jno
pop
loop
jo
push
clc
je
mov
jg
push
push
xchg
pop
bound
and
sti
test
ret
dec
mov
std
fcoms
xchg
jb
pushf
xlat
lahf
rolb
push
lret
sbb
loop
sbb
and
test
in
mov
inc
xchg
mov
roll
pop
mov
xchg
mov
jb
mov
gs
mov
fisubrl
add
fisubrl
clc
jo
inc
shll
jo
push
push
pop
jmp
addr16
das
sub
arpl
pop
sti
add
add
mov
in
mov
mov
push
loope
mov
out
fs
jl
and
fidivl
daa
repnz
insl
adc
stos
xchg
leave
jns
aaa
push
sbb
mov
mov
lcall
inc
sbb
jo,pn
mov
fdivr
and
dec
ss
xor
inc
push
cs
push
cli
test
xchg
pop
nop
dec
fwait
scas
mov
dec
and
movsb
push
fsubs
lret
in
fwait
cmp
sbb
jp
int3
shrb
mov
outsl
jp
pop
rcrb
pop
xor
lods
ret
add
mov
push
push
sbb
jmp
cmp
mov
pop
and
xchg
jp
in
or
jp
jae
jecxz
pop
mov
testl
xor
mov
and
push
lods
mov
inc
out
popf
dec
cmp
pusha
jne
pop
push
imul
cmovl
cmp
mov
mov
in
adc
imul
movsb
lret
ret
inc
aas
jge
inc
rorl
cmp
push
or
sbb
js
dec
movsb
sbb
notb
mov
add
or
and
int3
adc
or
add
push
inc
clc
mov
inc
jno
or
mov
imul
xor
bound
shlb
ljmp
sub
adc
ficoml
test
adc
dec
xor
arpl
inc
test
lahf
lret
stc
xchg
jge
pop
dec
jnp
mov
xorl
in
mov
jnp
cmpl
mov
add
lret
pop
das
nop
mov
or
pop
inc
shll
xchg
aaa
adc
in
jmp
leave
jne
lahf
imul
xchg
pop
fistpl
pop
xchg
pusha
test
push
popf
mov
sbb
or
lds
cld
xorl
aad
test
push
js
mov
jns
mov
mov
nop
jns
stos
loop
in
insb
jbe
orl
add
mov
out
scas
or
dec
mov
popa
int3
das
sbb
pop
je
pushf
jl
test
pusha
cmp
push
js
js
mov
xchg
sub
add
mov
aam
imul
mov
popf
repz
mov
mov
mov
add
push
leave
pop
or
mov
filds
ja
data16
lods
mov
xchg
out
mov
push
int3
aaa
rcl
inc
fcomps
ret
sbbb
gs
scas
jbe
mov
pop
inc
out
into
pop
sub
fists
stos
and
mov
jne
mov
sbb
sbb
addr16
std
xor
cmpsl
add
enter
adc
cmp
pop
sub
insl
outsb
cmpsb
in
mov
push
cmp
les
push
and
dec
or
jb
mov
enter
das
fucom
pop
ljmp
xor
lcall
sti
xchg
daa
mov
jo
clc
outsb
movsb
imul
testb
fsubs
mov
fmuls
sbb
nop
lret
inc
xor
inc
or
inc
jle
pushf
pop
and
movsl
inc
cltd
repnz
popa
sub
aam
sub
cmp
mov
imul
into
sti
inc
lock
xchg
mov
dec
cmp
and
add
pop
and
aaa
pop
or
jb
fisttpll
rolb
cmp
push
and
adc
hlt
mov
mov
adc
aas
xchg
fsubs
cwtl
dec
adc
push
jbe
push
int3
mov
mov
inc
push
xchg
imul
push
cmp
loope
dec
mov
jae
fcmove
add
ffree
xlat
xchg
aas
scas
pop
jnp
sub
mov
xchg
lret
ljmp
add
sti
mov
pop
fimuls
iret
ret
cmp
lods
jb
imul
out
xlat
push
clc
scas
push
ja
jo
pop
mov
mov
adc
mov
sub
xor
mov
jne
pushf
cmc
sub
hlt
fcmovne
xchg
mov
stos
test
pop
sbb
mov
xchg
test
movsl
call
lret
xlat
mov
jle
fidivs
xchg
xchg
xor
lret
movsl
or
pop
ds
idivb
outsl
push
lret
sbb
hlt
cmp
ret
and
xor
pop
js
jne
push
fwait
inc
mov
andb
or
scas
dec
jle
test
add
test
mov
je
xor
iret
repnz
aam
mov
mov
mov
cltd
popa
test
push
and
adc
add
mov
dec
add
cltd
out
and
scas
call
xor
iret
mov
cmp
aad
cmpsl
mov
in
pop
sub
push
mov
add
dec
cmpsb
adc
xchg
mov
add
cli
subl
adc
int
inc
cmp
arpl
scas
add
dec
xor
push
dec
xchg
and
roll
inc
js
and
push
mov
popf
adc
in
push
push
xor
push
push
xchg
out
inc
jp
js
nop
and
xor
jae
mov
rolb
test
outsb
mov
add
mov
xchg
mov
pop
xchg
xor
and
fcoms
cmp
jbe
xchg
xchg
mov
sarl
xor
inc
mov
mov
cmc
xchg
test
scas
mov
inc
aaa
sbb
jbe
lods
add
xor
out
aaa
loope
mov
mov
cmp
mov
jge
and
imul
mov
fildl
lret
mov
and
mov
and
js
inc
sbb
mov
fidivrl
push
bound
movsb
mov
gs
mov
mov
xchg
movsb
rol
out
test
mov
fcompl
imul
push
stos
xchg
push
mov
adc
mov
adc
lret
mov
add
fisttpll
jmp
faddp
lret
mov
repnz
fnsave
sub
add
addb
and
orl
jmp
stc
xchg
int
sub
mov
add
pop
mov
add
test
push
shr
adc
shl
mov
test
mov
out
lock
xchg
jmp
cmovae
push
js
push
pop
and
scas
push
adc
jecxz
jne
cmp
or
cmp
push
push
mov
jo
jne
push
xor
in
cmp
inc
int
jo
sbb
jmp
enter
lods
add
dec
lret
cmp
shl
fidivrl
cmp
and
xor
and
clc
rcrl
iret
sub
or
iret
adc
adc
adc
inc
sub
push
fwait
les
cmc
xchg
dec
jg
and
jns
sbbl
xchg
popf
or
ljmp
aaa
jns
js
lahf
xor
dec
mov
test
mov
xor
lock
fdivr
lods
dec
add
popf
sub
in
push
inc
adcl
push
cmp
sub
jg
dec
jp
add
icebp
and
pushl
pop
pop
and
sbb
fistpll
mov
and
jns
loopne
add
jge
clc
bound
sbb
sbb
jnp
xor
lret
andl
sbb
add
sarl
push
push
xacquire
lock
add
dec
sahf
add
test
xor
pop
jnp
out
jbe
add
pop
adc
lods
bound
loop
push
lret
and
test
iret
js,pn
push
addr16
sub
dec
mov
jns
xchg
lahf
push
pop
jno
xchg
dec
rorl
jb
inc
push
imul
hlt
sarl
repz
out
inc
hlt
and
cld
jbe
sub
xor
addl
dec
xchg
push
xlat
pusha
aad
inc
pop
call
jns
mov
push
idivl
cli
fbld
pushf
ds
testb
fs
mov
fldl
push
test
inc
pop
test
iret
add
fisttpl
stc
add
dec
pusha
cmpsb
in
aad
sahf
lds
mov
add
mov
fistpll
popa
and
idiv
test
pop
mov
sbb
jp
call
mov
xchg
movsl
adc
dec
lds
fstl
loop
cmp
lahf
jnp
inc
xor
test
push
xchg
aas
loope
ffreep
int3
lret
repnz
adc
jg
mov
std
or
out
fbld
push
mov
mov
out
push
and
mov
jae
das
xlat
inc
imul
rol
fsts
push
mov
in
cmp
addr16
lcall
mov
and
repnz
mov
aad
or
clc
imul
lret
dec
push
dec
sarl
imul
mov
ja
out
ss
sbb
jae
pusha
gs
pop
inc
jns
lods
aaa
add
pop
cmc
repnz
add
and
jmp
sbb
lret
fsubp
test
mov
pop
add
sub
mov
jl
loopne
loopne
stos
adc
adc
or
mov
add
lret
cmpsl
xchg
pop
xchg
jne
cli
xor
jbe
and
adc
jmp
rolb
sub
pushf
mov
hlt
pop
js
jle
adc
fs
fcmove
fimuls
pop
sub
lret
nop
push
inc
push
and
cmp
hlt
test
push
shll
ja
out
cmp
mov
imul
jecxz
jge
test
jne
stc
jecxz
fcmovnb
movl
xor
add
cltd
dec
dec
popf
lret
push
mov
mov
cs
arpl
adc
push
daa
xchg
xor
sahf
or
push
pop
mov
mov
jnp
and
jae
pop
out
sbb
lods
push
mov
mov
xchg
sbb
mov
mov
mov
adc
cmpb
dec
xchg
mov
mov
out
mov
testb
int3
add
add
lret
rol
mov
lahf
jecxz
mov
ret
test
or
cltd
mov
or
fmul
pop
and
cmpsl
call
sahf
and
mov
xor
inc
sar
cld
mov
hlt
in
mov
into
adc
mov
imul
testl
sahf
mov
push
pusha
xor
adc
test
inc
call
sbb
fs
mov
inc
imulb
lret
jnp
pop
mov
pop
stos
push
mov
cmp
push
sbb
cmpsb
inc
shl
repz
lret
out
aam
imul
or
dec
xchg
cmp
ret
push
push
push
mov
sub
ret
cmc
or
dec
cmp
push
in
adc
repnz
inc
xchg
inc
negb
xchg
lock
mov
movsl
inc
cmpl
xchg
dec
cmp
xchg
or
test
mov
sub
sbb
aaa
sbb
sbb
mov
mov
push
pop
pop
xchg
cmp
sub
adc
jge
pop
pusha
fcom
inc
push
sbb
push
lret
pushf
test
push
push
loopne
testb
ret
dec
clc
mov
sub
push
divb
dec
pop
pushf
push
mov
lds
sub
mov
inc
jecxz
test
imul
pop
mov
jecxz
rolb
enter
outsl
aaa
and
hlt
std
icebp
mov
mov
mov
xor
mov
mov
sti
frstor
loop
mov
add
and
mov
std
sti
aas
mulb
fwait
inc
push
cmp
enter
js
xlat
das
fsubr
ret
cmpsl
mov
push
iret
and
rolb
lea
andb
pushf
jl
bound
fmul
int
inc
and
imul
push
dec
repz
add
dec
data16
cmpsb
out
inc
pop
xchg
test
sub
js
fistpl
or
lret
mov
int3
pusha
iret
pop
divb
call
sbb
call
add
mov
and
not
sub
xchg
pop
clc
cmpsb
in
and
jge
push
loopne
dec
clc
lea
xchg
mov
adc
bound
rcrl
push
leave
cld
call
das
adc
repz
into
lret
mov
push
mov
pop
leave
addr16
add
ret
lds
jg
outsl
dec
mov
mov
aas
lods
xor
cli
push
imul
jae
mov
int3
mov
pop
xchg
dec
std
fcom
jae
mov
movsl
pop
mov
or
xchg
js
push
outsb
cltd
loope
wrmsr
test
push
sbb
cmp
xor
cs
fisttpl
pop
push
jecxz
cmpsl
pop
test
stc
cltd
or
jmp
lcall
push
nop
mov
pushl
sar
or
addr16
mov
jbe
out
in
lods
out
pshufw
lret
nop
std
inc
and
iret
repz
push
inc
push
data16
dec
lret
lods
daa
pusha
pop
and
out
lret
scas
cld
scas
push
adc
and
hlt
pop
js
fmulp
push
rclb
and
and
out
testb
leave
fildll
shrb
loopne
in
or
mov
js
push
icebp
pop
std
shr
repz
sti
sbb
xlat
insl
push
outsl
sbb
int3
sub
pop
fwait
adc
xlat
add
lea
ret
jb
fidivrs
stos
lds
mov
pop
cmpsl
cmp
sub
jae
insl
pop
cli
jne
cli
lds
xchg
xchg
and
mov
mov
popf
jp
lds
mov
adc
in
cmp
pop
clc
inc
pop
push
imul
std
and
stc
dec
aas
sub
stos
in
mov
cmp
and
or
leave
fisubs
outsl
lret
inc
js
dec
es
ljmp
push
fwait
rorb
sbb
sub
cli
jg
outsb
pop
or
push
rorb
js
cs
test
loopne
jg
inc
cmp
dec
xlat
addr16
and
ror
pop
cltd
cmc
xor
adc
xor
xor
sub
mov
js
arpl
adc
dec
lea
cmp
xchg
mov
and
cltd
jae
stos
imul
movsb
aam
add
mov
cmp
lret
fbld
in
add
lret
sahf
inc
imul
mov
lret
sahf
sbb
jbe
jne
and
cmp
inc
and
nop
imul
mov
lret
or
lock
lods
outsb
aad
lret
test
cmp
push
ja
sbb
push
push
and
mov
repnz
inc
js
adc
stos
int
lea
lods
mov
scas
pop
fists
es
and
mov
ficoml
mov
mov
xor
xchg
xchg
repz
test
in
sbb
and
sub
inc
jmp
fstpl
daa
adc
mov
lahf
xchg
hlt
mov
inc
aam
sbb
shll
movsb
mov
lret
lds
je
and
inc
mov
or
sub
mov
lods
andl
das
dec
pusha
xchg
insb
mov
pop
dec
xchg
jmp
or
jno
lds
pop
clc
cli
pop
fsub
sbb
ljmp
jne
cwtl
ss
xchg
scas
shrb
xchg
push
and
xchg
sub
xchg
pop
add
and
xor
sub
mov
xor
pop
fdivr
or
pop
pop
jge
iret
and
and
mov
clc
dec
scas
sub
cmp
inc
xchg
cli
addl
mov
sub
dec
pop
pop
imul
pop
dec
push
jg
ret
stos
lods
mov
dec
push
pop
mov
adc
mov
ffree
stos
pop
mov
pop
add
cmp
notb
lahf
andl
or
fistps
or
les
jecxz
pusha
pop
xchg
xchg
insl
lret
and
mov
icebp
add
aas
jle
lock
push
cwtl
pop
test
jo
out
mov
or
mov
inc
push
je
ljmp
jmp
xorb
cmp
ret
add
jge
flds
test
adc
jecxz
imul
dec
mov
fucomip
arpl
ljmp
mov
aam
jns
sbb
ljmp
leave
sbb
mov
mov
cmpsb
jns
test
jecxz
sub
sti
cmp
sbb
int
cmpsb
mov
pop
push
push
cmp
in
push
dec
ja
pop
pop
jmp
es
xor
xor
pushf
add
cltd
ja
sbb
ljmp
mov
movsl
or
add
inc
cmp
imul
js
ja
shlb
mov
dec
dec
and
mov
data16
outsl
sub
pop
cs
jl
jl
jg
imul
gs
rclb
jb
and
mov
fcoms
fdivs
loop
adc
scas
jae
inc
fisubrs
ja
insb
inc
cld
jbe
imulb
in
cmp
fiadds
aad
xlat
jg
push
and
xchg
mov
push
xor
cltd
pusha
inc
loope
add
inc
xchg
pop
out
sub
test
dec
sbb
lret
ret
lret
xor
pop
and
sbb
sub
mov
ja
lods
mov
call
cmc
fstpl
cmc
fnstcw
aas
mov
mov
xchg
movsl
bound
scas
xchg
lret
aam
dec
mov
arpl
and
adc
out
int
push
dec
push
dec
hlt
notl
add
imul
pop
sbb
or
or
jp
inc
fwait
fwait
jp
dec
push
scas
mov
fldcw
push
cld
pop
mov
clc
fistl
cmp
les
dec
dec
push
cmp
inc
incb
jg
adc
mov
jp
outsb
inc
clc
out
lods
push
sbb
scas
pop
xchg
mov
lret
mov
pushf
pop
addr16
sti
xor
sbb
xchg
mov
cmp
xchg
lahf
icebp
stc
lods
mov
test
nop
sbb
add
js
mov
ljmp
arpl
mov
daa
cwtl
jl
repnz
out
dec
ret
cmp
add
cmp
pop
subb
testl
inc
orw
test
and
call
add
dec
add
mov
cmp
mov
and
adc
lods
out
std
and
inc
and
mov
orl
idivl
sbb
jmp
adc
inc
mov
loopne
jbe
arpl
cmc
dec
jge
mov
jnp
inc
rolb
pop
out
in
ja
cmp
daa
cmp
mov
cli
xlat
and
clc
repz
scas
mov
cmpsl
add
test
ret
pop
test
jno
inc
push
jne
imul
ljmp
jecxz
jl
sbb
pop
daa
mov
xchg
lea
jg
sbb
sbb
ds
notl
push
pop
clc
addr16
pop
test
pop
arpl
jne
mov
cmp
dec
in
mov
jmp
mov
sbb
or
xchg
popa
std
test
in
mov
nop
xor
les
or
leave
aad
cmpsl
adcb
sbb
mov
sub
and
adc
sub
clc
shll
xchg
jns
jg
dec
sbb
fsubrp
insl
cmp
sbb
std
xchg
shll
lret
add
push
pop
clc
int
xor
sahf
repnz
lret
lods
dec
mov
mov
cli
ja
andb
bound
lds
jnp
pop
and
push
and
loop
xor
push
scas
mov
pop
test
aam
mov
shr
mov
shl
popa
mov
ja
push
les
cmp
xchg
in
mov
and
push
mov
jp
adc
or
and
and
pop
nop
pop
push
int
and
dec
loope
add
cmp
stos
push
sub
push
or
pop
testb
cwtl
jmp
outsb
or
movl
xchg
ljmp
mov
popa
bound
cmpb
std
xchg
jmp
dec
movsl
popf
fs
inc
jp
test
pop
dec
sub
xchg
popa
adc
fwait
stos
ja
and
inc
lret
dec
stos
test
or
popl
inc
sub
jo
into
add
dec
push
sub
popa
push
lretw
push
and
cmp
cmp
test
ljmp
cmp
mov
lods
imul
adc
add
int3
cli
jp
sub
lods
inc
cwtl
inc
mov
insl
mov
push
xchg
or
cmpl
cmp
jnp
loopne
js
ljmp
movsl
sbb
repz
adc
jnp
scas
outsl
push
dec
and
insl
push
scas
cmpsb
cmp
sub
outsl
popl
mov
test
sbb
xchg
daa
push
daa
jecxz
es
addr16
jl
xchg
xchg
pop
jae
les
cmpsb
mov
mov
std
xlat
mov
add
das
and
ds
jnp
or
jbe
imul
sbb
icebp
enter
aas
aaa
or
inc
imul
rcrb
daa
addb
in
mov
dec
cmp
jg
add
inc
jl
fsts
pop
imul
sbb
dec
push
sub
test
in
inc
fadd
sub
mov
sbb
sbb
fdivs
add
and
mov
lea
sub
aas
cwtl
lds
lds
loope
mov
and
in
dec
jnp
sub
jge
jno
mov
pop
and
xchg
stos
cltd
jae
sahf
fcmovbe
divb
imul
movsl
ss
mov
stc
cmp
fcomps
inc
sub
lret
mulb
popa
loopne
test
scas
imul
mov
adc
test
lret
lods
cmp
aaa
fisubl
xchg
xchg
andb
cmp
inc
movsb
cs
jle
pop
outsb
repnz
sub
sub
push
xor
push
push
inc
jno
data16
add
lret
cwtl
loopne
sub
mov
cmp
xor
jge
xchg
nop
dec
rorb
or
and
fists
jno
mov
xor
leave
sbbb
xchg
shlb
inc
test
pushf
pop
jmp
dec
into
sbb
add
test
ficoml
inc
jbe
inc
push
lock
fildl
dec
cmp
ficoml
ja
adc
addr16
jne
pop
cmp
enter
hlt
fadds
inc
out
das
insl
add
xor
mov
loopne
xchg
xchg
lcall
sub
sahf
rorb
adc
cs
sub
mov
mov
adc
pop
lret
mov
pop
push
adc
push
jl
dec
das
cltd
ja
xchg
daa
lcall
cmp
add
lret
cmpsb
add
add
cmp
jmp
aam
jp
divps
adc
lods
into
jbe
and
lods
out
pop
or
call
negl
xor
imul
fst
in
mov
and
jne
jle
fs
neg
cli
cwtl
cmp
jmp
lods
test
test
iret
sub
mov
popa
incl
inc
fldenv
adc
in
mov
rcll
imul
jge
ja
dec
mov
sbb
int3
repnz
sub
iret
mov
push
mov
inc
jne
add
lret
mov
inc
into
xchg
sub
push
cmp
les
dec
pop
mov
bound
jae
test
or
sbb
lds
repz
cld
call
cmpsl
xchg
pushf
inc
cmp
lods
sub
stos
inc
pop
cmp
lock
jo
je
jg
xor
xlat
pop
lret
xchg
jmp
push
and
pop
dec
mov
dec
sub
mov
add
dec
cmc
cmp
mov
adc
mov
mov
and
fs
js
addr16
and
and
lret
add
jmp
pop
mov
cmp
add
mov
inc
adc
mov
sub
cmpsb
jp
adc
js
popa
xchg
ret
out
popa
mov
test
sub
mov
mov
mulb
xor
andl
cmp
lock
leave
push
xchg
adc
gs
jmp
pusha
inc
jno
test
leave
adc
dec
mov
lcall
cltd
ja
les
int3
add
lods
clc
call
test
mov
test
jo
lahf
xor
adc
inc
dec
sbb
not
lret
mov
out
adc
shll
ja
mov
mov
cmc
pop
inc
fmuls
jno
or
jl
adc
adc
test
fwait
mov
loopne
push
xor
int
mov
and
andps
pop
add
mov
sub
stos
aas
loope
inc
and
jl
stos
ret
mov
loope
clc
out
enter
adc
xchg
mov
cli
cmp
jmp
xor
adc
xlat
notb
daa
and
cmp
adc
pop
and
subb
addr16
insb
inc
test
sbb
fistps
mov
and
adc
jbe
ja
jmp
or
xchg
aad
mov
mov
lea
lcall
shlb
ja
dec
pop
cmpl
hlt
movsb
xchg
pop
mov
scas
mov
aam
js
dec
pop
mov
in
pop
xor
jne
test
mov
jo
inc
sti
push
cmp
pusha
adc
repnz
inc
orl
sub
fsubl
test
movsb
test
sbb
aam
or
std
xor
lds
add
jbe
int
sti
sbb
fisttps
stos
cmpl
pop
add
lret
cld
pop
xchg
adc
cmp
inc
int
enter
add
xchg
inc
dec
jne
adc
inc
repnz
and
ret
dec
dec
cld
mov
mov
and
adc
push
cmpsl
jbe
pop
in
int3
mov
push
test
add
in
hlt
call
mov
cwtl
test
mov
inc
or
ja
in
shrl
rolb
lret
sub
pop
push
dec
push
fs
jp
sub
cli
cs
push
xlat
sti
push
inc
dec
jp
aaa
js
jnp
add
les
and
cmp
jb
pop
pop
sub
and
inc
dec
xor
dec
xorl
pop
test
nop
decb
sbb
cmpsb
cmp
jl
dec
pop
arpl
and
push
inc
push
imul
add
test
mov
jno
cmc
out
sub
inc
jg
daa
sbb
pushf
clc
pop
cmpl
ret
dec
mov
clc
je
jle
movl
mov
and
outsb
hlt
mov
jge
nop
mov
sbb
sarl
fiadds
cmp
inc
sbb
dec
mov
push
push
and
sub
push
clc
das
mov
in
add
incb
clc
outsl
mov
sti
sbb
aaa
dec
mov
fwait
mov
lret
lahf
sbb
cmp
and
xor
clc
mov
xchg
shrl
ret
push
adc
or
xor
push
movl
cltd
rorl
aam
js
les
xor
add
aad
jmp
jae
daa
mov
sbb
sub
jbe
dec
and
xor
cs
or
clc
sbb
loopne
sub
add
dec
test
add
notl
bound
test
mov
cmp
fistps
lock
mov
jo
adc
sbbl
mov
and
inc
test
jge
add
xchg
mov
and
mov
mov
sub
popf
pop
dec
sub
add
mov
test
loop
aad
int3
daa
mov
xor
adc
sbb
movsb
dec
in
sbb
out
pushf
insl
in
aam
xor
mov
jbe
lret
pushf
gs
data16
adc
and
lret
jecxz
push
cmp
and
fstpl
or
es
xor
xchg
push
daa
jp
lock
or
pop
lods
jo
ret
pop
test
addr16
sbb
rolb
mov
js
daa
mov
in
add
xchg
or
lea
and
leave
cbtw
imul
cld
jmp
daa
and
dec
mov
and
aas
ficoml
sbb
pop
inc
int3
mov
jno
or
sub
jmp
lea
or
inc
xchg
call
hlt
pop
lret
ret
cmp
dec
inc
mov
jns
mov
test
movsb
pop
mov
cmp
inc
add
inc
cmp
loop
jo
bound
cmp
dec
and
sub
out
jo
shlb
add
mov
cmp
jne
js
mov
mov
test
xlat
cs
xchg
int3
mov
movsb
sbbl
dec
cmp
cld
out
cwtl
jns
js
mov
push
pop
imul
jo
or
pop
test
jmp
mov
jecxz
jmp
imul
and
mov
cld
add
dec
mov
xchg
js
out
jne
xor
movsl
aas
das
stc
sbb
repz
std
pop
xchg
pop
and
push
xor
loope
lds
fdivp
mov
mov
push
in
and
rorl
mov
adc
cmp
xlat
fstpl
push
adc
cmp
mov
xor
add
mov
cmp
std
lret
mov
aam
hlt
loope
dec
out
sbb
mov
adc
ljmp
jns
pop
pop
movsl
xchg
in
mov
lcall
nop
popf
mov
out
mov
inc
pop
pushf
jp
pop
clc
divl
adc
pop
add
push
jge
adc
lock
int
negb
outsl
sbb
push
and
loop
sbb
cld
stos
cmp
xor
pop
push
test
popf
xchg
stos
jne
mov
mov
rep
mov
je
iret
filds
ret
mov
dec
push
cmpsb
in
mov
dec
mov
cmp
fdivl
in
imul
xchg
dec
test
inc
cltd
cmc
push
xchg
pop
mov
or
cld
gs
xchg
loopne
ror
notb
mov
test
out
imul
std
pop
int
movsb
rcrb
dec
js
movl
mov
mov
cmp
loope
pop
ljmp
xchg
xor
mov
clc
push
sbb
inc
shlb
sbb
in
jo
fildl
out
jge
aad
cmp
or
xorb
inc
inc
mov
subl
dec
or
and
add
adc
subl
idivb
xchg
and
mov
les
and
mov
dec
push
cli
jb
bswap
hlt
dec
push
fmuls
mov
dec
mov
pop
addr16
pop
divb
pop
insb
shlb
cltd
lock
jp
loopne
cmp
sbb
fldenv
dec
pushf
aad
fnstenv
jecxz
scas
jg
push
push
fsubl
jmp
sarl
xchg
mov
cmpsb
and
mov
repz
mov
xchg
push
outsb
clc
leave
data16
clc
mov
push
pop
pop
nop
xor
js
ret
clc
stc
push
sbb
js
popf
xchg
call
mov
xor
imul
repnz
or
add
adc
jmp
xor
mov
clc
mov
addb
cmpsb
loopne
pop
js
ret
lret
cmp
jns
push
inc
mov
fdivrs
icebp
sarl
pop
leave
test
jno
lret
mov
bound
adc
add
dec
cmc
or
in
or
jnp
das
insl
mov
imul
loop
scas
fisubrl
dec
sbb
jb
shlb
pop
clc
dec
jge
mov
inc
pop
sbb
or
bound
inc
push
test
popa
movsl
vpackuswb
mov
push
add
sbb
roll
add
mov
pop
aaa
mov
and
mov
movsl
lods
daa
outsb
lret
mov
or
cli
loopne
ficoml
xchg
ja
les
push
jl
pop
or
jmp
and
dec
dec
inc
push
js
andl
orb
mov
inc
push
sub
dec
push
test
and
int
lds
in
in
jne
test
lds
xor
cmp
addr16
mov
pop
xor
sub
aad
cmp
cld
mov
loope
leave
mov
rolb
and
mov
mov
and
lret
inc
add
push
imul
das
fiaddl
sub
jno
mov
imul
jne
enter
lds
jle
clc
push
lea
mov
je
scas
icebp
xor
mulps
testl
and
in
out
push
dec
mov
clc
rclb
jmp
inc
pop
out
and
ret
sbb
icebp
pushf
sub
or
lret
addl
push
inc
jae
pop
pusha
insl
clc
sti
xchg
dec
or
push
mov
les
cmp
push
clc
leave
mov
add
dec
cld
sbb
and
jl
push
mov
bound
jns
cmp
fs
or
cmp
add
push
cmpsb
int
js
xlat
pop
int3
cwtl
sbb
mov
push
dec
lcall
add
push
inc
mov
fmul
mov
clc
push
imul
adc
outsb
xchg
jg
rcll
xchg
jl
xchg
adc
xor
sbb
cmp
cld
sbb
dec
je
dec
xchg
repnz
mov
icebp
dec
mov
and
jp
cltd
sahf
lret
cmpsl
jo
or
lret
jmp
ret
fdivl
mov
idivb
imul
pop
inc
int3
dec
sti
jmp
imul
jmp
popf
data16
sub
hlt
and
popa
mov
popf
lcall
add
test
fildl
fdivrs
mov
js
sbb
ljmp
ss
inc
sub
adc
inc
pop
jecxz
jb
lods
scas
dec
xor
sbb
in
mov
subb
add
dec
add
xchg
pop
fs
or
mov
test
es
rcrb
ja,pt
adc
sti
mov
jmp
adcl
jae
test
jae
xchg
mul
fs
fnstenv
cmpsl
test
xchg
dec
add
les
lds
or
pusha
and
pop
js
pop
and
call
inc
cld
bound
ds
dec
or
and
and
imul
or
push
mov
and
clc
jmp
addr16
sti
push
push
cmp
clc
ss
div
add
lret
add
mov
sbb
and
cld
push
loop
or
or
sbb
into
dec
notl
or
imul
jl
stos
dec
clc
xchg
jmp
test
cli
lret
lods
fisubrl
dec
sahf
mov
xor
sub
push
ret
mov
xchg
sub
push
mov
mov
das
scas
pop
js,pn
ss
and
jb
xchg
idivl
mov
inc
mov
jb
jo
mov
adcb
fs
xor
test
test
xchg
jo
stos
icebp
lret
dec
sub
sub
mov
mov
and
mov
lcall
inc
outsb
jo
inc
scas
mov
sub
pop
ret
add
lea
mov
xor
es
xor
inc
lret
and
sub
les
loope
dec
lods
imul
push
test
dec
xor
std
aam
in
xor
fldl
stc
and
mov
sbb
iret
jns
les
mov
sub
dec
add
xchg
push
loop
hlt
and
xchg
and
xchg
sbb
and
xchg
inc
div
sub
fnstcw
inc
sarb
sbb
iret
test
xchg
mov
adc
sbb
out
mov
cmp
dec
mov
js
jg
sbb
je
or
push
in
and
jmpw
push
fwait
mov
push
sti
cs
sbb
enter
push
lcall
adc
push
jl
arpl
and
mov
pop
subl
in
clc
adc
cwtl
pushf
adc
sbb
or
jno
mov
pop
pop
push
pop
stc
adc
sbb
push
fld
dec
adc
or
add
pusha
stos
xor
rcrl
xor
scas
and
xor
sbb
jmp
int3
adc
pushf
mov
pushf
jno
push
stos
in
mov
or
mov
sub
cmpl
test
and
insl
xchg
cmp
fbld
inc
out
lods
les
dec
ret
sbb
mov
pop
lea
es
test
cmp
push
pop
push
mov
scas
dec
negl
xor
std
movsl
cmc
popf
fildl
push
adc
xchg
pop
stos
jb
flds
jl
add
cli
loopne
sti
dec
loopne
vmread
ja
int3
xchg
xchg
enter
dec
push
inc
inc
das
daa
pop
sahf
inc
add
sbbl
xor
or
rolb
or
jne
jne
pop
inc
fidivs
clc
add
xor
inc
lret
xchg
dec
out
int3
xor
jb
fdivr
daa
into
lret
fmuls
sar
cltd
mov
or
add
std
jecxz
and
adc
adc
repnz
xchg
imul
lret
insl
jns
dec
sub
add
in
push
mov
push
or
js
push
movsl
and
mov
iret
mov
loope
inc
sbb
cmpsl
and
loop
data16
xchg
push
xor
imul
aas
scas
aad
add
lret
mov
outsb
xor
int
dec
mov
fcmovnb
mov
mov
cmp
ds
stc
jne
jno
jle
clc
add
lret
ficoms
jbe
adc
jns
stc
cmpsl
stos
dec
jg
clc
or
out
mov
xchg
push
xchg
ficoml
les
clc
mov
nop
cmpsb
push
push
push
push
xor
adc
push
dec
repnz
xor
data16
ja
test
mov
xor
int
jb
or
mov
imul
aam
negl
cmp
jne
lret
cmpsl
inc
cmpsb
data16
cmpsb
subb
das
scas
adc
or
movsl
fcmovu
je
loop
push
push
inc
les
stos
out
xchg
out
repnz
dec
jns
cmpsl
or
adc
sbb
push
dec
mov
sti
ljmp
lret
std
je
call
fildll
sbb
es
jnp
jp
jb
test
fsubrl
inc
sbb
mov
iret
sub
cltd
cld
add
and
mov
ret
out
sbb
mov
btc
aaa
jb
clc
nop
mov
cmpsl
dec
mov
push
push
hlt
nop
testl
inc
pop
xchg
add
daa
es
insl
xor
adc
add
lret
cmc
aad
and
cmc
mov
dec
dec
loope
dec
push
lahf
popf
sbb
or
dec
lret
aam
sub
dec
cltd
lds
stos
cld
sbb
fnstsw
test
xchg
aaa
fdivrs
push
push
rolb
int3
xchg
mov
inc
push
cmpsb
adc
pop
inc
inc
jmp
pop
insb
and
out
js
add
std
ljmp
dec
sbb
sub
das
sbb
and
pop
mov
mov
adc
jmp
and
dec
xlat
and
dec
push
lret
enter
imul
lret
ss
les
push
clc
outsl
dec
push
jmp
subl
subl
jb
stc
ljmp
clc
das
inc
cltd
pop
inc
negl
mulb
hlt
mov
loope
ret
fimull
add
fdivrs
loopne
push
mov
inc
push
cmpsb
out
out
add
cmp
mov
inc
pop
mov
jbe
dec
js
mov
andb
inc
pop
mov
popf
ds
fsub
loopne
insb
stc
mov
and
cmpsb
roll
fstpl
jns
ja
mov
xchg
gs
mov
and
jecxz
lret
cmpl
mov
sbb
into
adc
push
push
xchg
push
pop
aam
js
mov
das
mov
sahf
lea
mov
jp
popa
clc
inc
ret
aam
adc
test
xchg
movsb
sub
ret
loop
out
xchg
fdivrl
cmp
mov
mov
cwtl
je
lahf
outsb
lret
xchg
lods
jge
adc
mov
and
nop
rol
xor
test
fisubs
aam
lock
shll
cmp
mov
cmp
xor
adc
clc
repnz
adc
fcom
jae,pt
pusha
xchg
sub
call
push
xchg
push
lret
jg
dec
inc
pop
xchg
jo
lods
scas
pop
push
mov
mov
cmp
jecxz
push
mov
out
loopne
cwtl
xchg
mov
jne
loope
repnz
mov
je
testb
fdiv
dec
sub
cmc
push
les
jb
and
sub
mov
xchg
data16
xchg
or
clc
dec
adc
mov
scas
addl
enter
dec
xorl
gs
jg
push
andb
insl
clc
and
dec
shrl
dec
xchg
in
mov
or
mov
adc
sti
loope
and
aad
les
inc
shlb
fisttpll
xchg
xchg
sub
mov
sbb
mov
fidivrs
and
jne
adc
scas
sbb
mov
les
sbb
dec
mov
or
or
lret
call
sub
fwait
cltd
cmp
xchg
rclb
mov
jp
icebp
rolb
sub
jns
sbb
loope
jecxz
sti
pop
mov
jle
cmpsb
out
cmp
inc
lds
lock
jbe
bswap
clc
xchg
and
movsl
cli
lcall
filds
sub
insb
mov
mov
sarb
mov
xor
cli
jae
add
lcall
aad
mov
inc
inc
jae
mov
mov
mov
ret
aaa
clc
pushf
pop
mov
test
xchg
and
subb
cli
mov
xchg
pop
outsl
push
inc
jo
push
mov
js
insl
adc
pop
add
test
ror
lcall
test
xchg
rcrb
dec
add
xchg
les
filds
mov
rcrl
in
bound
inc
push
pop
lock
xchg
push
push
outsl
or
stos
ret
add
test
sarl
lds
fcomp
jmp
mov
das
pop
push
sub
add
out
add
dec
fwait
push
and
lahf
loopne
ds
cmp
out
xor
shll
ljmp
into
push
test
jae
mov
jg
loopne
xor
jg
fnstenv
js
int
enter
jbe
sbb
dec
mov
jne
loopne
fbld
push
jo
mov
and
fnstcw
rclb
and
adc
popf
xor
mov
cmp
out
jbe
pop
hlt
movsl
mov
xchg
ret
push
sbb
insb
fmuls
push
dec
js
push
or
test
ds
shll
loopne
and
aaa
push
rolb
inc
stos
std
adc
imul
in
cmp
ja
cld
adc
fisubrs
stc
mov
adc
je
leave
gs
cld
lods
cmpsb
jo
faddl
nop
xchg
scas
cwtl
and
sub
cmp
in
imul
and
pop
xchg
lock
cli
push
or
orl
stos
jmp
jnp
and
dec
push
sub
js
xchg
add
rcr
je
and
and
leave
mov
sbb
orl
xor
daa
mov
adc
int
lock
pop
mov
pop
in
mov
ljmp
mov
rclb
icebp
dec
and
scas
mov
dec
div
imul
mov
sbb
mov
add
sahf
adc
sub
bound
adc
aas
leave
push
mov
mov
ljmp
sbb
out
push
push
or
push
cmpsb
dec
out
push
sti
cmp
add
mov
jle
lret
mov
faddl
jmp
test
into
xchg
lret
lcall
pusha
inc
bound
cmpsb
fiaddl
inc
lds
imul
push
shlb
int3
movb
fidivrs
mov
add
nop
cmp
jl
push
cmp
movsb
in
cmp
rolb
jb
xchg
cli
lds
or
adc
push
inc
lret
cmc
aam
mov
lods
xchg
pop
jp
dec
mov
in
fisubrs
sbb
test
nop
call
xchg
cli
jbe
mov
lock
inc
or
ja
inc
movsb
add
data16
pop
mov
je
and
lock
cmpsl
adcb
rclb
lcall
icebp
xor
icebp
andl
test
push
sbb
mov
xor
push
divl
mov
dec
mov
int
jp
js
jae
adc
icebp
repnz
mov
nop
outsb
xor
aas
cmp
add
sbb
lret
inc
cmp
js
dec
or
xchg
scas
lods
dec
mov
fcmove
sbb
scas
push
push
cmp
jecxz
aam
push
mov
pushf
imul
cmp
gs
add
mov
aad
push
pop
jns
add
fldl
and
scas
iret
inc
xchg
es
orl
sarl
xor
and
xchg
and
jmp
int
and
add
divb
in
jne
in
cli
gs
xor
imul
inc
add
lock
fisttpll
outsb
out
inc
mov
or
scas
movsl
rcr
nop
in
add
jbe
scas
adc
test
div
call
push
xor
and
and
mov
mov
stc
bound
shrl
repnz
push
mov
jecxz
cmp
cmpsl
xchg
lret
and
add
rcr
je
jno
push
mov
pop
fdivl
mov
cmp
test
jne
xchg
mov
leave
xchg
hlt
cmp
dec
int
push
mov
lods
cmc
add
loope
mov
adc
js
and
je
fcomp
jge
and
push
xchg
test
mov
dec
dec
and
lock
dec
jb
arpl
aad
pusha
rorb
mov
cmp
or
out
mov
jno
pop
pop
pop
xchg
mov
gs
mov
les
aad
and
and
dec
data16
dec
ret
adc
loope
sub
inc
sbb
lret
shll
test
or
dec
cmpsb
adc
dec
mov
xor
xchg
insl
mov
cmpl
out
cmp
sub
or
test
push
xchg
stos
lret
lret
icebp
loope
in
popf
jle
out
shll
dec
dec
scas
test
frstor
jae
mov
into
clc
xchg
fs
and
pop
pop
ljmp
in
push
nop
sbb
lret
adc
loopne
fisttps
cmpsl
fdivrl
xor
mov
test
jns
lret
ret
sub
in
push
dec
repnz
mov
jge
pusha
jge
rclb
js
shrl
add
sbb
push
mov
stos
in
call
adc
in
out
mov
mov
ret
je
mov
ljmp
fnstsw
push
frstor
xor
sub
loope
mov
int3
xlat
aad
push
xchg
mov
rcr
adc
jnp
pop
es
out
scas
cmp
or
lret
shlb
scas
add
mov
loope
push
dec
int3
std
mov
fsubr
lret
mov
insb
mov
add
test
sub
orb
add
dec
push
pop
int3
or
or
pusha
in
mov
mov
test
insb
daa
lret
je
cmp
pop
dec
push
xchg
pop
and
inc
out
xchg
popf
adc
mov
scas
lock
cmp
ret
jecxz
add
repz
dec
push
jecxz
push
shr
negl
lret
loopne
push
leave
fidivl
js
pop
rolb
icebp
or
xchg
in
cwtl
ret
or
jecxz
mov
and
push
cmp
jae
dec
push
iret
testb
test
mov
aaa
pop
sbb
shll
loop
sbb
jnp
movsl
test
std
hlt
rorl
stos
insl
or
xchg
dec
lret
or
xor
mov
jno
movsl
repnz
jno
push
in
and
add
ljmp
mov
add
lret
xor
pop
mov
out
or
pushf
xor
dec
xchg
jno
cmp
das
loope
add
and
daa
fisubrs
xor
jo
mov
mov
mov
inc
sub
into
nop
lahf
mov
dec
inc
jae
mov
and
addr16
pop
xlat
pop
lret
insl
fwait
inc
and
inc
jnp
popf
dec
and
xor
mov
scas
filds
cmp
leave
mov
jnp
push
pop
dec
push
lds
dec
jmp
daa
into
roll
or
movsl
shlb
out
mov
and
xchg
mov
lods
paddq
dec
or
or
cmpb
xor
mov
mov
fnstsw
xchg
pusha
sub
sub
test
out
pop
into
or
test
into
jp
cmpsb
leave
lret
xchg
or
fmull
sub
dec
sbb
stos
sbb
xor
mov
mov
mov
and
movsb
int3
inc
mov
popf
fs
ret
out
dec
out
sti
test
xchg
jmp
daa
lds
pusha
sti
push
fdiv
mov
xchg
nop
lcall
xchg
mov
pop
aas
jg
mov
fwait
shrl
mov
push
inc
call
imul
push
dec
enter
xchg
jb
inc
mov
mov
pop
mov
daa
test
clc
stos
jecxz
sub
test
scas
mov
icebp
adc
adc
and
pushf
inc
xchg
mov
mov
insl
addr16
mov
push
inc
ja
and
bound
cmp
cltd
cli
aad
pop
mov
movsl
xchg
out
add
xchg
xchg
sbb
js
mov
cmp
inc
add
push
ja
orb
rcll
cwtl
lret
shlb
xchg
insb
loope
rorl
clc
push
ret
mov
mov
push
data16
mov
cwtl
test
inc
out
fdiv
mov
mov
xchg
xlat
call
or
in
in
js
xor
icebp
mov
lret
test
dec
push
aaa
cmpxchg
in
push
bound
sub
int
sti
test
xor
push
dec
adc
mov
fld
rcrl
push
xchg
hlt
addl
or
dec
ret
dec
jnp
out
pusha
push
and
lret
cli
mov
je
mov
cmpsl
pushf
sbb
sub
mov
sarb
mov
and
cmp
subb
add
dec
mov
push
test
xchg
shll
jae
mov
dec
adc
xor
fs
inc
test
ljmp
js
adc
mov
mov
outsb
xlat
imul
adc
push
mov
movsl
shl
negl
insb
daa
icebp
std
push
fdivl
hlt
mov
push
ret
lret
pushf
mov
sbb
inc
loope
movsl
dec
cmp
testl
xchg
mov
mov
int3
push
jns
add
pop
js
cmp
sub
loopne
test
pop
mov
lahf
ja
push
pop
stos
mov
aas
jle
jl
add
push
xchg
add
mov
loope
mov
pop
adc
push
clc
and
ljmp
mov
pop
rcrl
xor
cmp
mov
add
dec
xchg
cmp
dec
push
push
cmpsb
adc
cmp
out
mov
bnd
andl
mov
jae
syscall
cmc
mov
rcl
jb
push
pop
push
test
inc
inc
int3
adc
inc
cmp
outsl
aam
pop
mov
mov
in
push
icebp
jmp
mov
mov
jg
add
add
mov
icebp
aad
sub
loope
add
ss
xor
mulb
sbb
push
push
sbb
test
add
cs
or
push
sbbb
or
xchg
aas
ficoms
negl
dec
int
mov
add
mov
cmc
cmpsl
loope
dec
jecxz
and
iret
movsb
jo
adc
divl
inc
hlt
mov
cs
mov
adc
popw
or
inc
jns
xchg
lods
add
adc
loop
sub
or
jns
mov
jae
cmpsb
test
inc
inc
mov
inc
js
das
sbb
xor
dec
cmp
rcll
sub
fsubl
mov
ja
lret
ljmp
dec
inc
jns
mov
pop
daa
jg
lret
jl
or
push
mov
or
jae
fidivs
and
in
pop
pop
ds
xor
inc
sub
push
cltd
rolb
or
mov
pop
xchg
xor
jbe
popf
add
pushf
fs
jmp
pop
cmpsl
inc
mov
lds
call
push
scas
cmpsb
test
mov
test
jecxz
or
lret
mov
test
pop
jl
into
jecxz
dec
or
repnz
push
cmp
pop
gs
cmc
call
scas
cmp
repnz
jno
dec
out
das
addr16
jp
fmuls
stos
and
lret
dec
shlb
xchg
mov
enter
and
out
enter
scas
dec
push
aaa
xchg
sbb
es
arpl
mov
rcll
out
test
sbb
jmp
test
mov
dec
aaa
sti
icebp
daa
js
lcall
test
sbb
cmp
scas
mov
test
xchg
stc
lret
lods
pop
mov
and
jnp
imul
ss
fistps
out
cmp
out
fstps
ret
fcoml
dec
clc
data16
scas
sbb
shrb
sub
jno
inc
insl
js
lds
insb
mov
jae
negb
mov
clc
xor
pop
pop
pop
pop
pop
lock
movsb
bound
xor
pushf
nop
and
icebp
push
leave
out
daa
insl
xor
lds
adc
mov
jge
lret
shr
pop
pop
std
mov
negb
test
inc
xchg
xlat
inc
fsubrl
mov
ljmp
enter
cmpsl
push
or
sub
stos
mov
mov
iret
nop
push
in
xchg
pop
lods
add
dec
pushf
cmpsl
out
pop
lahf
lea
and
adc
into
dec
cmp
inc
aad
ret
cmp
pop
xchg
mov
out
mov
mov
inc
ljmp
push
in
ret
clc
rorl
and
in
sbb
mov
jmp
scas
fldt
xorb
loop
and
shrl
add
bound
fdiv
and
cmp
js
mov
lock
push
fiaddl
sbb
pop
arpl
bound
mov
or
adc
js
mov
scas
aaa
dec
lahf
push
jg
roll
repz
clc
aad
in
cld
pop
ret
outsl
adcb
mov
inc
push
js
jno
pop
negl
pop
rcl
outsl
aas
cmc
fnstenv
clc
push
pop
inc
pop
mov
into
test
pop
cmp
inc
xor
push
xchg
mov
adc
xor
pop
orl
stc
aas
inc
xor
jg
push
aaa
or
inc
mov
pushf
cld
cld
aas
shlb
cmp
adc
test
fdivl
xchg
mov
hlt
add
and
stc
lret
lret
mov
fdivrs
pop
icebp
mov
out
loop
xor
test
adc
mov
fadds
insb
outsb
test
data16
push
mov
mov
or
push
xor
mov
dec
sub
xor
adc
xlat
sarl
cmp
adc
and
scas
je
push
shll
and
aaa
inc
pop
sub
or
cmp
cmc
lock
arpl
imul
sub
loop
push
scas
fwait
les
xchg
add
clc
in
push
stc
jnp
in
mov
sbb
dec
stos
je
cltd
or
jbe
sub
cli
mov
shrb
cmp
dec
push
and
pop
sub
cmp
mov
scas
jb
and
je
and
or
insb
loope
mov
ss
push
adc
je
in
js
sbb
popa
fs
test
dec
icebp
cwtl
scas
pop
jne
cmp
pop
adc
mov
inc
add
outsb
pop
je
dec
aam
icebp
xlat
dec
mov
daa
push
adc
gs
repz
gs
clc
outsl
and
je
hlt
inc
js
cltd
xchg
mov
push
shrl
mov
dec
jbe
out
jmp
jl
or
cmp
ja
add
ss
mov
dec
jge
les
or
jp
jns
and
je
out
ljmp
clc
pop
lret
out
xchg
es
sub
sub
inc
div
push
jne
sbb
pop
jb
mov
or
nop
dec
and
mov
in
dec
sub
iret
or
fnstcw
add
fstpt
lds
jbe
fimuls
jae
das
addl
dec
mov
mov
sbb
data16
sar
push
outsb
lock
js
inc
jge
xor
outsl
rolb
cmp
test
mov
pop
inc
pop
or
pushf
popf
ds
out
push
icebp
in
cmp
push
mov
addr16
or
jb
outsl
mov
in
pop
fisttps
mov
jne
dec
adc
sub
jp
add
movsl
test
add
dec
xlat
mov
mov
inc
add
and
inc
cmpsl
js
mov
jno
push
mov
adc
xchg
pushf
pop
mov
xor
enter
cwtl
mov
mov
jns
rolb
dec
hlt
cmpsb
lods
or
jb
pop
mov
jne
cmpsl
add
ret
movsb
inc
mov
pop
jno
pop
and
sbb
daa
xchg
movsb
jne
data16
scas
les
sbb
and
and
clc
dec
jle
pushf
mov
cmpsl
xor
mov
shl
and
das
dec
xchg
sbb
or
das
movsb
ljmp
push
aaa
xchg
movsl
sub
lock
mov
push
setl
mov
jmp
lea
xor
dec
stc
loop
cld
test
sahf
lret
xor
test
aam
in
and
mov
push
das
loope
in
mov
mov
fcoml
pop
pop
leave
dec
push
loop
or
push
and
jecxz
ljmp
push
jl
mov
emms
xchg
iret
in
add
or
les
pop
movsl
dec
push
in
fstpt
mov
mov
xor
clc
mov
aaa
pop
ja
dec
adc
out
popf
scas
adc
adc
add
lret
cli
fists
ret
icebp
add
icebp
cmpsl
mov
inc
outsb
push
pop
rcll
and
test
scas
ljmp
sbb
pop
dec
pushf
fists
and
mov
add
mov
fwait
dec
cmp
jnp
add
lret
xchg
mov
mov
lcall
dec
sbb
repz
iret
cmp
mov
cmc
cmp
sub
dec
lahf
loopne
jge
xchg
cmc
cmp
adc
int
sub
xchg
out
lahf
sub
inc
sub
and
cmp
dec
adc
lret
fnstcw
pop
repnz
cmc
lcall
sub
js
sub
movsl
add
sarl
in
pop
push
loope
ja
into
je
scas
inc
mov
or
iret
dec
sbb
js
xchg
add
xchg
xchg
call
add
and
rclb
mov
mov
stc
add
mov
mov
mov
decl
testl
push
rclb
enter
fiadds
clc
lahf
cmp
xor
inc
adc
fimuls
insb
jg
mov
rolb
popa
es
mov
lahf
cmp
daa
xchg
ret
in
stos
add
jecxz
or
imul
fwait
hlt
dec
insb
inc
lcall
std
ljmp
lret
pop
fisttpl
sub
jecxz
lret
daa
add
mov
lods
fbstp
cli
lret
sti
xor
imul
fisubrl
popf
lret
lods
adc
daa
call
mov
cmp
push
movsl
or
das
add
fsts
test
cmpsl
mov
ss
dec
and
push
shld
push
lock
inc
mov
push
popa
cmpsb
mov
sbb
js
pop
push
push
hlt
mov
add
dec
or
mov
and
xchg
cmovno
in
cmp
push
aas
std
xchg
mov
les
push
xor
ss
sub
jp
andb
dec
ret
cmc
mov
xchg
les
repnz
mov
out
js
add
sub
sub
mov
gs
mov
lods
add
fwait
scas
call
dec
idiv
mov
pushf
shrl
mov
or
fadd
add
cmp
icebp
ja
sbb
dec
out
or
pop
lock
and
and
loope
js
sbb
cli
lret
mov
pop
paddusb
mov
scas
mov
cmp
add
mov
push
mov
lea
movsb
mov
add
push
test
les
mov
or
dec
sbb
jle
mov
xor
cli
or
int3
mov
adc
lret
lret
push
shrb
or
rcl
adc
pop
sarb
mov
jecxz
mov
sub
xchg
push
into
xchg
dec
mov
imul
mov
sub
push
inc
js
les
cmp
das
ljmp
inc
and
fldenv
and
js
ficompl
pop
jge
pop
xor
jns
call
js
sub
fldcw
shlb
pushf
cmpsl
dec
and
fbstp
push
cmpsb
add
inc
add
mov
clc
ret
stos
xchg
mov
mov
push
imul
mov
in
xchg
sbb
inc
and
test
xchg
sbb
pop
and
mov
pop
push
inc
popa
decl
jge
outsl
jmp
stos
leave
jbe
and
cmpsb
aaa
xchg
in
mov
mov
dec
imul
scas
pop
stc
loopne
inc
sbb
inc
add
jl
jo
ret
cmpsl
call
ss
cmp
fwait
mov
mov
dec
xchg
out
mov
scas
test
in
mov
fisubrs
ret
fxam
inc
clc
leave
and
inc
test
adc
jg
pop
lds
xor
js
fwait
mov
fldt
shr
cmp
lock
mov
imul
fldln2
push
sbb
push
add
ret
ljmp
jb
insb
jno
xor
dec
xor
enter
icebp
mov
outsl
xchg
das
popf
jle
clc
jns
push
bound
jae
add
xor
and
ds
lods
push
inc
jmp
mov
jl
or
add
mov
xchg
bound
lcall
jg
xlat
call
mov
add
inc
mov
dec
ret
or
divl
mov
push
popf
test
xchg
frstor
dec
data16
mov
mov
fs
daa
mov
sbb
dec
scas
movsl
loop
ljmp
inc
test
mov
scas
or
cmpsb
pop
mov
mov
add
jp
clc
push
inc
cmp
add
clc
pop
andb
das
pop
inc
and
mov
lods
stc
inc
imul
fsubrs
xor
or
xor
fisubrl
sub
push
mov
mov
ret
fidivrs
movsb
and
bound
mov
imul
nop
out
popf
cmp
fadds
enter
push
pop
mov
pop
jno
xchg
in
add
and
mov
das
mov
dec
out
mov
add
jne
dec
js
fs
pop
stos
xor
out
sub
mov
test
xchg
in
fwait
shll
nop
lods
xchg
aad
addl
xchg
xchg
int
or
mov
sub
xor
movsl
adc
add
lds
dec
push
mov
in
test
sbb
cmpsl
lods
testl
mov
out
xchg
or
mov
shll
clc
in
inc
mov
mov
jnp
push
xor
inc
js
jne
cmp
xchg
lea
out
scas
mov
or
push
dec
mov
rcrl
clc
in
mov
sbb
push
xchg
dec
test
dec
fisttpl
scas
inc
dec
js
mov
and
js
dec
push
inc
stos
jns
in
fwait
jb
mov
mov
add
aam
fadds
push
outsl
addr16
ret
and
gs
mov
xchg
popf
dec
movsl
subl
adc
pop
jmp
dec
fcomps
es
cmpsb
aam
mov
aas
iret
int
cwtl
dec
les
fdivl
cwtl
sti
fcmovne
sbb
add
push
cwtl
cwtl
fcoms
and
add
push
inc
push
add
js,pt
mov
std
adc
jmp
arpl
dec
js
sbb
jmp
mov
mov
notb
pop
jo
pusha
jae
ret
pop
test
push
dec
in
fcmovnbe
ja
lods
xor
and
je
js
les
cli
sub
xchg
or
mov
jbe
push
or
add
sub
dec
lret
cmpsl
and
daa
pop
add
jo
test
mov
cli
negl
into
dec
push
pop
ret
xchg
mov
pop
adc
sbb
sbb
out
jge
bound
cmpsb
mov
mov
enter
js
sub
setg
ret
loope
adc
dec
jecxz
imul
sbb
push
pop
sub
pushf
in
test
pop
adc
jnp
xor
lock
loopne
imull
aas
adc
xchg
mov
dec
sub
js
pop
js
push
xor
lret
fmuls
lods
pushf
mov
push
popa
cmpl
cmpsl
in
jnp
sub
mov
ja
cmpsl
test
mov
inc
and
push
js
sbb
arpl
push
pop
push
mov
mov
arpl
push
sub
xchg
negl
leave
push
and
and
cmp
and
inc
clc
loope
les
adcl
mov
mov
mov
insl
aaa
mov
repz
clc
cld
push
ss
add
mul
add
lret
push
xor
mov
xchg
pop
xchg
mov
out
test
jmp
push
jnp
test
nop
lods
je
ret
sbb
mov
popa
jbe
dec
cmpsl
adc
pop
jo
push
clc
mov
jno
cltd
iret
mov
dec
xchg
je
sub
fst
bound
or
and
or
ret
out
loopne
jo
fstl
sub
cld
test
or
in
mov
jb
addr16
xor
adc
mov
add
mov
int
cmp
pop
mov
es
ficoms
pop
jno
in
cmp
or
mov
cmp
jbe
pushf
bnd
out
inc
inc
enter
mov
cs
repz
in
je
insl
pop
dec
popf
xchg
fwait
xor
xchg
sub
daa
pushf
sbb
cmp
mov
mov
fs
xor
clc
mov
push
clc
mov
pusha
mov
sbbl
pop
fistps
dec
rol
fnstcw
jo
std
gs
js
dec
and
enter
js
out
push
aas
cmpsl
xchg
jmp
ret
fxch
add
mov
pop
mov
pop
cmp
loope
add
orps
lret
inc
adc
ljmp
sub
roll
jp
dec
adc
or
push
add
lret
push
mov
xchg
dec
push
cmpsl
out
icebp
jl
jge
clc
je
subb
cmpsb
pop
in
mov
xchg
aam
loop
ja
das
dec
fdivrp
vpsubq
xlat
push
leave
add
lret
mov
or
and
push
jno
add
les
lret
leave
mov
negl
fstps
lods
outsb
mov
inc
sti
fndisi(8087
ja
pusha
cmpb
shl
add
dec
dec
jmp
sub
adc
cmp
or
leave
aad
aas
mov
xor
mov
orl
loope
mov
inc
es
pusha
mov
enter
cmc
jl
ja
repz
js
jecxz
nop
test
and
les
das
pop
adc
sub
rcrb
xor
sarb
add
outsb
mov
enter
adc
rcrb
sbb
les
pop
push
das
and
xchg
ror
clc
adc
mov
jl
fisubs
inc
adcb
xor
test
inc
sahf
sub
sub
cmpsb
nop
es
clc
cmp
repnz
push
xchg
inc
in
jge
xchg
pop
sbb
dec
sub
aam
mov
pop
mov
push
add
pop
inc
hlt
inc
or
mov
xor
outsl
test
jp
popf
cmpsl
outsb
add
and
push
outsw
movsl
sbb
popf
test
inc
sub
jge
xchg
das
rcr
push
xchg
sbb
call
out
pop
dec
lret
mov
fisttpl
stc
mov
fimull
add
inc
jno
push
outsb
lea
sbb
pop
cmpsl
je
lea
lds
push
pop
sbb
jns
add
inc
enter
push
icebp
mov
clc
test
test
dec
pop
pushf
and
dec
inc
data16
ja
mov
test
push
data16
scas
xchg
cmpsl
add
shrb
mov
ret
jg
jbe
sub
das
inc
fisubrl
leave
ja
mov
imul
mov
jp
scas
add
dec
inc
in
fs
pushf
jne
test
aaa
and
add
pop
lret
shl
or
cmp
ficompl
test
dec
popa
js
dec
in
mov
movsb
adcl
daa
clc
aam
out
dec
push
cmc
sub
add
mov
add
stos
inc
adc
xor
adc
xchg
inc
clc
cwtl
sub
adc
xlat
dec
arpl
loope
xchg
and
gs
jmp
loopne
arpl
cmp
in
ret
mov
mov
push
mov
stos
xchg
sub
jns
mov
leave
fmuls
pop
sub
js
test
cmc
aas
das
and
movsb
adc
in
add
xor
in
enter
mov
test
or
popf
inc
fs
dec
dec
pop
xchg
sbb
dec
cmp
fdivrl
cmc
loopne
mov
add
mov
push
xchg
sbb
mov
xchg
xchg
mov
out
rorb
mov
ret
das
rcrl
clc
movsb
inc
in
sti
loop
jno
dec
out
mov
inc
or
cmpsl
mov
pushf
mov
add
lahf
and
mov
loop
aas
ja
out
mov
test
lds
jg
shll
stc
ljmp
push
cmpsb
inc
lods
outsl
scas
pop
jo
arpl
cmp
fs
movsb
stos
test
mov
jle
test
mov
imul
loop
inc
aaa
test
adc
mov
push
sub
outsl
push
pop
iret
aad
addr16
and
int3
divl
mull
cmp
repnz
inc
lods
or
mov
push
add
clc
mov
pop
fs
or
test
dec
or
xchg
xor
ljmp
ljmp
dec
mov
into
mov
pop
js
xchg
aam
loopne
fadds
xchg
cs
in
nop
mov
jnp
push
mov
mov
or
mov
std
fisubl
sbb
cld
jns
inc
adc
cmpsb
fmull
xor
out
sbbb
cmpsb
sub
dec
fcomip
push
fnsave
mul
int
jle
xor
hlt
test
sub
mov
imul
test
ret
repz
test
jbe
outsl
movsb
sbb
sub
pusha
xchg
fdivp
sbb
aad
jl
dec
jne
mov
gs
std
add
in
test
and
pop
ja
mov
movsb
xor
cmp
add
dec
push
adc
mov
mov
push
fdivp
pop
js
jge
aad
inc
mov
lds
lret
out
icebp
in
push
fwait
lods
movsb
cvtps2pd
and
arpl
arpl
jb
js
loop
inc
mov
xchg
ret
and
test
popa
clc
jl
into
call
test
mov
dec
scas
adc
lret
mov
inc
mov
sub
xchg
sub
dec
mov
into
mul
push
fidivrl
adcl
in
fs
mov
fdivrs
dec
pop
and
test
inc
fwait
dec
jo
js
je
xchg
pop
adc
jne
pop
xchg
pushf
clc
add
push
mov
dec
into
mov
mov
test
dec
mov
push
push
jg
jae
mov
push
test
push
sub
arpl
mov
jo
incb
cmp
mov
pop
pop
out
mov
inc
mov
out
sub
das
insb
dec
sarb
pop
stos
xchg
jl
cmpsb
andl
jg
mov
add
xor
pop
aaa
or
dec
add
test
outsb
lcall
pop
sbb
push
imul
pushf
stc
roll
ja
lods
sub
mov
out
mov
lds
test
int3
pop
cltd
mov
pop
andb
mov
fistps
cli
mov
out
and
sbb
push
and
push
test
and
sub
xor
stos
mov
mov
and
xlat
lret
jno
rcrb
push
xor
pop
pop
add
popf
dec
repz
cltd
cs
sbb
push
and
lret
stos
cmpsl
mov
push
subb
std
cs
dec
dec
lods
push
add
imul
xchg
and
jbe
xchg
ret
inc
mov
cmp
sbb
mov
and
aad
mov
inc
scas
std
and
rcrl
or
in
pop
addr16
insb
sahf
popa
bound
and
mov
adc
xchg
xor
stos
stos
inc
call
xchg
sub
js
add
cmp
and
call
decb
mov
dec
scas
test
lods
adc
les
clc
ljmp
mov
inc
adc
pop
out
xor
adc
add
push
and
add
xchg
fdivs
cmp
pop
or
inc
jg
sub
lcall
les
div
jecxz
shrb
inc
int3
and
push
std
add
dec
or
and
adc
pop
jne
icebp
push
jecxz
data16
iret
insl
sbb
dec
push
ss
xchg
fcomps
popf
adc
aam
mov
cmpsl
rorl
sub
cli
insl
push
or
mov
mov
aad
popf
orb
call
hlt
dec
dec
or
bound
mov
loop
decl
or
inc
cmc
divb
imulb
xchg
push
xchg
or
test
pushf
outsl
orb
rcll
add
pop
and
push
inc
adc
mov
test
push
sbb
fnstenv
test
sub
hlt
fs
mov
xor
xor
movsl
cmp
aam
adc
jmp
push
clc
popf
xchg
xchg
fsubrl
in
leave
cmc
add
clc
nop
in
pop
push
lea
into
add
lds
mov
jge
and
dec
sbb
ret
push
mov
dec
inc
and
cmp
cmp
repz
test
jae
add
push
imull
cli
dec
lret
into
add
jo
jne
mov
cmp
pop
scas
xor
mov
pop
push
rclb
xchg
outsl
mov
movsl
test
sub
push
and
stos
imull
mov
sahf
cmc
mov
pop
pop
mov
stc
sub
lods
adc
sbb
enter
or
int3
loopne
cwtl
fcmovnu
adcb
cmp
int
push
iret
mov
inc
xchg
pop
jb
repz
sub
xlat
pop
mov
clc
inc
and
mov
mov
std
mov
add
mov
sub
repnz
test
pop
sarl
sub
loope
mov
bound
nop
lret
mov
mov
pushf
mov
lret
cmc
hlt
testl
sbb
incl
insl
outsl
inc
repz
xchg
dec
xchg
or
inc
mov
sbb
or
xchg
add
pushf
test
jns
mov
push
clc
mov
test
pop
shl
orb
sub
cmp
push
leave
sub
or
mov
xchg
cmp
pop
sub
and
int3
pop
xchg
adc
mov
mov
add
dec
pop
xchg
mov
pop
test
out
es
or
jne
ret
js
cs
cmp
andl
fsubrs
adc
test
ret
cmp
mov
shlb
fcoml
push
add
sub
das
pop
dec
out
js
pop
clc
xchg
xchg
xchg
pop
xor
aas
aas
lahf
scas
inc
xchg
fldt
int3
sbb
mov
jae
dec
iret
test
js
inc
repnz
push
je
adc
cs
cltd
dec
or
cmp
pop
add
pop
cmp
and
ljmp
shrl
sbb
xchg
cmovb
in
mov
enter
fldcw
inc
cmc
idivb
jnp
stos
cmp
dec
ss
mov
loope
jo
mov
sbb
inc
mov
out
inc
js
js
jbe
xor
and
mov
mov
jb
xlat
popa
cltd
rcll
clc
sbb
xchg
jmp
pusha
insl
icebp
xor
loope
inc
imul
in
idivl
and
cmp
jg
xchg
dec
or
or
adc
imul
iret
fwait
ret
test
aas
jle
or
inc
call
clc
xchg
jg
mov
fisubrs
jl
dec
pop
shrl
add
pop
nop
cli
add
xchg
stos
add
lret
pushf
push
pop
repnz
dec
pushf
ja
pop
testl
and
sbb
add
mov
fwait
das
data16
movsb
roll
out
sti
lret
fwait
leave
push
push
xchg
dec
pop
ss
imul
add
sti
add
andl
mov
int3
pop
dec
pop
or
fldt
or
sub
mov
inc
rcl
test
inc
pop
std
dec
push
fsubs
fcoms
lds
sub
mov
js
sbb
imul
imul
jg
xchg
imull
repnz
sahf
dec
fbld
mov
cmp
sub
dec
pop
pop
call
rolb
push
and
add
dec
arpl
adc
mov
inc
inc
neg
or
clc
out
mov
push
in
cmpsb
jge
mov
xchg
scas
and
fiadds
outsb
adc
sbb
push
xlat
and
pop
fwait
shll
push
js
decb
mov
pop
xor
or
stos
xor
xor
dec
sub
mov
pop
inc
cmp
lods
lods
cmpl
por
imul
imul
jbe
data16
into
call
sti
push
movsl
mov
lds
inc
dec
jmp
jno
push
lret
mov
and
jp
jb
es
popa
movsb
adc
lret
aad
pop
insb
scas
add
cmc
push
mov
mov
add
adc
sub
iret
repnz
sub
push
cmp
mov
mov
lret
mov
aam
sub
push
fsubl
or
fbstp
or
or
inc
scas
jecxz
and
icebp
inc
sub
sub
iret
notl
sahf
ret
xlat
rolb
push
daa
dec
fs
sbb
jmp
mov
pop
loope
bound
push
xlat
add
or
ret
jl
or
fsts
xor
mov
xor
push
xchg
xchg
or
and
in
mov
iret
in
test
lret
add
inc
jae
icebp
push
js
stos
and
fldenv
es
xor
popa
and
int
sti
sarl
ljmp
xchg
mov
or
mov
inc
inc
add
push
les
jg
xchg
push
pop
fcomp
adc
shl
test
nop
jnp
jle
ja
outsb
jo
jmp
aaa
push
fwait
mov
push
mov
jg
imul
call
mov
je
cmpb
fs
les
subl
mov
pop
and
js
lcall
xchg
sub
in
sbb
sbb
int3
jb
dec
jp
adc
lods
xchg
cmp
icebp
cmpb
add
add
inc
push
in
lret
mov
and
mov
and
adc
dec
inc
lret
xchg
jecxz
pop
jno
add
lcall
andb
pop
mov
lods
jl
shrl
scas
sbb
test
push
mov
movsb
imul
fs
out
and
iret
dec
stos
sbb
inc
lock
sbbb
arpl
aas
adcl
cmp
add
neg
mov
mov
push
inc
insl
sub
lret
jno
xchg
clc
mov
dec
or
nop
out
incl
xchg
sub
outsl
mov
cli
and
clc
inc
pop
cmp
lods
ret
xchg
movsl
push
push
pop
xor
cld
cmp
mov
mov
push
cmovae
or
jbe
repz
out
test
or
cld
gs
inc
jne
inc
mov
cmp
pop
dec
add
xor
loop
mov
pop
in
xor
stos
loop
lret
hlt
icebp
leave
aam
in
jmp
test
shrb
bound
dec
hlt
mov
test
dec
cmp
lods
movsb
cwtl
sar
dec
aam
cmp
and
push
orb
popa
sub
cli
adc
test
aam
int3
insl
mov
xor
lock
out
loope
add
pop
lret
fwait
mov
push
xchg
ljmp
dec
test
adc
push
lret
push
push
adc
add
add
into
add
dec
inc
inc
aad
test
shrl
cmc
shr
push
dec
mov
mov
mov
mov
jle
sbb
xor
std
pop
inc
jp
fstl
inc
xor
add
mov
loopne
sahf
testb
shlb
jne
xor
insb
mov
pop
pushf
insl
xor
inc
dec
mov
lea
in
push
xlat
xchg
mov
add
inc
subb
or
mov
sbb
mov
push
jo
add
lret
mov
mov
mov
lods
pop
inc
aas
mov
xchg
push
icebp
test
int3
mov
stc
shl
call
cli
cmc
mov
jne
fsts
xchg
sub
lret
js
lock
outsb
int3
mov
add
test
push
outsl
stc
inc
and
pop
lret
cli
mov
stos
pop
cmp
jbe
call
filds
mov
adc
push
jge
inc
and
mov
push
aaa
or
push
xor
jg
lea
add
cmp
and
xor
stos
or
loope
jp
dec
daa
cwtl
mov
ljmp
in
lea
sub
out
cli
clc
aaa
dec
test
dec
push
mov
adc
stos
clc
gs
cmp
xor
test
or
shrb
inc
and
cmp
and
pop
cs
aaa
xchg
lret
inc
sti
cmp
into
or
lret
sahf
push
es
xorb
push
mov
lea
cmp
js
mov
mov
lret
fwait
mov
lret
hlt
or
cmpsb
mov
mov
in
sbb
jne
cmp
and
cmpsb
mov
sti
mov
adc
jge
mov
xchg
xchg
cmpsb
fadd
aad
cmpsb
xor
jnp
iret
jmp
fadd
fs
mov
inc
xor
std
jns
jne
sbb
lds
adc
mov
in
je
clc
and
int
or
or
into
jae
sub
sbb
jl
leave
and
xor
lahf
adc
ja
mov
dec
lea
scas
inc
inc
shr
push
pop
arpl
cmp
out
dec
cli
xor
data16
jo
adc
sub
and
leave
rorb
outsl
cmp
mov
in
test
sub
fs
cmp
lcall
fidivrl
adc
xor
pop
cmpsb
out
inc
mov
gs
push
push
mov
sbb
inc
mov
inc
lods
test
imul
xchg
leave
inc
pop
jle
add
test
jge
ljmp
in
push
lock
mov
adc
enter
call
mov
jmp
mov
test
das
cmc
dec
inc
mov
xchg
int3
lret
jo
push
sub
mov
xlat
mov
cmp
or
pop
fwait
jbe
imul
dec
out
jp
cld
stos
mov
fiadds
push
jo
das
and
mov
sbb
insb
in
mov
inc
adc
mov
insb
scas
sub
sub
jnp
mov
mov
fdivrl
rolb
pop
js
inc
cld
imul
push
xchg
in
inc
pop
mov
mov
and
je
push
sbb
inc
inc
icebp
ffreep
mov
xor
aas
mov
out
dec
mov
jbe
sahf
sbb
movsl
cmpsb
sbb
fbstp
xchg
dec
out
clc
mov
or
add
cmp
pop
cmp
js
dec
jnp
pop
mov
js
ss
cmpsl
int
cmp
or
and
xchg
dec
ret
stos
lret
or
rclb
sbb
sbb
std
pop
outsb
xor
pop
push
loope
or
cmpsb
pop
mov
pop
pop
adc
mov
in
out
shlb
or
dec
lods
jecxz
push
mov
push
rcll
sbb
jge
in
icebp
repz
sarl
and
xchg
loopne
xor
mov
adc
sub
test
aam
sbb
lock
xor
shl
add
push
ja
dec
addr16
mov
sbb
movsl
sbb
shlb
and
add
aaa
lods
adc
movsb
imul
jns
push
sbb
mov
ljmp
and
nop
outsl
clc
fisubs
push
add
or
or
repnz
test
fwait
ret
cmp
add
pop
or
repz
aam
lret
ja
cld
mov
mov
mov
nop
inc
mov
sub
dec
std
jge
add
jmp
add
jle
fcompl
pop
jb
adc
mov
xchg
push
ret
sbb
add
dec
js
rcrl
sbb
enter
adc
mov
popf
cmp
dec
mov
cmp
test
and
aad
fs
dec
dec
cwtl
stos
add
in
add
aaa
shrl
shr
xor
dec
mov
dec
push
pop
jmp
pop
push
jle
mov
imul
mov
shlb
lret
mov
jp
test
mov
les
or
gs
stos
stos
test
jge
rolb
subl
add
lret
int3
pop
gs
xor
movsl
or
mov
push
add
inc
neg
jp
jmp
sub
cld
or
idivl
lds
ret
mov
mov
hlt
push
shlb
pop
scas
popa
mov
dec
sub
inc
stc
jp
mov
and
aas
adc
xor
cmp
pop
adc
stos
dec
mov
jmp
pushf
imul
dec
clc
sti
xor
xor
add
adc
mov
icebp
daa
clc
stos
jl
je
js
fcmovne
int
dec
jg
xchg
and
dec
dec
aas
bound
adc
inc
sbb
fdivs
loope
mov
inc
clc
mov
movsl
jnp
out
and
push
adc
cmp
aaa
inc
clc
repnz
in
mov
js
lahf
mov
leave
nop
lds
popf
mov
jecxz
jmp
push
mov
inc
aad
mov
movsl
jb
pop
out
and
shlb
sbb
rolb
clc
jbe
pusha
je
fldt
mov
lods
shlb
mov
add
push
mov
cli
cmp
mov
sub
push
loopne
sarl
inc
and
fldt
mov
jb
add
jle
or
jg
add
lret
mov
sbb
pop
stos
test
lret
mov
pop
cmp
jmp
add
sbb
xor
mov
cmp
fs
xchg
lret
daa
aas
js
mov
std
mov
push
or
aaa
lds
orl
inc
mov
pop
mov
jo
ror
and
ret
or
bound
lahf
pop
xor
sbb
movsb
adc
lock
loopne
mov
arpl
jmp
xchg
push
add
lret
test
cmp
inc
dec
cs
jns
mov
popf
mov
xchg
pop
xchg
ds
jl
imul
mov
daa
fldpi
dec
jp
test
dec
outsb
mov
loopne
popa
fdiv
imul
inc
shll
sti
sbb
lret
orb
cmc
clc
push
push
pop
cmpsl
ret
and
sahf
lret
mov
aaa
dec
mov
push
mov
in
sahf
insb
sub
enter
fsubp
or
xchg
pop
repnz
dec
push
push
cli
cmc
and
mov
mov
test
xchg
je
mov
fsts
sbb
leave
popf
jg
sub
test
repnz
mov
mov
pop
add
js
jle
push
js
decl
mov
data16
cltd
aaa
jo
in
stc
shl
loop
enter
out
xor
ret
mov
loope
push
nop
loop
test
data16
shrb
je
jl
les
repnz
mov
dec
sbb
jg
scas
divl
push
adc
test
leave
ljmp
scas
fs
out
es
cmpsl
test
mov
dec
xchg
inc
cmpsl
cli
stos
push
jmp
bound
int3
mov
ss
scas
fstpt
fidivrs
mov
shrb
sub
stos
nop
push
jb
ret
movl
sbb
inc
mov
adc
in
in
clc
sub
call
xchg
test
lret
xlat
jl
and
cli
dec
mov
and
fimuls
pop
pushf
fnsave
cmp
adc
inc
lcall
push
xor
mov
lret
lret
loop
and
mov
icebp
iret
add
dec
outsb
jbe
fmull
inc
xor
cwtl
push
mov
test
push
sub
lahf
rcrl
xchg
sbb
mov
and
out
and
cld
mov
cmpb
movsl
push
out
adc
inc
mov
pop
fs
xor
js,pn
inc
sbbb
outsb
mov
push
push
movsb
cmpb
out
push
push
push
int3
push
mov
add
pop
sub
int3
xor
addr16
adcb
stc
or
loope
or
lods
xchg
fwait
sbb
adc
sets
cli
xchg
or
jo
sbb
push
fildll
sub
dec
xor
stc
push
xchg
or
dec
cmc
adc
or
and
sub
clc
mov
push
out
or
lea
dec
sub
add
pop
popa
pop
fnop
dec
cmc
mov
nop
roll
enter
jns
hlt
gs
and
mov
add
sbb
mov
mov
push
inc
std
pop
test
repnz
mov
add
adc
cli
xchg
jno
mov
and
push
xlat
inc
push
aas
add
add
movsl
cltd
mov
and
scas
push
jle
add
lret
mov
dec
adc
jo
lret
aam
mov
adcb
pusha
xor
lret
cmpsl
mov
jns
test
cmc
cmpl
adc
dec
sub
rorb
hlt
loope
cmp
cmp
xchg
dec
shrl
pop
or
test
mov
jl
icebp
movsl
xor
outsl
mov
aas
pop
out
int
bound
pop
lret
fldt
or
mov
adc
ja
idivl
adc
fadd
fs
stos
hlt
sbb
sub
push
cmc
mov
fstp
in
jp
jmp
out
adc
movsl
mov
pop
sub
sub
les
dec
pop
cli
add
jle
mov
scas
test
call
lret
xor
jnp
clc
mov
dec
sarb
notl
inc
pop
and
and
add
hlt
mov
hlt
in
in
daa
js
aam
movsl
jle
push
lahf
cmp
xchg
mov
pop
imul
pop
movsb
xorb
ljmp
movsb
lods
sub
imul
add
hlt
lods
lcall
jnp
shrl
pop
mov
loope
push
jb
jnp
and
test
dec
lret
fwait
ss
inc
pop
lcall
push
lar
sahf
mov
cli
test
out
adc
xchg
loope
fists
bound
fs
imul
ja
andb
aam
push
clc
pop
push
mov
movsb
add
dec
popa
cmp
adc
inc
and
push
insl
cld
pop
ss
sbb
incb
cmpsb
adc
lret
cmp
out
bound
pusha
rolb
mov
inc
js
push
and
and
xchg
jg
jae
movsb
popf
movsl
or
ja
clc
dec
xchg
pop
push
mov
xchg
push
mov
add
das
jno
lret
mov
cmp
aas
mov
and
ret
or
fimuls
inc
jnp
sarb
pop
mov
jecxz
mov
lret
incb
xchg
xor
movsl
pop
xorl
and
jnp
and
test
cltd
add
xchg
jl
xchg
inc
xchg
arpl
xchg
mov
push
mov
mov
in
cmp
mov
test
xor
push
scas
loope
inc
out
test
sbb
and
sbb
adc
clc
cmp
insl
cmp
push
pop
roll
inc
push
jnp
aaa
push
imul
jno
add
and
icebp
fildl
rcrb
mov
fcoms
xchg
pop
jb
arpl
inc
repz
inc
mov
icebp
mov
add
mov
cli
or
hlt
xor
mov
push
sbb
lods
sub
clc
stos
pop
shlb
mov
js
leave
lahf
fstpl
aaa
pop
jge
jbe
out
xor
push
inc
inc
es
add
sahf
jb
xor
rorb
push
cli
xchg
mov
andb
insb
push
jnp
sbb
mov
mov
out
xchg
fs
sbbl
lock
cwtl
push
sub
and
fdivl
xchg
dec
ficoml
pop
and
or
orb
adc
lea
cmc
xchg
jae
or
mov
mov
loope
and
cmp
jecxz
lds
movsb
adc
nop
and
cmp
dec
lods
lods
or
popf
ljmp
mov
dec
sbb
test
cmp
mov
sti
outsb
repz
sub
inc
mov
lods
sbb
js
jecxz
fimull
xor
addr16
mov
ljmp
mov
jo
push
xchg
mov
mov
fdivrs
mov
js
jle
out
cmp
mov
pop
clc
aas
loop
xor
lret
adc
mov
mov
cltd
push
jnp
subb
inc
lret
push
push
mov
subb
cld
sub
push
or
push
pop
clc
data16
fisubs
fs
xchg
loopne
adc
xor
clc
imul
pop
xor
dec
xor
cmpsl
sarb
data16
fistps
and
data16
in
out
sub
sub
pop
push
or
scas
xlat
lret
hlt
jg
push
dec
add
adc
and
ret
sub
pushf
pop
clc
lret
cmc
in
bound
jns
pop
sbb
lea
icebp
stos
je
inc
dec
jnp
pop
loop
mov
and
push
clc
push
sahf
xor
xchg
insl
out
dec
cmp
out
mov
imul
out
mov
rcr
addr16
pop
clc
push
mov
ret
pop
out
jge
pushf
jmp
mov
rolb
lret
cmpsb
popa
test
rclb
push
por
cli
mov
rolb
in
inc
out
insb
scas
sbb
out
add
dec
jle
fnstenv
mov
inc
scas
orl
std
imul
lods
cs
sbbb
aam
push
in
testl
push
shll
push
mov
or
sub
push
sbb
lret
add
push
mov
inc
outsb
das
or
mov
ja
scas
sub
imulb
in
push
dec
subb
arpl
fisttps
sbb
cltd
loope
scas
popf
repnz
icebp
lret
je
les
test
mov
lahf
cmp
inc
clc
pop
popa
call
test
push
add
icebp
enter
into
mov
aam
push
push
pop
in
sub
adc
es
push
lahf
insb
clc
xor
jge
xor
stos
movsb
sbb
les
js
int
std
mov
test
mov
xchg
shll
and
iret
xchg
jmp
mov
jb
inc
dec
dec
lock
lret
pop
push
or
adc
and
push
js
clc
mov
or
mov
fisubrs
adc
dec
dec
sbb
xor
sbb
shl
or
adc
inc
push
es
mov
dec
push
xchg
fmuls
ret
sub
or
cli
in
or
pop
cmp
sbb
or
aas
dec
push
pop
popa
sub
and
sub
cltd
mov
dec
jbe
and
scas
xor
out
lret
movl
mov
xor
dec
sub
movsl
call
outsl
add
push
fs
call
mov
cld
cmp
fmulp
rcll
test
xor
push
mov
cmc
mov
mov
pop
jecxz
lret
cmc
gs
cmc
mov
add
les
push
jmp
xchg
mov
mov
inc
mov
aas
or
in
jg
add
outsb
cmp
shlb
mul
imul
add
ret
mov
inc
fimull
mov
ds
lret
xchg
and
push
leave
lret
mov
sbb
fwait
mov
jbe
arpl
in
xchg
jp
popf
mov
hlt
pop
xor
scas
stos
mov
imul
shl
decb
push
loop
or
insl
movsl
out
mov
test
repnz
push
lods
test
clc
push
sti
fst
ljmp
sub
jne
mov
cmp
scas
mov
idivb
jnp
push
push
jge
cmp
or
xor
loop
mov
xor
push
sarb
mov
adc
sbbb
fdivrs
icebp
fstpt
jbe
jmp
dec
clc
leave
sbb
dec
push
cmc
shlb
clc
subl
mov
mov
notb
ljmp
in
and
cli
jle
mov
mov
popa
bound
popa
sub
cmp
xor
hlt
ja
lcall
add
mov
enter
repz
push
xchg
test
pop
sub
or
fwait
repz
js
cltd
fadds
inc
sbb
sbb
repz
cmp
jno
repnz
movsl
add
test
sub
adc
repnz
mov
fists
push
push
lret
shll
lea
inc
dec
ret
or
std
sbb
imul
call
ljmp
or
sub
sub
shrb
xor
inc
insb
imul
jb
dec
push
and
adc
dec
mov
add
mov
adc
popa
pop
mov
sub
lds
shlb
mov
roll
cmp
movb
clc
xor
sub
rolb
rolb
leave
inc
lods
sub
xchg
stc
lret
mov
and
inc
in
in
mov
ret
in
stos
cmpxchg
xlat
jno
sub
fdivs
inc
std
push
in
inc
mov
movsb
sbb
lock
cmc
ss
cli
mov
cli
test
scas
or
outsb
jo
rol
hlt
int3
or
out
xlat
mov
cli
movsl
sbb
jmp
jbe
out
test
add
inc
push
sbb
or
clc
push
mov
cmp
andb
dec
push
cmpsl
popa
cmp
pop
sub
add
mov
jle
adc
js
sbb
inc
xlat
push
and
cmp
pop
popa
mov
or
push
sub
cmp
cmp
push
ret
xlat
mov
pop
xchg
or
mov
mov
repz
jns
pop
dec
sub
jns
adc
dec
call
cmp
pushf
mov
cmpsl
inc
cmp
sbb
xchg
and
test
mov
mov
xor
fwait
jno
ja
jge
jns
mov
cmp
les
dec
push
push
ret
add
into
sub
repnz
cwtl
inc
sub
sbbl
mov
aad
ss
add
clc
add
inc
dec
jno
xchg
ret
lods
push
lcall
imul
rolb
add
dec
dec
rcll
xchg
lock
cmc
mov
add
lret
lcall
or
mov
cmpb
fiaddl
mov
movsl
ret
subl
icebp
gs
sub
mov
ja
push
lret
imul
imul
negl
and
pusha
xor
dec
inc
dec
mov
sub
or
pop
xchg
mov
inc
mov
sbb
jns
movsb
mov
loope
xor
mov
xor
or
shr
fucomp
add
inc
mov
push
sub
mov
cmpsb
popf
and
push
repz
mov
shll
sbb
stos
jle
sbb
mov
push
sti
add
dec
lret
popa
test
sbb
cmpsb
dec
gs
mov
adc
sbb
adc
je
push
inc
xchg
loopne
dec
mov
mov
imulb
add
cmp
add
xchg
lcall
inc
jge,pn
nop
inc
rolb
lods
sbbb
cmpsl
and
flds
int
jp
in
xchg
jb
ja
sub
dec
cmpsl
je
cmp
dec
adc
lret
mov
lods
insb
pop
test
repnz
push
imul
dec
xor
in
mov
leave
lret
mov
push
sbb
cmp
add
aam
stos
jg
movsl
out
adc
lret
add
scas
pop
cmp
sub
icebp
sti
mov
adc
cmpsb
pop
js
or
bound
xor
je
jp
cmpsl
scas
xor
or
fiadds
dec
scas
xor
call
repz
aam
lods
gs
js
xchg
sub
fwait
lods
xor
adc
outsb
jp
and
push
orl
and
xchg
jp
push
dec
mov
shll
xor
mov
mov
mov
xchg
insb
lret
out
pusha
cli
sub
jnp
rcl
jb
sbb
jns
jle
xor
movsb
mov
out
icebp
ss
mov
cmpsl
inc
adc
int
fdivr
and
jnp
cmp
fcmovnbe
lret
lea
fdivp
imul
mov
sti
cmpl
pushf
bound
popf
fmul
or
js
and
call
mov
or
mov
jae
fcomp
imul
push
scas
adc
cwtd
cltd
jmp
in
inc
clc
mov
aas
in
mov
jns
add
add
test
sbb
mov
push
and
mov
cmpsl
jo
lret
mov
push
in
adc
sub
adc
sub
ss
add
push
aam
cmp
lret
adc
pop
inc
cmp
push
push
lock
data16
sbb
adc
sub
or
test
pop
shlb
test
push
repz
lret
sti
adc
movsb
inc
add
xchg
dec
lret
lret
lret
add
mov
lods
add
dec
pop
popa
in
jno
shlb
mov
xor
xor
cld
sbb
sub
cmp
jmp
mov
add
cmp
stos
jno
rorl
sbb
mov
lahf
inc
outsb
and
and
hlt
fsub
js
pop
and
je
lret
mov
pop
mov
adc
add
jnp
es
add
popa
mov
test
mov
mov
test
test
lods
mov
mov
filds
gs
jns
mov
jl
push
jbe
mov
dec
fcmovne
fcoml
jbe
mov
xor
sbb
push
outsb
mov
je
push
es
push
push
pop
and
in
sub
js
ss
mov
add
lret
xchg
aas
bound
out
sbb
push
mov
xchg
pusha
xchg
arpl
popa
push
cmp
dec
or
add
mov
insl
popf
pop
sub
push
fadds
push
int
mov
js
into
fnstsw
xchg
jo
add
lret
ret
ljmp
sbb
and
notb
cmp
add
subb
mov
movsb
mov
add
dec
cmp
jne
and
js
fwait
clc
mov
clc
add
xchg
testl
mov
xor
mov
test
mov
cmpsb
jne
cmp
cmc
loop
bound
in
add
xor
mov
js
lock
and
in
pop
sub
cltd
mov
jnp
outsl
mov
pop
mov
or
inc
mov
popa
jbe
aad
iret
aad
lock
aam
pusha
mov
cmp
push
enter
xor
daa
scas
pop
xor
rcrb
adc
mov
pop
mov
and
movsl
cmp
shlb
cli
jge
and
mov
dec
mov
jle
imul
inc
push
call
lods
mov
iret
cmp
and
pusha
dec
dec
int3
aad
mov
testb
call
mov
shll
mov
cmp
push
stos
and
mov
aaa
gs
fdiv
mov
pop
push
aas
outsl
mov
adc
xor
and
mov
jbe
leave
mov
pusha
lret
jmp
add
scas
jno
sub
push
inc
push
fwait
jecxz
xor
mov
or
mov
xchg
lds
mov
xchg
movsl
inc
jbe
push
js
sahf
aaa
int
lods
jno
andl
mov
inc
int3
xchg
mov
insl
fs
jmp
dec
pop
mov
int3
rcl
popf
ret
sbb
lret
in
into
or
pop
mov
pop
test
cmp
int
jge
je
mov
push
pusha
push
lods
jb
inc
std
mov
js
loope
sbb
ficompl
cwtl
add
add
mov
inc
xor
cmp
call
push
outsb
inc
xor
sbbb
pop
outsl
enter
in
push
xlat
repnz
mov
inc
pop
mov
pop
add
mov
push
pop
ljmp
mov
lret
mov
mov
in
rolb
daa
rcr
pop
pop
cmp
stc
andb
pusha
pusha
daa
mov
mov
xchg
mov
lret
mov
cltd
cmpl
jne
imull
ja
out
add
popa
insb
mulb
aam
mov
and
xchg
stos
insb
call
inc
pop
mov
in
dec
mov
out
xor
mov
mov
add
pop
mov
jns
mov
lock
test
stos
and
aaa
mov
jg
mov
sub
sbb
inc
mov
ja
and
fimuls
lods
lods
xchg
and
hlt
xchg
flds
xor
inc
cmp
or
leave
shl
test
mov
push
dec
imul
cmpsl
lret
mov
add
pop
out
dec
cmovne
call
adc
mov
ljmp
lods
xchg
testb
fistl
lret
inc
xor
and
or
pop
jcxz
adc
mov
dec
mov
out
cmp
in
push
pusha
cmp
inc
dec
clc
xchg
scas
add
adc
das
inc
xlat
and
sahf
scas
jb
mov
fadds
test
jb
es
add
lea
pop
cmp
jle
rcrb
mov
js
popf
push
xor
xchg
jg
and
aad
mov
pop
call
clc
mov
or
not
push
sbb
movsb
cmp
xor
in
popf
loop
inc
adc
popf
lods
subl
lret
loopne
or
sbb
imul
mov
xchg
mov
sbb
xor
inc
out
dec
jne
clc
stos
and
addr16
jo
pop
cmpsl
sbb
push
mov
and
cmp
ja
push
shlb
pop
testl
inc
xchg
add
jne
jle
test
mov
mov
push
sub
xchg
cltd
cwtl
mov
and
pop
and
neg
mov
cld
imul
pop
adc
dec
mov
lahf
lahf
test
imul
mov
mov
in
jno
adc
lds
mov
dec
out
enter
fcomip
inc
dec
pop
xor
xchg
scas
mov
mov
inc
pop
mov
mov
js
mov
adc
test
shrb
or
sti
into
cwtl
loope
cwtl
adc
inc
and
pushf
lea
cmpsb
sti
jnp
mov
fstp
les
add
das
xor
ds
hlt
mov
loop
mov
add
test
pop
cmpb
ds
clc
jnp
jmp
xchg
das
jns
xchg
sahf
jmp
adc
push
lcall
pop
jno
es
lea
loope
stc
call
jnp
mov
lahf
lcall
mov
cs
dec
leave
inc
subl
int
jmp
lock
mov
lcall
inc
repnz
rcrb
repnz
je
push
push
push
in
aad
add
add
add
clc
outsb
or
fsts
inc
js
in
xchg
jbe
push
ror
jns
sbb
inc
xchg
xchg
push
and
or
sub
jnp
je
jns
xchg
push
test
shrb
xchg
add
xchg
pusha
xor
mov
adc
les
dec
gs
add
popf
mov
sub
inc
js
mov
sbb
mov
mov
jbe
xchg
jmp
or
scas
mov
sub
cmp
stos
push
pop
shl
mov
mov
scas
sbb
repnz
pop
xchg
in
loope
insb
mov
cwtl
out
jo
push
lret
lock
aam
jl
clc
add
cmp
inc
lcall
clc
popa
dec
inc
inc
mov
mov
int
lret
mov
dec
sbb
xchg
inc
and
mov
cld
push
jp
xor
add
xor
pop
ljmp
in
xor
mov
mov
push
loop
xor
js
int
cmc
movsb
jnp
aad
in
mov
arpl
js
sub
mov
xchg
pop
add
mov
jo
aam
cmp
cmp
mov
dec
mov
xlat
lahf
cmp
add
cmp
int3
enter
shll
cmp
mov
xor
repz
icebp
mov
das
jbe
inc
adc
mov
sbb
mov
pop
push
push
mov
pop
pop
mov
incl
xor
mov
in
cmp
out
movsb
test
mov
mov
ret
shr
jmpw
ds
movsl
xchg
loop
out
or
mov
clc
adc
imul
fldl
pop
push
dec
dec
cmp
and
bound
mov
cmpsb
arpl
jp
cmp
js
xor
test
test
inc
rorb
ja
add
mov
lahf
or
test
adc
lret
fcoml
packuswb
outsl
sub
sarb
sarl
jo
mov
leave
mov
lret
dec
jo
js
pop
cltd
jmp
notb
push
xchg
scas
inc
fwait
out
sub
xchg
add
lcall
xchg
aad
push
cmpsb
insl
lds
rol
xchg
jl
jmp
jg
or
lods
rol
jnp
fucomp
inc
shll
test
mov
lds
xor
inc
inc
or
imul
mov
adc
int
dec
shl
mov
out
mov
jmp
cmp
push
push
insb
cltd
jecxz
sub
push
mov
pushf
mov
pop
lods
pop
jle
push
fmulp
xchg
jns
add
movsb
dec
in
mov
repnz
sbb
xor
mov
jns
xchg
bound
clc
inc
jmp
mov
add
xchg
out
test
push
clc
pop
ss
jae
xchg
aam
jne
loop
ret
ret
std
pushf
mov
mov
adc
insl
dec
rolb
addr16
mull
imul
adc
mov
mov
cmp
mov
cmpsb
push
fucom
test
pop
jb
cwtl
adc
mov
or
jle
es
clc
mov
mov
test
pop
mov
loop
cli
jg
rcrb
inc
out
jmp
jecxz
in
lret
xchg
jns
xor
repnz
jbe
aas
sbb
sarb
inc
repz
xor
test
and
mov
xor
push
or
in
aaa
pop
clc
lds
pop
shrd
iret
add
xor
or
cmc
jge
imul
push
pop
push
pop
mov
rcll
mov
fstps
and
xlat
adc
pusha
arpl
push
fldl
lds
das
clc
test
mov
jmp
insb
or
cs
cwtl
jbe
and
sub
push
out
xchg
dec
push
and
hlt
dec
push
fimuls
movb
push
shll
dec
clc
and
and
in
stos
adc
ret
pop
sbb
loope
cmpsl
dec
out
pop
mov
mov
out
push
inc
shrb
add
sub
xor
pop
cmp
dec
cs
cld
scas
xor
and
sub
adc
or
mov
aaa
dec
icebp
test
fcom
and
push
pop
mov
and
push
fcoms
and
jecxz
mov
cld
lcall
fdivl
sahf
pop
mov
out
cmp
sahf
add
xchg
dec
and
mov
xor
mov
mov
dec
push
pop
jo
stc
and
scas
rcr
xor
jne
fldt
add
dec
xor
mov
cltd
jne
inc
sbb
cmp
lret
loop
sub
mov
and
ljmp
push
les
call
and
mov
notl
ret
scas
nop
dec
pop
mov
les
dec
or
std
cs
adc
pushf
pop
mov
mov
pop
mov
leave
shl
cmpsl
pop
lods
cmp
bound
aad
lock
add
in
nop
cli
test
mov
add
shl
mov
mov
mov
mov
xlat
inc
sub
clc
mov
test
fs
inc
outsb
aad
cli
cmp
xchg
mull
push
ret
pop
ret
adc
ja
xchg
ficoml
xchg
jb
push
adc
movsl
jno
and
es
clc
adc
lret
in
jl
mov
sbb
hlt
vmovhpd
adc
mov
loopne
ja
mov
pop
mov
xchg
xor
jmp
pop
mov
mov
shlb
filds
in
adc
outsl
out
leave
testb
xchg
dec
shrl
cs
js
xchg
sbbl
pop
push
add
cld
cmp
inc
inc
mov
adc
clc
sbb
xchg
adc
hlt
test
popa
mov
jo
mov
gs
mov
jle
aaa
mov
push
fidivl
ret
lret
pusha
int3
fcoml
push
lods
inc
jl
push
cmp
std
sarb
sub
push
and
pop
rcl
sahf
sbb
jle
jmp
incb
lret
enter
aam
pop
jecxz
mov
push
clc
aad
js
test
int
xor
movsb
cld
loope
arpl
and
shll
loop,pn
adc
dec
test
pop
mov
adc
in
add
jno
call
rol
lea
pusha
das
sub
inc
mov
dec
mov
xchg
enter
jne
shlb
cmpsb
je
mov
cli
jae
jbe
stos
cmp
xchg
xchg
test
sbb
jl
adc
into
rcll
jb
js
shlb
inc
and
inc
mov
adc
cli
neg
enter
mov
and
jl
xchg
shr
jle
in
push
push
lods
jmp
mov
sahf
rdpmc
mov
in
lahf
out
mov
xor
push
jno
mov
adc
test
jl
and
gs
mov
mov
sub
cmp
pop
and
sti
xchg
aad
dec
adc
inc
cmp
inc
sbb
ds
cwtl
hlt
pop
cmp
mov
lcall
lods
cmc
mov
jb
dec
adc
fistl
shl
jbe
mov
xchg
sbb
clc
push
sbb
mov
out
popf
into
add
js
cltd
cmp
js
or
sub
mov
cmp
sub
les
test
jmp
lods
mov
dec
mov
cltd
mov
sets
pop
outsl
daa
mov
lods
icebp
out
js
add
test
fistps
mov
cs
bound
mov
repnz
sub
loop
push
push
push
adc
les
adc
dec
xchg
push
cmp
push
sbb
out
repnz
dec
call
inc
xchg
es
fnstenv
enter
lds
push
jmp
and
cmp
test
pop
sub
test
mov
jg
dec
mov
dec
ljmp
mov
leave
sahf
xor
cmp
sbb
movsl
mov
mov
lret
mov
loope
ficoml
movsb
xchg
int3
nop
jnp
xchg
mov
mov
mov
xor
xchg
js
faddl
dec
fbld
pop
mov
call
cmp
lods
sti
lret
rcrb
and
pop
push
and
pop
sbb
hlt
or
inc
jns
stc
push
add
dec
xchg
or
ljmp
mov
mov
and
mov
out
enter
mov
sub
sti
call
leave
adc
jmp
rolb
jns
clc
lods
or
cwtl
jg
add
dec
jns
mov
push
stos
scas
rcrb
and
mov
loope
mov
in
outsl
adc
mov
stos
add
dec
js
cmp
enter
fildl
dec
sub
xchg
pop
sub
sub
inc
dec
cmp
lock
imull
js
out
mov
add
and
fsubs
and
aam
lahf
pop
mov
sub
cmpsb
dec
gs
incb
in
scas
jae
sub
mov
xchg
xchg
imulb
push
in
jnp
or
xor
sub
xor
xchg
push
sub
popf
sahf
aam
cmp
mov
bound
cs
sub
pop
and
iret
stos
test
dec
cmpsb
jp
push
ljmp
xor
andnps
and
inc
mov
insb
add
test
test
xchg
sbb
outsl
mov
icebp
insb
rorb
push
and
add
in
inc
push
lods
pusha
arpl
pop
sub
push
mov
movsl
test
in
fwait
filds
or
and
mov
dec
jnp
pop
clc
mov
and
orl
dec
stos
pop
pop
mov
mov
into
cli
mov
icebp
dec
jb
mov
sub
mov
mov
mov
outsb
iret
and
ss
into
idivl
and
hlt
sub
xchg
or
fdivs
bound
lods
push
iret
test
outsb
mov
and
fidivrl
mov
dec
jl
or
xchg
jne
jmp
mov
sub
sbb
cmc
mov
mov
xlat
out
mov
cwtl
in
mov
hlt
or
lret
cltd
adc
push
call
xor
stos
test
inc
adc
pushf
mov
pop
dec
shrb
pushf
pop
clc
fcmovnb
jnp
xchg
pop
jmp
xchg
adc
mov
js
dec
ss
test
push
test
insb
je
call
loop
idivb
mov
loope
popf
sbbb
cld
test
jne
push
dec
add
insb
sub
inc
cwtl
lahf
test
mov
leave
xchg
adc
jmp
and
aaa
int
mov
loopne
xchg
repnz
adc
xlat
push
test
icebp
inc
ss
push
fdiv
push
xor
scas
add
call
add
xor
mov
cli
inc
push
sub
scas
mov
dec
js
out
pushf
popf
shrb
lahf
cmp
jmp
or
insb
inc
lea
icebp
fiaddl
fimull
xchg
test
mov
fstpl
mov
sub
lods
fldl
jns
leave
add
sbb
xchg
and
adc
addb
shlb
cmp
cmc
jmp
js
mov
aad
movsl
add
imul
clc
lret
in
xor
iret
adc
fidivrs
mov
mov
movsl
push
ja
push
test
bound
mov
stos
mov
sbb
testl
rol
push
sub
inc
add
cmp
push
cmp
ret
fwait
jl
rdtsc
into
pop
push
add
mov
fwait
aaa
pop
nop
je
push
cltd
repz
les
out
mov
push
jne
pop
mov
mov
or
fnstenv
clc
adc
adc
inc
push
inc
js
movsb
movsl
inc
setbe
xchg
sbb
lret
mov
mov
das
mov
scas
xor
popf
pop
cld
jae
stc
xlat
faddl
inc
and
decl
hlt
jno
js
xchg
sahf
ja
sbb
mov
sahf
stos
adc
lret
aad
xor
sub
cmp
add
lret
mov
aam
int
pop
out
mov
dec
dec
xorl
in
js
adc
repz
lret
test
dec
leave
cmp
xor
mov
aam
dec
pop
mov
pushf
or
mov
jmp
jo
sbb
xchg
fiadds
pop
ss
sub
jb
push
and
aam
in
stos
add
dec
jecxz
mov
out
out
es
jg
and
jbe
and
lcall
cmp
dec
xchg
lahf
popa
andl
add
repz
cmp
inc
shlb
and
jnp,pn
movsl
push
and
cltd
fwait
and
popa
int
or
mov
icebp
push
inc
sarb
rorb
mov
or
cld
movlps
stos
lret
push
outsl
mov
mov
je
cmp
clc
in
add
jnp
das
in
pop
jo
nop
sub
mov
dec
addb
cmp
movsl
into
inc
js
sti
idivb
pop
sub
clc
inc
inc
inc
arpl
lret
dec
cs
push
sbb
shll
fsubr
lahf
inc
mov
jge
adc
or
mov
sbb
loope
sub
je
cmp
pop
stos
add
dec
fistps
mov
aam
aas
and
sbb
inc
xor
js
hlt
xor
rorb
push
mov
mov
ja
push
call
js
inc
out
xor
bound
cmp
data16
int3
arpl
cmp
lock
addr16
jb
ss
imul
xchg
pop
pop
jns
mov
popa
jne
sbb
xchg
loope
ds
mov
dec
dec
inc
out
aaa
pop
repz
movsb
out
ss
mov
dec
into
adc
jge
imul
mov
js
add
cmpsb
flds
push
loopne
xor
sbb
mov
nop
lret
in
sbb
imul
xor
mov
dec
sti
push
in
aam
inc
mov
leave
movl
negb
sub
dec
push
mov
test
sbb
inc
leave
data16
add
divb
fisubrl
scas
sbb
out
sub
jnp
inc
int3
xor
lret
sub
fwait
xlat
jnp
repz
lret
scas
mov
je
xor
movsb
pop
idivl
cltd
adc
dec
mov
js
mov
repz
jmp
addr16
sahf
fwait
test
enter
cmp
inc
and
mov
iret
lret
inc
cld
out
pusha
or
bound
shll
aam
jb
arpl
adc
aam
cmp
inc
lret
jmp
dec
js
and
xchg
not
xchg
pop
idivl
and
data16
in
add
roll
sbb
sbb
xor
stos
and
mov
mov
jne
push
fcomps
js
add
lods
lcall
jbe
push
loop
jb
mov
cmc
pop
test
popa
dec
sbb
jmp
dec
sub
icebp
adc
fisubrl
sbb
sbb
jbe
pop
and
add
jmp
push
sahf
xchg
mov
mov
mov
das
inc
xchg
cmp
mov
adc
dec
and
stos
inc
mov
adc
pusha
jne
lret
sub
dec
jl
xchg
gs
pop
rorl
mov
mov
sbb
or
je
push
pop
jmp
or
cmpsw
xchg
inc
clc
push
push
ljmp
lcall
mov
or
pop
mov
pop
mov
icebp
xchg
sbb
mov
xor
cmp
arpl
das
xor
jo
ss
lea
sub
lds
repnz
and
clc
dec
mov
leave
jns
and
xor
adc
daa
lods
xor
mov
fidivrl
cmp
push
sub
mov
mov
pop
data16
and
jmp
adc
add
jns
jnp
mov
lret
xchg
lds
sahf
scas
imul
and
mov
neg
xor
jnp
adc
adc
in
out
js
das
mov
and
push
jb
mov
jmp
or
movsl
ret
mov
fldcw
lret
int3
add
dec
adc
aaa
pop
adc
jmp
mov
fs
sbb
rcl
cmc
repnz
push
enter
mov
or
shlb
sbb
mov
mov
fildl
in
mov
jp
loope
rcrb
push
clc
repz
loope
xchg
lret
clc
in
lods
in
repz
nop
ja
lret
pop
lret
popf
das
jecxz
sarb
sbb
ficompl
sbb
push
mov
andb
jb
adc
dec
and
imul
mov
lcall
pop
imull
nop
subl
add
fdiv
push
cltd
xlat
mov
dec
mov
ljmp
addr16
ljmp
f2xm1
int
dec
pop
shl
sub
sub
dec
shrl
cmp
xchg
jle
ret
mov
loope
ja
lds
rolb
cmp
je
cli
xchg
in
sub
mov
mov
jo
xchg
hlt
lret
dec
testb
pop
mov
je
xor
int
mov
push
or
pop
pop
mov
cmc
pop
jecxz
js
pop
mov
mov
add
js
cmpsb
icebp
std
jbe
pop
in
jns
sti
jg
es
in
insb
push
call
adc
sub
pop
xor
clc
stc
mov
mov
out
loopne
jl
nop
movl
dec
cmp
push
sbb
jmp
sti
cmpsl
into
mov
loopne
js
xchg
cmc
mov
test
in
or
push
js
mov
mov
test
loope
dec
jg
jno
mov
mov
dec
in
loop
jo
mov
sbb
ret
fld
inc
js
mov
jno
imul
popa
shrl
lcall
xchg
mov
adc
mov
inc
cmp
inc
fsubs
push
mov
add
stos
jmp
je
sbb
and
cmp
dec
popa
bts
call
and
add
pop
lret
jnp
in
adc
loope
xchg
adc
adc
jae
ffree
daa
jno
push
mov
sbb
icebp
push
movsl
repz
nop
enter
mov
mov
cltd
adc
mov
dec
js
nop
add
mov
out
out
cwtl
aas
lret
fsubl
test
test
xchg
js
xor
sbb
dec
or
call
stos
push
jp
xor
adcb
xor
stc
pop
out
sbb
adc
shlb
mov
xor
mov
jp
lock
test
testl
addr16
jbe
xchg
cmp
mov
ljmp
xchg
je
dec
jmp
or
sbb
fs
push
fucomi
call
mov
loop
shrl
pop
fsubl
mov
sar
jb
stc
dec
mov
adc
in
and
cmpsl
adc
mov
outsl
insl
pop
bound
inc
inc
in
les
push
adc
stc
mov
pop
pushf
lret
lcall
loopne
outsl
mov
arpl
inc
mov
arpl
cmp
sbb
aas
cmp
dec
xor
je
mov
lods
test
in
sub
fidivrl
xor
aad
loop
iret
nop
mov
sbb
or
jl
xlat
outsl
js
decl
xchg
pop
es
enter
mov
out
xor
mov
hlt
test
add
fidivrl
pop
in
push
cmpsl
fldcw
jg
mov
inc
push
lret
inc
cli
jp
cmp
jb
add
aad
test
pop
and
lret
push
dec
test
xlat
pop
ds
xchg
jbe
leave
cs
sbb
clc
cmp
dec
arpl
push
scas
fsubrl
iret
mov
cmpsl
inc
mov
and
arpl
dec
clc
icebp
push
fsts
xchg
dec
mov
fs
push
add
inc
and
mov
sub
in
or
and
cmp
cmp
iret
lds
iret
flds
dec
popa
pop
out
and
ljmp
roll
lds
jbe
mov
jnp
sti
repz
std
insl
xor
xchg
popa
lret
mov
mov
and
and
inc
clc
sbb
sbb
mov
adc
inc
repz
adc
sarl
mov
inc
mov
sahf
addr16
pop
clc
or
and
sbb
cmp
or
mov
add
jnp
dec
hlt
jmp
cld
jbe
mov
mov
popf
pop
scas
sub
mov
pop
mov
jns
test
push
push
sub
pop
xor
je
popf
inc
cmp
adc
inc
adc
xorb
mov
push
or
fcomi
and
cmpsb
pop
cmp
mov
aaa
lock
test
fisttpl
mov
test
ds
add
lret
cli
shlb
ficoml
xlat
movsb
data16
mov
inc
and
fistps
and
cmp
inc
or
jnp
cs
adc
pop
mov
jne
lret
mov
mov
popf
adc
lret
shl
shr
mov
pushf
mov
cmp
jne
les
and
in
jg
insl
and
rorl
aam
dec
sbb
xor
xchg
dec
call
push
orl
sub
ret
sbb
mov
cwtl
sub
inc
cmc
pop
in
aad
xor
push
mov
movd
cmp
repz
jmp
jecxz
lret
jg
pushl
movsl
mov
pop
push
sub
xlat
adc
dec
mov
push
dec
ljmp
mov
adc
dec
and
addr16
int
mov
mov
cmovp
movsb
cmp
xchg
shll
or
lods
insb
shll
adc
sub
stc
mov
in
lret
outsl
push
lret
in
sub
cmpb
xchg
imul
es
fadds
inc
push
xchg
jne
xor
je
mov
push
stos
sbb
je
rcrb
mov
pop
mov
int
add
xchg
fimull
mov
lods
and
cmc
push
lret
icebp
jnp
cmpsb
jnp
mov
xor
cld
int3
je
jb
mov
mov
inc
sub
mov
fistpl
or
notb
js
mov
inc
les
and
push
bnd
inc
mov
xor
daa
repz
jne
xor
push
out
sub
pop
mov
fcmove
scas
adc
arpl
rcll
xchg
sub
add
or
pop
icebp
cs
pop
mov
ja
add
adc
sub
mov
mov
rol
mov
jae
dec
aam
ret
add
xor
add
dec
aas
sbb
jne
out
ja
into
add
dec
test
outsl
popf
ss
mov
inc
stos
stos
data16
dec
clc
mov
outsb
scas
roll
lret
call
scas
arpl
mov
inc
fucomi
inc
adc
jg
sub
repnz
das
push
loop
ja
pop
js
loopne
add
imul
out
imul
and
mov
notl
cmp
jb
xchg
add
aaa
negb
jecxz
es
or
out
lock
in
add
icebp
inc
or
mov
cmp
mov
push
fcoml
das
js
lret
mov
movb
orb
or
add
sub
xor
sbb
lret
sbb
push
sbb
mov
iret
mov
scas
dec
jae
aaa
inc
push
dec
js
jns
ds
shlb
clc
push
ss
add
dec
mov
loopne
inc
jbe
dec
popf
cs
sar
jne
adc
xor
cli
dec
mov
dec
push
insb
nop
jmp
xor
xchg
dec
jecxz
in
or
shrb
xchg
sub
js
jle
fldt
mov
and
pop
push
testl
mov
mov
jle
lock
mov
jmp
imul
xor
lret
dec
xlat
fstps
jo
sarl
xor
iret
jne
pop
lret
or
dec
fsubr
loope
xchg
xor
and
and
repz
add
js
lods
mov
ljmp
insl
stos
int3
push
push
inc
pop
jbe
lcall
inc
mov
xchg
rcr
push
or
and
lret
into
mov
push
ret
repz
mov
cmp
cli
movsb
stc
test
push
jns,pt
mov
popf
popa
mov
shlb
jle
fstpt
push
inc
jmp
sub
aad
or
inc
mov
js
pop
inc
jne
lret
pop
adc
mov
xchg
xchg
dec
or
push
sbb
insl
sub
aam
lcall
add
mov
mov
jg
mov
adc
xchg
in
imul
fdivrs
cmp
pop
lock
dec
cmp
shlb
js
add
mov
add
lret
lds
pop
das
adc
xchg
icebp
lock
sbb
pop
lret
cmc
idiv
subb
mov
test
nop
popa
xchg
push
sbb
and
lds
cmp
dec
lcall
and
push
lret
enter
cmp
pop
insb
ljmp
repnz
push
cmp
shll
xchg
and
cld
or
clc
xor
cmpsb
xchg
push
mov
mov
mov
dec
clc
iret
sbb
xor
add
rorl
adc
and
clc
dec
clc
addl
jmp
push
popf
or
inc
roll
inc
pop
mov
dec
std
mov
insb
mov
jge
bound
push
dec
imul
jle
aam
lds
mov
mov
push
mov
mov
mov
mov
popf
sti
shl
pop
adc
outsb
adc
push
cli
popf
mov
push
popf
push
adc
clc
outsl
xor
gs
sub
mov
mov
add
mov
popf
mov
ja
in
int
rorl
dec
adc
cmp
dec
add
mov
dec
jno
mov
and
fs
cmp
dec
mov
jo
sahf
es
fisttpll
mov
lea
push
jl
push
adc
and
popa
repnz
stos
xchg
sarb
sahf
pushf
enter
lock
add
inc
mov
and
inc
pop
setae
test
mov
ljmp
repnz
movsb
add
lret
js
cwtl
adc
sbb
icebp
mov
mov
adc
mov
sbb
dec
mov
clc
in
test
je
popf
add
mov
sub
fcoms
inc
js
aam
mov
rcrb
mov
test
cmp
int
mov
shlb
lret
and
js
jae
jne
mov
add
cmp
int
push
mov
sub
lret
and
adc
adc
mov
pop
out
test
insb
lret
mov
xlat
jbe
mov
movsb
aaa
or
jns
mov
mov
fisttpl
addr16
lods
mov
xchg
lret
filds
mov
mov
cltd
negb
fmul
inc
cmp
mov
loop
dec
push
push
and
test
ret
ja
test
mov
jge
mov
cltd
pop
xchg
mov
clc
pusha
pusha
flds
mov
mov
pop
mov
push
mov
sti
xchg
cmpl
mov
fs
orl
cld
jnp
mov
cmpsl
and
adc
jbe
mov
xlat
jp
loop
lods
jp
add
mov
movsb
adc
ss
xor
mov
and
push
xor
inc
jno
testb
mov
out
inc
jae
push
push
cmp
mov
xchg
or
sub
aaa
adc
dec
cwtl
lods
sub
divl
add
aam
in
sahf
add
sbb
ss
arpl
clc
xor
in
xchg
push
pushf
aad
xchg
mov
mov
ljmp
sbb
adc
cli
xlat
adc
cltd
enter
sbb
inc
lods
test
mov
mov
out
in
int
jno
lahf
jp
js
adc
jecxz
jge
sahf
aas
xor
push
das
lret
pop
pop
add
ss
in
or
lds
insl
mov
ds
repz
sarb
jbe
out
dec
lret
inc
adc
xor
shrb
outsb
add
stos
fmul
mov
aad
cmpb
inc
popa
jl
jp
add
xor
xchg
sbb
xchg
in
addb
cmovbe
xchg
stos
jb
mov
cmp
jp
pop
mov
and
lea
mov
mov
test
xor
jp
xchg
cltd
jle
xlat
shrl
cs
cli
insl
popa
push
xlat
into
divl
sub
js
mov
cli
bnd
push
mov
add
jb
jl
fwait
ja
xor
sbb
pop
jbe
mov
pusha
clc
loopne
dec
les
js
push
ja
je
roll
lret
fscale
lock
lret
add
dec
out
aam
push
inc
fidivrs
popl
ss
add
jg
push
sbb
imul
cmp
inc
cmp
add
push
and
imul
mov
shr
sub
or
push
test
fadds
sub
lods
jmp
mov
pop
dec
repnz
lret
into
push
jp
pop
jb
jl
xchg
inc
fsubrl
and
pusha
rorb
mov
or
xchg
jmp
lods
fnstenv
outsb
pop
dec
xlat
in
out
daa
int3
xor
cmpsl
cmp
add
dec
cld
and
xor
xchg
cmp
add
xchg
pop
clc
jecxz
xor
fwait
mov
or
cltd
dec
jg
cmp
xlat
push
inc
test
push
and
pop
dec
jno
push
adcl
or
push
push
out
and
dec
jp
lods
and
loop
mov
inc
js
movsl
lcall
insb
clc
cld
mov
in
mov
roll
push
inc
adc
and
popf
and
insl
push
push
pusha
mov
movsb
push
or
inc
imul
aad
imul
sahf
xchg
and
int3
loope
mov
pop
js
sbb
mov
xchg
push
loope
xchg
sub
mov
aas
mov
outsl
dec
mov
icebp
leave
test
cmpsw
jne
mov
xchg
das
mov
js
push
xor
js
mov
mov
pop
sti
mov
mov
cmc
test
icebp
imul
xchg
pop
clc
xor
test
fsubs
and
bound
and
lds
push
lock
js
or
mov
repnz
lret
out
fmulp
mov
rclb
jno
or
mov
sbb
jge
push
dec
cli
or
add
cs
and
cmp
aaa
cwtl
mov
sub
push
call
sub
jae
cmc
jbe
mov
out
ficompl
sbb
imul
call
js
dec
push
inc
lods
push
push
xchg
mov
lds
push
jns
movsb
mov
daa
push
cmpsb
ud0
pop
jmp
adc
jl
mov
sahf
stc
push
mov
xor
dec
jle
mov
dec
xchg
incb
xor
gs
pop
cmp
sbb
out
sbb
adc
add
dec
test
enter
mov
mov
xor
sbb
es
shrl
data16
add
lret
stc
sub
and
arpl
mov
mov
es
scas
lret
lret
cmpb
and
cld
and
lahf
mov
cvtpi2ps
fnstenv
jns
fcompl
sbb
fisubl
add
jl
clc
movsl
pop
push
sbb
insl
inc
jmp
or
xchg
or
lret
call
mov
add
mov
pop
movsb
jecxz
jle
js
xchg
adc
andb
lds
das
js
xchg
icebp
sub
mov
adc
add
adc
jo
add
lea
jecxz
mov
add
add
and
pop
cwtl
cs
daa
xor
decb
mov
xchg
mov
and
test
and
pusha
pushf
jo
addr16
push
int3
mov
dec
pop
int3
mov
testl
inc
sub
lret
repnz
mov
mov
adc
hlt
mov
mov
aad
mov
and
push
popf
xor
xchg
lret
lods
in
cmc
data16
out
pop
nop
ss
mov
jle
mov
fs
add
inc
js,pn
and
adc
fidivl
lahf
sbb
imul
shlw
test
mov
mov
clc
cs
aam
and
xchg
sbb
xor
inc
dec
mov
pop
ret
cmpsl
ret
ret
push
dec
shlb
test
cld
insl
dec
js
push
loope
dec
movsl
lret
aad
data16
cmp
jne
push
mov
rcrl
shl
jge
adc
cmp
mov
fistpl
shlb
add
in
jl
shrl
inc
or
mov
dec
add
pop
pop
add
pop
inc
sub
and
sub
sbb
ror
mov
loopne
sahf
enter
cmc
push
jnp
dec
imull
ror
mov
push
pop
in
out
cld
dec
pop
lods
loopne
imul
in
pop
stos
sbb
sbb
mov
mov
out
dec
stos
daa
mov
js
adc
or
scas
dec
xchg
mov
xchg
out
lret
in
sbb
and
cmpl
push
out
jge
stos
clc
push
pop
pop
jl
inc
movsb
scas
mov
jns
xchg
mov
nop
repnz
fldl
adcb
sub
test
and
inc
test
lds
aam
adc
xor
test
add
mov
cmp
pop
pop
in
das
jle
lcall
cmp
int3
or
pop
sub
or
dec
jge
lods
mov
jge
data16
cmp
sub
mov
and
mov
mov
gs
es
add
mov
adcl
xor
ret
pop
mov
ljmp
cmp
pop
js
mov
push
data16
test
ja
xor
jecxz
mov
mov
sbb
mov
pop
add
je
aam
mov
or
and
mov
sbb
cli
pop
cmpl
cmc
mov
xor
dec
jae
icebp
out
je
out
in
scas
ds
in
ret
push
cmp
sbb
and
or
movsl
inc
mov
adc
sub
test
jecxz
adc
lock
jecxz
shrd
lret
sbb
sub
outsl
ds
xchg
adcl
xchg
cmpl
mov
fimuls
loop
lcall
jns
dec
mov
fldenv
dec
lahf
rorb
mov
stc
dec
pushf
neg
pop
subb
dec
sbb
sbb
clc
mov
outsb
lea
xchg
mov
ja
insl
in
xchg
push
push
clc
or
icebp
xchg
dec
mov
add
dec
stos
xchg
mov
cmp
nop
push
inc
testb
push
repz
and
popa
fdivrl
push
push
or
mov
add
rol
mov
and
cwtl
fucomi
sub
xor
inc
mov
popf
jg
lahf
mov
ret
lret
xchg
in
data16
dec
mov
test
lds
je
jb
inc
scas
sbb
mov
std
pop
iret
push
cmp
xchg
aas
sbb
add
out
dec
clc
or
test
push
clc
fwait
loop
sbb
cmp
inc
push
mov
cltd
ljmp
push
lahf
xchg
and
adc
lds
inc
cs
sbbb
aas
fs
pop
lret
mov
pop
shrb
and
add
pop
lcall
sarb
imul
cmpsl
lea
clc
push
dec
mov
inc
clc
lret
popf
stos
in
popa
cmc
imul
loope
lret
test
lahf
jge
andl
and
and
loopne
ret
aad
in
adc
mov
ficoms
shll
mov
in
popa
dec
push
push
cmp
aas
and
rclb
adc
pop
stc
jno
push
aam
sub
loope
nop
dec
lods
sub
lds
and
mov
leave
jne
jge
nop
pop
hlt
adc
aaa
mov
and
ljmp
jmp
out
sub
add
xchg
cmpsb
pop
xor
mov
lret
sarb
add
cmp
fldt
rcrl
int
lret
stos
enter
or
xor
mov
jnp
shl
addr16
dec
repnz
push
adc
lds
dec
dec
fs
rorb
xor
and
pop
xchg
xor
int3
lods
inc
cmp
scas
or
xchg
sbb
bound
xor
sub
push
jnp
pushf
xchg
mov
or
rolb
dec
adc
xlat
add
fwait
pop
or
sub
dec
lret
jbe
jnp
cs
adc
insb
mov
adc
bound
inc
pusha
clc
scas
test
push
call
cmp
mov
xchg
add
pop
push
push
and
out
mov
lods
decb
adc
and
add
rorl
fs
mov
pusha
mov
call
xor
mov
sti
push
dec
jo
cmp
mov
jg
clc
dec
clc
push
sub
pop
xchg
ds
shlb
inc
pop
das
out
dec
daa
js
rorb
cmp
xchg
iret
out
mov
cmp
push
cmpsl
push
jp
stc
push
pop
sarb
fnsave
pusha
adc
or
dec
out
jo
adc
movsb
adc
cmp
shlb
ss
push
or
mov
mov
sub
enter
jl
out
jmp
lret
movsb
jecxz
sbb
aaa
sbb
xor
loope
enter
hlt
stc
test
pop
shrl
push
inc
ljmp
or
rcrb
out
add
adc
or
mov
fiadds
mov
mov
dec
sbb
xor
imul
and
or
test
lds
int
imul
cmp
cmp
jo
mov
mov
mov
jnp
cmp
dec
call
cmp
jno
ret
lret
dec
insb
movd
push
or
and
lret
punpckldq
inc
adcb
dec
jge
jb
xchg
sub
fiadds
jmp
insb
iret
cmp
call
test
and
mov
and
push
jmp
and
jp
or
jbe
call
mov
xchg
mov
js
lahf
pushf
sbb
or
imul
dec
push
pop
shlb
divl
sub
xor
jbe
pop
lods
lahf
pop
xor
mov
mov
sbb
pusha
lcall
pushl
hlt
insl
jne
pop
xor
xor
pop
pop
inc
push
xchg
test
cs
clc
in
xchg
push
imulb
xlat
stos
test
pop
out
xchg
mov
sbb
cmc
in
push
rorb
push
xchg
sbb
ja
jns
cmp
xor
mov
clc
lods
les
lahf
mov
lahf
cmp
pop
xchg
in
add
lods
push
nop
imul
in
dec
cwtl
pop
ror
into
jg
test
movsl
dec
xor
mov
hlt
sbb
arpl
mov
sub
add
clc
std
cmp
fnsave
adc
leave
inc
call
fwait
add
ret
mov
jb
xchg
test
es
adc
cmp
or
dec
xchg
mov
into
jns
jno
fs
xchg
outsl
pop
mov
add
fidivrl
jl
sub
dec
ds
or
nop
and
add
ret
xchg
ficomps
jbe
imul
das
aad
lret
filds
imul
lods
imul
shlb
repz
pop
pop
js
cli
stc
stos
fldl
imul
stos
cmp
lods
push
jae
cmp
repz
popf
call
pop
push
mov
push
cmp
and
pop
mov
test
add
pop
mov
cli
cmpsb
ret
loop
or
movsl
jge
mov
clc
imul
cmpl
dec
and
pushf
js
stc
insl
movsb
inc
jl
adc
repnz
adc
nop
into
clc
subb
pop
jmp
fisubrl
nop
lods
call
movb
push
shrb
test
mov
dec
lea
iret
add
inc
sbb
pop
aad
mov
mov
dec
mov
jmp
clc
sub
negb
jecxz
subl
sbb
sbb
jbe
scas
out
mov
call
lds
fnstcw
aas
push
jne
insb
out
jp
add
ljmp
clc
and
out
pop
cmp
fsubrs
jns
mov
fcoms
aam
nop
int
cltd
xlat
test
xor
jbe
lock
out
cmpsl
sbbb
rcrl
dec
and
mov
cmp
add
cmp
xchg
dec
jg
mov
cmp
inc
loop
xchg
add
adc
daa
lds
jge
mov
aaa
movsl
pop
inc
pop
sbb
cmp
mov
dec
call
dec
push
sub
sub
or
push
cmc
pop
xor
inc
repnz
sbb
jp
arpl
mov
clc
mov
mov
jmp
insb
sub
cmc
xchg
dec
rcrb
or
adc
cmp
push
sbb
push
mov
call
cmpl
pop
and
lahf
or
dec
scas
shll
aaa
repz
lock
test
push
outsb
and
pushf
pop
call
clc
add
mov
fstpt
xorb
lret
cmc
xor
mov
jmp
fisubl
xor
push
push
mov
pop
jp
js
leave
and
add
stos
or
sbb
or
push
in
xchg
icebp
pop
sub
call
bswap
les
xchg
push
mov
scas
in
mov
cwtl
jmp
sbbb
lret
mov
mov
and
stos
aad
xor
mov
xchg
ss
inc
mov
cld
dec
mov
loop
xchg
mov
adc
out
outsl
cs
xlat
aas
stos
test
dec
xor
test
stc
test
inc
sbb
inc
mov
xor
std
xchg
dec
or
pop
jo
inc
test
or
and
sbb
cld
or
clc
test
dec
pop
repz
mov
dec
mov
imul
mov
mov
cmp
jae
dec
je
js
fcompl
pusha
or
pop
pop
xchg
xchg
sbb
xchg
pop
xchg
add
cmp
ja
push
and
mov
es
mov
jmp
adc
cld
cmp
roll
lock
loope
repnz
and
cmpsl
add
lret
xchg
jae
sbb
dec
xchg
inc
jg
jb
push
in
mov
xchg
xorb
push
jae
dec
decl
sbb
add
dec
dec
push
shll
and
dec
addr16
or
andl
dec
pop
dec
inc
popa
cmp
push
inc
fsubrs
inc
hlt
dec
pop
aad
ret
xor
ja
lods
mov
imul
out
inc
add
mov
bound
push
mov
dec
mov
fdivs
int3
push
je
jmp
sub
push
push
aas
push
or
packssdw
subl
cld
add
mov
push
repz
xchg
inc
ja
xchg
dec
fisttpl
dec
test
imul
call
pusha
xchg
mov
or
or
stos
in
add
shrd
test
dec
xor
mov
cmp
and
add
rep
iret
in
xchg
jmp
xor
pop
jmp
xor
jmp
andb
test
inc
add
dec
xchg
test
into
add
add
mov
xchg
lds
clc
jmp
sub
dec
arpl
mov
leave
outsb
jmp
mov
inc
and
push
fldcw
mov
inc
arpl
sub
out
out
add
lock
ss
mov
push
popa
clc
mov
mov
jns
fwait
cmc
add
rcrl
mov
rolb
push
mov
ja
cltd
loop
xchg
jns
ret
jne
orb
xorb
dec
dec
xor
jb
lock
mov
jb
into
popa
xchg
mov
sbb
int3
or
pop
repz
dec
frstpm(287
mov
mov
jbe
es
dec
stc
jbe
shl
loop
outsl
mov
push
aam
add
adc
mov
push
test
sbb
jmp
mov
scas
lods
incb
stos
mov
pop
in
push
les
mov
dec
or
call
sbb
cmp
mov
test
pop
je
nop
mov
sub
cmpsl
les
push
nop
xor
int
and
lea
outsb
js
inc
mov
mov
jnp
inc
xchg
dec
movsb
loope
adc
sub
outsb
lock
inc
mov
fistps
xor
incl
xor
mov
paddusb
sbb
stos
mov
adc
ja
imul
sbb
imul
lods
xor
and
pop
mov
cld
imulb
xchg
jle
stos
repnz
neg
fistps
sbb
and
mov
jle
int
and
dec
push
je
pop
rorl
sbb
cmp
lahf
inc
jb
mov
sub
stc
daa
mov
loopne
shll
cmp
cmc
push
mov
movsl
push
ljmp
enter
es
out
jbe
dec
inc
dec
jmp
outsb
das
or
dec
insb
lds
stos
xor
pop
clc
adc
das
int3
sub
imul
inc
rcl
icebp
stc
rorb
sub
aas
and
mov
js
in
clc
roll
ljmp
push
dec
in
pushf
pop
sbb
sub
add
pop
mov
sahf
rol
scas
xchg
inc
cmpsb
add
dec
lcall
xor
ss
scas
jae
cmpsb
jmp
add
roll
mov
mov
lahf
mov
jne
dec
mov
popf
dec
test
adc
aad
sbb
fnsave
push
or
rcrb
adc
dec
ss
sbb
dec
mov
cmp
mov
shll
xchg
fwait
and
call
sti
xchg
mov
dec
rep
hlt
ja
pop
test
ds
pop
das
jns
int
add
mov
and
je
daa
pop
icebp
sbb
cmp
mov
lret
adc
dec
rolb
stos
fwait
and
pop
fdivrs
hlt
scas
dec
cld
and
dec
imul
call
rep
sbb
je
mov
fdivp
subl
outsb
cmpb
jbe
cmp
shr
inc
or
fs
repz
fisttpl
sarl
or
test
jmp
xchg
stos
xor
push
stc
rcl
adc
repz
or
lret
clc
outsb
mov
adc
xchg
pop
xchg
jecxz
sub
push
int3
inc
bound
jne
test
jno
test
ret
xchg
mov
shlb
jl
icebp
mov
or
inc
sub
push
pop
out
dec
mov
test
and
mov
lret
cwtl
leave
lods
inc
into
leave
lea
and
xchg
cmpsb
test
pushw
mov
xor
pop
and
push
jnp
xlat
dec
xchg
ja
test
xor
xor
pop
push
and
sub
or
divb
ffreep
dec
mov
mov
xchg
inc
insl
sbb
sub
fsubr
mov
and
das
and
add
jp
rclb
xchg
pop
mov
stos
ss
mov
push
faddl
int3
test
test
shlb
sub
push
xchg
and
mov
imul
aas
jmp
or
xor
std
sbb
mov
cmc
fbld
mov
int
negb
imull
std
popl
mov
xchg
div
mov
jle
dec
adc
fwait
pop
fs
jmp
inc
and
bound
mov
lret
mov
and
notb
stos
cmpb
cld
fstpl
ds
and
push
lcall
dec
push
orl
jg
scas
ret
cltd
sub
movsb
mov
mov
mov
iret
sbb
cmp
fisttps
test
xlat
scas
and
jge
sbb
lret
out
sbb
cli
xchg
pop
test
imul
dec
or
dec
jg
mov
je
fldenv
adc
outsl
push
daa
int3
mov
cmp
js
xchg
out
pop
fdiv
mov
or
dec
jmp
adc
cmpsb
dec
insb
clc
and
or
xchg
lock
pshufw
sbb
or
xor
clc
imul
pop
scas
add
test
scas
add
push
mov
add
or
enter
int
sbb
repnz
into
mov
fsubr
pop
sub
outsb
mov
sbb
jmp
ss
cmp
fs
lret
xchg
pop
jb
lret
test
stos
fiadds
mov
rcrb
jecxz
dec
sub
pop
popf
loopne
xchg
sbb
imul
fdivr
sub
and
jg
add
fcmovnu
popa
xchg
mov
sbb
popa
jb
lret
sahf
cmpsl
stos
loopne
dec
pop
js
xor
xchg
pop
adc
loope
inc
mov
pop
test
fs
jl
dec
pop
es
shl
or
in
aam
cmp
push
mov
lcall
insl
dec
mov
mov
cmpsl
ljmp
dec
push
fs
or
sbb
jl
mov
sbb
xchg
push
fidivrs
popl
les
addr16
push
push
addb
mov
testl
test
add
stos
lret
aam
xor
push
flds
sbb
adc
popf
gs
adc
and
jmp
jle
ljmp
cmp
or
cmp
adc
pop
dec
xorl
cmp
sbb
dec
xor
mov
fldcw
ds
mov
mov
push
and
inc
rsm
inc
sub
test
flds
rcl
loopne
cmpsl
das
roll
cmp
mov
inc
dec
js
subl
adc
dec
mov
cmp
divb
rolb
stos
pop
sub
add
popl
imull
push
aam
jae
sub
push
hlt
js
adc
cwtl
repnz
movsb
xor
inc
call
ja
cmpsb
sysret
mov
jns
push
xor
xchg
rcrl
pushf
lret
xor
add
xchg
cmp
mov
lret
adc
iret
xchg
sbb
mov
pop
cmp
xor
push
outsb
jle
test
test
jbe
jno
sub
ds
push
dec
xor
mov
out
jae
and
push
mov
iret
movsb
pop
sub
dec
pop
test
cld
push
cmp
loope
stc
inc
add
dec
stos
out
cmpb
bound
and
fstl
jle
mov
test
lds
rolb
sbb
lret
and
aam
lods
mov
testb
int3
add
cmp
imul
push
cmp
sub
or
es
js
out
das
mov
icebp
outsb
pop
imul
adc
rcr
fcompl
outsl
enter
aaa
sbb
arpl
test
lds
bound
mov
pushaw
lahf
xor
sbb
push
push
and
or
nop
mov
jno
mov
cli
push
aas
clc
movsb
sbb
loope
cmp
pop
pop
vunpcklps
inc
adc
aas
imul
clc
mov
aad
sbb
out
cmp
ds
fistl
lods
mov
js
test
bound
mov
mov
lret
lds
fsubrl
sbb
or
lcall
inc
sbb
dec
gs
stos
add
mov
js
jle
inc
push
dec
mov
nop
xchg
xchg
mov
xchg
mov
into
scas
mov
ret
add
lret
mov
sbb
insl
sahf
dec
sbb
loope
dec
pop
add
pop
imul
int
mov
sbb
mov
add
xchg
adc
cmpsb
and
in
push
js
out
sarl
mov
jecxz
clc
call
sahf
out
lea
mov
popa
js
or
fiaddl
dec
test
test
lret
cltd
test
sbb
or
lock
mul
mov
push
and
sub
test
movsb
sbb
test
cmp
xchg
or
stos
dec
and
jo
hlt
jnp
dec
pop
push
std
in
mov
stc
mov
push
call
hlt
loopne
mov
inc
ja
add
dec
std
das
cmpsl
mov
imul
lret
mov
cmp
popa
in
add
loop
roll
push
sbb
sub
mov
jo
cmp
push
adc
nopl
sahf
sub
dec
sbb
aas
mov
mov
jp
lret
nop
pop
aas
rcll
out
std
nop
in
out
mov
andl
leave
jp
mov
xor
call
xchg
lret
xchg
aas
lea
mov
push
cld
bnd
int3
je
lcall
shlb
jae
ret
inc
xor
fmull
lcall
jne
stos
cmp
jmp
and
data16
jne
mov
cli
xchg
mov
push
icebp
sub
cmpsl
call
jnp
je
sti
call
jo
fwait
lods
out
cmp
scas
fimuls
lods
loope
hlt
add
or
and
lahf
or
mov
repnz
push
pop
cmp
ja
fld
xor
js
and
aas
pop
dec
hlt
daa
jl
cld
xchg
push
dec
std
add
dec
pop
xchg
fwait
jp
and
jbe
les
lret
mov
invd
inc
xor
js
inc
mov
fldcw
ret
js,pt
mov
xchg
call
popf
enter
loop
test
add
mov
add
mov
clc
repz
movl
ret
mov
movsl
inc
inc
cwtl
push
and
ljmp
ljmp
inc
lock
or
dec
mov
xchg
ljmp
inc
xchg
inc
aas
cli
sub
and
es
push
lcall
in
outsl
push
mov
push
and
xor
in
add
lds
add
dec
xlat
int3
cmp
pop
inc
xchg
pushf
mov
fcomps
lahf
lret
sar
xchg
movsb
or
mov
shll
out
lret
out
test
scas
mov
popf
push
add
xor
idiv
jp
add
ds
lret
cmc
pushf
jg
xor
jbe
xlat
xlat
repnz
lds
loop
addr16
cmp
xchg
rol
sub
or
sbb
xchg
cmp
mov
nop
pop
sbb
push
push
cmp
out
adc
inc
mov
leave
out
mov
mov
scas
ret
arpl
and
jns
mov
andb
mov
pop
push
cmp
mov
lret
hlt
push
jbe
imul
out
fadds
jmp
push
ljmp
inc
addr16
and
xor
daa
sbb
mov
movsl
es
add
divl
leave
movsl
cmpsb
cmp
rorb
bswap
cmp
mov
out
mov
mov
frstor
stos
testl
mov
jecxz
cmpsb
out
xchg
push
jp
divb
icebp
or
stos
jne
mov
shlb
imul
jmp
mov
jne
lods
lds
clc
sub
js
filds
dec
dec
dec
lret
les
lcall
sub
aas
test
jg
xchg
in
inc
adc
mov
cmp
dec
adc
xlat
jl
aas
enter
inc
mov
push
sbb
and
lock
movsl
xchg
pop
popf
loope
outsl
rdpmc
mov
scas
lret
inc
adc
cs
insl
mov
jae
jnp
js
addr16
push
push
fcos
fnstsw
aam
jge
add
fdivr
add
mov
and
testb
inc
add
fs
cmp
mov
cmp
cmp
flds
movsb
int3
and
sbb
inc
mov
and
and
cltd
adc
ret
fucomp
imul
bound
or
mov
add
int
pop
js
cmp
stos
ja
jnp
push
daa
inc
sahf
mov
or
and
xor
scas
cmp
lods
sub
leave
lcall
xchg
fdivrs
lret
mov
pop
lret
push
sahf
xchg
je
jge
xor
test
pop
push
pop
cmp
sbb
dec
push
loop
hlt
adc
and
iret
or
fisttps
sbbb
cmp
fcomps
clc
lods
fisttpll
sub
cmp
test
add
push
dec
push
fldenv
or
aas
xor
mov
icebp
xorb
or
imul
loop
push
pop
js
in
and
mov
test
in
jbe
sub
mov
jae
js
test
adc
adc
pop
pop
or
pushf
xchg
xchg
pop
push
mov
fists
mov
les
and
shrl
adc
fdiv
lret
cld
cmc
add
and
int
jge
jnp
clc
mov
arpl
cmpsl
js
inc
add
jno
jp
or
int
bound
lock
int
pop
popf
jecxz
pop
stc
mov
orb
lret
mov
ror
ja
repz
sub
mov
out
xor
sbb
das
sbb
scas
shlb
scas
mov
xchg
sub
testb
pop
sub
jno
xchg
pop
and
int3
shrb
xor
sub
adc
stos
jns
pop
into
adc
cmp
mov
cmp
xor
arpl
out
test
imul
mov
pop
clc
mov
jns
test
cwtl
mov
movhps
out
movsb
cmp
movb
pop
arpl
jg
popf
pop
mov
test
xor
aam
xor
popa
inc
inc
out
jmp
or
movl
stc
push
adc
xor
addb
mov
popa
push
js
push
sub
pushf
sbb
dec
repz
lods
push
sub
testb
lcall
lods
push
add
pop
add
sbb
mov
cltd
ss
gs
imul
add
ret
imul
mov
rcrb
data16
dec
xchg
push
pop
xor
mov
mov
jne
sbb
mov
jns
imul
push
rcr
dec
int
lret
test
mov
and
sub
jae
mov
movsl
add
dec
les
adc
dec
sarb
dec
fldcw
push
test
xchg
into
mov
aam
lret
movsb
pop
popa
mov
push
mov
sub
xorl
in
fs
and
ds
adc
adc
fsubrs
out
call
test
je
add
lea
cmp
mov
sbb
icebp
stos
std
add
cmp
xchg
xlat
or
or
mov
ljmp
shl
push
fwait
lret
lret
mov
stos
rorb
bnd
in
sbb
out
xor
divl
dec
dec
insb
stc
push
cmpsl
xchg
into
push
mov
movsl
pop
cmp
aad
das
test
pusha
out
clc
jmp
hlt
lock
test
inc
pushf
or
das
cwtl
or
pop
test
inc
mov
cmp
sub
out
jae
filds
dec
out
mov
cmpsb
mov
addr16
add
adc
sub
test
rorl
push
push
fs
pop
hlt
mov
test
test
jp
dec
icebp
xor
add
inc
mov
cmp
inc
sub
mov
fsub
mov
lret
shlb
mov
movsb
pop
and
lods
pop
mov
roll
test
push
daa
mov
in
inc
sub
xor
sbb
inc
outsb
adc
insl
and
fstpt
lock
clc
repz
jbe
sub
push
mov
scas
dec
leave
xor
loopne
loopne
xlat
lret
sbb
pop
push
pop
push
addb
test
adc
dec
cmp
sub
imul
sub
pop
sbb
pop
dec
daa
js
sub
mov
aaa
cli
stc
add
lret
fstpl
adc
fsubl
pop
imul
adc
inc
mov
pop
ljmp
pop
ds
cmp
dec
rcrb
xor
xchg
mov
and
icebp
dec
inc
fnstsw
fdiv
in
or
push
dec
outsb
in
cmp
lock
xlat
adc
imul
xchg
fdivr
rorl
sbb
jl
ret
xor
jno
mov
out
hlt
lods
cmp
dec
jge
jo
cld
mov
int3
add
cmc
jp
es
mov
dec
inc
sub
ljmp
push
sub
bound
stos
dec
cmc
lea
xor
xchg
mov
sahf
push
mov
xchg
add
dec
arpl
cwtl
dec
mov
sub
push
or
subl
lahf
fnsave
jle
jmp
and
fldt
js
jne
jge
push
mov
jns
lock
test
mov
lret
nop
mul
mov
icebp
adc
jno
xor
mov
pushf
scas
add
add
in
fs
and
clc
and
or
lret
lret
test
notl
jmp
mov
sbb
dec
int
aaa
xlat
jle
mov
sub
jecxz
mov
mov
not
test
lgs
enter
push
mov
enter
outsb
ucomiss
pop
ret
pop
push
push
shrb
adc
push
leave
ds
jo
push
push
pop
cld
rcrl
xchg
dec
xor
sbb
fwait
pop
out
cmp
push
sub
inc
mov
cltd
shrb
add
pop
nop
leave
jg
lcall
cmpsl
push
push
jnp
nop
cmp
repz
cmpl
js
mov
mov
stc
imul
js
in
dec
sbb
out
sarb
enter
inc
inc
pop
lea
pop
and
sbb
shl
sbb
mov
std
inc
and
mov
dec
mov
roll
cmp
push
mov
jl
pop
xchg
movb
pop
dec
sbbb
mov
cmpsb
femms
xchg
push
push
aas
clc
xlat
cmpsl
mov
push
mov
xor
and
ret
clc
cmp
push
jbe
cs
xor
xor
aam
mov
js
add
hlt
orb
lahf
inc
je
mov
call
jo
inc
mov
roll
cmp
andnps
jbe
mov
sahf
int
sbb
ljmp
lock
sbb
push
and
xchg
mov
jbe
lret
imull
push
or
push
and
adc
xchg
dec
push
jecxz
push
push
jg
mov
mov
jnp
data16
in
inc
sub
sbb
sbb
jbe
inc
push
stos
dec
inc
repnz
int3
stc
pop
ret
js
xlat
push
pop
addr16
push
ja
loop
sarl
addr16
add
push
jle
add
lret
std
jno
sub
mov
mov
push
push
adc
ficoml
and
add
fnstenv
cld
es
popf
scas
mov
daa
pusha
filds
push
dec
inc
nop
testb
out
dec
sar
inc
imul
cwtl
sub
clc
fildl
test
cmpb
jmp
and
mov
pop
les
adc
inc
and
hlt
call
mov
and
icebp
mov
dec
mov
iret
in
jge
jp
ds
cmp
aad
mov
adc
mov
push
enter
push
cmp
add
xor
rcll
outsl
push
je
fnstcw
je
cltd
dec
inc
es
push
pop
enter
pop
mov
js
test
aas
pop
mov
int3
ficompl
or
or
cli
fisttpll
jns
push
pop
fdivrs
sbb
mov
mov
dec
icebp
sbb
mov
ficompl
sar
gs
js
aad
movsb
nop
ret
loope
add
inc
dec
jle
test
dec
loop
cmc
push
lock
xor
lret
sbb
cld
xor
jo
loop
xchg
adc
in
inc
and
cmpsl
lock
pop
adcl
xchg
les
and
pusha
fs
dec
outsl
jg
fwait
adc
cltd
lret
inc
xor
lea
js
and
adc
test
adc
sbb
mov
stos
andl
inc
nop
xchg
dec
cltd
xchg
mov
int
jge
int3
test
adc
imulb
jne
fiaddl
lret
lret
xchg
insb
inc
jae
mov
in
lcall
leave
sbb
jmp
enter
and
mov
pusha
add
aam
cmpl
xor
addr16
sbb
cli
cmp
test
sbb
mov
add
mov
and
push
adc
mov
sub
mov
out
clc
mov
insb
pushf
sub
repnz
fisubl
stc
push
mov
and
mov
jle
out
sub
int3
dec
shll
xchg
decl
std
xor
jp
incb
lret
icebp
xchg
int
cmc
jb
jmp
and
sbb
into
dec
push
mov
xchg
and
add
sub
dec
or
in
add
jecxz
mov
or
jle
xchg
push
and
inc
sbb
bound
lret
or
stos
sahf
repz
sbb
dec
mov
cltd
stos
mov
out
lods
dec
jecxz
mov
div
fs
jne
mov
and
cld
pop
mov
inc
outsb
divb
dec
aas
in
jmp
mov
sbb
lods
stos
mov
int
add
mov
sub
icebp
mov
lret
fadd
mov
mov
sbb
sub
lcall
popa
cmpsl
sbb
mov
jg
mov
shrl
fwait
outsl
scas
xor
sbb
cmp
aad
stos
fdivp
cmp
and
in
push
adc
add
jle
in
aam
loop
clc
jecxz
test
push
std
mov
pop
xchg
repz
cli
and
movsl
add
jb
stc
dec
pop
adc
and
aas
cmp
add
ljmp
lds
add
xor
int3
mov
mov
mov
sar
clc
sub
sbb
xor
mov
or
aaa
cmp
clc
iret
lods
stos
cmp
xor
xor
adc
nop
inc
xchg
fidivl
mov
dec
ret
iret
ljmp
pop
sbb
scas
cmpsl
jmp
mov
jo
and
in
into
int
cmp
push
sub
adc
lret
mov
sti
scas
mov
pop
call
sub
rolb
idivb
out
add
dec
out
push
and
js
lret
repnz
cmp
cmpb
push
scas
push
fmull
sbb
pop
or
dec
shll
ljmp
push
roll
and
mull
scas
rorb
test
sub
int3
test
scas
in
es
mov
jmp
jnp
cwtl
int
mov
push
push
int3
adc
dec
pop
jno
adc
in
nop
cwtl
mov
pop
dec
lret
insl
push
test
clc
aad
xchg
mov
aas
and
push
mov
xor
psubb
out
push
pushf
aam
add
shll
sahf
leave
jne
lret
inc
dec
pop
into
jmp
pusha
divl
cs
xor
and
xor
repz
push
out
push
cmp
sarb
jo
mov
fcmovbe
add
dec
mov
rorl
lcall
into
pop
es
pushf
sbb
int
cmovbe
fwait
dec
clc
adc
loop
add
rolb
mov
lret
imul
cwtl
aad
bound
lods
pop
js
add
stc
xchg
lds
test
or
jae
ss
xor
add
popf
mov
or
cmp
out
rcrb
stos
test
cmp
dec
jnp
stos
jecxz
or
outsb
ja
repz
adc
inc
lods
sbb
call
mov
lock
xor
dec
dec
outsb
dec
mov
cmpsl
sahf
xchg
mov
sahf
cmp
iret
hlt
aam
push
xorl
and
daa
xchg
mov
pop
mov
xchg
cli
or
add
xchg
lret
pushf
icebp
lds
repnz
and
scas
ja
add
cmpl
test
nop
jp
lret
ret
jmp
cmp
orb
mov
orl
lret
std
inc
mov
flds
cmpsb
sarb
sub
inc
lret
lret
add
loopne
ds
sbb
lret
sbb
cli
lret
sarb
scas
push
or
ljmp
lea
mov
jne
inc
xor
fwait
sub
rcr
xchg
mov
pop
imul
loop
pusha
orb
scas
fcmovbe
insl
mov
cli
test
icebp
jmp
lret
inc
sahf
push
cmp
dec
jle
sbb
sub
cmp
and
lods
mov
jle
adc
insb
das
mov
js
mov
fdivl
jns
mov
push
and
sub
into
cmp
dec
je
mov
lods
sti
mov
stc
cmc
push
and
pop
sub
xchg
push
jle
or
orl
push
js
xchg
pop
fbld
sub
xor
sub
imul
pop
jnp
das
push
popa
test
aaa
add
add
push
mov
cwtl
jno
push
clc
imul
adc
jae
jo
or
add
aad
ja
mov
xor
jge
ljmp
jge
movsl
push
push
fimull
mov
aad
aaa
ds
jo
adc
lock
nop
nop
inc
es
fcomps
sarb
inc
mov
sub
scas
lret
cli
sub
mov
call
jns
pushf
cmp
mov
cmpsl
outsl
jne
imul
add
mov
int
enter
and
sub
frstor
adc
aaa
loop
xor
es
pushf
dec
sub
in
daa
lcall
inc
push
dec
add
xchg
mov
mov
adc
sub
cli
int3
repnz
dec
jecxz
add
lret
cmc
jle
shlb
mov
dec
insl
lret
inc
push
fistpl
sbb
add
test
sbb
inc
dec
inc
adc
and
daa
fadds
int3
sub
cmc
mov
xor
push
test
cmpl
mov
jnp
push
mov
jg
repz
lret
add
aam
pop
cmp
dec
lods
das
add
dec
jl
jg
ret
sahf
mov
push
inc
cmp
sbb
sbb
mov
mov
lds
dec
jns
or
and
add
mov
pusha
sbb
xor
orb
divl
sbb
ret
ljmp
cli
stc
push
xchg
dec
push
xchg
into
es
cmp
jae
mov
push
dec
out
int3
sarl
arpl
or
clc
mov
rcrb
bound
push
mov
fiadds
mov
xchg
and
ror
dec
fstpt
adcb
pusha
pop
jl
fcmovnb
ficomps
out
and
js
insl
cs
popf
and
cli
nop
popf
sarb
push
lret
jbe
add
imul
popa
pop
cmp
negb
push
pop
ret
jmp
lret
push
mov
ficompl
je
int3
mov
sbb
or
mov
xchg
or
popf
shll
ficomps
pop
fucomip
lods
mov
add
pop
xchg
xchg
mov
lds
xorb
dec
push
clc
pop
jmp
clc
xor
or
sarb
sbb
sub
sbb
lret
std
cmp
cltd
pop
addr16
pop
stc
pop
mov
mov
inc
imul
pusha
or
out
fisubl
jge
cltd
pop
ret
loope
push
and
clc
repz
ja
xor
lods
and
jo
lahf
repnz
repz
insl
fucomp
adc
mov
mov
push
push
out
jg
int
pop
out
movsbl
rorb
push
jnp
xchg
bound
in
sub
lea
or
lcall
dec
shr
pusha
and
mov
sub
inc
fsub
js
in
pop
nop
mov
ret
jg
je
pop
and
popa
cmc
adc
jae
mov
xor
andl
imull
xor
adc
jp
stos
mov
loope
jo
mov
ss
xor
mov
push
fwait
sub
xchg
and
dec
popf
and
cmpsl
lret
mov
fdivs
xor
jge
dec
push
mov
adc
dec
stc
dec
mov
jbe
adc
aad
les
jae
lods
pop
loop
shrl
inc
adc
sarl
orl
jns
lock
xor
cmpb
and
push
iret
xor
loope
dec
dec
inc
test
scas
xor
sub
aas
adc
xchg
cltd
popf
sub
fsubl
pop
mov
inc
ss
clc
adc
pop
push
rcrb
add
fisubl
pop
cwtl
int3
adc
sub
jmp
insl
lret
add
adc
int3
add
mov
sub
mov
test
filds
adc
test
insl
clc
xor
mov
loopne
mov
ret
pushf
dec
fdiv
mov
stc
add
sub
xlat
sbb
stos
inc
fisttpll
in
inc
sbb
lock
dec
inc
mov
adc
dec
xchg
add
pop
mov
sbb
das
movsb
push
push
mov
xor
cmp
push
mov
xchg
leave
sbb
push
sahf
rcrl
cmp
test
pop
dec
loop
mov
or
fidivrl
in
insl
lods
sub
and
sbb
cmpsb
adc
aaa
xchg
xchg
xor
dec
stos
add
dec
mov
pop
jo
jecxz
or
movsb
in
jmp
das
clc
pusha
sub
int
mov
lock
sub
insb
out
pushf
add
test
mov
mov
cltd
add
dec
pop
aam
addr16
xchg
inc
lea
mov
mul
or
add
nop
jmp
andl
cmp
ds
cld
and
sub
xchg
loop
inc
dec
loop
push
or
js
sbbl
movl
js
dec
cli
stos
pop
mov
dec
mov
and
testl
or
mov
stos
fadds
inc
scas
out
cmpsl
push
add
mov
and
sbb
shl
pushf
pop
push
xor
jae
mov
testl
cmp
pop
ret
out
adc
lret
leave
add
repz
repnz
and
ljmp
test
pop
das
and
lods
push
adc
popf
jns
clc
hlt
mov
cld
sbb
movsb
dec
dec
stos
aad
sub
mov
inc
and
dec
inc
mov
arpl
mov
ficoml
loope
sti
stos
mov
cmc
inc
sbb
xor
dec
cli
inc
xorb
lcall
push
rorb
adc
cmp
cmp
lods
ret
cmp
test
push
push
mov
or
add
mov
pop
leave
call
mov
aaa
mov
cld
nop
xor
or
aas
push
mov
aaa
pushf
xchg
jns
push
inc
pop
or
scas
mov
and
add
enter
jns
adc
pop
aam
cwtl
push
test
pop
dec
pop
push
cld
jbe
movsl
mov
movl
and
nop
add
mov
rorl
jns
mov
cmp
mov
out
pop
xchg
inc
dec
cmc
push
loope,pn
inc
mov
inc
mov
aas
sbb
arpl
adc
cmp
inc
fldl
lret
neg
sti
mov
addr16
push
mov
out
xor
imul
daa
dec
int3
lret
loop
jne
sbb
js
inc
movl
sysret
push
and
ljmp
inc
int3
add
lret
cmp
mov
test
int
cmpsb
pop
jmp
lock
mov
mov
jp
popa
cwtl
pop
dec
clc
add
push
lods
or
mov
adcl
gs
mov
jle
test
jbe
and
pop
cmp
test
sbb
call
test
or
dec
ja
xchg
sbb
xchg
aaa
jb
pop
push
fdivrs
shl
outsl
js
stos
aad
or
leave
add
push
idivb
daa
add
push
sub
int
xchg
dec
cmc
test
mov
das
dec
dec
call
dec
mov
jns
dec
add
ljmp
dec
repz
ret
dec
in
push
or
pop
lret
movsl
shlb
lds
inc
or
inc
jne
push
cwtl
sbb
mov
ret
ror
add
lret
xchg
int
add
jg
and
lret
shrb
add
stos
sub
cmpsb
les
and
ret
mov
aam
adc
push
scas
dec
jp,pt
rol
jns
mov
mov
or
enter
loop
and
test
int
mov
mov
or
push
mov
movl
lods
test
test
dec
jle
loop
nop
cmpsb
xor
cmp
stc
jno
dec
lea
cld
mov
sub
xchg
sub
pop
push
loop
dec
push
test
test
popf
nop
mov
xchg
cld
add
rcrb
push
shll
adc
or
jmp
rcrb
jmp
lds
loope
pop
fdivrs
cmp
js
pop
xor
aas
mov
dec
lods
inc
clc
add
adc
xor
or
loopne
and
decb
mov
xchg
cmpl
data16
mov
cltd
insl
lret
jmp
mov
cmpl
das
ljmp
push
pop
ljmp
orl
dec
lret
mov
jl
xor
jp
ja
incb
jg
mulb
pop
fbld
sub
leave
dec
and
or
xchg
fsub
pop
iret
push
and
lea
iret
xor
pop
stc
dec
sti
add
pop
adc
cmp
push
aam
sub
add
lds
adc
pop
ljmp
dec
movl
sub
js
sbb
daa
mov
sbb
and
sbb
stc
mov
inc
pop
adc
outsb
movsb
add
dec
xchg
mov
aad
cmp
or
add
mov
mov
cmp
xor
lcall
arpl
add
ret
loopne
lds
adc
mov
jl
lret
lret
pop
xor
mov
push
movsl
pop
jo
push
adc
add
lea
mov
rcrb
inc
sbb
fldl
shrb
int3
add
and
aaa
mov
add
add
mov
adc
lret
xchg
test
cmp
dec
rcll
cs
dec
mov
mov
ds
mov
stos
dec
xor
push
and
leave
pop
xchg
sahf
mov
fsubs
mov
std
dec
pusha
dec
js
mov
mov
mov
fisttpl
pop
loop
je
hlt
pop
mov
aad
inc
pop
insl
pop
js
jns,pt
dec
rcrb
pop
jne
fcmovnu
jmp
mov
jmp
loop
test
mov
daa
in
dec
mov
test
xchg
pusha
outsl
pop
daa
icebp
mov
out
mov
inc
or
push
push
rclb
push
popf
jb
sbb
mov
movsl
repnz
sbb
adc
ficoms
pop
mov
cmc
cmp
push
push
sub
aad
mov
scas
test
rcl
fidivl
pusha
push
lahf
call
push
loope
das
dec
ss
arpl
gs
adc
aaa
jns
lock
in
mov
jbe
notl
sub
pop
sbb
and
cltd
lds
inc
pop
mov
inc
mov
std
push
cli
pop
dec
lret
push
mov
xor
and
sub
iret
roll
in
es
testl
shrl
inc
inc
inc
mov
push
insl
dec
loop
cmp
out
cmp
xchg
stos
mov
lret
sti
sub
push
hlt
xchg
sub
adc
adcl
push
cmp
dec
xchg
and
jns
stc
aad
mov
jo
jnp
push
jmp
lock
or
and
and
je
out
mov
or
mov
jno
fstpt
movsb
popf
push
push
int
and
xchg
and
jle
sbb
fildl
mov
jne
in
jnp
ljmp
hlt
sarl
mov
inc
sbb
enter
mov
icebp
or
ds
lret
xchg
xchg
aas
and
jecxz
les
mov
mov
jecxz
lods
mov
mov
cmp
push
adc
push
dec
adc
fcomps
push
out
sub
jmp
es
adc
gs
adc
das
fiaddl
or
push
loopne
or
dec
xchg
mov
sbb
push
loop
mov
xor
mov
mov
cmp
imul
jns
scas
xchg
sub
loop
mov
cmc
bound
jne
sti
add
fdivs
adc
enter
mov
jb
push
cmc
mov
inc
jb
fucomp
idivl
bound
push
inc
xchg
and
cmpsl
aaa
stc
mov
inc
out
js
pop
pop
movsb
ljmp
or
hlt
push
adcb
fbld
insb
cwtl
push
cmp
fsin
sarb
xchg
mov
pop
dec
cmpsb
fcomps
lret
aam
cmpsl
jmp
repz
or
inc
test
lret
mov
mov
cmp
push
inc
ljmp
adc
insl
adc
test
or
add
js
int3
jbe
inc
addr16
mov
jg
sti
inc
cmp
mov
mov
popf
xchg
jb
jp
mov
sub
push
hlt
hlt
xchg
inc
fldcw
cli
xchg
movsl
and
loop
xchg
mov
jecxz
mov
fimuls
js
fdivs
pop
mov
mov
orl
fcmovb
test
repnz
mov
sub
push
inc
add
push
xchg
lahf
mov
mov
testl
arpl
mov
lret
aad
dec
push
dec
fsubrl
enter
pop
shrb
lret
int
pop
dec
inc
iret
mov
sarl
loopne
sti
popl
lret
xchg
push
fdivl
loopne
and
addr16
jp
jno
cltd
int3
ds
aad
lret
jmp
cmp
ss
popf
mov
fldcw
nop
jmp
repnz
fmulp
sub
test
pop
addr16
movsl
xor
sbb
repnz
outsl
pop
mov
inc
leave
lret
int3
cltd
inc
and
and
xor
nop
incb
clc
mov
add
lret
sbb
mov
data16
popf
cmc
sbb
pushf
cmp
mov
nop
sub
es
aaa
lret
outsb
iret
scas
mov
lods
nopl
xchg
sbb
add
lock
iret
mov
mov
dec
lret
fsubrs
out
xor
jl
pop
adc
add
dec
mov
cmp
mov
jp
lds
push
das
inc
jb
mov
mov
jo
sub
cli
clc
js
mov
pop
pushf
jle
clc
inc
hlt
repnz
idivl
xchg
test
sbb
ljmp
pop
js
loop
sub
xor
insl
xchg
sub
jmp
in
xchg
scas
adc
add
and
and
sti
insl
dec
cli
or
aaa
clc
insb
add
inc
add
dec
int
jmp
out
inc
fldl
and
aad
xchg
adc
lret
mov
cmp
xchg
jl
mov
push
adc
pop
js
out
arpl
insl
xchg
jns
lret
mov
xor
mov
movsb
sbbb
add
push
mov
and
xchg
mov
nop
es
test
data16
add
test
ret
stos
test
xor
test
cli
pop
dec
nop
imul
pushf
imul
or
fimuls
cs
sbb
dec
xor
pusha
flds
loop
and
hlt
jecxz
stos
cmpl
jle
stos
outsb
pushf
or
insl
push
bound
and
mov
ja
stos
out
xor
sti
rcll
push
addr16
gs
push
push
mov
pop
clc
out
movsb
aam
pop
or
push
orl
cmp
cmp
cwtl
int3
stos
clc
push
inc
clc
rolb
sub
adc
mov
jns
test
stos
mov
loopne
bound
insl
cmp
jle
lods
dec
xor
daa
test
cmp
push
jecxz
mov
enter
mov
jecxz
clc
pop
ljmp
xchg
std
imul
adc
cli
call
mov
jge
mov
mov
cmp
data16
test
push
shll
jns
ljmp
push
mov
mov
mov
int
lds
cmp
push
inc
mov
xor
lock
sbb
into
mov
test
mov
pushf
ret
add
outsb
ss
sub
loop,pn
mov
jp
in
mov
imul
mov
stos
enter
fdivrs
test
insb
rcr
jne
mov
call
mov
pop
sbb
xchg
add
movsb
aaa
xor
push
mov
xor
xor
dec
cmpsl
addr16
inc
ljmp
sbb
lcall
push
sarl
add
dec
inc
xorb
imulb
dec
and
repz
mov
notl
rorb
mov
sti
movsb
fs
mov
fbstp
jbe
testb
push
adc
fdivrs
imul
mov
push
js
mov
daa
test
subb
mov
push
fistpl
push
cmc
jb
flds
adc
and
roll
or
jb
aam
ja
mov
loopne
jbe
dec
xlat
push
add
and
in
or
and
loopne
adc
clc
sub
scas
or
lock
loope
mov
insl
mov
xchg
mov
pushaw
mulb
call
lret
popa
ja
insl
sbb
scas
movsb
dec
clc
xor
fisttpll
mov
int3
cltd
out
dec
xlat
push
push
inc
in
xchg
dec
sub
repnz
imul
push
out
jmp
insb
loop
and
int
push
punpckhwd
nopl
xlat
and
pop
xchg
bound
insb
test
add
stos
clc
pop
into
lods
std
cwtl
xchg
jecxz
add
aas
adc
lret
stc
fnstcw
adc
push
jp
pop
arpl
add
fiaddl
test
cmpsl
jb
adc
ja
mov
icebp
jbe
xor
pop
inc
inc
mulb
xor
adc
lret
pushf
push
xchg
xchg
pushf
sub
dec
and
xchg
or
out
push
call
insb
dec
sub
lret
mov
jle
inc
out
mov
pusha
out
mov
jnp
adcb
int3
mov
jne
test
add
dec
in
clc
adc
test
imul
scas
inc
decb
pop
add
out
jecxz
dec
ja
ja
mov
xchg
pop
loop
out
shll
xchg
scas
lods
lods
dec
xchg
sbb
fimull
test
jns
outsl
mov
aad
sbb
je
stos
shrb
jmp
jbe
nop
or
xchg
test
mov
jl
add
jmp
lret
lods
jmp
or
add
lret
nop
sub
adc
mov
std
and
fwait
xor
adc
fs
lcall
jo
mov
in
stos
and
arpl
sbb
or
addl
sbb
and
and
stos
add
nop
in
xchg
adc
hlt
fs
adc
loopne
aam
cltd
mov
add
or
je
repnz
idivb
sub
nop
mov
sbb
mov
mov
add
inc
lcall
and
dec
mov
pop
iret
mov
data16
and
je
loope
xchg
inc
pop
and
add
mov
xchg
pushf
loope
xchg
add
jg
and
ret
js
xlat
jge
sti
fisttpll
or
xor
shll
inc
in
mov
sub
adc
and
inc
pop
mov
jp
jns
loopne
adc
mov
xor
add
aad
push
cmpsb
incb
cmc
stos
add
lret
repz
cmp
aad
mov
test
movsb
mov
bswap
daa
mov
mov
insl
outsl
lret
out
idivl
es
add
dec
and
and
stos
xor
icebp
es
je
push
test
mov
pop
lret
int
dec
adc
popf
jno
xlat
pop
and
pushf
ret
insl
js
das
divb
sahf
mov
hlt
jbe
dec
test
imul
imul
cmp
add
imul
je
imul
in
shr
scas
lods
ja
cmp
sbb
in
imul
loop
sbb
mov
ljmp
stos
mov
jnp
xor
je
movsl
es
test
mov
mov
imul
arpl
out
ret
cmp
out
clc
jns
adc
cmp
imul
test
sbb
pusha
dec
out
mov
cwtl
sub
cmpsl
lahf
add
cmp
je
clc
imul
dec
testl
leave
imul
and
lcall
add
mov
pusha
mov
inc
and
sub
lret
inc
pusha
shrb
inc
push
jle
or
xchg
push
push
dec
js
js
inc
orl
sub
adc
push
lahf
lock
neg
jl
sbb
cmp
jecxz
or
in
lods
jno
mov
jo
mov
mov
add
lods
arpl
pop
jl
mov
dec
lds
popf
add
sub
sub
ret
std
pop
and
push
mov
sub
lret
lea
call
push
fdiv
stos
stos
test
cmp
fadd
mov
dec
or
stc
or
jg
mov
mov
sub
aaa
into
add
lret
std
push
fsubrl
pop
mov
pop
xchg
enter
ds
lret
jmp
je
or
lret
xchg
push
cli
lods
call
fisubs
js
sbb
scas
xchg
pop
popa
aam
lcall
dec
mov
sub
inc
imul
nop
mov
jno
fmull
arpl
push
in
lds
dec
in
ljmp
or
scas
and
sbbb
sahf
aas
push
cmp
mov
push
mov
lret
cmc
lock
adc
mov
aas
or
scas
push
and
mov
adc
stos
mov
enter
std
add
xchg
lock
movsl
shll
cmpsl
pop
mov
test
jl
es
sbb
mov
in
cmp
sbb
push
xor
ds
std
je
repnz
testl
ljmp
imul
test
mov
scas
xor
negl
fmul
sti
jmp
mov
outsb
push
dec
mov
fmul
push
jae
pop
mov
xchg
inc
pop
lcall
pop
lock
jo
rcr
pavgw
push
mov
xchg
jmp
lret
enter
imul
cwtl
jne
stc
inc
js
add
lods
in
or
push
pop
xchg
xchg
push
add
ja
pop
and
daa
xor
mov
cmp
shll
test
js
fldl2e
and
add
bswap
inc
sub
inc
clc
mov
lret
popf
movsb
jns
sbb
push
fnstenv
dec
push
push
xlat
xchg
mov
data16
cmc
adc
ds
test
dec
xchg
push
stos
lret
cmpsl
lahf
out
mov
mov
jp
jmp
clc
inc
fsubs
sub
pop
adc
pop
iret
cmp
mov
mul
push
xor
enter
jno
push
test
push
jnp
js
and
or
or
lock
cmp
stos
rcll
mov
add
ss
dec
push
mov
cli
rcl
in
sti
mov
jl
xor
xchg
ficompl
mov
pop
js
inc
insl
mov
sub
cs
adc
xchg
mov
push
popf
pusha
pusha
fstl
cmp
jns
clc
clc
lcall
test
test
and
addr16
out
pop
insb
mov
mov
hlt
dec
js
and
subl
lret
dec
xlat
jmp
cmc
test
push
adc
or
xchg
push
clc
imul
mov
fs
xchg
movsb
repnz
movsl
bound
shll
les
jo
fisubl
and
lret
out
ror
mov
cmp
test
or
je
test
movaps
lock
popf
test
mov
lea
pop
lret
xchg
fdivrs
add
insl
and
out
xchg
adc
popa
js
dec
inc
push
mov
sbb
push
insl
stos
lds
adc
decb
xor
mov
and
dec
push
inc
and
mov
das
stc
cmc
lret
addl
loop
js
add
xchg
xchg
push
xchg
out
in
ss
aaa
into
inc
fwait
popf
pop
inc
js
aad
mov
mov
psubd
add
lret
movsl
dec
arpl
mov
dec
hlt
jmp
mov
ret
jg
loope
xchg
add
popa
add
jge
test
daa
and
mov
pop
sub
testl
dec
pop
ds
mov
add
adc
or
clc
lcall
sub
mov
add
cs
xor
xor
cld
push
andl
mov
add
in
adc
xchg
lea
xchg
lock
pop
mov
sub
add
test
ss
testl
push
lahf
dec
and
stos
or
sbb
xor
das
jns
cmc
stos
cmp
pop
xor
fldl
add
add
pop
daa
add
xchg
and
jecxz
mov
cmpsl
add
add
xchg
stos
enter
in
sarb
pop
mov
aas
out
iret
andb
xchg
lcall
imul
test
mov
pop
or
lret
cwtl
movsb
push
dec
imul
ret
mov
inc
pop
or
pop
mov
ja
mov
adc
sub
adc
dec
jg
outsl
mov
jnp
dec
das
mov
sbb
xchg
push
sub
ret
jl
and
inc
inc
dec
cs
loopne
adc
icebp
push
sarb
push
push
adc
test
push
lret
mov
xchg
xchg
sti
xchg
mov
lock
negb
ljmp
mov
mov
mov
int3
or
jns
mov
mov
sub
push
js
jnp
into
jmp
insl
or
add
lock
ss
cmc
inc
inc
fwait
mov
aad
sub
imul
orl
jge
icebp
or
mov
repnz
or
sbb
je
lcall
inc
andl
shll
mov
loope
mov
jae
fistps
mov
dec
imul
sbb
loope
jbe
mov
and
pop
inc
sub
inc
aam
mov
add
std
pop
lahf
repnz
sbb
sub
xchg
insb
movsl
xlat
cmp
mov
loope
jle
dec
ficoms
fstl
ja
mov
jp
xor
mov
ja
inc
xlat
negl
je
test
xor
mov
mov
pop
in
sarl
and
js
mov
ficompl
cmpsl
testb
pop
ljmp
dec
mov
jne
nop
mov
test
or
mov
mov
cmpsb
shrl
addb
lock
adc
mov
popa
mov
cmp
jge
jle
lock
fbld
data16
add
dec
pop
jns
inc
out
sub
lahf
hlt
lret
add
jno
mov
xchg
push
xchg
lcall
outsb
jmp
mov
sbb
nop
push
pop
lret
xchg
jne
inc
mov
aaa
std
std
or
push
and
mov
sbb
lret
mov
inc
es
in
and
adc
inc
fwait
cmp
or
test
cmp
out
add
lret
add
add
es
or
das
shrl
outsl
or
add
out
adc
or
dec
je
sub
push
test
js
mov
pop
xor
movsl
int3
data16
dec
or
clc
gs
das
lret
mov
cltd
dec
cltd
jae
add
rcll
loop
add
shll
loope
fsubl
add
pop
push
sbb
sub
sbb
orl
dec
cmp
shl
cmp
pop
sbb
jo
push
js
xchg
aaa
mov
mov
cltd
ss
cltd
inc
xlat
std
mov
add
lret
je
inc
mov
mov
andl
xorl
in
adc
call
pop
out
inc
cmpl
pop
jb
pop
and
push
mov
int
adc
mov
shlb
ror
cmp
ffree
dec
or
push
fisubrl
push
sbb
and
mov
push
mov
jno
add
add
loop
xlat
test
cmp
dec
inc
gs
mov
fisubrs
mov
cwtl
les
inc
dec
pop
leave
mov
clc
repz
mov
jmp
fldt
mov
shl
out
and
sub
into
mov
mov
test
in
push
fsubl
sub
shrl
sahf
mov
shrb
and
test
mov
adc
clc
into
fistps
outsb
inc
imul
xor
sbb
ss
scas
insb
stos
or
jnp
jmp
pop
dec
int3
or
fidivrs
and
sbb
out
or
lcall
adc
adc
adc
push
nop
aaa
scas
js
ret
xchg
mov
sbb
lret
lret
imul
jp
lret
not
xor
jl,pt
push
sbb
lea
popf
cld
mov
jecxz
and
mov
mov
mov
mov
leave
stos
pop
xor
dec
or
dec
in
jecxz
xor
mov
and
adc
jecxz
and
push
push
scas
int3
or
les
clc
clc
and
in
in
lret
hlt
sarl
sbb
pop
mov
call
push
mov
mov
sti
scas
lds
movsl
push
jo
ljmp
lret
stos
dec
je
jl
ds
imul
cmp
test
push
addr16
out
aam
mov
test
and
jecxz
mov
stc
jns
repnz
and
popf
mov
dec
mov
push
pusha
les
xor
xchg
cmpsl
cmp
clc
out
mov
pop
lock
push
or
ret
xor
icebp
repnz
sbb
popa
sbb
daa
push
inc
cmp
mov
xor
rcrl
add
push
stc
cmp
fidivrl
or
sbb
mov
xor
dec
testb
mov
in
add
dec
mov
adc
jle
adc
mov
cmp
shrb
addr16
inc
dec
lods
add
inc
outsb
daa
adcl
nop
stos
sub
lahf
pop
xchg
icebp
lret
push
jle
push
lcall
imul
out
fistps
jns
std
popa
jbe
mov
repnz
aad
clc
dec
sar
or
pop
jo
and
sub
jg
cli
mov
out
popaw
lds
inc
mov
jno
sahf
loop
lock
add
xchg
js
adc
and
arpl
sbb
jno
std
mov
jne
lahf
in
sbb
out
orb
and
sbb
inc
or
adc
popa
sub
adc
pop
test
cmp
andb
pusha
add
xor
into
std
enter
in
movsb
test
fcoml
mov
test
mov
mov
mov
out
mov
jp
push
lea
aad
sub
mov
clc
fldcw
adc
shll
mov
jmp
dec
adc
fsubrp
rolb
xchg
dec
xor
mov
and
push
fnstsw
cmpsl
ror
xchg
adcb
inc
fsubl
mov
dec
mov
fs
add
loope
jmp
xchg
and
push
js
pop
fs
fidivrs
jl
sti
or
ljmp
mov
int
repnz
pop
add
inc
xor
data16
add
test
inc
and
fsubl
addr16
cli
jp
push
and
xchg
pop
mov
pusha
lods
clc
shrb
sbb
dec
pushf
mov
cld
sti
sub
inc
js
outsb
ret
shlb
leave
mov
sbb
stc
adc
xchg
jl
outsl
sub
cmp
and
enter
arpl
pusha
push
pusha
sub
hlt
mov
in
aas
scas
xorl
outsl
push
push
fstps
xor
dec
das
mov
iret
mov
jmp
stc
mov
mov
stos
adc
mov
adc
jecxz
adcb
arpl
outsb
jb
mov
imul
stos
test
mov
stos
mov
mov
lods
xchg
ret
and
fldenv
js
jge
mul
sti
mov
shrl
mov
fstps
cmpsb
adc
push
mov
inc
data16
mov
int
lods
inc
xor
loop
and
hlt
cmp
aad
int3
push
rorb
lea
popa
or
pop
dec
dec
sub
fwait
pop
cmp
pop
mov
jg
addr16
xor
fwait
xor
ret
and
fcmovb
push
leave
dec
xchg
rcrl
shr
xchg
lea
hlt
lret
lds
lock
pop
cmp
mov
cmpsl
outsl
adc
and
cltd
popf
sahf
xor
jns
mov
xchg
mov
iret
add
scas
pushf
mov
cmp
vpminsw
mov
or
arpl
lock
mov
fadds
lret
sbb
add
sbbl
test
shll
nop
mov
mov
rcrl
and
xchg
fildll
rcrb
jbe
mov
jb
fstl
or
inc
inc
dec
pop
inc
jecxz
jno
cmpl
mov
aas
sbb
mov
pop
inc
into
pop
sbb
mov
mov
das
sub
sahf
dec
cmp
je
stos
jg
pusha
mov
shll
adc
negl
cmp
movsl
sbb
movl
add
dec
mov
xor
std
mov
hlt
out
add
ljmp
sub
xchg
daa
inc
ljmp
cwtl
testb
cmpsl
arpl
fwait
sbb
mov
add
loope
pusha
add
sbb
cmp
outsb
and
out
and
jne
das
cmpb
mov
js
pusha
fadds
or
adc
xchg
test
out
jecxz
push
cld
jo
lods
adc
inc
sarl
xor
and
scas
inc
push
stos
cld
push
adc
or
xchg
test
cli
dec
xor
xor
pop
pop
movsb
jnp
in
inc
lret
inc
add
add
push
add
push
add
iret
or
dec
and
sbb
out
mov
inc
or
push
push
ds
pushf
and
repnz
pop
aaa
fsubrs
cli
rcrl
sarb
mov
dec
daa
and
addb
js
mov
sbb
arpl
stc
lret
jl
inc
int
dec
xlat
cmc
mov
or
add
dec
std
jb
add
xchg
lds
mov
ret
inc
mov
in
lds
mov
push
xchg
jecxz
fldt
adc
test
pop
lret
sahf
inc
iret
shrl
and
loop
and
push
hlt
pusha
push
jnp
mov
cld
ret
fdivp
mov
sub
mov
sahf
lret
mov
lret
inc
sub
or
mov
jg
push
clc
xchg
fists
test
add
dec
das
inc
xchg
dec
ret
je
lea
and
xchg
lret
jge
mov
int
mov
int
stos
lret
mov
std
inc
push
js
stos
push
cwtl
hlt
test
inc
js
ss
xchg
fwait
jg
cmp
add
xchg
jb
shrl
mov
dec
lods
fs
jnp
rcll
rcrb
mov
jg
and
push
loopne
jne
push
push
mov
repnz
pop
mov
in
stc
mov
xchg
mov
daa
orb
pop
cmpsl
mov
adc
mov
jo
fldl
lret
out
ja
dec
sbb
pop
and
mov
sti
mov
cltd
inc
shr
add
lret
dec
rcll
mov
rcll
push
std
xchg
fdivrl
mov
xor
repnz
xor
sti
adc
mov
das
dec
xor
insl
mov
into
push
mov
jle
xchg
pop
adc
lods
add
js
mov
jp
xor
xchg
push
es
jp
or
and
subl
dec
je
sub
push
jg
pop
push
lret
test
je
mov
xor
fs
js
adc
jae
sub
lret
mov
in
clc
ljmp
je
cmp
js
pop
cld
inc
pop
idiv
int
jp
mov
insb
push
cmc
sub
icebp
and
add
into
xchg
mov
loop
jmp
push
sbb
sbb
dec
test
lret
inc
xchg
insl
xchg
pop
into
xchg
jne
dec
imul
outsl
in
cli
cmp
mov
mov
dec
mov
cwtl
jae
ljmp
and
lret
add
imul
int
outsl
outsl
fadd
inc
fwait
lret
shl
int
sbb
stos
xchg
adc
je
ffreep
add
pop
dec
jno
sub
jle
xor
out
jmp
repnz
lock
sbb
inc
jge
mov
jmp
xchg
cmc
pop
mov
jnp
sbb
fdivs
xor
sahf
iret
cmp
std
add
dec
roll
cmp
or
xchg
mov
push
repz
js
inc
ljmp
int
ds
lret
mov
out
pop
stc
mov
jecxz
mov
cmc
dec
popf
pop
xchg
add
pop
mov
mov
cmp
jnp
icebp
outsb
mov
rol
test
mov
aad
push
pop
jne
pop
push
fisubl
mov
push
and
test
mov
loopne
add
xchg
xchg
in
orl
xchg
xor
movsl
pop
sbb
jb
popf
push
cwtl
xchg
clc
push
xchg
js
fwait
repz
and
mov
xor
js
inc
jg
adc
nop
jmp
inc
push
rcrl
lds
pop
sbb
push
scas
test
cmp
mov
fs
xchg
and
stos
ja
fnstsw
loopne
sbb
hlt
aaa
and
mov
jb
jp
mov
adc
cmc
sbbb
enter
jmp
and
in
jl
in
cltd
andb
sub
xchg
mov
loop
and
cmpsb
push
mov
cmpsl
hlt
rorl
and
hlt
shlb
jg
aam
loope
cltd
cmp
add
and
arpl
adc
mov
cmpsl
fidivl
and
aad
inc
dec
cltd
test
mov
cmp
fstpl
popa
cld
call
pop
data16
mov
mov
sbb
test
loope
mov
pop
clc
push
adc
xchg
movsb
mov
outsl
call
add
test
and
stos
lock
xor
test
ds
push
lahf
push
and
sub
stos
ja
movsl
sbb
lcall
push
imul
push
push
ja
jbe
in
sub
jp
repz
cmp
js
inc
sub
sub
mov
dec
ds
mov
clc
movsb
or
int
sub
int
in
xor
or
push
jo
add
add
std
lret
mov
jl
repz
jg
andl
js,pt
cli
or
pop
shrl
incl
pop
or
inc
outsb
inc
sub
ror
mov
mov
xchg
mov
and
dec
add
arpl
js
das
out
pop
scas
mov
adc
int
mov
push
out
xor
orb
cmpsl
mov
mov
lret
xchg
cmp
fimuls
inc
push
jmp
repz
adc
jecxz
test
aam
cmp
clc
shrl
xchg
cmc
out
lods
sarl
enter
leave
ja
pop
push
in
adc
pop
and
adc
test
or
cs
rolb
inc
mov
push
jbe
sahf
jns
and
bound
jae
mov
je
loopne
xchg
test
pop
inc
scas
mov
dec
dec
loop
xlat
xchg
cmpsl
adc
add
mov
stos
and
xchg
mov
lcall
xor
ss
loope
js
stc
lcall
or
push
nop
cmpsl
popa
xor
dec
cs
out
lods
insl
stc
push
ret
js
xchg
aas
dec
enter
clc
dec
fcom
repz
lock
cltd
pop
int3
jbe
popa
cmp
test
mov
popf
push
jge
or
xchg
lock
xlat
xchg
or
mov
decl
sarl
inc
rcr
inc
in
inc
xor
adc
clc
pop
aaa
ror
out
push
xchg
inc
or
out
mov
js
fs
mov
fcomi
add
lds
adc
fisttpl
movsb
jbe
pop
cmpsl
out
push
int
sar
dec
lcall
cs
movsb
mov
lods
mov
ret
mov
mov
or
or
pop
push
testb
sub
mov
shl
jb
xchg
test
sub
decl
mov
add
cmp
leave
lahf
in
and
stos
pop
loope
inc
inc
cmc
pop
scas
shl
jp
cwtl
in
cmp
push
jmp
rcrl
xor
leave
cmp
push
std
jne
aam
movsb
test
xchg
dec
loopne
xchg
inc
sbb
xchg
lcall
pop
jmp
mov
ss
jae
insl
or
adc
mull
dec
and
add
cs
sbb
or
and
jecxz
xchg
repnz
mov
lret
lods
mov
pop
dec
ja
mov
xor
jb
popa
jg
les
push
mov
shll
xor
adc
in
lds
pop
insl
fimull
inc
and
insl
push
dec
mov
xor
sub
orb
xchg
mull
fisubl
mov
insb
in
add
aam
out
data16
adc
or
int
nop
rclb
enter
filds
test
xchg
lret
test
and
test
loope
dec
xor
inc
push
xchg
push
mov
push
mov
data16
es
fs
pop
push
push
insl
lods
cmpb
pop
lahf
dec
inc
sti
stos
addl
xor
xchg
rcll
inc
mov
inc
lret
loop
js
dec
lahf
push
add
cmp
fnstsw
push
dec
outsl
ror
jp
hlt
xor
pushf
sbb
pushf
and
or
test
clc
insb
outsl
and
rorl
add
mov
cmc
lret
pop
test
sub
aaa
jle
sbb
mov
bnd
mov
inc
xor
out
xchg
scas
sti
add
dec
pop
fs
jnp
mov
stos
mov
mov
inc
add
jge
mov
movsl
add
test
mov
out
pop
jmp
xchg
fcoml
sub
aad
ror
in
addr16
push
mov
adcb
jno
xor
mov
dec
jno
es
cmpsb
mov
insb
lods
outsl
test
outsb
subb
push
xor
mov
jle
das
add
jo
lock
ja
pop
inc
lock
dec
mov
and
xchg
xor
mov
rclb
aam
inc
fimuls
dec
clc
jle
mov
push
imul
inc
clc
adc
fmul
inc
fidivl
and
das
pop
fidivs
sub
pop
mov
xchg
push
jge
int
sar
pop
dec
sub
inc
sub
push
enter
nop
or
lcall
imul
xchg
mov
and
andb
out
lods
std
jg
inc
mov
pop
rol
xchg
nop
push
test
or
test
or
pop
clc
jmp
jecxz
mov
push
daa
mov
icebp
insl
and
add
cmpsl
stos
cld
push
stos
les
mov
mov
push
rorb
adc
daa
and
xor
lods
mov
ret
mov
add
lock
sbb
sub
test
cmpsl
out
pop
icebp
fs
mov
dec
les
dec
cmpsb
cmp
jl
and
test
xor
mov
mov
add
lret
ljmp
scas
fsubrl
push
std
lds
gs
clc
testl
hlt
stos
add
lret
cld
sub
imul
imul
jae
pop
clc
jge
lret
sub
test
adc
mov
mov
dec
scas
add
sub
mov
lret
loope
dec
jae
scas
cs
dec
or
imul
adc
sub
les
icebp
test
adc
stos
xor
loope
das
aam
add
add
dec
test
out
aaa
push
cmp
push
aas
or
cmp
jp
pushf
jl
mov
jne
jbe
jnp
fadds
call
xchg
inc
loope
cmp
pop
lcall
lock
es
add
jns
lds
shlb
stos
cld
dec
mov
mov
ret
mov
sbb
inc
add
fs
and
js
test
and
mov
rcll
mov
gs
test
stos
mov
sbb
adc
fs
pop
and
shrl
je
dec
les
int
rorb
mov
sub
fadds
push
sarb
roll
call
xchg
mov
and
pushf
mov
adc
push
ds
push
sub
test
clc
jmp
dec
push
fcoml
and
dec
adc
pop
mov
add
mov
or
xor
cmpl
adc
or
inc
add
jl
movsl
fisttpll
ja
adc
mov
mov
shll
push
sbb
mov
cmpsl
clc
lret
mov
mov
outsb
int3
stc
popa
mov
movsl
or
push
xor
out
sub
imul
mov
frstor
bound
push
enter
out
jnp
js
sbb
xor
arpl
das
addr16
bound
or
and
out
push
add
dec
push
test
and
xchg
clc
mov
lret
ret
imul
in
xor
adcl
mov
scas
and
je
lret
mov
xchg
rorb
jp
ljmp
inc
rorb
jo
jecxz
and
popa
xchg
je
mov
in
mov
das
js
and
sub
dec
sbb
xor
bound
add
sbb
xchg
pop
adc
sub
sahf
push
ljmp
rclb
pop
test
stos
add
xchg
cmc
mov
push
add
inc
mov
jge
sbb
negl
push
xchg
push
xchg
orl
sbbb
imul
lahf
ljmp
inc
call
xor
inc
ds
mov
xor
jp
cwtl
sbb
or
sub
inc
stos
pop
add
out
nop
dec
adc
dec
xchg
aam
inc
mov
pop
into
lret
aad
sbb
cmp
ljmp
test
dec
loope
jae
jb
xor
mov
mov
stos
sbb
mov
out
mov
cmp
dec
js
mov
in
jmp
jb
cmp
test
sbb
andb
push
loope
xor
push
inc
lret
xchg
push
pop
stc
lea
bound
adcl
sbb
inc
lret
test
push
loop
idivb
int3
sti
rcrl
sub
add
xor
jmp
js
repnz
gs
ds
xor
mov
jnp
mov
pushl
scas
mov
leave
mov
sub
mov
mov
pop
mov
ja
ret
pop
lea
decb
leave
lods
dec
mov
or
mov
addr16
sub
int3
jae
inc
clc
fstpt
mov
jbe
xchg
xor
pop
lret
shr
add
lret
jne
ljmp
xchg
scas
test
push
popf
inc
cmp
xlat
dec
movsb
outsl
mov
fmuls
dec
sub
test
pop
xchg
xchg
mov
or
and
mov
mov
pop
push
push
out
jp
xchg
push
xor
insb
pop
push
js
ret
xor
inc
sti
jmp
ss
mov
adc
add
dec
int3
scas
leave
frstor
lods
idivb
das
lods
add
lret
cs
cli
leave
adc
negb
adcb
xchg
push
shll
inc
add
sbb
mov
inc
or
fdivs
add
push
adc
out
test
push
dec
loopne
movsb
lcall
pop
mov
mov
mov
lcall
shl
add
push
out
mov
and
sub
nop
push
popa
subl
push
or
and
in
mov
mov
movsl
cli
jmp
or
test
lcall
sbb
cmp
test
nop
stc
test
mov
pop
xchg
incb
pop
jmp
outsb
sbb
inc
push
movsl
or
jns
jnp
popa
and
jg
mov
xor
jbe
leave
adc
mov
ret
and
sarl
fistl
pushf
xchg
jge
imul
popa
sub
jae
js
loop
xor
xlat
adc
mov
mov
lods
lea
fcmovnbe
pop
clc
in
imul
inc
cmp
mov
pop
roll
and
pop
popf
add
pusha
xor
lcall
jnp
mov
repz
lret
test
or
popa
sbb
add
mov
lds
ljmp
sub
and
icebp
dec
jmp
rcrb
push
cmp
or
mov
out
lahf
inc
shlb
sbb
push
adc
lods
scas
xchg
mov
adc
dec
std
mov
xchg
fmul
rcl
mov
and
jp
and
mov
outsb
push
dec
repnz
mov
sbb
inc
scas
popa
xchg
mov
cli
test
call
movsb
lret
mov
outsl
jae
mov
insb
jmp
push
out
clc
xchg
inc
dec
inc
mov
adc
inc
data16
or
and
xor
shll
stos
jo
cmp
mov
xchg
sub
or
push
cmp
adc
or
sub
pop
in
lds
add
cld
icebp
and
out
lahf
insb
rolb
pop
sbb
inc
xchg
jne
push
dec
imul
cmpl
sbb
in
jmp
ret
push
pop
into
in
push
in
ror
std
adc
xor
out
nop
xorb
icebp
fimuls
push
in
std
lds
stc
dec
cli
mov
jmp
je
xchg
mov
add
cmp
adc
mov
xchg
and
xchg
jne
daa
ds
pop
lock
in
lret
jae
add
in
and
js
xchg
out
std
mov
lcall
and
sbb
xor
push
mov
mov
sbb
pop
push
cltd
in
mov
aas
fidivrl
lret
mov
jp
movsb
outsl
dec
xchg
js
mov
jle
adc
in
jbe
in
xor
mov
mov
cmpsl
shlb
test
push
test
in
mov
std
je
ds
add
push
pop
clc
mov
insb
mov
add
lret
mov
pop
cmp
push
mov
ljmp
pop
shrb
mov
or
outsb
aam
cltd
dec
dec
scas
mov
cmp
jle
repnz
add
insb
pop
testl
sbb
lret
movsb
insb
inc
push
add
ret
add
adc
or
inc
add
dec
dec
fiaddl
ja
sahf
mov
adc
andb
xchg
cli
pop
dec
xlat
inc
mov
add
mov
pop
xchg
push
stc
ja
sysret
xchg
pusha
subl
aas
lret
les
in
adc
out
push
mov
ret
or
cmpsl
mull
push
das
data16
cmc
pushf
adc
pop
js,pt
add
test
in
les
xchg
lods
lea
sbb
fwait
pop
cmpsb
jg
mov
sub
in
jnp
ja
push
test
mov
sub
mul
out
pop
movaps
dec
push
popf
lods
cli
loope
inc
das
addb
and
cmp
jno
sarl
adc
into
sbb
sbbb
addr16
cmp
push
mov
jle
lret
add
bnd
mov
push
xor
cmp
arpl
imul
jp
pop
jecxz
out
adc
and
pop
jns
pop
pop
cmp
push
bound
sbb
inc
or
and
pusha
repz
out
adc
xchg
fcoml
jg
pop
jb
bound
mov
jge
cmpb
sti
inc
sbb
ja
les
ds
mov
mov
add
add
inc
jg
jg
sahf
push
mov
add
shrb
add
sbb
clc
dec
int3
mov
lock
fwait
dec
mov
test
insb
jle,pn
xor
imul
ljmp
jne
sbb
or
aaa
cli
sahf
loopne
fadd
jns
cltd
fildll
stos
push
insl
vmovaps
loop
sbb
jb
xlat
leave
mov
into
or
lret
push
cmp
jle
and
pop
xchg
popa
bound
push
push
clc
mov
mov
or
outsl
loop
stos
stc
push
call
adc
cmpsb
mov
cmp
jl
hlt
hlt
push
push
test
push
dec
adc
cmpsl
adc
jbe
xchg
enter
hlt
or
stc
and
jg
dec
or
cwtl
cli
out
jns
jp
movsl
loopne
sahf
cmpl
out
mov
jnp
mov
jnp
rdmsr
scas
je
dec
add
lret
mov
lret
out
xor
or
fs
dec
cmp
add
clc
xchg
mov
clc
loopne
cld
enter
mov
mov
fimull
mov
and
and
popa
js
lahf
test
or
addb
dec
pop
sarl
push
and
and
pop
cmp
stos
mov
pop
cwtl
fldt
hlt
cpuid
mov
leave
dec
dec
js
dec
dec
movq
jb
add
ljmp
inc
fcoml
xrelease
imul
pop
or
scas
jle
stc
add
sub
pusha
add
cmp
xor
pusha
adc
aad
add
sub
pushf
mov
sahf
je
xor
push
cmpsl
lods
shr
or
and
imul
pop
jg
cmp
jbe
mov
or
mov
sub
insl
inc
clc
xchg
xchg
sub
incb
sub
jl
adc
inc
inc
dec
fimull
push
jmp
and
inc
ljmp
cld
fldenv
cmp
xchg
and
rcl
and
dec
sahf
jp
push
push
cmc
movsb
in
sbb
mov
stos
jno
jo
andl
push
pop
outsl
push
es
cli
fsubr
inc
mov
jae
mov
daa
mov
mov
testl
cmp
clc
xchg
mov
daa
rclb
push
and
pop
cmpsb
lock
jecxz
js
dec
mov
jp
add
inc
imul
addl
mov
and
lock
divl
mov
fldcw
shr
test
xor
add
lock
push
aas
daa
andb
arpl
popf
adc
dec
cmpsb
lea
xor
stc
cmp
and
sbbl
cmp
sbb
and
jbe
cli
test
pop
adcb
imul
sbb
sbbl
ljmp
cmp
adc
lock
and
mov
in
movsl
shll
loop
in
dec
mov
idivb
pop
add
data16
mov
lret
lods
mov
sti
loop
in
mov
pop
rclb
adcb
test
and
int
dec
xor
and
dec
inc
mov
jp
bound
fldt
mov
jge
fwait
xchg
scas
fidivrs
push
fs
imull
jns
scas
mov
jl
pushw
xchg
ljmp
insb
insl
and
mov
pop
shll
jecxz
cld
movsb
pop
xchg
loope
cld
mulb
mov
pop
fisttps
lahf
jp
mov
and
sub
or
outsl
int3
jg
pop
je
xchg
sub
cmp
jne
scas
dec
fnsave
jns
cs
fsubs
rclb
pop
gs
clc
xchg
pop
pop
or
shlb
in
das
cmpsl
adc
and
dec
xor
push
js
fwait
jecxz
cmp
pop
xchg
sub
push
loop
daa
gs
adc
decl
in
mov
imul
push
push
bound
popf
aam
das
or
cmp
in
push
cmp
cmp
test
addr16
mov
jne
lods
sub
inc
inc
lret
xchg
jbe
add
add
in
mov
js
rcrl
dec
adc
test
adc
lret
scas
and
shll
jns
pop
push
stos
dec
mov
inc
fisttpll
insl
fs
and
lcall
mov
dec
movsl
add
dec
test
mov
xchg
lds
sub
je
or
int3
cmp
add
mov
dec
test
movsb
push
popf
rorb
fcompl
addr16
cmpsl
mov
cwtl
out
add
mov
js
push
adc
sbbl
push
cmp
xchg
stos
dec
xchg
fistpl
clc
cmpl
hlt
xchg
dec
jo
push
outsl
mov
sub
in
cld
lahf
in
in
push
sarb
shll
into
add
dec
fcompl
push
jecxz
jns
push
mov
loop
cltd
sub
data16
cmp
in
test
rorb
xor
sub
xchg
jb,pn
repnz
cmp
jae
clc
aaa
mov
and
jae
pusha
insb
mov
ja
pop
shrb
mov
movsb
popa
std
inc
or
test
addr16
push
aad
int3
pop
movsl
popf
dec
hlt
data16
dec
mov
adc
shl
sub
js
fnstcw
xor
jmp
push
cli
outsl
push
andb
xchg
fdiv
mov
clc
test
push
subb
or
mov
mov
pusha
dec
fwait
mov
cltd
out
icebp
pop
inc
mov
xchg
xchg
inc
pop
rorl
mov
insl
bound
cmpsb
pop
jo
test
dec
push
mov
mov
clc
push
mov
pop
ret
test
lahf
inc
cmp
lock
push
iret
decl
test
shl
insl
push
dec
flds
mov
lds
inc
push
and
adc
test
mov
sbb
test
je
inc
and
test
cmp
outsb
out
js
imul
xchg
out
js
arpl
fiadds
xchg
mov
addr16
dec
inc
sub
jae
jmp
mov
xor
mov
orl
enter
jns
cmp
sbb
outsl
xchg
loope
add
int
xchg
aam
cld
dec
dec
dec
xchg
jnp
sub
sub
scas
imul
lea
sarb
jmp
mov
and
inc
sbb
andb
jns
icebp
je
mov
xor
das
dec
repz
mov
mov
mov
cmc
cli
sub
dec
dec
mov
lret
cli
mov
jg
imul
cmp
fistps
adc
daa
push
and
ljmp
mov
call
cmp
fildll
negl
loopne
pop
fstl
xchg
ja
and
lar
in
mulps
jne
inc
sub
add
subb
mov
xchg
dec
int
iret
cmpsb
pusha
lcall
and
imul
mov
mov
and
fmul
add
lret
pop
stmxcsr
mov
and
sbb
outsb
or
adc
stc
insb
dec
and
lds
push
cmpsb
xchg
int
mov
nop
sbb
add
testl
xorl
xlat
dec
sub
leave
cld
cmpsb
scas
mov
or
fmull
js
imul
push
aaa
rol
mov
shlb
and
add
lds
ja
jno
adc
jg
dec
jge
cmpsb
or
cmp
dec
lret
cld
lret
outsl
add
push
iret
mov
jnp
mov
xor
incb
push
stos
leave
sub
jo
vpshld
imul
daa
mov
add
pop
xchg
lcall
xchg
mov
pop
mov
lret
mov
mov
cmp
rorl
mov
pop
pop
inc
clc
adc
aam
shr
xor
fldenv
xchg
and
and
movsb
lock
push
int
js
jecxz
mov
mov
ja
ret
rolb
popf
pushf
ss
scas
cmp
aad
mov
jl
add
dec
movsl
cmp
repz
std
ds
or
scas
cmp
xchg
or
jmp
ja
test
cltd
mov
ret
sar
mov
adc
aad
ljmp
xchg
dec
lods
notb
fimuls
add
or
movsl
push
push
jg
leave
lds
or
cltd
dec
mov
jecxz
sbb
xchg
push
xchg
lods
cmpsl
ja
lods
scas
inc
sbb
lods
andl
aas
arpl
mov
fs
test
add
dec
xchg
pop
adc
jno
repz
cmp
inc
les
into
adc
mov
jo
lret
nop
jge
daa
lret
mov
inc
mov
add
inc
jl
scas
xchg
outsl
sahf
scas
movsb
cmpsb
or
lret
and
dec
inc
or
pop
jle
loopne
mov
jns
mov
mov
mov
ljmp
hlt
outsb
test
push
xchg
push
adc
cli
popf
lret
mov
es
testl
jo
out
dec
pop
adc
imul
mov
cli
adc
jbe
out
aam
in
test
inc
inc
outsb
dec
dec
icebp
mov
cmp
mov
mov
mov
arpl
movsb
hlt
jmp
lock
icebp
cmp
mov
push
ljmp
jge
sarb
mov
sbb
std
lds
fldenv
cs
lds
dec
or
xchg
das
xchg
icebp
mov
pop
and
test
dec
lret
add
insb
sbb
mov
in
aad
push
push
mov
movsb
lcall
call
xor
outsl
in
icebp
or
add
xchg
cmpl
sub
inc
rcrb
inc
ljmp
adc
mov
addr16
ja
or
sbb
jno
adc
shrl
sbb
xchg
sbb
rorb
pusha
fistpll
or
aas
sbb
test
jae
sub
fisubrl
aas
or
inc
mov
aad
wrmsr
js
xlat
testl
lea
mov
jns
imul
lods
cmova
or
data16
roll
ss
ljmp
aas
jno
push
pop
add
xor
and
cwtl
es
sbb
into
fldl
lret
mov
gs
ja
xor
orl
sub
pop
xor
pop
outsb
or
mov
jnp
clc
cmpsb
ror
aam
xor
test
in
lods
jno
ret
mov
js
mov
mov
movsl
dec
in
xorb
sub
xchg
jg
sbb
dec
lret
dec
pop
sbb
inc
loopne
cmp
cmp
ret
ja
repz
mov
iret
cmp
shlb
cmpsb
shrl
roll
lret
test
adc
pop
icebp
mov
dec
or
or
inc
ja
mov
js
push
lds
lahf
cmpsl
adcl
add
lret
add
std
mov
stos
pop
stc
rorl
sub
test
les
adc
js
jl
mov
test
addr16
roll
jp
mov
clc
jecxz
sbb
je
hlt
into
test
ljmp
jnp
out
insl
lods
out
push
inc
dec
adc
movsb
or
push
ljmp
sbb
sub
push
sub
adc
mov
aam
jmp
pop
and
int
sub
loop
jbe
xchg
stc
cmp
and
icebp
mov
and
jle
mulb
lock
mov
mov
mov
push
das
mov
test
pop
mov
jg
rclb
inc
test
adc
mov
xchg
lahf
sbb
cwtl
je
jb
call
pusha
and
mov
dec
inc
leave
jbe
outsl
lret
cli
mov
negb
lcall
je
cmp
fistl
insb
scas
mov
and
iret
xor
test
cmp
clc
loope
adc
xchg
popf
add
shl
pop
inc
sti
dec
into
popa
pushf
scas
mov
push
push
or
inc
xor
and
lcall
sub
imul
cmp
lret
add
cmp
insb
lret
fcmove
imul
xchg
mov
push
jno
lret
insb
mov
imul
out
addb
inc
lods
pop
xchg
or
movsb
adc
aas
data16
mov
inc
lret
mov
std
push
sbb
ljmp
popf
push
push
jno
add
cmc
sub
sbb
clc
inc
lret
sub
leave
dec
shrd
mov
add
dec
inc
in
stos
je
sub
push
test
stc
and
cmp
ret
cmpsl
cs
xchg
xchg
std
sbb
mov
fs
lock
inc
adc
mov
ja
pop
mov
lock
mov
pop
xchg
cmp
and
pop
aaa
jae
pop
sbb
clc
cli
cld
outsb
add
add
lcall
vsqrtss
movsl
setle
lret
ret
adc
inc
dec
mov
xchg
loope
mov
xchg
aam
dec
adc
mov
add
jne
inc
scas
je
sahf
jp
push
adc
in
adc
or
fadds
clc
enter
ss
jae
push
inc
and
dec
push
mov
mov
pusha
push
or
and
rcrb
pop
bound
cld
mov
test
xor
in
rcll
inc
mov
test
push
jmp
sbb
enter
mov
es
rol
scas
lahf
inc
mov
iret
cld
add
jo
sub
stc
cmc
mov
and
stc
mov
sahf
and
pop
js
add
pop
fadd
dec
clc
aad
hlt
mov
sub
mov
sbb
push
inc
js
les
clc
int3
leave
inc
pop
nop
jo
or
out
aaa
mov
inc
je
xor
sbb
jge
cmp
xor
addl
out
pushw
fwait
rorl
ljmp
mov
clc
out
xchg
subl
pusha
pop
arpl
movsb
adc
lock
pop
mov
add
enter
negl
jb
push
pop
mov
rclb
xchg
rcr
dec
mov
iret
fidivrl
adc
imul
rcrb
mov
std
mov
xor
jae
lods
push
aaa
xchg
repz
sub
jg
rorl
insl
js
pushf
rorl
add
sub
add
jmp
mov
in
sub
bound
mov
xchg
stc
cltd
pop
out
ljmp
inc
cli
add
bound
mov
inc
mov
dec
std
xor
adc
cmp
ret
sub
mov
mov
out
cmp
mov
mov
add
add
dec
push
pusha
clc
fisubrl
lret
fdivr
push
xor
andb
into
add
sub
sub
pop
out
testl
sub
jb
insl
faddl
divl
push
lret
ret
xchg
ds
pop
jns
mov
sbb
push
and
adcb
loop
pop
mov
add
xlat
mov
lods
in
xor
js
xchg
adc
out
sti
test
lock
add
ljmp
mov
xchg
pop
rcrl
das
mov
js
das
data16
dec
into
aam
add
test
jne
movsb
lods
rorb
orb
ljmp
push
cmp
lds
mov
jns
rcll
iret
loopne
add
dec
pop
fisttps
xchg
mov
add
xchg
mov
push
pop
enter
clc
add
das
sbb
lcall
jno
lret
in
jp
inc
or
lods
in
mov
push
iret
pop
clc
enter
cmp
dec
xor
adc
pop
xchg
roll
lret
ljmp
aad
sbb
rcr
mov
ljmp
cmp
xchg
sbb
dec
pop
repz
mov
push
add
pushf
bound
lret
or
xor
mov
lds
fldt
out
push
scas
mov
or
dec
xchg
or
dec
test
xor
mov
fdiv
in
push
clc
out
mov
xlat
clc
fiadds
sti
sbb
sbb
push
addb
in
xchg
xchg
xor
cmpsl
stc
popa
arpl
out
mov
sbb
jp
pop
push
icebp
xlat
popf
sbb
or
sti
fistpl
inc
pop
xchg
inc
jle
cs
dec
test
outsb
mull
out
jbe
out
loop
test
fiadds
dec
shlb
sbb
in
scas
ret
add
add
inc
jae
mov
cli
push
test
out
mov
outsb
mov
and
add
or
jecxz
pop
xor
and
push
hlt
mov
jle
sbb
push
je
test
lods
and
ss
push
out
jle
push
dec
scas
xor
jg
pop
xchg
push
roll
dec
dec
ficoms
jp
pop
popa
push
mov
inc
out
outsb
clc
das
fidivs
push
mov
xchg
sbb
dec
dec
test
or
sbb
mov
pop
ror
sti
lahf
out
push
fildl
lock
xlat
cld
movsb
lods
and
jl
repnz
adc
js
lret
mov
jno
mov
add
lret
mov
sbb
push
test
fwait
les
sub
sbb
js
inc
dec
mov
flds
jl
in
mov
pop
jae
rorl
or
scas
addl
inc
pop
lock
mov
dec
aas
and
or
mov
pop
shll
and
inc
js
and
std
or
push
mov
arpl
repz
rolb
and
cmp
test
jo
pop
std
and
js
fsubl
mov
fs
mov
out
pop
arpl
jg
fistpll
mov
sub
shl
popa
popa
shlb
movsb
mov
cmpsb
and
arpl
mov
lret
mov
in
push
mov
or
xor
movsl
pop
sbb
pop
mov
je
test
jbe
add
add
add
xchg
push
add
inc
nop
inc
or
push
andb
test
inc
mov
or
and
mov
sub
adc
push
sub
push
orb
adc
add
add
dec
adc
roll
add
subb
bound
add
dec
and
nop
add
push
push
inc
and
add
sbb
adc
add
or
adc
adc
and
pop
or
add
orb
rorl
adc
adc
or
mov
or
or
add
xchg
shlb
add
adc
orb
add
and
shlb
sub
je
adc
or
inc
adc
adc
cs
inc
adc
shlb
xchg
inc
adc
mov
and
or
loop
add
and
sub
add
and
es
pop
shlb
sub
add
mov
add
nop
inc
nop
movsb
and
orb
cmp
add
les
sub
add
add
je
push
adc
xor
push
and
or
in
adc
adc
add
or
mov
push
add
xor
mov
mov
push
addb
dec
add
and
add
jb
sbb
adc
or
xor
and
sub
pusha
inc
add
sub
push
xor
adc
adc
orb
or
addb
nop
mov
add
inc
inc
or
mov
test
push
inc
adc
push
cmpxchg
andb
mov
sbb
add
adc
push
sbb
add
adc
mov
inc
pusha
pusha
add
pusha
mov
mov
xor
add
dec
test
add
mov
pop
mov
sub
pusha
adc
adcl
or
xor
dec
das
add
add
add
xor
add
cwtl
push
shrb
adc
add
and
and
sub
cmpsb
add
or
inc
push
xchg
into
int3
push
sub
push
adc
push
rorl
add
push
add
test
add
sbb
inc
movsb
adc
inc
add
sub
adc
jae
sbb
add
inc
adc
addb
add
or
adcb
and
or
ljmp
add
or
add
movsb
adc
or
sbb
add
adc
and
orl
add
add
inc
and
add
and
test
test
pop
or
xor
in
push
gs
and
and
add
add
or
aaa
mov
inc
pop
xor
sub
shrl
lds
push
adc
pop
sub
add
and
andb
inc
and
xor
add
sub
add
or
inc
movsl
add
inc
xchg
add
or
mov
and
add
inc
pusha
or
jns
adc
subb
dec
pop
add
and
in
xchg
inc
and
sbb
and
add
inc
mov
adc
lcall
sub
and
or
inc
sub
add
add
or
sub
add
add
xor
add
subb
cmp
sbb
adc
orl
push
aad
cmp
or
add
inc
inc
inc
addb
jp
popa
add
inc
push
add
adcl
rolb
inc
and
mov
add
mov
lea
add
inc
adcb
or
and
or
or
xor
mov
xchg
cmc
push
adcl
inc
add
pushf
add
adc
sbb
or
add
les
add
adc
mov
enter
push
add
add
push
rcrb
add
inc
add
and
push
add
adcb
add
adc
aaa
and
mov
add
mov
and
adc
and
ret
add
add
add
add
adc
add
enter
inc
add
adcl
inc
mov
rolb
add
add
add
xchg
arpl
inc
cmp
xchg
cmp
inc
add
add
add
sbb
jo
push
jb
or
bound
adc
or
add
addl
inc
add
or
ret
addl
int
add
add
add
or
addb
add
inc
cwtl
xchg
and
and
and
loopne
lret
and
add
and
add
or
orb
add
push
sbb
jb
add
add
adc
lods
orb
add
sub
add
and
shlb
addb
add
add
or
add
adc
add
xchg
push
test
adc
mov
mov
xor
push
adc
sub
test
add
add
adc
xor
add
add
or
add
inc
cmp
add
andb
adc
les
add
sbbb
push
or
add
rolb
add
mov
loope
add
add
shlb
add
mov
and
addb
mov
add
adc
cwtl
cmp
xor
xor
js
sbb
add
xorb
add
add
sub
movsb
and
push
dec
inc
dec
add
adc
addb
roll
shrl
adc
pop
pusha
andb
pop
lea
add
adc
adc
dec
and
test
or
adc
shlb
rorl
adc
rclb
or
add
adc
add
int3
mov
or
push
adc
mov
adc
inc
les
add
or
xchg
sbb
mov
add
dec
add
or
mov
inc
push
or
xchg
adc
adc
add
addb
and
mov
adc
inc
mov
add
test
mov
add
inc
sub
or
call
add
add
or
and
add
add
add
ficoml
addl
add
test
push
inc
and
nop
add
and
sub
pop
adc
inc
add
sub
xor
add
or
addb
mov
jo
ret
push
sbb
push
sub
sbb
adc
dec
add
add
add
xchg
xor
or
adcb
and
add
add
add
and
add
sbb
add
or
add
add
cld
push
push
dec
sbb
add
or
addb
or
inc
or
add
push
ret
dec
add
xchg
add
and
add
adc
add
push
adc
add
lds
and
adcb
xor
inc
inc
push
add
add
test
adc
sub
add
add
adc
inc
push
dec
add
push
add
test
add
test
and
lret
push
push
add
add
inc
movsb
inc
imul
fildl
add
inc
adcb
mov
or
cmp
add
add
inc
add
add
push
xor
add
push
lock
sbb
lock
adc
shlb
push
add
nop
nop
push
inc
mov
adc
add
add
lcall
add
sub
add
or
adc
adc
addb
dec
add
rcrl
add
inc
pop
or
mov
pop
add
dec
adc
xchg
xchg
js
add
and
inc
push
add
inc
pop
adc
add
and
mov
add
inc
xor
inc
inc
and
adc
addb
pushf
sub
adcl
dec
add
add
xchg
add
add
rclb
popa
dec
adc
adc
test
addb
or
inc
pop
inc
sbb
and
or
inc
mov
add
lods
add
test
add
push
nop
cmp
add
and
xchg
loopne
dec
inc
and
add
test
xor
add
add
add
inc
jo
add
or
adc
adc
adc
inc
push
xor
roll
push
add
dec
add
xchg
and
test
add
add
sub
addb
cwtl
adc
add
or
cmp
push
rolb
adc
add
add
or
or
inc
add
test
add
add
and
add
dec
mov
inc
xor
mov
and
dec
adc
daa
add
andb
xor
test
add
mov
inc
dec
or
es
add
adc
loopne
or
adcl
add
add
adc
push
adc
sbb
adcb
gs
inc
add
addb
adcb
addl
add
push
mov
adc
add
add
add
int
push
test
lea
mov
or
add
mov
inc
adc
adcl
add
xchg
xor
in
adc
adc
adc
adc
and
dec
add
add
add
addb
add
and
and
mov
add
inc
add
and
push
dec
enter
inc
add
adc
dec
add
add
add
mov
and
and
adc
and
mov
or
xor
push
addl
add
or
push
add
xorl
inc
sub
addb
mov
adc
pusha
or
and
add
inc
pusha
dec
mov
addl
push
add
loopne
test
inc
dec
cmpsb
sub
addb
add
and
nop
add
adcb
roll
or
rolb
sbb
pusha
add
push
sbb
mov
add
pop
or
add
adc
xorb
add
addb
xchg
xchg
adc
pop
and
aaa
add
add
sbb
popa
sbb
add
add
xor
add
pop
enter
xchg
les
inc
add
addb
xchg
adc
mov
add
inc
cmp
add
sbb
adc
addb
add
and
add
inc
rolb
inc
enter
adc
or
add
add
add
and
orb
add
cmp
or
sbb
add
and
add
orb
add
es
inc
add
or
adc
and
test
xor
adc
and
add
add
and
or
sub
add
inc
push
add
and
mov
or
mov
add
adc
adc
and
popa
and
cmp
inc
add
add
xor
push
inc
mov
sub
push
xor
addb
adc
or
add
mov
add
inc
inc
adc
adc
inc
inc
push
or
mov
add
mov
push
or
push
add
rolb
mov
inc
or
add
and
add
or
add
lods
jo
sbbb
add
dec
add
push
sbb
xor
inc
adc
add
and
inc
lret
nop
inc
mov
or
mov
or
add
inc
add
cld
js
add
xorb
add
adc
xchg
adcb
add
inc
or
add
jl
test
xor
add
rolb
add
push
mov
fs
mov
add
insb
add
adc
sub
mov
add
push
mov
addl
add
dec
adc
add
push
inc
mov
mov
or
push
push
adc
adc
adc
sub
and
or
add
sub
addb
mov
push
sub
shll
adc
mov
add
and
xor
add
pusha
sbb
nop
add
sub
addl
add
add
adc
adc
test
loopne
rolb
jo
int
add
add
mov
dec
or
dec
add
and
add
mov
adc
nop
addb
dec
orb
xchg
or
mov
inc
lea
add
and
sub
or
inc
or
or
and
and
adc
xor
xorb
add
mov
rorb
push
sub
add
xchg
jo
data16
ss
add
add
add
add
or
test
mov
add
cmp
mov
and
adcl
and
lret
add
movsb
sbb
add
loopne
addb
leave
inc
adc
or
xor
sbb
add
or
adcb
sub
add
mov
add
mov
sbb
inc
or
add
pop
xor
adc
pusha
add
sub
dec
and
and
xchg
mov
test
and
dec
adcl
add
add
add
addb
push
or
subl
add
xor
adc
and
and
dec
test
push
addb
adcl
orb
or
sub
and
test
add
and
add
andb
push
add
add
push
push
add
inc
addb
adc
add
subb
cmp
inc
and
inc
xchg
add
or
add
mov
and
adc
inc
add
cmp
sbb
enter
mov
add
add
inc
or
adc
push
add
call
add
rolb
push
sbb
mov
adc
and
add
orb
adc
and
add
or
or
add
sub
nop
pop
sub
rol
and
xchg
add
and
or
cltd
lock
adcb
push
sub
add
push
push
inc
or
lea
andb
add
inc
xchg
inc
addl
adc
add
adc
inc
add
adc
push
or
inc
add
cmp
add
les
dec
add
xchg
add
sub
xchg
or
and
and
add
or
addb
inc
add
sub
pop
test
sbb
inc
dec
add
addb
dec
and
or
rolb
loopne
add
ret
orl
push
adc
sub
inc
movsb
cmp
nop
inc
sub
rolb
add
orb
pusha
test
push
add
nop
dec
inc
xchg
es
inc
or
add
add
add
mov
adc
or
inc
add
or
push
test
sbb
insb
or
or
add
push
or
inc
inc
movsl
sub
cmp
add
insb
push
andb
add
and
adc
dec
push
push
add
adc
pop
add
dec
and
adc
mov
sub
or
daa
xor
mov
add
or
and
inc
inc
xor
popa
test
and
sub
inc
and
shrb
add
add
dec
loopne
xchg
or
nop
inc
fldenv
adc
ret
xor
add
xor
sub
es
or
roll
sub
and
mov
addb
or
adc
and
sbb
inc
adc
and
inc
inc
and
or
xchg
cld
add
or
and
mov
mov
add
pop
orb
add
add
and
test
leave
push
or
add
xchg
or
add
inc
add
or
add
mov
and
xor
push
add
add
push
add
addb
add
or
addb
add
add
or
xchg
push
add
push
xchg
add
add
add
add
or
add
add
adc
adcb
add
mov
sbb
add
sbb
inc
rol
add
add
adc
add
push
xorb
sbb
or
test
nop
lea
or
or
popa
or
xor
addl
nop
pusha
inc
push
or
push
sbb
nop
add
sub
jo
test
inc
pop
and
pop
adc
sub
add
add
inc
and
add
add
inc
xor
loop
add
inc
inc
and
adcl
and
dec
mov
add
inc
and
add
mov
icebp
popa
xchg
xor
add
mov
sub
or
xor
nop
add
adc
add
nop
pusha
add
ret
add
add
sub
and
jb
sbb
int3
addb
adc
pusha
add
and
or
add
sub
imul
addl
test
cmp
test
adc
or
in
rolb
rclb
push
inc
add
sbb
mov
or
add
sbb
mov
adc
cmp
jno
and
or
rolb
inc
mov
adcb
inc
xor
inc
or
add
orl
andb
or
add
or
adc
sbb
or
inc
or
mov
dec
mov
nop
xchg
and
add
add
popf
mov
mov
add
add
or
or
and
add
adc
and
adc
movsl
or
add
sbb
adc
inc
or
push
mov
add
movsb
xchg
add
inc
add
add
inc
add
sub
inc
add
mov
mov
or
orb
mov
les
movsb
or
add
and
addb
add
add
repnz
andb
sbb
test
inc
or
and
or
ret
add
mov
push
and
or
or
add
add
and
adc
xor
inc
add
adc
add
inc
mov
or
push
inc
add
dec
push
adc
add
nop
and
cmp
or
add
adc
sbb
addl
test
loope
or
dec
addb
inc
and
pusha
add
xor
cmp
sub
or
xor
add
xor
push
data16
addb
push
mov
add
movsb
and
scas
addl
inc
adc
inc
jae
adc
add
ret
add
adc
push
movsl
push
adc
add
push
push
add
add
inc
or
xor
and
in
add
inc
add
data16
add
or
or
sub
add
out
inc
cmp
addl
shlb
adc
jo
push
jns
shll
and
push
and
or
rcll
inc
sbb
add
add
xor
sub
adc
add
or
or
or
jecxz
mov
or
adc
sub
subl
inc
add
aas
add
pusha
adc
add
addb
or
adc
andb
or
add
out
add
aaa
mov
and
ret
dec
or
les
add
adc
adcb
data16
addl
xor
add
jecxz
nop
sub
mov
pop
and
sub
cltd
and
push
and
test
add
adc
leave
sub
xor
pop
add
inc
movsb
or
inc
addl
or
andl
or
and
push
dec
xor
and
add
add
andl
and
or
or
movsb
add
sub
addb
fs
mov
and
adc
adc
sub
adc
push
or
add
rolb
mov
and
shlb
orl
adc
jmp
sub
xchg
inc
add
mov
test
adc
add
sub
inc
xchg
nop
xor
xor
pusha
adc
push
add
mov
or
insb
and
add
or
lea
cmp
inc
mov
subb
mov
sbb
add
or
xchg
nop
add
adc
push
adc
or
inc
or
sbb
add
jo
ret
and
add
or
addb
adc
adcb
add
adc
sbb
pop
sbb
shll
rolb
or
adc
dec
arpl
add
sub
push
and
adc
or
and
adc
addl
or
dec
inc
add
add
call
adc
inc
sub
and
add
andb
inc
add
add
adc
and
or
add
cmpsb
pusha
xor
push
fildl
orl
push
imul
or
adc
inc
add
sub
mov
add
and
inc
add
inc
sbb
or
and
push
add
sub
or
push
push
add
inc
adc
add
mov
bound
xor
addb
push
jl
add
mov
xchg
inc
addb
lods
adc
sub
push
out
inc
test
sbb
or
sub
add
sub
xchg
sub
adc
add
xor
add
push
sub
addb
push
nop
or
and
cmp
push
bound
sbb
add
add
and
dec
and
and
or
roll
adc
test
adc
cmp
adc
and
addb
mov
and
addb
inc
adc
add
and
sub
add
orb
scas
dec
add
inc
ja
or
push
and
pmulhw
inc
enter
adc
xchg
and
les
add
adc
add
es
add
xor
imul
add
add
push
inc
loopne
adc
and
add
add
insl
jo
add
xorl
sub
add
and
adc
or
add
imul
test
add
and
test
add
and
pusha
mov
inc
pop
adc
mov
sub
adc
adc
or
adc
add
and
rorb
adc
inc
push
adc
roll
add
or
add
add
sbb
rclb
sbb
xor
lds
mov
add
xchg
add
insb
adc
mov
popa
inc
add
test
and
or
sbb
add
cmp
or
inc
and
adcb
xorb
add
sub
adc
dec
inc
and
or
pop
cmp
inc
adc
call
add
dec
loopne
adc
ljmp
add
and
xchg
xorb
into
and
adc
add
push
dec
add
add
out
or
jo
addl
or
rolb
ret
adc
insb
dec
lods
mov
push
add
sbb
adc
add
add
mov
test
jo
and
mov
cs
sbb
pusha
xor
inc
adcb
xor
sbb
and
addb
or
inc
or
adc
and
sbb
push
adc
sbb
or
adcl
and
dec
add
or
push
inc
insb
add
push
aam
inc
test
test
das
mov
mov
add
or
add
pop
addb
sub
or
adc
adcb
xor
mov
add
add
or
add
jns
add
push
xor
add
add
add
dec
addb
adc
nop
and
pusha
faddl
test
daa
push
add
andb
addb
or
cmp
mov
addb
add
adc
add
inc
or
mov
xor
rolb
or
or
add
push
add
pusha
test
inc
inc
dec
adc
inc
addb
add
or
or
nop
or
add
adc
add
add
xchg
push
dec
inc
andl
xchg
add
add
inc
add
dec
sub
adc
and
test
push
pop
pop
xchg
test
inc
add
lods
adc
or
add
addl
inc
adc
inc
sub
push
pusha
addb
jo
adc
pop
inc
mov
xorl
rolb
mov
les
and
xor
and
add
add
add
loopne
xor
sbb
inc
and
push
add
inc
add
add
add
push
cmovs
add
inc
add
add
xor
subb
or
or
and
and
xor
add
addb
inc
and
add
add
andb
inc
or
test
push
and
or
push
xor
add
leave
movb
and
add
mov
in
add
test
addl
adc
xor
or
sub
and
mov
shll
pushf
add
or
pusha
bound
or
pusha
or
adc
rcl
shlb
add
and
and
mov
add
pop
add
add
inc
add
mov
adc
add
adc
inc
and
nop
sbb
add
and
orl
adc
add
add
add
add
xor
push
lods
adc
sbbb
rolb
and
inc
and
add
inc
out
adc
add
or
es
xchg
or
add
add
cwtl
adc
adc
or
mov
add
les
add
rolb
xchg
or
test
add
add
mov
add
test
fs
add
sbb
adcb
add
andb
sub
addb
inc
and
stos
adc
or
xchg
mov
or
pusha
add
push
int3
add
and
mov
sub
push
add
and
decb
mov
adc
add
or
cmp
xor
add
addb
add
sbb
cltd
add
andb
and
push
fs
sbb
add
and
or
add
and
add
andb
sbb
dec
push
add
add
push
inc
adc
push
addl
rorl
add
add
mov
mov
adc
or
mov
inc
inc
pusha
mov
sbb
inc
dec
sbb
and
add
add
loopne
mov
rclb
push
addl
pusha
nop
call
dec
push
sbb
mov
or
inc
adc
or
add
dec
mov
in
inc
sbb
or
and
add
add
pusha
and
jbe
arpl
mov
and
add
xchg
add
adc
les
inc
addb
sub
pop
adc
push
popa
adc
mov
and
or
rorb
xchg
add
add
and
or
push
add
push
sub
jl
inc
or
call
add
xor
add
and
sub
add
nop
push
inc
nop
push
popa
addl
inc
aam
sub
add
test
add
add
cmp
mov
xor
add
sub
add
add
sub
add
cmpsb
sbb
and
jo
jno
add
adc
add
adc
sub
mov
or
cwtl
hlt
movsb
and
add
add
cwtl
add
xor
test
add
inc
inc
push
push
adc
adc
add
add
add
add
and
pusha
sbb
sub
addl
and
test
cmp
adc
inc
push
inc
add
shll
sbb
sub
and
add
and
add
cmp
pop
orb
inc
add
lret
sbb
inc
add
add
adc
or
add
movsb
aam
adc
push
push
sbb
pop
dec
adc
push
and
add
add
push
and
cmp
hlt
and
push
ret
addl
add
xor
add
add
inc
inc
and
adc
inc
or
mov
and
add
test
sub
lods
or
dec
inc
mov
inc
and
add
adc
cs
addb
in
mov
nop
sbb
addb
inc
and
xor
add
add
and
pushf
or
shlb
push
adc
add
mov
mov
addb
xchg
mov
inc
orw
sub
push
and
or
add
sbb
add
les
add
xor
xor
or
and
test
and
mov
add
inc
add
mov
and
add
dec
add
add
push
add
push
add
test
add
dec
or
adc
add
add
ret
add
in
mov
mov
adcb
adc
and
and
sbb
daa
call
xor
push
add
add
push
add
mov
sbb
mov
adc
xor
or
movsb
push
add
add
loopne
or
cwtl
push
orl
cwtl
adc
or
test
add
into
andb
mov
add
sbb
mov
xor
add
adc
nop
inc
push
add
push
or
adc
inc
add
test
adcb
je
adc
add
add
inc
addb
add
test
or
mov
push
rolb
dec
push
adc
add
dec
add
adc
add
dec
add
add
adc
inc
add
or
or
addb
imul
add
test
add
sbb
sub
or
dec
xchg
adcb
shlb
ss
orb
add
adc
jne
mov
andl
add
xor
out
xor
adc
add
and
adc
add
subb
mov
adc
inc
dec
push
cmp
call
inc
mov
or
push
add
addb
mov
add
adc
inc
nop
add
add
add
xor
add
dec
out
add
addl
and
add
mov
adc
adc
aam
or
add
add
add
inc
push
adc
add
addb
add
adc
and
and
inc
xchg
or
mov
xor
or
add
add
add
popa
and
xor
popa
dec
add
add
test
add
sub
add
and
add
adc
add
adc
mov
add
addb
or
les
add
and
add
pop
inc
inc
adc
cmp
add
dec
sub
pushf
xchg
dec
and
add
arpl
lret
add
or
inc
mov
adc
add
sbb
andb
add
add
add
sub
push
rolb
addb
movsb
popa
nop
adc
push
jne
data16
add
rolb
and
xor
nop
les
or
inc
add
adc
pushf
sbb
xor
adc
sbb
add
xor
sbb
adc
or
push
add
push
adc
inc
daa
test
add
addb
cmp
adc
add
add
add
cwtl
inc
lret
and
add
and
jno
add
popa
push
xchg
mov
bound
push
popa
add
add
mov
push
inc
add
and
add
add
add
orl
mov
add
add
add
or
mov
rolb
xchg
add
in
xor
mov
andb
add
push
mov
inc
loopne
sbb
or
adc
add
adc
add
or
inc
rolb
push
sbb
movsb
jo
add
les
addb
pop
or
xor
and
xchg
mov
push
adcl
inc
adc
or
sbb
inc
mov
or
adcl
shlb
inc
inc
loopne
adc
xor
sbb
add
add
xchg
push
int3
andb
sub
or
rolb
add
add
inc
leave
add
add
add
or
and
xor
inc
add
inc
or
dec
ss
xor
inc
and
xchg
and
add
sbb
jb
mov
add
add
stos
and
sbb
inc
aam
bound
inc
or
add
hlt
xchg
sub
dec
add
inc
mov
shlb
cwtl
mov
test
add
or
inc
mov
add
ret
or
xor
and
and
mov
and
add
inc
add
add
xchg
dec
and
add
mov
add
popa
add
test
test
test
test
push
or
inc
xorb
inc
mov
and
addb
inc
push
or
mov
push
or
addb
and
adc
add
add
bound
inc
and
inc
mov
adc
adc
xchg
or
or
add
mov
fs
orb
subb
mov
add
add
pop
add
or
movsb
push
add
add
add
and
and
push
add
xor
xor
addb
popa
add
push
add
adc
mov
inc
push
add
addl
add
adc
mov
sub
loopne
and
add
adc
add
addb
or
cltd
add
add
nop
adc
dec
add
and
xchg
add
movsb
inc
test
aad
add
inc
mov
or
add
nop
call
cmp
and
mov
xor
mov
add
jae
mov
icebp
push
fcoms
mov
or
adc
or
xchg
cmp
sub
and
pop
add
mov
sub
rolb
outsb
add
add
add
add
add
or
sub
dec
andb
mov
or
and
addb
dec
push
add
mov
add
add
add
xor
add
or
adcl
or
push
pop
inc
adc
rolb
inc
add
and
sbb
or
adc
add
and
xchg
add
add
rcll
xor
adc
and
pusha
add
adc
add
or
inc
add
dec
add
add
push
and
cmpb
adc
inc
push
add
rolb
shrl
add
and
xchg
add
sbb
aam
nop
movsl
add
mov
dec
mov
shrb
add
add
add
inc
inc
push
mov
add
mov
adc
add
or
or
or
addb
and
and
push
sub
fmuls
cmp
pusha
stos
mov
add
es
push
mov
or
or
inc
mov
xor
adc
daa
add
add
pop
add
and
adc
inc
add
inc
inc
or
inc
push
add
or
mov
xor
test
and
add
adc
and
inc
and
adcb
ret
or
dec
sub
add
adc
add
js
addb
adc
jl
add
shrb
mov
and
add
push
inc
add
add
or
add
adc
rorb
or
pusha
inc
adc
fs
cmp
and
rcll
or
lcall
or
or
add
adc
orb
and
add
pop
cmp
and
jo
sbb
xchg
sub
sub
push
adc
adc
sbb
and
add
and
add
add
sub
mov
adcb
add
push
icebp
adc
add
dec
or
and
push
inc
or
add
adc
push
and
add
and
or
or
or
add
adc
add
or
add
add
add
add
add
add
and
inc
cwtl
add
add
or
or
and
pop
add
pusha
adc
add
sbb
add
push
add
add
or
add
and
sbb
xchg
and
add
addl
dec
add
and
mov
add
adc
xor
inc
mov
sub
cwtl
adc
adc
add
mov
addb
add
addb
or
loopne
mov
push
add
stos
push
mov
insb
add
inc
push
adc
add
xor
inc
push
pusha
mov
push
and
add
rolb
and
andl
add
adc
add
xchg
add
xchg
xchg
mov
xchg
xorb
xor
cmp
mov
add
push
or
push
add
or
add
les
inc
add
add
addl
adc
mov
and
push
xchg
fs
pop
xor
or
push
jo
adc
adc
cmp
adc
dec
es
dec
outsb
and
and
and
add
mov
jo
add
rorb
or
sub
roll
orb
sbbb
and
and
adc
movb
push
add
and
dec
add
xchg
loopne
adc
push
jle
add
mov
add
xchg
adc
addb
push
add
addb
pusha
or
jo
xlat
add
jb
and
add
and
mov
or
pusha
mov
pushf
loopne
adc
or
or
push
add
sbbl
add
dec
add
push
mov
sbb
in
mov
add
adc
inc
shlb
pusha
and
dec
adc
add
lea
push
mov
inc
inc
inc
adc
adc
mov
inc
mov
adc
inc
add
adc
mov
loopne
inc
dec
adcl
inc
add
mov
and
inc
pop
xchg
aam
mov
or
test
and
sbb
adcb
dec
and
rclb
les
push
xor
add
inc
pusha
adc
mov
push
add
and
add
add
xor
push
cmpsl
add
add
mov
and
and
mov
test
add
push
ss
sahf
or
adc
cmpb
dec
or
add
in
and
or
adc
add
add
xor
push
mov
push
add
adc
mov
pop
adc
add
add
and
pusha
popa
adc
sbbb
add
push
adc
add
or
addl
inc
mov
and
push
push
shlb
pusha
or
add
adc
add
and
rolb
clc
sbb
add
sbb
add
in
add
add
xchg
add
mov
addl
push
add
inc
push
add
add
add
add
nop
or
xor
xor
add
rcll
cmc
sbb
push
jae
xchg
or
and
adc
mov
test
orb
and
cmpsb
xchg
add
dec
add
push
inc
add
popa
rolb
adc
test
xor
xchg
nop
mov
adc
or
add
addb
adcb
inc
push
addb
mov
add
andl
and
inc
add
pop
sub
or
add
sub
or
push
inc
fwait
add
inc
xchg
or
add
or
add
add
test
add
inc
adc
add
add
add
adc
inc
add
inc
and
inc
add
pop
add
push
nop
add
or
pusha
orb
add
or
and
push
adc
ret
or
sub
inc
and
add
push
add
shl
sub
xor
jb
sub
popa
loope
add
inc
push
rolb
add
add
adcb
mov
or
rclb
and
adc
outsb
add
add
arpl
add
mov
add
pop
add
loopne
popa
movsb
add
or
adc
adc
inc
or
adc
add
pop
nop
adc
xchg
pusha
orb
nop
adc
rol
add
add
add
jo
add
xchg
and
bound
nop
inc
add
and
add
adc
adc
pusha
adc
addl
addb
loopne
add
or
sbb
push
add
popa
or
xor
add
rolb
add
or
add
add
cltd
sub
daa
and
cmp
add
addl
inc
add
add
andb
push
adc
sub
add
and
movsb
push
popa
or
mov
and
add
sub
add
dec
popa
inc
sbb
and
sub
add
movsl
or
or
inc
add
and
sbb
addb
add
mov
adc
dec
or
enter
addb
or
test
pusha
or
or
mov
das
adc
dec
sbb
add
pop
add
xchg
and
inc
adcb
add
add
xchg
dec
add
inc
add
loop
add
addb
addb
mov
addb
add
mov
subb
mov
add
mov
mov
jno
add
sbbb
cwtl
mov
test
add
jo
add
orl
add
inc
pop
inc
add
add
push
xor
jno
inc
inc
adc
xchg
inc
lods
inc
adc
add
xchg
inc
inc
dec
push
roll
cmpl
add
add
es
or
adc
and
add
adc
add
add
adc
insb
add
or
mov
inc
inc
add
add
push
nop
and
adc
add
test
adc
sbb
inc
adc
sbb
push
addb
add
and
xor
add
pop
mov
inc
sbbl
add
and
adc
push
add
pop
xor
sbb
adc
and
or
lods
add
pusha
add
andl
or
test
sbb
and
push
roll
add
adc
add
adc
sub
adc
adc
sub
add
add
and
add
sub
push
and
add
or
addl
or
and
dec
add
or
add
sub
adc
and
add
mov
or
push
pop
popf
or
xor
and
add
or
mov
and
or
inc
add
addb
addb
mov
or
and
push
adc
inc
push
inc
add
add
add
and
add
inc
xor
add
rolb
sbbb
adc
rclb
inc
add
push
add
inc
add
add
dec
push
les
add
sbb
and
add
dec
push
and
mov
andb
movsb
addb
test
xor
sbb
add
nop
mov
js
add
dec
sub
xchg
and
or
add
movsb
inc
inc
add
inc
adc
loopne
add
or
mov
xchg
rcll
adc
inc
and
addb
test
push
dec
or
xchg
adc
or
sub
add
add
add
or
add
add
add
orb
mov
push
push
or
mov
andb
test
and
add
test
or
movsb
xchg
jno
add
addb
mov
orb
or
add
cltd
xor
adc
or
push
add
or
add
or
add
dec
cmpl
add
add
and
dec
subb
add
adcb
sbb
and
ret
inc
add
add
push
add
xorb
repnz
jl
add
xchg
mov
add
push
inc
dec
add
add
rolb
mov
add
test
adc
inc
xchg
inc
les
inc
andb
push
mov
add
pop
inc
add
adc
or
inc
inc
add
ret
test
xor
adc
and
jno
icebp
rclb
push
sbb
mov
mov
mov
xchg
adc
sbb
add
mov
add
add
mov
add
mov
add
movsl
dec
and
add
adc
pusha
and
xchg
pusha
test
ss
movsb
add
push
and
nop
jo
dec
add
add
test
movups
dec
and
nop
add
sbb
mov
inc
orb
inc
add
and
add
addl
or
adc
add
add
add
add
jp
adc
pusha
add
push
inc
inc
inc
fs
xchg
and
adc
dec
add
inc
adc
sub
push
dec
inc
xor
xor
jo
ret
add
add
or
adc
adc
dec
or
xor
add
inc
add
add
or
ret
sub
bound
dec
adc
dec
inc
or
and
add
xchg
add
cmpsl
pusha
add
xchg
add
or
test
or
test
add
pusha
rol
add
push
add
or
js
or
add
inc
add
rolb
add
nop
adc
mov
add
push
pusha
xor
inc
pusha
adcb
addb
add
cmp
popa
or
and
push
and
sbbb
fcoms
add
push
add
orl
adc
adcl
and
andb
or
sub
add
add
adcl
or
push
xchg
inc
push
inc
les
adc
rolb
xor
adc
push
push
add
rolb
inc
or
inc
test
enter
adc
sub
xchg
add
lret
fiaddl
add
and
add
outsb
push
add
sub
push
adc
push
sbbb
or
inc
xchg
pop
push
adc
sbb
inc
inc
inc
pusha
adc
add
or
dec
dec
add
inc
xor
add
dec
dec
mull
andb
sbb
nop
push
adc
ret
mov
or
and
sbbb
mov
push
and
test
add
sub
add
inc
xchg
and
mov
inc
cmp
mov
add
ret
adc
addb
push
add
mov
inc
push
inc
xor
push
add
inc
and
in
sub
inc
xorb
add
jno
mov
cmp
add
adc
add
or
shll
mov
adc
rclb
mov
in
nop
adc
and
add
add
and
push
add
mov
mov
push
pusha
mov
inc
mov
sub
sub
sub
inc
and
andb
add
add
mov
add
xor
pop
inc
sub
add
addb
je
mov
mov
sub
mov
mov
push
push
push
call
add
push
mov
push
mov
mov
sub
push
push
push
push
push
call
add
call
cmp
jne
cmp
jne
mov
or
cmp
je
mov
mov
cmp
jne
mov
mov
xor
mov
cmp
jne
cmp
je
add
cmp
je
cmp
jne
mov
push
push
push
push
call
add
push
call
mov
cmp
jne
cmp
je
mov
test
jne
mov
add
cmp
je
cmp
je
mov
call
cmp
jne
sub
mov
cmp
je
mov
mov
sub
push
push
push
call
add
mov
mov
or
cmp
jne
mov
add
mov
mov
cmp
jne
mov
push
push
push
push
push
call
add
mov
push
push
push
push
call
add
call
mov
push
call
add
mov
sub
mov
mov
cmp
je
cmp
jne
xor
mov
mov
mov
call
cmp
jne
push
push
push
call
add
call
test
jne
sub
push
push
push
push
push
call
add
mov
xor
call
call
xor
cmp
jne
cmp
jne
mov
push
push
push
call
add
xor
mov
mov
mov
cmp
jne
cmp
je
mov
call
mov
push
push
push
call
add
add
mov
mov
mov
call
mov
cmp
je
mov
mov
mov
sub
call
mov
cmp
je
xor
mov
push
push
push
call
add
xor
mov
push
push
call
add
xor
push
call
add
mov
mov
sub
mov
lea
mov
or
mov
mov
mov
mov
push
add
mov
push
mov
test
je
push
push
push
push
call
add
push
push
call
add
call
cmp
je
mov
mov
mov
shr
mov
add
cmp
jne
test
je
test
je
cmp
je
cmp
jne
mov
test
jne
mov
mov
cmp
jne
mov
xor
mov
cmp
jne
mov
mov
push
push
push
call
sub
mov
mov
cmp
jne
add
mov
mov
mov
cmp
je
mov
xor
mov
cmp
je
mov
add
mov
cmp
je
mov
sub
cmp
je
mov
add
cmp
jne
sub
test
jne
sub
mov
mov
mov
mov
push
push
push
push
push
call
add
mov
xor
push
push
push
push
push
call
add
sub
mov
xor
mov
push
push
push
call
add
pushl
push
pushl
call
push
call
add
addl
mov
push
push
call
add
mov
cmp
jne
xor
mov
mov
cmp
je
sub
cmp
jne
mov
mov
mov
sub
mov
call
cmp
je
push
push
push
call
add
sub
mov
push
push
push
push
push
call
add
sub
mov
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
call
add
push
mov
push
call
add
push
mov
add
mov
push
call
add
push
push
push
push
call
add
call
movl
call
call
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
je
mov
push
push
push
call
add
xor
push
call
add
call
mov
call
mov
cmp
je
cmp
je
mov
call
mov
sub
cmp
je
mov
mov
cmp
je
add
test
je
mov
add
push
call
add
mov
mov
mov
cmp
je
mov
cmp
je
add
cmp
jne
add
mov
cmp
je
mov
cmp
jne
sub
mov
cmp
je
mov
cmp
je
mov
add
cmp
jne
mov
add
cmp
jne
cmp
je
sub
mov
cmp
je
add
mov
cmp
jne
test
jne
cmp
jne
cmp
jne
add
mov
mov
mov
cmp
jne
sub
mov
mov
mov
mov
mov
mov
add
mov
mov
call
push
call
mov
or
je
mov
mov
addl
mov
test
jne
sub
mov
cmp
jne
mov
mov
cmp
je
mov
xor
mov
mov
mov
lea
mov
cmp
je
mov
inc
mov
xor
cmp
jne
sub
mov
mov
xor
mov
mov
mov
sub
xor
mov
cmp
jne
mov
sub
cmp
je
mov
sub
cmp
je
add
mov
cmp
jne
sub
mov
mov
cmp
jne
mov
or
cmp
jne
cmp
jne
add
mov
mov
cmp
jne
cmp
jne
mov
cmp
je
sub
mov
mov
mov
cmp
jne
mov
mov
and
mov
test
jne
test
jne
sub
mov
mov
cmp
jne
mov
xor
cmp
jne
mov
mov
sub
mov
mov
mov
xor
cmp
je
mov
cmp
jne
push
push
call
add
sub
push
call
add
mov
add
mov
mov
cmp
je
mov
mov
push
push
call
add
mov
mov
mov
mov
add
mov
cmp
jne
sub
push
push
push
push
call
add
mov
mov
add
mov
mov
mov
mov
mov
sub
mov
push
push
push
push
push
call
add
push
push
push
push
call
add
cmp
je
push
push
call
add
mov
cmp
je
mov
xor
cmp
jne
mov
pop
cmp
je
mov
call
sub
mov
pop
cmp
je
mov
sub
mov
pop
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
mov
push
call
push
mov
mov
mov
xor
cmp
je
mov
add
cmp
jne
mov
mov
sub
cmp
je
mov
add
cmp
jne
cmp
je
mov
mov
mov
cmp
je
sub
call
rdtsc
mov
and
mov
mov
xor
mov
cmp
je
mov
cmp
je
mov
add
test
je
and
mov
mov
mov
mov
mov
mov
and
push
push
push
push
push
call
add
cmp
je
push
push
call
add
mov
sub
push
push
push
push
call
add
mov
cmp
jne
test
jne
or
mov
push
push
push
push
call
add
cmp
je
push
push
push
push
call
add
sub
push
call
add
push
call
add
cmp
jne
mov
sub
mov
mov
mov
mov
xor
mov
rdtsc
mov
add
mov
cmp
je
mov
mov
add
mov
mov
xor
mov
mov
mov
sub
cmp
jne
mov
sub
mov
mov
or
mov
cmp
jne
mov
mov
test
jne
test
jne
mov
add
mov
mov
pop
mov
add
cmp
jne
mov
cmp
jne
mov
mov
sub
mov
pop
cmp
jne
mov
pop
xor
mov
test
je
xor
mov
cmp
jne
mov
add
mov
test
je
cmp
jne
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
xor
mov
push
push
call
add
push
push
push
push
call
add
push
push
push
push
call
add
push
push
push
push
push
push
call
add
push
add
mov
push
push
push
push
push
call
add
mov
xor
mov
mov
xor
mov
test
je
sub
mov
mov
cmp
je
cmp
jne
mov
mov
cmp
jne
test
je
add
mov
test
je
add
test
je
cmp
jne
sub
mov
test
jne
mov
mov
test
je
mov
cmp
jne
add
mov
cmp
jne
cmp
je
cmp
je
mov
mov
sub
cmp
je
cmp
je
sub
mov
mov
mov
mov
mov
cmp
je
mov
decl
cmp
jne
or
mov
mov
mov
mov
sub
mov
xorl
negl
rorl
add
sub
jmp
xor
cmp
je
mov
call
cmp
jne
push
push
push
call
add
mov
add
mov
pop
cmp
je
cmp
jne
push
push
push
push
push
call
add
pop
cmp
je
push
push
push
push
push
call
add
pop
mov
mov
cmp
jne
test
je
add
cmp
je
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
mov
mov
mov
cmpl
je
mov
mov
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
lea
push
call
lea
push
call
mov
mov
push
lea
push
call
lea
push
mov
push
call
mov
movl
movl
movl
mov
add
push
mov
add
push
mov
push
mov
sub
push
call
mov
mov
mov
mov
mov
mov
cmpl
je
movl
cmpl
jge
cmpl
jle
jmp
jmp
mov
mov
mov
movl
jmp
mov
add
mov
mov
mov
cmp
jae
mov
add
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
cmpl
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
je
mov
movzwl
mov
movzwl
cmp
jle
mov
mov
mov
cmpl
je
mov
test
je
mov
mov
mov
movsbl
cmp
jl
movsbl
cmp
jg
movsbl
add
mov
mov
mov
mov
movsbl
cmp
jl
movsbl
cmp
jg
movsbl
add
mov
movsbl
movsbl
cmp
je
jmp
movsbl
test
jne
mov
mov
jmp
movl
mov
mov
lea
mov
mov
mov
lea
mov
jmp
mov
mov
mov
mov
cmp
jne
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
cmpl
je
cmpl
je
cmpl
jbe
mov
movsbl
test
je
mov
mov
mov
mov
add
mov
mov
cmpl
je
mov
cmpl
je
mov
mov
mov
cmp
jae
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
ja
mov
mov
cmp
jb
mov
mov
mov
add
cmp
jae
mov
mov
sub
mov
mov
add
mov
jmp
jmp
movl
jmp
mov
add
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
add
mov
mov
movsbl
mov
movsbl
cmp
jne
mov
movsbl
test
jne
mov
mov
movzwl
mov
mov
add
mov
jmp
movl
mov
mov
lea
mov
mov
mov
lea
mov
jmp
jmp
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
cmpl
je
cmpl
je
mov
test
je
mov
movsbl
sub
mov
movb
mov
mov
mov
movzbl
movzbl
add
mov
movzbl
movzbl
xor
mov
mov
movzbl
movzbl
sub
mov
mov
movsbl
mov
movsbl
lea
mov
mov
movzbl
imul
mov
mov
movsbl
sub
mov
mov
mov
movsbl
test
jne
jmp
mov
add
mov
mov
add
mov
jmp
mov
sub
jmp
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
add
push
mov
add
mov
push
push
push
push
push
call
add
push
mov
push
call
add
push
call
add
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
push
push
push
push
push
call
add
pop
cmp
je
mov
mov
sub
cmp
je
mov
pop
mov
push
push
push
push
push
call
add
pop
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
add
push
push
call
add
push
push
push
push
call
add
push
mov
push
push
push
call
add
mov
push
push
push
push
push
call
add
test
jne
add
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
add
mov
mov
pop
push
push
push
call
add
pop
mov
push
push
push
push
push
call
add
pop
call
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
add
push
call
add
push
mov
push
push
push
call
add
push
mov
mov
push
push
push
push
call
add
mov
push
cmp
je
add
call
mov
sub
mov
mov
add
mov
mov
mov
mov
mov
pop
mov
xor
cmp
je
mov
add
mov
mov
mov
pop
cmp
jne
mov
pop
cmp
je
xor
push
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
or
mov
push
push
push
push
call
add
call
mov
mov
push
push
push
push
push
call
add
mov
push
mov
add
push
push
call
add
push
mov
push
call
add
and
mov
cmp
jne
mov
push
push
push
push
call
add
mov
push
push
push
call
add
mov
push
push
push
push
call
add
pop
mov
pop
cmp
jne
mov
pop
mov
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
call
add
push
push
push
push
call
add
push
mov
mov
push
add
mov
push
push
push
push
push
call
add
mov
push
push
call
add
push
call
add
mov
cmp
je
xor
mov
mov
mov
pop
cmp
jne
add
mov
mov
mov
cmp
je
push
push
push
push
call
add
pop
add
mov
mov
cmp
jne
mov
pop
mov
cmp
jne
mov
xor
mov
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
call
push
mov
push
mov
cmp
je
sub
cmp
je
mov
sub
mov
push
push
call
add
cmp
je
push
push
push
push
push
call
add
mov
push
mov
sub
mov
push
call
add
mov
mov
push
push
push
push
push
call
add
sub
call
mov
mov
pop
mov
cmp
jne
push
call
add
pop
xor
mov
mov
push
call
add
pop
cmp
jne
sub
mov
mov
cmp
je
push
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
call
push
xor
mov
mov
push
push
push
push
push
call
add
push
mov
sub
cmp
jne
add
mov
cmp
je
mov
mov
sub
mov
mov
mov
add
cmp
je
cmp
je
push
call
add
mov
cmp
je
add
mov
cmp
je
xor
push
call
add
push
call
add
mov
cmp
je
xor
mov
xor
mov
mov
mov
push
push
push
push
push
call
add
pop
mov
xor
mov
pop
mov
pop
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
add
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
push
sub
mov
mov
mov
or
mov
mov
mov
mov
mov
add
mov
mov
mov
pop
mov
sub
mov
pop
add
cmp
je
sub
mov
cmp
jne
sub
mov
mov
cmp
jne
mov
cmp
je
and
mov
cmp
jne
mov
xor
mov
cmp
jne
mov
mov
sub
mov
mov
pop
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
add
mov
push
mov
mov
push
mov
mov
mov
cmp
je
cmp
jne
sub
mov
cmp
jne
mov
add
mov
mov
sub
mov
xor
mov
mov
mov
pop
add
mov
mov
mov
mov
pop
mov
mov
pop
mov
cmp
jne
or
cmp
je
add
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
mov
push
sub
cmp
je
mov
push
mov
cmp
je
sub
mov
cmp
jne
mov
xor
cmp
jne
xor
mov
mov
mov
mov
add
cmp
jne
add
mov
mov
mov
mov
cmp
je
add
mov
test
je
mov
sub
cmp
je
cmp
je
xor
mov
mov
mov
cmp
jne
mov
add
cmp
je
mov
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
cmp
je
sub
cmp
jne
mov
cmp
jne
mov
add
mov
cmp
je
mov
mov
cmp
je
mov
mov
add
cmp
je
mov
add
mov
pop
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
cmp
je
mov
mov
cmp
je
mov
cmp
je
xor
mov
mov
cmp
je
mov
mov
or
mov
cmp
jne
mov
cmp
jne
mov
sub
mov
mov
mov
pop
mov
add
cmp
jne
mov
xor
cmp
jne
mov
mov
mov
mov
test
jne
mov
mov
pop
add
mov
mov
mov
mov
leave
ret
add
add
adc
dec
sub
cmp
sti
xchg
lods
dec
repz
mov
mov
sbb
in
ja
clc
addr16
dec
inc
das
mov
outsb
mov
jbe
inc
fwait
fwait
dec
xchg
fisubs
adc
cmpl
pop
lret
subl
adc
sub
xor
push
add
hlt
enter
loop
add
sub
dec
xlat
mov
sbb
push
adc
test
pop
flds
dec
sbb
leave
and
mov
es
and
sbb
and
xorb
into
cld
cwtl
and
dec
cld
sarb
dec
inc
xor
and
jge
xorb
sbb
stc
and
addr16
mov
popf
out
or
add
xlat
popf
insl
add
dec
js
jmp
ds
fmulp
aaa
mov
shr
stos
dec
lods
mov
sarb
sbb
adc
or
sarl
cmp
test
cmp
xchg
pop
clc
bswap
rcl
push
or
push
mov
xor
aam
aam
or
xor
sbb
mov
inc
xchg
mov
mov
and
sahf
and
mov
idiv
ret
jns
mov
fldcw
pushaw
insb
inc
add
adc
addr16
sub
adc
stos
inc
mov
ljmp
lock
fisubrl
cmp
fildll
and
movsb
out
dec
in
or
test
leave
dec
rorl
jp
enter
pop
adc
clc
cmc
dec
pop
mov
pop
cs
jmp
in
jl
sbb
scas
in
cmp
mov
pusha
clc
mov
pop
and
push
out
jg
dec
pop
or
or
inc
dec
xchg
loope
xor
ja
pop
clc
shr
cwtl
push
mov
cmc
add
enter
sub
fadds
aad
sbb
mov
jmp
fldl
gs
mov
fs
add
sbb
xor
stos
daa
jg
mov
ja
aad
and
int
clc
lods
inc
aaa
pushl
fiadds
lds
xor
int3
imul
cmp
pushl
arpl
xor
mov
dec
popf
and
cs
adc
xchg
test
mov
aaa
mov
sbb
fmuls
jae
pop
test
sbb
and
pop
mov
or
mov
loopne
sbb
pop
js
push
sbbl
aaa
mov
add
arpl
push
push
push
stos
add
dec
cmp
pop
push
out
add
inc
nop
push
push
mov
pusha
sbb
pop
int
push
jns
subb
xor
stos
test
faddl
icebp
int3
roll
ss
test
imul
xchg
arpl
js
negl
mov
testb
in
mov
scas
ja
mov
rclb
jge
pop
pushf
test
in
jle
add
dec
aaa
out
add
dec
cli
mov
dec
fmulp
insb
add
jg
add
dec
jmp
andb
dec
inc
fiadds
and
adc
ss
sbb
jbe
or
mov
outsb
inc
sub
mov
jae
cmp
test
outsb
mov
repnz
jle
ja
or
bound
jo
xor
cwtl
pop
sahf
jecxz
xchg
fisttpl
and
add
dec
data16
pop
xor
loopne
or
or
aad
jge
pop
inc
xchg
jo
inc
push
adc
loopne
xchg
mov
jp
and
scas
or
arpl
sarb
lock
pop
jb
shlb
sbb
lods
mov
jmp
adc
jb
test
popa
or
and
xorb
and
ljmp
adc
or
adc
or
int3
inc
mov
je
mov
push
add
xor
icebp
gs
xor
das
mov
mov
lret
mov
aad
inc
dec
pop
mov
push
jl
push
gs
pop
cwtl
in
push
mov
xor
inc
mov
lcall
nop
mov
mov
push
inc
xchg
ret
incb
pushf
sbb
jl
sub
push
clc
movsb
enter
xor
and
cmp
jb
pop
in
and
out
mov
or
pop
js
clc
push
jle
and
dec
xchg
arpl
insb
imul
scas
jae
daa
push
pop
fstps
sbb
xor
xor
fsubl
call
mov
jns
ljmp
dec
out
mov
cmpsb
cli
pushf
push
jns
push
and
aam
mov
sti
xchg
push
js
dec
sbb
out
mov
int3
popa
dec
and
das
mov
xchg
inc
fcomip
adc
pop
mov
sub
mov
loopne
loop
bound
ds
mov
ss
in
test
dec
outsl
daa
cmp
nop
xor
test
ss
stc
lret
lods
pop
daa
enter
sbb
pushf
movsl
push
fiadds
lret
repz
pushf
or
xor
mov
add
test
jmp
and
repz
and
inc
negb
jno
xor
jbe
jnp
sub
push
mov
in
and
out
clc
aaa
test
or
mov
icebp
test
sbb
mov
cmp
mov
add
add
dec
cltd
pop
mov
mov
jmp
push
and
imul
dec
mov
mov
in
cmp
add
lret
loope
or
test
loope
sbb
lret
fdivr
addr16
inc
sti
insl
out
or
push
iret
mov
or
or
sub
pop
js
dec
lcall
les
es
jb
lods
adc
push
mov
push
andb
orb
mov
sub
jns
es
rol
pop
add
add
add
add
xor
addb
and
and
add
adc
addb
and
adc
add
add
rolb
inc
les
and
and
add
inc
adc
add
add
add
and
addl
inc
push
addb
and
adc
add
arpl
add
sub
or
sub
add
add
pop
add
add
fcoms
adc
sub
inc
addl
adc
or
add
inc
sbb
add
add
sbb
add
inc
rolb
dec
or
adc
add
add
add
add
addb
adc
or
xor
add
jg
addl
xor
inc
adc
mov
or
add
inc
add
add
add
add
addb
inc
popa
add
mov
add
addb
and
addl
add
add
and
add
pop
mov
adc
inc
add
lods
les
adc
data16
add
add
add
and
test
sbbb
xor
sub
addb
adc
es
adc
adcb
and
add
add
add
add
adc
pusha
add
add
adc
add
or
or
adcl
add
add
mov
add
shlb
add
pusha
inc
add
pusha
inc
add
add
add
addl
or
data16
inc
and
add
or
add
add
or
add
add
add
mov
xor
add
inc
mov
addb
add
sbb
shll
adc
or
add
add
add
adc
orb
adc
inc
test
push
nop
or
add
add
add
and
inc
add
and
xor
add
add
xchg
pop
pusha
add
mov
popa
addl
addb
or
inc
or
inc
adc
addb
add
test
and
add
sub
and
call
and
add
adcb
inc
and
add
cmp
add
add
add
test
inc
fadds
add
addl
add
add
and
mov
inc
andb
push
xor
xchg
dec
orl
add
addb
addb
add
xor
xchg
add
add
rorb
add
and
inc
fwait
add
adc
and
inc
and
add
add
or
addb
and
and
add
inc
adc
ret
inc
or
add
push
and
pusha
roll
xchg
add
test
add
add
addb
add
adc
add
adc
orb
and
add
addb
loopne
add
add
inc
push
and
addb
add
add
or
add
add
add
nop
or
and
sub
or
adc
push
add
add
xorb
add
enter
add
and
adc
inc
addb
push
add
loopne
add
adc
addb
adc
inc
or
add
and
andb
or
nop
add
or
sub
and
and
addb
add
or
bound
or
adc
inc
add
nop
add
inc
add
dec
inc
add
adcb
sbb
add
adc
add
mov
inc
add
pop
dec
addl
sub
add
and
test
push
xchg
inc
nop
test
andl
mov
inc
leave
addb
adc
add
addb
add
add
add
add
push
pusha
add
add
add
add
add
movb
nop
inc
or
add
dec
inc
mov
cmp
add
les
orb
mov
or
push
xor
add
add
add
inc
add
add
inc
test
adc
push
addl
dec
inc
add
add
mov
add
push
add
sub
sub
rcll
andb
rolb
inc
or
push
or
add
add
addb
adc
add
inc
add
sub
add
xor
add
adc
in
addl
mov
pusha
add
adc
add
add
addb
addb
or
sub
push
sbb
add
or
addb
add
and
add
add
and
inc
mov
add
and
add
add
add
add
xor
and
adc
add
add
and
push
sbb
add
addl
add
pop
add
add
cwtl
add
add
add
pusha
add
inc
add
add
add
daa
inc
add
add
add
mov
inc
add
xor
xor
xchg
or
add
sbb
add
sub
or
addb
add
add
add
inc
push
add
adc
add
dec
test
or
and
out
add
add
add
add
and
ret
add
push
add
add
addb
adc
add
inc
and
add
and
leave
inc
inc
or
push
push
jo
inc
add
and
xchg
or
dec
adc
and
andb
and
js
mov
and
pusha
add
add
inc
adcb
and
add
adc
inc
cmpsb
add
les
sub
add
and
and
inc
add
xor
push
add
addb
add
nop
sahf
inc
addb
inc
add
push
inc
and
add
mov
adc
inc
or
mov
add
pop
or
cwtl
outsb
adc
add
and
addb
add
add
and
add
and
add
or
inc
lea
dec
and
addb
or
and
and
test
add
rolb
add
push
and
inc
fmuls
add
add
add
adc
add
adcb
and
push
add
add
add
inc
add
add
add
addb
add
and
add
pusha
inc
push
nop
inc
add
and
add
and
add
addb
add
xor
cmc
push
add
add
add
adc
add
mov
add
add
cmp
add
push
add
add
add
add
addb
sub
enter
sub
or
add
xchg
inc
add
adc
xchg
movsb
dec
adc
add
inc
add
inc
inc
add
add
mov
add
adc
add
shll
dec
or
add
add
add
or
inc
push
add
inc
add
mov
adc
add
adc
add
lds
sbb
add
add
rolb
inc
add
xchg
mov
adcb
add
sub
or
add
add
add
add
dec
add
add
cltd
add
nop
add
dec
add
add
and
adc
add
add
inc
add
add
stc
inc
inc
and
inc
add
adc
or
data16
or
push
and
or
add
add
or
or
addb
mov
or
add
add
into
and
sbb
and
or
add
or
ret
inc
add
add
and
addb
inc
and
and
or
mov
mov
test
push
inc
add
add
adc
nop
adc
add
sub
adc
add
out
add
adc
xchg
inc
add
add
dec
and
add
adc
or
popa
add
and
add
and
push
pusha
push
and
push
inc
mov
and
adc
adcb
add
add
add
and
or
or
or
add
add
addb
rclb
and
add
dec
add
add
add
add
or
or
dec
or
add
or
addl
add
nop
add
es
add
add
jo
add
sub
sub
inc
aam
add
mov
inc
addb
add
adc
add
test
sbb
cmpb
add
rclb
add
adc
dec
clc
lcall
adc
mov
aad
add
add
add
adc
add
inc
inc
subb
add
or
add
add
jb
orb
add
add
add
add
or
add
inc
sub
xchg
add
xor
cmpl
adc
add
add
or
and
add
inc
pusha
and
or
sbb
and
adc
add
adc
loopne
les
adc
mov
add
push
les
add
and
add
rolb
add
addl
add
xchg
rorb
sub
add
addb
inc
mov
xchg
add
inc
add
adc
add
add
adc
add
add
and
add
dec
add
and
add
and
fwait
xor
inc
push
insb
add
push
andb
add
adc
or
or
and
inc
or
rclb
add
shlb
addb
add
mov
add
push
xor
sub
add
andb
adc
and
add
pusha
add
mov
and
sub
inc
orl
add
inc
inc
add
pop
add
subb
add
adc
push
and
add
add
add
and
and
add
and
shlb
add
add
or
test
sbbb
add
and
or
add
push
or
or
and
inc
jne
add
mov
or
loopne
adc
mov
xor
dec
pop
xchg
mov
add
add
and
add
add
add
dec
sbb
add
add
inc
xchg
add
add
add
mov
sub
ret
add
push
and
or
sub
or
add
or
andb
sbb
add
adc
or
adc
add
or
add
inc
inc
add
and
sbb
cwtl
or
add
or
aam
and
or
or
push
or
or
and
and
add
shlb
push
add
add
add
or
add
push
dec
inc
and
or
fwait
and
popa
add
inc
add
xchg
add
add
add
add
xor
add
call
test
add
inc
mov
add
or
and
inc
add
inc
add
or
and
adc
addb
inc
add
push
and
inc
inc
add
add
dec
fisubl
orb
inc
or
add
inc
icebp
or
add
add
push
add
inc
xor
push
inc
add
adc
add
push
xor
add
add
mov
adc
adc
rorl
add
adc
addl
push
sub
cmp
add
push
rclb
adc
add
or
adc
add
sbb
add
push
add
inc
adc
sub
addb
or
or
sub
or
sub
pop
addl
sbb
inc
add
ret
add
nop
adcb
add
test
and
add
add
or
or
inc
lcall
shll
add
sbb
add
leave
and
add
adc
add
add
add
add
enter
add
inc
add
add
mov
mov
add
xchg
dec
inc
adc
cli
add
add
and
sbb
test
addl
inc
add
add
or
add
adc
add
add
add
adc
add
add
inc
add
test
adc
mov
add
inc
test
push
add
fadds
add
addl
adc
add
or
or
rcrb
push
or
add
adc
and
push
addb
test
dec
add
addb
add
dec
inc
add
add
push
add
inc
adc
dec
rcll
dec
inc
and
pop
or
or
add
adc
add
jo
push
add
inc
nop
push
or
push
and
add
adc
inc
add
add
and
test
or
add
jno
add
and
and
sbb
add
adc
addb
rolb
push
or
add
adc
adc
sbb
adc
sub
mov
push
lds
gs
add
sub
add
mov
add
xchg
or
inc
add
and
add
add
mov
push
cmp
add
xchg
inc
faddl
xor
dec
inc
add
adc
sub
adc
and
or
sbb
add
push
adc
add
and
or
add
inc
dec
add
dec
xor
and
call
xor
adc
add
popa
ret
adc
adc
inc
inc
add
adc
pusha
addb
call
dec
add
push
add
addl
addb
xor
ret
inc
and
inc
and
mov
and
add
lock
adc
add
push
inc
adc
pop
add
and
adc
or
add
add
add
push
add
and
or
add
add
nop
inc
or
inc
add
push
nop
add
inc
add
adc
or
add
test
add
inc
or
inc
add
add
inc
or
add
and
andb
inc
add
mov
inc
and
add
dec
or
add
inc
xor
rolb
mov
or
mov
add
or
push
inc
addb
sbb
add
pop
add
or
add
add
add
add
add
add
inc
test
nop
and
add
or
pusha
add
inc
inc
mov
add
add
movsl
inc
mov
adc
and
nop
addl
bound
xchg
adc
inc
add
add
add
and
lcall
add
inc
inc
add
add
and
.byte
.byte
mov
add
dec
je
add
jae
add
je
add
add
test
add
loopne
add
dec
jb
add
add
add
xchg
outsb
jae
add
je
add
jae
add
add
int3
jb
add
add
test
add
dec
jae
add
jb
add
je
add
jb
add
jae
add
jae
add
jae
add
jae
add
jae
add
add
add
add
mov
jae
add
add
add
je
add
je
add
je
add
add
add
add
and
add
jne
add
add
add
pop
jne
add
add
add
ja
add
ja
add
jbe
add
jbe
add
jbe
add
ja
add
add
sub
add
jbe
add
add
add
sbb
add
fdivs
add
jbe
add
add
data16
add
jne
add
jbe
add
jne
add
jne
add
ja
add
ja
add
jne
add
jne
add
jne
add
jbe
add
add
ja
add
add
add
js
add
ja
add
add
or
add
js
add
add
add
js
add
add
jns
add
js
add
add
mov
add
add
mov
js
add
jns
add
js
add
add
cmpb
cmpsb
js
add
js
add
js
add
add
add
add
jns
add
add
test
add
add
add
jns
add
jns
add
jns
add
jns
add
add
add
jp
add
add
and
add
add
xor
add
add
add
add
adc
stos
out
add
add
push
add
add
inc
add
and
add
mov
add
add
add
dec
push
inc
add
add
add
push
dec
inc
dec
xor
cs
insb
add
add
insb
jae
jb
jo
push
add
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
add
je
jns
je
insl
inc
imul
jns
add
add
je
outsl
insl
insl
popa
outsb
fs
imul
insb
jae
jb
outsb
push
add
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
jb
jbe
push
jns
gs
add
add
je
jne
jb
outsb
je
jb
arpl
jae
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
push
jne
jae
inc
jbe
outsb
je
add
add
gs
je
push
push
add
add
push
popa
imul
insb
gs
bound
arpl
add
popa
insb
inc
jb
add
add
je
je
jb
jne
dec
outsb
outsw
inc
add
add
je
jne
jb
outsb
je
jb
arpl
jae
add
add
je
jbe
outsb
je
add
add
je
imul
push
jo
arpl
js
add
add
je
imul
push
jo
arpl
add
add
je
imul
je
add
add
fs
imul
add
add
push
imul
outsl
dec
jne
je
inc
jns
add
add
je
outsl
insb
jne
gs
outsb
outsw
jb
popa
je
outsl
outsb
push
add
add
gs
imul
add
dec
jo
outsb
push
jb
arpl
jae
add
inc
insb
outsl
jae
dec
popa
outsb
fs
add
add
jb
popa
je
gs
popa
addr16
add
add
dec
outsl
popa
fs
imul
js
add
add
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
add
push
gs
outsb
push
gs
js
gs
imul
gs
add
push
gs
jb
outsl
jb
outsl
fs
add
dec
jne
inc
imul
gs
jb
arpl
fs
jae
add
add
inc
gs
jns
je
insl
push
imul
insb
gs
imul
jb
popa
je
inc
jbe
outsb
je
add
push
dec
inc
dec
dec
xor
cs
insb
add
add
je
popa
arpl
outsl
outsb
inc
js
add
add
push
push
js
arpl
gs
add
add
inc
gs
imul
add
push
dec
dec
push
inc
push
dec
cs
insb
add
add
jb
outsl
jb
popa
je
inc
push
imul
add
inc
gs
gs
dec
gs
add
add
push
je
inc
insl
jo
add
add
jb
jo
dec
push
add
add
push
je
push
je
dec
push
add
add
push
je
inc
jo
push
add
add
jb
outsl
dec
outsb
je
add
inc
push
xor
cs
insb
add
add
push
gs
jae
addr16
add
add
dec
outsl
popa
fs
je
imul
inc
jb
popa
je
inc
imul
jb
insl
push
add
add
push
outsb
fs
gs
popa
addr16
add
add
inc
gs
jb
jns
imul
add
je
jns
inc
outsl
insb
outsl
jb
add
inc
gs
insb
addr16
jb
arpl
add
push
push
outsb
outsl
ja
add
add
addr16
popa
imul
je
jo
gs
bound
arpl
add
push
imul
add
add
push
gs
insb
addr16
je
insl
push
gs
push
add
add
imul
popa
jae
push
add
add
inc
outsb
popa
bound
imul
add
push
gs
outsl
jb
addr16
jne
fs
imul
add
outsb
jae
popa
je
dec
gs
popa
add
add
inc
gs
insb
addr16
je
insl
add
add
push
gs
imul
outsb
addr16
add
add
ja
jo
imul
add
jo
je
push
popa
addr16
add
add
inc
gs
insb
imul
je
add
inc
imul
outsl
ja
add
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
add
inc
imul
jae
popa
addr16
add
add
inc
outsb
fs
imul
add
je
outsl
arpl
add
add
inc
gs
imul
js
push
add
add
dec
outsl
popa
fs
jne
jae
jb
add
add
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
add
je
jns
je
insl
dec
gs
imul
push
gs
jne
jae
jb
add
inc
jb
ja
outsl
arpl
push
arpl
add
jae
popa
addr16
outsl
js
add
add
ja
arpl
inc
js
add
add
fs
arpl
push
add
add
je
imul
outsb
addr16
add
add
inc
gs
imul
jb
popa
fs
jb
arpl
jae
add
add
inc
outsb
jne
push
imul
add
push
outsl
jae
dec
gs
popa
addr16
add
inc
inc
dec
xor
cs
insb
add
add
je
gs
inc
outsl
insb
outsl
jb
add
add
je
gs
dec
jne
push
add
add
je
gs
inc
js
outsb
je
outsl
imul
add
push
gs
imul
add
add
je
imul
outsl
jb
add
push
inc
push
push
cs
insb
add
add
pop
pop
jae
je
popa
jo
pop
je
jo
add
add
pop
pop
imul
add
add
arpl
inc
imul
pop
gs
je
add
pop
imul
insl
add
add
fs
jae
pop
imul
add
jae
je
jae
jb
popa
je
gs
add
add
pop
pop
jo
pop
arpl
insl
outsl
fs
add
gs
je
add
add
pop
gs
je
add
je
jne
jo
jb
add
pop
arpl
imul
js
gs
pop
push
gs
add
add
pop
arpl
je
outsl
insb
data16
add
add
jo
pop
insw
outsl
fs
add
pop
pop
addr16
popa
imul
inc
dec
dec
inc
push
dec
xor
cs
insb
add
add
inc
jb
popa
je
push
jb
jo
jb
jns
push
popa
addr16
add
add
push
jb
jo
jb
jns
push
add
add
dec
insl
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
popa
je
add
inc
inc
push
inc
push
dec
xor
cs
insb
add
add
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
add
push
gs
jo
outsb
dec
gs
add
add
addr16
insb
outsl
jae
dec
gs
add
push
gs
outsb
jne
dec
gs
add
add
addr16
jo
outsb
dec
gs
js
add
add
addr16
gs
popa
insb
jne
inc
js
add
dec
dec
inc
xor
cs
insb
add
add
push
outsb
imul
imul
inc
outsl
dec
outsb
imul
add
add
inc
outsl
push
popa
jae
dec
gs
inc
jb
add
add
push
dec
inc
inc
jb
insl
push
je
imul
outsl
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
add
push
popa
jae
dec
gs
inc
insb
insb
outsl
arpl
add
add
add
add
add
add
jnp
add
je
add
jnp
add
jne
add
jl
add
add
shlb
mov
add
add
add
add
ja
add
add
add
add
add
add
add
je
add
cld
jl
add
jns
add
jge
add
jno
add
add
add
add
push
jp
add
jno
add
je
add
jae
add
je
add
add
test
add
loopne
add
dec
jb
add
add
add
xchg
outsb
jae
add
je
add
jae
add
add
int3
jb
add
add
test
add
dec
jae
add
jb
add
je
add
jb
add
jae
add
jae
add
jae
add
jae
add
jae
add
add
add
add
mov
jae
add
add
add
je
add
je
add
je
add
add
add
add
and
add
jne
add
add
add
pop
jne
add
add
add
ja
add
ja
add
jbe
add
jbe
add
jbe
add
ja
add
add
sub
add
jbe
add
add
add
sbb
add
fdivs
add
jbe
add
add
data16
add
jne
add
jbe
add
jne
add
jne
add
ja
add
ja
add
jne
add
jne
add
jne
add
jbe
add
add
ja
add
add
add
js
add
ja
add
add
or
add
js
add
add
add
js
add
add
jns
add
js
add
add
mov
add
add
mov
js
add
jns
add
js
add
add
cmpb
cmpsb
js
add
js
add
js
add
add
add
add
jns
add
add
test
add
add
add
jns
add
jns
add
jns
add
jns
add
add
add
jp
add
add
and
add
add
xor
add
add
add
dec
adc
mov
outsl
lcall
pop
cmpsl
and
xchg
inc
adc
and
sbb
shll
add
lret
push
mov
cmp
jae
or
add
jo
xchg
lret
test
xchg
inc
in
push
in
clc
push
push
das
lods
int3
cld
aad
test
push
xchg
dec
mov
ss
inc
or
mov
test
inc
fcoml
divl
pop
data16
mov
mov
adc
loopne
add
or
clc
dec
or
adc
shrl
lret
dec
shrl
fs
pop
cmp
in
andl
sub
lret
mov
aas
cmpsb
movsb
xchg
or
xor
cmp
scas
lret
xchg
test
and
hlt
ret
aaa
rolb
aaa
mov
xchg
mov
test
xor
iret
fcompl
dec
mov
mov
dec
popa
dec
iret
inc
push
out
mov
hlt
mov
pop
movl
xor
push
ljmp
cmp
dec
clc
lods
xor
test
in
fsubrl
sbb
or
scas
pusha
mov
mov
xchg
xchg
push
jnp
and
xchg
and
xor
stc
or
movsl
mov
adc
push
xchg
sbb
and
clc
out
test
std
pop
call
pop
scas
pop
cld
fdivrl
call
fcmove
inc
cmp
mov
adc
addb
test
push
lret
cwtl
mov
inc
je
add
xorl
xchg
jnp
and
cltd
jbe
fwait
inc
and
jne
mov
lcall
push
dec
and
dec
push
mov
dec
pop
sbb
xchg
or
pop
and
mov
jo
pop
xchg
lds
outsb
test
dec
mov
pusha
neg
adc
clc
int3
lds
ret
mov
test
adc
into
jg
xchg
fistpl
and
mov
xchg
out
sahf
in
cmpl
mov
nop
cli
pop
sbb
lods
jecxz
push
fbstp
js
mov
out
jecxz
fwait
jo
cmp
rcll
sbb
sbb
test
sbb
lahf
loop
xchg
sub
mov
jb
pop
push
push
cmp
add
dec
jmp
int
push
ret
xor
je
andb
push
loop
cmc
ljmp
xchg
or
and
mov
mov
frstor
mov
lret
lret
adc
leave
adc
into
daa
cmc
stc
lds
mov
lods
fwait
aad
or
mov
popf
or
arpl
pop
test
rol
jb
cwtl
cmp
lock
ja
push
mov
or
add
lret
lret
ja
mov
not
sub
nop
pop
and
hlt
inc
fildll
xchg
and
fsubr
lds
or
xchg
or
fcmovnu
xor
out
push
inc
lds
or
stos
jle
xor
fistl
dec
mov
jp
mov
in
outsl
je
ficomps
mov
sub
ljmp
loop
inc
mov
enter
clc
adc
adc
gs
sbb
mov
or
xchg
xchg
pusha
aaa
test
jmp
js
push
cmp
inc
arpl
pusha
jg
out
test
popa
cmpsl
fldenv
lret
xlat
cmp
and
mov
lret
lea
push
lahf
push
data16
and
or
movsb
xchg
adc
rcrl
add
enter
xchg
jge
lret
mov
jns
mov
and
cmp
js
and
push
sbb
cltd
fisttpl
xchg
cmp
jo
mov
adc
addr16
fcom
repz
adc
test
xchg
aad
sub
inc
popf
pop
lock
lds
lahf
dec
rclb
mov
cmp
mov
pop
pop
popa
pop
shll
enter
mov
cwtl
hlt
repnz
sahf
xchg
out
dec
ja
mov
sbb
jl
imul
clc
cld
cs
and
inc
nop
sub
mov
push
aam
jl
clc
fwait
mov
push
add
mov
ljmp
xor
dec
out
in
cmp
pop
pop
and
push
or
iret
lret
lock
shlb
cmp
andl
clc
sub
mov
in
dec
dec
imul
cltd
push
lods
jae
and
ljmp
insl
outsb
mov
adc
js
mov
js
fs
add
imul
fcmovb
test
mov
mov
add
mov
test
lahf
fmul
mov
xchg
pushf
dec
xor
movsl
movsl
inc
cld
push
fsubs
mov
push
push
test
loop
gs
push
notl
inc
cmp
mov
cmp
ret
sti
mov
push
jmp
es
and
movsb
mov
sub
ror
popf
xor
cmp
push
insl
sub
outsb
mov
je
loopne
push
sub
xor
pop
stos
pop
adc
test
xchg
mov
mov
and
pop
out
sub
lret
mov
cmp
dec
addr16
pop
lret
dec
push
inc
js
mov
pop
aad
inc
mov
insl
dec
mov
xor
jl
xchg
cmp
test
adc
adc
sbb
mov
jge
cmpsb
gs
adc
ja
enter
sub
js
push
inc
xchg
sbb
arpl
dec
dec
out
test
pop
cmpsl
aam
aam
loopne
mov
fdivs
shll
cmp
in
pop
and
mov
test
pusha
jbe
aad
in
or
xor
sbb
cmp
cwtl
call
xor
bound
jno
pop
dec
sbb
into
test
adc
inc
and
and
mov
xchg
jns
push
adc
je
outsb
sub
jnp
mov
sbb
dec
test
iret
push
movsb
mov
pop
jge
mov
fidivs
push
inc
or
xchg
leave
mov
mov
mov
xchg
ljmp
xchg
mov
mov
fs
notb
out
pop
mov
push
mov
mov
sahf
outsl
repz
xchg
sbb
or
cmp
pop
shl
dec
lret
clc
cmp
cltd
push
lea
inc
add
cmp
xor
movsl
inc
or
shrb
xchg
xor
sbb
fdivrs
mov
push
dec
jne
fcmovne
decl
pop
mov
int3
arpl
cmp
sub
enter
push
dec
push
roll
lret
loop
adc
bound
xchg
add
mov
bound
sub
out
ss
mov
and
popf
dec
cmove
fwait
mov
cmp
das
ror
outsb
ljmp
cmp
pop
movl
es
jmp
mov
sahf
sub
lods
adc
nop
fldl
lret
lcall
xchg
adc
dec
and
jge
jae
inc
cmp
dec
adc
addr16
push
sub
scas
cmp
jmp
pop
sub
sahf
dec
pusha
mov
mov
outsl
inc
xor
xchg
out
sbb
sub
ja
mov
adc
jbe
sub
js
lahf
rcl
shrl
mov
xchg
mov
push
xor
fdivrl
clc
imul
je
in
add
das
nop
shrl
mov
jmp
mov
mov
pusha
jp
xchg
push
jg
or
scas
das
fwait
test
mov
test
mov
clc
mov
or
inc
mov
outsb
xlat
popa
jbe
inc
jne
cmpsb
ret
fs
jmp
fldenv
fdivs
push
clc
add
movl
dec
test
mov
daa
flds
xor
and
pop
sbb
jg
mov
pushf
out
cltd
mov
mov
clc
dec
jmp
jecxz
stc
xlat
mov
daa
inc
lret
int3
push
scas
mov
pusha
mov
sub
repz
fwait
jecxz
popa
lds
pop
or
movsb
movb
mov
mov
scas
scas
mov
shl
push
mov
mov
adc
js
pop
test
dec
pop
mov
arpl
dec
inc
push
push
sbb
test
lods
jnp
push
js
dec
add
sti
mov
pop
and
movsb
mov
js
pop
out
pop
insb
inc
or
dec
or
push
mov
jg
xor
cmp
lret
sub
ficoml
shlb
xlat
sarl
cmp
insb
addr16
sub
std
test
out
dec
in
push
in
lret
out
mov
mov
rolb
sub
dec
cmpsb
fistps
iret
mov
mov
push
lods
pop
push
sbb
mov
cmovno
mov
ljmp
hlt
add
jne
or
xchg
or
fs
pop
test
jbe
xchg
jmp
push
pop
out
inc
pop
push
pop
jbe
dec
clc
mov
aam
mov
imulb
ss
arpl
into
fsts
push
icebp
movsl
test
mov
lret
call
test
and
inc
add
sub
out
ja
adcb
push
xor
das
and
repz
pop
inc
js
pop
outsb
stc
repnz
stc
test
or
loope
daa
daa
push
in
pushf
and
sub
cmp
xchg
imul
scas
or
dec
shlb
xor
mov
push
and
nop
xchg
cmp
add
mov
mov
inc
pop
xor
inc
sub
and
insb
lds
dec
sbb
xor
les
mov
sbb
js
popa
add
inc
dec
mov
adc
lds
jmp
sbb
rcrl
cltd
cwtl
mov
push
inc
orl
in
xchg
adcb
cli
sub
push
xchg
es
add
mov
enter
jne
in
lret
stc
xor
outsb
out
ljmp
jecxz
test
scas
or
repz
and
mov
imul
mov
mov
cld
cwtl
mov
fcmovnbe
dec
adc
loop
outsl
push
mov
push
push
push
je
cmp
rol
rcl
mov
push
jmp
out
mov
dec
js
jmp
or
repnz
xchg
popl
lock
cli
jb
push
out
insl
jb
pop
out
push
mov
in
mov
mov
loop
lods
jo
fisubs
cmp
arpl
es
pop
adc
test
mov
clc
mov
aas
jg
hlt
cltd
mov
push
add
scas
pop
dec
and
imull
sbb
mov
xchg
mov
xchg
incl
xor
ret
test
push
bound
inc
addr16
xor
or
fdivr
sub
jp
repz
into
shlb
add
pop
rolb
lret
fwait
movsb
push
push
sahf
cmp
inc
sub
mov
shll
js
movsb
xchg
mov
sub
out
test
lret
push
lea
into
in
dec
pop
imul
mov
mov
mov
shll
dec
or
out
jo
negb
inc
cmp
adc
or
mov
inc
and
mov
out
add
lods
mov
add
in
aad
lds
mov
sub
lods
mov
adc
ds
jle
mov
popa
lods
xor
rclb
iret
in
mov
jb
popa
addr16
jno
push
dec
xor
xchg
fcoml
mov
cltd
les
mov
enter
mov
jmp
lods
test
test
xchg
in
cmp
sarb
and
sbb
jge
hlt
mov
push
inc
push
icebp
mov
popl
sbb
cmp
js
xchg
dec
or
mov
mov
test
inc
mov
and
jo
sub
add
dec
sbb
mov
pop
ljmp
mov
sub
into
pop
and
addl
sbb
jge
dec
inc
scas
xchg
pop
rcrl
lods
and
bound
test
shll
inc
push
adc
mov
push
clc
shrl
inc
es
sti
rcll
cli
stc
out
mov
dec
mov
enter
mov
ja
cmp
adcb
cmpsb
push
and
adc
cwtl
jae
mov
js
push
lcall
dec
cli
push
inc
lret
leave
jecxz,pt
sbb
add
jp
and
mov
sbbb
add
in
adc
xor
insl
dec
sub
iret
iret
or
addr16
notb
pop
xor
inc
cmp
js
insb
mov
mov
lret
shl
lcall
out
mov
pushf
mov
das
clc
xchg
adc
xchg
or
adc
jg
negb
add
mov
pusha
and
js
and
imul
sub
add
dec
push
adc
mov
bnd
test
out
inc
ror
test
sub
mov
clc
divl
popa
or
repnz
pop
shll
aad
jecxz
andl
js
push
scas
popf
stos
inc
mov
add
cmp
pop
ret
mov
mov
daa
sub
mov
cmp
sub
mov
ja
xchg
mov
stos
insl
leave
mov
add
lret
enter
in
push
fidivs
mov
mov
add
insb
clc
js
imul
jo
dec
add
jnp
cmp
lds
inc
cmc
mov
jae
adc
js
sub
pop
or
xchg
mov
nop
sbb
cs
sub
inc
adc
repz
scas
xchg
pusha
into
pop
js
sub
or
mov
push
cwtl
rorl
mov
pop
lods
sbb
dec
aas
mov
cwtl
mov
sbb
jmp
push
mov
adc
inc
inc
shrl
es
faddl
andb
lock
xchg
xchg
add
lret
hlt
jo
cli
mov
addl
data16
cmpsb
push
clc
aam
and
sub
sbb
jns
push
clc
dec
jb
mov
test
mov
and
fdivrs
jmp
jno
push
shr
test
leave
repz
xchg
insb
ja
test
dec
and
inc
xlat
or
inc
sti
sbb
dec
lds
in
push
arpl
or
sbb
pop
dec
mov
adc
mov
clc
aam
out
cmpsb
dec
cmpsl
cmpl
decl
sub
mov
add
jg
pop
mov
or
daa
xchg
pop
or
mov
mov
sub
test
sub
xor
loopne
sub
ja
dec
aad
xchg
mov
add
loope
clc
push
push
test
stos
hlt
cmp
adc
mov
mov
push
adc
arpl
xor
lods
imul
adc
mov
sbb
mov
je
ret
dec
test
lds
aad
test
jno
lret
mov
jno
push
jb
arpl
bound
enter
or
mov
inc
test
fsub
adc
into
or
push
mov
push
mov
les
insb
or
and
jmp
or
mov
push
push
push
push
popf
repz
mov
sub
push
out
xchg
and
mov
xor
sub
or
adc
test
push
or
jp
sub
adc
sbb
adcb
push
or
mov
cmp
dec
es
and
fwait
outsb
fsubs
mov
add
inc
lods
imul
sub
sub
dec
int
xchg
or
sub
adc
adc
sbb
push
loop
adc
into
out
js
xlat
stc
incl
repz
cmp
ja
mov
sub
mulb
and
scas
cmp
push
xchg
insb
into
dec
lods
cmpsl
cmp
jo
lds
hlt
jae
sub
insb
pop
loop
cmp
push
xchg
mov
das
enter
cmp
mov
cmp
sbb
out
jp
adc
add
aaa
cmc
sbb
push
jg
fiadds
inc
insb
lods
outsl
in
dec
mov
rcll
xlat
xchg
mov
xor
pop
aas
repz
jne
xor
call
inc
insb
cmp
in
adc
dec
insl
jae
jmp
test
mov
mov
scas
sbb
adc
pusha
outsb
xchg
notl
sbb
into
fists
xchg
pop
loopne
sbbl
inc
mov
xor
loopne
mov
push
mov
popf
jle
adc
adc
add
dec
and
push
dec
mov
cs
jecxz
mov
ja
rcrl
inc
leave
lret
cmpsb
xchg
sbbl
jbe
xchg
call
mov
push
gs
push
icebp
adc
in
mov
int
in
sarl
out
addr16
cmc
pop
jae
imul
cli
out
or
filds
repnz
jle
mov
ret
fstpl
pop
ja
mov
jecxz
test
push
sahf
mov
mov
jnp
xchg
adc
sbb
mov
jmp
push
xor
loope
mov
mov
adc
dec
arpl
rcrl
sarb
loope
jle
fs
xchg
movsl
xchg
add
ret
jnp
pushf
movsb
cwtl
cltd
cmp
jl
sarb
daa
or
rcll
sbbb
jg
adc
lds
mov
iret
fdivrs
sbb
pushf
insb
push
gs
fistpl
roll
and
adc
and
outsl
cmp
rcr
xchg
mov
dec
dec
push
test
sbb
out
into
mov
sbb
sub
loopne
xor
adc
cli
push
adc
je
ljmp
lds
into
ja
test
jno
xchg
pop
mov
insb
and
sub
mov
mov
xchg
je
insb
sbb
cmp
ja
nop
sbb
lock
mov
lods
push
mov
fsubrl
mov
std
sub
negb
fistl
shl
inc
pop
addr16
les
cmp
clc
daa
cmp
in
mov
test
mov
int3
or
and
subb
mov
orl
sbb
out
rorb
sub
adc
inc
cmp
sub
sub
icebp
ljmp
jle
jg
cmp
imul
jle
aad
mov
mov
shlb
inc
pop
ljmp
jmp
dec
loope
push
xor
sub
push
fs
rcll
mov
and
fstpt
inc
gs
xchg
outsb
mov
cmp
out
add
pop
fwait
jo
cmp
aam
mov
sub
push
mov
sub
and
popa
bnd
push
pop
mov
cmp
jp
xor
xchg
jl
xchg
inc
test
sbb
jge
aas
mov
data16
sti
mov
out
sbb
jno
cli
loope
imul
xchg
clc
sbb
sub
jb
sbb
xor
mov
mov
call
mov
inc
mov
lock
test
out
loope
xchg
sub
ds
xchg
dec
in
and
aaa
mov
stc
imul
adc
testl
pop
addr16
sub
jae
popf
mov
aas
mov
out
aaa
fistpll
xchg
ljmp
jle
adc
jbe
rclb
mov
sub
out
shlb
ret
in
jae
movb
adc
arpl
arpl
aaa
aam
xchg
cli
push
xchg
mov
adc
imul
and
sbb
dec
sub
clc
sbb
sub
hlt
mov
xor
xchg
mov
mov
mov
cmpsb
jle
nop
mov
sahf
jmp
lods
aas
cmp
lcall
sub
add
ds
ret
repz
pop
mov
adc
mov
inc
fdivrp
adc
enter
std
add
shlb
adcb
test
addr16
sbb
lret
repz
aas
mov
es
pushw
pop
push
dec
in
in
jg
out
cmpsb
imul
dec
cmp
jg
cmpb
test
out
out
sbb
jb
repz
mov
dec
xchg
shl
aas
or
mov
aas
lret
adc
push
mov
aad
adc
jmp
pop
xor
cmp
mov
sahf
cmp
hlt
pusha
and
aas
in
mov
es
movsl
mov
aas
mov
in
jle
adc
loope
jmp
dec
dec
cmp
adc
test
addr16
cmpb
cmc
repz
je
push
adc
cmc
es
data16
mov
aas
dec
xchg
adc
loop
imul
repnz
jno
pusha
addr16
aam
xlat
jae
inc
push
arpl
mov
push
loopne
in
jae
shl
jmp
xchg
outsl
mov
jle
xchg
pushf
cmp
ja
pop
je
inc
cwtl
jl,pt
mov
or
fidivrs
test
enter
fbld
imul
pop
mov
sub
test
out
pushf
sbb
jae
inc
mov
pop
xchg
adc
aas
xchg
mov
es
shll
mov
cld
ret
sbb
nop
stos
imul
bound
and
repz
mov
scas
xorb
jae
movb
xor
cmpsb
arpl
aaa
lds
mov
xor
fstpl
adc
loop
imul
je
adc
adc
sub
mov
stos
adc
xor
mov
inc
popw
aaa
stc
mov
insb
add
nop
xlat
popa
fisubrl
jbe
inc
int3
cmp
mov
sub
mov
and
shll
inc
fs
mov
mov
pop
out
aaa
ret
mov
cmp
in
std
jmp
push
ja
inc
jge
cmp
int
aas
adc
test
rorl
jo
xor
dec
ds
pop
mov
pushf
test
and
sarb
adc
loope
jmp
cmpsb
dec
cmp
xchg
aas
sub
out
in
dec
ret
out
jae
movb
xchg
pmulhuw
and
mov
aas
cmpsl
dec
cs
cmp
or
jmp
shrl
jbe
shl
mov
arpl
adc
mov
jp
sbb
sub
outsl
adc
arpl
adc
ret
sahf
lret
lret
popa
aaa
xchg
mov
fistl
jmp
adc
test
popf
add
xor
les
dec
stos
adc
ds
and
mov
dec
data16
ret
imul
fldt
testb
jg
orb
jge
cwtl
inc
cmp
inc
push
ds
or
xor
cmpsb
sub
aas
mov
push
cwtl
add
and
imul
sbb
dec
jg
add
out
inc
cmpsl
xchg
ret
out
pop
inc
push
ds
adc
mov
mov
mov
jg
nop
fucom
xchg
jmp
sbb
aam
aas
adc
sub
out
xor
cli
repz
cs
aas
mov
data16
out
ret
push
imul
imul
pop
mov
adcb
jle
inc
pop
stos
add
xor
mov
test
aaa
xchg
aas
cltd
xchg
jmp
adc
loope
imul
add
stos
push
test
and
scas
push
jnp
sub
cmpsl
stos
adc
cmp
shrb
fld
je
add
in
xchg
mov
roll
mov
gs
call
xchg
shlb
andl
mov
mov
mov
xchg
dec
out
sbb
xor
dec
daa
dec
cmp
test
adc
cmp
mov
xor
cmpsl
idivl
sahf
jbe
pop
imul
loope
cmpsb
adc
xor
push
pop
xchg
aaa
push
ret
push
lret
clc
fsts
mov
lea
jl
or
mov
sub
mov
jnp
scas
push
xchg
mov
dec
sub
push
mov
into
popa
test
adc
adc
mov
jb
iret
into
pusha
lahf
lret
and
mov
inc
pop
xchg
in
fucomp
inc
mov
test
lods
es
push
lret
or
add
sti
test
testl
cmc
test
iret
cmp
hlt
mov
add
shrb
clc
lcall
pusha
push
jne
clc
mov
test
sbb
out
adc
dec
adc
inc
clc
push
jns
cltd
dec
adc
pop
imul
repz
adc
xor
sbb
cmc
sbb
dec
mov
cmp
pop
sub
mov
push
push
jb
jo
inc
jbe
and
mov
scas
lods
sbb
fstpt
or
mov
xchg
in
es
nop
adc
decb
push
add
inc
or
dec
or
aad
clc
ret
xchg
imul
fildl
dec
out
sbb
mov
out
adc
mov
lock
cmp
push
mov
mov
test
xor
cmc
lret
jecxz
xor
inc
mov
aaa
xchg
repnz
scas
jl
dec
bound
hlt
out
test
adc
mov
push
popf
push
dec
jle
adc
mov
sub
dec
xor
pushf
and
insb
mov
test
iret
lret
cwtl
xor
mov
fisubrl
jl
loopne
stc
xchg
aas
mov
out
cmp
adc
sub
jle
mov
push
jb
mov
add
lret
add
add
sbb
push
nop
sub
call
push
fs
mov
sbb
pop
stos
cmp
cltd
add
inc
adc
lret
mov
jge
sbb
sbb
mov
in
sub
je
shrl
add
lret
mov
aas
xor
pop
and
mov
pop
jns
fdivr
add
or
dec
mov
mov
mov
pop
aam
mov
movsb
xchg
sub
adc
lret
sub
cmp
mov
das
and
inc
cmpsb
inc
imul
sbb
mov
pop
pop
or
icebp
sbb
testl
orb
xchg
in
xchg
test
sub
and
idivb
mov
movsl
jl
movsb
adc
xchg
xor
fisubrl
xchg
jns
jbe
movsb
or
xchg
cmp
add
andl
sarl
add
lret
mov
cmpsb
pop
jno
mov
ficompl
mov
add
xor
sbb
sub
sbb
dec
and
fimull
xchg
popa
sbb
ret
in
mov
roll
lret
scas
pop
sbb
push
int
xadd
or
dec
cltd
sub
cltd
clc
rcll
fnstcw
pop
inc
mov
xchg
fwait
dec
xchg
call
sbb
loop
lret
std
in
stos
into
ss
andl
bound
sahf
lock
cmp
and
sbb
addl
sub
xor
int3
cmpsl
es
pop
dec
xchg
push
mov
es
mov
mov
hlt
mov
loope
jmp
add
mov
sub
inc
ret
loope
sub
arpl
mov
pop
data16
aaa
mov
stos
sbb
push
adc
loope
imul
testl
and
inc
outsl
sub
repz
sub
aas
cli
xor
mov
mov
mov
in
jg
adc
ja
shr
xor
sub
sbb
std
jl
inc
or
dec
cmpsl
jecxz
sahf
xor
pop
xchg
dec
adc
bound
push
dec
mov
adc
stc
and
ret
adc
cmp
adc
arpl
es
fnstsw
pusha
stc
in
jle
adc
testb
jmp
sub
addr16
adc
lds
xchg
bound
ret
mov
mov
aaa
add
cli
mov
popa
adc
popa
mov
in
xchg
adc
xor
sub
fmuls
mov
or
add
mov
cmpsb
and
mov
scas
mov
jle
adc
loope
imul
in
addb
lods
int
xchg
inc
xor
icebp
jae
xor
cmpsb
jb
sti
aaa
fidivrs
leave
mov
pop
fwait
gs
das
adc
bound
testb
call
sub
pushf
inc
imul
mov
cmpsb
popa
out
aaa
xchg
aas
flds
in
jg
adc
loope
imul
dec
cmp
mov
xor
sub
rol
aas
pushf
inc
xchg
sub
cmpsb
mov
aaa
sarb
inc
dec
xchg
sti
nop
fdivrs
adc
popa
cltd
jmp
mov
movl
xchg
xchg
cmp
adc
and
mov
cmp
mov
sarb
repz
xchg
mov
gs
jle
adc
popa
push
pop
push
jb
cmpl
es
inc
xchg
cli
repz
inc
dec
mov
aas
mov
mov
icebp
aas
xchg
jns
xchg
adc
data16
enter
mov
dec
adc
test
addr16
cmc
xchg
ret
pop
je
lcall
lods
mov
aaa
loope
nop
dec
cmp
dec
loopne
in
jle
nop
jmp
mov
inc
popa
push
mov
push
and
adc
xor
sub
cmp
jno
jbe
movsb
arpl
mov
aad
xchg
aas
mov
gs
push
nop
iret
fadds
sub
repz
outsl
test
addr16
push
sbb
jae
inc
xchg
mov
aas
xchg
mov
es
data16
aaa
sarl
add
bound
cltd
cld
in
jle
adc
ja
inc
sub
mov
imul
mov
mov
xchg
sub
popa
stos
arpl
les
adc
popa
out
imul
cmp
xor
cmpsl
addb
mov
jb
enter
mov
sub
fidivs
idivl
in
cmp
xchg
popfw
gs
sbb
repnz
jg
add
sbb
cwtl
push
ret
add
dec
mov
mov
inc
mov
aas
scas
mov
cmpsb
pushf
lods
push
nop
sbb
mov
shlb
decl
sub
out
xor
in
repz
mov
mov
inc
data16
mov
mov
gs
jmp
shl
xchg
pop
mov
data16
sub
lahf
inc
adc
push
je
aaa
mov
aas
or
data16
lods
aas
fsubr
jbe
sub
in
std
jmp
jge
mov
ss
test
out
dec
push
popa
inc
int
and
sbb
mov
pushf
adc
and
push
xchg
lds
jle
and
stos
jmp
fistl
addb
mov
ret
xor
sbb
xor
sbb
lock
push
pop
xchg
inc
flds
outsb
jmp
sub
addr16
subl
mov
mov
and
into
aaa
mov
mov
inc
xchg
ja
gs
jle
xchg
fbstp
inc
aad
mov
push
adc
sub
les
sub
mov
mov
xchg
fwait
mov
mov
mov
gs
test
or
imul
pop
cmp
adc
push
cs
push
sub
jae
inc
cmp
dec
xchg
mov
cld
cmpsb
jo
shll
push
xchg
imul
jmp
inc
and
jne
xor
imul
test
sbb
inc
xor
pop
xchg
add
aas
stos
mov
cmpsb
mov
jbe
test
mov
nop
adc
shrb
xchg
push
or
addb
sub
out
xlat
sarb
inc
sub
jae
inc
and
aas
fdivs
out
xor
and
cmp
add
mov
testl
jg
mov
and
xchg
sbb
test
cmp
daa
repnz
sbb
xchg
sti
jb
sbb
dec
inc
adc
sbb
or
andb
add
out
xor
rorb
mov
aaa
ja
movb
xchg
call
pop
xchg
jmp
daa
adc
ljmp
lods
xchg
add
call
xor
cmpsb
or
pop
scas
imul
and
andb
mov
bnd
cmpsb
xor
jbe
inc
xchg
dec
xlat
lcall
and
sbb
push
int3
rcrl
pop
imul
into
jb
adc
xorb
xchg
mov
nop
mov
jp
inc
and
and
jmp
andl
in
hlt
mov
popa
int3
roll
jg
mov
in
xor
lock
mov
shll
mov
stc
sbb
jnp
push
and
and
cld
jns
movsb
cmc
mov
sub
jbe
push
fnstsw
mov
mov
mov
int
xor
mov
sub
inc
cmovge
xchg
or
push
daa
stc
mov
xor
sub
sbb
into
jae
dec
or
jb
and
aas
aad
cmpsl
sub
mov
addb
mov
rclb
inc
inc
mov
or
stc
lods
shlb
add
cltd
test
pop
or
jae
mov
out
sub
fucomp
fnsave
pop
mov
clc
adc
sub
or
inc
or
popfw
jge
push
gs
outsl
lea
enter
pop
jle
dec
or
out
andb
pusha
dec
shl
test
jg
pop
or
pop
xchg
lcall
test
inc
adc
push
adc
dec
adc
push
xchg
es
inc
jno
jmp
dec
or
ja
jae
inc
cmp
ret
decb
cli
inc
rcrb
cli
pop
xchg
fists
lret
lea
xor
das
outsb
xor
sbb
dec
mov
or
sbb
es
push
push
sub
mov
cmp
pop
add
gs
push
iret
jb
stos
mov
xchg
sbb
cltd
pop
test
inc
test
fwait
sbb
fisubl
sub
dec
cmpsl
adc
inc
lahf
sbb
test
int
cmp
inc
test
or
out
push
jmp
mov
hlt
lods
inc
cmc
lcall
mov
xchg
mov
pop
xor
adc
sbb
nop
cmp
dec
mov
into
test
aas
hlt
pop
ljmp
lahf
orl
movsb
pop
adc
add
adc
mov
push
jl
repnz
xor
in
push
push
xchg
sub
adc
mov
pop
xchg
arpl
testl
pop
ljmp
test
lea
aas
int3
les
push
jb
jmp
push
xor
lock
inc
mov
mov
or
bound
dec
cmp
cmp
stos
sub
lods
int3
xchg
sahf
sti
mov
cmp
cmp
ret
lods
adc
push
pop
mov
rep
pop
mov
adc
pop
testl
push
add
xor
fnstsw
dec
sbb
loop
adc
sub
pop
pop
mov
je
xchg
arpl
cmpb
addr16
out
std
xlat
clc
adc
popf
hlt
xorb
sub
mov
repz
cmp
sahf
xor
int3
mov
push
adc
pushf
jge
ret
push
repz
pop
cwtl
xchg
mov
out
push
lea
lcall
pop
lret
cmp
pop
pusha
into
fdivr
and
nop
push
jne
ja
cmpsb
mov
pushf
pop
jmp
jg
js
outsl
push
mov
aad
push
pushf
int3
inc
loopne
jg
inc
adc
roll
xor
popf
fwait
out
sahf
rcrl
jns
pusha
xchg
sbb
inc
pop
pop
mov
mov
ret
push
hlt
neg
test
and
sub
inc
fimull
das
into
sbb
or
jle
inc
sbb
jns
mov
mov
pop
repnz
jns
and
add
es
push
pop
orl
jnp
mov
inc
or
adc
lret
adc
out
int3
bound
cmp
test
jnp
lcall
jns
push
jno
leave
mov
shll
mov
inc
jae
cli
stos
shlb
out
cmc
xor
insb
pop
push
inc
or
cmp
enter
es
std
dec
dec
ljmp
add
loop
push
pusha
das
mov
dec
jg
mov
adc
ficoms
shlb
mov
repnz
out
dec
fs
cmpsl
or
push
into
add
jmp
adc
xorb
xor
or
add
jbe
arpl
mov
ret
adc
jg
add
inc
ljmp
sub
or
ret
mov
xlat
jno
xor
add
pop
movb
or
mov
in
xchg
mov
inc
mov
mov
test
cmp
add
adc
jmp
int
dec
push
jg
popf
ljmp
push
dec
ret
dec
in
or
push
clc
inc
shrl
aas
mov
xchg
dec
ret
dec
popf
popfw
test
adc
popa
inc
shl
loopne
sbb
cmpsb
out
jl
loope
xor
in
sti
std
inc
pushf
imul
mov
mulb
push
mov
mov
dec
dec
imul
fs
mov
aaa
mov
ret
ds
clc
test
fimuls
ret
sub
or
aaa
rcrl
or
mov
ja
mov
sub
clc
jmp
mov
addb
mov
in
mov
sbb
es
mov
test
out
mov
xor
adc
jmp
or
lods
mov
pop
sahf
ret
cld
pop
pop
push
jae
test
and
das
sti
sub
addr16
inc
pop
xor
adc
pop
fstps
or
aaa
subl
jle
push
xor
push
popf
sbb
into
test
mov
jbe
xchg
insb
sub
enter
push
mov
and
nop
push
inc
xchg
out
dec
and
adc
test
sbb
push
fs
mov
xchg
pop
in
jbe
adc
popf
or
das
adc
mov
lahf
pusha
xchg
mov
enter
inc
lret
xor
jb
xor
testb
imul
adc
dec
ljmp
test
out
pop
mov
push
inc
shr
arpl
into
add
lcall
bound
mov
pop
xchg
rcrb
ds
cmp
xchg
adc
jae
add
leave
stc
pop
xchg
sub
mov
and
mov
push
mov
cmp
mov
iret
xor
inc
mov
insb
mov
aaa
idivl
push
es
es
addr16
out
push
dec
dec
ret
push
mov
and
pop
add
inc
aas
js
fldenv
mov
adc
push
mov
mov
mov
mov
cmpsb
mov
adc
sahf
add
add
cmp
imul
aaa
arpl
mov
pop
xchg
sub
xlat
loop
out
or
jb
mov
or
mov
dec
xchg
pop
insb
das
scas
je
cmpsl
xor
sbb
add
xchg
pop
es
pop
lcall
and
ja
xchg
int3
mov
or
scas
sbb
inc
imul
fisubs
push
hlt
subl
cmc
pop
inc
pop
orb
popa
pop
cmpsb
cmp
pop
clc
cmovl
xor
sub
cltd
and
aas
xchg
add
dec
fidivs
hlt
cmp
mov
stc
add
ret
repnz
add
lcall
fmull
adc
inc
push
or
aas
inc
push
mov
dec
add
lods
addl
mul
int
fs
adc
daa
mov
cli
pop
lock
jbe
fwait
inc
std
lcall
mov
shrl
xor
dec
test
ss
mov
imul
pop
sub
or
lock
shlb
cli
mov
inc
mov
push
xchg
mov
adc
mov
ja
rolb
dec
push
scas
inc
aas
orl
push
repz
cmp
adc
mov
shlb
stos
pop
push
imul
sbb
mov
push
test
jae
dec
test
ljmp
adc
pop
ret
xchg
adc
or
push
std
jle
aas
nop
add
addr16
pop
subb
enter
add
pushf
movsb
inc
jmp
or
adc
sub
and
out
testl
loopne
mov
movsb
ret
jns
or
aaa
push
jb
jle
jo
cmpsl
out
add
dec
add
jl
fsubp
iret
arpl
in
mov
loope
scas
fbld
adc
rolb
pop
daa
xlat
leave
pop
adc
into
aam
std
jecxz
fbstp
mov
int
mov
mov
add
sarl
mov
add
std
fld
enter
inc
and
mov
mov
dec
adc
inc
push
push
test
dec
out
push
sbb
push
js
sarb
negb
popf
dec
jbe
pop
popa
add
fmuls
int
call
xchg
inc
in
dec
push
add
inc
adc
add
inc
cmpsb
xor
call
test
dec
mov
cmpsb
mov
sub
popf
inc
inc
insl
push
das
dec
cltd
pop
pop
add
lret
fildl
push
cs
mov
lahf
push
pop
scas
stos
test
jl
les
loop
test
js
scas
xchg
or
test
js
sbb
dec
xchg
lcall
pop
dec
add
rorl
mov
cld
fmuls
icebp
jl
mov
jnp
push
add
cmpsl
into
cltd
out
pop
jno
push
fmulp
pop
xor
xchg
push
lret
aas
pop
scas
les
adcb
add
pop
jns
es
mov
sub
adc
in
ja
jno
lods
ficoml
mov
jmp
mov
repz
loopne
inc
divl
notb
fstpl
xchg
repz
test
dec
cltd
sbb
sbb
inc
inc
cmpl
push
fildll
and
pop
cmp
test
loopne
inc
notl
xchg
test
or
pop
hlt
lret
add
and
sbb
jmp
insb
outsl
adc
fmul
pop
aaa
sbb
push
push
jmp
mov
adc
inc
push
xchg
cmp
pop
push
mov
pushf
inc
test
addl
test
xorb
lahf
es
xchg
data16
pop
inc
sub
repz
mov
mov
jbe
outsb
inc
add
and
addr16
mov
dec
stos
mov
ljmp
and
leave
push
out
repz
inc
and
cld
fs
fdivs
or
sti
std
inc
scas
and
lock
push
push
in
mov
pop
adc
jecxz
icebp
mov
cmp
mov
and
lcall
dec
out
adc
mov
adc
cmp
cwtl
and
out
sbbl
sub
out
lds
shlb
test
fisttpll
lea
mov
push
loop
pop
push
aam
enter
sbb
jb
mov
clc
insb
mov
add
xchg
cmp
mov
cwtl
cmp
jnp
cmp
mov
div
lret
add
roll
mov
and
add
divl
enter
cwtl
jne
rol
in
hlt
push
les
int3
xor
mov
jge
nop
ret
add
push
bound
xchg
shrb
or
data16
lcall
and
adc
add
xchg
xor
loopne
xor
mov
clc
movsb
fidivl
mov
sbb
add
sub
jp
jecxz
push
or
dec
in
mov
aas
lahf
xchg
adc
out
out
and
inc
aam
notl
mov
dec
adc
inc
lock
inc
xchg
sub
cmp
adc
sbb
adc
cmpsb
inc
jecxz
mov
cmc
hlt
das
cltd
mov
in
xor
cltd
cmpsb
ret
adc
testb
sub
and
or
ds
lds
cld
jg
and
insl
inc
add
add
std
aad
subb
mov
mov
sbb
jg
xor
add
aaa
mov
call
xchg
mov
xor
and
adc
mov
adc
das
gs
test
sbb
cwtl
xchg
in
xlat
adc
jo
cmp
ljmp
popa
inc
push
fwait
js
insl
sub
aad
or
sbb
aad
ret
scas
testl
dec
sbb
sbb
test
test
stos
js
cmc
dec
jns
or
hlt
scas
cld
mov
or
cli
dec
loope
cmpsl
mov
push
mov
jb
add
icebp
paddsw
mov
int3
in
ror
pop
ss
push
mov
insl
mov
push
rclb
push
scas
mov
xchg
xchg
cltd
cmp
cwtl
sub
idivb
jns
xor
mov
mov
adc
jmp
imul
jge
jle
scas
cmp
out
or
push
inc
jne
and
fists
mov
and
gs
or
push
mov
mov
adc
repz
popf
in
pop
pusha
fildll
scas
sbb
lea
cmp
out
ds
out
mov
xor
fsubl
inc
les
push
mov
icebp
imul
bound
dec
mov
mov
jmp
addr16
insl
pop
out
sbb
mov
popf
enter
call
roll
out
lret
sbb
adc
jbe
pop
sub
in
ds
lods
jns
push
push
insl
inc
lea
test
gs
sbb
push
push
mov
xchg
or
add
cmp
cmp
xor
xor
cs
insb
add
add
or
adc
cmp
mov
add
es
inc
subb
add
mov
or
sbb
nop
lods
inc
add
mov
dec
add
inc
add
add
add
add
add
addr16
cmpsl
lret
add
or
scas
inc
fisubrs
call
ljmp
pop
imul
fwait
es
jno
and
lods
mov
and
stos
shll
bound
inc
lret
inc
mov
dec
mov
and
and
push
gs
or
mov
je
pop
ds
dec
jecxz
out
test
divb
inc
pop
fists
cli
arpl
das
dec
jmp
adc
fwait
xchg
aas
test
xchg
dec
js
dec
loopne
lret
push
xchg
lods
ja
dec
mulb
lret
cmp
xchg
adcb
orb
ja
cltd
movsb
sbb
mov
dec
cmp
ficomps
mov
stos
inc
addr16
sub
in
lods
test
sbb
test
add
push
cld
jae
push
jmp
movb
out
and
icebp
pop
int3
adc
mov
js
sti
mov
adc
or
ss
aas
pushf
jbe
push
xchg
mov
test
aaa
xchg
outsb
mov
mov
out
add
out
xchg
jns
dec
dec
push
call
pop
movsl
sub
inc
les
loop
lods
push
or
enter
adc
cs
add
ljmp
cwtl
dec
or
xchg
push
sub
pop
js
push
call
roll
dec
push
push
repz
andb
push
aad
and
mov
xchg
fcoml
xor
dec
int3
mov
and
les
popf
xor
divb
jle
stos
push
add
cmp
mov
mov
sub
lods
sbb
hlt
jl
cwtl
mov
mov
mov
hlt
pop
xchg
and
inc
xchg
sti
xor
xor
js
out
mov
or
push
xchg
adc
lahf
aam
rorl
rclb
pop
cmpl
xchg
cmp
adc
lcall
std
rcrb
dec
mov
sbb
rolb
jae
and
xchg
outsl
inc
dec
js
pop
jmp
fistl
lret
cs
cmp
xor
std
imul
js
loopne
adcl
lret
xlat
push
movl
outsl
lods
mov
and
std
inc
cli
fistl
mov
dec
pop
sub
je
mov
lret
jg
mov
jl
lret
fpatan
andb
shrb
pop
push
stc
cmp
arpl
mov
fisubs
pop
movsl
or
mov
je
dec
pop
jno
pop
loop
jecxz
lret
push
xchg
and
aas
xchg
insb
js
rcrl
jb
cmp
cmp
pop
mov
mov
cmp
push
jg
jg
pusha
rorb
flds
dec
bound
cmp
sub
test
ret
lods
xor
aad
cmp
or
ret
cwtl
ffree
je
adc
inc
mov
sti
ret
dec
sbb
popf
adc
test
mov
mov
int
add
fdivl
add
fsubs
test
repz
lret
push
fcompl
xchg
lods
xor
hlt
ror
inc
xorb
adc
mov
test
loopne
leave
adc
xor
pop
subb
inc
imul
push
mov
fsaves
das
mov
leave
and
push
push
add
test
clc
fcmovnbe
pop
cwtl
cmp
and
jae
loop
lret
js
insb
subb
and
xchg
lods
cld
out
cwtl
jno
test
clc
xor
xchg
lods
add
jb
insb
shrb
cmp
mov
inc
mov
jg
mov
xchg
cmc
addr16
dec
jmp
aaa
aad
adc
mov
inc
subl
loopne
sbb
inc
js
gs
add
mov
jno
cmp
fildll
cmpsl
imul
or
testl
fisubl
adc
push
inc
inc
mov
dec
enter
in
adc
xchg
rcrb
xchg
mov
jge
fiadds
nop
sbbb
sahf
loop
ror
stos
insl
js
notb
mov
out
dec
js
xchg
and
cmp
add
add
sbb
adc
pop
inc
dec
clc
clc
scas
push
sbb
lea
add
lret
mov
cltd
jmp
or
xchg
xor
push
mov
push
enter
xchg
lods
ss
incb
dec
add
iret
and
arpl
imul
and
push
push
lods
out
xchg
xchg
adc
add
mov
into
pop
rcll
scas
mov
jbe
leave
pop
movsl
mov
lahf
mov
or
test
push
out
inc
mov
aas
in
dec
daa
clc
or
clc
roll
mov
jle
dec
mov
int
push
mov
adc
and
fwait
xor
outsl
push
pop
in
cmc
aam
mov
dec
ret
mov
jns
dec
outsl
pop
push
add
xchg
pop
sub
add
dec
rclb
insl
stos
icebp
fs
adc
xor
hlt
pop
adc
mov
push
cmpsl
shlb
push
mov
pusha
and
inc
push
inc
fnstsw
andl
adc
or
mov
lds
mov
enter
add
mov
sub
int3
popf
dec
stc
push
push
lods
mov
dec
std
jo
sub
inc
add
mov
data16
push
push
jns
mov
and
cmpsb
jo
xchg
sbb
dec
sub
testl
xor
rclb
add
dec
imul
and
pushf
popf
mov
sub
inc
mov
mov
or
push
dec
fwait
stos
fs
lret
in
test
cmovnp
popa
decl
or
or
js
jmp
mov
outsl
pop
fisttps
negb
popf
bsr
movsl
lahf
push
in
sub
fwait
dec
sub
stos
enter
ja
or
or
inc
jo
hlt
sahf
mov
jecxz
adc
jmp
loope
pop
adc
xchg
test
sub
inc
repnz
dec
sub
shlb
xchg
or
jmp
add
lds
sbb
xchg
add
int
mov
add
dec
mov
mov
subl
mov
ficoms
inc
frstor
incl
lret
push
jg
lods
xacquire
call
movsl
push
js
or
xor
imul
insl
test
test
stc
mov
sahf
and
jo
mov
jle
cwtl
pop
leave
shl
test
les
sub
test
dec
dec
adc
test
lods
mov
jns
jo
addr16
xchg
or
sbb
and
adc
push
sbb
lret
add
fs
pusha
adc
mov
sub
rolb
neg
pop
shrl
jb
or
inc
ja
sarl
inc
inc
pop
sbbl
in
movsl
in
js
mov
clc
push
adc
in
or
jl
mov
les
repnz
push
cmp
cwtl
imul
and
push
pop
push
stos
jnp
addl
lret
xchg
mov
std
sahf
mov
push
ret
ja
mov
push
addb
and
enter
add
mov
jns
xchg
or
dec
pop
shrl
inc
and
or
jb
adc
dec
ret
ljmp
cmp
sti
movsb
jmp
clc
cmpsb
rol
push
cmc
adc
add
jnp
mov
lds
fmuls
sbb
sbb
xchg
jecxz
inc
clc
mov
mov
inc
addr16
cmp
pop
aam
xchg
insl
mov
inc
push
sub
lods
or
sbb
sbb
dec
or
lahf
sbb
dec
mov
mov
xchg
pop
orb
andl
bound
dec
clc
mov
mov
sub
cmp
aas
jp
subl
lcall
mov
imul
xchg
mov
mov
or
gs
dec
js
jmp
adc
mov
dec
lret
mov
gs
test
push
add
lret
xchg
or
push
sbb
push
xorb
insl
jb
pusha
jge
push
pop
xor
push
mov
sbb
push
cmp
jne
mov
repz
lret
out
xchg
dec
add
test
jmp
jmp
mov
sbb
and
lea
push
dec
mov
inc
dec
mov
dec
addr16
sub
pop
xor
and
out
movsl
test
in
pop
pop
lret
mov
sbb
dec
data16
dec
and
jnp
mov
jle
and
inc
cmp
dec
and
and
cmp
jle
bound
std
inc
adc
jno
js
mov
jne
push
mov
pop
rcrl
jmp
sub
xchg
clc
aas
push
dec
push
insb
enter
int3
and
xchg
movsb
add
popa
inc
mov
or
jmp
call
test
pop
cmc
in
sub
and
fistps
outsb
xchg
jnp
add
mov
pop
add
stos
inc
js
push
lock
test
push
ljmp
out
and
clc
pop
dec
pushw
or
mov
loope
movsl
or
loopne
and
adc
add
inc
push
aad
lahf
faddp
sub
inc
xchg
cs
push
xsaves
ret
mov
add
dec
aaa
pop
rcrl
push
adc
xchg
pushf
stc
je
stos
ljmp
or
test
fisubrs
lret
ret
sub
aad
pop
pop
or
js
pop
mov
mov
repnz
loopne
push
aaa
adc
mov
dec
adc
xorl
int3
jbe
out
stos
fsubrs
jge
fwait
call
jecxz
hlt
cmpsl
stc
inc
sbb
scas
arpl
jg
jmp
subl
sub
fisubrs
aam
jp
or
jno
dec
dec
lret
mov
adc
xor
mov
mov
cmpsb
dec
aaa
inc
loop
in
xor
pop
inc
js
in
mov
push
mulb
fld
outsb
mov
and
arpl
push
jmp
jg
mov
jo
pop
xchg
jno
xlat
cli
mov
clc
lods
mov
clc
gs
lds
inc
sub
add
dec
jns
fcmove
add
sbb
imull
jo
test
fdivl
xchg
loope
mov
in
enter
jg
push
jbe
test
dec
dec
mov
int3
cmp
bound
scas
ret
roll
push
inc
xchg
push
sub
mov
pop
xchg
repz
inc
pop
mov
and
dec
mov
push
lret
nop
mov
or
pop
and
ja
leave
mov
pushf
push
xor
cmc
adc
rclb
lret
add
sbb
inc
out
stos
cld
fisubs
stos
cltd
pop
jbe
fldcw
sahf
jmp
cmpsb
popf
ret
movsl
inc
aaa
out
out
xchg
int3
mov
pop
adc
xchg
push
mov
adcb
adc
clc
pusha
inc
stos
in
jne
les
pusha
or
inc
leave
push
clc
mov
xchg
lock
mov
insb
orl
les
and
int
cmp
xchg
hlt
cmp
lods
inc
xor
inc
insb
mov
jbe
pop
stc
add
repnz
and
push
cwtl
rorb
mov
scas
sbb
push
jecxz
add
movsb
xchg
pop
out
cmp
add
mov
dec
xchg
test
push
mov
lret
mov
ss
in
shll
push
xchg
xor
lret
les
loopne
add
cs
and
call
int3
fs
adc
out
mov
stc
push
fldenv
mov
outsb
pop
sahf
lds
pop
xchg
ss
dec
inc
push
adc
lods
and
test
sub
ljmp
loop,pt
or
outsl
cmp
iret
inc
clts
dec
mov
and
and
xlat
test
pop
test
testl
xchg
imul
lret
fisubs
aam
adc
mov
push
fistl
xor
stos
test
loope
mov
out
adc
hlt
dec
jb
sbb
xchg
fisttps
gs
adc
rorl
cmpsb
inc
lret
out
pop
and
push
jle
pop
sbb
adc
adc
pop
test
hlt
mov
mov
movsb
push
shlb
mov
sbbb
pop
push
add
push
js
push
cmpsb
push
xchg
jb
aas
mov
xchg
cmpsb
aam
loop
std
test
or
cmp
xchg
fmuls
cmc
pop
xlat
gs
or
jbe
inc
pop
pop
test
inc
inc
cmp
jb
cld
add
dec
mov
insl
scas
mov
fsubrs
mov
cmc
lret
jmp
popa
mov
lret
mov
call
stc
test
inc
sbb
mov
sub
ficoml
mov
in
cwtl
imul
movsl
test
cmpsb
push
jae
arpl
fstpl
push
shrl
aam
and
ret
pop
js
pop
mov
test
in
or
cmp
out
xchg
dec
dec
dec
sub
mov
pushf
in
mov
dec
stos
int
ret
aas
add
data16
add
and
in
js
adc
mov
out
xchg
jo
and
mov
mov
xchg
jg
pop
popa
dec
and
adc
outsl
mov
jle
gs
arpl
rol
outsl
faddl
push
mov
test
int
sub
stos
mov
pusha
sub
lret
mov
cltd
fmuls
cmpsb
or
mov
mov
iret
push
sub
inc
inc
loop
sbb
pop
pusha
adc
and
pop
bound
mov
lret
mov
imul
hlt
or
call
clc
dec
mov
stos
mov
stos
jle
std
mov
loope
and
xchg
scas
rolb
push
push
jle
add
sub
xchg
mov
mov
arpl
and
mov
in
lret
mov
nop
and
out
cmp
mov
dec
pusha
dec
je
inc
fisttps
test
rcr
dec
push
xchg
arpl
lret
in
outsl
les
cmp
add
push
inc
adc
dec
adc
data16
scas
mov
xor
out
jno
dec
aam
sub
call
xor
add
stc
and
stos
mov
data16
stc
jp
mov
xchg
pushf
cmp
cmpsb
jb
roll
test
lods
xor
adc
fisubrs
out
out
into
mov
in
cmp
xchg
negl
mov
andb
cmpsb
adc
dec
jmp
sbb
insb
cld
idivl
test
add
roll
stc
inc
cmc
dec
ss
dec
push
jmp
loopne
xorl
test
mov
cmp
push
notl
and
jbe
cli
fnsave
adc
xchg
cmc
cmp
pop
adc
aaa
cmp
movsb
idivl
daa
add
jge
and
lret
push
dec
adcl
insl
js
push
aad
or
popf
out
add
lret
decl
inc
int
sbbl
adc
mov
lret
aas
inc
and
cmp
sub
jnp
out
arpl
xchg
dec
stos
imul
mov
adc
js
inc
in
rcrl
push
stos
add
dec
rclb
into
xlat
popf
dec
cmpl
mov
adc
aaa
mov
les
pop
and
loop
xor
pop
inc
js
lods
cwtl
mov
in
jo
bsf
mov
pop
adc
mov
call
dec
dec
mov
cmp
sub
adc
cmp
inc
or
pop
and
xor
loop
fmul
fsubrl
in
das
push
adc
dec
sbb
cli
cmp
sarl
push
in
imul
enter
bound
popf
dec
cltd
dec
cmpsl
inc
clc
fisttpl
push
adc
inc
sar
jp
adc
fiaddl
xor
out
mov
sub
cmp
cld
cmpsb
adc
add
inc
jg
fcomps
jl
test
ret
clc
inc
testl
orb
push
mov
popa
sarl
test
add
mov
inc
cmpsb
push
in
inc
cmpsb
sub
mov
cmp
repz
addr16
or
sbb
push
and
js
stos
add
in
in
inc
clc
xchg
daa
ja
insb
mov
cmp
add
add
pop
and
xchg
test
jne
addb
cmp
and
dec
in
mov
les
js
push
xor
scas
mov
popa
sbbl
call
fisubrl
push
dec
add
xor
inc
icebp
add
push
xorb
xchg
xchg
inc
jecxz
fnstenv
outsb
out
mov
sti
mov
xchg
pop
mov
mov
jge
js
push
push
inc
das
cmp
clc
sbb
xor
xchg
pop
push
jp
mov
or
mov
repz
or
jle
pushl
cmp
pop
cmp
jnp
clc
adc
sarl
push
repnz
add
cmovnp
jnp
inc
dec
push
pop
icebp
ja
or
ret
jg
pushf
lds
insl
xor
mov
out
fmull
cs
ljmp
mov
imul
fildl
lret
or
fnsave
mov
sbb
inc
gs
and
js
cmp
mov
xchg
jae
mulb
mov
ret
test
or
jle
psubusb
jae
flds
dec
idivl
hlt
clc
out
lret
pop
xchg
xchg
and
lret
xor
fadds
into
out
mov
sub
push
and
ret
sub
xchg
jns
mov
test
dec
jno
test
flds
adc
mov
loop
cmc
fistpl
rcr
jecxz
or
dec
sbb
lret
mov
lahf
jbe
pop
and
pop
inc
and
mov
and
mov
inc
mov
sbb
jl
js
arpl
testl
xor
xchg
scas
sub
and
out
inc
jmp
test
ljmp
in
out
stos
sbb
rolb
jae
fs
xchg
sbb
jecxz
jnp
call
sub
cmp
roll
inc
cmp
or
add
dec
xchg
push
xchg
cmc
fcmovbe
dec
test
mov
adc
sti
rolb
js
aad
push
dec
jp
pop
add
popa
mov
cmp
js
std
jne
lods
cmp
rolb
fidivl
or
js
mov
sub
push
les
xlat
and
test
scas
xchg
orb
mov
add
jae
lods
lea
push
cmp
pop
pcmpgtb
lds
subl
mov
mov
and
dec
cld
mov
sahf
xorb
add
imul
dec
dec
lods
das
cltd
lods
jmp
and
push
mov
enter
adc
popa
xchg
std
std
rcr
adc
xchg
sbb
outsl
mov
leave
cmpb
inc
mov
cmc
cli
in
out
rcrb
fwait
jb
dec
push
lret
fdivrp
cmc
js
xchg
push
jg
push
fidivl
clc
add
or
or
sub
xchg
jle
sbbb
lret
rcll
popf
call
out
jns
mov
push
lahf
sub
add
imul
pop
and
out
cmp
cmpsl
fstl
inc
dec
sub
pop
iret
jns
sub
mov
les
out
clc
pop
push
in
pop
inc
jp
push
out
lods
xchg
xchg
inc
repz
add
std
dec
xor
mov
inc
push
mov
mov
add
incl
jp
xor
stos
push
cmpsb
mov
xchg
data16
sub
ja
dec
adcb
add
xor
jae
rcrb
pop
or
std
bound
inc
aas
add
dec
loop
push
out
idiv
xlat
movsl
jmp
je
pusha
stos
and
jp
cltd
fmul
push
jnp
jmp
cmp
popa
dec
push
and
outsb
add
int3
daa
mov
js
out
cltd
add
pop
and
loopne
xor
fldl2e
and
push
mov
or
and
push
clc
and
mov
rol
jecxz
stos
sub
jp
and
cmp
test
mov
incl
add
lret
mov
outsl
test
and
int3
sbb
lods
xchg
mov
lods
les
jno
xchg
push
mov
adc
stos
inc
mov
dec
in
cmp
pop
mov
add
cmp
mov
loope
fisttpll
push
pop
fsubr
cmc
dec
aaa
lock
dec
jno
or
adc
xchg
xor
les
sti
adc
dec
sbb
rorl
xchg
lret
into
iret
jne
mov
and
add
dec
xchg
je
loop
dec
faddl
aam
mov
mov
js
lcall
call
cmp
xor
popa
inc
lds
in
imul
and
dec
xchg
lods
sub
test
sbb
pop
and
dec
jo
sahf
xor
shll
adc
xor
lret
into
loope
sbb
push
cmp
cmp
cld
add
lret
pop
jl
push
sarb
dec
mov
mov
or
dec
scas
mov
xchg
inc
lods
pop
and
mov
aas
bound
jno
pop
ljmp
jl
sbb
xor
pop
cmc
dec
or
aad
loop
test
xchg
test
mov
or
jae
and
xchg
and
roll
je
xor
inc
addr16
loopne
fisttpll
inc
out
sub
aam
mov
sbb
shlb
sbb
mov
push
pop
ljmp
cmp
fwait
int3
test
xor
dec
dec
pushf
mov
pop
mov
xchg
add
mov
mov
inc
bound
sub
push
in
dec
pop
in
movsl
clc
or
push
lret
sbb
mov
xlat
je
mov
lret
jg
mov
out
fimull
push
js
ret
adc
movsb
add
dec
inc
or
lcall
enter
or
dec
adc
push
xchg
pop
sub
ret
cmp
jecxz
out
jecxz
shl
lds
ja
jo
insb
or
xor
or
cld
int3
push
mov
push
shl
clc
les
mov
movsb
out
pusha
ret
and
cltd
movb
pop
out
and
popa
mov
sbb
jnp
sarb
enter
push
lds
sub
loopne
mov
lahf
js
repnz
pop
js
sub
push
sub
jne
push
scas
gs
fadds
lret
int
ret
fdivrp
add
ret
and
clc
fiadds
or
inc
and
xchg
xor
jae
sub
stos
enter
out
shlb
sbb
ds
push
pop
mov
test
dec
andb
lcall
js
jmp
sub
inc
xor
cli
movsb
leave
push
insl
cli
sbb
es
sub
pop
mov
mov
das
bound
jne
movsb
xchg
insl
je
xchg
lea
xchg
out
push
in
push
and
push
nop
or
mov
mov
pop
mov
test
das
and
in
push
pop
cmp
je
orb
and
xor
add
shl
sbb
add
mov
jnp
loopne
mov
xor
subl
or
stc
mov
cld
lahf
add
imul
fdivrl
push
rolb
mov
push
push
mov
fiadds
cmp
cwtl
and
cmpb
mov
mov
dec
adc
mov
out
push
sub
insl
sbb
sbbb
mov
xchg
dec
sub
dec
repz
out
scas
add
lret
stos
in
inc
push
jecxz
jne
inc
mov
aam
sbb
lods
shlb
aas
into
daa
jl
sbbb
decl
sbb
mov
movsb
cmpsl
lock
pop
movsl
pop
xchg
stc
dec
fiaddl
out
and
mov
xlat
into
int3
inc
mov
push
and
xor
nop
sbbb
icebp
pop
dec
repnz
cmpl
insl
mov
rolb
mov
mov
and
mov
jecxz
cs
pop
lret
mov
int
adc
lock
pushf
mov
add
dec
or
rcr
cmp
push
or
jg
xchg
subb
mov
mov
rorb
push
arpl
mov
sbb
icebp
call
mov
lods
xchg
test
in
lret
testb
cmp
out
movsb
ljmp
push
fists
xchg
jmp
cmp
pop
jno
pop
adc
push
stc
xlat
push
xor
loopne
pop
or
movsl
sub
sub
js
cld
test
fdivrp
out
jecxz
and
addl
jns
sarb
pop
dec
push
bound
push
notb
xchg
sbb
lcall
adc
jp
lods
arpl
jmp
add
xchg
sbb
test
xlat
dec
leave
pop
add
mov
xchg
mov
cmp
or
fwait
dec
xor
dec
js,pn
inc
das
mov
loope
test
bound
cwtl
push
cmp
jl
repnz
xchg
iret
push
aam
fcmove
jo
clc
inc
lcall
add
mov
add
shll
dec
and
push
jge
cmpsb
movsl
mov
in
stos
sbb
adc
in
mov
pop
idivb
mov
sbbb
mov
pop
lret
test
dec
cmpl
dec
push
jg
push
push
adc
mull
cmp
bound
and
and
out
inc
imul
sub
clc
in
pop
stc
movsb
andl
clc
out
fdivrl
push
mov
pop
push
lods
jne
cmp
or
clc
pop
or
cmpsl
aas
jge
fists
mov
cwtl
lods
pop
sbb
pop
stos
pop
adc
sbb
lret
push
jl
mov
pop
pop
sbb
and
dec
out
test
adc
mov
stos
cmc
aad
bound
divl
pop
clc
add
insb
cmc
hlt
daa
lods
mov
shlb
ret
fldcw
int3
mov
xorb
xchg
sub
dec
dec
ror
cld
gs
scas
aad
sbb
mov
shl
pop
jl
orb
push
adc
lret
scas
cli
mov
xchg
sub
mov
cmp
stc
pop
jnp
fld
and
lock
imul
xchg
mov
lock
in
gs
sub
fidivs
das
cmp
ss
loope
push
fmuls
or
sbbl
cwtl
mov
fsubl
call
into
lret
mov
in
dec
clc
movsb
je
test
cwtl
push
dec
mov
dec
ss
pop
scas
cltd
mov
fbld
mov
adc
adc
xlat
fdivs
imul
mov
fistl
sbb
sbb
xchg
not
push
inc
mov
pusha
jno
jg
sbb
push
mov
shl
add
mov
sub
mov
iret
jb
dec
jl
xchg
repnz
orb
std
test
faddl
jmp
pop
mov
lret
lret
mov
pop
in
xchg
jae
inc
and
insl
rcr
adc
insl
clc
cltd
popf
push
mov
add
iret
and
mov
js
inc
push
cwtl
loop
adc
stc
dec
loop
lcall
mov
hlt
push
popf
dec
mov
dec
or
inc
push
xchg
inc
or
out
sub
lret
push
sbb
mov
cmp
nop
cli
push
inc
dec
int3
pop
pop
aaa
negl
scas
cmpl
ss
and
xchg
cld
decb
sbb
mov
add
add
push
push
or
pop
push
sbb
frstor
xor
int
mov
dec
sub
or
loopne
cmp
mov
shll
mov
jl
push
insl
ja
cmp
shlb
inc
mov
fmul
daa
inc
movsb
mov
adc
and
mov
adc
jle
js
subl
xchg
add
xchg
bswap
mov
jl
js
scas
bound
mov
pop
inc
icebp
jo
pop
pop
or
jae
jbe
push
clc
push
lea
stos
mov
fcoml
sub
dec
decb
xor
push
sbb
repnz
stc
icebp
mov
imul
or
xchg
imul
lds
push
outsb
mov
mov
push
je
mov
xor
sub
or
stc
sub
mov
das
data16
shlb
cmp
jnp
and
insl
hlt
sub
pop
sbb
xor
leave
mov
inc
insb
pop
sbb
test
adc
or
push
leave
lret
cmpsl
out
xor
jo
jne
lret
inc
mov
jge
dec
insb
pop
loop
je
loopne
add
cmc
push
mov
lods
pop
dec
sub
gs
sbb
test
pop
jp
orb
push
int
scas
jmp
mov
xor
imul
push
rclb
push
cmp
or
cmc
addb
sub
sbb
sarl
jbe
sti
pop
and
hlt
or
or
test
inc
insb
scas
inc
sub
jbe
and
loope
cmp
pop
cmc
cltd
cmp
xor
pop
add
or
mov
shlb
js
mov
mov
fstps
xchg
lret
test
sahf
shlb
repz
and
and
adc
je
and
push
jno
es
sbb
add
dec
out
mov
ljmp
int
xchg
dec
jo
xchg
jmp
xchg
ja
pop
je
imul
packuswb
jb
out
pop
fwait
add
insl
repnz
and
loop
dec
mov
into
push
and
arpl
test
dec
push
andb
lods
jmp
rorl
loop
jg
addr16
inc
call
cltd
jle
sbb
fcoms
mov
aas
clc
cmpl
push
push
shrl
jbe
lahf
stc
shlb
ret
ljmp
adc
xor
cli
sbb
and
js
add
lret
lahf
push
mov
mov
add
ja
out
mov
add
push
mov
rclb
cmp
or
dec
rorb
inc
les
outsb
mov
sbb
popf
sti
test
and
xor
xchg
and
pop
lret
add
add
dec
mov
inc
push
rolb
cli
dec
clc
cltd
pop
xchg
add
cmp
popf
pop
mov
imul
repz
mov
mov
sbb
lret
ret
shl
jg
in
lea
mov
mov
and
lds
push
push
pop
cmp
loope
jle
dec
xor
orps
xchg
lods
push
sbb
sbb
cmp
ljmp
push
dec
adc
cld
and
pop
xchg
daa
and
sahf
pop
mov
push
inc
int3
aas
push
fisttpll
mov
repnz
jbe
lods
mov
dec
and
mov
xchg
hlt
inc
sub
cld
xchg
dec
std
pusha
aaa
and
dec
xchg
ret
test
mov
popa
cmp
mov
test
bts
ljmp
popa
ret
lea
push
and
js
lret
popf
sub
adc
stos
push
dec
mov
cs
inc
and
inc
pop
inc
pop
and
xchg
xor
shl
dec
sub
test
sti
push
scas
lods
mov
add
int3
sub
jmp
movsl
out
lcall
dec
mov
add
jno
loop
xchg
adc
aam
test
push
push
sbb
push
mov
xchg
sub
std
xor
ljmp
js
mov
rcrb
inc
ss
outsb
fcmovnbe
mov
in
fsubs
mov
push
icebp
lret
into
adc
lahf
xor
pop
push
and
es
es
out
push
insl
gs
inc
inc
adc
repnz
pop
pop
clc
xor
aas
mov
and
cmpsl
sub
stos
dec
mov
or
mov
dec
in
mov
add
xor
and
lret
lret
stc
ret
out
bound
fadds
lret
sbb
ljmp
mov
dec
loope
aaa
pop
scas
sahf
lret
stos
cmp
cmpb
sub
inc
dec
mov
push
fnsave
lock
mov
sarl
inc
dec
mov
clc
mov
mov
lods
in
sarl
shll
bound
inc
inc
push
xchg
das
and
dec
mov
in
lds
pop
sub
mov
js
adc
cmp
and
jge
movsb
lock
cmc
fxch
lods
pop
xchg
jns
mov
dec
andl
mov
sbb
clc
cli
and
sbb
add
dec
popf
adc
sbb
mov
xor
mov
pop
fidivl
les
or
mov
mov
push
rcrl
ljmp
sbb
and
jg
bound
mov
and
js
add
test
add
xor
push
punpckhwd
out
pop
pop
cwtl
xor
les
fnstenv
adc
pop
mov
and
dec
js
push
xchg
pushf
jp
rcrb
mov
jo
and
jno
mov
cmp
andl
imul
popf
lods
fcomp
cs
inc
int3
aam
aaa
lock
enter
test
jns
xchg
dec
scas
sub
clc
shr
pop
cwtl
in
cwtl
dec
mov
and
incb
testl
add
fcomps
sub
jo
sub
fistl
test
jp
icebp
mov
insb
lock
test
pop
adc
mov
pop
dec
mov
lret
pusha
test
mov
and
and
ljmp
in
adc
push
movl
mov
lods
and
iret
or
and
lret
adc
xchg
jmp
jmp
sub
pop
or
push
fidivs
pop
pop
movsl
dec
out
push
jnp
pop
test
imul
call
push
push
cli
mov
jnp
leave
adc
out
test
push
je
jmp
in
lahf
incl
cld
out
jg
imul
xor
ficoms
mov
push
cmp
inc
and
es
xor
jp
mov
fidivrs
shlb
clc
imul
call
sub
cli
lock
addr16
dec
jp
mov
cmp
sbb
xlat
dec
inc
jno
dec
jbe
addb
addr16
repnz
leave
test
lret
lret
dec
jne
dec
add
dec
mov
cmp
jo
in
lea
test
xor
inc
jbe
inc
sbb
mov
xchg
testl
mov
mov
cmp
inc
bound
pop
scas
mov
idivl
icebp
pushl
roll
roll
loopne
xor
je
enter
iret
sub
sub
add
jnp
dec
mov
sbb
js
mov
pusha
and
cmovp
mov
imul
dec
add
popf
test
adc
loopne
cmp
sbb
cmp
mov
rorb
lcall
add
je
or
xor
aas
mov
sbb
jecxz
testb
shll
pusha
xchg
scas
and
mov
and
and
sub
int3
xchg
ds
jmp
pop
pusha
roll
dec
xor
call
push
in
push
xchg
test
cmpsb
push
jl
mov
xor
popa
and
mov
scas
mov
jae
sbb
ret
add
in
clc
inc
add
or
stos
dec
mov
adc
push
ror
divl
push
or
add
pop
and
mov
dec
js
arpl
mov
push
push
jp
and
fsubs
repz
ret
inc
push
addr16
in
imul
dec
insl
pop
test
dec
pop
int3
mov
add
or
jl
loope
xlat
std
lods
mov
add
add
xor
cs
pop
mov
fwait
and
pop
aam
xchg
mov
orb
in
pop
jmp
mov
dec
lds
mov
xchg
xor
sub
iret
sbb
adc
or
pop
sub
jl
adc
xchg
jne
pop
jbe
call
mov
lock
dec
push
or
pop
mov
call
ja
lds
mov
imul
mov
lods
cmp
dec
fstps
int3
and
subl
ret
inc
cmpsb
xor
jmp
sti
jne
lahf
test
mov
ret
lahf
lret
roll
cli
or
xor
cmp
add
notrack
cmp
lret
pop
jns
and
xchg
mov
mov
mov
inc
and
ret
imul
out
inc
out
add
dec
xlat
mov
mov
jns
outsl
ret
pop
rcrl
aaa
arpl
nop
out
out
js
lods
pop
out
cld
pop
fwait
push
rcrl
std
fdivl
xchg
stos
cmp
mov
mov
and
repnz
mov
outsl
xor
push
jb
les
dec
fnstcw
addr16
sahf
mov
arpl
xchg
lock
pop
pop
cmp
out
xchg
dec
cmp
mov
mov
mov
mov
popa
clc
in
test
cld
add
dec
mov
and
lea
fistl
mov
in
outsl
sbb
cltd
push
daa
loop
jge
pop
jp
dec
xchg
mov
add
bound
test
and
popf
lods
clc
jne
call
popa
mov
xchg
sbb
adc
pop
into
loop
dec
ljmp
jl
push
mov
sbb
pushf
pop
pop
clc
insl
mov
adc
repnz
pop
adc
nop
and
jmp
lds
bound
outsb
pop
jbe
and
pop
jb
test
sub
cltd
xor
mov
and
ss
sub
and
arpl
bound
sbb
scas
out
clc
leave
cmpsb
clc
xchg
jle
outsb
or
cs
sub
rcrl
jns
mov
cmp
push
mov
mov
mov
mov
nop
mov
test
nop
movsl
pop
ss
int3
es
mov
push
adcb
lret
mov
sti
shrl
and
or
cmp
in
pop
mov
mov
pop
adc
fwait
je
test
xor
call
in
xchg
js
sub
das
outsl
push
mov
inc
pusha
repnz
dec
dec
jae
aam
xor
inc
jns
xchg
cmp
and
shr
push
dec
xchg
xchg
adcl
insb
cmp
inc
outsl
pop
add
push
mov
stc
cmp
jbe
mov
and
popa
add
je
push
xchg
stos
fiaddl
cwtl
inc
cmpsl
in
and
into
xor
fistl
sub
pop
cmp
test
cli
pop
addb
and
adcb
adc
hlt
or
sub
stos
faddl
filds
insl
lahf
ja
pop
repnz
jl
push
dec
jp
sub
mov
lret
rcrl
rolb
sub
mov
dec
pushf
lods
ja
dec
dec
out
dec
jl
leave
jmp
scas
ljmp
xchg
add
xor
dec
adc
lcall
jmp
and
adc
jns
dec
cmp
shll
outsl
mov
into
inc
mov
in
mov
repz
dec
sub
add
ss
aas
enter
inc
inc
cmp
lret
push
imul
push
call
out
in
dec
mov
js
shlb
jne
adc
dec
xor
rcrl
lret
jmp
int
sub
xor
lods
lea
cmp
pop
push
push
inc
and
cmc
pushf
rcll
roll
mov
pop
aas
mov
clc
test
clc
pop
xor
xor
test
sub
lret
sti
aam
pop
cmp
gs
lods
fdivp
add
repnz
jo
sbb
inc
dec
ror
test
bound
hlt
cli
and
sar
cmpsb
pop
and
adc
add
adc
rolb
sub
pop
in
xchg
sbb
add
pop
sub
lock
dec
adc
adc
or
test
and
fists
rcrb
or
add
aad
hlt
xchg
adc
call
and
test
sub
cltd
push
adc
cmp
inc
adc
jecxz
adc
and
lcall
out
mov
or
and
jbe
cmpsb
or
dec
inc
fwait
or
data16
test
in
mov
leave
icebp
pop
and
lods
sahf
pop
sub
mov
lret
fimuls
adcl
cli
lret
mov
or
xchg
data16
pop
jnp
xor
adc
cmp
and
or
dec
out
xor
xchg
pop
xlat
ja
mov
fnstenv
sbb
and
mov
repz
fnsave
push
and
clc
aad
xchg
cmp
outsb
cmp
mov
fcoml
push
cld
push
inc
and
inc
es
clc
test
icebp
cmp
aas
mov
push
mov
dec
push
test
inc
and
gs
cmp
loope
push
push
movsw
mov
xor
stos
cmpsl
mov
add
dec
sub
out
mov
cmp
in
ret
mov
aaa
cmp
rep
or
and
rcrl
sub
pop
jmp
movsl
xor
sti
test
mov
and
adc
jg
and
js
out
int
add
lret
jbe
sub
mov
ss
divl
cmp
sahf
in
push
mov
test
enter
frstor
xor
sub
dec
js
cmp
cld
das
lock
hlt
jnp
mov
lods
ds
fcom
jne
dec
jnp
mov
add
jno
das
rorb
mov
out
xchg
inc
ret
icebp
imul
mov
in
jmp
xor
pop
or
xchg
icebp
and
ss
mov
sbb
jb
mov
rol
push
adc
enter
add
push
leave
js
cs
mov
jbe
lds
sub
clc
mov
divb
and
enter
stos
jp
les
into
and
xor
fcomip
lret
mov
dec
fnstsw
mov
cmp
movsl
jle
mov
push
sub
test
int
add
push
lret
out
jb
data16
jbe
sub
nop
mov
sub
aad
clc
arpl
sbb
int3
jg
faddl
dec
cmp
das
outsb
loope
popa
adc
dec
and
call
push
fcmovu
push
jns
push
cmp
mov
pop
dec
jo
jnp
repz
je
dec
dec
addl
sahf
or
mov
mov
push
inc
dec
jns
mov
lock
mov
jmp
mov
sbb
xor
pop
mov
cmpsb
vmovshdup
pushf
fcompl
jb
lea
add
mov
xchg
loopne
push
repnz
loop
jge
inc
dec
and
and
aas
adc
insl
jmp
daa
sbb
sbbl
adc
push
mov
mov
xchg
add
lret
adc
push
dec
push
lahf
add
mov
sbb
mov
mov
dec
jmp
insl
aam
inc
mov
mov
sub
push
or
cltd
sbb
and
inc
mov
cmp
mov
pop
pop
dec
pop
mov
jg
pop
sbb
jecxz
mov
repnz
mov
sbb
mull
cmc
sub
jno
jae
cmp
jne
pop
subb
push
jmp
sbb
and
out
cs
push
lret
stc
stos
add
popa
add
or
fimuls
jns
pop
jns
stos
aas
dec
fistl
and
cmp
cmc
addr16
sub
cmpsb
add
lret
or
dec
add
xchg
repnz
pusha
cli
cmpsl
das
mov
out
popf
xchg
mov
mov
push
jp
inc
fs
push
test
mov
jo
mov
imul
cmc
lock
imul
stos
mov
cs
les
rorb
sbb
adc
ljmp
or
ja
push
jg
in
lahf
jmp
and
daa
mov
sbb
fldl
and
and
cmp
xchg
ret
js
jle
adc
fs
push
push
sbb
es
mov
sub
dec
mov
xchg
insl
xchg
clc
sbb
test
mov
xchg
or
sbb
notb
daa
mov
clc
jbe
subl
jg
insb
and
stc
sti
dec
and
ss
stc
movsb
aaa
cmc
ret
push
mov
xchg
dec
in
mull
popf
dec
push
repnz
in
cmp
js
das
cwtl
inc
mov
popf
icebp
xor
mov
jmp
jg
pop
lret
inc
push
popa
dec
mov
ss
ds
mov
test
fcomps
cmp
cmp
aam
lds
and
pop
adc
lahf
dec
pusha
add
filds
es
ja
add
dec
repnz
add
dec
xor
popf
mov
in
dec
ljmp
test
inc
jbe
dec
mov
push
push
jns
loope
dec
push
clc
stc
fisubrl
pop
fsubrp
call
jmp
loopne
pop
stc
es
cmp
mov
add
lret
cltd
sub
pop
dec
cli
inc
pusha
ret
shlb
push
cli
popf
and
add
mov
cwtl
or
cmp
pop
ljmp
add
lret
lahf
mov
fcoml
mov
mov
mov
int3
movsb
xchg
sbb
mov
dec
scas
adc
push
xchg
ja
arpl
add
clc
jb
jno
push
movsl
or
movsb
pop
call
jg
push
pop
fmul
mov
sub
cmp
call
popa
scas
in
adc
jb
lock
clc
outsl
test
cmp
xchg
fbld
mov
rcr
dec
xchg
lret
xor
cmpsl
test
xchg
fwait
push
dec
xchg
xor
rclb
imul
push
add
mov
push
cmp
sub
sub
int
mov
out
mov
adc
pop
sbb
mov
adc
mov
int
lret
xchg
mov
cld
dec
sub
repz
lods
leave
or
ja
jecxz
loopne
mov
daa
repnz
xor
push
jecxz
insb
xor
sbb
mull
add
lret
xlat
out
mov
mov
inc
adc
test
mov
dec
sbb
sbb
pop
and
stos
lret
mov
pusha
clc
add
cmp
add
inc
pop
jmp
push
mov
or
subl
inc
shr
mov
xor
test
dec
inc
pop
mov
icebp
mov
add
add
mov
imul
lods
outsl
into
in
jns
test
cs
test
and
adc
mov
scas
fstpl
adc
push
mov
mov
arpl
dec
dec
mov
push
push
xor
or
fsubrs
xchg
mov
mov
push
data16
in
pop
fstpt
mov
aam
pop
dec
js
xchg
cmp
mov
pop
adc
sbb
clc
stc
fwait
pusha
rcrl
imul
imul
sti
xchg
flds
adc
jne
aam
call
push
out
pop
mov
test
jle
xlat
negb
lds
daa
fstpt
mov
or
movsb
mov
bound
push
decb
xlat
imul
pop
in
add
outsb
or
xchg
push
mov
dec
adc
aad
hlt
lahf
or
in
pop
orl
and
jg
sbb
hlt
std
mov
mov
out
xchg
fcmovnb
pop
inc
fwait
hlt
mov
ljmp
pop
cli
sbb
js
popa
std
rcl
flds
mov
and
outsb
call
push
lock
js
and
xorb
inc
outsb
jno
jns
cmp
test
pop
lods
adc
lret
xchg
add
les
sub
sub
pop
inc
cmp
or
stc
roll
dec
cmc
in
pop
sbb
loop
dec
adc
jge
test
and
sub
insb
push
mov
data16
add
mov
mov
and
es
cmp
imul
sub
adc
xor
ljmp
cwtl
idiv
cmpsb
mov
test
test
mov
xor
daa
adc
xor
jne
sub
mov
and
fmuls
stc
out
movsl
pop
add
stc
rcl
mov
mov
fs
cmp
in
rclb
enter
stc
add
lret
hlt
sub
mov
mov
xchg
adc
clc
or
dec
mov
cmp
xor
inc
mov
and
add
push
dec
loope
lret
and
xchg
sahf
in
cmp
testb
push
adc
pop
fadd
test
shrd
lret
clc
ret
cltd
stc
mov
jo
mov
cwtl
out
xchg
movl
mov
gs
sbb
je
leave
jg
mov
push
movsb
push
call
sbb
pop
sbb
add
push
pop
fstpl
sub
push
jae
jbe
dec
or
pop
jp
xor
ror
and
push
cmp
cmpb
mov
mov
jecxz
add
push
sub
dec
pop
cmpl
lcall
inc
lret
add
pop
inc
jmp
xchg
mov
push
adc
outsl
adc
cmp
in
mov
arpl
test
jns
clc
negl
xchg
into
xchg
adc
es
and
and
pop
mov
stos
dec
loop
mov
and
mov
mov
test
enter
movsl
dec
pop
and
and
loopne
movsl
addr16
sub
jno
cmp
hlt
mov
ljmp
cmp
ds
mull
mov
adc
add
cmp
jnp
sbb
jae
dec
push
add
stc
add
add
xchg
sub
mov
sub
inc
inc
out
cli
stos
jno
xchg
pop
mov
pushf
add
js
xchg
push
int
push
aaa
cld
cmp
or
stos
fistpl
bound
je
pushl
out
jg
add
inc
int3
stos
mov
xchg
jle
jno
mov
outsl
imul
clc
loopw
inc
sarb
dec
push
cmp
loop
aas
push
call
bound
push
mov
xchg
jge
mov
fdivrs
sub
punpckhdq
mov
mov
gs
cltd
gs
sbb
sub
movsb
pop
mov
jns
sbb
ret
add
dec
mov
xlat
gs
mov
sbb
lds
cmp
lock
hlt
jns
clc
sub
dec
mov
mov
sub
aas
adc
std
dec
mov
and
add
or
push
test
hlt
mov
mov
pop
jg
jbe
and
loope
pop
inc
call
aad
mov
cld
std
in
lret
push
lret
lea
test
dec
test
sub
cmp
or
insb
or
sbb
lcall
or
popf
pop
mov
lods
aad
sbb
dec
fnstsw
inc
out
dec
stc
insb
add
xchg
pop
shll
mov
and
lods
andb
fstpl
je
push
jge
xor
fs
mov
mov
leave
sbb
jmp
adc
sti
mov
xchg
jnp
jle
gs
xchg
and
mov
cmc
pop
xchg
mov
push
mov
std
cmpsl
sbb
scas
test
pop
pusha
jp
jp
mov
jp
jno
dec
lea
int
xchg
mov
xor
clc
adc
xchg
std
cwtl
fildll
ljmp
aas
out
stos
pop
sbb
out
dec
push
sbb
and
aam
mov
push
ss
xchg
cli
mov
into
mov
addr16
and
mov
push
aad
pop
mov
inc
mov
push
les
jp
sbb
cmp
les
shrb
jno
pop
outsl
xchg
mov
scas
je
cmp
xchg
cmc
jne
insb
rolb
dec
adc
pop
jmp
stos
jbe
pop
or
aaa
and
pop
jno
out
pop
clc
jne
into
insb
bound
add
cmpsb
and
cmp
outsb
cmpsl
stos
cmc
ja
adc
mov
xchg
outsb
dec
enter
pop
pop
xchg
pop
std
pop
mov
lret
mov
cld
in
cmpb
lods
adc
dec
mov
fucom
cld
cltd
mov
mov
test
mov
mov
lret
aam
xor
in
inc
push
das
and
xlat
mov
or
movsl
pop
cmp
jge
mov
out
sbb
ret
out
xchg
push
cmp
pop
mov
push
jmp
clc
loope
add
shlb
insb
inc
mov
fsubrs
stos
and
add
dec
cmc
gs
xor
aaa
rorb
pop
cmc
cmc
test
cmp
shrl
sbb
adc
jns
add
dec
cmp
inc
es
clc
sub
and
mov
and
xor
imul
lea
add
dec
clc
sar
lret
mov
fsubr
das
clc
mov
pop
lret
fbstp
loope
pop
inc
cmp
xlat
inc
lcall
mov
clc
jecxz
cmp
inc
mov
data16
js
xor
enter
test
adc
arpl
std
mov
aas
xor
js
shlb
lcall
das
jns
lds
push
fwait
jle
sub
lret
adc
es
stc
sub
aad
add
into
mov
or
sbb
mull
fbstp
das
xchg
nop
jl
add
xchg
dec
ds
adc
xchg
push
hlt
inc
pop
pop
ds
mov
or
jg
mov
aam
inc
clc
mov
xchg
je
mov
inc
popa
es
mov
faddp
call
or
pusha
adc
lret
pop
mov
idiv
mov
and
xor
dec
sbb
xchg
pop
into
fwait
testl
js
cwtl
inc
xchg
call
lods
sbb
mov
stc
fwait
aaa
mov
xor
add
dec
shl
in
sub
mull
ljmp
push
mov
js
inc
push
xchg
sarb
dec
fldl
inc
mov
in
sbb
push
enter
test
lds
scas
inc
stc
lcall
or
or
aaa
int3
push
push
mov
sbb
aas
mov
xlat
push
dec
js
jb
push
add
std
cmc
test
inc
cwtl
dec
nop
lea
jae
push
dec
xchg
and
clc
dec
adc
sub
mov
js
mov
outsb
popf
test
jl
imul
jl
cld
dec
adc
int3
cmp
pop
sarl
mov
xchg
aaa
pop
xor
leave
ret
fs
and
in
loope
sbbl
enter
dec
cld
adc
loop
fs
mov
dec
inc
in
stc
orl
sbb
loope
xor
push
fisttps
pop
inc
pop
fistps
lcall
outsb
jns
xlat
push
in
xorl
or
and
xor
add
cmpsl
loopne
fs
imul
ret
leave
lret
sub
insb
inc
xor
mov
mov
cmp
push
test
sbb
fmull
das
pop
and
adc
add
xchg
pop
loopnew
jne
xchg
fwait
mov
push
xchg
icebp
add
mov
pusha
nop
sbb
fisttpl
jbe
fdivrl
scas
xor
inc
mov
aad
sub
inc
mov
test
and
mov
xchg
in
and
ljmp
mov
inc
push
call
stc
imul
add
addr16
and
push
push
mov
call
imul
lret
jecxz
rcll
movb
xchg
jbe
outsl
mov
mov
js
cmp
frstor
sbb
clc
fnstenv
dec
test
and
dec
dec
inc
jp
sarl
popf
ljmp
dec
cli
xchg
sbb
cwtl
test
cmp
hlt
dec
xchg
lods
dec
js
test
repnz
jle
test
or
lods
cld
jmp
inc
sub
inc
inc
cld
rclb
lea
mov
pop
aad
repz
xchg
jecxz,pn
jecxz
imulb
cmp
mov
shll
mov
jnp
inc
inc
mov
cld
fidivrs
cmpsl
jnp
cs
jns
xchg
xchg
adc
push
xchg
push
adc
clc
ja
cld
sti
std
imul
cmpl
dec
cmc
lret
and
xlat
aad
mov
cmp
add
pop
mov
xor
enter
jp
gs
dec
aaa
pop
mov
adc
jno
fidivrs
push
xchg
lds
sub
pop
mov
fucomi
sti
push
jns
in
push
test
add
add
lret
cli
cmpsl
or
rol
push
mov
sahf
mov
mov
or
call
mov
cltd
jg
sbb
sbb
mov
rolb
dec
clc
std
xorl
push
mov
in
std
js
and
mov
fucom
test
lds
std
push
idivl
push
and
push
aaa
mov
gs
pop
call
inc
inc
lock
sahf
sbb
sarl
inc
stos
int3
enter
or
push
xchg
jle
clc
test
data16
clc
xor
sub
out
out
insb
fisubrs
push
mov
add
or
js
and
popl
cld
fsts
outsl
mov
out
sub
sub
or
out
adc
mov
dec
push
cmc
adc
bound
adc
clc
decb
les
in
cmc
mov
cmp
sbb
xchg
xchg
daa
fcomp
mov
or
mov
fwait
sub
orl
inc
out
adc
fisubrl
dec
pop
pop
mov
xor
iret
jae
xor
pop
or
inc
sub
add
xchg
rorb
sahf
mov
adc
pusha
popf
imul
push
repz
xchg
test
inc
fnstenv
and
cli
sti
or
add
inc
pcmpeqb
inc
jbe
cmp
ss
std
inc
push
testb
xor
fsubrl
mov
subl
frstor
xchg
stos
inc
icebp
inc
in
xor
sub
rorb
ja
xchg
add
xor
mov
push
push
mov
andl
cmp
rorl
ss
popf
aad
xchg
pop
mov
jle
push
ja
mov
jo
insb
mov
fidivrs
xchg
add
dec
jmp
mov
mov
sub
cmpl
xchg
fimull
inc
mov
aaa
mov
movsl
stos
loopne
pop
add
adc
mov
hlt
sti
cmp
cli
pop
push
cmp
sbb
push
pop
clc
sbb
sti
jbe
andb
cld
test
jecxz
es
ret
lahf
jns
lods
andb
call
ja
cmpsb
or
cld
imul
movsl
stos
test
idivb
inc
icebp
jmp
jb
inc
inc
pop
mov
out
adc
cmpsb
push
roll
or
dec
imul
outsb
imul
pop
sub
mov
mov
pop
fistl
mov
shl
insl
mov
cld
stos
push
sti
out
test
sub
aas
cmp
adc
add
dec
jae
shr
and
mov
std
xchg
aad
fcompp
sub
inc
movsb
xchg
push
daa
test
movsl
mov
mov
test
pop
adc
daa
cmpsb
rorl
sbb
or
jg
jb
andb
mov
ss
adc
rcrb
and
add
pop
sub
push
stos
mov
out
ret
sarb
xchg
xchg
inc
int3
rolb
dec
call
mov
inc
cmp
loop
sbb
xchg
or
bnd
xor
xchg
mov
push
lahf
xchg
push
inc
adc
movb
insb
push
dec
mov
stc
xchg
leave
push
js
adc
mov
jle
mov
scas
lods
jle
dec
push
jmp
adc
jmp
lret
mov
ret
lahf
jmp
mov
xor
imul
jp
in
pop
add
into
xchg
xor
sbb
add
mov
std
jmp
or
sbb
lcall
adc
js
dec
and
arpl
fldl
popf
mov
movsb
jno
pop
cmpsl
jo
or
mov
test
xor
lret
and
mov
cld
in
inc
sub
lahf
push
cltd
sub
cmp
test
jecxz
inc
repz
subb
std
and
mov
pop
lds
out
xchg
ds
test
sbb
popf
mov
das
test
inc
leave
mov
cmp
inc
cmc
insl
fcomps
sarb
jb
out
and
fwait
mov
aam
and
xchg
jne
and
add
pop
clc
and
int3
enter
add
lret
loope
mov
or
dec
and
ja
lret
test
xor
cli
int
inc
jae
mov
arpl
ja
jae
les
mov
loope
and
out
sub
cmp
hlt
subl
jb
lahf
stc
or
sbbb
fsubrs
inc
add
push
mov
push
cmpsb
jnp
cli
pop
shll
adc
test
fnsave
fadd
cmp
add
dec
and
lds
addr16
lock
mov
cmp
sub
movsb
mov
cmp
xor
add
cmc
adc
xor
std
lret
lret
push
push
ja
cmp
jp
mov
int3
fadds
lds
push
sahf
pusha
and
mov
mov
pusha
lahf
jecxz
or
faddl
and
addl
jns
push
out
icebp
test
ljmp
dec
fisttpll
cmpsl
push
dec
cli
idiv
rcll
pop
repnz
std
and
clc
jae
cmp
mov
into
imul
sbbl
fisubl
adc
xchg
lret
add
out
scas
lea
aas
dec
jecxz
pop
jae
sbb
dec
dec
rorl
mov
aad
cmp
gs
lods
and
jp
stc
push
js
loopne
dec
loopne
mov
mov
hlt
sbb
sbb
cmp
xchg
fwait
sub
lock
inc
ficoml
clc
fistpll
push
je
je
sbb
push
test
call
pop
jl
sbb
std
and
faddp
mov
sub
or
rcr
outsl
jle
pop
lret
loope
inc
mov
mov
loopne
push
enter
pop
dec
mov
xor
jl
and
ljmp
adc
test
jmp
xchg
fldl
push
xchg
pushf
mov
mov
bound
andl
std
cs
sarb
sub
adc
or
cmp
mov
jp
mov
add
call
mov
pushf
lods
jo
clc
add
cmp
hlt
inc
out
clc
fsts
clc
jp
out
inc
out
xchg
mov
add
jo
roll
mov
xor
mov
loop
push
sbb
sub
push
fucomp
adc
out
shrl
mov
ja
xor
lds
sub
sub
add
enter
clc
sbb
adc
test
sbb
mov
pop
sub
mull
int3
add
dec
daa
out
xchg
mov
xchg
ficoml
fiaddl
bound
dec
daa
stc
aad
divl
sub
bswap
inc
adc
inc
ss
sub
and
int3
les
js
add
mov
movsb
dec
int3
addb
lret
fstp
ljmp
je
loop
repz
lods
mov
add
ds
scas
sbb
dec
sub
xchg
cmpsl
add
xchg
cli
pop
mov
add
sub
test
adc
es
add
jae
cmpsb
inc
movsl
cld
pushf
sbb
lds
dec
ret
ljmp
lods
dec
test
test
ds
js
mull
add
outsb
adc
in
enter
push
in
dec
das
and
es
mov
cli
and
idivl
dec
test
in
push
add
cmp
mov
and
adc
js
dec
imul
add
dec
jb
add
jns
sub
ss
stos
cwtl
mul
add
or
jp
mov
in
adc
cs
mov
mov
and
mov
xor
testl
daa
xchg
movsb
fcmovb
dec
loopne
cmp
test
xchg
in
out
scas
jb
xchg
jg
sub
pop
lret
hlt
lods
add
insb
lcall
movsl
cmpsb
imul
test
mov
jne
cmp
insl
clc
lcall
or
pop
subb
cmc
push
fldcw
jge
stc
andl
or
sub
pop
in
ljmp
jp
ds
dec
and
xchg
push
mov
mov
pop
mov
ffreep
and
out
add
mov
xlat
fmull
push
je
xor
jg
push
or
add
aas
mov
scas
dec
mov
loope
mov
jno
test
enter
insl
test
add
test
out
out
cld
cld
and
lods
mov
scas
inc
push
adc
popa
and
adc
loop
in
outsb
shl
andl
in
inc
mov
imul
mov
sub
arpl
mov
pop
adc
dec
add
mov
push
subl
mov
push
or
ret
je
mov
cwtl
mov
rcrb
mov
cmc
sub
stos
gs
or
insb
pinsrw
and
rolb
xchg
subb
clc
add
in
je
xor
push
dec
call
inc
pop
rcrb
push
ja
cmp
add
fimull
xlat
adc
or
subl
fcomps
lret
cwtl
jl
xchg
jb
xlat
mov
push
add
and
jmp
adc
cmp
push
ljmp
adc
mov
jne
scas
mov
ret
and
xor
arpl
dec
lds
sbb
adc
pusha
xor
js
cltd
mov
pop
in
mov
lock
insl
add
gs
push
and
sar
lcall
pop
jae
push
or
jp
aad
jo
mov
push
clc
mov
cmp
pop
ret
or
cli
pushf
push
adcl
out
sub
push
jb
jmp
test
mov
inc
dec
out
rcr
mov
sbb
lock
pusha
aas
cmp
lret
popf
and
cli
repnz
in
xchg
lds
sbb
add
mov
mov
movl
popa
into
or
popa
ret
pop
in
fisubrs
push
and
push
aad
add
jmp
cmp
in
or
jge
movsb
stc
sbb
cmp
je
ss
mov
dec
in
ljmp
cmp
leave
outsb
push
addr16
aam
mov
test
mov
js
mov
loopne
test
outsl
stos
lret
fmuls
adc
mov
sbb
mov
ret
push
add
jb
push
pop
cmp
es
jb
ja
rclb
push
flds
roll
roll
sar
mov
adc
add
dec
lahf
in
add
jmp
xchg
out
nop
aad
jbe
loope
cmp
pushf
aam
enter
js
ss
pushf
movsl
ret
test
scas
sbb
dec
lahf
lock
xor
pop
xor
lods
test
fldl
frndint
std
call
xor
push
loopne
inc
mov
out
or
xor
sbb
mov
mov
clc
and
mov
test
cmp
mov
ret
test
aam
mov
outsl
je
insl
ror
enter
inc
loope
adc
xorb
pop
leave
mov
inc
scas
pop
dec
sub
mov
mov
mov
adc
es
add
dec
andb
mov
mov
sub
jb
scas
mov
pop
mov
push
and
jge
fisubs
hlt
push
sarb
pop
sbb
test
pop
sahf
or
stos
inc
clc
test
pop
incl
dec
and
cwtl
mulb
add
call
mov
int
sub
gs
stos
add
lret
decb
mov
jmp
push
test
hlt
sub
jmp
test
mov
fnstenv
inc
loop
cmp
pop
xchg
inc
lcall
adc
js
jle
xor
dec
and
adc
sbb
inc
mov
pusha
xor
cmpsb
rcrl
testl
push
pop
jle
scas
mov
mov
leave
add
dec
pop
jae
mov
daa
repz
cmp
mov
mov
push
clc
cwtl
pop
xchg
push
test
subb
mov
in
pop
jbe
push
push
sub
popw
aad
fldt
popa
and
xor
inc
repnz
imulb
and
out
stos
ja
jmp
lds
adc
push
jnp
and
lods
pushf
int3
fbld
outsl
mov
loopne
adc
negl
adc
dec
rcrb
int3
js
mov
mov
and
lods
jge
lret
jmp
dec
in
int
mov
cld
int
fdivp
add
push
call
push
bound
cs
repnz
negl
in
cmp
setno
jbe
add
pop
mov
add
pop
jnp
inc
pop
clc
test
in
cmp
push
mov
dec
outsl
inc
js
sub
dec
xor
jns
jle
in
push
jbe
aam
clc
push
arpl
pop
jmp
scas
pop
loopne
lret
mov
cwtl
adc
dec
pusha
xchg
mov
fwait
cmc
pop
push
clc
in
xchg
mov
ja
and
sbb
mov
repnz
and
fmuls
sbb
push
jp
mov
jns
je
dec
xchg
fildl
sub
rolb
sub
xchg
and
sub
mov
lret
ret
sbb
mov
sbb
in
push
sbb
jle
faddl
xchg
mov
or
test
gs
fadds
repnz
xor
test
loop
adc
adcb
or
movl
add
mov
jo
sub
pop
int
dec
push
stc
notb
adc
jp
and
adc
ljmp
pop
sbb
and
dec
pop
mov
sbb
pop
mov
adc
iret
in
movsl
ret
add
mov
outsl
adc
adc
lret
fmull
stc
fbld
or
add
dec
rol
les
xor
faddp
daa
push
and
push
push
sub
aaa
dec
bound
sarl
sub
pushf
repz
ljmp
call
aam
es
mov
stos
insl
out
js
insl
fucomi
aaa
mov
and
outsb
lcall
push
clc
pop
mov
xlat
push
dec
cmp
aaa
repz
pop
mov
adc
lret
pop
call
addr16
sub
mov
lret
roll
adc
push
fmuls
dec
arpl
mov
inc
repz
popa
aas
dec
sarb
daa
loop
jae
xchg
push
add
test
hlt
lret
in
push
dec
icebp
jecxz
popa
inc
adc
outsb
mov
clc
inc
ret
cld
jge
lock
sub
popa
jp
inc
test
cld
sahf
stos
sti
clc
movsb
xorb
test
test
lds
pusha
lods
mov
loope
push
mov
sbb
and
xchg
jle
inc
dec
cld
sub
ds
bound
outsb
popa
adc
dec
sti
dec
mov
ffree
jo
add
js
add
jno
negb
push
mov
iret
and
xor
push
add
cltd
into
cmpb
or
popf
dec
clc
adc
int
mov
rolb
mov
fsubrl
iret
xchg
pop
mov
shr
dec
jns
cmpsb
push
int3
mov
insl
dec
mov
test
pop
adc
adc
insl
mov
pop
push
sub
negl
jns
push
jbe
enter
int
ja
ret
add
mull
xchg
fisubs
cmpsl
lods
aam
loop
inc
jne
inc
sbb
pop
and
sarl
adc
clc
dec
imul
jg
cmp
xchg
xchg
lahf
testl
cmp
or
std
add
cmp
mov
loop
and
mov
pop
mov
rcrb
aad
jnp
lds
addr16
js
cmp
in
enter
out
test
mov
test
clc
push
sti
xchg
ret
aaa
push
dec
push
and
sbb
imul
aam
or
aad
dec
cmpsb
and
lods
add
cmp
nop
setg
loop
dec
out
mov
push
dec
or
mov
imul
cmp
sbb
cmp
push
dec
xor
subl
stc
std
and
into
popa
xor
pushf
push
int3
sarb
fiadds
aad
cli
dec
cmpsb
pop
push
js
rcll
mov
inc
nop
push
sbb
and
dec
clc
pop
ljmp
bound
iret
mov
adc
cmc
add
lret
test
mov
out
cwtl
mov
mov
jne
or
dec
js
in
add
mov
repnz
pusha
and
ficoml
jmp
xchg
jecxz
fdivl
jl
sbb
mov
push
cmp
out
jo
jb
lds
pop
push
xchg
out
lret
or
xchg
sub
arpl
lods
push
mov
int
lret
mov
sahf
movsl
sub
jne,pt
mov
cmpsl
xlat
dec
mov
les
movsb
insb
adc
stc
pop
cmp
mov
stos
push
out
jae
clc
mov
test
sbb
mov
lret
sbb
inc
pushf
or
sub
sub
jp
or
mov
lock
sahf
lret
mov
cld
mov
cmp
ret
outsb
or
out
out
cmpsb
and
nop
test
fsts
xchg
in
xor
inc
imull
fiaddl
into
les
cld
sbb
bnd
int
inc
loop
imul
lock
lods
jp
add
mov
xor
jb
add
clc
pop
cmp
cmc
repz
outsb
int
in
sub
in
inc
mov
stc
inc
xchg
pop
inc
jb
aaa
dec
mov
cmp
aaa
mov
mov
movl
pushf
jae
jp
test
sub
repz
out
test
out
js
adcb
out
jne
movsb
orb
fsubrs
pop
cmp
mov
or
push
push
mov
pop
adcl
lret
mov
mov
push
or
mov
or
dec
sbb
ss
jno
aas
mov
int
sbb
dec
jne
shrl
andnps
mov
lcallw
xchg
fbstp
and
gs
sbb
dec
lods
pop
ss
iret
jb
xchg
ljmp
mov
cmp
cltd
sub
scas
mov
push
xchg
inc
adc
test
xchg
xor
enter
imul
cmp
mov
mov
ljmp
sbb
insb
cwtl
pop
xchg
fxtract
dec
adc
sub
scas
mov
push
jp
bound
push
aas
xlat
subl
cmpsl
mov
xchg
loopne
push
pushf
scas
lock
mov
cmp
jbe
test
repnz
lret
mov
filds
roll
sahf
jl
lret
ret
mov
fisttpl
add
sbb
rcl
push
das
notl
xor
xchg
fildll
jmp
xchg
icebp
aaa
push
testb
loopne
sahf
mov
inc
lahf
lret
ljmp
cmp
repz
rclb
fists
rolb
dec
divl
and
xorb
lods
gs
insb
cmc
aas
js
lret
addb
test
xor
push
dec
or
mov
cmpsl
scas
pop
sub
bound
inc
pop
lods
shrb
stos
push
inc
pusha
cmpsl
sub
add
or
flds
insl
cli
mov
sbb
jmp
cmp
aas
dec
repnz
cmc
pushl
fcmovnbe
jmp
mov
lret
xrelease
mov
or
or
pusha
and
xchg
gs
cli
fildl
add
cmp
orb
es
jno
mov
inc
xor
jp
movsb
mov
inc
out
xor
inc
popf
mov
lret
mov
adc
dec
outsl
pusha
mov
lea
leave
lods
outsl
fsubr
jmp
mov
jmp
popf
movsl
push
inc
enter
inc
insl
or
lcall
or
sbb
sub
xor
stos
and
test
aam
cmp
mov
popf
lds
dec
sbb
aad
push
pop
nop
mov
aaa
repz
xchg
imul
sub
rolb
lret
ret
cltd
in
iret
out
jbe
dec
mov
bound
mov
add
loope
lds
lret
lahf
inc
fsubp
rorb
iret
mov
push
add
xor
mov
scas
jge
ljmp
xlat
jecxz
mov
and
or
sbb
imul
hlt
fildll
je
aad
call
ljmp
fimull
xchg
xchg
or
mov
rclb
xchg
inc
add
movsb
js
inc
rcl
xchg
add
mov
sti
or
imul
std
aad
mov
or
cmp
cmp
addr16
dec
mov
ljmp
xchg
shl
lret
adc
jp
or
mov
lret
mov
stos
mov
addr16
pop
mov
inc
sub
jb
insl
sub
jmp
imul
mov
adc
cmp
mov
add
sbb
repz
sub
cmp
pusha
fmull
mov
aas
and
js
jno
sbb
xor
test
pop
xlat
fnsave
adc
mov
adc
bound
lds
shlb
js,pn
lret
mov
dec
dec
popa
movsl
xlat
jl
clc
and
fdivrs
mov
loope
fimull
mov
or
xchg
stos
sub
add
dec
test
mov
rcl
rorl
in
mov
pop
lret
jb
mov
push
pop
xchg
add
inc
mov
inc
inc
incl
lret
mov
dec
jnp
cltd
xor
test
push
jmp
jle
push
add
jno
jecxz
fmuls
mov
jo
loop
push
inc
jle
jmp
stos
mov
pusha
jbe
nop
pop
leave
lret
dec
loop
fidivs
or
xchg
les
les
sar
sub
daa
aas
lahf
lods
sub
mov
jg
out
push
stc
pop
test
clc
notb
pop
cwtl
mov
jbe
lcall
inc
cmp
pusha
pop
xchg
sti
adc
adc
scas
popa
clc
sub
sbb
mov
es
shl
xchg
mov
faddl
jns
pop
push
mov
iret
lods
dec
ret
xor
push
aas
xchg
add
xlat
lea
xchg
and
mov
shlb
or
push
push
sahf
fsts
stos
addr16
push
mov
sub
mov
lods
jecxz
lret
cmpsl
inc
in
mov
outsb
mov
out
outsl
mov
jp
outsb
sbb
hlt
shrb
mov
jp
push
out
adcl
mov
sbb
outsl
and
clc
dec
dec
ljmp
jg
xor
lcall
push
rcr
pop
stc
fsts
adc
cmovns
mov
pop
dec
jl
mov
xchg
cld
cmp
xor
les
mov
gs
jbe
pop
movsl
sbb
insl
sbb
dec
cltd
jmp
out
lock
mov
aam
cmp
cmc
mov
xchg
push
loop
xchg
and
or
jl
js
incl
.byte
add
add
push
add
add
add
adcb
add
inc
add
sbbb
add
pop
add
addb
add
mov
add
addb
add
add
add
nop
add
addb
add
add
add
test
add
add
add
or
add
rolb
add
add
add
or
add
add
add
add
add
add
add
and
test
add
test
add
test
add
push
and
add
add
jl
add
sub
and
xor
bound
inc
add
add
dec
add
add
add
bound
jno
jbe
xor
add
add
add
add
dec
add
insl
add
and
inc
add
dec
add
add
and
jae
xor
imul
add
inc
add
xor
dec
add
add
push
add
dec
add
add
add
push
add
jno
js
imul
and
popa
add
add
insb
add
jbe
dec
add
dec
add
dec
add
add
inc
add
add
jb
imul
insl
add
add
jbe
inc
add
add
inc
add
add
add
imul
add
jns
inc
add
add
popa
add
pop
add
dec
add
add
add
add
imul
add
data16
add
and
bound
xor
jbe
dec
add
add
add
push
inc
add
add
jo
and
push
add
and
dec
add
outsb
add
inc
add
push
add
add
add
add
add
add
push
add
add
add
inc
add
popa
add
xor
data16
add
add
inc
add
add
insb
add
outsb
add
add
add
push
add
and
add
add
add
je
pop
add
insl
add
arpl
push
add
add
xor
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
inc
add
add
dec
add
add
add
bound
jno
jbe
xor
add
add
add
add
dec
add
insl
add
and
inc
add
dec
add
add
and
jae
xor
imul
add
inc
add
xor
dec
add
add
push
add
dec
add
add
add
push
add
jno
js
imul
and
popa
add
add
insb
add
jbe
dec
add
dec
add
dec
add
add
inc
add
add
jb
imul
insl
add
add
jbe
inc
add
add
inc
add
add
add
imul
add
jns
inc
add
add
popa
add
pop
add
dec
add
add
add
add
imul
add
data16
add
and
bound
xor
jbe
dec
add
add
add
push
inc
add
add
jo
and
push
add
and
dec
add
outsb
add
inc
add
push
add
add
add
add
add
add
push
add
add
add
inc
add
popa
add
xor
data16
add
add
inc
add
add
insb
add
outsb
add
add
add
push
add
and
add
add
add
je
pop
add
insl
add
arpl
push
add
add
xor
add
add
add
add
push
add
add
add
add
add
add
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
or
add
jnp
add
add
push
add
add
add
add
add
add
add
mov
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
push
add
add
xor
cmp
xor
xor
inc
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
add
inc
add
add
dec
add
push
add
inc
add
add
add
add
adc
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
xor
or
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
cmp
xor
add
push
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
pop
add
jno
jp
jb
add
cmp
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
jne
inc
add
pop
add
add
jbe
add
sub
add
add
outsl
add
add
je
dec
add
insl
add
add
add
aaa
add
push
add
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
aas
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
gs
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
pop
das
imul
mov
aas
out
jbe
orb
adc
dec
push
ljmp
sarb
fcmovb
mov
imul
mov
adc
xor
push
sub
idiv
push
mov
int
jle
hlt
aad
pusha
into
not
and
test
data16
add
aad
jecxz
jg
pop
in
test
movsb
int3
movsb
out
ficompl
clc
movsl
pushf
push
add
lcall
gs
ja
out
sbb
test
adc
lea
std
mov
out
or
jae
clc
sub
fcoml
test
lret
mov
std
xchg
shl
xchg
movsl
call
jae
mov
cmp
mov
dec
pop
mov
pop
negl
xlat
icebp
stos
lret
clc
adc
cmp
mov
mov
loope
pusha
push
cmpsl
jle
cmp
mov
fiadds
rcll
mov
bound
test
shll
into
jecxz
jle
stos
jns
lds
repnz
xchg
mov
stc
adc
lds
xsha1
cmpsb
dec
jg
out
popf
sub
js
dec
out
push
loopne
mov
push
bnd
dec
xor
fcom
dec
xlat
leave
add
lret
sti
lahf
xchg
fsts
mov
cmc
inc
mov
in
dec
dec
xorb
cmp
and
sbb
pop
out
xchg
test
inc
sarb
pop
push
ss
call
ret
pusha
in
mov
lahf
add
loope
cli
lock
or
xchg
fucomip
xchg
ja
lods
fisubs
mov
gs
fadd
cmp
pusha
jbe
sbb
int3
mov
pop
xor
cmp
push
lahf
pop
cld
iret
loopne
xchg
jo
mov
int3
out
shrb
xchg
jns
mov
mov
ja
sbb
jbe
sbb
mov
push
dec
or
movb
data16
mov
mov
xor
and
add
and
push
lret
sbbl
or
aas
cld
cli
inc
or
add
inc
out
insb
loope
pop
leave
lcall
rolb
dec
addr16
std
mov
sub
cmpsb
mov
and
gs
test
ljmp
mov
bnd
add
mov
sti
dec
or
in
inc
pop
jecxz
cmp
test
lods
aas
dec
ja
lods
mov
scas
lret
jnp
push
js
adc
ror
loopne
mov
out
mov
mov
cmpsl
rcrl
adc
sub
into
sti
add
lret
mov
pusha
dec
jp
outsb
xor
jg
and
or
cmpsb
dec
loopne
clc
jo
rolb
stos
and
lret
ret
mov
cmp
mov
ja
adc
add
ret
lcall
mov
mov
lcall
out
scas
mov
mov
ss
pop
xchg
lret
add
cmp
jb
fs
or
xor
push
pop
jecxz
movsl
mov
sbb
test
jg
mov
lret
test
fnstenvs
and
pop
rcr
pop
aas
pop
clc
inc
xor
mov
dec
cmp
inc
fisttpll
lods
adc
subl
aad
sbb
or
push
lea
lret
xchg
jle
push
fisubrs
xor
in
push
jae
sbb
shrl
dec
out
cli
adc
push
xor
aas
movsl
mov
sbb
mov
jbe
inc
js
rcl
mov
cwtl
or
fwait
mov
dec
jecxz
xchg
cs
sti
icebp
gs
xchg
sbb
cltd
adc
adc
sub
pop
sbb
pop
or
mov
inc
sub
aam
pop
mov
out
ss
push
mov
cmc
jne
mov
stc
xor
mov
adc
mov
jnp
dec
push
cld
cmc
and
xor
in
ds
xchg
xchg
sti
hlt
jmp
aad
xchg
cltd
add
fistps
bound
cmp
xchg
pop
mov
push
cmc
stos
vucomisd
pop
lods
or
in
cld
lods
call
inc
js
or
cs
fcoms
mov
mov
xchg
push
je
imul
fld
jecxz
mov
push
shrb
lods
and
or
pop
push
lret
inc
outsb
cmpsb
mov
in
jle
test
in
decl
fstl
insb
mov
sub
mov
pop
push
aaa
mov
mov
repnz
out
loop
add
mov
cwtl
mov
mov
pop
movsl
lods
imul
cmpsl
test
sub
add
mov
stc
movsb
sbb
std
xchg
jno
aaa
cmp
cmp
inc
cmp
dec
xchg
in
fstpt
xorl
scas
ljmp
push
cmp
jo
push
mov
insb
sarl
and
iret
mov
sbb
data16
xchg
idivl
mov
imul
push
call
js
dec
out
push
dec
pop
loop
call
mov
sbb
addr16
aam
push
rcrl
add
inc
arpl
cs
xchg
inc
mov
or
arpl
movsb
pop
repz
push
xchg
add
clc
fmulp
in
fwait
in
js
popf
jmp
es
and
cmpsl
inc
mov
mov
sahf
mov
ss
hlt
scas
mov
repz
mov
add
xor
adc
cmpsb
mov
scas
cmp
jbe
fmuls
in
adc
push
in
lods
lret
ret
inc
jmp
test
pop
inc
idiv
arpl
fistps
adc
cmc
lds
mov
inc
imul
rolb
clc
shl
inc
and
push
adc
xchg
dec
dec
cmp
scas
xchg
xchg
lock
jno
lcall
adc
adc
pop
and
in
in
gs
out
daa
sahf
hlt
jg
mov
fiaddl
in
jge
adc
xlat
mov
cmp
sar
test
push
sub
push
xchg
bound
inc
in
push
inc
jo
dec
lods
mov
popf
sub
or
dec
enter
std
insl
jno
dec
insl
mov
dec
lods
imul
jo
pop
arpl
stos
ret
add
dec
push
inc
xchg
mov
fnsave
add
and
cmp
add
sbb
dec
aaa
mov
outsb
or
mov
or
pop
js
je
test
mov
push
inc
dec
outsb
dec
mov
xchg
mov
dec
jns
loop
and
data16
sub
cmp
hlt
movsb
jge
mov
dec
les
sahf
pop
inc
es
adc
test
jae
jp
inc
idivl
dec
andl
or
add
lret
call
mov
mov
mov
and
cmpl
mov
xor
imul
add
adc
lds
or
pop
enter
mov
lods
jne
sub
and
addr16
pop
xor
dec
sub
imul
and
movsb
jg
movsb
lret
xchg
adc
sbb
stos
and
js
dec
and
shl
mov
cmc
xor
lea
les
xchg
and
imul
js,pt
mov
lods
pusha
or
out
test
xor
pop
ret
jae
cli
ja
push
inc
pop
pushf
mov
call
add
aas
cli
jb
pop
push
clc
cmp
shrl
or
mov
lret
lods
fisubrl
arpl
mov
maskmovq
testl
dec
mov
lahf
xor
inc
clc
shlb
out
pop
int
jo
push
inc
or
dec
pop
js
inc
mov
add
push
gs
add
js
out
shrb
outsl
mov
mov
daa
xchg
enter
xor
test
clc
add
sbb
cli
gs
test
adc
les
adc
lcall
mov
lret
sahf
hlt
sbb
dec
mov
xchg
fcmovnu
mov
dec
cwtl
lret
mov
push
ds
push
mov
loopne
into
inc
js
insl
sbb
or
lods
test
cmpsl
arpl
decb
adc
ljmp
test
dec
rcll
pop
dec
push
std
jo
ret
cltd
stc
add
lret
ss
pushf
mov
xchg
sbb
mov
sbb
mov
adc
xor
lods
sub
dec
xor
sbbb
and
jmp
inc
shl
xchg
outsl
inc
and
in
mov
cmp
stos
neg
jmp
pop
sbb
fstl
lods
lret
fimull
ret
cmp
mov
dec
in
inc
js
jno
xor
xor
inc
dec
push
imul
jg
jg
data16
out
pop
dec
int
dec
notl
imul
test
sbb
jb
outsb
dec
loopne
mov
cmp
push
push
lret
ja
xor
fsubrs
aas
test
arpl
test
iret
pop
js
rol
push
dec
loop
xor
loopne
movsb
mov
lock
loope
sbb
outsb
xchg
enter
xchg
inc
lods
je
sbb
jbe
dec
sti
enter
movsb
cmp
int3
dec
les
xchg
popf
sahf
loop
adc
pop
sbb
jno
sbb
and
mov
adc
and
inc
pop
jo
or
in
xor
xchg
mov
mov
xchg
dec
clc
jp
cmc
lock
add
mov
mov
scas
out
xchg
gs
push
pushfw
dec
dec
movsb
pop
and
insl
test
clc
cld
frstor
mov
mov
xchg
imul
push
xorb
pop
fwait
movsb
push
call
inc
ror
mov
jl
cwtl
fcoms
test
jne
dec
outsb
pushf
rclb
cs
xor
daa
clc
fisubrl
bound
sbb
cltd
lret
js
in
jle
or
push
xchg
div
xchg
mov
inc
imul
adc
xor
ret
psubb
aaa
mov
cld
add
lret
cmc
stos
jb
shrl
dec
fisttpl
repz
icebp
jecxz
and
pop
or
or
push
ret
mov
std
rcrl
nop
sub
or
loope
cld
pushf
xor
or
sbb
sbb
lret
add
mov
notl
cmp
adc
or
sbb
xchg
notl
or
xor
mov
movsl
pop
inc
mov
loop
mov
sbb
inc
jp
dec
jo
fbstp
daa
add
or
dec
lcall
bound
notl
test
jb
lret
or
imul
add
and
mov
dec
in
outsb
cmpb
ficompl
add
lret
jb
js
or
shll
imul
stc
xchg
xor
jne
sub
fiadds
hlt
jg
or
mov
fmull
xor
push
pushf
add
bound
loop
fdivrs
popa
or
aam
and
jae
mov
imul
pop
cmp
and
sbb
or
or
xchg
lcall
xorb
xchg
ja
subps
xor
and
mov
int3
lret
mov
add
sbb
mov
mov
push
imul
ljmp
fisttpll
out
lahf
adc
mov
rclb
es
push
popa
or
mov
adc
or
pop
mov
icebp
push
js
dec
adc
push
lcall
lcall
hlt
faddl
insb
fbld
add
sub
sub
inc
in
testl
ljmp
lds
push
add
pusha
cmp
in
jecxz
jmp
jns
push
loopne
test
flds
mov
scas
in
lea
sbb
cmp
stos
dec
mov
lret
test
movsl
xchg
gs
jmp
fwait
clc
shl
sub
loope
movsl
xchg
ret
push
sbb
mov
push
cltd
mov
push
cmp
imul
pop
sar
pop
pushf
data16
clc
sbb
or
add
nop
jnp
cmp
mov
pop
dec
and
pop
cmp
call
cs
xchg
xor
dec
mov
sbb
push
sub
hlt
jne
push
inc
pushf
mov
rcrb
jnp
jg
clc
stos
mov
jge
xchg
mov
fcompl
out
inc
adc
and
aaa
mov
in
jb
lret
leave
repnz
add
mov
repnz
xchg
sbb
xchg
mov
mov
andb
imul
xor
imull
push
inc
movsb
adcb
push
fmulp
bound
scas
add
mov
and
bound
dec
push
inc
ret
jp
cld
or
aas
test
cmpsb
pop
and
xchg
hlt
or
lret
mov
imul
or
add
cmpb
jg
jae
mov
sub
int
dec
call
jmp
cmp
jne
and
mov
frstor
push
push
adc
xlat
stos
or
add
cmc
sahf
lret
loopne
pop
or
cmc
xor
adc
mov
sub
jge
dec
jns
and
sbb
test
push
adc
inc
clc
sub
pop
ret
mov
mov
sub
mov
xchg
mov
sbb
test
sbbl
cmp
jecxz
dec
repnz
daa
test
clc
lret
popf
xor
pop
aas
jo
fmulp
adc
or
mov
dec
es
aad
lahf
and
test
divl
fcmovnb
mov
ror
sahf
xor
andl
clc
lea
xchg
rolb
ds
xchg
and
test
mov
xor
push
mov
pop
sti
adc
jne
test
rcrb
aad
lock
lock
dec
out
fmulp
fwait
mov
sub
xchg
pop
ss
mov
adc
sbb
int3
adc
std
fidivs
mov
lret
leave
aaa
fisubrs
sbb
ret
add
jb
cmp
or
push
jp
scas
add
inc
mov
ds
adc
xor
dec
fdivrp
cmpsb
add
lret
int3
icebp
xor
sbb
stc
rcrb
std
rcpps
and
stos
test
push
add
ja
out
and
or
mov
imull
sahf
int3
add
add
mov
bnd
mov
mov
lret
pushf
dec
and
pusha
xchg
xchg
xor
in
repz
addr16
sahf
add
pop
enter
rcl
filds
pop
dec
sbb
mov
int
aas
jno
mov
imul
and
xor
xor
adc
cwtl
push
cli
es
pop
in
and
mov
in
xchg
inc
and
adc
lods
mov
mov
outsb
mov
bound
pop
sub
adc
mov
dec
jnp
scas
lea
mov
in
cmc
rcrb
mov
in
dec
daa
ret
outsl
mov
inc
lret
and
insb
loope
and
lret
sahf
mov
test
adc
imul
add
std
sub
clc
cli
fcomps
ss
pop
mov
inc
arpl
mov
lret
sub
sub
mov
dec
or
pop
jmp
cmp
pop
dec
jg
or
xor
xor
or
and
xor
icebp
or
out
arpl
clc
and
in
and
pop
dec
mov
out
dec
push
mov
dec
and
xchg
push
mov
adc
inc
xchg
cmp
adc
push
fidivs
ljmp
pop
lret
movsl
cltd
push
lods
pop
rcr
scas
scas
fstpt
add
xchg
sub
adc
sub
jnp
insb
mov
cli
ss
push
xchg
cwtl
jnp
xchg
adc
out
sub
addr16
scas
and
mov
test
add
fmull
push
xor
ffree
lock
mov
xchg
push
inc
call
pop
pusha
dec
int
lahf
imul
int
jmp
inc
mov
js
loope
hlt
repnz
aad
imul
add
xor
pop
mov
xor
lret
in
jg
xorb
mov
pop
mov
loope
mov
pop
mov
icebp
mov
cld
mull
ljmp
push
clc
aaa
in
inc
mov
dec
pop
and
xchg
mov
push
dec
loop
clc
pop
inc
or
jo
stos
mov
push
negb
jmp
or
cld
mov
adc
les
lret
enter
loope
movsl
lods
aam
mov
std
stos
sub
gs
push
pop
sub
mov
andb
mov
bound
js
cmc
cmp
mov
adc
xchg
das
jne
jmp
mov
xchg
roll
pop
and
aam
std
push
icebp
mov
pop
push
popa
gs
pop
adc
outsl
and
mov
dec
cmp
outsl
movsl
movsb
lock
imul
ret
es
out
sbb
and
dec
and
xchg
mov
iret
movsl
adc
arpl
fstpt
mov
mov
inc
mov
lahf
stos
jg
xor
mov
xchg
sti
xor
popa
js
inc
sbb
xchg
mov
mov
int
cli
push
clc
cs
rorb
int3
xor
sub
jbe
add
lret
scas
push
cld
mov
cmp
xor
dec
push
mov
scas
mov
cltd
push
mov
xor
sub
test
adc
sbb
nop
sbb
push
jae
jg
icebp
pop
popf
inc
or
push
mov
imul
adc
aaa
data16
aaa
js
stos
test
sbb
int
mov
push
lret
movsl
push
ja
iret
clc
mov
xor
jns
test
or
repz
mov
sub
inc
xchg
ss
jl
loop
mov
movsl
or
daa
lret
pop
add
stc
xchg
cmp
in
jne
cmpb
push
shll
cld
mov
fisubrl
testl
ljmp
fldenv
mov
arpl
out
sub
inc
and
cmp
mov
pop
pop
js
jns
test
cmpb
inc
out
and
mov
mov
jo
mov
add
sub
cmp
add
in
xor
sub
push
mov
loope
sub
test
imul
cvtps2pd
lds
dec
push
or
mov
clc
popa
lret
ljmp
sbb
mov
dec
int
insb
adc
pop
inc
roll
in
push
mov
into
lds
xchg
gs
sbb
push
adc
aaa
xor
stos
testl
sub
lea
pop
cmp
add
lret
iret
mulb
andl
jmp
ja
xor
inc
push
je
cmp
inc
int3
cmp
adc
and
lods
lahf
js
mov
jb
dec
into
mov
push
and
lods
test
je
sahf
idiv
dec
mov
loop
dec
repz
fs
js
jno
loope
mov
or
stos
mov
fs
int
daa
xchg
xlat
cmpsl
test
pop
inc
outsl
lret
adc
or
test
and
add
les
out
sub
mov
imul
inc
jb
add
mov
lea
addr16
cwtl
mov
incb
jne
outsb
adc
sbb
out
xchg
add
xor
subb
lods
std
out
data16
fwait
add
clc
push
xchg
test
or
fcmovne
ret
push
cmc
test
ficompl
xchg
aaa
adc
bound
push
xchg
in
mov
mov
xor
xchg
sbb
lret
cli
jo
jmp
sbb
stos
fidivs
fcmovbe
push
outsl
js
dec
fldt
jmp
cmc
adc
ja
test
enter
fmul
dec
loope
jb
ss
sbb
mov
mov
clc
sbb
pop
pop
popf
add
jmp
mov
adc
cli
sub
lcall
inc
mov
mov
cmp
sbb
test
adc
xchg
add
cmp
pop
arpl
mov
outsb
lret
scas
adc
sub
aas
lods
add
lods
xchg
cli
push
pop
adc
das
sbb
mov
pop
icebp
outsl
sahf
sbb
movsl
mulb
push
adc
rorl
push
jae
xchg
adc
shrl
sbb
je
push
sub
mov
int3
mov
adc
aaa
shrl
push
test
sbb
sbb
lret
adc
sbb
ljmp
test
stc
daa
fstpl
movsb
add
dec
mov
mov
mov
ret
and
rcll
jnp
dec
fmulp
aad
pop
andb
jecxz
movsb
pushf
outsl
pushf
pop
pop
and
hlt
lods
and
mov
out
lods
pop
or
mov
add
jmp
xorl
outsl
loopne
ds
shlb
pop
shll
lods
aad
testl
lock
out
pop
out
nop
stc
pop
cmp
gs
test
orl
outsl
jbe
test
xchg
cld
addl
lds
adc
inc
dec
loopne
test
test
lahf
jmp
rclb
cmpsl
mov
mov
lret
add
mov
adc
inc
mov
and
xor
push
iret
movsl
xchg
shrb
xor
sub
icebp
pop
in
xchg
int3
mov
mov
inc
mov
fisubs
cmp
and
lret
mov
ljmp
inc
and
xchg
inc
clc
bound
call
fadds
and
cli
mov
data16
push
fdiv
andb
leave
xor
sbb
insb
add
add
xchg
les
lret
scas
callw
push
aad
push
sub
lret
push
add
cs
insb
mov
push
out
xorl
mov
cld
mov
cmp
and
aaa
push
pop
pop
rcl
imul
ficompl
call
xchg
pcmpgtb
test
fcompl
dec
imul
fxtract
xor
daa
mov
sub
mov
mov
xchg
sbb
aaa
mov
and
xlat
dec
outsb
loopne
mov
mov
rolb
mov
jb
cli
and
jp
pop
fstpt
adcb
jb
sub
mov
and
notl
jle
ljmp
dec
pop
lock
and
xor
imul
std
clc
test
dec
lret
cli
mov
xchg
popa
jno
pop
dec
cmp
mov
rcll
mull
rorb
sub
dec
into
push
and
sub
test
mov
cmp
ret
repz
testl
daa
lret
inc
mov
fadds
pop
mov
and
mov
imul
cld
jno
cmpsb
stos
int
bound
pushf
lods
enter
jge
fstps
bound
cli
mov
inc
push
mov
cmp
pop
stos
jle
and
lret
lret
mov
mov
sub
stos
jbe
movsl
imul
imul
dec
jle
inc
mov
sbb
lret
cmp
sub
pop
xchg
or
xchg
sbbb
inc
dec
push
imull
clc
inc
stos
xlat
repnz
cld
adc
inc
mov
jbe
nop
pop
nop/reserved
insb
sub
int
sbb
and
jp
popl
dec
das
ja
cld
js
sub
add
popa
aaa
clc
in
jns
fdivl
js
mov
add
mov
jmp
cld
add
sub
mov
inc
add
out
imul
outsb
scas
xchg
shll
test
mov
xchg
sbb
test
add
inc
push
loop
xor
xchg
dec
jns
adc
mov
xor
sub
and
popf
pop
shll
sub
dec
aam
push
lods
lcall
adc
divb
jl
arpl
xchg
cmp
mov
into
and
jne
push
iret
add
and
scas
inc
push
scas
enter
test
repz
aaa
bound
xchg
mov
test
push
push
js
femms
dec
mov
mov
add
lret
mov
add
and
jl
into
scas
adc
ret
sbb
dec
fdiv
add
add
mov
cmpsb
shlb
mov
sbb
mov
negl
jle
jbe
and
jns
adc
mov
jbe
inc
movsb
mov
in
add
lret
les
cs
inc
mov
pop
insl
mov
ja
mov
push
adc
add
jp
cwtl
shll
and
jno
inc
shlb
out
pop
push
jno
test
rcll
into
adc
sub
adc
fcompl
loopne
data16
inc
rorl
and
int
sbb
and
scas
arpl
inc
push
pop
mov
and
xor
fs
pop
loop
imul
js
jmp
jo
test
mov
insl
dec
test
pop
sub
imul
mov
call
push
mov
cs
dec
sti
dec
mov
movsl
xchg
jb
mov
das
js
jg
jns
pop
out
or
cmp
pop
dec
push
test
jae
or
mov
or
add
outsl
add
dec
addl
jge
mov
pop
xlat
add
outsl
pusha
mov
fwait
or
dec
inc
sahf
pop
cmp
test
mov
jbe
lret
mov
xor
and
sub
mov
js
mov
mov
inc
sbb
das
jl
sub
push
push
pushf
xchg
rcrb
out
in
fcmove
adc
cmp
push
into
add
dec
nop
xchg
mov
cmc
ja
mov
les
push
mov
inc
cltd
or
dec
ljmp
std
jnp
mov
pop
dec
dec
add
mov
clc
xlat
bound
das
pop
hlt
push
enter
clc
lret
push
add
push
xor
dec
inc
stos
xchg
fistpl
mov
push
out
xchg
dec
xchg
das
mov
mov
js
je
int
sbb
addl
cmp
inc
jne
jg
jle
test
lods
rcr
lret
incl
negl
mov
dec
clc
dec
dec
ja
fcomip
push
enter
pop
dec
adc
lea
test
je
dec
and
add
mov
xchg
or
stos
lret
lods
sahf
sbb
xor
aam
mov
cli
xchg
lret
clc
fmulp
mov
in
sbb
xor
push
mov
inc
sbb
sahf
scas
les
or
mov
jl
dec
mov
orb
add
mov
call
rorb
jbe
mov
cmp
orb
xchg
and
add
pop
and
pop
push
inc
inc
sub
les
arpl
ret
and
inc
test
leave
cmp
cmp
jecxz
cmc
out
insb
loop
orb
rclb
push
and
sub
jne
in
mov
xor
mov
jmp
sub
adc
inc
mov
mov
fisubrs
inc
hlt
push
sbb
cmp
and
and
xchg
cmovb
pop
mov
lock
call
or
fnstenv
mov
xor
jmp
iret
test
inc
cltd
dec
dec
ficoml
sub
test
jo
xchg
dec
xor
cli
mov
mov
pusha
jmp
jno
add
pop
add
cli
test
in
std
test
xchg
and
xor
and
pushf
test
pop
lcall
stc
stos
fldenv
repnz
fcomps
andl
loop
js
fadds
in
cmpsl
addr16
hlt
sub
jmp
sahf
das
int
adc
push
xorl
or
mov
jg
test
lods
je
cmpl
fiaddl
dec
cmpsl
xlat
out
stos
and
cwtl
mov
cli
cmp
js
cmp
ja
xchg
mov
sub
test
mov
call
mov
test
lret
add
xor
mov
mov
pushf
stos
pop
add
or
add
push
xchg
cli
adc
lret
mov
pop
jo
sub
mov
pop
cld
jle
mov
xchg
out
mov
stos
jne
adc
sbb
outsl
push
lcall
call
movsl
scas
sbb
push
shlb
add
fadds
