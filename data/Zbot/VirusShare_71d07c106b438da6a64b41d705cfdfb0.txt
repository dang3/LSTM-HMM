push
mov
sub
mov
mov
mov
mov
mov
cmp
jae
mov
jmp
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
pusha
mov
push
push
call
call
test
jne
xor
jmp
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
push
lea
push
call
mov
push
lea
push
call
lea
push
call
push
push
push
push
push
mov
push
lea
push
call
mov
cmpl
je
cmpl
jne
int
xor
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
push
mov
push
push
call
test
je
mov
xor
jmp
movzbl
cmp
je
int
xor
jmp
movl
movl
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
movl
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
mov
mov
mov
push
call
add
mov
push
mov
push
mov
add
push
call
add
mov
sub
push
mov
push
mov
push
call
add
popa
mov
pop
mov
add
push
ret
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
jmp
mov
add
mov
mov
cmp
jge
movl
mov
add
movzbl
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jge
mov
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
cmpl
je
movl
mov
mov
sub
shr
mov
mov
add
mov
movl
jmp
mov
add
mov
mov
cmp
jae
mov
mov
movzwl
sar
cmp
jne
mov
mov
movzwl
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
jmp
mov
add
mov
mov
cmp
jae
movl
mov
add
movzbl
mov
movl
mov
add
movzbl
cmp
je
mov
jmp
jmp
xor
mov
pop
ret
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jae
mov
add
mov
add
mov
add
mov
mov
add
mov
mov
add
mov
xor
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
pop
ret
int3
add
add
cmc
iret
inc
add
dec
arpl
inc
jb
push
add
xor
sub
jb
push
jns
dec
data16
xor
sub
jb
push
jns
sub
inc
je
or
insb
sbb
outsb
adc
inc
cmc
add
ss
gs
jmp
inc
inc
add
push
je
inc
je
cmc
add
mov
je
int3
dec
outsl
ret
imul
add
mov
je
mov
outsb
popa
outsb
cltd
dec
gs
cmc
add
stc
and
add
add
and
add
and
add
and
add
inc
add
inc
je
daa
dec
arpl
inc
jb
es
add
inc
dec
popa
cmp
jb
push
jns
std
add
fiadds
outsb
rorb
xor
inc
insb
insb
cmc
add
loopne
jbe
push
cs
add
inc
insl
jae
push
add
cwtl
push
jbe
cmpsl
push
cs
add
pop
add
stos
dec
jb
addb
popa
inc
outsl
arpl
add
dec
inc
jb
pusha
dec
insb
inc
popa
inc
outsl
arpl
add
sub
popa
inc
jge
add
add
sub
inc
sbb
add
jb
and
push
pop
inc
je
push
pop
add
sub
inc
insb
outsl
add
fimuls
outsb
fadds
xor
dec
insb
insb
cmc
add
mov
je
movl
gs
push
add
cmc
rolb
cmc
mov
cmc
mov
add
cmc
mov
add
cmc
mov
add
cmc
mov
add
cmc
mov
add
cmc
mov
add
cmc
mov
add
cmc
mov
add
cmc
mov
add
cmc
mov
add
cmc
mov
add
cmc
mov
add
cmc
mov
add
cmc
mov
add
cmc
mov
jmp
add
add
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
jmp
mulb
add
mulb
add
mulb
add
stc
daa
add
and
dec
jmp
mulb
add
imulb
add
mull
add
jle
add
inc
daa
add
mulb
add
ljmp
jmp
mulb
jmp
clc
es
mulb
add
mulb
add
mulb
add
out
add
jb
jmp
mulb
sub
out
add
pop
daa
adc
dec
aaa
add
dec
daa
add
dec
daa
add
sbb
add
or
add
sub
add
add
sbb
add
or
add
or
add
fsubl
add
fsubl
add
int3
add
int3
movb
push
xor
add
add
int3
add
int3
add
pushf
add
pushf
add
mov
add
mov
add
pushf
add
pushf
add
mov
add
mov
add
pop
add
pop
add
call
mov
add
cmc
mov
add
cmc
mov
add
cmc
stc
outsl
gs
mov
nop
add
mov
fwait
add
add
add
mov
add
cmc
mov
add
cmc
pop
add
push
sub
dec
pop
add
cmc
xor
add
mov
or
cmc
mov
add
cmc
mov
add
cmc
incl
add
and
cmc
xchg
push
add
mov
jmp
popf
mulb
jmp
add
es
add
add
add
fs
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mov
add
mov
add
pop
and
add
add
add
add
add
add
add
add
add
sbb
add
or
add
or
add
sbb
add
sbb
add
or
add
or
add
fsubrl
add
fsubrl
add
int3
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
mov
add
mov
add
cmc
mov
add
cmc
mov
add
cmc
mov
add
cmc
mov
add
cmc
mov
add
cmc
mov
add
cmc
mov
add
cmc
mov
add
cmc
mov
xchg
add
adc
add
rcll
cmc
out
add
pop
nop
add
sti
popl
cmc
popa
nop
add
jae
add
push
nop
add
mov
nop
add
mov
add
es
nop
mulb
in
mulb
icebp
nop
mulb
ret
nop
mulb
lds
mulb
pop
xchg
mulb
icebp
nop
mulb
jno
mulb
adcl
mulb
xchg
mulb
daa
xchg
mulb
dec
xchg
mulb
inc
xchg
mulb
sti
xchg
mulb
lahf
xchg
mulb
xchg
xchg
mulb
popf
xchg
mulb
jns
mulb
dec
xchg
mulb
dec
mulb
jmp
cmpsb
mulb
lods
cmpsb
mulb
pop
cmpsl
mulb
in
cmpsb
mulb
frstor
mulb
test
mulb
add
mulb
add
pop
sub
and
pop
sub
sbb
add
add
add
pop
sub
mov
sub
stos
cltd
sub
inc
xchg
sub
dec
cltd
sub
adcl
sub
pop
cltd
sub
or
sub
jmp
xchg
add
sub
push
data16
cmp
add
data16
in
popa
sub
xlat
mov
add
andl
add
xchg
add
daa
add
daa
add
add
add
add
sbb
add
and
add
xorb
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
jbe
add
loop
add
mov
mov
add
mov
add
mov
add
mov
add
add
xor
add
jl
add
fs
add
add
push
mov
add
mov
xchg
add
test
xchg
add
mov
xchg
add
fistl
add
call
add
sbb
xchg
add
pop
xchg
add
adc
xchg
add
pop
xchg
add
jnp
add
daa
test
add
add
add
xlat
test
cmc
or
xchg
add
jecxz
add
jnp
add
repz
add
mov
add
mov
jg
cmc
daa
addb
es
jg
xchg
outsl
jg
es
mulb
imul
cmp
es
jg
xor
fnstsw
idivl
es
mulb
jge
mulb
xchg
jle
add
add
es
jle
es
jle
es
mulb
popa
jle
xlat
jge
sarl
mov
jge
es
jge
fnstcw
es
jge
es
jge
es
mulb
adc
mulb
add
je
add
je
add
jne
add
and
dec
je
add
and
and
das
je
add
jne
add
jne
add
jne
add
jne
add
jne
add
ljmp
aaa
fisubl
add
lret
xlat
ret
lret
mov
and
test
jne
add
and
call
and
sbb
jmp
sub
add
add
xor
add
and
add
and
add
add
into
and
sbbb
add
addb
mov
add
mov
add
push
add
mov
add
jl
add
nop
cltd
add
xchg
cltd
add
fs
add
mov
lcall
mov
add
and
add
inc
lcall
cmc
xor
add
pop
mov
cmc
stc
lea
cmc
sti
lea
cmc
in
add
add
cmc
dec
mov
add
push
mov
cmc
jne
add
sbb
mov
cmc
mov
mov
cmc
rorl
cmc
lahf
xchg
add
mov
cmc
xchg
xchg
add
std
xchg
add
xchg
xchg
add
add
add
cmpsl
xchg
add
dec
xchg
add
fstl
cmc
mov
add
or
add
sbb
mulb
decl
mulb
mov
es
mov
lea
mulb
imul
mov
mulb
lods
mulb
mov
mulb
sub
mulb
cmp
add
cmp
mulb
mov
mov
fisttps
mulb
arpl
mulb
ja
mulb
inc
mov
es
mov
add
imul
jmp
sub
sti
sub
lds
add
sub
stos
test
add
test
add
sub
and
data16
repz
add
sub
jecxz
sub
jmp
sub
mov
sub
leave
test
add
sub
push
sub
jno
sub
pop
test
add
xchg
add
test
add
xchg
add
sub
packuswb
add
sub
jg
sub
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
sub
add
sbb
add
sbb
add
mov
add
lcall
add
mov
add
add
movsb
add
mov
movsb
add
outsb
movsb
add
call
xchg
add
add
lret
add
xchg
add
in
add
jg
add
add
add
lahf
add
xor
add
int
add
pop
movsl
add
sti
movsb
add
xor
movsl
add
imul
add
fiadds
add
add
jne
add
jne
add
jne
add
jne
add
jne
cmpsb
add
scas
movsl
add
pop
movsl
add
roll
add
cmpsb
add
sbb
add
cmpsb
add
and
add
flds
add
add
jne
add
jne
jmp
cmc
cmpsb
sti
add
cmpsb
out
add
cmpsb
cmc
add
cmpsb
or
movsl
mulb
fldenv
cmc
cmpsb
ljmp
cmpsb
xchg
cmc
cmpsb
testb
cmpsb
jmp
sahf
mulb
sti
popf
mulb
in
popf
mulb
out
popf
mulb
stc
popf
mulb
repz
mulb
pop
sahf
mulb
adc
popf
mulb
sub
mulb
cmp
mulb
or
mulb
pop
sahf
mulb
addr16
mulb
add
and
add
pop
and
add
mov
add
jnp
add
and
add
pop
and
add
cltd
and
push
xchg
and
dec
cltd
and
in
and
jmp
mulb
add
mulb
add
hlt
sub
dec
aad
fwait
test
mov
pop
pop
hlt
sub
pmullw
jnp
sarb
or
cmc
cmp
add
lods
or
loopne
add
insb
jnp
mull
jle
inc
jle
fiaddl
mov
sbb
shlb
or
adc
xchg
lahf
jbe
add
add
jge
dec
jecxz
xor
push
mov
aam
andnps
pop
xor
or
ss
mov
outsb
call
mov
add
popl
lcall
add
pop
add
pop
jbe
call
sbb
pop
je
mov
jo
fldln2
outsl
outsl
adc
add
add
xlat
outsl
imul
out
je
adcb
int
add
insl
lods
inc
cmc
mov
add
cmc
mov
add
cmc
iret
add
cmc
out
jne
xchg
sbb
cmc
iret
add
cmc
int
xorb
xor
adc
jae
jge
jne
incb
add
test
lcall
push
addl
iret
sbb
mov
add
add
out
sub
fcoms
scas
jmp
subl
add
or
add
out
imul
jae
loope,pn
cmc
cs
add
es
add
es
or
es
icebp
mov
ss
in
add
flds
std
mov
ss
in
sti
or
add
add
daa
in
add
es
add
daa
icebp
add
add
icebp
push
add
imull
icebp
notb
add
cmpsb
add
imull
loope
push
add
add
imull
leave
mulb
add
hlt
imul
jmp
adc
in
sub
leave
jmp
add
out
push
add
out
push
add
aaa
add
lcall
add
out
ss
out
idiv
call
pushl
add
out
inc
add
out
push
add
add
add
out
cmpsb
add
mov
inc
add
push
add
sbb
pop
sub
add
add
add
add
xor
dec
xor
add
mov
sbb
or
or
mov
or
dec
add
lock
add
or
push
add
adc
jmp
xor
add
das
je
int3
das
xor
fsubrl
enter
or
add
das
and
pushf
xor
add
int
test
int
inc
cmc
int
call
cmc
int
pop
cmc
int
sbb
int
cwtl
cmc
mov
or
add
cmc
int
cmp
int
fdiv
fisttps
pop
cmc
int
insb
cmc
int
sub
int
mov
cmc
int
mov
int
dec
cmc
int
clc
cmc
fisttpll
add
int
push
cmc
int
adc
mov
mov
cmc
iret
or
iret
or
cmc
iret
or
cmc
fimuls
or
iret
or
es
or
jmp
or
jmp
add
daa
jmp
or
es
or
daa
jmp
or
es
or
daa
fisttpl
out
jmp
or
es
or
es
or
daa
clc
es
or
daa
test
or
daa
jmp
or
daa
jmp
add
sub
jmp
incb
add
stc
mov
jmp
out
mov
add
stc
lret
sti
das
add
out
pop
add
sbb
jmp
sti
inc
add
out
cmp
jmp
stc
fiaddl
sbb
add
decb
add
stc
jp
jmp
out
test
jmp
stc
mov
add
sti
es
out
push
add
adc
add
sti
pop
add
out
xor
xor
fsubrl
ret
and
add
sub
add
mov
add
inc
add
push
add
sbb
pop
sub
add
add
add
add
add
add
add
sub
sbb
mov
or
or
or
mov
sbb
dec
add
repnz
add
or
push
add
sub
add
mov
or
int
xor
cmc
fiadds
or
cmc
int
and
cmc
int
add
cmc
int
inc
cmc
int
ljmp
or
add
add
int
sbb
cmc
mov
or
int
cmp
cmc
fildl
cmc
int
insl
cmc
int
sub
cmc
int
or
cmc
int
dec
cmc
int
cli
cmc
fldl
cmc
int
push
cmc
es
or
daa
jmp
or
daa
jmp
add
es
or
add
add
es
or
es
or
daa
jmp
add
es
or
daa
jmp
add
es
or
daa
jmp
add
es
or
es
or
es
or
daa
add
icebp
sub
jmp
sbb
add
out
es
icebp
stc
call
std
call
icebp
and
add
decb
add
out
sub
add
insl
add
icebp
les
fincstp
pop
add
push
add
adc
add
testl
jmp
icebp
aam
fcomi
adc
jmp
incb
add
out
and
add
sbb
dec
add
incb
sub
add
fsubl
push
add
and
add
and
fisubrs
pop
add
and
fsubl
xor
int3
and
add
pusha
add
mov
add
inc
add
push
add
add
add
add
cmp
pop
and
pop
and
add
add
and
sbb
sub
or
mov
cmc
mov
or
cmc
mov
add
mov
or
cmc
mov
sub
mov
or
into
add
cmc
mov
or
cmc
mov
add
cmc
mov
or
cmc
int
or
mov
or
mov
push
cmc
mov
or
iret
add
cmc
mov
jmp
or
or
daa
jmp
or
and
jmp
or
daa
hlt
or
daa
jmp
or
add
add
daa
jmp
add
es
or
es
or
es
or
daa
jmp
add
es
or
es
add
es
or
daa
add
cmc
adc
add
out
cld
call
sbb
jmp
out
pop
add
out
mov
add
pop
add
out
sbb
test
cmc
cmc
call
out
clc
call
cmc
and
jmp
out
or
jmp
sub
jmp
out
push
add
jae
add
push
add
out
adc
jmp
push
inc
add
xor
add
add
add
sbb
sbb
outsb
add
mov
add
dec
add
std
add
push
add
sbb
add
sbb
add
mov
add
sbb
add
sbb
add
and
add
mov
add
and
mov
mov
add
inc
add
add
add
add
add
add
lods
cmp
mov
or
cmc
mov
adc
mov
or
cmc
mov
or
cmc
mov
or
mov
incb
cmc
mov
or
hlt
lods
sub
mov
or
cmc
into
decb
add
add
mov
or
cmc
mov
or
mov
cld
pop
cmc
mov
jmp
or
std
cld
cmpsl
es
or
es
cld
add
jmp
or
es
or
es
or
daa
frndint
mull
jmp
or
add
add
daa
hlt
or
daa
jmp
or
daa
jmp
cld
jmp
jmp
or
es
or
es
or
daa
jmp
fldcw
add
out
push
add
out
adc
jmp
dec
imul
jmp
call
add
sub
add
out
inc
add
out
add
jmp
pushl
jmp
out
mov
add
pushl
add
out
push
add
out
adc
add
leave
clc
call
out
cmc
call
test
inc
add
sahf
add
jmp
mov
jmp
mov
out
add
add
add
add
add
arpl
dec
mov
add
add
fiadds
dec
and
add
outsb
add
add
mov
add
mov
or
dec
add
stos
incb
int3
pop
add
lret
pop
add
fistps
adc
negl
add
add
pop
inc
add
pop
add
pop
add
les
add
cwtl
pop
and
nop
pop
add
cmc
scas
or
cmc
mov
add
lret
or
cmc
int
add
aam
xor
sub
add
scas
or
cmc
mov
add
lret
cmc
lret
xchg
int
add
aad
add
test
or
lds
or
jmp
jge
add
int
adc
iret
add
cmc
mov
pop
cmc
mov
push
cmc
movl
add
add
add
mov
add
mov
add
cmc
int3
add
cmc
es
adc
xor
xor
loopne
loopne
outsb
fcomp
ss
cmpsb
mov
fstpt
sbb
mov
sub
popa
stos
daa
xchg
sarb
imul
push
pop
ret
pop
out
pop
xchg
int
dec
or
inc
inc
mov
inc
cmp
add
iret
or
cwtl
xchg
leave
mov
xchg
cmpsb
mov
pushf
pop
inc
xchg
lret
std
mov
hlt
adc
pusha
repz
add
fwait
and
aas
cmpl
aad
es
mov
lods
and
jnp
rolb
sbb
xor
mov
imul
add
add
leave
inc
cmpsb
and
fcoml
ljmp
and
enter
ror
notl
jb
or
insl
iret
ficoms
and
icebp
dec
and
pop
sbb
lds
pop
outsl
das
int
addr16
aaa
mov
data16
fdivl
push
fildl
push
mov
out
in
mov
dec
mov
add
mov
call
and
add
fimull
push
loope
daa
push
cmp
insl
or
inc
fs
or
repz
ds
insb
sbb
adc
pop
and
push
insb
mov
add
or
loopne
cmc
and
gs
mov
cmc
and
mov
icebp
fcoml
ja
fimull
lods
dec
roll
add
add
aas
aam
data16
js
mov
dec
add
push
fcoml
mov
mov
arpl
rcll
adc
imul
outsb
mov
lods
and
mov
inc
or
dec
or
movsl
xchg
inc
add
lods
repz
inc
and
sbb
outsl
adc
pop
out
ret
es
pushf
std
lret
jbe
fwait
lret
adc
push
das
pop
outsl
cmp
dec
out
orl
in
inc
and
movsb
xor
inc
inc
mov
fsubl
cs
clc
xlat
ret
gs
xchg
xlat
pop
enter
lahf
sub
mov
in
xchg
into
popf
cmc
sbb
outsb
cli
sub
add
mov
mov
hlt
or
sti
shld
xor
cmpsl
add
sti
adc
fnstsw
or
jns
mov
adcl
xchg
pop
loopne
add
in
stos
push
xlat
pusha
rcll
pop
add
mov
cmp
dec
mov
sub
cmpsb
xchg
lock
and
fmuls
in
xor
sub
dec
xor
or
pop
fists
push
test
cwtl
adc
lock
jne
or
add
mov
pop
xlat
push
push
add
or
iret
ljmp
rorl
push
push
das
mov
mov
push
mov
cwtl
pushl
ret
shlb
rol
pop
insb
insb
fs
cli
jl
in
add
push
push
sbb
add
aaa
push
jmp
or
jb
pop
add
dec
repz
mov
mov
inc
xchg
mov
xchg
and
xchg
adc
fdivrl
fisttpl
enter
dec
mov
icebp
cmc
notl
fimull
pop
repnz
jecxz
push
mov
fldl
in
xor
or
pop
dec
clts
sbb
incb
add
push
jb
cltd
bound
lret
mov
or
mov
mov
iret
xchg
add
and
pop
inc
dec
inc
imul
sub
fidivs
inc
lcall
popf
mov
mov
es
lds
jno
ja
testl
add
loopne
add
jno
xor
inc
xlat
dec
pop
fsubs
push
imul
sbb
jne
sbb
mov
fimull
jmp
add
push
jmp
adc
cmp
stos
xor
rorl
and
loop
outsl
mov
mov
lock
outsb
xor
and
cmc
cmp
add
add
sub
dec
flds
addr16
mov
sarl
cmp
js
ss
popa
pushf
movsl
shrl
aad
fdivl
push
cmpb
rorb
add
fwait
xor
push
mov
push
sbb
fldl
call
cld
out
dec
popl
int
loop
xchg
lret
mov
mov
cmpsl
dec
iret
mov
movb
add
cmpsb
xchg
call
inc
arpl
pop
add
xchg
int
inc
shrl
add
pop
jbe
lret
cmp
sub
cmp
sbb
lahf
aaa
inc
fistps
pop
int
jo
or
imul
jnp
mov
xchg
adc
mov
lds
nop
pop
stos
lahf
pop
push
sbb
les
cmp
in
bnd
pop
call
add
xchg
les
inc
ficomps
pop
jns
shr
popa
jmp
xchg
mov
dec
pop
adc
filds
cmp
or
and
or
lea
xchg
add
mov
add
cli
fwait
lds
loope
jecxz
mov
xchg
pusha
pop
lea
notb
mov
cmp
loope
add
add
std
mov
bound
fnstsw
pop
xchg
push
xor
icebp
or
add
cmp
hlt
inc
and
mov
std
adc
out
xor
lret
or
mov
xchg
xchg
hlt
imul
cs
mov
adc
mov
fcmovb
addb
std
xchg
in
test
pop
lods
insl
xchg
lock
jbe
cmp
cwtl
test
mov
pop
fucomp
std
inc
adc
pop
sub
xchg
jns
cmp
push
clc
inc
pop
daa
rcl
xchg
mov
xchg
je
jns
mov
outsl
mov
jno
dec
aad
pusha
pop
into
xor
repz
popa
mov
dec
out
push
dec
call
insl
pop
dec
gs
inc
std
bnd
in
test
adc
imul
push
mov
cmp
jge
push
xor
dec
adc
push
loop
daa
or
sahf
cmp
mov
pop
int
cmp
rcll
xchg
ret
pop
push
xor
jb
scas
xchg
jmp
mov
xchg
pop
pushf
add
test
inc
icebp
push
andb
mov
pop
clc
inc
inc
inc
loope
sub
mov
jg
push
call
dec
imul
sbb
sbb
push
mov
in
add
std
push
fcomip
fs
adcb
mov
ret
mov
xor
or
add
add
pop
sub
jg
xor
fmuls
imul
inc
jp
mov
cli
lret
arpl
loope
cmc
ret
jns
pop
cli
xchg
push
pop
push
xchg
mov
xor
pusha
push
inc
mov
testb
in
adc
int
pushf
dec
lcall
jns
push
iret
bound
fdivl
push
cmpsb
dec
lcall
enter
mull
jns
popf
push
loope
aam
cli
inc
sbb
push
push
and
pop
orl
mov
repz
repz
mov
shl
inc
xchg
lods
or
arpl
adc
stc
in
nop
or
inc
inc
pop
sbb
add
cli
xor
inc
dec
imul
add
jg
cltd
dec
nop
and
addr16
jle
movsb
mov
pop
rcll
inc
iret
jne
pop
and
push
inc
sbb
call
pop
sbb
pop
sub
or
lea
jno
fdivrp
mov
mov
mov
inc
xchg
jmp
sbb
inc
cmp
in
movsl
loope
pop
shlb
outsl
push
jnp
test
add
aaa
push
outsb
sub
mov
fs
or
pusha
jle
jecxz
mov
or
pop
inc
sbb
mov
lds
add
push
push
xchg
add
bound
mov
sub
into
sbb
adc
xor
adc
mov
adc
push
adc
mov
cmp
mov
mov
jp
cmp
dec
cmp
mov
cmp
aam
aas
inc
mov
mov
cmp
sti
pop
pushf
aaa
inc
arpl
xor
mov
jo
xor
shll
imul
test
daa
adc
call
lahf
and
add
add
mov
and
les
js
stos
xchg
cld
int3
mov
push
jno
dec
cmp
lret
pop
gs
and
xchg
lcall
pop
push
out
repz
sub
ret
push
lret
pop
mov
roll
test
loopne
stos
dec
jbe
mov
outsb
and
xchg
jmp
orb
add
add
add
lret
mov
dec
jle
push
mov
cli
arpl
mov
lds
xor
sti
repnz
icebp
ds
add
mov
xlat
push
add
sbbl
add
add
lret
inc
out
cmc
fs
es
jmp
cmp
and
call
pop
jbe
ljmp
ljmp
sti
fistps
out
jecxz
repnz
stc
pop
repnz
movsl
lods
in
jle
mov
add
repnz
andb
aad
lock
int
subl
sbb
lock
test
inc
pop
outsl
add
jnp
pop
mov
aas
dec
pop
xchg
sub
lret
or
loope
es
loopne
sub
loop
ficoml
jecxz
les
push
push
cwtl
out
adc
in
add
out
out
push
sub
jnp
in
or
in
lea
call
arpl
int3
jmp
push
add
pop
imul
cld
ja
mov
incb
loopne
sbb
xlat
push
fdivr
mov
stc
imul
repz
add
andl
lock
sti
inc
icebp
sub
or
das
or
xchg
dec
idivb
mov
jno
mov
fistps
hlt
fnstsw
fbstp
fdivl
imul
dec
test
aam
pop
sub
sarb
mov
roll
xor
in
rcrl
sti
scas
pushf
les
add
add
jge
fnstcw
pop
push
push
mov
xchg
mov
adc
mov
imul
scas
inc
cmp
mov
adc
mov
xchg
sarb
cmp
xchg
scas
test
mov
test
jmp
or
movsl
imul
and
mov
jle
adc
add
jno
cmp
push
jo
ja
dec
jg
mov
sbb
insl
mov
mov
add
push
cltd
jne
and
stc
popf
je
mov
jno
jg
pop
or
cmpsb
cmp
test
stos
mov
stos
mov
or
rcll
jbe
adc
rcl
xchg
rolb
lds
push
or
roll
ret
add
out
pop
push
mov
sub
inc
lret
or
jp
mov
adc
cmp
imul
push
out
pusha
mov
popa
mov
inc
and
lret
fnsave
xchg
cwtl
jl
mov
inc
divl
cmp
jo
mov
adc
lock
jmp
adc
mov
mov
or
xchg
int3
jmp
sub
adc
lds
push
jge
pop
shrl
jne
xlat
add
push
scas
push
fnstsw
add
arpl
clc
sbb
fwait
movsb
call
lods
into
lods
inc
add
jnp
imul
jb
repnz
into
int
dec
lods
xchg
mov
pop
movsb
aas
sbb
xchg
lahf
jae
mov
call
xor
jno
cmp
mov
xchg
dec
out
jmp
ds
pop
test
cmpsl
xchg
lds
push
dec
cmp
xor
popf
xor
add
add
fucomi
xor
sahf
mov
xchg
cmp
mov
sahf
xlat
push
sub
in
or
mov
ja
cld
adc
rcrl
addb
push
aaa
sub
xchg
aas
adc
inc
imul
xchg
add
dec
pop
adc
out
cmpsl
push
mov
sbb
insb
cmc
jbe
subb
pop
jle
add
add
and
sti
es
psllw
int
call
ja
test
out
mov
mov
call
adc
mov
jge
cmp
dec
jmp
mov
xchg
mov
adc
mov
pop
and
inc
clc
fsubrs
cmpsl
inc
lret
dec
mov
xor
jae
cmpsb
jle
fimull
cmp
cmp
push
shll
inc
xchg
outsl
movsb
popa
negb
mov
pop
ds
sub
add
cmp
jo
inc
inc
push
cli
stos
push
jmp
inc
in
inc
scas
xchg
jno
fcmovnu
enter
fistl
jmp
imul
sar
push
pop
rcr
pushf
jns
lret
repnz
inc
xchg
cli
dec
add
jle
lcall
add
outsb
fwait
scas
negl
push
adc
movsl
add
mov
jge
test
cli
cwtl
inc
cmp
xor
lret
in
in
aas
mov
add
inc
mov
cmp
mov
push
xchg
cmp
mov
mov
push
nop
ret
loopne
andb
push
cmp
inc
xor
aam
xchg
push
add
add
orl
cmp
xor
sahf
mov
cwtl
mov
xchg
and
hlt
js
add
rcr
std
sarb
sub
xchg
divl
sub
pushf
lahf
pop
pop
fldenv
in
xor
mov
add
insl
ficomps
xchg
stos
mov
mov
add
mov
dec
arpl
add
add
push
mov
push
jecxz
mov
stos
int
mov
xor
or
stos
inc
jb
in
jmp
jnp
jae
ljmp
lods
fistpll
movsl
jne
sbb
jp
ss
pop
sbb
jae
popa
mov
lret
sbb
stc
lods
pusha
sub
mov
out
mov
inc
pop
fs
add
mov
roll
sbb
xchg
xchg
jne
stc
insl
fidivrl
nop
lret
insl
gs
or
add
movl
adc
sbb
sub
rcr
lods
sti
xor
fwait
sbb
push
aaa
loop
mov
lods
test
jbe
lahf
xchg
xchg
mov
mov
mov
jo
and
movsb
and
jae
inc
aaa
mov
jle
mov
imul
xchg
popa
les
sub
mov
xor
push
icebp
pop
adc
adc
shrb
pushf
test
and
fsubrl
mov
add
add
dec
js
cmp
add
add
or
mov
loope
mov
mov
jne
int3
cmp
cli
sub
jmp
add
scas
int3
jbe
or
rolb
pop
push
add
add
sub
lds
les
in
sub
xor
ds
mov
aad
mov
push
xorl
adc
add
add
adc
sub
cmp
sbb
cmpsb
push
and
pop
jo
push
adc
aam
mov
outsb
mov
pcmpeqb
push
jo
test
cmc
xor
stc
incl
add
or
add
dec
inc
and
cmp
lret
push
sahf
sub
and
aam
add
add
mov
jbe
jbe
xchg
aam
leave
and
xor
inc
rcrl
sub
lret
xor
inc
fcoms
cwtl
shll
pop
js
pusha
mov
inc
insl
xchg
jl
outsb
movsl
add
roll
insl
push
das
lcall
inc
and
mov
sub
clc
mov
pop
shlb
jno
adc
cmp
out
push
ret
shrl
pop
cmp
out
add
push
jg
push
cwtl
mov
mov
push
sbb
lret
icebp
and
cmp
dec
mov
and
rcrb
and
std
pop
push
add
pop
and
fcom
add
pop
or
imul
add
xchg
fs
mov
outsb
sti
or
bound
iret
ljmp
sub
aam
cmp
inc
or
repnz
fs
add
int
lret
mov
push
loop
cmp
inc
cld
cs
lea
insl
lcall
push
loopne
cld
inc
rcrl
shrb
imull
in
pop
mov
or
mov
std
adc
test
and
sub
mov
inc
aam
repnz
in
mov
stc
push
movsl
pop
leave
cwtl
sbb
cwtl
and
jno
mov
adc
pop
xor
or
cmp
imul
stc
mov
dec
adc
or
adc
lcall
ja
or
adc
jg
or
mov
cmp
and
js
into
or
cmp
sub
mov
test
shl
jge
repnz
inc
and
adc
scas
push
pop
ss
sbb
xchg
dec
fcomps
or
shrb
xchg
or
iret
lods
into
dec
cmp
imul
adc
je
mov
jae
and
aad
dec
scas
rclb
mov
and
push
push
xchg
jl
push
xor
ss
cmc
clc
sbb
dec
or
int
out
mov
and
inc
mov
sbb
xchg
or
mov
xor
clc
xor
or
jmp
xchg
push
rcll
imul
add
add
cwtl
lods
jo
sub
aam
int
shrl
aaa
mov
int
and
daa
inc
dec
pop
push
push
mov
gs
clc
iret
sar
loopne
cmp
lcall
imul
adc
aad
jno
aas
pop
jae
test
fwait
xor
cmc
mov
and
pop
aam
movsl
mov
mov
add
add
sbb
pop
movb
loopne
pop
in
jbe
sbb
jo
hlt
aas
lret
das
pop
jbe
movsl
incl
adc
imul
inc
xchg
cmp
cmpsl
push
adc
mov
mov
dec
popa
cltd
sbb
and
jmp
out
in
sti
ficoml
adc
and
fldt
mov
aas
lock
add
add
scas
push
jp
sahf
lds
std
into
jg
idiv
jmp
push
adc
mov
xchg
xor
mulb
add
jo
push
sub
jno
mov
rorb
mov
and
xchg
and
lea
mov
out
lea
add
xor
inc
push
jns
xor
push
ret
mov
lds
add
add
xor
cmpsb
xchg
out
movl
dec
cmc
xchg
cltd
call
scas
fsubrl
jmp
fiaddl
mov
lds
and
lret
pop
scas
jo
outsl
cwtl
inc
xchg
pop
xlat
inc
jns
out
pop
mov
imul
cwtl
sbb
add
or
out
lret
xor
adcb
icebp
and
sub
dec
push
arpl
jg
xchg
adc
adc
aad
pop
ja
mov
mov
sbb
leave
adc
mov
inc
dec
int
inc
xchg
lea
sbb
loopne
shl
ror
loop
cld
push
fildl
std
adc
add
inc
cli
mov
xor
push
sbb
aaa
sbb
jns
repnz
pusha
pop
fs
pop
add
decb
cmpb
push
jp,pt
faddl
test
out
add
sub
mov
stos
aaa
fsubrs
pop
adc
insb
testb
mov
mov
loope
imul
js
cli
pop
cltd
into
and
ret
pop
lahf
add
add
cltd
aam
mov
sbb
adc
js
xor
es
into
adc
jge
xor
insb
xchg
fwait
aam
pop
xchg
and
fidivs
pusha
push
pop
out
in
sbb
pop
adc
lods
push
out
dec
mov
pop
xchg
fucom
outsb
cs
add
sahf
loop
loope
and
push
std
pusha
mov
mov
out
arpl
subl
cmp
insb
aam
ljmp
ja
jecxz
js
or
sbb
sub
outsb
cmp
jo
dec
out
xor
mov
ret
push
xchg
jl
mov
xor
mov
mov
cmp
cmpsb
cwtl
dec
mov
or
xchg
sub
push
lret
insl
dec
xchg
pop
ret
insb
sti
ljmp
imul
jo
mov
in
cmp
xlat
in
ljmp
jno
inc
mov
pop
dec
mov
jge
pop
fnstcw
in
jge
sub
add
pop
mov
pop
lock
add
add
or
test
outsl
push
inc
inc
mov
jmp
xchg
hlt
mov
jbe
xchg
and
xchg
cld
outsb
nop
xchg
pop
js
jne
inc
adc
push
mov
mov
mov
fimuls
shufps
push
mov
dec
or
push
dec
jmp
movb
jg
add
dec
mov
mov
mov
add
add
add
push
mov
jnp
in
cmp
jg
std
aam
sbb
neg
mov
stc
mov
push
mov
sbb
stos
mov
push
dec
mov
inc
mov
leave
pop
mov
dec
ja
dec
or
gs
add
adc
fcomp
cmp
add
add
test
es
inc
incl
into
add
add
adc
push
xchg
js
lcall
fmull
sbb
fisttpl
cltd
pop
fcom
xlat
mov
in
push
mov
lahf
dec
xchg
mov
sbb
add
xchg
mov
cmp
push
sub
out
push
or
sarb
dec
ret
ljmp
divb
ljmp
pop
test
sbb
adc
pop
faddl
xor
sbb
stos
sub
dec
insl
mov
mov
gs
and
adc
cld
repnz
cmpl
icebp
mov
dec
mov
mov
dec
int
cmp
ja
mov
inc
pop
hlt
cmc
and
or
adc
or
test
hlt
sahf
inc
pop
loop
push
loope
cld
cmpsl
lea
add
mov
push
nop
xchg
mov
or
push
mov
push
js
hlt
push
lods
mov
test
pop
ss
aam
std
clc
push
js
xchg
xchg
inc
lock
mov
cmp
ja
mov
sbb
pop
xchg
add
insb
fbstp
daa
sti
outsl
cli
cwtl
jge
clc
push
adc
stc
adc
xchg
lods
adc
mov
imul
sbb
mov
and
xchg
push
dec
sbb
decl
mov
add
inc
add
aad
pusha
or
mov
popf
daa
mov
jbe
mov
mov
add
add
mov
sub
jb
push
mov
js
out
das
jo
es
or
decl
dec
lahf
and
pop
je
rorl
mov
rol
pop
pop
sarb
rcll
out
hlt
int
lock
outsb
lcall
stos
rcrb
negl
fisubrs
xchg
aaa
enter
add
xor
add
add
js
cs
adc
das
push
or
jno
mov
repz
lret
insl
std
aad
dec
mov
add
xchg
mov
xchg
jmp
insb
cmpsb
adc
pop
mov
push
add
or
outsl
aaa
adc
data16
rcll
xlat
aam
inc
mov
mov
in
lret
and
jge
pop
xlat
xor
dec
icebp
je
ret
mov
or
sarb
xchg
adc
fsubl
sbb
lock
or
dec
negb
movsl
and
sbb
sub
push
ljmp
push
push
add
mov
push
cld
pushf
fwait
shlb
test
push
sahf
pop
jle
arpl
add
jecxz
cmp
xchg
xchg
or
cs
iret
test
das
cwtl
outsb
xlat
sbb
xchg
jno
imul
insb
adc
mov
push
addr16
insb
sbb
sbb
stos
bound
push
cwtl
in
loope
xchg
scas
mov
stos
sub
fs
push
pop
mov
add
add
outsb
push
jne
xchg
dec
aaa
repz
inc
mov
cmp
xor
cld
sbb
fistps
ret
sbb
mov
lcall
mov
dec
sub
rolb
pop
loop
mov
jl
mov
pop
xor
push
pop
mov
aam
mov
push
xchg
add
cmpsl
cltd
and
cmp
lcall
pop
sub
je
and
dec
inc
jle
mov
lret
sub
xor
sub
lea
xor
lahf
and
icebp
lds
std
pop
icebp
xor
jo
inc
es
sbb
hlt
scas
sub
jns
jb
jnp
out
jp
add
add
sbb
xor
push
aad
stos
pop
fstpt
push
xchg
cmpsl
lds
inc
iret
jne
sbb
add
and
sbb
dec
inc
pushf
sarl
mov
pop
pop
sbb
loope
sub
imul
in
neg
aad
dec
adc
and
into
xor
mov
add
sar
lret
push
sarl
cmpsb
arpl
mov
or
test
add
ja
insl
stc
push
js
imul
adc
lds
xor
das
cmc
loope
push
inc
jmp
aas
xor
lcall
loopne
std
pop
fistps
adcb
sbb
pushf
test
insb
out
fildl
add
add
lock
xlat
in
lea
or
inc
mov
xor
pushf
add
mov
fbstp
cmp
xor
jge
add
lds
cwtl
cmpsl
or
jle
dec
scas
adc
and
lock
and
cmp
sbb
inc
popf
push
push
aad
mov
jp
xor
int
mov
add
xchg
push
pop
lds
imul
addr16
and
rcrb
sbb
rorb
addr16
lret
repnz
cld
xor
dec
adc
aad
loope
mov
xor
mov
mov
push
xor
call
push
and
insb
das
ja
in
sbbl
mov
jge
pop
push
test
aas
xchg
pop
push
xchg
icebp
stc
loop
push
dec
or
pop
mov
mov
xchg
les
cld
das
add
sbbl
sbb
leave
jge
mov
push
dec
insb
pop
mov
vmovmskps
lahf
inc
arpl
sbb
mov
jl
jp
xchg
inc
scas
jle
andb
pop
sbb
mov
cwtl
jns
add
and
push
pop
test
bound
pop
loope
gs
test
or
jp
push
mov
add
cmp
gs
add
pop
das
push
dec
and
out
cpuid
scas
mov
rcrb
cmc
xor
jle
scas
aaa
sbb
add
add
es
stos
and
out
push
sub
sbb
mov
xchg
mov
push
testb
in
data16
out
in
insl
daa
jae
or
ds
dec
sbbb
ret
iret
lahf
jno
loope
out
jl
jnp
pop
repnz
outsb
xchg
dec
outsb
mov
das
lret
xchg
pushf
and
inc
out
push
lahf
jno
add
ds
ljmp
aaa
ds
movsb
push
fwait
das
pushl
fmuls
out
jecxz
addl
pop
lods
pop
flds
xor
add
xlat
push
lods
aaa
mov
es
dec
sub
and
sub
test
pop
dec
fsts
and
xchg
shll
int3
mov
sarb
add
dec
test
test
in
mov
xor
push
cld
mov
xchg
jae
decb
cmp
cli
loope
jns
jbe
xchg
push
jmp
cmp
mov
dec
fwait
cmp
addl
insl
rorl
scas
jmp
test
ja
xor
syscall
aam
in
pop
into
aam
mov
inc
mov
stos
lcall
inc
stc
in
cltd
inc
dec
mov
fsts
outsl
popa
jae
lea
dec
lds
inc
xor
xor
add
fcompl
sahf
frstor
pop
dec
int
imul
daa
adc
in
fwait
add
jno
inc
sub
cmp
mov
in
push
pop
xchg
mov
fisubs
call
sbb
xorb
das
lcall
lds
push
mov
inc
cmc
cwtl
xor
add
mov
cld
sbb
jno
loopne
push
ja
add
add
ljmp
out
andl
aaa
cmp
adc
pushf
pop
cmp
cmp
lea
shlb
cmp
dec
cld
fldcw
int
mov
ret
lret
inc
icebp
aad
pop
fs
mov
sbb
je
mov
push
xchg
les
in
add
add
add
clc
cwtl
cwtl
stos
arpl
out
lret
out
push
and
sub
push
or
fmulp
icebp
mov
mov
out
dec
out
mov
push
cs
mov
fbld
and
mov
push
pop
or
xor
mov
invd
sti
jne
add
es
add
es
add
es
add
es
add
es
add
es
add
es
cmc
es
cmc
es
cmc
es
cmc
es
es
es
add
es
cmc
es
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
daa
sbb
loope
add
add
pop
push
jecxz
sbb
add
negl
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
fs
add
push
and
add
push
and
add
inc
and
add
pop
and
add
adc
add
xor
add
or
add
or
add
fsubl
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
mov
add
add
sahf
and
add
js
add
jge
add
jno
or
stc
add
cmc
roll
cmc
or
cmc
push
add
cmc
flds
or
mov
add
cmc
addl
or
xchg
add
cmc
sbb
cmc
inc
add
cmc
mov
or
roll
or
pop
add
cmc
jnp
or
sti
add
cmc
cmp
cmc
mov
add
cmc
fildl
or
sbb
cmc
fwait
add
cmc
dec
add
cmc
lret
add
cmc
or
cmc
mov
or
sbb
fildl
std
es
add
es
es
in
mov
add
roll
in
es
add
addl
add
std
es
in
arpl
in
es
add
adc
std
and
add
add
es
add
roll
es
es
add
cmpsl
add
es
add
es
add
es
std
xchg
es
add
add
stc
add
stc
add
imulb
add
cs
imulb
add
add
icebp
cs
imulb
add
add
imulb
add
imulb
add
imulb
add
add
icebp
add
stc
add
stc
cs
imulb
add
imulb
add
add
stc
add
imulb
add
add
stc
add
mov
sub
add
sub
add
or
or
pop
sub
add
or
int
or
sub
add
sub
add
sub
add
sub
add
or
cmc
sub
add
sub
add
or
in
or
aad
or
push
sub
add
or
lds
or
shrl
or
push
sub
add
sub
add
sub
add
sub
add
xor
cmc
stos
add
cmc
addb
cmc
cli
add
cmc
inc
add
cmc
mov
add
cmc
mov
add
cmc
cli
add
cmc
pop
add
cmc
rolb
or
mov
or
inc
add
cmc
jp
or
repnz
cmc
stos
add
cmc
bound
or
dec
add
cmc
add
cmc
mov
add
cmc
or
cmc
ret
cmc
cli
add
cmc
jb
or
addb
cmc
addb
add
or
add
cmc
cmp
cmp
cld
es
add
es
add
cmp
fiaddl
in
fiaddl
es
add
es
add
es
es
bound
cld
bound
es
in
es
cld
and
cld
and
rolb
in
rolb
add
add
es
add
es
add
es
add
es
add
es
es
es
in
es
cld
add
das
add
das
add
das
add
das
add
imulb
add
imulb
add
imull
add
icebp
das
add
imulb
add
imulb
add
imull
add
das
add
das
add
imulb
add
imull
add
add
add
das
add
das
add
imull
add
icebp
das
add
imulb
add
imulb
add
imull
add
das
add
das
add
das
add
das
add
imulb
add
imull
add
mov
and
add
or
sub
or
jmp
or
imul
add
or
dec
and
add
and
add
lret
and
add
and
add
and
or
arpl
or
shll
or
andl
add
and
or
inc
and
or
mov
or
ret
and
add
sub
add
push
add
or
addb
clc
add
cmc
lock
cmc
call
add
or
nop
add
or
mov
add
cmc
adc
or
addb
clc
add
cmc
lock
cmc
dec
add
cmc
lea
pop
cmc
sub
add
cmc
pop
add
cmc
popf
add
cmc
jge
pop
cmc
mov
add
cmc
xchg
add
cmc
add
cmc
movsl
add
cmc
add
add
add
es
add
adc
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
std
sub
or
es
es
add
es
add
es
clc
roll
lock
add
es
add
add
add
es
clc
es
add
es
clc
fildl
lock
imulb
add
imulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
imull
add
pop
and
out
and
or
ds
das
das
or
das
das
or
sbb
or
sbb
or
push
pusha
or
push
pusha
or
pop
pop
or
pop
pop
or
out
or
out
or
fcoms
or
push
or
push
or
push
or
push
or
push
or
push
or
push
or
push
or
mov
push
or
cltd
push
or
cltd
push
or
cltd
push
or
imul
pop
push
or
push
dec
push
or
push
pop
push
or
push
sub
push
sbb
push
cmc
inc
cmc
or
add
or
repz
cmc
or
add
sti
dec
adc
repz
adc
ljmp
add
push
adc
cli
dec
adc
repnz
adc
ljmp
psubd
repnz
adc
ljmp
psubd
repnz
adc
ljmp
psubd
repnz
add
add
adc
adc
jb
adc
jecxz
sbb
or
sbb
xor
sbb
xor
sbb
ds
sbb
loope,pt
in
loope,pt
fnstsw
rcrb
cmp
add
cld
cmp
repz
out
inc
jecxz
filds
sbb
cmovno
push
cmovno
push
incl
push
aas
repnz
out
aas
loop
out
aas
loop
fidivrs
rcrb
fidivrs
rcrb
push
inc
add
push
inc
add
aas
cmc
pop
stc
cmp
pop
icebp
cmp
pop
jmp
add
add
cmp
aad
cmp
aad
sbb
add
sbb
cli
cmp
ljmp
aad
cmp
adc
cmp
sti
cmp
in
cmp
aam
cmp
add
cmp
cld
add
in
repz
fsub
cmp
add
cmp
add
cmp
cld
add
in
and
add
or
or
push
sub
push
sub
push
adc
nopl
adc
or
adc
sub
xor
adc
into
xor
adc
xor
adc
xor
adc
xor
enter
test
adc
test
adc
cltd
xor
add
xor
adc
lcall
push
stos
aas
push
push
stos
aas
push
push
fwait
ds
pop
dec
ds
pop
imul
pop
imul
pop
cmc
push
sbb
in
push
sbb
in
inc
sbb
fldl
sbb
ja
sbb
sub
std
daa
sbb
std
push
sbb
in
push
sbb
in
inc
sbb
faddl
sbb
jbe
sbb
sbb
or
sbb
sbb
push
sbb
out
push
sbb
out
inc
sbb
filds
sbb
jae
sbb
je
sbb
and
sbb
and
sbb
push
sbb
out
push
sbb
out
inc
sbb
fiadds
fidivs
push
jne
sbb
daa
add
cmp
sbb
cmp
add
es
add
es
es
cmc
es
add
add
add
es
cmc
es
cmc
es
cmc
es
add
es
add
flds
cmc
es
cmc
add
or
es
add
add
sbb
sbb
es
add
es
add
es
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
icebp
es
mulb
add
mulb
add
mulb
add
add
mulb
add
mull
add
es
hlt
es
cmc
es
cli
es
lock
es
cli
es
push
daa
add
es
es
add
mov
decl
aas
add
dec
aas
add
dec
aas
add
dec
aas
add
dec
aas
add
dec
aas
add
dec
aas
add
dec
aas
add
dec
aas
add
sub
adc
push
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
aas
sub
dec
sub
add
sub
add
adc
cmc
dec
add
cmc
dec
add
cmc
outsb
add
cmc
outsb
add
cmc
jno
adc
jno
adc
push
add
cmc
push
add
cmc
push
add
jb
adc
cmc
outsl
add
add
add
add
cmc
inc
add
inc
add
cmc
outsb
add
cmc
pop
add
cmc
jle
popa
cmc
mov
add
hlt
ds
add
or
icebp
adc
fnstsw
and
in
ret
add
es
add
es
add
es
add
fiaddl
out
aad
or
faddl
add
xlat
add
daa
incb
add
add
es
es
fisubs
fldl
adc
aam
or
test
add
es
mov
adc
es
add
es
xchg
xor
es
xchg
xor
es
xor
lods
xchg
xor
movsl
xchg
xor
sbb
call
imulb
pop
fs
in
imulb
add
out
pop
mulb
add
add
add
add
out
cmpsb
mulb
add
out
adc
sub
int
out
inc
imulb
mov
out
push
and
lds
add
imulb
add
negb
lcall
test
decl
fs
and
fs
incl
mov
add
mov
mov
and
pop
mov
add
and
inc
add
and
enter
test
xor
in
mov
and
lock
or
inc
mov
sbb
dec
mov
str
inc
add
mov
add
mov
add
add
inc
add
and
add
cld
mov
add
sub
add
inc
add
mov
adc
cmpsl
popl
in
add
cmc
lahf
popl
adc
cmc
out
mov
add
cmc
mov
add
mov
pop
cmc
dec
popl
int3
add
cmc
jns
or
fwait
popl
xchg
add
cmc
xchg
pop
cmc
jg
inc
cmc
cmc
add
cmc
adc
or
push
popl
pop
add
cmc
dec
popl
ret
add
cmc
push
xchg
inc
cmc
aaa
add
cmc
dec
xchg
inc
cmc
mov
es
add
es
add
daa
test
add
es
xor
daa
push
xchg
xor
es
xchg
xor
es
xchg
mov
fadds
stc
es
xchg
mov
outsb
add
add
add
es
es
xchg
mov
add
es
mov
and
es
mov
xchg
add
es
xchg
mov
xchg
add
es
xchg
mov
xchg
add
es
xchg
xor
add
mov
out
pop
stc
and
adc
ljmp
data16
pop
stc
sub
xchg
xchg
pushl
sub
popf
xchg
call
negb
test
data16
and
sub
push
data16
sbb
or
pop
xchg
pushl
sub
popa
xchg
jmp
mulb
add
out
div
and
int
out
out
aaa
add
xchg
jmp
negb
add
imulb
add
idivb
add
data16
incl
mov
pop
add
and
add
movsb
inc
add
sub
add
add
mov
sub
add
movsb
inc
add
pop
add
movsb
inc
add
and
add
inc
add
sub
add
mov
adc
in
mov
pop
add
and
inc
mov
or
sbb
add
adc
add
call
pop
add
cmc
dec
test
adc
cmc
pop
xchg
ja
push
cmc
pop
xchg
adc
cmc
xchg
adc
mov
add
cmc
ret
test
lods
add
cmc
das
xchg
scas
add
cmc
add
or
jae
inc
cmc
pop
add
cmc
arpl
pop
cmc
pop
test
mov
adc
inc
test
xor
test
add
add
bound
add
adc
add
or
add
es
add
cmp
cli
sub
pop
daa
cmp
add
es
xorl
daa
sbb
es
add
es
xorl
daa
rolb
es
add
add
add
es
add
es
add
and
out
es
xorb
or
negb
add
jne
jns
pop
add
jne
ljmp
icebp
pop
add
icebp
and
cmc
out
arpl
and
std
push
out
dec
icebp
push
add
inc
out
fdiv
push
add
testb
jns
add
add
out
jl
and
test
out
mov
add
decl
repnz
inc
divb
pushl
sbb
inc
negb
add
mulb
add
bound
or
pop
lret
aas
add
daa
add
and
aas
add
add
lret
aas
add
lret
lea
add
mov
aas
add
sbb
lods
lret
pushf
and
add
lret
adc
or
ror
add
aas
add
int3
aas
add
and
add
add
int3
aas
add
es
jl
aas
add
and
xchg
int3
aas
add
add
or
aas
add
filds
or
mov
inc
cmc
jl
or
mov
inc
cmc
jns
push
cmc
jl
cmc
mov
jl
cmc
lret
add
cmc
jnp
inc
cmc
pop
add
cmc
scas
jl
cmc
loope
add
xchg
cmp
jge
cmc
ss
cmc
das
jge
cmc
cmpsl
add
cmc
inc
jl
cmc
in
add
cmc
xchg
jge
cmc
mov
jge
cmc
pushf
add
cmc
lahf
jge
cmc
adc
cmc
mov
inc
cmc
push
add
cmc
stos
jge
cmc
es
add
sub
es
add
es
jge
es
add
lea
es
add
test
es
add
cmpl
daa
popa
jge
daa
ss
cmpl
es
jge
daa
ret
add
cmp
daa
inc
add
and
daa
sbb
stc
sub
daa
repnz
es
jns
daa
xor
add
add
es
xor
es
add
fnstsw
es
mulb
add
int3
out
xor
mov
and
in
out
pop
stc
push
add
out
xchg
testb
sub
xor
dec
js
cli
idiv
decl
and
jne
out
es
push
add
negb
add
add
add
out
cmp
and
cmp
out
inc
stc
sub
stc
sbb
pushl
or
mov
clc
out
inc
negb
add
jmp
and
add
add
and
add
and
add
and
add
and
add
and
add
and
add
add
sub
add
adc
pusha
ret
nop
sub
jo
aas
add
sub
add
aas
add
add
ret
inc
sub
add
sub
add
ret
shrb
add
add
jg
adc
mov
inc
cmc
mov
cmc
mov
inc
cmc
lcall
cmc
pop
add
cmc
or
adc
add
add
lahf
test
add
cmc
clc
add
loop
pop
cmc
xchg
test
add
adc
jnp
inc
cmc
incb
sbb
test
sbb
cmc
pop
test
adc
cmc
jge
sbb
jg
inc
cmc
jns
add
xchg
test
sahf
add
cmc
mov
add
es
test
daa
insl
test
add
add
es
test
es
test
and
fsubs
loope
mov
bnd
add
cmp
out
es
add
xor
out
es
add
sub
jmp
daa
in
add
imul
out
es
mov
push
add
out
push
das
add
icebp
das
add
je
pushl
sub
sub
xor
sbb
mov
icebp
or
in
out
or
xor
push
jne
pushl
jne
incl
icebp
sub
cmp
xor
xor
decl
sbb
pop
jne
ljmp
jne
jmp
jne
call
das
add
out
div
and
dec
jne
jmp
or
call
sub
add
cmpsb
inc
add
add
pop
daa
add
dec
daa
add
dec
daa
add
pop
daa
add
pop
daa
add
dec
daa
add
dec
daa
add
sbb
add
sbb
add
clc
add
sub
sbb
add
add
add
xor
or
xor
add
add
fmull
arpl
test
imul
jno
dec
aaa
jne
push
dec
jns
pushf
es
pop
cmc
out
loop
push
in
fisubs
fcomp
imul
add
jno
cld
out
jne
or
jns
and
cmc
dec
add
cmc
dec
add
cmc
dec
add
cmc
dec
add
cmc
dec
add
cmc
dec
add
cmc
dec
add
cmc
dec
add
cmc
dec
add
cmc
dec
add
cmc
dec
add
cmc
dec
add
cmc
dec
add
cmc
dec
add
cmc
dec
add
cmc
dec
add
cmc
dec
add
cmc
dec
add
cmc
dec
add
cmc
dec
add
cmc
dec
add
cmc
dec
add
cmc
es
add
es
add
es
add
es
add
add
add
es
add
es
push
pop
inc
xchg
inc
jle
dec
inc
jbe
inc
inc
outsb
push
xor
push
and
push
adc
push
mull
icebp
cli
repz
push
push
out
xor
stc
jmp
push
push
lret
negb
out
push
inc
jmp
sbb
ficoms
inc
call
lahf
sub
inc
sbb
mov
sbb
scas
adc
cmpsb
fidivrl
lcall
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
fsubl
add
fsubl
add
int3
and
add
and
add
add
mov
add
mov
add
pushf
and
add
add
mov
add
pop
and
add
add
add
add
add
add
add
add
add
sbb
add
or
add
or
sub
add
sub
add
and
add
and
add
dec
add
hlt
dec
add
hlt
dec
add
hlt
dec
add
hlt
dec
add
hlt
dec
add
hlt
dec
add
hlt
dec
add
hlt
dec
add
hlt
dec
add
hlt
dec
add
hlt
dec
add
hlt
dec
add
hlt
dec
add
hlt
dec
add
hlt
dec
add
cmc
dec
add
cmc
dec
add
cmc
dec
add
cmc
dec
add
cmc
dec
add
cmc
dec
add
cmc
dec
add
cmc
dec
add
cmc
dec
add
cmc
dec
add
cmc
dec
add
cmc
dec
add
cmc
dec
add
cmc
dec
add
cmc
es
add
es
add
es
add
es
add
es
add
es
add
add
add
es
add
es
add
es
add
es
jae
mov
and
lea
dec
aam
adc
fstpt
push
das
xchg
cmp
nop
jg
addr16
xchg
lods
mov
cmp
mov
out
inc
ss
cmpsl
movb
or
insb
mov
or
sbb
push
insl
dec
and
fsub
jnp
or
das
aas
mov
sbb
leave
sti
pop
mov
icebp
in
aas
cmpb
mov
int3
rcrb
or
test
cmpsl
push
push
jecxz
mov
bound
jae
jnp
xor
and
mov
add
add
sti
call
xor
pop
mov
sub
xor
add
jae
movsb
lahf
dec
hlt
cltd
jne
mov
mov
or
mov
stos
mov
mov
jo
jle
out
sbb
cmp
dec
in
aaa
and
jns
or
shrb
shl
enter
push
in
pusha
push
xchg
add
add
or
cmp
jno
jae
filds
xchg
jns
addr16
test
lcall
ret
push
imul
js
call
addr16
push
pop
aad
pop
mov
insl
add
mov
adc
and
add
adc
add
jae
dec
xchg
or
inc
lcall
negb
in
test
test
mov
in
mov
insb
rorb
js
psubq
cmp
call
aas
out
roll
cltd
push
adc
enter
add
cmc
hlt
adc
add
movsl
imul
add
add
test
int
mov
fisttps
in
mov
cmp
gs
pop
xor
out
testl
scas
dec
jmp
pop
push
jl
cmp
push
dec
xor
cltd
cmp
inc
or
fstl
fstps
lret
shrb
loop
xor
or
sti
xor
or
xor
xchg
imul
mov
push
mov
jb
inc
mov
in
add
cltd
cmp
cmp
es
out
xor
mov
cmp
add
clc
mov
test
pushf
mov
xor
loope
clc
mov
xor
push
pushf
xor
push
lods
xor
push
mov
outsl
jl
xor
fstpl
mov
mov
mov
jbe
cld
push
les
pop
int3
xor
pop
add
aam
mov
iret
pop
fstpl
xchg
push
idiv
jle
pop
adcb
jbe
pop
cmp
dec
cmp
sbb
cmp
cmp
ret
or
adc
sub
cmc
mov
in
dec
outsl
orb
or
mov
icebp
sbb
add
dec
mov
add
pandn
scas
push
ret
sbb
insl
mov
stos
icebp
lret
jnp
xor
or
pop
fwait
add
adc
add
aas
push
std
cmpsb
jns
leave
cmp
mov
lds
inc
and
add
add
sbb
mov
push
sbb
xor
imul
jno
pusha
repnz
stos
sub
and
add
negb
hlt
or
xlat
mov
and
repz
and
rep
push
cltd
pause
pop
and
add
jp
popf
add
lds
inc
and
mov
dec
mov
test
push
testl
add
lcall
cmp
leave
repnz
into
xchg
adc
cmc
daa
xor
icebp
test
insl
idiv
loope
sbb
roll
xor
je
pop
in
xor
incl
in
leave
cli
mov
push
adc
xor
mov
or
xchg
inc
dec
aaa
add
lret
out
push
cmp
repnz
add
add
jae
xor
cli
icebp
or
test
inc
test
call
fsub
cmp
or
bnd
icebp
es
mov
push
push
scas
stos
push
lock
add
stos
and
insb
push
leave
in
sub
and
xor
pop
out
xor
pop
and
int3
ret
cmpsl
sub
or
into
rol
subb
int
cmp
mov
adc
jne
jmp
lret
adc
cmp
sbb
fwait
and
iret
jbe
mov
movsb
fwait
dec
or
aas
inc
adc
ljmp
add
pushf
pop
dec
xor
in
rcr
xor
cmpsl
out
rorb
mov
pop
fisubrl
pop
ja
out
adc
adc
test
add
adc
or
cltd
xchg
fisttpl
jnp
stc
pandn
adcl
xchg
adc
shlb
call
sbb
cmc
aas
arpl
cmc
sbb
add
lods
jbe
mov
mov
cmp
ret
aas
pop
cli
clc
jmp
adc
inc
cmc
xor
push
add
imul
jae
inc
or
mov
mov
mov
and
and
mov
cmc
sub
adc
jp
test
cmp
cwtl
mov
shlb
aam
or
inc
cmp
shrl
orl
sbb
add
add
cs
iret
xchg
jae
lods
sbb
push
mov
and
test
pop
pusha
dec
jne
push
pop
cmpsb
repz
in
inc
test
mov
mulb
add
mulb
add
mulb
add
mull
add
mull
in
sub
icebp
lcall
in
repz
stc
inc
pop
adc
dec
sbb
loope
nop
and
pop
leave
xlat
add
daa
adc
add
add
cld
sub
out
xor
push
in
cmp
add
ds
mov
mov
outsb
cltd
cmpsl
mov
xchg
stos
mov
jns
mov
pop
insb
inc
popa
arpl
gs
imul
pop
jno
and
ja
push
jns
sub
jg
test
xchg
fcomps
xchg
xchg
shlb
fwait
enter
lods
mov
cmpsl
subb
pop
lcall
je
mov
mov
adc
loop
lret
sbb
int
cmc
in
xor
cmpsb
stc
xor
lret
fcmove
adc
faddp
sbb
popa
out
push
insb
ljmp
add
xchg
dec
push
xacquire
imulb
pop
cli
outsb
jno
bound
add
cli
xor
or
repnz
lock
push
push
clc
sbb
imul
sub
and
rorb
adc
sub
sbb
and
loopne
pop
daa
xchg
in
pop
ret
push
mov
add
inc
mov
sbb
rcrb
xor
movsb
sarb
xor
cmp
sub
xor
cmp
enter
int3
mov
xlat
loopne
push
jg
cmpsb
jno
jg
insl
xchg
jns
addr16
xchg
pop
ja
mov
push
mov
pop
xchg
cmpsl
push
jle
xchg
inc
jp
popl
add
add
jno
xchg
mov
imul
xor
popa
lret
sub
push
pop
shll
out
push
fistpl
push
dec
jecxz
xor
rcrl
inc
jmp
sbb
repz
xor
ror
sti
mov
add
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
imulb
add
mulb
add
mulb
add
mulb
add
fsubrl
add
int3
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
mov
add
mov
add
pushf
sub
add
sub
add
add
pop
sub
add
add
add
add
add
incb
dec
sub
add
add
sbb
add
or
add
or
add
sbb
incl
xchg
xlat
incb
cmc
cmp
add
cmc
cmp
add
cmc
cmp
push
dec
add
inc
or
cmp
add
cmc
cmp
add
cmc
cmp
add
cmc
cmp
push
decl
dec
push
cli
cmp
add
cmc
cmp
add
cmc
cmp
push
add
add
cmp
cmp
add
cmc
cmp
add
cmc
mov
call
cmp
jmp
add
cmpsb
jmp
add
es
add
imul
cmc
es
add
es
add
es
add
es
add
imul
jne
jmp
out
push
or
out
push
or
out
bound
jmp
in
in
or
in
in
adc
cmc
in
sti
cmc
in
sti
cmc
add
sti
cmc
add
fcomi
add
imul
add
add
adc
sti
or
adc
add
adc
call
pop
adc
call
es
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
or
add
or
add
sbb
add
sbb
add
or
add
or
add
fsubl
add
and
add
and
add
and
add
mov
inc
add
add
mov
inc
adc
mov
and
dec
cs
pop
inc
dec
push
mov
icebp
push
sbb
add
xlat
inc
in
add
inc
sbb
push
stos
or
ret
fmull
pop
mov
js
pop
cmc
sbbb
mov
aaa
push
lret
sub
fldt
repnz
outsl
fidivrs
cmp
mov
cmp
jns
ss
push
in
cmp
clc
fxam
fistpll
pop
repz
add
sub
movsb
gs
stos
pop
and
dec
and
pop
sahf
imul
imul
sbbl
fwait
cwtl
pop
insb
rcrb
rcrb
ret
cld
iret
scas
pop
jne
cmp
or
xchg
mov
mov
ljmp
dec
cld
sub
jecxz
mov
add
add
xchg
xor
call
xchg
lods
mov
call
xchg
push
mov
inc
out
xor
rcll
shlb
push
push
mov
add
imul
cmc
incb
cmc
es
std
jp
add
cmc
flds
es
cmc
es
imul
add
mull
add
mulb
add
stc
add
es
mulb
add
add
icebp
es
mulb
add
mulb
add
dec
push
add
dec
push
add
mulb
add
mulb
add
scas
gs
mulb
add
mov
add
icebp
add
gs
mulb
add
mulb
add
sbb
add
add
and
add
call
sub
add
sub
add
sub
add
sub
add
sub
add
daa
add
fisubs
add
fisubs
add
into
sub
add
add
add
fisubs
add
fsubs
add
enter
sahf
add
sub
add
sub
add
add
add
daa
add
daa
add
sub
add
notb
push
add
push
add
testb
add
push
push
add
push
push
add
add
cmc
pop
dec
inc
cmc
movl
inc
cmc
fadds
add
add
cmc
leave
add
cmc
xchg
dec
inc
cmc
pop
add
cmc
daa
dec
inc
cmc
dec
add
cmc
cmp
cmc
pop
add
cmc
iret
dec
inc
cmc
cmp
dec
inc
cmc
pop
add
cmc
rorl
cmc
pop
add
cmc
ret
dec
inc
cmc
inc
add
cmc
mov
add
cmc
mov
mov
dec
mov
mov
add
mov
mov
xchg
add
es
add
mov
add
es
add
rolb
xchg
add
add
add
es
mov
inc
add
es
add
daa
aaa
add
es
add
daa
es
es
add
cmc
es
stc
daa
dec
add
and
inc
add
daa
dec
add
sub
adc
addb
icebp
mov
xchg
negb
add
imulb
add
std
add
add
add
add
add
jge
pop
imul
add
xchg
push
testb
inc
negb
aaa
mulb
add
idivb
sub
and
sub
pop
add
imulb
add
divb
add
idivb
add
divb
add
divb
add
mulb
cmp
imul
add
and
outsb
add
and
bound
cmp
push
add
and
add
and
add
and
add
or
add
and
add
sidtl
inc
add
dec
add
and
add
outsl
add
and
add
flds
jge
add
and
jne
xor
sub
sub
cmp
sub
add
add
add
sub
add
jns
xor
hlt
dec
add
and
xor
add
pop
hlt
ljmp
hlt
cli
add
hlt
in
sbb
hlt
xlat
add
stos
add
hlt
insb
add
push
sub
outsl
add
hlt
arpl
adc
je
and
jno
data16
pop
add
pop
add
hlt
mov
add
hlt
mov
and
mov
addr16
stos
add
mov
add
hlt
dec
add
hlt
es
add
and
cmp
inc
sbb
ret
and
adc
or
and
movb
lds
add
mov
add
and
mov
cmpsb
and
lahf
add
add
add
inc
dec
push
push
dec
push
dec
push
push
dec
push
push
inc
out
push
jmp
push
xchg
xchg
push
cmp
cltd
push
xchg
call
push
add
mov
xor
add
das
pop
lcall
cmp
les
cmp
jb
das
lahf
cmc
shrl
xchg
cmc
lret
das
xchg
cmc
int
nop
cmc
xlat
das
xor
das
xor
das
jne
aad
insb
cmc
fildll
addr16
loope
pop
cmc
fldt
test
cmc
out
stos
cmc
loop
stos
cmc
in
lods
cmc
out
das
movsb
cmc
lock
das
cmc
icebp
das
es
ljmp
cmc
in
das
add
daa
iret
xor
daa
shlb
adc
aad
adc
fdivs
loop
shll
fidivs
fsubl
fbstp
int
loopne
out
es
fbld
loop
fsubs
in
or
out
stos
sbb
call
xor
sbb
in
xor
out
xor
sbb
fwait
xor
sbb
push
mov
push
push
dec
sbb
push
dec
sbb
push
lahf
sbb
and
sbb
and
repz
daa
sti
push
sub
inc
sub
dec
sub
push
sub
dec
sub
inc
sub
repz
xor
aas
xor
inc
xor
xor
rorb
xor
sti
aam
aaa
repz
cmp
or
repz
cmp
in
or
scas
or
scas
or
mov
inc
sti
mov
or
mov
add
rep
or
movsl
or
es
or
inc
or
and
push
or
and
inc
or
cmp
inc
and
sbb
inc
and
dec
or
and
and
inc
or
and
and
ret
and
or
and
or
and
test
jg
lret
and
ret
or
inc
pop
or
and
mulb
cmp
hlt
and
cmp
and
cld
and
in
and
in
cs
cld
das
add
cld
sub
sub
add
in
sub
cld
mov
outsl
cld
sub
in
sub
in
push
add
cld
push
add
in
pusha
add
in
push
add
cld
push
add
cld
bound
out
push
add
out
arpl
lcall
mov
out
pop
add
out
pop
add
lcall
lahf
lcall
mov
pop
add
out
pop
add
ljmp
mov
pop
sub
inc
add
sub
add
sub
add
sub
dec
add
sub
aaa
add
sub
dec
add
sub
inc
add
add
add
sub
cs
sub
add
sub
add
sub
add
sub
add
sub
and
xor
adc
das
and
add
das
sbb
das
sbb
das
sbb
das
sbb
push
sbb
add
das
pop
add
mov
or
stc
pushf
or
icebp
xchg
or
stc
lcall
stc
js
adc
add
add
test
sub
jbe
sub
jae
pop
stc
or
icebp
pop
or
icebp
inc
or
stc
inc
or
icebp
outsb
or
imulb
imulb
mov
bound
stos
imulb
mov
or
divb
test
cwtl
pop
adc
negb
pop
scas
notb
pop
pop
das
and
pop
gs
pop
cmp
pop
xor
pop
cs
pop
movsl
and
pop
mov
and
pop
xchg
sub
and
pop
push
and
pop
mov
and
lea
and
jl
xor
jg
xor
outsb
and
pop
pusha
and
pop
pop
and
pop
xchg
and
pop
xchg
and
pop
xchg
and
push
cltd
and
nop
and
push
xchg
and
nop
repz
enter
mov
aam
mov
roll
repz
test
roll
repz
xchg
fldl
xor
iret
add
rolb
push
sti
roll
inc
repz
cmp
roll
push
repz
dec
sti
aad
cmp
out
cmp
out
sbb
jmp
add
sti
jmp
push
in
add
clc
in
add
lock
lock
filds
mov
frstor
mov
and
test
inc
and
imul
add
je
mov
and
and
and
and
and
lods
and
and
bound
and
sub
or
xor
frstor
sbb
and
and
and
and
lds
inc
and
and
and
and
and
and
or
sbb
push
and
and
and
and
fisttpll
daa
pop
lds
sub
std
or
xlat
fisttpll
xchg
hlt
fmuls
nop
aam
or
aam
or
fstps
or
sbb
or
stos
or
sbb
and
or
sbb
sbb
jns
adc
popa
or
push
adc
push
or
cmp
mov
or
fsubrs
or
sbb
sbb
adc
and
sbb
xor
daa
fimuls
testl
push
testl
push
lock
mov
cli
inc
xchg
in
inc
dec
push
cld
inc
push
push
incl
push
jmp
inc
push
push
push
dec
dec
push
adc
push
sbb
push
inc
inc
cwtl
push
sub
push
and
push
sub
push
and
push
dec
inc
ja
dec
inc
jle
aas
inc
jno
lock
bound
out
pop
push
faddl
push
shll
dec
push
iret
inc
sub
into
inc
and
sub
add
add
jno
daa
jmp
and
clc
aaa
movsl
lock
pushf
call
loopne
scas
clc
ret
and
lock
add
and
lock
mov
pop
and
clc
xor
xchg
lock
call
fldenv
clc
loope
lock
or
dec
clc
ret
and
lock
inc
call
sub
pop
clc
inc
and
lock
and
add
and
mull
push
es
and
sub
data16
gs
and
sbb
and
and
adc
pusha
and
daa
popa
and
jb
insl
arpl
inc
es
and
es
adc
and
cmp
dec
and
and
add
add
push
and
cmp
jb
add
and
and
and
and
and
and
and
and
cmc
inc
or
xchg
push
pop
or
lret
sbb
or
adcl
or
pop
in
mov
aad
push
sar
fiadds
shl
fldl
sar
pushf
push
roll
add
add
stos
push
aam
mov
push
clc
mov
push
fdivr
cmpsb
push
f2xm1
mov
pop
fcomi
popa
pop
fdivr
push
dec
pop
fdivrp
js
fcomip
dec
pop
loopne
dec
pop
loope
dec
pop
loop
sbb
xchg
sub
pop
nop
sub
pop
pop
sub
push
push
sub
pop
dec
sub
push
dec
sub
push
pop
sub
or
add
add
and
or
and
sti
and
or
and
cld
and
out
and
out
and
or
and
repz
ljmp
or
and
or
and
or
and
or
add
aaa
push
jno
cs
pusha
cld
sub
push
push
in
sub
dec
cld
xor
inc
cld
xor
aas
in
xor
ss
das
push
sub
inc
push
test
inc
push
stos
in
inc
push
stos
in
inc
push
movsl
std
dec
push
lods
std
dec
push
cmpsl
in
dec
push
scas
in
inc
push
mov
std
cmp
push
mov
std
cmp
mov
cmp
scas
in
cmp
cmpsb
in
cmp
push
cmp
push
push
cmp
pop
push
cmp
pop
push
xor
std
push
push
add
pop
xor
push
sti
push
aaa
push
in
cmp
xor
pop
cmp
ret
push
and
aas
push
cld
push
inc
push
in
push
inc
push
out
push
inc
push
lcall
inc
push
cmp
inc
push
cmp
inc
push
sub
inc
push
cmp
inc
push
inc
es
push
inc
es
push
ss
push
aaa
es
push
pusha
es
push
jno
dec
push
pop
es
push
lea
add
outsb
es
push
pop
es
push
pop
es
push
dec
es
push
sub
push
push
sub
push
push
cmc
ja
pop
add
pop
sti
sahf
add
xor
mov
add
xor
les
and
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
mov
cmp
add
add
in
add
in
add
add
xchg
add
inc
les
add
inc
les
and
add
dec
and
add
dec
add
add
add
sub
add
inc
push
sub
inc
push
sub
and
add
and
add
int
xor
mov
push
sbb
add
push
cmpsb
add
push
mov
add
lcall
ss
add
mov
add
xor
add
not
adc
adc
neg
adc
not
adc
rclb
dec
not
adc
aam
dec
not
adc
into
adc
int
pop
not
adc
test
adc
test
adc
test
adc
hlt
in
iret
hlt
call
xor
hlt
xchg
xor
hlt
mov
mov
hlt
mov
xor
hlt
cwtl
xor
jne
lock
stc
adc
test
add
xor
pop
xor
mov
js
jl
lahf
and
mov
and
mov
and
push
movsb
and
push
movsl
and
add
cmpsl
and
add
test
and
push
stos
and
add
add
add
daa
push
add
or
add
sbb
add
add
call
add
and
xor
cmc
adc
add
mov
add
cmc
das
xor
cmc
jecxz
add
into
das
add
and
add
int
add
and
add
lods
das
add
and
add
stos
das
add
daa
add
cmc
lret
cmc
fiadds
add
leave
das
add
fldl
add
test
add
faddl
add
lahf
das
add
out
add
pop
xor
cmc
sbb
cmc
pop
xor
cmc
and
add
pop
xor
cmc
sbb
add
xor
cmc
or
add
adc
cmc
es
es
add
es
cmc
es
es
faddl
cmc
es
cmc
flds
cmc
es
cmc
fadds
cmc
es
xor
es
xor
es
xor
lds
cmc
es
cmc
les
cmc
es
xor
movl
cmc
movb
subb
adc
or
or
add
stc
add
add
daa
add
daa
add
mulb
add
daa
add
stc
add
mulb
add
fisubl
add
lret
int3
mulb
add
mulb
add
add
sbb
add
or
add
sbb
add
or
add
add
stc
add
cltd
cmp
add
cmp
add
cmp
add
sub
add
add
sub
add
sub
add
push
add
mov
push
add
int
add
fcoml
mov
push
add
dec
sub
add
push
add
dec
sub
add
push
add
mov
add
sbb
add
push
add
lret
sub
add
push
add
les
add
mov
xchg
sub
add
sub
cmc
pop
add
cmc
mov
add
push
sub
cmc
push
add
cmc
mov
add
cmc
lret
sub
cmc
xor
sub
cmc
add
add
int
add
popl
cmc
cmp
add
mov
cmc
aas
sub
add
push
sub
add
and
add
inc
sub
add
inc
sub
add
and
add
mov
cmc
cs
add
es
sub
mov
cmc
es
mov
cmc
es
cmc
mov
cmc
shrb
xchg
sub
es
add
subb
xchg
sub
es
sub
cmc
es
cmc
es
cmc
es
add
es
mov
add
add
es
mov
add
add
es
add
es
cmc
es
add
es
mull
add
mulb
add
data16
data16
ds
add
dec
pop
push
jmp
xor
add
and
push
xor
mulb
add
lcall
or
jne
xchg
mov
leave
mulb
add
mov
xchg
outsb
les
imul
adcb
inc
insl
pop
push
fs
cwtl
ja
nop
mov
mov
ja
add
mov
add
dec
sub
add
add
sub
out
sub
fsubrs
inc
add
sub
add
mov
insb
jo
add
add
mov
jp
outsl
add
decl
inc
inc
add
es
add
es
add
mov
jo
bound
popf
imul
add
movsb
shlb
xchg
sub
mov
jno
popa
outsl
cmc
stos
fcos
pop
add
aas
cmc
and
jb
test
push
cmc
push
add
cmc
dec
add
cmc
push
add
cmc
lsl
cmc
dec
movb
ret
inc
mov
dec
inc
aas
push
inc
cmp
push
cmp
sub
pushf
push
push
sub
sub
stos
js
and
xor
and
xor
loop
add
cmc
lsl
cmc
mov
mov
jmp
add
add
jle
lods
fisttps
fists
dec
vmovsd
inc
test
mov
lods
insl
popf
mov
jno
rol
push
xor
loopne
dec
add
int
arpl
leave
mov
mov
pop
mov
popf
pop
xchg
setns
jmp
add
or
daa
jmp
add
daa
sbb
daa
lds
adc
fiadds
or
mov
add
daa
rolb
adc
add
testb
out
add
ficomps
add
mov
test
mov
add
pop
je
test
outsl
inc
pop
push
xchg
add
outsl
inc
dec
push
push
dec
push
add
das
outsl
inc
cmp
nop
test
xchg
jae
das
mov
inc
add
jae
push
cwtl
mov
mulb
add
and
test
xor
jmp
outsb
roll
and
add
add
pop
and
add
add
cmp
sub
add
enter
mov
and
cmp
xor
aam
js
repnz
add
sub
stc
sub
add
sub
or
add
mulb
add
enter
sti
addr16
mov
cs
sahf
push
sbb
addr16
mov
push
mov
mov
addr16
mov
push
cmc
out
jae
mov
sahf
push
adc
lahf
inc
fdivl
mov
shlb
ret
dec
cmc
les
add
lret
fwait
jb
lods
mov
lods
mov
add
cmc
dec
mov
jae
bound
bound
and
add
inc
mov
jae
sub
bound
lahf
jno
adc
add
inc
mov
jne
inc
xchg
pusha
adc
int3
iret
adc
mov
mov
add
es
and
sbb
sub
add
add
arpl
sbb
add
lret
mov
push
lods
shll
pop
int
cmc
es
xchg
int3
orl
cmpsb
es
add
es
add
es
stc
icebp
xor
add
es
idiv
sub
add
es
stos
loop
loop
es
xor
add
daa
sti
add
add
dec
daa
add
testb
jmp
inc
push
outsl
cwtl
cmp
imul
add
mulb
add
testb
testb
testb
mulb
add
jb
mov
test
andl
arpl
pusha
jbe
aas
inc
subl
nop
outsl
dec
dec
cld
sub
pushf
js
cmp
mov
cmpsl
mov
insl
gs
xchg
nop
add
mov
or
lock
and
sub
in
int
imul
mov
ljmp
daa
add
pushf
into
popa
push
jb
or
jno
push
das
xchg
pop
and
sbb
add
imul
add
and
add
and
and
add
and
test
and
aas
and
add
pop
dec
cld
iret
insb
push
btr
cmc
sub
fs
adc
add
pop
mov
ss
jb
adc
add
pop
mov
inc
shrl
pop
daa
jmp
arpl
mov
stos
jae
adc
add
and
cmc
out
add
cmc
loop
insl
cmc
loop
jo
ljmp
cmc
loope
xor
lsl
cmc
adc
sub
or
arpl
lsl
cmc
dec
add
cmc
lsl
cmc
stc
add
and
daa
jmp
jecxz
stc
enter
mov
adc
mov
add
daa
fiaddl
sub
rolb
push
daa
fldl
and
rolb
daa
mov
add
movsb
add
es
add
test
jecxz
popf
add
es
add
mov
shlb
jnp
mov
es
add
es
add
es
add
es
add
es
add
daa
add
mov
inc
stc
dec
add
icebp
mov
add
stc
xchg
push
icebp
arpl
std
testb
jmp
divb
add
icebp
ds
mulb
add
notb
shl
test
add
das
push
dec
lods
mulb
add
add
test
gs
clc
movsl
xchg
xchg
xchg
jmp
insl
gs
pop
je
add
lret
cmp
lahf
inc
jb
ret
sbb
arpl
xchg
jno
loop
dec
jne
xchg
ja
add
insl
jb
shll
leave
dec
jb
les
scas
and
add
push
lahf
into
jo
movsb
xchg
arpl
mov
popa
scas
incl
ret
add
call
add
add
inc
insb
pusha
jmp
outsb
js
arpl
jg
bound
or
add
fbld
dec
add
and
cmp
cmc
cmp
cmc
push
add
cmc
xor
cmc
xor
cmc
and
add
cmc
es
cmc
sub
cmc
hlt
add
filds
dec
cmc
adc
cmc
inc
add
cmc
roll
jb
ljmp
cmc
ljmp
cmc
mov
imul
fwait
add
mov
outsl
cmc
movsl
add
mov
add
nop
add
add
cmc
popl
jb
je
data16
es
add
es
add
es
add
es
add
sbb
daa
xor
add
es
xchg
or
cli
inc
movsl
outsb
std
inc
movsl
outsb
sti
loopne
enter
add
add
cmc
add
mov
cmc
rcl
xchg
cmc
rcl
mov
rcl
cmc
les
jb
mov
push
rclb
cmc
ljmp
sub
add
sub
or
inc
repz
and
or
and
jp
ja
jns
cmc
push
push
js
and
add
push
js
dec
adc
dec
cli
pop
clc
in
adc
daa
rcrb
push
mov
mov
vmovups
daa
and
stc
aad
movsb
shrb
adc
hlt
mov
mov
imul
mov
sbb
stos
cld
addr16
adc
hlt
mov
push
les
out
cmp
rcrb
jne
out
in
iret
adc
add
add
push
push
repz
sub
add
sub
add
sub
fsubrs
cmp
imull
dec
add
sub
add
dec
add
cmp
xlat
daa
cmp
sbb
push
add
sub
movntps
ljmp
jne
sahf
daa
imul
dec
daa
jb
movsl
daa
jbe
mov
insb
add
daa
add
daa
cmp
hlt
sub
js
cmp
lahf
daa
dec
add
fadds
dec
cmc
scas
add
xchg
add
lds
cmp
mov
add
push
add
cmc
gs
inc
cmc
sub
cmc
std
add
cmc
pop
stos
pop
pusha
bound
pop
push
cs
outsb
inc
loopne
bound
xchg
jno
and
add
inc
mov
push
adc
dec
cmp
dec
cmc
out
mov
pop
sbb
loop
adc
xchg
sbb
add
cmc
mov
rorb
mov
jno
fmull
lahf
roll
xchg
mov
jecxz
xchg
add
mov
scas
movsb
pop
sub
xchg
sbbl
inc
cmp
push
outsl
cmp
cli
jg
nop
pop
jne
mov
pop
inc
sbb
cmc
and
push
and
inc
insb
sbb
xor
push
mov
stos
inc
lret
jne
mov
xorb
pushf
mov
mov
push
mov
pop
inc
movsl
das
gs
stos
cmp
arpl
add
pop
test
dec
pop
xchg
pop
jne
pop
adc
or
adc
orl
inc
imul
xor
pop
inc
and
rcrl
insb
push
dec
and
incb
dec
jp
std
pop
test
lret
jb
pop
je
fistl
subl
icebp
mov
data16
pop
fs
incl
add
xchg
ficoms
fldl
pop
fisttps
ficoms
push
mov
inc
push
enter
shll
ret
cmp
or
in
ret
sub
jo
adc
inc
pop
add
loop
pop
adc
aas
inc
fnstenv
dec
mov
add
shlb
jo
mov
lds
cmc
loop
jae
add
add
jmp
mov
ret
pop
mov
mov
mov
mov
jne
mov
nop
pusha
lcall
add
mov
inc
mov
xchg
lret
inc
stos
aas
mov
mov
std
add
cmc
data16
jne
push
lods
arpl
aaa
in
dec
xor
add
aaa
mov
sbb
push
xor
int
dec
cmpxchg
mov
inc
adc
dec
cmp
add
cmc
shlb
push
inc
fldenv
es
mov
movsl
int3
mov
cltd
les
es
movsl
rolb
cmpsb
movsb
jb
add
es
mov
mov
int3
mov
cmp
movsb
push
jmp
cmpsb
push
inc
push
movsl
addr16
add
and
push
xor
daa
push
jmp
cmpsb
and
adc
cs
add
dec
bound
mov
inc
mov
imul
cwtl
jae
mov
xchg
pop
push
or
mov
mov
cmp
lods
das
imul
push
nop
pop
jae
lea
add
add
and
gs
pop
jb
and
mov
mulb
add
mov
push
inc
sub
test
adc
in
adc
mov
and
push
leave
js
jb
lahf
shrl
sub
add
mov
pop
aad
push
inc
dec
loope
pop
inc
lods
push
push
xchg
jecxz
add
leave
jb
in
cwtl
arpl
shll
add
inc
or
orb
jo
lea
orb
outsl
stos
shll
shrb
or
jnp
arpl
mov
add
mov
pop
pop
out
push
adc
pop
inc
sub
dec
inc
imul
sbb
add
add
insl
and
shrl
arpl
sbb
jae
icebp
loop
adc
mov
add
add
pop
and
outsb
or
test
add
movsl
jae
flds
add
lds
inc
mov
mov
ret
push
mov
rcll
xchg
jno
sahf
lahf
pop
cwtl
mov
mov
pop
mov
lcall
mov
cli
xor
inc
push
inc
ret
or
inc
inc
cmp
inc
cmp
add
cmc
xor
adc
jl
xchg
daa
mov
test
adc
cwtl
adc
movsl
push
jnp
movsl
pop
jle
test
push
daa
mov
mov
jnp
xchg
out
into
test
test
mov
shll
mov
flds
mov
lods
inc
mov
jge
test
xchg
mov
lds
add
add
push
pushf
pop
inc
inc
mov
push
test
xchg
cmp
add
and
jge
or
xchg
push
test
and
pop
sub
test
popa
dec
arpl
arpl
int3
bound
and
xchg
dec
push
mov
imul
lret
xchg
test
mov
add
pop
test
mov
cmp
mov
gs
jae
test
add
andb
push
dec
push
pop
movsb
subb
test
add
les
les
cld
mov
bound
add
inc
pop
fnstsw
pop
push
mov
imul
mov
repz
jle
gs
test
lds
lds
in
mov
bound
test
data16
gs
imul
arpl
jae
pop
jne
mov
arpl
push
jge
imul
jns
inc
mov
pop
pop
in
jne
dec
mov
fs
xor
jae
addr16
adc
imul
movsl
bound
fisubs
or
cmpsl
arpl
xor
ret
jmp
jno
sbb
data16
rcrl
pop
in
xchg
addr16
pusha
int3
test
mov
sarb
addr16
xchg
lcall
mov
cmpsl
pop
xchg
mov
or
push
dec
inc
in
dec
inc
mov
push
dec
jmp
mov
xchg
ret
inc
xchg
inc
dec
push
test
sbb
sbb
pop
daa
xor
out
lds
push
add
es
jnp
mov
js
shll
stos
mov
push
lahf
mov
xor
stos
loopne
imul
cmc
es
movsb
insl
movsb
add
add
cmp
jmp
lods
inc
cmp
mov
sbb
in
sbb
jno
sub
cmp
push
cmp
add
addr16
das
dec
jae
jmp
inc
jnp
jmp
lods
push
add
mulb
add
mulb
add
mulb
add
push
jae
movsb
xor
pushf
push
add
inc
or
add
push
in
dec
inc
xor
aas
ret
xor
decl
insl
js
add
outsl
cmp
arpl
shrb
sub
add
shrl
jb
cwtl
lea
sar
xorb
add
arpl
lea
mov
xor
add
inc
mov
arpl
aas
shlb
lea
aaa
lea
cmp
jg
insl
jae
mov
add
mov
add
scas
add
pop
add
pop
add
jns
gs
insb
add
cmc
int
add
jecxz
gs
gs
cmc
int
add
adc
insb
cmc
and
cmc
cs
cmc
and
cmc
or
cmc
xor
cmc
cmp
cmc
int
add
xchg
lods
cwtl
scas
and
xchg
mov
add
mov
xchg
jne
mov
cwtl
dec
shr
mov
insl
test
dec
sahf
nop
lret
call
rep
ljmp
inc
mov
mov
add
add
sbb
fcomps
sbb
xor
fstpl
or
add
es
ss
hlt
pushf
ds
add
add
es
popa
push
cwtl
inc
dec
fwait
leave
jnp
inc
fwait
call
add
stc
inc
filds
cmc
es
movsb
icebp
or
aam
fildl
fstpt
add
jo
dec
mov
add
add
add
dec
xor
add
fdivr
sub
ljmp
shr
sub
out
mov
adc
lret
lret
inc
sti
mov
or
lret
out
ffree
add
aam
cli
add
mov
adcb
or
movsb
lahf
mov
add
add
idiv
xchg
in
xchg
pop
loopne
cmpsl
add
dec
xchg
sbbl
lea
test
mov
dec
inc
insb
in
insb
jbe
ja
jle
dec
inc
gs
je
inc
mov
push
outsb
sbb
inc
push
adc
aas
inc
int3
and
add
mov
jb
int
arpl
and
add
clc
xor
mov
jbe
lods
xor
jmp
das
jg
add
leave
cs
clc
sub
cmc
cmp
cmp
sbb
fldenv
ss
sub
mov
iret
scas
stos
inc
mov
test
ror
add
mov
inc
cmc
pop
push
mov
cmp
stos
insl
inc
mov
jg
pusha
lods
xchg
mov
add
jnp
push
mov
jge
mov
jl
arpl
cmpsb
jne
add
cmc
cmp
push
inc
out
int3
jo
lret
add
mov
insl
out
movsl
sbb
es
cmp
es
xor
out
in
cmp
scas
cld
scas
jle
cld
in
stos
std
into
dec
out
sti
shrl
iret
rolb
shll
pop
jmp
add
es
imul
push
addr16
es
inc
mov
cmpsl
sub
push
aam
fstps
ljmp
mov
loop
push
stos
iret
call
shl
adc
es
dec
mov
lcall
leave
xchg
mov
ret
pushf
scas
lahf
mov
lods
xchg
lock
mov
dec
movsb
sar
in
cvtps2pi
push
dec
xor
or
rorb
cmp
xchg
sarb
cmp
jg
sub
out
arpl
mulb
add
xchg
mov
sub
mov
mov
rcrb
mov
jp
xchg
stos
pop
daa
clc
decl
xor
fidivl
push
sbb
add
pop
imul
add
jno
hlt
subb
xchg
insb
std
mov
imul
or
rol
stos
or
rcr
push
iret
rolb
fmulp
or
lret
lret
add
dec
xchg
popf
mov
pushf
mov
push
mov
dec
mov
push
push
orb
jnp
lahf
inc
sub
add
sar
add
int3
push
sbb
cmc
leave
sti
adc
cmp
push
daa
xor
push
leave
ds
mov
mov
mov
mov
jl
add
cmc
mov
mov
arpl
mov
cmc
bound
push
dec
dec
mov
sbb
dec
addr16
mov
arpl
add
out
fdivl
adc
shlb
adc
xor
sbb
pop
xchg
test
xchg
pop
pop
mov
xchg
cmc
ljmp
hlt
es
rolb
cmc
es
mov
add
dec
in
call
js
mov
es
cmpsb
popa
pop
mov
fs
and
add
add
or
cmp
adc
pop
fistps
fidivl
fistps
jmp
outsl
mov
jle
pop
pop
ja
pusha
pop
ja
cmc
es
mov
xchg
imul
lock
cmc
test
out
ret
jmp
inc
popa
xchg
lcall
subl
ss
bswap
insb
pusha
ret
mov
jg
mov
orb
xorl
dec
lret
jnp
cmpsl
pop
jne
mulb
add
mov
jp
add
lret
inc
sbb
cltd
fwait
mov
addl
call
sahf
adc
cmp
movnti
or
jno
sub
add
add
popa
inc
add
adc
fdivrs
dec
adc
add
adc
and
add
mov
popf
orl
sbbb
subb
sbb
add
gs
jno
push
dec
add
pop
jns
inc
pop
jg
push
pop
dec
jne
pusha
dec
jp
outsb
inc
arpl
inc
push
mov
cmp
cmpsl
push
push
cmc
or
sub
push
dec
sub
add
cmc
rcll
icebp
lock
adc
sub
adc
iret
sbb
cmc
push
push
lock
and
and
adc
pop
sub
loope
and
jno
les
cmp
add
adc
jecxz
and
ffree
sbb
add
repnz
sbb
repz
cmc
dec
mov
push
insb
mov
add
push
shrb
js
mov
cmc
adc
in
es
and
xor
or
add
es
aam
mov
add
es
fisttpll
repz
xor
es
movl
jecxz
add
cmp
cmc
es
and
add
or
cmp
or
add
add
sub
sbb
and
pop
lock
or
iret
or
es
jno
jo
push
orl
cmc
es
in
xchg
stc
std
jmp
push
out
stc
add
mov
add
decb
mov
popf
andb
gs
mov
loope
jmp
push
xorl
add
aaa
sub
adc
add
sbb
sub
mulb
add
stos
xchg
pusha
jae
sub
add
and
into
in
push
and
enter
fdivp
jmp
add
out
add
ljmp
not
xchg
add
rol
out
shl
loop
rclb
sar
lret
into
out
icebp
mov
push
imul
sarb
add
dec
jae
fldl
popa
mov
add
xchg
mov
pop
sub
add
jns
push
push
pop
dec
inc
pop
sub
add
testb
ljmp
clc
hlt
in
test
aam
in
out
jmp
cmc
xor
out
or
clc
out
cmc
repnz
add
add
stc
out
or
adc
cmp
les
xor
aam
add
ret
shl
sub
int
add
cmc
xchg
mov
mov
pushf
mov
sub
sbb
dec
push
sarb
inc
mov
add
cmc
xor
pop
cs
js
loop
arpl
and
jle
jmp
add
cmc
in
pusha
insl
mov
mov
xchg
ret
adc
and
es
mov
cmpsb
es
jecxz
or
fcmovnbe
int
mov
repz
add
es
out
xchg
mov
add
es
mov
sub
cmc
es
daa
push
or
and
cmc
es
iret
jle
mov
pusha
cli
dec
shr
ss
adc
jl
sbb
cmp
aam
adc
pop
xchg
add
cld
int3
sub
iret
xor
test
sub
mov
mov
sar
jp
popf
mov
mov
mov
into
out
rcrl
outsl
stos
xchg
pop
jne
cmpb
add
mov
fs
lea
aas
movsl
pushf
mov
jmp
cmpsw
jg
push
es
loopne
adc
xor
add
mov
add
repz
leave
mov
xlat
add
mov
add
iret
jecxz
faddp
out
add
je
push
ja
inc
int3
and
in
ret
imulb
std
popa
inc
push
sti
outsl
pop
push
in
add
jo
mov
pop
stos
cmpsl
movsl
int3
addb
xor
cs
dec
and
inc
push
pop
and
pop
pop
cmc
mov
jbe
cmc
inc
sbbb
cmp
and
lret
leave
loope
add
pusha
mov
mov
jbe
add
repz
jmp
popa
popa
adcl
cmp
lret
inc
outsb
sub
sub
aas
cs
cli
popa
mov
mov
mov
jp
stc
std
test
mov
hlt
cmp
xchg
ss
push
imul
int3
cmp
cmc
es
pop
jl
shlb
shl
xor
cmc
es
xor
popa
jmp
jne
inc
jmp
in
ss
sub
rcr
and
mov
and
movsb
hlt
call
movsl
push
es
call
aaa
out
jmp
jmp
adc
sbb
add
or
or
and
add
es
sahf
test
jne
jno
cmc
add
rcr
jno
mov
arpl
loop
addr16
mov
aas
mov
stos
xchg
call
mov
xorl
repnz
fcomip
testl
mov
xorb
mov
movsl
fidivrs
fcoms
add
add
out
mov
into
hlt
fdivr
pop
or
jecxz
add
jmp
add
push
dec
pop
jge
inc
inc
add
mov
mov
lds
lcall
add
nop
mov
scas
or
add
mov
sub
add
sub
add
add
jg
add
or
imul
push
je
push
popa
jl
push
push
pop
sub
cmp
dec
xor
outsb
push
push
mov
add
cmc
cmp
dec
lret
pop
scas
and
mov
dec
push
mov
xor
movsl
jl
adc
cmpsl
test
push
mov
mov
dec
lahf
sahf
mov
pop
dec
cmpsl
mov
mov
dec
push
test
dec
dec
clc
movsb
dec
pop
dec
mov
cmc
out
sub
daa
xchg
sub
dec
out
es
adc
sub
pop
and
fldcw
sub
jle
test
outsb
scas
lahf
xchg
gs
xchg
xchg
outsl
xchg
pop
daa
cmp
out
pop
sbb
dec
or
inc
push
jp
dec
or
rorl
popa
adc
cld
arpl
cmp
mov
fmuls
gs
cmp
aam
scas
xor
adc
inc
cmc
es
fidivl
add
sti
jb
push
add
out
push
in
sbb
add
es
lods
mov
mov
push
pop
sbb
daa
stc
sbb
or
and
add
enter
loopne
add
loopne
add
add
add
popf
xorl
ret
push
ja
cltd
arpl
lcall
leave
loop
icebp
add
xchg
out
mov
lcall
dec
leave
mov
dec
enter
clc
mov
jae
addl
mov
in
sbb
inc
jge
mov
add
sbb
cmp
std
cli
cmp
decl
xor
add
and
hlt
inc
push
and
es
jnp
jmp
sti
jae
push
bound
add
das
or
add
or
pop
add
in
arpl
add
sbb
add
test
test
scas
je
mov
addb
jle
inc
stos
test
push
mov
sbbb
dec
xchg
mov
xchg
mov
sbbb
scas
xchg
pushf
cmc
ljmp
cmc
int3
or
sbb
in
adc
in
mov
jp
loop
jo
out
add
in
outsb
fnsave
outsl
push
mov
imul
push
jbe
mov
pop
mov
add
add
jns
push
scas
mov
add
lret
add
xlat
adc
fxch
or
or
aad
sbb
fstps
or
out
adc
out
and
lock
push
push
es
sbb
clc
sub
sub
fildl
sbb
into
stc
or
frstor
push
scas
dec
outsl
fistps
dec
cmpsb
jb
adc
pop
and
add
add
jae
dec
mov
inc
sub
push
lret
push
enter
test
push
int3
add
es
jb
pop
mov
cmpb
jns
cmpsb
cmp
mov
addb
xchg
push
mov
push
loope
lds
jecxz
pop
stos
lcall
mov
mov
cwtl
xchg
pop
sbb
mov
xchg
mov
cmpsl
dec
mov
add
addr16
nop
fwait
js
pop
leave
out
inc
mov
insl
inc
int
arpl
repnz
and
les
je
lcall
sub
lds
mov
fmuls
shll
add
movsb
or
stc
mov
js
mov
xchg
xchg
mov
and
xchg
xchg
push
mov
pushf
adc
scas
mov
loop
mov
cli
dec
jb
pop
dec
pop
insl
add
sub
push
data16
and
inc
inc
js
push
pusha
imul
add
push
bound
add
add
add
pop
inc
xor
pop
push
push
jno
push
jl
push
inc
stos
jae
dec
cmc
in
sbb
incb
pusha
insl
pop
fisubl
adc
pusha
pop
sbb
and
iret
sbb
in
and
into
roll
sbb
sti
push
idivl
or
into
add
sub
push
or
push
pop
add
stos
mov
out
out
fwait
jmp
add
scas
mov
cmp
addr16
ljmp
mov
fnstsw
int3
fidivl
push
fcompl
or
fst
daa
inc
leave
mov
pop
mov
rol
cmpsl
jb
inc
jmp
mov
fs
test
jle
push
nop
mov
mov
ret
mov
add
scas
icebp
call
mov
sub
repz
add
sub
sbb
mov
push
test
push
sub
cmc
es
cmc
sub
pop
int3
jge
lea
inc
lods
aas
daa
add
mov
ja
xchg
xor
jecxz
jmp
fnop
cli
cs
loope
int
js
inc
gs
inc
dec
push
inc
ss
add
lods
xchg
dec
xchg
pushl
mov
fscale
lds
shr
lea
cld
xchg
stc
add
push
jae
in
pop
add
push
or
lret
mov
es
jecxz
cmp
mov
add
jne
lea
xchg
inc
xchg
popf
sub
add
inc
fwait
add
lea
lret
xor
idivl
sub
add
jnp
sbb
leave
sub
adc
nop
sbb
add
out
add
mov
movsb
cmp
mov
mov
add
bound
add
icebp
push
or
dec
inc
adc
dec
sub
dec
push
and
add
add
addr16
push
sbb
iret
add
cmc
sti
incl
repz
rolb
cmc
gs
fistpl
lock
add
cmc
sub
ret
aad
aad
mov
lret
ss
cmp
clc
aas
dec
xor
ss
mov
cmp
stc
sub
arpl
insl
addr16
repnz
sbb
loop
and
add
add
call
push
sti
mov
or
repz
or
int
or
es
dec
cmc
es
subb
mov
mov
inc
test
lods
test
xchg
inc
in
lds
test
pop
mov
insl
mov
das
shll
shlb
lock
mov
stos
mov
add
jecxz
lret
pop
in
into
ficoml
add
es
mov
xchg
add
es
add
daa
hlt
adc
xor
add
add
sbb
mov
pop
sbb
out
xor
jmp
cmpsl
push
dec
cmpsl
mov
adc
loopne
sbb
adc
lods
test
test
incb
add
add
and
in
ret
and
mov
add
shl
sti
popf
mov
pop
add
xor
jmp
sub
inc
or
call
or
jae
int3
aas
cmp
cmp
cli
push
push
cmc
dec
and
pusha
sub
dec
and
add
or
and
cmpsl
xchg
xchg
or
add
mov
xchg
jae
mov
add
cmc
mov
sub
cmpsl
fdivs
inc
incl
incl
add
dec
xchg
xchg
pushf
adc
aam
out
in
xchg
sub
out
and
cmpsb
std
add
pusha
gs
mov
and
add
dec
mov
mov
xchg
add
cmc
add
mov
add
add
jnp
adc
and
and
add
ds
xchg
or
cli
mov
cmp
add
cmc
mov
jae
lods
add
cmc
test
cmpsl
std
test
lods
cmc
icebp
leave
test
dec
mov
rcrl
xorl
cltd
mov
xchg
jecxz
icebp
loope
cmc
push
nop
cmpsl
xchg
pop
add
cmc
popa
jne
insb
es
inc
fsubs
addr16
insb
cmpsl
jo
outsl
movsb
test
data16
pop
mov
mov
mov
lcall
orb
faddl
cmc
es
ds
pop
jmp
xor
push
leave
add
es
in
xor
pushf
js
add
add
push
lcall
lea
lea
push
sbbl
add
imul
ret
mov
in
subl
notb
and
xchg
mov
lret
jmp
out
mov
or
mov
fldl
in
add
jne
mov
add
idivl
cmc
cmp
in
notb
std
je
imul
mulb
push
xchg
inc
stos
inc
xor
inc
repnz
lea
adc
icebp
addl
add
inc
int3
je
inc
add
xlat
add
or
arpl
sbb
mov
in
inc
in
dec
lock
hlt
jne
inc
add
lret
je
mov
add
add
mov
xchg
jp
fs
jb
subl
push
mov
adc
int3
dec
dec
pushl
sbb
add
es
leave
adcb
int3
scas
mov
les
push
adc
and
add
iret
add
or
jp
loope
mov
jo
call
jno
push
sbb
add
add
dec
and
cli
dec
lcall
ss
mov
iret
add
fucomip
jmp
xor
pop
adc
cli
popf
xor
cmc
iret
out
into
int
divb
adc
xchg
mov
cmp
add
cli
dec
push
faddl
dec
in
ret
je
es
test
fcmovnu
adc
add
add
insb
les
sbb
sbb
mov
jp
mov
mov
cmc
cwtl
ljmp
sbb
or
add
dec
testl
sbb
lods
scas
or
fsubr
and
call
or
scas
imul
mov
mul
sarl
adc
add
add
jl
jmp
cmp
test
inc
pop
call
aaa
cltd
pop
jmp
mulb
lea
mov
mulb
test
jnp
lcall
out
daa
mov
dec
xor
jle
sub
daa
mov
lods
dec
dec
jg
mov
lods
add
add
adc
add
test
lcall
lret
pushf
mov
add
and
mov
mov
daa
mov
push
dec
push
dec
xor
imul
mov
add
xchg
dec
or
add
lea
mov
push
std
and
mov
rorl
cld
dec
or
cltd
inc
nop
call
sbb
add
stc
test
sub
inc
lock
dec
lea
dec
call
addr16
aam
test
mov
push
mov
pop
or
pop
in
xor
loop
jbe
pop
jbe
ljmp
inc
mov
inc
test
cmp
push
sub
adcl
add
cmc
cmp
mov
mov
add
add
mov
int3
faddl
cmp
pop
cmp
add
inc
add
test
xorl
sti
hlt
jb
lea
cmp
call
cmc
mov
cmp
cmp
std
sbb
add
add
dec
jl
inc
pop
xchg
ss
sbb
inc
sbb
clc
test
ss
cmp
pop
jb
ja
or
outsb
into
popa
inc
stc
lahf
sub
jg
icebp
xor
mov
xor
push
dec
in
and
cmc
es
fucomp
into
cli
inc
cmc
lahf
rcr
mov
inc
call
xor
inc
mov
lahf
ljmp
xor
test
cmp
test
sbb
mov
adc
mov
add
cmp
in
push
sub
sub
stos
out
jp
call
add
idivb
xor
adc
or
jmp
sub
mov
aas
stos
enter
call
add
push
add
out
ja
add
lds
rclb
add
or
add
testl
dec
pop
ret
sbb
out
enter
lods
pop
mov
pop
jnp
call
out
ret
xchg
iret
std
jae
iret
adc
ds
jb
inc
daa
sbb
jl
popa
repz
add
sub
cmp
jne
add
mov
fadds
insb
mov
ljmp
fnstcw
or
emms
mov
mov
lcall
sub
roll
and
cmc
and
orb
add
add
into
cmp
jo
push
cmc
out
ret
add
jle
xor
insl
shr
jle
or
xor
fwait
mov
out
ficoml
add
mov
enter
inc
fimull
hlt
es
lock
adc
add
mov
out
ret
sub
insb
ret
rep
add
add
add
es
inc
or
fidivrs
es
xchg
scas
call
fidivrl
and
imul
loope
cli
inc
cmc
movsl
dec
xor
and
bound
bound
popf
hlt
mov
popf
jg
cmp
les
mov
out
addr16
mov
imul
mov
sub
pushf
inc
pop
js
adc
or
ds
aaa
sub
cmp
push
test
cmp
loope
imul
xor
je
mov
scas
cmp
loope
je
jno
mov
negb
jae
jns
or
es
rorl
popa
mov
add
push
mov
movsl
and
add
add
fwait
inc
add
push
and
add
add
std
adc
cmpsl
and
fcomps
push
sbb
rorl
pusha
jae
add
shlb
call
and
test
pop
or
jmp
lods
lahf
and
pop
jp
shll
adc
cmp
divb
xor
add
clc
cmp
jae
pushf
sbb
push
or
push
fidivrs
or
cmp
in
xlat
mov
xor
jp
adc
lods
xchg
or
pop
imul
inc
fimull
lea
int3
xor
adc
notb
or
repnz
cmc
inc
shlb
jle
push
insl
mov
ljmp
inc
ss
insb
data16
jle
pop
adc
jmp
xchg
movsl
inc
xor
incl
jmp
add
es
daa
jmp
scas
ja
in
ss
scas
cmp
and
outsb
mov
repnz
lods
call
add
and
jmp
roll
add
mulb
lcall
push
popf
inc
cmc
fwait
mov
andb
call
xor
es
negb
in
rcrl
xor
mov
test
jb
dec
arpl
add
imul
shrl
mov
lea
adc
mov
pushf
push
add
insl
fs
cmp
pop
sbb
add
add
adc
push
pushl
jp
mov
mulb
push
dec
xchg
lods
jbe
into
xor
testb
in
test
insl
rclb
cmp
outsl
arpl
push
mov
adc
mov
imul
dec
lods
subl
imul
pop
lea
mov
test
or
lea
clc
adc
xchg
ljmp
jae
pop
fcomi
adc
pop
in
incb
xor
jae
push
mov
mov
loope
push
les
sahf
inc
or
mov
cmpsb
mov
mov
test
mov
adc
notb
add
add
out
jne
out
push
cmc
mov
mov
or
sbb
lds
push
jg
adc
jge
push
ret
adc
incb
xorl
xchg
movsl
dec
sbb
cmc
cmp
jle
xor
cmp
mov
jp
je
and
cmpl
pop
outsb
add
add
mov
sar
and
adc
scas
inc
add
rcrl
test
jmp
lods
es
and
fsubrl
out
jle
pop
push
movsb
int
repnz
test
jns
jmp
add
in
mov
call
mov
push
push
add
insl
fs
mov
jb
std
mov
fs
js
push
in
es
loope
in
push
cmp
in
dec
pop
loope
mov
fcmovne
push
jmp
jle
arpl
es
fisttpl
test
je
mov
add
idivb
mov
inc
loope
test
push
cmp
jmp
add
add
test
roll
push
mov
lcall
icebp
xchg
rorl
jmp
mov
mov
test
call
ficompl
call
negb
add
jl
imul
dec
hlt
andb
gs
inc
sbb
inc
hlt
dec
add
mov
aad
pop
and
orl
jmp
add
imul
popf
push
add
jmp
xlat
std
mov
pop
pop
gs
add
sub
sbbl
mov
iret
sbb
push
das
in
sbbl
call
push
in
pop
loop
mov
and
lea
and
jge
and
mov
cmc
xchg
add
add
int3
jp
jno
lahf
or
sub
jmp
mov
cmp
push
inc
hlt
loop
jp
std
xor
push
cmp
lret
add
add
stos
rclb
mov
xchg
or
xor
test
mov
add
mov
push
dec
aas
outsb
pop
pop
fistpl
ljmp
dec
push
pop
pop
dec
nop
xor
add
daa
std
fsubrs
movsl
fidivrs
sub
fsubs
jmp
sti
or
lahf
frstpm(287
mov
fistpll
rcrb
loope
push
stc
pop
inc
and
daa
insb
dec
xor
mov
sbb
sub
inc
stc
mov
ret
xchg
scas
dec
push
sub
or
cld
cmp
daa
jmp
push
lock
jg
movsl
call
icebp
or
imul
add
movsl
jmp
mov
movsb
mov
mov
fs
testl
push
adc
add
lods
es
insb
mov
out
shlb
popa
mov
movsb
jo
sub
call
divb
out
andl
popa
cmp
sbb
mulb
sbb
dec
cwtl
add
jae
or
pushf
ficoml
pop
sub
pop
in
add
pop
pop
jmp
nop
pusha
push
lea
push
push
incb
adc
add
add
adc
aaa
rorb
mov
add
loopne
jge
xlat
cld
pop
add
cltd
addr16
add
or
or
xor
and
testb
je
das
lea
mov
push
rcrb
ja
mov
enter
cld
add
stos
ret
xor
insb
mov
lahf
inc
add
dec
push
adc
and
add
jo
dec
adc
mov
popf
or
add
dec
add
dec
lret
add
aam
or
aaa
push
sbb
mov
movsl
xchg
js
and
push
cld
mov
ficomps
daa
push
add
add
mov
jmp
sarl
out
dec
sub
dec
stc
adc
das
inc
mov
bound
mov
daa
lea
jbe
cmc
mov
adc
jg
lahf
imul
xor
imul
lock
into
add
jb,pn
in
mov
jo
arpl
add
mov
cmc
mov
add
sbb
cli
inc
cmc
cltd
mov
mov
jecxz
jmp
in
xor
jmp
mulb
add
mov
shlb
mov
dec
or
pusha
xor
call
mov
or
and
fs
mov
mov
pop
ret
mulb
add
test
seta
testb
arpl
call
das
loope
pop
cmp
mov
sahf
cwtl
incb
test
add
adc
loopne
or
push
xor
add
and
call
xchg
adc
fsubrl
pop
ret
mov
ret
andl
jg
cwtl
daa
add
dec
push
push
push
add
add
pop
insb
std
adc
fdecstp
and
push
and
dec
and
pop
in
mov
aas
rolb
pop
and
jmp
mov
add
add
cmp
lea
mov
mov
or
add
xor
xor
lea
add
lahf
and
cmc
adc
and
pop
jg
xchg
lea
add
adc
leave
push
sbb
xchg
push
lea
add
adc
push
jl
in
lahf
inc
add
xchg
push
xor
mov
imull
add
and
pop
xor
inc
or
or
into
js
adc
jge
adc
in
mov
add
add
mov
cmc
es
call
dec
push
cmpsb
push
mov
ficompl
push
pop
das
inc
sub
daa
jmp
mov
cmc
scas
mov
outsl
xchg
adc
out
imul
add
xor
adc
jp
iret
lds
insb
arpl
jmp
xor
aad
adc
out
addb
testl
add
add
sub
call
sub
dec
fucomp
addr16
jecxz
ds
xor
out
shrl
add
shlb
popa
mulb
add
pop
inc
add
divb
je
out
imul
lds
add
cli
sub
sub
and
mov
mov
inc
or
les
add
push
sbb
xchg
inc
and
push
pushl
bound
dec
fstl
inc
or
mov
lcall
inc
and
lcall
fsubrl
add
dec
arpl
ret
ret
sbb
mov
and
scas
add
das
ret
je
pop
pop
jl
sub
popf
sub
add
fcomi
pop
cmp
add
cmp
push
xchg
int3
xor
jne
adc
add
jl
andl
add
or
int
cmc
popf
xchg
incl
sarl
ja
lea
ja
add
sarl
rorb
int3
ja
or
mov
adc
lea
fucomi
inc
and
add
notl
cmp
sub
push
or
std
mov
les
xorl
lcall
decb
sub
jae
mov
add
cmc
cli
jle
cmc
es
fidivrl
mov
pusha
adc
cmp
xor
add
pop
fldz
xor
sbb
int
adc
dec
shll
or
mov
loope
bnd
mov
iret
call
ljmp
push
mov
and
popa
test
sahf
notb
add
es
inc
icebp
es
push
mov
mov
xor
add
scas
out
out
call
repnz
rcl
pop
mov
sub
and
jmp
mov
cltd
xor
sub
movsl
icebp
aaa
jmp
adc
cmc
push
add
cmc
push
mov
cltd
xor
sub
scas
inc
in
fs
andl
mulb
add
lret
sbb
shl
lock
jb
andl
cmpsl
repnz
cmp
in
out
arpl
add
add
mov
bound
xlat
iret
pop
push
mov
mov
adc
iret
dec
or
pop
icebp
mov
popf
push
add
sti
addl
add
aad
add
test
sub
or
daa
mov
fmull
jne
sbb
je
and
scas
sub
push
jmp
das
loop
imul
jbe
adc
lcall
xor
lea
push
add
les
or
cmc
lea
call
gs
mov
lea
add
add
push
mov
jne
mov
mov
lea
cli
lea
add
cmp
sar
leave
inc
or
mov
add
lcall
dec
addr16
cmc
lea
cmp
xchg
cmovb
xchg
enter
sar
lea
rorb
test
xchg
stos
arpl
mov
test
adc
out
mov
push
xor
mov
add
add
popf
mov
sbb
sub
loope
push
jbe
stc
push
jo
cmpb
pop
xchg
ja
in
add
sbb
add
imul
cli
rclb
sbb
xchg
mov
push
daa
jne
dec
sbb
push
mov
call
or
add
add
ljmp
pop
sarb
icebp
enter
push
bound
push
sbb
std
xor
add
and
jmp
lret
loope
cld
hlt
push
cmp
or
mov
push
mov
mov
test
add
aaa
add
push
dec
adc
mov
add
pushf
sub
adc
sti
push
pop
filds
push
scas
aam
or
out
decl
adc
je
mov
jb
dec
in
testl
push
mov
enter
add
jae
xchg
inc
or
dec
jmp
lahf
inc
cld
dec
pop
or
or
jmp
out
ret
fsubrl
mov
daa
ss
call
cmc
or
out
int3
add
out
pop
pop
cs
ret
rolb
push
and
push
add
cmc
mov
push
iret
jle
add
jge
dec
jno
pop
dec
lea
mov
or
mov
ret
or
jge
inc
add
pop
clc
mov
push
mov
in
pop
ds
idivl
add
popl
mov
mov
std
xchg
repz
add
call
mov
xchg
icebp
rolb
call
mov
add
mov
push
push
std
push
bound
inc
adc
cmp
inc
dec
sub
mov
cpuid
xchg
sti
jae
out
shll
shlb
es
push
mov
inc
cld
mov
sbb
stos
sahf
fucomi
add
test
pusha
stos
or
sti
jmp
movsl
jmp
and
push
data16
aam
mov
stc
test
in
xor
jns
cli
jmp
sub
das
jle
cli
dec
xchg
je
jae
or
les
loopne
scas
xchg
subl
cmp
ret
cmc
jl
popf
bound
mov
test
outsl
sbb
shrl
call
and
call
stos
pop
shl
sti
mov
and
lret
adc
or
mov
cmpsb
mov
push
jecxz
js
mov
adc
scas
in
mov
cmpsb
fnstenv
add
mov
mov
adc
pop
into
cmp
adcb
dec
push
mov
inc
add
shll
push
push
cld
cmp
es
add
and
call
cli
iret
jae
dec
and
mov
mov
push
cld
cmc
push
lea
add
cld
and
add
or
push
jg
inc
stc
inc
mov
inc
incl
adc
inc
cmc
cld
mov
inc
xchg
mov
ds
adc
test
fisttps
pop
mov
in
sub
sbbb
adc
push
test
mov
pop
lret
inc
cmc
jge
mov
ret
shr
dec
mov
das
test
push
mov
es
mov
xchg
xchg
cmp
cmc
adc
loop
icebp
mov
adc
mov
xchg
xor
add
loop
loop
stos
mov
ljmpw
inc
cmc
es
jns
mov
push
sub
icebp
mov
loopne
rorb
stos
inc
jecxz
add
addr16
pop
cmp
loopne
test
aam
movsb
mov
ds
sub
fnsave
cmc
xor
jle
add
out
popa
and
je
imul
adc
aad
mov
pop
jle
mov
div
add
push
fsubr
repz
stos
mulb
mov
add
add
push
cs
adc
jge
sti
mov
stos
adc
push
sub
mov
mov
mov
orl
or
pop
push
pop
xlat
pop
rclb
testl
pusha
jmp
es
lea
iret
dec
lea
xlat
dec
push
aam
or
add
add
sti
ljmp
cmp
ljmp
jb
inc
push
and
repz
cmpsb
ss
mov
mov
aam
lcall
mov
aad
addl
pop
pop
and
mov
inc
or
sub
pusha
cwtl
es
inc
andl
add
or
jg
inc
add
cmc
cli
ds
movsl
add
incl
add
add
sub
lret
add
je
mov
lods
pop
ds
das
cmp
mov
pop
aaa
jle
mov
ja
lea
notb
mov
xchg
mov
jbe
add
or
adc
xor
std
sbb
ljmp
add
xor
jp
orl
add
out
es
rorb
xor
mov
adc
add
adc
cld
mull
jmp
call
mov
out
clc
mov
es
and
dec
das
ss
push
sub
add
pushl
int3
inc
cmc
in
sub
jp
push
sub
lods
pop
add
jmp
mov
addr16
insl
cmp
loop
add
aaa
dec
pop
pop
push
pop
fildl
jo
insl
mov
or
cmp
add
not
cli
inc
icebp
repz
cld
push
xor
jge
jae
not
mov
sub
popf
inc
imulb
loopne
je
sub
jmp
not
mov
in
loope
push
or
out
into
mov
bound
pop
inc
jge
push
leave
shll
lret
mov
mov
and
add
test
xchg
shrl
add
rcl
push
sub
pushl
push
adc
sbb
sbb
jmp
movsl
jnp
fcoml
call
fisttpl
push
data16
inc
call
xorb
cld
int3
and
cld
push
les
add
mov
pop
leave
fimuls
jg
in
add
in
ficompl
add
adc
mov
pop
xchg
or
mov
test
stc
mov
push
int
jecxz
pop
js
data16
jg
mov
jno
incb
add
add
cmc
add
int3
dec
jg
mov
das
pushf
lods
stos
jle
pop
movsl
jg
leave
mov
or
fstpl
jmp
out
mov
add
dec
imul
add
icebp
push
fadds
mov
lret
jge
pop
leave
scas
jp
les
daa
push
popaw
test
mov
in
add
add
add
out
sbb
lret
iret
addl
daa
cli
inc
cmc
fadds
adc
lds
sbb
cmp
mov
adc
pop
ljmp
ret
cmp
xor
negb
out
jl
jnp
cmc
jb
in
add
dec
test
pusha
test
add
add
enter
daa
add
mov
and
popa
inc
jmp
mov
jae
jno
hlt
daa
mov
xchg
lds
or
adc
stc
cld
add
je
lock
call
xchg
jmp
not
mov
notb
add
sub
push
bound
es
cld
xchg
mov
cmpl
faddl
xchg
sbb
ss
andl
int
add
add
movb
dec
sub
push
lcall
add
mov
sub
ljmp
mov
andl
adc
sub
je
add
mov
add
es
jmp
scas
mov
and
or
and
inc
xor
add
scas
mov
sub
orl
aaa
jo
mov
fisttpl
fwait
out
push
lret
out
testl
xor
add
dec
add
insb
punpckhbw
call
push
js
call
cli
pop
xor
or
and
stc
aam
icebp
pop
add
jle
add
std
adc
add
jl
cmc
es
cwtl
jmp
insb
call
and
test
ret
sbb
xchg
js
loop
cld
push
jno
inc
pop
xlat
addb
xchg
push
lods
dec
stos
sub
out
jnp
idiv
in
loop
add
jmp
jmp
push
or
aaa
test
jns
cmpsb
int3
repz
jmp
inc
cmc
and
in
lcall
jbe
addl
sub
push
push
push
cmp
sbb
dec
pop
add
inc
push
mov
add
es
mov
das
call
xchg
notb
add
inc
cmp
enter
mov
xor
stc
xor
dec
je
pop
sti
fimuls
mov
test
dec
mov
mov
insl
stos
jecxz
mov
add
push
mov
call
sahf
mov
add
add
cmp
loope
push
push
or
add
sub
mov
incl
out
jb
bound
lea
mov
mov
fwait
lock
leave
push
daa
add
sahf
dec
push
leave
out
push
data16
loopne
int
mov
std
je
add
sub
dec
sahf
xor
das
cmp
jae
aad
dec
test
imul
xchg
xor
cmc
xor
and
jb
into
ja
call
out
dec
leave
mov
jge
jbe
stos
andb
push
mov
inc
jg
call
pusha
lcall
fwait
or
cmc
push
lea
pop
dec
mov
add
out
mov
lea
lcall
adc
jmp
jp
push
mov
add
and
fcomps
lds
sub
daa
in
add
shll
push
js
in
jmp
rolb
stos
out
cmc
add
dec
mov
mov
cmc
mov
mov
cmp
in
call
add
notb
daa
addr16
fdiv
es
test
dec
sbbb
xlat
xchg
add
ret
cmpsl
sub
roll
es
jle
adc
mov
jg
fidivrl
jmp
jae
push
iret
jg
push
idiv
aas
add
loopne
or
mov
mov
add
add
xchg
push
pop
inc
verw
ljmp
lods
inc
cmp
aad
shl
inc
mov
insb
repz
ss
out
out
call
sub
mulb
add
movsb
in
lcall
aaa
xchg
mulb
getsec
cmpsb
scas
jae
icebp
mov
mov
out
mov
incb
xor
pushf
mov
add
add
mov
stos
cmp
sub
mov
mov
jae
dec
call
test
jo
ljmp
xor
mov
xor
mov
mov
inc
nop
mov
add
daa
std
lea
push
inc
add
add
lds
dec
pop
ljmp
cltd
or
call
xor
push
adc
dec
outsb
sub
mov
rolb
sahf
mov
outsb
push
push
push
dec
pusha
mov
lea
les
pop
cwtl
jo
lret
out
js
das
add
rcrb
subb
dec
push
inc
add
adc
xor
mov
stc
mov
popf
mov
mov
add
add
push
push
ret
cld
movsl
xchg
mov
insb
ds
mov
lods
jae
stc
aas
cld
lahf
mov
add
fwait
lea
jle
movsl
andl
add
and
jns
cmpsb
fdiv
es
push
sub
adc
jne
sbb
aaa
daa
call
mov
or
add
sub
or
scas
es
popf
hlt
push
movsl
subl
addr16
roll
cmc
imul
das
mov
or
xlat
push
rcrl
add
out
add
es
aas
sub
adc
out
lret
cs
jb
mov
rol
jl
jmp
xor
xor
jmp
dec
mov
pushf
xchg
jl
int
jl
pop
sti
mov
jmp
mov
mov
dec
insb
sbb
push
pop
and
icebp
mov
sbbl
subl
and
push
mov
push
fidivrl
in
xchg
rolb
and
add
int
ds
daa
movzbl
inc
sbb
cld
add
aaa
lea
gs
cld
stos
mov
xor
add
test
pop
lea
sti
jnp
call
jmp
pop
call
pushl
xchg
inc
mov
mov
inc
add
pop
adc
pop
scas
inc
or
divl
call
ror
sti
incl
add
add
adc
aam
add
jg
or
push
fmull
inc
pop
cmp
push
add
and
add
pavgb
dec
add
inc
adc
mov
xchg
call
mov
lcall
mov
sbb
ljmp
test
stc
lcall
inc
dec
mov
add
add
add
popl
xorb
adc
adc
ficompl
lods
mov
js
xchg
mov
adcl
fsubrs
jns
sbb
lods
sbb
je
call
pop
and
mov
jbe
or
inc
add
data16
daa
jmp
sbb
icebp
fimull
cmp
jno
jl
mov
mov
mov
cmpb
jno
sar
andl
call
xchg
jns
pushf
lods
pop
and
push
mov
push
add
es
arpl
jne
ljmp
jmp
push
jns
rcl
call
js
pop
pop
and
in
not
mov
mulb
sbb
push
inc
jmp
orb
shlb
fs
test
outsb
push
jg
xchg
mulb
lea
add
out
add
sahf
std
fnstcw
mov
inc
pop
dec
add
dec
mov
add
mov
add
add
test
je
xchg
std
push
sbb
out
fsubs
add
les
add
add
ds
dec
xchg
add
cmp
loop
les
cmpl
nop
mov
incl
adc
notl
or
dec
jle
mov
pop
fildl
add
add
lahf
out
jp
add
mov
enter
push
sbb
scas
cmc
jg
cmp
jne
mov
test
clc
js
pusha
push
stos
das
sub
cmp
call
jg
fnstenv
push
push
int
aad
rcl
xchg
enter
int
insb
mov
cmp
shl
and
and
add
mov
rcll
es
sub
mov
es
xor
push
push
jns
out
cmc
mov
mov
ret
add
jb
in
jle
sahf
sbb
push
std
xlat
cwtl
mov
jne
mov
bound
sub
add
xor
inc
jg
shlb
pop
je
daa
leave
daa
fcmovb
mov
addb
jl
and
xchg
sbb
lcall
call
dec
ja
sub
inc
push
adc
ja
add
and
add
add
stos
mulb
call
mov
daa
xor
insb
cmp
or
mov
xor
out
cmp
jl
idiv
pop
or
or
popf
mov
hlt
mov
popf
ret
es
jae
lret
pushf
pop
je
int
je
pop
xor
in
push
aaa
call
mov
mov
aaa
push
addr16
daa
add
mov
mov
adc
jmp
incb
add
add
xchg
dec
shrl
sti
mov
mov
stos
shr
inc
push
lcall
daa
jbe
cmpsb
sub
push
fwait
xchg
lea
imul
push
out
sbb
cmp
pop
push
push
cmc
cmpsl
jp
cmc
jg
test
cwtl
jb
cmc
jg
jl
orb
xor
fwait
jp
xchg
out
add
add
add
bound
sbbb
xchg
xor
add
jle
add
aas
lods
xlat
adc
jae
mov
test
hlt
repnz
mov
inc
cwtl
decb
nop
ret
xchg
mov
xchg
repnz
xor
jg
out
js
or
addb
cld
lret
call
cmc
jg
cltd
mov
push
add
sti
js
add
add
jnp
lcall
sub
jb
popa
cmpsl
jne
mov
xor
jle
cwtl
push
jno
mov
mov
xor
adc
xor
scas
loopne
cmp
sub
dec
xor
sti
les
out
aad
xor
cmp
add
add
mov
add
es
adc
jmp
push
jo
adcl
gs
daa
fcomps
in
mov
pop
mov
repnz
movsb
mov
dec
cltd
dec
repnz
jl
rclb
inc
inc
or
adc
pop
popf
out
jb
mov
aas
test
add
jmp
bnd
movsb
push
scas
in
test
cli
adc
add
dec
mov
pushf
fimull
cli
pop
add
ret
sub
push
and
out
or
out
cwtl
and
mov
add
mov
call
pop
jmp
jae
aas
arpl
cmp
add
sbb
call
enter
xchg
sti
pop
ljmp
dec
and
mov
lock
jne
dec
inc
sti
inc
out
adc
cmp
sbb
mov
lea
cmc
addr16
jg
inc
xchg
adc
dec
fstpl
cmp
jo
adc
addb
sbb
daa
add
adc
push
inc
add
mov
fistps
xchg
add
popa
fstl
add
xchg
mov
call
cmp
aaa
add
stos
mov
adc
insb
mov
xchg
sub
inc
cmc
daa
or
mov
xor
and
jmp
cwtl
shrl
lods
add
call
add
rolb
mov
popf
adc
insl
jg
cwtl
insl
test
mov
xchg
cmpsl
sub
int3
popa
mov
pop
cmc
add
repnz
jbe
out
push
fwait
imul
sub
cmp
insl
adc
add
imul
insl
jmp
imul
add
out
pop
insb
rolb
jmp
jmp
push
jg
mov
insl
push
bound
aam
aam
push
inc
jmp
pop
out
or
jl
test
jmp
jle
bound
ja
dec
insb
roll
push
outsb
lcall
lcall
sbb
popa
lods
add
mulb
adc
add
aam
xchg
adc
or
test
push
xchg
add
daa
mov
push
xchg
jae
hlt
sub
jne
xchg
jae
mov
xor
int3
push
mov
ret
cmpb
jne
imul
xchg
push
dec
sub
out
popf
ljmp
sub
push
inc
cli
decl
repnz
xchg
mov
and
jb
xlat
in
push
push
rorb
xchg
mov
sub
add
xor
fdiv
xchg
adc
repnz
loopne
in
aas
cmc
cld
or
pop
or
jmp
fmulp
cmpsb
ljmp
pushf
mov
addb
xor
lds
cmc
xor
je
out
cmc
jg
jl
jg
push
cli
add
add
jg
ljmp
jmp
ja
out
and
add
cli
insl
ret
jle
add
adc
mov
add
es
dec
adc
popa
orl
adc
imul
xlat
subb
call
shl
imul
xchg
fcmovnbe
pop
pop
scas
push
xchg
rorb
cmc
popf
popf
jle
jle
loope
imul
sub
scas
dec
popf
and
push
xlat
mov
xchg
cmpsl
sbb
fsubl
adc
push
icebp
or
repnz
jl
inc
xchg
mov
jno
jmp
push
pushf
test
stos
pusha
mov
push
jle
sub
add
popf
out
insb
insb
repnz
mulb
sbb
rcrb
push
mov
je
push
jecxz
pop
repz
loope
mov
loopne
mov
sub
out
shrl
jp
cld
xchg
popa
or
arpl
sbb
and
aad
jno
push
jmp
jbe
jo
mov
add
add
clc
incb
xchg
mov
mov
movsl
add
inc
mov
or
mov
dec
mov
repz
mov
xor
shl
frstor
add
or
mov
mov
mov
cmp
loop
leave
ret
push
mov
loope
push
hlt
clc
lcall
mov
sbb
sti
mov
cmpxchg
shl
dec
add
rcr
or
cli
mov
hlt
enter
lcall
pusha
xor
aaa
addl
push
stos
lret
movsl
xchg
es
outsb
inc
xchg
imul
es
cmc
jo
sbb
or
jno
fdivrs
or
rolb
add
into
dec
xor
pusha
add
out
sub
push
daa
jl
ss
lcall
imul
mov
es
in
loopne
sbb
cmc
sti
sarl
cmp
daa
mov
ja
ljmp
stos
mov
and
inc
push
sbb
shrb
sub
sbb
pushf
add
add
mov
jmp
call
xor
inc
sbb
std
mul
pop
out
out
aas
fldcw
xor
shlb
out
mov
bound
in
jle
hlt
mov
das
add
xor
mov
gs
mov
cli
sub
adc
ss
jo
xor
or
xor
sub
in
jmp
imul
fdivrl
jl
ret
xor
call
fldenv
je
sub
inc
adc
jmp
or
or
cmp
adc
ss
andl
mov
lea
call
test
add
add
add
or
xor
pop
and
mov
mov
adc
incl
adc
inc
add
les
sub
inc
adc
inc
add
les
sub
inc
loopne
lcall
add
and
ljmp
push
popa
add
out
jp
std
mov
or
mov
jmp
add
sbb
adc
cmc
enter
add
xlat
movl
push
mov
popf
push
mov
mov
hlt
lcall
cmc
dec
jg
cmc
or
add
dec
lcall
xchg
sub
mov
into
sahf
aaa
stc
dec
add
dec
and
subl
add
pop
dec
sub
mov
mov
lock
cmc
int3
mov
aam
daa
jmp
ret
popf
pop
call
test
bound
add
lret
popa
ret
out
pop
bound
fisubs
mov
bound
lcall
adc
fld
mov
test
add
add
add
cwtl
push
je
out
xchg
daa
je
sub
adc
jecxz
cmp
lods
mov
mov
and
add
dec
add
mov
pop
cmp
pusha
cmp
movsb
jmp
jg
mov
scas
pop
icebp
outsl
fiaddl
insb
mov
push
push
and
ljmp
es
jae
mov
pop
cmp
mov
add
clc
adc
jbe
jo
mov
add
je
outsl
mov
cmp
push
xchg
call
fmul
mov
es
movb
lock
mulb
add
cmp
daa
mov
xchg
mov
sbb
rorl
sbb
lods
das
sub
mov
pop
pop
push
imul
addl
add
add
add
pop
stos
jnp
pop
sbb
xlat
mov
test
and
add
lods
or
add
scas
adc
call
xchg
pop
clc
test
das
pop
xor
mov
cmpb
aaa
pop
xor
mov
lea
hlt
sbb
inc
mov
cmc
dec
add
leave
push
add
mov
fisttpl
roll
or
shr
out
add
popf
mov
stos
dec
jae
lcall
dec
add
push
add
lea
in
daa
cmc
dec
jnp
sub
in
sub
dec
cmp
mov
add
int3
xchg
ljmp
ret
add
pop
push
fcmovnb
int
call
dec
mov
test
pop
inc
in
divb
into
pop
mov
mov
divl
lcall
sbbl
notl
pushf
and
cld
pusha
jge
cs
adc
stos
stos
inc
cmpsl
hlt
mov
add
scas
stos
cli
xor
repz
adc
fisubs
jmp
xchg
testl
jns
xor
adc
dec
lcall
sbb
cmp
test
jmp
ret
mov
mov
pop
mov
jne
into
cwtl
jmp
dec
sbb
sub
jmp
add
xor
mov
imul
pop
aaa
inc
add
mulb
mov
adc
pop
xor
add
sub
jmp
hlt
push
jb
sub
aam
add
test
mov
add
test
push
jmp
out
out
add
and
shlb
cmp
out
add
pop
xor
mov
incl
add
add
std
call
sbb
push
add
lcall
push
je
call
jne
roll
mov
mov
dec
sub
inc
sbb
testl
adc
ret
in
mov
add
dec
add
repnz
cmp
xchg
fcmove
es
jle
ja
cmp
dec
add
testl
enter
push
orb
imul
push
add
ljmp
subl
xor
cld
dec
push
les
sub
cmp
xchg
mov
add
sti
fimull
mov
cmpsl
je
ret
jge
sbb
dec
sbb
pop
psrld
add
add
pop
adc
push
std
pop
jnp
jns
cmp
dec
testl
add
icebp
and
or
dec
mov
xchg
pop
mov
movsb
lcall
jl
test
add
dec
and
daa
testb
xchg
mov
jo
jmp
jmp
daa
jmp
add
mov
cmpl
aam
add
pop
callw
andb
ljmp
lcall
sub
mov
xchg
aam
enter
push
jb
cmpsl
jmp
cli
add
add
iret
lock
pop
mov
test
mulb
imul
dec
mov
mulb
mov
add
add
mov
rclb
sbb
cmp
adc
push
je
jmp
ja
out
mov
call
mov
les
out
jecxz
std
jne
mov
mov
lahf
and
add
and
mov
test
les
mov
cld
ret
mov
popf
add
add
pushf
and
test
movsb
std
cld
cmpsl
mov
pusha
cmpsb
std
call
pop
js
mov
stos
icebp
call
frstor
jbe
mulb
pop
jmp
adc
adc
setne
les
and
out
inc
add
repnz
mov
mov
dec
cmc
xor
or
ret
pop
sti
cli
xor
jle
jp
outsb
add
dec
add
loop
test
sarb
int
mov
ljmp
std
pop
lcall
push
and
dec
push
cmc
dec
add
insl
pop
or
jno
add
ret
push
enter
es
mov
out
push
fstpt
pop
add
and
adc
sbb
out
es
sub
jle
push
adc
es
jmp
daa
jmp
imul
sub
push
daa
movsl
ret
ret
add
cmpsb
aad
inc
cmp
add
outsl
mov
pop
sub
insb
inc
mov
add
inc
ficomps
pusha
stos
or
sti
popa
jo
dec
nop
test
ljmp
stc
lcall
sub
add
imulb
add
test
adc
je
mov
jmp
in
stos
mov
adc
adc
mov
call
in
daa
add
test
and
mulb
imul
dec
dec
jge
je
test
and
int
je
push
callw
add
mulb
andb
mov
in
add
sub
mov
rorb
push
lea
xor
sbb
call
mov
adc
add
add
popf
aam
or
jbe
data16
cmpsb
sbb
cmp
setne
jmp
out
movsl
sub
sldt
add
bound
cmp
pop
xor
sub
add
pushf
sub
mov
mov
mov
pop
je
fcmovnb
and
ds
sbb
jl
outsb
push
adc
jb
sbb
jb
sbb
es
mov
addr16
rol
lcall
sub
add
out
fisubs
loope
add
fstpl
and
cmp
ud0
push
call
into
pop
test
je
lret
mov
sub
out
clc
add
js
sub
insb
cmp
xchg
jl
ljmp
mov
adc
cmc
imul
inc
je
lahf
sbb
add
add
push
inc
adc
sub
mov
push
cmp
push
ds
cmc
cld
mov
add
or
add
in
adcl
testb
imul
fimull
jnp
and
xchg
xchg
aaa
add
jno
ds
sub
cmp
sbb
stc
mov
out
inc
fiaddl
add
add
es
xor
dec
cmc
cld
fidivs
jmp
sbb
call
xor
push
sarl
out
sahf
pushf
out
fs
iret
bound
push
inc
pop
testl
fs
pop
mov
idivb
cli
decb
pop
cmpsb
icebp
es
insl
stos
push
jecxz
push
dec
jb
sbb
int
pop
decl
cmp
fdivrl
xchg
and
sbb
dec
mov
push
call
filds
add
lret
dec
sahf
sbbl
int3
std
push
jne
adc
xchg
data16
sub
add
mov
push
add
mov
mov
loopne
aam
fsubl
adc
push
ljmp
stos
ret
pusha
mov
cmc
mov
iret
add
cmp
mov
das
rorl
outsb
pop
clc
mov
imul
adc
or
xchg
add
jno
out
and
push
adc
add
fstps
jae
sbb
add
mov
add
add
roll
add
jo
inc
mov
push
test
cmp
jle
repnz
movsl
fidivrl
push
sbb
push
and
testl
cmc
es
out
lcall
add
stos
test
adc
ja
cs
cld
ficoms
or
ljmp
mov
fldpi
fsubl
jle
push
cmp
sbb
add
inc
stos
add
mov
or
jo
add
xor
or
mulb
jmp
add
fwait
in
dec
sahf
call
jmp
aam
add
mov
cs
imul
jl
dec
jae
ficomps
mov
sbb
add
negb
popf
insl
stc
es
roll
add
stos
in
xor
mov
add
inc
push
cmp
mov
pop
stc
push
xchg
sbb
inc
stos
call
inc
std
fsubrl
push
fdivr
ds
mulb
mov
push
or
jmp
out
mov
jmp
sub
outsb
xor
pop
add
mov
push
push
arpl
jae
daa
fimull
mov
out
test
lret
rcrl
enter
add
fistl
outsb
bnd
adc
and
inc
inc
popa
jb
add
pop
adcl
loop
jb
jae
cmpsl
pushw
call
nop
jmp
setne
mov
add
mov
add
mov
push
imul
cmc
gs
fcmovb
inc
jae
and
adc
bound
jbe
jno
out
pop
popf
js
stos
clc
adc
lcall
pop
inc
sub
add
mov
clc
hlt
cmp
jg
hlt
xor
adc
add
int3
out
repz
dec
jp
scas
mov
test
add
adc
sahf
cld
and
mov
sub
add
cmp
cmp
repnz
push
popa
jl
shl
imul
je
rcl
imul
je
jecxz
aam
xor
hlt
mulb
lds
mov
in
test
lock
fstpl
or
add
add
add
cltd
and
pop
adc
pop
addr16
mov
outsl
ror
or
lods
mov
and
xchg
jle
lock
fsubrl
sub
call
push
fiaddl
adc
adc
stc
call
push
jmp
jne
add
imul
shl
repz
testl
rol
hlt
jae
pop
fbstp
enter
icebp
add
jmp
jne
pop
bound
mov
nop
mov
push
shrl
adc
jecxz
pushl
push
test
cs
pop
shlb
add
push
mov
sub
add
xor
push
testb
addr16
push
push
jo
jne
mov
jne,pn
and
add
test
pop
xchg
and
mov
push
jbe
pop
xor
and
mov
enter
addr16
push
ljmp
shrb
mov
insb
push
or
add
decl
out
sub
je
pop
push
jecxz
add
push
mov
add
push
cmc
mov
xorb
jl
adc
jb
adc
push
leave
pop
arpl
sbb
lea
jge
es
mulb
loope
inc
jae
mov
push
mov
ds
add
cmp
dec
and
adc
call
roll
sub
pop
sbb
adc
jle
add
mov
cli
push
cmp
sub
mull
adc
add
add
jo
cmp
adc
roll
dec
call
add
arpl
xchg
jno
in
test
clc
push
pop
xchg
jo
pushf
lods
daa
and
es
repnz
lcall
cmp
push
fnsave
test
sub
add
ja
loopne
or
fnstsw
sub
inc
inc
xchg
push
dec
std
xor
jbe
sti
out
test
int3
daa
jle
andb
out
jge
jmp
ljmp
fbstp
pop
rcll
shll
jmp
jecxz
push
test
cltd
and
aam
mov
ds
pop
int
fsts
sti
jae
jmp
testb
hlt
test
mov
inc
std
fimuls
fsub
test
es
adc
push
xorb
xor
cld
outsb
sbb
inc
stc
fidivrl
es
je
and
incb
inc
inc
push
incl
std
adc
gs
push
jle
adc
or
mov
cli
pop
pop
fisubs
add
push
mov
pop
push
andl
jae
sbb
jmp
mov
inc
int3
rcl
jae
scas
mov
shr
std
call
roll
je
rol
popf
xor
add
mov
push
inc
es
cmp
push
call
xlat
jmp
add
jmp
rorb
dec
xlat
mov
push
enter
jmp
adc
mov
add
add
imul
inc
xchg
adc
dec
in
or
mov
jl
inc
inc
xor
inc
or
jp
jmp
leave
dec
push
and
imul
jmp
mov
mov
test
ljmp
cmp
negb
data16
decb
insl
in
and
roll
aas
js
negl
es
jno
adc
stos
inc
sbb
jle
idiv
dec
sti
insb
cmp
pop
sub
iret
xor
jmp
shrb
scas
push
jns
inc
fisttpl
lret
sub
call
xorl
call
inc
lret
add
add
icebp
hlt
pop
jle
jmp
and
add
add
inc
pop
cld
jns
push
shll
inc
fistl
mov
jmp
mov
shr
mov
fimull
lret
pop
mov
xor
movl
inc
inc
jae
and
adc
mov
add
mulb
pushl
dec
push
sbb
popf
adc
jae
out
xlat
push
sbb
sahf
push
mov
fsubrl
sar
movsl
mov
fmuls
add
js
push
jo
adc
sbb
in
cs
mov
pop
pop
ljmp
pop
lahf
call
fs
inc
xchg
jo
andl
add
pop
cwtl
adc
jb
aam
out
icebp
sub
xor
jmp
add
std
jne
int3
jb
cwtl
int3
adc
into
decb
push
and
sbbb
push
add
stc
dec
test
push
add
cmp
ljmp
imul
cmp
add
push
test
add
add
arpl
add
out
or
shr
and
jg
inc
lock
add
push
add
mov
cmp
ljmp
imul
cmp
jg
js
hlt
lret
rcll
lahf
sbb
dec
jg
and
sub
dec
lea
in
push
cmc
es
inc
mulb
cmp
outsl
ss
lock
add
xor
test
xor
pop
mov
jno
dec
stc
xchg
push
outsl
pop
pop
clc
pushl
lcall
pop
pop
add
jno
adc
mov
sbb
add
jbe
pop
hlt
hlt
sub
dec
fsubrl
add
mov
mov
jge
mov
cli
ret
mov
das
out
push
add
inc
lods
xlat
out
in
jb
mov
testl
test
dec
inc
jae
add
int
jmp
clc
hlt
mov
in
neg
hlt
outsb
adc
jge
loopne
xor
out
das
mov
daa
movsb
decb
add
leave
orb
add
mov
repnz
mov
in
mov
mov
andl
les
add
xorl
mov
mov
push
call
mov
rcll
fimull
mov
rolb
ja
xor
lea
pop
cmp
gs
pushl
mov
add
add
dec
sbb
nop
icebp
jb
adc
inc
xor
loop
sarb
add
add
loopne
popaw
jecxz
or
jae
cmc
filds
mull
pop
dec
adc
mov
stos
incw
jns
std
mov
add
aad
int
sub
icebp
add
ljmpw
jns
add
add
clc
mov
cmpl
jns
out
mov
sub
cmp
aas
fimuls
sbb
mov
mov
mov
jns
fldl
push
xor
jns
jmp
es
or
es
inc
jmp
inc
add
es
and
push
mov
add
std
lods
in
jns
in
imul
fadds
loope
jno
pop
mov
jns
stos
in
ja
call
int
adc
inc
mov
mov
inc
mov
cmpsb
outsl
and
imul
and
mov
pop
imul
jns
pushl
jbe
pop
popf
into
mov
add
jbe
add
dec
add
jg
mov
push
lahf
ds
sbb
mulb
icebp
scas
inc
loope
jecxz
adc
and
imul
in
loop
push
cmp
enter
mov
sbb
incb
jne
or
xor
sbb
mov
push
es
aad
aam
lods
xchg
scas
push
push
int
push
push
add
add
and
or
jl
cmpsb
testl
pop
fstpt
ret
sahf
add
jg
sbb
iret
and
mov
mov
or
push
je
cmpsb
testl
popa
dec
add
fdivs
xlat
in
fdivs
or
pop
jmp
insl
std
jmp
arpl
inc
jp
stc
stos
jecxz
jae
insl
cmp
push
ret
or
decl
test
mov
xlat
nop
or
xlat
cwtl
pop
cmc
dec
xchg
dec
inc
adc
aas
cmc
insl
add
lcall
stos
and
mov
fimuls
inc
lea
sti
outsb
mov
jb
popa
mov
add
add
add
push
test
dec
loopne
pop
sub
mov
dec
int3
outsb
or
pop
inc
sbb
stc
pop
mov
pop
add
and
movsl
xor
cmc
es
cli
mov
push
in
mov
xchg
sub
mov
cmp
inc
inc
inc
loope
jmp
push
add
ficomps
jbe
mov
bound
daa
xchg
adc
or
add
and
icebp
mov
test
and
popa
inc
pop
pop
xchg
xor
std
cmc
loopne
lahf
mov
mov
sarb
es
jno
add
mov
mov
push
cmp
bound
imull
add
add
shll
pop
adcb
mulb
ficompl
mov
jmp
ret
cmp
out
adc
das
mov
pop
mov
inc
sarl
repz
and
mov
cmp
scas
jns
notl
imul
push
cmp
fidivrl
ret
add
add
js
push
push
dec
cli
push
xor
js
cmp
sub
add
testb
mov
decb
out
addl
sbb
testb
and
hlt
and
or
ret
sub
dec
push
loope
nop
in
inc
lcall
std
adc
jmp
and
lea
iret
xchg
add
add
test
loopne
cmpl
fwait
aad
pop
mov
inc
jne
pop
incl
mov
jle
mov
adc
pop
fcoms
add
mov
or
pop
push
lds
mov
mov
cs
pop
cmp
inc
or
jle
mov
add
ja
pop
cmc
push
xlat
repz
push
ljmp
inc
ljmp
dec
push
repz
or
aas
push
dec
cmpsb
pop
xor
jmp
mov
das
popa
sar
mov
in
mov
mov
jg
add
in
adc
xor
adc
es
test
imul
out
xor
popf
in
dec
xor
cmp
iret
arpl
lods
mov
and
pop
mov
cmp
out
pop
inc
mov
imul
stos
xor
cltd
jl
pop
pusha
cmp
mov
test
rcll
out
adc
jo
push
aaa
or
repz
in
in
test
pop
sub
pop
test
xchg
shlb
xlat
loop
rorl
adc
sub
es
jb
ficoml
dec
mov
test
ret
stos
pop
andl
aas
sahf
jmp
mov
ds
jmp
iret
lahf
decl
mov
scas
adc
cmpsb
cld
decl
add
and
lcall
lret
sbb
lock
iret
ljmp
add
lcall
pushf
pop
jmp
cltd
jne
rcll
push
mov
jnp
xor
push
adc
mov
popf
inc
or
jns
cmp
pop
and
out
pop
sbb
int3
test
jle
and
sub
daa
add
cmp
rol
jmp
xor
add
add
push
push
jp
mov
dec
mov
mov
inc
sbb
inc
pop
cmc
xchg
add
aas
adc
inc
outsl
dec
jle
mov
cmp
or
test
adc
push
rsm
aaa
loopne
mov
xor
add
add
jle
mov
xor
inc
ror
jle
mov
mov
loope
mov
lea
incl
add
add
xor
sti
es
pop
adc
dec
ret
es
jge
push
pop
enter
jmp
fcmovb
push
pop
test
pop
mov
ror
or
sbb
mov
jmp
jmp
pop
movsl
aad
mov
sbb
mov
xor
xchg
xor
or
xor
aas
add
call
add
lret
sub
mov
mov
call
mov
fdivs
js
jmp
inc
xor
mov
int3
sahf
inc
aad
cmp
push
pop
stos
fidivrl
test
xor
jmp
xor
call
bound
pop
das
scas
fs
jb
addb
add
lods
das
push
fs
and
sub
push
dec
xor
jecxz
mov
add
pop
sub
loope
mov
outsl
pop
ret
cmp
ret
mov
mov
std
jne
test
cld
hlt
out
decl
dec
or
ror
inc
pusha
and
jmp
mov
push
mov
les
add
add
adc
add
jne
push
and
add
jecxz
testb
pop
and
mov
adc
sub
daa
dec
pop
and
push
out
jmp
mov
std
incl
test
cmpb
mov
xor
add
imul
pushl
sub
rcrl
dec
loopne
jge
into
or
rcrb
inc
faddl
neg
mov
rolb
mov
add
add
add
jo
ror
out
fisttpll
fnstcw
imul
mov
or
ret
push
push
mov
inc
jae
lret
mov
push
push
rorl
jne
or
mov
mov
xor
jo
mov
jmp
push
test
idiv
aad
mov
pop
lahf
mov
push
cwtl
imul
add
int3
data16
push
sbb
int
int
mov
outsl
rcrb
cs
pcmpgtd
inc
lahf
sub
popf
push
and
rcl
add
jo
ljmp
jge,pt
cld
mov
add
add
setns
repz
pop
mov
or
sub
call
mov
fcomi
jb
sub
xchg
xchg
jge
repz
mov
idivb
stos
bswap
add
loop
call
inc
inc
mov
std
mov
sbb
sub
inc
lahf
mov
je
jnp
mov
ljmp
jg
mov
imul
sbb
sub
jmp
bound
sbb
dec
ljmp
lahf
inc
call
insb
out
mov
cmp
mov
inc
mov
into
or
cmpsl
clc
or
test
dec
adc
jae
push
rorb
cmp
add
add
test
sar
inc
xor
repz
push
jmp
jle
and
test
sar
mov
cmp
and
mov
cmp
jne
pushf
roll
fwait
roll
cmc
jg
inc
leave
mov
vmread
mov
pop
add
fimuls
push
xchg
sbb
cmp
add
ja
add
dec
push
ret
call
addr16
std
push
pop
fstpl
mov
push
bound
cmc
aas
add
daa
leave
xlat
jl
in
ljmp
jl
xor
leave
pmaxub
dec
and
addr16
repnz
shl
es
pcmpgtw
rclb
sub
add
mov
push
mov
sub
add
gs
adc
jmp
pusha
and
mov
push
sahf
cmc
jle
push
xchg
mov
mov
push
jmp
daa
jmp
int3
add
rcrb
in
jmp
cld
pushf
and
fsubrs
int
or
es
jle
sub
filds
and
add
xor
aaa
fdiv
mov
shrb
push
fisubs
push
bound
pop
xor
sbb
xchg
cmp
inc
data16
xchg
add
mov
inc
cld
pop
push
inc
jmp
cmp
test
add
cmpsb
sub
imul
movsl
xor
mulb
mov
lahf
pop
mov
lret
mov
test
mulb
add
stos
fcmovb
cmp
push
test
mulb
push
add
jno
cwtl
add
shl
push
inc
fsubrl
cmp
lret
lahf
incb
fsubl
push
inc
push
inc
int3
lods
inc
clc
mul
or
add
push
push
dec
jle
and
adcl
jb
fldenv
push
mov
adc
dec
or
and
dec
incl
adc
mov
pop
hlt
xchg
adc
or
aad
push
outsb
xchg
lea
movsl
cwtl
aad
insb
cli
addr16
cli
push
pop
sysexit
adc
inc
jae
cltd
push
loopne
rolb
push
rolb
dec
mov
push
aad
dec
xor
xor
add
add
inc
mov
lcall
aas
cmc
mov
mov
lock
inc
jmp
xor
call
cmp
mov
dec
inc
dec
movsb
hlt
xlat
testl
dec
je
mov
shrl
pop
pusha
out
daa
jne
cmc
mov
fs
jg
addl
sahf
dec
adcl
daa
add
fwait
outsl
dec
or
clc
ret
fidivrl
scas
cmpsl
add
xor
loop
pop
cli
es
and
out
mov
in
dec
and
push
xor
fwait
cmp
loop
ret
xorb
cmp
sub
adc
pop
nop
mov
sub
mov
jp
out
in
pop
sbb
shrl
add
sub
test
add
add
scas
or
mov
faddl
and
add
push
add
idivb
daa
loop
pop
inc
movsl
mov
dec
sub
cli
repnz
jge
and
das
pop
sub
jb
imul
push
daa
xor
gs
mov
je
jmp
add
filds
jns
loop
mulb
jl
jbe
outsb
jmp
es
ret
add
inc
add
inc
xor
sub
inc
sbb
mov
jo
shll
mov
jo
movntps
and
lahf
daa
lahf
loopne
in
xor
sahf
cmpsb
loopne
scas
sub
pop
mov
daa
pop
mov
add
add
mov
fsubl
out
mov
bound
cmp
cld
inc
inc
cmp
xor
sbb
in
and
mov
pop
adc
into
inc
push
jle
mov
popf
insl
inc
inc
cmc
mov
jecxz
dec
add
cmp
out
aas
cmc
mov
in
mov
and
add
testb
int
dec
mov
clc
mov
adc
inc
pushl
int
add
test
iret
add
xchg
push
fadds
rolb
jne
pop
icebp
mov
mov
inc
daa
or
jmp
icebp
pop
data16
dec
jbe
cmp
cmp
inc
mov
ret
loopw
movsl
add
js
aaa
dec
lods
movl
add
add
sahf
test
js
dec
jmp
bound
adcl
add
adc
push
sub
incl
out
sti
lcall
push
test
sub
xor
test
sbb
iret
xor
enter
mov
add
testb
out
scas
and
in
imul
adc
add
idivb
int
or
adc
lea
cmpsb
xchg
adc
xchg
scas
and
std
out
inc
lea
imul
stos
pusha
add
jmp
inc
jmp
stos
pusha
add
xor
push
mov
add
adc
push
xor
mov
jl
incb
add
add
test
dec
and
je
gs
in
idivl
mov
sbb
in
js
cmp
test
ljmp
fnstenv
jae
mov
cmp
mulb
call
arpl
and
and
dec
or
inc
pop
push
daa
push
mov
and
notb
push
je
add
add
jne
or
sub
push
insl
push
mov
push
lock
int
mov
push
dec
dec
dec
pop
test
gs
adc
adc
movd
jmp
dec
clc
mov
xor
cltd
jae
or
add
jbe
testl
xor
add
push
std
das
push
xchg
jne
jle
pop
div
clc
test
cld
filds
and
into
adc
daa
dec
add
das
pop
arpl
and
push
mov
je
testb
cmc
mov
in
mov
sub
imul
and
xor
hlt
insb
cmp
cvtpi2ps
pop
mov
mov
in
insl
sub
shl
sub
or
ljmp
push
mov
in
cmp
sub
lods
outsl
pop
das
mov
cmpsl
add
adc
pop
in
daa
add
sbb
ret
jae
add
mulb
push
lahf
fwait
mov
push
push
or
jmp
mulb
or
jmp
fistps
add
scas
xor
aaa
shlb
add
xchg
sub
aad
jne
jle
add
loopne
mov
insb
or
cmpsb
or
sub
call
pop
js
testb
jbe
and
xor
add
add
pop
add
pop
call
inc
jmp
cmp
test
sbb
in
or
loope
call
test
add
dec
ret
push
imul
fucomi
cmp
orb
lea
punpckldq
lret
mov
sbb
insb
fsubl
push
ljmp
add
add
pop
jg
add
adc
inc
or
clc
mov
fsubrl
outsb
ss
pop
decl
js
add
lret
icebp
gs
in
gs
lock
add
xor
or
jbe
lods
mov
aam
int
sub
sbb
inc
aam
add
add
xlat
pushl
jmp
loop
jmp
ret
sbb
cmpsb
pop
cs
sub
inc
jecxz
and
rol
stos
xchg
in
lods
lcall
movsl
mov
out
jg
lret
sti
outsl
and
jns
xchg
ja
push
pop
lock
mov
loop
add
lods
out
jge
xchg
imull
aas
pop
call
or
bound
add
add
ja
xchg
sbb
jo
cmp
stos
push
mov
cmc
es
daa
jb
sti
ss
jae
xor
jb
jno
add
cli
push
rolb
mov
mov
adc
test
mov
call
add
cmp
pop
add
testb
sub
subl
mov
push
jns
std
jmp
nop
mov
mov
mov
lods
in
push
sub
lcall
jmp
scas
add
mov
fcomp
sbb
int3
fsubp
inc
jmp
cwtl
fldl
aaa
loope
push
cmp
add
rcr
cmp
pop
and
add
int
adc
adc
push
mov
lods
pop
incl
add
add
aaa
mov
jmp
repz
pop
incb
gs
pop
and
mull
mov
test
cmpsb
cli
test
pop
push
bound
mov
fistl
aaa
call
cmp
adc
cmc
cmc
push
call
add
add
incl
add
add
push
push
jne
push
mov
aas
ret
mov
push
add
cli
pop
adc
mov
mov
pop
mov
sbb
js
jb
or
push
flds
out
dec
aas
jno
mov
mull
jp
addr16
or
cmp
add
cmp
xor
addr16
dec
jp
mov
adc
out
mov
xchg
add
fdivrp
flds
mov
xor
es
sub
fldcw
idivl
fwait
or
jbe
fnsave
pop
and
cmc
and
negl
ret
insl
sub
or
sub
add
es
add
add
divb
in
pop
stos
rclb
test
daa
out
mov
add
dec
and
notb
jmp
imull
add
testb
mov
add
xchg
test
ss
icebp
negb
fstpl
jae,pn
ja
or
shlb
jae
xor
call
ja
or
sub
jle
jns
test
mulb
je
jns
es
mulb
jle
jns
sub
icebp
es
mov
es
add
decb
pop
imul
jmp
sbb
and
fimull
addb
jne
mov
xor
sbb
pushl
mov
mov
in
pop
inc
adc
std
gs
stos
call
inc
add
mov
xor
adc
je
mov
cld
pop
sub
mov
push
mov
mov
nop
and
add
and
or
mov
jb
sti
les
adc
in
inc
je
jb
jmp
int3
adc
push
add
add
push
cmpsb
mov
xchg
jg
add
dec
cmp
outsb
orl
aas
cmc
int
incb
adc
fstpl
inc
xlat
enter
jmp
and
push
ret
aam
inc
pop
std
sub
sub
mov
mov
jecxz
add
sbb
es
add
push
aas
cmp
mov
aaa
daa
add
imul
mov
mov
xchg
adc
insl
mov
int3
dec
inc
int3
mov
js
hlt
or
hlt
aaa
ret
pushf
jecxz
xor
jmp
cmp
inc
cli
ret
mov
fwait
out
mov
jne
shl
push
adc
and
jmp
enter
jg
fs
pop
js
cmp
add
add
sub
dec
daa
add
js
cltd
out
popf
inc
in
in
jb
jbe
jb,pt
mov
daa
add
jle
std
jae
daa
call
je
je
andb
aas
jne
and
lahf
push
loope
adc
fdivs
jnp
push
jmp
lods
adc
out
xor
push
fisubs
add
cmpb
rclb
add
negb
jno
imul
mov
lahf
dec
push
imul
test
imul
sbb
mov
pcmpgtb
xchg
pop
sub
xchg
push
mov
push
push
xor
xor
mov
dec
and
xlat
pushl
movsl
in
jne
out
pop
pop
mov
push
inc
dec
mov
add
add
test
or
fwait
cmpsb
aam
pushf
and
lea
push
sub
hlt
mov
mov
movb
mov
out
cmpb
jbe
push
and
inc
or
add
mov
jo
dec
xchg
push
rorb
cltd
or
mov
clc
jbe
add
xor
add
add
mov
cmpb
add
std
cmpl
bt
adc
inc
loope
mov
mov
iret
sti
jae
jne
cmp
sub
or
loop
mov
and
cmc
jg
out
add
jo
adc
pushf
cs
fdivrs
or
and
mov
sub
inc
cli
sti
fmuls
loop
mov
jp
call
lret
mull
fildl
add
pop
ficompl
in
add
xchg
test
sbb
shll
call
pop
jge
jnp
mov
push
call
push
out
in
fcmove
in
arpl
push
addr16
es
or
and
inc
hlt
add
les
add
pop
jne
std
aam
jae
arpl
testb
fldt
cmpsb
test
jb
and
cmp
push
and
dec
cld
fisubs
shl
mov
jae
push
mov
lahf
push
mov
pop
add
outsl
pop
cli
popa
mov
mov
mov
out
jmp
call
push
data16
add
cmpsb
fimuls
xlat
add
imul
hlt
add
test
cmp
aas
cmp
iret
ljmp
push
pop
xlat
out
sub
imul
andl
jbe
mov
sahf
inc
call
push
test
je
loop
cmp
je
or
jno
in
in
iret
sub
jmp
sahf
dec
adc
repz
andl
pushf
sub
je
sbb
adc
cmc
cmpb
cmc
mov
jmp
mov
enter
dec
push
enter
mov
cmc
std
add
cmc
std
mov
das
nop
mov
push
xor
cld
xchg
add
inc
std
cli
mov
std
outsl
ljmp
jge
add
mov
cli
scas
add
sub
xlat
enter
mov
subb
es
jae
daa
push
notl
bound
in
loope
or
loopne
mov
mov
lahf
and
aaa
arpl
adc
jbe
jmp
jg
call
cmc
out
shll
inc
aaa
lahf
filds
lods
xchg
add
mov
pop
push
sub
jb
outsl
out
pop
clc
or
sub
jl
int
sahf
mov
icebp
or
or
flds
mov
or
xor
shr
popf
jb
add
push
leave
or
add
popf
pop
xchg
scas
pop
push
bound
xchg
adc
gs
mov
mov
add
repz
mov
pop
adc
sub
and
add
adc
sbb
or
insb
mov
inc
adc
add
popf
lds
lock
imul
les
dec
je
mov
xor
iret
mov
dec
sub
jmp
push
insl
or
dec
jo
mov
mov
sub
cld
sbb
or
bound
push
out
in
out
mov
pusha
test
shll
rorb
add
cmp
and
sub
je
lret
into
mov
mov
add
cmp
cmpsb
and
add
and
xchg
mov
call
push
insl
or
test
incb
jg
int
cs
mov
mov
inc
out
test
outsb
inc
inc
push
jle
jle
cmp
lret
add
mov
add
add
inc
out
xor
jo
mov
outsb
shl
pshufw
jl
jle
push
push
sub
add
out
iret
pop
aaa
push
add
lret
cmc
ja
cli
std
test
repz
add
inc
popa
aaa
adc
rcll
dec
aaa
daa
mov
cmp
pop
pop
sahf
cli
pop
mov
xor
mov
ret
lcall
inc
jge
xchg
add
es
jae
aas
mov
push
call
imulb
push
mov
rcll
xor
lret
sub
stos
add
out
sti
jbe
add
push
mov
push
xchg
xor
add
out
or
out
pop
insb
and
mov
add
jno
add
subl
fmull
inc
jmp
mov
ret
push
dec
add
subl
test
xchg
sub
in
mov
hlt
pop
sbb
xor
add
dec
add
inc
sbb
mov
sub
and
push
cld
mov
sub
mov
mov
dec
sub
fdivrl
ds
jmp
fsubp
arpl
aas
and
push
or
push
push
mov
movlhps
js
pop
pop
mov
add
movsl
mov
and
push
das
or
pop
ret
cwtl
sub
ret
push
ljmp
push
incl
cmp
clc
es
je
es
decl
push
inc
pop
test
or
insb
pop
ret
mov
mov
cltd
repz
add
pop
cld
push
ljmp
push
adc
int3
sub
add
sub
add
iret
lret
shl
aam
es
adc
mov
outsb
mov
add
cli
push
les
inc
ljmp
push
rolb
push
imul
rorl
xchg
decl
sti
or
xor
push
stc
ljmp
fsubr
loop
mov
push
dec
rcll
add
add
in
inc
sti
adc
mov
add
ds
idivl
movsl
lret
add
es
stos
ret
out
cmc
es
fs
push
sub
int3
add
sub
dec
sbb
mov
mov
cmp
add
sub
xchg
cli
jae
mov
pop
lods
mov
mov
cmc
es
add
add
pop
roll
sub
add
scas
lods
sti
pop
push
sbb
ljmp
bound
andb
push
add
add
cmp
lsl
mov
das
add
jo
jmp
push
imul
mulb
mov
std
xor
xchg
mov
add
add
add
push
or
adc
jle
popl
ret
add
loope
imul
sub
cmp
repz
mov
dec
imul
cmp
add
ret
mov
jmp
pushl
jg
call
insb
sub
pop
inc
imul
add
fcoms
pop
push
std
add
and
add
mov
jbe
dec
rolb
inc
je
sbb
mov
dec
jmp
idiv
sub
cmc
call
cmc
inc
popf
xlat
inc
jne
dec
je
mov
jle
in
call
shrb
push
lar
jg
sub
jno
scas
push
mov
inc
cmc
mov
aaa
or
mov
in
push
outsb
ret
xchg
add
or
mov
outsb
and
xor
test
and
xchg
repz
add
cmc
jp
testl
sub
adc
add
lods
xchg
jne
stc
outsl
push
push
rolb
add
add
adc
and
es
jecxz
imul
lods
sub
sarb
es
xchg
sub
pushl
sbb
mov
fisubrs
sti
jp
out
jg
iret
jmp
and
test
sbb
hlt
add
es
mov
xchg
push
repnz
jg
out
jl
lods
sub
outsl
insl
lret
inc
xchg
cs
jge
jmp
cmp
pusha
jg
add
subl
add
or
add
mul
sub
add
in
add
hlt
cld
std
push
aas
out
ret
pop
mov
jno
or
sub
pop
push
pop
cmc
ja
rcl
es
jo
or
mov
aad
jb
fstps
call
add
std
std
insl
ss
jb
mov
std
icebp
testb
add
jmp
mov
out
pop
data16
mov
bound
lods
xchg
pop
addr16
add
sub
add
out
or
pop
ret
dec
sbb
xor
pop
pop
xchg
sbb
ret
push
mov
mov
jne
jne
hlt
lahf
cmp
xor
sbb
rorb
jne
inc
je
mov
sti
in
mov
sbb
arpl
mov
sub
add
lret
adc
faddl
mov
inc
mov
mov
cmc
mov
aas
mov
adc
adc
das
mov
push
outsb
mov
das
pop
ret
adc
mov
ss
ljmp
stc
je
js
add
add
jg
dec
lods
or
xor
add
mov
rcl
cmc
incl
adc
push
inc
mov
pop
xchg
inc
add
popf
jp
insb
adc
test
or
ds
jle
pop
addb
add
shrb
sbb
jb
jp
sub
lods
cli
lods
movsb
sti
mov
jecxz
add
push
bound
ficoml
sub
adc
outsl
gs
mov
jb
sbb
add
and
mov
xor
scas
cli
push
jmp
bound
mov
out
add
jmp
ss
call
add
jb
sti
jle
adc
jbe
inc
adc
xchg
cld
std
data16
or
push
das
call
jb
mov
fnstcw
iret
sub
in
notb
add
mulb
imulb
mov
loope
cmpsl
mov
mulb
xor
sar
std
bound
mov
add
xchg
mov
cmp
nop
cmpsl
jmp
mov
std
sahf
push
stc
xchg
cmc
inc
shll
mov
push
pop
sbb
mov
inc
add
aas
cmp
leave
or
dec
cli
std
lcall
jae
filds
push
sbb
rclb
std
mov
or
nop
stc
andb
pop
or
in
inc
lock
andl
dec
dec
and
lock
sbb
or
mov
adc
push
cmp
sub
push
setno
rorl
cmc
lar
jl
cld
mov
test
sbb
xor
mov
jmp
mov
inc
in
je
addl
add
xor
mov
sub
cmp
or
ljmp
jg
mov
or
mov
test
add
mov
je
or
mov
fdivl
mov
mov
loopne
idivl
cmc
es
out
stos
and
cmc
and
repnz
cmpsb
sub
cli
xchg
outsl
jmp
add
add
xchg
out
out
aad
fisubrs
andl
mov
clc
arpl
push
roll
adc
and
testl
loop
fs
and
push
pop
cmc
es
adc
mov
lods
cli
jns
in
sti
push
push
sbb
not
xchg
cli
test
sub
icebp
mov
cmp
stos
aad
call
stc
mov
or
clc
xchg
xor
push
mov
stos
xor
push
sub
stos
lock
sti
xor
insb
pushl
shrl
lea
and
adc
jmp
dec
inc
fldl
std
jmp
or
add
push
call
aaa
and
adc
sub
add
mov
add
fdivrl
mov
dec
xor
test
add
adc
int
pop
inc
push
add
sub
add
scas
push
call
xlat
xor
dec
sub
cmp
popf
add
incl
add
add
inc
int
adc
decl
sbb
cmp
push
inc
cltd
inc
sti
incl
sub
je
mov
test
cmc
fstpl
fidivrl
adc
int
inc
jbe
xor
jo
aam
push
xchg
fisubl
shlb
dec
jle
mov
loopne
repz
cmc
orb
aas
xchg
sbb
add
add
or
popa
bound
xor
add
add
inc
xchg
dec
aad
jl
lcall
imulb
sbb
mov
aaa
testl
jecxz
xorb
outsb
xchg
or
int3
push
pop
xor
add
ss
xchg
mov
imul
jno
cmp
push
shlb
push
pop
xchg
or
add
add
lahf
scas
nop
pop
aaa
insb
cmp
stos
inc
add
es
sbb
out
in
mov
pshufw
mov
pusha
ret
in
mov
push
push
adc
push
loope
std
ret
xor
push
out
mov
daa
sub
adc
mov
sbb
outsl
push
push
and
pop
aam
ss
fwait
and
cmp
incb
call
imul
loope
negl
insl
dec
and
insl
jmp
cmc
sub
mov
stc
jae
dec
daa
call
fs
add
dec
add
sbb
popf
sbb
push
call
cli
mov
pop
ret
pop
sub
es
in
push
mov
add
add
sub
and
add
adc
shl
std
xor
lahf
pop
cld
jne
sbb
mov
pop
sbb
test
rcl
adc
push
push
fistpll
mov
adc
cmp
pushf
es
push
out
mov
sbb
sbbl
push
test
and
sbb
popa
push
inc
pop
adc
shlb
push
mov
xchg
adc
pop
cmpsl
pop
push
mov
and
fprem1
mov
fwait
or
jbe
cmc
je
movsl
loope
in
xchg
pop
adc
mov
or
mov
rorb
scas
cmp
scas
mov
test
cli
cld
inc
sarb
xchg
or
adc
cmp
test
pop
mov
in
decb
shlb
decl
xor
aas
cmc
jbe
sti
push
cmp
adc
xor
pop
loope
or
shl
adc
es
ret
push
mov
xor
out
jg
imul
push
cwtl
xchg
xor
pop
lock
insb
mov
mov
cmp
or
add
add
fwait
sub
mov
lock
pushf
popl
adc
out
cld
out
hlt
or
cld
loopne
mov
out
sbb
out
pop
lock
fmulp
sbb
or
add
lock
jecxz
mov
mov
std
push
ret
xor
test
xor
ret
out
sub
and
call
aaa
gs
es
rcrl
add
icebp
add
addr16
mov
loope
andl
popf
inc
lds
pop
adc
popf
inc
add
cld
pop
add
lock
or
jno
cmp
pop
and
sbb
add
sbb
iret
and
add
repnz
add
sbb
pop
or
sti
je
into
in
mov
add
int3
sub
mov
pop
cs
push
adc
sti
mov
sub
je
add
je
into
in
pop
sub
mov
and
sbb
repz
jnp
call
lods
cmc
vmwrite
lods
sub
divl
std
imul
ja
and
jmp
mov
adc
mov
mov
push
jo
add
cmc
movsl
mov
cmc
gs
popa
fwait
cmp
sbb
push
and
clc
sub
cmp
add
add
rorl
mov
fdivrl
aas
cmc
or
sub
rclb
out
cmc
es
cld
xor
dec
orb
fistl
push
push
bound
adc
pop
and
stos
aas
mov
add
pop
mov
ds
in
filds
es
mov
push
inc
call
add
pop
call
sbb
test
pop
mov
sbb
stc
jmp
loopne
push
dec
fwait
in
popa
cmp
jae
negl
lcall
in
std
data16
and
idiv
push
jmp
and
sbb
repnz
jmp
je
and
cmp
in
pop
jl
pop
jb
dec
ret
push
mov
ja
stc
bound
pop
push
into
adc
testb
add
xor
mov
je
stc
bound
test
push
push
out
sti
mov
mov
dec
adc
cmp
mov
std
xchg
xor
dec
add
cmp
fs
sti
gs
rcrb
std
daa
roll
jmp
add
add
add
mov
and
xor
mov
clc
mov
adc
cmp
jmp
cmp
test
adc
iret
out
adc
or
add
inc
or
ds
jnp
add
pushf
mov
fdivrl
hlt
popa
cmc
incl
test
add
add
mov
add
dec
jle
pusha
adcl
sub
rcrl
cld
in
inc
dec
xor
mov
mov
dec
sbb
test
call
mov
xchg
sub
add
xchg
leave
jg
cmpsl
lret
fisubrl
fcomps
mov
out
fsubrl
daa
jmp
cmc
es
mov
ljmp
mov
daa
out
loop
movsl
leave
arpl
pop
mov
jb
jle
cli
sbb
ja
jmp
adc
decb
adc
cmc
pushf
or
push
pop
iret
jl
mov
fwait
fs
jmp
clc
es
add
movl
cmp
push
cli
daa
push
cmp
ret
call
out
js
add
sub
ds
cmpsb
pop
dec
mov
dec
pop
mov
mulb
mov
xor
adc
jl
and
add
rcll
add
mov
add
divb
inc
cmp
fwait
clc
insb
pop
je
xchg
mov
call
adc
ss
push
ljmp
out
sub
in
mov
sub
dec
pop
add
imul
push
mov
out
sbb
decl
push
push
mov
out
sbb
decl
mov
or
and
or
push
rclb
mov
movsb
popf
add
xor
mov
inc
les
push
mov
data16
shll
mov
dec
push
adc
loop
xorb
jbe
arpl
jp
xor
fsts
inc
fsubrl
rclb
xchg
add
mov
je
add
sahf
aam
test
call
add
cmc
iret
mov
cs
inc
push
jle
test
jge
mov
and
and
mov
mov
dec
and
pop
push
inc
jae
ja
jno
iret
push
add
in
dec
jmp
pushl
jnp
into
dec
es
ss
ljmp
or
mov
stc
out
jno
add
sbb
iret
add
daa
xor
add
cltd
call
sbb
mov
add
mov
stos
jg
sbb
in
ret
sbb
xchg
call
add
xchg
call
inc
aaa
daa
dec
hlt
out
mov
aaa
mov
xchg
in
into
shrl
cmc
xchg
out
negl
pushf
sub
add
xchg
inc
mov
mov
xor
movsl
push
call
mov
cmp
xor
mov
jge
dec
add
mulb
mov
mov
pop
stos
jge
in
push
divb
sbb
jp
xchg
ljmp
aad
mulb
test
mulb
mov
insl
sbb
pop
cmp
or
insl
pop
popf
add
jge
jae
mov
add
add
iret
push
push
sub
mov
clc
in
inc
push
int3
call
pop
jecxz
push
out
jne
call
jg
push
add
fwait
add
fsubl
call
inc
mov
or
clc
imulb
add
mov
pop
repnz
shl
addr16
in
stc
push
in
daa
add
incl
add
add
imul
stos
popf
jmp
dec
incl
cmovo
test
decl
std
ss
out
mov
idivb
push
imul
push
xchg
sub
mov
js
add
mov
stc
mov
adc
cmpsb
dec
inc
or
jle
mov
sbb
lret
addb
add
sbb
add
subb
adc
jae
cmp
cmpsb
addl
test
pop
or
xor
jnp
popa
cwtl
orl
dec
out
push
dec
cmpsb
out
push
out
addr16
sbb
test
or
push
sbb
and
add
je
scas
jbe
mov
imulb
ja
fistpl
dec
mov
or
mov
cmp
aaa
pushf
arpl
out
popf
outsb
xchg
or
fildll
stos
insl
add
es
xchg
movsb
lods
scas
lods
adc
add
or
pop
mov
sbb
sub
addr16
es
int3
cmp
jbe
ret
ds
push
cmp
test
jne
jae
mov
jo
call
ds
negl
inc
sbb
or
cmp
negb
and
add
sub
dec
sbb
and
notl
cmp
test
push
mov
movsb
fnsave
pop
shlb
shlb
sub
movsb
inc
cltd
pop
movsl
loope
fnstenv
jbe
or
test
or
add
push
inc
dec
jne
jae
add
clc
les
jmp
jmp
sub
call
data16
push
push
xchg
out
lea
ds
jmp
cmc
test
incb
int3
and
pop
ficoms
call
lea
inc
cld
jmp
mov
mov
mov
add
add
gs
pushf
and
mov
in
xor
decb
imul
add
ljmp
ror
dec
adc
sub
dec
outsl
inc
call
jo
sar
sbb
mov
dec
jns
decb
xor
jnp
std
inc
das
out
daa
pop
je
add
cmc
iret
test
dec
fdivrs
add
add
stc
test
add
pop
inc
imul
rcr
rorb
dec
mov
adc
pushl
add
pop
cmpsb
imull
cld
dec
addb
push
mov
mov
push
or
pop
sbb
dec
daa
jb
jns
aam
imul
add
or
mov
sti
ret
jbe
cmpsb
mov
add
sub
cmc
mov
int3
popa
fistpll
dec
iret
adc
frstor
fucomi
pop
cmp
mov
ret
xchg
ret
sbb
into
fistpl
frstor
and
fs
sahf
into
fistps
fstpl
sbb
sbb
stos
sbb
pop
filds
imul
cmpsl
rolb
sbb
sarl
test
jae
jb
add
add
sbb
mov
test
std
fmull
inc
inc
pusha
jl
xchg
xchg
add
divb
call
icebp
ja
or
test
subl
fnsave
iret
mov
add
ficomps
inc
jbe
or
inc
xor
cmp
clc
add
add
push
add
mulb
mov
popa
sub
inc
fdivrs
dec
ljmp
test
and
jne
pusha
call
xchg
sahf
icebp
mov
cmpsb
mov
clc
xchg
sahf
icebp
lea
mov
push
mov
aas
mov
inc
hlt
ljmp
lret
and
sbb
daa
add
pushf
sub
add
pushf
cmc
lea
aaa
in
and
jmp
cmc
cmp
sub
xchg
fwait
stc
add
int
add
mov
out
pop
add
decl
js
in
jmp
aaa
ljmp
incb
push
repnz
cmc
pop
jmp
adc
add
js
sbb
mov
add
outsb
gs
repnz
iret
add
ret
outsb
les
aaa
pop
nop
add
ret
loop
iret
js
jle
sbb
stos
xor
adc
inc
pushl
lea
cmp
pop
pop
mov
sbb
test
repz
cs
daa
add
out
cmc
outsl
cmpl
cmpsb
mov
cmc
scas
call
hlt
outsl
fs
js
cs
cmc
scas
call
add
sub
add
inc
push
adc
pushf
in
fldcw
fisubs
push
mov
cmp
lods
or
movsb
mov
rcr
add
mov
mull
ret
mov
fbstp
test
flds
xlat
bound
test
bound
lret
mulb
push
aaa
into
dec
add
mov
adc
mulb
add
out
movsl
sar
out
stc
add
addl
pop
shlb
fsts
mov
pop
and
jge
or
jmp
sbb
adcl
inc
scas
cmc
adc
enter
xlat
xor
mov
push
rcl
jae
and
imull
mov
push
dec
sbb
nop
mov
adc
lahf
call
add
lret
mov
fldenv
pop
mov
add
pop
leave
or
xlat
in
call
jnp
lret
sti
inc
xchg
and
or
xor
pushl
std
decl
test
and
add
call
mov
pushl
add
and
sub
lods
inc
and
test
and
or
lea
mov
mov
push
data16
sub
and
sub
add
sub
lret
inc
add
add
xor
inc
add
mov
cmc
aaa
in
mov
decl
mov
jle
in
loopne
push
adc
xor
adc
sbbl
push
std
xor
push
call
int
cld
std
fisubrl
movsb
mov
and
inc
stc
es
cltd
stos
ret
xor
addr16
xor
jg
jmp
pop
push
out
fadds
push
mov
lock
pop
inc
addr16
jp
jp
mov
pop
xor
cmc
es
stos
inc
add
es
inc
jp
fnsave
aas
enter
add
bound
mov
sysret
stc
push
loopw
sahf
lods
add
xor
dec
pop
xlat
xorl
add
in
mov
fidivs
pushf
rcl
mov
or
outsl
jns
testb
stos
jns
das
insl
mov
fisttps
sahf
mov
pop
lods
fisubs
add
push
mov
cmp
or
fs
pop
or
clc
pop
jae
mulb
mov
jae
ss
clc
jae
mov
daa
jmp
inc
notb
add
sub
jb
add
shrl
iret
sbb
pop
rcr
adc
cmp
add
sub
push
sub
shrb
push
push
sub
or
add
and
xor
call
add
loope
in
cmpl
push
cltd
pop
call
dec
stos
shlb
pop
or
cmp
outsl
or
cs
adc
std
xor
sti
xorl
mov
cmp
mov
stos
or
and
std
call
sub
std
sub
cld
adc
mov
mov
ljmp
cmc
xchg
icebp
mov
out
jae
paddsb
mov
std
mov
les
call
jbe
add
fldl
inc
clc
je
stc
call
push
das
les
add
add
dec
add
or
and
out
std
sub
sub
xor
push
pop
pop
xor
mov
stc
es
enter
dec
daa
divb
mov
stos
add
daa
stos
push
insb
ret
bound
movsl
movl
add
das
js
pop
cmp
fildll
add
mov
out
pop
sub
add
add
add
mov
add
es
aaa
nop
out
cmc
es
mov
out
push
into
es
ds
and
jmp
mulb
add
arpl
in
int
push
rclb
mulb
cmp
lock
adc
pop
mov
shrb
cmp
add
es
std
xor
add
add
rcll
jge
data16
cmpsl
std
cmpsb
in
push
dec
add
xchg
pop
lahf
lock
frstor
data16
rcrl
int3
in
jmp
push
push
or
shr
or
sar
add
mov
add
sbb
fcoml
mov
add
lcall
clc
dec
add
int
mov
and
add
add
mov
push
fdivs
pushf
mov
sti
decl
in
adc
in
add
jne
jne
enter
movl
add
mov
decb
sbb
add
cmc
cmp
add
imul
jbe
cli
call
repnz
cmc
push
mov
add
dec
shll
aas
std
cmc
push
inc
std
sbb
push
mov
loope
add
mov
idiv
and
or
std
jp
les
insl
or
inc
cld
sti
bound
idiv
cmp
or
xchg
ret
push
outsb
mov
cld
std
test
add
add
and
outsl
sti
cmp
xchg
ss
outsl
icebp
iret
mov
stc
cmp
les
jb
in
imul
lods
into
mov
mov
out
test
into
jae
jbe
jnp
stos
fisttps
and
push
add
push
jmp
cmpsb
jns
add
daa
je
in
jbe
outsb
in
cmp
jo
jecxz
push
stc
inc
cmc
mov
sub
pop
sub
dec
insl
and
stos
mov
add
push
sbb
adc
hlt
cmp
or
int3
std
lahf
push
mov
xor
dec
call
or
lret
je
pop
aad
rolb
mov
je
cs
sub
loope
inc
shl
pop
sarb
add
add
and
jno
push
into
sbb
call
gs
or
add
cmpsl
enter
push
bound
dec
loope
mov
add
stos
jb
inc
dec
rcrl
fwait
aad
rolb
test
mov
sub
adc
fidivrl
in
in
add
xchg
lahf
cmp
inc
data16
ret
add
push
std
adc
push
inc
lea
sar
mov
and
test
push
mov
sbb
jns
mov
dec
push
xchg
movsb
adc
stos
lret
sub
push
ret
loope
jne
testb
add
xor
mov
fwait
push
ret
jge
xor
inc
in
jbe
cmc
std
sub
sbb
xchg
divb
mov
push
int3
insl
or
dec
stc
cmpl
imul
or
inc
add
jo
js
cld
push
jo
sub
aas
out
out
ss
aas
cmp
lret
aam
pop
addr16
mov
bound
test
sbb
push
adc
add
es
out
cmpsb
out
cmc
inc
jo
jp
xor
jo
outsl
std
jno
inc
fcmovne
push
cmpl
jb
hlt
add
mov
push
daa
out
or
leave
hlt
lahf
out
out
int
sub
loope
jg
add
add
out
lret
popf
add
sahf
xor
jbe
icebp
jbe
mov
add
icebp
lret
xor
subl
jmp
cwtl
data16
push
lds
mov
std
aas
sahf
data16
test
add
push
inc
jmp
mov
push
sub
xor
push
xor
xor
or
add
xor
jecxz
xlat
xor
add
sahf
leave
push
fsubrp
adc
icebp
xchg
cmpsl
cmp
cmp
dec
dec
adc
imul
adc
jne
lcall
ret
xchg
std
pop
aad
cmp
popa
add
aam
cmp
add
dec
jns
inc
or
xor
fisubl
decl
imul
xor
aam
rolb
add
shll
push
push
data16
cld
xor
repz
xchg
sbb
or
popf
ds
pop
in
mov
mov
test
jnp
or
cmc
sub
add
add
push
inc
cmc
inc
rorl
inc
mov
cmc
mov
jb
mov
add
add
jg
or
js
xchg
jge
mov
add
cmc
scas
fldcw
aam
repnz
in
jae
mov
add
and
push
ffreep
sbb
dec
dec
ds
mov
push
xor
pop
icebp
lock
push
cmc
ds
out
gs
out
sub
ds
std
and
pop
dec
icebp
ds
add
daa
aaa
icebp
out
lods
inc
cmc
mov
insb
les
sbb
icebp
or
push
mov
or
fwait
cld
mov
addr16
call
out
ret
xchg
add
es
int
add
out
cmc
lds
fnsave
mov
es
sbb
add
test
in
or
fs
call
insl
cmp
fidivl
xor
cmp
sahf
ret
xor
andl
ljmp
cmp
mov
add
call
gs
add
aas
jmp
notb
mov
test
push
jmp
les
mov
insl
sti
and
decl
fildll
loop
lret
stos
aad
inc
cmp
leave
sahf
ret
xlat
jge
push
daa
add
push
inc
sub
lahf
clc
std
imul
mov
sub
and
mov
inc
push
lea
aad
lea
add
add
pop
call
test
xchg
sub
mov
jno
ret
push
mov
cmpsl
in
adc
add
mov
sub
inc
lock
js
inc
inc
ja
xchg
ret
mov
xor
sbb
jbe
imul
icebp
or
pop
or
sbb
mov
rolb
push
incl
add
add
fsts
int
aaa
mov
adc
push
popf
pop
sti
ds
jnp
xor
ret
sbb
mov
add
push
shll
std
hlt
dec
dec
lock
cld
aaa
mov
out
sub
pop
int
ret
ljmp
scas
ret
push
jns
les
jp
bound
inc
cmc
pop
sbb
and
adc
mov
out
dec
scas
stc
sub
or
jbe
cmpsl
mov
out
daa
xorl
out
add
jmp
dec
fwait
call
out
sti
sub
ljmp
jmp
add
pop
sbb
out
mov
mov
stos
add
cs
jmp
std
repnz
lock
dec
shl
ret
mov
clc
xchg
adc
xor
add
add
lds
mov
les
and
les
loope
es
in
mov
std
aas
scas
mov
je
int
and
iret
sub
in
mulb
push
jb
cmpsb
shl
scas
adc
xor
bound
icebp
push
ret
xorb
pop
or
adcl
pop
fisttpll
or
add
add
and
clc
je
ds
imul
addr16
cmpsb
lock
jmp
and
xchg
outsl
mov
sub
mov
adc
test
or
adc
and
add
pop
test
adc
ret
dec
and
in
or
test
ljmp
mov
add
mov
mov
add
pop
xor
push
cmc
subb
xchg
add
mov
add
js
stc
bound
inc
mov
jl
std
xchg
je
cmc
lret
add
fcompl
mov
in
mov
cli
mov
add
mov
add
xor
push
call
fdivl
call
sbb
add
fistpl
mov
data16
adc
enter
push
push
call
add
xchg
add
xor
add
mov
sbb
pop
mov
inc
cmc
push
adc
popa
add
inc
shl
pop
addr16
ds
add
jne
popf
push
test
add
add
jmp
cmc
das
xchg
jp
sub
add
and
enter
mov
sub
add
dec
call
add
test
stos
push
jo
cmpsb
inc
cmc
push
xchg
cmp
inc
add
push
ret
sbb
jne
pop
or
rcr
push
mov
cmp
int3
push
std
aam
sbb
cmp
ret
into
sahf
in
mull
test
inc
push
lds
scas
sbb
lea
and
scas
inc
sti
out
popf
mov
insb
test
sbb
and
sbb
inc
xchg
sub
jmp
dec
mov
std
cmpsb
movsl
mov
add
mov
data16
add
push
fwait
dec
adc
adc
sti
jne
iret
jno
fwait
sub
adc
dec
sub
pop
xor
add
int3
cmp
std
push
or
incl
iret
sti
mov
jo
ret
push
mov
push
sti
jne
cmp
mov
incl
xor
and
push
jmp
mov
inc
add
addr16
mov
inc
test
sub
call
loop
xor
or
xor
cmpsl
divb
add
cmc
out
pop
add
test
aad
mov
and
inc
jo
icebp
pop
outsl
or
mov
sbb
jnp
pop
outsb
addl
cmc
xchg
jp
sub
adc
sub
out
std
sub
hlt
or
out
js
and
jge
or
jg
add
test
push
fimull
iret
int
std
loopne
out
std
in
sti
dec
lea
mov
es
and
jnp
adc
out
push
jb
jmp
xor
dec
or
xlat
dec
add
out
out
lret
cmc
lods
lods
pop
jbe
aam
jbe
mov
add
mov
cmc
xor
mov
dec
lods
movsb
and
add
add
in
add
pop
cmc
mov
push
incl
mov
pop
and
rol
and
outsl
sti
mov
add
adc
and
xchg
sub
out
loope
aaa
or
pushf
addr16
mov
mov
mov
or
into
inc
ficoml
call
call
add
imul
xor
std
cld
dec
adc
je
imul
sub
aaa
daa
lds
mul
mov
sti
out
add
push
inc
push
imul
sub
dec
call
xchg
or
sub
ret
sti
cmpl
jg
sbb
mov
in
and
add
sbb
popa
clc
sbb
push
mov
xchg
pop
int3
je
mov
push
push
insb
call
test
sub
push
inc
stc
or
lods
cmp
or
mov
jno
testl
pop
adc
add
cmc
inc
fsubr
in
icebp
jmp
cmp
loope
push
sbb
add
data16
inc
mov
ret
cmp
stc
iret
add
jge
push
adc
sbb
mov
xchg
add
or
ret
dec
cmc
int
push
dec
mov
int
rorb
lds
pop
in
mov
insb
add
js
lock
mov
dec
cmc
aas
cmc
dec
push
hlt
dec
leave
add
cmc
and
out
jbe
loop
push
loope
xchg
jbe
mov
add
out
add
and
sahf
loop
dec
xchg
clc
ficoms
add
mov
pop
in
aad
out
add
fnclex
xchg
mov
add
fdivr
sub
pop
mulb
iret
repz
out
out
flds
add
add
mov
push
loop
and
lods
ds
repz
lods
or
mov
mov
add
call
xor
data16
das
jae
push
xor
bound
mov
sahf
adc
fsubs
call
xchg
mov
mov
fsubrs
lods
lock
add
add
mov
add
sub
pushf
mov
jmp
or
paddsw
test
sbb
pop
mov
mov
arpl
call
incl
in
pop
pop
loopew
or
std
xchg
clc
cmpl
push
push
and
call
dec
aaa
movl
stos
or
aad
adc
adcb
je
out
orb
add
out
imul
dec
jno
mov
push
pop
sar
je
stc
out
xchg
sub
mov
lret
or
and
add
jmp
test
sub
add
je
inc
shrl
inc
and
loopne
insb
cmp
xor
dec
adc
add
add
mov
cmc
mov
ds
jle
aas
ret
adc
cld
add
or
inc
jle
cmc
mov
or
dec
inc
and
jo
or
jg
pop
fxch
add
mov
push
lret
jbe
pop
adc
sbb
adc
dec
jb
sub
adc
and
mov
es
add
mov
daa
std
mov
jmp
add
add
out
jbe
daa
insb
dec
fsts
xchg
imul
push
out
jb
add
jp
or
sbb
repnz
insb
ret
test
mov
cmp
flds
cmpsb
push
roll
sahf
adc
cmc
stos
cmpsl
push
jns
xchg
or
inc
cmc
test
data16
pop
mov
loopne
jne,pt
daa
out
mov
imul
mov
xorb
add
ja
or
jg
out
lret
mov
jb
movsl
clc
push
inc
and
lea
decb
pop
call
jb
in
jb
movsl
in
or
or
testb
sbb
and
mov
mov
xchg
add
adcl
div
fcomps
les
add
jp
or
jmp
mov
xchg
cltd
mov
jmp
add
je
mov
mov
clc
dec
ljmp
lahf
inc
adc
mov
inc
mov
inc
lock
push
sub
ss
jnp
shrb
jno
fbld
jno
arpl
decl
roll
leave
push
xor
std
ljmp
jno
arpl
mov
or
adc
sbb
adc
icebp
push
in
jb
std
jmp
jg
cmc
mov
pushl
mov
cmp
mov
add
sbb
sbb
add
add
xchg
fdivl
pop
cmp
add
xor
dec
pop
add
ds
aaa
mov
or
pop
and
lret
mov
and
out
hlt
xchg
mov
outsl
add
mov
add
icebp
je
jae
and
push
inc
daa
data16
adc
push
dec
mov
in
sbb
add
mov
pop
add
imul
xor
xlat
fisubrl
mov
adc
and
mov
mov
iret
es
aas
adc
aaa
fcmovne
or
ss
stc
lds
insb
imul
in
push
hlt
cmpsl
push
adc
sub
mov
adcl
jo
in
fwait
add
std
mov
rcrl
cmc
mov
lods
mov
add
movsl
in
aad
push
push
fisubl
pop
clc
push
ljmp
std
mov
mulb
ret
or
inc
mov
gs
add
or
or
out
dec
sub
test
mov
adc
xchg
and
xchg
out
adc
xchg
ljmp
loope
inc
orb
adc
lahf
iret
jbe
cmp
push
mov
test
addb
push
mov
mov
dec
inc
iret
adc
fcoml
cmpl
add
jnp
lods
adc
std
push
pop
pop
and
cmp
and
sbb
aam
and
mov
pop
pop
pop
int3
pop
ret
das
loope
or
pop
add
xor
out
imull
dec
mov
mov
div
mov
xchg
pushl
mov
shrl
flds
push
xchg
fcoms
stc
iret
inc
add
dec
add
mov
add
jl
or
xchg
or
icebp
mov
fadds
cmc
mov
hlt
les
ja
aas
cmc
aas
pop
shlb
add
test
jmp
test
add
mov
cmc
daa
push
xlat
out
flds
dec
bound
insb
gs
dec
sub
and
add
add
mov
out
xlat
inc
cmc
lahf
cmc
subb
cs
cli
push
cmpsl
add
call
mov
ds
pop
scas
add
dec
jo
idivb
xor
adc
and
mov
jl
fildll
xor
repz
push
cmpsb
inc
xor
add
es
ljmp
std
sbb
stos
mov
add
add
cmpsl
shl
movsb
sbb
hlt
cli
test
cld
hlt
loop
inc
jmp
mov
jmp
and
in
xchg
repnz
in
or
cmp
std
jmp
out
cmc
add
inc
jmp
lret
xchg
xchg
ret
push
mov
push
sahf
push
loope
pusha
std
add
rolb
adc
adc
sti
adc
daa
add
sbb
cld
or
add
xchg
bound
stc
rolb
add
cld
push
or
std
setl
jg
fstpl
cmp
out
or
out
or
and
rclb
fnstsw
in
nop
notl
imul
sti
incl
add
add
and
call
enter
imul
cmc
rcl
std
jns
dec
add
mov
xchg
call
xor
std
mov
in
hlt
mov
sub
push
aam
or
stos
icebp
out
repnz
into
mov
std
dec
mov
sar
add
sbb
xchg
test
add
add
add
xchg
out
push
mov
inc
test
mov
popl
das
mov
divl
je
ficomps
test
fbstp
cmp
out
rolb
dec
aam
cmc
movsl
scas
add
sbb
sti
fistpl
sahf
shll
test
mov
add
movsb
addl
add
jmp
fcomip
inc
pushf
add
out
out
inc
cmp
icebp
hlt
aam
ret
and
push
sbb
fcmovnb
fucomp
add
test
sti
cmp
scas
jle
mov
arpl
loope
incl
push
mov
mov
pop
std
pop
or
subl
test
adc
cmpsl
dec
bound
add
add
mov
mov
std
movsb
rclb
pop
push
lret
out
jg
into
cmpsl
je
mov
fwait
jnp
jecxz
call
dec
sbb
mov
xor
cltd
aad
ret
sahf
dec
mov
mov
mov
inc
in
daa
std
xchg
jle
call
aad
pop
adc
cmpsb
dec
repz
add
adc
jle
push
dec
dec
xor
adc
lea
out
cmpsl
pop
and
cmpsb
push
std
sub
add
je
and
cmp
push
or
stos
loop
push
div
ljmp
cld
adcl
mov
stc
pop
clc
enter
or
push
insl
repz
cmp
pop
mov
add
add
pop
xchg
imul
scas
push
push
cmc
or
add
lea
xor
xchg
push
push
es
sub
movsb
test
mov
mov
or
or
aaa
ret
cmp
cmp
pop
sub
ljmp
cmp
pusha
iret
std
cli
or
je
push
jnp
fimuls
push
inc
push
and
push
add
jle
sbb
jbe
add
into
jl
sahf
cwtl
jnp
jmp
xchg
pop
add
cltd
aam
test
jb
fsubl
lret
stc
sbb
jl
push
es
pop
daa
xor
imul
jl
out
ss
jmp
insb
mov
jnp
stos
mov
int3
stos
test
fcmovb
test
inc
mov
add
or
cmc
lods
cld
iret
lods
outsl
out
cmc
sbb
or
sbb
imul
pop
lods
iret
inc
sub
mov
iret
cmc
sbb
jp
xor
bound
sub
je
das
adc
addr16
stos
call
cmp
xor
hlt
cs
call
ds
rcl
fdivr
pushf
sub
and
add
add
jae
fimuls
xor
stc
lods
enter
inc
scas
icebp
idiv
cmp
call
sbb
stc
addr16
add
ja
sbb
mov
jae
sahf
movsb
into
dec
ret
lods
inc
add
push
inc
jmp
je
mov
test
pop
sbb
test
daa
add
fnstcw
test
add
add
sub
add
das
inc
push
push
je
mov
stos
push
cmpsb
sub
out
inc
daa
add
xor
add
jg
adc
add
cmp
and
sub
jp
dec
out
addr16
jmp
cmpsl
add
or
ret
mov
or
mov
push
push
cli
and
add
add
call
xlat
dec
jbe
int3
jmp
icebp
ret
add
sub
cld
mov
jne
xor
pop
inc
sbb
cmp
mov
daa
inc
insb
mov
and
mov
sbb
sbb
and
fcoms
add
inc
or
mov
xchg
inc
jmp
scas
add
mov
int
mull
jno
push
daa
test
sub
inc
test
dec
inc
test
dec
inc
test
cs
test
sbb
add
test
fs
test
push
test
cs
test
xchg
inc
test
pushf
inc
test
movsb
inc
test
cltd
inc
test
enter
cmpsb
lods
roll
cmc
cmc
cmp
jle
leave
sub
out
cmpsb
xor
inc
mov
fisubrl
jo
add
pusha
inc
in
stos
cmpsl
push
and
add
notb
je
jg
pop
scas
out
daa
sarl
lds
ss
push
or
aaa
push
inc
adc
dec
cmp
loopne
das
mov
call
pop
add
icebp
imulb
jae
lods
jecxz
sbb
cmp
lods
fsubrp
jg
mov
andl
jne
testl
ja
sti
call
push
or
iret
dec
push
mov
dec
push
les
add
int3
push
adc
fistl
add
dec
and
jne
insb
adc
push
jno
pop
pop
cld
or
and
daa
call
mov
pop
push
inc
jb
incl
adc
and
je
gs
or
sub
adc
cmc
push
adc
cmp
jb
add
int3
or
or
cmc
cld
dec
clc
popf
adc
or
jl
je
jae
cmc
xor
sub
aam
cmp
add
es
jne
cmp
std
mov
mov
add
xor
call
sbb
lahf
xchg
inc
pop
fsub
cmp
push
adc
out
pop
jo
and
or
add
add
ljmp
test
popf
fidivrs
sub
add
stos
int3
rcrb
dec
mov
sub
out
jns
out
in
out
outsb
mov
xchg
jbe
push
enter
out
sarb
cmpsl
add
add
add
es
outsb
mov
xchg
jbe
test
stos
test
inc
popf
out
add
add
add
fidivrs
es
in
push
das
lahf
sub
push
fimull
add
mulb
std
sahf
sub
add
xchg
addl
test
lods
lock
push
inc
jae
clc
jmp
xor
jno
jno
add
push
daa
jne
or
adc
insl
std
push
out
jle
lds
pop
mov
push
lahf
daa
lcall
mov
subl
adc
mov
pop
call
mov
or
aam
xor
call
xchg
out
mov
sbb
dec
out
add
fists
inc
int3
cmpsl
jns
int3
jmp
lea
idiv
inc
pop
call
cmp
imul
cmpsl
je
inc
gs
dec
jae
adc
add
cmp
test
imul
jns
adc
push
adc
hlt
les
hlt
out
push
call
idivl
sti
in
jp
inc
cmc
lea
xor
iret
add
jg
inc
orb
adc
add
cmpb
jne
add
or
add
adc
xor
mov
repnz
les
jl
or
or
icebp
roll
hlt
mov
cwtl
xor
dec
shl
or
push
jne
add
rep
cmp
lock
mov
cwtl
pop
or
mov
mov
popa
xchg
out
xchg
cmp
and
lock
imul
out
inc
addr16
ds
push
lock
repz
jg
inc
add
jecxz
js
das
ljmp
lcall
mov
loope
add
sub
icebp
pop
movsb
repz
jb
in
lods
cmpsb
inc
hlt
jmp
pop
adcb
js
aaa
ljmp
aaa
test
sbb
cltd
int
dec
ret
add
xor
add
sbb
sub
sub
jno
xlat
pop
xor
mov
sub
sar
lods
adc
pop
inc
repnz
adc
bound
dec
mov
daa
lcall
in
push
jb
cmpsb
in
mov
mov
fadds
pop
jo
xlat
pusha
xor
aaa
pushf
ljmp
bound
xchg
add
add
in
pshufw
cmp
push
test
mov
mov
xchg
test
adc
cmc
cli
cmp
or
repz
rol
std
decl
xchg
imul
adc
cmpsl
jns
xchg
out
mov
fiadds
cmp
in
xchg
movl
pop
hlt
mov
aaa
jne
in
ss
push
repnz
xchg
jno
and
shll
jge
out
mov
and
or
in
jl
loope
add
dec
loopne
out
sidtl
mov
inc
in
shrb
iret
mov
mov
add
lock
mov
popa
jmp
repnz
xlat
or
mov
dec
loopne
jg
pop
leave
pop
push
loopne
add
add
and
jo
push
jae
repnz
add
adc
lcall
mov
jg
std
cmp
cmpl
mov
jb
mov
in
or
les
add
inc
mov
or
jae
xor
dec
sub
and
add
push
test
add
and
mov
fiadds
add
add
mov
stos
mov
in
lods
out
xor
clc
sbb
mov
jb
std
mov
pop
pop
daa
call
lea
daa
and
insb
jecxz
cld
aas
ja
shrl
aaa
adc
and
inc
hlt
movsb
daa
lods
filds
push
inc
aad
mov
mov
add
add
mov
aad
pop
xor
add
imul
sbb
lret
fldcw
adc
lahf
push
fincstp
pop
add
push
fwait
sub
es
and
daa
xchg
lods
jnp
jo
out
mov
mov
es
mov
jle
bound
mov
lods
push
push
scas
fs
jmp
cmpsb
jle
add
fmulp
push
repz
mov
jns
in
repz
sub
faddl
dec
call
xlat
in
push
and
dec
lds
sti
pop
hlt
mov
xchg
test
popa
loopne
mov
push
sbb
add
mov
inc
xchg
imul
fsubrl
aam
imul
push
test
in
dec
add
cmc
pop
add
cmp
aaa
add
add
cmc
rolb
mov
xchg
testl
sbb
push
fdivs
push
dec
enter
add
lret
jle
test
mov
inc
mov
push
jg
adc
test
test
jl
push
or
xor
cmp
jne
incl
sarb
inc
mov
test
orb
addb
jne
or
outsl
sub
sbb
adc
add
cld
cmc
aaa
testb
xor
pop
insl
sub
add
mov
mov
imul
repz
je
cmp
mov
cmpsb
xchg
iret
insl
and
cmpsl
ss
xchg
push
loopne
fnstenv
add
or
cld
ret
xchg
bound
test
adc
mov
xchg
pop
inc
sarl
mov
icebp
cmc
jge
lds
inc
cmpsl
imul
jmp
jecxz
adc
xor
jne
nop
std
jne,pt
out
jge
out
sbb
loop
into
or
push
lods
xrelease
test
ret
cmc
mov
enter
and
test
repz
movsb
jb
dec
pop
pop
push
fucomp
mov
mov
test
leave
js
out
jb
aaa
xchg
adc
call
js
push
lock
arpl
or
add
add
sbb
lds
cli
push
mov
decl
adc
mov
testl
sub
mov
xchg
aaa
fisttps
jge
mov
sbb
and
cmp
in
jne
mov
hlt
cmp
dec
hlt
sbbl
add
add
add
nop
jp
clc
daa
inc
jmp
addl
ljmp
cmpsb
aas
cmp
jb
test
subb
cltd
xor
aas
aaa
pop
push
call
sub
lea
xor
or
loopne
or
in
adc
call
repz
fsubrs
cmpb
xor
js
std
mov
lea
lods
rcrb
lea
inc
fadds
push
sub
mov
fimuls
mov
mov
out
pop
outsl
or
mov
cmpsl
mov
out
pusha
ljmp
jmpw
jg
aas
jge
movsb
iret
mov
hlt
dec
lea
hlt
ds
movb
add
repz
or
mov
sbb
mov
hlt
ja
mov
stc
daa
std
mov
fdiv
mov
adc
lcall
lahf
dec
stc
fnstsw
sti
out
jp
xchg
lea
call
mul
out
sub
or
outsb
pop
lahf
inc
cmc
push
lahf
lds
sub
sub
xor
dec
cltd
push
jb
cmpsl
in
cltd
jns
pop
bound
loope
jb
xor
ljmp
inc
push
fs
div
movsl
dec
cmp
mov
test
mov
sub
inc
sar
or
xchg
lcall
push
and
add
sar
sbb
adc
cmp
decl
in
mov
fcoms
out
xlat
packssdw
jmp
sti
cmc
out
mov
sar
jne
mov
or
push
mov
faddl
iret
inc
loopne
lahf
inc
call
add
mov
inc
dec
std
mov
leave
mov
les
hlt
mov
fidivrl
add
call
mov
jl
add
inc
fmull
mov
int
sbb
cld
or
cmp
xchg
sbb
cmp
das
adc
cmp
dec
mov
lret
jl
mov
lds
xor
pop
or
subb
add
jl
inc
adc
std
aaa
cmc
es
xor
in
int3
loope
xor
cmpsb
fiadds
insl
and
add
ja
lods
std
sahf
sub
loop
and
ficompl
jmp
add
lods
out
cmc
cmpsb
testb
or
add
and
repnz
add
sbb
iret
fucomi
icebp
shll
jge
sbb
add
add
sbb
lods
in
sahf
mov
mov
lahf
mov
je
jmp
mov
clc
mov
and
out
push
shr
outsb
std
pop
push
idiv
push
inc
jg
aad
mov
fnstcw
jae
test
fsubr
pop
fsubrp
mov
or
sbb
lahf
jae
mov
jmp
pop
mov
sahf
inc
xchg
cmc
jle
lahf
inc
in
add
add
outsl
push
outsb
lret
xchg
add
es
sub
add
in
stc
insl
in
push
pop
adc
sub
or
jne,pn
jmp
jge
jmp
adc
rolb
xlat
or
add
out
pop
mov
repz
push
mov
or
sub
in
push
xor
cld
inc
fbld
push
sbb
push
hlt
gs
fisttpl
shlb
add
and
mov
mov
loopne
out
mov
xlat
aaa
lret
addb
and
dec
sub
pop
loopne
ret
dec
pop
xchg
jns
sbb
and
dec
mov
push
call
fsubp
add
mov
inc
adc
fildl
clc
cmc
jbe
or
les
xor
xor
outsb
ret
test
push
mov
imul
jmp
xchg
jl
jmp
jge
jnp
cld
das
call
push
scas
sub
sbbl
in
aaa
add
jl
add
in
outsb
sub
xor
jl
xchg
add
hlt
into
shrb
out
cli
cwtl
int3
inc
insb
lret
mov
fst
es
jle
add
add
jnp
jle
outsb
pusha
pop
sbb
cltd
scas
add
repz
xchg
adc
mov
jmp
mov
arpl
or
jb
icebp
sti
sarl
pop
add
mov
scas
jge
add
fldl
inc
ds
mov
out
outsb
pop
add
mov
fwait
mov
mov
stc
mov
mov
jo
lret
jge
std
add
jp
xchg
add
jle
mov
inc
shll
sti
ljmp
jecxz
ret
jecxz
icebp
sti
add
test
icebp
inc
sti
adc
mov
loope
jne
adc
mov
pop
std
sub
test
repnz
or
mov
sti
push
aaa
sbb
xor
enter
mov
add
roll
or
push
stc
jmp
mov
fs
pop
xor
ret
das
shlb
in
push
movl
xchg
inc
lock
xchg
cmpsl
fmull
add
sub
xor
outsb
inc
sbb
inc
decl
dec
mov
aaa
rorb
add
add
mov
jecxz
int3
sub
enter
jmp
add
inc
out
mov
rcl
cmpsl
mov
pushf
sub
ret
lret
jmp
add
negb
push
mov
mov
mov
hlt
cmc
or
cs
das
add
std
call
in
jae
gs
pop
dec
aaa
lock
mov
lods
std
jle
test
add
mov
cwtl
inc
add
nop
sbb
cwtl
sub
add
fistl
add
jl
js
cmp
ret
inc
out
mov
dec
cmp
jnp
lea
add
jl
int
cmp
cmp
mov
adc
in
jp
xor
cli
add
cmp
aaa
arpl
adc
jmp
push
stc
cmpsl
mov
lcall
lods
cmpsl
or
push
xor
jl
sub
insb
icebp
push
sbbl
movsb
movl
push
test
std
scas
xor
ljmp
inc
mov
mov
add
add
mov
imul
cld
ja
out
cmc
cmpsb
out
sti
sbb
cltd
stc
lods
add
data16
cli
add
mov
sub
jb
ret
fsubrp
sbb
inc
loope
dec
gs
jno
and
popa
mov
add
mov
ljmp
sub
icebp
sbb
lods
popa
daa
mov
pop
test
cli
and
push
sub
cmc
repz
cmp
cmc
jbe
test
or
mov
popa
xorl
mov
out
xchg
and
jge
std
inc
adc
cli
call
pop
jmp
push
call
mov
aam
xor
sbb
inc
in
sub
inc
in
fbld
int3
adc
mov
decl
cmpsl
inc
call
and
adc
call
sti
incl
add
add
in
xchg
mov
xchg
push
out
cmp
sbb
xchg
add
call
xchg
sub
iret
jno
pop
shlb
mov
orl
mov
cmpsb
repnz
dec
add
mov
lds
loopne
leave
or
mov
inc
or
pop
jge
jne
add
je
jno
add
mov
add
add
int
cmp
pushf
scas
jmp
mov
mov
insl
xchg
into
inc
negb
pop
cmp
pop
mov
or
adc
aas
or
dec
clc
xchg
mov
inc
in
jg
ret
stos
sbb
inc
and
out
insb
xchg
jb
jmp
mov
mov
and
add
add
out
clc
mov
add
cmp
cli
jbe
ljmp
and
cli
mov
sub
or
sar
mov
jl
push
dec
cmp
and
stos
movsb
mov
xor
aam
and
pop
jnp
mov
repz
mov
mov
es
add
add
jbe
out
repz
imulb
mov
popa
sub
mov
lods
stos
push
ljmp
sub
movsb
xchg
mov
sub
aaa
sub
sub
push
pop
popa
outsb
jno
iret
fpatan
inc
imull
mov
mov
stc
ret
out
inc
add
testb
dec
daa
or
jmp
std
mov
icebp
std
mov
out
gs
fbld
add
xor
std
fidivrs
push
mov
int3
and
iret
in
mov
test
jle
ficoms
xor
test
add
mov
sub
add
or
xlat
out
mov
roll
and
dec
adc
sar
cmpsb
sub
andb
add
add
add
cmp
jb
and
inc
mov
shl
cld
cld
decl
cmc
add
xchg
cmc
sbb
or
cmc
clc
cmp
jle
pushf
add
pop
mov
negb
das
rcrb
lock
cs
add
iret
xor
negb
cmp
popl
add
decl
adc
add
clc
mov
sub
lea
mov
xchg
les
inc
mov
adc
sbb
rorb
mov
les
es
clc
sub
jae
add
sub
adc
cmpsl
add
daa
out
inc
jmp
das
out
and
mov
cmc
loope
jnp,pn
aas
lcall
add
jmp
fstpt
pop
dec
inc
scas
jnp
jg
sub
cmc
es
mov
ljmp
add
shr
pusha
adc
scas
mov
sti
nop
lods
mov
fwait
scas
mov
xchg
gs
cwtl
lods
xchg
call
add
sub
add
cmp
pop
push
jmp
pop
sbb
je
cltd
mul
sbb
add
add
test
scas
nop
nop
push
mulb
in
xor
ds
sbb
fwait
cmpsl
arpl
ficompl
sbb
jl
jno
in
mov
lahf
jl
inc
inc
jnp
xor
aad
inc
and
movsb
es
pop
sbb
pushf
ds
xor
loop
dec
mov
mov
test
stc
mov
add
decl
or
int3
lea
es
adc
inc
in
xor
sbb
sti
mov
ret
jl
push
std
pop
ret
add
add
lahf
xor
inc
mov
add
sarl
incl
jge
mov
jae
fimuls
and
test
adc
inc
xchg
sti
jne
ret
jno
movsb
mov
add
je
add
add
repz
pop
sub
testb
fsubr
cmc
das
push
sbb
jmp
stos
les
push
adc
repz
insb
jmp
lea
daa
xchg
add
and
cmc
or
std
lea
mov
or
cmp
adc
std
loopne
leave
inc
cmc
add
mov
add
test
lcall
or
or
add
add
testb
jle
daa
xchg
add
xchg
mov
add
lock
or
es
hlt
loop
insb
les
and
out
nop
mov
cs
fldl
jmp
hlt
ja
fiadds
jl
out
sub
adc
mov
mov
add
add
aaa
out
pop
mov
inc
les
fisubrl
repnz
xchg
lods
sub
nop
roll
push
jg
in
mov
daa
lds
data16
dec
adc
add
fisttpll
and
hlt
adc
lods
add
outsb
xchg
jmp
hlt
es
dec
sbb
icebp
xlat
stc
adc
xchg
daa
lds
daa
std
jmp
xchg
daa
add
jae
sub
push
and
sub
xchg
insl
jne
sahf
jb
sub
push
and
xchg
mov
in
sub
push
daa
sbb
je
pop
adc
push
fs
inc
push
inc
lods
scas
std
add
loopne
btc
or
mov
or
pop
pop
incb
add
add
sar
call
push
push
decl
jge
adc
shlb
dec
cs
xorb
add
jbe
cmpl
sub
sar
mov
call
add
mov
fstl
int3
sub
jbe
adc
insb
jmp
in
cmc
xchg
mov
add
stc
out
hlt
lahf
std
inc
mov
lahf
std
lret
out
mov
dec
les
and
push
sbb
repz
cmc
clc
nop
and
jg
add
ret
mov
mov
jle
mov
mov
ret
call
out
mov
pop
mov
ret
and
jge
jge
test
sbb
push
mov
std
or
imul
jp
mov
es
add
addr16
cmp
mov
sub
add
popa
and
add
sub
cld
cmpsb
add
jle
aam
je
les
stos
push
pop
cmc
popl
movntq
jmp
jg
shr
jae
ret
lock
movb
es
or
aad
sub
add
add
out
in
mov
jbe
fimuls
insl
jmp
and
addr16
add
mov
lcall
mulb
mov
lea
mov
jnp
mov
sub
mov
std
ds
es
testb
sti
test
mov
ja
call
movsb
pop
jmp
xchg
add
dec
jno
in
jg
jmp
mov
pop
jg
icebp
es
jmp
sub
std
jmp
xchg
pop
or
push
mov
icebp
mov
or
js
pop
loop
stos
dec
mov
das
add
jg
js
xchg
cmpsl
call
pop
dec
es
psraw
ja
es
mov
mov
add
add
cmp
mov
add
add
pop
and
test
and
xlat
cmpsb
popa
loopne
mov
push
loopne
ss
xchg
test
mov
add
xchg
jno
sbb
xchg
loope
sti
jmp
scas
sbb
cmc
jg
std
add
inc
add
cmp
jle
and
mov
and
xor
mov
popa
mov
push
push
dec
out
popa
ret
imul
sahf
jle
out
and
mov
ds
adc
ds
xor
icebp
mov
pop
mov
das
ds
or
mov
xchg
lods
cli
andb
mov
pusha
or
aas
cmpsb
std
ffreep
inc
pop
xchg
sbb
add
add
sub
inc
jo
or
in
lds
cmc
stos
cmpsl
or
in
add
test
jne
push
jo
or
push
add
stos
daa
or
in
add
fwait
or
call
jo
add
out
cmc
fwait
pop
xor
stos
outsl
lcall
movsb
mov
and
xor
cmpl
in
je
decl
mov
insl
mov
cmc
incl
add
push
fidivl
adcl
test
sub
sub
es
jmp
add
push
outsl
repz
jnp
test
sbbl
cltd
es
jnp
jnp
adc
jne
je
jnp
call
bound
fwait
xor
adc
jle
div
dec
xchg
add
add
push
fiadds
pop
mov
pop
test
add
sub
test
adc
sub
pop
adc
sub
dec
clc
xadd
in
je
scas
call
mov
call
incl
add
add
mov
inc
clc
outsb
clc
jle
dec
sub
test
sti
call
sbb
cmovo
sbb
repz
ja
sub
push
cs
push
hlt
dec
sub
int3
in
mov
add
jg
mov
pop
test
cmc
je
sbb
jg
dec
cmp
jg
dec
ljmp
or
cmc
inc
pop
test
add
mov
jg
push
int3
addb
sbb
jge
icebp
jg
push
pushf
jnp
inc
cmp
add
jg
mov
jg
std
cmc
clc
mov
fisttps
ret
ret
daa
push
add
push
test
in
gs
or
add
add
push
in
jg
and
add
mov
arpl
mulb
out
xor
repnz
cs
mov
add
mov
jecxz
cmc
lahf
lods
pop
jl
and
loope
sbb
ds
jl
fisubrs
mov
roll
and
xlat
push
push
fldenv
out
xor
es
mov
testl
xchg
push
push
jmp
lds
adc
stc
cmpsl
rolb
mulb
call
mov
add
sub
repnz
cmpsb
add
insb
out
arpl
dec
ljmp
imul
repnz
test
loopne,pn
out
fisubrl
subl
inc
cs
fiaddl
add
add
xchg
mov
push
and
sbb
jae
cmpsb
fucomip
jbe
add
sub
and
adc
and
pop
data16
fistl
cmp
js
xchg
fidivrs
jo
mov
dec
pop
mov
cmp
lock
rclb
or
test
inc
addr16
testb
je
testb
into
dec
push
add
cmp
push
movsl
into
add
pop
inc
imul
test
mov
out
push
dec
and
mov
or
cli
loop
mov
cmpsl
inc
jne
jg
add
int
out
mov
jmp
adc
rolb
add
ljmp
mov
outsl
and
jg
add
mov
and
lock
out
mov
aas
mov
or
or
movsl
jae
mov
loopne
mov
push
add
lret
movsl
es
es
xor
es
mov
xor
push
data16
in
add
ds
pop
test
ss
out
orl
add
sbb
shrl
mov
or
cmpsl
or
cs
xchg
push
and
dec
je
loopne
ljmp
mov
add
mov
pop
xor
pop
sbb
sub
lock
ret
and
lahf
lahf
sbb
lcall
data16
pushw
test
icebp
imul
mulb
call
out
out
add
cld
add
push
rorl
add
jp
or
jmp
jae
dec
jmp
mulb
add
jle
mov
or
es
divl
mov
mov
int
mov
or
push
inc
ja
and
sbb
js
mov
sub
sbb
rorb
inc
std
decl
popa
adc
jge
mov
jp
inc
dec
pop
sbb
push
mov
dec
adc
ret
inc
push
sub
mov
mov
pop
ret
or
imul
loop
mov
add
add
out
xchg
inc
add
add
loope
dec
jecxz
pcmpgtd
and
dec
jb
les
mov
cmc
enter
sbb
filds
dec
mov
or
inc
pushl
in
dec
mov
push
jbe
add
sbb
dec
xchg
into
push
nop
push
dec
pop
nop
xor
inc
add
push
jp
add
rorb
pop
add
dec
nop
jno
mov
scas
jp
test
push
lcall
pop
in
dec
push
nop
jae
cmpsl
push
daa
cmc
es
xor
es
scas
cs
sbb
lds
ficoml
gs
adc
xchg
jp
pop
repz
mov
loop
add
mov
ss
fildll
mov
mov
push
in
cmpsb
push
push
cmc
shl
incb
mov
pop
inc
mov
aad
insl
and
mov
andb
addr16
jge
daa
popf
ret
je
rolb
loope
add
cmp
aam
ss
jmp
pop
test
icebp
inc
fistpl
inc
jb
jmp
push
xchg
std
outsb
cmp
es
or
fmull
pushf
out
dec
jno
jp
pop
cmpsl
ret
cld
mov
jge
je
dec
sub
xor
or
pop
ret
sub
in
mov
les
adc
jno
aaa
mov
mov
fbstp
xor
stc
mov
add
movsl
cmp
adcb
ret
sub
fwait
daa
add
xchg
sub
ret
push
push
imul
rcll
std
pop
ret
jge
fdivl
adc
std
push
or
gs
mov
sbb
iret
fwait
mov
cmp
inc
sub
rol
std
decl
add
leave
bound
in
out
repz
inc
add
add
push
mov
inc
add
adc
mov
jl
cld
or
add
lcall
push
add
pop
test
ljmp
ljmp
clc
into
xchg
xor
adc
shr
insb
mov
aam
clc
into
pop
xor
add
sbb
adc
sahf
ret
sub
mov
adc
xor
loopne
push
outsb
mov
mov
xchg
inc
clc
into
sbb
jo
jecxz
push
cmp
cs
inc
out
clc
sub
outsl
xor
out
lods
cwtl
ret
or
enter
xor
ljmp
sub
sub
loop
fwait
scas
mov
fdivrl
negb
cld
std
popa
nop
in
jb
rolb
jl
jae
bound
stc
dec
mov
inc
stc
stos
and
xchg
push
sub
sub
pop
rcr
xrelease
mulb
adcl
in
jmp
jecxz
sbb
mov
push
data16
add
in
lds
ficoml
dec
and
adc
push
cmpsl
enter
add
mulb
or
add
enter
std
push
sti
shrl
xchg
fisubrl
cltd
dec
in
cltd
mov
or
pop
movsb
stos
fidivrs
add
cld
into
outsl
testb
int3
std
cli
pushl
or
call
jb
push
pop
mov
sbb
inc
loopne
fs
addps
push
mov
lods
push
lea
push
call
mov
addr16
out
push
movsb
mov
inc
adc
das
or
dec
pop
add
cltd
cmpsb
adc
fsubrl
out
sbb
or
or
sti
push
fsubrl
add
mov
pop
dec
add
cmc
or
add
pushf
pop
std
xchg
fnstcw
jbe
add
add
out
add
xchg
mov
adc
xor
je
xchg
add
dec
xor
outsb
jnp
push
lret
divl
cmc
dec
aam
loope
clc
xchg
xor
lods
push
lahf
dec
jbe
push
sarb
mov
add
testl
sbb
add
cmc
dec
dec
inc
into
shlb
js
xchg
mov
add
add
out
add
out
call
xor
int3
outsb
and
sbbb
mov
addr16
stos
or
int3
add
mov
pop
out
hlt
gs
push
xor
sub
idivb
jno
out
inc
daa
out
xchg
pop
les
adc
add
stos
arpl
pop
es
addr16
mov
ds
setne
daa
out
mov
add
pop
std
jmp
stos
test
imulb
pop
jno
pop
call
add
mulb
jmp
jmp
add
mulb
or
jb
add
add
adc
icebp
mov
adc
mulb
dec
mov
in
inc
out
jne
call
out
pcmpeqb
jb,pt
out
adc
sub
int
push
les
add
xlat
cmp
push
cmp
mov
cmp
cld
dec
test
or
loopne
or
add
add
inc
std
mov
lods
push
call
loopne
or
push
testb
mov
mov
ret
rorl
dec
pop
call
test
push
and
and
mov
movsb
mov
pop
dec
push
cltd
cmpsb
adc
sbb
sti
adc
cmc
ret
cld
or
icebp
ss
add
dec
iret
shrl
mov
or
xchg
ja
jo
leave
inc
icebp
repz
xor
xchg
xchg
jne
add
cmpb
push
cltd
adc
inc
hlt
cld
lds
add
flds
rol
mov
fistl
sbb
std
sub
adc
std
mov
dec
push
or
es
lock
out
dec
das
push
iret
sahf
pusha
stos
add
jo
aas
lods
sbb
lods
mov
decl
int3
loop
cs
push
icebp
divl
pushf
or
out
xor
and
mov
jg
shl
test
jle
in
pop
mov
xchg
stc
and
xor
cmp
jno
std
sti
jne
ja
in
add
shlb
lods
fsubrl
add
arpl
mulb
add
mov
pop
std
mov
pop
movsb
jno
out
fistpl
push
jbe
add
dec
in
jo
mov
fs
out
repz
hlt
push
xor
jmp
xor
add
gs
sbb
mov
pop
push
push
jbe
cwtl
cld
ss
test
mulb
pushw
or
xchg
data16
or
jbe
aam
pusha
push
jecxz
data16
fwait
sbb
std
fs
or
dec
jbe
mov
cli
and
mov
jle
ret
xor
fbld
std
incl
in
add
js,pt
pushf
and
or
outsb
hlt
add
inc
add
pushf
movsb
jno
daa
pop
add
push
mov
idiv
mov
clc
add
and
in
xchg
mov
sti
call
inc
int
and
test
in
adcb
sti
add
mov
cmp
call
movsb
sti
jmp
cmc
call
adc
add
imul
mov
sbb
or
xorb
add
in
cmp
hlt
call
pop
lret
idivb
add
inc
sub
std
mov
je
cmc
aas
add
arpl
add
jns
je
jo
je
push
test
push
fisttpll
jae
mov
add
rorb
mov
add
jbe
or
cmc
lds
add
add
int
xchg
push
inc
xor
es
in
sub
loopne
loop
and
xor
sbb
aaa
insb
xchg
push
testb
push
iret
cvtps2pd
xchg
es
or
out
jbe
jmp
and
lods
roll
push
fcmovnu
and
xchg
push
mov
movsl
mov
jle
push
jecxz
inc
jne
pushw
mov
jae
outsl
mov
push
jne
xchg
std
inc
jno
out
jo
dec
push
pop
jae
std
es
dec
push
add
push
test
icebp
movsl
cmc
scas
and
mov
test
call
add
mov
loop
gs
add
add
mov
cmp
push
pop
jl
std
cmpsb
loop
les
xor
jmp
lret
add
ret
jecxz
dec
sub
seto
decl
add
lods
and
push
mov
push
mov
dec
call
adc
cli
add
add
sbb
dec
int3
pop
ja
mov
add
add
cmpsl
sti
decl
std
test
sub
sbb
mov
divb
mov
or
in
dec
add
cmp
jne
mov
ret
pushl
mov
add
cmp
mov
lock
jo
sub
sbb
shl
shlb
sub
in
jge
addb
cmp
jle
jl
xor
loop
jle
test
jg
jmp
repnz
add
mov
cmove
add
jnp
and
aas
add
lea
or
les
sbb
je
mov
lahf
insb
cs
push
mov
cmpsl
mov
insb
xchg
push
jbe
lahf
es
jge
das
std
ret
sbb
jno
loope
push
jge
lahf
fs
push
inc
or
add
mov
jae
notb
inc
push
enter
ret
push
out
mov
jl
or
pop
inc
cmp
data16
mov
ja
fbld
stos
sti
jl
push
add
sahf
fcmovnu
jl
push
add
std
scas
loope
mov
testb
lds
jecxz
ljmp
cmp
add
notb
push
imul
pop
call
and
jmp
mov
push
std
es
pop
fnstcw
idiv
lds
cmp
jmp
or
shrl
mov
int
std
fcmovnu
pop
test
movl
sub
icebp
cli
jmp
int
subb
rcr
fsts
aam
add
inc
or
pushl
clc
add
inc
add
mov
mov
jnp
mov
push
lahf
mov
xor
cli
push
push
pop
xor
jge
movsl
movsl
adc
cli
jne
add
add
popf
mov
sub
push
pop
int3
jo
mov
in
pop
and
add
xchg
sbb
adcl
adc
jp
jbe
add
push
movl
pop
mov
sbb
mov
xchg
lds
adc
sar
jge
in
leave
jns
jle
gs
nopl
push
outsl
xchg
cli
xchg
inc
cmp
xlat
clc
dec
call
mov
aaa
jo
cmc
aas
aas
inc
lret
out
cmc
aas
add
mov
xchg
add
pop
push
daa
je
cli
test
push
dec
insl
hlt
lahf
sub
lods
adc
out
mov
scas
or
out
cmc
dec
adc
movsb
hlt
cmp
add
mov
dec
push
xor
xor
mov
pop
insb
les
out
jl
lea
aad
add
test
xchg
imul
out
insb
jecxz
test
dec
xchg
or
cltd
sbb
test
rcll
lea
add
push
sub
jmp
mov
add
jno
std
out
lock
into
std
cmpsl
std
call
call
dec
call
jb
cmpsl
sahf
pop
and
sub
sub
xlat
and
mov
hlt
xchg
notl
adc
std
push
dec
je
jns
pop
mov
idivb
push
push
dec
jae
xor
hlt
call
pop
aas
loop
mulb
std
xchg
cs
fisttps
dec
mov
add
add
aam
jge
sub
test
sar
lcall
mov
add
jmp
loop
xchg
pushf
mov
push
mov
dec
or
loopne
testb
mov
jae
inc
xorb
sbb
add
and
inc
add
jmp
rcll
loopne
addr16
ljmp
add
cmp
cmc
push
data16
loop
popa
clc
fcompl
shlb
mov
mov
dec
out
js
insl
push
mov
push
add
xlat
and
xchg
jge
repnz
mov
aas
adc
sub
jmp
rorb
cmpsb
mov
add
cmp
push
xchg
xor
imul
mov
sub
add
insb
add
int
add
jns
out
or
std
imul
clc
add
jns
pop
aas
mov
mov
pop
stc
aas
add
push
enter
and
es
add
imul
daa
out
mov
repnz
dec
aas
out
inc
xchg
pop
loop
sub
or
add
es
jl
daa
out
iret
es
add
mov
mov
es
xor
dec
outsl
and
jge
and
addr16
daa
out
mov
cli
add
xchg
icebp
popf
xchg
cmp
pop
loop
std
aam
xor
je
add
hlt
mov
sbb
push
and
jbe
fstl
cli
sbb
mov
push
cmp
shll
loope
out
mov
icebp
pmaddwd
sub
inc
mov
mull
add
or
dec
jle
cs
sub
cmpsl
fstpl
pop
iret
jg
iret
out
push
in
mov
mulb
dec
add
outsl
out
int3
and
lea
add
add
and
mov
pushf
jno
dec
sar
je
shlb
xchg
push
add
jmp
es
add
push
adc
push
mov
sbb
lock
test
jmp
push
dec
and
jmp
dec
ret
inc
imul
dec
and
push
je
add
in
cmpsl
jne
adcl
out
push
call
xchg
clc
pop
bnd
call
outsb
xchg
popa
call
jbe
jo
jno
jb
ret
incl
inc
inc
scas
cmp
iret
pop
lods
sti
pop
add
sbb
sarl
push
inc
mov
cmp
jb
jns
jno
pop
daa
pop
sar
cmp
fistpl
or
jo
add
add
mov
subl
cmp
jno
sti
jg
hlt
scas
es
pop
cmp
popa
add
cmpsb
int3
outsb
ljmp
testl
fimull
cmp
ss
pushf
stos
mov
cltd
stos
or
push
push
add
es
jle
mull
out
out
hlt
ret
jp
scas
or
xor
imul
add
add
dec
mov
out
add
gs
ljmp
mov
addr16
adc
mov
add
stos
shl
imul
scas
out
adc
add
stos
testb
or
test
sbb
sbb
imulb
and
cs
push
bound
add
add
imul
push
mulb
call
out
inc
jmp
add
ljmp
inc
sub
es
scas
hlt
cld
scas
lds
add
inc
add
cmpsl
repz
movb
sub
push
fwait
sbb
adc
sub
test
add
fsubrl
push
incl
add
add
sub
mov
sbb
jae
add
mov
mov
push
pop
cld
adc
paddsb
or
std
lcall
test
cli
adc
sar
lar
xchg
insl
push
add
lods
aam
fwait
aam
adc
repnz
mov
jl
outsb
xchg
cmp
icebp
dec
cmpb
inc
add
mov
jne
add
push
inc
push
jbe
push
into
push
xor
xor
add
mov
add
daa
jg
cld
loopne
adc
pusha
cmp
lods
xor
push
repnz
shll
add
push
sub
stc
fs
shlb
add
mov
cs
bound
adc
add
add
clc
add
hlt
es
outsb
ret
sub
add
int3
loop
out
stos
jp
cmpsl
jg
mov
add
movsl
inc
aam
out
out
ret
inc
hlt
imul
out
sti
inc
daa
imul
cmp
add
add
lahf
add
es
mov
push
outsb
inc
iret
loop
cmc
es
mov
out
push
das
scas
jle
out
cmc
inc
cld
cmpsl
push
out
xchg
pop
mov
aad
es
div
mov
out
push
ljmp
add
rclb
faddp
and
or
adc
rcrl
xor
test
sahf
mov
cli
ss
push
scas
or
out
inc
xchg
mov
call
sub
pop
xor
scas
movb
inc
std
out
iret
xchg
out
dec
jmp
dec
decl
inc
cld
ss
sbb
adc
imul
aas
leave
pop
sub
decl
lcall
sti
xor
sub
fsubs
in
ret
add
or
in
xor
mov
cli
lcall
jae
mov
pop
call
dec
in
sub
es
jbe
pop
jmp
test
xchg
ffree
cmp
pinsrw
mov
mov
inc
cmc
dec
add
and
cmc
pop
sar
cltd
lods
xor
dec
add
shll
mov
add
add
mov
imul
sbb
pop
or
pop
or
push
adc
sarb
or
pop
and
dec
add
cli
int3
out
cmc
jns
std
inc
xor
pop
cmp
jmp
or
inc
or
lahf
jle
or
rorb
or
push
divb
add
pop
mov
push
stos
cmpsl
out
lods
dec
cmpsb
push
shl
mov
mov
adc
mov
test
fidivrl
push
icebp
sbb
aas
fmull
out
xorb
call
push
ds
mov
mov
loop
lret
push
es
mov
cmp
push
ds
fwait
push
out
xor
es
test
es
orl
push
icebp
out
jl
std
bound
cmpsl
in
scas
xor
mov
les
cmpsb
push
cs
sbb
es
push
cmp
jo
bound
data16
data16
mov
pop
pop
mov
loope
mov
add
dec
cmp
in
cmp
xor
push
test
mulb
jae
sbb
xor
jbe
mov
push
add
mov
lods
jg
inc
adc
into
jns
shlb
ret
jns
ljmp
out
mov
cli
xor
push
decl
inc
and
into
adc
mov
add
adc
dec
push
jecxz
adc
and
push
notb
call
cmp
dec
or
mov
or
add
xor
or
je
pop
and
mov
mov
mov
pop
cs
add
push
xor
cld
loopne
or
pop
adc
add
inc
cmc
enter
push
std
stos
push
lods
cltd
dec
jge
cld
call
inc
inc
pop
shr
lret
mov
rclb
enter
mov
add
cmpsb
mov
std
loopne
push
inc
cmc
lret
repz
dec
sub
call
push
add
lea
cmp
and
fldcw
inc
dec
add
jge
out
fldenv
es
push
or
shlb
add
lret
icebp
fisubs
call
inc
stc
es
icebp
adc
out
out
fadd
dec
cmc
cmpsb
pop
dec
cmp
dec
xor
jno
sbb
lods
sub
insb
loope
outsb
sub
cmp
inc
movsl
cmp
sti
mov
call
sub
loopne
jnp
xor
es
jp
cmpsb
dec
pop
and
lcall
aas
pop
mov
das
cmp
adc
test
shrl
sub
sub
push
cld
aam
cmp
or
jmp
hlt
notb
inc
jmp
divb
mov
rolb
roll
jmp
xchg
in
jmp
and
push
insb
mov
fistpl
mov
add
add
jmp
pop
repnz
test
ss
cmc
add
cli
push
add
and
mov
sti
je
sub
je
sub
in
dec
and
cli
movaps
rorl
mov
pandn
cmpl
push
sub
jo
out
enter
sti
jbe
mov
rolb
xchg
ret
sbb
add
loop
mov
movsl
jo
test
add
add
cld
jne
mov
hlt
mulb
push
dec
cmp
adc
cmc
les
scas
push
add
int
push
je
les
rorb
and
out
push
mov
gs
dec
add
ljmp
jae
mov
sti
mov
add
pop
fmuls
std
lret
inc
bound
dec
cltd
xchg
leave
dec
xchg
cmp
fdivrp
cmc
icebp
or
mov
xor
mov
mov
add
dec
push
shlb
mov
pop
daa
pause
xor
jnp
mov
dec
ss
add
es
ret
add
pop
movsb
pop
jge
out
mov
add
add
es
cmp
cmpsw
dec
mov
out
insl
dec
cwtl
in
div
es
mov
int3
in
out
jo
pop
aaa
cld
xor
out
pop
sub
fs
movsb
sar
ds
jecxz
and
iret
adc
pop
push
scas
adc
clc
and
add
stc
xchg
es
int
call
insl
ss
stos
idiv
dec
test
sahf
sbb
call
mov
xchg
inc
xor
jb
sub
test
fcoms
rorb
lock
icebp
jo
std
pop
cli
cmpsl
std
fiadds
xor
ss
xchg
xor
pop
arpl
cmp
push
push
rcll
push
sub
add
add
mov
les
jo
adc
movsb
xor
inc
mov
ljmp
lahf
shlb
in
insb
std
daa
pop
push
lds
sub
mov
mov
jmp
and
cli
lcall
add
imul
clc
pop
pop
add
mov
ja
add
push
push
test
add
add
movsl
dec
in
fnstsw
mov
add
pop
and
pop
cld
jnp
jle
cmc
pushf
inc
or
add
mov
push
push
sarb
add
leave
adc
std
fidivl
aad
es
inc
rorl
pop
inc
xchg
mov
js
aam
lcall
std
jl
or
or
pusha
adc
add
add
sar
orl
lret
cwtl
dec
ret
mov
cmp
sar
fistpl
push
orl
cmc
sbb
dec
push
sar
inc
popa
mov
out
cmpsb
adc
mov
dec
lods
ret
cli
or
in
arpl
xor
aas
pop
out
mov
leave
mov
roll
mov
cmp
add
add
es
stos
cs
inc
xor
or
es
inc
add
jg
or
out
push
and
clc
push
sbb
add
es
popa
cmpsl
ret
mov
testl
cmp
jo
and
push
ret
pop
test
xor
test
not
mov
mov
imul
pushf
mov
add
pop
mov
jg
lods
inc
add
mulb
subl
and
inc
mull
add
ja
repz
neg
imul
sbb
add
bound
test
mulb
or
jmp
in
rolb
cmp
sti
sbb
add
fldenv
xchg
movsl
imul
or
mov
pop
je
inc
lods
or
jne
arpl
sti
adc
dec
jmp
test
push
add
stos
shlb
hlt
xor
sahf
dec
adc
fidivs
pop
mov
je
jne
shll
pop
rorb
test
test
cltd
mov
add
sarb
cld
jne
sahf
push
lock
int
stos
addr16
cmp
rolb
js
cmc
aas
out
lcall
out
adc
adc
xor
ljmp
insb
xorl
cmc
incl
incb
cmp
imul
inc
mov
addl
pop
test
divb
mov
loop
stos
cs
adc
aad
mov
push
add
mov
pop
push
fistpll
pop
jae
inc
repz
pop
daa
daa
add
and
insb
pop
inc
xor
inc
mov
xor
cmc
es
in
push
negl
push
inc
mov
mov
hlt
es
dec
sub
push
cmp
inc
mov
call
ja
das
jbe
pop
cmp
mov
sarb
add
out
cld
ret
ret
pop
mov
xlat
add
push
inc
pushf
mov
cmc
mov
lock
lods
pop
jle
adc
push
movsl
add
mov
adc
jl
add
mov
cmc
mov
loope
mov
add
cmc
xor
cld
fsubl
sbb
jae
or
sub
mov
out
es
pop
adc
mov
out
call
ds
sbb
stos
pop
data16
sub
call
rcrb
inc
jmp
fldt
pop
lock
cld
cs
sbb
std
stc
es
cmp
bound
cld
add
rolb
jne
or
jne
call
std
add
mov
add
sub
cli
add
push
xor
lcall
lods
addl
inc
fs
ljmp
cli
push
loope
lea
sar
jmp
and
add
sarb
cld
ljmp
sub
adc
popa
lret
imul
jbe
daa
cmpb
jno
setbe
fcmovne
add
adc
std
add
add
add
add
clc
ret
sbb
andl
mov
cld
dec
dec
into
push
cmp
mov
call
sub
test
mov
sti
push
std
cmc
aas
sbb
lea
add
dec
inc
cmc
lds
push
xchg
and
inc
cmc
pop
mov
fs
dec
dec
mov
data16
jb
jae
add
add
mov
push
jo
pop
std
xchg
daa
mov
out
stc
ret
add
jle
sub
pop
fildl
aaa
add
inc
roll
sbb
sub
add
les
mov
ret
sub
adc
push
cmpsb
ret
add
sbb
insb
idivl
xor
sbb
ret
loop
mov
mov
out
inc
adc
enter
mov
idivl
mulb
es
mov
movsb
les
out
call
lret
jmp
mov
ret
lds
fwait
push
es
gs
adc
or
call
mov
mov
scas
cmc
and
sub
out
pop
sub
add
add
fs
shl
jmp
pop
sub
mov
push
ret
stc
sahf
push
dec
ficomps
jmp
nop
ror
stc
rolb
das
call
add
jbe
imul
add
adc
mov
jg
es
inc
mov
jno
hlt
stc
push
test
add
gs
aaa
andb
pop
es
inc
dec
and
adc
je
push
or
xlat
push
mov
add
sbb
call
and
inc
decl
sbb
adc
sarl
arpl
cmp
pop
je
adc
jbe
inc
cmc
das
mov
sub
push
jae
mov
dec
sar
dec
add
stos
cld
loopne
icebp
aas
cmc
mov
push
jae
daa
jmp
mov
test
mov
mov
mov
lods
and
cmp
push
sub
add
subb
paddsb
adc
cmp
dec
sub
or
ja
add
jo
pop
dec
inc
mov
jmp
std
add
or
lods
pop
jp
loop
mov
ljmp
mov
xchg
lods
mov
and
ret
std
mov
cltd
pushf
or
daa
jne
pop
adc
inc
rorl
leave
cli
jmp
or
adc
leave
and
add
mov
push
push
pop
fld
sbb
ret
es
iret
popf
sbb
add
add
adc
cmc
xor
mov
repnz
fdivrl
pop
out
adc
cmp
add
dec
aaa
mov
insl
data16
sahf
daa
jge
idivb
movsb
idivb
into
adc
jmp
rclb
push
mov
cmc
mov
ffree
mov
aad
adc
daa
test
notb
push
jb
movsl
in
in
add
add
mov
idivb
mov
pop
adc
icebp
mov
inc
xchg
jnp
testl
mov
add
xchg
pop
out
hlt
push
pop
incl
shrl
inc
int3
scas
mov
clc
pop
jmp
lods
leave
jmp
insb
sub
pushf
sub
jmp
or
cmpl
and
add
add
adc
cld
test
xchg
rcrb
add
test
cmp
add
jmp
push
lea
sub
incl
push
inc
sbb
cmp
sbb
add
cmp
jmp
and
mov
xchg
dec
std
inc
sub
adc
arpl
mov
js
dec
sti
ret
or
test
mov
sti
or
add
sbb
lds
push
stc
xchg
pop
pop
mov
sgdtl
mov
add
pand
fmull
fimull
add
xor
add
clc
inc
xor
je
cmp
cmc
psrlq
mov
aas
dec
adc
push
pop
out
test
jb
jp
testl
inc
mov
push
fsubl
mov
add
add
out
cmc
and
mov
lcall
out
cmc
fwait
mov
test
popf
cmpsl
add
loope
add
es
mov
es
lea
sub
jne
push
xlat
sbb
sti
insl
in
imul
testb
jecxz
cmc
stos
cmpsb
fsubr
nop
out
cmpsb
cs
stc
cmp
add
out
pushl
add
add
pop
adc
call
ljmp
cmpsb
aaa
mov
cltd
and
or
cmp
jecxz
cmpsb
ja
notb
xor
ss
xchg
cmp
and
fsub
ss
add
imulb
push
ret
divl
call
mulb
je
adc
adc
arpl
jb
movsl
std
sub
jge
add
add
aas
std
jne
aas
std
pop
or
daa
adc
icebp
cmpsl
mov
add
push
lds
fsubrl
pop
mov
mov
in
lea
dec
push
iret
dec
push
inc
push
jbe
sti
test
call
mov
shll
aaa
mov
es
roll
or
out
push
xor
jle
shll
cmp
imull
and
fwait
adc
dec
movsl
int3
add
in
or
sbb
jmp
clc
dec
xchg
negl
movsb
call
mov
movsl
mov
push
movsl
enter
push
add
loop
jmp
sbb
test
test
test
js
xlat
push
push
xorb
mov
xchg
aas
jmp
sub
mov
fs
addr16
sgdtl
fisttps
imul
dec
je
in
dec
adc
pop
cmp
es
jmp
jne
xlat
ds
ret
sbb
test
ret
add
out
add
add
add
fists
xor
dec
push
lahf
fcmovb
shrb
jmp
add
cld
mov
int
mov
sti
js
push
daa
mov
scas
in
out
fld
andb
add
pop
hlt
incl
out
xor
fwait
mul
ja
jae
shrb
add
imul
inc
pop
jge
stos
pop
out
jmp
xchg
push
jg
popa
and
jmp
aad
push
enter
mov
add
fwait
js
jne
adc
mulb
push
insb
mov
or
cs
and
aad
lods
orl
idiv
inc
ds
mov
or
aad
add
testb
call
inc
inc
mulb
aaa
add
pop
and
je
sahf
dec
and
jnp
decl
out
test
adcb
insb
mov
rcll
and
adc
cmpsb
mov
adc
add
dec
aad
adc
out
jno
clc
lods
ljmp
mov
xchg
mov
movsl
jecxz
or
add
add
test
and
add
mov
in
and
add
std
push
shr
call
inc
adc
mov
jns
aam
cmc
cmpxchg
or
aas
cmc
xchg
shlb
xchg
dec
std
ljmp
cmp
fisttpll
jae
push
in
push
repnz
cld
add
fimull
clc
addb
add
movsb
sgdtl
js
and
inc
std
mov
mov
add
cwtl
shlb
nop
adc
push
dec
inc
add
into
or
inc
int
mov
hlt
add
push
or
es
or
out
popa
push
push
ja
inc
lahf
mov
xor
or
fs
lods
or
jns,pn
sbb
out
push
lods
xor
add
arpl
xchg
push
ljmp
dec
and
and
jmp
imul
add
jbe
mov
ret
jg
xchg
mov
cs
iret
negl
aam
mov
scas
mov
in
sbb
hlt
es
sub
cmp
pushf
sbb
lods
xchg
or
or
and
xchg
je
push
sbb
roll
fs
cmp
sbb
fiadds
adc
and
adc
stc
jns
and
sbb
bound
push
or
xchg
imull
aaa
and
ds
cwtl
sbb
cs
std
ss
jo
pusha
mov
andl
xchg
addl
cmc
add
mov
add
insb
jns
push
pop
jns
fldenv
adc
je
mov
int
inc
fs
not
xor
dec
sahf
adc
mov
ret
or
hlt
pop
inc
sqrtps
iret
and
out
je
fmuls
je
xchg
andl
je
add
ljmp
add
sti
jne
jge
dec
outsb
out
cmc
cmp
aas
add
imull
incl
int
push
jb
lock
icebp
rcrl
testl
mov
pop
lea
cmpsb
mov
hlt
lgdtl
xor
push
sub
jmp
inc
add
testl
cmc
pcmpeqd
inc
mov
mov
or
test
jnp
mov
sub
jb
add
cmc
ds
xchg
jb
inc
rdpmc
pop
iret
repnz
popf
jb
sbb
mov
out
inc
pop
inc
mov
inc
rdpmc
ss
stos
jne
push
out
jne
sbb
inc
fbstp
push
iret
cli
stos
cmp
mov
out
cmc
pop
mov
add
add
add
mov
js
push
cltd
adc
fimuls
out
repz
xor
sub
cld
jecxz
jl
es
dec
bound
enter
dec
es
jp
add
dec
cmpsl
jnp
xor
mov
popf
out
jo
cmc
call
iret
in
jmp
dec
fcmovbe
call
divb
cld
dec
xor
jne
or
scas
orb
add
push
mov
jne
fs
xchg
sbb
add
jmp
sub
push
push
cmc
jl
nop
and
std
in
daa
push
sub
mov
je
in
call
jns
add
cmpsb
sbb
add
and
dec
mov
rcrl
popl
mov
push
jmp
lahf
ret
sbb
add
add
and
add
xchg
lea
add
mov
lcall
leave
adc
pop
xrelease
and
cmp
imul
lahf
loopne
or
push
lea
leave
cld
adcb
movsl
arpl
mov
ss
mov
jbe
fwait
cmp
mov
inc
inc
push
add
add
mov
outsb
sub
ljmp
xchg
add
cmc
cwtl
xchg
repnz
xchg
add
cmc
mov
mov
push
jp
stos
pushl
in
push
sbb
mov
test
jmp
mov
add
mov
fsubs
add
std
and
push
jp
pop
js
mov
jbe
add
add
repnz
sbb
pop
addb
adc
insl
push
adc
insb
xchg
lret
sub
mov
pop
scas
mov
sti
push
je
insl
sub
andb
adc
mov
movsb
fldt
adc
add
in
jp
jb
pop
xor
cmp
cmpsb
jb
inc
pop
into
sbb
daa
out
and
in
jl
add
add
clc
test
push
sbb
je
mov
mov
xor
xor
cli
adc
fincstp
mov
call
imul
cmpsb
xor
adc
loop
js
jb
sub
idivb
pop
ds
jmp
rorb
jg
fisubrs
jmp
lcall
js
add
add
mov
fs
call
push
and
das
jp
std
bound
add
cmp
mov
out
jmp
dec
push
pop
insb
sub
mov
cwtl
into
cmp
out
addr16
lea
incl
push
ss
pop
call
inc
call
or
xchg
sub
add
cmp
add
add
cld
mov
ret
mov
add
jge
add
mov
mov
mov
sbb
push
fistpll
mov
data16
jg
xor
sub
push
push
lea
testl
subl
incb
add
ja
fiaddl
rorl
cmc
and
sub
push
test
add
cmc
xchg
pop
cmp
mov
dec
roll
mov
mov
mov
add
into
out
out
mov
test
sub
mov
hlt
add
cmc
mov
cmc
jle
adc
xor
mov
out
mov
add
sbb
or
insb
mov
cli
mov
out
iret
loop
test
sub
xchg
adc
xchg
adc
add
outsb
mov
cmp
mov
js
mov
adc
or
adc
aaa
push
addr16
xor
call
sldt
add
shlb
jecxz
imul
out
jb
cmc
jge
add
arpl
mov
dec
in
pop
adc
mov
fwait
or
sbb
cmp
xlat
decb
shr
xchg
pushf
adc
sbb
int
std
std
lcall
jmp
jmp
daa
or
add
js
out
dec
adc
jecxz
push
test
sub
je
shlb
pop
es
or
cmpsb
mov
push
jecxz
adc
pop
and
shlb
adc
cmpsl
int
xchg
rcrl
dec
imul
jae
das
lcall
add
add
sti
jne
mov
hlt
inc
mov
inc
int3
cmpsb
mov
incl
cmc
xchg
inc
cs
es
sahf
or
mov
cmp
test
dec
test
aas
jae
sub
or
mov
dec
sti
mov
sbb
hlt
shrb
jae
sub
call
mov
aam
je
xchg
cmp
gs
call
outsb
in
lea
jnp
je
xorl
xchg
add
pop
rol
cmp
int
jg
mov
or
pop
inc
cmp
icebp
dec
push
jle
or
hlt
iret
cmp
icebp
adc
xchg
push
lds
xor
in
pop
mov
stos
es
movsl
jne
cmp
out
repz
xor
call
adc
das
out
cmc
xor
add
mov
hlt
ret
bnd
setge
daa
add
fdivl
inc
es
adc
jle
mov
es
and
out
mov
xchg
mov
adc
outsb
cmp
jno
mov
or
jmp
ret
mov
add
add
imul
inc
test
in
mov
std
push
es
std
cld
or
inc
jmp
jmp
pop
mov
std
out
or
int3
cmp
hlt
ss
cmp
mov
mov
dec
addl
std
cmp
inc
sub
xchg
or
sahf
movsb
mov
std
cmp
jecxz
or
mulb
add
jg
outsb
int
aad
into
or
insb
pop
or
push
popf
push
and
in
add
push
mov
sub
push
xlat
hlt
add
push
xchg
movsl
dec
add
push
inc
jae
shlb
mov
sbb
pop
adc
into
call
push
and
add
cmpsb
idiv
mov
push
mov
incl
add
add
push
xor
lea
push
arpl
or
sbb
pushl
in
andps
xor
or
fdivp
sbb
pop
mov
add
cmpb
pop
xor
adc
sar
cmp
dec
inc
push
call
xor
pop
cmp
or
jbe
xor
std
loope
xchg
or
xor
std
add
cmp
ret
xchg
std
mov
mov
mov
shrl
dec
sub
int
xor
std
sub
dec
stc
cs
pushl
sarl
xchg
repz
adc
pop
out
jnp
fistl
fbld
ret
bound
pop
xor
add
jbe
mov
jbe
adc
xor
sub
push
hlt
sbb
movsl
push
das
je
add
test
fimuls
sbb
out
or
fdivrl
push
addr16
test
bound
stc
add
es
rclb
call
cltd
ja
xchg
cmc
popf
ljmp
add
add
insb
cmp
std
mov
negb
add
sub
js
notb
shrb
add
idivb
fbstp
or
lds
or
leave
movsl
cmc
jne
sahf
add
insb
xor
sbb
ss
and
or
test
jnp
clc
sbb
out
in
add
add
clc
jmp
jbe
add
sbb
or
leave
hlt
pop
adc
add
push
mov
in
lods
lahf
aas
or
test
add
sbb
ljmp
add
fsubs
xchg
pop
mov
inc
or
in
dec
and
mov
or
divb
sti
je
es
adc
add
inc
add
cmp
add
sti
push
cld
popf
mov
dec
mov
xchg
std
in
sti
push
cmc
cmc
xchg
and
je
jmp
aam
js
mov
jle
lcall
cmp
cld
lds
stc
xor
std
jge
mov
inc
or
mov
in
movsb
xchg
movl
xor
xor
and
jl
sti
cmc
xchg
or
xor
mov
or
faddl
push
hlt
add
in
js
sti
jle
xchg
inc
xlat
jge
dec
daa
cmpsb
sarl
mov
fldcw
lods
test
and
push
pop
outsb
mov
js
jb
jbe
faddl
daa
out
repz
add
insl
insb
out
push
stc
cmp
push
mov
mov
jecxz
sbb
pop
mov
lds
dec
jl
mov
lds
insb
dec
call
pop
not
repnz
into
mov
es
loope
cmp
inc
mov
pop
pop
addr16
sarb
sarb
add
mov
mov
mov
jmp
pop
dec
cmpl
add
pop
dec
mov
jns
outsb
sub
jae
icebp
jmp
fcompl
psubsw
es
mov
add
mov
add
push
push
bound
int
test
jns
jne
testb
xor
push
jmp
pop
cmp
stc
add
inc
mov
inc
add
aaa
xor
sbb
sti
iret
test
adc
cmovs
std
lcall
sub
mov
aaa
mov
sub
inc
adc
test
xorl
das
lods
mov
decl
hlt
divl
test
sub
add
clc
bswap
inc
add
sbb
stos
jg
aaa
xchg
inc
push
or
aaa
jno
add
add
sarb
cld
sub
mov
mov
rolb
cmpb
sbb
or
ss
pop
incb
icebp
dec
arpl
xlat
inc
xchg
push
jge
test
cmc
cmpsb
js
jp
jmp
jno
mov
mov
aam
push
push
fidivrl
mov
mov
enter
cmp
test
jb
mov
movsb
je
or
sbb
mov
es
not
loop
cmc
es
enter
sub
jl
jg
mov
fs
sbb
mov
insb
pop
sarl
scas
shll
das
xchg
lcall
cli
insl
das
pop
das
sub
jo
push
in
jp
pop
mov
push
push
inc
out
mov
inc
mov
das
out
out
xor
sub
pop
lods
and
fiaddl
stos
xor
adc
outsb
cmp
inc
jmp
je
and
stos
loope
and
test
lds
jo
or
lds
pop
jp
gs
mov
data16
adcl
scas
jmp
aad
orl
sub
in
jge
daa
xor
add
icebp
scas
inc
fnsave
clc
jmp
int
or
stc
jg
inc
je,pt
loope
clc
loopne
stc
jno
pushf
jne
pusha
inc
cmc
addb
or
xchg
sub
sbb
jg
fsubl
cmp
add
add
aas
or
push
ret
or
or
add
int3
or
sar
add
daa
repz
add
add
mov
mov
mov
jo
fistps
add
lock
out
sbbb
call
sbb
add
cmc
aam
pop
mov
jle
inc
in
mov
inc
in
test
inc
adc
daa
into
es
add
jle,pn
in
mov
rolb
or
add
ss
inc
add
or
lds
jle
clc
mov
mov
or
out
test
loope
fildl
add
mov
or
add
add
sbb
call
jle
clc
xorb
add
cmc
es
call
in
fdivl
cmp
sub
jmp
stc
and
pop
rcr
ljmp
jmp
shll
es
test
scas
ljmp
jl
jle
addr16
es
ja
add
add
add
mov
add
push
es
out
outsl
pop
jg
fildll
sub
fimuls
fistpll
cmc
test
sub
bound
testb
jo
add
idivb
dec
add
mov
subl
js
or
inc
mov
jo
fldl
xlat
or
subl
add
add
es
xor
scas
aad
notb
cld
cmpsb
jne
or
ja
add
int
in
bound
xchg
add
icebp
push
cli
jl
sti
subl
es
faddl
mov
shll
add
add
dec
jne
or
fsubr
decl
or
add
ja
fwait
std
out
sar
cwtl
bound
test
add
xchg
in
mov
mov
add
add
xorl
pop
jmp
fdivrl
adc
or
out
lock
add
imul
test
push
or
or
std
lcall
adc
mov
mov
jl
jne
aaa
mov
jne
add
push
cmc
mov
cmc
or
add
repnz
add
or
scas
sub
jg
and
sub
mov
mov
sub
add
sbb
pop
cmc
and
mov
add
mov
cmp
add
testl
cmp
mov
mov
sar
jge
mov
xchg
and
lods
jns
enter
and
inc
jbe
incl
jb
scas
in
jbe
mov
pusha
nop
jecxz
and
stos
fwait
pop
mov
stos
imul
sti
out
mov
lods
mov
adc
push
je
es
insb
shrl
addl
dec
cli
in
inc
cli
push
and
adc
adc
daa
fs
inc
and
cmpsb
mov
dec
mov
pop
xlat
ret
stos
aas
and
es
stos
repnz
xchg
daa
out
popf
in
subb
cltd
pop
loop
data16
add
fistpll
daa
xor
inc
inc
push
neg
add
sub
ss
lock
add
lea
add
jp
push
jg
xchg
lret
imulb
add
in
xchg
cmpsl
stc
out
sbb
lcall
jae
int
add
add
pop
insb
mov
xchg
jne
add
cmp
dec
ja
xchg
rcl
mov
loope
jmp
mov
sti
call
mov
mov
clc
xlat
mov
test
jge
enter
jne
add
add
or
hlt
jno
aaa
ret
popa
decl
and
lock
jg
cmp
sahf
lds
dec
lret
xor
sub
sti
call
je
inc
mov
mov
cli
cmp
sbb
mov
push
fcompl
pop
jp
nop
and
testb
cmc
mov
sub
cli
and
cld
lret
inc
or
push
cmc
or
insb
push
jl
in
into
mov
std
insb
leave
call
cld
mov
xchg
insb
call
push
pop
jbe
test
or
leave
cmp
scas
adc
cmc
xchg
aaa
jl
loopne
dec
mov
mov
mov
leave
cmp
into
sbb
inc
daa
inc
mov
lods
addb
add
add
lods
add
pop
daa
mov
es
loopne
out
jno
jmp
add
push
mov
mov
pop
pop
sub
js
and
add
divb
inc
push
jb
cmp
add
popa
sbb
mov
std
xchg
es
mov
mov
pop
or
cmpsl
dec
add
cmc
jp
ret
int
addr16
idiv
call
jp
std
sub
stos
call
ljmp
xchg
fldcw
jle
push
insb
mov
test
add
and
jmp
pop
fisttpll
mov
enter
cld
ss
jb
test
adc
iret
xorb
call
add
or
add
push
testb
inc
adc
xchg
test
in
pop
call
test
push
jmp
popf
loopne
loope
sti
incl
inc
or
loopne
xor
mov
call
mov
mov
cmp
sub
add
dec
or
cmpsl
popf
call
cmp
sub
test
sub
add
lods
les
pop
mov
add
jmp
lods
les
xchg
pop
adc
mov
fucomi
dec
sub
mov
xlat
jo
addb
incb
mov
mov
les
add
add
std
or
repnz
cmc
jp
cmpsl
jl
push
xchg
dec
mov
std
add
sbb
mov
cmp
cmp
jl
cmp
mov
xchg
stos
js
xchg
pop
outsb
ret
adc
stc
add
inc
jle
adc
sub
and
mov
stc
ret
shlb
sbb
popa
roll
lods
push
iret
adc
hlt
mov
sub
add
add
push
add
sahf
das
and
clc
test
push
xor
mov
out
mov
repz
add
fistl
pop
test
mov
insb
imul
mov
daa
insb
jno
sub
jnp
pop
jl
pop
mov
repz
cwtl
cli
icebp
jae
fstpl
jle
hlt
mov
add
add
incl
aas
and
fsubrp
xor
orl
repnz
jb
jno
jmp
dec
cli
lcall
arpl
adc
mov
ficoml
sub
xchg
xchg
jb
inc
jmp
and
sbb
sub
adc
jne
loopne
add
mov
mov
imul
inc
or
popa
mov
add
adc
test
xchg
ret
sbb
cld
inc
xor
inc
int3
sahf
ds
push
imul
ljmp
add
push
lea
aaa
call
mov
ss
jo
push
mov
push
jmp
sti
jmp
push
test
add
add
add
mov
add
dec
mov
sti
call
ss
mov
adc
imul
cmc
test
or
jne
jmp
idivb
icebp
jl
or
mov
call
jns
xchg
inc
push
jmp
aad
lea
cld
lcall
adc
mov
add
sbb
sbb
jl
xor
add
lds
or
push
scas
lea
movsl
gs
dec
hlt
std
sub
shlb
sbb
outsl
add
push
mov
es
jp
fbld
cld
fstl
sti
lock
idiv
in
hlt
sti
call
xchg
cli
out
pop
or
js
mov
sbb
add
es
xlat
jb
mov
popf
clc
mov
in
jmp
es
xor
arpl
sub
lret
jmp
es
nop
cmc
pop
hlt
or
add
jne
call
cmp
lods
sbb
fwait
dec
xorl
into
out
cli
out
mov
out
icebp
mov
clc
inc
and
jae
bound
sbb
vmread
xchg
idiv
mov
sub
in
andl
adc
jge
in
cld
jb
adc
jb
mov
out
test
inc
enter
in
cli
out
in
clc
fnstcw
sub
mov
dec
cmpl
es
xchg
xor
call
push
lods
or
cwtl
ja
add
xor
add
push
adcl
call
add
outsl
sub
sahf
inc
call
jecxz
jg
int3
inc
nop
add
sub
add
cld
dec
mov
adc
int3
and
nop
movsb
sbb
psubq
or
or
fs
test
add
add
add
jecxz
push
adc
pop
push
xor
cmc
shrb
add
test
lds
jae
ljmp
fmull
inc
pop
mov
adc
int3
cmp
mov
stc
orb
std
pop
pop
fst
movsl
inc
int
xor
mov
cmp
mov
xor
std
jbe
add
mov
roll
mov
pop
jae
jae
pop
mov
std
jle
or
lock
dec
inc
cmc
repnz
std
loopne
sub
leave
jl
adc
push
push
inc
inc
mov
push
inc
mov
cmpsl
sar
jae
test
stos
sbb
jb
sub
cmpsb
xchg
adc
jb
test
out
out
adc
out
out
or
out
cmc
lahf
test
add
push
repnz
adc
dec
mov
mov
dec
mov
fmuls
push
sahf
pop
jb
xchg
xorl
sub
add
sti
mov
mov
jae
clc
sub
inc
add
jmp
sub
stos
push
jne
inc
push
cmpsb
js
icebp
sbb
xchg
add
add
jge
mov
test
push
push
imul
mov
lock
mulb
orl
add
or
fcomp
mov
bound
push
lahf
or
add
jb
fidivrs
cs
mov
sbb
aas
add
pop
test
cmpsb
shll
jg
push
push
jo
inc
push
push
movsw
stc
inc
setae
cmp
pop
es
push
fcomi
fcoms
pushf
and
ds
and
sti
mov
imul
add
mov
adcb
push
mov
adc
packuswb
pop
mov
add
or
and
adc
cwtl
in
push
or
sbbl
test
popf
push
in
hlt
jmp
pop
sbb
je
out
xchg
and
mov
push
nop
aas
cmc
lock
inc
lds
jae
push
mov
xor
decl
inc
out
stos
push
and
stos
mov
adc
mov
iret
mov
mov
clc
insb
shrb
inc
or
es
mov
outsl
mov
in
lea
cli
mov
in
jge
idivb
out
cmpl
ret
sbb
call
xlat
adc
icebp
stos
sbb
jae
mov
mov
adc
mov
mov
div
mov
addb
add
insb
sub
mov
fwait
test
add
lcall
out
or
or
incb
mov
inc
sbb
in
notb
mov
aad
push
aaa
repnz
push
xchg
inc
call
mull
mov
mulb
push
xor
test
icebp
add
jns
cmpsl
out
add
sub
mov
fprem1
sub
xor
imul
cmpsb
call
cmp
pop
or
loop
sub
daa
call
add
xor
push
and
pushf
cmc
inc
adc
sub
rcl
xchg
add
add
and
push
push
fs
insb
inc
bound
fnstcw
je
leave
imul
add
fsubr
mov
add
fmuls
mov
out
adc
fsubl
adc
in
mov
arpl
push
jmp
sti
decl
je
daa
jno
xor
rclb
jno
in
xchg
repz
add
orb
dec
out
cld
jp
lock
pop
mov
push
jo
shl
dec
fisttps
std
cmpsb
fs
mull
xorl
ja
jo
jl
inc
add
mov
fwait
out
cld
js
enter
pop
or
bnd
pop
dec
cltd
cmp
std
int
mov
int
mov
lret
repnz
or
das
cmp
insl
pop
bound
hlt
jmp
xchg
daa
jo
lcall
or
pop
rolb
daa
add
ficompl
les
xchg
out
daa
add
jmp
xchg
es
mov
movsl
lret
fdivl
in
arpl
stos
push
add
mov
daa
mov
add
pop
es
ss
mov
xchg
sbb
adc
jp
add
sub
cmp
shll
cmp
xor
inc
shrl
in
ja
clc
jmp
fldt
stos
jbe
adc
je
adc
neg
push
xchg
pop
or
sub
movsl
ret
cmc
add
insb
cmp
dec
sbb
aaa
adc
ss
lods
lods
dec
icebp
scas
sub
push
xor
idivl
outsl
lock
das
loop
jle,pn
out
add
cld
jae
jecxz
mov
jmp
mov
call
pushf
push
mov
test
pop
mov
mov
in
out
jb
in
jno
rcr
bound
les
jno
cmc
mov
add
mov
or
shlb
decl
push
xor
cli
xchg
out
sti
add
out
mov
je
jae
mov
outsl
lret
xor
addl
test
mov
add
inc
hlt
lods
cmpsb
inc
clc
lods
cmp
push
mov
mov
dec
lahf
cmpl
into
add
outsb
pop
stc
mov
add
mov
add
add
enter
loopne
jae
sbb
jae
testl
repnz
in
jp
ja
imul
or
imul
mov
or
cmpsl
mov
iret
jg
sub
pushl
xor
data16
cmc
xor
or
dec
and
cmc
iret
ja
jmp
xchg
add
xor
ljmp
add
add
es
mov
mov
cli
test
out
cmc
fbstp
push
aaa
cmc
ret
mov
aaa
push
add
cmp
mov
mov
cmp
cmc
mov
stos
xor
sbb
jne
mov
sti
stos
sti
repz
call
pop
or
xor
negl
notl
or
add
add
idivl
cmp
lods
jne
add
notb
clc
lods
jge
insl
outsb
adc
out
jns
and
loop
lods
mov
mov
fisubrs
inc
fisttps
bound
in
insl
loop
cmp
mull
clc
cmp
xor
divl
filds
rcr
sub
add
add
dec
push
ret
clc
cmpl
jle
sub
movsl
jmp
dec
jns
add
xchg
xchg
bound
xchg
in
cmp
and
add
call
je
cmc
xlat
decl
xchg
mov
out
jmp
push
std
decl
or
cltd
in
mov
loope
mov
xlat
sbb
hlt
out
or
or
jg
pop
loope
xlat
pop
sub
mov
testl
sbb
aaa
inc
nop
loopne
xchg
add
cmc
mov
in
jae
dec
and
repnz
cmp
sbb
cmp
adc
mov
sbb
ud2
aaa
fimull
add
push
in
mov
into
or
jnp
testl
cmp
jae
mov
enter
jne,pt
test
pop
jae
dec
cmp
adc
mov
sbb
mov
add
mov
addr16
cmc
iret
sbb
mov
jnp
fsubl
lods
pop
hlt
imul
je
cmp
adc
roll
add
add
jmp
fcmovnu
out
frstor
jg,pt
push
lock
or
mov
out
out
cmc
into
pop
int
fcompl
or
dec
or
mov
add
dec
dec
cmp
dec
cmp
add
sbb
and
insl
jge
jp
fisubrl
stc
pop
hlt
cmpsl
jle
les
mov
add
add
je
test
add
mov
add
push
pop
inc
push
sub
out
mov
mov
popf
andl
fnsetpm(287
iret
sbb
pop
push
test
data16
lret
mov
dec
mulb
lods
add
sub
jecxz
out
inc
jmp
testb
cmpb
leave
sub
add
add
fsts
lds
add
icebp
movsl
inc
jge
push
inc
add
jle
mov
out
inc
in
iret
mov
leave
into
add
xor
jbe
aas
jp
mov
aas
jb
sub
sti
jbe
ds
sbb
sti
jbe
bound
and
jbe
ds
imul
sti
jbe
ds
imul
cmc
je
add
add
mov
imul
add
cmpb
call
fwait
lods
or
xor
lods
mov
push
je
cmp
into
push
jmp
sbbb
sbb
and
dec
mov
rcrb
in
jbe
or
xor
add
inc
mov
cld
gs
ja
adc
sbb
jb
add
iret
add
sahf
mov
add
jb
fcoml
lea
adc
push
or
adc
test
scas
push
and
cli
sar
inc
shlb
daa
pop
iret
fstps
hlt
jbe
out
cmc
jne
lcall
pop
add
test
mov
add
adc
sub
jbe
call
sti
jge
mov
es
fsubl
out
negl
fidivrl
jne
ret
imulb
outsb
push
add
out
out
icebp
mov
out
fwait
push
daa
add
push
add
xlat
rorl
out
bound
frndint
jmp
push
pusha
pop
cmpl
fsubs
mov
mov
clc
lock
dec
shlb
mov
aaa
jbe
stc
push
sbb
lcall
roll
subb
aas
add
testb
adc
push
and
div
cld
pop
fldl
call
add
add
pop
and
inc
mov
lret
lcall
dec
push
lea
cmovs
and
cltd
lahf
and
mov
jo
hlt
and
add
push
mov
and
mov
and
xor
sti
jmp
and
mov
outsb
loopne
sub
mov
sbb
insb
push
dec
push
mov
adc
add
cltd
push
xor
jno
mov
and
jp
inc
call
sub
and
adc
or
cmc
mov
add
jne
inc
add
add
jge,pt
jmp
xor
inc
mov
add
xchg
repnz
add
fsubl
sbb
adc
rolb
or
repnz
and
push
add
call
pop
sub
rcrb
pusha
ret
add
call
cld
sub
xor
lods
es
add
pop
fs
das
in
int3
dec
call
and
je
xor
sub
pop
aaa
lea
insb
and
inc
jge
dec
adc
cltd
lcall
add
aad
cmp
aad
lds
cs
aad
add
jmp
inc
cmc
jbe
dec
sbb
cmp
aam
dec
adc
scas
cmp
pop
lea
or
jmp
aas
incb
jle
add
jbe
movsl
sar
dec
je
or
cmp
mov
mov
mov
fs
mov
arpl
outsb
sub
ret
or
icebp
mov
mov
cli
jbe
out
aaa
lahf
inc
cmpsb
jl
lcall
dec
dec
outsb
xor
call
pop
and
insb
adc
lcall
add
and
sub
mov
leave
sub
add
shlb
shrl
rorb
add
adc
jo
pop
ss
fildll
das
rclb
jo
pop
cs
pop
sub
orl
cmpsl
lcall
add
jge
lret
jnp
rclb
cld
decl
lds
sub
add
add
and
ret
bsr
mov
testb
sahf
aam
lods
imul
sub
add
jns
enter
xchg
sbb
std
xorl
leave
inc
cmc
rolb
mov
ja
xchg
mov
leave
inc
cmc
adc
push
ret
imull
push
adc
xor
jl
inc
push
inc
inc
sbb
call
lret
cmp
cmp
outsb
jge
ret
mov
add
add
cltd
push
xor
sub
pop
mov
mov
jecxz
jb
jg
shll
adc
out
add
push
jns
popf
xor
es
popf
test
std
fisubl
pusha
inc
in
loopne
mov
jo
icebp
call
adc
jae
adc
adc
insb
dec
jmp
mov
jmp
jmp
neg
call
xorl
sbb
test
push
ljmp
and
mov
insb
imul
cli
es
call
bound
aaa
call
push
and
call
mulb
cmp
popf
sbb
cld
out
pop
call
add
out
fcmovnbe
cld
push
and
adc
sar
scas
lock
sbb
dec
std
jno
es
sti
test
stc
adc
xchg
push
ss
shll
push
data16
mov
mulb
add
inc
std
dec
and
xor
addr16
or
sbb
sbbl
aaa
pop
mov
pop
call
add
sti
mov
daa
int3
add
in
fidivrs
add
jecxz
leave
add
add
adc
sti
xor
jno
int
test
dec
and
mov
clc
je
cmpsb
sti
jne
jns
mov
inc
xrelease
inc
lds
insb
fistpll
add
cmp
cmc
add
add
push
pop
mov
jmp
pop
test
cmc
mov
scas
jae
add
pop
mov
sbb
push
push
bswap
push
std
add
les
adc
xchg
lds
mov
clc
jbe
pop
xchg
jl
add
dec
shrb
xor
pushl
imul
outsb
xchg
pop
cmp
cli
xorl
out
outsb
movsb
mov
cli
pop
psubw
test
inc
add
sarl
pop
pop
fstpl
loope
inc
xchg
scas
jmp
insb
call
jo
outsb
cmp
out
aaa
into
out
clc
xchg
sub
xor
pop
jle
stos
in
sub
stc
lret
outsl
push
pop
sbb
mov
int
xchg
mov
stc
outsl
arpl
jl
ss
pop
daa
fadds
mov
jmp
xchg
mov
call
dec
cld
mov
negb
cld
cltd
sub
push
insb
sbb
dec
fs
dec
cs
lret
mulb
addb
xchg
imul
jae
adc
aaa
movb
add
and
xchg
jns
add
push
jae
jns
push
adc
lret
cld
sbb
imul
cld
cmpsb
dec
cmp
mov
xor
xchg
mov
xchg
pop
or
and
add
nop
out
or
leave
into
testb
add
push
pop
and
lcall
or
int3
jb
push
movsb
jno
mov
in
pop
sub
lea
pushf
clc
decl
xor
mov
lcall
push
mov
cld
decl
push
and
pop
daa
inc
shll
sti
adc
cmc
inc
aas
cld
jbe
hlt
or
push
add
cmc
xor
cmp
adc
xor
add
add
jne
pop
hlt
mov
adc
push
clc
inc
mov
dec
mov
idiv
lret
jb
add
xorb
outsl
sub
es
jb
leave
pinsrw
add
inc
cld
mov
enter
jae
cld
call
subb
cld
jb
dec
add
test
cmc
adc
add
add
leave
adc
xor
adc
push
xrelease
jp
adc
sbb
lret
inc
sub
int3
xor
mov
xor
daa
lcall
stos
out
cmc
ds
outsb
xor
cmpsl
add
in
jae
out
jbe
jp
adc
popf
mul
scas
fadds
fwait
ljmp
add
add
mov
popa
cld
ja
cmp
icebp
jno
pop
lock
inc
lret
rcl
xorb
lret
dec
rcrl
movsl
bound
jnp
cwtl
adc
lret
pop
call
insb
loop
insb
xor
dec
inc
xlat
pop
std
dec
je
or
popf
sub
dec
shlb
leave
mov
jb
cltd
push
push
test
add
idivb
pop
xchg
sub
mov
push
ss
addr16
cmp
mov
aas
add
xor
lret
pop
and
adc
or
mov
xchg
or
lods
fidivrs
add
fidivrs
add
fistpll
add
xchg
jge
add
add
test
and
push
add
sahf
ret
push
push
xor
ljmp
add
lock
add
push
add
cmpsl
lret
dec
and
adc
cmc
jb
push
dec
leave
dec
lcall
leave
dec
push
rcrb
aad
lret
movsl
xchg
cs
add
add
add
outsb
adcb
add
add
jne
inc
cmc
dec
fisubl
mov
mov
mov
shlb
rcll
mov
rolb
cmp
pop
mov
pop
mov
dec
loopne
mov
call
je
aas
fsubrl
pcmpgtb
pop
mov
jle
add
add
push
jb
stc
mov
in
push
jmp
lea
arpl
stc
stos
mov
cmc
es
stos
mov
in
je
fistpl
out
mov
sub
add
dec
push
pop
sub
add
scas
stos
xlat
ja
in
xchg
inc
cmp
call
es
dec
popf
push
addl
andl
jl
repz
stc
stos
jmp
add
iret
push
jp
add
divb
inc
test
fwait
pushf
call
cmp
test
add
mov
in
jb
add
divb
add
lods
into
jg
icebp
xchg
test
fidivs
add
mulb
and
inc
mov
imul
lahf
lds
or
pop
pushf
call
jno
clc
jmp
mulb
addl
adc
add
mov
inc
test
movsb
inc
iret
decl
jp
xlat
fucom
inc
pop
sub
test
daa
xor
adc
xor
in
sub
sub
mov
in
cmp
xchg
out
incl
or
add
int3
push
push
and
fsubl
add
call
adc
inc
insl
faddl
mov
fists
popf
daa
xchg
stc
pop
pop
outsb
or
pushf
adc
cmp
imul
int
add
cmp
jle
loopne
stos
jecxz
push
lea
pop
dec
dec
std
inc
inc
inc
or
jbe
jle
clc
out
into
add
outsb
xchg
js
adc
int
inc
add
cmp
fdiv
mov
fadd
dec
popa
in
aaa
int3
jns
rcll
jle
cld
jae
xor
or
cld
mov
daa
adc
mov
cmc
insl
fists
lods
out
xchg
sub
jp
das
sbbl
jle
mov
pop
jl
add
stos
lods
movsl
push
push
cmp
out
xor
or
jp
aam
cmpsl
mov
aaa
jnp
iret
hlt
inc
sbb
pop
inc
in
stc
pop
jl
stos
jns
push
jns
movsl
jmp
idivb
in
lds
add
out
shll
fs
rol
xor
dec
jnp
mov
add
add
ret
sub
jno
jl
ret
jb
sahf
jl
jmp
or
mov
add
into
into
data16
les
mov
mov
jne
lods
insb
enter
xchg
stc
dec
sub
push
xchg
lock
call
jl
dec
outsb
push
std
fsubr
enter
mov
add
add
jae
je
clc
add
cmp
lea
and
imul
xchg
add
inc
clc
dec
fcoml
roll
and
aas
inc
or
data16
jmp
sti
dec
jnp
pop
and
pop
pop
xchg
iret
fbld
push
xlat
jmp
inc
dec
daa
mov
repnz
sti
mov
jne
add
add
idivl
add
pop
and
loopne
std
jmp
cld
push
addr16
push
cmc
pop
jbe
dec
ss
clc
js
jne
dec
les
mov
or
sub
mov
xorl
fildl
outsb
lcall
call
addr16
in
les
xor
add
dec
call
aas
cld
push
xchg
sbb
testb
push
lds
add
lds
jbe
adc
pop
add
movsb
push
push
or
push
les
adc
data16
out
or
inc
sub
jmp
sarl
sub
inc
add
jmp
add
jno
je
jns
jo
mov
out
ret
jo
data16
xor
ss
push
outsl
sbb
mov
add
mov
aam
fisttps
sbb
sbb
mov
cmp
jmp
add
mov
iret
push
std
cld
mov
mov
cmpsb
mov
add
add
or
lahf
sbb
inc
xor
cmc
popf
cmp
or
test
loop
push
cs
roll
add
sub
cld
into
jo
cld
cmp
dec
mov
adc
icebp
pop
pop
jb
pop
shll
xor
je
fnstcw
and
or
inc
jo
hlt
jnp
fsubs
dec
js
pop
sti
je
adc
rcrl
xchg
or
andl
je
mov
movl
push
je
pushf
push
je
pop
repz
or
xor
jo
hlt
sub
push
lea
pop
ljmp
pop
adc
clc
pop
cmp
lret
mov
adc
cli
cmp
pop
dec
sar
or
mov
cld
mov
fldl
jg
insl
pop
ljmp
jb
paddw
sub
adc
sub
int
add
xchg
jnp
std
dec
aas
or
jns
fldenv
out
mov
inc
add
sbb
andl
cmp
sbb
jl
sbb
js
sbb
add
int
inc
sbb
push
mov
pop
inc
sbb
shl
xor
jl
pop
and
es
sbb
out
mov
jp
jb,pn
jmp
imul
jb
ret
das
lock
insb
inc
sbb
mov
ret
int3
dec
out
out
jg
daa
out
pop
add
push
mov
add
add
out
mov
out
xor
mov
jo
cmc
pop
ljmp
out
adc
fstl
and
daa
add
jecxz
pop
sbb
mov
lods
gs
leave
scas
les
adc
cld
xlat
cs
mov
int
push
std
aam
pop
inc
jmp
mov
movsl
mov
add
call
pop
push
mov
es
pushf
pop
mulb
std
negl
out
xchg
mov
into
dec
add
jnp
es
call
insb
xor
pusha
cltd
in
gs
scas
les
mov
add
call
add
out
test
mov
push
adc
enter
fs
add
arpl
mov
and
fmull
mov
dec
cmp
fadd
pop
push
ret
test
xchg
fistpll
jae
int3
push
call
mov
mov
sub
in
push
jmp
and
mov
sti
ja
fcoml
jae
xchg
arpl
sub
stc
daa
mov
inc
sub
addr16
push
rclb
stos
in
pop
cmp
mov
pop
int3
cs
inc
mov
sub
add
cli
jbe
jbe
pop
push
mov
sub
jmp
int
mov
jg
loope
jne
fnstcw
push
sub
adc
insb
mov
sbbb
stos
int
and
in
call
push
dec
call
push
xor
push
pop
adc
dec
lds
cmp
and
test
lret
in
imul
pop
std
push
mov
out
gs
fcoml
in
call
popa
add
sub
mov
push
pop
dec
rcll
xor
loop
stos
and
jbe
mov
add
jno
cmp
in
lcall
push
sbb
inc
jecxz
outsb
insb
jmp
push
loop
out
jl
mov
clc
jb
mov
ret
punpcklbw
lods
push
inc
lahf
lods
push
cmp
mov
mov
adcl
test
adc
idivb
mov
jge
or
fnsave
or
pop
daa
adc
mulb
jne
xlat
sbb
daa
addl
mov
push
and
pushf
testl
sahf
ss
push
add
std
add
mov
icebp
ljmp
inc
or
add
adc
jno
push
push
callw
sti
pop
aad
hlt
incl
add
add
lods
cmc
decb
and
incb
imul
daa
and
fdivs
cli
dec
insl
or
mov
and
inc
fsubs
sbb
cmp
push
and
js
mov
je
shrl
add
mov
cmp
aaa
mov
mov
loope
mov
add
add
aad
mov
dec
aad
xlat
fidivrs
xlat
lcall
sbbb
xor
outsl
mov
dec
dec
add
ss
jl
loopne
sub
test
mov
add
sbb
mov
cmp
pop
sgdtl
add
xchg
inc
in
mov
and
jb
out
jg
cld
jbe
or
mov
add
add
es
jge
sbb
lea
es
adc
loopne,pn
repnz
add
out
imul
cli
jmp
dec
into
fbstp
sarl
loop
mov
sbb
add
mov
out
lds
loopne
or
push
sbb
insb
cmp
mov
sub
ja
rcrb
jne
repz
and
je
or
daa
add
push
call
jge
jb
ja
cld
add
inc
in
pop
sbb
mov
adc
mov
cmp
jecxz
xor
aaa
add
push
adcl
repnz
outsb
dec
and
jecxz
ja
cmpsl
mov
sahf
and
insb
ss
call
in
and
rorl
jno
jmp
mov
in
ja
arpl
std
lahf
xor
data16
sti
adc
dec
test
mov
das
ror
xchg
cmpps
inc
add
push
mov
test
pop
push
add
fsubr
or
add
add
push
or
push
test
jg
cmp
or
xchg
pop
or
gs
jmp
mov
fcompl
add
call
shr
and
sti
incl
cld
adcl
cmc
and
push
out
xchg
mov
movl
jp
orb
push
adc
or
test
pop
cmc
xor
mov
inc
cmp
cld
dec
aaa
inc
lock
jle
xchg
inc
inc
push
jle
aam
xor
mov
push
in
sbb
dec
rorl
push
inc
inc
in
fsubrp
xchg
xor
xor
add
sub
testl
jbe
add
es
push
stc
mov
jno
mov
dec
xchg
ret
jno
jbe
out
jbe
fwait
hlt
jno
add
es
scas
std
xchg
es
cmc
mov
out
cmc
push
or
pop
fldt
lret
out
cmpsb
jo
iret
mov
adc
inc
cmc
scas
adc
stc
cmp
fisubl
mov
into
loop
add
add
add
shr
call
mulb
push
data16
ljmp
stos
addb
test
lock
mov
popa
in
enter
sbb
inc
popa
stc
es
cmp
cmpsl
pop
ds
xchg
aam
call
cmp
pusha
mov
push
into
lds
mov
add
pop
dec
mov
call
cli
and
divl
scas
gs
mov
pop
andb
jb
aaa
add
fidivl
inc
in
push
mov
dec
dec
lcall
pusha
sar
test
and
popa
lds
add
pop
stos
jl
pop
sub
rolb
push
lcall
inc
in
xlat
pop
or
pop
loopne
lcall
decl
push
dec
iret
xchg
sub
xor
fisttpl
rolb
fidivl
je
cmc
inc
les
fst
sub
or
int
add
dec
cmp
xor
fcompl
jae
mov
add
mov
jl
cmc
mov
add
sbb
add
add
xor
sbb
xlat
cld
outsb
adc
mov
mov
inc
inc
jo
jnp
mov
inc
inc
je
and
lds
inc
dec
test
cmc
dec
inc
in
out
jnp
xchg
xor
add
xchg
inc
rcrl
sbb
repnz
out
aaa
mov
push
adc
stos
jno
lds
adc
rcrl
ret
push
push
aas
iret
inc
lods
dec
ljmp
dec
rcl
pop
addr16
call
out
sub
push
lock
rclb
push
stos
or
inc
cmc
dec
mov
dec
or
jb
or
adc
lahf
es
gs
mov
lahf
xor
jae
xor
mov
loope
and
lock
dec
lea
leave
or
mov
ds
gs
decl
test
stos
cld
jb
stos
out
popf
stos
cld
sarl
jmp
ss
mov
sahf
bnd
add
adc
out
cld
push
inc
adc
push
mov
push
push
std
faddl
xor
std
push
add
push
push
pop
add
in
pusha
push
jmp
stc
xchg
mov
pop
and
cld
hlt
jmp
clc
push
mov
or
inc
mov
lret
mov
fmuls
or
imul
add
add
sti
lcall
into
sti
jne
aas
or
mov
sti
adc
movsl
ljmp
dec
and
aas
add
in
arpl
inc
out
push
shrb
lret
out
push
sbb
out
hlt
pop
fs
mov
adc
adc
lods
inc
add
xor
mov
roll
in
sub
insb
cmc
xor
jae
inc
ds
push
std
mov
push
sub
cmp
add
cmc
in
enter
adc
in
mov
and
in
fildl
jle
mov
movsl
pop
fdivp
jnp
push
pop
sub
sbb
jge
mov
mov
cmp
inc
cmc
mov
imul
in
ds
jmp
cmpsl
icebp
mov
xor
pop
add
jb
out
hlt
and
cmp
outsb
out
sahf
adc
add
jb
dec
in
add
cmp
jbe
out
and
adc
lods
arpl
add
je
add
mov
arpl
jmp
shlb
pop
add
cmpsl
cld
jmp
je
call
fdivrl
subl
add
add
mov
mov
push
es
sti
ss
call
leave
lods
jae
into
cmpsl
std
xchg
cmpsb
cld
jmp
xor
aaa
loop
or
dec
das
mov
shr
dec
pop
add
push
jbe
or
sbb
mov
cmpsb
sbb
adc
movsb
cld
push
dec
ljmp
sbb
or
add
add
jl
decl
inc
and
lods
hlt
call
cmp
adc
jns
mov
mov
cmp
jmp
push
inc
or
jno
dec
decl
call
mov
aas
add
or
push
xchg
sbb
inc
les
cmp
dec
dec
movmskps
add
pushf
cmpsb
inc
and
pop
call
mov
and
push
dec
dec
call
mov
sti
jmp
adc
outsb
jmp
in
cmc
cmp
adc
movb
mov
imul
negl
mov
xchg
out
je
xlat
js
incb
jbe
sub
adc
ljmp
add
adc
cmc
pushf
test
cmp
mov
add
add
push
call
stos
mov
add
jns
jl
mov
iret
jg
sub
incl
daa
imul
movsb
out
pusha
movsb
lcall
out
rol
dec
iret
ret
adc
cmp
dec
fsts
shr
stos
movb
es
shr
into
mov
scas
bound
add
add
inc
lods
inc
stc
es
in
insb
jmp
dec
pop
insl
sub
lret
rol
mov
repz
lods
mov
push
std
mov
out
jl
add
call
inc
mov
ljmp
inc
lds
aam
and
scas
or
mov
or
add
add
test
mulb
push
cltd
out
pop
movsl
dec
cmp
sub
call
movsl
dec
sub
roll
call
je
and
movsb
jb
ret
push
and
scas
out
jmp
mov
out
jmp
repnz
push
cmp
test
and
aam
js
test
fstl
dec
incl
add
add
and
call
out
and
ljmp
rorb
and
pop
mov
jge
mov
dec
adc
fmuls
push
xor
and
sti
je
push
call
xchg
stc
and
and
je
dec
incl
and
or
jns
les
pop
and
jl
cmp
mov
add
cmc
loopne
std
inc
icebp
int
or
addb
cmp
fucomp
int
jle
and
jbe
pusha
add
mov
lret
jns
in
inc
insb
cmc
push
dec
pop
jl
fs
mov
cld
jo
sub
xor
cld
adc
and
adc
adc
into
js
roll
cmc
data16
ljmp
lods
scas
dec
add
es
pop
outsl
push
and
fldl
or
nop
call
cmc
stos
es
setnp
mov
and
dec
aaa
cltd
stos
enter
push
jl
and
mov
adc
jl
mov
xor
mov
stos
andl
scas
fldt
aad
ja
push
pop
add
call
dec
jmp
imul
call
daa
sahf
push
add
mov
out
mov
push
cs
add
icebp
mov
add
mov
pushaw
cmp
jecxz
inc
adc
jl
mov
aas
dec
jae
mov
cmpsb
test
lahf
ds
cwtl
call
add
ss
push
mul
xor
pop
ret
sub
sbb
insl
push
adc
push
mov
cmc
lahf
js
pop
stos
jp
add
test
stc
adc
cmpsb
mull
sub
fwait
adc
inc
jmp
push
mov
sub
inc
lock
pop
jno
mov
push
ret
pop
xchg
pop
jmp
jae
pop
cmpsl
mov
add
cwtl
cmp
fbld
lcall
cmpsl
mov
add
and
ret
out
bound
lahf
in
add
out
add
inc
fsubl
add
push
jmp
add
sti
push
cmc
mov
or
cmp
cmc
cmp
jns
inc
add
dec
add
mov
add
mov
ret
pop
cmc
sarb
and
ja
in
mov
clc
xor
lock
add
mov
std
enter
daa
popl
mov
iret
jae
adc
cmc
sbb
mov
test
mov
jb
je
daa
in
add
xor
adc
std
repnz
add
pusha
xchg
adc
scas
movsb
sub
mov
test
cmp
pop
stc
cli
out
jl
test
leave
fstl
dec
xor
mov
add
shl
xor
inc
lock
ss
mov
mov
out
out
xor
jnp
mov
out
jl
cld
mov
xor
out
insb
mov
ljmp
lods
movsl
adc
leave
out
fadds
idiv
mov
cmp
sub
cmpsl
mov
mov
mov
pop
add
add
mov
dec
fs
dec
outsb
xor
lds
cmc
les
cltd
adc
xchg
fs
pop
lcall
push
add
add
stos
sahf
cld
hlt
add
inc
jmp
sub
subl
sub
out
adc
sub
mov
inc
push
gs
lds
mov
leave
push
push
add
xor
out
test
add
xor
adc
mov
push
dec
push
push
mov
jne
jno
cltd
mov
inc
pushf
movsl
hlt
jp
stc
xchg
cs
inc
cmpsl
popa
sti
mov
out
je
pop
inc
cld
pushf
popa
jno
mov
adc
xlat
fldenv
cmp
sub
adc
addr16
xchg
and
ret
mov
pop
push
push
cmp
adc
lahf
inc
add
popl
add
sbb
jmp
cmc
out
jne
add
mov
std
mov
sbb
movl
int3
sub
mov
jns
and
pusha
cld
cmc
addr16
adc
inc
add
dec
and
out
dec
inc
cmc
mov
inc
add
dec
adc
les
sub
iret
jo
push
add
dec
mov
push
repnz
es
push
movsl
lret
push
mov
add
add
stc
pop
lods
dec
prefetch
ja
iret
sbb
loopne
iret
in
sbb
push
pop
and
loop
ja
fwait
mov
js
das
fs
xchg
cmc
push
lds
sub
jmp
icebp
mov
sti
jmp
out
mov
adc
out
mov
aas
dec
mull
cmp
add
inc
adc
jns
add
add
outsl
fadds
xchg
adc
cmpsl
mov
cmc
push
scas
inc
cmc
cmp
pop
shr
repz
rclb
pop
mov
adc
mov
xor
lcall
mov
cmpsb
ret
in
lods
xor
sbb
lcall
stc
mul
enter
push
daa
cmp
sahf
scas
inc
cmc
mov
adc
sub
sbb
add
add
sub
cmp
adc
and
push
fidivrl
decl
xchg
mov
xchg
jns
sti
adc
xchg
pop
hlt
cmp
xchg
add
and
push
ret
test
loop
addr16
inc
add
shrb
push
inc
add
push
mov
xlat
aaa
scas
popl
int3
sub
fwait
scas
xchg
pushf
sub
mov
sti
test
push
test
dec
decl
dec
popf
mov
cld
jmp
imul
mov
jg
dec
mov
lahf
cmp
dec
aaa
add
mov
mov
xchg
pop
push
and
sbb
add
addb
cmc
adcl
pop
push
push
repnz
or
add
inc
cmc
add
jae
lds
loopne
jb
adc
xor
cld
mov
inc
mov
sub
mov
jb
or
mov
push
or
sbb
pop
cmc
sbb
ret
enter
xorl
ds
stos
es
hlt
notb
stos
inc
filds
mov
mov
add
lds
out
xchg
out
stc
xchg
push
or
es
pop
jne
daa
add
cmp
inc
xchg
ror
add
out
aaa
aaa
ret
addr16
es
into
cmpsb
xorb
out
dec
mov
jge
mov
xchg
inc
cmc
mov
pop
push
and
daa
mov
mull
out
cmpsl
mov
shll
cmpsl
popa
xchg
cld
push
add
add
aam
cmc
jae
adc
pop
daa
add
jb
jae
cmpsb
xchg
jmp
sub
es
jb
adc
add
pushf
lahf
adcb
add
stc
jle
jle
xchg
subl
mov
cld
xchg
mov
cld
sbb
mov
cld
outsb
es
jb
jnp
pop
ror
push
inc
jmp
xor
addb
cmp
and
test
and
fstps
cli
jmp
mul
sub
pop
mov
add
inc
jmp
lods
xlat
js
movsb
xorl
adc
add
mov
les
addl
incl
add
add
mov
mov
sar
push
hlt
je
pushf
rcll
add
out
inc
popa
sub
lcall
sti
lea
push
push
cmc
clc
push
sbb
rolb
xor
in
ret
mov
popa
inc
mov
mov
cmp
inc
cmc
jg
lds
jg
pop
adc
hlt
sbb
add
add
mov
inc
mov
xor
mov
add
roll
hlt
or
jae
dec
push
push
xorb
xchg
adc
add
dec
mov
mov
push
mov
sbb
mov
daa
jmp
mov
mov
mov
mov
xchg
sub
xchg
sub
add
xchg
icebp
int3
es
sub
clc
nop
mov
mov
insb
ret
xchg
and
inc
std
cmc
fnsave
std
sti
hlt
push
pop
nop
int
leave
ss
add
adc
inc
shll
push
cli
xor
sbb
sub
jl
jno
insl
and
shll
jg
sbb
xor
jle
daa
cmp
jae
jg
daa
cmp
add
add
mul
and
pop
xchg
xor
cmc
push
jb
and
inc
inc
imul
movsb
movsl
mov
jne
cmpsl
push
cmc
jle
aas
push
and
mov
orb
pop
out
jmp
inc
std
cld
mov
stc
popf
div
lea
dec
jo
xchg
cmp
add
testl
add
cmpsb
inc
mov
cli
jbe
mov
add
lret
sti
inc
enter
xlat
call
aaa
inc
dec
push
mov
pop
or
or
pop
mov
call
xor
repnz
pop
in
add
mov
test
je
fs
pusha
out
rcr
in
ljmp
ret
add
adcb
add
jae
inc
int3
add
loopne
jmp
add
inc
cmc
loopne
mov
andb
aas
add
cmc
push
inc
add
inc
cmc
mov
arpl
rolb
adc
fs
mov
arpl
mov
inc
add
inc
cmc
loopne
mov
jg
inc
add
add
xchg
dec
inc
add
inc
cmc
mov
arpl
or
mov
xchg
push
cmovo
mov
arpl
aas
add
xchg
es
inc
cmc
sahf
adc
jmp
daa
add
xor
jbe
xor
jmp
cmpsl
add
cmp
mov
mov
outsb
xor
add
lgs
dec
adc
out
push
xor
add
inc
cmc
push
lgs
dec
repz
jmp
daa
add
out
inc
cmc
lds
push
stos
call
daa
add
pop
add
daa
lahf
push
in
decl
aad
jmp
icebp
lds
cmp
lahf
shr
out
dec
imul
adc
stc
lds
std
add
decl
xlat
sub
test
mov
out
mov
rolb
xlat
xlat
adc
mov
lahf
add
popa
rolb
xchg
stos
adc
mov
out
mov
rolb
push
push
pop
add
jmp
jg
mov
int3
or
adc
add
add
lahf
inc
dec
jecxz
mov
das
clc
mov
mov
mov
pusha
lret
loop
mov
outsl
push
mov
pop
or
orb
inc
add
mov
pop
or
mov
lods
sbb
mov
or
adc
lret
loop
mov
scas
ja
inc
or
fstl
sbb
lahf
loopne
test
add
mov
andb
aas
add
cmc
pop
inc
add
adc
or
mov
push
dec
adc
fdiv
mov
andb
mov
shlb
popf
mov
mov
lods
dec
mov
test
inc
cmc
insb
ja
jg
std
dec
mov
add
mov
dec
mov
sbb
sub
lea
js
cmc
js
sbb
pop
inc
cmc
icebp
mov
lods
in
mov
inc
cmp
iret
sub
jo
add
outsb
inc
cmc
lds
xor
mov
das
mov
mov
in
mov
push
lahf
inc
cmc
mov
sub
in
mov
add
add
out
mov
jle
mov
xor
and
sbb
clc
inc
cmc
movsl
mov
and
push
adc
das
adc
mov
xor
iret
bound
icebp
jle
pushf
mulb
xor
outsb
or
imul
cltd
fdivr
xor
mov
call
pusha
lahf
xor
pop
out
lea
add
add
imul
push
xor
cmc
test
es
test
subb
mov
push
into
mov
call
orl
out
sbb
mov
loope
lds
mov
das
add
or
cmp
sbb
loopne
push
imul
stos
sahf
inc
in
add
add
sub
mov
mov
mov
mov
pop
mov
sti
mov
mov
in
mov
ret
test
sti
call
xor
add
lea
mov
sti
call
iret
sub
add
cmp
call
cmp
cmc
mov
push
mov
jg
add
add
add
nop
sub
jno
push
xor
adc
cld
loop
add
call
stc
es
pop
rcrb
ret
push
mov
popl
push
inc
jecxz
pop
lods
mov
adc
add
outsb
inc
js
jp
sbb
clc
popl
mov
pop
add
orl
mov
test
add
int
div
hlt
xor
add
add
fcmovnb
pop
cmp
sub
daa
out
into
mov
mov
ja
xchg
xorl
in
sbb
daa
add
pop
adc
jmp
add
mov
mov
inc
push
sbb
fstpl
add
adc
jle
ljmp
es
cmp
in
mov
imul
movsl
out
out
sarb
xor
inc
sbb
cmpsl
add
adc
in
cld
popf
out
ret
push
icebp
mulb
push
fisubrl
push
cmp
push
push
int
cld
aam
xor
jmp
mov
xchg
bound
das
push
into
ljmp
in
aas
mov
mov
xor
insb
mov
cld
sahf
subl
rcl
orl
pusha
sub
test
xchg
cmpsl
dec
movsb
xorl
sbb
mov
std
aam
adcl
add
inc
add
jmp
jmp
jp
call
fisubrs
add
xchg
scas
mov
fcmovu
mov
pop
sub
cmp
adc
mov
hlt
push
mov
rolb
add
add
pop
sub
shlb
sub
dec
pop
es
aaa
aad
outsl
daa
pop
jle
xor
hlt
jne
mov
inc
push
lods
test
mov
stos
mov
scas
scas
adc
lret
inc
shrl
es
push
cmc
push
xor
mov
lds
ret
cmpsb
mov
add
lock
imul
mov
lds
fbstp
pop
fwait
rcrl
jp
mov
push
lock
hlt
fldl
je
adc
xor
mov
addr16
jmp
fwait
loop
push
jne
shrl
mov
jbe
in
push
fisubs
xor
xchg
das
test
iret
mov
mov
and
pushf
daa
sub
cmp
add
add
icebp
pop
in
test
adc
int
push
xorb
pop
jl
addr16
out
fdivs
lret
lcall
outsb
add
out
movsl
scas
xchg
stos
jnp
ljmp
movsl
mov
sbb
es
jg
sahf
push
dec
andb
cmc
adc
jp
scas
sbb
sub
cmp
repz
add
jmp
jo
data16
jne
repz
or
repz
push
jge
dec
inc
rcrl
shl
mov
cmp
cmc
aas
jmp
loope
incl
stos
cmp
pop
fldenv
mulb
sarb
out
ret
xchg
cmp
cmp
add
add
xor
or
test
cmp
in
cmp
in
in
jg
cmp
movsl
push
add
sti
push
sti
aaa
or
and
sti
adc
shrl
psubusw
hlt
call
gs
sti
sar
pushl
mov
cltd
xlat
sar
test
ds
jno
sti
adc
sar
je
idiv
jno
xchg
fistpl
jne
rcl
jmp
fadds
subl
arpl
divb
mov
add
lea
add
sbb
mov
or
sbb
je
cmc
jmp
mov
outsb
mov
stos
cld
js
fidivl
xor
jb
add
add
cld
ljmp
mov
ja
jmp
sbb
jo
xor
cli
cli
jg
push
mov
sti
ficompl
cld
fiaddl
jae
cmp
cmpsb
cld
ret
std
mov
filds
mov
divb
xlat
imul
mov
inc
call
add
add
jne
pop
mov
dec
sbbl
pop
jle
sub
sub
inc
shll
stos
flds
in
or
in
bound
mov
adc
adc
add
jl
daa
jb
std
stos
movsb
clc
pop
adc
inc
cli
fidivs
jmp
mov
jb
xor
lods
adc
cmp
mov
adc
or
cmp
fs
add
push
aas
jmp
lds
add
out
cmc
jge
jb
cs
out
inc
jmp
mulb
push
lods
mov
push
pop
je
call
out
sub
call
mulb
add
mulb
push
test
lea
add
add
add
adc
in
add
mov
mov
dec
shlb
push
jno
es
jo
mov
push
and
pop
push
pop
push
in
cltd
sub
lea
fs
decl
lcall
je
std
into
jne
or
rorb
iret
call
mov
sub
add
or
or
imul
pushl
int3
aam
push
in
xchg
hlt
out
add
cli
and
daa
add
cmc
lea
pop
mov
cmp
xor
or
lods
xor
push
out
xor
adc
or
jl
xor
jbe
dec
jae
pop
add
popf
push
or
inc
imul
cld
push
clc
add
sub
mov
das
or
cmp
and
pushf
or
xchg
dec
je
nop
scas
mov
fwait
les
jge
popa
lea
pop
mov
push
cld
jnp
aas
ret
dec
mov
cmp
mov
cmc
sbb
lret
or
inc
mov
bound
add
add
stos
adc
loopne
bound
jno
and
mov
cmpsl
insl
popa
mov
jl
pop
cmpsl
mov
jbe
scas
fistpll
push
xor
adc
dec
xchg
xorb
jno
sbb
adc
add
out
js
in
call
xchg
jp
mov
mov
and
stc
es
or
jmp
lock
scas
push
out
sbb
ss
adc
sti
ss
adcl
neg
pop
adc
stc
ret
icebp
add
dec
jns
jb
call
cld
aam
fsts
cld
ds
mov
cmp
movsl
xchg
jmp
jbe
or
add
push
add
add
sub
ret
pusha
dec
call
mov
cli
push
clc
pop
push
jo
out
roll
jmp
es
sub
std
mov
dec
push
fs
ljmp
testl
jl
mov
shll
ret
sti
adcl
inc
cld
das
cld
sbbl
push
sub
or
xchg
ret
jno
sbb
cld
jl
jno
in
cmp
jmp
jno
cmc
add
out
push
mov
cmp
js
pop
outsl
dec
inc
mov
add
push
sub
jbe
add
and
add
push
ret
fsubl
dec
mov
mov
mov
add
cmc
mov
cmp
add
jno
mov
movsl
rep
push
add
or
adc
sbb
repz
cwtl
icebp
gs
movsb
subl
fwait
cmp
sub
movsb
nop
mov
fdivs
addr16
sbb
dec
out
fdivrs
pushl
mov
jl
or
cli
icebp
sub
cmp
fldl2e
mov
in
scas
call
xor
mov
in
sub
xchg
push
in
xchg
imul
daa
je
jne
mov
inc
sub
or
mov
je
ljmp
lcall
fsubrs
mov
rcll
add
add
push
and
rcll
pop
xorl
mov
cld
mov
jae
bound
std
cmpsb
push
mov
sub
mov
sbb
mulb
std
mov
mov
xlat
gs
and
cmp
add
mov
xchg
dec
push
jecxz
in
and
sti
mov
cld
decl
inc
or
sbb
lea
in
cmp
sti
push
movsl
ret
je
add
xor
es
call
sbb
lods
into
add
cmp
xchg
iret
mov
clc
add
notl
jae
add
sti
jmp
mov
fistl
cmpsb
add
inc
push
js
test
add
add
sub
add
std
push
jge
cmp
sahf
cld
lds
std
or
aas
cmc
push
inc
clc
js
sbb
jno
add
cli
sbb
cmp
lahf
cld
inc
xchg
and
jge
xor
repz
rolb
mov
inc
jge
fadds
lea
sub
lahf
cld
inc
fadds
aas
cmc
or
jae
clc
inc
clc
js
adc
mov
xchg
lods
lea
lds
lahf
xor
es
mov
sub
fsubp
cmpsb
roll
and
dec
lods
push
jae
sub
sub
mov
add
fs
data16
pop
mov
dec
or
adcl
jno
and
scas
ret
add
mulb
cmp
sahf
test
lods
stos
jb
xor
xor
jnp
stos
test
daa
sbb
outsb
in
xchg
xor
push
xchg
sahf
jno
adc
faddl
dec
pop
jb
mov
sub
cld
pop
jb
pop
and
subl
or
negl
divb
inc
add
std
es
mov
in
mov
xchg
sbb
pop
add
jl
sahf
mov
js
cld
add
ret
cld
out
push
and
adcb
ljmp
ss
mov
in
cmpsl
ret
in
jnp
in
out
cmpsb
arpl
xchg
gs
or
mulb
push
cmpl
mov
mov
in
call
sbb
and
decl
push
push
call
pop
gs
cmp
loope
xchg
sti
mov
xor
aam
call
mov
cli
call
push
decl
in
sti
xchg
sti
jmp
add
lcall
call
mov
and
mov
insl
test
jmp
fcmovbe
cld
push
adc
insl
test
push
enter
jle
lock
outsb
push
int3
xor
out
cmp
inc
test
mov
lds
repnz
fsubrs
xchg
cld
sbb
mov
aas
cmc
roll
call
js
adc
jbe
repz
sub
in
adc
scas
adc
popf
insl
and
andb
ret
push
sub
ret
pop
punpckldq
test
mov
pop
outsl
imul
and
cld
cmp
repnz
mov
int3
arpl
fwait
fwait
addb
cmc
es
cs
xor
cltd
es
sarl
sbb
xor
cmc
es
sbb
insb
ret
inc
adc
ret
pop
outsb
fisttpll
jl
sub
mulb
mov
ss
add
jge
and
sti
add
push
ljmp
and
lds
mov
cmp
mov
clc
insl
cld
jmp
cli
add
clc
add
outsl
sbb
xlat
mov
or
in
jnp
lcall
jmp
cld
jmp
fwait
sbb
adc
mulb
lds
mulb
mov
dec
dec
ljmp
pushf
inc
and
cmp
pusha
sub
push
aad
and
shr
push
dec
sub
push
cmp
adc
jg
jg
inc
inc
test
out
popa
sub
test
and
adc
or
and
inc
and
cwtl
aam
sbb
int3
lea
cmp
add
cmc
call
lcall
pop
sbb
dec
mov
inc
and
cmp
lret
cld
faddp
syscall
addb
and
leave
inc
add
fcmovb
add
in
push
sub
cs
add
loope
in
mov
xchg
or
movsl
or
jmp
jge
add
in
mov
mov
xchg
or
jecxz
add
mov
push
insb
mov
xchg
adc
mov
jge
add
sar
jge
cld
repnz
mov
add
add
sub
push
mov
inc
xlat
xchg
inc
daa
xor
insb
out
out
cmp
loopne
idiv
xchg
imul
mov
out
cmc
add
xchg
imul
add
out
push
shll
or
cltd
stos
jno
adc
fcompl
je
lret
fcomi
add
xchg
add
add
shrl
jbe
jp
je
jecxz
jle
dec
into
add
lahf
inc
in
xchg
rcl
ljmp
jg
out
int
cld
in
mov
je
jae
cmpl
dec
inc
imul
mov
clc
jmp
sub
fsubs
and
pop
xchg
mov
loope
add
add
cld
cld
dec
push
inc
jmp
mov
cmp
icebp
es
jb
std
push
subb
ljmp
add
mov
sbb
popa
xchg
out
out
aaa
push
mov
or
inc
mov
xchg
ja
lcall
mov
out
sub
push
nop
xor
add
add
pushf
in
test
sbb
add
mov
push
mov
push
shrb
mov
lcall
push
bound
push
data16
in
in
add
adc
ds
add
ds
jmp
sbb
cmpsl
sbbb
sub
xor
add
jge
mov
cmpb
jns
xchg
jne
adc
push
pop
dec
fdivr
bound
jl
cmc
jge
push
xchg
outsb
pop
cmc
jge
push
cmp
mov
insb
inc
add
or
gs
jbe
jge
add
xor
mov
es
imul
adc
xchg
dec
pop
je
int
out
inc
pop
incl
jb
sub
popf
cld
out
and
mov
mov
fwait
xor
ja
xor
jo
fsubl
popf
sub
inc
fsts
push
outsl
xor
jp
jp
repnz
sbb
mov
shl
mov
push
mov
add
stos
iret
jmp
inc
and
jge
xchg
jo
cld
insl
mov
or
inc
ljmp
lea
lds
mulb
mov
inc
stc
add
std
or
sbb
jae
mov
scas
pop
or
dec
lods
pop
int
lods
pop
lds
dec
and
imulb
xchg
cmp
shl
testl
imulb
call
clc
dec
aaa
ret
dec
daa
call
push
xor
xor
adc
cs
mov
enter
xchg
mov
jo
sub
jge
sti
cmp
ds
hlt
dec
je
je
loop
jmp
pop
call
xor
adc
add
add
sbb
and
sub
adc
call
dec
and
mov
sti
mov
pop
test
aaa
repz
es
ss
out
das
adc
ss
jbe
in
mull
in
push
xchg
inc
sbb
dec
fidivrl
cmc
jg
in
insb
lock
jb
out
sub
add
jg
call
mov
sbb
jbe
lret
sbbb
add
cmpb
call
call
ret
jmp
mov
jecxz
or
cwtl
xchg
lds
mov
inc
in
imulw
cmp
mov
jl
imul
and
prefetch
out
loop
mov
ds
jp
or
add
add
rcr
jle
or
fwait
mov
in
nop
jbe
cmc
xchg
loop
hlt
sbb
pop
inc
std
testb
es
lea
nop
jno
cmpsb
add
out
cmc
arpl
in
pop
fsqrt
sbb
out
mov
arpl
jmp
add
test
or
sbb
dec
and
cmc
stos
popf
jmp
out
adc
add
cld
mov
sub
cmpsb
mov
call
xchg
nop
outsb
mov
jmp
popf
pop
rcll
jae
mov
arpl
clc
dec
in
mov
pop
push
call
mov
call
bound
add
add
icebp
adc
xor
rorb
add
push
push
add
and
inc
pop
dec
pushl
dec
adc
outsl
adc
mov
out
and
xor
sub
sbb
jle
sbb
in
loop
add
in
cmpsb
mov
mov
call
jecxz
inc
das
mov
bound
fucom
pop
dec
pop
cld
push
pop
ret
ffreep
push
push
add
dec
push
aas
mov
push
cmc
jg
mov
mov
add
cmp
movb
or
xor
push
adc
mov
push
jnp
mov
fidivrl
clc
movsb
and
clc
dec
rorb
add
sbb
inc
inc
sbb
movsb
out
xor
add
ss
push
or
add
lahf
orb
das
push
js
in
dec
andb
mov
mov
mov
jbe
mov
daa
cmpsb
pop
pop
mov
xchg
pop
cmpsb
lock
adc
or
mov
rorl
pusha
fcomi
sbb
ljmp
pusha
dec
jp
dec
scas
jmp
stc
pop
jo
frstor
ret
dec
cld
pop
roll
or
jecxz
cmc
repz
xchg
iret
hlt
add
es
idivb
xor
aam
cmc
es
js
out
outsb
test
push
sbb
into
decl
out
pop
jnp
clc
cmpsb
imul
inc
jmp
ret
movsb
out
imul
add
mov
jae
jo
pop
je
inc
cli
pop
addl
sub
jmp
call
sbbl
adc
cwtl
imul
cld
fs
add
pop
jb
jle
out
testb
push
xor
dec
in
pop
mov
or
out
shrl
out
mov
sti
push
in
sti
call
loop
sti
call
out
pop
mov
sub
jo
push
mov
cld
fcompl
push
pop
call
add
dec
cmovo
mov
cld
cltd
bound
fistps
xchg
mov
popa
mov
dec
lods
sub
cmc
pop
imul
test
dec
arpl
gs
imul
clc
mov
add
hlt
mov
add
call
jle
repz
cmc
inc
xor
mov
sub
push
insl
sub
adc
pop
pusha
lgs
inc
adc
shl
inc
cmp
xor
aas
aad
and
xor
mov
lock
or
int
sbbb
sbb
out
dec
add
jo
fcompl
popf
or
add
and
in
and
jmp
dec
sbb
fnstcw
aas
cmc
mov
pop
xor
roll
in
jne
icebp
mov
jb
sbb
add
out
cli
ret
dec
and
jnp
add
int3
xor
pop
out
icebp
divl
flds
pop
ja
add
xor
rol
jecxz
jne
les
add
add
mov
mov
test
pop
jae
sbb
dec
lcall
sub
add
ret
pop
sti
mov
out
jbe
add
add
mov
sar
call
jge
or
ret
cmp
or
sub
ss
cmpsl
and
add
lret
jno
add
add
add
shlb
das
decb
call
insl
pop
andb
pop
jae
add
add
fimuls
ja
test
push
cli
pop
cld
bound
and
notl
fstps
cli
add
add
pop
jae
rorb
dec
push
cmp
push
sbb
imul
mov
adc
xchg
or
es
pushl
das
xchg
mov
adc
and
add
dec
es
call
push
xor
mov
add
mov
add
and
sbb
fadds
fsubl
add
and
inc
dec
mov
inc
add
xorb
and
push
cmp
add
cmc
ja
and
dec
ja
std
jb
cld
roll
inc
mov
add
jle
xor
inc
pop
ja
jne
sbb
into
rolb
rcrb
mov
imul
std
vmovups
or
xor
push
add
add
add
addr16
ljmp
js
adc
lds
imul
adc
add
das
iret
and
out
ss
xor
adc
push
jb
out
sub
mov
mov
subb
arpl
xor
out
adc
pop
add
out
cmp
sub
add
add
je
or
insb
dec
imul
icebp
lock
daa
xchg
aam
push
and
loopne
out
ror
fisubs
fistpl
icebp
cmp
push
cmp
out
add
movsb
scas
inc
fldenv
cwtl
jb
xchg
in
add
in
jb
mov
mov
xor
pshufw
add
and
cs
mov
das
cmp
fdivr
mov
or
adc
cli
and
test
clc
lods
aas
shrl
mov
call
lahf
inc
dec
jge
orps
aas
mov
clc
mov
mov
sbb
fcomps
push
inc
pushf
in
popf
sub
mov
mov
mov
add
add
mov
xlat
mov
jb
add
jo
dec
sub
jae
movsl
inc
or
push
testl
sti
jne
cmpsb
inc
or
sub
mov
sub
add
mov
ret
push
mov
sub
push
cmc
xchg
xlat
dec
leave
dec
out
test
add
jnp
ljmp
add
aas
call
mov
jge
mov
lret
stos
sub
call
outsb
adcb
mov
inc
test
idivb
mov
in
into
repnz
cmp
aas
out
cmp
decl
cmp
stc
jae
adc
sbb
cld
sub
cmp
addb
and
in
addb
mull
jge
sarb
jp
xor
nop
sub
push
push
pop
fstpl
inc
idiv
arpl
inc
test
pop
inc
or
in
idivl
pop
xor
jo
sbb
mov
cmp
push
popa
jne
ljmp
outsl
ljmp
test
scas
inc
mulb
xor
dec
cmpsb
cmpb
out
jge
repnz
das
add
shrl
lahf
cmp
adcl
stos
pop
jmp
es
mov
or
dec
mov
add
dec
imul
mulb
mov
cmpsl
call
sub
call
notb
icebp
jno
out
je
cld
ror
cld
jmp
das
push
cld
inc
jo
sbb
mov
mov
mov
pop
jb
lods
jnp
add
dec
or
aad
daa
loopne
or
push
and
inc
jmp
test
std
call
xor
in
xor
ljmp
fsub
dec
in
add
mov
add
pushf
es
ret
test
ret
int3
add
push
or
push
push
aad
in
mov
cmp
add
jg
pop
mov
add
mov
pushl
mov
jnp
jecxz
lret
lock
les
ret
or
or
insb
cmc
aas
imul
xor
mov
out
outsb
cmc
aas
mov
js
cld
movd
jb
cmc
aas
mov
aam
repz
dec
cltd
mov
jo
sub
xor
popa
jge
dec
daa
and
jge
out
jl
orb
push
outsl
enter
jl
fcmovnu
mov
add
add
ds
repnz
add
enter
fmull
daa
roll
dec
aas
outsl
sbb
push
push
add
fstpt
xchg
imul
jle
push
jle
leave
outsl
or
xor
and
sar
mov
or
sahf
movsb
test
je
sub
jmp
xchg
mov
imul
add
call
and
xchg
iret
cltd
push
out
nop
push
cld
bound
sub
add
push
dec
push
inc
icebp
es
aam
dec
jbe
pop
push
mov
pop
sub
ret
adc
cld
cwtl
out
sub
daa
push
bound
mov
add
add
add
stc
add
or
cli
out
out
jl
cld
gs
test
sbb
add
adc
sbb
push
bnd
inc
sub
push
dec
cmp
les
mov
fdivr
or
mov
roll
leave
push
xchg
popf
inc
and
jp
mov
sbb
dec
data16
add
pop
dec
and
push
push
adcb
mov
jl
push
jne
inc
or
pop
push
dec
push
je
jb
mov
roll
mul
cli
shl
add
jae
sub
rorb
cmc
aas
add
mov
lahf
add
cmc
or
rorb
cmc
aas
add
mull
add
add
cmc
fadds
cmc
enter
and
pop
call
jno
or
cmp
mov
pop
adc
mov
inc
test
add
cmp
cmpb
mov
daa
or
jle
add
out
orl
jp
lret
cmc
shlb
test
add
add
mov
add
scas
add
mov
mov
pushf
sub
lock
test
out
aam
test
flds
xor
lock
bound
int
syscall
cmc
aas
bnd
pop
fs
cli
cltd
lcall
dec
adc
je
mov
in
jmp
lock
sahf
lcall
add
fyl2xp1
dec
jae
out
jo
in
fadds
rorl
dec
std
cmp
mov
inc
add
sub
push
jb
or
mov
sahf
pop
in
call
xor
cmpsl
xlat
or
inc
inc
xchg
int
dec
push
xchg
pusha
or
jbe
ljmp
ret
sahf
jmp
jns
add
icebp
es
shlb
je
movsb
dec
adc
jecxz
pushl
cmpsl
mov
add
sahf
jl
jns
add
clc
mov
out
push
mov
adc
jge
loope
lcall
push
mov
xchg
loope
jo
mov
dec
jne
sub
cld
mov
mov
add
daa
or
je
cmc
add
mov
adc
into
sti
mov
pop
xor
push
iret
sti
push
xor
pop
ljmp
outsl
pop
leave
push
dec
cld
push
inc
ret
fdivs
xchg
and
cmp
mov
jp
out
push
ja
pop
aas
mov
mov
mov
dec
shr
icebp
movsl
add
aam
pop
or
out
add
outsb
js
stc
leave
fsubrs
loopne
je
daa
xlat
mov
cmc
aas
insl
out
jle
add
inc
add
mov
call
mov
jl
ja
ss
cmp
mov
xor
mov
aas
fiaddl
outsb
jge
cmp
sbb
jne
ret
ljmp
dec
inc
push
das
aad
rcr
mov
pop
inc
hlt
dec
add
imul
mov
cmp
popf
lret
sub
push
adc
add
fcomps
adc
mov
out
mov
pusha
sub
sahf
cmp
lcall
push
jb
adc
jne
mov
out
negl
mov
add
aas
add
es
fisubl
add
mulb
push
fstpt
cmp
sub
adc
decb
mulb
mov
sidtl
add
pop
add
dec
cmpsl
mul
stc
movsb
enter
mov
cmc
idiv
fcoml
in
jmp
sub
push
dec
jb
test
std
imul
iret
cld
xchg
xor
jp
call
insb
mov
add
cld
mov
push
in
mov
add
mov
test
enter
or
jne
cmpsb
cmp
push
ljmp
mov
and
pop
cmp
jo
push
mov
hlt
call
push
in
test
std
mov
popf
jno
test
sti
inc
jns
jns
sbb
and
aaa
push
jecxz
mov
inc
clc
insl
or
int
inc
adc
enter
dec
mov
sub
add
je
add
mov
js
pushf
outsl
jae
out
push
dec
jle
xchg
movsl
lret
mov
movsb
out
int
int
pop
sub
inc
jae
shr
sti
cmc
jg
imul
adc
add
subb
cld
jle
xchg
test
leave
mov
out
shll
jns
testb
aam
rorb
cmp
sub
jle
inc
pop
imulb
push
jg
inc
jbe
mov
or
fcmovnu
mov
mov
jae
data16
es
aad
fiadds
lret
push
jg
add
pop
mov
out
jbe
cmp
jge
mov
fdivrp
mov
insb
ret
or
stos
inc
sbb
sbb
clc
stc
jle
jb
inc
incl
sub
jmp
or
mov
mov
mov
push
adc
add
add
add
jmp
out
mulb
cmp
ja
es
and
jo
cli
call
insb
iret
mov
arpl
stos
cmp
inc
sbb
xor
mov
cltd
loope
es
add
sub
pop
ja
das
leave
repnz
add
shlb
cmp
cmp
andb
jmp
push
in
jmp
sti
adc
pop
into
inc
cld
push
daa
jg
in
call
push
pop
je
mov
pop
jg
pop
xchg
sti
decl
mov
push
adc
mov
adc
add
inc
push
push
aaa
lret
imul
lock
mov
andl
data16
cmc
lods
clc
incb
out
test
je
jge
dec
add
cmc
movsl
outsl
cld
insb
mov
push
adc
test
dec
add
and
add
mov
data16
mov
cld
lcall
or
test
add
lahf
pop
js
inc
insb
cld
jmp
lret
outsb
dec
jb
cmc
fildl
xorl
add
add
nop
jle
stc
push
aam
shrl
mov
in
pop
sbb
imul
add
clc
jns
ror
test
adc
rclb
sbb
jl
pop
pop
shll
add
adc
daa
roll
ljmp
jae
sub
pcmpeqw
ret
mov
cwtl
outsb
orl
pop
out
popf
pop
add
in
outsb
pop
in
outsb
pop
movsl
sub
in
mov
flds
jmp
out
xor
add
stc
lods
or
inc
cld
jmp
ret
mov
inc
cld
je
add
push
xorl
or
ret
inc
cld
jmp
adc
call
mulb
test
mov
das
call
jle
inc
jmp
mov
clc
pop
lds
add
sub
mov
cld
jmp
imulb
add
xlat
push
inc
sbb
cld
add
hlt
push
inc
sbb
mov
and
and
add
mov
mov
sbb
call
test
push
add
add
jno
xor
inc
and
pop
dec
fldcw
push
inc
fsubl
and
mov
push
lea
sbb
outsl
and
push
mov
pop
test
in
enter
int3
and
push
add
jae
and
sbb
adc
xchg
cmc
pop
push
cld
leave
sub
add
rolb
add
lds
add
sbb
adc
dec
cmpb
add
mov
and
les
cmc
dec
add
test
push
jns
sbb
jge
adc
aam
dec
and
lds
sub
adc
xchg
add
xor
push
in
xchg
add
xor
std
xchg
add
xor
in
xchg
add
xor
std
xchg
add
mov
shl
in
xchg
add
mov
or
add
sub
shl
js
add
add
es
adc
es
mov
push
movsb
insb
ds
jg
add
pop
imul
sbb
jg
fldt
pop
push
dec
push
push
cmc
es
pop
ds
add
loope
shll
call
es
loop
stos
pop
sub
xchg
pop
adc
push
imul
lock
imull
cmp
es
in
lret
call
mulb
std
cld
mov
sbb
cmp
add
daa
inc
lds
cmp
cmpsb
cld
xchg
fistpll
out
mov
cld
pop
jne
cli
data16
add
pop
in
mov
xor
pop
dec
dec
movsb
inc
inc
xor
sub
std
mov
cli
cmp
add
mov
in
fstpt
mov
cmp
add
fnstenv
fmuls
push
sar
loope
stc
ljmp
push
in
mov
sar
push
mov
pop
cld
imul
sti
incl
add
add
jge
setno
jns
add
jo
fcompl
lea
mov
call
pusha
jecxz
sbb
dec
push
packsswb
push
sub
cli
adc
add
fs
mov
mov
mov
lock
cmc
test
or
mov
pop
mov
and
cld
jb
fidivrl
dec
xlat
imull
add
add
push
sub
std
or
adc
subb
sbb
test
push
mov
adc
fdivr
cli
dec
add
icebp
xchg
dec
out
cmc
dec
jl
pusha
inc
into
out
and
lret
out
xor
jne
incl
int3
sar
stc
jnp
popf
call
cmpl
xor
add
mov
add
jns
lods
jbe
jle
int
daa
out
in
incb
fs
out
pop
jo
addr16
scas
movsb
pop
sbb
cmc
cmpsb
lret
cmp
add
lods
lret
mov
into
ror
js
push
pop
mov
mov
adcb
adc
dec
mov
fptan
stos
sub
inc
lods
jmp
jge
dec
push
xor
pop
jns
pop
mov
ret
mov
popf
js
xor
lcall
pop
push
out
dec
je
xor
push
adc
jb
in
in
push
fs
jb
inc
iret
pop
xchg
scas
imul
stc
ja
sbb
jne
call
dec
cmp
out
mov
daa
adc
stc
mov
or
outsl
cmp
jmp
mov
cmp
mulb
add
fnstsw
jb
push
adc
or
mov
shrb
sbb
mov
dec
dec
push
inc
mov
pop
mov
adc
inc
mov
lea
dec
lea
mov
add
sub
decl
out
iretw
inc
dec
add
mov
add
or
sbb
inc
inc
add
sub
lret
cmp
or
ret
roll
xchg
push
call
arpl
call
fsubp
pop
pop
cmc
je
sar
int
cltd
int3
pop
divl
xlat
push
inc
cltd
add
push
lds
cmc
dec
jns
shll
jge
call
dec
add
iret
arpl
jmp
dec
or
call
jno
repz
add
cmc
mov
and
gs
decl
cmpb
dec
jg
cli
aas
jl
cmc
aas
add
dec
adc
adc
incl
jecxz
hlt
es
or
xorl
ss
fs
imul
lcall
add
les
jle
lret
push
jo
outsl
xlat
subl
jl
adc
pop
sub
push
pop
add
jg
test
jg
aas
cmpsb
sub
mov
or
jp
mov
mov
ret
or
add
es
popa
pop
jb
out
xor
dec
repnz
add
add
mov
sub
cld
push
sub
fstpl
pushf
push
inc
push
mov
out
movsl
xor
xor
sbb
xor
insb
lods
or
mov
sahf
xlat
insb
and
sbb
bound
daa
push
fs
dec
shll
call
sti
mov
dec
scas
or
add
add
cmpsl
ret
in
gs
pusha
mov
addb
adc
movsl
jge
adc
dec
cld
lcall
cmp
cmp
stc
sub
decl
sti
call
sbb
test
cld
lcall
movsl
loope
push
sub
push
xlat
ret
jg
nop
jge
push
pop
pop
or
push
movsl
in
call
iret
dec
hlt
add
cld
in
cmp
sbb
cwtl
jp
ror
std
lock
movb
fstl
ret
or
std
cmp
in
cmc
ret
pop
ret
fidivl
js
dec
dec
lea
lcall
arpl
icebp
or
out
xor
cmp
add
add
mov
cmp
jae
scas
xor
ja
inc
mov
push
dec
add
std
insb
pop
xorb
adc
add
jb
popl
aaa
and
sti
loope
jo
jmp
xor
insb
clc
push
outsb
pusha
add
dec
in
xor
jge
imul
add
stc
stos
push
stc
jbe
mov
sub
pop
adc
cmpsl
xor
push
push
jno
jnp
and
out
addr16
ret
in
mulb
jo
jg
push
orl
repz
movsl
xor
loop
cmc
pop
dec
adcl
shrl
int
test
and
ja
jo
in
daa
lret
dec
xor
jmp
pop
jbe
add
or
daa
jno
in
es
dec
push
fisubrs
inc
push
addr16
cmpl
andl
outsl
push
cmpsl
aaa
test
loope
rol
fs
mov
jae
stos
xchg
inc
idivb
in
daa
pop
adc
cmpsb
not
sub
cmp
jbe
data16
mov
inc
jbe
das
add
cwtl
repnz
xchg
cmp
inc
fiadds
sub
mov
jl
jae
inc
and
and
in
or
mov
bnd
fwait
or
in
fs
xor
sahf
lds
adc
fs
cmp
out
cmp
push
lock
mov
and
movsl
aas
in
push
mov
or
sldt
add
fsubs
or
fsubl
mov
lret
lret
adc
cmc
les
sti
icebp
or
mov
cmp
push
call
add
icebp
jle
aam
xor
dec
daa
mov
xchg
xor
shlb
xchg
add
inc
adc
ss
push
shrb
add
xor
inc
cmc
jno
push
lea
add
lds
adc
adc
or
xchg
mov
pop
jl
and
cmp
test
push
popf
cmp
add
add
aad
mov
lahf
icebp
ret
aad
ds
cmc
icebp
cs
aad
mov
inc
pop
fldcw
cld
sti
ficoml
daa
jbe
repnz
mov
xchg
vcvtdq2pd
aaa
mov
out
mov
pop
sub
xlat
cmp
out
clc
test
sbb
pop
mov
xchg
hlt
mov
push
rcrl
add
sbb
lahf
fstl
jmp
mov
out
sbb
fmull
pop
out
sub
sub
jo
xor
add
and
test
mulb
mov
cmpsb
idivl
mov
xor
lret
jp
insl
aam
sahf
dec
fnstsw
sti
jmp
insl
call
sti
mov
ficomps
jmp
cmpsb
shl
add
cmp
jmp
pop
dec
push
or
int3
inc
dec
js
adc
xor
cmp
inc
sbb
xlat
addl
xchg
sub
fbld
addr16
pop
or
pop
or
adc
or
loope
push
inc
int3
into
mov
adc
pop
test
dec
or
sarb
jne
iret
jno
dec
push
or
shll
popa
rcrb
fidivrs
cld
push
outsl
ja
fnstcw
aaa
fldl
xor
add
add
add
iret
cmc
addb
add
repnz
cmc
sti
mov
sub
or
scas
push
popf
add
incb
mov
iret
jp
test
add
outsb
inc
lock
mov
adc
jae,pn
adc
add
ss
dec
jl
cmc
cmp
aad
sub
pop
mov
cmp
xor
aad
adc
add
add
shll
cmp
add
cmc
enter
daa
cmpsl
add
ror
movsl
adc
add
out
pop
sub
mov
std
shl
push
std
push
sub
push
popa
push
fnsave
popa
mov
daa
add
out
push
add
aam
add
popf
sub
mov
loope
sub
call
add
xor
call
or
cmp
repnz
sbb
rcl
add
daa
add
lret
sub
fldenv
out
lds
std
cld
and
inc
jmp
or
sub
sbb
pop
cld
sub
cmc
lahf
xlat
ss
in
cmp
add
add
sbb
sub
sbb
cld
lahf
je
jae
jg
rep
cmp
cld
xchg
jne
jae
jge
sti
sbb
sbb
adc
pusha
pushf
sub
jae
ja
imul
mov
mov
aas
add
or
pop
pop
push
fidivrl
mov
mov
dec
push
out
in
mov
adc
lahf
and
sub
and
aas
add
sti
data16
xchg
in
iret
iret
and
or
rorb
rolb
fsubl
or
pop
in
jo
ljmp
aas
inc
push
dec
pop
mov
add
cmp
andb
lcall
adc
addl
add
jno
mov
outsb
clc
mov
sahf
in
add
jge
jb
pushw
add
lret
lods
adc
out
push
lods
add
sub
in
mov
mov
les
cmp
mov
add
mov
imul
jmp
fsubrl
adc
mov
cs
icebp
or
inc
mov
es
je
loop
das
mov
dec
sbb
pop
iret
cmpsb
into
dec
imul
and
mov
pop
push
jae
out
nop
add
mov
lods
jae
jp
out
ret
cmp
and
jg
pop
insb
inc
cmp
add
sbb
push
icebp
jg
xor
pop
mov
add
daa
jmp
ljmp
in
xchg
jae
xchg
sti
sbb
int3
daa
add
pushf
imul
rcrl
jne
push
push
mov
scas
jnp
pop
mov
divb
inc
jb
lods
inc
mov
xorl
es
jl
mov
inc
xchg
add
and
aaa
lds
cld
inc
dec
test
pop
and
pop
jb
ja
fs
and
mov
fldl
jmp
inc
es
xor
add
std
mov
add
fisubrl
fbld
cld
push
je
jmp
add
inc
jmp
cld
dec
lods
fwait
pop
pop
aam
lds
jp
cmp
cld
incl
add
add
js
or
fisttps
jnp
cld
test
test
sub
push
jbe
xchg
frndint
jne
movsb
ds
cmp
jne
andl
sbb
sub
push
push
and
shl
mov
ret
shl
xchg
dec
mov
sbb
adc
mov
add
add
cmpsw
out
or
pop
in
sub
jae
push
mov
pop
jle
push
mov
xchg
jl
mov
jns
push
lea
add
xchg
sahf
cmp
jnp
jge
jge
adc
scas
add
cmc
lea
add
xchg
jns
or
jge
insl
push
sbb
mov
repnz
test
je
lcall
add
add
sahf
pop
inc
push
mov
out
adc
test
stos
and
sbbb
push
xchg
jl
push
xchg
jge
test
hlt
cwtl
jle
and
imul
jl
push
outsl
iret
cmp
jle
mov
add
dec
pop
cmp
adc
sub
repz
xor
and
insb
mov
or
inc
xchg
repnz
add
js
sti
cmpsb
inc
prefetch
and
push
push
add
sbb
flds
pop
bound
out
jmp
sub
call
fisubrl
cld
fwait
jmp
and
insl
mov
fs
pushf
or
std
and
mov
ret
movsb
clc
add
and
fs
imulb
xor
popa
and
movsl
pop
bound
bound
xchg
minps
repz
cld
test
inc
or
jb
or
fisttpll
arpl
pop
aam
outsb
or
pushl
shl
pop
popf
shrb
inc
mov
std
adc
call
insb
sub
into
add
add
add
xchg
xor
and
imul
add
pop
and
pop
adc
out
add
and
push
push
dec
push
mov
jnp
xor
sbb
adc
inc
dec
js
sub
or
ret
and
dec
add
dec
adc
incb
add
add
dec
sub
cmp
fwait
ret
and
fldl
pop
fnstenv
pop
inc
jbe
dec
xorl
addb
mov
iret
adc
incb
inc
push
shll
cmc
mov
add
ret
and
emms
inc
shll
add
add
andb
jne
inc
mov
add
add
fs
fidivs
out
lar
dec
lcall
and
mov
jg
dec
lods
xchg
push
loope
cmc
mov
jg
sbb
pop
mov
call
sub
and
lods
mov
push
call
dec
jne
std
mov
mov
dec
dec
jg
test
jecxz
js
mov
xchg
fcomi
ss
imulb
jg
stc
movsl
and
sub
sti
sbb
jmp
js
mov
xchg
or
add
sti
adc
sbb
and
fnstcw
mov
in
jb
sbb
shll
bnd
mov
or
mulb
xor
push
lahf
mov
hlt
add
add
inc
es
cld
inc
cmp
lods
cmp
pushf
dec
mov
sbb
sti
hlt
add
push
adc
outsb
sbb
sbb
in
sub
jne
lahf
ds
jnp
in
sub
mov
rcr
test
jbe
inc
int3
xorl
shl
lds
and
jne
jnp
or
daa
and
pop
call
orl
and
pushf
out
mov
sub
movsb
inc
and
jo
mov
adc
lss
xor
cwtl
dec
cld
inc
cwtl
psubsb
pop
inc
or
clts
add
cwtl
clc
sub
daa
jns
std
and
test
sldt
jbe
lock
jnp
in
mov
inc
adc
add
jle
hlt
cmp
leave
sbb
or
inc
inc
icebp
push
mov
inc
sar
push
jl
sbb
sti
and
mov
inc
jb
es
push
push
sbb
out
adc
push
inc
pop
mov
sbb
jne
mov
jge
rorl
add
add
test
dec
jmp
es
jbe
call
sbb
push
aad
xor
inc
cmp
and
dec
jmp
sbb
dec
sbb
inc
lds
call
dec
subl
or
adc
lods
add
repnz
or
sbb
jmp
xchg
fldcw
sbb
jmp
lods
push
call
jb
pop
notl
cmpl
push
adc
push
push
shll
add
fnstsw
inc
xchg
in
sti
mov
data16
stc
out
push
jno
or
mulb
shl
cmp
pop
jne
add
in
cmpsb
jae
add
sti
decl
cmp
out
test
sbb
pop
adc
and
or
ljmp
push
jae
and
jecxz
pop
popa
cld
ljmp
push
std
inc
negb
and
test
outsl
and
jp
or
xor
aas
and
lcall
je
outsl
push
fistpl
mov
xor
mov
sti
jl
das
add
pop
pop
dec
std
push
rorl
fcomi
or
shl
adc
add
mov
push
movsl
xor
pop
sbb
push
pop
outsb
ret
xor
inc
shlb
push
add
cmc
ja
iret
mov
inc
adc
sbb
jg
and
add
add
cmpsl
mov
xor
adc
ret
and
or
and
int
idiv
mov
inc
cld
and
movsl
sub
dec
add
mov
add
adcl
addb
es
lock
rcrl
lds
arpl
pop
and
cs
cmp
ljmp
xchg
mov
xor
add
add
out
int
movsl
stos
fisttpl
xchg
jmp
lods
outsl
fs
repnz
and
rcrb
inc
loope
loop
xor
sub
fistps
mov
clc
sub
dec
mov
mov
das
insb
inc
daa
and
jmp
test
data16
or
orb
call
xchg
fbld
add
add
xchg
sbb
mov
push
xchg
jmp
jbe
stc
fs
loopne
add
sbb
clc
call
mov
pop
push
pop
sub
jge
cli
xchg
lods
popa
mov
lea
adc
call
stos
cs
pusha
mov
xchg
mov
cld
xchg
test
popa
or
adc
push
and
xor
sbb
add
mov
inc
jle
push
les
pop
sub
or
mov
rolb
je
mov
jmp
call
movsl
rorl
bound
cld
ljmp
jg
sbb
orl
sqrtps
std
mov
inc
push
mov
call
incl
or
jecxz
cmc
int
cld
jl
les
jmp
subb
jbe
rorb
jne
mov
lret
call
cwtl
cmp
xchg
dec
aas
cld
jno
je
jle
pop
call
insl
lret
jecxz
jle
aam
in
aas
cld
insb
inc
call
add
mov
pop
jbe
ljmp
adcl
add
cmc
movsl
add
add
cmpsw
ss
and
cld
es
std
mov
add
test
nop
out
dec
or
inc
jbe
mov
hlt
ret
bound
sub
repnz
inc
cmpsb
dec
flds
fcomip
ret
and
movsl
out
stos
sub
out
dec
test
ljmp
and
jecxz
pop
dec
adc
fiaddl
jmp
es
xchg
inc
jmp
push
ja
scas
rcll
loope
cli
enterw
leave
scas
or
jmp
es
mulb
cmpb
adc
mov
data16
and
cmp
out
mull
dec
ret
mov
ret
cltd
mov
or
lahf
cmpsb
push
je
shrb
mov
and
mulb
test
add
sub
and
adc
and
xchg
push
aas
sbb
into
xor
les
inc
fadd
cmc
sub
ljmp
addl
add
sub
je
cs
mov
bswap
add
rcrb
push
cld
mov
in
add
inc
pop
mov
inc
push
cmp
daa
rcrb
mov
orb
sub
ljmp
push
and
sub
outsl
and
popf
jg
pop
sub
add
out
fwait
loop
jg
adc
pushl
sarb
ret
ret
rcl
loopne
push
inc
cmc
mov
mov
test
call
mov
in
mov
outsl
dec
call
push
jl
cmp
dec
or
pop
call
push
cmp
sub
inc
test
push
jecxz
inc
cmc
movsb
xor
or
movl
add
xchg
enter
adc
repz
cmc
pop
add
jmp
sub
lods
ret
imul
xlat
jb
adc
jns
das
lcall
mov
js
xor
icebp
dec
hlt
sub
dec
ds
aaa
bound
push
es
mov
jle
loope
jg
fst
test
mov
add
adc
das
adc
fnsave
adc
fidivrl
test
add
es
imulb
das
xlat
out
xchg
adc
pop
jne
mov
mov
cmp
adc
stc
xor
cld
mov
mov
test
in
sbb
push
adc
stos
adc
test
call
add
pop
cld
fdivr
imul
movsl
xor
jmp
inc
sahf
in
push
sbb
mov
cld
gs
jne
call
inc
or
imul
hlt
inc
pop
sti
add
sub
inc
sbb
mov
or
add
pop
std
jne
cli
jecxz
rorb
cmp
pcmpeqb
adc
lods
sbb
mov
mov
pop
sbb
pop
sbb
push
cmovo
outsl
and
popf
aas
and
cli
xchg
dec
push
fcmovnbe
add
and
dec
cmp
aam
lea
lahf
ds
aad
incl
cli
cld
jne
dec
push
push
cmc
or
mov
in
call
sbb
jecxz
subb
mov
add
add
jnp
popa
jae
cmc
dec
sub
jb
dec
adc
int
sbb
aas
add
mov
ds
fsts
call
xor
xlat
add
xchg
out
and
adc
ss
pcmpeqb
daa
add
cmc
lahf
aaa
jae
sub
jae
sbb
jb
pop
adc
mov
adc
leave
sbb
mov
lods
filds
add
add
ja
cmp
in
cmp
test
insb
rcl
incb
insb
arpl
cmp
loop
push
or
adc
or
or
xor
xlat
push
pmaddwd
popl
fst
mov
or
pop
lcall
scas
jae
shld
rolb
daa
xorl
bound
add
inc
cmp
dec
adc
cmp
inc
popf
call
xchg
mulb
rcl
and
imul
aad
xor
cltd
mov
and
pop
add
jbe
push
pop
repz
sbb
clc
into
mov
adc
fdecstp
ja
mov
mulb
xchg
add
add
sahf
push
fisttpll
divb
popa
sbb
cmpsl
leave
cmc
add
jbe
cwtl
or
mov
push
and
dec
or
clc
add
sbb
jne
cmc
cld
jne
dec
push
inc
sub
sti
pop
popa
popa
or
pop
lcall
cwtl
bound
add
add
mov
sti
out
pop
cld
decl
cld
jne
add
add
icebp
cld
and
loope
or
fstps
sti
lcall
outsw
inc
ljmp
push
sbbl
adc
and
in
add
clc
jecxz
sbb
add
cmc
jl
adc
repnz
stc
ljmp
xchg
fs
pop
sbb
jg
mov
daa
or
add
add
incl
test
or
ljmp
hlt
push
add
test
sbb
call
mov
add
mov
xor
sbbl
cmpsl
push
sub
jnp
or
xchg
cmpsl
mov
jb
frndint
adc
loope
mov
mov
pop
sub
mov
daa
jmp
add
dec
mov
rcrw
incb
cmc
mov
mov
mov
adc
add
test
mov
cli
xlat
ret
repnz
adc
es
daa
jmp
ret
mov
add
sbb
jecxz
daa
jmp
dec
xor
fistps
rcll
push
test
shrb
push
add
add
idivb
add
jbe
hlt
lcall
call
or
gs
insb
mov
add
divb
xchg
negb
cld
mov
lret
call
cmp
push
cld
out
pop
fidivl
sub
std
or
sarl
sti
insb
loope
rorl
sti
mov
add
add
scas
cli
jle
sub
popf
ret
cmp
xor
sti
mov
mov
and
test
push
fnstenv
add
push
add
in
dec
jecxz
mov
pop
push
cs
in
adc
outsb
xor
and
mov
cld
jne
lahf
jle
stc
push
cld
push
data16
test
add
mov
fcmove
sub
icebp
pop
aad
fdivrl
aad
xchg
aam
jnp
repz
sti
idivl
jmp
scas
out
cmc
inc
lret
repz
shll
adc
fsubs
and
jle
daa
int3
dec
adc
push
xlat
inc
in
mov
roll
sub
add
cwtl
inc
stos
pop
out
push
stos
add
dec
sub
out
mov
shrb
push
mov
addl
test
pop
pop
or
add
cmc
verw
and
add
pop
leave
outsl
mov
orb
cmp
xchg
sbb
inc
pop
push
cmp
ljmp
mov
xor
add
add
movsb
mov
pop
pusha
mov
add
jmp
xorb
xor
push
pop
mov
sbb
insl
inc
xchg
inc
addb
mov
cmp
rcll
and
es
cmp
cmp
dec
stc
xor
sahf
test
fisubrl
jmp
divb
add
std
fimuls
sub
add
loope
add
add
add
sti
mov
cmp
mov
bound
hlt
aas
jmp
ss
xchg
add
testb
and
data16
scas
and
xor
or
idivb
shr
mulb
call
insl
mov
push
outsl
xor
mov
xchg
ljmp
loope
aas
jmp
mov
jae
add
std
lcall
sub
je
das
dec
call
cli
jg
inc
cmp
sti
ljmp
cld
jecxz
mov
cmp
sti
mov
dec
packssdw
inc
rorb
xor
lods
sbb
cld
xchg
xor
dec
daa
push
decb
jae
inc
or
pop
pop
push
imul
rcrb
outsb
adc
movsb
addps
dec
add
xchg
xor
inc
cmc
xlat
clc
pushl
push
call
jae
test
cmp
dec
inc
cmc
test
faddl
push
add
aaa
adc
push
outsb
test
testb
push
mov
mov
or
add
add
push
push
xlat
daa
cmc
je
sbb
jge
stc
loop
add
sgdtl
rorl
cmc
add
fadds
sar
gs
jmp
ss
jmp
add
es
das
shll
movsl
mov
daa
insb
mov
mov
add
add
sbb
adc
ja
std
mov
jg
pminsw
cmc
push
mov
mov
dec
add
sbb
add
add
sbb
xor
cmp
pop
stos
xlat
ret
sbb
stc
xchg
cmpsb
add
int
test
dec
or
add
subb
add
cmp
sti
out
pop
je
add
xor
out
es
lock
sti
sbb
add
add
add
lea
add
mulb
jne
jbe
or
inc
test
jle
out
movaps
mov
add
push
lods
inc
add
pop
movsb
add
notb
xchg
xor
cltd
sarl
cs
repnz
mulb
clc
call
daa
jne
in
cmp
and
push
imul
orl
and
adc
leave
xor
mov
shl
imul
mov
int3
sub
pop
jle
pop
pop
add
inc
push
mov
add
imul
adc
sub
call
shrb
pop
imul
test
and
cmpl
push
je
cmpsb
std
pop
popa
mov
push
fistl
push
adc
fdiv
xchg
dec
jae
test
imul
testb
stc
sbb
pop
incl
mov
jmp
sbb
jle
cld
andb
sar
lds
fsub
dec
add
cmp
call
sbb
sub
fisttpl
mov
jmp
add
or
sub
cld
loopne
push
inc
cmc
enter
pushf
int
aaa
or
push
outsb
repz
adc
daa
sbb
insb
push
vhsubps
adc
es
cltd
cmc
push
ljmp
add
jmp
and
push
adc
daa
sub
cltd
jae
jl
inc
int
ds
add
out
test
mov
orl
jmp
js
inc
rcl
push
jb
adc
mov
test
xor
aam
sarl
std
jmp
sub
add
js
fidivrl
dec
sbb
cli
jne
jae
mov
stc
lret
movsl
pop
int
stc
shlb
rorb
icebp
das
add
imulb
push
inc
add
mov
js
jb
dec
and
xchg
adc
inc
fdivrp
sti
adc
cli
je
out
lods
fcoms
pop
repz
adc
sti
je
cli
stc
roll
clc
mov
mov
sub
cld
push
bound
cmpsl
in
mov
out
jg
fcos
dec
hlt
jnp
adc
mov
push
mov
mov
addl
add
in
jne
jbe
pop
jmp
xchg
xchg
push
call
or
push
es
lea
pop
sub
push
inc
std
call
out
jle
jecxz
xor
int3
pop
mov
fcmovnbe
xchg
dec
xor
aas
and
xlat
xorb
je
roll
clc
or
test
aas
and
jg
cmc
or
add
xor
pushf
leave
stc
or
fistpl
or
addl
js
and
and
xlat
inc
adc
in
lds
jl
adc
popf
sub
push
hlt
les
jb
ja
and
adc
jne
test
cld
es
mov
mov
add
xor
jno
xchg
stos
and
test
cld
imul
pop
cmpsb
jb
xor
repnz
inc
std
sbb
decb
jg
or
sub
scas
sub
mov
pop
push
scas
in
jl
test
outsl
lock
shlb
or
add
lret
das
jnp
and
leave
cmpsb
cmp
arpl
mov
add
add
divb
jmp
clc
jg
cltd
sbb
fs
mov
jl
jno
cmc
es
sub
pop
mov
lods
mov
mov
leave
mov
cli
out
popf
mov
call
je
pop
negl
shl
inc
add
mov
push
sbb
call
add
lods
ret
or
dec
mov
sti
push
dec
sti
and
jne
inc
shll
jmp
sar
dec
sbb
adc
xlat
mov
jle
mov
push
bound
push
mov
enter
loop
outsl
hlt
push
sub
std
std
pushl
std
cli
mov
add
or
outsb
faddl
add
add
mov
mov
pop
sbb
lds
jl
hlt
pop
and
rclb
jecxz
inc
dec
or
sbb
out
addr16
sbbl
outsb
int3
cmc
lret
faddl
add
jmp
call
arpl
cmc
testl
lret
mulb
xor
loopne
ja
cltd
mov
jmp
add
add
loopne
jb
rorl
mov
cli
or
mov
add
jmp
mov
xorb
call
xor
je
jmp
ret
daa
or
gs
push
ljmp
mov
leave
or
mov
push
add
push
mov
fcomi
ror
call
cmpb
andb
sbb
cmc
jp
into
fs
repnz
pop
scas
inc
mov
and
hlt
jae
call
sub
es
sub
jmp
sbb
jmp
jle
daa
jmp
and
je
icebp
outsb
sbb
scas
scas
mov
jmp
jle
and
jmp
les
add
add
mov
mov
mov
ret
sbb
add
ljmp
gs
in
lahf
push
addb
cmc
mov
add
icebp
cmp
mov
xchg
or
sti
jmp
div
xor
int
inc
push
hlt
jl
jnp
call
jb
std
out
sbbl
mov
test
jl
das
decl
daa
lea
or
fdivp
or
cmp
sub
fdivrs
jne
push
mov
cmp
mov
ds
and
call
jecxz
sbb
add
movsl
lds
or
idiv
dec
les
mov
movsb
jo
add
add
movups
ficoml
mov
movsl
inc
jl
mov
mov
iret
call
movsb
inc
shlb
leave
test
lea
daa
add
les
cmp
int3
stos
mov
or
jmp
add
adcb
icebp
in
cmpsl
lea
inc
jbe
mov
sub
sbb
adc
push
cmp
shlb
mov
mov
inc
dec
aam
int
mov
cld
test
sub
sub
mov
lret
ret
jl
push
mov
test
mov
jbe
mov
ret
push
fisubl
or
lret
adc
and
jmp
insl
shrl
shl
icebp
lret
add
add
repnz
xchg
cmp
and
inc
mov
cmp
xchg
test
inc
repnz
pop
cmpsb
test
jne
shlb
repnz
xchg
jmp
mov
bnd
mulb
adc
in
add
popf
sbb
fildll
mov
sbb
icebp
insl
inc
inc
dec
xchg
aam
pop
add
fisubl
inc
in
jno
jmp
xchg
sub
sbb
adc
adc
aam
pop
inc
jmp
push
push
cmp
sar
jne
ret
test
add
or
sbb
daa
cmp
jge
add
repnz
add
call
push
inc
and
add
or
lods
inc
and
mulb
add
mov
decl
pop
cmp
and
popf
inc
add
lock
movups
decl
adc
in
jecxz
call
outsb
fs
pop
push
fmull
adc
les
add
in
adc
dec
mov
adc
mov
call
mov
push
outsl
cmp
ror
adc
inc
cli
jecxz
mov
cwtl
sbb
nop
pop
push
xor
jecxz
lock
add
jle
lret
lock
aas
ret
and
jg
add
jne
mov
std
lret
and
aaa
mov
call
and
add
add
cmc
ret
add
cld
outsb
cmp
push
aaa
sub
popf
cmpsl
sbb
mov
xchg
fcompl
lock
or
pop
mov
gs
lret
mov
jl
xor
mov
out
aas
cmc
es
push
or
subl
mov
cmc
dec
adc
xorb
cmp
sub
add
add
loop
jbe
push
or
add
out
ret
sbb
add
arpl
call
push
inc
xchg
sbb
negb
xor
sbb
add
in
mov
jle
xchg
or
sti
test
jbe
inc
sbb
add
mov
pop
sti
aam
sbb
test
or
mov
push
adc
repz
lods
cmc
call
lea
mov
bound
pop
push
repz
bound
loope
pop
bound
mov
adcb
fs
adc
icebp
test
bnd
or
scas
or
das
test
fisubs
add
rolb
add
mov
rcrl
inc
fldenv
sub
mov
and
or
and
add
and
and
sbbl
fmuls
sbb
or
sub
add
sbb
out
arpl
repnz
or
adc
add
add
sbbb
cmp
dec
mov
stc
or
jmp
in
mov
clc
andb
mov
pop
fcmovbe
xchg
pop
mov
nop
pop
data16
mov
je
push
or
std
add
imulb
ficoml
icebp
xorb
or
outsb
out
insb
mov
jp
std
mov
pop
stc
fsubs
sub
sbb
hlt
call
inc
mov
test
mov
mov
push
or
iret
icebp
cmpsl
xchg
rolb
call
jle
aad
insb
or
mov
or
iret
ret
lcall
sbb
adc
dec
fnsave
decl
adc
ljmp
lods
jae
mov
push
pop
scas
stos
lcall
sbb
ljmp
mov
or
mov
jmp
jmp
adc
je
sub
repnz
sub
pop
jg
andl
sbb
push
xchg
mov
jmp
jmp
ds
inc
stos
inc
sub
call
sbb
es
add
jl
sarl
test
jmp
negb
add
sub
andl
cmpsb
js
lret
ljmp
add
sahf
inc
in
mul
push
inc
and
cmp
ret
sahf
inc
fincstp
jecxz
and
mov
test
push
ljmp
dec
sub
add
cld
jne
adc
xchg
bound
cmpsl
mov
out
add
xor
orl
mov
cmp
rorb
rdtsc
shl
bound
fsubl
add
arpl
in
out
outsl
sub
push
cld
daa
jecxz
mov
sbb
add
cmpb
add
pop
clc
jne
leave
xlat
or
push
outsl
cmp
adc
jle
hlt
add
rcr
jmp
ss
testl
jmp
pop
add
xor
jg
stc
push
xor
es
lds
sbb
subb
adc
push
inc
in
std
xchg
cmpb
cli
lea
adc
add
add
into
mov
xor
enter
int
mov
fcoms
push
push
jp
jae
or
stc
ret
pop
movsb
sbb
in
jl
test
cmc
es
or
sub
sub
loop
insb
inc
cmpsl
and
std
out
add
stos
mov
and
scas
insl
cli
cwtl
mov
addr16
aaa
jecxz
add
add
add
es
inc
or
mov
je
mov
xor
ret
mov
sub
negb
mov
fists
inc
arpl
test
cmc
out
cmpsb
scas
jge
add
jl
xchg
add
fcoms
cwtl
jl
mov
call
jb
test
rolb
scas
lret
push
adc
pop
scas
push
loop
ss
insb
jns
test
xor
in
ret
notb
imul
add
fistpl
pop
push
jmp
jecxz
add
aad
out
insl
out
inc
fs
jmp
fstp
jg
cltd
jbe
add
jbe
fsubrs
jl
out
pop
or
lds
lea
add
add
iret
adc
sub
dec
stc
roll
scas
mov
and
sub
mov
and
sbb
ret
lcall
mov
adc
fsubl
test
mov
jecxz
hlt
sub
test
and
inc
int3
das
lahf
and
repnz
mov
xor
cmc
dec
rcrb
dec
dec
jp
mov
or
cwtl
and
in
loopne
in
sbb
jb
mov
cld
cld
loopne
xor
mov
cmp
cmc
cmp
je
cmp
cmc
int
cld
cmpb
sub
mov
adc
lcall
in
cwtl
or
cmp
add
cmpsl
nop
incl
add
ljmp
into
incb
cmc
test
jmp
add
xor
jb
jmp
add
fiaddl
push
pop
lcall
out
xchg
into
scas
cli
sub
pusha
shrb
jmp
jl
push
jmp
add
add
add
scas
cmp
or
popa
hlt
cmpsb
add
jle
sbb
leave
ja
flds
inc
in
daa
sub
cmc
es
mul
adc
insb
ss
inc
jb
into
std
in
add
cmp
faddl
cmpsb
shll
xchg
sbb
loop
scas
jnp
std
jle
sub
call
daa
and
insb
mov
push
shl
cmpsb
add
pusha
loop
aam
jecxz
inc
jmp
adc
add
loope
push
gs
psubsb
mov
add
pushf
test
cld
and
jg
mov
cwtl
push
jmp
fldt
stos
mov
roll
fwait
cld
jne
add
add
jmp
daa
std
jne
xor
cmp
scas
cld
jns
mov
js
scas
cmc
je
movsl
cmp
jge
and
lret
inc
sbb
cld
adc
mov
and
ja
and
adc
push
imul
xor
in
daa
xor
jmp
lret
sarl
jbe
xchg
iret
ss
add
mov
into
stos
pop
jle
cmpsb
pop
mov
call
inc
pop
cmpb
orb
push
div
aad
ds
mov
clc
pop
lock
rorb
inc
push
adc
jb
int
mov
in
cld
sbb
jb
lahf
pop
add
xor
mov
iret
jb
int
cld
imul
add
and
cld
js
jns,pt
das
je
shr
inc
sbb
outsb
pop
jne
loope
pop
xor
movsl
jae
jp
rcrl
sub
jnp
shll
xor
mov
fs
dec
jbe
and
out
and
mov
sbb
push
pop
add
cmovns
xor
push
xor
xchg
add
fdivr
adc
sub
testb
in
add
add
rolb
mulb
dec
mov
mulb
lea
sti
push
imul
add
mov
xchg
jb
jp
movsl
fldt
xchg
jl
mov
inc
inc
jmp
stc
ficoml
mov
enter
test
dec
arpl
jle
mov
pop
xor
out
jmp
pushf
mov
out
dec
scas
in
push
divb
jp
sti
jmp
inc
sub
dec
lods
or
pusha
inc
add
xor
jne
idivl
add
movsl
dec
push
add
str
push
sub
jmp
add
iret
fidivrl
sbb
imul
aam
mov
cmp
dec
sub
push
jo
rorb
and
cmp
inc
or
outsl
lods
push
and
inc
mov
adc
pop
int
call
popf
scas
cld
or
repnz
cmc
push
ret
adc
add
mov
js
jns
xchg
and
sar
incl
add
add
jnp
sbb
mov
push
adc
mov
mov
push
and
push
jb
xlat
push
mov
lret
inc
mov
pop
xchg
jl
in
xlat
decb
mov
mov
ds
ds
push
adc
mov
cmp
int
imul
decl
cmc
es
sti
mov
fbstp
add
leave
push
fisttps
shll
push
fcoml
jle
or
jl
pop
and
fidivl
test
lock
jne
js
pop
cltd
js
xlat
cltd
or
roll
popf
mov
ljmp
shll
fidivs
xor
add
pop
in
jbe
call
adc
scas
sub
shl
xchg
add
and
pop
mov
pusha
lds
add
add
mov
clc
cmpsl
mov
jne
add
inc
movsb
aas
mov
lods
in
addr16
pop
jge
mul
inc
push
imulb
test
icebp
add
repz
jecxz
xor
into
cmp
mulb
data16
pop
push
aam
imulb
cltd
std
cld
fimull
jae
idiv
scas
sbbb
add
outsb
xchg
cld
fisubrl
mull
add
add
jecxz
clc
mov
mov
inc
in
adc
lods
inc
xchg
pop
sahf
xor
mov
add
das
push
push
fwait
enter
addl
push
cld
incl
in
mov
hlt
je
xchg
cld
adc
inc
mov
cmp
xor
add
add
add
cmp
sbbb
cmp
sbb
jne
add
adc
in
push
add
adc
ret
and
fwait
xlat
adc
and
pop
cmp
add
push
jmp
push
jle
ja
jmp
int3
scas
cld
es
mov
adc
int
cld
ret
add
add
add
add
mov
mov
xorb
ja
add
mov
mov
mov
mov
into
mov
inc
cmpsl
into
cmpb
cmp
sub
mov
insb
inc
cmpsb
and
pop
inc
lods
imul
push
ljmp
add
add
xor
jge
and
fldl
inc
fdivs
jp
cmpsb
call
adc
jmp
icebp
add
in
mov
dec
jmp
push
push
xlat
aam
in
jmp
add
into
mov
jns
cmp
jl
stc
dec
loop
jmp
rcrb
or
shl
push
cmpsl
cld
sub
cmc
and
int
push
push
lds
push
sbb
xchg
or
mov
jmp
cmp
inc
fucomi
sbb
jae
test
sti
jmp
or
xchg
and
xchg
dec
stc
add
xchg
dec
stc
add
add
cmc
pop
rcl
lahf
mov
test
sbb
inc
test
sub
adc
test
es
iret
adc
test
fisubrl
lahf
adc
sbb
outsl
add
sub
jo
lea
push
jmp
cltd
cld
adc
dec
push
gs
sahf
pop
add
scas
pop
lea
jae
data16
push
incl
add
add
push
mov
and
fwait
outsb
inc
sub
push
movsb
lods
adc
pop
inc
dec
cmc
add
or
xor
je
push
cli
push
dec
les
xor
call
jns
js
jbe
pop
into
mov
add
in
cmp
ss
std
or
sbb
ret
mov
add
incb
add
add
idivl
add
sub
inc
and
daa
and
lea
dec
test
mov
cltd
inc
lock
outsb
call
mov
nop
push
shrl
mov
daa
roll
imul
leave
and
add
add
cmp
ret
shll
xchg
mov
mov
add
das
call
outsb
dec
in
cmp
hlt
es
add
jne
addr16
push
dec
mov
fs
popa
and
sbb
cltd
mov
rorl
add
or
mov
xchg
daa
jmp
daa
jmp
sub
es
bound
imul
mov
add
add
outsl
call
mov
add
jns
sti
fisubrs
add
test
icebp
cmc
cmp
std
mov
xchg
mov
add
jno
and
cmc
jp
aam
and
sub
mov
cli
add
and
sub
aam
cmp
jp
jns
sbb
push
sub
sti
hlt
cmpsb
and
outsl
jae
cmc
xor
pop
add
ss
cmp
daa
mov
lea
add
mov
add
pop
outsl
divl
daa
adc
data16
pop
stos
clc
add
push
jecxz
adc
add
call
daa
adc
das
data16
sub
add
outsl
divl
daa
adc
out
add
push
jmp
inc
and
sub
test
add
add
add
add
adc
adc
add
ljmp
inc
rol
dec
dec
sub
jne
jp
or
dec
lea
cmc
mov
or
leave
and
sti
shrl
push
mov
add
fwait
mov
pop
add
cmp
das
xor
push
sbb
add
add
incl
jg
aas
js
pop
mov
addr16
mov
cli
adc
or
insb
mov
sbb
daa
pop
lds
daa
sbb
popf
lods
daa
int
add
mov
popf
daa
rcrl
in
mov
es
divps
popa
rcrl
daa
lret
cmp
add
sbb
add
mov
dec
xor
ret
ret
pusha
arpl
jmp
out
cltd
fsubr
or
fs
inc
out
es
push
mov
fs
incb
add
jmp
dec
popa
iret
add
int3
adc
adc
lret
jne
fwait
pop
or
or
cmp
mov
or
subb
sbb
add
add
mov
test
mov
or
aad
es
bound
add
in
shlb
mov
cmp
ret
shrb
stc
pop
adc
xchg
xchg
std
pop
loopne
adc
xor
aam
js
add
xor
mov
in
or
or
dec
sub
pop
push
or
mov
sub
or
cmp
jmp
lahf
dec
adc
push
or
mov
idiv
aaa
cmp
jne
lret
jne
ljmp
adc
and
pop
cmp
push
cmpsl
mov
cmp
sbb
add
call
mov
je
cmpsl
adc
rcrb
add
add
adc
dec
enter
fs
out
or
adc
mov
push
mov
pop
sti
add
cmc
lea
add
xor
incl
sub
or
incl
sar
xor
inc
aam
cmc
push
sti
enter
loope
jno
dec
loopne
sti
cmp
adc
test
divb
push
divl
lods
adc
add
add
mov
adc
mov
xlat
aad
cmc
mov
imul
daa
movsb
or
es
push
xor
cmpsb
add
inc
jno
lahf
lods
sbb
lret
sub
xchg
cmp
jno
lret
xchg
cmova
pushf
pop
mov
cli
loopne
faddl
insb
pushf
pushf
mov
in
cmp
inc
lahf
push
adc
add
add
add
jmp
or
fsqrt
test
pop
dec
or
jae
cli
push
shl
mov
mov
je
jo
lret
hlt
or
xor
push
add
cmovl
in
push
cmc
push
into
stos
mulb
push
bound
je
roll
or
mov
or
pushf
push
shlb
imul
add
add
add
iret
jne
jg
adc
cli
repnz
stc
jo
stos
add
push
bound
add
in
movsb
mov
call
xor
loop
cmpsb
shrb
icebp
push
adc
in
jne
add
int
adc
adc
loope
dec
inc
push
notl
mov
adc
pop
sub
add
add
lret
es
pop
cmp
je
mov
test
subb
xor
popa
divl
fwait
dec
sbb
or
jmp
idiv
divl
divl
iret
jne
and
jne
sub
or
inc
cs
ret
push
mov
fadds
add
fwait
jne
add
call
pushl
imul
mov
mov
push
repnz
cmp
clc
jne
ja
neg
push
pop
sti
inc
aam
sti
dec
aam
jne
or
sbb
cmp
dec
decb
add
mov
push
dec
loopne
ds
cld
cmp
add
mov
jge
mov
mov
jo
popf
out
ds
jl
add
dec
xchg
rolb
sbb
incb
mov
adc
shr
lock
mov
cmc
and
mov
fsubr
add
mov
jnp
adc
and
int
neg
mov
add
pop
xor
xchg
inc
idivb
bound
push
xchg
es
testb
cld
inc
cmc
push
mov
sub
es
jp
loope
pop
mov
insl
ret
loope
fs
leave
add
sbb
ds
xor
cltd
add
jbe
inc
push
int
jo
ljmp
mov
data16
sub
in
push
push
repnz
fdivrs
jmp
push
das
inc
sbb
add
inc
out
adc
pop
jbe
xor
add
add
mov
xor
mov
pop
sbbl
cltd
pop
and
adc
icebp
insb
leave
stos
cmc
es
bound
in
sbb
or
pop
add
sahf
jne
call
and
test
test
push
andl
jne
xchg
or
call
pop
jmp
adc
add
push
call
or
idiv
inc
push
fmuls
int
notl
xchg
icebp
mov
push
pop
mov
mov
or
add
sub
cmp
ds
sub
add
pushf
sub
xorb
adc
filds
rclb
out
cmc
iret
push
mov
aad
call
outsb
xchg
push
mov
stc
iret
mov
xchg
std
sti
jl
add
xor
fcmovb
push
xor
test
dec
mov
add
fimull
gs
fcos
cli
add
inc
cmc
inc
cmp
add
int3
lods
inc
jmp
shll
shlb
lods
dec
or
xadd
es
popa
push
xor
add
add
push
les
repnz
mov
das
lds
and
cld
jnp
addr16
and
mov
sub
push
pop
add
mov
cmc
sbb
inc
pop
mov
mov
repz
xor
repnz
stos
sub
push
in
xor
mov
out
clc
ret
adc
mov
fldl
inc
cli
xchg
sbb
mov
data16
mov
fldenv
mov
add
pop
lea
rcrb
test
mov
sti
fidivrs
cltd
inc
out
add
imul
jo
test
addr16
das
mov
jns
sti
arpl
or
add
scas
inc
jmp
imul
imul
sub
and
imulb
data16
xchg
and
push
push
not
fucomip
or
push
filds
decl
bound
ds
pop
push
jnp
inc
pop
not
iret
out
or
or
cmpsl
insl
cmp
add
cmp
sub
xor
orps
loop
lea
sub
and
and
add
mov
sti
into
dec
xor
icebp
jge
jmp
je
lahf
adc
sahf
repnz
mov
add
inc
ds
gs
nop
outsb
pop
mov
push
lea
out
jecxz
cmc
cmpb
or
mov
push
push
jle
xor
mov
pop
idivw
stos
xor
lea
lock
gs
sti
dec
push
mov
add
int3
dec
or
or
adc
cld
cli
loopne
cmovo
push
mov
out
push
call
sbb
push
push
fldcw
mov
push
push
sub
sti
ljmp
sub
add
iret
jl
stc
xor
adc
jge
mov
and
and
faddl
pop
cmp
add
lods
cmpsl
adc
je
scas
pusha
cmpsb
pop
jb
data16
into
mov
roll
xor
iret
fiadds
daa
ss
mov
sbb
xchg
es
xchg
and
fistpl
dec
jmp
in
fst
arpl
into
lods
sbb
mov
jmp
inc
cmc
into
sub
scas
shrb
aad
stos
notb
mov
mov
add
mov
mov
mulb
push
pop
in
sarb
adc
add
push
out
daa
adc
mov
icebp
aas
jmp
pop
daa
add
scas
stc
cmpsl
data16
or
push
cmpsb
int
into
sub
lahf
sub
dec
imul
mov
decl
lock
jmp
jecxz
push
pop
std
or
stos
negb
sti
add
pop
je
dec
and
xor
jg
leave
inc
pushf
ror
push
jecxz
and
lahf
and
decl
test
and
cmp
test
aam
add
aad
add
sbb
cmp
fadd
xor
enter
addr16
rol
push
leave
dec
add
jmp
jecxz
xor
idiv
dec
jecxz
pop
pop
mov
add
mov
nop
mov
popf
test
add
pushf
mov
pop
js
jae
cmovns
or
daa
jb
cmc
iret
xlat
cmpsl
scas
mov
loop
jg
in
sti
xchg
pusha
fdivrs
cmc
inc
mov
inc
xor
sub
jne
push
add
aas
cmc
dec
enter
add
pusha
push
sbb
mov
pop
sti
mov
ljmp
shlb
sti
add
es
sar
es
shrb
in
fst
loop
iret
add
mov
xlat
ret
inc
push
outsb
filds
add
add
add
adc
daa
jl
jo
add
pop
mov
jmp
ljmp
test
fbstp
mov
inc
shlb
adc
loopne
testb
lcall
dec
in
cmc
es
fnstsw
add
fists
cmp
ss
lea
sti
pop
and
sub
add
add
inc
into
stos
imulb
xchg
sub
add
and
lahf
add
idivb
push
mov
mulb
add
sarb
jmp
stc
add
aam
xor
data16
test
mulb
lea
sti
mov
or
sbb
data16
push
adc
cli
ss
test
gs
add
std
lcall
add
scas
clc
std
pop
shr
push
jge
testl
cmp
push
cmp
pusha
adc
rclb
inc
xchg
movsb
mov
jb
fcompl
mov
cmp
or
add
push
mov
or
push
mov
je
int
add
fbld
loopne
sbb
push
pop
pushf
daa
push
leave
dec
add
fiadds
add
data16
clc
pop
inc
lds
mov
push
xchg
and
aas
cmc
adc
popa
insb
lret
aas
shlb
shlb
clc
sub
aas
cmc
lods
xor
ss
adc
jbe
clc
push
cmp
mov
sbb
sti
pop
lods
dec
sti
push
inc
jl
xor
aas
cmc
xor
push
pop
pushf
push
sti
dec
pop
stos
push
inc
shr
lods
call
sarb
std
and
aas
call
jle
dec
call
lea
lods
outsb
mov
outsb
rolb
inc
sti
jmpw
mov
adc
push
incl
pop
daa
jmp
push
mov
pop
jmp
add
inc
cmc
lods
inc
test
add
add
lods
lods
out
mov
sbb
jle
mov
adc
jmp
scas
movsb
jmp
mov
jmp
in
ds
fwait
hlt
xor
xor
inc
jo
mov
mov
insb
add
cmpsb
adc
sti
cmpl
ret
sub
lods
xor
pop
add
ret
sub
mov
sti
pop
push
xchg
jae
idivb
add
pop
xor
jb
iret
stc
pop
xchg
mov
test
add
aas
jmp
pop
mov
push
xor
push
xchg
sbb
addr16
ss
cmp
sbb
cmp
call
jp
add
cmp
incl
add
add
mov
testl
and
int3
and
add
mov
add
pop
in
adc
jo
pop
and
mov
fdivr
lds
and
adc
mov
sbb
jecxz
dec
mov
xorl
adc
push
push
call
push
push
cmc
inc
add
add
call
inc
cmp
or
dec
les
call
data16
daa
inc
into
ss
test
lret
ss
cltd
testb
add
orl
sti
lea
lcall
sti
mov
push
lea
sti
jp
les
jns
in
push
or
loope
inc
add
sub
jle
add
mov
xlat
arpl
loop
ljmp
in
sub
rcr
es
daa
push
sub
cmp
ja
or
in
repnz
push
js
int
hlt
es
rcll
daa
inc
jnp
imul
add
sbb
jns
cmp
cmc
es
outsb
in
mov
insl
ret
stos
sub
mov
loope
insb
adc
mov
push
loope
add
sub
add
push
test
sub
push
pop
xchg
mov
es
jb
xor
and
mulb
push
push
fs
xor
es
xchg
mov
jmp
loope
dec
sahf
lods
andb
add
add
add
repz
sti
jmp
arpl
idivb
xchg
jmp
mov
lods
ficompl
push
shl
ds
sbb
daa
sti
aam
and
xorl
cld
xchg
and
add
pop
sub
leave
adc
xor
add
mov
add
ret
jnp
inc
stos
in
in
sub
push
cltd
push
and
xor
cli
decl
jne
addr16
or
adc
dec
push
mov
adc
movntps
aam
sub
fstpl
add
mov
push
mov
lods
in
push
cmp
push
cmp
call
sbb
push
mov
push
jmp
or
mov
push
pop
fildll
sti
loopne
cmc
aas
cmc
inc
mov
add
mov
xrelease
add
mov
push
jl
xchg
push
das
xchg
loope
aas
cmc
in
cmp
jmp
jne
inc
fst
les
insb
mov
decl
xor
push
dec
push
or
loopne
mov
cmp
mov
add
xor
mov
jbe
clc
or
cld
test
and
mov
in
aam
add
sub
mov
daa
popl
inc
imul
test
cwtl
xor
mov
xchg
mov
pushf
stc
aam
add
sub
mov
es
or
imul
inc
mov
inc
jo
adc
fildll
loopne
shll
mov
mov
mov
xchg
mov
push
xchg
fsubs
inc
cmc
mov
mov
add
cmp
cs
cmp
jmp
or
icebp
decl
clc
xchg
aas
jo
jmp
xor
sbb
sti
mov
repz
ss
lea
add
add
mov
sti
jmp
sub
inc
add
stos
sbb
sbb
hlt
sahf
outsl
imul
mulb
call
cld
push
adc
ja
add
mov
sub
adc
dec
push
adc
les
test
shl
push
aad
jo
repz
notl
leave
ljmp
xchg
test
shl
jmp
cmp
add
lea
jmp
not
out
lea
and
call
push
dec
inc
mov
je
rolb
fcompl
push
add
add
sbb
mov
add
rclb
mov
popf
inc
scas
add
inc
dec
jo
in
das
imul
add
xor
in
pop
push
mov
mov
enter
int
xor
lea
mov
int3
sti
jbe
fnsave
ret
or
pop
insb
pop
ret
xor
adc
outsb
jle
jo
xor
mov
push
out
dec
js
insb
push
lahf
scas
pop
xor
sub
dec
inc
repnz
movsb
aas
and
cmp
fstpl
lea
lds
jb
test
fucomi
popf
mov
mov
enterw
inc
cltd
push
data16
sub
fwait
or
jmp
add
dec
data16
imul
es
inc
cmc
push
xchg
testb
sub
sbb
push
add
stc
sub
daa
ss
adc
sbb
push
mov
push
out
lods
sti
jmp
rcl
mov
adc
loop
jmp
xor
sti
push
cmpsb
sub
test
dec
push
call
jb
sub
add
sub
shrl
ljmp
test
imul
dec
icebp
out
mov
xchg
bound
add
addl
leave
sbbl
sub
data16
je
dec
lahf
jne
pop
fcomi
call
adc
pop
test
and
add
push
call
and
add
sbb
faddl
je
shlb
sub
mov
mov
mov
popf
inc
clc
test
push
cld
call
push
out
sti
rorb
add
mov
mov
popf
push
hlt
and
std
add
roll
lods
cmp
hlt
mov
shll
jle
iret
aaa
cmp
aad
addb
dec
add
test
adc
call
dec
loopne
sti
cmp
push
cld
popf
mov
cmc
dec
sti
cmp
jmp
pop
incb
xchg
hlt
xor
xchg
ds
dec
pop
loopne
ljmp
xchg
fxch
mov
pop
or
add
add
fcoms
add
xor
mov
jle
push
lods
mov
xor
fsubs
sahf
es
sarb
adc
dec
and
icebp
es
push
test
or
es
add
sub
mov
je
sbb
pusha
mov
or
cmp
add
popf
add
jnp
clc
cmpsl
mov
pop
xchg
lods
test
ss
mov
leave
stos
cmpsb
test
in
and
add
mull
add
xlat
data16
cli
cs
mov
movsb
mov
lods
das
pop
jmp
mov
insl
add
cli
testb
add
inc
data16
and
sbb
fs
fisubl
fwait
jne
adc
sti
add
sarl
test
lea
cld
fwait
mov
lcall
je
push
imul
mov
jne
sbb
jbe
shrb
mov
dec
mov
mov
test
test
cli
jl
popf
mov
call
fsub
je
out
call
mov
jecxz
mov
idiv
outsl
fimull
cltd
fdivp
call
add
mov
push
fsubl
jnp
cmc
shll
cmp
ss
aaa
mov
test
sarl
data16
mov
cli
rolb
je
inc
iret
call
into
mov
mov
cmc
cmp
incl
add
add
sahf
pop
into
ss
decl
jns
push
xchg
incl
cmc
mov
sti
jmp
into
pop
add
xor
outsb
or
rolb
and
int
mov
jecxz
pop
and
mov
or
cltd
mov
add
mov
mov
daa
jmp
out
jnp
in
or
incl
pop
daa
add
call
and
js
add
sbb
jmp
lds
xchg
mov
imul
cmpsb
imul
pop
in
sbb
adc
popf
daa
jmp
add
vmovupd
jmp
sbb
pop
das
in
jmp
cmc
push
fs
mov
pop
xchg
mov
sbb
jg
push
mul
xchg
inc
mov
call
push
cs
sub
ss
add
cmp
jnp
cld
inc
leave
mov
inc
sub
push
bound
in
add
push
push
mov
add
add
es
hlt
push
aaa
inc
add
shlb
jmp
sub
push
cltd
mov
std
sub
inc
push
scas
sarb
push
mov
sub
add
je
dec
jae
je
and
outsl
adc
sub
mov
jns
pop
mov
incl
idivl
aam
mov
ljmp
incb
incl
or
pop
push
mov
sub
cmc
sub
call
jno
pop
adc
xchg
into
call
inc
int
in
rcl
aam
insb
into
test
fdivr
testl
xchg
je
or
cmp
jno
push
cmp
cmp
int
mov
xchg
loopne
mov
mov
mov
mov
fldt
ret
adc
testw
lds
adc
cmc
mov
adc
push
pop
push
add
stos
sub
adc
xorb
data16
mov
shl
es
roll
add
add
ficoms
sub
ficompl
test
je
mov
mov
push
cmpb
pop
add
pop
rorl
dec
fnstcw
jmp
sarl
frstor
jb
add
outsb
sbb
clc
insl
jmp
or
mov
inc
into
add
lock
in
mov
ljmp
inc
mov
in
sbb
dec
adc
jnp
add
div
out
mov
sub
add
mov
add
mov
xchg
test
or
adc
jno
jmp
ss
mov
cmc
stos
xor
cld
pop
xor
add
add
pop
and
and
and
mov
cmp
push
test
add
hlt
pop
xchg
repz
or
cmpxchg
add
scas
adc
decl
mov
rcr
and
call
push
scas
and
fsubs
call
lahf
jno
mov
sub
negb
xchg
outsl
or
or
adc
test
incb
lea
xor
cmc
or
and
xor
mov
arpl
sti
call
adc
aaa
dec
mov
xlat
push
mov
xor
aas
cmc
mov
call
adc
and
xor
adc
cmp
out
add
pusha
mov
pushl
daa
adc
jmp
in
xor
add
add
sbb
ror
xor
ss
decl
lea
ret
icebp
call
lahf
outsb
sbb
test
hlt
sub
insl
ret
jmp
xor
movsb
add
add
cmp
adc
cmp
lret
hlt
sbb
add
les
or
call
xorb
add
lea
push
push
fmull
pop
dec
adc
fdiv
jmp
lea
aas
add
int3
hlt
xor
push
int
jecxz
and
popf
mov
mov
ljmp
enter
sub
jmp
ss
out
je
and
mulb
jne
xor
or
les
xchg
bound
scas
adc
pop
cmp
add
add
mov
test
push
add
jo
into
stos
div
xchg
xchg
stos
and
mull
add
push
lods
sti
ficomps
loopne
jmp
imulb
push
push
test
inc
or
jae
je
jns
and
lahf
adc
cmp
cmp
pop
add
out
jb
clc
add
xchg
sti
jae
push
or
add
add
testb
pop
int
dec
add
mov
call
incl
xchg
mov
stos
push
mov
andb
sub
pushf
sub
xor
push
divl
addl
adc
mov
call
test
add
setnp
xor
pop
rorb
and
cmc
scas
inc
add
in
into
mov
fld
add
cmc
or
add
call
jg
adc
or
add
cmc
or
adc
cli
jg
sbb
xor
add
lock
adc
hlt
add
sarl
call
orb
inc
popa
pop
add
add
add
mov
cmc
fdiv
shl
dec
add
dec
and
cmp
int
insl
sbb
out
sbb
lret
or
jmp
and
jmp
adc
lret
testl
out
or
inc
stc
dec
negl
adc
leave
inc
or
mov
cli
int3
jmp
adc
out
dec
dec
add
cmpsb
mov
cmc
adc
lret
add
loopne
pop
inc
cmc
mov
jg
fwait
xchg
fstpt
push
leave
jae
add
dec
stc
sub
cld
loop
insl
fadds
adc
cltd
push
mov
mov
es
add
cmpsb
add
lods
xor
fdivs
daa
lea
xor
fdivs
daa
push
data16
test
aas
adc
sbb
mov
cmp
inc
iret
jno
sub
mov
sbb
xchg
dec
jg
sub
and
icebp
fists
and
leave
jno
add
jns
add
ljmp
pop
mov
out
in
ret
adc
out
jne
loope
push
xchg
mov
negb
je
je
jae
aaa
sahf
pushf
and
add
xchg
sarl
add
clc
pushl
mov
loopne
mov
push
mov
gs
add
rol
and
out
and
mov
push
call
mov
sbb
je
ja
or
loop
add
mov
adc
and
movsl
fs
cmc
or
sti
add
cmc
aas
cmc
leave
xor
outsb
push
cld
push
mov
mov
push
add
outsb
mov
jnp
or
repz
adc
jno
push
jno
dec
and
mov
cmpsl
daa
ss
cmp
pop
push
push
add
addl
jnp
rclb
js
push
aaa
jle
ret
jmp
sbb
add
ret
in
je
add
add
es
fildl
push
std
inc
cwtl
fdivrl
lret
dec
stos
jp
sub
jb
mov
loop
cmp
mov
lods
jge
mov
das
sbb
das
fidivrl
inc
mov
ds
inc
cmc
push
sub
in
mov
lods
lods
movl
lods
lods
mov
bnd
mov
aam
add
or
sub
push
xchg
add
inc
adc
outsb
lods
out
mov
loopne
jmp
inc
fnstenv
sub
xchg
dec
mov
in
out
lock
sti
jb
lcall
negb
adc
inc
rclb
xchg
mov
cmc
pop
mov
push
lock
cli
pop
dec
enter
out
aam
mul
jge
xchg
sti
ds
lods
dec
xor
mov
add
cmp
sub
xchg
sub
mov
hlt
addb
mov
push
inc
rorb
sti
jae
push
je
inc
dec
push
jmp
sarl
push
into
outsb
add
adc
push
leave
pop
xchg
sti
push
pop
jle
in
pushf
inc
dec
call
aaa
imul
jp
idiv
adc
jns
push
hlt
mov
sub
inc
loopne
jne
test
inc
hlt
adcb
adc
je
dec
imul
jae
scas
or
aaa
scas
lods
add
es
jle
pmaddwd
add
push
mov
add
xchg
aas
add
cmp
and
lods
std
cmc
jge
enter
cmpsb
mov
mov
inc
mov
leave
mov
cmpsb
fwait
leave
xchg
lods
mov
leave
sbbl
mov
gs
std
cmp
jle
sbbb
cmp
mov
sbbb
mov
inc
cmc
or
jne
daa
outsl
or
stos
sub
or
aaa
add
add
add
push
hlt
cmp
push
mov
cmp
call
popa
stos
sub
pop
jp
scas
add
xchg
jo
rcrl
mov
lock
std
and
cmc
es
int3
fsub
xchg
aaa
jmp
icebp
ret
adcb
es
or
push
ljmp
jmp
insb
ret
test
add
push
daa
ss
cli
jmp
ljmp
xor
add
inc
or
add
into
mov
test
push
jg
fidivs
mov
mulb
ret
daa
jmp
inc
out
in
ss
xor
call
insl
addr16
mov
mov
add
mulb
icebp
sbb
mov
sub
inc
jmp
xor
push
add
jmp
add
test
push
or
jmp
or
ffree
push
rsm
jmp
jae
or
inc
cmp
jne
pop
push
testb
jecxz
or
cmp
cmp
sub
cmp
or
mov
add
push
mov
inc
add
cmp
fsubrl
test
mov
addl
inc
lock
sbb
or
in
sbb
cmc
ret
shr
inc
mov
dec
cld
jl
addb
jle
mov
xor
ret
add
rorl
or
and
orb
jle
jecxz
jg
or
mov
out
es
cmp
dec
push
cmpb
je
mov
stc
fdivrl
push
lea
idiv
cmp
orb
jb
add
rcrb
loope
imul
mulb
imul
mulb
add
xor
fld1
and
pusha
in
popa
pop
lds
les
jge
mov
push
mov
pop
movsb
outsb
mov
mov
jecxz
aas
gs
jp
add
push
addr16
daa
sbb
stos
mov
xchg
fs
mov
aaa
shll
cmp
mov
out
inc
lock
or
stc
jmp
paddsb
ja
adc
sub
adc
pop
mov
or
jmp
lds
dec
xchg
test
jb
cmp
mulb
not
xor
dec
lcall
cli
idivb
sbb
xchg
je
fsubr
pop
push
push
push
push
stc
or
jle
loope
je
je
adc
add
ss
sbb
scas
loop
dec
cmpsb
ljmp
add
push
inc
jmp
jge
sti
add
sti
cmp
fnstenv
cwtl
mov
ret
jnp
dec
daa
jne
xlat
in
mov
cltd
loop
cltd
push
pop
mov
shll
mov
outsl
or
stc
or
push
push
add
jo
hlt
inc
xchg
mov
jb
cmpsb
repnz
adc
jge
add
add
sub
dec
adc
add
jnp
pushf
daa
jne
pop
in
testl
sahf
inc
clc
iret
mov
mov
mov
push
cmp
idivb
pop
jl
sub
jnp
shrb
cs
pop
xchg
mulb
xor
sbb
xor
sbb
mov
add
add
push
inc
clc
outsb
mov
clc
repnz
push
xchg
cwtl
push
sti
add
push
inc
cmc
add
or
inc
mov
mov
lret
mov
mov
fnstenv
sahf
add
xchg
adc
or
adc
mov
push
imul
mov
popa
xor
out
xorb
add
rorl
mov
cmc
cmp
icebp
xchg
sbb
cmp
and
orb
mov
push
std
xchg
ss
ficoms
cmc
mov
arpl
inc
cmc
mov
inc
mov
sbb
pusha
xor
cltd
xor
imul
inc
push
ret
stos
add
div
dec
je
add
add
nop
sti
pusha
mov
test
mulb
xchg
xchg
fisttps
clc
dec
dec
add
sbb
jne
jne
jbe
aaa
repz
xchg
xchg
je
jnp
sti
bound
mov
inc
stc
push
inc
icebp
and
xchg
mov
push
ljmp
idiv
pop
push
cld
add
aaa
divl
gs
lods
iret
jne
rol
jb
sti
jl
pushf
inc
or
sti
divb
push
clc
add
popf
jne
dec
add
fwait
pop
hlt
out
pop
adcb
inc
or
jmp
ret
push
mov
cmc
dec
push
cmpsl
jns
adc
ljmp
not
repz
mov
iret
into
test
dec
push
test
add
add
stos
aas
les
shlb
push
insb
inc
or
mov
inc
cld
std
jno
sub
cli
lcall
xchg
test
es
les
jne
adc
out
loope
sti
bound
les
jge
mov
add
cld
mov
loopne
mov
stc
add
call
push
mov
pop
leave
aaa
xchg
call
jle
in
jmp
adc
pop
mov
mov
or
imul
sub
pop
rcll
adc
aas
and
loope
xor
dec
sbb
add
orb
cmp
add
xchg
jae
pop
pusha
fs
add
add
bound
cmc
es
mov
outsl
fs
dec
ja
sbb
mov
pushf
xor
pop
jle
add
cmp
dec
sbb
fwait
pushf
pop
mov
outsl
add
decl
xchg
nop
add
cltd
dec
mov
shlb
in
push
mov
sbb
jb
inc
or
cmp
pop
outsb
adc
dec
push
jg
repz
sti
jle
fdiv
addb
es
hlt
hlt
xchg
fsubrs
rcrb
mov
idiv
call
cli
fs
cmp
dec
adc
jmp
inc
enter
xor
xor
cli
add
and
inc
fsubrl
sbb
ss
sbb
add
add
add
inc
or
js
dec
sbbl
test
sub
mov
add
nop
push
adc
adc
sub
add
adc
adcb
mov
pop
sub
xor
testl
movsl
push
lock
xchg
inc
cld
cmp
push
add
fcmovne
je
imul
add
cmc
mov
decl
in
dec
xchg
sub
add
adc
or
mov
out
les
ficomps
mov
push
cmp
test
pushf
add
getsec
add
cli
cs
loop
mov
js
sub
sbb
mov
clc
push
out
divl
pop
add
lret
inc
add
out
sbb
aad
sbb
xlat
ds
incl
es
push
xor
or
cli
fbstp
test
test
add
jne
loop
mov
cmp
imul
sub
es
mov
pop
roll
xor
in
movsl
add
jmp
add
mov
jmp
dec
icebp
jno
in
or
dec
cld
cmpsl
sub
movsb
xor
out
call
mov
cld
add
cli
pushl
fsub
nop
inc
cmp
inc
sub
xlat
call
cmpsl
stc
repz
aaa
xor
cmpsl
jg
idiv
sbb
test
jge
or
push
ss
add
jne
sub
std
jl
sti
arpl
dec
shll
add
or
sti
xchg
stos
in
push
push
dec
pop
mov
mov
jns
jg
popa
roll
insb
xchg
add
cmp
cld
mov
dec
push
mov
std
jmp
lods
testb
bound
insl
inc
adc
out
je
cmpsl
aas
or
testl
imul
orb
divb
and
push
sahf
jae
int3
es
mov
pop
mov
add
call
sbb
add
ljmp
mov
jge
addl
cltd
loopne
xchg
mov
push
pop
out
mov
in
jge
dec
push
cmc
sarb
mov
lea
add
add
add
jle
add
and
outsb
stc
pop
mov
jne
mov
push
sub
inc
pushf
bound
xchg
addr16
jmp
jo
shrb
mov
mov
mov
mov
add
inc
hlt
or
push
add
mov
add
nop
jns
negb
jge
std
adc
out
shll
lahf
fstpl
mov
sbb
jmp
inc
sbb
inc
outsb
jle
and
add
movsb
iret
ret
or
add
jmp
jp
xchg
sub
sub
sbb
jns
in
jecxz
psllq
inc
mov
push
or
and
adc
je
adc
xchg
sbb
push
cmpb
scas
pop
xlat
jmp
jb
xorl
mov
push
lods
add
fiaddl
test
icebp
es
clc
sub
cmp
fisubs
lods
mov
stc
jne
mov
fwait
sbb
fbstp
daa
jg
cmc
mov
aad
jnp
cltd
jne
scas
cmp
add
add
and
mov
mov
pop
stos
rcr
addr16
testb
insb
insl
and
mov
push
pop
int
jg
push
mov
dec
jnp
test
mulb
sti
add
adc
shr
fnop
idivl
and
call
mov
sub
add
rorl
mov
rolb
cmp
add
add
cmpb
sub
cmp
pop
xchg
sub
add
rclb
dec
outsl
or
pop
aas
adc
roll
mov
xor
cmp
jmp
pop
in
sbb
cli
jne
and
fcomi
mov
push
sub
push
outsb
inc
mov
push
nop
inc
hlt
jo
enter
push
call
adcl
cmp
sbb
fwait
xchg
xor
jbe
add
adc
inc
loope
lds
xor
arpl
adc
ret
adc
or
ret
mov
xor
sbbl
addl
inc
pop
pop
enter
add
daa
jmp
insb
aas
jge
add
addr16
test
mov
fwait
push
repz
pop
cwtl
cmp
mov
sbb
out
loop
js
xchg
lret
add
loop
cld
push
xor
stos
into
nop
jg
cmp
push
stos
and
cwtl
fs
scas
mov
jge
add
add
cmp
and
ljmp
std
hlt
push
jae
call
mulb
xlat
cli
hlt
add
inc
jmp
cmp
or
jo
xlat
call
dec
or
and
jp
div
or
addb
testb
mov
jno
pop
orb
dec
add
mov
mov
jg
lods
mov
pop
mov
and
dec
aas
movsb
jge
xor
xchg
daa
add
and
jmp
and
jecxz
movsb
es
incb
inc
call
sahf
addr16
mov
jnp
jl
jnp
dec
xor
push
mov
ret
notl
iret
inc
hlt
add
lock
and
adc
outsl
rclb
sbb
test
pop
pop
testl
add
mov
push
pop
sub
lock
dec
loopne
test
mov
add
cmc
leave
cmp
cmc
add
or
push
hlt
cmp
testb
cmpsl
mov
das
mov
popa
jl
jo
js
outsb
out
mov
pop
xchg
pop
int
hlt
incb
add
add
and
and
jl
imul
int
popa
outsb
mov
popa
xor
sti
popa
decb
mov
xchg
sti
dec
add
out
stos
test
nop
clc
sbbl
inc
bound
or
es
push
test
insb
jecxz
jbe
dec
dec
adc
lods
and
and
add
add
out
clc
inc
jecxz
test
sub
add
hlt
test
sub
lds
jo
xor
pop
cmp
add
push
stos
or
jg
repnz
test
mov
add
stc
cs
es
fwait
cmovbe
test
addr16
inc
jb
or
cmp
jmp
bnd
pop
xchg
test
pop
add
ss
data16
add
add
or
and
push
adc
ss
jg
popf
mov
adc
cmp
lock
imul
test
sbb
lcall
sub
sub
xchg
xchg
jl
push
repnz
pop
in
lea
xor
pop
cmp
mov
jge
pop
mov
fwait
adc
sti
ss
data16
ja
or
jae
adc
adcb
push
jmp
je
les
dec
shlb
mov
sti
jmp
push
leave
dec
outsl
sti
push
pop
nop
jnp
jo
gs
pop
call
testl
pop
movsb
gs
pop
aam
cmp
mov
lock
and
add
add
add
and
clc
mov
add
jne
cld
inc
hlt
xchg
add
pop
testl
fcomip
jmp
les
in
inc
cld
push
inc
sub
sti
or
clc
push
je
lea
testl
addb
cli
clc
cmp
outsb
into
pushf
pop
icebp
jg
cli
ror
imulb
test
mov
dec
add
cmp
jle
sti
cli
mov
jg
clc
in
mov
sti
and
js
jle
pushf
in
icebp
jg
xorl
dec
call
cmc
stos
sub
repz
ret
add
es
les
mov
xor
aam
dec
jp
cmp
fisubrs
mov
add
add
es
movsb
jb
imulb
jb
lods
sbb
ja
int
pop
shlb
pop
clc
in
sub
sbb
movsl
mov
scas
movsl
test
repnz
in
jle
push
jne
mov
jge
in
add
adc
adc
sti
push
jne
add
adc
add
outsb
pop
mov
in
imul
xor
das
test
mov
jecxz
sbb
xlat
jo
jb
aas
in
lock
out
jae
inc
jp
pop
jmp
jnp
sbb
xchg
cli
pop
mov
sub
repz
in
insl
addr16
xchg
ljmp
mov
jl
jb
sti
mov
pop
mov
add
enter
inc
cld
cmp
and
jp
js
int3
or
shlb
jne
ret
outsb
movhps
shlb
inc
cld
iret
stos
mov
jl
movsb
inc
cld
shll
leave
ret
dec
push
pop
nop
lea
movsb
icebp
push
test
incl
jge
cmp
call
addl
add
je
jge
jg
jecxz
outsl
addr16
pop
xor
clc
and
xchg
sub
jne
jo
mov
repz
cmc
xchg
mov
cmp
nop
add
add
jg
jmp
mov
xchg
and
sti
jmp
ret
or
mov
add
lcall
incb
add
add
mov
in
add
inc
or
sbb
ret
mov
or
icebp
xchg
ljmp
inc
icebp
es
dec
mov
pop
fldt
aam
lods
add
mov
jl
sub
dec
ja
jmp
sub
sub
inc
movsb
mov
mul
out
test
add
add
shr
inc
test
and
xor
mov
popf
and
test
or
les
call
in
mov
cmc
movsl
lods
jmp
mov
jp
and
cs
scas
cli
repnz
sub
mov
xchg
push
insl
mov
ror
xor
sub
bound
jae
sub
add
add
enter
jg
jmp
jbe
and
not
push
jb
test
jne
jle
xchg
push
insb
mov
cmp
fisubrs
jne
movsb
mov
cld
jg
add
into
pop
cmp
pusha
mov
mov
addr16
jle
add
or
loope
and
sarl
sub
add
je
inc
dec
movsl
les
sub
pop
pop
add
add
add
cmp
add
orl
add
sub
add
pushf
clc
mov
ret
ljmp
call
push
imul
cmp
outsl
cmp
adc
andb
add
xor
mov
and
fs
data16
and
pop
cmp
add
adc
data16
rclb
sbb
cmp
push
movsl
lock
or
add
xor
shrb
cmpsl
cmp
fcomps
popf
xor
and
sub
jo
sti
dec
fidivl
adc
inc
dec
sti
hlt
je
inc
adc
jmp
subb
pushl
xchg
aad
inc
sti
hlt
fldl
pop
mov
cli
inc
and
setge
jbe
lods
adc
adc
or
push
mov
out
mov
push
je
rcl
imul
push
idiv
adc
add
insl
call
and
out
cmpsb
movsb
pmaddwd
in
jl
fadd
xor
mov
outsb
mov
add
addr16
jb
pop
push
jo
call
int
test
movsl
clc
fisttpll
xor
mov
sti
mov
dec
in
insl
loopne
adc
cs
das
xor
xchg
bound
dec
push
jp
xlat
add
push
cmp
push
add
add
push
lea
es
loop
mov
jno
adc
ss
jg
repnz
jg
into
xor
jg
adc
add
test
cmp
and
jmp
cmp
xchg
pop
and
xchg
jbe
push
sbb
jnp
push
cmpsl
shlb
movl
add
add
jnp
mov
sub
rcl
xor
sti
dec
cmp
adc
xor
xlat
push
enter
adc
ret
icebp
adc
push
ficompl
je
pop
mov
dec
arpl
jle
mov
push
jl
sub
or
cmc
lret
and
xor
jbe
out
rclb
xchg
cli
das
in
pop
mov
lock
lds
sti
add
aas
cmc
add
add
flds
add
mov
lea
cltd
sti
repnz
mov
int
movsb
cli
sar
jg
lret
adc
push
xor
sti
jg
stos
jno
push
outsb
inc
cmpsl
pop
xchg
daa
jecxz
dec
jg
inc
cmc
mov
clc
xchg
ret
cltd
outsb
xlat
insl
ret
lcall
stos
lods
push
mov
icebp
jnp
orl
js
jnp
xlat
xorb
push
hlt
jge
cs
adc
icebp
ret
repz
icebp
and
data16
lods
fstl
lcall
or
xor
cmp
add
jns
clc
daa
xor
add
mov
aas
pop
adc
sti
ss
addb
aas
jmp
push
insb
sti
scas
fisubl
idivl
cld
cmpsl
mov
add
icebp
daa
push
xchg
dec
push
sub
int3
mov
sub
stos
enter
insl
insl
sti
mov
pop
adc
mov
jg
cli
jae
loop
out
in
not
xchg
out
inc
jmp
jg
sbb
or
inc
add
push
in
push
adc
lret
andl
add
dec
sbb
pop
lea
xor
inc
pop
xor
roll
lea
aaa
push
incl
adc
add
add
inc
cmc
mov
and
std
jae
or
outsl
inc
sbb
sbb
popf
ds
xchg
lret
xchg
and
ss
inc
add
push
inc
imul
int3
movsb
les
arpl
inc
sub
pop
xor
mov
out
adc
mov
add
mov
add
pop
jmp
add
mov
sbb
data16
roll
lea
push
das
sti
dec
fs
lea
shrb
cmp
sbb
gs
pop
das
lea
push
xchg
cld
mov
out
lret
pop
push
das
sti
sarl
bound
push
mov
mov
push
pop
popl
es
xchg
loopne
repz
cmc
mov
repz
fldln2
loop
cli
mov
out
test
mov
dec
lock
xchg
stos
movsl
cld
addr16
cli
push
fimull
xor
sbb
xchg
out
leave
in
repz
int3
xor
jp
mov
sub
ret
adc
int3
in
ret
stos
iret
adc
mov
xor
fdivl
fidivrs
iret
insl
call
decb
mov
cmpsb
xchg
call
fisubrl
call
add
push
outsl
push
jp
pusha
aam
popa
call
push
jb
repz
popa
call
gs
cmpsb
sti
bound
xchg
popa
fcomi
add
add
add
idiv
cld
decb
push
mov
sub
addr16
add
sub
gs
bound
jecxz
ja
hlt
add
sub
push
mov
lea
sub
insb
mov
and
nop
dec
jno
mov
fwait
add
testl
or
or
mov
add
iret
int3
idiv
fbld
add
rol
add
pop
jecxz
enter
and
call
iret
mov
mov
out
sbb
add
lcall
add
jnp
xchg
ret
das
div
adc
add
and
idivb
and
lea
je
rcll
and
and
pushf
cmpsb
out
jle
add
add
jne
iret
push
push
mov
sub
clc
jae
and
jmp
sbb
sarl
aaa
dec
jg
ds
aaa
mov
sbb
push
lret
adc
jle
leave
repnz
jmp
lahf
add
call
cmp
aam
add
call
cmc
or
ret
cld
insl
lahf
cmp
ss
int
jle
mov
mov
dec
jg
cmc
es
test
xchg
sbb
shlb
pop
test
and
pop
sub
pop
stos
test
inc
pop
and
scas
lds
and
add
clc
xor
js
or
lods
add
repz
mov
dec
daa
xchg
icebp
lea
sti
dec
mov
shlb
in
sti
cltd
dec
lods
enter
call
mov
mov
in
icebp
clc
add
std
mulb
fs
gs
test
outsb
arpl
mov
sbb
sbb
push
jg
dec
lock
jmp
xchg
or
repz
cmp
bound
cli
add
enter
ficomps
adc
test
sbb
add
cmp
mov
jno
xorb
test
add
push
jmp
push
call
test
notl
adc
lods
jmp
outsb
bound
addl
add
test
jnp
js
divl
aas
mov
mov
shlb
dec
push
movsl
enter
nop
fdiv
test
and
jbe
mov
dec
cld
mov
jno
sbb
jle
clc
cs
dec
aas
call
dec
out
stos
jmp
mov
aam
cld
jbe
inc
aaa
cmp
or
xchg
inc
ja
push
cmp
xchg
mov
sbb
dec
xor
jne
aam
data16
sbbb
lret
js
push
jo
cli
adcl
mov
pop
sbb
xchg
aas
mov
les
adc
jmp
shll
xor
mov
loopne
jnp
mov
cld
movsl
divl
icebp
repz
mov
out
inc
aaa
mov
pop
xor
jmp
addr16
iret
aam
jp
push
xchg
mov
outsb
mov
aam
fwait
push
pop
adc
in
testb
in
mov
ss
loopne
mov
movsb
mov
das
outsb
add
pop
cmp
cld
sub
ss
push
jmp
inc
loop
jmp
stc
dec
jno
js
xchg
mov
add
jne
sti
jmp
fsubl
push
shrw
sub
std
xchg
imul
mov
and
aad
data16
out
jle
test
ss
call
bound
sti
xchg
les
test
popa
sti
cltd
or
scas
cltd
jno
divl
movsl
lret
cmpsb
mov
es
add
add
into
pusha
sti
add
push
add
pop
shr
subl
or
in
mov
notl
fdivrp
push
jae
or
add
incl
inc
int3
add
adc
fwait
xchg
jnp
mov
scas
shlb
pushl
or
unpckhps
add
sub
imul
add
sub
and
jne
fucomip
mov
add
add
movsl
shlb
or
mov
std
call
bound
cmc
sarb
cli
pop
xlat
inc
or
inc
xor
inc
aas
xchg
sbb
test
push
lcall
fnsave
push
jbe
xchg
pop
cld
test
insb
mov
xchg
mov
xchg
inc
in
adc
in
adc
add
add
adc
js
jg
ret
push
jbe
xchg
xor
test
jle
jnp
jo
adcl
out
push
xchg
mov
cli
jle
dec
incl
insl
cmc
fsts
add
shll
add
cmpsl
dec
mov
rolb
shlb
add
jae
sbb
es
outsl
mov
scas
jns
mov
insb
mov
loop
xchg
jmp
js
dec
data16
es
xor
hlt
jle
pop
xchg
xor
aam
xor
mov
hlt
imul
call
fwait
mov
arpl
mov
sub
add
mov
out
insb
aam
shll
cli
fisubs
roll
jo
in
repz
jbe
test
mulb
dec
pop
add
mov
mov
out
cmp
cli
mov
shl
ret
test
clc
add
rolb
and
pop
popa
jl
aas
insb
mov
add
stos
dec
dec
push
rorl
insl
notb
fs
test
mulb
add
adc
add
and
sti
bound
adc
insl
insl
test
fadds
mov
jg
pop
and
orl
and
lea
fidivrs
lock
dec
in
push
test
add
pop
jl
or
jnp
dec
addl
cltd
scas
testl
pop
leave
jg
dec
scas
dec
push
insb
scas
push
adc
fs
mov
fnstcw
fldt
imul
cmc
xor
xchg
rorl
test
dec
inc
xchg
add
xchg
stos
xchg
xor
out
rcll
jecxz
add
push
xor
mov
xor
pop
addr16
mov
jbe
orb
call
jbe
hlt
cli
sbb
lock
push
cli
ljmp
jg
call
mov
ret
orb
push
es
cmc
es
inc
popf
testb
test
pusha
repnz
gs
incl
pop
xor
xchg
jb
idivl
imulb
popa
dec
sub
pop
push
roll
and
adc
es
sbb
and
add
into
xchg
add
xor
popf
or
sbb
pusha
sbb
push
push
imul
push
pop
lea
pop
loope
or
mov
fwait
imul
icebp
ljmp
adc
aas
mov
scas
cmp
cmc
pop
data16
out
js
jne
inc
jge
and
scas
or
jo
pop
bound
inc
xchg
ret
sti
sti
sbb
push
push
fnstsw
push
sti
cmpsb
lods
jmp
jb
out
cmp
lods
add
js
pop
jb
dec
push
add
out
out
jle
sti
adc
enter
in
push
mul
push
add
je
and
lahf
add
stos
jne
pop
xchg
push
push
decb
hlt
mov
incb
add
add
add
fsubrl
mov
orb
push
or
xlat
orl
fcoms
sarb
push
movsb
xor
push
pop
out
mov
in
popf
mov
dec
push
fcmovne
jl
lret
iret
out
push
out
pop
call
fildl
imul
pop
inc
test
incl
dec
push
imul
lret
push
sub
mov
out
call
inc
xchg
sbb
mov
sti
xchg
jno
cmp
cmp
jge
push
jp
and
add
rolb
cmc
cmp
loopne
sbb
insb
je
enter
add
push
and
insb
cmp
rorb
xchg
jne
out
dec
push
ds
cli
mov
adc
add
add
lahf
call
dec
aaa
xchg
inc
aad
outsb
pop
int
or
orl
inc
insl
cmp
loope
fidivrl
cmc
jae
push
sbbl
xchg
into
inc
movsb
dec
jo
stos
fldlg2
ss
jle
subb
lcall
jl
cmpsb
je
ds
test
add
notl
nop
mov
cmp
mov
data16
orb
add
in
pop
mov
out
push
int
call
ror
mov
sti
xchg
push
mov
outsl
je
lcall
cmp
bound
mov
inc
sbb
add
add
push
movsl
mov
push
xchg
es
push
shll
sti
mov
add
cli
divl
xchg
jo
call
push
xor
adc
ds
add
out
pop
test
jmp
aad
dec
mov
idiv
sarl
jmp
cmpsb
idiv
or
testl
push
cmpsb
push
pop
mov
mov
in
sbb
and
dec
lea
arpl
ljmp
sbb
lods
sbb
pop
test
add
pop
mov
notl
loop
jnp
clc
mov
test
dec
test
addl
pusha
notl
adc
js
adc
jle
addb
add
add
adcb
or
std
push
xchg
in
pop
jo
mov
int
popf
add
leave
repz
add
lea
bnd
js
filds
xchg
pop
push
jnp
ss
adcl
jmp
sub
loopne
fmull
xchg
incl
push
mov
dec
sub
xchg
add
es
add
jb
mov
mov
sarb
pop
mov
mov
cmc
outsb
leave
ficomps
mov
cmpsl
hlt
mov
add
test
mov
jle
popf
lods
ja
and
mov
jg
out
adc
call
or
mov
out
ljmp
es
push
or
daa
fcmovb
and
enter
jmp
jl,pn
stc
hlt
dec
cmp
push
fs
mov
adc
in
xchg
popa
pop
outsb
arpl
pop
dec
imul
hlt
cld
gs
and
mov
cld
inc
mov
idivl
jg
push
bound
push
sti
gs
std
divb
pop
rorl
add
and
cmp
movsl
ret
in
add
cld
pushl
shlb
push
popf
jne
mov
dec
mov
fs
mov
addb
pop
cld
jae
add
daa
test
lock
push
push
repz
mov
add
xor
divb
mov
cmpb
addb
or
jns
mov
push
add
mov
in
fst
cmpsl
add
shlb
push
or
jl
jbe
sbb
lcall
aaa
insb
aam
aas
jmp
ds
jle
iret
mov
jge
add
mov
add
aas
jg
mov
jnp
ljmp
jmp
lds
ret
add
cmpsl
add
cmp
sbbl
mov
stc
jmp
lock
add
rol
mull
mov
iret
dec
insb
xorl
push
ja
shrl
jns
icebp
adc
sub
movsl
rep
inc
movsl
cltd
push
jl
pop
dec
add
pop
ret
add
add
test
mov
adc
push
je
and
cmp
cs
ret
add
jae
cmpsb
out
nop
cmp
inc
mov
pusha
mov
cmp
add
mov
mov
ds
sbb
pop
sub
pop
xchg
inc
cmc
es
inc
adc
add
outsb
dec
lcall
add
add
pop
add
cmc
es
int
in
jne
add
daa
clc
cmp
xor
inc
lcall
es
xchg
dec
movsb
ret
mov
dec
mov
sbbl
sti
divb
call
bound
call
dec
xor
clc
mov
mov
cmp
jmp
lods
pop
inc
mov
push
test
hlt
pop
sbb
ret
mov
sub
add
pop
jno
lea
push
cld
cmpsb
rorb
xchg
add
pop
fwait
inc
loopne
sbb
push
push
lret
notb
leave
mov
add
inc
loopne
sbb
push
dec
jno
adc
shlb
cmp
push
imul
mov
test
and
add
push
or
add
lcall
inc
jno
add
xor
popf
and
addr16
ljmp
les
shl
js
cmc
aas
mov
aam
lea
ljmp
xor
aas
incl
and
add
add
push
shl
outsb
add
cmpl
xor
xchg
cmc
cmp
mov
cmp
jmp
in
or
add
sub
in
xchg
lds
call
js
sub
sub
lcall
outsb
popf
and
orl
dec
add
dec
mov
add
or
pop
shrb
lret
ja
dec
insb
ja
sbb
subl
sarl
outsl
pop
cmpsb
ds
mov
xorl
add
leave
ljmp
rol
lods
outsl
dec
loop
adc
loope
push
cmp
push
mov
dec
cmp
cli
fwait
add
dec
push
rorl
loop
jb
imul
push
enter
invd
fidivs
push
loop
dec
std
outsl
xor
pop
bound
xchg
es
push
icebp
outsl
loope
out
idiv
cmp
mov
xlat
jb
idiv
sbb
lahf
inc
leave
jg
push
cmpsb
and
xchg
cmc
pop
in
ds
adc
fsubp
cmp
inc
sti
outsb
lds
cld
xorb
and
add
add
faddl
add
jne
or
xor
push
jmp
mov
mov
test
push
mov
pop
sub
shll
lret
pop
hlt
ss
add
lea
sahf
add
xlat
inc
jp
dec
sub
sar
jae
push
adc
mov
add
decl
pop
sbb
pushf
sub
push
scas
mov
bound
add
scas
inc
clc
inc
xor
cmc
jle
jmp
js
arpl
add
add
jle
arpl
daa
test
adc
roll
js
add
cmc
adc
lods
inc
dec
incl
sti
movsl
jmp
mov
add
insb
addr16
mov
push
mov
mov
shll
mov
insb
xchg
sbb
insb
inc
dec
jecxz
cmpb
je
daa
pop
jle
inc
inc
je
pop
ljmp
int
jp
mov
ljmp
push
addl
add
add
addr16
loope
arpl
inc
ljmp
repnz
aas
stos
shll
addr16
adc
push
or
out
ret
imul
stos
jae
xor
mov
sbb
out
jmp
repnz
inc
jp
jb
js
das
push
outsb
mov
lods
inc
dec
cmp
push
push
enter
push
lods
or
xor
gs
inc
sti
es
daa
push
push
dec
sub
jmp
cs
repnz
aas
pop
cmp
cmp
add
test
sti
mov
dec
push
rorl
mull
xchg
callw
testb
ret
push
add
add
test
dec
push
je
lock
cmp
sarl
data16
test
cmp
push
fcmovnu
mov
ret
aaa
sbb
outsl
mov
xor
in
inc
clc
pop
add
add
xchg
add
xlat
movsl
and
sbbl
dec
lea
les
call
sti
enter
add
inc
stos
idivl
adc
loope
sub
cmc
dec
out
sub
fcmovb
jns
add
insl
sti
lret
outsl
test
mov
inc
xor
sub
and
xor
inc
jl
imul
or
xchg
movsl
repnz
das
int3
out
movb
iret
mov
push
hlt
insb
dec
jmp
add
add
mov
push
cltd
cmc
dec
jl
std
loop
fildll
lea
les
mov
xor
movsl
es
mov
add
in
int3
in
jmp
outsb
cmpsl
sti
lret
pop
inc
dec
popa
or
out
cmc
sarl
xchg
fldcw
mov
pop
int3
sbb
jo
xacquire
add
add
sub
testl
stos
int
cmc
es
outsl
dec
dec
push
add
outsb
cmp
and
add
int3
loopne
call
inc
xchg
jnp
hlt
call
pop
es
jne
and
stc
add
leave
cmp
jmp
cmpsl
pop
lds
cmp
jne
out
sbb
insb
mov
mov
aam
add
sub
sar
es
xor
jmp
dec
fs
jmp
adc
aaa
sub
dec
call
stc
add
add
in
and
and
std
cmp
jmp
cmp
and
mov
loop
cwtl
sbb
bound
aaa
pop
inc
mov
lret
cwtl
fsubrl
bound
add
add
pop
dec
and
mov
jnp
ss
pop
in
mov
int3
sub
sub
lea
push
mov
pushf
sub
xor
add
jp
jae
mov
inc
and
pop
dec
push
rcrl
cld
adc
shlb
add
test
ret
dec
pop
gs
insb
push
notb
lds
and
or
decl
jp
add
cmc
mov
and
push
jmp
das
jnp
sar
rorb
popf
adc
add
adc
mov
ja
cmc
dec
iret
push
lret
sbb
sub
adc
or
adc
lret
dec
leave
iret
and
sti
insb
sti
jo
ljmp
stos
out
cmpsl
add
push
and
outsb
stos
and
pop
mov
sar
shrl
in
jmp
cmp
xorb
insb
inc
lahf
sbb
repnz
cmp
push
mov
and
lret
push
add
js
add
insb
into
cmp
daa
loope
push
add
cli
scas
mov
and
fsubrl
data16
add
xor
add
mov
adcb
mov
dec
js
adc
mov
hlt
or
out
cmpb
out
jns
lcall
inc
outsl
push
mulb
data16
mov
inc
leave
into
xchg
jmp
mulb
push
je
insb
push
insb
xor
push
fs
scas
std
scas
mov
call
in
sti
push
inc
je
or
movsb
stos
test
add
add
sti
sbb
push
outsb
in
or
popa
shrl
mov
push
pop
cmp
std
mov
xchg
push
pop
xchg
jmp
xor
pop
jmp
ret
add
inc
dec
add
inc
hlt
jg
mov
in
push
dec
inc
jne
push
sub
xor
fsubl
test
shll
push
fistpll
lret
and
push
and
push
cmpb
call
adc
cmp
cmp
lret
pushf
add
outsb
jecxz
ss
jmp
int
clc
and
fwait
dec
insb
pop
pop
aad
push
mov
mov
add
js
adc
insl
push
inc
xchg
imul
cmc
lret
adcb
sub
gs
jno
lock
jbe
add
xor
cvtps2pi
jns
xor
add
inc
inc
jl
pop
aas
test
sub
aas
push
mov
testb
jnp
inc
pop
clc
mov
inc
cli
mov
fisttpll
mov
popa
jbe
or
aas
pop
lods
or
xchg
add
add
es
dec
jle
add
es
test
jmp
jnp
ds
std
jecxz
shrl
cmp
shl
fistl
outsl
in
jnp
lock
dec
psubw
cmp
cmp
sub
into
jnp
push
add
rcrl
pop
adc
out
lret
cmp
cld
mov
es
jp
push
dec
loop
ljmp
mov
jnp
inc
shrl
daa
jmp
cltd
or
cmp
sub
mov
call
insl
mov
test
inc
sub
jmp
pop
gs
jmp
out
mov
jmp
mulb
mov
mov
and
call
mulb
mov
stos
jne
mov
dec
aaa
push
stc
es
cld
cli
jle
jmp
test
add
mov
inc
fcoms
je
je
add
mov
adc
jo
test
dec
and
pop
fldenv
add
cmpsb
and
add
cmc
dec
adc
dec
decl
cmpsb
rorb
xchg
add
inc
les
add
add
addr16
cltd
jecxz
test
add
or
je
popa
addr16
push
sbb
notb
pop
ljmp
sbb
mov
into
adc
lods
push
test
inc
pop
push
push
testl
cmc
paddb
jg
test
pop
push
clc
pusha
adc
mov
add
shrb
pop
dec
stos
mov
cmc
cmp
sti
jle
lret
push
jns
and
aas
jmp
mov
popa
sti
jbe
adc
xor
dec
int3
xchg
addr16
jge
mov
inc
icebp
push
dec
lea
mov
incl
jo
fs
mov
ljmp
xor
loopne
or
inc
jmp
pusha
xor
lds
das
inc
in
es
js
test
icebp
add
es
jae
rclb
pop
pop
mov
dec
xchg
fs
sub
jecxz
js
or
cmpsb
and
push
mov
int3
fs
inc
lock
sbb
mov
dec
ja
enter
inc
stc
es
leave
cmpsb
test
stc
es
cld
jno
sbb
in
jne
movlps
icebp
mov
cmc
sub
pop
adc
mov
inc
push
movsb
add
or
add
into
lcall
mulb
dec
jb
xlat
mov
sti
push
mov
sti
inc
mull
add
jo
divb
test
jl
test
xchg
add
jmp
cmp
jl
mulb
push
xor
fs
testb
cmpsl
or
sbb
cmp
sub
add
dec
mov
add
mov
pushf
xchg
mov
cmp
idivb
mov
mov
pop
xchg
jne
aam
add
dec
mov
lea
mov
insb
cmp
mov
add
add
mov
add
mov
lcall
inc
in
sub
add
jecxz
or
add
pop
repnz
sbb
rclb
mov
lret
sysexit
inc
mov
inc
jno
cli
fnstenv
std
dec
js
pop
push
jo
cld
lcall
sti
call
sti
jp
aas
push
lds
add
insl
nop
out
lret
notl
nop
cmc
and
dec
cli
or
cmp
sahf
jg
inc
je
mov
popa
mov
sbb
mov
add
cmc
addr16
cmc
aas
mov
mov
cltd
popa
into
arpl
jge
jmp
shll
mov
add
mov
add
pop
mov
mov
imull
adc
insb
push
arpl
lds
sbb
pop
xor
dec
es
divl
adc
cmp
jmp
add
ds
cs
or
mov
shrb
outsl
addb
imul
iret
pop
mulb
xchg
add
add
cmpsl
ret
sub
test
stos
sbb
sbb
mov
imul
icebp
sub
das
jno
jmp
adc
cmpl
lods
mov
add
jae
sub
add
insl
mov
test
clc
es
in
push
je
xchg
mov
pushf
jmp
jae
sti
fiadds
add
add
cmpsl
xor
jmp
add
jmp
ror
mov
test
frstor
add
int3
and
xor
decl
je
push
adc
pop
cmp
notl
pop
and
shll
jl
jl
pop
and
mov
test
inc
cmpsl
mov
dec
and
pusha
and
push
add
add
mov
fisubl
mov
add
testb
and
cmc
ds
ljmp
adc
addr16
cmc
mov
and
ret
shlb
inc
mov
addr16
gs
decl
inc
dec
out
add
mov
outsb
add
aas
addr16
inc
decl
inc
incl
add
add
mov
and
test
add
aas
addr16
test
call
addb
movsl
xor
test
js
and
pop
daa
loop
cmc
xor
add
mov
aad
imul
push
sub
data16
popf
es
jnp
es
enter
mov
add
add
es
push
and
lahf
sub
ja
cmc
es
mov
mov
add
mov
add
or
mov
push
test
xlat
andl
xchg
daa
fstpl
cwtl
mov
adc
cmc
es
jmp
mov
out
or
fiadds
xchg
push
sub
mov
jo
lret
and
mov
imulb
je
adc
ret
or
push
sub
and
inc
xchg
imul
shl
movsl
jne
inc
movsl
lret
lods
stc
dec
jb
je
shr
add
sub
aas
shl
xchg
in
xor
lods
xor
push
mov
push
xchg
add
lret
xor
sub
ficoms
sbb
in
add
fwait
in
or
je
push
sbb
fstpt
repz
or
adc
ret
adcb
mov
pushf
daa
call
lea
daa
add
ljmp
add
mov
jb
mov
in
add
int3
mov
jnp
jmp
and
cmc
add
and
and
push
jle
mov
or
shl
mov
js
dec
push
push
or
adc
mov
test
add
aas
addr16
inc
incl
out
aas
mov
aas
inc
cmp
mov
insl
push
lea
add
add
push
sti
xchg
jo
dec
mov
es
das
out
incl
mov
fdivrl
popl
aam
mov
adc
ds
aaa
add
sub
aas
fmul
hlt
rolb
sahf
insb
pop
popf
pop
jmp
add
es
sub
insl
std
sub
fnsave
pop
fmulp
adc
loope
lea
inc
push
cmc
es
xor
xchg
es
ret
pop
cmp
mov
out
cmc
xor
repz
in
pop
rclb
out
xorb
jmp
jmp
xor
dec
mov
test
cmp
call
icebp
add
ss
out
add
add
fwait
test
cmpsb
inc
int
dec
sub
shrl
std
pop
sub
gs
sti
jmp
popa
popl
jmp
mulb
xchg
jae
and
addr16
fs
add
test
add
add
cltd
push
add
push
dec
push
and
test
test
pop
and
lea
pop
mov
jne
add
hlt
test
add
inc
and
fwait
or
xchg
cmc
dec
push
and
test
test
out
push
shl
mov
pop
adc
fldenv
je
data16
fsubl
add
push
sahf
add
push
addr16
or
sbb
mov
mov
lcall
je
fdivrl
add
cmc
iret
push
mov
mov
mov
xchg
xchg
cmc
cmp
add
outsb
sbbl
push
fldenv
xchg
scas
cli
test
add
cmc
mov
iret
and
push
mov
fmuls
cmp
xlat
cmpb
mov
push
idivl
mov
jbe
or
and
daa
cltd
sub
xchg
cmc
ud0
in
es
jle
data16
bound
xchg
push
jns
call
adc
stos
insl
add
es
xor
cmc
mov
fwait
fwait
sbb
fwait
fucomp
pop
xchg
shlb
int
jno
vmovddup
fildl
cmc
test
push
or
cld
jmp
mov
add
aas
faddl
cmc
es
shrl
or
xor
jmp
add
and
mov
lods
xor
rcl
add
and
les
add
jns
insl
fwait
or
dec
and
push
mov
enter
inc
and
scas
push
and
punpckhwd
and
xchg
fidivrl
call
push
inc
dec
sbb
adc
gs
push
add
imul
insl
push
in
insl
cs
cmpsl
sub
and
jnp
and
movsb
je
sbb
cli
cmpsb
sub
int
lods
pop
cmp
or
daa
and
cld
xor
int3
sub
jno
mov
in
or
sub
leave
hlt
lret
daa
add
les
mov
hlt
pop
jb
inc
adc
dec
popa
nop
push
add
mov
decl
inc
lock
sub
add
adc
push
int3
sub
or
std
mov
mov
xor
std
sbb
loope
inc
xchg
fisubl
cmc
pop
ret
adc
add
pop
lea
push
sti
xchg
movsl
mov
xchg
jle
adc
ret
mov
mov
neg
dec
add
cmc
movsl
insl
add
or
dec
out
push
fincstp
dec
mov
cli
cmp
mov
ss
in
je
incl
cmc
or
call
xchg
add
or
out
sahf
push
sti
outsl
xchg
add
repnz
adc
cmc
lock
sti
outsl
addl
jne
scas
xchg
add
add
rorb
dec
daa
add
scas
and
xor
fdivs
les
xorb
imul
test
out
cmc
jne
mov
cmc
mov
push
or
sub
dec
and
lret
lock
push
jl,pt
or
dec
stos
iret
add
shll
cli
push
dec
ret
cmc
push
ja
cmc
es
adc
call
jle
es
adc
mov
movsl
dec
in
loope
insb
shlb
dec
cmp
pushl
mov
popa
imul
xor
es
hlt
ficomps
adc
add
mov
stc
add
stos
call
popf
es
sahf
ss
divb
add
or
jo
adc
pusha
xor
mov
test
aad
sub
ret
inc
mulb
add
dec
ja
push
lods
in
test
add
fnstenv
lea
dec
cld
pushl
xchg
sbb
mov
inc
add
dec
lea
add
add
dec
cld
pushl
jnp
addr16
and
inc
add
idiv
and
xor
and
cmpl
mov
rorl
ljmp
cld
hlt
loopne
add
inc
clc
pop
jae
je
adc
mov
xor
mov
js
dec
sti
lret
inc
shl
arpl
or
dec
sti
cli
xchg
outsl
add
or
ja
cmc
or
rcl
and
dec
push
xorb
or
out
aas
cmc
xchg
inc
jne
mov
jne
mov
andl
dec
arpl
or
dec
mov
mov
mov
out
adc
xor
cltd
insb
cwtl
push
push
rorb
add
add
es
mov
mov
xchg
sarl
sbb
popf
rcrb
dec
scas
stos
lods
repz
or
inc
lods
xor
popf
js
dec
mov
and
lret
mov
jns
enter
mov
sbb
cmp
add
es
mov
out
xchg
sbb
or
add
jnp
ret
adc
add
cmc
xor
test
sti
out
or
movsl
imul
adc
pushf
fcoml
daa
add
jle
call
sub
out
inc
xchg
fcoml
push
jg
mov
jbe
add
mulb
dec
pop
dec
and
orb
push
mov
add
pop
stos
mov
mulb
lea
sti
ss
pop
sti
insl
mov
mov
mov
mulb
sti
add
cmp
shl
jmp
decl
test
test
pop
movsl
cli
stos
imul
dec
movsl
add
mov
mov
popf
dec
or
sbb
lea
add
mov
add
xor
in
sub
leave
daa
idiv
or
push
fldl
sub
and
mov
aaa
lret
ljmp
lds
dec
inc
notl
repz
popa
pop
mov
jecxz
add
push
pop
in
add
cmc
fidivl
je
ljmp
mov
cs
add
cmpsb
mov
mov
addr16
push
inc
xor
lret
repnz
or
xor
sbb
jns
add
cmc
add
cmc
or
dec
add
or
dec
add
or
xchg
lock
inc
mov
cmp
ss
or
add
cmc
lea
or
mov
sbb
test
or
pop
arpl
add
add
push
roll
cmpsb
fistpll
cmc
shll
jl
adc
ja
cld
sub
mov
fs
dec
sub
ret
xchg
mov
call
mov
lods
and
imul
pop
mov
jl
mov
sub
add
lods
ret
push
dec
fs
mov
daa
add
divb
stos
jbe
insb
into
sbb
push
mov
fs
jae
sti
out
sub
call
je
call
cmpsl
stos
inc
mov
push
sti
sbb
cld
shl
addb
aas
shrb
push
or
es
icebp
outsl
or
pushf
fcomps
add
or
bound
add
add
sti
jo
adc
lods
xchg
jge
mov
fxch
add
popa
idiv
cltd
bound
mov
jo
lea
roll
fs
cmp
outsl
add
movsl
idiv
shll
jbe
cli
adc
hlt
mov
adc
faddl
stc
jb
jge
outsl
jne
daa
divw
add
add
add
clc
lcall
pop
adc
dec
out
or
rcr
call
fsubs
add
fsub
xor
push
mov
cmpsb
fdivl
dec
mov
dec
sti
movsl
push
lret
roll
mov
sti
add
or
mov
subl
dec
sti
add
out
aas
cmc
or
repz
inc
jne
in
xchg
loopne
pop
int
lock
ljmp
pop
or
sub
cli
or
inc
pop
and
mov
call
es
pop
and
inc
push
xchg
push
ds
es
or
cmp
pop
jmp
scas
jno
les
es
add
push
inc
inc
call
gs
out
mov
repz
cli
lcall
mov
jmp
add
mov
or
mov
sbb
dec
or
sub
add
mov
jmp
inc
mov
jmp
es
and
fstpl
testl
add
add
addr16
call
dec
daa
lea
xor
jb
dec
push
add
push
leave
ja
sti
out
jp
call
mulb
data16
cmp
mov
cli
cld
mov
imul
ret
call
icebp
lea
icebp
add
add
add
cmp
cmpsb
add
add
jl
add
les
add
and
sbb
dec
sub
mov
xor
add
or
cli
xor
nop
jl
xor
inc
and
and
or
xorl
iret
push
pop
sbb
inc
mov
mov
push
mov
inc
and
shlb
sub
aam
xor
lea
imul
mov
out
cmp
fimull
dec
and
jb
xchg
inc
roll
cmp
add
cmp
sub
or
std
push
sub
push
cmpb
rcrl
addb
jle
or
add
out
xor
sti
jle
push
xor
popa
sub
mov
adc
ret
jle
add
sti
mov
ss
xchg
test
push
adc
jnp
call
ljmp
lcall
inc
sbb
cmc
es
jo
or
mov
adc
das
icebp
popf
int3
out
cmpsl
out
and
or
add
adc
add
ss
add
es
enter
cld
add
loope
sub
es
imul
imul
inc
jne
testl
push
sbb
pop
sbb
sbb
sbb
mulb
sti
std
xchg
and
std
push
cmp
add
je
dec
fsts
ljmp
cli
dec
jnp
adc
push
jb
sub
sub
bound
cli
cmpsl
cli
or
inc
lds
pop
inc
int
sbb
sti
mulb
lahf
stc
out
push
or
stc
xchg
xor
inc
add
ljmp
add
pop
ret
add
mov
jmp
sahf
and
je
xor
add
pop
cmp
add
and
lea
ljmp
mov
add
sti
decl
adc
sbb
sub
xchg
test
push
push
pop
data16
add
cmc
adc
pop
imul
in
push
lea
add
add
push
push
push
cmc
arpl
data16
lcall
stos
fldenv
and
sarb
jbe
add
pop
mov
add
mov
es
add
std
jbe
cmc
std
out
mov
sti
dec
push
inc
jne
jbe
mov
loopne
cmp
rolb
idiv
decb
mov
mov
lods
into
cli
add
push
inc
cmc
jl
or
add
add
mov
dec
aas
cmc
adc
mov
sbb
mov
hlt
es
add
or
imul
xchg
pusha
pop
mov
add
es
add
inc
js
es
add
mov
add
push
jg
add
add
call
test
es
mov
cmc
es
adc
mov
jae
mov
jle
add
cmpsb
stc
sbb
add
insl
push
add
negb
cmp
fwait
test
xor
sti
sbb
daa
add
mulb
lock
mov
fwait
test
xor
sti
sbb
cld
xchg
lea
jmp
push
adc
insl
mov
int
outsl
ret
jmp
test
test
bound
push
sti
jo
push
jg
ret
and
mov
pop
xchg
add
push
out
push
cmp
into
push
dec
cmpsb
aas
std
stos
dec
push
mov
addr16
mov
add
add
dec
jnp
imul
cmp
push
adc
and
inc
push
repnz
or
inc
cld
test
add
or
push
fisttpll
lcall
add
xor
push
pushf
je
push
inc
sbb
sbb
dec
jmp
cmpl
jne
xchg
lock
adc
cmc
decb
and
jo
mov
out
xchg
je
in
shr
fxch
dec
es
mov
mov
inc
aad
out
lcall
add
std
cmp
jno
or
adc
sti
or
adc
cmc
jl
repz
push
test
dec
inc
fucomi
lret
or
add
std
jbe
cmc
std
out
add
add
push
cmp
sbb
or
and
cltd
jl
jp
adc
hlt
es
add
test
jbe
adc
cmc
es
lea
movsl
nop
mov
jge
jno
inc
ljmp
pop
out
flds
cmc
test
jle
sub
or
les
jmp
jl
push
jmp
add
popf
and
cmc
test
data16
inc
outsl
cmc
es
mov
es
push
cltd
push
cld
jmp
push
bound
scas
mov
jno
add
inc
je
jmp
push
add
jmp
pop
iret
mov
pusha
mov
mov
nop
or
inc
jo
mov
jmp
push
lahf
inc
push
push
sti
sub
testb
stc
bound
mov
add
push
and
jmp
mov
test
add
movsw
out
mov
cmp
in
add
xchg
lea
mov
add
out
mov
cmp
rolb
int3
movl
mov
pusha
mov
adc
mov
cli
popf
inc
and
xor
pop
movl
mov
pop
mov
data16
flds
pop
cmc
jmp
jnp
popa
jl
push
mov
fwait
xchg
mov
add
lahf
test
inc
jge
std
mov
flds
popa
jl
pop
mov
push
xchg
add
push
xchg
cmpsb
stc
adc
std
mov
rcrl
popa
insb
inc
and
fildl
jmp
xchg
push
jne
cmc
std
mov
jnp
scas
call
add
popf
stos
sub
cmc
xorb
iret
fdivl
mov
es
jnp
and
add
mov
add
xorb
into
icebp
mov
pop
orl
es
jl
aas
jmp
cmp
aaa
add
andb
into
out
int3
mov
or
mov
add
add
jmp
add
popf
and
popf
fwait
jmp
bound
and
imul
call
sahf
xor
testb
icebp
bound
sbb
popl
je
jmp
pop
cltd
mov
movsb
in
pushf
mov
bound
sbb
inc
js
adc
js
inc
rorl
inc
or
testb
mulb
bound
and
add
mov
push
mov
icebp
add
data16
sbb
xor
cmp
sbb
xchg
adc
or
pop
mov
mov
xor
add
out
and
xorb
add
mov
mov
mov
mov
inc
out
sub
xor
xchg
add
aas
lock
sub
sar
mov
sbb
mov
ljmp
xchg
xor
sub
jb
inc
mov
ja
setge
int
test
cmpsl
aam
cmc
setge
push
ud0
ror
mov
cld
lcall
mov
add
mov
inc
sub
ret
popf
mov
sahf
jbe
ret
popa
insb
dec
into
mov
fdivrp
call
xchg
lcall
jbe
mov
cmp
inc
jl
in
add
lods
sub
mov
mov
mov
add
add
or
mov
push
jnp
cli
call
mov
cmc
mov
xchg
mov
ret
mov
es
jnp
cmp
add
stos
test
cmc
mov
pop
mov
dec
jge
xchg
mov
test
add
call
mov
mov
leave
icebp
bound
ja
jo
xor
aad
and
push
psubusb
jle
sahf
or
mov
mov
jmp
add
imul
mov
dec
out
xchg
stc
shll
mov
fs
imul
push
loopne
rorl
mov
sbb
test
sub
add
add
mov
cmpsl
fildll
test
and
out
mov
mov
leave
pop
filds
andl
push
sub
mov
cli
out
call
mov
stc
mov
push
ss
bound
rcr
sub
inc
call
pop
and
loopne
jmp
fisubs
ljmp
cmpsb
cmp
call
pop
popw
test
sub
add
sub
je
cld
jnp
in
bound
cwtl
call
xor
pushf
adc
test
xchg
clc
jne
cwtl
jl
es
pop
inc
in
or
push
test
dec
cmp
add
jb
add
inc
sbb
test
rorb
sahf
or
hlt
ud0
or
decl
das
jne
lea
jle
sbb
dec
adc
test
es
imul
add
stos
and
jb
fs
mov
push
mov
add
add
add
sbb
jnp
mov
and
push
sbb
scas
repz
mov
add
stos
stos
das
jp
pop
inc
push
outsb
pop
ret
push
cmp
js
mov
jae
inc
sbb
jge
xor
sbb
scas
mov
push
es
jo
xchg
add
inc
jno
mov
mov
vpmaxsw
shlb
xlat
je
fwait
mov
icebp
add
fildll
jb
mov
popf
daa
test
sbb
cld
nop
push
icebp
add
or
jg
std
cli
pusha
sub
out
xchg
cmp
add
loopne
xor
xor
xchg
add
add
xor
jl
inc
mov
insb
stc
lret
dec
test
sbb
adcl
sar
decl
add
mov
add
mov
out
add
mov
mov
dec
idiv
and
sarb
dec
incl
add
mov
inc
hlt
insb
and
push
dec
jnp
and
mov
or
add
add
and
lret
rolb
inc
loopne
jne
add
jbe
cmc
adc
jne
daa
xchg
shlb
jne
pop
mov
ret
out
mov
sub
jo
sub
sti
and
sbb
in
xchg
mov
into
pop
outsb
adc
cli
pop
movsl
push
enter
call
jg
adc
incl
add
add
add
iret
bswap
cli
or
adc
nop
dec
or
lcall
cmc
ud0
out
out
pushl
mov
shl
jmp
add
test
call
mov
cld
imul
add
es
jmp
sub
scas
sub
push
cld
outsl
xchg
stos
and
add
add
js
scas
and
cmc
test
add
mov
ss
mov
jl
ds
cld
notb
out
cmc
cmpsb
push
jp
es
loopne
out
or
test
cmp
jnp
lcall
mov
mov
add
add
sti
cli
push
jne
add
mov
je
jne
clc
jmp
adcb
insb
ljmp
stos
stc
es
push
in
into
repnz
cmp
push
mov
iret
lcall
stos
out
mov
or
sti
loop
es
add
incl
jmp
psrlw
adc
sti
push
pop
psubq
mov
iret
push
fdivrp
out
dec
ss
movsb
push
idiv
ret
sbb
xor
add
add
mov
dec
add
add
and
ret
push
mov
add
test
xchg
jns
or
jns
or
cmp
ljmp
pop
out
imul
jp
orl
dec
nop
enter
xor
insl
mov
orl
mov
cmp
loope
out
sbb
xor
sub
jp
and
jbe
movsl
divb
cmc
dec
jl
sbb
sahf
cmp
into
scas
adc
mov
jle
or
mov
jbe
and
fdivrp
mov
inc
mov
mov
sti
out
pop
insl
lcall
xchg
fsubrs
adc
sub
add
divl
in
sbb
jle
add
add
stos
add
cli
push
dec
inc
call
mov
and
int
and
push
push
test
orb
mov
push
inc
mov
adc
adc
sub
jb
sbb
andl
in
loop
mov
movsb
es
out
scas
out
test
pop
mov
movsl
mov
dec
and
add
cmpsb
fnstcw
jnp
pop
cmpsb
jle
jae
jle
mov
adc
fs
sbbl
jae
call
dec
std
and
jnp
add
dec
mov
jg
pop
jne
out
mov
pop
mov
cmp
inc
lea
inc
and
ja
clc
hlt
pop
lcall
jle
out
add
lret
and
hlt
mov
into
cmp
and
jge
imull
pop
stos
jbe
add
dec
mov
aad
addr16
adc
or
fs
jns
scas
addr16
adc
push
sti
cld
jb
inc
jmp
in
mov
shlb
jl,pn
sbb
adc
test
mov
lea
push
lea
add
add
push
lea
push
incl
mov
dec
adc
test
push
incl
dec
jne
orl
pushf
ljmp
xor
adc
imul
call
cmp
hlt
push
add
push
or
out
jmp
stc
mov
mov
xchg
jl,pt
aas
add
cs
sub
add
add
int
mov
into
gs
daa
cwtl
jnp
jmp
adc
jno
stos
cmp
lret
and
ret
cs
cli
mov
and
jns
stos
sbb
lcall
pop
jmp
jne
sub
push
mov
add
mov
add
cs
cmp
in
and
jns
int
mov
sti
lds
data16
lsl
icebp
and
stos
test
add
repz
repz
jo
aam
imul
jp
sbb
jo
and
mov
fs
pop
iret
add
jp
and
stos
sub
in
pop
adc
xchg
push
mov
mov
jmp
sarb
mov
add
add
add
repnz
sbb
ljmp
int
push
rcrl
sub
scas
repnz
jle
jp
sti
in
imul
push
hlt
outsb
js
adc
je
sub
jle
cld
push
add
out
je
test
dec
sub
push
cmc
jl
push
add
dec
leave
sub
repz
xchg
sbb
in
add
add
fsub
pop
sbb
cli
jb
stos
cli
xchg
lods
push
sti
popf
stos
pop
call
jb
stos
icebp
jne
pop
push
idiv
xchg
test
repz
xlat
push
call
add
out
ret
pop
insl
or
mov
in
notb
sub
cmpsl
inc
idiv
fsubrs
push
jae
push
add
in
ljmp
sub
rolb
add
int3
insb
add
pop
movsb
jmp
shl
push
out
xor
sub
out
daa
add
scas
add
fwait
mov
adc
mov
in
dec
push
mov
repnz
mov
sarl
add
lcall
jnp
sbb
mov
mov
addb
add
add
incb
std
aam
jne
push
enter
or
and
jmp
mov
push
lods
sbb
pop
loope
incb
loope
mov
inc
lea
jmp
sar
in
adc
clc
ja
mov
out
xor
inc
and
stos
cmpl
repz
sbb
ret
xchg
test
pop
or
repnz
or
fcmovne
icebp
cmp
sbb
mov
repnz
sbb
pop
negl
sbb
sbb
das
push
sbb
jl
and
adc
add
stc
mov
popf
mov
cli
popf
jo
hlt
es
mov
dec
cmc
mov
call
add
fwait
stos
repz
sahf
pusha
hlt
cmc
es
not
adc
test
xchg
jmp
inc
inc
sarb
sbb
call
pop
adc
sbb
lock
adc
lock
mov
dec
pop
insb
test
jno
jno
xchg
sbb
sti
lock
mull
add
popf
cmpsb
psubsb
es
mov
sahf
dec
xor
jecxz
push
test
xchg
je
adc
out
addl
push
test
pushf
and
data16
add
icebp
xorl
and
sub
pop
add
mov
jge
pop
out
add
sbb
pop
mov
adcl
dec
loopne
inc
dec
loopne
jp
and
inc
jne
cmp
mov
cmp
es
inc
push
je
fldt
push
xchg
add
in
xchg
pushf
jl
inc
cli
xchg
pushf
jl
aaa
and
mov
mov
and
adc
jno
cltd
dec
sbb
std
divl
cmc
aas
or
test
imul
add
and
add
aas
cmc
lcall
and
fld
jmp
add
inc
and
insb
cwtl
jmp
jmp
data16
jl
sti
adc
stos
adc
inc
ds
outsb
sub
xchg
hlt
out
mov
dec
lods
iret
notb
in
mov
f2xm1
sub
jmp
inc
sub
into
inc
mov
sub
sahf
pop
out
cmc
cmp
and
sub
add
sub
add
add
inc
mov
es
data16
es
and
jmp
divl
sub
out
pop
repnz
arpl
mov
push
cmc
es
fidivrs
or
add
add
add
inc
hlt
add
sti
test
mov
mov
mov
sub
addr16
dec
daa
add
jg
imul
xchg
and
sbb
sahf
mov
add
addb
negb
add
and
scas
lods
pop
jmp
fs
push
jb
sbb
jmp
add
add
es
ja
add
mulb
je
ja
add
mulb
jne
pushf
jmp
notl
push
xor
sahf
mov
add
push
testl
push
push
push
push
jbe
divb
or
test
andl
cli
push
fsubr
lcall
cld
pop
and
ret
lcall
pop
cmp
scas
xlat
int
adc
and
loopne
sbb
push
mov
punpckldq
mov
enter
and
cmc
out
sub
mov
mov
or
aam
jne
pop
mov
call
mov
idiv
and
es
mov
fadds
adc
add
add
decb
jns
push
jl
incb
test
cmc
incl
jle
sti
mov
sbb
decl
push
or
cmp
add
jmp
jae
mov
add
decl
add
es
or
popf
stos
or
iret
add
xchg
sbb
ret
aad
rcrb
mov
cmp
outsb
mov
inc
add
cmc
es
lods
xchg
inc
and
cmc
es
lods
insb
std
mov
add
or
sbb
inc
ficoml
push
adc
cmc
es
xor
dec
cs
imul
pop
es
xchg
add
cmpsl
cmp
icebp
es
imul
jmp
adc
add
ret
call
andb
call
notb
cld
push
sbb
data16
add
jmp
xor
mov
call
in
jmp
jb
sbb
sub
jb
xchg
push
clc
call
out
jb
out
pop
sti
scas
in
addr16
pop
mov
sbb
add
add
adc
fs
in
cli
add
pushf
add
pop
test
maskmovq
les
dec
lcall
and
sqrtps
idiv
cmp
mov
cmp
popa
cld
addl
and
add
mull
xchg
sub
shlb
xor
mov
pop
mov
cmp
add
add
imul
rol
mov
lcall
cmpsb
out
cmc
nop
adc
mov
adc
sti
test
sub
sbb
inc
in
int
jl
or
mov
mov
dec
incl
or
sub
mov
enter
enter
add
add
mov
xor
sti
sahf
repnz
insb
or
aaa
cmp
and
xchg
clc
xchg
xchg
add
outsb
daa
sub
jae
in
mov
cs
mov
daa
jmp
mov
daa
jmp
jg
sub
add
sbbb
notb
sub
fsubl
add
xchg
push
hlt
mov
sub
scas
sub
insb
adcl
notb
sub
fsubl
push
icebp
mov
sub
scas
icebp
adc
sbb
lock
notb
sub
fsubl
push
arpl
mov
fabs
xchg
add
mulb
lea
loope
jmp
push
jle
mov
loopne
jb
lods
inc
addl
add
add
pusha
pop
xor
out
sti
hlt
dec
xor
jmp
mov
and
icebp
es
negl
sbb
add
jbe
adc
mov
subl
sub
fs
jle
jmp
sbb
jmpw
adc
gs
add
daa
bound
in
lods
call
mov
movsl
repnz
jmp
lods
pop
hlt
cltd
push
je
fistpll
adc
test
test
mov
testb
jae
mov
cld
sbb
add
xchg
das
add
mov
bound
data16
sub
add
idiv
add
jmp
decl
mov
incl
add
add
cli
test
push
mov
leave
or
repz
sub
sbb
push
dec
incl
jae
dec
or
add
bswap
adc
movsl
jp
stc
call
repz
sti
neg
int
jge
dec
xchg
out
cmc
sti
add
clc
arpl
cmc
iret
xchg
add
iret
out
sbb
pop
icebp
ret
out
dec
dec
mov
xchg
std
hlt
iret
cli
and
addl
inc
inc
call
jbe
fs
pop
jmp
dec
mov
cmc
es
or
call
cld
or
mov
dec
addl
xor
call
enter
cwtl
push
scas
stos
sbb
fnstsw
mov
add
mov
add
add
add
dec
in
cmc
es
in
loope
inc
xchg
mov
cmc
dec
in
add
ret
pop
inc
loop
call
or
xor
call
fwait
push
add
testb
mulb
sti
pop
add
aad
in
jo
mov
mulb
je
arpl
xor
jp
cli
out
int
adc
mov
ss
mov
dec
push
jmp
es
cld
repnz
movsb
jns
sub
loopne
in
fdivp
ds
push
mov
jae
inc
xor
pop
jbe
add
imulb
mov
stc
and
sldt
aam
inc
mov
add
add
repnz
je
testl
add
add
incb
pop
rolb
arpl
mov
or
mov
pop
dec
add
fs
ret
sub
ja
mull
push
sub
rcrb
inc
sub
nop
enter
ljmp
push
and
add
or
incl
add
add
add
cmc
int
mov
xor
adc
into
sbb
negb
push
jmp
lock
sub
cs
aam
jne
aaa
mov
out
dec
js
or
call
mov
int
adc
test
ja
cli
stc
bound
xor
ret
mov
dec
imul
pop
xor
mov
int
rolb
je
daa
adc
ficomps
mov
pop
clc
ret
xchg
mov
jnp
push
int3
jne
call
mov
sbb
sub
jle
dec
fdivp
inc
scas
pushw
inc
mov
mov
sub
out
push
rolb
hlt
ret
and
jmp
sub
pop
cmpsl
push
cs
add
add
out
sar
icebp
hlt
xor
outsb
add
movsl
add
in
cmc
es
jnp
lock
es
jmp
jo
mov
subl
xor
insw
das
xor
pop
shrb
clc
loope
mov
xor
lods
std
fnstsw
dec
sub
pop
cs
jl
std
loope
sti
jae
jae
jmp
or
sbb
fnstcw
loope
test
loope
add
es
imulb
iret
sub
movsl
jg
mull
add
xor
in
js
fst
and
dec
insl
or
add
mov
push
sbb
adc
mov
xchg
loop
add
testl
or
add
mov
sbb
add
add
mov
sbb
sub
mov
je
sub
mov
sub
xor
cmc
jne
sub
xorl
decl
push
clc
push
fs
cmc
incl
mov
stos
pop
jne
cmc
pushf
or
insb
xchg
adc
lcall
loopne
repz
cmc
dec
pop
push
popf
and
sti
mov
xchg
inc
adc
xchg
ja
rcl
mov
jg
scas
or
push
xchg
movsl
in
jle
cwtl
es
or
jp
inc
inc
out
hlt
mov
jae
inc
pop
jp
dec
les
ficomps
push
adc
push
call
sbb
xor
test
and
das
xor
sti
jl
jl
cmp
test
sub
roll
jo
rcll
rcll
shrl
jmp
out
inc
scas
push
jg
ror
ljmp
mov
ljmp
pop
rorl
mov
sar
and
mov
shr
icebp
xchg
call
cli
fs
mov
add
mov
loope
xchg
lds
fxch
jo
mov
add
nop
ljmp
repz
icebp
jecxz
jg
repz
push
fst
stos
mulb
or
es
scas
xchg
inc
in
and
jo
mov
inc
dec
or
sarb
imul
cs
inc
jmp
add
out
les
test
das
mov
sub
shr
insl
or
cltd
or
and
mov
and
jo
in
sub
mov
mov
shll
xchg
cwtl
mov
push
dec
add
int3
push
dec
cwtl
adc
add
cmp
pop
dec
pop
out
sub
dec
add
add
add
xor
stc
jb
jle
lea
andl
test
and
add
sub
je
mov
jns
mov
push
cmpps
push
ret
sarb
rcrl
jmp
mov
cmp
and
gs
test
pop
outsb
xchg
mov
cmp
jne
push
mov
fnstsw
sti
loop
pop
add
inc
popa
sbb
int
rolb
add
inc
shll
jo
xlat
pushl
cmp
cmc
rclb
icebp
enter
push
pop
or
or
mov
push
mov
jbe
test
cli
jp
int
gs
int
stc
fadd
jg
cmc
int
xchg
int
clc
jbe
in
jge
adc
mov
xchg
xchg
daa
push
add
xor
loopne
inc
sbb
xorl
aad
xor
sbb
jnp
cmp
mov
cmc
es
shll
pop
rcll
sbb
xor
gs
andl
ret
add
outsl
insb
inc
loopne
pop
mov
out
pushf
aaa
add
mov
test
stc
jae
in
xor
call
mulb
jg
add
pop
mov
xor
lahf
inc
jns
imul
xor
in
push
aad
lods
add
and
mov
jle
hlt
jbe
mov
mov
stos
mov
sbb
pusha
add
push
pop
sub
out
lods
xchg
jb
add
add
or
add
jne
hlt
jmp
mov
aaa
daa
pop
push
scas
add
aas
add
arpl
pop
or
or
clc
adc
add
test
push
add
jnp
jl
flds
mov
cmp
divl
dec
iret
ljmp
fadds
ljmp
loop
loopne
imul
in
cli
jmp
inc
xchg
add
and
repz
mov
aam
mov
aad
loopne
iret
mov
call
add
fadd
push
mov
jp
hlt
mov
jle
lea
sti
sbb
daa
jbe
lock
in
insl
or
jp
fmull
sbb
add
add
scas
cwtl
mov
popa
iret
incl
jne
adc
ljmp
ljmp
aad
jno
mov
cmp
test
mov
inc
test
mov
jg
mov
add
lods
add
cmc
insl
inc
mov
fnstcw
hlt
in
or
call
jmp
add
push
test
jns
bndstx
lea
loope
and
jl
jns
cmp
scas
dec
adc
rcrb
xor
gs
rcrb
pop
aaa
or
movsl
cmpsb
sub
inc
shlb
sbb
out
mov
or
jb
stc
adc
and
sub
pop
sub
xchg
jmp
mulb
daa
sub
aad
repnz
mov
sbb
jne
call
scas
mov
es
test
or
inc
sarl
pop
add
mov
add
pop
cmp
addr16
mulb
add
es
jae
or
nop
roll
stc
fcomi
xchg
imul
or
daa
add
aad
adc
pop
lock
cmp
fsubl
cld
mov
cmp
jne
and
cli
decl
leave
cmp
test
stc
sub
cmp
push
pop
test
add
xchg
aaa
mov
addr16
adc
insb
sub
jecxz
divl
daa
adc
mov
add
add
popf
inc
adc
push
mov
mov
pop
mov
and
mov
idivl
lea
dec
data16
mov
cli
call
mov
je
push
int3
cli
rol
je
in
cmc
cmp
xor
adc
cmp
test
les
sbb
mov
or
and
cmc
enter
add
add
lock
pop
jle
clc
jne
push
je
movsb
or
std
cmp
repnz
mov
jne
repnz
dec
add
push
push
mov
or
repnz
sti
add
mov
xorl
test
and
add
iret
pop
inc
sbb
push
cmp
dec
cs
cmp
jns
add
add
and
stc
pop
iret
gs
cmc
pop
insl
mov
xchg
out
stos
jbe
cmc
les
jmp
or
hlt
das
adc
gs
push
add
adcb
dec
jmp
ljmp
popa
daa
cltd
es
sub
into
jg
sub
add
and
mov
add
add
out
icebp
out
out
lock
push
jne
fadds
and
push
int
into
xor
cli
mulb
add
push
es
test
out
ss
cltd
and
aad
add
cwtl
dec
outsl
mov
outsl
js
rorb
or
jmp
mulb
or
push
mov
cli
bound
sbb
incl
add
add
mov
xchg
pop
ja
sub
lcall
rorl
push
mov
scas
inc
dec
loop
or
jbe
punpckhdq
or
mov
cmp
or
inc
xchg
xchg
adc
test
mov
mov
xchg
add
sub
incl
add
add
lret
fsubrl
mov
lret
cmc
or
js
or
push
mov
std
sbb
sti
data16
mov
pop
lock
jnp
inc
lds
mov
int3
jno
outsb
or
enter
stc
les
dec
xchg
idiv
cmp
add
fdivrs
sbb
sti
or
and
cmc
in
mov
hlt
aam
dec
idivl
pop
out
jle
divl
push
je
mov
test
add
xor
push
cmp
daa
repnz
das
jmp
add
xchg
cltd
add
inc
sbb
mov
mov
add
lahf
mov
or
lods
or
outsl
shld
mov
arpl
mov
jl
or
lahf
sub
xchg
sub
mov
rorb
xor
sub
popa
add
cmp
sub
jmp
insl
cmc
lret
sbb
out
push
icebp
push
out
push
fsqrt
imul
fmul
int
fs
test
sbb
add
xor
lods
pop
daa
add
fs
fs
daa
xchg
and
sub
into
jg
cmp
adc
add
add
into
cli
push
push
and
mov
jmpw
sbb
inc
int
loope
loope
test
sti
je
int
icebp
dec
in
fidivrs
mov
and
negb
mov
repz
loope
call
push
sbb
dec
inc
bound
sbb
shl
sbb
add
roll
int3
int3
jae
sbb
inc
sub
jae
fistl
call
call
test
sbb
jno
and
cmc
call
sbb
dec
dec
loop
or
stc
neg
or
je
mov
add
mov
and
loope
sbb
mov
rolb
push
adc
adc
add
cmc
or
mov
mov
hlt
ljmp
clc
sub
mov
pop
test
add
jne
pop
or
sbb
cmc
cmp
mov
clc
sub
jp
fidivrs
push
jne
bound
jo
add
cmc
shlb
aas
stc
fiadds
incb
inc
hlt
insb
cmp
xor
add
add
ret
mov
mov
pop
xchg
inc
push
adc
es
jae
jns
push
lahf
pop
push
stc
fwait
movsl
sub
aas
jo
jae
outsb
inc
leave
cltd
in
or
fnstcw
mov
stc
mov
outsl
fmull
outsb
std
jnp
pusha
mov
jmp
ret
mov
jno
repz
add
add
addr16
js
popf
stos
adc
add
mov
pop
inc
add
rorl
pushf
lret
add
pop
mov
add
jg
pop
push
shrb
jle
mull
and
jne
adc
lds
push
jmpw
sbb
inc
dec
mov
scas
shll
add
mov
mov
or
add
mov
test
jmp
push
and
jmp
idivb
or
mov
imul
mov
std
fcoms
std
pop
add
sub
add
enter
add
fsubrl
bound
sub
mov
call
pop
ljmp
ja
addl
enter
jp
stos
sub
mov
adc
mov
cmpsb
loop
pushf
sub
lea
mov
xor
sub
xlat
imul
inc
cmc
fwait
repz
add
out
addl
xor
fmull
cmc
in
sbb
pop
cmp
xchg
mov
add
add
push
les
imul
mov
xchg
push
jmp
call
daa
lods
jmp
or
xor
pushl
pushl
dec
inc
add
into
out
jbe
ds
push
pop
adc
int
jns
into
imul
mov
jns
loope
aaa
flds
push
inc
adc
int
add
daa
cmpsb
jmp
pusha
fcomi
jno
loope
out
jmp
cmp
sub
push
out
jmp
sub
test
data16
cmc
cmp
mov
es
or
es
cmp
scas
ret
sbb
out
add
jmp
hlt
jnp
int
lods
xor
jle
sub
xor
insb
ret
out
fistl
mov
jb
adc
lods
stc
jge
cmp
les
lods
mov
mov
add
mov
cld
fdivrs
push
test
jne
jp
add
and
adc
test
sbb
scas
cmp
nop
pop
cli
jle
pop
push
and
pop
loope
add
add
and
inc
shl
je
dec
sbb
testb
test
jg
clc
stc
pop
mov
loop
mov
loope
sub
cmp
adc
decl
jmp
and
xor
subb
shlb
loopne
inc
push
inc
pushf
roll
jne
stc
leave
cmp
xchg
ret
sub
xlat
ljmp
sahf
inc
mov
loopne
mov
jmp
inc
jo
mov
inc
test
shlb
fxch
adc
insb
cmpsb
push
sbb
jmp
cmc
test
and
and
mov
jmp
inc
inc
sbb
xorb
xchg
xor
jne
ret
hlt
loopne
add
out
test
leave
xor
shl
xchg
or
inc
cltd
rolb
and
lock
push
call
pop
in
enter
lock
lds
cli
fisubl
push
fcoml
push
insb
inc
lahf
add
ss
or
icebp
push
jecxz
mov
dec
rorl
pop
adc
cli
pop
daa
push
outsl
rcr
shll
dec
add
add
add
fs
pop
std
and
icebp
sub
push
jbe
js
jl
cli
and
fsubrl
sub
mov
jmp
cmp
into
outsb
icebp
out
mov
dec
fidivrs
outsb
inc
add
in
push
jle
jae
std
sub
das
inc
scas
mov
cmpsb
test
add
add
roll
test
bnd
ljmp
sub
js
or
or
test
mulb
je
or
jmp
inc
mov
add
cmc
mov
cs
insl
mov
or
fcmovne
and
mov
cld
sub
sub
jecxz
sahf
shl
pop
add
loop
or
idivb
loope
es
mov
cmp
lcallw
stos
test
push
fnstenv
test
jns
cmc
incl
mov
cmc
cmp
add
clc
lcall
pop
sub
or
cmc
incl
mov
cmc
cmp
adc
cmp
and
sets
incl
add
add
ljmp
or
jmp
cmp
inc
pop
sub
cmc
call
jae
mov
pop
adc
ja
mov
cmc
andl
test
mov
decl
rcrb
pmaddwd
cld
xchg
insb
xor
jns
ljmp
iret
fisttpl
add
cmp
out
ljmp
push
adc
shr
cmp
and
iret
stc
sbbl
and
cmc
les
cmp
mov
jmp
insb
add
cld
ljmp
imul
les
jle
mov
xorl
faddl
in
loope
or
mov
jmp
lock
aas
jle
add
add
sub
iret
dec
repnz
in
sarb
add
aas
test
out
movsb
sub
sub
in
pop
cli
or
mov
or
mov
mov
add
je
add
test
inc
sub
cmp
bound
add
add
sub
fs
xor
bound
and
cmp
pop
dec
mov
mov
cmp
sbb
sub
cli
jmp
sbb
outsb
cmpb
in
in
cmp
xchg
shlb
or
or
testb
adc
pop
stos
jo
cld
pusha
xor
je
mov
inc
xchg
push
push
hlt
push
and
add
sti
mov
jge
mov
mov
inc
add
data16
add
mov
add
mov
jne
xchg
into
adc
cmp
lock
int
rcrb
jl
cs
aaa
sbb
sub
rorl
int
rolb
add
or
je
sbb
sti
pop
and
inc
adc
data16
ror
js
push
sti
mov
lret
xor
jmp
call
jge
mov
or
cmc
xor
cld
insb
add
xchg
in
mov
in
jmp
lcall
je
inc
roll
clc
jg
add
cmc
iret
add
push
popf
ljmp
add
hlt
dec
mov
test
jecxz
outsb
enter
lock
jae
fdivs
cmp
rorb
dec
lock
adc
sti
movl
out
sti
push
mov
jo
fldcw
push
jmp
cmp
mov
fs
cmp
movsb
xchg
insb
push
stc
pop
scas
mov
test
or
inc
cmc
pop
jo
jns
mov
adc
lock
data16
ret
jge
adc
aad
scas
fwait
lar
jl
ljmp
call
jb
adc
inc
cmp
pop
ss
rolb
and
inc
jns
jmp
push
imulb
pop
imul
or
jp
dec
arpl
rolb
add
add
test
sbb
lcall
adc
gs
add
sbb
test
scas
xchg
adc
negb
sub
out
adc
mulb
add
shrl
push
pop
into
jno
dec
mov
leave
sarb
data16
sub
or
or
call
rcll
add
daa
aam
mov
sub
mov
sub
loopne
mov
mov
mov
insb
sbb
pop
mov
sub
mov
sub
and
shl
mov
xor
stos
mull
mov
fsubp
cmovs
add
lock
add
add
rorb
jmp
test
mov
inc
out
lea
add
add
test
jmp
shlb
sbbb
pop
mov
cmc
mov
jnp
std
inc
mov
cli
ljmp
adc
xchg
aas
sbb
ss
hlt
cli
inc
ret
dec
add
jno
mov
xor
dec
mov
or
cmpsl
andl
or
add
add
subb
popa
mov
loop
mov
jne
inc
aaa
adc
adc
enter
in
sub
test
lahf
cmp
ret
ficoms
insb
arpl
sub
jl
js
mul
lods
out
and
ss
int3
inc
into
push
sub
sbb
cmp
sbb
and
mov
xor
in
je
scas
pop
in
xor
out
test
std
inc
jno
movsb
bound
jp
or
outsl
sbb
fwait
pop
jp
or
pop
add
mov
imull
cmp
loope
loop
out
adc
test
mulb
aaa
xor
inc
aam
sahf
scas
cli
insl
arpl
cmpsb
sub
add
mulb
jg
divl
and
cmp
push
scas
cli
xchg
leave
jne
sub
hlt
divb
cmc
idivl
mov
fstpl
sbb
fstp
or
mov
in
jmp
repz
jmp
or
push
insb
lcall
hlt
pushf
jecxz
cli
movsb
ljmp
jmp
cs
jl
out
adc
or
add
add
sbb
inc
test
cmp
xchg
cmp
cli
push
push
dec
in
ljmp
lods
int
fwait
movb
mov
jae
push
outsb
add
sbb
addr16
jae
add
jae
or
pushl
cmc
dec
adc
add
push
addr16
jae
les
pop
cwtl
adc
cmc
sldt
add
mov
xor
shll
hlt
xor
add
jmp
cli
sbb
xlat
cli
add
cwtl
inc
hlt
cmp
std
das
jg
in
cmp
repnz
mov
push
pop
mov
dec
cld
jbe
add
js
ljmp
ja
loopne
mov
push
pop
mov
mov
mov
xchg
mov
cmp
mov
andl
push
mov
push
add
mov
es
aad
dec
sbb
mov
and
dec
hlt
and
push
and
or
imul
cmc
es
mov
gs
popf
xor
pushl
pop
inc
addr16
aas
xor
mov
inc
mov
add
add
outsb
mov
scas
xor
lods
and
stc
aaa
mov
adc
ljmp
outsb
push
lds
fwait
adc
repz
mov
jo
or
jmp
aad
out
jmp
inc
or
pop
add
in
push
testb
add
mov
cli
out
adc
mov
sub
sub
test
loopne
cli
push
ret
ljmp
sbb
insb
dec
and
jmp
mov
inc
outsl
repz
push
bound
aas
cli
sub
sub
xor
mov
sbb
sbb
fldl
sbb
add
adc
psrlq
jmp
stos
jnp
pop
push
test
or
cmc
incl
add
add
push
adc
and
jne
fwait
sar
mov
lcall
int
or
adc
jmp
adc
fsubl
pop
nop
pop
aam
jge
cmc
call
cld
fldcw
jnp
lea
cmp
aaa
pop
adcl
incl
push
hlt
pmaddwd
mov
jb
fildl
push
cld
sbb
bnd
mov
call
in
cmc
ss
adc
cmp
adc
mov
jl
call
or
sbbl
sbb
push
out
cmovns
jo
push
nopl
or
jmp
lret
inc
jl
inc
aaa
mov
mov
cmp
jmp
stos
call
aas
cmc
lcall
inc
shll
bound
mov
jnp
dec
pop
or
scas
mov
pop
xor
jmp
mov
icebp
mov
sbb
add
sar
or
lods
add
addr16
call
les
out
inc
adc
jmp
loopne
in
ljmp
sub
out
je
add
add
add
xor
adc
aad
cmp
sub
mov
test
mov
scas
incl
mulb
add
in
mov
out
pusha
mov
out
add
inc
cli
ss
dec
cmp
cld
cmpsb
pop
or
and
mov
es
add
mulb
pop
xor
mov
adc
mov
dec
inc
jmp
sub
outsb
cld
jo
scas
test
test
scas
or
push
mov
decl
hlt
setnp
mull
mov
inc
mov
lret
jmp
add
in
adc
dec
push
lret
pop
insb
cmp
sbb
dec
daa
add
sub
mov
sahf
mov
jmp
fcomi
incl
fwait
push
sbb
fdivs
flds
test
negb
shll
repz
into
test
or
sub
cmc
nop
xchg
cwtl
inc
sti
cmp
sbb
stos
jne
mov
jle
push
or
add
add
iret
cli
jb
mov
aas
mov
ljmp
mov
loope
or
sar
xor
nop
push
mov
fiaddl
ja
aad
jbe
add
cmp
or
sbb
cmc
jo
incl
cmp
ljmp
test
aad
sar
out
cmp
aam
ror
sbb
cmc
fidivrs
and
addl
mov
call
fcomi
sbb
subl
xchg
mov
jo
inc
loop
out
or
fimull
cs
mov
fstpl
jmp
das
test
stos
out
pushf
fisttpl
and
test
call
fdiv
sbb
lock
sbb
add
add
fiaddl
jo
inc
push
lods
fistpll
push
jg
sbb
or
fwait
mov
call
ret
lods
cli
mov
adc
sub
cs
cltd
daa
add
mov
adc
mulb
add
daa
or
daa
add
or
fidivrs
out
inc
cmp
mov
mov
adc
cli
sbb
push
negb
test
add
add
cli
push
ficoml
cmp
es
xor
add
or
es
add
add
mov
add
cli
push
mov
into
cmc
adcl
or
lret
mov
pop
test
shl
call
jmp
js
jne
add
mov
lret
clc
adc
push
pop
mov
and
jmp
add
add
lret
in
imul
icebp
or
dec
push
scas
or
cmc
xor
std
cmpsl
add
push
call
js
cmc
lods
decl
lret
cmc
adc
sahf
mov
cmc
mov
dec
xchg
or
insb
add
ljmp
or
xor
pushf
repz
decl
jno
aam
mov
push
lock
add
add
or
adc
push
add
xchg
or
insb
ljmp
mov
or
xor
test
jne,pt
add
cli
sub
ljmp
nop
or
adc
push
add
xchg
in
mov
ss
es
sub
add
movl
movsl
cltd
inc
add
lock
jge
lret
lea
cmp
add
js
sbb
adc
sbb
jmp
mov
pop
pop
pop
add
push
and
mov
and
ljmp
cld
sbb
mov
inc
lret
push
mov
in
add
add
or
out
lods
push
sbb
jno
bound
inc
fucomp
jmp
dec
mov
or
mov
cmpsb
je
in
jmp
mulb
xchg
add
push
xor
outsb
push
xor
jmp
xchg
jo
cmp
sub
push
xchg
and
loope
sbb
ret
negb
add
insl
insb
mov
loopne
stc
push
mov
repz
sub
cmp
icebp
adc
push
sub
cli
cmp
fpatan
xor
fs
sbb
and
push
bound
dec
lret
cmp
pop
mov
jl
push
or
ss
inc
adc
sub
add
jp
orl
push
shll
ljmp
movsl
sbb
or
inc
lock
cmpsl
shlb
cmc
sbb
std
fcmovnbe
je
sub
or
sbb
call
scas
or
push
inc
xor
data16
out
jno
lods
jne
mov
jl
roll
inc
dec
xchg
cmpsb
outsb
jl
cwtl
push
jbe
add
dec
or
sbb
aam
lret
jl
jns
nop
push
test
sti
jae
or
xor
nop
incl
adc
dec
popa
inc
sti
mov
rcll
shrl
pop
mov
rcrb
mov
cld
ljmp
gs
fidivl
gs
out
mov
call
add
xor
fisubs
test
movsl
or
xor
data16
scas
mov
data16
sbb
xchg
pushf
dec
add
es
out
out
jle
shrl
push
mov
mov
aad
inc
sub
xchg
pushl
imull
jle
and
add
add
inc
pushf
cli
push
xor
insl
xor
cli
jbe
test
mulb
or
sahf
cli
out
out
test
fucomp
sahf
popf
cli
adc
adc
push
sahf
cli
mov
stos
sub
lcall
dec
ss
lcall
call
cmpsl
popf
cli
sub
pop
shr
jg
inc
popf
mov
sbb
dec
and
pop
add
daa
jnp
add
btsl
push
sub
nop/reserved
test
cmc
inc
add
adc
jno
jbe
in
cmc
incl
sbb
add
call
push
insb
cmovg
ret
es
add
xor
fcoms
idiv
sub
inc
enter
rcl
out
xorb
leave
sahf
xor
mov
adc
jae
xor
and
cmc
cvtpi2ps
adcl
decb
dec
es
cmc
cli
iret
cli
mov
inc
adc
fcomi
jnp
neg
cld
cmp
inc
or
leave
cli
and
cld
adc
add
or
leave
cld
repnz
sti
xor
call
jl
clc
ss
jg
rcr
ss
cli
jle
lret
lret
std
incb
add
stos
lret
movsl
dec
adc
dec
clc
jnp
cmpsl
cmp
add
push
fst
pop
sahf
or
sub
sahf
inc
incl
in
repz
bound
sahf
and
in
or
xor
iret
ucomiss
inc
stc
sub
add
lock
sti
addr16
push
imulb
into
out
aam
add
mov
loopne
mov
roll
mov
jae
stos
sub
ss
addr16
repz
inc
mov
mov
jg
sub
add
sahf
incl
lds
ret
and
popf
cli
jmp
int
add
cmpsb
inc
add
push
xor
out
add
add
es
pushf
push
pushf
shll
dec
mov
or
iret
xchg
jb
jae
add
xor
out
sub
out
icebp
std
cmpsl
shll
test
sahf
or
or
pushf
mov
imul
das
test
add
mov
mov
testl
add
add
adcl
stc
incb
cmc
jne
push
divl
imul
repz
call
mov
mov
pop
jmp
pop
dec
and
push
adc
dec
pop
divl
pop
ret
jg
pushl
cmc
jne
push
or
mov
filds
fsubl
and
inc
and
inc
mov
arpl
incl
add
add
imul
sub
fld1
pop
xchg
ljmp
sub
inc
xor
inc
les
and
cli
call
cld
push
sbb
xor
or
dec
pusha
inc
cmc
push
push
or
inc
add
or
sbb
adcb
lret
mov
cli
mov
hlt
aaa
or
pop
dec
add
jo
add
add
call
jbe
addr16
nop
je
adc
or
or
stos
nop
jns
mov
lcall
lret
add
xchg
negl
pop
shl
call
mov
cltd
fcomi
jae
pop
push
add
dec
lret
aas
movsb
sub
jno
out
add
fmulp
das
lcall
mov
test
add
adc
cli
inc
and
push
loope
cmp
test
push
lock
lret
ficoml
mov
out
mov
sub
cltd
pushl
scas
mov
push
call
shrl
sbb
fs
or
cwtl
rcll
adc
ljmp
cli
faddl
add
add
subb
pushf
test
aas
mov
mov
push
fwait
xchg
cltd
cli
jmp
mulb
cli
jl
sub
sbb
test
sti
pop
leave
cltd
shll
mov
popf
je
lods
adc
add
mov
add
idiv
jae
iret
ljmp
add
mov
in
ljmp
pop
mov
outsl
jae
inc
mov
shrb
sub
adc
cmc
jne
sbb
ljmp
loop
add
test
popf
xor
and
sbb
mov
lods
sbb
rep
out
add
add
jecxz
pop
cvtpi2ps
divl
popf
mov
pushf
add
cmc
jo
sbb
shlb
sti
inc
jle
mov
clc
cli
and
movl
mov
cli
mov
jp
cmp
push
xor
mov
leave
je
jns
add
loop
mov
je
mov
incb
dec
or
inc
enter
push
ficompl
inc
jp
add
pop
or
lea
call
jle
repnz
jnp
hlt
push
xor
daa
xor
fdivs
clc
sbb
fwait
pop
xor
movsb
in
jnp
pop
jo
lods
mov
call
mov
or
loopne
xor
add
mov
ljmp
inc
insb
in
or
leave
dec
ljmp
fdivrl
fwait
out
test
add
add
sbb
jp
std
sub
xchg
fwait
testl
je
jns
xchg
cli
mov
and
add
pop
jecxz
pusha
arpl
mov
lock
loope
imul
jbe
push
xor
pop
jecxz
bound
lods
push
in
in
pusha
cmp
add
shlb
xor
lods
push
in
out
adc
pusha
cli
lods
cmp
xor
inc
in
leave
cmpsl
fwait
jmp
sbb
inc
add
and
testb
sti
pushf
push
xchg
shll
addr16
jne
insl
jae
hlt
pop
lret
adc
punpcklwd
fdivl
call
aam
pop
cmp
push
jne
cmc
pop
pop
je
jno
add
cmp
in
mov
lcall
out
or
pop
adc
mov
push
sbb
in
jmp
das
push
cli
cmp
dec
add
sbb
mov
shll
fs
jge
pminsw
incl
add
add
mov
add
pop
testb
push
xor
outsb
or
mov
jne
lds
cmp
insb
add
lcall
jge
lods
mov
sahf
jg
mov
push
xor
dec
jns
xor
add
call
push
cmp
js
dec
add
not
test
jge
xchg
lods
ret
jno
inc
dec
fcoml
es
repz
add
in
call
rcrl
enter
and
push
or
les
ljmp
dec
fidivrl
sbb
fwait
out
fdivrs
push
out
push
inc
inc
adc
sub
pop
iret
lahf
sbb
pop
mov
ret
lcall
xchg
pop
dec
or
push
add
es
pop
xchg
imul
cmc
stos
sub
notb
mov
sub
lea
add
popf
ljmp
cmpsb
lea
sbb
fdivl
adc
pop
aad
call
mov
nop
mov
jmp
sbb
mov
bound
sahf
adcl
cmp
divb
loop
mov
adc
push
add
jnp
fldt
stc
jbe
pop
enter
adc
into
push
add
cmp
gs
add
jbe
add
xchg
xchg
sahf
ljmp
pop
notl
pop
gs
xlat
mov
and
jecxz
and
dec
xor
jne
mov
addl
add
add
mov
fwait
inc
jo
jne
inc
inc
mov
andl
jne
mov
lock
jno
dec
push
test
sub
add
repz
and
add
jnp
xchg
xor
outsb
push
push
sti
mov
inc
xor
sbb
or
jae
daa
lods
add
jge
pop
jmp
push
cmp
adc
xchg
lcall
scas
jne
mov
mov
pop
mov
dec
sbb
xor
cmp
sahf
pusha
mov
add
jae
test
pop
sti
pop
std
aaa
push
das
xor
fs
or
cmpsl
cli
push
aam
cld
cli
notl
pop
mov
dec
dec
rcrl
add
cmc
mov
jb
xor
in
clc
sub
in
fwait
paddd
icebp
stos
xchg
insb
adc
jns
flds
sbb
hlt
sti
cmp
add
iret
mov
jmp
mov
sub
sbb
out
movsb
xchg
test
lret
pusha
lret
rcll
dec
add
je
pop
mov
mov
mov
outsl
cmp
add
bound
ljmp
or
cmp
dec
jecxz
es
adc
lret
icebp
jg
push
push
sbb
sti
je
xchg
je
sahf
pop
fsubr
mov
shr
mulb
mov
push
pop
push
out
or
movsl
cli
movsb
or
out
pop
fnsave
xchg
rclb
pop
jae
mov
inc
add
inc
adc
fdivp
jl
rclb
out
shlb
xor
push
push
xor
loop
dec
pop
nop
mov
fistl
adc
fcmovne
addl
int3
jae
push
jne
add
dec
sbb
daa
int
sbb
push
or
inc
and
dec
mov
cmc
test
add
in
sti
jae
rcr
pop
lret
enter
adc
lcall
pop
or
mov
call
outsb
cmp
test
adc
or
insb
aam
aaa
aaa
out
in
fisttpll
dec
add
inc
and
call
testl
add
jmp
sub
or
and
xchg
into
or
xor
mov
sti
sub
add
xor
outsb
fcoms
outsb
mov
or
mov
out
jg
push
inc
sub
sbb
aam
jo
dec
mov
aas
dec
mov
cmpsl
das
mov
jne
call
fs
mov
mov
flds
jmp
aam
adc
mov
mov
ficoms
stos
and
icebp
mov
int
out
cmc
popf
and
repnz
sub
cmp
mov
incl
sbb
mov
mov
lock
and
ds
add
and
out
and
repz
enter
lea
adc
stc
lea
jne
aam
mov
adc
sbb
mov
dec
lea
clc
add
inc
inc
jo
inc
push
add
mov
adc
insl
or
decb
or
lahf
repz
cmp
add
add
cli
into
xor
xchg
push
sbb
imul
sbb
pop
push
fnstenv
divl
int3
jae
je
into
pushl
mov
add
bnd
decl
cld
mov
cmp
sub
add
cmpsl
out
cmp
pop
lea
shl
xchg
fildll
mov
jnp
clc
int3
cmc
addl
add
cltd
inc
sbb
outsb
pop
data16
lea
add
fs
rorl
mov
push
jo
and
inc
sbb
lods
and
or
adc
jno
mov
add
cmp
or
mov
hlt
add
jg
adc
jg
imul
cli
xor
adcl
test
test
add
add
incl
add
push
test
icebp
iret
push
jg
xchg
sub
xor
add
cmc
cmpb
sbb
pusha
add
sbb
nop
movsl
stos
cmc
jge
sbb
push
or
call
push
out
mov
es
es
fisttps
jns
mov
jmp
shll
xchg
lods
loope
orb
add
add
adc
ljmp
add
mov
dec
pop
stos
mov
xor
out
mov
sti
jle
xchg
lods
lods
mov
sti
movsl
out
xchg
stc
cld
cmpsl
idivb
jmp
dec
or
or
xchg
ljmp
jno
xor
mov
lods
dec
adc
dec
aad
pop
movsl
js
icebp
stc
lea
jb
add
add
cmp
in
out
push
out
outsb
lock
ljmp
cmc
mov
xorl
lods
pop
cmp
data16
sti
aam
mov
push
test
repnz
jl
dec
and
xchg
test
enter
mov
addl
out
inc
add
jae
add
mov
cmp
insl
lcall
sub
lcall
js
cmp
mov
cmp
outsb
lcall
add
cmp
add
cmp
mov
add
stos
cmp
sub
cmp
jb
cmp
and
cmp
xchg
mov
add
cmp
out
cmp
xor
cmp
dec
mov
add
mov
add
push
xchg
cmp
cmc
cs
cmp
cmc
ja
cmp
cmc
cld
cwtl
cmp
cmc
xchg
cmp
cmc
cwtl
cmp
cmc
rorb
cmp
cmc
movl
cmp
cmc
popa
mov
cmc
xchg
cmp
cmc
and
cmp
cmc
push
popa
cmp
cmc
es
pusha
sub
out
and
cmpsl
pop
sbb
pop
pop
adc
xor
daa
mov
xchg
clc
and
es
data16
jmp
stc
sub
or
xor
pop
icebp
in
pop
pop
out
xor
adc
add
add
out
sbb
and
sbb
and
adc
adc
dec
dec
or
rorb
in
fimull
ljmp
scas
dec
mov
push
add
loop
xor
fdivrs
xor
fidivrs
ss
cmp
mov
ret
mov
cli
jmp
jmp
test
test
xchg
addr16
add
addr16
add
inc
add
test
aad
add
gs
add
gs
add
fs
add
add
xchg
inc
add
add
cwtl
inc
add
decl
cmp
add
cmp
outsb
xchg
cmp
dec
xchg
cmp
adc
cmp
add
pop
cmp
add
or
add
or
add
pop
cmp
add
add
add
add
add
add
cmp
add
pop
cmp
add
push
cmp
add
out
mov
push
popl
add
lock
push
xchg
cltd
jns
js
lods
mov
jl
lods
pop
pop
fdivrl
mov
push
jl
movsl
cmc
mov
mov
ss
jns
sbb
cmp
xor
int3
cmp
or
pop
add
es
adc
nop
sbb
pop
mov
add
js
inc
std
mov
mov
mov
push
popa
ja
jmp
add
mov
mov
sub
mov
jp
push
push
mov
scas
arpl
jo
jo
xor
gs
mov
and
call
inc
and
jb
mov
mov
push
jg
jl
mov
pushf
jg
mov
js
or
cmpl
mov
and
jae
cmpsl
fwait
add
pop
ljmp
inc
inc
das
pop
dec
jmp
sbb
pushl
in
push
and
sti
outsb
gs
mov
sub
icebp
loop
ljmp
mov
fistl
adc
dec
leave
test
mov
cmp
dec
call
pop
sub
add
add
jecxz
pusha
jnp
sti
out
pop
movsl
inc
icebp
mov
scas
test
cmp
shl
sbb
sti
mov
movsl
inc
mov
mov
add
mulb
add
or
mov
int
inc
lahf
jbe
stos
int
push
pushf
sti
push
movsb
movsl
filds
push
push
int
mov
xchg
incl
add
add
or
cld
inc
mov
sub
or
pop
cli
pop
inc
inc
cmp
je
jbe
in
and
and
xor
inc
add
inc
cmp
jae
pop
jmp
add
jg
add
inc
cmc
xchg
test
push
and
stos
pop
jl
inc
sti
sub
mov
add
cli
insl
add
adc
xchg
and
mov
sub
out
cmc
outsl
aas
repnz
cmpb
inc
stos
out
idivb
rclb
test
or
adc
lea
aad
lods
cli
outsb
int
gs
mov
add
and
lods
stc
les
dec
rep
jns
jnp
add
add
daa
je
hlt
setp
jp
cmpsl
mov
mov
call
clc
das
jl
xchg
loope
sub
and
es
js
push
jo
jnp
lods
jnp
arpl
cs
mov
adcl
jnp
outsl
or
insl
mov
loope
xor
pop
dec
cmc
sub
mov
and
movaps
cltd
mov
sub
inc
push
pushl
cmp
cld
call
stc
jne
sti
push
daa
aaa
mov
jns
pop
sub
xlat
jmp
sbb
push
adc
orb
cli
jmp
xchg
daa
mov
sub
insb
jle,pn
push
sarl
repz
cmp
add
shrb
sub
jp
jmp
xor
xchg
sub
decl
inc
int3
xlat
out
mov
iret
xchg
test
je
stc
inc
in
sarl
cmp
cmp
jmp
mov
mov
pop
mov
add
add
loop
mov
or
sbb
test
into
mov
adc
cmc
lea
idiv
repz
mov
call
sti
test
sub
xbegin
notrack
sub
dec
push
push
movsl
je
or
inc
jp
movsl
add
pop
jl
hlt
jne
push
enter
dec
jmp
imul
add
cld
inc
mov
mov
aas
enter
adc
jo
cmpsl
cli
sbb
add
inc
inc
hlt
cli
or
mov
mov
push
out
add
xor
testb
pop
push
cld
mov
insl
into
pop
pop
pushl
jo
cli
repnz
in
sub
jmp
add
add
mov
hlt
adc
rcll
jge
jp
das
gs
jae
dec
js
test
aas
repnz
sub
insl
dec
sub
mov
test
or
aam
sbb
cmpsb
ja
test
and
mov
das
add
sbb
xor
popf
cli
add
hlt
xor
mov
dec
jns
aas
out
dec
jl
pop
mov
mov
jmp
sub
xor
or
imul
push
mov
cli
idiv
lahf
scas
jl
pop
ljmp
sbb
xchg
stc
es
roll
jmp
or
shlb
push
jno
pop
ljmp
jno
add
mulb
mov
ss
cmp
adc
sbb
mov
ljmp
fildl
jmp
movsb
ljmp
sarl
jmp
lea
xor
mov
mov
bnd
pop
fmuls
push
stos
clc
sbb
stos
into
mov
or
repnz
lods
repz
into
cmc
call
pop
mov
fsubs
test
dec
call
insb
hlt
inc
call
cmp
add
add
adc
or
outsb
pop
push
pop
cld
jmp
shlb
icebp
mov
sub
cld
stos
je
or
push
repz
or
pop
test
fs
mov
mov
inc
mov
dec
sti
loopne
jne
imul
mov
cli
cmp
jg
cli
or
aaa
faddl
daa
cwtl
push
xchg
jne
imul
mov
test
mov
je
add
shlb
and
jns
adc
ljmp
cmpsl
fst
adc
cmp
insb
stos
pop
iret
push
aad
icebp
shlb
shll
mov
add
pop
je
das
add
cltd
add
sbb
mov
jl
jl
shrl
out
imul
in
cs
jmp
lds
addr16
data16
ljmp
xchg
mov
lods
mov
xchg
jo
push
repnz
testb
xor
repnz
pop
jae
sbb
add
jle
mov
inc
jg
in
or
jae
jmp
mov
loop
add
pop
mov
cmc
jge
jmp
cltd
mov
sbb
sbb
idivl
push
daa
jl
stos
daa
mov
push
jo
sbb
jle
loop
lods
out
mov
add
and
add
push
cmp
or
adc
orl
pop
es
jl
cmc
decl
add
pop
mov
jge
fildll
sbb
das
cwtl
sub
sti
orl
cmpsb
and
mov
mov
push
pop
xchg
imul
push
ucomiss
jne
pop
rcll
adc
sbb
pop
call
es
adc
jae
mov
cmpsb
mov
in
xchg
jae
and
decb
lods
pop
rcll
lods
xor
aas
cmc
testb
cmp
pop
sbb
das
lahf
adc
insl
add
or
or
hlt
aas
cmc
roll
push
adc
jmp
jmp
aas
cmc
cmp
add
add
int
in
jg
xchg
cld
mov
decb
es
cmc
mov
jo
inc
adc
jmp
mov
fnstcw
pop
and
test
sti
insl
repz
pushl
outsl
or
jno
call
out
icebp
push
fsts
and
ss
notl
sub
sub
add
fwait
xor
adc
adc
call
pop
and
call
add
xor
sbb
pushf
sbb
push
cs
test
stos
lcall
sub
and
call
int
push
jle
and
enter
dec
jo
jmp
or
es
cld
push
inc
jmp
add
lea
dec
loope
notl
xchg
push
pusha
test
ljmp
in
outsb
popa
ds
xchg
sbb
es
in
inc
popa
ds
push
or
pop
push
aaa
push
stos
mov
dec
xor
or
daa
add
sbb
outsb
and
mov
jle
sarb
push
lock
inc
lock
orl
cmc
inc
lock
cmc
inc
mov
xchg
ret
sti
jle
and
add
push
sub
jmp
jg
aas
cwtl
ds
xor
je
notl
shll
test
add
add
sbb
outsb
add
cli
sub
jb
sbb
test
test
pop
scas
or
and
jle
xchg
cmp
pushf
imul
cmpsb
jno
cs
xchg
xchg
popl
scas
cltd
adc
outsb
add
mov
and
sub
add
jg
leave
xchg
dec
test
sub
push
sub
int
xchg
les
dec
xor
lock
lret
in
int
jge
adc
cld
mov
repnz
hlt
inc
mov
xor
dec
mov
sbb
xorl
mov
repnz
in
int
cmp
jmp
sbbb
xor
push
ror
mov
insl
and
inc
xor
xchg
repnz
pop
sahf
testl
jo
jae
adc
dec
mov
in
sbb
and
cmp
loopne
stos
repz
or
scas
ret
add
add
sbb
mov
cmc
xchg
mov
pop
cli
scas
push
jmp
icebp
cmp
test
mov
add
add
xor
aam
add
repz
pop
jle
aam
adcb
aad
movsl
fisubl
push
popa
pop
jo
sahf
pop
fdivr
push
mov
pop
sub
sbb
shrl
add
sub
call
popa
repnz
jecxz
sti
hlt
lret
jmp
mov
cli
add
sub
sbb
andl
in
call
pop
pop
add
mov
dec
or
popf
pop
push
jmp
repnz
loop
mov
push
and
add
lret
addr16
push
adc
mov
sbb
add
mov
adc
mov
xchg
mov
xorl
push
or
sub
rdpmc
sub
jno
notl
out
aaa
cmp
add
add
jle
pop
outsb
inc
or
std
hlt
dec
clc
subb
add
inc
aaa
xor
mov
test
push
shrl
das
cmp
push
xchg
inc
pushf
cmp
and
ja
add
mov
mov
popa
in
inc
shll
insl
stos
in
cmp
mov
xchg
js
push
jle
xchg
mov
or
add
jnp
mov
xchg
test
ss
push
movsl
iret
enter
and
xor
cmpsl
jp
jmp
fwait
rcrl
fwait
pop
mov
fwait
aas
sbb
jge
xchg
imul
jmp
push
cmc
es
xchg
sub
sub
jb
pop
fistl
aad
popf
and
dec
add
add
add
mov
xor
jno
xor
jmp
lret
dec
jg
cmp
push
call
fdivl
daa
test
in
cs
negb
add
jb
arpl
insb
insl
dec
insb
or
mov
mov
xchg
xor
adc
jno
mov
ss
add
add
and
test
jecxz
in
lahf
test
mov
add
mov
inc
inc
jo
repz
imul
call
outsb
lret
ss
fs
cltd
inc
xor
and
xchg
push
jb
pop
lahf
pop
sub
aam
cmc
call
fs
mull
inc
xor
idiv
mov
jge
jp
mov
mov
or
jmp
xor
seto
notl
xchg
mov
sti
sbb
cmp
pop
mov
or
pop
dec
mov
adc
mov
cmp
das
test
mov
divl
sbb
adc
cmc
cmp
ficoms
or
sub
call
stc
pop
xchg
cli
mov
fwait
add
push
cmp
dec
test
inc
mov
mov
mov
inc
mov
or
insl
dec
push
movb
or
adc
mov
cmp
push
jle
out
dec
test
jae
inc
mov
mov
add
add
add
adc
daa
and
mov
test
fnstsw
push
xchg
add
add
ud0
stc
adc
rcrw
mov
mov
gs
xor
daa
push
orl
popa
cmp
xchg
fcmovnbe
ret
nop
sub
sub
sub
add
fcmovnu
xchg
jmp
mov
or
daa
fs
xor
xchg
out
fs
adc
std
pop
lock
aaa
test
add
test
add
int
jmp
outsb
add
lock
dec
jae
push
pop
adc
cmpsb
and
pusha
xor
fmuls
lcall
push
out
bound
sub
stos
inc
icebp
and
mov
push
push
inc
popa
je
imul
shlb
and
jo
add
add
sahf
cli
hlt
cmp
jmp
sti
repz
cld
push
je
rcrl
lea
and
sbb
mov
ret
je
sbb
push
add
jae
add
pop
daa
addl
add
add
jbe
pop
daa
notl
mull
inc
push
sbb
jne
add
add
pop
lock
mov
notl
fildll
loop
push
mov
push
jmp
push
cmp
out
lea
scas
mov
call
rclb
ficoml
cmc
push
rcrb
sysexit
push
mov
xor
lods
push
add
stos
mov
pop
xchg
mov
add
cmp
or
xor
lock
mov
sysexit
push
das
rorb
ret
mov
bound
lea
pop
add
sbb
lea
add
aam
and
sbb
xchg
cmpsl
mov
or
mov
orl
inc
add
es
dec
add
stos
pop
sbb
add
add
push
stos
pop
inc
or
iret
aad
popa
pop
dec
std
scas
loope
xor
jo
stc
int3
clc
xorb
xchg
pop
add
hlt
daa
sti
cmc
jmp
add
add
repnz
std
je
add
clc
insl
pop
sbb
xor
xchg
das
stos
test
add
cmovne
call
inc
cmc
stos
test
repz
mov
mov
aam
adc
jmp
add
push
dec
icebp
in
jb
jmp
in
je
mov
xchg
popf
and
push
lea
out
insb
pop
aam
ret
jne
mov
movaps
cs
pop
cmc
pop
adc
popa
and
bound
inc
or
ljmp
fdivrl
xor
jmp
cmc
es
jb
jmp
sbb
mov
jle
lock
cmc
xor
pop
pop
mov
mov
test
mov
xor
cmp
int3
and
inc
jmp
mov
ret
out
add
mov
pop
outsb
es
push
incl
add
add
mov
jl
ljmp
dec
test
je
jb
add
rolb
loop
or
cs
call
or
adc
add
pop
ljmp
roll
sub
cli
enter
aad
jnp
adc
or
mov
or
sarl
mov
add
add
push
xor
mov
add
cmpsl
xchg
incb
es
sub
sub
pop
call
jns
adc
xchg
or
mov
mov
orb
stc
sbb
jg
dec
jae
ljmp
mov
dec
leave
lea
stos
adc
or
mov
mov
outsb
fadds
shr
mov
add
add
mov
mov
add
hlt
inc
cmc
push
xor
mov
dec
push
in
out
inc
fstps
mov
fisubl
jnp
push
repz
aaa
sbb
add
adc
push
xor
shr
xchg
jp
push
jmp
cmp
call
cld
rcrb
cmc
rorl
adc
sti
es
sub
movsl
out
add
add
mov
push
loop
and
adc
xchg
loopne
sti
pop
or
cmc
imul
jle
mov
jl
not
sub
imul
pop
int
pop
test
dec
call
xor
lods
cld
adc
mov
cli
lahf
sahf
sbb
cmpsl
mov
sbb
scas
fcompl
icebp
out
adc
testb
dec
out
push
push
sub
add
add
add
aaa
xor
cmp
dec
xchg
daa
add
dec
test
add
movsb
mov
push
push
push
out
fsubl
cmp
sets
cli
decl
add
dec
test
incl
fs
push
stos
loop
jg
cmc
mov
mov
xor
movsl
repnz
insb
movsl
shrb
addl
add
repz
inc
aaa
mov
adc
test
lea
adc
dec
dec
adc
cmpsb
mov
cmc
lret
inc
insb
jne
inc
mov
jb
adc
cmp
xor
add
push
testl
mov
cli
js
adc
nop
xchg
xor
jns
in
jns
push
dec
incl
add
add
call
push
call
es
mov
jle
add
adc
inc
add
cli
call
daa
mov
movl
xor
jbe
fstl
es
add
or
cmp
cmc
pop
sti
jg
out
jle
dec
inc
cmc
pop
xchg
jg
inc
cmc
inc
cmc
dec
and
mov
stc
into
icebp
cmpsb
cwtl
inc
cmc
shll
xchg
dec
jl
in
sbb
out
and
add
rorl
in
fwait
jecxz
cmp
jecxz
popa
test
daa
jmp
mov
adc
adc
inc
sbb
cltd
mov
lock
shrb
inc
dec
mov
aas
lret
stos
add
add
add
call
add
xchg
cmp
xchg
loop
push
icebp
sub
add
dec
xchg
sub
jne
jae
clc
pop
mov
jle
ds
cmp
pop
out
xchg
pop
cli
fs
cli
outsl
call
cli
jno
pop
out
mov
cli
jmp
pop
fnstenv
dec
dec
in
jae
mov
hlt
cmp
cmp
scas
pop
cmc
pop
idivl
or
pop
lods
pop
lods
inc
adc
adc
gs
out
pop
cmc
jne
scas
adc
incl
scas
imul
and
add
and
shrl
cmc
test
pop
mov
pop
push
add
add
add
clc
dec
xor
shrb
cmc
jae
inc
xchg
jb
mov
mov
jns
jmp
dec
cli
push
xchg
pop
add
or
outsb
or
jg
sub
push
dec
or
outsl
or
lea
push
mov
in
aas
cmc
movsl
out
rep
jnp
stc
fdivrl
and
add
add
aas
aas
pusha
fwait
das
jg
inc
lea
in
cs
call
imul
sti
mov
cmc
sbb
cmp
cmp
add
std
jns
add
jle
mov
out
xor
test
sub
imul
adcl
cwtl
out
stc
xor
mov
call
xchg
sbb
add
aam
cmc
stos
test
jbe
call
lock
les
xor
sub
jb
retw
push
pop
daa
add
es
lsl
call
xor
add
xor
sbb
mov
lods
inc
cmc
ja
adc
mov
test
add
in
sub
testb
add
add
xor
fwait
stos
mov
jmp
xchg
subl
lods
add
outsl
dec
in
jnp
xchg
jae
and
sub
adc
or
xchg
orb
stc
test
mov
lds
sti
pop
sbb
scas
call
mov
inc
add
push
cmp
lahf
push
add
pop
push
add
fdivrl
cmp
adc
mov
adc
ds
insb
out
push
and
clc
dec
xchg
push
push
inc
inc
adc
sub
dec
sbb
xchg
mov
mov
cmc
adc
pop
jg
pop
aam
push
push
scas
mov
dec
mov
daa
cmp
pop
mov
test
add
add
add
ja
push
push
xchg
or
jle
cli
je
adc
mov
xor
rcr
cmc
cmp
xchg
cmc
jbe
lea
mov
xor
jle
dec
xchg
xchg
sbbl
pop
cmp
or
int3
subb
adc
das
dec
push
cmp
or
or
mov
repnz
push
and
lret
jns
fiaddl
or
es
ret
jp
push
inc
fstl
jg
fcmovnbe
xor
sub
push
add
fsub
xor
outsb
xchg
ret
push
pushf
shrl
mov
jae
rclb
sbb
ror
in
call
and
test
add
add
loop
addl
xlat
ret
and
mov
add
and
push
push
rolb
negl
jo
je
loope
fistpll
add
lock
je
jbe
fdivr
mov
pop
arpl
stc
enter
push
lcall
push
sahf
gs
or
out
cmc
cli
hlt
sbb
jmp
adc
add
and
das
jb
or
push
adc
pop
adc
and
data16
in
testb
ja
sub
stos
mov
sub
cld
insl
xchg
fwait
sub
sub
jbe
cli
daa
add
cli
hlt
dec
and
int3
mov
pop
pop
in
push
mov
out
subb
or
inc
add
int
call
add
add
outsb
cmc
jne
inc
mov
adc
pushf
mov
pushl
mov
mov
lock
pop
ficoml
cmp
inc
sub
cmc
adc
mov
dec
push
loop
inc
loopne
movsl
int
dec
pop
int
lea
adc
arpl
xor
or
cmc
cmp
in
lcall
decb
cmc
rclb
in
add
ret
or
sahf
cmp
mov
push
outsb
stc
into
dec
inc
ret
lret
fs
gs
add
pop
insb
cmpb
pop
rorb
mov
cmpl
ret
pop
movsl
pop
icebp
or
jp
sub
imul
test
cs
repnz
std
je
mov
add
hlt
adc
jg
inc
add
sahf
es
pop
andl
jmp
mov
dec
or
shl
jge
xor
adc
dec
push
mov
gs
aam
test
pop
out
cmc
push
mov
dec
xor
dec
fwait
adc
cmc
sbb
int
test
add
popa
add
push
je
orl
add
dec
test
scas
inc
out
es
push
clc
aaa
adcl
pop
ljmp
add
push
dec
scas
fdiv
movaps
mov
gs
test
sti
cmp
or
out
mulb
add
dec
dec
jge
cmp
mul
lods
and
lods
rolb
push
push
pushl
push
enter
push
bound
add
add
idiv
pushf
out
lret
rorb
xor
je
jecxz
sti
fcompl
inc
jmp
cli
loop
aad
xor
dec
test
div
xchg
push
js
dec
push
jb
push
js
push
push
dec
add
sub
inc
cld
subl
adc
test
fcos
divb
int
adc
dec
or
dec
push
incl
add
add
cmp
sbb
jae
jg
divl
int
pop
lods
push
mov
loopne
out
fbstp
ljmp
cmp
loope
notb
icebp
dec
dec
sbb
jne
lret
sub
jne
or
je
push
dec
jg
icebp
pop
aas
jae
gs
and
test
add
dec
aas
jae
ret
lret
push
jge
jmp
int3
xor
mov
enter
xchg
jb
std
fadd
sti
jl
jbe
in
fdiv
repz
cli
xchg
or
sti
loopne
push
inc
cmc
enter
imul
xor
sbb
and
and
sti
call
push
xor
sbb
es
das
xor
add
push
roll
repz
push
add
in
cli
adc
jne
mov
unpckhps
or
testb
cmc
out
hlt
daa
stc
fiaddl
jne
sbb
daa
jmp
or
inc
in
inc
xor
jp
call
mov
inc
cmpsl
push
and
xchg
std
cmpsb
clc
jmp
add
adc
insb
pop
dec
cli
jmp
jns
sub
jne
call
mov
mov
data16
arpl
pop
imul
jne
leave
clc
mov
add
imul
je
jbe
sub
nop
leave
clc
push
movsl
mov
push
fcmovnbe
or
or
out
xchg
xor
insb
test
repz
jb
jbe
sub
loop
cli
push
fiadds
add
iret
xorb
jne
int3
lret
sbb
cmp
jmp
sbb
push
inc
sbb
je
cmpsb
sub
dec
dec
int3
cmc
addb
loope
lret
xor
inc
mov
push
inc
repz
pushf
jbe
add
push
out
jmp
sbb
mov
je
cmp
jmp
or
sbb
idivl
inc
fucom
in
fwait
xchg
iret
addb
push
inc
pop
and
fmul
sbb
imul
jl
and
jl
sub
jl
ss
cld
add
cld
add
sub
add
cmp
add
xor
add
mov
jle
adc
xor
shrb
jl
pop
or
add
sbb
adc
adc
jns
pop
jne
sbb
and
ljmp
mov
sub
cmc
cmp
mov
roll
daa
imul
and
out
das
cmpsb
cmp
sub
ljmp
jns
mov
and
fstps
insb
dec
add
repnz
and
shlb
imul
add
out
sbb
in
cs
aaa
adc
aaa
in
mov
enter
int3
aaa
pop
mov
hlt
aaa
or
fdivl
out
lock
jmp
mov
add
outsl
repnz
jp
adc
or
jo
or
scas
xor
dec
daa
das
jb
or
arpl
mov
andl
xor
sbb
out
jle
shll
out
add
mov
jp
in
xor
dec
sub
insl
stos
das
add
jbe
ljmp
sub
add
mov
sti
stos
mov
mulb
and
andl
adc
jne
icebp
or
pop
sub
xchg
add
mov
sub
mov
lds
dec
sub
jns
sub
fisubrl
sub
je
mov
or
call
push
adc
outsb
push
adc
jne
adc
mov
incl
add
add
inc
pop
test
push
pop
push
orb
inc
test
psrlq
jnp
clc
push
add
pop
mov
jne
add
repz
cmc
dec
jle
in
push
jp
out
dec
inc
mov
or
or
jo
std
push
cld
mov
repnz
cmc
dec
cmp
hlt
andb
or
add
lea
ret
mov
fsts
loop
mov
adc
jnp
iret
jbe
add
add
pushl
jle
cmpsl
mov
adc
cmp
add
scas
movsb
pop
add
stc
fiaddl
cmc
scas
stos
pop
add
jb
in
mov
lods
lods
pop
or
add
add
je
adc
sub
mov
jp
outsl
enter
or
les
jl
or
mov
mov
stc
mov
cs
inc
jecxz
or
jl
loopne
ss
xchg
pop
lcall
das
fiadds
icebp
hlt
add
dec
in
add
push
cmp
popa
inc
cli
pop
insl
in
insb
ss
bound
push
sbb
push
sbb
stos
mov
idiv
scas
or
jle
adc
adc
and
icebp
stos
inc
mulb
pop
add
out
cmp
fisubrs
and
stos
imulb
xchg
in
sub
cmc
stc
scas
inc
negb
adc
test
add
imull
add
inc
outsl
push
adc
imul
push
roll
add
jecxz
or
inc
movups
and
adc
add
insl
stc
add
insl
call
cmc
add
add
add
fs
iret
fs
lcall
icebp
or
in
test
sbb
add
add
mov
decl
fsubr
inc
add
jecxz
or
and
sti
cmc
add
test
mov
lods
stc
pushl
lret
cmc
dec
dec
inc
hlt
xor
jg
inc
std
test
dec
pushl
mov
ror
aaa
cmc
dec
rcll
mov
rol
enter
add
dec
in
stc
pushl
into
imul
hlt
xor
xchg
out
dec
jg
push
lock
fsubr
jl
in
fdivrl
mov
daa
pop
or
outsl
lret
mov
mov
imul
es
cmp
es
sti
pop
push
lret
arpl
test
adc
add
cmc
xor
bnd
cli
xor
out
pop
neg
add
cmpsb
or
insl
std
mov
jmp
out
subb
sbb
dec
jnp
adc
mov
cwtl
das
in
mov
jmp
fdivrl
inc
std
sub
add
das
aaa
add
leave
cmc
mov
xchg
or
mov
cmc
dec
outsb
lea
fmul
xchg
or
xchg
mov
call
add
sub
call
imul
xor
test
jbe
cmpsl
divl
jmp
imul
scas
add
sti
out
addl
add
add
and
jmp
pop
rolb
outsb
rolb
xchg
push
sbb
pushf
test
pop
or
jle
xchg
add
xchg
int3
jns
or
ret
pusha
or
push
cmpsl
dec
or
jp
movsb
inc
or
mov
dec
jecxz
add
repnz
mov
outsb
inc
lahf
fidivrl
je
subl
loope
jae
jp
sbb
rclb
mov
or
cmc
push
test
adc
push
sti
out
mov
adc
cwtl
int
xor
out
test
adc
cwtl
rol
push
pop
out
mov
adc
test
repnz
cmp
xor
jae
jne
test
pushl
mov
dec
push
inc
add
adc
add
add
test
jmp
push
add
pop
inc
inc
inc
add
hlt
pop
pop
add
daa
loop
jbe
jmp
add
repnz
inc
imul
ljmp
mov
push
sti
loope
inc
cs
cmc
pop
subb
jns
sub
mov
add
add
mov
imul
add
add
inc
mov
adc
cmc
imul
es
xchg
xor
add
in
sti
dec
je
add
cmpsb
stc
mov
es
jbe
dec
pop
push
gs
testl
mov
imul
adc
aas
mov
clc
call
jmp
add
mov
mov
jns
mulb
xorb
test
pushf
cmp
das
mov
mov
adcb
and
fucomp
je
mov
adc
mov
mov
das
cmp
add
xor
mov
ret
adc
jmp
cmpsb
testl
cmp
add
push
adc
aaa
cs
add
add
cmp
add
inc
cmp
decl
punpcklwd
inc
push
fnstcw
orb
arpl
pushf
and
jle
xchg
and
and
mov
ds
icebp
mov
mov
ds
jl
mov
dec
frstor
negl
into
addb
add
cmc
lret
cmc
dec
jl
or
add
lods
or
dec
jle
out
mov
jg
xor
in
inc
push
je
fs
jg
inc
ljmp
int
pop
push
addr16
pop
push
mov
mov
fmull
sbb
mov
add
mov
add
sbb
and
rorl
jns
icebp
add
jae
lret
les
push
jle
iretw
js
jmp
outsl
orb
jb
icebp
jge
bswap
ljmp
test
das
cmp
push
jmp
add
or
jbe
loope
cmc
cmpsb
int
out
mov
stos
ret
rolb
jecxz
fnstcw
cmp
and
mov
add
cmpsb
sar
mov
mov
add
add
jmp
jle
cmp
mov
out
mov
loope
cmc
cmpsb
cmp
push
aaa
es
inc
and
jmp
ds
and
cmp
xchg
aas
das
xchg
es
add
jmp
cmpl
call
mulb
lea
dec
repnz
jne
imulb
xor
jle
push
leave
mov
jecxz
inc
call
mulb
addb
daa
and
jbe
add
push
or
xor
mov
add
call
addr16
jmp
sbb
xor
popl
add
mov
cmpsb
test
test
adc
add
sbb
cmp
jne
xchg
adc
mov
inc
iret
sub
sub
rorl
je
test
dec
cmovns
lcall
arpl
mov
mov
pop
lcall
jmp
cmc
add
mov
cmc
aas
icebp
mov
mov
incb
hlt
aas
decb
mov
testl
sub
lea
test
cmp
ja
decb
pop
mov
xchg
mov
ss
push
mov
fidivrl
fs
testb
sti
dec
ljmp
inc
pop
cmp
cmp
cli
call
fwait
add
test
jle
jmp
bnd
add
add
jl
sub
xchg
gs
push
insb
lods
bound
sbbl
adcb
out
dec
jnp
add
xor
add
in
sub
daa
jmp
sub
and
call
ss
in
in
cmp
imul
push
out
orl
and
add
add
es
pop
sbb
in
in
sub
add
pop
jae
xorb
ja
jle
idivb
or
add
and
std
icebp
mov
xor
int3
push
inc
jne
shll
test
mov
add
shl
std
fsubrl
cmpsb
testb
cmpsl
paddsb
add
add
es
es
imul
add
push
add
mulb
xchg
mov
mov
add
push
and
in
scas
enter
mov
pop
lock
push
aam
or
jg
jno
cmovnp
jns
lock
add
mov
mov
inc
add
add
add
test
imull
add
jmp
jae
daa
imull
test
and
test
add
cmc
outsb
push
adc
and
inc
lock
mov
sti
cmc
dec
xlat
dec
adc
sbb
or
jle
adc
mov
sub
shll
es
outsb
mov
bound
mov
ljmp
adc
cmc
and
dec
xchg
and
pop
jle
arpl
decl
mov
dec
inc
hlt
pop
imul
jge
and
or
xlat
and
repnz
mov
lret
ret
sub
push
mov
call
inc
pushf
pop
int3
adc
add
add
repz
jbe
in
cmc
pop
mov
jge
jmp
inc
dec
arpl
call
dec
mov
jecxz
mov
add
icebp
js
xor
daa
sahf
stos
add
cmc
push
mov
cltd
mov
push
pop
jmp
das
call
adc
in
cmc
mov
add
stos
pushl
popf
push
dec
divb
call
dec
adc
gs
xor
jmp
lcall
subl
add
stc
enter
sbb
xlat
ds
adc
mov
jo
das
push
mov
cli
jmp
daa
xor
in
sbb
out
push
xor
jmp
xchg
sub
lock
add
cld
sbb
scas
sub
or
call
das
or
lods
clc
add
push
or
stc
ficoms
jle
xchg
cmc
mov
sub
testb
dec
add
add
sbb
sti
incl
pop
scas
roll
testb
int
decb
cld
decl
add
sarl
dec
pushf
dec
add
rolb
fwait
cmp
add
scas
roll
ljmp
int3
cmc
lcall
cld
decl
inc
add
mov
jg
dec
or
add
repz
sub
xlat
or
aas
jg
das
imul
jg
cmp
idivl
jg
inc
imul
add
idivl
inc
mov
inc
ljmp
insb
pop
lock
incb
sbb
or
jle
rolb
inc
or
add
testb
cli
and
mov
sub
lds
add
sti
cmp
push
jae
sub
push
xor
imul
add
add
daa
jmp
inc
bound
out
cli
mov
stos
cmc
sbb
es
aaa
or
cmc
mov
inc
pop
cmc
es
out
push
inc
push
mov
stos
pop
jo
pushf
or
in
push
sbb
out
cmc
cmpsb
add
dec
sbb
in
cmc
mov
ret
out
call
jb
add
add
inc
mov
test
xor
cs
cmp
jle
ljmp
sahf
dec
out
push
int
mov
bound
pop
sbb
pop
and
outsb
out
iret
add
negb
mov
jg
mov
dec
call
or
mov
fnsave
repnz
mulb
add
dec
push
ret
cmc
call
add
xchg
mov
inc
or
divl
cmpsb
icebp
cmp
cmp
sbb
and
xor
fbld
add
data16
loope
popf
dec
or
push
cltd
add
sbb
push
cwtl
mov
cmp
sbb
jmp
cmpsb
icebp
or
push
testb
add
stos
lret
inc
pop
ds
jae
je
cmpsb
or
mov
out
fninit
inc
add
scas
add
aas
incb
dec
stc
cmp
movd
faddl
inc
mov
adc
je
mov
and
mov
and
fadds
push
cwtl
cli
lds
xchg
fs
mov
aas
push
mov
fs
xchg
add
add
or
shlb
push
rclb
cmp
xor
sbb
leave
jne
inc
loope
inc
jae
lds
and
popf
sub
mov
mov
or
loopne
lea
les
mov
fists
psubsw
cmpsb
int
mov
add
iret
sub
mulb
add
add
in
and
fsts
insb
movsl
sub
add
stc
insl
ret
test
xlat
fwait
adc
adc
mov
pop
push
xor
aam
jnp
fstps
ja
jecxz
mov
add
xor
jnp
jne
in
es
test
lds
sub
imul
fs
and
add
jb
add
add
add
ret
xchg
dec
pop
test
in
and
sahf
inc
mulb
adc
mov
jle
adc
lahf
inc
in
sub
jno
and
imul
push
jb
sub
add
gs
and
idivb
sub
push
add
add
mov
add
add
adcl
dec
cmp
and
pop
lcall
push
cltd
inc
pop
cmp
testb
mulps
call
mov
adc
in
in
insl
add
and
cs
push
sub
add
push
and
cs
and
add
es
adc
push
sub
add
call
adc
test
add
mov
addl
xchg
or
push
insl
bound
lock
push
mov
pop
pop
xchg
inc
add
mov
rcll
or
xor
push
out
out
loopne
aas
jge
incb
repnz
iret
js
add
dec
jmp
mov
std
insb
or
cmpsl
int3
push
test
sbb
add
jmp
xchg
std
xchg
rorl
js
push
cli
push
or
inc
dec
mov
cmc
movsl
add
movsl
add
mulb
add
movsl
add
mulb
add
movsl
add
movsl
add
mulb
add
add
add
stc
and
add
mull
add
sti
and
add
sti
and
add
sti
and
add
sti
and
add
sti
and
sub
cmp
sub
push
shrl
idivb
stos
testb
stos
idivb
shrl
testb
stos
notb
add
testb
stos
imulb
lret
stos
testb
jl
stos
mulb
aad
icebp
add
sub
sbb
sub
into
sub
and
sub
js
sub
ret
fsubrl
icebp
xchg
sub
pusha
aad
icebp
adc
stc
scas
shrb
icebp
rolb
into
sub
push
sub
push
sub
xlat
mov
inc
xlat
mov
push
sahf
daa
xchg
xlat
sahf
daa
xchg
xlat
mov
xchg
xlat
mov
xchg
xlat
pop
daa
dec
mov
mov
shlb
dec
btr
or
fs
fldz
decl
test
lock
test
xor
je
lods
mov
and
adc
add
sbb
cwtl
es
fsubs
jnp
movsb
imul
sub
mov
cmc
sbb
jmp
pop
dec
add
dec
dec
add
add
jle
push
cli
dec
dec
clc
mov
out
sbb
mov
and
js
adc
shll
icebp
push
add
or
fiadds
jge
call
add
add
add
xchg
ret
adc
test
xor
scas
icebp
fcoms
jbe
and
icebp
es
inc
aad
add
sbb
mov
out
jae
imul
js
push
and
push
push
sarl
and
imul
ret
pop
lds
fldenv
push
rolb
pop
and
pusha
or
or
add
add
push
jb
repnz
xchg
xchg
cmpb
push
fbstp
clc
xor
add
out
in
adc
out
mov
pop
mov
add
inc
sbb
je
jne
in
xchg
daa
sbb
or
imulb
mov
popa
jno
imul
mov
add
and
push
and
jmp
cmp
xchg
or
and
sub
and
sub
mov
in
sbb
fldl
or
pop
ss
or
and
stc
into
inc
sbb
jmp
pop
jle
int3
sub
jmp
mov
outsb
inc
mov
loope
ja
testb
add
add
adc
jne
fucom
lcall
loop
cmp
negb
jnp
adc
jne
jne
jbe
enter
pop
xor
add
in
lock
push
lea
mov
or
and
call
dec
dec
adc
inc
int3
mov
push
test
fdivr
push
pusha
mov
cmp
out
pop
incl
add
add
xchg
or
and
fidivrs
sub
mov
push
lcall
idiv
push
dec
dec
bound
dec
cli
inc
xchg
ret
sti
xor
decl
idiv
cmp
dec
cli
inc
and
sbb
push
shr
mov
add
std
out
push
dec
cli
repnz
inc
rcll
add
popa
daa
hlt
dec
dec
sub
fptan
jbe
pop
fstps
dec
imul
mov
sub
mov
stc
fs
es
sub
xchg
lahf
fbstp
loope
xor
and
notb
and
out
fsin
sbb
aas
cmpsb
cmp
dec
ret
mov
push
mov
das
xchg
cmp
push
sub
push
sbb
add
add
scas
mov
es
mov
sti
test
lds
in
sbb
adc
inc
mov
adc
push
pop
sti
cmpl
std
lock
in
xor
inc
ret
adc
fadds
aas
test
in
jle
xor
fistl
call
dec
inc
sbb
pop
rcrl
mov
mull
or
mov
sub
cmpb
aad
inc
notl
mov
adc
cmp
cld
lock
rorl
inc
popf
cmp
push
divl
add
inc
pop
je
out
sbb
hlt
shlb
mov
shlb
int
mov
iret
rol
jo
mov
jns
xchg
nop
xor
idivl
dec
repz
xor
add
add
testl
iret
mov
iret
push
imul
shlb
push
insl
punpcklbw
jne
adc
xchg
adc
dec
es
pop
or
into
cmc
cltd
daa
mov
and
mov
cmc
scas
inc
sub
dec
jge
test
mov
push
jmp
lods
test
jmp
add
popf
dec
cli
sub
add
add
cmp
add
pop
mov
stos
dec
ffree
add
in
hlt
cmc
pop
int
adc
ja
int3
pop
repnz
pop
and
adc
int
fimull
push
inc
pop
sbb
mov
and
add
mov
push
dec
rolb
popf
outsl
aaa
lret
es
repnz
jle
add
add
push
and
imul
out
ja
rorl
out
cmc
jnp
pop
pop
pusha
mov
adc
cmc
stos
fs
mov
and
mov
orl
daa
pop
inc
stos
sbb
jecxz
addr16
mov
insb
and
sbb
sbb
add
das
lods
es
xor
or
scas
jo
std
cmpsb
mov
je
test
fwait
sbb
lock
jmp
cmp
add
addr16
dec
push
in
and
mov
out
daa
xor
pop
xchg
inc
or
sbb
sub
lods
vsqrtsd
sub
mov
ds
outsb
fmul
into
pop
or
push
add
enter
test
inc
pop
sahf
or
push
pop
push
sarl
cmp
and
inc
xchg
pop
test
imul
test
nop
imul
cmp
jb
sub
sub
add
add
cmp
and
into
insl
jb
mov
inc
sarl
lds
mov
xchg
sub
movb
imul
xor
xrelease
out
in
and
inc
sbb
fidivrl
sub
add
or
push
mov
je
cltd
inc
shll
out
add
add
or
jle
lods
cli
call
xor
cmp
or
cli
subl
add
dec
mov
add
cltd
inc
dec
cmpb
cli
loopne
repz
cmc
clc
aas
jae
lcall
pop
popf
dec
push
jl
dec
cli
and
fwait
jbe
scas
dec
dec
das
ja
add
adc
out
push
pushf
lahf
jbe
add
add
and
pushl
out
bound
cmpsl
add
movsb
dec
jns
pop
dec
fists
hlt
inc
iret
jbe
in
cmp
add
out
out
imul
jbe
outsl
dec
scas
adc
insl
xchg
adcb
inc
lcall
inc
cmc
pop
xchg
inc
add
xchg
icebp
scas
cmp
add
xchg
addb
mov
dec
test
call
mov
mov
sahf
shlb
into
mov
gs
push
cltd
sub
push
xchg
mov
or
add
std
or
jmp
icebp
add
or
xchg
lock
mulb
mov
mov
mov
cmp
adc
mov
test
mulb
test
movsl
add
dec
sub
in
imul
add
fistl
test
leave
cmpsb
xchg
sti
mov
pop
idiv
mov
jne
fistl
mov
decb
xchg
mov
push
imul
arpl
hlt
outsb
add
int3
xchg
mov
mov
add
add
fwait
clc
mov
dec
xor
pop
cmpsb
mov
nop
inc
imul
fcompl
rolb
std
out
mov
dec
cli
add
icebp
aas
cmc
inc
pop
jne
hlt
jg
inc
mov
rolb
jmp
jnp
jl
ja
add
add
in
adc
jo
inc
cli
add
xlat
add
add
push
ljmp
mov
sub
inc
dec
jo
idivb
pop
std
push
mov
test
xor
roll
sbb
mov
lcall
insl
mov
orb
add
js
ja
imull
aas
push
les
insl
xchg
push
inc
pop
xor
sbb
push
addl
out
aaa
ja
sub
inc
sbb
inc
xor
pop
jmp
jmp
mov
xor
mov
mov
xor
add
push
mov
mov
and
inc
adc
and
into
ljmp
xor
cli
mov
add
mov
jmp
add
mov
cli
shll
pop
mov
jmp
bound
cmpb
pop
or
dec
frstor
je
jmp
mov
cli
push
leave
or
cli
aaa
pusha
mov
cli
out
cmpsb
or
mov
shll
cli
jmp
mov
notb
add
add
lahf
sar
gs
lea
jl
call
mov
sub
mov
decl
inc
into
fs
jge
cld
dec
addr16
mov
repz
fsubl
xor
iret
inc
or
je
es
adc
mov
fs
call
mov
imul
and
push
push
scas
jne
in
sub
es
mov
cmc
dec
aas
je
test
sbb
cmp
xchg
pop
adc
sub
mov
lods
sar
mov
jge
adc
cmp
loopne
inc
je
nop
adc
cmp
adc
rorb
pushl
aas
jae
enter
lret
outsl
sub
cmp
sbb
inc
sub
mov
adc
push
jle
mov
xor
xchg
shl
mov
add
mov
cli
dec
or
add
es
les
ds
daa
add
insb
out
lods
testb
or
push
insl
pop
ja
data16
scas
pop
jns
aad
xchg
jmp
rorl
pop
jns
hlt
or
add
add
xchg
pop
inc
inc
stos
fdivl
cmc
xchg
fiadds
push
mov
mov
sbb
and
movaps
mov
push
adc
jo
and
dec
loopne
or
jae
scas
push
fwait
push
add
xchg
hlt
mov
cli
out
movsb
pop
push
push
popf
pop
cs
xor
mov
test
mov
inc
jmp
ret
scas
and
add
or
xchg
push
lcall
sbb
pusha
fidivl
or
cli
jbe
adc
out
add
cmp
sti
push
loop
stc
aaa
dec
mov
fs
or
sub
shlb
ret
mov
mov
mov
arpl
dec
fidivrs
push
mov
add
and
add
push
bound
lret
iret
jne
add
idiv
lret
in
add
cmpsl
les
std
jmp
lahf
in
cmp
lcall
push
push
xor
jne
mov
push
call
fucomip
data16
in
shll
popa
push
sub
packsswb
push
cmp
xorl
add
push
out
add
mov
call
cmc
xor
cli
int
stc
shlb
sub
cli
ljmp
je
push
mov
mov
sbb
sub
dec
cmp
add
mov
data16
call
fisubs
in
dec
push
ljmp
sahf
ds
je
cmp
ja
mov
inc
popa
fmulp
ljmp
stos
mov
cld
je
outsl
jmp
dec
inc
jge
sti
std
push
dec
scas
add
mov
cmpsb
addr16
testb
call
daa
mul
outsl
iret
cli
es
jecxz
dec
stc
xor
pop
mov
shrl
or
push
scas
movsl
lret
or
cmp
or
movsl
or
cmpsb
insl
dec
and
sub
addr16
sub
in
mov
sahf
lods
or
jno
or
dec
fcomps
push
cli
cmp
aaa
xchg
add
decl
inc
icebp
pushf
and
xchg
push
jno
sbb
psubd
cmp
data16
or
out
push
rcrl
in
add
mov
in
testb
add
pop
xchg
clc
ljmp
stc
xor
or
add
mov
add
in
jns
cld
sarb
mov
dec
jo
sub
or
icebp
out
loope
out
add
out
xorl
pushf
mov
adc
mov
fwait
jb
sbb
push
add
and
mov
cmc
loope
iret
dec
imulb
lahf
push
fcomi
mov
dec
adc
stos
in
sbbb
add
mov
stc
pop
adc
and
inc
pop
cmp
and
loopne
cmp
je
or
je
push
push
repnz
cmc
jo
idiv
icebp
add
icebp
xchg
aas
out
add
add
xchg
pop
js
sbb
sub
sbb
mov
mov
mov
xor
incb
mov
std
std
decl
loop
inc
add
test
call
push
test
mov
lods
mov
adc
pop
mov
test
cwtl
aaa
cli
movsl
xchg
mov
imul
cmpb
add
add
bound
pop
jbe
inc
stos
cltd
cmpsb
stos
cwtl
gs
push
xor
add
mov
daa
mov
loop
call
fidivrl
mov
test
xor
mov
mov
iret
jo
push
fisttpl
pop
pop
mov
and
push
out
rol
mov
sbb
insb
outsb
jecxz
je
out
cmc
stos
cmpsl
mov
ficompl
push
sahf
add
out
add
sub
in
and
inc
mov
out
mov
dec
mov
jne
sahf
cmp
cmp
add
gs
push
sub
inc
fldcw
and
imul
jmp
gs
adc
push
bound
cli
call
sbb
loope
pop
or
cli
jmp
flds
pusha
add
insl
jae
repz
test
les
nop
jp
decl
je
dec
cmp
and
repz
xchg
or
or
inc
mov
call
add
cmp
test
test
int
insl
xchg
mov
mov
push
int
lcall
ja
scas
ds
stos
aad
mov
fiaddl
push
xor
jp
add
mov
add
mov
push
mov
mov
test
add
xor
jns
test
dec
std
gs
repnz
out
cli
inc
xchg
xchg
xor
idiv
lret
xor
in
lea
add
fdivrs
mov
sahf
movd
dec
mov
xchg
js
pop
mov
or
lret
out
jb
mov
jae
daa
data16
jp
test
or
pop
mov
cmp
gs
test
test
mov
jecxz
cmc
es
inc
sbb
dec
icebp
inc
arpl
mov
scas
test
cmp
jnp
lock
aam
inc
mov
stos
es
add
xchg
jmp
lcall
out
fisubrl
fisubrl
cmp
add
mov
xchg
lods
bound
add
jnp
push
cmp
into
insb
lahf
or
fdiv
mov
loopne
cmc
in
daa
sbb
add
inc
test
pusha
push
insb
cld
jge
sbb
sbb
jnp
ret
hlt
mov
or
and
subl
sub
and
sbb
nop
popa
std
call
mov
add
add
stc
decb
shrb
jge
repz
pop
stos
std
es
aad
in
cmc
stos
push
push
add
push
xor
xor
push
push
loope
cmc
call
aad
icebp
test
add
dec
and
into
or
clc
lret
pop
stos
cmp
or
dec
push
fmull
sub
std
adc
inc
lea
sub
add
inc
sar
jg
test
cmp
outsl
pop
push
negl
adc
cs
inc
cmc
fnstcw
mov
aad
mov
into
jl
insl
xchg
cmp
add
jp
rep
adc
push
lods
xor
xchg
dec
add
cmc
test
repz
in
or
add
cmc
mov
test
or
notb
xor
sar
or
push
das
lret
and
stc
ret
aad
daa
xchg
or
enter
addps
push
mov
jge
add
test
xor
add
pusha
dec
test
cltd
rclb
fs
push
mov
sbb
call
out
mov
stos
lods
das
jge
or
mulb
rorb
js
stc
notb
je
jge
repz
mov
test
daa
xor
jl
mov
push
lcall
data16
pop
push
add
sub
addr16
lds
sub
add
inc
push
in
and
cmp
add
movaps
stos
pop
icebp
frndint
ss
mov
sub
push
push
xchg
jmp
movaps
mov
jnp
icebp
daa
add
push
stc
mov
decb
or
jg
mov
mov
add
sar
jb,pn
jae
jo
loope
add
add
call
incl
dec
sub
dec
sbb
pushl
dec
loope
stos
aaa
notb
idiv
stos
test
push
leave
lahf
filds
sbbl
inc
sti
decl
jo
jmp
mov
je
insl
decb
mov
add
sbb
add
test
sbb
pop
out
mov
inc
int3
xchg
add
fsubrl
mov
jno
sub
mov
mov
das
cli
lcall
inc
mov
pushf
xchg
cmc
or
sbb
mov
sub
jno
inc
int3
push
xchg
ds
ret
fwait
sub
add
add
or
rorl
mov
negl
roll
mov
out
int3
mov
ret
sub
ret
and
icebp
cs
xor
sub
notl
jmp
daa
aaa
pop
sub
pop
fbstp
clc
out
aaa
das
mov
imul
mov
cld
sub
jae
fucomi
xor
push
cmp
add
add
iret
sbb
loop
iret
and
cli
scas
sub
shl
rolb
mov
or
cld
aas
adc
adc
sti
cld
sub
adc
add
sub
cmc
ret
or
and
and
fcom
inc
loope
sub
stc
add
jb
inc
jmp
into
push
movsb
push
std
adc
out
add
cmp
pusha
sub
push
mov
add
mov
mov
mov
stos
idiv
faddl
adc
or
mov
inc
bound
dec
std
sub
jnp
divb
scas
or
xchg
sub
es
mov
rol
cmpsl
cmpsb
divb
es
repz
inc
in
pop
and
fidivrs
dec
add
mov
mov
std
cmpb
lcall
cmpsb
inc
or
cmpsb
mov
jb
dec
je
mov
and
push
leave
dec
cli
stc
push
pop
pop
jp
inc
mov
addl
xor
cmp
jl
and
mov
stc
mov
push
adc
and
adc
jl
inc
add
lcall
or
mov
add
cmc
mov
mov
mov
psubusb
int
xchg
out
cmpb
mov
jae
mov
daa
cli
outsb
es
roll
and
dec
out
sbb
outsb
push
loopne
jbe
mov
lcall
cmc
mov
jae
sbb
incb
jne
adc
push
jecxz
jae
icebp
into
gs
adc
out
repnz
gs
cli
es
xor
fsin
xor
call
inc
push
aad
inc
sysenter
daa
fincstp
inc
mov
sub
or
adcl
push
das
decl
testl
jmp
dec
fs
cli
push
ljmp
js
sub
push
test
jno
lret
jo
adc
loopne
add
loopne
sub
inc
sub
idiv
sti
lret
add
not
inc
call
pop
push
stos
cmp
add
negb
mov
mulb
push
jo
inc
movsb
or
test
jmp
stos
shr
jmp
inc
add
int3
lods
lock
repz
jo
in
jno
adc
sbb
fdiv
cs
mov
dec
repz
adc
icebp
jne
in
lahf
jae
mov
pop
js
adc
mov
mov
pop
imul
add
and
push
fsubrl
jns
sub
decl
push
adc
addb
add
rcll
jne
mov
adc
pop
sbb
dec
push
dec
mov
mov
adc
pop
cli
jge,pt
and
je
pop
in
push
je
je
mov
loope
mov
mov
push
outsb
inc
loopne
jno
call
test
fdivp
incl
add
add
testb
sbb
mov
std
call
dec
outsb
push
sbb
clc
push
and
rcrl
or
add
loop
and
sub
sarb
scas
divl
dec
cli
inc
add
out
mov
aam
mov
mov
xchg
std
jne
xor
or
gs
add
lds
and
jo
push
out
adc
cli
jg
push
xchg
mov
daa
fwait
add
es
das
sbb
mov
pop
mov
jae
jp
jp
out
js
jnp
sarb
add
xchg
jbe
aam
adc
push
dec
out
hlt
repz
xorb
and
testl
jg
add
add
or
sub
outsb
shlb
pop
dec
jno
fidivl
es
push
repz
jns
testb
test
add
int3
push
add
test
gs
test
popf
xor
xor
ss
ja
push
sti
stc
xorb
push
mov
sbb
push
adc
mov
add
das
pop
cmc
mov
loope
repz
repnz
push
je
sub
clc
push
fcomps
push
adc
stc
test
clc
call
mov
inc
jecxz
in
push
rcll
into
sbb
add
std
xchg
outsl
decb
inc
orb
cmp
sar
xchg
idivl
push
gs
pop
gs
call
push
mov
and
pushf
and
mov
jmp
jecxz
ds
loopne
in
push
xor
pop
aam
dec
mov
cld
inc
sbb
int
xchg
jns
cmp
lret
daa
lea
pop
jns
pop
cmc
je
cmc
test
test
add
movsl
add
movsl
mov
add
xor
mov
ss
fldt
mov
cmpsb
pop
cli
add
lds
stos
cmpsb
ss
mov
test
out
inc
psrlq
mull
pop
fldt
out
push
cmp
sub
add
add
je
jne
test
push
lods
cmovne
sbb
add
add
mov
mov
repz
ficomps
mov
and
cmpsl
shll
mov
push
cmc
sti
xchg
mov
cmpsl
jbe
or
daa
add
stc
sti
or
pushf
jp
pop
sbb
add
or
hlt
jp
mov
fistps
jmp
sub
and
add
add
idivb
mov
out
xchg
imull
and
cwtl
repnz
xchg
sub
add
cltd
dec
and
mov
insb
aas
arpl
adc
sbb
ss
jle
in
and
mov
or
out
icebp
pop
sub
bound
xchg
inc
test
push
sub
mov
add
inc
pop
stc
cld
out
sbb
jno
or
fstl
pusha
scas
pop
or
xor
movsb
cmp
push
es
jg
push
push
dec
mov
mov
stc
add
mov
gs
pop
popa
push
pop
mov
mov
in
sbb
ror
xorl
or
fdiv
mov
inc
loop
iret
adc
jne
add
add
mov
cmc
push
mov
dec
call
push
cmc
jne
inc
je
mov
add
lcall
int3
mov
fs
add
rcrb
arpl
out
std
fistpl
out
je
stc
and
cs
lahf
outsl
mov
mov
xor
cmpsl
mov
add
add
cwtl
push
jne
call
cmc
std
out
mov
cli
outsb
scas
xchg
rcl
xor
lds
cs
aas
add
insb
inc
int3
out
mov
mov
int3
xchg
or
jp
jae
js
outsl
int
clc
cli
fiaddl
add
js
cli
in
cmp
mov
cmp
xor
add
add
es
mov
rcr
mov
add
sbb
adc
fisubrs
das
xlat
xchg
stc
lahf
mov
movsl
and
push
add
or
test
cmp
pop
rclb
lahf
sub
adc
mov
push
mov
add
xor
inc
fiadds
inc
stos
jnp
icebp
jmp
cli
mov
aam
cmc
lahf
in
repz
out
cld
adc
dec
pop
add
push
cs
cmc
ja
or
mov
or
mov
insb
in
jecxz
adc
lods
sbb
je
aas
cs
inc
mov
imul
jecxz
stc
into
jns
sbb
pusha
daa
sub
jg
adc
xchg
mov
stc
sahf
insb
js
add
add
add
stc
lcall
stc
cld
cli
push
stc
lcall
and
adc
cmpsb
pop
call
add
push
dec
adc
mov
std
lcall
xorl
or
call
pop
fs
push
pop
aaa
jp
inc
mov
mov
lea
aas
dec
push
mov
sub
inc
icebp
int
sbb
add
add
add
push
neg
or
add
jae
aaa
xchg
fisttpll
or
and
xchg
enter
in
inc
cli
dec
xor
mov
out
pop
sbb
jbe
sti
or
std
push
add
inc
out
or
cmp
xor
test
decl
add
add
xor
sbb
or
mov
mov
mov
push
fsubr
xlat
in
add
xor
std
push
cmpb
push
jle
mov
in
or
addl
jge
or
add
jbe
pushl
outsb
inc
sbb
add
es
xchg
in
ret
shlb
add
add
out
stos
call
outsb
inc
mov
data16
popf
mov
shll
stos
rolb
pop
rcl
adc
fidivl
jno
pop
aad
fucomip
mov
add
bound
repnz
cmp
jp
lcall
cltd
and
mov
shlb
and
pusha
out
pop
pop
mov
push
test
jmpw
lret
pop
negb
mov
pushf
cmp
cmp
sbb
test
pusha
mov
xchg
stc
push
jno
fdivr
fsubr
xchg
stc
out
jle
aam
cld
in
xchg
stos
int3
int3
in
in
bound
out
sti
mov
fucomp
stc
scas
push
fwait
fwait
mov
in
stc
pop
insl
mov
bound
cmpsl
sti
add
pop
mov
pop
xchg
cmpsb
std
mov
cld
ljmp
scas
inc
add
sub
cmp
add
sub
call
jmp
push
and
aas
notb
pop
out
cmc
xor
adc
add
ret
xlat
aas
push
mov
add
add
call
int3
out
add
mov
add
shlb
add
add
je
gs
je
fwait
cmp
dec
testb
mov
lock
ds
lret
mov
sbb
test
dec
sbb
scas
xchg
fdivs
jno
dec
ret
lret
or
xchg
adc
add
add
dec
mov
jle
fdiv
or
andb
dec
ret
mov
jle
jmp
dec
xor
roll
repnz
hlt
test
scas
pop
jle
test
out
mov
sbb
mov
add
pop
cld
jo
call
mov
fs
imul
adc
sbb
push
sbb
mov
add
mov
mov
scas
repz
repz
repz
pop
inc
mov
test
ja
mov
test
add
pop
addr16
push
out
bound
test
push
in
sub
push
ret
ljmp
jae
add
xor
mov
es
and
cmp
ss
jmp
dec
in
jmp
mulb
call
push
cmp
lods
jecxz
aaa
gs
jmp
xlat
dec
notb
std
inc
repz
jmp
pop
filds
jmp
lret
or
fcmovb
fdiv
test
jno
inc
sarl
adc
test
int3
mov
lods
inc
into
lcall
add
add
test
shr
and
add
jmp
push
sbb
ja
xchg
xchg
or
call
mov
notb
cmpsl
mov
or
xchg
or
xchg
cmp
incl
adc
xchg
notb
cmpsl
mov
or
xchg
or
mov
idiv
cmpsl
aaa
outsl
sbb
add
add
mov
dec
push
jle
push
adc
and
cmp
cld
mov
adc
ss
out
adc
or
push
aas
adc
cmp
jo
xchg
out
int
dec
cmc
in
movsbl
cld
push
dec
aas
adc
cmp
js
xchg
call
jle
in
xchg
and
inc
insb
ret
imul
xchg
add
add
subl
int
das
fdiv
ljmp
out
pop
pop
adc
int3
xchg
nopl
ficoml
mov
sbb
sub
les
adc
cmp
out
stos
cmpsl
cwtl
or
int
cmpb
and
ret
fdivrp
idivb
fistpll
inc
jbe
mov
jo
fldt
jnp
pop
jg
fistps
jnp
ds
adc
or
dec
sbb
pop
shll
and
jge
insb
add
loopne
lds
adc
mov
fisubrs
cli
lods
add
fnsave
sub
scas
pushf
outsb
into
mov
sub
add
add
faddl
mov
out
jae
jnp
hlt
push
daa
xchg
bound
js
out
test
push
out
push
dec
cmp
jb
test
push
neg
stc
ss
push
cli
jo
jb
daa
sub
in
mov
or
xchg
fcoml
add
cmp
adc
add
push
jg
dec
call
fildll
adcl
pop
dec
mov
jmp
fdivp
jne
ss
add
adc
jns
or
mov
andl
jnp
add
add
ja
call
dec
jmp
aaa
je
inc
scas
idiv
jmp
mov
int3
jg
dec
mov
add
add
or
cmc
and
and
add
mov
mov
push
outsb
add
mov
aam
jl
call
cmp
std
xchg
xlat
jl
fldenv
rcrl
outsb
and
jg
xchg
xor
psllq
adc
push
shll
cmp
outsb
enter
push
mov
cmc
cli
cmp
add
add
into
std
ljmp
cmc
out
fdivrp
ljmp
push
pop
les
iret
repz
es
add
es
mov
mov
and
pop
mov
mulb
add
sahf
call
aam
bound
cld
jae
out
sarb
into
push
or
fnsave
lcall
hlt
pop
push
fistpl
stos
setae
repz
sti
jnp
lret
rep
sub
cmc
es
inc
mov
call
cmp
ljmp
movswl
jecxz
dec
jne
mov
shl
inc
sar
add
in
repnz
add
iret
ret
pop
sub
roll
push
gs
or
mov
and
stc
out
sbb
aad
jbe
push
stc
inc
add
add
add
les
pop
dec
jnp
sbb
dec
and
inc
ja
sbb
lock
push
das
pop
stos
out
fcmovnb
mov
lock
lods
and
int3
jmp
test
iret
sbb
and
test
push
bound
sub
add
out
testb
out
in
add
jp
shlb
stc
into
lahf
incl
add
add
pusha
dec
or
sub
sub
or
out
or
sbb
pop
psubusw
add
dec
pop
dec
call
xlat
xchg
pop
inc
sbb
sub
pusha
addr16
fwait
or
add
xchg
ficoms
adc
lea
push
or
push
loop
test
cmp
jmp
sub
inc
cmc
jo
test
add
add
push
shl
or
fwait
fwait
cmp
or
aad
add
cmp
incl
stc
aaa
push
stc
xchg
int3
cmp
add
ret
sbb
ret
std
push
iret
sbb
outsb
add
sbb
insb
adc
pop
xor
cmc
iret
xchg
pop
lea
xor
cmc
cmpsl
dec
pmaddwd
add
add
add
inc
cmp
maxps
scas
cli
loopne
mov
add
inc
repnz
movsb
negl
lods
lods
neg
jle
xchg
add
jb
xor
jl
sbb
xor
push
lahf
pushl
or
js
and
cmp
sub
mov
cmp
push
clc
call
arpl
xor
add
add
insb
mov
setl
mov
sub
fcoms
mov
in
cmpsl
jp
adc
add
fsubl
fld
sbb
data16
adc
cmpsl
sbb
jb
push
js
sub
mulb
popf
dec
inc
sbb
pusha
mov
mov
imulb
add
hlt
mov
imulb
add
in
mov
testb
sahf
cmp
int
sbb
dec
lods
cmp
nop
xor
arpl
loop
sub
inc
mov
sahf
cmp
gs
add
and
push
mov
mov
add
daa
cltd
call
adc
lcall
add
decl
add
test
stc
add
cmp
jg
mov
pushf
fs
adc
stc
or
aaa
mov
pop
and
add
scas
and
mov
pop
test
sbb
adc
sub
aad
add
fstl
fsubl
push
incl
cmp
inc
or
notb
cmc
xchg
mov
cmp
test
ss
adc
cld
mov
dec
cmp
adc
jl
fxch
aam
mov
test
pop
mov
add
arpl
out
jl
outsb
push
packsswb
iret
add
pop
test
test
movd
pop
and
sub
xlat
out
xchg
mov
inc
icebp
jl
sub
jle
jl
adc
imulb
loopne
add
or
add
add
pop
lock
add
out
adc
into
mov
push
and
out
sub
sub
jl
mov
out
xor
test
or
cmp
aaa
outsl
add
mov
jecxz
lods
out
mov
repnz
outsl
mov
add
sub
or
jmp
lret
scas
jnp
mov
jns
push
ret
mov
add
shlb
push
or
jae
pop
cmp
lods
stc
cmp
shl
fstl
mov
into
aam
mov
mov
iret
dec
loope
loope
int3
sti
sar
stos
ja
stc
mov
rcll
in
adc
push
or
jmp
mov
push
jne
push
repnz
jnp
testb
jae
jb
jp
add
stc
xchg
cmp
and
lods
inc
loope
push
sbb
sahf
add
add
scas
or
orb
and
lcall
inc
leave
or
push
dec
cmp
jne
sub
push
mov
or
nop
dec
imul
push
sarb
test
mov
mov
and
adc
add
ficoml
inc
adc
mov
stc
push
popf
push
dec
fcoms
sub
and
xchg
dec
ljmp
fwait
cmovo
adc
in
stc
pop
cmc
jb
test
clc
cli
gs
sti
jmp
mov
out
mov
cli
mov
inc
sbb
hlt
pop
incl
add
add
push
mov
je
cmp
jmp
sti
jmp
or
insb
repz
jl
push
sahf
cmc
mov
add
or
add
mov
cli
or
jmp
cmc
mov
pop
cmpsb
lods
mov
cmpsb
inc
or
hlt
cmp
loop
cmp
adc
mov
movsb
and
stos
rcr
scas
in
out
dec
jo
xchg
or
inc
hlt
fs
mov
jne
sbb
rorb
add
and
ret
lret
stos
insl
push
pop
inc
rcll
push
adc
and
testl
add
cmp
and
sub
ljmp
push
lds
ja
push
in
jbe
mov
or
add
notb
frstor
insb
pop
sbb
push
sbb
stc
mov
add
int
sar
jmp
icebp
add
jo
roll
xor
jne
xchg
ds
jnp
andl
outsb
push
int3
xchg
xchg
int3
dec
test
jl
int3
stc
js,pt
shlb
add
add
int3
xchg
stc
adcb
xor
stc
push
sbb
jae
cmp
add
outsb
dec
push
adc
push
add
call
adcl
enter
or
xor
shr
or
and
idiv
gs
std
mov
mov
daa
idiv
inc
mov
std
dec
and
push
or
add
add
and
cmp
mov
testb
mov
mov
ja
xor
rcrl
add
cmc
in
mov
stc
push
mov
pop
cli
pop
adcl
xor
add
sub
or
inc
push
add
aaa
add
cmp
inc
add
in
sti
ljmp
stc
fiaddl
mov
movsl
incl
ret
sarb
jo
stc
stos
push
mov
mov
std
incl
cmpsb
mov
inc
jbe
add
in
or
es
dec
mov
sub
xchg
pop
out
rcrb
out
ljmp
idiv
sub
jmp
daa
pop
out
mov
into
call
add
int
add
es
es
jle
pushf
add
sub
or
cld
sub
and
test
add
int
adc
filds
cmc
test
inc
pop
test
add
push
add
subl
add
lock
mov
cmp
int3
add
shl
gs
add
mov
ja
mulb
and
pop
and
dec
shl
call
stc
mov
cli
into
or
add
ja
call
subb
add
jg
call
test
arpl
cltd
subb
adc
cwtl
fs
jbe
push
stc
mov
sbb
inc
and
add
mov
std
add
add
dec
sub
or
aaa
cmp
adc
int
add
jmp
mov
std
inc
int
jmp
lahf
mov
std
inc
int
jmp
push
sub
or
jnp
adc
punpckhbw
insb
es
fsubl
dec
or
jne
cmpsl
jae
push
dec
or
mov
cli
stc
xchg
fdivr
stc
pushf
mov
add
leave
popa
or
add
cmc
mov
add
cmc
jmp
add
cmc
fnstcw
jno
add
cmc
mov
jno
add
cmc
jns
or
add
cmc
push
mov
sbb
sti
or
push
xchg
add
add
stc
stc
add
push
js
js
jle
mov
or
sti
stc
xorb
lret
xchg
mov
cld
mov
jno
daa
or
cmc
popf
fs
jbe
inc
std
jl
je
jle
xor
fmul
sub
push
xor
add
sbb
fmul
mov
xor
add
sbb
inc
lret
cmp
daa
out
cld
mov
data16
push
testl
push
out
dec
lods
sbb
es
mov
mov
cld
loop
out
insl
fwait
cmp
leave
mov
lret
cmp
adc
mov
movsl
hlt
insb
test
int
pop
pop
es
call
mov
stc
divb
call
mul
addl
stc
out
add
mov
stc
jmp
push
iret
xor
mulb
or
add
ja
lock
cs
add
mulb
out
stc
es
je
sti
push
push
or
notb
push
and
mov
in
into
stc
push
into
jae
cltd
into
stc
xchg
dec
dec
shl
movsb
lock
notl
les
mov
add
add
out
cmc
lcall
cwtl
ja
and
int3
pop
test
enter
int3
insl
or
mov
mov
testl
stc
lret
testl
cs
mov
cli
lcall
dec
je
clc
mov
cmp
mov
mov
lock
cmp
adc
fsubl
cmpl
js
idiv
add
pop
mov
iret
push
push
cmc
push
hlt
shlb
sti
mov
dec
call
jbe
or
mov
push
sarl
stc
mov
adc
imul
bound
add
cmc
mov
idiv
jl
fsincos
inc
and
call
cli
cmp
add
cli
sar
and
cmp
mov
sub
xor
dec
aad
aaa
lods
mov
std
jmp
dec
hlt
sti
loop
mov
or
pop
aam
fldcw
subb
out
mov
imul
out
inc
lret
push
stc
mov
aas
mov
inc
stc
jl
addr16
cmp
jl
testl
add
add
imul
cmpsb
add
or
cmp
insb
push
xor
je
fsubr
rclb
out
or
sub
add
stos
dec
add
es
push
add
stc
jmp
insb
sub
sahf
int
clc
add
jge
dec
xor
scas
dec
or
stc
jmp
popf
mov
add
adc
sti
push
lea
add
idivb
sbb
mov
ds
es
call
jnp
sti
es
shlw
push
clc
es
jno
lock
mov
add
stos
dec
call
stos
sub
add
xchg
call
jbe
popa
add
mov
add
mov
xor
repnz
add
jmp
mov
add
add
jle
mov
call
lret
lcall
inc
add
test
xor
jmp
cmpsb
shlb
in
mov
cmc
jmp
iret
push
mov
shl
push
iret
decb
and
jge
adc
jns
pop
mov
std
incl
add
add
dec
cli
clc
inc
xchg
clc
stc
repnz
stc
test
clc
stc
ficoml
or
sti
lret
inc
roll
mov
mov
pusha
imul
cwtl
cwtl
dec
repnz
and
pop
bnd
jbe
adc
adc
sti
bound
sbbl
stc
jle
fsincos
inc
xor
push
hlt
aaa
add
negl
repz
and
call
std
es
jb
idiv
ret
js
ss
in
outsl
pop
add
fsubl
push
add
es
jg
les
add
ret
jbe
insb
cmc
pushf
pop
out
cmc
xor
pop
push
mov
dec
cmc
jl
cwtl
mov
jbe
cmp
insb
negl
inc
les
cmc
xor
aaa
testl
test
ret
cmc
push
out
cld
stos
popa
imulb
add
sub
movsb
sub
je
stc
jg
int
sub
jle
ret
xchg
rolb
inc
bound
ret
je
jg
fldenv
stc
lahf
inc
mov
mov
data16
in
aam
and
xor
xchg
jne
add
inc
mov
mov
add
mov
inc
imul
bound
stc
cmp
mov
shrl
push
mull
add
sbb
adc
sub
mov
cmp
xor
mov
inc
mov
and
cmc
incl
add
add
scas
call
lea
call
ja
push
in
add
mov
addl
pop
push
push
add
out
hlt
sbb
cmp
mov
clc
out
jbe
pop
cmpsl
mov
push
jp
mov
mov
mov
in
stc
cmc
lret
std
jl
in
sub
jl
sbb
add
mov
sarb
jne
xor
stos
fadds
test
xchg
xor
mov
je
or
clc
and
mov
in
jae
outsb
or
adcl
loope
mov
add
and
xor
jo
lock
bound
loopne
adc
jge
add
add
mov
call
repz
mov
cmc
and
and
fmulp
lcall
jbe
int3
icebp
in
adc
std
xchg
sub
adc
mov
movsb
icebp
int3
sub
add
mov
sarb
test
lods
adc
mov
insb
icebp
mov
fcompl
mov
jl
xchg
push
pop
fcoml
loop
in
jp
sub
rolb
ret
adc
rorb
dec
ja
and
sar
mov
mov
fiadds
imul
stos
fadd
in
call
push
sub
mov
stc
cmpsb
divb
outsl
push
add
add
es
xor
test
sar
pop
stos
lods
insb
test
mov
sbb
mov
test
jmp
jo
inc
mov
in
jmp
mov
insl
sub
movsb
std
jecxz
je
add
std
repz
test
int3
idiv
xchg
cld
repz
lahf
ja
std
and
add
add
add
cmpsb
fdivr
mov
imul
aam
lods
loopne
int3
testl
popa
int3
imul
mov
in
mov
jno
testl
sbb
idiv
cwtl
xor
push
dec
pop
and
cmc
push
fsubrl
xor
call
stc
mov
stc
dec
add
std
jl
push
out
stc
xor
dec
test
cmp
sub
jo
lock
add
je
inc
mov
and
ljmp
into
ret
into
std
incl
mov
and
xchg
ljmp
into
push
push
inc
sbb
ljmp
dec
jno
jbe
movsb
ret
jle
pop
push
in
mov
pop
mov
add
add
inc
out
js
cmp
mull
dec
pop
lea
xchg
jecxz
cmpsb
add
cmpsb
add
cmpsb
add
xor
add
mov
ret
and
scas
dec
add
ret
loope
call
fmuls
push
insl
inc
pop
lcall
daa
icebp
add
es
inc
push
pop
push
inc
iret
add
scas
sar
mov
les
or
dec
mov
loop
stc
mov
shll
es
ds
cmp
or
push
sub
decb
cmp
mov
xor
and
xor
sbb
xor
js
insl
outsb
loopne
test
add
sbb
dec
sbb
push
push
push
mov
in
dec
mov
movl
call
sbb
data16
xchg
push
dec
mov
pop
cli
and
and
push
xchg
insb
push
pop
addr16
add
mov
int3
or
int3
xchg
lret
sub
inc
or
xor
nop
and
sarb
inc
fsubs
mov
add
aaa
out
scas
mov
add
and
cmp
pop
xchg
sahf
cmp
int3
mov
int3
mov
int3
cmc
inc
in
jle
jns
in
xor
cmp
jne
mov
ficoml
cli
lock
sti
dec
mov
mov
subl
test
fnstcw
icebp
and
outsb
in
xor
or
push
sub
mov
sub
adc
dec
pop
movsb
cmc
addr16
stos
inc
add
dec
pop
cld
cmc
pop
add
mov
dec
call
dec
dec
mov
or
mov
int
out
rclb
dec
xorl
lret
int
xchg
shll
call
ljmp
mov
stos
out
mov
jecxz
cmc
out
cmp
aas
ret
dec
ljmp
out
cmc
jecxz
and
adc
mov
ljmp
shrl
pop
aaa
fsts
out
mov
xchg
repnz
push
out
add
outsb
int3
js
or
in
add
loopne
outsb
inc
adc
mov
rcr
add
mov
add
sbb
add
mov
jmp
xor
or
je
or
rclb
daa
mov
stc
add
push
jo
mov
inc
dec
xor
cld
inc
dec
mov
jo
scas
mov
add
mov
and
jmp
lods
push
push
jb
push
dec
sub
mov
aad
cmp
out
and
push
icebp
dec
mov
jmp
les
in
xchg
stos
les
loope
cmp
xor
push
cli
xor
ljmp
mov
scas
test
pusha
test
mov
notl
pop
sub
add
jnp
ret
rolb
dec
sub
adc
sbb
sbb
dec
sub
loop
cli
shrb
bound
orl
loopne
test
ds
leave
out
inc
sub
add
inc
inc
cld
mov
add
cmc
repnz
add
and
cli
clc
jl
and
sub
loop
stc
pushf
pshufw
add
jle
daa
xchg
fcomi
adc
adc
cmc
mov
push
push
sub
les
add
add
inc
mov
add
inc
mov
in
std
cmp
cltd
insb
test
xchg
jmp
xor
fisubs
xor
rorb
cli
es
clc
in
sbb
xor
popf
and
shrb
inc
add
data16
cmp
jp
inc
stc
inc
cmc
lahf
scas
adcb
nop
add
test
push
xor
push
repz
adc
mov
insb
cmp
out
aas
stc
inc
cmc
pop
and
jmp
cmp
jnp
push
pop
cmp
sahf
in
and
les
pushf
negl
es
movsb
out
xor
cmc
xchg
sub
add
jge
fmul
or
pop
and
stc
add
sub
stos
lea
add
cmp
test
in
stos
dec
stc
inc
lods
js
fnstsw
orl
stos
dec
in
cmp
sbbl
and
loopne
mov
std
ljmp
bound
adc
roll
jb
jne
or
fistpl
add
push
adc
popf
ret
mov
addl
mov
add
sbb
add
sbb
scas
add
and
jnp
divb
sub
stos
lock
pop
lret
inc
je
cmpsl
negl
sub
xor
sbb
sbb
and
idiv
jnp
push
pop
pop
mov
mov
mov
rolb
addl
not
iret
jno
mov
xor
je
cs
and
add
add
sub
and
test
cmp
inc
mov
and
xor
sub
js
flds
js
pop
or
sub
add
fisubrl
std
xor
sbb
or
mov
int3
mov
xchg
mov
les
mov
dec
jge
xor
mov
jp
fstpl
sti
pop
add
add
int3
xor
in
outsb
mov
push
jle
sbb
ret
mov
push
add
cmp
ss
into
lret
jecxz
mov
pop
inc
std
mov
outsb
adc
mov
mov
fisubl
out
add
or
pop
cmp
mov
mov
imull
jns
fistpll
sub
jl
add
add
mov
fisttps
shl
iret
mov
loop
sbb
adc
loope
mov
xchg
sbbl
push
aam
in
js,pt
add
add
mov
fbld
scas
mov
pop
cltd
loope
insb
push
and
sahf
ret
cltd
out
aas
out
js
and
add
add
sbb
cmp
jb
test
push
out
out
stc
push
lods
ss
inc
and
test
sub
std
jns
sub
in
or
daa
add
sbbl
das
clc
push
cmp
pop
call
add
je
imul
dec
mov
test
and
cmpsl
push
pop
btl
inc
push
jae
bswap
pop
stc
xor
add
push
xchg
pop
dec
and
push
or
jge
ret
testl
call
insb
add
cli
lds
popf
sub
jbe
mov
add
cli
int
and
push
mov
or
cmc
cmc
xchg
idiv
dec
mov
mov
push
mov
aam
xor
push
fadd
xor
add
push
cmp
mov
inc
fnstcw
lret
mov
std
incl
mov
in
sub
test
cmp
subl
cmc
inc
cmc
out
orl
mov
push
dec
inc
je
add
add
add
xchg
jge
subb
or
add
cmc
es
aas
jo
ret
mov
out
cmc
es
adc
jecxz
and
sahf
xchg
push
jb
xchg
mov
das
loop
out
in
sbb
mov
es
les
ljmp
xor
outsb
push
pusha
jecxz
jmp
stos
rcr
js
pop
in
cmp
pop
sbb
loope
xchg
xor
and
adc
pop
js
iret
add
in
mov
out
and
icebp
call
sti
sub
stc
imul
dec
jg
jge
inc
stos
or
stc
ss
mov
pushf
repnz
repnz
inc
mov
js
jg
cmp
cmp
mov
shlb
or
pop
test
gs
cmp
pop
call
bound
cmp
push
pop
call
clc
sti
mov
out
jne
add
or
pop
das
cmp
add
push
pop
xchg
pushf
in
push
lea
and
pop
pmovmskb
int3
or
int3
int3
xchg
lahf
in
push
xor
jge
stc
incl
add
add
call
and
call
mov
xorl
incb
or
imul
rolb
test
pop
test
and
sti
jno
mov
pop
mov
xorl
loopne
fisttpl
pop
mov
mov
xor
aas
push
daa
pop
inc
and
lea
dec
sbb
add
add
add
jo
mov
mov
add
xor
dec
jle
inc
bound
imul
jae
test
jecxz
push
fldenv
jg
mov
jno
jo
call
jbe
add
mov
cmpb
or
adc
inc
insb
push
adc
movsb
adc
mov
lea
xchg
stc
jns
add
fwait
push
movsb
out
out
mov
inc
bnd
ljmp
pop
daa
add
and
out
jle
jp
icebp
es
subb
add
es
push
cmp
fdivp
xchg
lcall
or
out
hlt
pop
cmp
push
es
cmpl
add
add
add
xor
cmpsl
push
int
in
adcl
inc
or
adc
pushf
add
ja
add
divb
outsl
cmp
mov
insb
jb
cmp
adc
cmp
test
ljmp
mov
scas
repnz
inc
mov
jne
test
rolb
in
sbb
add
xchg
mov
inc
jns
inc
push
scas
inc
mov
mulb
add
jge
mulb
jmp
lock
cmp
shrb
daa
add
imulb
mov
into
mov
dec
mov
mov
sub
shr
push
mov
repnz
pop
pop
insb
mov
inc
addb
xchg
lret
push
add
data16
inc
mov
lret
pop
mov
cwtl
dec
sub
mov
cli
sahf
insb
cltd
stc
jmp
mov
jg
or
add
sbb
test
pop
fsubl
lret
xor
sub
xchg
push
addb
jge
pop
inc
es
addps
push
jl
dec
and
js
sbb
test
out
mov
ljmp
popf
mov
add
cmc
or
insb
dec
cmp
pop
das
aad
push
or
jg
or
sar
push
in
sub
outsb
les
subl
test
xchg
adc
out
test
icebp
pushf
imul
stos
daa
mov
inc
popa
pop
inc
pop
jle
test
add
daa
loop
cld
push
cmpsl
sbb
inc
movsl
jecxz
data16
gs
add
outsl
mov
inc
cmp
out
cs
xor
jo
out
lcall
pop
inc
jmp
movsb
out
repz
inc
leave
movsl
push
cmp
pop
cmc
xor
and
scas
adc
add
add
add
sti
mov
fldcw
dec
clc
hlt
push
mov
es
out
cs
or
in
inc
stos
dec
cmp
jecxz
or
jmp
push
and
shrl
pop
bound
pop
mov
jo
push
xchg
jne
je
fildll
add
mulb
insl
stos
jg
imul
and
call
mov
pop
and
mulb
les
in
aas
pusha
pop
jle
jbe
inc
xchg
mov
add
clc
add
xchg
test
push
dec
jo
jge
adc
pop
mov
add
sub
popf
add
rorl
pop
xchg
and
dec
insb
add
add
add
out
insb
mov
negl
jg
xchg
movsb
push
add
xchg
incb
mov
mov
mov
movsl
cs
mov
lret
or
cwtl
adc
add
scas
add
cmc
mov
push
mov
nop
std
or
nop
pop
ljmp
jne
cmc
popl
mov
std
mov
mov
incl
add
add
xchg
lds
orb
push
add
lock
stos
or
pop
jle
test
cmc
mov
adc
cld
adc
inc
lods
cwtl
imul
xor
es
std
out
mov
lods
mov
sub
adc
sub
pop
xor
add
add
je
mov
repnz
cmp
in
addb
lock
out
icebp
lcall
es
sub
jg
out
insl
cmp
or
xor
call
inc
in
sbb
add
in
es
dec
loope
stos
pop
cmc
es
xor
movb
mov
lods
xchg
das
jbe
add
sti
push
jmpw
push
mov
mulb
test
lods
xchg
cmpsl
popf
test
jae
adc
mull
pop
das
or
and
and
stc
sub
add
adc
icebp
cmpsl
test
stc
bound
adc
notb
pop
loopne
dec
fistpll
mov
dec
lahf
stc
jno
sub
jne
xor
jmp
cmp
pushf
xchg
enter
xchg
cmpsl
xchg
sbb
add
or
mov
add
jmp
mov
xor
jmp
xor
bound
out
dec
push
sti
jp
xor
inc
and
pop
daa
xor
mov
js
setge
incl
add
add
xor
orl
add
je
push
push
fcomip
add
lock
aas
cmp
or
xor
jg
add
idiv
sbb
cmp
add
jg
jecxz
std
xchg
sahf
cwtl
xchg
jge
push
push
les
xrelease
or
add
jbe
dec
or
js
inc
add
or
mov
add
mov
cli
icebp
xchg
jno
daa
sbb
insb
into
fidivs
push
lret
xor
jl
rcll
dec
pop
outsb
mov
dec
bound
daa
or
faddl
mov
jecxz
xchg
xor
out
gs
cli
and
ja
std
shrb
out
sahf
imul
loope
mov
sbb
mov
add
stc
pop
sub
scas
lahf
out
jae
cli
jl
das
jo
frstor
adc
pushf
out
jb
jo
stc
lods
das
add
push
jge
dec
pusha
cmp
lods
das
adc
out
fidivrs
fs
and
add
fiaddl
jne
out
lods
or
pusha
adc
xchg
mov
subb
pushf
stc
call
jns
adc
add
popf
stc
inc
xor
pushf
xor
add
sahf
stc
cs
faddl
inc
imul
xor
mov
xor
test
jge
ljmp
xor
sub
out
cmpl
imul
pop
add
sub
mov
inc
popf
stc
cs
or
dec
and
xor
addr16
test
and
addl
inc
and
insb
leave
mov
jl
adc
aas
xor
daa
add
jge
push
or
insb
idiv
cmp
pop
into
lahf
stc
mov
imul
or
fcmove
int3
or
int3
int3
jno
in
mov
xor
add
mov
mov
jnp
shrb
test
add
loop
insl
or
sbb
cmc
push
sub
std
sub
loopne
les
pusha
sub
cmc
push
sub
cld
popa
and
inc
inc
and
fadds
jle
adc
push
lahf
mov
jge
xchg
or
orb
stc
ljmp
push
jmp
add
add
mov
jecxz
ret
fdivs
push
adc
dec
sbb
cmp
push
mov
rolb
std
ljmp
sub
push
daa
inc
ret
pop
leave
insb
cltd
xchg
sub
testl
sub
mov
mov
popa
cmpsl
aaa
repnz
xor
mov
aad
out
mov
jmp
cmc
es
sbb
nop
js
cmp
shll
js
adc
xor
es
jecxz
in
mov
int3
mov
stos
clc
jae
adc
insl
es
cmc
clc
insl
loope
fs
loopne
add
test
aad
call
lock
pusha
mov
xchg
add
in
ret
sub
sub
add
mulb
add
out
pop
sahf
stc
bound
mov
inc
stc
mulb
add
jecxz
pop
bound
mov
movsb
mov
lahf
jnp
bound
mov
mov
das
cltd
jmp
dec
fwait
sahf
fcompp
out
mov
or
mov
sub
sub
dec
call
pop
push
sub
dec
popl
push
xor
rcrb
push
ret
out
daa
add
xor
inc
mov
inc
sbb
add
dec
and
jae
and
mov
push
xor
dec
and
pusha
int3
int3
imul
jl
sbb
jge
jecxz
hlt
adc
sub
cmovs
add
lods
js
fcoml
add
pop
jecxz
add
mov
push
cmp
ficompl
icebp
decl
or
xchg
mov
inc
add
or
cmp
xchg
sbb
jl
aam
test
jne
push
inc
cmp
cmc
jg
pushl
in
jp
repnz
in
pop
cmp
inc
add
cmc
xorb
std
push
ss
add
cmc
jg
cli
add
sub
or
repz
mov
test
test
into
add
test
mov
or
xchg
sarb
xor
adc
or
sub
daa
out
mov
std
add
jp
mov
sbb
dec
add
mov
jo
or
add
add
daa
out
cmc
jg
repnz
stos
repz
fwait
add
adc
xor
call
add
and
les
push
add
fcompl
jmp
je
jae
push
bound
icebp
cmp
push
mov
out
jp
out
sti
and
jmp
sub
push
sub
inc
test
dec
or
testb
pop
or
push
adc
dec
loope
div
sub
pop
icebp
cmp
imul
cs
jmp
xchg
outsb
lds
clc
jmp
daa
push
or
into
orb
add
add
jnp
pushf
clc
sbb
loopne
or
pop
pushf
scas
add
fsub
inc
or
iret
imul
adc
adc
or
mov
je
adc
xchg
inc
out
call
addr16
and
cmc
inc
out
cld
jecxz
jge
lret
add
add
jg
push
adc
xchg
xchg
mov
mov
jl
nop
add
fdiv
ljmp
inc
fisttpll
std
jb
std
in
cld
shll
pop
cmpb
hlt
andl
cli
pop
clc
mov
ja
mov
jbe
sub
and
outsb
leave
sbb
xchg
add
add
jg
push
fistl
mov
adc
popf
ss
ficompl
sub
add
sub
sahf
lods
insl
sti
add
pop
xor
sub
out
js
into
jp
das
push
test
mov
data16
hlt
jbe
testl
pop
jecxz
js
jne
inc
enter
cmpsb
mov
stos
mov
popf
stos
and
shr
jns
push
add
out
js
inc
outsb
rolb
loope
push
or
xor
add
mulb
je
pop
in
jmp
mov
hlt
jmp
adc
into
loop
add
hlt
divl
das
sub
out
repnz
dec
out
jmp
fcoms
cli
fld
xor
xor
push
add
pop
aad
xchg
les
ds
pop
xchg
xchg
shrl
aaa
outsb
popl
out
sub
xchg
mov
notb
push
mov
mov
mov
mov
out
fisubl
add
aam
aam
lret
mov
sbb
add
lods
and
add
add
fstpt
add
and
test
and
add
fnstsw
mov
addl
mov
jge
xor
orl
shll
adc
push
xor
imul
dec
mov
push
sbb
std
cmp
jb
and
in
inc
mov
rorb
add
orl
scas
sbb
mov
add
or
mov
std
jae
sbb
outsb
inc
mov
push
and
mov
cmc
jg
push
jge
inc
sbb
mov
rcrb
cmpl
adc
xor
std
shl
std
push
adc
adc
es
add
sbb
add
cmc
es
mov
icebp
add
pop
daa
mov
loop
add
cmpsl
mov
xchg
outsb
dec
adc
data16
loop
fsubrp
mov
jae
lret
dec
outsb
push
xor
push
pop
push
shll
shlb
push
lea
out
mov
xchg
incb
sbb
mov
out
cmc
sbb
js
xchg
mov
mov
in
divl
pop
repz
cmc
mov
call
sub
std
cmp
in
outsl
stc
mul
jnp
or
testb
sub
daa
shrl
gs
test
lods
es
mulb
icebp
cmpsb
out
adc
negb
add
mov
fidivs
or
idivb
shrb
out
sbb
sub
add
add
repz
inc
xchg
mov
shrl
adc
out
and
or
jb
add
mov
aas
inc
xchg
in
testl
xlat
jb
aam
adc
add
inc
xor
dec
clc
push
in
push
mov
out
loopne
add
les
sti
add
add
add
cmpsl
jne
int3
lcall
pushf
daa
jecxz
daa
in
test
fdivrl
lcall
add
inc
in
add
add
notb
jp
fwait
dec
daa
add
cmc
add
cmc
insb
orl
cmpl
xor
lret
int
aas
jge
in
push
pop
clc
mul
jge
in
fisttpl
inc
lods
adc
cmc
decb
sub
xor
xchg
imul
add
cmp
cmp
xor
jg
lcall
andb
pop
andb
sub
inc
sbb
sar
std
push
jbe
or
jg
cli
adc
mov
adc
es
dec
mov
js
xchg
movsb
sti
movsl
mov
add
outsb
add
imul
jo
sub
daa
out
sub
pop
sub
cmc
es
js
out
ret
out
jp
out
mov
push
fcoms
xchg
sub
xor
jecxz
cld
mov
dec
add
daa
dec
add
fneni(8087
add
popf
xor
jp
fimuls
insl
popa
add
std
es
jne
or
jmp
es
in
or
sbb
jmp
ljmp
lcall
add
testb
dec
cmc
sti
and
jmp
sub
add
jmp
fdivr
bound
or
std
and
std
jp
mov
add
dec
mov
jle
cli
lahf
dec
in
jae
std
push
mov
or
jecxz
fwait
and
add
out
dec
mov
add
cwtl
out
pushl
jne
dec
call
sbb
add
arpl
add
sbb
add
mov
sbb
add
out
movsl
xor
add
cwtl
cmp
xchg
test
inc
lret
add
fsubl
add
sti
call
inc
pop
jnp
fwait
js
shl
lahf
mulb
pop
cmpb
pop
test
pop
add
cmc
subb
sub
jbe,pt
add
fdivs
adc
test
mov
and
std
pushl
or
adc
dec
int3
scas
jge
imul
add
add
add
jle
cli
stc
scas
push
cmc
jge
add
jge
jle
cmp
shl
push
add
mov
jb
or
xchg
sbb
dec
lds
jb
clc
ret
xchg
test
repnz
push
cmc
es
jnp,pt
dec
lea
lods
int
ret
in
mov
mov
add
popa
push
and
pop
jmp
lea
add
add
dec
sub
fldl
cmc
test
insb
and
es
and
fidivrl
xor
add
mov
pop
lret
movsl
test
das
jo
in
sub
test
xor
fnstcw
mov
push
push
pop
lds
xchg
shrb
outsb
int
xchg
test
xor
add
dec
sub
cld
add
stc
jmp
outsl
out
pusha
sub
jl
mov
jne
imull
stc
es
xor
test
or
and
jae
ljmp
subl
add
jmp
mulb
or
imul
icebp
jg
imul
mov
popa
test
or
test
xchg
bound
and
inc
push
jmp
stos
out
xlat
jmp
jb
add
add
sbb
arpl
add
xlat
repz
cs
lock
pushl
mov
testl
mov
add
cltd
jmp
mov
mov
add
dec
lea
dec
push
shrl
incl
add
add
daa
bound
pop
inc
jo
mov
call
mov
mov
fdiv
adc
or
or
cmc
idivb
push
cmc
lea
pusha
int3
push
sub
jbe
push
or
cmp
mov
dec
sbb
outsb
std
jl
jl
mov
xor
icebp
jl
mov
or
or
cmc
xchg
imul
dec
mov
test
sarl
xor
xlat
cmp
inc
popf
test
mov
mov
test
add
pop
int3
jb
adc
lods
cli
daa
mov
adc
inc
scas
das
les
ds
xor
ljmp
es
jns
fidivrl
das
out
cld
mov
add
scas
sbbb
xchg
dec
dec
es
insl
sub
cwtl
xor
cmp
jo
push
rcrl
dec
js
jo
jo
jp
test
stos
mov
out
xchg
lods
pushf
lods
push
cmpsb
inc
adc
pminsw
mov
test
test
insl
xlat
jae
and
mulb
add
addl
xor
pop
jmp
imul
add
mov
loopne
cmp
push
cs
sarb
pop
sub
fldenv
test
sbb
cmpsb
movsl
shl
mov
jmp
or
std
imul
test
repz
sub
mulb
add
je
psadbw
cmc
dec
fs
ss
and
test
add
dec
cmp
add
and
mov
mov
lret
loopne
jmp
or
aam
cmp
adc
aaa
rcl
cmpsl
add
rorb
sti
mov
mov
incl
test
xchg
jmp
cld
pop
and
add
lcall
sarl
fmul
cmpsl
mov
inc
sbb
dec
clc
xlat
mov
add
or
jns
dec
stc
xchg
inc
ret
in
movsl
stos
stc
fidivrl
fnstcw
rcll
cmc
std
ljmp
adc
fs
sbb
lret
std
jl
jp
jae
hlt
inc
in
mov
push
jl
cmp
jge
sar
popa
add
notb
aaa
mov
lcall
jno
pop
add
daa
cmpl
repz
outsb
cmpsl
pop
or
es
popa
mov
jl
jmp
lcall
lcall
out
ret
push
outsb
out
push
sbb
lcall
fsubl
out
mov
movsb
daa
add
repz
mov
and
dec
jnp
add
add
arpl
mov
xlat
insl
inc
aad
out
cmc
es
mov
aaa
jg
in
push
push
shrl
jg
fbld
out
xor
jo
cmp
pop
add
cmpb
sub
cli
mulb
add
jp
add
mulb
add
jnp
mov
repz
jmp
mov
add
add
pusha
jmp
movsl
or
xchg
in
daa
cmpsb
push
in
cmpsb
pop
and
idivl
shll
add
jmp
sub
icebp
shl
cmp
mov
push
jge,pn
xor
add
lcall
jg
daa
sub
lcall
and
add
push
mov
add
inc
mov
add
sub
add
ds
inc
and
mov
push
rorb
jmp
cld
add
sub
mov
int
cld
xlat
mov
push
inc
iret
or
xchg
or
lcall
loopne
cmp
lret
dec
and
or
sub
inc
hlt
fmulp
xor
xor
fdivrp
cmpb
ret
out
push
aas
aam
sti
mov
mov
nop
inc
in
ret
hlt
std
jmp
and
fwait
adc
dec
jne
jle
cmp
xor
xchg
or
pushf
mov
jb
pop
add
jle
std
push
adc
cld
cmc
pop
sbbl
in
mov
jp
push
xchg
pop
mov
call
movsb
jl
and
xor
lahf
imul
out
sub
sub
jae
dec
cmp
pushw
fwait
in
mov
int
addr16
cmp
sbb
int
ljmp
pusha
xchg
pop
in
mov
shlb
repnz
add
add
arpl
add
lods
scas
ret
xchg
das
ljmp
daa
out
pop
dec
mov
mov
iret
out
aas
gs
add
lock
jmp
mulb
test
ljmp
jmp
xor
add
or
add
xor
shrl
orl
jg
add
add
lock
cs
inc
mov
lea
and
mulb
add
jp
fidivrs
add
imulb
mov
mov
imul
je
or
in
testl
push
imul
loopne
mov
and
aas
inc
pop
sahf
stc
mov
add
xchg
inc
mov
add
add
call
mov
and
shrl
sbb
addr16
add
aam
scas
leave
inc
loope
cmp
xor
pop
dec
cld
add
mov
pop
mov
lret
inc
cld
pop
mov
pop
inc
pcmpgtw
add
stc
push
std
int3
push
add
lods
dec
push
int
add
add
divb
sub
ds
out
sub
andb
ljmp
ret
out
divb
aam
aaa
mov
mov
lea
in
ret
hlt
std
inc
in
js
shll
js
rorl
testb
outsb
enter
cmc
hlt
mov
cmp
test
aaa
std
mov
mov
cld
cmc
pop
jns
mulb
out
cld
mov
jle
push
jle
pop
lret
in
lret
cld
mov
jl
and
cmp
lahf
imul
out
inc
xchg
adc
mov
clc
arpl
lret
pop
cmp
loope
fstpl
ljmp
insl
rcrb
mov
xor
rolb
add
imul
cmc
mov
ljmp
add
add
daa
out
nop
inc
clc
jnp
mov
add
add
pop
shrl
lea
mulb
test
jle
jge
dec
lods
dec
and
hlt
pop
add
imulb
je
sbb
sti
jmp
mulb
or
rep
dec
jne
pusha
int
mov
shl
ljmp
add
sub
sahf
push
scas
call
test
dec
or
mov
jne
sbb
jmp
mulb
jge
or
and
cli
lcall
lock
xor
shlb
and
in
hlt
cmp
dec
outsl
or
pop
sub
psrlw
inc
xor
outsb
cmova
dec
inc
sub
xchg
xor
sub
add
add
mov
jbe
enter
mov
mov
dec
pusha
repnz
inc
gs
or
mov
and
inc
out
mov
lock
push
cmp
std
mov
lock
cmc
push
jl
mov
mov
xor
jbe
xor
xchg
xchg
xchg
mov
or
js
cmc
or
aam
push
add
mov
mov
hlt
insb
inc
pushf
jae
add
inc
cmc
jl
cmp
jge
sar
std
push
cmpsb
lock
adc
jnp
jle
subl
ljmp
pushf
xchg
jne
xor
ret
bnd
push
adc
lret
jns
jge
addl
and
sbb
and
sub
es
cld
mov
pop
mov
xchg
push
insl
daa
mov
jo
fidivl
and
sarb
fs
test
lahf
xor
push
out
ret
cli
jmp
add
sub
clc
jb
jp
pop
outsb
push
in
mov
push
sbbl
ss
inc
aad
xor
add
add
dec
add
xchg
daa
add
mov
stc
divl
or
daa
stc
jmp
divl
sbb
mov
inc
shll
and
add
sub
inc
js
out
std
es
jne
pop
jmp
mulb
jge
add
or
daa
add
jne
and
pop
repz
icebp
pop
test
es
mov
sbb
stos
lret
xor
loope
push
push
hlt
dec
jge
flds
fiaddl
imul
sbb
inc
or
out
xchg
push
sub
add
pop
xchg
cltd
idiv
xor
idiv
sub
pop
pop
xchg
push
ret
addl
inc
call
adc
sti
mov
adcl
in
push
cmp
add
add
add
lcall
mov
xor
lcall
sbb
add
fldenv
decl
fdivr
push
lret
testl
add
js
shl
adc
jl
es
dec
xchg
loope
or
sub
popf
test
jbe
ds
filds
and
add
push
xchg
jmp
jge
pushl
imul
jae
add
rcr
aas
or
add
aas
clc
stos
mov
inc
and
jns
jl
daa
testl
inc
and
in
cmp
ss
es
adc
loop
inc
paddd
cmp
push
pop
mov
punpcklbw
fwait
loop
lea
jnp
mov
out
add
es
insl
and
jmp
out
lods
sub
mov
enter
cmp
and
mov
es
xor
xor
cltd
icebp
mov
jp
mov
pop
mull
dec
sub
fs
sbbl
add
add
scas
cmc
push
xchg
jo
bound
mov
pop
bound
mov
es
jo
jb
sarb
jle
sub
push
mov
add
pop
sub
les
add
dec
sub
ljmp
add
push
sub
outsl
dec
sub
jl
sub
mov
and
sub
addb
add
add
sub
add
cmp
popf
js
add
pop
cmp
call
push
cmp
aaa
push
cmp
repnz
cmp
pop
push
cmp
test
add
dec
cmp
xlat
dec
cmp
loopne
cmp
scas
push
cmp
mov
jge
add
cmp
imul
push
xlat
adc
xor
shlb
add
lock
shll
xor
imul
enter
and
sub
or
movsb
xor
shll
aam
dec
sbb
add
lds
pop
mov
std
lret
mov
xor
int3
test
mov
outsb
arpl
push
outsb
inc
mov
stc
mov
jl
add
add
adc
stos
dec
add
je
stc
cmc
jge
add
stc
cmc
jge
divb
stc
cmc
jge
add
stc
cmc
jge
shll
pop
out
es
mov
lahf
sbb
jbe
adc
outsb
in
cmp
add
data16
add
repnz
nop
xchg
inc
out
cmc
es
mull
pop
inc
shrb
movsl
inc
xchg
lods
es
mull
out
or
sub
xchg
and
sarl
les
xchg
or
es
add
test
add
es
outsb
lcall
or
jmp
jno
mov
mulb
mov
insb
fiaddl
out
sbb
mov
divl
mov
add
add
mov
jmp
jno
mov
divl
xor
mov
in
divl
and
mov
in
divl
xor
mov
out
divl
and
mov
out
divl
xor
mov
loope
jno
and
mov
lock
xor
mov
jecxz
jno
and
mov
repnz
jno
mov
mov
in
jno
mov
inc
daa
icebp
add
scas
push
adc
icebp
add
scas
push
and
icebp
add
icebp
sbbl
setns
idiv
jae
push
loope
mov
add
push
sub
mov
sub
mov
bswap
mov
add
mov
xchg
mov
jge
mov
and
jp
mov
call
add
or
add
sbb
push
dec
es
add
jge
div
lds
mov
mov
mov
jnp
div
lds
ret
jp
div
mov
mov
jns
div
lds
mov
mov
mov
xchg
div
ret
or
inc
ja
div
xor
and
mov
jne
div
xor
inc
addb
testb
inc
jae
div
xor
and
or
and
div
xor
jge
dec
inc
or
pop
fwait
dec
push
loop
mull
lahf
inc
cmp
adc
scas
cmp
jge
sub
sbb
lcall
ljmp
std
xchg
or
addr16
jecxz
stos
cmp
gs
add
pop
mov
add
inc
out
cmc
es
mov
adc
sbb
xor
jo
inc
cmpsl
add
fnstenv
mov
inc
or
push
mov
sbb
mov
test
push
insl
add
mul
and
add
push
daa
sub
mov
sub
sub
or
jmp
jne
sub
jae
mov
jmp
jne
and
dec
das
jg
outsl
daa
add
mov
add
cmpsb
in
push
jge
pushf
push
dec
cmp
int
testl
shll
inc
pop
jnp
or
add
add
lcall
inc
xor
imul
add
sub
inc
sbb
or
add
jp
popf
aam
cmp
mov
add
int3
jp
test
dec
cmp
out
sbb
push
push
adc
mov
add
xchg
test
add
movsl
mov
lcall
pop
sub
std
test
add
add
push
jb
adc
std
jle
pop
std
push
mov
inc
add
pmuludq
xchg
mov
stc
cmc
dec
std
test
add
and
dec
std
inc
pop
jb
int3
test
xorb
push
add
loop
std
jmp
jp
sbb
mov
sub
pop
mov
mov
add
add
jp
rorb
lods
or
add
es
test
ljmp
out
aam
rcr
sub
push
add
sub
out
orb
shl
ja
mov
adc
push
add
push
cld
xlat
out
test
fs
cmc
pop
sti
js
or
test
or
add
out
cmc
pop
sti
sub
cmpsl
add
notb
jnp
aas
hlt
xlat
arpl
add
scas
jecxz
std
or
test
pop
jg,pn
bound
add
cmpsl
daa
fwait
icebp
mov
add
mov
fwait
loope
and
push
notb
add
dec
adc
mov
pop
stc
push
sub
jle
mov
add
test
mov
xchg
push
in
sahf
mulb
add
mov
test
xchg
pusha
add
notb
cmp
into
or
jg
mov
je
inc
inc
jmp
pushf
sub
pop
es
mov
mov
test
xor
nop
xchg
hlt
or
sub
pop
es
add
sub
add
add
jmp
jne
mov
pop
outsl
int3
int3
stc
scas
in
mov
das
jge
jmp
gs
xchg
adc
mov
xor
and
dec
das
add
mov
and
or
mov
inc
xor
lcall
addl
push
jl
jnp
mov
xchg
jg
fsubrs
test
add
cmc
les
outsl
out
pop
rcll
outsb
sub
aam
insb
jo
leave
ljmp
fcomps
jle
mov
jbe
add
mov
loope
hlt
dec
std
and
call
js,pt
adc
sbb
lahf
xchg
add
loop
xor
mov
pop
adc
jbe
aad
and
jnp
inc
cmc
insb
or
add
add
jb
jge
daa
out
xor
add
daa
out
in
xchg
stos
rorb
lods
stos
fcomip
das
push
jnp
stos
filds
ficompl
mov
or
sbb
outsb
pop
adc
out
js
ret
pop
loope
cmp
fwait
int3
repnz
pop
cld
sub
jle
adc
pop
jecxz
fidivrl
adc
mov
jmp
hlt
mov
jle
jo
jecxz
in
pop
out
sub
or
es
mov
jl
rorl
rcll
stc
jmp
lcall
sub
xor
mov
jp
adc
xchg
in
clc
push
xchg
inc
lds
inc
jns
mov
and
sti
push
xchg
add
add
or
clc
out
and
adc
mov
pop
test
or
xchg
or
add
insl
sarl
fnstsw
pop
mov
add
adc
and
cmp
pop
pop
jae
jle
outsl
dec
ss
insl
mov
pop
lods
add
jno
pop
insb
test
outsl
jo
and
or
mov
popa
jp
dec
popa
jne
pop
jb
inc
jo
movsl
je,pt
mov
imul
dec
addr16
int3
dec
addr16
int3
cltd
movsb
xchg
add
mov
or
push
and
cmc
adcb
stc
push
adc
push
dec
inc
sbb
dec
std
sub
insl
jbe
jbe
or
sti
js
sub
lcall
push
lret
cmc
pusha
xchg
bound
sar
adc
cmp
lods
jbe
addl
jle
jne
jl
pop
adc
dec
jbe
test
ljmp
adc
dec
das
mov
xor
mov
in
movsb
enter
es
test
insl
push
std
scas
jae
dec
xor
add
add
add
mov
mov
cmc
es
jns
outsl
and
es
xchg
scas
mov
stos
pop
ficompl
xchg
repnz
stc
mov
iret
push
in
mov
or
xchg
outsl
das
clc
es
xchg
jp
sbb
out
jo
ljmp
cmp
inc
cmpsb
aaa
pop
cmp
mov
add
add
add
mov
add
call
movsb
mov
and
mov
cmc
mulb
test
arpl
divl
insl
inc
stos
mov
mov
mov
push
dec
push
lock
cmpsl
sbb
stc
xchg
cmovs
add
stc
mov
aaa
push
sbb
xor
add
add
dec
jge
push
mov
pop
jb
xchg
mov
test
std
cs
mov
addb
sbb
ret
mov
mov
ffree
sarl
lret
cmp
int3
orl
int3
orl
pushf
orl
pushf
orl
fs
stc
call
ficoms
mov
adcl
ret
sbb
adc
es
popf
fistl
ss
mov
and
jp
hlt
dec
std
mov
dec
jbe
add
enter
fmul
notb
cmp
test
cmp
outsb
pop
cld
mov
std
std
or
xchg
mov
add
add
insb
jp
bound
out
lcall
adc
xchg
push
std
inc
sbb
rolb
inc
js
into
cmp
push
aam
mov
clc
iret
mov
cmp
test
dec
jne
jmp
std
test
jg
mov
es
xor
pop
inc
daa
ja
pop
daa
out
sahf
pop
outsb
push
or
pop
and
xchg
add
in
mov
insb
dec
insl
sbb
add
stos
sbb
xor
gs
cmp
es
sbb
add
shl
jle
add
add
es
mov
es
cmp
sub
add
mov
mov
push
pop
mov
dec
and
outsb
ss
mov
xchg
mov
mov
repz
push
fcoml
xchg
cltd
cli
add
imulb
add
pop
stc
sbb
fucompp
in
jno
sub
xchg
jl
rep
je
sti
adc
cmc
fldenv
cmc
bound
or
js
mov
cmpsl
push
stc
sbb
jnp
or
fildll
mov
push
sti
loopne
pushf
adc
mov
repnz
lcall
sbb
jmp
cmp
push
repz
lock
mov
push
jo
shrl
addl
xor
data16
add
sti
mov
mov
inc
lahf
loop
rorl
inc
dec
lods
mov
cld
daa
pop
or
cmp
mov
mov
in
xor
dec
push
xor
inc
or
dec
push
pop
add
test
or
das
cmc
ret
add
clc
leave
push
pop
stc
jno
add
cmc
aas
pop
stc
jb
sti
pushl
jns
jl
pop
or
fwait
jl
shr
std
in
in
xorl
mov
inc
std
lret
inc
jns
cmc
aas
jb
imulb
add
mov
cli
mov
aas
std
js
and
push
push
aas
jb
mov
cmp
icebp
hlt
xor
sub
es
ds
cwtl
pop
mov
mov
int3
mov
jl
jbe
call
xchg
cld
popf
mov
jl
insl
movsb
xchg
dec
push
add
mov
sub
add
stos
mov
add
es
ds
add
add
stos
ret
sbb
add
test
xor
jp
mov
out
js
pop
push
in
push
enter
add
sahf
hlt
lahf
jp
jp
es
scas
mov
pop
push
xchg
cld
stos
push
jmp
and
pop
cmc
es
push
or
add
es
and
push
stc
jb
xchg
adc
negb
ss
push
movsb
dec
xchg
mov
cli
sub
jmp
imul
jns
cmp
jmp
and
sarl
fisttpll
dec
inc
fldl
xchg
cwtl
jo
push
stc
jb
cmp
clc
pop
mov
div
es
fnstcw
push
stc
jmp
pushf
imul
or
add
pop
fsub
inc
test
test
sub
jnp
mov
pop
shrl
xor
stc
lcall
and
rolb
psubusw
idiv
repz
add
daa
jge
push
rol
add
xor
pop
jge
or
add
jnp
scas
jle
daa
add
out
orl
add
mov
ret
add
jle
inc
or
jecxz
aad
mov
pushf
adcl
jg
stos
add
cmp
add
aam
adc
cwtl
cmc
test
ljmp
rolb
cmc
aas
jbe
dec
aas
and
vcvttsd2si
push
out
dec
jne
jno
std
jle
mov
mov
aas
cwtl
pop
fwait
les
mov
lcall
fsubr
incl
add
add
jmp
std
push
add
shlb
and
mov
aas
fdiv
jl
mov
js
fwait
out
lcall
dec
gs
in
add
lahf
xchg
xchg
pop
jbe
jns
push
pusha
aas
push
enter
cmp
add
cli
jns
mov
add
sahf
jmp
jns
add
popf
cmp
or
add
jo
mov
out
in
popf
ja
out
out
mov
sub
xchg
xlat
fnstenv
enter
loop
jbe
sbb
icebp
add
fwait
cmp
push
sahf
dec
dec
out
out
jmp
insl
dec
jns
add
test
xchg
sub
ljmp
add
or
es
jae
mul
clc
xacquire
add
add
fiadds
jo
dec
loopne
mov
jmp
mov
es
daa
stos
inc
add
and
jns
xor
pop
popa
in
sbb
add
imul
call
sbb
mov
push
bound
mov
add
and
push
into
and
data16
dec
xchg
push
add
add
inc
adc
lcall
jnp
xchg
sbb
mov
and
in
icebp
mov
pushw
add
jle
xor
nop
or
add
lds
bswap
orb
cmp
mov
int3
addb
daa
or
rcrb
add
int3
mov
add
cmc
enter
aas
std
test
add
loope
or
jmp
dec
pop
insl
xchg
enter
mov
jmp
std
in
mov
shll
test
push
add
movsl
or
lea
push
stos
jne
insl
in
add
fadds
aaa
cmp
xchg
pop
out
pop
leave
lret
pop
jl
push
adc
aas
mov
lret
add
xchg
es
mov
inc
call
sbb
push
sbb
outsb
int3
repnz
rcll
js
xor
cmc
es
decl
ss
test
pusha
xchg
inc
xor
add
mov
out
adc
out
xlat
jns
ljmp
inc
dec
ds
add
add
add
es
cmc
add
mov
xor
add
pop
pop
jmp
repz
cmpsb
cmp
sbb
dec
fsubl
add
cmp
jmp
mov
mov
pop
arpl
sahf
adc
imul
push
cmc
inc
aaa
xor
add
add
mov
mov
clc
sti
xchg
mov
leave
dec
mov
add
push
add
or
mov
ljmp
add
outsl
lahf
mov
sbbl
push
mov
xlat
pop
shrl
dec
or
frstor
mov
push
int3
daa
adcl
cmpb
add
add
daa
add
js
pop
adc
dec
or
add
pop
mov
push
add
in
pop
outsl
or
popw
mov
nop
mov
aad
mov
adc
fldenv
mov
push
or
jnp
or
add
daa
imul
jo
clc
or
add
cmc
js
div
aas
std
dec
and
add
aas
std
sarb
push
aas
data16
inc
std
push
js
idiv
aas
std
pushl
insl
add
mov
jo
ja
cmpb
outsb
fcmovnu
mov
cmp
movl
cmc
aas
into
add
jp
stos
hlt
add
cmc
aas
jle
dec
shlb
xor
int3
pop
vmovlps
adcb
out
cmpsl
push
pop
xchg
and
add
pop
xchg
stos
xor
add
cli
mov
pop
outsb
into
sahf
sti
or
mov
push
cmc
es
sub
gs
xchg
outsl
xchg
out
cwtl
xor
out
test
addr16
mov
roll
cmc
popf
lods
vmread
lahf
orb
aad
popf
pop
out
inc
outsb
into
push
mov
push
push
pop
xor
jmp
jo
adc
negb
adc
nop
adc
mulb
pop
bound
mov
add
mov
popa
bound
jg
mov
pusha
jo
adc
testb
and
adc
test
in
jg
mov
lods
push
mov
add
dec
jge
cli
int3
push
insl
ja
cmp
mov
cmp
mov
sbbb
push
xor
or
lret
xchg
gs
or
inc
test
adc
push
mov
push
fsubl
stc
pop
rclb
call
push
push
add
add
ja
pop
sarl
add
psrad
mov
push
add
cmp
and
add
pushf
mov
stc
pop
dec
pop
pmaddwd
mov
mov
std
popa
outsb
sub
lds
fwait
push
mov
dec
iret
mov
cmc
cmp
adc
ljmp
adc
dec
mov
mov
adc
imul
add
fimuls
mov
dec
std
push
dec
xlat
adc
jb
jl
mov
cmc
dec
mov
mov
add
aas
cmc
insl
mov
insl
push
es
lea
out
outsl
xor
cmc
sub
cmp
ret
inc
bnd
hlt
fmulp
jg
jnp
cmc
outsb
inc
or
mov
or
mov
mov
es
mov
repz
inc
or
jns
inc
inc
mov
jb
leave
test
and
fcomps
shr
xchg
inc
adc
fidivrl
sub
add
es
iret
xchg
add
pop
daa
out
movsb
xor
fcomip
or
adc
xorl
scas
mov
mov
das
xorl
add
fisubrl
testb
jo
cmp
or
inc
leave
int3
lret
jns
pop
jo
inc
loopne
jg
jmp
js
mov
cmc
out
inc
cmc
sub
add
xchg
imulb
sti
popa
add
test
sbb
jmp
out
mov
push
test
mov
mov
add
cmp
add
fsubrs
add
push
xor
jp
frstor
js
push
or
sti
leave
cmc
push
sti
lcall
scas
mov
adc
stc
incl
adc
mov
add
add
ret
adcb
ret
jle
sub
xchg
push
daa
add
int3
mov
lock
or
add
add
pop
pop
or
inc
mov
cwtl
cmc
xchg
or
cmc
enter
popf
add
nop
cltd
arpl
jle
insl
stc
mov
mov
psubb
int3
dec
enter
jns
lock
mov
cmc
dec
fildl
jge
or
cmc
sub
add
dec
std
popa
outsl
fildl
test
enter
mov
cmc
dec
xchg
pop
les
cmc
mov
sti
insb
add
and
and
repnz
push
xchg
pop
pusha
std
push
fs
mov
scas
pop
enter
sbb
add
js
mov
int
pop
pop
add
paddsb
mov
mov
scas
jecxz
js
cmp
out
xlat
sub
leave
mov
js
xchg
jbe
push
cmc
es
or
rcr
jbe
push
cmc
es
jb
arpl
cmc
es
jp
daa
out
sbb
repnz
push
and
lcall
addb
add
mov
mov
cltd
jmp
or
mov
scas
mov
fdecstp
add
test
jnp
or
jp
insl
aad
out
mov
scas
jge
bound
xchg
stos
dec
icebp
inc
sub
out
sahf
mov
cmp
scas
sbb
and
or
imulb
punpckldq
adc
idivb
add
xchg
es
jae
bound
xchg
cmp
push
add
mov
jmp
lods
push
or
scas
sbb
inc
xlat
fisubl
pushf
mov
into
in
mov
cmp
cmpl
dec
scas
push
or
mov
add
aaa
xor
mov
adc
sbb
and
xlat
in
push
mov
jmp
dec
aam
add
lret
jge
mov
or
mov
jge
mov
jle
sbb
jmp
mov
pop
mov
iret
hlt
in
addr16
lods
aas
std
js
sub
outsb
mov
xchg
in
bound
jmp
push
lds
xchg
add
add
adc
repz
jge
cmp
cli
clc
nop
testb
insl
mov
or
out
insb
sbb
xor
lock
dec
out
stos
daa
or
mov
cld
jnp
xchg
jmp
cmc
outsb
roll
mov
stos
out
out
jmp
mov
pop
jo
out
jge
cmp
cmc
mov
jae
adc
jle
jnp
add
cmp
std
cmp
scas
cs
xlat
clc
ss
xchg
imul
out
inc
mov
pop
cmc
es
jnp
fwait
sbb
es
pop
cmc
es
push
xlat
fldl
mov
es
mov
mulb
or
cmp
call
pop
sbb
jmp
cmp
xor
mov
es
repz
pop
mov
insl
out
mov
aas
push
and
inc
jo
sbb
mov
add
idivb
mov
jl
enter
es
idivb
add
jnp
adc
mulb
nop
dec
jo
call
out
add
sub
jl
repz
add
jecxz
int3
pusha
cld
lret
int3
iret
call
fiadds
cmpsl
out
inc
shll
rolb
push
mov
int3
and
lret
int3
xlat
mov
dec
xorl
cwtl
mov
pop
adc
dec
inc
rcrb
adc
mov
push
adc
scas
cwtl
mov
add
out
jge
adcb
dec
adc
dec
adc
stos
mov
sbb
ds
or
cmp
mov
adc
dec
jl
mov
lcall
xchg
inc
int3
test
mov
mov
hlt
je
outsb
mov
push
shlb
add
xor
mov
push
in
lds
cvtps2pd
rolb
add
add
pop
jbe
xor
sti
xchg
cmp
inc
or
cmc
test
adc
jmp
mov
cmc
test
xor
mov
add
fcmovb
push
fisubrl
imul
sbb
jo
pop
pslld
cli
lds
adc
dec
fidivs
inc
mov
fwait
aas
test
imul
xchg
cmpsb
jnp
daa
lods
fsubl
jo
add
es
inc
lods
adc
aam
mov
je
and
sarl
ret
mov
ljmp
mov
cmp
jbe
jae
cld
jno
lods
sbb
enter
pop
call
dec
pop
and
movsl
ret
mov
int3
sbb
dec
jge
mov
test
sub
sub
stc
mov
push
out
sti
scas
jnp
adc
mulb
add
mulb
mov
daa
add
add
xor
jne
sub
sbb
outsl
sub
push
std
mulb
xchg
fiaddl
mulb
xor
push
adc
add
jmp
test
xchg
pop
addb
add
add
cmp
mov
into
dec
dec
xorl
mov
call
or
push
mov
xchg
pop
or
add
adc
adc
pop
adc
and
ljmp
je
cmp
xchg
add
fisttps
cli
jnp
mov
add
data16
add
mov
mov
jbe
jnp
pushf
js
or
hlt
add
int3
push
inc
ffree
mov
movsb
adc
push
les
loope
std
test
dec
jp
adc
jge
jmp
mov
xchg
stc
jp
int
jb
js
aad
std
incl
add
add
incl
mov
push
loope
std
xchg
movl
stos
imul
jno
stos
adc
mov
lahf
addl
add
pop
adc
or
out
jnp
jmp
xchg
jl
test
jns
jo
scas
imul
out
in
jge
loope
add
add
popa
add
mov
out
adc
pop
inc
jp
pop
pop
cmp
push
push
xchg
sub
js
cmp
movsl
add
je
adc
imulb
stc
bound
xchg
roll
imulb
stc
idivb
sti
pop
test
add
idivb
scas
fmull
xor
pop
stos
or
arpl
lods
std
int3
pop
cmp
test
sub
jmp
mulb
push
sbbl
sub
mulb
mov
cs
movsb
dec
aaa
jle
das
mov
sub
jmp
int3
das
jge
dec
jge
add
jmp
mov
mov
jle
jle
sub
add
or
sbb
jl
stos
inc
add
or
insl
cmp
jbe
mov
mov
add
cli
push
mov
mov
inc
int3
inc
jl
sbb
add
pushf
sub
pop
rolb
adcl
adc
popf
scas
cmpsl
push
pushf
sub
les
xchg
pop
stos
call
adc
ja,pt
jmp
std
pop
rcll
add
jno
mov
adc
cmp
xor
xor
xor
sub
in
jle
cmc
test
push
add
shlb
cmpsb
aam
jle
or
jae
int3
xlat
mov
lea
add
adc
cmp
pop
lar
clc
xor
leave
roll
jge
adc
gs
ret
adc
add
add
fistl
testl
js
fcmovu
jae
jg
cmc
es
lret
aas
cmp
xor
xorl
les
lahf
mov
xchg
push
add
jl
sbb
add
xchg
das
push
cmc
es
sar
mov
fisubl
imul
xchg
arpl
aaa
mov
stos
aaa
test
add
add
pop
cmp
pop
movsw
jno
out
cmc
fldenv
add
mov
jnp
movsl
add
or
je
into
mov
data16
sbb
mulb
push
inc
mov
stc
inc
mov
es
inc
fbstp
stc
ja,pn
or
ds
pop
xchg
das
test
adc
lods
fcomip
es
cld
mov
jecxz
dec
std
daa
dec
xor
sub
cld
lds
dec
std
arpl
add
aaa
mov
subl
fmuls
dec
mov
lods
jmp
es
cmp
or
out
push
test
mov
cmpl
dec
add
mov
test
inc
fisttps
xchg
orb
or
scas
sahf
movsb
and
add
and
inc
and
scas
sahf
and
jno
mov
xor
mov
adc
test
shll
mov
push
pushf
and
mov
jl
add
pop
cld
mov
adc
cmp
jb
or
std
test
xor
add
outsb
mov
mov
dec
dec
inc
jo
cmp
jp
cld
cmp
mov
cmc
cmp
and
adc
add
es
cmc
cmp
std
jle
or
lock
mov
outsb
insl
out
xlat
int
push
inc
ja
jmp
std
or
cmp
decl
mov
js
popf
out
out
aas
sbb
cli
sahf
jecxz
jno
cmp
jb
jb
push
jbe
sub
fsubs
addr16
add
enter
sbb
add
shll
enter
sbb
add
jb
add
mov
jg
shl
mov
ds
pop
in
cs
std
mov
loop
jbe
push
or
mov
add
cs
shrb
push
push
dec
rcrl
jp
test
fsubp
adc
stc
push
and
xor
mov
pop
int3
lods
ret
sbb
cmp
std
jp
stc
push
and
mov
pop
int3
xor
ret
inc
scas
es
test
call
gs
call
gs
call
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
icebp
add
add
mov
add
jae
add
arpl
add
push
pop
add
push
pop
add
jae
add
arpl
add
jae
stc
pushl
push
xbegin
call
call
movl
add
jbe
mov
testb
testb
testb
testb
testb
negb
jecxz
idivb
repz
idivb
idiv
mov
push
inc
mov
je
xor
jbe
inc
outsb
std
mov
cmp
jbe
or
xor
xor
sbb
rolb
data16
mov
insb
jg
aas
push
inc
dec
xchg
pop
sbb
loope
and
test
mov
and
mov
and
xchg
push
cmp
pop
dec
jl
and
outsb
lea
inc
flds
inc
iret
das
outsb
jne
xchg
bound
test
mov
daa
outsb
fcoms
sti
insl
rclb
adc
dec
inc
or
lock
add
add
add
gs
or
inc
mov
or
adc
test
cmc
repz
push
mov
sahf
sbbl
dec
insb
jo
or
shr
xchg
clc
es
jns
in
cmc
mov
mov
aad
jg
and
test
add
add
es
stos
divl
fdivs
test
push
mov
add
mov
mov
push
lods
cli
jle
fld
bound
pushf
add
notb
icebp
ja
or
and
add
jbe
jae
pop
sbb
in
xchg
jnp
jmp
fbld
shl
jnp
jmp
pushf
rcll
cmpsl
nop
imul
subb
pop
loopne
sahf
mov
and
xlat
push
test
mov
jmp
mov
push
sub
dec
sbb
add
and
jo
movsl
jae
fcompl
or
xor
test
add
sbb
push
je
or
jae
lahf
loope
pop
inc
cmpsb
mov
mov
call
pop
and
and
das
loopne
in
dec
cmc
adcb
add
sub
pop
push
push
xor
cmpsb
mov
mov
add
cmpsl
outsb
sbb
or
icebp
addb
or
gs
or
dec
test
xor
jg
inc
shll
pop
iret
push
jg
adc
push
fwait
xchg
jne
in
int3
aad
gs
cmpsb
push
cmp
xor
std
ret
xchg
add
add
bound
test
push
aas
or
cld
push
mov
and
les
addr16
test
jg
incb
test
jp
jl
cmp
and
dec
pop
stc
adc
pop
or
mov
iret
push
add
ds
xor
pop
fcomps
jmp
xchg
cmp
add
mov
mov
jg
cmc
es
xchg
fiadds
mov
push
outsb
add
ds
pop
jl
aas
in
mov
aas
add
push
faddp
inc
pop
gs
mov
sbb
lret
cmp
pop
dec
jo
add
and
outsb
rcl
out
std
inc
in
movsb
add
repz
shrb
std
sbb
add
add
and
adc
jno
sbb
in
inc
jb
and
sub
lret
test
adc
and
adc
jno
repnz
lret
out
test
movsb
push
and
sbb
adc
inc
and
jle
adc
and
add
in
loope
out
test
add
add
mov
repz
jae
lock
or
jecxz
cmp
stc
pop
outsb
fnstenv
jae
inc
add
arpl
and
xchg
stc
pop
pop
mov
adc
pmaxsw
repnz
jnp
cwtl
cs
pcmpgtd
movzwl
fstpt
aam
cwtl
stos
push
mov
das
leavew
aaa
nop
test
imul
xor
or
adc
ret
loopne
cmc
adc
jle
cmp
or
add
cmc
nop
or
sbb
repnz
cmp
ret
push
ds
int
xchg
push
and
or
add
clc
or
add
ret
adc
push
and
enter
add
add
testb
rorb
test
mov
push
in
or
std
push
nop
pop
or
cmp
int
or
ds
jbe
rol
sub
mov
push
stos
pop
int
or
scas
sbb
add
push
test
sub
insl
sub
shl
mov
push
outsl
mov
add
add
test
add
lret
push
push
outsb
mov
mov
daa
pop
stos
lcall
dec
jae
dec
jnp
insw
mov
in
xor
data16
stc
pop
cmp
insb
cmc
and
jo
add
orl
sub
jp
xor
ljmp
stc
add
add
stos
test
adcl
add
sub
jp
push
xor
jb
inc
or
aas
lods
add
cmp
out
lods
clc
jb
lods
inc
or
mov
xor
mulb
add
aas
movsb
jl
loope
jae
iret
loope
cwtl
fcomip
jno
push
repnz
inc
jg
and
cmp
inc
sub
movsb
mov
add
add
dec
jmp
mov
enter
je
add
lock
dec
enter
and
in
je
mov
cmp
mov
jne
mov
dec
jmp
mov
aas
leave
jbe
dec
leave
repz
shl
scas
jae
clc
scas
pop
and
mov
mov
out
mov
mov
test
loopne
mov
mov
std
push
movsb
divl
pushf
add
repz
jmp
mov
out
jl
add
cmc
fs
mov
mov
xchg
xchg
in
mov
pusha
inc
int3
cld
std
orl
xchg
dec
gs
nopl
fcomip
in
xchg
xchg
xchg
dec
mov
add
add
sub
ss
xor
jb
and
mov
add
and
push
mov
jmp
es
cmc
repz
jmp
daa
in
repnz
xchg
inc
cld
mov
jle
fistpl
mov
cmp
cmpsl
sub
xor
mov
adc
xor
test
pop
mov
fidivs
xor
xor
add
add
out
cmc
es
mov
loopne
sbb
cmc
lods
outsb
repz
jmp
jno
cmpb
jno
cmp
mov
xlat
push
mov
jb
js
jmp
dec
stos
pop
cmc
stc
arpl
xchg
cmpsl
inc
pop
loopne
mov
sub
xchg
out
or
xchg
jmp
xor
lea
test
pop
mov
roll
fimuls
jmp
jae
inc
inc
stc
cltd
add
sub
jno
inc
push
jb
test
inc
std
sub
shll
decl
add
adc
jno
add
pop
dec
push
mov
add
add
mov
add
jbe
adc
pushl
xor
dec
jne
iret
dec
and
clc
decl
adc
add
dec
push
js
out
sub
icebp
push
inc
pop
insb
pop
jbe
pushf
dec
or
jbe
dec
push
je
pop
jb
jae
fcoms
adc
push
mov
adc
mov
add
add
xchg
test
cmc
paddw
gs
jnp
clc
and
or
xchg
or
hlt
test
sti
adc
jo
xlat
fistl
jmp
or
mov
fwait
xchg
push
ljmp
push
jno
mov
pop
mov
outsb
lret
jge
push
xchg
loop
dec
je
rorb
add
add
into
cld
sarb
or
xor
add
adc
push
les
es
scas
fistpll
lret
push
sbbl
ss
stos
push
daa
call
jp
push
pusha
ds
push
jo
fstpt
and
aas
jl
sbb
xor
pop
jp,pn
push
jo
push
mov
jle
add
add
scas
mov
test
and
out
cmc
paddusw
ja
add
sub
push
sbb
jmp
mov
xchg
jmp
jmp
xor
mov
xchg
mov
std
popa
mov
call
sbb
jmp
outsl
loopne
mov
adc
iret
outsl
fsubl
add
add
bound
sub
repz
adc
pop
out
pusha
sub
test
mov
stc
jmp
cs
call
lods
push
scas
xor
add
fsubl
cmpb
sub
pushf
xor
popf
dec
clc
sbb
idivl
pop
xchg
je
cmpsl
inc
add
jge
shrl
sbb
js
inc
icebp
add
cmp
pop
scas
idiv
pop
es
add
loopne
mov
insl
sbb
fucomip
seto
add
or
sbb
orl
push
xchg
push
les
cmc
cmp
hlt
xlat
xlat
add
aad
or
mov
add
cmp
stc
lea
movsl
test
call
adc
loopne
cmp
fnstcw
push
cltd
adc
jecxz
mov
cld
xchg
in
repz
mov
jae
test
mov
inc
pusha
call
insb
repnz
rclb
hlt
jle
mov
push
idivl
rorb
je
sbb
add
sbb
cld
popa
xlat
out
cmc
stos
and
xor
jb
gs
lods
fwait
dec
insl
jae
add
outsb
mov
stos
and
pusha
mov
mov
mov
adc
scas
sub
aam
sub
ja
sbb
sub
lds
xlat
call
push
js
push
jp,pt
add
add
stos
ss
lods
sub
sbb
sub
outsl
jnp
stc
jno
es
and
es
cmp
movsb
rclb
inc
loop
std
lock
mov
xchg
jmp
sahf
mov
sbb
pop
mov
test
dec
ficompl
adcl
test
add
add
movaps
ljmp
roll
call
xor
inc
adc
adc
cltd
imul
test
hlt
cltd
outsb
idiv
adc
inc
adc
cmp
fsubrl
mov
mov
sub
add
ret
push
pop
xchg
ret
xchg
inc
inc
push
int3
sub
int3
addl
add
add
leave
add
call
jnp
fsub
aad
or
jnp
shll
or
int
adc
lds
aad
or
jae
fisttpl
push
insl
hlt
lret
jl
lock
je
and
mov
lock
xor
jmp
test
insl
repnz
dec
es
jp
xor
inc
adc
add
add
sub
cld
push
aaa
inc
stc
mov
cld
push
or
out
cmp
fucomp
cmp
cld
push
in
inc
stc
cmpb
ds
cld
push
int3
inc
stc
bound
lret
or
cmp
cmc
lods
inc
stc
inc
movsb
inc
aas
cmc
nop
inc
aas
cmc
cld
push
bound
adc
fimull
es
cmc
es
dec
cld
adc
inc
mov
daa
out
cmc
and
adc
inc
sbb
mov
add
add
adc
inc
xor
daa
out
cmc
es
pushf
adc
inc
fisubl
mov
shlb
out
cmc
es
adc
xchg
mov
daa
out
cmc
mov
xchg
sbb
mov
add
orb
test
add
add
es
inc
push
add
mulb
add
mulb
add
mulb
add
arpl
sahf
cmpsb
psubsw
xchg
jmp
imulb
jmp
testb
jmp
imulb
psubsw
push
psubsw
dec
psubsw
pop
psubsw
push
jmp
idivb
jmp
testb
divb
psubsw
cs
cmp
jmp
divb
jmp
dec
daa
inc
adc
adc
cld
adc
clc
adc
hlt
adc
add
sbb
cmp
sbb
sub
or
and
or
loopne
fsubl
fcoml
fsubl
fcoms
int3
es
int3
es
fsubl
sbb
fsubl
sahf
adc
es
int3
rclb
es
add
mov
mov
les
pushf
es
adc
in
mov
mov
adc
adc
adc
adc
cld
frstpm(287
cld
popa
in
cld
ret
in
cld
jg
add
jnp
add
ja
add
jae
add
and
cld
mov
in
cld
mov
add
std
or
std
pop
add
std
add
std
jmp
cld
sti
in
cld
mul
cld
repz
cld
ret
add
add
mov
add
cld
scas
in
cld
stos
in
cld
cmpsl
in
cld
das
add
add
daa
add
aaa
out
adc
ss
fnsave
out
loope
out
add
ss
in
ss
icebp
ss
cmc
ss
or
out
std
and
add
and
add
and
add
and
add
xor
out
lahf
aaa
out
xchg
aaa
out
jl
out
leave
cmp
add
ss
mov
out
int3
ss
mov
out
dec
and
add
and
add
or
test
jmp
test
jmp
divb
or
idivb
or
mulb
or
imulb
or
notb
or
idiv
or
testb
mul
push
jmp
divb
jmp
negb
jmp
mulb
jmp
testb
negb
jmp
testb
idivb
or
mov
inc
adc
subps
sub
dec
and
cmovl
and
pop
and
subps
sbb
dec
and
cmovl
adc
sbb
adc
sbb
or
or
mov
nopl
add
sbb
cld
push
or
clc
push
or
hlt
push
fsubrl
inc
adc
sub
int3
sub
int3
sub
fsubrl
loopne
fsubrl
fmull
int3
sub
push
int3
sub
push
pushf
sub
push
pushf
sub
mov
enter
les
pushf
sub
push
cmc
cld
mov
jmp
cld
mov
add
mov
cld
scas
repz
cld
stos
jmp
cld
cmpsl
add
std
mov
repz
cld
fwait
jmp
cld
xchg
add
std
cld
fcomi
cld
xlat
jmp
cld
roll
add
iret
sti
cld
lret
repz
cld
movl
add
add
cld
ret
add
std
aam
cld
shl
cld
mov
cld
arpl
add
cmp
cld
mov
add
std
imul
cld
dec
repz
cld
nop
ljmp
add
sbb
out
sub
out
add
out
jmp
push
out
adc
out
fstpl
add
add
add
sbb
out
popa
xor
out
pop
cs
shrl
out
jge
out
pop
das
out
and
out
loope
out
in
out
leave
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
jmp
neg
or
mul
or
test
jmp
not
or
notb
or
idiv
adc
negb
jmp
imulb
adc
divb
divb
or
negb
or
mulb
or
idivb
psubsw
in
psubsw
or
or
divb
jmp
imulb
jmp
pushf
daa
push
or
mov
dec
or
pushf
daa
inc
or
mov
sub
mov
cmp
pop
daa
and
dec
daa
sbb
pop
daa
adc
dec
daa
or
sbb
jge
or
cld
or
daa
clc
or
daa
hlt
or
daa
lock
daa
in
or
daa
call
or
sub
int3
es
int3
and
fsubl
sbb
fsubl
ss
cld
xor
add
std
sub
icebp
cld
mov
add
std
mov
cld
scas
icebp
cld
stos
jmp
add
mov
icebp
cld
stos
jmp
add
mov
icebp
cld
fwait
jmp
add
in
sti
cld
mov
jmp
cld
aam
add
add
cld
cld
fpatan
cld
aad
cld
roll
add
int
cld
pop
icebp
cld
pop
jmp
daa
out
and
out
and
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
out
add
out
or
out
rcrl
add
sbb
jmp
imul
add
div
add
div
add
neg
add
neg
add
mul
add
mul
add
test
jmp
not
add
neg
add
mul
add
idivb
add
test
jmp
divb
psubsw
stos
push
jmp
negb
add
divb
add
testb
jmp
notb
add
add
and
and
or
and
or
and
int3
and
pushf
and
or
mov
pushf
and
or
jl
pop
and
pop
and
and
or
or
or
or
or
or
or
sbb
add
or
add
or
cld
or
clc
or
hlt
or
lock
std
cld
jmp
add
add
paddw
decl
std
jecxz
paddw
out
paddw
decl
std
out
paddw
out
paddw
std
lret
decl
std
xor
paddw
out
paddw
decl
std
decl
std
mov
paddw
paddw
add
std
mov
out
paddw
decl
std
xchg
out
paddw
decl
std
xchg
add
add
paddw
out
paddw
sti
es
mov
out
test
out
popa
xor
add
out
pop
xor
add
out
xor
out
sub
xor
add
xor
add
xor
add
out
inc
xor
add
xor
add
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
out
stc
xor
add
xor
jmp
idiv
push
jmp
div
push
jmp
testb
jmp
testb
jmp
neg
push
jmp
not
push
jmp
testb
jmp
mul
push
jmp
idivb
push
jmp
not
push
jmp
test
jmp
mulb
push
jmp
notb
push
jmp
or
test
or
orb
sub
sub
or
je
or
jo
fsubl
insb
or
daa
push
or
daa
pusha
or
add
add
daa
pop
or
daa
pop
or
daa
push
or
daa
push
or
dec
or
inc
or
cmp
mov
xor
mov
xchg
or
or
or
or
or
or
or
or
or
or
std
jno
or
std
imul
add
add
or
std
pop
out
or
std
jmp
paddw
in
paddw
paddw
std
paddw
std
paddw
in
paddw
in
paddw
std
paddw
std
paddw
out
paddw
std
paddw
std
paddw
in
paddw
in
paddw
decb
std
adc
out
paddw
std
paddw
in
es
mov
out
pop
das
out
push
das
out
daa
sub
out
push
out
data16
out
jb
out
outsb
das
out
jp
out
jbe
out
bound
out
pop
das
out
dec
das
out
inc
das
out
mov
out
jnp
out
outsl
sub
add
out
addr16
add
out
pop
sub
add
out
push
sub
add
add
add
out
sub
add
sub
add
out
jg
add
imulb
add
jmp
idivb
jmp
notb
push
jmp
testb
negb
negb
jmp
divb
jmp
imulb
jmp
testb
idivb
jmp
divb
jmp
testb
dec
push
jmp
mulb
push
jmp
negb
push
jmp
dec
and
or
or
or
or
or
testb
and
or
out
or
ljmp
and
or
fimuls
or
fimull
fsubl
or
add
add
and
or
and
or
and
or
and
or
and
or
and
or
mov
mov
scas
or
cmpsb
or
sahf
or
xchg
or
or
std
xchg
in
or
std
mov
or
std
sub
or
std
jne
add
add
or
std
insl
cld
or
std
gs
or
std
pop
cld
paddw
paddw
paddw
paddw
paddw
paddw
paddw
paddw
cld
paddw
in
paddw
cld
paddw
in
es
adc
out
wrmsr
out
or
out
pop
xor
add
xor
add
das
out
sti
das
out
imull
out
xor
out
das
das
out
sub
out
daa
das
out
and
out
pop
das
out
sbb
out
pop
das
out
shrl
out
iret
cs
lret
cs
cs
ret
cs
mov
cs
mov
out
jae
out
outsl
cs
imul
add
out
arpl
out
pop
cs
test
jmp
negb
jmp
negb
pop
jmp
mulb
jmp
testb
jmp
testb
testb
negb
mulb
jmp
negb
jmp
divb
jmp
imulb
jmp
testb
divb
jmp
pushf
sub
or
and
mov
push
or
or
or
or
or
or
pop
dec
sub
pop
dec
sub
pop
sbb
cli
pop
sbb
testb
sub
pop
or
out
pop
sbb
ljmp
add
add
loop
or
fiadds
fsubl
fiaddl
fsubl
pop
int3
daa
rolb
int3
daa
into
pop
fsubl
lret
daa
movb
daa
ret
daa
mov
pop
pushf
daa
mov
cmc
or
std
mov
or
std
fs
or
std
pop
clc
or
std
push
clc
or
std
dec
clc
or
std
mov
or
add
repnz
std
jge
or
std
xor
or
std
sub
or
std
gs
std
pop
repnz
pop
cli
paddw
paddw
paddw
paddw
paddw
lock
stc
es
jmp
out
fbld
out
jecxz
out
and
add
and
add
and
add
and
add
add
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
mulb
add
idivb
add
divb
add
test
jmp
test
jmp
negb
add
notb
add
imulb
add
mulb
add
idivb
jmp
divb
jmp
testb
jmp
testb
negb
notb
jmp
fsubl
push
int3
and
add
and
add
testl
mov
push
pushf
and
push
pushf
and
push
mov
push
mov
push
pop
and
push
pop
and
push
dec
and
push
dec
and
push
pop
and
push
pop
and
push
dec
and
push
dec
and
push
sbb
incb
or
testb
add
add
repnz
sbb
ljmp
and
add
fsubl
fiaddl
cmc
or
std
shl
or
std
leave
lock
std
shl
std
mov
lock
std
mov
or
std
test
clc
or
std
popf
clc
or
std
xchg
clc
or
std
clc
or
std
test
or
std
jge
or
std
jne
or
std
insl
clc
or
std
gs
cld
popa
lock
inc
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
jmp
testb
jmp
not
add
neg
add
neg
add
mul
add
mul
add
imul
add
imul
add
divb
jmp
idivb
add
test
jmp
test
jmp
notb
add
negb
add
mulb
add
imulb
add
divb
jmp
idivb
add
push
or
data16
sub
fsubrl
pop
add
sub
int3
sub
fsubrl
push
add
sub
int3
sub
int3
sub
pushf
sub
pushf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
add
cli
add
testb
std
cld
cmc
idiv
cld
icebp
idiv
cld
in
idiv
cld
jmp
idiv
cld
loope
std
cld
std
cld
fdecstp
std
cld
aad
std
cld
shl
std
cld
int
std
cld
push
hlt
std
cld
sbb
std
cld
push
hlt
std
cld
adc
std
cld
or
hlt
std
cld
cmp
std
cld
add
std
cld
cmc
std
cld
cli
cmc
std
cld
div
std
cld
repnz
std
cld
in
cmc
std
cld
ljmp
cld
loop
std
cld
fdivp
std
cld
std
cld
cmc
es
inc
es
inc
es
ds
cmp
out
ss
mov
out
scas
daa
out
stos
daa
out
cmpsb
daa
out
mov
daa
out
lcall
add
mov
add
add
ss
out
ss
sub
hlt
inc
out
cmc
movsl
xor
jnp
ds
cmpsl
add
es
roll
cltd
sti
outsl
sub
cmc
movsl
cmpsb
decl
sub
jmp
rcr
add
cmp
push
sub
pop
jmp
mulb
add
adc
push
ss
and
mov
clc
jmp
popa
pushw
push
add
add
bnd
ja
push
call
ret
jecxz
test
out
cmp
add
out
add
mulb
mov
xchg
clc
push
sub
cmp
lods
inc
lret
aas
call
push
hlt
xchg
daa
and
jb
add
stos
inc
or
aas
jmp
push
add
lds
std
je
cmpsb
je
or
cld
or
add
lahf
leave
pop
loopne
jnp
push
icebp
mov
jne
cmpsl
cmp
fisubs
bound
testl
fisubs
inc
out
gs
out
and
xorl
jne
or
call
dec
mov
add
movsl
je
mov
add
dec
idiv
repz
sbb
add
cli
lcall
jge
in
push
inc
pop
sti
lcall
inc
cmc
sbb
jge
sti
fdivrl
jl
sbb
mov
aas
jge
sti
mov
sbb
mov
test
add
jge
sbb
mov
and
cmp
aas
jge
or
mov
inc
lret
xor
stc
mov
std
jg
stc
inc
dec
shll
fdivr
xchg
std
aas
stc
xor
aas
jge
int
jb
sub
jg
fcomi
jb
and
out
js
push
adc
and
xchg
mov
mov
add
and
lcall
mov
js
adc
je
jg
out
mov
jb
mov
imul
leave
in
pop
and
push
or
add
add
xchg
cmp
add
es
dec
in
or
inc
stos
mov
mov
pop
cmp
call
mov
adc
push
repz
out
mov
out
icebp
add
mov
jnp
ss
push
or
stos
jnp
sbb
out
out
add
or
test
jge
jge
fldt
mov
sub
add
pop
daa
call
sub
loopne
call
imul
jae
ficoms
push
xlat
stos
jg
stc
in
jae
into
pop
cli
add
dec
mov
jne
inc
cmp
dec
inc
mov
add
xchg
out
and
add
je
cld
xchg
std
adc
add
in
add
push
stc
insb
adc
ljmp
cmp
fucom
sbb
je
cmc
decl
cmp
fucom
sbb
dec
mov
inc
mov
sub
ret
pop
mov
pop
popa
and
mov
ret
hlt
push
adc
jnp
std
xchg
add
sbb
push
sub
cmc
std
cld
mov
enter
push
add
fdivl
add
clc
rolb
mov
in
sti
adc
inc
call
ss
and
cli
pushf
inc
jge
mov
jb
xchg
das
stc
loop
inc
call
jbe
jecxz
mov
lcall
pop
and
jbe
jecxz
mov
sahf
cli
mov
add
add
incl
push
and
mov
in
jl
gs
in
xchg
or
popa
fldl
mov
data16
es
adc
xchg
hlt
decb
mov
cmpsl
and
xor
mov
sbb
and
mov
js
in
add
inc
leavew
adc
cmpsb
subl
cwtl
hlt
incb
pop
fsubr
movsl
mov
add
add
or
mov
mov
jmp
pop
sub
es
add
adc
mov
repnz
jl
mov
jae
into
xor
push
adc
lret
sbb
in
repz
out
adc
sbb
push
repz
push
into
adc
mov
and
imul
stos
out
aad
clc
push
add
add
add
sti
cli
xchg
fucomi
mov
xchg
push
call
jmp
adcl
inc
cld
pop
jecxz
jnp
in
insb
add
in
clc
add
addl
cmp
add
cmp
call
andl
je
movsb
je
pop
sbb
dec
and
add
mov
add
pop
cmp
add
and
mov
je
cmpsb
je
pop
sbb
or
add
mov
lcall
mov
je
cmpsl
je
fistps
jge
int3
and
call
lahf
cmpsb
je
fists
sti
je
mov
push
mov
sbb
sub
jg
out
cld
xchg
inc
popf
sbb
mov
xchg
add
add
add
cmp
xchg
or
pop
std
loope
and
push
stc
sbb
enter
out
cld
xchg
pop
jbe
iret
aas
mov
std
nop
or
mov
sbb
mov
jg
push
cld
aas
call
int
pop
stc
fidivrl
stc
cli
add
shlb
fs
jecxz
loopne
lods
loopne
add
add
bound
add
xor
pushf
out
repnz
adc
xchg
hlt
sub
jl
and
xchg
hlt
decb
insb
out
sbb
out
hlt
incb
dec
out
or
jmp
hlt
incb
xchg
pop
sbb
movsl
xchg
pop
sbb
movsl
mov
call
out
jmp
add
jecxz
addl
in
stos
jb
adc
gs
leave
fstp
clc
sub
adc
test
clc
push
sub
mov
out
fistpll
hlt
into
cmp
loopne
push
cmp
imul
jl
add
insb
mov
fbld
jae
fidivrs
into
shld
add
daa
sub
into
daa
divb
repz
or
sti
loope
sahf
mov
cli
xchg
pavgb
adc
jnp
scas
sub
call
pop
mov
call
ret
pop
mov
call
ret
movswl
add
loopne
lds
sbbl
jae
adc
cmpl
je
adc
add
mov
je
adc
jge
sub
arpl
cmp
jge
in
push
inc
scas
sti
decl
jnp
and
insl
adc
lcall
je
cmc
rorb
stc
loop
sub
gs
mov
xor
addl
inc
call
jbe
out
jmp
int3
and
mov
mov
add
or
and
mov
out
std
add
and
insb
cmp
add
jns
cld
push
xor
inc
jge
sti
add
push
xchg
std
ljmp
stc
jbe
or
cmpsb
or
sbb
adc
or
jmp
hlt
into
out
in
jecxz
test
in
hlt
into
jp
fsub
movsl
test
jmp
add
into
xchg
mov
daa
shr
lcall
xchg
add
mov
repz
ss
aas
jecxz
test
xor
out
into
es
jecxz
sub
scas
stos
std
pop
push
test
iret
out
pop
cmp
arpl
cmp
sub
fldl
in
test
iret
xchg
jecxz
mov
popa
jnp
stc
push
adc
jbe
push
ljmp
call
stos
jbe
adc
gs
clc
push
sub
in
jne
add
test
push
or
mov
mov
lret
loop
jl
in
jecxz
mov
or
out
adc
jl
pusha
and
clc
out
jmp
jnp
notl
shrl
mov
jnp
and
add
call
je
pop
mov
call
dec
movsl
je
fstpt
idiv
ja
loopne
jbe
test
sbb
jnp
scas
daa
mov
lcall
mov
loopne
dec
cmp
xorl
cli
ret
cmp
je
or
add
adc
jnp
push
and
cmp
jo
push
fs
sub
insl
adc
sub
or
sbb
jl
idiv
cmc
mov
or
mov
or
dec
xchg
add
insb
xchg
adc
ss
div
sarl
xor
std
inc
push
dec
mov
inc
push
mov
inc
or
jg
sub
jae
jne
cmc
stos
jns
test
sub
add
icebp
sbb
cmp
fdivr
jp
aas
stc
mov
dec
xchg
sbb
and
stc
ss
roll
daa
test
inc
mov
or
imul
sbb
cmc
mov
add
loop
pop
jmp
adc
stos
sub
in
cwtl
out
xchg
pop
aad
xchg
pop
jmp
xlat
lea
xlat
in
pop
in
stc
call
stos
loopne
cwtl
fiadds
adc
loop
movsl
call
sub
repnz
lds
sub
push
push
or
imul
jae
and
mov
pop
lods
fwait
pop
xor
sahf
pop
sub
mov
pop
push
std
xchg
pop
sbb
xchg
pop
push
in
xchg
pop
adc
xchg
pop
push
fstl
pop
push
int
pop
add
notl
xchg
std
call
inc
lret
pop
je
mov
call
jmp
fwait
clc
lods
fwait
loopne
or
push
out
sub
mov
repnz
jmp
fbld
in
testl
mov
psrlw
call
ret
xchg
out
sbb
and
test
and
not
dec
cmp
orb
pop
jne
inc
repnz
imul
mov
movb
les
clc
dec
sub
mov
out
adc
mov
add
pop
and
add
or
lret
cmp
jb
jbe
add
clc
push
xor
call
jle
ljmp
rolb
mov
cld
push
iret
jnp
int3
push
inc
hlt
xor
cmc
iret
adc
push
mov
hlt
sbb
jp
mov
clc
ljmp
lcall
jne
mov
pop
xchg
add
jbe
stc
jb
push
add
pop
lods
jge
mov
loop
add
dec
lea
add
gs
divl
and
fucom
xchg
hlt
into
rorb
pop
fsubl
or
call
cmp
gs
push
loope
xlat
fsubp
adc
call
sbb
pop
movb
and
xchg
popa
push
push
dec
in
out
add
out
jo
push
add
es
pop
ss
out
mov
iret
jbe
mov
es
xor
jo
push
loop
bound
fcoms
push
ss
inc
test
pushl
mov
clc
sub
xchg
repz
add
addr16
sub
add
add
add
cmp
lahf
xor
cmp
or
aam
add
jl
add
je
ja
adc
bound
jge
jmp
jns
nop
imul
lcall
aaa
lcall
mov
xor
and
fldt
sar
aam
ret
lret
sub
ret
cvtps2pi
jne
movsl
lock
add
add
sub
ret
add
in
incl
pop
cmp
sbbl
adc
dec
add
fsubl
xor
jg
ds
hlt
inc
sub
sub
jbe
and
out
incl
xor
jl
pop
mov
rorl
andl
push
fs
incl
call
mov
int3
stc
inc
jmp
add
mov
cmc
aad
push
iret
jne
rclb
hlt
fimull
cmc
iret
mov
pop
lds
stc
push
nop
adc
mov
jl
flds
jns
and
out
stc
ss
jl
inc
out
push
cmp
imul
jp
jl
mov
sbb
mov
ljmp
stc
mov
in
loop
jbe
dec
rcrl
mov
rclb
or
or
std
cmp
out
cmc
push
clc
sbb
push
or
str
test
cmp
out
add
pop
int
stos
out
or
gs
mov
or
push
jmp
or
iret
lret
adc
pop
movl
popa
push
add
sub
adc
out
jo
push
std
inc
addr16
add
mov
pop
xor
lea
iret
xchg
push
int3
xlat
movsl
into
mov
out
inc
bound
jp
in
das
cwtl
jl
test
and
clc
sub
or
lock
sarb
fnstsw
jne
pushl
xor
clc
sub
or
add
add
div
jb
call
sub
mov
inc
add
arpl
test
ja
clc
jmp
mulb
add
loope
clc
popf
popa
aam
jmp
mulb
add
aam
add
fdivrp
fsubl
add
pushf
sub
add
lcall
push
sti
lcall
add
mov
add
jle
sti
ljmp
clc
lcall
sub
add
add
decl
push
sti
decl
add
add
ret
js
clc
jmp
lcall
add
sbb
add
and
pushl
cli
fsubrl
add
int3
sub
add
dec
sti
push
jae
dec
lahf
jp
ret
incl
add
add
mov
arpl
stos
outsl
lock
mov
cld
push
jae
std
subb
jp
jnp
jb
cld
push
mov
pusha
std
pop
sti
out
call
je
dec
mov
cld
push
inc
pusha
std
xor
icebp
ljmp
mov
std
and
cld
push
cltd
pop
std
or
repz
or
cli
mov
add
cmc
mov
pop
std
loop
repz
fcmovbe
out
cmc
es
cmc
es
cmc
es
cmc
es
cmc
cmpsl
insl
test
xchg
insl
mov
aam
addr16
aam
addr16
addr16
addr16
stos
addr16
les
aam
addr16
aam
push
push
aam
push
inc
aam
push
xor
into
data16
add
sub
mov
addr16
sub
aam
addr16
dec
addr16
outsb
data16
rcrl
lock
mov
clc
cmpsl
pop
sar
mov
clc
mov
pop
sar
pop
dec
sar
adc
clc
std
sbb
clc
pop
sbb
clc
dec
or
clc
lea
sar
jmp
adc
clc
or
adc
clc
in
clc
cmp
fcom
clc
gs
clc
xchg
clc
jmp
xlat
sar
test
sar
and
sar
mov
sar
stos
cwtl
sar
xchg
sar
add
sti
decl
sti
lcall
dec
sti
call
dec
sti
fsubl
add
and
ljmp
pop
sti
ljmp
pushl
sti
incl
add
add
pop
sti
push
pop
sti
jmp
pop
sti
incl
call
sti
fcomps
ficompl
mov
pop
sti
jmp
pop
sti
in
pop
sti
ljmp
sti
lcall
pop
sti
ljmp
pop
sti
cli
push
sti
ficoml
cmc
adc
add
std
cli
or
outsl
std
ljmp
std
fiaddl
std
rolb
outsb
std
ret
std
mov
insl
std
stos
jecxz
std
mov
or
xchg
subl
fildll
xor
std
jp
outsb
std
jb
outsb
std
push
insl
std
bound
outsb
std
pop
adc
push
aaa
outsb
std
dec
mov
push
std
xor
push
std
sbb
inc
jo
shll
add
add
rorl
jo
shlb
jo
shrb
pop
loopne
pop
fcom
cli
pop
rcl
out
pop
enter
rcl
je
shlb
je
shrb
je
shlb
jae
rolb
je
shr
jae
rorb
adc
jne
rclb
push
rorb
pop
shlb
push
shlb
rclb
add
xchg
lods
je
sarb
test
sar
fisttpll
sar
mov
adc
mov
clc
push
pusha
sar
popa
push
sar
adc
clc
inc
inc
sar
and
clc
int
sar
mov
and
clc
fldt
sar
jmp
sar
push
or
clc
cmp
or
clc
cltd
add
clc
jmp
clc
popa
jecxz
clc
gs
clc
lods
jecxz
clc
xchg
lret
sar
ret
ret
sar
scas
lret
sar
rol
sar
add
sti
decl
sti
ds
sti
call
pop
sti
call
sti
cmp
sti
call
sti
jmp
sti
lcall
sti
call
sti
ljmp
mov
ljmp
mov
call
mov
lcall
sti
pushl
sahf
sti
incl
add
add
sahf
sti
ljmp
sahf
sti
lcall
mov
decl
sti
call
pushl
sti
decl
add
push
sub
orb
sbbb
jle
sti
push
test
xor
cld
push
in
pushf
cld
and
pushf
cld
sbb
popf
cld
or
cld
cli
sbbl
ljmp
cld
pushf
cld
shlb
popf
cld
lret
cld
ret
cld
mov
fistpl
cld
mov
movsl
sahf
cld
xchg
addr16
cld
mov
lahf
cld
xorb
pushl
cld
push
inc
popf
cld
bound
xchg
cld
push
mov
inc
int
fwait
cmp
rcrb
sub
aam
and
repnz
sbb
negb
or
mov
add
movsb
cltd
stc
int3
nop
cltd
icebp
int3
mov
loope
pop
cltd
fxch
xor
leave
int3
dec
pushf
ror
pushf
mov
int3
je
test
int3
fcomps
xchg
int3
and
or
mov
fwait
imul
decl
jle
clc
jne
lret
clc
sub
pop
lret
clc
sbb
clc
lea
lret
clc
popf
or
clc
test
push
lret
clc
lcall
clc
jecxz
lret
mov
clc
out
lret
jle
clc
ret
jo
clc
lds
clc
lods
pusha
lret
pop
lret
mov
clc
fildl
lret
or
sub
add
add
clc
mov
imul
mov
lret
lret
lock
sti
incl
sti
incl
sti
call
sti
lcall
sti
call
lods
sti
call
scas
sti
pushl
lods
sti
inc
lods
sti
pushl
mov
lcall
mov
call
mov
push
mov
push
mov
decl
call
sti
incl
add
add
sti
fsubrs
fisubrl
inc
mov
call
sti
ljmp
push
scas
xchg
cld
jb
xchg
cld
push
xchg
cld
bound
pop
or
cld
dec
es
cld
inc
pushf
xchg
cld
cmp
cld
push
lods
cmpsl
cld
sub
cmpsl
cld
sbb
cmpsl
cld
adc
cmpsl
cld
or
mov
add
xchg
mov
cld
repnz
mov
cld
loop
mov
cld
shrb
cmpsl
cld
ret
cld
mov
mov
popf
cld
mov
ja
cld
xchg
gs
cld
mov
mov
add
sbb
cmc
cmpsb
jmp
cmc
cmpsb
out
cmc
cmpsb
jecxz
cmc
cmpsb
loope
cmc
cmpsb
xchg
add
cmpsb
movsb
mov
cmp
inc
mov
sub
ljmp
leave
jne
cmc
cmpsb
andb
leave
lock
cmpsb
sti
add
cmpsb
push
add
cmpsb
in
cmc
cmpsb
aam
cmc
cmpsb
call
add
cmpsb
lret
enter
enter
enter
cmpsb
in
cmc
cmpsb
aad
cmc
cmpsb
incl
mulb
sub
add
lret
clc
pop
lcall
out
cwtl
lret
clc
fsts
lret
clc
pop
xchg
lret
clc
aad
lret
clc
xlat
nop
lret
clc
test
push
lret
clc
fwait
pop
lret
clc
xchg
push
lret
clc
mov
clc
jns
lret
clc
addr16
lret
clc
addr16
lret
clc
jnp
lret
nop
lret
cwtl
lret
nop
lret
cwtl
lret
nop
lret
cwtl
lret
nop
lret
pop
lret
mulb
add
push
test
ljmp
lcall
sti
inc
cmp
outsb
cmp
nop
test
lcall
add
dec
jns
dec
pop
insl
cmpb
mov
imul
aas
gs
outsl
popa
insl
jno
outsb
jno
data16
nop
cmp
outsb
sbb
outsl
add
inc
je
xchg
dec
je
cmp
insl
xor
movb
add
add
pop
jb
cmp
pop
insb
incl
je
push
data16
xchg
call
daa
jo
adc
push
or
push
arpl
mov
pop
je
ficomps
jmp
xchg
jmp
jmp
push
dec
fdivs
cld
lods
stc
andb
lahf
cld
idivb
pop
mov
inc
insb
pop
xchg
inc
push
arpl
iret
cld
jmp
push
bound
dec
add
pop
push
je
arpl
imul
cld
xor
es
dec
adc
cmp
out
movsb
sub
adc
and
je
add
addr16
jbe
insl
push
dec
shll
cmp
mov
mov
jne
cmp
data16
add
mov
xchg
pusha
test
shrb
mov
clc
push
mov
outsb
mov
push
test
scas
sub
pusha
lahf
addr16
mov
jnp
mov
inc
je
push
sub
sub
dec
sbb
cmp
bound
add
and
dec
inc
inc
dec
dec
add
add
push
cmp
push
push
arpl
stc
push
ljmp
or
dec
insb
or
add
add
cmp
and
jmp
sarl
dec
enter
fucomi
dec
outsb
jmp
mov
push
mov
mov
es
stc
jb
mov
jb
mov
add
andb
mov
add
cli
dec
insl
push
imul
ss
add
loop
insl
add
cmp
add
lods
les
cmp
in
cmp
outsl
loope
insb
je
insb
jno
stc
sub
loope
insb
je
insb
jno
stc
push
addr16
cmc
inc
pop
inc
movsb
dec
push
movsb
sub
dec
insb
inc
ds
add
dec
jne
cmp
cmp
pop
outsl
jle
pop
outsb
outsl
cmp
dec
je
mov
mov
pop
fs
test
inc
adcl
daa
lods
add
pop
popa
cwtl
inc
push
push
cmc
iret
cld
int
pop
pop
pop
gs
pop
aas
popa
je
pop
cmc
test
inc
pop
outsl
je
dec
sbb
pop
cmc
nop
std
inc
adc
je
daa
sub
cmc
cmc
std
inc
sbb
insl
push
or
add
ja
pop
in
pop
insl
jmp
cli
std
inc
fsubr
insb
cmp
fmul
cld
call
test
popf
popa
je
lods
push
imul
insb
push
cmc
nop
ljmp
es
jb
dec
push
dec
cmc
es
add
aas
push
gs
dec
sub
inc
push
xor
dec
push
xor
push
or
daa
movb
add
push
cld
pusha
inc
push
sub
imul
push
pop
add
daa
add
fisttpl
push
xlat
cmp
rclb
inc
ret
dec
cmc
es
add
dec
enter
ret
pusha
cmc
es
xchg
push
lret
dec
cmc
es
add
dec
xchg
pusha
test
push
add
mov
dec
imul
sub
dec
inc
inc
push
xor
dec
push
cmp
pop
add
push
dec
fs
hlt
imul
add
add
addr16
cmp
stc
enter
cmp
or
push
addr16
jecxz
arpl
mov
jae
aad
dec
fs
fs
es
mull
lcall
nop
xchg
inc
push
jmp
dec
add
addr16
and
add
fs
popa
js
and
and
repnz
pusha
insb
add
add
sub
aaa
pop
js
and
add
pusha
je
sub
insb
data16
xor
popa
add
mov
dec
add
cmp
mov
sbb
dec
cmp
push
jno
inc
pusha
gs
lcall
xorb
jg
outsb
xchg
cmp
cmpl
insb
cmc
mov
imul
add
xchg
std
cmp
mov
je
mov
pop
jno
imul
pop
push
dec
bound
push
push
inc
outsb
push
arpl
stc
and
xor
arpl
pop
arpl
sahf
add
sbb
or
push
movntps
cmc
xchg
pop
push
or
jo
adc
inc
insb
loope
popa
add
rolb
dec
fsub
pop
jb
sbbl
lock
out
add
add
inc
shlb
addr16
push
xchg
dec
test
inc
daa
stos
push
mov
xchg
push
mov
jnp
xchg
dec
test
push
pop
dec
xor
imul
and
insb
push
push
and
pusha
push
push
out
repz
imul
dec
sbb
cmp
imul
cmp
bound
add
add
out
mov
push
aad
out
shrl
cmp
imul
xor
push
mov
push
arpl
rcrl
lea
inc
idiv
insl
mov
dec
pop
mov
loop
sub
imul
pop
push
push
jmp
dec
dec
push
inc
dec
pop
inc
sub
stos
std
push
push
push
add
icebp
push
or
pop
outsb
lock
add
fistpl
sbb
jno
ror
add
jb
cmp
dec
je
pop
inc
insb
xor
insb
jo
repnz
outsb
insl
cmp
jae
add
fwait
daa
aas
mov
insl
jno
fs
popa
data16
add
mov
dec
add
dec
jo
inc
inc
outsl
dec
sub
insb
cmp
into
add
dec
gs
cld
pusha
popa
gs
gs
inc
xor
sub
jb
inc
je
lret
gs
inc
jo
in
pop
push
mov
call
insb
cmc
inc
pop
je
lcall
cmp
add
rolb
fsub
jno
rcrb
pusha
add
flds
inc
cwtl
jno
imul
add
add
xchg
pop
arpl
int
cltd
testl
pop
push
hlt
bound
push
arpl
sar
xchg
stc
cld
data16
pop
outsb
arpl
outsb
dec
popa
outsb
addr16
add
cld
data16
das
insl
je
push
outsb
imul
sbb
inc
jb
and
cmc
or
inc
fldenv
shlb
add
add
dec
stos
pop
mov
and
enter
lret
pop
cwtl
dec
out
and
mov
push
xchg
inc
adcl
out
push
and
fs
pusha
jne
xchg
arpl
xchg
pop
pop
xor
push
sub
cmc
es
or
xor
jae
inc
cmp
sbb
add
and
add
add
push
pushl
dec
add
dec
sti
push
push
add
fdivl
push
add
inc
pop
int
dec
push
int
je
imulb
movsl
fnsave
push
mov
popa
fs
movsb
inc
pop
popf
lea
xchg
lea
push
jmp
popf
xor
popl
pop
mov
in
push
insb
pop
ss
insb
inc
push
daa
add
cmp
inc
icebp
ud0
and
sbb
dec
pop
or
dec
add
imul
add
imul
or
gs
insl
insb
xor
cli
pop
insl
xor
add
and
and
insb
xor
je
pop
pop
jne
inc
imul
add
andl
cmp
push
sbb
mov
inc
xorl
pop
jae
cld
arpl
lea
push
gs
popa
outsb
cmp
xor
mov
popa
loopne
dec
or
gs
push
cmc
cs
push
pop
adc
push
mov
outsb
insl
loope
add
idivb
imul
sbb
arpl
rcll
cmc
push
incl
jno
outsb
mov
loope
push
fwait
popa
imul
incl
xchg
popa
outsb
xchg
nop
pop
gs
mov
bound
ss
cmc
add
imul
pop
pusha
push
pop
aas
cmc
mov
push
push
icebp
cmp
inc
push
arpl
add
icebp
sbb
inc
daa
or
inc
dec
or
daa
cmpsl
add
dec
adc
jo
add
add
push
cmc
pop
rorb
jbe
es
push
lods
ss
pop
scas
cmp
pusha
int
out
inc
sub
outsl
cli
dec
mov
cmpsl
dec
cmpsb
pop
lahf
cmp
jbe
aas
mov
dec
out
push
sub
push
xchg
cmp
mov
cmp
popa
cs
push
pop
dec
push
inc
pop
pop
cmp
add
daa
sub
insb
aas
pop
sub
inc
adc
dec
pop
or
xor
sbb
inc
dec
adc
inc
ja
or
add
aad
outsb
fisttpl
ficompl
cmp
addr16
cmp
cmpsb
inc
imul
mov
dec
lods
loop
cs
mov
insb
jmp
lahf
inc
je
xchg
inc
insl
mov
push
jmp
negb
fwait
pop
aaa
push
push
arpl
jae
sub
daa
add
stc
icebp
add
cmp
push
pushf
sub
add
push
je
stc
cmp
outsl
out
pop
addr16
sub
add
push
je
out
dec
dec
add
add
xor
add
test
inc
dec
imul
sub
gs
add
add
gs
imul
and
cmp
cmp
push
gs
fsubl
inc
add
inc
pop
jb
dec
pop
jae
push
std
inc
pop
insb
outsb
push
pop
pop
push
daa
arpl
sbb
inc
sbb
xor
adc
sbb
push
insl
cmc
cmp
inc
sbb
or
push
jno
scas
push
pop
ret
sbb
add
leave
je
push
in
push
in
arpl
ret
aam
push
push
pushf
jecxz
imul
outsl
pop
popa
pushf
nop
push
pop
xchg
add
movsb
pop
pop
mov
push
push
daa
out
insl
daa
and
sub
push
push
xor
add
imul
inc
xor
add
shlb
popl
cmp
add
aas
and
ds
push
in
pusha
add
dec
or
mov
inc
lret
push
jecxz
dec
cmc
outsb
add
dec
rorl
lret
push
movsb
push
mov
enter
xchg
and
pusha
mov
jb
push
add
and
pusha
xchg
cmp
mov
push
add
xor
push
arpl
add
cs
arpl
push
popa
inc
sub
add
stc
arpl
ss
cmp
inc
pop
cmp
daa
add
arpl
ss
sbb
inc
push
push
out
add
pusha
arpl
rolb
out
imul
inc
inc
loope
add
pop
outsb
enter
enter
les
es
icebp
arpl
jo
test
jmp
notb
jmp
lahf
and
add
push
pop
je
push
pop
arpl
sub
add
push
pop
imul
add
push
and
inc
outsb
fdivrl
je
xor
arpl
add
add
inc
repnz
inc
cmp
shrl
gs
addr16
xor
arpl
push
je
sub
add
add
push
add
into
and
gs
arpl
xor
inc
dec
and
add
pop
imul
push
pop
xchg
pop
hlt
mov
xor
pop
push
cmc
xor
dec
jo
pop
jo
daa
imul
adc
xor
in
pop
popa
adc
add
cmc
add
and
mov
pop
pop
out
push
jno
stos
dec
add
sub
push
lret
addr16
fcomps
cmc
jnp
inc
fcom
aaa
arpl
dec
je
jns
add
inc
incb
jns
addr16
push
test
sahf
add
dec
xchg
jo
inc
mov
cmp
push
xor
pop
dec
push
push
jb
ds
push
dec
cmp
jno
xor
cmp
adc
inc
jb
push
out
loope
cmp
inc
or
cmp
jno
add
es
add
mov
push
out
jbe
stos
push
movsb
aas
shll
out
stos
daa
stos
push
xchg
cmp
sahf
mov
mov
lock
push
xchg
push
orl
imul
dec
cmp
mov
stc
imul
stc
sub
cmp
sbb
cmp
dec
push
dec
push
jmp
or
push
cmp
pop
adc
and
adc
icebp
test
xor
cmp
int
arpl
lods
gs
lds
add
sti
push
imul
popf
dec
add
imul
pop
push
or
dec
add
je
jns
insl
dec
push
dec
data16
sub
fwait
aas
je
jns
insl
push
pop
inc
je
fsubrl
or
sbb
xor
jae
dec
gs
in
add
push
imul
popa
fiadds
gs
lds
pop
outsl
lret
and
add
bnd
pop
inc
gs
cmp
add
add
add
inc
je
cmp
insl
dec
sub
push
cmc
fisubl
cmc
mov
inc
nop
imul
testl
push
imul
mov
jp
insl
dec
xor
inc
mov
popa
je
dec
bound
pop
push
add
sub
dec
sbb
arpl
outsl
pop
daa
bound
je
ljmp
adc
dec
arpl
adc
adc
inc
inc
cmc
aas
incb
test
pop
fs
push
gs
lods
dec
add
movb
xor
push
les
mov
nop
aaa
enter
out
fisubrs
lcall
inc
mov
xor
cmp
es
aaa
dec
xor
test
push
push
cmc
es
push
push
arpl
xor
cmc
es
add
and
inc
imul
inc
or
xor
pop
fidivrl
stc
add
es
inc
repz
fnstsw
jno
lods
dec
je
sarl
jmp
mov
inc
push
xchg
aaa
dec
mov
xor
mov
pop
arpl
lea
insl
mov
inc
pop
je
dec
inc
imul
pop
arpl
dec
xor
add
add
sbb
je
and
je
icebp
and
and
aaa
push
inc
sbb
push
leave
aas
nopl
add
fdivrs
add
push
add
xchg
daa
dec
gs
lock
outsb
lock
sub
push
and
add
add
push
bound
xor
pop
and
je
cmp
jae
cmp
inc
and
je
jne
outsl
sbbl
mov
add
push
pop
outsb
inc
and
add
inc
je
and
cmc
pop
arpl
xor
cld
push
popa
outsb
loopne
pusha
outsb
inc
cmp
dec
and
push
icebp
inc
je
cmc
push
std
inc
fistl
popa
outsb
out
pop
je
and
cmc
jl
inc
push
push
inc
popa
add
dec
add
pushf
loope
dec
nop
fcoml
cmc
nop
add
dec
pop
mov
fs
nop
insb
dec
pop
lcall
dec
cwtd
xor
xchg
inc
imul
dec
insb
pop
sbbl
cmc
ljmp
sbb
add
pop
std
inc
adc
addr16
pusha
dec
or
push
arpl
or
or
cmp
les
stos
add
xor
or
lods
inc
imulb
inc
cmc
fisubs
cmp
add
push
cmpsb
cmp
mov
xor
es
xor
push
adcl
mov
pop
fwait
add
pop
jnp
dec
or
push
push
out
xchg
daa
xor
add
pusha
push
inc
jmp
push
sub
inc
pop
cmp
es
add
sbb
or
incl
cmove
push
add
fcomip
insl
push
rorb
insl
sbb
add
clc
out
std
add
sbb
imul
mulb
push
mov
enter
add
adc
xchg
stc
out
popf
ret
or
aas
pushf
cmp
imul
idiv
lods
push
sbb
or
dec
or
sbb
je
push
adc
dec
stc
arpl
sub
gs
cld
data16
push
mov
pop
add
jmp
dec
outsl
repz
pusha
jbe
minps
pop
pop
insb
dec
push
dec
add
sub
fs
push
pop
push
dec
adc
push
imul
sub
jb
stc
jae
cmp
pusha
push
pop
popa
orb
jne
pop
dec
add
sub
jb
clc
jae
jns
inc
gs
pop
pop
jb
sldt
xchg
cmp
sti
jae
cmc
ljmp
sbb
cld
mov
push
push
ja
bound
push
pop
push
imul
or
inc
out
pop
insb
rorl
imul
cld
xor
push
pop
je
sub
shll
cltd
cld
imul
addr16
push
je
jbe
push
mov
imul
imul
dec
pop
lods
inc
jo
lods
dec
arpl
push
cmc
faddl
dec
pop
lods
cmp
stos
dec
arpl
push
push
cmc
es
push
inc
or
sbb
pop
cmp
push
add
xor
sbb
sbb
sub
dec
or
sbb
or
fisttpl
out
cmpsl
sub
pop
leave
testl
push
lret
push
cwtl
sbb
push
test
pop
ret
add
mov
mov
or
push
sbb
mov
add
cmpsb
push
imul
mov
push
je
push
sbb
jo
push
insl
mov
or
sbb
push
dec
out
pop
pop
inc
or
push
insl
dec
daa
or
adc
push
jmp
adc
dec
or
adc
inc
or
add
rcrl
sti
pop
add
icebp
fdivr
sbb
sbb
adc
inc
les
add
add
add
sbb
out
pop
aad
pop
lcall
je
scas
add
decl
sub
arpl
push
push
add
dec
sub
jae
pop
je
or
call
incl
sar
insb
popa
sub
fs
and
dec
dec
jg
es
add
or
outsl
jbe
add
add
cmc
outsl
jb
or
sub
inc
repz
mull
inc
add
add
push
popa
inc
or
dec
push
or
inc
add
push
push
adc
or
mov
addl
or
fistpl
dec
mov
pop
dec
inc
stos
pop
push
cmc
mov
dec
push
sbb
es
outsb
adc
dec
imul
add
add
sbb
push
adc
insb
dec
push
notl
adc
dec
push
cmc
lock
inc
insb
push
fstpt
dec
imul
sub
insl
stos
cld
je
cmp
pop
je
and
sub
cmc
sub
dec
test
mov
cld
dec
xchg
fldenv
push
pop
pop
pop
daa
xchg
sub
filds
inc
push
fwait
imul
jns
pop
push
xchg
push
jge
and
insb
add
push
jae
inc
or
or
push
cmc
es
add
adc
ss
sbb
inc
inc
cmc
add
mov
push
and
daa
and
rcrb
xor
adc
inc
cmc
es
test
cmc
xor
es
add
or
pop
cmpsl
add
add
xchg
mul
add
add
push
adc
dec
push
push
jmp
sub
inc
sahf
notb
cltd
push
adc
sbb
mov
or
ss
dec
add
adc
push
inc
sub
adc
icebp
jmp
sbb
pop
add
cmp
cmp
push
arpl
lods
adc
stc
sbb
out
cmc
mov
or
enter
jmp
xchg
adc
cmp
or
xor
imul
popa
cmp
cs
sub
gs
pop
imul
pop
insl
imul
dec
gs
add
decb
insb
xor
jle
fcomip
pop
popa
enter
mov
add
add
or
xor
pop
popa
add
adc
cmp
add
or
std
or
dec
sub
or
cmc
or
inc
add
push
add
cmc
xor
cmp
xorl
inc
jge
cld
pop
cmc
sarb
dec
cmp
inc
outsb
push
stos
xor
pop
popa
cmc
mov
dec
inc
and
les
dec
int
inc
cmp
cld
push
shl
pop
insb
cmc
and
cmp
adc
imul
pusha
fcoml
pop
in
cld
das
cmc
push
push
arpl
cmp
loop
dec
pop
shll
insb
fadds
add
pushf
add
cltd
popa
pop
mov
add
push
cmc
es
add
add
gs
add
push
cmc
es
add
sbb
bound
add
add
stos
inc
inc
daa
add
fwait
inc
push
adc
xchg
daa
push
add
add
inc
cmc
testb
or
out
mov
jecxz
inc
sbb
ss
es
add
and
pop
adc
or
add
sub
push
loop
add
sub
sbb
add
clc
jmp
pop
add
ljmp
mov
sar
push
adc
pop
sbb
inc
adc
pop
out
jmp
jmp
or
mov
loope
push
stc
loop
xor
push
adc
outsb
dec
or
arpl
add
shlb
add
pop
arpl
mov
inc
add
push
pop
cmp
je
out
insl
gs
pushl
es
push
dec
out
insl
gs
dec
cmp
pop
je
es
add
cmp
jmp
icebp
outsb
outsl
scas
cld
cmp
jno
jae
int3
and
cmp
add
aas
cmc
push
outsl
pop
icebp
imul
and
arpl
add
xchg
imul
cmp
add
push
sub
aaa
es
add
arpl
push
inc
cmc
push
cmp
cwtl
dec
je
sub
cmpsb
xchg
pop
outsb
cwtl
cld
push
cmc
dec
outsb
test
jae
cmp
xchg
pop
pop
mov
outsb
mov
je
fsubl
cmc
mov
cmp
mov
pop
dec
dec
mov
add
pop
fstl
inc
stos
xor
cmc
jnp
cmp
sbb
cmp
inc
cli
pop
outsb
adc
popa
outsb
add
jae
dec
popa
outsb
add
popa
addr16
out
push
arpl
inc
pop
dec
jmp
les
adc
adc
pusha
fiaddl
or
jecxz
push
test
add
rcll
push
roll
out
mov
lods
loope
push
mov
inc
xchg
adc
xor
mov
ss
out
enter
bound
xchg
ss
pop
xchg
pop
inc
add
cmc
cmpsb
xor
lcall
daa
inc
add
adc
inc
adc
out
cmp
out
add
daa
xor
add
cmp
add
or
or
adc
jmp
stos
adc
mov
add
add
push
je
enter
idivb
arpl
mov
je
xchg
mull
lahf
or
test
scas
push
sbb
dec
or
sbb
inc
push
imul
es
mov
in
js
or
aaa
daa
add
inc
push
fs
lret
or
adc
je
adc
arpl
sub
push
pop
sub
adc
jae
incl
fs
or
stc
std
jae
pop
sub
gs
je
cli
pop
outsb
arpl
aad
jae
ds
je
data16
push
pop
outsb
cmp
pop
add
push
push
mov
sti
jo
jl
pusha
outsl
sub
cmp
inc
outsb
push
in
gs
outsw
ja
pop
inc
mov
imul
lock
cs
pop
je
inc
push
pop
push
jmp
add
cmc
push
push
je
xor
fnstenv
pop
outsl
loopne
push
je
inc
inc
add
pop
add
leave
cmp
cmp
dec
arpl
jg
lods
cmc
push
je
jno
arpl
jnp
je
rolb
popa
bound
push
imul
cmc
clc
cld
inc
dec
mov
outsb
arpl
push
ja
lahf
dec
pop
xor
and
adc
lahf
cmc
push
je
daa
push
pop
push
sbb
pop
adc
and
mov
sbb
push
mov
or
dec
pop
sbb
cmc
es
add
add
pop
roll
push
test
sti
xor
add
pop
pop
xchg
or
add
add
nop
sti
out
mov
stc
aam
rolb
dec
arpl
mov
push
add
add
daa
lahf
dec
popa
pop
test
pop
stc
adcl
xchg
dec
sub
sbb
cmc
es
cmp
fdivrp
cmpsb
jecxz
sub
int
ds
inc
cs
adc
pushl
rcrb
push
cmp
add
dec
inc
mov
add
add
loopne
adc
mov
bound
call
add
std
roll
arpl
fildl
jae
mul
inc
mov
testb
inc
fs
imul
bound
testb
cltd
aas
daa
add
lret
test
outsl
jmp
mov
fs
loop
decl
push
jne
loop
ja
es
add
add
add
cli
insb
jb
push
pop
insb
mov
add
add
daa
gs
sub
sti
or
add
es
ja
stc
pusha
add
push
add
sub
cmp
insl
arpl
loop
fs
incl
push
add
push
daa
popa
jae
push
pop
fs
jae
fsubl
add
cmc
fcomps
push
cmp
test
push
push
pop
push
mov
pop
je
filds
push
clc
pop
je
jmp
add
sar
aam
push
imul
cmp
pop
aam
pop
imul
sar
mov
xchg
pop
imul
ss
arpl
and
cwtl
bound
ret
cmp
stc
fmuls
mov
add
inc
add
pop
int
je
xlat
cld
xchg
mov
je
daa
pushf
dec
xor
test
hlt
lcall
es
cmp
mov
prefetchnta
add
or
push
adc
aaa
push
or
inc
push
loopne
xchg
add
add
iret
or
shr
cs
push
sbb
add
pop
rcrl
or
cmc
es
add
or
cs
incb
push
cltd
add
mov
push
pop
test
rclb
iret
push
mov
aad
popf
and
int3
push
popa
lock
bound
add
cmp
sub
jmp
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
fsubrl
add
int3
sub
add
sub
add
sub
add
sub
add
sub
add
xorl
add
cmp
or
add
pop
mov
mov
add
mov
add
pop
sub
add
add
idiv
pop
sub
add
add
sbb
add
arpl
add
int3
and
add
sub
add
add
sub
add
and
add
sbb
add
or
add
cmc
jg
std
xor
cld
push
jg
add
add
add
jg
push
jg
pop
xor
jg
push
mov
cld
push
jg
push
scas
rorl
cmp
cmc
jg
push
and
push
jg
pushl
xchg
adc
jg
call
jg
push
jg
mov
mov
cld
call
leave
inc
rorl
pop
lods
cltd
dec
es
fwait
out
pusha
incb
sbb
imul
movsl
adc
cltd
pushl
out
subb
test
fwait
test
inc
lds
ret
jg
mov
mov
mov
in
xchg
push
out
xchg
repnz
outsl
xchg
push
movsb
out
call
mov
outsb
stos
out
stos
les
add
adc
adcl
adc
rorb
and
lea
cwtl
jno
cmp
push
imul
and
mov
inc
in
ss
ja
jb
scas
jecxz
mov
into
push
xor
orl
lock
push
cltd
push
push
dec
leave
out
dec
cltd
lret
push
inc
test
sbb
push
bound
add
add
jb
xchg
arpl
sub
or
cs
or
dec
dec
cmp
add
pop
lret
movsl
inc
xchg
cmp
sub
roll
scas
push
xor
aas
out
xor
jmp
outsb
mov
and
in
push
pop
xorl
cld
sbb
jmp
aas
pushf
add
mov
mov
mov
cmp
aas
into
enter
mov
fdivrl
jmp
push
loope
pop
mov
icebp
rol
out
pop
dec
cmp
ffreep
adc
lods
cmpsl
aas
push
mov
inc
fbld
xor
jne
in
test
push
push
push
xor
jae
xchg
insl
jne
lret
sub
jp
jo
mov
xor
mov
iret
pusha
fs
fsts
sub
fists
popf
xor
jno
xor
xor
ss
mov
into
int
inc
xchg
cmp
lret
test
xchg
jae
push
add
pop
mov
jb
enter
jge
fimull
jns
xchg
enter
insb
xor
push
movsb
dec
popa
addr16
test
arpl
dec
push
insb
loop
ja
cmp
cmp
inc
pop
pop
stc
ret
cwtl
or
stos
mov
push
cmpsb
jb
xchg
xchg
inc
mov
fsubrs
test
cmpb
xchg
pop
ss
mov
and
cmc
es
cmc
es
cmc
es
inc
mov
out
inc
mov
call
add
es
mulb
add
mov
out
call
mulb
add
mulb
add
mulb
add
mov
call
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
inc
add
or
pushl
add
ljmp
imul
add
add
inc
add
jne
add
inc
add
je
add
je
add
pop
cmpsb
cmp
in
cmp
and
cmp
inc
cmpsb
cmp
nop
movsl
cmp
mov
cmp
push
movsl
cmp
push
movsl
cmp
pop
movsl
cmp
pusha
movsl
cmp
pop
test
add
test
add
test
add
test
add
cmp
loopne
cmp
loopne
cmp
inc
test
cmp
or
cmp
jo
cmp
pop
test
cmp
jl
cmp
dec
stos
cmp
cmc
mov
cmpl
or
cmc
repz
jnp
aas
cmc
sub
cmc
mov
xor
cmc
repz
cmc
divl
cmc
xorl
cmc
mov
xor
inc
cmc
das
xor
inc
cmc
inc
ss
cmc
out
inc
cmc
pop
ss
cmc
or
inc
cmc
jmp
inc
cmc
or
inc
cmc
xchg
ss
cmc
xchg
ss
cmc
lahf
ss
cmc
ret
ss
cmc
push
ss
cmc
es
mov
mov
mov
cmp
es
cmp
sub
mov
lret
cmp
es
aaa
mov
mov
mov
mov
mov
stos
aaa
mov
dec
aaa
mov
out
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
add
es
cmc
es
cmc
es
sti
es
cmc
es
cmc
es
cmc
fldcw
cmc
es
cmc
es
mulb
add
add
add
add
mulb
add
mulb
add
mulb
add
xchg
inc
add
mulb
add
mulb
add
mulb
add
inc
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
inc
add
mulb
add
mulb
add
mulb
add
inc
add
mulb
add
mulb
add
mulb
add
dec
inc
add
pushf
daa
add
pushf
daa
add
mov
add
test
daa
add
pop
daa
add
dec
daa
add
add
cmp
pop
daa
add
pop
daa
add
dec
daa
add
add
add
add
sbb
add
or
add
push
xor
add
add
sbb
add
or
add
push
adc
add
fsubl
add
int3
add
rcrb
add
add
fsubl
add
int3
add
dec
sbb
add
add
cmc
cld
push
dec
or
cmc
cld
push
cld
push
cld
push
pop
or
cmc
cld
push
cld
push
cld
push
addb
cmc
cld
push
cld
push
cmp
push
cld
incl
add
add
cld
push
aam
ds
cld
push
cld
push
cld
push
mov
ds
cld
push
cld
push
cld
push
enter
cld
push
cld
push
cld
push
filds
ds
es
cmc
es
cmc
es
cmc
xor
shll
out
cmc
es
cmc
es
cmc
es
daa
out
cmc
es
cmc
es
cmc
es
or
daa
out
cmc
es
cmc
es
cmc
es
repz
cmc
es
cmc
es
cmc
es
add
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
adc
out
cmc
es
cmc
es
mulb
add
sti
inc
add
mulb
add
mulb
add
mulb
add
mov
add
mulb
add
mulb
add
mulb
add
inc
add
mulb
add
mulb
add
mulb
add
cmp
jmp
mulb
add
mulb
add
aaa
inc
add
mulb
add
mulb
add
mulb
add
ss
add
mulb
add
mulb
add
mulb
add
mov
add
mulb
add
mulb
add
mulb
add
inc
add
fsubl
add
int3
and
add
and
add
cmp
pushf
and
add
add
arpl
add
add
int
cmp
pop
and
add
add
add
add
dec
and
add
add
cmp
sbb
add
or
add
or
add
adc
add
or
add
or
add
and
add
int3
sub
add
cld
push
int
cmp
cmc
cld
push
cld
push
add
cld
push
cld
push
cld
push
cmp
cld
push
cld
push
cld
push
push
cmpb
cld
push
cld
push
shll
cmc
cld
incl
add
add
cld
push
js
ds
cld
push
cld
push
cld
push
js
ds
cld
push
cld
push
cld
push
in
ds
es
cmc
es
cmc
es
cmc
es
add
es
cmc
es
cmc
es
out
cmc
es
cmc
es
cmc
es
lret
es
cmc
es
cmc
es
cmc
es
add
es
cmc
es
movsb
adc
dec
movsb
or
out
cmc
es
es
das
mov
adc
mov
comiss
es
das
mov
and
mov
pop
das
mov
add
sbb
pushl
out
call
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
or
add
or
add
fsubl
add
fsubl
add
int3
daa
add
int3
daa
add
fsubl
add
fsubl
add
int3
daa
add
int3
daa
add
pushf
daa
add
pushf
daa
add
mov
add
mov
add
pushf
daa
add
pushf
daa
add
mov
add
mov
add
pop
daa
add
pop
daa
add
dec
daa
add
dec
daa
add
pop
daa
add
pop
daa
add
dec
daa
add
dec
daa
add
sbb
add
sbb
add
or
add
or
add
cmc
cld
push
cld
push
cld
push
cld
push
cld
push
cld
push
cld
push
cld
push
cld
push
cld
push
cld
push
cld
push
cld
push
cld
push
cld
push
cld
push
or
cmc
outsl
cld
push
xchg
imull
daa
clc
add
push
in
dec
sbb
add
add
popl
add
pop
in
incb
pop
out
out
in
out
out
imul
pop
jmp
cmp
arpl
cmp
push
cmp
inc
cmp
lock
mov
lock
cmp
out
pop
lock
jecxz
out
jmp
push
cmp
icebp
push
cmp
lock
lock
cmp
lock
cmp
lock
lock
arpl
cmp
push
cmp
inc
cmp
icebp
cmp
icebp
inc
cmp
icebp
push
cmp
lock
lock
jecxz
out
jmp
push
cmp
out
push
cmp
in
mov
add
adc
cmp
sbb
cmp
mov
cmp
fcoms
rolb
pop
loopne
cmp
fistl
in
roll
lret
std
mov
aam
lea
hlt
cmp
fwait
xchg
cmp
les
push
mov
and
push
test
aad
je
frstor
clc
jmp
mulb
add
dec
je
xor
adc
clc
jb
xor
je
xor
jb
xor
jb
xor
jb
xor
jb
xor
add
add
jae
xor
jae
xor
jae
xor
jae
xor
jae
xor
jae
xor
jae
xor
je
xor
je
xor
jae
xor
je
xor
push
xor
xor
je
or
enter
mov
je
xor
je
xor
imul
sti
add
out
or
add
add
push
out
sbb
sub
sub
jno
cmp
dec
out
dec
xor
pop
sub
imul
out
jnp
or
mov
fsubr
fwait
daa
in
stos
daa
cmp
mov
pop
cmp
fildl
in
jmp
fsubr
sti
pop
test
or
pop
out
sbb
and
sub
jnp
cmp
ret
out
dec
mov
out
imul
out
jnp
add
mov
fsubr
fwait
es
stos
es
mov
cmp
testl
jmp
cmp
out
push
cmp
lock
cmp
out
fidivrs
sub
mov
cmp
lock
adc
jle
imul
cmp
mov
dec
lock
xor
fidivl
and
es
cmc
es
push
cmp
imulb
cmp
jp
push
testl
add
add
jae
fidivrs
stos
out
cmp
out
push
cmp
lock
push
lock
add
shll
gs
lods
bound
mov
push
xor
push
xorl
jmp
icebp
es
adc
xor
and
popa
xor
add
in
ss
fsts
clc
and
add
add
add
mov
xor
into
xchg
aaa
loope
xlat
xor
fwait
outsl
xor
lcall
mov
idivb
pop
popf
pop
cmp
mov
add
addb
ljmp
jl
add
pop
js
xor
jp
xor
jl
xor
jnp
xor
jns
xor
test
jp
mov
xor
imul
int3
jg
cmp
xchg
cmp
add
push
sbbl
addl
cwtl
cmp
jg
cmp
sbbl
add
mov
cmp
ret
mov
jp
push
sub
call
in
adc
add
or
arpl
xchg
loope
clc
sub
das
repz
jno
test
shl
and
cmp
sarb
decl
icebp
cld
push
mov
lds
hlt
imul
in
or
in
push
and
in
addr16
in
jle
imul
mov
in
xchg
add
in
mov
in
out
mul
test
or
es
cmc
dec
xor
add
stc
cmp
out
fnstcw
push
out
add
xchg
icebp
fidivrs
push
aas
cmp
out
xchg
cmp
in
cs
sbb
shr
das
push
outsl
xor
jl
xor
jmp
cs
xor
call
sub
cs
xor
ret
shlb
add
es
aaa
inc
hlt
or
hlt
jge
pop
cmc
jmp
fdiv
fnsave
sub
xchg
xor
test
icebp
test
xor
ret
sbb
xchg
xor
arpl
xor
addr16
dec
xor
inc
dec
sti
aaa
mov
sbb
adcb
fimuls
ss
mov
xor
mov
ficoml
mov
fildl
push
ror
cmp
cmpsb
jo
leave
mulb
add
call
das
clc
test
jnp
xor
jnp
xor
jnp
xor
jbe
xor
jne
xor
mov
xor
jg
xor
ja
xor
aam
jge
clc
jl
cmp
mov
jg
cmp
add
add
jg
cmp
mov
clc
lcall
clc
jmp
add
push
jnp
xor
je
xor
je
xor
jae
xor
popf
xor
je
xor
clc
xor
je
xor
gs
outsb
out
in
xchg
out
out
mov
cmp
in
in
cmp
std
jbe
push
push
out
cmp
stos
out
push
es
movsb
out
jg
add
add
imul
mov
ds
roll
out
aad
pop
out
in
push
test
std
push
test
push
jmp
insl
call
lret
call
pop
shrb
daa
enter
rcrb
clc
sub
inc
and
jmp
sub
in
or
daa
pushf
jmp
das
and
mov
and
das
sub
cwtl
das
adc
out
sti
ljmp
add
fsubrs
popf
ljmp
mov
sbb
gs
call
mov
xor
call
mov
inc
loope
sub
loop
outsb
out
xor
add
es
aad
aaa
sbb
lds
push
jg
dec
aad
cmp
cmp
cmp
aad
cmp
add
ret
scas
cmp
ss
fnsave
data16
xor
ret
mov
push
cmp
xchg
or
cmp
xchg
insl
clc
jmp
icebp
es
inc
in
outsl
inc
dec
das
add
jbe
ljmp
cs
xchg
cs
inc
std
sub
sbb
sub
sub
add
add
xor
jae
adc
or
addr16
xor
shll
add
dec
aaa
cmp
dec
ljmp
dec
jbe
ds
nop
cmp
xchg
dec
popf
cmp
dec
push
cmp
test
testl
xchg
aas
mov
mov
aas
cld
mov
aas
out
fidivrl
hlt
mov
aas
and
stc
incl
add
pop
pop
add
sbb
xor
push
sub
or
xor
push
dec
xor
push
jle
cmc
aad
frstor
jae
or
add
int
add
int
add
int
add
int
in
int3
in
in
int3
std
in
shlb
test
rcrl
scas
rcrl
add
add
sti
rcrb
es
ror
es
rcrb
or
cmc
add
shrl
add
xchg
xchg
rol
loopne
rcrl
jmp
aam
sbb
insb
lret
add
fcomp
lret
fdivl
dec
xor
sub
mov
aad
std
fbstp
sub
fiadds
add
add
ficomps
sub
loop
sub
loope
sub
loope
sub
sub
jecxz
push
add
es
rol
ss
aam
ss
rcll
rcrl
aad
and
int
sbb
in
hlt
xor
xlat
cld
xor
add
sbb
sub
es
xchg
xor
int3
sub
pop
lret
test
xchg
ret
jo
jmp
mulb
add
out
ss
fwait
enter
shlb
es
add
and
cmp
ss
movsl
mulb
add
les
mov
pop
xor
inc
jecxz
imul
xor
cmp
cmpsl
aaa
jmp
sub
xlat
dec
xchg
xor
add
xor
fs
push
cmp
dec
cmp
dec
pop
ds
dec
cmpsb
aas
inc
dec
clc
fdivl
inc
and
add
push
and
pushf
push
xor
sbb
ds
push
push
xor
push
bound
cmp
xor
mov
xor
push
xor
push
add
push
push
xchg
xor
mov
jmp
push
sbb
mov
push
adc
xor
add
add
leave
xor
dec
jmp
pop
dec
push
adc
xor
xor
ss
sub
popa
jmp
rcr
jecxz
rcrl
lret
jns
iret
rcr
lret
jnp
mov
leave
fcmovnb
sub
pushf
sbb
pop
aad
or
aad
cld
pmullw
push
aad
in
xchg
test
repnz
faddl
sub
add
add
jb
inc
iret
dec
mov
cli
aad
das
rcl
or
push
or
in
push
dec
fcomps
das
loopne
or
xor
mov
pop
clc
es
xchg
sub
fimuls
into
fdivp
sub
sub
sub
fnsave
sub
ficoms
or
addr16
pop
pop
fstpl
add
add
and
inc
fstl
and
neg
add
or
aad
scas
fcoml
es
fmull
adc
and
push
add
es
sbb
cmpsl
shll
push
push
cwtl
pop
add
es
das
out
adc
sub
in
js,pn
cs
inc
inc
cs
sub
sub
dec
sub
sub
lret
pushf
ret
cmp
nop
xor
imul
loope
or
mov
lods
xor
movsb
inc
xor
cmp
push
movb
mov
or
xor
mov
daa
cmp
dec
and
dec
cmpb
cmp
inc
cmp
es
cmp
ja
jb
loope
fistpll
dec
jg
sub
jp
xchg
cmp
sbb
stc
pushl
jns
xor
jp
xor
jnp
xor
xorb
jnp
xor
jp
xor
jge
xor
jbe
ss
jbe
cmp
orb
test
lds
mov
adc
cmp
sub
add
add
jge
ds
cmc
aas
xlat
stc
sbb
inc
adc
aad
or
incb
cld
push
mov
int3
cmp
out
shrb
leave
mov
enter
into
add
sub
iret
push
sub
jnp
aam
stos
or
fldt
std
mov
fs
sbb
out
in
vunpckhps
xor
cmp
pushf
fidivrl
std
fsts
mov
mov
push
xor
ret
and
fdivs
and
cmp
mov
fiaddl
in
fldl2t
and
pop
and
fdivs
and
fcomps
and
jae
arpl
cmc
es
add
rcrl
pop
rcl
cmp
and
inc
pop
sub
push
pop
adc
inc
pop
adc
push
ljmp
sbb
sbb
xchg
sbb
into
pop
sbb
into
loopne
mov
into
push
sbb
xor
lds
cmpsb
dec
inc
aaa
push
ds
aaa
repz
xor
mov
into
xor
sub
cmp
and
cmp
daa
cmp
cmp
fdivrs
push
add
add
cmp
and
sub
in
pop
cmp
cmp
ret
jnp
ret
ret
mov
push
cmp
push
popa
clc
mov
add
leave
mov
movsl
rcll
leave
movsb
jno,pn
pop
sub
add
jbe
xor
xor
jne
xor
cmp
lea
xor
jbe
xor
jbe
xor
sub
xor
shll
xor
hlt
ja
xor
pushl
ss
test
jg
ss
jae
ss
outsl
pop
aaa
pop
jno
aaa
lcall
cmp
jl
cmp
jl
cmp
andl
cmp
test
pop
iret
not
or
add
add
das
aad
mov
cmpsl
aad
jg,pn
adc
sub
and
jb
das
sbb
rolb
xchg
rorb
mov
rcrb
test
imul
xlat
jno
xlat
jg
rcl
test
add
xchg
leave
xlat
cltd
shrl
xor
xlat
mov
and
xlat
aad
xchg
xlat
jecxz
mov
jmp
add
xlat
idiv
fcmovbe
std
icebp
dec
rorl
call
and
cli
and
fsubs
cli
and
xlat
mov
and
into
and
lret
enter
jbe
jo
insb
and
bound
push
xlat
nop
and
pop
and
pop
and
and
adc
loopne
mov
out
sbb
aad
sbb
aad
sbb
aad
sbb
aad
sbb
mov
add
cmp
ret
repnz
sar
fldcw
fstpt
jae
scas
cmp
sarl
dec
test
jp
xchg
cmp
dec
insl
cmp
inc
cmpl
frstor
xor
shrl
cmp
pop
clc
push
mulb
add
inc
cmp
dec
inc
fildll
jp
mov
xchg
and
das
pop
and
cs
enter
rcrb
lret
fisubrl
mov
mov
jbe
xor
jbe
xor
jg
xor
jle
xor
jg
xor
in
xor
ss
orb
and
test
test
mov
mov
inc
insl
cmp
insl
imul
pop
cmp
outsb
jbe
cmp
jne
addr16
pushf
jle,pt
mov
aas
mov
clc
decl
stc
dec
and
add
jae
xor
jb
xor
jb
xor
fsubrs
or
pop
add
call
mov
add
jmp
aad
loop
aad
lret
test
mov
xchg
iret
lea
loope
sub
xor
testb
shll
push
xchg
lea
cli
shll
out
sar
out
rorb
leave
movsb
xlat
popf
shlb
stos
ret
mov
and
insl
adc
fsts
pop
int3
mov
and
int3
and
int
and
int
and
int
pop
clc
iret
out
sbb
iret
les
pop
shlb
shrb
sbb
into
in
sbb
iret
stc
sbb
into
bndldx
into
les
gs
jae
pop
iret
push
sbb
dec
sbb
into
es
into
sbb
repnz
add
add
jae
pop
sbb
rorl
lcall
pop
clc
jge
add
test
sub
mov
push
sub
mov
cmpsb
xor
dec
xor
adc
pop
ret
mov
xor
test
xchg
loopne
fs
lea
sub
push
adc
inc
ss
push
ss
adc
cmp
xor
sub
out
pop
xor
sub
pop
xor
inc
enter
xchg
cmp
and
ja
cmp
xorb
int
adc
mov
imul
ds
push
push
aas
imull
aas
pop
imul
lcall
add
dec
jne
xor
jb
xor
jb
xor
jb
xor
jb
xor
jae
xor
adc
xor
pop
xor
jae
xor
jae
xor
mov
xor
inc
into
adc
daa
into
pusha
sbb
jne
test
mov
or
daa
inc
int
es
jne
std
int
push
icebp
int
push
mov
add
push
popa
shrb
rcl
loope
rcrl
sbb
lret
int3
out
and
cmp
sarl
adc
fsubrs
adc
add
push
enter
iret
popa
sbb
rolb
xchg
leave
test
dec
cld
std
xor
add
dec
int3
inc
in
int3
test
es
pop
pop
scas
aam
pop
adc
nop
adc
mov
sahf
adc
mov
repnz
shlb
adc
pop
sarb
js
jno
pop
rcll
adc
xlat
call
adc
push
adc
fsubs
adc
stos
adc
xlat
pop
adc
xlat
call
or
sub
popf
aad
adc
adc
out
cvttps2pi
push
aad
push
test
int
add
xchg
scas
das
hlt
ss
fdivl
insb
aas
mov
ss
push
fdivrl
xor
xchg
xor
cli
lods
or
adc
mov
js
jno
sub
mov
mov
cmp
inc
pop
cmp
cmp
cmp
xor
cmp
sub
cmp
cmp
cmp
adc
push
cmp
sub
cmp
push
fs
aas
fs
ds
arpl
repz
pusha
aas
lcall
aas
xchg
popa
call
ljmp
add
in
xor
xor
jge
pop
jl
xor
jl
xor
jge
xor
jl
xor
add
add
jge
xor
mov
imul
jl
xor
jl
xor
jge
xor
jge
xor
push
xor
adc
xor
cmc
xchg
rcrl
mov
rclb
out
rcl
out
rcr
ja
adc
das
shlb
leave
cmp
iret
xchg
lret
and
enter
enter
iret
adc
add
add
sub
xor
add
dec
or
pop
add
iret
callw
xchg
in
mov
loopne
into
inc
lret
cltd
into
dec
ret
xchg
into
arpl
jp
mov
sub
iret
fldenv
loope
out
bswap
mulb
inc
int
or
sti
rclb
lret
shlb
sbb
sarb
inc
rcrb
pop
shrb
sbb
rorb
sbb
roll
add
add
push
int3
mov
push
jmp
cld
or
cmp
dec
push
gs
jb
inc
lret
lcall
lret
rorl
int
adc
int3
dec
int
movaps
in
adc
mov
test
xchg
dec
mov
and
aas
and
add
sub
repz
cmp
cmp
push
push
clc
inc
icebp
es
cmp
push
and
das
inc
sub
das
fwait
es
das
sbb
jno
mov
ret
cmc
sub
jno
mov
mov
mov
shrl
lods
sub
leave
inc
sub
rcll
sbb
movsl
jmp
xor
stos
ja
sub
sub
add
popa
xchg
xor
in
pusha
aam
inc
js
ss
xor
mov
iret
ss
sbb
lods
pop
or
xor
push
cmp
cmpl
cmp
xor
cmp
pop
addr16
pop
loope
ss
push
subb
mov
push
fdivl
call
jne
xor
add
add
jnp
xor
jne
xor
jbe
xor
jbe
xor
fsubl
ss
je
test
fcmovne
push
and
lret
xchg
or
sub
popf
jne
iret
icebp
dec
adc
lahf
outsl
loopne
fcomp
cmpsb
rclb
mov
rcrb
xor
push
mov
add
sub
cmp
fisubrl
add
cmc
aad
rolb
int3
repz
sbb
xor
arpl
insl
out
int
loope
enter
iret
or
ret
sbb
lret
cmp
xor
clc
or
repnz
sbb
adc
mov
adc
pop
adc
out
cmp
add
es
pop
sub
or
jo
add
rcl
int3
adc
negl
xor
push
sbb
iret
test
xchg
iret
rcrl
loopne
jo
cmpsl
into
movsl
sbb
lret
cmp
movsb
int3
les
or
mov
or
lret
out
rorb
add
mov
lods
xor
lods
lahf
cmp
inc
cmp
clc
jmp
mulb
add
inc
das
mulb
ds
xor
push
das
push
es
sub
mov
cmp
xor
inc
dec
xor
sub
xor
ss
scas
ss
daa
ss
mov
xor
lods
dec
clc
jmp
mulb
add
mov
cmp
stos
addr16
rorb
add
pop
mov
insl
pop
iret
subps
aaa
cmc
pop
and
push
pop
xchg
aaa
outsb
bound
cmp
popa
fwait
cmp
popa
ljmp
popa
and
nop
popa
push
cmp
pusha
lea
mov
pusha
out
cmp
pusha
jg
ret
cmp
pop
sarl
push
pop
ja
sub
into
out
cmp
call
mov
dec
test
add
mov
adc
dec
adc
xor
loop
mov
xchg
xor
in
xor
in
xor
cltd
xor
xor
gs
outsb
xor
xor
daa
pushl
aam
or
in
daa
inc
xor
push
and
xor
test
xor
loope
aaa
xchg
xor
adc
cmpsl
xor
int3
add
pop
into
inc
add
add
add
aas
mov
cli
push
add
cmc
adc
ss
sub
ss
and
cmp
repz
daa
out
mov
es
xor
out
adc
jae
scas
aaa
add
sbb
imul
pop
cmp
psrlw
xor
pop
inc
fisttpll
inc
jne
imul
pop
inc
gs
add
pop
or
dec
inc
pop
or
cmp
or
sub
or
mov
inc
aad
lret
inc
fisttpll
inc
in
mov
inc
cmc
or
in
xor
aaa
cmp
xor
pop
cmp
xor
pop
cmp
xor
fistpll
sbb
xor
add
add
mov
cmp
mov
cmp
sahf
cmp
mov
jge
scas
cmp
es
dec
clc
xor
es
out
xor
movb
rol
das
mov
rorl
sub
jecxz
and
fldt
cmp
repz
add
pop
xor
xor
insb
xor
adc
adc
push
test
adc
mov
sbb
xchg
xor
pushf
xor
movsb
xor
lods
xor
mov
xor
int3
xor
aam
xor
psubsb
pop
push
push
cmp
or
mov
cmp
push
push
cmp
jno
mov
or
cmp
pop
cmp
push
xchg
cmp
push
cmp
and
aas
int3
sbb
ds
or
cmp
sbb
imul
cmpb
jmp
cmp
loop
cmp
dec
cmp
lret
fcmovb
mov
cmp
jb
add
cmc
inc
sub
and
xchg
add
shll
fadds
xor
outsb
xor
in
xor
lods
xor
add
in
xor
les
xor
les
cld
xor
adc
inc
xor
js
lea
cltd
xor
adc
in
xor
push
xor
mov
test
adc
aaa
int3
adc
cmp
adc
aaa
add
pushf
aaa
lock
cmp
adc
cmp
push
cmp
adc
xor
mov
xor
inc
xor
stc
js
bound
push
pminsw
aam
sarl
movsl
push
sahf
cmp
test
and
push
fdivs
sbb
std
das
push
aaa
adc
fnsave
xor
int3
ss
push
adc
xor
ret
xor
jge
xchg
xor
xor
jne
jl
and
add
lret
sbb
fcmovnb
xor
sarl
add
cmp
and
add
dec
clc
jns
add
add
xor
or
xor
jmp
mov
ss
fstl
pop
jb,pt
bound
jp
push
orb
ds
add
cmpb
add
bound
ds
add
jb,pt
mov
add
stos
ds
add
sbb
ds
add
ds
add
bound
ds
add
jb,pt
loop
jp
ljmp
add
ds
add
aas
pop
add
aas
bound
adc
pop
add
aas
repnz
aas
cli
add
aas
inc
add
aas
sbb
cmp
push
add
cmc
lea
dec
fidivrl
push
rorb
cmp
lods
cmp
cmc
dec
pop
std
repnz
add
lds
fldenv
and
inc
add
xor
add
xor
mov
jo
test
out
xor
out
sub
xor
enter
rol
cli
sub
and
jbe
mov
sub
prefetch
sbb
xor
std
test
in
es
and
jmp
push
jmp
cmp
outsl
add
ds
add
ds
add
aaa
mov
add
jnp
daa
cmp
ret
es
test
push
add
sub
pop
mulb
sar
xor
pushf
stc
cmp
repnz
ss
ss
das
xchg
sti
fiadds
jo
js
xor
adc
fiadds
rcr
ss
das
ss
mov
or
sub
mov
cmp
cmp
testb
stc
es
pop
in
cs
out
cs
jecxz
sub
call
fdivl
or
mov
fcmovb
xor
scas
xor
xchg
xor
mov
xor
and
bound
add
idiv
xor
adc
xor
inc
adc
xor
cltd
clc
into
ss
cmp
aaa
cmc
repnz
incl
cmp
and
cmp
sub
fcoml
sti
call
add
xchg
divb
jne
mov
xor
sti
add
xor
sti
xor
xor
adc
xor
adc
ret
adc
mov
and
cmc
lea
dec
or
cs
cld
dec
das
sub
sahf
xor
lds
loop
sbb
sbb
incl
add
add
jg
pop
sbb
ffreep
xchg
sub
ret
in
cs
sub
xor
push
sub
fidivl
sub
add
insl
or
cld
dec
cmp
in
pop
cmp
in
sub
and
imul
fsubrl
xor
pop
cmp
int3
imul
mov
or
push
sub
cmp
daa
ret
cmp
inc
cmp
inc
cmp
call
cmp
add
add
inc
cmp
jmp
insl
jmp
ja
outsb
cmp
xor
dec
add
cmp
add
cmp
add
cmp
add
cmp
lods
cmp
add
cmp
add
xor
or
xor
sub
dec
ss
arpl
movb
xor
cmc
es
xchg
inc
out
add
es
lea
fbstp
sub
cmp
and
jmp
icebp
es
push
shlb
fs
cmpsl
aaa
fs
xor
push
pop
cmp
jecxz
cmp
ret
es
push
inc
clc
mov
add
xchg
cs
and
xor
and
xor
sbb
xor
adc
xor
or
xor
shlb
cmp
ret
shlb
xor
xchg
xor
xorb
dec
bswap
xor
pop
jae
clc
and
add
xor
cmc
and
lock
aaa
xor
arpl
jl
jae
xor
jnp
pushf
cmc
xorl
cmc
mov
pushf
cmc
xchg
xor
xor
stos
xor
mov
add
ret
xor
lret
xor
mov
imul
xor
xor
add
xchg
push
or
pushf
push
adc
hlt
negb
xor
outsl
sub
sub
leave
jg
xor
sub
sub
xor
xor
sub
sub
sub
sub
sub
sub
sub
add
add
sub
cmpsl
sub
out
lods
leave
ljmp
mov
out
mov
and
sub
sub
and
or
xor
add
push
or
ss
les
xchg
call
xorl
call
repz
jmp
hlt
and
sub
or
add
bound
mov
dec
cmp
add
add
dec
cmp
loop
jmp
mulb
cmp
cmc
bound
mov
mov
popa
cmc
and
dec
cmc
or
and
loop
jmp
mov
sub
incl
xchg
pushl
sub
lcall
sub
pushl
sub
es
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
int3
daa
add
pushf
daa
add
pushf
daa
add
mov
add
mov
add
pushf
daa
add
pushf
daa
add
mov
add
mov
add
pop
daa
add
pop
daa
add
dec
daa
add
dec
daa
add
pop
daa
add
pop
daa
add
dec
daa
add
dec
daa
add
sbb
add
sbb
add
or
add
or
add
sbb
add
sbb
add
or
add
or
add
fsubl
add
fsubl
add
int3
add
int3
add
fsubl
add
cmc
dec
cld
push
dec
cld
push
dec
cld
push
dec
cld
push
dec
cld
push
dec
cld
push
dec
cld
push
dec
cld
push
dec
cld
push
dec
cld
push
dec
cld
push
dec
cld
push
dec
cld
push
dec
cld
push
dec
cld
push
dec
cld
push
dec
cld
incl
add
add
dec
cld
push
dec
cld
push
dec
cld
push
dec
cld
push
dec
cld
push
dec
cld
push
dec
cld
push
dec
cld
push
dec
cld
push
dec
cld
push
dec
cld
push
dec
cld
push
dec
cld
push
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
fsubl
add
fsubl
add
int3
and
add
and
add
and
add
and
add
and
add
and
add
add
mov
add
mov
add
pushf
and
add
add
mov
add
pop
and
add
add
add
add
add
add
add
add
add
sbb
add
or
add
or
add
sbb
add
sbb
add
cmc
dec
cld
push
dec
cld
push
aas
cld
push
aas
cld
push
aas
cld
push
aas
cld
push
aas
cld
push
aas
cld
push
aas
cld
push
aas
cld
push
aas
cld
push
aas
cld
push
aas
cld
push
aas
cld
push
aas
cld
push
aas
cld
push
aas
cld
push
aas
cld
push
aas
cld
push
aas
cld
push
aas
cld
incl
add
add
aas
cld
push
aas
cld
push
aas
cld
push
aas
cld
push
aas
cld
push
aas
cld
push
aas
cld
push
aas
cld
push
aas
cld
push
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
sbb
add
or
add
or
add
sbb
add
sbb
add
or
add
or
add
fsubl
add
fsubl
add
int3
daa
add
int3
daa
add
fsubl
add
fsubl
add
int3
daa
add
int3
daa
add
pushf
daa
add
pushf
daa
add
mov
add
mov
add
pushf
daa
add
pushf
daa
add
mov
add
mov
add
pop
daa
add
pop
daa
add
dec
daa
add
dec
daa
add
pop
daa
add
pop
daa
add
dec
daa
add
cmc
cmp
cld
push
cmp
cld
push
cmp
cld
push
cmp
cld
push
cmp
cld
push
aas
cld
push
aas
cld
push
aas
cld
push
aas
cld
push
aas
cld
push
aas
cld
push
aas
cld
push
aas
cld
push
aas
cld
push
aas
cld
push
aas
cld
push
aas
cld
push
aas
cld
push
aas
cld
push
aas
cld
incl
add
add
aas
cld
push
aas
cld
push
aas
cld
push
aas
cld
push
aas
cld
push
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
dec
and
add
add
add
add
add
add
add
sbb
add
or
add
or
add
sbb
add
sbb
add
or
add
or
add
fsubl
add
fsubl
add
int3
and
add
and
add
and
add
and
add
and
add
and
add
add
mov
add
mov
add
pushf
and
add
add
mov
add
cmc
cmp
cld
push
cmp
cld
incl
add
add
cmp
cld
push
cmp
cld
push
cmp
cld
push
cmp
cld
push
cmp
cld
push
cmp
cld
push
aas
cld
push
aas
cld
push
aas
cld
push
aas
cld
push
aas
cld
push
aas
cld
push
aas
cld
push
aas
cld
push
aas
cld
push
aas
cld
push
aas
cld
push
aas
cld
push
aas
cld
incl
add
add
aas
cld
push
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mulb
add
mov
add
pushf
sub
add
add
mov
add
pop
sub
add
add
add
add
add
add
add
add
add
sbb
add
or
add
or
add
sbb
add
sbb
add
or
add
or
add
fsubl
add
fsubl
add
int3
daa
add
int3
daa
add
fsubl
add
fsubl
add
int3
daa
add
int3
daa
add
pushf
daa
add
cmc
cmp
cld
push
cmp
cld
push
cmp
cld
push
cmp
cld
incl
add
add
cmp
cld
push
cmp
cld
push
cmp
cld
push
cmp
cld
push
cmp
cld
push
cmp
cld
push
cmp
cld
push
cmp
cld
push
aas
cld
push
aas
cld
push
aas
cld
push
aas
cld
push
aas
cld
push
aas
cld
push
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
es
cmc
xorb
xchg
std
sti
mov
pop
dec
xorl
sbb
sub
fbstp
out
jns
iret
adc
je
dec
ss
aam
notl
jb
in
pop
sub
jmp
jo,pn
fists
jle
dec
pushf
scas
fstpl
fdivs
aaa
pop
jge
xor
mov
cmp
mov
pop
cwtl
xor
imul
push
xchg
mov
jne
jg
idiv
xor
lock
cmc
jo
pop
pop
bnd
push
lcall
stc
mov
xchg
subl
das
fbld
pop
outsl
inc
pop
dec
and
jl
lahf
xchg
sbb
xchg
mov
cmpl
cli
cmp
addb
add
setnp
je
out
fwait
idiv
inc
cltd
les
xchg
insb
adc
and
sub
popa
les
fcomps
add
je
ss
mov
add
xchg
cltd
hlt
inc
cmc
in
xchg
adc
xchg
jbe
ds
out
jl
adc
test
mov
jmp
pusha
sub
pop
sbb
add
add
pusha
loop
or
lea
push
or
xchg
orl
aaa
in
jns
pop
loope
adc
gs
mov
cltd
mov
scas
lcall
ret
mov
lret
imul
lock
sub
fisttpl
mov
cbtw
into
xchg
or
popa
mov
and
cmp
ret
cmpsl
lea
push
in
decb
aaa
sbb
ds
jae
sbb
jmp
mov
sbb
imul
mov
inc
lds
scas
dec
pushf
std
in
in
and
pop
mov
push
cmp
mov
xchg
fsts
xchg
push
adc
mov
add
mov
movsl
push
insl
sub
enter
cmp
repnz
int3
shl
int3
and
or
jle
push
ret
inc
mov
push
dec
jle
leave
adc
add
add
inc
in
scas
cmp
mov
cmpsl
aaa
imul
cmpb
lcall
pop
add
mov
dec
mov
scas
cmp
mov
add
add
push
add
loope
dec
in
imul
mov
scas
inc
clc
outsb
jnp
mov
lods
cmp
mov
push
in
lods
dec
lock
clc
mov
lods
inc
cld
mov
in
add
es
cld
scas
dec
hlt
jbe
add
lea
sbb
mov
lock
sub
inc
std
lods
cmp
lods
mulb
mov
and
add
xor
sbb
lds
in
mov
mov
xor
add
jb
jmp
push
rorb
repnz
int3
test
repnz
int3
and
call
mov
jl
sub
add
add
add
daa
inc
add
call
call
pop
add
nop
add
daa
inc
add
sub
mov
mov
jmp
cld
cmc
add
push
sub
ret
jns
sbbl
cmp
mov
data16
jns
push
repnz
call
loope
cld
mov
cmove
fdivp
mov
sub
int3
mov
int3
test
repz
int3
inc
scas
in
jne
inc
add
lods
inc
xor
or
jl
or
repz
int3
test
repz
int3
shrb
mov
dec
call
int3
xor
int3
sub
int3
inc
repz
int3
shrb
add
data16
loopne
call
clc
lea
add
cmc
lods
cmp
jmp
and
jle
adc
jnp
push
outsb
imul
mov
add
inc
scas
in
mov
es
cld
lods
cmp
mov
and
out
mov
and
add
push
xor
pop
jge
add
cmc
or
rorb
repnz
int3
sub
int3
inc
repnz
int3
mov
add
xchg
lods
or
cmc
add
int3
test
repz
int3
and
inc
in
mov
jl
cmc
add
icebp
mov
mov
lods
cmp
mov
add
add
pop
rolb
add
cmc
or
mov
lods
inc
cld
jle
hlt
cmp
push
mov
sar
mov
mov
lods
inc
lock
or
je
clc
pmaddwd
mov
stos
cmp
add
stos
dec
clc
outsb
sub
add
aaa
mov
stos
dec
or
xor
cld
or
int
push
std
stos
cmp
mov
das
jmp
mov
lods
in
xchg
dec
mov
lods
cmp
mov
or
and
call
add
lods
inc
lock
lock
stos
sti
add
mov
and
insb
jns
mov
es
test
add
es
outsb
jno
mov
add
add
add
js
adc
insb
fs
mov
pop
test
cmc
xchg
sbb
in
sub
mov
mov
mov
or
outsb
adc
jle
loopne
xor
add
scas
cmp
mov
add
jl
in
mov
mov
stos
js
cmc
xchg
pop
mov
xchg
inc
mov
mov
add
add
stos
cmp
mov
mov
adcl
adc
mov
push
clc
ljmp
mov
ja
mov
sbb
mov
adc
add
or
jle
hlt
push
lea
mov
mov
or
xor
test
stc
scas
cmp
xorl
dec
dec
adc
ret
dec
loopne
sub
cmp
int3
shlb
lock
call
scas
cmp
inc
cmc
mov
clc
inc
getsec
std
ljmp
cld
outsb
push
push
jle
add
jle
or
jb
mov
jp
int3
shr
int3
inc
mov
mov
mov
push
add
mov
push
add
mov
jns
int3
inc
jmp
int3
shrb
orb
mov
pop
leave
jle,pt
xor
outsb
outsl
add
inc
scas
inc
hlt
jle
in
mov
mov
clc
jl
hlt
mov
js
insb
inc
jbe
clc
add
xor
ficomps
dec
or
scas
cmp
add
add
sub
scas
cmp
mov
mov
mov
scas
adc
lea
cld
or
xor
mov
jmp
es
in
out
int3
xor
int3
sub
int3
inc
ljmp
push
ds
add
mov
add
add
ja
call
cmpsl
mov
push
add
add
scas
or
mov
ja
push
sbb
xchg
arpl
inc
cmc
movsl
xor
add
mov
jmp
scas
add
mov
pop
imul
cmc
and
cmp
ss
add
push
xchg
push
test
icebp
fiadds
add
add
cmc
dec
enter
add
call
lods
or
push
push
arpl
inc
cmc
jbe
dec
add
sbb
cmpl
mov
divb
mov
mov
sbb
mov
jnp
int3
shr
int3
and
cmp
xchg
decl
sahf
and
ret
int3
test
ljmp
xchg
dec
mov
add
add
add
lods
cmp
mov
and
loopne
mov
or
push
stos
cmp
or
xor
aas
cmc
lods
add
push
sbb
movsl
mov
push
mov
xor
es
push
pop
dec
lock
fmull
and
dec
in
jne
push
shll
shll
add
mov
mov
add
or
mov
adc
outsb
push
cmovb
cmp
adc
call
je
stos
inc
call
rcrl
dec
lods
inc
adc
loopne
les
inc
add
push
shl
movsb
pop
mov
sub
inc
or
outsb
or
jle
call
inc
icebp
jbe
push
fcoms
clc
cmpl
shrl
imul
in
sysret
cld
stos
pop
test
stc
mov
xor
arpl
push
popf
stos
cli
incl
popa
aam
xor
insl
or
pusha
call
test
cmpl
xchg
adc
mov
add
cmc
mov
je
inc
adc
add
add
pop
dec
lock
call
push
mov
xor
mov
jns
add
jl
mov
jbe
cmp
ss
add
addb
push
add
outsb
insb
hlt
push
pop
daa
notl
lret
ss
mov
mov
fmuls
rcrl
mov
jbe
mov
push
inc
cmc
ja
xchg
push
push
clc
xorl
mov
stos
mov
add
mov
mov
dec
and
call
xor
fwait
call
je
imul
call
cmp
push
call
jbe
add
sub
mov
divb
mov
stos
call
push
add
inc
lea
push
outsb
and
es
mov
xchg
inc
cmc
js
jne
adc
mov
push
dec
insl
stc
cmp
push
mov
sub
cmc
ja
push
or
clc
xorl
mov
mov
add
push
mov
push
inc
cmc
daa
dec
sub
pusha
push
fldl
incl
add
add
test
or
xchg
inc
cmc
sub
in
mov
lea
rsqrtps
cmp
inc
cmc
js
push
mov
adc
add
add
cmc
loop
int3
inc
jecxz
int3
mov
push
mov
jb
int3
inc
jecxz
int3
rcrb
cmp
jle
push
call
lods
incb
lcall
int3
inc
mov
cld
aas
cmc
lds
daa
push
call
jbe
or
std
jne
add
mov
ss
push
incl
mov
xor
int3
and
mov
add
jmp
fsubr
add
cmp
add
es
mov
es
add
lahf
inc
or
add
add
call
sub
clc
mov
fcoms
clc
add
lcall
cmc
add
cmc
std
or
lock
inc
cmc
daa
add
cmc
movsl
xor
add
mov
add
add
jbe
push
jne
jl
incl
push
call
call
adc
fs
inc
cmc
popf
cmp
mov
mov
add
sub
cmp
call
sbb
xchg
call
aas
cmc
jle
add
mov
cmpsl
inc
div
adc
ss
notl
xchg
sahf
call
call
adcl
cld
mov
pop
mov
add
add
adc
cmpl
add
cmc
pop
call
mov
clc
pushl
add
test
mov
popf
dec
cld
push
jl
jae
popf
cmp
fadd
cmpsb
sti
sub
test
in
lds
mov
mov
cmpsl
je
mov
add
jbe
or
mulb
push
int
stc
incl
add
add
movsb
mov
add
repz
sahf
dec
in
push
add
xrelease
pushf
inc
loopne
and
ss
mov
cld
xchg
xor
add
cmc
es
outsb
jp
xorl
mov
pushf
cmp
jae
pushf
add
add
jns
mov
imulb
mov
out
add
mov
cltd
incb
idivb
xor
lds
add
popf
or
mov
arpl
mov
ja
inc
cmc
push
leave
mov
pop
call
mov
jb
inc
cmc
incb
stos
jbe
add
mov
je
add
cmc
mov
cmp
mov
outsl
call
call
icebp
or
pushl
cld
mov
add
add
mov
inc
cmc
jne
aad
psubb
xor
jp
inc
cmc
mov
push
je
lds
mov
mov
call
mov
mov
ret
xor
fcmovnb
int3
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
add
add
add
frstor
add
imul
mov
xor
testb
sbb
sbb
cmp
rcrl
add
sti
sbb
ds
sbb
aas
cmc
movb
mov
push
divl
jo
add
xor
adc
or
in
adc
xor
adc
add
mov
push
xor
adc
xor
adc
mov
pop
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
mov
lret
adc
xor
adc
xor
adc
xor
out
inc
xor
jns
xchg
xor
mov
adc
ficoms
and
lret
adc
xor
inc
ss
adc
lret
ss
adc
jno
xchg
ss
adc
ss
adc
sub
add
icebp
aaa
mov
jbe
aaa
push
pop
aaa
inc
bsf
rcrb
aaa
aam
cmc
aaa
jecxz
push
cmp
sldt
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
outsl
xchg
and
sbb
pushf
aad
jge
jno
mov
ja
pop
dec
loopne
push
mov
add
sbb
sub
ret
fcmovnu
add
jbe
or
pop
inc
addr16
out
mov
mov
push
aad
dec
arpl
push
mov
mov
lods
repz
sarb
outsb
imul
jns
or
cmp
outsb
push
ss
add
xchg
cwtl
loopne
xchg
mov
pushl
aam
cwtl
call
stc
push
mov
pushf
ret
and
sub
xchg
push
sarb
fnstenv
fists
jns
out
sbb
clc
gs
mov
mull
xor
mov
fisubl
call
lds
fiadds
loopne
fmuls
or
test
ds
push
pop
or
inc
mov
inc
shll
les
into
test
mov
rorl
iret
subl
push
dec
adc
pusha
shrl
inc
pop
cwtl
icebp
mov
push
pop
cld
in
push
inc
pop
cmp
mov
sub
mov
ret
jle
sub
fldt
sbb
gs
sahf
inc
pop
push
popf
push
fldt
cmp
andl
jge
test
mov
pusha
xchg
fistpl
dec
jno
xchg
jno
mov
out
mov
push
and
rcll
stc
fdivs
repnz
out
adcb
inc
orl
cmc
cltd
fucom
call
idivl
test
add
inc
adc
adc
push
in
pop
enter
cmc
sahf
dec
cmc
dec
and
add
imul
shl
push
test
ret
sub
dec
scas
sbb
fildll
and
cld
leave
rcll
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
ss
push
gs
outsb
push
jb
outsl
je
insb
add
add
add
inc
add
add
inc
add
add
add
sbb
inc
add
add
add
add
mov
add
add
test
add
cmpsb
roll
clc
rolb
mov
add
ret
add
roll
mov
add
add
add
add
add
roll
sub
add
roll
push
roll
roll
jl
add
add
add
lcall
add
add
add
roll
in
add
cld
roll
adc
add
sub
add
rolb
push
rolb
adc
add
sub
add
roll
push
roll
roll
jl
add
add
add
lcall
add
add
add
roll
in
add
cld
roll
adc
add
sub
add
rolb
push
rolb
adc
add
pop
add
je
push
dec
outsl
arpl
add
push
imul
imul
jns
add
mov
insb
jae
jb
outsb
inc
add
scas
add
jae
jb
jo
inc
add
js
inc
jb
popa
je
inc
imul
imul
insb
insb
outsl
arpl
add
push
dec
inc
dec
xor
cs
insb
add
xlat
add
fs
arpl
push
add
inc
push
xor
cs
insb
add
pop
add
addr16
jo
outsb
dec
gs
js
add
push
inc
push
dec
xor
cs
insb
add
faddl
push
dec
push
gs
outsb
jne
push
push
push
popa
insb
jne
inc
add
push
popa
je
dec
popa
imul
jae
gs
inc
outsl
insb
fs
add
push
insb
addr16
je
insl
push
popa
je
inc
add
add
push
gs
gs
outsl
outsl
insb
push
push
push
popa
insb
jne
push
add
lock
push
gs
gs
push
push
popa
insb
jne
push
add
icebp
add
push
gs
jb
je
push
push
push
popa
insb
jne
inc
add
xor
push
popa
je
inc
fs
js
outsb
jae
outsl
outsb
inc
add
add
add
dec
push
inc
push
dec
cs
insb
or
inc
add
inc
add
roll
roll
roll
roll
roll
.byte
inc
add
add
aaa
inc
sub
add
add
add
add
add
add
addb
add
aaa
inc
sub
add
add
add
add
add
add
js
add
mov
or
add
add
cmpb
add
aaa
inc
sub
add
add
add
add
add
add
push
icebp
add
lods
add
add
inc
sub
add
add
add
add
add
add
nop
add
add
cmc
add
mov
add
add
inc
sub
add
add
add
add
add
add
mov
stc
add
pusha
add
add
inc
sub
add
add
add
add
add
add
loopne
add
sti
add
inc
add
add
inc
sub
add
add
add
add
add
add
or
add
add
add
enter
add
incl
add
add
add
enter
adc
add
add
loop
add
add
add
inc
add
jae
arpl
and
imul
add
outsb
add
pop
add
add
add
or
nop
add
add
push
add
add
push
add
add
add
add
add
add
add
add
add
add
add
incl
add
jb
je
pop
add
add
add
add
push
test
add
add
add
add
incl
add
arpl
add
add
add
add
push
pop
add
add
add
add
incl
add
imul
pop
add
add
add
add
and
add
add
add
add
add
test
add
add
add
xor
push
add
add
addb
add
data16
add
push
add
add
add
add
add
push
pop
add
add
incl
add
add
add
add
add
add
push
pop
add
add
push
add
add
test
add
add
add
popf
add
add
add
addb
add
jb
jb
add
je
and
add
jae
arpl
and
je
jns
jo
add
add
xor
add
add
add
adc
push
pop
add
aam
add
incl
add
add
push
pop
add
aam
or
incl
add
add
je
and
data16
insb
add
and
outsb
add
insl
add
cmp
pop
add
add
add
add
rolb
add
add
addl
add
add
add
adc
push
add
add
addb
add
add
add
add
add
push
pop
add
aam
or
fs
addb
add
insl
add
jb
add
jae
and
add
je
popa
add
xor
add
add
add
push
pop
add
add
add
addb
add
insb
add
je
add
add
insl
add
add
and
outsl
add
and
add
jb
outsl
add
pop
add
add
add
add
push
pop
add
add
add
addb
add
add
add
insl
add
add
and
je
outsl
add
add
jae
add
and
imul
add
jae
and
insb
add
jae
je
pop
add
add
add
adc
push
pop
add
add
add
add
incl
add
add
push
pop
add
add
add
incl
add
jae
ja
outsl
add
add
add
outsl
add
add
je
add
add
add
add
add
addr16
addl
add
add
add
add
or
incl
add
data16
jb
insl
add
add
popa
add
jae
ja
outsl
add
add
xor
add
add
add
add
add
add
add
incl
add
add
incl
add
add
add
dec
or
orb
add
add
push
add
add
add
add
push
add
dec
add
inc
add
push
add
push
add
add
push
add
push
add
push
add
dec
add
inc
add
add
xor
xor
add
add
add
and
push
add
add
add
add
add
add
add
add
add
add
add
push
add
jae
dec
add
jae
je
push
add
add
xor
xor
adcb
mov
inc
add
add
add
insl
add
arpl
je
insb
add
pop
add
jb
outsl
add
jb
add
jae
xor
xor
add
add
add
add
add
add
incl
add
add
push
or
rolb
add
add
add
incl
add
data16
jb
and
jae
je
popa
add
add
cmp
and
pop
add
add
add
add
add
or
inc
add
jae
arpl
je
insb
add
pop
add
jb
outsl
add
jb
add
jae
xor
xor
add
pop
adc
push
pop
add
add
add
add
incl
add
adc
push
pop
add
inc
add
add
add
incl
add
add
push
pop
add
dec
add
addb
add
add
jae
add
add
add
add
add
add
xor
add
add
push
sbb
loop
xor
push
add
add
add
incl
add
arpl
add
add
add
add
add
add
add
insl
add
arpl
je
insb
add
pop
add
jb
outsl
add
jb
add
jae
xor
xor
add
add
add
add
add
add
incl
add
add
push
or
nop
add
add
addb
add
je
popa
add
add
push
add
pop
add
add
add
add
push
or
cmpsl
add
add
addb
add
jb
jb
add
je
and
outsl
add
add
popa
add
add
outsb
add
push
add
add
xor
add
add
add
push
pop
add
add
add
add
add
incl
add
jae
add
add
outsb
add
add
imul
jae
push
add
add
xor
add
add
add
add
add
incl
add
add
add
add
or
add
add
add
add
add
add
add
add
and
push
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
inc
add
inc
add
pop
add
push
add
pop
add
push
add
add
push
add
push
add
add
xor
xor
xor
add
add
add
add
add
incl
add
dec
add
inc
add
dec
add
dec
add
push
add
add
push
add
push
add
push
add
add
dec
add
dec
add
add
xor
xor
aaa
add
add
push
pop
add
add
add
add
add
incl
add
arpl
imul
add
outsl
add
and
jne
jo
add
je
add
add
outsl
add
je
push
add
xor
add
add
add
add
push
pop
add
add
add
add
add
incl
add
pop
add
dec
add
inc
add
pop
add
dec
add
push
add
inc
add
inc
add
inc
add
dec
add
xor
xor
xor
xor
add
add
add
push
pop
add
add
add
add
add
incl
add
add
add
add
add
add
push
sbb
push
add
add
add
incl
add
add
push
pop
add
xor
or
pop
add
addb
add
add
dec
add
pop
add
inc
add
inc
add
dec
add
push
add
add
inc
add
inc
add
inc
add
xor
xor
xor
xor
add
and
add
addl
add
incl
add
add
incl
add
add
add
add
or
add
add
add
add
add
add
add
add
and
push
add
add
add
add
add
add
add
add
add
add
add
add
or
add
incl
add
and
jo
jb
outsl
add
jns
and
jae
add
jbe
add
pop
add
add
add
push
sbb
sbb
add
add
or
add
incl
add
je
cmp
pop
add
add
add
add
push
sbb
sub
and
or
add
incl
add
je
cmp
pop
add
add
addb
push
inc
add
add
or
add
incl
add
add
add
add
add
or
add
incl
add
add
push
sbb
inc
add
or
add
incl
add
bound
insb
add
and
popa
add
je
push
add
add
popa
add
add
add
add
push
daa
add
add
add
or
add
incl
add
jb
and
outsb
add
insl
add
cmp
pop
add
add
add
add
add
dec
add
add
or
add
incl
add
add
push
daa
add
add
add
or
add
incl
add
jae
ja
outsl
add
add
add
xor
add
add
add
add
add
or
add
incl
add
add
incl
add
add
add
add
or
add
add
add
add
add
add
add
add
and
push
add
add
add
add
add
add
add
add
add
add
add
add
or
add
incl
add
popa
add
arpl
add
add
insl
add
insb
add
je
imul
pop
add
add
add
add
add
push
pop
add
add
or
add
incl
add
push
add
add
push
pop
add
add
or
add
incl
add
add
add
arpl
add
add
add
add
or
add
incl
add
jne
push
add
dec
add
add
add
push
pop
add
xchg
add
add
or
add
incl
add
add
dec
add
arpl
imul
add
add
push
pop
add
xchg
add
add
or
add
incl
add
add
add
inc
add
add
add
push
pop
add
fiadds
sub
or
add
incl
add
add
add
add
add
push
pop
add
add
add
add
incl
add
add
pop
add
add
xor
xor
xor
xor
xor
xor
xor
xor
adc
xor
xor
dec
xor
xor
xor
xor
xor
xor
xor
xor
mov
and
aas
ss
ss
ss
ss
xorl
rolb
add
add
insb
cmp
js
jle
test
mov
nop
cmp
cmp
cmp
rolb
or
add
adc
and
add
add
sbb
add
add
add
or
or
adc
adc
sbb
sbb
