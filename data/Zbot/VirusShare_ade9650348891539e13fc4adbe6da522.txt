insb
mov
add
mov
add
movsb
mov
add
lret
add
mov
add
adc
add
cs
add
dec
mov
add
mov
outsb
mov
add
mov
add
mov
add
mov
add
fs
add
push
ret
add
inc
ret
add
cs
add
push
ret
add
or
add
clc
ret
faddp
add
enter
scas
ret
mov
ret
jl
add
jo
add
add
push
ret
inc
ret
cmp
add
xor
add
and
add
adc
add
push
ret
hlt
roll
fcmovb
add
lret
add
add
add
add
add
push
roll
roll
roll
sbb
add
push
roll
repnz
in
add
aam
add
ret
add
add
add
rolb
or
add
sub
add
inc
mov
add
mov
jp
add
xchg
add
cmpsb
mov
add
mov
add
xchg
add
outsb
rolb
pop
rolb
push
rolb
inc
rolb
fidivrl
add
adc
add
add
add
in
mov
add
add
add
adc
add
sldt
orb
add
pop
add
adcb
add
cmp
add
add
xorb
jae
add
jbe
mov
add
add
add
add
push
add
add
mov
add
movsb
add
add
add
loope
push
sbb
aas
or
or
sarb
inc
sbb
pop
and
inc
mov
jne
cmp
repz
sbb
aaa
int
mov
fistps
mov
sub
jne
cmp
and
call
call
sbb
cmp
mov
dec
andb
cmp
stc
mov
pop
arpl
sub
pop
add
test
xor
cld
mov
or
call
call
mov
hlt
jbe
sub
mov
fldcw
lods
fdivl
ret
pop
pop
cmp
idivb
dec
pop
ret
cmp
nop
xlat
push
pop
jnp
out
sbb
leave
rclb
call
call
addr16
in
xchg
or
and
and
and
and
and
cld
imul
fwait
cmp
int
in
lcall
call
call
cmp
nop
push
cmp
jno
cld
push
pop
dec
fpatan
jge
shrl
fdivl
jb
jmp
xor
daa
add
push
inc
rolb
cmp
orl
call
call
mov
and
lock
xor
hlt
cmpsb
jecxz
and
mov
sti
pop
test
mov
out
in
lahf
out
push
ds
xchg
out
jns
aas
inc
testl
leave
mov
pop
push
dec
imul
mov
call
call
call
cld
sbb
jb
inc
add
mov
xor
adc
push
movsl
popa
in
pop
stos
pop
pop
rcll
add
add
mov
or
push
mov
out
test
sti
stc
xlat
sbb
dec
jne
inc
mov
inc
add
call
int3
ret
dec
xchg
mov
ss
xor
and
or
jle
aad
leave
xchg
out
and
sbb
out
lret
xor
xchg
fisttpl
mov
call
loope
fcompl
call
call
jne
lea
data16
rcl
mov
in
mov
movsb
shll
lahf
xchg
mov
mov
push
push
movsb
jp
into
pop
pop
xchg
cld
push
pop
insl
xor
call
call
call
and
and
and
and
adcb
rcrl
stos
pop
sbb
imul
push
mov
and
ret
pop
call
adc
out
xor
in
cmc
nop
jno
xorb
or
push
dec
sahf
gs
mov
in
lret
push
or
inc
mov
xchg
pop
or
call
call
call
pop
ja
aad
mov
js
pop
mov
pop
push
cld
outsb
add
faddl
lahf
nop
jl
repnz
repz
fdivp
push
fimull
and
clc
adc
mov
push
call
push
push
mov
push
dec
xrelease
fildll
pushf
sub
inc
add
xor
sbb
inc
lds
call
call
cmp
pop
jmp
fcmovu
mov
lods
lods
call
mov
fimull
shll
inc
inc
jmp
sub
sbb
xchg
jecxz
clc
ds
push
or
mov
pop
and
call
call
call
mov
fxch
int3
test
xor
lret
lods
sahf
jb
add
mov
outsl
jbe
std
push
cld
rcrl
mov
push
and
call
call
gs
xor
push
and
pop
xor
xchg
sub
sbb
add
add
sbb
fwait
addl
aaa
mov
call
call
call
ja
inc
cmpl
xor
call
call
dec
in
jmp
aaa
out
mov
adc
mov
inc
insb
fcmovne
cmc
jbe
jge
insb
mov
sbbl
rcrl
call
call
call
mov
lds
xchg
jle
mov
call
call
int3
pusha
loop
add
jne
or
cmp
xchg
dec
push
leave
mov
sti
jge
push
mov
xor
ret
and
and
and
and
and
and
call
call
call
sarb
add
mov
xchg
ds
inc
es
jnp
add
call
call
call
jnp
roll
xchg
loop
push
mov
xor
or
imul
and
xchg
or
pop
dec
fsubrl
inc
jns
bound
and
pusha
push
adc
addl
adc
in
aas
lods
wrmsr
cmp
mov
pop
cmpsl
in
dec
dec
insb
sbb
pop
xchg
call
call
call
insb
dec
cmp
arpl
jbe
sub
jle
push
pop
mov
out
xor
add
xor
dec
hlt
pop
push
jp
and
or
sub
fs
inc
mov
aam
or
mov
call
call
les
aaa
jno
lret
jns
bound
pushf
xor
xor
mov
pop
pop
out
rcll
and
mov
inc
jp
mov
fucomp
and
lahf
dec
mov
adcl
jecxz
nop
pushf
mov
add
jno
lret
call
call
mov
cmp
in
cmp
je
mov
adc
lods
add
loope
sbb
call
call
call
clc
sbbl
cmpsb
cmp
add
enter
sbb
test
add
sbb
dec
add
pop
dec
lret
mov
repnz
and
and
and
sbb
push
cltd
test
fistpll
cmp
pop
mov
cwtl
or
add
movsb
mov
mov
sbb
adc
pop
call
call
call
dec
sarb
clc
and
test
lahf
push
cwtl
sub
shll
cwtl
adc
out
push
dec
xor
pushf
call
mov
inc
sbb
push
adc
mov
call
call
or
sbb
shr
shll
xlat
cmp
call
call
call
fwait
mov
pop
pop
out
pop
mov
iret
push
mov
inc
test
xchg
std
pop
arpl
call
call
call
cmp
repz
cld
sbb
dec
add
and
and
and
and
mov
das
je
shll
popf
repz
psubsb
call
call
jns
adc
arpl
fmuls
out
ds
jno
xchg
jle
mov
mov
movsl
scas
cltd
and
mov
mov
jb
and
pop
ss
or
sbb
adc
call
call
mov
call
es
dec
push
xchg
xchg
inc
test
jmp
xor
call
call
pop
inc
pop
push
nop
in
pushf
hlt
jne
and
and
and
xor
cmp
stos
in
jo
mov
pop
and
pop
add
sbb
push
cmc
mov
lret
or
call
call
call
inc
in
add
push
mov
jg
aas
sbb
and
and
and
and
and
adc
cmp
cltd
lcall
mov
cmp
push
xchg
fwait
mov
hlt
fs
add
call
call
hlt
mov
push
insl
jno
cli
jne
and
mov
cmc
sbb
xor
cmp
cld
rorl
insb
push
push
mov
xlat
jmp
jle
call
call
test
jmp
pusha
insl
mov
pop
mov
and
cmpsb
enter
call
call
fwait
nop
loopne
pop
inc
mov
lock
push
out
pop
ljmp
out
sub
push
mov
popa
or
xor
mov
cld
sub
fprem
shrl
cmpsl
push
pop
xchg
jb
loope
dec
fisttpll
loop
call
call
call
in
sub
imul
jbe
call
call
inc
insl
adc
xchg
loopne
xchg
mov
cmpl
imul
jo
jo
pop
xor
js
loopne
xchg
aas
ljmp
leave
movsl
out
fisttpll
push
push
fcomps
or
mov
add
data16
call
and
mov
ret
mov
imul
sti
mov
xor
clc
test
fistl
dec
sub
dec
clc
call
call
or
cmp
or
jg
cmp
aam
data16
fidivrl
adc
pop
mov
jle
call
call
call
je
lret
or
iret
cmp
pop
addr16
fwait
pop
lea
mov
and
and
and
and
and
and
and
xchg
std
outsb
pop
call
mov
out
mov
pop
shr
in
je
xchg
imul
xchg
in
push
and
add
call
call
xor
and
fs
sbb
xchg
call
call
call
adc
int3
sbb
and
and
and
and
or
jnp,pn
sti
call
call
adc
sbb
jnp
mov
jecxz
mov
and
in
loopne
icebp
xchg
mov
test
les
cld
out
inc
jl
or
dec
inc
adc
frstor
and
jecxz
scas
int
lods
adc
into
push
das
jne
cltd
mov
call
call
call
and
and
and
and
and
and
dec
dec
inc
std
pop
pop
or
sti
cmp
call
call
call
insb
test
ret
insl
xchg
pusha
adc
mov
push
shlb
push
or
mov
sub
cmovs
test
pop
cmp
mov
pop
call
call
call
call
lea
sub
inc
repz
mov
ja
and
jno
bound
into
dec
cwtl
dec
nop
push
sahf
or
orl
call
mov
sbb
fcompl
mov
and
cmp
sbb
fwait
jmp
insl
or
push
lds
and
ud1
stos
adc
mov
fsubp
xor
push
mov
call
call
rcl
jge
adc
call
call
ret
adc
orl
or
popf
jne
arpl
or
jge
jp
jbe
mov
cltd
adc
mov
sbb
out
in
jns
inc
call
lds
imul
mov
inc
jno
inc
out
xchg
call
call
call
xchg
fnsave
mov
xlat
lahf
nop
xchg
addr16
mov
add
mov
jns
cld
out
enter
loopne
or
jle
inc
and
fsubrl
pop
dec
and
pop
jecxz
mov
shll
int3
lcall
cwtl
jle
push
std
movsl
sarb
lds
clc
call
call
les
in
lret
mov
jb
sbb
cmpsb
mov
jle
lods
mov
jecxz
lock
in
rcrb
and
and
and
and
and
cmp
sbb
mov
sub
jb
xor
std
and
mov
or
call
push
flds
pop
daa
add
popf
js
dec
jg
push
orb
inc
or
in
cmp
fcmovb
insb
inc
sbb
sahf
and
lods
push
xchg
call
call
jnp
adc
inc
and
lahf
movsb
testl
mov
fs
fs
pop
and
call
mov
out
mov
pop
call
mov
pop
push
lcall
push
cmpsb
clc
mov
pop
ret
or
int
call
call
call
sbb
push
aam
sub
jge
bswap
dec
mov
negl
mov
and
and
and
and
and
mov
dec
xchg
aaa
test
pop
test
imul
je
xchg
lods
push
add
fisubl
cmp
mov
iret
aaa
add
cmp
push
ss
cs
dec
sbb
inc
fwait
xor
call
call
inc
test
movsl
cmp
imul
dec
jmp
dec
and
adc
clc
js
jns
xor
push
cmp
xor
adc
push
add
xor
inc
test
and
push
popw
mov
pop
mov
push
and
and
and
and
and
and
out
sti
call
jns
in
test
mov
clc
mov
popa
icebp
sbb
xchg
pushf
mov
and
jp
cmp
ss
and
push
pop
cmp
lret
jg
or
push
push
push
cmpsl
pusha
adc
pop
push
popa
adc
fucomi
call
call
out
rcrl
and
mov
jns
jg
inc
sbb
test
push
call
mov
das
and
and
and
and
and
stc
xchg
ss
mov
push
sbb
mov
xchg
pop
sbb
pop
popf
repz
enter
xchg
ss
mov
call
call
sbb
sub
test
cli
mov
call
call
call
mov
jne
xchg
fcmovne
adc
into
pushf
imul
xlat
lds
adc
mov
fadd
pop
adc
sti
add
push
aas
inc
jo
popf
mov
roll
pop
pop
stos
or
loope
imul
jge
mov
jle
clc
call
call
in
cmp
cmc
xor
push
pop
dec
aas
inc
mov
call
call
sarb
rol
hlt
sub
mov
sbb
dec
pop
xchg
or
xchg
lcall
mov
test
cwtl
insl
mov
push
popa
rorl
mov
fcomps
pop
add
rorl
ret
push
scas
fstpt
call
call
push
jmp
mov
call
call
into
mov
out
push
fwait
jp
out
push
fidivrl
orl
adc
rorb
xchg
pop
adc
and
and
and
and
add
and
into
mov
cwtl
cmp
jb
test
adc
imul
notl
in
bound
pop
jp
xchg
into
repz
push
arpl
call
call
push
and
xchg
dec
mov
call
xlat
mov
jge
ja
in
lahf
lds
roll
push
xchg
fidivrl
loop
fcomps
nop
call
call
inc
push
mov
push
test
xchg
mov
jb
ret
fbld
insb
call
call
adc
in
add
mov
jno
push
mov
call
call
jne
lock
jle
test
xor
icebp
out
pop
cmp
call
call
call
call
cmpsl
subb
pshufw
sti
cld
jnp
adc
or
adc
jnp
fwait
in
push
inc
les
aam
aaa
dec
dec
int
mov
call
call
call
xor
add
xchg
cmp
push
sbb
call
call
cmc
mov
inc
sbb
test
mov
fsubl
stos
push
mov
out
je
popf
mov
inc
outsb
and
sbb
xchg
sbb
popa
mov
sbb
xchg
dec
or
call
call
jecxz
scas
mov
and
test
sbb
mov
cli
jb
ret
push
xlat
inc
or
lahf
mov
sub
mov
inc
loopne
icebp
inc
test
call
call
or
call
call
call
mov
out
jnp
lock
dec
add
sbb
repz
jle
shll
fadds
call
call
call
mov
xor
nop
fsubr
leave
test
cmp
lret
pop
mov
jl
in
loop
jg
sbb
and
inc
inc
je
sub
lock
popf
cmc
jns
movsl
popf
loope
inc
call
call
call
xor
xor
cmp
inc
gs
jbe
mov
and
and
and
cmp
lea
iret
lea
xor
add
jne
cmp
dec
dec
sbb
int3
push
or
sbb
das
test
push
xor
pop
ret
call
call
daa
idivl
pop
aad
int
repnz
fwait
and
and
and
and
fcoms
and
cli
movd
icebp
sub
sub
call
call
sub
push
push
clc
push
and
call
call
or
jmp
xor
fcoms
mov
iret
lahf
jge
pop
cmp
call
call
mov
xchg
cmp
jns
frstor
pop
call
call
sub
cmpb
and
daa
mov
int3
fistpll
cmp
sbb
mov
and
mov
xchg
mov
pop
popa
xor
xchg
mov
bound
inc
pop
pop
pop
cmp
xchg
dec
mov
and
cmp
js
call
call
call
mov
sbb
jge
mov
lds
adc
jl
shlb
lock
mov
clc
mov
arpl
call
call
jo
js
dec
pop
push
int3
pop
ljmp
roll
popf
pop
fs
sub
xchg
insl
aas
imul
fwait
sbb
push
fdivrl
call
call
call
repz
push
push
xor
or
mov
test
add
push
call
call
fs
ret
pop
shlb
cmc
divb
and
and
and
and
and
and
sbb
lret
cmp
add
mov
dec
add
stos
sbb
adc
mov
xor
out
xchg
and
adc
shrl
sbb
sub
test
in
push
call
call
fsubrs
push
push
sbb
sub
cli
pusha
add
iret
lret
stos
inc
incl
or
push
insb
sub
call
jae
es
mov
stos
sbb
or
faddl
cs
fs
das
xchg
stos
mov
lret
lcall
call
call
mov
cli
jmp
loop
push
sbb
xor
jecxz
push
inc
cmp
incb
adc
outsl
mov
and
inc
movl
mov
mov
call
call
xor
hlt
lcall
push
jg
ret
pushf
adc
push
iret
mov
dec
inc
out
sti
mov
aad
mov
dec
xchg
scas
xchg
out
lods
imul
out
add
fwait
dec
xor
cld
fcmovb
sub
jge
jmp
aad
pop
cwtl
xlat
jg
add
mov
push
sbb
outsl
mov
inc
stos
out
fcmovne
cltd
cli
test
pop
icebp
test
imul
test
call
call
call
mov
and
and
and
and
and
push
adc
dec
and
and
push
jbe
cmp
mov
add
jecxz
js
xchg
scas
xchg
aas
pushw
or
mov
fbld
call
call
call
adc
mov
add
mov
aam
ja
push
sub
testb
fsubrl
pop
push
fcoms
stos
mov
outsl
push
cwtl
mov
adc
out
inc
ja
sub
ja
loope
gs
call
call
inc
sbb
insl
je
fwait
fwait
adc
aam
test
jae
mov
pushf
les
call
call
sarl
lea
and
and
and
and
lock
ret
mov
mov
call
call
out
insb
popf
enter
iret
daa
leave
loop
dec
pop
cli
gs
push
add
rcll
sbb
loop
pop
call
call
jno
xchg
sub
and
and
and
and
and
and
mov
xor
cmpsl
and
movsb
aam
enter
jge
popa
adc
mov
jnp
nop
rclb
daa
data16
mov
shll
lods
and
cld
inc
and
cs
mov
sub
cmp
fildl
sub
call
and
and
and
and
cmp
sahf
jb
int3
jbe
aas
mov
fiadds
push
inc
pusha
xlat
push
mov
in
push
jae
adc
call
call
sub
iret
jns
arpl
test
mov
jns
sti
xchg
sarb
add
pop
fidivrl
daa
fwait
xor
leave
mov
or
jmp
and
and
ds
mov
push
add
mov
dec
call
pop
cwtl
sbb
call
call
xchg
cmc
cmp
mov
fwait
mov
pop
stos
push
inc
xchg
call
leave
jb
cld
js
mov
in
popf
sarl
sub
sub
lcall
test
mov
pop
ja
not
outsb
aas
or
out
lods
das
aas
rcrb
pusha
call
call
mov
pop
push
adc
and
inc
mov
push
test
ret
and
call
call
call
jg
jne
nop
negb
iret
jne
in
clc
xor
mov
xchg
outsl
fistps
adc
lds
ret
xchg
inc
jecxz
in
mov
pop
fmul
ja
repnz
out
push
sub
xchg
pop
cld
pop
mov
inc
arpl
and
and
and
and
and
and
stos
push
jbe
faddl
push
fwait
ljmp
fistpll
mov
stos
xor
mov
test
mov
test
push
xchg
mov
cmpsl
cmpsb
jne
ljmp
push
neg
mov
and
inc
push
imul
pop
or
insl
or
sub
mov
or
cs
fwait
call
call
call
inc
fs
imul
cli
and
mov
std
sub
icebp
push
int
pop
push
and
rcrb
rorb
ficompl
leave
cmp
test
sbb
jle
xchg
ss
and
and
and
and
and
and
and
and
jg
clc
lret
mov
call
call
call
pusha
cmp
mov
and
movsl
movsb
jns
ja
and
pop
push
shrl
push
and
adc
call
call
call
dec
aaa
jno
in
and
inc
dec
sbb
bnd
in
std
or
int
add
data16
into
les
cmpsl
jbe
cmp
cld
test
cmp
addl
test
subl
inc
fiaddl
data16
popf
jle
xchg
gs
push
adc
xor
call
call
sahf
xor
mov
push
ret
in
inc
fildl
in
pusha
xchg
xchg
inc
into
adc
sbb
repz
fwait
in
imul
insb
inc
jbe
js
jno
cli
cmp
sub
xorl
pop
adc
and
and
and
and
and
and
mov
mov
sub
sahf
sub
mov
ljmp
call
and
adc
out
inc
mov
pop
push
cs
pop
pop
sbb
mov
push
mov
sbb
dec
aas
hlt
sub
stos
orb
cmp
cmpl
push
jbe
and
cmp
or
xor
cmp
pop
outsl
xchg
or
push
les
icebp
mov
movsb
xchg
xchg
pushf
adc
pop
and
xchg
push
call
call
call
in
lahf
outsl
stc
mov
sbb
mov
cmpsl
stos
and
and
and
and
lods
adc
mov
jne
jb
pop
xchg
icebp
mov
sahf
aas
pop
pop
in
sbb
ret
jne
jge
incl
xor
xor
pop
fwait
call
call
ficoms
jae
xor
mov
add
jge
mov
enter
pop
or
gs
and
cmc
and
dec
xlat
jmp
movsl
icebp
ficompl
call
mov
mov
call
call
out
add
pop
mov
pop
mov
add
mov
sbb
shlb
incl
adc
pop
cltd
out
push
test
cmp
imul
ss
fsubrl
push
xchg
sub
call
call
call
sbb
in
dec
call
call
dec
loop
cmpsb
inc
test
andl
cmpsl
push
lods
fwait
adc
lcall
pop
adc
mov
jb
aad
mov
inc
jb
mov
push
arpl
xchg
je
andb
enter
call
and
test
jg
popa
mov
call
call
aas
inc
sbb
push
dec
pop
cmp
pop
mov
test
test
test
mov
sarl
mov
xchg
out
pop
arpl
xorb
xor
icebp
cmp
pop
and
daa
push
rcrl
shll
adc
rcl
call
call
hlt
sub
mov
sub
xchg
lods
add
xchg
aas
pop
sub
das
mov
shll
call
call
call
dec
mov
ds
dec
and
and
and
and
pop
out
lods
jno
or
mov
loop
xchg
loop
lret
inc
ror
int3
cmp
xor
call
call
call
lds
fcompl
adc
jle
push
xor
xchg
push
pop
xchg
adc
call
into
xchg
mov
repz
jns
icebp
shll
push
jo
rcll
into
dec
xor
push
lahf
cwtl
shlb
repnz
call
call
pop
inc
mov
and
and
and
sbb
adc
lret
adc
adc
push
test
xchg
adc
fdivs
fmul
mov
mov
les
in
push
popa
jmp
outsl
insl
push
pop
test
jp
xor
in
mov
fcompl
addb
cmp
and
add
call
call
inc
push
int
iret
pop
pop
out
test
rcrl
adc
jb
jecxz
inc
test
call
call
js
mov
lds
jne
xchg
pop
ficoml
jge
daa
sub
mov
call
call
dec
push
push
mov
push
or
cltd
inc
dec
add
lahf
and
hlt
push
sbb
mov
and
imul
xor
outsb
sub
xchg
cmpsb
lods
or
xlat
dec
cmp
ljmp
imul
repz
in
ret
xchg
pop
sarb
enter
call
call
mov
pop
push
frstor
dec
pop
and
xchg
outsl
mov
pop
xor
xchg
inc
pop
sbb
dec
jb
aas
adc
imul
push
or
ss
xchg
pop
ljmp
das
test
call
call
call
call
inc
and
mov
mov
cwtl
je
mov
lahf
push
dec
or
aas
inc
mov
jne
sti
pushf
pusha
dec
sub
mov
loopne
pop
call
call
call
mov
push
pop
daa
aam
add
xchg
mov
sti
dec
xor
scas
pop
fs
icebp
cmp
inc
inc
fs
rcrl
fnstenv
das
push
push
or
and
movsb
or
daa
ss
stos
push
dec
mov
call
call
pop
dec
out
mov
and
and
and
and
and
mov
dec
xchg
sub
dec
out
lods
inc
dec
enter
or
xor
test
into
and
mov
cmp
sub
mov
call
call
adc
fimuls
dec
sbb
inc
xor
dec
inc
mov
idivb
jno
imul
or
sub
jbe
inc
cmpsb
and
xor
inc
mov
pop
add
call
call
ret
orb
mov
lods
mov
ds
xchg
scas
add
adc
insl
inc
jl
add
lahf
and
jg
lahf
and
rorl
outsl
loop
faddl
call
call
or
dec
push
es
cmpsl
push
aad
cwtl
call
call
call
data16
mov
cmpsb
ljmp
xor
dec
push
es
jge
push
repz
add
stos
inc
fwait
sbb
daa
pop
test
sbb
scas
scas
gs
call
xchg
mov
call
call
cmc
mov
movsb
sbb
lahf
sub
in
mov
mov
inc
cmpsb
arpl
push
testb
mov
and
hlt
das
enter
popf
pop
outsb
and
hlt
jmp
pop
sub
aam
xchg
adc
add
adc
push
jmp
or
and
mull
int
call
call
call
in
mov
bound
js
mov
fcom
inc
pop
into
jb
ds
int
push
cmp
push
fsubs
mov
insb
pop
cmp
cmp
rcll
call
lock
loopne
pushf
dec
push
mov
sbb
mov
hlt
inc
jae
or
inc
xor
mov
jecxz
pop
or
dec
jbe
add
add
icebp
push
int
stos
sbb
in
push
sbb
and
and
and
and
call
call
dec
adc
ds
cmp
call
call
call
sub
sbb
cmp
jp
xchg
sbb
push
mov
ret
jg
or
push
cmp
mov
aad
xlat
sub
test
call
call
call
pop
inc
mov
loop
in
mov
out
sarl
negl
sub
push
cmp
insl
and
jg
inc
mov
and
and
and
and
and
and
and
and
sahf
dec
dec
add
xchg
and
pop
push
mov
push
add
in
ds
sub
jo
jbe
call
call
sub
dec
xchg
sub
enter
test
and
mov
cltd
test
cltd
pop
xchg
xor
xlat
leave
push
mov
aaa
inc
push
out
jae
or
push
scas
dec
cmp
xchg
jp
and
and
and
loope
aad
dec
pop
leave
cs
lods
adc
adc
dec
xchg
cmc
int3
add
xor
aad
movsb
lods
aaa
call
call
mov
xor
stc
push
and
imul
imull
and
ljmp
shll
loop
movsb
mov
inc
ret
call
arpl
int3
dec
or
cli
ja
sbb
aas
fwait
dec
jmp
xchg
addr16
lods
ljmp
lods
lods
cmp
das
popf
movaps
xlat
orl
jnp
push
inc
add
lret
push
stos
ret
sub
mov
cmp
jge
pop
imul
call
call
or
dec
pop
push
dec
inc
cmc
pop
popa
push
cs
pop
in
lret
inc
icebp
adc
adc
sbb
mov
mov
add
sbb
stc
imul
mov
pop
addr16
insl
add
push
ret
cmp
cs
inc
and
or
pusha
pop
or
xor
add
shr
call
call
or
lea
jecxz
mov
test
insw
and
and
and
and
and
out
sub
movsl
xor
push
enter
add
cmpsb
leave
fisttps
ja
cmp
push
inc
data16
push
pop
xlat
adc
push
jmp
call
call
sub
leave
and
negl
call
call
or
sub
dec
push
sub
xchg
sbb
out
pop
xor
aas
pop
cmp
call
incb
into
dec
lcall
pop
loop
mov
call
call
inc
ret
push
ja
roll
sbb
push
jne
mov
jnp
dec
pop
cmp
hlt
adcl
and
addr16
sub
into
jnp
aad
inc
repz
push
mov
jg
fwait
jl
sti
and
and
and
and
and
and
and
and
cltd
call
call
and
out
jbe
xchg
sbb
jg
add
cmp
js
test
flds
xchg
ret
cmp
call
call
and
and
sub
dec
imul
dec
call
call
call
call
inc
in
mov
pop
push
pop
jl
inc
pop
pop
mull
sbb
ss
stos
je
ljmp
mov
bound
jbe
outsb
pop
jecxz
lock
popf
or
fidivs
shll
push
insl
cmp
notl
hlt
dec
inc
call
call
call
sti
shll
push
adc
sbbb
cmp
cmp
aaa
mov
cmc
scas
data16
sahf
push
pop
stos
adc
lret
cmpsb
dec
out
rolb
call
call
call
cs
cmp
mov
xor
hlt
in
pop
mov
cmp
ljmp
lret
loop
push
cmp
scas
lods
js
sbb
bound
xor
sbb
xchg
lret
mov
je
xchg
in
push
dec
or
jno
push
ljmp
js
and
xchg
call
call
mov
sub
out
test
mov
call
call
add
addb
mov
hlt
je
mov
stos
mov
scas
pusha
call
call
call
jp
inc
add
mov
jo
das
mov
lock
mov
cli
mov
arpl
pop
lea
push
push
hlt
mov
and
and
and
and
xor
and
and
and
and
and
and
mov
or
ret
xchg
dec
dec
adc
pop
cld
notb
sbb
std
popa
dec
sub
call
call
movsb
or
and
push
lds
rolb
mov
mov
aaa
and
jmp
push
arpl
scas
push
pop
mov
js
call
call
call
cwtl
test
cmp
lret
cmp
or
je
aam
in
mulb
xor
dec
mov
or
cs
xchg
subb
call
call
jecxz
into
mov
xor
dec
jge
jae
test
movsb
cli
movsl
scas
int
out
addr16
or
shlb
dec
cmc
adc
into
ljmp
popf
cld
mov
mov
add
xor
call
call
call
fsub
mov
aad
adc
int
jno
fucomi
xor
data16
mov
dec
mov
cwtl
sbb
sub
shrl
call
call
call
pop
jns
dec
adc
jo
nop
jns
aas
fldenv
inc
mov
sahf
mov
scas
pop
push
inc
inc
jb
inc
cs
lret
push
cmc
lods
push
mov
add
hlt
dec
cmp
lds
cmp
out
popa
sbb
loope,pn
add
sbb
add
into
pop
movl
call
dec
imul
xchg
xchg
pop
xor
das
push
lret
adc
pop
bound
mov
inc
out
inc
call
call
call
lret
mov
adc
cmp
mov
pop
mov
and
and
add
jle
mov
xor
mov
sub
mov
fcomps
out
call
iret
aaa
or
andb
jmp
call
call
repnz
call
call
call
in
jae
mov
add
pop
sbb
sub
mov
lods
and
and
and
and
and
and
and
cmc
fsub
call
call
ret
call
dec
inc
sub
push
dec
xor
jns
add
lahf
mov
lock
inc
xor
sub
mov
pop
mov
negl
inc
int
pushl
cwtl
dec
or
jmp
add
push
loope
cmp
and
addl
call
call
call
and
and
cmpsb
push
test
data16
dec
and
xor
pop
out
je
push
test
repz
sbb
fucomi
fstp
jne
sub
andl
push
xchg
inc
lds
daa
or
dec
je
mov
pop
jmp
fisttpl
adc
call
jl
subl
or
and
sbb
add
loope
sub
sbbb
xor
insl
repnz
stos
push
out
cmc
stos
arpl
adc
ds
ss
call
jmp
std
sub
push
rcr
out
jp
pop
push
pusha
pop
in
xchg
xlat
call
call
cld
and
xchg
call
call
xor
bound
cmp
push
add
mov
or
mov
lods
cwtl
pushf
jmp
shrb
push
sahf
data16
push
stos
inc
xchg
push
or
stc
push
imul
xor
or
call
call
call
adc
ss
popf
ja
daa
rol
loopne
fmuls
sbb
lods
call
loop
pop
test
repnz
cmpsl
sbb
or
ja
dec
xor
data16
mov
lcall
out
jnp
and
mov
xchg
call
call
in
dec
hlt
nop
in
ljmp
sub
call
xchg
inc
movsb
cmp
push
sub
and
adc
mov
loopne
call
call
call
stos
test
jmp
dec
outsb
jb
fxch
jo
movsl
lret
sub
cmpsl
pop
mov
push
mov
mul
aam
lock
push
les
xchg
dec
mov
sti
cmc
cwtl
hlt
aad
mov
xor
jb
sub
push
push
and
and
and
and
mov
jmp
mov
bound
loopne
call
call
rol
sub
inc
jle
cld
leave
mov
shrl
mov
incl
nop
xor
mov
lods
mov
test
push
push
dec
cwtl
pop
test
fnstenv
divb
lret
inc
xor
push
sbb
or
mov
call
call
sub
sub
cmp
test
inc
lret
adc
inc
xor
sbb
cmp
dec
push
outsb
jp
gs
lock
imul
roll
lods
out
jle
push
mov
int
repz
mov
adc
call
call
in
sbb
mov
jbe
lock
jne
pop
mov
out
mov
mov
jp
dec
fstpt
and
call
call
call
popa
sub
and
and
and
and
and
test
testb
sbb
jo
xlat
pop
add
xchg
or
jg
inc
ljmp
movsl
pop
pop
mov
in
push
jnp
not
xor
stos
mov
call
call
std
cmp
sbb
jl
push
mov
imul
test
cs
jb
nop
enter
mov
push
push
or
sbb
push
or
sarl
and
insb
divb
lods
push
test
fildll
aad
xor
fldl
stos
call
call
call
xchg
adc
sbb
adc
sbb
pusha
mov
mov
cmp
push
jns
repz
xor
pop
push
pop
outsb
std
jnp
ret
dec
out
rorb
pop
jmp
cwtl
nop
roll
add
call
call
adc
call
call
sub
add
cmpsb
insl
cmp
sbb
in
sbb
subb
adc
std
sub
jns
test
or
pop
clc
push
adc
idiv
loopne
addr16
sub
dec
fcoms
push
jmp
loop
push
sub
call
call
call
add
mov
jb
imul
mov
cmp
rcl
nop
xor
xor
xchg
inc
xor
push
aad
inc
cmp
call
call
call
jnp
insl
push
jns
adc
sti
cmp
outsl
mov
mov
xchg
dec
adcl
cmp
pop
pop
jns
jle
ss
xchg
stos
sub
or
movsl
inc
adc
test
sub
xchg
or
dec
jae
pop
sbb
xchg
stc
cmp
push
dec
lret
andb
test
xchg
jb
or
xchg
mov
call
call
adc
and
and
and
and
and
and
cmp
jae
push
dec
push
test
call
call
jl
nop
mov
dec
ret
pop
aaa
or
sahf
decb
or
adc
push
aad
sub
xchg
pop
mov
in
arpl
mov
call
es
push
jl
arpl
pop
stos
pop
lret
data16
out
sahf
mov
pop
dec
int
call
call
jb
or
push
adc
and
cmpl
xor
inc
mov
inc
ja
push
clc
xchg
xor
lods
arpl
loopne
bound
inc
and
out
cmp
in
fldcw
jae
add
call
call
das
sub
jno
int3
sarb
inc
xchg
cmpsl
xor
je
cwtl
mov
ja
jecxz
fdivrs
rorl
inc
cli
movsl
jae
jmp
push
test
lods
mov
call
call
cmp
notb
dec
dec
xor
lcall
call
call
xchg
inc
iret
sbb
cmp
mov
pop
aaa
lcall
push
mov
call
call
call
je
jmp
xchg
in
inc
mov
sub
cld
jbe
inc
dec
nop
loope
mov
xor
push
mov
cmc
sbb
or
mov
fstpt
push
pop
pop
fucomp
call
call
call
test
push
movsl
or
lret
mov
inc
loop
adc
mov
imul
xchg
mov
xchg
sbb
mov
fisubs
mov
push
add
xchg
std
jp
fsubrs
and
and
and
add
xchg
xor
fistps
fdivl
aas
fnsave
call
call
loop
pop
ret
mov
or
pop
aad
cmpsb
sbb
mov
xchg
push
ret
pop
cmp
cmp
aad
call
call
or
cmp
sub
or
nop
jae
cmp
inc
adc
sbb
mov
jge
sahf
pop
push
inc
mov
mov
dec
call
call
call
scas
xor
jbe
call
cmp
lcall
fmuls
enter
dec
jns
flds
xor
sub
cwtl
jmp
in
jnp
rolb
call
call
pop
mov
cmp
fistpl
xor
aas
mov
push
mov
shrl
mov
call
call
call
mov
call
cmpsb
jecxz
imulb
sbb
and
lods
out
pop
pop
push
lock
sahf
mov
cli
pusha
cli
ror
lret
inc
jl
call
dec
fidivrs
sbb
mov
jmp
mov
call
call
call
outsl
inc
or
out
and
adc
mov
hlt
aaa
and
jnp
push
inc
sbb
call
call
inc
sti
xchg
add
leave
dec
pop
shlb
cli
pop
mov
insl
adc
dec
and
ds
call
call
cs
adc
and
pop
dec
mov
call
call
mov
xchg
in
or
test
xchg
clc
rcrl
aas
ljmp
mov
pop
jnp
ds
nop
sar
mov
and
call
call
call
call
jno
xor
mov
test
insb
bound
ret
mov
or
adc
gs
call
call
call
insb
and
inc
out
mov
dec
add
pop
xchg
out
call
call
call
mov
push
pop
mov
call
call
lods
jno
jae
loop
xor
cmp
push
lds
aas
jae
or
cmp
and
and
and
and
call
call
mov
out
nop
lods
scas
inc
dec
pop
or
das
cmp
push
cmp
frstor
push
ret
inc
in
dec
sub
out
sbb
xchg
and
nop
cmp
push
lds
rorl
enter
mov
mov
call
call
cmp
shlb
or
mov
add
dec
negl
dec
adc
fwait
nop
das
mov
int
fiadds
nop
inc
mov
leave
lahf
addr16
insb
iret
ja
and
bound
push
fistpll
mov
mov
mov
std
inc
divb
cmp
in
call
call
sbb
ss
stos
xor
loop
bound
je
andb
lods
mov
xorb
mov
call
push
ja
lds
call
call
and
icebp
xor
jl
xchg
bound
in
int3
cwtl
lret
cmc
insl
sbb
movsb
xor
pop
cmc
es
pop
pop
push
or
lahf
sub
pop
movsb
sub
fcomi
inc
cld
scas
lds
nop
dec
pusha
push
cld
lea
in
fisubs
aas
xchg
or
sbbb
push
call
call
or
lds
fucom
jne
stos
adc
push
jp
dec
pop
call
call
call
jns
test
cmp
icebp
movsb
lock
mov
adc
fcomps
mov
push
add
hlt
cmc
cmp
inc
adc
push
push
push
mov
repz
push
xchg
enter
mov
adc
mov
dec
movsl
rol
cs
inc
iret
es
add
mov
call
call
arpl
push
dec
and
lea
mov
call
call
call
stos
jmp
mov
push
cmpsb
sub
add
into
pop
gs
sub
sub
cmp
cmp
xchg
andl
xchg
jns
cli
mov
outsl
pop
xor
sub
ret
sti
insl
aaa
mov
and
and
and
and
cmp
popf
shll
ljmp
call
call
pop
fcoml
ljmp
adc
add
xor
mov
cmpsb
mov
add
push
out
jb
mov
xor
mov
mov
sbb
xlat
sub
mov
mov
popa
pop
enter
and
and
and
data16
ret
clc
loope
es
mov
loopne
xchg
in
mov
jmp
stos
lahf
pop
repnz
mov
aam
jo
push
scas
scas
xorl
repz
and
in
mov
lret
cmp
inc
sbb
addr16
int
call
call
and
jnp
xor
mov
call
call
insb
adc
add
jl
push
and
je
test
jnp
sti
jnp
xchg
je
fadds
pop
mov
mov
movsl
add
fdivrs
test
or
jecxz
insl
pop
push
sti
adc
push
push
and
call
call
call
cmp
scas
arpl
cmpsl
pop
adc
cli
xchg
inc
scas
jo
rclb
js
add
sub
cmp
mov
leave
subl
inc
cli
pusha
cli
and
js
loopne
mov
and
sub
and
or
test
mov
in
ss
sar
int
cltd
mov
test
outsl
jne
call
call
cwtl
std
jecxz
lahf
dec
mov
inc
xorl
fistpll
fs
or
xchg
cmp
call
call
ret
mov
sub
push
mov
add
or
sbb
and
and
and
and
and
and
and
mov
add
aas
ds
xchg
fwait
mov
jbe
mov
mov
cwtl
lock
xchg
pusha
xor
push
cmp
out
add
mov
subb
call
call
jae
lret
sbb
call
call
stc
sahf
jns
nop
and
scas
mov
les
enter
fimuls
test
call
call
mov
lahf
std
aad
jnp
inc
push
mov
daa
loopne
inc
sti
xlat
pop
pop
lcall
cmp
stc
call
xor
out
jns
adc
arpl
mov
cs
push
add
out
pop
inc
inc
frstor
call
call
mov
je
js
mov
outsb
or
lods
mov
push
sub
sbbb
adc
decl
es
fwait
stos
mov
scas
adc
and
and
and
in
mov
cmp
call
call
lods
sub
gs
dec
push
aaa
fsubs
or
add
or
adc
pop
push
and
fsts
cmp
and
leave
push
xor
add
outsb
sbb
call
call
enter
jae
shrb
ds
inc
icebp
jne
inc
popa
daa
mov
call
call
push
or
sbb
inc
pop
sbb
pushf
pop
sbb
inc
inc
arpl
insl
into
mov
or
lret
push
sub
mov
or
jmp
call
call
fildll
sbb
into
xor
repnz
sub
mov
jne
fisttpll
pop
insb
xor
jmp
mov
sub
rcr
jo
push
pop
xor
test
add
sti
cltd
rcrl
call
call
call
call
test
mov
mov
lods
dec
mov
rcrb
ja
cmpl
sub
mov
aam
lods
mov
stc
push
jae
inc
jne
call
mov
or
xchg
add
cmc
cmp
sub
std
popf
dec
cmp
call
call
and
call
xlat
mov
push
xlat
movsb
sbb
sbb
shrl
and
cmp
jbe
in
sub
inc
lcall
call
or
push
lock
xchg
jg
push
sub
mov
inc
fsubr
call
call
push
mov
aad
ss
inc
mov
push
sbb
lods
sbb
dec
call
call
pop
mov
mov
rcr
mov
popa
aaa
test
mov
mov
xchg
xorl
cs
pop
clc
out
insb
inc
push
cs
or
mov
out
int
enter
and
and
and
and
and
sti
jb,pn
popa
ret
fnstcw
inc
add
call
call
call
ret
ret
push
fbstp
xlat
aaa
jbe
insl
push
adc
inc
dec
mov
rorl
shll
and
and
and
and
js
movsl
in
cmc
push
add
pusha
gs
jl
xor
dec
sub
mov
pop
loope
jbe
adcl
cs
call
call
xchg
mov
pop
cs
dec
test
lods
dec
pop
repz
jle
popf
mull
and
or
fnsave
call
call
cld
pop
clc
mov
push
or
mov
jnp
enter
mov
sbb
call
call
call
callw
call
inc
les
fcmovnu
call
call
adc
in
shl
ror
mov
pusha
cwtl
sbb
fabs
push
xchg
push
cmp
mov
pop
dec
ss
and
jge
cmp
cmc
dec
mov
xor
inc
iret
cmpsl
lds
lret
hlt
mov
or
mov
sub
mov
les
fmull
xor
xchg
jnp
shrl
ror
call
call
call
es
in
int
add
jmp
repz
aas
scas
testl
fadds
ja
push
push
imul
enter
cmpsb
cmc
leave
and
aam
cmp
mov
inc
mov
mov
in
ja
insb
pop
cmp
or
adc
sarl
test
xchg
call
call
call
inc
out
xor
pusha
add
movsb
jl
and
or
dec
sub
adc
dec
repnz
xor
sub
mov
or
push
stc
mov
pop
out
and
fwait
insb
mov
ja
mov
addb
rcrb
repnz
call
call
pop
lret
out
clc
fwait
push
adc
lcall
and
and
and
mov
nop
gs
and
cmc
add
call
call
call
gs
popf
sbb
ror
pop
mov
ljmp
jo
aaa
cltd
jle
stc
dec
push
mov
and
and
and
and
and
out
scas
dec
fidivl
jb
cmpsl
call
call
cs
cmp
xchg
insb
enter
inc
stc
scas
jb
aam
outsl
call
add
mov
sbb
loope
ret
jnp
sbb
pop
xor
jae
mov
arpl
mov
clc
int
inc
inc
mov
or
push
aam
ficoms
sbb
push
inc
call
call
call
xor
mov
imulb
xchg
sbb
enter
sbb
enter
mov
dec
call
pop
or
jecxz
jnp
sub
call
call
call
push
sub
xor
and
and
and
and
cs
and
lods
mov
arpl
xchg
loopne
xchg
jns
stos
outsl
xor
jno
dec
push
sbb
dec
add
call
call
push
pop
xchg
jne
sbb
pop
scas
push
xchg
mov
aas
das
cs
push
inc
rcll
push
fsts
js
add
cwtl
xchg
jl
out
fcoms
cmp
and
call
call
mov
jg
cmc
jns
stos
addr16
call
add
fnstsw
cltd
add
das
mov
push
inc
imul
or
mov
cmpsl
int
call
xchg
dec
lods
adc
xchg
cmp
push
cmp
mov
or
push
in
or
add
in
lcall
gs
mov
call
call
bound
ret
scas
pop
mov
test
cld
call
mov
push
inc
gs
call
call
call
and
and
and
and
and
and
and
out
push
jne
inc
nop
add
loopne
pop
add
mov
pop
call
call
jl
fdivrs
or
pop
or
push
xchg
mov
add
or
call
call
aad
adc
pop
cmp
dec
xor
sbb
mov
adc
call
call
call
incl
imul
enter
icebp
xor
mov
lahf
lods
out
or
lods
mov
dec
pop
inc
lock
dec
or
and
call
call
inc
jecxz,pn
hlt
lods
imul
shll
addr16
push
stc
je
test
je
jb
das
pop
cmp
pop
mov
xlat
dec
lret
sbb
mov
sbb
cs
jge
or
xchg
pop
cmp
cmpsb
mov
mov
call
call
adc
fucomp
arpl
rorl
daa
and
call
call
cmpsb
insl
ficompl
in
jne
lods
loope
punpckhwd
push
xchg
popa
jl
adc
and
out
scas
sbb
pop
rorb
pop
cltd
fdivrl
jbe
test
std
xorb
jae
call
call
rcrb
and
in
xor
push
cli
jo
jo
in
sbb
pop
js
clc
dec
mov
cs
mul
xor
inc
push
xor
and
and
and
and
and
lods
xor
fsubrs
jge
outsl
push
test
cwtl
imul
xor
mov
call
call
fidivl
add
call
call
scas
mov
test
mov
incl
mov
mov
jg
xor
cld
pop
mov
outsl
or
mov
lods
adc
scas
daa
mov
call
int
jno
aaa
sbb
call
call
call
xchg
cli
outsb
inc
pop
push
fcmove
imul
adcl
dec
je
cwtl
jecxz
call
call
call
and
and
and
lahf
fsubs
xchg
dec
lret
and
pop
jns
add
in
bound
pop
subl
or
mov
rolb
push
ficoml
mov
aad
arpl
into
gs
lock
sub
lahf
mov
call
call
insl
roll
sbbb
cmp
push
ret
sub
out
jne
cltd
mov
mov
xchg
rclb
or
cmp
loopne
ret
rclb
arpl
call
call
push
lret
pusha
arpl
xchg
mov
fs
enter
xor
stc
mov
ret
dec
push
xor
lret
xchg
call
push
and
arpl
lret
xchg
in
inc
ja
push
jge,pn
mov
pop
cmpsl
xchg
std
sub
loope
das
xchg
lds
nop
pop
call
call
call
inc
add
cwtl
jae
aaa
fdivs
xchg
insb
pop
les
inc
out
xor
jl
add
dec
adc
mov
call
mov
inc
sbb
lock
cmp
pusha
sbb
xchg
clc
sub
cld
push
in
jnp
cmp
cmp
dec
lret
cwtl
inc
add
xchg
cmp
in
xchg
mov
sub
call
call
repz
cwtl
aaa
xchg
sub
mov
imul
call
call
loop
jmp
loopne
lods
imul
out
jg
sbb
mov
and
and
and
and
and
scas
testb
rcrl
out
add
test
jbe
dec
cmp
push
call
call
call
call
lret
lahf
mov
hlt
push
adc
xor
loop
lea
mov
setl
nop
fbld
lds
jns
repnz
pop
jg
fwait
xor
inc
cmpl
mov
mov
sbb
call
loope
andl
jns
shl
push
test
data16
sub
push
and
pop
jl
js
push
mov
dec
push
mov
sub
sub
pop
xor
mov
push
xchg
popa
mov
inc
sub
sti
push
mov
push
call
call
call
inc
push
mov
and
and
and
and
nop
lds
movsb
lods
pop
or
data16
cli
cmp
mov
sub
mov
or
push
mov
pop
dec
lret
roll
imul
daa
adc
inc
push
ret
lret
sub
hlt
push
lock
call
call
push
add
mov
or
pop
pusha
mov
loopne
jae
push
cmp
jp
addl
lods
mov
inc
test
mov
xor
rol
cli
insb
ja
icebp
leave
cld
filds
ja
call
call
call
xchg
dec
test
sub
loopne
es
cli
scas
subl
xchg
mov
xor
imul
lret
aaa
rcrl
arpl
ss
jbe
mov
jno
inc
push
pop
pop
and
ljmp
daa
outsb
lock
inc
std
popf
std
and
repz
call
call
je
push
fwait
fwait
add
fiadds
orb
gs
push
fs
jg
pop
add
arpl
jbe
sub
lea
loope,pt
test
bound
and
and
and
and
mov
lods
repnz
int
mov
call
call
decl
sbb
dec
pop
sbb
testl
stc
mov
stos
enter
dec
test
movsl
loopne
mov
call
call
xchg
adc
in
cmp
jmp
es
mov
call
call
xor
addl
or
inc
dec
jae
std
push
pop
and
jecxz
jecxz
movsb
and
aaa
loop
xchg
sub
in
push
sbb
xchg
or
mov
mov
ljmp
sub
hlt
adc
cltd
imul
call
icebp
xchg
inc
mov
pop
jns
mov
add
inc
adc
cmp
scas
dec
out
jmp
and
and
and
and
and
inc
movsb
das
mov
ror
sbb
xchg
faddl
pinsrw
adc
cmp
dec
cmp
call
call
call
pop
add
addr16
cs
daa
stos
mov
test
inc
fs
xor
pop
jae
xchg
sbb
ja
pusha
aam
outsb
jnp,pt
and
call
call
sub
and
push
rorl
fisubl
aaa
shl
idivl
mov
addr16
mov
loope
jecxz
add
cmp
call
call
out
push
xor
dec
mov
add
sarb
jl
and
rorb
addl
enter
hlt
in
cmp
and
filds
sahf
cmp
mov
call
call
call
add
push
stos
rol
out
xor
pop
gs
shll
cmp
push
sub
call
call
in
out
xchg
movsb
lock
inc
jmp
mov
mull
and
test
repnz
call
call
divl
adc
call
call
call
call
adc
dec
into
shlb
mov
aaa
push
and
add
mov
call
call
sti
dec
push
aaa
fidivl
inc
repnz
add
cmpsl
arpl
mov
add
flds
pop
adc
sub
lret
jnp
call
aaa
or
mov
or
cmc
cmp
sbb
call
call
mov
adc
pop
leave
push
inc
mov
dec
pushl
call
xchg
icebp
lock
cs
push
jg
jge
faddp
nop
insb
movsl
mov
clc
and
pop
push
popa
or
pusha
mov
fbld
xchg
xor
mov
popf
dec
roll
clc
call
call
call
jmp
and
dec
xchg
imul
ss
call
call
call
cmp
sarl
call
call
call
mov
outsb
in
xor
dec
push
repz
and
and
and
and
pushw
je
cmc
out
add
mov
inc
jmp
call
call
jecxz
lret
rorb
inc
clc
cmp
add
sti
push
ret
dec
mov
arpl
jns
lahf
pop
sarb
imull
push
repnz
aaa
dec
lret
out
gs
jecxz
inc
hlt
or
mov
mov
sub
ds
lret
std
jno
call
call
call
push
scas
inc
aam
adc
inc
fstps
and
cmp
and
mov
bound
leave
stos
dec
stos
xchg
das
push
call
call
call
add
jge
pop
xchg
std
aam
pushf
xrelease
ficoms
cltd
rcll
pop
lcall
inc
jb
loope
dec
pop
jnp
gs
das
je
lret
mov
push
inc
inc
adc
shr
lret
xor
jb
push
into
cltd
out
push
addr16
mov
cmc
call
call
call
add
mov
orb
mov
jno
je
xor
iret
aaa
mov
scas
daa
xor
inc
push
fldenv
in
fdivrs
xchg
xlat
inc
shll
push
call
cli
cmpsl
sbb
fistps
dec
lahf
arpl
adc
push
cmp
loope
cltd
adc
es
xor
adc
loope
repz
leave
call
call
call
daa
loope
push
call
call
xchg
aaa
test
in
ds
mov
rcrb
outsb
mov
xor
pop
insl
loop
xlat
cmp
out
cmp
lea
imul
sahf
adc
mov
les
insl
xor
pushf
in
mov
xor
call
call
dec
adc
and
mov
int
sarl
xchg
xor
and
and
and
and
and
call
call
loopne
sahf
imul
jecxz
cmp
stc
and
sub
sub
sub
out
rorl
pop
mov
repnz
or
popa
push
jg
push
mov
push
sbb
mov
mov
insb
cmc
cmovno
dec
outsl
enter
test
call
call
call
cld
add
cwtl
out
jno
ret
stos
push
iret
jnp
cld
cmp
xchg
pop
add
pop
out
int
cmp
call
call
push
or
fadds
cmp
and
and
and
and
and
and
and
and
and
fistpll
xchg
pop
and
pop
fnclex
push
fdivs
call
call
call
test
sbb
inc
in
push
jno
push
sub
aam
push
jne
jne
test
lock
es
add
dec
cmp
adc
je
lahf
and
mov
call
xchg
insl
lret
mov
fdivrs
ja
sahf
fadds
insl
mov
call
call
call
or
cltd
xor
pop
ds
sub
push
repnz
xchg
aam
addr16
std
sub
cmc
inc
jbe
orl
mov
jg
push
leave
adc
aad
push
mov
lahf
movsl
loope
push
jae
jnp
xchg
adc
in
sti
jo
or
mov
cmp
call
call
call
call
sar
xlat
inc
filds
inc
sub
call
call
nop
mov
shrb
xor
pop
dec
cmp
stos
roll
call
call
mov
pop
clc
pop
pusha
or
call
out
push
fdivl
repz
pop
xchg
mov
out
adc
jae
sub
call
call
mov
lods
xor
sbb
xor
pop
sahf
iret
jno
dec
inc
into
aas
push
dec
fcomps
repz
fcomps
xor
hlt
xor
and
and
and
and
nop
mov
roll
je
sbb
and
ljmp
cwtl
jle
clc
or
inc
xchg
add
cmp
lock
call
call
lcall
mov
sbb
and
test
shr
adc
or
repnz
sub
fstp
sbb
arpl
call
call
or
test
mov
hlt
out
nop
insl
je
xor
sub
mov
rcrb
sub
inc
iret
enter
push
jp
mov
ret
fimull
lcall
adc
xchg
ret
int
addr16
call
call
inc
dec
xchg
xchg
call
call
call
adc
cli
pop
int3
mov
clc
inc
xchg
pop
dec
add
stos
pushf
stos
push
das
jno
xchg
pusha
cmc
std
negb
fwait
and
lods
push
xor
js
mov
popa
xor
lret
pop
fidivs
push
fwait
sbb
lds
jb
in
lahf
dec
insb
adc
call
call
out
sub
mov
shrl
call
call
call
mov
mov
out
ljmp
jbe
decl
std
int3
jl
pop
and
mov
and
call
call
call
cmpsb
jg
rorb
mov
fildll
daa
xorl
sbb
addr16
std
idiv
ret
jnp
aad
or
mov
and
and
and
and
push
xor
icebp
punpckhwd
in
xchg
jle
jp
call
call
daa
out
push
pop
dec
cmc
mov
sbb
xor
fwait
inc
lret
inc
icebp
mov
mov
cmp
cmp
jne
fdivrs
xchg
stc
mov
adc
call
call
cmp
mov
aas
add
mov
ljmp
and
push
mov
int
imul
jno
leave
aaa
imulb
sbb
jmp
pop
clc
outsb
out
gs
cmc
mov
call
into
and
sub
ljmp
or
sbb
test
call
call
and
xor
cmp
mov
sbb
arpl
call
call
call
fs
int3
cmp
lahf
aam
call
call
call
inc
jae
popf
xchg
call
mov
int
fadds
stos
mov
insb
in
mov
fs
aam
cmp
insb
ja
inc
addr16
push
xlat
mov
call
call
fwait
xchg
mov
addr16
mov
mov
call
call
xchg
cmc
repz
test
mov
movsb
aam
dec
ja
repz
mov
push
pop
ret
dec
pop
xchg
aad
mov
mov
dec
dec
jns
push
lods
and
dec
xchg
scas
out
xchg
jp
fst
push
jl
mov
ja
loope
jae
scas
xchg
xchg
call
call
leave
lods
push
jmp
pushf
or
xchg
mov
and
and
and
inc
mov
in
xor
out
push
cmc
bnd
add
sub
push
iret
call
call
lret
lods
enter
scas
sub
adc
xlat
ja
incb
in
call
int3
mov
in
cs
nop
xchg
jae
stos
push
cwtl
jp
rorb
call
pop
fbstp
int3
cli
fidivs
mov
inc
sbb
pop
int3
addr16
inc
fcoml
and
call
call
daa
push
jb
lahf
sti
fnsave
stos
cltd
and
jb
add
mov
dec
incb
cmpb
add
jle
mov
fadd
xor
bnd
call
aaa
cs
mov
and
and
and
and
and
and
and
test
mov
dec
lcall
pop
or
fstps
call
call
movsb
jmp
sbb
cmp
xchg
push
js
jbe
stos
jo
mov
adc
cmc
lcall
ds
xchg
ret
imul
mov
aad
pop
bound
and
pusha
pop
lret
fsts
int
adc
jmp
push
add
cli
mov
negb
scas
jns
dec
lahf
pop
jmp
cmp
add
call
call
stc
mov
mov
pop
push
adc
out
mov
push
xchg
and
cwtl
mov
insl
cltd
pop
fmull
mov
mov
pusha
mov
jp
mov
call
call
inc
call
jmp
fbld
rcrl
inc
inc
jne
lods
sub
imul
pusha
fisttpl
or
adc
jb
inc
push
sub
mov
orb
popa
xlat
xlat
cmp
hlt
pop
pop
sbb
call
call
call
loop
cmp
cmp
fildl
push
loop
mov
pop
push
lods
shll
notl
into
ret
and
and
and
and
and
and
pop
and
and
mov
call
call
push
movsb
repnz
push
mov
cmp
mov
sub
nop
inc
add
out
or
inc
pop
das
jmp
mov
fisttps
call
call
call
fsubrs
jae
les
jae
jno
cmpsl
shll
inc
pop
push
subl
push
mov
add
outsl
mov
dec
push
icebp
fs
jmp
push
mov
shlb
or
call
call
sbbb
xlat
out
push
mov
loop
push
jle
dec
cmpsl
int
push
pushf
dec
aam
call
dec
shlb
xchg
xchg
mov
push
adc
pop
lods
fstps
fincstp
mov
jge
daa
pop
shl
or
icebp
mov
loop
mov
xchg
rcll
gs
mov
and
sbb
call
call
popa
mov
mov
cli
out
push
sbb
cs
sub
stos
jb
adc
insl
int3
xor
aam
mov
xor
es
ss
test
stos
jle
cmpsl
insl
ljmp
or
ljmp
aam
and
lods
ja
mov
jg
call
call
push
out
xchg
call
jno
sbb
fcomps
in
in
arpl
pop
mov
push
leave
or
and
xor
xor
das
xchg
outsl
push
lods
adc
mov
xchg
cltd
out
nop
out
sub
and
and
and
and
and
and
and
and
xor
outsl
rclb
xchg
jns
scas
mov
call
call
add
sahf
insl
leave
nop
jp
and
mov
jo
mov
mov
xlat
mov
or
push
dec
imul
jmp
out
pop
mov
call
call
stc
imul
neg
mov
fwait
into
pop
jmp
stc
sbb
push
dec
push
outsl
inc
js
xchg
mov
fadd
addr16
pop
ret
push
push
out
les
popf
sub
cmp
xchg
or
and
and
and
and
xchg
dec
arpl
pushf
pop
and
call
cmpsb
mov
xor
cmp
call
call
lods
scas
mov
xor
jecxz
out
rol
stc
addb
into
push
push
cmp
mov
cmp
lds
lods
jo
sbbb
jns
call
call
call
inc
jge
out
movhps
mov
and
and
and
and
jle
shlb
and
and
and
and
adc
sub
xchg
imul
jo
inc
or
xchg
adc
ja
and
je
mov
call
call
push
sbbl
shl
xchg
gs
dec
dec
and
movsb
and
mov
das
imul
call
call
add
out
inc
ret
dec
and
and
and
and
and
and
and
and
loopne
push
sbb
push
lret
in
arpl
xchg
and
and
and
and
and
sahf
and
fs
int
mov
mov
ljmp
or
push
cmp
loopne
ljmp
sti
iret
dec
je
xor
call
and
pop
cmc
adc
jbe
add
push
call
call
aas
mov
xchg
xor
sbb
xchg
jno
aaa
lahf
add
shlb
xchg
mov
mov
shlb
add
out
push
icebp
jo
psubsb
and
pusha
jge
push
mov
aam
fnstcw
jo
lds
mov
mov
jnp
call
call
call
lret
fwait
cmpsl
jecxz
ja
and
mov
daa
cltd
inc
push
mov
sbb
test
adc
and
and
and
and
and
and
dec
lcall
xor
push
xchg
pusha
lock
inc
or
popa
mov
fs
xor
fbld
xor
pusha
es
lds
jbe
cli
shrl
or
push
daa
testl
hlt
inc
or
pop
arpl
icebp
scas
int3
std
xor
fstps
test
call
call
call
call
insb
aas
push
das
mov
xchg
jle
fiadds
call
call
insb
insl
repnz
xchg
jecxz
add
jecxz
mov
add
jp
jne
jne
dec
xor
in
mov
out
gs
gs
gs
mov
push
dec
pusha
imul
imul
jns
sbb
dec
and
and
and
and
and
and
test
popa
xchg
mov
test
sub
call
call
call
call
call
or
mov
and
mov
pop
shll
lahf
sbb
out
in
push
push
iret
fucomip
call
call
lods
popf
jae
mov
aas
and
sti
mov
int3
aaa
xor
outsb
xchg
mov
mov
repnz
push
or
pop
call
mulb
insl
and
xchg
pop
mov
jbe
movsl
push
push
jg
xor
and
outsl
mov
andb
and
and
and
and
and
cmp
out
lret
mov
call
call
jecxz
sub
mov
xchg
pusha
ret
fld
ss
push
hlt
pop
das
aad
andb
add
pop
sbb
mov
je
dec
movups
xchg
jns
or
mov
lcall
mov
adc
out
dec
aaa
mov
mov
in
xor
xor
mov
mov
pusha
call
call
call
fs
mov
call
call
test
xchg
mov
jl
movsb
xor
lea
fimuls
jne
or
gs
daa
icebp
add
cmp
add
jmp
loopne
cld
fidivrl
call
adc
xchg
dec
es
in
imul
out
sub
js
call
call
call
call
sbb
in
mov
dec
add
xrelease
lds
in
fisubl
pop
lods
imul
jns
mov
call
call
inc
std
jp
leave
fnstsw
adc
loopne
xchg
mov
dec
movsb
xchg
pop
inc
in
push
repnz
mov
xchg
pop
imul
add
mov
xor
and
pop
loop
xchg
repz
fisttps
int
nop
loop
sbb
xor
call
call
ljmp
loopne
loop
push
std
negb
in
jmp
cltd
mov
das
pop
and
and
xchg
jne
push
inc
or
stos
sti
je
lock
loopne
flds
int3
mov
xchg
stos
inc
je
aad
pop
fiaddl
push
sub
jne
aas
inc
inc
or
hlt
xor
call
call
call
in
imull
push
adc
ja
add
repnz
fnstenv
testl
call
call
push
insb
and
rclb
lahf
cli
or
add
movsb
pusha
je
xchg
roll
test
add
ret
sbb
cmpsl
cmp
std
and
and
and
and
aaa
call
call
jecxz
call
pop
lahf
out
int3
mov
dec
add
sahf
cltd
ja
sti
jno
pop
and
and
and
and
jae
jp
cs
lcall
dec
mov
mov
push
xchg
jne
in
add
aaa
push
sub
call
call
call
sbb
les
or
pop
pop
adc
shlb
das
sbb
cmp
push
sbb
pop
imul
jno
adc
fistps
jle
push
in
in
pop
scas
inc
arpl
xlat
scas
cmp
cld
jp
adc
call
call
lods
leave
dec
repnz
pop
mov
cmp
add
pusha
push
ret
mov
cltd
mov
pop
out
mov
call
call
call
sti
stos
fadds
mov
ljmp
xchg
sbb
insl
inc
add
jle
and
dec
hlt
or
cs
fs
or
rclb
lcall
adc
aam
leave
cmpsb
insb
dec
sub
data16
jge
stos
fsubs
shrl
pop
mov
jge
lds
call
call
pop
in
mov
mov
decl
call
call
call
call
add
pop
int3
popa
fstpl
into
jo
xor
call
call
cwtl
js
add
outsl
mov
fstpt
popa
or
in
rcr
int3
call
call
call
repz
push
fstpl
and
and
and
and
and
sub
adc
jo
add
outsb
gs
fidivrs
mov
jle
shlb
mov
push
stc
jnp
test
jmp
xchg
and
cs
call
call
aad
in
sti
lret
and
and
and
and
and
or
lcall
in
push
push
sbb
pusha
xor
orl
pop
outsb
in
adc
popf
pop
xchg
stc
cwtl
dec
pop
ss
call
call
in
jae
mov
add
sub
xchg
and
and
and
and
and
and
and
and
in
les
xor
ss
call
xchg
xlat
lods
mov
or
call
call
call
mov
mov
cwtl
jg
fucomp
or
cmp
mov
and
mov
fadds
int3
mov
adcb
xor
int3
call
call
call
push
push
loope
cld
cmp
dec
out
dec
sbb
pop
rcr
js
icebp
lods
and
je
xchg
mov
jmp
xchg
inc
popa
call
call
inc
nop
fdivs
gs
mov
mov
add
nop
push
mov
call
call
sbb
add
sub
in
mov
in
fldcw
pop
fcmovne
xchg
cmp
mov
mov
mov
xorb
jae
fadd
pop
mov
gs
sbb
les
es
mov
cmpsb
js
scas
ficoms
dec
hlt
out
test
inc
call
call
sub
dec
adcl
hlt
call
call
call
shlb
or
outsb
pop
call
call
call
int3
int3
adc
dec
adc
arpl
push
or
fwait
mov
repz
and
and
and
and
and
lret
mov
call
call
push
or
daa
xchg
xchg
mov
scas
js
mov
xor
enter
lods
out
fisubs
inc
bnd
call
faddl
and
les
and
insl
lret
loop
xor
xor
adc
dec
rcr
loop
sub
cmp
std
gs
pusha
scas
pop
jle
sub
xchg
sbb
call
call
xchg
mov
cmp
call
call
pop
loope
out
sub
and
fsubr
push
jl
cmc
aas
add
sbb
xchg
out
fisttpl
in
xchg
and
imul
cltd
mov
fldenv
jno
cmpb
call
call
inc
testl
mov
push
dec
outsl
stos
dec
shrl
jecxz
ffree
cmpsl
cs
and
mov
inc
cmp
adc
adc
aas
outsl
push
mov
call
call
call
add
jl
and
inc
adc
jg
push
iret
ljmp
das
cmc
sbb
fdivr
mov
imul
loopne
fcom
mov
mov
push
cmc
or
mov
scas
dec
inc
push
scas
jns
lcall
call
call
imul
pop
insl
xor
sub
mov
fsubs
lods
inc
rcrl
cmpsl
xor
and
jle
mov
dec
xor
cmp
jmp
add
js
cld
rorl
scas
add
add
pop
imul
pop
adc
sbb
or
call
push
and
sub
xchg
add
jae
mov
call
call
lods
pop
nop
pop
xor
xor
arpl
adc
push
fbstp
arpl
add
call
call
lahf
fdivrl
and
and
and
and
fiadds
call
call
jge
pop
sbb
iret
fwait
aam
mov
sbb
mulb
and
xor
test
xchg
mov
adc
rorl
or
mov
lret
rorl
add
ds
xchg
xchg
sbb
jae
repz
xchg
ficoml
call
call
sbb
aaa
mov
mov
enter
fdivl
mov
cmp
call
call
or
call
call
adc
enter
push
in
xchg
push
and
call
call
call
cmp
inc
push
jecxz
aad
xor
scas
fmulp
ret
cltd
clc
xchg
xor
and
lods
or
cld
xor
push
push
add
add
out
mov
add
pop
or
and
and
and
and
and
and
call
call
call
call
outsb
mov
sbb
subl
lcall
inc
pusha
repz
aaa
xor
sbb
sbb
cli
lds
pop
popa
push
test
call
call
call
jecxz
imul
stc
fimull
mov
mov
jmp
lret
sub
fsubl
pop
jb
mov
xlat
xor
and
aaa
aas
mov
jb
sub
mov
mov
call
inc
or
cmp
xor
jp
jle
add
dec
into
icebp
inc
insb
pop
lcall
push
aad
loop
adc
push
xchg
bound
call
call
fldenv
jo
fdivr
sbb
out
jne
aad
loope
mov
cmpsl
ja
mov
mov
xchg
popf
les
cmp
mov
cmp
jmp
pop
in
or
mov
out
add
call
call
jmp
repnz
push
push
mov
add
cmc
push
int
aas
jle
mov
bound
jp
and
outsb
divb
inc
push
dec
dec
icebp
call
call
aaa
popf
pop
ret
sub
je
push
mov
xchg
sub
xor
outsl
out
lahf
hlt
cmp
aaa
fneni(8087
lods
mov
cltd
add
or
add
sahf
inc
mov
call
call
mov
push
dec
mov
aaa
pop
mov
mov
sub
out
pop
andl
pop
cld
rorb
rorb
test
call
call
int
and
ret
adc
ss
enter
and
and
and
and
and
pusha
lret
push
add
mov
lcall
popf
outsb
add
call
call
cs
in
push
xor
test
repz
out
add
xchg
scas
in
mov
addr16
loopne
ljmp
lea
jge
cmp
mov
lret
xor
inc
pushf
sub
mov
mov
sbb
loope
xchg
mov
call
call
icebp
or
scas
call
call
or
and
and
and
out
push
das
rcll
mov
in
dec
sarl
sahf
into
fimuls
scas
enter
repnz
subl
pop
imul
adc
call
into
dec
jge
cld
cmpsl
lods
pop
in
xchg
clc
call
mov
sub
sbb
mov
adc
sbb
mov
cmp
lret
cmp
and
fsts
dec
cmpsb
inc
scas
scas
pop
mov
testl
call
and
mov
call
call
call
lea
int3
insb
mov
xchg
mov
ret
call
call
call
inc
int3
subb
stos
test
and
and
and
and
and
cmp
cmpsb
das
push
cli
add
mov
aaa
pop
sub
fdivrs
adc
xor
inc
push
call
call
or
pop
pop
mov
cmp
pop
adc
jmp
call
sub
icebp
add
mov
stc
in
sub
jns
mov
pop
outsl
and
add
adc
mov
pop
cmp
call
call
lahf
lcall
adc
sub
xchg
cmp
mov
push
dec
or
or
pop
cmp
cld
xor
daa
call
call
and
and
enter
lea
call
call
call
call
pop
bound
fldl
jl
ja
cbtw
inc
pop
push
sti
arpl
ljmp
or
push
push
mov
and
dec
iret
pop
mov
repz
inc
scas
shlb
ret
or
bnd
pop
sbb
call
call
call
inc
imul
xchg
xchg
dec
ljmp
call
and
dec
mov
leave
push
xor
mov
push
sub
sbb
lret
mov
jno
fcoml
sub
loop
jle
xchg
inc
into
imul
mov
cmp
in
fdivl
hlt
fmul
cmp
in
into
loopne
dec
xchg
arpl
lods
cld
bound
pop
push
and
bound
call
call
jae
fmuls
stc
jo
test
fwait
aaa
rcll
and
call
call
call
imul
pop
shl
push
jecxz
enter
mov
call
call
call
incb
and
jne
les
or
call
dec
aam
shrb
stos
push
clc
push
jne
and
mov
ds
call
call
iret
lahf
lods
xor
je
in
mov
mov
mov
push
pusha
cltd
insb
outsl
jmp
xchg
xor
call
call
call
jb
push
dec
idivb
and
and
and
and
and
ljmp
call
call
insb
push
add
sbb
call
call
call
aad
mov
sub
pop
dec
push
addr16
xor
fcomps
adc
xor
subl
cmp
in
mov
inc
mov
mov
jns
mov
ss
cs
aad
test
sub
dec
add
ror
jne
sbb
inc
incl
dec
lahf
nop
cltd
sbbl
call
sbb
push
lock
call
fsts
lock
imul
inc
addr16
fs
movsb
jg
dec
mov
js
in
dec
mov
rcl
jge
test
mov
and
and
and
and
and
and
aad
sub
dec
jmp
pusha
push
mov
adcl
mov
mov
sahf
add
pop
add
call
call
call
insl
dec
jnp
jae
cmc
sub
arpl
add
pop
call
call
call
add
lds
dec
or
jge
in
fcompl
push
xchg
cmp
mov
xchg
adc
dec
jle
ljmp
push
sbb
pop
pop
bound
cmpsl
xor
cmp
or
add
and
hlt
loopne
mov
loopne
sbb
call
call
aad
mov
jno
cmpsl
loope
test
cmp
cmpsb
hlt
xlat
and
test
cltd
call
call
int3
ds
es
clc
lret
daa
jmp
test
cmpsb
push
sub
adc
cmp
lock
xchg
insl
negl
iret
mov
cwtl
cltd
rcrb
bound
push
popf
sbb
dec
pop
aaa
dec
adc
rcl
ds
in
pop
out
mov
aaa
out
call
call
or
test
shlb
imul
iret
cmp
fs
and
jle
or
pop
and
lcall
enter
mov
adc
cmp
lods
mov
mov
pop
xor
jb
xor
bound
dec
cmpsl
cmpl
call
call
cmp
xor
std
xchg
push
sbb
ret
mov
xchg
or
and
push
or
xor
cmp
in
addr16
test
push
scas
lcall
je
aad
and
and
and
sarb
insl
cmp
insl
mov
lcall
call
call
insl
jb
add
sbb
xor
mov
jecxz
push
aaa
or
mov
jae
mov
adc
xchg
push
daa
pop
fmull
call
call
test
inc
dec
clts
inc
jmp
sub
fs
pop
pop
push
pop
lret
pop
lcall
call
cmp
call
call
call
lea
fstps
call
call
dec
aas
cmp
fdivs
mov
data16
iret
dec
xor
add
insl
add
call
call
or
xor
call
call
mov
loop
add
xor
addr16
and
and
and
and
inc
inc
pop
daa
pop
in
mov
lret
mov
ja
inc
repnz
mov
sbb
cmp
dec
imul
and
iret
inc
icebp
cltd
rcrb
call
call
call
rcrb
aam
inc
jmp
popf
add
loopne
cmpl
dec
aaa
dec
icebp
bound
sbb
adc
pop
or
add
call
call
mov
pop
insb
popf
xchg
lods
in
cmp
pop
mov
inc
jns
add
mov
sub
dec
sbb
mov
call
call
call
adc
cmpsb
jne
fstpt
jb
mov
and
lahf
cmp
add
and
and
and
mov
xchg
xchg
fisubrs
pop
fs
fsubs
ret
lahf
sub
out
adc
call
call
call
mov
jnp
cmp
inc
add
and
sbb
repz
inc
rep
cmp
mov
lock
imul
out
jmp
pusha
push
add
adc
xchg
add
sbbl
call
call
popf
mov
popa
xor
je
test
cmpsb
jge
add
pusha
lea
mov
call
call
decb
mov
jns
addr16
pushf
mov
mov
jp
pop
sub
cmpsb
lea
adc
mul
mov
insb
mov
push
stos
push
sbb
dec
mov
test
xlat
push
sbb
and
fildll
xor
dec
sbbb
call
call
ja
inc
cltd
imul
aas
sahf
das
pop
add
sbb
xlat
adc
mov
push
das
inc
pop
pop
out
call
call
pushf
out
cwtl
mov
cmp
push
out
mov
nop
mov
sahf
les
xor
cs
and
and
and
and
and
and
and
iret
xchg
lret
push
popa
cmp
lods
je
mov
xor
fst
dec
iret
jecxz
leave
fidivrs
call
call
cld
sub
cmp
and
and
and
and
and
and
insb
cs
xor
test
int
cld
dec
outsb
sarl
bnd
call
mov
clc
mov
adc
sarb
add
pop
and
pusha
jb
dec
mov
push
pop
in
xor
call
call
cmp
push
mov
repnz
jo
call
daa
lret
dec
dec
popa
cwtl
ret
jo
push
jmp
mov
out
call
call
call
call
in
cwtl
out
jae
pop
cmp
xchg
mov
push
jmp
call
call
out
jmp
std
mov
in
cmp
cli
cmpsl
scas
push
call
call
pusha
adc
mov
cmp
out
nop
sahf
aad
pop
jnp
mov
sbbl
das
lcall
mov
jmp
imul
sub
add
ret
jg
mov
xor
insb
mulb
push
addr16
inc
je
icebp
xor
call
call
call
nop
push
push
mov
adc
pushf
jecxz
add
call
call
call
fnstsw
stc
push
xor
inc
lea
aam
mov
pop
sub
pop
mov
repz
mov
call
call
call
rsm
fstl
push
pop
cmp
enter
pop
mov
adc
data16
cmp
pop
jo
shrl
movsl
mov
popa
daa
sub
sbb
movsb
neg
dec
dec
movsb
xchg
adc
orl
pop
pop
call
call
aam
ss
mov
call
shr
sahf
inc
inc
mov
ss
addb
cmp
into
inc
push
or
in
gs
imul
call
call
pop
pop
loopne
inc
sahf
adc
in
and
mov
fimuls
cmc
adc
call
call
call
mov
inc
or
or
repnz
and
and
and
and
and
inc
mov
js
adc
mov
stc
subb
mov
lds
fimull
pop
cld
ss
call
call
call
int
xchg
pop
addr16
add
pop
lcall
popa
ss
out
sub
enter
dec
and
sub
jecxz
test
and
and
and
and
adc
aas
mov
inc
and
movsb
mov
sbb
push
jnp
jno
pop
or
sti
xor
idivb
leave
xchg
call
call
ret
xor
xchg
cmp
ret
and
sbb
mov
ret
sbb
mov
stos
stos
push
add
pop
sahf
stc
and
je
loope
cmc
adc
pop
int
adcb
or
ret
ja
or
imul
and
and
and
and
sbb
mov
pop
lahf
fstl
loopne
repnz
shll
jg
add
pop
and
lea
movb
sub
adc
pop
es
xchg
in
add
and
inc
pop
clc
sbb
pop
popa
xchg
pop
add
dec
jnp
and
and
and
and
and
lahf
adc
dec
jbe
push
dec
test
sub
lret
inc
push
jle
int3
inc
sub
call
repz
mov
movsl
mov
cmpsb
adc
inc
xchg
imul
out
xchg
popf
popf
pop
das
xchg
and
and
call
call
int3
lds
jp
cmpsl
jo
mov
js
jno
dec
fsubrs
adc
sbb
push
mov
mov
push
and
in
rolb
push
add
adc
pop
call
call
imul
adc
adc
or
mov
out
adcl
movsl
add
imul
cmpsl
push
fwait
xor
jne
daa
sub
and
in
or
aas
aas
imul
in
sbb
cmp
cmpsl
inc
cmpsl
adc
adc
inc
cli
in
sbb
call
call
and
push
xor
jecxz
add
cmp
shrb
leave
push
ss
call
call
jmp
out
lret
cwtl
adc
pop
out
leave
or
stos
mov
daa
mov
js
rclb
sub
pop
dec
adc
call
call
call
jge
xor
cmp
mov
incl
xchg
repz
push
test
add
pop
mov
call
insl
or
add
mov
int
inc
dec
les
out
and
fcmovb
jae
and
and
and
and
and
outsb
or
ffreep
in
push
or
push
xchg
fcomps
push
call
call
es
repnz
and
and
fs
mov
call
clc
mov
push
aaa
mov
mov
and
and
and
sarb
cmp
sbbl
push
cmp
rcl
jns
sti
ja
inc
lea
dec
loopne
faddl
aam
dec
mov
sarl
ret
movsb
lods
call
call
call
pop
rclb
addr16
cmp
in
loopne
ljmp
dec
jmp
xchg
mov
mov
sbb
inc
out
add
ds
mov
call
call
shrb
ffreep
sar
pop
add
iret
push
stc
call
call
call
cmpsb
dec
call
call
cmpl
mov
ljmp
or
add
push
mov
int
pop
call
xchg
sti
gs
adc
jmp
and
and
and
and
and
push
pop
cld
xlat
repz
cmp
mov
out
pop
mov
cmpsl
xor
stos
add
sbb
testb
fucomi
call
call
call
fadds
inc
stos
mov
xchg
xchg
ret
int3
xchg
fdivrs
lods
inc
fildl
enter
call
call
or
arpl
mov
push
push
pop
mov
out
mov
movsb
sbb
inc
dec
call
call
clc
stos
out
inc
push
test
lcall
mov
mov
notl
xor
mov
aad
xchg
dec
sub
or
lahf
ret
lea
inc
jecxz
into
xchg
cmpsl
sub
pop
loop
cld
fdiv
cmp
jge
cltd
repnz
fs
call
call
call
mov
push
call
call
call
xchg
scas
or
xor
mov
sub
lods
out
sbb
or
fcoml
jae
ret
mov
test
fucom
scas
push
je
cmp
and
and
and
and
jns
inc
and
std
or
cmp
and
and
and
and
and
and
popa
call
call
call
stos
test
enter
ds
test
xchg
xchg
in
popl
xor
inc
loopne
pop
adc
fwait
inc
adc
mov
cmp
sbb
or
aas
mov
data16
adc
js
or
in
or
call
add
mov
push
das
pushf
mov
gs
shr
pop
pop
jge
jle
sub
fnsave
aaa
push
and
xchg
push
inc
std
int
rcr
imul
cmp
sub
fwait
dec
or
dec
lock
call
call
push
and
sbb
lahf
popf
lcall
outsb
push
and
in
test
cmp
pop
inc
jl
inc
and
dec
or
cmp
and
pop
std
lret
mov
test
pop
adc
xchg
insl
mov
imul
call
call
call
fucomp
test
cmp
out
sub
cmc
mov
dec
pusha
out
push
and
and
and
and
test
sub
and
dec
sbb
aam
cwtl
adc
pushf
xchg
stos
dec
fldcw
pop
or
in
mov
aam
fisttpl
mov
pop
mov
leave
in
call
call
lods
out
ret
jo
lock
es
mov
adc
xchg
sbb
loope
mov
mov
lds
adc
xor
jbe
jno
adc
dec
gs
or
mov
call
call
mov
push
iret
out
call
call
push
fs
add
fcom
repz
cwtl
stos
mov
xor
mov
loopne
sub
inc
push
int3
mov
testb
adc
aaa
xor
imul
dec
inc
stc
jg
push
jne
enter
scas
gs
cmp
int
pushf
add
idiv
cs
mov
jns
inc
pop
insl
xorl
aas
sub
stos
push
sti
push
sbb
adc
sub
gs
sub
call
call
sub
mov
add
xor
call
mov
cmpsl
dec
lret
je
aas
jo
xchg
call
call
mov
push
sarb
call
loope
lret
cmp
and
mov
xchg
sub
inc
dec
and
dec
cmp
mov
jno
and
xor
add
push
jmp
push
fildl
idiv
sbb
call
call
addb
jmp
outsb
call
lret
mov
out
scas
lret
icebp
out
sbb
call
call
call
mov
xor
add
sbb
repz
divl
push
call
call
call
and
and
and
and
and
call
xor
andl
pop
jmp
push
mov
jg
mov
sub
andb
dec
call
call
test
std
adc
call
call
jecxz
mov
mov
xchg
jb
jmp
mov
inc
scas
sbb
xor
mov
in
sbb
ss
inc
loop
adc
push
movsl
pop
dec
or
mov
sbb
ljmp
xchg
pusha
les
call
call
in
mov
arpl
fstps
fimuls
cmpsb
int3
gs
leave
leave
xorl
and
jg
dec
pop
xchg
inc
cli
mov
xor
mov
adc
cs
call
imul
cmp
push
adc
in
mov
mov
xchg
inc
aam
mov
testl
pop
mov
sub
call
call
out
bound
pop
cmp
cmc
push
lods
inc
jne
mov
jp
outsl
inc
cmpsl
shrb
cwtl
out
imul
es
mov
scas
sub
or
jae
jnp
xchg
imull
dec
cmp
xchg
mov
fistps
pop
and
and
and
and
and
out
jge
into
cwtl
clc
call
call
mov
mov
push
in
es
out
fnstcw
xlat
jae
or
pop
rorb
in
cmc
mov
lret
mov
imul
stc
imul
mov
sub
leave
jmp
movsb
inc
call
sub
add
sub
imul
lcall
mov
call
call
call
and
or
sbb
and
dec
cmpsb
add
out
cmp
xchg
sbb
dec
repnz
outsl
pop
push
jmp
jge
adc
xchg
push
adc
idivl
dec
xchg
lret
push
cmpsl
call
call
xor
xchg
jl
inc
mov
enter
xchg
cld
add
daa
pop
mov
or
movsb
lea
fnstsw
stc
je
xchg
add
cmp
cltd
mov
js
call
call
push
dec
pop
or
pop
cmpsl
sete
ret
stos
jle
inc
push
lret
xor
in
movsb
sbb
aas
jno
sarb
mov
lock
in
lret
out
xor
mov
and
and
and
add
hlt
or
call
call
out
bound
xor
mov
pushf
cmovno
fsubl
std
dec
call
iret
mov
adc
pop
pop
ret
leave
and
sub
push
add
xor
jge
das
ret
or
pop
mov
and
cld
jae
test
shlb
mov
call
call
call
sbb
fists
sub
push
or
dec
jecxz
xchg
mov
adc
popa
mov
call
call
call
push
mov
jmp
fimull
dec
xchg
inc
pushf
mov
fildll
fiadds
pop
adc
in
ja
xor
mov
push
inc
sub
xchg
mov
add
add
mov
add
ficomps
leave
cs
mov
cmp
cmp
std
shll
and
and
and
and
and
and
mov
xor
cmp
call
aas
xchg
ja
dec
aam
insl
pop
jle
lock
in
xchg
or
adc
jl
call
call
call
call
mov
xchg
mov
jno
jmp
and
and
and
and
ja
in
or
dec
mov
mov
mov
or
fisubl
andl
adc
call
call
inc
out
pop
pushf
ljmp
sbb
jb
cmp
sahf
xchg
mov
mov
inc
jbe
mov
inc
test
fbld
das
scas
and
pop
or
call
xchg
xor
dec
test
popl
call
call
sub
pop
popa
fimull
xchg
and
xchg
daa
jle
add
fisttpl
jg
mov
push
ret
mov
insl
in
pushl
dec
outsl
or
push
ds
popf
call
call
call
inc
push
adc
clc
mov
les
aam
sbb
push
xchg
jne
pop
and
push
mov
call
call
jno
jnp
or
clc
add
aaa
xchg
adc
adc
sub
pop
js
pop
xchg
lret
adc
es
call
call
call
subl
hlt
aas
mov
fdivrs
inc
dec
stos
mov
call
jb
or
in
aas
add
mov
pop
repz
push
imul
sarl
xor
je
add
jle
dec
or
pop
pop
shl
push
cld
jge
ret
and
and
and
and
jns
call
call
jl
sub
pop
mov
jl
xchg
xor
cmp
lods
ret
inc
ljmp
mov
call
call
cmpl
data16
clc
subb
jmp
scas
lods
push
add
mov
repz
cld
mov
mov
outsb
jne
call
call
shrb
outsb
add
add
inc
sub
dec
mov
nop
fisubrs
xchg
mov
faddp
test
push
inc
outsl
mov
pop
test
mov
int3
push
sub
int
std
sti
cld
push
pop
mov
fs
pushf
and
movsb
cmp
mov
fcompl
mov
call
fmul
mov
in
push
loopne
jb
shlb
lds
xor
in
ret
cmp
outsb
mov
data16
cld
or
shr
mov
hlt
xchg
int3
loope
adc
pop
pop
cmp
aas
push
enter
call
or
mov
adc
jmp
inc
sub
daa
call
call
call
not
or
je
pop
mov
orb
das
in
inc
insl
and
and
and
and
and
jmp
call
call
push
push
lock
jnp
es
add
adc
cmp
mov
mov
cmpsl
adc
call
pop
in
aad
cmpsl
leave
lock
or
mov
add
pop
push
xchg
call
call
call
jb
aas
adc
adc
mov
nop
xor
dec
out
inc
addb
pop
fnstsw
add
scas
scas
repnz
movsl
add
bound
pushf
dec
and
jle
cmp
call
call
or
or
scas
mov
xchg
loope
mov
dec
jno
sbb
call
call
fsts
notb
shr
test
mov
sti
push
call
call
call
cmp
sub
sub
iret
mov
xor
cmpsl
adc
loope
rep
push
cmp
adc
dec
icebp
dec
cltd
pop
hlt
mov
mov
call
call
xchg
mov
sarl
sahf
mov
jns
arpl
xor
and
and
and
pop
outsb
in
call
call
call
pop
push
in
lcall
jle
add
imul
das
fmull
call
call
adc
and
notl
mov
ret
inc
push
add
mov
cli
lret
arpl
out
adc
flds
fs
mov
call
call
call
into
dec
arpl
sub
cmp
and
sbb
pop
jno
insl
inc
push
out
pop
add
ds
push
les
enter
lret
sti
mov
adc
sbb
insl
fsubrl
push
xchg
rolb
mulb
call
call
push
xchg
pextrw
mov
adc
repnz
mov
shlb
mov
or
iret
jns
pop
seta
adc
mov
fmuls
out
js
enter
sbb
rorl
adc
jnp
pop
fisubrs
sub
js
jne
jne
call
call
call
cmp
dec
in
call
call
shrb
out
add
shr
mov
mov
insb
pop
insb
cld
adc
pushf
sub
lds
mov
cmc
xor
cmp
or
pop
pop
jmp
les
or
call
mov
sti
movsl
pop
xchg
push
inc
mov
cmp
testb
rclb
dec
inc
add
mov
lods
sub
push
jp
sahf
lods
jb
call
call
call
int
inc
loopne
lds
fisttpll
and
xor
inc
pop
loope
sbb
cld
sub
leave
mov
mov
and
and
and
and
and
and
into
add
mov
xchg
add
xchg
sub
mov
es
sub
push
push
adc
cmpsl
les
jl
jle
mov
call
call
aaa
mov
push
imul
ficoml
mov
xchg
cmpsb
stos
mov
sbb
sbb
xchg
cmp
pop
lock
addr16
mov
pop
fadds
pop
dec
push
rcrb
mov
lods
sbb
push
scas
addb
das
mov
lds
pop
xor
call
call
stos
sub
xor
out
pop
mov
shll
or
or
pop
out
lock
pop
push
pop
or
cld
outsl
mov
ss
pusha
fnstenv
jl
ret
mov
lea
outsb
out
mov
repnz
add
cmpsl
jnp
call
call
int
mov
jne
or
scas
inc
pushf
insl
mov
adc
or
andb
sahf
xchg
popa
fimull
sub
xchg
pop
into
sub
sub
mov
mov
imull
push
mov
in
pop
inc
jne
inc
cmc
mov
stos
cmpsl
jns
call
call
call
test
pop
movb
jns
sarb
adc
out
ror
insl
aam
movsl
sub
mov
sbb
setge
add
imul
std
and
enter
mov
dec
cmp
mov
cmp
cmp
call
call
clc
into
in
std
jbe
xor
dec
and
and
and
and
and
jle
rclb
loop
xchg
ja
adcb
inc
dec
and
insb
enter
ret
stos
popa
add
sub
ret
and
mov
shrl
std
clc
sub
inc
in
shll
ja
and
or
idivl
mov
ljmp
call
call
inc
loop
lea
loop
test
pop
mov
mov
sbb
mov
or
push
inc
lret
xchg
or
fsub
shlb
mov
sbb
loopne
ljmp
call
call
add
cmp
call
call
and
dec
xor
mov
jge
test
sub
mov
movsb
pushl
fcmovne
cmpsb
inc
inc
mov
cwtl
dec
gs
out
call
call
mov
orl
call
call
call
sbb
pop
mov
mov
stos
adc
jno
inc
sub
sub
inc
cmpsb
push
jnp
stos
adcb
call
call
call
call
js
xor
iret
cmpsb
or
mov
mov
push
inc
testb
dec
pop
aam
xor
or
push
push
test
push
jnp
dec
fidivs
scas
xor
adc
cmp
push
lock
call
aaa
push
fstpl
test
shlb
dec
add
push
dec
lret
in
gs
jmp
jns
push
or
pop
aas
and
aaa
mov
xor
cli
fisubs
call
call
in
lret
cmp
mov
lret
mov
or
xor
sahf
orl
xchg
pop
dec
fs
lcall
xor
insl
lock
insl
pop
xor
xor
mov
mov
lods
movsl
call
call
call
cmc
or
fsubl
ret
sub
pop
dec
mov
call
call
cmp
loop
sti
nop
fldcw
into
pushf
cli
jno
insl
mov
add
or
inc
sbb
xchg
mov
mov
pop
fdivrl
inc
pop
mov
sbb
or
test
cmc
push
mov
loopne
fs
mov
call
call
push
lret
dec
mov
fldenv
in
repnz
dec
aaa
xor
pop
jp
in
mov
mov
and
and
and
mov
mov
out
call
call
out
dec
sahf
pop
int3
sti
pop
mov
sbb
inc
inc
std
movsl
test
clc
call
jmp
ljmp
fmuls
sbb
sbb
push
mov
lahf
sub
jns
xor
sub
call
call
call
or
ret
and
pop
sub
inc
outsb
les
rclb
loopne
and
adc
in
or
scas
stc
fsts
mov
adc
aas
and
add
cmp
outsl
jno
cwtl
mov
rcr
mov
hlt
xchg
call
call
jecxz
call
call
je
lods
mov
inc
icebp
sbb
push
cld
call
mov
pop
sub
fsubrp
call
call
call
in
rcll
adc
test
add
jle
sub
jne
lods
dec
mov
dec
dec
push
xor
dec
adc
xor
xor
iret
jno
push
push
pusha
or
mov
jnp
pop
insb
jno
insb
mov
in
fidivl
negb
cmp
sbb
call
call
dec
sub
mov
call
nop
or
mov
xchg
push
jl
jle
leave
clc
inc
cli
pop
dec
rclb
push
mov
and
negl
sti
cld
fisttpll
cwtl
jae
or
push
jns
lret
lock
ror
dec
call
call
stos
je
sbb
das
or
mov
cmpl
pop
ds
adc
loop
stos
loopne
aad
call
call
lahf
and
and
and
and
and
and
jo
jo
in
xor
pusha
mov
sbb
mov
movsb
pop
test
adc
dec
xor
sub
jb
sub
call
call
adc
aad
add
sub
movsl
stos
mov
call
call
call
ret
cmpsb
nop
add
mov
and
and
and
and
and
pop
popf
das
push
in
sahf
jbe
push
call
cmc
or
popa
call
jmp
inc
incb
sub
pushf
dec
lea
out
nop
lahf
shrl
dec
add
cwtl
sub
mov
movq
fdivl
call
lret
orb
pushf
sub
and
lock
pop
or
xor
repz
add
icebp
mov
scas
sbb
lret
out
sub
or
fstp
push
repz
sarb
pop
add
nop
cli
lahf
loopne
out
call
call
call
xor
and
arpl
jp
add
cld
pop
mov
int
call
call
sbb
cmc
shrl
scas
cmp
adc
xchg
sub
pop
xchg
xchg
rclb
and
mov
lret
inc
data16
test
cmp
ficoms
jle
call
call
sbb
dec
adc
mov
cmp
cmp
call
call
add
xlat
in
in
lea
dec
jo
sub
xor
hlt
int
fidivs
mov
push
fs
pop
push
pop
shlb
jmp
mov
pop
lcall
call
adc
out
or
lcall
dec
testl
fs
push
loop
adc
mov
int3
or
jb
negb
bound
jecxz
xchg
add
vmovlpd
call
call
xchg
mov
pop
xchg
add
mov
in
jbe
ficoms
cmpsl
lcall
xchg
scas
jl
mov
gs
fcmovb
push
dec
in
or
lret
cmp
sub
mov
clc
and
insb
mov
mov
ljmp
and
and
and
and
and
and
pop
sbb
call
call
call
call
call
mov
call
call
or
ss
mulb
mov
jg
push
cld
fnstsw
cld
ljmp
stc
es
aad
test
mov
sbb
sub
insb
inc
dec
push
daa
xor
push
call
call
call
mov
in
mov
ret
fsubr
scas
xchg
ficomps
aas
or
call
call
sbb
pushf
enter
das
and
mov
or
mov
fistps
insl
xchg
adc
call
call
call
and
cmp
sub
jle
adc
mov
pop
mov
bound
hlt
fwait
dec
out
sbb
jp
outsl
cmc
test
pushf
cmpsb
and
call
call
sbb
lods
rorl
jl
das
cs
in
jbe
jl
xor
ja
rcl
aas
sti
or
lods
pop
cmpsb
push
ret
or
hlt
je
sbb
cli
call
call
mov
aaa
jmp
push
jbe
mov
call
call
ret
cmp
repz
mov
and
sti
xchg
outsb
lds
sbb
sbb
jb
cmp
popa
loopne
and
and
and
and
test
jbe
and
out
std
mov
icebp
das
xor
mov
out
cmpsb
in
fnstsw
inc
fldl
movsl
outsb
mov
and
and
and
and
dec
jne
lret
popl
lret
and
sub
je
or
dec
ds
call
call
int3
rcrb
jbe,pn
sbb
and
loope
leave
and
dec
es
int3
shlb
ljmp
call
call
mov
ret
rcll
jl
inc
scas
add
jo
jno
mov
sub
lods
xor
call
call
call
add
cmp
inc
add
jb
js
je
jb
arpl
jae
add
arpl
gs
insb
add
outsb
je
insl
and
jb
jb
add
or
dec
dec
push
push
and
jb
jb
or
add
push
dec
dec
inc
and
jb
jb
or
add
add
inc
dec
dec
and
jb
jb
or
add
add
add
xor
cmp
push
jo
insb
imul
and
outsb
outsb
outsl
je
jb
outsb
and
imul
and
je
jbe
and
jb
imul
je
and
arpl
jae
data16
cs
inc
push
and
outsb
je
insl
or
gs
jae
and
outsb
je
arpl
push
jo
imul
daa
jae
jae
jo
outsl
jb
and
insl
and
jb
insl
outsl
jb
and
outsw
jb
popa
je
outsl
outsb
cs
push
xor
cmp
outsb
popa
bound
je
and
imul
and
popa
jo
or
add
add
xor
aaa
or
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
insb
outsl
ja
outsl
and
imul
je
outsl
outsb
or
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
jae
imul
imul
imul
add
push
xor
xor
jo
jb
and
jb
jne
insb
and
outsb
arpl
outsb
and
insb
insb
or
push
xor
xor
or
and
outsl
jne
push
arpl
outsw
jb
pop
outsl
outsb
gs
je
popa
je
js
je
je
bound
or
add
add
xor
cmp
outsb
popa
bound
je
and
outsb
and
outsb
jae
insb
and
imul
add
push
xor
cmp
outsb
gs
arpl
and
popa
jo
gs
outsl
jb
or
add
add
xor
aaa
or
outsb
gs
arpl
and
insb
je
je
jb
popa
and
imul
jb
outsl
jb
or
add
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
je
jb
popa
and
popa
or
push
push
jo
insb
imul
and
jae
jb
jno
gs
gs
and
outsb
je
insl
and
je
jb
imul
je
imul
outsb
jne
jne
insb
and
jns
or
gs
jae
and
outsb
je
arpl
push
jo
imul
daa
jae
jae
jo
outsl
jb
and
insl
and
jb
insl
outsl
jb
and
outsw
jb
popa
je
outsl
outsb
cs
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
outsb
jbe
jb
outsb
insl
outsb
je
or
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
popa
jb
jne
outsb
je
or
push
xor
xor
insb
outsl
popa
je
outsb
and
imul
and
fs
add
arpl
jae
data16
push
imul
sub
and
outsb
je
insl
and
jb
jb
add
add
or
add
push
jne
je
insl
and
jb
jb
or
push
jb
addr16
insl
cmp
add
add
cs
jb
addr16
insl
and
insl
and
imul
outsb
add
add
add
lcall
inc
add
inc
add
add
add
jmp
mov
inc
gs
jb
arpl
jae
imul
popa
je
outsl
outsb
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
inc
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outsl
js
add
gs
xor
fs
insb
add
add
add
lcall
inc
add
add
outsl
addr16
insl
cmp
add
add
bound
data16
outsl
jbe
jb
jne
and
jae
bound
outsb
and
arpl
and
imul
and
jb
jne
je
and
and
outsl
addr16
insl
daa
jae
imul
insb
and
popa
je
and
push
push
outsl
addr16
insl
and
outsb
outsb
outsl
je
jae
data16
jns
arpl
je
outsb
jne
and
arpl
imul
and
jae
or
ja
bound
je
jb
imul
or
inc
jne
data16
outsl
jbe
jb
jne
and
arpl
and
add
add
add
add
jae
arpl
imul
jb
outsl
data16
imul
outsb
and
jne
and
jae
bound
outsb
and
arpl
and
imul
or
jb
jne
je
and
and
outsl
addr16
insl
daa
jae
imul
insb
and
popa
je
and
push
push
outsl
addr16
insl
and
outsb
outsb
outsl
je
jae
data16
jns
arpl
je
outsb
jne
and
arpl
imul
and
jae
and
ja
bound
je
jb
imul
or
add
add
imul
outsb
and
arpl
imul
jne
and
arpl
and
add
lcall
lods
inc
add
lods
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
test
test
test
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
ljmp
mov
add
inc
add
jmp
scas
inc
add
push
scas
inc
add
scas
inc
add
add
add
inc
mov
add
mov
add
add
add
pushl
inc
add
inc
add
add
add
add
pusha
or
inc
add
add
add
inc
push
arpl
sub
inc
test
pop
xchg
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
add
add
lock
add
push
mov
push
int3
int3
int3
int3
int3
int3
int3
int3
int3
pop
and
adc
shrl
adc
mov
lcall
xchg
mov
push
loopne
or
sub
fs
iret
xchg
pop
aam
mov
repnz
or
sub
in
ds
jmp
call
call
iret
ss
pop
pop
fmul
aaa
clc
fs
xor
pop
and
mov
pop
mov
sbb
xchg
call
call
call
mov
lret
bound
sub
ret
and
xchg
nop
dec
jb
dec
fadds
jb
xor
sub
inc
aaa
adcb
loopne
sub
faddp
sub
call
call
add
movsb
js
inc
mov
xor
xor
sub
insb
call
call
test
pop
or
jmp
pop
out
xor
int3
ja
sub
mov
addr16
lret
xor
lret
xor
lods
mov
dec
stos
inc
inc
and
jmp
dec
call
xchg
es
inc
cmp
psubsb
call
call
jmp
aaa
push
scas
or
jae
call
call
pop
mov
pusha
mov
jmp
loop
sbb
ja
push
call
call
call
sahf
or
push
out
sbb
cmp
dec
sbb
pop
mov
ss
push
jno
sbb
call
call
not
push
mov
jae
cmp
and
and
and
and
and
and
and
jns
push
dec
nop
xchg
jp
js
fimuls
adc
dec
sbb
das
and
xor
popa
outsb
cli
ja
pop
cmpsb
cltd
mov
push
call
call
call
lods
ds
or
push
mov
inc
mov
mov
xor
add
insb
daa
cmp
xchg
xor
lret
adc
call
call
call
jae
sbb
mov
jo
xchg
pop
cmp
lea
adc
out
push
les
or
iret
dec
jae
jle
call
call
call
push
jae
outsl
out
jmp
ret
jmp
and
adc
popa
shl
sub
fisttpll
jae
call
call
aaa
push
cld
inc
mov
adc
inc
fwait
push
int3
push
jno
repz
add
sub
cmp
jns
addps
sbb
arpl
inc
dec
pop
mov
add
mov
adc
mov
sbb
xchg
pop
adc
jg
and
add
call
call
xlat
roll
ret
and
xchg
call
call
call
lods
dec
bound
jecxz
jb
push
call
call
jl
addl
call
or
sbb
mov
ja
imul
shr
call
call
xchg
outsl
sub
sbb
mov
arpl
roll
inc
call
call
mov
cltd
data16
jle
adc
sub
call
inc
popa
test
xorl
mov
inc
push
enter
and
nop
cli
ja
jg
inc
fwait
test
pop
cs
imul
push
out
addr16
lret
es
push
lahf
mov
es
inc
xchg
popa
dec
aad
sbb
call
call
call
scas
push
pushf
imul
mov
ret
out
pop
mov
pop
movsb
push
mov
xchg
jns
add
call
call
call
cmp
ljmp
xchg
and
dec
call
inc
lret
xchg
and
and
and
and
and
and
jae
lret
xor
push
cmp
aaa
mov
jl
sti
lahf
outsl
mov
int
movsb
in
sub
inc
jg
pop
or
cmpb
lods
call
call
call
call
sarl
jb
mov
push
stos
or
pop
add
inc
fcmovu
dec
cmp
or
stos
jns
fmull
push
jp
in
push
xchg
push
fadds
js
xor
insl
and
arpl
cmp
mov
aaa
scas
fistps
ja
insl
sub
fwait
movsb
jbe
cmp
call
call
lds
add
aaa
push
les
ja
xor
aad
lods
pop
hlt
xchg
test
lret
cmp
push
sub
jne
inc
sbb
inc
mov
fildl
jmp
sbb
mov
ret
loope
mov
call
call
push
popf
push
lret
dec
shll
jp
call
call
fwait
mov
inc
sbb
adc
cmpsb
in
pop
xchg
out
arpl
iret
add
pushf
xchg
adc
jle
and
aaa
sbb
lods
or
loopne
shll
sarb
xor
loopne
insl
cmp
outsl
xchg
mov
xor
sub
or
or
call
call
call
or
pop
js
inc
mov
call
call
call
pop
stos
pop
push
test
aam
imull
cmp
icebp
and
jbe
lea
pusha
sbb
pop
or
pop
or
call
call
call
loope
cmp
mov
call
call
sti
mov
jg
call
call
mov
loopne
inc
or
add
fcoml
push
imul
and
and
and
and
leave
into
xchg
push
dec
cwtl
sbb
lahf
in
out
outsb
dec
adc
test
scas
insl
lret
jp
xor
das
int
call
call
into
mov
sub
fdivrs
frstor
and
xorl
xor
aad
mov
jo
call
call
dec
or
int3
dec
imul
test
cmpsl
cli
scas
xchg
js
mov
ss
jae
rorl
movsb
cmpl
ja
fdivl
les
call
call
call
dec
add
mov
testb
loopne
xchg
push
lods
imul
fisttpl
fwait
movsb
xchg
xor
call
int3
add
div
shl
fstps
inc
push
fsubs
and
and
and
and
and
push
les
js
fidivs
mov
adc
fwait
mov
lret
push
inc
jp
sbb
call
call
call
nop
adc
lock
test
mov
repnz
push
scas
into
in
add
add
jecxz
ret
pusha
ja
jge
adc
mov
mov
stos
dec
call
fisttpll
mov
popf
gs
call
call
add
iret
pop
ret
jp
and
ljmp
dec
in
push
jb
mov
mov
jbe
cmp
and
adc
ds
xor
or
pop
cs
daa
and
xlat
jl
addl
call
call
call
push
out
call
call
call
aaa
adc
lret
sbb
mov
push
jge
out
in
lahf
outsb
push
xchg
dec
and
and
and
and
and
dec
adc
pop
adc
sub
cmp
cmp
jmp
lods
adc
popa
jecxz
mov
shlb
mov
push
cmpsb
cwtl
dec
jle
or
xchg
sbb
mov
xchg
cmpsl
sbb
insb
call
call
call
cmp
push
cmp
test
jge
cli
ja
mov
clc
gs
call
call
pop
enter
popf
lods
fcomps
das
imul
dec
and
and
and
and
xchg
pop
mov
hlt
testb
imul
xchg
dec
call
call
call
jae
incl
jmp
std
pop
inc
inc
fsts
inc
call
out
push
cmpb
cltd
sbb
shr
sub
pusha
rcr
cmp
js
pop
and
mov
xor
jns
cmp
xchg
cmp
or
pop
pop
call
call
popl
sub
dec
or
je
sub
adc
ficoms
sub
call
call
jmp
sub
jmp
pop
inc
movsl
mov
sbb
mov
pop
popa
xchg
push
add
dec
fimuls
shlb
not
cmp
or
call
call
push
nop
push
and
nop
push
mov
push
shlb
push
push
and
push
inc
sbb
sub
xchg
pop
push
mov
loopne
call
call
call
adc
sub
fld
nop
loopne
les
js
sub
sbb
pop
jnp
sub
push
out
sub
sbb
and
and
and
and
and
and
shrl
push
repz
ror
idiv
arpl
repnz
xor
insl
call
call
call
outsl
gs
call
fmuls
ret
in
inc
das
in
jbe
mov
sbb
xor
pop
lods
aam
lods
je
inc
scas
dec
sub
mov
adc
dec
sarb
push
pop
xchg
jno
call
call
call
movsb
nop
sub
jecxz
pop
pop
dec
push
sub
divb
arpl
and
inc
fldt
popa
data16
xchg
push
loop
ficompl
push
test
insl
fwait
cltd
push
call
call
call
addr16
cmp
xor
push
pop
shlb
jb
sbb
daa
out
xor
and
enter
mov
lock
mov
jae
loop
dec
sub
fincstp
jmp
or
push
pop
aas
push
ja
or
cmp
arpl
mov
sbb
mov
call
call
call
adc
jns
aad
push
jno
mov
mov
and
and
and
and
and
lahf
jmp
xchg
and
push
adc
adc
mov
call
call
sbb
or
dec
jnp
dec
jo
lods
push
jb
mov
sub
addr16
sarb
ret
pusha
lds
arpl
or
push
sbb
xchg
jo
pop
outsl
and
fmuls
call
call
cmp
push
mov
into
int
xor
add
rclb
pop
cmp
xor
outsl
pop
iret
dec
and
mov
repnz
lret
push
mov
dec
addl
lock
call
jg
movsl
xor
ds
xor
jns
loopne
insb
and
es
cs
pop
sub
nop
fisubrs
ds
call
call
call
enter
and
or
call
imul
repz
jbe
add
mov
enter
nop
or
arpl
mov
ficompl
pop
mov
push
dec
push
jmp
dec
jne
outsb
jle
pusha
mov
inc
dec
test
and
and
and
and
and
inc
cmp
lock
insl
fstps
std
inc
mov
arpl
inc
mov
jmp
sub
adc
jl
out
push
inc
cmc
jne
insl
sbb
hlt
or
call
in
out
xchg
or
call
call
flds
stc
jle
jo
fsubrl
cmp
pop
dec
ljmp
arpl
sbb
dec
cmc
xchg
dec
je
and
sbb
ljmp
add
xor
das
popf
xor
test
popa
mov
cmp
imul
sti
jnp
call
call
call
pop
ret
hlt
nop
inc
jbe
pop
dec
mov
jns
jge
arpl
sub
mov
sbb
stos
jb
popf
mov
jg
testb
call
push
adcb
mov
sub
push
inc
js
call
call
call
repz
aaa
and
push
sub
jg
mov
jg
xchg
call
call
push
xor
mov
lods
inc
add
pop
xchg
pushf
cmp
leave
sbb
jo
pop
leave
pop
dec
dec
lret
cmp
mov
adc
call
call
call
ja
cmp
dec
call
push
in
inc
out
or
lret
pop
sub
cli
pop
das
popf
lods
outsl
push
jae
xorb
inc
cmp
out
testl
jb
inc
test
int
dec
sbb
jns
call
jbe
cmpsl
mov
inc
push
cmp
sbb
sti
or
xchg
pop
mov
and
and
and
and
sbb
loopne
insb
mov
inc
push
mov
cmp
adc
call
call
call
addr16
push
and
out
dec
adc
into
mov
call
adc
adc
sbb
aaa
push
inc
mov
je
xchg
or
int
pop
lods
xlat
pushf
in
fsubs
cmp
sub
inc
ret
xchg
push
mov
jo
and
and
and
and
and
and
lock
bt
cmpsl
lret
ror
test
mov
xlat
fldt
lock
pop
mov
imul
xchg
add
cmc
testl
div
sub
push
mov
xchg
add
orl
call
call
call
out
xchg
lret
fwait
inc
mov
cmc
lds
call
call
call
call
sub
adc
and
in
cmp
inc
or
mov
movsb
fwait
leave
ret
test
sub
clc
popf
jno
rcl
mov
pop
inc
mov
lods
stos
addl
aas
call
call
call
movsb
mov
push
or
test
ljmp
sub
dec
push
fucomi
cmp
test
lret
rorl
cmp
mov
adc
int
paddusb
sbb
mov
repnz
divb
call
call
call
fcomp
inc
mov
shlb
addb
int3
movsl
addr16
mov
loope
jne
hlt
adc
ljmp
cmc
out
sarl
call
call
cld
fisttps
xlat
sti
and
leave
ds
out
mov
imul
and
sahf
cmp
test
lret
outsb
inc
push
stos
lods
hlt
or
fwait
xchg
call
call
into
lds
loopne
xchg
andb
rol
adc
lods
out
or
mov
std
cmp
testb
shr
mov
cmpsl
out
cwtl
jmp
xchg
and
and
and
and
and
lret
in
cld
xchg
cltd
fcompl
sbb
andb
fisubl
sti
dec
nop
pop
push
cmp
ret
xchg
shr
call
call
adc
mov
fisttps
push
scas
shrb
jb
test
lock
rcr
jl
cltd
fimuls
cmpsb
shrb
mov
call
call
mov
xchg
jecxz
mov
xchg
inc
xchg
fstpt
in
ja
call
call
ret
inc
xchg
movsb
loop
or
jmp
lods
aad
mul
test
jge
mov
adc
es
insb
leave
gs
and
out
lahf
mov
popf
ss
test
call
call
loope
or
xor
and
and
and
and
enter
jbe
movsl
lock
movb
into
loop
rolb
jmp
xchg
lods
xor
out
pushf
sub
call
call
xchg
es
adc
mov
rcrl
loopne
pop
inc
repz
or
mov
xchg
pop
inc
in
sbb
mov
fwait
add
mov
xor
xor
clc
pop
mov
dec
sar
mov
pusha
ficompl
orl
popf
popa
sub
call
nop
idivl
test
add
fdivrs
nop
push
inc
movsb
mov
mov
cmpsl
iret
loope
push
dec
movsl
jae
push
shll
sub
sub
mov
mov
and
and
and
and
and
and
dec
cmpsb
lret
mov
in
mov
fwait
mov
xlat
pop
xlat
mov
icebp
mov
add
cli
cwtl
daa
test
xchg
pop
fldcw
adc
ss
xchg
bound
and
call
call
mov
add
fbld
mov
add
outsb
bnd
call
call
enter
aam
sub
xchg
mov
rol
jecxz
cmc
mov
call
lods
std
fcomps
fcmove
nop
repnz
out
jne
enter
clc
mov
into
cltd
push
mov
fucomp
jp
repz
xlat
and
cli
push
aam
call
call
call
jle
xchg
nop
mov
in
add
fnstenv
adc
in
push
lret
in
push
sar
call
call
or
mov
cmp
mov
sti
mov
cld
sub
lock
jns
popa
add
cmc
test
lods
stos
les
outsb
fucomi
lea
movsb
stos
push
sbb
fmul
and
and
and
and
and
and
movsl
mov
lods
mov
sub
dec
pop
in
or
xchg
call
loope
into
or
jo
insb
int
push
sbb
rcll
mov
dec
sahf
mov
push
mov
sahf
aad
test
mov
mov
fwait
js
into
or
dec
loopne
mov
pop
jg
pop
sahf
mov
pop
call
call
call
call
xorl
iret
push
cmp
and
decb
jmp
push
sbb
call
call
scas
ret
xchg
cmp
call
xchg
dec
cld
test
fistpll
mov
mov
lahf
mov
pop
clc
mov
call
mov
mov
jnp
mov
xacquire
aaa
xchg
fmuls
dec
out
out
call
call
in
and
call
call
pop
scas
pop
scas
pop
jno
and
and
and
and
std
fdivp
test
mov
out
int3
movsb
shrl
or
lret
and
and
and
and
test
lea
in
and
mov
cmp
pop
mov
fsubs
dec
and
movsl
mov
sbb
xchg
mov
shll
push
mov
sti
xor
call
call
pop
test
out
fsubr
call
loop
iret
js
xor
push
enter
lods
jnp
jmp
cs
lret
cltd
dec
adc
in
mov
mov
cld
call
call
call
out
popf
pusha
pop
test
pushf
ret
dec
xchg
das
push
out
cmc
and
testl
adc
cltd
mov
and
ljmp
cli
nop
out
lret
push
mov
popf
sub
call
or
rcrb
mov
or
inc
popl
ror
sub
call
call
call
push
jae
dec
mov
ds
sub
jmp
gs
scas
jge
lock
sbb
in
and
rcll
hlt
ds
cmc
shl
std
push
xchg
repz
loope
pop
inc
repz
test
mov
iret
insb
mov
int3
or
call
call
call
fildll
repnz
decl
cmp
pushf
lahf
xor
cmpsl
mov
in
push
mov
jb
mov
nop
into
nop
repnz
xor
call
call
xlat
jno
iret
sub
lahf
cmp
sbb
jno
hlt
xchg
in
mov
xor
les
call
call
call
test
rcrb
jae
stos
dec
mov
sub
mov
or
cld
aad
sarl
adc
sbb
inc
cmc
addb
and
and
and
and
and
and
scas
mov
enter
mov
call
call
stos
insl
cwtd
mull
inc
test
mov
push
mov
push
xchg
lock
cwtl
std
jg
mov
sub
push
aad
sbb
lcall
call
call
jmp
adc
and
and
and
and
and
aad
mov
sub
ljmp
shlb
fnstenv
mov
adc
dec
sti
testb
call
call
dec
mov
mov
and
out
out
jne
mov
std
adc
lret
call
call
pop
aad
sti
mov
rcll
xor
jmp
jns
movsb
lea
xchg
fsubr
call
call
call
pop
cli
fimull
jmp
addl
mov
ret
repnz
std
mov
jl
ret
das
test
xchg
outsl
mov
lock
or
subl
lods
push
push
lret
rclb
lods
pop
popf
lock
jg
lret
iret
lods
mov
xchg
sarl
call
call
call
and
and
and
and
and
out
loop
mov
popf
fldcw
loope
dec
xchg
cmp
sahf
lahf
dec
xlat
and
faddl
jge
push
mov
loop
lret
sub
fstpl
out
cmp
jmp
int
add
push
xchg
sbb
call
and
repnz
xlat
rolb
fisubs
push
iret
movsb
test
xor
and
and
and
and
and
aad
adc
inc
aam
stos
daa
rcr
icebp
mov
leave
and
sbb
cltd
cld
call
call
call
adc
lods
scas
add
into
pmulhw
pop
xor
je
sub
xchg
mov
iret
ss
mov
add
cwtl
sbb
aas
mov
sbb
test
test
call
mov
rcrl
nop
fistpll
rcl
xchg
pop
pop
jecxz
ja
shr
andb
pop
andl
mov
pop
call
call
mov
popa
in
mov
mov
inc
xchg
xchg
jg
xchg
shlb
mov
xchg
pop
andb
xorb
out
leave
pop
jb
adc
add
lret
std
call
call
call
loop
or
dec
lret
add
push
out
mov
add
mov
imul
mov
into
sar
test
dec
shll
pusha
cmp
lock
mov
mov
cld
jo
repnz
mov
iret
sbb
call
call
mov
xchg
cmpsl
iret
jns
ret
mov
sub
and
and
and
and
and
and
loopne
mov
sub
fmul
cwtl
movsb
pop
stos
insb
aam
scas
fdiv
lret
std
inc
add
dec
js
out
sbb
call
imul
sti
fdivp
inc
call
call
pop
cmp
adc
sub
call
call
call
stc
mov
cmpsl
mov
push
mov
mov
cmp
in
cmp
xchg
adc
inc
lods
xchg
mov
stos
in
mov
dec
clc
xchg
pop
dec
add
mov
mov
jp
pop
add
fnstsw
call
enter
cld
nop
push
cwtl
mov
mov
mov
inc
call
call
push
jmp
mov
inc
subb
dec
xchg
shlb
out
cmpsb
fidivl
aad
aam
stc
mov
lods
stc
shlb
call
call
mov
sbb
and
and
and
and
and
icebp
test
sbb
or
out
cld
leave
jmp
and
iret
lods
mov
jnp
in
out
loope
add
in
sbb
push
test
sub
fsubr
mov
mov
loopne
mov
test
fmuls
movsb
call
call
mov
xor
mov
mov
call
call
call
or
mov
fabs
invd
aas
stos
loop
push
movsb
iret
hlt
enter
test
nop
mov
pop
frstor
filds
test
call
call
arpl
cmp
call
call
inc
out
in
ffree
call
call
dec
fsubrp
subb
mov
xchg
sti
add
out
cmp
stc
lcall
in
xchg
stos
pushf
fsubl
subl
insl
out
hlt
cltd
aaa
out
pop
mov
mov
in
mov
mov
sbbl
in
jmp
call
and
pop
cmp
icebp
rolb
pop
xchg
leave
fcompl
aam
sub
mov
inc
inc
xchg
xchg
fs
ret
push
dec
imul
movsl
arpl
push
xchg
fldlg2
ret
mov
mov
inc
and
and
and
and
and
and
and
call
call
fs
aam
mov
xor
sbb
movsb
mov
inc
ljmp
pop
push
cmp
cmp
cs
scas
incb
lods
cwtl
cmp
cmp
jmp
add
call
call
call
inc
call
call
call
js
fwait
pop
or
data16
and
nop
or
in
aas
sbb
mov
call
call
cld
fcmovnu
cmc
dec
xchg
dec
mov
ss
and
jbe
lods
push
lods
and
and
and
and
and
in
jno
lcall
jno,pt
cmp
jno
pop
sub
cwtl
xor
shlb
sub
mov
call
call
mov
shrl
push
int
push
pushf
stc
and
lahf
leave
into
bound
insb
pop
xchg
ja
lret
bound
data16
inc
aad
scas
push
pop
add
ljmp
jle
movsb
popf
or
mov
call
call
xchg
dec
call
call
call
pop
shll
in
pop
sub
call
call
push
cli
adc
add
mov
pop
test
mov
adc
and
and
and
and
shll
lret
iret
lods
and
lcall
call
call
cmpsb
ds
adc
test
add
xchg
xor
xor
cwtl
sti
out
ds
rcrb
sub
xchg
cmp
mov
adc
lahf
cmc
push
sub
ret
mov
xchg
adc
mov
mov
jno
xchg
call
call
test
ljmp
call
add
sbb
or
jecxz
add
jmp
frstor
add
std
shl
jmp
fs
call
dec
cs
movsl
jl
lds
divb
pop
jb
jae
test
andb
test
call
call
pop
nop
mov
or
and
rol
xor
push
cmc
sub
inc
inc
add
add
cld
sbb
insl
pop
aam
test
test
aam
xchg
jne
mov
jae
lods
stos
call
call
xchg
jo
adc
pop
adc
fnstenv
jecxz
test
rcll
pop
mov
sub
call
pop
out
adc
out
mov
push
pop
jg
mov
mov
xor
inc
movsb
inc
dec
mov
adc
and
adc
sbb
inc
ja
xor
sub
adc
and
push
and
xchg
push
sbb
pop
aaa
push
add
shl
jl
iret
dec
dec
call
call
call
movsb
xor
call
lret
ja
fldl
and
lahf
movsb
lret
adc
cltd
or
test
std
clc
in
sub
les
je
pop
lea
cmp
and
and
test
add
cld
xor
xchg
and
call
call
pop
cmpsb
inc
data16
cmpsl
or
test
cs
pop
loope
je
movsl
fsubrp
scas
in
jmp
addr16
out
call
rcll
jg
inc
jb
aas
mov
mov
fdivr
xchg
nop
adc
jecxz
clc
test
daa
call
call
call
call
lods
sti
mov
mov
xchg
xor
ret
rclb
pop
sub
cld
xlat
fdivl
pop
stos
stos
mov
ret
push
js
push
or
call
call
call
js
cmp
cli
shl
xor
repnz
cmp
mov
inc
push
jns
in
lahf
xor
adc
pop
loop
or
dec
in
xchg
mov
js
fs
jnp
popa
adc
cld
lret
popf
sbb
push
sbb
call
call
add
cltd
repnz
fldenv
xor
and
out
sub
cmp
test
stos
dec
popf
cmp
inc
cmp
add
hlt
mov
mull
or
call
call
cmpsl
sahf
aas
pop
pop
dec
addr16
jecxz
int
cmc
sarl
inc
frstor
lret
pop
icebp
cmp
sbb
jae
mov
clc
cmp
mov
inc
mov
mov
or
xor
sarl
adc
popa
xchg
sbb
inc
fs
in
jne
mov
call
xor
mov
pop
je
bound
or
push
adc
cmp
js
ljmp
add
jns
lcall
mov
stc
movsb
mov
cmp
and
and
and
and
and
mov
xchg
mov
sub
push
mov
pop
aad
insl
call
call
call
dec
inc
jl
and
jg
mov
bound
stos
xor
dec
dec
sub
repnz
cli
clc
lahf
arpl
cwtl
jecxz
push
shrb
insl
push
push
cmp
pushf
push
jne
lret
adc
xor
aaa
xorb
outsl
sti
cmp
addr16
repnz
jno
test
gs
sbb
mov
inc
call
call
cmp
aam
lods
mov
add
cs
out
popf
mov
dec
lcall
and
xor
fcompl
and
jo
dec
adc
call
call
mov
mov
sub
mov
pop
inc
lret
in
or
cltd
fsubrs
lods
inc
push
jo
stc
add
fs
outsl
popa
push
mov
push
clc
adc
das
fs
jo
cmpsb
gs
out
fnsave
xchg
add
in
and
pusha
in
mov
inc
out
shrb
in
mov
push
movsl
test
mov
cmp
or
call
call
call
ja
scas
loopne
mov
sahf
sti
xor
sahf
repnz
stos
ret
jno
je
andl
ss
sbb
in
and
jns
pop
xchg
loopne
inc
xor
xor
nop
shr
call
call
dec
push
mov
sub
push
in
add
cmp
cmp
mov
roll
xchg
shlb
gs
push
in
int
push
iret
iret
sub
pop
fcmovbe
push
add
cwtl
push
aam
mov
add
dec
ret
and
and
and
and
and
and
and
and
jl
lods
xchg
ljmp
call
call
xchg
mov
and
pop
fst
test
sub
and
and
and
sub
mov
pushf
scas
andl
xchg
ret
jecxz
stc
out
imul
xchg
shl
xchg
sbb
ficompl
inc
enter
call
or
dec
out
stos
push
pop
imul
call
call
jecxz
lods
push
lods
cmp
je
adc
lods
jbe
push
mov
test
jbe
out
cmp
sub
iret
mov
sbb
repz
je
enter
cmp
ja
sbb
inc
push
mov
add
add
push
std
ret
adc
call
dec
sub
jecxz
jno
pushf
pop
push
lret
sub
mov
pop
sbb
fsubl
roll
push
cmp
call
jp
add
xchg
add
call
call
call
jecxz
fbld
daa
push
bound
cmp
pop
cmp
mov
cmpsb
inc
lods
sub
dec
or
xor
in
arpl
cmpsb
add
call
call
mov
daa
push
jnp
out
xor
push
data16
jmp
add
xchg
push
addr16
mov
push
nop
mov
push
pop
mov
scas
mov
jns
and
mull
push
push
jg
es
mov
and
in
leave
leave
mov
call
call
call
hlt
sahf
popa
jnp
inc
mov
dec
and
sbb
mov
push
dec
dec
popf
xor
cmp
pop
mov
cmc
push
or
mov
ret
scas
push
ja
or
mov
repnz
adc
fcompl
dec
mov
mov
test
call
call
and
and
and
and
and
insb
cs
leave
in
xor
jns
popf
cs
cmpsl
shl
xor
outsb
sub
bound
iret
int
cmpsl
fcoms
pop
lret
testl
inc
cwtl
sbb
jo
and
and
and
lahf
mov
adc
dec
in
jmp
pop
or
pop
sub
ret
xchg
aas
shlb
inc
outsb
mov
loopne
xchg
xchg
pop
hlt
imul
mov
push
mov
push
arpl
mov
call
call
call
or
xor
dec
add
notl
call
and
dec
lods
adc
mov
mov
cmc
xor
test
pop
sub
vaddpd
cmp
mov
and
test
mov
jns
idiv
cwtl
jp
pop
sbb
jmp
and
movsl
call
call
cmp
scas
popf
jmp
jbe
call
call
call
inc
loope
mov
pop
mov
pop
jg
lods
and
inc
pop
sub
enter
xor
cmc
mov
mov
push
rorb
cmpsl
or
push
sbb
movsb
adc
call
call
call
mov
add
jl
and
dec
movsl
and
dec
in
mov
testl
iret
inc
or
test
lret
repnz
adc
stos
outsl
fwait
aam
jb
mov
sbb
xchg
test
std
jne
call
call
negl
push
fistps
leave
inc
cwtl
pop
stos
jae
ja
inc
sbbl
jg
mov
mov
push
jbe
inc
sbb
cmp
xchg
cmp
iret
adc
push
jb
pxor
lods
xchg
pusha
iret
cmc
or
loope
call
call
call
pop
das
enter
and
and
and
and
mov
bound
adc
and
cmpsb
adc
mov
enter
mov
clc
cmp
call
call
sub
and
and
inc
xchg
xchg
ljmp
dec
and
in
mov
xchg
ret
sti
jnp
nop
imul
call
movsl
sahf
inc
movsl
out
pop
pusha
test
sub
iret
andb
and
and
and
and
and
xchg
test
bound
mov
jbe
fistps
call
mov
test
add
push
inc
push
je
sbb
and
gs
fs
call
call
fdivrp
inc
mov
dec
out
imul
dec
or
jge
clc
inc
xor
unpcklps
and
lods
popf
pop
ror
push
iret
aam
mov
in
sbb
mov
adc
ljmp
icebp
mov
call
call
popa
loop
cmp
inc
adc
jge
js
and
and
and
and
and
and
pop
push
daa
or
jb
enter
push
sbb
lret
mov
or
adc
mov
cld
push
testb
call
call
push
lret
add
icebp
popf
sub
ljmp
xlat
inc
loopne
out
cmp
adc
pop
or
shrb
cmpsl
sbb
or
dec
cmpsb
inc
mov
dec
call
call
das
repnz
mov
outsl
push
jl
push
test
xor
fucom
xor
cwtl
push
and
or
out
or
xchg
stos
es
add
gs
mov
lcall
call
adc
push
push
into
xchg
je
pop
out
push
sbb
lret
aam
test
std
and
xchg
mov
test
mov
movsl
out
fcmovnu
or
mov
pushf
xchg
or
cmp
fidivrs
loopne
fildl
fwait
mov
test
bound
pop
adc
stos
fsubr
fsubrl
ret
push
outsb
scas
ret
stc
call
call
call
sahf
sti
ds
push
cs
out
inc
jle
lods
bound
aas
popa
in
pop
scas
and
cmp
cltd
into
ret
out
inc
pop
mov
cmc
repz
popa
pusha
out
sbb
insl
adc
inc
mov
and
and
and
and
and
and
cmp
adc
adc
aaa
in
jb
cmpsl
mov
clc
push
lds
sahf
lret
test
xlat
arpl
insb
mov
arpl
fstpl
xchg
call
call
call
scas
sbb
jb
adc
subl
outsb
jne
outsb
dec
adc
cmp
push
pop
rolb
cmp
or
mov
add
pop
cwtl
inc
sbb
inc
xlat
xchg
fstl
ja
push
sahf
std
es
or
fidivrl
imul
repz
icebp
inc
jg
pop
dec
jnp
call
call
or
loope
pop
xchg
fiaddl
adc
mov
sbb
inc
addr16
pop
jno
adc
call
call
call
fsubl
out
inc
imul
movsb
hlt
dec
loopne
into
test
inc
enter
call
call
lods
pusha
repz
lret
mov
xchg
enter
leave
loope
aaa
jbe
pop
pop
lcall
andb
mov
pop
mov
mov
out
pop
insb
or
out
cmp
push
jno
adc
xor
cmp
mov
out
mov
jbe
call
call
sbb
popf
insl
sub
push
jmp
push
push
push
test
mov
cmp
cwtl
or
push
pop
rcll
jg
xlat
mov
cmp
sub
out
pmulhw
push
call
call
call
call
mov
mov
cwtl
cmp
push
clc
or
mov
fsubp
imul
mov
ret
gs
in
push
loop
mov
sbb
mov
pop
js,pt
mov
xchg
jecxz
call
call
mov
pusha
and
adc
and
and
and
and
jo
adc
adc
push
f2xm1
cmp
call
call
lds
fs
clc
and
mov
daa
and
movsl
out
fs
das
and
outsb
and
xchg
sbb
cmp
cmp
pop
xlat
pop
mov
ret
movsb
sbb
inc
push
repnz
fs
mov
cmc
std
push
xchg
xchg
popa
call
call
pusha
mov
mov
popl
or
aaa
mov
mov
xor
push
and
jle
or
lock
rorb
sub
push
and
jo
imul
stos
push
mov
push
jnp
aad
mov
inc
call
call
xchg
or
push
call
call
call
loop
dec
pop
stc
push
test
nop
add
mov
mov
xchg
aam
or
inc
mov
xchg
add
nop
pop
jl
movsb
jbe
or
sub
push
nop
adc
test
lret
popa
mov
aaa
adc
test
or
aaa
repnz
sbb
mov
call
call
call
dec
mov
push
sub
call
cmp
mov
ljmp
push
cmp
adc
sub
pop
sbb
or
jl
and
and
and
push
pop
lods
jp
dec
nop
jbe
xchg
mov
imul
or
add
mov
stos
mov
or
mov
jg
ds
or
dec
push
out
xorl
outsb
adc
xor
repnz
mov
outsb
iret
mov
popa
adc
call
call
call
in
aaa
dec
cmpsl
popa
adc
jl
xor
push
mov
jae
cmp
push
cmp
loop
and
mov
adc
pop
stos
inc
icebp
fsubrs
jo
mov
jg
xchg
add
xchg
enter
fwait
add
pop
out
push
into
movsb
push
call
call
call
call
pop
int3
lea
inc
sar
jmp
icebp
imul
into
push
and
inc
add
fisubrs
dec
rclb
pmaddwd
mov
dec
daa
fidivrl
sub
call
call
jne
imulb
bound
stc
sub
pop
dec
pop
into
sub
inc
jg
call
dec
push
sbb
xlat
inc
aam
clc
jne
xorl
lds
cmpsb
add
insb
call
mov
sbb
shrl
aas
xorl
lret
into
push
outsb
stos
dec
jo
lcall
call
call
call
sub
push
cwtl
jmp
sub
jmp
add
adc
lds
mov
lds
pop
fmull
sbb
es
and
shll
xchg
jecxz
dec
int3
popa
add
fs
gs
add
lock
rep
push
enter
call
call
xor
fidivrs
jbe
dec
push
pop
call
call
call
js
inc
mov
and
and
and
and
and
jle
call
call
inc
mull
test
jmp
cmpsb
cs
sub
xchg
aas
xchg
movsb
jno
mov
aaa
push
out
or
sbb
icebp
mov
cltd
mov
pop
lret
pop
dec
push
jne
add
ffreep
daa
dec
std
adc
push
dec
add
aas
jp
mov
imul
pop
outsb
sub
sub
es
call
dec
cmp
and
cmp
cmp
add
aam
add
and
add
jmp
sbb
jae
movsl
and
jmp
jns
sbb
add
pop
xor
sahf
popa
push
sbb
push
xchg
add
lcall
fiaddl
imul
call
call
call
push
aaa
push
cli
adc
jno
fdivrl
addr16
push
push
gs
andl
or
je
mov
and
and
and
and
sub
call
call
out
mov
inc
sub
and
and
and
and
and
xlat
dec
jno
and
and
and
and
xlat
jmp
pop
push
pop
pop
jbe
push
mov
insl
pop
mov
inc
mov
adc
sub
adc
clc
inc
sub
inc
sbb
sub
call
call
stc
or
call
call
out
sub
mov
bound
pop
ss
sbb
call
call
inc
pop
out
testl
or
fidivrl
pop
adc
pop
mov
call
call
call
xchg
xor
call
call
adc
mov
nop
push
mov
push
lods
push
push
inc
mov
cmp
mov
pop
test
loopne
push
mov
cmp
add
inc
call
call
and
cmpsl
stos
mov
jo
pop
aaa
das
sub
sti
jb
dec
inc
dec
jl
js
enter
call
call
hlt
dec
pop
inc
mov
pop
fwait
sub
cmpsl
outsb
ret
shr
call
call
inc
fsubl
jns
mov
data16
jmp
maxps
lock
stc
sbb
push
ljmp
scas
add
jmp
cmp
cmp
adc
push
shl
jmp
inc
ss
out
dec
dec
aaa
sub
lds
mov
jge
mov
fnsave
call
call
sbb
pop
jnp
stos
rolb
add
popf
idivl
call
call
lods
adc
push
cmpl
popl
mov
lret
shrl
adc
addr16
sub
xor
std
adc
mov
aad
rcr
iret
jp
dec
leave
fs
jne
push
jns
rcrb
jge
or
call
call
outsl
xchg
js
cmp
movsl
sbb
mov
shrd
andl
xchg
and
and
and
and
and
and
and
jns
ljmp
call
call
call
rcr
mov
adc
aas
decb
sbb
ret
cmp
nop
push
and
pop
add
cli
js
mov
jne
inc
in
call
call
call
adc
inc
rorb
inc
cs
and
call
call
mov
or
xchg
cmp
cmp
sub
imul
jne
int
push
xchg
lret
cmp
jae
sub
std
pop
pop
vphaddubw
jg
mov
dec
shll
adc
fnstsw
pop
cmp
inc
fidivrs
xchg
sub
push
push
push
push
mov
call
call
or
push
cli
jg
adc
or
aaa
call
add
mov
minps
call
call
mov
rdmsr
or
mov
xor
das
cmp
or
mov
outsl
mov
enter
cmp
lahf
popa
bnd
xchg
and
les
or
xchg
cmpb
fs
and
out
lcall
pusha
adc
call
call
daa
adc
xor
loope
roll
fs
dec
add
movsb
push
lret
sub
aam
pop
jbe
jb
or
jae
pop
xorl
or
out
bound
inc
xor
or
sbb
sub
out
pop
in
push
call
call
and
and
and
stos
es
jae
jns
push
xchg
mov
xchg
popa
mov
shr
call
call
call
mov
mov
push
mov
movsb
dec
mov
and
and
and
and
and
ss
push
call
call
call
sub
ss
int3
std
sbb
shrl
jge
cmp
push
lods
cmpsl
in
xor
xor
jno
xchg
inc
push
lods
dec
enter
pushf
or
add
adc
and
nop
outsb
mov
xor
mov
xor
mov
mov
ret
pop
movsb
jnp
jno
std
jae
inc
sbb
sub
jge
jle
cmp
call
call
call
ss
xorb
out
lahf
mov
std
je
out
adc
xchg
push
push
lret
clc
push
push
add
mov
jbe
adc
mov
popf
xchg
and
outsb
xor
jle
fistpl
das
repnz
imul
push
sub
call
call
daa
mov
imul
jo
lea
pop
shll
and
sti
popa
adc
fs
int
add
fisttps
loop
add
subl
xlat
outsb
add
stc
aas
roll
call
call
imul
mov
call
lods
ss
imulb
aas
js
push
outsl
cmp
stos
push
arpl
incb
scas
mov
outsl
mov
pop
add
lods
xor
cmpsb
inc
cltd
sbb
cs
inc
mov
rcll
cmp
cmp
leave
mov
and
and
and
and
cwtl
lea
or
sub
cmp
fstps
and
nop
imul
call
call
call
mov
add
jbe
and
or
or
test
jnp
call
call
test
sub
inc
adcb
mov
call
cmc
jae
dec
aaa
outsl
movsb
add
xor
cmp
push
push
pop
in
js
call
call
call
call
sbb
dec
addr16
loope
stos
inc
in
add
jg
test
cmc
dec
shll
jae
lods
pop
call
call
call
lret
mov
popf
sbb
cmpsl
xchg
sub
xchg
cmp
call
call
call
arpl
popf
push
call
dec
xchg
adc
aaa
pop
add
aad
xchg
imul
cmpsl
dec
fwait
mov
mov
call
mov
cmp
mov
aaa
jmp
scas
and
cld
arpl
jle
subl
out
inc
xor
and
and
and
and
les
pop
lock
movsl
inc
push
scas
jl
and
adc
mov
lea
dec
xchg
dec
mov
pushf
fsts
call
call
xchg
and
shlb
sbb
cmpb
call
call
or
jmp
jb
fldl
movsb
xorb
into
pop
jge
push
test
xchg
adc
ret
push
aaa
jl
pop
cmpsb
fs
xor
pushf
loop
sarl
out
outsl
mov
mov
push
xchg
repnz
lods
dec
sub
cmpsl
dec
push
cmc
movl
call
call
and
sub
mov
out
insb
aam
push
inc
lret
xor
fwait
mov
push
cmpsl
test
adc
or
enter
fnstenv
xchg
push
test
std
popf
push
adc
mov
movsb
leave
rorb
pop
push
cli
mov
aaa
std
pop
outsl
call
call
call
push
add
scas
mov
cltd
popa
outsb
shll
enter
shl
mov
mov
and
insb
add
in
xchg
mov
call
popf
clc
or
test
fisttpll
stos
dec
jge
in
addr16
jo
imul
pop
jecxz
dec
push
xchg
xchg
mov
add
lds
mov
mov
xchg
call
call
call
or
push
or
insb
pop
js
mov
jae
stos
cwtl
bound
call
call
xchg
mov
cmp
mov
push
cli
push
pop
pop
lcall
and
jb
insb
scas
mov
jbe
in
call
call
sub
aam
mov
mov
xchg
call
lcall
loopne
push
jo
mov
ljmp
stos
lock
push
decb
test
fidivl
dec
arpl
movsb
inc
and
js
push
imul
subl
call
call
lcall
lret
push
xor
adc
inc
xchg
add
xor
ljmp
sub
xor
aaa
sbb
push
in
mov
push
loope
or
adcl
and
push
lea
and
push
dec
lea
scas
out
andl
mov
jo
daa
call
call
call
pop
daa
or
add
pushf
jae
mov
in
mov
ss
call
call
mov
insb
sbbl
fwait
in
inc
mov
jns
cld
mov
inc
test
mov
jns
enter
test
ja
adc
xor
pop
mov
add
sub
in
and
pop
insb
pop
cmp
popa
and
and
and
and
and
mov
cmp
xchg
xchg
mov
ljmp
nop
dec
push
add
lock
push
cmc
call
call
call
js
or
repz
jae
jo
push
stos
or
enter
pushf
mov
scas
lds
insb
push
fdivp
daa
and
push
test
scas
fdivs
cmp
imul
cmpsb
push
addl
pop
rclb
cmp
dec
dec
pushf
and
lock
aas
or
pop
mov
lods
dec
sub
scas
call
call
icebp
arpl
popa
adc
mov
aad
fistps
fmull
pop
jnp
gs
xchg
adc
push
shrl
add
into
in
arpl
xchg
cs
fcomp
fisttpll
cltd
xorl
lods
ret
das
dec
inc
daa
pop
cmova
call
call
dec
or
mov
adc
arpl
mov
imul
sub
mov
mov
movsb
push
enter
jb
jno
pop
jmp
call
call
mov
and
push
sub
adc
mov
insb
mov
and
and
enter
xchg
pusha
cltd
and
dec
mov
dec
int
dec
fnstcw
mov
xor
and
leave
pop
inc
rcll
push
mov
rorb
aad
pop
sub
mov
gs
cmp
aaa
call
call
xor
ljmp
int
and
std
sar
insb
lods
cmp
call
call
call
sahf
dec
cmpb
movsl
jns
jo
movsb
ljmp
filds
pop
mov
xchg
call
call
call
call
sarb
inc
push
stos
repz
mov
cli
and
inc
xchg
ret
push
jb
push
jmp
or
cli
cltd
shr
in
jecxz
test
jmp
pop
jae
mov
imul
call
call
aas
test
movl
scas
lret
jmp
lock
stos
insb
jb
call
gs
icebp
mov
call
call
mov
dec
lods
clc
jmp
jo
std
inc
mov
in
out
push
xchg
jo
dec
adc
or
in
cwtl
jns
pop
and
hlt
add
dec
mov
movzbl
dec
nop
call
lret
mov
call
call
lock
push
add
add
inc
cmc
cmp
jl
addr16
lea
int
leave
cwtl
popf
dec
push
or
xor
ret
push
aas
popa
test
xchg
dec
xor
insl
or
cli
test
xor
fidivl
mov
call
call
dec
scas
jnp
enter
jl
in
push
pop
and
xor
sbb
sti
stc
aas
int3
cmp
mov
sub
insb
mov
call
call
call
in
arpl
ljmp
call
call
mov
dec
gs
bswap
test
sbb
and
and
and
and
fistl
ja
push
fcomps
popf
push
loope
out
cltd
pop
mov
push
test
dec
push
in
cmc
xor
das
mov
pop
sub
add
or
pop
in
cmp
call
call
int
sbb
loopne
xchg
rcr
flds
sbb
or
xor
ret
dec
pop
loope
push
push
fisubrl
cmp
insb
fstl
pop
shl
mov
jno
push
fcoms
popa
aas
xchg
lahf
xchg
mov
sbb
dec
mov
xchg
mov
call
call
dec
jbe
dec
lret
or
lock
std
loopne
ficompl
addr16
in
mov
mov
pop
test
ret
dec
out
lock
inc
outsb
test
and
daa
adc
scas
mov
mulb
les
pop
stos
mov
fs
and
and
and
and
and
push
dec
add
aam
call
call
call
push
cmp
mov
call
call
call
and
jmp
pop
inc
pop
mov
cmp
pusha
dec
adc
fcomip
insl
dec
adc
cs
and
xchg
lahf
sub
push
psubq
lcall
sub
sbb
mov
movsl
ja
mov
in
jmp
xlat
lds
insl
xchg
sbb
ljmp
imul
call
call
mov
bound
fwait
add
inc
scas
data16
icebp
movsb
pop
jg
pop
and
and
and
and
call
call
call
adc
out
pop
movsl
adc
jl
popa
mov
fwait
cltd
lds
arpl
roll
clc
orl
pop
fadd
dec
or
xchg
mov
fnsave
call
call
call
call
call
mov
scas
jo
xchg
fcomps
mov
int3
insl
pop
mov
add
lret
add
mov
pop
jbe
dec
cli
adc
add
out
push
xchg
mov
or
daa
xor
aas
cmp
imul
dec
lret
xor
out
std
jno
popf
inc
sub
call
push
pushf
adc
hlt
shl
mov
push
mov
sarl
and
and
and
and
push
inc
dec
jge
mov
jp
mov
rcrl
pop
insb
call
call
call
mov
iret
xor
ret
mov
and
jp
pop
lock
xchg
xchg
pop
test
ret
jg
xor
cli
jp
inc
inc
dec
dec
lea
jge
mov
and
and
and
and
jg
mov
fsubrp
call
call
mov
jmp
aaa
cmp
cwtl
testl
push
xchg
adc
mov
nop
or
add
adc
and
and
call
call
call
call
mov
mov
pop
and
and
and
and
and
and
and
and
and
xor
ss
subl
push
loopne
outsb
lds
iret
lods
addr16
sbbb
and
add
inc
push
in
mov
adc
scas
shrb
cwtl
dec
in
test
call
call
cmp
stc
pop
int
hlt
mov
dec
xchg
adc
xor
push
mov
popf
mov
nop
or
repnz
rcrl
xor
popa
jle
in
rorl
xlat
shlb
sbb
call
call
and
jo
call
call
mov
punpckhbw
sahf
jge
xor
cmp
cmp
cltd
mov
pop
jb
mov
bound
insb
leave
sbb
xor
ds
xor
push
adc
and
push
movsb
push
shll
mov
pop
call
call
aas
xlat
mov
mov
call
pop
clc
jmp
pushf
push
pop
mov
cmp
lods
add
nop
xorb
mov
notl
jmp
lret
movsl
cmp
add
jle
mov
je
jo
xor
loop
mov
jle
dec
sti
out
call
call
call
adc
sbb
mov
mov
fwait
ja
push
fsubrs
std
popa
inc
mov
push
xor
shll
cmp
adc
sub
push
push
in
add
xor
int
mov
push
dec
jge
push
cli
mov
mov
call
call
call
out
inc
dec
ds
mov
in
xchg
push
add
and
jnp
mov
inc
adc
mov
das
inc
mov
xchg
gs
cmpsb
add
xlat
mov
xor
sbb
jb
pop
adc
and
and
and
and
and
les
add
nop
daa
xor
pusha
call
call
cmpsb
popf
out
xor
mov
icebp
pushl
rclb
aas
mov
rorb
repnz
cmpsl
sub
int
jecxz
mov
or
inc
nop
mov
inc
movsl
xlat
cmp
jnp
push
add
jnp
daa
outsl
call
outsl
adc
call
out
aad
test
push
add
out
sub
test
push
ja
dec
pop
and
fadds
clc
into
in
mov
fs
pushf
jle
and
and
push
addb
es
popa
push
aam
icebp
notl
or
mov
and
jns
scas
pop
es
shll
call
call
and
mov
jle
arpl
and
and
and
and
and
and
and
and
and
or
je
jl
sub
mov
jno
mov
stc
cmp
ljmp
sub
xchg
jnp
mov
lea
scas
push
insb
push
movsl
std
sbb
pop
call
call
call
call
cld
push
jge
lods
xchg
call
xchg
add
jle
push
bound
xor
ss
xchg
adc
fnstsw
jmp
xchg
xchg
adc
inc
sti
push
lds
dec
sbb
scas
int
jge
dec
or
call
popa
sub
mov
mov
xchg
imul
xchg
mov
mov
repnz
in
movsb
push
xchg
cmp
leave
jbe
jne
out
inc
push
push
sbb
jns
cwtl
and
popa
imull
pop
stc
xchg
insl
cmpsl
push
lret
lods
popf
pop
jae
dec
cs
adc
call
call
adc
and
mov
adc
rcll
cmpsl
push
dec
push
loopne
fsubs
cmpsl
mov
inc
xor
dec
and
cmpsl
xchg
aad
sti
gs
and
jmp
aad
xchg
call
call
jo
ret
lea
sub
call
call
xlat
fcompl
xor
mov
pop
mov
ret
aad
out
das
out
out
das
repz
movsb
push
mov
scas
movsb
mov
call
call
jne
dec
unpcklps
cmp
es
push
fwait
pop
mov
cmp
dec
xchg
jmp
mov
std
lea
test
sbb
pop
mov
dec
pop
mov
movsb
idiv
adc
call
call
fimull
inc
mov
iret
test
fiadds
mov
mov
mov
div
ss
call
call
sbb
hlt
lret
shl
or
sub
repnz
pop
inc
ja
push
outsl
fildl
jecxz
pop
stos
out
push
mov
out
fistpll
arpl
nop
pusha
cmp
dec
scas
and
and
and
and
pop
or
outsb
in
data16
cld
mov
sbb
inc
mov
hlt
pop
xor
sub
ja
call
call
call
insb
sahf
das
lea
mov
xchg
pop
jmp
dec
cmpsl
loop
jbe
mov
and
and
and
and
and
and
and
sbb
int3
dec
fidivrs
inc
inc
call
xor
inc
addr16
lret
pand
jne
sub
xchg
out
cmp
call
call
call
jno
adc
rcll
leave
and
sbb
bound
mov
cltd
jno
ja
xchg
add
pop
sbb
mov
lret
shlb
sub
or
call
call
call
scas
lds
or
cwtl
sbb
call
call
call
push
test
and
insl
in
xor
jae
xchg
pop
nop
and
and
sub
lods
outsl
jp
scas
call
repz
lahf
fmuls
adc
sub
mov
pop
and
fsubrp
call
call
loope,pn
pop
fnsave
push
call
call
call
call
mov
mov
loope
inc
in
in
lahf
lahf
ficoms
xor
push
cmpsl
and
cmp
stos
sbbl
cmp
call
call
inc
loopne
mov
sub
nop
add
in
mov
mov
cmp
es
jge
and
and
and
and
pop
fidivs
or
bound
enter
loopne
cmc
inc
call
call
call
std
pop
pop
dec
les
repnz
popa
cli
mov
rol
mov
and
mov
sub
es
repnz
dec
mov
cmpsl
push
inc
repz
loope
call
call
insl
dec
dec
pop
jbe
and
and
and
and
and
fnstcw
push
and
dec
sbb
and
sbb
cmp
mov
fs
and
lods
sti
leave
mov
push
dec
sub
sub
test
xchg
jl
xchg
xorb
xchg
mov
sbb
call
call
push
aam
lea
sub
lods
adc
sar
sub
or
and
sbb
and
and
and
jae
ret
mov
ljmp
fimull
call
xchg
mov
add
arpl
cmpsl
arpl
shll
push
out
lods
popa
inc
mov
outsl
cmpsb
cmp
push
testl
fildll
pop
pop
test
call
call
call
test
or
in
jle
pop
pop
cld
jp
aam
inc
push
stos
int3
xor
inc
mov
push
mov
call
call
mov
mov
mov
jmp
and
and
and
and
add
jl
fsubp
pop
cmpsl
and
imul
call
call
aaa
xchg
xchg
out
fiadds
fidivrl
in
pushf
mov
pop
mov
ret
sahf
icebp
scas
adc
andl
mov
mov
sub
std
scas
call
call
btsl
subb
xchg
sub
and
mov
loopne
push
xchg
lods
gs
sbb
hlt
add
adc
in
and
into
jnp
adc
sbb
and
call
call
sahf
loopne
je
inc
dec
std
mov
fs
xchg
mov
xchg
in
add
xlat
outsl
shlb
mov
push
movsl
jp
push
jge
sbb
gs
lahf
cs
lahf
lock
call
nop
fstps
cmp
mov
xchg
loop
jge
cwtl
in
aad
outsl
jecxz
cmp
cmp
add
pop
xchg
sub
mov
sub
ffreep
xor
aas
adc
mov
sarb
int3
es
call
call
call
dec
shr
out
call
sub
or
xchg
test
shlb
pop
arpl
lahf
pop
sahf
add
add
cwtl
inc
scas
call
pop
cmp
xchg
mov
leave
and
or
call
call
nop
xlat
pop
repnz
fs
call
call
in
adc
aad
xchg
xor
sbb
shlb
notl
pop
scas
shll
and
and
and
mov
nop
mov
call
jmp
adcl
call
call
call
cmc
das
popf
pop
cmc
loopne
in
xchg
sbb
mov
xor
inc
push
push
andb
push
mov
in
call
lahf
dec
sbbb
xchg
xchg
out
xchg
xor
scas
xchg
cmp
or
loop
jl
iret
ret
push
mov
sbb
call
call
call
sbb
loope
call
call
call
mov
push
jecxz
aaa
pop
or
jb
jl
push
sahf
stos
jecxz
daa
mov
pop
scas
or
jbe
sbb
dec
mov
in
mov
mov
lock
loope
sarb
xchg
dec
add
jmp
es
call
filds
psubw
push
adcl
and
mov
adc
call
call
popa
aas
mov
mov
in
popf
mov
scas
add
jecxz
mov
call
call
aas
rsqrtps
jmp
mov
adc
shrl
inc
test
mov
push
pop
js
aaa
sub
inc
stos
pop
sbb
dec
test
mov
mull
mov
call
call
fucomi
call
call
call
call
cli
and
pushf
cvtdq2ps
call
call
dec
xor
mov
in
loopne
hlt
ljmp
jbe
xchg
repz
sbb
mov
cmp
sbb
movsb
push
jbe
xchg
imul
call
call
fbld
cmp
cli
pop
cmp
xlat
punpckldq
dec
and
mov
stos
loopne
nop
fcmovu
inc
ss
inc
add
mull
jno
jg
xor
mov
call
call
cmp
cmp
out
and
and
and
and
and
and
and
inc
dec
pushf
call
mov
jae
cmp
std
pusha
pop
mov
icebp
das
push
call
call
and
and
and
and
and
and
out
sub
and
push
divl
add
stc
mov
sahf
mov
incb
cmpsb
mov
pop
lret
and
adc
mov
call
call
arpl
adc
lahf
sub
pop
xor
xchg
xchg
mov
clc
xchg
sub
call
call
pushf
int3
fs
repnz
into
inc
addr16
aaa
xchg
and
xchg
cmp
dec
and
call
call
sub
shll
test
call
call
out
adcb
jmp
ja
push
xchg
xchg
negl
pusha
xchg
pop
mov
or
add
test
inc
cli
testl
lds
dec
push
pop
jnp
cmpsb
jnp
test
mov
into
mov
call
call
and
and
enterw
in
push
ret
inc
xchg
sar
xchg
pop
or
outsb
sbb
xor
jp
mov
sbb
movlhps
cmp
push
xor
call
call
sub
ja
jno
sar
movsb
pop
mov
call
call
sahf
add
arpl
jo
orl
mov
or
cmp
js
in
popf
dec
xor
into
sub
call
adc
call
call
call
iret
jecxz
mov
dec
lret
call
call
sbb
call
call
xchg
push
test
adc
adc
cmp
add
call
call
push
adc
std
xchg
ret
mov
jo
je
cmp
jo
jbe
mov
sbb
out
push
out
jp
dec
sub
dec
je
pop
cmpsb
or
faddl
push
add
adc
popf
push
inc
sub
mov
idivb
xchg
int
and
and
and
and
and
and
call
in
jne
jge
adc
jne
imul
call
call
mov
pop
jnp
sbb
push
mull
jle
xor
lret
adc
adc
dec
or
pop
aaa
mov
fdivs
dec
sti
cwtl
inc
push
adc
mov
dec
mov
jp
outsl
lret
call
call
call
adcl
inc
or
jmp
enter
adc
push
in
into
adc
call
js
or
rcrl
test
clc
jp
lret
jle
jp
and
sub
pusha
iret
cli
jo
pop
pop
ss
dec
call
call
call
daa
call
call
call
jecxz
loopne
pop
outsl
jg
and
jno
aam
mov
call
call
jmp
in
xlat
shlb
dec
movsb
les
adc
fs
arpl
aam
mov
jp
mov
add
imul
mov
sbb
dec
add
out
movsb
pop
pusha
mov
push
cmpsb
xchg
ret
std
xchg
leave
call
call
cmp
mov
divb
lock
and
in
addb
faddp
jne
push
es
in
icebp
sahf
xchg
shlb
and
arpl
frstor
out
and
push
sub
inc
mov
or
adc
dec
sbb
pop
jb
or
stos
cld
call
call
call
dec
jmp
sarl
pop
or
mov
sbb
into
xor
subb
std
lods
lea
push
aad
clc
sbb
lret
testl
push
call
call
call
and
and
and
and
and
and
xchg
roll
dec
movsl
mov
mov
pop
pop
ret
xlat
and
ss
push
lds
sbb
call
call
fstpl
adc
stc
imul
push
cmp
mov
push
fwait
add
sahf
jmp
bsr
in
out
add
or
call
call
call
call
push
xor
xor
and
and
and
aad
mov
dec
xchg
je
xchg
nop
push
lods
adc
mov
dec
insb
jge
sub
and
mov
pop
les
cs
pop
imul
dec
xchg
mov
cmp
sub
cmc
sbb
mov
push
insl
sub
push
dec
shr
call
call
call
push
push
adc
cs
xchg
adc
mov
ret
call
das
dec
cmp
adc
or
adc
xchg
aam
sbb
daa
repnz
sahf
out
in
cmp
push
test
add
inc
add
stos
call
add
lret
or
sub
call
call
call
push
xor
inc
xchg
dec
jmp
cmp
inc
jbe
cmc
daa
xor
inc
lods
imul
call
call
call
jno
ss
repnz
push
out
daa
mov
ljmp
mov
mov
clc
jg
and
rorb
push
sbb
cmpsl
sbb
or
push
stos
dec
jg
adc
jns
mov
xchg
lds
xlat
dec
ds
and
dec
xchg
psllq
mov
call
call
jae
idiv
cmp
xor
or
ret
adc
rcrl
mov
mov
lcall
fucomp
mov
data16
mov
lcall
mov
and
and
and
and
and
addr16
lock
inc
adc
jl
call
call
stos
sub
fdivs
call
call
call
aas
aaa
fmull
js
xchg
fstp
test
sub
ja
sub
mov
inc
mov
jl
push
out
add
test
test
push
cmp
repz
aad
movsw
cli
jecxz
jmp
fiadds
lds
sti
pop
filds
call
call
call
call
dec
inc
jl
add
setg
pop
mov
mov
pop
mov
push
subb
push
fadds
daa
xchg
mov
das
cld
cmc
sbb
sub
sahf
incb
mov
lret
test
incb
and
je
xchg
aam
push
clc
call
call
call
cmc
xchg
xor
cmp
insl
fcomps
je
adc
insl
mov
shlb
call
and
and
and
and
fmull
out
insb
adc
mov
and
and
and
movsb
jbe
jae
icebp
push
jb
jle
scas
fs
bound
mov
mov
addb
call
call
push
jo
hlt
mov
push
fimull
daa
shlb
fdivs
mov
fs
adc
lods
ljmp
cli
out
xchg
fiadds
enter
mov
call
call
xchg
loop
gs
adc
push
jmp
mov
nop
fldcw
inc
arpl
mov
mov
cli
mov
pop
jg
aad
ljmp
and
and
and
and
or
push
icebp
fmull
xor
popf
mov
or
sub
jne
add
cmc
hlt
add
call
call
jecxz
aas
or
ljmp
push
rcr
cmp
add
mov
mov
ret
rorb
xlat
call
call
call
or
movb
xor
int3
out
sar
fildl
and
jno
out
jns
mov
push
push
cmp
movsb
cli
je
pop
jno
add
call
call
lret
cwtl
pop
sbb
sbb
stos
imul
push
int
cwtl
or
lea
cld
push
pusha
clc
and
fdivrs
repz
enter
call
call
test
fs
cwtl
fists
mov
in
jo
es
in
jne
jb
aam
xchg
push
lcall
icebp
xchg
leave
in
dec
in
add
add
repnz
adc
nop
add
call
call
pop
popa
call
call
call
jp
push
xor
addr16
call
call
call
dec
xchg
sub
sub
int3
jbe
sub
mov
mov
push
loopne
push
out
lods
mov
lods
es
add
ljmp
push
daa
push
xor
call
adc
loope
pop
fdivrs
add
push
push
inc
int
or
adc
imul
and
inc
sarb
push
push
lret
push
jb
int
movsb
in
out
hlt
cmp
bound
mov
ja
call
call
inc
xchg
dec
push
jo
jg
sub
jb
pushw
push
mov
mov
dec
xor
jl
jns
call
call
loopne
mov
adc
sub
nop
pop
into
lcall
pop
rcll
mov
pusha
repz
bound
call
sti
push
adc
sbb
push
fildll
adc
ja
jae
mov
and
and
and
and
and
and
mov
adc
ret
call
call
je
dec
push
mov
cs
daa
call
call
call
call
pushl
cltd
cmp
push
inc
sahf
dec
cmpl
inc
out
mov
lahf
push
in
ja
mov
into
sbb
jne
fisubrs
pusha
jle
add
mov
sbb
dec
repz
jns
iret
push
dec
mov
clc
ja
and
addl
sbb
iret
push
call
call
call
mov
inc
in
mov
xchg
cmpl
mov
xor
add
mov
call
call
lds
pop
aaa
dec
idivl
mov
jae
mov
mov
cld
lahf
leave
orl
mov
mov
call
call
cli
mov
call
call
call
inc
repz
rcrl
or
lahf
mov
jae
and
lahf
jns
jo
fisubs
add
xchg
clc
das
sbb
imul
call
adc
lret
mov
adc
push
xor
and
push
out
pop
rorl
sti
out
jmp
jno
mov
xor
inc
test
rorl
loopne
xor
sub
out
cmp
call
call
xchg
pop
sar
mov
inc
dec
push
adc
xchg
insb
adc
push
js
mov
icebp
rorl
push
loope
stc
cli
jno
mov
xor
fmulp
sub
or
out
dec
cmp
lock
lock
fsts
or
dec
pop
sub
sub
in
lcall
push
mov
mov
call
call
call
xor
aad
jo
cmp
mov
das
lods
mov
sub
sub
pop
push
mov
out
pop
add
inc
ja
inc
cmpsb
and
and
and
and
and
and
or
sti
push
out
xchg
xor
xor
inc
push
mov
dec
call
call
repz
mov
mov
cmpsb
push
inc
or
ror
aas
xchg
sbb
sbb
call
call
and
stc
push
loopne
das
sbb
jl
int
ret
test
push
cmp
jb
mov
pop
rcll
call
call
and
jne
xor
and
popf
mov
popa
fstpt
mov
mov
add
aas
psubsb
std
movsb
sub
sub
popa
push
stos
mov
sbb
scas
call
loopne
jns
cmp
call
call
data16
xchg
test
hlt
fs
clc
pop
inc
aas
out
xchg
or
push
int
sti
push
testb
test
push
and
and
and
and
call
call
call
mov
and
and
and
and
js
ror
cmp
jp
fdivrl
rcll
pop
mov
mov
out
daa
loopne
add
nop
or
out
data16
add
sbb
rclb
out
mov
call
call
push
test
call
push
or
jns
push
or
dec
pop
dec
rcll
dec
add
mov
addb
xchg
sbb
notl
fldz
lret
fcmovnu
rclb
xchg
test
add
call
call
test
repnz
ss
xor
adc
cmp
pop
pop
push
das
sbb
blci
mov
pop
cmp
jl
and
out
std
pusha
and
push
pop
jne
add
fldt
stc
push
aas
xchg
aam
mov
pop
pop
or
sahf
call
call
call
fs
dec
push
mov
gs
jl
mov
bound
push
lods
pop
inc
ja
pop
sub
pushf
out
and
add
add
aaa
popf
test
cwtl
push
mov
call
call
and
and
and
and
and
dec
jae
iret
mov
mov
sbb
jg
mov
sbb
pop
pop
adc
int
jns
out
insb
leave
scas
and
cwtl
jbe
leave
pop
les
movsb
pop
lret
or
sub
call
call
call
jb
or
pop
fs
lods
jbe
mov
push
pop
jns
sub
fdivrs
fcompl
jge
push
or
sub
pop
xor
lock
jmp
mov
sub
add
call
call
call
pop
cmp
ret
popa
mov
mov
das
mov
subl
adcl
ljmp
dec
enter
cmpsb
xchg
push
mov
xchg
add
fdivrl
call
call
mov
fcompl
adc
popa
movl
pop
out
add
sub
pop
inc
and
jp
ljmp
xchg
dec
and
pop
and
xchg
mov
push
aam
je
pusha
or
in
aad
repz
insb
imul
pushl
imul
call
call
mov
jnp
dec
pop
sub
cs
enter
stos
mov
call
inc
pop
aad
mov
adc
movsl
mov
call
call
call
popa
adc
lret
add
call
call
pop
add
lea
xchg
iret
loopne
cmp
negl
or
out
xchg
pop
sub
mov
mov
fistpll
xor
jge
lds
in
pop
bound
test
mov
sarl
add
call
call
into
in
lods
nop
mov
aad
cli
push
fistpll
or
int3
jns
xor
mov
aam
jno
stos
cwtl
das
addr16
out
jmp
inc
add
icebp
vmulsd
scas
ljmp
and
and
and
in
or
mov
call
and
test
sub
icebp
arpl
mov
call
call
roll
rcrl
je
or
shlb
push
jne
jae
hlt
ja
xlat
je
jb
xchg
movsl
ss
cwtl
adc
stos
inc
dec
stos
sbb
mov
call
call
or
aad
push
pop
hlt
ret
dec
prefetchwt1
cmp
cmp
dec
xor
xlat
sub
jge
pop
push
dec
sbbl
addb
xchg
in
mov
or
int
jle
mov
inc
mov
call
call
mov
daa
shll
and
cmp
and
int
movsb
push
jmp
dec
dec
insl
and
mov
mov
push
call
call
cs
call
push
mov
stos
mov
cld
jns
ja
outsb
adc
jb
ds
sub
pop
imul
call
call
jl
sbb
mov
insl
push
or
leave
dec
out
or
sub
decl
mov
bound
pop
mov
lea
mov
in
popl
fstps
push
sub
test
aas
cwtl
fwait
mov
call
call
jge
inc
lods
xchg
hlt
std
loop
pop
pop
sahf
bound
js
and
xchg
aaa
fs
push
cmp
cli
dec
pop
sub
push
push
inc
enter
or
pop
call
call
jmp
sahf
adc
and
and
and
and
and
and
and
and
fxtract
rclb
call
call
cmp
adc
cmp
jecxz
fstps
sub
mov
movsb
rolb
add
xor
sar
inc
dec
in
icebp
adc
jmp
and
insb
ss
push
dec
or
xchg
popa
rcr
inc
cwtl
imul
outsb
and
call
call
shlb
xchg
xchg
pop
inc
xchg
mov
jecxz
mov
fdivrp
and
push
jmp
add
cmp
cmp
lahf
dec
push
cmpsb
mov
push
call
test
and
ret
call
call
pop
xchg
lahf
inc
xchg
mov
sbb
in
ret
outsl
adc
lret
rolb
pop
pop
aam
xor
add
push
adc
push
fcomi
call
cmp
inc
lods
xchg
lods
mov
out
aam
dec
pop
jecxz
lret
mov
push
popa
lahf
dec
push
lahf
sub
pop
int
mov
jnp
call
call
mov
cmpsb
add
mov
fdivrl
pop
mov
xor
add
or
push
dec
movsl
cwtl
dec
insb
xlat
mov
out
pop
cmc
mov
mov
xor
out
call
call
call
cmp
out
sub
icebp
pop
lcall
daa
mov
sbb
call
call
push
cmpsl
sbb
ss
jne
int3
dec
fsubs
add
jg
rclb
stc
pop
dec
aad
mov
imul
or
jne
ret
xchg
cli
xor
sbb
gs
inc
out
mov
inc
fiadds
pop
stc
aas
cmpsb
lea
dec
mov
pop
inc
out
ret
call
call
call
lret
mov
call
call
pop
push
fsubrl
icebp
adc
into
sub
dec
mov
ficomps
or
sti
mov
clc
roll
and
and
and
and
and
and
and
and
xchg
std
sahf
stos
or
or
retw
out
jne
sub
dec
cmp
jecxz
lret
leave
aad
fiadds
ja
nop
push
call
call
or
jne
stos
inc
xor
iret
xchg
rol
pop
sbb
das
lret
int
inc
jb
sbb
cld
gs
sub
lods
add
and
call
call
mov
mov
call
call
add
call
call
dec
cld
push
mov
xchg
call
call
call
test
bound
dec
push
xor
mov
jns
movsl
pop
subb
test
out
out
jg
xchg
mov
dec
stos
add
or
fs
clc
and
inc
cld
add
dec
test
mov
insl
pop
jl
call
call
sub
pop
popf
addb
jbe
sbb
xor
mov
sahf
insl
xchg
pop
insb
push
stos
clc
jbe
popf
mov
shrb
ds
sub
xchg
in
push
xor
es
shrl
jbe
jmp
aaa
inc
xor
call
call
adc
movb
and
shl
loop
mov
mov
aaa
dec
mov
insb
push
dec
dec
call
call
call
adc
add
dec
es
test
or
add
or
pushl
xchg
inc
std
sub
mov
dec
aaa
int3
imul
int
and
and
and
and
xor
call
cmp
iret
das
cmp
ret
cmp
push
adc
inc
jo
mov
and
mov
sub
dec
push
add
scas
jne
adc
inc
pushw
cld
sbb
bound
les
adc
jns
mov
dec
rorb
scas
xchg
xor
mov
call
call
push
or
and
mov
xchg
andl
repz
idivb
aas
bnd
cmp
flds
ja
enter
xchg
cs
xor
insl
insl
arpl
test
cmp
call
inc
loope
mov
fldt
cmpb
adc
cmp
decb
cltd
lock
jmp
call
call
stos
mov
push
mov
je
mov
jo
movl
sti
mov
jmp
cltd
mull
pop
inc
jmp
cmc
mov
call
call
and
and
and
and
and
and
and
and
cltd
pop
call
call
call
sub
movsl
outsb
inc
sub
jno
cli
and
add
xchg
scas
xor
add
lret
fadds
dec
es
cmpl
call
call
divl
pop
mov
jl
dec
mov
adc
ljmp
mov
and
adc
or
fstl
call
call
movb
fwait
dec
ja
stos
ljmp
call
call
call
xchg
daa
cmp
push
push
insl
roll
pushf
popa
ret
sbb
xor
call
call
adc
call
call
loop
sahf
cmpsb
inc
jno
dec
inc
jo
cmp
call
call
call
es
sub
aaa
adcl
pop
test
bound
call
call
iret
pushl
push
add
xlat
jne
xchg
xchg
mov
insb
xchg
call
call
call
pop
sarl
je
lret
loop
lret
xor
sub
cmp
or
jge
loope
sbb
insl
sbb
add
into
add
mov
pop
xchg
mov
jo
std
loop
mov
xor
rcll
cwtl
jge
dec
fisubrl
sbb
inc
sub
xor
std
cs
loopne
call
call
fdivrs
adc
iret
xchg
or
push
jo
sbb
mov
cwtl
aaa
mov
push
call
call
sar
movnti
and
movsb
into
push
daa
push
jmp
xor
mov
std
ds
add
outsb
fs
pop
and
cltd
fldt
call
cmp
lods
sbb
inc
movsb
ja,pn
fsubr
call
call
push
mov
push
ds
push
lret
jle
test
callw
call
jmp
inc
call
call
ljmp
mov
mov
mov
lret
mov
dec
or
push
jb
lods
ljmp
daa
mov
pop
jns
imulb
call
call
or
and
and
and
and
xchg
imul
ret
inc
test
aas
xchg
push
negl
cwtl
repnz
push
sub
cmp
sbb
adc
lret
scas
pop
cmpsb
incb
popl
bound
and
inc
sbb
jno
xor
call
call
mov
mov
lds
fwait
in
sub
idivb
jo
inc
inc
imul
dec
mov
pop
in
aad
add
pop
xchg
outsb
int
adc
fdivr
jecxz
test
mov
movsb
push
sub
stc
inc
jecxz
mov
cmc
in
mov
mov
loop
lret
push
dec
adc
jg
imul
call
loopne
in
mov
outsl
std
push
fisttps
sbb
xchg
pop
pop
cwtl
ret
mov
les
leave
and
imul
data16
clc
and
jp
adc
push
push
push
int
xor
adc
push
fwait
mov
pop
in
inc
mov
call
call
call
pop
and
and
and
and
and
call
cmp
cmp
scas
ds
aas
or
call
call
call
mov
mov
sub
xchg
sub
push
jge
bound
jg
add
out
sar
popa
mov
js
cmpsl
inc
mov
stos
subb
dec
mov
clc
aas
std
out
mov
shll
call
call
push
push
adc
lods
dec
inc
push
into
dec
dec
aam
mov
pop
rcrl
pop
int3
mov
or
jp
frstor
adc
mov
je
aaa
mov
call
call
test
sti
popl
and
xor
fs
jmp
or
mov
and
xor
lcall
stos
inc
aam
mov
call
call
jae
in
bound
jae
inc
sbbl
cmp
int3
pop
xorl
add
and
mov
lea
push
add
ss
inc
lret
xchg
pop
and
call
call
mov
mov
mov
push
stos
and
adc
jecxz
nop
jnp
clc
jecxz
xor
sub
movsl
daa
dec
jmp
call
call
js
and
and
and
mov
mov
cmpsb
hlt
jo
clc
sub
daa
popf
sub
mov
mov
fldenv
and
and
and
and
and
and
in
jecxz
fsubrl
rorb
push
xchg
dec
sbb
sbb
jg
scas
call
call
das
js
pop
mov
xor
adc
fistpl
xor
dec
iret
mov
call
call
call
push
scas
call
call
imul
pop
adc
mov
call
call
call
pop
dec
cmp
mov
inc
mov
call
call
adc
sub
mov
pop
pop
mov
dec
mov
mov
in
mov
xor
dec
mov
call
call
pop
push
pop
ret
lcall
call
adc
inc
les
mov
and
mov
aam
je
sub
pop
scas
mov
jb
call
call
call
xor
xchg
adc
push
mov
lods
aad
sub
lahf
into
arpl
push
sbb
adc
daa
pop
das
movsb
test
pop
pusha
fs
dec
pop
xchg
cmc
clc
jnp
add
dec
rcrb
mov
jbe
out
pop
fs
push
mov
insb
das
push
xor
leave
jae
add
das
adc
movsb
mov
add
pop
rorb
lret
mov
add
lds
inc
sbb
adc
adc
loop
sarb
call
call
mov
jge
add
add
mov
adc
mov
jbe
pop
adc
sub
shlb
sub
js
aad
iret
pop
jecxz
cmp
cli
sbb
lret
pop
rorl
loop
int3
call
pop
int
add
inc
cmp
ss
in
xor
jg
call
call
call
call
int3
inc
addr16
push
lods
or
xor
repnz
and
and
and
sbb
push
pop
sbb
andb
mov
pop
mov
call
call
call
aam
ds
call
call
fs
frstor
sub
mov
fldenv
or
sahf
add
lock
xchg
mov
testl
jno
fistpll
adc
xchg
pop
inc
enter
loope
sbb
shrb
aas
or
out
call
push
pop
loope
insb
jecxz
and
mov
call
call
call
fiadds
insb
xchg
push
jnp
out
das
and
and
and
and
and
nop
or
inc
call
call
sti
adc
out
push
jb
fst
inc
aam
cltd
jmp
sbb
cld
std
sub
out
in
aam
and
inc
iret
out
mov
xor
sub
mov
or
inc
mov
add
call
call
shrb
insb
mov
push
or
mov
push
xor
lahf
xor
call
inc
enter
in
fmul
aaa
xchg
bound
pop
fsubr
call
call
inc
gs
lea
fidivl
call
adc
inc
cmp
add
cmp
cmp
lods
scas
mov
sbb
sub
jns
sbb
test
or
imul
call
jmp
lret
xor
jae
fdivrs
aas
or
movl
xor
lds
mov
and
roll
rolb
sub
push
and
jno
filds
dec
sbb
fcmovu
xchg
xor
jp
push
call
call
pop
jb
pusha
adc
jecxz
bound
pop
imul
push
mov
das
jg
adc
pop
jl
cmp
push
and
mov
out
xchg
mov
pop
fcmovbe
scas
insl
scas
cli
test
sbb
mov
call
inc
lods
loopne
mov
push
add
push
popl
or
mov
dec
lds
sti
rol
inc
ja
mov
xor
sub
pusha
jp
mov
out
mov
xor
das
call
call
call
push
bnd
xor
ja
mov
mov
gs
dec
and
adc
js
push
call
push
rol
fsubs
ret
shlb
loop
call
call
lds
ret
mov
sbb
and
and
and
and
and
and
sub
inc
sbb
call
push
call
call
call
call
jb
es
pop
and
call
call
xchg
cmp
call
jmp
pop
pushl
mov
cwtl
mov
cmp
in
andb
mov
sbb
inc
enter
push
stos
int
jb
call
call
in
fdivrl
add
jo
push
bound
cwtl
mov
in
push
sbb
jl
out
out
adc
lret
aaa
call
call
call
pop
push
jmp
xchg
mov
adc
add
call
call
lret
adc
lcall
ja
sub
gs
lock
and
mov
out
loopne
popa
fwait
rcrl
xor
test
push
fimuls
call
call
xchg
jle
push
or
mov
push
call
call
xor
clc
pop
repnz
les
pop
push
and
sub
insl
jl
shll
es
xchg
mov
loopne
gs
or
data16
mov
adc
xchg
out
add
jge
stos
cmpsb
pop
cmpsl
mov
std
outsl
rcll
call
call
movsl
stc
push
into
mov
mov
addr16
push
cmp
insb
idivb
mov
xchg
add
inc
addl
dec
in
scas
cmpsb
sbb
fs
add
mov
insb
bound
cmpb
xchg
lods
adc
add
lea
enter
cmpsl
call
call
cli
imull
push
lock
push
ds
adc
call
call
push
scas
and
and
and
and
and
and
and
and
pushf
pop
inc
hlt
jns
data16
jp
push
jp
push
mov
dec
cmp
and
call
enter
dec
push
and
and
and
and
popa
and
and
and
and
and
and
shrl
pop
push
cmpsb
dec
movsl
es
jle
pop
mov
lcall
call
add
cld
and
and
and
and
jp
fisttpl
mov
imul
mov
jmp
decl
add
jl
push
sub
pop
xor
call
call
pop
scas
inc
xchg
mov
add
or
mov
jge
xor
rorl
pop
sbb
and
cmpsl
inc
adcl
enter
mov
sahf
push
sbb
xor
xor
xor
call
pop
dec
dec
je
popf
mov
loop
adc
or
stc
rol
and
call
call
call
xor
lods
scas
inc
gs
jg
fmul
sti
xchg
xchg
or
stc
mov
jb
shlb
loop
dec
je
call
call
call
mov
call
call
insb
inc
mov
lret
adc
dec
loop
mov
sub
sbb
mov
push
repz
out
xchg
fisubrl
into
aam
lret
xor
dec
add
or
idivb
stos
xchg
lds
xchg
cmp
movsl
or
fmuls
andb
mov
or
call
call
push
aaa
and
icebp
loop
xchg
ret
inc
aas
push
cmpsl
inc
xchg
push
subl
dec
decb
mov
test
adc
add
mov
je
inc
push
popa
imul
call
call
and
and
and
and
sbb
aam
fs
jp
popa
sbb
pop
rol
push
out
sub
xor
call
jne
int
mov
xor
and
stos
push
and
jb
hlt
sub
xchg
call
std
outsl
or
pop
je
inc
or
push
adc
negb
sub
les
shll
call
call
loope
fucomi
call
call
pop
popa
lret
insl
leave
dec
and
add
call
call
jecxz
dec
imul
sbb
mov
mov
subl
aad
pop
and
cmp
jl
subl
inc
dec
or
call
call
call
sbb
pushf
imul
inc
in
cmp
insl
sub
inc
fs
inc
jbe
adc
ds
jb
scas
scas
pop
movsb
pop
fdiv
ret
leave
fwait
dec
icebp
xor
imul
dec
inc
fistpll
inc
inc
and
cmp
mov
pop
push
push
stc
fldenv
lea
fidivrs
call
call
int3
dec
mov
mov
insb
push
jbe
test
lds
sbb
call
mov
sahf
jb
into
mov
lret
jecxz
cwtl
lahf
popa
pop
insb
mov
dec
xor
mov
call
push
xchg
ficoms
dec
mov
repnz
mov
addl
out
nop
ja
add
jbe
mov
call
cmp
call
call
call
lds
call
call
call
adc
jecxz
fwait
in
ffreep
sbb
push
andl
mov
fisubrl
into
or
jg
jno
jg
dec
neg
cmpsl
dec
js
call
call
icebp
xlat
adc
rclb
jmp
test
push
adc
adc
shrl
adc
imul
sbb
ss
pusha
add
sub
sbb
and
and
and
and
jo
jno
aam
test
ret
mov
cltd
adc
stos
add
pop
adc
xchg
call
call
les
scas
sub
pop
mov
std
pop
outsb
cmpsl
bound
icebp
push
mov
pop
scas
push
aam
lret
arpl
or
shrb
ds
sub
ss
mov
pop
out
pop
jp
add
ljmp
call
call
call
cmp
call
call
daa
lret
push
jl
mov
xor
pop
sub
rol
ret
pop
inc
ror
stos
adc
sbb
push
push
insb
jmp
or
xor
sub
mov
jmp
push
jp
dec
mov
jge
add
shlb
cmp
aam
xchg
imul
call
call
mov
lock
arpl
call
ret
adc
push
lods
scas
mov
shrl
and
inc
lcall
out
pop
stc
cmp
mov
xchg
movsl
fsub
push
pop
stos
xchg
xor
subb
call
call
call
jne
leave
or
mov
call
call
out
fmull
mov
jl
push
repnz
jle
mov
jg
or
aad
gs
inc
pusha
cmp
jge
and
gs
clc
inc
jle
mov
add
and
fadds
loope
xor
movl
aaa
add
stc
shll
test
push
jae
call
call
mov
mov
mov
jae
sbb
xor
pusha
mov
test
push
repnz
call
call
call
call
aaa
mull
lods
adc
cld
inc
adc
lcall
mov
call
call
fisubl
pop
fdivrl
shll
push
in
stos
or
cmpsl
xor
xchg
push
adc
mov
cmc
mov
imul
mov
push
hlt
or
test
xchg
out
xor
int
and
push
push
and
and
and
and
aad
adc
pop
push
es
scas
call
call
call
cmpsb
stos
lcall
push
sub
add
xor
jnp
call
call
subb
orl
pusha
sbb
inc
fs
out
adcl
mov
adc
in
scas
mov
es
bound
mov
call
call
jo
into
dec
lret
mov
push
int3
shlb
adc
outsb
jne
jns
or
lods
addl
push
mov
loop
mov
xchg
popf
call
call
call
jp
fs
mov
mov
movsl
cmp
inc
jmp
xchg
lods
sti
or
cltd
sbb
xorb
dec
push
sbb
ror
mov
and
and
and
and
and
and
cmp
or
mov
push
xlat
lahf
pop
stc
cmp
sub
stos
es
les
and
mov
call
call
call
push
mov
ja
pop
lds
add
aas
data16
lret
mov
out
inc
dec
in
bound
test
mov
mov
inc
lock
mov
xlat
xchg
ljmp
int3
mov
cs
in
ficoml
call
call
adc
xor
xlat
arpl
push
orl
jae
and
inc
dec
xchg
div
mov
aam
test
xchg
ds
call
call
jns
loope
cld
push
movsb
out
add
out
xchg
or
pop
jg
jb
ficoms
rol
insl
or
xchg
mov
push
rorl
call
call
call
push
fdivp
cmp
idivb
jmp
aad
iret
xor
push
sbb
out
in
sar
pop
fs
rolb
ljmp
ds
jecxz
fsubrl
jg
inc
ret
mov
cmp
pop
rcr
shl
pushl
mov
imul
call
call
call
xor
out
xchg
mov
pushf
xor
out
xchg
dec
insb
test
dec
xor
and
xchg
push
rcr
out
mov
push
pushl
jno
mov
push
movsl
push
and
leave
cld
cmpsb
jnp
inc
mov
and
sbb
sub
call
sbb
jg
push
adc
push
mov
movsl
cmp
and
and
adc
pop
frstor
mov
cwtl
mov
das
test
call
call
popa
pusha
in
mov
stc
ja,pt
movsb
movsl
mov
lods
and
xor
lret
mov
imul
inc
imul
mov
test
push
push
add
or
cld
xchg
data16
xchg
xchg
sub
mov
pop
je
lret
lods
or
mov
mov
out
pop
call
or
call
call
jle
adc
cmp
hlt
and
dec
sbb
aam
or
and
adc
jnp
cli
push
and
adc
xor
inc
jecxz
gs
cmpsl
mov
jae
sahf
push
sbbb
and
call
call
roll
and
and
and
and
and
or
in
mov
add
in
pop
inc
mov
or
and
push
mov
mov
push
sub
sbb
add
mov
push
cli
or
icebp
cs
add
cmp
insl
ds
enter
in
adc
divb
xor
call
call
lods
popa
aaa
loope
sub
lcall
sbb
shr
mov
adc
and
adc
into
xor
ljmp
mov
pop
and
mov
call
call
mov
xchg
les
int3
add
std
push
jae
adc
int
ret
mov
pop
fstpl
int3
jnp
mov
bound
insb
loop
mov
cmpsb
aad
cwtl
cltd
lahf
outsl
adc
push
and
out
jmp
mov
ret
cmp
inc
call
call
or
xlat
testb
jecxz
pop
pop
dec
nop
add
loope
int
sbb
jle
shl
xchg
pushf
and
add
xor
xor
and
imul
jae
out
in
std
lods
mov
push
xor
mov
daa
add
scas
fsub
clc
mov
call
call
call
es
push
sbb
xchg
or
int
push
test
dec
iret
nop
nop
ficompl
xchg
daa
data16
inc
mov
mov
call
call
sbb
aas
fdivrs
fcomps
movsb
sbbb
mov
and
and
and
and
and
and
pop
dec
jg
jb
inc
mov
mov
std
mov
cmp
cmpsl
push
lahf
fs
call
mov
call
enter
insl
jb
leave
xor
loope
rcll
fstpt
xchg
dec
hlt
test
dec
sbb
xchg
lods
push
jmp
add
ror
idivb
cltd
mov
xchg
mov
call
call
jno
adc
pop
test
sbb
popf
in
jae
xor
stos
into
inc
add
xor
or
ds
adc
cltd
push
inc
call
call
mov
test
add
xor
aad
bound
testb
push
repz
cmp
dec
jae
push
jae
push
test
lock
int
hlt
call
cwtl
pop
loopne
sbb
call
call
test
pop
cld
outsl
dec
mov
or
call
and
and
and
and
and
and
aaa
mov
jns
sub
call
call
aas
xor
and
or
out
test
push
pop
hlt
mov
push
add
lds
sbb
pop
inc
add
and
nop
insl
pop
or
mov
xchg
ja
and
and
and
and
nop
fcoml
sbb
xchg
mov
leave
jp
lret
mov
lret
cmc
call
call
call
mov
cmp
ljmp
lods
mov
and
and
pop
out
test
pop
and
cmp
sbb
mov
adc
lods
and
cmp
test
and
mov
bound
movsl
or
call
rorl
fs
mov
and
and
ret
inc
push
pop
loopne
test
fstl
xor
cmp
sub
arpl
subb
dec
fwait
mov
xchg
popa
aas
add
call
xchg
call
push
in
sbb
fdivrs
or
mov
or
popa
mov
aaa
pusha
pop
jnp
push
push
pop
cs
dec
jge
mov
daa
or
xorb
and
sar
mov
repnz
cmp
sub
push
push
xchg
sub
call
jne
mov
loope
ljmp
cmp
jl
pmulhuw
mov
sarl
fidivrl
sbb
pop
cld
pop
in
insb
xor
adc
popf
iret
sub
call
call
call
pusha
lods
icebp
adc
xchg
jae
subb
in
push
add
mov
fsubl
adc
or
movsb
or
call
call
call
and
adc
pop
cmp
sub
imul
imul
pop
ret
push
pop
insl
clc
test
jno
jne
dec
cltd
pop
movsb
icebp
mov
fisubs
and
mov
fidivrl
and
loop
popf
jge
adc
xchg
out
cmp
cmp
outsb
out
jp
adc
add
outsl
call
call
popa
loope
call
call
pop
mov
and
in
testb
mov
das
push
inc
mov
inc
lods
dec
shlb
call
push
ds
lahf
push
popa
data16
xor
sub
lahf
mov
in
inc
cmc
outsl
aad
int
pop
xsha256
cmpsb
adc
fadds
and
and
and
and
out
adc
pop
or
inc
cmpsl
clc
mov
or
pushl
sti
inc
add
adc
call
call
call
sbb
popa
aas
push
test
sub
mov
pop
jae
rol
hlt
jecxz
mov
sbb
out
dec
jbe
in
call
call
popa
mov
xchg
mov
clc
sti
jp
clc
mov
movsb
fldt
jg
bound
sub
loopne
stos
mov
fisubrl
outsb
scas
jnp
lcall
bsr
and
imul
inc
call
call
add
dec
xor
mov
push
adc
imul
aad
int
scas
lret
adc
inc
insl
mov
icebp
add
pusha
mov
push
mov
bound
jae
std
cmpsb
mov
lcall
sbb
call
call
and
and
and
and
and
and
and
fs
aam
push
les
loope
mov
call
call
inc
pop
and
iret
jmp
arpl
adc
fisubs
enter
inc
xchg
push
sub
xchg
out
iret
jnp
jno
and
fs
lret
stc
fs
divb
push
adc
sbb
out
in
jmp
mov
popa
add
jo
pop
outsb
sbb
call
call
xchg
lea
xor
int3
es
jge
daa
stos
mov
out
pop
fdivl
lcall
call
call
call
fstp
pop
jae
and
sbb
adc
fdivs
pop
or
call
call
call
and
jg
or
jae
addr16
in
sub
sbb
cmp
mov
mov
pop
push
push
mov
fs
mov
push
sbb
inc
out
scas
xchg
sahf
in
inc
call
call
dec
mov
andb
and
idivb
cmp
sbb
rcrb
cwtl
jb
fmull
out
xor
pop
int
jns
insb
sbb
cmp
stos
stos
fcompp
dec
jae
push
and
cmp
sub
call
call
sti
in
dec
xchg
and
mov
sbb
clc
mov
mov
rolb
insb
and
lret
in
test
mov
add
cwtl
lock
fstp
sbb
divb
pop
dec
adc
xchg
jecxz
or
adc
inc
or
movsb
call
call
cmp
pushl
fsubr
call
call
call
xor
stc
jo
loopne
lea
xchg
imulb
sahf
outsl
xor
pop
stc
jne
and
add
pop
mov
mov
push
dec
lret
lret
call
je
out
fdivl
sarl
jbe
jg
call
call
call
aas
aam
mov
fsubs
and
and
and
and
push
notl
and
imul
call
call
aas
mov
call
call
call
mov
into
fld
loopne
dec
js
push
das
mov
in
ja
xlat
insl
mov
rol
movsl
call
call
mov
repnz
cwtl
out
add
test
add
cmpsl
jnp
call
call
call
call
call
sbb
sub
pop
daa
idivb
dec
or
sbb
pop
andl
cli
mov
call
call
sbb
mov
push
loop
mov
sub
push
mov
call
call
or
jno
jge
dec
sbb
jno
jl
dec
cmp
xchg
sub
call
call
fimuls
xchg
push
pushf
and
push
in
test
jmp
push
jnp
movsb
dec
leave
push
dec
push
arpl
adc
out
cld
jp
pop
sbb
mov
int
ss
sbb
mov
js
sbb
xor
test
dec
mov
sbb
call
call
push
mov
jno
outsb
mov
in
mov
arpl
lock
push
jbe
push
sub
int3
call
call
cs
clc
or
sarl
fwait
or
push
pop
and
fs
call
call
xor
and
and
inc
inc
pop
jbe
lds
xlat
ljmp
xchg
mov
enter
dec
pop
mov
and
call
call
mov
lahf
or
cmp
jg
xor
cmp
ljmp
call
call
call
sub
mov
push
ret
sbb
mov
push
popf
adc
mov
aam
jl
imul
add
js
ret
and
rcrb
xchg
notl
out
sbb
lahf
enter
insb
pop
mov
inc
mov
out
dec
mov
cli
repnz
pop
or
inc
add
and
and
and
and
imul
bound
mov
xchg
adc
js
cltd
movb
les
mov
enter
mul
mov
mov
call
call
call
mov
cmc
std
mov
xchg
sbb
add
and
push
std
int
xchg
enter
aad
dec
dec
in
hlt
dec
add
or
sar
push
dec
pop
call
call
call
imulb
xchg
fbld
mov
lret
xchg
scas
imul
sub
stos
lret
jo
rcll
mov
cltd
add
xchg
in
in
mov
xchg
sbb
mov
fwait
add
loope
push
xchg
call
call
lahf
xchg
imul
sbb
lahf
mov
call
call
lcall
mov
call
call
leave
xchg
dec
fldenv
jl
pop
ljmp
push
in
rolb
lock
jae
ds
mov
jle
push
cmp
dec
les
dec
dec
in
and
jb
cli
jmp
xchg
cmpsb
jb
add
jl
cmp
popa
nop
jno
mov
call
call
pop
lret
adc
call
call
call
lahf
sbb
sub
cmp
cltd
mov
testl
call
call
xchg
adc
cmc
xchg
xchg
and
add
mov
aaa
call
bound
fwait
stos
sub
and
fmul
mov
movsb
inc
shll
nop
mov
pop
lcall
push
ss
loop
cltd
jl
xchg
sahf
cmp
sahf
call
call
call
arpl
add
scas
xor
notl
bound
or
mov
fwait
sub
xchg
lcall
mov
xchg
loope
lret
add
sbb
call
call
insl
cmp
sbb
and
and
and
sahf
and
sub
loope
loopne
inc
cwtl
xchg
or
sbbb
and
or
jmp
pop
mov
xchg
fiadds
xchg
pop
push
add
cmp
and
and
and
and
and
cmc
adc
pop
call
call
fstpt
jns
adcb
add
addr16
cmp
ljmp
dec
mov
mov
jge
push
sub
jo
pusha
fimull
neg
ffreep
lea
pushf
push
lock
dec
aam
insl
xchg
mov
mov
es
inc
mov
xchg
call
call
lods
mov
fadds
fldz
jbe
xlat
jae
push
shr
fidivs
and
and
and
and
xor
pop
and
xor
clc
adcl
mov
ljmp
pop
insb
fisttps
cmp
pop
pop
outsb
and
jae
xor
xor
dec
dec
call
call
call
shlb
in
cmp
mov
or
dec
test
in
call
call
call
in
call
call
adc
sub
pop
out
call
push
push
dec
pop
cmpl
call
call
mov
push
push
fcomps
cmp
sarl
cmp
jg
call
call
call
call
pop
call
call
sbb
cmpb
sub
repnz
fwait
loopne
and
and
and
and
and
sbb
movsl
movsl
add
call
mov
sbb
xlat
scas
ds
mov
mov
push
pop
mov
or
stc
leave
loop
hlt
pop
lret
daa
sti
adcb
and
xor
jns
cmp
sbb
leave
movsb
xor
cltd
sbb
call
outsl
jns
adc
or
fadds
and
outsl
pop
scas
pop
mov
iret
mov
adc
enter
xchg
in
sub
xor
xor
jl
stos
cmc
call
call
add
imul
call
call
call
addl
repnz
xchg
cmp
or
lds
inc
iret
sub
scas
push
je
xchg
mov
dec
je
outsb
and
ret
sbb
mov
int
push
stos
in
loope
and
mov
push
test
sub
loopne
jae
dec
aam
call
call
or
jge
fsubl
ds
je
hlt
inc
loop
cmp
gs
ljmp
sbb
xchg
enter
daa
inc
jmp
pop
add
and
xor
sub
xor
xlat
dec
inc
imul
sbb
call
call
call
sub
pop
ds
shrb
bound
aad
sub
cs
sub
and
mov
dec
dec
jo
jne
mov
lock
add
jb
roll
and
in
pop
cli
push
mov
fsubrs
jbe,pt
cmp
jne
lahf
shl
and
pushf
push
add
call
call
adc
fcmovb
cmp
and
and
and
and
and
lds
jb
cmc
pop
push
arpl
inc
daa
loopne
iret
pop
mov
lret
sahf
push
or
lock
push
aaa
lds
pop
jb
lahf
js
out
stos
addb
scas
push
std
jle
xchg
push
sub
call
call
call
mov
pop
xchg
pop
push
dec
push
and
dec
jl
sbb
pop
mov
nop
or
pop
cld
add
inc
hlt
pop
cmpsl
scas
mov
and
and
and
and
and
and
or
cmp
out
mov
mov
sbbb
jmp
add
mov
xchg
rcrl
sahf
fisttpll
outsb
es
xchg
out
aad
insl
push
pop
test
mov
mov
mov
aaa
and
cmpsb
call
call
mov
hlt
ret
mov
cmp
test
and
xchg
pop
mov
jne
push
jnp
adc
call
call
xor
test
sbb
call
call
aad
add
hlt
push
cmp
sub
mov
call
add
pop
shlb
xor
cld
xor
aam
xchg
xlat
pop
test
pop
pop
test
jle
xor
mov
data16
jns
cmp
movsl
movsb
xchg
lock
pusha
sbb
mov
arpl
call
call
cli
fsubrp
mov
icebp
sbb
jl
aaa
outsl
and
outsb
dec
outsb
loopne
ret
pop
fwait
cmp
or
and
and
and
and
ds
imulb
call
call
call
jg
add
subb
mov
adc
fucom
pop
sbb
scas
les
mov
jg
fnop
dec
movsl
mov
sar
mov
pop
js
clc
sbb
mov
push
movsl
sub
fld1
call
call
call
jge
scas
jo
shlb
mov
cli
jecxz
fisttpl
mov
outsb
mov
lea
pop
cli
add
pause
lods
xchg
xchg
loopne
pop
cs
rorb
test
sbb
jo
sub
in
cmp
mov
fdivs
adc
int
aam
sarb
push
icebp
shrb
call
call
insb
pop
orb
call
call
pop
lock
inc
push
sbb
imul
call
call
gs
dec
mov
inc
rep
and
mov
jl
fsubl
pop
or
insl
addb
jae
mov
pop
jmp
cli
stos
ficompl
push
jno
push
xor
mov
sbb
std
lods
pop
and
notl
adc
add
hlt
fdivrl
repz
inc
imul
call
call
imul
mov
ffree
jmp
loop
in
mov
mov
ret
inc
add
arpl
sbb
popa
cltd
scas
mov
xchg
jecxz
idivb
mov
call
scas
mov
sti
mov
add
pop
xor
xor
cmpsl
xchg
jno
push
push
mov
lcall
add
and
and
and
and
call
call
cvttps2pi
xchg
std
or
push
inc
in
scas
divb
fs
adc
movsl
je
xor
add
lock
test
inc
orb
xor
sbb
push
jne
and
insb
in
cmp
cld
inc
or
incb
jmp
stos
inc
cs
popa
pop
movsb
sbb
shr
call
call
call
sbb
btr
negl
xchg
call
call
call
arpl
pop
pop
xchg
ja
jnp
inc
in
call
call
xor
lock
sbb
call
call
aas
jae
jge
xabort
mov
lret
and
fucomp
mov
daa
fsubrl
pop
push
and
lds
pop
mov
stos
fucomi
call
call
cmp
rcl
call
call
call
jbe
push
insl
js
call
call
call
inc
insb
push
gs
jmp
and
xchg
lret
fpatan
push
out
nop
inc
dec
mov
call
call
call
das
popf
aam
or
xor
pop
testl
out
int3
pusha
cmp
and
jge
mov
jp
push
call
call
call
pop
xor
push
mov
mov
call
call
call
jbe
mov
cmp
mov
fstpl
imul
jecxz
xor
lcall
mov
push
adc
call
call
lahf
iret
loop
imul
push
pop
mov
jp
sbb
iret
and
imul
xor
lods
or
cmp
jl
ljmp
sbb
call
call
adc
cmp
lret
ret
pop
or
loope
movsl
outsl
movsl
mov
sub
mov
xchg
call
call
and
and
and
and
adc
add
lods
sub
stc
or
add
out
and
and
and
and
push
lock
dec
sub
mov
add
cmp
dec
mov
xor
test
or
xor
jae
dec
adc
jnp
jae
es
test
call
call
call
mov
cmp
cmc
add
jne
pushf
js
xchg
xor
outsl
push
sbb
and
idiv
and
bnd
shl
rorb
mov
jb
mov
or
sub
sbb
call
call
call
cmp
stos
test
add
les
jg
out
inc
out
std
push
and
scas
ja
les
in
lret
pop
xor
mov
mov
pop
jecxz
sub
bound
inc
fstpl
dec
xchg
and
call
call
call
jge
addr16
lcall
jecxz
dec
and
and
int
cmp
mov
pusha
aas
pusha
inc
fisttpll
inc
sti
aas
dec
pop
or
cmp
iret
push
clc
sub
adc
shr
mov
xor
call
call
push
cwtl
sti
inc
je
inc
call
call
in
ljmp
pop
mov
flds
imul
pop
test
mov
lret
sub
lods
inc
andb
xor
call
call
fimull
shrl
fiaddl
add
cltd
pop
pop
loop
xor
mov
cs
mov
insb
mov
mov
fildl
call
call
mov
call
call
call
stc
fsubs
dec
cmp
aas
stos
adc
sub
xor
add
sar
add
sbb
call
call
aad
js
jns
adc
imul
aaa
adc
leave
daa
divl
int3
sbb
cmpsl
pop
push
push
ja
sbb
stos
lods
mov
jp
mov
dec
push
push
sbb
sti
mov
and
and
and
and
jmp
inc
inc
ljmp
hlt
push
sbb
call
call
xchg
out
mov
fsubrl
xor
lock
call
jle
imul
mov
or
icebp
fwait
xchg
mov
das
push
sub
or
leave
jns
lcall
outsb
sahf
add
insb
push
lods
sti
cmp
arpl
call
call
mov
ficomps
add
fwait
and
jle
fs
lret
ljmp
call
call
int3
sbb
lret
repz
dec
adc
call
call
inc
xlat
lds
sbb
lahf
cmc
xorl
call
call
dec
loopne
lret
call
call
call
xchg
data16
in
inc
loop
or
xchg
inc
fs
sub
and
and
and
and
and
ret
repnz
jp
xchg
bound
mov
mov
aad
cmp
inc
add
lahf
mov
lahf
out
jl
inc
xchg
fnsave
out
data16
addr16
dec
xchg
pop
mov
xchg
and
iret
mov
ds
orl
fcmovbe
mov
mov
cs
xchg
dec
xchg
inc
push
pushf
sub
scas
mov
call
call
dec
lret
push
add
call
call
std
add
lock
test
data16
lock
lret
and
push
inc
jb
pop
jne
fdiv
sbb
cmpsb
call
call
call
or
pushf
pop
pop
sti
aad
mov
lahf
dec
push
push
dec
cltd
jno
push
clc
inc
imul
int3
arpl
in
jnp
jno
xchg
jle
cmp
sub
aaa
hlt
into
and
dec
sbb
ds
aas
lods
add
cmp
jecxz
fs
lret
call
call
call
outsl
cmpsb
sbb
call
call
lock
jle
pusha
jbe
sbb
int3
push
jg
ds
mov
shrl
pop
pop
nop
out
addr16
in
mov
cmp
ficomps
addb
and
and
and
and
push
xchg
pop
call
ss
push
and
js
sbb
test
aam
call
call
call
repz
sbb
loopne
lods
or
mov
jl
adcb
outsl
xchg
sbb
test
mov
test
push
loopne
das
lahf
cmp
call
call
in
sar
movsl
out
in
rcll
js
push
sub
inc
fbld
xor
flds
add
stos
cmp
pop
dec
sbb
cmpsl
stos
pop
sbb
mov
add
mov
sbb
inc
call
call
call
fs
inc
fimull
adc
call
or
int3
divb
scas
sub
lock
push
mov
push
add
fdecstp
inc
push
int3
push
xchg
jae
dec
iret
imul
test
xor
rolb
mov
scas
lods
dec
rcrl
mov
cmp
add
das
xchg
push
jl
test
cmp
mov
or
nop
mov
call
pop
inc
adc
in
sbb
dec
mov
push
sub
add
jno
mov
jle
test
push
dec
mov
call
call
jp
jg
pop
inc
mov
push
xchg
add
sbb
cmp
dec
xor
push
xchg
xor
pop
push
orl
dec
addr16
js
call
js
push
pop
push
mov
mov
popl
adc
cli
mov
fcoml
call
aaa
mov
call
insb
jnp
cmp
es
xchg
push
or
sub
and
and
and
and
and
and
and
and
out
cmp
fcmove
mov
mov
mov
paddw
mov
dec
sahf
jecxz
dec
ljmp
and
and
and
and
and
and
mov
inc
ret
mov
pop
into
pop
outsl
daa
clc
in
call
les
sub
or
fldenv
push
stos
rcll
push
jb
jle
sti
xorl
and
popf
adc
call
call
and
and
and
xchg
lds
pop
shr
call
call
call
call
xchg
xor
imul
lds
cmp
xchg
aaa
sbb
mov
fs
xchg
popfw
ds
jecxz
cmp
popf
add
sti
xor
add
push
imul
call
call
jbe
imul
call
gs
ret
xchg
sbb
mov
sub
push
popf
sahf
data16
cmp
xchg
cmp
xor
and
or
call
call
xor
out
out
xchg
call
pop
icebp
movsb
mov
cltd
cmp
leave
push
jb
pop
lret
jne
jae
push
mov
test
push
icebp
jp
jae
or
int3
lock
cli
pop
mov
inc
add
sbb
sbb
add
add
call
call
call
adc
in
add
lret
cld
xchg
ror
fistl
push
and
and
and
and
mov
bound
stc
jbe
inc
fidivrs
lds
push
mov
cmp
fs
mov
call
xchg
mov
xchg
xchg
icebp
outsb
and
sub
sbb
int
call
mov
loopne
lock
call
loopne
repz
xlat
inc
fistps
outsl
pop
stc
movsb
imulb
jl
cmp
sub
cmpsl
int
bound
ret
call
call
jg
cmp
or
int
jecxz
xchg
jae
fadds
sahf
clc
inc
push
and
pop
and
and
push
push
mov
jbe
insl
std
sub
add
xor
sbb
inc
and
and
and
and
and
and
and
clc
je
push
call
call
mov
addr16
push
adc
pop
push
rcl
jl
mov
imul
mov
jae
dec
jo
pop
xchg
push
add
in
fidivl
lret
div
lods
mov
call
xchg
cli
fistl
in
icebp
push
or
pop
movntps
cmp
inc
mov
sub
xor
push
push
sub
call
call
ja
out
ja
cmc
inc
push
mov
sub
dec
and
aad
or
mov
dec
cmp
lds
mov
xor
scas
shr
divl
pop
cmp
cmc
test
fcoml
call
scas
mov
loope
mov
push
clc
mov
mov
je
mov
leave
dec
lcall
call
call
jne
int
mov
repz
and
and
push
push
jp
add
dec
insl
sbb
lcall
and
aaa
push
jmp
xorb
in
fisttps
inc
js
fwait
mov
xchg
inc
ret
call
call
pop
js
fwait
mov
rcr
das
ret
sub
dec
pop
sub
inc
xchg
insb
outsb
pop
push
inc
adc
popf
out
push
das
imul
mov
and
js
cmp
xor
pusha
les
jbe
cmpb
adc
mov
movsl
jae
xlat
inc
repnz
or
mov
fidivrl
insl
insl
or
testb
or
rcrb
sbb
sub
icebp
in
add
lret
je
xor
call
call
ret
mov
das
sbb
pusha
or
aaa
movsb
pop
add
add
stc
adcl
pop
or
push
mov
imul
xchg
inc
int3
mov
hlt
inc
dec
in
in
popf
xor
mov
mov
and
and
and
and
and
cmp
add
xor
pop
and
cmc
icebp
notb
call
inc
jle
lock
pop
das
xor
pop
jle
mov
adc
xchg
jmp
das
lods
movsl
push
dec
pop
jo
inc
xchg
fstpt
and
jo
sbb
cmpsl
mov
in
pop
jb
ss
xor
in
aam
or
cmp
jne
ljmp
jg
dec
mov
call
call
jae
in
mov
pop
cmpsl
mov
cmpsl
cmpsl
pop
xchg
dec
sahf
aam
push
shrl
mov
push
adc
dec
inc
adc
fwait
int
or
adc
pop
fists
push
or
xchg
loope
adc
mov
inc
roll
fidivrs
es
hlt
imul
insl
popf
ds
lcall
sbb
call
call
call
adc
call
call
xor
xor
mov
and
repnz
cmp
leave
pop
or
dec
int3
pop
adc
sbb
sahf
nop
ds
adc
sbb
ljmp
int
js
jne
movsb
lock
xor
dec
mov
fs
and
jns
aam
call
call
out
xor
mov
pop
adc
adc
in
call
xchg
pop
or
popa
fisubrs
xchg
cwtl
xchg
testl
loop
shr
xor
call
call
adc
jae
cmp
pop
lods
arpl
mov
aad
movsb
js
call
mov
jmp
sub
call
call
test
push
cli
imul
shll
cs
dec
sbb
icebp
repnz
call
call
movsb
popf
xchg
subb
and
and
and
and
and
and
and
and
pop
mov
and
adc
int
cmp
movsl
and
adc
test
cmp
dec
repz
fsubrl
in
sub
jbe
mov
xor
outsl
push
and
push
push
aas
ss
adc
jae
call
call
xchg
push
dec
in
popl
ret
lret
push
scas
xchg
in
pusha
out
rorl
cli
incb
cli
xlat
das
hlt
jmp
out
rcrl
in
xor
mov
mov
repz
push
push
add
ret
or
orb
and
jle
mov
test
call
call
enter
call
call
xor
mov
mov
in
vandpd
add
ljmp
fnsave
ret
rol
xchg
mov
and
xlat
shlb
ja
fiaddl
xchg
mov
pushf
bound
stos
or
dec
bound
dec
es
push
iret
test
adc
jnp
ss
pop
push
out
call
call
cmc
cmc
lods
xor
iret
sub
cmp
imul
outsl
xchg
add
jbe
cmp
imul
xchg
xchg
dec
loopne
jge
fldcw
repz
pop
pop
mov
add
arpl
mull
insb
pop
mov
out
repz
adc
push
jmp
add
insb
jae
lods
dec
ljmp
call
call
sbb
jno
xchg
daa
xor
push
jle
pushf
jo
sbb
cmp
cmp
and
enter
and
in
les
rorb
gs
dec
stc
push
xor
pop
push
adc
lea
fdivs
psrlq
dec
lahf
dec
xor
fcoms
xor
push
dec
xchg
call
call
call
push
mov
mov
fldl
test
test
adcl
and
ret
call
call
call
out
cltd
mov
pusha
nop
push
ljmp
add
sub
testb
addr16
fs
jo
jbe
sbb
sbb
push
add
dec
sub
or
cld
test
jle
push
xor
lock
std
jg
call
call
xchg
dec
cmp
pop
rorb
rcrb
nop
and
and
and
and
and
and
and
mov
mov
call
call
arpl
mov
outsl
jo
dec
xchg
jne
lahf
nop
xor
push
mov
ja
ss
xor
jae
push
fdivrp
push
sbb
dec
shrl
clc
fs
xchg
cmp
sar
pop
das
mov
leave
punpcklwd
call
call
jecxz
xor
call
cmp
and
icebp
jp
sbb
movsb
test
inc
sub
pusha
mov
pusha
xchg
push
push
xor
mov
lcall
call
call
call
mov
in
inc
xchg
add
hlt
cmp
mov
xor
call
call
call
cltd
and
addl
adc
adc
push
pop
jae
ret
mov
lods
xor
and
shlb
pop
das
int3
cmp
xor
fs
mov
and
sbb
cmp
lahf
int
or
lea
dec
loope
inc
movsb
jbe
ds
popa
hlt
xchg
call
call
nop
pop
stos
sbb
gs
and
and
and
and
lahf
popa
lock
sbb
cld
js
fwait
push
cwtl
insb
mov
mov
xchg
filds
aaa
aam
adcl
dec
call
call
call
fsubs
pop
inc
cmp
sahf
loope
adc
fsubs
xchg
push
pop
nop
push
out
mov
insl
push
cmpsl
lock
xchg
xchg
sub
fdivr
jmp
xchg
scas
pop
mov
adc
or
movsb
jo
inc
outsl
cmc
inc
call
call
jp
call
call
andl
mov
cmp
xchg
pop
rcll
add
testb
in
ljmp
ss
cmp
cltd
sub
out
pop
sub
add
subb
call
call
inc
out
or
pop
pop
mov
mov
sbb
in
pop
leave
adc
repnz
dec
add
push
sbb
popa
jb
xchg
adc
mov
pop
in
dec
fwait
imul
call
dec
jb
enter
pop
lahf
xchg
enter
sub
arpl
adc
ja
cli
cwtl
mov
mov
jmp
sub
sbb
sub
mov
cmp
sbbb
and
lret
cmp
call
call
call
jb
sub
mov
shr
sub
xchg
adc
and
and
and
and
and
mov
sahf
mov
sbb
popf
sbb
xchg
int
sahf
push
mov
popa
sub
pop
jg
dec
int
mul
pushf
jmp
insb
into
jne
ret
dec
mov
xchg
push
pop
dec
pop
fisttpll
dec
cmc
call
call
call
dec
pop
insl
dec
cwtl
in
stos
mov
mov
push
adc
or
and
and
and
and
and
fldl
push
mov
call
call
pop
jl
lahf
jecxz
arpl
mov
call
call
call
mov
outsl
cmp
mov
sbb
push
enter
je
push
push
mov
test
xor
push
js
pop
add
aad
lcall
pop
pushf
jmp
call
call
call
pop
call
call
mov
cmp
in
xchg
mov
cmp
cltd
pop
dec
mov
outsl
push
call
xchg
xor
xchg
xor
stos
jg
add
daa
adcl
add
repnz
push
out
xchg
push
pusha
sbb
pop
iret
fists
jae
or
call
call
dec
outsl
jo
mov
mov
cmp
aad
lret
xor
add
xchg
and
int
stos
jae
lds
pop
mov
and
xor
inc
dec
mov
dec
out
xor
sbb
mul
add
inc
and
xchg
aaa
movsl
push
call
call
jb
pop
test
cmp
in
and
xchg
jb
or
in
push
dec
bound
xchg
or
into
sub
adc
enter
sub
or
call
call
call
or
enter
sti
das
insl
pop
dec
jo
push
pop
sub
lds
jb
cmp
and
mov
adc
call
call
cli
xchg
aaa
je
sub
adcl
cmp
cwtl
in
ficompl
mov
add
xor
call
and
and
divb
cli
pop
inc
and
lods
jmp
es
rol
sbb
jnp
mov
call
call
call
test
push
faddl
dec
ljmp
xchg
push
add
cmp
aaa
fucomip
xchg
test
or
and
and
mov
mov
dec
push
andb
push
and
test
and
fdivrl
negl
cmp
sub
dec
call
call
call
mov
cmp
xchg
into
fcmove
loop
push
xor
scas
adc
adc
movsb
cmp
pop
adc
aaa
in
roll
sbb
jge
call
call
call
call
cmp
jl
sahf
in
lahf
test
pop
jle
int
pop
adc
leave
push
jnp
loopne
insb
call
mov
pop
test
mov
sbb
cmp
outsl
xchg
leave
ja
in
scas
inc
or
lods
and
rolb
fistl
jge
cwtl
push
adc
push
es
out
nop
out
xorl
push
sarb
lahf
adc
les
sbb
imul
nop
mov
or
fs
out
movsb
xchg
ss
call
pop
testb
stos
daa
outsb
and
outsb
das
stos
das
jg
add
mov
push
push
jg
xchg
mov
sbb
jl
ss
sub
push
call
call
mov
test
in
push
addl
jle
cld
mov
xchg
test
out
inc
movsl
mov
xor
mov
test
call
call
leave
cmpsb
inc
in
lret
out
shl
aaa
mov
insl
nop
jae
adc
jns
xor
stc
fs
and
mov
jnp
loop
and
and
and
and
inc
sbb
andb
push
dec
rolb
mov
sub
add
sub
call
call
sub
pop
es
mov
test
int
pop
lds
gs
or
shrl
cmp
pushf
push
mov
loope
test
pop
inc
mov
jg
test
sub
loop
mov
aam
call
call
call
dec
sbb
call
call
dec
push
outsb
lret
frstor
and
and
and
and
jecxz
ret
pop
js
jg
scas
dec
bound
shlb
out
lock
cmp
imul
divb
pop
mov
je
sub
mov
jne
cmp
mov
call
call
dec
ret
dec
xabort
xor
pusha
mov
aaa
mov
into
fimull
mov
adc
push
inc
inc
ds
mov
lcall
xchg
sar
aam
loopne
jo
jno
push
stos
pop
xchg
mov
lods
pop
sub
cmp
scas
sub
and
and
and
and
sbb
icebp
dec
xchg
fimull
cmpl
mov
mov
stc
mov
es
ret
ficoms
adc
inc
int
call
ds
adc
mov
popf
inc
push
and
orl
sbb
sbb
adc
or
shlb
shrl
call
call
mov
call
call
call
mov
sbb
icebp
loope
mov
mov
cmp
mov
and
and
and
and
and
and
and
and
jp
cmp
in
cmp
xchg
adcb
rcll
or
call
mov
sub
subl
popf
sub
jl
cmpsb
out
or
cmpb
sub
pop
cmc
sub
mov
mov
out
cmpsb
dec
lods
pop
aaa
frstor
cmc
and
dec
pop
pop
les
popa
es
xor
fdivrs
call
call
adc
and
and
and
and
and
imul
sub
cmc
jmp
enter
xchg
xor
loope,pt
call
call
call
push
xchg
push
or
lea
mov
int3
cmpsl
mov
dec
test
ds
call
call
adc
sti
movsl
int
adc
xchg
inc
lret
mov
mov
dec
and
adc
lods
xchg
mov
out
xchg
mov
movsb
insl
fs
sbb
sbb
inc
mov
sub
jbe
dec
pop
pusha
adc
inc
call
call
mov
xor
adc
and
loope
std
notl
and
and
and
and
and
and
daa
push
jmp
int3
stc
xor
call
call
call
rorb
mov
clc
dec
sbb
pop
das
add
ljmp
mov
or
test
call
call
adc
sub
dec
push
inc
add
in
mov
je
xchg
ss
cld
ljmp
popf
and
cmp
in
sbb
add
in
stos
push
or
int3
push
mov
imul
sub
call
call
call
mov
sbb
in
je
cwtl
push
jbe
std
cmp
jmp
dec
cs
jmp
loope
sbb
sub
push
push
xchg
jmp
push
insl
call
mov
jecxz
cmp
or
cmp
loope
jae
int
adc
imul
sub
pop
gs
fsubrl
adc
test
test
lods
lods
sti
and
sbb
adc
mov
fwait
mov
call
call
call
or
and
scas
xor
jno
ljmp
daa
cmp
lret
cmp
or
xor
ds
xchg
flds
cmp
dec
push
fiaddl
add
push
aaa
xchg
jmp
push
and
dec
adc
sub
adc
xchg
mov
add
inc
sub
call
call
call
sbb
and
xor
sub
jae
and
test
cmc
call
call
xchg
popa
pop
dec
popa
inc
jno
sti
sbb
inc
stos
add
dec
call
call
call
add
hlt
js
cmp
push
push
pop
addr16
out
jb
icebp
pop
adc
addl
pop
inc
icebp
call
call
cmc
mov
jle
and
and
and
and
and
rcrb
dec
test
arpl
xorl
les
call
call
pop
fs
jae
or
mov
stos
out
sub
mov
pop
push
insl
shrb
mov
push
hlt
xor
sbb
call
call
call
sbb
sbb
es
negb
imul
mov
repnz
in
mov
adc
or
call
call
xor
shrb
xor
inc
aas
pop
mov
pop
xor
movsb
call
call
lock
or
call
call
call
pushf
cmpl
inc
cmc
sbb
sbb
fbld
dec
inc
ja
xor
sbb
mov
add
mov
inc
push
sbb
sub
notl
cmp
push
sahf
add
popa
mov
call
call
inc
and
loopne
mov
pop
xchg
pop
pushf
orb
mov
cmc
dec
and
inc
add
jnp
inc
scas
int
jbe
fcmovbe
insb
and
dec
test
je
outsl
scas
js
mov
add
call
call
pop
stos
lea
mov
fucomi
inc
mov
test
sub
int3
addr16
jne
mov
call
call
add
jg
jo
lods
addb
push
cmp
callw
call
call
enter
jle
jecxz
sub
aaa
movsl
inc
notb
jae
hlt
dec
pop
mov
push
dec
jecxz
pop
xchg
scas
sbb
mov
dec
pop
adc
call
call
call
shll
lret
jbe
call
call
call
adc
jg
je
push
mov
clc
sbb
call
call
and
and
and
and
mov
cmp
adc
ja
es
testl
scas
outsl
insl
ljmp
mov
jns
nop
cwtl
xchg
or
ficoms
notl
pop
in
adc
out
stc
push
call
call
call
mov
call
call
pop
je
xchg
pop
ljmp
sub
sub
sti
xor
and
mov
fwait
jb
cli
push
push
xchg
roll
subb
push
popa
adc
loopne
xor
lcall
orb
pop
lds
dec
outsb
std
mov
out
mov
ljmp
loopne
sbb
call
call
adc
pop
popa
mov
fsubl
push
cltd
fcom
cmp
inc
push
call
call
push
shll
call
call
call
sbb
decb
jmp
push
jae
js
jmp
aam
lret
out
jle
dec
mov
call
call
or
jmp
push
into
and
mov
ror
inc
pop
xlat
inc
mov
sbb
jno
pop
adc
imul
stos
lcall
movaps
dec
cmc
push
xor
inc
jecxz
jns
mov
dec
pop
stos
or
aaa
test
cmp
jnp
add
loop
call
call
call
fidivrs
mov
jbe
inc
loope
fcoms
cmp
movsl
dec
scas
jbe
testl
cltd
add
mov
lea
mov
movsb
test
sub
and
and
and
and
and
push
cmp
or
mov
pop
imul
call
call
call
xor
push
adc
mov
pop
xchg
mov
dec
call
call
fmul
push
ljmp
repnz
addr16
hlt
cld
jp
fisttpl
sbb
mov
frstor
movsl
jae
xlat
push
roll
adc
jp
mov
imul
push
jmp
jle
test
jns
xchg
cmp
call
call
call
scas
popf
xchg
and
mov
and
and
and
and
test
adc
rol
mov
pop
sub
mov
les
lds
mov
enter
call
call
sarb
roll
add
cltd
inc
add
pop
lods
push
lock
movsb
cli
lcall
push
mov
call
call
loop
mov
push
iret
fs
mov
and
and
and
inc
pop
mov
mov
push
lret
hlt
inc
sub
sub
push
scas
push
inc
sti
and
dec
push
pop
stos
jnp
pop
fistl
popf
push
mov
out
sbb
loopne
sbb
cmpsl
xor
lahf
mov
call
call
call
fdivp
fisttpll
pop
repnz
movsb
pop
fldt
pop
pop
sbb
push
add
loop
addl
divl
hlt
push
cli
popa
push
ret
adc
popf
and
cs
fstps
push
std
sti
xlat
pop
inc
mov
push
jbe
push
dec
call
call
in
rcr
inc
insl
loope
jae
call
xchg
lahf
aad
scas
push
inc
repnz
stc
mov
std
pop
inc
push
das
shll
push
pop
scas
stos
or
mov
add
fldenv
imul
fpatan
cmovne
call
call
xor
mov
jbe
push
jl
addb
imul
fisttpl
xchg
xchg
cmp
dec
shr
pop
or
jl
stc
mov
test
cmc
lds
popa
loop
jae
movsb
bound
adc
cmp
sub
push
lods
stos
enter
jge
mov
ret
and
adc
call
call
daa
pop
outsl
fs
setns
jb
sub
scas
add
out
imul
dec
add
pop
or
or
pop
daa
mov
cmpsl
pop
or
and
and
and
and
and
pop
add
push
jae
call
call
call
sub
cmpsl
cli
push
andb
mov
jb
std
push
lds
and
and
and
and
and
and
cli
call
call
outsl
xchg
movsl
xchg
mov
fbstp
add
stos
cltd
call
call
call
cwtl
pop
dec
xchg
push
cwtl
push
sub
pop
iret
outsb
incb
minps
mov
ret
sbb
adc
ret
lods
adc
or
jg
sub
iret
clc
jne
and
mov
in
in
test
push
lea
lods
call
call
add
sbb
sub
hlt
out
xchg
mov
and
push
adc
jns
mov
je
xor
jl
aas
pop
insl
mov
imul
call
call
call
xchg
int3
out
data16
int
inc
xchg
test
imul
adc
aas
xor
call
adc
decl
and
and
and
and
and
and
sbb
std
jnp
add
jo
sub
add
or
add
fwait
dec
lcall
jmp
or
inc
add
rorb
mov
call
call
pop
fwait
jge
pop
data16
or
mov
sub
aad
add
push
call
call
call
cmpsl
xor
jle
pop
sub
insl
pushf
add
or
out
push
out
sbb
xor
insl
and
call
xor
aam
cltd
jge
adc
sub
add
dec
mov
fwait
cltd
les
xchg
popa
mov
cmc
lret
dec
repnz
mov
cli
xchg
call
call
call
call
jb
mov
and
and
and
and
mov
inc
sbb
push
daa
lahf
fmul
and
cmp
xor
mov
negb
xchg
dec
sti
fdivr
jo
jmp
stc
fdivs
sub
inc
push
popf
stc
sbb
dec
cwtl
int
jecxz
std
mov
call
call
call
mov
call
call
call
daa
dec
jae
in
insb
adc
gs
mov
icebp
mov
fistpl
loope
call
call
test
lcall
add
and
cmpl
sub
fst
adc
fistps
jnp
popf
xchg
je
adc
dec
cwtl
mov
fnstsw
xchg
mov
ret
call
call
into
pop
or
ret
push
xchg
pop
mov
jecxz
bnd
movsl
iret
adc
xchg
adc
imul
adcl
test
lock
mov
fisubrs
inc
mov
cwtl
sti
xchg
or
call
adc
je
cmp
jb
jle
jno
call
call
call
lods
out
addr16
xor
mov
cwtl
nop
dec
fs
and
pop
mov
test
xor
popa
cs
call
cmpsl
call
call
adc
and
out
jae
sbb
dec
dec
cmpsb
xor
fdivrs
call
mov
fcmovu
xor
jae
sub
jno
pop
addr16
call
xor
and
and
and
and
and
jecxz
movsl
push
imul
cli
pop
movsb
divb
sub
sbb
addl
cwtl
cmc
aas
sub
cmp
xor
mov
fistpll
cmpsb
cmp
mov
call
call
inc
add
cmpsb
pop
pop
and
sbb
test
mov
call
call
call
mov
jle
insl
les
gs
stc
mulb
and
and
and
and
and
xor
subb
call
call
call
std
jl
push
jg
or
xchg
fsubrs
ja
pop
rcrl
insl
xchg
in
pusha
into
inc
ljmp
mov
lcall
mov
mov
adc
adc
pop
insl
dec
sbb
test
test
test
cld
adc
icebp
sbb
push
and
and
and
and
and
mov
addl
adc
mov
rep
test
xlat
out
sbb
push
lds
and
sub
mov
hlt
shl
adc
add
pop
xchg
call
call
jae
push
imul
loop
in
or
or
pop
xchg
nop
fbstp
push
xor
dec
pushf
fwait
mov
enter
stos
pop
cmp
cmpsl
aad
or
jmp
lret
jmp
sub
cltd
and
pop
popl
out
adc
in
popf
xchg
and
call
call
jne
fimuls
mov
inc
fs
jecxz
mov
scas
dec
stos
pop
cmp
xchg
fsubrl
leave
and
call
call
xlat
push
mov
pop
lds
push
or
cmp
sub
xchg
push
cld
or
jmp
cs
mov
xchg
mov
test
push
test
mov
call
call
dec
outsb
shr
and
pop
scas
call
and
and
and
and
and
and
inc
add
mov
add
mov
pushf
in
pop
dec
pop
or
add
subl
add
pop
sub
dec
mov
repnz
mov
leave
dec
adc
pushf
das
test
test
jb
call
call
call
add
inc
dec
ja
lea
adc
push
sub
sahf
push
xchg
dec
xor
sbb
add
add
ljmp
jecxz
aaa
imul
push
xchg
push
test
xor
jge
add
cli
fcomps
movsl
sti
push
mov
call
call
dec
and
push
sbb
dec
sub
lds
jns
fucomi
call
call
loop
mov
and
call
call
xor
push
xlat
fdivl
call
xchg
ljmp
fdivrl
outsl
pop
xor
call
call
add
mov
out
jbe
aad
call
call
lret
xor
pushf
xchg
call
jne
sub
inc
xchg
leave
mov
mov
jge
call
call
mov
nop
sbb
loope
mov
out
mov
sub
mov
mov
mov
add
sub
sub
mov
add
sub
add
add
mov
shr
mov
sub
mov
sub
add
cmp
je
sub
add
mov
mov
cmp
jne
mov
sub
sub
xor
xor
sub
add
or
mov
add
sub
mov
add
cmp
jb
add
mov
leave
ret
int3
int3
push
mov
push
push
mov
mov
xor
sub
and
mov
cmp
jne
and
sub
pop
mov
add
add
add
sub
mov
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
sub
xor
mov
cmp
jae
add
mov
mov
add
add
mov
add
mov
call
sub
add
mov
add
add
sub
add
add
mov
cmp
je
ror
pop
xor
cmp
jne
xor
mov
add
add
call
mov
xor
add
push
or
and
add
and
sub
ret
mov
add
xor
call
mov
add
sub
ret
int3
int3
int3
int3
int3
int3
int3
ror
add
add
xor
add
leave
ret
int3
push
mov
sub
add
mov
xor
add
add
sub
add
sub
sub
sub
add
mov
xor
mov
add
xor
shl
mov
mov
sub
mov
sub
mov
mov
sub
addl
or
add
sub
add
push
mov
sub
pop
mov
add
cmp
je
sub
pop
mov
xor
mov
sub
sub
sub
call
sub
xor
mov
add
sub
sub
and
add
and
mov
mov
sub
sub
mov
add
add
sub
addl
add
add
rol
add
and
mov
add
mov
mov
sub
cmp
je
or
mov
sub
mov
add
add
cmp
jne
add
jmp
add
add
and
add
sub
inc
mov
and
or
mov
or
add
call
cmp
jne
add
sub
add
mov
add
sub
add
and
mov
cmp
jne
add
xor
sub
add
mov
sub
or
add
addl
sub
add
or
add
mov
mov
sub
sub
sub
add
xor
cmp
jne
call
add
mov
sub
sub
add
add
sub
sub
mov
add
sub
mov
mov
sub
sub
add
addl
add
imul
add
xor
cmp
jae
sub
mov
mov
mov
or
jmp
call
cmp
jne
or
mov
cmp
je
mov
mov
add
cmp
ja
mov
sub
dec
and
add
mov
add
sub
sub
add
cmp
je
sub
mov
sub
sub
sub
sub
add
xor
add
xor
add
mov
add
sub
mov
add
xor
imul
mov
sub
or
add
sub
add
or
sub
sub
mov
add
xor
mov
add
add
mov
mov
mov
add
sub
xor
sub
add
mov
sub
sub
add
or
add
sub
sub
and
call
add
mov
sub
add
mov
cmp
jne
ret
mov
mov
xor
sub
sub
dec
push
je
sub
add
jbe
mov
push
sub
mov
sbb
dec
inc
add
add
cmp
add
push
add
push
jae
outsb
push
push
adc
das
pop
inc
jne,pt
aas
and
add
add
jg
bound
imul
add
inc
mov
xchg
imul
push
and
jbe
add
and
cmp
add
outsb
sbb
sbbb
inc
test
inc
push
pop
adc
jl
outsl
cmp
cmp
jbe
sub
daa
pop
jnp
gs
pop
aas
add
aaa
add
jge
das
popa
add
add
outsb
mov
pop
and
adc
adc
pop
pop
xor
add
inc
push
sbbb
dec
cmp
mov
add
jle
cmp
dec
cmp
js
push
pop
insl
sub
sub
and
push
jbe
and
sbb
imul
inc
jo
xchg
pop
adc
push
test
dec
mov
inc
pop
pop
adc
xchg
popa
sub
and
lea
add
cmp
aas
and
add
add
add
add
pop
push
push
jnp
jle
sbb
jp
push
mov
push
and
sub
add
addr16
xorl
bound
sbb
xor
jb
xor
add
jno
sbb
jg
adc
xor
push
add
jae
mov
cs
add
pop
add
push
es
inc
add
inc
add
and
add
and
imul
jne
outsb
imul
jnp
add
add
add
add
and
aaa
dec
es
push
and
add
imul
add
adc
add
and
add
pop
sub
cmp
adc
insb
cmp
add
js
add
cmp
sbb
sub
and
adcb
cmp
aaa
andl
sub
add
jo
test
ss
add
adc
and
add
and
inc
dec
add
push
dec
cmp
add
add
push
fs
and
add
daa
xor
ja
pop
daa
lea
sub
jnp
mov
jb
jae
push
add
pop
popl
mov
sub
add
orb
je
mov
add
push
add
jp
add
add
cmp
dec
adc
pop
daa
xor
pop
push
jle
jg
pop
add
xor
and
and
cmp
sbb
and
inc
add
add
inc
gs
es
xorb
and
add
inc
adc
dec
cmp
and
pop
je
jge
test
add
add
sbb
mov
sub
jge
push
es
xor
and
insl
add
add
inc
dec
and
inc
mov
xor
adcl
pusha
add
mov
add
mov
pusha
pop
and
sbb
pop
and
add
dec
pop
dec
imul
add
insb
adc
add
inc
add
jl
popa
inc
dec
cmp
xchg
imul
pop
cmp
subb
daa
cmp
cmp
push
add
sbb
add
adc
outsl
fs
bound
dec
add
xchg
arpl
cmp
add
add
mov
pop
sbb
aaa
subb
cmp
sbb
pop
mov
orb
dec
bound
addb
add
ss
add
and
arpl
add
insb
inc
jb
pop
push
pop
mov
add
add
jns
inc
and
mov
inc
push
dec
insl
jl
es
add
xor
dec
mov
add
adc
add
imul
add
aas
dec
add
add
cmp
jge
push
push
and
jp
pop
add
ss
jg
push
xchg
ja
adc
lea
imul
add
push
ja
jno
jne
add
and
xor
outsl
sbb
das
push
push
push
je
pop
aaa
adc
sbb
imul
add
add
insl
sub
add
jg
sbb
dec
push
add
dec
sbb
sub
cmp
xchg
add
pop
cmp
and
xor
xchg
xor
jo
sbb
je
add
add
and
add
sub
sub
add
adc
add
add
jae
add
cmp
outsl
test
pop
cmp
daa
dec
inc
mov
subl
dec
jge
js
aaa
cmp
dec
add
add
inc
sbb
sub
daa
test
dec
sub
inc
jp
das
bound
dec
pop
inc
je
adc
sbb
add
add
sub
dec
sub
je
popa
dec
push
xor
sub
ds
push
subb
andb
sub
add
je
pop
jae
js
jle
jae
add
add
jns
add
and
add
push
add
pop
sub
mov
and
add
inc
add
add
jbe
fs
cmp
test
pop
mov
push
aaa
add
dec
and
push
sbb
je
outsb
inc
dec
sbbb
adc
cmp
push
daa
adc
add
push
adc
inc
add
push
dec
add
dec
add
add
jno
push
xorb
arpl
push
cs
xorb
pop
cmp
sub
add
and
orl
jl,pn
pop
add
inc
gs
dec
xor
inc
ja
sub
add
pusha
mov
xor
add
jp
xor
add
add
pop
inc
add
add
xchg
xor
mov
sbb
cmp
insl
push
cmp
pop
pop
aaa
sub
push
mov
cmp
push
mov
add
dec
add
and
add
add
add
sbb
data16
cmp
jge
dec
add
pop
adc
ss
push
js
adc
inc
jl
push
push
cmp
inc
aas
pop
addb
adc
js
xor
add
pop
pop
insb
push
mov
jb
pop
push
mov
dec
jne
jne
xchg
sbb
mov
pop
insl
dec
sbb
add
jno
jnp
xorl
sub
push
andl
dec
imul
inc
sub
and
add
sbb
push
add
arpl
add
outsl
inc
pop
pop
jle
add
add
dec
and
sub
add
pusha
insb
cmp
addl
and
adc
adc
dec
add
sub
xorb
test
popa
dec
bound
add
and
inc
popa
pusha
add
jl
cmp
push
jo
mov
insb
xor
push
add
mov
add
add
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
cmpl
jne
call
push
call
push
call
pop
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
push
call
pop
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
mov
test
je
pushl
call
pop
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
xor
inc
cmp
push
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
jne
pushl
movl
call
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
lea
sub
mov
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
mov
push
call
inc
cmp
pop
jbe
mov
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
call
pop
pop
pop
add
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
mov
mov
push
mov
push
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
lea
sub
andl
add
dec
jne
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
ret
push
push
xor
cmp
jne
call
mov
test
jne
mov
mov
cmp
ja
test
je
test
je
cmp
jne
xor
test
sete
mov
movzbl
push
call
test
pop
je
inc
inc
jmp
cmp
ja
inc
mov
test
jne
pop
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
movb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
movb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
push
mov
push
push
movb
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
orl
movb
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
push
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
orl
movb
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
sar
mov
mov
and
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
pop
xor
mov
lea
cmpl
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
xor
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
push
call
add
or
je
cmp
je
lea
mov
or
je
push
push
lea
xor
xor
xor
xor
xor
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
mov
xor
xor
xor
xor
xor
call
mov
lea
mov
jmp
mov
jmp
mov
orl
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
mov
addl
pop
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
mov
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
mov
push
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
movb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
movb
inc
cmp
jb
mov
pop
call
leave
ret
push
mov
sub
mov
push
push
mov
xor
cmp
mov
push
mov
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
mov
movl
mov
mov
cmp
je
cmp
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
pop
mov
rep
stos
xor
inc
cmp
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
pop
pop
pop
call
leave
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
mov
test
je
cmpl
push
jne
call
test
pop
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
cmpl
push
mov
jne
cmp
ja
push
call
test
pop
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
loopne
inc
add
inc
add
cltd
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
mov
inc
add
cltd
inc
add
cltd
inc
add
cltd
inc
add
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
int3
cltd
inc
add
cltd
inc
add
cltd
inc
add
cltd
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
insb
lcall
mov
inc
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
or
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
fwait
inc
add
fwait
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
sub
push
push
mov
mov
test
jne
mov
mov
mov
mov
cmp
mov
jb
cmp
jae
xor
jmp
push
mov
cmp
jne
xor
inc
jmp
xor
mov
mov
mov
cmp
je
cmp
jae
cmpl
je
incl
inc
add
cmp
jbe
cmpl
je
mov
cmp
jb
cmp
jae
mov
mov
and
xor
test
jle
cmp
je
inc
cmp
jl
push
lea
push
push
call
test
je
cmpl
jne
testb
je
mov
cmpw
jne
mov
add
cmpl
jne
cmpw
jne
sub
cmpw
movzwl
lea
jbe
mov
cmp
jb
mov
add
cmp
jae
testb
jne
push
push
call
test
jne
mov
test
mov
jle
lea
cmp
je
dec
sub
test
jg
test
jne
push
pop
cmp
jg
mov
xor
test
jl
lea
mov
inc
cmp
mov
mov
jle
cmp
jge
inc
mov
push
push
call
jmp
xor
jmp
test
jle
mov
push
push
call
test
jne
cmp
je
mov
lea
test
jl
cmp
je
dec
jns
test
jge
cmp
jge
inc
mov
lea
jmp
je
xor
test
jl
lea
mov
inc
cmp
mov
mov
jle
push
push
call
jmp
or
pop
pop
pop
leave
ret
push
mov
test
push
push
jne
pushl
call
pop
jmp
push
mov
test
jne
push
call
pop
jmp
cmpl
jne
xor
cmp
ja
push
call
mov
test
pop
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
mov
test
pop
je
mov
dec
cmp
jb
mov
push
push
push
call
push
call
mov
push
push
call
add
test
jne
test
jne
inc
add
and
push
push
pushl
call
mov
test
je
mov
dec
cmp
jb
mov
push
push
push
call
push
push
call
add
test
jne
test
jne
inc
add
and
push
push
push
pushl
call
mov
test
jne
cmpl
je
push
call
test
pop
jne
jmp
mov
jmp
xor
cmp
ja
test
jne
inc
push
push
push
pushl
call
test
jne
cmpl
je
push
call
test
pop
jne
xor
pop
pop
pop
pop
ret
cmpl
push
jne
mov
push
call
test
pop
je
mov
sub
pop
ret
push
jmp
pushl
push
pushl
call
pop
ret
push
mov
sub
mov
test
je
cmp
jne
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
mov
push
call
pop
add
cmp
jbe
mov
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sbb
inc
add
inc
add
mov
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
mov
add
mov
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
pop
mov
add
add
add
add
add
inc
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
mov
add
mov
add
mov
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
sub
mov
push
mov
lea
push
push
pushl
movb
call
test
jne
or
jmp
lea
push
call
pop
mov
call
leave
ret
push
push
call
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
mov
lea
not
and
sub
mov
dec
neg
sbb
and
add
imul
add
cmp
mov
jb
cmp
je
mov
mov
push
lea
push
pushl
call
test
je
mov
add
test
je
testb
mov
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
cmp
jae
mov
push
push
pushl
pushl
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
pushl
call
lea
pop
pop
pop
leave
ret
push
push
mov
imul
test
push
mov
jne
inc
xor
cmp
ja
cmpl
jne
add
and
cmp
ja
push
call
mov
test
pop
jne
push
push
pushl
call
mov
test
jne
cmpl
je
push
call
test
pop
jne
jmp
push
push
push
call
add
mov
pop
pop
pop
ret
push
mov
jmp
inc
movzbl
push
call
test
pop
jne
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
jne
neg
ret
push
mov
push
mov
cmp
jbe
andw
push
xor
lea
stos
mov
shr
cmpl
mov
mov
pop
jne
xor
leave
ret
push
pushl
lea
pushl
push
push
lea
push
push
call
add
test
je
cmpw
jne
testb
je
xor
inc
leave
ret
cmpl
jle
push
push
call
pop
pop
leave
ret
mov
movzbl
and
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
sar
push
mov
movzbl
testb
pop
je
push
mov
mov
movb
pop
jmp
mov
xor
movb
inc
push
pushl
lea
pushl
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
jmp
enter
ljmp
add
mov
add
add
add
stos
rolb
cld
adc
add
mov
add
add
add
mov
add
push
add
add
add
add
mov
add
movsb
mov
add
lret
add
mov
add
adc
add
cs
add
dec
mov
add
mov
outsb
mov
add
mov
add
mov
add
mov
add
fs
add
push
ret
add
inc
ret
add
cs
add
push
ret
add
or
add
clc
ret
faddp
add
enter
scas
ret
mov
ret
jl
add
jo
add
add
push
ret
inc
ret
cmp
add
xor
add
and
add
adc
add
push
ret
hlt
roll
fcmovb
add
lret
add
add
add
add
add
push
roll
roll
roll
sbb
add
push
roll
repnz
in
add
aam
add
ret
add
add
add
rolb
or
add
sub
add
inc
mov
add
mov
jp
add
xchg
add
cmpsb
mov
add
mov
add
xchg
add
outsb
rolb
pop
rolb
push
rolb
inc
rolb
fidivrl
add
adc
add
add
add
in
mov
add
add
add
adc
add
sldt
orb
add
pop
add
adcb
add
cmp
add
add
xorb
jae
add
add
add
add
outsl
jae
dec
popa
outsb
fs
add
inc
gs
gs
inc
imul
gs
imul
je
add
inc
outsl
jo
inc
imul
gs
jns
je
insl
inc
imul
jns
add
inc
jb
popa
je
inc
jbe
outsb
je
add
cli
add
outsl
bound
dec
gs
outsl
jb
push
je
je
jae
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
mov
gs
imul
jae
gs
push
imul
dec
gs
jo
popa
insb
imul
add
popa
jo
outsl
insl
jo
arpl
add
popa
jo
insb
insb
outsl
arpl
or
dec
gs
jo
jb
popa
je
add
or
dec
gs
jo
jb
add
arpl
inc
jb
popa
je
push
jb
arpl
jae
add
inc
add
gs
out
add
gs
imul
dec
add
fs
imul
add
cwtl
add
je
jb
arpl
fs
jae
add
add
je
jne
jb
outsb
je
push
dec
add
or
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
dec
add
fs
imul
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
nop
add
outsl
ja
arpl
insb
insb
inc
popa
jb
adc
inc
gs
insb
addr16
je
insl
dec
outsb
je
push
add
je
insb
addr16
je
insl
dec
outsb
je
jmp
insl
gs
arpl
add
jo
imul
arpl
add
je
popa
jo
jne
add
mov
jo
je
push
popa
addr16
add
stos
add
outsb
jae
popa
je
dec
gs
popa
add
mov
fs
arpl
inc
add
add
je
gs
popa
addr16
add
add
insb
insb
push
imul
outsl
arpl
or
inc
jo
outsb
fs
outsb
jne
add
add
je
arpl
gs
imul
add
je
jns
inc
outsl
insb
outsl
jb
jb
jae
add
testl
insb
popa
jae
dec
outsb
outsw
inc
js
add
add
imul
popa
jae
inc
js
add
or
inc
gs
jne
jae
jb
outsl
jae
add
imul
jne
dec
outsb
jne
add
push
imul
jae
add
add
jne
inc
push
imul
add
push
gs
outsl
arpl
add
push
add
je
outsl
arpl
add
mov
popa
je
push
imul
jns
inc
gs
imul
js
dec
outsb
addr16
push
add
jp
inc
gs
imul
js
push
add
and
inc
gs
gs
popa
insl
gs
gs
push
add
inc
push
xor
cs
insb
add
push
push
xor
xor
fs
insb
add
scas
add
je
je
jb
jne
dec
outsb
outsw
inc
add
add
je
gs
imul
scas
add
imul
jae
dec
add
insl
imul
outsl
arpl
jae
add
add
je
jne
jb
outsb
je
jb
arpl
jae
xchg
add
imul
mov
inc
gs
je
dec
popa
outsb
fs
add
jne
inc
gs
outsl
fs
gs
imul
add
pusha
add
push
gs
js
gs
imul
gs
add
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
fs
push
dec
jne
je
inc
jns
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
pop
add
je
popa
outsb
fs
gs
outsl
jne
je
add
inc
gs
imul
or
dec
gs
jo
gs
jb
jns
jbe
push
imul
jb
gs
add
je
inc
push
add
mov
inc
gs
inc
dec
inc
push
add
cld
add
je
push
dec
outsb
outsw
add
push
imul
insb
insb
outsl
arpl
add
add
popa
jo
gs
insb
insb
outsl
arpl
lret
je
push
outsb
ja
outsb
add
add
je
jb
outsl
arpl
fs
js
push
add
push
imul
jne
jb
add
adc
dec
gs
jo
imul
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
cmp
inc
gs
jne
jb
outsb
je
jb
arpl
jae
fs
add
je
jns
je
insl
push
imul
insb
gs
imul
inc
dec
popa
jo
je
imul
add
insb
je
inc
jns
gs
outsl
push
imul
cmp
dec
inc
dec
popa
jo
je
imul
add
je
je
imul
inc
add
mov
inc
gs
je
imul
push
add
insb
add
je
outsl
arpl
gs
outsb
outsw
inc
add
jns
push
imul
jb
je
arpl
mov
push
jns
je
insl
dec
outsb
outsw
add
add
subl
add
push
popl
mov
add
daa
fsubrp
gs
and
enter
out
mov
or
jo
sbb
mov
inc
bound
jecxz
sahf
faddp
and
and
bound
add
testl
jno
and
push
xlat
ret
insl
movb
add
xchg
fisttpll
test
aam
pop
iret
dec
in
pusha
push
lds
dec
inc
jle
pop
add
cld
add
sbb
in
divb
mov
jle
ja
idivl
xchg
pop
mov
jp
pop
hlt
subl
mov
xchg
icebp
xchg
xor
aas
ror
mov
mov
dec
clc
inc
into
pop
mov
inc
sbb
xlat
dec
hlt
cmpsl
add
das
scas
mov
imul
push
dec
cmp
or
aad
arpl
push
data16
test
subb
mov
test
fcompl
into
int
push
loop
outsl
adc
jo
lock
jns
scas
jnp
mov
dec
outsb
les
mov
sbb
sub
adc
or
xchg
jo
out
push
stos
inc
push
jnp
pop
aam
mov
sbb
jns
fbstp
push
add
mov
fdiv
xor
int3
push
and
enter
lea
iret
imul
and
push
cwtl
mov
test
mov
mov
mov
cld
cmc
cmp
mov
mov
lods
jae
lret
push
and
fsub
and
shrb
dec
mov
ds
cs
js
and
out
pop
scas
push
jno
adc
fisttpll
inc
push
xlat
outsl
sbb
mov
ret
std
push
xor
jp
adc
flds
push
decl
lods
pushl
ret
je
loop
addr16
mov
imul
js
mov
and
int
imul
imul
addl
and
gs
scas
test
lret
pop
xor
cmp
or
cmpsl
inc
xlat
fs
scas
jge
stc
pop
dec
xor
ret
dec
cmpsl
pop
jmp
cmpsl
add
lcall
dec
lock
rcll
aad
fisubrs
pop
jb
bound
mov
addr16
dec
jne
not
js
insl
jge
flds
cmp
xor
mov
int
pop
test
dec
cltd
pushf
test
sub
aaa
test
inc
cmp
aaa
xchg
in
cmpsl
ror
gs
or
icebp
add
mov
dec
cmp
cmp
das
cmc
sub
cs
cs
dec
jge
xchg
ljmp
das
and
and
lcall
dec
jb
test
push
sbb
movsl
test
xor
mov
or
push
or
enter
data16
pop
nop
cwtl
dec
xchg
test
leave
lds
dec
aas
or
mov
fwait
and
sti
lret
test
shlb
popf
lods
jl
pop
dec
inc
imul
cli
pushf
sahf
mov
ret
data16
dec
ja
dec
adc
or
mov
loop,pn
wrmsr
mov
xchg
fisubrs
xor
pop
push
dec
mov
dec
cli
das
cmp
inc
lods
mov
movsb
mov
mov
scas
push
dec
jecxz
arpl
inc
fdivrl
dec
sbb
loope
es
shl
fdivr
dec
mov
xchg
rorl
out
or
mov
mov
stc
add
insl
and
nop
push
fldcw
std
outsb
dec
pop
test
dec
sbb
mov
arpl
orl
mov
or
in
dec
int
jbe
enter
mov
movsl
mov
rcr
add
cs
pushf
jp
xlat
sbb
sub
push
adc
or
pop
and
pop
or
out
out
insl
push
lock
add
mov
sub
lods
lea
xchg
sub
mov
add
test
push
jmp
mov
mov
cmp
lret
xor
or
mov
ss
adc
push
mov
xchg
mov
jbe
cmp
jmp
cltd
es
adc
sub
icebp
push
xor
outsl
dec
cmp
fmull
stos
jp
ret
pop
mov
dec
stos
or
dec
clc
jp
iret
mov
std
xchg
push
clc
xor
fs
xchg
dec
xchg
sti
xor
stos
sahf
inc
mov
mov
stos
xor
stos
scas
dec
icebp
repz
mov
dec
subb
mov
jecxz
pop
xchg
pop
scas
inc
xchg
stos
xor
aas
add
popf
sbb
mov
push
pop
mov
ds
add
shl
inc
sub
jb
pop
ret
sub
xor
push
inc
jge
lods
int
or
ret
and
test
fdivl
lods
es
sbb
out
cltd
fisubrs
adc
xchg
xchg
mov
adc
popf
pop
cmp
dec
stos
mov
mov
in
sbb
dec
mov
dec
mov
sub
dec
call
aam
dec
and
loop
push
xchg
push
cmpsl
jb
push
xor
cli
or
inc
outsb
jb
icebp
jae
sub
arpl
push
push
jnp
incb
adc
xor
cmp
mov
mov
loop
pop
data16
outsb
es
mov
es
andl
mov
sub
enter
mov
call
add
inc
scas
mov
or
add
es
iret
cmpsl
outsb
movl
fwait
mov
dec
aaa
daa
pop
sub
call
call
push
inc
push
pop
mov
pop
dec
push
mov
dec
inc
xor
inc
repnz
xor
es
pop
push
add
mov
pop
mov
xor
cmp
lea
loope
call
call
fwait
mov
in
pusha
in
fcompl
xchg
or
or
bound
xchg
inc
repnz
adc
push
fcoms
movsl
hlt
push
and
xlat
cli
add
pop
xor
stos
flds
jl
call
call
call
sbb
pop
inc
lods
push
and
mov
inc
insb
pop
enter
and
imulb
dec
mov
nop
xor
in
mov
movsb
insl
push
popf
cmp
pop
mov
fadd
ret
push
out
or
call
call
mov
pop
mov
imulb
es
mov
mulb
enter
mov
adc
push
push
push
and
adc
int3
lcall
xchg
cwtl
es
cld
inc
sarb
pop
subl
pusha
cmp
mov
out
xor
call
call
lcall
dec
into
stos
sub
fdivl
imul
aad
jnp
mov
xlat
and
and
and
and
and
mov
les
idiv
sub
xchg
and
jbe
addr16
call
call
pop
lret
adc
jns
xor
or
or
mov
xchg
out
fcompl
jno
imul
je
aaa
mov
and
sarl
mov
fcom
or
les
mov
mov
in
daa
jno
outsb
mov
call
call
test
incb
add
jmp
gs
icebp
mov
mov
adc
or
aas
or
mov
adc
lea
stos
fs
mov
stos
call
call
call
lret
arpl
dec
test
ss
jno
jo
or
cwtl
ja
in
fwait
call
call
movsb
cmpsl
and
ljmp
sbb
fnstsw
ret
jmp
call
call
call
out
or
adc
loop
fwait
in
nop
sub
sti
mov
mov
jbe
sub
call
call
mov
popa
fs
out
lcall
out
subb
adc
leave
adc
mov
cmp
call
fstcw
xor
dec
dec
pushf
icebp
and
pop
xorb
mov
call
call
mov
xor
mov
sbb
test
lock
lock
lret
cli
and
daa
jge
xor
lods
xor
and
and
and
ljmp
call
loopne
jmp
lahf
rcrb
daa
loopne
bound
and
stc
stc
call
call
call
fdivl
sahf
pop
push
mov
mov
push
mov
loop
outsl
pusha
adc
popa
adc
popl
addb
repz
call
call
lea
out
scas
inc
push
call
call
call
stos
mov
loope
push
pop
cltd
jg
call
call
call
mov
jo
fwait
pop
aas
rol
in
call
call
adc
outsl
push
fidivs
rorb
push
jle
cmpb
call
call
dec
pop
cmp
cli
jmp
inc
sub
sbb
and
ja
aas
sub
test
push
xchg
cmc
ds
into
aaa
fisttpl
shlb
ret
xor
xchg
shrb
insb
stos
imul
call
call
add
xchg
in
cld
dec
call
call
call
rcrb
pop
out
cmp
jl
call
call
xor
cmp
out
jne
inc
adc
call
sar
add
and
and
and
and
and
and
adcb
out
loop
add
scas
mov
je
inc
mov
cmc
lock
cmpsl
sahf
push
test
or
mov
cwtl
in
jns
sub
xchg
mov
mov
push
dec
jo
sahf
dec
lods
inc
push
iret
jg
out
pusha
xchg
add
call
call
call
dec
cwtl
jae
sbb
dec
sub
jnp
inc
test
in
or
lret
lock
mov
cmp
out
dec
ds
add
call
dec
sbb
adc
add
sahf
fisubrl
imul
test
and
call
call
call
loopne
lock
lcall
lea
mov
iret
popa
inc
out
xor
dec
xor
call
call
call
out
inc
push
das
gs
je
cmp
lock
sbb
push
and
bnd
test
xchg
sbb
push
cmpsb
aaa
call
call
ja
sbb
movsl
xchg
pop
ljmp
xor
call
call
call
call
nop
sarb
stos
pop
pop
or
jg
dec
jmp
aaa
mov
rclb
adc
stos
cmp
mov
cmp
fistpl
sbb
dec
icebp
jae
call
xchg
or
jmp
out
and
mov
sbb
or
repz
call
call
ja
test
addr16
test
ficoms
lods
cmpsb
in
mov
enter
lahf
fnstsw
and
and
and
and
and
and
popa
xlat
ds
call
outsl
mov
or
lea
mov
outsb
mov
call
call
fcoms
pop
call
call
and
cmp
mov
jmp
add
lds
xchg
das
and
aad
cmp
adc
push
or
les
insl
pushl
call
call
call
shll
mov
jo
or
xchg
pop
fcmovnb
movsb
add
xchg
or
int
jl
jmp
sti
das
push
jne
mov
faddl
mov
in
fwait
jb
pop
cmp
cmpsl
jmp
add
es
rclb
inc
push
test
lods
jl
mov
inc
stc
push
into
pop
xchg
jp
inc
mov
call
call
rolb
psubsw
scas
xchg
fucomip
lret
fnstcw
ror
jne
mov
dec
js
xchg
xor
add
mov
fsts
repz
mov
cmp
pop
aad
aad
call
call
call
call
jns
out
xchg
and
mov
jae
lcall
pop
jb
xchg
xchg
lods
xchg
fistpll
xor
mov
push
ffree
mov
push
xor
sbb
mov
sbb
pop
scas
mov
flds
jbe
addr16
sahf
inc
or
mov
cmp
aaa
call
call
call
lock
mov
stos
fwait
mov
jno
fldt
in
and
xchg
sbb
cmp
pop
jmp
adc
repnz
outsl
or
mov
dec
mov
gs
aad
push
mov
lock
mov
enter
adcb
stos
call
call
call
xor
lret
scas
scas
jb
lods
pop
sub
and
and
and
and
and
and
divl
jb
imull
fcomps
call
mov
outsl
shlb
addr16
pop
fcoml
int
mov
xorb
sbb
pop
outsb
cmp
in
pop
lods
pusha
test
mov
cmc
aas
imul
in
stc
test
jmp
iret
pop
inc
mov
int
mov
push
inc
out
push
lret
pop
cltd
sahf
cld
mov
js
adc
mov
pop
and
push
jmp
call
call
jmp
mov
sub
sbb
jmp
iret
insl
jle
mov
shlb
sub
adc
shrb
mov
dec
cmp
xchg
mov
icebp
mov
testb
ja
int3
xchg
mov
cwtl
mov
lods
je
or
or
call
call
call
sahf
fs
mov
push
stos
add
add
mov
addl
call
call
or
push
fsubl
and
lcall
mov
xchg
out
jnp
mov
mov
push
push
dec
into
xor
and
call
dec
testb
pop
fcomip
push
stos
jno
xor
inc
movsl
and
insl
bound
and
and
and
insb
and
lds
call
call
call
lods
cmp
sbb
push
sub
pop
dec
je
lret
and
cs
inc
rcll
arpl
push
dec
lcall
pop
stos
sti
xchg
popf
testb
addl
std
mov
hlt
insl
inc
cmpsb
call
call
xor
test
or
xchg
aas
jae
mov
test
sub
daa
out
callw
call
jno
xchg
fwait
cmpsl
pop
clc
sub
push
data16
sub
gs
clc
aas
push
jmp
addr16
xor
scas
movsb
add
shrb
adc
outsl
inc
and
mov
call
call
call
mov
jno
addr16
mov
inc
popa
int
xchg
xchg
dec
lods
call
call
jb
daa
shld
lods
jg
in
dec
add
push
sar
loope
and
inc
lods
je
dec
nop
xor
aam
mov
call
call
mov
call
call
call
call
repnz
call
call
divb
in
sub
dec
bound
push
js
jb
and
and
and
and
and
imul
adc
push
sbbb
icebp
ss
adc
xlat
data16
call
call
call
test
cli
mov
lods
sub
jae
pop
push
dec
dec
lods
ja
scas
and
jo
and
pop
punpcklwd
push
int
pop
out
mov
xchg
push
dec
into
sbb
call
call
call
jne
stos
nop
or
subl
pop
mov
aam
dec
mov
shl
mov
sbb
movsb
mov
lods
cld
or
fisttpl
outsb
push
bound
das
or
call
call
ror
aaa
pop
sub
dec
mov
popf
sbb
xor
sarl
call
add
js
push
stc
xor
dec
or
mov
inc
fwait
pop
stos
daa
or
push
repz
int
lcall
xchg
cltd
mov
sub
pop
jae
sub
hlt
pop
pop
pop
push
mov
call
call
repnz
jp
adc
or
sbb
ljmp
sarl
pop
ljmp
mov
add
xor
and
outsl
inc
movl
mov
jns
push
rdmsr
ja
mov
movsl
pop
jno
in
call
call
dec
xor
adc
cmp
cmp
movsb
jbe
xor
call
call
call
fldenv
add
fdiv
xchg
mov
inc
divb
mov
mov
fwait
lret
call
call
cmp
xlat
stos
fisubs
inc
fs
adc
and
xchg
pop
pop
out
sti
arpl
sbb
xchg
pop
and
and
and
and
and
mov
pop
push
out
sarl
call
call
call
inc
imul
xchg
das
mov
push
xchg
fstpt
pop
repz
call
adc
cs
dec
leave
pop
cwtl
mov
repz
fimuls
lcall
fisttpll
cmp
jbe
movsb
ret
cld
jp
loop
fwait
repz
add
mov
inc
hlt
mov
clc
jl
inc
in
leave
dec
dec
mov
jns
enter
sar
sarl
loope
in
ficoml
dec
repnz
les
stos
arpl
sub
pop
jmp
sarl
mov
or
inc
and
call
call
cmp
lock
sbb
sti
cld
push
rorb
jl
push
mov
scas
stos
rcrl
xor
jnp
dec
cmp
push
jl
clc
testb
push
lret
into
mov
push
arpl
dec
and
and
and
and
jmp
repnz
xor
call
call
mov
sbb
cwtl
out
jle
sub
outsl
sahf
call
call
xchg
test
add
push
ret
scas
inc
xor
lahf
addr16
mov
into
jmp
push
cli
ror
addr16
fmulp
call
js
and
roll
repnz
and
outsl
in
call
call
cmc
push
fs
pushf
das
adc
std
cld
daa
push
test
mov
mov
xorb
aad
adc
mov
xchg
mov
call
call
call
adc
xchg
jne
xchg
repz
dec
jg
dec
int
dec
daa
sbb
stc
testb
in
push
add
sub
fs
and
pop
mov
call
call
call
xchg
inc
ret
fmull
icebp
bound
sti
xor
fwait
sbb
dec
mulb
push
daa
call
call
mov
mov
outsl
dec
pop
mov
xor
dec
sti
ljmp
jmp
loop
mov
push
mov
nop
data16
call
call
dec
mov
cmp
cmp
jecxz
dec
fsubrs
jmp
mov
lds
in
clc
sub
xchg
lret
outsb
and
xchg
push
popf
lret
cmp
dec
mov
fbstp
or
mov
ljmp
sahf
add
adc
call
call
call
mov
clc
call
call
pop
mov
xor
or
call
call
call
ss
and
or
test
add
mov
dec
fisubrl
int3
inc
push
sbb
push
pop
test
call
call
icebp
jg
gs
imul
call
call
shl
js
inc
andb
and
and
and
and
push
call
call
call
mov
pop
cwtl
shll
lock
pop
je
int3
xchg
xor
sub
push
and
xchg
jbe
mov
orb
lahf
loopne
inc
cmc
xchg
and
test
test
push
aam
fcoml
pop
call
ja
push
test
repz
dec
or
mov
push
and
stc
and
push
call
call
call
pop
adc
or
repz
fcmovne
outsb
xchg
gs
pop
clc
adc
add
xchg
mov
addr16
pop
pop
and
adc
sub
icebp
bswap
out
mov
mov
sub
dec
out
sub
call
lretw
mov
dec
sub
mov
out
cmp
inc
orl
call
call
test
push
adc
loop
jmp
push
lret
call
call
call
xchg
xchg
into
xor
pop
mov
ja
bound
sub
fidivrs
lds
lods
mov
aaa
inc
and
leave
or
sbb
jle
sarb
scas
sbb
out
xchg
arpl
imul
pop
in
out
cmpsl
pop
add
clc
call
xor
and
and
and
and
and
and
jl
fmull
pshufw
call
lcall
pop
fistps
ret
incl
push
std
mov
and
and
ljmp
insl
mov
push
xlat
out
adc
call
call
call
lahf
xchg
mov
int3
inc
and
push
xchg
xchg
gs
stos
xchg
push
add
rcrb
out
jl
into
popf
sbb
call
call
call
shl
lret
pop
cmp
test
xor
scas
cmp
pushf
repnz
ljmp
call
int
aas
aaa
enter
mov
xor
outsb
adc
mov
push
and
dec
lods
xor
dec
cmp
xchg
push
or
mov
sub
scas
sub
mov
pop
aas
jb
jb
jae
pop
pop
je
xor
push
mov
into
cmp
mov
call
call
pop
xchg
or
xchg
aam
lods
mov
call
call
adc
les
adc
aam
and
repz
push
cmpsb
mov
mov
insl
sti
sbb
jecxz
or
mov
stos
jmp
jno
sbb
sub
and
and
and
and
jl
xlat
divl
pop
int
sub
in
pop
jecxz
xor
jo
xchg
out
jno
call
call
call
xchg
leave
sbb
dec
dec
dec
stos
insl
cld
jne
pusha
inc
sbb
insb
add
cmpsl
sub
sti
stos
lea
and
pop
sbb
inc
cmp
fsubrl
add
repnz
push
mov
fs
ljmp
ss
sub
test
pop
ljmp
lods
dec
shr
call
call
jbe
jp
leave
je
push
in
and
outsb
dec
stc
fnstsw
mov
call
call
call
inc
fldcw
sub
mov
aaa
cmp
loop
xchg
cmp
fwait
addr16
movsb
ss
cmp
mov
loope
ret
sarb
xor
mov
or
pop
sahf
lds
cltd
and
lret
call
call
call
mov
pop
jo
pusha
outsl
jbe
push
cltd
cmpsb
pop
and
inc
jle
jmp
dec
adc
es
xchg
sub
cmpsl
pop
lods
pop
call
call
cmc
js
inc
out
mov
xchg
lret
sti
into
dec
sbb
xchg
adc
lret
pop
in
fwait
imul
lds
std
dec
pushf
and
leave
mov
subl
test
inc
sbb
aad
aas
fwait
std
insl
sub
mov
int3
mov
call
call
andb
push
push
in
jmp
dec
dec
scas
sbb
lcall
and
and
and
and
and
bound
fstl
pop
or
push
sbb
daa
stc
jbe
sub
push
and
and
and
and
and
and
ss
insb
mov
aad
adc
js
cli
inc
mov
aaa
mov
gs
xlat
iret
movsl
lahf
loop
mov
push
mov
loopne
or
ss
cmp
insl
cmp
fistpl
mov
outsb
dec
int
mov
cmp
mov
cs
adc
pusha
js
and
call
call
call
call
ror
stos
iret
stos
mov
call
call
in
fwait
pusha
and
jae
mov
or
jecxz
stos
and
or
cmc
fwait
out
and
and
and
and
and
xor
add
insl
es
cld
pop
std
mov
push
push
in
mov
clc
pop
je
loope
test
call
call
popf
jecxz
loop
push
stos
mov
mov
mov
xlat
dec
icebp
scas
call
call
call
dec
mov
call
call
call
call
jle
ret
jo
cmp
jo
push
popa
cmp
and
and
and
and
mov
push
andb
or
lods
fs
ds
jge
in
jo
call
call
sbb
in
cmc
in
sbb
mov
nop
js
push
sarl
scas
mov
mov
pop
addl
push
test
iret
xchg
adc
addr16
lods
pop
mulb
call
call
mov
shl
sbb
orl
inc
push
mov
sbb
call
call
call
and
add
push
in
ljmp
call
call
call
call
jp
jns
and
sbb
push
in
and
nop
pop
sbb
dec
xchg
lods
addl
cmp
sub
dec
jbe
pop
stc
arpl
jne
or
dec
xor
call
call
call
mov
test
sbb
cmp
and
lahf
movsb
je
and
imul
jbe
aaa
cs
out
dec
ds
lock
call
cs
or
cmc
call
call
mov
mov
int
cwtl
addr16
out
mov
lods
adc
nop
adc
lods
cltd
rclb
into
mov
xor
push
inc
and
mov
pop
pushf
mov
cli
call
call
js
mov
add
jno
dec
inc
stos
add
popa
iret
add
xor
xchg
ds
add
pop
jge
push
adc
add
sbb
jns
cmp
imul
out
stc
rorl
daa
sbb
or
push
or
into
pop
push
call
call
call
in
pop
lods
adc
sub
daa
scas
mov
xchg
pop
repnz
inc
cmp
xchg
sub
cs
rorl
into
sub
cmp
outsb
xchg
pusha
pop
shl
sub
push
inc
cli
outsl
inc
popf
mov
hlt
outsb
daa
sbb
flds
jle
les
call
pop
fnstcw
inc
out
mov
jmp
mov
fbld
xchg
mov
and
and
and
sub
sbb
fisttpll
cld
or
and
mov
push
add
dec
fsts
out
shl
pop
dec
sar
ret
jne
sbb
xor
sbb
mov
in
xchg
mov
push
and
je
cwtl
hlt
std
cld
shrb
aam
jo
aas
sub
das
mov
fucomp
call
call
rorb
jl
repz
push
sbb
mov
xor
pusha
test
stos
addr16
cmc
divb
and
mov
push
movsb
jb
jns
mov
pop
lahf
dec
and
cld
call
call
call
out
pop
push
xor
mov
xor
add
shrl
pop
jle
xor
push
xor
insl
fstl
add
scas
enter
shll
xchg
frstor
or
pop
test
hlt
dec
pop
xchg
xchg
mov
test
call
call
call
cmp
filds
in
lahf
mov
xor
outsl
fmul
sbb
out
int
int
gs
gs
pop
das
mov
jns
and
lock
jns
sub
stos
call
call
cmp
scas
out
or
jg
dec
jmp
shl
inc
mov
sti
push
push
inc
stos
js
xchg
loopne
mov
bound
pop
sub
call
call
outsl
or
outsb
or
add
sub
mov
call
call
call
imul
nop
xor
push
sahf
push
or
cltd
pop
outsb
xchg
mov
cmp
push
cmp
jecxz
mov
or
mov
inc
jno
gs
hlt
add
pop
bound
ret
fwait
lcall
insl
pop
jae
icebp
rorb
fistpl
das
jecxz
into
and
push
mov
jns
inc
ret
test
call
call
push
nop
sbb
insb
xor
jg
push
data16
test
push
cmp
test
lret
xor
mov
fs
cmp
and
and
and
and
xchg
dec
cmpsb
and
add
xchg
jae
shll
mov
sub
adc
sbb
call
call
pop
les
mov
sub
ds
out
xchg
popa
in
lret
sbb
jp
orl
cwtl
push
outsl
mov
jb
push
sub
call
call
call
mov
int
call
call
xchg
jmp
call
call
mov
je
int3
ret
inc
inc
sbb
push
mov
ja
filds
pop
test
or
dec
sarl
push
push
jmp
or
int
cmc
xor
xor
stos
pop
les
call
call
adc
gs
inc
mov
add
aas
test
mov
mov
jl
push
cwtl
mov
les
ljmp
sbb
imul
test
mov
icebp
add
add
xchg
ljmp
inc
jae
jae
and
jbe
pop
or
dec
or
ljmp
call
push
fstps
imul
jle
dec
inc
lods
arpl
and
and
and
and
and
and
and
inc
fwait
push
call
call
cmpb
divb
insl
mov
scas
jnp
push
adc
scas
dec
inc
arpl
xor
call
call
lods
rorb
sahf
mov
lret
stos
jb
xlat
push
add
jmp
push
sub
push
mov
cld
sub
cmp
call
call
call
call
fucomi
pop
scas
and
cmpsb
inc
jmp
inc
mov
aad
add
dec
xchg
aaa
outsb
push
sbb
cli
add
call
call
fimuls
dec
out
cmc
jg
push
mov
mov
and
and
and
and
and
cmpsl
sub
mov
subb
and
and
and
and
and
and
and
or
xlat
and
pop
push
pop
jecxz
addr16
out
sub
mov
or
nop
mov
movsb
push
call
loopne
jb
xor
scas
jne
pop
sbb
sub
add
xor
call
call
notl
push
add
and
and
and
and
and
and
inc
sub
jbe
sub
pmaxsw
cltd
call
call
call
call
add
and
and
inc
xor
aaa
jmp
mov
in
xchg
fldt
mov
out
xor
jb
pusha
push
icebp
imul
gs
fstpt
insl
int3
mov
xchg
in
jge
lcall
inc
jl
push
xchg
call
call
call
mov
adc
lods
adc
jnp
jle
inc
adc
aam
in
mov
repz
arpl
rcl
and
sbbl
ds
xchg
sub
call
call
push
fs
das
add
mov
jne
lds
test
mov
or
into
dec
das
xor
pop
inc
test
push
add
imul
dec
das
inc
pop
js
xchg
and
xor
mov
inc
or
pop
cmpsb
mov
mov
jo
bound
and
and
and
call
call
mov
mov
lods
push
loopne
sub
test
aad
enter
mov
pop
test
testl
leave
push
jecxz
pusha
scas
jo
cmpsl
aam
jp
call
call
cmc
sub
fwait
and
mov
fs
push
sub
call
call
cs
and
and
and
and
and
and
and
sub
mov
into
nop
sti
mov
nop
call
call
jmp
and
and
and
outsb
add
cmpsb
cli
and
add
sub
mov
add
sub
cmp
into
cmp
dec
mov
mov
call
mov
push
push
jp
xor
rcrl
fstpt
pop
lret
sbb
clc
pop
push
jmp
or
jg
cli
imul
sysexit
in
pop
fmuls
jo
push
call
fndisi(8087
enter
and
pop
jl
icebp
mov
in
adc
or
adc
hlt
xchg
dec
jae
or
pushf
gs
cmpb
and
bound
or
jmp
mov
js
add
fmull
mov
mov
pop
fdivrl
lock
mov
call
call
call
add
add
jae
rorb
ss
xor
jo
ljmp
loop
lods
hlt
call
call
in
cmp
push
jp
fdiv
insb
add
push
cmp
sbb
addr16
fstpl
insl
cs
and
jl
test
sub
jecxz
inc
out
mov
call
call
call
pop
repz
mov
jecxz,pt
out
aam
pop
lds
inc
cmp
fwait
dec
push
dec
jmp
gs
enter
and
and
and
and
or
push
je
in
mov
call
call
call
add
dec
inc
cmp
out
stc
cmp
call
call
sbb
nop
sub
or
in
jg
add
call
call
call
icebp
arpl
call
call
movsb
dec
ret
je
push
jecxz
iret
addr16
iret
mov
xchg
ss
and
int
movl
push
ss
les
mov
call
sub
adc
or
sahf
cmp
push
dec
and
mov
pop
xor
jbe
xor
pusha
cli
ss
outsl
add
call
call
out
stos
daa
das
mov
hlt
inc
loopnew
fdivrs
lock
lahf
mov
sarl
jb
adc
sahf
jmp
test
call
call
cwtl
jecxz
cmpsb
clc
arpl
call
call
rcrb
dec
loopne
adc
fdivrs
es
sahf
enter
push
idivl
sbb
int3
mov
adc
push
sti
call
into
mov
les
and
and
and
and
pop
call
add
xor
inc
xlat
push
dec
jne
sub
shll
inc
pop
iret
xchg
inc
ret
lods
push
loopne
push
pop
mov
call
call
fidivl
aaa
dec
enter
lea
sbb
sbb
inc
in
adcl
lds
insl
inc
or
subl
fucomp
call
call
fs
lret
pop
test
imul
clc
call
cld
dec
cmpsb
mov
dec
inc
mov
xlat
sbb
call
call
call
push
jne
popa
scas
pop
fiadds
xor
in
outsl
jb
push
cld
mov
cltd
pop
pop
jmp
push
mov
sbb
xchg
and
pop
jge
lds
shr
insl
cmp
faddl
shr
call
call
call
ret
scas
push
cmp
aam
mov
xchg
sbb
insl
pop
pusha
or
ds
jae
repnz
xor
aas
je
fwait
gs
call
call
cs
jae
fmuls
adc
jae
push
fcoml
sarb
fsubs
mov
mov
popa
addr16
iret
pop
sbb
or
cmp
vmptrld
or
cli
insb
and
and
and
and
and
out
nop
mov
data16
insb
movsb
add
xchg
cmpsl
inc
pop
cmp
jge
pop
pop
cmp
push
mov
hlt
cmpsl
lock
pop
push
loopne
jae
pop
std
cmc
shrl
mov
mov
jno
push
pop
mov
addr16
call
bound
sbb
inc
ja
in
add
pop
hlt
ret
push
icebp
scas
test
imul
lods
xor
mov
je
out
dec
dec
cwtl
push
sbb
test
jg
sbb
adc
mov
jge
jnp
mov
shrl
pop
cmpsb
sbbb
repnz
lods
call
call
jmp
push
jmp
cmp
push
xchg
lds
cmp
mov
cmpsb
test
cmp
mov
mov
dec
jl
xor
stos
mov
in
fnstsw
jp
jbe
add
or
call
jl
xchg
jae
xchg
or
call
call
subl
cmp
aad
lods
cltd
cmp
xchg
clc
and
jge
push
in
xchg
cmpsl
decl
mov
sarb
pop
mov
movsb
sub
xor
adc
ja
leave
std
ret
ljmp
insl
xor
and
call
mov
mov
insl
sub
dec
jmp
loopne
inc
testl
cmp
jb
dec
or
xor
pop
xor
mov
call
call
call
call
aas
out
daa
and
mov
dec
cmp
int3
and
inc
mov
and
and
and
and
dec
jo
mov
cmpsb
adc
and
sub
mov
outsb
xchg
push
sbb
mov
call
call
push
mov
test
add
mov
repz
pop
movsb
mov
fwait
push
mov
fbld
fnstenv
mov
iret
fistl
pop
jo
mov
mov
cli
add
mov
mov
js
call
call
call
jl
loopne
push
in
outsb
mov
movl
lret
xor
pushl
insb
std
xor
insl
sub
call
call
sti
test
fsubs
mov
aam
cmp
xchg
fsub
or
and
cmpsb
rcll
and
mov
cld
add
jnp
stos
ds
shll
call
sarl
test
jge
sub
inc
xor
sbb
cmp
sub
xor
push
and
mov
and
test
mov
scas
pop
or
enter
cwtl
mov
ds
mov
jne
and
mov
out
add
scas
xchg
jg
fmul
or
call
call
cwtl
fisttpl
mov
fdivs
push
jae
adc
pop
hlt
jmp
lret
inc
imul
and
mov
sti
ds
ds
mov
daa
dec
fs
outsl
push
xor
call
call
adc
push
mov
fucomip
call
call
jle
out
mov
popf
mov
and
and
and
sbb
fstl
in
jnp
dec
in
nop
pop
insb
mov
add
inc
mov
pushf
inc
aam
add
xchg
call
call
call
scas
sahf
inc
push
in
jno
cmp
pushf
xor
and
in
xor
xchg
and
popa
lahf
daa
test
pop
and
das
dec
call
call
call
mov
lods
mov
xor
mov
mov
test
out
xchg
imul
push
fs
mov
cmp
call
call
scas
lock
mov
mov
mov
adc
sar
mov
bound
mov
or
or
or
lds
sti
shlb
je
lcall
call
call
call
loope
outsl
push
lods
push
enter
sbbl
rolb
pop
dec
scas
aam
loope
clc
dec
imul
call
call
call
jl
out
mov
clc
ja
inc
inc
ret
xchg
sub
lret
xor
sub
and
loop
iret
sbb
ds
mov
loopne
mov
movsl
nop
add
xor
cmp
or
in
jmp
test
aaa
mov
and
and
and
and
and
and
sub
aam
aam
lock
out
or
call
call
push
pop
inc
add
das
rcll
bound
mov
push
psubq
pop
or
loop
adc
jo
and
adc
call
call
call
cmp
sub
call
call
ret
and
call
call
lds
fnsave
movsl
jns
ficoms
pushf
cmovbe
and
and
and
and
and
and
and
inc
call
lcall
pop
rcl
pop
addb
stos
call
call
xchg
or
xor
cld
xchg
inc
push
xchg
sbb
inc
add
xchg
gs
push
addl
sub
pop
xor
lahf
add
insb
xor
mov
pop
imul
cmpsb
movsb
pop
mov
pop
lret
call
call
call
xor
call
call
or
push
aaa
pop
inc
lret
andb
outsb
arpl
cmpsb
push
mov
hlt
jne
in
enter
lret
pop
add
lcall
sbb
fistl
stos
pop
mov
inc
movsl
aam
andb
daa
xchg
adc
call
call
sahf
xchg
ljmp
jb
fiadds
jne
push
addl
mov
je
shr
sub
adc
stos
and
call
jmp
rclb
out
push
testb
or
dec
call
call
movsb
sti
xchg
loop
inc
shl
mov
cld
cltd
clc
sbb
into
jae
enter
fwait
js
loope
add
aam
pop
xorl
cmpsb
xor
dec
push
jno
test
sbb
push
mulb
mov
test
repnz
jne
hlt
jle
push
call
call
call
call
call
call
sub
leave
fnstcw
pop
cmp
loope
push
icebp
call
xchg
mov
jg
hlt
fs
les
cmp
insl
sub
addl
fs
add
fsts
je
cmp
xchg
call
call
and
and
and
and
insl
inc
inc
pop
aad
or
cmp
xchg
add
sub
sub
fmuls
cmc
stos
cmp
lds
and
and
and
and
and
and
and
and
stos
fisubs
jo
xchg
aas
xor
xlat
cmp
xchg
das
adc
loopne
repnz
mov
jbe
lcall
cmp
pop
je
call
call
test
sbb
test
lds
pop
cwtl
sbb
in
push
xchg
fdivl
test
push
out
mov
repz
sarb
dec
call
call
xchg
cmp
dec
shrl
popa
jmp
popf
jbe
jg
xchg
ficomps
in
mov
mov
push
inc
cmp
lahf
cmpsl
icebp
popf
sub
aaa
cli
push
adc
push
mov
icebp
push
inc
or
push
inc
call
call
call
outsl
sbb
test
lock
jnp
imul
cld
adc
sbb
mov
or
push
push
add
xor
shlb
lcall
xor
out
ss
add
ret
ljmp
gs
sarl
mov
ss
mov
call
call
push
mov
fcmove
shrl
xchg
call
call
call
mov
sbb
cs
insl
fmuls
xor
call
call
call
cwtl
cmp
xchg
mov
ss
mov
sbb
outsl
push
xor
mov
js
aam
push
jle
cmp
dec
in
or
cmp
pop
mov
call
call
lcall
and
xchg
mulb
and
and
and
movsb
sbb
mov
lds
or
xor
sbb
aad
xchg
lods
scas
pop
movsb
fprem1
xchg
or
addr16
pop
out
mov
cmp
fisubs
sbb
xor
xchg
and
fistpl
call
call
data16
cmp
std
or
lcall
mov
and
and
and
and
mov
pusha
mov
cmp
repz
jmp
rcll
jae
outsb
movsl
jo
test
js
and
and
and
and
and
stos
mov
or
jo
sbb
fisubs
mov
shll
sbb
test
outsl
ljmp
call
call
adc
out
sub
add
xor
call
call
rol
ja
fnstcw
add
mov
sahf
inc
or
popf
cmc
jmp
or
insb
jle
dec
dec
inc
push
sub
ss
fwait
shlb
sbb
or
or
push
rorl
aaa
sub
call
call
mov
test
scas
push
adc
aas
fiadds
imul
into
loope
bound
jmp
add
repnz
xor
dec
mov
push
xchg
pop
xor
outsb
in
mov
ss
cmp
mov
pushl
call
call
call
sbb
cli
push
lret
inc
lods
push
inc
jecxz
add
jmp
inc
mov
xchg
dec
insl
pop
outsl
push
pop
dec
pop
sbb
outsb
sub
loopne
jne
cwtl
popf
test
xchg
adc
jp
jno
jecxz
jnp
dec
stos
sub
pop
or
test
jae
or
pusha
jns
pop
fs
call
call
out
or
mov
inc
and
pop
sbb
orb
push
pop
and
dec
push
inc
adc
je
data16
dec
hlt
sub
out
mov
stos
cmpsl
mov
loope
adc
sub
test
or
sub
sti
outsb
mov
xor
out
cmc
mov
scas
push
call
call
call
dec
testl
call
add
cmpsl
cmpb
mov
adc
push
negb
sbbl
call
out
sub
push
jne
std
lods
sahf
sbb
sbb
fdivl
and
lahf
jmp
scas
rcrl
dec
adc
jo
xor
lods
mov
fwait
mov
fcomi
push
add
inc
mov
loopne
daa
and
and
and
and
and
mov
or
or
aam
call
call
call
call
in
mov
lods
jl
es
inc
xchg
xchg
push
pop
sub
cld
push
mov
pop
in
movsb
lcall
mov
mov
xchg
push
sub
jge
inc
push
loop
rcr
loope
loop
add
in
adc
cltd
dec
dec
in
fwait
ljmp
call
call
add
enter
jmp
mov
and
or
sbb
and
dec
or
xor
sub
pop
mov
loopne
cs
xor
mov
cld
insl
xor
push
sti
mov
push
imul
and
and
and
and
bound
mov
call
call
xchg
or
mov
fistpll
in
je
hlt
dec
dec
push
imul
cmpsb
pop
icebp
adc
call
call
add
xlat
pop
xor
xor
and
fs
or
in
dec
mov
jg
aam
leave
repnz
jns
xchg
es
or
and
inc
int3
leave
xchg
not
dec
mov
dec
leave
adc
cmp
or
insb
stc
mov
lcall
jb
mov
pop
call
call
jno
sbb
inc
sti
xor
xchg
pop
add
mov
movsb
mov
xor
rorb
sub
mov
dec
cmp
push
aas
insb
shll
call
call
jno
orl
push
adc
adc
test
xchg
and
push
mov
cmc
pop
mov
pop
mov
call
call
call
inc
fwait
arpl
mov
out
fistpl
jbe
test
leave
xchg
in
inc
cmp
test
dec
shll
jo
sub
call
call
movsb
pop
pop
lds
push
pop
pop
call
jmp
mov
hlt
mov
jmp
and
and
and
and
and
divb
call
call
adc
testb
mov
cwtl
dec
dec
mov
and
lds
jg
pop
dec
cmp
mov
cmp
inc
jecxz
rclb
push
inc
xchg
jl
jnp
sub
push
iret
adc
inc
fs
and
dec
add
xchg
aas
cmpsb
cwtl
call
call
adc
cwtl
xor
hlt
xor
pop
sub
and
and
and
and
and
and
cmpsl
in
add
bound
jp
lretw
mov
push
mov
cltd
insl
addr16
hlt
add
mov
sbb
roll
roll
pop
insl
ja
sbb
call
call
es
sbb
or
push
jb
shrl
shl
int3
inc
jge
push
jbe
jge,pn
testl
call
or
test
xchg
push
in
dec
dec
xlat
call
call
imul
orl
inc
or
push
pop
call
call
call
call
fistl
push
sbb
rorl
std
gs
les
jb
or
push
cwtl
lcall
add
push
push
add
cmpsb
sub
fimuls
push
ljmp
gs
xchg
and
stos
push
loopne
or
imul
call
call
mov
jle
ret
and
pop
ja
pushf
mov
cmp
insl
and
call
call
or
test
insb
adc
dec
push
or
test
xor
aad
call
lds
push
movsb
add
sub
les
or
psllw
lret
dec
lret
inc
cwtl
and
push
mov
cmc
sti
testl
call
mov
aam
or
push
iret
in
or
and
lds
popf
push
call
call
fsts
test
adc
cmpsl
push
jns
repz
arpl
add
xlat
xor
ss
mov
dec
pop
lret
outsb
movsb
loope
movsw
clc
xor
dec
divl
adc
test
in
cwtl
xor
popf
popl
call
call
mov
call
call
popf
stos
clc
jnp
mov
pushf
sbb
jp
jno
xor
test
fwait
in
movsb
leave
call
mov
xchg
mov
outsl
or
cld
jmp
mov
scas
mov
push
mov
push
adc
fwait
xchg
push
std
sub
push
sub
data16
subl
call
call
ret
and
mov
bound
cld
inc
std
inc
loop
add
lcall
sbbl
loopne
jns
xchg
cs
cltd
scas
and
and
and
and
and
cmp
mov
enter
call
call
int
rclb
pop
mov
xor
cmp
jge
jmp
cmp
and
push
stos
mov
icebp
xchg
std
ret
fsubl
inc
lcall
call
call
cs
pop
mov
pop
popa
dec
inc
adc
les
fisubs
dec
cmp
sbb
xchg
int
push
das
push
fwait
imull
jge
jmp
mov
cmpsb
xor
xchg
inc
mov
call
call
hlt
mov
and
gs
mov
test
call
call
pop
or
mov
xchg
push
push
insl
call
call
testl
imul
popa
push
inc
pusha
jbe
or
icebp
pop
pop
stos
mov
dec
clc
push
add
sti
xchg
pop
insl
lods
outsw
xchg
or
mov
call
movsb
jmp
fs
mov
ss
aaa
xor
call
call
call
push
add
add
mov
subl
and
enter
cmpsb
pusha
xor
movsb
cmc
scas
pop
in
mov
sbb
mov
cmpsl
out
adc
jb
scas
xor
loope
call
call
daa
sahf
sahf
outsb
call
call
int
sub
push
mov
pop
push
add
mov
jmp
pop
inc
imul
mov
mov
fcomps
rcll
mov
shl
je
jmp
iret
jo
cltd
fbld
call
call
call
inc
aas
xor
shll
pop
xor
jmp
scas
and
into
dec
lret
jno
pop
cs
clc
hlt
mov
mov
mov
call
call
pusha
dec
cmp
sti
pop
lret
cmc
jge
pop
in
sbb
jg
lods
add
xchg
dec
dec
push
and
add
pop
cmp
mov
mov
sbb
jl
ljmp
call
call
inc
adc
sub
push
neg
pusha
das
aas
in
and
and
and
out
adc
or
je
pop
aam
cs
push
inc
and
mov
lahf
push
es
pusha
iret
push
mov
inc
sbb
cs
jge
push
fadd
mov
jne
call
cmp
arpl
lea
imul
notb
push
iret
call
ret
test
lods
fwait
xlat
movsl
fwait
cld
pop
call
call
enter
add
cli
cmp
test
jno
clc
sahf
push
out
inc
add
fisubrs
pop
lret
sbb
pushw
lods
jne
cmp
imul
jl
call
pop
mov
call
call
jecxz
inc
ja
mov
iret
out
aad
mov
in
dec
push
in
out
jns
scas
inc
jl
cmp
jbe
mov
stc
bound
or
jb
sbb
call
call
pop
add
jmp
hlt
jmp
mov
mov
dec
sub
es
xorl
outsl
sti
jge
mov
rcr
cmp
repnz
jle
test
push
call
mov
cmpsl
pop
imul
adc
call
call
repnz
pop
mov
push
push
jg
cmpsb
stos
lods
sahf
or
dec
cmp
inc
out
sub
add
or
mov
nop
cmp
mov
call
call
mov
or
stos
and
outsl
mov
call
cmpsl
sbb
sbb
cmc
xor
xchg
mov
in
mov
lods
pop
mov
mov
adc
jle
ljmp
mov
and
and
and
and
and
and
aas
dec
mov
mov
dec
je
or
xchg
push
mov
call
in
mov
xor
sbb
loop
sub
sti
sub
push
mov
or
test
and
call
call
nop
lods
scas
outsl
cmc
pop
mov
mov
sbb
inc
aaa
dec
inc
imul
stos
cmp
xchg
push
insb
nop
mov
dec
int3
add
xor
ja
insb
adc
jle
mov
inc
addr16
add
mov
or
mov
idivb
popa
sbb
pusha
out
cld
call
call
call
loop
pop
cld
mov
movsb
into
mov
loop
ds
mov
popa
jo
mov
movsb
scas
ds
push
repnz
pop
in
inc
in
flds
or
aad
sbb
dec
sti
pusha
xlat
pop
dec
sbb
call
call
call
movl
inc
mov
sub
fsubrs
sbb
xchg
mov
and
shll
leave
push
and
fs
sub
xchg
aaa
aaa
jne
jp
lahf
dec
xor
lret
rcrb
jg
rcr
sti
mov
xchg
or
and
callw
stos
cli
cmpl
movsl
test
jo
jbe
in
fs
pop
inc
in
xor
call
call
push
jmp
popf
dec
imul
imul
mov
cs
negb
sub
std
mov
outsb
dec
lahf
sub
xor
cltd
lock
rorl
pop
or
notl
sub
or
add
ds
insb
scas
and
adc
mov
jecxz
pop
scas
mov
call
call
push
in
push
in
stc
mov
push
push
sub
cltd
je
loopne
call
call
scas
and
cltd
mov
sbb
in
ds
xor
or
call
call
xchg
aas
jmp
sahf
and
and
and
and
and
dec
dec
push
or
jno
xchg
adc
mov
cmp
sub
mov
scas
jns
cmp
data16
out
hlt
movb
jmp
inc
add
sbb
xor
imul
lock
ror
cltd
outsb
mov
and
int3
call
call
call
call
mov
push
fdivs
xchg
or
jno
pop
je
pop
cmp
jmp
jg
fcmovb
mull
dec
and
test
popa
mov
aaa
ret
sti
pop
pop
leave
dec
loopne
push
inc
dec
test
add
and
and
and
adc
fwait
leave
jae
mov
es
mov
jno
jae
inc
lods
cltd
clc
xor
out
jbe
cmc
pop
gs
imul
mov
sub
xchg
and
dec
xchg
cmp
cmp
cmp
push
call
call
sbb
mull
mov
xchg
jnp
lcall
loope
and
stc
cmp
adc
mov
loope
jne
add
scas
call
mov
push
cmp
shrb
mov
sahf
loop
fcoml
push
pop
aad
push
test
jnp
call
call
call
lahf
sbb
mov
xor
repz
lds
and
insb
call
call
sbb
inc
in
pusha
pop
outsb
lret
push
pop
xchg
addl
stos
push
jmp
or
call
lock
or
lea
call
call
call
dec
popf
push
mov
rol
inc
xlat
test
mov
call
call
xorl
imul
mov
xchg
jb
rcl
xchg
or
std
lahf
sbb
dec
add
mov
inc
call
call
repz
gs
test
xor
xchg
decb
and
in
push
mov
inc
and
data16
shll
jnp
fmul
and
cld
call
call
fwait
lea
insl
dec
outsw
jb
les
pop
mov
pop
sti
test
scas
adc
adc
xor
and
and
and
jle
jg
fdivp
stos
adc
cmpb
out
and
out
test
cmc
mov
add
dec
lret
mov
pop
add
out
dec
cmc
pushf
cs
call
mov
int
or
inc
sub
jge
pop
cli
repz
sarb
call
call
adc
inc
sbb
mov
cmp
or
test
ret
hlt
add
dec
jg
call
call
call
dec
repz
push
cmpsb
mov
xor
rclb
stc
push
adc
xor
pop
movsl
aad
hlt
pop
mov
test
sbb
sbb
js
call
call
call
mov
inc
push
mov
divl
insl
add
aad
lods
dec
cli
addr16
lds
sub
xchg
mov
inc
mov
inc
es
insl
es
out
dec
xor
call
call
call
mov
pop
cmp
mov
movsl
out
shrl
cld
int
jo
outsb
je
call
call
call
push
cmp
les
testl
call
call
fsubl
call
call
call
push
mov
int
gs
in
xchg
jb
lds
mov
push
jge
inc
adc
inc
nop
ja
das
adc
fiaddl
mov
inc
jno
push
jge
out
ljmp
mov
popa
ror
dec
lcall
call
cmc
xchg
push
and
and
and
and
xchg
pop
or
inc
dec
es
mov
mov
or
das
inc
cwtl
mov
mov
mov
or
ljmp
gs
push
shld
gs
imul
mov
dec
mov
das
call
call
call
xor
sbb
sbb
inc
out
mov
jg
adc
mov
call
call
call
xchg
arpl
sub
add
lcall
call
call
pop
jns
test
sub
add
popf
and
call
call
dec
je
stos
push
xor
jle
xor
sbb
or
js
mov
mov
pop
pop
lcall
push
pop
xchg
xor
std
sbb
mov
xor
aam
leave
pop
or
mov
xlat
add
imul
push
aaa
fldenv
ja
call
imul
sbb
mov
pop
jnp
adc
jmp
xor
lods
add
xchg
insb
cs
lret
and
fwait
repz
lret
mov
call
call
jne
adc
inc
xor
test
cmp
and
inc
xchg
faddl
in
add
or
aas
insl
inc
pop
adc
mov
push
sbb
call
call
js
in
adc
pop
and
and
and
and
and
repnz
bound
movb
call
call
add
mov
mov
out
outsl
ffree
pusha
sbb
fstpt
subb
arpl
icebp
inc
pop
and
pop
add
call
call
mov
cmpl
pop
out
lea
push
adc
mov
xchg
xor
pusha
insl
add
insb
fdivrl
call
call
call
xorb
inc
mov
xor
pop
mov
push
mov
mov
out
scas
push
addr16
test
push
test
push
inc
or
ss
push
pop
mov
and
mov
inc
jae
jl
adc
adc
scas
cmp
xchg
fistpll
inc
movsb
call
call
popf
out
jle
jmp
add
gs
call
lret
jno
jl
arpl
in
dec
xchg
and
pop
mov
enter
dec
movsl
es
xchg
or
push
shrb
dec
popa
pop
cmpl
sbb
ficoms
jns
mov
add
mov
hlt
jmp
int
lret
stos
call
call
add
stc
and
out
movsl
repz
repnz
addr16
leave
pushf
enter
aaa
jecxz
and
and
and
and
insl
insl
jnp
rcrl
cmp
lds
fimull
call
call
jmp
mov
addr16
mov
mov
aas
push
decl
mov
loop
jns
test
call
call
xchg
es
sub
xor
movsl
push
add
mov
or
mov
popf
aas
mov
jo
hlt
repz
push
cmpsl
sub
lds
or
ror
call
call
pop
icebp
scas
sub
jle
ljmp
push
out
inc
sbbb
mov
lods
jbe
xchg
jmp
stos
inc
mov
lock
jns
js
call
pushf
pusha
cmc
sti
imul
call
call
add
roll
sbb
je
out
adc
and
and
and
and
and
push
stos
outsb
and
jmp
and
fscale
iret
push
mov
call
call
jbe
cli
into
mov
and
jae
push
enter
pop
push
iret
xor
add
mov
mov
add
mov
imul
insb
adc
aad
mov
inc
pop
je
inc
call
addr16
test
ss
call
insl
xor
hlt
sbb
stos
cwtl
pop
sub
xchg
lea
xor
inc
inc
pop
out
xchg
dec
int
aas
xchg
nop
xchg
xchg
jb
in
test
jecxz
es
mov
leave
dec
cmc
cmp
cs
call
call
call
cmpsb
andb
adc
cmpsb
std
cli
cld
sbb
sbb
xchg
mov
sub
jge
xchg
fmull
cmp
ljmp
cmpsl
jo
ja
cmp
out
mov
push
jns
mov
sub
push
fwait
aas
sarb
add
jl
jo
aam
fdiv
call
call
mov
out
mov
pop
sbb
repnz
pop
loopne
ss
and
or
pop
popf
sub
xchg
sbb
je
fwait
sarb
sar
repnz
xchg
scas
pop
outsl
test
sbbb
push
cmc
rorb
pop
rol
pop
pop
call
call
negl
loope
in
inc
cmp
imul
ss
sti
cmc
push
jmp
xchg
cli
inc
incl
js
mov
enter
cmp
cltd
in
jns
jno
call
call
inc
xchg
push
dec
push
dec
popf
scas
std
adc
lds
jp
push
nop
or
callw
call
call
sarl
xchg
loope
jge
ret
sbb
and
and
and
fistl
pand
xchg
sub
pand
lea
push
movsl
mov
dec
call
call
aam
test
int3
cmpsl
repnz
stos
imul
push
add
shrl
and
icebp
stc
lods
add
call
call
push
mov
adc
jmp
cs
push
imul
les
xchg
outsb
cs
ficoml
rorb
push
pop
cmp
call
call
push
rclb
clc
sti
cli
sub
ss
iret
or
add
push
mov
sub
shll
xchg
push
adc
cmpsl
jne
xchg
and
mov
les
pop
jo
negb
aam
jo
sub
pop
je
call
repnz
dec
adc
pop
mov
call
call
inc
xchg
add
insl
mov
pop
pop
shll
je
mov
stos
popf
push
sub
loope
adc
inc
inc
test
cs
lock
leave
cmp
divl
aam
mov
adc
xchg
pop
lods
mov
rorb
and
and
and
and
and
and
and
and
mov
inc
xchg
test
inc
daa
call
call
dec
addl
test
pop
repnz
js
stc
out
ret
jle
mulb
and
and
and
and
imul
xor
ret
mov
add
pushl
pop
dec
and
inc
call
call
call
sbb
mov
xor
call
call
mov
rcr
mov
mov
int3
aam
sub
loope
dec
outsl
loop
sbb
dec
lret
lods
mov
lock
lret
ljmp
and
xor
mov
shll
popf
jb
adc
and
xchg
pop
jne
out
fldcw
fistpl
arpl
call
call
inc
leave
cltd
jno
stos
ret
div
gs
int
fstps
xchg
and
aam
in
or
addr16
jno
lret
inc
xor
lcall
call
call
adc
rep
subl
sub
fwait
std
ja
sbb
pop
cmp
clc
adcl
mov
mov
arpl
ljmp
xchg
shrb
in
inc
pusha
frstor
sti
cvtdq2ps
xchg
mov
call
call
div
sti
dec
lret
aam
ror
inc
cmp
inc
das
mov
es
push
and
and
and
and
and
lcall
xor
call
call
cmp
pop
pusha
push
push
xor
mov
dec
mov
mov
out
js
mov
and
call
call
aaa
je
call
jo
inc
imul
cmp
ret
dec
repnz
dec
call
or
in
xlat
mov
and
and
and
and
and
movsb
sti
and
data16
cmp
mov
pop
xor
call
call
mov
cmp
lcall
jle
loop
pop
cltd
dec
cld
push
fildll
fmul
add
adc
scas
popf
inc
ljmp
loope
jg
add
stos
mov
push
gs
pop
inc
adc
push
add
ret
call
call
call
je
aas
jg
cmp
iret
jnp
mov
jns
cmp
and
enter
out
loop
icebp
pop
call
call
call
call
call
call
outsl
test
mov
call
call
loope
dec
and
xor
call
inc
push
cltd
lds
cmp
and
and
and
and
and
and
and
imul
call
call
call
cmpsb
adc
dec
ds
adc
call
inc
shl
cmp
jno
xlat
mov
sub
lret
cmpsb
xor
dec
nop
cmpsl
lret
mov
dec
idivb
mov
rclb
fmull
inc
jl
pop
mov
push
loop
outsl
outsl
sub
pop
mov
jb
std
or
sub
inc
dec
ljmp
push
ds
movsb
mov
pop
inc
sti
jmp
call
mov
rcl
jae
inc
rcr
or
aam
mov
cwtl
pop
popf
outsb
xchg
adc
add
mov
int3
inc
jp
push
add
call
call
add
or
xchg
lds
hlt
pop
inc
cmp
mov
scas
pop
inc
int
daa
mov
dec
adc
das
arpl
dec
add
push
xchg
ret
or
out
inc
std
fs
sbb
lahf
pop
aad
mov
sbb
pop
mov
adcl
inc
sub
lods
call
call
pop
pop
cmc
push
jmp
sub
adc
mov
adc
xor
sub
add
imul
adc
shlb
call
call
call
inc
xchg
mov
js
lods
movsl
sbb
insl
lret
gs
inc
addr16
call
and
and
and
pusha
dec
daa
outsb
insl
lods
das
fistps
push
pop
das
mov
aaa
in
rol
mov
mov
pop
gs
shl
je
ret
mov
push
sbb
test
xor
sub
inc
int3
mov
xor
call
call
and
iret
aaa
test
inc
mov
int3
sbb
lret
pop
call
xlat
imul
pop
stos
dec
jns
loopne
xchg
cmp
push
lods
loope
sbbb
pop
or
sahf
shl
shlb
pop
icebp
mov
add
mov
call
call
dec
stc
jo
stos
pop
stc
aam
sub
in
dec
mov
dec
enter
repz
fwait
pop
jo
addl
mov
mov
adc
add
test
rorl
enter
sbb
inc
mov
call
call
sbb
push
out
fld
jg
popa
pushl
iret
mov
xchg
xor
jmp
push
dec
in
lahf
sbb
mov
pop
test
dec
lock
lahf
imul
mov
jge
jmp
fcmovnb
call
call
push
daa
fidivs
xchg
aas
jmp
adcb
call
call
aas
mov
xchg
fstpt
insl
aaa
push
sbb
mov
push
nop
ret
in
fs
jns
mov
clc
mov
xchg
mov
call
call
outsb
loopne
cmp
cmp
and
add
pop
jo
jnp
mov
repnz
xor
subb
fwait
adcb
xchg
xor
xlat
call
call
and
and
and
insl
fmul
ret
icebp
mov
and
cmp
fimuls
mov
and
and
and
and
and
and
jns
fs
hlt
jbe
out
inc
jl
movsl
inc
data16
roll
insb
fwait
test
mov
stos
sahf
pop
sub
in
jl
mov
or
scas
mov
pop
mov
or
sbb
loop
call
call
call
sbb
mov
sbb
mov
loope
fmuls
sub
dec
lods
mov
xor
push
rolb
int3
lock
call
jae
out
call
call
adc
cmp
cli
aas
jmp
int
addr16
in
mov
jb
sbbb
cmp
mov
and
or
pop
loope
mov
loop
ror
add
xchg
call
call
call
repz
aas
jne
lds
pushf
out
sub
movsl
call
call
call
push
cmp
cltd
ljmp
sbb
stos
sbb
imul
popf
xchg
test
sbb
add
call
add
mov
mov
jl
mov
popa
xor
divl
fisttpl
fsubs
sub
jns
fwait
pop
inc
imul
hlt
push
cmp
call
call
pusha
push
inc
mov
xchg
stos
adc
cmpsb
pusha
cmc
push
mov
ret
add
mov
and
cwtl
inc
jge
iret
dec
mov
dec
filds
call
adc
fmull
inc
test
push
mov
ja
aam
cmp
in
cmc
or
aad
pushf
push
call
call
call
push
dec
sub
repz
out
pop
jecxz
add
and
and
and
pop
sub
jne
jae
inc
add
addl
ljmp
movsb
inc
push
sub
call
call
xchg
pop
push
or
std
or
mov
pop
or
ret
push
fsubrl
out
stos
add
pop
mov
call
call
call
and
and
fstps
movsb
pop
inc
and
filds
pop
fnsave
rcll
add
flds
push
pop
cs
sub
lcall
call
cltd
insl
lds
scas
shl
adcb
aas
test
in
scas
add
inc
and
and
and
and
and
and
and
and
xor
loope
nop
fwait
stos
jne
adc
lcall
call
mov
inc
cmp
repnz
call
call
adcb
rclb
and
and
and
and
and
and
pusha
aad
pushf
fwait
add
xchg
sub
pop
mov
sub
popa
mov
call
call
pushf
jbe
mov
mov
or
jecxz
mov
dec
scas
sbb
mov
daa
bnd
adc
push
xchg
fmuls
call
call
shl
fdivl
xchg
or
icebp
push
push
add
out
dec
call
call
call
jl
les
pop
sahf
popf
cmp
in
xchg
ficomps
pop
mov
mov
loopne
xor
adc
pop
insl
xchg
sbb
call
call
call
or
fiadds
cmp
std
call
call
or
add
icebp
pop
push
inc
les
mov
call
call
jg
sbb
cli
enter
add
mov
hlt
stos
icebp
es
mov
mov
repnz
hlt
outsb
repnz
xor
call
call
xchg
mov
cwtl
rorl
xchg
mov
pop
inc
add
xor
sub
mov
dec
int3
jmp
and
sbb
mull
bound
call
call
adc
call
call
dec
xchg
pop
int
dec
cmp
and
xacquire
mov
push
call
call
pop
sbb
jne
hlt
mov
mov
out
gs
call
call
sub
iret
push
cli
mov
shlb
imul
pusha
cmp
pop
comiss
dec
mov
cmp
mov
call
call
inc
push
mov
sub
and
inc
or
mov
push
lds
rol
iret
mov
mov
mov
lahf
cmp
add
cmpsl
mov
lcall
call
shlb
mov
fcomi
enter
xor
out
add
call
call
movhlps
lods
call
call
call
call
pop
or
and
and
and
and
cs
inc
dec
or
stos
add
out
fisubl
mov
xchg
pop
es
xor
mov
je
push
mov
sub
loope
push
mov
es
xor
mov
bound
repnz
stos
sbb
xchg
adc
push
pushf
call
call
or
loopne
sbb
movsb
jo
sbb
inc
pop
arpl
and
outsl
xchg
loopne
call
call
call
dec
and
mov
imul
pop
andl
nop
sbb
push
xchg
xor
sarb
call
call
cmp
pop
popa
aam
or
insb
cmp
scas
jb
call
call
call
dec
mov
jb
mov
jbe
mov
sti
dec
pop
stc
or
push
js
mov
cld
movsl
call
call
call
imul
mov
jmp
bound
insl
jbe
adc
call
call
call
xchg
or
pop
test
mov
std
pop
mov
push
lods
mov
and
add
add
hlt
mov
adc
inc
pop
pop
sti
push
add
fisubl
and
and
and
and
and
out
sbb
push
daa
pop
mov
xchg
jmp
jp
inc
popa
sahf
movsb
call
call
call
call
cwtl
mov
sbb
jmp
les
movsl
neg
mov
cmp
sub
dec
or
mov
mov
gs
cmc
sti
jnp
out
sbb
mov
xor
cmp
pop
and
jmp
ret
loop
push
in
ja
mov
dec
stos
stc
repnz
push
aam
cmp
call
call
call
jmp
nop
cmp
or
arpl
pop
add
int3
leave
out
lahf
out
add
repz
xchg
push
jnp
call
call
jp
cs
clc
cld
loopne
add
xor
push
into
cmp
cld
mov
fwait
xor
out
jmp
call
call
xchg
lret
sub
loopne
call
call
xchg
jns
test
xor
call
call
xchg
int3
stos
mov
cwtl
xchg
inc
jns
pop
push
sub
leave
and
inc
push
or
mov
fstp
jbe
mov
repnz
call
call
mov
xlat
jns
dec
lock
cmpsl
push
xlat
inc
addr16
xchg
or
call
call
call
pop
mov
clc
cmp
sbbb
notb
push
sub
divl
dec
jo
enter
xchg
or
pop
dec
sub
mov
sti
xchg
insl
push
cs
lock
pop
push
test
loope
subb
xorb
push
sarb
faddl
sub
call
call
std
movsl
pop
push
std
xchg
movsl
ret
incl
add
lods
adc
cmp
arpl
inc
cmp
in
inc
sbb
cwtl
sti
or
adc
fidivs
sahf
addr16
popa
xchg
test
and
sub
sub
shr
call
call
call
call
lret
aad
xchg
ror
xor
out
mov
out
das
imul
out
out
icebp
call
jno
addr16
repz
and
and
and
and
and
and
and
xor
xchg
pushf
sahf
in
ljmp
fsubrl
jl
stos
push
add
xor
xor
lea
cmc
mov
andl
sub
cmc
arpl
ds
call
call
ljmp
cmp
mov
cld
loop
mov
mov
inc
ljmp
xchg
push
loope
sbb
adc
popa
loope
pmulhw
movb
mov
mull
rcll
icebp
adc
sbb
fsubrp
call
call
add
jb
jg
mov
inc
rcr
inc
mov
or
loope
mov
mov
fdivs
aaa
clc
sub
fbld
scas
xor
lret
jbe
adc
dec
xchg
icebp
jmp
call
call
fs
jg
sti
mov
ss
dec
mov
enter
loop
out
loope
cmp
xchg
into
mov
ja
jl
call
call
call
scas
rorl
rclb
jne
sub
ret
cmp
in
sub
lea
jl
pop
xchg
aad
xchg
enter
and
and
and
and
sbb
mov
xchg
fiaddl
dec
inc
dec
mov
cmp
das
call
call
out
aas
jecxz
push
xchg
jo
xchg
mov
jge
loopne
add
pop
cli
sub
sti
mov
shll
push
mov
bnd
add
sub
push
cli
movsb
cmp
bnd
jo
jl
push
xchg
mov
mov
call
div
movsb
dec
out
data16
dec
sbb
icebp
and
sub
jb
in
out
scas
xor
fisttpl
push
popf
sarl
insl
movsb
mulb
std
jg
call
test
and
ja
dec
mov
or
mov
inc
lods
mov
call
call
call
adc
aas
inc
push
push
in
fwait
jo
jno
adc
pop
hlt
shrl
push
xor
and
and
and
adcb
icebp
pop
pushf
cmpsb
pop
xchg
iret
mov
inc
mul
lret
or
inc
adc
nop
xlat
loope
pop
arpl
inc
pop
sbb
xchg
mov
pushl
test
call
call
aad
sub
js
lea
nop
repz
mov
pop
mulb
and
fwait
add
call
call
xor
dec
sub
mov
jno
call
les
ss
push
adc
and
xor
mov
adc
addr16
xor
pop
int3
fisttpl
xchg
call
call
sub
iret
cltd
jo
pop
push
pushf
inc
inc
jnp
pop
mov
cld
je
stos
movsb
jae
push
sahf
add
sbb
jge
leave
xor
fisttpl
call
call
sbb
pop
mov
in
mov
out
sub
cmp
xor
inc
insb
mov
int3
jmp
fistps
lods
clc
mov
popl
lahf
or
call
call
jmp
aam
popf
mov
pop
add
xchg
mov
leave
pop
in
xchg
scas
cwtl
hlt
mov
addl
call
call
sbb
mov
movsb
and
add
lea
add
into
orb
sbb
cmc
in
dec
sub
xchg
ss
call
xchg
mov
loop
call
dec
xlat
inc
mov
jnp
repnz
mov
mov
and
mov
and
mov
call
call
call
xor
ja
iret
mov
jmp
adc
jae
pop
loopne
xchg
cbtw
dec
lret
and
and
and
and
and
and
call
call
call
bound
fidivs
shll
dec
jno
jl
xlat
push
sub
sar
xchg
jb
pop
adc
mov
add
lock
and
and
and
and
and
dec
mov
mov
sbb
mov
dec
call
call
mov
xor
test
pop
test
das
adcl
call
call
out
sbb
xor
test
add
sahf
int
mov
mov
adc
out
dec
sub
shlb
stos
mov
rcrb
out
add
lock
call
mov
cld
bound
fstpl
dec
fildll
call
call
mov
and
and
and
and
xchg
mov
pop
dec
xor
pop
push
mov
fs
cmp
call
call
or
aaa
aad
call
call
xor
call
call
inc
inc
mov
cmpsl
xchg
xor
addr16
lds
inc
xorl
jg
mov
daa
out
pusha
cmpsl
adc
cltd
mov
push
insl
and
and
and
and
and
and
and
dec
sbb
push
fadds
inc
ljmp
dec
push
movsb
push
jecxz
clc
cmp
daa
popl
add
call
pop
xor
jg
das
add
xor
pop
addl
call
call
jp
pop
pushf
callw
call
call
call
fbstp
xchg
push
pop
addr16
out
imul
pop
pop
outsl
xor
xor
mov
add
mov
xchg
out
cli
stos
ds
popl
and
pop
push
cld
push
fcmove
int3
adc
call
call
call
call
mov
mov
dec
fwait
xchg
mov
push
cltd
inc
jno
and
and
and
and
and
lds
cmp
adc
sbb
aad
dec
jp
fld
push
add
sbb
sarl
pop
push
push
or
loop
insb
dec
call
call
and
and
lret
jmp
pop
gs
sub
xor
fisttpl
rclb
aaa
aad
xchg
mov
mov
and
mov
pop
into
push
dec
mov
xlat
inc
cmp
inc
fcmovbe
movsl
aas
jge
pop
jno
call
call
call
mov
inc
dec
test
mov
imul
pop
mov
arpl
push
pop
mov
pushf
xchg
mov
icebp
push
and
sbb
ret
lret
lret
inc
xor
call
call
mov
call
call
call
call
popf
cmp
xor
xchg
inc
sti
mov
lods
and
cs
jo
mov
stc
ja
dec
vmwrite
or
add
sub
lea
call
call
call
mov
mov
ljmp
push
jnp
jmp
add
icebp
ret
lds
scas
sbb
ja
out
pusha
adc
xchg
dec
add
cmc
ss
call
js
cmp
cli
xchg
jmp
call
call
call
pop
jne
xchg
loope
dec
mov
xor
push
call
call
and
test
push
mov
push
push
sbb
jge
xor
sarb
scas
in
pushf
pop
sbb
add
lods
sbb
and
and
test
mov
adc
xor
out
clc
dec
push
and
cwtl
notl
ss
test
call
call
sbb
inc
inc
das
lds
push
push
imul
bnd
std
out
pop
stos
or
cmp
xchg
cmp
dec
cwtl
scas
jo
repz
push
inc
cmc
cmp
xor
in
cmp
lock
xor
push
sub
mov
push
add
addr16
call
call
imul
test
dec
leave
fwait
cli
arpl
stos
cli
xor
and
arpl
in
mov
aam
adc
adc
fsub
pop
xchg
out
jo
repz
cmc
sub
loope
dec
repz
call
call
xor
sub
fs
and
dec
adcb
in
dec
dec
dec
adc
out
cmp
mov
or
inc
int3
test
inc
inc
xchg
sahf
jecxz
and
psubsb
dec
jecxz
jns
and
and
and
and
pop
or
pop
rol
cwtl
pop
jo
call
call
call
imul
in
pop
lods
dec
in
pop
lds
dec
push
test
ret
das
out
js
dec
or
push
cmp
cmp
sarb
call
call
call
jne
jle
mov
mull
mov
cmp
call
call
gs
aam
and
in
jo
and
mov
jne
and
and
and
and
and
and
and
push
xor
movsl
stos
loope
clc
push
jns
jbe
lds
stos
insl
mov
push
and
out
push
test
in
movsb
add
scas
cmc
inc
int3
inc
imull
call
call
inc
add
jb
clc
test
pop
sbb
inc
imul
shrb
shll
gs
and
imul
sub
call
call
mov
fwait
sub
data16
jmp
cmp
pop
mov
and
popa
mov
mov
or
dec
test
movsl
das
ret
or
call
call
sub
mov
pushf
lods
fdivs
loope
cmp
jnp
xlat
dec
jo
adc
notb
sbb
or
jbe
or
sbb
btr
shll
nop
in
loop
loopne
pushl
inc
je
fcmovnb
or
stos
int3
mov
fdivrl
aad
call
call
call
mov
mov
fildl
ja
xor
call
sub
stc
testb
push
ret
dec
jne
push
cli
ja
js
sub
add
adc
mov
add
mov
mov
lock
call
loope
mov
jle
call
in
xor
pop
adc
imul
call
xor
lock
xchg
mov
push
pop
fnstenv
and
and
and
and
rolb
push
jl
and
mov
in
cmc
push
fsub
addr16
dec
jg
inc
negb
jge
xchg
inc
stc
or
sti
movl
call
call
mov
mov
stos
sub
adc
jae
sub
mov
and
adc
icebp
or
ja
cmp
js
sbb
xchg
insl
aas
mov
fldl
push
or
call
call
ljmp
call
call
pop
mov
std
sub
add
xchg
pop
mov
sete
movsl
test
or
sbbl
mov
xor
lods
push
shl
sti
and
movsl
js
aad
add
ret
sub
mov
jecxz
and
movsl
xchg
aam
jl
mov
call
call
test
outsl
es
lock
andl
icebp
sti
xor
push
and
jle
push
int
inc
push
loop
std
pop
mov
mov
cmpsl
mov
call
call
inc
cs
mov
add
rorl
sbb
jno
and
and
and
and
and
and
and
and
call
call
call
push
movsl
push
aaa
je
mov
and
pop
mov
jns
cmc
dec
insl
and
or
jg
lds
not
std
and
inc
icebp
out
aaa
shlb
outsl
movsb
mov
adc
repnz
mov
imul
into
push
orl
call
call
mov
into
in
inc
leave
movsb
jnp,pt
push
cld
dec
negb
dec
cmc
add
mov
mov
mov
roll
mov
lret
xchg
inc
fidivl
cli
imul
mov
cmp
out
out
lods
shll
mov
cld
cwtl
ja
push
daa
xchg
jge
pop
ds
call
add
pop
fwait
out
jg
fdivp
divb
iret
outsb
cltd
repz
call
call
aad
xchg
gs
and
xchg
cwtl
or
addr16
push
mov
cli
lret
addr16
jecxz
sbb
xor
cld
jnp
mov
pop
in
fsts
mov
out
in
addl
scas
negb
pushf
insb
call
call
push
aaa
add
call
call
movsl
inc
inc
mov
inc
mov
out
cmp
mov
arpl
push
mov
and
mov
jb
mov
and
inc
mov
and
xchg
adc
clc
pushf
leave
xchg
inc
and
and
and
and
les
jb
test
shrl
pop
xor
sub
call
call
call
dec
push
repnz
ja
out
dec
xor
lods
mov
call
call
ss
xor
kmovb
pop
jmp
enter
push
outsl
addr16
sti
xor
mov
jo
mov
in
mov
sub
call
call
add
aaa
jmp
int3
jmp
cmpsl
fnstsw
in
push
divb
call
call
call
fisubrl
xor
mov
jmp
mov
faddp
dec
add
lods
outsl
mov
loopne
arpl
xchg
mov
outsb
in
mov
cltd
lret
jb
cmp
ret
mov
sub
mov
cmpl
cmp
and
and
and
and
and
insl
test
rcr
mov
mov
call
call
inc
insb
push
out
mov
and
pop
std
xchg
js
inc
bound
fs
sub
jne
jb
call
call
call
in
ficomps
xchg
and
ja
lret
pusha
rorl
xor
mov
sub
sbb
call
call
fsub
pop
sti
jb
movsb
jae
sbb
inc
cmpsb
cltd
out
jnp
sbb
fucompp
aaa
jl
jle
adc
xor
pop
div
bnd
leave
pop
xchg
out
call
call
loope
push
jg
cmpsb
or
inc
jp
negl
sarb
pushf
lret
mov
sbb
scas
aad
and
dec
add
sbb
inc
and
sub
mov
test
ljmp
lods
lods
xchg
pop
jge
adc
jno
jge
push
cmc
add
mov
call
call
pop
dec
rolb
jmp
jnp
or
sarl
push
fdivrs
out
pop
ret
sbb
call
call
call
lods
dec
call
call
jae
stos
cltd
aas
es
in
push
fdivrs
add
test
jl
ja
mov
addr16
insb
mov
and
and
and
and
orb
pop
mov
jge
sub
fdivrs
jae
xor
cmp
bound
je
cmp
aas
xchg
call
call
jl
cmp
inc
sbb
in
ljmp
inc
dec
daa
jbe
xchg
call
call
hlt
cmp
pop
in
mov
daa
gs
sub
roll
stc
lea
cmc
mov
cmpsl
xor
dec
fdivr
cltd
lret
or
subb
pop
xlat
fldenv
notb
add
lock
call
call
call
out
jmp
movsl
add
mov
push
arpl
cli
pop
jb
xor
out
and
sti
push
das
sub
mov
mov
dec
subl
sbb
cmp
lods
mov
push
xchg
xor
adc
cltd
addl
call
call
call
mov
das
push
and
int
ret
add
jge
dec
mov
xchg
fldl
mov
mov
sbb
loop
pop
sub
xchg
and
ret
les
xor
sub
inc
scas
repz
mov
call
call
fstpl
rcll
xchg
popa
and
dec
addr16
sbb
in
sub
xor
out
mov
push
fs
jno
in
fs
push
iret
cmp
mov
lret
add
sbb
arpl
mov
call
call
call
call
mov
mov
jmp
pop
inc
or
xorl
add
or
jno
mov
push
or
shll
push
pop
arpl
sbb
call
lcall
mov
mov
test
out
pop
das
adc
cmp
repz
cmp
xchg
mov
out
and
and
and
cmpsl
mov
bound
call
call
ds
call
insb
mov
out
push
mov
test
testb
mov
cmp
imul
or
push
pop
outsl
push
adc
sbb
mov
loopne
inc
sahf
pop
adc
sub
inc
pop
add
call
call
outsl
sbb
addr16
or
push
sub
insl
jne
sub
mov
push
call
call
pop
sub
sub
dec
xchg
and
mov
dec
mov
push
pusha
push
pop
bnd
out
fisttpl
jno
pop
adc
test
jne
inc
add
push
das
xchg
pop
push
push
inc
inc
add
and
and
and
and
iret
ret
pop
add
add
call
call
call
in
xor
outsb
sub
shll
shll
push
jne
or
insb
dec
jbe
fwait
cltd
ja
pop
aam
sbb
cmp
std
sbbl
test
xlat
callw
call
fwait
mov
xchg
shrl
adc
sarb
out
fistl
push
adc
popf
xchg
dec
aad
call
call
adc
jmp
ja
cltd
stos
mov
hlt
das
subb
pop
decb
pop
mov
mov
scas
mov
popa
sbb
lret
jle
insb
std
aas
cmp
das
sub
cmp
jge
icebp
icebp
movsl
jb
pop
repnz
bound
add
stos
retw
add
cmp
test
cmp
sbb
data16
shlb
rorl
xchg
xchg
in
sbb
aad
in
mull
push
fmuls
add
call
call
or
icebp
add
rorb
aad
push
dec
push
lods
cs
push
leave
mov
pop
inc
mov
mov
push
inc
xor
cmpsl
call
adc
add
insl
and
mov
mov
inc
pusha
mov
call
call
xchg
imul
divb
and
and
and
and
fstpt
addr16
fwait
jbe
push
add
call
call
outsb
cs
push
fsubr
call
call
out
mov
movsl
push
pop
ret
sub
sbb
xchg
mov
pop
or
mov
pushf
xchg
call
call
call
inc
xchg
sbb
lret
pop
xchg
cmc
mov
fwait
hlt
sub
mov
dec
scas
stc
in
popf
mov
mov
adc
lods
sbb
bound
movsl
outsl
sub
repnz
call
call
xlat
or
inc
inc
andps
repnz
imul
adc
outsb
xchg
inc
jg
and
insl
mov
gs
call
call
call
inc
sub
add
cmc
push
loope
xor
call
push
mov
int3
out
pop
jne
pop
add
mov
add
dec
jp
lods
cmp
push
inc
mov
cs
jge
inc
adc
call
call
xchg
dec
sbb
jecxz
stos
inc
cld
mov
adc
clc
pop
pop
lret
aaa
test
xchg
fstpt
test
scas
xchg
xacquire
aas
inc
in
xchg
outsl
mov
ja
push
popa
mov
adc
jo
sbb
xchg
imul
jecxz
inc
cld
inc
add
push
sbbl
call
push
call
call
sub
adc
cs
xor
dec
push
mov
sub
sub
mov
aas
xor
loop
imul
adc
add
inc
mov
or
pop
clc
pop
pusha
or
roll
rolb
mov
add
fisubs
call
call
sbb
je
sbb
clc
mov
or
and
and
and
and
and
and
push
test
call
call
and
out
push
cld
call
call
call
cmpsl
cmp
jns
and
cli
push
verr
sbb
bound
call
call
std
sbb
push
sub
dec
mov
add
adc
xchg
js
dec
hlt
xchg
pop
xor
orl
call
call
call
fs
cmc
xor
push
pop
movsl
lea
dec
repnz
cli
sbb
dec
cmp
dec
push
sbb
xchg
jecxz
ja
or
mov
mov
cmp
jnp
subl
shll
call
call
pop
jne
add
rcll
sbb
dec
dec
add
in
mov
push
je
dec
call
call
call
and
jmp
divl
icebp
iret
rcr
bswap
and
jle
sub
inc
cwtl
inc
xor
and
add
call
call
call
je
ljmp
test
mov
sbb
or
sub
or
inc
gs
js
js
hlt
popf
enter
jp
jle
clc
push
push
mov
mov
inc
call
call
fstpt
adc
mov
std
push
pop
rcrl
popf
daa
sub
call
call
call
push
cmp
mov
outsl
call
call
cmp
dec
lds
xor
sar
jbe
pop
jg
xor
std
inc
jp
int3
sbb
mov
and
and
and
cmp
loope
insl
sti
outsb
mov
adc
lock
or
xor
call
call
call
call
jo
pop
adcl
rep
lcall
push
adc
sub
imul
mov
test
in
in
call
call
pop
cmp
popf
das
jmp
or
fwait
aas
pushf
sub
sbb
imul
and
insb
jae
movsb
adc
call
call
inc
adc
fsubs
in
dec
xchg
loopne
daa
movsb
add
cmp
sbbl
aad
mov
push
in
xchg
call
call
call
addr16
jle
xchg
das
lods
lock
popf
mov
out
xorl
call
call
and
cmp
sub
jne
and
pop
fstpt
push
call
call
popa
push
add
or
pop
pop
jb
push
rcrb
dec
mov
inc
pusha
insl
aad
jb
mov
ljmp
inc
lock
inc
add
hlt
push
mov
aad
xchg
outsl
es
scas
pop
fdivrl
call
call
or
sahf
cmpsb
call
dec
xchg
mov
call
call
call
sub
adc
call
call
out
pop
movsl
subb
pushf
repnz
popa
iret
adc
mov
loopne
xchg
pusha
call
call
call
call
iret
push
cmp
push
pop
mov
inc
movsb
js
shll
popf
into
stos
imul
aaa
jo
jnp
stos
xor
mov
out
dec
mov
call
call
call
push
ljmp
call
call
call
and
and
and
and
and
and
and
adc
andl
sub
and
sbb
cmp
subb
and
and
cmp
cwtl
pusha
sbb
repnz
ss
dec
dec
xchg
jae
jbe
push
std
fbstp
out
stc
sub
call
call
and
pop
lds
cmp
add
daa
pop
dec
lods
std
call
dec
jmp
mov
icebp
xor
inc
and
push
insl
shrb
ret
push
test
xchg
xchg
movsb
hlt
mov
stc
mov
movsl
rcr
leave
dec
int
call
call
call
xchg
fdivr
lds
xor
nop
enter
in
fwait
lock
push
mov
rcr
push
lock
mov
lock
sub
mov
dec
mov
ljmp
sub
inc
push
mov
call
push
and
and
and
sbb
shlb
mov
cmpl
inc
xrelease
shl
adc
push
cmp
daa
add
cmc
test
je
cmp
lods
inc
mov
pushf
std
cmc
jo
scas
sti
jbe
add
xchg
gs
cmc
leave
call
call
call
cwtl
mov
shr
aad
xchg
ret
mov
pop
adc
push
call
call
call
pop
or
mov
jae
pop
divl
adc
call
call
call
xor
movsb
jle
cwtl
out
loopne
dec
popa
push
lret
inc
add
aas
xchg
rcl
dec
mov
ljmp
pop
cmpsb
cli
xchg
pop
or
fdivrp
lods
jl
cmpsl
mov
xchg
push
repnz
ja
xchg
call
cmp
rcr
test
enter
or
lret
je
adc
sbb
call
call
in
fwait
push
rcll
xchg
jae
xchg
rorl
pop
movsl
insl
fsts
mov
lahf
push
sti
bound
xorl
popf
and
fwait
and
aas
iret
adc
orb
aad
jl
mov
arpl
jb
clc
pop
mull
call
call
xchg
and
and
and
and
xor
ljmp
call
aas
mov
mov
pop
mov
adc
add
dec
adc
adc
mov
out
add
call
call
out
rep
mov
adc
popa
mov
fldenv
xor
dec
xor
jmp
bound
aad
cmp
cmp
adc
roll
call
call
pop
imul
call
call
call
inc
lods
mov
push
pop
imul
out
dec
dec
mov
je
sar
mov
dec
repz
mov
leave
adc
and
pop
das
arpl
nop
aad
cmp
xchg
cmpsl
int3
scas
inc
xchg
jecxz
ret
lods
imul
bound
jmp
movsb
mov
adcb
fwait
xchg
movlps
imul
call
call
call
xlat
icebp
adc
ror
ret
lods
jle
data16
xor
push
cmp
ret
rorl
inc
ljmp
call
call
fadds
push
push
dec
cmp
xor
and
outsb
xchg
add
jae
or
push
mov
clc
jl
sbb
fs
or
sahf
outsb
push
cli
ss
arpl
call
call
sarl
sti
call
call
call
jb
and
push
xchg
mov
mov
andl
call
call
jbe
ja
xor
jb
xchg
inc
and
cmp
fwait
in
shll
sbb
sub
xchg
inc
inc
mov
and
and
and
and
xchg
out
bnd
call
call
loop
daa
fwait
jecxz
or
fwait
push
sbb
mov
mov
in
xor
into
call
call
call
sbb
sbb
das
cmp
out
pop
dec
fs
xor
mov
in
das
dec
jmp
jmp
inc
lret
iret
es
call
jmp
cli
add
inc
xor
push
add
sub
sbb
call
call
call
mov
add
movb
sarb
and
sbb
cmp
xor
push
fldt
adc
inc
inc
add
and
bnd
cmp
aad
adc
insl
rcl
push
add
jnp
jo
sub
dec
xchg
cmp
mov
push
gs
push
mov
call
call
dec
xchg
dec
cs
or
loope
adc
icebp
push
pusha
aas
pop
inc
pusha
pushf
xor
adc
adc
jg
sbb
enter
push
xchg
sbb
outsb
push
add
jnp,pt
add
popf
pusha
sbb
xchg
xor
ljmp
mov
inc
shr
call
call
call
inc
mov
add
outsb
mov
sub
xchg
inc
pop
lahf
push
cmp
dec
and
daa
imul
bound
inc
frstor
in
call
call
adc
pusha
das
mov
add
and
cmc
lahf
xor
sbb
mov
mov
xor
jle
test
movsb
shrl
inc
call
das
test
stc
std
mov
aaa
push
jns
in
ja
cltd
aaa
rolb
out
call
call
mov
inc
mov
and
and
and
addb
sub
xchg
inc
and
inc
jne
inc
jns
mov
call
call
adc
jae
pop
loope
clc
cmpsb
int3
imul
jge
lds
mov
push
lahf
cmp
call
call
call
ds
lds
shl
and
mov
shrl
adc
dec
out
cmc
pop
pop
jge
sbb
ss
sbb
push
lcall
fiaddl
stos
adc
push
pop
add
ljmp
in
ficompl
push
rolb
sub
ret
fxch
sbb
jo
pop
call
call
call
push
call
call
call
call
negb
lcall
addl
pop
lret
mov
inc
lods
lret
bound
push
mov
sub
or
mov
push
sbb
and
and
fadds
dec
fstps
ja,pn
adc
addr16
pop
dec
push
push
cld
xchg
loope
sub
bound
and
clc
and
fs
xchg
pop
call
call
pop
dec
aas
lret
sub
call
call
call
pop
dec
in
setg
addl
scas
adc
inc
lods
mov
inc
xor
sbb
lock
lret
mov
lret
mov
repz
call
call
pop
test
mov
call
call
aas
imul
jp
mov
adcb
or
push
dec
xchg
mov
xor
mov
ja
insb
pop
push
jo
jle
popf
bound
dec
int
lock
out
pop
mov
call
call
jb
js
mov
addr16
jnp
push
xor
pop
xor
sub
pop
xor
repnz
cwtl
jo
pop
fistpll
js
jmp
loop
clc
xor
std
add
or
xchg
lea
cltd
les
jp
fucomip
fidivrs
call
call
popf
mov
xor
push
movsl
xor
nop
mov
sahf
ret
nop
push
push
mov
sbb
loope
stos
mov
mov
mov
add
push
and
and
and
or
movsl
out
and
bound
sbbl
call
adc
sbb
sub
icebp
daa
ds
and
and
and
and
and
and
and
and
pop
sub
call
call
call
cmp
mov
dec
loope
or
add
jb
add
pop
rorb
jbe
push
mov
pop
dec
ds
inc
outsb
xchg
xchg
dec
stc
push
inc
and
xlat
fdivl
add
pop
xor
cmp
and
call
jb
stc
adc
add
rcrb
mov
das
call
call
call
comiss
idivb
imul
lcall
pop
ljmp
add
fsin
ret
dec
cmp
daa
mov
cmp
xchg
jecxz
mov
add
inc
sbb
mov
enter
imul
call
call
push
mov
jmp
iret
jno
lcall
mov
mull
mov
and
call
call
out
add
pop
cmp
dec
imul
sbb
bound
pop
lcall
dec
mov
push
mov
lret
insl
xor
pop
and
xor
lret
and
and
and
and
and
and
call
call
sub
mov
call
call
call
nop
pop
test
xchg
mov
pusha
out
or
adc
call
call
call
das
pop
and
mov
cltd
ds
sbb
push
cmc
call
call
sbb
cmp
push
rorl
push
repz
cmp
mov
xchg
pushf
neg
loop
dec
cmc
adc
pop
pop
das
pop
call
call
ljmp
call
call
jl
cmpsl
push
std
imul
icebp
icebp
mov
jnp
adc
push
nop
adc
jecxz
mov
fnstcw
xor
inc
and
push
std
in
jbe
push
jp
adc
call
mov
dec
loop
cmp
fwait
shrb
cli
add
int
jb
lock
sti
xchg
cmp
inc
mov
lret
movsb
and
stc
sarl
adc
insl
mov
cmp
fisubrl
pop
test
scas
inc
fbld
dec
gs
mov
les
mov
ja
loopne
jbe
insl
cmp
xchg
call
call
mov
cwtl
jbe
lds
call
testl
pop
daa
pop
lret
pop
call
out
sub
mov
test
popa
jns
mov
push
mov
call
call
call
rcr
mov
jne,pn
test
test
test
or
pop
xchg
dec
adc
push
test
les
cli
andb
jnp
xor
sbb
cmp
call
call
int
push
adc
call
call
fsubl
and
and
and
and
and
mov
out
int
mov
and
pop
jne
int
mov
in
je
pop
sub
je
push
jae
push
in
dec
int
pop
and
outsb
cmp
fadd
std
add
jp
jae
pop
xor
push
inc
hlt
inc
push
sbb
call
call
call
mov
mov
and
and
and
and
push
fcmovb
jnp
jge
pop
lret
iret
jecxz
push
and
in
pop
add
xchg
call
call
call
dec
add
cmp
dec
pop
and
cmp
xchg
inc
fcoml
mov
push
cs
xchg
je
jo
in
jns
fwait
pop
test
outsl
iret
push
test
negb
ss
jno
or
pop
decb
cmp
jl
aas
lods
xchg
mov
call
call
inc
push
orl
je
fisubrs
mov
inc
daa
xor
scas
mov
xchg
inc
enter
clc
scas
scas
test
data16
sbb
sbb
dec
xlat
xchg
mov
aaa
cmp
jge
es
and
and
and
and
and
push
add
call
call
pop
xchg
cmpsb
cmp
repnz
aaa
jnp
xor
mov
fnstcw
bound
icebp
dec
add
fidivrl
test
dec
push
or
shrl
jae
je
jne
fisubl
jb
mov
call
call
outsl
adc
shl
mov
in
push
or
and
lcall
roll
dec
add
cltd
mov
pop
pop
into
dec
mov
repnz
mov
cmpsl
and
inc
xchg
cs
std
sbb
or
insb
pop
jns
imul
dec
or
fsubrl
adc
lret
call
call
sub
outsl
fwait
mov
mov
push
add
ja
xchg
fidivs
sbb
in
lods
icebp
add
sub
jne
movb
cmp
xchg
xchg
imul
cmp
jno
test
cmp
scas
inc
test
dec
push
stos
std
imul
mov
fucomi
mov
call
mov
lret
out
and
mov
sarb
fcoms
inc
sti
cld
jmp
and
and
and
and
add
call
call
xchg
jns
sbb
jno
out
pop
add
int3
add
rcl
sub
sub
or
add
inc
dec
test
cli
pop
es
pop
icebp
sub
loope
xor
push
mov
sbb
pop
subb
call
call
call
pusha
xor
add
jno
sbb
lock
lods
aam
arpl
dec
cltd
loop
jp
xor
push
adc
ja
or
jle
cmp
das
stc
xchg
outsl
cs
inc
int
call
call
call
ja
mov
cmp
sub
dec
sbb
xchg
add
inc
in
test
es
es
dec
and
movsl
cmp
sarl
jecxz
cmp
push
test
test
push
mov
xchg
mov
fistpl
or
repnz
push
nop
xchg
js
nop
call
call
call
xchg
add
fisubrl
jecxz
push
mov
mov
xor
mov
lahf
xor
push
jmp
push
shll
in
mov
andl
inc
dec
in
lods
loopne
sub
call
call
call
and
and
and
and
ss
pushf
or
int
lods
xchg
push
pop
mov
icebp
push
xchg
or
mov
clc
xchg
xchg
sub
imul
add
idivb
push
popa
pusha
lock
jno
jle
into
jmp
adcl
ret
mov
cmpxchg
sbb
call
call
and
and
and
and
and
and
jecxz
frstor
and
sbb
xchg
dec
pop
inc
test
ja
adc
fisubs
sub
int
call
cmp
or
sbb
popf
lods
push
cmp
push
pop
sbb
arpl
ss
out
cmpsb
push
xchg
fbld
and
dec
flds
push
rsqrtps
adc
or
xor
out
jmp
xor
mov
cli
xor
sub
add
into
hlt
xchg
fldcw
mov
call
call
cmc
imul
dec
jg
pop
xlat
mov
xchg
into
pusha
test
inc
push
mov
fpatan
cld
lods
jno
cltd
lcall
xchg
das
cltd
cs
je
pop
sbb
jge
dec
sub
lcall
mov
scas
imul
call
call
call
call
xor
dec
mov
call
call
push
push
iret
push
fimuls
mov
fnstcw
lcall
loope
xchg
fbstp
push
clc
aad
mov
jecxz
add
in
lahf
out
aam
cmp
ret
call
call
lret
inc
jecxz
mov
adcl
cs
je
cmp
cmp
pop
roll
cvttps2pi
or
cmp
ss
add
popf
or
call
call
or
fwait
inc
int3
std
adc
cmp
add
adc
rorb
pop
test
call
call
call
aaa
inc
mov
dec
stos
push
enter
jbe
and
pop
dec
dec
inc
mov
call
sti
imul
shlb
dec
lds
inc
add
mov
sub
shr
add
xor
fidivrs
pop
xor
test
out
call
call
cltd
in
test
test
pop
js
call
call
call
mov
push
sbb
iret
call
call
call
ret
call
call
call
mov
mov
cmovs
loopne
cmpsl
dec
xchg
jecxz
mov
or
mov
stos
pop
rcrl
call
call
pop
sub
test
seta
sbb
xor
or
cmp
cmp
outsb
dec
clc
mov
mov
cmpsl
aad
jge
repz
cmpsb
es
cmp
fidivrl
call
call
out
xchg
mov
fdivl
into
jge
inc
and
push
sub
out
mov
mov
leave
fadd
fiaddl
pop
outsb
jnp
in
cmp
scas
xor
in
call
call
call
lods
repz
adc
jp
push
xor
cmp
sub
mov
mov
mov
ss
popa
lock
jecxz,pt
lret
lods
mov
ljmp
dec
lea
pushf
sub
call
call
ja
testb
sbb
flds
mov
sub
xor
js
mov
push
or
js
mov
pop
pop
outsl
lahf
frstor
cmpsl
jnp
insb
movsl
subl
call
call
adc
mov
dec
jle
insb
and
mov
jo
lods
ret
xor
das
jne
pop
lock
push
and
test
sub
cltd
call
aas
fistl
mov
xchg
sub
dec
xchg
dec
ljmpw
ret
paddb
lahf
mov
call
call
dec
xorb
mov
clc
sbbb
cmp
stos
push
adc
cld
call
call
dec
lea
in
in
into
mov
daa
repnz
inc
dec
inc
aad
mov
mov
out
movl
pop
iret
cmpl
xor
pusha
xor
cmp
mov
in
arpl
mov
push
insl
mov
and
and
and
imull
call
xor
fs
sbb
into
jmp
jns
shlb
call
stos
pop
movsb
sub
add
jnp
pop
neg
movsl
mov
jge
outsb
xor
std
xor
mov
push
ja
dec
pop
lret
call
call
call
icebp
in
sbb
push
nop
decl
push
flds
adc
call
call
in
roll
aam
test
push
and
and
and
and
pop
xor
mov
call
xor
sub
sbb
pop
jecxz
mov
call
call
add
jbe
dec
repz
mov
and
jne
out
sub
mov
adc
lods
jbe
mov
push
dec
cmc
cmp
xchg
xchg
cmp
outsl
jo
push
and
mov
push
mov
rorl
cmp
and
call
call
call
add
lods
aas
stos
in
and
and
and
and
and
icebp
loope
cltd
xchg
stos
pop
imul
jbe
inc
dec
mov
leave
addr16
xor
call
call
scas
hlt
cmp
cmp
call
call
cwtl
out
pop
inc
mov
and
in
add
hlt
mov
pop
fisubrs
add
popf
jecxz
adc
mov
and
and
and
and
and
and
add
xor
jecxz
mov
std
jmp
iret
insl
xlat
in
imul
call
dec
fildll
mov
cmp
out
mov
xor
inc
and
jo
inc
inc
xchg
dec
add
push
cmp
movsl
js
lahf
mov
sub
sti
sub
xchg
gs
sti
mov
call
call
pop
jo
dec
into
mov
scas
xchg
in
int3
aaa
je
mov
dec
pop
xchg
insl
sbb
in
pop
inc
inc
or
test
dec
adc
inc
mov
sbb
popa
shrl
insl
repnz
dec
int3
mov
lods
testb
call
call
call
push
popa
shll
push
es
cld
push
call
call
call
and
and
and
and
and
mov
push
scas
jl
pop
das
out
sub
sahf
push
lcall
ljmp
jbe
hlt
push
ds
hlt
sbb
mov
call
call
mov
cmp
xor
cmp
xor
scas
rorl
out
dec
xchg
test
test
lock
lret
int3
repnz
data16
decb
call
add
mov
shr
mov
out
sub
in
notb
sbb
bound
cli
cmpl
sub
xchg
je
mov
call
call
call
or
cmp
dec
jo
aad
jnp
mov
clc
add
shrl
mov
cmp
shrb
repnz
jge
mov
stc
cmp
mov
pop
pop
sti
inc
dec
nopl
adc
sbb
inc
cmp
subb
push
repnz
in
pop
jge
call
call
call
add
push
mov
and
xchg
ds
or
mov
or
test
call
call
mov
xchg
mov
fldcw
test
mov
pop
push
pop
jb
cmc
cmp
dec
test
movsl
add
or
call
call
call
push
es
jl
icebp
outsb
lret
add
pop
or
js
jg
inc
sbb
sbb
push
adc
daa
push
or
call
call
mov
push
popf
fstpt
jb
cmp
sbb
sbb
and
and
and
and
and
xchg
jmp
add
outsl
mov
call
call
movsl
loopne
stos
inc
stc
or
push
push
fmull
cmp
lock
sbb
dec
into
stos
in
cmpsl
call
call
push
dec
xchg
pop
scas
cmp
arpl
call
dec
adc
sub
outsl
js
jnp
daa
ss
outsl
rol
aas
cmp
jp
mov
jns
add
ret
ss
call
call
call
cmp
xchg
push
xlat
xchg
mov
call
call
call
jecxz
popa
or
insb
fistpl
lea
hlt
push
lds
jecxz
sbb
sub
out
das
dec
or
aam
push
xor
mov
sarl
ds
jmp
repnz
and
aas
inc
add
ret
mov
lret
dec
inc
int
pop
pop
imul
call
je
mov
and
call
call
call
and
and
and
and
cs
sbb
sub
sar
mov
cmp
and
xor
xor
es
dec
test
call
call
call
sbb
out
mov
ret
jp
outsl
mov
sbb
dec
push
jns
inc
data16
cmp
adc
mov
into
ss
or
repz
cmp
gs
in
xchg
jmp
in
inc
cmc
dec
dec
xchg
es
mov
or
xchg
cwtl
or
xchg
call
call
mov
xchg
cmp
or
and
and
and
and
lods
outsl
mov
mov
rcrb
lods
sbb
push
jp
iret
aam
cli
lahf
mov
adc
scas
test
push
dec
insb
jns
call
call
int3
aas
sub
dec
push
lea
and
and
and
and
and
and
imul
jo
fs
imul
cmp
addr16
sub
pop
and
and
and
and
dec
jne
lret
mov
jmp
sbb
mov
jmp
pop
scas
ds
jg
negl
aas
in
push
mov
call
call
call
push
push
mov
sbb
lods
cmpsb
fucomp
dec
out
shlb
adc
push
out
mov
call
ds
das
cwtl
clc
mov
and
dec
mov
pop
sub
sahf
push
cmp
popa
push
bound
fcmove
lods
stc
xor
inc
leave
xchg
popa
jb
xchg
mov
fisubs
mov
call
call
sar
fldcw
jbe
push
push
jne
pop
add
adcl
sub
lea
mov
fs
fisubs
out
repnz
test
call
icebp
or
movsl
pop
jl
add
mov
call
call
sbb
push
push
mov
sbb
call
call
call
jne
les
mov
fsubrs
fs
dec
xchg
and
adc
iret
callw
call
call
sbb
call
call
call
lahf
inc
sbbl
jbe
insb
inc
sub
fcompl
pop
xor
test
loopne
adc
xor
xchg
push
mov
out
and
movsb
pushf
dec
out
xchg
call
call
pop
mov
push
mov
cmp
loopne
sbb
add
testl
or
dec
mov
push
fdivrl
repz
xor
jg
ror
ja
lret
loop
call
call
aad
adc
inc
push
call
call
pop
inc
in
push
je
fnstcw
loope
lods
add
clc
inc
push
loope
mov
dec
push
hlt
filds
jae
pushf
mov
xor
jmp
je
xchg
inc
jbe
mov
out
dec
es
stos
fimuls
mov
sahf
inc
cmc
bswap
call
call
call
and
and
and
and
and
and
test
mov
call
call
lods
test
jg
xchg
mov
adc
fsubrs
jg
inc
mov
int
push
daa
jne
jmp
and
and
sub
out
es
push
out
lret
cwtl
in
push
mov
call
call
call
pop
pop
or
xchg
arpl
in
cmp
shl
lock
sbb
lods
fcmovne
jne
lods
pop
into
sub
clc
jbe
test
addr16
xchg
mov
dec
imul
shr
call
call
xor
xor
cmc
in
lods
call
int
xchg
shlb
test
push
pop
sbb
leave
int
cmp
lock
out
cmp
call
call
call
pop
sbb
pop
test
mov
cltd
out
sahf
mov
test
xchg
imul
jle
xchg
add
pusha
adc
xlat
cli
mov
cmc
std
inc
push
je
cwtl
add
lods
xchg
int
nop
mov
xor
mov
add
dec
jp
aaa
call
call
and
imul
mov
call
call
lret
push
mov
aad
repnz
sub
pushf
or
xor
rcrl
cmpsl
inc
mov
call
push
sbb
mov
jl
mov
invd
imul
push
jle
fadds
pop
scas
fcmovu
daa
cmp
int
icebp
loop
popa
mov
mov
sub
call
call
scas
leave
dec
outsb
pop
subb
das
fisttpl
jge
stos
mov
xor
and
and
and
and
mov
push
fidivl
push
imul
pop
orb
mov
test
lods
add
and
and
and
and
and
and
and
and
xchg
sub
rcrl
cli
daa
jb
cli
lods
into
xchg
xor
ds
or
fldcw
dec
xchg
jp
or
add
mov
addr16
out
arpl
sti
js
sub
aas
jo
adc
cmpb
jb
enter
es
call
call
daa
push
jg
mov
add
sub
inc
pusha
ja
dec
mov
in
push
push
or
push
push
outsb
mov
add
pop
dec
dec
push
xor
jg
lahf
movsl
jo
inc
loopne
or
leave
out
sbb
addr16
inc
insl
jge
and
and
and
and
and
call
call
call
aaa
mov
sahf
jecxz
push
pusha
and
mov
lock
or
call
call
push
mov
inc
xchg
inc
sub
lahf
popa
xor
inc
lret
cs
pop
jecxz
ja
ja
cld
inc
pop
push
fwait
insb
xchg
loope
mov
call
call
call
mov
pusha
orb
and
mov
mov
pop
ja
push
cmp
push
aas
cmp
cmp
pop
xchg
and
and
and
and
ja
bswap
and
pop
cmp
xor
mov
call
call
sub
xchg
sub
cmp
data16
stc
ja
pushfw
push
cmp
jge
push
loopne
sub
mov
je
out
mov
jp
rcrl
jg
jecxz
and
push
or
sub
call
call
cld
cmpsl
push
in
push
cmc
inc
sub
dec
out
or
push
xlat
dec
dec
or
jb
pop
pop
xor
lock
call
lret
vshufps
sub
call
roll
mov
xlat
inc
shll
jnp
fwait
push
and
sbb
div
inc
sub
dec
filds
fs
inc
fisttpl
cwtl
sub
add
add
adc
lea
call
call
cmpsl
jp
jl
into
insl
or
dec
pop
jno
jo
mov
mov
fldlg2
xchg
stos
and
and
and
and
and
mov
adc
iret
call
call
xor
in
fwait
call
call
call
jle
and
push
popf
sub
das
iret
push
pop
lret
icebp
adc
and
and
and
and
and
and
xchg
sub
push
ljmp
and
call
call
add
and
mov
icebp
imul
mov
imul
mov
mov
push
xor
xchg
push
jecxz
movsl
adc
movl
jb
mov
or
call
call
call
push
adc
shl
and
repnz
sbb
cmp
mov
mov
cmp
in
and
push
nop
dec
and
hlt
loopne
lock
mov
mov
dec
inc
dec
lock
out
stos
xor
sti
xchg
pop
sbb
andl
test
leave
cmp
and
jecxz
cmp
adc
lds
cmp
call
call
test
lea
mov
shlb
shll
mov
scas
sti
cmpsl
adc
loopne
rclb
cltd
add
xor
adc
cmp
jmp
call
call
and
popa
sbb
mov
jb
mov
pop
sub
aaa
sbb
inc
cmc
test
push
sub
jnp
dec
pop
repnz
dec
adc
push
xlat
xor
mov
or
jg
rcll
add
pop
enter
inc
inc
jp
xlat
test
and
stc
sbb
insl
call
call
call
pop
jo
bound
js
gs
adc
cmpsl
hlt
notl
call
call
jb
jge
outsb
dec
shlb
jae
lods
repz
sbbl
repz
ret
pusha
add
popa
and
ret
sub
in
jb
in
pop
nop
icebp
jecxz
loope
cmp
call
call
gs
imul
dec
jecxz
out
xchg
cmpl
xor
sbb
fldcw
xor
cmpsb
cmp
inc
enter
fdivl
fldl
call
call
xchg
sbb
call
call
call
xor
mov
and
and
and
and
ja
outsl
pushf
hlt
bound
cmp
xorb
andl
sbb
dec
lret
mov
inc
push
aad
add
push
cmp
pop
loop
xor
out
sbb
lods
adc
cltd
pop
loop
aaa
cmp
push
test
stos
mov
call
call
pop
fwait
pop
rcll
loope
out
add
mov
xchg
je
and
scas
add
jb
pop
sbb
sub
call
call
call
mov
inc
hlt
movsl
data16
xor
pushw
fstps
dec
sbb
test
lods
pop
movsb
dec
test
or
les
into
movsl
aad
or
jmp
sub
mov
jp
add
sbb
call
call
adc
lds
sub
mov
cwtl
mov
sahf
dec
cmpsl
cli
sbb
push
cmc
fistps
push
mov
inc
ljmp
faddp
scas
call
call
call
in
jnp
test
call
call
in
mov
and
and
and
and
repnz
lods
leave
mov
sub
call
call
mov
mov
fistl
mov
pop
xor
pusha
aaa
aad
repnz
cmpsl
lods
mov
stc
mov
std
cltd
mov
mov
xor
inc
cmp
add
call
call
call
mov
lret
cwtd
insl
test
xchg
mov
xchg
sbb
orb
out
jle
ss
cmp
into
mov
push
xchg
mulb
mov
cmp
dec
dec
jb
sahf
jnp
mov
xchg
call
lret
call
call
inc
mov
cmp
fisubrs
jnp
sti
test
push
mull
sbb
xor
test
dec
and
mov
inc
pop
pop
xchg
push
or
call
call
and
jp
aaa
mov
mov
int3
out
es
cld
or
loopne
pop
cltd
jp
call
call
aas
pop
andl
and
and
and
and
cmp
sbb
mov
out
cld
sti
dec
jle
testb
stc
and
cmp
mov
mov
mov
mov
jbe
mov
data16
test
call
jbe
push
inc
jmp
sti
xlat
lret
out
loopne
data16
push
lret
test
mov
cwtl
fs
adc
push
sarl
fs
cmc
jecxz
call
call
call
jl
or
call
call
call
cs
jg
sbb
cltd
push
insb
and
dec
clc
jp
aas
dec
mov
ja
lret
inc
cmp
inc
and
call
push
jp
xor
in
in
mov
and
add
out
ficoml
outsl
imul
inc
je
xchg
xchg
xchg
faddl
cmp
mov
notl
aaa
push
shlb
out
call
call
push
mov
ja
sbb
rolb
push
add
mov
xchg
adc
and
and
and
dec
push
arpl
out
lret
inc
xchg
pop
mov
in
dec
mov
comiss
or
hlt
and
xorb
pop
pop
xchg
ds
cs
hlt
ljmp
or
call
call
in
fdivr
cmp
rcll
movsb
xor
cwtl
jo
adc
lahf
sbb
cmp
adc
xchg
adc
call
call
in
pop
repz
fsts
push
or
jae
stc
mov
fisubl
int3
jecxz
pop
mov
call
inc
jge
xchg
mov
add
loopne
aas
push
iret
in
push
and
test
call
call
call
dec
inc
nop
dec
add
call
and
pop
out
cmp
out
jmp
fldcw
jns
mov
adc
div
pop
push
nop
lods
xchg
enter
js
sbbl
xchg
mov
adc
fnstsw
dec
and
lods
push
mov
xchg
ljmp
mov
in
adc
call
call
call
call
and
and
and
adc
call
call
lret
jnp
out
fs
mov
and
and
and
js
jmp
movsl
xchg
jne
or
call
call
fbstp
repz
gs
jne
jae
popf
adc
xchg
les
xchg
in
pusha
js
fbld
lret
call
call
int
addr16
mov
push
xchg
xor
add
pusha
xor
in
aam
lock
cli
mov
mov
mov
push
sbb
inc
xchg
sub
lds
daa
shrl
or
xor
pushf
push
daa
ret
shlb
lahf
and
cmp
rorl
call
call
and
xlat
pop
xchg
sub
popf
jae
sahf
loop
sub
int3
lret
cmp
mov
push
mov
push
jo
outsb
and
jge
push
fcompl
popf
aas
int3
clc
out
jae
cli
mov
xchg
and
clc
dec
arpl
lret
jae
call
call
mov
movsb
jae
sub
in
sub
lret
cmp
mov
cmp
jl
loope
adc
ss
shlb
call
call
test
int
mov
and
and
and
and
mov
repz
aas
pushf
jne
mov
jnp
pop
push
push
shr
aad
sarb
fstpt
ret
pusha
into
pop
or
xor
call
call
mov
xchg
pop
xchg
shll
movsl
add
xlat
stos
lea
cltd
stos
and
jl
insl
je
inc
pushf
dec
jmp
sub
aad
loop
cwtl
fwait
imul
xchg
push
or
call
call
outsb
xchg
sub
insl
fisubs
call
call
dec
lcall
push
mov
mov
bound
imul
or
cltd
cmpsl
mov
rcrb
loope
mov
aam
cmpsl
insl
imul
xchg
xchg
add
shlb
dec
jne
push
imull
rcrl
jle
lcall
dec
jle
in
adc
sub
call
call
call
pusha
shrb
mov
das
xor
test
mov
popf
dec
orl
cld
sbb
mov
popf
adc
sbb
fs
pop
fldt
shl
pop
cmp
addb
out
add
sti
add
sub
call
call
or
out
cmp
inc
mov
cmc
inc
push
and
mov
jp
enter
sahf
lods
add
jecxz
jmp
outsb
loope
pop
stos
dec
lret
lods
cmp
push
test
call
call
aas
sbb
pop
lahf
dec
lods
insl
enter
pop
mov
mov
sahf
xchg
pop
aas
and
push
and
and
and
and
and
and
lds
call
call
call
jecxz
pusha
in
pop
push
out
xlat
lds
aas
add
jnp
ret
faddl
sahf
sub
pushf
cwtl
mov
inc
lahf
pop
call
call
call
dec
jp
js
inc
ret
cmp
aad
adc
fsubr
fcoms
and
mov
call
call
addl
push
int3
sbb
adc
or
ja
sub
test
hlt
push
jecxz,pt
mov
add
gs
cmp
inc
push
call
call
call
clc
jg
add
xorb
xor
mov
repz
call
call
enter
lods
add
icebp
test
sbb
fdivrl
out
scas
sub
xorl
jge
add
mov
mov
lret
jl
shr
call
call
mov
out
sub
mov
loopne
push
adc
es
gs
call
call
test
inc
mov
sahf
jl
pop
jae
in
sbbb
ljmp
out
arpl
add
fs
mull
and
and
and
and
and
push
lret
in
lahf
adc
cli
mov
mov
add
call
call
or
sti
lods
cmp
mov
fidivs
pop
mov
and
and
and
and
and
pushf
adc
mov
cltd
stos
mov
mov
mov
xor
cmp
add
mov
rorl
mov
outsl
sbb
sbb
rcl
jge
jo
stos
call
call
mov
fldcw
push
in
inc
mov
pop
mov
enter
add
inc
xlat
jbe
mov
mov
call
call
call
xor
out
iret
cmc
jp
adc
and
and
and
and
and
and
add
sub
imul
stc
lahf
mov
mov
mov
xor
mov
cs
push
jl
imul
call
call
jnp
je
sub
push
aaa
sbb
ret
stc
aad
push
dec
test
or
stos
loop
scas
or
xchg
rol
call
call
call
loopne
or
pop
pop
shr
pusha
ret
dec
cwtl
pop
cmpsb
add
repnz
repnz
pop
out
jnp
cmc
xchg
aam
sahf
insb
call
call
mov
xlat
xor
pop
dec
mov
jne
nop
addr16
jge
insl
fisttpl
or
mov
lret
mov
call
call
push
cltd
cmpsl
insb
in
jno
cmp
inc
icebp
leave
insl
push
jl
pop
xchg
into
aas
jb
daa
dec
movsl
xchg
xchg
dec
inc
jno
sbb
inc
out
enter
xor
in
sbb
pop
dec
subb
outsb
push
in
mov
sbb
ror
jno,pn
call
call
call
add
xor
stc
pusha
fldt
dec
push
cmc
or
call
call
outsb
loopne
in
xchg
stc
sbb
shl
push
mov
inc
mov
xchg
int3
mov
loopne
xchg
test
divb
in
xor
aad
adc
and
into
adc
imulb
xchg
jns
nop
dec
cli
inc
xchg
push
inc
jnp
adc
int3
call
call
mov
xchg
mov
mov
mov
call
call
call
cmp
sub
aad
cmp
scas
sub
cmp
cld
arpl
inc
leave
cs
daa
mov
jo
lods
or
cmpsb
into
pop
fimuls
call
call
lgs
lock
add
xlat
xchg
jle
xchg
lock
push
nop
xchg
mov
mov
mov
cld
addr16
imul
add
aaa
idivb
dec
in
inc
and
and
and
and
and
and
fs
push
xchg
pusha
negb
psubq
pop
mov
xor
or
push
loope
call
call
loop
add
ljmp
outsb
jmp
jns
sub
call
call
mov
cmp
jp
xor
adc
cmpsb
repnz
jb
mov
call
call
call
andl
lahf
enter
test
sub
movsb
daa
xor
jnp
sbb
xchg
jnp
push
and
pop
call
call
jbe
ret
idiv
imulb
push
dec
in
outsb
fnsave
lock
jnp
in
movsb
fldl
xor
adc
aam
leave
xlat
pop
push
push
inc
push
mov
loope
pop
popa
fcmovnbe
mov
jne
leave
push
dec
das
aam
push
mov
xor
lea
jmp
cli
cmp
insl
stos
pop
mov
call
call
out
xchg
ljmp
call
aam
cmp
xchg
shrd
xor
imul
adc
jl
inc
ja
enter
call
call
aas
mov
dec
mov
pop
call
call
add
shr
xor
push
mov
icebp
loop
pop
das
push
jns
ss
hlt
inc
push
sub
xor
xchg
and
jns
out
push
call
call
fs
jle
jmp
dec
or
stos
jg
mov
insl
mov
incb
das
jp
arpl
pop
mov
xchg
sbb
xlat
dec
aaa
pop
and
jnp
lret
jo
adc
loopne
fldenv
mov
xor
mov
int3
xor
call
adc
call
call
addr16
push
dec
cwtl
xchg
mov
mov
jg
lock
icebp
push
aas
sub
aad
lcall
jmp
and
and
and
and
and
and
xor
out
xchg
sub
pop
out
cmpsb
repz
iret
fadds
scas
aaa
or
cmp
call
call
mov
fs
aas
in
mov
pop
push
jno
ret
and
xchg
cmc
dec
cmpsb
or
into
push
adc
nop
push
mov
mov
push
pop
pop
inc
fsubr
call
call
call
or
fs
mov
sbb
pop
call
pop
ret
xor
sbb
push
jl
xchg
icebp
jbe
in
clc
or
push
xor
arpl
jno
std
lods
jg
or
fidivs
push
fsubr
clc
push
hlt
mov
sub
push
mov
movsb
cmp
mov
call
call
pushl
ret
loopne
int3
sti
daa
popf
pop
cmc
bound
mov
mov
mov
shrb
lcall
mov
add
sub
mov
imull
sahf
push
call
call
mov
or
push
lock
stos
pop
push
inc
adc
leave
faddl
in
inc
mov
imul
std
jle
inc
jbe
aad
lock
cmpsb
sub
movsb
outsb
call
call
call
call
pusha
in
xchg
dec
sarl
fwait
pop
sbb
mov
or
pop
sub
xchg
cltd
aam
fs
xor
call
call
sar
jmp
inc
das
loop
add
cmp
mov
loop
call
call
call
inc
je
hlt
insb
sub
adc
adc
add
call
fsubrl
inc
inc
aam
call
call
cltd
imul
pop
pop
adc
fneni(8087
xchg
mov
adc
call
call
call
popf
push
repz
call
call
clc
inc
mov
jb
dec
pop
ret
mov
or
aaa
fisubrs
call
call
xchg
ds
rolb
rcrl
and
and
and
and
and
mov
add
push
jns
mov
subl
xchg
jo
lret
ret
ffreep
int3
mov
outsl
test
adc
cmp
push
jno
sbb
mov
std
mov
sub
aas
mov
int3
in
call
call
call
xchg
push
lock
push
repz
out
mov
call
call
call
inc
inc
test
mov
push
adcl
sub
add
fimuls
xor
xchg
push
call
call
scas
pop
jns
aaa
inc
int3
ja
sub
dec
in
aad
mov
call
call
cwtl
adc
jnp
xchg
push
push
pop
icebp
call
call
jl
add
arpl
call
std
jne
out
call
call
mov
call
call
xchg
ficoms
mov
push
call
xchg
inc
pop
sti
xlat
lock
mov
or
cmpsb
xchg
call
and
lcall
jo
bound
iret
mov
repz
jno
arpl
call
call
call
inc
or
sti
in
inc
stc
sub
out
and
push
add
jnp
jno
or
in
xor
and
and
and
and
pop
frstor
sahf
fdivs
imul
adc
sti
pop
and
pop
xor
aam
pop
pop
addl
pop
je
stos
cmpsb
adc
leave
stos
jns
pop
push
dec
lock
or
call
call
pop
icebp
js
pop
imull
subb
shrl
call
call
call
fistl
fcmovne
js
mov
stos
mov
pushl
push
or
adc
dec
das
fucomp
aad
cmpsb
mov
clc
jl
or
lcall
das
xchg
fdivrl
inc
and
push
cmp
test
dec
and
and
and
and
call
call
and
sub
je
stos
push
mov
nop
pusha
pop
clc
jno
dec
xchg
mov
ret
fiadds
movsb
mov
xor
gs
xchg
call
call
rorl
lret
clc
pop
idiv
stc
fisubrl
loope
sbb
outsb
je
outsl
shll
cwtl
mov
mov
jl
inc
das
xchg
pop
add
mov
add
andb
aas
xchg
cmc
sub
mov
fs
call
call
call
int
mov
and
lods
fsubrs
inc
pop
sbb
std
scas
std
jnp
add
idivb
hlt
jl
call
call
mov
inc
and
jl
xlat
jnp
test
pop
lds
or
push
fcoms
fcoml
dec
mov
outsl
and
sbb
test
mov
mov
mov
rorb
push
xor
in
pop
mov
jae
loope
sub
xchg
lods
sub
call
call
push
test
push
push
out
mov
xor
test
iret
movsb
or
sar
testb
push
push
and
imul
shl
mov
mov
es
call
sbb
dec
int
jmp
inc
dec
dec
cmp
sub
mov
sbb
mov
mov
jle
ds
into
mov
addr16
xchg
cmpsl
icebp
insl
call
call
call
jl
lcall
and
mov
sbb
call
call
call
xchg
out
and
xor
nop
xchg
add
and
and
and
and
and
mov
rcrb
add
dec
fisubrs
sub
dec
call
call
orb
jle
adc
call
in
call
call
push
loope
dec
lods
insb
push
or
xor
or
std
pop
mov
cmp
int
pop
fistpl
mov
jno
int3
int
out
leave
out
jecxz
das
lods
outsb
mov
outsl
iret
dec
mov
lock
mov
mov
xor
call
call
fisttpl
mov
or
mov
addb
ficoms
inc
xor
inc
lods
in
mov
insb
pop
mov
sbb
mov
or
add
call
call
xchg
and
imull
ljmp
jb
push
cli
push
lods
sbbl
call
call
push
sbb
jno
cmp
pop
into
add
fwait
insb
iret
popf
subl
pop
dec
and
push
push
pop
mov
cmp
call
call
mov
jno
scas
dec
dec
out
into
rol
sub
jmp
lods
dec
sbb
jbe
jae
add
inc
call
call
jns
cli
out
jno
dec
ret
call
call
xchg
lret
mov
fsubrp
call
call
addb
sub
sarb
xor
jo
sbb
inc
cld
xchg
addr16
sub
test
or
xchg
mov
in
sub
enter
inc
jle
mov
mov
or
daa
xchg
int
pop
jns
hlt
mov
call
call
mov
aam
push
hlt
xor
sbb
mov
mov
bound
xor
cmc
lods
and
cltd
and
arpl
call
call
call
and
and
and
and
mov
popf
sarl
adc
mov
bound
mov
sub
mov
mov
inc
test
mov
movsb
lock
out
push
stc
jmp
test
dec
leave
lret
aaa
xor
xor
test
addb
sub
call
call
push
sub
inc
xchg
add
and
lea
mov
xchg
insb
imul
inc
mov
lret
movsl
aam
push
scas
cmp
call
sbb
sbb
lahf
xchg
mov
idivb
xchg
mov
call
call
mov
imul
arpl
mov
dec
sub
es
imul
adc
call
call
call
and
sub
movsb
decb
jmp
les
xor
icebp
adc
test
mov
cmpsl
mov
adc
mov
test
ret
mov
mov
fistpll
incb
push
je
lcall
in
call
call
repz
push
repz
sub
mov
scas
jmp
push
imul
dec
push
call
sbb
xor
jbe
cmp
arpl
cvtps2pi
rolb
pop
js
lods
repz
jno
int
call
loop
call
call
lea
lea
addb
cmc
scas
orl
call
mov
fldl
aad
test
add
in
sbb
int3
mov
cmc
jo
and
and
and
and
and
and
and
cs
xchg
add
and
in
outsb
adc
iret
mov
push
xor
fmul
ja
xchg
mov
mov
test
cmpsb
dec
cmp
std
and
bound
inc
push
call
call
test
cmpsl
in
out
xor
ret
insb
mov
es
dec
std
sub
andl
and
pop
aam
pop
adc
call
call
test
jno
inc
testb
mov
push
popf
sub
lret
push
fistps
shlb
and
jns
cmpsl
mov
je
jle
xchg
je
hlt
in
out
popf
notl
mov
call
call
call
imul
outsl
addr16
cli
out
push
aad
out
aaa
push
mov
adc
pop
aad
lds
and
and
and
and
and
xchg
pop
fnstenv
mov
das
inc
sub
jl
call
call
call
sqrtps
mov
xor
test
push
scas
jl
mov
xor
mov
push
lcall
inc
xor
cmpsl
adc
and
mov
sub
cmpl
inc
or
inc
movsl
popf
int
xor
call
call
addr16
lds
add
add
les
fists
in
mov
jne
ret
add
xchg
mov
test
add
add
or
pop
cmp
sub
cmp
ljmp
call
xchg
mov
xchg
cmp
or
adc
sbb
cmp
imul
lods
popl
xchg
in
sbb
push
jb
mull
fstpt
jo
gs
call
call
inc
lods
and
and
and
and
pop
or
xchg
jns
inc
pop
lock
sahf
xchg
rcl
adc
not
loopne
push
ja
ja
add
je
test
cmp
xorl
je
arpl
push
sub
push
cli
sarb
mov
icebp
stos
aam
call
call
loop
es
repz
pop
in
mov
leave
bound
cmp
adc
addr16
sub
call
fdivrl
sub
dec
popf
call
call
dec
cwtl
dec
popa
xor
pop
xchg
ficompl
imul
mov
cmp
call
call
call
sahf
push
into
or
pop
std
ja
test
adc
test
jns
out
in
test
adc
stos
adc
and
and
and
and
push
cmc
sub
pop
dec
lahf
dec
lahf
std
es
insl
rcrb
call
lods
cli
jecxz
and
and
and
popf
cmpsl
xchg
clc
xchg
out
call
call
xor
xor
mov
xor
sbb
sbb
xchg
cs
iret
inc
add
movsl
or
stos
pop
test
insb
test
pushl
sub
xor
xor
call
inc
das
push
std
les
push
in
xchg
push
bound
nop
nop
idivl
mov
dec
pop
nop
push
outsb
push
mov
pop
add
dec
loopne
movsb
popf
stos
add
addr16
xor
cltd
test
stos
xchg
push
and
and
and
and
and
and
and
add
and
sbb
mov
sub
call
call
call
fndisi(8087
fucomi
call
call
xchg
xchg
filds
rol
adc
loop
adc
int
pop
pop
and
jmp
adcl
dec
dec
into
test
mov
loopne
xor
inc
jle
mov
xchg
xchg
push
xor
sub
or
sbb
jnp
leave
mov
mov
insl
loop
xor
call
call
call
cmp
es
pop
sar
mov
jecxz
push
ja
xchg
mov
cmp
or
adc
xchg
leave
xor
call
call
outsb
push
mov
and
sbb
cmpsb
mov
cmp
xor
daa
jmp
xchg
out
rcrb
sub
ret
mov
fdivs
push
rcrl
ret
sub
mov
xor
mov
jecxz
test
imul
out
daa
add
es
call
mov
dec
sub
dec
repz
pop
insb
faddl
imul
call
call
cs
sub
mov
xchg
or
cmp
mov
iret
xchg
cltd
pop
adc
arpl
imul
dec
pop
fs
jl
mov
ss
pop
je
cmc
cli
and
and
and
and
and
pop
mov
cs
iret
mov
idivb
dec
xchg
and
setbe
mov
inc
pop
jmp
fbld
inc
mov
adc
test
dec
outsl
jg
dec
mov
call
call
cwtl
xlat
imul
xor
mov
dec
insb
cltd
pop
xorb
or
call
call
iret
lret
mov
jae
mov
ja
test
push
sub
pop
lds
pop
cmp
ja
or
mov
sbb
mov
sar
mov
jae
lods
push
out
js
jb
xchg
into
xchg
push
std
adc
and
outsb
cmp
fnstenv
popf
rcr
pop
aad
call
call
call
call
comiss
sub
lds
in
pushf
iret
mov
popa
pop
inc
xor
xchg
cmp
inc
in
into
mov
and
sbb
and
and
and
and
and
jae
sbbl
stc
jae
in
jecxz
push
push
inc
lods
out
movsb
call
call
addr16
repnz
sbb
in
pushf
call
call
call
lds
mov
and
and
and
and
popa
inc
in
js
cltd
cmp
int
adc
call
call
jb
inc
mov
jl
or
inc
fiadds
lret
xchg
std
dec
gs
stos
imul
or
or
movsl
mov
xlat
lcall
std
or
daa
mov
dec
gs
call
call
ljmp
dec
sti
pop
xchg
data16
fcoms
outsl
sahf
movsb
mov
ss
inc
adc
lret
inc
xchg
push
sub
leave
call
call
hlt
outsl
ret
aas
ror
dec
into
pop
fs
mov
movsb
out
jno
aam
in
push
imul
xchg
lods
push
sub
data16
cmpsl
addb
sbb
lret
cmp
cwtl
in
repnz
call
jg
pusha
pop
call
call
call
scas
movsl
jg
stc
repnz
jne
fdivrl
jecxz
dec
daa
or
outsb
xchg
add
mov
pop
push
adc
dec
dec
sarb
add
add
or
push
jecxz
addr16
subb
rorl
and
cs
fistps
inc
sub
adc
call
call
call
jbe
pop
mov
iret
dec
sti
arpl
xchg
rolb
lods
and
mov
jno
fcmove
mov
imul
loopne
and
and
and
and
and
and
scas
sbbl
inc
cmp
mov
mov
cltd
imul
call
call
dec
push
ret
mov
adc
inc
cwtl
jg
loopne
ret
inc
inc
nop
lods
inc
push
bound
push
call
call
push
je
sub
jg
in
pop
lret
out
mov
repnz
cs
pop
push
mov
xor
data16
push
mov
xchg
popf
clc
jbe
push
out
mov
lretw
dec
mov
imul
call
call
mov
mov
mov
mov
lcall
dec
inc
adc
enter
jle
incb
ficoms
pop
mov
adc
call
call
je
popf
les
out
in
fstpt
in
and
mov
in
call
call
call
jae
or
xor
shll
xlat
sub
mov
out
xor
in
jmp
gs
mov
xor
sbb
pop
push
loopne
ds
dec
dec
cmp
clc
inc
dec
lret
inc
bnd
jmp
add
inc
fbld
call
call
or
mov
adc
jns
clc
hlt
das
cld
gs
lret
push
insb
jp
pop
rolb
adc
inc
inc
pusha
call
call
xor
popa
jno
call
call
inc
or
xchg
inc
jp
push
sub
jg
pop
loope
jecxz
call
call
sub
ret
lret
clc
lret
insw
adc
push
xchg
mov
jae
sub
call
call
mov
aam
mov
mov
fiaddl
adc
and
and
and
and
and
scas
outsb
or
pop
roll
fldl
shlb
lret
sub
xor
mov
les
add
sub
call
call
pop
movsb
push
push
sub
ljmp
push
pop
sbb
enter
call
call
call
div
test
negl
in
mov
inc
xchg
add
call
call
or
dec
add
ja
ds
mov
mov
in
shl
roll
je
push
popf
stc
fistps
movsb
sbb
add
lds
jle
filds
or
jbe
xchg
and
and
and
and
and
and
and
pop
repnz
cs
stos
push
cmp
sbb
in
or
test
movsb
andl
pushf
add
loop
jnp
sub
enter
inc
sbb
ficomps
pop
popf
fimull
xor
nop
stc
lds
call
call
call
lods
pop
dec
js
sti
and
and
and
and
insl
adcb
or
fprem
mov
or
nop
loopne
mov
mov
xor
clc
fistps
push
daa
cld
stos
and
mov
pop
cld
repnz
mov
dec
dec
pushf
cwtl
negl
lock
popa
adc
cmpsb
scas
sarl
call
call
dec
shlb
mov
out
fnstsw
sub
mov
call
and
add
xor
les
pop
repz
loope
fwait
push
adc
cmp
mov
xchg
or
addr16
mov
fdivs
jcxz
jge
mov
shrb
call
call
dec
push
aaa
rcrl
ret
pop
popa
xchg
inc
sub
sti
in
std
dec
lret
pop
scas
leave
in
popa
sbb
imul
call
outsl
mov
mov
call
call
mov
jge
xchg
jae
lret
adc
xchg
and
lea
std
outsb
ss
mov
inc
inc
jmp
push
aaa
negb
call
call
lret
lods
xchg
pushf
shrl
std
jl
xor
inc
jbe
push
das
repz
flds
pusha
add
fwait
mov
mov
popa
adc
cwtl
add
xor
sub
xor
inc
ja
jnp
push
nop
xchg
imul
pop
push
scas
insl
or
lods
sub
jbe
and
call
call
ja
pusha
sbb
out
add
inc
call
call
or
sbb
out
push
jno
movsl
jns
push
lds
loopne
sbb
scas
popf
fdiv
adc
stc
dec
out
add
int3
inc
popa
stc
sbb
jbe
jmp
mov
call
call
aaa
ret
cld
flds
movsl
addl
jl
sbb
jne
inc
adc
mov
push
sbb
and
xor
lds
cltd
or
and
and
and
and
and
and
and
shl
xchg
in
push
cs
call
call
call
out
jmp
add
fsub
lret
stc
sbb
mov
aad
je
push
mov
call
call
call
popa
add
inc
cs
fsubl
pusha
xorl
das
arpl
mov
addr16
test
push
adc
cmp
adc
scas
add
les
call
call
imul
add
cwtl
inc
jno
pop
add
dec
enter
arpl
icebp
mov
inc
xchg
cmc
cwtl
or
sahf
adc
idivb
bound
call
call
and
outsl
rcrb
addb
cmp
mov
jmp
dec
insl
and
call
call
mov
stc
je
cmp
mov
mov
lds
add
jb
dec
outsb
incb
push
jg
mov
fwait
fs
loop
call
call
jge
shll
mov
and
and
and
and
and
jg
adc
cwtl
cltd
fld
sarb
push
mov
data16
and
and
and
and
sbb
mov
and
jne
call
call
daa
jnp
cmp
jae
fsts
or
pop
adc
popa
mov
in
fdivrs
cmp
mov
sahf
out
insb
xchg
xchg
or
dec
pusha
std
and
nop
cmp
fdivr
mov
arpl
pop
pop
push
ds
mov
call
add
movsb
adcb
lds
xor
testb
inc
pop
icebp
fstps
jge
mov
dec
fistps
ljmp
inc
mov
pop
sbb
fs
int3
sub
aad
jge
call
call
add
mov
cltd
jnp
outsl
inc
daa
scas
add
stos
xchg
icebp
cmc
ret
sub
call
call
call
mov
inc
clc
daa
pop
rclb
inc
cmp
add
mov
out
hlt
stos
out
pop
testl
and
and
aaa
or
fsubrl
loop
add
psubusb
push
add
out
sbb
sbb
jmp
mov
call
mov
out
xchg
movsb
sbb
dec
cltd
filds
sbb
ja
xor
neg
ja
push
imul
iret
ja
add
xchg
loopne
enter
rolb
add
jmp
inc
and
sub
pop
jb
mov
icebp
insb
mov
data16
push
inc
ret
call
call
cmp
pop
addr16
lea
inc
dec
xchg
loop
sub
popf
push
in
or
xorb
jl
mov
call
call
movsb
lret
cli
sahf
movsl
rolb
xchg
mov
outsb
jno
sbb
xchg
dec
rclb
jne
mov
mov
test
imul
inc
ret
mov
faddl
sbb
mov
mov
in
roll
mov
cld
cs
loope
xchg
xor
call
call
aad
and
push
jns
iret
in
jmp
sub
jbe
lock
mov
ss
sbb
in
inc
cwtl
shl
mov
mov
lods
mov
ljmp
jecxz
dec
scas
sbb
and
call
rclb
mov
jp
pop
test
cmp
lods
and
mov
pop
mov
pop
or
add
pusha
xchg
pop
sti
xchg
loop
mov
les
mov
call
call
call
cmpsb
adc
fistps
and
xchg
push
bnd
rcrb
filds
jle
and
sahf
dec
mov
test
jp
lods
rcrb
inc
xchg
and
iret
pop
idivl
test
decb
jge
inc
psubsw
mov
xor
ljmp
call
call
jnp
xor
pop
pop
mov
rorb
push
fxam
mov
ret
out
mov
cmpsb
cld
pop
push
fidivs
cmp
lds
and
and
and
and
and
fdivs
mov
inc
sti
and
stos
and
call
call
fnsave
movsb
inc
lea
dec
and
mov
mov
add
push
outsb
aas
add
xchg
inc
loop
out
jle
gs
cmp
fnstenv
push
lods
jae
sub
call
call
arpl
cmp
lretw
inc
dec
pop
cmpsb
adc
xchg
pop
lret
or
cld
in
jl
add
in
test
daa
push
mov
and
and
and
pop
insl
or
call
call
sbb
rolb
sbb
jge
and
jnp
add
jne
or
out
jge
nop
push
and
ret
icebp
sub
and
jmp
pop
popf
push
shll
out
lahf
fwait
push
lcall
push
mov
fldcw
adc
cmpsb
adc
add
call
call
xor
dec
das
pop
lcall
push
xchg
mov
cs
sub
add
jecxz
std
sbb
cld
bound
fiaddl
loop
ret
add
test
out
xor
call
call
aas
pop
pop
mov
inc
xorl
push
cwtl
and
push
inc
aad
ret
pop
mov
add
and
and
and
and
push
out
pop
inc
add
and
and
and
and
and
mov
inc
add
test
shrl
call
call
pop
loopne
sub
jecxz
mov
bnd
push
call
call
call
nop
inc
add
inc
pop
jo
xchg
mov
or
gs
pop
and
lea
add
icebp
add
xlat
sub
scas
push
dec
hlt
or
jae
jecxz
cmpsl
cmpb
cmpsl
jl
lcall
push
mov
push
call
call
call
mov
out
cltd
dec
lret
xor
pop
sbb
jnp
xor
arpl
sbb
stos
sbb
xchg
ja
mov
out
adc
dec
mov
cmpsb
mov
xor
xchg
imul
xchg
gs
movsb
testl
mov
fucomip
push
and
jle
adc
stos
js
jge
adc
call
call
jns
lret
pushw
pop
jl
sbb
call
or
jb
xor
xchg
iret
dec
jo
xchg
out
push
push
clc
mov
jne
adc
rcr
cmp
add
push
push
divl
shll
cmp
pop
cmc
xchg
mov
cs
arpl
push
std
fs
mov
xor
mov
jb
add
fstpt
dec
call
call
popa
sub
xor
mov
imul
mov
dec
repnz
cld
insb
adc
pop
or
mov
sub
imul
scas
lock
fldenv
cmp
call
call
js
and
lock
ds
jno
pop
inc
or
adc
mov
aam
mov
add
rorl
cli
mov
push
enter
add
push
and
and
and
and
and
and
and
js
pushl
push
and
out
sub
cmp
call
call
call
imul
push
mov
adc
mov
call
call
cmp
or
fidivrl
rorb
pop
jns
xchg
push
enter
lds
aaa
push
and
dec
fcoms
sbb
imul
lahf
mov
lock
shlb
dec
rol
or
fldenv
pop
mov
call
call
fisubl
push
out
stos
dec
or
ja
ja
dec
fsubrl
fwait
icebp
or
mov
je
push
lahf
dec
movsb
pushf
push
sub
jecxz
sub
sbb
xor
sbb
jb
mov
aaa
push
fisttps
lea
pop
jge
push
xor
mov
and
fucomi
call
call
fidivrs
dec
iret
dec
imul
and
hlt
cmp
scas
je
call
call
in
movsb
into
adc
out
inc
jl
fucomp
call
call
push
xor
ret
sub
lret
es
popa
jg
hlt
jbe
test
xchg
inc
dec
inc
dec
pop
xor
call
push
movsb
jmp
xchg
imul
es
jge
in
pop
mov
test
scas
sbb
push
sbb
xchg
gs
notl
sub
adc
or
ljmp
call
mov
call
call
jbe
pop
rorl
jecxz,pn
and
and
and
and
idivb
movb
adc
mov
push
push
push
inc
jg
jl
dec
sti
jae
test
pop
out
stc
mov
pop
adcb
pop
adc
cld
mov
call
call
call
cmp
dec
fwait
movsl
sub
sbb
leave
sub
mov
and
mov
inc
lcall
jnp
ffreep
das
jae
pop
jae
cmp
jecxz
xor
jp
push
repnz
call
call
dec
popa
add
jno
xlat
dec
cmc
jbe
push
xlat
dec
sahf
ds
jae
test
cmpsl
adc
add
sbb
aaa
std
xchg
lret
dec
pop
loop
pusha
sbb
sub
les
ret
xor
jmp
call
call
ss
xor
sub
cmp
mov
inc
dec
js
pop
xor
cmp
repnz
pop
sub
call
call
jno
push
inc
outsl
dec
cmpl
jae
sub
addr16
inc
dec
jp
push
sub
push
or
jle
call
call
call
xchg
push
add
shrl
inc
push
push
push
xor
dec
fs
push
sub
jne
xchg
pop
mov
arpl
mov
bound
fsubl
and
and
and
lahf
fs
cmpsb
pop
sub
mov
push
dec
cmp
cmp
dec
xchg
push
or
call
call
jb
xchg
lret
jge
call
cmp
movsb
mov
sbb
mov
orl
jl
sub
call
call
call
mov
sub
cmp
fldenv
or
fldcw
es
pop
add
push
ljmp
jae
pop
lcall
call
call
cmp
call
call
push
outsb
rolb
in
orb
inc
je
inc
test
mov
adc
xchg
push
pop
movl
call
or
cmpsb
dec
pusha
fsubr
push
or
jp
push
imul
arpl
sti
mov
or
das
push
and
or
pop
hlt
add
and
and
and
and
and
and
clc
mov
jg
sub
xor
call
adc
sbb
test
clc
xchg
insl
mov
or
mov
call
imul
mov
call
call
call
push
pop
mov
data16
loop
call
or
fldenv
mov
xor
mov
call
call
call
icebp
incl
sub
test
sub
sub
add
icebp
lret
or
jl
lods
jnp
xchg
mov
fwait
pop
xor
outsl
sbb
jb
sbb
fbstp
jmp
enter
add
pop
hlt
xchg
push
jns
inc
mov
pop
and
jo
sbb
call
call
push
mov
xor
aaa
out
pop
clc
mov
and
and
and
and
and
cmp
inc
pop
jns
pop
test
xchg
inc
sub
out
push
ficoml
pop
fidivrl
fldcw
pop
jl
aaa
gs
mov
call
jecxz
data16
ret
or
jns
mov
cmpsl
mov
mov
push
lds
and
pop
add
add
jnp
add
call
call
ret
jl
cmp
call
call
xor
mov
jle
lods
jb
cmp
fs
call
call
call
into
sub
fsubrs
xor
or
addr16
int3
sub
xchg
mov
ja
test
push
inc
dec
push
pmaxsw
or
sbb
push
cs
jae
and
and
and
and
and
and
and
and
enter
out
xchg
xor
xor
pop
mov
pushf
cmp
fistps
call
shl
in
mov
bound
sub
repz
int
push
cwtl
sbbb
pop
jnp
mov
and
dec
push
mov
jns
loop
xor
or
sub
sub
xchg
insb
pop
and
dec
mov
jg
insl
sahf
sbb
mov
call
call
mov
mov
pop
lret
imul
fnstenv
shrb
or
jbe
int3
sub
add
jg
daa
inc
std
push
clts
call
call
sbb
pop
adc
pop
xor
pop
mov
rcrl
clc
test
jno
jl
stos
jae
out
sbb
outsl
shrb
les
jl
dec
pop
push
mov
pop
cmp
cmp
call
call
call
repz
push
push
leave
mov
dec
fcoml
xor
subb
mov
out
xor
push
or
das
cmp
mov
test
insl
fs
call
call
aam
call
call
loope
jge
out
dec
mov
movsb
add
jmp
sahf
popa
adc
call
call
inc
loop
dec
xor
adc
or
jae
leave
ds
cmpsl
jno
sbb
xor
int
dec
pop
mov
insl
and
das
cmp
jbe
pop
xchg
jmp
cmp
sbb
seta
lret
add
insl
xchg
push
push
or
call
call
add
sub
std
inc
sysret
inc
loop
and
and
and
and
and
and
test
pop
push
or
movsb
in
and
out
lret
push
call
call
pop
fcmovbe
scas
jbe
mov
arpl
call
xlat
sbb
inc
test
xor
dec
or
push
and
pop
sti
mov
outsl
pop
mov
sahf
pop
mov
pop
aam
fcmovb
jle
sbb
dec
popa
jae
arpl
frstor
test
ljmp
sar
sbb
lret
lods
stos
push
or
mov
in
or
shll
call
call
call
adc
mov
dec
push
add
test
pop
call
call
push
nop
data16
addr16
xchg
stos
mov
jbe
das
inc
mov
or
or
call
call
enter
lcall
dec
out
add
and
push
cmp
pop
push
add
and
sub
mov
sub
mov
rcrb
idivl
js
fs
sbb
aam
pop
jns
imul
pop
in
cs
call
call
call
sub
sub
subb
lret
mov
dec
or
and
and
and
and
std
outsb
and
int
call
call
sbb
bound
call
call
mov
add
negl
sub
test
sub
jns
inc
outsb
out
mov
sub
inc
orl
adcb
loopne
or
call
call
and
insl
or
icebp
scas
sbb
pop
mov
loopne
sub
jns
push
or
fldcw
dec
xchg
fdivrs
addb
pop
and
pop
icebp
and
jmp
or
jp
push
ljmp
call
call
push
push
push
gs
call
call
xlat
dec
xchg
inc
rorl
insl
in
and
sub
sub
pop
add
ljmp
cwtl
add
or
xor
shll
add
call
call
dec
mov
jl
pop
push
and
cmp
stc
shrb
bnd
dec
loop
fsubrs
cmp
arpl
ss
pushf
int3
daa
pop
dec
bound
jecxz
and
lret
xchg
inc
popa
push
mov
cmpsb
fs
fs
daa
addr16
pushf
call
call
mov
int3
daa
xlat
push
aaa
pop
mov
out
aas
push
mov
pushl
pop
sbb
xchg
outsl
jmp
mov
bound
mov
jno
inc
mov
add
pusha
hlt
andb
cmpsl
mov
dec
add
mov
mov
push
pop
idivl
or
call
call
xor
ds
roll
cmpb
pop
dec
jbe
and
push
sahf
xor
js
ljmp
shl
pusha
mov
jmp
xor
mov
jne
add
mov
cmpsl
and
jo
outsb
and
mov
mov
jno
and
and
and
and
and
push
enter
out
vorps
ljmp
xchg
rcrb
sti
insl
inc
imul
xor
cmp
vcvttsd2si
int
call
call
call
call
jo,pt
mov
popf
cmp
add
and
xchg
mov
bound
fs
or
inc
jp
in
add
dec
pop
mov
je
scas
out
pop
movsb
inc
test
push
and
mov
jb
and
and
jecxz
loopne
pop
mov
popa
call
call
cmc
mov
xchg
idivl
test
dec
jmp
mov
and
or
add
cmp
hlt
out
inc
mov
orb
repnz
and
sub
das
stos
push
call
call
call
and
cmp
arpl
stos
and
fwait
ja
inc
push
and
xor
jae
jne
sarl
call
call
or
iret
sub
jns
xor
adc
rcll
mov
dec
jbe
call
call
pop
pop
es
mov
adc
fidivs
push
pop
pop
les
pop
je
cmp
and
sbb
test
call
popf
hlt
insb
jmp
pop
add
sbb
mov
sub
addr16
hlt
jecxz
push
push
mov
jno
adc
outsl
lods
inc
xchg
std
jae
inc
pusha
cmc
insl
jo
pop
es
orb
mov
ds
outsb
dec
icebp
dec
ret
sub
dec
add
sbbb
push
imul
call
call
call
enter
ret
and
jns
xchg
pop
push
push
xlat
cmp
call
call
call
call
dec
cli
enter
jecxz
addr16
cmc
sti
lret
push
jmp
pop
lods
cmc
push
enter
int
aam
cmp
pop
mov
inc
fwait
pop
lds
cmp
sub
and
jle
and
and
and
and
and
and
and
and
xor
pop
enter
call
call
add
int3
and
add
ja
sbb
mov
inc
mov
inc
pop
or
mov
stos
daa
int3
cs
adc
jbe
inc
call
call
call
gs
cmp
pop
imul
lcall
and
int
popf
sub
and
or
ds
insl
dec
mov
or
out
pop
lahf
addr16
mov
cmp
stos
mov
loopne
cmp
dec
cs
call
call
sbb
test
imul
xchg
lcall
pop
cmpsl
call
call
call
enter
jnp
push
stc
jnp
mov
push
add
dec
ja
inc
mov
ds
sbb
inc
inc
orl
inc
addb
adc
lret
shlb
imul
call
call
call
call
call
call
call
sarb
adc
insl
push
rcl
sbb
mov
fiadds
add
push
sub
cmpsb
mov
jnp
push
nop
pop
out
ret
xchg
call
call
divb
dec
clc
cs
and
and
and
and
and
and
add
inc
mov
testl
call
call
cmp
inc
imul
or
je
call
call
push
jmp
xchg
pop
mov
loop
sub
popa
mov
push
xchg
nop
cld
je
pop
lret
movsb
push
jmp
dec
xlat
out
sbb
adc
push
aaa
cmc
lcall
xchg
add
bnd
sbb
inc
sarb
mov
xor
inc
jmp
and
repnz
mov
xchg
popa
xlat
sub
call
call
ss
xlat
pop
or
adc
add
push
jge
in
add
and
and
and
and
and
add
icebp
cltd
mov
pop
aad
and
xlat
ret
xchg
xchg
fsubrl
outsb
icebp
fcoms
dec
fiaddl
or
cli
ja
ds
je
inc
call
call
call
call
daa
jbe
and
mov
push
pop
pop
call
call
popa
out
ror
xor
popa
fisttpll
xchg
ljmp
jl
push
fldcw
out
outsl
lret
inc
je
mov
or
pop
int
pushf
rclb
fs
dec
pop
sub
mov
lods
addl
lret
mov
call
call
push
negb
shrb
fwait
fs
shll
xchg
imul
add
inc
or
jbe
imulb
fistpl
mov
lret
mov
scas
call
call
call
cmpsl
push
lcall
xchg
mov
mov
add
sub
adc
ds
insb
xor
mov
pop
xor
scas
test
lcall
xchg
xor
sub
aaa
xchg
adc
into
sbb
cli
jne
xor
mov
lock
pushf
jge
xchg
dec
or
or
call
call
or
mov
aas
push
xorb
push
pop
pop
mov
jecxz
call
call
call
call
sbbb
pop
xchg
push
xor
cli
cmp
arpl
mov
push
lcall
jl
inc
movsl
adc
lods
jns
pushf
jge
sbb
rolb
out
and
and
and
and
and
and
testl
call
call
call
sbb
mov
loope
aaa
or
jl
fcmove
and
jbe
mov
jl
jge
mov
roll
jb
cmpsl
jb
insb
sti
xlat
push
sahf
scas
in
out
sub
dec
push
jb
das
xchg
int
jne
call
call
dec
or
dec
dec
dec
call
test
rcrl
xchg
bound
popa
inc
and
and
and
and
and
and
xor
sub
cmp
movsb
aad
bound
xchg
pop
fcmovu
pop
adc
bound
xor
outsb
sbb
addb
call
call
call
cltd
lret
sub
inc
mov
mov
and
and
and
and
and
and
inc
mov
mov
call
call
icebp
sub
xor
xlat
pop
lret
inc
mov
push
stos
cmp
push
pop
addl
call
call
scas
cmp
push
test
dec
mov
push
in
lds
pushf
test
add
inc
xchg
jnp
jno
and
and
and
and
and
and
dec
push
fstpl
pop
sub
call
mov
aas
xchg
cmp
mov
pop
xchg
nop
fildl
xor
and
lods
stos
ret
sub
and
ret
jo
dec
mov
jmp
cld
push
jbe
pop
cmpb
mov
call
call
cltd
and
fsubrs
or
sbb
mov
push
imul
call
call
call
and
inc
imul
dec
mov
push
aaa
rolb
sub
cld
dec
push
fisttpl
xchg
out
fidivs
mov
jae
inc
sub
out
call
call
mov
xlat
divl
lock
sub
and
gs
leave
jp
in
mov
jge
out
pop
fnsave
mov
call
call
cmp
xchg
sbb
inc
cmp
es
imul
sub
call
call
dec
iret
lret
mov
mov
enter
mov
and
xlat
addr16
jl
les
subb
call
call
call
lds
out
addr16
lods
inc
pop
clc
hlt
sarb
fldt
popa
and
test
xchg
pop
mov
push
cltd
test
and
cmp
sti
inc
imul
mov
ja
jg
test
inc
jo
jp
in
pushf
add
adc
decb
call
call
call
hlt
jl
and
fcomi
mov
mov
mov
fsubl
nop
mov
sarl
bound
cmc
adc
mov
jg
data16
daa
addl
sbb
xor
call
call
aas
clc
mov
sarl
and
and
and
and
and
cmp
fimull
and
pusha
outsb
pop
add
push
jbe
mov
add
or
outsb
cltd
push
fadd
dec
mov
in
push
sub
jecxz
jno
cli
push
pop
and
icebp
mov
cltd
mov
jae
jmp
pushf
push
daa
call
call
fs
push
cmpsl
sti
call
call
sub
out
lock
ss
out
sbb
pop
ret
jne
inc
ljmp
sub
add
into
xor
add
pop
mov
sahf
shrb
push
add
cld
mov
mov
sti
clc
std
repz
adc
mov
call
jae
leave
mov
pop
mov
push
jne
les
mov
and
push
inc
call
call
imul
out
sbb
jae
lods
pusha
mov
mov
pop
xchg
mov
scas
pop
cmp
sub
movsl
divl
add
out
cmp
mov
es
push
jo
call
call
call
into
jg
adc
lret
cld
inc
sahf
arpl
inc
lds
mov
repnz
dec
cs
adc
stos
pop
and
leave
or
call
call
adc
ds
sub
dec
mov
stc
outsl
addb
push
inc
pusha
adc
movsb
ja
call
call
call
xor
aad
inc
imul
adc
cmc
scas
test
dec
dec
test
jo
mov
and
and
and
and
call
call
lods
or
int3
jns
inc
inc
test
mov
push
jge
xlat
ja
inc
sub
dec
ss
sub
call
call
call
call
int
xor
pop
cmp
scas
inc
loope
sub
call
call
std
aas
xor
call
mov
and
fisubrl
js
mov
push
sbb
js
inc
dec
cs
jnp
pushf
dec
daa
xchg
mov
inc
mov
inc
fdivrp
mov
call
call
imul
push
cmpsl
inc
jge
cs
mov
or
and
call
call
out
popa
mov
push
inc
jmp
aas
ljmp
dec
or
cmp
cmpsb
lds
fwait
popf
mov
jge
int3
inc
ficoms
clc
or
fcomp
stos
sub
or
call
call
call
xor
roll
xchg
imull
xor
stos
roll
xchg
call
incb
xor
dec
inc
or
int3
jo
mov
cmp
cmp
xlat
leave
in
cmp
fnstcw
pop
xchg
stc
loopne
mov
test
mov
call
call
or
fcomps
or
arpl
adc
mov
mov
rorb
lock
mov
cmpsb
dec
mov
ljmp
cmpb
xchg
push
sbb
ret
add
jb
xorl
test
movsl
and
and
and
and
and
and
and
call
call
xchg
xor
loop
xchg
jge
in
or
ret
cli
sbb
mov
sub
cli
sbb
add
imul
jecxz
fbld
scas
adc
hlt
jle
add
call
call
mov
add
outsb
mov
mov
dec
jmp
pop
mov
xlat
popf
test
sarb
xchg
cmpsb
pop
call
call
mov
and
outsb
xor
fidivl
push
push
call
call
call
call
sahf
ja
fnstenv
lock
adc
call
call
call
pop
jg
test
xchg
inc
jmp
pop
dec
pop
rolb
dec
pusha
lods
pushf
call
call
cmpl
or
mov
xorl
fbstp
pop
adc
and
int
and
pop
and
cs
aam
dec
int3
mov
and
out
mov
adc
cs
movsb
fstpl
call
call
call
push
mov
add
subl
test
out
jmp
mov
and
and
and
and
and
jmp
dec
add
lods
push
cmp
dec
insb
cmpb
dec
xchg
fimuls
call
call
call
call
call
jg
test
ja
xchg
cs
das
out
int
data16
xor
and
call
call
call
push
mov
and
fdivrs
fs
imul
mov
je
xchg
pusha
addr16
push
adcb
call
call
cmp
nop
stos
lods
sub
mov
dec
xchg
add
clc
gs
shll
and
and
and
and
and
scas
sahf
mov
inc
idivb
mov
call
loopne
push
loop
pushf
cmp
cmc
or
mov
sub
mov
call
call
call
dec
call
fists
out
ret
stos
jmp
insb
aaa
and
and
and
and
and
and
and
inc
leave
mov
in
aas
loopne
mov
loope
orl
adc
mov
xchg
movsb
movsb
shlb
call
call
sub
xlat
and
adc
iret
cmp
imul
ret
xchg
pop
pushf
pop
test
jbe
call
call
call
mov
out
jnp
or
jg
or
leave
or
mov
jge
pop
jl
cli
xchg
fstps
cltd
push
addr16
sar
fisubs
lret
dec
lods
dec
adc
js
mov
or
cmp
je
mov
ja
push
mov
pop
call
call
loopne
das
or
lds
cltd
in
call
call
call
sbb
and
xorl
cmp
loope
mov
push
xchg
mov
push
push
cs
aad
and
sahf
pop
out
std
call
jne
pop
pop
push
icebp
cmovno
sub
call
call
dec
lds
andb
je
outsb
xor
bound
into
jb
aaa
sub
popf
idiv
pop
sahf
sub
sbb
and
and
and
and
and
and
xor
or
cmp
call
call
and
and
and
push
call
call
lock
jbe
add
pop
mov
sub
lock
rcl
sbb
push
add
add
ss
dec
jno
sub
xchg
aas
jge
mov
dec
cmp
push
call
call
call
push
rcr
xchg
fwait
dec
mov
jge
cmp
call
call
xor
push
stos
ret
jne
call
call
call
pop
mov
pop
lcall
call
fidivs
arpl
push
or
dec
mov
cmpsb
jl
les
loope
or
and
adc
mov
addr16
int
leave
lods
mov
popa
push
fiadds
lods
cmp
mov
pop
dec
jb
xchg
popf
sti
jl
push
or
nop
jbe
add
fsubrp
mov
inc
in
call
call
push
cs
mov
inc
mov
bound
mov
push
testb
xor
icebp
adc
sub
xor
jo
and
stos
lods
xlat
inc
xchg
les
pop
mov
mov
cld
scas
mov
ret
sub
sti
pop
out
push
inc
frstor
and
pop
mov
pop
insb
jl
call
call
push
sub
rclb
adc
add
cwtl
roll
rclb
mov
ljmp
pop
test
add
outsb
mov
call
call
inc
pop
jge
call
call
sub
pop
push
in
test
lahf
cmpsw
lods
sarl
enter
rcrb
xor
call
call
call
pushf
in
imul
and
and
and
and
and
and
adc
into
sub
cli
subl
dec
out
cmpsl
cmp
subb
or
and
and
in
dec
inc
icebp
push
push
outsl
out
call
call
outsb
cmp
in
int
cs
xor
std
dec
sbb
popa
xchg
mov
call
call
xchg
js
mov
clc
or
stos
repz
shl
ja
out
loope
fisubrs
jmp
mov
mov
lret
sti
and
and
and
and
jne
add
imul
fs
call
call
fsts
sub
sbb
into
call
push
xchg
outsl
nop
cld
lds
xor
and
push
test
add
call
call
repnz
ja
or
arpl
push
aad
cs
outsb
xchg
cmc
xlat
or
scas
xchg
inc
in
decl
and
ljmp
jbe
aaa
pop
cld
xchg
jae
mov
shll
mov
sub
jg
sub
sbb
sub
call
call
call
cmp
mov
sub
das
stos
dec
int
popa
jle
test
loopne
cmpsl
xchg
fisttps
cmp
dec
pop
xor
pop
fwait
addb
lret
mov
sarb
xchg
daa
mov
push
cmpsb
add
push
mov
sti
cmp
ds
jmp
ret
and
call
sbb
add
imul
mov
sbb
dec
sahf
ret
lret
es
mov
loop
jp
mov
mov
je
mov
mov
call
call
sub
jno
lahf
call
call
call
gs
out
in
rcl
adc
and
and
and
and
dec
in
and
mov
push
fdivrs
call
mov
mov
fisubrs
jo
insb
add
insl
loope
adc
enter
fcoms
pop
lcall
add
push
ljmp
call
call
das
test
cmp
mov
jno
cltd
dec
adc
push
or
push
sbb
inc
xchg
cmp
dec
insl
pop
loope
push
call
call
jle
sti
add
negl
inc
dec
xchg
add
js
call
call
aaa
repz
pop
addr16
mov
in
daa
shl
lods
cmc
push
push
jecxz
outsb
or
arpl
adc
fcompl
enter
push
and
stc
jge
roll
call
call
cmp
xchg
and
aad
mov
or
in
cmp
jp
push
inc
jbe
das
inc
cmp
dec
in
mov
cmp
jne
dec
mov
xchg
push
cmc
scas
imul
jp
sub
mov
call
xchg
pop
sbb
dec
or
insl
icebp
inc
xchg
pop
mov
and
and
and
and
icebp
loopne
std
inc
jle
outsl
daa
mov
jp
mov
dec
lods
dec
fwait
dec
fcompl
imul
cmpsb
xchg
mov
mov
push
popf
call
call
popf
sbb
inc
cmpsb
sub
popa
icebp
push
lcall
inc
mov
xchg
stc
mov
addb
call
call
ds
aaa
push
sbb
rol
inc
xchg
lahf
mov
cmp
call
call
call
or
popf
aas
or
xor
pop
sbb
call
call
call
or
mov
call
call
call
ret
sub
xchg
inc
mov
jmp
jmp
setae
xchg
pop
in
and
add
push
fadds
addb
daa
cmp
arpl
dec
pop
xchg
pusha
jg
pop
in
adc
pop
repnz
add
jecxz
arpl
pop
aam
outsb
mov
repz
xor
call
call
dec
push
xchg
out
pop
mov
adc
or
and
stc
jae
sti
gs
jb
dec
arpl
call
and
and
and
stos
pop
rcll
addb
or
out
notl
fstps
stc
inc
fsts
fisubl
fsubr
call
call
call
push
pushl
push
add
jle
icebp
jb
lds
and
or
xor
xor
shll
sbb
cmc
sbb
dec
push
repz
inc
in
push
dec
fdiv
add
outsl
cltd
call
call
mov
das
pop
fists
sbb
lds
mov
jbe
stc
or
aam
mov
orb
orb
pop
loope
push
mov
jmp
mov
adc
jnp
call
call
xchg
out
cmp
pop
cmp
js
dec
add
or
and
or
and
std
fsubrl
jl
leave
inc
inc
mov
sbb
adc
call
call
das
jns
dec
fbld
or
push
pop
loopne
cmp
push
cld
mov
out
sub
and
ss
cmp
call
call
call
adc
loope
add
in
testb
hlt
loope
jge
xor
dec
push
jne
xchg
aaa
jae
ljmp
call
call
call
mov
pop
fisubrs
testl
mov
push
rcll
adcb
mov
pop
push
or
or
inc
jecxz
inc
cmp
push
sub
stc
jne
mov
xchg
mov
lcall
push
dec
into
repz
mov
xchg
out
or
call
call
call
aaa
and
and
and
and
and
and
scas
inc
adc
jo
pop
fnstsw
push
aaa
jl
pop
or
inc
rcr
xor
loopne
movsb
push
fs
sbb
icebp
add
test
test
ss
mov
or
in
mov
pop
push
jecxz
xor
iret
mov
mov
call
leave
fs
inc
jne
sbb
or
inc
push
add
pop
call
call
call
iret
sbbb
ss
roll
cmp
out
adc
jmp
inc
mov
sub
in
adc
cmpsb
enter
xchg
hlt
jne
xchg
scas
lock
xchg
scas
pop
pop
and
test
call
call
call
into
and
add
push
mov
dec
mov
sbb
in
ljmp
inc
clc
ss
or
fsub
sbb
call
call
and
mov
xchg
pop
in
push
imul
incl
xchg
fsubr
call
call
loope
xor
lods
call
call
call
cli
bound
add
xchg
inc
cmpsl
and
sbb
mov
xor
sub
add
iret
mov
mov
punpckldq
and
push
pop
push
push
adc
jp
cmp
cmp
popa
nop
js
cmp
dec
add
and
dec
cmpsl
call
call
call
or
outsb
pop
pop
movlps
call
call
call
icebp
mov
inc
int3
cld
xor
fstps
mov
fisubs
and
xchg
push
in
icebp
lret
or
xor
or
sub
mov
sbb
movsl
fcoms
les
mov
sbb
shll
call
call
inc
cmc
sbb
mov
call
call
call
fistps
pop
inc
xchg
dec
push
popa
out
pop
push
push
lret
es
and
and
and
and
and
and
dec
inc
cld
fnstsw
call
stos
dec
pop
dec
dec
fadds
in
divl
das
cmp
fistpll
add
pushl
sbb
dec
repz
add
cmp
call
call
jo
inc
mov
and
jno
mov
imul
clc
or
test
call
call
inc
ljmp
inc
or
sub
out
ja
pusha
pop
add
or
in
sbb
or
in
jae
sahf
loop
stos
adc
mov
cmc
mov
sbb
imul
lahf
ret
jmp
push
adc
rclb
dec
scas
jb
call
call
mov
pop
outsl
jnp
xor
and
test
call
call
call
push
insl
mov
xchg
or
mov
push
or
call
call
aas
int3
lea
push
mov
jmp
push
fidivrl
repnz
je
in
mov
mov
mov
addr16
or
inc
xorl
loopne
les
pop
dec
call
call
call
push
push
into
xchg
add
aaa
aas
or
xlat
lds
negl
mov
mov
sub
mov
xchg
jne
iret
dec
cs
add
insb
mov
fisubs
data16
lret
lods
daa
imul
in
fwait
stc
jle
loop
cmp
cs
mov
addr16
call
call
call
hlt
lahf
dec
and
cli
ja
in
jnp
es
push
mov
mov
aaa
add
sbb
cld
push
sub
push
cli
xor
xchg
xor
outsl
push
jg
movsb
and
inc
cwtl
push
cmc
inc
insl
mov
pusha
jae
adc
and
and
and
and
call
pop
jmp
inc
testl
stos
inc
xor
inc
add
mov
aas
mov
movsb
pop
fisttps
rcll
call
call
fisttpll
out
mov
lock
inc
mov
mov
add
andl
imul
in
push
inc
out
mov
out
lahf
imul
call
call
add
xchg
sbb
dec
xor
mov
mov
push
daa
in
ds
add
mov
xchg
xor
bound
push
cwtl
inc
mov
mov
ret
iret
icebp
call
call
leave
push
sbb
add
jb
das
push
fcompl
sbb
sub
and
dec
add
sbb
and
push
mov
mov
adc
mov
adc
call
call
push
testl
xor
call
inc
xor
call
call
jns
pop
mov
es
lcall
adc
sub
test
pop
loop
mov
js
cmp
cmp
push
cmp
jno
jne
fisttps
jne
mov
mov
pop
xlat
je
scas
aam
push
dec
movsl
inc
mov
lock
add
shl
mov
inc
inc
dec
push
imul
and
and
or
sbb
inc
lret
rcrb
mov
outsb
push
fisubl
push
push
fs
pop
push
sub
addr16
xor
lahf
and
or
adc
sbb
pop
test
call
call
dec
out
or
pop
sbb
mov
ja
add
pop
mov
pop
pop
ljmp
call
call
or
push
call
call
call
aaa
or
je
data16
xchg
adc
div
and
das
or
xor
inc
mov
ret
jecxz
pop
call
call
call
rolb
jg
and
scas
jp
bound
sub
inc
imul
inc
or
dec
popa
dec
xlat
pop
pop
push
mov
ret
and
fcmovb
xor
push
and
jb
pop
out
out
mov
xchg
or
fwait
pop
outsl
cmp
das
lcall
call
call
inc
daa
adc
pop
test
cmp
call
call
inc
add
mov
push
je
and
gs
das
add
mov
shll
inc
outsb
adcb
punpckhbw
call
fs
das
sbb
popf
and
mov
cmp
inc
push
stos
idiv
cmp
je
jb
pop
lret
jno
ds
xor
inc
mov
adc
arpl
lods
or
pop
inc
dec
inc
movb
push
xor
call
call
adc
mov
xor
aad
sub
cld
sub
call
call
mov
call
call
call
call
or
call
call
lods
call
call
lret
add
ret
gs
call
call
call
shll
lea
sub
adc
xchg
pop
inc
shrb
push
hlt
sbb
and
and
and
and
and
dec
rcll
gs
nop
adc
cmp
cld
cs
push
push
push
dec
pusha
popa
xlat
sbb
call
sarl
xlat
adcb
test
lahf
sub
add
pop
int
rcll
add
sub
xor
call
add
cmp
adc
in
xchg
cmp
ret
xchg
cld
mov
call
call
call
mov
dec
call
push
rcll
mov
xchg
jb
sbb
lock
jmp
or
sub
in
mov
push
stos
scas
and
xor
stos
pop
push
fnsave
mov
cmp
adc
jg
dec
rcl
fwait
arpl
push
lret
inc
xchg
dec
call
fidivs
roll
add
cli
jno
les
add
call
call
call
pusha
mov
ret
sub
or
call
call
call
add
shlb
jb
cli
aas
pop
adc
mov
into
mov
add
and
call
call
pop
add
add
pop
mov
push
or
inc
fsubrl
scas
pop
xor
dec
xor
in
shrl
rcll
in
sub
add
int
jl
mov
call
call
dec
cmp
sub
cmp
pop
mov
test
fwait
sbb
and
and
and
and
and
jl
dec
mov
adc
call
call
pop
clc
jge
dec
cmpsl
addl
jbe
push
jno
push
mov
imul
call
call
xchg
xchg
aad
ret
or
repz
push
mov
repnz
pop
dec
sub
or
lcall
push
sti
jns
sbb
dec
dec
push
cmc
jl
pop
daa
push
mulb
imul
js
dec
mov
je
or
pop
cmpsb
sub
mov
mov
call
call
inc
lcall
and
call
call
lcall
cmp
mov
cmp
mov
xlat
jb
scas
aas
mov
cmp
adc
push
jae
xlat
insl
ljmp
pop
gs
pop
jne
xchg
xor
lea
pop
mov
fdivl
inc
adc
adc
ret
rorb
cmp
call
or
mov
jl
jb
test
or
push
dec
fldenv
dec
jae
xchg
xor
sbb
sub
sahf
test
xor
addr16
mov
movsb
sub
dec
call
call
call
mov
imul
call
call
call
decb
sub
les
mov
push
cmp
fidivrs
cmp
xor
mov
add
outsb
dec
add
pop
sub
sarl
aaa
into
addr16
inc
mov
push
mov
and
and
and
sbb
rcrb
ret
and
insl
adc
call
call
mov
insl
dec
push
push
test
lods
inc
lret
cld
or
inc
cmpl
sbb
or
pop
dec
aaa
xor
out
push
pusha
mov
sarl
divb
pop
add
mov
fisubl
inc
cmp
call
call
call
adc
stc
cs
lods
jmp
cmpb
push
mov
lds
lret
mov
mov
dec
rolb
sbb
add
in
jg
sub
stos
push
jecxz
sbb
jp
pop
dec
pop
jns
call
call
push
out
les
jp
test
call
call
call
call
adc
rcr
rcrl
push
and
clc
jmp
call
call
xor
sti
lret
mov
push
pop
mov
add
jns
add
pop
mov
sub
cmp
adc
orl
jg
push
pushf
sbb
dec
int
imul
lret
jb
call
call
call
test
pop
cmp
adc
adc
xor
leave
ds
mov
add
ficompl
call
das
fwait
neg
dec
lods
lds
int3
cld
adc
jp
and
pop
mov
xchg
and
mov
int
out
test
cmp
popf
cmc
bound
sub
push
mov
lods
xor
rorb
xor
scas
pop
scas
call
call
xchg
out
pop
add
mov
or
sub
ja
ror
sub
add
jbe
stc
leave
pop
sarl
and
add
adc
jnp
mov
lods
add
movsl
push
mov
inc
xchg
push
leave
and
and
and
and
and
push
call
call
cmp
in
inc
adc
ljmp
or
and
mov
dec
pop
xor
and
gs
call
inc
pop
dec
sbb
insl
outsb
test
sub
pop
jb
call
call
call
cmp
push
call
call
call
cwtl
data16
add
jle
pop
fildl
call
aaa
push
insl
xor
movsb
pop
mov
cld
cmp
xchg
or
call
call
call
push
cltd
out
and
or
repz
cmp
xchg
jge
mov
xchg
je
and
xor
mov
pop
mov
mov
fmull
sub
sahf
shrl
std
push
xor
dec
loope
in
add
fs
push
inc
data16
pop
jecxz
repnz
out
xlat
cltd
or
mov
call
call
call
and
test
add
xor
shlb
outsb
enter
push
ljmp
push
push
sbb
sub
into
push
mov
pop
movsb
mov
dec
sub
and
call
call
sbb
mov
ss
inc
test
jns
fsubs
push
stos
jae
pop
push
call
call
adc
daa
arpl
pop
mov
fsubrl
in
push
scas
std
fwait
or
call
outsb
inc
jmp
sbb
xchg
in
maxps
add
subl
jns
insl
aam
push
ss
packuswb
push
push
cmp
stos
mov
clc
xchg
les
lock
jp
mov
fisttpll
mov
and
and
sub
cmpsl
mov
stos
push
and
jns
fsubl
call
call
sbb
fs
inc
lret
dec
mov
and
mov
or
test
mov
mov
js
pop
loopne
mov
cmp
cltd
push
and
and
and
and
out
cmp
xor
or
test
call
call
xor
repnz
scas
fidivrl
outsb
add
pop
inc
orb
stos
xor
jmp
or
cmp
cltd
or
inc
pushf
pop
jb
call
call
js
dec
movsb
pop
pop
sub
icebp
sbb
fadd
decl
pop
lcall
adc
dec
xlat
push
aas
pop
ret
loope
sbb
mov
call
sub
add
pop
xchg
mov
add
cmpsl
fildll
adc
scas
sbb
stos
dec
cmp
test
in
mov
test
pushf
sbb
push
and
fs
dec
mov
call
call
addr16
aam
es
fs
das
call
cmpsl
dec
stos
scas
xor
inc
mov
fldl
cmp
mov
ret
rcll
or
and
pop
mov
jbe
cmp
data16
or
cmp
pushl
xchg
inc
jnp
loop
js
mov
cmp
loop
call
call
call
flds
xor
or
cmpsb
mulb
inc
push
pop
mov
cmp
int
push
inc
pop
cmpsl
jecxz
push
inc
daa
inc
xor
push
gs
sbb
sub
imul
mov
mov
sahf
or
dec
cmp
outsl
fimull
xor
xchg
pop
add
call
call
fisttps
sub
sbb
imul
pop
fmuls
ja
mov
and
and
and
and
cli
je
add
test
lds
dec
lea
push
xorl
popa
add
pop
add
push
stos
sbb
sbb
int
bnd
call
call
ss
sbb
shlb
pop
cmc
js
popa
bound
outsl
cli
jp
hlt
sbb
repz
xor
stc
dec
mov
xlat
jo
xorl
jae
mov
jb
ds
sbb
call
call
call
inc
jmp
pop
pop
inc
sub
xor
mov
ljmp
call
mov
call
xor
out
das
into
pop
pop
mov
call
mov
jo
js
dec
inc
jo
jmp
lcall
xchg
mov
pop
jbe
or
pop
arpl
popf
add
idivl
ret
call
call
mov
mov
sbb
adc
push
lods
and
adc
cmp
pop
into
cld
mov
iret
imul
pop
jnp
push
jnp
lret
aas
ret
dec
dec
or
inc
imul
adc
clc
xor
and
and
jb
out
mov
call
clc
test
call
call
add
clc
nop
lahf
sub
jbe
adc
pop
out
sub
cld
xor
nop
lock
mov
arpl
dec
xor
or
call
call
call
cmp
imul
push
in
add
and
mul
jo
loopne
sub
icebp
lahf
or
push
jge
pop
or
inc
fisttpl
and
shlb
std
pop
jl
inc
cltd
push
mov
jne
sti
mov
mov
hlt
pop
adc
cltd
push
dec
jg
jae
add
out
call
call
and
and
and
and
adc
stos
push
mov
and
call
call
rcpps
inc
fiaddl
out
fdivrs
dec
xor
call
call
call
das
in
xchg
add
pop
xor
mov
xchg
pop
lock
dec
and
cmc
cmc
mov
add
inc
mov
hlt
inc
dec
mov
aaa
je
ja
mov
mov
cmp
nop
or
inc
xor
and
cld
int3
lea
test
jns
xchg
std
cmp
cld
testl
call
decb
sub
sub
sbb
jno
mov
int
sbb
repnz
jno
ds
call
call
and
adc
adc
out
xor
mov
sub
pop
ret
imul
and
mov
call
call
add
sti
lret
pusha
dec
popf
push
mov
mov
adc
and
and
and
and
and
sbb
daa
rolb
add
push
cmp
shrb
pop
iret
push
daa
loopne
jae
into
fidivrs
call
call
call
adc
hlt
adc
add
call
call
jge
leave
js
lret
and
adcl
dec
mov
mov
aaa
xor
lds
int3
jno
out
lahf
sub
call
call
call
mov
cs
clc
lods
sub
in
adc
xchg
pop
imul
pop
and
lcall
ret
into
mov
daa
call
call
and
les
cs
ljmp
outsl
push
pop
sbbl
sub
sub
dec
addr16
push
jne
adc
mov
ret
and
es
and
stc
orb
divl
andb
scas
popa
pop
cmp
call
call
or
xchg
sarb
lret
daa
jnp
mov
and
out
add
xor
mov
push
jne
add
and
pop
imul
add
dec
pusha
inc
and
ficoml
inc
mov
call
call
add
push
negl
inc
and
jp
jge
scas
dec
adc
jb
add
pop
push
push
push
sarl
call
call
mov
mov
arpl
out
mov
xor
cmpsb
mov
mov
nop
daa
mov
pop
or
clc
mov
insb
and
xchg
push
std
xor
out
xor
jl
imul
rorb
jge
cld
cmp
call
call
call
mov
adc
mov
or
and
shl
aam
cmpsl
jl
cmp
jg
jmp
out
mov
stos
and
or
pushf
inc
xchg
out
decl
subl
xchg
sbb
xchg
call
call
jo
cwtl
xchg
orl
xlat
mov
push
pop
cmpsl
xchg
and
inc
lcall
or
cmpsl
arpl
inc
iret
adc
dec
jge
orb
loope
mull
mov
push
dec
xor
adc
dec
cmpsb
call
call
xchg
ret
sub
sbb
push
dec
fcomip
push
or
xchg
inc
orl
dec
sbb
or
jge
cwtl
xchg
and
daa
call
call
std
xor
mov
or
add
push
fucom
fstl
clc
add
test
ret
call
call
sbb
out
test
and
and
and
and
add
in
daa
pop
mov
push
xchg
add
lock
call
call
dec
push
sti
mov
aas
aaa
mov
rcrb
sub
loope
in
aas
adc
jp
push
lret
call
call
jecxz
frstor
mov
call
call
add
outsl
mov
xor
shlb
add
pop
and
and
and
and
and
xchg
cmpsb
iret
push
pop
jbe
sub
and
fidivrs
cmp
call
call
imul
imul
xchg
xor
fs
jg
popa
xor
movsb
push
icebp
sub
imul
mov
fisubrl
jae
mov
push
pop
cmp
js
aas
pop
jecxz
movsl
inc
loopne
cmp
icebp
or
cwtl
cmp
push
push
ss
xor
add
dec
stos
call
call
jecxz
fs
repz
outsl
mov
je
pop
and
stos
subb
jnp
or
movsb
out
in
pop
lret
adc
jmp
or
mov
dec
jne
push
pop
or
add
arpl
mov
daa
push
in
mov
call
call
xlat
jg
xchg
mov
ficoml
push
daa
outsb
js
push
pop
dec
call
call
mov
es
leave
insb
lea
jnp
ds
leave
or
call
call
ss
mov
mov
push
push
jne
xor
lods
pusha
jnp
sub
push
lea
lods
sbb
shrl
xchg
fucomp
call
imul
jno
cmc
jge
call
call
dec
fdiv
mov
and
jns
cmovb
and
add
inc
adc
jp
pop
xchg
push
cmp
pop
dec
cli
pushf
cmp
fistpl
les
call
call
call
in
in
and
and
and
and
and
and
mov
pop
aad
add
sub
mov
out
adc
fwait
and
xchg
aaa
or
add
mov
call
call
pop
jecxz
addr16
inc
in
and
lods
push
fmull
pop
jnp
stc
sub
pushf
rorb
call
call
mov
call
in
add
call
call
and
jae
fidivrl
push
xorb
adc
sub
jb
xchg
xor
xchg
mov
lds
add
mov
clc
mov
jae
push
sub
shlb
cld
cli
adc
jmp
jns
sub
jle
shrl
lds
or
daa
xor
call
call
or
orl
xor
imulb
sbb
mov
hlt
and
and
and
and
and
mov
inc
repz
pushf
js
or
jge
add
mov
mov
bound
nop
leave
cmp
call
call
jp
jno
bound
xchg
rcr
imul
stos
shrb
lods
adc
mov
push
jp
loopne
push
mov
or
call
call
sbb
push
pop
pop
rcl
dec
jnp
popf
xchg
add
cmp
jecxz
push
mov
inc
cmp
icebp
and
jno
sbb
and
cmp
aas
jmp
icebp
cmp
push
fsts
pop
mov
fs
js
call
call
dec
jmp
lea
mov
cli
loope
cld
and
and
and
and
inc
pop
js
add
cmp
adc
cmp
clc
out
push
bound
je
daa
xchg
dec
inc
mov
call
call
lret
das
ds
dec
orl
insb
push
mov
imul
push
lcall
test
push
mov
pop
sub
push
push
and
call
call
aad
push
fidivrs
sti
or
sti
sbb
lret
cmp
call
call
call
sbb
push
inc
sub
or
xor
das
and
and
and
and
inc
je
and
inc
stos
jle
pop
ret
cmp
xchg
popa
insl
jns
adc
iret
pop
arpl
in
test
repnz
and
movl
and
and
and
add
call
into
adc
dec
repnz
outsb
cmpsb
ja,pn
sarl
mov
push
out
outsl
insb
lock
cmpsb
shrb
sbb
popf
rorl
mov
xchg
adc
es
pushf
cmp
icebp
xchg
ds
call
mov
adc
outsb
movb
leave
lcall
mov
in
xor
jo
jno
adc
por
call
call
pop
rol
add
repnz
fimuls
pop
sbb
pop
movl
sahf
jecxz
sub
add
imul
push
fldt
out
adc
inc
and
or
je
sbb
and
call
call
call
sbb
mov
dec
fisttps
or
push
jae
xchg
movsb
out
jecxz
jp
enter
addl
call
call
pop
je
incb
xlat
mov
call
call
mov
mov
sub
push
rorb
push
pop
inc
inc
pcmpeqw
fwait
add
sub
scas
stos
inc
push
shlb
fadds
ss
sub
xor
call
call
jns
loop
xor
icebp
or
xchg
insl
aam
or
jns
xor
mov
inc
fdivs
xor
xor
push
call
call
pop
jb
adc
call
jne
push
test
aad
jns
jmp
sbb
jns
outsl
cmp
lret
jp
add
pop
aas
lea
out
cmp
movsl
cld
sbb
pop
je
aam
decb
call
call
call
popf
add
stc
fldt
jnp
aad
xor
ljmp
int
push
ds
jecxz
out
or
inc
and
xchg
mov
insl
stos
test
shll
into
adc
and
and
and
and
and
rorl
pop
sub
call
call
adc
push
in
add
stc
stos
call
call
and
and
and
inc
mov
inc
and
and
and
and
and
and
testl
aam
push
jae
fcmovnb
cmp
shll
pop
fldt
mov
jg
mov
call
call
mov
push
call
call
gs
adc
shl
aas
xor
ss
mov
push
jp
popa
push
ljmp
and
cwtl
fldl
inc
sub
sub
lock
insb
inc
xlat
dec
cli
data16
xchg
cmpsb
test
cs
js
pop
lret
inc
jb
pusha
insl
fildll
adc
dec
fdivl
call
call
call
call
add
popf
push
or
imul
mov
or
add
int3
dec
inc
cmp
nop
lahf
loopne
ljmp
call
call
mov
bound
mov
mov
leave
pop
inc
dec
mov
adc
into
add
lea
les
xchg
cs
movb
xor
sub
gs
jmp
sbb
mov
call
call
bnd
or
mov
daa
and
mov
dec
fst
out
adc
jl
dec
jmp
xor
arpl
mov
call
call
jo
or
xorl
dec
and
in
jp
in
notl
dec
lret
in
jg
mov
call
call
lods
adc
loop
adc
mov
divps
cmp
push
stc
iret
pop
inc
ljmp
push
addr16
jno
mov
pop
loopne
lret
lock
call
cmc
dec
and
push
test
jb
and
and
and
and
and
and
int
pop
fstl
call
call
ret
xor
push
inc
mov
movsb
xor
and
dec
add
std
cmp
pusha
cmp
mov
push
push
jle
mov
sbb
aam
push
dec
clc
fldt
loope
call
call
call
das
inc
fsubr
cltd
jno
push
aam
enter
das
mov
xchg
xor
addr16
rorb
xchg
pop
pop
iret
push
pop
imul
call
call
testl
mov
shll
call
call
fimuls
ret
push
sub
call
call
mov
or
imul
jge
or
pop
enter
repnz
pop
mov
xchg
cmp
adc
int
int
mov
ficoml
sbb
xchg
push
ljmp
fwait
lock
enter
out
lods
add
and
and
and
and
and
and
mov
cwtl
fs
daa
cmp
adc
sub
adc
call
call
imul
std
addl
cld
jp
into
dec
insl
xchg
jmp
push
mov
aam
inc
or
fdivs
jmp
les
lret
inc
daa
cmp
popf
loopne
push
cmp
bound
or
fcmove
or
adc
mov
xor
mulb
call
call
test
jge
mov
inc
call
call
or
push
les
jl
lea
mov
sarl
call
call
jnp
and
sub
jns
xor
fists
pop
adc
call
call
pop
das
repnz
adc
test
jge
cli
stc
jbe
cmp
je
arpl
movsb
movsb
adc
notl
divb
lcall
jl
call
call
mov
jne
in
push
sbb
inc
jg
js
cs
fs
ret
and
xchg
cmp
dec
push
and
das
jno
popf
mov
jo
jg
cmp
mov
test
call
addl
sbb
xor
mov
xchg
fisubrl
std
jl
sub
aas
mov
pop
inc
pop
adc
jecxz
and
and
and
and
and
cmp
and
and
and
xlat
inc
bound
ret
jg
pop
xchg
icebp
aas
pop
mov
dec
movsl
ja
aad
call
call
call
popa
mov
xor
gs
popw
call
pop
or
adc
dec
loop
push
in
sub
mov
call
call
dec
add
call
call
inc
notl
xchg
popf
jmp
stos
xchg
insb
inc
call
call
fmull
push
sbb
lcall
sbb
call
call
hlt
outsl
push
push
dec
jb
mov
sbb
jbe
push
add
out
pop
xlat
cltd
pop
je
mov
jbe
mov
inc
arpl
js
pop
sbbl
pop
cmp
mov
cmp
or
xlat
in
arpl
inc
movsb
pop
add
call
call
sarl
adc
call
call
or
push
lret
inc
xchg
pop
scas
fdivs
dec
out
icebp
les
and
or
mov
pop
int
cwtl
push
scas
fldln2
jbe
pop
out
lret
jecxz
call
call
or
dec
pop
arpl
add
fwait
inc
ja
cli
cs
jl
sbbl
xor
call
call
test
negb
pop
es
test
jns
ret
xchg
and
ret
roll
mov
pop
lods
fdivrs
daa
in
cmp
and
and
and
and
and
das
mov
call
call
dec
jae
sbb
inc
addr16
jne
and
push
mov
pushf
lock
mov
das
mov
jp
sub
sarl
cmp
pop
push
shll
pop
cwtl
int
add
dec
xchg
inc
inc
dec
divb
xor
call
call
call
lret
add
loope
outsb
xlat
adc
push
enter
mov
stc
cli
js
sbb
cwtl
inc
and
xor
sbb
xchg
pop
scas
gs
pusha
jmp
subb
add
into
ss
jg
mov
push
in
insl
mov
adc
and
add
jle
jo
push
add
call
call
call
xchg
and
and
and
call
call
call
call
dec
mov
push
int3
xor
call
call
insl
rol
cwtl
mov
xor
mov
cmc
aas
jmp
std
jnp
jnp
jl
jno
insl
rclb
mov
sub
sub
inc
data16
call
call
call
lods
xchg
filds
call
call
adc
or
push
rorl
and
and
and
and
and
push
add
insl
stos
add
xchg
and
mov
fiaddl
or
adc
jle
xchg
call
call
xchg
mov
dec
scas
ret
or
and
sub
pusha
xchg
ds
stos
jle
and
and
and
and
and
dec
pop
jmp
aaa
adc
rep
adc
pop
mov
lret
cmpsb
adc
or
outsl
test
cmpsl
dec
adc
call
call
add
push
out
gs
jl
in
dec
jg
dec
mov
or
addl
sarb
xor
sbb
dec
in
cwtl
ja
shll
shll
dec
mov
es
call
call
jle
push
cwtl
xchg
cmp
jbe
loop
pop
and
daa
pop
gs
mov
pop
or
pop
fisttps
call
call
adc
cmp
les
adc
jmp
push
out
les
pop
call
call
mov
rep
popa
push
fisttps
fildl
add
push
dec
ss
and
and
and
and
and
and
jge
call
call
call
pop
push
call
call
adc
push
push
add
push
push
jg
or
sbb
add
call
loopne
leave
scas
call
call
sub
call
call
push
aas
pop
icebp
mov
sahf
insl
cmpsl
int3
inc
cmp
dec
mov
call
call
call
push
push
adc
shl
ret
push
jge
lcall
lret
arpl
pop
add
lods
add
xchg
insb
std
and
call
call
call
daa
cmp
xor
imul
outsb
mov
rorl
and
cmpsl
lds
jnp
dec
push
js
push
outsl
daa
cwtl
roll
add
mov
push
hlt
ficoms
jne
add
dec
mov
sbb
inc
loop
stos
jg
fstps
push
inc
imul
call
call
call
inc
xor
rcr
and
in
mov
das
dec
in
jle
js
sahf
popa
mov
insl
cmp
mov
popa
pop
js
imul
sub
mov
dec
idivb
mov
scas
and
xchg
div
in
pop
jnp
mov
jecxz
popf
sbb
push
call
call
call
aas
int
jp
scas
adc
je
jge
add
push
outsb
pop
adc
cmp
push
or
mov
push
add
xchg
lahf
add
pusha
dec
push
mov
leave
mov
pusha
call
call
call
jae
push
test
and
and
and
and
and
and
and
and
les
cmp
fisttpll
std
mov
inc
inc
out
jp
out
xor
mov
call
call
call
ret
cmpsb
stc
mov
cltd
hlt
aad
mov
pop
fsub
cmp
jmp
sti
xchg
or
sub
add
push
dec
adc
mov
xchg
xchg
imul
shlb
ror
add
shrl
into
repz
xchg
mov
and
call
call
sti
test
mov
jp
lret
ficompl
out
cmc
sub
dec
pop
cmpsb
call
call
call
pop
out
sbb
shlb
sub
call
fnstsw
pop
xchg
sbb
hlt
xor
ret
mov
into
or
inc
ljmp
cwtl
mov
cmpsb
fs
aam
sbb
ss
int
daa
adc
mov
xchg
cli
inc
or
push
pusha
mov
insl
push
call
call
dec
popf
mov
xor
mov
in
dec
mull
aaa
in
mov
loop
jle
cmpsl
int3
pop
out
push
ljmp
call
adc
push
lods
clc
es
lods
call
call
test
dec
pop
mov
jns
jns
cltd
sarb
inc
cmp
fisttps
rcrl
dec
cmpsb
dec
add
mov
js
sub
out
mov
and
push
call
call
call
lcall
and
and
ret
push
icebp
les
pop
and
mov
xlat
cmp
dec
cmp
fcmovnb
es
dec
jmp
jae
in
jle
sbb
cmp
stos
push
loopne
inc
jl
daa
daa
jp
dec
mov
call
call
add
sbb
mov
outsl
loope
mov
lods
or
cld
nop
xor
cld
xchg
addr16
and
pushf
shll
push
lds
imul
pop
xor
loop
stc
jmp
and
aaa
fucomi
lret
sub
cltd
xor
xchg
jb
push
sub
pushf
int
leave
stos
push
inc
arpl
inc
and
pop
idivb
sub
xchg
int
ss
mov
or
call
call
test
and
gs
jg
push
and
mov
mov
popf
shrl
jno
shl
lods
enter
out
ljmp
gs
push
mov
in
mov
pop
in
jb
dec
xchg
cmp
arpl
and
and
and
push
insb
mov
xor
pusha
and
call
call
mov
jmp
sbb
test
call
call
xchg
dec
shll
push
jg
jns
add
sbb
std
cwtl
adc
jb
sub
pop
jns
push
mov
sbb
cmpsl
incl
mov
lods
mov
daa
sbb
call
call
call
fsubs
in
inc
mov
jecxz
sub
call
call
call
movsl
pop
les
cmpl
in
outsb
and
les
pcmpeqd
mov
adc
and
cmp
xchg
mov
daa
notl
pop
shrl
call
call
movsb
adc
mov
xor
lock
call
call
push
fldcw
shl
daa
lock
int3
outsl
clc
cmp
cmp
mov
mov
jns
mov
shrl
pop
mov
or
fisubs
cmpsb
lea
cwtl
mov
leavew
inc
cltd
sbbl
sbb
rcr
cli
lret
ds
mov
call
call
lea
xor
sbb
shrb
push
test
dec
mov
pop
test
and
and
and
and
and
and
pop
call
sti
jle
and
mov
push
fwait
xor
pushl
out
clc
mov
push
sbb
lods
push
push
jbe
cli
lret
or
call
call
xchg
mov
stc
insb
push
div
fldcw
jmp
loopne
push
adc
xor
inc
call
rorb
add
or
decl
call
call
call
sub
ljmp
popf
inc
es
subb
mov
sahf
mov
call
call
jne
pop
dec
test
nop
xchg
dec
add
insb
jb
in
sahf
call
imul
outsl
mov
lret
xchg
lcall
ds
mov
inc
icebp
hlt
push
or
addr16
icebp
les
and
and
and
and
mov
enter
or
call
dec
shrl
lea
ja
std
xor
daa
mov
call
call
call
and
sbb
mov
inc
pop
repnz
cmp
cli
xlat
or
call
call
inc
rorb
pop
test
add
loop
lods
mov
and
sbb
dec
lahf
cmovs
cmp
xchg
out
mov
adc
nop
sub
dec
fimull
xor
push
xchg
push
call
call
pop
inc
add
adc
pop
test
sbb
xor
sbb
sub
call
call
call
jge
call
call
test
xchg
or
and
imul
xchg
fistpll
aaa
push
push
es
sbb
xchg
lcall
ljmp
adc
call
call
call
dec
mov
push
or
dec
lods
fldcw
jbe
jo
ss
popa
push
in
cwtl
adc
sbb
cs
jb
add
cmp
loope
test
out
jmp
dec
cmpsb
fst
pushf
dec
lock
jbe
rclb
call
call
call
sub
mov
cmp
call
call
call
and
and
and
and
and
repz
jge
adc
fwait
push
cmp
adc
cmp
jno
and
call
call
lods
add
addl
jl
scas
das
dec
dec
data16
test
mov
xchg
jo
sbb
cli
xor
in
or
jbe
call
call
call
mov
js
out
test
xchg
and
cmpsl
lods
cmp
and
loope
push
lcall
aas
bound
lds
repz
gs
adc
icebp
mov
push
xchg
pop
call
call
call
adc
ds
push
push
xchg
cmp
into
adc
add
jecxz
mov
dec
add
jl
mov
adcb
stos
in
inc
bound
pop
imul
call
jge
fstp
mov
sbb
jmp
adc
pop
lds
mov
fstp
xchg
dec
mov
add
scas
inc
mov
fidivrl
cmp
adc
stos
adc
cmp
sahf
dec
fidivrs
aaa
mov
call
call
call
shrl
xor
adcb
jmp
jmp
mov
jo
jmp
fnstsw
mov
sti
fs
xor
ds
sbb
jbe
adc
mov
fs
xchg
xchg
mov
shrl
imul
xchg
fs
test
pop
aas
call
call
call
mov
pop
lea
call
call
call
call
data16
mov
jmp
pusha
rcrl
adc
xor
fmulp
shll
test
fsubr
out
leave
cwtl
adc
rolb
fldt
xchg
xor
nop
jne
call
call
sbb
jecxz
inc
fidivrl
fstpl
shll
aaa
int
jne
and
and
and
mov
aad
xchg
jae
sarl
add
call
call
bnd
add
test
cli
sub
stc
inc
pusha
xor
mov
arpl
imul
pusha
shlb
jb
pop
int
mov
mov
mov
scas
and
aas
pop
pop
push
sti
push
mov
test
bound
ja
jo
mov
ret
fcoml
pop
mov
mov
call
call
call
out
pop
sub
jecxz
or
insl
fnstsw
push
call
call
call
stos
xor
call
call
insb
icebp
sbbb
cs
bound
dec
js
into
in
aad
push
testl
add
je
jns
je
push
xor
dec
and
stos
xor
inc
call
call
call
sbb
jmp
jns
pusha
in
sti
pop
ss
gs
add
test
mov
cmp
nop
js
hlt
cmp
call
call
xor
popa
cmp
call
call
call
sub
stc
sbb
inc
outsb
or
add
mov
call
call
cmp
arpl
into
dec
xchg
mov
pop
push
push
jae
inc
xchg
or
xchg
call
call
call
push
mov
call
nop
in
rcrb
icebp
ljmp
imul
repnz
es
inc
push
sbb
add
call
call
call
mov
jge
fisttpl
jmp
mov
cmp
xor
sub
fnstcw
and
and
and
inc
and
vfnmsub132sd
sbb
lods
adc
mov
adc
push
jno
mov
mov
and
sbb
call
call
test
cmpsb
ret
repz
aad
mov
lahf
sbb
or
imul
jbe
jl
sub
adc
xor
fistps
daa
dec
fildll
mov
jecxz
xchg
rcr
addr16
mov
or
sti
sub
outsb
xor
call
call
call
leave
push
jmp
mov
lock
or
inc
hlt
jp
adc
lds
mov
add
jmp
test
or
sti
lret
dec
fbstp
fs
call
call
call
fs
mov
out
xchg
mov
sbb
dec
scas
push
push
incl
insb
dec
cmpb
and
ljmp
ret
ret
lods
push
lret
cli
mov
jl
dec
pop
mov
adc
call
call
adc
pusha
push
fnstenv
loope
in
mov
std
sahf
cmpsb
push
sub
popf
aaa
fiadds
cltd
jl
daa
cmp
fcom
pop
shl
loopne
jecxz
popa
mov
mov
call
call
les
ja
xchg
sahf
push
int
jbe
ret
cmp
cwtl
aaa
cmp
iret
inc
jl
mov
sbbl
in
jge
in
pop
push
loope
lds
mov
cmp
sahf
or
mov
fcompl
call
call
ja
out
adc
pop
xor
dec
ss
adcb
dec
out
xchg
push
stos
insb
call
call
popa
mov
pop
insb
cwtl
in
aad
and
inc
clc
in
pop
mov
and
and
and
and
dec
and
mov
sbb
in
push
add
mov
jmp
sarl
pop
push
add
sub
dec
shlb
call
outsl
shrl
lods
jae
out
pop
es
std
push
mov
call
call
call
call
call
inc
xor
into
pop
ret
push
lea
loope
add
adc
cmp
pop
test
testb
nop
mov
push
sar
push
mov
lcall
inc
mov
in
std
imulb
sub
sub
call
call
call
repz
out
aam
call
call
ror
aam
inc
push
lods
hlt
adc
adc
pop
sub
mov
push
lahf
test
push
fdivl
sub
nop
call
mov
or
pushf
js
sbb
add
push
call
call
call
outsl
lds
adc
sub
out
inc
xor
call
call
call
sbb
jp
adc
xor
in
iret
iret
sahf
sbb
mov
or
pop
nop
xor
cs
mov
lret
jnp
sbb
push
icebp
add
ljmp
call
call
push
in
push
ljmp
xor
adc
outsb
jne
aam
pushf
call
call
call
call
mov
nop
data16
nop
jnp
cwtl
mov
insb
test
into
add
jae
mov
ljmp
cltd
mov
cli
call
call
call
ret
lahf
cltd
push
xchg
jl
cmp
stos
xchg
cmpsl
dec
data16
xchg
shrb
scas
and
mov
mulb
fidivs
sahf
or
fcmovne
pop
xor
subb
and
and
and
and
and
and
and
and
ffree
in
outsl
adc
jmp
std
insl
sub
cltd
xor
call
je
imul
popf
out
loopne
fs
xchg
pop
stc
fstpt
xor
cmpsl
std
jge
shlb
or
mov
pop
mov
sbb
push
jb
loop
pop
or
cld
jl
dec
pusha
lods
inc
aas
std
fcmovnu
mov
xor
aam
mulb
in
mov
pop
call
call
call
ljmp
jle
icebp
lds
mov
int
mov
cmpsb
nop
call
call
call
call
loop
inc
fstl
out
aaa
rorb
fistl
test
lret
rolb
ss
hlt
dec
mov
mov
fsts
in
data16
push
mov
mov
push
dec
repnz
fnstenv
push
pop
insl
push
mov
jl
scas
or
push
loopne
sub
je
xchg
call
call
mov
xor
sbb
pop
mov
or
lret
jg
je
and
and
and
and
and
and
and
and
movsb
mov
test
in
pop
add
pushf
les
xchg
ja
pop
movb
push
mov
xchg
repz
call
icebp
into
xchg
pop
jne
call
test
and
and
and
and
and
pop
rolb
jecxz
nop
jbe
out
insl
scas
inc
dec
add
dec
in
mov
out
ja
hlt
pushf
stos
into
pop
cld
pop
lret
mov
call
call
push
dec
aam
out
adc
sub
subl
cwtl
mov
movsl
adc
or
jo
sarb
xchg
in
push
leave
mov
lock
and
push
sbb
decb
call
call
mov
jl
scas
imul
mov
test
sbb
inc
rolb
int3
mov
mov
push
mov
pop
cmp
call
in
loop
adc
push
sbb
add
xchg
cmp
adc
mov
push
mov
daa
lds
mov
dec
jbe,pn
lea
lcall
inc
hlt
cld
js
in
ja
icebp
jns
cmp
dec
push
shl
and
fucomi
call
call
call
mov
adc
cmc
push
adc
inc
arpl
dec
adc
arpl
dec
in
jo
dec
fsubr
ljmp
call
stos
push
hlt
and
push
mov
call
mov
mov
les
or
sti
call
call
call
xor
push
and
and
and
and
and
and
and
or
int
cmpsl
ret
mov
into
mov
mov
push
dec
cmp
jbe
mov
outsb
or
mov
movsb
incl
sbb
loope
push
push
cs
loope
dec
mov
out
fcoml
inc
addr16
ja
call
call
call
cmc
bound
xor
loope
push
xchg
inc
shlb
rorb
push
pop
push
push
in
mov
inc
push
jae
and
inc
mov
rorb
ret
mov
inc
loope
call
call
call
jnp
or
repnz
dec
cmpsl
stos
lds
adc
sbbl
call
sub
pop
lret
mov
call
aas
in
test
ret
cmp
push
mov
call
call
call
out
call
call
call
and
pop
ret
push
jl
cmp
cmp
lret
push
lcall
jp
movsl
pop
mov
sub
mov
adc
inc
aam
sub
test
jl
pop
clc
call
call
and
and
and
and
and
and
push
dec
data16
icebp
and
mov
fidivrl
fimull
jne
idivl
enter
test
mov
std
scas
push
jge
or
adc
adc
int
call
call
jg
or
addl
mov
into
xor
popa
mov
and
sbb
sbb
scas
cmp
jb
call
call
and
sub
xchg
sbbb
cmp
push
add
ljmp
mov
call
call
call
sbb
push
call
call
call
xchg
popa
xchg
repnz
pusha
mov
push
pushf
push
pop
cs
ret
push
xor
push
and
jl
jae
pop
mov
or
loopne
aaa
pop
inc
sarl
pop
out
jmp
call
call
pop
fnstsw
jns
out
pop
xchg
lahf
fisttpl
shrb
push
and
mov
and
jo
cwtl
fs
scas
addb
pop
or
dec
test
popa
in
sub
sbb
lods
add
mov
and
and
and
and
and
and
and
or
call
call
call
sub
pop
add
mov
inc
cmpsb
int
ss
lea
jle
in
jbe
call
call
insb
and
push
fs
xchg
in
or
mov
lds
pop
std
test
imul
jnp
mov
loopne
push
in
cmp
adc
pop
and
and
and
and
dec
shlb
divl
mov
pop
call
call
leave
das
inc
fimull
add
icebp
jle
jg
sub
sbb
test
add
dec
into
stc
test
adc
pop
das
call
call
lods
push
pop
add
clc
or
hlt
es
outsl
and
push
mov
into
pop
push
cwtl
dec
mov
out
aaa
cmc
outsl
shll
nop
pop
dec
callw
call
or
mov
jne
into
ljmp
shrl
or
inc
fiaddl
cwtl
imul
cmpsb
jle
or
push
xchg
pop
scas
call
call
inc
out
mov
and
insb
xor
mov
pop
sbb
movsb
mov
sbb
ficomps
mov
dec
je
fsubrp
movsb
add
xor
popa
sahf
pop
call
call
cli
pop
outsb
and
xchg
rcrb
push
enter
call
call
call
sub
jne
jg
jp
jo
insl
call
call
call
inc
xchg
testl
mov
rcrl
dec
and
call
call
sub
lret
xor
jns
inc
out
mov
push
sub
mov
popa
std
jl
test
sbb
addb
outsb
xor
sbb
mov
or
flds
les
push
lods
add
aad
push
cli
lcall
mov
call
call
call
sahf
sarl
mov
outsb
and
xchg
or
icebp
int3
or
or
ffreep
and
xor
ss
push
fs
adc
and
and
and
and
and
and
rcr
cmp
icebp
popl
stos
xlat
inc
into
mov
inc
aaa
adc
call
call
roll
push
pop
das
stos
jg
mov
rep
lds
jns
das
mov
xchg
push
inc
push
sar
ret
xor
push
xchg
pop
out
jl
out
push
jge
dec
mov
mov
hlt
outsb
fsubr
call
call
push
arpl
fstpl
das
xlat
and
xor
xor
cmp
cmp
cltd
popa
adc
repnz
push
in
bound
call
ficoml
sub
lahf
test
daa
xchg
inc
gs
lds
rcr
jecxz
mov
xor
adc
push
lcall
jno
push
pop
daa
stos
jg
idivl
pop
sub
insb
cmc
cmc
pop
or
lahf
lock
and
and
and
and
dec
out
enterw
into
cmpsb
fisttps
xchg
jns
adc
adc
call
and
gs
jg
std
cwtl
sbbl
call
call
and
or
dec
xchg
adcb
sub
and
jb
xor
inc
scas
push
inc
mov
adc
jmp
inc
push
jae
out
and
cmp
sub
mov
xorb
in
sub
lret
iret
jbe
aaa
push
aaa
push
push
lods
add
inc
call
call
loope
adc
cmp
mov
jo
and
mov
mov
xchg
outsb
sbb
fucomip
call
call
ja
push
fwait
pop
adc
test
test
sbb
cwtl
call
call
mov
in
lds
adc
scas
sbb
int
pop
or
dec
insb
filds
and
inc
pop
dec
xchg
pop
cs
jno
out
hlt
in
xorb
data16
js
xor
push
xor
jb
mov
adc
int
sbb
arpl
jno
call
call
adc
pop
cli
stos
add
mov
add
sarb
pop
add
sbb
mov
cmp
dec
cmp
dec
cmp
jb
mov
push
call
call
push
incb
inc
popa
and
popl
add
sbb
dec
mull
je
pop
sbb
cmp
cmpsb
jp
popf
jae
xchg
or
call
call
and
or
lcall
dec
xchg
and
sbb
xor
xor
and
and
and
je
sbb
add
add
addb
add
add
add
add
add
add
add
add
add
cmpsl
inc
add
add
add
add
add
add
add
add
add
add
add
cmpsb
inc
add
add
add
movsl
inc
add
add
add
add
xchg
movsl
inc
add
add
add
add
add
add
add
cld
movsb
inc
add
movsb
inc
add
add
inc
movsb
inc
add
add
xor
inc
add
add
and
inc
add
add
add
movsb
inc
add
add
add
movsb
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
inc
mov
add
add
add
add
movsb
add
add
jns
and
add
add
add
cmpsb
filds
add
add
add
add
add
add
add
cmp
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
in
call
add
add
add
add
mov
add
add
push
ficompl
and
pop
fisubrl
xor
adc
add
xor
incb
add
add
add
add
jo
inc
add
inc
add
add
add
add
add
add
add
add
add
add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
or
add
add
pop
and
add
add
add
add
test
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
rolb
add
add
add
xor
cmp
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
sub
push
add
add
add
imul
popa
add
add
sub
sub
and
push
add
insl
add
je
add
add
add
jne
add
add
outsl
add
imul
jb
sub
js
cmp
add
add
add
add
adc
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
jae
jbe
arpl
insl
add
outsb
add
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
test
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
sbb
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
insl
add
jbe
arpl
insl
add
outsb
add
add
js
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
scas
add
add
imul
popa
add
add
je
jne
add
outsl
add
add
add
inc
add
add
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
.byte
