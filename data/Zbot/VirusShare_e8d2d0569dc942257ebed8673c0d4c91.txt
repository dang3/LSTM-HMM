push
mov
sub
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
aam
sub
leave
adc
rorl
lods
pop
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
ret
sub
mov
mov
pusha
call
add
add
add
popf
movb
hlt
roll
cltd
inc
mov
scas
xor
pop
push
xchg
loopne
out
jle
lods
mov
cmp
popf
test
repz
jb
jmp
xor
adcb
push
and
addl
sub
cmp
sbbl
xor
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
inc
xor
xorl
dec
inc
std
inc
test
js
jae
lahf
lret
add
loope
divl
mov
push
mov
movsb
sbb
mov
push
mov
sub
push
pushl
push
push
call
add
pop
lea
pop
mov
ret
add
or
cmp
movsb
xchg
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
push
pop
pop
repz
daa
hlt
cmp
dec
mov
and
outsl
cmp
xchg
addl
mov
imul
sbb
sub
ret
or
lock
test
pop
push
jmp
mov
sub
push
push
push
push
pushl
call
add
pop
lea
pop
mov
ret
mov
inc
adc
cmc
fisttps
or
mov
sub
push
push
lea
push
lea
push
subl
lea
push
pushl
subl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
mov
mov
push
mov
addl
pop
push
pop
xor
lea
xor
push
popl
add
and
addl
clc
adc
pushl
lea
pop
repz
add
cmp
jne
mov
pop
ret
push
mov
sub
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
enter
jne
mov
sbb
in
sub
push
push
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
add
pop
or
cmp
lods
dec
mov
sub
inc
imul
inc
test
clc
insb
sbb
mov
rol
push
aad
and
inc
push
pop
push
pop
sub
lods
mov
mov
shl
lea
mov
mov
add
stos
mov
push
pop
cmp
je
sub
sub
je
sub
mov
add
mov
cmp
je
mov
sub
jne
lea
jge
popf
call
jmp
add
roll
insb
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
and
add
add
test
add
cwtl
and
add
add
cwtl
and
add
and
add
and
add
add
add
and
add
add
mov
and
add
and
add
add
cmp
add
out
and
add
and
add
and
add
add
add
and
add
add
lock
add
and
add
add
add
and
add
and
add
and
add
add
and
add
add
test
add
sub
add
add
add
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
and
add
add
test
add
cwtl
and
add
add
cwtl
and
add
and
add
and
add
add
add
and
add
add
mov
and
add
and
add
add
cmp
add
out
and
add
and
add
and
add
add
add
and
add
add
lock
add
and
add
add
add
insb
outsl
jae
dec
popa
outsb
fs
add
fs
outsl
outsb
jae
insb
gs
add
mov
push
gs
fs
outsl
outsb
jae
insb
gs
add
dec
add
insb
outsb
inc
add
add
je
je
jb
jne
dec
outsb
outsw
inc
add
add
imul
jb
je
arpl
imul
je
imul
push
add
sti
add
insb
gs
jae
dec
jne
gs
add
add
je
outsl
imul
jbe
jae
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
add
gs
inc
imul
gs
jo
jb
add
sbb
jb
push
inc
add
gs
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
fs
imul
add
mov
push
gs
fs
outsl
outsb
jae
insb
gs
add
aam
inc
gs
jb
jbe
push
jns
gs
add
jae
inc
jbe
outsb
je
add
add
outsb
fs
je
insl
push
add
add
insb
jae
gs
popa
insb
jne
add
push
dec
inc
dec
xor
cs
insb
add
push
add
insl
push
insb
jne
dec
imul
add
add
insl
push
insb
jne
dec
imul
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
insl
push
insb
jne
dec
imul
add
add
je
jo
jo
outsb
add
add
je
jo
jo
outsb
add
add
je
jo
jo
outsb
add
inc
inc
inc
push
push
cs
insb
add
inc
jb
ja
gs
outsl
jb
push
dec
add
outsb
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
jo
jb
push
push
outsl
push
inc
popa
je
add
insl
add
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
push
inc
inc
dec
push
cs
insb
add
add
add
add
xor
add
pop
add
orb
add
jo
add
mov
add
add
add
add
add
mov
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
inc
add
test
add
cmp
add
add
add
add
add
ja
add
add
add
add
add
add
add
add
add
xor
add
cwtl
roll
add
add
add
add
add
add
add
add
and
add
add
andb
add
imul
sub
add
movsl
movsb
pop
scas
scas
lods
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
lods
mov
mov
cltd
pop
xchg
xchg
xchg
or
jg
jl
jnp
stos
lods
lods
add
cmpsl
push
mov
mov
mov
leave
leave
lret
into
rcl
in
rcl
shl
ror
shl
into
into
int
leave
leave
repz
mov
mov
mov
mov
lods
lods
lea
cltd
lcall
add
add
add
push
add
add
add
add
add
add
add
add
mov
sahf
add
mov
mov
lret
not
rcl
cld
xlat
xlat
xlat
std
fcom
fdivr
fcom
fdivr
aad
rcl
sar
into
int
aam
ror
sar
ret
std
mov
mov
scas
iret
movsb
movsl
movsl
xchg
mov
xor
add
add
add
add
add
add
add
add
add
add
stos
lods
lods
add
lods
lods
sbb
mov
jnp
mov
mov
dec
lret
lret
call
ror
aad
fcomp
fcom
call
aam
dec
into
into
dec
into
int
aad
aam
into
int
inc
rol
mov
mov
lods
std
cmpsb
cmpsb
cmpsl
ljmp
pop
fs
or
add
add
add
add
add
pop
add
add
add
add
add
add
pop
pop
push
add
inc
add
push
add
or
inc
or
sbb
add
add
add
add
or
or
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
leave
dec
into
int3
call
rcl
call
xlat
call
fdivr
dec
int
dec
leave
lret
dec
into
into
inc
rol
mov
mov
jmp
mov
cltd
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
popa
or
push
bound
pop
fs
sbb
das
or
sbb
aaa
aaa
cmp
and
adc
add
add
add
add
add
mov
pop
mov
mov
mov
mov
mov
mov
inc
enter
iret
sar
aad
aad
aad
dec
rcl
dec
leave
inc
vcmpsd
mov
mov
ljmp
movsl
movsl
sahf
popf
sahf
xchg
xchg
xchg
lcall
addl
add
inc
add
add
add
add
add
add
add
add
add
adc
add
or
arpl
push
push
push
add
jno
jge
jge
jg
jle
jo
jo
popa
arpl
push
push
push
xchg
cmp
cmp
mov
outsl
outsb
jo
popa
bound
inc
inc
inc
xor
add
add
add
add
movsb
movsb
mov
inc
mov
mov
mov
mov
mov
mov
mov
dec
leave
dec
lret
lret
dec
leave
lret
leave
enter
ret
mov
mov
ljmp
mov
fwait
call
xchg
cwtl
xchg
cwtl
fwait
fwait
cltd
in
addl
push
push
prefetch
add
add
add
add
add
add
add
add
add
add
add
add
jo
jo
pop
pop
pop
or
jp
nop
fcoms
addl
jmp
jo
out
pushw
addr16
ret
jg
jp
jp
gs
inc
inc
cmp
sbb
sbb
prefetch
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsl
cmpsl
cmpsl
lcall
nop
incl
addb
xchg
xchg
xchg
sahf
sahf
sahf
sti
mov
cwtl
xchg
mov
js
js
xor
cs
add
add
add
add
add
add
add
add
add
add
mov
push
push
cmpl
mov
mov
incl
xchg
std
xchg
jg
jno
jo
jae
jae
jg
jg
addl
push
cmp
ss
es
jge
jg
cltd
fwait
cltd
lea
stos
icebp
stos
lods
lods
sti
lods
lods
stos
stos
lods
lods
stos
test
std
movsb
movsl
mov
xchg
xchg
xchg
decl
jle
js
jns
jp
jns
xchg
xchg
movsl
movsl
mov
sti
mov
mov
mov
mov
mov
lods
scas
stos
xchg
sbb
add
add
add
add
add
add
add
add
push
pop
adc
mov
mov
xchg
xchg
xchg
incl
test
mov
std
xchg
xchg
xchg
stc
xchg
xchg
xchg
in
mov
or
mov
mov
pop
pop
push
or
inc
inc
dec
insb
imul
xchg
cltd
cltd
lcall
cltd
cltd
stc
nop
nop
nop
std
mov
mov
mov
mov
nop
lcall
test
ljmp
mov
std
mov
mov
mov
std
mov
mov
mov
jnp
or
add
add
pop
pop
adc
scas
call
lcall
incl
xchg
xchg
xchg
xchg
sahf
sahf
popf
std
mov
mov
xchg
in
nop
nop
in
test
push
jne
push
or
inc
or
or
sub
dec
dec
outsw
jno
test
xchg
xchg
rclb
xchg
std
lea
nop
call
lahf
lahf
jmp
lods
pushl
movsl
scas
mov
xchg
test
std
les
mov
ljmp
sahf
adc
add
add
pop
pop
adc
mov
jmp
popf
xchg
pushf
decl
mov
xchg
nop
call
xchg
xchg
pushf
popf
sahf
movsb
movsb
mov
movsl
mov
xchg
fstpt
movsl
push
push
push
outsl
dec
dec
dec
popaw
popa
arpl
je
mov
lahf
test
mov
mov
xchg
testl
mov
jmp
lahf
pushl
push
mov
dec
xchg
mov
sub
mov
cmpsb
mov
mov
lods
stos
mov
movsb
movsb
add
mov
add
pop
adc
mov
ljmp
popf
decl
xchg
call
xchg
xchg
call
xchg
cltd
cltd
cltd
lcall
mov
movsb
movsl
stc
xchg
lcall
nop
xchg
xchg
les
xchg
lcall
lea
stc
xchg
test
std
xchg
jae
lcall
jmp
inc
jnp
mov
jnp
mov
jae
mov
outsb
ljmp
pcmpgtw
lods
or
ljmp
jge
mov
mov
lods
pushf
mov
mov
add
shll
adc
mov
ljmp
sahf
call
xchg
xchg
lcall
popf
pushf
lcall
sahf
popf
lcall
xchg
xchg
decl
xchg
xchg
call
xchg
fwait
cld
cwtl
xchg
pushf
stc
mov
xchg
sahf
cld
sahf
mov
xchg
insb
xchg
xchg
pop
jle
xchg
dec
jns
cltd
jbe,pt
lcall
sahf
sbb
mov
adc
test
ljmpw
ljmpw
adc
mov
imul
mov
cltd
scas
mov
scas
scas
scas
movsl
movsb
movsb
sub
movsb
movsb
movsl
add
pop
pop
adc
mov
lcall
xchg
xchg
lcall
lahf
sahf
jmp
movsl
mov
call
nop
decl
addl
js
fwait
jb
cltd
arpl
call
sub
pusha
call
or
call
add
fwait
add
sahf
pop
pop
ljmp
sbb
mov
outsl
pushl
push
outsl
mov
and
and
rcrb
mov
xchg
lods
mov
scas
lods
mov
mov
mov
add
add
add
mov
scas
add
pop
adc
lods
mov
shlb
sahf
sahf
popf
jmp
cmpsb
test
cmpsl
cmpsb
cmpsl
ljmp
cmpsb
cmpsb
lcall
orb
inc
jo
mov
imul
sub
mov
pusha
decl
or
push
incl
add
lea
push
call
add
cltd
add
sahf
add
or
mov
outsb
pushl
sub
mov
sub
inc
sub
jle
enter
enter
movl
mov
mov
lret
movsb
dec
mov
mov
add
add
add
lods
mov
push
adc
cmpsl
lods
ljmp
popf
jmp
test
ljmp
lods
pushl
scas
scas
jmp
jo
decl
push
pop
incl
pop
push
incl
push
incl
add
mov
push
decl
add
xchg
add
fwait
add
mov
add
scas
adc
mov
ss
cmp
dec
cmp
dec
cmp
call
cmp
xchg
dec
mov
std
mov
mov
mov
mov
mov
add
add
add
dec
dec
adc
mov
mov
lahf
fwait
popf
jmp
scas
scas
pushl
mov
pushl
mov
ljmp
jbe
decl
push
decl
adc
mov
push
incl
add
mov
push
decl
add
xchg
add
popf
add
mov
add
lods
add
pushl
cmp
dec
inc
call
inc
mov
rorb
fmuls
fmuls
fisttpll
fsts
call
test
std
mov
mov
mov
mov
mov
add
add
add
inc
dec
adc
jl
popf
mov
lcall
stos
test
pushl
mov
mov
mov
mov
scas
mov
movsb
mov
decl
sbb
call
push
pop
decl
or
mov
push
call
add
pushf
add
mov
add
test
pop
arpl
shlb
int
nop
call
push
cwtl
call
push
lcall
push
fwait
ficoms
fistps
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
jne
lahf
lahf
or
cwtl
xchg
xchg
add
inc
adc
ja
lahf
lcall
lahf
cltd
sahf
ljmp
mov
mov
mov
mov
mov
mov
ljmp
inc
je
xchg
pop
arpl
xchg
and
xchg
and
xchg
and
xchg
sbb
nop
or
nop
add
add
cltd
add
mov
add
lods
add
mov
gs
mov
xor
fcomps
fisubl
fbld
jmp
mov
jmp
cmpsl
jmp
cmpsl
jmp
cmpsw
call
test
mov
test
mov
lahf
mov
add
add
add
inc
inc
adc
jae
lcall
jmp
lods
scas
pushl
mov
mov
mov
mov
ljmp
push
cmp
sub
cltd
outsl
lcall
daa
imul
xchg
or
xchg
add
cltd
add
mov
add
lods
add
mov
pushl
adc
roll
jmp
outsb
lods
jmp
jno
call
jb
in
jne
in
jae
out
jne
in
jbe
out
jae
jmp
mov
mov
cmpsb
cmpsl
lcall
lahf
add
jle
ds
insl
js
lea
pushf
fwait
pushf
pushl
mov
mov
mov
mov
mov
cmpsb
scas
lcall
xor
mov
aaa
jne
sahf
xor
cltd
sbb
call
add
sahf
add
movsb
add
stos
add
mov
pushl
add
enter
fsts
jmp
ja
ljmp
in
xorb
icebp
cmpl
hlt
test
push
test
ljmp
inc
mov
test
daa
lahf
mov
sahf
add
add
add
pop
add
aaa
cmp
pop
pop
pop
jne
jge
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
rol
ret
pushl
insb
mov
lcall
jmp
ja
fwait
sbb
xchg
add
popf
add
add
add
scas
add
mov
gs
mov
add
shlb
mov
jmp
mov
push
mov
push
pop
push
nop
push
nop
ret
stc
xchg
pop
out
pop
clc
stos
lods
stos
mov
sahf
sahf
xor
sahf
add
add
add
inc
cmp
push
inc
dec
inc
jb
pop
dec
in
imul
mov
mov
mov
mov
sar
ret
ret
inc
ret
ret
mov
jge
lcall
dec
cmp
mov
maxps
fwait
add
mov
add
lods
add
mov
mov
add
leave
add
mov
out
mov
in
xchg
push
cltd
push
lcall
negl
lret
sahf
lret
sahf
into
sti
lahf
into
cli
lcall
fbstp
enter
mov
lahf
lahf
mov
add
add
add
xor
or
cmp
dec
jecxz
pusha
pusha
call
mov
mov
mov
mov
inc
inc
leave
enter
sar
mov
ljmp
mov
mov
push
pop
lcall
add
add
mov
arpl
mov
add
leave
add
rorb
fiadds
out
mov
push
movsl
int
cmc
movsl
into
clc
cmpsb
iret
sti
test
sar
cli
test
iret
std
stos
iret
std
cmpsl
sar
cmc
popf
jmp
mov
dec
leave
int3
std
mov
mov
mov
xchg
xchg
add
fwait
lcall
xor
daa
sub
or
bound
pop
xlat
je
jno
mov
rol
ret
mov
ret
mov
dec
mov
pushl
push
xchg
scas
push
mov
scas
dec
test
mov
add
jmp
add
mov
fs
mov
add
int3
add
add
loopne
jge
out
pop
cmpsb
push
sahf
lret
lods
sar
sti
scas
cld
mov
cli
mov
cld
mov
std
mov
cld
mov
cld
mov
mov
std
mov
push
cmpsb
mov
dec
leave
int
mov
mov
sahf
mov
xchg
or
add
add
xor
sbb
push
add
dec
dec
outsb
jo
mov
aad
fsubr
aad
not
rcl
std
lret
int3
int
leave
lret
leave
dec
leave
leave
dec
leave
lret
inc
mov
jmp
push
mov
lods
jg,pt
sahf
push
jmp
add
mov
fs
mov
add
rolb
outsb
fadds
je
fiadds
jae
call
jno
sti
scas
aad
std
mov
std
mov
fcos
std
mov
std
mov
fdivr
mov
xlat
stc
mov
jmp
mov
call
leave
int3
mov
mov
xchg
or
add
add
xor
add
pop
pop
pop
or
movb
loop
out
call
test
jecxz
leave
fucom
fdiv
xlat
cli
aam
std
into
ror
mov
imul
jmp
add
mov
popa
mov
add
leave
add
aad
jno
fldl
jne
in
ja
out
das
xchg
push
mov
cld
mov
loopne
std
loopne
std
loopne
inc
inc
inc
fdivrp
std
enter
enter
enter
lret
loopne
cld
mov
lret
lret
iret
mov
mov
xchg
adc
add
add
std
add
std
incl
std
add
div
or
out
jmp
in
out
out
sub
in
in
dec
call
ljmp
in
out
fcmovnu
fucomi
ret
stc
stos
outsl
xchg
cmpsl
cmp
movsb
push
jmp
ljmp
add
add
lds
imul
fadds
je
fiadds
jbe
ljmp
cli
mov
jecxz
cld
lret
jecxz
dec
in
dec
in
std
int
std
int
std
into
loope
std
iret
jecxz
std
shl
shl
std
shl
cli
out
mov
inc
out
test
cmpsb
mov
cwtl
cwtl
add
add
add
std
add
std
incb
idiv
clc
add
repnz
add
repz
push
out
icebp
out
pop
out
repnz
cmp
out
out
pop
fnstsw
loop
les
xchg
sti
sahf
es
sahf
push
pop
jmp
add
mov
gs
mov
add
roll
jno
fildl
je
jecxz
jp
in
push
pop
test
cld
shl
shl
std
shl
std
shr
shl
aad
call
call
std
fldl2t
std
fldl2t
cld
shl
push
ret
jmp
rcr
dec
lret
leave
repz
xchg
xchg
and
xchg
cwtl
add
cld
add
stc
add
sti
stc
add
div
or
aam
xor
mov
xchg
negb
add
test
pop
ljmp
add
les
addr16
add
roll
jo
fildl
jbe
out
jns
out
sbb
sti
ret
fdivrp
fsubr
fucomi
fldpi
fldl2t
fucomi
fucomp
std
fucomp
fsubr
std
fucomip
loopne
fsubrp
std
shl
push
ret
aad
out
iret
ror
clc
lods
lods
stos
lods
xchg
xchg
xchg
outsl
jo
add
add
mov
loope
add
mov
xchg
repnz
and
lahf
add
cmpsb
add
mov
mov
add
int
outsb
call
add
filds
jae
call
sub
std
aam
jmp
out
std
fucomi
std
fucompp
fucompp
fsub
std
in
cld
shl
sti
shl
sti
shl
push
into
fdivrp
stc
int
push
ret
out
mov
fcos
fcom
xlat
sti
mov
mov
fwait
lcall
fwait
fwait
fwait
add
xlat
add
rol
scas
mov
lcall
add
mov
arpl
mov
add
rolb
outsb
call
add
add
ljmp
cli
xchg
enter
loopne
cli
lret
loope
sti
stc
rcl
idivl
sar
icebp
mov
iret
in
mov
int3
jmp
rcl
call
shl
ljmp
in
mov
mov
xchg
add
add
add
into
int
mov
sarl
sahf
xor
jmp
add
mov
addr16
mov
add
into
or
rorl
je
fsts
jns
loop
cmp
call
scas
lret
ljmp
std
loopne
ret
cld
fisubrs
neg
mov
lret
vpmulhw
lret
fmulp
aad
loop
fadd
out
loope
jmp
jmp
popf
jmp
leave
leave
push
lods
stos
stos
adc
cmpsb
cmpsl
cmpsl
add
ret
mov
ret
mov
lods
aam
dec
jg
popf
sbb
test
push
lods
and
mov
ja
mov
dec
test
ret
push
stc
lret
test
mov
out
mov
mov
leave
lret
int
ror
lret
mov
iret
shll
xlat
rcl
jg
jb
loopne
gs
in
call
in
jmp
lock
sub
div
and
repnz
or
mov
int3
add
add
add
mov
inc
mov
test
lock
sbbl
sarb
test
mov
mov
cmpsl
mov
mov
leave
int3
jp
int3
shlb
ror
push
rcl
rorb
aad
rcr
xor
fcmovnbe
daa
fcomp
fcompl
fcmovu
fstl
fsubp
jecxz
loope
jecxz
call
lock
add
sti
cmc
add
std
sti
add
incl
incl
mov
mov
shrl
mov
mov
mov
mov
mov
mov
mov
mov
ret
kandw
leave
lds
into
lret
ror
and
aam
sbb
rclb
rcl
aam
aam
aad
rcr
fadds
add
in
add
in
jmp
add
std
incb
mov
mov
add
ret
ret
sub
mov
mov
push
rol
or
mov
add
int3
lret
add
aad
add
xlat
add
fcom
add
fcom
add
aam
add
xlat
loopne
fiaddl
loopne
loopne
loopne
in
out
icebp
lock
add
std
std
add
std
add
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarb
ret
lds
mov
mov
mov
test
stos
dec
test
xchg
xchg
pop
add
add
add
add
add
add
mov
mov
mov
mov
mov
enter
into
shr
aad
aam
rcl
sar
into
iret
into
cli
int
lret
stc
int3
int3
lret
hlt
mov
mov
iret
stos
lods
lods
fwait
xchg
xchg
xchg
dec
cmp
add
sbb
add
adc
add
push
add
add
cmpl
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
rol
mov
iret
aad
call
aad
dec
ror
dec
int
dec
int3
lret
mov
mov
lods
stos
lods
icebp
cwtl
cltd
cltd
mov
or
or
add
add
add
add
add
add
add
add
add
add
je
je
jae
jne
fs
inc
inc
inc
cmp
sub
sub
xor
dec
sub
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
ret
lret
rcl
sar
rcl
aam
lret
int3
lret
inc
rol
pushl
stos
test
popf
popf
popf
xchg
cwtl
cwtl
jmp
jno
xchg
adc
add
xor
add
add
add
add
cmpl
test
jnp
imul
pop
pop
pop
movsb
push
push
push
stos
imul
push
pop
pop
cmp
cmp
pop
outsl
outsl
jo
scas
scas
mov
mov
mov
mov
mov
mov
rol
mov
mov
mov
jmp
pushf
lcall
xchg
xchg
fwait
fwait
fwait
out
test
dec
movups
xor
add
and
add
adc
add
pop
lcall
pop
popf
xchg
cwtl
fcoml
addb
jl
jge
js
jp
jns
jns
jnp
jns
je
je
push
push
push
cmp
aaa
sahf
popf
popf
mov
scas
scas
rep
lods
lods
sti
scas
scas
lods
std
test
test
popf
sahf
pushf
call
xchg
call
mov
lods
jmp
scas
lods
leave
cmpsb
movsb
movsb
cltd
jae
jb
adc
adc
add
add
add
add
outsl
insl
insl
pop
mov
sahf
cltd
pushf
incl
mov
sti
xchg
xchg
xchg
lock
xchg
fimuls
mov
jp
pop
pop
inc
inc
inc
inc
dec
jo
outsb
orl
cwtl
repnz
xchg
xchg
std
mov
call
popf
sahf
ljmp
stos
mov
mov
mov
stc
mov
mov
movsl
movsb
movsl
pop
cmpb
pusha
pusha
pusha
or
scas
mov
movsl
lahf
mov
decl
mov
std
sahf
popf
lahf
sti
lahf
mov
cwtl
call
push
push
push
jo
pop
pop
outsl
insb
outsb
outsl
xchg
subl
mov
lcall
mov
pushl
pop
mov
mov
jge
mov
scas
lods
insl
test
add
add
add
add
pusha
or
mov
in
mov
xchg
call
cwtl
lcall
cltd
lcall
sahf
sahf
cli
xchg
xchg
xchg
jmp
xchg
mov
xchg
orb
xchg
insb
xchg
xchg
pop
jle
sahf
dec
jp
mov
xor
jae
mov
outsb
ljmp
sbb
mov
mov
mov
scas
scas
jle
mov
add
add
add
popa
pop
popa
or
mov
lcall
popf
sahf
jmp
lahf
lahf
call
mov
xchg
jnp
std
xchg
jb
cld
xchg
popa
test
xchg
dec
jns
cmp
xchg
daa
imul
xchg
adc
sahf
push
ljmp
sbb
mov
insl
pushl
pop
jae
mov
pop
mov
scas
lods
xchg
lahf
popf
sahf
adc
add
add
popa
pop
popa
or
stos
mov
stos
mov
mov
ljmp
cmpsl
test
decl
cmp
mov
decl
adc
or
mov
pop
call
add
or
jae
mov
jle,pn
lds
jge
enter
leave
xor
xchg
inc
test
scas
movsb
test
add
add
add
add
pop
or
movsl
test
ljmp
mov
pushl
mov
jmp
aas
jb
mov
pop
decl
or
add
push
call
add
sahf
add
movsl
add
mov
insb
inc
ss
inc
mov
iret
inc
call
inc
call
inc
xchg
fiaddl
call
arpl
stc
mov
mov
movsb
movsl
movsb
daa
std
add
add
add
pop
or
sahf
mov
ljmp
mov
mov
mov
stos
lcall
pop
call
pop
pop
decl
add
add
mov
add
lods
add
and
rorb
call
pop
lcall
pop
lahf
jmp
pop
mov
fisubrs
dec
test
cld
mov
mov
cmpsb
lods
cmpsl
xor
add
add
dec
pop
jge
jl
fwait
cwtl
cltd
jecxz
lahf
mov
pushl
mov
mov
jmp
sub
insl
call
push
pop
call
add
cmpsl
add
scas
add
mov
push
fisubl
jmp
insl
test
call
jb
in
jno
call
test
std
mov
cmpsl
test
add
add
add
dec
pop
insl
outsb
push
mov
cwtl
ljmp
mov
mov
mov
jbe
lcall
ja
popf
sub
xchg
or
lcall
add
lods
add
mov
fs
or
xchg
jmp
jp
jmp
test
push
xchg
push
mov
mov
cmpsl
test
fwait
fwait
cltd
add
sub
push
push
push
dec
pop
pushw
mov
mov
mov
rol
mov
xchg
jmp
sub
fwait
push
pop
jmp
add
mov
gs
mov
adc
jmp
popa
mov
push
xchg
push
cwtl
push
xchg
stc
cltd
lret
fwait
lret
xchg
lods
inc
mov
stos
popa
lahf
lahf
mov
add
xor
inc
pop
pop
pop
pop
fisttpl
mov
mov
rol
ret
ret
ret
inc
xchg
test
ljmp
pop
insb
jmp
add
mov
fs
mov
add
fsubs
cmp
jnp
push
mov
iret
clc
stos
iret
sti
test
iret
lods
sar
cli
test
jmp
mov
dec
rol
stos
stos
stos
jne
sahf
pushf
or
add
add
dec
dec
push
aaa
jae
jb
stos
stos
test
out
int
cmc
lret
lret
lret
sti
enter
leave
enter
mov
stos
popa
mov
lods
inc
cmp
adc
cmpsl
add
mov
gs
add
into
add
flds
xchg
push
xchg
mov
mov
cld
mov
xlat
std
mov
xlat
cld
mov
jmp
enter
repz
lods
lods
mov
add
add
add
add
or
rcl
dec
loope
jecxz
loopne
fistps
fcmovnu
fsubr
shlb
test
jb
cmpsb
push
pusha
ljmp
add
leave
add
add
jecxz
jp
lock
mov
std
inc
loope
inc
loope
std
enter
lret
dec
loopne
sti
fdivr
out
mov
lret
divb
pushf
sahf
sbb
add
add
std
std
add
std
add
jmp
or
in
in
sbb
in
jmp
call
in
xchg
mov
mov
mov
add
mov
inc
add
int
insl
fldl
jbe
call
insl
mov
std
ret
cld
iret
out
std
shl
shl
std
shl
aad
call
call
push
xlat
fcmovne
sar
mov
mov
add
incl
incl
std
cld
pop
aad
aam
mov
pop
xchg
popf
or
pop
pushl
add
roll
outsl
fiadds
ja
out
and
cld
shl
fldl2t
std
fucompp
xlat
call
sti
std
fsub
sti
aam
push
jmp
iret
sti
mov
lahf
lahf
das
add
add
int3
int3
int3
or
bound
lods
add
mov
add
aam
jae
loope
jns
in
xor
cli
int
stc
lret
test
aad
repz
lock
aam
in
aam
in
in
shl
jecxz
fsubrp
leave
mov
test
test
incl
aad
aam
mov
je
push
gs
mov
insb
inc
sbb
int3
and
aad
xchg
loopne
lcall
mov
out
jecxz
leave
jmp
fdivrl
leave
loopne
iret
mov
jecxz
fistpl
out
jmp
rorl
mov
add
stos
stos
stos
add
xchg
movsl
les
pop
xchg
mov
fidivrl
jg
rol
stos
mov
lahf
mov
shll
jge
aad
int
ror
iret
dec
fdivrs
fsubp
loopne
in
fisubs
jecxz
lock
in
jmp
fcmovu
fildl
incb
std
incl
mov
mov
outsb
scas
mov
lods
mov
push
mov
mov
xor
enter
rcl
rclb
rol
adc
rcl
or
loopne
or
into
int
stos
stos
lods
add
std
add
incb
lcall
pinsrw
or
into
int
add
incl
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
cltd
cltd
cltd
add
rol
enter
leave
enter
mov
mov
scas
scas
insb
stos
stos
stos
xor
or
add
push
add
add
add
add
add
add
add
add
add
add
lods
lods
stos
add
mov
jmp
aam
aad
rcl
sar
int
into
std
mov
stc
mov
mov
cmpsl
cmpsl
cmpsl
sarl
gs
push
push
add
add
add
add
add
add
add
add
jb
jno
data16
inc
dec
das
sub
inc
inc
and
add
add
mov
mov
cmpl
dec
into
into
call
rcl
dec
into
into
dec
mov
ljmp
lahf
lahf
sti
mov
xor
add
xor
add
sbb
je
je
xchg
adc
jo
ret
arpl
insl
outsl
outsl
jb
pusha
pusha
cmp
pop
sbb
mov
in
mov
mov
mov
lods
stos
lcall
xchg
lcall
cwtl
xchg
lds
jno
es
pop
add
add
jb
je
fwait
xchg
lcall
test
xchg
test
addb
push
dec
push
inc
mov
fwait
into
mov
mov
xchg
decb
mov
pushf
pushf
fwait
ljmp
mov
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorb
movsb
test
cld
mov
mov
xchg
xchg
xchg
cld
pushf
sahf
sahf
cmc
cltd
cltd
cltd
in
test
push
imul
jge
xchg
aam
lea
lcall
pushl
push
mov
stos
mov
stos
lods
lods
push
lods
lods
stos
add
add
add
test
lods
cld
xchg
xchg
xchg
lcall
lcall
cltd
cltd
cwtl
std
xchg
xchg
xchg
out
xchg
mov
loope
jne
out
xchg
fs
fwait
inc
jbe
cmpsb
ss
scas
sub
pushl
sbb
mov
jnp
mov
mov
imul
into
add
xchg
pop
scas
movsb
stos
test
sahf
sahf
popf
jmp
movsb
cmpsb
call
push
decl
inc
jae
mov
push
lea
popa
call
or
or
ljmp
and
mov
sub
lds
xchg
rcrl
subl
jne
push
mov
movsb
cmpsl
cld
test
test
mov
scas
pushl
xchg
decl
or
mov
push
decl
add
mov
adc
shlb
int3
aas
mov
rolb
call
inc
mov
aam
xchg
dec
cltd
mov
mov
mov
movsl
movsl
movsl
push
add
add
push
imul
movsb
mov
scas
pushl
mov
movsb
call
pop
arpl
sbb
mov
push
call
add
lods
add
mov
push
xchg
fstpl
loopne
mov
jmp
cmpsb
call
fwait
mov
mov
cmpsb
cmpsb
pop
add
add
popa
arpl
mov
pushf
cld
mov
scas
mov
mov
mov
popf
dec
jle
fwait
xor
lcall
jmp
add
mov
xor
jmp
jp
out
jl
out
jg
ficompl
mov
mov
add
add
dec
adc
push
cmp
mov
rol
mov
arpl
lcall
add
jmp
add
les
insb
fmull
in
mov
push
xchg
xchg
push
xchg
jmp
cmpsb
mov
movsb
sub
aas
aas
inc
adc
push
xchg
mov
cld
ret
inc
ret
ljmp
dec
cmp
sbb
cmpsb
add
mov
arpl
ret
add
emms
jmp
lods
push
cmpsl
iret
cli
lods
iret
cli
lods
sar
std
scas
sar
cld
lods
iret
in
mov
inc
mov
movsb
ds
incl
xor
xor
inc
scas
mov
mov
aad
aam
aam
rcl
shr
lret
cli
mov
mov
jmp
add
add
aad
jno
out
xchg
testl
inc
fdivr
std
rcr
inc
fcos
lock
shl
test
dec
addl
lods
add
jmp
or
jmp
out
outsb
fcmovu
mov
add
mov
add
add
out
aaa
xchg
cld
mov
cld
int
std
shl
call
out
call
out
std
shl
push
enter
into
in
lods
scas
lods
popa
addl
add
std
std
std
add
std
push
int
shrl
lahf
sbb
lods
add
mov
add
jecxz
jp
hlt
push
cmpsb
cld
enter
xlat
call
cld
aam
sti
aam
sti
aam
push
leave
fdivr
fmul
shl
mov
mov
xchg
xchg
xchg
pop
vfnmsub213ss
outsb
cld
lods
push
gs
mov
or
jg
ljmp
cli
out
mov
shl
call
shl
out
aad
ljmp
scas
push
cltd
cltd
lcall
add
add
rol
mov
stos
xchg
and
push
mov
shlb
lret
mov
mov
lret
adc
int
fmul
iret
pop
aad
jecxz
loopne
out
out
in
out
out
sbb
rol
add
mov
cmp
movsb
lods
arpl
mov
ret
cs
mov
lret
sbb
bswap
into
int
aam
push
std
add
std
incb
lods
incb
rol
add
std
add
incb
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
call
mov
rcll
sub
stos
inc
jl
into
gs
sub
out
and
or
je
sub
xchg
xchg
and
in
and
aaa
cmp
imul
mov
cmp
fidivrs
adc
rclb
cltd
xor
jne
test
xchg
xlat
fcom
insb
or
sbb
pop
dec
cmp
jl
adc
into
shrl
movb
je
and
sub
imul
xchg
mov
enter
sti
jmp
test
dec
cmp
subl
pop
mov
ret
in
cmc
loope
mov
dec
xor
imul
sti
mov
aas
in
xlat
sbbb
push
pop
cmc
aas
sub
adc
mov
xor
rcr
jae
pop
mov
xchg
push
pop
xlat
outsb
mov
scas
cmpsl
lods
cmc
mov
enter
add
xor
push
in
dec
push
xor
subl
movsb
push
out
mov
outsb
add
pop
dec
rcrb
add
push
movsl
stos
and
sub
js
hlt
movsb
pop
push
out
dec
jnp
adc
into
cltd
xor
pop
xor
dec
inc
mov
insl
lcall
mov
xchg
xchg
sub
or
test
sbb
mov
dec
in
or
outsl
push
inc
pusha
xchg
sub
mov
inc
in
stos
inc
flds
into
gs
fnstenv
pop
in
orl
adc
aam
pushf
xor
testb
pop
dec
test
outsl
scas
pushf
pop
lret
mov
push
jmp
xchg
pop
jo
mov
and
aaa
add
pop
mov
bound
test
inc
ficoml
pop
sub
dec
push
call
js
outsl
push
into
cltd
jbe
lret
out
lea
in
xchg
sub
inc
stos
push
mov
lods
arpl
pop
adc
loope
loopnew
adc
in
and
cmp
sub
mov
les
mov
pop
ret
repz
test
fs
inc
mov
mov
lock
and
enter
outsl
arpl
push
out
jl
lea
lret
adc
cld
scas
mov
loopne
xor
dec
add
xorb
mov
ret
lods
inc
cmc
cmpsb
daa
mov
dec
clc
inc
fsubrl
push
sbbl
sbbl
inc
out
lahf
and
fcoml
mov
cli
in
push
sbbb
call
mov
scas
insb
lods
mov
int3
mov
fists
adc
xchg
jno
arpl
es
aaa
into
sub
lods
inc
or
jge
lret
bound
jae
sarb
xorb
pop
sahf
add
inc
ja
and
fs
fisubl
leave
popa
clc
cli
or
dec
nop
daa
mov
mov
ret
hlt
xor
cli
gs
sbbl
lcall
scas
in
sub
push
pop
push
ss
jg
jb
pusha
push
jmp
sar
nop
add
jb
in
pop
scas
push
push
xchg
sub
ja
int3
test
scas
inc
mov
push
ljmp
jb
dec
jmp
xor
daa
mov
ret
hlt
movsb
daa
mov
inc
testb
imul
cli
jns
or
int3
push
sub
pop
popa
inc
fstl
mov
sti
in
add
stc
nop
sbb
cmp
lods
mov
int3
mov
ficoms
or
subb
cmpsb
pop
mov
or
sub
sub
outsb
jp
scas
inc
dec
cltd
inc
fcmove
outsl
sbbb
in
testl
jo
pop
repnz
xchg
add
rclb
mov
sbb
inc
gs
js
push
xor
movsl
cmp
push
xor
xor
shlb
movsb
cs
adc
es
and
cmpsl
jge
cmp
jae
xor
sub
out
cmp
sbb
jnp
shlb
das
mov
fcomi
xchg
es
jmp
adc
ds
nop
insb
les
test
mov
mov
push
fmul
pushw
jb
push
sub
pop
pusha
shl
mov
mov
jb
and
mov
and
test
shrb
push
mov
outsb
or
push
call
inc
and
stos
inc
adc
or
pop
repnz
fcmove
or
mov
inc
xor
shlb
ret
mov
dec
out
sub
pop
jecxz
inc
adc
cmpsl
ds
or
lds
inc
ficoms
data16
or
jne
cli
adc
aam
and
js
shll
into
add
xchg
sub
and
lret
dec
in
iret
ljmp
and
pop
cmc
clc
ret
or
pop
sub
ret
test
bnd
and
pop
sub
roll
repnz
fs
push
pop
shlb
repz
dec
in
xor
fs
repnz
inc
fstps
lds
lret
repnz
insl
in
fsubrs
cmp
ret
xor
icebp
mov
mov
aaa
fs
in
repnz
fdivl
aaa
nop
daa
mov
in
mov
test
arpl
mov
pop
mov
es
arpl
lock
mov
sub
fs
mov
xchg
bound
xchg
sub
out
and
imul
cmp
and
or
mov
pop
lock
popf
pop
aam
dec
or
ljmp
sub
jg
fistpl
jmp
dec
sub
cltd
pop
ficoml
or
sbbb
push
inc
fisttpl
dec
loope
fisubl
or
pop
cmc
repnz
and
add
or
push
repnz
inc
fistl
adc
repz
aas
pop
mov
jns
ret
call
push
dec
and
add
imul
or
sbbl
sbb
push
dec
out
push
in
sbb
or
mov
sbb
pop
icebp
sbb
or
cmp
addr16
and
pop
icebp
push
repnz
pop
cmp
sbb
or
or
lods
rcrl
inc
fcomps
std
fbstp
xor
addr16
mov
js
pop
mov
cltd
cmpsl
mov
adc
ds
push
xor
ljmp
jno
mov
lcall
call
add
jo
sbb
repz
push
or
testb
cmp
imul
scas
xchg
xchg
int3
and
mov
dec
xor
push
lea
lahf
mov
filds
or
imul
pop
pop
sbbl
lods
lods
sbb
add
sub
gs
push
inc
fmull
lods
icebp
mov
shrl
push
std
shrl
and
ja
jge
loop
test
lret
sti
push
dec
loopne
and
mov
int
pop
out
cld
push
insl
add
sbb
test
xor
inc
aas
jne
inc
xlat
dec
stos
shrl
aam
rorl
add
add
stos
xor
rcrl
pop
mov
push
pop
push
popf
cmp
or
fstpl
push
cmp
pop
push
xchg
jo
jnp
cmpxchg
xor
or
dec
jecxz
and
lcall
popf
xor
jge
inc
stos
xlat
outsb
cmc
ret
pushf
xor
sbb
mov
lea
mov
push
jmp
cmp
sbbl
lea
xchg
sub
cmp
ret
push
test
inc
fidivs
movsl
jno
rcll
movsb
cmp
icebp
test
jb
scas
inc
je
sbbl
call
pop
jbe
cmp
fldt
stc
adc
das
inc
rorb
push
push
fldl
cwtl
or
mov
mov
mov
fists
push
xor
fs
jne
pop
test
xorb
or
pop
daa
inc
fcoms
xchg
pop
cmpb
jno
enter
je
iret
or
pop
sbb
dec
jbe
dec
movsb
addr16
cwtl
clc
lea
mov
insb
insl
lcall
or
loope
lret
ret
xor
popa
jo
cmp
mov
sbb
ret
rolb
pop
out
out
and
jb
xor
shll
lods
test
inc
jns
lock
pusha
pop
sbbl
mov
cmp
xlat
xor
and
out
jg
jecxz
mov
es
mov
and
lock
xlat
jl
add
dec
or
insl
lahf
popf
push
nop
inc
call
enter
cmp
adc
out
arpl
divb
cmpsl
icebp
ja
jle
sahf
scas
lret
and
lret
js
dec
jbe
xor
fsts
sbb
fstps
mov
stos
mov
test
jbe
pushf
mov
aaa
jns
enter
dec
mov
insb
fmull
in
insb
ficomps
jecxz
dec
adc
xor
iret
es
inc
in
pop
cmp
icebp
mov
push
adc
and
and
clc
pop
add
out
xor
push
test
mov
mov
clc
sub
loope
inc
jne
jb
lea
pop
adc
stc
add
sub
lods
pop
jecxz
ljmp
pop
jb
fldt
repnz
andl
lock
adc
flds
test
pop
bound
dec
pop
push
iret
cmpsb
jge
xor
jo
and
xchg
xor
pop
mov
sub
sbb
rcrb
pop
push
dec
rcrb
dec
mov
mov
nop
aam
test
sbb
xchg
or
mov
push
int
add
rcll
inc
and
push
cmp
pop
inc
out
pop
mov
mov
int
les
or
xlat
in
imul
add
std
ret
imul
dec
add
dec
testb
push
xor
out
adc
dec
aaa
and
mov
sbb
les
aas
in
dec
mov
daa
shrb
test
push
jbe
push
xor
sbb
movsl
into
mov
cmp
pop
xor
pop
adc
and
cmp
inc
mov
sub
sbb
push
outsb
mov
mov
popf
or
mov
nop
ss
lcall
daa
and
mov
cltd
leave
ja
push
sbb
adc
cli
testb
in
test
pop
stos
sbb
dec
repz
push
inc
mov
mov
or
leave
mov
dec
fs
adc
dec
mov
jns
jns
lock
negl
xchg
inc
jmp
clc
jp
jp
jo
pop
xchg
mov
test
cmp
sub
push
ljmp
cmp
mov
and
mov
adc
jl
push
scas
movsl
xchg
sub
iret
fidivl
jbe
sub
test
mov
stos
inc
ret
fsubrs
mov
repz
scas
inc
out
ret
pop
leave
pusha
dec
pop
shlb
lock
sahf
adc
lea
daa
hlt
mov
pop
bnd
xchg
sub
adc
aas
dec
xchg
iret
imul
data16
lcall
sbb
and
inc
mov
cmp
test
mov
cmpsl
lods
test
das
rorl
repnz
pop
insl
sbb
ss
insl
sub
inc
hlt
mov
loopne
mov
add
inc
xlat
lods
sub
mov
pop
cmc
jbe
addr16
jl
mov
sub
and
rorl
cld
ljmp
pop
int3
mov
out
mov
jb
shrb
popf
cmpsb
cmp
xchg
xlat
les
mov
loop
adcl
push
lods
add
or
mov
das
addr16
lods
lahf
cmp
mov
aad
in
adcl
dec
lret
and
out
loope
mov
aad
xchg
scas
mov
pop
ror
mov
ljmp
scas
or
lcall
and
test
aas
sti
shlb
ficoms
cmc
pop
testl
push
sbb
fnstenv
cli
mov
mov
mov
lods
jp
hlt
mov
scas
adc
out
inc
fistl
jb
mov
lret
nop
daa
inc
xchg
adcb
addr16
xor
mull
cli
xchg
aam
fidivl
std
sbb
mov
push
lods
std
mov
adc
jbe
dec
mov
ljmp
jno
repnz
pop
lods
sbb
jbe
mov
xchg
js
int3
arpl
xchg
sbb
sbb
or
jo
data16
jge
push
jmp
xchg
test
sarl
jb
es
mov
ss
dec
rclb
mov
jne
ja
jb
push
std
xchg
jp
stc
nop
rclb
sahf
cmp
sub
and
out
pop
enter
jno
or
adc
std
test
jg
cmpsl
or
popf
xor
jge
movsl
mov
push
imul
test
fmull
or
es
push
sbbl
out
call
add
cld
and
stos
scas
je
dec
xchg
xor
xchg
scas
shrl
mov
repnz
insl
add
xchg
adc
pop
in
lds
dec
dec
jecxz
and
popa
mov
push
sub
mov
test
cmc
mov
scas
cmpsb
cmp
jne
les
lahf
xor
inc
and
jns
jo
out
mov
xchg
jecxz
jge
mov
pop
mov
fistpl
les
test
pop
fwait
in
add
mov
xchg
inc
es
mov
xlat
adc
mov
fsub
js
xchg
pop
cmc
add
xchg
arpl
jl
in
sbb
es
and
rclb
lods
inc
push
jp
lock
js
je
mov
push
int3
jo
xchg
cld
out
sub
push
sbb
lods
in
iret
push
vpunpckhbw
js
std
pop
adc
xchg
sbb
xchg
enter
mov
push
in
jle
xchg
jae
out
cli
xchg
loope
xchg
sub
sbb
pop
shll
into
data16
mov
int3
in
orl
sbbl
and
mov
mov
sub
rolb
repnz
loopne
arpl
gs
popa
mov
xchg
insb
mov
mov
frstor
rcr
loop
push
sbb
dec
xor
je
mull
sub
jne
pop
or
xchg
sub
xchg
mov
aam
lods
and
loope
dec
dec
xor
jp
call
add
sbb
pop
pop
or
mov
and
jo
lods
inc
push
cltd
jl
sbb
lret
xor
jg
inc
stos
inc
pop
int3
push
popf
adc
enter
and
bound
inc
fprem1
in
pushf
dec
sbb
sbbl
addr16
test
ret
mov
push
inc
mov
gs
cmpsl
ds
mov
andw
cmpsl
std
xchg
stc
mov
jp
adc
in
add
mov
fcomps
push
cmp
incb
push
pop
repz
xor
adc
mov
mov
cmp
mov
repnz
loope
addr16
insb
gs
call
mov
sbb
test
dec
cmp
lock
das
and
dec
loope
dec
dec
in
xchg
push
ret
jae
jmp
add
dec
insl
sbb
push
stos
xchg
imul
lock
cld
xchg
fs
push
movsl
xor
sub
test
dec
loope
dec
inc
fldl
punpckhwd
mov
push
out
cmpsl
xchg
int
outsb
add
and
sahf
xor
xchg
repnz
js
xchg
fidivl
add
xchg
jg
clc
into
xchg
push
mov
ljmp
sub
inc
dec
in
notl
mov
imul
fbstp
xlat
mov
push
insl
mov
ds
push
push
add
pop
xchg
sub
je
mov
sti
xchg
inc
pop
add
jo
pop
mov
cltd
daa
mov
jns
xor
push
xchg
pop
repz
out
icebp
jp
adc
jnp
ret
das
dec
jmp
xor
mov
aam
cs
aad
lods
dec
repnz
add
mov
fldcw
sbb
xor
jae
mov
xor
pop
stos
inc
test
enter
pushf
xor
aad
jge
add
fwait
cltd
jo
mov
mov
or
inc
fmuls
add
idivb
adc
popf
lret
lds
fwait
xor
popa
pop
cmc
inc
or
adc
jb
outsl
scas
das
lcall
cld
mov
stos
add
mov
cmp
aam
add
add
add
sub
sub
or
push
test
loope
scas
shrl
orl
xchg
les
ss
and
jmp
add
js
shlb
sbb
call
push
popa
push
movsl
cmp
inc
xchg
ret
adc
dec
loope
add
cmpb
xor
xchg
cs
daa
mov
mov
int3
lcall
ljmp
jno
add
mov
inc
jge
roll
lods
inc
mov
leave
lret
bound
fldl2t
addb
jne
fwait
sub
sahf
bound
mov
daa
cmp
cmp
jp
push
popa
clc
jbe
out
xchg
lahf
jg
in
push
movsl
jmp
sahf
xor
mov
rorl
pop
insl
fidivl
jg
adc
clc
or
xchg
cs
and
lds
aas
test
jecxz
ss
pop
hlt
push
repnz
jnp
push
lea
cmpsl
pop
sub
lds
ja
dec
inc
dec
jecxz
nop
aad
leave
icebp
jp
fsub
repz
negb
test
mov
pop
add
xchg
sub
ja
mov
in
andl
add
and
and
sub
repz
inc
fst
sbb
pop
push
repz
jmp
jns
jnp
jb
xor
ret
pop
mov
ja
mov
xchg
hlt
mov
sbb
test
cmpl
mov
or
rcr
lock
shll
ja
pop
push
pop
out
cmp
or
inc
push
mov
push
xchg
scas
out
xchg
mov
bound
adc
movsl
outsl
daa
jmp
ret
mov
rorb
into
mov
mov
sbb
outsl
push
xor
or
test
cmp
inc
mov
inc
in
xchg
mov
les
in
cmp
and
jae
xor
iret
cmpb
mov
sub
testb
or
fcoms
cmp
xor
mov
dec
xchg
loope
xlat
sbb
and
mov
and
fcoms
add
sbb
hlt
mov
jno
adc
mov
imul
fwait
xor
fcmovnb
pop
or
je
mov
fsts
sbb
xchg
xlat
in
mov
orl
icebp
inc
outsl
adc
outsl
std
jo
xor
push
dec
in
mov
mov
sbb
neg
sub
jg
cwtl
mov
pop
bound
or
insl
jo
jmp
das
jno
sub
leave
bound
xlat
cmc
std
xor
mov
shl
pusha
pop
sub
nop
pop
inc
mov
inc
shlb
jo
inc
push
dec
iret
sbb
mov
mov
xchg
xchg
notb
sbb
xor
lahf
dec
xchg
cmp
pop
pop
mov
fcomp
pushf
xchg
mul
loop
mov
xchg
mov
and
pop
xor
pop
adc
scas
scas
stos
mov
outsl
in
mov
push
dec
sbb
and
icebp
int
popf
dec
clc
xchg
testb
lret
movsb
into
cmp
pop
mov
mov
mov
loop
arpl
mov
leave
daa
in
test
cmp
add
inc
mov
scas
cmp
idiv
xchg
mov
jae
xor
mov
push
out
popf
xlat
or
in
add
fidivl
movsb
mov
sahf
mov
mov
test
sub
movsl
dec
addr16
mov
dec
popa
add
stos
loopne
int3
mov
adc
lcall
or
pmullw
insl
insb
jmp
mov
xchg
cmp
roll
push
int
cmp
faddp
fiadds
xorl
test
mov
rcll
jmp
fs
inc
mov
repz
add
dec
out
push
push
jg
test
push
mov
je
inc
jl
int3
adc
ret
test
daa
xchg
xorl
and
jecxz
stc
mov
pusha
xchg
movl
and
sub
inc
mov
out
je
addr16
jmp
and
andb
adc
stc
lods
std
adc
cmpl
aam
push
pop
sub
iret
aas
mov
hlt
pop
int
insl
les
dec
jns
inc
rcrl
ds
test
movzbl
adc
xchg
fneni(8087
andl
outsb
movsl
adc
xor
fcom
or
xor
mov
or
incl
cmc
popa
xchg
addr16
add
dec
sub
cmp
push
nop
iret
sbb
lret
xchg
fwait
mov
outsl
cmp
jnp
jmp
pop
test
dec
cltd
in
jne
adc
push
jbe
sbbb
and
loope
xchg
push
mov
in
fnstenv
add
add
iret
add
dec
xchg
cs
repz
les
jno
pop
adc
repz
cltd
cmp
lret
mov
mov
and
push
addb
ss
pop
push
or
fidivrl
push
mov
cmpsb
out
pop
lcall
add
mov
xor
pop
int
ljmp
out
cmc
mov
sub
pushf
and
cli
pop
imul
arpl
mov
mov
outsl
push
clc
mov
hlt
mov
mov
jne
mulb
pop
jne
or
test
push
cmpsb
les
mov
lea
mov
dec
jo
test
rcll
inc
push
xlat
dec
mov
and
ljmp
popa
fcompl
into
pusha
inc
dec
or
or
hlt
outsb
sbb
lcall
pop
int3
nop
push
dec
xchg
dec
sbb
and
call
jl
or
xchg
insb
pop
flds
xor
leave
inc
mov
sub
xchg
data16
push
repnz
dec
sbb
mov
jecxz
leave
push
push
push
mov
lret
and
jge
xor
add
jp,pt
fcoms
push
mov
in
dec
mov
inc
daa
mul
aaa
in
and
jmp
fwait
clc
data16
iret
push
jmp
sbbl
jg
dec
test
test
sub
pop
push
cmp
iret
mov
xor
xchg
pushf
xchg
enter
fldenv
push
outsl
push
ret
push
dec
xor
popa
pop
out
test
lds
testb
or
xor
sbb
push
cmp
aad
ret
mov
add
mov
insb
incl
jg
push
push
cmp
sub
fcompl
loop
xchg
add
cmp
enter
sahf
test
sub
sub
or
sbb
cmp
loopne
cs
xchg
cmp
int3
cltd
mov
insl
xlat
xor
jo
lea
iret
daa
repnz
mov
outsb
mov
sub
and
mov
pushl
fmull
jb
test
cmovae
or
icebp
mov
sbb
lret
cli
aam
mov
and
mov
mov
dec
daa
testb
sub
pusha
or
test
das
mov
push
sahf
imul
stos
add
iret
and
aaa
clc
and
in
dec
pusha
xchg
lea
sbb
and
fiadds
repnz
adc
test
loope
movsl
dec
sub
adc
and
loope
sbb
fnstenv
pop
jns
loope
aam
add
out
inc
movl
jno
mov
sbb
fmuls
fnstcw
adc
ret
rcrl
mov
mov
dec
pop
dec
lea
push
int3
cmp
aad
pop
rcrl
mov
sbb
ret
in
push
jb
cmp
imul
sbb
inc
mov
loope
movsl
fisubrl
out
add
xor
cmc
jne
cld
pop
jo
scas
lods
inc
xchg
rorb
inc
xchg
test
and
sti
mov
push
dec
jno
mov
dec
addr16
jl
mov
arpl
push
push
fcmovnbe
mov
std
push
je
lret
enter
mov
gs
shrl
mov
cs
testb
push
testb
stos
fmuls
xchg
xor
sbb
out
jne
jns
pop
push
pusha
inc
clc
loope
mov
repnz
push
and
xchg
mov
fcomps
adc
lds
mov
sar
inc
ljmp
xor
cmp
addr16
test
jnp
xor
and
sub
xor
lret
out
dec
pop
lret
aaa
inc
lock
in
jbe
mov
jp
xor
ds
sbb
stos
pop
or
cwtl
nop
push
in
add
arpl
pop
inc
enter
xchg
mov
daa
std
sub
xchg
mov
cmpsb
sbb
cmp
cli
dec
pop
pusha
xor
dec
and
inc
and
pop
bnd
or
lods
test
enter
sahf
xor
fwait
cmp
in
imul
insb
mov
test
sbb
push
pop
push
and
xchg
mov
adc
mov
dec
sub
mov
sbb
dec
mov
sub
xchg
xchg
add
fs
lret
mov
cmp
push
or
jne
lea
and
movsb
push
cmp
jp
lret
stos
jge
pop
icebp
loop
pop
cwtl
inc
mov
imul
decl
cmp
ss
lret
pop
aad
daa
mov
mov
xor
mov
mov
fisubrl
in
stos
dec
std
bound
es
mov
ret
push
xchg
and
jmp
inc
cmc
jbe
in
xchg
in
sub
mov
mov
mov
cli
xchg
enter
repnz
jnp
mov
scas
shlb
mov
mov
outsb
lods
inc
lcall
pop
clc
bound
jnp
clc
and
or
data16
fs
jmp
ds
test
mov
mov
adc
sub
push
pop
stos
and
mov
mov
in
cmpsb
xchg
inc
mulb
ret
jp
into
adc
sbb
divb
shrb
fwait
pusha
repz
sbb
cmpsb
push
in
inc
jo
mov
rorl
mov
fwait
sbb
clc
mov
sbb
inc
clc
rolb
je
out
loope
push
jl
faddl
or
mov
mov
mov
push
and
push
xor
movsl
cmpsl
cmp
adc
mulb
je
lods
das
sbb
arpl
daa
jecxz
cmp
fildl
repz
mov
cwtl
outsl
das
jecxz
scas
das
in
mov
cmp
outsl
jbe
roll
popf
xchg
add
sub
mov
jno
push
sbb
xor
and
bound
out
in
cli
pop
test
push
lods
ja
rol
mov
loope
inc
pushf
xor
dec
add
data16
ja
orl
incb
xor
ja
add
test
inc
test
xchg
loop
pusha
shlb
cmp
pop
xchg
lcall
das
gs
push
mov
rclb
or
out
movsl
jae
jbe
mov
cmp
cmp
in
ljmp
mov
loop
ja
or
or
pushf
and
cmp
aaa
je
adc
mov
ss
pop
jnp
lcall
lods
out
das
jno
cmp
jbe
sbb
inc
add
push
enter
cmpsb
insb
xor
scas
xchg
and
hlt
pop
cmc
ret
xchg
faddp
dec
sbb
or
or
js
push
icebp
rcll
lods
lret
lds
test
lods
pop
mov
daa
xchg
iret
sbb
mov
out
sub
sbb
xor
fstps
loope
adc
and
test
or
sbb
xlat
fs
insb
flds
std
aam
push
and
or
mov
sub
ret
mov
divb
dec
jb
in
mov
and
cld
cmp
or
pusha
mov
inc
sub
add
dec
cmp
push
mov
aaa
pop
pop
inc
xor
xorl
test
sub
lcall
push
stos
add
mov
outsb
in
repz
addr16
jmp
and
mov
mov
fcomip
adc
sub
or
inc
push
mov
aam
shrl
jle
or
push
pushf
aam
push
push
xchg
lods
xor
cmc
dec
fbld
loop
outsl
pop
xlat
inc
enter
leave
push
jbe
mov
mov
and
jno
pop
cs
inc
cmp
cwtl
add
sahf
sarl
xor
jno
sbb
lret
lret
psadbw
add
sbb
fadd
pop
movsb
mov
add
mov
mov
loopne
sbb
lret
ljmp
pusha
mov
xchg
pop
inc
xchg
sbb
add
push
repnz
dec
jns
pop
insl
je
mov
pop
jge
sbb
adc
push
rcll
cmp
and
nop
stc
out
pushl
add
push
lds
mov
mov
insl
xor
xchg
adc
and
std
xlat
xchg
push
sbb
icebp
or
les
call
xor
mov
xchg
and
inc
insb
pop
cmp
gs
inc
fsub
fistpl
jns
dec
xchg
ret
test
jge
jno
mov
mov
xchg
bound
lret
mov
dec
mov
orb
xchg
jbe
xor
es
jmp
cmpsl
xchg
ljmp
push
or
ret
lahf
inc
mov
mov
icebp
add
adc
jae
jbe
rcr
pop
push
or
pop
jbe
das
dec
es
in
sub
lcall
rcrb
mov
jg
xor
lcall
fs
xchg
xor
mov
rcl
pushf
inc
sub
punpcklbw
out
vpor
lock
adc
call
sub
sbb
and
sub
jo
cmc
not
and
cwtl
sbb
mov
fnsave
mov
jg
adc
cmp
sub
stos
mov
fnstsw
icebp
xchg
sahf
ret
aam
or
inc
outsl
outsl
jae
jp
int3
push
loop
adc
push
out
adc
repnz
aas
jmp
imul
sbb
es
xchg
push
push
dec
lea
cmpsl
mov
daa
add
outsb
das
lret
cltd
lcall
test
or
scas
xchg
or
or
xchg
lret
inc
inc
idivl
dec
cmpsb
js
push
adc
lret
inc
popf
lods
imul
xchg
sub
dec
cmpb
sahf
repz
aad
mov
ret
or
inc
enter
daa
shr
in
out
jecxz
xor
adc
insb
adc
lock
ss
cwtl
dec
pop
push
or
mov
sahf
inc
icebp
lods
adc
push
jns
push
and
shll
sarl
adc
adc
push
cs
lahf
sub
xchg
cltd
pop
hlt
hlt
repz
sbbl
test
aas
loope
mov
rcr
cmpsb
test
xchg
pop
xor
dec
jmp
sbbb
neg
pcmpgtw
cmp
sub
mov
and
mov
mov
sbb
pop
pusha
jno
cmpb
lock
push
sbb
mov
jp
jmp
jg
sbb
popf
insl
imul
call
jge
and
in
scas
push
addr16
cmp
lods
push
invd
mov
test
inc
cmpsl
jns
or
ret
pop
rcrl
cmpsl
lds
gs
in
dec
test
cwtl
jmp
fdivl
dec
jo
xchg
aaa
mulb
dec
repz
insb
and
lret
pop
xchg
mov
fwait
dec
mov
gs
pop
mov
or
outsb
add
and
pop
jge
or
into
mov
mov
cmp
mov
jae
jl
push
icebp
cli
mov
mov
jno
sti
popf
je
aam
dec
js
mov
mov
ret
push
sub
push
int3
lret
imul
and
adc
hlt
hlt
decl
cmp
pop
and
aaa
mov
and
hlt
xchg
icebp
and
int
mov
movsw
cmpsl
push
inc
imul
sub
and
mov
jecxz
test
mov
stc
cli
mov
rorb
mov
les
fisttps
dec
into
shl
imul
sub
jl
dec
and
es
mov
js
andl
imul
pushf
xor
stos
xchg
mov
stc
stc
mov
aas
aam
popf
mov
push
jl
xchg
test
outsb
mov
xchg
pop
cld
add
xchg
mov
pop
add
aam
jg
push
leave
dec
xchg
in
int
lret
lcall
pop
push
scas
xchg
daa
jmp
aas
inc
inc
je
ret
popf
adc
lahf
mov
mov
shrb
mov
in
stc
sarb
xlat
fldenv
jg
and
dec
clc
pop
mov
mov
jmp
inc
pusha
test
xor
sti
outsl
sahf
out
insb
movsb
inc
daa
mov
mov
push
lods
in
rorl
outsb
sbb
xchg
enter
enter
cmp
push
jno
push
xchg
bound
test
into
jmp
jp
lock
sar
loopne
pop
data16
fwait
shrb
stos
lods
data16
lds
mov
xor
imul
test
fdivp
fistl
shrl
adc
cwtl
inc
inc
aas
and
mov
fbstp
dec
hlt
cwtl
pop
push
add
in
out
sub
cli
mov
adc
pop
inc
loop
mov
mov
and
adc
int3
lds
lret
sbb
lahf
ljmp
fldl
mov
out
rol
addr16
repnz
cmp
test
and
inc
dec
fldenv
dec
cmpl
insl
repz
and
xor
cmp
das
out
sbb
mov
or
xlat
mov
insl
rcrb
push
jl,pn
stc
pop
cmp
test
xchg
pop
cltd
push
jge
add
xor
or
xor
lret
lret
mov
lea
add
frstor
and
dec
pusha
jns
cmp
dec
inc
jb
mov
imul
or
stos
add
cmp
nop
fsts
mov
xor
insl
out
aaa
xchg
mov
notl
lea
pop
add
sbb
mov
lret
or
loop
sub
adc
mov
and
add
cmc
mov
imul
shl
js
mov
test
cmp
inc
dec
sbb
jb
pusha
pop
imulb
fwait
pop
jns
mov
cltd
or
jne
shl
scas
xor
rolb
push
cmp
jnp
fsub
test
loop
xlat
xor
mov
repz
cli
sbb
insl
inc
push
into
popa
movsb
clc
add
cmp
das
jbe
iret
or
sti
loop
fistl
out
stc
cmpsb
mov
pop
in
in
push
or
lahf
and
and
sub
rcll
inc
adc
jns
fwait
clc
mov
or
ja
repz
cmp
cmp
and
or
icebp
fisttpl
sahf
ljmp
movsb
fsubrl
cmp
xchg
mov
inc
pop
mov
ficoml
sahf
adc
sub
fwait
xchg
mov
xchg
xchg
int3
das
pop
iret
movsb
xchg
jp
xchg
mov
mov
ss
sbb
sub
stos
ja
sbb
jb
jns
ljmp
fs
fs
cwtl
jle
push
jae
sub
aad
push
mov
xor
xor
inc
fcomp
cmp
or
pushf
dec
lods
iret
in
fsts
leave
or
mov
movsl
je
dec
inc
repnz
cmp
pop
sahf
inc
inc
shrl
cmpsb
jg
and
mov
and
and
test
xor
lret
sbb
jne
inc
fisubs
fsubl
mov
and
outsb
lods
rcl
push
push
jo
jbe
andb
shll
rcll
loopne
mov
sub
insb
rcrl
lock
sbb
aas
bound
pop
dec
insb
enter
icebp
loopne
movsb
mov
sbb
xor
pusha
loope
mov
cwtl
mov
mov
mov
xor
jne
idiv
xor
xor
dec
hlt
mov
jg
insl
in
pusha
mov
push
mov
pushw
inc
or
xor
ss
mov
add
ljmp
cmpsb
call
pop
inc
sarl
add
sbb
and
xchg
ret
cmp
cmc
and
mov
in
mov
lock
and
pop
jecxz
pusha
sti
loop
into
fisubs
scas
shlb
add
lds
repnz
fs
mov
cmpsl
jb
xchg
pminub
push
mov
xor
bound
std
shl
and
pop
cli
ret
mov
mov
mov
lret
dec
je
into
loop
mov
mov
adc
loop
or
xor
in
out
cmc
ret
jp
nop
in
adc
shl
adc
dec
loop
inc
arpl
mov
add
cmp
fcom
insl
sub
jnp
std
call
jne
mov
rolb
lret
inc
and
mov
leave
ret
hlt
je
fcoms
cmpb
out
add
xor
stc
out
pop
stos
lods
xor
aad
in
mov
jnp
xor
push
aad
xor
jb
push
movsb
mov
lret
outsl
scas
shlb
lea
cwtl
cld
lea
push
data16
or
outsb
out
std
dec
in
int3
pop
add
xchg
repnz
and
in
mov
xchg
jmp
cli
and
in
xor
leave
dec
push
mov
push
sbb
into
imul
push
hlt
neg
mov
lods
jp,pn
xchg
mov
jle
sbb
ds
jae
sbb
inc
pop
adc
bound
ja,pt
sub
dec
mov
in
out
je
in
sub
lahf
or
hlt
fiaddl
xor
inc
lret
mov
imul
xor
outsl
fsubrs
xchg
inc
jl
adc
and
movsl
les
clc
dec
sub
setle
aad
mov
adcl
fadds
xchg
xchg
test
mov
lods
mov
ret
sub
sbbb
jg
xchg
adc
test
inc
rorb
arpl
fucom
outsb
nop
leave
push
test
xchg
jno
jae
rol
sub
sub
add
out
cmp
pop
rclb
sbb
push
push
pop
sub
aad
jle
cmpsl
dec
sub
mov
jmp
lods
enter
add
jmp
dec
mov
sti
and
les
push
pop
pushf
mov
jmp
dec
icebp
dec
xchg
and
dec
je
test
pusha
or
lods
sub
insl
mov
jno
das
push
mov
fldl
mov
shll
cmp
mov
mov
cmp
add
out
daa
sbb
inc
mov
rcll
dec
push
inc
int
adc
push
adc
std
in
sbb
adc
jle
mov
sar
aad
iret
rolb
test
dec
subl
jo
test
scas
shlb
push
jnp
outsb
inc
in
sbb
or
out
lahf
fimull
push
push
add
arpl
stos
fdivp
out
data16
jecxz
push
test
xchg
loop
outsb
aas
in
push
inc
out
push
pop
mov
in
das
mov
cli
push
adc
fcom
xchg
not
mov
adc
adc
int
xor
arpl
pusha
and
scas
cs
js
call
aaa
sahf
jnp
scas
popf
addr16
rep
and
lret
sbb
mov
cwtl
cmp
sub
or
cs
cld
sub
dec
mov
cmp
test
xchg
mov
pop
adc
rcll
rorl
mov
mov
add
mov
and
int3
xchg
sahf
or
dec
subl
mov
enter
popa
es
fstpt
pop
mov
or
jg
or
add
orb
mov
insl
clc
test
in
mov
mov
decb
call
scas
es
push
mov
and
mov
std
xchg
jg
mov
pushf
shll
jnp
int3
mov
leave
sub
mov
mov
fstps
mov
stos
xchg
aas
add
in
out
sub
test
rol
outsl
sets
ja
sub
lret
dec
lret
je
xor
ret
pop
sbb
xor
xchg
cltd
int
pop
mov
inc
testb
add
shrb
in
hlt
jne
int
inc
jae
mov
xchg
fadds
std
sub
mov
adc
mov
cwtl
in
sbb
xor
sbb
cmp
cmc
push
mov
xor
imul
ja
mov
pop
inc
repnz
das
in
xchg
popa
mov
bound
push
cmp
sbb
inc
loope
fidivrs
jno
xchg
mov
xor
enter
insb
test
adc
daa
cli
mov
sbb
in
subl
pop
fmul
out
xchg
addr16
js
je
and
add
fcompl
out
xchg
jns
add
call
inc
aad
orb
outsb
stos
popa
gs
mov
test
andl
jae
inc
ss
cmp
jo
mov
sub
test
xlat
cmp
mov
cwtl
pop
test
mov
cltd
xchg
add
sub
jb
jbe
push
or
mov
into
das
push
xchg
push
loop
ret
cmp
arpl
insb
xchg
test
push
shll
mov
push
inc
or
or
cmovge
and
and
dec
jl
ret
test
mov
fadd
add
fidivl
hlt
call
lods
shr
jo
inc
cmp
mov
sbb
stc
adc
loope
mov
cmc
inc
and
fs
mov
scas
cmpsl
bound
int
jge
or
roll
out
in
cmp
mov
in
test
pop
inc
ficoms
clc
js
jmp
sar
out
adc
inc
cmp
les
icebp
push
shrl
cmpl
movsl
popa
jle
cmp
xor
and
inc
dec
fmuls
outsl
mov
ret
mov
insb
or
and
sbb
sbb
outsb
dec
sub
lcall
stos
xor
mov
or
setae
test
jbe
mov
pop
mov
sub
adc
pop
adc
sbb
xchg
pop
call
sbb
push
test
aas
dec
sbb
xchg
stos
inc
or
mov
test
xchg
mov
push
mov
pop
pop
orw
int
pop
pushf
jecxz
inc
sbb
hlt
adc
mov
into
popa
xor
aam
mov
pop
add
inc
lcall
or
or
or
ret
dec
out
adc
in
clc
sub
xchg
decb
cs
xchg
stos
in
mov
pushf
sub
cld
mov
mov
stos
jns
in
sub
mov
aad
fnstsw
test
insb
nop
lods
movsb
cltd
push
jae
xor
jb
lods
rcrb
aaa
aas
and
imul
shrl
les
cmp
mov
cli
mov
add
mov
sbb
subb
adcb
add
inc
sbb
pop
test
add
js
add
jecxz
mov
into
movsb
mov
push
inc
pop
in
fwait
mov
mov
xor
push
movsb
pop
or
add
inc
or
inc
aad
out
mov
inc
fdivrl
cmpsl
int
out
sarb
arpl
cltd
mov
mov
cwtl
outsl
in
scas
mov
test
dec
pop
enter
outsl
jl
inc
dec
dec
push
stc
jl
iret
cmpsl
mov
outsb
imul
mov
out
jle
sub
loope
mov
daa
and
std
fwait
clc
insb
dec
or
mov
out
adc
in
loope
adc
xor
push
pop
mov
ljmp
cmp
gs
push
push
fucomi
sub
insl
lcall
adc
cmp
pusha
jp
push
fbld
in
insl
inc
cmp
inc
sbb
mov
mulb
mov
cmp
cmp
add
add
pop
int3
and
push
cmpsb
sbb
mov
aaa
pushf
add
lea
pop
add
lcall
push
inc
xchg
jbe
cltd
pop
inc
and
lret
hlt
pusha
loopne
mov
out
es
xor
dec
and
shlb
and
out
jns
mov
cmp
test
or
cmp
cltd
cli
add
jecxz
das
sub
lods
popf
push
mov
mov
sahf
int3
out
hlt
dec
push
jg
add
fists
fistps
mov
inc
inc
movsl
add
sbb
hlt
pop
popf
mov
test
imul
enter
pop
lret
mov
xchg
xorb
fcmovu
andb
inc
push
call
imul
and
adc
jp
or
sbb
xor
jge
sbb
and
inc
mov
push
mov
pop
repnz
pop
push
and
lcall
addr16
jmp
dec
stos
in
xor
int
add
rclb
scas
cld
pop
sahf
jo
icebp
mov
and
in
jg
jae,pt
or
or
push
fwait
enter
dec
sub
ds
nop
jne
adc
adc
sub
add
stc
adc
ret
sub
inc
fisubrs
and
jbe
mov
add
das
push
in
and
arpl
je
out
lods
add
mov
mov
and
and
loopne
sbb
ja
pusha
into
mov
and
lret
insl
sti
iret
int3
test
dec
inc
int3
and
or
mov
cmc
fwait
add
scas
pop
and
mov
scas
jbe
xlat
cmpsl
rclb
leave
pop
cmc
cli
and
push
sbb
dec
jne
daa
cmpsl
outsb
pushf
xor
sarl
dec
adc
jno
outsb
in
test
rorl
jmp
das
movb
cmp
pop
pop
hlt
mov
add
loop
mov
cmp
xchg
sub
push
mov
mov
aam
in
adc
xchg
dec
or
xchg
imul
xchg
push
adc
call
or
cmp
dec
in
pop
jge
lea
add
cmpsb
xchg
fadds
mov
cmp
push
fidivl
dec
pop
jle
cld
xchg
ficompl
sbb
mov
inc
adc
rcrl
test
and
dec
loop
inc
cltd
xor
outsl
push
outsl
cltd
rcrl
xchg
sub
in
fidivl
in
inc
push
inc
add
jno
iret
imul
mov
fimuls
mov
push
mov
mov
fcoml
cld
push
xor
sbb
shrl
jp
cmp
mov
movsb
pop
and
jb
jl
lds
into
dec
jecxz
es
inc
and
pop
fs
pusha
sahf
jl
inc
cmpsb
mov
mov
add
mov
pop
push
inc
xlat
mov
inc
cmpsl
scas
xchg
sub
enter
cli
sbb
and
insl
add
inc
insl
jle
lea
lahf
jbe
leave
mov
push
in
adc
insl
outsb
pop
lds
test
pop
add
lds
dec
jle
js
cmpsb
cmp
ret
lret
repz
lods
sbb
outsb
add
stos
mov
fdivp
aam
inc
push
push
mov
jge
jno
out
jp
inc
movsb
lret
les
lds
popf
push
imul
dec
jno
sbb
int3
and
jbe
push
add
dec
jo
pop
stos
imul
hlt
mov
dec
lock
mov
test
lret
hlt
mov
js
adc
xchg
dec
outsl
mov
cltd
insl
stc
xchg
mov
pop
cmc
lock
sub
adc
mov
mov
ret
add
out
repz
sub
dec
popa
clc
ja
fs
xchg
cwtl
lea
mov
sbb
jecxz
ret
sbb
loope
dec
cmp
loopne
xchg
mov
lahf
mov
popf
xor
rolb
inc
dec
sub
sub
pushf
xor
mov
xor
or
jo
sub
push
push
pop
add
mov
gs
rcl
mov
repz
dec
and
mov
ret
or
cld
loop
add
push
add
addr16
test
in
ror
arpl
lods
inc
pop
pop
inc
fadds
mov
mov
pushf
and
daa
cmpl
adc
mov
add
sub
daa
and
jae
dec
mov
pushf
cmpsb
xchg
pusha
test
out
rcrl
dec
loopne
cmp
jl
stos
movsl
test
aam
fisttps
lahf
or
adc
push
jnp
mov
je
sti
lods
lds
dec
lea
pop
xchg
dec
sbb
stos
xchg
fs
jecxz
mov
push
in
shlb
cli
push
dec
in
sbb
cmp
pop
pop
cmc
andl
fs
and
xor
inc
dec
dec
in
movsb
cmp
ret
std
out
or
in
cmp
arpl
int
test
mov
fists
pop
adc
fs
insl
or
xchg
je
sub
in
rorb
or
xchg
sub
sub
push
xorb
lods
movsb
push
in
fmulp
xchg
cmp
dec
in
pop
xchg
sub
cmpsl
xchg
loopne,pn
into
gs
or
in
mov
in
stos
popf
xor
mov
add
cmc
mov
movsl
ss
pop
hlt
mov
add
mov
in
clc
popf
xor
or
xor
xor
fs
sahf
sbb
and
ljmp
xor
push
jns
xchg
xchg
stos
inc
lret
movsl
in
in
pop
hlt
push
push
jp
cmp
sub
bound
in
test
icebp
fstp
mov
or
int
sub
sbb
xor
dec
loope
xchg
dec
in
lret
popf
xor
in
jb
pop
pop
ret
pop
push
cmp
rep
xorl
into
inc
fisttpll
add
es
jmp
mov
rcrl
add
arpl
inc
and
pushf
xor
shll
hlt
sbb
hlt
inc
adc
xor
xchg
outsl
dec
jecxz
mov
xor
mov
xchg
sub
add
fs
sbb
test
cmp
cmpsl
dec
in
add
add
pop
sti
xchg
xchg
pop
stos
inc
mov
adc
mov
outsl
jmp
or
jle
bound
xchg
cltd
mov
inc
adc
push
cmovp
cmp
push
mov
ret
imull
mov
push
sti
mov
arpl
mov
outsl
into
adc
mov
outsl
dec
loope
cmp
arpl
dec
loop
add
add
fimuls
lahf
pop
pusha
push
mov
in
cmp
stos
add
pop
cmc
cli
push
cmpsl
mov
sbbl
fidivs
cmp
enter
dec
icebp
mov
fidivs
fwait
and
cltd
scas
lock
rcrb
mov
dec
pop
out
jle
inc
fstl
jge
int3
je
mulb
les
and
mov
push
fs
push
loop
push
pushf
push
lea
mov
push
adc
add
cs
fcompl
cmp
and
push
dec
fimuls
mov
jns
dec
repz
sub
sbb
mov
sub
xchg
mov
int
test
aas
loop
sub
push
mov
inc
jae
int3
push
mov
loop
sub
add
sub
mov
inc
xor
jns
inc
out
xchg
fs
out
push
sbb
xchg
xor
xor
bound
aam
mov
roll
lahf
adc
and
pop
inc
sbb
push
xchg
sub
mov
iret
imul
ss
xlat
imul
mov
xchg
xlat
xchg
xor
mov
ret
or
cmp
pop
mov
cld
stos
into
pop
xlat
adc
repz
stc
fisubrs
andl
dec
out
js
mov
push
in
xchg
decb
ds
cwtl
sbb
pushf
je
pop
mov
les
ret
adc
adc
and
cwtl
fs
push
movsl
mov
movb
rcrb
cmp
push
sbb
outsb
xor
mov
jle
pop
divb
outsb
dec
sbb
xchg
xor
mov
fucomi
mov
mov
sbb
daa
jnp
stos
xchg
pop
xchg
and
cmp
rcrl
sub
xor
cmpsl
push
and
sbbl
repnz
jne
push
std
cmp
push
sub
fs
shll
pop
fnstenv
int3
dec
out
cs
mov
xor
mov
mov
cmpsl
lret
or
repz
sahf
inc
imul
cmpsl
jg
scas
xchg
clc
scas
cmp
dec
pop
sub
xor
cs
dec
push
loope
movsb
mov
xor
cmp
scas
dec
sub
imul
outsb
adcl
and
sub
stc
mov
inc
push
repz
or
xchg
subl
rclb
add
shll
adc
pop
adc
sbb
neg
adc
dec
movlps
lcall
mov
test
sub
sahf
cmp
dec
cmpxchg
mov
jecxz
adc
and
lret
fs
insl
or
popf
pop
fnstenv
iret
dec
out
testb
pop
pop
mov
jae
mov
scas
mov
xchg
xlat
loope
add
adc
push
je
repnz
outsb
or
jecxz
inc
repz
sbb
add
shll
jbe
sbb
mov
lea
icebp
lock
mov
sbb
lcall
pop
jmp
or
cmp
inc
out
pop
inc
jns
addr16
cltd
lods
add
in
lcall
xor
mov
aad
popa
mov
cld
xchg
out
adcb
or
mov
jp
cmp
inc
int
inc
out
out
and
dec
loopne
inc
in
je
dec
out
xchg
shrb
mov
mov
sbb
xor
daa
cmp
inc
outsb
dec
inc
fdivrs
dec
jecxz
lcall
adc
std
xchg
and
sbb
mov
fildl
popf
or
pop
lock
and
push
inc
fnsave
rclb
fbstp
jmp
arpl
test
sbbl
sti
xlat
pop
testb
in
test
std
xchg
pop
insl
or
mov
sub
in
fdivrs
rorb
push
dec
fbstp
es
out
push
dec
data16
jns
jne
mov
mov
sub
or
mov
aam
rclb
aam
das
mov
jmp
test
lods
fsubs
mov
stc
cmp
mov
and
jle
insl
leave
in
test
into
gs
sarb
xor
dec
jecxz
push
sbb
jbe
sub
mov
xchg
mov
fsts
sbb
push
rcrl
xchg
sub
cmpsb
lahf
rclb
push
popf
add
leave
pusha
inc
and
stos
push
push
xor
mov
les
or
sbbb
fidivs
jge
jbe
pop
jnp
or
call
pop
sbb
mov
movsb
test
fisubl
and
sbb
xor
dec
cmp
push
xchg
jle
cwtl
sahf
mov
add
fcomi
xchg
cs
std
inc
ficompl
cmp
push
push
cmp
loopne
je
insb
mov
sar
xadd
cmpsb
mov
in
jbe
mov
cld
and
mov
mov
hlt
imul
mov
inc
jge
dec
test
inc
and
mov
lahf
roll
lods
shrl
hlt
adc
out
xor
sub
mov
cmp
xor
xchg
pop
add
insb
sub
sbb
out
jecxz
insl
mov
jbe
or
and
cs
les
mov
sbb
inc
xchg
shlb
adc
push
pop
test
data16
popf
xor
aam
push
movsl
repz
jb
cwtl
popa
push
xchg
sub
mov
xchg
icebp
inc
insl
add
mov
js
mov
cld
xchg
outsb
xor
pop
test
jno
lret
push
popf
insl
mov
adc
inc
fdivrl
rorl
mov
stc
stc
cmpsl
ds
jle
mov
ret
cmp
jl
mov
mov
lcall
and
fistpl
sarb
lods
inc
jl
stc
insl
jns
outsb
stos
popf
jp
lods
inc
push
dec
mov
jbe
jb
push
fs
out
pop
mov
cli
xchg
push
outsl
stc
nop
lahf
pop
and
mov
decl
aam
stc
out
incb
xor
jb
loope
push
call
bound
dec
xchg
xchg
in
mov
mov
leave
pusha
xor
mov
shlb
or
clc
xchg
nop
jbe
ret
add
mov
fs
aaa
mov
imul
in
sahf
fdivp
lea
mov
andb
dec
in
and
mov
cld
xlat
and
enter
lods
or
mov
pop
jg
mov
dec
jae
mov
cmp
mov
loope
aaa
es
xchg
fisubl
mov
mov
and
or
sbb
and
and
sbb
mov
xchg
fbstp
int3
and
mov
and
popa
mov
mov
jmp
and
adc
sbb
lret
aad
sbb
or
mov
hlt
jg
mov
jae
pop
movsl
jae
mov
push
sbb
cli
xchg
inc
fwait
or
cmp
mov
mov
or
stos
xchg
sbb
push
push
adc
push
xlat
sbb
dec
cli
adc
aaa
sbb
mov
shr
repnz
push
in
lods
pop
sbb
lds
adc
push
arpl
mov
sbb
dec
xchg
jl
or
fnstenv
mov
mov
je
scas
lcall
and
xchg
xchg
dec
icebp
mov
pop
hlt
leave
cli
and
jle
xor
mov
sahf
pop
not
insl
sbbl
xchg
imul
adc
ret
xchg
xor
inc
xlat
outsb
jae
add
sub
pop
cmc
fldt
inc
fimull
lret
mov
mov
jns
jo
xlat
outsb
mov
movsl
ret
pop
pop
mov
push
jecxz
nop
daa
dec
data16
pop
cltd
mov
xchg
std
pusha
shrl
add
push
add
gs
adc
mov
sub
sbbl
fimuls
pop
inc
cltd
jnp
lret
and
lea
xchg
ljmp
call
push
sbb
mov
lret
adc
std
mov
das
lods
xor
xchg
cmpsb
sub
lock
movsl
jns
pop
sbb
push
stc
nop
dec
or
ss
mov
std
mov
std
xchg
jb
jno
packsswb
test
dec
pop
scas
jle
decb
cli
inc
fsubrs
sbb
ljmp
test
xor
scas
movsl
cwtl
es
test
loop
mov
lods
dec
xchg
bound
inc
std
xchg
jae
cmp
xor
cmp
mov
fistpll
cmp
lret
cmp
stos
mov
sarb
push
mov
mov
jno
dec
in
stc
mov
scas
dec
lods
int
fimuls
testl
mov
cmp
push
add
push
popa
addr16
push
fistpll
mov
or
data16
pop
imull
pop
andb
mov
jae
imul
adc
scas
inc
clc
push
inc
fiaddl
fnstenv
xchg
fbstp
sub
subb
adc
sbb
mov
stos
daa
mov
dec
imul
lods
lahf
dec
out
sub
cli
insl
inc
call
or
das
jle
mov
mov
mov
mov
mov
cmpsb
cmp
jb
mov
jecxz
push
out
test
testb
mov
push
sub
sub
xor
pop
cmc
fnstcw
call
sub
jb
lret
fucom
jp
mov
orb
mov
loopne,pt
jno
lods
inc
sub
ljmp
lods
sbb
fstp
add
into
or
pop
out
mov
inc
sbbb
outsb
ret
pop
pusha
notb
push
mov
pop
jecxz
int3
arpl
shlb
dec
xchg
nop
cmp
sahf
stos
push
or
xchg
ds
pop
or
daa
xchg
pop
push
mov
sbbl
xchg
test
lds
aas
cmpsl
test
xchg
sbb
rcrb
mov
push
ja,pt
mov
add
mov
pop
cmc
inc
call
fsubrl
xor
popa
das
jecxz
mov
movsl
push
out
push
fimuls
arpl
mov
in
push
iret
into
add
pop
inc
xbegin
push
cmc
jg
mov
jmp
in
xchg
sub
dec
sbb
jb
inc
int
daa
mov
mov
scas
inc
lock
ja
jo
mov
jmp
arpl
aaa
dec
out
mov
lea
sahf
fbld
mov
sbb
adc
mov
sbb
divb
daa
mov
mov
repnz
es
push
popl
dec
inc
daa
mov
aas
cmp
add
test
xchg
cs
pop
ret
pop
dec
pop
rcrl
pop
mov
dec
shrl
cli
cld
xchg
in
stc
add
jbe
mov
scas
loop
cmp
push
gs
xlat
xchg
sbbb
xchg
jns
jmp
in
pop
neg
testb
xchg
scas
mov
mov
push
add
jb
jb
dec
es
pop
xor
das
pushf
lcall
dec
test
fwait
insb
add
dec
push
ljmp
ret
inc
stc
nop
jae
adc
sub
add
fistps
inc
fmulp
into
inc
fdivrl
mov
sbbl
xor
sub
test
mov
pop
dec
leavew
pusha
cltd
mov
mov
xchg
cli
add
mov
int3
arpl
dec
aaa
into
jg
inc
fstl
aam
and
stos
jae
faddl
movsl
cmp
jbe
sbb
scas
inc
mov
cmp
jo
mov
jmp
pop
push
sbbb
ficompl
sbb
lret
daa
mov
jmp
xor
mov
sbbl
addr16
xchg
xchg
loop
or
aad
adc
aam
ss
pop
test
ret
cmc
jl
adc
je
jb
insl
xchg
push
sahf
js
adc
imul
mov
cli
mov
in
loope
push
jmp
jg
lcall
jnp
shrb
roll
je
xchg
sub
repz
cmpsb
sub
fsubs
daa
pop
lahf
pop
repz
fwait
pop
lock
outsb
add
inc
cmp
icebp
cmc
jmp
pop
sbb
nop
daa
jmp
aam
or
gs
fmul
push
popf
sti
pop
mov
mov
gs
lds
cmp
or
loop
jecxz
jp
add
adc
mov
cmc
xchg
push
push
jg
jb
daa
mov
pop
sar
nop
add
cmpsb
cmp
jb
les
js
lods
test
scas
inc
fcmovnu
je
xchg
movsl
sbb
jmp
testl
mov
fwait
lock
adc
daa
lret
setns
inc
jp
jge
bound
sahf
std
mov
addr16
and
dec
or
xchg
insl
inc
fistpl
mov
cs
fisttpl
dec
out
popa
lahf
xor
jl
mov
and
pop
fsubrl
in
cmpsl
cmp
push
icebp
mov
scas
adc
rolb
leave
xor
push
push
out
mov
pop
mov
lods
jb
fildl
nop
sub
rcrl
or
xchg
jge
pop
cmpsl
shrl
jl
xor
sarb
cmpsb
jg
xlat
outsb
push
mov
cmc
mov
lret
sti
inc
imul
dec
xchg
xchg
leave
outsb
push
out
ljmp
rcr
scas
inc
unpckhps
std
test
mov
mov
sbb
jl
sbb
mov
sub
lret
sbb
in
jl
insl
insb
outsl
push
lahf
jo
in
popa
pop
cltd
xor
dec
stos
inc
jg
nop
daa
pop
sti
fnsave
mov
cmp
int
scas
pushf
icebp
mov
mov
and
push
ds
push
call
pop
hlt
add
xor
adc
add
cmp
add
stos
ret
pop
sbb
sahf
xor
push
and
xchg
notb
mov
inc
or
mov
mov
aad
mov
xchg
stc
push
jmp
sbb
fistl
xchg
xchg
sub
mov
ljmp
add
jb
loop
std
xchg
push
movsb
cmp
push
mov
test
aad
inc
loopne
je
jl
push
hlt
ljmp
mov
stc
nop
cmc
xchg
cs
cmp
jmp
in
jl
fidivs
sbbb
or
push
jle
xchg
sub
aam
dec
push
xor
aam
shl
repnz
sbb
jbe
xchg
xor
mov
mov
cltd
sti
in
ret
cmp
in
aam
hlt
add
les
cmc
clc
mov
or
and
shrl
adc
pop
inc
sub
aam
xor
mov
popf
out
add
test
cmpsl
xchg
das
mov
mov
dec
jecxz
cmp
ja
cld
xchg
int
cltd
xor
sub
out
cmpsb
stos
inc
fldz
sbbl
shl
test
aad
out
leave
sbb
mov
leave
cmpsb
cmp
mov
mov
sub
xor
inc
lods
jecxz
notb
add
clts
jecxz
rcl
mov
lahf
xlat
jbe
dec
test
gs
fsubrs
out
popa
ljmp
sbb
es
push
out
adcb
leave
sub
cli
adc
jno
jge
cmc
scas
mov
push
sub
push
xor
or
call
dec
andb
adc
je
in
aaa
xchg
divl
jg
jns
and
sti
push
sub
test
mov
repz
mov
add
andb
and
push
lds
aam
mov
sbb
popf
gs
decb
in
cmpsl
push
cmp
cmp
add
es
mul
jno
jno
adc
fisubl
mov
pop
in
mov
sub
xchg
sub
dec
adc
xchg
xchg
push
out
mov
inc
fmuls
adc
movsb
insl
pop
aas
mov
dec
loopne
aas
add
cs
jge
mov
lea
mov
mov
shrl
jle
fwait
cwtl
loope
lret
sbb
sub
and
and
mov
or
stc
pop
cwtl
call
pop
or
popf
xor
lret
lcall
jl
inc
scas
xchg
outsb
pop
or
js
sbb
cltd
dec
mov
cmp
in
jg
aas
in
lcall
inc
enter
fs
insb
xor
dec
in
cmpsl
lds
pusha
imul
pop
mov
dec
imul
rclb
pop
rep
test
in
sub
mov
out
in
in
inc
xlat
imul
push
rcrl
push
jmp
lret
test
mov
ror
mov
push
out
mov
ss
popa
clc
lods
daa
shrl
sub
fcompl
sub
stos
dec
fucomip
ret
lcall
cmpsl
cmp
sbb
or
jno
mov
or
stc
stos
inc
sub
lods
push
imul
lret
loopne
mov
mov
push
in
test
and
idivl
xor
out
pop
negb
out
insb
imul
int
xor
into
adc
inc
stos
mov
xlat
outsb
popa
xor
shll
out
sbb
adc
dec
xlat
inc
fmull
jg
sahf
jo
dec
out
adcl
stc
add
mov
mov
aam
cli
xor
xchg
jle
pop
adc
adc
push
xor
add
enter
cmpsb
cli
testl
nop
adc
xor
flds
insl
add
jmp
xchg
cs
outsl
rcrl
adc
pop
lock
popf
dec
adc
in
test
adc
cmp
shrl
mov
push
ljmp
iret
data16
push
nop
push
dec
in
push
leave
pusha
mov
sti
xchg
orb
sbb
or
icebp
aaa
into
and
add
clc
ret
mov
or
mov
movsl
cmp
and
rcll
add
sub
mov
and
xchg
lcall
mov
ret
enter
dec
jae
arpl
jae,pn
sbb
jne
fldt
enter
rcrb
inc
lret
dec
inc
addl
enter
scas
sbb
push
popf
aam
inc
pop
or
int3
shrl
popa
test
push
jns
pushf
stos
xchg
mov
pop
out
mov
loopne
cmp
dec
mulb
in
xrelease
in
ja
jmp
sub
mov
daa
mov
pop
cli
gs
jmp
in
push
stc
les
pop
testl
inc
sbb
xchg
mov
xor
jne
mov
aaa
into
das
insl
imul
scas
pop
jb
jl
mov
out
sti
stos
inc
sub
lods
fsubl
jge
movsl
outsb
cltd
incb
adc
pop
xchg
xchg
cltd
mov
aas
adc
jo
push
popf
jmp
sbb
jno
scas
adc
rcrb
lea
dec
jecxz
js
jge
jle,pt
jno
xor
pop
sub
xchg
sub
dec
push
inc
les
jno
cmc
bound
test
pop
ja
pop
mov
repnz
testb
stos
fidivs
xchg
montmul
cmpsb
les
int3
push
cmpl
mov
xchg
cs
aaa
dec
loop
inc
jp
aaa
loop
adc
aaa
push
in
test
xchg
pop
lods
mov
push
dec
les
fiaddl
lds
push
inc
ss
sarl
add
mov
test
jb
clc
stos
das
sbb
movsb
cmp
xor
lds
dec
test
xor
jno
mov
mov
dec
sub
aad
mov
dec
filds
imul
imul
fidivl
cmpsl
lods
inc
fnstcw
es
rcr
fnstenv
xchg
add
rolb
testb
call
lcall
fdivrl
xchg
loope
pop
sti
adc
addb
sti
xchg
push
cmp
imul
subl
add
add
out
out
loop
clc
and
xchg
jg
mov
cmp
mov
xchg
in
xor
push
cmpsl
fdivl
ficompl
or
adc
dec
lret
insb
add
outsl
jne
aas
cmpsl
cmp
mov
jnp
stos
adc
loop
fisttps
rorl
pop
push
in
rolb
push
sarb
shlb
add
mov
call
dec
and
test
xor
ret
dec
xchg
inc
jl
jnp
mov
cmpsb
mov
lds
xor
jecxz
push
cmc
push
call
jecxz
int3
fdivrs
or
mov
aad
push
insb
fisubs
scas
out
ret
ljmp
hlt
inc
add
mov
jmp
mov
adc
xor
daa
scas
es
rcll
jae
push
mov
push
cs
fidivs
adc
sbb
and
fisubrs
and
dec
or
cmp
sub
mov
rol
sti
adc
out
inc
out
mov
das
push
cmp
fistpl
mov
cmp
mov
pop
mov
sub
leave
mov
inc
mov
repnz
xor
test
sahf
dec
push
je
lods
inc
gs
lret
push
cmc
add
fisttps
pop
push
ljmp
cmp
mov
adc
sbb
add
pop
cwtl
inc
pop
push
ljmp
dec
cmp
add
and
mov
lret
dec
enter
xchg
jno
repz
or
mov
scas
or
hlt
push
cli
mov
sub
je
ja
jno
push
mov
in
pop
or
hlt
pop
lret
dec
lock
insb
xor
xor
movsb
jmp
adc
mov
adc
mov
decl
repz
mov
xor
add
mov
lea
mov
js
mov
lods
xor
sub
pop
lock
jnp
mov
mov
rolb
push
dec
cmp
mov
scas
xor
loope
repnz
loope
movsb
mov
xchg
push
rcrb
dec
push
addr16
aam
fmuls
push
ret
mov
ds
xchg
cmp
sub
xchg
testb
sahf
dec
out
fistpl
or
scas
adc
mov
or
addr16
sbb
test
aas
in
inc
jno
out
pop
add
repnz
and
xor
popa
leave
or
fnstsw
sbb
add
mov
bound
ja
adc
or
jne
xor
gs
inc
cmpl
bound
mov
cmp
outsl
sti
test
sub
std
es
pop
or
cmp
push
mov
divb
dec
lods
xor
imul
orb
xchg
fcoms
repnz
cs
addr16
add
movsb
inc
jl
sbb
push
lret
into
inc
inc
cwtl
aas
stos
sub
push
and
loop
mov
cld
test
mov
out
es
add
imul
cmp
addb
arpl
fcomi
inc
adc
mov
pop
daa
and
sub
and
dec
inc
out
aad
cmp
into
dec
sbb
xor
popf
jbe
aam
dec
outsb
cmp
repz
rorb
mov
lret
sbb
fsubrs
lcall
fidivrs
push
jmp
inc
pop
ret
mov
push
add
jnp
imul
adc
pop
idivl
adc
cs
dec
or
xor
and
sbb
adc
pop
mov
jnp
and
mov
clc
pop
and
out
mov
mov
aam
int
xchg
pop
rcrl
xlat
xor
and
cmc
flds
je
jmp
pop
sub
es
ds
xchg
ja
repz
pop
sub
mov
js
ror
and
or
adc
fwait
movsl
aam
stos
fstps
jmp
dec
adc
sub
lret
mov
mov
aad
shr
fwait
je
sub
mov
adc
push
mov
into
insl
test
test
dec
jecxz
mov
jl
mov
out
pop
adc
clc
add
jnp
scas
loope
test
fbld
lock
shrb
cs
mov
jno
es
adc
lock
js
jns
data16
mov
ret
dec
mov
xchg
sbb
f2xm1
jecxz
adc
stos
jbe
dec
inc
out
imul
int
roll
sarl
mov
pop
scas
xor
jae
lock
jecxz
sti
fidivrs
inc
add
loopne
sub
lods
pop
and
cli
in
mov
cmp
xchg
add
lea
mov
xchg
pop
rsm
out
andl
xchg
psubb
push
je
scas
push
arpl
fstpl
mov
jne
xchg
setnp
push
sub
dec
mov
pop
xchg
jg
outsb
mov
das
add
mov
mov
in
push
pop
jbe
notb
inc
mov
mov
test
fdivrl
out
iret
cld
or
jp
dec
sub
and
mov
pop
cwtl
pop
ss
mov
sub
mov
arpl
gs
test
in
push
mov
adc
add
pop
jecxz
korb
jge
xor
fmull
sbb
pop
ds
lahf
pop
sbb
pop
cwtl
je
adcb
inc
aad
xchg
push
and
pop
mov
call
or
cmp
push
ljmp
jo
push
mov
xor
jno
and
les
jne
push
enter
add
aam
frstor
out
lds
xbegin
adc
in
gs
js
xor
movsb
and
adc
test
cltd
inc
inc
mov
mov
aad
es
aad
adc
shrl
push
adc
movsl
stc
and
popf
in
cmc
les
jne
fildll
out
movsb
bound
xchg
ret
jge,pn
xchg
xor
cltd
mov
into
pop
imul
loop
sbb
xchg
shrb
ja,pn
lods
push
fldenv
jns
mov
aaa
stc
jns
xchg
mov
aam
pop
bound
or
dec
in
mov
test
hlt
sbb
adc
push
lret
pop
xor
xchg
cmc
and
or
test
push
std
add
pop
test
xor
imul
mov
add
test
mov
jge
xchg
mov
data16
mov
mov
mov
mov
pusha
mov
leave
divl
jns
das
xchg
sub
subb
xor
mov
inc
add
or
push
push
mov
mov
ljmp
repnz
enter
enter
stos
push
add
fisubl
pop
adc
lcall
mov
cmpsl
ja
js
andb
cmp
xchg
dec
mov
aaa
adc
dec
enter
and
cmp
mov
pop
pop
imul
mov
push
sbb
andb
cmpsl
xchg
rcr
shrb
add
or
es
jp
pusha
push
xor
ljmp
outsl
call
and
lret
and
adc
mov
hlt
ljmp
fisubrl
jp
mov
jb
dec
mov
stc
movsl
scas
push
in
mov
movsl
cmp
lods
push
jmp
sub
jo
xor
or
push
mov
iret
movsl
lods
inc
xlat
lock
inc
clc
lret
arpl
cmp
call
or
xchg
cmp
loop
and
mov
inc
add
and
inc
push
in
ja
cmp
sbb
pop
icebp
insb
in
xchg
sub
mov
mov
les
adc
pop
mov
xor
push
jno
cli
mov
lock
xlat
addr16
clc
bound
push
lods
mov
or
lret
push
stos
sub
or
mov
mov
test
push
or
cmp
sub
lcall
and
test
cmp
aas
stos
pop
mov
pop
std
lods
rcl
and
insl
push
sahf
mov
xchg
adc
mov
mov
test
fs
xchg
pop
or
cmp
sub
cmp
and
mov
mov
fistps
pop
test
mov
mov
push
in
inc
pop
pop
jb
sbb
lahf
notl
mov
aaa
pop
insb
fdivl
aaa
mov
nop
icebp
mov
jae
adc
scas
inc
xchg
pcmpgtw
int
xor
scas
popa
mov
jmp
add
add
pop
std
mov
in
push
mov
adc
hlt
mov
sbb
lret
sub
push
jo
add
or
xor
push
clc
cmpl
lahf
mov
jle
imul
popf
add
push
lods
lret
mov
fsts
or
jo
pop
aad
cmpsl
push
jg
and
pop
shrb
stos
and
push
js
jg
pop
mov
push
lret
push
popf
cld
jb
movsb
sbb
lds
inc
fisubl
shll
imul
pushf
adc
mov
data16
xor
inc
mov
pop
hlt
xchg
or
jb
mov
adc
pop
stc
nop
xchg
push
lcall
push
and
xor
push
inc
xlat
xchg
int3
arpl
test
mov
dec
cli
inc
fsubrl
pop
cmp
dec
pusha
idivl
xchg
inc
sahf
cltd
xor
pop
popf
xor
xor
mov
push
ret
out
xchg
fnstenv
and
xchg
fisttpl
cmp
cld
mov
out
and
xchg
bound
cmp
cmpb
clc
push
mov
pop
mov
xor
imul
stos
inc
mov
fidivrl
fs
adcb
cmp
ljmp
shl
fnstenv
adc
movsb
shrl
inc
xchg
sub
sbb
lret
mov
fucomp
or
xchg
sub
fidivs
push
stos
inc
je
cmp
je
fnsave
daa
mov
insl
daa
push
out
aaa
leave
pusha
fs
scas
inc
xchg
dec
or
xor
hlt
mov
enter
insb
add
data16
sub
cld
xchg
movsb
sbb
and
stos
dec
out
arpl
xchg
cmp
add
dec
iret
mov
push
loop
js
pop
sbb
out
out
mov
adc
xor
aam
popf
sub
jmp
cmp
outsl
push
mov
sbb
les
lret
inc
in
and
pop
push
test
jge
ljmp
dec
jge
fwait
xor
test
and
sbbb
mov
ret
mov
sbb
pop
push
jmp
call
jmp
cmp
sub
jmp
popf
xor
or
in
std
and
adc
push
movsb
in
push
pop
mov
mov
in
cs
jns
fisttps
scas
inc
jb
lahf
fists
xchg
sub
es
mov
enter
sub
popa
clc
cmc
dec
data16
cmp
and
dec
mov
xchg
or
dec
mov
in
sbb
stos
inc
ficomps
jge
lock
cmp
adc
iret
xchg
rcll
ja
pop
hlt
shrl
fs
popa
hlt
sbbl
inc
push
addb
mov
inc
cltd
jae
or
jge,pn
cwtl
das
sahf
and
cwtl
popa
mov
jnp
test
mov
mov
gs
adcl
dec
mov
std
sbbb
mov
incb
xor
sub
and
push
jmp
mov
imul
mov
pop
mov
fnsave
repnz
jnp
push
xchg
mov
in
lods
sbb
adc
dec
mov
jecxz
in
cs
mov
cmp
jg
pop
clc
pop
icebp
xor
cmp
int3
arpl
out
data16
sub
stos
inc
xchg
lods
test
mov
daa
cmp
ja
jns
pop
scas
into
stos
inc
shl
shll
adcb
dec
fcomip
cmc
scas
inc
out
pop
cmc
into
or
xchg
insb
add
cmp
mov
rcll
sbb
mov
mov
and
cli
pop
in
insb
in
test
pop
negb
daa
mov
sub
popa
clc
movsb
int
push
stc
vpcmpeqb
fdivs
lret
bound
dec
or
out
xor
imul
orb
popf
cmp
fiadds
aaa
jmp
adc
lret
mov
fsubl
int
mov
jge
imul
push
add
notb
xchg
out
xchg
mov
int3
mov
pop
daa
mov
sub
dec
shlb
repz
bound
push
enter
jne
out
xchg
shrl
xchg
fcoml
xor
push
xchg
lods
push
jmp
bound
std
xchg
mov
fdivl
rcrl
pop
push
in
pusha
xlat
mov
push
loop
sbb
or
push
jl
les
popf
mov
cmovp
jle
dec
out
sbb
ret
fiadds
or
and
loope
test
sti
xchg
in
andb
push
shrl
insb
ja
test
add
je
nop
daa
movsl
sbb
ds
mov
dec
loope
fsubs
leave
xchg
or
out
xchg
faddl
mov
out
arpl
cltd
adc
fnsave
pop
lock
movsl
cmp
xor
jnp
sub
jle
mov
fldt
and
in
rcrl
gs
scas
add
push
xchg
mov
inc
es
xchg
jecxz
sub
pop
lock
pop
cmp
pop
lds
adc
arpl
and
sub
lret
add
leave
pusha
aam
insl
scas
jno
into
test
in
ret
xor
jecxz
add
sbb
idivb
call
or
jnp
pusha
imul
pushf
es
mov
sub
cmp
mov
inc
cmp
lods
inc
pushf
cs
ds
dec
out
sti
mov
in
shlb
subl
or
outsl
cmpsl
cltd
jmp
in
enter
mov
mov
fucomi
test
jbe
mov
loopne
dec
in
add
cmpsb
xchg
in
addl
scas
inc
dec
daa
add
and
pop
dec
dec
out
mov
xlat
push
popa
out
test
pop
cmc
fdivs
andb
xchg
clc
pop
push
jmp
mov
sbb
jo
inc
xlat
sbb
xchg
sub
lea
loop
add
shr
add
pop
imul
in
pop
subl
idivl
test
sbb
jnp
cltd
xor
movsb
cmp
add
mov
ret
mov
push
jmp
aad
pop
mov
sarl
push
cmp
mov
mov
lds
lock
mov
sbbl
xor
jns
xchg
cmp
push
mov
ficompl
lret
inc
test
in
cmc
mov
sbb
cmp
jle
or
jge
test
sbb
xorl
stos
imul
fnstsw
fiadds
xchg
iret
adc
dec
lock
sahf
adc
mov
sbb
xchg
rclb
testl
mov
inc
fidivl
pop
mov
lea
xchg
push
and
sbb
dec
mov
xor
lea
je
dec
fnsave
xor
outsb
insb
fdivl
mov
mov
jecxz
push
mov
cltd
imul
dec
loop
sbb
cmp
and
popf
inc
xchg
idivb
mov
mov
pusha
daa
or
out
mov
pop
lds
or
jp
sbb
lahf
imul
adc
into
cmpsb
je
sub
fdivl
cltd
xchg
sub
pop
movsl
mov
dec
out
xchg
mov
dec
sub
lcall
mov
mov
adc
aad
xchg
jge
or
xchg
mov
xchg
dec
mov
shll
imul
cmp
add
sub
fwait
ljmp
testl
sbbl
fcmovnbe
push
mov
aas
fwait
test
push
arpl
fistl
sub
mov
dec
fnstsw
dec
jae
scas
adc
mov
push
pop
mov
mov
fisubrl
leave
jns
dec
leave
leave
pop
xchg
mov
cmpsl
repnz
pop
sti
les
pop
dec
addb
mov
pop
pop
cs
fnsave
mov
stos
adc
fistpll
cmpsl
outsl
jmp
stc
pop
mov
ja
push
ljmp
sbb
dec
aam
cmp
push
cld
pop
je
pusha
bnd
jmp
aas
push
cmp
xor
adc
push
mov
pop
add
clc
pop
adc
ds
lret
mov
imulb
loope
xor
dec
add
xor
dec
in
push
xchg
sub
test
inc
fimull
mov
inc
sti
int
sub
sub
mov
sub
andl
lcall
loope
pop
aam
mov
aaa
repz
int3
or
popf
inc
lret
sbb
pop
mov
xchg
cld
or
hlt
lahf
mov
sbb
or
out
xor
inc
aam
pop
loopne
sbb
xor
iret
mov
les
cmc
cmpsl
out
fsts
jne
dec
cli
add
sub
mov
out
sahf
inc
fmul
adc
addr16
lock
mulb
fs
test
mov
mov
or
ret
mov
loopne
cmp
outsb
insl
scas
addr16
fisttps
xchg
adc
xchg
xor
cmpsl
ret
test
mov
loopne
sub
insl
add
dec
xchg
subb
or
mov
jl
pop
xchg
loope
sahf
or
sub
pop
cmp
jae
aad
out
dec
dec
arpl
pop
pop
push
mov
jl
sub
inc
mov
int
add
dec
fsub
adcb
aaa
pop
jmp
aaa
daa
outsl
cli
mov
pop
mov
lcall
rcrb
fsubs
pusha
rorl
fs
aaa
and
push
lods
outsl
sbb
xchg
dec
nop
xor
shrl
lahf
loop
jmp
repnz
pop
adc
inc
xchg
or
fisubrl
jmp
lret
or
dec
ds
mov
shlb
roll
popf
add
out
test
and
or
fldcw
leave
pusha
idiv
stos
dec
loopne
sbb
dec
cld
addr16
sub
dec
test
ret
hlt
mov
fidivl
hlt
rcrl
clc
fwait
inc
fbstp
ljmp
cli
je
xchg
push
movsl
clc
insl
insl
add
sbb
icebp
imul
adc
std
in
insb
jns
sahf
push
pusha
idivl
mov
sahf
xor
inc
movsb
adc
xchg
notb
daa
mov
test
inc
mov
js
sub
cmp
pop
mov
or
loope
enter
es
imul
cli
dec
push
lock
sub
dec
push
cwtl
jbe
movsl
lahf
jle
clc
cmp
pop
inc
in
sub
inc
pop
ret
sbb
bound
adc
and
testl
mov
int3
rorb
pop
ficoml
scas
mov
push
cmpsb
sub
sub
addr16
cmp
dec
mov
cmp
inc
sub
lock
stos
sub
xchg
hlt
cmp
dec
fisttpll
or
js
jl
pop
imul
cli
sub
clc
or
lret
pop
xor
in
push
adc
cmp
nop
mov
sub
subb
mov
mov
cmp
into
xchg
add
loope
rolb
push
xchg
mov
out
pop
sub
arpl
push
cmp
dec
dec
or
mov
push
and
xchg
add
push
pusha
jno
add
rcll
mov
vcvttpd2dqx
mov
pop
jge
add
rorb
push
les
movsl
cmp
jno
ja
push
test
testl
and
xchg
push
jmp
lret
pop
stos
lods
cmp
insb
shlb
cli
ret
and
push
call
jno
test
mov
pushl
xor
sbb
mov
mov
shr
repnz
adc
cltd
cmovb
inc
mov
push
jmp
or
sbb
mov
sbb
pop
xchg
sub
mov
dec
in
mov
mov
clc
mov
ljmp
pop
lods
outsl
insl
add
into
fdivl
pop
ret
pop
xchg
push
lock
add
nop
daa
jmp
push
push
lock
sub
add
pop
idivb
mov
dec
xor
mov
test
and
or
sbb
hlt
repnz
repz
in
inc
sub
jg
inc
mov
adc
xchg
out
and
loopne
fwait
xor
jae
lahf
cmpsb
stc
nop
sbb
xor
jmp
jae
insb
sub
int
cli
test
fcmove
data16
popf
mov
add
ss
cmpsb
pop
mov
dec
cmp
cli
scas
mov
leave
sti
xor
movsl
addr16
fstpl
or
stos
push
xor
ja
pop
lock
or
lods
sbb
rcrb
stos
aad
cmp
sbb
xchg
stc
nop
lds
cmp
cmc
jae
xchg
movsb
push
pop
out
lds
sbb
jp
imul
mov
adc
sarb
rolb
sbb
push
popf
add
in
xchg
adc
inc
scas
cmc
pop
mov
out
jae
fs
dec
leave
mov
fldl
hlt
mov
jbe
in
stos
push
movsl
clc
push
lock
push
call
sub
dec
inc
jecxz
add
iret
popf
xor
ret
jb
je
loope
push
rcll
cmpsb
adc
mov
daa
sahf
in
mov
fiaddl
mov
sub
dec
mov
or
mov
mov
ljmp
je
inc
stos
dec
aas
or
pusha
loope
adcb
add
pop
mov
lds
fldt
lcall
int
pop
in
xchg
fisubrs
cmp
jecxz
jnp
add
subl
xchg
repnz
mov
dec
pop
inc
shlb
insl
iret
pop
push
test
movlps
xchg
pop
inc
in
or
and
xchg
mov
adcb
lds
xor
ljmp
push
call
lret
lds
mov
inc
sbb
pop
mov
adc
mov
push
mov
lahf
sbb
mov
xor
xchg
out
push
pusha
in
lds
test
ret
movsb
cmp
adc
int
cmc
stc
nop
int3
iret
xor
int3
in
push
ljmp
or
lret
cmc
mov
inc
ficompl
jl
mov
or
test
mov
push
xchg
cmp
mov
add
es
dec
icebp
push
out
imul
loopne
lods
lock
fnstsw
lock
inc
inc
xchg
pop
gs
inc
inc
inc
and
pop
jae
fimuls
mov
stos
jo
fpatan
int3
adcb
adc
mov
adc
dec
mov
fst
push
divb
sub
adc
or
test
cmc
cltd
xor
or
push
lret
jo
in
popa
lcall
les
mov
mov
fdivs
push
fsubrp
gs
mov
xor
mov
mull
data16
push
sarb
iret
add
jne
test
add
jnp
push
adc
mov
jle
loop
push
sub
icebp
push
push
aas
shlb
jns
push
stos
notl
scas
sub
add
sub
sbb
dec
cmp
mov
les
mov
fucom
jge
jge
cmp
int
mov
rcl
mov
cwtl
das
push
das
jbe
mov
nop
lret
xor
cmpsb
ror
arpl
cmp
sbb
mov
pop
adc
mov
dec
shrl
test
mov
or
mov
call
fcoml
inc
fistpl
xor
out
out
xor
mov
xchg
ljmp
mov
mov
pop
mov
icebp
iret
xchg
adc
lret
push
sbb
sub
sbb
pop
or
mov
std
xor
add
xor
popa
clc
pop
movsl
xchg
ret
int
xchg
mov
stc
jns
mov
jp
lahf
jae
cmpsl
mov
leave
xchg
jl
cmp
jb
das
mov
popf
xchg
lea
stos
insb
dec
in
jg
jae
mov
mov
xor
cwtl
sbb
shlb
add
loope
jle
cltd
enter
stc
add
cmc
adc
or
mov
imul
aad
insb
jnp
cmp
add
imul
bnd
xchg
imul
xchg
sub
xchg
int3
pop
ret
dec
pusha
in
jae
jo
daa
cmpsl
inc
stc
nop
jb
mov
or
pop
fwait
movsl
add
jmp
cmp
jle
lret
pop
lea
into
repz
lcall
jns
adc
dec
sbb
sub
fidivrs
mov
mov
icebp
out
xchg
hlt
and
cmpsl
sbb
repz
adc
inc
xchg
add
mov
push
je
push
pusha
jg
jg
and
pop
xchg
sbb
scas
add
mov
xor
imul
testl
test
jle
in
mov
xlat
js
inc
stos
clc
iret
jnp
test
movsb
mov
loopne
out
add
or
jns
xlat
add
es
addr16
movsl
ja
push
lock
scas
mov
inc
xchg
aas
sar
mov
xor
lahf
and
pop
pop
sub
push
in
and
adc
scas
scas
cs
jle
push
sahf
mov
push
enter
adc
negl
xchg
mov
scas
movsl
or
fdivl
aas
pop
pusha
sbb
inc
and
mov
adc
jl
addl
movl
inc
fimull
inc
mov
cs
cmp
inc
xor
push
pop
shrl
js
stc
dec
pop
iret
data16
dec
adc
jg
xor
mov
mov
cld
nop
lods
scas
mov
inc
xlat
adc
mov
mov
lahf
insb
lock
insb
loopne
orb
into
jo
jecxz
out
xchg
dec
jecxz
adc
aad
incl
jp
pushf
sub
xor
mov
test
mov
cltd
mov
xchg
push
mov
sbb
cmpsl
sbb
cmp
sahf
push
call
mov
lock
cmpsb
nop
dec
jecxz
dec
mov
stc
xchg
adc
imul
aam
popf
movsl
inc
leave
mov
mov
ss
add
jne
push
jb
nop
mov
jbe
inc
cmp
xchg
xor
es
icebp
pop
pop
jp
dec
lods
bound
xchg
lret
mov
loopne
add
and
cmpsl
push
insb
leave
sahf
mov
shrb
adcb
mov
xorl
ret
dec
jge
mov
xor
jge
xor
xor
xchg
inc
cmp
push
adc
add
add
sbb
cmpb
cwtl
in
add
xchg
aas
adc
xchg
dec
push
adc
aaa
push
pop
stos
movsl
sub
das
sub
dec
xchg
mov
in
sbb
mov
popf
pop
mov
negl
out
mov
sbb
ljmp
lret
mov
sarl
mov
call
push
add
shl
ret
mov
xchg
mov
jmp
sbbw
mov
xor
dec
pushf
test
xor
adcb
push
insb
add
mov
outsb
pop
mov
in
add
xchg
dec
pop
inc
ja
movsl
lahf
aad
loopne
push
call
lods
xchg
inc
shlb
cmp
mov
push
or
xchg
jnp
subb
xor
icebp
push
cmpsl
inc
and
stos
lea
add
cmc
loop
ret
adc
repnz
add
xor
xchg
dec
and
adc
gs
lods
sub
fnsave
sbb
fdivl
push
mov
xchg
or
outsl
jge
mov
adc
cs
xchg
lret
lea
pop
mov
adc
mov
fs
and
and
aad
push
inc
aam
cmp
mov
jns
fldl
inc
xchg
inc
dec
pop
test
inc
cmp
mov
int3
arpl
lods
movsl
push
fsubr
mov
and
scas
pop
or
les
mov
insb
xorb
popf
cmpsl
add
mov
ret
pop
jb
adc
rorl
test
dec
and
in
sbb
and
and
dec
jecxz
call
cmp
jns
push
mov
aam
les
lahf
jecxz
jnp
xchg
lods
push
xor
xor
fsubl
adc
cmp
inc
dec
push
test
pushw
mov
cmpsl
sub
mov
push
leave
sub
ficompl
mov
bound
and
xchg
inc
movsl
repnz
inc
std
cmpsl
add
enter
syscall
test
sbb
testb
or
ficomps
pop
mov
cmp
inc
push
out
jae
test
std
popf
adc
xlat
orl
jae
xor
jo
movnti
sbbl
jns
pop
loop
pop
out
into
add
ja
mov
int
xchg
mov
push
ret
mov
gs
xchg
fdivrs
outsl
push
lods
or
adc
adc
fsubrl
iret
push
mov
mov
push
in
test
mov
movsl
adc
push
mov
pop
lret
add
test
scas
aam
aam
aad
adc
cmp
push
lock
fists
inc
addr16
push
and
int3
lret
ss
in
rcrl
fs
inc
and
ret
mov
mov
stc
test
ret
int
scas
pop
mov
out
inc
pushf
rclb
mov
mov
lcall
das
shl
dec
xor
sbb
inc
nop
sub
pop
lcall
mov
js
jo
cs
test
push
xor
dec
clc
iret
dec
aaa
pop
cmp
mov
fs
hlt
int3
xchg
dec
push
js
or
enter
adcb
cmp
jl
cwtl
stos
inc
lret
xchg
shl
loop
and
fistpll
inc
movsb
dec
cs
testl
adc
sub
out
pop
xchg
cs
mov
hlt
call
or
je
addb
mov
push
rorl
push
dec
mov
enter
add
pop
inc
add
cmp
hlt
rcr
cwtl
mov
xchg
stos
push
adc
add
nop
mov
popf
dec
in
pop
dec
pop
addr16
loop
adc
shlb
adc
ret
dec
fimuls
loop
pop
ja
pusha
sbb
xchg
or
sbb
cld
xchg
mov
mov
cmc
in
adc
push
push
clc
les
sbbl
es
adc
adc
mov
cs
flds
adc
nop
test
jbe
inc
les
lods
xor
mov
shll
xor
jbe
mov
push
mov
hlt
mov
inc
push
in
adcl
push
mov
repnz
das
jp
xor
in
lods
add
inc
data16
test
pop
mov
xchg
push
jmp
out
sub
and
jp
push
pop
pop
repz
pusha
xchg
icebp
lret
scas
inc
std
adc
push
clc
and
inc
add
or
inc
mov
adc
ss
jle
sub
pop
in
aam
bound
pop
mov
cwtl
das
fisttps
sbb
int
mov
pop
and
ror
fnsave
lods
sahf
out
ror
lock
imul
jg
hlt
mov
loopne
mov
adc
pop
mov
sub
jns
jno
push
popf
jb
push
mov
pop
jae
jno
jge
mov
sbb
test
lret
out
or
inc
popl
daa
jmp
sbb
pushf
sub
jbe
jae
sub
jle
outsl
cmp
aas
and
add
or
pop
add
insb
cs
adc
push
imulb
mov
or
or
cmpsl
mov
sub
mov
dec
mov
clc
stos
jnp
adc
inc
ss
bnd
pop
test
dec
xchg
shll
xchg
cmp
lret
sbb
pushf
repnz
mov
mov
in
lahf
adc
adc
int3
out
sbb
sub
xchg
cs
mov
test
dec
mov
lods
pop
movsbl
xchg
insl
mov
sub
mov
js
movsb
shrb
push
push
clc
shrb
outsl
negb
daa
dec
leave
pusha
jge
xchg
lcall
pushf
mov
test
scas
dec
aaa
and
adc
lea
cmpsb
scas
pop
sbb
lahf
in
ret
mov
cld
imul
sahf
in
sbb
into
mov
aad
insl
or
push
lods
dec
pushl
icebp
ret
mov
cmp
fneni(8087
sub
clc
mov
orb
xchg
inc
and
pop
xchg
cmpsl
nop
adc
inc
cmpsb
pop
sub
adc
cltd
xchg
lock
adc
mov
out
cmp
outsb
leave
cmc
mov
out
pop
or
fmuls
loope
fs
cli
movsl
test
xchg
roll
cmc
push
adc
imul
cmp
sbb
sbb
cli
sub
mov
dec
dec
sub
ss
jae
sbb
inc
xlat
lock
dec
out
mov
in
lahf
add
out
mov
outsb
test
outsb
dec
jecxz
movsb
lcall
outsb
inc
ficoms
stos
inc
mov
lock
mov
cmpl
add
cmpsb
mov
xchg
pushf
dec
push
stos
enter
mov
push
push
ret
mov
and
sub
adc
jns
push
loop
test
pushf
jae
mov
fsubs
jle
sub
lcall
sbb
lret
rcll
stc
in
nop
and
sbbl
stos
in
cmp
sbb
inc
call
cld
ss
xchg
addr16
xchg
aas
add
lods
js
imul
lock
shrl
adc
mov
int
mov
dec
fists
sbb
xchg
xchg
cmp
xor
cmp
sub
fcoml
mov
ds
add
fwait
jl
les
sbb
lahf
popa
insl
inc
push
je
cmp
mov
stc
jle
sbb
lahf
push
cmp
add
ljmp
sbb
jl
jo
fildll
cwtl
pop
lret
repnz
js
adc
jnp
mov
call
std
dec
mov
aad
dec
ja
sahf
sbb
repz
jp
adc
out
push
fs
cmp
dec
ja
int
mov
push
mov
andl
mov
fldt
outsl
cmpsl
loope
imul
mov
gs
icebp
jns
or
mov
jo
in
test
mov
pop
rcrl
cmp
std
mov
mov
push
push
es
hlt
mov
xchg
push
add
fdivl
inc
loop
push
cmpsl
and
lret
rorl
mov
inc
pop
sub
push
jbe
stc
pusha
mov
into
nop
and
mov
pop
insl
in
jle
lock
cmpb
sbb
ljmp
jno
pop
popf
dec
xor
pusha
sub
cmc
sbb
and
adc
in
je
les
xchg
mov
add
mov
adc
je
subl
jmp
lea
jg
lret
xchg
or
inc
in
add
out
orl
cmpsl
cwtl
sbb
in
lods
notl
xchg
cmpl
jmp
aad
push
pop
loope
mov
orb
pop
jp
lods
add
loope
icebp
rorl
mov
repnz
push
cmp
fisttpl
out
in
add
xchg
jmp
inc
shrb
out
std
xlat
fists
mov
sbb
lods
mov
cmp
in
aam
mov
cmc
fidivrl
or
jecxz
cmp
push
je
out
jge
repnz
push
bswap
fbld
adc
lods
inc
pusha
dec
insb
adc
fnstenv
jge
and
aaa
shrl
mov
fimuls
mov
push
push
adc
cmpl
jo
pop
repnz
scas
mov
fldenv
add
jg
out
push
movsl
add
sbb
add
xsha256
cmpsb
push
xor
stc
xchg
sbb
stc
xor
lds
or
jbe
xor
ficoms
bound
jno
stos
pop
cmp
lods
or
sbb
jne
mov
cld
push
outsl
int
mov
jnp,pt
cmp
xchg
jmp
cwtl
das
pop
or
shlb
pushf
es
lea
shl
xor
icebp
je
and
call
xor
xchg
push
add
sbb
fmuls
cmp
or
mov
imul
push
dec
out
pop
stc
mov
testb
sbb
rclb
outsb
xchg
xor
int
cmp
outsl
cmp
pop
cltd
cmp
cmc
jp
daa
call
xor
jns
cmpsb
mov
lret
push
pop
pushf
addr16
mov
pop
stos
cs
addr16
movsl
cmp
xchg
pop
pop
sub
int3
mov
testb
mov
mov
into
mov
mov
inc
rcll
jnp
dec
divb
movsb
pop
jmp
cmp
lea
adc
mov
sti
test
psubb
fidivs
aam
push
pop
ret
jp
es
inc
notb
clc
out
or
jbe
push
movsl
aad
xchg
test
movsb
adc
js
mov
sub
push
mov
jb
mov
push
and
nop
mov
int3
sub
adc
cltd
arpl
in
repnz
sahf
and
out
inc
jns
fsubrl
fs
xchg
lcall
xchg
loopne
push
into
inc
int
adc
sub
and
adc
outsb
jge
sbb
shlb
mov
in
or
sub
mov
xor
xor
movsb
fadd
pop
push
push
jmp
xlat
fdivs
lret
ret
push
dec
jbe
inc
add
pop
jb
aaa
into
mov
jl
cmpsb
outsb
mov
pop
cli
test
push
adc
adc
and
lock
push
shrb
test
repnz
fildl
popa
icebp
flds
or
add
sbb
push
add
xor
sub
int
ljmp
cs
aaa
jb
xorl
call
inc
lods
sbbl
ss
pusha
testl
movsl
les
push
pop
aaa
sti
pushf
cltd
out
and
pop
scas
inc
inc
call
fsubp
xchg
sub
nop
adc
out
jbe
cltd
add
cmp
cmpsb
cmp
mov
lods
xchg
or
std
cltd
add
jns
es
cmpsl
ds
inc
inc
mov
icebp
and
hlt
mov
shll
ret
sub
jne
cmc
push
push
jmp
les
push
jg
sub
xchg
mov
sbb
mov
inc
ficoms
mov
rolb
es
out
je
xchg
sub
xchg
mov
add
mov
xorb
decb
stos
and
or
pop
repnz
ds
dec
into
gs
mov
sbb
jno
adcb
xchg
repz
cltd
out
test
cmp
push
jle
imul
lcall
outsl
push
jns
sub
sub
ds
or
sbbb
nop
pushf
xor
mov
adc
cld
push
pop
cmc
inc
cwtl
repz
jg
iret
dec
dec
loop
lahf
push
call
movsl
xchg
inc
int3
and
rclb
xor
clc
fstps
test
lret
sub
fidivs
dec
test
pop
cld
mov
cmp
mov
aad
pushf
xor
imull
push
bound
arpl
fsubrs
dec
dec
jecxz
int3
jg
rorb
sub
leave
jno
mov
add
popf
push
sbb
or
jo
scas
jno
mov
mov
in
sbb
dec
in
sub
fsubp
and
ja
jle
jne
push
mov
in
mov
sti
mov
mov
mov
cmp
adc
adc
sub
testb
xor
sahf
xor
lods
loop
mov
inc
adc
jle
jg
and
xchg
sub
sbb
or
dec
mov
xchg
xchg
mov
out
addl
fildll
shll
push
and
loopne
mov
stos
inc
push
roll
cwtl
in
pop
xlat
jae
shll
stc
test
and
cmpsl
xor
movsb
push
fnsave
push
call
out
adc
or
inc
fsubrl
stos
testb
pushf
xor
cvttps2pi
jle
popf
xor
repnz
loop
xchg
sub
jae
frstor
in
rorb
mov
mov
dec
sub
sbb
push
out
xor
inc
mov
inc
mov
mov
popf
lea
icebp
sti
xchg
and
cmpsl
xchg
movsb
lea
mov
adc
ret
jne
int3
sub
lods
pop
in
and
in
ss
addr16
xor
aas
nop
imul
jmp
or
adcb
dec
in
out
pop
sub
stos
jnp
dec
lods
pop
outsl
ret
popl
pop
and
mov
cld
nop
push
jno
rclb
aas
divl
xchg
push
sar
nop
add
dec
fs
cmp
jns
pop
pop
dec
lcall
arpl
hlt
pop
mov
dec
or
push
jle
lds
repz
test
jmp
fs
sub
dec
push
sbb
xor
in
mov
repnz
xchg
ret
mov
jecxz
iret
test
mov
hlt
pop
pop
mov
std
xor
clc
repnz
fmul
cmp
jns
lea
rorl
dec
daa
loopne
mov
inc
jmp
mov
stc
outsl
lcall
jnp
test
dec
cmp
pop
push
and
push
insb
mov
rol
jno
pop
jecxz
xor
mov
imul
loope
fs
xor
mov
push
push
mov
mov
xchg
out
lret
add
sub
xor
or
jp
mov
test
in
rcr
loop
push
mov
xchg
mov
pop
cwtl
sbb
xchg
dec
inc
or
sbb
add
addr16
mov
pop
sbb
aam
mov
fnstenv
jmp
or
or
dec
loopne
mov
pop
add
sbbb
and
lcall
and
mov
insl
add
push
push
jmp
push
stos
inc
inc
xchg
xor
daa
repnz
add
fwait
inc
pop
lret
sub
cmp
ds
fsubrs
mov
imull
call
jle
outsl
cmp
dec
ret
pop
cpuid
xchg
jne
imul
push
jle
sub
call
icebp
ss
mov
sbb
movsb
mov
notb
mov
in
dec
int3
lds
fs
adc
xlat
adc
push
lods
fs
lret
pop
ret
inc
movsl
fldl
push
cmp
cmpsb
out
lcall
fbstp
sub
daa
mov
add
vcvttss2si
jg
lea
nop
pusha
mov
xor
enter
lret
push
push
lret
fmull
mov
jae
cwtl
mov
lret
xchg
aad
insb
add
out
call
dec
fwait
nop
aas
add
inc
fstl
aas
imul
xor
cltd
test
mov
in
cmpsb
jg
fmuls
shrb
lret
sti
xchg
std
push
mov
test
repz
mov
sahf
xor
sub
in
pop
cmp
insb
mov
and
xor
fldl
xchg
sub
ljmp
int3
cmp
mov
out
mov
jno
lods
jae
ffreep
call
xor
and
xor
add
xchg
lock
lret
loope
loopne
cmpsl
ret
inc
sbb
jae
pop
shr
jnp
jl
xor
stc
sub
jne
or
clc
xor
out
mov
and
lahf
xchg
lods
pop
sub
xor
ja
xchg
or
enter
pop
adc
xchg
xor
cmp
mov
mov
test
mov
xchg
lea
mov
mov
sbb
pop
dec
lds
xorl
out
xor
andl
hlt
cmp
ja
jl
cmp
cmp
push
lret
inc
lods
dec
in
out
mov
pop
testb
lret
popa
imul
inc
inc
out
lds
lcall
mov
bound
pushf
shlb
xor
gs
loope
sub
movsb
cmp
pop
mov
ret
pop
cmc
push
popa
enter
ja
pop
inc
mov
mov
dec
ret
add
rcll
jmp
repz
xorb
pop
adc
mov
jge
icebp
cwtl
das
fwait
xor
in
jnp
cld
enter
movsb
cmp
fnstenv
or
lods
add
lret
les
test
imul
jecxz
sti
xchg
add
push
jno
popf
sub
and
and
lds
aam
inc
jae
cmpsl
cmp
ss
sbbb
xchg
int3
arpl
lods
shlb
cmp
sub
cli
stos
pop
add
sub
shl
jnp
sahf
mov
ficoml
push
push
xor
out
mov
add
push
jl
imul
push
popf
sub
js
rorb
imul
cwtl
adc
sbbl
mov
xchg
sub
and
mov
std
insl
lret
repnz
inc
or
cmp
sbb
in
in
cmp
mov
or
cmp
cs
aam
cmp
inc
fcompl
lea
cmpb
adc
inc
fdivl
mov
cli
sbb
push
cmp
mov
jb
and
shrl
dec
xor
pop
add
addr16
int
rcrl
adc
outsl
scas
jb
mov
out
pop
lock
mov
lret
mov
fsubs
dec
in
stc
add
test
push
dec
arpl
pop
jne
mov
adc
xor
inc
fisubs
call
push
sbb
sub
xlat
enter
in
add
mov
insl
jb
add
cmp
mov
mov
pop
hlt
not
shrl
pop
adc
dec
or
mov
into
insl
add
push
sbb
lret
test
mov
pop
xor
mov
test
inc
fmuls
mov
sbb
cmp
xchg
pop
lock
pop
or
arpl
pop
repnz
sbb
popa
or
mov
in
pop
icebp
mov
fistps
mov
mov
xchg
repnz
xchg
adc
test
push
jmp
cld
and
je
jb
fwait
xchg
sti
xchg
sub
hlt
mov
dec
js
jg
mov
dec
roll
pop
je
fidivs
xchg
enter
repz
mov
fsubs
inc
pop
scas
ja
xor
push
cltd
xor
out
jmp
ljmp
jno
outsl
aad
and
xchg
es
sub
inc
push
jl
pop
scas
aaa
lret
bound
out
add
rclb
pop
sahf
push
xchg
jne
je
mov
addr16
jo
dec
push
and
xchg
and
fnstcw
xchg
xor
push
xchg
ret
mov
cli
push
ret
push
test
lods
sti
xchg
inc
test
pop
mov
lods
call
test
sarl
fcomi
lcall
pop
push
in
pop
xor
push
sbb
idivl
insl
xchg
xchg
stc
sbb
inc
mov
mov
cmp
push
pop
or
cld
or
pop
inc
pop
or
pop
cmc
push
pop
sub
subl
push
in
out
aas
xor
mov
orl
xchg
mov
pushf
mov
loope
add
repnz
clc
aam
jl
xor
xor
xchg
in
cmp
sbb
cwtl
mov
mov
and
pop
xchg
push
lds
lret
bound
iret
xchg
xchg
push
in
add
add
sub
push
jmp
iret
and
lahf
xchg
jnp
stc
insb
daa
jbe
cltd
sbb
mov
sahf
aas
mov
mov
je
icebp
pop
cltd
incl
leave
jbe
and
push
xchg
sub
scas
into
dec
test
sbb
jl
cmp
loope
je
dec
cmpsb
push
les
push
out
lods
cmp
cmc
mov
dec
jge
jno
lock
mov
repnz
fs
push
in
mov
leave
pusha
add
jbe
test
packsswb
xchg
sub
cmc
stos
xor
loopne
sbb
cmp
les
rol
dec
and
test
jne
mov
dec
xchg
je
enter
adc
inc
jge
jmp
outsl
int3
push
mov
mov
mov
nop
movsl
test
sub
push
xor
mov
lock
out
xchg
flds
test
jns
xor
sbb
sbb
push
fadds
lods
aas
cmp
mov
adc
pop
xor
stos
notl
lods
dec
sbb
bound
loop
cmp
xor
xchg
clc
orl
fcompl
divb
roll
insl
pop
fidivs
sarb
aad
stos
insl
lcall
repnz
sub
mov
jb
movsl
stos
outsb
clc
adc
leave
in
push
shlb
and
iret
sub
cmc
mov
or
adc
xchg
cld
shll
pop
adc
scas
xor
add
imul
int3
xor
adc
roll
xchg
hlt
lcall
mov
mov
jno
stos
aaa
add
adcb
inc
fdivrs
cltd
ret
push
xchg
insb
lods
mov
inc
fldl
int3
adc
lahf
dec
add
dec
fldt
push
jmp
add
repz
or
cmpsl
lods
sub
adc
jne
ljmp
and
loope
and
mov
test
outsb
ds
xchg
and
sbb
leave
sbb
cli
or
xchg
cmp
ficompl
cmpsb
dec
test
sub
insl
sub
adc
into
shlb
das
in
jl
dec
adc
adc
notb
mov
std
dec
pushf
mov
inc
lahf
jae
mov
in
in
inc
jg
fs
leave
popa
insl
xlat
addr16
mov
test
jecxz
xor
jmp
or
cmpb
movsl
pop
rcrl
pop
or
lds
sub
cmp
push
push
scas
fwait
repnz
outsl
push
mov
mov
push
dec
repnz
mov
out
std
sub
pop
push
add
daa
jnp
and
mov
out
pusha
negl
mov
lcall
lret
shll
xor
loop
xchg
into
mov
subb
inc
inc
fmuls
popf
adcl
mov
push
ret
loopne
pop
scas
mov
addr16
mov
adc
fbstp
std
scas
test
pop
repnz
lods
fisttps
pop
lock
inc
idiv
xor
adc
jne
mov
mov
jne
push
xor
je
fisubl
jmp
andl
dec
pop
mov
add
hlt
sahf
fs
push
cs
mov
enter
sub
ficompl
or
mov
mov
jns
mov
ret
data16
sub
mov
cmp
sub
shlb
inc
or
gs
xchg
std
loope
je
enter
cmp
pushf
mov
push
push
in
jg
inc
jo
data16
sbb
sbb
dec
mov
fwait
push
js
or
fcomi
cwtl
out
jl
std
push
pop
sub
cmc
push
push
jecxz
ds
int
jge
hlt
pushf
and
sub
pop
cmpsl
mov
sbb
stos
adc
lret
leave
pop
push
cwtl
push
xchg
in
lods
cmpsb
rcrl
push
std
sbb
je
add
mov
aas
pusha
push
pop
repz
testb
jp
stos
mov
mov
fcompp
ja
dec
rcrl
pop
imul
ss
inc
lock
pop
in
in
push
mov
addl
or
mov
add
in
and
pop
enter
xchg
hlt
addr16
nop
rcrb
fidivrl
ljmp
xor
lcall
stc
test
pushf
mov
inc
ret
js
jne
cwtl
out
popa
push
dec
stos
mov
xchg
popl
into
fcomps
aaa
jbe
jne
in
movsl
daa
out
sub
cmpsb
mov
xlat
sbb
cmpsb
mov
negl
cmp
adc
hlt
fidivrl
or
cmp
pop
mov
xor
fdivrl
jns
xchg
or
rcrl
jo
push
or
cmp
or
or
push
pusha
jg
imull
add
loope
int
lods
decb
test
aaa
out
orb
or
pop
addl
testb
out
mov
arpl
aas
add
add
fidivl
fdivs
test
clc
call
cmp
ja
mov
jns
mov
add
mov
fcmovb
jecxz
sysenter
jbe
test
xorl
dec
pop
jp
lods
sub
adc
cwtl
rclb
lahf
pusha
jne
mov
or
ror
sarb
push
adc
add
or
aaa
add
mov
add
xchg
push
mov
ret
hlt
in
dec
fs
mov
mov
push
cs
xlat
rorl
jg
gs
inc
pop
js
jae
xorb
rcrb
cmc
out
sub
fiaddl
lods
aaa
decb
orb
aam
xchg
inc
arpl
inc
mov
push
jmp
pop
xor
mov
push
ds
daa
ja
pushf
arpl
mov
dec
rol
js
jo
outsl
pop
cmpsl
sarl
and
sub
jp
mov
mov
je
adc
pop
insb
insl
dec
aad
or
scas
xor
pop
dec
popf
add
mov
dec
and
inc
jne
dec
pop
rcrl
shrl
test
ja
in
sbbb
stos
sbbb
stc
cmp
movsl
in
lods
subb
xor
movsl
sub
aaa
ret
push
popf
hlt
enter
sbb
in
sar
or
imul
mov
cmpsl
mov
mov
pxor
lock
xchg
xor
mov
test
lahf
adc
and
push
sub
cmpsb
cmpsb
das
loope
push
mov
sbb
xchg
mov
push
adc
sbb
in
add
push
jp
loope
inc
fsubrl
sub
pop
ret
push
push
adc
mov
fisubs
mov
cmp
int
xor
cmp
out
addb
or
sbb
pushf
add
enter
lds
or
mov
xchg
or
mov
push
repnz
fnstcw
insl
psubsw
dec
adc
in
xor
mov
inc
stos
dec
mov
test
in
or
sarl
mov
mov
cmpsl
adc
pop
sbb
pop
mov
sub
repz
jb
push
xchg
jge
fcmovu
cmp
and
das
push
xorb
add
sbb
add
pop
cld
push
and
xor
push
mov
daa
pop
mov
add
sbb
mov
les
movsb
scas
lea
mov
mov
test
scas
fstps
test
mov
cld
test
jne
in
jnp
cwtl
xchg
ja
push
nop
imul
jmp
pop
dec
push
aas
clc
out
and
pop
test
dec
fwait
cmpsl
sahf
push
mov
inc
cli
int
lea
inc
popa
cmp
mov
int
sbb
pusha
ret
sbb
lahf
ss
loop
das
inc
mov
pop
and
inc
insl
push
or
adc
mov
imul
mov
pushf
add
int
int3
pusha
and
and
jbe
lcall
mov
scas
aaa
into
loopne
mov
adc
dec
outsl
cmp
pop
dec
adc
shll
adc
bound
or
xorl
scas
inc
loop
xor
fimuls
stc
push
fisubrs
je
stc
ret
mov
int3
jo
and
test
mov
cmpsl
xor
mov
fisubrs
flds
sub
dec
in
ret
jns
testb
outsb
adc
pop
fwait
ja
inc
call
imul
cmp
sbb
mov
cmp
jns
inc
inc
cmpsl
adc
mov
jb
lea
pop
xor
add
mov
les
call
fucomip
es
aam
adc
inc
in
loop
adc
sbb
scas
and
bound
mov
rcl
push
rorl
in
push
xchg
cmp
das
ljmp
mov
mov
lcall
in
outsb
mov
mov
or
mov
xrelease
add
xor
pop
inc
xchg
cmp
test
fldcw
lcall
and
mov
mov
push
pop
lds
push
mov
stos
es
push
int3
lcall
stos
cmpb
cli
cmp
sti
xor
negb
pop
insl
xor
mov
nop
and
xor
jge
hlt
int
inc
or
mov
xchg
dec
fisubl
inc
or
sbb
mov
dec
inc
mov
out
in
aad
sysret
ja
mov
lret
stos
hlt
jmp
or
hlt
adc
pusha
push
and
mov
je
stos
xor
push
popf
rcrl
pop
out
arpl
dec
jbe
xor
xchg
sub
and
dec
mov
fwait
ljmp
inc
sti
repnz
pusha
inc
xchg
sbb
dec
sub
xlat
in
stos
push
stc
jmp
cltd
adc
xchg
sahf
lcall
pop
repnz
jge
xor
sahf
scas
testb
adc
xchg
imul
dec
jnp
push
inc
jo
fstps
lock
dec
cmp
insb
imul
push
bound
xchg
mov
nop
lods
and
pop
push
dec
popf
das
jo
in
inc
push
sub
leave
xchg
sub
ret
movsb
dec
loope
cmp
daa
mov
pop
push
ret
test
ljmp
movsl
push
popa
int
outsl
loop
mov
fsin
and
lods
fimuls
cltd
or
or
cmp
lock
mov
outsb
stc
or
adc
or
xor
jmp
shlb
mov
data16
pop
jnp
jl
lods
aaa
sbb
pop
sub
outsl
jmp
lds
pop
dec
jecxz
push
insl
leave
cmpb
call
dec
jne
sahf
das
jno
lds
dec
inc
sahf
icebp
inc
and
push
ficompl
mov
out
test
jae
pop
cmp
fwait
push
jo
rep
lahf
sbb
cmp
in
push
scas
mov
fistl
daa
fs
xlat
xchg
and
adc
mov
add
das
ret
sarl
bound
mov
xchg
sub
dec
jecxz
daa
clc
xchg
adc
out
sub
xor
push
pop
pop
icebp
insb
movsb
out
popf
add
jp
je
cwtl
jae
xchg
cwtl
aad
jno
jne
push
cld
outsl
mov
xchg
test
rcrl
xor
dec
in
xchg
sub
insl
notl
sbb
ds
mov
add
xor
out
mov
xchg
sahf
xor
rorb
jle
adc
lahf
lret
mov
push
sbb
push
mov
test
ret
add
test
das
pop
mov
mov
jp
shl
scas
mov
mov
aam
inc
in
js
sub
mov
jg
leave
fnsave
mov
mov
stos
cmpb
mov
ljmp
mov
xchg
imul
stc
aam
push
mov
or
inc
cli
lret
jb
int
push
pop
stos
inc
gs
push
stc
mov
mov
xchg
jle
adc
scas
jge
ficompl
mov
jmp
xor
inc
daa
call
push
jae
pop
out
ljmp
hlt
aam
mov
push
movsb
add
xor
popf
push
aad
ja
mov
clc
sub
loope
pop
sahf
repnz
inc
dec
mov
xor
cmp
add
inc
mov
mov
bound
inc
xchg
popa
push
lea
xchg
mov
lret
imul
lods
adc
add
cmpsl
faddl
sub
cwtl
mov
fdivrl
out
clc
dec
lret
into
cmp
push
insl
inc
dec
lcall
and
pop
add
fcmove
addb
push
xor
fs
ficomps
and
sbb
lret
ret
test
push
orl
xchg
stc
push
pop
jg
or
adc
or
pop
pop
lock
mov
or
sahf
faddl
jns
push
mov
outsl
xchg
or
fnsave
out
loopne
outsl
or
inc
push
adc
addr16
and
iret
mov
mov
mov
fildl
mov
or
insb
movl
hlt
push
dec
shlb
sarl
scas
clc
icebp
jnp
addr16
push
jb
sub
xor
dec
jne
mov
pop
sbb
js
imul
push
ret
cmp
fwait
mov
outsb
mov
fildll
xchg
sub
cltd
aaa
je
repnz
pop
scas
lret
and
out
lods
push
inc
clc
ljmp
xchg
pop
les
pop
xor
cmp
repnz
xchg
imul
dec
idivb
scas
imull
pop
arpl
ret
sarb
shr
popa
cmp
pop
call
and
fistpl
or
lods
mov
jl
add
pop
sub
shl
pop
out
lods
push
and
imul
pushf
sub
jne
push
xchg
daa
int3
lcall
mov
imul
dec
add
stos
loop
dec
mov
push
mov
lret
cltd
ror
je
mov
insl
jo
mov
sti
jecxz
lds
mov
push
sub
sub
je
xchg
sbb
adcb
mov
cwtl
out
mov
push
inc
jl
scas
addr16
or
popa
ja
xchg
lods
les
pop
subb
aam
adc
inc
nop
stos
cmp
test
mov
sbb
mov
pusha
xchg
incl
ds
mov
xchg
and
ss
insl
pop
hlt
push
popa
xorl
jbe
test
enter
stos
jae
mov
pop
mov
dec
add
loopne
adc
adc
call
cmp
push
lret
mov
mov
xor
dec
loopne
jmp
enter
inc
incb
lahf
pop
insl
roll
push
xchg
push
mov
lds
add
pop
pop
dec
fdivs
inc
es
or
lea
dec
push
lock
adc
imul
mov
adc
aam
and
mov
pop
mov
ljmp
jae
mov
mov
fcoms
js
lcall
push
stc
dec
outsl
dec
push
push
pop
pop
pop
jns
cmpsb
or
mov
push
cwtl
xchg
stos
aam
push
mov
or
xchg
out
add
dec
test
sub
add
jg
repz
pop
push
cltd
jns
push
cmpsb
adc
sbb
mov
or
lret
inc
outsb
loopne
cs
mov
movsl
movsb
jl
movsb
sub
imul
adc
inc
sbb
mov
push
pop
xchg
inc
mov
sbb
cmp
fucomip
sahf
pop
jl
xor
ss
out
pop
add
mov
xor
lret
mov
popa
movb
in
mov
push
mov
mov
andl
int3
pop
sbb
dec
dec
or
lods
xchg
lods
loopne
loopne
or
sbb
std
imul
add
orb
lds
lods
push
fidivl
cmc
and
mov
scas
push
or
hlt
icebp
cld
sbbb
xchg
push
les
aas
push
les
nop
pop
pop
sbb
add
jns
fadd
jno
lahf
cmp
imul
cmp
jno,pt
das
pop
xchg
lds
repz
imul
inc
sub
popf
js
cltd
int3
xor
nop
jecxz
out
push
xchg
mov
mov
xchg
push
repnz
ja
mov
shrb
les
xor
mov
scas
movsb
cmp
xchg
xor
mov
add
aad
shlb
sbb
pop
rorl
sub
sarl
jmp
mov
cmp
rcrl
jno
aad
or
mul
push
ljmp
jno
push
pop
jb
loopne
or
idiv
fsubrs
pop
cld
cmpsl
add
popa
mov
leave
mov
adc
adc
div
xlat
cmpsl
sub
ja
aas
cmc
imul
mov
jae
fwait
in
std
push
jae
negl
sbb
shl
test
movsl
lds
xchg
movsb
cmp
mov
sbb
cmp
dec
mulb
lea
ret
cmpsb
daa
add
inc
adcb
dec
sub
data16
outsb
rorl
jle
sub
cmp
fwait
add
jbe
fwait
xor
jecxz
ds
shrl
das
ret
test
ror
loopne
pop
pop
push
stos
fsubrs
ret
jmp
mov
pop
orb
sbb
push
jnp
fdivl
jecxz
add
jmp
loope
jnp
bound
and
push
rol
push
stc
inc
cli
and
test
jnp
jg
dec
popa
enter
mov
fiaddl
cmpsb
push
test
test
jb
gs
fsubrs
sub
jmp
push
arpl
stos
jno
fdivrl
cli
mov
outsb
xchg
sahf
cwtl
cmc
aad
mov
les
out
jg
addr16
jnp
es
inc
cwtl
stc
push
sbb
adc
dec
cmc
pop
dec
daa
sub
pop
inc
insb
lret
push
and
xchg
xchg
adc
push
in
adcl
sub
xchg
add
or
lods
pop
dec
cli
gs
jae
icebp
movsb
sbb
xchg
sub
arpl
sbb
lods
dec
addr16
aaa
nop
dec
or
dec
outsl
lret
push
div
adc
inc
mov
aaa
stc
fcoms
out
in
pusha
negl
sbb
xor
addr16
mov
test
xor
xchg
leave
sub
clc
mov
movsl
hlt
ja
mov
stos
fsubs
sahf
lock
cmp
lcall
sbb
push
fnstenv
pushl
mov
rorb
add
int
sbb
mov
insl
loopne
adc
lret
sub
adcl
rorb
and
lock
ffree
or
imul
cmp
cltd
mov
ret
stc
mov
paddb
sub
add
outsl
andl
sbb
dec
pop
fstp
jae
movzwl
inc
jno
push
jb
sbb
popl
and
shrb
pop
dec
repz
lds
in
jbe
push
cli
test
lock
mov
sbb
inc
and
lock
dec
jno
xor
dec
mov
shll
stos
adc
and
popf
aas
imul
pand
fldenv
aas
mov
xor
daa
mov
stc
xchg
mov
pop
xor
icebp
scas
adc
nop
push
fadd
sub
jbe
and
hlt
scas
fisubs
ljmp
cltd
sbb
leave
ret
mov
test
leave
xchg
fidivl
inc
xor
jbe
mov
repz
pop
pusha
jne
mov
xor
inc
push
adc
add
pop
daa
stos
pop
sbbb
dec
lea
rep
mov
push
lods
dec
xchg
or
push
push
sahf
repnz
sbb
les
xchg
outsb
push
aam
outsb
push
cwtl
cmp
push
idivb
mov
and
add
int
js
push
in
aam
pop
mov
repnz
sub
push
cmp
and
mov
sub
xor
mov
cwtl
das
jmp
sti
es
int
mov
mov
out
cmpsl
dec
imul
call
and
sbb
pop
lret
pop
pusha
fmul
pop
push
and
fisubs
out
pop
notl
out
jno
lods
testl
dec
bound
mov
rorl
push
mov
icebp
jl
jns
adc
mov
ret
ljmp
outsb
add
push
and
repnz
push
sti
test
out
stc
loopne
sub
repz
lahf
repz
ret
xchg
sbb
sub
sub
test
aas
sub
push
lea
xlat
stos
movsl
icebp
xchg
mov
lret
repz
out
xchg
inc
aas
xchg
out
in
bound
push
ret
jle
pop
dec
push
aas
mov
mov
push
mov
adc
push
jo
push
jae
dec
shl
dec
into
out
dec
or
xor
jecxz
loope
in
dec
daa
push
push
mov
mov
pop
insl
fbld
aaa
ret
fcomi
jnp
into
gs
pushf
loop
xchg
out
and
and
push
sbb
pop
out
pop
lret
in
mov
fdivr
orb
xchg
das
dec
shll
adcb
fdivrs
fmuls
dec
into
in
add
mov
incl
into
leave
filds
imul
mov
mov
add
test
rol
gs
call
in
jl
lcall
cwtl
lods
and
je
xchg
imul
cmpsl
lahf
push
mov
aad
xchg
stc
xchg
mov
cld
and
xor
mov
xchg
dec
mov
pop
adc
pop
pop
or
dec
inc
rol
jae
aaa
push
xchg
mov
cltd
and
mulb
outsb
scas
stos
pop
les
jnp
pop
mov
xor
jno
bswap
ss
es
sbb
jle
push
mov
jmp
or
gs
rolb
and
and
push
subb
and
or
bound
add
mov
jnp
lret
ds
lock
es
inc
xlat
daa
inc
mov
clc
fnstsw
popf
push
into
xorb
sbb
jnp
clc
push
stc
imul
dec
fadds
outsb
jae
pop
mov
xchg
mov
jecxz
dec
push
fidivl
inc
xchg
xchg
xor
jae
andb
lods
hlt
mov
xchg
clc
in
ljmp
mov
pop
push
push
adc
mov
imul
mov
mov
and
push
inc
into
adcb
outsl
in
cmp
jecxz
dec
jne
js
leave
stos
inc
push
out
ljmp
mov
xor
push
mov
xchg
xor
mov
mov
insb
inc
and
add
xchg
repz
xor
mov
inc
add
push
jo
sub
std
or
das
in
lods
fcompl
jl
add
nop
mov
dec
jmp
pushf
call
popa
shrb
fisubl
mov
adc
jns
pop
es
xchg
iret
mov
repz
pop
adc
sbb
repnz
inc
dec
jl
testl
repnz
mov
mov
fsubrl
addr16
sub
mov
jae
and
sahf
xchg
adc
loopne
sub
imul
lock
push
sbb
cld
inc
inc
jg
or
jae
lods
das
sbb
icebp
adc
push
popf
int3
fdivrp
xchg
out
outsl
cs
add
loop
adc
test
es
dec
aaa
mov
ds
and
lods
and
movsl
lcall
outsl
or
fsubrl
arpl
pop
popf
sbb
lcall
test
push
mov
sbb
popa
popf
jb
jg
movsb
and
dec
pop
and
mov
loop
outsl
cli
psubusb
push
push
push
push
jmp
adc
imulb
mov
inc
lods
add
mov
jg
push
test
cli
jnp
enter
outsl
mov
cmpsb
pop
call
sbb
jae
scas
rcl
lcall
lcall
aam
daa
mov
stos
add
jnp
fstl
loope
push
pop
xorl
cwtl
out
incb
xor
mov
xchg
mov
inc
iret
lods
mov
jbe
jb
cwtl
push
add
dec
xor
insb
sub
sti
rorl
jp
sub
je
lahf
add
inc
decl
mov
andl
lds
call
fisubl
and
les
cmp
cmp
adc
push
in
cmp
jno
mov
adc
fimull
decl
push
xor
test
lock
push
mov
xor
test
dec
cmp
mulb
xchg
pop
shrb
enter
sahf
cmpsb
ret
cmpsb
ja
xor
outsb
bound
push
movsb
jns
fsubrl
adc
push
roll
daa
lcall
out
sub
xchg
or
nop
std
popf
xorl
adc
inc
xchg
add
pop
jo
cs
scas
add
xchg
pop
mov
mov
test
pop
stos
inc
imul
lahf
xor
fcmove
aad
insl
mov
xor
mov
sarl
loopne
mov
jp
stos
addl
mov
rcrb
sub
aam
inc
cmpsl
clc
push
xor
mov
adc
push
inc
adc
push
xchg
sub
and
pop
out
inc
insb
out
fwait
push
rcrl
ds
push
and
jbe
pushf
cmp
int
decb
pusha
dec
mov
dec
ficomps
inc
sti
outsb
jns
fisubrs
lret
gs
rcr
xor
fbld
xor
aaa
xchg
loopne
frstor
xchg
sti
nop
stos
pop
stos
repnz
cwtl
mov
jae
in
xchg
adc
aam
fnstenv
mov
or
jmp
imul
sub
xor
insl
cmc
add
test
push
lods
daa
pop
add
add
mov
mov
ja
mov
push
xchg
in
sbb
clc
mov
cmp
mov
scas
rcl
movsl
dec
daa
mov
adc
and
cld
dec
add
push
cmc
inc
repnz
fimull
lahf
loope
xor
lcall
inc
in
cmp
nop
dec
jmp
or
out
sbb
add
ss
mov
cmp
mov
filds
mov
xchg
rep
mov
mov
aaa
pop
js
add
mov
push
in
addr16
cmp
push
xchg
xlat
adc
xor
sbb
mov
ljmp
add
sbb
xor
sub
lods
aam
int3
inc
dec
mov
repz
sbb
adc
or
scas
lcall
mov
mov
movsb
inc
std
dec
push
xor
rcll
sbb
add
mov
ret
cld
push
out
fs
xchg
loopne
nop
mov
insb
jno
subl
loope
mov
pop
push
repz
xor
ljmp
clc
xchg
andl
and
popf
fcompl
inc
add
std
and
aad
fcmovb
lods
mov
sub
jecxz
or
add
xchg
cmp
xchg
js
jecxz
sub
insb
stos
add
cmpsb
imul
mov
or
jnp
fwait
popa
xchg
js
lods
pop
and
xchg
xchg
xchg
fcompl
mov
pop
bound
xor
bound
adc
orb
testl
mov
fstpl
jg
cmpsl
mov
add
daa
pop
cs
push
lahf
hlt
lret
push
in
adcl
shll
sahf
fadd
sbb
inc
test
incb
sub
dec
enter
push
push
ja,pn
jle
out
jmp
jecxz
aam
lea
mov
dec
mov
inc
pop
and
dec
fistps
dec
ds
cli
mov
int
es
pushaw
xor
pop
sub
pop
add
cmp
mov
pop
or
add
xchg
cs
mov
adc
or
jmp
daa
ljmp
push
mov
and
dec
mov
xchg
pop
add
ret
test
mov
ds
fs
cmpsb
and
jge
inc
or
test
adcb
scas
aam
out
push
jmp
push
inc
cwtl
scas
fiaddl
xor
fsubrs
jl
xor
cmp
dec
ds
outsl
dec
loopne
dec
cs
sub
push
sbb
fxtract
test
jg
push
mov
add
mov
and
hlt
or
fdiv
stos
inc
shlb
push
movsl
lock
xchg
mov
mov
jge
mov
repnz
es
fimull
rclb
pusha
xor
dec
mov
in
mov
cs
xor
mov
and
out
fs
dec
xlat
mov
fidivl
fmull
or
mov
cmp
outsb
sub
add
add
adc
addb
pusha
movsb
cmp
jge
int3
xor
cmp
xchg
stos
push
enter
fisubs
add
push
inc
xlat
or
push
stos
inc
ret
or
lock
xchg
out
mov
outsb
pop
sbb
outsl
inc
xchg
popf
je
cmpsl
jae
repz
mov
sbb
mov
mov
pushf
jle
insl
call
jne
inc
push
addl
outsl
ja
cmp
mov
lret
adc
mov
in
and
mov
out
out
jbe
aad
out
adc
push
scas
out
jecxz
inc
xchg
add
push
push
cmp
fbld
cld
stos
scas
rcr
fstpt
jbe
push
icebp
stos
stos
and
jne
cmp
test
mov
pop
cmp
adc
ss
sub
inc
push
rcrl
mov
add
pop
icebp
mov
mov
mov
mov
cmp
sub
mov
cmp
inc
pop
adc
es
scas
inc
insl
add
arpl
fisubs
mov
cld
xor
or
xorl
repnz
or
cmp
mov
lcall
mov
adc
cmp
xchg
xchg
movsl
cmp
loop
jp
aam
divb
mov
outsl
mov
or
clc
pop
jle
cmpsb
repnz
jae
pop
push
push
dec
mov
in
cmpsl
mov
dec
adc
fildll
ror
push
outsb
xchg
mov
push
in
lret
jg
fdivl
inc
jp
sbb
cmc
shll
fistps
test
mov
adc
mov
outsb
ds
mov
popa
aam
xchg
out
inc
xchg
mov
int
call
in
adc
add
pop
ficompl
push
arpl
rolb
push
and
xlat
mov
adc
ror
xchg
pop
sbb
sub
stos
hlt
sbb
ret
stos
cmpb
aas
movsb
adc
mov
mov
fucomip
cmpsl
mov
aaa
jge
cs
das
mov
loopew
popf
pop
add
cmp
push
or
andl
xchg
test
test
lret
mov
or
xor
mov
mov
inc
ljmp
xor
xor
ja
insl
sahf
sub
shld
das
rcl
out
xor
cs
cmp
mov
lret
test
decl
mulb
lea
inc
jb
mov
fsub
xchg
sarl
fidivrs
gs
push
xchg
mov
xchg
or
pushf
lods
repnz
sarl
pop
movsb
push
sahf
outsl
cmpb
cld
pop
jbe
scas
inc
je
fsubs
dec
pop
lock
pop
cmp
outsb
ja
outsb
and
rep
mov
xchg
icebp
gs
jg
adc
mov
mov
es
dec
decb
or
loope
rorb
add
rclb
pop
mov
xchg
or
cmp
push
into
or
enter
rcrb
daa
sub
push
push
mov
scas
dec
cwtl
sub
fisubl
idivb
and
outsb
enter
xchg
jmp
loopne
ljmp
push
out
mov
cmp
mov
xchg
pushf
mov
add
adc
xor
cmp
dec
cmp
clc
imul
ja
clc
sbb
loopne
xor
jg
daa
mov
xchg
pop
sti
jbe
cmp
mov
fprem1
xchg
or
cmp
inc
movsl
popf
sub
icebp
push
or
mov
xchg
xchg
lret
push
inc
and
add
xor
jl
inc
cmpsl
and
adc
add
jmp
inc
cmp
adc
dec
in
push
mulb
sbbl
mov
xorb
jae
and
sti
or
fs
js
call
mov
inc
pop
scas
xor
mov
test
cmp
adc
addr16
sub
push
mov
xor
sbb
bound
int
and
jg
fwait
adc
and
test
adc
mov
enter
flds
or
mov
lods
iret
adc
into
cmpsl
in
jbe
rol
cmc
sbb
inc
adc
push
hlt
adcb
xor
outsb
pop
scas
andb
lds
insb
dec
mov
mov
push
xor
sub
or
sbb
push
sahf
dec
arpl
test
pusha
sub
std
jb
rcrb
and
xlat
movsl
mov
xchg
jne
cmpsl
jmp
dec
pop
sbbl
jl
pop
mov
stos
jne
pop
sub
push
popf
cwtl
data16
iret
adc
mov
sub
repz
decb
lret
movsl
popf
scas
movsl
ret
pop
mov
push
jns
sbb
rcl
adc
add
jae
mov
cmp
and
lret
jns
add
inc
pop
add
xchg
pushf
and
arpl
adc
lcall
inc
nop
fmull
out
and
mov
inc
jmp
xchg
lahf
push
popa
mov
hlt
dec
aas
xchg
mov
or
sahf
push
jae
pop
loop
jge
jle
jg
pop
sub
sub
cmp
mov
xlat
mov
loopne
mov
clc
sbb
sbbl
lret
sarb
mov
mov
or
clc
adc
movsb
push
fistl
jl
clc
ss
add
xchg
and
adc
in
mov
mov
and
xchg
notb
mov
jbe
aaa
mov
mov
and
cs
incl
pop
decl
xchg
and
repnz
mov
inc
int
adc
ljmp
subl
fs
adc
push
push
mov
adc
or
fisubs
pop
mov
sbb
out
iret
bound
add
pop
adc
out
fwait
jmp
push
xchg
out
lahf
imul
push
jb
loop
fsubl
sub
or
push
pop
sub
pop
add
add
sti
pop
or
inc
fisubl
dec
popa
add
mov
mov
push
adc
icebp
pop
sub
jo
adc
pushf
outsb
les
into
std
int
ljmp
pop
inc
mov
cmp
shll
mov
test
ljmp
xorb
sbb
mov
jns
and
nop
push
sahf
divl
xor
loope
or
jecxz
mov
sub
jno
dec
clc
adc
ret
daa
dec
es
dec
in
and
bound
idivb
mov
imul
jae
dec
fidivl
adc
xchg
inc
cmpsb
mov
movsl
pushf
xchg
sbb
or
pop
iret
sbb
add
rclb
xchg
inc
xchg
call
in
inc
xchg
inc
inc
in
clc
pop
pusha
in
mov
fstp
imulb
sub
fiadds
mov
or
cs
pop
adc
mov
imul
lock
jle
push
mov
add
sub
test
push
mov
mov
pop
jg
adc
add
cmp
xor
sbb
mov
adc
aam
aas
icebp
cmp
inc
sbbb
bound
mov
subl
lods
cmc
jg
ljmp
ss
movsb
pop
push
adc
pusha
inc
mov
mov
lock
mov
adc
pop
rorb
mov
mov
in
test
push
rclb
xchg
jl
enter
mov
lods
dec
fsts
decb
lahf
inc
pop
scas
mov
sti
mov
mov
mov
scas
mov
in
xlat
mov
sub
push
lret
cltd
lock
rcll
cmp
lods
aam
insb
iret
daa
mov
mov
ret
inc
jb
test
shlb
pop
push
out
nop
loop
arpl
jno
ja
dec
outsl
push
add
lea
lcall
xor
dec
out
addr16
inc
adc
hlt
jns
jb
sbb
jns
mov
push
loope
sbb
xor
mov
mov
mov
ds
jmp
mov
cli
leave
dec
loopne
cmpsb
notl
nopl
jno
xor
xor
or
sti
jmp
mov
lret
pop
fldpi
insl
js
cli
loop
sub
jecxz
aam
add
leave
mov
xchg
push
inc
fdivp
leave
push
push
out
xor
sbb
test
pop
sub
dec
out
mov
stc
xchg
js
jae
push
in
clc
iret
xchg
add
sbb
add
or
and
xchg
sub
adc
mov
jae
pop
sbb
sbb
mov
inc
push
inc
mov
xchg
dec
or
cs
ds
inc
out
bound
xchg
add
ficompl
loop
icebp
scas
ds
outsl
punpckhdq
pop
push
test
mov
movsl
add
shrl
xor
jns
add
dec
mov
movsb
inc
aam
push
push
or
sahf
mov
add
movsb
lea
inc
push
push
mov
arpl
sub
lret
aam
pushf
xchg
add
stos
sbb
jo
lret
mov
push
psubusb
cs
mov
sarl
xor
push
cld
pusha
cli
movsl
dec
sbb
nop
or
cmpsl
pop
xchg
pop
push
cld
inc
jb
dec
mov
arpl
aaa
mov
cs
pushf
mov
xor
xchg
push
fmull
xchg
dec
mov
dec
scas
imul
pop
jp
ljmp
xor
inc
push
mov
xlat
pop
leave
sbb
clc
loopne
mov
pop
inc
aad
scas
pop
push
daa
int3
sbb
mov
pop
sbb
push
jns
jno
pop
inc
sbb
inc
inc
aad
aad
dec
loopne
pop
int3
xchg
cmp
addr16
fsubl
xchg
movsl
sbb
adc
push
push
imul
add
inc
push
int
leave
loopne
push
xchg
repnz
test
xor
leave
into
xor
loope
out
sub
jmp
sub
add
stc
cmp
insb
js
jg
popf
jge
inc
sub
sbb
mov
add
jl
lea
inc
or
cmp
mov
add
xchg
sub
pop
lret
mov
insb
hlt
popa
clc
and
sti
jg
sub
stos
inc
or
mov
out
test
push
mov
pop
jmp
dec
pop
or
daa
cs
mov
push
shr
mov
dec
xchg
stos
add
popf
out
pop
push
int
xor
subl
repnz
sub
jne
xchg
call
jno
popf
lods
mov
pop
insb
and
daa
lahf
mov
scas
mov
mov
out
es
adc
cmpsb
lock
leave
xlat
or
cmp
dec
xor
cs
in
pop
ds
pushf
and
sub
pusha
jmp
dec
sbb
mov
jnp
mov
js
inc
pushf
xlat
sarl
push
fstpl
mov
mov
add
and
mov
jg
lea
push
mov
add
lds
mov
pop
jmp
push
jbe
pop
sahf
imul
cmp
jb
test
test
in
call
sahf
push
adc
pop
rorb
jbe
filds
or
push
cmp
sti
xchg
in
mov
aam
sbb
test
rcll
into
das
sti
pop
add
mov
test
icebp
dec
fidivl
xchg
pop
mov
dec
jg
pushf
xor
fistpll
cmpsl
mov
and
imul
arpl
out
ret
dec
and
out
pop
out
insl
fldcw
pop
cltd
xchg
cli
xchg
sbb
mov
cli
test
insl
ss
js
push
hlt
mov
xchg
lock
pop
divb
push
jge
inc
daa
push
je
out
jl
sub
sub
cmp
and
fistps
lea
pop
ja
fnsave
xchg
inc
pushl
nop
mov
jle
pushf
loope
lods
inc
pushf
pop
cmpsb
inc
pop
jge
jmp
inc
sub
dec
inc
sbb
dec
fwait
dec
pusha
mov
nop
out
icebp
data16
mov
out
and
push
mov
dec
popa
inc
test
lds
mov
mull
sbb
jae
add
push
mov
testb
push
lea
xchg
hlt
jb
es
jne
ljmp
fwait
aas
mov
testl
mov
subb
mov
cmp
push
addr16
adcl
add
fs
fimull
mov
dec
shr
mov
movsl
in
xchg
or
fwait
pop
mov
mov
pusha
push
rcrb
data16
lcall
mov
cmp
bound
cli
pushf
add
and
ret
pop
sub
loopne
pushf
scas
xor
stc
push
cmp
xlat
push
cmc
aam
mov
adc
popa
and
enter
es
sti
out
imul
jge
pop
add
ficomps
adcl
jg
out
mov
lock
sub
pop
shrb
sbb
lea
mov
cwtl
testl
mov
mov
cwtl
push
mov
addb
iret
jecxz
xor
xor
aas
in
pusha
pop
mov
dec
fists
shlb
outsb
push
inc
pop
ja
xor
push
inc
iret
push
rdpmc
fnstsw
xor
cwtl
shrl
mov
pop
adc
and
ljmp
sbb
ss
sti
rclb
cmp
das
inc
dec
loope
mov
push
rcll
test
xor
daa
test
mov
imul
or
adc
pop
cmpsb
out
insl
jecxz
fnstenv
fistpl
add
xchg
or
fcmovnb
pop
or
out
data16
movsl
pop
inc
pop
dec
sbb
leave
push
mov
or
lret
lods
loop
fistpll
dec
sub
loopne
ljmp
leave
sti
dec
push
xor
leave
es
imul
lds
sti
dec
push
pop
push
rolb
push
test
int
mov
sahf
insl
sti
cmpsb
push
jl
sub
pop
icebp
inc
mov
xor
add
add
stos
push
lock
jb
pop
xorl
pop
dec
mov
sbb
mov
sub
lret
enter
es
mov
lret
push
cwtl
push
xchg
add
bound
leave
cli
or
outsl
jmp
and
and
jnp
xlat
pop
les
std
xchg
iret
xchg
pop
and
inc
in
pop
cmp
lds
mov
outsb
loopne
or
inc
mov
push
loopne
xor
inc
cltd
push
dec
clc
in
pusha
out
sti
or
call
sahf
sub
mov
popf
or
repz
dec
shlb
inc
leave
jne
push
aam
sub
ljmp
gs
xchg
mov
enter
cmpsb
or
cmp
popf
cmc
mov
pushf
outsb
aam
fwait
mov
push
xchg
push
add
inc
or
out
add
and
mov
mov
icebp
jl
sbb
pop
imul
mov
or
in
daa
pop
aaa
test
ja
movsb
test
mov
sub
adc
pop
test
ja
pop
push
mov
imulb
rcll
sbb
jecxz
push
mov
mov
jae
sub
push
jo
es
inc
or
aam
and
or
pop
inc
lods
test
aad
mov
push
pop
andb
jle
hlt
jge
pushf
idivb
xor
jg
das
adc
and
jae
sbb
inc
cmp
jl
sbb
push
cmp
push
push
fdivl
mov
in
inc
jmp
add
sbb
cli
rcrl
rorb
andl
and
sub
xor
jne
add
dec
fistps
cmp
loope
mov
mov
ret
pusha
bsr
in
outsb
push
fnstenv
mov
pop
add
cmp
sti
push
shr
jl
and
adc
aam
xor
popf
xor
ret
jge
xlat
sbb
sub
fiaddl
sub
sahf
push
inc
into
idivl
jno
push
push
push
pop
popa
sub
jno
test
lcall
mov
push
xlat
std
rorl
out
sbb
cld
int
testl
push
cmp
aad
es
popf
mov
pop
adc
sub
inc
inc
or
jl
pop
pop
jne
push
cmp
out
dec
movsl
sub
xchg
sub
mov
popa
and
xchg
or
loop
insb
out
iret
std
mov
inc
into
jp
jns
data16
mov
adc
aas
mov
adcb
lret
xchg
sub
ret
shlb
sub
dec
lahf
add
movsb
shlb
lods
movsb
push
jp
addb
arpl
sub
scas
rorl
stc
mov
shl
mov
mov
jmp
fs
data16
inc
and
pushf
and
pop
adc
ret
jle
inc
inc
mov
and
mov
int3
mov
aam
cs
mov
or
ret
repnz
sbb
pop
imul
data16
clc
repnz
sbb
lods
outsl
inc
rcl
lds
rcrl
cpuid
push
jns
adc
pop
cwtl
cmp
lahf
and
cwtl
das
ja
test
mov
cmpsl
psubusb
ja
or
test
sub
sbb
call
jo
repnz
fidivl
sbbb
pop
cmpsb
ja
add
fcompl
fs
push
mov
mov
sbb
lods
subl
aad
js
or
ja
mov
es
xlat
outsl
fidivrl
inc
lds
dec
cwtl
and
pop
fbstp
push
sub
xchg
push
push
mov
or
dec
fidivrs
call
stos
push
data16
or
dec
pop
inc
fsubrs
pop
jne
cwtl
stos
inc
fimull
lock
fldt
lds
std
pop
cmc
cmp
sub
pop
inc
sbb
daa
aas
add
fnstsw
mov
shlb
insb
adcb
inc
ret
inc
pop
cmp
sbb
cmpsl
sbb
std
pop
stc
out
sbb
daa
shr
sub
insb
cmc
dec
jle
enter
dec
aam
cmp
sub
lretw
pushf
dec
xor
scas
in
into
xchg
rorl
scas
pop
and
imul
xor
in
inc
push
inc
imul
xchg
jmp
dec
push
mov
imul
mov
test
jp
push
push
sub
xor
out
pop
ret
push
jo
xor
xchg
hlt
fs
gs
adc
lods
gs
ja
inc
xor
arpl
loopne
and
in
test
scas
pop
imul
mov
xchg
cltd
xor
push
fisubrs
lret
add
xor
jne
ret
mov
lea
and
push
inc
in
push
and
mov
or
sub
lods
test
xchg
mov
hlt
fs
add
dec
cwtl
call
add
jns
clc
iret
add
fimuls
mov
gs
fistps
mov
bound
pop
cmp
testl
loop
xor
xchg
pop
cli
push
pop
and
xchg
jle
idivl
or
mov
xor
insl
mov
jge
js
insl
jne
fisttps
hlt
mov
sbb
lods
in
test
jbe
xor
mov
push
lods
push
xchg
jecxz
lahf
xor
lock
aad
dec
inc
pusha
mov
sbb
cs
adc
cmp
xorl
dec
sub
xchg
mov
mov
hlt
pop
pop
xor
pop
int
dec
inc
xchg
js
fdivp
jg
cmpsl
mov
mov
pusha
push
test
lret
pop
stc
push
int
in
test
or
dec
mov
sub
test
test
xor
cmp
mov
test
inc
xchg
adc
adc
idivb
dec
dec
scas
inc
cmp
adc
jne
xor
cwtl
je
and
pmuludq
adc
imul
mov
into
imul
popf
adc
mov
jno
nop
and
cltd
subl
adc
mov
xor
push
pushf
xor
call
and
and
lcall
and
jae
ret
mov
add
repnz
push
jns
mov
fldcw
cli
cli
call
inc
pushf
popf
cmpsl
int
inc
push
lret
mov
imul
cmpsb
in
mov
pop
cltd
mov
dec
cmp
outsb
xchg
sbb
rcll
sbb
loopne
insb
sub
call
or
sub
mov
subb
pop
orb
cmpsl
push
dec
cmp
jns
popf
test
add
outsl
dec
inc
cwtl
jno
dec
insl
xchg
mov
outsl
adc
les
mov
out
push
inc
cmc
cwtl
sub
mov
dec
loop
addl
call
rorl
dec
scas
or
dec
imul
add
dec
add
inc
xchg
lea
arpl
or
mov
cltd
sub
mov
jmp
flds
xchg
mov
inc
push
lret
and
dec
out
dec
cld
ret
je
data16
jns
enter
sub
jge
lods
loopne
stos
or
decb
pop
lcall
out
jnp
fsubl
out
adc
mov
mov
mov
add
aad
inc
add
jl
mov
or
xor
leave
xchg
js
adc
mov
mov
stos
cmp
mov
cmp
lock
fiadds
mov
bound
jbe
push
mov
pop
sahf
push
dec
add
xlat
add
cltd
popf
jg
sub
push
icebp
mov
imul
cli
inc
push
adc
adc
std
or
push
imul
test
jae
pop
scas
cmp
insb
rcrb
cmp
fbld
inc
flds
or
jno
push
test
mov
testl
cmp
push
push
outsl
rcrb
mov
es
repnz
and
fisttpl
lods
sbb
inc
push
or
hlt
or
fistps
push
pop
push
jle
pop
jae
jae
sbb
popa
adc
testb
jecxz
aam
xor
pop
mov
lea
lods
jg
js
sub
lret
dec
pop
emms
imul
repnz
push
jecxz
mov
aas
clc
pop
adc
xlat
outsl
cli
roll
push
and
pop
out
cld
data16
and
sahf
pop
jbe
dec
das
lea
mov
jmp
xchg
psrad
popf
push
sub
adc
out
xor
daa
sub
push
add
les
in
adc
sti
xchg
jmp
add
add
mov
push
cmpsb
sbb
add
mov
fst
mov
nop
ds
js,pt
mov
dec
sbb
out
dec
aad
ja
mov
mov
mov
ret
popf
xor
push
fld
faddl
push
or
jb
test
rol
pop
adc
and
in
add
ds
sbb
test
lcall
inc
addr16
jne
popa
aam
adc
push
inc
mov
mov
cwtl
push
imul
in
lds
mov
ret
xor
mov
rcll
icebp
lret
or
xor
or
push
in
xor
in
das
js
jae
stos
lds
fsts
das
popa
jnp
xchg
sbb
jae
repnz
dec
mov
add
cli
jg
sub
mov
faddp
sbb
orb
dec
cmp
scas
and
and
push
cli
into
and
xchg
fwait
adc
mov
fmull
lcall
hlt
outsb
jmp
cltd
mov
ja
add
mov
lahf
push
sbb
push
in
xchg
pusha
popa
divb
mov
mov
push
test
push
inc
add
ror
fiaddl
sub
aaa
popf
pop
xchg
jo
loop
and
stc
je
in
and
enter
pop
shrl
ffreep
dec
push
xor
jo
sti
add
sub
ss
in
aas
fwait
push
xor
sub
int
nop
xrelease
cmp
fcoml
sub
sarb
and
rol
out
pop
test
and
in
adc
std
mov
pop
addr16
pop
push
out
fbstp
and
or
add
ds
mov
and
sub
sbb
icebp
xor
adc
pop
mov
dec
mov
mov
pop
shrb
testb
adc
mov
test
inc
cmpsb
sbb
lahf
stos
movsb
lret
mov
push
ret
cltd
fidivrl
mov
sub
xchg
pop
inc
ds
notl
sub
push
push
dec
fbld
adc
add
fists
dec
loope
lahf
sbb
adc
cmp
or
mov
cmpsl
je
mov
pop
pop
scas
loope
outsl
jo
or
xlat
decb
addr16
push
and
cwtl
xchg
xor
ficompl
aad
cltd
imul
int3
push
mov
movsb
adc
aas
iret
int3
sbb
test
out
inc
xchg
mov
enter
je
cmp
xchg
pop
pop
pushf
jmp
pop
hlt
sbb
or
xchg
lea
cmpsl
rcll
xrelease
popa
iret
repnz
std
add
addb
ds
mov
std
adc
call
icebp
sbb
and
add
outsl
ret
cli
lret
test
ds
mov
imul
jnp
sbbl
out
addb
add
fsubl
repnz
decl
sbb
cmpsl
cmp
jg
pop
xor
dec
dec
xor
imul
mov
mov
shrb
jmp
pop
vphsubdq
loop
mov
outsl
jge
cwtl
rcll
and
rclb
bound
lret
jg
add
rolb
add
loopne
or
sub
mov
add
push
mov
pop
in
pop
movsl
lret
jo
mov
adcb
push
and
push
adc
int
stos
jmp
loop
xchg
fdivr
or
cmp
push
insb
mov
imul
aas
xchg
test
mov
lds
pushf
scas
pop
scas
clc
loopne
mov
mov
and
mov
push
imul
je
add
mov
inc
jo
jmp
cmp
in
xor
mov
jmp
or
test
decb
cmpsb
jle
adc
iret
loop
cmp
outsb
push
dec
jecxz
movsb
cmc
fcmovu
lahf
push
dec
es
push
inc
mov
jle
and
mov
dec
pop
mov
push
ja
lahf
ret
iret
data16
insl
add
fnstenv
add
xor
push
fdivp
ja
inc
shll
xchg
dec
inc
pop
cmpsb
mov
mov
xor
rcrl
mov
cmp
outsl
xorl
dec
or
cmp
jl
xchg
movl
jb
xchg
cs
pop
mov
mov
cmp
mov
and
addl
adc
ds
mov
and
icebp
or
inc
push
pop
out
sti
add
cmp
mov
add
sbb
cmp
in
jp
push
not
outsb
icebp
pop
xchg
shl
adc
adc
add
repnz
jns
out
clc
clc
jecxz
ficompl
in
mov
cmp
dec
push
les
mov
dec
mov
ja
mov
nop
dec
push
lret
mov
shll
cwtl
mov
sbb
fdivrl
cmpsl
insl
sub
sbb
push
repz
outsb
test
shll
mov
mov
fs
mov
cmp
daa
std
push
xchg
adc
push
xchg
xchg
sub
clc
imul
inc
stos
out
fsubrl
mov
mov
and
sub
mov
es
scas
push
pop
adc
cwtl
clc
xor
or
jno
nop
stc
dec
cmp
sbb
test
or
ficomps
sub
ds
rorb
mov
ret
stc
ret
xor
pop
inc
pop
cmp
in
and
gs
jle
cmp
dec
js
cmp
mov
rorb
mov
xchg
in
sub
cmpsb
ror
and
cmp
shlb
cmp
out
test
leave
fsubr
cmp
or
jge
repz
jmp
xchg
mov
pushf
add
outsl
loop
scas
and
imul
aaa
das
add
pop
mov
lea
push
xchg
mov
pusha
xchg
lods
pop
inc
or
cmp
cmp
adc
push
and
push
mov
inc
and
leave
iret
mov
out
enter
leave
outsb
add
in
rolb
add
pop
cmp
fildl
aas
pop
sub
adc
lds
outsl
sub
cmpsl
xor
sbbl
or
inc
adc
cmc
popa
adc
scas
push
lret
out
mov
and
xor
add
mov
fistpl
sub
push
push
pop
jmp
addr16
jle
mov
out
lock
or
ds
cmp
notb
stos
outsl
pop
mov
xlat
cmp
and
loop
out
stos
lret
mov
or
fdivl
mov
andb
hlt
imul
aas
int
jbe
pusha
insl
les
cmpsl
fstpl
fwait
das
push
je
repz
dec
fs
outsl
cs
jb
aaa
movsb
or
mov
pop
pop
adc
add
add
daa
sub
lds
movsl
sub
sbb
rol
fldl
inc
add
mov
stos
lods
aam
pop
pop
adc
ret
push
xor
daa
icebp
lods
push
ljmp
jno
je
mov
jge
into
into
sub
or
mov
lea
xchg
lods
popa
lcall
xorb
pop
xor
shll
and
jo
adc
lcall
or
sbb
arpl
subl
xor
adc
mov
xor
xchg
std
jmp
push
sbb
cmp
jb
mov
cmp
xchg
push
sbb
lods
out
jmp
xchg
xor
push
out
sbbb
mov
shlb
sahf
mov
loopne
inc
xchg
and
lods
sti
inc
push
xchg
mov
jno
sub
sbb
aaa
mov
aas
sub
and
hlt
xchg
sub
adc
pop
sub
add
dec
xor
or
hlt
cmp
dec
dec
push
adc
test
fstpl
sbb
hlt
subb
xchg
adc
lods
scas
mov
je
push
imul
inc
jecxz
sub
shr
pusha
dec
loope,pt
sbbl
mov
loope
jnp
adc
shl
testl
es
push
dec
fbstp
push
cli
or
out
mov
arpl
ljmp
inc
inc
mov
xchg
inc
sbb
lcall
bound
lods
cmp
or
fwait
inc
loope
dec
xchg
sub
fdivl
xchg
out
push
mov
push
lods
ja
pop
mov
push
jo
mov
lock
xchg
aas
aas
push
push
popa
clc
xorl
xchg
test
mov
test
out
sbb
aas
mov
test
in
out
lods
mov
dec
movsb
sbbb
jb
inc
push
sub
push
stos
aaa
jno
ss
mov
rcrb
in
pop
out
sbb
jb
cmp
inc
xor
pushf
mov
dec
mov
add
xchg
push
inc
fisttps
push
jne
dec
mov
cmp
lea
cmp
cmp
or
lahf
or
add
subl
mov
pop
add
push
hlt
popf
sub
jbe
and
xlat
xor
mov
aam
and
pop
pushf
fcomps
fimull
xor
pop
bound
mov
scas
push
fsub
mov
fcomps
mov
pop
xchg
loope,pt
int3
out
cmp
push
call
cmp
sahf
mov
lcall
mov
inc
shlb
cmp
dec
push
mov
push
pop
cmpsl
ds
and
cmpsb
and
pop
repz
mov
add
pop
mov
inc
xlat
and
lahf
adc
inc
fsubr
or
movsl
das
repnz
stos
dec
mov
jg
cmp
mov
movsb
inc
clc
mov
dec
mov
and
out
loopne
pushf
sbb
cmpsb
add
scas
mov
addb
mov
xchg
out
jns
mov
fisttpl
mov
cmp
je
lea
push
outsb
orb
test
dec
mov
pushf
movsb
jg
lods
orb
inc
push
mov
lock
and
enter
in
pop
push
je
cmp
insb
dec
cmpsb
test
fsubrs
and
add
pop
mov
pop
dec
or
testl
xchg
pop
divb
jmp
cmp
xor
shll
push
push
out
testl
pop
test
movsl
sbb
cli
pushf
cmp
ljmp
push
ficompl
xor
ljmp
mov
pop
in
aas
push
cmp
das
repnz
xor
jno
out
mov
pop
jbe
jns
xchg
inc
xchg
mov
mov
popf
or
icebp
adc
jp
sub
and
popf
xor
pop
mov
sbb
inc
pop
out
fwait
mov
rorb
mov
xlat
xchg
lock
lods
xchg
and
add
xchg
lods
or
arpl
sub
mov
insl
rolb
pusha
cmc
gs
fmul
jns
inc
data16
mov
outsl
and
idivb
xlat
mov
dec
loop
test
push
pop
xor
out
pop
jge
lds
lret
dec
loop
insl
sbb
out
aam
sbb
lock
or
out
rcrl
xchg
insl
mov
pop
mov
or
subb
mov
mov
sub
mov
pushf
subb
cmp
lds
loope
jge
jnp
ss
hlt
inc
push
push
add
js
pop
shlb
sti
xorb
rcrb
sub
or
stc
adc
es
jbe
cmp
jne
mov
inc
xchg
out
mov
inc
stc
mov
dec
outsb
out
popf
xchg
mov
mov
cmpsl
decb
pushf
mov
pop
jae
jle
movsb
xchg
cld
stos
lea
xchg
sarl
mov
lret
pop
aaa
int
mov
pop
push
jno
push
jecxz
in
mov
add
xchg
adc
dec
jp
inc
push
out
addr16
pop
jne
popa
cmpsb
push
call
xchg
cli
mov
push
rolb
sub
imul
loopne
sub
inc
and
mov
ret
arpl
pop
test
stos
enter
cmpsl
mov
inc
out
xor
in
int
inc
ljmp
pop
imul
xchg
xchg
sub
imul
in
imul
mov
es
int3
pop
xor
sbbb
or
sub
fsubrl
rcrl
inc
pop
scas
das
mov
pop
nop
push
movsb
loopne
sub
les
adc
jge
pop
js
push
mov
sub
xchg
mov
cmp
push
aas
lods
mov
mov
insl
rcrl
pop
cmc
cmpsb
jle
into
enter
pop
pop
mov
mov
xchg
cwtl
sub
lds
add
pop
jb
mov
mov
cmp
inc
nop
fcoml
xor
sarb
imul
inc
push
jns
adc
cld
lcall
cmp
jnp
sbb
add
jp
ds
xchg
mov
divl
sbb
xchg
fs
dec
stos
imul
es
pop
int3
and
gs
lods
mov
aad
call
mov
lret
clc
pushf
jmp
js
jg
jmp
imul
sbb
jb
movsl
aaa
sbb
imul
pop
cmc
fwait
add
dec
mov
pop
test
mov
sbb
les
stc
inc
stc
inc
pop
dec
or
adc
xchg
add
mov
push
mov
mov
lods
sub
sub
aad
ret
sub
cmp
fwait
das
pop
dec
push
mov
mov
adc
aaa
sbb
xchg
xor
or
jecxz
or
inc
add
repnz
mov
test
hlt
jnp
das
xor
pop
jbe
push
iret
fucomi
push
out
popf
jns
dec
xor
ljmp
repnz
and
fistl
lea
mov
cltd
popa
clc
ljmp
push
sub
nop
xlat
imul
test
fwait
inc
pop
ffreep
shlb
mov
cmc
pop
cmp
mov
push
mov
add
scas
push
testb
sbbb
and
adc
inc
pop
cld
xor
jg
clc
lds
mov
or
pusha
ds
iret
mov
cs
jbe
cmp
xchg
mov
jp
fldl
lahf
xchg
stos
pop
and
push
jb
mov
and
aad
xchg
clc
push
mov
and
iret
xor
movsl
pusha
sbb
pop
dec
stc
je
cmc
push
push
stos
mov
xchg
lret
lcall
lds
mov
cld
cmp
sahf
adc
jge
xchg
mov
scas
pop
ljmp
or
rcl
sub
fiaddl
js
mov
clc
xchg
aaa
mov
fildl
leave
xor
push
popa
or
fwait
or
rorl
in
adc
in
inc
int3
cmp
je
das
lret
imul
inc
movsl
dec
xchg
push
scas
and
movsl
stos
jo
adc
mov
lea
jecxz
aaa
pushf
and
in
test
repz
adc
nop
test
loop
gs
lods
mov
sub
jge
adc
cwtl
pop
or
adc
lret
aad
xor
or
aam
xchg
pushl
psllq
jge
mov
mov
aas
pop
fdivrl
push
iret
loop
jbe
mov
arpl
fidivrl
adc
test
jge
mov
pop
adc
push
outsl
or
xchg
je
icebp
movsl
mov
add
jae
cltd
xor
push
mov
dec
push
cmp
shl
mov
inc
xchg
lahf
nop
daa
mov
fildll
test
aas
or
dec
xchg
adcb
dec
ffree
pop
paddsw
sub
mov
out
notl
mov
filds
add
lods
jp
pop
stos
or
in
sbb
dec
pop
and
sub
dec
pop
cmp
xchg
fisubl
fistpl
xchg
repnz
mov
cld
pop
mov
outsw
sub
sarl
jb
test
push
pop
out
inc
mov
xor
jp
int
mov
nop
jle
pop
scas
cs
xchg
cli
daa
adc
xchg
dec
sub
xchg
aam
pusha
mov
ja
mov
mov
mov
imul
into
fsubl
popf
lods
fld
push
or
imul
insl
stos
and
pushf
and
pop
xor
xchg
adc
add
push
in
insl
sub
pop
pop
jo
sub
je
mov
mov
stc
xchg
call
cmp
push
rcrl
cmpsb
add
icebp
adc
mov
xchg
into
mov
aam
dec
movsl
and
add
stos
and
xlat
ficomps
bound
shll
jo
push
lock
xchg
cmpsb
cmp
fs
les
lods
mov
stc
stc
bnd
and
popf
push
dec
cmp
mov
sbb
mov
or
jg
jo
add
or
mov
or
cwtl
push
scas
add
mov
cmpsb
out
cwtl
call
cmp
cmp
out
icebp
dec
cmp
xlat
sub
pop
and
push
jmp
out
jnp
insl
xchg
roll
sub
std
mov
mov
fs
push
add
pop
mov
sub
and
cmp
dec
jge
jno
insb
pop
lods
push
pop
fsubrl
add
psubd
inc
xchg
lods
jl
data16
dec
sahf
sbb
loopne
std
mov
movsb
out
and
insb
ss
add
xchg
xor
sbb
jbe
mov
fistps
jne
mov
add
mov
push
fucom
out
fmuls
mov
mov
xchg
add
out
popa
repz
xchg
inc
dec
or
icebp
cmpsb
jbe
iret
testb
arpl
push
mov
pusha
fdivs
out
std
pop
lock
pop
adc
push
int3
sbb
add
stos
es
mov
xor
out
pusha
cmc
movl
pusha
cmp
push
je
adc
dec
xchg
cmpsb
ds
mov
push
sti
sbb
sub
out
add
sub
ja
and
pushf
inc
mov
jb
xchg
dec
xchg
xchg
push
sahf
mov
shlb
and
push
pop
aas
dec
jae
fmuls
cmc
push
dec
cmpsl
stos
mov
mov
movsl
test
add
fs
cld
adc
out
inc
lret
and
out
push
addr16
mov
dec
sub
ljmp
adc
adc
pop
ljmp
push
js
sbb
cltd
and
addr16
xor
mov
cmp
mov
negl
push
mov
fsub
lea
xlat
aam
or
ds
sub
cmpb
or
sbb
dec
daa
mov
mov
sbb
xchg
imul
aaa
into
aam
ror
ljmp
inc
lahf
sbb
fs
jmp
mov
je
andl
inc
clc
inc
lret
or
cld
sub
jnp
push
xorl
cld
mov
adc
iret
loope
repz
sub
fxch
sub
stc
add
sbb
adc
enter
stc
jmp
in
insl
test
cmp
iret
pushf
rcll
rcrb
in
mov
out
push
ja
rolb
fdivs
iret
xchg
test
out
call
sub
xchg
and
jp
sbb
or
jbe
xor
movsb
outsl
pusha
push
and
jno
inc
xchg
xor
inc
and
je
push
stc
jbe
xchg
mov
jmp
xchg
inc
jg
enter
out
xorb
adc
ror
movsl
in
xor
and
fcomi
xchg
imul
fidivrl
and
test
ret
and
fildl
out
daa
dec
push
adc
pop
mov
std
lods
cmp
push
nop
inc
xchg
pop
roll
ss
inc
xchg
lcall
pop
jbe
or
dec
push
movsl
push
sub
cmpsl
add
das
mov
push
push
sub
stos
std
imul
ja
cmp
testl
sbb
mov
loop
push
cli
jne
mov
fdivl
cmpsl
ret
pop
mov
sbb
jmp
push
loop
sbb
faddp
js
and
add
sbb
inc
js
mov
std
inc
inc
rorl
pop
push
and
push
push
in
andl
mov
mov
clc
int
faddl
add
lock
inc
loopne
jmp
pop
and
or
lds
call
out
xchg
or
movsb
mov
les
cmpsb
jmp
pop
cmp
inc
push
cmpl
xchg
jnp
mov
mov
mov
push
mov
popf
roll
mov
push
imul
xchg
rol
xlat
mov
jp
scas
lret
int3
mov
or
lret
ljmp
xchg
inc
fcmove
outsb
dec
test
mov
xor
cmp
js
sbb
and
stc
popl
push
xor
les
mov
push
pop
mov
pop
jne
cmp
jp
cmc
lods
xchg
cmpsb
xor
stc
jl
scas
pop
je
or
scas
imul
or
fcomps
mov
jg
adc
mov
cmpsb
in
notl
pop
ljmp
jecxz
lret
xor
mov
inc
mov
mov
or
xchg
push
dec
jo
adc
mov
mov
aam
or
aaa
das
pandn
xchg
xor
test
aam
lds
dec
or
adc
push
inc
fstpl
mov
aas
push
push
leave
pop
and
dec
data16
shll
mov
mov
jnp
fldcw
sub
adc
push
inc
and
push
push
andl
jmp
lea
cmp
add
push
mov
in
or
adc
das
ljmp
jno
push
jecxz
lds
add
bound
or
mov
clc
push
aaa
out
cmpsl
ret
dec
out
into
insl
sub
mov
pop
cmpb
in
pushf
dec
adc
and
sbb
push
dec
and
jg
mov
loope
push
mov
out
jl
pop
xchg
ret
add
mov
sub
std
loopne
push
gs
push
push
out
inc
sbb
xor
sti
inc
cwtl
inc
aad
xor
ljmp
pop
mov
ljmp
in
aam
aas
out
in
std
pushf
sbbl
jnp
lcall
scas
mov
jg
cltd
push
xor
and
mov
test
jo
inc
ljmp
popa
sbbl
int3
adc
add
add
fucomi
gs
jmp
bound
mov
push
and
loopne
cmp
lods
scas
in
pusha
or
sub
lret
push
in
outsb
fsubrs
lds
xchg
dec
cmpsl
cmpsb
dec
mov
dec
jecxz
jb
adc
mov
mov
xor
mov
std
add
push
mov
lcall
and
pop
jge
push
xchg
dec
stc
insb
cmp
fidivs
xor
jecxz
test
mov
mov
and
mov
inc
in
xor
xor
scas
add
mov
pop
inc
xlat
pop
inc
dec
inc
fidivrl
jecxz
jo
or
sahf
icebp
adc
ja
push
test
pop
mulb
mov
inc
shl
bnd
and
mov
cmpsl
outsb
ljmp
cmpsb
lea
stos
lock
push
add
pop
xor
in
mov
cmpsl
das
pop
dec
cmc
testb
cltd
cmp
neg
pop
inc
cltd
leave
push
lahf
and
mov
lods
mov
add
mov
pop
fwait
outsb
stos
andl
push
pusha
or
and
cltd
popf
decb
xor
xor
pop
xchg
sub
fs
in
add
pop
outsb
pop
sbb
sub
push
add
out
daa
nop
sbb
les
stc
jo
nop
cmpl
inc
mov
mov
ficoml
push
and
inc
adc
jbe
jae
imul
pusha
fldt
mov
test
jmp
in
jns
xor
and
jle
xor
pushf
xor
jmp
mov
fildll
outsb
mov
dec
add
mov
sub
xor
mov
pop
cmp
add
pushf
rcrb
nop
loope
mov
mov
adc
and
inc
mov
test
mov
rorb
sarl
mov
jecxz
and
idiv
jg
test
sti
sti
mov
jg
jae
push
pop
popa
fmull
test
imul
sbbl
cmp
inc
xor
rorb
mov
push
cmpsb
dec
test
cltd
stc
nop
lret
mov
xor
out
mov
mov
add
dec
sarl
sub
xchg
decl
les
sbb
in
push
int
call
pushf
mov
push
test
dec
cli
sbb
popa
add
pop
ds
add
cmp
xlat
lea
cmp
ds
sub
mov
sbb
dec
pop
lret
push
lods
mov
cmpsl
sub
pop
or
and
sub
jp
pop
inc
test
pop
test
inc
or
and
ret
mov
rorb
stos
jle
fs
xchg
pop
test
lcall
bound
add
outsl
jg
push
aas
fisubs
mov
stos
in
cld
xchg
or
mov
insb
insl
lahf
push
pop
push
add
testb
test
das
push
adc
push
sub
fdivrl
mov
std
xor
and
lds
jp
ds
aas
insb
fildll
push
sub
les
vpaddusw
mov
mov
push
jmp
fdivrs
loope
mov
sub
stc
xchg
xor
aam
xor
in
pop
push
and
mov
push
gs
call
in
addr16
stos
inc
adc
ss
jg
sahf
and
or
mov
scas
cmpsl
xor
mov
xor
inc
or
xchg
loop
ficoms
in
into
pop
sbb
arpl
and
inc
fstpl
in
pusha
hlt
jo
fdivs
jb
cmp
push
mov
inc
jns
js
pop
pop
sub
jle
fildll
inc
sti
in
inc
xlat
jbe
das
mov
fildl
jno
nop
call
pop
int
rolb
inc
pop
out
arpl
stos
ljmp
loop
xchg
or
dec
sub
push
lock
js
xchg
pop
ja
add
cmp
dec
jns
lret
and
pop
adc
pop
loop
jp
sbb
sbb
in
push
negb
scas
cmpsl
mov
or
aas
aad
ljmp
mov
push
aam
xor
push
lods
cmc
lea
sbb
push
xchg
aaa
iret
push
xchg
stos
loopne
dec
add
sbb
xchg
jb
mov
sti
sbb
ss
mov
dec
aad
and
fisubrs
cmp
out
xlat
fwait
or
jg
cmc
mov
movsl
xchg
jge
testl
mov
or
shlb
pop
xchg
jmp
lods
mov
int3
inc
xlat
push
xchg
loopne
sbb
faddl
repz
movsb
jecxz
mov
sarl
ffreep
popl
jge
lods
jno
mov
arpl
and
imul
enter
lods
inc
mov
inc
mov
add
sahf
std
fildll
jecxz
bnd
aas
add
mov
add
cmpsl
out
in
xor
lods
nop
xchg
add
dec
cmp
mov
cmpsl
xchg
dec
mov
es
cwtl
and
mov
or
push
mov
sbb
inc
jg
lret
cwtl
and
cmpsl
repnz
add
push
icebp
pop
wrmsr
and
push
andl
mov
lahf
icebp
xchg
and
jne
sub
lock
pushf
pop
sbb
xchg
mov
sub
xchg
in
mov
pop
in
sub
inc
loop
jne
icebp
shrl
add
cs
shlb
inc
mov
out
sbb
aam
jmp
mov
aas
testl
lods
sbb
pop
adcb
movsl
xchg
jle
jb
loope
test
lahf
aas
pusha
mov
loop
adc
and
jg
pushf
cmp
aad
add
das
or
mov
xchg
mov
sahf
imul
repz
fldenv
pop
shlb
xchg
test
xchg
add
xchg
andl
add
cmp
in
mov
fwait
sub
incl
xchg
add
inc
out
mov
cmc
mov
push
jp
pop
or
mov
rcl
daa
sub
pop
mov
add
add
sbb
fs
test
cli
push
xchg
mov
adc
jmp
scas
cmp
pop
dec
imul
push
in
stos
into
fldcw
arpl
out
fdivl
aaa
test
cs
cli
xchg
cmp
sub
scas
xor
ss
sti
lret
repnz
adc
mov
aam
add
movsb
mov
mov
cmp
adc
mov
jae
push
add
mov
and
jmp
or
stos
lds
mov
imul
js
adc
pusha
popf
or
jae
call
dec
push
mov
push
clc
xchg
or
push
mov
test
inc
mov
cmpsl
aad
repz
fidivs
xchg
xor
std
sahf
cmpsb
cmpsl
ret
pop
shl
ja
jmp
insl
in
push
push
push
cmc
and
inc
xor
je
ss
sbb
jo
popa
imul
pop
push
sub
daa
xchg
in
inc
out
arpl
in
into
adc
aam
inc
pop
xchg
mov
pop
and
cmc
fsubs
in
ja
xor
rolb
ja
nop
and
lahf
or
out
mov
cmp
dec
add
add
push
lret
xor
jno
lea
roll
jnp
sub
loopne
in
pushf
xchg
adc
sbb
xchg
xor
int3
mov
inc
adcb
add
dec
mov
ja
es
into
pusha
fsqrt
inc
mov
inc
xchg
cmpsl
dec
scas
jae
loopne
ljmp
jle
push
ljmp
cmp
cmc
fmuls
cmc
or
push
jno
jne
jne
mov
rcll
sarl
mov
add
cmp
sub
fidivrs
mov
outsb
ss
xor
and
enter
xchg
pop
adc
call
mov
cmpsl
add
repz
sub
andb
xlat
ret
hlt
clc
xchg
mov
out
mov
inc
xor
ljmp
subb
sahf
push
pop
roll
jo
fcoml
adc
mov
sar
mov
insb
ret
or
mov
push
jno
loop
aam
sub
jb
cmp
pop
xchg
js
push
insb
add
sbb
loopne
inc
adc
into
cli
hlt
mov
shlb
popf
push
aad
aam
outsl
adc
popa
enter
pop
pop
and
xor
leave
pusha
imul
sbb
add
ds
add
arpl
enter
push
ljmp
adc
rorb
xor
jo
cmp
mov
lcall
in
test
cmp
lods
jp
mov
out
ja
or
rcrb
popa
push
loop
sahf
inc
ds
out
jno
and
pop
pop
sbb
outsl
loop
mov
xchg
daa
ret
inc
jl
or
arpl
fs
mov
inc
mov
jmp
mov
push
jne
out
mov
inc
sbb
popa
decl
scas
xchg
lret
ret
les
int3
daa
ss
std
or
adc
xor
add
push
scas
mov
mov
mov
shll
xchg
loope
jl
xorb
and
sti
jbe
sahf
scas
and
ret
stos
test
push
fcmovb
inc
fsubr
pop
out
testb
and
or
call
leave
aad
sti
shr
xor
push
mov
mov
cmp
push
call
jb
fmull
lret
jne
dec
pop
shlb
out
mov
push
sub
test
mov
add
add
jmp
adc
mov
dec
imul
scas
push
sbb
movsl
dec
sub
sub
out
das
mov
adc
dec
lret
bound
or
sbb
xchg
sub
int3
mov
fs
fbstp
xchg
add
inc
jnp
xchg
jge
loopne
jnp
dec
dec
bound
imul
sbb
sbb
push
push
repnz
jns
lock
lods
mov
adc
pusha
scas
lock
pop
pop
lods
cmp
pop
lret
xor
cwtl
jbe
xchg
xchg
test
stos
adc
rol
mov
testb
adc
push
mov
movsl
inc
mov
jl
fisubl
das
sub
xor
pop
sub
cmpb
jns
out
dec
loopne
jmp
imul
cmp
add
mov
outsl
xorl
mov
adc
in
xchg
lret
aad
cld
mov
push
jmp
jp
mov
or
mov
push
mov
pop
cmp
mov
add
sysenter
cmpsb
repz
cs
push
jns
test
pop
mov
sbb
add
mov
cmpsl
pop
mov
jbe
fs
sbb
push
inc
xlat
mov
pop
movsl
fdivl
inc
clc
inc
jp
jbe
mov
mov
rcrl
test
sbb
movsb
mov
sbb
pusha
mov
add
movsl
call
sbb
add
sbb
pop
inc
mov
test
out
sbb
xor
adc
popf
push
insl
jne
push
mov
jae
adc
leave
insb
cli
inc
pop
repnz
xor
lcall
cli
pop
and
or
jmp
cmp
pop
jb
pop
sub
stos
repnz
jae
sbb
imul
outsl
arpl
inc
or
xchg
lcall
shrb
cmp
xchg
cmp
add
add
loop
sahf
sub
out
mov
shlb
jne
cmp
jmp
jns
repnz
add
imul
shrb
or
push
icebp
mov
fdivrl
adc
test
xchg
lds
inc
fs
loope,pt
add
dec
aas
cld
xlat
aaa
into
pop
fdivl
fdivrl
and
xchg
push
outsb
jp
shlb
pop
inc
loope
dec
or
neg
push
xor
fcomip
mov
cld
cmp
ret
sub
sbb
jmp
add
xchg
dec
rcrl
inc
push
loope
cli
out
push
out
in
clc
dec
cmp
push
arpl
mov
fisttpll
lea
fyl2xp1
lcall
in
stos
mov
cmpsb
sbb
int3
fs
test
push
dec
jb
cmp
stc
nop
ror
stos
fsubrs
cli
or
ret
call
xor
and
add
xchg
repz
push
fcomps
insb
imul
daa
hlt
mov
les
add
mov
sub
insl
jb
xorb
push
pop
sbb
ljmp
mov
js
and
inc
fwait
les
xor
enter
mov
fidivrl
out
jnp
out
xchg
sbb
pop
divb
adc
pop
in
dec
pop
dec
mov
jg
pop
push
jecxz
pop
bound
xchg
sub
add
sub
ret
ljmp
scas
mov
cmc
mov
mov
pusha
sbbl
mov
sti
adc
cmp
adc
inc
loopne
fcoms
mov
repnz
ret
hlt
jmp
cwtl
cltd
mov
cwtl
std
push
sbb
nop
jbe
push
iret
mov
or
push
pop
jmp
jp
sub
dec
xor
out
notb
mov
leave
repnz
test
sub
mov
scas
push
pop
outsl
daa
aam
pop
aas
pusha
mov
outsl
loop
ret
mov
mov
xchg
sbb
mov
mov
or
daa
mov
ljmp
les
cmc
add
and
xchg
dec
or
dec
xchg
sub
icebp
stc
lea
das
xor
xchg
add
mov
push
jne
xchg
xor
cwtl
push
into
lock
loop
icebp
xchg
popa
pop
mov
bnd
in
int
movl
mov
orb
je
inc
stos
pop
dec
pop
pop
scas
mov
daa
mov
test
jmp
mov
lcall
sub
les
cmp
andl
cltd
or
mov
in
lds
cmpl
lahf
sbb
add
das
stos
inc
push
jp
lret
mov
gs
pop
iret
pop
inc
imul
in
aam
stos
and
jle
add
int3
shlb
sbb
lahf
add
mov
loope
push
sbb
inc
jge
ret
mov
in
arpl
icebp
int
lahf
push
adc
mov
stc
lea
push
cs
push
ret
daa
push
ret
sub
and
lret
jle
sbb
pop
lds
jp
in
cmp
fcompl
lods
mov
shrl
outsb
sbb
push
jns
inc
push
inc
pop
or
pop
out
dec
pop
or
sbb
lahf
add
adc
outsb
jae
push
movsl
adc
jo
mov
inc
mov
sbb
ds
decb
cmc
mov
or
dec
cltd
ljmp
or
add
xor
nop
dec
nop
in
fwait
xor
mov
clc
push
testl
in
std
pop
jno
xor
call
cmp
cltd
imul
cmp
adc
mov
test
adc
nop
mov
outsl
sub
inc
testb
mov
leave
int
clc
in
xchg
jmp
testl
in
mov
or
repnz
or
stc
add
decb
iret
or
jns
out
lds
or
push
mov
xlat
and
xlat
mov
xorl
mov
mov
pop
jnp
dec
sarb
push
xor
pop
movsl
cmp
push
xor
adc
push
pop
gs
xchg
fs
add
ja
in
mov
dec
xchg
and
jecxz
push
mov
add
aad
dec
inc
dec
sub
dec
mov
inc
push
pop
mov
adc
xor
outsl
cltd
xor
add
pusha
mov
cli
addb
mov
sub
ds
pop
mov
ss
add
lods
xor
xor
and
icebp
int3
and
and
ja
imul
loopne
xchg
sub
sti
mov
dec
fisttps
and
ret
bound
movsb
nop
sub
bound
push
lahf
dec
scas
mov
rcrb
sahf
sbb
add
pop
pop
cmp
lea
pop
mov
sahf
xor
sqrtps
dec
pusha
jae
in
dec
sbb
and
and
std
pop
not
or
jp
jge
or
jae
and
inc
push
pop
mov
add
es
mov
xor
push
inc
push
xor
dec
loop
xor
add
fsubrl
aas
aad
pop
inc
pusha
cli
arpl
sub
fwait
xor
pop
jae
xchg
mov
and
icebp
stos
inc
fucomip
xchg
mov
xor
mov
cmp
cmp
jmp
lcall
inc
and
enter
xchg
mov
jae
int
out
add
popf
stos
mov
xor
jne
mov
inc
ljmp
xlat
imul
inc
jo
sub
shl
lea
sub
pushf
push
inc
mov
dec
fldt
les
insl
dec
inc
fdivrs
ret
movsb
pop
not
cmp
push
dec
xchg
je
lahf
fcmovbe
lds
and
das
js
clc
adc
ss
hlt
fisubs
mov
or
stos
mov
daa
stc
sar
test
jl
adcb
sahf
repnz
push
push
lahf
testl
ror
cmpsb
and
push
enter
movsb
xchg
sub
push
aam
push
test
in
sahf
in
nop
dec
mov
aas
jge
xchg
add
repz
or
lahf
xchg
mov
mov
lods
outsb
in
jns
sbb
dec
add
sub
cmp
movsb
ss
call
rcll
das
xor
jbe
pop
jmp
add
call
cs
imull
enter
adc
mov
out
xchg
lahf
stos
jns
push
clc
cmp
xor
sbb
xchg
mov
cmp
andl
sub
pop
stos
sahf
xor
jne
js
in
ret
les
lret
int3
pop
movsl
icebp
inc
loope
and
iret
pop
hlt
add
mov
pop
and
cmp
test
movsl
insb
push
sbb
fdivl
nop
out
sti
or
loope
cmp
in
cmp
push
xchg
add
sarl
cmp
fnsave
xchg
cmp
lahf
add
bound
jb
addr16
sbb
lret
sti
cltd
rclb
jg
ljmp
mov
ficomps
sub
inc
pop
or
add
inc
dec
clc
and
addr16
mov
adc
arpl
icebp
aas
sarl
mov
cwtl
aas
mov
adc
icebp
adc
leave
subb
xchg
test
xchg
imul
icebp
mov
scas
pop
xchg
js
cmp
test
stc
adc
push
hlt
aad
test
or
adcb
pop
popa
mov
sbb
shll
and
dec
xchg
ja
dec
sbb
cwtl
js
jne
pushf
and
call
xchg
lock
cmp
push
std
les
xchg
les
mov
rcrl
dec
dec
inc
sbb
inc
push
daa
mov
pop
mov
retw
popf
stos
inc
jo
stos
cmc
sbb
add
pop
push
call
imul
pusha
mull
push
jle
inc
and
pop
xchg
mov
inc
fistpl
xchg
sub
adc
in
cld
xchg
xchg
xchg
cmp
lods
xchg
out
xchg
outsb
inc
fistpl
loope
out
movsb
pushf
xor
pop
and
loopne
int3
arpl
and
movsb
cmp
xchg
pop
cmc
add
dec
dec
add
pop
jae
addr16
mov
aad
inc
mov
aaa
out
repnz
push
leave
push
and
inc
lret
pop
push
dec
cli
xchg
inc
add
xorl
or
je
add
push
inc
pop
and
xchg
push
mov
mov
hlt
mov
or
inc
jle
out
xchg
leave
pop
lock
test
test
stos
xchg
sub
loopne
fldl
ret
pop
jae
mov
inc
mov
jg
and
insl
add
sbb
cld
lods
cwtl
sbb
fs
cmp
sub
fsubrs
adc
mov
js
xlat
imul
popf
push
loopne
dec
sbb
add
int
jae
pushf
jmp
mov
adc
or
xor
addr16
jbe
gs
jne
in
sbb
adc
jb
and
lock
data16
push
inc
dec
mov
sub
movsl
mov
xor
sbb
pop
push
sti
pop
aas
js
jne
lahf
mov
mov
push
add
xchg
jb
es
mov
lds
mov
outsl
clc
xor
jmp
and
sbb
cmp
add
and
mov
insb
add
in
add
sub
loop
dec
je
cmp
mov
outsb
mov
jo
cld
popa
iret
sub
shrb
mov
cltd
ljmp
aas
cwtl
jp
push
insb
mov
test
and
repz
testl
adc
xor
mov
sbb
mov
xchg
xchg
sub
es
xchg
cmpsb
sti
and
xchg
and
push
decb
or
inc
xor
ret
je
xor
loopne
scas
xor
mov
pusha
mov
es
pop
das
xor
inc
cli
xchg
jae
popf
xor
sbb
dec
pop
lea
out
pusha
and
dec
add
and
adc
imul
cwtl
sub
push
stos
mull
cld
or
cmp
fnstsw
test
adc
ss
imul
xchg
repnz
jp
jmp
test
or
nop
inc
xchg
mov
xchg
fnstenv
jecxz
fstl
in
fwait
or
into
shll
adc
mov
fsts
in
pop
test
jne
xchg
dec
add
sbb
lcall
ljmp
data16
mov
add
mov
arpl
or
js
xor
xor
sbbb
andb
dec
std
or
push
jg
add
jns
pop
ljmp
inc
jg
xor
sbb
out
sub
xor
xchg
dec
js
sub
setp
enter
insb
cli
sbb
cmp
fmuls
inc
jp
push
ljmp
in
sbb
stos
inc
lods
in
stos
mov
dec
push
jb
sbb
test
and
inc
test
out
inc
mov
xor
mov
dec
push
popf
jl
jle
inc
pop
popf
stc
lcall
fdivl
outsl
rol
arpl
lods
daa
push
stos
fisttps
pop
scas
dec
fabs
or
xor
cmp
icebp
mov
pop
lahf
cmc
dec
rorl
lret
mov
hlt
push
cli
test
pop
jbe
xlat
push
in
or
je
mov
pop
dec
pop
nop
out
add
sub
rcrb
mov
mov
mov
pop
lods
and
jbe
mov
add
mov
xchg
jp,pt
sbb
rcrl
push
dec
loop
adc
bound
and
mov
cmpsb
insl
loopne
cmp
aad
insb
mov
jns
jecxz
sub
in
pusha
int
mov
addl
nop
xchg
mov
loope
jecxz
cmpsb
cmp
adc
pop
cmp
subl
or
dec
iret
stos
scas
imul
push
fsubrl
in
insb
outsl
push
sahf
jno
fisubs
ret
xor
sbb
mov
jns
xchg
gs
lds
jae
pop
and
out
iret
data16
add
and
in
test
mov
cwtl
lcall
dec
xor
xor
fidivl
push
dec
push
jo
lea
addl
frstor
cmpsb
mov
xor
add
loopne
jne
jp
shr
push
scas
inc
ds
jl
push
pop
int
or
pop
fistpl
and
pop
fidivrs
lds
ret
repz
icebp
xchg
repnz
xchg
test
mov
xor
add
cmp
and
fisubrl
xchg
jle
jne
shll
mov
negb
jge
push
push
outsb
xorb
outsb
fwait
arpl
mov
push
call
in
mov
testb
fists
sub
dec
xchg
mov
je
loope
xchg
ds
xchg
push
fs
mov
call
pop
cmp
xchg
dec
inc
xchg
das
mov
popf
xor
push
and
arpl
or
sub
inc
xor
mov
inc
pop
ss
pop
es
arpl
dec
inc
inc
fidivl
push
nop
aam
scas
fsubr
jl
add
push
cltd
cmp
pop
dec
pop
test
scas
mov
push
cmpsb
in
xor
dec
mov
pusha
divb
sbb
jecxz
cltd
adc
dec
cwtl
push
cmp
push
sub
das
shlb
xchg
add
mov
cmp
push
and
mov
pop
mov
mov
mov
sbb
sbb
les
dec
lahf
xchg
clc
jb
stos
lret
cld
sbb
push
mov
fsubr
mov
mov
push
xor
shlb
pop
testl
repz
aad
inc
pop
adcl
int
hlt
add
inc
dec
icebp
pop
data16
cmp
subb
test
or
scas
adc
test
cmp
add
in
mov
loop
imul
leave
jno
test
insl
imulb
mov
sarb
mov
and
les
aad
iret
lea
adc
scas
xor
cmpsb
sub
lea
mov
xchg
and
bound
cmpsb
je
fcomps
fwait
stos
mov
fdivr
test
xor
add
jns
mov
insb
lock
in
imul
lods
mov
xor
inc
testb
sahf
adc
ret
fadds
sahf
or
pop
cld
inc
push
pop
imulb
int3
xchg
movb
imul
jae
fisubl
in
lret
insl
dec
out
outsl
sub
insl
dec
in
shlb
rclb
jge
call
in
hlt
cmp
and
push
push
adc
fisttpl
decl
mov
push
lret
jae
jns
push
in
imul
cwtl
cmp
cli
xchg
mov
mov
jmp
or
inc
xchg
xor
jp
xor
int3
push
dec
push
pop
divb
push
mov
jp,pn
mov
ret
repnz
testl
js
loopne
scas
mov
sub
out
jg
fucomi
nop
cli
sub
pop
fs
xchg
mov
repnz
jnp
cltd
push
les
lret
mov
xlat
rcrw
insb
xlat
mov
cmc
pop
data16
decb
lret
sub
arpl
dec
push
add
mov
dec
cmp
in
jle
xor
sbb
mov
aaa
jle
in
cwtl
mov
xchg
pusha
jp
jae
shll
loopne
pop
nop
inc
or
jg
pop
mov
mov
inc
out
scas
xchg
jmp
or
jne
insb
mov
nop
out
jle
lods
mov
mov
leave
pop
cltd
and
scas
and
jp
daa
mov
daa
je
push
daa
sub
std
shrb
lods
aam
pop
push
lock
fcmovb
pusha
adc
jbe
lahf
mov
rcrb
xchg
test
xchg
or
pusha
push
push
push
pop
subl
and
popa
fdivl
popa
sub
fstps
mov
xchg
push
rorb
insl
mov
pop
push
lea
pusha
jl
push
inc
pop
and
sub
mov
ret
cwtl
inc
add
repnz
outsb
push
push
outsl
or
fsubrl
xor
xchg
xor
add
int
inc
das
xor
adc
sarl
inc
sub
mov
xchg
cmp
xor
lock
jno
push
ss
fisttpll
add
aaa
push
dec
shrb
in
imul
pop
ret
ljmp
aaa
nop
sub
sbb
shlb
rcrb
das
jecxz
mov
scas
aas
sub
repnz
gs
test
imul
xchg
es
int3
ret
xor
add
les
xor
mov
dec
icebp
xchg
pop
outsb
ljmp
test
mov
daa
lcall
push
insb
or
repz
insb
mov
lcall
mov
xchg
into
xchg
xchg
xchg
dec
fldcw
cmpsb
test
popf
sbb
lret
inc
out
insl
inc
dec
push
icebp
jo
outsl
add
test
adc
dec
dec
mov
outsb
mov
xor
and
int3
out
or
rcrb
xor
lock
hlt
cmp
rol
lret
out
jbe
lods
ds
and
dec
sti
lock
inc
addb
jno
inc
add
xchg
adc
roll
or
pop
xor
sub
js
stos
mov
fbstp
imul
sbb
xchg
jmp
xlat
iret
mov
sbb
adc
fs
lock
cmp
fs
dec
negb
sub
add
fdivrl
in
mov
push
xor
push
and
mov
adc
fistps
and
mov
cltd
inc
lret
mov
repz
pop
push
mov
mov
jge
fiaddl
push
xchg
rclb
sbb
xor
push
arpl
sbb
mov
push
pusha
sbb
in
xchg
test
pushf
push
test
pop
paddsw
aam
inc
push
outsb
imul
jl
fidivs
lcall
xor
jno
mov
iret
jg
jbe
and
notl
pop
and
jbe
sbb
ds
mov
icebp
ljmp
pop
icebp
mov
adc
insl
xchg
cmpsb
sbb
out
mov
arpl
xor
sub
mov
cmp
push
xchg
adc
adc
sbb
cmp
jae
fsubrl
int
pushf
or
ds
jne
mov
iret
call
or
cld
mov
mov
mov
xor
lret
xchg
mov
pop
cmpb
mov
mov
fbstp
mov
bndstx
cmpsb
inc
lea
leave
ficoml
mov
movsl
inc
cld
and
jae
add
aad
mov
pop
imul
push
aad
scas
adc
stos
mov
push
mov
sub
testb
jb
fistl
enter
stos
cld
ret
pop
das
lret
push
movsl
lods
jl
mov
leave
cli
jbe
fsub
adc
es
mov
add
add
cmp
aam
loope
mov
lods
or
lock
sbb
fldcw
orl
adc
inc
popf
xor
scas
hlt
fcomps
dec
lret
ja
insb
call
xchg
mov
in
bound
mov
stc
sub
fsubrs
aaa
add
out
inc
cli
out
insl
scas
pop
mov
inc
push
orb
nop
inc
pop
cmp
jle
or
pop
ret
aas
popf
insb
inc
adc
push
mov
fidivl
xchg
add
mov
outsb
cltd
push
notb
das
cmp
mov
mov
inc
mov
mov
jnp
push
mov
dec
out
shll
in
dec
push
inc
pop
idiv
dec
daa
ljmp
ds
xor
popf
cmpxchg
mov
or
aas
test
mov
inc
pushf
inc
cwtl
or
push
lea
xor
mov
xchg
mov
adc
repz
mov
and
dec
jno
in
jns
movsb
jmp
xchg
scas
and
dec
mov
push
shrb
xor
sub
push
fstps
shlb
mov
int
xorb
lock
mov
notb
and
dec
arpl
iret
dec
fisubl
xor
ss
and
add
dec
je
inc
sahf
xlat
push
lods
mov
clc
ss
xor
pop
cmp
xor
mov
fidivrs
insl
cmc
jmp
lret
mov
or
inc
loopne
adc
ds
xchg
je
subb
lahf
cmpsl
mov
xchg
hlt
scas
push
inc
lret
test
das
jae
popa
stc
in
in
or
out
ror
clc
mov
fcompl
mov
dec
adc
xor
sti
jno
testl
ret
mov
cld
xchg
pop
sub
lea
sbb
imul
sti
xchg
out
or
pop
add
pushf
ja
icebp
inc
arpl
fnsave
scas
mov
push
call
mov
xchg
pop
std
mov
insl
in
pop
stos
mov
or
dec
jecxz
cmp
ljmp
insb
push
mov
loopne
xchg
pop
dec
mov
orl
lods
mov
mov
loop
test
xchg
lock
scas
sbb
push
sub
adc
xchg
jg
test
sbb
lea
rcr
pop
icebp
loop
cmp
mov
push
inc
testl
ret
xchg
ja
rclb
cmpsb
inc
movsl
cmp
dec
mov
adc
adcl
lds
fcompl
sbb
imulb
test
pop
ror
lds
add
sbb
mov
pop
in
cmp
pop
mov
sub
jp
adc
xor
out
xchg
pop
loopne
xor
stc
mov
stc
iret
inc
push
and
or
dec
cwtl
sub
aam
xchg
scas
fildl
sarl
sbb
sbb
dec
pop
jmp
pop
inc
popa
rclb
orb
mov
mov
add
add
xor
jne
sbb
loope
test
sbb
inc
jmp
jbe
and
pusha
push
sbb
sub
ds
mov
ds
dec
lahf
push
and
sbb
sbb
push
jbe
aas
push
mov
adc
dec
dec
imul
lret
and
cmp
lcall
scas
test
cltd
ficompl
adc
fistpl
adc
movsb
sbb
mov
push
sbb
dec
cwtl
fadds
mov
es
push
pop
mov
inc
and
push
lods
scas
mov
mov
add
imul
call
mov
out
inc
aam
sti
jb
xor
cmp
clc
outsl
xchg
fnsave
jnp
sub
jbe
ret
dec
imul
fnstenv
pop
out
xchg
bound
cmpsl
xor
or
or
bound
jmp
cld
push
lret
rol
add
pop
sbbb
mov
sbbl
div
and
xor
outsl
jae
sbb
dec
data16
mov
ljmp
push
jne
xor
fiaddl
mov
mov
je
inc
or
lds
les
es
mov
cmpsl
jno
aad
add
outsl
add
push
mov
test
inc
mov
iret
xchg
sbb
ficoml
rcr
jo
dec
push
stos
lret
jp
push
pop
ljmp
xchg
sub
aas
es
andb
in
rcll
into
popa
push
js
mov
fldt
outsb
test
jecxz
bound
iret
mov
mov
and
cmp
jp
jge
and
push
dec
and
xor
data16
mov
in
xor
imul
inc
push
es
mov
sar
mov
push
insl
aad
pop
sub
jg
add
hlt
lret
jg
popa
mov
lahf
jne
movsl
mov
in
dec
insl
mov
xchg
fs
push
adc
ret
and
dec
pop
repz
xchg
jns
xchg
loop
adcb
xchg
cmpsb
cmp
mov
fbstp
and
in
cmpsb
popf
lcall
loope
and
mov
mov
je
cmpsb
dec
dec
mov
lods
aam
lret
outsb
and
addr16
xchg
insb
mov
xlat
data16
in
inc
imul
inc
test
das
xchg
mov
mov
adc
mov
adc
fucomip
push
or
ja
in
mov
sub
iret
pop
xor
loopne
popf
rclb
xor
stos
cmp
cs
imul
aad
es
dec
push
in
jne
lods
and
jmp
and
repnz
in
pop
js
inc
das
cmp
mov
cmp
movsl
adc
push
xchg
adc
push
inc
pop
push
xchg
dec
fdivs
testl
lods
mov
lds
iret
jecxz
out
inc
inc
mov
inc
outsl
fsubrl
or
jge
mov
out
push
inc
pusha
or
dec
mov
mov
clc
mov
pop
in
lock
das
movsl
or
pop
push
lahf
dec
lods
mov
mov
or
xchg
sub
jp
push
sub
mov
inc
xor
test
in
shlb
or
mov
stc
jmp
mov
adc
adc
lahf
mov
and
cmpsl
push
or
cld
cmc
sbb
and
test
or
dec
rcrb
pop
sbb
int3
inc
jo
mov
test
aas
lcall
inc
push
loope
or
aam
xor
lea
mov
lock
adc
pcmpgtd
repnz
call
push
dec
inc
fs
cmc
dec
xchg
insb
fdiv
lds
iret
xor
mov
add
cmpps
sbb
xlat
vpunpcklqdq
add
push
inc
add
xchg
cmp
pusha
cmp
lods
cmp
sti
and
push
xor
fstps
or
sub
cmp
xor
jg
shll
pop
mov
sub
ss
inc
hlt
add
dec
out
or
cmp
pushw
mov
xchg
aas
movsb
push
mov
adc
pusha
inc
lret
enter
pusha
add
xor
cld
ja
rcr
rorl
add
add
cmc
jns
aaa
jg
je
les
pop
sti
std
and
xchg
jae
push
enter
cli
push
cld
mov
int
stc
rcll
rcll
pop
mov
lcall
push
push
pop
out
jle
int
fwait
mov
xchg
shr
and
or
fbld
jl
lods
inc
cmp
inc
jg
dec
sbb
jl
lods
inc
pop
pop
sahf
gs
jge
ds
and
cmpsb
sahf
test
pop
in
sub
xor
pop
xchg
lods
cmp
push
mov
or
jae
outsl
movsl
push
mov
mov
sub
addr16
sub
sbb
testl
std
cmpsl
or
daa
adc
xor
shlb
lods
and
inc
leave
test
push
repnz
scas
jno
shrl
pop
cmp
mov
sahf
movsl
sub
sub
or
aas
addr16
lods
cwtl
xor
add
jg
loop
in
out
push
and
dec
sbb
popf
mov
loop
or
orb
adc
xchg
push
nop
lcall
mov
ret
out
or
pusha
test
push
mov
ds
mov
fisttpll
inc
adc
ljmp
add
inc
mov
push
xchg
inc
fdivrs
mov
out
mov
xlat
mov
push
mov
mov
push
mov
push
xchg
add
and
pop
test
lret
adc
sbb
jns
push
lahf
add
outsb
jl
in
roll
adc
cwtl
xor
pop
outsl
pop
xor
push
dec
jnp
xor
int
cltd
movsl
inc
push
mov
mov
push
mov
sahf
fwait
and
jns
pop
or
pop
pushf
pop
xchg
jmp
loop
sahf
out
rcr
lods
mov
cmp
push
sbb
xor
loop
fsubp
inc
cmpsl
jle
push
add
cli
add
je
mov
push
jl
sti
subb
or
push
fidivrs
int3
add
push
rol
mov
jne
add
add
fistl
movsl
mov
daa
add
push
ss
fistl
mov
xor
cmp
sbb
xchg
cmp
mov
sbb
movsl
and
push
incl
insb
jmp
psubsb
cltd
and
cmp
lahf
xchg
sbb
pop
orb
out
mov
cmpsb
adc
and
notb
dec
lods
cld
decl
jecxz
adc
adc
sbb
testb
adc
movsl
mov
sbb
das
cs
mov
xor
call
adc
sub
jp
mov
adc
xchg
inc
sbb
pop
mov
das
iret
mov
rcll
mov
imul
cwtl
and
ffreep
adc
push
rcll
xchg
rcr
pop
inc
dec
aas
mov
popa
out
xchg
testb
adc
dec
xor
incb
mov
cmpsb
sahf
add
mov
int
lcall
sub
cld
inc
movsb
dec
fs
mov
idivl
scas
rcrb
decb
inc
pop
int3
lret
js
lahf
lock
pusha
cs
call
jo
out
inc
sbb
and
rcl
les
aas
jo
xchg
mov
aad
movsb
addr16
cwtl
daa
xor
add
aas
scas
xor
inc
pop
leave
inc
cmp
jne
dec
icebp
jmp
fbstp
ss
pop
mov
jo
stos
mov
fmul
std
shlb
xchg
mov
adc
hlt
mov
jmp
mov
dec
in
push
jmp
test
and
sub
stos
sub
or
lahf
stos
mov
cltd
adc
sbb
dec
loop
lods
push
ret
int
adc
or
cmp
mov
xor
mov
cli
or
push
sahf
pop
shl
push
mov
pop
imul
insb
icebp
inc
push
out
in
sar
fwait
xchg
sbb
jnp
je
inc
addr16
push
bound
inc
add
push
and
cmp
sbb
mov
jnp
sahf
test
aad
pop
adc
lcall
sbb
push
cmp
xchg
jnp
sti
inc
sbb
bound
out
aaa
and
shl
mov
add
idivl
ret
sbb
in
loopne
add
iret
outsb
inc
pop
rol
mov
ja
pop
insb
pop
sbb
sub
jo
data16
sahf
jne
dec
mov
push
add
gs
inc
or
xorb
aad
fyl2x
xlat
testb
xlat
sbb
mov
mov
xor
insl
sahf
push
fwait
setp
aam
stc
movsl
in
jno
rclb
add
pop
mov
jmp
jno
cmp
xor
adc
bsf
jle
ret
sbb
and
jbe
xchg
xor
test
test
vpsrld
dec
clc
cmc
mov
cli
or
and
incl
push
test
jl
xchg
lods
fmul
fnstsw
mov
inc
iret
inc
mov
mov
push
lods
aas
sbbl
inc
mov
movsl
add
cmp
fistpll
add
jo
sahf
mov
sbb
push
sar
push
mov
mov
movsl
ret
stc
inc
jp
outsl
ret
out
or
cmpsl
lahf
push
or
pop
push
gs
sbb
dec
rclb
xor
mov
fsubrs
and
pop
xchg
add
fstpl
mov
push
or
xor
in
xor
mov
mov
fimull
adc
ficoms
loope
js
pop
fsts
sub
push
mov
lret
imul
mov
arpl
out
inc
add
jbe
lcall
xor
out
rorl
hlt
out
shll
fildl
mov
jle
inc
in
pop
sub
sahf
xor
and
insl
daa
incb
out
sti
repz
sbb
scas
out
out
lods
hlt
adc
sub
push
pop
sbb
ret
push
push
aad
sbb
pusha
rcll
or
xchg
fldenv
movsb
inc
xor
aam
into
sahf
clc
pop
sbb
sbb
mov
das
ljmp
push
in
mov
out
xchg
mov
rcrl
shlb
pushf
stc
aas
add
out
jo
pop
fistl
sti
xor
sbbl
repnz
cmp
lcall
clc
and
fimull
int
jp
add
ret
lret
es
push
jp
mov
cmpsl
scas
clc
xchg
fistpl
sbb
dec
test
jne
mov
call
jae
addr16
push
xor
dec
loope
test
sub
ret
xchg
adc
mov
mov
test
pop
push
lods
scas
mov
xor
mov
sbb
sbb
inc
dec
mov
or
in
push
push
popf
out
xchg
cmp
or
dec
cwtl
xorl
or
jle
sub
leave
or
les
out
mov
fwait
xor
loopne
push
std
lret
cmp
inc
stos
push
xchg
push
sub
push
adc
push
pop
pop
push
mov
in
test
sahf
jbe
jbe
out
xchg
jnp
stos
xlat
xchg
mov
int
jp
icebp
jge
lods
mov
sub
lcall
fildl
es
xlat
sbb
pusha
push
aaa
dec
movsl
pusha
mov
jae
push
int3
std
pmuludq
dec
in
mov
sbb
mov
or
push
jp
xor
jne
clc
mov
filds
ds
iret
insb
sub
mov
dec
jne
shrl
les
xchg
jb
sub
and
shr
lea
lock
push
out
cmp
js
iret
mov
push
inc
xor
fdivrl
mov
sub
pusha
mov
stc
faddl
lods
inc
pusha
fistps
jno
es
pop
inc
bound
mov
imul
lea
out
js
cld
mov
les
sub
test
jge
pop
mov
mov
mov
mov
sub
dec
imul
inc
and
arpl
mov
test
push
fisubrl
add
cmp
frstor
test
jne
jp
lods
jnp
test
push
or
lods
jb
mov
iret
dec
pop
roll
pushf
lea
cwtl
and
test
ljmp
inc
ja
jb
xchg
ljmp
jne
xchg
sbb
stos
outsl
aam
lahf
xor
jns
push
bound
adc
loope
dec
inc
in
jns
mov
xchg
jle
dec
cmpsl
add
frstor
mov
adc
ret
push
push
mov
orb
ds
out
aas
add
aam
jbe
cmp
cmp
out
adc
dec
or
and
scas
mov
movd
fildl
jmp
pop
cmpsl
mov
xor
xchg
js
mov
cmp
lock
cmpsl
mov
adc
jae
sbbb
jae
mov
sub
or
cmp
sahf
test
inc
stos
or
popa
push
es
paddsw
loop
inc
nop
gs
jns
jno
sub
push
pop
dec
mov
mov
and
adc
inc
add
data16
movsb
cmp
push
push
aad
ret
ret
adc
repz
fsubl
mov
push
sahf
in
lds
testl
ja
dec
lods
inc
data16
xchg
les
cmp
jno
fisttpl
xchg
addr16
xchg
subl
sbb
nop
xchg
fwait
mov
xchg
mov
ret
jmp
push
out
mov
mov
or
pop
mov
mov
mov
pop
xchg
cmpsb
jmp
dec
outsb
sbb
cmp
test
add
leave
and
daa
push
scas
jnp
loopne
lods
dec
test
cmpsb
ds
mov
xchg
mov
mov
loopne
jnp
mov
push
fnstenv
add
xchg
jb,pn
and
jns
sub
jge
test
cmp
lock
in
push
mov
repz
sti
mov
loope
lret
pop
das
repz
pusha
inc
jnp
push
gs
insl
cltd
ja
mov
in
repnz
das
ljmp
xchg
hlt
mov
scas
stos
sub
push
int3
pop
popa
insl
push
bnd
pop
rorb
clc
jae
out
lock
adc
jae
daa
insb
aad
xor
push
div
adc
imul
jnp
frstor
fidivl
test
rolb
jae
mov
cli
cmp
int
loope
cmp
stc
mov
adc
xchg
xchg
rolb
mov
sub
test
jle
popa
pop
sub
jl
jae
dec
cmp
pushf
or
add
push
aaa
xchg
push
das
sti
sbb
sahf
iret
jae
leave
mov
jb
arpl
push
mov
and
ljmp
int3
xor
mov
jb
cmp
insl
stos
mov
xlat
fiaddl
cmpsl
bound
sub
xchg
nop
inc
xor
ret
sbb
xor
mulb
adc
add
data16
push
in
add
testl
mov
jno
pop
cs
add
add
sbb
fstps
faddl
sbb
jg
add
and
or
or
insb
mov
insb
jno
rclb
aaa
push
fiadds
gs
cmp
aaa
sbb
sbb
push
or
loop
sti
iret
adc
xor
jmp
add
dec
xchg
pushf
in
aaa
out
or
cmp
call
dec
mov
sub
pop
movsl
pop
jl
jns
je
pop
xor
xor
mov
fldenv
pop
push
orb
lods
addr16
cmc
mov
xchg
dec
cmp
faddl
push
pop
cltd
jae
pushf
inc
fsubl
js
lret
cmp
adc
cs
xor
sbb
call
pop
mov
daa
add
les
mulb
test
push
mov
cld
push
test
dec
mov
jecxz
add
es
int3
movsb
dec
daa
inc
jecxz
imul
imul
and
aam
jb
and
aad
int
ud0
and
cli
dec
cmpsl
sub
jo
mov
sbbb
scas
std
jo
daa
stc
mov
rorb
jg
aam
mov
xchg
cmp
ljmp
adc
push
xor
xor
test
mov
lea
fisttpll
lea
les
inc
cmpsb
xor
jbe
mov
fists
daa
outsl
adc
divb
sub
sahf
mov
sub
rorl
xchg
pop
adc
nop
idivl
xchg
add
xor
pusha
aad
aas
or
rol
and
pop
ss
rorl
or
cmp
or
sub
mov
jle
pusha
and
and
mov
outsl
orl
pop
jbe
mov
arpl
sub
xor
jmp
imul
ficomps
movsl
mov
mov
shlb
into
subl
loopne
jp
and
push
out
out
ljmp
cmpsl
xchg
mov
or
jnp
sahf
jl
add
or
push
pop
add
cmp
and
mov
insl
and
cmp
cmpsb
push
or
inc
loop
dec
mov
pusha
adc
add
push
shr
jp
add
xor
mov
push
pop
jp
in
stos
sbb
sbb
xchg
es
sti
cltd
inc
pop
push
shlb
and
mov
jne
popf
xchg
xchg
into
sub
lahf
push
loopne
sub
mov
sbb
xchg
shr
jg
mov
add
mov
pop
out
les
les
inc
les
repz
add
fdivrs
in
sub
lock
mov
add
pop
mov
inc
and
jmp
cltd
sahf
cmc
vmread
lret
lret
push
dec
addb
cs
sub
test
jle
int3
xlat
jmp
sbb
mov
repz
out
and
push
dec
gs
iret
in
lret
outsb
jl
sbb
add
sub
loop
out
dec
jno
xor
xchg
mov
test
mov
sbb
xor
jns
mov
testb
add
mov
push
in
push
mov
test
and
mov
xchg
clc
cmpsl
ret
sub
mov
mov
scas
sub
sbb
xchg
cmp
xchg
xchg
pusha
cmp
fidivrl
sub
dec
xchg
dec
aaa
lea
adc
fistl
cmp
jecxz
sahf
jecxz
out
xchg
dec
add
lods
push
das
mov
push
xchg
cmp
scas
gs
mov
add
addr16
adc
pop
inc
out
fcom
jmp
mov
pop
ja
or
es
push
mov
mov
rcll
lds
fwait
dec
ficoms
lods
bsf
minps
mov
outsl
mov
dec
sub
push
inc
lea
dec
icebp
imul
cmpsb
lock
insb
test
das
stc
push
mov
push
xor
jg
out
outsb
popf
xchg
mov
cmp
dec
imul
push
xchg
xchg
repnz
hlt
jmp
pop
stc
icebp
fsts
sbb
movsb
sbb
fldcw
or
cld
imulb
cwtl
jp
cltd
clc
and
div
ss
inc
mov
and
add
incb
mov
ficoml
lret
push
push
push
movsl
and
sbb
addr16
and
jb
ljmp
push
clc
dec
into
hlt
mov
je
sbb
pop
divb
mov
cmp
std
mov
stos
das
cmp
dec
pop
fdivrp
jnp
dec
push
sbb
mov
arpl
mov
es
xchg
pop
shr
mov
push
popl
add
js
nop
stos
push
mov
mov
xor
arpl
adc
jno
mov
aad
imul
adc
leave
cmpsb
in
fcoms
clc
xchg
ret
push
add
or
aas
or
mov
nop
fbld
pop
mov
out
dec
xor
or
aad
inc
mov
xchg
sbb
sti
enter
mov
ja
popfw
testl
mov
cmp
mov
daa
or
or
out
sub
cli
mov
fisttpll
or
mov
fucom
add
and
cmp
and
sub
montmul
cmpsb
add
dec
shl
clc
add
stos
inc
adc
enter
leave
je,pn
mov
mov
or
fbld
push
popf
fwait
sbb
adc
hlt
in
enter
pop
loopne
inc
pop
loop
sub
in
fidivrl
cmpsb
mov
pop
dec
icebp
pop
sub
fwait
into
gs
lret
push
mov
mov
insl
mov
xor
popa
dec
pop
cmpsl
out
sub
iret
mov
xor
in
sbb
and
outsb
dec
loop
mov
in
imul
icebp
es
mov
push
psllw
mov
pop
and
div
push
lcall
push
orl
imul
and
rcrb
mov
lock
ds
mov
mov
bound
lods
in
daa
or
sub
aas
push
in
push
pop
js
xchg
les
push
orl
cmp
daa
dec
inc
push
and
out
xor
fs
ret
and
lret
xor
or
jo
mov
mov
lods
xor
test
cmp
mov
mov
pop
dec
mov
rcrb
add
mov
sub
aas
repnz
dec
or
stos
inc
push
and
rcr
push
test
xchg
stos
nop
sub
in
jl
sub
jns
in
sbb
cwtl
ret
popw
sub
jne
xchg
sbb
mov
sub
mov
dec
imul
inc
pop
pop
jge
inc
cmpsb
dec
adc
xor
mov
or
mov
subl
sbb
jnp
add
jno
pop
jle
push
sbb
gs
mov
xlat
jl
inc
std
inc
xchg
add
pop
adc
fisttpl
dec
pop
sub
pop
lods
cmp
dec
sub
push
fisttpl
xor
mov
push
int
mov
outsl
in
imul
mov
xlat
mov
push
lahf
test
jle
imul
dec
mov
mov
fimuls
adc
inc
test
lcall
xor
sbb
jne
loop
inc
xchg
xor
imul
fnstsw
cmp
ret
sbb
pop
dec
rcrl
add
sahf
push
pusha
test
xor
sbb
mov
lock
cli
inc
icebp
and
sbb
gs
adc
xor
test
ja
lock
add
cmp
jle
xor
inc
lret
pop
cmp
inc
mov
dec
inc
sbb
xchg
jl
mov
or
jne
push
jo
and
fdivrl
mov
rorl
sbb
xor
stos
jne
repz
mov
pop
test
dec
loope
loopne
and
mov
es
insb
push
mov
mov
popf
outsl
sub
out
nop
and
mov
adc
sarb
or
push
xor
mov
xor
repz
mov
xchg
out
out
dec
aad
cltd
std
dec
mov
outsl
cli
jp
std
lods
mov
cli
xchg
xchg
pop
push
cmc
add
daa
jnp
pop
add
mov
mov
lds
xchg
jne
testl
mov
adc
out
loop
jo
xor
push
or
cmp
sub
icebp
pop
out
dec
nop
ja
mov
lahf
and
cwtl
xor
jbe
lea
xlat
jne
aam
ret
aam
pop
imul
lds
add
inc
push
bound
imul
test
inc
std
pop
je
test
imul
incl
loop
dec
jecxz
mov
pop
mov
fisubrl
push
jnp
test
xor
popa
mov
push
xor
dec
inc
mov
and
das
or
insl
or
and
mov
out
push
leave
call
xchg
subb
int
lea
mov
sbb
lahf
mov
jmp
cmp
pop
insl
jmp
int3
or
and
je
pop
and
sub
mov
cltd
xor
pop
icebp
in
negb
mov
and
add
sub
outsb
aas
dec
test
in
fwait
and
xchg
add
add
xor
mov
fwait
mov
bound
jae
adc
push
mov
cmpsl
mov
or
cmp
arpl
ret
pop
sbb
sarl
pop
and
rorl
in
mov
xor
add
cld
or
daa
xor
mov
shrl
ficoml
jg
popa
icebp
push
sarb
mov
push
or
mov
shl
mov
mov
pop
sbb
and
daa
mov
call
sbb
filds
loop
ja
add
pop
adc
push
pop
out
test
out
dec
sbb
rcrl
xchg
jg
add
add
xchg
in
imul
cld
xchg
bound
and
jmp
jmp
and
js
xor
and
js
outsl
and
jg
mov
sbb
mov
lock
rolb
fistpl
or
in
lock
mov
fldt
pop
cli
jae
sub
addb
pop
out
mov
jmp
xor
pop
jno
test
jmp
and
jecxz
repz
call
cmp
sbb
lea
test
fldl
mov
test
cmp
xlat
popl
jp
xor
fistpll
add
or
cmp
out
cld
cmp
aas
lcall
test
xor
stos
adc
fucomp
enter
mov
sub
xchg
mov
inc
cmp
mov
subb
sub
loopne
adc
and
clc
cmp
push
fdivs
inc
fnstsw
xchg
fisttps
test
pop
aaa
cmp
cmp
cmpsl
jl
ret
xor
add
std
pop
jbe
push
xchg
pushf
xchg
std
mov
jnp
sub
pop
lds
iret
pop
xchg
mov
push
mov
push
mov
jecxz
sbb
mov
addr16
dec
int3
hlt
mov
insl
cwtl
das
and
fmull
sub
test
inc
dec
adc
mov
mov
std
xchg
pop
test
push
mov
in
jp
add
or
push
mov
push
mov
shlb
lret
out
adc
pop
push
mov
gs
lds
stc
mov
filds
push
lcall
xchg
push
push
lods
mov
pop
xor
push
mov
ds
jne
cmpps
dec
push
add
lock
pop
push
out
dec
mov
fs
xchg
and
mov
popa
subl
jl
cmpsb
adc
jne
mov
adc
or
xor
icebp
xor
sar
lret
pop
cltd
mov
push
cmc
ja
xlat
adc
ret
out
lock
out
shlb
xchg
loop
cmc
or
pop
dec
push
mov
rcrb
cmpb
fcmovbe
fcomps
stos
lods
adc
push
out
mov
mov
scas
mov
in
lret
pop
and
pop
pushf
sub
inc
and
jecxz
mov
pop
scas
sbb
xchg
insl
sti
cld
fdivrs
fistpl
xor
scas
lea
mov
into
sbb
outsl
test
mov
mov
pushf
scas
ret
out
cmp
lret
xor
add
inc
lahf
mov
out
gs
fldcw
jbe
mov
mov
mov
xchg
sub
inc
xor
dec
push
pop
sbbl
lock
xchg
pushf
push
jno
icebp
or
push
aas
xor
pushf
movsl
xlat
fstpt
dec
cmp
jnp
push
stos
or
test
aad
jb
cmpsl
fwait
rcr
enter
in
jns
sahf
sub
ss
les
fnstsw
and
xor
jne
and
sub
sub
push
adc
adc
mov
mov
pop
cmp
lret
and
inc
imul
lea
pop
mov
outsl
lock
pushl
pop
add
lock
out
adc
popf
es
jle
xchg
mov
mov
jg
xor
cld
pop
cmpsl
aas
shr
dec
out
jae
aaa
sub
insl
jge
dec
mov
leave
cmp
aam
jno
ret
push
fmulp
jb
add
rorl
std
inc
int
sub
lea
imul
lods
lock
ja
daa
outsl
std
test
pop
inc
or
xor
fldl2t
test
scas
and
out
fsincos
pushf
stc
in
mov
xchg
jecxz
ret
mov
adc
lret
data16
fwait
xchg
les
stc
cwtl
jmp
adcb
jns
jb
push
xchg
pushf
xchg
fcoml
out
sbb
jmp
into
cwtl
stc
pushf
movsl
ds
and
fmul
roll
mov
adcl
sbb
insl
fdivrs
pop
aad
add
adc
lahf
and
cs
daa
xlat
pop
sub
cmp
cli
xchg
xchg
cmp
add
inc
icebp
add
addr16
xchg
popa
sub
jmp
xchg
mov
iret
or
popf
xorl
mov
sbb
jp
lds
mov
add
mov
insb
mov
lret
and
insb
rcrl
popa
mov
or
pop
movsb
les
imul
pop
mov
test
adcb
shlb
xchg
jmp
add
es
mov
inc
adc
mov
rclb
call
insb
popf
fcomps
addl
mov
push
ljmp
sub
dec
inc
lock
imul
shll
out
mov
mov
scas
and
testl
xchg
jnp
pop
popf
test
dec
xchg
aaa
loope
push
idivb
fcomip
mov
inc
cmp
lods
loopne
es
int
mov
sub
pop
ja
mov
int
xchg
pop
cs
or
inc
int3
pop
cmp
lret
data16
dec
jecxz
test
scas
and
es
stos
fcmove
inc
or
cmpsl
out
jne
clc
cmpsb
testb
ret
movsb
mov
dec
test
push
sahf
jg
xor
push
xchg
and
push
in
mov
mov
xchg
sahf
mov
clc
popa
in
popf
inc
sbb
scas
push
cmp
in
popa
clc
xchg
push
mov
pop
rcrb
push
loop
es
xor
pop
negl
xor
rclb
inc
fiadds
repnz
push
in
vmovmskpd
fdivl
jae
mov
mov
aaa
inc
push
mov
out
clc
mov
xor
subb
mov
xor
fiaddl
stos
push
lds
and
outsl
xchg
sub
lea
pop
icebp
fisttps
sub
roll
jae
lcall
or
push
ds
loopne
or
dec
mov
dec
loop
aam
icebp
movsl
xchg
notb
stc
js
stc
lcall
ret
dec
mov
shll
inc
pop
lock
leave
hlt
stos
adc
inc
lret
jl
cld
std
sahf
lods
pop
and
pop
lods
and
cmp
and
push
enter
jae
jmp
cmpsb
int3
and
fisttps
je
jne
cmpsl
cmpsb
sbb
push
pop
call
jge
lret
mov
test
das
decb
and
dec
fs
inc
outsb
out
jmp
int
push
aam
repz
xorb
fldt
test
jnp
das
aad
inc
and
loope
adc
sub
scas
inc
bound
mov
clc
sbb
in
inc
cmp
pop
dec
or
jnp
imul
insb
fstl
fistpl
mov
dec
loop
mov
nop
cmp
clc
adc
daa
mov
sub
test
adc
shrb
xor
in
mov
dec
xchg
jecxz
or
add
int3
dec
push
insb
sbb
jmp
cs
dec
sti
lock
mov
push
sub
mov
mov
inc
in
test
jecxz
cmc
dec
or
sbb
add
movsb
pop
push
imul
xor
and
mov
and
lea
add
or
mov
loope
jo
imul
jg
mov
subl
sbb
xchg
icebp
dec
fs
notb
pop
lcall
and
popa
clc
inc
sbb
mov
loopne
add
aas
out
xor
inc
lret
jecxz
cmp
loop
inc
lods
in
arpl
daa
nop
adcb
mov
in
mov
orb
push
andb
sbb
aaa
outsl
or
testb
jnp
ret
mov
xor
and
dec
aad
lea
gs
fisubrl
jmp
call
or
fwait
testb
subl
cmc
cwtl
sub
das
mov
xchg
sub
dec
cmp
mov
and
cmp
decb
stos
imul
loopne
cmpsl
shrl
movsb
jb
into
jb
inc
sub
xor
xchg
mov
mov
jp
cld
jae
sbb
dec
jle
cmpsl
bound
ror
fldl
push
mov
xchg
and
push
mov
imul
fisubrs
fidivrl
push
ds
add
ret
inc
in
insl
outsl
ds
adc
rcrl
cmp
jp
ljmp
or
and
push
stos
pop
adc
or
aam
pop
lods
push
and
and
push
inc
hlt
or
dec
mov
call
in
test
data16
shr
das
ret
cmp
cmp
cld
cmp
mov
inc
pop
imul
out
out
mov
lcall
test
outsl
leave
hlt
sbb
mov
cltd
sbb
lret
sbb
iret
ljmp
jb
fs
xlat
adc
stos
pop
or
fidivrs
sub
popf
movb
pop
add
sbb
mov
xchg
mov
fnstsw
xchg
rcrb
movsb
adc
inc
lods
nop
jb
cmp
mov
in
iret
xlat
outsb
add
jae
xchg
cmc
xchg
scas
mov
jbe,pn
ds
dec
daa
xchg
test
cltd
cli
repnz
outsb
xor
and
lahf
jbe
ret
and
cmc
mov
out
mov
jp
jb
inc
push
jmp
cmp
fadds
xchg
jb
xchg
and
dec
mov
out
xor
push
aad
xchg
in
add
negl
push
lahf
or
sub
mov
insl
dec
and
in
xor
add
xchg
shlb
out
add
mov
pop
mov
sahf
pusha
es
or
mov
lds
xlat
mov
leave
push
or
jg
mov
dec
dec
push
outsl
dec
xchg
enter
and
lcall
pop
mov
sahf
mov
adc
sbb
xlat
mov
inc
loop
xor
je
lahf
add
loop
push
fnstcw
push
fisubl
fldl2t
lds
scas
imul
jbe
sub
add
inc
addr16
clc
enter
fs
xlat
pop
jg
pop
cmc
mov
sbb
enter
mov
jo
push
pusha
jmp
xor
mov
js
mov
inc
adc
add
cltd
pushf
xchg
jmp
cmpsb
iret
gs
xchg
mov
jl
in
xorl
inc
jmp
in
and
push
loope
insb
xorl
fmuls
mov
fnstenv
ja
jl
xchg
xchg
fdivs
add
inc
mov
jae
jno
add
bound
jns
xlat
xor
fdivl
fdivr
pushf
sti
inc
add
mov
gs
lcall
push
mov
repnz
pushf
mov
int
incb
adc
out
test
sbb
jmp
lret
scas
lock
push
in
mov
and
pop
pop
arpl
iret
mov
pop
test
lret
std
mov
lods
aas
adc
idivb
outsl
scas
inc
fldenv
pop
cld
adc
jae
lret
xchg
inc
mov
idivb
cmp
push
dec
dec
add
cwtl
inc
push
mov
rclb
jge
leave
pusha
fcompl
je
bound
inc
dec
addl
pop
fisttpll
out
xor
xchg
add
je
inc
xor
cld
jp
adc
mov
fsubrs
notb
push
ret
movsl
mov
add
mov
movsl
sbb
popf
js
int3
shlb
jnp
sbb
pop
dec
mov
mov
xchg
dec
jmp
sbb
add
repnz
jge
xchg
call
xor
jl
stc
iret
cs
add
sub
daa
mov
gs
mov
imulb
icebp
cwtl
pop
stos
in
sbb
lcall
inc
out
mov
sahf
pop
cmc
and
mov
sbb
leave
adcl
mov
clc
xchg
loopne
outsl
cwtl
add
ud1
mov
mov
mov
repz
jp
dec
jg
mov
dec
cli
aam
mov
pop
xor
ljmp
sbb
add
add
mov
mov
loopne
rclb
pop
cmp
push
call
sahf
or
dec
scas
shrl
imul
dec
mov
mov
or
imul
dec
std
mov
iret
retw
mov
in
dec
xchg
mov
push
outsl
icebp
push
pop
mov
sahf
jae
dec
sub
int
or
fcoml
insb
insb
jns
push
imul
xchg
sub
jo
es
or
fcomps
xor
jp
imulb
push
add
pop
lock
stos
cwtl
lods
inc
lret
cld
and
cld
dec
jnp
jb
or
repnz
push
jae
js
sarl
rolb
xor
sbb
xor
xor
adc
popl
mov
jb
jnp
mov
enter
jbe
jne
fmul
and
scas
and
xchg
pop
lcall
pop
js
jae
int3
cltd
lea
call
xlat
shll
pop
push
std
rolb
pop
stos
fstl
es
negl
push
lods
mov
or
rcrl
adc
and
xchg
stos
inc
or
push
mov
inc
pop
xor
pop
arpl
sbb
repz
jo
popa
push
in
add
lcall
fidivrl
inc
mov
fcmovne
fs
ss
movsl
and
notl
lret
stc
sub
and
push
lret
xor
shlb
loop
and
enter
jo
cmp
leave
jmp
repz
pop
push
lock
jne
jg
cmp
in
jg
fisubrl
fs
xor
inc
mov
push
movsl
loop
pop
rorl
sbb
iret
cmp
cmp
xchg
mov
fistl
push
push
mul
add
dec
outsl
and
ret
arpl
int
fsubrs
xor
jge
cli
xor
decl
sub
xor
outsb
mov
dec
imul
out
aaa
mov
push
dec
mov
mov
mov
push
inc
inc
add
pop
aaa
icebp
pop
add
loope
leave
pusha
xchg
aad
cmpsl
out
fsts
test
mov
dec
fwait
popf
cld
adc
and
repz
loopne
aad
movsb
pop
imul
aam
sub
jp
adc
fucomp
fisttpl
je
xor
mov
cmpsl
in
das
andl
outsb
xchg
sub
jle
ja
or
cmpsl
push
xlat
pop
leave
cltd
subb
pop
sahf
scas
js
lahf
test
scas
mov
ficompl
jle
movsb
out
xchg
add
xor
cmpsl
or
seto
dec
adc
fwait
sub
enter
mov
add
test
fdivp
and
xor
std
add
cmp
lods
mov
adc
cld
xchg
cmp
and
ljmp
jno
cmc
push
js
mov
dec
cmp
jl
mov
andb
mov
adc
mov
add
sahf
cmp
in
or
and
stos
lea
in
jl
ja
xchg
dec
pop
ret
in
xchg
xchg
or
adc
xchg
sub
lock
addr16
scas
and
fcmovnbe
push
xor
rcrl
or
into
cmp
push
pop
loopne
push
jbe,pn
loope
ret
jae
cmp
mov
jp
or
or
je
mov
loop
pop
cmp
call
cmp
mov
or
jb
mov
stos
jne
xchg
jns
cmpsb
out
xchg
in
dec
xchg
sbb
push
imul
lcall
xchg
sbb
pop
aaa
repz
shrb
mov
test
rol
mov
sahf
jmp
push
add
sbb
jae
push
stc
sub
stos
pop
sub
mov
int
fildll
mov
fsts
out
xchg
dec
or
es
xor
jmp
loope
bound
repz
xchg
sbb
popa
jnp
mov
aam
adcl
jmp
mov
push
fdivp
into
loope
push
pop
fsubl
ror
push
aaa
je
testl
mov
xor
in
out
dec
cmpsl
ds
test
sbb
pop
pop
jo
scas
mov
lcall
sbb
or
scas
dec
mov
scas
jle
bound
daa
mov
xchg
cwtl
mov
jp
or
jno
and
test
adc
lcall
cmp
inc
sub
sti
fwait
push
jg
pop
sar
call
or
movsl
xchg
and
repz
out
adc
inc
or
adc
jbe
sbb
test
sti
fs
cmp
addb
or
addr16
pop
fcompl
mov
fadd
pop
mov
divl
and
pop
xlat
jae
sub
pop
jmp
cmc
add
xlat
sub
push
mov
push
sub
inc
test
scas
mov
inc
test
jno
outsb
mov
divl
mov
xchg
mov
sub
repz
and
dec
andl
lahf
test
bound
sbb
xorb
cltd
cltd
sub
lret
sbb
sub
pop
stc
loop
mov
and
nop
mov
xor
faddl
push
inc
stos
sub
inc
pop
push
inc
pop
jmp
cs
dec
push
pop
sub
repz
movsl
mov
stc
stos
std
fwait
mov
int3
sbb
and
shl
add
or
insl
mov
inc
xor
int
fistl
pop
iret
mov
add
das
loop
and
mov
addl
lods
pop
scas
jbe
cmp
cltd
orl
mov
pop
dec
jl
cmc
jno
subl
data16
xchg
lcall
cmp
cltd
sub
pop
xor
dec
and
add
iret
in
xchg
cmpsl
dec
mov
mov
cmp
sub
cmp
jmp
inc
push
add
into
xchg
xchg
mov
rcrb
push
mov
loopne
dec
push
xlat
push
es
inc
xor
pop
pop
fstl
stos
ljmp
jno
pop
lcall
dec
sub
cs
jno
jge
sbbb
rcrb
or
cmp
cli
cmp
jmp
mov
cld
out
addl
adc
cmp
inc
mov
repnz
movsb
cmp
push
mov
icebp
fs
repnz
icebp
adc
test
or
lret
cld
lea
test
dec
mov
data16
mov
fcomps
xchg
and
fmuls
add
sub
xor
lods
das
fsubr
shll
cmpsb
hlt
mov
mov
mov
push
pushf
cli
fstpl
pushf
dec
dec
mov
mov
push
sbb
adc
or
add
mov
xor
fisttps
daa
cltd
mov
pop
sti
fstl
mov
mov
das
hlt
leave
cmpsb
xor
fwait
mov
test
std
jge
dec
push
ret
addr16
clc
mov
push
stos
sbb
xlat
jnp
cmp
jo
push
inc
bound
or
cmp
das
lods
mov
test
cmpsb
pop
xor
pop
lock
mov
pop
and
addr16
sbb
inc
xor
lcall
and
pop
pushf
outsb
mov
or
and
sub
mov
xchg
aam
test
cli
add
push
shlb
xor
hlt
push
mov
push
in
push
outsl
mov
push
fisubrl
popf
lods
xor
push
push
inc
cmp
inc
stc
into
out
jg
into
push
dec
pushf
pushf
dec
add
lret
or
ss
mov
repnz
adc
lahf
pop
ret
cmp
and
popa
mov
iret
push
in
pop
pop
inc
and
and
jb
pop
cwtl
in
sub
push
adc
add
jp
sub
adc
xor
repz
cld
add
lock
pop
mov
xor
repnz
adc
and
ret
cmp
shrl
imul
mov
xchg
test
cwtl
pop
lcall
dec
daa
xchg
cmp
sbb
hlt
mov
jle
adc
aam
xor
or
testl
cmc
mov
cmp
dec
add
push
pop
push
push
xor
cld
fnstenv
testl
xchg
mov
nop
cmpsb
les
movsl
pop
mov
add
stos
sar
lret
andb
dec
in
mov
imul
xlat
xchg
ljmp
insb
mov
mov
cmp
adc
add
adc
out
lret
fldenv
add
add
filds
inc
inc
xchg
xor
fdivs
mov
inc
pop
test
mov
add
jl
aad
sti
push
pushf
lret
jecxz
fldenv
push
mov
nop
sub
aas
push
cmp
movsb
rclb
inc
icebp
xlat
test
push
mov
mov
inc
test
jnp
fnsave
and
sub
js
or
imul
cmpsb
dec
xchg
xor
dec
push
movsl
mov
sbb
xchg
into
insl
fsubrl
out
push
jo
cwtl
repnz
dec
imul
pop
xchg
jmp
mov
aas
outsb
call
mov
testl
insb
aam
pop
test
adc
movsl
inc
dec
das
fwait
xor
fwait
mov
xlat
sub
aad
loope
in
icebp
pop
aaa
daa
jno
fnsave
call
or
jbe
scas
bound
sbb
inc
cmp
push
add
cmp
shlb
dec
lret
pop
sbb
lea
and
sbb
inc
test
sbb
scas
pop
and
les
insl
add
xchg
sub
xor
stc
rcrb
pop
mov
sti
mov
lahf
xlat
and
adc
and
sahf
negl
sti
jo
mov
pop
or
cmp
hlt
addr16
mov
mov
cltd
enter
pop
jg
xor
dec
add
fidivs
push
addr16
inc
cmpsb
enter
fimull
pop
and
cmp
xchg
dec
imul
and
int
dec
jbe
fyl2x
jg
int3
pop
cld
mov
pop
repz
adcb
adc
into
inc
aam
arpl
mov
sbb
xor
add
or
inc
lods
mov
push
jg
lcall
pop
fists
mov
imul
popf
pop
ljmp
xor
ljmp
jno
mov
test
sbb
jo
jecxz
jns
shrb
push
cmp
push
in
mov
cmp
lods
pop
int
sbb
icebp
mov
sub
push
sbb
les
mov
test
and
subl
pop
mov
jns
xchg
xchg
add
in
add
mov
cmp
dec
jae
mov
sbb
js
pop
cmpsb
dec
dec
inc
dec
fs
rol
ret
or
fistps
xor
xchg
jbe
push
movsl
push
xchg
dec
bound
adc
cmp
pop
int3
pop
test
mov
push
dec
lods
ret
and
inc
stos
xor
or
pop
mov
mov
jg
or
push
ds
out
xlat
cltd
test
inc
add
imul
daa
mov
xchg
fcmovnu
mov
ret
push
cwtl
shrl
imul
jecxz
jbe
xor
jne
std
sbb
mov
ret
add
xor
xchg
cs
mov
in
xor
pop
mov
ret
lcall
xchg
mov
dec
adc
popf
xor
in
lahf
popa
icebp
xor
cld
ficoml
xchg
sub
push
fnsave
aad
lahf
mulb
out
push
repz
lcall
push
cli
in
adc
test
cmpl
inc
mov
imul
sbb
and
jae
pop
movsb
sbb
adc
mov
pop
sbb
push
lods
cs
js
cmpxchg
cmpsb
das
imul
push
icebp
or
movsb
mov
adc
xor
sub
aad
das
sub
xchg
mov
sub
call
sbb
pushf
xchg
inc
fld
mov
jecxz
or
aad
pop
dec
jmp
stos
inc
push
push
enter
enter
out
mov
mov
inc
mov
xor
movsl
xchg
sbb
push
rclb
mov
ss
adcb
pop
push
sahf
lods
test
pusha
jl
push
in
ja
fimull
out
iret
ror
push
lret
inc
jb
xlat
scas
mov
dec
fisttpll
arpl
jbe
mov
xchg
push
mov
xor
insb
add
and
lds
aam
cmc
pop
dec
fnsave
rcr
sbb
xchg
dec
popl
rolb
imul
sub
insl
xor
hlt
adc
enter
mov
adc
out
mov
into
push
test
xchg
mov
cmp
out
xchg
out
xchg
adc
inc
push
imul
xchg
sbb
jp
je
xor
scas
push
and
add
pop
xor
int3
fs
test
bound
pop
xor
mov
jecxz
ds
or
les
sub
je
movsb
adcl
cmp
rcl
js
jne
sbb
fistpl
fidivrl
xchg
test
int
das
pop
aaa
push
dec
bound
adc
cmp
loopne
push
test
sarb
repz
mov
add
mov
leave
pusha
leave
inc
cli
and
cltd
push
dec
sbb
shrl
mov
mov
mov
mov
dec
xor
push
and
push
test
cmp
jle
into
gs
mov
addr16
clc
xchg
inc
adc
into
jge
adc
and
jno
xor
js
cld
xor
dec
cli
jp
inc
cmpsb
mov
mov
jl
xchg
jp
aad
mov
es
dec
jecxz
sahf
xor
push
mov
push
xchg
fadds
loopne
xchg
sub
jnp
testb
jmp
cld
sbb
mov
movsl
mov
pop
nop
sarb
mov
pop
jnp
inc
mov
adc
idivb
or
xchg
mov
mov
rorb
aas
inc
dec
loop
lods
mov
mov
jb
js
pusha
out
push
lret
sub
push
out
add
outsb
hlt
or
pop
sub
in
mov
aad
pop
rcll
mov
xor
rorl
sbb
inc
add
jb
pop
ret
fists
imul
vpshufd
cmpsl
mov
les
pop
into
mov
or
loope
push
jb
pop
loope
lahf
mov
in
dec
add
leave
or
outsb
cmp
inc
fcmovne
dec
inc
dec
cli
pop
xlat
adcb
test
fnstcw
mov
xchg
aas
icebp
push
repz
fisttpll
sbb
xchg
and
ret
or
ljmp
iret
jg
ds
insb
add
mov
repz
dec
lods
jb
mov
sub
and
cltd
or
jns
in
dec
inc
std
cmp
pop
subb
jns
stc
stos
out
fisubrs
and
and
dec
jae
or
and
movsl
cmp
loop
cltd
in
ret
scas
movsb
cmp
daa
jmp
sbb
negl
ret
and
pop
mov
or
rol
push
push
in
mov
inc
jo
call
shlb
outsb
inc
dec
xchg
int3
xchg
nop
pop
jne
cmp
pop
outsb
lret
test
std
push
sbb
das
push
pop
xor
cmpsl
int
add
push
nop
ss
ljmp
ss
xchg
lds
and
mov
les
mov
js
jne
movsl
fs
and
arpl
out
sbb
mov
test
and
dec
cmc
mov
inc
cmpb
sub
int3
cmp
mov
shlb
lock
roll
sub
pop
jmp
adc
inc
and
add
into
xchg
rcll
inc
or
fildll
xor
or
add
sub
xchg
or
int3
clc
mov
jno
mov
jge
hlt
pop
es
fs
push
mov
test
mov
stos
mov
sbbl
aam
cld
push
out
popf
xor
sub
inc
and
push
scas
inc
xor
xor
lcall
mov
push
and
mov
das
add
sbb
xchg
cmpsb
mov
adc
push
mov
xchg
in
push
nopl
mov
stos
iret
pop
and
dec
rcrl
jge
mov
push
dec
push
mov
popf
xchg
imul
iret
cmpsb
stos
insl
popa
or
add
testb
popf
cmp
call
mov
sahf
aad
rcrl
movl
scas
or
test
add
movsl
push
mov
std
test
aam
inc
das
test
and
xchg
loop
lods
fistpll
fs
pop
cmp
popf
out
push
aad
mov
out
cmpsb
int
xor
push
mov
es
ror
mov
push
dec
popf
je
lahf
loop
pop
cltd
mov
addb
sti
ret
std
or
or
outsb
dec
dec
fidivrs
add
ret
rol
fdivrp
adc
mov
scas
mov
loopne
push
or
repz
dec
lret
pop
jl
ds
push
roll
leave
xchg
dec
stos
dec
cmp
pop
fucom
mov
mov
repz
xor
xchg
xor
dec
push
cmp
jb
insb
pop
and
xor
and
jle
adc
cltd
xchg
or
adc
es
jae
out
jge
lods
mov
pop
sbb
jge
lret
dec
xor
mov
cmp
insb
add
mov
jp
in
orb
jmp
and
xchg
jg
inc
popa
dec
push
mov
jp
call
mov
push
jns
xchg
adc
cltd
mov
push
cmpsb
xor
xlat
cwtl
repz
dec
loop
push
lret
mov
fs
ror
adc
movsb
fnstsw
push
jnp
jo
popa
adc
rcll
test
inc
roll
lret
arpl
sub
aaa
jb
imul
jno
dec
cmp
xlat
sbb
inc
pop
ret
push
hlt
out
sbb
push
xchg
out
lcall
orps
or
lds
mov
mov
outsl
clc
xlat
mov
jno
sti
pop
mov
dec
push
movsl
repz
adc
xor
adcl
out
add
mov
out
sub
movsl
xor
out
adc
pop
pop
lea
movsb
jne
aaa
inc
rolb
and
loop
sub
mov
repnz
test
mov
cmpsl
ret
outsb
mov
xchg
les
push
push
imul
add
add
push
sbb
cwtl
add
test
les
xchg
jmp
jne
sbb
or
aam
xor
in
inc
push
mov
jbe
cli
pop
xchg
and
les
ret
or
ret
adc
mov
clc
or
sub
cltd
test
and
aaa
fdivl
cmp
mov
inc
mov
fdivrs
negb
aam
xchg
out
dec
mov
inc
rcrl
mov
repz
xor
mov
lahf
fimull
mov
aaa
into
pop
xlat
or
and
inc
mov
hlt
out
sub
or
scas
mov
loope
mov
lahf
fidivs
movl
shrl
adc
adc
insb
pop
cmp
mov
push
add
js
addr16
ret
ljmp
jno
add
es
push
jmp
push
cmp
fucom
ret
sub
fxch
jo
and
xor
cs
test
mov
ja
movsb
pop
icebp
mov
sub
cld
scas
xchg
addr16
inc
pop
sahf
testl
insl
mov
cmp
jecxz
out
test
add
or
aam
cmp
pop
popa
jo
ret
jo
cmc
gs
mov
dec
mov
cmovns
dec
lahf
push
mov
xlat
inc
jg
call
cmp
add
pop
icebp
or
fcoml
in
orl
cltd
cmp
popf
lods
ret
in
xor
adc
mov
shl
sub
ret
xor
sarb
push
int
sbbb
adc
out
sbb
gs
sub
insl
movsl
je
add
sbb
mov
xlat
mov
ret
icebp
mov
scas
push
jge
das
inc
sarl
notl
rcrb
xor
jecxz
mov
cmpsb
cld
stos
jmp
jno
adc
iret
pop
into
ds
xor
push
in
and
loopne
mov
inc
or
add
sub
jmp
shrl
inc
subl
sub
imul
rol
inc
fmul
inc
in
lock
jp
dec
les
mov
out
fcomi
adc
push
inc
cmc
es
mov
aam
inc
pop
cmp
mov
ffreep
dec
push
mov
and
roll
jno
jmp
sub
nop
dec
lahf
stos
lcall
mov
cmp
lahf
mov
movsl
cmp
sub
inc
out
rcll
or
js
enter
fldl
call
daa
ja
out
inc
iret
aam
mov
in
test
or
mov
fidivl
or
pop
pusha
push
subb
push
aas
xor
dec
int3
xchg
mov
mov
shrb
in
in
lods
rorl
sbb
ds
jl
xor
push
jb
add
dec
lock
xor
add
xchg
andl
pop
lret
std
fistl
sbb
add
mov
shl
cmp
push
or
jl
jo
xchg
or
ror
jp
cld
stos
jecxz
xchg
and
lret
inc
mov
cltd
std
ds
cmpsb
sub
sbb
fdivrs
scas
pop
mov
jae
fcmovne
popa
sbb
jo
mov
pop
mov
mov
dec
outsl
lea
lcall
dec
ret
scas
out
xchg
pop
fimull
lds
test
imulb
adc
mov
test
xchg
aad
push
push
jne
popa
xor
adc
cmp
xor
jecxz
loopne
dec
mov
push
pop
repnz
call
stos
xor
pop
arpl
or
xor
jns
jo
mov
sbb
jle
subl
outsl
lea
fnstenv
call
or
sbb
iret
lds
outsb
fwait
mov
push
and
jns
mov
inc
xchg
rolb
leave
cmp
enter
mov
mov
lock
cmp
push
inc
cmp
divb
pop
imul
sub
or
jbe
jns
clc
xchg
jg
mov
jo
xor
fmul
sub
pop
imulb
sti
mov
mov
stos
nop
dec
mov
mov
dec
rcr
popf
mov
sahf
jns
add
pop
lcall
push
fdivs
and
push
and
sti
lods
fildl
push
outsl
neg
sub
jbe
fnstsw
or
shl
or
lret
dec
dec
mov
fs
movsb
sahf
push
push
loopne
mov
rcrb
pop
outsl
enter
js
fldcw
or
call
dec
repnz
and
lcall
out
std
ror
iret
pusha
jmp
pushl
loop
es
jmp
mov
push
ss
xor
pop
xchg
lret
pop
das
cmp
cs
es
pop
lcall
lret
lods
fs
dec
mov
gs
fldt
push
pop
or
inc
sub
mov
sub
repz
loop
xor
pusha
cmp
and
xchg
pushf
shll
aad
push
sub
popa
clc
out
jle
popa
pop
adc
adc
xchg
jg
ret
mov
in
loope
xor
pop
jno
daa
cmp
ja
movb
adc
or
shll
arpl
cmp
dec
repz
jle
and
fstp
and
pop
fucomp
jge
ljmp
pushf
mov
mov
lods
or
xchg
lods
push
pop
out
f2xm1
xchg
sbb
ljmp
inc
ficompl
ficoml
not
int3
inc
ret
daa
dec
mov
pop
adc
int
ds
push
mov
fsubrl
adc
popa
mov
ss
lahf
pop
std
or
mov
rclb
mov
icebp
push
and
inc
sti
sbb
inc
lods
jns
in
mov
inc
add
xchg
or
mov
and
xchg
xchg
xor
jmp
fsubl
ficoml
cmpsb
stos
test
aam
push
les
mov
inc
sahf
sbb
pop
inc
fsubl
ds
mov
fdivs
movsb
addr16
xchg
xor
or
or
pop
xchg
inc
jge
dec
ljmp
pop
cld
insl
rcr
sub
mov
js
fbld
adc
cmp
xchg
inc
cmp
pop
or
sti
xchg
jnp
cmp
pop
insb
mov
sbb
shrb
mov
out
sbb
jecxz
adc
cli
mov
pop
mov
inc
or
dec
out
or
hlt
fidivl
rorb
and
andl
dec
lahf
int3
in
test
sub
lds
rorb
push
push
push
js
inc
and
xchg
aad
push
jmp
pushf
sbb
mov
jle
scas
mov
test
daa
outsl
cmpsb
pop
test
pop
xchg
aad
xor
call
std
iret
jecxz
jge
xchg
shrb
jns
xor
mov
xchg
das
jae
popa
or
lock
jge
leave
xchg
add
mov
xlat
leave
or
addr16
and
imul
jecxz
jns
push
test
jecxz
repnz
add
adcb
and
aas
push
fnstenv
dec
xchg
sub
stos
xchg
inc
or
fidivrl
jg
mov
ret
pop
dec
xchg
adc
pop
mov
cmpsl
dec
dec
mov
push
ljmp
jno
add
and
and
sub
cmp
sbb
adcl
push
add
push
mov
adc
mov
jmp
pop
leave
jo
loope
mov
int3
out
ss
or
jmp
add
xor
mov
inc
push
push
aam
sub
mov
mov
add
sub
add
data16
ja
jae
aad
mov
lret
xchg
and
lock
push
dec
stos
mov
xchg
or
mov
xchg
jge
push
jg
loopne
add
repnz
test
fdivrs
cli
xor
push
cli
std
clc
das
sbb
ljmp
inc
stos
inc
sub
movsb
lds
or
test
in
fwait
adc
fstpt
xchg
adc
jge
mov
rcrb
dec
testl
ss
test
mov
mov
fildll
jle
sbb
insl
push
mov
xor
popa
or
leave
inc
clc
mov
push
xchg
dec
cmp
mov
fisttpll
sbb
or
ret
insb
sub
push
scas
lcall
cmp
sub
pop
jns
push
jle,pn
mov
dec
ljmp
sub
jno
clc
push
fdivs
outsl
adc
repnz
jg
mov
psrlw
mov
mov
idivl
mov
mov
cmp
ja
mov
mov
jge
nop
mov
fdivrl
pusha
push
mov
daa
in
xchg
bound
dec
cs
in
xchg
cld
xchg
outsl
xchg
pop
sbb
ja
sub
sbb
mov
sub
and
repz
push
lods
xchg
xor
lea
mov
sbb
xchg
mov
push
in
mov
je
and
scas
test
mov
sbb
inc
fdivr
cmp
adc
add
xor
adc
int3
mov
loop
inc
fidivrs
nop
jecxz
jno
repz
dec
mov
sti
jne
adc
push
popf
pop
lock
sti
pop
and
les
jne
mov
mov
shrl
fldl
cmpsl
aam
in
fcmovnbe
addl
xchg
or
pop
or
and
inc
sub
add
out
adc
or
lods
mov
push
fidivl
cmp
and
es
movsb
scas
xchg
icebp
inc
sti
iret
sub
pop
cld
sarb
cs
scas
sub
mov
scas
dec
loop
jns
push
addr16
cmpsb
mov
push
insl
jp
cmp
jg
bound
dec
xchg
popa
cwtl
mov
leave
adcb
rorb
sbb
mov
rcll
mov
js
test
ja
cmp
sbb
mov
push
pop
aaa
ffreep
mov
dec
les
shlb
int3
push
or
pop
mov
add
cmp
pop
sarl
dec
mov
movsl
cmp
rcrl
add
repz
mov
jecxz
inc
int3
outsb
aam
adc
nop
incb
inc
fsubr
in
dec
dec
cmp
ljmp
in
push
dec
push
aas
shrb
xchg
jo
clc
pop
adc
iret
fisttpl
scas
mov
sbb
add
mov
dec
call
pop
mov
sub
hlt
sti
xchg
adc
xchg
nop
pop
je
outsb
xchg
sub
ror
mov
js
out
and
mov
jmp
add
mov
and
push
mov
test
adc
lods
push
mov
or
add
xchg
fsts
jnp
pop
and
inc
push
cmp
in
out
fwait
push
sub
push
sbb
dec
mov
mov
push
mov
push
inc
xlat
dec
pusha
pop
cmpsl
push
sub
sbb
push
or
cmp
hlt
movsl
xchg
jne
pop
imul
xor
xchg
pop
cltd
push
jmp
adc
and
into
pop
sub
ds
out
cmp
mov
add
xlat
sub
or
mov
arpl
or
push
dec
and
push
les
arpl
and
inc
jle
outsb
mov
mov
add
inc
pop
movsl
fld
push
xor
stc
and
pop
clc
add
outsb
sub
mov
dec
sbb
movsl
mov
push
xor
addl
and
in
mov
pop
pop
repz
mov
pop
sub
xor
xlat
sbb
jl
adc
shll
xor
xor
jg
dec
mov
test
xchg
dec
push
push
popa
hlt
adcb
icebp
lods
ljmp
and
iret
pop
push
or
pop
sub
mov
fsts
mov
push
ret
data16
leave
lea
roll
push
jb
repnz
sti
outsb
pop
stos
lahf
setne
icebp
test
lods
ret
push
mov
lahf
mov
fmull
cs
mov
lds
jae
aad
pop
nop
push
adc
nop
jecxz
sub
adc
in
sub
xor
push
in
lcall
popa
and
push
cmp
inc
dec
stc
arpl
xlat
mov
add
inc
data16
and
and
ss
add
add
imul
inc
xor
dec
cld
sub
mov
in
test
xchg
and
sbb
rolb
outsl
orl
mov
adc
inc
sub
or
jo
stos
cmp
or
jbe
cmp
sbb
add
ss
pop
int3
mov
push
mov
loope
xor
test
lods
fmul
bound
shr
sbb
incb
mov
loope
sbb
or
cld
cmp
adc
rcl
mov
dec
xlat
dec
add
rolb
xchg
test
xchg
je
inc
fldl
lahf
xor
ss
xchg
and
xchg
adc
add
mov
inc
sbbb
xor
and
pop
adc
bound
repz
dec
or
jle
pop
adc
ficoml
or
mov
fisubs
fs
ror
outsl
cmp
xchg
dec
inc
int
ljmp
in
jle
sub
push
mov
or
xlat
mov
bound
cmpsb
dec
stos
pop
inc
push
aam
ds
dec
out
sarb
aad
ljmp
rorb
and
xor
test
push
push
shll
mov
das
sub
xor
jg
pop
packsswb
sbb
pop
mov
nop
pop
enter
pop
adc
jg
push
inc
sub
out
js
shrb
dec
jecxz
mov
inc
push
inc
clc
loop
cld
addr16
jecxz
ret
insl
inc
shrb
leave
ss
das
fcomps
inc
dec
aaa
or
mov
lret
pop
ror
jg
test
inc
dec
mov
ffreep
or
icebp
mov
out
iret
mov
mov
les
or
jbe
mov
sbb
pop
test
dec
into
push
jno
and
pop
xor
lods
ljmp
mulb
sbb
aaa
dec
or
enter
movsl
cmp
jnp
and
test
mov
mov
lahf
nop
dec
std
test
cli
xchg
ficoml
mov
adc
test
sti
lahf
in
mov
lcall
mov
dec
cmp
sbb
jns
lahf
mov
cmp
or
shrb
sbb
pop
sbb
add
cli
push
scas
or
cmpsl
xorl
movsb
ficoms
leave
jecxz
inc
lcall
loopne
lods
in
mov
pop
pop
call
xchg
insl
ljmp
or
outsb
inc
clc
imul
push
cmc
inc
jns
jae
or
cld
sbb
xor
sub
std
pop
int3
inc
mov
mov
std
xor
sbb
pusha
adc
jl
pop
in
xchg
pop
jp
sub
cmp
out
repz
testb
repz
scas
and
or
jmp
int3
xchg
pushf
ljmp
mov
adc
test
shl
cld
jg
imul
sub
pop
inc
xchg
jno
push
mov
xchg
movsl
test
not
add
and
push
movsl
and
jl
or
inc
pusha
push
insb
mov
or
jbe
lods
outsl
sbb
dec
nop
xor
roll
pusha
cmpsl
and
jno
jp
xchg
nop
testl
xor
cli
inc
repz
movd
cmp
mov
lret
or
data16
push
out
jb
mov
cmp
cmp
imul
jo
cmpsb
movb
sbb
jecxz
lock
push
ds
pop
inc
add
and
fistpl
and
cmc
mov
cmp
dec
cwtl
jns
or
xor
arpl
push
xor
out
lret
cmp
lret
into
inc
nop
jl
adc
test
xchg
mov
sbb
je
out
push
fisttpl
popa
sahf
mov
mov
mov
les
or
jbe
es
cltd
and
andl
pop
je
cltd
call
pop
and
cltd
push
mov
loopne
inc
mov
dec
push
je
cmp
test
mov
es
ljmp
pop
dec
push
into
add
stos
mov
rorl
fnstenv
mov
cmp
icebp
pop
jmp
mov
jecxz
int3
test
fmul
lock
jl
jle
push
mov
inc
pushf
jl
pop
outsb
mov
out
dec
js
cmp
pop
adc
pop
cmp
lea
aas
jnp
mov
test
lcall
cltd
ss
lea
mov
cmpsl
sbb
sbb
inc
lods
jo
aas
cli
push
fsubl
pop
sub
inc
xchg
sub
sbb
inc
shrl
movb
pushf
jo
xor
mov
xchg
fldcw
mov
adc
lea
jb
mov
jmp
notl
mov
mov
popf
cli
imull
insb
xchg
mov
outsb
shrl
insb
popf
dec
dec
xchg
inc
subl
push
dec
xor
in
ljmp
std
mov
mov
pop
shrb
jge
dec
or
fdivrp
fistpl
mov
fwait
gs
jae
and
lea
mov
dec
imul
dec
mov
push
into
mov
cmc
fucomp
xor
je
shll
inc
iret
sarb
sub
push
enter
push
xor
adc
push
pusha
xor
js
nop
pop
lock
push
sub
push
std
rorb
xchg
mov
sub
scas
aaa
sbb
dec
dec
in
mov
dec
push
ljmp
xor
sub
imul
sbb
sbb
sarl
mov
mov
repz
iret
xchg
cmp
mov
mov
jp
mov
aam
outsl
movsb
pop
mov
lea
lods
aaa
les
add
xchg
mov
mov
bound
outsl
mov
pusha
add
sbb
sbb
dec
jns
xchg
js
mov
mov
test
cmp
lahf
out
icebp
inc
loop
out
cmp
lahf
mov
subb
dec
cmp
push
add
fdivrl
imul
loopne
mov
out
lret
movsl
std
adc
push
cmp
out
push
imul
adc
xor
cs
xor
dec
loopne
sbb
mov
inc
aam
fildl
incb
add
sub
outsb
pop
add
cmpsb
mov
jl
sbb
sub
ljmp
pop
pop
jge
pop
outsl
dec
pop
jo
mov
outsb
insl
mov
jno
ret
repz
mov
stc
inc
dec
stos
xor
mov
stos
imul
jo
cli
inc
or
xchg
testl
mov
jne
and
inc
stos
rcll
fisubrs
push
mov
pop
push
inc
sbbl
aam
in
pop
sub
or
cmp
sbb
mov
adc
insl
xchg
cmpl
test
popf
mov
cltd
popf
xor
add
in
cli
aas
stos
xchg
cs
xchg
adc
in
in
mov
push
jmp
inc
mov
pop
push
out
repnz
add
and
jmp
arpl
data16
pop
lock
push
fadds
insb
xchg
fwait
jmp
movsb
cmp
xchg
xchg
xchg
divl
cmpsl
mov
out
cmpb
pop
inc
mov
imul
mov
divb
in
sbb
call
sbb
mov
insb
add
cs
push
and
insl
xor
jbe
cmp
push
addr16
ret
jge
push
sub
stos
aaa
jns
mov
xor
mov
outsl
fcmovb
ror
add
fs
sbb
data16
dec
leave
dec
xchg
push
jno
insb
outsb
lea
pop
stos
fimull
inc
ljmp
lock
pusha
insl
scas
std
pop
test
fdivl
pop
pusha
movsb
jb
push
les
mov
jbe
ds
shrl
ja
in
leave
mov
jo
fwait
sub
inc
mov
jmp
or
shll
fcomp
jb
mov
mov
outsl
adc
lods
cmpl
daa
stos
std
cltd
fadds
xchg
inc
jmp
sbb
insb
xchg
mov
mov
iret
mov
mov
popf
sbbl
call
xor
pop
adc
hlt
lea
or
add
mov
push
shrb
sub
cmc
int
add
out
and
jno
xlat
pop
jnp
mov
fisubl
mov
stc
pop
fsubrl
add
nop
mov
jge
pop
pop
jge
mov
sub
je
loope
aad
gs
testb
pop
shlb
pop
scas
inc
cltd
push
push
inc
sbb
lods
mov
push
shrl
mov
or
mov
scas
mov
xor
sbb
lods
mov
xor
gs
aas
stos
xchg
scas
mov
in
lods
sbb
ficoms
stos
test
mov
sahf
jmp
push
push
je
testb
in
add
lea
push
test
js
repnz
adc
inc
push
push
pop
jl
adc
and
out
sub
adc
rcl
aas
clc
inc
cmp
or
push
inc
paddw
dec
fistl
into
mov
pop
add
and
xor
mov
imul
add
and
aas
mov
popa
push
ficoms
pop
lea
cmp
sub
shrb
adc
dec
sbb
js
jmp
mov
add
jle
sub
push
inc
mov
sbb
xlat
mov
mov
ret
js
decb
sbb
sub
push
mov
dec
les
push
jmp
out
or
insb
mov
or
cmpsl
jbe
mov
std
shlb
leave
sub
sbb
dec
cmp
cmpsl
inc
stc
lock
fldenv
lds
jno
dec
mov
jne
je
push
hlt
dec
mov
es
je
iret
fstpl
mov
gs
and
arpl
pop
lahf
jp
mov
adc
pop
xor
xchg
test
int
mov
lret
pusha
pop
mov
push
shll
or
mov
test
jae
stos
xchg
xchg
xchg
loope
loop
dec
and
mov
lods
lds
mov
enter
sbb
fidivs
adc
in
movsl
js
ficomps
leave
jb
and
push
fidivs
mov
lods
loopne
xor
push
lods
insl
in
mov
lods
jae
mov
push
inc
movsl
xchg
sub
cld
pop
js
sub
shll
push
mov
cld
outsl
rcrb
xchg
or
das
sbb
iret
and
xor
ja
mov
aaa
movsl
jo
test
mov
je
adc
clflush
or
pop
ds
inc
movsl
in
fwait
xchg
pop
ljmp
sub
adc
scas
fistpl
aaa
stos
stc
mov
inc
jmp
adc
jb
xlat
repz
inc
pop
out
pop
dec
mov
jp
jne
adc
xchg
nop
mov
dec
mov
push
pop
jge
fucomp
in
es
sub
iret
xor
fidivrs
and
jno
pop
roll
loopne
pop
xchg
in
in
out
int
mul
pop
movsl
push
mov
add
jb
mov
out
aad
sub
sti
mov
dec
lcall
mov
xor
mov
pop
push
pop
iret
sti
push
ja
inc
sahf
bound
inc
test
inc
cs
pop
dec
dec
cmp
lods
adcl
filds
mov
in
and
adc
push
cmpb
in
sti
imul
fwait
cmp
cmpps
mov
in
pop
fdivrp
jbe
jbe
and
leave
scas
sarl
cmc
leave
fsub
repnz
sbb
out
add
push
push
addr16
inc
fldcw
scas
ret
sub
lock
loope
lods
fwait
stc
push
and
mov
dec
lcall
inc
add
mov
lea
imul
sbbl
add
popf
push
sub
lods
inc
dec
lock
subl
push
sti
nop
mov
addr16
pop
mov
mov
xchg
and
adc
arpl
lods
fadd
sub
cmp
xor
push
rcrb
les
lret
fcomip
cli
pop
jmp
fnstcw
hlt
dec
js
xor
stos
cltd
dec
out
dec
dec
lret
insl
jg
push
push
lods
dec
and
mov
outsb
int3
jae
pop
aaa
lret
icebp
dec
inc
test
std
pop
adc
jmp
aaa
mov
mov
pop
lock
lcall
xor
push
sbb
ja
ds
mov
mov
arpl
in
jnp
add
mov
adc
dec
scas
mov
and
fists
je
bound
inc
leave
test
in
pop
push
roll
ret
cld
aad
adc
mov
ret
nop
test
and
leave
push
ljmp
inc
adcl
push
std
std
cmp
or
sbb
stos
sub
mov
call
in
push
mov
aaa
fadds
adcl
push
leave
cs
xor
shl
pusha
push
mov
gs
jb
adc
out
xchg
fildl
pop
lahf
push
dec
fwait
leave
pop
pop
jecxz
push
push
or
add
pop
mov
aam
jae
sahf
xchg
mov
call
test
sub
and
int3
subb
movsb
in
mov
pop
dec
pop
push
outsb
sar
mov
js
mov
push
dec
pop
je
inc
jbe
scas
push
cmp
mov
hlt
cmp
dec
add
xor
shrl
scas
imul
xorb
cmpsl
imull
sbb
cmp
and
adc
icebp
aad
sub
lds
push
aad
iret
mov
pop
mov
enter
jnp
ret
ds
xor
cs
sbb
inc
sub
dec
jmp
and
inc
xchg
rorb
arpl
movsl
scas
js
mov
enter
mov
fsts
cmp
fcompl
adc
xlat
sbb
sub
ss
cs
pop
insl
add
les
and
aam
lea
jo
aas
daa
cmp
and
lahf
and
mov
mov
push
and
pop
outsb
push
fcomps
jmp
or
insl
pop
xor
insb
std
push
and
mov
mov
popa
pop
icebp
repz
or
ja
clc
jp
sub
nop
leave
mov
lds
fnstcw
sub
pusha
pop
jns
mov
out
frstor
push
inc
shll
xchg
sub
mov
cmp
add
inc
xchg
dec
cltd
cmp
sbb
call
out
mov
push
jo
test
push
sbb
lret
dec
stc
jbe
pop
test
scas
cmp
ljmp
sub
aaa
xchg
nop
repnz
or
and
aad
jne
adc
idivb
pop
inc
out
aas
div
push
lods
mov
into
xor
cli
popa
outsl
nop
into
xchg
out
outsl
out
mov
pop
out
inc
insl
mov
adc
cmpsl
mov
les
push
pop
scas
aas
lods
dec
add
add
or
mov
xlat
ret
in
test
loop
test
out
fsubp
xlat
or
cmpb
dec
jecxz
movsb
or
jle
jle
lahf
rclb
andl
xchg
das
cmpsl
add
push
mov
fcmovu
int
and
push
sub
lock
mov
add
jle
insl
aaa
iret
xchg
xlat
mov
add
inc
imul
aaa
add
subb
andb
xor
ds
out
aas
push
lds
jg
cmp
lock
cmpsl
loopne
dec
adc
in
push
mov
lea
mov
mov
push
aaa
push
jbe
push
jno
push
mov
popf
jb
scas
push
xor
jecxz
std
inc
lods
and
std
jg
int
xor
test
lss
cmp
sub
mov
js
loopne
ret
add
mov
imul
lods
and
icebp
movsl
sub
add
jl
or
and
dec
cli
mov
enter
lcall
mov
out
xchg
and
in
dec
add
mov
les
rcrl
lds
mov
sbb
cmpsb
push
ds
mov
sbb
or
jecxz
test
mov
dec
pop
ffreep
cs
inc
in
nop
cltd
jo
mov
sti
les
movsb
xor
repz
loop
sub
jg
jb
sub
aad
stc
popa
push
ljmp
xchg
pusha
jno
scas
sarb
add
jbe
inc
pop
hlt
jno
ret
shl
push
cmp
push
popf
outsb
aad
jp
sub
jae
outsl
out
int3
pop
sbb
xchg
adc
push
movsb
es
fucomi
sahf
test
jno
fldt
mov
push
cmpsl
mov
push
mov
mov
sbb
arpl
xchg
fs
ret
add
jne
pop
imul
pop
mov
lock
addb
out
adc
jge
xchg
repz
stc
shl
mov
aad
sti
mov
gs
and
les
dec
ja
dec
rcr
iret
adc
sarb
jns
cs
stc
mov
out
inc
inc
fisttpll
cmp
nop
fsubrl
dec
adc
pop
test
jge
adc
lods
fdivl
xchg
outsl
jnp
icebp
hlt
or
cmp
shll
popa
mov
mov
xor
mov
lret
mov
cmp
pop
pop
lea
lods
scas
out
lds
and
imul
cmp
xchg
adc
movsl
inc
fldenv
jecxz
mull
jecxz
pop
cltd
or
lock
mov
pop
dec
jae
sbbb
xchg
in
loop
jbe
add
loop
mov
dec
loope
xchg
insb
xchg
mov
sti
insl
sbb
mov
loope
cmp
jo
fistpl
xchg
lahf
xor
push
addr16
out
mov
cs
dec
push
mov
lahf
mov
out
cmpsb
jmp
out
cmp
pop
insl
pushf
cmp
fwait
and
cld
dec
js
mov
push
inc
mov
orl
pusha
adc
sub
scas
adcb
sub
add
jnp
xchg
sub
insb
add
xlat
insl
sbb
adc
stc
cmp
jno
int
ja
jge
fbstp
movsb
push
xor
sar
popl
jge
mov
sub
mov
jnp
cmp
scas
pushf
pop
xor
sbb
mov
inc
add
xchg
jne
sub
pop
adc
mov
mov
jnp
sbb
pushf
hlt
pop
es
xchg
xchg
out
in
xchg
mov
cmpsb
repz
push
mov
mov
imul
mov
scas
fsubrp
in
rorb
nop
rol
lret
cld
mov
test
fdiv
adc
sahf
inc
shrl
mov
int
mov
jno
ja
jge
mov
lret
jp
daa
data16
and
cmp
jno
push
inc
or
lods
mov
adc
pop
xchg
xor
push
jo
addr16
sar
pop
lahf
xor
lret
ja
mov
fisubl
lret
push
xchg
jmp
orl
jnp
popf
pop
lock
lahf
dec
ret
rorb
shrl
insl
test
mov
jp
das
loopne
imul
xor
lock
popa
add
xor
jbe
mov
xchg
pop
mov
sub
jmp
cli
or
shll
fs
cmp
inc
jmp
enter
pop
jge
ret
test
std
or
sbbl
xor
shll
shll
xchg
cmp
ret
jnp
insl
jmp
addr16
mov
or
pop
add
mov
push
inc
inc
xchg
pop
add
outsl
mov
cmp
pminub
xor
inc
fisubrl
std
pop
leavew
jo
out
addr16
test
jnp
gs
fisubrl
inc
mov
rol
mov
pop
test
ret
jl
pusha
adc
sbb
andl
push
mov
loop
jne
out
cmp
inc
inc
push
ss
sbbl
or
inc
lahf
mov
cmpsb
sbb
fwait
inc
loope
inc
sahf
jae
das
lock
mov
shll
cmpsl
inc
pop
fisttpll
fsubr
cmp
ret
xchg
mov
xor
int3
pushf
mov
sar
or
mov
dec
add
clc
sarb
mov
jae
lds
ss
and
stos
sbb
add
sub
xchg
out
leave
aas
add
nopl
arpl
das
into
lods
cmpsl
mov
or
scas
pop
add
in
mov
into
sarl
test
imul
cmpsl
fidivs
je
cmp
shlb
test
insb
mov
pop
jno
sbb
and
sub
mov
bound
mov
fidivs
xor
and
ja
or
adc
push
sub
sbb
mov
scas
xchg
adc
stos
aas
insl
jl
mov
les
cmp
push
les
pop
sbb
mov
xorl
or
xchg
xchg
inc
idivl
jl
xchg
push
push
aam
add
push
ljmp
scas
inc
or
jae
push
sub
ret
dec
lret
frstor
jecxz
imul
call
or
std
int
ljmp
insb
inc
fisubs
jae
cmp
lahf
add
sub
xor
jbe
xchg
cmp
add
xchg
push
sbb
mov
clc
mov
cmc
flds
adc
push
sbb
lret
sbb
arpl
cmp
push
insl
dec
stos
push
js
gs
out
test
mov
lcall
or
mov
out
rorl
nop
daa
sbb
scas
and
and
push
push
pop
pushf
scas
jge
popa
stos
dec
jb
ret
adc
cmp
xor
fistpll
pop
data16
lods
fstpl
mov
imul
loopne
out
ret
addr16
inc
mov
mov
jp
cmpsl
fsubl
mov
sub
pop
sbb
incl
ja
xorl
mov
loope
pushl
imul
int
nop
lret
clc
cmp
sub
add
mov
mov
sub
xchg
or
cld
xchg
cmp
cwtl
jp
dec
mov
inc
pop
insb
notb
jae
rcl
es
pop
inc
movb
rcrl
and
sub
jo
imul
push
gs
rclb
popa
in
shlb
pop
leave
sahf
sbb
shrb
pop
aaa
adc
push
inc
lods
sub
add
clc
pop
cli
add
mov
mov
sub
iret
add
sbb
and
repz
hlt
mov
jo
scas
inc
js
mov
test
mov
scas
inc
jae
sbb
sbb
cmp
lods
jge
test
int
ss
sti
loop
and
icebp
cmpsl
jbe
icebp
addr16
mov
sbb
stc
nop
mov
ds
stos
fsubrs
andb
rorb
inc
bound
cmp
xchg
stos
xor
mov
stos
mov
aas
adc
sbb
std
in
fldl
jmp
sub
loopne
pop
push
clc
imul
sub
mov
inc
xchg
push
cld
push
shrl
dec
ret
mov
icebp
out
rcl
or
aam
sti
icebp
mov
inc
enter
test
mov
sub
jl
sub
adc
sbb
ret
xor
dec
push
lret
add
inc
loopne
stc
or
mov
dec
xlat
out
aam
fstpt
jmp
jne
outsl
lds
jb
or
addr16
sub
jge
aam
dec
aad
jno
cld
aaa
mov
xor
sahf
clc
es
pop
dec
and
outsl
xor
daa
gs
shr
push
mov
cmpsb
cmp
adc
push
imul
push
gs
jmp
push
out
dec
mov
cwtl
je
sub
adc
jnp
pop
popf
add
cld
sub
leave
xchg
xor
lahf
jnp
test
icebp
pop
cmp
fdivrs
das
or
ret
sbb
push
outsl
dec
push
sbb
push
inc
sbb
jmp
mov
stc
or
or
pop
in
mov
mov
mov
mov
mov
enter
xor
inc
jmp
out
xchg
arpl
pop
lahf
cltd
add
inc
and
push
insl
and
ficomps
xlat
sub
fs
sbb
and
cld
cmp
and
pop
leave
sub
dec
pop
xchg
or
xchg
insb
mov
lahf
stos
mov
jmp
cmp
push
fisubrl
push
lahf
push
cmp
jp
mov
adc
loope
pop
mov
dec
inc
psllq
dec
loope
mov
lods
insl
mov
insb
nop
mov
inc
inc
loope
into
loopne
pop
daa
dec
lods
push
ss
xchg
movsb
add
test
xchg
pop
mov
cmp
das
ret
cmc
xchg
inc
push
mov
mov
out
jno
sbb
mov
loopne
outsl
rcrl
mov
mov
or
jo
mov
ds
adc
push
movsb
push
dec
mov
jnp
mov
aad
incb
jl
iret
sub
pop
inc
pop
dec
push
in
jle
mov
mov
scas
cmp
scas
adc
sbb
testb
pusha
jl
and
xchg
xor
mov
ret
stos
xchg
xchg
inc
test
sbb
out
cmpsb
cmp
das
paddd
mov
loopne
mov
sub
das
pop
jb
inc
jo
ret
inc
in
out
movsl
call
nop
clc
lcall
ret
repnz
lock
ljmp
sub
inc
mov
mov
pop
push
push
cmpsb
sti
xlat
fs
mov
cmpsb
sub
push
daa
imull
aam
mov
mov
push
ljmp
out
pushf
add
push
roll
mov
shlb
lods
push
outsl
push
xchg
jns
enter
adc
out
clc
xor
mov
push
sbb
push
les
xlat
ljmp
push
lods
lods
ljmp
sub
sub
rclb
dec
and
mov
imul
cwtl
xor
out
jmp
adc
mov
aad
sub
pop
lahf
or
cltd
dec
enter
jmpw
ret
xor
insb
in
cmp
push
hlt
mov
iret
mov
addr16
mov
cmp
rcll
pop
add
daa
loope
push
pop
ljmp
nop
add
ja
pop
addr16
insl
push
outsb
hlt
rclb
popf
mov
inc
cmp
pop
cmpsb
xlat
mov
inc
rorl
dec
aad
mov
dec
pop
cmp
jl
fidivs
popf
pop
jg
mov
jbe
jle
popa
stc
in
lds
and
mov
pop
je
aam
push
mov
jb
lock
lods
or
je
jns
add
jns
add
idivb
pop
and
jecxz
les
std
pop
sahf
sub
xor
add
mov
fidivs
add
mov
testl
and
movsl
mov
adc
sar
xor
and
leave
xchg
jnp
loop
shll
mov
roll
sbb
shrl
rorb
mov
or
scas
mov
sbb
cltd
scas
xchg
pushf
xor
scas
jmp
inc
stos
imul
mov
adc
push
icebp
push
mull
repnz
xchg
and
mov
clc
pop
fucomi
jmp
fucomip
gs
or
hlt
bound
jp
inc
pusha
or
pop
lods
popf
sbb
jnp
sbb
cs
xchg
pusha
or
sbb
sub
inc
fistl
popa
or
xlat
data16
or
mov
ret
leave
popf
inc
jecxz
insl
jl
sbb
aam
xor
rorl
mov
bound
insl
add
insb
add
push
shlb
and
out
pop
sub
adc
sub
andb
jg
adc
mov
dec
popw
inc
lods
jbe
jae
dec
add
in
push
mov
out
mov
mov
or
pop
aas
mov
clc
cmpsb
adc
fsubl
mov
popf
stos
inc
or
sbb
inc
mov
jno
push
in
jbe
testb
mov
xchg
mov
pusha
jno
xchg
xor
lds
jl
pop
push
int
leave
ss
stos
es
outsb
mov
test
sti
adc
xor
mov
inc
lcall
or
and
cmpsb
mov
mov
mov
mov
test
scas
sbbl
mov
sub
or
push
loopne
pop
incl
jecxz
es
add
inc
push
xlat
ja
sahf
push
add
lret
ficoms
clc
push
adc
inc
add
movsb
lfs
ud0
sbb
dec
gs
jl
add
push
cltd
mov
xchg
mov
xor
and
sub
lea
hlt
cmpsb
cmp
scas
stc
pop
xor
pop
test
icebp
lcall
sbb
cld
repz
lahf
ret
sub
mov
mov
imul
outsb
push
mov
push
lcall
or
lds
pop
push
jle
jb
repz
and
andl
xlat
stc
or
das
mov
shll
outsl
addr16
xchg
cmpsb
mov
adc
bound
loope
cmc
xlat
xchg
sti
js
jl
push
mov
ja
push
test
insl
jnp
cld
xchg
push
mov
sbb
pop
lds
loopne
in
std
add
addr16
outsb
iret
lea
mov
fs
bound
fisubrs
xchg
xchg
xor
sub
inc
arpl
xor
popa
cmp
leave
stos
or
dec
data16
insl
push
sub
dec
je
cld
fsubrs
cld
stos
stos
mov
adc
mov
shlb
inc
mov
dec
mov
mov
fnstsw
rcrb
lock
pusha
js
adc
sbb
inc
lahf
ss
fmul
pop
cmp
fldt
fdivs
cmp
inc
adc
pop
pop
mov
xlat
icebp
lods
xchg
movb
cmp
cltd
lock
sahf
xor
dec
sarb
iret
add
xchg
imul
js
loopne
push
loope
jb
test
pop
xor
push
movsl
xor
das
adc
mov
xor
cmc
jae
or
fisttpl
push
mov
push
jmp
or
ret
pop
int
testl
aas
push
leave
iret
inc
loop
out
sub
popf
push
mov
testb
insb
jbe
sbb
inc
mov
and
add
inc
test
xchg
dec
mov
test
les
dec
cmpsb
and
push
mov
adc
jmp
fldt
loope
pop
dec
or
mov
jb
mov
stos
sub
mov
dec
test
fidivrl
xchg
outsl
mov
stos
xchg
scas
push
adc
stos
inc
push
pop
xor
or
xchg
jne
mov
and
sub
or
dec
sti
adc
iret
out
pop
hlt
or
add
mov
mov
dec
and
pop
jae
pop
outsl
int3
insb
push
popf
orl
popf
sbb
sub
stos
cmp
push
mov
sbb
inc
ja
push
adc
pop
push
inc
fildl
arpl
add
xchg
arpl
sub
push
in
jnp
fistpl
cmp
outsb
mov
jl
cmp
push
inc
lahf
sub
dec
xchg
icebp
cmc
decl
cmp
mov
inc
dec
out
add
std
lods
les
shr
repz
inc
in
adc
lret
popa
cmp
cmpsl
hlt
subl
out
pop
das
dec
fadd
pop
push
add
pop
out
dec
jl
cld
int
clc
iret
and
dec
xchg
nop
fisubrl
dec
ret
lods
leave
aaa
and
jl
inc
int
dec
lods
push
stos
jns
xchg
mov
loopne
cwtl
mov
fcomps
pop
adc
mov
idivb
mov
dec
and
cmp
mov
push
pushf
movsl
ljmp
std
xchg
push
scas
add
ret
pop
add
and
dec
jecxz
js
imul
sbbl
mov
lcall
loopne
rcrb
sti
dec
in
lods
jg
jl
test
add
jl
insb
insl
mov
cmp
in
jns
mov
add
cmp
inc
jl
jbe
rcrb
dec
jbe
sub
cmp
xchg
hlt
or
mov
mov
ret
xorb
push
xchg
inc
add
cld
jnp
add
adc
lock
int
mov
rcll
faddl
ss
fsubrl
mov
or
push
rcr
inc
xor
mov
into
shrl
mov
adc
or
fdivr
daa
mov
orl
mov
fadd
adc
lds
pop
add
sub
icebp
add
xchg
stos
jbe
lods
ljmp
lea
add
sub
dec
or
stos
pop
mov
sub
cmp
and
push
jne
pop
push
xor
sbb
repz
jb
pusha
divl
sbb
dec
int
jle
mov
fnstenv
lods
cli
xchg
loop
js
mov
sbb
add
es
loop
inc
inc
out
or
faddp
lea
and
lock
inc
in
fdivp
out
cmp
test
fbld
adc
sete
ljmp
mov
inc
cld
jp
ficompl
cmp
jne
or
sub
sub
pop
sbb
fidivrs
andl
sbb
enter
out
xchg
enter
scas
hlt
mov
insb
add
mov
ret
fisubrs
pop
cli
cmp
xchg
out
ret
dec
dec
mov
pop
cmp
push
pop
ret
repnz
icebp
stos
imul
hlt
mov
imul
lret
repnz
icebp
inc
fidivrs
test
in
fwait
or
popl
lds
jbe
sbb
addl
test
dec
pop
out
andb
or
push
fucomp
jg
or
xor
ret
cmpsl
inc
stos
and
mov
inc
xor
shlb
fistl
lock
cmp
leave
xchg
push
or
es
cmpsl
cld
ds
testl
xor
fs
xorb
push
adc
test
push
in
hlt
lret
stos
xchg
cmp
insb
cmc
mov
outsl
dec
loope
aas
xchg
mov
ret
or
test
adc
nop
comiss
mov
xchg
xchg
xor
push
add
jo
mov
fwait
xchg
cs
add
jge
or
mov
aam
call
ja
iret
push
mov
pop
iret
stc
dec
mov
cmp
adc
mov
bound
aaa
or
nop
sub
cmpsb
mov
and
pop
fisttpl
adc
and
shll
mov
add
stos
jge
mov
dec
dec
or
daa
inc
iret
jecxz
int
hlt
test
cpuid
and
imul
xchg
imul
cmpsl
out
sbb
out
lea
cmp
sti
inc
rclb
lcall
les
cwtl
push
ds
jbe
and
cltd
mov
xor
inc
mov
ret
shl
mov
sub
mov
lds
clc
mov
movsl
xor
stos
adc
mov
andl
jb
and
push
cli
sti
stc
or
jb
xchg
in
fidivs
inc
adc
mov
add
cwtl
jns
xchg
or
lahf
jo
mov
cmp
cmp
pushf
inc
mov
popa
lods
adc
cmp
movsb
lock
js
pusha
xchg
ja
lods
popa
jle
xchg
int
adc
xchg
push
add
sti
dec
lret
scas
arpl
stos
lret
dec
in
stos
jmp
mov
loopne
or
cmpsl
ficoml
js
or
rol
cmc
mov
xor
movsb
pop
outsb
mov
jns
mov
rclb
and
enter
ret
jmp
cmp
cwtl
push
add
xor
jl
ja
cld
jnp
adc
xor
xor
push
sti
push
or
cs
fdivrs
sub
mov
cmpsb
lgs
je
lods
xor
movl
push
icebp
mov
gs
js
cs
xor
or
sahf
jb
xor
ss
mov
and
add
push
add
sti
pop
das
int
mov
inc
leave
outsl
sub
push
add
sti
and
pop
pop
aam
inc
xchg
cs
sub
mov
fwait
adc
mov
pop
dec
pop
stc
std
mov
ficoms
daa
mov
shrl
push
scas
inc
mov
xchg
ss
lahf
xchg
imulb
ss
lock
jns
sub
dec
push
testl
fcoms
fcomps
push
into
and
aas
inc
sub
inc
push
pop
lds
xor
divb
or
mov
mov
out
ret
jb
out
mov
pop
repnz
lea
mov
push
pop
fnstsw
jae
xlat
inc
fbstp
mov
push
add
loop
add
inc
bound
add
sub
es
or
jmp
shlb
jg
pusha
imul
push
inc
pop
push
cmc
cmp
test
pop
mov
inc
adc
orl
push
jge
fstpl
mov
mov
cmpsb
push
loopne
rcr
mov
push
ja
shlb
push
loope
xor
jge
pusha
call
cmp
cmc
adc
sub
loop
push
xchg
push
lock
ficoml
mov
lahf
jae
mov
cmp
in
push
outsb
outsb
insl
ficoml
cli
call
cmp
xchg
mov
repz
aam
int
mov
cwtl
push
sub
adc
je
jo
push
sahf
jge
stos
mov
jnp
adc
je
and
pop
test
or
mov
xchg
dec
test
in
dec
das
add
aaa
or
call
xchg
jb
jmp
fcoml
adc
mov
cltd
cmpb
fbld
roll
dec
push
mov
inc
nop
pop
xor
xchg
in
pop
cld
scas
push
or
xor
jl
and
push
mov
mov
sbb
jmp
mov
mov
iret
int
jbe
mov
rcr
cmp
in
push
int3
cltd
push
inc
pushl
push
sub
cld
lods
inc
sbb
testb
add
fnstenv
pop
ror
fdiv
loopne
or
rolb
bound
or
inc
stc
or
pop
jg
sarb
mov
aam
xchg
aas
movb
inc
jae
in
test
cmp
sbb
jns
clc
mov
push
insl
pop
jge
shlb
lahf
ss
xchg
roll
lcall
mov
jecxz
sbb
addr16
cltd
pop
out
std
outsl
ficomps
insb
inc
pusha
or
mov
outsl
xor
adc
out
mov
push
sub
jecxz
mov
and
out
add
cmp
jmp
xchg
es
push
mov
push
ja
out
lea
mov
loope
sbb
insb
mov
cwtl
insb
and
addr16
cltd
push
int3
or
lods
cmp
pop
stos
ds
jnp
test
cli
jno
aaa
aaa
dec
faddl
sarl
jb
repnz
shll
testb
add
mov
dec
jecxz
stos
mov
addr16
sub
mov
pushf
fsubs
ljmp
mov
jbe
sbb
je
jbe
push
arpl
sub
dec
fstps
fdivrl
mov
mov
pop
cld
bound
inc
push
and
mul
icebp
push
jmp
jnp
adcl
cmp
fadds
sbb
xchg
fsubrp
jecxz
or
jno
aaa
stos
fstpl
imulb
jne
xor
lods
in
add
push
into
fs
jge
loop
xor
dec
add
sbb
ja
das
dec
and
cwtl
mov
loopne
sti
xor
and
jl
aaa
les
divb
dec
lods
sub
and
daa
mov
adc
dec
leave
push
cmpb
mov
jle
out
es
test
in
adc
test
stos
and
clc
movsb
imul
xchg
outsl
pop
es
decl
sub
mov
cmp
mov
xlat
and
or
mov
adc
inc
pusha
jl
xor
xor
orb
pop
stos
dec
xlat
dec
add
cmp
adc
xchg
in
pop
mov
xchg
jmp
pop
icebp
je
pop
jb
pop
add
xchg
test
inc
sti
adc
movsl
cltd
into
pop
inc
jo
mov
adcl
pop
in
dec
iret
xchg
push
shr
dec
es
pop
scas
bound
cmp
adc
push
repz
add
push
fsubr
xor
add
jno,pt
jo
jb
aaa
adc
push
push
lcall
or
daa
data16
insl
scas
inc
sahf
aad
lahf
xchg
subb
or
push
inc
movsl
sbb
lahf
in
das
jmp
push
push
fs
pop
jb
pusha
aas
jne
stc
jp
sarl
rep
stc
and
xchg
inc
loopne
and
mov
jbe
sub
cli
bound
stos
or
cmp
lret
adc
pop
scas
xchg
fcmovbe
test
mov
inc
xchg
jmp
mov
add
test
mov
inc
xor
stos
or
aad
sub
andb
sbb
test
cmp
mov
popf
xor
xchg
addr16
mov
ret
lahf
jp
mov
jb
mov
mov
stc
mov
cmpsb
aas
sahf
fcmovnb
lcall
idivb
cmp
xchg
stc
xor
xchg
pop
sarl
xlat
sbb
lea
cmpsl
fiaddl
push
js
insl
in
mov
inc
and
pop
ret
mov
hlt
add
sbb
jge
pop
mov
movb
fidivrl
pushf
cmp
xrelease
xchg
sub
ret
loop
push
lods
jb
cmp
dec
movsl
sub
xchg
cmp
dec
es
push
outsb
sbb
fstpt
add
les
push
ret
and
xor
loope
adc
mov
ljmp
or
mov
jns
pusha
mov
jmp
out
and
aam
in
push
adc
jge
xchg
fisttpl
pop
push
sbb
mov
mov
cmpsb
aam
es
and
xchg
push
sub
shll
adc
test
cmp
inc
jmp
mov
andps
push
sub
int
fwait
gs
data16
dec
in
push
push
outsl
mov
jg
js
xchg
stos
or
ret
cmpsb
cmp
cli
or
jb
mov
mov
add
mov
jle
cli
cmp
adc
mov
and
dec
pop
cmp
inc
mov
pop
mov
mov
mov
xlat
ret
sbb
mov
std
negb
xor
testb
das
aad
inc
iret
sub
dec
sahf
or
bound
fidivs
nop
daa
imul
test
mov
repnz
mov
cltd
loopne
jecxz
inc
mov
push
mov
rcll
pop
repnz
fs
ds
jo
adc
xor
pop
inc
fldenv
fcoml
cltd
xchg
loopne
ret
insl
mov
arpl
push
add
fucomp
insb
test
and
push
sbb
movsb
cmp
shrb
lret
or
ds
fidivl
inc
ljmp
jmp
scas
imull
dec
ficompl
bound
shll
shrb
dec
out
stos
dec
rcll
mov
int
mov
shlw
popf
pop
jnp
jl
inc
xchg
cwtl
inc
popa
fmull
dec
cmc
sub
jne
pop
call
outsb
adc
emms
test
jmp
mov
rorb
jbe
sub
mov
aam
cmp
jmp
sbb
lods
xor
shlb
dec
seta
fidivl
scas
pushf
sub
xor
push
xchg
cltd
js
cltd
xor
push
jge
push
sti
rdpmc
inc
mov
push
test
ret
fld
popf
pop
idivl
repz
sub
xor
and
xor
std
push
loopne
cli
scas
out
out
pop
out
push
push
lea
and
jmp
inc
fidivl
xchg
mov
mov
jns
jp
ficoms
cmp
cmp
sub
inc
faddp
iret
ss
push
mov
loopne
call
or
fidivrs
mov
gs
jge
jno
jecxz
mov
fadds
mov
push
dec
mov
xorb
mov
push
push
mov
xor
pop
or
dec
arpl
enter
jnp
pop
mov
xchg
and
adc
repz
lahf
inc
add
xor
movsl
cmp
pop
fiadds
mov
xchg
stos
fdiv
or
adc
mov
setg
jnp
fwait
xor
mov
sbbb
cmp
pop
lahf
sbb
mov
in
std
imul
lods
add
jbe
out
jg
pop
addr16
into
and
fisubl
jle
push
mov
cmpsb
dec
adcb
loope
fldenv
mov
jo
sbb
add
fwait
shl
aas
incl
push
push
movsl
xor
xchg
arpl
rcl
or
aaa
subb
ds
inc
ficompl
pop
jb
outsl
movsl
rorb
or
dec
cmp
lret
push
xor
jp
das
ja
xchg
call
cmp
aaa
dec
inc
scas
pushf
scas
rclb
mov
imul
fidivrs
fs
lods
clc
into
arpl
stos
jmp
mov
xchg
inc
jmp
mov
push
xlat
outsb
jo
sbb
sahf
inc
jmp
ss
sbb
sbb
ret
jl
push
icebp
shll
pop
push
push
mov
push
jmp
test
xor
loopne
add
inc
pop
out
inc
and
add
shlb
dec
add
in
jmp
pop
stos
jb
pusha
pushf
adc
adcl
sahf
inc
movsl
jl
loope
adc
mov
fidivs
mov
hlt
adc
cmpsb
hlt
mov
out
jp
test
xchg
mov
ret
sbb
jg
sbb
adc
lock
jmp
addr16
jmp
je
cmpsb
in
jno
iret
mov
push
into
loope
mov
xor
scas
roll
dec
in
mov
mov
inc
push
std
xor
pop
mov
adc
xor
push
in
mov
inc
and
iret
pop
aam
cli
cmp
das
stc
jmp
xlat
scas
xchg
pusha
loope
push
jecxz
movsb
adc
pop
imul
pop
mov
mov
es
rol
inc
clc
cmpb
mov
mov
xlat
cmp
out
lahf
or
sbbl
jne
xchg
adc
sub
pmaxsw
sahf
xchg
seta
ljmp
mov
cmp
dec
outsb
or
lds
aam
mov
into
data16
cmpsb
ds
fstpt
fs
adc
jb
lea
ja
mov
mov
fidivs
inc
lea
js
loop
dec
stos
inc
ss
fwait
das
stos
push
push
movsl
or
outsb
sbb
pop
sbb
push
xor
out
xchg
xor
mov
movsb
out
jp
scas
xor
cmovb
ja
and
pop
xor
mov
pop
clc
cld
cmp
fisubl
or
lds
jnp
jbe
in
lret
lret
jl
or
mov
sbb
jbe
out
bound
cmp
dec
jbe
shrb
push
mov
cmpsl
fnstenv
popf
and
ljmp
mulb
sarl
loopne
mov
mov
push
mov
sbb
push
inc
lret
cmpsl
jne
daa
sbb
and
mov
ds
xor
loope
jne
pop
cmpsl
mov
inc
in
xor
gs
dec
push
pop
jne
push
std
cmovs
cld
or
pop
ja
or
pop
and
dec
lea
icebp
mov
scas
mov
std
or
dec
cmp
jnp
jmp
sub
shlb
clc
xchg
inc
push
cmpl
mov
push
and
xor
sbb
jb
aad
andl
push
cmp
jo
mov
xchg
sar
mov
test
sbb
or
shr
jns
xchg
pop
repz
mov
cmp
rclb
dec
popa
lret
xchg
in
sub
pop
nop
sbb
sbb
dec
lods
cmp
sarl
or
cmp
bnd
shll
out
xor
jne
pop
dec
je
fldcw
add
xor
adc
pop
add
inc
lods
inc
and
hlt
push
dec
insl
jg
pusha
pop
inc
push
addl
loopne
mov
ret
mov
popf
or
push
cmp
jmp
test
ret
ss
inc
scas
fldcw
sub
push
sub
or
jle
cltd
mov
pop
mov
jnp
orb
mov
mov
cmc
and
fsubrl
orb
fimuls
cmpsb
cmovne
ret
mov
sbb
sub
pop
cli
fsubrp
pop
repz
orl
pop
lret
fistl
sub
dec
jb
fldenv
dec
stos
xor
add
lea
fidivrs
sti
js
cmpsb
test
sbb
in
mov
push
jns
js
pop
sub
xor
rorb
or
js
jo
cs
pusha
popl
mov
inc
inc
enter
dec
cmp
inc
pop
add
push
imul
scas
xchg
xchg
dec
mov
mov
and
lds
xor
jbe
mov
cmp
mov
mov
decl
loop
mov
out
push
divb
adc
adc
jb
jg
rorl
sahf
sub
and
test
lock
cmp
loopne
and
mov
xor
sbb
mov
mov
imul
cmp
ds
andb
adc
out
fs
mov
sbb
mov
push
mov
inc
jle
fwait
or
negl
lret
iret
cmc
add
dec
fwait
in
push
inc
jge
cmc
scas
dec
loopne
stos
ret
or
pop
sti
inc
xorl
sub
iret
dec
outsl
test
fistpll
dec
add
loop
cmpsl
notrack
pop
loope
pop
cmp
test
mov
leave
push
jp
dec
push
xchg
test
mov
sub
movsl
mov
aas
arpl
sbb
cmp
mov
pop
adc
decb
decb
data16
xchg
pop
sahf
push
and
push
addr16
jge
xor
pop
aad
add
xchg
push
out
dec
aas
pop
stc
outsb
inc
jne
mov
jne
cmpsl
push
pop
sbb
cmpsb
das
and
push
dec
pusha
pop
mov
cmp
cmp
ret
nop
std
sbb
pop
les
push
adc
and
xchg
insb
jle
notl
cmpl
ret
dec
cmp
mov
push
ret
shl
cmp
nop
mov
ret
or
cmp
sahf
push
jmp
das
push
lds
jle
push
add
push
sub
dec
outsb
dec
pop
movsl
mulb
xor
clc
int
xor
mov
dec
mov
push
call
dec
jmp
cmpsl
sbb
inc
lahf
out
ds
push
popf
mov
sahf
add
inc
in
mov
call
pusha
es
call
stc
inc
out
cld
push
xchg
mov
iret
push
mov
xchg
fmuls
adc
js
cmp
iret
adc
xchg
push
aad
xchg
pop
inc
cmc
int
icebp
lcall
mov
push
push
push
sbb
ljmp
cltd
sub
popf
add
mov
cmpb
loope
scas
lahf
xchg
pop
test
hlt
sbb
test
inc
std
clc
adc
sub
ret
fs
in
mov
aam
mov
icebp
mov
jg
pushf
cmc
pop
inc
jne
inc
jg
xor
jmp
xor
push
xor
rolb
add
es
loope
push
push
test
inc
xor
cs
xlat
out
int
jns
sahf
add
fucomip
push
lcall
jl
xchg
and
push
mov
arpl
xlat
hlt
aaa
fnstcw
sbb
cmp
jecxz
shrb
pop
and
loope
jg
ret
sub
and
dec
ret
sbb
push
pop
lcall
dec
cmp
lods
xchg
pop
out
inc
scas
adc
pop
jmp
mov
out
int3
add
lret
push
out
shlb
ja
rep
js
call
rcrb
test
push
and
mov
inc
gs
fnsave
fs
bound
in
push
ja
cmc
movsl
mov
jmp
cmpsb
xchg
shll
mov
push
jo
mov
xchg
push
ja
push
cmp
xor
xchg
sti
pop
mov
js
xlat
mov
fistps
in
daa
imul
xchg
sub
fstl
in
sbb
dec
inc
and
add
imul
int3
inc
and
jl
inc
xchg
fstl
push
gs
push
jmp
inc
jmp
pop
fdivl
and
xor
sub
pop
insb
or
mov
bound
fwait
sbbl
leave
sub
imul
mov
jns
xor
mov
hlt
cld
mov
adc
push
or
or
movsb
or
dec
xchg
cli
jnp
stos
jo
mov
sbb
push
dec
jmp
fdivrs
out
dec
loope
or
or
icebp
pop
mov
shl
lcall
movsb
movb
je
dec
or
push
decl
dec
mov
ficomps
mov
push
lret
bound
inc
in
mov
imul
add
das
or
aas
outsb
add
rcrb
lret
mov
jbe
mov
push
pop
aaa
repz
fbstp
addr16
mov
mov
aaa
addb
push
loopne
push
daa
rcrl
adc
push
out
jae
mov
bound
outsb
rclb
enter
in
jl
cmc
cmp
das
add
xor
iret
gs
in
mov
stos
push
cs
lock
xorl
ljmp
fidivs
stos
popa
push
addr16
ljmp
lock
sti
inc
rcrl
scas
or
mov
mov
je
jno
mov
mov
aam
dec
int3
mov
dec
call
xor
jbe
fdivrl
sbbl
pusha
xchg
fcompl
inc
ljmp
sub
inc
jmp
loope
repz
push
sub
cmpsl
xchg
lret
fistpl
sti
sbb
mov
xchg
mov
xor
insb
loopne
or
sub
clc
fnstsw
sub
pop
xor
loope
cmp
mov
mov
imul
mov
mov
loop
mov
aad
cmp
movsb
lods
loop
mov
imul
push
sbb
jns
mov
jmp
rolb
mov
adc
dec
mov
rcl
cwtl
inc
fcomps
xlat
jno
mov
cmpsl
stos
cs
js
adc
sahf
mov
cmp
lret
decb
lldt
popa
push
xchg
jl
push
mov
sti
pushw
push
or
outsb
fbld
shr
test
sbb
fmuls
xor
cmp
push
mov
adc
jb
push
cmp
xchg
inc
jb
in
mov
sti
jns
insl
sarb
xlat
sbbb
dec
mov
cld
call
cmc
sbbb
aas
mov
loopne
mov
mov
iret
fdivrs
repnz
jmp
mov
jle
mov
jle
sbb
xor
jecxz
loope
mov
clc
ret
in
std
add
sbbb
aaa
push
pop
lcall
repz
jno
sbb
or
bound
arpl
in
test
jo
and
pop
sbbl
xchg
push
jno
fbld
mov
mov
test
aas
sahf
push
jge
scas
call
in
test
push
push
jge
jge
jle
xchg
dec
jecxz
pop
ja
mov
mov
dec
mov
cmp
imul
mov
sub
lds
cmp
push
loop
lret
dec
ror
test
nop
imul
adcl
pop
mov
in
sub
das
push
mov
inc
jmp
mov
int
ret
in
pop
insb
call
or
nop
insb
cltd
xchg
cmc
and
mov
pop
xchg
stc
inc
and
data16
inc
bound
xchg
and
sub
jns
jecxz
mov
pop
out
enter
movsb
sub
adc
jne
mov
and
and
enter
test
lock
xor
and
inc
push
cld
rol
fstl
mov
stos
insb
mov
out
fwait
adc
call
insl
leave
mov
dec
mov
jmp
inc
subb
call
aad
orl
lret
cmp
les
movl
xchg
shl
stc
lds
xor
dec
add
xchg
cmp
xchg
lret
jmp
test
pop
imul
subl
jo
sbb
mov
mov
dec
les
ret
fbstp
add
cli
pusha
cmp
sbb
jno
dec
mov
jmp
shlb
outsb
ljmp
sub
maskmovq
divl
hlt
enter
mov
cmp
bound
dec
mov
repz
out
mov
sub
in
daa
sbb
mov
mov
addr16
pop
dec
js
mov
lret
sbb
movsb
xchg
fmuls
adc
fisubl
and
movsl
clc
inc
xlat
sub
daa
xlat
inc
push
push
es
inc
call
hlt
mov
rcrb
clc
jbe
shl
dec
xchg
sub
push
and
mov
nop
xchg
xor
inc
mov
fs
push
lcall
movsl
js
cld
cltd
mov
mov
cs
movsb
aas
dec
repnz
fiadds
xor
push
sbb
push
add
xor
cltd
addl
cli
adc
sbb
popa
popa
mov
add
push
and
dec
insl
rcrb
sbb
mov
rclb
mov
jbe
inc
add
sbb
or
add
lods
outsl
adc
repnz
jbe
subl
jle
jbe
push
jmp
movsb
sub
jg
setle
sbb
test
add
xorb
xor
decb
fimuls
dec
mov
jns
outsb
pop
clc
test
pop
xchg
cs
pop
rcll
aam
lahf
add
aas
into
in
mov
jno
inc
jmp
fs
inc
push
jmp
shll
stc
pop
push
sub
sub
mov
mov
lock
mov
inc
enter
flds
fcomi
inc
loop
mov
ss
test
in
test
les
add
decl
daa
sub
dec
pop
fwait
cmp
inc
jg
inc
mov
push
jbe
popf
xchg
out
dec
jge
into
pop
test
pop
into
pushf
or
loopne
pop
add
xchg
js
lock
pop
out
push
movsl
inc
pop
jne
cmp
mov
jmp
inc
add
dec
fucom
xor
sub
jl
jnp
pushf
enter
out
jmp
cmp
mov
jne
adc
dec
nop
mov
lea
shrl
add
mov
mov
pop
inc
fmuls
pop
stc
add
jne
jo
jae
dec
loope
and
leave
addr16
jnp
mov
mov
pop
scas
and
decb
cmp
inc
sbb
dec
mov
cmpb
or
push
or
sbbl
fbstp
in
lcall
pop
sub
add
js
cmp
nop
outsb
xor
dec
dec
imul
xchg
popa
mov
sti
xlat
pop
jo
add
mov
mov
inc
mov
jmp
mov
mov
sub
fwait
daa
push
shlb
mov
xchg
sub
insl
mov
insl
clc
mov
push
xor
sbb
xor
lods
outsb
pop
enter
xchg
scas
and
in
cs
test
loopne
mov
rcrb
outsb
mov
ret
pop
sub
mov
jecxz
xchg
cmp
inc
xchg
sub
cs
iret
dec
das
jo
je
stos
adc
jae
inc
pop
and
sub
lds
pusha
leave
roll
cmp
ljmp
dec
les
inc
hlt
testb
out
xchg
pop
and
xchg
outsl
mov
imul
hlt
or
add
lret
mov
shlb
clc
je
dec
pop
or
inc
popf
xchg
dec
and
dec
add
fdiv
das
cwtl
inc
mov
fidivrs
shrb
sbb
stos
xchg
mov
popa
or
ss
cmp
rorl
lock
adc
je
test
mov
rol
pop
xorb
adc
sub
sub
xor
sub
push
or
push
cmpsl
das
rcll
or
dec
mov
cld
pushf
stos
inc
pop
cltd
mov
mov
les
or
add
mov
daa
jmp
sti
scas
fisubs
push
fistps
mov
sbb
add
mul
add
jle
arpl
int
in
mov
stos
dec
sarb
andb
mov
xchg
mov
sbb
jno
mov
je
pop
mov
inc
jb
xor
push
js
aaa
mov
inc
test
push
lea
cli
test
fdivrp
mov
cmc
push
out
push
pop
pop
add
dec
in
add
jnp
lods
jnp
and
stc
hlt
push
loopne
push
es
aaa
mov
cmp
cmp
outsb
out
dec
scas
cmp
mov
inc
cmp
push
in
xchg
cli
int
adc
sbb
xor
pop
in
cmpl
and
mov
mov
mov
mov
push
jns
push
lods
sub
test
fnstcw
fs
push
icebp
sbb
sub
xlat
jecxz
nop
push
mov
enter
sbb
stc
inc
inc
sub
subl
lahf
cs
mov
xorb
push
addr16
mov
mov
sbb
adc
or
pop
mov
scas
inc
jge
popa
clc
int
xor
xlat
inc
in
inc
movsl
lea
sub
out
sar
shlb
fldcw
mov
or
das
testb
lret
clc
ss
cmp
cmpsb
sub
push
stos
cmp
fsubrs
mov
sub
inc
fadds
add
repz
testl
sub
mov
mov
mov
fmuls
mov
ret
and
mov
push
popf
hlt
and
push
adc
dec
jb
mov
cmp
rcr
push
jmp
jbe
lods
std
lods
shll
lret
fs
lea
fcoml
orb
outsb
lret
test
cmp
sbb
mov
jno
cld
pop
add
jb
cmpb
jns
mov
outsb
add
adc
push
in
enter
mov
repnz
mov
sub
loope
icebp
push
mov
jno
mov
out
daa
lods
cmp
notl
in
sbbl
rcrl
or
aas
sub
hlt
adc
subb
or
scas
sbb
out
or
testl
mov
mov
rcrl
inc
ss
pop
cmp
out
mov
int3
xlat
cmp
cmp
fsts
int
ss
fldenv
pop
mov
cmp
bt
lret
clc
ja
inc
sbb
pop
fnstsw
cmovs
and
movsb
jbe
or
cmpsb
sub
sub
adc
lahf
sub
xchg
mov
dec
adc
nop
pop
js
or
jne
repz
xchg
icebp
scas
mov
test
jg
push
es
add
movsl
aaa
sub
stos
mov
pop
out
test
push
push
dec
push
jae
lea
lods
jo
add
test
and
and
aad
push
mov
xor
push
cmpsb
std
add
jno
mov
mov
push
xor
psrlq
or
dec
nop
dec
inc
std
ret
jp
lret
push
mov
int
xor
in
add
inc
lods
inc
addr16
dec
sbb
mov
mov
mov
add
and
jae
loopne
mov
ss
and
aaa
fiaddl
popa
notb
pushf
mov
adc
fs
push
or
test
ja
repnz
arpl
push
sbb
mov
lods
hlt
pop
movsl
mov
xchg
aaa
sbb
loope
out
outsb
out
jl
cmp
push
popa
dec
dec
xchg
jle
push
xor
cmp
js
leave
pusha
js
les
adc
dec
jl
fidivs
inc
mov
sbb
call
imul
jle
add
or
and
adc
outsb
push
pushf
inc
loop
lea
xor
stc
and
mov
push
mov
rol
outsl
jb
imul
inc
push
pusha
cmpb
xor
fmul
ds
fnsave
and
sub
nop
ficomps
pop
add
adc
scas
call
or
and
xchg
dec
cmp
out
dec
dec
jmp
inc
out
xor
mov
add
je
mov
or
xchg
scas
and
mov
xchg
ja
jbe
ret
fistl
mov
imul
xchg
imul
mov
cs
pop
lds
pop
pop
sbb
jo
adc
push
mov
fwait
add
adc
pop
aas
mov
xor
add
bound
sarl
jno
and
push
adc
ret
inc
ficoml
fwait
xor
jmp
cltd
clc
ret
outsl
std
inc
inc
sahf
dec
in
mov
jne
fadd
mov
adc
ljmp
scas
enter
stos
adc
enter
and
xchg
stc
jbe
popa
mov
lock
mov
pop
ret
lods
add
pop
shrl
outsb
or
xchg
ja
scas
sbb
mov
add
xor
push
cmp
xchg
sub
movsl
mov
jmp
jb
or
sbb
clc
xchg
test
mov
xor
cltd
je
lods
mov
sbb
add
push
inc
fimuls
push
xcrypt-ofb
cmpsl
out
jae
xchg
mov
lret
mov
negb
out
mov
push
loope
addl
iret
mov
cmpsb
and
lods
cmp
loopne
faddl
fdivs
push
pusha
pop
pop
ret
in
ja
dec
push
cmc
cmpsl
pop
clc
pop
shrb
xor
adc
out
push
xor
push
add
mov
sbb
movsl
jp
xor
shll
leave
jl
mov
jle
mov
pop
or
jo
and
push
addl
gs
mov
xchg
adc
ret
ss
push
std
gs
into
ficomps
loope
aas
and
xchg
ljmp
andb
mov
sub
add
cmp
mov
in
out
adc
fildll
insl
mov
push
mov
sub
cmp
push
dec
aaa
into
jl
xlat
add
rcll
mov
aaa
stos
das
sub
dec
add
scas
xlat
icebp
stos
std
mov
mov
shrl
lcall
ja
in
push
arpl
and
pop
or
push
mov
bound
xchg
fdivs
rcrb
mov
xor
ljmp
test
jo
movsb
mov
shrb
test
nop
imul
ss
mov
fs
dec
gs
hlt
jmp
dec
das
es
popa
outsl
cmp
jp
adc
push
fwait
repz
inc
sarb
push
aad
or
mov
cmp
loopne
shr
adc
mov
shlb
cmc
ss
cwtl
xchg
aaa
cltd
inc
inc
ljmp
xor
sub
xor
call
rolb
test
ja
adcb
push
scas
dec
mov
test
aas
lea
sbb
xor
lods
push
lods
xchg
outsb
cli
mov
lds
je
mov
inc
lcall
and
out
jae
ret
lret
outsb
sub
daa
and
out
ljmp
fdivr
mov
xor
push
jno
ja
testl
mov
js
jl
sub
cmp
loop
xchg
and
xorb
push
mov
pop
shlb
push
adc
sbbb
lods
adc
pusha
push
test
and
push
movsl
stc
push
sub
mov
mov
scas
xchg
mov
adcl
test
jecxz
or
fwait
js
mov
stc
fidivl
in
andb
ret
pop
jo
push
pop
cmc
in
pop
xlat
cmp
jl
data16
test
mov
or
xor
pop
icebp
addr16
hlt
je
pop
movsb
mov
fists
sub
push
bndstx
pop
xchg
mov
ret
sbb
lds
pop
push
out
test
testl
adc
push
scas
adc
in
mov
pop
mov
dec
ficompl
fisttps
cmp
adc
negb
mov
mov
sub
pop
xchg
mov
pop
mov
mov
cmp
js
or
pop
jb
in
inc
aam
outsl
and
testb
subl
loopne
sub
mov
insb
cmp
stos
pop
stc
test
jae
bound
push
dec
loop
mov
xor
and
mov
xlat
jns
pop
push
out
sbbl
or
push
loop
push
and
xlat
and
push
cmp
enter
insl
cmp
push
out
cmp
sbb
ds
outsl
and
or
lods
mov
mov
aad
imul
jecxz
aaa
into
sbb
push
add
add
int3
cmp
sub
shrb
push
mov
jecxz
je
int3
or
repz
pop
repnz
push
dec
pushf
xor
and
inc
mov
iret
stos
mov
inc
jle
fcomps
inc
jnp
cmp
cmp
cwtl
stos
add
pop
mov
out
xchg
or
jne
add
lock
add
or
push
insl
loopne
cmp
sub
sbbl
jno
dec
push
mov
daa
inc
and
push
movsl
stc
cmp
xchg
and
cmp
mulb
sub
repz
out
imul
mov
fdivs
mov
adc
cs
jge
cmp
in
je
lret
cmp
ficoml
rorb
lcall
mov
arpl
ss
pop
repz
mov
or
jp
mov
fsubr
imul
sub
movsl
sbb
adc
movsb
xlat
outsb
jae
dec
cmp
incl
mov
js
add
fnstcw
xchg
aaa
aam
pop
and
cmp
dec
bound
and
push
jno
push
adc
xorb
mov
das
push
pop
stos
pop
mov
sub
cmpl
dec
imul
sub
or
adc
stc
push
in
xor
xchg
sbb
incb
repz
or
lret
mov
mov
inc
jb
js
int
rcl
int
xchg
push
int
ficoms
icebp
mov
shlb
mov
andl
dec
mov
sbb
out
xor
insb
xchg
into
dec
sub
dec
shrl
inc
insb
add
mov
xchg
aam
sub
repnz
or
cmp
xchg
dec
outsb
xor
jg
fnsave
pop
push
jo
pop
adc
jbe
mov
sub
lock
dec
scas
dec
push
adc
sub
lahf
out
popf
in
cmp
imul
mov
inc
inc
pop
addl
jo
adc
call
sub
xchg
pop
mov
sub
dec
mov
aam
push
inc
pop
adc
or
sahf
jns
lock
jge,pt
pop
scas
arpl
ss
mov
into
movsb
mov
lock
and
or
pusha
sbb
in
cmp
pop
cmp
into
pop
testb
arpl
cmpsb
lret
cld
jle
jl
fcmove
add
rcrl
sbb
cmp
xor
and
and
loop
loopne
test
ret
add
outsl
fs
clc
sbb
test
cmp
mov
inc
jecxz
xchg
lods
lret
inc
add
sub
clc
xchg
adc
add
inc
dec
sub
sbb
aam
dec
mov
addr16
adc
jae
in
xchg
jns
in
add
sub
pop
push
xchg
mov
push
inc
pop
and
fisttps
and
and
pop
ds
les
mov
pop
aad
and
jp
push
lods
mov
mov
les
inc
incl
jecxz
mov
adc
out
jg
inc
or
xchg
xchg
jo
adc
inc
test
sbb
outsb
pop
icebp
or
cs
mov
insl
inc
add
mov
sub
imul
and
loope
ret
mov
jp
mov
xchg
dec
add
inc
mov
aas
xchg
jo
dec
mov
out
in
mov
repz
xchg
and
wbinvd
push
cmc
adc
jno
mov
add
test
shl
xchg
scas
add
push
mov
add
mov
rorl
in
sti
add
push
sub
inc
inc
popa
push
inc
lock
lods
mov
xchg
sub
mov
pop
jle
jnp
add
xchg
push
cmp
fcoml
xor
ja
dec
hlt
cmp
cmp
mov
adcl
xchg
mov
scas
cmp
sub
sbb
inc
fcomps
xchg
pop
imul
xchg
or
rclb
cmpsl
adc
icebp
mov
cs
xchg
mov
out
jecxz
add
cmpl
adc
cmp
xchg
stos
rcrl
popa
stos
mov
test
jl
dec
mov
cmpsb
push
ds
fdivrs
jns
sub
cmpsl
mov
frstor
push
xor
mov
cwtl
out
sub
dec
and
mov
fs
inc
mov
aad
movsl
test
cmp
add
rcll
into
montmul
cmpsb
inc
flds
sbb
sbb
cmc
mov
sbb
pop
mov
cmp
in
inc
stos
cmpsl
out
in
test
push
jnp
jecxz
adc
pop
enter
mov
jno
pop
inc
lods
and
fidivrs
mov
mov
pop
mov
dec
sub
jns
xchg
jmp
push
adcb
and
and
int
fdiv
fwait
jae
inc
inc
in
dec
xchg
orl
loopne
shlb
test
xor
out
cli
sbb
shlb
adc
mov
cs
xchg
xor
xor
mov
ja
dec
dec
mov
mov
cmp
jle
adc
dec
shrl
pop
xor
xchg
mov
jb
add
push
jge
stos
sbb
test
or
testb
mov
repz
fdivrs
or
fbld
loopne
rolb
xchg
push
mov
or
jb
pop
xchg
and
jecxz,pt
cwtl
das
adc
pop
imul
or
gs
aad
je
mov
in
repz
loop
test
jnp
mov
mov
xor
sarb
adc
rorl
mov
cmpsb
jo
add
dec
xchg
insl
hlt
out
movsl
inc
das
or
mov
cmc
loop
aas
lods
cmp
hlt
scas
pusha
xor
je
jmp
clc
ds
mov
leave
outsb
mov
shl
or
push
sub
out
xor
jmp
lret
fistl
push
mov
aaa
sub
fcoms
mov
enter
test
icebp
mov
into
cld
lahf
push
outsl
mov
js
in
xlat
outsb
sub
int3
push
jb
pop
mov
es
outsb
add
push
movsl
mov
pop
dec
and
xchg
mov
xchg
mov
xchg
icebp
pop
cmc
and
decl
or
push
push
and
arpl
bound
insl
int3
movsb
std
ret
das
sub
subb
cmp
sahf
add
and
xor
jge
movsb
cmpsl
loop
adc
std
andl
shl
fcmovbe
add
xchg
and
bound
sub
pop
movsb
cmp
mov
cmp
jecxz
xchg
sub
sbb
dec
arpl
divl
int3
aad
cmp
loop
les
mov
jbe
pop
lea
xlat
push
pop
stos
push
pop
xchg
pop
and
and
jae
cmp
lret
dec
lcall
fwait
outsl
movsw
jle
addr16
jmp
jb
enter
jo
xchg
xchg
les
rcrl
mov
jl
jge
jg
leave
push
sub
out
dec
mov
or
xor
dec
xchg
push
add
out
fists
adc
jnp
and
inc
pop
hlt
jbe
movlps
adc
arpl
mov
fdivl
leave
jg
cli
insb
or
xlat
ret
pop
shlb
inc
out
dec
mov
cmp
repnz
movsb
insb
mov
dec
mov
shrb
stc
arpl
fiaddl
out
aaa
sbb
jne
lods
adcb
or
test
pop
in
mov
and
or
shrl
cmpl
xchg
push
dec
adc
xchg
in
aam
xchg
mov
xchg
add
jnp
xchg
lods
mov
add
pop
cwtl
mov
and
dec
ja
add
ja
enter
mov
xor
dec
gs
mov
xchg
sub
notb
xchg
popa
sahf
sbb
enter
test
dec
fs
loope
mov
xlat
test
sbb
cltd
xor
mov
sbb
nop
les
adc
ss
addr16
mov
fldenv
scas
out
dec
lock
adc
mov
pushf
xor
push
adc
dec
cli
xchg
jle
adc
mov
xchg
loope
push
xlat
sbb
mov
loopne
and
xchg
cmp
xchg
cmpsl
insl
pop
cmp
add
dec
xchg
daa
inc
insl
push
dec
pop
scas
cmp
mov
xor
repnz
inc
loop
mov
fldt
add
adc
aaa
xchg
imul
imul
add
dec
daa
mov
rclb
popl
mov
sub
dec
inc
xor
cs
call
lret
push
push
mov
sbb
push
imull
stos
movsl
mov
jo
filds
cltd
mov
adc
pop
cmp
jp
jge
pcmpeqb
and
sbb
sub
data16
sahf
lods
inc
rcrb
xor
cmp
out
out
cmp
and
push
call
mov
mov
push
roll
imul
addb
push
aam
jbe
je
mov
inc
andl
pop
data16
add
jp
xor
fildl
es
jbe
inc
fistl
mov
xor
out
inc
pop
dec
js
popa
int3
inc
mov
mov
mov
push
xor
ds
cmp
dec
adc
sbb
shrl
in
jmp
insb
ret
lds
dec
push
dec
insb
setno
aam
cltd
fcoml
mov
mov
and
push
loope
adc
loope
popf
lods
repz
cmpsl
and
adc
scas
inc
insb
pop
repz
cmp
mov
in
idivl
push
cmp
sbb
xchg
adc
imul
mov
es
xchg
add
xor
push
call
in
jnp
shr
add
xor
adcl
xchg
cmovge
adc
jge
fsubs
or
mov
dec
fsubrs
mov
add
and
mov
cmp
repnz
and
mov
mov
dec
pop
mov
dec
xor
fsubl
add
pop
inc
out
jb
jne
jo
add
or
call
aaa
rcrl
jp
xchg
lods
jp
imul
cmp
sbb
pop
cltd
imul
inc
jne
push
and
xor
dec
icebp
dec
mov
testl
or
call
sahf
cmc
sahf
clc
es
fdivl
and
pop
add
fldt
cmp
mov
jge
xor
outsl
shlb
xchg
adc
loope
out
dec
outsl
repnz
negl
mov
ret
mov
xchg
fldcw
test
jmp
jp
mov
adc
push
ja
jl
jmp
popf
ds
mov
bound
dec
add
mov
jmp
pop
in
and
es
push
pop
push
push
inc
enter
es
mov
out
sub
inc
out
xor
inc
fldenv
fistps
push
lcall
pop
sub
cld
test
mov
push
xlat
test
je
hlt
in
adc
mov
jmp
iret
cmpsb
mov
fistpl
ror
gs
dec
cli
xchg
push
sub
jb
mov
cmp
outsb
cmpsb
shrl
lahf
dec
stos
repnz
imul
mov
lcall
mov
movsl
jge
aad
lods
icebp
lahf
mov
rcl
inc
or
pop
jnp
int3
or
scas
inc
push
imul
lret
xchg
into
cld
adc
imul
in
int3
repnz
pushf
xor
cmpsb
jnp
sbb
inc
test
sbb
and
dec
jl
jo
pop
rolb
mov
in
pushf
divb
out
cmp
push
dec
pop
cltd
test
mov
adc
jbe
gs
rclb
insb
xchg
lods
iret
jp
and
mov
jns
fidivrl
dec
push
imul
xor
dec
xchg
sbb
imul
shrb
pop
lret
or
scas
aad
pop
inc
dec
pop
imul
lds
enter
pop
cmp
fildl
jb
movsl
cmp
mov
lods
test
and
sbb
rclb
clc
dec
jno
and
test
je
test
sbb
call
mov
and
sahf
mov
dec
jno
xlat
test
ret
push
fmulp
inc
outsl
jbe
dec
fldenv
cmpl
cmp
outsl
adc
cltd
xor
sub
testl
mov
or
sub
mov
leave
add
xchg
xor
add
or
mov
out
scas
dec
popa
iret
mov
sahf
scas
outsb
ret
cmp
jno
mov
and
xchg
fs
or
ret
iret
or
ds
jae
adc
popa
shll
sub
lock
sti
pop
stc
push
dec
push
cmp
fwait
loop
repnz
jl
insb
popa
jge
sbb
outsb
insl
push
xchg
aaa
cmp
repnz
xchg
aad
cmp
push
sahf
mov
adc
inc
sbb
sbb
cmp
repz
jle
pop
outsl
stc
push
shl
js
aas
mov
or
cltd
or
sub
push
push
gs
sarl
add
dec
add
mov
ds
fwait
dec
dec
cmp
cmp
daa
mov
fidivrs
je
stos
inc
aas
popa
jno
mov
ja
mov
mov
mov
cmp
mov
ds
and
sbb
mov
or
mov
mov
cmp
pop
dec
std
add
xor
sub
sahf
mov
pop
daa
xchg
pop
loopne
cmpsb
cwtl
icebp
add
inc
pop
ljmp
popa
ja
jbe
cmpsl
xchg
and
sbb
or
xor
cmp
adc
sub
test
xchg
fdivs
cmpsb
arpl
sub
push
pop
lret
sti
gs
je
cmp
mov
jbe
incb
and
jnp
push
sahf
cmc
lret
popa
or
and
jl
je
mov
pop
jnp
bound
mov
inc
push
adc
cmp
aas
into
mov
bound
sbb
xor
in
int3
pop
jg
dec
repz
adcl
jbe
cmp
jo
loop
pop
push
pushf
pop
xlat
mov
sub
xor
ret
jb
mov
mov
sarl
mov
or
xchg
add
pushf
or
ja
sub
cmpsb
loope
aas
xchg
jp
hlt
and
shrb
pop
cmpsl
arpl
mov
ss
xchg
adc
lds
xor
lock
cmp
pop
icebp
xchg
leave
dec
cltd
cs
ret
cmpsb
in
sbb
clc
mov
es
sbb
sbb
sbb
lods
ljmp
pushf
addb
mov
loopne
out
push
sahf
sbb
lret
xchg
add
jecxz
xlat
sbb
xor
pop
lods
cmp
shll
add
loope
cmpsl
mov
fsts
add
dec
loop
std
lods
xchg
mov
pop
add
sbbl
in
xor
and
pop
jb
push
mov
outsl
mov
shll
rolb
and
andb
mov
ss
mov
push
call
cs
push
jbe
in
movl
es
cmp
or
mov
mov
outsb
sub
jnp
popf
jo
rorb
lret
in
adc
dec
dec
mov
and
xor
adc
mov
and
cld
cmpsl
and
fnstenv
xchg
add
cs
je
fcompl
fwait
scas
fnstenv
xchg
xchg
out
lret
cmpsb
lock
scas
shll
test
stos
repz
cld
dec
add
or
in
sbb
mov
fdivs
mov
ja
jg
test
ret
rcll
fnsave
cmp
leave
xchg
movsl
cmp
cmp
xchg
pop
xor
hlt
icebp
idivb
sub
pop
xchg
cmpsl
call
pop
pop
outsl
cmp
jle
push
mov
pop
out
repz
js
xchg
xchg
in
cmp
out
fcmovnu
imul
and
sarb
hlt
mov
pushf
pop
aaa
xchg
fcmovbe
dec
loope
cmp
cs
adc
mov
pop
ds
mov
cbtw
push
mov
pop
ret
repz
aaa
mov
in
addr16
cmp
sub
ret
cld
aas
movsb
rol
mov
lret
imul
push
pop
dec
dec
fsubs
das
inc
cmp
repnz
dec
rcr
xchg
inc
xor
cmp
imull
mov
jl
into
insl
mov
inc
lods
lods
mov
test
mov
mov
rcl
and
cmp
and
lret
outsl
or
sbb
push
jae
mov
xchg
pop
mov
stos
faddl
jl
sub
outsb
sahf
adc
jmp
aam
mov
dec
out
test
cmp
fiadds
subl
sub
cltd
jg
sahf
mov
aad
fsubl
push
or
jb
push
movsb
add
insl
stc
fsubp
es
mov
fcmovnb
xor
aaa
adc
imul
out
call
loopne
mul
mov
es
fnsave
push
cmpxchg
aad
jae
jmp
sbb
adc
sahf
cmp
adc
outsb
xchg
mov
cltd
iret
cmp
jne
push
iret
aam
aam
icebp
and
xor
adc
dec
mov
jle
mov
cmp
dec
icebp
jnp
push
inc
xlat
inc
adc
jecxz
xchg
call
pop
repnz
pop
cmpb
jns
stos
popa
add
ja
and
sbbb
xchg
sbb
or
lods
ja
sbb
pop
inc
mov
mov
les
push
adc
push
mov
sbb
loope
js
jmp
aas
push
or
cmp
shrl
xor
js
xchg
stos
popa
xlat
ljmp
jno
cmp
pop
xchg
cmpsl
push
jno
sbb
xorb
pop
es
stos
sbb
into
jns
add
mov
sbb
insl
mov
jbe
repnz
add
push
mov
mov
hlt
dec
mov
stos
in
adcl
insl
cli
xchg
lahf
arpl
ljmp
mov
das
inc
dec
notb
xor
insb
gs
xor
mov
in
push
or
add
loopne
cld
fists
loop
cmp
fdivrl
das
mov
xchg
sbbb
push
das
adc
push
mov
inc
mov
ret
add
adc
mov
mov
loope
jnp,pn
add
mov
mov
fsubr
test
ljmp
lods
push
xchg
jmp
bound
and
inc
orl
pop
mov
push
mov
jmp
fidivl
jbe
cmp
testl
jae
push
into
push
push
mov
aam
sub
or
sub
repz
or
push
stos
fwait
adc
xchg
mov
add
test
sbb
icebp
sbbl
jnp
clc
cmp
test
or
xchg
push
out
stos
push
cmp
adc
mov
lock
add
mov
xchg
iret
pop
cmpsl
jae
mov
and
stc
and
inc
inc
xchg
loop
add
fsubrp
sub
or
imul
sbb
cli
dec
scas
sub
int3
xor
stos
xchg
cmp
cmp
sub
push
mov
rcll
stos
das
xchg
add
test
push
pop
and
mov
stc
dec
mov
jmp
push
xor
jmp
outsl
dec
xchg
mov
leave
outsl
mov
push
cmp
push
dec
out
dec
sbb
xor
push
std
xchg
adc
pop
repnz
stos
call
das
fadds
jmp
sbb
daa
in
leave
fwait
or
outsb
add
push
jp
and
rcrb
stos
fildll
sarl
mov
testb
sbb
jmp
add
or
mov
push
xorl
arpl
sahf
push
sub
xchg
sbb
cmp
std
clc
popa
mov
imull
mov
shlb
push
je
xchg
inc
arpl
and
repnz
push
fnstsw
push
xchg
dec
stos
arpl
cmpsl
loopne
loop
loope
das
xor
jnp
pop
cltd
out
leave
idiv
push
lods
inc
inc
add
push
jp
pop
jg
jg
frstor
jg
xchg
dec
dec
aad
testb
cmp
jle
pushf
dec
dec
mov
out
xor
imul
dec
mov
cpuid
add
loope
sub
adcb
popf
push
mov
sub
js
pop
lds
sub
push
mov
sub
sbb
push
arpl
jmp
and
adc
daa
bound
add
mov
movsl
jo
mov
shll
movsb
cli
push
iret
xchg
xor
mov
out
cmpb
out
outsb
sub
pop
mov
push
jne
xchg
bound
xor
sbb
testl
popf
add
into
in
dec
xchg
out
pop
pop
mov
call
insl
cltd
mov
jp
xchg
cmpsl
ret
sahf
xchg
push
mov
cld
xor
jbe
jno
outsb
or
cwtl
popf
mov
out
xchg
pop
out
out
push
and
or
adc
jbe
jns
jae
out
push
mov
cmpsb
adc
lds
adc
sbb
aas
in
out
cmp
fwait
lahf
xorl
pop
sti
or
lods
movsl
jo
cmc
lret
es
sbb
lahf
addr16
push
adc
arpl
cwtl
or
sbb
mov
fistl
imul
hlt
pop
stos
cmp
das
inc
jbe
xor
jno
lea
bound
std
loopne
in
addl
fildl
gs
sahf
cwtl
es
fs
enter
sbb
add
inc
push
rcrb
mov
out
out
sti
xchg
fucomi
cmp
xchg
pop
mov
cmp
fs
outsb
dec
out
test
mov
iret
mov
and
les
cmp
cmp
les
and
jp
shrl
cmp
sub
aam
xor
jmp
into
inc
sbb
dec
ret
sub
sub
daa
jl
inc
mov
fimull
mov
xchg
out
adc
jno
ret
pushf
jo
orl
les
pop
xchg
mov
popf
movsl
ljmp
mov
pop
out
decb
shll
mov
lcall
lods
int
stos
dec
or
mov
pop
adc
es
mov
adc
sbb
mov
sahf
dec
ror
sub
inc
dec
ficomps
inc
jp
outsb
jg
shrl
xchg
aad
pop
mov
cwtl
jmp
push
out
xchg
rcrb
push
insb
mov
cld
xor
divb
iret
in
sbb
inc
pushf
xor
fistps
pop
les
movsl
inc
inc
scas
call
in
mov
and
negb
sub
stos
inc
test
adc
movsl
mov
rcr
sbb
sub
and
out
add
inc
loopne
cmc
orb
lahf
shrl
pop
jge
dec
add
pop
test
mov
push
inc
add
out
rorl
ja
mov
mov
or
push
cmp
jb
sub
jg
push
imul
sbb
mov
cmc
jns
push
add
jg
push
cs
sbb
repnz
adc
inc
push
mov
movsb
test
mov
into
xor
add
xor
adc
addr16
in
jnp
fsubrl
fistps
add
or
in
pop
inc
push
push
sub
popf
xchg
mov
xor
mov
scas
xchg
pop
push
stc
popf
je
mov
ss
mov
cmp
lahf
test
retw
rol
enter
inc
scas
lea
in
dec
inc
fs
mov
cmp
xor
jle
aaa
xorl
xor
pop
cwtl
mov
and
inc
or
out
daa
dec
mov
sub
faddl
shrl
stos
sub
lret
push
ss
and
pop
lcall
inc
or
ret
out
pop
mov
and
aaa
xchg
inc
scas
mov
lods
push
test
inc
nop
pop
mov
outsl
jge
adc
stos
call
rcl
adcl
lods
pop
xchg
pop
jbe
add
call
adc
mov
cmpsl
sbbl
mov
and
rcrl
mov
adc
sti
fwait
mov
pushf
movsl
push
jb
pop
dec
pop
xchg
xchg
inc
or
int
jno
andl
stos
add
and
cmpsl
xor
xchg
test
addr16
in
push
inc
adc
rcrb
popa
and
test
mov
imul
shr
inc
dec
into
mov
inc
jno
notl
cmc
mov
std
fwait
mov
inc
aas
notl
fidivrl
add
aad
or
cli
lds
testl
shl
arpl
into
adc
aas
pop
cltd
icebp
pop
xchg
mov
mov
or
xchg
mov
add
xchg
sub
push
xchg
push
outsl
add
les
sub
or
test
fstps
xchg
or
cmp
and
mov
and
fcoml
jae
out
push
push
lds
fnstenv
fbld
jp
mov
into
mov
inc
lods
mov
adc
pop
stos
pop
mov
incb
push
int3
xor
cmc
dec
popf
sub
and
push
sbb
push
add
sbb
push
cmp
mov
jbe
push
call
hlt
and
and
scas
arpl
xchg
lds
lods
jo,pn
adc
xor
scas
adc
rcrb
movsb
jecxz
lea
and
xchg
inc
pop
movsl
bnd
and
mov
xchg
mov
pusha
sbb
xor
push
cmc
ja
sti
in
jmp
xchg
sub
mov
ljmp
outsl
mov
daa
or
add
imul
jb
movsb
in
xchg
sub
mov
xchg
out
xor
push
jl
mov
adc
in
js
and
fidivl
popa
mov
mov
popf
mov
in
in
xor
stc
inc
mov
outsl
push
hlt
dec
stos
rcl
pop
xchg
imul
xchg
adc
mov
test
js
divl
pushf
dec
outsl
mov
xchg
aaa
mov
repnz
adc
xor
cmp
dec
cmp
push
push
mov
pop
int
jbe
and
stos
bswap
and
sbb
adc
out
xor
and
test
mov
dec
and
fscale
adc
sti
aaa
pop
dec
push
and
in
daa
popa
das
push
addr16
repnz
aam
mov
mov
ret
mov
mov
dec
cld
inc
dec
js
pushf
jle
popf
popa
sbb
jnp
mov
mov
jns
and
push
or
stos
test
sbb
add
and
pop
js
mov
xchg
mov
push
mov
lods
cs
insl
je
mov
insb
pop
enter
jg
scas
mov
decb
shlb
test
dec
iret
popa
int3
jae
sbb
scas
imulb
or
mov
in
fcoml
andb
lods
scas
inc
fdivs
out
push
scas
fdivr
pop
mov
call
xchg
test
add
mov
rorl
xor
out
sahf
cmp
inc
cmc
aaa
leave
mov
inc
dec
std
test
sub
aaa
out
dec
or
cmpsl
insl
dec
sub
mov
rorl
out
inc
lods
mov
mov
sbb
jle
insb
mov
pop
mov
popf
rorl
and
or
cmp
jle
lret
xchg
dec
inc
mov
or
lcall
or
loope
divb
add
xchg
push
out
fwait
ss
movsl
dec
hlt
or
jl
and
movsl
sti
aam
adc
scas
and
mov
lret
cltd
cli
enter
and
push
adc
add
rcrl
adc
test
js
mov
pop
jle
gs
cmpsl
in
and
ficompl
call
fcmovnb
jmp
dec
push
pop
sbb
jl
ret
lahf
jl
adc
add
sub
pop
xchg
lods
mov
cmpsb
mov
aaa
mov
push
lea
rcll
mov
xorb
mov
add
dec
stc
xchg
daa
les
adc
sbb
lea
in
and
cmp
stc
shll
mov
inc
push
les
mov
cwtl
lcall
xor
in
lahf
aaa
xchg
jecxz
lds
inc
test
decl
push
repnz
dec
or
pop
movsl
dec
mov
ja
and
lds
mov
mov
mov
mov
out
xor
faddl
dec
ficoml
xor
cmpsb
das
iret
jae
enter
les
jb
sub
or
sti
movntps
fwait
cmp
lock
and
loop
and
or
adc
xor
outsb
fwait
repz
mov
fmull
imul
test
push
fcmovbe
mov
jo
pop
pushf
subl
and
in
jecxz
jbe
sti
xchg
ja
cli
pop
cmp
shll
xchg
pop
inc
dec
bound
mov
mov
jae
out
fcomi
adc
push
popf
push
xor
dec
lock
jle
cmpb
and
insl
clc
dec
or
add
daa
mulb
inc
sub
adc
inc
xchg
loope
xchg
jne
aam
nop
pop
sbb
and
ret
mov
mov
pop
ds
pusha
mov
or
sbbl
fsubl
stos
mov
sahf
pop
rorb
stos
push
mov
cmp
jne
push
mov
pusha
out
add
cmpsb
sub
mov
lcall
adc
add
jge
movsb
scas
enter
sbb
mov
dec
sub
xchg
xchg
fptan
loopne
pop
or
inc
sub
xorb
xchg
clc
movl
jp
ds
out
fsubp
movsl
pop
push
repnz
mov
add
sarb
mov
sbb
mov
xchg
in
std
xchg
popa
idivb
in
or
stc
testb
cmp
bound
pop
sbb
xchg
sub
xor
cmp
aam
loope
inc
pop
iret
pop
mov
les
push
in
mov
xor
mov
xor
mov
mov
jg
adc
jo
xor
xchg
aaa
gs
mov
repz
adc
in
roll
pop
out
je
mov
xchg
mov
jge
std
cmpsb
sbb
popf
ret
dec
lahf
jmp
aad
loope
pop
pushf
pop
pop
lahf
insl
mov
push
arpl
shrb
aas
fnsave
lock
pcmpgtb
xchg
int3
xor
cmpsl
in
das
and
das
lods
jecxz
cmp
xorl
cltd
mov
adc
jb
jmp
cmpsb
cli
mov
loopne
xchg
inc
loop
cmpsl
mov
push
loop
xlat
push
aad
les
xchg
aad
push
jecxz
fcompl
es
shl
movsl
repnz
fdivs
push
fdivr
sahf
xchg
jns
mov
mov
fisubl
pop
dec
outsb
lds
lods
jecxz
fwait
into
aas
mov
cmp
mov
imul
sahf
ret
in
fdivs
mov
sub
repz
dec
imul
mov
shll
cmp
push
or
jge
xchg
test
jl
out
sbb
or
push
repnz
push
repnz
cmpb
pop
mov
inc
bound
int3
xchg
xor
out
outsl
and
cmpsb
mov
push
insl
inc
dec
sbb
fisttpll
jno
dec
cmp
pop
or
xchg
clc
mov
push
mov
sahf
clc
inc
push
xchg
push
ja
mov
rclb
mov
pop
dec
pop
jp
mov
push
les
add
xchg
and
push
jp
inc
pop
in
jno
aaa
out
sahf
xchg
data16
decl
mov
iret
out
pop
divb
out
mov
push
data16
sub
fnstcw
movsb
repnz
fnstenv
lock
jle
insb
out
xchg
jmp
aad
fisubrl
push
repz
rorb
int3
inc
mov
inc
or
pop
dec
push
outsb
mov
xor
pop
jb
inc
inc
lret
shlb
jle
lret
repz
or
mulb
xorl
push
pop
and
xor
cld
jno
cs
push
enter
in
imul
outsb
or
cwtl
mov
sub
fistl
xchg
inc
and
iret
jno
inc
pop
test
mov
jg
inc
xor
inc
and
loope
cmp
xchg
sbb
inc
stos
xchg
sub
and
mov
pop
ljmp
push
in
pop
or
xchg
out
xor
inc
xchg
mov
cmpl
jg
aam
or
and
xchg
sbb
stos
mov
cmp
insb
fwait
lods
mov
mov
fdivrs
ss
loopne
ret
out
vmovntps
sbb
or
jnp
xchg
insb
push
inc
jae
push
lock
mov
jno
push
in
flds
test
pop
mov
inc
cmp
fwait
pop
cs
fnsave
cwtl
loop
add
dec
pop
lods
pop
adc
insl
xor
je
hlt
mov
sub
adc
ja
add
mov
adc
gs
shll
cltd
int3
fs
bound
jo
ret
aad
arpl
loope
ret
jmp
push
stos
push
enter
aaa
xor
adc
testl
aaa
mov
ds
bnd
jle
adc
les
cmc
lret
imul
sbb
adc
pop
sub
lcall
sahf
and
int3
fadds
sbb
push
xlat
shrb
fsubrp
subl
or
or
dec
mov
xor
push
xchg
and
push
mov
aaa
ss
inc
aaa
dec
lret
icebp
icebp
call
cmpsl
sub
js
lock
inc
sub
movsl
xchg
mov
push
ds
cs
loopne
fmull
mov
daa
add
rep
hlt
pop
loopne
sbb
clc
jl
jnp
inc
mov
rorb
ss
jl
loopne
jbe
sbbb
jge
adc
in
sbb
scas
nop
popa
aaa
pop
ret
stc
cmp
cmpsl
std
fsts
scas
test
fnstsw
jb
or
fiadds
cmc
sarl
xor
and
jae
add
push
add
fidivl
mov
add
push
ds
sahf
dec
mov
push
aas
mov
pop
addr16
pop
fnstenv
addr16
sarb
jno
cld
and
fucomi
sub
mov
in
sub
cld
jg
mov
ret
out
pop
lock
ret
imul
cmc
test
pusha
sbb
xchg
sbb
aad
xor
scas
push
daa
into
fwait
add
mov
pop
dec
out
or
or
push
push
lods
dec
adc
push
stc
rcrl
inc
jg
xor
cmp
das
xchg
loop
mov
dec
mov
adc
or
inc
jnp
jne
aam
sbb
cld
pop
sbb
mov
mov
cmp
repnz
out
push
fsubs
or
dec
mov
xchg
pop
sub
mov
mov
outsl
push
cmp
and
aad
inc
in
lods
dec
pop
loope
jle
sbb
xchg
push
xchg
cmp
sbbl
jbe
cmpsb
mov
jg
jp
dec
loopne
dec
push
cmpsb
addr16
sub
shr
mov
cmpsb
sbb
scas
pusha
inc
push
pop
sbb
scas
inc
test
je
outsl
xor
push
movsb
bswap
stos
inc
xlat
gs
mov
fistpl
add
stos
outsb
xchg
int
push
xor
out
push
movsl
sti
lds
aad
and
hlt
inc
jle
xor
adc
cmp
pop
testb
movsl
inc
xor
jge
cmpsb
shll
push
movsb
push
inc
mov
sti
jno
add
sbbl
cmp
call
or
xchg
xchg
out
ret
or
jae
push
mov
aad
loop
lods
adc
pop
inc
and
int3
pusha
push
mov
inc
repnz
lods
mov
or
jno
mull
and
push
inc
ficomps
mov
ret
enter
inc
rcrl
jg
sahf
and
mov
xor
ret
xor
mov
mov
fs
ds
sbb
dec
pop
testb
xor
jmp
xchg
push
mov
lea
add
push
ja
jo
sbb
cmp
ds
aaa
dec
je
lea
les
jp
or
push
inc
jl
imul
leave
rolb
pop
push
sarl
imull
cltd
bound
lds
std
jo
int
enter
sbb
movsl
sti
mov
pop
add
test
subb
mov
out
and
addr16
sbb
fmul
into
shlb
add
mov
lret
out
rcrb
icebp
or
cmp
or
icebp
adc
ss
xchg
adc
repnz
adc
fisttps
mov
xchg
fs
das
xchg
popa
cltd
stos
bound
jbe
sub
or
out
xchg
dec
add
lahf
or
inc
fnstenv
lock
xor
adc
outsl
push
cmp
rcrl
movsl
aas
dec
out
jns
pop
in
or
test
movsb
mov
push
sbb
dec
jno
inc
sarb
xchg
mov
push
sbb
loopne
subb
adc
mov
arpl
and
popf
jp
loopne
and
fiaddl
out
hlt
popf
xor
fsubrl
pop
lret
cld
adcb
adc
mov
mov
and
mov
testb
orb
aaa
sub
aas
add
sbb
in
out
nop
pop
cmp
mov
xchg
xchg
rorl
sbb
mov
and
sub
test
iret
mov
orl
mov
enter
pop
cltd
xor
pop
je
jecxz
lea
cmp
fucomip
imul
fisubrl
mov
push
arpl
add
sahf
pop
sbb
aad
cmp
movsw
inc
stos
and
fsubl
fists
jle
pop
mov
xchg
sub
test
xchg
push
jecxz
push
sub
insb
imul
nop
push
mov
lods
sbb
xchg
mov
mov
xlat
bound
arpl
dec
pop
je
test
pop
loopne
rcll
lret
nop
stc
ds
mov
pop
mov
in
sub
or
pop
or
jmp
sub
out
lods
movsl
jle
pop
fucomp
dec
xchg
dec
fsubrs
add
add
les
ret
enter
sbbl
test
add
rcll
pop
sub
fsubr
pop
mov
icebp
mov
call
mov
mov
cmp
sti
mov
inc
rolb
pushl
fsts
inc
repz
ja
lahf
sub
xor
repnz
sti
fnstenv
lret
or
loopne
add
or
and
fcmovbe
sahf
add
loope
dec
popa
adc
push
xchg
das
add
add
nop
imul
repnz
adc
mov
sahf
or
and
in
sbb
ret
fidivs
add
and
pop
cmp
cmp
jbe
data16
sbb
pop
pusha
fsubrs
inc
or
data16
repz
fstpt
pop
jne
sub
call
xor
out
test
or
fisubs
jno
je
enter
inc
bound
mov
lods
push
xchg
mov
hlt
es
push
and
shlb
mov
es
dec
in
mov
xchg
mov
mov
mov
sub
jle
and
mov
popa
xor
divb
sub
pop
nop
dec
andl
mov
sub
mov
push
and
jl
push
scas
mov
pushw
push
mov
sbb
aad
xor
aam
aas
ds
adc
dec
fsubrs
jle
pop
sub
arpl
push
add
mov
jp
into
ss
stc
js
mov
mov
mov
sbb
push
daa
fadds
dec
ret
dec
lods
sub
cmp
pop
mov
mov
incb
mov
push
add
cmc
mov
in
cmp
xchg
shrl
sbb
sub
das
mov
cmp
push
xchg
lcall
mov
cmp
into
pop
mov
jns
inc
fs
arpl
push
mov
rorb
in
mov
mull
cs
jbe
es
xor
dec
and
xchg
cli
inc
arpl
adc
mov
mov
add
sbb
push
and
cltd
xchg
popf
mov
mov
sbb
mov
inc
cltd
and
jl
push
outsb
sbb
out
ret
cmpsl
and
push
cld
push
xchg
test
lret
adc
jnp
out
jae
cmc
xchg
repnz
sub
ret
add
negl
in
pop
dec
push
xchg
or
xchg
push
cmpsb
test
inc
hlt
icebp
mov
adc
es
call
std
or
adc
mov
movsb
ja
push
andl
cmp
popa
fidivrs
xchg
lods
jbe
lahf
aaa
outsb
add
xor
fistpll
sub
mov
cld
adc
sbb
inc
push
iret
testl
push
ret
cmp
neg
leave
lods
cmp
andw
lahf
push
xchg
cmpsb
cmp
mov
jno
sbb
lcall
adc
pop
lret
fcomi
lea
push
adc
sbb
lods
sbb
filds
fimuls
mov
mov
jge
es
cmp
or
sti
add
scas
or
aam
shrb
push
aas
mov
lcall
and
cmp
adc
dec
fs
mov
fsubrp
int3
xor
or
clc
cmp
jae
pop
sub
jle
je
cli
cmp
insl
lods
jp
add
iret
movsb
push
push
stos
cmpsl
pop
jb
dec
les
aas
lcall
adc
shrb
sbb
in
pusha
mov
xchg
lret
add
or
sbb
jmp
ja
and
mov
push
xchg
ret
into
mov
jne
sbb
jmp
jae
mov
imul
mov
in
clc
jl
cmpsb
inc
inc
xlat
movl
cmpsb
dec
inc
out
mov
xchg
dec
ficompl
jle
sub
xchg
cltd
std
lahf
sbb
jb
inc
push
pushf
inc
mov
lahf
xchg
stos
sahf
lods
test
rorb
out
loopne
cwtl
nop
add
getsec
call
or
roll
movsb
sbb
pop
push
in
test
cmpsb
aas
pop
jg
negb
clc
mov
jge
sbb
outsb
xor
pop
lret
jg
jmp
lea
dec
inc
loopne
or
cmp
in
mov
inc
lods
mov
mov
sbb
stc
push
rcrb
sbb
adc
inc
push
jp
aaa
pop
ss
add
cmc
adc
push
mov
iret
fidivs
jbe
cmp
das
lret
mov
scas
xchg
mov
lcall
adc
lahf
mov
xor
fbstp
add
clc
xchg
fsubs
test
inc
xlat
dec
stos
rcrb
popf
and
sbb
out
out
cmp
int
inc
adc
rcrb
inc
mov
outsb
sub
pop
pusha
into
and
aad
lods
jmp
dec
xor
cli
orb
jmp
jae
mov
push
adcl
int
orb
dec
lahf
mov
sub
test
ss
jne
add
lods
arpl
icebp
mov
cmovg
and
sbb
pushl
lret
imul
xor
data16
pushf
add
push
ds
shlb
fscale
mov
inc
lcall
xchg
or
in
sub
mov
and
sbb
cmp
inc
xor
lahf
dec
dec
add
filds
mov
mov
mov
jl
mov
fimuls
mov
fdivs
pop
addr16
int3
fdivs
mov
test
sub
xorl
pusha
jecxz
pop
xor
inc
fdiv
cmc
popa
fs
jno
sub
test
jbe
lock
fucomip
mov
shrl
lds
jns
neg
imul
fisubrl
bound
jl
jge
mov
aaa
cli
sbb
sbb
lcall
push
jbe
shll
push
mov
mov
inc
test
movsb
call
fcomi
sbb
and
mov
fdivl
pop
mov
outsb
sub
xchg
adc
inc
out
push
jns
mov
sbb
jl
dec
add
insb
inc
scas
icebp
loope
lods
ror
ss
ret
xchg
mov
sbb
fs
pop
outsl
add
sbbl
dec
mov
gs
aad
stc
push
mov
pop
jmp
sti
test
shlb
dec
xor
enter
cmp
xchg
ljmp
lock
shll
adc
std
fwait
cmpsl
push
inc
js
xchg
push
add
test
mov
adc
pop
aaa
push
lods
push
cs
cwtl
out
mov
xchg
mov
xor
popf
into
xchg
dec
rclb
xchg
cmp
call
jmp
push
ja
in
lea
and
stc
jns
adc
xchg
xor
les
idivb
cmp
fsubl
fnstenv
mov
in
in
mov
or
fcoml
lods
cmp
mov
aas
addr16
outsl
lret
jmp
and
loop
push
push
add
into
xor
loopne
fcoml
push
in
inc
call
int3
jmp
dec
dec
cmp
testb
pop
adc
ret
inc
jle
dec
add
pop
mov
aam
out
sahf
int3
mov
sbb
icebp
adc
sahf
cli
xchg
into
loopne
sub
addr16
push
xor
sbb
subl
mov
jnp
mov
es
mov
or
and
movsb
fisubrs
dec
jno
out
test
hlt
cmp
xor
lret
cmp
out
stos
mov
bound
lret
xchg
or
call
iret
jp
fcomps
mov
jnp
xor
arpl
pop
pop
ja
pop
gs
mov
push
inc
xor
mov
mov
shrl
adc
ss
mov
sti
xchg
push
in
enter
in
insl
push
arpl
pop
add
sbb
sub
out
addr16
lods
aas
fildll
and
adc
and
sahf
std
ljmp
dec
jno
mov
mov
pop
mov
sub
inc
xchg
test
adc
andl
mov
or
jns
push
dec
pop
mov
icebp
pop
in
mov
and
or
xchg
mov
mov
mov
out
mov
mov
mov
xchg
imul
jne
or
mov
cltd
aad
mov
cld
scas
jno
loopne
pushf
xor
and
popf
dec
daa
pop
cmp
lods
iret
or
jb
adc
ficoms
jnp
jge
test
jge
imul
dec
mov
push
or
xchg
or
xor
xchg
xchg
and
lret
inc
sbb
aam
scas
xor
movsl
add
sti
cld
les
mov
mov
mov
mov
leave
push
call
xchg
push
mov
jp
adcb
stos
into
and
cmp
sahf
out
add
arpl
cmpsb
xchg
ret
or
in
mov
call
int3
push
insl
outsl
dec
push
aad
rcrb
cmp
gs
inc
jo
mov
jne
ljmp
shlb
ja
cmp
and
sbb
ret
mov
mov
add
and
push
sub
inc
fstpt
sbb
jge
sbbl
add
xlat
repz
sub
mov
nop
adc
add
xor
and
cli
sub
cli
cltd
cmpl
in
call
mov
mov
fbld
cmp
cwtl
stos
enter
lea
jns
mov
adc
loope
cmp
cmp
inc
dec
cmc
xchg
in
cmp
pusha
out
xor
pop
add
fcomps
sbb
nop
push
das
jmp
sahf
sbb
lea
sbb
fnsave
add
and
in
push
mov
xchg
sbb
testl
outsl
jge
lret
clc
mov
push
jge
or
mov
sbbl
sahf
xchg
repz
inc
xlat
hlt
dec
cmpsb
xlat
pop
jg
cmp
test
dec
xor
mov
test
cmp
push
and
jns
sbbb
dec
push
push
test
xchg
jp
jno
jns
ror
bound
into
ljmp
std
add
ljmp
mov
cmp
xor
repnz
pop
and
inc
mov
push
ss
ja
cwtl
and
mov
shl
push
xor
sub
push
pop
adc
out
mov
sbb
ja
and
push
stos
xchg
cwtl
arpl
andb
sbb
fisttpl
push
cmp
in
mov
mov
mov
cwtl
je
pop
mov
xor
mov
pushf
fistpll
and
mov
lock
cmpsl
cmpsb
or
xchg
inc
sub
aas
cmp
fwait
stc
xchg
nop
adc
insb
insl
push
adc
or
and
call
mov
loop
sarb
and
inc
fisubs
and
cmpsb
ljmp
lds
aam
daa
pop
out
jmp
adc
or
and
sub
pusha
mov
dec
lret
fnstcw
cmp
ljmp
or
cwtl
pop
fildll
rorl
sbb
icebp
and
xor
mov
pop
lock
repnz
sarl
xchg
les
xor
shl
sti
add
or
xor
aam
mov
popl
daa
shrl
jae
aad
xor
test
mov
adc
nop
sub
enter
scas
ds
xchg
jg
push
les
or
sub
sub
xchg
mov
gs
bound
nop
pop
jle
hlt
insb
cmc
inc
scas
data16
mov
dec
mov
add
dec
cmp
rclb
popf
stc
pop
inc
arpl
xchg
xor
testl
pop
js
loopne
push
xor
mov
mov
cmp
in
jnp
mov
pop
rcrl
adc
scas
in
andl
stos
inc
les
push
sahf
fisttpl
push
mov
call
std
mov
cltd
in
lahf
mov
shrb
testb
mov
mov
fwait
sti
mov
sahf
into
push
lods
call
cld
pop
sbb
ret
mov
push
xchg
mov
fsubrl
incl
xor
ret
pop
out
int3
loopne
rcrl
and
ds
pusha
jmp
xchg
leave
mov
sarb
stos
in
stos
lods
lods
dec
test
and
lock
cmpsb
sbbl
pop
and
cmc
sbb
sub
dec
fs
fs
mov
enter
dec
test
xchg
std
xchg
add
push
sub
xchg
sarb
pop
adc
enter
mov
and
push
inc
mov
imul
dec
testl
inc
push
push
cmpsl
packsswb
adc
or
sub
out
loop
mov
movntps
adc
lahf
xchg
push
mov
mov
jl
or
mov
pop
icebp
divl
cs
xchg
mov
sbb
inc
and
les
cmp
mov
inc
aas
addr16
cmpsb
mov
xchg
test
inc
mov
jl
fldenv
or
cmp
cltd
inc
or
inc
dec
out
push
push
mov
cli
adc
jo
fwait
lods
lds
mov
jle
xorl
in
push
stos
inc
lcall
aas
in
xor
cmpsl
mov
add
jl
jmp
pop
lods
mov
or
subl
mov
imul
andl
std
lods
decl
cmpsb
sbb
xchg
lret
xlat
mov
xchg
push
cld
out
cld
xorl
push
scas
ret
jne
aaa
fscale
xchg
inc
jmp
xchg
pop
dec
rcr
jle
mov
cmp
idivl
xlat
scas
and
test
mov
sbb
fisubrl
test
outsl
push
lea
insl
cmp
pop
pushf
jmp
cmp
xchg
jo
xor
and
xchg
ficoml
fsubrs
xchg
add
xchg
rcrl
pop
test
pop
mov
aaa
mov
and
sbb
and
cmc
mov
fwait
addr16
add
cs
cmpsl
jmp
cmp
mov
icebp
or
rolb
push
fdivrp
xor
pop
mov
test
fistpl
jg
out
shlb
scas
nop
roll
rclb
cmp
or
xchg
xor
sub
hlt
xchg
mov
clc
cwtl
test
fisubs
mov
push
add
sbb
aas
fwait
inc
int3
call
out
stos
jecxz
sbb
fsqrt
notl
test
mov
in
test
loop
xor
ds
es
push
jae
cmp
xchg
push
push
popa
out
xchg
fwait
gs
adcl
cwtl
push
jp
cmp
sbb
cmpsb
out
adc
scas
inc
jae
cmpsl
int
sub
repz
dec
and
inc
cmp
dec
push
xchg
sub
sahf
scas
mov
pop
xchg
out
test
jg
stc
cmp
repnz
xlat
xor
add
push
lods
out
push
mov
repnz
stc
pop
sub
jp
add
xchg
inc
ret
or
insl
js
lcall
fstps
pop
cmp
clc
lock
insl
push
dec
mov
sahf
daa
mov
andb
dec
insl
cli
xchg
xchg
scas
xor
orl
add
sbb
push
jnp
add
addr16
insl
iret
int
sub
xor
jmp
cmp
xchg
and
leave
pusha
push
xchg
or
in
mov
xchg
cmp
or
mov
test
or
xor
xchg
xchg
test
adc
sbb
jo
jmp
ror
and
test
sbb
ljmp
dec
xchg
icebp
cmp
mov
push
mov
dec
ljmp
les
xor
lahf
icebp
aam
jb
and
out
lret
pop
imul
lods
int
dec
dec
sub
sub
mov
xchg
and
mov
adc
cmp
enter
mov
pop
mov
push
loope
leave
jecxz
ds
adcl
test
fistpl
inc
push
jge
adc
loopne
fiadds
movsb
mov
pop
int3
out
in
inc
dec
or
dec
push
xchg
sbb
mov
jne
arpl
movsl
inc
pop
divb
ret
cmp
mov
adc
ficoml
and
adc
push
es
addb
fdivp
cltd
and
stos
mov
lret
decl
xor
subl
ja
test
dec
imul
xor
ja
lods
push
out
popf
sub
xchg
pop
pusha
repnz
sbb
aad
imul
push
push
roll
jl
or
adc
subb
cmpsl
push
int3
or
sub
sub
jge
jb
pop
jo
mov
mov
fimuls
xchg
aas
or
mov
lea
mov
dec
lods
stc
imul
subl
je
dec
mov
and
sbb
mov
jbe
clc
addl
xchg
sbb
lcall
fisttps
jle
inc
jecxz
cltd
mov
adc
jmp
lock
mov
jle
push
sti
stos
push
sarl
dec
in
bound
sahf
loopne
or
mov
ljmp
inc
fisubl
aaa
push
into
or
mov
push
mov
sbb
mov
mov
cmp
das
fdivp
inc
jno
sub
mov
cmp
sarb
test
popa
cmc
std
je
das
pop
jmp
pusha
scas
out
or
or
movsb
scas
mov
scas
xor
fsubrs
adc
mov
jb
stos
add
shl
rcll
scas
mov
rorl
jne
shll
or
and
loopne
mov
mov
adc
push
pusha
into
inc
push
pop
push
fs
test
sbb
jmp
nop
mov
pop
movsb
mov
xchg
gs
imul
andl
repz
popl
loopne
push
sbb
js
pusha
shrl
mov
push
insl
lcall
enter
scas
ljmp
or
mov
into
jns
inc
addr16
cmpsb
mov
push
pop
mov
inc
ljmp
xor
fiaddl
lahf
mov
cmpb
sbb
outsl
out
cld
jmp
lcall
and
push
loope
inc
pop
jb
fisubs
cmp
adc
outsl
lret
and
stc
push
adc
push
std
lods
push
mov
lcall
push
sbbl
in
incl
push
scas
scas
jns
dec
outsl
dec
sub
incl
int3
jno
cmp
sbb
sbb
mov
sahf
sub
jmp
enter
sbb
ss
ss
or
dec
mov
add
cmp
sbb
mov
add
mov
jle
aas
sahf
negl
inc
cmp
cmp
jb
sbb
mov
or
mov
adc
clc
gs
push
sbb
mov
das
pop
or
inc
repnz
cmpl
mov
cltd
lock
mov
imul
aad
sub
push
dec
cmp
push
pop
xor
mov
ficoml
xor
out
and
jl,pt
lret
das
iret
dec
add
lret
cli
xchg
imulb
push
xor
and
xor
xor
xchg
inc
sbb
imul
fsubl
or
in
xlat
mov
cmp
jne
inc
inc
and
mov
push
mov
repnz
sbb
mov
mov
push
fdivrl
rcrl
sub
cmpsl
sbb
adc
push
lahf
dec
ss
pop
fs
push
out
jnp
mov
dec
xchg
addb
adc
cmpsl
out
popa
leave
mov
jle
movsb
sti
out
call
movsl
xchg
push
mov
out
xor
sbb
addr16
das
mov
mov
mov
inc
out
sbb
dec
fcmove
hlt
arpl
hlt
mov
cmpl
cmp
push
push
imul
repnz
mov
sub
fwait
push
in
cwtl
ret
xchg
pop
mov
lcall
mov
jg
push
adc
xor
adc
mov
aaa
and
pop
push
int
dec
add
lahf
mov
imulb
movsl
xchg
outsl
pusha
js
jmp
jne
lock
rclb
push
mov
pop
fistps
orl
lret
jo
and
or
or
push
ss
popa
lods
xchg
sbb
ljmp
testb
adcb
shl
xchg
out
mov
xor
cmp
pusha
xchg
cs
push
push
sahf
in
dec
lock
mov
jo
repz
jo
jbe
xchg
js
ret
pop
insl
stc
mov
cmovnp
mov
orb
lds
lahf
push
pop
inc
jb
or
hlt
cmp
test
scas
lock
loopne
les
or
es
das
in
cmc
jbe
push
push
roll
lods
popa
clc
sbb
jp
lods
insl
cmc
mov
push
orb
jmp
lds
das
jl
testl
mov
xchg
repz
xlat
rol
pop
lods
mov
inc
insb
int
fmulp
dec
enter
pushf
repz
ret
jnp
push
rolb
sbb
and
push
push
fs
cmp
lahf
negb
pop
aad
out
or
xchg
dec
loope
mov
jecxz
cld
and
mov
jmp
inc
push
inc
or
loopne
fstps
or
subl
xchg
stos
xor
ret
jp
test
push
fiaddl
scas
pop
lods
lea
addr16
xor
or
push
sub
arpl
cltd
mov
xchg
cltd
inc
les
sahf
sub
insl
testl
cmp
fisubs
cmpsb
mov
imul
jnp
pusha
cmp
push
jmp
jmp
pop
hlt
xchg
test
dec
jb
push
and
shrl
cmp
decb
adc
mov
int3
addl
or
mov
mov
lret
mov
jl
int
sub
mov
testl
cli
cmc
mov
mov
fisttps
push
mov
xorl
sbb
pop
sahf
scas
out
js
lcall
fwait
cld
push
int
mov
mov
lock
dec
dec
sbbl
sub
scas
hlt
mov
mov
jbe
xorl
fucomip
flds
jg
cli
outsl
push
sbb
loopne
jns
stos
test
bound
ja
inc
enter
push
std
out
out
push
mov
rcrl
mov
jecxz
pop
sub
stos
fldenv
sbb
inc
sarl
mov
sub
xchg
mov
das
lods
adc
jb
mov
daa
arpl
mov
mov
sbb
push
cmp
fwait
mov
xchg
int
xor
out
stos
mov
imul
cmp
inc
idivl
push
insb
inc
add
and
out
xchg
lahf
sbb
inc
sub
aas
pop
push
push
inc
cmpsb
pop
test
sbb
adc
pop
loop,pt
jmp
jle
outsb
or
daa
mov
adc
wbinvd
xor
xchg
jl
lock
mov
pop
repz
test
add
daa
outsl
mov
jb
xor
xchg
add
or
inc
test
dec
push
aas
ja
cmp
mov
iret
cmp
cltd
xor
lret
mov
push
push
inc
fisubrl
or
movb
mov
loopne
sub
xchg
aaa
cmc
mov
das
mov
in
in
add
pop
mov
cwtl
arpl
dec
sbb
incl
add
sbb
sbb
pop
cmp
mov
mov
fstl
out
repz
mov
arpl
mov
mov
add
push
mov
and
out
fisttpll
sbb
ja
leave
mov
fs
stos
mov
arpl
push
dec
push
push
or
dec
mov
jge
mov
insl
jle
or
xor
add
sti
and
cmp
mov
cmp
out
inc
out
cmp
inc
sub
lret
xchg
int
xchg
xor
pop
and
es
inc
jb
out
jb
popf
dec
adc
lds
jl
sbb
mov
mov
arpl
lret
lock
orb
mov
adc
inc
std
mov
push
insl
andb
inc
adc
popf
push
mov
ficompl
mov
inc
call
cmp
mov
pusha
adc
cmp
jb
lcall
add
pushf
sub
iret
cld
jmp
aam
cld
outsl
cmpsl
jbe
mulb
enter
insl
addl
mov
shl
and
fimuls
nop
nop
stc
dec
or
sub
xor
inc
in
pop
cld
movsb
nop
and
loop
js,pt
std
es
add
xchg
mov
dec
addr16
adc
inc
stos
loopne
pop
fwait
rolb
xchg
inc
inc
jl
negl
or
cltd
jp
mov
xlat
mov
cmp
shrb
test
insl
and
sti
and
inc
addr16
lret
mov
inc
fsubl
inc
in
out
cld
stos
adc
fdivrl
xlat
ret
ret
negb
outsb
sbbl
dec
push
inc
xor
bound
and
insb
mov
pop
and
int
dec
hlt
out
testl
mov
test
bound
in
mov
push
fwait
out
sbb
sub
xchg
cs
iret
cli
mov
pop
xchg
or
mov
es
xchg
xchg
inc
mov
movsl
inc
sub
fidivs
test
out
int3
sub
sbb
dec
pop
cmp
jmp
jge
xchg
faddl
mov
sub
addr16
int3
sahf
pop
xchg
inc
inc
call
aad
aas
mov
push
jns
push
mov
lcall
ret
or
pop
movsb
std
das
inc
sbb
icebp
mov
sbb
ds
sub
push
inc
outsb
mov
xor
inc
rcrl
cli
lds
gs
cmpsl
mov
ja
dec
mov
xor
mov
mov
std
jl
test
lods
les
outsb
sub
lahf
enter
cmp
mov
jmp
mov
jp
jle
rsqrtps
fisubs
sarb
dec
jecxz
lock
mov
stc
scas
add
loopne
pop
adc
lea
shll
mov
es
pop
lret
pop
xor
push
jo
jnp
xor
xchg
stos
add
push
pushf
scas
or
push
push
sbb
push
lods
mov
clc
shrl
movsl
lcall
sbb
sbb
cmp
loope
xchg
mov
stos
jnp
imul
dec
xor
fwait
and
lret
loopne
mov
repnz
or
mov
mov
dec
push
cmp
mov
mov
bound
push
outsb
enter
or
into
xchg
push
xchg
imul
cmc
popa
lds
and
adc
scas
cmpsl
sbb
ret
jecxz
sbb
sar
mov
and
dec
pop
addr16
xor
push
in
adc
cltd
add
adc
inc
fdiv
jno
iret
push
cmp
pop
lcall
stc
adc
dec
pop
data16
nop
mov
lcall
fs
pop
lods
cmp
loopne
aam
push
xchg
jbe
stc
in
mov
std
or
repz
call
cs
push
inc
sbb
hlt
lock
or
adcl
xchg
aam
cmp
gs
test
inc
lret
cmp
xchg
sbbb
xor
mov
dec
adc
mov
jl
das
data16
xchg
or
popa
or
push
pop
loope
xchg
jmp
jnp
cmp
in
xor
icebp
notb
or
inc
mov
jmp
sbb
ss
fisubl
lock
cmp
jo
sti
aam
fwait
dec
lahf
add
sar
xchg
jno
xorb
dec
pusha
or
pop
mov
sub
jae
outsb
cmp
cmp
xchg
cmp
nop
sbb
cmpb
es
jmp
pop
gs
aad
out
and
outsl
xchg
mov
lahf
xor
into
loop
lret
test
xor
lods
ret
aam
scas
inc
in
popa
dec
loopne
xor
xchg
pop
sub
or
std
push
pop
sbb
push
pop
push
dec
into
arpl
pushf
mov
in
inc
mov
push
adcb
push
mov
sti
sbb
bound
fidivl
stc
mov
jne
mov
inc
testb
enter
push
mov
iret
pop
adc
stos
inc
imul
out
das
repnz
push
out
cmp
data16
inc
mov
pop
xor
sub
and
jne
or
xchg
mov
insl
mov
mov
cmpsb
pop
outsb
mov
push
imul
mov
mov
fsubrs
out
mov
push
in
xchg
mov
int3
xchg
pop
push
in
int3
push
icebp
ret
xchg
push
hlt
fs
xchg
xchg
sub
adc
push
jnp
incl
aad
sbb
lods
xor
popa
cs
push
aaa
icebp
lret
loopne
pushf
das
mov
lahf
jge
jnp
loopne
add
sub
mov
jp
ret
cmpsb
sub
test
aaa
jne
lcall
clc
and
dec
in
out
cmpsl
testb
pop
in
loope
mov
stos
fstpt
mov
lock
cmpsb
lret
into
adc
int3
test
js
popa
aas
cmp
fwait
std
sbb
and
pop
adc
xor
dec
int
aad
pushf
pop
aad
xchg
dec
inc
cmp
jne
iret
and
call
pusha
mov
imul
mov
xor
enter
push
and
xchg
pusha
xchg
dec
les
inc
sub
scas
dec
xorl
cld
fstpl
cld
inc
xor
mov
iret
test
repz
insb
iret
cwtl
adc
xchg
gs
xchg
push
pop
imul
lods
stos
jg
pop
sbb
pop
mov
rolb
add
xchg
sub
dec
out
pop
xor
push
cmp
pop
loope
jmp
mov
imul
fnstenv
sbb
or
fidivrs
dec
addr16
lcall
cmpsb
repz
push
in
loop
hlt
dec
fucom
movb
mov
push
pop
iret
flds
cltd
sbb
shlb
pop
out
mov
les
sbb
and
nop
mov
rcll
aaa
xchg
push
in
or
lds
maxps
fdiv
and
mov
out
popf
out
aad
sub
mov
and
mov
das
rol
sub
mov
inc
es
xchg
insb
jle
insb
jle
mov
mov
adc
or
insl
sbb
mov
filds
fwait
push
lret
sbb
arpl
dec
and
add
pop
mov
jge
fists
inc
or
dec
fbstp
aad
call
sar
aas
sub
jp
adc
adc
cmp
adc
enter
add
cmp
arpl
leave
sbb
sub
push
leave
cs
jno
mov
lret
sbb
pop
fisubrs
addl
fs
push
sarb
fists
rcr
push
fwait
outsb
out
cld
sahf
aam
addl
sbb
jle
loopne
pop
dec
jecxz
shll
mov
or
sahf
rcrb
add
push
ja
adc
in
adc
into
scas
scas
stos
inc
test
push
sub
cmpsb
xchg
add
ss
pop
adc
subb
xchg
popa
ss
mov
sub
xchg
mov
cs
xchg
lret
and
adc
push
popf
jg
popa
movsb
xchg
hlt
push
lahf
or
sub
mov
out
push
scas
xchg
cld
mov
push
sub
jmp
or
mov
int
fsubrl
push
lds
ljmp
pop
cmpsl
testb
dec
sahf
jle
mov
rclb
mov
fmull
notb
les
fs
inc
rcrb
sahf
xor
jbe
push
out
mov
ljmp
sbb
and
stc
pop
sub
test
cmp
loop
push
or
pop
ja
dec
jecxz
xchg
and
scas
push
push
mov
sub
adc
pop
out
adc
jb
pusha
xorl
adc
mov
jmp
add
fwait
or
pop
xor
aam
in
pop
mov
xchg
fistpl
rcrl
mov
into
lret
jge
out
out
es
mov
xchg
pop
inc
push
lahf
jb
inc
popa
loop
dec
in
rclb
rcrl
loopne
popa
pop
nop
mov
fmull
bnd
fucomip
stos
inc
cld
outsl
inc
inc
mov
fstps
cmpsb
inc
push
mov
pop
sub
fstpl
inc
sbb
mov
lea
jae
pop
lods
fsubr
cs
xor
ja
mov
dec
adc
sub
pop
jnp,pn
imul
sbb
loope
and
mov
movsb
dec
popf
jnp
out
mov
dec
mov
popf
or
pushf
scas
inc
jge
inc
pop
fucomip
jg
jns
cwtl
mov
jnp
jmp
sbb
pop
xor
out
in
subb
and
clc
icebp
push
mov
shl
jle
sarl
std
es
sub
insb
add
inc
in
testb
cltd
inc
notl
pushf
sub
sbb
push
leave
lret
dec
sti
ja
adc
rorl
push
adcb
fwait
ss
adc
test
inc
pushf
fnsave
imul
fsts
dec
cs
xor
aam
add
rorb
stos
pop
adc
mov
or
inc
mov
fcoms
rcr
stos
test
inc
fbld
sbb
lret
ret
scas
or
xchg
out
movsl
xor
mov
cld
xchg
cmp
dec
inc
sbb
jmp
std
and
push
das
push
jb
or
or
pop
mov
fidivs
push
into
xchg
xchg
mov
out
out
xchg
ret
int3
mov
cmc
imul
pop
or
adc
popf
js
movsl
sub
jecxz
sti
jle
pop
xchg
pop
jo
push
cmp
fmull
cmpsl
lahf
xor
lret
fcmovb
sub
dec
or
das
stos
dec
mov
push
ret
lock
pop
repz
add
and
fnstenv
mov
sbb
pusha
sbb
sbb
stos
cld
shll
fwait
lock
fld1
push
test
decb
loope
push
sbb
or
jp
mov
sbb
pop
bound
jo
inc
ljmp
or
stc
or
sbb
mov
push
push
xor
movsb
iret
repnz
push
mov
push
jns
aas
popf
dec
xchg
fisttpl
mov
in
sub
fimull
add
jp
or
cmp
and
adc
sub
jno
jmp
xlat
popa
cmp
add
mov
push
inc
push
mov
lret
jne
jg
divb
xor
repz
add
das
mov
xchg
sub
mov
xor
cmp
add
pop
icebp
roll
ficoms
lods
jg
ret
sbb
test
arpl
push
xor
dec
inc
jmp
outsb
insl
rolb
mov
mov
mov
sub
push
sub
add
pop
push
push
int3
xchg
xchg
xorl
jo
js
shrb
sbb
lret
and
loopne
subb
in
jo
inc
stos
or
cmp
mov
mov
inc
imulb
dec
sbb
dec
or
insl
inc
iret
fbstp
mov
dec
repz
push
imul
jae
cltd
out
xchg
xchg
rcrl
iret
call
or
push
cs
out
lahf
out
in
and
mov
jmp
jg
ret
push
insl
scas
mov
stos
xor
cmp
outsl
icebp
xlat
shl
pop
fwait
testb
jp
or
jl
adc
xor
or
cmpsl
int
stc
decb
aad
mov
lds
mov
es
cwtl
shrb
sub
aad
mov
roll
sbb
sarl
cmpsb
or
lret
pop
xor
or
inc
fdivp
mov
gs
sub
xor
sub
sub
push
xor
insb
add
popf
xor
ss
push
insb
daa
mov
sub
ljmp
push
push
aas
cmp
mov
and
add
andl
pop
out
xchg
or
mov
mov
sar
push
repnz
test
jnp
lds
cmpsb
dec
inc
movl
scas
ss
dec
movsb
pop
leave
cmp
js
xor
jb
adc
adc
imul
jge
xchg
mov
fs
pop
mov
ret
xchg
jbe
out
sub
adc
movd
nop
mov
arpl
nop
or
ret
aam
out
insl
mov
pop
cmp
xor
jne
cmpw
inc
fbstp
pop
mov
mov
pop
push
stos
cmpsl
xchg
dec
loopne
test
pop
or
in
add
push
cwtl
into
mov
push
xchg
xor
rorl
pop
sbb
adc
pop
cmp
dec
call
dec
pop
mov
stos
dec
aas
loope
xor
push
mov
mov
xchg
adc
cwtl
out
stos
jmp
pop
adcl
or
sbb
daa
dec
repz
lret
imul
lahf
daa
lcall
xchg
inc
push
lahf
fisttpl
cltd
sub
inc
xor
pusha
xor
mov
push
loopne
fwait
lahf
divl
sarb
or
xor
pop
shrb
xchg
std
xchg
pop
sbb
dec
mov
xor
cld
test
popf
sbb
pop
mov
aad
and
or
daa
pop
mov
fwait
icebp
subb
dec
pop
mov
add
jge
xor
xchg
xchg
sub
test
push
adc
outsb
scas
xchg
fstpl
stc
push
dec
imul
lods
push
lcall
popa
jns
jnp
aad
hlt
or
jecxz
adcl
dec
sysret
subb
scas
xor
jecxz
insl
xor
out
pop
in
outsb
shl
jge
sbb
sbb
loope
xor
rep
mov
push
push
les
dec
stc
mov
sub
adcb
or
cli
fbld
mov
fmull
int
mov
mov
mov
sbbb
and
sti
ret
mov
mov
fdivrs
shl
and
mov
shl
jl
adc
dec
ljmp
and
mov
xchg
push
in
es
pop
mov
jae
sbb
sbb
push
loopne
xchg
sub
pop
jp
mov
ret
and
sarb
inc
cmp
cmpsl
aaa
lret
clts
aam
sub
inc
clc
insl
sahf
out
hlt
fisubrl
mov
sti
test
inc
mov
in
mov
add
cmp
pop
pop
fdivs
insl
pop
dec
lahf
mov
sub
jb
pushf
sbb
rolb
adc
loop
ret
dec
sbb
ss
xor
push
lret
xlat
imull
popa
out
add
addr16
and
xor
jo
lods
mov
xchg
test
lahf
testl
insl
out
sub
ds
pop
sbb
add
rcrl
cmp
popf
scas
jmp
fcomp
mov
mov
scas
mov
dec
inc
sbb
dec
xchg
or
cmp
inc
mov
fdivrs
shrb
ljmp
xor
cmp
mov
in
out
fdivrs
aas
js
sarb
ds
push
pop
loop
pop
adc
and
push
dec
mov
test
mov
fadds
xchg
in
pop
negl
mov
and
movsb
addr16
fwait
daa
mov
stc
mov
add
adc
adc
in
sbb
push
in
cltd
test
mov
xchg
pusha
pop
int
pop
rcrl
push
push
mov
add
insl
pop
mov
pop
imul
lods
push
add
inc
inc
pop
push
mov
into
xchg
ds
movsl
in
mov
dec
pop
or
shl
add
in
test
xchg
setb
lods
cmp
into
mov
add
pop
pop
mov
jle
nop
addr16
std
mov
xchg
xor
adc
pushf
scas
das
loopne
ds
mov
cmpsl
pop
sub
pushf
movsl
inc
leave
xchg
enter
adc
cmpsb
inc
adc
andl
mov
mov
jb
xor
lods
shlb
inc
mov
push
xor
jmp
dec
pop
stc
add
bndmov
xor
insb
popf
dec
push
mov
pop
dec
xor
adc
xlat
mov
cmp
adc
loop
push
mov
pop
nop
out
popf
andb
ss
out
push
jae
xor
ljmp
call
scas
not
out
add
mov
adc
mov
sbbb
sub
fstps
mov
lcall
stos
cmp
rol
xchg
out
adc
pop
mov
pop
ret
and
xlat
out
inc
push
and
daa
in
outsb
push
movsl
ds
stos
inc
and
inc
popa
das
and
add
pop
mov
sti
int3
push
cltd
jbe
clc
and
adc
mov
sub
out
mov
mov
insb
adc
bnd
push
pop
xor
and
push
sub
adc
lds
test
push
push
pop
aam
sahf
inc
xor
adc
cltd
mov
push
or
popfw
mov
popf
call
in
pusha
repnz
jmp
cmpsb
cmc
inc
xchg
in
ljmp
pushf
jg
fincstp
mov
stc
sbb
or
stc
cmp
in
cmpl
or
and
test
in
shll
je
stc
adc
int
xor
in
or
pop
test
mov
sarl
cmp
mov
out
jle
pop
fistpl
jmp
xchg
notb
mov
lcall
loopne,pn
ds
mov
dec
push
imul
imul
fistpl
inc
sti
fwait
jmp
out
inc
push
sub
ret
ret
pop
adc
mov
insl
es
inc
push
or
sbb
ret
add
fdivs
popa
mov
mov
gs
seta
jle
ret
mov
lahf
dec
ret
and
fsubs
cmp
arpl
push
out
fnstsw
mov
pop
data16
cmp
cmp
fidivrs
rcrl
fs
mov
aam
lea
dec
sub
out
stos
loopne
iret
cmc
clc
in
push
adc
ss
negb
arpl
mov
push
dec
jno
je
jp
xchg
jnp
mov
push
sbb
xor
mov
jae
push
jb
xor
and
movsl
sbb
or
lahf
scas
jno
dec
jae
dec
ja
pusha
mov
rcl
icebp
or
dec
cmp
dec
mov
fcoms
jg
aas
lods
in
in
push
call
xchg
call
push
sub
mov
insl
or
je
mov
into
iret
push
ds
mov
push
add
es
insl
data16
sahf
or
dec
mov
popf
clc
and
movsl
add
mov
adc
push
out
jge
adc
add
scas
pop
mov
jne
call
or
mov
fldt
clc
cmp
lods
insb
mov
xor
cmp
movsb
nop
jecxz
push
sub
inc
mov
lds
push
hlt
add
data16
sub
cli
stos
in
push
xor
int3
xchg
push
fmull
loopne
cli
xchg
xchg
sub
xor
sub
out
imul
dec
test
mov
pop
push
push
mov
cli
sub
minps
jl
lock
push
or
data16
cmp
dec
dec
and
xlat
push
or
popf
sti
pop
outsb
and
mov
aaa
ret
daa
lret
mov
sub
shrb
inc
clc
mov
mov
mov
dec
aad
mov
inc
add
call
xlat
sub
mov
mov
dec
aaa
data16
push
cmpsb
adc
adc
jle
nop
out
dec
loop
pushf
push
fnsave
fldenv
testb
pop
fcomip
adc
popf
jge
popa
mov
rorl
cmp
inc
xor
adc
incl
cmpsb
adc
insb
xchg
bound
add
mov
leave
int
pushl
or
pop
adc
rclb
mov
or
xchg
test
and
lock
mov
adc
jb
outsl
mov
pop
pop
loopne
enter
or
mov
adc
roll
cs
mov
cmp
leave
push
dec
xchg
aaa
jle
dec
movsl
das
outsl
dec
pop
lods
jb
push
ds
mov
adcl
pop
repz
int
mov
mov
mov
rcll
xchg
or
rclb
mov
xorb
sahf
icebp
mov
jno
or
jb
pushf
xor
mov
push
inc
cmpb
hlt
mov
jecxz
popf
loopne
seto
or
jge
add
mov
sbb
inc
fwait
push
fdivr
adc
je
mov
gs
sbb
lock
pop
lods
lock
fiaddl
int3
mov
mov
sbb
xor
sub
cmp
dec
mov
push
inc
lahf
repz
fnstsw
inc
inc
push
sbb
into
adc
cmp
not
mov
mov
hlt
ror
xor
mov
pop
lcall
sbb
dec
xlat
daa
push
sub
mov
mov
fldenv
sbb
cmpsb
push
cmpsl
addr16
xchg
stos
pop
mov
int3
fstpl
sub
dec
pop
jno
cltd
mov
scas
pop
lret
xchg
iret
inc
sub
clc
outsb
andl
xchg
stos
fcoms
mov
sub
xchg
aad
cltd
cmpsl
adc
insl
sub
push
mov
xchg
imul
adc
or
jns
movsl
jb
pop
es
mov
cli
lcall
cltd
push
ret
cli
jne
stc
mov
jecxz
adc
addl
and
mov
dec
mov
outsl
dec
in
mov
or
mov
jb
inc
cltd
cwtl
dec
pop
lret
inc
jo,pt
addr16
push
iret
mov
iret
pop
fistl
mov
mov
cmp
cli
mov
cwtl
test
mulb
inc
jae
cld
dec
arpl
cmpsl
adc
clc
mov
les
push
xchg
outsb
sahf
push
pop
cmp
push
stos
repnz
push
mov
clc
inc
jge
incb
imul
sub
xchg
dec
bound
ljmp
out
add
loopne
pop
or
mov
adc
xor
push
mov
mov
ret
divb
mov
rorb
and
add
iret
stos
movb
or
dec
xchg
movsb
cmp
fnstenv
repnz
push
and
shll
stos
pushf
add
std
or
mov
call
test
sbb
jb
lea
lock
and
cmp
xlat
mov
cmp
fisubrl
xlat
mov
xor
jnp
cmpsb
mov
mov
add
mov
icebp
ret
hlt
adc
insl
fsubr
xchg
and
je
daa
pop
icebp
jne
ja
mov
and
xchg
je
mov
pop
lret
shl
push
cmp
sub
popf
xchg
mov
cmc
inc
pop
or
int3
dec
cmp
cmpps
gs
jno
push
adc
xchg
pop
xchg
sub
fdivrs
clc
pop
pushf
inc
mov
mov
mov
sbbl
pop
xor
dec
push
es
xchg
cmp
lds
inc
test
in
scas
popa
lahf
ficomps
jmp
dec
xchg
movsb
mov
shr
cmpsl
pop
adc
data16
cmp
push
int
inc
pop
inc
shld
or
ds
repnz
dec
lea
andb
mov
fidivrl
mov
xor
dec
loopne
cwtl
xor
fsubs
ds
xor
movsl
mov
jl
push
pop
push
inc
stos
inc
mov
push
leave
stos
pop
int3
fidivrs
sbb
and
jle
mov
add
cmp
mov
add
pop
mov
ljmp
and
push
insl
inc
jg
clc
mov
gs
dec
out
data16
nop
movb
mov
icebp
arpl
push
mov
mov
xchg
pop
dec
push
cmp
cmp
or
mov
sbb
fdiv
imul
and
arpl
xorb
fidivl
lods
mov
xchg
or
out
popf
pop
or
mov
lds
loop
adc
jne
inc
cltd
pop
push
cmp
outsb
sub
mov
push
lahf
inc
pop
cmpsl
loopne
jmp
mov
inc
shll
pop
gs
lea
add
mov
adc
xor
rolb
pop
mov
xchg
sbbb
imul
int3
out
inc
jmp
pop
jo
je
adc
lret
and
js
jp
and
push
add
stc
ds
sahf
leave
pop
into
cli
adc
push
jne
cmp
mov
mov
jo
jns
pop
and
push
test
dec
pop
and
add
sub
mov
je
das
xor
and
mov
xor
dec
int3
jne
jns
xchg
adc
jmp
dec
cmc
push
adc
inc
divb
fnstcw
pop
rclb
fstpl
dec
mov
jne
call
cmp
sbb
fwait
push
fs
mov
inc
test
dec
mov
xchg
xchg
out
bnd
movsl
imul
inc
push
stos
mov
mov
inc
roll
hlt
pop
sahf
and
xchg
in
call
loopne
mov
sbb
sub
cmp
mov
jnp
ja
pop
cmp
mov
jp
std
add
in
add
and
sub
stos
mov
sti
jns
jno
or
add
imul
sub
or
adc
cwtl
sub
mov
xor
scas
fs
pop
jecxz
push
ss
bound
cli
cwtl
lea
mov
inc
inc
inc
pop
mull
adc
pop
ljmp
xchg
and
fistps
dec
loope
jg
mov
fsts
testb
sub
inc
and
ret
mov
xor
pop
bound
xchg
xchg
mov
adc
xorl
ss
cmp
testl
imul
mov
in
push
scas
push
add
mov
jae
pop
mov
stc
nop
les
call
jno
in
add
pop
gs
push
loopne
mov
push
pop
negb
andb
and
rcrb
sbb
loope
leave
pusha
jl
xchg
cmp
out
mov
mov
add
and
and
repnz
outsb
sub
aam
cmp
push
nop
ljmp
scas
sbb
fadd
jmp
xchg
clc
pop
ljmp
mov
cmpb
inc
jno
mov
mov
fimuls
cmpsb
lret
mov
loopne
lods
out
sub
adc
out
jbe
insb
add
add
scas
loopne
mov
ljmp
insl
add
mov
leave
add
or
sbb
shlb
jae
std
rcrl
das
sar
jl
mov
sbb
dec
loop
sub
jne
je
hlt
xchg
xchg
and
dec
inc
jnp
jb
adc
cmp
adc
mov
mov
pop
adc
sbb
lret
push
xchg
mov
out
loope
das
sahf
std
repz
movsb
xchg
add
fimull
mull
mov
push
adcl
mov
and
inc
dec
scas
or
gs
subb
mov
or
and
out
out
ret
ret
push
js
push
out
cld
mov
mov
mov
pop
pop
stc
cmpl
fildll
outsb
add
add
repnz
sbb
push
push
pop
adc
lahf
test
sbb
xchg
ficoml
hlt
and
pop
add
mov
insl
test
dec
loopne
popa
jno
test
push
daa
mov
pop
xor
std
loopne
das
ficoms
push
mov
test
mov
dec
in
push
cmc
mov
pop
fdivr
xchg
leavew
jl
jbe
sbb
inc
push
imul
mov
fldl
or
mov
jno
gs
rcll
enter
lret
pusha
cmp
cwtl
mov
pop
out
mov
mov
pop
mov
push
fsubp
pop
dec
mov
loope
add
mov
movsl
movsl
in
hlt
sti
fwait
cmp
fsubrs
lods
sbb
sbbb
mov
cmp
test
loop
ficoms
xlat
setne
and
int
popf
enter
lock
xchg
push
adc
popa
mov
mov
arpl
cmp
ljmp
sub
pop
push
rcll
test
movsb
mov
pop
mov
pop
xchg
pop
mov
push
es
jecxz
dec
in
add
jg
stc
imul
jecxz
sbbb
stc
push
ljmp
jb
xchg
or
sbb
mov
iret
jb
fcmovb
out
or
push
es
dec
loop
cmp
jns
sbb
cmpsl
cmp
popf
or
pop
cmp
mov
mov
pop
push
inc
out
mov
lds
push
out
cmpsb
cmp
cmp
fwait
pop
pop
mulb
shlb
jle
xor
pop
out
sti
push
jmp
cmp
add
xchg
arpl
es
fisubs
shll
mov
cli
xchg
in
xchg
mov
and
sub
sbb
ds
inc
in
testl
push
je
fsubs
or
addl
jge
dec
scas
pop
pop
or
ret
clc
mov
or
ss
fcompl
xchg
push
sub
pop
das
jno
pop
cmpsl
xor
jne
enter
sub
push
dec
adc
and
xchg
push
outsb
xchg
push
inc
mov
pushf
stc
rcll
and
jne
cmp
jecxz
jmp
cmc
inc
fidivs
mov
cmp
and
in
mov
push
aad
aad
jl
pop
lock
mov
mov
mov
mov
rol
fstps
inc
scas
xor
jbe
sub
scas
shlb
pop
mov
insl
add
aam
lds
sbb
addr16
xchg
cmp
dec
arpl
les
or
stos
stc
cli
push
adc
subb
fistps
add
add
xchg
xchg
lods
push
push
movsl
cwtl
out
push
jbe
pop
addb
out
stos
inc
sbb
mov
in
fldcw
lds
push
imull
push
sbb
es
lock
pop
push
mov
movl
lret
mov
dec
mov
hlt
pop
push
sub
orl
das
arpl
stos
xchg
mov
ljmp
shlb
xor
imul
push
out
cmp
pop
faddl
outsl
xchg
sub
and
mov
sbb
xor
cmp
sub
stc
dec
out
jmp
add
lcall
sub
jo
sar
jnp
cs
mov
dec
pop
adcl
cmpsl
loop
mov
dec
mov
push
mov
inc
lea
sti
in
cmp
insl
mov
filds
pop
je
pusha
cli
jl
arpl
dec
fstl
push
pop
loopne
push
inc
xchg
adc
sub
adc
inc
sbb
inc
das
jg
stos
jb
aas
sub
pop
mov
std
stc
cmp
jne
sub
mov
push
mov
xchg
lret
cmpsl
fnstcw
ss
mov
ret
mov
fmull
test
ficoml
inc
xchg
icebp
xchg
mov
inc
inc
cmpsl
pop
mov
pop
cwtl
in
loope
jnp
in
and
fdivs
shlb
gs
mov
push
out
xor
push
push
lahf
fidivrs
decb
mov
jo
xlat
inc
jne
lock
shlb
fs
push
mov
out
test
enter
inc
sbb
xlat
icebp
sub
pushf
das
push
clc
aaa
loop
mov
ss
call
in
mov
pop
loopne
adc
sbb
sbb
inc
sbb
sub
call
test
filds
dec
push
shrb
int
push
out
xor
lret
int3
test
es
sbb
dec
pop
std
or
in
pop
cltd
das
mov
bound
sbb
xchg
inc
cli
and
sbb
fbstp
sti
xadd
mov
pop
movsb
int
sahf
mov
add
std
mov
push
test
dec
dec
ljmp
pushf
jo
mov
testl
orl
outsb
or
xor
std
xchg
inc
mov
sbb
or
js
or
inc
mov
jl
add
cld
popf
xor
jg
ss
pop
mov
mov
and
xchg
or
add
inc
dec
add
adc
cmpb
inc
dec
dec
pushf
cmp
sbbb
add
lea
pop
out
scas
lcall
xor
mov
stc
or
ret
xor
push
or
mov
and
enter
pop
loope
stos
fsubs
inc
xor
pop
and
pop
test
adc
sahf
sbbl
in
mov
jg
jl
add
in
leave
pop
push
fisubs
daa
xchg
xchg
int3
lahf
sbb
mov
cmp
jns
das
into
push
es
aam
push
cmp
mov
adc
scas
imul
fwait
or
jo
imul
adc
adc
leave
and
push
adc
jno
xor
pop
fldl
sbb
push
jle
or
lods
jp
pop
js
push
mov
cmp
loope
test
adc
pop
xorb
cmp
mov
jle
call
mov
into
add
and
cmc
pop
mov
fisubl
push
push
pushf
dec
sbb
clc
in
jmp
mov
or
jmp
repnz
insl
ret
stos
xorb
fs
mov
mov
cmc
dec
cld
lcall
xor
sbb
pop
dec
adc
jge
movsl
cmp
js
arpl
pop
test
pop
pushf
aam
out
into
jns
adc
insl
test
lods
adcb
mov
in
fst
test
test
pop
inc
sub
mov
add
adc
es
xchg
fs
inc
jg
cmp
dec
mov
stos
in
push
in
and
mov
jne
test
ret
sbb
imul
or
pop
loop
push
push
push
cmc
mov
ret
push
xchg
sarb
sub
push
cltd
mov
jnp
pusha
sbb
rcll
xchg
xchg
cmpsb
jge
outsl
icebp
cld
test
test
minps
sbb
js
imul
jb
loop
cs
mov
cmpsb
mov
gs
icebp
push
sub
loope
mov
cmp
cld
inc
test
out
scas
add
stos
mov
mov
aam
push
and
int
call
fidivrl
xchg
xor
cmp
push
in
xor
jle
push
jae
enter
orl
movsb
or
int
fbstp
xchg
in
dec
push
std
xor
jnp
scas
mov
or
cmp
sub
sub
fwait
xor
in
and
adc
dec
inc
push
lods
lds
inc
lret
imul
jbe
mov
outsb
lahf
into
xchg
mov
adc
stc
sub
leave
pusha
push
and
jb
pop
ret
sbb
xchg
inc
lods
cli
jne
icebp
jbe
lods
insb
lock
je
lea
sub
cltd
test
mov
pop
and
andb
arpl
popf
pop
mov
mov
fistpll
movsl
icebp
push
push
pop
inc
or
push
mov
pop
sub
pop
jae
add
out
dec
imul
mov
ja
adc
insb
push
rcr
fwait
xchg
cli
cmpsb
mov
in
cmp
std
or
adc
mov
and
adc
inc
inc
outsb
arpl
add
icebp
mov
shrb
push
clc
pop
pop
bound
cmp
bound
rcrb
mov
stos
xor
js
mov
lea
adcl
dec
ja
pop
in
pop
dec
stos
mov
pop
mov
xacquire
dec
orl
lea
mov
pop
test
or
fs
xchg
and
out
and
mov
pop
addr16
fwait
sub
xchg
and
jbe
in
push
and
in
jb
mov
sub
jae
add
frstor
test
lcall
jle
int
or
and
ret
or
sti
movsb
mov
jmp
inc
addl
cmp
cmp
xor
in
adcb
inc
jo
and
in
lock
es
addr16
rolb
cwtl
sti
push
and
cld
xchg
push
mov
fsub
jno
cmp
mov
pop
stos
mov
lcall
daa
and
adc
lahf
sbb
mov
add
bound
mov
arpl
push
jns
sub
fnstenv
in
cli
jmp
sub
bound
inc
push
mov
movsl
test
sbbb
pop
cmp
pop
fistpll
cmp
dec
int
hlt
lea
imul
out
sub
incb
push
push
dec
and
stc
test
loop
rorl
scas
inc
jae
jl
mov
imul
and
add
insl
inc
cmp
mov
js
je
data16
out
aas
decl
jbe
fdivrl
nop
mov
inc
jmp
shll
sbb
or
pop
pop
loope
mov
jns
pop
loopne
push
add
mov
mov
loope
int
andl
push
push
pop
cmp
std
adc
cmc
fldenv
ja
sbb
mov
jmp
adc
dec
jae
and
das
jle
push
addr16
leave
ja
add
jle
pop
pop
jb
mov
cmpsl
and
fnstcw
sbb
mov
int3
popa
sbb
test
cmp
lds
sbb
and
sbb
out
xor
xchg
clc
aad
cmp
and
xor
test
push
add
pop
dec
sbb
cs
mov
sahf
cmp
ljmp
icebp
fsubrs
dec
stc
test
cmp
jo
ret
sub
incl
inc
sbb
mov
loope
lds
ss
gs
je
mov
mov
sub
mov
dec
mov
loope
mov
push
mov
pop
add
sti
test
out
cmp
out
icebp
dec
push
rcrl
xchg
fld
and
jb
pop
aad
bound
stc
push
jecxz
cmpsb
in
push
push
push
movsl
xchg
popf
lea
inc
aad
pop
mov
pop
repz
push
cmp
rorb
ljmp
dec
sbb
icebp
aaa
cmp
cltd
cli
push
cltd
pandn
test
rcl
repz
pushf
pop
sub
push
stc
repnz
cwtl
or
push
nop
daa
mov
leave
aaa
and
cmp
aam
sti
add
push
andb
sub
mov
shlb
rolb
sbb
sbb
xor
inc
data16
popf
sbb
cld
push
push
cmp
out
into
gs
scas
ljmp
in
cmp
or
cmp
in
mov
les
scas
and
xchg
stos
inc
movb
and
xor
sub
shl
fs
inc
std
out
push
fbld
rclb
mov
cmp
push
jge
jbe
jl
mov
sub
sub
lea
bound
mov
pushf
call
inc
ss
out
inc
mov
xor
les
scas
in
sub
leave
push
ss
fwait
outsl
daa
xchg
in
jbe
add
mov
into
outsb
clc
add
add
sub
mov
dec
dec
mov
fistl
sbb
dec
testb
test
daa
push
mov
subl
lods
test
js
out
inc
scas
roll
jne
push
ja
outsb
test
or
ret
es
pop
outsl
fdivrs
sub
sbb
sbb
icebp
ja
fisttpl
mull
test
push
fwait
push
jge
jle
mov
pop
jae
test
es
cltd
jbe
dec
test
hlt
mov
pop
mov
bound
add
mov
inc
in
jp
jl
std
fwait
xor
inc
push
popf
inc
mov
xchg
stos
rorl
fidivs
jo
fstl
sarl
mov
xor
test
add
inc
mov
pushf
scas
xchg
mov
pop
add
xchg
push
fs
rorb
dec
push
mov
lret
fdivr
loop
out
call
mov
das
aaa
fwait
push
sar
adc
mov
add
pushf
leave
dec
pop
sti
std
lea
addl
lods
mov
movsl
int
test
mov
daa
aaa
sti
movsl
in
popf
hlt
lcall
cld
hlt
sbbl
push
inc
lods
push
xchg
xor
sahf
or
adc
testl
jmp
or
mov
int
aam
mov
mov
inc
pop
mov
xor
add
sub
jg
lods
popa
sub
cmp
fsubrl
xchg
xor
mov
jmp
add
cmp
test
shl
sti
xchg
sub
sbb
sbb
xchg
dec
orl
subb
daa
scas
stos
shlb
mov
data16
xchg
mov
lock
mov
movsb
shrb
insl
std
rclb
lds
nop
js
ret
sahf
push
xchg
sbb
fs
mov
inc
pushf
jnp
daa
inc
insb
fs
sbb
sbb
pop
hlt
arpl
lret
lods
jnp
pop
mov
mov
clc
iret
loop
xchg
xor
jecxz
push
pop
jge
push
pop
mov
cwtl
mov
pop
pop
sub
mov
adc
es
push
sub
sbbb
dec
in
lret
imul
and
mov
js
outsb
pop
sub
int3
lock
aas
sub
add
inc
mov
and
push
mov
mov
push
jl
cmp
daa
iret
push
cld
movsb
mov
sub
test
sbb
adc
mov
repz
sub
push
mov
bound
fs
addr16
or
aaa
scas
inc
loop
xor
leave
or
adc
inc
fidivl
outsb
adc
mov
xor
add
and
movsl
int
xor
inc
jecxz
or
xchg
pop
sbb
ja
jo
mov
push
mov
pop
insl
xchg
in
pop
mov
mov
xchg
out
jns
jle
sbb
repz
pop
loopne
cmc
addb
mulb
mov
xchg
jmp
jo
loope
sub
add
jle
fimull
push
dec
push
mov
cmpsb
and
in
sbb
cmpsl
sbb
leave
xchg
and
stc
jne
icebp
mov
cld
inc
cmpsb
pop
fsubs
lea
mov
mov
adc
sub
es
punpckhdq
addr16
iret
or
scas
sarl
mov
rorl
jmp
dec
ljmp
pop
shll
iret
pop
test
jp
loopne
pop
jg
dec
les
adc
adcl
rolb
mov
push
mov
sbb
jmp
lea
pop
iret
jo
or
mov
xor
gs
bound
jo
inc
sbb
stos
outsl
cmp
gs
adc
adc
mov
hlt
ja
loopne
adc
xchg
js
sbb
iret
hlt
mov
shr
addl
mov
jmp
fdivrl
outsl
sahf
push
jno
cmp
sahf
dec
or
outsl
jns
cmp
bound
les
ficompl
jle
adcb
test
mov
repz
scas
jp
loope
dec
push
and
mov
mov
shll
iret
push
push
ja
mov
mov
push
je
outsb
ds
aas
cmp
ja
in
xchg
mov
test
mov
add
mov
lea
push
shl
mov
jle
imul
jg
lds
pop
lds
out
rol
inc
mov
int
popf
sub
inc
dec
inc
movsb
repz
subb
scas
jmp
jmp
fwait
jnp
popf
mov
sub
movsl
add
pop
divb
gs
mov
cmp
jae
outsb
pop
fldcw
int3
pop
arpl
inc
cmp
aas
add
repnz
arpl
and
mov
int3
fdivl
enter
rolb
imul
sub
lods
cwtl
movsl
fwait
xor
dec
int3
mov
push
pop
cmp
ja
in
dec
or
mov
roll
pop
mov
test
cmp
bts
ffreep
test
movsl
dec
cmpsb
xor
xlat
jbe
rcrl
xchg
sub
mov
cs
cmpsl
rolb
call
mov
pop
movsl
jns
jno
add
bndstx
and
mov
jle
adc
dec
pop
adc
cmp
and
mov
xchg
inc
sbb
call
sbbb
scas
mov
mov
leave
movsl
pop
cli
mov
xor
push
cmpsl
fsts
mov
scas
call
add
dec
sbb
fisubs
add
mov
jp
mov
adcb
setge
xlat
add
lods
cmp
sarl
pusha
js
xor
jl
cwtl
dec
loope
ficoms
sar
xchg
out
lret
push
and
xchg
push
sarl
add
and
insl
adc
dec
inc
xlat
fs
es
jmp
mov
je
jle
jno
test
andb
sub
xchg
stos
push
mov
icebp
mov
sbb
adc
icebp
cmp
out
das
dec
add
lret
pop
mov
ja
sbb
cmp
shr
xchg
dec
cwtl
fs
dec
inc
mov
dec
cmp
repz
fisttpl
mov
pop
lock
movsl
jno
and
pusha
test
das
lcall
pop
flds
xor
mov
mov
sbb
cmpb
lods
iret
push
test
sub
dec
adc
or
xor
dec
in
js
or
add
out
jne
bound
xchg
ljmp
sub
test
mov
lea
push
push
jae
es
aad
dec
mov
pop
sbb
cmp
dec
jnp
imul
pop
push
push
dec
adc
sbb
add
and
pop
cmp
cld
dec
stos
dec
aaa
loop
mov
xchg
mov
insl
add
or
add
mov
mov
rcrl
xor
je
inc
nop
in
xor
or
inc
push
fisubrl
movsb
inc
inc
add
add
push
insb
scas
lds
xor
pop
dec
int3
ds
and
pop
inc
dec
jnp
lds
fcoml
sub
and
add
lock
stos
push
adc
loope
in
bound
xchg
push
pusha
mov
pop
setp
incb
cmp
clc
cmpsl
lea
push
movsl
pop
mov
jle
cmp
xchg
mov
out
jl
scas
out
aas
push
iret
push
test
ss
fs
fstpt
cmp
sbb
outsl
cmc
outsb
sbb
nop
add
mov
sub
adc
inc
pop
sub
cwtl
bound
mov
and
stc
loopne
sbb
decb
xchg
xchg
aaa
jmp
bound
in
sbb
mov
aad
xchg
ret
jp
jl
inc
mov
sbb
ja
lea
lret
jge
leave
lock
cld
dec
sbb
insl
mov
aas
mov
xchg
cltd
sbb
pusha
cmpb
sbbl
mov
mulb
loop
mov
push
add
sti
and
inc
mov
dec
repnz
iret
lahf
hlt
rcl
imul
scas
mov
hlt
mov
mov
lcall
stos
add
cmp
faddp
rcll
stc
push
loope
test
std
sub
lods
ror
sbb
loopne
or
sti
mov
popf
jmp
fwait
cmpsb
mov
push
les
jb
add
stos
xchg
lea
shl
notl
sub
mov
adc
nop
popa
lods
lock
shll
pushf
jge
mov
lret
xlat
pop
and
call
mov
push
push
mov
xor
stos
push
sahf
fildl
or
sbb
xor
ret
pop
scas
orb
loope
mov
lret
jns
mov
push
xlat
mov
ss
mov
aam
out
push
push
mov
outsb
mov
sub
sub
jl
popf
scas
les
dec
add
lock
ljmp
cld
flds
jo
adc
jno
push
jae
in
add
dec
testb
or
movl
cmp
fildl
popl
jae
add
push
leave
mov
jns
xor
pop
mov
dec
hlt
jnp
sub
xchg
mov
dec
mov
sub
pop
xlat
repz
das
lahf
xchg
ljmp
fadds
loopnew
xlat
aad
cltd
mov
or
mov
mov
call
mov
clc
movsl
add
pop
shrb
ss
jmp
imul
mov
adc
shrl
or
lock
inc
pushf
jecxz
imul
imul
dec
push
adcl
out
insl
stc
and
scas
js
add
fiaddl
stos
data16
pop
inc
ja
in
add
es
bound
push
push
loope
ret
inc
xor
es
inc
and
js
subb
loop
fdiv
stos
push
dec
shrl
shlb
cs
shl
mov
add
movsb
sub
and
sbb
fidivrl
repz
jg
and
jl
or
jge
jbe
repz
inc
bound
or
mov
adc
cmpsb
cmp
push
in
pop
lock
mov
xchg
jbe
imul
popf
inc
shl
imul
or
call
es
jmp
pop
mov
xorw
add
jnp
out
mov
add
dec
cmpsb
and
mov
aam
fwait
pop
sbb
cltd
xor
and
popf
xchg
sub
fisubl
cltd
iret
arpl
fld
cmp
lods
jecxz
xor
push
mov
in
mov
mov
push
dec
decl
std
bound
push
jge
or
jnp
xchg
cltd
mov
les
pop
jl
mov
ret
pop
adc
fisubrs
jge
jae
or
and
push
ss
cli
push
xchg
mov
mov
lods
fld
outsl
subb
and
into
sub
inc
mov
mov
popa
mov
jae
adcb
into
gs
ret
hlt
lret
adc
pop
adc
mov
xchg
jmp
arpl
nop
jne
ss
int3
push
fucomp
mov
xor
mov
xchg
adc
dec
push
or
adcl
cmpsb
mov
ficompl
mov
add
js
aaa
pusha
cmp
dec
dec
inc
fcompl
iret
arpl
lea
ja
movsb
ja
dec
push
dec
cmp
aaa
std
ficoms
mov
jg
out
aaa
jg
inc
daa
pop
jbe
orps
subb
sbb
mov
push
mov
mov
mov
insb
in
mov
cmp
push
add
jnp
stos
lods
inc
mov
xchg
or
outsl
cwtl
or
xchg
jle
push
add
fwait
das
jge
jmp
dec
and
sub
into
xchg
pop
sbb
out
add
xor
xchg
sbb
out
and
fidivl
cmp
cmpsb
dec
out
sbb
dec
jl
mov
addr16
and
jg
hlt
inc
daa
lea
aaa
xor
icebp
test
test
dec
pop
push
mov
les
xor
out
inc
xor
xchg
out
push
adc
jle
dec
mov
cmp
dec
and
repz
mov
mov
add
push
clc
jbe
xchg
fbstp
in
mov
cli
leave
mov
push
loope
sbb
xchg
enter
mov
adcb
ljmp
xor
sbb
sbbl
rcll
lcall
out
daa
mov
lret
fcmovnbe
repz
or
push
icebp
in
int
es
jmp
aas
jnp
lcall
and
xchg
sbb
xor
into
mov
cmp
jecxz
cmc
xchg
push
or
gs
or
push
mov
loope
test
sub
adc
enter
in
dec
ficoml
popf
scas
ja
in
cmc
inc
and
loopne
js
sub
adc
sbb
adc
push
or
out
gs
jecxz
mov
cltd
addl
mov
lahf
mov
pop
lea
ja
mov
and
inc
or
fistps
lcall
mov
mov
cmp
mov
lods
mov
dec
int3
jns
leave
call
and
subb
sbb
xchg
adc
mov
cmpsb
loop
stos
xor
rcll
mov
push
xchg
out
and
lods
hlt
rcl
imul
test
cltd
stos
addr16
mov
xchg
int
pop
in
das
sbb
cli
cmc
pop
sub
shll
adcb
pop
dec
mov
jb
mov
aaa
push
lret
mov
sbb
sbb
dec
test
push
or
ljmp
icebp
les
jle
out
das
mov
cmp
or
jnp
nop
jae
repnz
out
xor
pop
fildl
cmp
out
xor
mov
xor
lret
pop
dec
dec
inc
dec
out
test
inc
in
bound
cmp
add
test
sub
call
ljmp
out
test
movsb
lret
xchg
sbb
mov
mov
xlat
lret
mov
push
inc
in
pop
dec
push
arpl
xchg
fs
push
adc
scas
dec
dec
push
imul
imul
push
popf
mov
cmp
inc
xor
addr16
xor
mov
add
xchg
mov
mov
shl
adc
push
or
insl
sub
or
aaa
cmp
icebp
aaa
mov
cli
xchg
dec
push
inc
xorl
jge
test
push
sbb
and
aas
mov
negl
outsl
fcoms
xor
push
or
add
or
push
andl
cmp
jb
notl
insb
sbb
in
sbb
repz
mov
xorb
in
xchg
mov
pop
mov
decb
push
mov
lret
stos
xor
and
pop
xorb
jno
xchg
leave
xchg
mull
fsubs
cli
sbb
notl
or
fdivs
push
bound
push
lahf
jno
call
and
add
repnz
or
cmpsb
rcll
and
test
out
loop
jnp
sub
xor
adc
xor
mov
lret
sahf
mov
scas
rolb
sub
push
testb
rcll
adc
orb
inc
lret
inc
xchg
sbb
xchg
or
pop
jl
popf
stc
dec
popf
in
mov
pop
ret
testl
mov
fistpll
lds
sub
jp
aas
jnp
xchg
sub
sbb
xor
cmp
popf
je
iret
jge
stos
sbb
pop
add
push
rcll
jmp
cmp
pop
out
cwtl
daa
cmp
pop
dec
repnz
cld
pop
imul
dec
mov
stc
test
das
sub
push
inc
mov
and
pop
cld
daa
rcr
dec
push
aad
and
hlt
xor
shrl
xchg
cmc
inc
leave
data16
js
mov
mov
mov
jns
and
into
aaa
mov
jmp
and
lds
hlt
inc
imul
in
data16
or
adc
outsb
punpcklwd
lock
jo
sub
mov
repz
pop
inc
lahf
or
inc
mov
shrb
mov
pop
inc
jmp
std
addb
mov
shrb
addl
cmp
imul
xchg
and
adc
jne
jno
inc
gs
jbe
movl
setae
and
daa
push
cmp
mov
inc
pop
or
stos
push
push
mov
loopne
xchg
fdivrl
mov
aaa
pop
cmc
cmpsl
mov
add
loop
cmpsl
das
push
stc
pusha
enter
sub
fistps
jecxz
sbbb
push
jmp
lods
enter
pop
mov
and
in
inc
sti
ret
mov
popf
lock
push
out
icebp
adc
mov
xlat
ja
sbb
cmp
stc
xchg
into
mov
mov
ja
pop
and
pop
jmp
js
fstpl
dec
add
sbb
jp
jecxz
mov
xchg
std
mov
mov
scas
loope
pop
fidivrs
add
and
cli
xor
in
xor
nop
jg
sub
adc
lock
fwait
mov
dec
fs
hlt
inc
push
push
add
cmp
and
hlt
fildll
mov
push
fnstcw
into
jo
mov
es
mov
lcall
subb
mov
jno
js
mov
insl
movsb
scas
mov
cwtl
adc
jns
push
add
mov
ret
cltd
and
cltd
scas
xchg
inc
popf
stc
lock
cli
push
cmp
notb
into
mov
sub
sahf
mov
lahf
and
sahf
cmp
ja
lret
enter
jmp
call
mov
aas
cmp
adc
adc
xchg
in
pop
sahf
dec
mov
popf
and
xchg
jp
inc
notl
fisubl
ss
inc
xchg
cmpl
insl
ret
jp
mov
jnp
mov
jg
mov
call
xchg
test
aaa
lea
jo
inc
mov
icebp
sub
jb
dec
add
dec
xor
loope
js
xchg
stos
orb
sbb
negb
pop
adc
arpl
outsb
xchg
lock
shrb
imul
or
clc
cmp
xchg
mov
fsubr
loop
push
sbb
fs
rol
in
cmp
adc
sub
and
fidivrs
pop
test
fwait
push
adc
mov
popf
loop
xor
sub
orb
loopne
out
mov
and
les
jns
lds
daa
cmp
add
sbb
push
outsb
and
enter
xor
xchg
out
gs
cltd
pop
xor
pop
add
jecxz
loopne
jl
xchg
inc
in
out
cld
cmp
dec
add
and
xchg
test
fstps
ret
jnp
in
jbe
lea
mov
popf
sub
push
jecxz
pop
stc
pop
ds
adc
mov
loope
adc
mov
fnstsw
adc
cmp
push
test
insl
das
sbb
sub
aas
push
bnd
sub
xor
mov
ds
cmpb
dec
sub
dec
inc
pop
lock
notl
cmp
stos
jmp
inc
mov
sbb
pop
and
testb
mov
push
add
cmpsb
mov
push
outsb
sub
or
insl
fnstenv
pop
lods
jmp
sarl
adc
lahf
add
inc
adc
movsl
xor
jmp
pop
jnp
pushf
mov
adc
push
inc
push
aaa
fidivrl
popa
push
inc
pop
rorl
shl
fwait
and
adc
idivb
mov
xlat
lods
ffreep
jge
loope
mov
lods
and
les
je
int
aam
js
lea
gs
push
lcall
sub
jl
dec
test
repnz
testb
dec
pop
adc
hlt
and
lret
mov
push
sub
loope
pop
sub
xchg
cmp
dec
loop
scas
push
rcll
mov
faddl
xchg
xchg
dec
cld
jmp
ja
sub
inc
adc
sbb
cwtl
pop
mov
pop
jg
sahf
fs
or
and
xchg
add
jge
hlt
inc
or
push
pop
jbe
cmp
mov
xor
pop
fmull
inc
pop
repz
add
fwait
cmpsl
and
in
mov
dec
cmp
pop
test
dec
testb
outsl
and
and
inc
hlt
dec
nop
sbb
bnd
sbbl
and
inc
cltd
or
out
movsb
repnz
adc
testl
cmpsl
sbb
mov
xchg
push
mov
and
jae
push
jno
sti
or
or
add
shl
movsb
movb
push
mov
cli
push
sbb
or
movsb
fcompl
or
into
in
out
adc
out
je
js
gs
or
mov
pop
cmp
mov
test
mov
push
mov
cmp
xor
sub
xchg
sbb
cmp
mov
sahf
mov
pop
cmpsb
ds
in
in
sbbl
cwtl
cmc
lds
mov
lret
and
cwtl
sti
sbb
test
or
inc
push
inc
shl
pop
iret
in
xor
mov
cmc
xor
jo
test
mov
cmc
mov
pushf
mov
dec
cli
or
loopne
xor
mov
push
scas
jbe
jle
pop
mov
sahf
shl
mov
aaa
pop
sub
pop
pop
mov
subb
es
mov
nop
mov
ja
sub
inc
test
mov
icebp
aad
xchg
mov
arpl
shrl
daa
lahf
outsl
stos
test
or
and
popf
scas
in
pop
dec
stos
pop
xchg
hlt
mov
movsl
stc
popf
mov
out
sahf
icebp
fucompp
lods
push
das
dec
push
popf
push
lods
test
mov
leave
mov
or
mov
xchg
jnp
and
sti
int3
sub
xchg
stos
es
mov
push
fs
mov
arpl
mov
movsl
mov
fiaddl
sarb
xchg
cltd
repz
ret
leave
or
sub
cmp
or
mov
popa
xor
sbb
mov
mov
push
jmp
daa
xchg
outsl
out
mov
sub
fiadds
xchg
cmpsl
test
push
jmp
rcrl
scas
mov
inc
repz
and
movsl
or
cmpsb
imul
mov
imul
and
int
xchg
adc
push
jno
popa
mov
fsubrl
pop
lahf
lret
in
lcall
and
pop
cmp
ja
dec
data16
repnz
xchg
in
mov
out
test
stc
cmp
imul
scas
xchg
inc
movsb
pop
repz
addr16
es
mov
pop
fcom
cmp
movsb
insl
hlt
mov
xlat
out
outsl
shrl
jmp
imul
or
aas
mov
sub
pop
mov
adc
daa
mov
movsb
fistpll
ja
sbb
xchg
imul
ljmp
or
xchg
dec
repnz
push
xor
dec
shl
xchg
pop
push
imul
sub
sub
mov
push
pop
adc
cwtl
insb
cli
cmpl
adc
into
sub
or
mov
cmpl
xchg
js
sbbl
sbb
aad
js
pop
mul
scas
cmp
popa
insb
mov
mov
ja
push
gs
aam
xor
xchg
ja
sub
outsl
cmp
sbb
xchg
lahf
add
or
push
aam
loopne
mov
mov
or
fwait
lods
aam
and
push
repnz
dec
imul
jbe
ds
js
mov
sbb
leave
mov
lds
repz
les
xchg
loope
push
ljmp
sahf
clc
dec
pushw
lcall
sub
mov
std
aaa
push
sub
push
inc
sbb
jno
mov
or
shll
jnp
bound
xchg
add
fistpll
in
in
lcall
in
push
adc
xor
xchg
shll
lea
or
mov
pop
xor
add
mov
mov
and
xlat
push
cwtl
or
lahf
addl
xor
clc
daa
xchg
mov
jns
int3
pop
stos
clc
outsl
in
mov
sbb
mov
mov
add
xchg
ror
or
sbb
add
std
push
data16
cmp
cmp
dec
mov
test
add
sub
sbb
out
jl
jle
popa
insl
mov
pop
add
sbb
push
jns
jmp
orl
mov
test
add
xchg
test
push
xlat
or
loopne
adc
jnp
inc
mov
lods
or
lock
inc
jnp
mov
out
es
ss
leave
fcmovb
lea
sets
push
push
iret
sar
aaa
mov
cli
stc
rcrl
sti
es
clc
int
ss
lock
inc
dec
int
in
dec
pop
out
repz
fchs
mov
ret
aam
push
imul
dec
sbb
das
js
psrad
sbb
xlat
int3
cmpsl
mov
and
ret
scas
ljmp
divps
aaa
and
fwait
lret
jg
into
and
push
rcll
arpl
cmc
popa
xchg
cwtl
jo
jo
adcb
cmpsl
out
fidivrl
or
mov
push
pop
dec
lock
xor
gs
add
adc
jns
insl
adc
jo
cmp
cwtl
call
into
aad
dec
paddusw
push
adc
dec
inc
inc
mov
sti
into
test
cld
and
iret
movsl
test
xor
jle
jecxz
clc
pop
in
add
dec
lret
shll
ret
and
push
mov
push
cmp
push
pushf
and
pop
cmp
jbe
pop
pop
jbe
jg
xor
outsl
jp
dec
sbb
mov
jmp
testl
push
cli
xchg
pop
test
pop
imul
movsl
dec
push
out
jnp
ljmp
dec
jbe
sub
mov
shr
loope
cmp
aam
rcrl
pop
cmp
in
fnsave
ret
pushl
fwait
inc
sahf
lds
addb
scas
add
sbb
dec
mov
aas
sub
aad
lret
dec
adc
dec
cmp
xorb
push
call
loopne
cmp
add
test
mull
bound
adc
push
dec
xor
and
lcall
sbb
loop
jbe
stc
subb
mov
repnz
int3
dec
and
xchg
daa
mov
into
insb
insl
rcll
mov
dec
sbb
jb
movsb
xchg
sub
es
cwtl
lock
cli
in
dec
popa
loop
clc
adc
mov
int3
loop
fs
cld
pusha
cmp
stos
fnstenv
out
sahf
negb
idivb
sub
push
in
into
sbb
add
scas
push
adc
dec
repz
mov
and
jne
inc
loop
mov
mov
xchg
cmpsl
add
fiaddl
mov
lods
jno
adc
stos
xchg
sbbb
fmull
dec
repnz
push
push
jb
pop
in
cmpsb
mov
adc
dec
add
adcb
jne
cltd
jecxz
shlb
mov
imul
out
jg
push
mov
and
in
xor
or
mov
popf
ja
pop
dec
arpl
jg
pop
mov
iret
mov
mov
or
push
ja
ja
xor
jl
rcrb
pop
call
jecxz
hlt
aam
repz
popf
add
xchg
adc
les
add
dec
pop
jmp
mov
jp
js
test
ja
test
lret
lcall
repz
push
test
std
dec
pop
inc
cld
xchg
jns
jns
ret
insb
adc
cmpsb
mov
les
stc
inc
push
lcall
cmpsb
cld
das
stc
adc
ss
sahf
movsl
ljmp
push
dec
inc
movsb
aas
push
scas
cld
test
xchg
call
mov
xchg
dec
and
divb
cmp
aam
shlb
mov
outsb
test
sti
rcrb
fs
test
movsb
lret
cmp
sahf
pop
cmpsb
push
cmovo
imull
xchg
fisubs
mov
ret
stc
xor
pop
jle
int
test
or
jle
dec
aam
jo
pop
adcb
popa
cltd
mov
jae
mov
ds
sbb
add
int3
test
or
ficomps
fcoms
sbb
je
xlat
out
mov
mov
sbb
adc
imul
inc
jmp
jno
and
insb
lahf
leave
and
loopne
xor
inc
fnstcw
mov
mov
call
mov
cmp
mov
jle
and
lock
dec
loop
fisttpll
out
push
inc
xor
bsr
out
int
pop
scas
push
push
int
mov
nop
add
push
adc
aad
xchg
sub
aam
fidivs
outsb
add
mov
frstor
cmc
and
rclb
cld
cltd
dec
ja
mov
cltd
aam
and
xchg
jae
sbb
stc
pop
repnz
fwait
cmp
int3
jns
pop
mov
xor
data16
je
pop
push
lret
xor
iret
xor
inc
push
mov
ret
je
es
test
sbb
out
lds
cmp
out
push
mov
add
outsb
mov
mov
inc
mov
or
mov
sbb
insb
jl
loopne
xchg
and
add
mov
cmp
daa
shrl
jle
cmpsb
mov
data16
add
aaa
in
negl
scas
pop
jb
icebp
jecxz
and
enter
jp
mov
js
cmp
mov
mov
lods
test
lret
xor
fadds
repnz
popf
lods
jbe
sub
mov
pop
mov
mov
cmp
stc
popf
push
jae
lods
dec
cmp
mov
and
xchg
lock
test
test
scas
inc
std
stc
xchg
arpl
pop
push
daa
or
mov
jmp
popa
or
adc
fistpll
mov
fcoml
pop
fdivp
stc
pop
loope
movsl
test
mov
nop
jae
imul
rorl
push
cwtl
stos
sbb
pop
insl
add
data16
je
test
mov
test
data16
mov
pop
mov
mov
sub
mov
adcl
ja
leave
pop
in
inc
iret
notl
out
dec
out
cld
push
push
outsb
add
mov
clc
mov
sbb
mov
lahf
cmc
push
mov
rorb
lcall
test
stc
cmpsb
test
sub
xchg
sub
je
stc
popf
in
mov
mov
jp
inc
pushf
dec
jns
inc
mov
in
inc
cmp
xor
push
inc
adc
in
cmpsb
add
fsubs
xchg
dec
mov
js
imulb
mov
pop
push
or
adcb
repz
jle
cmpsb
popf
jp
xchg
sbb
jnp
push
or
dec
push
aad
addr16
pop
out
insl
mov
jle
jp
xor
adc
pop
sub
xor
ljmp
fs
dec
ret
test
push
sbb
ds
push
mov
mov
mov
or
sbb
inc
cmp
adc
in
mov
xchg
ljmp
es
add
push
shrl
fcomip
mov
pop
push
mov
xchg
xor
mov
mov
test
ljmp
rclb
cmp
jg
and
aad
mov
lret
popf
test
mov
sub
jg
cmp
fdivp
stc
out
sahf
cmp
mov
xchg
in
faddp
jbe
lcall
cmp
xor
push
xchg
cmp
or
lahf
addr16
lods
cmp
mov
mov
mov
push
or
test
or
test
mov
outsl
sar
add
scas
fdivrl
pop
insl
mov
mov
lret
in
int3
out
sti
loope
int
pop
lret
pop
jne
or
idivl
sub
fiaddl
fisubl
popf
sub
lret
push
into
fdivl
stos
dec
rclb
popa
scas
and
jb
test
pop
sti
pop
in
cmc
inc
fcmovu
es
push
clc
push
and
dec
xchg
mov
xchg
js
aas
push
dec
mov
ret
insl
and
add
xchg
stos
and
or
push
movsl
add
or
rclb
pop
outsl
or
sbb
test
pushf
fsubrp
xchg
xchg
inc
jmp
pop
jne
enter
mov
movsb
cmpsl
out
mov
inc
or
in
hlt
int3
arpl
adc
inc
std
xor
push
sub
push
push
je
sub
inc
jge
mov
movsl
adc
xchg
test
outsl
pop
lock
jnp
inc
cmp
imul
addr16
xor
repnz
inc
stc
and
pop
lods
xchg
add
int3
fidivrs
sti
xlat
repz
xor
mov
push
aad
lret
and
cli
clc
nop
leave
mov
es
lahf
add
insl
or
aad
inc
pop
xchg
and
or
ds
out
fwait
mov
lds
in
test
test
push
lods
push
pop
into
dec
in
in
iret
cmp
mov
mov
repz
adc
out
push
xchg
or
mov
mov
into
lock
mov
mov
fists
aas
aad
in
cmp
pop
push
imul
loope
mov
les
ret
push
je
and
rclb
pop
jge,pt
ds
adcl
push
mov
je
aaa
pop
xchg
lods
in
mov
pop
cmp
cwtl
cmpsb
push
clc
pop
aas
add
dec
mov
ficoms
pop
xchg
addr16
pop
inc
int3
gs
cmc
and
mov
push
cltd
inc
sub
aaa
xor
popa
dec
fiadds
ds
aam
mov
cmp
mov
xchg
sub
fucomp
push
movsl
sbb
jle
mov
adc
jae
sub
xchg
pop
test
xor
aam
mov
imul
add
mov
xchg
test
enter
jp
pop
sbbb
xchg
adc
xor
lds
aaa
scas
jmp
pop
out
cmp
mov
cmp
andl
sub
mov
jbe
ret
xlat
fcomps
adc
in
mov
ds
or
mov
adc
sbb
or
test
cmpsl
xor
jecxz
pop
enter
subl
repnz
imul
xlat
test
sbb
adc
jecxz
imul
push
add
jl
movsl
icebp
lea
cmp
fiadds
movsb
push
mov
sbbb
mov
pop
cmp
lods
and
das
push
or
add
lods
inc
jl
stc
jle
sub
pop
ret
and
pop
std
lods
sub
test
addr16
inc
or
inc
fsub
pop
lea
nop
adc
popf
roll
mov
bound
cwtl
xchg
in
fwait
decb
xor
call
and
leave
lods
add
dec
fisttpl
pop
or
into
jle
andb
sarb
in
jne
ret
sub
cltd
lods
inc
lret
inc
cmp
dec
int3
push
push
test
imul
fidivrl
lods
add
push
in
jno
pop
push
mov
fcmovnu
ret
gs
jmp
fisubl
fidivl
js
cmp
call
mov
lcall
xlat
into
push
in
aas
cld
xor
insb
add
test
and
add
mov
or
mov
test
aaa
andb
inc
movsl
or
sub
movsl
std
fdivs
loope
mov
push
xchg
and
cld
dec
dec
fnstsw
push
lcall
mov
lret
xor
hlt
xchg
mov
movsl
mov
and
loope
jl
mov
movsl
loop
rorl
sub
push
hlt
inc
adc
into
call
add
push
testb
sub
out
push
test
inc
test
sbb
lods
xchg
pop
pop
repnz
aaa
hlt
dec
lock
lods
inc
testl
out
mov
insl
ja
push
mov
sbb
adc
shr
cmp
shll
jo
lret
pop
arpl
je
adc
inc
adc
je
sbb
adc
xor
mov
shrb
int
sbb
sub
cmpb
inc
inc
pushf
inc
es
dec
std
and
xor
and
or
xchg
cmp
fstp
insb
psubsw
adc
mov
push
xchg
mov
jp
mov
xlat
lea
mov
incl
xchg
insb
into
fcompl
ficoml
cmpb
push
mov
aam
pop
popa
test
push
jne
das
inc
orb
jge
or
ficoml
icebp
sbb
out
lods
jbe
stos
xchg
jb
adc
pop
mov
lea
mov
cmp
inc
sbbl
rcl
cltd
int3
in
pop
xor
out
fs
je
xchg
push
dec
ds
sbb
fs
jno
ret
adc
test
push
sub
push
aam
in
jg
sub
jp
jbe
mov
les
nop
xchg
lods
xchg
notb
out
cli
push
dec
or
sub
in
jp
lods
sbb
fcmovnbe
push
mov
stc
popa
cmp
arpl
cmp
sub
pop
pusha
fcomps
xor
and
sub
mov
sbb
jnp
outsl
cli
pop
cmp
test
mov
sub
fidivrl
xor
testl
stos
andb
jecxz
push
out
cli
xor
ficoms
cmpsb
orl
xchg
sub
add
jns
sub
popf
mov
mov
in
leave
test
mov
or
lea
test
mov
dec
dec
test
or
das
cmp
add
or
sar
xchg
add
sbb
pop
lcall
and
cmp
pop
xorl
mov
xor
push
pushf
and
adc
xchg
stos
mov
sbb
popf
and
ja
sub
lret
mov
in
stos
jne
loope
or
pop
or
push
mov
out
test
cmpl
mov
push
pop
test
adc
xor
adc
push
je
inc
and
hlt
and
pop
mov
jecxz
sub
adc
js
or
and
test
dec
add
jns
add
mov
rolb
sub
not
or
in
std
jb
cmp
push
inc
stc
cmp
push
nop
push
sbbl
sub
inc
xchg
sub
mov
das
or
nop
pop
jo
push
and
cld
dec
xor
cmp
cmp
fistpll
shrb
in
sbb
add
test
js
or
cmpsb
pop
ficoms
mov
lret
mov
in
les
mov
fs
sub
mov
jl
pop
push
mov
enter
shlb
outsb
xchg
shl
dec
and
shrl
lods
cmc
gs
stc
int
mov
mov
movl
mov
inc
ljmp
push
popl
or
pop
movsb
mov
test
sahf
mov
xchg
fimuls
or
out
xor
push
stos
rcl
loope
xor
fcos
push
mov
fstp
xchg
ja
in
cmp
xor
xchg
jmp
push
repnz
addr16
cld
mov
xchg
add
mov
sub
xchg
add
scas
std
mov
lds
mov
stos
jmp
xlat
imul
scas
pushf
mov
sub
fdivs
xchg
jo
mov
hlt
inc
mov
mov
cmp
les
sbbb
and
lret
xor
add
hlt
mov
into
aas
push
repz
hlt
int3
fwait
dec
test
jmp
pop
test
les
sub
mov
mov
lret
cmp
mov
bound
jne
push
je
adc
imul
mov
and
imul
test
lods
icebp
insl
sub
mov
sbb
sbb
inc
fistps
scas
out
dec
cmpsl
jle
push
jp
setle
xlat
mov
cmpsb
sub
mov
mov
xchg
jge
enter
push
sbbb
sub
sbb
scas
stos
movb
mov
or
das
addr16
sbb
jg
cmpsb
push
mov
jnp
adc
insl
incl
sbb
cmpsl
mov
insl
imul
add
stos
add
stos
cmpsl
sub
loop
repz
push
stc
clc
dec
or
sbb
jne
roll
sbb
test
cmpsl
push
fstpl
popa
movsl
das
insb
test
cmp
push
push
inc
xor
out
aam
mov
aas
xor
idivl
test
lahf
jg
in
push
jbe
pop
or
fwait
mov
xchg
ret
scas
mov
jbe
sub
scas
mov
imull
sub
push
lods
ljmp
divb
ljmp
hlt
mov
cmp
sbb
adcl
jae
lds
jmp
pop
cmp
sbb
in
shll
mov
pop
loope
movsb
xchg
jle
arpl
mov
in
cmp
cmpsb
stos
mov
xor
mov
stos
out
push
fildl
movsl
cmp
jne
xchg
pop
jno
push
mov
jno
cli
mov
jmp
and
popa
and
std
add
sbb
pop
jp
xchg
xor
ja
mov
out
pop
scas
jne
push
cmpsb
xor
or
jmp
lret
dec
hlt
cmp
scas
call
cmpsb
sbb
lret
ret
sub
ljmp
repz
pop
inc
push
aad
adc
add
das
stc
inc
sti
jbe
xchg
daa
dec
or
in
mov
sbb
testb
pop
lret
mov
ror
lods
mov
push
jle
shrl
into
pop
fbld
sub
in
lock
sti
push
pmaxsw
jno
jb
rol
pop
add
flds
pusha
ret
icebp
test
orl
mov
and
adc
lret
lret
leave
and
stos
in
ja
nopl
stos
mov
pushf
loopne
in
std
lret
xchg
mov
mov
jp
xchg
dec
and
mov
movlps
push
mov
adc
iret
nop
xchg
push
and
push
mov
pop
jp
push
cltd
mov
xchg
dec
push
jmp
stos
push
mov
int
lods
add
or
fidivrl
mov
mov
xor
push
call
mov
lea
mov
mov
pop
inc
mov
shrb
outsl
or
in
rcrb
xchg
mov
popf
xor
sub
dec
add
nop
pop
pop
loop
pop
dec
mov
mov
inc
ret
mov
imul
push
push
in
hlt
mov
mov
sahf
cs
nop
cwtl
mov
mov
out
mov
movsb
test
cld
dec
aam
mov
insl
lret
sahf
jmp
sbb
or
pop
test
or
decl
nop
shll
test
stc
add
sbb
or
xor
in
hlt
fmulp
and
mov
inc
or
dec
pop
aaa
dec
in
iret
dec
jg
fs
aam
cmc
cmp
pop
cmp
adc
cmpsb
xor
xor
mov
pop
xor
orl
leave
push
cmp
sahf
notl
adc
push
lock
adc
gs
cwtl
pop
into
inc
mov
mov
lret
cmp
rorb
incb
pop
xor
mov
mov
std
push
aaa
push
push
cli
fistl
mov
popa
cli
xor
and
and
rolb
and
or
push
out
pop
fistpl
jge
inc
mov
jle
ljmp
adc
lea
ss
inc
rol
jno
pop
rorb
dec
fs
jae
repz
mov
lock
xchg
pop
std
cmp
shr
inc
stc
xor
jg
in
sbb
push
push
and
fsubrs
cmp
test
and
ss
pop
into
xor
aas
std
insb
dec
ljmp
out
and
adc
and
jg
ja
fisubs
test
insb
cmp
das
sbb
dec
test
in
rclb
mov
sub
fwait
popa
adc
sub
fs
popf
shll
pop
iret
xchg
jns
ja
notl
hlt
push
cmpsb
pop
insb
xor
repz
pop
dec
cmp
xchg
scas
pop
clc
push
pop
int3
outsb
clc
sbb
or
and
pop
xchg
jae
jmp
flds
test
popa
or
mov
fwait
cmpsl
ljmp
fwait
jno
movsb
mov
or
out
cwtl
xor
jmp
mov
pusha
add
sub
sub
jmp
mov
cmp
inc
jmp
aas
sbb
aad
loope
adcb
jnp
xlat
dec
icebp
into
clc
test
pop
xor
mov
push
xchg
popa
lretw
fs
mov
pop
repz
mov
mov
adc
adc
add
mov
inc
inc
icebp
iret
mov
lds
rclb
push
pop
mov
imul
ret
mov
mov
les
cld
inc
dec
mov
cli
pusha
push
in
addr16
repz
jle
loop
pop
dec
cmp
ja
cmp
scas
xlat
xchg
in
xchg
fbstp
fsubl
adc
push
fwait
scas
jb
add
inc
push
inc
in
dec
cmpb
divl
dec
add
pop
dec
aad
pop
pop
sub
rolb
sub
and
sbb
in
mov
shl
jmp
push
repnz
jp
loop
and
loopne
and
imul
lea
pop
mov
mov
cmp
sub
xorl
pop
fsubl
pop
lods
mov
ret
inc
outsb
pop
ret
ret
into
cwtl
ljmp
sbb
and
je
out
sub
or
popf
xor
lea
call
lods
and
jo
mov
stos
jno
xchg
sahf
pushf
add
mov
push
inc
out
lret
je
ja
pop
lods
mov
ret
sbb
add
xchg
jbe
mov
repz
cmp
dec
cmpsb
out
xor
adcb
fwait
mov
enter
outsl
cmp
fistpl
in
ret
mov
test
mov
ja
pusha
test
pop
das
addl
aaa
xchg
rorl
outsb
jnp
pop
repz
or
pop
movsb
int3
fstp
inc
pop
mov
cli
and
mov
jno
jg
lods
mov
inc
aaa
fldenv
mov
adcl
sub
outsl
lea
subb
xlat
pop
call
in
jle
xchg
mov
int3
xor
mov
pushf
loopne
iret
inc
cmp
insl
iret
adc
and
and
test
pusha
gs
mov
or
cmpsb
mov
aam
rcrl
dec
mov
aas
xor
iret
stos
ds
aad
repz
and
xchg
cmpsb
sub
pop
and
movsb
dec
leave
stos
mov
sbb
sti
push
call
dec
call
sbb
popa
xor
orb
push
mov
push
ljmp
mov
cmp
mov
sub
aad
and
and
mov
mov
mov
icebp
pop
leave
pop
idivl
pusha
mov
ret
sarl
mov
cmpsb
movb
ret
or
sub
sbb
xchg
xchg
scas
mov
into
loop
mov
xchg
jmp
rcrb
out
mov
ljmp
push
pushf
mov
push
push
iret
ja
addr16
loop
fs
mov
adc
cwtl
mull
lods
xor
mov
pushl
test
out
cli
add
nop
push
inc
cmp
sub
shr
sub
add
inc
mov
jbe
mov
gs
mov
insb
and
sub
mov
imull
jmp
pop
sbb
dec
outsl
push
loopne
pop
adc
mov
dec
pop
jmp
mov
loopne
outsb
lahf
cmpsl
mov
mov
lahf
mov
int3
and
leave
shl
xchg
inc
push
repz
notb
push
movsl
cmp
loopne
jne
cs
push
and
pop
mov
notl
int
aaa
stos
mov
push
dec
dec
and
mov
jmp
xor
orl
adc
subb
pop
sub
mov
insl
mov
icebp
arpl
mov
xlat
outsb
lcall
sbb
into
xchg
les
icebp
pusha
add
add
sbb
and
loopne
pop
loopne
stos
int
add
cli
out
hlt
fisubrs
or
pop
mov
faddl
mov
in
xchg
mov
push
jp
shll
mov
loopne
stos
mov
int3
loope
pop
adc
cld
xchg
push
mov
and
movsb
daa
arpl
mov
testl
call
jmp
jle
sbb
aad
mov
sbb
mov
or
mov
mov
cmp
sbb
dec
sarl
dec
add
mov
push
pop
sub
inc
pusha
and
call
mov
movsb
jg
add
fiaddl
jb
pop
pop
shr
insl
jg
sbb
push
in
mov
test
pop
ds
jnp
sub
inc
aad
push
pop
loopne
xchg
pushf
and
push
sahf
push
pop
movsl
popf
mov
negl
jp
mov
ret
cwtl
and
pop
jne
dec
popf
jg
sub
pop
repnz
jecxz
fsubs
inc
icebp
or
add
and
mov
add
icebp
fwait
inc
in
imul
push
or
fsub
daa
sub
test
ret
mov
sarb
ljmp
and
adc
add
inc
inc
dec
shl
or
inc
in
inc
and
mov
or
jmp
test
cltd
sbb
inc
mov
cs
pop
pop
cwtl
cs
jp
cwtl
sub
lods
bound
push
test
or
in
in
mov
sbb
xchg
lods
pop
ds
lds
xchg
jb
pop
mov
idivl
cmp
push
call
lock
popa
pop
inc
frstor
lock
jp
test
iret
push
hlt
jmp
cmp
push
call
out
js
jnp
lret
pop
outsb
sarb
or
movsb
test
and
shlb
cltd
and
push
mov
dec
jmp
inc
fs
inc
sbb
lret
adc
pop
lret
iret
push
mov
add
adc
ror
mov
mov
mov
movsb
divl
mov
jbe
mov
addb
enter
xchg
pop
ror
pop
add
or
out
sbb
dec
out
xchg
mov
add
cmpsb
repnz
add
xor
movsb
jecxz
test
mov
arpl
iret
je
push
cmpsb
in
sub
jge
sbbb
sahf
sbb
std
xchg
popf
popf
dec
pop
iret
mov
fs
push
mov
fwait
jb
les
mov
dec
stc
and
in
aam
pushf
pop
mov
push
push
outsb
jo
sahf
stos
push
imul
mov
xor
in
push
pop
lret
ja
iret
fwait
std
push
mov
mov
sbb
pop
test
pop
repz
jl
sub
cmp
mov
or
sarb
lds
inc
repnz
scas
inc
and
call
dec
lods
rcrb
push
int
jno
jno
jge
in
dec
fcompl
jmp
or
test
cmc
adc
mov
push
pop
dec
sbb
scas
mov
sub
adcb
dec
outsb
mov
adc
adc
das
xor
adcb
lea
mov
jl
jmp
jno
out
popl
loope
mov
fwait
addr16
mov
jecxz
insl
sub
jmp
mov
jb
add
shll
int
out
scas
inc
lahf
pop
insl
dec
cmpsb
xor
lcall
sbbb
add
movsb
mov
rol
insl
outsl
inc
sbb
pop
out
sbb
insb
inc
push
pop
or
scas
orb
std
out
or
mov
fwait
and
int3
push
jns
gs
inc
xchg
arpl
xor
xchg
adc
pop
popf
lcall
jb
sbb
pop
jbe
xchg
pop
xchg
lcall
js
push
cli
adc
cmpb
inc
adc
shlb
jae
lock
shlb
cltd
aam
in
cmp
jecxz
cmp
outsb
stos
outsb
jl
test
ret
cmp
pop
xor
movsl
mov
mov
lcall
sub
sub
sti
adc
aam
clc
rorl
jp
cmp
fidivs
mov
imul
mov
mov
test
add
jbe
cld
jg
inc
sub
sbb
stc
and
in
imul
sub
jp
push
das
add
mov
mov
fs
cmp
and
xchg
mov
les
cmc
sbb
lret
rcrb
rclb
arpl
pop
lods
cmp
push
jmp
cmp
adc
jb
fidivs
fiadds
lret
cmp
mov
push
ljmp
jno
jg
cmp
stc
scas
movsb
jae
adcb
dec
fnstsw
sbb
pop
jle
pushf
mov
scas
mov
sub
inc
clc
cs
push
mov
mov
fisubrl
mov
out
pop
cld
jg
ret
insb
or
or
dec
adc
push
int
mov
mov
cli
dec
mov
adc
stos
add
push
mov
pop
push
rep
ds
sbb
or
cmp
in
cld
jnp
movl
sub
das
and
jge
pop
testb
pop
dec
scas
sti
mov
out
mov
or
xchg
add
add
pushf
fistl
mov
xlat
pop
movsb
mov
fisttpll
sbb
or
push
gs
or
pop
pop
bound
orb
not
mov
test
pop
cmp
repnz
insl
insb
rol
pop
push
aas
pusha
sahf
add
shlb
inc
aaa
pop
fwait
stc
fistl
daa
mov
dec
jmp
iret
push
jbe
jb
enter
or
fsubrs
adc
adc
sbb
xchg
subb
xor
mov
fiaddl
add
mov
fwait
jbe
cmp
lods
xor
xor
iret
or
fstps
sub
int
in
push
inc
xlat
jo
add
xlat
or
pop
cmp
popa
and
movsl
push
fs
movsb
mov
insb
xor
into
orb
mov
aad
lock
fxch
jo
mov
shlb
cmp
adc
cmc
xor
mov
stos
int
bnd
out
in
push
insl
pushf
lods
imul
fstps
int
rcr
and
outsb
cmp
push
inc
mov
jno
icebp
mov
jge
sub
mov
loop
sbb
inc
sahf
sub
push
push
sbb
mov
shlb
xlat
or
and
pop
mov
sbb
call
jne
lret
das
cmpsb
das
in
stos
and
aad
mov
adc
aad
mov
aad
stc
in
sti
filds
inc
lods
test
pushf
and
inc
adc
dec
dec
out
inc
hlt
mov
out
xchg
xor
in
std
vmovhps
push
dec
and
fdivrs
mov
rcl
std
pop
dec
mov
cmp
inc
loop
inc
sbb
dec
push
xchg
ret
rcrl
dec
adc
sahf
cs
xchg
jge
mov
leave
jl
fistpll
ficompl
cmc
add
cmp
or
xor
xor
push
adc
lods
inc
xchg
outsl
jns
mov
dec
mov
aas
mov
push
cwtl
mov
jbe
pushf
aad
sarl
les
lods
cmp
test
add
roll
pop
push
pop
sub
stos
icebp
mov
xor
jmp
out
inc
mov
dec
mov
out
or
lahf
call
lcall
xchg
push
mov
pop
and
pop
test
ja
xor
test
andl
xchg
inc
jo
scas
shr
int
pop
jnp
or
cmp
movsb
and
push
ret
mov
adc
stos
andb
push
push
das
int
sbb
jmp
outsb
or
mov
sbb
es
pop
out
mov
ljmp
lret
xor
xlat
mov
test
lods
and
or
addr16
sbb
sbb
jecxz
dec
add
jecxz
cmp
mov
xor
into
fcmovu
subl
es
les
cmp
fs
adc
icebp
int3
jno
xor
testl
jg
pop
popa
dec
flds
test
in
lods
mov
mov
cltd
shll
inc
fcoms
cli
cmp
inc
cmp
jne
mov
fwait
push
mov
popf
jp
test
push
in
cltd
or
mov
jge
daa
stos
roll
int3
push
add
imul
xor
fucomip
imul
sub
push
cmp
gs
into
pop
pop
or
and
mov
mov
xchg
dec
pop
popf
test
cmp
sub
sbb
movsb
lds
insb
scas
xlat
mov
jne
mov
adc
mov
in
in
mov
in
call
stos
mov
aad
add
in
popa
arpl
pop
dec
push
outsl
subl
outsl
or
cmpb
adc
not
push
fwait
cmpsl
dec
idivb
hlt
enter
adc
xor
cld
shlb
dec
xor
sbb
mov
arpl
fimuls
inc
push
rcrb
popf
call
jg
jp
lret
fwait
vdivps
sahf
or
mov
dec
mov
jl
sub
xchg
cs
fimuls
leave
lds
ljmp
xor
jl
xchg
fs
loopne
fsub
mov
cmpb
push
dec
push
sbb
mov
cs
inc
pusha
jb
fwait
inc
ja
mov
ljmp
outsb
adc
pop
addr16
or
mov
push
mov
xor
sub
cwtl
sub
sub
stc
mov
add
inc
pop
test
mov
ret
pusha
and
jl
sub
out
jbe
mov
cmpsb
ds
adc
jbe
pop
cs
fidivl
and
cli
cmp
sahf
gs
lods
loope
scas
ficomps
xor
cmpsl
stos
es
push
out
adc
test
jbe
or
inc
je
fstpt
sub
pop
int3
adc
and
sub
lods
adc
xchg
outsl
mov
pop
inc
outsl
add
ljmp
ss
sub
inc
cli
cld
cmc
mov
clc
lret
xchg
sub
or
adc
jae
int
insb
mov
adc
add
mov
xchg
sbb
inc
shrb
pop
ljmp
inc
rcrl
add
lock
sbb
mov
lcall
dec
xlat
and
mov
mov
mov
mov
xor
mov
fimuls
test
imul
inc
out
lret
adc
hlt
pop
jns
mov
xchg
inc
pop
mov
lock
rcr
sbb
inc
jnp
bound
in
ret
or
inc
outsb
fsts
and
xor
xor
js
aas
sahf
push
pop
and
xor
lret
fbld
es
cltd
in
add
out
adc
or
add
mov
add
dec
add
cwtl
subl
cmp
inc
xor
dec
lods
ret
dec
test
daa
push
insl
rcrl
mov
add
icebp
sub
ficoml
sub
pushf
add
adc
jbe
mov
lods
inc
xlat
cmp
add
bound
cmp
xlat
ret
pop
sbb
add
pop
mov
clc
fnstcw
adc
sub
test
mov
das
mov
push
outsb
and
cmp
xor
call
mov
push
jo
inc
retw
stos
mov
popa
imul
fldenv
mov
das
or
lret
xchg
ret
popa
sbb
sub
jae
fmuls
sub
cld
icebp
sbb
mov
sub
xchg
movsl
jns
dec
dec
in
inc
nop
pop
inc
insb
fisttpl
pop
sub
std
stos
das
sub
pusha
fstpt
mov
in
or
jl
jl
fstpt
scas
add
xor
push
mov
pushf
pop
lcall
dec
mov
push
repz
out
rolb
test
inc
imul
out
pusha
imul
sbb
gs
nop
jge
mov
orb
es
rcl
ja
in
test
cwtl
rorb
mov
out
xor
or
inc
jl
jmp
cmp
or
mov
cld
scas
aad
mov
ljmp
arpl
xchg
mov
aaa
mov
push
and
lods
test
sbbb
mov
adc
mov
sub
or
es
pop
cmovge
sub
mov
push
sarb
jle
hlt
mov
or
sub
loopne
movsb
add
cmp
pop
clc
jns
xchg
mov
pop
repnz
jp
outsb
lret
mov
xchg
ds
mov
mov
loopne
jge
mov
daa
out
rorl
adc
fidivrl
mov
ficomps
push
ss
movsl
icebp
sub
cltd
sbbl
adc
sbb
xchg
mov
adc
roll
xchg
sbb
mov
pop
jno
repnz
addr16
add
out
call
test
dec
dec
inc
hlt
inc
lret
ret
data16
popa
xor
mov
arpl
add
jno
jbe
push
mov
iret
adc
mov
lret
mov
push
xor
stos
ja
mov
inc
push
in
ss
adc
lret
xchg
je
fnsave
popa
cmp
sbb
mov
mov
sub
xchg
jp
or
mov
dec
jns
mov
push
mov
jl
xchg
mov
jb
and
cmpb
push
or
pushf
sub
testb
add
test
clc
adc
add
hlt
mov
xchg
repz
push
repnz
call
add
lea
inc
out
fmuls
lahf
xchg
dec
lahf
cmpsl
es
sti
inc
into
xor
andl
leave
xlat
mov
lret
pop
dec
adc
bound
add
sub
stos
mov
hlt
inc
in
outsl
in
push
outsb
push
mov
xor
adc
fsubrs
and
fbld
cmp
push
ret
lret
fisubs
inc
xor
aaa
sbb
or
stos
testb
mov
and
push
jl
sbb
mov
adc
fisttpll
push
pop
lahf
xor
jmp
inc
mov
adc
lods
jne
add
call
inc
mov
fisttpl
lock
pop
lcall
xchg
dec
pop
cmp
lods
and
dec
in
popf
int
push
jp
push
add
mov
mov
xlat
and
jo
cmp
mov
jo
pop
xchg
scas
sbb
xchg
inc
andb
rorb
stc
cmp
out
popa
jg
ss
arpl
orps
or
test
pop
das
push
pop
pop
out
push
sub
lcall
cmp
div
and
sbb
cmpsb
lock
loope
popa
cld
push
xchg
out
movsl
inc
sarl
xor
test
outsb
ja
aaa
daa
adc
and
sbbl
rcrb
cmp
sahf
lock
rorl
xchg
in
inc
dec
ljmp
popa
cmp
jp
or
dec
jne
mov
out
pop
mov
lods
mov
arpl
mov
jo
jg
imul
or
mov
mov
xor
sahf
lods
aaa
pop
sbb
fstpl
daa
popa
lea
into
ficoms
in
mov
cmp
int3
scas
jb
add
int3
ja
pop
mov
xchg
pop
lcall
movsl
icebp
pop
imul
repnz
mov
jg
push
mov
jmp
nop
aam
add
sbb
cmc
jb
pop
push
popf
push
dec
mov
sti
xchg
adc
icebp
mov
imul
seto
sbb
fwait
jne
ja
mov
jo
sub
sbb
sbb
lock
mov
pop
or
out
in
daa
stc
test
jmp
pop
into
hlt
sub
push
lods
lods
fcoml
loopne
cwtl
cmpsl
test
mov
jns
loope
fistps
pop
inc
test
adc
loope
ljmp
lea
jecxz
imul
or
sti
jbe
loop
addb
leave
xchg
addb
pop
cli
xor
sbb
ds
or
mov
push
jae
clc
sbb
xchg
fcmovne
dec
das
cs
sbbb
xor
sub
pop
clc
and
movsl
sub
test
mov
xor
fcmovnu
loope
mov
or
aam
bound
js
mov
jge
call
xchg
arpl
fwait
lcall
pop
in
arpl
adc
xchg
pop
repnz
dec
lods
shrb
enter
mov
mov
mov
arpl
js
jg
stc
and
pusha
dec
push
inc
add
je
inc
hlt
in
fidivl
imul
dec
fsubl
jo
out
fwait
test
push
leave
dec
mov
or
frstor
in
addl
cmpsb
sbb
or
incb
jmp
fistl
sub
push
rorb
out
sub
cmp
or
push
add
jae
test
sub
cmp
mov
sarl
fidivrs
pop
fdiv
jge
and
sub
call
scas
insb
push
sti
dec
jb
sub
adc
add
mov
push
mov
lret
mov
lea
stos
push
xchg
mov
fidivl
rol
ret
dec
cli
clc
sahf
xor
sbb
data16
mov
psubd
sbb
adc
or
js
push
dec
pop
mov
fsubl
fsubs
popf
xchg
lock
push
mov
mov
xor
jl
push
fisubs
lods
add
inc
das
cmc
lods
test
and
sub
jg
xchg
popf
repz
jp
sti
mov
iret
incb
sahf
sti
inc
fstl
fsubrl
cmpsl
ljmp
mov
fsubr
mov
xchg
mov
lock
test
out
dec
loop
out
lock
xor
out
xlat
test
push
cmp
popf
push
in
rorb
cmpsl
mov
push
sub
lcall
and
orl
mov
das
fidivrs
sub
cli
mov
addr16
test
dec
in
in
mov
or
dec
iret
jae
add
sarb
int
cmp
jge
mov
ja
inc
imul
jo
aas
je
orl
rcrb
xor
lock
data16
inc
fisubl
popa
into
ret
sub
dec
add
sbbb
loop
xor
cmpsb
nop
outsl
adc
push
push
adc
sub
andb
dec
pop
sub
sub
ret
in
cmp
mov
add
cmpsl
jns
ss
jg
popl
shlb
stos
xor
in
add
std
push
mov
xor
add
cld
mov
pop
imul
rorl
repnz
mov
cwtl
dec
cmp
out
imul
mov
loopne
mov
cmpsb
mov
sub
inc
mov
cs
lea
xchg
mov
dec
icebp
cmp
xchg
push
lds
mov
pop
xor
rol
fnstsw
xchg
call
cmp
xor
adc
lods
lret
in
jae
mov
and
rorb
stc
dec
and
mov
or
xor
loop
push
mov
call
enter
mov
aam
cmpsb
cmc
les
loope
in
push
lods
shrb
sti
xor
sub
xchg
pop
mov
inc
push
push
jns
sbb
int
stos
ljmp
push
sbb
pop
cmpsl
push
push
inc
cwtl
es
aad
push
test
js
insb
cmp
sbb
mov
fld
mov
jnp
fsubrs
and
notl
push
popf
xlat
mov
repz
pop
lret
cld
adc
out
or
push
call
repnz
ljmp
add
sbb
push
insl
and
fwait
cmp
mov
xor
add
or
out
test
lcall
inc
mov
imul
fcomps
sub
adc
xlat
shrl
ss
stc
or
pop
adc
jb
js
xchg
jge
adc
cmpsl
fwait
xchg
or
pop
cmp
gs
in
stos
je
mov
test
push
sbb
int
push
ljmp
pop
ret
test
jne
jp
sbb
push
xbegin
inc
dec
jo
adc
push
mov
mov
or
mov
sub
push
stc
and
adc
dec
and
daa
loopne
mov
stos
ficoml
push
jbe
std
push
fdivrl
xchg
xchg
and
cmp
cld
stos
js
mulb
fimull
aam
inc
inc
sbb
sbb
mov
icebp
pop
mov
jne
adc
rolb
push
push
xchg
cmp
ds
or
jne
xor
mov
xor
div
adc
daa
repz
fwait
dec
fisttpl
out
pop
movsb
call
mov
mov
mov
push
daa
mov
add
mov
sbb
pop
cmp
push
push
dec
xor
jp
push
push
mov
or
inc
shlb
movsb
adc
jl
xor
iret
ss
addr16
or
pop
and
mov
push
sbb
mov
je
jecxz
lea
cmpsl
out
iret
jb
mov
xchg
push
shll
jae
mov
rcll
mov
repnz
xchg
add
arpl
daa
and
mov
iret
call
jne
xor
xor
test
hlt
adc
push
dec
push
iret
fcmovnbe
subl
sub
mov
or
cmp
in
lods
dec
pushf
sub
dec
xor
shrl
stc
mov
and
jno
shlb
ret
fldenv
aad
daa
xor
lds
stos
inc
stos
xchg
repnz
mov
add
xor
mov
stos
jb
ret
inc
jle
jno
xchg
pop
loope
stc
insl
out
cmp
cmp
jmp
xor
push
mov
adc
mov
pop
movlps
stc
mov
xor
out
cmp
jle
inc
mov
arpl
sbbb
jmp
mov
ret
stos
mov
iret
fldt
mov
shrb
pop
mov
xchg
insl
mov
pop
cmp
mov
test
std
xchg
fldlg2
sbbb
sbb
xor
mov
ret
dec
adc
push
sti
push
lcall
scas
inc
in
fidivrl
jecxz
pop
xchg
pop
popa
in
inc
inc
fidivs
arpl
mov
inc
jp
movsl
loopne
fwait
leave
mov
inc
jae
fs
mov
pop
cmp
pop
mov
mov
mov
in
lret
pop
jg
pop
fists
test
pop
xor
sub
mov
xchg
ja
xor
in
movsl
xor
fucompp
inc
imul
lcall
sbb
loope
mov
inc
movsb
lds
push
fwait
movsl
shrb
loopne
loop
icebp
mov
mov
dec
sbbl
mov
cmpsb
loope
sub
jo
int
mov
push
sub
mov
dec
sub
jns
inc
xor
pop
orb
out
mov
mov
test
xor
iret
mov
cmp
adc
mov
arpl
jecxz
or
and
nop
cmp
pop
pushf
cli
js
jg
lds
xor
xchg
es
mov
jl
adc
mov
pop
js
nop
and
xchg
and
sahf
inc
jno
and
and
shlb
rcll
mov
or
push
pusha
sti
pop
xor
push
mov
xchg
into
test
hlt
pop
lock
aaa
ja
or
pop
and
add
clc
inc
sbb
lock
outsl
lds
or
movsb
mov
pop
sub
push
or
mov
dec
loop
push
mov
add
push
shrb
mov
pop
cwtl
ss
js
xchg
add
pop
imul
xchg
cmpsl
and
dec
sbb
gs
cmpsb
xchg
or
push
jp
push
lods
je
xchg
xchg
cltd
leave
cmp
sbb
or
push
cmpsl
xor
or
dec
fbstp
and
inc
mov
in
mov
mov
fnstcw
push
inc
mov
mov
jl
inc
adc
mov
xor
lock
adc
push
sub
mov
aad
xchg
shlb
dec
mov
push
divb
leave
int
popa
add
gs
sbb
loop
xor
xor
sbb
jmp
mov
xchg
divl
cmpsb
lea
aaa
push
shrl
rol
decb
dec
sbb
fildll
mov
adc
xchg
mov
in
mov
xor
cmp
das
mov
out
xor
test
lock
aad
pop
push
fwait
cmc
test
adc
jl
pop
sub
add
dec
xchg
lea
in
je
cmp
pop
add
mov
mov
add
jmp
jo
adc
jmp
ret
add
in
pop
mov
shlb
add
xchg
lret
xchg
sbb
adc
adc
xor
cmp
call
adc
push
ficompl
add
nop
out
insb
int
and
adc
jne
push
mov
jbe
mov
lcall
dec
shl
sub
popa
sahf
nop
data16
and
jmp
movsl
cmp
daa
pop
adc
lahf
mov
dec
aas
lock
aas
pusha
test
dec
pushf
inc
push
cmp
adc
nop
push
rorb
xor
push
jo
psubusw
push
clc
data16
imul
das
sarb
nop
or
jg
subb
xchg
jb
lods
outsl
add
xor
cmp
fcmovb
pop
or
dec
or
sahf
pop
jp
movsb
mov
orl
jl
adc
mov
pmulhuw
xchg
notl
ds
xlat
push
or
sbb
cs
pop
test
mov
mov
dec
mov
rcl
pop
mov
in
lds
outsw
mov
xlat
clc
repnz
mov
jae
pop
push
xchg
scas
mov
jg
movsl
mov
pushf
std
cltd
lahf
pushf
bound
jns
inc
std
lcall
xchg
sbb
dec
cmp
sub
repz
and
repz
cmp
in
loopne
sbb
lods
mov
sub
xlat
sbb
cmp
dec
cmpsb
lock
mov
insb
fwait
xchg
lods
cmp
in
jg
out
mov
mov
sub
push
pusha
xchg
dec
push
lods
dec
cmp
aad
mov
subl
aam
adc
pop
adc
mov
gs
xchg
jae
pop
jae
mov
test
xchg
aad
in
inc
cmpsb
inc
movsb
cmp
pop
test
pop
popf
mov
xor
fs
outsb
mov
ret
frstor
loope
adc
inc
test
xchg
mov
mov
fdivp
in
test
mov
push
pop
adc
sub
movsb
push
clc
loope
outsl
pop
lahf
xchg
inc
mov
into
inc
lea
push
addr16
enter
das
cmp
push
repnz
cmp
mov
mov
sbb
lods
push
mov
dec
ss
in
push
mov
sbb
jb
sbb
lods
jl
clc
push
ljmp
jno
into
cmp
adc
arpl
mov
and
adc
aad
push
gs
cmp
stc
push
jge
repz
push
shl
pop
mov
in
int
jbe
out
xchg
jmp
insl
int3
or
loop
lahf
and
nop
insb
imul
xchg
call
subl
or
and
jnp
jo
test
dec
lock
rorl
and
pop
push
insl
jmp
lret
xchg
fisubrs
adc
movsl
jge
lods
lods
lock
dec
test
jge
fnsave
sub
jle
inc
test
fwait
ret
lahf
and
mov
ret
and
test
jns
pushf
loopne
dec
loopne
add
jo
scas
jbe
push
lret
jae
or
dec
jbe
xlat
out
sub
sub
xchg
fs
repz
xor
add
jne
push
imul
mov
stos
inc
sbb
adc
inc
jbe
shlb
sbb
pushf
or
mov
cmpsl
sub
jecxz
lea
test
mov
cmp
mov
scas
arpl
scas
out
sub
hlt
cwtl
xchg
int3
dec
je
aas
mov
jp
fistl
adc
imul
cld
push
or
int
push
xor
xor
xchg
adcb
movsb
push
cmp
add
dec
mov
xchg
mov
or
jle
xchg
and
addl
aaa
pop
lret
inc
je
loope
daa
cmp
xchg
add
lret
lret
pop
adc
pop
imul
popf
sahf
imul
insb
mov
popf
jp
cmpsb
jbe
adc
ficompl
and
or
push
cmp
sar
fxam
cmpsl
out
push
sti
sub
sbb
mov
outsl
sbbb
mov
push
inc
fadd
dec
inc
inc
loopne
fcoms
aas
push
pop
rcrb
jle
push
push
xor
push
cwtl
adc
xor
jmp
and
imul
scas
adc
into
popa
cltd
addr16
mov
mov
nop
xchg
aas
mov
insb
jns
or
test
je
push
adc
inc
in
repz
movsb
dec
cmc
adc
shr
mov
mov
pop
in
or
inc
dec
imul
iret
or
push
mov
loope
imul
sbb
sub
push
lea
push
inc
repz
cmp
fists
int
jb
repz
mov
nop
pop
sbb
out
mov
int3
jg
mov
loope
ret
hlt
in
lods
mov
shl
imul
or
mov
cmc
sub
js
jecxz
mov
andb
add
cmc
imul
lock
inc
mov
lahf
sub
test
push
outsl
xor
arpl
or
xchg
stc
daa
insl
inc
lods
shl
fimuls
dec
lods
ss
xor
push
push
scas
dec
cmp
xchg
xor
sbb
mov
jecxz
mov
scas
movsb
jo
fsubrp
push
outsl
mov
inc
faddl
mov
push
cmpsb
jbe
xchg
icebp
std
nop
icebp
cmp
cmp
lds
adc
movsl
roll
aad
cmp
and
aam
iret
dec
pop
insl
mov
outsl
push
xor
inc
daa
int3
pop
push
fmuls
popa
or
xor
or
mov
and
mov
int
sar
mov
xor
inc
aad
xor
loope
daa
add
mov
push
cltd
xor
and
jo
cld
push
dec
in
test
jno
insb
mov
lret
dec
xor
mov
jl
lahf
arpl
pop
mov
test
adc
lods
cmp
mov
pop
jmp
test
and
aam
mov
imul
adc
aam
out
loop
xchg
fwait
notl
sub
mov
nop
mov
jle
inc
pop
std
or
imul
imull
into
and
aad
lods
ljmp
in
icebp
sbb
sbb
mov
add
inc
mov
lods
in
stos
add
jne
mov
push
imull
or
scas
test
incb
fildll
in
fidivrl
inc
pop
int
ljmp
sub
sub
sahf
or
lods
stos
in
andl
dec
fs
adc
inc
into
push
insb
xor
loop
lahf
outsl
roll
mov
out
lods
or
add
shrl
lahf
in
sbb
xorb
mov
les
mov
adc
aam
ret
outsb
gs
push
jo
mov
cltd
mov
les
bound
pushl
xor
andl
or
ret
enter
mov
daa
leave
adc
sbb
push
or
mov
push
sbb
scas
es
test
scas
or
in
push
fcmovu
push
aam
stc
orb
fldcw
adc
lcall
shrl
imul
cmp
dec
sbb
sub
push
pushf
lret
dec
stos
pop
jmp
mov
dec
bound
adc
or
cmp
in
add
rorb
dec
outsb
mov
lret
out
insb
sti
jp
dec
in
ret
lcall
fbld
push
mov
shlb
sub
mov
repz
jns
xor
and
cmp
call
and
fsubrl
or
insl
lret
mov
iret
pop
jne
sub
mov
xor
and
fnstenv
orl
jno
mov
cmpsb
in
jge
scas
pop
leave
loope
aam
jbe
xchg
pop
push
xchg
ljmp
icebp
pop
imul
dec
lods
ljmp
cmc
mov
dec
idiv
pop
mov
cmpsb
aam
inc
inc
inc
js
jbe
dec
pop
dec
gs
imul
inc
aam
movsb
xchg
mov
xlat
jle
cmpsb
scas
clc
out
push
add
test
popf
mov
bound
clc
cmp
sbb
sub
push
and
dec
push
pop
cld
jmp
in
insb
js
ja
and
push
bound
js
push
mov
add
inc
hlt
lret
or
and
enter
or
out
mov
push
imul
jae
dec
sbb
lods
std
js
adc
fisubs
jp
jbe
fs
xlat
and
xor
jns
mov
jns
popa
xchg
and
out
pop
mov
pop
dec
in
mov
fdivr
test
mov
scas
sar
repz
insb
sti
cmp
dec
dec
ret
idiv
dec
pop
cmp
movzwl
cmp
cmp
xchg
into
imul
ret
ss
leave
fldenv
inc
mov
dec
lcall
and
ljmp
xor
out
xor
dec
cltd
pop
mov
dec
xchg
add
mov
loop
test
fadds
ds
pop
cmp
sub
sbb
gs
int
push
lret
or
sub
mov
push
fsts
int
rorb
cmc
mov
cmp
sbbl
nopl
sbb
lock
enter
cmp
shlb
loop
orb
decb
ds
mov
or
fcmovb
jbe
dec
insb
outsl
popa
or
leave
pop
or
adc
jp
lods
out
fwait
xor
int
sub
adc
or
pop
sahf
jno
iret
cmp
jle
jbe
dec
push
js
and
mov
dec
push
lods
stos
push
fdivrl
mov
daa
popf
fists
mov
aas
imul
outsb
pop
out
cld
jge
mov
mov
add
jo
dec
std
cltd
and
mov
ret
std
dec
dec
mov
cmp
in
aas
ret
mov
pusha
push
cmp
add
xor
xor
das
pop
orb
call
dec
lods
push
mov
dec
mov
jle
cmp
inc
add
aad
adc
aas
mov
dec
fcomip
ljmp
push
dec
sbb
cmp
inc
inc
popf
push
ret
xchg
sbb
sti
cld
xor
lcall
jl
adc
sarl
pop
pop
adc
popa
cmc
je
mov
popa
add
or
push
dec
dec
into
mul
xchg
sub
inc
mov
cld
cmp
cmp
insb
inc
adc
mov
and
ljmp
lods
mov
rolb
leave
push
pop
leave
inc
mov
mov
les
orl
mov
mov
dec
into
dec
mov
insb
arpl
out
fildl
pop
fucom
and
in
push
and
xchg
mov
ret
lds
insl
sbb
sahf
sub
mov
cmpsl
cmp
pop
arpl
inc
faddl
mov
jecxz
sub
sbbl
sbb
jno
mov
jae
jnp
push
push
repnz
cvttps2pi
sbb
in
sbb
cwtl
sar
xchg
and
or
pushf
push
mov
shrl
fcomps
out
iret
stos
xchg
lret
dec
jp
sahf
and
mov
inc
mov
movsl
fidivs
xor
out
movsl
adc
xlat
or
test
adc
push
jne
cmp
mov
mov
out
jne
mov
adcb
fcomp
les
js
pop
ret
push
xchg
mov
popf
mov
pop
lods
inc
std
psadbw
cmp
sbb
push
mov
stc
loope
dec
dec
push
add
jnp
mov
or
outsl
out
jg
mov
movsb
negb
pop
sub
mov
push
ficoms
jge
mov
mov
mov
adc
push
adcb
addl
or
in
andl
repnz
fidivrl
pop
sahf
stc
lcall
jge
fcmovnb
pop
aad
test
loop
das
adc
ret
stos
jns
lds
ja
aam
and
aad
adc
xor
mov
mov
repnz
nop
movsl
cmp
push
sub
xchg
jne
xchg
mov
testb
sbb
aaa
movsl
xchg
pushf
xchg
pop
cld
ja
mov
mov
shll
mov
mov
cmp
inc
xchg
pop
pop
cmpsb
inc
popa
or
push
cmp
ds
xlat
jno
adc
mov
fstpt
ja
xchg
lea
sub
movsb
inc
and
pusha
add
mov
push
leave
lcall
ss
enter
jmp
or
inc
push
mov
enter
and
jmp
jb
pop
out
and
sbb
popf
adc
scas
mov
mov
push
dec
inc
inc
sar
or
push
popf
pop
jo
cwtl
fldenv
imul
pop
cmp
cmp
or
fcompl
xor
mov
cmpb
and
or
add
jl
lcall
adc
mov
cmp
sbb
add
xlat
xchg
stc
push
stos
xor
push
test
jne
in
js
stos
iret
aam
push
add
or
jne
cs
out
mov
adc
addl
mov
stc
cmp
mov
mov
jmp
jle
mov
lcall
out
inc
jnp
pop
xchg
test
nop
mov
imul
mov
push
mov
test
sbb
mov
outsb
adc
cld
ret
add
inc
xor
xchg
and
push
jnp
rcrl
fcompl
lds
push
pop
ret
pop
out
shrl
je
xchg
dec
push
mov
in
dec
mov
divl
movsl
and
dec
data16
xor
or
sub
pop
xor
cmc
jecxz
and
dec
add
cmpsb
xor
dec
ficoms
xor
cmp
out
ss
pop
int
pop
mov
loope
jae,pt
dec
cld
jecxz
test
sbb
imul
in
insb
or
sbb
ds
jo
pop
mov
xchg
pusha
mov
mov
js
lret
lds
clc
push
xchg
movsl
push
push
jl
or
push
fsubrs
mulps
push
imul
test
js
mov
sub
mov
sbb
dec
cmp
in
repnz
in
cld
out
lret
mov
in
ljmp
jg
mov
iret
pushf
xor
leave
loop
xchg
mov
leave
pop
sbb
scas
mov
mov
adc
xlat
scas
je
add
lock
popa
cmp
push
andl
and
dec
sbb
hlt
mov
out
and
lret
lea
or
xchg
pop
sbb
aam
adc
mov
fldt
enter
clc
xchg
dec
loop
or
pusha
bound
idivb
in
ds
addb
push
leave
sbb
in
das
int3
ss
mov
mov
jmp
or
push
xchg
mov
sub
test
cltd
mov
xchg
add
pop
popf
jne
sub
xor
add
cmpsl
ds
leave
inc
call
mov
jmp
in
lret
cmpsb
aaa
dec
push
pop
aas
adc
sub
inc
sahf
mov
enter
out
xchg
sub
dec
dec
pop
jno
fcoms
and
cld
or
call
xchg
sub
mov
test
xor
aad
mov
movsb
idivl
sahf
popl
mov
mov
fwait
je
popf
add
pop
lret
fstl
adc
push
icebp
pop
icebp
sub
cmpsl
pop
jl
arpl
cld
decb
adc
into
loop
fwait
call
xlat
and
pop
lock
add
dec
dec
cltd
pop
mov
xchg
mov
in
hlt
mov
push
movsb
adc
xor
test
into
and
cli
xor
pop
movsb
push
xor
inc
inc
loop
in
ficompl
gs
loopne
sti
mov
mov
test
std
mull
leave
sub
and
aad
pop
pop
int
mov
pop
scas
pop
orl
out
or
enter
jb
dec
mov
mov
dec
out
std
or
loopne
enter
mov
add
pop
dec
loop
hlt
mov
add
aas
xchg
popf
clc
push
fdivrl
xchg
jo
xor
xchg
push
shrb
ja
xchg
movsl
arpl
xchg
outsl
repz
jp
xchg
mov
rol
cmp
pop
negb
push
push
push
enter
andl
xchg
mov
inc
fisubl
push
sub
scas
cmp
mov
cmp
outsl
and
addb
sub
mov
push
out
ret
xchg
dec
shll
leave
xlat
addb
jle
jb
xor
cmp
push
jne
sbb
enter
dec
dec
aas
lret
and
pushf
jmp
cmp
pushf
cmp
jmp
jmp
jb
popa
mov
mov
push
stos
inc
push
outsb
jl
popf
repz
hlt
push
pop
cmp
sbb
movsb
lret
pusha
imul
fwait
jl
daa
jb
add
xchg
andb
shlb
add
mulb
pop
xor
into
xchg
andb
movsl
out
sbb
pop
cmp
sbb
cli
inc
pop
aam
cmp
dec
push
rcrb
out
jno
shrl
fcmovbe
rolb
and
inc
setge
xchg
lret
fwait
or
out
inc
fsubrl
mov
repz
addr16
or
loopne
add
aad
or
push
sub
cmpsb
xorl
sti
pop
or
adc
popf
sbb
sub
in
sbb
xchg
adc
adc
mov
and
dec
jb
dec
mov
mov
ja
lret
data16
hlt
sahf
push
mov
jl
gs
movsl
jmp
mov
xor
mov
jge
adc
mov
push
jmp
lret
mov
add
cmp
mov
les
ljmp
mov
test
push
fs
sub
mov
fisubrl
sbb
pop
pop
cmp
loopne
inc
push
mov
and
cmp
mov
sbbl
stos
mov
jge
push
push
mov
inc
aaa
jno
jp
pushf
test
das
jg
sbb
outsb
add
imul
out
inc
popf
subl
fs
ret
mov
or
leave
push
mov
adc
cltd
cmpb
jae
xchg
cmpsb
cmp
std
jge
dec
stc
xchg
arpl
push
les
sbb
cltd
adc
fs
xor
rcrl
pusha
push
cwtl
jg
mov
sub
push
fmuls
outsb
jge
sahf
bound
stc
inc
mov
es
es
fidivrs
rorb
clc
jnp
jae
lret
sti
inc
jl
push
sbb
push
mov
mov
push
bound
sbb
stc
test
data16
or
popl
mov
fcmovnu
inc
stos
mov
jmp
xor
push
outsb
stc
ret
xchg
test
push
push
or
mov
notrack
jmp
push
inc
add
cmp
jge
sbb
adc
jb
xor
cli
lea
loop
es
jge
in
fmul
stc
sarb
cltd
xchg
stc
cmp
add
sbb
dec
push
jns
je
adc
sub
sbbl
inc
in
rol
fcomip
mov
jge
out
push
pop
call
adc
ret
xchg
jmp
insl
inc
arpl
adc
mov
je
jns
push
push
fwait
rcrb
js
lcall
sarl
pop
cwtl
lea
adc
jg
aas
shlb
or
push
mov
sbb
pop
jg
push
mov
mov
lret
push
outsb
bound
pop
enter
notl
test
push
jb
cmp
dec
cld
sub
sahf
sahf
scas
mov
xor
jle
and
es
dec
repz
imul
pusha
pop
ds
arpl
es
sahf
pop
jo
loopne
inc
rorl
aas
pop
jne
stc
cmpb
pop
sbbb
inc
sbb
push
leave
flds
call
mov
iret
inc
xlat
ljmp
dec
lds
add
pop
pop
dec
stos
adc
test
js
xchg
leave
mov
or
ja
shrb
andl
call
cmp
pop
out
negb
loop
fsubrl
add
jns
jl
mov
outsb
xor
cmpsb
pop
mov
inc
jne
jecxz
xchg
sbb
mov
jmp
shll
lds
stos
push
push
lock
push
call
cmpsl
pop
fbld
lods
movsb
xchg
out
jb
or
add
mov
push
adc
fcomps
sbb
adc
jl
loope
mov
imul
xchg
pop
outsb
movsl
shrl
fidivs
lds
adc
cld
test
popf
push
pop
xchg
mov
cmp
fdiv
clc
test
stos
dec
in
dec
jg
push
add
xor
cmpsb
jl
mov
test
inc
repz
insb
nop
jns
mov
shll
sti
lock
in
adc
sub
cmc
cmp
and
add
push
lds
sbb
out
int3
dec
xor
push
add
jmp
xlat
je
dec
pop
lea
mov
daa
sub
pop
mov
push
es
jo
dec
xor
jns
jp
mov
gs
orl
cs
push
jecxz
and
scas
arpl
mov
jae
adc
enter
mov
ret
lds
push
add
sarl
repnz
or
jns
pushf
adc
mov
mov
sub
pop
xchg
aas
enter
lock
dec
jmp
dec
movsl
xor
push
jl
or
not
mov
pop
pop
lock
mov
push
xlat
sti
xor
xor
inc
fidivrl
and
stc
popf
inc
repz
push
push
in
ljmp
test
dec
subb
adc
xor
add
jge
jmp
stos
stc
outsb
mov
pop
sub
fmuls
dec
adc
jns
pop
cmpsb
push
pushf
and
jmp
aaa
sbb
imul
jno
push
dec
or
popa
loopne
jb
nop
mov
xor
push
mulb
pushf
scas
xchg
pusha
jbe
xor
jae
xchg
fdivl
pop
adc
xchg
lds
test
rcrl
push
adc
add
mov
push
pop
repz
dec
jnp
xchg
aas
mov
xchg
and
push
lods
push
ss
nop
xlat
jmp
inc
ljmp
jbe
lods
push
loope
pop
xlat
add
aaa
sbb
mov
aas
dec
lcall
addr16
push
rcl
loop
pop
in
sbb
imul
loopne
adcl
push
or
mov
stos
fisubl
sbb
sub
push
mov
inc
popf
lock
xchg
mov
ret
out
push
popl
movsl
inc
stos
xchg
adc
test
and
in
or
cmp
leave
loope
pusha
cmpl
sti
fs
repnz
sbb
mov
mov
jle
int3
push
mov
or
pushf
xor
sub
cmp
in
stos
xor
jno
ss
cli
xlat
fsubs
cmp
ret
outsb
test
jg
test
sub
sbb
into
or
sbb
shll
frstor
pop
or
shll
testb
push
arpl
jecxz
jb
dec
xchg
shrl
not
test
pop
pop
dec
jecxz
imul
push
das
js
cmp
pop
xchg
jge
sub
out
mov
dec
rclb
push
xor
mov
pop
das
inc
mov
push
cmpsl
fisubs
sub
dec
sarb
repz
out
cld
xchg
ss
pushf
cmp
mov
aas
lahf
daa
jo
cmp
loop
sub
mov
ja
insb
dec
dec
lea
loopne
jl
repz
sti
adc
sub
sub
in
in
mov
add
xor
mov
ss
or
movsb
adc
aaa
popf
scas
pusha
sub
lea
cld
pusha
mov
jnp
adc
int
jne
ss
clc
lods
pop
out
js
sub
jbe
int3
cmpsl
cs
filds
xchg
sub
loop
out
jae
dec
imul
les
sub
jns
shrb
addr16
cmpsl
sbb
lock
lahf
sub
sbb
push
dec
sti
xchg
jle
fldenv
mov
lret
cmp
inc
jnp
dec
add
jg
sbbl
or
mov
push
loop
loopne
jne
inc
or
lock
movsb
int
jge
lods
inc
mov
pop
fadd
fdivs
jb
repz
imul
or
lods
dec
repnz
adc
sbb
mov
inc
jmp
into
int
mov
popw
sbb
push
pop
out
aas
out
scas
hlt
insb
xchg
push
jp
xlat
mov
jmp
rcl
add
shl
mov
adcl
jae
push
pushf
hlt
xchg
inc
lock
sahf
or
inc
sbb
pop
addr16
mov
or
fistl
or
lcall
cmp
ret
repz
cmp
mov
test
jnp
xchg
add
mov
jnp
or
adc
loop
mov
pop
outsl
xor
les
ret
pusha
stos
cmc
mov
test
fldt
dec
data16
dec
popa
repz
push
sbb
int3
add
movb
cltd
pop
xchg
out
test
jns
popf
pop
jo
repnz
adc
les
imul
idivb
xor
mov
or
push
cmp
sub
addr16
pop
movsb
cmpsl
shrb
or
cld
mov
outsb
add
push
cmp
sub
pop
movaps
jecxz
in
test
ficoms
adc
and
push
or
mov
icebp
aad
lods
aad
mov
loope
je
add
mov
and
lock
or
fucomip
rorl
push
mov
or
xchg
mov
insb
popf
lock
inc
xor
jecxz
popa
imul
out
jle
xor
test
mov
cld
push
add
mov
push
mov
shl
ds
lret
add
inc
jecxz
jge
data16
pop
mov
lds
sahf
cmp
push
lea
mov
mov
dec
dec
push
mov
inc
ss
sbb
inc
add
sbb
stos
clc
dec
in
sbb
xchg
nop
xchg
pop
and
dec
mov
out
gs
outsl
adc
adc
cmpsb
stos
hlt
fsubr
sbb
loope
xorl
cli
pop
int
cmp
sub
jne
sti
aam
fidivs
jae
inc
fisubs
sub
sub
fidivrs
pop
fs
adcl
sbb
fmull
rcr
mov
and
jmp
push
popa
cmpl
jb
jle
pop
lods
xchg
adc
dec
rcrl
cmpsb
mov
in
lods
jo
stos
addr16
loope
je
into
cmp
lods
pop
aaa
xor
mov
xchg
pop
mov
movsb
xchg
fcoms
repnz
sbb
mov
mov
fdivrs
fldt
sti
bound
mov
pop
test
arpl
scas
inc
mov
fsubs
jle
out
stos
arpl
or
std
ret
jge
daa
add
in
pushf
inc
cmp
cli
in
sti
sbb
adc
jo
push
cmp
jne
lods
nop
sarb
push
ss
in
push
sub
mov
fistps
xchg
push
ja
jmp
cmp
push
repz
jae
push
or
imul
pop
adc
ja
lret
xor
je
pop
mov
lret
lock
out
mov
xor
popf
sahf
push
frstor
xlat
pop
or
push
loop
fcmove
data16
cltd
and
imul
jae
fiadds
xchg
add
jl
adc
xor
and
or
inc
mov
jae
mov
enter
dec
sub
aaa
fdivr
fdiv
xor
sbb
das
scas
mov
push
fidivrs
enter
fwait
loope
xchg
das
loope
sub
sub
mov
or
cmpsl
jge
mov
xchg
test
pop
lods
dec
pop
or
mov
cli
adc
inc
adc
dec
xchg
xor
enter
and
call
pop
in
cmp
std
inc
sti
aas
inc
inc
and
xchg
sbb
mov
jmp
and
scas
jb
inc
dec
fisubl
repz
add
jle
push
xor
incb
pop
decl
sbb
push
movsl
cmpsl
xor
pop
and
jbe
mov
stc
adc
dec
jge
or
sahf
scas
pusha
subb
push
inc
rorl
xchg
push
jo
xor
jae
mov
sbb
pop
push
mov
out
cmp
mov
adc
mov
test
mov
mov
arpl
add
call
ds
push
loop
fs
out
sbb
in
xor
mov
loop
lret
and
fistl
dec
push
push
xchg
pop
out
mov
lock
lahf
mov
das
andb
fildll
xchg
add
sub
stos
xchg
pop
std
add
daa
jnp
dec
mov
in
ds
pop
popf
cltd
nop
fstl
push
andb
test
jbe
out
iret
push
and
lock
push
std
adcb
loop
xor
les
or
lea
dec
stos
cmp
cmpsb
cmp
sbb
inc
fimuls
push
fstl
mov
cmp
inc
loopw
add
xor
hlt
imul
test
xlat
sbb
sahf
sbb
inc
pushf
arpl
insb
inc
push
and
stc
xchg
mov
lea
adc
add
adcl
mov
jg
repnz
xchg
int3
push
out
je
dec
push
xor
cmp
push
cmc
inc
or
cmc
sub
insb
xchg
jle
xchg
cmp
add
adc
push
jle
jbe
sub
int
inc
movsl
mov
out
mov
pusha
popa
add
or
pushf
lea
mov
xchg
and
xchg
mov
lret
jmp
sbb
pop
ss
xor
into
pop
push
xchg
cltd
and
lods
data16
mov
inc
jmp
push
dec
cmpsl
rcll
jns
and
cmp
stos
mov
int
push
das
adc
aad
lods
bnd
int
dec
and
adc
pop
mov
stos
mov
shll
ret
xor
loopne
les
mov
fstps
lea
jp
mov
fcom
rcl
sarb
stos
pop
lock
int3
jae
sar
or
mov
mov
mov
mov
outsl
push
pusha
xchg
je
lds
sub
jp
out
xchg
pop
fmull
testl
fldenv
inc
inc
daa
xchg
repnz
loop
es
out
mov
negl
jmp
insl
das
mov
popa
mov
mov
lret
adc
or
inc
push
pop
push
jge
scas
sahf
stos
jmp
stos
hlt
inc
mov
add
test
aas
pop
mov
fsubr
orb
pop
mov
xorl
movsl
movsb
sbb
mov
rclb
fs
mov
test
cmc
sbb
test
rorb
idivl
movsb
or
js
inc
lods
push
out
xchg
add
stc
div
sbb
sbb
shlb
les
xchg
cmp
std
dec
mov
fbstp
cltd
and
cmc
insl
adc
adc
in
pop
push
xchg
clc
pop
pop
test
in
test
push
vunpckhps
test
push
jge
cmp
xchg
mov
cmp
ja
cmp
mov
fiadds
mov
push
pop
mov
lcall
out
fisttps
dec
repnz
adcb
int
scas
ljmp
out
sub
cmpsl
lea
jns
fldl
fadds
add
xlat
jg
daa
adc
ss
push
inc
dec
and
icebp
int3
data16
or
daa
lret
ljmp
jno
pop
lock
scas
adc
inc
test
xor
xor
scas
enter
enter
add
mov
repz
lods
and
jge
mov
and
int
lods
adc
xor
cmp
stos
push
sti
xchg
or
mov
pop
dec
mov
loopne
add
shll
decl
ja
push
in
and
je
dec
xor
add
pop
insb
mov
cmp
fnstcw
scas
xchg
push
pushl
dec
jno
mov
mov
adc
push
and
std
outsl
ret
and
jae
push
xor
fs
ret
dec
xchg
push
in
cs
idivb
add
jecxz
jne
rolb
add
adc
shlb
stos
mov
or
bound
andl
jne
stos
bound
pop
inc
loope
stc
sub
out
pop
mov
or
test
lock
xor
xchg
les
daa
push
into
pop
ja
fsubrs
xlat
mov
inc
int
in
push
dec
mov
mov
push
test
repnz
mov
add
jns
inc
popa
out
int
stos
shlb
hlt
stos
rol
adc
cltd
mov
and
cli
test
xchg
das
lcall
lcall
loope
xchg
daa
outsb
xchg
cmp
jnp
clc
sti
inc
arpl
dec
fwait
xchg
fs
mov
cmpsl
push
pop
ss
lds
idiv
shlb
pushf
pop
div
adc
jmp
xchg
jge
sbb
pop
stos
push
aaa
addr16
bound
xchg
imul
xchg
sbb
es
andb
arpl
repnz
bound
shll
jge
cld
and
jle
and
push
push
scas
outsb
jb
pop
rclb
dec
jecxz
je
cmp
mov
aas
jb
pop
inc
mov
imul
andl
movsl
mov
testl
stc
push
outsl
push
pop
sub
add
ss
xchg
push
popf
shl
or
add
inc
cmp
and
inc
pushf
lret
push
fsubs
sbb
cmp
js
hlt
jo
ret
rcrl
lahf
cmp
or
sub
lret
je
and
mov
ret
add
aad
add
xor
inc
pop
adc
es
lea
cmp
xchg
jo
push
dec
and
test
nop
add
mov
fiaddl
hlt
or
mov
sarb
leave
sbb
sbb
loopne
imul
mov
sarl
dec
repz
nop
outsl
jl
lcall
stos
jecxz
and
lret
xor
adc
stos
jno
ljmp
cmp
pusha
shlb
out
fstps
hlt
mov
fwait
xchg
add
dec
jp
lods
jmp
lahf
fsubs
adc
and
push
mov
scas
jp
frstor
xchg
dec
xor
xor
xchg
repnz
mov
inc
xchg
push
sub
sub
xchg
call
jo
lret
in
mov
testl
xchg
shlb
ret
cs
xchg
pop
nop
out
or
adc
add
jp
insl
xchg
jo
add
js
and
scas
aam
in
and
clc
pop
xchg
testb
sbb
sbb
lods
mov
mov
mov
xor
hlt
ja
jb
adc
out
jns
rorb
sbb
mull
call
or
inc
push
and
push
hlt
int3
fildll
loop
sub
pop
loop
jns
addb
mul
and
call
and
data16
lock
jge
mov
psadbw
mov
daa
add
lods
push
jne
xchg
sub
cmp
add
sub
sar
repz
xor
push
mov
jle
dec
cmp
fwait
sti
repnz
mov
inc
push
mov
mov
test
je
pop
push
inc
es
sub
add
cmc
shrl
or
ret
les
dec
dec
xchg
push
icebp
cli
imul
fs
inc
ja
jae
xchg
hlt
push
aam
adc
inc
aaa
add
fwait
lret
out
ja
shrl
or
dec
enter
adc
stc
repz
adc
push
sbb
dec
loop
fiaddl
mov
clc
pop
movsl
sub
adc
and
ret
xchg
inc
cltd
mov
mov
xor
sti
cmp
mov
les
test
sbb
mov
xchg
inc
inc
and
ljmp
loop
jle
in
test
aad
negb
cmp
jmp
jl
sub
cmp
in
or
xor
in
jecxz
aam
push
mov
mov
xor
push
outsb
rcl
stc
into
loopne
mov
popa
mov
sub
push
inc
aas
lea
aas
or
and
iret
jp
and
adc
mov
clc
test
aas
or
sbb
lcall
test
inc
xchg
and
fnstenv
jbe
jmp
xchg
call
scas
sub
ja
push
mov
lcall
stc
je
pop
mov
test
outsl
popa
cwtl
shl
fldcw
test
sbbl
aam
insb
icebp
dec
loopne
clc
sub
jge
sbb
in
inc
push
ja
pop
jae
sub
es
out
test
push
stc
xchg
int3
dec
mov
shll
popf
rol
dec
add
insb
xor
mov
pop
mov
pushf
jle
mov
mov
stos
into
outsl
mov
dec
fdivrl
sub
lds
jg
xchg
xorl
and
test
jno
mov
imulb
cmp
mov
shr
sub
sbb
pop
xor
scas
ret
cmpl
push
jb
std
jns
cmp
and
insl
fcmove
scas
lcall
insl
mov
jns
xchg
lahf
push
in
jnp
cltd
das
aad
scas
jmp
stos
call
sti
addl
and
xchg
cmp
lahf
clc
dec
xor
push
sti
call
xor
mov
popa
into
ret
mov
inc
lods
imul
in
cmp
loop
inc
int3
push
mov
xchg
jb
dec
cli
jecxz
sbb
xchg
xor
jnp
add
movsl
jge
fsubs
pop
hlt
mov
iret
ljmp
jno
call
test
in
and
mov
nop
test
sub
pop
add
sbb
jge
lods
pop
pop
mov
xchg
xchg
insl
fistpll
or
mov
push
and
inc
insl
xchg
add
lret
jecxz
btr
decb
mov
jbe
xchg
subb
xchg
mov
jno
icebp
sub
orb
stos
adc
sahf
sti
mov
lcall
cmpsb
or
int
inc
add
insb
push
push
xchg
adc
loopne
cmp
cmp
fs
repnz
mov
lret
mov
jne
lods
and
fisttpll
cld
into
mov
pop
aad
lods
mov
negl
pushw
loope
push
insb
jle
imul
fwait
push
js
mov
movups
mov
popf
xor
rol
pop
adc
loop
std
fwait
es
stos
lds
imul
out
out
add
sbb
and
or
fdivl
roll
xchg
mov
mov
mov
jae
fsubrs
mov
xchg
data16
cmpsl
xorl
xor
or
push
call
movsl
xchg
or
scas
out
xor
cmp
hlt
dec
negl
sub
sub
mov
outsb
xchg
test
repnz
xchg
sub
addb
inc
pop
add
cmp
iret
xor
mov
dec
mov
call
aad
pop
push
mov
mov
lcall
movsl
inc
inc
jne
jge
push
pop
adc
push
rdpmc
shrl
xchg
test
push
int3
fiadds
shrl
pop
jnp
lock
nop
ret
pop
dec
cmp
out
out
pop
dec
movsl
ret
adc
test
lret
xor
xchg
test
nop
mov
in
jecxz
arpl
fs
mov
loope
xor
fwait
pop
mov
sbb
cmp
shlb
lds
pop
sti
mov
movsb
test
pusha
inc
push
int
add
xchg
stc
or
xchg
inc
jecxz
fdivs
fisubs
lods
ljmp
mov
int3
out
clc
orb
xchg
stos
sbb
movsb
cmp
cmpb
mov
sahf
push
cwtl
scas
test
pop
rcll
add
mov
cmp
pop
sti
pusha
aaa
adc
dec
adc
xor
cltd
xor
xchg
adc
cmpsb
cmp
out
cwtl
cltd
mov
imul
and
ljmp
repnz
pop
jae
jp
rcr
roll
aas
dec
adcb
rcrb
xchg
test
cmp
cmovle
call
mov
mov
pop
out
cmpsl
fsubs
test
push
xor
pop
xor
xchg
idivl
cltd
dec
jnp
sti
xchg
cmp
cwtl
lds
sbb
xchg
cli
fisttpll
pop
nopl
leave
jnp
daa
mov
lea
scas
in
je
jmp
loopne
in
test
sbbb
out
insl
xchg
mov
mov
mov
in
aam
into
xorl
pop
or
fnsave
xor
push
cld
xchg
movsb
cltd
jbe
dec
lds
loopne
mov
mov
ret
movsb
mov
and
mov
nop
pop
imul
push
fdiv
push
mov
inc
cltd
jmp
adcl
fdivrs
decb
nop
xor
sbbl
cmp
notb
daa
clc
pop
adc
bnd
mov
cwtl
or
cltd
negb
mov
call
cmp
shrl
hlt
mov
and
mov
adc
in
into
xchg
sbbb
addr16
scas
push
adc
rorb
or
add
insb
jmp
aaa
shrb
loopne
mov
or
mov
loope
fistps
adc
jl
test
jno
mov
aaa
jecxz
stos
fimull
inc
fdivr
dec
mov
xchg
sbb
push
mov
sbb
and
mov
rol
repnz
pop
cmp
call
je
rclb
add
dec
xchg
cwtl
jb
sbb
mov
pop
or
sub
mov
bound
mov
ljmp
jb
adc
adc
mov
xchg
int
adc
lcall
cmpsb
hlt
and
xchg
mov
mov
mov
test
scas
nop
popa
movsl
add
jle
mov
notl
mov
xor
add
ss
sub
enter
xor
mov
test
rol
aad
add
push
mov
push
pop
and
imul
mov
in
mov
aaa
out
daa
add
cmp
fs
mov
cwtl
divl
stos
scas
cmpb
imul
sub
dec
sbb
addb
call
sbbb
pop
hlt
inc
push
mov
aad
out
and
mov
mov
es
stc
cmp
xchg
aas
into
mov
pop
xor
iret
pusha
cmp
and
mov
je
rcrl
imul
sub
cld
movsl
cmpl
xor
adc
dec
lret
addr16
pop
pop
leave
push
mov
mov
fptan
mov
add
mov
inc
jo
and
insb
jle
inc
jo
in
outsb
cmp
mov
fcmovbe
mov
ja
xchg
aam
mulps
xchg
and
sbb
fs
inc
fwait
cli
stos
imul
loopne
gs
jns
push
mov
mov
pop
jmp
cmp
imul
xchg
push
or
xchg
cmc
and
cmp
add
adc
and
xchg
dec
jb
pop
xor
mov
test
outsl
daa
frstor
inc
sbb
aas
mov
aas
cltd
loop
ljmp
and
outsb
dec
fldl
daa
mov
inc
xor
pop
dec
sub
jl
in
push
pop
dec
shll
mov
mov
ljmp
jmp
jno
notb
aaa
mov
mov
rol
pusha
pop
inc
mov
xchg
je
ret
dec
and
inc
jbe
cmp
mov
cwtl
sub
fnstcw
mov
or
add
data16
push
sti
mov
cs
push
pop
mov
push
andl
sub
in
movsb
cmc
cmp
popf
cmpb
inc
cmovl
dec
cmp
jecxz
add
jmp
out
inc
adc
fmuls
das
imul
pop
outsl
in
sbb
es
arpl
ss
pushf
push
pop
sbb
addb
jl
push
ljmp
pop
lahf
out
movsb
and
rolb
jae
mov
push
jae
inc
jl
add
addl
mov
fnstsw
loope
int
push
inc
in
inc
add
loopne
imul
xchg
cmpb
or
xchg
add
adc
and
int
mov
in
bound
sub
add
xor
and
jecxz
outsb
rcrl
cmpl
add
lods
xchg
add
test
jmp
inc
pusha
and
xor
pushf
daa
cmp
int
pop
lock
dec
inc
and
push
and
mov
add
jo
mov
mov
popf
test
xchg
dec
repnz
loope
mov
mov
xor
aad
dec
clc
stos
inc
in
and
pop
xchg
jg
mov
add
out
movsl
jmp
mov
lret
sub
mov
js
popa
cmpsb
push
imul
mov
and
jnp
mulb
and
fstps
lods
add
jl
xchg
xor
aaa
or
test
test
mov
mov
sbb
sub
outsb
call
push
cmp
jns
bound
xor
out
cmp
mov
movsb
mov
and
jecxz
or
adc
mov
mov
or
insl
repz
xlat
mov
je
es
icebp
push
xor
sbb
lahf
outsl
cmpsb
inc
ss
pushf
cmp
adc
cmp
push
dec
test
popf
add
pop
mov
loopne
inc
fwait
dec
adc
mov
push
mov
ja
insl
or
push
cmp
xchg
cmpsl
dec
pop
jo
movsb
cmc
or
fnstsw
adc
push
cmc
sbb
sub
sbb
lcall
ja
fbld
xchg
inc
test
icebp
mov
push
jne
mov
cli
adc
scas
rcl
jno
mov
fs
cmpsb
xchg
mov
cltd
and
lock
inc
frstor
mov
mov
push
or
mov
fstpt
fwait
mov
js
jnp
cmp
push
sub
cmp
mov
xorl
inc
xor
and
andb
jge
inc
insl
lods
les
ljmp
inc
inc
imul
fstpl
sbb
scas
jg
cmp
les
mov
mov
jmp
dec
push
jo
and
mov
dec
add
cs
xchg
das
cmpsl
loop
aad
xor
fdivl
or
xchg
jp
sbb
mov
xchg
pop
sbb
lock
imul
lds
and
jbe
jnp
add
inc
cmp
add
shlb
scas
jns
rorb
and
ljmp
xor
subl
xchg
inc
sbb
bound
mov
pop
lock
ret
pusha
push
dec
sbb
mov
mov
in
pusha
mov
lret
push
mov
cs
pop
int3
stc
cwtl
add
test
loope
sub
xor
aaa
dec
sub
xor
popa
adc
sub
rcrb
mov
xchg
jg
xor
subb
xchg
fs
shlb
inc
subl
outsl
inc
cmp
sbb
dec
add
jmp
cmp
xor
movsl
scas
movsl
and
mov
stos
xlat
mov
push
pop
adc
push
jge
pop
mov
push
jae
loopne
dec
pop
clc
sahf
in
ja
fs
push
std
add
and
add
adc
repnz
pushf
shl
dec
xchg
pop
in
clc
addr16
mov
out
cmp
mov
xchg
xor
adc
insb
shlb
mov
or
out
inc
in
pop
ret
mov
pop
push
or
imul
mov
and
cmpsl
xchg
cs
or
mov
pop
mov
cwtl
in
push
in
jno
movsb
cltd
jbe
mov
call
jl
xor
andb
cli
push
mov
add
dec
lods
jmp
into
ljmp
mov
or
dec
ljmp
pop
inc
xchg
imul
mov
jae
inc
call
aad
insl
incl
cmp
sti
ret
jp
xor
xor
cli
test
adc
push
xor
rcr
xor
aam
lock
inc
fstl
insb
push
je
ret
in
jnp
in
xorl
lret
push
icebp
call
dec
mov
fwait
das
mov
mov
mov
imul
fdivs
pushf
and
loop
test
lret
hlt
jmp
addb
lret
pop
and
lret
adc
mov
pop
pusha
scas
stos
mov
andb
rolb
popa
push
clc
xchg
inc
clc
out
test
dec
push
lret
in
dec
jmp
pop
sbb
push
and
sbb
xchg
jge
adc
shl
inc
push
push
dec
xlat
popl
clc
pop
sub
sahf
jnp
mov
xchg
cltd
push
or
mov
cmpb
mov
xchg
sub
sbb
mov
test
or
pop
fdivs
cmp
cld
mov
add
cmpsb
pushf
enter
testl
sbb
pusha
out
in
push
imul
mov
inc
out
mov
bound
rol
into
imul
das
nop
adc
cmp
ja
orl
push
push
scas
loopne
and
call
cmp
dec
sub
add
sub
ss
leave
push
mov
mov
pop
adc
mov
jne
mov
add
lods
xchg
xchg
add
je
out
fstpl
xor
out
and
cmp
rcrl
aam
ret
repz
mov
dec
adc
arpl
ds
mov
ret
fsts
sbb
or
dec
in
test
jo
fnsave
xor
in
lret
mov
js
nop
lock
popa
in
std
sbb
xor
mov
inc
stos
mov
mov
jge
add
loop
sti
mov
inc
inc
bound
jecxz
sub
or
xor
cmp
jns
aad
push
adc
and
pop
cmp
push
inc
rorb
ljmp
out
jb
push
int
in
add
out
in
int
jg
fucomi
xchg
daa
xchg
sti
pushf
lods
in
inc
xchg
les
divb
xlat
push
enter
cmp
mov
sti
lret
add
mov
mov
out
sbb
rol
or
cmc
xchg
jb
int3
arpl
fwait
xor
lods
ljmp
add
adc
aam
loop
jl
ljmp
icebp
mov
mov
mov
int
xchg
jg
cld
sbb
xchg
dec
and
sub
ljmp
fnstenv
lret
mov
ror
mov
gs
out
int
xor
ja
cmp
mov
les
lret
and
mov
jle
fistpll
xchg
xchg
adc
aas
ds
iret
out
add
adc
pusha
ja
jmp
aas
push
lea
stos
mov
push
push
lock
add
add
or
cmpsb
lds
jl
aam
test
mov
xchg
push
fistl
or
dec
mov
sub
loope
jb
lods
popa
rcll
cmc
jne
cld
jo
cmpsb
popf
cmp
xor
push
xor
sub
out
lcall
adc
pop
jnp
dec
and
or
aam
adc
inc
jp
xchg
jmpw
push
jns,pn
ret
shr
loop
sub
shrl
mov
imul
xor
lock
lds
or
mov
or
push
adc
xchg
in
sub
rorb
out
data16
mov
repz
lock
dec
sub
loope
jnp
iret
and
popf
or
sbb
les
fnsave
in
lret
inc
test
sub
cmpl
jp
lret
outsb
sti
pop
push
mov
sub
sbb
int3
lret
xchg
out
pop
mov
stos
adc
pop
cs
push
fpatan
xor
cmp
jmp
adcl
int
mov
jae
testl
cltd
jb
icebp
insb
cli
bound
xchg
int
push
nop
add
mov
cwtl
es
mov
pop
pop
mov
fnstenv
sbb
jle
pop
xor
insb
scas
xchg
pusha
rorb
scas
test
test
xchg
fbstp
xchg
xor
sarb
sbb
rcl
pop
leave
or
xorb
inc
cli
and
aam
rol
inc
les
negl
mov
mov
js
dec
test
rcll
loope
mov
mov
mov
out
lock
jl
inc
mov
test
inc
fwait
in
lods
aas
or
clc
je
mov
mov
pop
add
xor
sarb
pusha
sbb
pop
xchg
jge
xchg
xchg
lahf
xlat
ror
cmpsb
pop
out
xor
sbb
cmp
sbb
add
push
jle
mov
add
call
add
cmp
adc
mov
into
push
sub
mov
pop
or
les
mov
cmp
ficoml
cmp
sbb
aad
jnp
into
outsb
dec
arpl
subb
cs
jbe
aad
ja
ret
mov
dec
rcll
adc
das
add
arpl
out
ja
mov
cmp
mov
pop
out
pop
jbe
inc
sub
jle
jle
clc
sahf
xchg
popa
lock
pop
iret
xchg
testb
stc
jmp
mov
jb
mov
lret
mov
sub
insb
nop
push
push
mov
add
pop
in
outsb
sub
fmull
loope
and
push
jg
gs
adc
ljmp
mov
jmp
rclb
push
jbe
pop
dec
dec
sbbl
fnstsw
push
mov
jae
and
sub
pop
scas
fdivrl
repz
inc
sbb
lret
mov
lret
mov
jmp
das
mov
xchg
mov
jae
in
jns
mov
adc
mov
and
push
out
fnstsw
out
mov
inc
jle
fucomp
inc
jnp
in
imul
movsb
add
sahf
test
sub
out
movsl
push
aas
mov
inc
pop
pop
mov
push
add
pop
xorb
sub
arpl
jb
enter
push
push
xchg
jl
adc
lret
repz
push
div
xchg
daa
rcrb
jne
popa
bound
pop
mov
ljmp
js
bound
movsb
stos
cmp
aaa
fdivrs
pushf
fwait
enter
jecxz
jg
jl
out
fstps
test
fcompl
or
or
mov
xlat
call
in
sbb
or
sti
jge
sbb
mov
pusha
push
js
loope
adcb
dec
and
cmpsl
mov
jno
loop
sti
scas
inc
das
sbb
test
cltd
sub
pushf
mov
dec
gs
dec
jnp
fdivrl
das
movsb
rcrl
cmp
mov
jmp
xchg
in
mov
fbstp
gs
pop
es
xor
out
inc
mov
cld
les
test
jb
icebp
xchg
aad
pop
push
dec
sub
sbb
rclb
iret
mov
test
insl
sub
jg
and
shrb
mov
lss
cmpsl
cmp
xchg
and
pop
js
pop
scas
xchg
aas
and
stos
jb
dec
icebp
and
xor
test
mov
cmpsb
dec
ret
jle
push
mov
push
pusha
xor
dec
or
icebp
adc
adc
inc
out
sbb
aam
lret
ret
dec
loop
mov
sbb
jbe
test
aas
adc
aad
inc
stc
nop
dec
insb
lds
fs
fidivrl
movsl
add
sbb
cmpsl
lock
pop
cmp
or
xchg
into
sbb
jbe
daa
repnz
es
aad
ret
dec
shlb
sbb
push
pop
repnz
mov
mov
xchg
and
xchg
movsl
mov
gs
imul
stos
movsl
jmp
dec
insb
into
dec
mov
xorl
mov
and
fdiv
sti
movsl
aas
push
xor
jns
jno
ss
xor
push
sarb
xchg
xchg
adc
jl
xor
popf
pop
cmp
cmp
dec
xchg
xor
arpl
cli
fwait
test
xor
dec
notb
push
mov
sub
mov
push
insb
or
cmp
adc
sbb
imul
test
repnz
stos
imul
or
sub
in
mov
popw
loop
aam
inc
das
dec
add
ret
fwait
hlt
insl
xchg
xchg
mov
insb
dec
pop
mov
ret
xchg
xorb
nop
pop
stos
decb
sub
and
xor
jmp
jge
sbbb
out
sub
lahf
or
iret
mov
push
cmpsl
sub
jecxz
jo
mov
pop
xchg
int3
ror
ud2
xchg
pop
mov
xor
push
enter
test
and
jecxz
subb
and
add
cmpsl
negb
in
ret
jae
test
fs
pop
call
mov
loop
adc
rcl
cmp
pop
xchg
jb
mov
frstor
push
mov
cmpsb
inc
push
sbb
in
or
inc
js
sbb
sub
out
outsl
and
adc
decl
pop
cmpsl
add
mov
fs
lock
cmc
jne
pushf
jecxz
jle
cmp
and
xchg
cli
jp
inc
loope
cmpsb
mov
mov
inc
push
and
iret
xor
inc
and
jecxz
test
cmc
lahf
loop
lahf
push
aam
pop
xchg
fcoml
mov
inc
and
stos
in
inc
xor
lcall
cmpl
xchg
negb
sub
mov
int
mov
dec
into
frstor
mov
xchg
sbb
leave
push
or
addr16
xor
lahf
add
push
adc
daa
cmp
push
mov
mov
and
cmc
adc
push
push
xor
fsubs
decb
popa
xor
clc
mov
stos
or
rorb
mov
mov
mov
movsb
lahf
and
xor
sti
mov
mov
mov
dec
sub
xrelease
add
daa
lea
add
sub
and
call
inc
cmp
adc
mov
sbb
pop
jns
int
mov
push
sbb
out
push
dec
xor
leave
push
pop
cmp
ret
cld
out
push
dec
xor
jno
pop
cmp
mov
pop
out
push
inc
fiaddl
popa
or
aam
adc
add
es
test
sbb
aas
inc
in
jae
or
adc
mov
mov
shlb
pop
or
fisubrl
lcall
vmwrite
adcl
leave
cmc
fs
cmp
js
push
adc
push
pop
and
push
or
jle
in
dec
push
pop
cs
xlat
or
leave
cmp
clc
mov
push
inc
pop
push
add
cmp
sub
fs
loopne
test
pop
or
mov
arpl
in
pop
xlat
mov
mov
call
jecxz
out
dec
mov
sbb
pusha
mov
pop
ds
or
mov
in
dec
movsl
pop
dec
dec
test
sub
clc
adcl
sub
orl
shld
into
jo
cmp
stos
loop
push
outsl
or
loopne
out
test
mov
loope
in
test
insl
inc
test
mov
mov
push
sub
dec
or
mov
fbld
lret
jno
testw
cmpsl
pop
iret
bound
cmc
es
or
pop
jmp
adc
lods
adc
cmc
or
and
mulb
jle
fadds
and
das
ficomps
ss
inc
mov
sub
lret
xor
xchg
stc
or
ret
out
jecxz
add
testl
and
push
out
repz
in
mov
test
lret
mov
lcall
mov
push
aas
stos
ss
adc
adcl
test
lret
sti
jo
pop
jns
cs
cmp
pop
sbb
daa
adc
mov
ljmp
jle
icebp
xchg
sbb
arpl
cmovle
and
push
mov
int3
test
jp
inc
mov
js
jae
mov
fadd
pop
push
sub
cltd
add
les
cmp
imul
daa
inc
lea
mov
jle
sub
push
pop
scas
xchg
mov
ds
xlat
push
ljmp
push
push
inc
sbb
cli
shl
jg
ljmp
mov
lret
mov
aas
sbb
push
les
inc
addr16
incb
das
repnz
insb
addl
pusha
sbb
xchg
pop
lea
testb
test
mov
cmpsl
lahf
xor
xchg
mov
inc
mov
test
mov
sbb
inc
inc
enter
jne
cwtl
mov
into
gs
push
and
lods
fs
or
mov
jo
mov
jl
push
jns
xchg
mov
xchg
ret
xchg
les
cltd
xchg
sub
fdivrs
mov
xchg
mov
pop
push
out
push
jbe
adc
addl
pop
repnz
adc
sbbl
and
lret
push
movsl
mov
daa
in
xchg
pop
stc
nop
dec
dec
stc
cmp
loopne
sbb
jbe
dec
ret
dec
in
adc
fildl
pop
icebp
mov
dec
loopne
adc
fsubrs
pop
clc
dec
ret
mov
popa
clc
xchg
test
sahf
pop
or
xor
sub
pop
pop
push
in
dec
rcrl
sbb
sbb
jno
lcall
arpl
loope
loop
sahf
inc
insb
add
jnp
pop
imul
fiaddl
pop
inc
xlat
dec
and
xchg
mov
pop
and
xor
bound
dec
out
clc
mov
in
jne
jbe
shlb
push
xchg
adc
insb
xchg
pop
repnz
out
ss
popf
and
lods
repnz
loop
mov
cld
cmp
xor
mov
add
xlat
inc
jge
sbb
jecxz
nop
aaa
or
mov
loopne
pop
push
or
xchg
and
fmull
test
push
adc
sti
jmp
sub
gs
sub
sbb
xchg
add
jle
out
pop
inc
adc
sti
mov
enter
lods
aam
xlat
pop
sub
popa
push
and
mov
lds
into
movsb
in
test
push
dec
std
or
gs
movsb
pop
pop
push
xor
jge
sbb
les
cltd
out
lods
dec
test
adc
ret
ret
imul
dec
xor
mov
cmp
jp
ret
sbb
insl
into
aaa
xchg
test
loope
fiaddl
cmp
repnz
lock
add
pusha
gs
jl
ja
sbb
pop
lret
mov
loop
push
dec
mov
lods
mov
jl
lds
sbb
movsl
and
lret
mov
mov
sbb
push
push
or
jp
ja
stc
jl
std
push
out
cltd
adc
aas
out
push
insb
pop
push
jbe
mov
sub
mov
adc
and
cmp
lods
dec
mov
shll
sbb
insb
out
xorb
xchg
inc
cmpsl
repz
fwait
dec
and
imul
sub
jbe
jne
sbb
jae
cmpsb
cld
dec
aam
dec
enter
pop
and
jle
add
jne
jl
pushf
outsl
out
test
sub
add
scas
cltd
jne
fstl
stc
xchg
pop
cli
aaa
dec
in
and
mov
movsb
shl
inc
sahf
sbb
ror
pop
push
outsb
add
and
pop
cmp
pop
mov
mov
dec
sbb
jge
mov
cmpsl
and
in
inc
add
push
xchg
add
push
add
jae
push
mov
xlat
mov
lods
popa
cmpsl
loopne
push
add
mov
ja
jae
inc
mov
movsb
jne
repz
push
add
lods
jo
cltd
mov
mov
and
jns
push
push
xor
aaa
rclb
jp
and
jns
jnp
or
nop
xor
push
repnz
jbe
cltd
lock
popf
mov
das
ss
push
mov
insl
push
xor
mov
jns
es
loope,pn
aaa
push
fwait
pop
int3
fcomps
mov
loop
popa
add
sarb
push
lcall
and
inc
insb
sub
mov
mov
stos
sbb
inc
jb
aad
addr16
mov
and
sub
ret
inc
int
mov
push
pushf
daa
movsb
add
rcrb
or
adc
lret
shrb
cli
inc
jo
adc
mov
jmp
and
cmc
sbbl
push
adc
test
inc
aam
mov
mov
sbb
aas
mov
test
pop
pop
jecxz
xor
pop
mov
mov
jns
aas
mov
sub
ret
rcl
cmp
in
test
sub
push
fwait
and
pusha
adc
add
gs
push
and
je
add
mov
mov
inc
or
or
addr16
cmpsb
pop
jp
shr
dec
sub
dec
xlat
adc
adc
aam
movsl
aad
out
pop
fidivrl
adc
sahf
int3
cmp
pop
xor
ja
out
out
daa
popa
addl
shl
and
call
test
stos
mov
sbb
mov
sbb
adc
sbb
sbb
shl
sbb
mov
bound
lret
jp
pop
ja
push
or
jo
ja
sbb
jmp
fs
test
mov
pop
cli
cmpsl
mov
adc
or
and
test
and
dec
add
inc
or
cmpl
sahf
cmpsb
inc
add
das
call
or
lahf
mulb
inc
fcomps
or
dec
inc
stc
fsubrs
sbb
mov
lret
mov
in
adc
repnz
mov
adc
cltd
cli
inc
cld
cmp
mov
cli
movsl
and
test
addr16
dec
in
lods
sub
inc
cmpsl
insb
int
cmp
mov
pop
mov
in
mov
movsl
loop
sub
scas
mov
inc
stc
jb
js
push
mov
lds
shrb
sbb
push
push
pop
arpl
cmp
xor
out
gs
ret
nop
cld
bnd
xchg
rcll
je
movsl
inc
in
mov
dec
arpl
filds
gs
mov
add
xchg
or
pop
insl
or
rcl
cmpsb
std
test
loop
arpl
or
cli
jno
comiss
sbb
cmpsb
cmp
repz
pop
xor
adc
je
sub
inc
pop
mov
mov
xor
mov
sub
xchg
mov
xor
or
adc
mov
lahf
jg
repz
pop
lock
or
push
roll
pop
bound
inc
lahf
icebp
sahf
xchg
fldlg2
das
btc
xor
dec
mov
mov
cmc
nop
roll
cmc
aad
outsb
mov
scas
add
orb
push
icebp
subl
mov
lahf
adc
sbbl
xlat
or
or
nop
jl
lods
jno
fisubrl
cld
mov
lret
fcoms
cli
mulb
cmp
xor
mov
sahf
lcall
dec
pop
cmpsl
adcl
mov
in
jae
aaa
call
add
aas
int
cmp
dec
in
iret
or
scas
and
out
popa
hlt
mov
inc
scas
push
inc
push
jae
jns
sbb
lcall
sub
dec
sub
mov
add
pop
test
out
sbb
loop
add
test
fwait
pop
inc
mov
jecxz
cmp
lret
insl
and
push
cmpsl
hlt
jnp
xchg
das
decl
xchg
mov
and
int3
jbe
push
test
add
mov
insl
jno
icebp
dec
xchg
jae
cwtl
xor
enter
cli
pushf
jge
inc
cwtl
out
adc
pop
test
stos
cld
lods
jb
cmp
fldenv
dec
adc
testl
das
adc
lock
or
int
inc
outsb
cwtl
rcr
dec
cli
aad
jns
sbb
or
xorb
jnp
xchg
cmpsl
add
mov
pusha
addb
mov
push
shll
adc
rclb
jge
aaa
cmp
insb
push
cwtl
imul
and
add
xor
jecxz
jne
pop
mov
sarb
xor
mov
jno
shlb
aas
push
ror
cltd
data16
sbb
testb
add
rorl
ss
leave
js
je
dec
and
xchg
adc
jmp
xchg
sbb
jnp
lods
cwtl
mov
or
sbb
fucomp
cmp
push
sub
inc
negl
scas
lret
lret
das
xlat
in
and
cmpsl
mov
adc
xchg
in
icebp
and
cs
pop
push
xchg
ficomps
clc
cwtl
test
insl
mov
inc
push
loop
mov
add
inc
pop
scas
in
mov
out
jle
stos
dec
lret
scas
or
popa
push
stos
mov
xchg
das
push
push
ds
mov
mov
push
mov
add
stc
fisubl
lds
gs
jnp
dec
dec
xor
dec
iret
add
xchg
ss
sub
jne
enter
or
sub
inc
loope
aam
js
inc
cmpsl
das
dec
test
jle
ds
xor
mov
jle
popa
clc
pop
mov
shlb
enter
cmp
or
loop
jno
jl
lea
mov
pop
hlt
cmp
cltd
repz
xchg
ss
divb
inc
out
hlt
adc
sub
lret
pop
aam
daa
jle
mov
imull
xchg
xor
sahf
mov
jns
hlt
lock
out
ja
xor
xor
idiv
xchg
stos
les
scas
jecxz
mov
sbb
inc
fsubr
jp
mov
lret
mov
fisttps
out
dec
pop
inc
add
roll
sub
pop
insb
add
lock
cmpsl
mov
pop
fwait
push
push
orl
daa
inc
nop
push
ljmp
jbe
pusha
fcom
mov
mov
fbstp
add
sbb
int3
imul
lds
jb
stos
and
lds
sahf
divl
outsl
cs
jo
fcoml
jge,pt
stos
icebp
fisttps
aam
scas
xchg
in
insb
pushf
test
stos
dec
add
mov
into
and
outsl
mov
pop
dec
hlt
add
movsl
sbb
xchg
cmp
inc
push
and
out
pavgw
and
xchg
pusha
iret
add
mov
push
mov
jecxz
inc
push
divb
test
sbb
cltd
jae
shll
pop
xor
lea
mov
in
imul
aam
fsubl
dec
clc
pop
lret
adc
sbb
xor
in
fimull
push
loop
lcall
mov
pop
outsb
inc
dec
mov
push
daa
aas
add
xchg
or
test
scas
mov
sbb
cld
add
pop
xlat
mov
movsb
movsb
movl
and
out
in
xchg
outsb
push
mov
data16
sub
cmpsb
mov
je
fidivrs
fs
push
cmp
inc
inc
cmp
outsb
fwait
dec
movsl
cmp
xlat
in
repz
lods
dec
xchg
stos
in
rep
dec
repnz
cmp
in
or
les
dec
jmp
stc
test
adcl
push
push
xchg
aaa
mov
inc
out
cld
lcall
popf
xchg
pop
test
add
fs
dec
cmp
xchg
mov
xchg
sti
or
stos
push
ss
sarl
lds
fstpt
jg
inc
push
int
mov
dec
pop
lods
xchg
nop
push
cli
aaa
mov
mov
fldl
cmpsb
mov
popf
cli
iret
test
add
cltd
cmpsb
push
inc
je
push
jmp
sbb
jp
inc
popa
cli
mov
push
push
push
dec
lret
jne
add
xchg
sti
enter
push
insb
test
lret
push
jle
mov
push
andb
cmp
pop
data16
roll
dec
xorb
insl
jecxz
dec
js
clc
in
add
cli
lcall
inc
pop
inc
lock
sbbl
and
fs
cmp
stos
pop
sbb
inc
dec
and
xchg
iret
pop
sbb
outsb
jp
jp
test
orl
push
mov
testb
shlb
pop
cs
or
cmpsb
sub
cwtl
lock
inc
iret
jae
std
cmpsl
js
movsb
loope
adc
inc
or
push
jl
cwtl
jmp
pop
mov
in
cmpsl
mov
adc
insl
lea
adcl
pop
xlat
sub
movsl
insb
stc
testb
daa
fildl
data16
xor
sub
out
mov
out
pusha
hlt
inc
ret
shlb
cmc
fwait
xor
xchg
xor
sbb
lds
imul
adc
mov
lods
daa
add
lea
aas
sbb
lock
imul
fs
out
jne
rcl
sub
mov
push
adc
push
jo
push
jge
xchg
xor
inc
push
inc
in
sbb
in
test
lods
shll
mov
jecxz
mov
push
loope
push
iret
xchg
inc
mov
iret
test
jo
sub
pop
adc
pop
cmpb
cmp
mov
loope
cmp
push
push
mov
mov
daa
fdivrl
stos
add
movsb
mov
mov
sub
push
aas
push
cmc
scas
out
mov
mov
lret
popl
into
and
mov
adcb
cld
xchg
into
or
cmpb
and
xchg
scas
sahf
mov
sarl
loopne
and
xchg
lea
popl
jle
or
dec
rcrl
fs
loop
lock
xchg
cmpsl
ret
call
fistl
mov
xchg
pop
ljmp
imulb
ret
mov
int
push
out
lock
jne
in
add
jb
add
not
pop
movsl
es
aam
mov
sbb
inc
in
or
adc
mov
xchg
out
adc
dec
sahf
and
inc
cwtl
mov
xchg
lods
test
addr16
jae
dec
loop
push
push
cmp
mov
mov
lret
xlat
fidivrl
push
aas
pusha
xchg
sub
push
imul
cmp
mov
dec
enter
cmp
hlt
aaa
push
push
mov
pop
jle
dec
mul
sub
insl
scas
or
pop
lds
xchg
test
rolb
shl
cltd
out
and
mov
xor
xchg
icebp
or
out
sti
mov
mov
sbbb
xchg
subb
outsb
adcb
jp
inc
leave
fldcw
sbb
sti
pushf
jl
add
clc
and
sti
ja
xor
std
sbb
or
inc
push
push
jne
test
aaa
xchg
adc
repz
jecxz
cmp
mov
or
psrlq
jge
sbb
ja
cmp
lret
sbb
pusha
mov
clc
and
pop
shll
inc
loope
inc
push
scas
xchg
and
or
cmp
in
push
sbb
iret
addb
lds
daa
outsl
lcall
dec
xchg
aad
cwtl
out
mov
in
test
mov
push
cmpsb
mov
test
pushf
pusha
xor
sbb
popf
sub
add
cs
int
or
jg
movsl
in
push
xchg
add
add
mov
std
or
sub
cli
lret
sbb
popa
xor
jo
push
and
add
sti
fstps
movsl
cmp
xor
icebp
sub
pop
pop
xchg
jmp
sub
push
xchg
or
out
repnz
mov
add
test
ja
sahf
test
mov
jno
inc
test
cmp
xchg
hlt
mov
mov
mov
lea
ss
adc
and
cmp
leave
fildl
and
sbb
mov
cmp
in
js
xor
jbe
xchg
lods
in
xchg
push
out
lcall
out
cmpsb
mov
rorl
dec
xor
jg
sub
mov
mov
mov
iret
repnz
shlb
je
push
icebp
xor
pop
icebp
cli
dec
test
and
pop
xchg
xor
enter
sbb
ja
push
clc
inc
je
jp
loop
xchg
popf
dec
sub
stos
aaa
cmp
xchg
adc
addr16
lahf
cld
mov
lods
jmp
loop
sahf
xor
fiaddl
fdivs
xchg
in
das
lret
aaa
iret
fistpl
mov
push
movsb
jl
aad
inc
rol
inc
xor
xor
ds
cmpsb
loop
sbb
aad
ret
iret
jecxz
mov
jecxz
lret
cmp
adc
rcrl
cmp
mov
cmp
pop
test
push
loopne
cmp
pop
pushf
fdivp
jge
xlat
jmp
jbe
mov
jg
dec
jge
movsb
adc
mov
int3
out
mov
mov
icebp
mov
jg
sbb
fbstp
mov
fisubs
mov
and
icebp
pusha
jl
or
mov
loopne
pushf
sub
sub
lods
loope
es
fstps
out
mov
sub
push
lcall
in
hlt
rolb
or
mov
cmp
scas
adc
pop
ret
xchg
pop
out
push
in
add
in
dec
pop
adc
push
dec
or
push
sub
xlat
mov
xor
and
xchg
outsl
push
dec
outsl
scas
push
jge
sbb
push
sahf
cmp
mov
les
daa
cmpsb
pop
in
cli
cmp
mov
or
scas
xchg
dec
jecxz
stos
shlb
cwtl
jbe
jmp
scas
sbb
fmull
jbe
arpl
rolw
in
outsl
enter
test
xor
out
push
aas
xchg
into
loop
jo
in
data16
fsubr
push
inc
sbb
mov
xor
cmp
or
cs
aaa
fwait
mov
sub
and
mov
sbb
pop
dec
and
aam
icebp
adc
push
jg
sub
test
mov
js
pop
and
push
add
lods
adc
ja
add
daa
sbb
fwait
mov
pop
pop
movsb
clc
xchg
js
jecxz
mov
pop
pop
mov
imul
mov
add
lahf
pop
jecxz
sti
pop
cmpl
aaa
pusha
enter
data16
rcll
and
jp
xor
imul
fs
mov
dec
leave
push
jne
add
pusha
cli
pop
addr16
jmp
icebp
stc
cld
jns
xchg
adc
adcl
rorl
mov
test
fistpll
cld
dec
stos
push
xchg
and
pop
push
pushf
les
pop
shlb
jbe
cwtl
stos
mov
mov
test
and
and
mov
addr16
cltd
sbb
test
mov
fiadds
in
test
and
andb
cld
hlt
mov
jae
subl
adc
clc
add
xor
fildll
adc
loope
lahf
addr16
pop
shlb
xchg
add
jno
movsl
push
fsubrs
push
mov
or
xchg
xor
ret
sbbb
add
iret
fsts
add
or
xchg
shll
and
lcall
inc
push
jb
and
pop
dec
enter
add
jns
dec
jecxz
jle
or
sbb
add
fisttps
inc
sbb
add
lret
adc
in
pop
mov
fbld
push
loop
cmp
int
jno
push
and
out
arpl
xchg
adc
mov
mov
fisttpll
fdivl
rcrb
cmpb
leave
adc
push
add
mov
jb
xor
rclb
lods
mov
loope
fistps
rolb
pop
mov
add
fisubrl
addr16
loopne
imul
js
cmp
xor
sarl
andb
sub
pop
sbb
ljmp
add
dec
mov
push
mov
pop
mov
out
add
cmp
sbb
push
cmpsb
sub
mulb
dec
jge
mov
or
add
loop
imul
mov
mov
adc
ret
mov
pop
hlt
push
rorb
cmp
push
xchg
imul
aaa
aam
stc
insl
adc
adc
pop
test
xor
loopne
dec
mov
jb
std
sub
sub
fisubrl
add
out
jecxz
push
ret
shll
fidivs
jl
fistpl
inc
add
fisttpl
xchg
in
push
push
mov
mov
pop
dec
scas
xchg
xlat
jmp
jae
popf
scas
int
mov
mov
and
fiaddl
jg
adc
dec
cmc
inc
jns
cwtl
cmpl
push
jmp
add
pop
cmp
loop
pop
sub
xchg
pop
sbb
sarb
adc
or
insl
dec
dec
les
test
xor
and
addr16
cmp
loopne
sub
loopne
sub
loope
je
inc
aas
testl
add
in
repz
stos
add
xor
movsl
and
push
mov
mov
push
push
mov
jo
xor
mov
cmc
pop
cmpsl
movsw
cli
xchg
fldcw
adc
push
jne
add
in
popa
dec
data16
ret
in
aaa
xor
rcl
lcall
jno
push
into
mov
cmc
outsl
out
xlat
sbb
lds
addb
push
pop
fcmovnbe
sbb
mul
insb
sub
jnp
cmp
sti
in
mov
add
data16
push
add
push
es
pop
inc
xchg
icebp
xor
lods
mov
sbb
rcrl
inc
mov
test
lret
ljmpw
or
pop
mov
pop
bound
pop
outsl
xchg
jmp
jbe
mov
cmpsl
jb
dec
fildll
pop
fnstsw
fs
lock
xchg
jbe
int3
fdivr
jae
insb
xchg
adc
movsb
in
push
call
lcall
mov
sub
clc
out
mov
rcll
cmp
sbb
out
cli
sub
fnstsw
jecxz
mov
es
push
decb
mov
xorl
int3
addl
adc
jge
cmp
push
sahf
mov
in
cmp
mov
fcomp
lret
lret
push
je
int3
popf
xchg
inc
popf
mov
pusha
or
add
sar
jg
push
mov
sbb
sbb
jbe
je
andb
pop
lea
movsl
enter
jmp
mov
inc
and
in
sbb
shlb
leave
int3
xor
push
lcall
nop
je
popf
push
into
sbb
push
mov
jge
lods
sahf
xchg
inc
repz
lds
cmp
mov
iret
xchg
inc
lret
bound
aad
mov
mov
sub
pop
xlat
cmp
dec
or
sbb
repnz
fwait
mov
test
xchg
inc
fmulp
stc
mov
and
lods
cmp
cmp
pop
ret
xor
mov
cld
xchg
les
sbb
ljmp
mov
sbb
loopne
dec
ret
test
cmp
add
repz
xchg
push
pop
xchg
add
inc
cmovge
lods
adc
fsubp
inc
push
inc
jo
int
ljmp
aaa
push
inc
jmp
push
loopne
cltd
xorb
int
mov
les
and
jmp
out
test
sbb
xchg
adc
jb
push
and
and
rcl
jb
out
movsb
sbb
loopne
jecxz
add
movsl
sub
std
and
out
mov
lods
cmpsb
push
rolb
stc
push
out
ljmp
adc
push
dec
pushf
cli
call
into
push
jne
push
push
test
dec
mov
outsl
std
decb
push
dec
pop
cmp
pop
push
repnz
dec
sub
out
inc
sbb
mov
inc
jle
pusha
mov
iret
xchg
jne
je
mov
jne
push
sarb
fdivl
mov
in
add
mov
xor
mov
sqrtps
xchg
mov
sub
insl
jns
mov
rcrl
data16
inc
xor
aad
pusha
mov
ljmp
insb
or
in
daa
cmp
dec
xchg
ljmp
test
inc
xor
daa
loop
mov
sbb
aas
jbe
add
shll
mov
bound
scas
inc
push
pop
adc
cli
int3
arpl
lret
ljmp
bound
test
or
sarl
loopne
adc
jg
ret
mov
stc
es
sub
out
add
or
or
sbb
ljmp
push
lock
jl
hlt
jns
outsl
outsl
mov
rcrl
ds
in
cmp
sbb
int
lock
in
mov
cmpsb
adc
pop
jb
cmc
stos
inc
daa
push
xchg
jl
stos
sub
in
cli
dec
xor
dec
ficompl
mov
mov
adc
cmp
inc
ljmp
repnz
pushl
add
jnp
fnstenv
in
sti
or
mov
test
fsubrp
fnstsw
incb
sub
jno
push
mov
dec
xor
xchg
mov
shlb
xchg
pop
imul
or
push
outsb
cwtl
popf
sbbl
cld
and
xorb
aaa
scas
shrl
adc
cmp
into
test
or
cmp
mov
mov
aam
jle
mov
inc
daa
outsl
pusha
xchg
aas
lock
lret
data16
iret
int
lahf
stos
sub
fdivs
jg
shrb
pusha
int3
cwtl
sbb
jge
sbb
imull
mov
mov
xchg
add
jmp
hlt
imul
or
lds
and
pop
xchg
mov
punpcklbw
popa
jmp
xchg
inc
pop
or
dec
out
lock
int3
aad
int3
push
imul
enter
or
loop
popa
and
bswap
dec
and
push
jbe
inc
popa
orl
jp
jnp
sub
xchg
fldenv
shll
aaa
lock
in
push
adc
sub
or
mov
xchg
xor
lcall
daa
jmp
sub
loop
mov
js
mov
jo
sub
inc
iret
fnstsw
mov
sbb
iret
sub
gs
xlat
cmp
testl
cmpl
mov
ret
aam
jp
xchg
sbb
xor
sbb
fnstcw
jnp
test
mov
lahf
popa
cltd
ss
js
fwait
jb
stos
fcomi
aam
rolb
pop
in
dec
adc
mov
push
mov
cmp
es
mov
lods
cmp
pop
xor
mov
add
and
mov
inc
push
jbe
clc
pop
adc
push
and
cli
inc
repnz
sbb
mov
ja
loope
notl
les
mov
arpl
adc
pop
jle
mov
push
test
nop
addb
mov
add
js
pop
add
rolb
scas
xchg
pop
cmpl
mov
xorb
insb
push
aas
fmull
sub
sbb
cmc
test
insl
js
mov
pop
push
inc
aad
and
inc
mov
sbb
imul
in
inc
push
rorb
inc
push
push
cld
push
js
fildl
push
fucomi
adc
lcall
stos
push
std
and
push
rolb
or
pop
shrb
cmp
test
jp
add
sbb
call
lcall
leave
je
lret
rcrl
mov
in
cmp
mov
adc
imul
negl
dec
pop
out
dec
loope
push
and
imul
dec
adc
mov
sub
push
mulb
mov
out
xchg
fwait
sti
cltd
jbe
add
mov
nop
push
dec
jl
fbstp
jns
out
mov
lahf
imull
mov
dec
inc
jno
ljmp
lret
mov
jb
xor
lds
lds
pop
mov
icebp
call
popf
or
cmpsb
leave
adc
mov
aam
push
jmp
push
lods
jo
test
test
or
iret
fidivl
fyl2xp1
inc
add
aas
jae
inc
lcall
and
sti
iret
mov
pushf
shll
mov
cli
aas
rclb
push
mov
pop
or
push
les
int3
ficomps
ja
loop
nop
les
cmovp
mov
mov
repz
mov
inc
adc
dec
stos
test
fdivrl
and
add
rorl
xchg
jno
inc
inc
cwtl
push
and
push
daa
and
jno
stos
xchg
lahf
lcall
enter
xor
dec
icebp
movsl
adc
pop
mov
cmp
sub
add
sar
xchg
stos
xor
sbb
fcoml
sub
mov
bound
sub
xor
imul
pop
inc
les
movb
sbb
hlt
fisubl
xor
push
push
mov
xchg
call
shll
cmpsl
repnz
stc
inc
enter
xchg
decb
jle
pop
popl
dec
pop
icebp
imull
cmp
lret
xchg
xor
mov
jl
push
or
jae
add
ret
aaa
cmp
inc
or
nop
testl
das
jne
pusha
jae
sbb
add
mov
cli
push
add
loopne
das
cmp
icebp
xchg
jb
jle
inc
push
cmpsb
jmp
mov
pop
hlt
int3
jl
loop
inc
decb
inc
jo
or
je
or
inc
mov
dec
in
xor
shlb
and
icebp
cmpsb
jge
bound
pop
jmp
push
in
push
push
mov
xchg
mov
cltd
decb
mov
jle
int
and
and
jo
loop
adc
movsb
shlb
xchg
cs
dec
repnz
sub
lahf
pop
cwtl
mov
in
hlt
out
and
filds
mov
lret
fsubrl
lock
out
int3
lret
arpl
in
push
push
es
fsubl
jbe
cmp
fadd
loope
adc
push
stc
mov
jbe
mov
orb
arpl
in
xchg
pop
push
add
insb
add
testl
ss
in
test
push
je
jae
or
pop
jnp
push
pusha
in
test
test
push
cmp
cmp
shll
push
fnclex
test
adc
mov
pop
pushf
xlat
pop
sti
jge
jb
pshufw
mov
sbb
in
es
bound
clc
test
ds
sbb
rep
lcall
xchg
mov
jmp
mov
sbb
aaa
call
fcmove
popf
dec
in
out
inc
frstor
stos
push
mov
pop
cmp
int
test
xor
jb
dec
loop
dec
push
dec
sub
in
repz
orb
xchg
mov
imull
cmc
or
sarl
inc
sahf
in
sbb
movsb
mov
pop
pop
dec
mov
mov
dec
in
outsl
adcl
into
pop
jno
mov
cmp
icebp
imul
jae
outsl
jnp
scas
out
xor
push
mov
cltd
insb
sbb
mov
loop
subb
mov
or
mov
lret
movsb
sti
addr16
push
stos
add
aam
and
clc
jg
subl
mov
sub
sbb
adc
testl
sbb
xor
in
pop
neg
cmp
mov
aas
add
jecxz
xchg
cli
mov
adcb
add
push
out
jno
ds
repz
push
in
fnsave
xchg
lock
push
push
adc
xor
jne
das
inc
imull
imul
xor
mov
adc
ret
pop
pop
xor
outsl
inc
aas
pop
mov
aad
inc
andb
mov
daa
aam
cmp
or
repz
cmp
push
loop
or
sub
cmpsb
inc
lock
jmp
mov
dec
push
fs
sbb
out
pop
cmp
out
fcoms
and
sbb
or
sbb
cmp
push
jp
es
mov
xor
or
xchg
cltd
scas
mov
or
daa
sbb
and
loopne
jmp
movsb
adc
xor
inc
shll
out
jo
lahf
xor
adc
call
ljmp
mov
sub
movb
in
je
clc
test
adc
packsswb
sbb
pop
shl
lods
outsl
jmp
cld
repnz
loop
pusha
negb
orl
je
aam
je
fstpt
daa
fwait
pop
out
mov
loope
arpl
negb
outsb
mov
push
or
mov
fimuls
stc
in
enter
sub
sbb
mov
inc
inc
fwait
lahf
test
sti
mov
mov
lahf
sub
enter
jno
jbe
or
adc
test
push
jnp
lods
mov
jmp
mov
int3
sub
mov
inc
insl
addr16
inc
ja
adc
and
mov
dec
shl
in
daa
sbb
dec
andl
out
int3
sbb
xchg
sub
xor
jne
repnz
lods
mov
cmp
jae
and
stc
ret
dec
cmp
fsubl
xlat
gs
lret
dec
push
in
mov
cmp
add
mov
pop
in
cmc
xchg
jmp
iret
scas
out
gs
dec
xchg
and
fwait
push
lahf
shlb
add
in
pop
xchg
sbb
or
jl
pop
test
push
ljmp
push
cmp
mov
ljmp
jne
sbb
repz
loop
pop
cwtl
out
int3
fdivrl
and
push
into
lret
mov
adc
xor
push
mov
or
out
cwtl
push
shll
div
popf
adc
mov
mov
fnsave
xchg
in
xlat
repz
call
lods
jns
ret
insl
xor
dec
dec
xor
jp
lods
inc
jge
int3
mov
and
dec
outsl
loop
loop
loope
fildl
jbe
sub
in
test
rolb
lret
dec
push
adc
push
mov
sub
push
shl
cli
jne
cmp
sub
in
adc
rcrb
cmp
enter
inc
ljmp
fimuls
enter
dec
cmp
and
arpl
mov
push
and
nop
push
or
mov
call
fstl
test
gs
mov
fimull
xchg
adc
adc
mov
mov
aad
adc
scas
sti
mov
imul
xor
imul
mov
add
xor
adc
sahf
arpl
scas
popf
xor
cmc
cmp
bound
cmp
sub
add
mov
cmp
jl
or
sub
les
mov
ret
inc
sbb
and
dec
mov
cwtl
out
mov
xchg
iret
add
mov
adc
xlat
lock
jnp
xchg
mov
push
stos
add
test
and
sub
stos
pushf
pop
test
bound
lcall
aad
insl
inc
mov
adc
ss
loop
adcb
or
scas
dec
pop
xchg
dec
cld
adcb
jns
mov
pop
pop
add
movsl
not
xchg
add
aam
and
test
into
push
cli
insl
pop
lahf
testb
adc
in
fwait
jne
out
mov
iret
dec
pop
cmc
cmp
dec
arpl
test
lods
hlt
add
sbb
nopl
add
sbb
bndstx
cmp
mov
in
je
add
addl
and
pushf
xchg
inc
fldcw
jno
adc
sub
jb
pop
or
scas
adc
sbb
scas
out
imul
or
pushf
filds
out
mov
rcrb
mov
mov
jo
repnz
rcrb
dec
pop
cmp
jmp
cmp
lods
cmc
ss
out
imul
adc
stos
ljmp
hlt
rcll
loope
nop
mov
lret
orb
movsl
xor
and
mov
add
xchg
push
aad
lock
add
aaa
dec
mov
cmp
insb
and
xor
addr16
test
pop
mov
ja
fnsave
xchg
dec
in
push
cmp
xchg
mov
subl
push
or
add
xchg
dec
dec
mov
mov
jb
xchg
and
dec
inc
or
out
push
inc
xchg
jg
cmp
adc
inc
lods
fists
xor
ds
xor
rorb
xchg
push
inc
negb
inc
inc
xchg
fidivs
lahf
repnz
mov
in
in
push
out
and
cs
rol
cmpsb
push
inc
jae
scas
addl
add
in
shl
xchg
push
bnd
jne
gs
adc
and
popa
data16
mov
addr16
pop
or
sbb
js
sbb
sbb
pop
adc
into
sbb
xchg
out
ss
jae
or
xor
sub
scas
inc
test
std
pop
stos
cmpsl
dec
stos
mov
gs
pop
lea
aad
mov
mov
sbb
lea
aad
xchg
mov
hlt
push
sub
int3
js
xchg
mov
push
ljmp
ret
mov
gs
shl
addr16
mov
add
je
hlt
adc
mov
or
mov
dec
jp
ret
aas
and
sti
inc
ficomps
sub
popf
jp
or
andl
cmp
sbbl
mov
int3
jg
mov
test
sub
pop
ljmp
pop
xor
jb
movsl
mov
movsb
sbb
mov
gs
jb
ja
sbb
repz
pop
add
inc
pop
nop
or
icebp
mov
jmp
mov
mov
aad
xor
repz
in
orl
scas
inc
mov
enter
push
jmp
and
jb
xor
imul
out
pop
adc
mov
sti
push
ja
das
mov
loope
dec
cmp
add
push
sub
scas
push
dec
fbld
xor
jle
bound
lock
jge,pn
mov
jle
mov
sbb
mov
mov
or
sbb
adc
or
ret
movsl
outsb
jp
into
push
inc
hlt
xchg
push
shll
or
aaa
in
sbb
cli
or
push
sbbl
ljmp
cwtl
xor
mov
ret
jnp
jb
pop
or
ds
popa
pushf
jl
cmc
stos
gs
push
sub
mov
push
add
ja
fwait
cmc
mov
out
pop
cwtl
xor
repz
fwait
adcl
xor
ja
divl
cltd
add
cwtl
aam
xchg
and
sti
hlt
adc
lcall
mov
push
mov
adc
push
cmp
add
mov
loopne
sbb
jecxz
jge
mov
sahf
pop
adc
sub
imul
rclb
ss
mov
jge
cmp
dec
cltd
or
data16
sbb
fisttps
in
sub
decl
xor
fs
pushf
mov
ret
jp
call
test
jbe
int
or
in
imul
cmp
pusha
shll
inc
add
mov
ds
pop
or
mov
mov
or
cs
lahf
imul
test
push
push
or
sub
lods
repz
xor
test
lods
aad
pushf
pop
cmp
fnstenv
pop
out
cmp
sub
pop
dec
mov
lret
repz
xlat
mov
stos
mov
imul
outsb
sbb
ljmp
rcll
pop
shrl
push
add
mov
bound
sub
pop
lret
lock
pop
jne
ret
mov
sarl
pop
mov
jecxz
aas
pop
sub
jecxz
stc
pop
sub
iret
mov
jno
dec
fsubrp
ss
orl
test
daa
jae
push
jle
and
bound
rcrb
seto
jae
cmpsl
mov
daa
push
add
dec
test
mov
jns
sub
adcl
xchg
and
or
lods
mov
in
das
inc
and
inc
adc
inc
inc
or
jl
outsb
rorb
orb
xchg
dec
test
mov
adc
xor
and
mov
pop
push
cmp
nop
push
mov
cmp
xor
cs
leave
ret
adc
insl
aas
jns
clc
pmaxub
mov
daa
call
cld
xchg
cmp
cmpsl
lods
or
jmp
je
pop
cmpsb
dec
gs
add
test
cmp
xchg
in
or
fwait
adc
int
mov
adc
rclb
outsb
clc
div
lcall
and
dec
pop
jns
push
out
ficomps
repz
div
enter
mov
pop
cs
pop
dec
icebp
mov
fmuls
sbb
adc
mov
mov
add
shlb
cmp
push
dec
pop
jbe
andl
sub
aam
push
andl
mov
pop
ljmp
pop
cmc
clc
pop
roll
xchg
aaa
std
hlt
mov
adc
daa
stos
fildll
js
ja
xchg
shlb
mov
jecxz
mov
cmc
dec
pushl
out
out
stc
or
mov
add
nop
pop
mov
inc
bound
adc
or
fsubr
dec
test
outsb
rorl
insb
jle
addr16
xchg
icebp
rol
xlat
pop
push
test
mov
ds
lods
pop
add
mov
cmp
in
out
mov
mov
pop
test
or
das
xchg
jbe
xor
insl
bound
aas
adc
movsb
fsts
test
dec
push
stos
lahf
xor
sub
xchg
mov
and
and
nop
push
xchg
outsb
mov
cltd
mov
int
xchg
mov
lret
or
int3
push
adc
rolb
imul
add
fadds
movsl
inc
stc
add
fildll
mov
jns
shrb
mov
lods
andl
add
in
scas
pushf
test
cmp
lock
insl
xorb
flds
hlt
push
mov
pop
and
jle
fisubrl
out
xor
add
cli
mov
push
jmp
xor
jns
gs
test
iret
mov
xchg
dec
xor
cmpl
mov
push
popa
movsb
pop
leave
sbb
jecxz
test
cmp
aas
cli
les
clc
ja
out
popf
adc
sti
xchg
fidivrs
loop
outsb
je
out
mov
lret
and
sahf
xchg
jne
cmp
repz
in
push
scas
lods
sbb
sbb
pop
lret
mov
int3
sub
rcrb
mov
loop
cmp
outsl
fstpl
mov
push
inc
push
inc
test
and
in
pusha
jno
fidivs
outsl
gs
mov
push
inc
imul
fsubl
push
idivl
ret
mov
enter
xor
inc
pop
out
jle
dec
shrl
and
sbbl
sti
into
insl
dec
fisttps
in
inc
jecxz
call
push
insl
lcall
push
pop
xor
dec
xchg
sub
jne
test
sbb
popf
ja
inc
in
xchg
shr
fs
loop
inc
fildll
dec
data16
jge
jo
mov
mov
mov
lret
stc
pop
jbe
mov
jecxz
fmul
or
dec
dec
xor
das
cs
and
dec
fnsave
dec
loop
sbb
outsl
cmpsb
iret
lods
in
push
xchg
arpl
fldcw
fdivs
hlt
insb
hlt
push
jno
lahf
ficomps
shlb
pop
call
pushf
testl
sbb
push
sub
lods
jnp
push
adc
mov
add
dec
loop
repnz
out
out
push
xor
cwtl
repz
pusha
sbb
es
outsb
inc
sbb
mov
pusha
mov
popa
mov
ja
in
pop
cltd
adc
hlt
insb
repnz
mov
cmp
and
inc
mov
add
xchg
adc
cmpsb
lahf
icebp
push
cmpsb
push
xchg
scas
orl
sub
jo
loopne
lahf
adc
mov
or
add
lcall
ret
pop
leave
pop
das
sahf
dec
and
jbe
bound
inc
jmp
pushf
and
int3
xchg
imul
mov
ljmp
imul
cmp
repz
sbb
cltd
mov
or
sbb
shll
inc
dec
lcall
ret
hlt
test
lods
xchg
pushl
dec
sbb
test
lret
arpl
sbb
int
dec
leave
mov
mov
rol
jmp
mov
imul
sbb
fs
sti
fwait
xchg
fwait
mov
mov
inc
sbb
sub
cld
jne
adc
cwtl
les
test
ds
das
insb
push
inc
sbb
mov
pop
pop
nop
leave
decb
mov
movsl
push
popf
inc
lds
shlb
out
mov
push
mov
xchg
push
mov
push
inc
fst
loopne
push
stos
inc
jo
xchg
lret
and
sahf
cmp
test
push
pop
repnz
popf
mov
add
std
push
and
xchg
pop
pop
inc
loop
popf
imul
mov
mov
inc
fidivl
pop
mov
popa
cmp
cmp
ss
mov
les
xor
cmpsl
bound
fmul
in
sbb
xchg
cmc
cld
sub
cmpsl
or
jmp
adc
cmp
cmp
mov
out
dec
cmp
xor
outsl
dec
push
enter
push
inc
and
jno
jecxz
stc
mov
mov
xchg
mov
notb
add
xor
addr16
out
inc
dec
or
shrl
enter
pusha
shrd
jle
out
xchg
stc
imul
lods
fcmovne
inc
loope
push
pop
pop
add
sbb
mov
inc
loopne
les
mov
pop
xchg
rcl
out
and
sbb
inc
cmp
pop
inc
iret
inc
adc
inc
repz
jno
lods
pop
mov
cmc
pop
push
xchg
inc
mov
cs
scas
pop
add
ja
sub
mov
in
and
mov
test
ret
fbstp
lods
and
mov
mov
inc
fildll
xchg
arpl
imul
and
sub
push
clc
sub
inc
mov
or
inc
xchg
mov
stc
inc
in
mov
cltd
popa
stc
mov
push
imul
sbb
xchg
movsb
jns
dec
data16
loope
inc
fwait
pop
mov
out
rorl
mov
fdivl
popa
lea
hlt
jp
adc
rcrb
ljmp
out
add
aad
testl
popf
jp
stos
scas
repnz
xor
ljmp
insb
jl
shrb
mov
lret
std
sar
bswap
push
xchg
xchg
mov
std
push
fcmovbe
push
mov
lea
or
out
sti
movsb
rcr
mov
test
push
mov
popa
decb
bound
and
addr16
and
jno
nop
cld
les
mov
test
mov
dec
sahf
js
fwait
push
lret
adc
mov
inc
outsb
or
js
hlt
mov
or
sub
pop
insl
repz
in
sbb
rolb
lds
cmp
sub
push
fwait
adc
inc
popa
mov
int3
scas
std
ss
sbb
pop
xchg
mov
adc
jne
in
sbbl
ljmp
ret
movsl
cmp
jge
test
cmp
xor
ja
std
push
add
ss
xchg
push
ret
add
fs
popa
and
push
out
mov
push
inc
mov
adcb
sub
pop
xchg
int
das
mov
sbbb
inc
popa
and
aam
inc
and
xchg
or
mov
mov
pop
xchg
ja
mov
or
lods
repnz
xchg
push
dec
repnz
insl
xchg
xor
sub
sub
pushfw
stc
push
sbb
notl
pop
outsb
mov
jp,pt
bswap
inc
xor
stos
or
mov
sub
popf
jl
adc
outsb
sbb
pop
xorl
adcl
push
cwtl
cli
push
cmp
dec
xlat
dec
push
mov
mov
lahf
jle
scas
fisttpl
and
and
xchg
and
mov
and
or
ja
add
push
jg
push
outsb
push
pusha
lret
popa
add
shr
jge
xchg
ret
push
xchg
or
test
test
sbb
xchg
adc
jge
pop
sub
mov
addl
or
hlt
js
mov
std
sti
sub
xor
sbb
rol
jg
stc
push
fistl
add
adc
push
int
pop
out
loop
rorl
mov
lds
loop
add
ljmp
push
cmpsl
iret
mov
adc
pop
cmp
adc
jbe
add
push
insb
jecxz
push
jb
enter
fcmovne
fistpll
mov
mov
popa
and
call
pop
icebp
out
out
push
lods
cmc
fs
xorb
lret
mov
lcall
popa
pop
stos
jbe
pop
jmp
and
int
lods
andb
lods
push
repnz
sub
cli
test
out
cld
adc
cmpsb
xor
sbb
cmpl
sbb
fildll
push
fdivl
adc
stos
gs
shrb
test
xchg
mov
sub
fdiv
and
jbe
mov
js
lods
cmp
fnstcw
push
push
dec
sar
xor
nop
mov
icebp
dec
lea
dec
and
cmp
ret
iret
jl
aaa
inc
clc
lods
xorl
test
jo
cmp
jl
scas
jnp
or
ds
cmpsl
lahf
sub
outsl
fdivrl
int3
dec
or
push
inc
and
xchg
fiaddl
push
xor
pop
in
lods
mov
lret
inc
jbe
and
adc
cmpsb
inc
imul
mov
iret
sarl
inc
mov
push
push
in
jns
cmpsl
and
mov
imul
je
adc
push
test
mulb
lods
das
shll
fwait
pop
mov
inc
arpl
popf
ss
fiadds
pop
loope
and
xchg
lret
movb
xchg
mov
and
push
neg
or
dec
std
push
dec
push
push
push
lcall
jae
popa
mov
mov
iret
sbb
clc
push
xor
and
push
push
or
subb
test
dec
dec
lea
xlat
push
hlt
sahf
repz
mov
mov
push
subl
insb
jbe
ret
pop
pushf
jo
xchg
sub
dec
movsb
ds
sbb
adc
cs
lahf
jl
cltd
mov
mul
jb
test
push
add
xchg
clc
jno
out
xchg
sbb
mov
movsb
mov
cltd
xchg
loope
ds
mov
pop
sti
int3
mov
and
lock
idivb
push
nop
insl
loopne
sti
repz
test
pop
loop
lods
jmp
jb
stos
or
leave
fs
push
xchg
out
mov
dec
add
movsb
ja
clc
xchg
cmp
adc
rcrl
popf
in
xor
cmpsl
adc
mov
adc
shrb
add
mov
push
lods
mov
dec
cmpsl
aad
sbb
outsl
pop
ja
or
jnp
lret
pop
push
pop
or
loop
xchg
xor
cmp
lcall
push
xchg
imul
cmp
mov
incl
out
sub
gs
xor
mov
inc
dec
pop
inc
xor
push
mov
lahf
jle
add
lret
insb
ds
jge
pop
push
das
movb
add
std
fucomi
cs
fwait
xlat
faddl
push
cltd
mov
mov
cmp
shll
and
xchg
jns
jbe
push
cs
icebp
pop
xchg
xchg
cmc
sarb
push
mov
rcrl
insl
lods
xchg
cli
add
inc
cwtl
adc
pop
ja
and
adc
psubd
mov
add
es
movsb
inc
xor
dec
lds
test
sbb
repnz
pop
lsl
and
mov
dec
incl
xor
shll
out
xor
in
and
inc
dec
cmpsl
xor
mov
xor
or
sti
jbe
seto
inc
sbb
xchg
cmpsb
cltd
jp
roll
mov
iret
ss
insl
aam
inc
inc
sbb
adc
jp
cmp
sub
sub
inc
and
xor
push
mov
push
enter
jg
lret
bound
out
jae
dec
fiaddl
lldt
mov
xchg
inc
inc
in
daa
fwait
push
stos
adc
mov
lock
xchg
call
dec
jp
js
ljmp
or
adc
jns
fwait
push
es
lret
adc
imul
mov
lea
cltd
sub
pop
sub
test
sti
xor
sub
lods
sub
push
jb
cmpsl
clc
fsubl
jle
push
cmp
inc
fildl
ss
testb
mov
mov
add
sub
mov
pop
mov
jl
mov
mov
imul
cs
aaa
adc
les
mov
fwait
pop
xchg
xor
xchg
or
movsl
idivl
push
out
push
mov
xchg
and
push
lahf
jns
mov
cmp
cwtl
decb
mov
movsb
daa
pusha
dec
popl
mov
movsb
cs
fwait
sbb
in
outsb
sbb
aas
lock
lods
cmp
daa
add
int3
fisubrs
xor
add
mov
pop
enter
out
cmp
pop
push
aas
xor
out
lahf
or
out
inc
or
pop
mov
xor
sbb
ss
inc
loope
imull
add
dec
sahf
push
sub
mov
ret
xor
shlb
inc
ret
lret
addl
adc
and
jno
repz
cmp
outsb
xchg
inc
cld
or
push
imul
ret
sub
jp,pt
ja
pop
push
push
xor
sub
push
fstl
bound
lods
and
inc
xchg
dec
pusha
cmp
xchg
sahf
push
cwtl
xor
sbb
add
sbb
ja
stos
inc
lahf
cwtl
loope
out
cld
push
cwtl
or
cmpsl
jbe
jns
aam
or
pop
stos
pop
ljmp
push
jae
xchg
mov
icebp
add
jbe
ret
or
sti
add
inc
ds
out
jle
rcll
or
cmpsb
cld
or
pop
sbb
sahf
push
lods
aaa
testl
test
cmp
inc
push
pop
stos
xchg
or
lock
push
cmp
stos
push
or
jns
imul
xchg
shll
insb
sub
neg
xchg
mov
aaa
mov
lea
mov
pushf
arpl
iret
mov
je
nop
pavgw
insb
aam
mov
mov
cmp
shr
push
imul
jg
mov
mov
jp
sub
mov
out
lock
add
cld
and
fiadds
jmp
xor
in
mov
jno
iret
xor
or
mov
cmp
jb
pop
xchg
cmp
push
cmp
dec
mov
fstps
outsb
cmp
cmc
addr16
xchg
ja
push
outsb
add
inc
or
sbb
cmpsb
fsub
test
push
gs
pop
add
push
xor
sti
fwait
jbe
test
dec
fadd
push
jne
movsb
mov
notb
xchg
sti
cmp
and
dec
lods
shrl
mov
inc
cmp
lds
jecxz
push
popf
int
sti
cmp
cmpsl
aam
mov
data16
dec
sbb
inc
lock
cmp
jge
adc
add
stos
sub
dec
xor
pop
mov
jo
sahf
sarl
jg
repnz
rcll
adc
xorb
xor
inc
sbb
mov
dec
sub
adc
jne
xor
filds
cltd
adc
mov
mov
cmpsb
push
and
mov
add
jns
cmpsb
and
lcall
push
outsl
mov
sub
fucomi
mov
sub
mov
sti
hlt
test
cs
xlat
test
mov
int
cltd
std
sbb
loop
fcoms
cmp
mov
pop
repz
xchg
xor
adcb
stc
nop
aas
adc
push
and
pusha
ss
mov
push
leave
jb
sbb
cmp
cmp
adc
inc
cli
pop
insb
sbb
xor
push
pushf
mov
cmp
add
xor
ficompl
add
jne
icebp
adc
mov
fldcw
arpl
pop
mov
arpl
push
shrb
push
mov
mov
scas
neg
mov
push
out
mov
xchg
arpl
inc
in
or
mov
repz
out
adc
sub
stos
mov
scas
adc
add
lret
stos
pop
cmp
test
dec
decl
lods
popa
popf
lods
xchg
into
out
jne
outsl
jge
inc
fbstp
pop
repz
xchg
lret
scas
repz
pusha
rcrl
jo
jge
loop
xor
rorl
mov
out
add
push
mov
lods
jp
pop
dec
mov
dec
mov
popa
mov
pop
and
inc
jp
jp
add
jecxz
or
push
clc
push
imul
stc
sbb
jge
xor
sub
and
mov
stc
cmp
mov
leave
mov
int
cmp
inc
mov
setge
xchg
fdivrs
xrelease
aad
cltd
iret
cmp
les
fidivl
push
inc
mov
ret
jns
arpl
int
sub
or
jge
lahf
dec
push
sub
cmc
jno
daa
and
push
sub
fs
out
adcb
cmp
movsb
jge
mov
add
jecxz
enter
outsl
mov
popa
pop
or
clc
cmpsl
adc
mov
push
addr16
scas
cwtl
jne
mov
imull
hlt
adc
mov
mulb
ja
jns
xor
aaa
xchg
jb
stc
fildll
pop
sahf
dec
or
adc
sbb
out
enter
dec
outsb
mov
dec
xchg
cmp
clc
inc
push
jne
repnz
pop
inc
subb
pop
sub
push
mov
data16
mov
jbe
les
pushf
pop
dec
loope
scas
ljmp
out
push
xchg
shl
xchg
mov
add
repnz
xor
xchg
pop
cmc
fst
mov
mov
xchg
pusha
fldl
js
fwait
cmp
mov
sbb
and
push
mov
pop
cmpsl
pop
movsl
lods
cmp
loope
or
lods
mov
movl
sub
lcall
cmp
loopne
lahf
lea
ljmp
or
mov
fsubs
lcall
jbe
lods
xor
add
in
stos
rol
jb
hlt
jnp
imul
imul
repnz
pop
out
xchg
inc
jge
test
add
xor
insl
ret
jmp
aad
or
xchg
mov
or
mov
out
xchg
lods
ret
roll
gs
inc
scas
dec
dec
lods
in
inc
adc
std
xor
xor
xor
stos
fcmove
dec
fiaddl
mov
xor
or
das
gs
xchg
rep
cmp
or
and
cmp
mov
out
pop
adc
inc
mov
and
sbb
mov
int
cmp
test
leave
fcmovne
int3
shrb
out
pop
sbb
leave
mov
mov
dec
mov
mov
ror
and
dec
sahf
fistpll
or
push
in
dec
mov
mov
mov
adc
test
sar
in
data16
cmp
int3
jno
aad
jp
insl
idivb
out
push
dec
ficomps
push
fstl
cmp
lods
xor
imul
xchg
movb
mov
jae
adc
test
dec
out
es
scas
jmp
clc
inc
add
xor
cmp
andl
and
xlat
mov
mov
icebp
leave
push
arpl
loop
mov
pop
sub
jle
lahf
mov
pop
imul
jo
in
mov
inc
jae
stc
jno
dec
mov
aam
jnp
movsb
jle
lea
add
pop
xor
popa
jge
icebp
xlat
jae
subb
jle
pop
fs
adc
cmp
inc
mov
pop
mov
lods
or
cmp
pop
pop
hlt
dec
inc
andl
in
jnp
in
paddw
pushf
sub
push
pop
mov
shrb
cmp
shll
popa
xchg
adc
sti
jb
adc
or
into
fs
inc
inc
ja
xchg
mov
push
add
mov
shlb
lds
sub
pop
xchg
movsb
dec
popf
sbb
rorb
test
mov
mov
lock
sub
daa
sbb
ja
popa
int3
add
test
push
dec
loopne
mov
movsl
xchg
or
dec
lret
repnz
mov
and
pushf
sub
mov
je
pusha
sbb
dec
inc
lods
mov
shlb
fs
mov
pop
test
lret
je
xor
insl
lcall
cmp
jg
stos
adc
jbe
das
and
fucomi
fwait
mov
mov
inc
pop
xor
inc
dec
jb
sub
outsl
mov
sti
xor
xchg
outsb
lds
gs
movsl
out
aaa
je
inc
subl
imul
xor
dec
sub
jecxz
lret
fsts
cli
call
mov
xchg
lcall
sbb
mov
rol
orl
xchg
mov
aas
add
xchg
inc
dec
cmp
fcmovb
or
add
or
movsl
lcall
pop
aad
shlb
sub
fnstcw
push
loop
xchg
ss
addr16
pusha
jno
pop
pop
lods
and
push
xor
pop
lahf
shll
divl
push
es
xor
dec
xchg
mov
sub
mov
jmp
out
jno
adcl
fwait
mov
xor
ret
insl
lods
cltd
adc
or
dec
roll
mov
or
and
les
mov
rorl
xlat
repz
mov
mov
rcl
jnp
xor
std
das
mov
daa
mov
sub
rorl
mov
ret
rol
insl
and
cmp
jmp
add
add
ljmp
ror
fsts
out
notl
decl
jle
adc
cmp
jae
mov
sub
cmpsl
ds
dec
jmp
pop
popa
and
test
inc
or
mov
jge
les
ja
not
push
addr16
push
xchg
add
xlat
push
mull
iret
rclb
inc
hlt
or
call
addr16
pop
leave
pop
repnz
loop
lea
xchg
sub
jl
push
pop
int
js
mov
sbb
push
sub
add
or
inc
sbb
add
aaa
mov
fucomip
push
mov
lock
aaa
fcom
in
shrl
jg
pop
leave
movsb
sub
push
mov
int
jmp
dec
jb,pn
ret
rolb
push
cmp
xchg
outsl
testb
cmp
in
movb
outsb
sbb
insl
iret
mov
popf
push
or
rcrb
movsl
mov
outsb
mov
test
and
sarl
add
fwait
popa
inc
inc
push
in
test
and
push
mov
xlat
pop
dec
mov
in
test
stos
aas
ljmp
cmc
sti
andl
inc
adc
inc
in
cs
cmc
mov
daa
ja
dec
xchg
outsb
fnstenv
insl
outsb
ret
sbb
addr16
inc
rclb
mov
into
dec
inc
outsb
inc
pop
test
lahf
jbe
test
test
jbe
jle
int
cmp
dec
pop
stc
mov
pop
aad
cli
aad
jge
mov
inc
and
jne
mov
mov
fldt
push
out
notl
pushl
push
in
dec
xchg
test
lock
rcrl
and
in
rclb
sub
jo
jne
mov
and
out
xchg
cmc
lret
frstor
and
jle
pusha
hlt
ja
fs
mov
rcrb
das
pop
adc
jg
repz
and
faddl
pop
popa
jnp
mov
inc
shrl
dec
pop
repnz
cmp
pop
movsb
mov
xchg
movsl
adc
mov
xorb
inc
sbb
and
and
sbbl
jo
jp
sbb
lret
cs
xor
mov
mov
adc
in
orl
push
jmp
cmpsb
pop
mov
cmc
and
jnp
insl
shrb
sbb
nop
jl
jns
xor
popa
jecxz
sbb
movb
pop
fwait
scas
out
cltd
dec
sub
jmp
pop
jg
or
push
cltd
imul
jmp
stc
or
daa
cmovl
int3
fs
outsl
gs
mov
cmp
xorl
loope
or
adc
rcrl
push
in
xor
int3
xchg
sbb
mov
mov
mov
aad
pop
addr16
dec
ljmp
inc
lret
mov
jo
pop
vmaxpd
orl
daa
aad
or
jmp
aas
fwait
xor
sub
pop
repz
mov
pushf
fsubs
xor
adc
and
push
jno
jae
and
std
testb
fidivrl
and
xor
or
mov
mov
aaa
push
jbe
push
jb
jae
jmp
cmp
pop
dec
sbb
fnstenv
cmp
jb
bound
jae
mov
clc
and
imul
mov
jp
dec
in
lret
hlt
stos
enter
dec
scas
leave
leave
pop
jae
aaa
int
xchg
cmp
or
and
mov
jno
pop
mulb
gs
push
sbb
nop
dec
int3
mov
mov
push
loope
cmp
and
aas
fucomi
dec
dec
xchg
push
adc
icebp
mov
repnz
test
adc
cli
filds
push
scas
aaa
es
push
cwtl
clc
pop
xlat
add
aas
pop
adc
jp
jl
add
cld
pop
aad
sahf
test
jle
in
movb
mov
in
dec
mov
iret
jecxz
jo
ja
pushf
test
fsts
push
out
ret
repz
and
scas
push
inc
mov
out
cmp
pop
mov
insb
inc
neg
add
in
lods
sahf
sahf
jl
pop
lods
add
xchg
repz
push
push
or
test
sbbb
xchg
lds
cmp
jge
dec
mov
xchg
mov
jge
mov
fxch
insb
idivl
ljmp
pop
arpl
jle
lods
mov
test
dec
xor
jl
fstl
dec
add
add
cmc
pop
mov
jl
push
push
int3
fnstsw
dec
push
iret
rorb
les
fdivl
xchg
mov
aad
xorb
les
xchg
jp
addr16
js
jp
sub
ds
das
movsb
pop
mov
sub
jecxz
sbb
sbb
mov
shll
out
sarb
sbb
js
pop
sub
push
push
daa
jnp
mov
pop
sub
es
push
nop
sub
or
icebp
imul
scas
and
inc
xlat
ss
mov
jp
cmp
add
sbb
sbb
nop
pop
pop
les
scas
pushf
sbb
shr
jp
ret
mov
cwtl
cmp
xor
cmp
inc
loope
movsl
out
cmpsb
xor
sbb
mov
ja
in
les
sbb
sbb
lea
bound
cmpsb
sbb
dec
mov
nop
daa
ljmp
stos
push
cmp
xor
mov
mov
sbb
xchg
push
jecxz
mov
lock
shll
aas
es
mov
jle
cmp
lods
jo
sbb
inc
and
aaa
jp
cs
mov
jle
out
xchg
outsl
cli
outsl
mov
mov
add
sbb
mov
sub
js
ret
jne,pt
jno
out
adc
dec
pop
adc
icebp
lea
push
xchg
sub
sbb
cmpsb
les
bound
dec
sub
test
mov
cltd
or
jne
and
pop
lret
ficoml
arpl
and
cmpl
cltd
jg
mov
pop
cli
jmp
cmp
scas
out
sbb
jnp
jb
mov
mov
in
cltd
sub
xchg
push
or
sbb
push
inc
scas
jne
add
sub
in
outsl
lds
jle
sbb
sahf
lahf
xchg
ret
push
lods
loop
loope
int
and
cmp
mov
sub
pop
or
push
pop
jmp
dec
jecxz
mov
out
xlat
scas
dec
fmull
dec
rol
loop
mov
sbb
inc
and
cmp
mov
jle
bound
lahf
sbb
adc
adc
push
jmp
xchg
cmp
cmp
out
sbb
push
je
xchg
push
movsw
xchg
xor
movsb
loop
fmul
cmp
dec
sub
jnp
and
lds
adc
loop
sbb
push
repz
jb
outsl
inc
pop
scas
cmp
and
fwait
int3
fcoml
lahf
push
xchg
push
push
leave
popa
push
cmpsl
lock
xchg
mov
and
jg
cwtl
aas
add
sub
enter
bound
jbe
adc
mov
xor
aad
mov
push
push
sub
jmp
lahf
mov
cs
adcb
call
bnd
rolb
and
mov
sbb
stos
nop
ret
or
orl
sub
or
inc
nop
adc
fdivrl
fildl
mov
lret
dec
fwait
jle
inc
sbb
call
test
ret
dec
aad
mov
jmp
in
jl
hlt
push
jnp
out
mov
xchg
or
in
outsl
cmp
jae
sarb
mov
jle
sub
imul
inc
cmp
mov
sub
ficoms
sub
fdiv
mov
pop
and
jo
and
mov
sub
into
pop
divb
test
out
test
jne
inc
js
lret
inc
push
mov
test
mov
sti
and
frstor
mov
fisubl
sbb
imul
rep
cwtl
aad
insl
mov
push
int3
jg
push
mov
push
lds
movsl
or
sub
pop
push
pop
loope
or
sbb
dec
xchg
pop
hlt
fwait
xor
inc
or
pusha
cmp
sub
aaa
stos
xor
mov
jae
shll
je
mov
pusha
sti
lds
out
pop
cmp
or
cs
xchg
and
push
fcomps
mov
mov
fwait
ss
push
test
lret
jl
test
fld
stos
insb
jge
mov
mov
adc
xchg
ret
icebp
ljmp
mov
sub
mov
sahf
les
push
pusha
ljmp
mov
cmove
mov
push
push
stos
push
imul
xor
inc
xor
cwtl
jb
sbb
ljmp
adc
ljmp
imul
test
cmpsl
sbb
mov
bound
lods
add
shl
xor
xchg
pop
sahf
in
popf
and
add
jae
xor
scas
xchg
sub
xor
neg
dec
repz
mov
hlt
cmp
push
add
fdivrl
sbb
pop
pop
cmp
aas
dec
dec
sub
push
stc
mov
daa
ljmp
jp
sub
out
jp
dec
frstor
or
clc
test
push
test
xchg
sub
sub
shl
mov
sub
je
gs
fcomip
xchg
push
pop
lock
dec
in
jp
fwait
cmp
add
push
inc
fadd
jo
icebp
pop
inc
int
xchg
mov
cmpsb
cmpl
fwait
add
jmp
es
inc
stos
cmp
outsl
sub
mov
and
mov
cmp
push
aad
push
or
ja
inc
push
xchg
mov
ss
inc
enter
xor
cmp
xchg
dec
pop
add
fcmovbe
in
mov
mov
adc
and
jl
pop
push
pop
aaa
lcall
push
xchg
fwait
inc
fcomip
inc
dec
add
pushf
test
xchg
xor
mov
mov
push
inc
sub
inc
push
insl
pop
mov
xor
js
and
aaa
mov
push
mov
andb
stos
pop
dec
inc
pop
dec
jb
insl
fistpl
insb
popf
in
mov
lods
cmp
sub
adc
in
sub
notl
or
and
es
fisubs
pop
movsl
out
pop
jmp
cwtl
push
in
clc
jl
cmp
andl
adcl
add
cmp
clc
ljmp
pushf
inc
sbb
mov
jne
or
jge
js
nop
fnstsw
inc
mov
mov
pushf
mov
lahf
repz
xor
scas
sub
cmpb
cmp
test
xchg
xchg
mov
lock
adc
mov
int3
jp
jbe
in
fwait
dec
sbb
or
xlat
mov
decl
enter
dec
ds
push
mov
insb
aaa
std
cmpsb
in
test
sarb
clc
popl
sub
xorb
mov
popf
push
rorl
sbb
out
mov
jns
mov
inc
adc
ss
repz
rorb
insl
add
ss
xchg
xor
lds
lock
lods
pop
dec
out
in
andb
test
jne
mov
inc
enter
lods
xchg
or
fiaddl
sub
and
lods
inc
out
add
adc
daa
add
nop
mov
add
add
pop
cld
adcb
xchg
jp
pop
jb
inc
ljmp
orl
shrb
sub
xchg
imul
cmp
fidivs
fadds
in
or
lcall
jb
sbb
loop
and
push
loopne
gs
xor
push
adcb
xchg
sbb
test
xchg
xchg
dec
stos
adc
xor
mov
repz
jle
clc
es
push
xlat
daa
fs
add
out
test
jecxz
cmpsl
clc
cmc
add
cmpsb
or
test
std
cmp
fbld
loop
adc
or
add
sub
lock
dec
mov
rorb
movd
jno
inc
push
sub
andl
and
test
fucomi
and
cwtl
inc
fstpt
ror
lret
jmp
sub
repz
sub
sub
movsb
push
jb
sahf
mov
sub
mov
test
jle
push
enter
ret
cmp
jecxz
les
iret
push
add
cmc
outsb
repz
lahf
aam
xchg
aam
inc
mov
push
popf
cmp
dec
jmp
xchg
push
ret
call
cld
xchg
fwait
inc
test
je
fucomi
xor
not
lret
or
sbb
xchg
push
push
fiaddl
fsubrs
or
jnp
outsb
imul
es
or
xorl
shr
adc
jno
mov
fsubrs
sahf
adc
mov
push
mov
pusha
call
in
pmuludq
add
cmpsl
cmp
push
and
ss
adc
imul
fwait
scas
call
push
popf
fcom
dec
movsb
fucompp
mov
mov
shr
js
iret
fldcw
inc
xchg
rolb
sbb
adc
stc
dec
cmp
subb
insl
vmwrite
pop
hlt
mov
or
fisubl
mov
out
jg
int
pop
mov
cmpsb
cmp
mov
fisubl
sarb
shl
add
adcl
lock
pop
aam
aaa
and
sahf
or
dec
popa
lcall
push
mov
test
push
xlat
movsl
push
into
jle
cmc
mov
push
frstpm(287
add
outsl
push
jnp
popa
adc
nop
or
or
mov
inc
jle
mov
jne
xchg
lret
js
ljmp
mov
dec
mov
dec
out
fdivrs
or
ds
xor
inc
cwtl
pop
add
push
fs
dec
fisubrl
dec
repnz
add
jnp
rorb
gs
into
out
mov
and
into
aas
sub
repz
push
cmp
outsb
mov
in
pop
cmp
sbb
xchg
pushf
sbbb
subb
dec
sub
dec
ficoml
sbb
int3
dec
mov
push
mov
fsts
mov
and
lods
dec
pop
aaa
jne
ds
mov
cmp
xchg
mov
outsb
fs
xchg
sub
add
mov
out
fcoms
and
pop
xchg
mov
outsb
movsl
rclb
test
cltd
sub
mov
dec
les
das
stc
dec
xchg
imul
push
aad
push
addr16
mov
pop
ss
popf
cmp
jmp
pusha
jo
adc
sub
xchg
cmpsb
lods
sbbl
or
cmp
out
xchg
jnp
aad
cmp
out
add
mov
fisubl
or
scas
xchg
frstor
dec
push
sbb
pop
sub
mov
in
xor
pop
mov
daa
fidivrs
aad
enter
jge
leave
inc
sbb
pop
mov
fcoms
push
sub
mov
xchg
xchg
xchg
xor
pop
test
outsl
mov
pop
jo
xchg
aad
popa
int3
adc
aas
mov
or
gs
jl
cs
cs
les
inc
into
mov
fdivr
xchg
rorl
in
inc
sbb
jnp
mov
sub
jo
mov
cmpsb
cmpsl
ds
lds
leave
inc
fdiv
lods
push
lods
push
push
add
cmc
inc
sbb
sbb
lret
jecxz
stc
mov
inc
mov
jp
mov
leave
adc
cmp
jb
popf
dec
mov
std
mov
pushf
push
call
cmc
push
outsl
addl
cmpsb
fdivl
sbb
jg
jb
adc
test
lret
je
fbstp
mov
cmp
das
loope
sub
inc
and
movsb
fcmovu
aam
push
mov
imul
js
fidivrs
pop
pop
iret
and
sub
push
lods
mov
fidivl
mov
fstpl
aam
jge
sti
repz
cltd
test
js
insb
stos
insb
jmp
scas
pushl
lret
mov
cltd
aad
mov
mov
push
sbb
aas
and
subl
add
pop
push
sbb
sti
sti
popf
xchg
pop
fildl
inc
out
js
fidivl
lcall
into
xchg
jnp
stos
jmp
test
test
in
xchg
es
cli
aad
daa
arpl
dec
mov
mov
icebp
dec
dec
shrb
mov
push
pop
fildl
aad
sbbb
or
jno
mov
ds
xor
mov
mov
shrl
xchg
inc
push
and
or
cmpsb
or
and
outsb
imul
jg
cli
fwait
mov
xor
cld
jo
push
mov
inc
push
pop
out
xor
jbe
mov
mov
mov
lea
and
cs
cli
pop
pop
fwait
cmp
test
sub
dec
cltd
shrl
mov
pop
mov
xchg
lods
insb
or
jae
aam
dec
mov
cli
push
xchg
xchg
and
cmp
leave
jp
arpl
cmp
push
push
push
je
or
pushw
pop
imul
pop
mov
mov
jo
aaa
or
test
push
push
xor
push
fisubs
leave
push
pop
iret
dec
das
stos
sub
sbb
ds
lea
adc
cmp
in
movsb
roll
mov
mov
loope
xor
xchg
cmp
sarl
sub
and
pop
lcall
stos
jmp
jecxz
int3
cltd
mov
outsl
push
lea
test
insl
scas
lea
mov
push
mul
xor
clc
xchg
in
cmp
icebp
xor
nop
das
mov
les
pusha
imul
jle
adc
mov
mov
xchg
lods
dec
pushf
lock
std
in
outsb
outsl
sbb
cmp
lods
lods
jne
inc
cmpsl
or
bnd
je
das
aaa
adc
pusha
mov
lock
je
and
iret
arpl
cmp
push
mov
mov
pop
in
shrl
add
inc
test
push
test
movsb
push
stc
or
mov
mov
sbb
popf
or
add
xchg
inc
push
xchg
hlt
loope
rep
gs
leave
dec
pop
xor
sahf
nop
inc
enter
clc
sahf
push
pop
jecxz
jge
adc
add
ret
in
adc
mov
test
lahf
sarl
add
bound
dec
data16
mov
sbb
fldt
sqrtps
jl
outsb
or
add
mov
and
or
sbb
dec
mov
add
dec
mov
inc
cmpsl
movsl
cwtl
push
fcomp
rcr
dec
mov
pop
or
shl
out
xchg
cmp
repz
mov
out
xchg
mov
adc
shll
movsb
push
icebp
pusha
jno
lret
pop
les
mov
sahf
sbb
mov
add
mov
push
pop
stos
or
pop
jnp
cs
ret
movsl
cmpsl
sub
fldenv
test
xchg
icebp
sub
adc
das
ss
sub
mov
mov
fistps
rcrb
sub
jmp
inc
or
inc
mov
icebp
fstl
ljmp
jno
lcall
xor
xor
fwait
shrb
and
mov
idivl
lds
ja
ret
test
dec
call
shr
stos
push
ret
xchg
mov
clc
daa
scas
in
addb
or
repz
fstl
lock
mov
rol
ljmp
jnp
mov
mov
adc
mov
cmpsl
sbb
xchg
jb
add
popl
shl
xchg
pop
pop
adc
mov
and
lds
rolb
cmp
int
cmp
lcall
mov
mov
enter
xchg
pop
mov
mov
lock
pop
shr
push
mov
or
inc
sahf
mov
push
addr16
add
js
xchg
test
jnp
outsl
addl
add
fsubs
insb
jl
icebp
add
enter
pop
insl
xchg
aam
fwait
dec
push
out
jp
cli
inc
jg
test
jmp
insb
nop
sub
push
xor
pusha
push
dec
pushf
pushf
cli
and
mov
gs
xor
inc
test
mov
push
sub
or
lds
push
leave
pop
sub
ret
mov
dec
dec
in
jl
cs
aas
adc
push
pop
out
lret
push
or
pop
fadds
sbb
cmp
mov
lahf
out
bound
fstpl
scas
push
pop
jmp
movsb
mov
pop
adc
jo
lds
xchg
dec
std
dec
insb
xchg
gs
push
cs
dec
movsl
stos
js
fcmovne
scas
xchg
jbe
adc
cmpsl
in
les
xorb
mov
das
mov
xchg
dec
mov
rorb
push
repnz
loop
dec
sbb
xchg
vmovupd
jecxz
sub
stos
push
ret
jle
sarl
hlt
fdivs
jnp
popa
inc
in
cmpsl
je
jne
clc
xchg
adc
cld
enter
movb
js
push
insl
sbb
enter
cmp
mov
cmp
push
cmc
scas
and
mov
fimuls
imul
pop
jno
arpl
orl
adc
sub
inc
lret
lods
dec
lret
rorb
and
mov
pop
mov
sti
out
mov
insl
mov
jbe
add
cmp
ja
xchg
jne
dec
pop
mov
dec
outsb
fdivrl
loopne
push
jmp
aaa
mov
push
jno
leave
add
mov
stos
or
test
shrb
insb
test
xchg
test
push
outsb
call
push
cli
fdivs
sbbb
in
fistps
repz
lret
stos
dec
push
icebp
aas
jle
mov
push
and
adc
and
test
mov
adc
addb
or
lods
add
pop
mov
or
or
les
mov
inc
adc
sbb
push
xchg
lods
pop
xchg
sbb
fwait
or
inc
setne
push
push
cmpsl
out
inc
outsb
sbb
add
scas
adc
sbbl
repnz
dec
sub
rcrb
mov
jl
sarb
jmp
pop
lds
jne
shlb
mov
xchg
inc
data16
mov
out
xor
inc
rcrb
jbe
pop
shll
lods
xchg
repnz
xor
test
lods
inc
aas
xchg
cmpsl
int
jae
mov
xor
fidivrl
adc
pop
inc
sbb
dec
adc
ja
outsl
loop
sbb
pop
dec
push
cld
fwait
sti
xor
nop
stos
hlt
adc
mov
add
push
stos
in
std
mov
sub
pop
sub
lret
shl
out
clc
add
and
or
inc
int
fldt
sahf
fs
mov
in
inc
inc
and
and
cmp
cmpsl
sub
shrb
adc
addr16
push
push
jmp
or
push
fnstenv
or
ja
xor
sarl
shrl
jae
fdivrs
jp
mov
fsts
xor
dec
sub
repz
or
fidivl
fcompl
sahf
arpl
push
test
dec
shrl
mov
jae
sub
add
cmpsl
or
mov
in
lods
inc
leave
push
xor
mov
notb
pop
je
addl
pop
inc
fisttpll
xchg
xor
icebp
insb
push
iret
inc
idivb
mov
repz
out
sbb
clc
mov
dec
adc
int3
scas
and
pop
fisttpl
cmpsb
les
push
aas
push
jl
push
inc
mov
inc
sbb
add
add
add
pop
andb
rorl
mov
xlat
jecxz
jae
dec
jp
push
adc
sbb
rorb
push
loop
repz
mov
push
out
pop
test
cwtl
mov
sub
ljmp
sub
shrl
pop
js
jmp
push
stos
xorl
or
ja
sub
adc
push
mov
push
insl
cmp
pop
cmp
orl
sub
pop
lea
cmp
fsts
push
mov
xchg
test
jne
inc
call
jmp
sbb
pushf
cmc
fsubs
test
mov
push
out
stos
lret
enter
dec
aad
mov
adc
es
mov
xor
add
test
and
push
pop
jle
dec
cmp
adc
adc
std
mov
xor
dec
pushf
cmpb
adc
scas
cmp
push
aad
int
mov
mov
cmc
add
adc
mov
pusha
scas
xchg
xchg
cld
dec
sbb
ja
stos
es
mov
jo
inc
push
outsb
or
orl
std
xor
in
imul
mov
addl
and
fisttps
pop
jp
sub
test
mov
jp
mov
jb
push
jb
jb
xor
push
lea
xchg
pusha
negl
fisttpl
push
dec
sbb
jo
push
sub
xor
cs
rcll
int3
pop
ljmp
incl
mov
sti
dec
fld1
xor
insl
addl
mov
popf
leave
or
and
or
hlt
imul
and
push
sbb
lret
cltd
pop
arpl
dec
xchg
xchg
outsb
dec
jnp
fucomip
xchg
push
xor
stos
das
stos
or
pop
xor
stc
test
lcall
sub
adc
add
mov
mov
lret
loop
shll
pusha
and
mov
lret
cmp
add
mov
push
daa
xchg
xor
push
fisttpll
out
and
mov
mov
mov
push
divl
icebp
lahf
inc
movl
push
inc
orb
std
aam
xor
xor
jbe
push
test
jae
filds
out
pop
adc
das
push
sub
into
in
jg
mov
divl
inc
pop
in
hlt
fmuls
rorb
pop
inc
shlb
stos
pusha
pusha
inc
sarb
adc
xor
jmp
rorb
cmp
and
mov
pushf
cs
sub
adc
xor
jg
jae
and
adc
mov
xlat
jno
nop
ss
fnstenv
add
cmpb
clc
jne
sub
cmp
push
push
movsl
test
or
lret
mov
push
imul
xor
mov
test
inc
sbb
xchg
push
fwait
sti
sahf
nop
psadbw
js
xor
movsb
cwtl
push
in
dec
lds
inc
aad
push
stc
dec
jecxz
inc
out
push
decl
add
mov
mov
in
sahf
add
jmp
xor
int3
shrb
pop
sub
jnp
sub
dec
mov
inc
pop
popa
fistpll
cmp
mov
gs
inc
je
mov
int3
xor
cli
adc
pcmpeqd
mov
mov
mov
dec
pop
cmp
aas
jne
js
jbe
inc
mov
pop
push
ljmp
call
inc
aaa
push
dec
hlt
lods
add
fnsave
mov
jb
cld
or
mov
push
jb
sahf
aaa
dec
in
vsubpd
inc
fisubl
xor
pop
dec
push
pop
fdivrs
scas
pop
xor
or
mov
ja
mov
push
mov
pop
cs
das
stos
mov
insb
icebp
xor
add
mov
std
adc
lods
sbbl
pop
xor
and
imul
rcl
mov
icebp
pop
je
int
lret
jne
ja
jp
or
sbb
jno
cwtl
das
or
dec
fwait
into
sub
dec
imull
xorb
shlb
pop
xor
or
call
insb
fsubrs
or
mov
je
cmp
push
push
decb
jnp
xchg
lcall
adc
mov
sbb
lret
mull
lret
push
push
mov
fsub
mov
pop
inc
jne
cmp
loop
or
fidivl
pop
in
cmp
sahf
cltd
fdivl
lahf
in
xchg
sti
pop
or
idivl
mov
icebp
out
pop
adc
dec
dec
pop
jp
cltd
inc
lcall
xchg
insl
push
loop
mov
clc
pop
cmpsl
mov
iret
sub
les
add
xchg
mov
mov
cmpsb
cmp
jno
shrb
jmp
ss
push
inc
call
push
iret
dec
ja
loop
sbb
dec
add
push
dec
in
dec
mov
stc
stos
sbb
xor
sub
mov
dec
adc
jl
push
jle
sti
xchg
xchg
fcmovne
mov
sbb
pusha
testl
adc
mov
cmp
outsb
cmpsl
mov
lret
push
aad
cwtl
in
adc
xor
jno
and
mov
in
mov
cltd
mov
mov
lret
and
jle
sbb
fistl
addr16
into
jl
ret
loop
and
pop
cmpsb
cmc
pop
push
ficoms
jns
jne
test
adc
dec
jecxz
decl
shlb
mov
cwtl
mov
xor
icebp
adc
loop
xor
das
clc
dec
and
sub
mov
add
cmp
dec
popa
movsl
insb
aad
insl
push
cs
and
mov
sub
xchg
shrl
loop
adc
mov
xchg
cmp
jo
cmp
sbb
mov
add
mov
ret
add
jmp
subl
cwtl
cmp
jle
cltd
xor
fisttps
sub
inc
jno
add
addl
dec
push
or
mov
dec
jno
or
xor
enter
push
arpl
cltd
cmp
xor
clc
adc
jg
shrl
push
nop
adc
mov
in
lds
adc
rcll
xchg
sub
nop
insb
popf
lds
pop
lahf
and
insl
adc
ffreep
jl
les
lret
incl
jno
xchg
rclb
xor
aad
cwtl
sub
push
sbb
jg
out
mov
add
mov
sbb
insl
fdivs
int
jb
pop
outsl
pusha
aad
mov
xsha1
cmpsb
mov
testl
xlat
stos
jbe
fdiv
rolb
in
and
pop
ret
imul
ja
jno
in
gs
jns
inc
xlat
aaa
adc
jle
testl
mov
jle
mov
andl
mov
xor
outsl
in
loope
mov
xchg
or
or
add
sbb
movsb
jo
xchg
test
jb
outsl
jbe
in
mov
dec
fwait
or
inc
loopne
jb
push
cwtl
mov
inc
sub
enter
pusha
inc
inc
cltd
ffreep
loopne
adc
sbb
and
mov
or
push
push
jb
jns
and
cmp
out
ret
aad
shlb
xor
in
push
cmp
push
cltd
cmpsl
in
sub
sbb
sbb
sbb
pushf
mov
mov
decb
inc
lods
ljmp
xchg
pop
adc
int
and
loop
inc
lods
iret
ds
sti
fnstenv
test
rcrl
lret
jecxz
mov
push
js
mov
hlt
pop
call
scas
xor
or
sbb
in
jp
in
dec
in
dec
dec
push
test
pop
sub
jb
or
push
int
rcrb
xor
push
pop
insb
cmp
ja
faddl
mov
push
push
push
jl
test
sub
cmp
mov
cmp
fucomip
ret
adc
data16
mov
xchg
add
sbb
rsm
add
cmp
add
mov
push
xor
sbb
mov
xlat
adcb
test
lds
sbb
mov
mov
js
cmp
mov
sbb
mov
aad
inc
pop
sbb
mov
fdivs
add
and
push
sub
addb
jecxz
fs
outsb
and
add
sub
das
jne
or
push
sbb
mov
popa
adc
jno
lret
xchg
test
lret
and
cmpsl
jae,pt
xor
mov
imul
mov
xchg
dec
daa
jo
xchg
out
dec
popf
in
cmpsb
out
icebp
mov
jecxz
and
xchg
and
sbb
mov
fistl
int
test
mov
push
shl
aaa
aaa
adc
je
ds
pop
fnstsw
bound
into
xchg
sbb
lods
adc
pcmpgtw
cli
test
je
or
inc
dec
sbb
lret
insb
adc
aad
fadds
aad
mov
je
jne
xchg
mov
mov
push
popf
jg
test
mov
dec
jne
negb
mov
jmp
xor
cmp
sbb
xor
push
imul
ss
nop
in
lock
es
outsb
lods
imul
test
stos
in
pop
lods
xchg
sbb
mov
iret
adc
sti
in
push
lds
push
jne
pusha
fistl
sbb
cmp
jno
or
mov
into
cmp
loop
lret
mov
and
fsubrl
fs
dec
and
rclb
les
leave
rol
fisttps
xchg
cld
mov
rclb
sbb
sub
imul
cmp
fwait
mov
push
jae
push
xchg
fidivrl
jge
jo
jbe
jp
hlt
pusha
xor
push
rol
inc
lahf
out
mov
push
shlb
fisubrs
xor
jbe
insb
arpl
stc
clc
cmp
scas
aam
push
and
clc
mov
js
stc
and
inc
inc
dec
loopne
mov
dec
inc
cmp
jo
mov
in
adc
test
jb
and
sti
push
in
push
addl
lods
or
ret
mov
lcall
cld
sub
mov
xchg
pop
mov
mov
cmp
xor
jmp
mov
push
sub
inc
push
popf
adc
cwtl
xchg
pop
pop
pop
mov
jne
je
cld
mov
mov
sbb
dec
and
sbbb
jb
es
jnp
xchg
inc
test
cmp
xchg
jb
in
dec
int
sbb
jl
adc
loop
fs
xchg
mov
fnstsw
arpl
mov
sbb
lods
cmpsb
es
push
and
lret
in
pushf
nop
jl
pop
inc
addr16
xor
sbb
sub
inc
bound
les
jmp
fwait
sub
int
jno
inc
jecxz
movsl
adc
outsb
loope
mov
cmpb
rorb
inc
add
sub
ljmp
jns
stc
dec
fldenv
in
xorl
or
sarl
mov
pushf
cli
jne
jne
mov
jge
ja
xchg
add
jne
mov
ds
adc
lahf
push
int3
push
xor
jns
shl
xor
mov
dec
push
enter
test
inc
xor
lcall
clc
xchg
leave
inc
mov
gs
stos
data16
notb
push
cmp
jo
sub
fwait
add
adc
inc
cltd
lahf
rorb
push
sub
cmpsl
cmc
cmp
jp
mov
movsl
les
adc
sbb
jne
sbb
out
popa
mov
int3
pop
push
rdmsr
cmp
cli
das
add
or
inc
rcrb
sbb
add
add
dec
pop
std
gs
add
cli
movsb
jg
mov
cmpsb
jl
add
lret
fcompl
hlt
andl
cwtl
sbbl
std
and
pop
xchg
arpl
cltd
sub
dec
leave
fs
in
mov
insb
popf
pand
push
andb
jmp
dec
aas
push
out
in
sarl
dec
xorl
and
xor
nop
test
cmp
insb
adc
pop
xchg
inc
sub
adc
mov
lock
add
inc
inc
push
xorl
roll
or
icebp
push
pop
jb
push
and
js
movsl
mov
loope
push
fs
jb
push
xchg
pushl
std
stc
popa
das
shl
cmp
push
mov
pop
xchg
insb
aam
cmp
xchg
ds
mov
xchg
scas
fdivrs
mov
sub
adc
add
mov
mov
cmp
mov
and
xchg
jnp,pt
test
mov
inc
fcmovnbe
sub
fisttpll
and
sub
fcoms
xor
aad
out
or
mov
push
pushl
push
or
dec
mov
out
insl
decl
aad
std
cmpsl
xor
hlt
fs
test
idivb
fstpt
je
push
and
jecxz
xor
adc
testl
mov
add
cli
sahf
cmpsl
ret
xchg
and
push
ss
mov
bound
or
inc
testl
cmp
push
cmp
cmp
int
dec
pop
push
or
mov
fwait
inc
push
xchg
mov
test
cmpsb
gs
adc
pop
dec
cmova
cmc
pop
mov
xor
das
test
sbb
mov
pop
js
mov
pop
into
fildl
xchg
int
mov
add
xor
fs
pushf
jmp
ss
push
push
mov
ss
lret
les
fs
xchg
ja
pop
and
in
inc
fs
das
adc
xchg
es
fstps
xchg
sub
addb
mov
hlt
sub
jnp
cmp
mov
lea
shlb
pop
aad
hlt
mov
mov
daa
out
adc
iret
dec
test
xor
xchg
popf
sahf
inc
out
scas
arpl
pop
test
add
jo
xor
xchg
inc
fxch
sbb
out
pushl
les
outsl
or
sbb
sbb
xor
rcll
test
or
adc
xor
je
ljmp
in
xchg
add
mov
sub
jns
xchg
aas
jnp
add
nop
lret
repz
cmpsl
sub
into
pop
lret
mov
repz
cli
rclb
pop
lret
adc
cmp
jle
mov
jnp
sti
mov
or
push
adc
jb
insl
inc
pushw
cmp
sub
rcll
cmp
jecxz
xchg
fadds
dec
gs
mov
rolb
dec
testl
jp
push
mov
cmpsb
cmpsb
ds
out
pop
mov
mov
aas
push
sahf
pop
rcll
or
std
and
add
filds
mov
ffree
jae
insl
inc
dec
mov
cmp
int3
test
outsb
sub
stos
jne
cmc
pop
lret
adc
push
jmp
sarl
and
jbe
push
lea
clc
cmp
es
js
call
sbbl
pop
dec
xor
les
pop
lods
adc
into
jecxz
fstpl
negl
fwait
adc
cwtl
and
cmp
in
in
xchg
popa
decl
xchg
dec
test
mov
inc
jle
int
inc
xchg
shrl
mov
je
or
sub
dec
dec
int
dec
in
andl
mov
or
popf
xor
fisttps
push
add
cmp
fsubr
push
cld
and
fisubl
stc
jecxz
cli
stos
adc
test
leave
sbb
es
pop
or
xor
mov
fdivrl
xchg
jnp
mov
call
or
sub
movsb
mov
loop
dec
movsb
cmc
in
mov
sub
push
sbb
lret
andb
push
dec
stos
dec
pop
fldl
pushf
test
inc
nopl
je
cmp
test
dec
adc
mov
lods
test
fdivl
call
dec
loop
inc
lods
inc
imul
repnz
pop
jbe
aas
push
aas
lcall
pop
gs
out
icebp
bswap
enter
lea
lret
in
mov
lods
sbb
pop
mov
iret
ret
lret
mov
inc
cmc
push
inc
cmp
mov
or
pop
fcomps
pop
repnz
xchg
mov
outsb
cmp
cmc
and
clc
xchg
xor
movsl
insl
aas
lcall
cmp
mov
fdivl
jle
hlt
es
jg
int
sub
std
mov
inc
das
sbb
aam
rol
lret
cmpl
dec
sbb
push
stc
lock
xor
jne
cmp
adc
pop
xchg
je
adc
cld
pusha
ss
je
xchg
out
sarb
dec
mov
pop
sub
dec
stc
notb
cmpsb
aam
lea
jg
cmpsb
cmp
and
and
sub
pop
fs
nop
add
aad
jge
or
push
pop
rcrb
cmp
shll
add
mov
inc
out
adc
xlat
push
mov
push
jb
jg
lods
pop
arpl
jle
inc
push
adc
inc
insl
aas
hlt
pop
shlb
sahf
cmpxchg
mov
leave
lret
ss
push
std
xor
ss
xchg
das
cmp
loop
lahf
call
mov
xchg
mov
les
rol
cmp
mov
dec
ret
mov
push
ljmp
mov
stos
jl
fwait
popa
inc
fnsave
or
push
push
push
jbe
int
sub
rcr
lret
xor
loope
mov
cmp
and
xchg
mov
xor
inc
fisttps
inc
pushf
subl
mov
in
push
mov
push
stc
sub
cld
xor
scas
lods
sbb
fistl
jl
xor
push
and
dec
in
pop
loope
into
xchg
xor
push
cwtl
cmc
sbb
cmp
add
outsb
test
mov
add
inc
mov
fs
scas
imul
mov
push
and
dec
shrb
mov
addr16
enter
lods
shlb
fldenv
sahf
repnz
dec
jmp
mov
inc
dec
leave
adc
imul
adc
das
shlb
sub
scas
and
and
sbb
and
xchg
in
push
cli
aas
pushf
in
in
ljmp
push
pusha
ss
rcrb
imul
call
push
jg
mov
pop
sahf
jp
cmp
xchg
sbb
mov
dec
or
xchg
scas
fcoms
sub
add
ficomps
add
cmc
or
jne
and
add
gs
pop
push
lds
es
popf
add
mov
or
mov
xorb
jg
movsb
mov
addl
inc
push
inc
ljmp
lcall
ja
mov
jns
fidivrl
test
mov
cmp
shr
fldenv
in
aas
js
mov
adc
adc
or
mov
sub
push
flds
sarl
sahf
lods
lods
mov
int
fnstenv
mov
outsb
adc
jns
xor
add
imul
stos
xor
xor
or
xchg
rcll
test
ss
jae
xchg
push
fwait
mov
xor
cmc
imul
push
push
add
addr16
mov
sub
enter
mov
lds
fsubp
push
add
push
notl
jno
push
sub
bound
ljmp
gs
or
shlb
insb
pusha
mov
sbb
mov
aaa
push
xor
scas
inc
stc
jp
ja
sbb
and
sbbl
scas
in
loopne
stos
es
sbb
mov
test
jbe
pop
mov
jns
cmp
mov
lods
jmp
mov
fiadds
or
push
jne
adc
add
ficomps
mov
clc
push
inc
dec
ss
fldenv
int3
push
out
loop
pusha
ss
mov
lret
mov
ss
lea
loopne
mov
or
adc
or
loope
mov
out
mov
test
mov
add
sub
mov
cwtl
das
mov
mov
mov
test
xor
scas
fs
fnstsw
int
test
mov
or
or
call
inc
pusha
sub
and
xor
stc
jge
inc
pop
rolb
inc
mov
in
adc
push
mov
popl
outsl
jnp
cli
xor
shrl
xor
in
mov
rcll
jmp
in
pop
dec
decl
mov
test
mov
sahf
add
ja
scas
pop
push
add
dec
cmp
imul
xchg
call
and
test
jg
ret
stos
mov
pop
sbb
int3
xchg
pop
lock
das
movsl
mov
push
add
jmp
aaa
mov
mull
or
pushl
xchg
out
xchg
xchg
inc
mov
out
shr
inc
mov
push
pop
add
jl
jae
pop
jo
pop
nop
outsb
test
testl
jmp
mov
push
loopne
push
adc
xchg
adc
into
dec
sti
aaa
filds
pop
mov
test
mov
ret
mov
or
adc
das
pop
cmpl
inc
cmpsl
dec
clc
popa
cmpsb
in
dec
stos
outsl
inc
sbb
pusha
repz
mov
jg
test
lret
shll
fmul
mov
or
mov
cmp
mov
lods
push
in
ror
mov
iret
bnd
cmp
in
flds
ss
ljmp
in
out
cli
add
pushl
mov
push
jae
fs
dec
lret
ss
sbb
bound
pop
shll
cmp
int3
addr16
inc
push
lcall
push
stos
or
sub
faddp
ss
outsl
loopne
and
ljmp
orb
dec
cmc
jae
mov
jae
es
sbb
add
jo
movsb
cli
and
and
cltd
insb
js
lahf
adc
enter
xlat
xor
in
sti
movsl
add
addl
pop
xor
lea
leave
das
subl
cwtl
pop
mov
dec
bound
dec
lock
mov
dec
add
mov
jnp
daa
popa
loope
scas
or
or
imul
or
xor
stc
scas
or
sarl
mov
adc
or
je
loope
sub
add
ljmp
cmc
xchg
fidivs
or
dec
and
jge
mov
cld
pop
shlb
sbb
or
sub
pop
xchg
mov
and
out
test
xchg
fldenv
mov
jmp
sub
aas
dec
loop
xlat
aam
inc
out
cwtl
loopne
into
gs
jp
add
sub
outsb
lock
hlt
and
sbb
cmc
clc
addl
je
fdiv
xor
pop
push
icebp
adc
or
and
mov
push
stc
nop
sbb
or
leave
loope
cmc
push
lds
sub
movsl
mov
imul
lods
mov
push
jp
cmpsb
fwait
inc
aad
mov
jg
sub
add
cmc
rcrb
xchg
es
cmp
aaa
or
xchg
cwtl
pop
ret
addb
rcl
icebp
jo
jmp
rcrl
rcrl
jp
push
loope
cmp
cli
lea
nop
in
sbb
cmp
shlb
inc
jge
mov
adc
sbb
and
fnstcw
push
repnz
jns
lret
pop
out
push
sbb
idivl
test
xchg
mov
and
or
cmpsl
cmpsl
fcoml
add
mov
fsubr
cmpsb
outsl
sbb
roll
pop
jae
cmp
cli
xchg
cld
pop
mov
arpl
inc
and
or
mov
cmp
sbbl
sbb
inc
sub
xlat
repz
cli
or
mov
adc
xor
add
fsubs
mov
cmpsl
adc
lcall
cmp
outsb
mov
sarl
and
fisubl
dec
lahf
jmp
mov
add
xor
dec
jl
dec
imul
adc
mov
in
add
data16
push
fsubp
cmp
fcoms
or
mov
mov
dec
inc
imul
sarb
cmpsl
push
push
inc
pop
cmc
jmp
mov
mov
ds
stc
fsubr
aaa
sub
jb
mov
and
xor
ja
fsts
stos
adc
movsb
stos
add
pop
add
cmp
stc
xchg
movsl
mov
push
mov
add
dec
mov
mov
bound
stos
hlt
insl
or
scas
mov
cmpsl
lock
cmp
fcmovnu
cmp
lods
out
xchg
popf
cwtl
inc
into
cwtl
lcall
lods
jno
pop
inc
and
test
in
ds
int
sahf
out
jge
adc
addl
sub
aam
pop
fadd
mov
mov
sbb
cli
pushf
sbb
lcall
push
insl
sub
xchg
jge
stc
pop
sub
lock
push
lock
loop
dec
xchg
and
mov
xchg
testb
sahf
cmc
cmp
out
out
dec
lods
or
cmpsl
push
or
add
xchg
inc
fsubrs
scas
mov
jl
dec
fldenv
push
jecxz
mov
mov
and
mov
ja
mov
cmp
bound
into
sub
adc
fs
mov
pop
call
or
nop
pop
add
jbe
jno
shlb
adc
data16
loopne
xchg
push
das
pop
cmp
xchg
add
frstor
mov
mov
xor
inc
dec
hlt
jnp
jmp
push
enter
mov
mov
cld
cmc
mov
xor
dec
andb
insb
jne
pop
out
mov
stos
add
sbb
lods
jg
aas
scas
dec
jmp
out
mov
push
jle
dec
lods
dec
insb
fbld
sbb
mov
mov
pop
xor
pop
jae
movsl
cmp
cmpsb
sbb
ret
sbb
test
loopne
imul
imul
and
or
insl
loopne
int
inc
fs
inc
fimuls
jmp
jb
mov
cmc
stc
inc
out
in
push
icebp
push
pop
loop
adc
mov
push
ds
sub
rorl
mov
jne
cmp
dec
es
cmpsb
cld
cli
lret
mov
cltd
jge
gs
jp
inc
xchg
lods
inc
add
aam
lahf
sbb
lea
pop
jne
jle
mov
popf
adc
push
pop
jae
adc
stos
fsubr
sbb
sub
insb
push
fnstcw
lock
lret
jbe
mov
stos
inc
jg
insl
rcrb
xor
jns
jns
stos
mov
nop
sub
out
pop
sbb
pop
or
xor
mov
xor
fistl
ret
mov
mov
cltd
filds
cmp
lcall
rcrb
push
int
or
xchg
test
jbe
mov
mov
push
dec
movsb
jbe
inc
pop
sub
pop
outsb
inc
sbb
cmp
mov
arpl
loop
sti
adc
dec
fcomps
mov
xchg
cli
inc
or
inc
je
jae
nop
pop
sti
mov
aam
les
nop
cmc
sbb
sub
xlat
mov
push
adc
pop
sub
sbb
shlb
dec
and
mov
js
les
xchg
je
stos
pop
jns
push
dec
pusha
call
jg
dec
in
cmp
or
mov
lahf
scas
ret
sbb
cwtl
sbb
jb
inc
and
pop
imull
sti
mov
outsb
sbb
inc
dec
and
mov
inc
shrb
loope
dec
inc
xlat
cmp
js
adc
fsub
test
cld
stos
arpl
dec
push
jb
mov
mov
inc
scas
inc
clc
or
sub
jne
add
call
aam
jae
fcmovu
or
mov
add
mov
jnp
mov
test
pop
jge
cmp
lea
jmp
jb
mov
jnp
jl
xorb
sbb
push
sub
idivb
repnz
dec
dec
push
dec
sbb
push
mov
movsl
push
jecxz
mov
xor
mov
out
es
cltd
std
das
outsl
xor
icebp
mov
cmp
xchg
jns
fnsave
cli
xchg
aaa
gs
mov
out
pop
hlt
clc
lret
xor
callw
push
iret
xchg
mov
cld
and
xor
cmp
xor
push
xor
vpunpckldq
insl
push
mov
xchg
push
fbld
adc
or
ds
pop
divb
cmp
jl
mov
dec
pop
bound
sbb
shr
ja
rep
add
out
dec
jp
out
mov
daa
pop
pop
or
repnz
add
mov
mov
mov
sbb
rcrl
psllq
pusha
mov
sub
mov
mov
mov
push
addr16
jo
or
in
fnstsw
xchg
insb
fsubrs
xor
xchg
out
sbb
packssdw
mov
fs
loope
jle
fwait
shll
repz
jmp
imul
mov
jmp
daa
push
pop
or
push
xor
push
mov
fcmovbe
ret
fdivs
pop
scas
jp
pop
jp
mov
add
cltd
inc
add
imul
ret
pop
test
hlt
dec
sbb
xor
popf
je
jecxz
ljmp
and
std
rclb
fldt
mov
inc
inc
xchg
int3
pushf
std
cmp
fisubs
ljmp
xchg
xchg
pusha
add
ljmp
and
xchg
jmp
dec
rol
in
mulb
ds
lods
aas
sbbl
jb
scas
cwtl
sti
push
pop
jge
in
out
repz
iret
cltd
rclb
xchg
out
mov
fstp
mov
cmp
into
fcoml
xchg
call
lret
xor
fstpt
xor
mov
ret
shll
leave
shll
and
push
adc
test
sbbl
imulb
sub
mov
les
call
cli
mov
xor
sbb
mov
aas
cmp
xchg
imul
cmp
push
pop
decl
xor
out
mov
shrl
add
xchg
pusha
and
mov
mov
pop
outsb
mov
in
jae
push
push
cmpsl
jbe
in
mov
cs
sub
xchg
cmc
mov
iret
fildl
mov
pushf
lods
sub
mov
repz
das
dec
mov
xchg
and
push
daa
add
push
hlt
ret
xor
xor
scas
inc
lret
xor
int
and
movhps
mov
fnstenv
pushf
repz
lret
mov
mov
cmp
dec
imul
movsl
push
xchg
lret
into
loop
ret
sub
movsl
sub
insb
dec
lock
pushf
cmp
and
push
aad
icebp
or
pop
iret
pop
aad
fbld
jnp
xchg
in
cmp
movsb
dec
inc
lcall
movsb
jo
mov
sbb
loopne
ds
stos
push
jnp
sub
imul
in
inc
or
fwait
aad
dec
stc
xor
ljmp
ja
jno
lods
outsl
sub
push
pushf
push
clc
hlt
inc
cmpsl
and
movsl
movsb
ljmp
leave
add
sub
jns
sbbb
pop
arpl
into
mov
xchg
data16
int3
stos
je
cmpsl
mov
popf
stos
ss
pop
ret
pop
test
dec
add
repz
mov
stc
out
sahf
push
mov
out
mull
sbb
push
cwtl
xchg
pop
mov
popa
nop
sbb
out
imul
dec
jmp
jmp
out
adc
sbb
jge
cmp
cltd
mov
adc
sub
dec
gs
jmp
pop
js
ficomps
mov
in
push
inc
movsl
imul
pusha
or
in
cmp
ja
imull
sub
adc
mov
jne
or
imul
sbb
rolb
outsb
aad
lods
pop
mov
aas
stos
xor
test
pop
imul
fs
and
jo
call
sub
push
pop
cmp
iret
ss
jbe
dec
inc
push
stos
out
test
mov
push
jecxz
push
sbb
mov
pop
sub
or
push
sub
xchg
pop
rorb
in
xchg
mov
adc
negb
sub
divb
scas
in
sbbb
cmp
inc
or
ror
outsl
lret
icebp
mov
push
cmc
fbld
jo
jl
pop
mov
mov
sbb
adc
adc
fs
push
or
adc
xlat
mov
test
mov
sub
sti
pop
xor
xchg
xor
int3
popf
in
lea
call
fdivl
loope
sbb
push
bound
sub
xchg
aaa
out
cmp
popa
jbe
xor
mov
out
loop
push
sbb
adc
or
mov
cltd
jb
out
inc
inc
into
mov
xor
mov
dec
lcall
daa
aam
or
lret
and
lods
andb
sub
push
mov
cs
cltd
sub
rorb
mov
jecxz
push
jp
mov
popf
dec
pushf
inc
repnz
push
dec
jp
push
mov
andl
xchg
mov
in
add
push
mov
fwait
outsb
fiaddl
dec
fs
rcl
cmp
popa
mull
nop
dec
imul
xchg
inc
adc
pop
popf
aam
xlat
in
jo
dec
loope
jge
rcrb
push
push
xor
push
ficomps
roll
dec
es
ss
clc
mov
inc
push
lret
arpl
pushw
mov
and
sbbb
int
es
jo
sub
add
dec
push
insl
jbe
mov
lea
adc
lds
shl
icebp
adcl
ljmp
repnz
or
jmp
mov
call
int
and
orb
xchg
add
sbb
xor
arpl
movsb
mov
gs
add
xor
mov
sub
mov
jmp
inc
insl
in
pop
jp
inc
inc
cmp
dec
xchg
insl
mov
ret
repnz
test
dec
pop
out
pop
stos
mov
int3
divl
sub
shl
pop
cmp
sbb
xlat
sbb
mov
outsb
or
sti
mov
lahf
add
outsb
jecxz
popf
ss
bnd
add
push
or
loope
call
dec
adcl
pop
mov
mov
jae
testb
and
data16
dec
xor
dec
adc
mov
inc
push
push
push
xor
vhaddps
lods
dec
cld
xchg
jl
mov
lds
pop
cmp
jno
scas
jb
adc
xchg
sub
lds
aad
rcrb
outsl
push
xlat
xor
lods
js
out
mov
mov
jb
mov
xchg
imul
je
sub
mov
loopne
imul
in
mov
in
test
or
js
xor
fsts
push
roll
test
cltd
outsl
pop
cmp
sub
jbe
add
or
mov
ds
inc
fistpll
jp
leave
xchg
mov
cmp
imul
pop
dec
sub
inc
popa
cmpsb
sbb
outsb
jno
movsl
cmp
mov
je
test
xchg
mov
lods
jg
loopne
cmp
push
push
dec
stos
inc
pop
pushf
cli
xlat
lahf
leave
push
xchg
je
sti
out
fbstp
in
out
sub
mov
lods
or
pusha
popf
out
jb
push
xchg
inc
scas
test
mov
and
pop
lods
mov
bound
sbb
addr16
cmp
inc
or
dec
jo
out
test
push
fcmovu
repz
dec
fs
inc
sbb
cmpsb
xchg
scas
mov
testb
les
lret
filds
and
push
in
mov
imul
dec
mov
cmp
cmp
imul
lahf
test
or
add
movsl
inc
add
inc
push
stos
jge
dec
scas
push
mov
sbb
mov
dec
outsl
jns
pop
mov
jae
mov
or
in
jle
daa
mov
push
mov
sub
ds
xchg
jp
pop
cmp
cmp
fldl
push
sbb
push
xchg
divb
add
or
dec
rorl
xlat
aam
sub
mov
cmovg
jl
dec
repnz
les
push
std
in
adcb
scas
push
push
and
dec
push
je
xchg
adc
inc
stos
jno
cmp
shl
mov
push
pop
in
cmp
add
mov
lods
fmul
int3
push
push
cmp
push
mov
into
les
or
xor
push
inc
dec
jmp
lods
inc
and
lret
add
inc
xchg
inc
pop
fcomps
fcomp
icebp
cmp
push
inc
jmp
pop
dec
and
insl
cld
das
xchg
mov
and
dec
jne
fnstsw
clc
ret
xchg
push
enter
std
rorl
movsb
jmp
mov
cmp
mov
mov
cmp
out
orl
je
ds
es
pop
add
cmp
in
rclb
jmp
jbe
fs
mov
or
lods
shr
fstpl
mov
and
push
roll
movsb
icebp
ljmp
cmc
mov
data16
shr
adc
insl
test
lahf
mov
jp
mov
aas
faddl
bound
jae
sub
sahf
lret
and
inc
out
push
sbb
inc
cs
loopne
mov
pop
jl
cld
lods
addb
dec
rcrb
and
and
call
or
adc
pop
sub
cmpsb
inc
in
sbb
jecxz
bswap
mov
ljmp
mov
or
lods
in
adc
orl
push
iret
sub
or
das
xchg
mov
or
jle
data16
cwtl
push
push
in
cmp
push
sarl
lds
in
lods
cmpsb
adc
data16
adc
mov
data16
in
mov
xchg
lret
xor
mov
xchg
dec
stc
pop
cli
ja
roll
add
movsb
xchg
movsl
std
push
mov
mov
inc
popf
sti
xchg
movsb
pop
or
and
pop
cmpsl
xchg
dec
sbb
cwtl
fsubl
adc
bound
dec
push
fucomi
xor
xor
mov
jp
pop
jecxz
daa
imul
es
je
std
cmp
out
in
lcall
adc
icebp
or
adc
push
xlat
mov
inc
nop
clc
shl
cmp
lds
lods
test
inc
or
ret
mov
pop
jns
enter
stos
xor
orb
std
jae
stos
xor
mov
lods
sbb
dec
sahf
sahf
jnp
ja
movsl
jl
mov
lcall
cwtl
call
push
cmpsb
pop
imul
xor
cmp
cld
mov
jg
push
rolb
cmpsl
pop
stos
lea
sbb
sti
push
adc
fisubl
test
fimull
test
std
lock
arpl
cwtl
scas
mov
mov
and
ret
out
in
stos
leave
lea
push
stos
dec
cs
pop
mov
mov
push
clc
lret
adc
xchg
xchg
push
icebp
gs
push
repz
js
inc
add
fnstcw
push
adc
insl
fisttpll
push
dec
mov
icebp
movsl
rclb
mov
add
arpl
gs
inc
pop
jmp
rclb
mov
in
int3
arpl
cs
filds
xorl
sbb
mov
rorl
push
mov
lods
in
in
stos
mov
lock
adc
or
inc
sbb
xchg
push
in
popa
mov
lds
push
mov
movsl
sbb
pop
das
addr16
pop
jnp
cmp
mov
in
cltd
ds
out
loop
sti
push
adc
sbbb
in
or
js
add
gs
pop
icebp
sbbb
or
and
pusha
stos
add
sub
inc
xchg
mov
fmuls
lret
insl
shrl
dec
sbbb
jecxz
adc
test
loop
cs
add
cmp
adc
or
jno
push
nop
test
sbb
push
jecxz
and
pop
jmp
aad
ljmp
clts
popf
sub
pop
dec
and
jle
int3
pop
push
loop
lret
adcb
mov
sti
js
dec
mov
out
ret
fstl
mov
je
pop
outsb
inc
pushf
int3
sti
fwait
std
stc
out
imul
mov
repnz
insl
clc
jge
out
cwtl
and
or
in
cli
sub
jge
inc
cltd
fidivrs
inc
cltd
push
popf
mov
cmp
sbb
cmp
cmp
insl
idiv
fidivl
pop
fidivs
fimuls
sti
ljmp
movsl
call
adc
dec
test
pop
icebp
aaa
cli
push
pop
push
repnz
mov
fmull
in
in
aad
cmp
das
fdivrl
ficoml
jmp
push
push
iret
fwait
shl
sbb
mov
mov
insl
adc
lods
fnsave
in
xor
fldenv
cli
hlt
testl
in
mov
add
das
mov
push
mov
ss
outsl
push
das
pop
lea
push
add
and
push
out
out
ss
insb
and
mov
jmp
pop
dec
mov
loope
and
cmp
add
mov
push
fistl
cmp
pop
adc
repnz
clc
outsl
out
outsb
lret
out
dec
pop
pop
or
subb
daa
adc
insb
movsl
data16
pop
in
inc
out
test
xchg
xchg
scas
mov
out
push
out
gs
ljmp
pop
dec
and
xchg
or
inc
mov
into
xor
imul
call
or
xchg
ret
dec
loope
nop
stc
test
pop
das
push
not
mov
mov
out
mov
nop
push
movsl
jo
push
xchg
jnp
sbb
std
imul
cmp
das
inc
dec
adc
in
addb
pop
loop
imul
push
mov
dec
loopne
idiv
popf
aad
addr16
push
cmp
sub
sub
les
dec
inc
and
ret
pop
push
dec
arpl
mov
push
addr16
mov
movsb
cmp
aam
xchg
and
sub
enter
and
inc
or
pop
icebp
push
fcmovnb
lods
sbb
jns
push
cmpb
push
xor
jle
xor
sbbl
push
xor
leave
cmp
push
out
es
mov
leave
mov
add
inc
xchg
inc
push
mov
int3
fcomps
mov
imul
outsb
dec
es
mov
mov
in
testl
je
movsb
ds
lds
and
dec
std
ds
pop
xor
add
mov
xor
xor
in
aaa
in
ds
inc
lock
test
test
notl
push
lock
xlat
cmp
or
or
mov
test
or
jmp
lea
mov
lcall
lcall
mov
sub
daa
outsb
mov
mov
dec
lret
sbb
sub
insl
fists
fs
pusha
mov
mov
or
xchg
pop
vpextrw
lds
sbb
idivb
jecxz
sub
xor
jecxz
add
addr16
and
sbbb
sbb
inc
and
push
push
inc
out
adc
push
inc
push
and
and
pop
lcall
adcl
jb
ja
out
ret
stos
imul
insb
and
ffree
jno
rcr
or
leave
pop
dec
dec
sahf
cmc
xchg
xor
jge
movsl
inc
pushf
push
insl
inc
insb
fbld
inc
jbe
push
mov
fsubrl
xor
int
sar
or
mov
mov
pusha
nop
inc
stos
roll
test
dec
and
rclb
xchg
fdivrs
jbe
shll
loope
pop
in
inc
aas
in
mov
data16
mov
cli
mov
jecxz
outsl
and
loop
mov
ja
sti
ljmp
iret
fsubr
sbb
mov
jno
sbbb
inc
adc
cli
pop
cli
push
cmp
dec
loop
aas
adc
or
mov
mov
pusha
adc
leave
outsb
in
pop
out
add
cmp
sbb
mov
daa
rclb
jbe
mov
sub
fsts
cmp
or
addl
js
mov
or
push
ja
pop
es
inc
pop
incb
xchg
lods
xor
sub
dec
add
stc
sahf
pop
das
rcr
dec
sbb
insb
jge
push
mov
xor
dec
call
push
sub
inc
fimull
and
jae
shrl
data16
shlb
leave
cs
div
cmp
ds
xchg
leave
jae
jl
xor
xchg
imul
movsl
sub
sbb
pop
in
pop
mov
js
jge
adc
adc
aaa
fs
push
das
inc
pop
movsb
jno
and
cmpsb
dec
insb
xor
mov
add
lret
mov
add
cli
pusha
and
xor
inc
mov
ffree
dec
mov
fcoml
sub
inc
or
in
arpl
out
movsl
ret
addr16
push
aaa
pushf
or
add
stc
test
leave
jmp
or
push
xchg
in
inc
sbb
xchg
lock
orl
stc
repnz
enter
cmpsb
jnp
lret
cwtl
pusha
jl
xchg
pop
pop
xor
cmp
jmp
mov
dec
es
cmp
add
sbb
enter
or
aam
in
call
stc
mov
imul
stc
pushf
mov
dec
inc
push
mov
or
add
mov
fistl
mov
pop
mov
das
js
add
jb
xchg
pop
loopne
add
test
ds
mulb
sti
mov
mov
test
mov
mov
jne
rorl
mov
leave
xor
push
pop
xor
cmp
or
sub
movsb
cltd
xchg
mov
ficoml
in
mov
je
mov
mov
jb
arpl
adc
dec
cmp
sbb
sbbl
mov
std
jo
xchg
insb
cli
addr16
pop
dec
aam
insb
decl
out
cld
stc
and
mov
popf
lea
xchg
add
sub
lods
ret
cmpsb
ret
jns
xor
mov
xchg
adc
push
mov
dec
imul
inc
in
cltd
stos
aas
and
pop
pop
xor
lahf
mov
xor
inc
leave
aad
rorb
vmovdqu
icebp
sbb
mov
mov
push
push
scas
lock
xor
leave
and
inc
push
jno
mov
shlb
mov
int
stos
mov
fwait
jmp
mov
xchg
mov
mov
fcoml
das
inc
cmpl
roll
sti
and
ret
pop
testl
cmp
shrb
mov
mov
cmp
pop
sub
daa
add
insl
and
jae
mov
cmpsl
pop
test
rcll
icebp
or
ss
xchg
jne
js
dec
in
inc
push
and
int3
fidivrs
ret
ja
aam
fidivs
mov
dec
dec
pop
dec
add
xchg
jae
sub
cmp
add
sbb
pop
lret
stc
push
jo
mov
sti
xor
test
hlt
ret
push
xor
dec
shl
cli
lret
dec
bnd
fstl
push
sbb
sarb
pop
lock
inc
push
lods
jne
ja
fwait
pop
jle
add
ljmp
or
push
sub
pop
imul
inc
push
jle
mov
test
xchg
das
mov
mov
bound
adc
dec
jo
jbe
mov
inc
adcl
outsb
cmp
jne
fistpl
test
adc
dec
dec
jno
jnp
lds
fnstcw
dec
mov
test
decb
ljmp
mov
popa
lock
adc
cwtl
lret
aaa
jne
test
fnsave
idivl
push
daa
insl
adc
inc
push
int3
clc
les
out
fnstsw
movsb
jmp
in
jns
jecxz
leave
test
bound
xchg
adc
xchg
xor
jg
test
lret
ret
and
xchg
xchg
jnp
add
mov
push
cld
cltd
push
lret
xor
enter
aas
int
gs
add
jo
inc
xchg
jl
hlt
fstpl
push
sub
and
mov
dec
es
dec
fimull
cmp
hlt
fsubrl
roll
and
or
jmp
sbb
jbe
loope
shlb
jmp
fsubl
push
loop
call
rolb
jns
inc
cmp
mul
ret
sbb
and
imul
icebp
add
inc
xor
test
call
xchg
in
dec
loopne
mov
movsb
jns
mov
sbbl
mov
push
lcall
add
leave
shll
adc
test
xchg
mov
add
push
and
mov
fwait
adc
cmc
ds
lcall
fisubrs
std
cmpsl
sbbl
dec
dec
adc
aaa
clc
aas
outsb
inc
lcall
nop
cmp
out
sahf
insb
js
ljmp
mov
repz
mov
xor
pop
jne
mov
mov
loope
vpminub
arpl
sti
movsb
and
es
gs
inc
or
sbb
mov
or
arpl
scas
les
push
test
sbbb
push
push
movsb
sbbb
icebp
sbb
xchg
loope
mov
data16
or
push
cmp
movsb
fucomip
jne
cmp
rcrl
cmp
pop
bound
lahf
or
cmpsb
shll
xchg
mov
mov
ret
xor
outsl
ss
or
leave
stos
movsb
dec
or
test
ret
add
jae
hlt
movsb
push
mov
imul
movsl
pop
and
movsl
xor
bound
sub
sbb
call
ss
xchg
jae
xchg
lods
icebp
call
dec
pop
push
sarl
mov
inc
sbb
mov
outsb
add
clc
test
mov
das
push
mov
dec
sbb
jle
inc
sub
xchg
fsubl
cmpsl
xor
je
fmul
push
pop
lcall
and
cmpb
pop
push
inc
pop
jbe
into
and
icebp
cmp
lods
xlat
outsb
sbb
popf
lods
aaa
subb
xorb
mov
lcall
std
inc
cs
push
aam
je
sahf
cmpsl
ss
inc
and
int
fdivrs
bound
shlb
push
jne
imul
and
nop
xchg
jo
les
push
jmp
inc
mov
mov
jae
rorb
dec
dec
jecxz
jns
addr16
mov
loopne
loope
xor
cmp
jns
xchg
xchg
push
push
cmc
ret
aaa
sbb
std
cmpsl
add
inc
stos
jge
loopne
xchg
out
push
add
mov
mov
iret
xchg
cmpsl
dec
cmp
mov
in
sub
mov
fistl
jne,pn
loope
inc
inc
lahf
test
outsl
mov
xchg
mov
mov
xor
mov
pusha
daa
ja
fwait
and
push
fabs
test
int
mov
inc
aad
dec
sub
jo
mov
and
insb
ljmp
dec
andb
out
insb
shlb
aad
mov
ret
popl
test
xchg
sub
popf
jbe
add
mov
pop
fnstsw
outsl
pop
shll
out
out
xchg
or
push
jns
sbb
cwtl
dec
push
out
add
xor
push
push
dec
int
jae
lret
movsl
es
lret
push
fs
lahf
fistpll
jl
lcall
inc
lcall
ljmp
mov
pop
jb
mov
fdivrs
adc
mov
jge
fsubrl
imul
in
jns
icebp
mov
dec
test
xchg
rclb
enter
push
movsl
rcr
movsldup
jns
pop
decl
arpl
iret
aas
mov
int3
daa
lret
and
inc
adc
cmpb
xchg
adc
ror
lret
inc
push
pop
mov
push
mov
shlb
int
rclb
ret
mov
and
mov
adc
mov
sbb
pop
cmp
fdivrl
dec
jbe
bound
jbe
mov
push
ljmp
xchg
pop
sub
out
in
xchg
repz
cs
push
sti
movsb
xor
cwtl
jo
xchg
leave
mov
mov
in
inc
push
inc
int
push
loop
xor
adc
xchg
cmp
dec
movsb
insl
in
xchg
in
push
pushl
inc
jmp
cmp
push
cltd
out
push
dec
mov
mov
lds
jg
push
and
lea
out
popl
fst
mov
in
ja
hlt
out
add
scas
stos
push
hlt
push
sub
cli
push
dec
pop
ret
xchg
js
jo
daa
iret
ds
dec
popf
int
bound
sbb
les
pusha
mov
mov
insl
cmc
jg
xchg
lods
fsubrs
mov
and
and
mov
jo
and
cmc
imul
fistl
pop
jge
enter
fwait
lret
ret
das
into
jb
aad
data16
cmp
popf
lods
pop
xor
push
movsl
hlt
lock
adc
test
xchg
orb
sub
loope
frstor
xchg
adc
add
shr
mov
mov
ds
cmp
gs
lds
inc
inc
cwtl
add
ljmp
xor
mov
rcrl
inc
xchg
mov
cs
sbb
repz
xor
fidivs
sbb
testl
mov
xchg
jl
pop
jne
fstps
adc
adc
test
mov
inc
das
inc
jae
mov
in
pop
cmpsb
roll
sub
mov
cmp
xchg
lods
pop
inc
cld
add
stc
or
inc
push
outsl
xor
lret
js
xchg
test
mov
in
movsl
inc
icebp
mov
push
dec
pop
fiadds
sbb
add
sub
je
pop
int3
fwait
das
ljmp
adc
and
test
cmp
es
push
jae
jo
dec
cmc
mov
lods
pop
mov
mov
shlb
cmpsl
fadd
scas
popa
cmp
cmc
clc
mov
mov
adc
jge
ret
imulb
jl
pop
iret
jecxz
imul
cld
cmpsl
movsb
sub
and
push
sti
push
insb
xchg
es
aad
leave
cltd
cld
idivl
je
xchg
enter
xchg
fildll
inc
mov
mov
dec
stos
sub
jle
rclb
test
xchg
cmp
das
adc
sbb
cmp
fs
icebp
cmp
push
jnp
js
adc
fucomi
xor
mov
push
test
cli
scas
jbe
js
cmp
ret
mov
cmp
aam
dec
hlt
cmp
pushf
cld
push
dec
inc
repz
das
popf
jnp
inc
dec
icebp
sbb
loope
arpl
iret
or
add
xor
or
pop
push
sub
outsb
push
sub
stos
mov
pop
add
andl
mov
inc
xchg
pushf
dec
out
adc
pop
mov
mov
or
pop
xchg
jl
or
dec
mov
test
hlt
les
xor
outsb
js
pop
mov
inc
cld
mov
lret
divb
or
mov
lcall
cwtl
mov
imul
mov
decb
xchg
pop
sub
mov
adc
addr16
adc
scas
jp
adc
ficompl
pop
push
pushf
sub
xor
xor
rcrb
dec
out
pop
fstpt
in
xor
in
out
mov
push
cmp
jmp
gs
or
xchg
shr
int3
pop
repz
push
cmc
push
es
aam
and
aam
jb
or
sub
ret
out
sti
or
imul
dec
mov
jmp
sub
lods
jg
add
cli
dec
push
mov
in
xlat
popa
lret
xor
fsubrs
xchg
int
xchg
div
mov
cmp
lods
ljmp
out
repz
lret
stos
movsb
ret
push
enter
xor
cltd
fwait
testb
testb
xlat
popa
in
jnp
leave
cmpsb
xor
jg
add
aaa
push
and
xor
in
stos
mov
shr
inc
outsb
mov
popf
push
mov
pop
lds
dec
dec
or
in
sub
insl
cltd
test
ljmp
popa
jno
xchg
jge
enter
xchg
call
leave
lods
loopne
lahf
stos
jnp
lods
cmpb
mov
adc
enter
ret
or
daa
lcall
arpl
mov
pop
shlb
push
jb
push
push
dec
mov
sbb
stc
inc
fucomip
inc
int3
rcrl
into
xchg
xor
add
jle
add
or
cmc
pop
popa
scas
mov
cld
lahf
shrb
sbb
push
sub
lock
and
push
movsl
rolb
test
fisttpl
hlt
stos
lea
negb
shl
aad
int3
jae
in
fsincos
test
mov
inc
jb
mov
jne
fstps
or
mov
sub
jb
pop
sub
inc
lods
push
fisubrl
xorl
jg
call
sbb
icebp
iret
pop
out
xor
mov
ret
adc
mov
adc
add
sbb
adc
sub
std
jno
xor
ljmp
add
lods
out
mov
repz
adc
inc
mov
shrl
push
sub
inc
fbstp
adc
dec
or
cmpsb
repz
sbb
cmc
xchg
out
cmpsl
loop
xchg
push
jae
mov
mov
and
push
add
scas
mov
inc
into
fstl
ret
xchg
xor
pop
mov
je
jge
mov
jo
add
push
in
imul
dec
and
rclb
ss
fnsave
repnz
fnsave
cmpsb
cmp
add
into
pop
sub
push
mov
jle
jp
push
xor
test
jnp
loope
push
jno
add
lea
outsb
fwait
ret
jg
pushf
insb
outsl
and
pop
mov
rclb
fidivl
xor
lahf
ss
lods
inc
data16
test
mov
ja
lea
jg
and
daa
stos
cmp
outsl
out
fcomi
std
add
jnp
sub
inc
mov
rcl
imul
jno
in
jns,pn
push
pop
sub
cli
mov
mov
inc
or
out
cmp
fsubrl
mov
out
mov
adc
test
jp
jo
add
faddl
xor
push
cmp
popf
scas
push
mov
xor
subl
adc
sub
add
stos
add
sar
add
icebp
mov
mov
xor
cmp
pop
daa
sbb
and
pop
ficoms
pop
outsb
mov
sti
mov
fcmovb
mov
pop
and
dec
adc
loopne
incl
xor
cltd
lock
addb
or
inc
xchg
mov
sub
out
jg
pop
or
shrl
rcl
jne
popa
bound
mov
jb
mov
xor
mov
dec
sub
cmp
insb
mov
ss
sub
jno
inc
into
gs
jg
ret
frstor
clc
test
dec
adcl
das
scas
inc
adc
jmp
jb
insl
into
fadd
mov
lds
hlt
inc
push
insl
jnp
xor
addr16
push
rol
push
inc
jns
stos
add
push
push
sti
rcrb
push
stc
and
adc
sbbb
cmp
leave
dec
dec
push
into
push
outsb
std
jp
adc
and
inc
adc
inc
imulb
mov
jmp
sbb
lods
mov
inc
pop
pop
sub
adc
popf
cmpsl
and
jns
into
fistpll
std
test
cli
daa
mov
test
push
test
insb
sub
les
orl
push
adc
mov
ret
fsubrs
and
jnp
stos
mov
mov
sub
enter
test
fdivl
inc
xlat
popa
and
pop
je
decb
dec
push
dec
jbe
repz
dec
lret
fiaddl
fwait
out
jo
fsubrs
test
xchg
mov
jbe
out
pop
lods
or
push
aas
push
lahf
or
add
sub
in
sti
mov
add
faddl
push
dec
push
sub
ret
imul
sbb
adc
mov
adc
shll
lods
mov
push
hlt
mov
xchg
inc
stc
addr16
lahf
jmp
rol
add
sti
mov
stc
pushf
xchg
cwtl
xchg
mov
mov
les
test
sub
mov
scas
or
mov
push
sbbl
popf
xor
jb
adc
pusha
push
push
ds
das
jno
sarl
xor
mov
orl
arpl
fidivs
jmp
inc
fisubs
and
ja
addl
add
mov
sub
pop
mov
clc
mov
test
dec
hlt
push
leave
xchg
pushf
jae
inc
fsubs
xchg
testl
iret
dec
in
mov
in
call
xor
xor
cmp
push
out
sub
mov
sub
cli
test
jae
neg
jno
adc
sbb
data16
aaa
mov
mov
and
sbb
cmp
mov
pop
push
in
mov
je
pusha
jle
jo
inc
add
pop
jae
add
les
mov
in
sub
cwtl
ret
xor
sbb
rorl
clc
fstpl
xchg
int3
iret
fwait
inc
and
jle
mov
mov
xor
inc
popf
arpl
push
mov
rolb
push
shl
outsl
add
lret
movsl
pop
aas
and
jmp
aam
dec
cwtl
add
pop
icebp
out
jle
jns
push
xchg
add
adc
cltd
stos
xchg
xor
push
dec
mov
call
dec
push
ret
add
test
out
aaa
out
cmp
pop
pop
cmp
lcall
cltd
jle
mov
imul
scas
inc
hlt
jno
mov
sahf
int
dec
pop
xor
outsl
insl
jmp
inc
addr16
test
into
cltd
in
jbe
mov
mov
add
es
xchg
je
cli
push
decl
jb
jl
lret
push
jne
cmp
in
push
pop
bound
arpl
mov
test
mov
in
push
popf
pop
dec
ficoml
mov
in
jo
and
add
test
pop
lahf
or
fwait
add
xchg
fdivl
dec
test
cmp
xor
out
xchg
fisttps
pop
mov
out
push
stos
push
scas
push
jg
in
bound
pop
in
jae
out
lods
shrl
in
cwtl
cmp
mov
test
jbe
or
mov
outsl
mov
fdiv
lret
xchg
test
xchg
sub
and
je
and
rcrb
xchg
out
or
jecxz,pn
stos
std
push
push
imul
add
jecxz
popf
dec
fstl
out
stc
ret
jbe
xor
imul
and
inc
test
mov
jne
pop
popf
xor
sub
or
mov
adc
in
mov
pop
mull
jle
mov
stc
lds
das
lds
xchg
and
notl
cmp
cmp
or
dec
cmp
adc
out
shrb
dec
xlat
lea
mov
fwait
hlt
push
lret
sbb
push
dec
dec
ficoml
cs
mov
out
mov
mov
inc
mov
insb
push
add
mov
xchg
push
xchg
enter
out
ret
lret
das
dec
dec
push
frstor
je
dec
orb
clc
sahf
cmp
daa
sub
aad
lahf
sbb
repz
clc
mov
movsb
in
lods
lock
xchg
add
jp
and
jne
and
lds
xor
push
xor
cmp
test
adc
mov
jb
aad
imul
inc
mov
ss
mov
faddl
mulb
pop
scas
out
add
push
popa
mov
iret
loope
jo
andl
or
and
rol
sub
jecxz
pop
clc
rcr
enter
pop
movsb
push
adc
adcb
stos
dec
repnz
loop
jle
xchg
mov
mull
out
mov
aad
adcb
pop
jne
mov
stos
sub
xchg
or
xor
jp
loop
sbb
jle
cltd
insb
aas
jbe
pop
sarb
rcll
sbb
in
sbb
pop
mov
pop
mov
pusha
sub
push
cld
lcall
mov
pop
sti
clc
sahf
xor
jno
and
adc
sbbl
adc
mov
mov
push
adc
rorl
lods
pop
xlat
sbbl
mov
lods
push
insl
push
cmp
andl
lea
call
xor
rol
xchg
mov
ret
nop
mov
mov
movsl
fadd
and
push
cmp
fs
dec
mov
sahf
push
insb
iret
mov
or
cs
or
xchg
out
adc
cmpsl
adc
cli
and
movsl
notb
fisttpl
lahf
loope
xchg
sbb
mov
imul
sbb
cmpl
pop
and
push
andb
jl
icebp
and
xchg
add
mov
lret
xchg
dec
frstor
or
popf
pop
inc
mov
scas
mov
neg
mov
cmp
fs
in
jns
dec
imul
and
sub
std
aam
xor
push
loopne
mov
cwtl
test
fldt
cmpsb
add
pop
leave
int3
cmp
subl
enter
push
fdivrp
mov
xchg
fdivrp
dec
sbb
xchg
adc
incl
mov
arpl
adc
push
xchg
mov
sbb
cmp
popa
sub
mov
pop
aaa
das
sub
and
cmp
pop
iret
xlat
jmp
daa
loopne
push
adcb
pop
sbb
sbb
xlat
clc
mov
adc
push
es
xchg
cmpsl
fnstcw
mov
sub
jle
outsl
mov
xor
outsl
lret
dec
push
sub
hlt
sub
xchg
jge
shl
inc
decb
rorl
popa
loope
cmp
in
filds
inc
jmp
cltd
xor
cmp
xchg
loope
popf
aam
scas
jb
shr
sti
scas
xlat
mov
scas
sub
in
jb
stos
sub
das
scas
sbb
stc
or
jle
into
jmp
pop
in
push
shrb
jmp
cmpsl
jnp
lock
cmpsb
loopne
xchg
es
pop
popa
sbb
lahf
int
test
mov
out
mov
xlat
repz
mov
mov
push
clc
xchg
xor
mov
inc
cmp
push
in
dec
fmulp
xor
mov
loopne
dec
ror
mov
jl
cmp
inc
push
shll
or
scas
pushf
cli
test
mov
mov
pop
imul
lock
dec
mov
push
xchg
fistpl
outsb
or
cmp
xchg
sub
pop
test
add
add
mov
push
jb
je
push
xlat
pop
lods
outsl
adc
shlb
jge
inc
jecxz
aaa
xchg
popa
push
adc
into
in
xor
inc
pop
add
sbb
mov
test
push
push
scas
push
dec
push
sub
mov
repnz
jl
movsb
es
sub
cmpsl
cmp
dec
pop
push
dec
loop
mov
cmpsb
adc
xlat
out
jae
mov
adc
mov
call
cmc
das
xchg
bound
or
aaa
xor
inc
push
push
lret
push
mov
xor
cmc
xor
es
ja
jo
into
push
dec
fcmovnb
outsb
shrl
dec
aas
addr16
mov
enter
test
cmc
lods
push
mov
push
cli
cltd
je
jecxz
pusha
xchg
pop
sbb
xor
mov
push
ret
mov
sbb
inc
add
adc
sti
idivb
in
rcrl
cmp
adc
sub
add
add
mov
lods
sub
repnz
pop
adc
dec
enter
jo
add
sahf
xor
dec
mov
aad
divb
cs
movsb
cmp
mov
push
lahf
ret
jbe
call
sub
mov
stos
dec
xchg
jle
in
mov
add
mov
sbb
test
mov
cmp
pop
jle
fs
std
mov
fiaddl
inc
and
xchg
sahf
in
mov
mov
in
loope
shlb
adc
cmpsl
mov
popa
jns
cli
sub
sub
dec
loopne
pop
lret
pop
pop
daa
addr16
jmp
or
sub
aam
cmpsl
test
cs
arpl
in
arpl
mov
pop
inc
xor
inc
adc
jne
mov
jge
aas
adc
out
mov
push
shl
adc
lcall
add
jmp
xchg
jnp
dec
sub
lea
cmp
xchg
negl
rol
mov
jge
xlat
mov
cld
xchg
or
mov
sarl
sbb
les
xchg
xor
sub
jb
movsb
lret
data16
inc
jne
fwait
jbe
push
push
or
out
mov
xchg
inc
std
enter
push
call
test
lock
add
jbe
subl
lret
xor
sub
test
inc
in
sahf
sbbb
push
or
aaa
and
xor
inc
mov
xchg
xlat
test
testl
inc
lds
lret
mov
sub
loop
idiv
xchg
sub
scas
jp
sarb
insl
iret
add
jnp
push
mov
popf
mov
cmp
dec
push
out
fnstsw
mov
loop
fcomi
and
out
push
lcall
pop
insb
sub
pop
leave
pusha
into
testb
pop
add
sbbl
inc
pop
pop
sub
test
imul
add
cltd
ficompl
push
inc
insl
fnstcw
iret
push
xor
ljmp
js
sub
adc
sbb
jmp
jae
and
aam
jp
icebp
mov
xchg
mov
fistpl
xchg
out
pusha
lds
xor
sub
mov
popf
out
mov
push
dec
xor
or
jp
popa
pop
in
dec
pop
out
shrl
cmp
dec
lea
cs
dec
loopne
jecxz
insl
imul
mov
cmpsb
jl
jnp
rcl
icebp
aam
ds
add
or
push
and
repnz
out
sub
mov
pop
enter
les
loop
cli
jp
and
push
mov
push
cmc
cmp
mov
dec
fidivrl
outsb
out
pushf
jle
adcl
jmp
sub
add
adc
testl
and
cmp
sub
push
fsubrs
test
mov
adc
shll
push
sbb
mov
in
das
xor
xchg
add
mov
pop
outsb
stos
jo
loop
iret
scas
cld
jge
mov
jl
mov
loope
pop
out
and
flds
xchg
hlt
scas
stos
pushf
out
test
jnp
adc
imul
pop
dec
hlt
inc
fnstenv
enter
aas
mov
push
dec
add
xchg
jo
cltd
add
movsl
xor
aad
push
mov
imul
leave
pop
aad
subps
mov
jo
pop
ror
push
punpcklbw
call
and
xor
push
hlt
std
inc
and
push
or
mov
mov
test
addr16
sub
fstp
adc
cld
inc
mov
jg
popf
add
repnz
inc
popa
sbb
xor
sub
in
cmp
cld
mov
cs
cmc
adc
mov
scas
push
arpl
inc
cmc
inc
mov
push
orb
jle
mov
sub
ret
jge
je
jle
cmp
xchg
dec
test
lahf
lahf
pop
icebp
rol
fsubrl
scas
js
xchg
sbb
rolb
jp
pop
call
inc
sbb
fdivrl
stos
scas
aaa
mov
push
ffreep
stc
add
or
ds
push
cmp
dec
pop
xchg
inc
addr16
std
mov
pop
cmc
lea
loop
in
add
adc
divl
enter
inc
pop
sbb
sub
nop
fmull
loop
mov
xchg
imul
jns
pop
sbb
pop
enter
jp
pop
lods
jae
mov
mov
je
shrl
shll
fimuls
pushl
cmp
push
inc
xor
pop
sub
or
cmpsl
icebp
std
push
dec
outsb
inc
mov
xchg
iret
or
aaa
into
push
bound
icebp
sti
aam
adc
sbb
or
and
push
clc
mov
pop
bound
sbb
daa
out
pop
hlt
std
aaa
mov
in
pop
stos
aam
push
push
popa
movsl
sbbl
push
dec
jecxz
shll
cld
ljmp
pop
movsb
cmp
movsl
ret
nop
sub
stc
test
pop
jb
test
movsb
jp
inc
stos
leave
adc
dec
xchg
lods
mov
pop
stos
aas
dec
call
fisubrl
cmp
add
push
xor
filds
out
pop
pushf
inc
inc
out
cmc
jge
adcl
add
ret
sbb
mov
dec
pop
lcall
fbstp
in
cmp
cmc
mov
add
ljmp
fstpt
push
add
jp
mov
xchg
push
fidivl
insl
inc
or
lods
inc
les
outsl
test
mov
mov
and
adc
daa
outsl
inc
mov
inc
push
xchg
jp
pop
and
mov
stc
xchg
add
insb
pop
and
aaa
mov
jmp
push
pop
sub
dec
mov
outsb
enter
inc
jmp
xor
fmull
pusha
mov
mov
xchg
rcrb
sub
pushf
mov
out
out
aam
push
or
mov
jecxz
notl
jge
ds
negl
dec
xor
or
dec
repnz
xchg
hlt
sub
stc
adcl
mov
stc
int3
fcmovu
lret
sahf
inc
aaa
xchg
sub
fldl2t
mov
adc
add
pop
add
dec
cmp
mov
mov
rep
aad
jmp
pop
rep
mov
bound
mov
add
xchg
ficompl
movsl
cmp
cltd
shrl
lahf
cmp
ret
dec
mov
dec
iret
push
jg
mov
inc
lds
shrl
and
in
lea
ret
cli
add
fnsave
es
push
adc
sub
jb
lds
fsubr
inc
dec
rcll
sub
jno
icebp
dec
neg
out
test
outsb
add
mov
sub
dec
push
fcomi
roll
dec
push
or
mov
cmp
movsb
jnp
in
cmp
mov
ret
mov
xor
mov
mov
push
push
jp
mov
repnz
ret
jg
mov
inc
popa
cmp
out
push
jmp
int
stos
jbe
test
cmc
into
xchg
sub
outsl
sahf
ja
mov
jns
stc
clc
into
push
fsts
fnstcw
push
add
out
cli
jp
aaa
xor
incl
mov
and
push
jae
lret
test
mov
sbb
push
in
jne
cmp
pop
aad
jle
push
call
fldcw
stos
dec
push
xor
pop
test
add
cmpsb
jns
sub
mov
xlat
lock
js
push
dec
in
dec
aaa
std
push
lock
clc
xchg
inc
mov
pop
ja
pop
imul
mov
popa
imul
lahf
stos
sbb
call
mov
sbb
ja
cli
push
jp
cld
jns
mov
fcompl
fwait
in
sbb
sbb
cld
pushl
jb
dec
cli
mov
mov
shrl
jae
mov
pop
adc
insl
in
movsb
idivw
xorl
jno
in
out
xchg
mov
pop
jbe
adcl
cltd
mov
lds
sahf
out
jno
lods
cmp
imul
jg
jp
push
in
scas
push
xor
inc
dec
xchg
sti
xchg
shrl
lods
mov
ds
pushf
sub
fdivrp
adc
pop
adc
mov
dec
arpl
in
mov
in
xchg
fst
fwait
and
in
mov
cmp
inc
or
adc
xchg
push
jns
xchg
scas
jnp
xchg
fimuls
popa
dec
mov
or
sahf
pop
push
fdivp
mov
je
sbb
xchg
cmp
loope
repz
and
das
test
imul
shr
sbb
push
sbb
mov
jle
lahf
stos
and
jg
sahf
insb
xlat
or
mov
orl
mov
cmp
mov
jp
call
or
mov
mov
bound
add
and
jb
popf
outsb
sub
xchg
repnz
gs
push
push
testb
cmpsb
adc
arpl
pop
lods
movsb
sbb
divb
or
sbb
sbb
add
push
xchg
in
ja
jmp
mov
jno
xchg
adc
or
xor
pop
repnz
or
enter
sub
in
inc
test
lea
les
and
cld
pusha
in
and
xchg
pop
mov
bswap
inc
je
dec
mov
fmuls
iret
jb
jle
inc
mov
sbb
mov
adc
clc
inc
mov
pop
mov
add
fwait
out
insb
repz
std
ds
sahf
inc
adc
icebp
rcr
pop
cmc
or
jl
mov
xor
fwait
and
popa
lods
in
int3
jmp
decl
sbb
xor
shrl
mov
inc
test
cmovp
sub
adc
mov
push
sub
jno
fcmovbe
sub
pop
xchg
mov
jp
jo
push
sub
sub
pop
sti
not
sub
xchg
mov
mov
cmpsl
pop
lahf
pop
or
lock
lds
das
loopne
pop
aad
push
jbe
pop
fwait
xchg
push
lcall
cmp
sub
pop
dec
sbb
inc
cwtl
jbe
daa
mov
dec
das
bnd
lds
stos
pop
xor
mov
fucom
in
cli
orl
xchg
hlt
xchg
fsub
dec
les
cmc
addb
push
insb
mov
jb
xor
jns
dec
loope
cli
fnstenv
sub
mov
loop
add
mov
xchg
xchg
arpl
adc
mov
cld
ds
or
jns
lret
cmpsl
test
and
xlat
push
in
outsb
fisubs
mov
push
sub
add
test
sub
or
mov
push
mov
add
pop
iret
push
or
xchg
lcall
loop
dec
push
outsb
test
or
or
sbbb
pusha
psubd
ja
inc
pop
clc
push
add
fs
sub
cmp
lret
testb
sti
outsl
leave
mov
testl
iret
enter
out
int
mov
frstor
jnp
sbb
mov
les
movsw
sbb
jle
sub
andb
jg
or
pop
aas
lea
clc
mov
ljmp
dec
mov
decb
or
xor
xchg
adc
cs
cmp
xchg
sbb
mov
cmp
sub
lds
cmp
dec
xchg
andb
mov
jp
or
das
mov
popa
mov
test
cs
lret
dec
adc
loope
dec
in
mov
mov
inc
push
inc
in
fstpl
cmp
scas
out
pop
hlt
ss
dec
mov
pop
dec
sti
dec
inc
pop
mov
scas
dec
iret
cmp
iret
mov
or
lcall
push
inc
leave
loope
and
mov
sbb
push
sarb
mov
jb
int3
cld
rorb
add
push
je
sub
push
and
jge
shl
data16
bnd
insb
jge
xchg
pop
iret
jno
or
dec
mov
sub
inc
sub
js
pop
add
mov
and
clc
dec
jmp
outsl
jns
addr16
insb
mov
pop
les
xor
sbb
fistpll
aam
mov
mov
inc
mov
inc
adc
insl
add
std
xor
out
add
testb
cmpsb
mov
arpl
dec
jecxz
add
lods
fnstsw
mov
insl
cmp
mov
jnp
pop
jb
and
repz
xchg
scas
and
stc
loopne
sbb
iret
stc
nop
add
pop
insl
or
sbb
mov
pop
pop
add
cs
push
fsubrl
fsubs
inc
lret
les
in
lcall
or
das
out
lds
test
sbb
adc
dec
mov
xor
loopne
adc
in
or
push
cwtl
mov
xor
sbb
lods
popa
dec
jno
pop
insl
xchg
outsl
rclb
fsubrs
adc
std
lret
sub
or
ss
daa
mov
arpl
xchg
faddp
out
or
dec
inc
mov
sub
jecxz
sbb
add
jecxz
test
xorl
cmp
sbb
jcxz
inc
fnstcw
incl
inc
sarl
push
cmp
adcl
dec
jnp
adc
fsubrs
adc
mov
xor
hlt
mov
or
dec
sub
jnp
sbb
jnp
cmpb
push
dec
scas
mov
cltd
pop
mov
xor
push
push
out
adc
jne
aad
adcl
mov
loopne
pusha
dec
or
jge
xchg
sub
mov
popa
or
mov
sub
dec
fcmovnb
xlat
sahf
xchg
pop
cli
mov
es
adc
or
sarb
adc
int3
js
add
pop
or
add
push
movsb
movb
cmpsb
sub
pop
ret
jecxz
out
xor
add
or
ja
or
push
push
xchg
fistpl
xor
mov
add
sarb
shlb
push
or
xor
sahf
lock
xor
dec
daa
repz
xor
je
lahf
push
iret
ljmp
sbb
je
jns
fnstsw
frstor
fs
xchg
sub
sti
pop
mov
sbb
and
or
loop
push
out
push
jg
insb
mov
pop
push
sub
sub
lods
mov
hlt
pop
jp
jp
mov
inc
dec
push
ljmp
cld
inc
scas
lea
loopne
push
sarb
shr
movsb
pop
bswap
fcoms
sbb
in
or
lock
add
pop
in
push
adc
xchg
sbb
icebp
mov
mov
cmc
or
cmp
inc
jmp
mov
adc
ret
test
loopne
sbb
mov
into
cmp
pop
cmp
xchg
pop
and
mov
mov
into
sub
cmpsb
insb
shll
xor
clc
pop
jmp
imul
shr
sub
xor
test
inc
add
push
dec
xchg
pop
push
sbb
mov
adc
fcmovbe
or
cmpsl
movsl
cmp
pop
mov
in
or
fists
mov
sub
pop
push
out
mov
push
popa
popa
xor
mov
or
mov
cmp
out
pop
dec
dec
or
cmc
jge
shrl
sahf
jle
shlb
xchg
imul
dec
mov
mov
mov
jbe
pop
ja
loop
push
jge
xor
sub
pop
xchg
push
insb
jl
jb
pusha
int3
inc
mov
mov
fdiv
jg
fnstcw
sbb
insb
cmp
cmp
daa
or
sub
jp
adc
pusha
sub
add
mov
decb
mov
stos
addl
data16
cmp
adc
sub
repnz
ljmp
push
mov
xchg
and
jb
push
out
outsb
ljmp
sarl
movsl
adc
push
xchg
sti
sti
sbb
mov
inc
pcmpeqb
rolb
scas
push
imul
adc
jo
mov
mov
fcmovnb
pop
bound
xchg
pop
dec
in
cmp
cli
cld
pop
inc
data16
shll
and
das
mov
jne
fbld
repnz
scas
and
jnp
inc
test
or
out
stos
test
or
mov
xchg
mov
pop
shrl
adc
xchg
dec
xchg
pop
lcall
and
push
out
xchg
subb
dec
inc
jecxz
inc
push
ja
xchg
imul
aaa
outsb
dec
ja
outsl
xchg
mov
std
dec
sbb
jp
fdivs
cmp
popa
insl
clc
notl
pop
repnz
cmp
inc
fsubl
or
push
std
fmuls
cli
jmp
nop
test
fnstenv
fucomi
add
xor
aas
rolb
in
into
es
out
out
push
jns
test
xorl
mov
je
aam
mov
cmp
and
cmpsb
or
push
pop
lods
mov
xchg
cmc
mov
test
dec
loope
and
sbb
inc
inc
adc
jne
sahf
xor
sbb
out
inc
ss
mov
enter
mov
adc
fisubs
mov
pop
xchg
inc
pop
lds
dec
lods
lock
and
jae
cmp
ret
hlt
jbe
push
adc
pop
je
xor
outsl
cmp
xchg
sbb
scas
inc
mov
cmc
pop
jecxz
out
inc
inc
or
inc
and
lods
loope
popf
push
sub
jb
mov
jno
mov
iret
xor
js
leave
iret
xchg
mov
insb
mov
sub
imul
xor
mov
ret
outsb
sub
rcrl
dec
or
jge
je
orl
mov
inc
sbb
scas
loope
int
jle
stc
mov
jbe
dec
jmp
addr16
cmp
loope
inc
dec
ja
xchg
shrl
mov
insb
mov
add
int
xchg
sub
mov
rcr
stos
adc
lret
aas
leave
mov
gs
aas
loope
out
add
mov
jl
fisttpll
out
cld
and
jns
je
push
movsl
scas
lods
shll
sub
push
lret
addr16
cmc
mov
cmp
enter
push
hlt
outsl
cmpsl
push
cwtl
jo
dec
insl
icebp
adc
adc
repnz
out
xchg
or
movsl
cwtl
fmuls
sub
cmp
adc
pop
inc
dec
sbb
jge
cwtl
das
test
inc
mov
ret
cmpsb
jno
fsub
cs
jne
nop
sub
push
in
xor
sub
sub
xchg
dec
clc
pop
sbb
ret
push
test
dec
and
ljmp
out
lcall
and
pop
mov
cmp
repnz
xor
jecxz
pop
fimull
test
in
mov
bound
lods
push
inc
lds
and
xlat
push
xor
fnsave
jg
and
sbb
jecxz
mov
jno
aaa
cmp
repnz
in
rcll
pop
mov
or
outsl
inc
fwait
and
adc
arpl
mov
nop
out
dec
outsl
nop
iret
xor
es
and
xor
ljmp
pop
cmc
test
sbb
ds
xor
xlat
xchg
fldcw
sahf
adc
pop
stos
test
outsl
sub
popa
xor
xchg
inc
inc
pop
jp
stc
popf
js
rcrl
lods
push
stc
test
and
fisubl
inc
stc
cwtl
test
mov
and
xchg
mov
out
test
shlb
jl
add
ror
outsl
or
jg
push
fnstenv
mov
testl
dec
jno
fsubrl
int3
lods
inc
jae
call
jmp
outsb
call
cmp
sbbb
out
stc
xchg
fisubl
aaa
pop
popa
xor
dec
mov
shl
xchg
stos
inc
mov
int
xchg
out
mov
neg
sbb
push
sub
es
js
cmp
mov
neg
jno
inc
test
loope
in
test
int
je
sub
add
adcl
cmc
jmp
enter
scas
jae
filds
lcall
cwtl
xor
loopne
mov
aaa
pop
scas
jo
fldl2t
jns
psadbw
mov
outsb
popl
mov
leave
sub
push
fdivrl
fs
xchg
fidivs
sbb
sbb
repnz
ds
push
sub
repz
sbb
repz
cmp
int3
xchg
jnp
mov
lret
cld
xchg
adc
cwtl
dec
pop
lret
stc
or
fwait
lods
ss
ja
cmpsb
pop
jne
add
sti
sbb
or
sub
jbe
lea
nop
lahf
xlat
test
mov
push
xor
or
fistpl
and
jmp
inc
mov
mov
cmpsl
push
or
cmp
and
mov
inc
adc
mov
push
and
lcall
inc
mov
cs
pop
roll
popf
hlt
jbe
push
lods
rol
jge
add
jl
jno
mov
dec
cmp
xchg
inc
aam
imul
add
test
inc
push
mov
lret
xchg
jecxz
sub
pop
mov
pop
in
jbe
out
xlat
outsl
dec
sar
or
cmp
loope
jne
mov
sub
ja
insb
cmc
sbb
cs
xchg
in
mov
mov
pop
mov
push
aaa
loope
loopne
dec
sub
dec
outsb
xor
pop
push
push
pushf
sub
shll
xchg
sub
jnp
inc
testl
and
pop
mov
mov
scas
inc
roll
stc
mulb
xorb
pop
out
mov
cmc
es
sbb
sbb
sbb
jns
xlat
sub
adc
adc
js
pushf
jo
pop
mov
nop
lods
testl
movsl
fistpl
dec
ja
mov
jg
add
jne
xlat
adcb
out
data16
jae,pn
dec
mov
mov
fadds
xchg
xor
mov
lahf
fstpt
mov
fnstcw
adc
push
sbb
outsb
add
and
inc
inc
xchg
mov
ja
into
rcrl
insl
out
xchg
lods
inc
mov
shl
dec
pop
lods
sub
and
xchg
push
push
in
push
loope
add
dec
lods
movsl
xor
fnstenv
lret
xchg
mov
jmp
rcrb
push
out
jmp
ret
jle
js
jb
ret
mov
jmp
dec
jnp
dec
cltd
mov
bound
stc
inc
filds
push
stc
es
fsubr
loope
xor
add
sbb
lahf
stos
adc
or
out
scas
pop
pop
or
daa
inc
xchg
jnp
fsubl
test
sbb
int3
andl
push
ss
or
mov
pop
pusha
xor
lods
xor
aad
adc
or
or
adc
rclb
mov
adc
inc
stos
ret
push
and
test
hlt
out
mov
lods
inc
outsl
outsl
jo
mov
call
stos
xchg
jbe
inc
pushf
add
pop
shl
inc
jmp
jns
jbe
ret
jmp
enter
push
cmp
add
scas
jge
xor
sbb
push
xor
inc
iret
fnsave
fwait
icebp
push
push
mov
xchg
and
mov
dec
incb
and
cmpsl
jbe
push
out
ja
setge
xor
pop
mov
jno
movsl
adc
sarl
and
dec
fisttpll
adc
into
xchg
popf
or
rorb
sti
xor
mov
mov
adcl
cmpsl
xlat
mov
inc
out
cs
lods
sbb
mov
gs
mov
push
jl
jne
mov
lcall
cs
cmpsb
ss
std
stos
dec
mov
dec
mov
mov
push
out
aas
rolb
imul
bound
mov
fldt
stos
jbe
dec
fidivrs
or
in
inc
xchg
add
shlb
sbb
adc
jnp
and
jle
imul
jg
mov
lea
mov
bound
xor
adc
jo
push
jmp
jno
aas
jae
jmp
add
mov
xchg
lods
sahf
mov
dec
pop
cld
jp
jecxz
inc
xchg
cmp
icebp
sbb
call
fstps
movsb
vmovmskps
sub
pop
icebp
pop
or
mov
pushf
push
mov
fdivs
imul
adc
cltd
inc
rcll
in
inc
xchg
gs
push
jo
pop
addl
dec
adcb
shrl
mov
movsl
icebp
pop
ja
adc
insl
xchg
pop
sbb
pop
repnz
sti
loope
xor
push
sti
cwtl
xchg
scas
sub
dec
sbb
adc
int3
xchg
loopne
xchg
xchg
mov
push
scas
mov
ljmp
or
inc
ja
jns
daa
cld
cmp
mov
adcl
and
mov
outsl
cmpsl
xor
and
test
adc
add
rcl
fnstcw
mov
add
jbe
or
sub
adc
and
add
cmp
jle
inc
pop
or
leave
dec
sub
sub
sarl
add
test
sub
lahf
idiv
xor
es
cwtl
inc
push
mov
subl
push
mov
inc
push
lock
cwtl
out
xchg
or
enter
repnz
lcall
push
repz
rcll
cmpsl
or
scas
inc
in
sub
lods
pop
or
notb
fisubrl
int3
fadd
lret
cmp
addr16
rcrb
pop
out
scas
inc
mov
push
movsl
fdivs
push
cmp
loopne
fiadds
test
xor
pop
or
xchg
xchg
btc
sbb
arpl
dec
str
cmpsb
imul
mov
scas
inc
ret
shll
filds
cwtl
mov
movsb
lcall
ds
pop
jae
js
sub
sub
orl
add
dec
mov
popa
jnp
lods
iret
test
lcall
imul
lock
scas
cmp
nop
jg
inc
jno
out
mov
fdivrs
into
mov
int
sbb
dec
int3
pop
xor
inc
pop
cmpl
sub
pop
ljmp
jmp
popa
loope
sub
mov
movb
ret
jp
fsubs
adc
dec
shlb
orl
es
shll
or
fidivl
std
stc
aam
jmp
push
or
out
jo
push
rcll
subl
data16
fldt
dec
sub
rorl
dec
inc
bswap
pushf
cli
pop
add
js
mov
mov
mov
jns
ret
mov
clc
jg
ret
mov
cmp
mov
loopne
push
mov
test
cmp
incl
cli
fwait
xchg
xchg
cltd
jmp
cmc
xor
xor
push
cwtl
sub
repnz
mov
mov
and
dec
sbbl
mov
loopne
add
or
push
xor
fdivrs
enter
sub
lods
dec
or
stos
pop
sub
or
das
cmp
cmc
add
lock
mov
adc
mov
lock
mov
pop
xor
cwtl
fs
call
xchg
sahf
test
and
in
mov
es
enter
or
stc
aaa
xor
loopne
pop
sbbb
mov
sub
dec
mov
into
inc
scas
fsubrs
popa
xor
scas
mov
dec
dec
cli
aaa
nop
mov
mov
mov
cwtl
test
inc
lds
mov
pmulhuw
notl
xchg
movsl
xchg
push
in
mov
repz
loop
sub
push
loopne
ret
cmp
iret
pop
xchg
cli
add
xor
jbe
pop
xor
push
fldl
in
or
addb
jecxz
movsb
mov
inc
pop
leave
xchg
enter
loope
add
fs
lods
jns
adc
jl
push
mov
addb
cmp
imul
sub
mov
or
testb
xor
or
dec
pop
pop
rolb
mov
pop
movsb
iret
ret
dec
lret
jecxz
and
mov
mov
dec
addr16
es
jns
mov
sbb
xor
push
icebp
nop
inc
pop
lret
xor
lahf
mov
sub
and
mov
cli
out
pop
movhlps
dec
repnz
inc
in
imul
mov
loope
rcrb
out
push
in
pop
popa
push
jmp
mov
adc
or
and
xlat
jb
sbb
inc
sbb
loopne
repz
dec
ret
jecxz
rclb
loopne
push
mov
inc
push
outsb
out
dec
inc
xchg
push
xor
mov
cmp
xor
jmp
int
dec
fisttpl
sub
imul
xorl
xchg
int
cmc
lret
xor
fists
faddl
dec
int
jne
mov
add
cwtl
stc
dec
mov
sbb
leave
ret
xlat
jecxz
out
les
jle
aad
xor
adc
xchg
sub
push
push
movsb
nop
xor
dec
jmp
enter
jbe
cmpsl
jbe
or
enter
sbb
daa
pop
popf
stos
stc
clc
xlat
sub
out
pusha
divb
push
lret
shlb
not
addr16
sbb
cli
ja
hlt
pop
sbb
subl
and
into
dec
out
cld
ljmp
or
out
popa
roll
jnp
xchg
addr16
stos
mov
aad
jl
or
xchg
mov
repz
xor
orl
and
outsl
test
dec
sbb
sbb
push
ljmp
lock
xor
mov
dec
test
mov
push
mov
sub
push
xchg
xchg
ret
jle
test
mov
leave
ret
lret
das
mov
popa
xlat
sbb
mov
out
test
loopne
cmp
sbb
test
std
mov
nop
test
lea
enter
adc
push
mov
lret
push
fcomip
pop
stos
mov
lock
popf
jle
es
pop
mov
lahf
xchg
inc
nop
std
mov
add
jl
inc
loopne
aas
mov
and
dec
fdivr
mov
xor
iret
sarb
pushf
mov
loop
test
mov
inc
stos
add
test
jg
inc
pop
sbb
stos
jnp
push
add
push
cli
sub
dec
les
inc
test
or
in
jmp
lods
jmp
imul
cmp
xor
lods
gs
jnp
push
jae
jbe
jo
mull
mov
out
pop
inc
pop
cmc
cmpsb
mov
sbb
xor
pushf
mov
ret
jnp
and
int
js
cmp
aas
nop
jl
enter
aaa
rol
pop
rolb
pushf
lods
xor
shll
pop
lret
incl
std
sbb
adc
shl
data16
negl
xlat
stos
mov
fldl
movsl
data16
out
adc
stc
fldcw
test
adc
xchg
call
out
xor
adc
mov
stos
adc
xchg
inc
mov
stos
xchg
adc
cmp
pop
inc
xor
in
imul
inc
inc
push
insb
push
fldcw
cmp
xor
push
jp
push
lods
cltd
imul
adc
mov
rolb
push
dec
mov
mov
ss
xchg
imul
loop
inc
fwait
sar
lea
loopne
pop
pause
xor
sarl
and
push
mov
aad
notl
xor
lds
jns
push
fcmove
adc
dec
stos
fsubr
ret
cmp
stc
cwtl
mov
out
adc
inc
lret
aaa
xor
arpl
in
or
dec
cmp
fs
inc
cmp
je
and
mov
mov
lret
sbb
loop
inc
xlat
cmpb
mov
pop
mov
lock
int
sub
fidivs
mov
sbb
loopne
xchg
or
add
icebp
mov
xor
jb
sbb
in
push
popf
mov
lock
fnstcw
add
pushf
push
cld
pop
or
mov
ret
and
out
test
adc
add
fs
inc
in
mov
fisubs
xorb
repz
test
popf
sub
pop
push
cmp
jecxz
add
jge
pop
pop
add
std
sahf
or
pop
stos
sahf
sbb
push
mov
scas
inc
adc
daa
mov
je
inc
gs
shr
push
xchg
xor
fmuls
xor
pop
dec
pop
cmc
push
sub
jae
lods
xchg
lea
fdivrs
xlat
push
aaa
adc
push
mov
imul
sbb
inc
adc
dec
cmp
fidivs
jle
jne
lret
aad
fs
test
xchg
leave
movsl
into
mov
outsb
shrb
gs
pop
push
mov
jge
mov
jl
jmp
pop
fwait
cmpsl
sub
fnstenv
aam
icebp
cvtps2pd
cmp
ret
loope
add
scas
jnp
fmuls
or
cmpsl
fisubrs
repz
shll
movsl
orl
pop
cmp
xchg
add
cmc
je
cmpsb
les
jge
mov
cmp
imulb
jge
js
das
mov
mov
adc
dec
repnz
jns
adc
push
cmp
jmp
test
sub
jo
dec
clc
and
in
aas
push
frndint
mov
mov
ret
cmpsl
adc
js
int
jle
pushf
cs
jne
jge
sbb
stos
mov
jl
ret
add
pop
cld
jne
imul
test
push
xor
fimuls
gs
push
push
sbb
loope
xchg
push
sub
gs
push
push
lahf
ss
mov
jno
rol
xor
add
pop
dec
fmull
scas
icebp
mov
sahf
hlt
loopne
sarb
jg
in
sub
dec
daa
rorl
aam
sbb
adc
aaa
scas
mov
iret
mov
add
arpl
xchg
cmpsb
pop
dec
sub
out
xchg
in
push
jo
push
adc
test
push
fldl
xlat
pushf
in
into
hlt
mov
in
add
mov
jbe
pop
loop
unpcklps
js
clc
imul
push
sbb
xor
out
and
xchg
jge,pt
stc
clc
and
pop
test
mov
lcall
loope
mov
fwait
xor
shll
dec
xor
int3
icebp
mov
mov
pushf
test
cmpsb
insb
pusha
sbbb
pop
add
aam
or
xchg
xor
shrb
mov
ffree
pop
or
leave
aad
sub
sbb
addb
out
pop
lahf
jno
xor
and
or
stos
add
fnsave
xchg
jno
stos
sti
es
fcomps
inc
lahf
mov
xor
cmp
decl
rcrl
rcr
or
sbb
movaps
stos
lods
fsubr
jp
ja
cmpsl
adc
inc
fucomi
jg
and
inc
insl
sub
mov
ss
rclb
mov
cltd
repz
jo
in
push
mov
loop
test
out
lret
repz
add
mov
inc
lcall
lods
lock
shrb
inc
mov
jge
dec
loopne
sahf
es
sub
les
data16
sarl
add
sti
xchg
clc
fstpt
ret
and
addr16
mov
jae
divb
inc
sub
lds
in
mov
aas
int3
xchg
icebp
inc
cmc
push
mov
mov
inc
fidivl
mov
inc
int3
mov
mov
std
pop
dec
rcl
fldcw
rolb
jbe
pushf
push
or
or
loop
xor
lods
addl
sbb
mov
inc
lahf
ss
movsl
cmp
add
mov
pop
dec
imul
mov
or
or
sub
pop
sti
testl
scas
inc
or
cmpsl
mov
in
enter
stos
xchg
fmul
sub
jb
adc
in
cmp
sub
aam
lcall
sbb
or
jne
shrb
inc
shrl
cmp
pop
jae
lea
repz
push
addb
dec
mov
int3
xchg
mov
cmpsb
rcrl
mov
cmp
popf
xchg
ror
cmp
and
xchg
jg
cmc
in
cmp
stos
xor
fadds
cmpb
test
inc
xlat
das
cmpsb
mov
std
jno
sub
icebp
xchg
xchg
push
xlat
in
or
mov
xchg
xchg
jbe
or
jmp
test
into
xchg
out
push
and
xchg
sbb
sar
test
jmp
or
xchg
push
and
fidivrs
xchg
cmpl
sbb
popl
pop
adc
sbb
pop
enter
movsb
dec
cltd
pusha
push
bound
test
daa
inc
jecxz
iret
push
xchg
in
test
jbe
loop
out
imul
stos
sti
mov
jbe
fdivl
adc
add
or
cmp
ljmp
xor
movsl
and
mov
aam
out
andl
in
mov
ljmp
pusha
xchg
repnz
jno
pushf
adc
cwtl
leave
pusha
les
inc
aam
in
cli
sbb
pop
testb
lret
bound
stos
fcoml
jbe
lret
cmc
push
cld
call
fdivrp
xchg
adc
cmpsl
inc
mov
push
jmp
jecxz
mov
and
sub
aas
dec
ss
inc
rcl
or
das
pop
sbb
js
ficoml
rcrb
mov
inc
xchg
aad
jmp
jbe
icebp
xchg
outsl
adc
sbb
aam
sbb
loop
push
push
fnclex
js
and
mov
movsl
notb
scas
outsl
fyl2x
lahf
outsl
xor
xor
pushf
dec
jne
int3
adc
lods
inc
xor
pop
loopne
jns
pop
add
mov
repnz
ffreep
vcvtps2pd
sub
pop
adc
pop
test
jnp
xor
inc
sbb
sti
pop
icebp
sub
mov
cs
out
test
stc
loope
cmpsl
imull
ret
or
icebp
push
xchg
lods
jno
pop
push
pop
loopne
adc
popf
loope
xchg
loopne
jp
mov
xchg
call
jg
andb
dec
pusha
push
call
sub
push
repnz
jmp
data16
rclb
sbb
test
mov
imul
push
dec
mul
subl
mov
mov
mov
mov
mov
push
adc
cmpsl
cs
rorl
sarl
aad
or
insl
xor
lcall
fidivrl
push
mov
push
aam
orl
imul
dec
lcall
sub
mov
jns
imul
lea
mov
lahf
fldenv
mov
jbe
xlat
ror
leave
sti
mov
es
adc
ja
inc
push
pop
sub
xchg
xor
scas
push
pop
repnz
hlt
sbb
rorb
cmpsl
mov
jno
sub
into
repnz
pop
rorb
test
dec
dec
adc
cmp
mov
mov
lahf
test
sub
jns
pop
stos
add
call
xchg
mov
add
mov
or
cmpsl
and
out
stc
in
std
lcall
and
sbb
insl
jecxz
xorb
add
sbb
jmp
icebp
adc
int
add
and
mov
adc
gs
push
in
sahf
cmpsb
push
cmpsb
sbb
mov
loop
je
loop
xor
jmp
mov
jbe
dec
ljmp
cmp
fs
push
js
out
push
push
dec
shlb
js
mov
pop
es
incl
in
and
jne
stos
cmp
jle
or
int3
xor
xchg
pop
mov
in
pop
aam
cmp
lahf
in
dec
arpl
jp
add
mov
sub
call
bound
ret
adc
ss
addb
movsl
cmp
fcomps
jle
add
mov
jle
aaa
das
mov
jne
dec
pop
jg
sti
dec
rclb
add
push
sub
mov
je
and
stos
add
das
add
jo
adc
pop
xor
test
out
nop
add
push
xor
js
and
add
lret
adc
sub
sti
ljmp
sub
insl
jb
dec
loopne
cmp
scas
or
rcrb
stos
aas
mov
iret
outsb
jle
bound
mov
mov
aad
fldt
add
rclb
xor
repnz
lcall
loope
inc
fs
mov
aas
cmp
insb
xchg
pop
pusha
adcl
pop
addr16
lds
xor
mov
lea
fsts
pop
jb
shrb
shlb
scas
sub
fadds
fldt
jbe
xor
dec
insl
push
ret
rorl
inc
imul
push
mov
mov
loopne
mov
jmp
repz
or
shll
add
jbe
and
push
bound
fs
mov
mov
fwait
push
test
imul
dec
adc
int3
roll
dec
es
cmc
sbb
mov
fcomi
lea
xchg
pop
hlt
sbb
push
jne
jnp,pt
outsl
mov
dec
pop
movsb
mov
ds
inc
lahf
jns
int3
lds
sbb
sbb
ficomps
daa
repnz
ljmp
mov
stc
add
xchg
xor
jmp
mov
test
nop
mov
ficomps
mov
sub
cmp
and
mov
dec
push
jne
out
pop
popf
push
test
popa
and
add
xor
out
mov
push
mov
lret
pushf
scas
pop
cmpsl
and
addr16
not
push
add
push
cmp
pop
xor
gs
lds
jne
outsl
andl
lods
inc
xchg
pusha
lcall
and
pop
out
fwait
scas
ljmp
hlt
icebp
stos
mov
fcoml
outsl
add
mov
out
pop
mov
lock
xchg
test
insl
xor
xor
jecxz
mov
add
mov
fsubl
gs
scas
mov
pop
sbb
xlat
or
inc
js
jecxz
and
repnz
loop
add
cmp
push
and
cmp
repz
popf
sbbl
sub
lahf
mull
push
push
out
es
xchg
movsb
push
and
scas
imul
arpl
xor
jnp
xchg
and
inc
in
push
out
add
jb
push
push
enter
lods
inc
add
aam
inc
cmpsb
sar
fisubl
stos
pop
inc
test
mov
adcl
mov
and
ror
lea
lds
jecxz
sbb
pop
sub
ljmp
lcall
sbb
xor
aas
das
lock
inc
cmpl
dec
push
push
loop
mov
pop
lods
nop
in
stos
out
cmp
xchg
xor
ss
nop
faddl
pushf
std
lcall
dec
jmp
xchg
pop
cmp
sahf
les
aad
add
xorb
mov
pop
test
dec
fwait
stos
ja
sub
popa
outsb
repnz
dec
inc
lock
xor
xchg
imul
repnz
test
sub
fidivs
or
xor
aas
or
xchg
push
outsl
push
test
jno
sub
fwait
jl
pop
and
inc
lret
pop
loope
and
jae
pop
mov
mov
enter
mov
mov
mov
cmc
adc
dec
insb
ds
lods
or
imul
sub
insl
pop
shll
aad
aas
dec
and
in
jb
jmp
mov
into
add
les
xchg
pop
xchg
xor
imul
push
sbb
or
imull
inc
sti
in
ret
repz
push
cltd
and
pushf
shl
and
sub
sub
jg
test
mov
pop
push
pmaxub
gs
xchg
mov
push
or
jne
add
push
push
jne
mov
cmc
loope
cmp
rolb
lock
pop
and
mov
or
sub
xchg
out
cmp
in
cld
inc
shl
mov
mov
into
aaa
outsl
inc
adc
xchg
into
cmc
add
arpl
push
lcall
sub
ljmp
cmp
stc
jbe
sbb
clc
xor
xchg
push
inc
addl
shlb
pop
push
pop
push
add
cmp
das
sub
popa
and
jl
dec
mov
xor
inc
and
in
ljmp
mov
out
mov
sbb
jp
mov
ja
jle
int
dec
mov
sub
vcvtps2pd
clc
xchg
jmp
popa
jae
dec
or
sub
pop
dec
int
push
fsubs
scas
cmpl
pop
jp
inc
push
in
mov
lods
jecxz
mov
out
push
aaa
mov
xor
loope
or
call
lar
lock
cld
and
adc
pop
es
cld
push
and
int
std
xchg
stos
pushf
jns
mov
mov
adc
sub
loop
dec
stos
push
add
dec
ss
xor
jl
int
hlt
xchg
dec
xchg
add
in
mov
fildl
or
cmpsl
xchg
aam
sbb
in
repz
jbe
sbb
frstor
insl
pop
int3
lret
cmp
push
jb
and
stc
int
les
push
rcl
sub
add
adc
repz
and
neg
jae
fisttpl
enter
jo
cmc
lret
into
push
scas
scas
test
push
mov
scas
cmp
xor
bound
js
jmp
outsb
loop
incl
add
mov
and
loopne
add
pop
jb
push
je
fisubrs
icebp
mov
test
mov
int
sbb
pop
inc
inc
and
cli
xor
dec
push
add
add
dec
push
xor
dec
fwait
test
pop
jb
das
repnz
loopne
pop
subb
jmp
push
push
mov
push
xlat
hlt
mov
mov
sarl
or
adc
in
bound
cwtl
pop
testl
in
dec
or
mov
sub
iret
fistl
or
push
mov
sti
out
icebp
lea
xor
bound
mov
xchg
mov
es
fisubrs
xor
fdivl
int
xor
xchg
testb
mov
cmp
negb
xchg
push
push
cmp
icebp
cmc
push
jmp
insl
fidivrs
and
int
xchg
imull
pop
push
jae
cwtl
dec
xor
pop
outsl
sahf
dec
clc
lcall
mov
imul
js
psrad
ss
mov
or
pop
and
pop
fbld
push
in
std
dec
cmp
mov
lds
adc
in
fs
scas
mov
xorb
xchg
xchg
insb
or
lea
incb
fsubl
aad
outsb
hlt
je
inc
sbb
push
mov
icebp
out
add
loopne
adc
inc
inc
es
dec
adc
ret
mov
push
mov
fisubl
ret
jp
pop
sbb
mov
jle
mov
xchg
sub
pop
or
xchg
ss
fwait
in
mov
cltd
cmc
popf
adc
jns
fsubr
jbe
adc
lock
dec
push
das
addr16
movsl
xchg
mov
pop
je
jno
jnp
xchg
cmp
cli
or
aad
sbb
std
sbb
movsl
cmp
imul
adc
inc
sbb
dec
jne
xchg
ret
add
push
pop
iret
data16
in
cmpsl
movsb
push
ljmp
stc
inc
rorl
rcr
mov
dec
pop
mov
lock
sarl
ret
sub
mov
stos
sub
es
test
aaa
pop
loope
pusha
push
dec
pop
out
pop
jmp
jle
loopne
jbe
subb
or
sbb
pop
push
xor
cmpsl
cmp
xor
js
js
push
lcall
pop
loopne
adc
mov
or
ds
pop
stos
nop
dec
addr16
add
push
add
ss
jo
xor
jo
and
mov
inc
xor
fwait
jge
cltd
sub
pop
jae
cmp
or
add
and
pop
outsl
adc
popa
repnz
xor
lds
cwtl
cmp
cmpsb
cmp
inc
pusha
cmp
in
out
test
fidivrl
xchg
test
push
xor
cmp
xchg
pop
sub
sbbl
rcrl
and
cs
inc
xlat
unpcklps
cmpsl
sbb
dec
dec
inc
fdivrl
cmc
push
inc
mov
adc
cmpsb
push
add
cwtl
dec
and
push
mov
sbbb
lods
and
lret
and
push
mov
scas
inc
enter
pop
xorb
repnz
int
inc
fisubrs
nop
daa
mul
lahf
ss
jl
push
jno
jbe
adc
ss
loopne
into
aam
sbb
enter
sub
dec
lods
inc
cmp
add
push
fsubrs
xchg
jl
xchg
movsl
add
jo
call
inc
cmp
jmp
rorb
stos
push
jp
test
sbbb
jecxz,pn
stos
leave
inc
test
push
jno
adc
sbbb
aam
imul
sub
jp
mov
outsl
mov
mov
xchg
sti
fdivs
push
out
xchg
setl
lods
jg
js
sbb
xchg
nop
add
test
lahf
cld
mov
push
outsl
into
sbb
jbe
rcrb
jne
mov
rorl
push
xor
cmpsb
movsb
jnp
in
inc
pop
xchg
adc
test
ficompl
das
insl
fs
mov
je
mov
fildl
les
add
sub
and
mov
fwait
ljmp
pushf
scas
mov
js
or
push
inc
cs
insl
adc
into
pop
jb
pop
shlb
pop
sub
popa
sbb
je
xor
pop
scas
or
mov
stos
arpl
push
sbb
rol
fbstp
shlb
add
shll
pop
jb
ret
inc
std
inc
and
inc
dec
xchg
or
and
and
pmulhw
pop
lock
loope
cmp
lock
or
xor
divl
mov
addr16
xchg
mov
pop
cmp
push
pop
xchg
mov
fisubl
mov
test
test
jae
mov
out
stos
xor
jp
mov
loopne
test
leavew
jnp
push
mov
jns
aas
mov
cmp
loop
ret
push
das
mov
rclb
cmp
in
push
mov
jle
in
push
push
frstor
xor
dec
xchg
inc
pop
movsl
jl
adc
addl
sub
mov
cmc
xchg
sub
cld
sti
xchg
xor
push
sbb
movsb
dec
scas
leave
mov
add
cmp
mov
push
and
leave
jp
shrl
adc
cmp
push
in
js
dec
cmp
sub
jmp
mov
mov
dec
inc
xor
std
mov
pop
inc
jp
and
shlb
jb
inc
cwtl
push
leave
sub
ret
cmp
pusha
mov
mov
sbbb
cmp
aaa
push
test
mov
cmp
inc
add
jle
jno
add
push
icebp
movsl
movsl
adc
xchg
inc
sub
cmpsl
in
repz
pop
xor
mov
xchg
or
mov
add
push
xor
xchg
push
pop
push
out
xchg
ds
enter
ret
pushf
test
cmp
push
cwtl
sti
ret
inc
inc
dec
adc
jo
lods
xlat
outsb
test
js
lods
movsl
cmc
dec
mov
sbb
ja
xor
shlb
pop
lret
sti
sub
xor
out
mov
divb
das
daa
lcall
sbb
ret
jge
mov
xor
faddl
cli
imul
dec
inc
xchg
xor
sbb
rclb
vpmullw
arpl
adc
outsl
leave
jge
clc
inc
sub
es
pop
push
das
outsl
inc
sub
xlat
mov
sti
fistl
imul
or
loopne
int
aam
jo
fcmovne
pusha
xchg
sub
push
loope
xchg
repnz
or
cmpsl
bswap
vcvtsi2ssl
std
xchg
fidivs
stc
mov
mov
push
call
fsubs
inc
insl
test
jg
cmp
pop
jae
lahf
ret
shrl
in
mov
lcall
xchg
pop
pop
inc
and
mov
in
nop
outsl
clc
enter
jle
ds
stos
mov
icebp
fadds
pusha
jbe
rclb
add
insb
out
xor
cwtl
gs
mov
pushf
lods
jne
inc
fldenv
stc
pop
scas
and
xor
jnp
push
ret
dec
push
adc
std
aas
sbb
pop
push
xchg
sub
xchg
decb
and
cmpsb
cmp
enter
mov
mov
nop
pushf
lahf
inc
mov
mov
push
mov
push
popa
inc
iret
push
cmc
or
out
push
mov
xor
cmpsb
add
add
loopne
das
pop
shll
clc
outsb
testb
xlat
pop
sti
inc
jle
xor
sub
pop
in
outsl
ret
jnp
rolb
arpl
insl
pop
test
pop
mov
dec
jecxz
jnp
inc
mov
ss
inc
push
adcl
xor
mov
sub
mov
or
fildll
test
shrb
fistpl
mov
jo
push
sbb
andl
cmp
mov
mov
inc
fsubrl
xor
cld
sub
sahf
ds
imul
pop
insb
loope
jo
mov
inc
pop
push
and
and
xchg
xchg
mov
dec
push
jnp
push
fsubrs
sub
mov
and
push
inc
and
or
mulb
jne
std
sahf
mov
call
adc
mov
or
pusha
mov
cmp
jp
mov
mov
jle
cmp
add
add
or
and
pop
xor
push
push
popf
test
mov
mov
cmp
incl
dec
cmp
test
xor
and
fnstcw
inc
test
inc
cmp
lret
enter
lret
sbb
cld
mov
sub
mov
xchg
and
or
mov
dec
push
dec
jbe
inc
cmpsb
xchg
jae
ja
int
sub
push
pop
add
pop
test
stc
sbb
sbb
cmpsl
cmp
cmpsb
test
lcall
push
mov
jno
push
test
or
xchg
xor
pop
outsl
mov
xor
sub
int
adc
mov
incl
int
add
repnz
pop
jmp
sub
mov
adc
mov
aas
jmp
sbb
cmpsl
test
sbb
xor
mov
cs
mov
mov
sbb
sub
insl
adc
pop
ds
into
add
sub
mov
xchg
xchg
pusha
test
das
add
or
movsb
mov
inc
mov
orb
mov
das
cmp
test
xchg
and
xor
mov
ret
cmc
push
jns
pop
cwtl
js
mov
iret
cmp
jae
xchg
push
sbb
stc
cltd
fnstenv
cltd
sub
mov
xor
cmp
mov
in
mov
or
int3
popf
stos
mov
push
xchg
pop
stc
push
ss
and
and
inc
aad
add
rclb
icebp
loope
push
inc
mov
shll
scas
inc
scas
sbb
test
pop
mov
jnp
xor
push
movsl
ret
cli
xor
push
mov
loope
push
mov
jecxz
jne
in
lock
gs
add
adc
inc
adc
inc
in
lds
pop
cltd
insb
adc
shr
imul
mov
rcrl
shr
inc
push
fbstp
insl
xlat
les
mov
push
divb
lods
inc
lahf
xchg
jge
inc
subl
pop
test
into
fs
fidivl
test
lret
push
pop
mov
mov
or
push
sahf
adc
adc
jmp
inc
lahf
ljmp
inc
cmpsl
xor
mov
add
imul
xrelease
cltd
es
in
bound
sbb
dec
loopne
push
inc
xchg
scas
ret
arpl
cmpsl
call
outsl
jge
inc
lahf
jns
push
andb
sbb
lods
cmp
ficoml
cmp
test
jns
stos
pop
pop
repz
shr
jl
ds
out
and
mov
outsb
add
pushf
mov
mov
shl
pop
rorl
or
and
pop
icebp
cmp
in
mov
pop
icebp
inc
popa
sbb
or
cpuid
inc
sub
xchg
or
sbb
xor
gs
or
mov
dec
nop
iret
subb
pop
test
mov
into
cmc
ljmp
mov
cmpsb
inc
fldt
aaa
xor
mov
push
mov
and
sbb
cmp
les
mov
dec
mov
js
jne
inc
flds
adc
popa
xlat
jbe
int
clc
call
push
jle
scas
inc
int
int3
sbb
cmc
loopne
in
repz
xor
mov
inc
arpl
jecxz
sbb
lods
popa
mov
out
push
in
js
cmp
enter
arpl
frstor
inc
arpl
or
jle
mov
mov
adc
mov
sub
movsb
data16
loop
loope
outsb
jmp
push
cmc
daa
inc
scas
test
add
inc
data16
push
ljmp
jno
jne
cwtl
xchg
adc
into
gs
jns
outsb
repz
mov
xchg
adc
pop
iret
mov
mov
mov
inc
imul
or
cmpb
push
aas
dec
sub
popf
lods
jnp
xchg
and
xchg
xchg
or
nop
out
sub
xchg
push
cli
xor
hlt
pop
fistpll
shrl
sahf
data16
lock
loop
jb
inc
sub
adc
sub
xchg
and
mov
ja
mov
es
mov
pop
lods
mov
and
sub
mov
dec
enter
mov
jnp
je
movsl
in
cmp
jo
das
test
mov
pop
mov
mov
adc
rolb
adc
cli
adc
mov
sbb
cltd
sub
mov
sub
fs
pop
fsubp
test
nop
push
jo
pop
hlt
dec
add
and
xchg
sub
cld
inc
out
mov
testb
ficoms
cld
mov
jne
mov
cmpsb
mov
cmpl
pop
jle
jecxz
insb
mov
xchg
lret
stc
nop
cmovge
insl
mov
cmpsl
or
xor
pop
repz
fcoms
dec
es
jmp
xchg
out
mov
mov
sub
stos
lcall
stos
aas
push
push
sub
jns
sti
int3
pushf
mov
in
popa
js
adc
inc
mov
ret
sub
mov
divb
cmpsb
movsl
pusha
mov
mov
sarl
lods
xchg
or
pushf
sub
xlat
ficoms
test
addr16
pusha
lods
mov
pop
push
lret
mov
push
jne
mov
jg
ljmp
pusha
add
cmp
pop
loopne
cs
jge
fidivs
or
popa
or
jno
xor
xor
js
es
cs
lret
jmp
adc
push
cmp
popf
movsb
nop
dec
std
xchg
andb
int
adc
inc
cmpsb
clc
nop
jl
add
sbb
stc
or
xor
mov
sub
add
or
pop
es
mov
arpl
popf
inc
fmul
add
pop
or
fbld
les
add
sub
sub
lea
stos
mov
out
gs
mov
jb
iret
pushf
lods
or
adcb
aad
cmp
adc
fstl
push
lret
outsl
lea
fadds
nop
sub
mov
addb
fsubrp
xor
inc
fdivrl
sub
jae
aad
adc
cmpsl
cmpb
mov
aas
xlat
fidivl
dec
shl
in
stc
nop
movsl
jns
push
and
sub
cwtl
jo
repz
push
sbb
cmp
fldenv
pusha
add
in
sub
sbbl
adc
xor
popf
xor
lods
jnp
push
add
data16
sub
dec
imul
cld
cmp
mov
mov
pop
push
xchg
fcom
mov
insb
stc
push
cmovge
ficomps
decb
icebp
push
dec
imul
outsb
push
js
rcr
cs
outsl
push
and
push
mov
fimuls
push
mov
outsb
or
testb
xchg
shr
enter
lods
pop
xor
gs
lret
xchg
sbb
cli
mov
push
enter
mov
testl
fldl
xchg
or
lock
inc
loope
in
push
sbb
dec
es
into
sti
push
jno
mov
mov
jns
mov
data16
jnp
mov
fimull
jbe
mov
push
sub
clc
add
jae
popa
jnp
mov
fsubrl
hlt
hlt
add
and
incb
aam
push
sahf
mov
addr16
pop
addr16
xorl
mov
inc
fwait
push
shl
cmpsl
xor
bnd
mov
sub
dec
fstl
jne
loope
mov
jno
pop
imul
push
es
mov
push
andb
cmc
cmp
es
lods
rcrl
inc
sbb
dec
arpl
xchg
insl
pop
in
xor
cmp
sub
jecxz
mov
scas
adc
std
pop
and
je
lock
test
je
outsl
cmp
cmpsb
push
add
nop
jne
add
jns
call
jp
or
mov
mov
push
mov
or
jbe
ds
xor
push
jae
das
aas
adc
push
les
jg
stc
hlt
add
xor
pop
dec
mov
adcl
fmulp
jo
add
sbb
xor
insb
stc
pop
sahf
sub
cmp
xchg
into
mov
lods
jp
fiadds
add
and
xor
cmpsl
jnp
inc
xchg
push
in
repnz
mov
sbb
cmp
or
std
or
dec
aam
mov
rclb
pop
mov
add
scas
xor
sub
cmp
stos
inc
inc
adc
fcoms
sti
loop
mov
aad
mov
data16
mov
loopne
lcall
fbstp
mov
lods
sti
mov
pop
scas
xchg
dec
out
or
sbb
pop
test
stos
fs
push
pop
daa
cmp
push
cmp
in
aaa
iret
push
pop
xor
pop
fsts
imul
inc
pop
insl
icebp
xor
aas
dec
inc
sarb
insl
or
es
bound
or
sbb
cwtl
stos
mov
cmp
int3
cmp
mov
jb
jnp
adc
inc
xchg
shrb
clc
push
pop
fists
sbb
stos
out
sti
cmp
cld
cld
mov
mov
cmpsb
mov
push
ret
pop
in
dec
jecxz
add
inc
mov
in
xor
cmp
jb
shll
push
or
ds
inc
xchg
cmp
or
sbb
mov
and
repz
xchg
sbb
daa
subb
test
cmc
lods
out
mov
in
push
jl
imul
cmp
fdivrl
out
xlat
dec
dec
icebp
and
outsb
cmp
cmp
dec
mov
cmc
cmc
jg
daa
pop
pop
cmp
mov
imul
in
nop
rcrl
idivl
jg
pop
mov
add
cmpsb
fcmove
mov
lods
imulb
fmull
sub
ja
xchg
popf
or
ja
gs
mov
mov
jg
rcrl
pop
pop
addr16
cmp
jle
ds
mov
popa
and
jb
fimuls
repz
in
cmc
outsl
leave
jbe
addr16
dec
imul
aad
scas
dec
dec
inc
aas
popa
add
roll
cmp
cmp
test
jno
and
xchg
cmpsl
scas
adc
add
mov
int3
jae
adc
push
cmp
insl
mov
pop
pop
dec
mov
push
xchg
and
add
add
aad
pop
pop
mov
cltd
pop
pop
or
imul
sbb
xchg
add
jle
mov
xlat
xchg
lahf
and
shl
dec
insl
jge
loop
push
push
xchg
cmovs
outsb
xchg
dec
fwait
xor
mov
push
cmp
cwtl
fnstsw
mov
test
loopne
push
fimull
pop
stos
adc
cmp
push
xor
xchg
clc
enter
bound
jae
pop
loop
xchg
xchg
push
mov
jb
xor
test
subb
insb
pop
ss
pop
test
mov
inc
ja
jne
outsl
fwait
xor
or
mov
xchg
rcrb
adcb
pop
in
mov
push
cmp
mov
cmp
add
addb
and
xchg
les
enter
push
shll
push
xchg
icebp
pop
mov
ret
std
dec
pop
mov
jo
scas
int3
push
js
stc
daa
lods
mov
pop
mov
mov
dec
in
dec
hlt
stos
cs
jl
int3
jnp
std
call
mov
into
push
imul
out
cmovle
cmpsb
fbld
sti
lods
xchg
mov
dec
pop
and
cmpsb
repnz
sbb
mov
int
mov
rclb
iret
pushf
lods
xor
decb
subl
in
test
repnz
jne
pop
lcall
jnp
and
lahf
nop
pop
lahf
stc
ss
mov
add
lods
popa
jg
sbb
bound
push
loop
aas
mov
insb
fs
mov
loopne
sbb
std
jbe
aam
pop
xor
push
pop
out
xchg
rorl
dec
mov
and
lds
sub
push
andb
cmpsl
xchg
jp
mov
xchg
adc
scas
scas
jne
fs
jecxz
std
call
mov
jp
jb
pop
lods
popa
call
cltd
outsl
rolb
lods
mov
jo
js
pop
test
push
mov
cmp
cmp
ds
ss
cmpsl
fists
lcall
and
sbb
xchg
lcall
shr
jbe
out
mov
cmpsb
std
pop
icebp
cs
das
dec
les
imulb
sub
sub
lods
adc
or
scas
and
xchg
dec
test
pusha
mov
fidivl
fsub
sti
out
mov
subl
inc
adc
insl
xor
repz
mov
sbb
push
popa
mov
lcall
dec
push
pop
fcomps
push
push
ds
push
and
jle
insl
or
and
mov
mov
ret
jp
cmpsb
dec
fists
dec
fnstsw
sarb
stos
shl
jl
dec
fcmovne
sbb
leave
cmp
fisubrl
stc
fwait
push
jno
sbb
lcall
ljmp
loop
into
adc
int
mov
fdivr
fmull
scas
push
xorb
sahf
adcb
mov
fidivrl
cli
int
cmp
mov
int
int
dec
push
mov
mov
shrb
cli
mov
imul
fs
mov
push
ds
inc
push
mov
les
clc
mov
jb
je
sbb
xchg
mov
cmp
cmp
cli
dec
test
mov
cmp
int
mov
test
inc
test
add
and
ljmp
movsb
push
cmc
xorb
jns
push
imul
stos
pop
adc
jp
movsl
inc
dec
faddl
and
fisubrl
int3
pop
and
sub
xorl
xchg
mov
xchg
mov
jecxz
cld
cmp
and
loope
xchg
sub
add
dec
mov
cmp
std
jp
dec
in
decb
movsb
sub
pop
test
dec
mov
adc
sahf
stos
jnp
fnstsw
cmp
mov
mov
push
minps
xor
aam
inc
push
shrl
jae
nop
xchg
in
mov
insb
inc
xchg
loop
bound
bound
in
adc
dec
mul
imulb
inc
mov
test
xchg
jp
jo
pop
adc
pusha
in
mov
call
in
lock
xor
adc
add
icebp
dec
mov
cwtl
inc
popa
pop
mov
mov
push
cmp
lds
hlt
aaa
cmc
mov
ret
in
stos
insl
push
in
repnz
add
cmp
lcall
jle
xor
fcoms
mov
push
pushf
jae
ret
jge
bound
loop
cmp
shrb
mov
das
movsb
lods
inc
pop
aas
cmc
add
hlt
in
pusha
xor
mov
insb
roll
dec
fsubrl
lret
arpl
adcb
xchg
pop
adc
mov
and
jb
andb
lcall
je
push
cmp
jnp
rcrl
cwtl
aas
xor
sub
mov
enter
mov
pop
dec
and
pop
mov
sub
imul
push
jle
insl
mov
sbb
inc
pop
dec
cmp
add
fidivrs
filds
adc
mov
enter
inc
iret
fstpt
mov
int
call
dec
mov
insl
cmpsl
inc
insl
push
inc
pop
ljmp
push
lock
fisubl
cmp
je
sahf
xor
or
cmpsl
dec
lods
pop
mov
push
iret
sbb
jle
loope
nop
push
push
and
mov
mov
or
jg
jne
push
sub
mov
iret
and
adc
out
cmpsl
ret
and
lea
xchg
aam
inc
out
inc
sbb
dec
mov
stos
lret
fcom
mov
pop
mov
in
push
pcmpgtb
xchg
sub
and
cltd
sahf
adc
mov
or
mov
into
adc
mov
add
mov
out
mov
sbb
mov
cmp
cmp
inc
loopne
pop
adc
clc
pop
rcr
jo
mov
add
jo
push
popa
loope
lcall
lret
out
ss
lea
in
xor
out
pop
insl
dec
stos
ret
ret
xchg
popa
pop
imul
stos
cmp
andb
aaa
push
stos
lret
repnz
mov
out
js
mov
dec
adc
icebp
inc
jo
push
stos
out
push
cmp
fucomip
adc
pop
notb
inc
not
frstor
int
mov
sub
dec
ret
mov
fstl
inc
rolb
jle
out
scas
push
xlat
clc
inc
out
clc
sub
xor
jg
or
cs
push
fcomps
gs
mov
loop
xchg
aam
add
test
js
loope
ljmp
cltd
pop
test
lret
je
inc
movsl
std
dec
fwait
sti
push
or
cmp
cltd
sub
sub
les
stc
outsl
adc
jb
fwait
out
or
mov
lods
inc
out
push
mov
ror
popf
dec
push
cwtl
jmp
mov
inc
sub
pop
mov
inc
out
pop
push
jae
jl
std
inc
mov
xor
push
xchg
mov
movsl
inc
cmp
ljmp
ret
sbb
inc
or
lret
bound
add
inc
mov
xchg
cmp
pop
idivl
ss
xchg
es
push
movsb
push
mov
insl
and
les
adc
mov
dec
bnd
rorl
fisttpl
push
push
ljmp
call
loop
pop
lahf
ljmp
ljmp
loop
lods
rol
test
ds
imul
movups
pop
mov
cmp
sbb
jecxz
js
lods
bound
push
repnz
imul
ds
popa
into
data16
xlat
popf
xor
sub
fwait
xchg
cltd
mov
sahf
cltd
hlt
pop
hlt
and
jbe
dec
mov
stos
inc
sbb
leave
xlat
lahf
mov
or
add
cmp
dec
mov
sbb
mov
shrb
mov
xlat
cmp
pop
call
mov
ret
mov
roll
fisubs
pop
popa
jbe
mov
test
sub
xorl
mov
push
roll
imul
sbb
push
mov
push
outsb
push
cmp
sbbb
xorb
int
imul
sub
cmp
imul
adc
jns
aaa
out
movsl
pop
sbb
lock
ja
aad
sub
sub
shrl
add
xor
insb
xchg
ja
or
add
cmc
mov
push
pusha
mov
xchg
add
mov
mov
ret
push
or
adc
or
into
dec
mov
push
insl
sbb
ss
or
outsl
jge
add
divb
mov
sbb
inc
gs
xor
loopne
adc
push
and
adc
sub
inc
xchg
hlt
fsubrl
jae
jnp
push
test
cwtl
push
flds
sbb
cmp
mov
sub
dec
pop
enter
jns
adc
cwtl
cmpsl
jno
sbb
sub
lcall
mov
fprem1
mov
rcll
and
das
adc
faddl
test
in
jp
sbb
lret
xchg
ret
in
mov
call
sub
pop
jnp
xchg
sbb
fdivs
mov
push
fstl
push
add
test
mov
cmp
int
out
sub
ror
jl
mov
push
sbb
dec
jae
push
stos
ja
jbe
or
into
mov
call
inc
xchg
in
clc
hlt
inc
fstl
out
xor
shrl
jmp
jmp
inc
xchg
mov
fdivs
addr16
movhps
mov
mov
sbb
outsb
mov
cmc
mov
sti
mov
adc
lcall
jb
lds
decl
test
cwtl
rorb
sub
sbb
mov
inc
fdivrl
xchg
loope
and
dec
lds
and
sar
clc
push
jmp
or
jns
or
adc
push
les
and
sti
inc
cmp
aaa
jnp
in
dec
and
push
mov
repnz
or
lock
jecxz
push
leave
insb
cmpsl
out
sti
hlt
cmpsb
test
cs
and
pop
jo
inc
pop
out
adc
daa
dec
mov
push
imul
cltd
lahf
lds
xor
push
and
adc
aas
lret
lds
aaa
stos
mov
ret
aaa
dec
movsb
jmp
inc
mov
sub
or
mov
adc
push
cld
inc
ja
adc
jno
addr16
xlat
dec
pusha
jmp
cmp
cmp
xor
out
mov
push
dec
shlb
scas
fdivrl
or
adc
inc
mov
cmp
or
jne
inc
mov
jle
xchg
or
rcrb
mov
inc
jnp
add
out
cmc
sbb
addr16
imul
inc
add
cli
nop
pop
aam
xchg
ja
jns
mov
pusha
ss
cmp
push
adc
cmp
xor
and
xlat
lods
xchg
xchg
xor
sbb
cmp
mov
sbb
imul
std
inc
pop
movsl
daa
adc
jne
inc
xor
and
inc
fdivr
inc
ja
es
cmp
and
test
sub
fsubl
sub
rcrb
mov
sbb
sbb
mov
ljmp
mov
enter
xchg
xchg
mov
or
iret
andl
sbb
mov
nop
insl
incb
hlt
mov
inc
pop
jae
mov
add
jno
es
pushf
xchg
xor
stos
jle
movsl
mov
lret
pop
xor
sbb
xor
icebp
cmp
pop
sbb
in
push
fwait
cmp
mov
les
fs
scas
repnz
jecxz
push
in
test
out
insb
rorl
lods
pop
mov
cli
imul
sub
xor
push
add
les
dec
fmul
fldenv
mov
pop
fwait
ds
jnp
push
fdivs
mov
aas
sarl
fs
rcr
std
mov
cli
xchg
je
dec
cltd
adc
out
leave
inc
dec
cld
lret
jo
mov
add
push
mov
test
ds
cli
sbb
popl
arpl
movl
lods
cmp
xchg
mov
pop
out
mov
test
movsl
mov
push
cmp
pop
test
inc
popf
es
aaa
cltd
out
sbb
test
sbb
pushf
cwtl
sti
cmp
testl
cmp
mov
cmpsb
mov
xchg
enter
out
hlt
out
pop
fcmovnb
pfnacc
add
pop
lock
cmp
cmc
pop
daa
sti
xor
into
fldl
mov
dec
pop
sub
scas
pusha
pushf
test
out
repz
sub
cmp
push
sub
in
daa
cli
xchg
ficoms
xchg
or
clc
addb
cmp
pushf
jne
adc
sub
movsb
push
mov
das
ja
into
andl
mov
adc
imul
mov
out
pushf
cmp
adc
insl
inc
jo
test
in
jmp
into
cmp
dec
int
xchg
xor
or
fstpt
xchg
pusha
jae
stc
mov
cli
push
rcl
xor
in
or
andb
mov
fiaddl
or
mov
xchg
test
ret
mov
and
aaa
movsb
mov
outsl
mov
pop
cmp
fwait
sti
icebp
mov
jl
adc
push
test
pushf
and
dec
mov
push
jmp
jo
nopl
xor
xchg
outsb
lods
mov
clc
dec
icebp
movsb
movsb
rcrb
pop
xchg
adc
cmp
fsin
lds
add
jb
add
std
mov
and
jecxz
pop
xchg
mov
mov
sub
outsl
lahf
mov
fsubrs
mov
ret
adc
jns
testl
and
sub
mov
into
mov
jmp
stos
mov
xor
jmp
fldt
or
cs
sub
orb
andb
shl
pop
icebp
and
inc
fldenv
inc
lods
inc
ja
pop
icebp
int
inc
fld
jecxz
sub
ljmp
icebp
jge
inc
fldenv
subb
jl
inc
fsts
mov
icebp
jge
inc
fdecstp
mov
lods
inc
pop
xchg
pop
repz
sbb
pop
test
xor
je
mov
clc
push
inc
cmp
arpl
adc
cmpsb
inc
adc
sub
loope
mov
pop
or
repz
sarl
jl
pop
jmp
and
xchg
sub
clc
mov
mov
lods
fidivs
pop
pop
ljmp
lock
ljmp
fldenv
xor
lock
popf
jle
push
stos
jnp
fdivrl
adc
movsl
dec
add
jbe
bound
lea
cmc
scas
push
mov
loop
mov
xor
fistpll
push
testl
test
xchg
mov
lcall
cmp
xchg
cwtl
cmp
in
ret
addr16
mov
dec
mov
mov
jo
mov
notl
es
loope
mov
repz
cld
or
add
xchg
pop
adc
nop
dec
int3
push
ljmp
fs
inc
inc
out
fdivl
xor
movl
stc
out
out
dec
mov
mov
adc
ret
in
fstpl
jnp
dec
orl
fdiv
loopne
and
lock
push
adc
fcomps
popf
pop
out
push
mov
leave
push
lret
adc
sbb
testl
xor
xor
stc
mov
test
sbb
or
push
xor
mov
adc
xor
cli
xor
add
cmp
xlat
cltd
call
sub
pop
repnz
cmp
je
lods
push
jo
adc
dec
into
pop
jecxz
jmp
jno
add
out
or
cwtl
push
lcall
lret
adcb
fwait
adc
mov
add
test
add
or
xor
ljmp
popa
mov
jnp
xchg
pop
dec
jae
fcomps
fmull
lahf
cmp
addr16
mov
mov
cmp
cmp
aam
inc
cmp
sbb
shlb
or
sbb
shrl
outsl
sbb
or
mov
iret
in
cwtl
and
leave
sbb
ja
cmpsb
mov
mov
js
add
ror
dec
in
mov
xor
in
push
iret
dec
or
stos
add
pop
sahf
push
push
jb
sbb
and
test
int3
mov
mull
jae
sbb
cmp
imul
push
lods
mov
nop
xor
lds
stc
mov
mov
sti
popa
pop
mov
ror
add
lea
test
add
decb
or
fidivrs
jle
mov
incl
arpl
xchg
test
rcrl
mov
insb
push
jle
pop
lret
jle
pop
xor
inc
daa
dec
xchg
insb
out
int3
and
aam
js
scas
mov
push
outsb
scas
lret
xor
dec
pushf
add
xchg
jmp
pop
fmul
fsubrs
scas
xor
lods
add
movsb
mov
aam
mov
cmpsl
es
cwtl
inc
in
pop
in
dec
push
cs
xor
pop
push
or
rorl
pushf
imul
sti
jo
scas
mov
ja
outsl
mov
cmp
sub
jnp
mov
mov
lcall
shll
lea
leave
test
add
fwait
xor
lcall
mov
fld
push
adc
adc
pop
and
xchg
push
ss
mov
push
cld
inc
in
inc
mov
out
js
bound
imul
pop
add
daa
popa
sbb
aam
adc
pushf
sub
cmp
dec
bound
mov
decb
loop
inc
pop
cwtl
nop
fcompl
xor
mov
cmp
mov
xchg
sub
pop
jne
test
xchg
js
loope
push
andb
loope
faddl
xor
rcl
out
jne
pop
daa
mov
inc
cmp
clc
clc
notl
sub
mov
pop
ret
pusha
cli
pop
mov
notl
inc
repz
repz
pop
lds
xchg
jb
xor
jle,pt
shll
pusha
mov
xchg
jbe
xchg
jbe
stos
imul
sub
ror
gs
popa
mov
xchg
and
scas
ds
cwtl
outsl
outsl
daa
push
mov
add
jg
lods
mov
add
mov
mov
pop
je
mov
shrl
sbb
cli
or
cmp
sbb
cwtl
dec
jl
and
lret
testl
stc
mov
dec
push
addb
push
flds
sbb
cltd
test
mov
mov
fldenv
mov
or
pop
fstl
stos
dec
dec
mov
into
xchg
loop
ja
mov
and
xchg
inc
sub
adc
adc
dec
cmp
jmp
jmp
js
jbe
mov
shll
push
adc
outsb
scas
mov
clc
add
std
mov
sbb
pop
push
sub
daa
mov
int3
dec
fld
int3
or
imul
pushf
loopne
cltd
push
push
lea
pusha
fisttpl
in
loop
xor
mov
hlt
cwtl
mov
stc
jnp
jb
rclb
out
mov
bound
in
ret
pop
push
dec
cld
pop
imull
cmp
cld
ret
lods
xor
fimuls
outsl
idiv
mov
lods
iret
shlb
js
in
xchg
adc
dec
xor
xchg
sbb
sub
loopne
or
inc
xchg
push
pop
ret
xor
push
mov
push
sub
or
dec
gs
xor
push
dec
cmpb
in
iret
pop
mov
in
nop
aad
loop
out
mov
mov
into
sbb
xchg
push
add
mov
add
out
mov
dec
ds
sbb
sbb
lds
jno
xlat
and
sti
xchg
add
dec
test
in
mov
pop
dec
push
mov
mov
sbb
arpl
loope
mov
out
inc
pop
aam
lret
leave
cmp
cmp
add
xor
dec
mov
divl
sahf
or
lret
daa
or
int
jg
into
cs
test
sub
mov
fs
loopne
inc
cmp
jge
jbe
cmp
std
sbb
adc
cmp
sarl
pushf
sar
incl
mov
and
pop
lods
jl
push
push
fldl
pop
sti
xchg
into
movsl
dec
push
in
adc
mov
sub
dec
shr
jne
mov
cmc
xchg
jno
inc
and
aad
ds
sub
pop
addr16
shll
mov
dec
daa
repnz
shr
xor
jl
test
mov
mov
jecxz
into
fwait
mov
sbb
mov
inc
add
fmuls
jmp
test
test
sarl
out
jmp
cltd
dec
pop
stc
aaa
stos
xor
movb
ja
xchg
pop
movsl
inc
in
xchg
sub
popa
push
push
xchg
in
dec
fstpt
mov
daa
xchg
or
mov
ljmp
mov
pop
mov
sub
pushf
cmp
push
mov
dec
jns
xchg
pop
int
inc
mov
das
es
jne
push
adcl
dec
mov
adc
test
pop
loope
pcmpeqb
test
fs
xchg
cmp
sti
or
call
andb
and
dec
hlt
mov
imul
mov
pop
loop
xchg
pop
addr16
in
js
mov
xchg
push
pop
add
popa
and
clc
xor
fbstp
int3
push
sbb
fsubrs
call
sub
jl
and
gs
outsl
pop
insb
arpl
sti
push
dec
loope
cltd
add
aad
sbb
cmp
adc
push
push
add
nop
scas
dec
testl
mov
push
in
sub
dec
pop
xor
inc
xchg
xor
movsl
push
fwait
or
in
pop
outsb
fcomps
xchg
in
jns
sub
aam
push
jbe
clc
into
sbb
dec
xchg
xor
sub
stos
dec
jle
lahf
xor
jge
aaa
sub
test
aas
stos
jns
frstor
xchg
fstpt
or
xlat
jb
mov
jl
add
pop
inc
pop
and
or
subb
xor
sub
jae
ret
and
pusha
stos
mov
sbb
push
pop
sub
and
loop
test
stos
cmp
push
jl
ds
popf
xor
or
cmp
rorl
ret
mov
pop
push
mov
iret
add
push
or
jae
xchg
xchg
sti
fwait
pushf
mov
sarl
cwtl
test
mov
iret
jecxz
and
pop
cmp
adcb
push
and
sbb
in
xor
in
scas
push
xchg
jp
mov
xor
mov
sbb
xchg
pushf
xchg
jo
popf
jg
sbb
mov
sbb
dec
stos
lds
inc
hlt
data16
cmp
sbb
lock
imul
icebp
hlt
mov
mov
adc
push
adcb
add
xor
pop
repnz
test
clc
repz
scas
cltd
mov
inc
leave
adc
lcall
xchg
push
mov
pop
adc
dec
inc
fisttpll
shlb
jo
mov
lahf
lcall
add
cmp
sbb
jg
loopne
fistpl
mov
inc
pushf
jo
shlb
dec
lods
xor
outsl
cmp
dec
scas
imul
hlt
mov
das
pop
mov
mov
fstps
cli
and
cmp
pop
aaa
and
inc
mov
lcall
jne
stos
xor
xchg
push
insb
imul
enter
push
push
mov
aam
push
pcmpeqd
inc
lds
iret
dec
xor
mov
out
aam
out
mov
fsubs
les
insl
xor
adc
jns
mov
or
mov
popa
outsb
sbb
arpl
and
mov
fidivrl
gs
mov
sub
sbb
push
mov
sarl
xchg
and
loope
repz
ss
xor
ja
stc
cmpsl
test
ret
lds
out
pop
mov
push
push
lret
sbb
mov
leave
jecxz
adc
das
adc
idiv
lret
insb
push
stos
dec
rorl
mov
adc
jae
push
pop
push
mov
cmc
mov
cli
dec
out
leave
cmp
sbb
push
rorl
sbb
pop
dec
sub
jo
push
cltd
or
jnp
mov
lcall
out
jp
xchg
lea
sub
pop
bound
dec
cltd
test
and
jmp
out
jbe
sbb
addr16
sub
mov
or
or
loopne
sahf
adc
push
push
inc
aam
mov
xchg
ljmp
xchg
mov
fsubl
mull
xor
lret
lret
sbb
cmp
sub
cmpsb
mov
mov
and
test
push
pop
nop
mov
popa
notb
cmc
sbb
xchg
je
lock
jmp
jne
lret
popf
mov
adc
sbb
adc
dec
jg
popf
or
mov
cs
mov
or
mov
or
cmp
aas
movsl
xchg
cld
adc
mov
mov
icebp
sub
pop
adc
jno
mov
leave
pop
push
sbb
shrl
push
imul
outsl
and
es
and
mov
sbb
gs
arpl
sbb
shlb
int3
lds
pop
ja
adc
in
add
popa
shrb
clc
mov
mov
mov
mov
jnp
add
out
or
loopne
and
xlat
fst
rorl
fidivs
popa
insb
out
mov
repnz
or
into
lea
int3
ja
aam
mov
xchg
daa
imul
add
rcrb
xchg
fisubs
sbbb
inc
in
aas
test
fsubrp
movsb
mov
sub
mov
cltd
xlat
andl
jecxz
scas
mov
push
jbe
lret
testl
shlb
and
xchg
adc
movsl
push
or
inc
adc
sbb
add
cmc
mov
int3
test
mov
fistl
fidivs
out
adc
cmpsl
xchg
jle
jb
mov
xchg
icebp
cmp
add
adc
and
stos
dec
or
fs
pop
rorb
adc
popa
popf
outsl
sbb
in
stos
inc
mov
cmpsl
out
mov
ss
popa
pop
loopne
inc
push
ss
repnz
mov
loop
cwtl
insb
sbb
push
sti
sarb
push
dec
lahf
fs
mov
or
dec
or
xor
pop
and
lods
ljmp
pushf
cli
dec
add
inc
jecxz
fildll
cmp
out
sub
rorl
lcall
xor
mov
dec
out
jl
pushf
add
adc
test
stos
mov
sbb
mov
mov
imul
imul
loop
mov
sub
iret
in
decb
jne
jae
aam
pop
mov
dec
jmp
mov
jmp
mov
cmpsb
scas
in
xlat
lea
jmp
sbb
int3
mov
add
cs
call
es
jae
movsb
inc
in
adc
cmp
xor
sub
inc
or
mov
mov
in
aas
rcr
jg
inc
mov
int3
mov
test
sub
iret
outsl
test
aas
sti
movsl
insb
ret
std
cmpsb
pop
dec
xorb
clc
sbb
xor
orb
rcrb
push
imul
icebp
adc
mov
out
jno
sub
mov
jmp
xor
lahf
jno
mov
cwtl
push
dec
loop
jae
fidivrl
imul
ror
iret
and
jmp
icebp
push
icebp
jle
pop
cmp
rcr
repnz
aaa
lods
xor
lock
mov
movsl
xchg
es
mov
je
mov
loopne
cwtl
outsb
push
cmp
dec
addr16
js
jle
insb
xchg
loope
clc
pop
cmp
sbb
cmc
in
push
mov
in
cmc
dec
and
pushf
sbb
shrl
mov
add
xor
arpl
sbb
jecxz
mov
js
add
lret
bound
adcb
fists
fildll
or
mov
fstl
ret
call
fnstcw
and
cs
shrl
xchg
imul
jnp
aad
dec
jp
call
dec
xchg
push
clc
jge
mov
jecxz
jo
arpl
or
idivl
or
jo
rorb
dec
pop
mov
cmpl
or
add
cmp
and
xor
jo
sarl
ss
sub
dec
add
mov
xor
loopne
rcrl
shl
repz
fbstp
or
popf
push
inc
gs
scas
xchg
add
pop
icebp
or
jp
mov
in
std
push
fcmovnbe
outsl
vhsubpd
loopne
or
fisttpl
popl
adc
jl
cld
scas
mov
sbb
mov
ljmp
jecxz
outsb
add
shlb
pop
int
rcrl
in
xchg
mov
or
and
jne
in
or
lock
inc
jmp
jo
lret
jnp
pop
ljmp
push
out
xchg
lss
mov
in
adc
shl
fstl
lret
push
inc
bound
int3
out
inc
inc
sbb
test
out
jns
sub
inc
cld
iret
mov
cmp
jg
mov
jae
mov
ret
lret
aas
push
sub
sbb
ljmp
in
push
in
inc
sbb
insl
int3
sub
in
jbe
icebp
dec
inc
rorb
push
test
mov
jl
fildll
push
push
out
mov
fistpl
ljmp
sbb
inc
xlat
adc
lea
testb
jno
test
aaa
push
pop
jno
movsb
andb
push
das
mov
inc
outsl
inc
fildll
mov
std
dec
fldt
sbb
jb
push
xor
loope
or
inc
cwtl
jmp
fstps
xor
iret
je
ja
inc
xchg
stos
inc
lds
sbb
push
jb
pop
fsubr
inc
scas
mov
dec
pop
xor
xchg
or
mov
fdivs
xchg
cld
roll
test
cltd
ss
xchg
and
adc
movb
lods
sbb
jbe
pop
inc
imul
rcrb
adc
inc
inc
cli
cmp
and
in
loopne
inc
pop
inc
aas
jne
ds
jmp
sbb
mov
mov
push
push
andl
clc
test
mov
pop
dec
fcomps
jge
xchg
xor
ss
in
and
cmp
adc
and
ja
pop
inc
jno
orl
push
lods
dec
sbb
popf
stc
mov
jp
andb
fwait
or
adc
lds
mov
repz
iret
pop
cmp
pop
test
xchg
add
in
js
out
insl
loopne
paddusb
pop
insl
outsb
in
in
pop
scas
jl
pop
cmp
mov
xor
dec
pop
stos
test
adc
data16
lret
push
xchg
add
popa
aad
dec
dec
xorb
add
mov
cs
xchg
pop
jle
shll
pop
iret
xorb
clc
mov
push
rorl
mov
inc
xor
dec
push
outsb
mov
mov
movsl
mov
std
jo
pop
inc
dec
rcll
mov
mov
inc
shlw
mov
pop
push
mov
xor
sbb
push
pop
stos
mov
in
notl
xor
test
inc
aas
push
mov
mov
cmp
nop
mov
dec
mov
imul
push
sbb
addr16
adc
cmpsl
mov
subl
sub
mov
ja
leave
mov
dec
gs
or
ja
or
imul
xchg
mov
dec
cmc
lahf
lea
pop
push
adc
clc
add
leave
push
xchg
fimuls
xor
or
pop
ret
and
call
or
pop
fiaddl
loopne
or
popa
mov
in
mov
insl
rclb
cmp
inc
jmp
mov
xor
std
in
clc
push
sub
pop
scas
dec
inc
fidivl
lods
cmc
mov
pop
call
test
cltd
mov
sub
xchg
mov
mov
imul
gs
daa
xchg
add
pop
inc
lea
mov
int3
mov
aaa
std
enter
add
mov
dec
add
int3
int
dec
cmp
out
pop
data16
mov
push
add
fdivl
popa
mov
adc
mov
out
jns
icebp
mov
jle
jp
push
out
adc
pop
ja
xchg
mov
in
fcomps
xchg
data16
test
push
add
sti
mov
sub
fnstsw
jl
inc
cmpsb
outsb
rcrb
or
sbb
mov
jno
fs
rcrl
push
jne
in
int
adc
cmc
mov
fsubl
sbb
lds
gs
jne
or
push
movsl
loopew
jne
mov
sbb
cmp
ficomps
jecxz
movsb
sbb
fldt
push
adc
mov
mov
jg
mov
add
dec
mov
loop
shrl
sub
in
jne
sbbl
mov
jl
add
scas
inc
pop
xchg
mov
sub
mov
pop
int3
xchg
pop
mov
rcrl
mov
inc
xor
dec
iret
dec
notb
mov
push
xlat
and
les
add
push
fmul
mov
or
dec
insl
arpl
pop
xchg
mov
mov
int
pop
xor
inc
adc
xchg
and
cmp
push
add
dec
lods
dec
fldenv
inc
push
mov
jg
pop
es
xor
mov
push
lret
jns
sub
mov
jg
in
arpl
scas
xchg
jmp
lods
push
pop
aam
push
xchg
lock
mov
outsb
adc
jmp
push
mov
inc
shlb
stc
push
mov
test
xor
add
mov
and
sbb
add
mov
mov
sti
cmpb
jns
lcall
call
lds
iret
sub
and
xorb
outsb
xor
cmp
pop
cmc
scas
pop
mov
inc
inc
mov
std
sbb
sub
insl
aaa
and
sub
or
arpl
inc
popf
mov
scas
inc
inc
mov
movsl
pop
xor
int
aas
mov
das
and
lock
rorl
mov
lods
inc
or
mov
mov
fcmovbe
push
xor
fbld
jge
or
je
mov
cli
hlt
jae
dec
shr
insl
sub
fildll
test
inc
cmp
daa
mov
outsl
icebp
mov
sbb
push
ljmp
push
mov
sub
push
add
xchg
mov
mov
dec
xor
mov
outsb
adc
repz
sub
push
lock
mov
subl
nop
outsb
xchg
cli
push
test
dec
cmp
push
aas
dec
bnd
mov
ja
mov
xor
xchg
shll
in
sub
ret
call
inc
xchg
icebp
mov
pop
daa
rol
cmc
int3
xchg
lcall
push
sbb
lods
jbe
insb
jmp
lods
inc
in
ret
hlt
or
add
stos
into
scas
outsb
cmp
mov
mov
les
and
test
stc
pop
or
xchg
sub
mov
mov
sbb
ds
repnz
out
je
adc
pushf
mov
pop
xchg
sub
cmp
pop
icebp
add
add
orb
in
mov
mov
fidivl
dec
adc
adc
push
pop
hlt
adcl
sbb
xchg
sub
int3
pop
mov
loopne
mov
daa
scas
inc
cwtl
push
mov
jns
xchg
xchg
mov
pop
mov
call
lock
dec
push
in
andb
aam
mov
inc
fmulp
enter
out
xor
inc
xlat
cwtl
pop
jno
mov
sub
popl
mov
mov
hlt
jp,pn
fdivs
je
fsubl
lret
xchg
stos
int
mov
xor
inc
fwait
push
dec
dec
fiadds
add
mov
shll
jo
test
adc
xchg
sub
aad
in
or
cltd
jns
scas
inc
fs
iret
lds
and
mov
dec
out
rcll
pop
mov
insl
or
lret
and
jl
dec
call
lcall
push
in
push
dec
lcall
popf
mov
icebp
loope
rcll
mov
fbld
xchg
fisubs
std
test
lret
add
mov
mov
mov
sub
in
cmpsb
cmp
dec
sbb
loope
imul
jmp
movsl
cmp
cmp
push
insl
and
pop
push
mov
jne
jno
shlb
js
mov
and
cmp
imul
jle
lahf
pop
pop
cmc
mov
pushf
xor
lods
dec
jecxz
pop
jnp
ss
or
mov
testl
xor
ja
mov
xor
nop
repnz
pop
ss
push
sub
xchg
movsb
inc
fst
mov
sbb
jo
ss
xchg
xchg
mov
in
sub
lds
mov
mov
repnz
dec
adcb
jo
adc
leave
aas
cli
out
out
adc
ss
push
cmpl
mov
or
mov
jnp
mov
ret
pop
aaa
xlat
cltd
xor
pop
loope
mov
mov
pop
lods
call
stos
decb
sub
xchg
sub
dec
push
out
jg
xchg
sub
popf
sbbl
jb
inc
test
jne
and
sub
stc
inc
gs
js
add
dec
fsave
mov
lcall
mov
inc
pop
ja
push
in
dec
xchg
jmp
les
fisubs
ret
cmpsl
ds
sbb
dec
xchg
sti
movsl
pop
add
cmp
repz
xchg
adc
adc
lahf
testl
dec
pop
push
out
push
fistps
rclb
cmc
mov
or
push
das
movb
data16
inc
fisubs
leave
cltd
xor
stos
es
xor
dec
or
sarl
xor
xchg
pusha
dec
fists
mov
jecxz
add
cmp
movsl
cmp
pop
sbbl
mov
out
cli
pop
repnz
idiv
xchg
sub
adc
pop
repnz
std
sbb
clc
pop
sub
cmc
aad
sub
xchg
xchg
repnz
mov
mov
imul
in
test
je
bound
scas
xchg
sti
xor
data16
push
and
add
mov
shl
inc
sub
nop
repz
pop
sar
in
pop
sbbl
and
shrb
cltd
xor
mov
xchg
xor
out
pop
cmc
sbb
pop
daa
mov
mov
cmpsl
ds
xchg
mov
leave
push
or
ss
adc
addr16
pushf
fnstenv
add
sahf
cmp
jbe
in
ret
lods
inc
fmuls
mov
js
mov
repnz
or
mov
jp
imul
test
rcr
push
mov
aas
inc
inc
fidivs
mov
adc
movsl
cmp
cmp
pusha
imul
orb
cmp
adc
arpl
adc
or
adc
fs
sub
lcall
inc
adc
and
mov
shlb
adc
jmp
or
mov
leave
inc
sub
popa
push
les
sub
and
xchg
push
fucomip
orb
sub
roll
call
add
lahf
add
inc
faddl
adcb
shr
xchg
fdivrl
adc
pushf
xor
xor
cmp
fsubrs
in
and
aam
or
add
in
pop
and
lcall
fistps
or
sbb
repnz
enter
decb
xchg
pusha
cli
add
in
std
pop
repz
cmp
jo
pusha
imull
test
hlt
faddl
xchg
sub
loope
call
in
mov
xor
arpl
push
in
push
add
insb
in
dec
loopne
mov
pop
lock
and
sub
jns
das
dec
xor
jg
pop
hlt
jb
cltd
xor
lcall
push
std
pop
scas
cs
push
ljmp
and
ror
inc
pop
sub
dec
fs
dec
jnp
in
add
pushf
adcb
xchg
mov
enter
sbb
std
xchg
sbb
sbb
mov
mov
je
aaa
xchg
sub
dec
in
xorb
jl
int3
test
iret
mov
push
pop
sbb
imul
fdivl
lret
sub
add
inc
fcomi
and
push
ljmp
xchg
cs
into
push
movsl
sti
mov
fnsave
scas
inc
cmp
pop
adc
in
mov
das
loop
into
gs
jae
ds
push
out
pop
pop
scas
mov
xor
arpl
inc
test
scas
adc
xor
and
push
es
lret
lcall
xchg
outsl
xchg
mov
mov
mov
mov
push
jg
mov
arpl
pop
repz
jg
and
mov
xor
xor
pop
xlat
outsb
lcall
aam
adc
sub
mov
push
je
cmp
dec
int3
in
into
adc
mov
push
imul
sub
mov
inc
adc
dec
jecxz
cmp
xchg
push
mov
xor
fisttpll
das
pop
sub
push
pop
je
sub
data16
repz
pop
add
imul
jg
pop
lods
mov
push
call
or
out
and
push
pop
jns
lea
xor
cmpsl
ds
or
addl
repnz
sahf
cwtl
lods
dec
data16
std
adc
or
xlat
cmp
pop
inc
fimuls
movsb
push
call
ss
insl
add
pop
shrl
pop
lods
inc
xchg
cmpsl
int
aad
add
sub
inc
cltd
xor
sbb
xchg
lahf
in
int
push
in
out
out
add
jo
xchg
sub
rcll
fldl
mov
jo
pushl
int
repnz
cmp
dec
dec
jecxz
dec
push
in
jnp
adc
lret
hlt
lods
inc
and
js
and
cmp
mov
jp
xchg
dec
daa
cwtl
mov
add
test
out
sbb
repnz
xor
repnz
leave
sbb
lds
test
push
mov
pop
ret
ficomps
mov
loope
pop
shlb
ljmp
adc
into
repz
xlat
repnz
andl
clc
mov
sub
in
sbb
xor
lea
lock
jae
or
mov
jecxz,pt
and
rorl
mov
shrl
pop
int
mov
xor
mov
imul
sbb
jmp
and
ret
push
icebp
xlat
sbb
cld
fisttpl
xor
jge
inc
push
sti
aaa
enter
sbb
imul
testl
mov
and
xchg
je
fimuls
shld
lods
dec
dec
push
insb
inc
dec
cwtl
pop
and
std
jne
sbbb
xchg
test
sbb
mov
jo
jbe
mov
pop
popf
xor
pop
ret
ss
in
pop
jl
mov
cmp
pop
leave
mov
stos
inc
pop
rorb
add
xchg
mov
or
das
das
fstl
inc
fidivrs
testb
pop
popl
cmc
push
dec
fistpll
sub
xchg
sub
add
pop
or
and
outsb
lcall
pop
jmp
pop
sub
iret
push
cmpsl
pop
push
int3
in
cmp
mov
xor
addl
in
test
fs
dec
mov
push
sahf
xor
jmp
cmpsb
add
rorl
xchg
dec
loop
sbb
dec
test
cld
mov
test
dec
dec
pop
or
ds
cltd
outsb
pop
cwtl
das
mov
jo
pushf
test
test
or
jge
mov
push
out
mov
aaa
lock
sub
mov
jmp
out
pop
cltd
xchg
mov
push
mov
fidivl
cmp
in
pop
leave
jb
je
ljmp
pushf
in
test
repz
and
inc
scas
popa
arpl
dec
mov
jae
pop
lret
mov
push
inc
sbb
rolb
into
sbb
insl
jae
cwtl
bound
stos
jno
lahf
xchg
dec
inc
dec
roll
jnp
dec
cmp
dec
sub
andl
insl
movsl
mov
in
inc
fdivr
adc
sub
and
jecxz
in
pop
mov
sub
mov
xchg
dec
jecxz
iret
push
int
sarb
mov
add
es
js
lret
xor
jl
mov
push
popf
cmp
sbb
jb
cwtl
or
sbb
mov
jns
xchg
dec
push
inc
mov
popa
and
xchg
orb
sub
xor
sahf
mov
xor
sbb
pop
cs
cmpsb
mov
pop
mov
push
stos
imul
repz
repnz
push
push
mov
jno
push
pop
lahf
xchg
xchg
or
sbb
push
xor
mov
xlat
insl
xor
adc
adc
pop
xor
in
sbb
lds
add
lods
pop
cmp
jg
addl
sbb
cmpsl
aas
cmc
add
imulb
pushf
data16
mov
roll
mov
into
outsb
inc
into
push
sub
out
es
test
sbb
mov
jge
lret
imul
negl
lds
adc
lods
mov
adc
pop
ror
xchg
add
fnstenv
out
shl
gs
aad
fcom
mov
xor
mov
sbb
outsb
movsb
lret
testl
rcl
in
lds
or
ljmp
adc
lcall
jo
insb
mov
cmp
gs
addr16
push
shrl
jmp
push
test
cld
mov
rsm
gs
cld
mov
mov
fdivrl
loope
cmp
lods
in
sub
aam
lret
lea
in
bswap
mov
rcrb
ja
adc
mov
into
adc
fstp
xchg
inc
pushl
dec
leave
enter
shll
mov
push
inc
repnz
pop
pushl
push
inc
jmp
aas
mov
das
insl
stc
loope
iret
sub
rorl
cs
cmc
mov
int3
sbb
jnp
fnstcw
cli
jmp
lods
lahf
xchg
xor
push
xchg
xchg
insb
lahf
cs
cmp
shl
push
xchg
das
lock
mov
in
and
or
push
sbb
push
cwtl
sbb
jg
imulb
mov
in
leave
sahf
outsl
mov
shl
inc
mov
fs
jbe
inc
repnz
mov
roll
icebp
cmp
out
lods
jne
mov
test
das
in
cmpsl
mov
mov
repnz
and
mov
clc
add
into
movl
cmc
xor
mov
push
lcall
and
mov
and
shrl
std
or
ljmp
pop
stos
popa
and
inc
lock
ret
inc
sbb
inc
fdivrs
out
push
stos
mov
shlb
enter
aas
out
sub
xor
jmp
mov
js
fmuls
andl
xor
pop
jno
xchg
aaa
pop
aaa
into
cmp
addb
dec
ja
push
xor
test
jbe
addr16
lods
push
int
mov
xor
in
push
pop
shrb
pop
adc
pop
cmc
add
xlat
jl
out
inc
mov
std
push
cmp
testl
ljmp
outsb
add
and
xor
dec
lea
dec
mov
or
loop
popf
cmp
sbb
pop
sahf
insb
outsb
or
outsb
mov
add
jg
xchg
icebp
sbbb
movsb
inc
cwtl
repnz
lcallw
call
or
and
lret
lods
loope
outsb
mov
setae
pop
mov
repz
xor
lea
movsl
or
push
aas
sub
lcall
arpl
xchg
dec
sub
xchg
push
push
leave
imul
or
test
or
jnp
ret
cmc
sub
or
sub
sub
adc
cmp
int
test
pushf
pop
sbb
jns
pop
add
pop
xchg
push
dec
iret
push
loope
pop
mov
ficoml
test
push
sbb
and
xor
xor
adc
mov
data16
push
in
stc
mov
es
test
push
sub
push
sub
js
fimuls
pop
jle
push
out
js
inc
arpl
push
lret
xorb
dec
or
and
inc
adc
ds
cwtl
cmpl
lea
dec
inc
loope
pop
inc
mov
push
and
jbe
popa
xchg
mov
ja
arpl
xchg
pop
addr16
lea
lods
push
sbb
or
daa
pop
enter
sub
std
out
xchg
jmp
in
mov
adc
mov
movsb
mov
movl
mov
dec
push
dec
lds
cmp
loopne
jns
push
pop
sahf
loop
push
inc
add
add
daa
idivb
xor
mov
pop
sub
outsl
xchg
stos
and
cs
insl
xchg
add
mov
pusha
mov
cmpsb
mov
hlt
insl
mov
loopne
pop
movsl
lret
cmpsb
mov
fildl
iret
mov
lret
xor
fcmove
popa
fisttpl
sbb
mov
lods
nop
out
icebp
stc
dec
mov
ret
inc
cli
leave
insl
pushl
add
push
mov
insl
aad
or
cli
stos
or
repz
sbb
mov
jp
sbb
jns
ret
xchg
das
loopne
lods
push
enter
cmovs
jge
push
ret
push
push
push
or
imul
je
xchg
sub
sbb
repz
icebp
mov
aad
mov
aaa
lret
out
sbb
lods
lods
or
push
jmp
outsl
mov
ficompl
fnstcw
sub
jnp
push
pusha
sub
dec
jge
repz
mov
imul
aad
inc
loop
jmp
inc
movsb
xchg
pop
or
xor
mov
jne
xchg
xchg
xchg
xchg
movsl
pop
sub
xchg
xchg
pop
mov
test
popf
jnp
or
dec
mov
dec
ja
aad
pop
arpl
test
and
clc
jo
sbb
cmp
jl
fwait
xchg
dec
xor
mov
mov
push
mov
int
inc
mov
fsubrl
stos
cmp
jg
mov
int3
arpl
cmc
push
loopne
dec
mov
sbb
xchg
mov
test
xchg
or
lahf
jne
mov
adc
mov
lods
or
push
fwait
push
cltd
dec
shrb
jo
inc
jns
fidivrl
popa
xchg
imul
push
xchg
and
jle
mov
lods
or
adc
xchg
int3
xchg
sub
adc
jge
aad
sbb
adc
mov
xchg
mov
stos
mov
add
sbb
sub
inc
push
mov
inc
pop
mov
pop
pop
and
cmpsb
push
mov
xorl
jg
test
je
add
xchg
adc
inc
push
ds
pushf
aam
pop
mov
xor
add
in
cmp
and
cmp
xchg
add
add
scas
pop
dec
xchg
das
push
inc
popf
xor
mov
cs
pop
xchg
nop
xchg
das
leave
and
cli
clc
xor
xor
fs
and
add
pop
imul
sbb
out
or
orl
lret
and
arpl
mov
cmp
out
mov
or
cmp
hlt
sbb
jle
rcrl
arpl
cli
jns
out
xchg
add
adc
js
mov
cmpb
cmp
rclb
jne
push
jnp
fldl
xor
sbb
lcall
and
push
sub
mov
ret
loop
mov
pop
idiv
push
sub
out
pop
push
negb
xor
xor
test
fadds
std
cmp
rorb
je
jp
push
mov
sahf
xor
repnz
or
aas
fisttps
movl
adc
jle
inc
fistps
lods
in
or
add
inc
and
popa
mov
xor
aam
es
mov
jno
mov
inc
cmp
pop
cltd
popf
popf
mov
pop
rorl
mov
mov
ljmp
movb
loop
cmp
cs
jb
ds
and
and
sbb
xor
sbb
aas
xor
push
popf
mov
stos
adc
adc
gs
xchg
aaa
ficoml
and
rcl
sbb
mov
lcall
and
in
das
jmp
push
or
lret
aam
jmp
call
ds
stc
repnz
dec
test
loope
mov
repnz
aas
int
fwait
xor
add
and
push
aad
cmpsl
mov
mov
jecxz
addl
std
add
sub
jle
call
sbb
or
and
inc
pop
fisubs
gs
push
cmpsb
and
pop
stc
test
imul
mov
lea
cwtl
nop
daa
jg
mov
cltd
cs
jge
stos
xchg
mov
jmp
push
arpl
aam
nop
outsb
andl
push
mov
push
pop
jo
pop
dec
cli
ss
push
cmp
mov
out
mov
iret
pop
and
lret
xor
cltd
rclb
mov
mov
lods
pop
sub
mov
inc
iret
ljmp
lock
cmp
movsl
jo
test
ja
cli
rcr
outsl
sbbl
shlb
cmc
cmp
int
xchg
mov
mov
addl
shrl
jno
clc
inc
fadds
loop
adc
outsb
cmp
fistpll
sbb
or
ret
push
es
push
mov
xor
xchg
xchg
xchg
fs
scas
inc
sbb
sahf
inc
push
lods
imul
int3
cltd
cmp
jle
sub
in
mov
loope,pt
pop
std
sbb
mov
pop
pop
addl
push
cmp
push
test
xlat
ds
sub
dec
jg
rcll
aas
xchg
dec
xchg
mov
lock
lds
mov
loopne
aad
dec
scas
into
aad
inc
xorl
sub
jno
lcall
jnp
ss
and
xchg
insl
jb
pop
rcrl
sub
pop
lods
mov
arpl
mov
dec
add
xor
dec
int
jae
rclb
or
ss
xlat
addr16
pop
xor
push
sarb
jae
fnstsw
add
push
mov
pop
ret
nop
or
jl
int
mov
leave
into
push
faddp
lea
test
xchg
mov
adc
cmpsl
inc
ja
dec
add
subl
out
fidivrs
outsl
incl
leave
jl
es
fnstsw
leave
pop
lret
jmp
sahf
mov
ljmp
insb
mov
pop
xor
mov
dec
sub
mov
pop
fwait
pop
stos
jo
mov
scas
jo
xchg
or
xor
jnp
xor
in
js
movsl
popa
xchg
cmp
mov
mov
repnz
imul
ja
faddp
ret
fstpt
xchg
int3
cmp
stc
lock
out
sbb
cmp
ljmp
xchg
fsubrs
jg
mov
mov
insl
mov
cmpsb
pusha
mov
movl
inc
mov
dec
fsubrs
mov
and
push
cwtl
push
or
jno
movsl
arpl
add
dec
and
jge
cmp
pop
dec
pop
or
push
mov
cmp
int3
inc
insl
dec
in
push
sub
xor
cwtl
or
add
cmp
jg
pop
hlt
cltd
dec
xor
dec
mov
xor
and
subb
push
adc
lret
les
sub
adc
ss
fsubrl
divl
je
pop
scas
jae
mov
jnp
xchg
push
add
sahf
test
sbb
jb
sbb
jb,pt
rorb
cmp
dec
adcl
imul
push
cmpsb
pop
jle
iret
push
sbb
push
pop
outsl
mov
jno
push
aam
cmp
fisttpl
jo
nop
imul
outsl
sbb
cmp
mov
cmp
test
cmp
pop
es
adcb
stos
mov
repz
sarl
pop
push
test
in
lods
je
adc
inc
shlb
test
inc
or
mov
push
mov
push
movsl
mov
lea
loop
test
sub
mov
pop
mov
push
mov
xchg
mov
jnp
inc
dec
jg
jg
dec
movsl
mov
cmp
mov
in
and
cmp
jle
mov
xchg
sub
or
jne
add
adc
sbb
cs
and
pop
mov
bound
aaa
jno
cmpsl
inc
mov
mov
fisubrl
in
jmp
sbbb
sub
mov
ret
cltd
mov
lds
cltd
sti
mov
push
cld
xorb
inc
int
in
add
ljmp
and
pop
gs
nop
xchg
sub
add
std
out
sbb
mov
cmc
sbb
mov
mov
leave
sbb
call
cltd
lods
and
or
andl
cmpb
xchg
jmp
lods
aam
shrl
ss
jl
into
xchg
mov
sub
jo
enter
inc
fisttpll
push
inc
mov
das
and
ja
mov
inc
and
or
dec
mov
xchg
sub
and
jg
ss
aad
push
and
arpl
adc
mov
in
sub
dec
jns
ds
fimull
addb
sbbb
and
sbb
scas
inc
pop
addr16
push
inc
shrl
ss
dec
mov
jp
and
dec
dec
fildll
addr16
jle
clc
imul
mov
popf
repz
push
push
adc
inc
cmp
xchg
sub
int
aas
inc
test
mov
icebp
filds
jae
outsl
inc
mov
imul
lea
xorl
scas
std
das
aam
push
into
fdiv
sub
fistl
shlb
xor
into
sbb
imul
add
mov
jle
bound
dec
shlb
ret
fcomps
rorb
fsubs
or
dec
and
fdivrl
inc
enter
fmuls
or
jg
push
call
push
xor
das
xchg
mov
adc
inc
lcall
xor
dec
js
aas
incl
mov
lods
jne
mov
mov
inc
mov
cmc
lods
arpl
dec
add
pop
fcompl
lret
jno
adc
jg
pop
sub
fistps
sbb
lods
lods
push
lret
stc
in
push
into
mov
inc
xlat
in
sub
loope
sbb
add
mov
data16
insl
inc
adc
xchg
mov
ljmp
adc
push
cmpsl
push
or
scas
jecxz
ss
lret
inc
shrl
aad
mov
xchg
fyl2xp1
mov
sub
jg
leave
dec
xchg
mov
add
cmp
mov
lea
popa
mov
out
sbb
shrb
repz
inc
sbb
js
ja
cmpsb
ss
mov
int3
inc
outsb
mov
imul
inc
mov
das
adc
lcall
sbb
nop
jge
mov
lahf
push
sub
outsb
mov
subb
arpl
in
sbb
jge
or
rolb
shll
xchg
xchg
jg
mov
pop
iret
cltd
cmc
insl
lahf
out
inc
mov
push
call
jns
inc
mov
lcallw
jne
outsl
lods
outsl
cmp
push
mov
fs
hlt
push
into
call
mov
into
inc
jae
pop
icebp
fcoml
jmp
xchg
cwtl
adcl
das
jecxz
xchg
jno
sub
out
mov
incb
pusha
push
mov
cs
push
lods
outsl
jnp
sbb
dec
lds
or
fcomps
mov
popa
stos
mov
cld
and
xchg
fdivs
push
sbb
sub
cmpb
pop
ss
xchg
je
sbb
pop
and
push
xchg
jmp
dec
pop
inc
jne
cmp
jae
outsl
xchg
stc
adc
arpl
ss
inc
adc
xor
pop
hlt
into
jnp
add
sbb
xchg
fdivr
xor
push
int3
arpl
into
aaa
mov
jnp
xor
lret
popa
push
pushf
cmp
jne
popa
xor
adc
test
divl
push
out
and
jg
fcoms
sahf
orl
cmp
sbbb
std
stos
jle
xor
and
push
in
jg
inc
xchg
js
clc
mov
mov
fists
cli
fcompl
inc
stos
roll
xlat
cld
lods
inc
out
les
mov
out
push
mov
mov
push
int
mull
mov
das
xchg
repnz
pop
cli
lods
fiadds
add
std
cmp
mov
out
and
mov
icebp
ss
rcll
movsb
into
adc
mov
std
out
xor
mov
fimuls
mov
lods
jnp
mov
mov
sbb
jnp
sub
aad
inc
aas
lea
xlat
sbb
icebp
dec
cli
inc
icebp
ss
scas
scas
inc
loope
xlat
dec
push
add
cmp
adc
popf
sbb
sidtl
mov
sub
push
xchg
push
push
cmp
mov
test
repz
fmull
pop
xor
xor
jno
mov
xor
leave
jne
cmp
push
outsb
add
ja
lret
cmp
jl
or
fwait
xor
test
sahf
lcall
fnstcw
dec
int
sbb
dec
mov
mov
bound
fs
pushf
xor
mull
pop
bound
les
mov
hlt
shrl
jb
es
mov
mov
jge
repz
inc
fcoms
add
cli
xchg
adc
mov
mov
gs
fwait
xchg
out
sub
fwait
sbb
sti
xchg
mov
pop
add
repz
cmc
sbb
out
xchg
jnp
aad
mov
add
pop
mov
rorl
int3
dec
and
rcrl
mov
push
cmp
and
xchg
js
lea
jns
test
and
lret
sub
pop
andb
sbb
stos
mov
or
orb
notl
sbb
jp
mov
and
test
insb
dec
lret
and
lahf
xor
test
and
insb
mov
cmp
ffreep
cmp
mov
cld
or
fstl
imul
push
lcall
ss
mov
adcl
das
or
cmpsl
imul
popf
lea
jp
rcrl
shlb
mov
mov
mov
imul
loopne
push
adc
movsl
cmp
add
xor
ret
pop
mov
fabs
js
test
lret
fldcw
xchg
pop
cli
push
jmp
mov
jo
jle
cmp
add
pop
lock
rep
inc
and
inc
lret
lret
cld
cltd
call
dec
dec
in
push
popf
sbb
ds
outsl
lock
nop
inc
fld
pop
xsha1
cmpsb
dec
loop
notl
push
les
mov
pushf
xor
fidivrl
pop
xchg
sub
cmpsb
cmp
mov
lds
adc
add
jecxz
mov
add
test
and
sti
push
ds
sbb
and
movsl
pop
repz
outsl
stos
inc
mov
ret
leave
pusha
cmc
dec
cwtl
das
jl
call
dec
iret
imul
imul
and
in
inc
repnz
inc
fidivrl
xchg
adc
xchg
call
jg
in
dec
jecxz
push
sahf
xor
mov
fisttps
jno
xor
nop
xor
pop
scas
test
loop
or
add
sub
mov
dec
jno
jl
cmp
add
pop
icebp
push
icebp
lods
inc
and
xstore-rng
cmpsl
inc
lret
bound
xchg
sub
leave
sbb
sahf
sbb
push
cmp
mov
hlt
mov
mov
loopne
clc
adc
lds
mov
popf
xor
or
add
fdivrs
and
mov
ds
testl
add
jnp
and
lret
add
cmpsb
jmp
mov
enter
push
ds
sbb
repz
lods
inc
pusha
mov
jp
jne
xchg
jle,pn
xchg
sub
adc
mov
gs
xchg
mov
sbb
dec
scas
call
sahf
add
mov
mov
cmp
inc
aaa
cmp
jge
leave
scas
fistpl
pop
fwait
mov
es
out
mov
jmp
das
or
add
pop
mov
fbstp
jle
ss
mov
je
push
repz
sub
sub
dec
leave
jle
and
push
into
lods
inc
add
dec
mov
lret
bound
shrl
outsl
jmp
inc
repnz
pop
call
dec
xchg
sub
outsl
lods
inc
mov
jbe
test
lret
or
cs
pop
arpl
xor
push
add
xchg
push
mov
mov
mov
pop
pushf
pop
xchg
xor
cwtl
inc
jge
pop
es
or
mov
aaa
xchg
push
mov
mov
push
je
je
pop
in
jle
xor
mov
js
nop
int
gs
pusha
insb
mov
xchg
push
mov
pop
pop
inc
add
or
movsb
add
mov
inc
pop
arpl
popa
ret
sbb
bound
fcomi
sbb
pop
xchg
inc
cwtl
sahf
hlt
fcmovb
push
pop
cli
inc
in
fstpt
in
stos
jle
aaa
dec
imul
adc
push
sub
dec
jg
insl
out
in
jae
insl
js
sbb
jmp
push
call
xchg
popa
sub
sti
inc
dec
adc
test
push
sahf
cltd
pusha
aam
rorl
xor
push
adc
test
loopne
xor
or
jp
adc
cltd
stc
std
sbb
out
cld
or
inc
shlb
dec
xchg
mov
test
loop
dec
into
jo
iret
mov
and
xor
lods
sub
fists
push
fwait
xchg
lock
push
add
out
fs
scas
or
insl
nop
push
or
mov
mov
ret
dec
dec
sub
popa
incl
test
jbe
pop
icebp
sahf
aam
call
lahf
int3
fdivrl
movsb
ja
sar
in
jnp,pn
jno
jns
es
inc
jnp
adc
outsl
out
sbb
iret
je
or
sahf
ljmp
in
call
xor
add
in
mov
sti
xchg
xchg
fbstp
pop
xchg
jb
sbb
mov
nopl
ja
mov
add
rcr
or
and
mov
fadds
jmp
mov
pusha
sub
sub
fdivrs
adc
inc
dec
rcl
test
pop
es
shll
xchg
out
mov
lea
lret
sbb
sbbb
repz
sahf
mov
lods
add
xchg
dec
add
cmp
add
lret
jp
insb
daa
mov
ljmp
inc
mov
jno
into
jbe
push
pop
pop
or
sbb
push
divl
movsl
sbb
cs
ss
xor
nop
int3
add
adc
testl
jb
xchg
sub
cmp
lods
inc
or
xor
xchg
sub
fildll
scas
push
jge
mov
in
add
xchg
jne
out
hlt
sbb
sahf
mov
jmp
ret
pop
scas
test
gs
sub
test
push
ljmp
xor
in
imul
push
sbb
xchg
inc
xchg
sub
mov
inc
inc
into
cmp
dec
fistpll
data16
push
std
pop
imulb
inc
test
jb
jno
add
adc
or
mov
push
mov
sbb
ds
jne
fwait
cmpsb
inc
hlt
pusha
xchg
mov
imul
jns
xchg
rolb
aam
dec
mov
popa
mov
shlb
push
rolb
fld
xchg
pinsrw
push
and
in
mov
mov
frstor
mov
movsl
xor
xchg
cmc
cli
fisubl
subl
cmc
cmp
add
and
mov
mov
jno
add
pop
pusha
idivb
inc
test
daa
xor
aas
fsubl
jns
movsb
xor
stos
and
test
add
push
and
pop
mov
push
in
inc
test
push
int
pop
xor
les
sbb
jp
insb
repz
dec
adc
into
cltd
mov
aaa
pop
lret
sub
imulb
cld
jge
cmc
ret
sub
push
xchg
mov
roll
mov
out
jne
dec
adc
cmp
clc
pusha
pop
jp,pn
rorl
data16
faddl
mov
lea
pop
pop
shlb
or
pusha
push
cli
jge
aam
pop
jo
insl
mov
mov
xor
push
dec
jne
repnz
imul
push
std
pop
outsb
push
rorl
mov
and
hlt
pop
pop
xor
jo
loopne
lds
jns
jl
imul
mov
pop
adc
xchg
push
inc
cli
pusha
incl
jnp
jb
lods
dec
pop
loopne
out
jae
hlt
adc
int3
fwait
lret
sbb
aaa
push
or
arpl
and
addr16
inc
or
xchg
cmp
cmp
loope
mov
xor
mov
mov
add
loopne
in
cltd
inc
or
xchg
mov
push
stc
mov
lods
xor
repnz
fstl
rcl
lahf
sbb
insb
or
dec
adc
daa
test
popf
push
cld
lcall
inc
or
es
pop
loop
lcall
ja
pop
es
sbb
adc
mov
es
mov
outsl
push
mov
jp
jo
pop
and
fwait
cmp
sub
insl
push
push
int
jae
push
jns
push
popa
imul
xchg
cmp
jbe
out
push
lds
lock
xchg
gs
pop
jecxz
sbb
cmp
mov
gs
mov
add
push
jb
ret
aaa
xor
cmp
inc
push
in
and
mov
adc
popf
insb
mov
push
hlt
sbb
insl
shrl
mov
jmp
mov
addr16
lret
outsl
jle
or
mov
inc
sub
lock
push
mov
es
mov
cmp
push
mov
mov
into
mov
pop
ret
sahf
cmp
lea
mov
or
and
insl
pmaxub
xchg
jl
push
inc
int
xor
push
mov
enter
adc
jbe
in
push
lods
into
jmp
sbb
adc
mov
leave
mov
lods
adcl
add
sbb
inc
jecxz
sbb
or
int3
inc
popa
hlt
mov
cli
pop
divl
or
dec
fstpt
adc
negb
popa
repz
add
js
inc
adc
addr16
inc
pop
add
cltd
inc
push
lret
lahf
mov
cmp
fldl
fmull
dec
test
int
xor
sub
and
add
push
push
or
mov
sub
les
push
sub
bound
adcl
lea
sub
out
inc
adc
ljmp
cmpsl
je
sub
in
add
ret
ret
xor
sub
dec
or
les
cmp
out
imul
xchg
inc
pop
adc
sub
pop
dec
or
adc
out
out
mov
imul
imul
push
ret
std
push
scas
sub
or
cltd
xchg
out
scas
sub
daa
mulb
outsb
in
mov
push
std
sbb
pop
cld
lods
sbb
jnp
hlt
pop
mov
and
mulb
ja
in
adc
mov
pop
xchg
mov
test
mov
adc
iret
inc
clc
pop
outsl
adc
mov
je
icebp
sbb
test
in
inc
fdivl
repz
xor
popf
push
outsb
in
addr16
add
lock
pop
cli
and
gs
xor
sbb
test
jbe
outsb
mov
or
je
mov
jecxz
ret
stos
cs
scas
in
addr16
pop
and
js
jmp
or
es
adc
enter
adc
scas
daa
mov
test
pop
div
pop
cld
mov
movsb
lcall
lret
xchg
jne
push
sti
lret
cmp
pop
shrb
lret
cld
jbe
sub
jecxz
nop
and
or
inc
cmc
mov
xchg
out
inc
in
pop
mov
hlt
stos
sub
jl
nop
and
mov
je
dec
cli
sbb
dec
add
xsaves
mov
je
sub
std
pop
das
in
mov
push
push
xor
jl
fisttps
sbb
xlat
jle
dec
jno
dec
scas
mov
shlb
out
sarl
xor
in
pop
mov
lret
iret
xchg
inc
idivb
push
xchg
loope
test
les
mov
les
lret
clc
sbb
cs
mov
mov
out
jge
or
out
out
outsl
xchg
ds
enter
inc
mov
fadds
mov
mov
push
fs
cmpsl
xchg
je
mov
into
nop
pop
push
jmp
addr16
ret
lea
cmc
das
sbb
sbbb
out
xor
pop
stc
or
std
pop
clc
push
mov
out
and
xchg
repz
rclb
lcall
jb
jg
lcall
dec
mov
int
lds
xchg
sahf
and
test
jo
enter
inc
adc
int
and
mov
cmp
std
xor
xor
icebp
shrl
dec
add
cmp
jecxz
inc
adc
fnstsw
imul
popa
xlat
or
leave
adc
fwait
jecxz
rclb
cld
sbb
push
insb
out
emms
loop
sar
pop
mov
mov
add
jl
outsb
jmp
fcmovnbe
mov
or
mov
ds
cs
out
cltd
cmp
or
inc
push
ljmp
or
jle,pt
icebp
arpl
fs
inc
cli
xchg
aas
je
dec
pop
fwait
imul
jp
lret
sbb
stos
test
mov
or
mov
insl
sti
jmp
xchg
sbb
scas
sbb
xchg
icebp
imul
les
fstl
push
or
and
xchg
mov
aam
lock
iret
xchg
ror
xor
fadds
cmp
and
mov
mov
push
movsl
mov
aam
mulb
xor
ret
push
cli
xchg
in
lock
jmp
mov
xchg
ret
rorl
shl
sub
data16
add
mov
cwtl
aaa
pop
aad
inc
xlat
pop
lods
sub
adc
mov
inc
adc
sbb
sub
push
add
mov
loop
repnz
sbb
movsb
and
sbb
cmp
loopne
or
xchg
sub
pop
mov
mov
mov
lret
xchg
rcr
loope
adc
arpl
cli
inc
or
sub
nop
cmp
sbb
popa
in
jge
gs
jmp
flds
or
add
xchg
push
lea
add
xor
in
sub
idivb
repz
push
sub
xchg
int
and
ret
sbb
repnz
inc
ljmp
xorl
les
aam
bound
sbbl
mov
jmp
pop
mov
push
sti
adc
mov
xor
dec
fiaddl
data16
mov
lahf
push
pop
negl
jbe
cmp
test
call
and
xor
mov
ret
or
frstor
xchg
inc
in
push
cmp
in
faddl
scas
sbb
sub
inc
xlat
fnstcw
sahf
xchg
sub
jae
and
sub
push
ss
push
dec
mov
shlb
pusha
repz
outsl
mov
insb
ret
loopne
enter
repz
pop
push
lret
out
clc
das
sub
fstpl
lods
push
add
mov
pop
pop
rcll
mov
jecxz
fs
data16
add
pop
bound
pop
push
pop
adc
jns
lods
adc
shlb
into
aaa
add
das
lods
aam
ret
xchg
adc
sahf
xor
xor
mov
pop
stc
shl
fs
jecxz
ficompl
lea
sti
ja
mov
cmp
das
push
pop
repnz
mov
int
lea
inc
loopne
shlb
mov
add
sbb
negb
dec
insl
hlt
out
xor
xor
test
imul
or
jl
popa
xchg
xor
adc
lea
cmp
adc
mov
cmpsl
sub
pop
movsl
loopne
push
lea
xor
insb
loop
push
jl
pop
add
or
mov
ret
je
adc
aas
ljmp
dec
sub
js
lcall
push
pop
add
dec
adc
imul
sub
and
sar
mov
and
fcoms
mov
les
xlat
sub
cmp
adc
out
inc
adc
das
add
xchg
cmp
and
fbstp
cmpsb
mov
adc
cmp
daa
hlt
and
shlb
pop
clc
outsl
ds
std
ret
jae
test
pop
xchg
inc
pop
mov
xchg
inc
inc
das
sbb
xor
lahf
aas
incl
hlt
aad
stos
sub
or
rorl
push
rclb
xchg
repnz
flds
data16
out
je
jbe
or
mov
stos
mov
or
clc
mov
jg
mov
repnz
sti
arpl
add
fyl2xp1
xchg
xorps
push
jno
test
mov
mov
shll
aad
or
pop
push
xchg
inc
aas
dec
cmpsl
xor
jle
pop
js
jp
stc
bound
pop
loop
bound
inc
adc
js
mov
popf
aad
fwait
and
add
add
jne
and
sbb
insl
adc
and
js
xor
ret
mov
xchg
lret
xor
sub
nop
bound
les
fdivs
lret
mov
adc
out
rcl
lock
and
or
sti
fdivrl
in
sub
mov
int3
cmpsb
add
pop
mov
pop
idivb
hlt
pop
gs
jbe
push
divl
lret
out
cltd
fstpl
jns
or
inc
mov
cltd
cmp
dec
test
sub
int
push
lret
lret
xor
aam
repz
pop
and
sbb
gs
push
dec
jne
xlat
repnz
out
loop
cli
adc
inc
xor
ljmp
xor
xor
xor
loope
imul
adcb
mov
insb
in
scas
xlat
push
add
pop
stc
xchg
mov
inc
cmp
loopne
addb
bound
pop
int3
arpl
mov
lret
inc
pop
jns
jge
and
push
clc
insl
cmp
scas
mov
mov
pop
sbb
std
pop
mov
add
rorb
mov
loope
pop
movl
ja,pt
jp
push
inc
arpl
out
inc
push
adc
dec
stos
push
sbb
mov
test
stos
sub
ret
hlt
shll
addl
xor
add
test
call
std
pusha
pop
pop
add
lea
fisttpll
fists
lds
mov
mov
fucom
jbe
xor
mov
rcrl
push
mov
movsb
lock
xchg
clc
out
dec
int3
cmp
in
jp
clc
data16
imul
lret
ficoms
push
add
pop
out
insb
sub
jge
insb
xor
outsb
dec
jno
push
jg
in
mulb
ss
sbb
movsl
pop
mov
sub
out
addr16
xor
mov
xchg
sub
and
inc
or
mov
adc
mov
data16
cli
aam
jl
lcall
push
orb
cmpsl
xor
andb
jl
outsl
dec
xlat
adcl
test
insl
call
aam
pop
stc
or
dec
push
scas
push
and
bound
ret
xchg
sub
sti
or
and
xchg
ss
adcb
test
jle
jne
hlt
ret
popf
imul
test
mov
push
std
push
imul
test
jle
ja
xchg
iret
pop
popa
in
cmp
notl
sub
scas
das
mov
mov
mov
cmp
xor
jb
mov
mov
bswap
cmpl
sbb
mov
jbe
daa
mov
lds
aas
cmpsb
jecxz
js
mov
sahf
inc
lea
orl
xchg
cmp
sub
js
push
lods
xor
xchg
shl
sub
fildl
std
mov
lcall
xor
call
cltd
jns
lret
pop
insl
hlt
out
sbb
aaa
ret
jmp
cmp
movsb
pop
pop
clc
mov
mov
xor
cmp
dec
pop
iret
mov
xchg
xor
dec
loopne
jb
adc
addr16
xor
mov
lds
test
jns
or
fildll
mov
rorl
sbb
or
jp
push
mov
inc
imul
inc
fisttps
dec
xchg
nop
cmp
lret
lock
lret
in
icebp
push
mov
rorl
mov
mov
lret
out
cmp
jns
aas
sahf
test
and
fnstsw
and
out
loop
jbe
cmp
sbb
lods
or
push
add
pop
enter
je
jo
mov
jno
aad
pop
or
xor
rorb
dec
lss
sbb
lock
xor
pusha
or
mov
cmpsb
int3
iret
sarb
cmc
shl
mov
push
out
jb
lea
or
mov
pop
scas
loopne
aaa
mov
pushf
inc
ficoms
cltd
outsl
in
sub
adc
mov
mov
aas
pushf
xchg
adc
mov
sub
sbb
in
insl
mov
or
nop
stos
adcl
fnstsw
and
int3
into
push
add
pop
movsb
xor
push
out
std
adc
movsb
push
hlt
mul
mov
in
pop
std
push
aad
out
aas
lea
adc
pop
clc
or
int3
xchg
mov
es
loop
cmpsl
sub
out
cmp
dec
or
enter
dec
pusha
repz
cmpsb
xor
mov
mov
mov
cmp
sbb
rclb
icebp
arpl
test
fdivrs
add
lds
push
jbe
mov
jmp
cmc
fdivrs
shll
movsl
sti
cmp
bound
or
jnp
adcb
std
pop
out
shlb
scas
pop
icebp
inc
adc
xchg
movsb
fisttpll
sbb
jl
test
fidivl
dec
cli
pop
push
cmp
test
xlat
outsb
jp
pop
ljmp
cmp
testl
mov
lret
sbb
out
jae
dec
int3
xchg
int
mov
popf
outsb
outsb
icebp
repnz
dec
out
and
pushf
pop
shr
mov
pop
loopne
notl
clc
js
jbe
jbe
jae
test
jmp
xchg
cmp
mov
sub
lods
sub
xor
mov
cmpsb
pop
mov
mov
push
push
xor
popf
lea
clc
ret
in
xor
arpl
sub
sarb
test
adcl
and
push
cwtl
aas
dec
or
enter
pop
push
add
pop
in
mov
pop
cmpb
xchg
scas
lea
vcvtdq2ps
dec
inc
push
push
jns
mov
scas
cmp
ret
rorl
rcl
adc
add
add
push
push
outsl
hlt
cwtl
xchg
lret
movsb
rcr
fisttps
adc
xchg
leave
pop
adc
xor
and
int3
repz
mov
sarb
cmpsl
sbb
or
add
push
jg
aad
inc
data16
cmp
mov
push
mov
scas
addr16
sbb
test
std
pushf
aas
fwait
repnz
rcll
jbe
rorb
and
push
xchg
sbb
inc
pop
in
icebp
lcall
out
rcl
jnp
arpl
xchg
inc
int3
fldcw
call
call
or
test
push
clc
pop
outsl
mov
inc
inc
xor
stos
sub
adc
negb
sbb
repz
push
or
pop
dec
adc
gs
inc
cld
push
cmp
std
aad
and
xor
jno
or
xchg
mov
mov
lcall
out
adc
cli
mov
or
lea
xchg
inc
bound
xor
rclb
sbb
cmp
dec
rorl
ficoms
or
fisubs
adc
shrb
inc
stos
sub
xor
sub
stos
sub
test
rcll
adc
xchg
es
cmp
gs
dec
jg
or
outsl
jmp
push
lret
lea
loopne
cwtl
int
and
jmp
cli
jnp
push
add
mov
sub
inc
xor
jb
gs
lods
lret
outsl
lods
xor
in
cmp
pop
pop
add
jecxz
mov
push
push
aaa
and
mov
outsb
stc
inc
sub
push
rorb
stos
sbb
xorl
int3
sub
mov
outsl
adc
cmpsb
je
jge
mov
cmpsl
xor
pop
ds
pop
or
pop
inc
jns
mov
popa
push
pop
mov
lods
inc
lods
call
pusha
xor
outsb
scas
jne
sbb
push
fs
scas
dec
jae
xor
jmp
pushf
ss
cld
test
adc
cmpsl
pop
push
xor
rcrb
mov
aaa
into
cmp
pop
add
adc
jecxz
js
loope
imul
push
pop
jno
bound
jns
inc
xor
push
stos
or
inc
sub
adc
adcl
mov
push
jno
cs
pop
mov
sub
das
in
loop
or
jl
cmp
mov
and
dec
fs
mov
jae,pn
repz
je
xor
mov
lret
lods
hlt
mov
mov
and
sub
add
aaa
mov
and
xchg
adcl
sbb
std
faddl
in
mov
pop
dec
loope
pop
adc
lret
dec
ficoml
mov
lods
and
push
pop
movsb
pop
les
jmp
jne
adcb
icebp
xor
cli
mov
call
cld
je
jg
ljmp
in
call
mov
test
ljmp
push
jbe
aas
and
mov
mov
movsb
jmp
cltd
cmp
shr
outsb
mov
xchg
push
push
add
and
inc
js
mov
mov
adcb
psubusw
inc
cmp
inc
out
and
dec
ret
sbb
xchg
sbb
mov
into
jo
pop
or
cmp
loopne
clc
je
insl
mov
in
push
shrl
sti
rcl
scas
inc
push
hlt
push
lds
mov
addl
dec
adc
fidivrs
loope
inc
pop
shl
orl
loope,pn
xchg
inc
or
pop
add
xchg
movsl
sub
cmpsb
xor
in
push
jmp
push
imull
ss
cmp
shrb
lahf
cmp
pop
mov
into
sbb
ja
adc
std
dec
clc
popl
repnz
lods
and
aas
cmpsb
and
add
pop
xor
add
pop
mov
sbb
xchg
pop
movsb
jmp
lret
lea
cltd
cmc
sbb
divl
movsb
or
jmp
filds
adc
filds
jg
push
lret
mov
test
sbbl
inc
outsl
test
xorb
mov
jg
sub
adc
dec
jns
jae
xchg
ljmp
sbb
pop
add
mov
pop
aas
pushf
aad
sub
cwtl
mov
outsl
ljmp
cmp
sub
aaa
mov
sbbb
pop
sbbb
sbbb
adcb
addb
xlat
xor
jle
adc
test
cmp
in
push
test
std
outsl
hlt
mov
mov
xor
movsl
xchg
cmp
fldl
aad
inc
or
pop
loopne
js
les
daa
ficoms
inc
dec
je
mov
add
cmp
sub
push
into
pop
cli
lretw
sbb
faddl
xor
notl
ds
loop
lds
dec
mov
mov
pop
loope
pusha
repz
jo
sub
jle
and
xor
push
sbb
add
hlt
pop
es
jae
iret
xor
xchg
sbb
ss
clc
pop
popa
xor
jle
jns
lds
fmull
lret
ds
dec
or
ret
cltd
cmp
sahf
icebp
arpl
dec
jns
mov
mov
int3
mov
das
inc
adc
cmpsb
push
out
sub
jns
mov
push
push
test
pop
sbb
shl
mov
add
add
clc
pusha
mov
scas
jmp
lret
cld
js
mov
lock
jns
pop
add
or
xor
je
cmpsb
push
xchg
rorb
popf
inc
mov
mov
mov
cmp
cwtl
out
loop
mov
out
imul
dec
pop
stos
xor
push
test
pop
std
lea
ljmp
test
sahf
aaa
push
lahf
stc
pop
mov
mov
inc
scas
mov
popf
or
loope
lret
call
test
repnz
repz
popa
xor
push
int
jo
inc
loopne
mov
nop
cmp
repnz
loop
and
or
inc
adc
pop
xchg
and
popa
adc
jns
pop
pop
out
inc
or
repnz
mov
std
popa
shlb
dec
ud2
mov
jl
int3
mov
imul
pop
clc
call
icebp
sti
pop
adc
imul
pushf
pop
or
inc
jge
mov
rcl
adc
mov
mov
adcl
out
imul
mov
xlat
jg
mov
and
arpl
lahf
xchg
in
jae
lds
scas
insl
dec
adc
rol
mov
dec
fnstcw
push
jle
clc
inc
pop
add
les
aad
iret
pop
imul
and
xor
stc
add
and
cmc
inc
xchg
pop
sahf
pop
push
test
pop
dec
je
add
mov
test
iret
data16
pop
add
out
nop
nop
cmp
or
movsl
xor
enter
rorb
test
sbb
push
and
leave
push
mov
iret
mov
fnsave
dec
fs
adc
xorb
dec
lea
popa
adc
pusha
in
jb
orb
aam
cld
push
insb
icebp
adc
inc
sarb
fadd
mov
cmp
mov
mov
int
push
mov
push
mov
push
mov
add
cmc
movsl
jge
loop
popa
in
xor
orb
push
cli
ss
in
jno
and
dec
iret
sarb
cltd
inc
or
lods
mov
insl
inc
ds
mov
sub
jge
or
test
scas
cld
bound
lock
dec
ja
dec
or
aam
and
push
add
std
test
out
popf
aaa
mov
cmpsl
iret
mov
ret
aaa
mov
xchg
pop
cmp
adc
pop
sti
xor
sub
gs
fwait
cmp
adc
lea
mov
xchg
pusha
ljmp
in
mov
faddl
ja
fistpll
jo
sub
mov
cltd
xor
in
mov
repnz
aaa
das
adcl
mov
lock
mov
add
adc
roll
xlat
cwtl
clc
popa
mov
jl
ficoms
dec
xor
dec
adc
fimull
sarb
pop
ljmp
repz
fstpt
pushf
inc
add
das
imul
dec
pop
mov
popf
push
xor
mov
mov
jb
adc
das
enter
inc
sbb
push
arpl
enter
adc
fistpll
cmc
xor
std
popa
fs
outsb
in
push
je
cmp
mov
outsb
sti
add
or
push
inc
movnti
jno
sub
xor
gs
fsubrs
xchg
icebp
fldt
pop
fdivrl
scas
xor
sub
adc
push
mov
dec
mov
add
or
pusha
adc
ret
int
sbb
jo
fwait
ret
xchg
sbb
cltd
aaa
push
inc
xchg
pop
aam
cwtl
rcll
les
mov
std
and
fdivs
stos
daa
mov
mov
fdivp
xor
xor
push
pusha
divb
cmp
inc
jo
movsl
jno
in
mov
mov
or
push
test
iret
clc
cmpsl
mov
mov
orl
push
int3
insb
push
adcb
sub
mov
cmpsb
repnz
add
adc
aam
test
stos
xor
mov
mov
inc
cld
gs
sub
mov
mov
scas
movsb
cmp
push
xchg
ds
xchg
mov
sub
cld
and
nop
jle
xchg
cmp
sub
pusha
sahf
mov
xor
mov
inc
push
inc
scas
dec
or
jmp
int3
adcb
push
mov
mov
enter
out
xor
jecxz
mov
ret
mov
aam
cld
mov
faddl
lock
sahf
aas
push
out
loope
dec
cld
pop
test
mov
int
cld
roll
test
mov
or
mov
cmpsl
and
dec
mov
fsts
mov
and
aaa
scas
xor
outsl
push
std
jo
pop
mov
sbb
das
scas
and
ds
jno
popf
cmp
push
inc
sahf
lcall
test
lock
jp
jae
inc
fs
std
mov
mov
aaa
sbb
ret
inc
out
adc
push
pop
cld
aam
pop
ret
push
jge
push
pop
imul
cli
lock
xor
cmpsl
repz
fs
dec
push
jno
es
insl
mov
mov
gs
jecxz
test
call
negb
cs
iret
xchg
dec
pop
cli
pop
into
and
jg
push
mov
bound
pop
lret
push
sub
ds
mov
test
mov
in
clc
std
push
cld
xchg
jmp
mov
data16
pusha
test
jo,pt
fildl
dec
lods
jo
inc
popf
push
clc
jbe
mov
daa
push
xchg
cmp
cmp
xor
ficoml
xor
adc
into
xchg
aaa
inc
sbb
mov
test
lahf
inc
es
cmp
inc
mov
dec
cmp
jle
aas
mov
jge
movsl
cmp
mov
jmp
xchg
mov
add
mov
pop
add
mov
out
mov
test
adc
pushf
jl
add
sub
int3
mov
iret
or
sub
aaa
jp
fwait
pop
jmp
pop
les
jne
cltd
cmp
and
adc
mov
addr16
enter
dec
adc
out
mov
jmp
stos
sub
repz
pop
aas
sbb
cs
outsl
mov
jb
dec
inc
adcb
int
sub
cmp
xchg
aas
dec
jecxz
pop
lahf
xchg
aas
lcall
inc
push
aaa
aas
or
sub
pop
in
sbb
mov
rclb
xchg
pop
lock
fnsave
jecxz
je
sti
xchg
mov
lods
lea
mov
adc
dec
cli
pop
ret
mov
sbb
jg
cmp
sbb
jg
fs
jge
rep
dec
or
lock
adc
test
cmp
jp
lea
adc
jle
sub
jb
sbb
xor
xchg
xchg
lahf
jne,pt
push
add
imul
outsb
cs
arpl
adc
cmp
add
sbb
jge
dec
inc
call
std
lds
lock
xchg
les
out
mov
stc
test
insb
fimull
ljmp
aad
xor
sti
and
adc
gs
pop
inc
pop
add
lea
add
fnstcw
bound
outsb
cmc
cld
jae
cmp
scas
dec
adc
dec
fildl
inc
rcrl
xchg
mov
in
daa
jno
push
mov
das
imulb
xchg
mov
xchg
cmp
jae
popa
out
idivl
inc
std
inc
or
call
std
cmc
pop
leave
leave
call
xor
loopne
fnstenv
imul
push
and
mov
fs
stc
dec
adc
mov
cld
pop
sahf
fldenv
lods
mov
test
mov
add
iret
inc
das
test
adc
mov
jmp
incl
insl
scas
add
inc
lret
sub
xchg
inc
xchg
repz
mov
lock
mov
inc
movsb
lahf
or
stos
lock
sub
adcb
inc
push
xlat
jb
rolb
adc
inc
or
mov
xchg
stos
dec
adc
ret
lods
xor
test
jae
or
test
movsl
dec
push
mov
xchg
imul
dec
sub
xlat
cli
outsb
out
inc
pslld
fwait
repnz
mov
mov
sbb
mov
test
rcrl
out
or
les
lods
fstpt
xchg
jae,pn
fchs
xor
adc
rclb
sub
mov
jne
and
pop
push
data16
imul
mov
jae
daa
mov
ret
or
adc
jl
cmpsl
sub
jo
fwait
dec
sub
jl
fwait
jle
adc
push
xchg
dec
pop
ret
icebp
ret
test
jl
fcoms
mov
dec
mov
into
xchg
push
das
pop
ret
and
mov
xchg
pop
lret
xlat
cs
mov
daa
out
jne
ss
push
mov
mov
fistpll
iret
adc
shlb
xor
bound
je
mov
or
pop
xlat
xchg
sub
sub
rcrl
inc
pop
jnp
fildll
data16
shr
addl
test
and
mov
movsl
jne
mov
clc
movl
dec
sbb
dec
insb
xchg
sahf
imul
lock
cmp
inc
adc
push
inc
arpl
xchg
fidivs
mov
push
out
cld
xchg
jmp
or
mov
pop
mov
lea
lea
push
out
filds
icebp
mov
add
xor
test
sub
cmpsb
mov
fdivr
dec
loop
cli
shlb
dec
imul
jg
xchg
shlb
movsl
cmp
repz
and
ret
pop
ja
dec
fbstp
loope
lret
std
enter
sbb
aas
sbb
cmp
cmp
ret
push
ret
lock
fidivs
ss
push
mov
mov
fdivl
iret
push
xor
push
pusha
sub
mov
je
mov
or
sub
sub
ret
mov
pop
jnp
loopne
jnp
lods
int
dec
in
addl
xchg
push
jae
cmp
mov
clc
lds
negb
loope
dec
pop
gs
dec
insb
call
fwait
mov
mov
roll
rclb
pop
icebp
xchg
fidivs
mov
movntq
xchg
cmp
sbb
lea
rorb
lods
push
out
fldl
repnz
jne
xor
cmpsl
xchg
sub
movsb
mov
stc
dec
jecxz
clc
iret
data16
jle
in
test
mov
rcrl
cmpsb
cmp
and
pop
js
inc
fidivs
jns
xchg
gs
in
add
sbb
push
mov
cmp
rol
mov
icebp
adc
fnsave
js
push
mov
mov
fdivl
or
shrb
sub
lock
push
movsl
pop
rcll
ret
pop
es
inc
pop
jnp
loope
jns
fs
int
dec
jmp
pop
xchg
push
pop
or
movsb
jno
mov
test
loop
dec
adc
add
cltd
mov
mov
aam
or
pop
repnz
pusha
fidivs
mov
adc
mov
xchg
in
cwtl
das
cmp
sbb
mov
rorb
stos
push
out
repnz
std
jne
das
push
adc
andb
dec
aad
dec
jecxz
test
add
test
pop
iret
popf
or
and
sub
and
jbe
inc
fidivs
loop
leave
xchg
gs
xchg
sbb
sbbl
cmp
mov
rol
lea
icebp
adc
fnsave
js
data16
xchg
xchg
mov
fidivl
or
shrb
sub
in
pop
xor
or
rclb
ret
pop
and
dec
loope
js
fs
lret
push
cmp
xchg
dec
push
or
mov
ret
ret
pop
cmc
ret
repz
loop
dec
adc
cld
inc
imul
sbb
mov
cmp
push
ds
pop
repnz
pop
fidivs
mov
adc
mov
xchg
in
cwtl
das
ss
mov
mov
rorb
test
repnz
cld
jne
cs
adc
andl
dec
jecxz
test
sub
add
in
test
mov
int
or
and
sub
and
pop
je
inc
fidivs
loop
xchg
gs
call
sbbl
cmp
mov
cmp
sarl
fistps
adc
fnsave
js
fs
xchg
test
mov
fdivs
or
imul
lock
rorb
movsl
add
xchg
sub
and
scas
inc
push
ja
loope
ja
fs
lret
cld
sbb
mov
mov
rol
repz
adc
jns
adc
inc
add
sbbl
mov
mov
aam
or
push
cmp
pop
fidivs
scas
jns
loope
cld
xchg
jecxz
cwtl
das
xor
sbb
xchg
rolb
test
out
fsincos
repnz
dec
adc
andb
dec
shl
dec
jecxz
cmc
iret
data16
inc
push
js
in
test
mov
lret
fwait
or
push
out
sub
pop
inc
les
inc
inc
fidivs
loop
lds
add
pop
cmp
mov
cmp
sarl
pop
icebp
push
je
xor
bound
sti
xchg
adcl
mov
mov
or
aaa
into
or
shrb
sub
pop
jge
xchg
rorb
movsl
add
xchg
sub
and
push
and
loope
jbe
fs
push
cmp
xchg
dec
sbb
mov
sahf
outsb
sub
icebp
rolb
adc
jns
adc
inc
add
xchg
mov
mov
mov
cmp
or
push
cmp
pop
repnz
jne
lods
jns
fbstp
cwtl
das
xor
sbb
test
rolb
cmpsl
push
out
fdivr
repnz
cli
jne
sub
adc
jg
cs
mov
shl
dec
jecxz
hlt
iret
es
push
jbe
in
test
mov
leave
lcall
sbb
sub
push
les
aas
inc
fidivs
loop
ret
xchg
gs
ret
xchg
adc
aaa
push
mov
aaa
mov
sarl
fistpl
or
fnsave
js
pusha
xor
xchg
arpl
sbb
push
xlat
aaa
into
or
shrb
sub
pop
jnp
xchg
into
push
movsl
dec
xchg
sub
and
inc
push
jae
loop
je
cmpsb
lds
test
mov
dec
sbb
mov
popf
insb
sub
lock
jecxz
inc
adc
inc
add
xchg
mov
mov
mov
cmp
or
aad
or
push
cmp
repz
jne
lods
jp
fisubrs
cwtl
das
xor
sbb
test
test
push
out
xlat
clc
repnz
stc
jne
sub
jge
xchg
sub
cs
mov
shl
dec
jecxz
repz
and
add
in
test
mov
enter
lret
cmp
sbb
ds
fisubrs
loop
ret
cld
shl
xchg
adc
sbbl
ss
mov
mov
sarl
ficompl
or
fnsave
js
pop
xor
xchg
bound
sbb
add
daa
shrb
sub
pop
jp
xchg
push
movsl
dec
xchg
sub
pop
sub
inc
push
jno
loop
jae
movsl
ret
imul
clc
push
mov
dec
sbb
mov
fwait
imul
pushf
mov
inc
fsubrp
pavgw
pcmpgtd
inc
bound
cwtl
xchg
popa
test
xchg
mov
mov
mov
cmp
push
ds
pop
rcrl
pop
xrelease
jbe
stos
jp
fsubrl
cwtl
das
das
add
xor
dec
adcb
test
pop
out
div
mov
clc
jbe
sub
cmpsl
jnp
xchg
sub
cs
mov
shr
dec
jecxz
repnz
inc
push
jae
out
test
mov
cwtl
or
leave
out
cmp
sbb
les
cmp
loop
rorb
xchg
adc
test
adc
push
mov
xor
cmp
mov
rclb
pop
icebp
or
fidivs
sub
pop
das
cld
xchg
popa
jle
sub
mov
mov
add
cmp
push
and
push
in
pop
js
xchg
lret
push
movsl
cld
int3
xchg
sub
sbb
mov
push
outsl
dec
loop
jb
data16
shrl
notl
pop
inc
sbb
dec
cmpsb
cmp
fwait
mov
dec
fucomip
or
addr16
aas
pusha
add
xchg
mov
mov
mov
cmp
add
aad
push
ret
push
pop
xrelease
ja
test
adc
lods
xchg
fdivrp
cwtl
das
sub
dec
mov
adcb
andl
lock
repnz
divl
sub
cmpsl
jns
xchg
sub
lcall
iret
in
dec
jecxz
icebp
shrl
aas
push
jno
out
xchg
mov
les
cmpsb
cmp
sbb
les
cmp
loopne
mov
jns
mov
mov
loope
sbb
xor
mov
xor
cmp
cmp
mov
rcrl
pop
icebp
pop
fcmovnu
jbe
sub
pop
cs
xchg
pusha
jl
sub
mov
mov
add
cmp
add
es
out
push
jbe
xchg
leave
push
movsl
cli
lret
xchg
sub
sbb
dec
push
insl
dec
loop
jno
addr16
add
out
test
adc
movsb
dec
cmpsb
cmp
lcall
loopne
or
jp
or
add
xchg
mov
mov
mov
cmp
add
aad
add
pop
repz
js
cmpsb
jp
fsubrs
cwtl
das
sub
sbb
dec
jg
cmp
andb
lock
repnz
inc
adc
jnp
cs
mov
into
jmp
jecxz
lock
ds
jo
out
xchg
mov
ret
xchg
or
cmp
sbb
les
cmp
insb
mov
jns
lea
mov
loopne
sbb
xor
mov
xor
shll
pop
icebp
push
fcmovu
jbe
sub
pop
sub
xchg
sub
mov
mov
add
cmp
add
shrb
and
lock
enter
lret
cld
sbb
dec
dec
insb
dec
loop
jo
addr16
add
ret
out
test
adc
movsb
inc
cmpsb
cmp
cltd
mov
pop
jmp
or
jp
or
cmp
pop
xchg
loopne
movsb
cmp
add
aad
add
pop
ss
pop
repz
js
movsl
jp
xlat
stos
call
sub
sbb
dec
jle
cmp
sbbl
repnz
adc
jp
cs
mov
int
dec
jecxz
out
shrl
cmp
out
xchg
pop
ret
movsb
jecxz
cmp
sbb
les
cmp
imul
mov
filds
mov
xor
shll
aam
icebp
add
daa
js
pop
sub
xchg
pop
jp
sub
mov
mov
call
cmp
add
shrl
and
push
je
mov
clc
enter
sbb
lds
mov
dec
imul
shlb
mov
out
test
adc
movsb
inc
arpl
ret
lds
dec
loopne
or
jnp
or
cmp
lea
mov
movsb
cmp
add
xor
ret
pop
xor
pop
hlt
adcl
xchg
xchg
cltd
xor
cld
sbb
dec
jge
cmp
jg
aad
shlb
repz
repz
and
inc
xchg
sub
xchg
das
enter
lret
jmp
shrl
cmp
add
out
xchg
mov
rcll
ds
sub
pop
lds
dec
loopne
mov
jp
mov
mov
fldl
mov
xor
aam
add
mov
pop
repnz
fbstp
es
pop
sub
xchg
pop
jns
cs
jge
mov
int3
mov
dec
cmp
add
aam
push
and
push
jae
mov
adc
clc
sbb
dec
sbb
in
insb
shlb
mov
out
test
jp
movsb
inc
bound
ret
pop
out
dec
loopne
or
jl
or
cmp
lcall
and
aas
xor
ret
pop
xor
hlt
adcb
mov
call
sub
sbb
dec
jl
cmp
jle
aad
iret
lahf
pop
lock
repz
bnd
and
adc
ja
das
mov
mov
lret
in
in
shrl
cmp
insl
aas
out
xchg
mov
rclb
ds
sub
push
xor
dec
loopne
mov
jp
mov
mov
faddl
mov
das
mov
aam
add
mov
pop
repnz
fbstp
and
std
xchg
pop
js
cs
jl
mov
lret
mov
std
into
cmp
lcall
aam
push
and
push
jno
mov
les
cmpsl
cmc
lds
inc
sbb
in
imul
popf
mov
out
xchg
or
push
movsl
inc
pusha
test
xchg
arpl
xchg
mov
pop
in
dec
loope
push
in
cmp
imul
mov
push
mov
movsl
cmp
std
aas
cs
pop
xor
hlt
adcb
mov
add
es
push
mov
dec
mov
jp
cmp
jge
aad
int
pop
icebp
iret
out
repz
icebp
js
and
test
inc
xchg
sub
lds
dec
in
jmp
imul
mov
movsl
ret
ds
sub
adc
ss
loope
xchg
jp
mov
mov
fildl
mov
movsb
cmp
cmp
pop
mov
pop
repnz
loopne
pop
and
push
sub
xchg
pop
jbe
cs
sbb
lods
leave
mov
sti
int
sar
sbb
imul
lock
outsl
repnz
ret
repz
movb
dec
dec
dec
in
push
imul
mov
cmp
pop
test
nop
bound
pop
jecxz
dec
loop
add
jl
push
push
cmp
lcall
and
fdivrp
aas
sub
lds
pop
hlt
jle
jecxz
test
add
and
pop
mov
inc
mov
js
cmp
insb
lret
popf
pop
repnz
in
repz
lock
and
test
inc
xchg
jne,pn
das
mov
mov
enter
adc
aaa
imul
cmp
mov
mov
frstor
les
lds
dec
loop
test
jp
xchg
mov
fildl
mov
movsl
cmp
jl
aam
add
bnd
loope
push
and
push
daa
call
cmpsb
jp
mov
mov
stc
int3
cmp
std
sbb
insb
dec
push
pop
icebp
dec
insl
repz
rclb
icebp
ret
xchg
sub
inc
push
mov
dec
fs
in
imul
add
mov
mov
cmp
adc
mov
lds
mov
jecxz
add
jge
add
add
xchg
and
stos
cmpsl
ds
inc
xlat
sub
lds
pop
cmc
jge
jecxz
test
add
and
pop
mov
inc
mov
aam
cwtl
insl
lret
repnz
hlt
mov
aas
adc
je
xor
ret
dec
jecxz
in
jmp
insb
add
icebp
mov
mov
mov
fsubrl
les
xor
pop
bound
loop
and
mov
imul
pop
fiaddl
mov
sub
ds
add
mov
pop
repz
shl
js
and
push
call
movsl
jns
mov
mov
clc
lret
cmp
cld
sbb
insl
dec
sbb
hlt
mov
mov
xchg
sub
inc
adc
dec
out
push
insl
add
mov
mov
cmp
adc
lea
lds
mov
jecxz
add
jle
add
add
push
add
and
stos
cmpsl
ds
inc
fsubrs
inc
pop
xor
idivb
jp
popf
jge
iret
movsb
add
and
pop
mov
inc
mov
aam
xchg
xlat
outsb
leave
fwait
pop
repnz
ljmp
and
adc
jae
xor
rcll
adc
shrl
xor
icebp
mov
mov
mov
fldt
les
das
pop
popa
xor
fs
mov
imul
push
flds
mov
pop
jp
stos
jg
pop
mov
pop
hlt
std
shl
js
pop
jl
push
and
lcall
lds
sar
sbb
outsb
dec
sbb
icebp
dec
imul
popf
outsb
js
mov
rcll
inc
adc
dec
inc
bound
xchg
shrl
mov
add
in
pop
lea
or
stos
inc
mov
lds
mov
jecxz
add
jg
add
xor
push
mov
mov
cmpsl
ds
inc
fldcw
std
lds
pusha
idivl
jecxz
sbbb
aam
pushf
xor
negb
mov
inc
mov
aam
xchg
fsubrs
lcall
sbb
jns
pop
cmp
xchg
jb,pn
xor
rclb
out
out
push
xor
add
insb
xchg
mov
loopne
les
cs
dec
loop
and
add
fadds
mov
pop
jns
xlat
stos
jle
pop
mov
pop
cmc
cld
shl
js
push
jge
push
and
xchg
push
jno
xor
les
sar
pop
fsubrs
sbb
dec
push
lea
adc
out
rclb
inc
adc
call
cwtl
mov
push
in
icebp
mov
push
mov
cmp
pop
lds
mov
jecxz
call
add
push
mov
mov
ds
inc
fldenv
std
lds
pusha
idivl
jecxz
sbbb
cwtl
aam
pushf
xor
negb
mov
inc
mov
aam
xchg
fsubrs
lcall
sbb
jns
pop
cmp
stos
insl
inc
xchg
jb,pn
xor
mov
loopne
out
out
push
xor
gs
mov
and
fldcw
les
sub
dec
loop
and
mov
imul
add
xchg
or
and
pop
js
xlat
test
lret
sti
shl
js
sbb
call
mov
ret
mov
sar
push
fsubrs
sbb
dec
imul
setg
sub
aas
adc
call
mov
pop
push
pop
push
outsb
xor
scas
push
pusha
jmp
mov
clc
sub
lahf
sbb
jmp
ljmp
mov
dec
ja
leave
andb
imul
mov
xchg
mov
mov
and
mov
xchg
jmp
and
imul
inc
mov
les
pop
fisubl
stos
mov
cmp
xor
mov
jae
insb
and
imul
adc
sbb
jae
cmp
test
cmpsb
inc
neg
movsb
rolb
rclb
add
das
mov
int3
ja
mov
mov
arpl
or
popa
mov
mov
leave
lods
sub
mov
out
push
mov
cmp
les
repnz
scas
push
mov
lcall
std
adc
push
ret
xor
loop
push
sub
and
fwait
adc
pop
cmp
xchg
mov
xor
test
mov
lods
push
and
lea
imul
lods
pop
sub
fstpl
repz
int3
addr16
in
cld
sbb
cmpb
pushf
nop
jmp
mov
inc
mov
andl
imul
popf
ret
push
fs
push
pusha
outsb
inc
loope
lea
cmp
pop
rcr
fwait
int
xor
pop
mov
lcall
hlt
leave
arpl
xor
pop
add
cmp
adc
es
into
fisubrs
add
cli
gs
loop
dec
call
sbb
mov
int
pushf
stos
xor
jmp
inc
loop
mov
out
add
push
xor
lds
into
pop
inc
pop
mov
mov
push
insb
cmpsb
faddp
jb
out
mov
popa
push
push
stos
int
rep
adc
mov
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
add
les
push
nop
or
or
ror
sub
push
std
aam
or
sbb
stos
gs
lea
out
jns
repnz
out
adc
lods
xor
fs
jmp
xor
mov
cltd
dec
cmp
cmpl
jo
mov
inc
movsl
mov
mov
xchg
jl
jne
dec
subl
jnp
ss
pop
cmpsb
inc
lret
xor
add
movsb
cli
enter
mov
jmp
repz
cli
pop
jg
lods
pop
push
test
outsb
ljmp
jg
or
add
jmp
in
sbb
sub
dec
sbb
xchg
inc
sub
lock
popa
xor
and
int
inc
xor
xchg
push
mov
cmp
jmp
shlb
inc
add
xchg
sahf
std
adc
xchg
cmp
mov
jno
sbb
jne
sbb
lock
scas
push
test
xor
outsb
test
mov
lds
adc
add
aas
pop
xchg
sub
or
xchg
dec
xor
loop
and
xor
daa
push
lret
or
mov
xor
push
mov
pushf
aad
je
fsubs
jae
daa
cs
addb
cmp
mov
leave
dec
imul
mov
adc
outsl
lds
fs
mov
js,pt
lea
aaa
fildll
cltd
fsubrl
out
addl
mov
inc
nop
leave
and
fldcw
call
pop
inc
mov
bound
shrb
sub
dec
adc
mov
out
lret
pop
test
rclb
outsl
jl
pop
sbb
hlt
scas
mov
in
mov
loop
xchg
daa
pop
test
in
mov
pop
imul
cltd
movsb
pop
mov
inc
mov
in
xchg
movsl
subb
out
or
sarb
adc
outsb
daa
add
std
mov
xchg
cmpsb
bound
lds
test
inc
pop
xlat
xchg
addr16
add
stc
fldcw
fwait
sbb
stos
in
add
shlb
aas
ret
fwait
imul
or
xchg
addr16
pop
xchg
sbb
fwait
mov
mov
inc
adc
sahf
sbb
mov
cmp
jae
adc
dec
inc
push
pop
in
fs
push
ret
push
icebp
sbb
mov
cmp
sbb
push
xchg
icebp
outsb
dec
bound
xchg
push
jae
dec
inc
add
dec
jle
mov
aam
insb
mov
push
inc
in
fdivl
jae
cltd
cwtl
adc
mov
outsl
pusha
rolb
sub
push
loop
sbb
push
jl
sbb
mov
lock
adc
inc
incb
je
es
popl
cld
sub
into
push
pop
stos
adc
cmpsl
pop
int
fsts
ret
mul
cmp
mov
cmp
fidivl
mov
pop
inc
cli
not
push
les
out
add
mov
lea
loopne,pn
in
outsb
andl
sub
adc
arpl
push
lods
data16
inc
ror
mov
inc
sub
inc
sub
lods
test
sub
cmp
lret
xor
push
mov
push
pop
xor
mov
pushf
rcrl
dec
arpl
cmp
orb
shlb
mov
jg
add
xlat
xchg
jge
push
repnz
clc
pop
push
shrb
outsl
out
cs
sbb
jmp
inc
jecxz
rorl
mov
frstor
and
cmpsl
pop
cmp
int
cltd
push
inc
adc
mov
inc
mov
fldcw
sarl
sub
dec
push
push
loopne
clc
or
lock
pop
sti
push
movsl
inc
mov
adc
in
out
loope
int3
cmp
xor
data16
test
jp
cmp
mov
inc
cmp
dec
push
mov
push
lock
int
push
pop
movsb
lods
cmp
mov
aaa
mov
sbb
push
mov
mov
maxps
out
push
mov
dec
pushf
add
or
push
xor
xor
lret
cltd
fnsave
shll
data16
lds
xchg
push
inc
adc
mov
decb
push
add
jb
mov
lea
lret
shl
jmp
push
push
lahf
bound
push
shlb
sbb
push
pushf
cmp
xchg
pushf
mov
repz
mov
add
inc
cld
mov
insl
aam
loop
mov
sbb
sub
xor
ret
lds
lds
lret
xchg
out
mov
ret
mov
mov
cmp
cld
insl
stos
xorl
sbb
lret
xor
int
lret
cli
dec
popa
add
adc
aas
push
fdivrs
sti
and
into
and
test
pop
xor
rcll
faddl
pop
push
orl
out
mov
repz
add
in
jecxz
fstpl
rol
adc
push
out
and
lcall
scas
xor
add
adcl
sbb
hlt
loop
imul
lcall
gs
in
repnz
add
mov
ljmp
cmc
jmp
cmc
and
fwait
ss
aam
mov
gs
jecxz
mov
fmull
movsl
and
pop
adc
loope
adc
pop
add
ss
cmp
sub
cltd
fcompl
loop
leave
or
adc
mov
lods
inc
cwtl
les
divb
dec
data16
mov
aaa
sub
iret
pop
shrb
sub
or
ret
push
sbb
scas
push
pusha
adc
mov
pop
shrl
lods
test
push
sbb
fnstcw
int
icebp
lcall
pop
xor
movsl
fmull
cmp
fcmovb
sub
mov
les
leave
cmp
dec
mov
add
sbb
push
out
pop
insl
loope
shll
call
clc
ljmp
sbbb
adc
sbbl
adc
clc
adc
or
sbb
pop
pusha
jl
vpmadcsswd
sbb
popa
fucomi
jl
xchg
adcl
fucomp
jl
cltd
adcl
fucomip
jl
fwait
adcl
loope
jl
popf
adcl
inc
jge
lahf
ret
dec
inc
cmp
daa
mov
mov
sti
jns
push
lea
xchg
leave
pop
movsl
sahf
cmp
lods
pushf
mov
sbb
adc
aam
test
repz
fiadds
jmp
popa
mov
in
int3
push
jae
scas
clc
jle
jmp
adc
shl
std
fsubrl
push
fst
dec
sbb
mov
dec
je
dec
mov
cmpl
imul
int3
pop
inc
push
in
ss
and
jecxz
addr16
and
push
leave
mov
dec
adc
pop
push
or
add
arpl
repnz
test
fisubrs
mov
aam
insb
popa
xchg
out
cmpsl
push
push
mov
cmpsl
add
dec
dec
unpckhps
inc
stos
and
jne
mov
dec
mov
push
and
and
sahf
insl
aam
stos
daa
sub
mov
jp
rcl
mov
jmp
sahf
adc
into
add
std
mov
out
add
mov
lea
dec
aam
mov
popa
xor
add
mov
adc
pop
cli
xchg
adc
stc
rcrl
mov
aaa
loopne
repnz
mov
leave
xchg
int3
sbb
push
test
je
nop
xchg
mov
push
je
xchg
test
jbe
pop
and
test
dec
into
movsl
inc
movsl
ret
ljmp
or
and
xor
mov
xchg
push
gs
fdivrs
js
pop
push
les
ret
mov
ds
fcomps
scas
cli
jbe
and
inc
addr16
incl
add
shrl
jbe
cmp
mov
cli
lcall
lahf
jg
popa
mov
xchg
nop
call
int
pop
scas
dec
jo
test
or
scas
xchg
data16
mov
addr16
fsubs
dec
rcl
orb
mov
stos
mov
pop
mov
push
enter
je
mov
