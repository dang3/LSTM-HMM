jmp
mov
push
inc
stc
addr16
pop
aad
mov
fsubrs
jno
mov
cs
mov
in
add
mov
sub
and
jmp
cmp
mov
push
or
jmp
out
add
dec
pop
testb
dec
loop
das
sti
or
aad
hlt
sbb
imulb
adc
hlt
mov
lock
into
adc
push
mov
mov
test
loop
xchg
addr16
enter
stc
ror
mov
call
mov
mov
dec
gs
dec
ds
shrl
popa
mov
iret
pushl
jbe
lods
adc
ror
aaa
sub
in
push
xor
repz
xchg
mov
sbb
enter
decl
aam
daa
daa
jl
inc
mov
lock
push
scas
push
dec
lods
and
and
jbe
xlat
xor
dec
mov
add
dec
pop
rclb
pop
or
mov
xchg
cmpsb
jmp
aas
inc
inc
jbe
imul
mov
imul
pop
mov
pushf
aad
shr
adc
daa
cli
lret
lahf
ret
ret
decl
in
scas
sbb
mov
jmp
idiv
and
jg
lods
dec
test
push
xchg
or
mov
mov
xor
addr16
call
mov
call
jo
cmp
mov
shl
pop
jnp
fcomps
push
ljmp
push
lock
outsl
addl
xor
lcall
int
cmpsl
stos
sti
scas
sbb
call
popf
dec
pop
adc
pop
outsl
pop
movsb
push
hlt
or
cmp
push
or
push
fisttps
hlt
dec
or
lcall
xor
out
adc
in
rclb
and
out
pop
mov
mov
xchg
out
push
data16
in
dec
and
in
nop
or
out
mov
add
inc
inc
and
jae
popf
fmull
ds
mov
lcall
cmp
stos
mov
mov
mov
cltd
mov
push
mov
dec
imul
stos
jle
fldl
loope
gs
cltd
ja
dec
sub
scas
dec
push
mov
jmp
jl
or
jg
mov
jg
push
mov
add
call
jle
xchg
stc
sti
sbb
dec
popf
stos
test
clc
addr16
sub
and
je
cmp
repz
mov
clc
lcall
jne
cmp
lcall
stos
ljmp
iret
imul
pop
push
or
xchg
jno
in
mov
inc
je
shrl
cmp
decl
push
lods
std
xlat
nop
nop
insl
hlt
and
pop
sub
inc
add
push
and
call
push
test
jl
and
mov
jbe
add
adc
mov
or
adc
call
mov
or
mov
xor
mov
lcall
sbb
xchg
and
pop
sub
dec
dec
xchg
outsl
jnp
repz
subl
mov
dec
lahf
andb
cltd
call
cwtl
insl
pop
add
jle
jmp
fdivr
lcall
fisubl
or
mov
cli
test
pop
adcl
int
fcos
pushl
cmc
dec
hlt
in
mov
shlb
lret
inc
rorb
inc
jae
mov
ljmp
jmp
repz
jp
or
push
lret
icebp
ja
loope
out
aas
data16
xor
in
icebp
popf
pusha
xchg
push
aam
in
and
push
cmpsb
jmp
in
cmp
ja
mov
mov
js
xchg
idivb
outsb
dec
sti
push
mov
in
andb
xchg
mov
test
mov
or
sub
cmc
adc
enter
repnz
xchg
repnz
mov
jge
lds
pop
dec
cmp
mov
enter
xchg
xchg
pop
fmuls
call
dec
push
shrb
mov
and
ss
dec
pop
pop
jns
pop
dec
notl
jl
hlt
test
mov
mov
dec
jno
les
lcall
ds
iret
mov
mov
cli
iret
cmp
and
out
ljmp
pop
in
call
jnp
jbe
xchg
imul
dec
pop
adc
dec
scas
out
xchg
push
aas
sbb
popa
jge
decl
aad
out
cmpsb
subl
aaa
xchg
inc
mov
push
dec
sub
push
add
call
fdivrs
out
jo
repz
jne
push
mov
xchg
call
mov
xor
cmp
mov
cli
cwtl
fwait
lock
push
fmulp
add
out
push
sahf
fs
jb
push
cli
arpl
test
or
mov
incl
and
fsubrl
jnp
in
inc
mov
adc
rcll
outsb
adc
mov
jns
xlat
pop
mov
sbb
xor
test
xlat
jp
jo
and
or
lcall
mov
jb
nop
es
scas
ret
adc
out
sbbl
clc
mov
jg
call
shlb
mov
jg
push
add
fnstenv
ljmp
subb
scas
cli
xchg
jns
push
inc
xor
lods
xorl
hlt
testl
lcall
mov
sub
push
pop
xor
xchg
lock
insb
dec
in
stc
push
incl
cld
dec
mov
or
mov
aam
sub
sbb
sub
test
ljmp
pushf
neg
inc
cmp
push
jge
lcall
cltd
andl
cmp
aad
add
sub
ljmp
jnp
das
lret
jg
lahf
mov
sub
dec
inc
lcall
fwait
imul
sbb
pop
pushf
call
call
lock
in
outsl
sbb
clc
clc
jae
mov
mov
incl
xor
xor
leave
mov
outsl
xor
push
or
mov
jns
les
es
lcall
jecxz
pop
test
shrb
push
lods
mov
cld
std
push
add
incb
or
jecxz
pop
fwait
inc
fs
mov
pop
inc
pop
jmp
sub
fld
fcmovnb
sub
or
arpl
adc
je
jg
movsb
out
cli
ljmp
loopne
cmpsl
mov
rcl
data16
arpl
andl
cs
ficomps
cmpsb
cmp
ret
push
cmp
push
jl
ret
mov
jmp
call
ljmp
lahf
adc
in
scas
int
or
adc
xor
cmp
into
or
dec
sub
das
jg
lods
sbb
inc
sub
mov
lock
ds
inc
mov
subl
fisubl
jno
cmp
icebp
dec
pop
hlt
cmp
xchg
int3
sbb
inc
mov
fwait
xchg
mov
and
pushl
mov
test
stos
data16
xorl
mov
push
jl
mov
in
clc
inc
and
es
scas
lods
pop
int3
inc
rorl
lea
mov
aaa
in
cmpsl
xchg
enter
xor
arpl
and
jbe
rclb
mov
jge
es
or
jecxz
jne
xor
daa
and
adc
incl
inc
inc
sbb
imul
jecxz
mov
push
insb
jl
xchg
int3
incl
loope
xchg
sub
fldenv
xor
and
pop
pusha
add
sahf
mov
rol
xchg
cltd
jns
ds
pushl
popl
sub
scas
sub
popf
stc
xchg
cmp
push
aad
pop
insb
aad
ljmp
push
and
jne
mov
stos
sbb
cmp
xchg
sbb
out
push
loopne
jle
call
loopne
xchg
pop
adc
out
pop
sub
mov
push
test
std
scas
lcall
call
xchg
imul
inc
gs
or
cmpsl
jmp
mov
adc
mov
mov
mov
xchg
jb
cmp
inc
xchg
push
mov
or
jne
inc
insb
xchg
cmp
or
cmpsb
mov
inc
mov
jb
pushl
and
loopne,pn
add
push
pop
xchg
jne
sbb
data16
add
xlat
push
sbb
lcall
popf
cmp
sbb
outsl
mov
stos
jge
inc
bound
mov
pop
lock
incl
pop
push
adc
fbstp
nop
jle
inc
sbb
test
out
cmp
xchg
mov
mov
inc
leave
ljmp
fnstsw
dec
add
mov
sub
cmp
jnp
ret
rcl
out
lahf
ss
mov
dec
sub
rcll
sar
call
in
lret
inc
idiv
jg
fcomp
xor
pop
push
inc
lods
enter
lock
cmp
loopne
adc
ficomps
jne
mov
jns
aad
movsb
pusha
decl
push
dec
xor
xchg
repnz
push
xchg
in
fld
adc
pusha
fcmovnb
cmp
call
ficomps
sub
mov
adc
ja
addr16
jl
ljmp
push
mov
aas
sahf
ds
dec
iret
leave
js
test
xorl
sar
jecxz
xor
add
mov
cli
mov
dec
sub
call
pop
movsb
sahf
jb
imul
and
cmp
and
testl
dec
xorb
repz
ret
sbb
jg
stos
pop
addr16
cmpl
cmp
call
mov
int3
jge
dec
in
cmp
shl
jge
stc
into
add
xchg
mov
sarl
cs
inc
jecxz
mov
scas
mov
ljmp
lahf
js
jle
aad
popf
lcall
sbb
test
mov
sbb
mov
sbb
mov
pushf
ja
mov
xor
dec
insb
and
pop
test
jbe
mov
shl
mov
and
push
adc
jo
aam
incl
cmpsl
and
push
mov
sbbb
bound
cli
sbb
clc
orl
daa
inc
stc
loope
xchg
sub
jmp
fs
inc
idivl
scas
sbb
scas
add
jo
jns
push
sub
ja
mov
add
jecxz
jmp
ja
fwait
dec
sub
ss
movsb
mov
push
inc
sti
popf
xchg
adc
out
pusha
lahf
cmp
adc
test
fcmovne
xor
fsubrs
test
add
in
int3
or
jnp
xor
mov
sti
dec
das
mov
das
mov
jo
stc
ret
mov
push
arpl
and
lahf
decl
in
add
clc
pop
mov
gs
lcall
and
aaa
adc
adc
stos
xchg
xlat
or
mov
adcb
lods
push
cmpsl
fsubp
daa
in
dec
mov
mov
inc
jge
std
xor
in
add
gs
cltd
add
mov
cmp
xchg
push
in
out
cmp
mov
cmpsl
inc
mov
ret
sbb
jmp
pop
mov
incl
daa
push
ret
mov
pop
outsl
insb
pop
aas
iret
push
and
adc
test
mov
jb
jns
mov
inc
imul
mov
ja
sar
pop
clc
nop
sbb
mov
lret
aad
push
inc
out
inc
xor
das
and
jg
cltd
sarb
and
dec
xorb
data16
sbb
rcl
pop
arpl
ljmp
jne
push
push
inc
mov
enter
sbb
sbb
inc
push
negl
int3
mov
and
fs
test
pop
dec
mov
shlb
shll
mov
inc
gs
dec
lret
xor
jo
cltd
rorl
jnp
mov
decl
subb
push
mov
ds
mov
icebp
mov
and
fwait
add
jmp
in
loopne
das
ljmp
push
and
leave
and
pop
cmp
jg
adcb
inc
inc
shll
in
loop
out
ljmp
das
pop
movsl
add
call
push
jne
xor
xchg
mov
out
jo
mov
jmp
push
cwtl
xchg
int3
xchg
fists
pop
mov
ret
push
daa
lods
inc
xor
dec
nop
jmp
lods
lcall
incl
xor
adc
loopne
jmp
fsubs
stc
mov
ret
ljmp
inc
adc
lods
mov
pusha
jb
cmpsb
xor
incl
mov
pop
jl
sbb
mov
xchg
jo
sub
int
lock
jmp
pop
xor
jae
jge
sub
xor
daa
sub
jmp
jge
mov
jg
loope
xchg
lock
push
cmp
add
jno
ljmp
mov
xchg
sub
mul
xor
add
dec
loopne
inc
mov
mov
fcomps
sbbl
mov
adc
sbb
pop
lods
in
or
out
push
cmp
dec
loop
dec
jecxz
xor
cmpl
push
add
into
jg
pushl
ja
loope
xchg
cmpsl
inc
jb
inc
and
test
add
mov
cmp
cmp
clc
adc
ja
cmp
pop
fs
testl
sub
fidivrs
and
or
hlt
adc
pop
loopne
data16
bound
pop
rcll
push
popw
pop
ljmp
pop
pushf
cwtl
enter
mov
loopne
sub
gs
adc
negb
rolb
jbe
ljmp
andl
in
sti
repnz
or
dec
arpl
and
mov
decl
jnp
mov
pop
jmp
jo
roll
into
call
clc
mov
imul
jge
mov
das
pop
pusha
notb
lods
lret
adc
inc
sub
repnz
and
mov
insb
add
cmp
pop
loop
test
adc
iret
pop
outsl
xchg
pop
push
jmp
inc
sbb
mov
mov
or
mov
pop
mov
pushl
and
imul
add
pop
fnstsw
push
fimuls
outsb
daa
mov
jmp
and
rcll
inc
add
mov
pop
inc
mov
inc
lods
add
leave
jmp
mov
inc
or
pushf
jg
scas
mov
in
cwtl
sub
lret
xlat
gs
ds
addb
xorl
adc
aas
mov
dec
lds
inc
mov
adc
sub
outsl
aad
mov
xor
sub
xor
pop
jne
es
ljmp
cmpsl
packuswb
sarb
dec
ljmp
nop
fcomi
jecxz
or
ud0
orb
xor
shll
sub
xor
arpl
call
inc
fs
loopne
mov
ficoml
mov
push
pop
aas
repnz
nop
adc
push
out
lcall
push
outsl
add
dec
sbb
jbe
xchg
or
cmp
pushl
cmc
jg
fdiv
pushf
sbb
jg
dec
movsl
push
mov
inc
loopne
add
std
mov
in
shrl
sbb
aas
xchg
les
popf
imul
adc
outsl
test
lcall
xor
mov
arpl
fsubs
and
inc
mov
fisubl
call
xor
shll
test
call
sbb
xchg
and
loopne
inc
or
out
adc
mov
mov
call
cmp
and
xor
hlt
fmuls
dec
xchg
std
insl
test
cmp
jg
push
adc
adc
mov
nop
jb
sub
cmpsl
mov
mov
xchg
das
sahf
jmp
ja
dec
int
fs
adc
test
xchg
mov
mov
gs
aas
ds
mov
aaa
cmp
push
push
cmpsl
sbb
jp
xchg
inc
addl
add
pushl
aam
add
ds
sub
movntq
sbb
outsb
mov
iret
repnz
ja
ljmp
out
ds
dec
sbb
push
xchg
adc
mov
dec
scas
mov
and
ds
mov
pop
adc
mov
jp
jmp
push
pusha
or
inc
gs
mov
adc
mov
xor
inc
ss
dec
fwait
ja
jmp
xchg
lock
xor
mov
mov
ljmp
add
jle
scas
into
in
fdivl
jb
and
xor
loop
and
sti
xor
scas
outsb
xchg
pushl
insb
mov
xor
in
inc
mov
xchg
fst
clc
test
xor
sar
jmp
pushf
dec
xor
leave
repz
push
and
into
jnp
mov
inc
and
mov
jmp
rcrb
lcall
out
inc
daa
push
clc
mov
outsb
sbb
pop
jne
pushl
jmp
lret
outsl
das
lods
jb
mov
adc
xor
shl
mov
call
imul
iret
lds
mov
nop
repz
aaa
hlt
inc
into
push
xchg
imul
pop
push
pushl
scas
dec
cltd
mov
mov
fstpt
sbb
or
mov
sub
call
cmp
cltd
dec
orl
pop
cld
mov
popl
pop
aam
aas
add
inc
sub
mov
and
ds
gs
jecxz
pop
cmpsl
iret
in
jnp
pop
loopne
mov
fdivrs
decl
arpl
jae
push
mov
pop
loope
scas
jg
leave
push
cmpsl
fdivs
jmp
inc
rcrb
cs
xchg
and
rcrb
sahf
pop
testl
inc
decl
lds
cmpsl
mov
xor
enter
icebp
test
les
cwtl
test
push
ljmp
popa
or
mov
dec
ud1
fstpt
aaa
cmp
xor
aad
or
jmp
mov
decb
repz
sbb
in
cmp
stos
pop
arpl
loopne
sbb
lcall
fiadds
aaa
sti
ret
push
filds
js
cwtl
ret
pop
adcb
xchg
popf
jge
mov
mov
loop
int3
inc
adc
jle
outsl
les
shll
adc
in
test
call
pop
xchg
lods
pop
mov
daa
adcb
into
jle
ss
outsl
add
inc
sbb
shll
dec
bound
add
int3
push
add
lds
bound
jmp
call
fdivrl
loop
sbb
xor
cmpsb
mov
je
inc
xchg
jg
lcall
lock
fmulp
movsl
sub
xchg
lcall
inc
aad
stos
sbb
pop
adc
jns
xchg
and
loope
mov
mov
lcall
cs
stc
sahf
xchg
mov
repnz
sub
pop
stc
fsts
jmp
js
push
mov
test
mov
cmp
xchg
xchg
xchg
test
dec
jl
or
sbb
ljmp
pop
jo
inc
popa
mov
fcomp
nop
push
pop
jbe
fsincos
aad
popf
out
xor
dec
lods
inc
xlat
mov
jno
mov
and
fs
xor
mov
ljmp
add
pop
or
sbb
jbe
push
cmpsl
je
xchg
call
xchg
inc
cmp
shll
add
popl
aas
xor
mov
ljmp
andb
xorb
fstpl
or
les
mov
decl
scas
cwtl
js
addr16
sbb
out
ljmp
or
and
leave
pop
hlt
ja
jmp
movsl
inc
mov
jns
insl
mov
outsb
aam
jge
fs
fwait
insl
jbe
ret
ljmp
sub
cmpsl
es
or
and
data16
jmp
sahf
cld
aad
jmp
insl
sti
xchg
jmp
mov
test
mov
jno
sub
lret
rsqrtps
rcrb
push
pop
and
xchg
lods
add
sub
in
lcall
scas
and
out
inc
xchg
fucomip
call
pop
in
adc
hlt
add
fldt
ret
mov
mov
or
mov
incl
orb
clc
sub
mov
sbb
mov
xchg
loop
xchg
mov
test
jno
dec
pop
mov
dec
js
js
iret
mov
idivl
mov
adc
in
pop
sti
mov
movsl
ljmp
int
repz
imul
dec
inc
mov
cld
pop
imul
xor
push
stos
xor
mov
and
test
into
inc
push
jne
int3
incb
incl
push
aas
lds
rcrl
mov
faddl
imull
testb
push
shr
mov
adc
push
sbb
shll
sbb
add
inc
fsubs
rcrl
je
mov
lret
sbb
imull
mov
repz
out
xchg
fwait
loope
push
ljmp
out
sti
sti
testb
adc
shlb
push
push
adc
ret
mov
clc
cli
add
mov
add
jg
idivb
idiv
add
add
nop
mov
nop
sub
jge
mov
inc
stos
add
test
jne
ljmp
push
dec
ror
js
in
adc
or
xor
fwait
xor
call
adc
cmpsl
aaa
dec
jecxz
bound
scas
imul
in
inc
shrl
incl
cmp
mov
push
cmpsb
filds
push
pop
and
inc
daa
imull
adc
ljmp
insl
mov
pop
or
mov
fidivrl
or
testl
mov
lock
inc
out
je
sub
loopne
xchg
sub
pop
mov
xchg
int
std
loop
mov
lret
arpl
inc
cli
out
mov
lret
ret
fs
xor
xchg
cmpsl
lock
dec
lock
lea
jne
jb
jle
ljmp
push
dec
das
xchg
and
cmp
push
cmp
lahf
or
jl
in
sub
jle
popf
push
mov
mov
outsl
decl
sub
mov
movsl
fcomps
aas
sbb
sbb
lods
mov
int3
call
push
daa
xchg
ret
xor
pusha
xor
repnz
pop
std
sti
data16
fcomip
add
mov
ss
and
aam
stos
movsl
add
ret
fbstp
xor
incl
push
pop
cmpsb
adc
add
push
xchg
insl
insl
pop
rolb
sti
int
dec
sub
cmp
add
add
decl
jnp
icebp
xchg
mov
and
adc
xor
popf
aad
movsb
outsl
pop
cld
incl
notb
xlat
sbb
iret
mov
aam
mov
cmp
cmp
je
push
mov
in
aaa
pop
lret
pop
adc
jecxz
jg
sbb
fimuls
iret
cld
jg
iret
jmp
or
push
dec
stos
rcrb
idiv
decl
mov
fstpt
mov
add
fbld
daa
xchg
int
push
andps
call
or
call
cld
hlt
mov
bound
lcall
mov
push
fs
pop
stc
pushl
and
loopne
cli
pop
push
movsb
in
jb
daa
xchg
pushf
mov
adc
shll
mov
xchg
lds
mov
add
dec
shrb
incl
cld
mov
push
in
mov
out
aas
jl
shll
jnp
cmc
lahf
mov
in
mov
jne
pop
int3
push
push
add
adc
xor
outsb
sub
lgs
push
pop
add
mov
jle
je
aam
dec
or
dec
pushf
sbb
int
shll
xchg
and
out
fcmovnbe
pusha
cmp
cmp
inc
test
jmp
inc
fs
icebp
sbb
and
add
stos
jl
incl
and
fdiv
sbb
jnp
mov
dec
ss
mov
push
dec
std
cmp
xorb
cltd
js
loop
pop
lock
cmp
lock
inc
push
out
push
lret
push
mov
lods
pop
push
cwtl
jo
dec
adc
mov
sti
xchg
cmpb
loope
test
push
xor
dec
and
mov
jmp
dec
or
or
sbb
mov
cmp
inc
sbb
xor
cmp
ljmp
bound
das
xlat
int
mov
sub
cmpsl
jl
xchg
mov
fldenv
out
mov
fstps
call
fists
sbb
mov
iret
jae
sub
pop
in
das
mov
aas
cmp
or
jbe
cs
dec
inc
mov
xchg
lret
daa
ljmp
jecxz
push
add
jmp
add
dec
cwtl
fldcw
pop
or
lea
shll
cmp
and
jmp
decl
mov
add
cmp
pop
shl
jmp
push
mov
jo
lea
pop
ljmp
and
add
fcoml
xlat
mov
out
dec
idivb
cld
clc
inc
push
aad
enter
pop
call
shlb
fsub
push
iret
xor
jle
cltd
xchg
repnz
xchg
std
dec
pop
mov
ds
das
xchg
adc
lcall
push
mov
mov
test
gs
iret
mov
and
dec
adc
dec
and
fcos
pushl
rclb
shrb
cld
fwait
xchg
lret
sub
sti
jo
mov
ljmp
shrb
xor
fcmovnbe
mov
lcall
movsb
or
int
pop
inc
adc
add
push
and
xchg
and
pcmpgtw
and
mov
mov
push
fcoml
incl
out
das
addr16
lret
sbb
stos
in
scas
ljmp
fistpll
lock
stc
push
dec
popa
je
pop
es
jb
out
test
in
or
push
jbe
jbe
ljmp
fwait
and
xor
push
inc
fstpl
subb
jge
mov
mov
into
xor
pushl
ror
sbb
data16
in
mov
test
insb
loop
sub
xlat
xchg
sbb
lea
xchg
in
jmp
leave
imul
lret
xchg
sbb
mov
loop
sbb
push
cmc
in
lret
fdivl
cltd
xor
stos
mov
xlat
jnp
or
into
xlat
mov
and
cmp
pop
dec
push
cld
pushl
dec
mov
cltd
imul
dec
sbb
pop
ret
cli
push
rol
lret
lcall
xor
xchg
cli
sub
cs
pusha
jns
data16
or
sar
mov
jg
int3
xor
and
in
cltd
mov
out
dec
incl
sub
out
cmpsl
push
cld
xadd
fdivrl
jmp
pop
lahf
inc
pushl
cld
fcoml
int3
xor
sub
add
fistps
dec
jg
jmp
es
inc
push
add
mov
mov
cmp
lcall
fistpll
enter
xchg
pop
fldcw
idiv
scas
sahf
pop
cli
push
xlat
loop
insb
call
loopne
sbb
rcr
sahf
jno
pop
or
rolb
lea
cmp
call
inc
lahf
mov
imul
pop
pushf
into
pop
push
lock
jbe
fstps
push
std
push
paddusb
xchg
icebp
xor
les
mov
js
sarl
lock
jmp
inc
cmp
fisubs
dec
hlt
mov
dec
lahf
or
stc
push
jecxz
xchg
out
call
pop
dec
mov
test
movsl
sbb
sub
andb
mov
ljmp
jnp
icebp
xchg
and
add
and
loopne
loopne
test
inc
mov
nop
lahf
addr16
lahf
push
xchg
pop
stos
lods
adcl
pop
pop
cmp
ljmp
inc
mov
pushf
fldenv
or
add
mov
push
scas
in
std
sar
fisttps
xchg
push
outsb
jle
lahf
call
xchg
pop
fcomps
into
ja
mov
mov
decl
shlb
dec
sti
out
cmp
scas
lcall
movsl
aas
in
or
into
loop
mov
xor
and
inc
pop
inc
insb
mov
out
dec
lahf
test
adc
add
jae
clc
das
iret
inc
pop
shll
push
pop
dec
shlb
psubsb
add
mov
push
mov
lret
push
addr16
cmp
cmp
push
xor
cli
add
icebp
mov
shlb
loop
fxch
xchg
or
in
add
dec
push
pop
aam
jge
fidivrl
jg
lcall
repz
inc
pop
movsb
pop
mov
or
xchg
cmp
mov
and
test
bound
jg
jb
pusha
add
sahf
test
scas
mov
cmp
cs
mov
xlat
cwtl
aaa
aam
push
mov
sahf
xlat
rcll
jle
mov
pusha
stos
xor
pop
aam
inc
adc
jae
lock
mov
push
call
imul
xchg
pop
xchg
push
fadd
stos
jb
push
pop
inc
dec
or
fs
sub
call
std
inc
pop
movsb
fnstcw
sti
ret
sti
push
push
inc
mov
in
cmp
loopne
adc
incl
add
jmp
jle
pusha
xor
xchg
mov
test
push
add
subl
inc
add
adc
push
enter
mov
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adc
lock
out
lcall
jecxz
fisubrl
dec
leave
loopne
call
popf
dec
scas
mov
mov
decl
xchg
in
outsl
jb
adc
gs
mov
testb
cltd
fs
shlb
jle
inc
mov
mov
cli
inc
fwait
xor
repz
dec
pop
nop
fcoms
or
jge
ljmp
rol
imul
loopne
cmp
popf
pop
jp
add
jl
sbb
cmp
lcall
icebp
add
sbbb
test
shlb
in
test
aad
sbb
adc
incl
stos
fsubs
cmpsb
jbe
loope
mov
arpl
jle
outsl
sbb
and
pop
daa
xchg
mov
xchg
push
lods
jns
call
es
roll
fs
stos
xor
outsl
lcall
in
mov
sub
cld
sbb
popf
and
mov
int
ljmp
xor
sbbb
call
jecxz
sbb
or
ja
sti
fistps
adc
fnop
mov
pop
decb
or
mov
daa
and
cmp
sbb
inc
into
into
outsb
jge
aas
adc
sbb
data16
xor
sub
into
outsb
das
inc
cmp
push
dec
and
into
mov
lods
into
pop
into
pop
sbb
xchg
mov
xchg
mov
inc
cmp
js
sub
dec
jb
add
jmp
cmp
jne
sbb
mov
sub
popf
pop
jo
mov
push
outsb
cmp
mov
mov
leave
leave
sbb
and
adcb
fs
ud2
jbe
mov
lods
mov
cmp
and
leave
xor
cmpsl
sbb
sbb
ret
sti
fcomps
dec
cmp
pop
or
cwtl
fstpl
jno
cmpb
lock
or
dec
or
xchg
js
xor
in
sbbb
pusha
cmp
mov
lock
fwait
insl
vpaddsw
sarb
cmp
je
loopne
or
and
or
sti
adc
add
jge
xchg
int
subl
das
pop
mov
xor
pop
sub
xchg
out
jnp
pop
adc
mov
fwait
stc
leave
mov
das
fidivl
repz
sbb
jo
mov
pop
or
je
jbe
into
jl
sub
aaa
pop
dec
jb
or
mov
fsubl
scas
leave
lock
adc
fisttpl
xor
xchg
xchg
xchg
fldcw
cmp
fwait
loope
dec
dec
sub
pop
jno
ficoms
or
dec
or
mov
sbb
cwtl
xchg
jns
dec
mov
fs
pop
xor
dec
dec
sbb
lds
das
jp
xchg
mov
mov
ret
pop
in
loop
pop
adc
insl
in
and
xor
imul
jo
push
imul
adc
xor
mov
ret
icebp
or
fdivl
loope
xor
dec
xchg
or
decb
popa
mov
sbb
jo
imul
push
fsubrl
pusha
jnp
inc
mov
mov
xlat
ja
in
mov
jbe
loope
xor
imul
loop
in
mov
sub
or
jmp
arpl
jp,pn
fisttpll
das
gs
iret
adc
or
outsl
cmc
int
ja
test
loop
cmpsl
stos
int3
cmc
cmp
mov
int
jge
mov
call
das
cmp
jno
gs
sbb
jno
std
mov
js
adcb
cmp
adc
insl
mov
sbb
xor
lea
in
fneni(8087
mulb
or
xor
pop
lret
jecxz
xchg
repz
xchg
pushf
add
xchg
push
sahf
add
in
adcb
or
aas
loopne
sbb
scas
sbb
lahf
cltd
jp
cmp
push
mov
scas
leave
sbb
popf
loop
shll
mov
jbe
jae
ss
int
in
xchg
das
jmp
push
adc
js
jns
xor
pushf
bound
dec
ds
rcll
das
and
stos
sahf
stos
jbe
in
jbe
lods
stc
pop
jnp
test
outsb
jae
pop
sbb
outsl
sbb
sbb
jbe
push
fwait
stc
in
pop
out
ja
push
jp
xchg
mov
es
sbb
loop
adc
js
and
movl
add
pop
jno
scas
pop
xchg
mov
jo
push
jo
cmp
leave
cmp
jnp
mov
inc
iret
jmp
mov
push
cmp
xchg
insb
pop
lock
scas
mov
mov
mov
lds
or
pop
and
inc
pop
leave
and
cmp
xor
mov
cltd
mov
das
lds
cs
add
jno
sbbb
xchg
fldcw
sti
dec
adc
pop
lock
adc
enter
insb
fs
mov
test
sahf
in
sbb
mov
adc
fisttpl
stos
fwait
popf
pop
icebp
stos
addr16
pop
pop
jo
sbb
jg
popf
mov
push
push
mov
or
adc
inc
cld
js
inc
outsb
pop
fdivl
xchg
fcomps
pop
test
xchg
xor
pop
ficompl
lds
xor
outsb
mov
or
in
mov
fchs
ja
ret
dec
out
lds
mov
cltd
aas
adc
jg
fucomi
in
stos
and
fbld
int
mov
rcll
sti
mov
or
cmp
in
sub
outsl
xlat
sbb
inc
movsb
rorl
pop
ror
or
pop
gs
out
push
jmp
daa
cwtl
or
sub
mov
outsb
and
jmp
adc
cmp
and
xlat
pop
out
inc
xor
sbb
mov
call
popf
pop
mov
scas
sub
inc
or
cmpsl
inc
add
fucomi
jbe
fstpt
dec
aaa
stos
jp
in
jbe
xchg
sub
lar
subb
fwait
cmp
pop
test
inc
fldl
xor
mov
imull
add
imul
add
fs
push
in
sahf
jp
repnz
push
mov
nop
adc
fdivrl
fmuls
mov
sbb
jb
popa
add
ret
cmp
pop
pop
sbb
xor
into
loopne
fisttpl
mov
or
mov
jae
filds
fsubrs
jmp
repz
fnsave
ret
out
popl
jg
sub
or
ss
stos
pop
sub
aad
jbe
sbb
insl
scas
das
insl
cmp
mov
push
pop
fdivl
stc
shrb
inc
xchg
loope
fldt
fwait
push
adcb
imul
sbb
adc
fimuls
stos
xchg
inc
frstor
out
push
jge
lds
stc
ja
mov
test
dec
btc
sti
sbb
sbb
sarl
xor
loopne
scas
jne
sub
ret
insb
das
or
repz
pushl
testl
ljmp
pop
push
jae
mov
pusha
les
dec
jmp
sub
dec
lock
jae
push
jmp
pop
or
aad
shll
insl
cltd
bound
movsb
jmp
out
into
cmp
sbb
jns
pop
stc
insl
ss
lods
out
icebp
outsb
movsl
ja
ljmp
sbb
rcrb
mov
mov
pop
mov
push
es
idiv
call
mov
push
pop
push
dec
lods
adc
pmaddwd
pop
or
add
test
sbb
inc
mov
xchg
call
call
out
test
jle
mov
cmp
repz
cmp
decl
pop
test
mov
mov
pop
cli
jp
das
push
mov
add
std
in
jl
xorl
out
mov
or
sbb
pop
push
jne
pop
pushf
fwait
adc
mov
mov
mov
in
adc
pop
jmp
pop
testb
or
fdivl
shl
fists
inc
in
mov
jbe
loopne
cmpsb
inc
sbb
loop
loop
mov
ljmp
xchg
jle
js
pop
pop
icebp
or
bound
insl
imul
ljmp
jb
div
xor
mov
push
or
xor
imul
test
iret
jne
mov
mov
sahf
fs
mov
dec
or
lahf
inc
jbe
test
and
ljmp
in
popa
std
in
shlb
add
imul
xchg
mov
push
mov
call
inc
popa
bound
dec
addr16
fnstenv
xor
aas
mov
das
leave
xor
cli
cwtl
cs
std
decl
dec
mov
xlat
pop
dec
mov
inc
push
sbb
idivl
inc
adc
mov
outsl
sub
sub
lods
fwait
mov
sbb
xchg
inc
lods
dec
cld
mov
xchg
icebp
and
push
jo
icebp
inc
and
mov
shrl
fstl
jmp
pop
xor
jmp
jge
mov
popf
push
push
scas
loopne
dec
or
mov
jl
dec
test
sbb
dec
mov
inc
and
in
popl
xchg
push
pop
adc
les
stos
sub
into
lcall
mov
stos
push
cmpsb
aad
iret
inc
out
out
xchg
xchg
cmp
lea
dec
popf
les
in
mov
push
jmp
mov
xchg
mov
add
xor
mov
enter
call
arpl
sbb
mov
pop
cmp
pop
fsubrl
jp
into
pop
dec
add
jmp
push
subb
xor
cmp
lods
push
jo
add
mov
cmp
hlt
adc
loope
decl
insl
jmp
loop
inc
xor
mov
mov
shll
push
std
xchg
decl
and
leave
dec
xchg
or
fdivrl
or
sub
std
test
jae
call
push
lock
or
or
lret
std
mov
cmp
addb
cs
call
dec
jae
dec
js
fisubl
push
xchg
dec
cltd
aas
leave
or
test
mov
mov
iret
lcall
outsb
and
xchg
iret
xchg
aaa
popf
xor
test
and
decl
and
adc
mov
test
in
pop
mov
jb
mov
mov
mov
jp
dec
out
aas
sahf
mov
fisttpl
sbb
popf
jmp
daa
adc
adc
out
dec
dec
jp
jl
test
push
mov
lret
out
incl
js
insb
inc
inc
dec
cld
inc
int3
cmp
sub
in
pushf
lods
filds
sub
mov
push
xor
lret
cmpsb
mov
xchg
out
or
cmp
pusha
push
imul
push
inc
fldl2t
push
sub
lcall
lea
mov
rorb
jle
mov
sub
pop
sub
inc
mov
lcall
mov
jmp
es
pop
insl
sahf
push
std
call
xchg
icebp
mov
lret
into
or
mov
xor
xor
inc
push
pushf
sbb
xor
stos
leave
and
or
aaa
fistpll
es
mov
popf
icebp
mov
incl
movsb
adc
or
sub
and
cs
jno
mov
lods
fsubrl
out
jp
push
bound
pop
js
adc
clc
pop
mov
jmp
xlat
mov
imul
add
xchg
xchg
sub
cmp
stc
enter
lcall
loope
pop
outsb
sbb
aaa
imul
jmp
sub
jg
leave
mov
and
pop
iret
add
push
inc
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
sub
cmpl
stc
addr16
pop
aad
mov
decl
andl
shll
mov
cs
mov
cmp
sub
and
jns
lock
cmp
mov
testb
jmp
mov
jmp
dec
pop
testb
dec
loop
das
sti
or
aad
hlt
sbb
imulb
adc
hlt
mov
lock
into
adc
push
mov
mov
test
loop
xchg
addr16
mov
repnz
stc
leave
mov
adc
mov
dec
gs
pop
ja
jp
ds
shrl
popa
mov
iret
ja
jbe
lods
adc
ror
aaa
sub
jmp
cmp
xor
repz
xchg
mov
sbb
enter
daa
daa
jl
inc
mov
lock
ljmp
scas
push
dec
lods
and
and
jbe
xlat
xor
dec
mov
rclb
pop
or
jmp
mov
xchg
cmpsb
jmp
aas
inc
inc
jbe
imul
mov
imul
addr16
aad
shr
ljmp
data16
daa
cli
lret
lahf
ret
or
in
scas
sbb
mov
faddl
test
idiv
and
dec
test
push
xchg
or
incl
xor
addr16
mov
call
jo
cmp
mov
call
in
jnp
fcomps
push
ljmp
add
adc
addl
xor
sti
lcall
int
cmpsl
stos
sti
scas
sbb
outsb
popf
dec
pop
adc
pop
outsl
pop
movsb
push
hlt
or
lcall
cmp
push
or
push
fisttps
hlt
dec
or
pop
or
iret
out
adc
in
rclb
fstpt
pop
mov
mov
xchg
out
push
data16
and
in
nop
or
out
mov
ljmp
jae
popf
fmull
ds
mov
cli
popa
jg
cmp
stos
mov
sti
jmp
mov
mov
cltd
mov
mov
dec
imul
stos
jle
fldl
loope
gs
cltd
ja
dec
sub
scas
dec
push
mov
mov
ljmp
mov
lcall
cltd
jg
push
mov
add
push
adc
xchg
stc
sti
sbb
dec
popf
stos
test
cld
inc
clc
addr16
sub
and
je
cmp
repz
cltd
mov
ror
jne
cmp
lcall
es
or
stos
iret
imul
pop
incl
or
xchg
jno
in
mov
inc
je
shrl
orb
lods
std
xlat
nop
nop
insl
hlt
and
pop
sub
jg
cmp
add
push
and
xchg
mov
xor
jl
and
sti
pushl
mov
jbe
add
adc
mov
or
fucomp
pop
and
mov
decl
mov
xor
mov
sbb
xchg
and
pop
sub
dec
decl
outsl
jnp
repz
subl
mov
lahf
andb
cltd
call
ljmp
pop
add
jle
jmp
fisubl
or
mov
jmp
jp
test
pop
adcl
int
fnstenv
cmc
dec
hlt
in
mov
shlb
call
add
lahf
testb
sub
inc
jae
mov
sbb
fbstp
jp
or
call
icebp
ja
loope
out
aas
data16
xor
icebp
popf
pusha
xchg
push
aam
in
and
lock
ljmp
sbb
js
add
or
xchg
idivb
lcall
dec
sti
push
mov
in
andb
xchg
mov
or
sub
cmc
adc
decl
repnz
xchg
repnz
mov
adc
jg
mov
movsb
enter
xchg
xchg
pop
fmuls
push
sub
mov
outsb
insb
mov
and
adc
dec
pop
pop
jns
pop
dec
notl
jl
test
mov
mov
push
testl
ds
iret
mov
mov
cli
iret
cmp
mov
fcomp
out
ljmp
pop
in
jnp
jbe
xchg
imul
dec
pop
call
mov
inc
sahf
fisttpll
out
xchg
push
aas
sbb
popa
jge
cltd
stc
sbb
repnz
cmpsb
subl
xlat
jb
data16
xchg
inc
mov
push
dec
sub
push
add
popa
sub
mov
out
jo
decl
jne
push
mov
xchg
in
lds
xor
cmp
mov
cli
cwtl
fwait
lock
int3
add
out
push
sahf
jmp
jb
push
cli
arpl
test
or
mov
xor
push
incl
out
mov
rcll
outsb
adc
mov
xlat
pop
mov
sbb
call
test
xlat
jp
jo
and
or
mov
jb
nop
es
scas
ret
jmp
pop
addr16
sbbl
clc
mov
shlb
mov
mov
push
add
fnstenv
ljmp
cli
xchg
jns
push
inc
xor
ljmp
xor
xor
popa
imul
jns
shl
add
jmp
push
pop
xor
xchg
lock
insb
dec
in
stc
push
dec
mov
or
mov
dec
mov
sub
sbb
sub
test
ljmp
cmp
push
jge
lcall
xor
pusha
sbb
int3
lahf
fs
fdivrp
dec
sub
ljmp
nop
xchg
mov
lret
mov
sub
dec
inc
lcall
sub
jmp
fwait
imul
sbb
pop
pushf
call
inc
in
outsl
sbb
ljmp
mov
mov
xor
xor
leave
mov
outsl
pushl
push
or
mov
jns
les
es
cmp
and
daa
int
sub
lods
ds
pushf
or
add
inc
cmp
or
jecxz
xchg
jecxz
popa
pop
fwait
inc
fs
mov
pop
inc
pop
sub
fld
fcmovnb
sub
incl
std
arpl
adc
je
jg
movsb
lods
ja
cmpsl
mov
pushl
xlat
data16
arpl
andl
cmp
sbb
shrl
inc
push
cmp
push
jl
ret
mov
jmp
and
sub
lcall
jge
in
scas
int
or
adc
xchg
xchg
lcall
clc
jmp
sbb
inc
sub
mov
popa
inc
mov
cmp
subl
fisubl
jno
xor
cmp
xchg
int3
sbb
inc
mov
dec
addl
fcoml
sub
aam
xchg
test
stos
data16
incl
push
and
push
jl
mov
and
es
scas
lcall
lods
pop
int3
inc
rorl
in
add
xchg
call
enter
xor
arpl
and
jbe
rclb
lret
es
or
jecxz
jne
jg
pop
icebp
xor
daa
and
adc
mov
inc
sbb
imul
jmp
jmp
mov
mov
movsb
insb
jl
xchg
int3
test
mov
pop
loope
xchg
sub
add
call
fldenv
xor
and
decl
sahf
mov
rol
xchg
cltd
jns
ds
popl
sub
scas
sub
lcall
popf
stc
xchg
cmp
push
aad
pop
insb
aad
lods
ja
jmp
jne
mov
lock
pushl
sbb
cmp
xchg
sbb
out
push
loopne
jle
mov
xlat
jmp
rcrb
sub
mov
push
test
call
xchg
imul
jle
mov
out
or
or
cmpsl
loopne
mov
sbb
adc
mov
mov
js
shll
inc
xchg
jb
cmp
inc
xchg
push
mov
je
pop
inc
insb
xchg
cmp
or
cmpsb
mov
incl
jb
ss
loopne,pn
add
decl
pop
xchg
jne
sbb
data16
add
xlat
push
sbb
popf
cmp
sbb
outsl
mov
or
jge
inc
bound
mov
add
pop
push
adc
fbstp
nop
jle
ljmp
clc
inc
sbb
test
out
xor
clc
mov
inc
leave
ljmp
out
test
add
mov
sub
cmp
shl
mov
jmp
pop
mov
dec
sub
rcll
ror
ljmp
sbb
incl
cld
jg
fcomp
xor
pop
push
inc
lods
enter
cmc
cmp
loopne
adc
jmp
cmp
popa
fdivl
mov
jns
aad
movsb
pusha
sbb
push
dec
xor
xchg
repnz
push
incl
adc
pusha
fcmovnb
xchg
das
sbb
ficomps
sub
mov
jg
jl
jae
divl
addr16
jl
ljmp
push
mov
aas
sahf
ds
dec
dec
leave
js
test
xorl
daa
jecxz
xor
add
mov
sub
mov
enter
scas
pop
movsb
sahf
jb
imul
decl
and
cmp
and
testl
enter
pop
repz
ret
sbb
ljmp
jg
stos
pop
addr16
cmpl
cmp
push
movsl
mov
int3
jge
dec
in
cmp
jg
call
icebp
jge
stc
into
add
xchg
mov
sarl
ds
inc
jecxz
push
call
jp
scas
mov
daa
mov
lahf
js
jle
aad
mov
loop
lret
test
mov
sbb
mov
sbb
ljmp
ret
mov
pushf
ja
mov
xor
insb
and
pop
test
jbe
mov
jg
idiv
shl
mov
and
push
adc
jo
aam
or
cmp
jp
mov
sbbb
bound
orl
add
inc
stc
loope
xchg
sub
out
fs
inc
idivl
scas
lcall
xchg
fisubrl
lret
mov
jo
jns
test
loopne
ja
mov
add
jecxz
ljmp
ja
fwait
dec
sub
ss
mov
sti
popf
xchg
adc
out
pusha
lcall
test
fcmovne
xor
fdiv
test
add
in
int3
or
fstpt
xor
mov
cmp
insb
jo
mov
decl
jo
stc
ret
mov
push
arpl
and
lahf
push
in
add
clc
pop
mov
gs
lcall
lcall
ret
aaa
adc
adc
stos
xchg
xlat
or
cmc
adcb
lods
fistps
cmpsl
fsubp
daa
in
dec
mov
mov
inc
jge
std
xor
in
add
gs
lcall
cmp
xchg
push
in
out
cmp
pusha
xlat
cmpsl
inc
mov
ret
sbb
jmp
clc
cmp
inc
push
mov
push
cltd
daa
push
ret
mov
call
mov
aas
iret
push
and
adc
test
pop
jns
int3
jns
mov
cld
inc
cmp
imul
mov
ja
clc
nop
sbb
mov
lret
aad
push
inc
out
mov
xor
das
and
and
sti
dec
xorb
data16
sbb
rcl
pop
arpl
mov
arpl
push
push
inc
mov
icebp
dec
jge
add
negb
fildl
negl
int3
pop
mov
and
fs
test
pop
fisttps
arpl
mov
shll
or
and
stos
dec
lret
xor
jmp
jo
cltd
rorl
jnp
mov
lea
outsb
loop
push
mov
ds
pushl
and
fwait
add
jmp
repnz
ljmp
push
and
mov
and
pop
cmp
cmp
mov
bound
inc
in
loop
out
ljmp
das
pop
movsl
add
jne
xor
xchg
mov
out
pushl
mov
jmp
push
cwtl
xchg
int3
xchg
fists
pop
mov
ret
decl
daa
lods
inc
xor
dec
nop
jmp
lods
lcall
test
and
xor
adc
cmc
jmp
imul
fwait
cli
and
movsl
into
ljmp
int3
stos
ficoml
es
adc
lods
mov
xchg
cld
inc
inc
pusha
jb
cmpsb
xor
movsl
jno
sti
pop
jl
lcall
mov
xchg
jo
sub
int
and
pop
xor
jae
jge
sub
add
jl
pop
sbb
sub
mov
fnstcw
loope
jg
xchg
lock
push
cmp
add
jno
stos
mov
sbb
jmp
pushl
mov
adc
adc
or
jle
mov
xchg
fcomps
sbbl
pushl
adc
sbb
pop
lods
in
or
push
cmp
dec
loop
dec
jecxz
xor
pushl
cmpl
push
add
into
jno
ja
loope
xchg
cmpsl
inc
jb
inc
and
mov
pop
jae
out
and
add
add
adc
ja
cmp
pop
fs
pushl
xchg
mov
jg
pop
sub
and
or
hlt
adc
pop
loopne
data16
jmp
outsl
pop
rcll
push
popw
pop
sub
cwtl
enter
mov
loopne
ljmp
gs
adc
negb
rolb
jbe
imul
push
sti
repnz
or
in
mov
aas
dec
arpl
and
mov
jnp
mov
pop
jmp
jo
sar
incl
into
call
clc
mov
imul
sbb
push
enter
pop
adc
dec
inc
sub
repnz
and
or
cmp
sti
lcall
loop
test
adc
iret
pop
outsl
xchg
pop
mov
inc
sbb
mov
leave
daa
adc
ret
or
mov
pop
mov
test
out
imul
add
jmp
pop
fnstsw
push
fimuls
outsb
daa
mov
and
and
rcll
inc
inc
add
mov
pop
inc
mov
shrl
mov
inc
or
pushf
jg
ljmp
mov
lret
xlat
gs
ds
addb
xorl
adc
aas
mov
dec
lds
inc
mov
adc
sub
mov
rorl
xor
sub
aaa
cld
cmp
xor
pop
jne
es
packuswb
sarb
roll
xor
dec
add
jno
fcomi
jecxz
or
movaps
jne
jg
xor
shll
sub
xor
arpl
inc
fs
loopne
mov
ficoml
mov
push
pop
ljmp
xor
nop
adc
push
out
xchg
push
outsl
add
dec
sbb
dec
movsl
sbb
xchg
or
cmp
mov
and
jg
fdiv
pushf
sbb
jg
decl
push
mov
inc
loopne
add
es
and
mov
lcall
xchg
les
popf
imul
adc
pop
fdivl
mov
arpl
fsubs
pushl
push
lock
mov
fisubl
call
incl
xor
icebp
test
jns
xorl
xchg
jle
pop
js
and
loopne
inc
inc
or
out
adc
mov
mov
cmp
and
xor
hlt
mov
add
std
insl
test
cmp
clc
mov
pop
mov
nop
jb
pushl
sub
cmpsl
mov
mov
xchg
das
sahf
and
ja
dec
int
fs
push
adc
test
xchg
mov
mov
gs
aas
ds
mov
aaa
cmp
push
lcall
cmpsl
sbb
jp
xchg
inc
addl
add
add
ds
sub
decl
out
lods
sbb
outsb
mov
iret
repnz
ja
imul
loopne
outsb
mov
pop
cmc
sbb
push
xchg
adc
xchg
dec
scas
mov
and
ds
fcomip
mov
pop
adc
mov
jp
rorl
movb
mov
adc
dec
xchg
mov
mov
xor
inc
ss
dec
fwait
mov
xchg
lock
xor
mov
push
cmp
mov
ljmp
dec
test
decl
jo
into
in
fdivl
jb
and
xor
loop
and
sti
xor
scas
outsb
cs
ljmp
lods
call
mov
xor
in
inc
mov
xchg
fst
clc
test
pushl
xor
shlb
dec
xor
leave
repz
push
and
into
jnp
mov
inc
and
jmp
lcall
rcrb
lcall
out
inc
daa
push
clc
mov
outsb
lcall
fsts
jne
adc
mov
jmp
lret
outsl
das
lods
jb
mov
adc
xor
shl
mov
mov
cmc
push
cltd
imul
iret
lds
mov
nop
repz
aaa
hlt
inc
into
push
xchg
imul
pop
push
stos
mov
mov
scas
dec
cltd
mov
mov
fstpt
sbb
or
mov
incl
ljmp
orl
pop
cld
mov
popl
pop
aam
aas
add
incl
test
mov
and
ds
gs
jecxz
pop
cmpsl
iret
in
jnp
pop
loopne
mov
fdivrs
lds
arpl
jae
push
mov
pop
loope
scas
jg
leave
push
cmpsl
fdivs
xlat
lods
sbbb
pop
add
or
xchg
and
rcrb
sahf
pop
testl
incl
in
inc
or
dec
cmp
cltd
jne
in
enter
icebp
test
les
cwtl
incl
popa
or
mov
dec
ud1
fstpt
aaa
cmp
xor
lcall
dec
or
mov
decb
repz
sbb
in
cmp
stos
pop
arpl
loopne
clc
sti
sbb
inc
dec
aaa
sti
ret
push
filds
js
cwtl
ret
pop
adcb
incl
adc
mov
loop
int3
inc
adc
jle
outsl
les
shll
adc
in
lcall
test
cmp
pop
mov
daa
adcb
into
jle
ss
icebp
add
inc
sbb
shll
dec
bound
add
int3
push
add
lds
outsl
xchg
jmp
cmp
ficompl
xor
cmpsb
mov
mov
pushl
xchg
pop
push
imul
sub
xchg
lcall
inc
aad
pushl
jmp
sahf
dec
les
lret
xchg
and
loope
mov
mov
jo
push
inc
cs
stc
sahf
xchg
mov
repnz
sub
pop
stc
fcos
call
scas
js
push
mov
test
mov
cmp
xchg
xchg
xchg
test
dec
jl
decl
prefetcht0
xchg
mov
ret
ss
jg
fcomp
nop
push
pop
jbe
fsincos
aad
popf
out
xor
stc
push
push
or
lods
inc
xlat
mov
jno
mov
and
fs
xor
sub
mov
add
pop
or
sbb
jbe
push
jmp
xchg
inc
cmp
shll
add
popl
loopne
aas
xor
mov
andb
xorb
fstpl
or
les
mov
dec
scas
cwtl
js
addr16
sbb
out
ljmp
or
and
leave
lcall
ja
popa
cmp
mov
dec
outsb
aam
jge
fs
fwait
insl
decl
mov
cwtl
or
and
data16
jmp
sahf
cld
aad
jmp
std
ljmp
xchg
sbb
sub
mov
jno
sub
lret
rsqrtps
sar
pushl
lcall
and
xchg
lods
add
sub
in
lcall
scas
and
push
out
inc
xchg
push
aaa
pop
in
adc
hlt
add
fldt
ret
mov
mov
or
mov
mov
clc
sub
mov
mov
mov
xchg
loop
xchg
mov
incl
mov
pop
mov
dec
js
js
iret
mov
ja
sti
mov
adc
in
pop
dec
jnp
sub
sub
mov
lahf
mov
int
sbb
inc
mov
mov
cmp
cmc
les
pop
shrl
cmp
into
inc
push
test
je
aas
lds
inc
jmp
out
faddl
imull
testb
push
in
xor
adc
push
sbb
dec
mov
sbbb
ret
add
aas
in
mov
fdiv
je
mov
lret
sbb
cvtps2pi
or
or
sub
ret
push
push
mov
add
div
in
rcrb
shlb
push
push
adc
xchg
add
cmp
add
jg
mov
add
add
nop
mov
nop
sub
pop
adc
stos
add
test
jne
decl
pop
jge
cmp
dec
ror
js
in
adc
or
xor
fwait
xor
mov
push
popf
adc
cmpsl
aaa
dec
jecxz
bound
scas
imul
in
inc
shrl
enter
sub
lcall
push
cmpsb
filds
push
pop
and
inc
daa
imull
adc
pushl
lods
push
cli
insb
mov
pop
or
mov
fidivrl
or
testl
mov
lcall
das
sub
loopne
xchg
sub
pop
mov
call
mov
lret
arpl
inc
cli
out
mov
lret
ret
fs
xor
xchg
cmpsl
lock
ljmp
mov
lock
lea
jne
jb
jle
ljmp
push
dec
das
xchg
and
cmp
jns
hlt
cmp
lahf
or
jl
in
sub
jle
popf
push
mov
mov
dec
outsl
and
loop
sub
mov
movsl
fcomps
aas
sbb
sbb
lods
mov
call
int3
call
push
daa
xchg
ret
xor
pusha
xor
repnz
pop
std
sti
data16
pushl
jge
add
mov
ss
and
aam
stos
movsl
add
ret
fbstp
pushl
pop
cmpsb
adc
add
push
xchg
insl
insl
pop
rolb
sti
int
dec
sub
cmp
add
incl
or
jnp
icebp
xchg
mov
and
adc
xor
popf
aad
add
outsl
test
notb
xlat
sbb
iret
mov
aam
or
or
or
cmp
je
push
mov
in
aaa
pop
lret
pop
adc
lcall
jecxz
sbb
fimuls
iret
cld
jg
iret
jmp
or
push
dec
stos
rcrb
jmp
push
mov
fstpt
mov
add
fbld
daa
xchg
int
push
andps
call
incl
mov
bound
lcall
mov
push
fs
call
stc
mov
fimuls
and
push
movsb
in
jb
daa
xchg
pushf
mov
adc
shll
jmp
lds
lds
mov
add
dec
shrb
incl
sub
idivl
mov
out
jg
jl
shll
jnp
cmc
lahf
mov
in
mov
jne
pop
int3
push
push
incl
mov
adc
xor
outsb
sub
lgs
push
pop
add
mov
jle
je
jmp
aam
or
dec
pushf
sbb
int
shll
xchg
and
out
fcmovnbe
pusha
cmp
mov
xor
xchg
aaa
scas
jmp
inc
fs
icebp
sbb
and
add
stos
jg
jl
mov
cmpb
sbb
jnp
mov
dec
ss
mov
jmp
iret
std
cmp
xorb
cltd
js
loop
pop
lock
aaa
cld
jg
lds
out
push
lret
push
mov
lods
pop
push
cwtl
jo
dec
adc
mov
sti
xchg
cmpb
loope
test
push
xor
dec
and
mov
mov
and
inc
movsl
insb
xlat
or
sbb
mov
cmp
inc
sbb
xor
cmp
ljmp
sub
icebp
sub
pop
das
xlat
int
mov
sub
cmpsl
jl
xchg
mov
fldenv
out
mov
imul
fists
sbb
mov
iret
jae
sub
pop
in
das
mov
aas
cmp
jnp
or
jbe
cs
dec
inc
mov
xchg
lret
daa
ljmp
incl
ljmp
out
add
dec
cwtl
fldcw
pop
or
lea
shll
ljmp
adc
lret
or
xchg
movsl
ja
shl
jmp
push
mov
jo
lea
pop
mov
add
fcoml
xlat
mov
out
dec
idivb
cld
clc
inc
push
call
and
pop
rol
jbe
push
in
iret
xor
jle
cltd
xchg
repnz
xchg
std
dec
pop
mov
mov
xchg
adc
push
mov
mov
test
gs
iret
mov
and
ljmp
decl
rorb
mov
adc
and
adc
insl
shrb
cld
fwait
xchg
lret
sub
incl
sti
jo
mov
imul
mov
xchg
pop
inc
movsb
or
int
pop
inc
call
xchg
mov
push
and
xchg
and
pcmpgtw
and
mov
mov
decl
push
fcoml
out
das
addr16
lret
sbb
stos
in
scas
ljmp
fistpll
lock
call
mov
jl
push
dec
popa
je
pop
es
jb
out
test
in
or
std
test
push
jbe
jbe
jo
and
xor
push
inc
fstpl
subb
jge
mov
mov
pushl
into
xor
xor
lret
fisubs
or
sub
in
test
insb
loop
sub
xlat
xchg
sbb
decl
inc
lea
xchg
in
leave
imul
lret
xchg
sbb
mov
loop
sbb
aas
ds
cltd
xor
stos
mov
xlat
jnp
or
into
xlat
mov
and
cmp
pushl
add
push
cld
adc
dec
mov
cltd
imul
dec
sbb
pop
ret
cli
push
rol
lret
pop
push
xor
xchg
cli
sub
cs
pusha
jns
mov
mov
dec
rorl
mov
mov
or
push
and
in
decl
out
dec
fadd
mov
out
cmpsl
push
cld
xadd
fdivrl
clc
pushl
fucomp
mov
lahf
inc
fcoml
int3
xor
sub
add
inc
movsl
push
fistps
dec
mov
es
inc
push
add
mov
pushl
sub
fistpll
enter
xchg
pop
fldcw
idiv
scas
sahf
pop
cli
push
ljmp
lret
xlat
loop
insb
or
rol
fdivrs
scas
pop
or
std
call
add
adc
inc
lahf
mov
imul
pop
pushf
into
pop
push
lock
jbe
fstps
adc
repz
das
xchg
icebp
xor
les
xor
insl
sub
mov
lock
jmp
inc
cmp
fisubs
dec
hlt
mov
dec
lahf
or
stc
push
jecxz
xchg
out
xchg
popf
inc
sub
test
movsl
sbb
sub
andb
lcall
mov
ljmp
push
jbe
xchg
and
add
and
fucom
sub
stos
test
les
nop
lahf
addr16
lahf
push
xchg
pop
stos
lods
adcl
pushl
dec
movsl
sub
je
mov
fldenv
or
add
mov
mov
std
rcr
or
xchg
adc
call
xchg
pop
fcomps
into
ja
mov
mov
addr16
cld
inc
lret
jecxz
stc
dec
sti
out
cmp
scas
lcall
movsl
pushl
aas
in
or
into
loop
repnz
iret
and
inc
pop
inc
insb
mov
dec
scas
loope
dec
lahf
test
adc
add
jae
clc
das
iret
incl
shll
dec
shlb
psubsb
add
mov
push
mov
lret
push
addr16
in
cmp
cmp
push
xor
add
icebp
mov
shlb
loop
fxch
xchg
or
in
add
dec
push
decw
dec
jge
fidivrl
adc
inc
inc
pop
movsb
pop
mov
or
pushl
xchg
cmp
in
inc
aas
and
test
bound
jg
jb
pusha
add
pushl
sahf
test
scas
mov
mov
xlat
cwtl
aaa
aam
push
mov
sahf
xlat
call
push
test
cmp
rclb
adc
jae
lock
mov
call
aad
jbe
pushf
stc
push
out
xchg
pop
xchg
push
fadd
stos
jb
push
pop
inc
dec
or
fs
cli
call
sub
rcrl
js
sti
ret
sti
push
push
inc
mov
in
cmp
push
loopne
adc
mov
jle
pusha
xor
inc
push
add
mov
add
adc
adc
nop
inc
mov
push
push
and
mov
add
and
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
adcb
decl
mul
repnz
dec
leave
loopne
call
popf
dec
ljmp
cmpsl
mov
xchg
in
outsl
jb
adc
gs
mov
idiv
incl
dec
cltd
fs
shlb
jle
mov
mov
cli
inc
fwait
xor
push
push
dec
pop
nop
fcoms
ljmp
rol
imul
loopne
cmp
lcall
and
call
in
sbbb
test
shlb
in
test
ljmp
jle
adc
stos
fsubs
cmpsb
jbe
loope
mov
arpl
jle
outsl
lcall
cmp
inc
imul
lods
jns
call
es
sar
incl
fs
stos
xor
pop
fwait
in
mov
sub
cld
sbb
popf
and
dec
or
push
pop
add
mov
mov
mov
push
mov
lret
lret
fistpll
fnop
mov
loop
adc
in
mov
cmp
sbb
in
sarl
je
adc
in
enter
cmp
pop
in
in
fldcw
cmp
mov
push
dec
and
jge
lret
mov
lods
sbb
xchg
imul
enter
dec
sbb
cmp
loopne
jb
jnp
sbb
fildl
cmp
js
xchg
mov
aas
sbb
jno
or
cwtl
insl
sub
mov
addr16
pop
push
dec
fildll
sub
ret
or
inc
mov
sub
inc
frstor
pop
xor
or
sub
fmul
jnp
mov
mov
add
jmp
fucomi
sbb
xor
sbb
sbb
pop
imul
daa
jge
cmp
leave
sub
xchg
js
mov
sbb
add
pusha
inc
lahf
stc
lock
mov
insl
add
pop
fsubl
or
add
outsb
mov
sti
fucomi
notb
jnp
add
outsb
mov
scas
mov
or
fsubrl
pop
cmp
xor
xor
ja
out
jnp
pop
lea
fdivl
adc
inc
sbb
mov
repz
or
mov
mov
pop
or
outsl
jg
lahf
into
jl
sub
dec
mov
fisttpl
mov
mov
insl
jb
adc
shrb
jnp
xchg
aas
stos
jp
mov
xor
cmp
dec
sub
fisttpl
or
dec
divb
or
stos
jp
cwtl
push
popf
int3
lock
jns
push
pop
sub
divb
das
jp
mov
push
pushf
int3
cmpsl
ret
dec
pop
adc
mov
sbb
insb
fwait
inc
orb
scas
xor
imul
in
insb
aad
cmp
ret
xor
fadd
icebp
xchg
outsb
mov
cmp
cmp
lods
insl
test
push
mov
fisttps
or
and
sbb
and
dec
outsl
call
pusha
jnp
fisttpll
mov
mov
sahf
mov
cmc
imul
das
in
mov
lock
pop
sub
sbb
aaa
sub
or
leave
in
in
mov
gs
iret
cmp
add
outsl
cmc
int
ja
push
fdivl
test
or
int
jge
pop
pop
jo
mov
mov
cmp
dec
dec
gs
sbb
inc
scas
std
mov
sub
jns
jp
cmp
jo
jns
fistpl
sub
sbb
mov
mov
outsb
in
inc
or
fmull
xchg
xrelease
jb
pushf
add
mov
sahf
add
xor
add
xor
mov
jns
sbb
add
cltd
jp
mov
mov
jp
scas
popf
loop
shll
or
mov
mov
xchg
jmp
push
repnz
adc
xor
out
pusha
lea
add
cmp
sbb
mov
fcmovne
shrb
and
mov
sahf
stos
dec
lods
stc
pop
jnp
push
fsubrl
sub
shrb
ret
sbb
sbb
mov
out
ja
push
jp
ret
add
pushf
xchg
popf
inc
sbb
in
ss
lret
loop
or
jo
and
and
rcll
jno
add
mov
push
jo
lock
mov
cmp
outsb
pop
pop
jnp
pop
inc
iret
jmp
or
mov
and
pop
cmp
pop
pop
fdivl
lock
lcall
leave
adc
imul
or
pop
leave
daa
inc
inc
sahf
and
and
or
mov
out
add
das
lds
jno
cmp
cmp
sbbb
sti
dec
adc
xor
sub
pushf
sbb
jb
ret
cmp
adc
mov
arpl
fistpl
jbe
mov
mov
adc
jbe
sub
mov
rorl
mov
mov
sub
xchg
in
orb
jg
popf
mov
ja
jno
push
sbb
cmp
mov
adc
sbbb
and
xchg
fcomps
cmpsb
fucomi
fstps
pop
ficompl
lds
xor
pop
or
cmp
dec
dec
loopne
outsl
shlb
ret
dec
out
cltd
aas
adc
popf
sbb
js
adc
and
jo
pop
int3
fists
sbb
sti
fwait
add
cmp
aaa
lods
inc
jbe
sub
mov
mov
cmp
in
in
stos
pop
pop
gs
cmp
jmp
in
mov
sub
add
cmp
push
jbe
push
jbe
sub
aad
into
je
loop
lahf
xlat
pop
out
inc
xor
dec
movsb
outsl
mov
call
mov
cmp
sub
leave
xchg
popf
cmpsl
fnstenv
inc
test
mov
add
lahf
fldenv
dec
aaa
dec
into
jo
stos
jp
pop
push
sub
mov
das
movsl
punpckhwd
mov
push
frstor
xor
sbb
into
or
rcll
imul
int3
cmc
or
in
sahf
jp
repnz
mov
mov
stos
mov
ja
adc
dec
xor
push
imul
ret
cmp
dec
nop
sbb
xor
add
std
into
shll
pop
or
fistl
inc
iret
and
sbb
add
mov
ror
or
pop
prefetch
or
mov
and
sub
movb
scas
popa
subl
scas
mov
stc
shrb
jo
ljmp
ja
repnz
xor
daa
pop
faddl
popf
push
sbb
fistpl
mov
jb
sbb
frstor
xor
jge
jbe
aad
lds
stc
ja
and
lea
out
dec
btc
cli
add
cld
clc
adc
out
imul
add
loopne
push
push
mov
decl
repz
xor
testl
ljmp
pop
push
jae
call
xor
pusha
les
dec
popa
sti
sub
dec
lock
jae
push
jmp
pop
or
call
pop
shll
insl
cltd
bound
movsb
xchg
mov
mov
jns
pop
stc
insl
addr16
ljmp
movsl
ja
scas
pop
jmp
je
dec
rcrb
mov
mov
pop
mov
push
es
idiv
push
lret
mov
push
pop
push
dec
lods
adc
pmaddwd
pop
or
add
test
sbb
inc
mov
xchg
adc
out
test
jle
mov
call
cmp
repz
orb
test
mov
mov
pop
cli
std
jp
das
push
mov
add
jl
xorl
out
mov
or
sbb
pushl
push
xor
in
push
mov
mov
in
adc
jmp
testb
or
popa
ffreep
hlt
dec
fists
inc
in
mov
jbe
loopne
cmpsb
call
incl
add
scas
loop
mov
and
xchg
jle
js
pop
pop
icebp
or
bound
incl
lret
xlat
inc
sbb
div
xor
mov
push
or
xor
imul
std
lcall
es
iret
jne
xor
mov
sahf
fs
mov
dec
or
decl
lahf
inc
jbe
test
and
popa
std
in
shlb
add
imul
xchg
mov
fcomip
pop
ficoml
mov
push
cmp
inc
popa
bound
dec
addr16
fnstenv
xor
aas
mov
jg
das
leave
xor
cli
cwtl
cs
add
xchg
mov
outsb
outsl
xlat
pop
dec
mov
inc
push
sbb
mov
jge
adc
mov
outsl
sub
sub
lods
fwait
mov
sbb
call
mov
xchg
icebp
and
jo
icebp
inc
and
mov
shrl
fcomip
xchg
pop
jnp
dec
gs
pop
xor
jmp
jge
mov
popf
push
push
scas
loopne
dec
or
mov
jl,pt
dec
test
sbb
dec
mov
and
in
popl
xchg
push
pop
adc
les
lcall
sub
into
lcall
cmpsb
aad
iret
inc
out
out
xchg
xchg
cmp
lea
dec
popf
ljmp
in
mov
cmpsb
mov
mov
mov
add
pushl
leave
mov
enter
shll
xor
scas
out
inc
sbb
mov
pop
cmp
pop
fsubrl
pushl
cmp
add
push
subb
xor
cmp
lods
push
jo
add
mov
cmp
hlt
adc
loope
ret
insl
jmp
loop
inc
xor
mov
mov
inc
mov
mov
std
xchg
mov
leave
dec
xchg
or
fdivrl
or
ljmp
sbb
std
test
jae
push
push
lock
or
or
lret
std
mov
cmp
pushl
addb
sbb
dec
jae
dec
js
fisubl
push
xchg
dec
cltd
aas
leave
or
incl
dec
mov
iret
pushf
sub
cwtl
dec
ret
jge
iret
xchg
aaa
popf
xor
test
ljmp
and
and
adc
mov
test
in
pop
mov
jb
fcomip
sbb
ljmp
repnz
push
dec
out
aas
sahf
mov
jg
dec
leave
sbb
popf
cmpsl
push
sbb
in
adc
adc
out
dec
dec
jp
jl
incl
mov
lret
out
pop
js
insb
inc
inc
dec
cld
inc
int3
cmp
sub
in
pushf
lods
filds
hlt
inc
sub
mov
push
xor
lret
repz
adc
fcoms
insl
cmp
fisttps
pusha
push
imul
inc
fldl2t
push
sub
lcall
lea
call
mov
rorb
jle
fstl
xchg
pop
sub
inc
mov
lcall
jmp
mov
jmp
es
pop
insl
sahf
push
add
ret
int3
into
or
mov
xor
xor
ljmp
push
movb
sbb
xor
stos
leave
and
or
aaa
fistpll
pushl
popf
icebp
mov
xor
xor
pop
fisubrs
or
and
cs
outsl
cli
pushl
mov
lods
fsubrl
lock
pop
js
adc
clc
pop
lcall
inc
or
jno
xlat
mov
imul
add
xchg
call
adc
repnz
enter
xor
or
sbb
aaa
imul
jmp
clc
lcall
leave
mov
and
pop
iret
push
mov
or
subb
scas
sub
mov
test
push
add
sub
mov
or
jmp
cltd
cmp
mov
fbld
mov
push
fistps
jo
stos
jns
jg
ficomps
push
fwait
jle
mov
addb
sbb
subps
sti
jp
fbstp
sbb
fwait
add
sti
mov
mov
ljmp
jne
fisubrl
ss
mov
ficomps
adcb
pop
test
call
shll
insl
cmp
mov
pop
in
xor
xor
xchg
inc
push
lcall
adc
sahf
xor
cmp
sub
mov
pop
add
dec
call
cmp
int
pop
cmp
mov
sbb
mov
rcrl
sar
fildll
xor
mov
cmp
mov
xor
xchg
cmp
cs
add
pop
cld
in
psubusw
rcr
lret
es
pop
dec
cmp
out
fisttps
cmp
inc
cmpl
rcrb
push
rorl
pop
inc
into
xor
and
and
insb
cmp
mov
push
dec
push
push
pop
pop
insb
decb
incb
cmp
cs
mov
cmp
ds
repz
cmp
mov
inc
xor
pop
mov
pop
ss
out
sbb
shr
mov
scas
mov
cmp
sub
mov
incl
mov
cs
adc
fs
mov
das
rcrl
pop
bound
outsb
es
daa
mov
jae
mov
xor
je
mov
push
cmp
and
sbb
pop
insb
adc
pop
adc
aas
std
movsl
mov
roll
movsl
icebp
aas
push
fnsave
xor
ds
mov
jnp
mov
addr16
outsl
xchg
jbe
push
xor
mov
push
pop
xor
inc
rclb
mov
xchg
and
ljmp
aas
mov
mov
xchg
cmp
push
jg
cmpsl
movsl
or
lcall
enter
adc
adcl
aaa
mov
cld
repz
push
mov
adc
shrb
ljmp
clc
in
mov
xchg
es
addb
mov
movsl
aas
mov
mov
frstor
mov
fbld
pop
pop
nop
loop
notl
orb
pop
fcoml
xchg
mov
fbstp
sub
sub
pop
pushf
inc
push
sbb
out
fistps
jmp
sarb
fnstcw
push
pop
mov
ffreep
fstpt
test
jge
fisttpl
aam
or
fisttpl
gs
incl
mov
sub
ljmp
gs
push
int
xorl
mov
pop
mov
sti
lahf
cmpsl
inc
mov
es
hlt
mov
xchg
push
or
cmp
cwtl
mov
cmpsb
dec
add
adc
mov
push
orl
fsubl
imul
fbld
pop
cs
sub
ud2
push
mov
mov
push
stos
jbe
aas
push
push
test
test
xchg
fstpl
shr
lods
addr16
movsb
adc
rol
dec
mov
es
sub
mov
jnp
or
dec
rcr
ja
popf
lahf
xlat
sbb
adc
sar
cmp
pop
in
scas
xlat
push
ds
xchg
mov
xchg
popw
sbb
fdivr
sub
aad
mov
pop
fcompl
mov
imul
fidivrl
aad
jg
adc
ljmp
mov
cld
pop
fimuls
pop
push
daa
jb
or
push
sti
lcall
scas
test
and
lcall
filds
mov
fcomip
and
stc
xchg
stos
sbb
sbb
mov
jecxz
or
xchg
push
mov
mov
scas
adc
js
push
in
pop
mov
setnp
in
lcall
and
push
xchg
mov
sbb
dec
sub
cmp
mov
pop
lock
pop
cmp
mov
xlat
mov
shrl
outsb
lcall
xchg
push
or
mov
lcall
lock
inc
push
adc
push
sahf
rcll
dec
push
xlat
jle
jmp
sbb
mov
insl
out
cs
inc
mov
filds
stos
jg
scas
aas
outsb
mov
mov
mov
rclb
inc
ljmp
inc
rcll
das
dec
fists
mov
or
adc
movsl
cwtl
xchg
cmp
pusha
push
ret
ss
inc
fstpl
rorl
xchg
push
dec
roll
pop
cmc
mov
push
shlb
cmpsb
popf
sbb
xor
decl
mov
adc
rcrb
inc
ds
push
sar
pop
jbe
filds
shll
in
xorb
outsl
cmp
lock
lea
rolb
sub
mov
data16
pop
sub
mov
and
incl
push
inc
fsubrl
cmp
fnstenv
in
pop
sbb
addr16
xlat
sbb
mov
in
call
mov
or
add
loopne
in
mov
in
scas
movsl
out
call
out
jl
call
and
or
aam
jno
out
mov
in
pop
out
xor
adc
dec
stos
push
icebp
dec
mov
xor
repz
push
mov
or
rorl
call
aaa
mov
mov
sbb
out
sub
jg
pop
movb
lock
popf
mov
push
sbb
push
push
mov
call
sbb
mov
jb
xchg
cltd
lcall
call
sbb
ret
bound
inc
mov
or
xor
insl
das
push
add
sbb
mov
decl
pop
push
and
cmpsl
cmp
sbb
outsb
push
push
addr16
mov
push
jo
outsb
jbe
jno
jb
inc
jo
bound
jne
dec
inc
xor
clc
jg
ljmp
xor
inc
dec
xor
inc
xor
dec
insb
dec
je
xor
jp
mov
out
outsb
push
dec
dec
dec
cmp
fs
outsl
cmpb
data16
aaa
push
cmp
lcall
inc
popa
jb
pop
gs
dec
push
ss
inc
insb
pop
addr16
cmp
push
cmp
jns
push
jg
dec
gs
and
dec
xor
jp
into
inc
xor
cmp
outsl
push
ljmp
xor
xor
jns
outsl
jp
dec
push
push
push
push
arpl
push
push
dec
ja
dec
dec
sarl
push
dec
inc
js
xchg
inc
jp
bound
inc
addr16
or
push
jne
cmp
jns
mov
je
pop
sar
call
insb
inc
jo
dec
ja
addr16
je
dec
xor
inc
push
outsl
inc
aaa
pop
fmuls
insb
inc
push
popa
inc
arpl
dec
jae
dec
mov
decl
pushl
dec
inc
xor
dec
xor
xor
dec
jns
dec
dec
xor
dec
inc
jg
incl
jno
js
push
outsl
dec
jne
inc
jb
dec
push
push
jns
dec
jb
jo
jmp
insb
push
inc
push
jp
jne
dec
dec
inc
push
insb
outsl
xor
inc
imul
incl
inc
aaa
outsl
push
dec
jp
fs
dec
bound
jns
dec
push
jne
xor
push
je
cmpb
dec
bound
dec
xor
inc
push
js
mov
pop
add
push
add
sub
test
pop
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
and
mov
xor
scas
cmp
jnp
sub
dec
pop
outsb
repz
repz
push
iret
loop
pop
mov
cmp
mov
es
jnp
negl
cli
jbe
out
out
add
cmp
jns
out
jb
mov
mov
add
repz
push
sbb
dec
pop
jb
iret
repz
xchg
mov
iret
cmp
repz
add
add
iret
repz
js
pushf
cmpsb
repz
repz
repnz
out
sahf
out
push
and
dec
push
sahf
out
sahf
jo
xchg
out
into
fsub
out
cli
repz
repz
pop
and
xor
iret
repz
dec
push
bound
cmp
repz
cmpsb
ror
jns
iret
repz
sbb
and
out
sahf
out
push
pusha
push
sahf
out
sahf
jle
xchg
mov
out
fsubrp
testb
or
cmp
repz
cmp
repz
push
orb
int3
out
ja
push
and
jns
out
dec
push
pop
js
out
sahf
sbbb
out
in
or
adc
repz
repz
je
repz
sbbb
out
cmp
cli
add
adc
sahf
out
ss
dec
pop
jb
jns
out
xchg
mov
jns
rcr
in
sbb
cmp
cmp
pop
repz
repz
pushf
cmpsb
rcrb
loopne
or
jns
out
and
inc
pop
out
sahf
out
nop
pushf
mov
iret
sarl
hlt
add
or
and
repz
cmp
pop
repz
repz
lcall
lret
clc
adc
sahf
out
sahf
sbb
xor
inc
pop
jns
out
js
lods
mov
out
ficoml
adc
adc
cmp
pop
inc
push
push
push
iret
repz
pop
jbe
lcall
loopne
add
push
sub
out
inc
dec
pop
push
out
mov
jl
out
or
and
dec
cmp
repz
je
nop
mov
lods
mov
out
lcall
ss
out
sahf
push
push
xchg
jns
into
fdiv
add
repz
rcll
and
dec
pop
iret
repz
jo
mov
repz
lock
or
sahf
out
push
sub
cmp
out
sahf
out
orb
mov
hlt
cmp
repz
adc
sub
repz
repz
jb
cmpsb
shlb
sbb
and
inc
pop
jb
xchg
out
cwtl
mov
jge
out
in
decb
sbb
cmp
sahf
out
dec
pop
bound
jns
out
mov
sahf
shr
adc
sub
repz
pusha
jb
xchg
repz
repz
out
ds
loop
push
sbb
sub
inc
push
push
mov
out
cwtl
stos
into
call
repnz
push
cmp
repz
push
pop
push
iret
repz
ret
clc
jns
cmpsl
stc
adc
out
sahf
out
jle
stos
mov
repz
fdiv
or
push
xor
repz
dec
pop
js
repz
repz
cmpsb
ror
out
out
out
ds
pop
push
push
sahf
out
sahf
xor
data16
jl
out
movsb
mov
repz
rorl
and
xor
iret
repz
pop
bound
mov
sarb
mov
test
xchg
adc
mov
add
jle
pop
add
inc
pop
mov
mov
xchg
cmp
decl
add
sti
cmpsb
or
call
and
jmp
outsl
jge
mov
and
mov
pop
loop
mov
sbb
dec
push
add
xchg
inc
mov
jmp
mov
call
ret
rcr
inc
mov
inc
pop
and
push
cmc
call
lret
adc
ds
mov
out
xchg
mov
rcl
popa
cmp
pushf
fwait
inc
or
call
repz
jg
out
sbb
mov
repnz
adc
lcall
sub
mov
outsb
mov
shll
dec
imul
je
dec
sub
call
and
mov
xchg
sub
cmp
mov
in
repnz
imul
in
mov
test
inc
leave
shlb
or
push
sbb
pop
jg
adc
mov
lret
pushl
and
dec
add
jno
xor
fidivl
stc
jbe
rcrb
dec
cmp
or
out
adc
jb
sub
testl
jmp
jne
sbb
cmpsb
push
xor
jp
cmp
sbb
xchg
les
pushl
out
jo
aam
pop
add
xchg
je
jae
subb
push
leave
xor
sbb
decl
in
pop
mov
lods
add
sahf
jnp
shr
jo
aas
mov
shll
mov
cld
cmp
pop
fwait
xchg
push
icebp
test
add
fidivl
lret
dec
mov
icebp
fs
aaa
aas
jle
xchg
adc
lock
incl
test
subl
push
scas
mull
scas
add
daa
dec
and
pop
icebp
pushl
cmpsl
scas
test
adc
push
push
xor
xlat
xchg
sbb
xor
scas
mov
call
xor
push
dec
sub
int
lods
lcall
inc
lcall
xchg
fsts
adc
push
cmp
jecxz
add
add
jle
jmp
mov
inc
push
dec
mov
daa
dec
pop
push
lds
lcall
sub
call
and
rcrl
cli
dec
das
dec
scas
mov
mov
jbe
sbb
jl
mov
lcall
mov
cmp
xor
xor
sbb
enter
inc
xor
pushl
test
out
std
mov
mov
sub
gs
scas
sub
lcall
pop
rep
sbb
or
push
daa
jecxz
cmc
or
incl
adc
call
adc
lock
frstor
adc
bnd
mov
mov
adc
dec
jae
pop
inc
inc
or
call
lcall
jle
scas
fwait
adc
or
dec
jg
xchg
sbb
sbb
jle
lea
pop
inc
js
int3
push
pop
andb
or
and
iret
jp
mov
inc
pop
or
lcall
lcall
xor
xchg
pop
mov
pop
push
xchg
loope
cmp
jge
jmp
inc
pop
add
hlt
fcomip
adc
xchg
cli
imul
lds
fsubl
or
mov
imul
call
push
aas
clc
cmp
outsl
push
or
arpl
aam
xchg
pop
mov
incl
mov
lds
cmpsl
sbb
jmp
dec
sub
cmc
ja
dec
lret
xorb
mov
test
sarl
test
fwait
sbbl
std
call
sub
mov
ret
and
push
rcr
mov
xchg
xchg
scas
ljmp
cmpsb
push
pop
lret
pusha
andl
mov
adc
js
pushl
inc
ja
rep
aad
jp
cmp
out
negl
push
int3
fistpll
lcall
dec
orb
xchg
jns
iret
mov
je
call
outsb
out
scas
push
dec
or
or
and
subb
out
lret
ret
dec
fwait
or
int3
or
xchg
std
pop
xor
imul
stc
in
sbb
jmp
mov
mov
fldcw
sub
lcall
ret
fsubs
mov
xor
addl
cwtl
idiv
jl
aad
test
inc
insb
inc
mov
mov
inc
mov
lea
mov
std
in
jmp
call
repnz
idivb
test
in
inc
mov
xchg
mov
das
adc
fs
push
xchg
aaa
test
push
test
sub
lcall
mov
ss
negb
call
dec
jecxz
lock
insl
aad
das
pusha
ljmp
dec
mov
and
shl
lret
mov
jmp
jle
sub
out
fxam
call
add
pop
mov
xchg
lret
xchg
jne
mov
addr16
decl
cmc
xor
mov
cli
jns
mov
add
movsb
mov
xchg
dec
inc
jge
loopne
out
clc
jo
sti
shr
out
sti
aad
mov
jmp
fcompl
and
pushl
scas
pop
leave
push
in
pushf
stos
mov
daa
and
daa
add
cwtl
mov
call
addr16
in
cli
jbe
mov
adc
jns
loope
cmp
cmp
add
scas
scas
cmovp
pushl
push
lahf
stc
xor
fdivs
or
push
aad
pusha
sub
mov
aam
stos
jbe
pop
cmc
cmpl
sub
orb
inc
cltd
call
inc
push
clc
sbb
push
xorl
in
inc
idiv
shlb
cs
popf
stos
inc
inc
mov
ffree
mov
test
out
ficomps
mov
repnz
push
sub
cmp
repnz
ss
xor
jg
call
ret
movsl
mov
ds
xchg
popa
icebp
out
in
test
dec
jmp
shl
and
cmc
mov
jg
xchg
lea
data16
adc
add
imul
pop
decl
lea
pop
lea
lock
push
jg
icebp
jnp
in
lods
std
cmc
imul
or
push
inc
arpl
int
fisubs
shll
jl
dec
mov
ljmp
lahf
aaa
pop
insl
sub
cmp
call
addb
rorl
mov
jmp
jle
xor
xor
lods
adc
repz
xchg
cmp
fs
shlb
xor
aad
jmp
fwait
dec
xor
outsl
nop
xlat
sub
cmp
jg
jg
pop
mov
fdiv
adc
pusha
mov
addr16
nop
sbb
and
mov
and
sub
adc
xchg
sahf
dec
out
ja
lahf
push
xchg
test
dec
jge
ret
xor
mov
add
cmc
xchg
sbb
pushf
ret
ljmp
cmp
sbb
les
mov
ficoms
sti
in
out
lock
ljmp
ss
mov
jno
push
mov
divl
jecxz
jmp
lcall
and
pushf
sarb
push
leave
push
insl
movsl
sub
outsl
mov
imul
push
pop
push
push
mov
mov
jns
inc
jg
cmp
lods
mov
testl
jmp
adc
mov
jl
mov
insb
pop
jbe
jg
nop
jbe
das
pop
push
xor
pushl
jmp
ss
aaa
add
push
push
rolb
push
sbb
jle
cmp
cs
fstps
fdivrl
dec
cmp
sub
dec
pop
and
jno
loope
ss
xchg
aas
pop
cmpsb
idiv
ljmp
jo
xchg
cmp
rcrb
add
xchg
mov
cmp
fdivr
ljmp
lods
sub
sub
fisttps
adc
mov
pusha
into
dec
loop
jecxz
aad
lock
incl
add
out
fcmovnb
push
adc
pop
pop
sub
xchg
adc
mov
sbb
ja
jecxz
js
dec
lcall
fdivl
lret
ret
or
or
es
rep
lcall
fldcw
mov
cmp
push
mov
ss
push
push
xchg
popa
lods
inc
and
call
std
shrb
cmp
xchg
dec
xchg
dec
adc
pop
hlt
decl
inc
or
and
inc
or
push
out
lock
pushl
mov
paddusw
daa
push
mov
add
pop
ljmp
inc
out
jb
cltd
pop
nop
cmpb
loopne
testb
orl
sub
repnz
inc
clc
addb
adc
or
push
cwtl
daa
cmp
jmp
test
and
cs
std
aas
out
fadds
fstps
call
popa
cmp
adc
jge
add
pusha
jge
test
aam
sar
inc
addr16
add
imull
cmp
loope
fwait
imul
jae
push
push
jne
nop
stc
mov
push
sub
push
xor
test
stos
jo
les
popl
or
pop
adc
inc
cmpsb
loop
cmp
sti
popa
imul
test
loopne
ds
call
mov
leave
pusha
movsb
pop
sbb
and
or
fsub
ljmp
adc
clc
arpl
inc
mov
pop
loopne
dec
outsl
mov
pop
popl
mov
sahf
pop
pop
push
nop
pop
sar
jle
jle
xchg
push
in
fiadds
adc
nop
xor
cli
fbstp
lret
outsl
or
dec
popf
push
call
js
pop
sub
notb
ret
dec
mov
fwait
cwtl
in
scas
scas
inc
inc
leave
jg
ss
call
xor
test
push
scas
cwtl
push
jnp
xchg
mov
or
subl
inc
fdivr
dec
sub
test
sub
mov
in
pop
mov
and
sarb
pusha
xor
jmp
in
dec
inc
aaa
outsb
adc
sbb
iret
sbb
int
push
aad
mov
out
mov
jmp
shlb
pop
iret
add
call
test
out
out
jecxz
jnp
mov
push
mov
mov
dec
sub
adc
hlt
inc
push
mov
add
rclb
pushw
inc
aas
inc
fcomip
jmp
push
std
mov
call
sbbb
scas
fldt
imul
adc
cmp
and
and
lods
push
aaa
pop
xlat
gs
dec
lods
lcall
mov
jmp
push
dec
adc
dec
mov
test
call
lds
push
leave
pop
pop
push
call
pop
fildll
add
mov
aas
pop
popa
les
pop
movsb
aas
int
cld
push
mov
incl
sti
dec
jecxz
xor
add
cmp
sub
jne
add
movsb
enter
std
incl
shl
jo
mov
cmp
sbb
cmc
cmpsl
mov
and
pushl
in
mov
push
push
pmulhuw
in
lods
mov
inc
aam
inc
jmp
mov
pop
push
leave
fsubrs
mov
adc
xchg
outsb
popa
cltd
mov
mov
jmp
clc
test
pop
hlt
sub
clc
mov
sbb
test
sbb
scas
cmp
call
jbe
jnp
xchg
cmp
pushf
shll
mov
cmpsb
xlat
push
loopne
decl
mov
mov
es
xchg
mov
lret
fistps
xchg
lods
in
cmp
push
jno
call
in
sarb
es
pop
mov
and
gs
mov
sti
mov
mov
xchg
sub
or
xor
out
lret
enter
rolb
in
lock
test
xor
sar
mov
mov
lods
and
add
push
lret
ja
sti
aad
mov
inc
fstpt
inc
dec
lods
popa
inc
outsl
testb
int3
add
add
fcomip
clc
hlt
std
bound
cmp
mov
imul
sub
into
in
jg
pop
js
aam
int
int
xchg
or
test
fs
mov
mov
fists
and
mov
mul
test
dec
mov
bound
mov
mov
mov
aas
ret
fwait
dec
adc
inc
fwait
stos
mov
les
cmpl
insb
call
and
std
mov
pop
les
fnstenv
pop
test
mov
mov
dec
incl
fsubl
in
subl
fisubrs
or
cli
xor
lret
lds
mov
je
les
or
insb
sub
mov
jge
clc
dec
push
test
mov
test
lcall
cmp
fildll
xchg
adc
push
pop
push
push
and
mov
jne
sar
mov
popf
jecxz
enter
aad
lods
jno
dec
call
xchg
mov
inc
add
fcomip
inc
rclb
add
and
cmp
call
incl
pop
cwtl
push
xchg
mov
mov
pop
xor
push
inc
pxor
mov
decl
in
mov
sub
cmp
mov
xor
call
and
dec
insb
jecxz
or
cmc
or
inc
lea
pop
test
shlb
cli
out
jno
aam
mov
xor
in
stos
lds
mov
jo,pt
jecxz
ljmp
mov
ljmp
jge
daa
pop
add
imul
pushl
pop
in
adc
sti
mov
xchg
popf
mov
je
mov
cmp
xchg
jmp
and
fwait
outsl
cmp
outsl
hlt
add
cmp
push
cmp
mov
pop
xchg
addr16
and
push
cmp
sbb
cmp
popa
mov
call
pop
mov
push
jmp
adc
pop
ret
mov
pop
push
jno
jns
jne
test
lcall
dec
sub
or
sub
lods
push
sbb
push
adc
pop
mov
lcall
mov
out
lcall
arpl
sub
mov
push
mov
call
jne
mov
jmp
cmp
xor
xor
test
lcall
xchg
dec
jecxz
push
popf
pop
mov
movsl
jecxz
mov
pop
jae
add
lahf
mov
push
int3
xor
xor
rcl
cmp
in
jns
rcr
rcr
incl
add
push
jo
xchg
mov
pushf
pop
jbe
mov
test
daa
sbb
fadds
xlat
fmuls
xchg
scas
nop
push
rcrl
shlb
adc
cld
ljmp
out
repz
in
adc
in
lret
es
pop
sub
adc
xchg
inc
jp
addr16
in
jg
or
fnsave
xchg
popf
loopne
mov
jns
xchg
cmp
dec
cmc
aas
mov
pop
sub
lcall
xchg
loop
adc
xlat
insb
mov
jl
scas
jae
imul
dec
popa
arpl
int3
sbb
xchg
fldenv
jbe
stos
insb
mov
cmp
mov
mov
lea
imul
popf
stos
jl
xchg
jns
call
adc
cmp
cld
das
mov
cmp
mov
dec
or
pushl
pop
jne
pop
push
add
mov
jb
shll
dec
jnp
sub
call
js
xor
fs
push
stc
cltd
mov
cmpsb
test
lahf
push
pop
fdivrp
mov
fistpll
sbb
push
pop
neg
xor
inc
repz
pusha
dec
insl
sub
mov
mov
stos
imul
incl
inc
mov
push
cld
push
xlat
or
lods
jns
mov
cmp
call
add
data16
or
ds
rolb
movsb
rolb
ljmp
pop
pop
xchg
lods
movsb
popa
or
dec
mov
jg
dec
pop
inc
aas
dec
inc
sub
xor
ljmp
push
call
les
mov
pop
jmp
fnstenv
cwtl
notl
dec
outsb
mov
jmp
dec
roll
rorb
ficoml
mov
out
jne
sbb
or
mov
rcrl
xchg
jg
push
xor
std
nop
mov
data16
jg
mov
dec
cli
sbbb
push
cmp
into
scas
add
mov
pop
inc
data16
inc
dec
dec
out
jno
incl
dec
enter
mov
xchg
push
mov
add
and
push
cmp
or
pushl
xor
cwtl
add
jne
pop
aaa
jns
adc
push
mov
ret
decl
loopne
cmp
pop
sbb
add
outsb
push
imul
imul
or
xchg
loopne
fs
fdivr
adc
aam
or
jno
lcall
ss
mov
fwait
icebp
repz
add
cmp
lods
sbb
cmpsl
decl
ficomps
in
jns,pn
cmpsl
sbb
sub
mov
daa
or
mov
test
insl
fcmovnbe
or
cltd
arpl
jnp
xor
push
or
mov
scas
fidivrl
decl
mov
adc
cmc
or
cmp
mov
cld
sbb
sbb
jmp
inc
int3
dec
cmp
cli
inc
popf
out
sahf
clc
cltd
push
das
sub
add
fcoml
xor
pushl
or
imulb
sbb
cmp
ror
push
cmp
aaa
out
push
lahf
repnz
stos
incl
flds
xor
lret
cmc
fldenv
out
into
push
xchg
xorb
sub
mov
jecxz
add
shll
lret
jns
cmp
rcrb
pop
sbb
dec
or
cld
lods
std
xchg
sbb
mov
aas
das
push
ficompl
mov
dec
ljmp
arpl
jg
mov
into
xor
dec
popa
cmp
cltd
out
call
subl
in
jnp
pop
mov
push
mov
nop
push
jns
mov
loop
fisttpl
adc
mov
test
out
test
repz
sbb
mov
lcall
mov
mov
push
aam
sub
or
mov
cmp
cs
ljmp
or
xchg
stos
pop
push
aas
mov
mov
xlat
dec
sbb
rcrb
xor
arpl
jg
fdivs
imul
andb
ficoml
enter
clc
jnp
out
fs
cmp
ljmp
rclb
ret
xlat
mulb
jnp
jo
sarb
test
lods
jmp
inc
jmp
sub
insl
cld
sub
jg
loope
xor
ljmp
lcall
fs
testb
mov
mov
jg
dec
test
pushf
loopne
lock
cli
mov
movb
mov
push
mov
jmp
mov
lea
push
fsin
xchg
scas
lret
push
out
cmp
fistpll
adc
add
dec
fstpl
pop
leave
sarb
es
xor
fs
popl
mov
and
dec
out
leave
mov
hlt
mov
sub
mov
fucomip
inc
test
out
dec
decl
es
jns
sbb
xchg
sbb
jmp
sub
jle
test
dec
cld
dec
bound
stos
repnz
adc
xor
adc
fisttps
mov
ja
lret
mov
test
and
jbe
and
clc
pop
cli
fadds
inc
sub
test
fistpl
inc
mov
adcb
and
pushl
xchg
mov
or
insb
mov
sahf
mov
pushl
fwait
pop
push
add
rcl
mov
pushf
in
push
leave
lods
mov
sbb
cmpsb
jmp
out
in
aad
add
inc
scas
inc
enter
add
ljmp
outsb
dec
addr16
sti
cmc
mov
out
mov
pop
mov
or
aam
sti
dec
xchg
xchg
cli
in
incl
push
xlat
popf
xlat
pop
push
outsb
sbb
pusha
add
movl
pushl
cmpsb
call
rclb
pop
shrb
mov
insl
cmp
mov
jecxz
ljmp
test
sub
and
test
cmp
cmpsl
sbb
mov
inc
clc
pop
jge
or
sub
mov
ja
sti
cmpsl
or
scas
lret
lods
jp
cli
jmp
add
sbb
cltd
repz
mov
sti
mov
ja
stos
dec
xchg
and
ljmp
js
push
dec
and
int
out
or
mov
pushl
cmpsb
stos
sub
addr16
cld
pop
shl
jg
ret
mov
das
add
incl
sbb
daa
mov
in
mov
push
imul
std
push
or
xor
mov
dec
add
scas
jmp
int3
jb
and
sbb
jmp
mov
pushl
fcom
sub
push
adc
jmp
mov
add
lcall
mov
pop
xchg
xor
add
sti
jo
cmp
sahf
push
das
sbb
movsl
mov
lcall
arpl
jmp
xor
ds
or
jmp
icebp
clc
fsubr
push
mov
adc
push
xor
pop
test
in
rep
push
xor
adc
or
adc
pushl
adc
jae
pop
push
inc
pop
in
mov
out
jae
insb
add
sub
rcrl
sub
pop
adc
sti
neg
mov
nop
and
test
lock
decl
mov
cmpsb
das
mov
add
mov
negl
lcall
data16
pop
xor
mov
mov
sub
pop
movsl
jge
sub
cmpsb
lods
fs
fiaddl
or
vmovapd
sbb
xor
aas
and
adc
and
jg
lods
out
pop
mov
mov
pcmpgtb
sbb
xchg
movsb
fdivl
pushl
mov
mov
mov
in
mov
dec
mov
push
mov
dec
out
fists
or
xor
lock
inc
xlat
push
sbb
ficomps
mov
xchg
ret
rolb
mov
jg
cwtl
inc
mov
mov
and
jg
lcall
dec
dec
inc
loope
cmpsl
mov
mov
out
neg
add
ljmp
mov
cli
repz
testl
mov
arpl
ljmp
sar
pop
repz
and
leave
fsubp
jp
and
lock
mov
jg
aam
mov
int3
xchg
addr16
insb
enter
stos
mov
incl
cmp
sbb
pushf
mov
testl
div
ja
jmp
inc
add
jp
push
push
and
rcrb
je
fadds
pushl
mov
sbb
gs
cmp
or
clc
mov
jge
stos
orl
pop
mov
in
mov
jb
fs
pushf
mov
loope
xchg
jl
sahf
scas
leave
fcmovne
xor
loopne
pushl
sbb
mov
ret
cmpsb
sbb
fwait
or
push
sub
xor
call
std
add
inc
fadd
xchg
sub
mov
adc
jg
decl
in
or
inc
pop
mov
cmp
insl
cmpsb
mov
mov
cmp
idiv
pushl
inc
cld
aas
or
inc
xor
int3
repz
adc
mov
mov
dec
cmpsl
pop
popl
not
inc
jge
add
push
nop
cmp
mov
imul
add
incl
inc
jmp
es
cmp
mov
inc
ret
popf
dec
xor
call
xlat
xor
in
mov
jbe
inc
sub
jbe
add
call
pushf
xchg
jae
or
sub
sbb
pop
add
pop
cmp
xor
jmp
and
push
cld
push
and
outsb
xor
add
mov
lret
mulb
sbb
mov
xorl
into
rorb
sub
enter
lahf
popf
ljmp
int
imul
and
adc
movsb
sbb
jle
ljmp
in
or
and
push
jg
inc
rolb
or
call
ret
mov
addr16
or
inc
aas
cmp
jp
mov
mov
jge
xchg
aas
outsb
jmp
mov
rcrb
jnp
pusha
clc
in
ss
and
mov
out
hlt
ficompl
dec
xlat
xchg
mov
mov
cltd
int3
push
movsl
incb
push
insb
sub
dec
mov
inc
cmp
push
xchg
push
xor
or
adc
cmp
mov
clc
sbb
mov
insl
ds
ficoml
sbb
jne
dec
mov
mov
jmp
movsl
icebp
xor
or
and
xor
enter
sbb
or
in
lea
nop
xor
sbb
test
mov
xchg
jnp
mov
aaa
es
or
ljmp
push
aad
flds
loop
pop
dec
xor
pop
loope
add
pop
std
inc
push
mov
cmp
dec
or
inc
sbb
cmpb
scas
fwait
test
push
mov
pushl
sub
popa
jmp
loopne
jg
pop
mov
xor
shrl
mov
mov
aad
push
cld
ljmp
xchg
pop
sbb
lahf
icebp
xlat
divl
pop
mov
push
pop
je
pop
fdivrp
dec
mov
xlat
negb
xlat
js
jmp
xchg
mov
inc
mov
push
add
insl
and
jne
pop
cmp
jge
rcr
andl
je
jle
push
jmp
pop
jge
fnstsw
cli
jg
imul
sbb
push
aas
cmp
add
lcall
in
pushf
mov
not
sbb
stos
pop
lcall
imul
daa
data16
roll
ja
incl
inc
xchg
int3
dec
cmp
insl
je
add
fmull
pop
out
pusha
cmpl
mov
xchg
jge
scas
xchg
cmp
fisubrs
mov
fistpll
mov
sti
add
mov
sbb
add
test
or
and
ds
pop
xchg
mov
frstor
call
pusha
stc
inc
cld
test
int
daa
mov
and
in
mov
cs
push
dec
stc
mov
int3
inc
cmp
lea
fcmovne
mov
inc
sub
jno
cld
mov
out
mov
fdivs
or
into
dec
jmp
je
or
pushl
cwtl
je
jecxz
lahf
pushf
jno
dec
push
scas
cmp
shll
jmp
imul
inc
out
jmp
xchg
and
or
mov
or
sub
data16
fistpll
es
lcall
cmp
ficomps
sahf
adcb
inc
xor
ljmp
mov
pop
scas
cs
xchg
sbb
insb
scas
adcl
addr16
and
cmpsb
sub
enter
xor
xor
mov
decl
mov
ss
pop
dec
xor
jecxz
jp
sahf
insb
push
mov
cmp
stc
bound
push
aaa
jge
call
jge
stos
sub
outsb
adc
cmp
xor
or
decl
jmp
cmc
mov
sbb
dec
pushf
push
or
jns
xchg
rcrb
jle
xchg
pushl
push
lea
add
hlt
jp
sbb
mov
mov
mov
jmp
cli
sub
ljmp
sbb
cs
daa
aaa
insl
mov
or
lods
mov
cltd
das
insb
or
call
in
push
mov
dec
and
test
lcall
imul
testl
xor
into
mov
ret
call
fsts
out
pop
and
add
add
js
jo
sbb
out
or
inc
jmp
inc
pop
fisubl
push
push
js
imul
dec
push
loop
xchg
jb
stos
ljmp
dec
addb
adc
sahf
inc
clc
mov
xchg
xchg
mov
lcall
stos
leave
inc
movsl
xchg
data16
insb
cmp
push
mov
and
mov
in
rol
mov
pushl
into
pop
loop
mov
sbb
push
lods
loope
or
cmp
jmp
adc
enter
inc
xor
xchg
pusha
mov
std
decl
lods
mov
jno
pop
fisubrs
and
adc
movsl
das
testb
popa
pushl
scas
mov
mov
sub
sub
push
cmp
ljmp
ja
dec
or
decl
in
ficomps
ljmp
sbb
mov
fidivl
cmp
incl
loopne
in
or
add
cmp
fiaddl
rcl
mov
jne
and
sub
leave
decl
pop
mov
jns
sahf
cmp
jg
mov
shrl
pop
xchg
nop
jl
incl
sahf
fxch
push
loope
jp
cwtl
inc
push
mov
xor
loope
or
push
jae
incl
ret
pop
inc
jae
mov
ffreep
psrad
pop
xchg
mov
shrl
call
dec
repz
push
cmp
enter
xchg
sbb
adc
frstor
add
and
pushf
loope
decl
mov
js
aad
cwtl
frstor
xor
data16
lret
push
arpl
cmpsb
outsl
das
dec
fstpl
cmp
pushl
adc
pop
jne
and
xor
call
fs
shrb
repz
lahf
pop
mov
cmc
incl
test
mov
mov
cmp
in
jbe
cmp
push
dec
dec
aas
out
lock
inc
scas
jle
mov
jmp
adc
inc
push
pop
add
xchg
xor
popf
rorb
enter
lcall
lods
inc
xchg
xchg
xor
in
pop
pushl
cmp
addb
inc
jns
mov
daa
out
sbb
aaa
loop
inc
cli
iret
fld
popf
and
adc
dec
cmp
call
out
mov
pop
mov
xor
cs
mov
xchg
movsl
fdivl
cld
push
hlt
lret
cld
adc
xchg
push
cld
lahf
bound
mov
sahf
call
dec
cmpsl
lods
addr16
xor
test
mov
cli
mov
adc
cmpsb
xor
fbld
incl
mov
and
mov
xchg
mov
popf
sub
adc
add
jmp
fimuls
cmp
lock
js
and
inc
jl
lea
or
out
repnz
into
sub
aam
sbb
cli
lcall
repnz
and
out
xchg
adc
cmp
popw
xchg
lock
sub
sub
mov
mov
dec
xor
fcmovu
fmul
dec
cmp
mov
or
push
or
mov
ljmp
jmp
inc
pop
push
orb
scas
push
or
xchg
dec
jp
ljmp
std
cs
cmp
out
lods
je
mov
pop
adc
sbb
decl
mov
sar
lret
mov
push
pop
lret
jns
adc
ficomps
test
fmul
leave
aam
decl
lods
add
push
repnz
or
lcall
mov
mov
pop
jmp
decl
je
addb
ret
test
xchg
push
fs
mov
out
aad
adc
pop
cmp
pop
ret
jmp
repnz
loope
mov
sub
ss
fcomip
push
rorb
cwtl
xor
mov
hlt
sub
inc
dec
inc
mov
sbb
decl
fcompl
mov
popf
inc
cmpsl
mov
sti
mov
and
mov
decl
or
shrl
sarl
adc
jg
negl
cwtl
icebp
out
dec
popa
jbe
call
inc
lods
or
push
aam
rolb
xor
movsb
icebp
push
loopne
jbe
add
and
ds
pop
orb
jno
movsb
ret
sub
stos
movsl
and
add
lahf
lcall
js
pushf
call
rorb
mov
orb
mov
inc
jmp
push
aam
out
jb
ds
in
xor
pop
data16
aad
jo
popl
jae
jmp
push
stc
and
outsl
insl
and
shlb
aas
xchg
sarl
adc
xor
mov
jnp
sbb
inc
pop
icebp
call
jmp
inc
sti
or
inc
sbb
dec
loop
or
sbb
fildll
dec
call
lock
sbb
lds
dec
int3
push
or
push
mov
xor
xchg
or
aaa
out
cli
mov
dec
add
jb
mov
mov
outsl
inc
inc
stc
or
sbb
xchg
jmp
test
pop
pop
fdivrp
shl
aad
mov
inc
xchg
daa
fsubl
mov
repz
push
jae
test
xor
pop
ljmp
clc
addl
mov
mov
int
repz
jbe
cld
addr16
dec
jp
divb
stos
jae
adc
shl
jp
inc
cmc
cmp
pop
pop
mov
pop
dec
jno
jp
sub
bound
aaa
xor
repz
adc
cmp
sbbl
out
jmp
cmpb
dec
popa
std
mov
daa
push
insb
cli
adc
push
int
jb
andl
adc
fucomp
leave
fcom
mov
and
pop
lods
pop
repz
pushf
popa
cmp
xchg
push
cli
outsb
idiv
fcomip
in
je
test
mov
push
dec
xchg
xchg
imul
pushl
into
arpl
xlat
mov
sti
add
dec
push
stc
subl
mov
and
sbb
push
xchg
hlt
daa
pop
shlb
fistpl
push
test
cmpsb
add
movsb
pop
int
jge
je
cmp
sbb
pushl
popf
inc
stos
jecxz
cmpsl
inc
adc
rcl
or
ret
mov
je
ljmp
cli
shll
or
in
mov
cmp
or
sub
std
in
jg
dec
shll
mov
or
xor
jb
pop
andb
push
out
in
lcall
stc
xchg
mov
add
mov
loopne
mov
mov
xchg
xchg
push
xchg
mov
mov
jmp
mov
out
repnz
and
loop
fisttpll
lcall
movsb
mov
cmpsl
xchg
or
das
addl
add
push
pop
jb
mov
add
and
daa
or
cmpsl
add
push
lahf
cmp
add
call
or
hlt
movsb
cmp
mov
ljmp
sub
lds
mov
dec
mov
cli
adc
mov
xchg
sbb
iret
adc
push
fs
outsb
pushl
ljmp
pop
jle
shrb
outsl
or
das
sub
repnz
movsb
fwait
cld
mov
dec
mov
xchg
lret
imul
or
pop
fsub
shl
jns
sahf
fwait
jmp
mov
add
mov
sub
rclb
ret
mov
ror
xor
sub
push
inc
sub
decl
sub
xchg
lock
push
adcl
nop
jmp
stc
mov
aaa
shlb
xor
mov
pop
push
mov
rol
mov
jmp
incl
aam
adc
movsl
mov
push
ds
pop
mov
leave
cld
lret
pop
fidivrl
mov
stos
and
sbb
push
mov
test
adc
mov
jecxz
mov
ljmp
pop
sarl
sub
push
push
pusha
nop
hlt
mov
lock
fnstsw
in
ljmp
xchg
mov
mov
push
icebp
cmp
jmp
sub
out
dec
rolw
inc
movsl
jbe
scas
data16
xchg
xchg
arpl
loope
sub
jne
lahf
or
fs
out
sub
jns
mov
je
cmp
pop
movsb
pusha
imul
cld
cmp
jo
ret
sbb
jbe
or
jmp
mov
jno
out
iret
jmp
stc
lret
xor
imul
and
jmp
in
inc
mov
cs
jnp
adc
lcall
pop
stos
je
insb
rclb
outsl
popa
in
ret
cwtl
push
pushf
out
cmp
sar
pushl
push
stc
insl
fldt
inc
decb
in
push
int
fadds
jae
push
cmp
jnp
push
mov
js
dec
psubsb
adc
mov
into
jns
and
jg
decl
pop
jle
repz
xor
cmp
out
mov
sbb
out
call
lods
or
std
inc
push
test
data16
loope
inc
cmp
pop
imul
incl
push
outsb
cmp
lahf
data16
pushf
movsb
jge
sbb
in
sub
fmull
int
adc
jmp
mov
push
add
mov
jg
call
jmp
push
daa
cmpsl
lret
pop
scas
stc
mov
or
push
ud1
scas
cli
xor
mov
xchg
adc
insb
mov
jo
popf
adc
sbb
or
inc
fadds
faddl
fmull
daa
cltd
and
es
jne
add
pop
inc
decl
lcall
jb
out
adcb
xchg
push
push
nop
lret
sub
movsl
in
push
add
jmp
leave
mov
js
add
in
jns
int3
pop
in
test
add
mov
cs
mov
call
aas
fildl
test
adc
jno
je
sbb
or
loop
pushl
pop
jge
xor
ficoms
into
jg
or
stos
test
ljmp
mov
push
loope
mov
mov
jo
jno
sbb
mov
dec
insb
lods
pushf
fwait
loop
dec
jle
outsl
pop
add
rcrb
outsb
iret
gs
jl
scas
adc
dec
push
lcall
daa
mov
test
ret
and
insb
pop
dec
jns
mov
test
clc
insb
dec
jl
inc
adc
sbb
pop
jg
data16
mov
xchg
lret
loope
or
dec
jne
mov
mov
push
or
push
decb
pusha
in
mov
fptan
and
jg
cs
adc
jle
push
add
push
dec
jbe
add
xchg
push
inc
inc
fcoms
push
inc
lcall
push
and
jmp
imul
jp
jnp
repz
adc
dec
scas
mov
jg
out
sub
outsl
mov
testb
sbb
fwait
sbb
lret
iret
cli
pop
mov
mov
or
lods
in
je
cwtl
mov
daa
pushl
mov
fisubs
xchg
cmp
mov
add
lods
push
shll
dec
mov
push
sbb
incl
sub
dec
and
aam
mov
xor
pushl
cld
push
mov
inc
push
jnp
adc
ds
sub
negb
jmp
mov
cmp
push
inc
push
mov
mov
arpl
xchg
pop
shlb
fmulp
adc
jg
cwtl
call
imul
push
hlt
mov
sahf
mov
and
inc
pop
xor
dec
shll
mov
cmp
mulb
imul
pushl
inc
mov
cs
xorl
fsubp
sub
jecxz
in
or
test
sbb
add
push
xor
add
aad
subl
cltd
rorb
inc
mov
sub
fists
out
ficoml
push
adcl
mov
cmpsl
arpl
loope
xor
sbb
call
ret
mov
and
cmp
push
je
fimuls
push
mov
lret
call
jmp
xlat
sub
ret
shl
xchg
fists
decl
push
push
and
sub
dec
call
imul
arpl
jg
cmp
jae
je
shlb
sahf
fstpt
mov
repz
outsl
clc
pop
das
push
pop
test
aaa
mov
ret
mov
jno
push
jg
cmp
je
pushl
xchg
int3
lahf
fcmovne
add
push
xchg
sbb
adc
mov
and
jo
hlt
xor
ljmp
xchg
cmpsb
cmpsl
jo
stos
inc
sub
push
stc
push
sbbb
mov
ljmp
ljmp
cmp
leave
test
call
sub
sbb
repnz
decl
loopne
cwtl
sbb
cmp
and
lcall
xor
jmp
js
mov
push
pop
push
les
and
mov
fisubl
std
clc
lret
and
cld
xor
pushl
cld
and
dec
lds
ret
in
pop
mov
xchg
scas
inc
cmp
decl
xor
loopne
call
addr16
jne
cmp
mov
jb
call
sar
mov
xor
mov
jae
sub
fldt
sahf
pop
jmp
add
or
jno
mov
pop
xchg
mov
mov
sbb
mov
cmpsb
jmp
stc
stc
out
or
icebp
addr16
pushf
xchg
out
jp
lahf
mov
lret
fadd
out
das
mov
incl
cmp
mov
cld
adc
cmp
loope
push
outsl
push
jge
jg
mov
test
repz
mov
pushl
lods
movsb
mov
iret
sbb
int
scas
fisubrs
cmp
pushl
insb
and
mov
sub
inc
test
xor
fmull
mov
pushl
jb
add
jb
cwtl
cmpsl
xor
std
movsl
sbb
xor
es
leave
decl
pop
pop
mov
mov
out
mov
push
enter
shlb
stos
fldenv
decl
mov
sub
and
mov
mov
fistps
xlat
xor
jmp
mov
aaa
fwait
lahf
push
xchg
xor
or
inc
mov
cltd
ror
mov
fsubrs
mov
ret
push
push
fidivs
popa
fdivrs
inc
call
mov
pop
dec
sub
inc
les
adc
fisttpl
pushl
fidivrl
xlat
fbstp
hlt
mov
pop
push
xor
test
dec
lds
jp
movsl
into
ljmp
clc
mov
out
jnp
cmpsb
dec
xor
mov
mov
mov
xchg
sub
pop
stos
incl
fisttpl
imul
push
pusha
and
mov
mov
das
pop
leave
adc
in
sbb
and
bound
in
pop
mov
inc
movsl
std
popa
xor
fidivrl
sti
cmp
icebp
lcall
out
loop
hlt
or
cmpsl
hlt
push
mov
call
inc
jo
xor
sbb
or
and
pop
cli
adc
into
xchg
sar
ljmp
adc
xchg
xor
cwtl
push
gs
out
hlt
xchg
xor
jno
mov
insb
or
cli
ljmp
xchg
addr16
pop
sbb
ret
fs
cltd
sti
sbb
ljmp
sub
roll
xlat
flds
lods
std
xchg
sbb
cmc
pushl
pushl
icebp
and
repz
and
push
rcr
popa
insb
dec
in
into
cs
and
xchg
pushl
paddsb
fsubrs
out
cmp
jns
fcoml
loopne
loopne
mov
jae
inc
out
jno
repz
test
aaa
fisttps
mov
loope
sbb
lds
pop
adc
stc
je
sbb
pushl
sub
lods
adc
sbb
add
jl
cwtl
adc
cmpsb
repz
push
xlat
dec
scas
sahf
add
dec
ljmp
inc
enter
mov
cli
push
call
mov
add
into
test
mov
push
jl
cmp
incl
cld
mov
mov
cmp
pop
sti
outsb
cmp
jnp
fwait
sti
jp
outsl
sub
fucomip
pop
fs
les
xchg
jle
adc
push
sub
xor
lahf
call
mov
adc
pushf
rcl
sub
test
test
ja
jmp
push
jb
stc
inc
jge
fdivr
aad
dec
add
inc
test
xchg
xchg
cmp
pop
or
aas
jp
jg
pushl
lcall
bound
mov
jge
adc
xorl
inc
aaa
in
fsubp
jg
cs
jg
and
cs
adc
cwtl
and
inc
hlt
cli
cld
das
lea
loop
jl
mov
imul
xor
push
jp
and
in
mov
sub
ljmp
add
mov
or
leave
les
lds
xlat
sub
adc
mov
stos
hlt
shlb
sbb
sbb
shr
cmpsb
or
lea
adc
aad
les
outsb
cmp
sub
test
jg
jle
mov
fdivrl
sbbl
divl
iret
mov
fstpt
dec
xor
scas
xchg
pop
lock
inc
sub
inc
inc
sub
mov
lock
jl
push
xor
ljmp
xor
loope
dec
sbb
cltd
pop
add
shlb
enter
push
xchg
adc
mov
call
adc
pushf
stc
mov
ror
daa
adc
outsb
daa
gs
addr16
int
cs
icebp
mov
cmp
lcall
xchg
imul
dec
adc
out
fisttpl
aam
mov
incl
ljmp
xchg
in
sbb
ljmp
outsl
xchg
sbb
ljmp
dec
xor
in
adc
pop
aas
sbb
or
xchg
pop
or
cmpsb
push
in
idivb
cmpsl
mov
test
push
pop
out
and
shll
sbb
fbstp
inc
mov
add
outsb
xorb
lret
jb
inc
pop
adc
cmp
jb
test
mov
sar
pop
mov
pop
and
lret
push
idivl
jg
add
jge
push
push
xlat
or
jbe
cmpsl
pop
out
lcall
pop
push
imul
mov
or
cltd
insb
push
scas
jbe
incl
mov
and
ficoms
or
xchg
shrl
xchg
inc
mov
in
imul
push
pop
scas
lods
fcomps
mov
mov
cmp
adc
test
iret
add
mov
inc
xor
mov
xchg
daa
in
add
leave
sub
xor
and
jge
incl
leave
pop
fs
push
or
inc
lahf
arpl
fnsave
std
cmp
int3
lods
shr
cmp
mov
adc
xchg
inc
mov
and
lret
mov
stos
std
iret
and
mov
loopne
mulps
incl
ret
lock
insl
mov
adc
jmp
movsl
xchg
jo
ficomps
mov
sbb
js
push
roll
aas
sbb
fisubs
adc
stc
int
movsl
pop
pushl
lds
stos
test
mov
xchg
inc
mov
jle
incl
stos
stos
aad
mov
cmp
dec
xor
or
shll
pop
mov
xchg
mov
mov
pushl
movsb
shrb
cmpsb
nop
ficoml
sahf
adc
mov
iret
adc
sahf
xor
cmp
sub
pop
and
cmp
mov
mov
out
mov
sbb
dec
cs
mov
inc
test
inc
sub
xchg
xchg
mov
push
ficompl
mov
cltd
out
fwait
mov
out
test
in
insl
outsb
lahf
enter
cmp
aaa
mov
sbb
jb
jl
mov
ret
in
popf
and
push
jge
std
adc
jno
mov
jbe
pop
inc
or
out
das
mov
jbe
roll
arpl
and
in
pop
mov
lcall
push
adc
jo
jb
daa
or
adc
and
mov
inc
std
imul
and
sarl
pusha
cmpsb
popa
mov
decl
fadds
push
stos
sub
pop
nop
lods
mov
rorl
cwtl
scas
std
lcall
inc
std
cld
pop
pop
pop
jp
jns
roll
adcl
sbb
call
scas
stos
incl
cmpsb
sti
cld
scas
ret
pushf
loop
sahf
pop
enter
add
dec
push
in
out
inc
lcall
add
and
test
push
ja
ret
and
xorl
call
pop
in
jp
imul
add
add
mov
jl
or
rorb
sub
fisttpl
push
lods
dec
lcall
ljmp
or
test
xor
jbe
and
incl
add
inc
jns
aam
adc
mov
mov
stos
arpl
aaa
jae
ljmp
push
sub
call
stos
pop
lret
push
loopne
leave
testl
and
inc
js
std
dec
rcll
jge,pn
movq
ljmp
push
bound
lret
js
adcl
push
mov
xor
inc
ljmp
mov
mov
mov
mov
mov
mov
cld
add
cmpb
daa
cmc
stos
jb
out
cmp
mov
cmp
push
lods
aad
jecxz
fmuls
and
push
sbb
loope
mov
outsl
out
std
push
add
cmp
pop
ds
jae
cld
sbb
fs
jbe
add
xor
or
jg
xchg
clc
fldenv
adc
mov
sub
pop
rolb
cmp
in
mov
js
jle
mov
in
out
cmp
cs
cmp
sbb
cmc
lcall
mul
jmp
cs
subl
mov
int3
push
addr16
ljmp
int
loopne
inc
lret
jno
aaa
adcb
loope
push
dec
pop
adc
insl
sub
lcall
cltd
cmp
xchg
andl
mov
call
ds
or
clc
call
mov
fisttps
jne
xor
insb
or
jae
lahf
xor
call
push
pop
into
test
outsb
push
adc
and
into
decl
inc
jp
or
dec
sbbl
jo
orb
aam
cwtl
mov
testl
xchg
xlat
lea
pop
dec
lret
ret
mov
push
mov
adc
sarl
aad
adc
ret
xchg
dec
cmp
adc
mov
lock
das
mov
incl
test
push
mov
mov
out
add
es
inc
mov
adc
aaa
int
adc
jb
push
inc
test
lock
xchg
lcall
xchg
jbe
lahf
cld
adc
push
repnz
popa
or
call
loopne
add
sti
enter
shll
testb
in
jne
cltd
mov
into
mov
fmuls
insl
xor
fidivrs
and
ljmp
bound
or
xor
iret
daa
dec
ret
shlb
pushl
popf
int3
mov
cmp
and
mov
push
out
loope
mov
fcomip
jno
xchg
pop
outsb
cmp
in
dec
or
ret
xor
mov
push
jecxz
scas
insb
pop
rcll
stos
test
data16
jmp
pusha
rcr
inc
or
fs
ja
in
ljmp
and
xchg
aad
inc
insl
add
mov
sbb
arpl
andb
das
xchg
pop
jecxz
bound
pop
mov
push
call
std
decl
enter
jmp
jg
sar
xchg
ret
or
cltd
bound
test
ljmp
scas
sbb
shlb
dec
push
or
xchg
sub
mov
xchg
sub
popa
jp
cmp
pushl
adc
mov
mov
ja
add
mov
jnp
lods
xchg
jnp
xorb
jg
push
mov
movsb
psubusw
adc
pop
nop
scas
lahf
test
jg
cmc
add
stos
pop
pop
or
cmp
fidivrs
pop
incl
mov
jg
add
in
repz
cwtl
fnstsw
xchg
sbb
loop
call
imul
ror
add
fsub
jge
dec
inc
inc
outsb
push
mov
pusha
pop
stos
jo
ret
call
shll
fcoml
in
bound
xchg
jp
imul
push
jg
sahf
mov
adc
sub
jns
inc
sbb
sub
xor
sbb
outsl
pushl
popl
loope
mov
rcl
push
sti
pop
scas
xor
sbb
pop
cmp
ja
or
iret
mov
or
push
xchg
jo
icebp
cmp
cltd
fmuls
mov
inc
je
loope
rcrb
rorb
repnz
or
add
inc
fs
sbb
pop
xlat
mov
jbe
adc
int3
and
or
push
decl
dec
mov
sbb
jmp
mov
test
fimull
jb
mov
jmp
push
into
scas
jb
adc
push
inc
in
inc
and
xorb
lahf
pop
sti
call
fcomps
mov
dec
push
aas
mov
stos
sahf
sbb
loopne
xchg
inc
enter
sub
mov
pop
insl
xchg
ret
inc
xor
xor
xor
int3
int
adc
and
mov
jmp
add
push
cltd
pusha
mov
xchg
dec
and
iret
push
aad
push
ficoms
jns
cmp
scas
xor
xchg
jmp
movsb
std
inc
mov
ds
rorl
in
add
mov
ds
lret
mov
pushf
xchg
std
movsb
sub
incl
inc
into
xchg
or
cmpsb
ds
xchg
jp
outsl
aaa
in
lret
in
ds
ficomps
xchg
dec
or
daa
cmp
mov
mov
cld
js
ficoms
lods
out
nop
push
pop
mov
stos
ds
ljmp
mov
and
xchg
lcall
xlat
ja
imul
outsl
mov
sbb
js
inc
and
push
gs
inc
enter
orb
xor
cld
decl
std
cltd
sub
adc
pushf
int
mov
push
cmpsb
inc
adc
xchg
and
incl
pushf
inc
jne
insb
and
fwait
jle
in
xor
dec
loope
xchg
sbb
mov
cmp
arpl
sub
andb
mov
push
push
add
xor
mov
call
mov
pop
addr16
cmp
jne
dec
outsb
mov
dec
ja
fnstsw
lret
fcos
sbb
call
lds
gs
lods
add
adc
dec
aaa
leave
fwait
sub
inc
adc
jg
lcall
loopne
pop
jp
out
dec
jl
xchg
aas
sub
cld
dec
mov
cli
test
les
fdivp
pop
ret
icebp
and
jns
out
fbstp
jmp
push
inc
mov
pop
mov
push
and
lcall
popf
loopne
jecxz
ret
outsb
pusha
inc
jae
int
or
adc
push
cmp
push
jl
das
mov
cmc
cmp
xor
push
loopne
xorb
scas
pop
ret
outsb
jl
lds
xchg
sub
das
lock
pop
in
pushl
movsl
ljmp
inc
cmp
push
fwait
ljmp
jno
lock
ja
push
cld
call
addr16
xor
add
xor
clc
adc
mov
pop
mov
decl
xor
fs
jmp
gs
xchg
aaa
fsubs
xchg
push
or
iret
lods
inc
test
xor
scas
inc
mov
pop
jno
pop
jae
jmp
ljmp
mov
pop
orb
xor
pop
inc
adc
cld
mov
and
push
adc
xor
jnp
mov
cwtl
clc
cmp
pop
ffree
push
sub
in
movsb
rolb
lahf
push
out
pop
add
iret
mov
xor
and
mov
pop
mov
ljmp
popa
xor
dec
stos
inc
mov
mov
adc
arpl
sub
mov
sub
cli
cmp
ret
jp
mov
shrb
cld
lret
ljmp
add
push
js
sub
lcall
mov
ret
outsb
popa
out
or
fidivrl
flds
cs
imul
shll
xchg
mov
aam
jg
lcall
cmp
mov
scas
je
cltd
movsl
sarl
jo
ljmp
cmp
inc
imul
sub
pop
push
cwtl
test
hlt
imul
sub
and
aas
mov
mov
mov
sub
jns
test
ds
cld
call
or
mov
xchg
lret
dec
lock
out
xchg
data16
ljmp
add
and
or
mov
jb
push
and
dec
pop
cli
inc
xor
shl
ja
das
clc
pushl
stc
rcrl
daa
jl
xchg
lahf
push
push
lret
inc
xchg
mov
xchg
call
mov
pop
arpl
rcrb
jnp
lock
hlt
mov
aas
sahf
roll
pusha
pop
std
pushl
adc
cmp
arpl
pop
dec
dec
in
ss
cmp
scas
lcall
std
cmp
dec
and
jo
clc
mov
sarb
rcrl
fdivrs
ret
mov
fwait
call
cmpsl
sahf
mov
dec
or
mov
xor
leave
andb
icebp
cld
mov
in
incl
push
aaa
rorb
or
cwtl
into
sbb
mov
dec
sbb
push
pop
adc
pusha
pushl
sarl
mov
fwait
testb
lods
sbb
and
icebp
xor
int
or
call
pop
or
sbb
call
mov
cmp
in
clc
jg
incl
shll
push
in
popf
jne
sarb
xchg
gs
mov
ljmp
or
into
add
imul
bnd
sub
add
cwtl
mov
pushl
sbb
xor
add
mov
jmp
mov
je
inc
in
lahf
push
mov
pushl
cld
dec
jb
or
xchg
pop
stos
loopne
addl
popa
pushl
icebp
push
jge
xchg
and
fstpt
fstps
pop
xchg
int
cwtl
sbb
cmp
ret
stos
mov
mov
inc
xchg
inc
add
mov
jne
pop
loopne
cmp
jne
mov
and
sbb
push
ret
popf
rcr
lcall
push
ret
xor
jb
pop
or
fwait
push
movsl
inc
sub
mov
aaa
lods
inc
push
dec
jo
and
rcl
inc
scas
adc
lret
or
js
xchg
popa
inc
pushl
es
sbb
cmpsb
cmpsb
aad
add
adc
pop
push
insb
repnz
mov
pushl
popa
mov
mov
xchg
xor
iret
xor
pusha
push
subl
incl
ret
and
loopne
mov
bound
fldt
sbb
aam
fnstcw
incl
jbe
push
xchg
dec
dec
fisttps
mov
jecxz
pop
or
mov
inc
call
sbb
bound
in
mov
aad
js
sbb
pop
jecxz
ljmp
call
ljmp
and
add
inc
inc
lcall
movsb
in
out
dec
movsb
subl
je
pop
or
mov
cmp
mov
jmp
rclb
fidivrs
pop
aas
adc
sub
pop
rcl
mov
mov
sbb
mov
xchg
ret
cld
jecxz
push
or
das
andl
incb
movsb
xor
fimuls
std
sahf
mov
inc
sub
adc
mov
mov
push
jnp
cwtl
push
add
lea
jecxz
test
lcall
pop
add
cmc
jl
ds
stc
mov
sub
mull
pop
ss
in
rolb
dec
adc
mov
mov
mov
mov
in
mov
shlb
repnz
out
dec
pop
jg
cltd
pop
dec
pushf
cltd
imul
sbb
rcrb
ret
les
pop
adc
dec
sbb
mov
jmp
pushf
movsb
shl
test
fldenv
stos
xor
inc
cmp
nop
dec
int3
cmc
add
adc
jnp
or
and
mov
rcr
xor
mov
dec
int
push
shrb
and
shlb
outsb
sub
idivl
sarl
gs
lcall
mov
lods
out
jns
jmp
xor
fistpll
add
sti
xchg
movsl
jns
dec
xchg
fmull
mov
and
xor
add
push
mov
std
loope
jle
aaa
jmp
xchg
add
cmp
inc
mov
xchg
mov
decl
mov
scas
xorl
lahf
fsubl
js
mov
cmp
inc
fisubl
push
lods
int3
fildll
fistpll
mov
cmc
fstl
mov
and
inc
test
ficompl
daa
or
aas
jle
jg
mov
fsub
jo
mov
jg
inc
stc
test
or
cmp
lret
mov
call
imul
cmp
mov
insl
or
cltd
mov
call
add
inc
call
cmp
pop
incl
pop
ljmp
sbb
or
sub
movsb
sub
pop
popa
rcr
pop
decl
pushl
into
aas
xor
lret
cmp
mov
xchg
cmp
bound
jb
fucomi
inc
rorb
faddl
push
push
add
call
lcall
mov
test
aad
imul
mov
orl
sub
lcall
outsl
adc
lock
push
mov
out
or
ret
mov
cmp
mov
loopne
decl
mov
and
push
mov
adc
inc
mov
les
repz
mov
dec
nop
mov
ljmp
pusha
ljmp
xchg
mov
and
inc
push
xor
mov
insb
arpl
decl
xor
inc
lcall
cltd
into
shlb
jne
inc
insb
cs
loop
pusha
mov
incl
adcl
pop
add
shll
fistpl
mov
jnp
hlt
cmp
outsl
cmp
rcrl
push
xchg
ds
or
sub
int3
push
add
mov
sub
decl
frstor
negb
sub
cld
or
cld
loope
int3
jne
sbb
lcall
stc
in
cltd
adc
jp
lock
jl
shrb
pushl
lock
jb
jbe
in
icebp
cwtl
lock
xor
push
mov
sahf
addr16
add
call
xor
inc
xchg
mov
push
cmc
ret
inc
mov
fdivrs
inc
pop
mov
push
test
dec
sbb
pop
addb
nop
jne
pusha
in
mov
scas
aas
iret
add
add
mov
add
rcll
lea
imul
jno
pop
xor
lahf
int3
push
in
inc
lcall
repnz
ja
incl
xor
jb
ds
orb
add
inc
cmp
mov
jmp
xchg
dec
scas
inc
mov
add
aaa
cs
notl
adc
jnp
jg
cmp
incl
mov
push
ja
pop
add
pop
mov
dec
mov
jl
jns
sbb
call
add
jecxz
in
or
stos
xchg
in
aaa
popl
dec
imul
and
xchg
push
sub
lcall
adc
pop
aad
adc
mov
lret
sub
push
fsubrs
dec
mov
hlt
mov
sub
loop
or
mov
ss
jecxz
sarl
fists
jmp
push
dec
pop
ljmp
push
and
sbb
or
inc
test
mov
mov
jg
cmp
cs
fidivs
movsl
testb
pop
pop
jecxz
les
in
mov
jmp
stos
add
mov
pop
push
jmp
mov
fcompl
pop
std
jmp
add
fwait
mov
cs
in
out
inc
js
push
testl
decl
int
mov
mov
ret
aas
cmp
je
call
mov
dec
pop
decl
mov
lahf
cld
lods
mov
out
sbb
nop
inc
mov
add
imul
lds
ljmp
je
or
arpl
jl
leave
xchg
nop
fstpt
inc
xchg
add
jg
dec
inc
xchg
xchg
dec
lods
fldl
or
sbb
mov
xor
call
push
arpl
add
mov
pusha
jo
xor
ficoml
roll
jnp
inc
inc
pop
jmp
test
mov
lahf
loopne
or
add
mov
cmp
xchg
imul
pop
xor
push
xchg
pop
mov
push
or
dec
jns
jle
arpl
ja
shll
and
adc
lea
out
pushl
hlt
sahf
aas
sti
xchg
pop
and
cmc
lret
jo
and
gs
not
sahf
jo
and
dec
decl
mov
mov
add
and
jmp
sub
clc
lcall
and
push
pop
ret
in
stos
test
mov
sbb
pop
dec
dec
cmp
inc
jae
xor
jmp
hlt
push
inc
out
lock
push
lret
add
xchg
imul
call
outsb
test
push
lods
sbb
mov
lock
jl
jg
fmuls
xlat
pusha
xor
pop
std
out
out
mov
lods
cmp
sbb
or
dec
shrl
lahf
mov
enter
decl
lock
into
sahf
in
or
sub
aaa
mov
imul
pop
xor
add
cwtl
sti
les
sub
negb
xorl
xchg
jl
popf
cmp
outsb
mov
jg
jno
ss
sbb
test
mov
clc
and
mov
xchg
xchg
xor
mov
xchg
sbb
jnp
dec
repz
lret
clc
incl
jo
les
addb
cltd
sbb
lret
xchg
popf
addr16
incl
movsl
xchg
clc
scas
in
mov
jae
push
inc
call
test
decl
xor
out
mov
xchg
aad
ds
cmp
stos
jp
fwait
je
pushf
into
jmp
incl
scas
les
xchg
lret
jp
ret
rcrb
adc
ss
cmc
xchg
pop
pop
inc
cltd
lea
sar
inc
mov
cltd
cmp
push
mov
push
inc
sbb
in
roll
stos
xor
stos
incl
dec
mov
test
insb
sbb
mov
enter
fnstsw
mov
call
or
jmp
movsb
xchg
out
pop
inc
lret
adc
inc
add
sub
sub
cmc
mov
in
inc
xchg
popf
hlt
dec
jg
add
aad
test
ljmp
lock
stos
xor
mov
fisttpl
sbb
dec
dec
xchg
or
xchg
adc
fildll
gs
loopne
xor
xlat
push
addr16
sar
aam
movsl
stos
cwtl
mov
cwtl
mov
pop
hlt
mov
jp
jp
sub
int3
adc
imul
icebp
xchg
jno
or
or
xor
or
out
add
push
mov
pusha
adc
lcall
sbb
mov
aam
fwait
fisubrl
ds
pop
mulb
in
sar
call
push
dec
inc
add
out
in
cmp
or
ret
pop
fldl
fiadds
inc
inc
mov
push
out
mov
or
incb
sub
call
rorb
xorl
ret
rol
add
sub
aam
in
dec
les
call
and
nop
stc
sbb
stos
ja
xchg
jecxz
push
mov
adc
mov
call
jle
imul
adc
pusha
dec
daa
pop
sbb
xchg
orb
sti
fwait
paddw
and
jg
daa
or
leave
jp
xchg
lock
pop
test
mov
sbb
pop
addr16
pushl
mov
arpl
sub
rcrb
scas
in
and
mov
sub
mov
out
aaa
incl
xchg
or
sahf
cmp
mov
pop
and
sbb
adc
aam
call
repz
lods
push
push
dec
pop
and
cli
fdivr
jle
imull
push
pop
xlat
pop
push
je
push
movsl
rcr
inc
shl
cmp
loop
mov
scas
jb
dec
xchg
pop
jecxz
shrb
repnz
movl
cmp
jnp
fcompl
sbb
push
pop
loope
sar
mov
or
pop
iret
stos
xor
cld
stc
jp
std
out
cmp
pop
lret
adc
adc
sbb
push
sub
cmc
sub
jmp
mov
adcb
mov
mov
mov
mov
mov
mov
loop
nop
or
push
jmp
sub
ljmp
js
jle
xchg
sub
jbe
jg
out
decl
xchg
mov
mov
or
push
pop
xchg
fstpt
mov
ds
pushl
fcmovb
xchg
and
testb
xor
inc
shlb
inc
adc
lcall
test
movq
mov
xor
xchg
clc
ficomps
pushl
mov
mov
xor
sub
insb
stc
lds
in
dec
push
fcomp
xchg
in
imul
push
in
add
mov
cltd
mov
push
dec
mov
popa
sbb
mov
and
xor
sbb
push
call
sahf
data16
pop
movsb
bswap
mov
hlt
jmp
xor
js
test
icebp
dec
gs
cmpsb
add
lcall
outsb
rol
mov
into
ljmp
in
jne
jnp
add
jge
decl
cmp
lret
or
or
pop
xor
and
gs
ljmp
and
xchg
xchg
push
bound
push
cmpsl
out
ficompl
jae
and
lock
call
cld
shrl
pop
add
jg
lret
scas
insb
movsl
or
inc
sar
stos
fists
sbb
xchg
in
sahf
aam
xor
sub
arpl
jmp
jecxz
lods
dec
in
cmp
cld
negb
sub
jae
pop
dec
pop
xchg
iret
bound
sub
lods
imul
out
in
in
mov
decl
jnp
mov
das
sbb
xchg
push
out
repnz
cmc
xchg
cmp
push
ds
sahf
adc
ljmp
or
push
mov
cmp
mov
adcb
out
sub
rcl
cld
stos
decl
inc
mov
les
mov
lahf
ss
pop
mov
mov
movsb
incl
push
shrl
and
and
notl
push
xchg
mov
call
adc
pushf
xchg
xchg
cs
fcmovnbe
adcb
bound
mov
push
cmpsb
jecxz
out
outsb
hlt
enter
pop
inc
insl
pop
adc
push
cmpsl
dec
popa
push
or
and
insl
es
push
pushl
std
mov
sbb
les
aas
pop
mov
push
lds
sub
jo
pushl
or
inc
sub
ja
jmp
push
rcrb
and
xlat
dec
mov
lcall
pop
ret
and
xor
or
and
outsl
or
enter
push
jg
dec
inc
pop
aad
add
mov
adc
icebp
cmp
sub
out
dec
pop
sbb
call
daa
inc
xlat
clc
mov
inc
fwait
lods
xchg
lret
daa
adc
in
pop
jo
aam
cmpsb
subb
into
stos
decl
mov
in
push
fmuls
mov
push
clc
test
outsb
ds
arpl
or
data16
icebp
movsl
adc
sbb
dec
das
repnz
sahf
fldpi
jns
incl
movsb
pop
push
dec
gs
sbb
sub
stos
sub
inc
cmp
sahf
notl
dec
sbb
call
cld
dec
fmulp
out
addr16
jae
addb
sbb
pop
ds
pushl
xor
mov
in
mov
bnd
pusha
mov
cli
inc
orl
sub
adc
mov
xchg
lods
adc
int3
mov
mov
cld
jecxz
mov
mov
jne
fwait
dec
int
adcb
jg
daa
and
dec
loop
das
xchg
stos
cmp
sbb
inc
fildl
jmp
add
in
das
add
jp
imul
daa
hlt
fwait
cmc
out
mov
loopne
or
decl
ror
adc
cli
out
cmp
popa
imul
pop
roll
out
pop
push
push
pop
lcall
out
xchg
lcall
jns
fadds
xor
xchg
push
pushl
push
sbb
dec
sbb
pop
pop
or
inc
std
sbb
sub
sbb
adc
lret
insb
adc
ljmp
andl
call
push
popf
fwait
es
adc
mov
jg
push
add
jg
test
mov
mov
mov
ja
mov
popf
test
das
cli
jmp
sub
xchg
std
push
pop
and
pop
sarb
loopne
outsb
mov
incl
daa
add
pop
sub
sbb
out
pop
shrl
iret
sti
or
insb
xor
inc
pop
call
int
sbb
cmpsb
cmp
jns
fidivl
cwtl
ljmp
fcomip
push
jbe
lods
rorl
pop
insb
popf
je
dec
cmpsl
pop
sbb
decl
xchg
push
aam
xor
aam
mov
adc
sahf
movsb
fildl
sbb
sbb
ljmp
movsl
lods
jg
outsl
jge
test
push
jnp
in
cmc
cmpsb
lcall
call
adc
ss
inc
popa
icebp
sub
outsl
aam
or
push
in
fildl
jmp
lea
or
loopne
rorl
jl
inc
jne
sarl
cld
mov
sar
decl
mov
ficoms
push
cmp
xchg
inc
fs
mov
ret
push
pop
iret
rorb
pop
dec
pop
mov
lcall
or
lods
je
xchg
inc
push
gs
xor
xor
ud0
cmp
stos
imul
cld
dec
sub
mov
add
mov
into
push
sahf
mov
cwtl
repnz
pmullw
incl
es
jecxz
sub
je
clc
data16
adc
jp
mov
mov
sti
push
add
pop
xor
iret
xor
sbb
ds
xchg
rclb
mov
sbb
iret
sub
pusha
xchg
pushf
popa
sub
fdivs
das
xchg
fidivrl
enter
jae
xchg
cs
dec
loop
pushl
xchg
cmp
jg
shlb
sbb
mov
out
jbe
pop
push
lret
decl
cmp
outsl
push
mov
inc
pop
cltd
and
call
ds
add
sar
sti
adc
pop
cli
insl
popa
mov
out
dec
mov
add
popf
mov
popa
imull
jg
imul
inc
aaa
repnz
repz
fldl
scas
mov
jne
fisttpl
in
mov
xor
push
jle,pn
pop
push
dec
pushf
push
inc
xchg
lret
push
clc
pop
xor
in
add
fnsave
in
in
inc
out
iret
mov
add
cmp
pushl
stc
cmpsb
mov
push
sbb
jo
sub
movsl
dec
pop
shr
xchg
xor
jns
inc
xorb
xchg
sub
stos
push
sbb
or
fucomip
fucomi
cmp
sahf
dec
jmp
call
mov
imul
mov
es
pop
and
push
cmpsl
shrd
pushl
ss
loope
lds
inc
inc
xor
rdtsc
push
xor
pop
add
icebp
push
mov
out
xchg
je
inc
mov
mov
cmpsb
rorb
dec
sahf
insb
rclb
lods
or
ljmp
pop
xor
rcrb
pop
scas
push
sbb
int
inc
decl
push
sub
into
xor
xor
clc
mov
mov
cwtl
daa
sbb
sbb
cmpsl
xchg
iret
sbb
sti
sub
inc
mov
in
xor
lods
pop
pop
clc
xchg
decl
mov
enter
int
sub
int3
loope
out
scas
loope
scas
xor
test
mov
lahf
cmc
insb
pop
fcom
in
xchg
ja
jmp
sbbl
ret
addb
push
mov
div
dec
xchg
jg
cli
add
lds
push
jecxz
lret
aam
xchg
lods
inc
mov
inc
push
push
pushf
adc
ret
sub
fistpl
pop
xchg
ficomps
ja
aad
ret
js
sbb
push
mov
sbb
cwtl
xchg
clc
push
repz
pusha
sbb
mov
decl
in
scas
pop
ja
inc
cs
lea
adc
js
cmp
ret
ljmp
jo
inc
add
loopne
insl
rolb
jg
pushf
jg
inc
xchg
sub
jo
add
xchg
lret
call
roll
push
insl
test
inc
mov
testl
dec
push
inc
inc
xchg
jmp
jmp
mov
and
jmp
push
adc
cmp
pop
in
movsl
outsl
loopne
jge
popf
or
add
inc
inc
dec
icebp
scas
clc
popa
mov
inc
shr
ja
mov
mov
adc
das
cmpsl
outsb
jmp
cmp
and
or
mov
or
jle
cmpl
push
fwait
cmpsb
sahf
push
push
imul
clc
aad
push
xchg
ja,pt
push
push
jb
inc
and
mov
subb
aad
sti
cltd
call
adc
sub
out
pop
dec
cmpsl
push
mov
dec
enter
xchg
xchg
ja
cmp
call
outsl
mov
xchg
stos
ljmp
ficompl
aas
and
leave
push
decl
scas
dec
cmpsl
je
out
lds
pop
out
scas
mov
push
incl
mov
mov
mov
stc
es
sub
cmp
pushl
mov
cmp
lret
sti
aad
pop
dec
pop
push
js
xor
and
mov
pop
jnp
xor
add
pop
mov
movb
pop
fnstenv
sarl
cmp
out
sbb
pop
icebp
call
sub
xchg
and
shrb
cmpsl
mov
pushf
add
call
addl
push
ret
test
jno
xor
outsb
push
es
gs
clc
lcall
xchg
jge
sbb
lret
push
insb
and
insb
xchg
pop
sub
out
dec
inc
into
jo
incl
pop
test
ss
in
sub
dec
cmp
lcall
aam
jns
mov
sub
pop
cltd
jnp
mov
xor
adc
repz
int
popa
jl
or
mov
xor
int
out
ljmp
popa
pop
mov
sbbl
cs
push
outsl
lcall
enter
fnstenv
mov
pop
data16
mov
cmp
fimull
movsb
dec
sbb
mov
and
les
sahf
lahf
dec
or
jnp
pop
scas
ja
imul
mov
mov
mov
jns
push
lcall
fmuls
push
ret
mov
ja
nop
xor
call
bound
call
leave
mov
popa
xorb
jb
in
neg
add
push
into
pop
sbb
jg
adc
push
ljmp
shl
insb
mov
pop
ret
push
idiv
jg
lahf
add
mov
mov
push
mov
test
nop
mov
ljmp
mov
sub
test
mov
gs
loop
push
pusha
xlat
cmpsl
jl
ljmp
mov
add
pop
sahf
xlat
cli
dec
loop
mov
or
sub
lcall
cmp
inc
sub
xor
bound
jns
ljmp
out
and
add
jle
mov
decl
push
jle
push
lcall
enter
mov
jnp
hlt
in
ja
cld
scas
test
jg
cmp
adc
dec
sbb
call
add
out
daa
pop
pushf
and
mov
mov
xchg
fcomps
dec
popa
aam
pop
cltd
call
mov
sub
mov
mov
inc
xor
dec
sbb
sub
mov
dec
xor
cs
mov
cli
push
mul
or
icebp
pop
fwait
mov
leave
mov
incl
lods
dec
xor
sbb
sbb
pop
insl
repz
icebp
dec
cmpsl
in
xor
cwtl
add
insb
mov
xchg
sahf
push
mov
pop
dec
cwtl
int
sbb
pop
xchg
pop
dec
push
pusha
ret
lcall
in
lods
lcall
jp
int3
inc
xor
stos
test
mov
aaa
adc
pushl
ret
push
vpcomuw
add
in
addr16
sub
rclb
decl
scas
loope
dec
faddp
ds
lcall
addl
and
call
sub
nop
loop
cmp
shlb
jmp
xchg
lds
sar
dec
loopne
inc
fstpl
std
stc
inc
outsb
and
loope
test
or
jno
jns
rcll
les
jb
mov
xchg
test
mov
mov
add
mov
xorl
push
pop
ja
in
lock
sbb
aas
hlt
cmp
loope
fs
incl
dec
push
ret
out
iret
cld
mov
xor
adc
lds
xor
addb
push
sub
sarb
cmpsl
sbb
xchg
push
mov
js
pop
into
bound
xor
pop
movsb
cs
call
jns
sti
jmp
jnp
xor
jg
sbb
sub
mov
jmp
std
gs
pop
adc
sub
jne
call
aaa
xchg
adc
and
jg
xor
pop
xchg
lock
mov
das
or
decl
rclb
inc
mov
lret
in
adc
jp
xor
cmpsb
imul
leave
ljmp
ret
and
xlat
and
cli
adcb
xor
jae
pusha
push
mov
mov
addb
inc
mov
in
enter
movsb
adc
stos
icebp
int3
ja
cmpsb
lcall
je
imul
arpl
data16
sub
addl
nop
nop
dec
daa
fs
and
push
pushf
or
cmc
jnp
jp
stos
cltd
inc
mov
incl
add
or
and
mov
cltd
fdiv
jo
cmp
es
xor
call
test
fists
mov
stos
jg
jecxz
lds
in
xor
jmp
dec
mov
lock
sub
mov
push
xor
push
xor
or
adcb
iret
lock
idiv
addr16
jmp
add
and
adc
lods
add
sub
stos
aad
xchg
or
aas
paddd
gs
popf
add
push
nop
clc
sub
mov
add
lcall
insl
inc
into
lret
lea
outsb
push
or
push
inc
clc
and
mov
std
jno
cmp
dec
ss
rclb
divb
inc
ret
jmp
mov
fcomps
and
enter
cmp
bswap
adc
or
ljmp
rcrl
mov
rorb
jns
push
lea
pop
iret
sbb
outsl
jmp
js
mov
mov
or
mov
loopne
inc
mov
and
lcall
add
dec
mov
mov
mov
subb
jg
decl
ret
dec
es
jl
fsub
sub
fsubrs
lock
sbb
sbb
std
xchg
cmc
lcall
cli
dec
mull
popf
sub
ficompl
jl
xor
pushf
fstpl
arpl
pop
test
and
jae
lret
aaa
lcall
jg
in
push
ja
xchg
adc
sbb
pushf
rolb
repz
add
cli
pushl
jno
jecxz
shl
insb
adc
test
mov
fldt
sub
lret
mov
adc
incl
out
push
lahf
adc
cmp
or
sbb
jne
jp
rcl
dec
jae
outsb
ljmp
jns
inc
pop
repnz
sub
arpl
popf
push
jp
loope
dec
adc
idiv
pushl
sbb
pop
jl
pop
lahf
pop
daa
dec
push
or
inc
stos
enter
pop
push
xlat
lods
gs
incl
push
cmp
lea
aam
push
lods
inc
jne
stos
imul
fdiv
or
popf
scas
sti
pop
lock
xchg
and
cmp
push
inc
cmpsb
addr16
add
in
push
mov
push
lods
out
insb
inc
sub
push
dec
jb
fimuls
jae
mov
jle
lcall
popf
lods
ja
and
mov
fs
js
or
push
pop
mov
mov
inc
adc
rcrb
pusha
push
ljmp
scas
or
jo
sub
push
or
ljmp
xor
cs
xchg
push
repnz
pop
xchg
push
sub
ds
or
ljmp
cwtl
push
jno
inc
mov
iret
sub
mov
add
fstl
xor
cltd
cs
decl
sbbl
iret
and
dec
cmc
pop
dec
sub
sti
pop
int3
xor
or
lcall
xor
or
mov
insl
or
imul
aam
cmp
int
add
cmp
mov
addr16
add
in
or
or
mov
stc
ja
decl
loop
mov
or
mov
jns
xchg
aaa
dec
mov
push
add
leave
stos
ljmp
clc
mov
add
mov
adc
insb
scas
rol
push
sbb
mov
push
push
jne
sbb
adc
sbb
and
mov
or
push
lock
pushl
sbb
inc
fsubrs
mov
cli
repnz
pop
rolb
idiv
jg
mov
sbbl
mov
push
inc
andb
push
decl
fs
and
sub
je
in
inc
mov
dec
ja
xor
pop
xchg
cmpsb
call
lds
insl
mov
aad
lahf
mov
scas
xchg
mov
jg
and
xor
rcll
add
call
aam
mov
fiaddl
inc
sbb
cli
and
pop
incl
aaa
inc
jge
js
mov
scas
call
test
push
call
sub
push
loopne
shlb
insb
pop
lcall
cs
stos
cmp
test
pop
cld
insb
mov
inc
push
and
sub
inc
add
stc
sbb
mov
clc
xchg
ljmp
xchg
cmp
jg
mov
sbb
mov
decl
hlt
cmp
sub
pop
ja
orb
rcll
dec
mov
jmp
push
jbe
mov
sbb
add
pusha
jp
lods
pop
icebp
push
and
cltd
xor
mov
or
mov
jbe
pop
or
add
mov
clc
mov
pop
add
push
jo
ret
dec
add
jmp
or
mov
sbb
lret
dec
fiaddl
lcall
hlt
jbe
inc
stc
fadds
cmpsb
sub
push
pop
pop
mov
negl
lcall
push
xor
mov
ds
sbb
dec
int3
aad
inc
xor
call
lcall
imul
xor
jl
xchg
push
dec
add
mov
add
push
call
inc
das
arpl
dec
xlat
pusha
je
sbbl
mov
imul
mov
fstpl
lcall
out
cli
adcl
sub
xor
int3
push
daa
xor
incb
clc
mov
pop
addb
sub
sbb
xchg
mov
jg
out
in
loope
pop
outsb
daa
clc
insl
mov
sub
jge
and
stos
pushl
xchg
pop
clc
inc
xchg
pop
add
pop
mov
add
and
pop
incl
cld
cmp
cmp
adcb
or
mov
adc
jmp
pop
test
out
mov
aam
lcall
fcomps
shrb
xor
fnsave
inc
jl
jo
lods
inc
mov
cmp
add
cmp
jl
daa
inc
and
sbb
cmp
aad
ljmp
in
fwait
out
push
pop
fidivrl
out
mov
out
cmp
outsb
cmpsb
mov
incl
repnz
push
mov
pushf
or
rcll
lcall
mov
jmp
in
cmp
cmp
rclb
dec
or
lahf
icebp
ja
incl
jae
decl
ret
lods
jp
pop
add
ret
cmp
pop
int3
clc
jmp
xorl
movsl
pusha
fildll
sbb
mov
xor
sbb
inc
testl
push
outsb
test
mov
dec
push
and
js
push
cmp
and
ret
add
lahf
mov
stos
int3
push
mull
test
jmp
movsl
sar
pop
sahf
xchg
fisubl
or
loopne
daa
arpl
clc
ss
mov
fcoml
pop
mov
je
add
js
pop
pop
ror
sbb
pop
sti
out
test
add
ss
push
sbb
sahf
cli
outsb
ds
fidivs
je
mov
or
jp
aam
push
push
pop
ret
jmp
mov
stos
dec
test
fsts
inc
lcall
int
xchg
dec
pop
js
in
cmp
and
push
xor
pop
jnp
xchg
xchg
popf
ret
mov
decb
and
mov
mov
ljmp
ds
adc
sbb
add
cld
mov
sub
and
mov
pushaw
push
daa
scas
sbb
jge
test
push
push
in
mov
xor
cmpsb
mov
sbb
enter
out
xchg
jb
cmpl
mov
inc
pushf
and
sbb
scas
xor
jne
cli
mov
ljmp
dec
shrl
shr
ljmp
test
sbb
mov
jnp,pn
fbld
rol
out
jns
sbb
icebp
xchg
add
icebp
lcall
sbb
jecxz
push
out
enter
jb
mov
push
xchg
inc
cmp
lret
mov
dec
mov
xor
dec
roll
call
mov
dec
js
or
or
loope
pop
mov
jns
cmp
cvtpi2ps
inc
mov
icebp
adc
dec
imul
lds
mov
dec
test
ret
pushl
xor
push
jns
shrb
mov
je
inc
cmp
inc
fldt
push
push
rcll
call
cmp
push
jae
adc
lret
push
lcall
ja
sbb
and
mov
mov
mov
pop
js
aad
mov
jmp
jae
cmpsl
mov
cmp
lahf
ficompl
stc
call
cmp
cmc
push
loope
inc
sbb
lcall
cs
insl
xor
or
data16
shlb
imul
outsb
sar
pop
mov
fwait
into
daa
fcoml
jnp
cs
leave
movsb
adc
mov
sbb
xchg
xchg
ja
adc
xlat
pop
push
insb
jno
gs
dec
sbb
sub
mov
sbb
std
and
pusha
add
sub
dec
sbb
mov
mov
es
test
out
or
jo
dec
sbb
cmp
jle
iret
push
cltd
cmp
incl
lea
xchg
nop
and
mov
xchg
push
unpckhps
mov
jo
mov
movsl
aad
int3
xor
clc
fidivrl
push
sarb
mov
mov
lcall
fisttps
rol
or
fs
sub
mov
mov
pop
lock
rclb
mov
pop
push
or
rcl
or
popa
ja
movsb
add
leave
or
js
fsubs
jb
pop
pop
xor
fmuls
cmp
push
mov
fs
or
cmpsb
jae
mov
pop
ljmp
xor
repz
and
fs
idivl
mov
mov
call
sbb
pop
mov
cld
shll
pop
cmp
mov
push
mov
inc
adc
es
hlt
rorl
mov
xchg
in
xor
pop
and
mov
pushl
test
push
cmp
push
mov
movsb
mov
add
xor
daa
das
sar
subb
je
scas
popf
aaa
cli
mov
sbb
call
dec
std
mov
dec
xchg
sbb
adc
iret
mov
or
adc
sub
jecxz
aad
aad
inc
add
pop
sbb
mov
mov
aad
dec
stos
decl
rorl
mov
sahf
cmp
or
loop
loopne
jno
es
fwait
shll
jg
adc
inc
push
fildll
ja
add
lcall
jmp
mov
jge
push
push
mov
repz
push
sbb
xchg
add
in
fwait
in
mov
cmp
adc
nop
clc
addl
dec
loopne
stos
stos
xchg
inc
cs
mov
lcall
push
jno
sbb
fisubs
adc
cmp
mov
mov
psubd
jmp
adcb
pop
or
cmp
les
cmp
out
ss
stos
mov
arpl
sub
mov
test
fstl
call
xchg
mov
inc
mov
inc
sbb
cmp
dec
xlat
lcall
pop
insl
btl
jmp
js
xor
popa
mov
insb
cmpsl
adc
xchg
aas
daa
mov
fcmove
test
jl
rcrl
lcall
in
xor
mov
out
ja
sub
mov
bound
push
jg
push
adc
out
outsl
rorb
inc
or
and
push
fs
decl
out
mov
in
push
pop
pop
jo
ficoml
xor
push
cs
loope
mov
lcallw
xlat
mov
xchg
adc
jne,pt
jmp
out
andb
xorb
push
aas
loope
jecxz
out
sub
rcl
cmp
repnz
popf
push
dec
mov
imul
stos
xchg
jle
or
cwtl
sub
push
ljmp
cmp
mov
mov
or
les
adc
xor
xor
jl
dec
and
cmp
and
outsl
outsl
pop
xor
out
out
test
xor
mov
and
or
mov
jmp
push
ret
inc
aas
xor
sbb
sub
nop
out
and
pushl
fistpl
jno
loope
cmp
sub
mov
pushl
fs
sahf
ret
test
sbb
xor
cltd
int3
push
hlt
outsb
pop
cwtl
jns
mov
adcb
pushl
in
cmp
sbb
ja
icebp
cmp
test
repz
add
push
cmp
pushl
xor
lcall
cmp
jns
lret
aaa
insl
je
add
push
cmpsb
jg
jmp
and
insl
sar
mov
sub
stos
cmp
shr
roll
jg
ljmp
lods
adcb
cmp
cmp
dec
bound
push
dec
jecxz
aad
sti
pushl
adcb
and
nop
int
test
cmpsl
pop
push
or
out
je
mov
mov
decl
fstps
push
mov
cmp
scas
movsb
and
and
ret
xchg
mov
sbb
fcompl
sbb
dec
aas
lods
lcall
and
call
fisttpl
cmpsl
iret
push
aaa
rcll
mov
lcall
pop
in
shlb
inc
das
or
jp
mov
xchg
jl
in
sbb
mov
imulb
fwait
lock
out
in
and
xchg
mov
push
cltd
sti
jne
mov
imul
jmp
shrb
sub
test
mov
dec
mov
daa
stos
jbe
out
jmp
lcall
or
push
cmp
shrl
int
push
aaa
sbb
add
sub
std
xlat
jge
rcrl
dec
sbb
imul
scas
push
xchg
test
xchg
push
std
jmp
shll
jbe
add
fsubr
dec
bnd
mov
mov
xchg
stos
insb
enter
xchg
jae
lock
sub
cltd
stos
sbb
popa
dec
and
js
ret
imul
arpl
mov
lahf
pop
push
add
mov
push
mov
aam
jno
mov
sbb
sbb
pop
xor
or
mov
push
or
call
nop
mov
fs
xchg
push
push
mov
jg
je
popf
popa
ja
jae
add
lcall
jg
mov
mov
loopne
mov
jmp
mov
pop
jno
call
and
outsl
cmpsl
aam
add
es
or
arpl
push
pop
pop
negl
push
sub
mov
xchg
sub
lret
pop
lock
incl
repnz
mov
shlb
cmp
cmp
fimuls
cmp
popf
aam
decl
add
mov
fstpt
dec
jnp
lret
jge
jmp
lea
xchg
mulb
sub
sub
xor
incl
mov
decl
mov
cmc
cmp
push
dec
mov
sbb
or
mov
jnp
cltd
mov
add
dec
into
add
adcb
sub
dec
test
call
mov
cmp
repnz
jns
out
ret
adc
cmpsl
mov
in
xlat
call
or
nop
pusha
insl
repnz
sub
xchg
push
mov
push
inc
and
dec
inc
or
inc
add
mov
jmp
shl
mov
mov
fisttps
lds
sbb
xchg
jmp
arpl
mov
enter
push
cli
cmp
push
inc
daa
movsl
pusha
mov
adc
or
stos
mov
mov
and
dec
mov
cmp
sub
mov
cmpsb
daa
ficomps
lcall
sbb
iret
les
sub
cmp
pop
ss
or
fisubrl
sub
ljmp
loopne
negb
insl
imul
int
xchg
mov
loop
out
cmp
decl
fistl
gs
push
sub
adc
sarb
popa
mov
mov
xchg
iret
xchg
ja
adc
mov
adc
out
dec
add
add
lea
clc
push
sbb
mov
call
cld
ljmp
fstl
daa
mov
in
inc
xor
stos
shrl
push
mov
add
ljmp
fsubp
jae
lods
mov
inc
pop
sahf
call
icebp
lods
add
or
ss
iret
push
jnp
jl
sbb
icebp
mov
ljmp
test
xchg
push
pusha
loope
cld
xor
xchg
outsl
cli
pushl
mov
ret
inc
push
mov
nop
pop
dec
sar
dec
jne
and
jecxz
dec
dec
imul
call
aas
repnz
jl
cwtl
push
mov
incl
clc
sahf
pusha
sub
inc
mov
and
repz
jp
or
xlat
sbb
xchg
sub
pushl
into
das
mov
popf
mov
cwtl
pop
test
pusha
xchg
pop
sbb
in
cld
insl
incl
and
jne
les
push
mov
or
pop
insb
js
fsubrl
sbb
les
xor
dec
jo
xor
jns
aad
mov
jmp
push
cmp
pushl
xchg
cmpsb
aam
adc
movsl
xchg
roll
movsl
js
ss
and
and
pop
ljmp
mov
test
sbbl
xchg
or
dec
mov
sbbl
sti
pushf
aam
adc
stos
xchg
ret
sub
push
in
or
lcall
cmpsb
xchg
not
xor
or
adc
mov
mov
pushl
sub
out
dec
dec
push
sub
shlb
insl
das
sub
mov
mov
and
pop
lock
in
cwtl
movl
ljmp
cmpsb
lcall
cs
cmp
xchg
mov
pusha
pop
aas
loopne
clc
adc
push
jp
ljmp
push
adc
fs
mov
icebp
out
das
cmp
mov
arpl
sbb
pop
testl
ljmp
addr16
rcrb
test
in
scas
dec
ss
in
push
xchg
push
pushl
shl
mov
loope
pop
jg
or
adc
jle
sub
pop
lods
xchg
jmp
jmp
in
sbb
sbb
and
inc
sub
add
xor
jecxz
mov
ljmp
jp
mov
lea
ds
xchg
enter
ljmp
lock
incl
dec
and
mov
add
popa
cmpsl
xchg
xchg
push
test
mov
aam
and
push
hlt
jg
decl
jge
inc
or
jb
sahf
std
xchg
pushw
in
in
je
jne
aam
aas
call
pushl
cld
push
lcall
icebp
or
mov
iret
mov
das
clc
aam
call
cmpsb
add
sbb
mov
stos
fwait
push
daa
dec
dec
mov
test
jb
cltd
sbb
and
sti
aaa
loope
xchg
outsl
xlat
roll
dec
add
sbb
inc
or
cmpsl
data16
xor
insb
stos
rclb
inc
push
in
xor
dec
aam
xchg
adc
loopne
popf
fadd
je
sub
or
push
mov
push
int
jl
mov
push
push
rcl
mov
les
cmpl
lds
insl
ljmp
add
nop
stos
lahf
dec
dec
clc
inc
aaa
jnp
xchg
push
jp
mov
cli
xchg
or
cmp
cmp
and
mov
fs
push
loope
jg
call
jge
and
and
aas
push
ljmp
dec
enter
movsb
sar
incl
fwait
inc
and
cld
mov
or
jae
imul
lods
and
lcall
mov
outsl
inc
inc
jmp
adc
loopne
pop
test
xor
insb
jo
ljmp
je
aaa
bsf
repnz
ss
mov
ja
jl
pop
orl
jnp
jle
sti
sub
pop
mov
and
fsubp
dec
insl
add
out
inc
cmpsl
xor
shlb
incl
cld
pop
pusha
and
push
aaa
xor
push
xchg
scas
mov
sbb
incl
mov
inc
aas
addr16
mov
das
mov
xor
cmc
je
lods
push
jmp
pusha
cmpsl
loopne
xchg
shll
xor
fsubs
inc
hlt
push
cmpsl
lret
rcrb
fcomip
sbb
mov
jb
inc
sub
xor
ljmp
and
mov
pop
pop
xor
jle
leave
fidivs
dec
pop
subb
test
jle
xchg
fisubs
push
sub
roll
std
sti
cmp
xchg
ret
or
mov
inc
testb
pusha
inc
js
sbb
adc
fwait
xchg
mov
mov
js
xor
mov
lcall
inc
jo
out
push
sahf
lahf
sbb
sub
stos
fidivl
sbb
lret
cmp
out
clc
pusha
xor
mov
pusha
mov
push
push
daa
jns
stos
inc
iret
lret
inc
or
int3
mov
enter
pop
cmp
shl
add
xor
in
lret
jb
mov
lcall
mov
adc
aam
scas
into
lret
shlb
aas
aad
jno
xchg
lret
jae
cmp
mov
mov
or
into
insb
popa
lcall
decl
loop
or
jp
insl
movsl
sub
fs
faddl
fs
pop
push
xor
arpl
or
incl
loope
cmc
mov
repnz
and
fistl
fwait
push
and
in
jle
fdivs
and
mov
pop
and
cmc
inc
popf
int3
push
jecxz
dec
dec
mov
and
js
mov
jno
cmp
cmpsb
jecxz
dec
jp
imul
or
cs
outsb
jmp
add
sbb
arpl
pop
ja
sub
popa
rorb
in
loope
add
incl
mov
pop
in
fimull
xchg
in
pop
jnp
aas
loope
in
scas
ret
pop
lock
cmp
sub
pop
fnstenv
lea
jle
sti
sar
call
pop
mov
push
xor
es
add
jp
cmp
mov
cmp
in
jg
xchg
rorb
push
mov
push
add
cmp
cmc
in
and
jbe
sbb
mov
fnstcw
pop
into
xchg
fisubl
mov
fnstcw
sub
pop
cmpsb
jbe
test
dec
test
arpl
cmp
sti
adc
into
lcall
jle
mov
or
push
jne,pt
add
scas
inc
mov
push
push
jae
mov
pop
das
fwait
ret
int3
xchg
adc
bound
xorb
push
sbb
cmp
or
pushl
repnz
addl
loope
sub
mov
cmp
mov
out
xor
lods
push
lcall
sbb
test
push
in
jbe
or
cmp
ljmp
ss
add
sarb
ret
pusha
rorb
sub
outsl
mov
out
xor
ljmp
add
pop
jo
xchg
lock
imul
mov
in
jns
or
pop
pop
imul
adc
xchg
and
xchg
cmpsl
mov
mov
stos
rcl
lcall
mov
mov
cwtl
pop
xor
call
push
mov
or
outsb
add
pop
rolb
popf
add
jmp
cs
add
fcomp
push
sub
cwtl
ficomps
mov
movsb
pop
fdivr
lcall
not
cli
push
and
test
ds
mov
mov
mov
test
clc
movsb
ss
rorb
xchg
jecxz
mov
fucomp
addr16
lock
sub
jae
fmulp
pop
shrb
lds
in
lcall
push
movsb
jmp
fs
or
scas
popf
mov
lods
push
cld
shll
dec
pop
xor
cmp
lcall
mov
incl
test
ret
push
xchg
popf
pop
jnp
inc
jns
push
ret
sahf
dec
imul
punpckhdq
mov
jns
fimuls
ss
in
and
test
dec
mov
es
dec
cmpsb
fistpll
fwait
incl
inc
jl
or
out
loop
popa
pusha
call
pop
pop
bound
jmp
dec
mov
pop
or
mov
test
in
pushw
arpl
sub
lcall
mov
jmp
lock
mov
repz
sahf
push
pop
jle
cmp
push
inc
lcall
cmc
mov
jmp
and
jp
lret
push
pushl
aad
lahf
in
insb
mov
and
insb
mov
fbld
fcoms
sbbl
push
jmp
scas
dec
scas
mov
rclb
sub
fstp
sbb
add
cmpsb
outsl
icebp
int3
in
call
incl
test
bound
sub
xchg
jge
push
jle
mov
popf
out
fnstsw
jns
incl
js
xchg
xor
rcl
outsb
jne
cmpsb
and
xlat
scas
sbb
inc
sbb
jmp
mov
aaa
cltd
outsl
in
inc
lods
mov
mov
decl
inc
shlb
and
mov
sbb
stos
or
std
in
fnstcw
xlat
arpl
jmp
jne
out
push
sub
pop
sbb
das
call
leave
push
int3
inc
lods
or
mov
pusha
jbe
cmp
xor
icebp
sbb
pop
js
add
and
shrb
pushl
arpl
into
pop
mov
fsts
out
push
inc
in
xor
stc
pop
faddl
add
idivb
cmp
add
pop
filds
push
add
pop
loope
push
xchg
arpl
mov
fnstcw
jmp
adc
jge
jge
jle
aad
jnp
andl
mov
push
mov
dec
add
xor
push
xchg
xchg
scas
leave
sub
outsb
push
insl
cld
push
inc
adcb
fadd
subb
and
cmp
stos
inc
xchg
arpl
xor
fildl
push
int
sub
call
add
dec
cli
scas
inc
xor
mov
outsb
hlt
sbb
dec
cmpsl
fdivr
xlat
test
pop
sbb
lock
sub
inc
addb
xor
cwtl
clc
add
das
stc
mov
mov
enter
call
mov
call
lret
lahf
or
ja
push
out
sub
in
decl
outsl
dec
mov
pop
xchg
dec
aad
addr16
test
push
jns
mov
jmp
push
xlat
mov
xor
repz
je
insb
loop
adc
shl
rcl
int
dec
sbb
jmp
jne
stos
jns
dec
sub
subl
addr16
sbb
jne
dec
gs
push
adc
cmp
ljmp
imul
adc
sbb
push
in
pushl
or
out
xchg
loope
dec
xor
mov
sub
orb
add
das
cld
mov
call
jge
jno
xchg
add
xchg
aas
or
jns
testb
jbe
mov
jns
pushl
divl
jae
inc
inc
clc
iret
jns
fisttpl
test
mov
call
push
jmp
int3
xchg
out
ljmp
push
sbb
jecxz
outsb
mov
cmp
ja
cwtl
mov
cmp
movsl
ret
jbe
in
cltd
sar
movl
push
xor
jmp
xlat
fmull
repnz
or
or
ss
imul
js
incl
push
into
jo
mov
loopne
sub
out
je
jne
jne
inc
fwait
incl
xchg
sbb
push
adc
add
and
enter
dec
ljmp
xchg
fs
lcall
pop
mov
sbb
dec
fsubrl
mov
jg
inc
mul
dec
sub
push
pop
adc
shl
cmp
addl
setno
imul
fimuls
cli
std
adc
xor
inc
push
sbb
lods
mov
pop
jle
sbb
and
popf
add
das
shrl
daa
imul
decl
pop
push
xchg
inc
out
mov
jo
into
jne,pt
rorb
btcl
xchg
sbb
push
xor
lret
pop
data16
sbbb
bound
shr
push
sahf
jnp
pop
mov
lcall
pop
iret
xchg
jae
cmp
or
test
cmp
pop
subl
hlt
incl
mov
mov
push
cmp
or
fs
ret
pop
sbbl
pop
ret
imul
pop
outsl
jbe
fld
inc
xchg
stc
popf
daa
mov
or
decl
jmp
inc
mov
pop
cld
cmc
pop
sbb
es
dec
rclb
mov
in
mov
mov
xchg
xor
scas
mov
adc
sbb
dec
xchg
jg
dec
adc
lea
or
sub
repnz
insl
popf
adc
out
imul
call
rcrb
sarb
mov
nop
inc
push
xor
push
icebp
jmp
divb
incl
add
or
sub
jns
mov
sbb
fdivrl
mov
in
jmp
jl
inc
call
lea
lcall
mov
sbb
lock
int3
xchg
ds
pushl
adc
outsb
sahf
sub
pop
or
das
movsb
pop
shll
jg
loop
and
stos
add
out
cmpsl
inc
ds
fsubp
fs
hlt
mov
sti
out
inc
lahf
outsl
clc
ljmp
dec
jns
jge
cmpsb
adc
mov
cs
ljmp
pushl
scas
jp
add
mov
or
mov
into
jp
inc
lret
dec
loope
add
inc
sbb
push
icebp
xor
cmp
insb
gs
decl
sub
addr16
jb
ds
xchg
pop
dec
pushf
das
int
out
int3
decl
call
hlt
push
xor
jb
lret
pop
mov
roll
adcl
cli
and
test
movsb
iret
iret
jae
subl
mov
test
inc
imul
lods
mov
test
es
loope
lret
cmpsl
sarl
inc
xor
fcomps
sub
jp
push
xchg
push
cs
sbb
mov
cmp
xor
jmp
jecxz
or
mov
scas
xchg
stc
push
shlb
or
cs
loopne
decl
adc
jb
cmp
sbb
mov
jb
mov
call
sbb
je
aad
imul
jp
xchg
adc
push
dec
pop
call
mov
mov
sbb
inc
and
imul
test
and
icebp
int
dec
mov
jb
push
int3
cld
inc
mov
pop
push
push
mov
and
call
fsubl
outsb
and
inc
in
push
data16
xor
dec
push
fsubl
scas
fdivr
cmp
pop
pushf
movsl
je
shll
pop
push
daa
cltd
hlt
xor
cmp
sti
pop
cmp
pusha
test
ret
mov
out
push
nop
into
push
lahf
add
adc
hlt
and
jge
cmp
xchg
xchg
iret
push
cltd
push
fwait
add
loop
sti
jp
cs
pop
insb
lret
or
mov
daa
cld
jmp
cmp
jg
outsb
adc
xlat
fidivs
mov
dec
cltd
jg
sbb
in
adc
fildll
or
cld
in
and
std
out
shll
pushf
pop
insl
mov
imul
loope
rolb
nop
inc
push
pop
movsb
cltd
jmp
lods
pop
rcr
push
pop
xchg
mov
pushf
xor
mov
inc
inc
push
sbb
fsubrs
xor
pop
push
lds
fs
lods
cmc
jecxz
or
leave
xor
scas
cli
call
in
jb
pop
lahf
lret
or
andb
cltd
mov
xchg
mov
jbe
and
ds
xchg
dec
dec
jmp
in
pop
jbe
sbb
stos
outsb
add
mov
out
pop
std
scas
js
ret
jb
lock
stos
sbbb
nop
movsl
imul
addr16
stos
aam
iret
das
inc
xlat
cli
dec
xchg
sarb
mov
inc
iret
pushl
std
cld
jae
imul
inc
out
push
pop
fldenv
jl
int
inc
cmpsb
pop
sahf
jecxz
dec
outsl
sbb
xor
push
pop
xchg
add
and
aaa
das
pop
sbb
jg
daa
rcl
xlat
outsb
sub
push
rorl
mov
cmpl
cmp
dec
sub
div
lret
pop
lcall
movsl
loopne
xor
mov
test
dec
cld
scas
xlat
sar
or
xchg
pushf
aam
inc
push
lods
mov
scas
lds
dec
sub
jp
push
cld
incl
xor
ja
test
sti
mov
pop
test
ljmp
mov
jne
sub
inc
jo
aas
lcall
mov
xchg
mov
lods
dec
loop
xchg
push
mov
xchg
lcall
jnp
push
and
mov
push
nop
push
add
js
and
xchg
out
mov
push
incl
push
test
and
and
fistpl
inc
test
scas
test
cmp
push
mov
mov
fsubr
call
nop
sti
push
lods
xchg
xchg
jno
addr16
sub
lcall
test
lahf
bnd
fwait
pop
roll
mov
popl
and
add
adc
je
cmp
add
add
mov
ljmp
shl
push
jns
shr
scas
idivb
pop
xor
clc
ljmp
shrb
cmpsb
ss
lahf
push
cltd
clc
mov
iret
push
mov
test
jle
decl
sub
xchg
pop
fs
mov
sub
cmp
lcall
mov
test
inc
mov
mov
mov
orb
dec
in
mov
lcall
jl
mov
or
insl
loopne
mov
pushf
jbe
pop
fstpl
sar
or
mov
add
rcr
jle
cli
lret
in
sub
pushf
loope
push
mov
cmp
scas
jno
push
inc
cmp
into
shr
pop
adc
or
add
aad
jmp
push
sub
aam
sub
mov
fcmovu
insl
pushl
movsb
xchg
xchg
push
call
mov
es
pop
push
cmpsl
aad
pushw
mov
xchg
lods
push
add
push
sar
jg
stos
pop
jle
repnz
adc
dec
in
js
out
decl
adcb
xchg
sbb
inc
and
xchg
outsl
loop
push
lods
mov
stos
loopne
ds
xlat
jp
test
mov
xor
stc
movsl
testl
call
fidivl
daa
sarl
es
pop
inc
jge
or
adc
cmc
sub
jle
mov
mov
popa
daa
lahf
out
cmpsb
push
cli
dec
xchg
std
jge
pushf
mov
loope
cwtl
cwtl
fisttpll
xor
push
pop
cs
jg
pusha
pop
ret
add
sub
test
in
jns
ljmp
lcall
cmp
outsl
fcomps
jo
adcb
jl
int3
jno
aas
daa
sbb
cmp
mov
pushl
sub
fsubp
test
or
dec
js
jnp
dec
fidivl
push
in
xor
sbb
ret
jg
sti
sub
sub
int
xor
loop,pn
jb
lods
std
inc
dec
mov
mov
sar
mov
shld
cmp
cwtl
leave
cmp
mov
lcall
lds
int3
mov
lret
test
outsl
aaa
aaa
int3
push
int
sbb
xchg
push
xor
incl
arpl
xlat
sub
cmpsl
jns
inc
mov
cld
mov
insb
jg
sub
stos
and
xchg
int3
sbb
push
shl
jns
sub
xor
ret
jg
cmp
mov
leave
stc
adc
pusha
jne
or
or
xor
xlat
sub
cmp
fimull
sub
mulb
orl
into
sahf
add
scas
and
cmc
pop
push
ficomps
negl
mov
cmp
ja
push
pop
fwait
stos
or
incl
test
testl
adc
pop
ret
and
fldcw
sti
iret
andb
call
jae
pushf
inc
mov
mov
je
or
dec
pop
imul
scas
dec
dec
mov
xor
and
or
xchg
inc
xchg
add
inc
jnp
ret
incl
xchg
sahf
ss
popa
jle
cltd
jl
mov
aam
out
decl
stc
push
sub
add
adc
xor
dec
mov
xchg
lret
out
dec
mov
pop
pop
push
mov
jmp
xor
das
idivb
mov
mov
or
jg
in
xor
jno
mov
xchg
lock
call
cmpl
cmpsl
pop
xchg
xor
mov
mul
adc
lcall
daa
adc
popa
dec
repnz
testb
add
addl
dec
ljmp
clc
push
aam
popf
xor
fisubrl
sub
leave
jp
push
jne
sub
mov
sbb
xchg
adc
or
clc
lcall
mov
out
int
lods
ss
cmp
push
jmp
scas
or
shlb
stos
and
loop
mov
mov
mov
and
pushl
iret
dec
enter
fisttpll
mov
mov
test
mov
subb
cld
jmp
rcrl
imul
add
insb
pop
aam
sub
pushf
xchg
jl
stos
gs
lds
mov
cmc
cwtl
lods
xchg
aaa
xchg
out
push
inc
mov
ret
decl
pop
jge
dec
push
mov
test
ljmp
xchg
mov
in
jmp
and
stc
loop
in
mov
sub
repnz
loop
inc
push
roll
pushf
addr16
mov
ficoms
aam
xchg
fs
sbb
iret
jne
lcall
gs
movsb
loopne
add
loope
mov
mov
sahf
sbb
int
mov
and
pushl
ja
leave
jbe
xchg
adc
cmp
jbe
lahf
inc
test
pop
mov
movsb
xchg
cmpsb
jmp
inc
push
stc
cwtl
pushf
enter
mov
cld
int
clc
nop
and
dec
ds
inc
aam
test
add
xor
addr16
lea
je
jmp
int3
adc
sub
imul
or
imul
pusha
xor
das
jno
addb
push
loopne
cmpsl
ja
sarl
mov
decl
inc
mov
jle
lahf
xchg
jne
xchg
sub
fcmovnbe
loop
fdivl
and
out
mov
dec
jae
in
mov
adc
in
pusha
call
jecxz
xchg
icebp
jge
jle
add
xchg
adc
cmp
mov
or
movsb
xor
lcall
mov
jl
jnp
into
repnz
rcr
push
push
les
mov
cli
dec
cmp
cmp
sahf
iret
mov
lret
out
icebp
jg
ffree
push
cmc
fists
mov
cmp
jp
sbb
or
xchg
mov
imul
in
mov
into
push
sub
jp
scas
out
jno
fsubl
xchg
jne
mov
or
and
stos
je
add
mov
sbb
sbb
xor
mov
into
ds
pop
pusha
adc
push
pop
xchg
pop
or
decl
cltd
jecxz
mov
rorb
sub
pushf
pop
and
push
inc
sbb
ljmp
cmp
dec
arpl
enter
pop
adc
arpl
loopne
cmp
push
sti
outsl
decl
data16
dec
lods
in
xlat
pop
add
inc
pop
inc
stos
xchg
xor
popa
ret
and
lcall
xor
adc
les
insl
nop
test
dec
cmp
xchg
repz
pop
in
incl
lcall
pop
shrb
adc
and
mov
pop
mov
pushl
cwtl
pop
xor
mov
ss
xchg
mov
or
mov
repz
decl
cli
and
cmp
push
add
dec
out
ret
iret
mov
pop
mov
call
cmp
xlat
jg
add
xchg
pop
enter
inc
xlat
and
insl
pop
into
mov
xor
dec
iret
and
mov
lods
sbb
pop
int
or
or
mov
dec
imul
add
or
cmpsl
jge
pop
out
es
fisttpll
iret
push
xchg
push
decl
ja
sub
sbb
movsl
scas
mov
mov
xor
and
ljmp
cmp
inc
cmp
push
sti
pop
gs
hlt
adc
fs
inc
fildl
pop
fdivrl
jno
add
outsl
sub
lcall
pop
repnz
sub
jmp
xor
xchg
xor
shll
subb
sbb
mov
add
sbb
dec
ds
pop
mov
repnz
or
and
mov
xchg
in
cmp
jl
and
pop
movb
xchg
pop
xor
in
xor
cwtl
aad
pop
jo
push
jnp
inc
es
call
dec
lret
push
jl
jns
sbb
roll
inc
ss
jg
dec
inc
sbb
popf
or
call
pop
cli
into
mov
sbb
xchg
jmp
push
scas
lods
adc
ja
mov
mov
cmp
rcll
mov
das
jnp
sub
or
andb
or
dec
inc
or
inc
int3
adc
pop
mov
testb
lods
mov
cmp
mov
rcrl
sub
push
push
xorb
push
or
incl
inc
daa
movsb
mov
scas
inc
sub
add
cmp
push
cli
loopne
out
std
in
rorb
mov
pop
mov
dec
add
imul
adc
xor
sbb
fldt
inc
movsl
add
ljmp
sbb
inc
or
or
lcall
lods
ror
mov
cld
lods
mov
sub
push
sub
xchg
out
cli
jge
xchg
mov
cli
orl
mov
imul
out
jnp
cltd
hlt
pop
cmp
inc
mov
mov
mov
in
push
jo
test
jg
dec
hlt
sub
std
xor
sbb
mov
mov
jle
add
das
idivl
lahf
jo
bsf
mov
rorb
pusha
ljmp
clc
gs
testl
pop
mov
mov
out
mov
pop
incl
out
repnz
and
dec
and
lds
ret
out
imul
movsl
dec
mov
das
add
incl
push
sbb
mov
sub
cmp
sbb
or
pushl
cmp
lea
in
sbb
nop
test
and
dec
xchg
mov
mov
xlat
ljmp
add
sub
fwait
and
and
sub
incb
and
mov
xchg
mov
leave
push
aam
xchg
sub
pushl
mov
loop
pop
daa
pop
mov
rorl
in
in
fldt
xor
mov
push
ljmp
pusha
pop
imul
add
mov
jnp
add
and
in
dec
jmp
nop
xor
or
mov
into
or
test
inc
or
insl
fimull
xchg
and
xor
decl
push
int
scas
mov
xchg
inc
int
push
sbb
shr
jp
xchg
push
xor
test
push
cwtl
or
stos
xor
sbb
jle
popf
add
mov
add
rcrb
pop
mov
or
ficoml
and
test
push
in
roll
stos
jmp
dec
or
bnd
mov
sahf
inc
lods
adc
cmpsb
in
outsl
or
push
decl
sub
setbe
xchg
outsb
fld
mov
lcall
cs
cmp
xchg
or
cmp
fildl
fucomip
inc
hlt
xor
cmpsl
cltd
aad
fimull
cwtl
imul
sti
mov
js
mov
sub
pop
scas
or
stos
ficoml
xlat
mov
sbb
fwait
movsb
in
jg
push
push
pop
rcrl
lret
pushl
push
sub
das
adc
daa
and
pop
adc
pop
and
scas
mov
jmp
dec
xor
add
sbb
sti
fisubrs
push
les
enter
mov
mov
sbb
push
xchg
xchg
xchg
nop
pushl
popa
xchg
xor
lret
repz
fistl
adc
mov
lcall
fsubs
fwait
imul
out
xor
js
int3
xor
outsb
sbb
adc
addr16
test
ljmp
xor
sarl
jne
in
add
ror
rorb
int3
shlb
mov
xor
adc
and
sarb
push
lret
rolb
dec
popf
dec
jnp
pop
std
add
aad
mov
lahf
xchg
xor
xor
pushl
dec
pop
outsb
test
arpl
js
inc
xchg
out
inc
test
addl
mov
mov
and
mov
push
testb
ljmp
jg
inc
inc
mov
sub
dec
sub
jp
xchg
push
decl
in
xchg
imul
adc
jbe
out
add
ja
movsl
lock
jnp
lods
decl
out
insb
mov
mov
inc
and
mov
pop
mov
call
inc
mov
fwait
repz
icebp
dec
pushf
push
pop
loopne
adc
cmp
je
ret
sbbb
pushl
test
test
and
js
test
bound
lds
inc
dec
adc
stos
pusha
call
cmpsl
pop
push
jo
add
sub
push
icebp
adc
push
xchg
add
clc
cmp
cmp
decl
inc
scas
adc
cltd
inc
mov
pop
fs
cmp
sbb
enter
into
mov
js
or
pop
mov
or
jo
push
in
inc
pop
cmp
mov
fcoms
cmp
dec
xchg
cmp
ljmp
in
adc
mov
cli
and
and
aas
jne
inc
nop
call
xchg
cmp
jno
sbb
mov
dec
mov
xchg
and
dec
lret
bound
push
adc
cmp
jmp
add
mov
insb
mov
pop
fstpl
into
pop
inc
pusha
ret
dec
fs
xor
fcomip
xor
sub
repz
clc
xor
std
lods
imul
mov
in
mov
add
cmpsb
and
and
mov
mov
ret
mov
pushl
stc
inc
rorl
pusha
ret
mov
cmpsl
pop
jg
jg
jo
insb
nop
push
add
jl
leave
mov
test
testb
sub
sahf
rorb
and
inc
lret
in
test
xor
sbb
lcall
sub
adc
es
out
dec
sub
sahf
js
js
mov
loopne
movsb
mov
das
clc
ljmp
jge
pop
call
jge
imul
dec
andb
out
pushl
idiv
call
mov
lcall
jo
outsb
ja
push
dec
fsts
ljmp
cltd
data16
push
add
je
sbbb
arpl
adc
shlb
mov
fldenv
push
lret
in
mov
sub
loop
and
sub
call
mov
addb
dec
pop
hlt
fs
fcoml
jp
js
sahf
xor
jmp
adc
gs
mov
push
dec
loope
je
cs
mov
cmpsl
lcall
mov
cmp
jb
mov
inc
rol
cmc
nop
nopl
inc
push
cmp
and
push
sbb
xor
mov
sahf
leave
in
xor
dec
inc
test
incl
mov
movsb
repz
fnsave
xchg
negb
loop
lods
push
or
cltd
cmp
push
push
add
stc
incl
xor
sbb
std
inc
pop
mov
pop
or
mov
adc
or
sbb
xchg
sub
xchg
insl
mov
in
sbb
adc
repz
jecxz
cmp
jp
cmc
shll
sub
jnp
xchg
add
xor
stos
aam
adc
cmp
jbe
insl
ret
add
cwtl
lcall
jmp
push
and
call
hlt
lods
xchg
jne
nop
sbb
pop
adc
jmp
mov
mov
jle
fwait
push
repnz
push
xchg
mov
decl
testl
rcll
mov
and
and
add
inc
lcall
decl
dec
ret
and
shll
lret
push
lret
lea
cmp
lea
or
decl
or
jne
add
fwait
and
test
testl
out
clc
jg
mov
mov
pop
sub
sub
cmp
les
lret
test
fistpl
sub
ljmp
out
or
mov
clc
adc
inc
adc
in
lahf
loop
and
sbb
cmpsl
sub
dec
in
orb
mov
mov
mov
fmul
scas
pop
jl
lcall
sub
jmp
jne
jecxz
xor
call
and
mov
cmpsl
popf
dec
popl
jecxz
mov
and
cltd
xor
out
lods
lock
addr16
jmp
ret
jl
jmp
mov
jmp
mov
cmp
dec
shrl
inc
xchg
clc
pop
out
cs
jae
popf
lfs
add
call
shlb
int
xlat
adc
pusha
int
xchg
cmp
cmc
ffreep
icebp
cmpsb
mov
dec
xchg
ljmp
or
add
adc
jge
cwtl
pop
pop
fcoml
aaa
dec
test
fsts
inc
out
jge
lcall
call
or
xchg
mov
aas
mov
scas
mov
jmp
fidivrl
or
test
jmp
js
add
and
push
jb
pop
pop
pop
test
and
push
inc
xchg
sar
addb
sbb
or
mov
and
sti
mov
push
inc
rorl
lods
stos
orb
ja
jp
scas
test
xor
enter
xchg
lret
jg
dec
cld
lods
in
popa
sbb
mov
pop
stc
aaa
not
scas
xchg
cmpsl
aad
mov
incl
sahf
and
mov
and
mov
mov
or
aaa
sub
stc
adc
movsb
fdivrp
push
add
repnz
out
sbb
movb
aam
jbe
test
in
ljmp
jae
mov
loopne
imul
add
imul
jg
inc
dec
andb
add
sub
adc
movsl
xor
repnz
nop
sub
add
incl
ja
and
xchg
xchg
aaa
mov
and
shlb
stc
out
pop
loop
call
nop
add
xor
clc
mov
jmp
push
jg
or
movsb
add
xlat
cmp
xor
inc
mov
dec
xchg
jae
imul
push
aas
sbb
xor
lods
xchg
add
push
lahf
jb
xor
mov
push
lea
aas
adc
decl
cmpsb
testl
and
cmp
lods
int
mov
xor
test
faddp
push
decl
cmpsb
sahf
aas
push
mov
mov
or
sbb
jp
mov
sub
sbb
xchg
and
jmp
cmpsb
lods
aas
and
sub
loopne
pop
jg
shl
jb
mov
mov
arpl
popl
test
decl
shll
std
addr16
jl
xor
dec
fisubrl
adc
jl
xchg
mov
rorb
dec
mov
push
nop
sbb
pop
mov
mov
pushl
push
add
inc
cltd
jno
mov
js
mov
pop
test
cmpsb
xchg
push
out
pusha
inc
inc
or
cmp
cli
pusha
cs
sub
ja
popf
jmp
ficoml
out
fisttpl
es
xor
dec
mov
mov
fisubl
idivb
jp
adc
pop
dec
push
mov
ljmp
pushf
mov
repz
push
in
jge
mov
inc
mov
pop
lods
lahf
into
push
dec
dec
stc
dec
mov
mov
push
fisubl
xlat
jo
pop
cltd
shl
jbe
orb
mov
fdivr
lcall
jbe
cmpsl
xchg
test
mov
sbb
rclb
popa
sub
ljmp
add
jnp
orl
loop
data16
jecxz
mov
mov
xchg
inc
loope
test
into
addb
and
mov
mov
sarl
and
incl
test
or
mov
in
negb
scas
ljmp
ss
outsl
push
xchg
adc
jo
std
xchg
pop
fdivl
jns
subb
test
movups
les
lock
ret
push
ret
add
pop
pusha
jae
in
aam
in
je
mov
test
pop
icebp
incb
inc
push
daa
mov
ja
lcall
sub
lods
test
sbb
aam
lcall
sub
adcb
scas
int3
push
mov
daa
ffreep
mov
mov
xlat
sar
jmp
popf
or
pop
int3
lea
sahf
stos
mov
aaa
imul
jg
dec
inc
popf
adc
mov
xchg
aas
aad
xchg
fsubrs
shlb
es
decl
shll
mov
scas
ret
cli
rol
inc
lock
sub
push
add
ret
incl
dec
and
outsl
je
cltd
lods
out
mov
xor
sbb
add
mov
push
dec
jbe
add
ds
add
inc
adc
into
push
call
push
sub
test
lcall
mov
in
mov
out
dec
dec
addr16
add
dec
mov
out
test
call
leave
jmp
push
es
mov
push
sbb
jle
sti
xor
ljmp
fistpl
enter
xchg
or
out
dec
out
insl
push
mov
aad
out
pushl
das
test
outsb
fidivs
jb
push
inc
repnz
addr16
sbb
call
cmp
lods
jnp
pop
mov
push
xchg
imul
lcall
push
xchg
fistps
cld
adc
arpl
iret
es
in
dec
add
jmp
add
push
sbb
dec
xor
ret
fstpt
xlat
adc
fnstenv
enter
in
incl
fmuls
mov
test
or
jne
int3
inc
jecxz
ljmp
dec
inc
or
adc
and
dec
mov
sbb
cli
call
ds
loope
ss
addb
push
int
dec
and
cmp
aam
ljmp
xlat
fisttpl
push
pop
push
imul
mov
or
enter
push
cltd
push
xchg
and
out
stos
call
lods
dec
cmp
ss
fs
lret
jg
adc
fwait
mov
add
xor
mov
inc
ljmp
pop
loopne
mov
int3
sbb
test
jmp
add
ljmp
loope
cmpb
mov
ret
xchg
lock
std
incb
xor
pushl
sub
mov
out
inc
xor
lods
je
mov
mov
call
pop
iret
pop
pop
aaa
inc
xlat
repz
jnp
mov
push
lcall
cmp
aas
iret
hlt
dec
inc
add
dec
ss
jbe
cmc
imul
stc
mov
jb,pt
dec
lcall
xchg
jl
testl
and
inc
inc
sub
jmp
inc
mov
sbb
mov
xchg
fcmovu
inc
mov
xor
mov
mov
daa
mov
repz
jmp
aaa
sub
push
cmp
jmp
sub
leave
mov
and
mov
lcall
mov
shll
dec
xchg
sbb
jecxz
or
or
vandnps
jmp
pop
lcall
cmpsl
mov
outsl
mov
jg
inc
push
cmp
loop
xchg
js
sub
cmpsl
fcomps
or
add
mov
push
mov
scas
xor
mov
ret
push
decl
push
sbb
pusha
lret
fisttpl
fsubl
mov
pand
lcall
scas
push
fiaddl
daa
jle
mov
or
mov
push
dec
push
lock
mov
leave
lods
sub
test
aad
jo
in
repnz
cli
inc
and
incl
mov
dec
lret
mov
lea
outsl
pop
xor
xchg
adc
cmpsl
loop
lcall
mov
movsb
mov
shrl
sub
test
ja
dec
sbb
inc
js
dec
push
fistpl
mov
mov
pop
cli
xchg
roll
fisubs
test
call
adc
incl
test
xlat
iret
inc
cmp
sahf
bound
xchg
jae
cmp
negl
sar
incl
push
adc
je
aad
aad
popf
popf
sbb
jb
loope
sub
pop
rcrl
add
das
jnp
mov
mov
sbb
jecxz
in
sbb
pop
dec
pop
cli
xor
pop
push
andb
push
jecxz
test
mov
call
pop
xchg
xchg
lret
cmp
jb
dec
xor
cmp
xchg
cmp
add
fildll
stc
in
idivb
mov
in
sbb
pop
jb
out
notb
mov
int3
je
sar
add
orl
and
pop
mov
incl
inc
cmpsl
xor
dec
jo
test
xor
push
mov
xor
popa
mov
jmp
test
inc
inc
out
xor
inc
aas
lods
adc
pop
dec
cmpsb
mov
mov
sbb
shlb
push
in
jg
pusha
es
sbb
jg
mov
mov
and
jo
and
call
mov
out
inc
shlb
loopne
pushl
lods
add
in
or
xchg
or
decl
lock
push
mov
cmp
lods
adc
inc
jge
cld
lcall
sti
cmp
or
clc
fdivrs
aam
cwtl
or
adc
pushl
mov
sub
inc
jae
mov
clc
outsb
sti
and
fstl
test
pop
cld
lock
mov
push
pop
xor
sahf
mov
dec
int3
xlat
jg
lds
pushl
mov
inc
sub
test
fistpll
and
inc
mov
xchg
sti
mov
int
jg
subl
pusha
push
xchg
push
in
lea
pop
cmpb
pop
arpl
out
adc
dec
daa
mov
imul
lcall
outsl
xor
lock
repz
cmp
add
and
fdivrs
outsl
rcll
cld
inc
xor
mov
call
fsubrs
scas
jmp
push
loop
inc
mov
stc
push
xchg
in
adc
pop
adc
flds
mov
incl
movsl
cmp
movsb
jmp
and
into
cwtl
cmc
ds
mov
fprem1
pop
dec
cld
pushl
and
pop
data16
xchg
movsl
sbb
adc
in
mov
inc
jp
mov
insb
fcomi
push
xor
mov
scas
sub
dec
add
fsubs
fimuls
mov
xor
add
xlat
lods
ljmp
cli
sub
jb
xchg
ret
dec
mov
xchg
adc
jecxz
sarl
or
mov
rorl
dec
ret
xor
addr16
mov
es
pop
pop
push
mov
inc
daa
mov
xchg
jae
leave
dec
jae
inc
xchg
mov
cmp
sar
imul
ljmp
outsb
xchg
xlat
mov
adc
movsl
aaa
rol
js
push
test
cmp
mov
push
add
addr16
or
std
pop
out
loopne
inc
fstpt
les
jg
lcall
sub
mov
in
cltd
push
xor
loopne
inc
push
rcrb
cmp
int3
fldcw
ss
pushl
popf
push
and
cmp
mov
cmp
je
jb
test
ljmp
test
mov
xor
call
leave
ljmp
sub
mov
push
mov
leave
xor
into
pushf
lods
data16
mov
cld
push
aaa
xchg
inc
gs
pop
cmp
testl
pop
inc
xchg
int3
stos
je
out
mov
aaa
sbbb
ds
out
les
cld
outsl
and
jmp
dec
inc
andb
jecxz
out
pushf
sub
lcall
mov
jno
pop
in
sub
and
inc
test
xchg
mov
jecxz
jle
cmp
decl
insl
push
leave
mov
or
rcr
lret
mov
dec
std
cmp
inc
scas
call
ljmp
adc
fst
adc
ret
add
lods
cmp
lahf
lret
insb
ficoml
cs
inc
andb
call
jmp
pop
push
sahf
cmp
mov
pop
lret
push
or
testl
incl
xor
xor
sbbb
jo
pop
outsl
loop
cld
loop
sub
pop
lods
outsl
pop
dec
cmp
in
cli
jns
sahf
jns
fnstenv
xorl
cltd
das
sar
outsb
ja
sub
jl
aam
lahf
loope
xor
ljmp
lods
dec
or
adc
out
mov
repz
mov
fnclex
popf
mov
cwtl
scas
inc
fwait
jae
insb
push
cld
cmc
out
arpl
xor
xor
and
sub
sti
ret
dec
mov
cmc
inc
mov
sub
loope
jge
arpl
repnz
cmpsb
arpl
or
clc
mov
decl
sub
std
stc
fdiv
cmp
pop
inc
mov
mov
ljmp
and
hlt
lea
addb
push
mov
and
mov
leave
icebp
xchg
add
push
dec
mov
pop
pop
push
sbb
add
ljmp
jge
adc
loope
ficompl
and
rcll
lds
sbb
in
xchg
xor
leave
cmp
stos
test
dec
cli
pop
incl
sub
cli
cmp
mov
js
fisubl
sub
xchg
aam
mov
dec
cmpsl
hlt
inc
jns
scas
xchg
fidivl
call
cmp
pop
jp
inc
pop
imul
dec
mov
adc
sub
clc
or
stos
inc
ds
call
leave
xchg
or
cmp
insb
sub
shl
pop
lock
jo
sti
lods
subb
call
outsl
cmp
mov
mov
je
int3
addr16
cwtl
pop
std
inc
adc
jecxz
push
fstpt
popa
fidivl
adc
lods
stos
inc
jmp
lods
cmpsb
push
xor
mov
xchg
jno
scas
ret
test
jbe
das
fstps
mov
mov
out
dec
leave
dec
xor
fwait
fwait
or
lea
adc
xor
and
fadds
daa
iret
fcomip
cmp
sbb
daa
incl
nop
xorb
pop
xchg
outsl
add
outsl
cli
call
jge
lahf
outsl
out
rolb
daa
cmpsb
push
adc
cld
bound
mov
jecxz
jle
lea
imul
pop
stos
inc
xchg
subb
scas
sahf
test
shrb
movsb
sub
mov
add
fistps
add
lret
adc
inc
jb
push
xor
call
cmp
popa
data16
imul
aas
cwtl
sahf
fwait
bound
inc
add
sbb
out
cli
inc
jns
pop
lret
mov
repz
aaa
arpl
jle
movsb
fidivs
fbld
ret
test
dec
lea
push
rclb
test
in
pop
pop
mov
mov
ljmp
mov
pop
mov
bound
push
mov
int
xchg
jmp
sub
clc
ljmp
sti
lcall
sub
popa
adc
push
repz
dec
push
call
pop
mov
icebp
idivb
cs
cmp
xor
pop
sbb
decl
pop
lea
adc
pop
aas
lahf
nop
inc
rorl
xchg
mov
clc
jg
add
enter
inc
decl
xchg
push
jnp
adc
loopne
scas
sub
loop
adc
xchg
ret
lret
dec
inc
gs
mov
add
out
out
ret
fldcw
movsl
out
jp
mov
pusha
pushl
roll
push
dec
shlb
icebp
insb
or
mov
and
cld
mov
fldcw
incl
ret
sbb
dec
scas
adc
lret
push
push
sbbl
xor
pop
jge
push
int
pop
adc
inc
ror
rcll
lea
jb
mov
push
xchg
aam
je
in
ljmp
ljmp
clc
or
xchg
dec
int
sahf
mov
xor
mov
arpl
ljmp
stos
mov
push
jns
out
sub
push
jmp
add
mov
mov
decl
ret
mov
mov
insl
mov
aad
adc
jmp
iret
shl
andb
xchg
mov
scas
hlt
sub
xchg
mov
rep
mov
outsb
shlb
cltd
mov
and
push
call
cli
outsb
jle
popf
ljmp
sar
pop
out
aas
jns
or
jbe
enter
out
fimuls
or
pop
call
pop
push
fmuls
push
jne
mov
gs
xor
adc
push
fisubrs
out
movsl
adc
jne
rol
dec
adc
data16
popf
mov
jb
jmp
daa
jb
sub
aam
js
dec
stos
inc
xchg
jo
stos
stc
cmpl
inc
mov
fidivs
bound
jmp
cli
std
xchg
push
mov
xor
fs
and
push
dec
stos
and
ljmp
fstp
xor
and
mov
arpl
cs
mov
mov
sbb
adc
inc
sbb
mov
pop
push
scas
addr16
inc
xchg
xor
push
adc
mov
popf
xor
cmpsb
ljmp
jle
mov
fsubrl
rol
xor
adc
mov
repnz
mov
pop
jle
pop
mov
aam
dec
shll
mov
scas
cmp
jnp
enter
jg
cwtl
fcoml
sbb
lods
jns
cmp
and
jo
sub
lea
mov
add
cs
adcb
mov
lcall
inc
sbb
add
loopne
ror
dec
hlt
sub
int
divl
jg
fnstcw
stos
cltd
push
adc
xchg
outsl
mov
fisttpl
ret
lcall
pop
scas
or
mov
cs
out
mov
pop
or
cmp
push
cwtl
movsb
and
cmpsl
popa
xchg
cmpsb
push
mov
pop
popf
imul
cmp
je
pop
fiaddl
ljmp
cwtl
cmp
cs
adc
cmp
ljmp
xchg
rclb
mov
loop
hlt
ljmp
cmp
rcrl
shlb
push
enter
mov
mov
addb
andl
sbb
icebp
and
fadds
adcb
pop
jg
js
adc
xor
fmuls
shrb
repz
pop
dec
or
cltd
out
call
push
adc
push
mov
push
or
lea
fisttpll
sub
rorb
ljmp
lods
test
into
clc
pavgw
movsl
mov
jne
movsb
jns,pt
clc
pop
jl
lret
iret
push
decl
insb
dec
push
imul
nopl
loope
mov
inc
bnd
sub
ret
xlat
dec
add
pushl
mov
aam
inc
jo
rol
test
pop
sbb
jg
adc
jne
add
fs
mov
jmp
cld
inc
jge
jg
mov
cmp
call
jb
fs
and
pop
add
inc
sbb
sbb
cmc
loop
lahf
xchg
jnp
fcos
lcall
int3
mov
faddp
push
xchg
sub
mov
aam
inc
mov
rcrl
xchg
dec
mov
or
arpl
shr
iret
mov
addl
or
aas
popa
int
mov
dec
mov
mov
jns
inc
imul
popf
or
incl
je
ficompl
insb
mov
cmpsl
test
dec
jmp
dec
and
outsl
dec
inc
pop
jno
and
sbb
call
and
adc
imul
popa
push
cmp
push
xor
pop
loop
cmp
incl
dec
fs
mov
cltd
addl
aad
outsl
inc
mov
push
or
sbb
dec
mov
pop
pop
mov
in
and
aam
repnz
enter
leave
jg
ljmp
mov
inc
cmp
xor
push
add
adc
adc
and
mov
push
decl
filds
jnp
mov
sbb
or
sub
aaa
xchg
sub
jle
dec
outsb
nop
push
into
jne
ljmp
leave
sbb
lea
add
add
js
lret
inc
push
fdivrp
sbb
call
xor
js
pop
push
mov
pop
dec
test
sti
ja
mov
mov
add
cmpb
adc
fstpt
adc
xor
outsl
cmp
inc
lcall
loopne
das
pop
pop
aas
pop
into
push
inc
fsubrl
ds
leave
fisubrs
and
std
push
jle
ljmp
xlat
inc
push
movsl
ljmp
inc
push
mov
push
pushl
div
movsl
cmp
shll
insb
insb
psraw
gs
scas
push
test
test
jg
scas
decl
add
mov
add
pop
mov
fldl
insl
cmc
out
in
es
insl
or
jmp
stc
imul
int3
add
mov
adc
mov
push
incl
int3
pop
cmp
sbb
fildl
int
cmp
jae
push
and
jmp
test
mov
repnz
mov
adc
mov
test
mov
lcall
lods
mov
xchg
xor
cs
out
mov
cmp
imull
jmp
sub
push
in
pop
or
jne
jb
ljmp
push
lcall
dec
data16
data16
out
cli
push
dec
pushf
add
mov
fisubl
sar
add
mov
aaa
xchg
ljmp
mov
lods
icebp
sub
or
js
mov
xchg
out
fdivr
cld
xchg
push
incl
gs
xor
shlb
xor
mov
jg
fldl
daa
sbb
and
mov
cmp
push
leave
lret
sub
or
call
lods
test
mov
or
imulb
sar
aas
xor
repnz
and
lods
jb
lds
sahf
or
pop
mov
addr16
xor
movsl
push
fcomip
loopne
add
inc
aaa
test
fs
jp
cmpl
dec
jmp
and
leave
push
or
int
ret
mov
in
add
repz
pushl
es
jl
daa
gs
add
ftst
fwait
ds
fstpl
jo
cld
lods
jbe
outsl
push
or
daa
out
add
fbstp
sub
ds
imul
addr16
lret
mov
dec
xchg
pop
pop
aas
ret
mov
sbb
push
cmp
stc
sti
add
and
push
jp
mov
cld
pusha
cmc
push
cmp
mov
mov
out
aas
or
mov
lcall
hlt
arpl
dec
inc
out
pop
ficomps
mov
mov
cmpb
inc
cli
ret
imul
fisubrs
xchg
xchg
rolb
pop
dec
mov
xor
inc
add
push
jmp
arpl
aaa
push
repnz
jmp
xchg
push
pop
addr16
cmpsb
jge
or
pop
testl
jmp
dec
mov
pop
es
in
decl
mov
mov
pop
mov
popf
js
in
sbb
cmc
aaa
out
jg
loop
sbb
insb
jl
mov
pop
dec
test
add
adcl
decl
xor
enter
shl
je
insb
shll
fs
adcb
psrlq
lcall
inc
cld
push
and
movsl
mov
out
dec
mov
fsub
fxam
arpl
cmc
pushl
loopne
aad
sbb
push
subb
out
push
xor
jl
jp
lcall
mov
and
arpl
mov
or
lret
pop
stos
sti
ja
mov
bound
insb
ljmp
jle
cli
cwtl
pusha
and
xchg
mov
cmp
or
pop
push
cli
cmp
ret
inc
cltd
ret
cld
cwtl
arpl
fwait
ret
cs
out
out
cld
lahf
in
popa
in
incl
mov
ja
and
inc
aaa
mov
mov
push
ret
das
out
imulb
jmp
arpl
jbe
push
outsl
gs
mov
lock
and
rclb
mov
incl
ds
xor
jo
sub
in
rclb
jnp
aad
dec
popa
dec
xor
imul
dec
sbb
mov
fs
jb
mov
mov
sbb
adc
pusha
adc
lods
test
pushl
in
dec
jge
out
das
fisttpll
cmp
add
arpl
add
sahf
test
lcall
mov
dec
jp
mov
inc
cmp
pusha
mov
push
jne
dec
dec
shll
mov
add
loope
popa
lahf
aam
xor
les
and
icebp
les
jmp
push
adc
rorl
xor
mov
and
arpl
loopew
call
cmp
inc
mov
test
push
sbb
cmp
pop
jo
mov
ljmp
or
inc
mov
xor
pop
sbb
cs
lahf
jmp
rorl
sub
pushl
std
popf
fstps
cs
lods
pop
or
mov
push
and
ds
jmp
jne
adc
lahf
sub
pop
popa
pop
or
repz
cmp
fwait
push
mov
jmp
xor
xchg
les
test
dec
pop
pop
roll
xchg
pop
mov
mov
jmp
cltd
add
pop
pop
lods
mov
call
xchg
pop
clc
popa
idiv
lcall
pop
and
dec
lock
pop
sbb
pop
sbb
inc
jno
sub
pushl
popf
test
pop
sub
stos
push
fbld
add
cli
adc
sub
lea
adc
push
in
addb
lea
and
aaa
cld
cmp
in
or
cmc
push
dec
sub
or
jge
std
rorl
insl
aaa
loop
pushf
fcom
inc
sub
dec
cli
dec
adc
and
mov
jne
daa
js
inc
xchg
fwait
or
jp
aam
sbb
jnp
or
roll
add
incl
stos
popf
or
pop
dec
pop
push
xchg
dec
enter
fisttps
loope
or
push
aam
lcall
sbb
fwait
xchg
mov
popf
xorl
mov
les
mov
aad
push
pop
ljmp
rcrl
xorb
hlt
test
pop
dec
shl
call
inc
in
mov
sub
dec
aad
dec
lahf
xor
pop
add
aad
into
mov
xchg
aaa
iret
out
rclb
enter
iret
jle
mov
daa
divb
dec
dec
gs
mov
adc
sub
or
ljmp
pop
repz
jle
adc
mov
dec
cmp
adc
pop
addb
sub
sub
fidivrl
cmpsl
dec
adc
cmpsl
cmp
pushl
or
mov
out
jbe
loope
dec
xor
cmp
push
jns
xor
pushl
jae
fwait
inc
dec
inc
mov
mov
push
mov
fdivrl
xor
jg
dec
sbb
push
cmp
lahf
add
into
ret
jge
call
sbb
mov
push
test
sbb
inc
test
mov
lret
neg
rorl
fidivl
sbb
pop
xor
das
insb
je
scas
mov
mov
sahf
int3
cli
mov
jns
xchg
sub
clc
mov
push
pop
xchg
mov
add
jno
jns
or
cmc
cmp
in
sbb
std
imul
mov
xor
daa
mov
sub
mov
mov
dec
test
xor
loopne
test
fiadds
jmp
dec
cmp
rol
xchg
jnp
scas
jp
les
popf
jbe
cmpsl
test
pushl
mov
fs
stos
adc
and
pop
inc
aas
test
dec
push
arpl
pop
scas
cwtl
call
nop
stos
xor
outsb
push
into
je
int3
mov
sbb
out
pop
out
shlb
clc
int
test
pop
lcall
adc
aas
mov
pushf
dec
imul
shlb
mov
lcall
bound
pop
mov
iret
xchg
push
push
test
dec
xor
xchg
inc
or
mov
cltd
mov
mov
xchg
adc
push
adc
xchg
subl
ljmp
jne
daa
cltd
cmpsb
dec
ja
imul
sub
icebp
out
mov
mulb
cltd
or
jnp
cmp
dec
sbb
fldl
jne
out
iret
xchg
loop
sarb
push
into
es
lock
stc
mov
shlb
pop
adc
add
dec
ss
aaa
mov
xchg
xor
ret
mov
jmp
push
cmp
cld
bound
sbb
rcrb
pop
or
adc
stc
insl
negl
jecxz
mov
cmp
pop
jo
movsb
sub
xchg
dec
jno
std
fldl
cmp
cmp
iret
mov
mov
loopne
mov
mov
sub
xor
sbb
cmp
incl
cld
sub
sbb
mov
xor
cmp
pop
shl
lods
add
cltd
incl
sub
and
sbb
sbb
cs
lret
fcomps
loop
push
dec
out
cli
call
sarl
cmp
and
sbb
cmp
jnp
nop
xchg
pushw
jmp
sub
push
xchg
add
push
outsl
call
loopne
cmp
sub
popa
sbb
scas
idiv
mov
sbb
repz
pop
ljmp
outsb
popf
gs
sub
mov
and
mov
sub
shlb
outsb
adc
ljmp
ret
mov
jge
and
fisubs
xlat
push
push
stos
jmp
push
sub
sub
lcall
adc
push
push
cmp
call
mov
pop
fdivl
les
lcall
inc
ret
addr16
imul
test
ficoml
addl
push
mov
sti
out
pop
xor
lea
add
pop
rcr
inc
xor
or
decl
sbb
mov
mov
cs
mov
xchg
mov
test
loopne
cmpsb
cmc
rep
mov
pop
mov
or
shll
out
sbb
push
es
inc
insb
test
das
mov
sub
fadds
pop
inc
out
sarb
hlt
xchg
xchg
ljmp
dec
stos
fdivl
sbb
mov
lcall
xchg
xchg
clc
mov
incl
cld
mov
cmp
scas
sub
sub
xor
xor
iret
imul
pushl
loope
add
dec
decl
lcall
repz
jg
mov
jb
pop
icebp
xor
pushl
es
and
jp
mov
sub
and
xchg
xchg
cmpsl
pop
loopne
xchg
outsb
cmp
sti
stos
stos
sub
xor
sub
adc
pop
addr16
dec
xor
pop
out
jmp
cwtl
arpl
enter
sub
iret
pop
mov
jmp
mov
lock
xchg
and
repnz
sub
decl
sti
faddl
dec
in
pop
movsl
jge
in
mov
inc
iret
les
lret
data16
call
addr16
push
jle
outsl
sbb
stc
popf
sahf
xchg
fcompl
repz
in
cmp
and
decl
sbb
in
dec
pop
inc
data16
push
mov
int
cs
orb
mov
mov
int3
scas
cmp
sbb
or
fmull
rorl
mov
jbe
jp
mov
jns
sarl
mov
sbb
pop
or
jle
dec
test
mov
mov
cmp
lods
push
pushl
test
mov
adc
pop
push
pop
fwait
stos
enter
pushl
cmp
push
mov
or
xlat
xor
lcall
pushl
out
dec
inc
clc
dec
sbb
jb
bound
mov
cmp
cwtl
repnz
push
loope
cmp
jge
push
jp
push
insb
popa
mov
mov
jecxz
imulb
inc
mov
or
call
fdivr
jl
jmp
pusha
shrb
mov
mov
push
sbb
mov
jne
das
jo
movsb
in
das
cmp
push
jp
cmp
mov
adc
ds
iret
sbb
adcb
dec
fsts
push
sbb
mov
ja
sti
dec
insb
mov
xor
rcrl
mov
mov
or
cmp
fidivrs
push
les
push
mov
jmp
popf
pop
dec
push
fidivrl
test
cli
lds
lret
ret
rcll
pushl
int3
sub
push
mov
sub
sbb
fcmovnbe
push
aam
sar
dec
loope
jle
pop
dec
pop
jbe
xchg
pop
add
lcall
xchg
outsl
cmp
out
imul
pop
and
outsb
xchg
in
lahf
fsubrl
jmp
push
add
dec
dec
cmp
xchg
fsubl
adc
inc
push
mov
lods
mov
out
aad
dec
leave
in
notb
jg
js
push
fistpl
fbstp
lods
sub
jecxz
cmp
pop
icebp
sbb
scas
jle
ds
repnz
push
insb
mov
jae
adc
sub
jb
out
add
stos
jo
in
int3
mov
aaa
cld
jp
fbld
pushf
mov
pusha
ja
rcl
xorl
call
cmpsb
jb
push
insl
inc
push
xchg
mov
shlb
mov
movsb
or
jmp
sub
test
mov
pushl
ficoms
pop
cs
or
fs
xchg
and
cmp
out
movsb
xor
aam
ljmp
sbb
inc
xor
xchg
inc
pusha
sub
ljmp
or
mov
and
sub
mov
out
clc
and
push
loopne
dec
test
pusha
dec
cmp
xchg
call
test
dec
das
sti
xlat
sbb
imulb
push
mov
jae
jno
pop
inc
xlat
pop
jmp
aas
movsl
subb
xchg
repnz
push
mov
lea
jmp
cmp
xlat
jg
push
dec
mov
and
mov
xchg
cmp
cli
inc
std
repz
fcomip
lcall
sub
dec
add
sbb
movsl
sbb
rcrl
test
mov
push
inc
mov
stos
or
xchg
repnz
fwait
mov
inc
mov
dec
out
insl
xor
pop
inc
mov
cmp
push
xchg
fstps
cmp
ja
incb
ss
fcomip
dec
or
push
pop
add
das
mov
bound
lods
or
mov
js
test
sbbb
aam
dec
test
cld
dec
push
inc
cltd
not
jp
nop
and
mov
push
dec
jns
sbb
dec
imul
mov
ljmp
jb
adc
jae
mov
xor
xchg
jge
popa
xchg
or
pop
mov
cmp
xor
dec
sub
mov
stos
lock
movsl
loopne
rorb
cmpb
pushl
xchg
mov
mov
in
mov
or
das
xlat
jns
xchg
scas
data16
std
leave
mov
add
pop
mov
push
test
mov
cmc
jmp
jb
scas
mov
lret
mov
pop
pop
adc
sub
jmp
sub
mov
dec
mov
xchg
shrl
test
mov
ljmp
rcl
es
out
cmp
insl
mov
jne
mov
push
mov
out
insl
pop
dec
dec
imul
das
sar
aam
popa
xchg
jle
pop
cmp
das
in
pop
movsb
sub
stos
cmp
movsb
les
incl
iret
inc
int
aas
iret
pop
mov
outsb
xchg
adc
mulb
push
stc
hlt
ror
aas
mov
decl
and
cmp
cld
mov
into
ljmp
sub
popf
inc
loopne
push
add
mov
jp
es
push
mov
repnz
std
lods
xchg
lret
adc
stc
cmp
dec
data16
mov
imul
cs
mov
mov
xor
adc
fisubl
loopne
mov
jmp
int3
pop
fsts
jg
cmp
movsl
mov
mov
pop
xchg
pop
xlat
subb
mov
aam
addr16
mov
sub
dec
mov
movsl
lahf
bound
pop
or
outsb
sub
add
mov
outsb
jae
xor
mov
pop
fimuls
mov
cmp
add
sbb
fcomp
add
cmp
rolb
add
out
mov
or
movsl
pop
cvtdq2ps
out
or
lahf
inc
push
jmp
ffree
add
insl
pushf
pushl
jmp
sbb
pop
or
mov
inc
push
cld
and
jecxz
jg
les
adc
js
xchg
ja
inc
add
pop
mov
lcall
arpl
mov
in
pop
mov
std
je
fwait
jle
xor
filds
sub
cli
int
mov
test
sbb
jl
or
inc
stos
shlb
sbb
fwait
cmp
cld
or
add
mov
dec
push
cmp
mov
jmp
xchg
xchg
test
lcall
imull
movsl
mov
mov
cmc
in
int
mov
xor
or
pop
out
decl
dec
xchg
mov
hlt
or
movsl
xchg
xchg
and
sbb
inc
dec
ds
out
mulb
adc
mov
cmpsb
sbb
mov
inc
adc
decl
addr16
cmc
dec
or
dec
adc
fsubs
ljmp
iret
xor
mov
rorl
xchg
daa
mov
xchg
dec
sub
test
sahf
ljmp
xchg
xor
lods
push
neg
lock
pushf
bnd
scas
clc
icebp
js
jle
ret
sub
lahf
mov
call
lcall
test
sub
shrb
loopne
fistpll
jecxz
into
xchg
fs
or
aaa
mov
mov
push
aaa
sbb
pop
cmp
loope
or
icebp
lcall
sub
sarb
jle
in
and
inc
mov
and
mov
incl
pusha
cmp
pop
pushf
stos
inc
enter
push
xor
insb
lea
in
pop
into
in
aad
add
adc
xchg
xor
pushl
popf
out
lea
cltd
dec
imul
jecxz
jmp
cmp
data16
pop
mov
jmp
jg
incb
mov
movsb
xchg
mov
loope
add
incl
adc
push
sub
fbld
in
dec
push
jnp
adc
mov
xchg
fimull
mov
adc
pop
rol
ret
lahf
push
call
jmp
mov
out
mov
repz
mov
pop
and
pop
mov
insl
push
mov
xchg
jno
and
push
pusha
outsl
clc
jmp
mov
inc
sti
cmpsb
ljmp
pop
lret
xor
inc
jns
pushf
stos
ljmp
add
outsl
sbb
inc
sbb
stos
mov
in
ja
sub
ljmp
sbb
add
mov
gs
sarb
fiaddl
mov
cltd
ficomps
hlt
ljmp
ljmp
pop
fildll
push
pop
sub
fs
jg
pop
jle
push
push
dec
push
xor
cli
repnz
ja
movsb
hlt
in
fmull
outsl
iret
pop
stos
lods
adc
ljmp
jb
arpl
sti
dec
sbb
cli
pandn
mov
decl
or
cmp
shrb
outsb
jecxz
filds
add
lock
xchg
incl
fisttpll
data16
into
fsts
fbld
out
dec
cli
incl
pop
pop
cmp
sub
sbb
adc
shlb
outsb
push
icebp
pop
dec
aam
mov
incl
movsb
inc
data16
or
sub
and
lea
inc
cmp
add
ljmp
dec
in
out
mov
cltd
cld
add
cmp
xchg
je
movsb
fs
lcall
xlat
cmp
jp
add
push
loop
jmp
int
xor
mov
int3
push
aad
mov
adc
push
mov
push
shrb
mov
ret
push
ret
cmp
les
pop
xor
fsts
pop
cmp
incl
test
lods
mov
loopne
and
and
pushl
fcmovu
jecxz
insl
jecxz
fisttpl
push
add
push
xchg
sbb
xchg
xchg
call
xchg
xlat
adc
lret
jae
jo
mov
fimull
js
inc
pusha
adc
push
mov
mov
mov
insl
xor
cli
fwait
adc
sar
pushl
dec
push
jnp
push
xchg
lea
mov
sbb
mov
mov
mov
lcall
cmpsb
test
test
filds
inc
push
ja
jno
xor
ss
and
adc
js
gs
jns
xchg
clc
sahf
std
ficomps
lea
cli
aas
sub
inc
jo
jnp
mov
aad
jbe
mov
mov
pop
popf
inc
jnp
pop
fcomps
jbe
mov
shlb
pop
jo
leave
or
mov
arpl
xor
dec
inc
out
imulb
cmp
jg
mov
test
sarl
push
jb
adc
rcll
lods
out
ljmp
xor
and
int3
cmp
xchg
mov
enter
dec
scas
push
in
es
jl
or
daa
jle
ds
sub
outsl
sub
jmp
dec
adc
rol
push
popf
repnz
push
test
cmp
mov
cmp
cwtl
xor
enter
shrl
dec
and
iret
and
jmp
jbe
add
xlat
push
loop
hlt
xchg
adc
and
mov
xchg
inc
sti
leave
je
inc
lret
sbb
push
pusha
ljmp
push
outsb
mov
mov
lcall
jmp
inc
xchg
mov
mov
adc
call
stos
jge
cltd
fadds
in
sub
fnsave
cmp
scas
inc
jbe
sub
je
inc
decl
xchg
stc
aad
push
pop
jmp
mov
mov
repz
cmp
cld
jbe
push
in
mov
insl
mov
pusha
shlb
in
es
fcomip
cmp
mov
sbb
lods
fwait
push
das
or
out
xor
mov
fists
fnsave
mov
lea
dec
in
sub
iret
adc
es
imul
roll
push
or
xor
insb
lahf
and
add
sahf
push
int3
adc
decl
mov
push
testl
jno
js
popa
sbb
lret
ljmp
decb
ljmp
fbstp
pop
pop
sbb
pop
in
inc
jo
dec
gs
out
insb
mov
push
mov
cwtl
push
dec
adc
cmp
add
and
icebp
mov
mov
dec
fwait
int
icebp
pop
nop
sub
cs
adc
jg
js
jge
mov
jnp
add
jno
adc
mov
mov
lcall
mov
push
cltd
mov
push
dec
mov
xor
lcall
mov
out
test
xlat
xchg
popa
fs
sub
and
jmp
sbb
in
mov
lods
cld
lock
out
mov
movsl
push
jne
add
ljmp
cs
fs
fbld
pop
xor
push
or
fldenv
subb
test
scas
jne
pop
insl
nop
mov
dec
or
jmp
subl
ja
adc
jl
mov
adc
daa
xchg
das
jno
jne
sti
jo
ja
add
mov
mov
sbbb
sahf
scas
mov
pop
mov
push
adc
inc
pushl
mov
jg
pop
pop
dec
jbe
scas
out
xchg
mov
xchg
pushf
nop
mov
out
push
stos
mov
mov
sbb
and
lahf
ja
mov
int3
mov
push
mov
push
out
adc
mov
ret
pop
inc
pop
adcb
mov
pushf
sbb
ja
dec
mov
sub
scas
repz
sar
push
scas
popf
cwtl
rcll
lret
lds
mov
hlt
pop
rorl
call
std
mov
leave
in
sbb
aad
jmp
mov
lds
decl
push
loope
push
sbb
repnz
adc
jecxz
xchg
xchg
je
pushl
cltd
ds
in
fsubrl
and
mov
mov
push
aas
hlt
sti
ljmp
inc
add
das
adc
test
and
out
xor
or
mov
jg
sbb
sbb
inc
xchg
jge
push
pusha
sub
call
cmp
pop
xor
aaa
call
loopne
fcmovne
enter
sbb
daa
test
xchg
xor
decl
test
xor
mov
sahf
cmp
dec
mov
ljmp
scas
scas
add
pushl
adc
ja
js
mov
stc
xchg
cmpsl
fcompl
dec
mov
call
push
sub
rcll
cmp
popf
bound
lods
push
and
xchg
mov
gs
lcall
es
pop
or
mov
scas
fsubs
sahf
mov
outsl
sbbl
hlt
shl
ljmp
adc
inc
sbbl
mov
data16
sbb
out
pop
stc
loop
jecxz
and
int
clc
jmp
sub
mull
mov
adc
int3
mov
pushl
rolb
lea
mov
adc
dec
imul
add
push
push
enter
mov
cli
add
mov
nop
lahf
ffreep
cmp
test
cmp
jle
ljmp
cli
icebp
xlat
iret
push
xchg
push
andl
mov
cltd
decl
dec
pop
aas
cmp
mov
lock
push
xor
ds
stos
cmc
cmp
mov
loop
or
jno
push
dec
adc
cmpb
sub
sahf
push
and
clc
mov
pop
int3
pop
jo
jmp
dec
enter
xor
insb
scas
cs
jg
mov
dec
insb
mov
es
or
jbe
in
pop
and
clc
fidivrs
jg
sbb
sbb
pop
mov
mov
sub
rclb
jmp
fsubrl
into
push
jecxz
and
and
pop
xchg
push
movb
out
divb
push
dec
cmp
sub
popa
inc
aam
shll
sar
lcall
dec
mov
jnp
or
lcall
shrl
or
mov
xchg
aas
out
push
notl
add
jmp
xor
mov
and
sbb
adc
mov
pop
push
pop
neg
and
mov
lcall
jmp
cmp
std
pop
hlt
aad
cltd
lcall
or
jge
enter
incl
or
pop
xor
fisttps
int
mov
dec
pushf
movsb
push
lcall
jmp
jne
decl
and
int
out
aaa
mov
daa
jl,pt
nop
jnp
mov
or
adc
hlt
pop
sti
shl
mov
es
and
sub
cmc
out
shl
test
lret
add
mov
xchg
sti
push
jo
in
loop
and
dec
dec
inc
test
jb
scas
inc
incl
sub
fdivr
push
lcall
imul
stc
jle
xor
ljmp
mov
jno
inc
pop
jne
mov
push
int
or
inc
pop
ljmp
pop
and
and
mov
aam
ljmp
insl
cmp
and
scas
inc
jecxz
cmp
call
or
aas
cmp
mov
adc
mov
mov
inc
mov
addb
cli
decl
test
pop
jns
loope
fisttpll
dec
in
sbb
into
xchg
or
loop
pushl
mov
dec
shll
lahf
sbb
ds
pop
ret
out
mov
int
iret
lock
pop
frstor
push
mov
adc
mov
leave
mov
add
out
adc
push
sub
jbe
out
inc
mov
cmp
arpl
xor
fcomip
adc
dec
ds
cmpsb
popf
xchg
xor
or
iret
mov
jg
arpl
dec
push
mov
cwtl
mov
neg
hlt
andl
inc
out
popf
inc
cmp
lcall
out
push
hlt
int
mov
jbe
loopne
or
xor
pop
lcall
jl
incl
mov
nop
scas
cmp
loopne
adc
pop
lock
and
dec
mov
cmp
stos
or
cmpsl
adc
jo
push
push
cmc
push
xor
pop
pop
ljmp
inc
popa
je
jmp
add
rcl
push
pop
mov
fs
and
or
call
push
test
mov
or
ja
sbb
std
add
loop
les
ljmp
cmpl
movsb
xor
mov
pop
pop
cli
out
test
lods
pushf
mov
push
inc
jmp
outsl
movsl
ljmp
jnp
lods
fchs
out
or
xor
xor
sbbb
stos
inc
push
xchg
daa
xchg
sahf
insl
inc
push
mov
pop
jne
in
test
dec
sub
pop
ljmp
sub
pushl
ss
mov
cmpsb
mov
pusha
xor
adc
push
xchg
xor
jmp
loopne
add
sbb
jmp
nop
cmpsb
xchg
cmp
inc
cmp
jno
mov
into
std
in
push
push
push
pusha
cld
push
out
movsb
push
pop
es
push
xlat
xchg
mov
aas
std
sub
jg
inc
adc
xor
aas
adc
or
gs
out
repnz
repnz
shll
pushl
pusha
jnp
subl
fbstp
test
sub
mov
fimuls
fwait
nop
xor
jmp
fstps
dec
pop
je
adcl
lcall
xchg
pushl
loop
add
aam
lods
mov
adc
ljmp
out
cld
xchg
shrl
xorb
jmp
pop
pop
inc
nop
add
imul
lcall
jns
xor
hlt
cmpsl
enter
js
cmp
mov
and
incl
push
mov
push
into
sub
lock
imul
repz
jmp
add
sub
in
push
and
push
sub
es
adc
dec
sbb
cmp
enter
mov
push
mov
sti
rorl
adc
pushl
jecxz
mov
fimull
mov
cmp
fwait
adc
sbb
lea
mov
decl
xchg
test
aaa
sub
sbb
inc
pop
dec
sub
cmpsb
sub
lcall
jns
pop
pop
jo
roll
jbe
pop
or
insl
cmp
inc
scas
lds
lcall
mov
fdivl
sbb
hlt
sahf
imul
std
fldcw
lcall
jle
adc
pusha
lea
inc
loope
lcall
test
decl
sub
dec
or
movsb
adc
test
fdivrp
ret
dec
scas
daa
adc
pop
inc
les
lods
rcrl
add
cld
pop
jmp
and
test
imul
repz
jge
adc
loopne
decl
movsb
sbb
mov
or
movsb
lods
mov
lcall
mov
mov
and
add
ret
xchg
into
xchg
lods
jb
aaa
loopne
ret
aad
pusha
jecxz
and
mov
call
mov
int
idivl
je
push
mov
jne
mov
in
out
cmp
mov
lret
or
loop
xor
aad
add
flds
xchg
test
cs
mov
test
lods
mov
sahf
xchg
jmp
nop
inc
imull
out
sbb
push
lret
push
sub
sub
fnsave
mov
jg
mov
ljmp
cmp
push
lock
dec
in
dec
xchg
pop
sub
pop
xchg
lock
jmp
xchg
adc
pop
or
mov
jno
mov
mov
cmp
sti
iret
stos
ja
mov
mov
shrb
clc
hlt
mov
int3
clc
lcall
repz
in
lret
xor
fxtract
lcall
in
mov
xor
fs
ljmp
js
loop
and
mov
sub
mov
jge
xchg
daa
test
jns
enter
pop
pop
into
xor
lcall
sub
flds
sub
sbb
pushl
inc
fistpl
movsb
addr16
dec
imul
cwtl
adcb
jge
incl
mov
xor
add
aam
mov
jg
xorl
pusha
mov
pop
sbb
mov
ret
mov
pushl
jo,pn
jae
and
adc
pop
mov
mov
adc
sarl
pusha
pop
decl
lock
int3
inc
mov
xor
jns
xor
push
xorl
call
or
xchg
dec
inc
loopne
mov
ret
inc
inc
xchg
inc
nop
rcll
cmc
add
fcmovne
dec
les
adc
mov
adc
lret
cmp
push
add
mov
xor
pop
cmc
jle
pop
adc
or
xchg
sbb
push
sbb
xchg
leave
mov
and
clc
mov
push
rorb
test
fmuls
call
push
mov
xor
test
fcomp
lock
decl
jge
lods
pop
scas
iret
mov
cmp
cmpsb
fisttps
flds
daa
std
xor
add
inc
xchg
sub
incl
jl
add
xor
cli
outsl
fstps
lock
call
mov
push
push
test
sbb
fidivrs
jae
aad
ret
decl
loopne
mov
dec
orl
sub
push
and
push
dec
decl
push
inc
and
out
mov
aas
ret
mov
cmp
push
cmp
adc
and
inc
shlb
pushf
lods
mov
and
xchg
lcall
mov
mov
pop
rolb
out
inc
sti
or
mov
inc
dec
call
push
and
mov
les
pushf
in
mov
adc
stos
arpl
incl
sahf
ljmp
data16
add
pop
mov
jo
adc
mov
jmp
gs
in
mov
push
push
jle
push
gs
sub
incl
push
push
jmp
lock
into
dec
mov
or
sbb
in
mov
call
cmp
xchg
pop
or
push
js
jmp
jle
stos
shrl
lahf
scas
xchg
mov
dec
loope
mov
mov
sub
dec
lock
and
imul
mov
cmp
ret
outsb
push
pop
cltd
fdivrp
lods
pushl
sub
jns
enter
mov
iret
adc
stos
or
inc
mov
cmc
out
cmpsb
inc
pop
add
jmp
dec
and
add
mov
push
ja
test
ret
pushf
add
sbb
jmp
inc
cmp
mov
jae
jne
sbb
mov
std
push
cmp
in
mov
cs
cli
outsl
clc
rclb
fisubrl
mov
xchg
loopne
ret
and
ljmp
inc
jmp
fwait
and
add
faddl
call
popa
jle
inc
push
push
jge
push
jg
and
lcall
lods
xor
xor
ds
test
push
inc
out
push
cmp
mov
inc
adc
adc
loopne
add
rcl
ljmp
insb
clc
pop
shrl
je
shll
add
inc
push
lds
inc
dec
pushf
sub
out
cli
xchg
pop
addl
sub
inc
ffree
jnp
xchg
jmp
cld
or
in
sar
lcall
add
lret
add
jl
fcoms
mov
dec
int
and
mov
aam
push
aaa
clc
jg
lock
or
lret
insb
xlat
loopne
xor
pop
nop
sahf
js
insl
in
test
popa
movsl
jl
xor
ljmp
cmp
mov
mov
mov
lds
rol
mov
jmp
cmc
xchg
pop
sub
xchg
cmp
add
push
lret
push
faddp
aam
and
cmp
lock
lods
stos
inc
xchg
push
leave
lods
pop
andl
stc
repnz
xchg
lds
fcomip
mov
daa
jne
or
imul
in
jmp
cli
adc
or
cmp
cli
adc
lods
mov
enter
xchg
inc
dec
fdivl
ljmp
aam
mov
xor
pusha
jne
sub
pop
add
movsl
fcmove
aaa
pop
pop
jle
fnstenv
int
out
mov
mov
ficoml
ss
fs
jb
mov
push
pop
fxch
dec
push
sub
in
mov
cld
cmpsb
push
adc
jl
js
sbb
and
xchg
sub
mov
adc
std
test
sbb
sub
mov
fldcw
adc
aad
push
push
xor
daa
insl
mov
xlat
jns
push
std
push
adc
pop
inc
addr16
fwait
cmpb
push
xchg
xlat
or
mov
mov
loope
fildl
push
adc
movsb
call
cltd
flds
mov
push
sbb
inc
cwtl
pop
call
gs
push
lcall
adc
aas
jmp
sub
pop
cmpsl
data16
mov
add
push
cmp
push
movsb
push
test
jp
and
mov
ljmp
push
pop
fsubl
ja
jg
jecxz
orl
mov
mov
jg
pop
or
xor
icebp
add
lahf
mov
ljmp
cwtl
loopne,pt
outsl
lods
push
dec
mov
fdivl
sbb
ffree
pop
cld
ljmp
outsl
arpl
mov
lods
push
or
xchg
xor
mov
ljmp
popa
xor
jb
cmp
cmpsb
aad
cmp
mov
enter
dec
in
sbb
jnp
and
out
movsb
sub
jg
pop
outsl
ljmp
dec
sti
ljmp
fisttpl
push
dec
imul
add
push
push
inc
es
insb
mov
pop
pop
dec
outsb
jge
add
cltd
sbb
outsl
clc
ljmp
loope
iret
mov
jnp
aas
mov
cmpsb
or
cmp
jns
stos
push
out
add
mov
sub
jecxz
repnz
aam
cld
decl
cli
stos
outsl
and
xchg
xor
ja
imul
lods
jle
shll
push
ret
and
orl
xchg
and
or
idiv
ljmp
in
jb
sbb
adc
mov
shrb
pop
pop
push
jle
lock
ljmp
xchg
in
gs
add
mov
mov
pushf
xchg
jnp
or
push
push
pop
sbbl
adc
mov
sub
and
in
sbb
lock
mov
jmp
mov
mov
mov
test
ds
imulb
jmp
pushf
lcall
fistps
pop
test
int3
and
push
jl
into
mov
xchg
or
in
jecxz
or
call
mov
xorl
mov
pushf
gs
decl
lcall
fs
push
call
mov
jbe
nop
add
shrl
js
jmp
cmpsb
push
mov
mov
lret
cmc
in
rdpmc
addr16
sub
lcall
and
lds
lret
mov
jnp
and
nop
icebp
xchg
movsb
mov
loop
icebp
cld
shrb
in
lods
cmc
cmpsb
hlt
xchg
fnstsw
mov
fwait
ljmp
repnz
xor
and
stc
movsb
inc
enter
dec
cmp
cmp
mov
ucomiss
fcomip
clc
push
xchg
out
addl
mov
lea
out
dec
push
pushl
insl
lret
pop
mov
fbld
sbb
jl
cmp
orl
rcrl
decl
rolb
xchg
add
push
scas
or
mov
inc
cmc
loopne
inc
aas
or
int3
pop
xorb
aam
pop
mov
pop
pop
push
cmp
add
cs
mov
mov
mov
inc
shlb
or
add
pop
jno
sub
jmp
mov
sbb
scas
test
inc
fdivrs
jg
rcrb
mov
pop
bound
das
xor
sahf
ljmp
mov
xchg
ljmp
sti
and
mov
mov
cli
js
inc
inc
mov
stc
iret
ret
repz
js
pop
xchg
pop
xlat
inc
mov
mov
movsb
cmp
lcall
movsb
jmp
in
icebp
imul
or
add
mov
outsb
xor
jg
nop
add
jb
pop
test
sahf
imull
lcall
xchg
mov
call
cmp
jbe
cs
call
push
shr
mov
push
lret
addr16
scas
jno
arpl
fcos
pushl
sub
cmp
inc
xchg
or
ret
jp
aas
in
cli
xor
or
xchg
mov
cmp
jg
push
jae
shrl
enter
pop
daa
int3
pop
and
cmpxchg
inc
jmp
push
incl
xchg
add
lods
cmp
lods
movl
dec
repz
mov
inc
into
stos
clc
xor
cmp
sub
and
xchg
repnz
jmp
pop
xchg
fcmove
bound
adc
pop
sub
fisttps
xchg
cmpsl
jl
dec
mov
call
mov
push
out
aam
inc
addr16
mov
jle
sahf
push
or
lcall
jmp
push
xor
rcll
jmp
dec
lods
pusha
inc
mov
scas
enter
decb
stc
mov
aaa
cld
xorl
mov
rclb
pop
testl
xor
pop
clc
call
mov
fidivrl
push
dec
pop
sub
cwtl
fwait
sar
ljmp
xchg
cli
icebp
jmp
inc
ret
xor
into
sub
sub
sar
inc
call
mov
gs
ret
hlt
outsl
pop
xchg
mov
dec
sbb
orb
call
or
push
mov
dec
xor
inc
lea
mov
in
mov
jnp
roll
dec
inc
push
pushl
call
ret
adc
or
push
or
mov
sub
fsub
out
jmp
xchg
aad
jns
add
setl
xchg
js
inc
mov
adc
push
in
adc
pop
clc
lcall
ret
cmp
add
dec
lds
addr16
popf
sbb
pushl
sub
imul
sbb
cmp
in
das
enter
xchg
adc
cmp
mov
pushl
pop
mov
cli
mov
testl
dec
gs
movsl
sar
das
out
call
mov
jle
ljmp
and
jnp
dec
insl
cmp
push
nop
leave
jne
push
nop
jp
mov
out
movsb
mov
loopne
call
dec
push
js
lcall
call
stc
fdivl
jmp
sbb
sbb
inc
mov
test
sub
mov
xchg
sub
test
fldenv
mov
es
ja
inc
fistpll
push
add
outsl
call
cmp
mov
sar
mov
push
push
insb
cmp
push
enter
fisttps
push
push
push
mov
ret
fwait
pop
mov
adc
dec
inc
stos
cld
xchg
xor
ljmp
sti
sub
shrb
or
cli
popf
loopne
mov
lcall
and
push
xor
icebp
jno
pop
aas
imul
addr16
cmp
mov
mov
cmpsl
out
adc
fstpt
int3
push
push
mov
mov
scas
or
das
push
pop
testl
mov
mov
lods
aaa
cld
outsl
clc
push
sti
lcall
loope
mov
cmp
sbb
std
ljmp
out
js
mov
push
icebp
inc
xchg
xor
adc
mov
call
sub
mov
insb
fdivrp
mov
in
sub
jmp
push
es
push
lcall
addb
aad
push
fdiv
fldz
dec
push
pop
mov
mov
cmpsl
inc
dec
cmp
cltd
mov
sbb
mov
call
decl
adc
mov
outsb
aaa
in
pop
fdivrl
push
rcrl
jnp
jle
or
dec
loop
jns
lock
inc
in
loop
jns
add
in
pop
lcall
adc
jmp
and
ret
push
dec
loope
sbb
ret
in
add
sahf
push
shld
test
fisubl
pop
push
adc
dec
clc
cmp
inc
adc
push
shl
aam
mov
sbb
decl
or
mov
ss
jle
xor
jbe
xorb
xor
push
movsl
xlat
cmp
pushf
mov
test
mov
push
sub
dec
and
jg
data16
lahf
mov
dec
loop
xchg
rorl
ljmp
and
fildll
inc
pop
mov
repnz
fs
add
call
push
test
mov
fnstenv
push
rcr
popa
adc
loop
jg
decl
inc
mov
push
test
scas
mov
loopne
fistpl
decl
jmp
ret
xor
dec
loope
enter
in
jecxz
cld
nop
push
rol
cmp
add
mov
cwtl
mov
stos
and
mov
add
jb
dec
cmp
rcll
repnz
mov
lcall
xor
lcall
dec
pop
xchg
lret
and
cwtl
faddl
leave
lcall
out
iret
adc
call
mov
mov
shrb
fisttpl
lods
jg
stos
and
ja
pop
repz
cmp
dec
mov
ljmp
hlt
ror
mov
dec
mov
pop
push
sub
test
jne
push
sbb
ljmp
inc
xorb
aas
fidivrl
jg
mov
mov
push
aad
sahf
mov
xor
inc
jbe
jg
dec
jno
xor
call
pop
xchg
loopne
or
scas
jne
sub
sar
call
loopne
adc
cmp
sbb
mov
aad
out
aas
mov
lcall
or
sahf
cmp
jo
mov
mov
mov
jmp
lock
int
repz
jo
jp
or
cmp
jb
mov
mov
and
in
mov
arpl
mov
or
int3
mov
jmp
test
aad
mov
inc
enter
mov
in
or
call
or
or
hlt
das
lock
mov
dec
mov
mov
movsb
mov
jge
sti
nop
mov
pop
outsb
les
push
aad
xor
pop
adc
ss
dec
outsb
jmp
decl
nop
sbb
inc
lahf
lods
scas
test
jp
aad
xor
ljmp
inc
jp
xchg
fs
inc
ja
xchg
inc
iret
insb
dec
vfrczps
xor
mov
adc
repnz
jmp
xchg
icebp
xchg
aad
rcrb
lods
add
or
push
imul
js
rclb
or
xchg
clc
cmp
mov
sar
ljmp
push
dec
mov
xchg
rorl
in
cmc
and
lea
cmpb
jg
mov
push
cmp
add
cmpsb
das
jnp
xchg
xchg
loop
dec
lret
int
lcall
inc
fwait
push
xchg
inc
jp
push
fmul
jecxz
popf
xchg
dec
add
mov
decl
jg
mov
add
cwtl
shrb
clc
mov
xor
repz
jg
xor
shrb
js
and
ficomps
mov
mov
xor
incl
fcmove
xchg
jmp
push
scas
xor
cli
cld
std
fildll
call
std
inc
cmp
inc
push
repz
mov
mov
data16
cmpsl
out
push
inc
insb
lahf
push
loopne
fcoml
sbb
cmc
add
rorb
ret
mov
dec
inc
loopne
add
pop
mov
or
mov
in
jg
jbe
inc
cmp
dec
jmp
cmpsl
jp
jmp
repz
cmp
jmp
lahf
xchg
mov
stc
dec
pusha
sub
xchg
in
mov
add
sti
jmp
dec
jp
inc
mov
pop
adc
inc
sahf
push
mov
repz
cli
jmp
push
fildl
mov
rorb
mov
mov
test
mov
mov
lahf
aam
mov
ja
dec
cmp
add
inc
fists
in
repnz
sub
ss
mov
sti
sbbl
stos
pop
pop
add
fcompl
fistpl
lock
ljmp
sub
sarl
pop
rcll
push
imul
xlat
mov
push
cmp
jne
pop
hlt
xor
sbb
stos
lock
cmp
in
int3
inc
lahf
sahf
pop
jg
xor
xchg
jecxz
decl
gs
out
repz
arpl
cmp
pop
and
push
ja
push
aam
jmp
fsubrs
and
adc
xlat
add
xchg
outsb
and
ret
test
inc
movsb
push
gs
lcall
inc
pop
orb
pop
sub
push
xlat
mov
sbb
imul
outsb
or
call
mov
int3
mov
xchg
and
jb
push
cld
inc
dec
adc
fildl
jb
inc
or
push
sub
inc
clc
pushf
call
sbb
ss
mov
iret
inc
push
sub
cwtl
and
lret
imul
incl
jp
inc
jb
or
xchg
push
out
lods
stc
iret
fistps
push
dec
sbb
ret
jg
jle
pushf
jge
aaa
nop
and
or
cmp
jg
in
je
push
add
push
push
inc
cmp
call
mov
or
jo
daa
cmp
fcomip
mov
inc
xchg
lods
icebp
daa
cmp
or
orb
sub
and
sub
mov
fistl
mov
lods
insl
ret
lods
lock
sbb
lahf
out
mov
pusha
pop
cmpl
into
test
std
cmc
aaa
orb
insl
iret
std
decl
fs
and
lret
mov
dec
mov
shl
sbb
jbe
std
call
sub
mov
mov
jno
stos
or
cmp
mov
adc
pushl
mov
and
sbb
fs
push
stc
sbb
ds
in
lea
repz
or
mov
out
pop
out
test
loope
mov
lcall
jle
shl
sbb
dec
push
push
mov
sub
pop
mov
fwait
test
pop
add
das
rclb
sub
ss
shrl
pushl
lea
inc
pushl
jbe
mov
pop
idivb
mov
inc
add
mov
scas
inc
scas
ja
adc
addr16
cmpsb
inc
push
sub
add
cmp
movsb
fisttpll
sahf
jns
decb
ljmp
test
mov
jae
mov
negb
cltd
and
cmc
call
add
cli
loop
cmp
insl
fidivs
and
push
add
call
std
inc
cwtl
pop
mov
movsb
xor
fadds
pushf
or
ljmp
fmull
in
push
iret
add
dec
mov
lret
popf
push
inc
mov
pop
xor
jmp
mov
mov
ds
int
popl
inc
sarl
jg
mov
cmc
cmpsb
imul
sar
lcall
cmp
outsl
mov
jge
out
addr16
mov
ja
jb
add
dec
not
push
push
lock
push
fwait
jno
fimuls
data16
mov
mov
sbb
jmp
xor
cltd
mov
adc
jge
call
dec
and
into
stc
lods
ret
push
cmp
popf
sbb
pop
decl
pop
enter
xor
hlt
and
popa
jmp
mov
in
mov
data16
jecxz
lcall
test
clc
out
fisubrl
les
dec
cmp
ss
jecxz
popf
sub
mov
clc
fcomip
inc
mov
out
xchg
jb
stos
pop
push
loope
push
dec
pop
lods
scas
clc
ljmp
in
pop
pusha
add
rolb
push
xor
jae
into
mov
pushl
xor
adc
mov
jb
mov
jmp
in
mov
pop
mov
test
decl
mov
imul
cmp
push
dec
pop
lock
arpl
add
sub
aad
ljmp
xchg
xchg
xor
cmpsb
insb
idivl
push
add
pop
push
pop
outsl
lds
addr16
incb
out
nop
lcall
ret
jbe
inc
mov
decl
jg
dec
or
and
xor
push
jnp
push
push
adcl
fs
mov
ret
xlat
out
mov
jge
jae
sbb
scas
xor
rcrl
cmp
push
xor
add
mov
loop
xlat
js
sbb
fildl
jge
mov
ljmp
andl
sub
and
int3
movsl
insl
jbe
add
out
mov
inc
pop
mov
sar
sbb
jle
jle
fcomps
jl
mov
xchg
jmp
pushf
cmpl
sbb
stc
push
xchg
ja
cli
rolb
dec
ljmp
add
xor
filds
incl
pop
in
push
inc
mov
jb
dec
jle
lods
cld
dec
fsubs
sti
jge
fistps
bound
mov
cmpl
fisttpll
les
inc
data16
cmp
xchg
lds
out
pop
test
fs
lret
lea
lock
inc
inc
jmp
jno
enter
mov
dec
std
ja
mov
movsb
and
mov
or
incl
aas
dec
push
jne
repnz
dec
jmp
mov
mov
call
and
mov
push
push
mov
adc
cmpsl
pop
adc
fiaddl
sub
push
lret
jae
cltd
adc
xorb
xor
mov
add
adc
hlt
or
jns
aam
and
out
adc
push
shr
add
leave
and
cs
ds
ret
fsts
filds
jns
cmp
inc
cmp
add
push
pushl
push
scas
xchg
pmullw
ret
and
push
insb
push
or
jp
and
inc
cmp
jg
decl
pop
add
adc
xlat
insb
lea
jmp
mov
pushl
xor
adcb
push
dec
sub
rcrb
cmp
sahf
bound
xchg
rcl
incl
pusha
push
lds
cmp
push
mov
add
jmp
mov
cmp
incl
mov
rcrb
cmp
imul
mov
xor
jnp
ljmp
rolb
loop
dec
xchg
push
pop
out
pop
sti
fs
xlat
cli
pop
push
ja
xchg
mov
xchg
cs
jmp
sub
mov
xchg
or
aas
mov
mov
cmpsl
lods
push
jnp
mov
ret
push
inc
push
lcall
loope
out
in
ds
clc
inc
es
pop
sbb
add
sub
fistps
add
call
out
pop
mov
push
mov
xchg
pop
fsts
inc
mov
call
cwtl
adc
mov
or
loop
pop
xchg
and
insl
js
push
dec
dec
sub
mov
jmp
rcrb
pop
push
sbb
pop
daa
fistl
jge
out
loopne
icebp
fldenv
rcll
call
or
xor
push
int
lahf
jno
inc
cmp
repz
mov
outsl
xchg
dec
or
daa
call
jmp
sbb
cmp
xchg
ds
and
fmull
daa
sbb
call
jae
movb
inc
xchg
jmp
pop
jl
pop
std
dec
and
lea
add
not
lock
mov
add
mov
movsl
or
add
inc
add
test
lods
xchg
jecxz
popl
pop
sbb
cmp
dec
lds
mov
adc
aas
and
dec
sbb
shlb
xchg
call
incl
hlt
jbe
imul
push
nop
jl
xchg
pop
mov
jae
or
shll
add
push
or
data16
jmp
mov
jo
sub
mov
inc
mov
cmp
test
jb
addb
in
incl
xchg
scas
add
inc
mov
in
cltd
adc
cmpsl
inc
stos
xor
outsl
inc
adc
xchg
dec
jg
jmp
or
inc
pop
dec
int3
ret
repz
cmp
mov
insb
push
jp
mov
mov
pushf
inc
dec
and
outsl
cmp
psraw
inc
in
pop
sar
jg
imul
pop
push
push
mov
insl
mov
pop
mov
jne
ljmp
push
jnp
push
mov
mov
out
and
cmp
inc
lret
fdivr
rorb
push
icebp
jmp
into
mov
mov
es
jbe
insb
lcall
xchg
xlat
inc
fprem1
mov
das
mov
jle
or
xor
imul
xchg
mov
scas
fnstenv
shl
sub
std
rol
call
std
cmpsl
fnstcw
imul
cltd
inc
cmp
sub
inc
fildll
pusha
sbb
ss
enter
jb
jbe
gs
stos
icebp
adcl
inc
inc
add
fmull
push
pop
das
cs
ja
pusha
sbb
adc
xor
xor
mov
incl
push
aam
movsb
inc
and
inc
pop
dec
bound
xchg
sbb
sub
ss
call
mov
repnz
sahf
and
cmp
dec
and
pop
inc
xchg
xlat
or
mov
lea
xchg
fbstp
sub
jns
subb
aam
outsl
dec
sahf
nop
test
jecxz
call
xor
out
insb
rcrb
jno
insl
push
pushw
inc
sub
pop
push
outsb
mov
ss
jmp
arpl
push
jge
insb
add
mov
cltd
nop
sub
or
jmp
dec
out
imul
add
out
dec
enter
jo
push
mov
inc
xchg
sbb
mov
push
xor
aaa
incb
pop
pop
cmp
inc
jecxz
xchg
outsl
clc
jmp
iret
mov
inc
sub
hlt
xor
enter
int
mov
nop
decl
notb
pusha
cmp
or
je
fisubrs
clc
in
stos
enter
xchg
cmp
xor
push
shlb
sbb
cwtl
xchg
xor
fs
adc
jge
incl
dec
cmp
adc
cwtl
or
adc
sub
mov
xlat
push
ficomps
leave
repz
adc
fsubs
sub
sub
ds
jmp
addr16
jmp
cld
mov
push
mov
cmp
mov
and
jmp
xlat
push
mov
movsb
jmp
push
shrl
pop
fsubrl
stc
das
rclb
popa
jp
fdivs
leave
mov
adc
pushl
jno
fmul
pop
mov
scas
ja
mov
push
pop
cld
add
jg
idivl
stc
adc
int3
fcmovu
sub
fisttpll
push
jnp
xor
orl
leave
insb
push
out
in
push
push
ret
dec
movsb
jge
push
es
cli
leave
sbb
cli
sbbl
dec
xchg
sbb
cmc
lods
fisubl
rorl
or
jo
push
jg,pn
fmull
popf
jno
aas
or
mov
cltd
xor
in
hlt
push
xor
push
xor
out
incl
adc
andb
test
leave
jno
cmp
call
cmp
cli
in
shl
xorl
mov
jne
pop
adcb
xor
inc
repz
or
or
les
or
ljmp
js
pop
pushf
xlat
shl
clc
es
mov
prefetchw
lds
cmp
add
push
in
or
inc
and
jmp
dec
inc
mov
mov
rcrb
mov
mov
xlat
adc
pusha
lea
jno
jg
incl
mov
mov
lcall
dec
movsl
and
and
mov
fcmovu
sbb
lock
push
mov
sbb
call
ss
cld
jne
sub
add
cmp
popf
or
xor
ja
loopne
sbb
pushl
div
lock
inc
int
and
xor
lods
xchg
mov
xor
dec
sbbb
push
mov
mov
jge
or
sar
mov
inc
lcall
scas
pop
andb
mov
pusha
sub
jmp
punpckhdq
sbbl
add
outsl
lcall
jecxz
mov
aad
inc
and
push
cs
movsb
ja
lret
add
jmp
jecxz
call
fsubrl
mov
repz
ret
push
cs
dec
xchg
mov
aaa
mov
rclb
cmp
or
cld
dec
sub
cmp
cmp
in
popf
add
mov
mov
push
mov
jae
mov
out
add
mov
mov
sbb
xchg
lahf
inc
pop
mov
push
shl
ljmp
mov
mov
push
shrb
cmp
mov
pop
mov
sbb
push
mov
xchg
sbb
imull
xor
or
decl
popf
loope
mov
jae
lahf
lcall
add
jmp
lock
xchg
xchg
cld
ljmp
js
js
fimull
sbb
imul
hlt
dec
shl
adc
in
mov
pop
xchg
mov
mov
lret
in
mov
jne
hlt
fstps
jmp
cli
scas
sahf
fstpt
stc
jmp
xor
add
cmp
dec
mov
aaa
jl
rcl
xchg
subb
sbb
mov
imul
pushl
sub
push
subl
cmpsl
fnstsw
or
test
ja
xchg
test
cmc
testl
push
adc
push
sahf
inc
pushf
daa
lret
in
mov
mov
inc
ljmp
cltd
movsb
ss
test
jbe
dec
jbe
incl
mov
cmp
add
outsb
inc
inc
add
dec
dec
pop
jno
push
repnz
enter
xlat
lret
adc
loop
mov
fs
push
add
push
xchg
cmp
outsl
nop
cmpl
out
pop
push
fmuls
push
push
xor
jnp
test
inc
test
aas
aam
xor
inc
or
push
dec
xchg
int3
aaa
cld
jmp
shl
push
xchg
movsl
repz
call
pop
addb
lods
mov
enter
or
push
popa
or
jp
push
and
or
aam
pushl
subb
ffree
popa
xchg
xchg
aaa
dec
add
xchg
jbe
ds
movsb
sub
sti
mov
call
dec
mov
popa
mov
daa
mov
adc
sbb
sti
jne
loope
jno
idivb
adc
pop
sahf
adc
loope
or
movsb
cmp
pop
pop
push
mov
mov
and
outsl
pop
mov
pop
and
jle
enter
dec
cmp
pop
cmpsl
sub
cld
ljmp
fs
push
lods
bound
lret
ja
pop
cmp
stc
insb
jl
mov
mov
gs
mov
jne
mov
notl
pop
ret
lahf
cmpsl
jae
xchg
lock
incl
xor
pop
sbb
das
sbb
mov
shrb
test
mov
mov
mov
jb
decb
inc
push
ret
fcmovnu
pop
push
jmp
call
stc
fwait
aam
dec
scas
xchg
stos
pop
sbb
outsl
shlb
and
movsb
incl
outsb
push
stos
call
or
mov
cmp
jno
stc
fsts
repnz
sub
jmp
mov
inc
cs
mov
popf
inc
icebp
pop
into
sbb
mov
xlat
ror
pop
inc
jae
push
ss
pop
incl
sahf
add
adc
repz
xchg
dec
lahf
adc
test
pop
imul
subl
add
test
push
mov
aas
shlb
in
insl
movsl
nop
pop
adc
or
mov
mov
aam
xlat
fcmovnb
xchg
int
addr16
dec
lret
jmp
sub
addr16
ds
loop
mov
jae
lods
lret
lcall
aad
mov
lds
shrb
mov
sbb
pushl
ror
cmp
clc
fcomp
dec
jecxz
cmpsb
xchg
lret
or
sub
call
inc
or
sarb
jle
push
mov
pushf
xor
sub
mov
push
aaa
ret
and
or
jne
hlt
xor
jne
aad
add
cmp
inc
faddl
popa
or
movsb
mov
jns
lret
fnstcw
dec
cwtl
sbb
jmp
test
adc
repz
negl
ljmp
jecxz
jmp
jbe
call
loopne
and
movsl
inc
dec
xor
jl
rorl
mov
inc
push
movsl
cmp
mov
mov
adc
xchg
jnp
repz
dec
mov
je
repz
stos
pop
fwait
mov
call
sbb
imul
mov
mov
jp
out
dec
mov
cmp
jmp
sbb
repz
cmp
test
sti
sti
mov
xchg
and
enter
push
dec
sub
loopne
jmp
idivl
into
rclb
sbbl
mov
and
xchg
dec
pop
inc
nop
icebp
push
jnp
lock
int
mov
fisttps
ret
inc
inc
mov
mov
mov
in
sbb
add
mov
mov
aas
out
push
decl
mov
gs
mov
jo
sub
cmp
pop
ljmp
out
test
mov
inc
or
mov
lret
arpl
mov
xlat
add
pushl
gs
dec
and
or
mov
pop
jo
push
push
jne
jl
roll
pop
xchg
mov
pushl
cwtl
dec
mov
and
lds
mov
sbb
mov
jle
adc
fcomip
enterw
inc
and
aad
adc
stc
jns
fildl
hlt
mov
mov
cmpsb
decl
cmpsl
addr16
push
mov
inc
jmp
xlat
fsts
repz
mov
jecxz
add
call
cmpsb
sbbb
es
xchg
jp
push
cmpsb
inc
xor
sub
push
mov
jb
xor
lods
adc
push
lods
cmp
in
call
leave
sbb
testl
or
mov
xchg
sub
cmpsb
inc
add
ljmp
jae
add
push
enter
cmp
popf
inc
sbb
cmp
cld
aad
add
out
push
insl
mov
and
testl
mov
ljmp
mov
dec
aaa
inc
insl
ss
imul
push
pop
xchg
push
or
mov
push
pop
xor
lds
cltd
out
imul
out
ja
push
lcall
cli
push
pop
dec
iret
pop
stos
cmp
sub
pop
pop
push
repnz
rclb
push
ret
mov
pushl
push
pushf
insl
icebp
cmp
cmc
lods
push
push
rcrl
inc
jnp
mov
test
scas
clc
ror
mov
outsb
outsb
pop
lods
fmulp
out
fildl
mov
pop
sbb
fcomip
jg
xor
cmp
arpl
mov
inc
insb
inc
cmp
imul
fstl
ljmp
iret
adc
xchg
xor
sbb
push
mov
dec
repz
call
out
test
sbb
push
add
jle
sub
cmc
lcall
jmp
xchg
or
jno
subb
lret
ja
pusha
adc
ljmp
in
pusha
jle
or
adc
loopne
jle
les
call
mov
jg
ret
test
push
cmpsb
je
pop
in
add
mov
xchg
into
rcl
jmp
mov
sbbl
jp
into
lods
addr16
xor
jmp
add
mov
cld
outsb
test
xor
mov
adc
jo
call
int3
mov
int
pop
push
gs
mov
mov
outsl
call
jbe
and
jge
ftst
mov
adc
cmp
pop
insb
jge
sub
mov
xor
mov
mov
pushl
jne
mov
push
sahf
inc
lea
outsb
sbb
out
popf
push
jge
or
sub
mov
movsb
dec
inc
dec
mov
lcall
jg
stc
leave
popa
add
lock
test
mov
mov
lock
adc
loope
shll
inc
setle
lretw
repnz
cs
decl
inc
mov
or
pop
stc
rol
in
adc
lods
jo
cli
adc
pop
aaa
xor
cmp
xor
add
nop
push
incl
pushf
outsb
push
ret
aaa
jecxz
adc
in
xchg
cmp
loope
fcomip
lcall
iret
xchg
jo
mov
jge
inc
stos
lock
xor
add
fcomps
pop
cld
jmp
jg
lret
sbb
lods
cli
cmp
gs
repnz
into
pop
push
call
sbb
sub
mov
mov
push
pop
inc
lcall
or
enter
jmp
sbb
jae
mov
out
push
push
dec
incl
sub
dec
xchg
mov
mov
ja
jp
pop
push
rcrl
int3
adc
ljmp
call
jl
adc
in
push
pop
cld
out
outsb
mov
pushl
pop
movsl
fistl
jns
jmp
out
jne
enter
aaa
arpl
push
scas
cli
cmp
stc
push
mov
inc
pop
jmp
popa
popa
bound
inc
cmp
aaa
adc
xchg
call
mov
sbb
and
call
aad
cmp
inc
dec
shl
bound
mov
lcall
fstps
pushf
inc
sbb
mov
and
add
clc
cmp
mov
pushl
mov
mov
outsl
repz
adc
cmp
cmpsb
sub
testl
jge
jg
cli
repz
pushf
xchg
push
sbb
jb
ret
and
stos
add
jp
lret
mov
out
cli
dec
outsl
jmp
xchg
pusha
inc
mov
sub
xchg
gs
sbb
push
push
mov
adc
push
mov
loopne
fidivrl
stos
andb
jg
mov
xchg
cmp
std
and
jp
mov
xor
push
and
xchg
dec
daa
push
cmpsb
jne
pop
adcb
add
cmpsb
in
and
fsubrl
add
inc
cli
in
mov
incl
cld
xchg
dec
test
dec
dec
pusha
cmp
xor
icebp
jge
out
jg
ja
sar
ljmp
xor
mov
mov
test
aad
push
add
sbb
jg
ds
outsl
imul
pop
out
test
cmc
push
outsb
fsubrp
lock
mov
aas
dec
ret
out
lods
xchg
test
cmp
pushf
into
int
pop
push
xlat
sub
dec
in
sub
pushl
imul
jecxz
call
clc
mov
cmpsb
aad
lret
dec
mov
mov
push
jp
int3
pop
lds
lahf
add
dec
push
or
andl
popa
inc
pop
shrl
in
mov
je
leave
fldt
inc
sub
xchg
mov
dec
mov
bound
daa
cmp
incl
clc
or
daa
in
test
push
in
cmc
stos
je
mov
call
cmp
ret
cmp
jmp
in
inc
js
and
mov
pop
xchg
call
lret
rolb
sbb
push
mov
add
add
pop
jl
into
add
pop
daa
push
cmc
fmul
xor
arpl
mov
adc
xor
push
pop
fadd
leave
jo
jb
shlb
call
nop
add
mov
fisttps
sub
das
icebp
test
out
clc
jnp
cmp
add
mov
out
cmp
mov
daa
cld
mov
aad
cld
ljmp
jp
aaa
ret
jae
sbb
jo
xor
jmp
arpl
insl
ljmp
fwait
sbb
je,pn
subb
aam
lock
lret
leave
mov
adc
dec
xor
sbb
sub
lahf
hlt
add
push
push
std
push
jl
sub
jge
mov
push
and
into
lret
std
mov
and
sbb
outsl
psllw
inc
stos
sub
xchg
andb
dec
les
jbe
movsl
or
xor
and
cmp
jl
incl
cld
lcall
imul
mov
cmpsl
test
sub
lcall
jl
xchg
jmp
div
test
pop
lods
das
and
jg
lock
or
fsubp
adc
scas
int3
popf
notl
decl
clc
test
inc
dec
gs
cmpsb
or
fmull
cmc
push
cmpsl
mov
lcall
jecxz
rcll
jle
sbbl
adc
adc
push
mov
jl
jns
loope
bound
push
adc
xchg
adc
loop
or
lock
aam
cmp
mov
mov
or
fsts
sub
jle
es
and
decl
lea
sub
cmpsl
int
push
jne
jge
mov
outsl
mov
inc
addr16
in
test
mov
cmc
mov
call
aad
inc
push
imul
and
decl
fwait
pop
mov
pop
sub
push
sub
subl
incl
mov
out
in
mov
pusha
xor
mov
stos
gs
sub
ljmp
gs
dec
inc
inc
loope
cmp
mov
dec
jg
loope
mov
aas
fldcw
movsl
inc
xor
push
sbb
jge
fwait
aad
adc
gs
decl
pusha
inc
shl
xchg
mov
lock
cltd
adc
das
pop
inc
and
enter
incl
int3
in
out
roll
ficomps
mov
sahf
inc
push
jns
repnz
addr16
xor
incl
pop
or
scas
movq
add
in
out
icebp
sub
cmpsl
test
adc
incl
add
xor
push
es
mov
fdivrs
fidivrl
inc
xchg
mov
or
sbb
outsb
in
fstps
ljmp
pop
sub
imul
xchg
das
cli
call
mov
notl
xorb
pop
push
incb
inc
pop
cwtl
cwtl
xchg
ljmp
insb
icebp
cwtl
xor
pop
fiaddl
scas
cli
stos
stos
mov
or
scas
rolb
push
pop
mov
adc
call
jbe
add
adc
ret
call
mov
add
push
dec
jnp
lcall
pop
test
jg
push
dec
mov
push
fdivl
imul
jno
jle
je
mov
xor
aam
les
pop
sar
mov
mov
mov
push
or
jg
jg
lea
movsb
mov
xor
mov
jecxz
call
sub
popf
enter
pop
leave
xor
call
inc
ds
shll
sbb
cwtl
adc
lods
cltd
add
mov
jg
movsl
std
fdivrs
out
lcall
mov
sub
sbbb
xor
mov
insl
mov
lods
inc
idiv
scas
clc
jmp
push
xor
out
divb
jbe
jmp
pusha
push
lock
sbb
cld
out
fwait
movsb
cli
jmp
ja
and
push
and
lahf
js
pop
pop
fiadds
push
lds
dec
or
sbb
mov
lods
in
push
out
das
mov
adc
iret
mov
cmpsb
mov
add
lcall
push
inc
pop
mov
shlb
mov
push
cmpsl
inc
dec
rorl
cli
sbb
xchg
out
ljmp
inc
int3
dec
aas
pop
cmp
mov
int
xchg
daa
cwtl
jp
fcomip
xor
mov
shl
test
lea
cld
movsl
imul
dec
push
mov
sti
aad
stos
clc
cmp
cld
lock
repz
mov
sub
loop
imul
push
jmp
cltd
mov
aam
mov
xor
add
loopne
jecxz
push
call
loop
push
addr16
xchg
lret
mov
out
inc
in
and
scas
aaa
sbb
fstps
cmpl
enter
push
out
mov
loopne
pop
negb
insl
inc
sub
sbb
leave
fnstenv
js
sub
in
jecxz
mov
stos
inc
cld
pushf
lcall
dec
add
cwtl
adc
aam
mov
mov
dec
adc
and
dec
jb
lret
and
mov
pop
imul
sub
fsubrp
out
jecxz
pop
jmp
adcb
adc
mov
fsubrs
loop
and
and
xor
in
or
ljmp
and
or
fstpt
mov
push
pushl
adc
ja
lds
lds
push
inc
repnz
or
sub
cmp
lcall
outsl
out
cmp
adc
mov
mov
adc
jle
pop
adc
ja
lcall
aad
fidivl
loop
mov
outsl
mov
dec
ljmp
ljmp
xchg
divb
mov
test
jge
mov
inc
jns
cmpsb
das
mov
nop
mov
rcr
lcall
sub
in
jmp
je
pop
mov
nop
add
and
in
xorb
pushl
int
cwtl
mov
imul
dec
pushf
ficompl
in
loop
lock
cmp
xor
je
ret
inc
mov
sub
stos
inc
mov
or
dec
mov
decl
insl
inc
fs
dec
inc
data16
sub
mov
cmp
stos
incl
ljmp
das
sub
pop
popa
outsl
sub
enter
incl
jl
mov
je
push
and
jns
inc
sub
mov
insb
orb
das
adc
out
push
bound
int
cmp
orb
and
aas
push
mov
xlat
jae
shlb
shr
mov
mov
or
test
popa
mov
stos
xchg
push
jo
call
mov
decl
push
jmp
cltd
test
inc
xchg
pop
rclb
inc
mov
dec
pop
aaa
inc
mov
call
mov
in
and
dec
mov
push
fcoml
fistl
xor
dec
jo,pn
ljmp
dec
notl
push
or
loop
push
cwtl
push
loope
push
mov
push
inc
lods
fs
pushl
movsb
arpl
xor
iret
push
push
inc
cmp
xor
popa
add
popa
test
ret
lcall
fisubl
jle
mov
inc
pop
loopne
filds
jg
sbb
push
and
nop
jmp
rclb
mov
out
adc
lret
incl
dec
add
cltd
sub
or
roll
rolb
jecxz
adc
incl
inc
cmp
fistpll
mov
iret
dec
andb
sbb
pusha
shlb
shl
mov
add
adc
xchg
mov
mov
movsl
iret
inc
pop
out
lret
ret
sbb
pushl
shrb
testl
add
inc
push
mov
mov
std
faddl
insl
sbb
pop
leave
hlt
cld
mov
push
or
lcall
push
int
test
jmp
outsb
and
and
loopne
adc
push
cmp
addr16
decl
push
test
cmp
icebp
xor
out
popa
cmp
push
lods
mov
call
jmp
cmp
jo
xor
pop
mov
out
jo
xor
sbb
jo
push
arpl
decl
xor
mov
fstl
popa
inc
out
popf
mov
cs
inc
dec
scas
out
xor
fdivr
incl
shlb
adc
dec
or
push
jno
add
icebp
filds
call
imul
hlt
or
lcall
jmp
adc
push
inc
or
ret
fldt
or
cld
xchg
mov
lds
movsb
in
mov
pop
lcall
popf
out
cli
jp
mov
xor
pop
inc
call
into
sub
dec
shlb
repnz
scas
adc
mov
mov
pop
mov
push
xchg
add
sbb
dec
or
jmp
jg
mov
inc
test
adc
xchg
mov
addr16
add
push
imul
jmp
jnp
or
subl
es
mov
dec
push
fsubl
iret
ret
or
mov
jmp
fwait
mov
pop
xchg
xchg
jne
imul
dec
mov
rcrl
push
pop
cmpsl
cmp
in
sbb
lcall
push
popa
mov
sbb
mov
leave
pop
mov
xor
popf
repz
lret
inc
pop
sti
add
push
call
shll
dec
jno
cmpsb
lcall
pop
and
sub
loope
pusha
add
test
mov
in
jbe
lahf
fsubs
sbb
jns
test
shrl
ja
or
dec
js
out
mov
lea
push
dec
cmp
xchg
jge
jmp
aas
xchg
xchg
sub
jmp
sbb
in
xor
mov
sti
imul
ret
xchg
xor
aas
xchg
xchg
jecxz
pop
mov
call
shlb
std
es
xchg
mov
jb
mov
lcall
sbbl
mov
lods
cmp
dec
mov
xor
ljmp
arpl
mov
sti
mov
jo
test
lcall
xchg
in
xchg
lret
cltd
ror
mov
or
mov
pushf
cmpb
outsw
ror
xlat
cmpsb
sub
jg
test
test
call
xchg
in
inc
movsb
mov
or
adc
in
jo
sbb
test
popf
pop
add
cs
mov
mov
mov
aaa
mov
pop
pop
and
mov
xchg
pusha
fsubs
cmp
hlt
fs
lds
in
cmp
shll
xchg
fidivs
push
push
arpl
pushf
out
clc
dec
clc
iret
cmpb
gs
add
sbb
arpl
fs
lcall
sub
insb
lahf
jo
in
pop
cmp
xchg
ret
jae
xchg
mov
std
pop
fisubs
call
inc
mov
ret
pusha
int
enter
mov
jg
and
jmp
and
mov
mov
int
xchg
decl
clc
lahf
cwtl
dec
jle
xchg
xchg
incl
cli
ja
mov
xchg
mov
mov
fcompl
lret
push
call
nop
pop
or
ljmp
jnp
adc
mov
mulb
fldcw
jo
decl
popa
addr16
sti
lock
jne
inc
and
test
fstpt
push
aaa
std
jg
push
pushf
mov
loopne
dec
sbb
into
popf
cmp
cmp
imul
js
adc
leave
not
mov
or
lret
ljmp
push
mov
in
xchg
cmp
sar
inc
ljmp
dec
cmpsl
cld
or
mov
outsb
or
jns
mov
incl
mov
movb
jmp
mov
lret
pop
mov
jg
popa
xchg
cmp
xchg
in
push
cs
cli
and
fisubl
mov
out
dec
xlat
push
imul
inc
mov
je
int
out
and
jg
push
jb
sbb
lahf
mov
mov
mov
int3
daa
mov
push
jmp
imul
shll
mov
clc
lods
rcll
pop
scas
push
imul
inc
loopne
jge
data16
ljmp
cltd
or
xchg
adc
ss
outsb
push
mov
and
pop
mov
insb
ljmp
pop
iret
xor
adc
loope
push
aam
mov
jno
cs
mov
test
data16
js
dec
pushl
lods
ret
cmc
int
fldcw
stos
xchg
sbb
sbb
push
adc
mov
mov
and
jmp
lcall
inc
int3
ljmp
std
fdivrl
call
ljmp
je
daa
sub
call
dec
sbb
sti
stc
scas
jle
cmp
cmc
test
or
orl
fs
and
push
lods
xchg
ss
and
inc
adc
fwait
push
cmpsl
dec
jno
ljmp
test
cmp
sub
lds
sbb
repz
jl
lcall
insl
dec
add
push
jg
adc
fstps
fimuls
cmpsb
jo
fstl
popa
mov
jp
call
pop
mov
fcoms
lcall
scas
jb
lcall
and
push
jl
jb
push
decl
xchg
or
jge
xchg
jno
add
sbb
mov
ja
out
xlat
stos
cmc
or
jnp
data16
mov
fstl
jg
lea
mov
push
add
lret
mov
mov
jae
scas
mov
sbb
leave
dec
fbld
push
cli
push
lcall
jo
dec
push
lcall
sbb
mov
push
fs
adc
mov
cli
jg
push
sbb
adc
add
jae
movsb
sub
jno,pt
stc
das
gs
push
jmp
sub
jecxz
or
mov
ss
jg
jmp
inc
mov
add
add
pop
fnstenv
and
cmpb
xor
cmp
sub
push
xchg
dec
aaa
push
out
and
sbb
push
pop
lods
jae
inc
mov
lcall
ss
insl
pusha
cmp
cmp
xor
fiaddl
sbb
push
add
lcall
ret
cmovbe
rorb
push
test
or
call
rcll
and
mov
push
and
cmp
push
fldl
mov
and
mov
jbe
dec
or
lahf
mov
incl
adc
js
jb
xchg
xlat
xor
and
ss
or
cmpsl
sbb
lds
mov
mov
fisubl
or
pop
pop
cmp
dec
xor
xchg
movl
ljmp
inc
mov
add
xchg
call
cwtl
loop
fsubrs
pop
icebp
popa
ljmp
lahf
ljmp
fwait
mov
or
or
mov
add
xchg
mov
dec
insb
dec
das
adc
jg
dec
sub
inc
fwait
cltd
cmp
cli
sbb
mov
mov
xchg
es
decl
dec
xor
push
hlt
fbld
add
hlt
cli
xchg
pop
jmp
test
pop
shll
push
mov
pop
mov
rorb
movsl
cmp
sbb
je
sbb
fs
insb
sarb
mov
jmp
adc
sub
ror
fisubs
add
pop
loope
and
mov
cmc
notb
jge
lcall
sub
sub
jb
push
insb
es
jb
dec
sahf
adc
push
out
outsl
shll
pushl
lods
pop
cmp
sbb
shlb
mov
pop
jmp
xor
decl
lret
pop
insl
insb
pop
test
movsb
addr16
repz
mov
mov
mov
mov
iret
loopne
lahf
pop
das
das
es
xchg
xchg
cwtl
outsb
cmpl
call
ret
cwtl
adc
mov
and
dec
adc
sbb
decl
mov
sub
popa
call
je
pop
imul
fstl
cld
dec
dec
cmc
into
aaa
jnp
data16
ret
lahf
cmp
stc
inc
testl
loope
dec
testb
repz
inc
sti
scas
pushl
sbb
sub
insb
adc
loope
lock
mov
pop
fcomip
js
fwait
in
push
cmp
out
push
ds
jo
popa
cmp
mov
mov
call
mov
cmp
pop
lods
mov
fistpl
adc
jmp
cmpsl
mov
mov
xor
jl
lcall
scas
sbb
adc
out
aam
cmc
cmp
in
dec
or
incl
dec
pushf
ss
mov
add
xor
cld
daa
iret
add
in
cmpb
incl
mov
std
or
pop
out
iret
cmp
mov
mov
bound
jp
xchg
add
jnp
fisttps
cli
je
xchg
sbb
push
cmpsl
and
pushf
js
daa
cwtl
sbb
jecxz
shl
pop
sbb
adc
mov
movsl
or
jmp
jmp
in
cmc
sub
and
add
outsl
lea
xchg
fsubl
xor
mov
inc
and
inc
add
pushl
cmpsb
jp
mov
adc
adc
jnp
xlat
ret
lods
in
in
clc
je
mov
mov
int
aas
push
sbb
sub
cmpsb
inc
test
jne
in
dec
cmp
pushl
mov
jns
add
adc
or
or
ljmp
cmp
ljmp
xchg
out
xor
cld
mov
adc
out
imul
incl
cs
insb
or
inc
pop
push
inc
push
pusha
decb
jnp
test
sbb
ljmp
call
or
adc
das
mov
subl
push
cmp
ljmp
into
mov
pop
push
xor
mov
test
jg
outsl
xor
jl
dec
push
les
dec
mov
jno
add
arpl
lcall
ljmp
pusha
insl
sbb
cmpsl
cli
mov
mov
xlat
aas
jl
adc
scas
cwtl
lds
aad
sub
daa
mov
cmp
add
mov
sub
push
push
jge
out
testb
mov
dec
loope
popf
iret
push
dec
lock
pop
addr16
imul
push
jmp
inc
pop
arpl
loopne
adc
cmpsl
xchg
push
ds
sbb
cmp
adc
mov
jl
mov
mov
jg
shlb
add
test
sub
push
cld
xor
adc
cmp
fsubrp
mov
stos
notb
pop
in
out
pop
inc
inc
not
incl
xor
sbb
push
dec
xchg
movsb
mov
xchg
jp
pop
push
lods
scas
cli
incl
movsl
out
or
faddl
adc
lock
mov
cld
decl
xorb
ret
jg
icebp
aaa
pop
jno
movsl
add
inc
std
xchg
fdivrp
cli
dec
fs
shrl
sbb
mov
test
fisubl
bound
push
inc
fidivrs
push
dec
xor
cli
jg
push
enter
or
push
stc
mov
in
das
mov
adc
aad
dec
pop
and
aas
in
push
int3
and
mov
jg
call
push
push
outsb
nop
mov
ror
jb
and
iret
mov
jg
dec
cmpsb
faddp
sbb
adc
push
cmc
or
or
sbb
pop
test
mov
jmp
adc
sbb
cmpb
gs
jecxz
xchg
les
dec
xchg
fstpt
psrlq
scas
fidivs
pop
pop
pop
add
pop
push
and
push
xchg
ret
pop
imul
push
pop
pop
sub
je
inc
jle
decl
dec
push
out
lods
mov
mov
aaa
aas
xor
sub
dec
cmp
imul
adc
mov
ret
out
je
xchg
repz
ljmp
mov
adc
inc
test
dec
mov
push
pusha
xor
dec
sbb
jne
clc
lcall
cmp
cwtl
ja
and
stos
aad
push
pop
sahf
mov
mov
decl
mov
dec
lret
inc
repz
mov
cld
lods
outsb
fistpll
add
ss
mov
jecxz
stos
lret
inc
inc
add
lock
aam
mov
lock
lock
sub
in
jg
push
sbb
filds
push
jmp
xchg
sahf
sti
cmp
mov
nop
loop
clc
pushl
pop
gs
dec
jns
xlat
fwait
xchg
shr
insl
push
repnz
lret
xor
pushl
sbb
loop
out
ret
test
adc
mov
pop
test
sahf
pop
xor
jae
jg
sub
call
dec
fcmovnbe
pop
push
pushf
mov
fcom
scas
stos
in
imul
aas
fwait
xor
add
sbb
cli
in
and
fbld
mov
cld
decl
cwtl
inc
ficomps
aaa
hlt
mov
lcall
gs
decl
adc
mov
mov
jge
xor
cmp
jmp
xchg
mov
shrb
dec
mov
jns
push
cwtl
sub
or
les
pop
imul
dec
add
insl
ljmp
mov
vorps
pop
sbb
push
lret
jmp
mov
sub
ja
out
adc
popf
mov
jns
aas
xlat
shrl
jmp
aaa
and
jae
sbb
jle
popf
nop
xchg
loop
insb
aas
mov
ss
shrl
mov
add
lods
cwtl
mov
sarb
rolb
ds
dec
cli
ja
or
decl
fidivl
and
in
and
push
cmp
mov
xor
jmp
or
mov
inc
por
add
call
jns
shl
dec
out
call
lock
decl
mov
push
sub
fwait
cmc
adc
xor
mov
loopne
sub
pushf
mov
es
ffreep
movsl
pop
leave
testb
mov
sbb
xor
mov
hlt
cli
inc
pusha
movsl
fcomip
imul
mov
lcall
sub
sarb
sub
sbb
fldt
outsl
aad
out
push
jns
sbb
add
inc
std
subl
add
shll
incl
adc
jge
xor
mov
adc
mov
sahf
cmp
adcb
adc
mov
adc
enter
stos
out
inc
push
mov
sbbl
jl
dec
es
mov
data16
test
popf
sti
iret
mov
push
xchg
xor
jae
push
fsubrs
movsb
divl
xchg
push
mov
mov
inc
sarb
mov
mov
call
cwtl
push
decb
pusha
and
int
pop
pushf
sbb
popa
fildl
pop
fmull
incl
add
iret
addr16
adc
or
stos
repz
clc
and
aas
xlat
fnsave
dec
pop
or
jmp
add
jo
jp
pop
rorb
sub
hlt
leave
int
pop
xchg
sahf
in
sarb
pop
rclb
pop
dec
pushf
xor
xchg
outsl
pop
les
ret
or
test
hlt
adc
incl
cmp
or
jae
pop
inc
push
add
inc
stos
xchg
cltd
sub
cmpsb
bound
data16
push
incl
popf
cmp
jge
bound
pop
stc
jp
or
or
or
and
pushl
mov
add
addb
idiv
outsb
sbb
bound
cmpsl
out
mov
push
push
mov
incl
movsb
into
mov
lret
pop
mov
xchg
and
inc
mov
incl
mov
push
cli
or
fcoml
mov
nop
rcrl
sbb
sbb
pushl
xor
jb
stc
xor
xor
les
inc
cli
call
cmp
cmp
sbb
nop
push
cld
test
jg
add
mov
mov
push
popf
lods
subl
sub
icebp
fbld
lcall
notl
inc
shll
pop
lret
sbb
xor
inc
leave
test
aad
add
pushl
test
orb
das
mov
sub
mov
ljmp
xchg
test
xchg
sbb
mov
hlt
jecxz
insl
or
adc
mov
ljmp
mov
arpl
mov
cltd
lods
push
cmc
xchg
inc
mov
pop
scas
loope
scas
xchg
pop
incl
jle
popf
sbb
cli
test
gs
into
cmc
jns
enter
fcomip
jmp
lods
mov
jno
push
mov
adc
add
idiv
lcall
shl
clc
scas
push
test
fdiv
adc
test
add
inc
push
jmp
out
jp
int
popa
dec
ja
test
inc
popa
xchg
adc
das
in
ret
fwait
decl
mov
cs
inc
mov
sti
imul
daa
sub
lcall
int
jno
add
scas
xrelease
mov
aad
mov
push
pushl
stos
or
pop
ljmp
and
jp
nop
mov
out
loop
test
call
mov
push
ret
cmpl
rolb
inc
push
xor
outsb
mov
fists
pop
call
or
inc
jle
xchg
jae
rcll
and
incl
lea
push
add
or
mov
dec
es
cmpsb
fcomps
adc
es
shrb
cmpb
mov
cmp
lret
ret
shlb
push
mull
pop
imulb
xlat
lea
out
insb
xor
mov
xor
cmpsb
push
push
fisubrl
fs
jne
mov
pop
ret
xor
decl
adc
je
sarl
mov
rol
cld
xlat
imulb
add
adc
jg
in
sub
shr
xchg
dec
stos
ret
pushf
xchg
pop
std
lcall
push
cmp
cmp
push
je
fdivs
xor
lahf
push
add
out
enter
cmp
jae
cld
arpl
or
cmpsl
sbb
pop
jne
xor
aas
sbb
or
lcall
popl
imul
mov
das
jbe
loope
cli
pop
mov
add
lock
push
sub
inc
jb
fs
mov
mov
pop
dec
and
fcompl
jno
mov
pop
in
inc
imul
push
adc
mov
add
xor
lods
sbb
pop
push
aas
or
ljmp
inc
repnz
mov
aam
mov
push
stos
inc
cld
movsb
pop
enter
adc
jmp
mov
xchg
insl
push
inc
jno
jle
cltd
icebp
pop
int3
mov
push
push
sbb
sub
das
sar
insl
and
push
adc
pop
mov
test
cli
jp
jecxz
lds
faddl
cld
pop
leave
mov
or
call
or
incl
sbb
pop
shrl
xchg
scas
stos
lahf
jl
fsts
nop
test
sbb
call
mov
test
xor
pop
clc
dec
cmp
xor
or
push
decl
cs
insb
push
lea
xor
dec
mov
ja
sarb
insl
jb
ret
movsl
pop
cmc
decl
leave
lods
scas
lods
mov
rcrb
and
adcb
and
ljmp
lock
cmpsl
mov
jmp
pop
scas
iret
jbe
call
sub
sbb
pop
mov
lds
aaa
cld
decl
jmp
xchg
mov
cmc
sbb
jo
inc
and
aam
xchg
mov
call
jmp
leave
jne
pushf
add
dec
or
dec
inc
and
out
icebp
outsl
adc
jns
out
cmc
jl
inc
adc
int
pop
loope
rcr
outsl
cli
out
push
sub
lods
or
test
sahf
pusha
xchg
xchg
in
cmp
push
mov
inc
xchg
imul
mov
pop
push
pusha
push
negl
scas
fcomip
or
and
sbb
or
loope
decl
lahf
pop
xchg
fmul
jle
rcrb
xlat
popf
xor
cmp
rcrb
mov
stos
inc
std
popf
pushl
insl
pusha
xlat
jle
arpl
mov
cmp
push
push
mov
adc
push
cmp
insl
ja
mov
and
dec
sub
jl
or
sub
add
ret
decl
sub
mov
jecxz
addl
out
xchg
inc
xchg
test
sub
cli
imull
mov
lret
test
roll
call
cld
ljmp
cmp
xchg
out
mov
mov
mov
mov
pop
shl
aad
les
fbstp
mov
or
fmull
cmc
stos
loopne
mov
pop
and
int3
out
push
pop
and
and
dec
cmp
add
inc
jae
inc
fwait
jecxz
sub
pop
xor
ds
sub
test
push
cmpsl
jmp
sub
lods
dec
ret
pushf
sbb
inc
mov
xorps
lods
cmp
call
data16
lcall
cmc
or
ds
push
adc
adc
ja
jmp
adc
ljmp
inc
pop
das
xor
iret
jp
sbb
jg
xchg
push
test
ljmp
repnz
push
mov
movb
repz
jmp
in
mov
pusha
data16
add
mov
mov
cmp
fisttps
call
jne
inc
sarb
stc
cltd
and
adc
loopne
test
repz
js
jg
jmp
addb
add
sub
shrl
cmp
push
cmpsb
dec
adc
pushf
mov
dec
xlat
mov
jb
adc
dec
push
jnp
adc
js
mov
push
or
cmp
ljmp
cmp
mov
aaa
call
mov
xor
xor
jle
repnz
movsb
inc
ljmp
lcall
enter
push
mov
adc
cwtl
sbb
push
sahf
dec
push
add
pop
push
cld
pushl
sbb
adcb
push
or
fistps
loopne
std
incl
testb
add
pop
cld
lods
shrb
xor
aaa
fimull
js
incl
dec
and
mov
ljmp
mov
pop
pop
ljmp
sbb
les
mov
jl
sub
mov
and
xchg
test
mov
jmp
ret
push
pusha
inc
push
pushf
jnp
lock
stc
pop
mov
lods
xor
xchg
call
out
or
jno
sbb
movsb
adc
repz
xchg
loop
jp
decl
pop
push
mov
jmp
dec
inc
push
or
jle
decl
mov
cmpsb
jg
xor
mov
js,pt
or
cltd
xor
or
test
sbb
jnp
jae
lret
es
les
faddl
fildll
xchg
xchg
clc
icebp
lds
fisubl
loope
mov
cmp
sbb
in
das
fcos
cmp
fbstp
popa
in
ret
shll
mov
jle
push
ret
mov
inc
dec
decl
mov
inc
hlt
sub
jae
xor
mov
push
cmpb
ljmp
pushf
pop
daa
lock
out
jne
cmpsb
scas
decb
pushf
pop
pop
or
dec
mov
call
call
in
mov
fsubr
xchg
mov
xchg
movsb
aad
call
inc
aad
int3
xlat
dec
mov
sub
fsubp
scas
negb
in
stos
mov
mov
jl
push
lds
or
dec
in
fcomps
jg
incb
outsl
daa
out
jbe
out
loopne
repz
enter
cmp
decl
je
jbe
sub
mov
sub
sbb
and
test
insl
faddp
das
clc
adc
shll
xor
call
and
adc
rcrb
sub
mov
adc
cli
scas
mov
mov
loopne
and
sub
test
jmp
inc
push
and
cmpsl
popa
aaa
push
adc
jae
sbbl
aad
in
lea
test
xchg
outsb
lods
inc
inc
test
jmp
mov
js
shr
jnp
insb
jbe
hlt
inc
repnz
sahf
push
imul
sub
movsl
jmp
push
imul
sbb
jb
jp
dec
fsubrl
in
int
mov
or
loopne
mov
pushl
aaa
out
mov
xor
aaa
cmc
shll
xlat
and
ds
std
lcall
sbb
insb
xor
dec
int
insb
xor
enter
pop
iret
add
xchg
inc
ja
dec
xchg
das
scas
add
test
dec
loopne
inc
jae
mov
jecxz
inc
enter
and
mov
notl
cmp
int
call
ljmp
mov
mov
mov
cmp
decl
js
sbb
mov
xchg
les
mov
add
mov
cli
jg
outsb
loopne
arpl
mov
push
xchg
int
mov
jb
stc
data16
add
pusha
adc
mov
push
outsb
inc
push
jmp
jmp
mov
dec
cmp
mov
pop
lret
jp
adc
ror
jecxz
pop
fidivrs
dec
sub
shl
add
adc
jg
les
or
cmc
mov
out
jmp
cmp
bound
outsb
xorl
lcall
xchg
out
inc
clc
and
push
inc
mov
mov
fsubs
lcall
sbb
out
stc
jne
js
adcl
or
mov
lret
incl
jmp
out
lahf
es
cwtl
sub
cmp
add
cmp
dec
addr16
lods
mov
inc
xchg
jae
jp
xchg
or
mov
lea
aad
popf
fs
jno
int3
and
mov
cld
jmp
xchg
fdivs
sti
fptan
and
scas
test
xor
pop
aad
int3
or
sub
loop
ljmp
int3
negb
daa
inc
sub
jae
rolb
push
jbe
jmp
mov
js
cmpsl
fsubl
ljmp
iret
cwtl
mov
jnp
sti
adcb
mov
jnp
inc
mov
xor
lea
shl
xchg
sahf
cmpsl
pop
pop
clc
pop
sbb
sub
call
lahf
repnz
out
out
cmp
or
lret
stos
push
sar
lcall
and
xchg
jo
sbb
push
inc
pop
test
out
pop
inc
inc
cli
cmpl
jmp
cmpsb
cmpsl
mov
jmp
pop
rcl
daa
repz
lcall
aaa
out
pop
mov
jae
push
push
inc
xchg
shlb
popf
popa
and
incl
shrl
mov
xor
aam
popa
sti
das
test
pop
ljmp
incl
cltd
or
push
sub
out
mov
andl
pop
pop
lds
jmp
lcall
getsec
movsb
cmc
xchg
dec
outsl
idivb
sbb
cmp
jg
xor
jno
lds
ljmp
push
test
jle
mov
bound
pushl
and
sbb
or
and
insb
sub
xor
pushl
sub
psubusb
fimull
dec
sbb
ja
lahf
pop
lahf
cmp
push
idivb
fprem1
xchg
imul
adc
sbb
add
push
push
add
and
push
add
pop
lret
out
inc
daa
into
test
jb
inc
mov
mov
addr16
xchg
loope
hlt
aam
lcall
test
or
inc
mov
fstpt
push
fsub
hlt
addr16
push
jno
mov
lahf
movsb
dec
addr16
popf
jbe
dec
rcrb
ficoms
jnp
lock
fstpt
inc
cmp
popa
jp
sub
ljmp
cmp
and
cmp
sub
loope
aam
sbbb
fildll
iret
lcall
insb
add
add
adc
xchg
das
mov
test
ljmp
jmp
add
push
decb
jae
pusha
in
xchg
scas
decl
out
sub
enter
and
aaa
lods
aas
loop
sub
push
loope
add
inc
in
cmp
cmp
dec
popa
bound
jp
movsl
pop
faddl
push
sbb
lcall
ss
cmp
ja
mov
imul
mov
inc
jle
mov
mov
shlb
loopne
xchg
imul
aas
das
sub
call
lock
pop
dec
loop
push
out
popa
pop
ljmp
std
gs
add
mov
push
cmp
test
popa
enter
fwait
hlt
rorb
mov
push
std
jg
and
push
lods
mov
inc
inc
push
cmc
pop
call
ljmp
jmp
mov
sub
in
and
mov
daa
and
lea
pop
sbb
push
int3
mov
orl
jmp
pop
ljmp
cmp
lahf
fadd
and
add
push
in
loope
mov
lods
adc
mov
sbb
cmp
je
test
cltd
mov
adc
inc
inc
dec
push
pop
decl
inc
mov
adc
ss
lds
xchg
insl
mov
cmp
mov
das
inc
subl
rclb
sub
xor
inc
xchg
in
mov
xchg
adc
lret
push
loopne
add
int3
sbb
or
loopne
sbb
lret
decl
lock
mov
xor
adc
xor
lods
fsubrs
stos
call
std
cli
mov
icebp
or
movmskps
jp
xchg
inc
sbb
dec
cmovs
inc
insl
imulb
fsubrp
or
aas
ljmp
js
out
pop
addl
sub
dec
pop
xor
dec
scas
push
shll
inc
outsb
popf
xchg
mov
adc
push
sub
adc
cmp
psubq
sub
mov
xchg
sbb
lock
dec
ljmp
popa
test
adc
xchg
mov
popa
popf
add
add
loope
sbb
idiv
incl
jle
mov
jne
xchg
jge
rorb
or
mov
fldt
ljmp
jge
test
mov
or
push
push
movsb
stos
popf
and
pop
mov
lcall
ffreep
xor
in
shll
repz
test
mov
jl
inc
mov
mov
mov
inc
addr16
negl
sti
sub
push
xchg
decl
inc
push
xchg
push
push
sbb
sbb
sarl
adc
fwait
cmp
xor
pushl
shr
push
pop
jmp
fdiv
cmp
shl
mov
pop
mov
inc
ds
fistpll
mov
mov
xchg
incb
lock
mov
xor
xor
or
push
pop
incl
rclb
les
bound
pushf
mov
or
lock
xchg
adc
sar
jg
sbb
push
stos
movsl
out
pop
pop
lahf
dec
cmpsb
out
es
out
enter
aaa
dec
mov
cmpsb
push
pusha
mov
pop
cmp
sbb
outsl
adc
call
add
pushl
xchg
inc
fisubs
push
add
loopne
pop
lret
aam
mov
out
cmp
dec
in
mov
xor
mov
sbb
out
stos
scas
fnstsw
sbb
dec
call
or
rorl
lret
sar
popa
stos
rorb
pushl
cmp
and
xor
jo
and
xchg
jmp
orl
std
call
jmp
fldl
es
push
sub
sbb
xchg
outsb
jb
sub
sbb
pushl
inc
vgetexpsd
mov
mov
enter
cltd
nop
test
out
and
icebp
sub
int3
cld
ljmp
loop
test
mov
mov
es
insb
sub
ja
mov
gs
mov
call
inc
int
out
jno
cwtl
and
or
mov
clc
sub
push
pusha
and
data16
lock
mov
pushl
mov
jmp
ljmp
adc
in
jae
ret
sub
sbb
add
mov
xchg
out
and
call
sahf
pop
insb
popf
repnz
sub
rclb
aas
mov
pcmpgtd
popa
mov
pushl
or
xchg
mov
out
pop
xchg
bound
cltd
in
jns
lahf
iret
incl
bound
sbb
mov
jecxz
loope
test
inc
aad
cmp
jmp
shrl
adc
movsl
rolb
push
cli
dec
adc
repz
lcall
cmp
mov
sub
cmp
insb
add
xchg
xchg
jne
movntps
into
adc
incl
test
lret
mov
pop
pop
lret
in
and
cld
stos
in
sbb
popa
ljmp
decl
pop
outsb
lahf
ds
inc
mov
lret
pop
test
dec
push
jno
in
mov
lcall
pop
out
popf
iret
shl
mov
cs
mov
inc
rorb
mov
ret
pushl
lds
add
jge
lret
xchg
pushf
sub
fcoms
ds
dec
pop
orl
stc
rep
dec
push
jno
and
cs
iret
cmpsl
sahf
jp
pop
mov
test
adc
xchg
mov
aad
out
and
inc
aaa
in
fdivrp
mov
jbe
imul
or
pusha
add
arpl
add
faddl
fwait
mov
aaa
ja
repz
xlat
and
daa
pop
mov
lret
loope
ja
test
ja
mov
xor
into
iret
aaa
fadds
inc
add
mov
lcall
cmp
popf
adc
insb
scas
lret
jo
sub
mov
int3
je
jo
inc
stc
movl
pop
mov
push
into
loop
inc
pop
sbb
adc
pushl
mov
mov
sub
out
aam
test
xchg
adc
pushl
cmp
popf
mov
gs
pop
sub
clc
inc
push
mov
adc
leave
add
bound
cwtl
inc
push
outsb
rcll
sub
push
jmp
outsb
sbb
jb
and
rcll
stos
push
dec
stos
shr
inc
jl
mov
popw
push
push
cwtl
sbb
sbb
lea
pushl
add
addr16
rcl
adc
movsl
fisubrs
addl
sbb
call
mov
sbb
inc
js
pop
xor
xlat
lret
jp
dec
dec
push
rorb
incl
mov
mov
ds
dec
cmp
push
jge
xlat
insl
mov
xchg
jg
and
mov
jecxz
insb
shl
xchg
dec
cmp
pusha
das
clc
rorl
push
mov
cmp
jmp
int3
pop
cmp
add
jne
repz
test
rcll
fidivrs
adc
fsts
push
xor
sub
loope
mov
daa
push
not
mov
lods
xor
dec
rcr
call
mov
fs
lods
imul
adc
int
mov
or
sti
pop
mov
add
outsb
xchg
xchg
test
pop
push
in
jo
aas
adc
mov
test
sbb
jmp
sbb
popf
ss
jnp
mov
dec
push
jns
jbe
mov
insl
rclw
add
arpl
scas
into
out
cltd
push
dec
sbb
xor
gs
sub
xlat
add
stc
fistps
inc
ror
inc
xchg
jl
or
adc
decl
sbb
test
cmp
sbb
jae
ror
push
mov
aad
xlat
mov
repnz
xchg
jp
popa
dec
adc
ja
out
clc
out
bound
adc
stos
push
fucomi
and
xchg
pop
pop
hlt
call
clc
lea
pop
fcmove
jmp
lret
int
cmp
sub
and
jmp
pushl
cmp
add
fists
std
jmp
xchg
cs
dec
add
call
mov
cs
sbb
mov
sti
or
pop
adc
test
mov
cmp
inc
and
jae
cmp
push
std
movsl
in
nop
arpl
xchg
xchg
cwtl
mov
mov
pushl
jnp
negl
dec
outsb
imulb
xchg
mov
dec
nop
or
xchg
addb
and
ljmp
mov
int3
jno
jg
dec
pop
jg
xor
cmpsl
cwtl
xchg
xor
adc
add
push
and
ret
xchg
xchg
inc
imul
std
xor
mov
push
mov
sbb
adc
in
cltd
push
sbb
push
loope
in
or
and
jno
mov
cld
in
and
xor
incl
add
xchg
hlt
sbb
cmc
jmp
mov
idivb
fcom
shlb
jno
sbb
jns
lret
jecxz
jmp
push
dec
pop
jb
inc
jge
fwait
jne
sub
xchg
xchg
fsubs
incl
inc
fcomp
test
xchg
insb
repz
inc
mov
or
mov
stos
push
xchg
cmp
cmp
inc
sub
rolb
sbb
dec
movsb
mov
adc
jp
sti
aas
push
sub
leave
fildll
lcall
add
dec
movsl
inc
sub
in
lea
ljmp
xchg
fcoml
push
ret
inc
lcall
xchg
dec
jne
cmp
mov
and
mov
mov
add
cmp
xchg
pusha
sub
call
adcb
sub
rcrb
lcall
add
lret
fistps
or
imul
jmp
sub
popa
dec
mov
dec
aad
mov
mov
call
orl
mov
into
decl
pop
loopne
mov
adc
sub
test
cmpsb
mov
pushf
jl
fidivrs
js
push
aam
lahf
aad
outsl
das
or
and
cld
dec
call
pop
das
addr16
jmp
stos
sub
das
lods
shll
mov
fdivrl
test
and
addl
mov
jmp
xchg
xchg
inc
pop
gs
call
and
jmp
add
push
lds
ljmp
cld
out
decb
call
shll
mov
jmp
sarl
xor
neg
pop
enter
inc
and
jno
in
ss
jnp
pop
cmp
out
dec
inc
repnz
mov
lods
add
fisttpll
xor
ljmp
out
cmc
adc
cmp
pop
ret
aaa
add
xchg
aam
pop
cli
mov
ds
aam
hlt
jl
pop
loopne
ljmp
les
orb
repnz
mov
sub
sbb
stos
mov
inc
cwtl
cmp
cmp
ss
cmpl
ds
cmp
xor
mov
cmp
test
aad
mov
jno
aam
jmp
imul
incl
inc
mov
add
std
or
movsl
cltd
pop
sub
fcmovnu
jno
xchg
and
fcmovb
dec
mov
xchg
dec
xchg
pushf
imul
xor
adc
adc
lcall
sbb
adc
pop
pushl
dec
dec
mov
jl
sub
add
inc
add
icebp
in
pop
imul
sub
jmp
lcall
cmp
add
loope
stos
add
aam
xor
jmp
dec
das
out
mov
lock
mov
xor
pop
mov
lds
addl
outsl
bnd
test
fisubs
mov
mov
cwtl
inc
add
pushl
jmp
sub
push
push
in
mov
fisubs
xchg
nopl
dec
std
pop
mov
push
jmp
or
cli
mov
cs
mov
jo
push
xchg
or
mov
lock
mov
xor
js
ljmp
sub
cmpsb
stos
jg
lahf
insb
loope
loop
mov
or
jecxz
mov
outsl
decl
sbb
jae
jno
inc
cltd
mov
and
dec
in
bndldx
les
pop
mov
jmp
das
sbb
scas
lods
lret
mov
adc
xor
cmp
nop
lcall
decl
lods
xor
add
js
jns
rcrl
sar
dec
push
sbb
clc
mov
and
rorb
add
cmc
fdivr
mov
fdiv
cld
sbb
or
in
push
std
mov
test
jge
iret
inc
push
sbb
loope
mov
mov
inc
push
sbb
gs
xor
leave
sahf
movsl
or
js
int3
stos
popa
mov
dec
cmpsl
cltd
cmp
pushl
xor
int3
fs
in
pusha
subb
mov
mov
incl
cmpsb
pop
push
push
clc
cli
enter
cmpsl
outsb
ljmp
pop
mov
mov
decl
cmp
mov
add
sub
adc
imul
or
jl
fisubs
shlb
mov
cwtl
sbb
mov
lock
test
stc
jnp
fxch
fdivrs
pushl
or
push
enter
js
dec
or
jnp
or
aas
mov
call
xor
and
mov
sarb
insl
out
push
xchg
aam
call
or
popl
sub
fadds
pop
sbb
dec
imul
jp
adc
clc
ret
cmp
popf
pop
xchg
lahf
cmc
dec
stos
pop
test
call
scas
or
add
pushl
sbb
cli
pusha
ds
jae
mov
xchg
mov
add
mov
call
mov
adc
mov
insl
jmp
je
sbb
sub
decl
out
stos
scas
mov
inc
aaa
dec
adc
push
iret
movsl
rclb
sbbb
mov
mov
ljmp
les
fstpl
sbb
xchg
test
dec
sbb
xchg
rcrb
or
xor
pushl
dec
frstor
daa
mov
sub
leave
fisubl
outsl
addl
leave
push
repnz
ljmp
or
cvtdq2ps
pop
movsl
xor
loopne
inc
dec
xchg
mov
in
call
sub
ja
xchg
mov
inc
sub
xchg
sbb
into
mov
xchg
fsub
cld
lcall
sbb
daa
into
cltd
into
cmc
mov
fdivrs
inc
xchg
pop
push
jp
inc
pop
shlb
xor
mov
call
movsb
lods
sbb
xchg
icebp
test
lahf
repnz
push
pop
jbe
jno
test
test
or
jmp
cmp
mov
call
dec
jecxz
popa
sti
adc
enter
add
push
jmp
cmp
pop
add
dec
mov
nop
add
lds
inc
pop
es
cmp
ljmp
pushf
mov
stc
popa
mov
inc
sahf
popa
mov
mov
jo
cld
and
subl
decl
imul
xchg
lods
movsb
inc
sar
out
xchg
mov
jle
inc
out
sub
cmp
add
sub
fwait
data16
data16
cltd
orb
cwtl
cmp
out
xchg
fsub
mov
inc
mov
mov
pop
test
movsb
jge
mov
sbb
cmpsl
mov
push
and
xchg
jo
jbe
lcall
jns
ljmp
movsl
stos
push
dec
inc
lock
movsb
cmc
arpl
sbb
popa
das
cli
mov
adc
scas
pop
bound
and
xchg
mov
mov
mov
lods
scas
hlt
repz
mov
in
ret
dec
ss
mov
and
cmp
add
adc
into
jns
mov
sbb
jne
cmc
jg
inc
pop
pop
add
xor
imul
jmp
push
dec
dec
inc
cmp
ljmp
jp
rcrl
out
mov
inc
add
pop
iret
jne
mov
decl
jb
push
data16
and
jge
xlat
xchg
lods
cmp
roll
cs
aam
loope
inc
sbb
jge
jecxz
push
mov
and
test
cli
lds
mov
dec
inc
lea
mov
sub
jb
or
int
arpl
sub
xchg
adc
xchg
lret
jecxz
incl
sub
out
sub
adc
xchg
nop
add
or
lcall
push
push
lahf
jmp
aaa
fiaddl
lods
sbbl
cwtl
mov
and
jmp
push
outsl
add
xchg
xor
mov
push
lock
push
push
sbb
lock
pop
cmc
cmp
pop
adc
jl
jno
test
lea
push
cmp
adc
xor
gs
cmp
insb
popa
lods
jnp
push
add
aam
leave
mov
sbb
pushl
mov
push
xor
mov
mov
jbe
je
sbb
test
mov
icebp
jg
incl
mov
mov
adc
movsl
lcall
adc
sub
cmc
pop
sbbl
cmp
xchg
ljmp
jecxz
pop
in
push
ret
lcall
ds
sub
xor
aad
addr16
add
nop
cld
cltd
jp
pop
fs
mov
decl
jmp
lcall
mov
lods
add
imul
pushl
push
cmpsb
push
jae
mov
in
into
lahf
sub
out
lock
push
fisttpl
fbld
mov
sub
mov
jns
loope
cwtl
xor
adc
ljmp
imul
ds
jae
das
and
stc
or
pop
cmc
ja
mulb
jp
fdecstp
inc
jo
faddl
sub
or
js
jne
leave
inc
xor
gs
adc
mov
jge
jbe
xchg
pop
mov
cld
push
stc
aaa
push
mov
push
push
sbb
push
push
lahf
loopne
sub
repz
out
call
gs
jb
lret
loope
mov
sbb
mov
and
mov
lods
xchg
jns
pop
jg
lcall
fisubl
add
es
or
imul
ds
cmp
cmp
loop
rcrb
dec
adc
popa
pop
jns
add
out
xor
mov
mov
adc
je
lds
cmpsl
enter
lds
incl
mov
adc
mov
dec
lret
pop
mov
incl
aaa
mov
mov
ljmp
imul
adc
xor
decl
pop
cmp
leave
cmp
out
addr16
push
sub
inc
pop
shr
std
clc
sbb
int
imul
les
rclb
jnp
or
sub
js
fidivs
aas
loope
lret
sbb
btc
push
cmp
add
inc
je
test
gs
outsl
fstl
je
mov
xor
test
andb
lds
mov
jecxz
mov
push
or
arpl
pop
not
mov
mov
dec
popf
mov
pushl
addl
lcall
nop
stos
out
mov
or
inc
jg
cs
cmpsl
or
movsl
xchg
mov
ja
sub
popf
cmp
mov
scas
lret
sub
inc
loop
push
pop
pop
fwait
popa
ljmp
mov
decl
inc
int
add
xchg
rcll
fstpt
sbb
mov
pop
inc
insb
das
int3
call
imul
fidivrs
inc
sub
call
lea
test
ds
xor
mov
lds
sti
out
test
call
adc
movl
mov
push
cmpsb
pop
std
lcall
lods
push
adc
int
jle
mov
push
or
mov
hlt
out
adc
jns
xor
pop
add
scas
xchg
aam
add
stos
mov
int
pushl
mov
test
add
jns
pop
cmp
lcall
pop
les
les
jmp
jne
pusha
xor
cli
fs
add
gs
mov
fcomip
sarb
call
push
fstpl
xchg
sahf
and
bound
fmul
repnz
cmp
mov
add
jecxz
xor
test
data16
decl
xchg
jge
cmc
ss
xchg
mov
iret
cmp
sub
mov
push
sbb
incl
mov
movsb
nop
jp
cs
cmp
loopne
popf
icebp
pop
and
jmp
sub
adc
cmpsl
lret
shll
cs
lret
or
sub
rclb
dec
pushf
mov
jg
aam
mov
loop
xor
test
rorb
out
pop
nop
es
lcall
xchg
mov
adc
jl
aam
in
jle
sbbb
push
dec
daa
xor
sbb
cli
test
pop
clc
mov
inc
xchg
or
aam
pop
jl
out
outsl
fdivrs
jne
pop
lcall
or
inc
fidivrl
dec
or
test
push
lods
dec
ja
fildl
fidivrl
pop
xchg
jo
je
push
dec
cmp
repz
cmc
dec
icebp
sar
lcall
popf
mov
call
test
or
sbb
fists
and
sbb
lds
movsl
mov
push
sar
or
lret
jecxz
cwtl
roll
lds
nop
test
lcall
xchg
call
out
test
inc
xor
rcrb
add
mulb
loop,pn
jecxz
stos
call
inc
shrb
inc
mov
inc
jae
sub
jle
push
inc
lcall
stos
lcall
jl
add
dec
pop
ret
in
scas
cmp
jg
in
scas
jb
insl
sbb
aam
pop
lods
fildl
xor
test
ljmp
scas
fstpt
test
dec
lret
sub
sbb
out
xchg
subb
call
jle
adc
inc
push
and
mov
loopne
jb
ds
ficompl
jo
or
call
or
enter
enter
inc
cmp
xchg
dec
out
or
add
dec
pop
movsl
mov
int
cmp
test
sub
cmpsb
push
sub
push
xchg
js
sar
jmp
push
out
pop
xchg
xchg
push
jl
jmp
dec
clc
jmp
pop
ljmp
ljmp
ljmp
pop
cmp
test
mov
inc
mov
mov
aad
add
mov
sbb
incl
inc
pop
cmp
mov
jne
daa
into
push
into
popa
push
pop
jb
ja
sub
incl
es
stos
out
mov
mov
xchg
rcl
jecxz
out
ret
or
fimuls
ljmp
and
pop
dec
rcl
mov
mov
and
lahf
pop
pushl
jnp
xchg
adc
mov
and
imul
mov
inc
pushf
aad
push
decl
fs
addr16
test
mull
cld
iret
pushf
sub
loopne
jnp
jb
adc
jg
dec
inc
das
push
jg
arpl
push
jnp
repz
cmpsb
shll
dec
push
mov
jg
pushl
xchg
je
xchg
xchg
pop
sarb
or
shll
stc
cmp
xorl
call
out
orb
lods
inc
rolb
in
jae
cmp
xor
cmc
pop
fs
hlt
lock
dec
fldenv
imul
or
jp
scas
sbb
orb
mov
clc
jo
jo
xorb
incl
xchg
mov
xchg
in
xchg
push
mov
dec
dec
ljmp
push
loope
aam
mov
jmp
sbb
popf
decl
mov
adc
add
cltd
outsb
add
xor
jbe
mov
outsl
adc
clc
insb
jbe
ret
push
adc
lcall
clc
test
mov
mov
stos
out
ret
aas
lret
shrb
gs
fnstcw
cmp
or
mov
xchg
push
out
and
mov
add
test
sbb
pop
xchg
stos
dec
cli
fnstcw
adc
xchg
and
decl
in
mov
sbb
cld
std
movsb
cld
imul
or
mov
leave
mov
sar
pushl
inc
out
xor
pop
add
xchg
mov
mov
repz
int3
xor
ljmp
sahf
cmp
out
xor
movsb
inc
add
popa
mov
mov
cmp
jae
mov
and
xor
pop
fs
mov
incl
stos
jnp
loope
cmpsb
cmpsl
add
aas
daa
sub
inc
and
dec
ljmp
mov
push
and
addb
pop
and
bound
fstps
out
insb
loopne
pop
cmp
mov
mov
xchg
incb
and
jne
call
mov
das
pop
nop
and
add
stos
fld
jbe
add
mov
sbb
xchg
sub
call
cmc
pop
xchg
inc
mov
inc
jno
lret
pop
orb
sub
mov
testb
xor
out
outsb
and
fisubrs
int3
push
je
dec
lret
stos
ds
jle
ljmp
shl
cmp
xchg
jns
and
xchg
dec
dec
xor
xchg
adc
js
insl
cmp
invd
into
icebp
clc
popl
jb
lret
or
fistl
cli
or
lods
jne
cmc
decl
jecxz
adc
repnz
dec
std
roll
mov
pop
call
jg
out
in
enter
mov
mov
dec
pop
sbb
add
idiv
incl
push
shlb
aaa
sbbb
fisttpll
inc
lahf
cmp
testl
pushl
inc
xchg
loopne
mov
sahf
loope
into
inc
mov
jne
xorb
mov
incl
cmpsl
flds
mov
mov
add
inc
je
jp
loop
mov
jge
cs
inc
mov
push
rcrb
and
inc
iret
out
arpl
xlat
jbe
ja
nop
xchg
dec
loope
cmpsb
ljmp
push
mov
jae
lret
or
dec
jb
and
sub
call
cmp
decl
aam
xchg
aaa
push
mov
adc
jb
loopne
pop
inc
shll
dec
fwait
testb
cmp
ret
fstps
out
pop
into
ret
inc
jle
push
sub
cmpsb
and
inc
das
aad
fadds
inc
sti
mov
push
lcall
jae
outsb
mov
jmp
fwait
ss
jle
mov
jp
ljmp
push
sub
test
sbb
call
jo
xchg
mov
lcall
xchg
fiadds
es
lahf
outsb
push
xor
int
dec
mov
fucomi
lods
lcall
ljmp
cmp
add
js
pop
mov
das
aas
ficomps
fcoml
lock
insl
cwtl
into
test
inc
xchg
pop
dec
cld
incl
xor
adc
lret
mov
out
xorl
sbb
dec
and
std
cli
lock
and
add
jns
fldcw
repnz
call
xchg
outsb
push
xlat
xchg
push
shll
jmp
pop
sub
inc
inc
cltd
aas
or
or
mov
stos
call
xchg
test
sub
mov
lea
stos
lcall
data16
jbe
mov
jne
mov
jo
cmp
icebp
enter
pop
dec
inc
sbb
cmp
mov
push
jg
ds
test
mov
enter
inc
iret
ret
or
loopne
dec
and
pop
clc
out
mov
mov
ss
dec
push
int3
pop
loop
mov
push
xchg
cmp
lds
mov
clc
shrb
in
scas
mov
movsl
or
mov
inc
pop
push
shll
jl
jne
imul
in
decl
movsl
jno
inc
ret
cmp
dec
inc
jo
and
aas
lahf
call
add
aad
push
das
rclb
sbb
pop
inc
addr16
decl
push
incl
add
hlt
pusha
pop
mov
inc
or
push
fcompl
xchg
ljmp
sbb
dec
sbb
rol
xchg
fcoml
lods
sbb
outsl
call
incl
mov
jns
lcall
mov
jg
mov
fbld
and
fisubrs
xchg
sub
push
jmp
call
push
mov
sub
mov
inc
add
outsl
popa
push
call
mov
ljmp
divb
push
filds
ret
loopne
mov
push
or
decl
sbb
mov
fimull
daa
push
pop
push
pop
cltd
popf
inc
jg
cld
push
hlt
test
cmp
call
sub
addr16
pop
push
cmpsl
in
ja
cmp
dec
or
cmp
ror
loopne
mov
pop
movsl
aas
xchg
fbstp
pop
les
dec
ja
jle
movsl
fwait
mov
jl
sarl
xor
adc
jmp
ljmp
dec
jbe
iret
pop
ret
in
xchg
xchg
jb
adc
sbbl
lahf
mov
push
mov
mov
lods
jecxz
sbb
in
pop
xlat
or
test
ret
hlt
mov
cs
cld
cwtl
add
adc
adc
inc
ljmp
mov
incl
dec
or
sbb
movsb
decl
sarl
sbb
lahf
cltd
clc
arpl
cwtl
outsb
mov
jg
mov
lock
push
and
fisttps
fidivl
jg
xlat
call
out
push
mov
shll
hlt
into
je
jmp
outsl
out
pop
jne
push
rcrb
incl
inc
and
aam
ret
frstor
dec
cmp
and
call
pop
out
jmp
les
add
xor
mov
adc
call
incl
add
add
daa
scas
frstor
andb
and
out
sub
loop
jmp
leave
mov
les
std
and
jnp
fisttps
sub
cmp
ret
repnz
add
mov
popa
sbb
dec
sarl
imul
lock
push
xor
movsb
mov
jg
lock
sahf
or
cmp
std
mov
mov
cmpsb
inc
clc
int3
lds
incl
jp
push
mov
aam
sbb
loope
loop
or
out
out
push
xor
rorl
hlt
sub
stos
ja
mov
pushl
test
jle
add
push
xor
test
xchg
inc
fucomp
sbb
iret
push
xchg
and
incl
xor
fimull
or
addb
pop
nop
ret
rclb
imul
call
jecxz
dec
push
in
orb
jg
idiv
call
xchg
call
add
jae
in
pop
push
repz
aad
lcall
ss
push
shrb
xor
das
jg
jge
add
sbb
std
leave
xor
mov
decl
std
add
and
mov
dec
or
adc
out
mov
decl
push
dec
dec
jp
js
movsl
call
test
ds
adc
push
jecxz
jmp
cmp
cli
adc
mov
test
test
mov
sub
jecxz
lock
pushl
ret
rcrb
loopne
sbb
lcall
fcompl
mov
jbe
rolb
cmp
imul
mov
ficoms
push
jp
push
push
xor
inc
cmp
imul
sbb
push
iret
mov
cltd
mov
fcomip
ret
arpl
jns
imul
ljmp
mov
push
insl
imul
rclb
notl
popl
out
mov
fwait
pop
cs
ficoms
mov
shlb
lcall
sub
push
aaa
fdivr
nop
enter
cmp
gs
test
lock
out
and
movsl
in
sbb
inc
sahf
inc
pushl
adc
lret
sbb
lock
imul
aas
cs
into
push
or
mov
in
dec
fstpl
imulb
jecxz
mov
je
nop
mov
cltd
inc
mov
mov
aas
pop
sahf
mov
dec
lret
sub
sub
lcall
jae
in
into
xchg
imul
jns
repnz
enter
mov
mov
sub
lcall
push
in
sub
aaa
out
xlat
stos
pop
mov
sbb
mov
add
scas
mov
stos
jns
jnp
push
popa
cmpsl
pop
jae
and
int
sti
cs
stos
call
enter
cmpl
out
fs
les
jmp
ljmp
xor
xor
cmpsb
xchg
ret
ret
jp
pusha
inc
int3
stos
movsb
out
xchg
andb
mov
cmp
cmpsl
or
fadds
mov
ljmp
sub
pushf
or
fs
sbb
mov
cli
cmp
xor
cmc
dec
jo
cmp
or
add
jl
mov
outsl
cli
push
sbb
hlt
loopne
dec
cwtl
orb
inc
jmp
in
jmp
cltd
sub
mov
mov
dec
shll
in
fwait
pop
pushf
and
mov
stos
sbb
aam
lcall
mov
mov
addr16
in
ljmp
mov
cmpsb
sbb
mov
dec
cmp
mov
lods
dec
pop
lret
imul
inc
cld
mov
jg
out
adc
pop
rcrl
test
sbb
adc
mov
fildll
and
out
adc
mov
rorb
push
push
call
jns
mov
nop
add
xor
push
inc
das
cmp
inc
fldt
mov
loopne
movb
in
or
rolb
or
cli
push
pusha
jnp
adc
enter
jmp
out
cli
jmp
ret
and
xor
xchg
mov
lods
pop
insl
xor
pushl
insb
cmp
sarl
or
pop
mov
and
inc
movsb
out
icebp
shlb
dec
push
shll
pusha
shrl
jmp
cmp
cld
xlat
adc
in
cmp
xchg
jl
mov
bound
cli
loop
xchg
push
sub
cmp
push
out
xchg
hlt
jno
push
xor
hlt
push
stos
inc
iret
adc
dec
out
in
addr16
ljmp
xchg
addr16
insb
adc
cmp
mov
mov
dec
fists
jno
xchg
xchg
call
stos
sub
push
loop
pop
stos
lcall
add
addb
out
and
adc
insl
scas
in
mov
fdivrs
push
in
movsl
or
das
jae
mov
jg
inc
fdivrs
cli
outsl
js
jae
mov
or
xlat
mov
jmp
cmp
std
call
out
or
mov
movsb
cmpsb
out
test
xor
popa
xor
hlt
stos
jecxz
mov
stos
fdivrs
sbb
mov
push
jae
ss
push
call
jl
mov
mov
idiv
hlt
and
mov
mov
mov
jo
fsubp
jnp
sub
sahf
jp
mov
fcoml
dec
aas
test
mov
fadds
mov
sbb
or
cmp
pop
lock
mov
sbb
dec
mov
lret
xchg
inc
sbb
dec
inc
pop
jmp
jbe
aad
jae
xchg
jnp
test
fnstenv
je
jns
adc
test
dec
xorl
inc
movsl
push
std
decl
adc
lods
mov
push
into
inc
xchg
lahf
movsl
pop
lcall
lret
jns
lds
test
dec
cmpsb
leave
push
lods
test
lret
mov
ljmp
or
jo
mov
out
les
mov
in
add
incl
xchg
into
addr16
xchg
popf
aad
fisubs
and
stos
outsl
inc
push
mov
incl
mov
fnsave
jmp
inc
in
shll
ds
stos
rcrb
cmp
rcll
add
push
iret
xor
or
add
ucomiss
aaa
addb
movsb
xor
loopne
pushl
pop
mov
pop
sahf
pusha
sub
adc
pop
fadd
xchg
xchg
decl
jp
push
leavew
movsb
in
in
jp
popf
sub
adc
fmul
mov
add
test
push
and
ret
clc
sti
or
ljmp
ljmp
xlat
adc
movsb
popf
pusha
outsl
inc
sub
sub
add
call
decl
mov
sub
out
ss
mov
mov
or
push
mov
xchg
or
jge
ret
call
dec
jecxz
and
popa
decb
jg
dec
sahf
push
jcxz
xor
push
jne
xor
fxch
cmp
pop
lds
fcomip
shr
insl
cmp
popa
push
es
into
out
std
mov
out
sbb
push
xchg
lcall
push
call
idiv
mov
insb
lds
fisttpll
int3
incl
sbb
push
mov
lahf
addb
add
in
ljmp
pushf
cmpsl
pushf
scas
iret
imul
lods
cmp
inc
cli
mov
icebp
fidivl
xchg
push
sub
cmp
xchg
mov
mov
push
cmp
xchg
lods
cli
pushl
push
cwtl
bound
scas
stc
fwait
imul
cmc
add
and
ljmp
dec
cmp
xchg
data16
push
dec
xchg
jge
sub
push
aas
sbb
enter
sbb
incl
adc
push
test
dec
lea
dec
mov
arpl
popa
bound
push
in
jns
inc
outsb
push
add
fisubs
out
adc
adc
dec
push
mov
mov
fbld
gs
mov
mov
incl
enter
sub
lret
loop
lcall
or
mov
fsubl
add
push
imul
cmp
push
xchg
mov
cmp
jne
mov
aas
repz
test
push
es
jmp
jae
lahf
cld
and
add
and
ljmp
dec
inc
mov
pop
icebp
lret
lahf
sahf
and
lea
sti
jmp
pop
fisttpl
mov
sti
mov
enter
nop
imul
mov
stos
incl
lock
mov
mov
mov
push
outsl
dec
dec
cmpsb
loopne
adc
pop
lock
in
jo
test
ljmp
sub
stc
add
test
jg
xchg
lea
scas
mulb
pop
mov
pop
icebp
decl
add
mov
xchg
sub
xchg
int
sti
jmp
mov
inc
push
sbb
shrl
mov
or
mov
cmpsl
mov
jb
scas
mov
jp
aam
les
push
or
addb
mov
dec
insb
mov
jmp
or
fisubrs
mov
pusha
in
std
xor
in
jge
adc
lcall
adc
in
in
sub
shl
push
xchg
jbe
fadd
mov
pushf
cmp
sub
cmp
push
shll
in
cltd
out
cmp
cld
cmp
sahf
or
xor
call
lods
popa
push
aam
hlt
repz
ret
and
add
pinsrw
mov
mov
ljmp
inc
into
jb
or
xchg
scas
mov
fdivrp
mov
jmp
push
adc
lcall
jns
add
pop
add
mov
and
std
xor
popf
add
mov
jmp
push
scas
dec
mov
xchg
xorl
cmp
repz
movsl
insl
mov
cltd
inc
or
lock
push
aad
jb
rol
popa
repz
flds
cmp
push
dec
inc
cltd
ljmp
test
xchg
sub
je
cmp
mov
xor
ja
movsb
jno
loope
dec
mov
jge
jmp
decl
inc
mov
imul
mov
xchg
ljmp
lret
xorl
mov
adc
dec
sbb
test
and
cmp
fildl
mov
notl
pop
lcall
aaa
mov
notl
mov
mov
push
stc
sar
incl
sbb
int
xchg
imul
gs
pop
dec
jl
clc
sub
jg
lds
leave
scas
filds
mov
pop
dec
lds
push
dec
test
sub
pop
std
adc
sahf
mov
nop
sahf
ss
push
movsb
lods
icebp
cmp
jne
stos
mov
ss
pavgb
xchg
jbe
movsl
mov
call
cmpsl
jmp
pop
sbb
mov
and
push
nop
aaa
pop
in
jg
pushl
out
xor
repz
mov
fldt
mov
lcall
push
insb
xchg
ret
pusha
cmpsb
movsl
xor
sub
out
jge
sahf
fisubl
push
push
xchg
lret
pop
mov
movsl
jg
scas
das
pop
xor
test
test
in
out
ds
out
adc
call
js
jp
push
dec
icebp
std
call
fnstenv
rorb
xchg
jbe
pop
sahf
bound
mov
adc
pop
mov
ss
lret
pusha
and
add
rolb
call
lock
add
sub
test
mov
scas
sbb
cwtl
fildl
or
jle
shll
fildl
ret
xchg
in
inc
ljmp
dec
sbb
fs
adc
ljmp
mov
insb
pushf
dec
xchg
das
jle
and
mov
adc
dec
cmp
decl
mov
gs
jno
mov
test
xchg
push
jg
lods
adc
xchg
jmp
dec
jp
mov
les
mov
pop
mov
repz
lock
inc
popa
and
xorb
cmp
or
cmp
lcall
push
or
imul
scas
push
mov
scas
fsts
mov
sar
decl
mov
mov
pop
add
xor
aad
ljmp
xchg
fptan
iret
aaa
inc
cltd
fisubrs
mov
and
sub
ljmp
sbb
lahf
es
lcall
xchg
xor
int
mov
cs
lret
cmp
inc
xchg
sbb
jnp
mov
pushl
push
or
lcall
mov
cld
insl
out
mov
ror
inc
dec
out
cli
cmpsb
pop
or
fldcw
sbbl
and
scas
jge
decl
cli
push
adcl
pop
mov
xchg
push
popf
jmp
pop
jecxz
loopne
stos
or
jmp
or
xor
jne
inc
pop
das
pop
mov
jcxz
jmp
jnp
ds
xor
mov
sti
sub
mov
mov
nop
sub
sbb
stos
jo
fsubrl
test
pop
adc
jg
sbb
mov
sbb
iret
rcrb
xchg
jne
mov
fldenv
inc
sub
insb
lcall
incl
sub
sub
hlt
jl
lods
xchg
cmp
cmp
mov
jae
decl
clc
mov
subl
ss
aas
das
mov
sti
faddl
pop
call
cmp
adc
in
arpl
and
add
mov
iret
cmp
xlat
push
add
bound
dec
xlat
insb
sub
inc
jl
out
push
test
jecxz
or
stc
dec
pushl
jmp
dec
pushf
lea
pop
mov
pop
mov
movl
dec
leave
je
fs
ljmp
scas
scas
mov
loope
loope
mov
test
or
in
pushl
dec
repz
jl
fwait
xchg
sub
aas
and
sub
pop
dec
sbb
cmp
or
fdivs
push
testb
pop
inc
add
mov
imul
mov
stos
xchg
inc
sub
ds
xor
mov
lcall
cli
imull
adc
jne
jmp
test
push
je
push
cmp
xchg
and
bound
arpl
dec
call
cld
lock
add
vmovmskpd
push
mov
mov
in
mov
xchg
pop
adc
pop
add
aam
adc
adc
cmp
repz
push
mov
mov
mov
mov
decl
scas
or
outsl
incb
jne
pusha
ret
imul
mov
arpl
shl
ljmp
cmp
inc
mov
add
pop
jp
xchg
sbb
dec
xchg
movsb
sbb
shr
adc
incl
inc
into
inc
fsubrs
dec
aad
push
or
jns
rorb
in
and
sub
jmp
inc
loope
out
loopne
jns
cmp
in
popf
pop
imul
call
imul
dec
rcrb
jp
jmp
ljmp
ljmp
aad
rcll
mov
sbb
test
push
inc
fmuls
cmpsl
popw
lea
or
das
xor
repz
orb
mov
iret
lods
int
mov
pop
pushl
inc
pop
xchg
roll
test
ret
xor
mov
sbb
loopne
iret
mov
decl
cltd
jae
push
xchg
nop
inc
outsl
outsb
jne
cmpsb
push
pushf
cwtl
sub
lret
pushf
cmp
dec
push
enter
in
dec
aas
push
pop
push
lods
adc
arpl
lock
inc
icebp
das
sub
int
sbb
add
test
hlt
push
or
out
jge
stos
push
mov
push
cltd
xchg
xchg
jmp
in
sahf
push
shrb
inc
and
push
jnp
popf
mov
push
fsubl
add
jmp
imul
ja
push
inc
mov
pop
call
nop
dec
pop
movsb
xlat
lods
stos
outsl
incl
repz
cli
out
jmp
inc
or
xchg
test
insb
xor
mov
inc
repnz
add
sbb
test
ror
xor
scas
imul
je
nop
push
sbb
lret
imul
sub
fisubrl
inc
xor
sbb
std
out
jb
or
and
cmpsb
jmp
loope
sbb
sbb
mov
ja
xchg
adc
data16
jmp
mov
mov
iret
jg
pusha
xchg
loopne
loop
orb
lret
add
cmc
fwait
ljmp
cmp
and
xor
test
iret
shlb
fdiv
cmpsb
jle
daa
cmp
cmp
pop
inc
jns
mov
cmp
push
cmpsl
stc
and
add
jl
cltd
test
decl
test
dec
mov
pop
mov
pop
jl
loopne
fsubs
lcall
mov
iret
and
scas
fsubs
or
and
ret
and
inc
pop
cmc
ljmp
pop
mov
jmp
ret
push
or
xor
cli
fbld
xchg
aas
scas
out
fs
cmc
andl
xchg
loop
icebp
dec
and
outsl
jg
mov
lcall
adc
mov
mov
jbe
pusha
or
in
dec
psrld
mov
jb
jmp
xchg
lret
sbb
lcall
pop
icebp
jae
sub
cmp
hlt
shll
ljmp
cmp
incl
sahf
push
stos
aas
xchg
or
aaa
fisubrs
test
or
in
mov
popa
ret
push
in
or
sub
mov
mov
mov
shll
lahf
dec
jb
or
les
incl
lcall
push
push
mov
pop
and
hlt
fld
xchg
cmp
mul
mov
adc
test
mov
sbb
jae
cmp
jmp
loop
xchg
mov
cmp
andb
sarb
mov
inc
jae
mov
test
leave
mov
cld
xchg
ret
push
in
mov
jl
mov
sbb
mov
cmp
repz
js
inc
iret
ss
pop
aaa
xor
sub
push
popa
mov
inc
pop
sub
clc
inc
movsl
loop
incl
insb
in
ret
pop
inc
xchg
je
xchg
sub
xor
sbb
or
pushl
pop
dec
inc
pop
stos
popa
hlt
push
mov
mov
flds
call
aaa
mov
dec
mov
xchg
out
cli
pop
or
inc
mov
repz
add
inc
jecxz
jmp
in
scas
xchg
sbb
ljmp
leave
adc
test
sub
ljmp
dec
imul
data16
jmp
ljmp
insb
inc
lock
fcmovnu
dec
adc
data16
adc
sbb
lea
cli
ret
cld
jmp
sarl
cmp
addr16
pop
xchg
cmp
jecxz
out
movl
sub
cs
les
ljmp
mov
orl
pop
cld
mov
test
push
sub
repnz
ds
pop
adc
in
ljmp
add
pop
mov
data16
lea
or
sbb
mov
decl
jns
out
or
imul
and
fisubs
divps
mov
mov
hlt
in
std
push
cmp
sub
xor
inc
jecxz
aaa
ss
add
pushl
sub
cmpl
xor
and
push
jle
imul
movsb
test
into
push
call
and
add
fiadds
arpl
aad
jmp
mov
jle
push
data16
xchg
pusha
xchg
push
jmp
mov
and
and
jmp
addl
mov
push
xor
cmp
fisttpl
adcb
into
mov
ljmp
ss
bound
jne
dec
sbb
sbb
jge
cwtl
imul
mov
js
add
lret
and
xchg
ficoms
dec
jmp
lret
test
cmp
add
sahf
repz
sbb
xor
popa
cmp
ljmp
lahf
cli
scas
add
test
aas
sub
push
dec
aad
adc
jle
ss
xchg
out
sub
mov
xchg
mov
dec
aas
sub
adc
pop
test
mov
sbb
jg
outsb
loop
sub
push
sbb
mov
in
div
pop
loopne
add
jp
push
mov
dec
lods
mov
mov
ss
ds
cmpsl
add
adc
fildll
sub
dec
sbb
xchg
lcall
or
int
fistpll
minps
sarb
push
cwtl
sbbb
adc
adc
rorb
outsl
add
add
jecxz
and
jg
call
push
mov
pop
fmull
jl
divb
in
fnstsw
and
push
clc
or
jl
data16
inc
sbb
jns
js
sub
ljmp
outsl
adc
or
xor
sub
xor
fists
popf
xchg
xor
jecxz
xchg
dec
jecxz
jo
test
aad
jmp
add
xor
inc
loop
ret
imul
mov
inc
cmpsl
in
dec
mov
inc
fs
fidivs
xchg
add
in
icebp
sti
cmp
negb
fcmovnu
icebp
jae
mov
pop
fnsave
jmp
cmp
pushl
jmp
jns
mov
mov
int3
inc
into
jno
jmp
mov
insb
push
ljmp
imul
and
dec
and
in
mov
lock
adc
icebp
rorb
push
push
hlt
mov
inc
aaa
stos
in
arpl
call
std
and
or
fs
or
mov
jl
rcll
xchg
jae
xchg
dec
sub
ljmp
fidivs
fs
mov
and
push
test
lock
sub
jb
inc
adc
lods
pusha
mov
xor
dec
cltd
data16
jo
mov
sbb
in
decl
or
dec
movsl
daa
cltd
xchg
xchg
push
cmp
xchg
lods
sub
jae
les
call
jno
push
in
jno
clc
push
and
call
dec
mov
cwtl
or
cmp
ljmp
sub
imul
adc
mov
cmp
xor
fwait
mov
add
dec
jno
pop
mov
fisttps
pushf
out
sar
inc
aas
mov
xchg
cld
sub
aas
mov
dec
sub
adcl
incl
dec
fnsave
mov
mov
sub
je
fsubs
int
xor
mov
lcall
out
mov
int3
mov
outsb
ret
icebp
push
xchg
dec
and
hlt
xchg
mov
dec
add
jl
ljmp
mov
adc
ds
leave
sti
iret
in
insb
push
shll
jmp
test
mov
inc
push
mov
call
rcl
lahf
xchg
movsb
lret
mov
jo
scas
pop
popf
and
addr16
out
clc
mov
gs
outsl
pop
scas
pop
push
jle
mov
les
jge
in
repz
imul
ret
repz
mov
mov
xchg
pop
push
cmp
out
clc
push
aas
ljmp
pop
popf
dec
popa
cltd
dec
cld
cli
pop
lfs
stc
sti
inc
xor
push
lods
push
sbb
xchg
inc
scas
push
mov
inc
in
dec
mov
clc
mov
test
push
inc
cmp
push
inc
inc
push
das
mov
or
push
sub
incl
into
xor
mov
push
gs
in
push
jno
arpl
dec
lods
mov
clc
sub
cmc
in
out
arpl
fs
scas
sahf
mov
adc
int
lcall
sub
ret
test
and
cmp
repz
cmc
clc
xchg
push
or
inc
repz
fldcw
add
repnz
jo
or
fwait
xchg
dec
jne
xchg
loope
cmpsb
call
clc
repz
test
push
cld
sbb
mov
add
add
mov
sub
cld
sbb
test
jecxz
push
popf
outsl
or
cmpsl
xor
or
jmp
sbb
mov
arpl
cwtl
outsb
lcall
pushl
rcrl
cmp
aas
mov
push
dec
shll
cmp
loopne
loopne
fld
cmpb
test
arpl
or
jne
mov
pop
pop
pushf
out
pop
and
aam
push
lock
aad
lds
xchg
pop
mov
cmpsb
xlat
in
pop
inc
pushf
aad
shll
lcall
bound
sub
mov
decl
sbb
enter
jo
scas
enter
add
jecxz
in
aam
mov
je
fwait
call
into
ss
movsl
inc
push
mov
xchg
push
icebp
ffree
addr16
dec
inc
ljmp
loope
loope
cli
mov
roll
sub
lock
sbb
pop
outsl
xor
jg
push
cmp
stos
pop
fistpll
xchg
outsb
in
cltd
dec
mov
repnz
rcrb
cwtl
ss
xchg
pusha
push
ljmp
xchg
and
cmp
xor
jbe
pop
mov
in
lds
mov
cs
dec
cmp
aaa
dec
cli
inc
lret
lahf
dec
out
sahf
lret
push
scas
call
in
jno
pop
jmp
xchg
xchg
cld
imul
xchg
xchg
cmp
sub
jge
in
call
jmp
xor
inc
test
adc
mov
sub
pop
pop
test
or
lcall
sbb
dec
mov
cltd
mov
shll
pushl
popf
pusha
mov
xchg
ss
add
sbb
cmp
sub
cli
push
add
ljmp
xor
inc
dec
mov
incb
push
fwait
add
imul
adcb
ja
imul
rorl
test
cmp
ljmp
insb
mov
test
sbb
das
fimuls
sbb
sbbl
inc
sti
loopne
add
sbb
xchg
adc
push
dec
test
push
cmp
call
cmp
pop
leave
repnz
and
iret
mov
out
mov
icebp
outsl
cmc
fstl
mov
rcl
sahf
fstp
lahf
mov
xchg
mov
test
mov
call
dec
or
mov
shrb
les
pop
xchg
push
repnz
jmp
aad
xor
xor
xlat
mov
xor
pop
sbb
or
lods
not
cli
lcall
test
test
or
pop
jae
sarb
pushl
mov
loopne
sbb
sbb
add
sbb
adc
xchg
jmp
xor
incl
cmp
inc
dec
cmc
mov
scas
andl
mov
rcr
lcall
iret
scas
int3
dec
out
mov
inc
sbb
je
mov
inc
jl
sub
sbb
inc
call
or
idivl
lds
xchg
incl
stc
aad
test
or
test
mov
pop
and
cli
adc
data16
push
lock
jle
lcall
cld
mov
cmc
sbb
mov
clc
arpl
rorb
lcall
pusha
pop
mov
scas
das
das
mov
add
pushaw
lods
pushf
addr16
push
mov
pop
addr16
jnp
dec
or
adc
pop
inc
fwait
xchg
jmp
jno
mov
dec
xchg
fwait
mov
movsb
lcall
push
iret
cmp
leave
aam
xchg
sti
pop
fbstp
jl
inc
cmp
ljmp
clc
stc
push
dec
and
xchg
mov
decl
pop
adc
dec
out
decl
inc
lcall
push
jmp
push
cwtl
mov
xchg
std
mov
cmp
fcmovnbe
je
lods
ja
mov
or
mov
shl
ds
or
push
cmp
call
lods
pop
out
add
adc
dec
iret
mov
fwait
leave
dec
pop
jo
test
fwait
lock
cmp
movb
xchg
test
lods
js
jp
xor
decl
shrb
add
fistpll
mov
cmc
lock
jnp
pushl
jne
aam
inc
inc
stos
jmp
mov
inc
and
push
fisubrs
pop
and
sti
adc
xchg
lahf
int
xchg
faddp
push
rcrb
ljmp
xchg
in
and
jl
pop
mov
mov
rclb
test
mov
lcall
xor
mov
cmp
imul
add
aaa
rcr
mov
movsb
decl
out
icebp
mov
lds
fstpl
sub
es
mov
insb
xor
inc
inc
and
jmp
and
xchg
ljmp
push
inc
insl
insb
jae
add
movsl
in
add
mov
jl
loopne
es
out
adc
das
xor
xchg
lret
jnp
lret
daa
jmp
cli
out
insl
jg
ja
add
jae
jo
nop
ret
xchg
cmp
into
mov
add
jge
jo
cmp
mov
sub
sbb
lret
fndisi(8087
frstor
mov
mov
fnstsw
std
filds
push
pusha
sbb
pop
adc
ljmp
xchg
scas
mov
add
das
xor
pop
scas
jnp
or
mov
cmp
je
inc
mov
mov
test
lea
rclb
jmp
mov
xchg
icebp
pop
adc
inc
cltd
nop
fs
test
jle
or
das
cli
lcall
ret
fstpl
aaa
mov
aas
mov
adc
sub
adc
jecxz
call
leave
pop
mov
and
icebp
cli
jp
or
rcll
ret
decl
out
xchg
iret
xor
popa
push
jb
adcb
or
adc
jge
stos
jae
push
incl
fs
jp
hlt
xorb
bound
idiv
jno
repnz
call
xor
xchg
mov
lods
stos
pop
ss
mov
cmp
xchg
test
mov
repnz
stc
mov
mov
stos
xchg
outsb
fildll
popa
cmpsl
or
sbb
or
sub
jnp
gs
hlt
test
or
pop
out
popf
pop
and
push
and
mov
xchg
mov
inc
mov
jne
xlat
mov
and
stos
push
lcall
inc
js
mov
incl
xchg
inc
mov
mov
insl
xlat
fs
sbb
loop
xor
popa
jmp
aam
mov
pop
xor
dec
sub
mov
mov
dec
mov
and
cmpsl
add
xchg
mov
jg
dec
push
xlat
jnp
lret
and
add
outsl
sarl
repz
cmpsl
pop
incl
xorl
jno
mov
ja
stc
jmp
add
mov
cwtl
adc
out
dec
or
mov
pushl
ret
or
ja
xlat
mov
shlb
ret
jg
or
cmp
stos
pushf
add
shrb
sub
sub
and
and
cmp
dec
loope
iret
out
cltd
xchg
mov
sbb
test
xor
adc
mov
roll
or
es
jg
lods
xor
push
adc
cwtl
fdivs
sbb
pop
loopne
dec
fldcw
stos
sub
mov
pop
andb
jmp
fimuls
gs
repnz
mov
push
pop
andl
inc
movb
xchg
jmp
cmp
push
xor
pop
out
rorb
scas
rcrb
pop
roll
sub
shl
ja
pushl
and
mov
xor
and
xor
xchg
aad
mov
sub
stos
pop
mov
int3
pop
adc
decl
and
mov
subb
cli
lds
test
out
xor
add
push
xchg
and
pop
insl
inc
add
or
ss
ficomps
lcall
subl
sub
mov
adc
jg
jmp
jl
sbb
pushl
lods
in
push
movsl
mov
test
movsl
mov
popf
addl
mov
xor
pushl
pop
lds
inc
push
ljmp
pushf
pop
dec
jnp
pop
lods
mov
inc
js
icebp
push
lcall
aad
sbb
cmpsl
fucomip
pop
adcl
push
dec
lret
xchg
mov
insl
push
push
and
jmp
mov
jnp
add
daa
or
stc
mov
rclb
xchg
aad
loopne
cmp
cwtl
call
mov
je
js
xchg
mov
test
test
pop
pushl
push
je
test
jb
jno
das
fcmovnu
jno
mov
cmpsl
add
sub
decl
int3
adc
push
pop
inc
cmc
push
dec
cmp
push
sti
loopne
sbb
call
pusha
mov
incl
lods
fistpl
inc
insl
sti
or
mov
jbe
movsb
test
pop
jno
cmp
addl
dec
movsb
fstl
inc
sbb
mov
xchg
cld
add
test
cltd
cmpxchg
sbb
scas
cli
mov
pop
pop
push
pop
add
outsl
sti
int
xchg
sbbl
dec
mov
fcmovnu
pop
je
and
imul
pop
sub
sbb
add
loopne
lcall
ss
cwtl
add
data16
add
js
jmp
cltd
movsl
cmp
xchg
arpl
pushw
and
outsl
insl
movb
aas
and
or
pop
ret
rorl
ret
push
push
leave
inc
call
inc
imul
mov
add
and
shll
ja
std
call
jo
rcl
test
scas
daa
pushf
adc
mov
pushl
loop
push
adc
cmpsl
and
jl
inc
enter
cmp
push
ret
scas
mov
jp
push
mov
fwait
bound
xor
jb
inc
fisubrl
fists
in
push
mov
fwait
stc
fisubrl
out
lds
fnstcw
lcall
inc
mov
aas
and
mov
push
lcall
push
test
stos
mov
xchg
fisubrl
dec
xchg
in
mov
repz
mov
movsl
sbb
inc
cmp
in
mov
mov
mov
pop
outsb
pushf
ljmp
or
mov
repz
inc
xchg
cmp
or
dec
cmpsl
stos
xor
nop
lcall
pop
and
push
push
pop
fdivr
push
int3
pop
shl
mov
jge
mov
push
leave
ud0
enter
insb
aaa
loop
dec
negb
cmpsl
aam
negb
dec
jno
xor
mov
dec
mov
in
pop
mull
lods
notl
mov
sub
mov
scas
leave
call
push
cmp
mov
pop
clc
lods
test
mov
in
int3
outsl
mov
and
jg
push
xorl
std
mov
inc
cmp
push
pop
mov
lcall
xchg
movsb
or
out
xchg
scas
je
jo
jg
incl
mov
push
pop
cmp
or
std
cmpsb
sub
or
adc
dec
ja
inc
push
mov
xchg
xchg
lret
mov
mov
push
mov
incl
cmpsl
mov
and
xor
aas
adc
inc
ret
lcall
popa
and
ljmp
cli
lcall
jecxz
addr16
mov
jmp
orb
mov
daa
lret
mov
cmp
test
sub
ljmp
or
roll
inc
and
ficoml
stos
and
pop
lcall
jge
scas
push
stc
imul
sub
mov
lret
ja
call
js
cmp
call
or
imulb
orl
pop
sub
jg
fucomip
sub
bound
inc
scas
cmp
cmc
movsb
psraw
cmp
cmp
mov
test
jno
insb
clc
sub
ds
mov
adc
dec
push
int3
lods
jo
inc
fsubs
xor
cmc
mov
mov
sub
and
dec
pop
outsb
push
loope
xchg
fldl
shll
int3
paddb
fstpt
mov
mov
xor
loop
add
sub
sti
jae
mulb
das
add
into
popa
cmp
stos
sbb
push
jl
cmpsb
sbb
ret
js
jecxz
mov
dec
inc
sbb
xor
mov
fiaddl
push
pop
in
sbb
or
addr16
pop
pop
bound
jmp
bnd
push
stos
cmpsl
mov
iret
outsb
sbb
inc
jecxz
push
inc
sarl
icebp
pop
push
mov
lods
jle
add
pop
jae
stc
mov
std
xor
cmp
push
pushf
pop
pushl
ds
mov
and
jecxz
add
jmp
gs
int
call
dec
cmp
xchg
xchg
mov
dec
pop
or
clc
outsl
xchg
xor
xor
das
mov
cltd
add
ljmp
ffree
mov
xor
nop
cmp
adc
jne
or
cmc
sahf
scas
cmp
sbb
pushl
decl
dec
dec
popf
shl
scas
ror
sti
pop
jmp
icebp
dec
push
and
testl
in
test
scas
insl
arpl
jg
add
mov
in
jg
jle
nop
adc
xor
icebp
adc
or
cmp
mov
jp
cmp
pusha
ret
sarl
jmp
sbb
xor
inc
cmp
cmpsb
aas
xchg
cmp
cmpsl
cmp
mov
imulb
daa
addr16
jl
or
loop
and
rcrl
out
xlat
sub
incl
sarl
fnstenv
ds
lcall
enter
fildl
mov
rol
outsl
cli
stos
sahf
in
js
push
mov
cmp
mov
scas
jg
inc
scas
outsb
subb
shll
test
call
outsb
out
xchg
sar
dec
dec
push
ja
fcomip
call
test
fstpt
mov
fidivrs
or
jecxz
je
mov
sti
rol
ljmp
outsb
adc
mov
in
mov
mov
cwtl
cmp
enter
xchg
test
mov
add
jg
inc
pop
test
sbb
rclb
cs
or
cwtl
sbb
jo
mov
incl
push
dec
cmp
add
xchg
add
popf
testb
cmc
incl
pop
pushf
or
add
nop
repnz
inc
lcall
stos
jbe
loopne
lahf
sahf
sub
lcall
ret
test
ds
dec
jge
pop
ja
icebp
rdmsr
push
cli
dec
fmull
test
loopne
pop
aas
jno
loope
mov
movsl
sub
lcall
jl
dec
cmpb
inc
rcrl
or
test
jno
mov
call
push
pop
fbld
aam
sub
lret
mov
jno
out
out
adc
ljmp
and
test
dec
xlat
rclb
xchg
mov
js
roll
jg
pushl
inc
mov
in
or
fcmovnb
sub
jmp
rolb
xchg
mov
dec
push
leave
lcall
cmp
cmpsl
adc
push
mov
and
inc
jecxz
dec
incl
jl
repnz
cmpsl
mov
pop
cmp
push
jns
test
mov
or
inc
pushf
inc
dec
popf
decl
call
add
jbe
pop
mov
fcoms
and
fcomip
ds
push
popa
imul
inc
inc
and
push
cld
jecxz
sub
mov
clc
fwait
cmp
aam
mov
add
pop
xor
mov
out
sub
push
sub
xchg
out
mov
jnp
or
ljmp
divl
jns
int3
je
fisttps
insb
pop
xchg
jmp
adcb
add
push
inc
gs
dec
stos
in
sub
mov
inc
pop
fldenv
mov
sub
jecxz
and
xchg
leave
sub
adc
in
ds
xor
xchg
lods
sbb
ljmp
enter
mov
dec
imul
add
xor
xchg
mov
jge
and
pop
sub
cmpsb
fs
mov
lods
and
cs
dec
and
dec
xor
jae
jecxz
lods
mov
vcvtps2dq
inc
adc
mov
sbb
mov
out
push
cmp
sbb
std
negb
xchg
aad
mov
sub
sub
stos
sqrtps
sub
push
in
mov
dec
adc
test
stc
adc
cmc
sti
mov
test
sub
ljmp
dec
gs
pop
out
jmp
lock
cli
cmc
adc
mov
adc
data16
incl
cmp
sahf
sbb
sub
pushf
in
dec
lds
or
fimuls
je
lcall
jecxz
pop
jg
xor
push
repz
arpl
enter
aaa
das
lret
cwtl
pushf
loop
ljmp
or
int
data16
rorl
adcb
test
pop
inc
jne
call
enter
scas
lock
push
pop
mov
popf
adc
mov
leave
xor
jo
pop
sar
or
je
bound
sti
jo
dec
mov
call
or
aas
inc
movsb
shlb
or
mov
movl
sahf
or
sbb
pop
aas
and
dec
sbb
xor
or
in
idivb
jl
ljmp
add
pop
mov
lock
roll
aaa
inc
dec
push
sbb
test
loopne
sbb
inc
pop
inc
testl
sbb
shlb
push
lds
cli
jmp
add
int3
ret
mov
lock
lcall
inc
xor
mov
cmp
rolb
andl
sbb
testb
lock
mov
cld
or
icebp
shll
fst
push
negb
dec
lcall
add
pop
rcrl
test
cld
push
mov
mov
jmp
push
sti
idivl
dec
nop
into
jle
push
cmp
addb
pop
sarb
shlb
call
mov
and
xor
pop
lods
pop
cmp
ja
jno
dec
rorb
cs
pushl
and
out
das
popf
dec
adc
cmp
aad
mov
mov
cwtl
dec
lcall
call
out
int
jge
sbb
cwtl
push
inc
pop
mov
pop
ss
inc
xor
lods
xor
lret
dec
negl
stos
adc
push
xor
loop
sub
or
push
ljmp
push
mov
popa
loop
sbb
pop
adc
repz
pop
mov
mov
enter
in
test
inc
js
decl
notb
sbb
dec
fs
mov
mov
repnz
cltd
pop
and
decl
setg
movsb
mov
cmc
aad
fcoml
xchg
mov
mov
idivb
incl
mov
mov
xchg
mov
mov
fmuls
aam
push
test
add
push
insb
shl
pop
adc
cmp
mov
mov
mov
mov
pushl
cmpsl
mov
and
sbb
jg
xchg
lcall
xchg
out
stc
sbb
push
inc
notl
adc
sub
push
sub
andl
sti
dec
pop
lret
daa
jg
scas
imul
pop
fldt
dec
or
and
pop
mov
mov
int
fsubrp
int
xlat
push
mov
dec
xor
cwtl
das
mov
sub
lcall
dec
xor
jp
mov
pop
rolb
or
fwait
jne
pop
jb
lret
jecxz
jmp
inc
push
push
and
divb
jge
leave
and
scas
ljmp
sahf
push
or
lods
jb
jae
push
jl
mov
xchg
shlb
pop
hlt
idivb
addl
lock
jg
xor
or
mov
sub
jns
push
mov
jmp
dec
jg
pusha
aaa
loop
pop
push
std
popf
pushf
jge
fdivs
mov
dec
lcall
loop
or
clc
fwait
or
or
pop
lret
mov
jg
push
mov
ret
mov
mov
pusha
mov
cmp
mov
ss
jmp
jmp
dec
pop
lods
mov
sar
popa
mov
aas
xchg
push
xchg
cltd
call
adc
cmc
fcomip
pushf
pop
into
sti
push
dec
adc
ret
lds
sub
inc
dec
ljmp
rcrb
mov
xor
loope
shll
ds
ljmp
imul
stos
into
jo
or
adcb
cmp
fwait
sbb
pop
ljmp
aas
mov
int
sti
lahf
cmp
bound
xor
rcrb
sbb
fs
rorl
in
inc
aaa
pop
cli
incl
pmulhuw
mov
xchg
inc
add
pop
pop
pushl
cmp
sbb
test
add
sbb
cli
mov
mov
push
mov
fisubrl
pop
in
movsb
mov
jbe
mov
jae
jne
loopne
push
fwait
ret
pushl
loop
aad
scas
or
and
adcl
push
push
imul
call
push
xchg
clc
addr16
aam
push
outsb
sub
subb
cmp
push
nop
inc
dec
mov
mov
filds
outsb
mov
lcall
jno
inc
iret
lcall
mov
dec
fdivrs
mov
pop
hlt
sub
rcll
addr16
sahf
imul
pop
jmp
shrb
neg
std
mov
shlb
mov
mov
idivb
adc
insb
jle
push
pop
jecxz
lock
icebp
jecxz
arpl
inc
cld
cwtl
call
dec
pop
shr
and
and
das
and
pushl
mov
ja
fs
cs
pushw
inc
mov
lcall
test
rcrb
inc
fs
sub
in
jns
sar
lcall
movsl
or
inc
xlat
subl
sub
incl
lcall
sbb
mov
repz
cltd
testb
clc
arpl
call
and
hlt
jae
insl
scas
lret
lahf
gs
inc
push
out
adc
push
xchg
iret
lods
mov
jge
int
inc
mov
push
push
mov
cwtl
cli
je
jnp
mov
jne
cltd
pop
test
sbb
daa
ljmp
decl
je
stos
xchg
lods
add
pop
xor
test
fstl
std
and
jecxz
incl
or
mov
push
or
imul
push
adc
lahf
xor
adc
or
mov
mov
dec
cmp
cmp
jne
lret
insl
adc
arpl
lcall
pop
sub
jle
adc
pop
and
lahf
push
outsb
xor
lret
test
push
sar
ljmp
push
out
pop
adc
lret
je
das
addr16
mov
sbb
push
ljmp
fdivrp
cmp
inc
cmp
insb
push
pop
lds
mov
ftst
jb
insb
leave
mov
js
cmp
mov
push
cmp
popa
ss
xchg
subb
jg
jle
jnp
int
sahf
in
lcall
fsubl
sub
sub
out
shlb
pop
cmc
aas
push
rol
inc
stos
and
pop
pop
test
and
cmpsl
xor
decl
dec
stc
sbb
sub
lods
cmpsb
jae
stos
jmp
inc
mov
sbb
int
rolb
lods
ljmp
push
es
ret
ja
xchg
mov
push
call
scas
movsb
mov
shrl
aas
cli
jecxz
xor
adc
outsb
imul
insb
iret
dec
pop
fwait
test
in
aad
jg
inc
bound
xor
repz
into
adc
je
xchg
cmp
call
or
scas
push
mov
or
outsb
jp
inc
inc
das
add
jmp
push
scas
or
xor
mov
loop
and
mov
cmp
inc
jge
scas
aam
sub
mov
and
cmp
ja
pop
mov
pop
popf
sub
addr16
aad
cmp
pop
lock
ret
add
ljmp
mov
xlat
rolb
pop
xchg
jmp
sbb
inc
jl
jae
xchg
lods
test
dec
jbe
cltd
push
sub
jo
xchg
std
aas
ljmp
das
fs
sub
xchg
and
sbbb
xchg
push
data16
scas
decl
clc
sbb
clc
sub
jle
mov
add
jmp
add
mov
mov
std
stc
fisubrl
std
aam
mov
les
jmp
pop
jp
xchg
aaa
lods
jmp
inc
pop
cld
sub
scas
and
adc
shll
jg
inc
mov
sbb
jecxz
leave
js
int3
dec
data16
lahf
aas
mov
or
cmp
mov
xor
xchg
lret
roll
outsl
mov
cmp
out
pop
pop
sub
dec
rolb
shll
test
hlt
mov
insb
inc
call
cmp
lds
fnstsw
dec
loop
inc
out
jp
cltd
sbb
mov
decl
adc
mov
cmp
dec
in
roll
or
mov
aad
mov
pushf
jl
movsb
adc
das
xor
inc
mov
dec
adc
xchg
call
je
bswap
subb
xor
icebp
shll
subl
cmp
movsb
dec
push
imul
jno
sub
test
pop
int
and
mov
ljmp
xorl
in
cmp
push
jne
gs
xchg
push
xchg
faddl
cli
call
xchg
cltd
inc
push
inc
dec
fstpt
mov
mov
pushl
ds
pop
loop
stos
add
dec
les
mov
loope
cmpsb
xchg
aas
mov
incl
xorl
cmpb
hlt
loope
mov
int3
shlb
loopne
ljmp
cmp
fmul
push
adc
aam
sarl
mov
rcrb
aaa
iret
orb
lcall
pop
loopne
loop
push
jmp
test
mov
jae
mov
mov
jp
pusha
negl
sub
push
cli
adcl
jnp
mov
and
xchg
loope
decl
incl
jno
mov
push
xlat
imul
mov
and
mov
jle
mov
pusha
inc
inc
or
and
aad
add
and
adc
loope
sar
mov
fs
rorl
mov
fiadds
mov
frstor
call
jo
jmp
mov
adc
pop
jmp
imul
sub
sbb
cli
pop
dec
xor
test
push
movsb
aam
jae
sub
insb
insl
in
inc
movsl
dec
adc
jge
mov
xchg
inc
mov
pop
jnp
lock
pop
std
cmp
jbe
pop
adc
mov
or
jbe
push
mov
xor
sub
decl
dec
cmp
ja
dec
adc
popf
test
jmp
loope
je
out
mov
add
mov
loopne
cmp
push
cs
ljmp
in
imul
mov
test
in
test
push
sbb
xor
add
inc
sub
ret
or
leave
test
adc
fs
inc
call
add
sar
xor
testl
jne
pop
das
mov
dec
xchg
test
mov
leave
mov
mov
sbb
sbb
ljmp
clc
stos
jl
push
stos
ficoms
mov
dec
out
cmc
and
mov
pushl
movsl
shl
imul
jecxz
cmp
lods
mov
and
lds
adc
mov
sbb
xchg
mov
cwtl
and
adc
rorb
mov
pop
cmpsl
pop
cs
jg
icebp
inc
xchg
inc
jnp
outsb
ja
dec
js
pop
jns
jb
lcall
fstpt
mov
addb
jnp
xlat
test
call
inc
add
xchg
adc
scas
or
movsb
xor
fucomip
jns
and
or
hlt
popa
js
jecxz
call
mov
mov
add
pop
adc
mov
cli
rolb
xchg
cmp
incl
cld
xchg
cmpsl
inc
loop
sub
cmp
adc
pop
mov
fwait
or
decl
add
addb
hlt
and
inc
ficompl
mov
nop
sbb
jmp
adc
pop
call
mov
stos
push
and
fdivrs
out
or
push
cmp
and
aas
sub
jns
aaa
negb
jne
fstl
or
sahf
arpl
sbb
lcall
push
add
mov
xchg
xchg
sbb
cmp
scas
daa
mov
ss
jmp
lret
movsl
icebp
shlb
into
rclb
sar
jg
fsts
inc
dec
dec
repnz
push
shrl
mov
cwtl
in
adc
adc
cmp
pop
rorl
mov
inc
fldl2e
leave
mov
fsub
pop
mul
mov
jns
call
lret
xchg
mov
pusha
jmp
inc
movsl
mov
in
sahf
dec
stos
std
adcb
outsl
test
pop
mov
push
cld
ljmp
popa
std
aas
sub
xor
xor
mov
mov
adc
call
and
dec
rcrb
clc
incl
jno
add
lcall
shlb
pop
push
imul
clc
mov
and
ljmp
stos
imul
in
xor
lods
pop
jb
fdiv
add
cs
xchg
cmp
ljmp
xchg
movsb
xor
ficompl
movsl
push
cld
mov
push
adcb
xchg
pop
and
bnd
or
lcall
subb
mov
icebp
outsb
fsts
cmp
jmp
daa
enter
movsb
mov
jmp
inc
fs
loopne
pop
fdivr
cmc
scas
test
mov
push
add
mov
movsl
mov
push
jns
mov
mov
mov
out
mov
pop
movsb
mov
imul
dec
stc
push
clc
data16
inc
lcall
jmp
hlt
sub
xchg
xchg
pop
in
negb
mov
scas
cmp
std
ljmp
sbb
dec
stos
shlb
ds
arpl
ja
inc
repnz
and
inc
adc
pushl
jecxz
pop
lods
jo
fisubl
sti
push
xchg
sub
imul
dec
inc
xor
adc
ljmp
mov
insb
movsl
sbb
test
cmc
int3
out
jnp
jmp
int3
jmp
add
stc
sub
and
cmp
and
lock
push
jne
mov
sbb
mov
ljmp
rcrl
fistps
mov
sub
add
inc
loop
incl
jg
fldl
adc
flds
push
daa
clc
dec
inc
sbb
in
ret
lea
incl
cld
xchg
popl
les
gs
je
pop
dec
jecxz
into
mov
pop
decl
sub
cmp
fucomi
sub
pushf
test
iret
mov
std
jg
inc
es
xor
js
mov
iret
daa
pushl
rorb
out
and
out
xorb
popa
iret
ljmp
enter
call
clc
add
cmp
popf
jb
dec
inc
nop
lock
mov
xchg
fmull
jno
fimuls
sbb
insb
gs
mov
clc
sbb
mov
es
jg
push
std
push
pop
pop
pop
call
push
mov
adc
rcll
dec
sarb
les
mov
je
ret
decl
adc
push
sbb
sub
push
or
stc
pop
inc
jne
je
cmp
lcall
inc
stc
adc
jl
push
or
jmp
imul
stos
decl
cld
sub
pop
leave
rcl
jo
pushf
mov
pop
inc
pop
fdivp
adc
scas
jmp
inc
cld
jl
mull
loope
pop
fsubr
ljmp
mulb
adc
push
mov
pop
lock
mov
add
lret
lret
ss
push
xor
add
mov
outsl
enter
pop
xchg
pop
in
mov
fs
das
or
mov
loop
adc
insl
aas
or
xor
adc
mov
xor
das
xchg
mov
push
push
stos
jg
icebp
mov
scas
inc
lods
insl
add
pop
ret
and
or
lds
dec
loope
outsl
mov
lods
mov
mov
dec
xchg
icebp
movsl
jno
jp
out
push
jno
mov
decl
sub
cmp
push
data16
push
dec
mov
lds
int
mov
or
and
call
sbb
scas
sub
cs
or
mov
xchg
mov
lock
jmp
dec
fists
or
loop
stc
shll
repz
ljmp
call
mov
addr16
enter
jle
test
xor
jg
shrb
cmp
insl
mov
jae
adc
and
les
sub
out
xchg
std
repz
lock
arpl
int3
adc
lods
loopne
fcmovne
mov
dec
xlat
scas
out
cli
ljmp
inc
iret
mov
es
dec
mov
mulb
jb
pop
test
and
jg
adcl
addr16
inc
jg
jnp
cltd
xor
faddl
push
pop
aad
int
xor
jg
ljmp
jmp
push
pop
leave
cmp
cmpsb
fsubs
fcmovb
pop
into
adc
sub
cmp
jg
mov
mov
data16
dec
mov
inc
add
decl
jno
push
outsl
push
dec
sbb
scas
dec
xor
stos
mov
iret
pop
fdivs
pop
xor
ljmp
push
stc
mov
psubb
cwtl
aas
fxch
sbb
enter
movsl
incl
push
xor
jmp
scas
sahf
nop
xor
cmpl
ljmp
loope
icebp
fistpll
mov
sbb
sub
pushl
out
arpl
int3
jno
mov
push
icebp
aas
enter
sahf
test
add
ljmp
push
es
mov
leave
pop
popf
inc
add
lret
in
xchg
mov
call
test
dec
adc
in
xchg
and
fwait
mov
call
push
shr
jge
mov
mov
ja
push
mov
inc
add
mov
int
pop
jno
out
sbb
push
andl
pop
cwtl
sub
pushl
psubusw
cltd
cwtl
or
xchg
test
xor
fwait
jge
pop
lcall
cwtl
and
scas
lods
push
popf
pop
int
fisubs
shrb
out
push
cmpl
inc
popf
mov
ret
in
dec
push
imul
cmpsb
out
outsl
mov
pushl
mov
push
add
sbb
addr16
test
push
dec
ljmp
inc
imul
addr16
pushl
push
outsl
push
mov
xor
fisubrl
outsl
ds
nop
loope
out
add
add
in
lcall
popf
xor
cmp
and
popa
addl
decl
fdivs
mov
or
push
pop
sbb
push
test
mov
push
jb
jecxz
clc
ljmp
das
push
pop
push
cs
loope
xor
call
lcall
aas
sbb
pop
outsl
push
cmp
stc
incl
mov
repz
jo
sub
push
and
cmp
dec
mov
call
aam
pop
incb
jns
and
imul
decl
xor
mov
leave
clc
popa
and
inc
scas
adc
lahf
cmp
inc
incl
ja
rcll
orl
enter
insb
or
pop
arpl
pop
insl
dec
mov
add
adcb
dec
mov
fsubrl
cmc
xchg
pop
aas
pop
fldcw
jmp
sbb
in
inc
mov
pop
jns
mov
sbb
leave
dec
sub
dec
pushl
pushf
flds
xor
sbb
sbb
xchg
insb
xchg
xchg
test
outsb
mov
cs
jle
cmp
nop
mov
cld
jb
js
or
xchg
fs
stc
xlat
cmpsl
mov
sbb
mov
push
inc
push
inc
stos
jb
dec
lcall
shrl
arpl
das
clc
fcomps
push
mov
imul
outsb
xchg
jb
rcll
dec
mov
and
xor
mov
adc
push
js
aas
xchg
imul
call
aas
js
push
lcall
repz
push
shr
in
js
or
push
decl
xchg
insb
fsubr
adcl
jge
lret
jecxz
xor
push
int3
scas
mov
jbe
aas
and
cltd
loop
mov
push
lret
jp
inc
daa
cmpsl
inc
push
dec
xor
shlb
jmp
insb
out
fdivl
cmp
push
stos
push
mov
or
cmp
notl
lahf
ljmp
mov
lret
dec
test
clc
push
mov
mov
imul
jmp
js
jg
in
xchg
scas
test
fsub
dec
pop
rcrb
in
push
xchg
fcoms
cmp
pop
or
scas
repnz
dec
cmp
clc
cli
js
decl
imul
dec
lret
fs
and
inc
std
sbb
fwait
or
clc
incl
shrl
push
je
mov
in
mov
incl
sub
jne
mov
xchg
iret
cld
jecxz
hlt
cmp
ss
lret
std
scas
and
mov
test
mov
xchg
outsb
jl
bound
mov
pop
cmp
push
push
pop
popa
push
or
insl
adc
push
popa
cld
lret
and
mov
mov
inc
inc
testl
xchg
xchg
stos
jns
cmp
das
arpl
loop
fnstsw
popa
dec
popf
pushl
push
push
dec
ss
mov
fisubrl
inc
out
movsb
pushf
icebp
std
xchg
enter
push
add
call
shll
or
mov
pop
jmp
push
fwait
xchg
cltd
pop
add
jmp
cmp
adc
push
cmp
or
adc
lret
adc
out
cli
add
jne
pop
inc
inc
xor
push
imull
shll
data16
ljmp
pop
repz
pop
jle
into
ljmp
pop
js
ja
mov
pop
decl
sub
popf
sbb
mov
notb
inc
xor
xor
jg
call
and
fisubrs
pop
addr16
dec
sbb
and
push
mov
test
ljmp
mov
mov
and
repz
adc
insl
in
jbe
or
mov
sbb
jnp
push
arpl
frstor
daa
add
xor
stos
add
aam
jl
call
jne
and
push
cmp
mov
ret
sub
pop
nop
pop
rcrl
add
xchg
xchg
cmp
aaa
adc
das
pop
lcall
jb
xchg
jmp
clc
pop
xchg
or
movsb
push
xchg
hlt
js
nop
jg
jecxz
pushl
dec
loope
mov
pop
scas
dec
sbb
or
jae
push
xchg
sbb
push
push
lcall
outsb
imul
aas
xlat
mov
popa
sub
ret
push
push
xchg
cltd
decl
testb
ret
xchg
cmp
sub
repz
fsubr
mov
cmp
pop
or
data16
mov
cld
mov
lahf
fidivs
sub
popa
jmp
adc
and
jns
sbb
mov
subl
cwtl
sbb
outsl
out
adc
call
in
push
pop
idivl
jo
loop
rol
xor
push
aas
es
push
sub
arpl
pushl
ret
adc
or
cltd
hlt
popl
movsb
popf
mov
push
call
mov
fdivs
pop
jle
in
and
cli
push
dec
and
out
add
or
sbb
test
orb
pop
movsl
scas
fcompl
lcall
loope
test
mov
es
xlat
lcall
xchg
push
outsb
cmpsl
out
mov
and
test
out
in
loopne
cmp
jo
lds
and
sbb
mov
jg
dec
popf
daa
sahf
mov
ret
or
mov
das
sub
rolb
lahf
loop
cmc
or
incl
xor
inc
dec
pop
out
aad
in
adc
sub
mov
mov
add
or
sar
jae
jmp
icebp
das
add
adc
mov
mov
movsb
mov
fs
pop
test
decl
jmp
mov
loope
push
addr16
jg
ljmp
scas
dec
lds
stc
in
test
fstps
dec
into
sbb
push
jp
out
inc
inc
push
ss
dec
call
daa
jae
cmp
jmp
sidtl
sbb
or
cmp
sub
and
cmp
int
jmp
outsb
sbb
mov
insl
ja
sub
mov
and
push
sbb
decl
js
div
push
pushf
inc
test
fyl2x
pop
cltd
nop
jno
mov
lcall
shl
loopne
jg
pop
loop
push
jecxz
std
rolb
jge
cli
mov
mov
or
fcomip
incl
in
xchg
in
push
nop
outsl
test
mov
movsl
sub
pop
movsl
push
add
pop
lcall
add
ret
cmp
sub
inc
frstor
inc
popa
lock
fcomi
xor
mov
dec
sbb
mov
int
loope
or
jg
mov
sahf
cmp
aad
xchg
cmpsl
sbb
insb
add
fcoms
mov
filds
pop
inc
incl
nop
shrb
xchg
xor
cmc
test
dec
inc
mov
fldpi
daa
mov
bound
and
call
sbbl
popf
dec
sbb
aaa
fs
dec
and
fwait
in
jmp
sub
mov
lcall
mov
aaa
cli
xchg
das
lock
mov
mov
bound
push
sbb
pop
in
inc
popf
aam
add
nop
cwtl
fldl
sar
pushl
movsb
movhps
scas
stos
sahf
jo
pop
jp
mov
and
leave
pushf
jmp
inc
pop
jg
cmc
call
cld
mov
push
and
xchg
icebp
gs
inc
mov
outsb
dec
add
lcall
mov
aas
sub
movsl
push
xchg
cmp
push
js
cmpb
loop
inc
ljmp
aas
adc
popa
psrld
je
mov
add
dec
jns
lcall
fdiv
rcrb
jo
inc
fwait
cmp
in
jne
jecxz
std
jge
fwait
inc
stc
ja
pop
rcr
loop
sub
sub
inc
and
test
outsb
push
or
shrl
xchg
mov
cmp
rorl
outsl
out
mov
decl
pop
or
or
scas
sbb
fildll
inc
lcall
mov
push
pop
pop
cmp
sub
outsb
adc
dec
aas
gs
jecxz
fstpl
arpl
jecxz
mov
dec
jae
les
mov
stos
cmpsl
or
jg
adc
or
jns
xlat
jno
jnp
insb
lds
push
movsl
out
inc
pop
cmp
ljmp
addr16
rorl
cmpsb
adcb
mov
mov
in
lea
pushl
mov
push
test
out
in
scas
jnp
lods
inc
push
cwtl
pop
pop
adc
call
pushl
in
dec
ret
mov
mov
nop
sbb
into
mov
xchg
in
lock
or
call
mov
cli
mov
pop
cltd
pop
or
dec
xor
jns
pushl
dec
push
mov
jp
out
xor
xchg
xor
pusha
hlt
pop
pop
sub
jns
movsb
mov
add
into
mov
cmp
jnp
push
stc
sbb
loopne
addr16
push
add
pushl
pop
mov
pop
cwtl
les
xchg
sub
jl
adc
xchg
push
mov
mov
cmpsb
sahf
inc
jbe
jg
stos
lret
ss
out
lret
cmp
sbb
test
mov
inc
jg
out
mov
pop
cli
sahf
xchg
fdivrp
fmuls
sub
subb
xorl
cli
stos
push
lcall
aam
sub
sbb
stos
xorl
ret
add
test
jge
jmp
add
inc
inc
inc
daa
movsl
push
inc
aad
inc
out
push
rcrl
fldt
xchg
aas
jmp
pop
cmc
pushl
sub
xchg
jg
cmpsb
stc
pop
lahf
loope
push
loope
stos
pop
insb
movsb
ja
lock
push
jg
incl
xor
cwtl
sbb
hlt
mov
sahf
cmp
pop
mov
adc
lods
mov
icebp
scas
dec
jmp
dec
cs
inc
jns
imul
xor
into
or
idiv
ja
sub
fcmovnb
mov
sbb
out
loop
sub
stos
cs
decl
cmpb
ret
push
dec
mov
jle
xor
ja
inc
enter
test
push
cld
sbb
ret
push
mov
xchg
jne
inc
test
mov
cmp
inc
mov
incl
clc
lcall
stos
jl
push
pusha
xlat
insl
xor
insb
xor
movsb
divb
popf
iret
jb
decl
cmpsb
inc
hlt
push
std
add
popl
aam
popf
dec
dec
pusha
pop
push
rclb
ljmp
push
push
jl
add
insl
or
js
mov
fnstenv
jb
jmp
mov
into
mov
inc
adc
adc
dec
imull
xchg
xchg
dec
repnz
mov
lcall
inc
sti
inc
scas
mov
outsb
test
aad
sti
inc
les
loopne
adc
sub
xor
repz
shl
adc
jb
dec
pop
enter
jne
sbb
jo
mov
jbe
incl
ja
push
mov
xor
sub
or
loopne
jg
pop
out
cmp
icebp
jge
mov
xchg
inc
xchg
jmp
push
lock
mov
test
xor
inc
sar
ret
mov
cmp
out
and
lods
insl
inc
mov
loop
movsl
ss
test
cmp
jg
arpl
ja
call
lahf
fdivrl
mov
and
xor
popa
test
data16
sub
incl
test
fstps
sbb
push
sbb
test
dec
mov
call
sarb
push
xchg
stos
in
cmp
imul
xor
hlt
divl
adc
xor
mov
aam
or
sub
subb
lahf
jge
dec
push
mov
sub
and
fdivl
jecxz
push
push
js
jb
cmp
fistpl
daa
jmp
clc
cmpb
fs
outsl
filds
testl
ljmp
jne
xor
stos
decl
ficoms
cmp
jle
add
aad
jmp
call
cmp
push
sbb
cld
inc
fbld
cs
push
fcomip
jg
sarb
and
add
jo
and
add
aam
dec
add
call
push
stos
dec
mov
filds
cwtl
push
pop
jl
stos
aaa
sarl
add
xchg
out
dec
inc
lds
call
lahf
js
subl
and
leave
loopne
mov
cmp
pushf
fcomip
ljmp
fcoms
ret
sbb
roll
stos
dec
mov
sub
call
lods
adc
stos
outsb
movsl
fcoms
pop
sbb
xchg
fisubs
mov
xchg
cli
pop
call
lock
lods
xlat
loope
dec
subl
or
movsb
or
xor
mov
ljmp
sti
ja
mov
leave
adc
je
es
sahf
cmp
ljmp
aaa
das
mov
or
push
push
ret
sub
fsubs
sbb
ss
adc
mov
mov
ljmp
adc
ret
or
xchg
adcb
hlt
sub
out
je
nop
mov
jmp
decl
rorl
aas
mov
add
add
pushf
gs
add
incl
sti
js
shll
lahf
ja
add
clc
xchg
psubd
shrb
xchg
repz
adc
push
sub
mov
dec
cli
dec
or
jmp
movsb
jnp
nop
aaa
aaa
hlt
mov
dec
aad
jmp
pushf
mov
or
pop
cmpsb
lret
or
push
pop
sbb
test
inc
scas
xchg
cwtl
mov
xchg
mov
popf
jl
subb
in
aaa
bound
push
daa
jg
ljmp
aam
mov
scas
aas
xlat
inc
mov
mov
xor
int
adc
jg
pop
jb
fwait
sbb
lea
jne
enter
dec
jns
sub
add
sub
imul
xor
xlat
mov
dec
scas
stos
sahf
and
roll
out
pop
sar
cmpsb
pop
popf
jmp
dec
dec
lods
ret
push
push
mov
sub
cs
mov
adc
out
cli
push
cmp
test
or
enter
push
loop
fisttpll
add
sti
pushl
add
rorb
lret
cmp
popa
mov
mov
pop
or
into
jmp
test
add
lds
adc
out
loopne
rol
inc
cmc
mov
imul
cmp
pushf
test
xchg
adcl
scas
xchg
jmp
sbb
jp
mov
js
xlat
xor
mov
lret
std
sbb
out
popa
sar
ljmp
iret
fisubrs
bound
sbb
sbb
repz
call
es
call
jge
int
hlt
gs
or
mov
xchg
aas
cmp
pushl
dec
gs
pop
stc
push
jge
nop
xchg
je
subb
inc
lcall
xchg
and
imul
sbbb
dec
das
rcr
negb
jae
test
jg
mov
nop
xor
push
ret
push
xchg
jg
inc
pusha
imul
movsb
jg
mov
sahf
minps
int3
shrl
out
inc
add
fbld
into
push
mov
push
jo
push
cvtps2pi
push
xor
arpl
scas
clc
xchg
cli
mov
dec
fiadds
ret
mov
and
inc
call
push
sub
js
push
test
loopne
bound
je
in
pop
inc
loope
scas
cmc
pop
call
sbb
ds
ljmp
xchg
mov
xor
enter
sub
sarl
xchg
cmp
js
mov
into
or
xchg
cmp
jmp
dec
out
out
lret
insl
push
int3
outsl
stos
cld
push
idivb
pop
sub
leave
mov
addr16
and
dec
test
je
dec
test
int
or
and
or
jle
mov
jmp
fisttpl
loope
hlt
cmp
jns
aam
pushf
add
aaa
mov
mov
ljmp
sub
js,pt
xlat
gs
daa
mov
inc
xchg
out
xchg
out
adc
jecxz
ret
cmpsl
jmp
cwtl
pop
ss
lea
add
roll
or
decl
jne
cld
dec
pop
xchg
xchg
iret
clc
mov
adc
sarl
jnp,pt
outsb
jmp
stos
add
jmp
jo
stos
pop
stos
in
jns
push
ss
lcall
mov
loop
push
arpl
sub
jl
jnp
pop
pushl
and
pop
or
loop
mov
hlt
dec
cmp
ficomps
out
fs
cld
or
jno
std
call
out
xorb
jp
cmp
nop
jp
cmp
sub
jge
jno
mov
cmc
fldt
dec
pop
jg
jg
leave
aas
int
cmp
cmp
lahf
sbbl
out
add
or
out
add
cmp
mov
test
out
aad
movsb
cld
pop
pushl
stos
int
add
mov
hlt
out
xchg
and
pop
cmp
add
push
adc
cld
jmp
cmpsb
in
aaa
and
cli
and
mov
xchg
dec
std
test
push
loopne
imul
pushl
jnp
bound
aad
testb
je
or
fwait
gs
call
add
shrl
mov
sub
sub
addl
inc
ja
mov
adcb
sbb
sbb
in
jbe
std
jno
mov
decl
push
ljmp
nop
hlt
lret
jno
test
addr16
push
pushl
push
cltd
out
loope
shr
add
dec
sbb
cmpsb
sub
icebp
xor
lods
mov
jg
push
enter
ja
faddl
mov
cs
mov
inc
push
into
lret
xchg
mov
sti
sti
pop
stos
mov
addr16
shrb
data16
and
into
jg
mov
std
sbb
stc
pushf
shll
lcall
shlb
aas
inc
fidivl
je
jmp
cltd
ja
mov
inc
inc
jge
mov
movsb
call
int
mov
call
adc
sbbb
sub
sbb
push
dec
shr
cmp
jmp
test
lds
lock
decl
insb
or
cmp
scas
add
jae
jno
jbe
shr
test
add
mov
xor
sbb
xor
dec
xlat
dec
scas
fstp
cmp
xorl
mov
dec
or
adc
out
jns
push
mov
xchg
negl
mov
pushl
das
pop
gs
arpl
in
push
sub
cmpsb
pop
mov
pop
rorb
pushl
xchg
cmp
jg
mov
inc
mov
out
adc
xor
incl
mov
aad
lcall
arpl
dec
mov
jecxz
pushl
les
out
test
mov
mov
rcll
and
jno
jmp
decl
test
cld
cli
and
mov
add
fidivs
aad
adc
xchg
decl
add
mov
test
jmp
lods
inc
mov
cmp
inc
pop
jo
int
xorl
pop
aad
mov
dec
jne
repnz
sarb
xor
mov
mov
push
inc
inc
xchg
iret
fidivs
pop
mov
sub
das
dec
or
dec
jp
fildl
mov
mov
sub
cmpsl
loop
nop
jmp
sbb
outsb
or
popa
adc
in
jle
daa
sarb
es
and
ljmp
js
ljmp
mov
pop
xchg
filds
dec
xchg
imul
and
jmp
or
fimuls
pushl
dec
sti
ret
test
lea
xchg
xchg
add
lock
mov
test
add
mov
subb
sub
movsb
pushf
sarb
enter
ss
sub
inc
mov
inc
dec
ja
cmp
sub
jmp
lock
jg
das
or
and
push
std
out
dec
leave
call
cmp
cltd
roll
xor
iret
xor
imul
subb
adc
into
fwait
lcall
mov
es
add
mov
rol
sbb
push
pop
out
nop
lods
or
push
pushl
xor
add
sbb
xchg
fs
shl
lds
ud0
and
gs
dec
arpl
cmp
dec
leave
mov
pop
cltd
dec
jb
dec
in
sub
cld
sbb
add
jo
dec
dec
arpl
sbb
shrb
ds
call
and
es
shll
xchg
jae
pop
test
scas
mov
and
sbb
and
mov
imul
add
or
icebp
mov
add
pop
jo
mov
mov
jge
adc
ss
inc
xor
jmp
fcomip
push
jge
in
fisttpl
and
pop
stc
montmul
cmpsb
ret
dec
aad
pop
or
fstl
jmp
jg
add
stc
test
jg
lods
lret
cmp
scas
daa
mov
dec
jns
lods
dec
loopne
sahf
or
das
cli
pushl
inc
movsb
sub
mov
lret
sahf
adcl
push
sti
adc
ljmp
cmpsl
scas
mov
and
pop
test
push
in
xchg
mov
les
mov
cmpsb
shlb
fildll
ds
inc
shrb
jae
cltd
and
mov
insb
pusha
imul
pop
mov
or
incl
es
or
xchg
outsb
push
das
insb
sbb
iret
outsb
sbb
jo
push
call
adc
push
dec
fldcw
xchg
in
push
pop
das
inc
dec
adc
cli
push
mov
incl
mov
push
movsb
sub
flds
push
xchg
out
mov
jae
mov
js
sti
mov
or
jle
mov
test
std
fdiv
rcl
lcall
jge
inc
fdivrl
sbb
out
sub
gs
cli
pushl
add
push
push
scas
or
push
cmp
mov
pushl
outsl
imul
rcll
lods
cli
imul
nop
repz
out
lcall
lds
rep
add
pop
mov
loope
mov
fs
cmp
popa
and
aad
push
movsb
mov
nop
pop
sub
dec
dec
sbb
addr16
push
cmp
add
outsl
cli
dec
mov
mov
stos
jb
and
test
cli
lcall
or
inc
aas
xor
ror
aas
mov
dec
xchg
mov
decl
xor
and
out
es
xchg
xor
ss
inc
mov
cmp
jmp
sub
leave
inc
xchg
in
xchg
loopne
mov
jne
lods
add
stos
push
adcl
pop
dec
sbb
ljmp
dec
lret
ret
sub
inc
mov
adc
fcoml
mov
mov
fidivs
xor
mov
lods
inc
shlb
notb
jb
adc
cld
testl
fiaddl
fdivl
mov
lcall
movsb
fnsaves
loopne
inc
imul
adc
loop
sub
mov
mov
jo
bound
cmpsl
sbb
xchg
aam
inc
je
jns
sub
jne
jecxz
mov
outsl
sbb
outsb
int
decl
lock
dec
jnp
das
scas
inc
sahf
test
sahf
popa
popf
jl
ljmp
repnz
fnstenv
bound
sub
or
adc
out
xchg
jnp
in
outsb
outsl
sub
lods
aad
fcomip
incl
dec
sbb
out
push
fidivrl
cltd
lds
xor
push
xor
sub
jecxz
sbbb
push
and
mov
mov
and
push
mov
xchg
xchg
jmp
mov
cmp
dec
pop
jge
ret
lcall
jl
bound
ljmp
call
jmp
popf
mov
or
adc
jo
jns
outsb
incl
add
jnp
icebp
pop
jg
inc
xchg
loope
jl
add
xor
incl
das
mov
mov
imul
sbb
outsl
or
sub
dec
sub
fistps
call
jmp
cmpb
outsl
push
inc
icebp
imul
jg
lock
or
andb
in
mov
call
dec
fs
pop
mov
call
mov
lea
xor
mulb
arpl
pop
lock
adc
add
cmp
jg
adc
inc
into
out
int3
push
jg
mov
pop
xchg
in
fcoml
cmpb
and
or
test
leave
arpl
xlat
fdiv
icebp
mov
and
lods
es
ror
push
push
mov
pop
mov
incl
dec
push
mov
enter
xlat
push
icebp
repnz
push
sahf
imulb
dec
mov
incl
xchg
jecxz
lahf
fldcw
jecxz
int3
cmp
adc
cld
decl
add
insl
jmp
clc
xor
inc
xchg
jae
les
mov
push
pop
xchg
addr16
push
pusha
mov
loopne
je
aam
jmp
and
aaa
aad
nop
imul
scas
cmp
add
lock
cwtl
daa
pop
push
lods
decl
or
test
aas
xor
mov
push
inc
xchg
stos
sbb
inc
and
mov
dec
test
push
insb
in
pop
jl
xchg
sbb
jecxz
negl
out
xor
fsubrl
xchg
daa
imul
arpl
je
clc
pushl
out
add
cmp
jg
cltd
cmp
fst
jecxz
mov
xchg
cld
ljmp
sbb
pop
jp
fcomip
popa
xlat
dec
fwait
movsb
inc
sub
pop
jmp
in
enter
icebp
incl
inc
add
xchg
test
mov
push
jmp
pop
sti
cmp
sbb
cmp
repz
pusha
mov
mov
or
cmp
fbld
sbb
lret
sbb
sbb
push
mov
mov
orl
xchg
int3
add
scas
fidivrl
lods
shl
mov
sub
mov
mov
out
mov
adc
je
cmp
movsl
push
lcall
insb
dec
push
gs
movsb
push
loope
sub
scas
mov
dec
and
jg
fisubrs
jmp
bound
jl
out
in
out
icebp
sub
imul
jecxz
cmp
incl
push
mov
pop
mov
int3
xchg
pusha
js
cltd
push
aaa
out
push
add
flds
pusha
lcall
insb
outsb
xor
test
xchg
cmc
jae
mov
aam
scas
or
mov
roll
sbb
cmp
dec
mov
ljmp
cmp
adc
rcr
mov
or
sbb
decl
jp
cli
jno
mov
pop
sar
pop
mov
add
sub
inc
nop
xchg
mul
decl
lock
out
dec
cmp
pop
jne
std
sbb
hlt
mov
pushl
inc
ja
aam
add
cltd
leave
fists
or
fs
test
inc
sub
inc
sub
mov
sbb
faddl
pop
lret
xorl
mov
sbb
push
add
push
dec
out
mov
or
adc
pop
pushf
sbb
fistpl
inc
out
loope
cmc
subl
jae
repz
imulb
adc
mov
in
cmp
mov
call
sbb
fisttps
xlat
gs
xchg
xor
push
insl
xchg
call
fs
insl
cmp
adc
jmp
subl
or
std
add
sbb
jb
ss
mov
daa
ret
xchg
dec
mov
fbld
jmp
jg
shl
sahf
lret
pop
mov
test
dec
ljmp
je
jno
stos
or
sti
hlt
ljmp
xor
xor
pop
xchg
cld
ljmp
jl
cmpsb
stos
xor
out
xchg
or
nop
jbe
or
and
fnsave
inc
loope
xor
iret
xor
pushl
mov
mov
inc
push
pop
icebp
xlat
inc
and
xor
inc
incl
mov
out
cmpsl
loope
daa
sub
hlt
push
fwait
divl
xchg
out
mov
mov
mov
mov
push
call
in
popf
popf
push
sub
push
xorl
movsl
xor
stos
loop
cmc
sub
testl
inc
ljmp
rcll
and
fidivs
insb
or
cli
xchg
jg
cmpsb
and
mov
add
pop
cmp
pop
inc
mov
sub
int
cmp
cmc
je
xlat
xor
xor
icebp
dec
jnp
pop
cmp
and
loope
lods
sbb
sbb
jbe
fwait
lds
mov
lea
sbb
push
mov
dec
cmp
add
sbb
scas
or
or
push
clc
loop
cwtl
mov
dec
test
jae
pop
dec
pop
daa
xchg
dec
fistpl
clc
out
arpl
xor
xchg
add
out
mov
push
xor
or
xchg
test
push
push
loopne
lahf
and
pop
addl
add
pushl
cltd
jo
and
mov
shrb
aaa
sub
push
or
jb
imul
lcall
andb
jmp
dec
inc
inc
cmc
cltd
test
int
sti
sbb
std
pop
or
jle
popf
add
cwtl
sbb
outsb
adc
xor
clc
hlt
stos
pushf
out
pop
adc
int3
jno
lds
stos
cmpsl
nop
aaa
popf
cld
dec
sti
jbe
ljmp
clc
mov
lret
inc
roll
xchg
mov
lock
rorl
jmp
sub
adc
bound
mov
xchg
xor
adc
lods
out
jl
push
mov
incl
sub
add
subb
cs
inc
or
rcr
dec
dec
mov
lcall
rorb
push
sub
xor
cmpl
ss
and
movsl
add
jg
add
std
ljmp
and
lods
call
les
scas
dec
ret
fadd
inc
and
jo
jl
add
mov
int
pop
mov
jmp
add
sbb
fstpl
in
stc
mov
mov
loopne
mov
jo
les
mov
sahf
cmpsl
push
xor
out
cltd
test
push
in
movsb
cmp
push
aaa
addl
push
jbe
lock
cld
in
mov
xchg
fimuls
mov
hlt
mov
mov
pop
inc
jp
repnz
pushl
inc
sub
out
jmp
mov
ret
cmc
aaa
loopne
xor
jo
sub
mov
dec
mov
sub
mov
imul
notl
xor
fldcw
dec
fs
call
jbe
xlat
mov
lret
mov
fnstenv
xchg
or
pop
mov
in
test
out
mov
in
cmp
mov
or
incl
mov
jg
mov
int3
mov
mov
lcall
cli
lret
pop
adcb
mov
adc
lods
mov
lods
sbbb
sub
leave
push
outsl
or
mov
stc
in
inc
lahf
es
ret
adc
stc
inc
sbb
popa
sub
daa
pop
cmp
or
ss
popf
lcall
pop
cmc
repz
lret
mov
and
mov
push
test
ret
sar
jg
loope
dec
movsb
ret
fisttps
push
ss
mov
pushf
stos
mov
out
ss
ja
sbb
mov
sbb
shl
jnp
dec
icebp
mov
mov
push
pop
js
mov
sub
pop
mov
inc
mov
mov
int3
dec
loopne
dec
decl
iret
arpl
xor
sarb
xchg
roll
mov
dec
mov
fdivrs
rcll
jb
xchg
rcr
pushf
pushf
pop
fdivrs
or
inc
scas
xor
loopne
push
sahf
sbb
daa
loop
cli
push
mov
lahf
fwait
mov
or
in
push
lret
inc
lahf
dec
in
sar
jmp
xor
in
add
xchg
and
lret
adc
popa
mov
test
pop
inc
sti
mov
out
cli
jmp
mov
xchg
lahf
add
sub
lods
mov
sti
xor
push
call
std
in
bound
cwtl
daa
mov
pop
and
and
push
sbb
inc
pop
loopne
not
mov
call
jnp
push
mov
addr16
aas
jmp
inc
clc
xor
sbb
xchg
call
test
xor
out
mov
mov
xbegin
jmp
shll
fbstp
js
rcrl
loope
testb
mov
movsb
andb
incl
or
int
add
add
and
lcall
jno
push
push
dec
aaa
xchg
mov
inc
xor
adc
fisttps
loopne
ret
out
mov
jno
push
mov
je
sbb
fwait
hlt
decl
adc
ja
lret
push
sahf
mov
jge
call
std
call
fmull
mov
test
call
je
push
or
adc
loop
pushl
lea
sub
ficompl
insb
jle
test
test
mov
mov
mov
shrb
data16
fcomip
push
in
out
add
rcrl
xor
leave
pop
push
out
push
stos
stos
imul
imul
xor
and
popa
dec
jg
jge
aad
js
out
sbb
inc
sahf
jmp
sahf
and
sub
mov
sbb
add
movsl
int
in
xchg
incl
cwtl
negl
pop
ljmp
mov
pop
lcall
fistpll
xchg
inc
mov
ss
popf
in
push
pop
addr16
shll
lock
decl
adc
cs
or
pop
sub
push
cmpsb
insb
jnp
movsb
cmp
jmp
popf
adcb
js
adc
stos
mov
mov
fdivp
andb
lcall
data16
push
enterw
decl
sti
out
mov
mov
aaa
adc
leave
jecxz
sbb
pop
sub
lcall
cltd
push
enter
mov
enter
into
xor
push
jbe
es
adc
ja
cmp
arpl
pop
inc
cli
out
adc
aam
add
xchg
std
ja
inc
add
xor
xchg
in
cmc
push
push
cmpsl
stos
icebp
movb
andl
pop
insb
lret
shll
shll
clc
add
add
jg
je
add
sarb
call
in
decl
mov
aam
rcrb
sub
sub
clc
call
call
mov
xor
pop
shl
nop
push
jecxz
cmc
mov
cmp
cmp
push
scas
sarl
push
shrl
lcall
fdivs
sbb
push
pop
in
cwtl
out
dec
pushl
fcom
lds
es
lret
cld
ja
decb
jb
pop
and
push
xlat
pop
pushf
lds
clc
or
insl
pop
xchg
mov
push
sbb
dec
inc
xchg
in
mov
mov
sar
lock
icebp
fs
inc
icebp
call
push
xor
sbb
pand
pop
hlt
fbld
into
ss
add
stos
dec
aad
push
je
inc
or
data16
incl
addr16
mov
push
test
jbe
mov
int3
movl
incl
in
mov
and
outsb
mov
jne
push
roll
and
jmp
or
ss
pop
mov
xor
cmp
pushf
test
ljmp
addr16
sub
dec
ficoml
cld
jmp
fisubl
aaa
jmp
outsl
adc
ret
jmp
adc
in
loopne
outsb
pop
jp
daa
mov
fistpl
sbb
bound
sub
add
sbb
jo
fs
cwtl
jnp
cmp
dec
jb
mov
popf
fiadds
scas
rcrb
cmpsb
adc
pop
jl
fisttps
js
adc
cmp
inc
lods
jecxz
pop
push
adc
add
jne
test
loope
aas
push
jle
pop
lea
fistpl
loopne
xchg
outsl
sub
dec
xchg
sub
lods
cmp
pop
popa
shlb
push
stos
scas
shll
xchg
jbe
pop
incl
add
jns
or
gs
lea
test
add
es
incl
adcl
ss
pop
insb
incl
push
fisttpll
dec
jp
hlt
push
mov
pop
sub
mov
xchg
jnp
jns
sbb
mov
push
imul
sub
sub
adc
and
jmp
loopne
bnd
test
out
dec
xor
mov
or
mov
fdivrs
pop
ljmp
or
aas
ds
lret
mov
fstpt
aaa
add
xor
cmpsl
mov
sub
jmp
fstl
pusha
dec
mov
mov
or
lock
int3
sub
in
jmp
sbb
xlat
mul
mov
ljmp
daa
fmull
sub
and
pushl
hlt
xchg
in
mov
mov
call
sub
adc
mov
pushl
testl
pop
into
jae
stos
inc
cltd
push
xchg
jmp
add
add
loop
call
das
iret
fnstcw
xchg
nop
ret
cs
sub
sbb
sbb
repnz
ds
call
jecxz
jl
enter
mov
xor
dec
orb
cmp
ljmp
shlb
and
push
push
das
stos
xor
xchg
add
xchg
mov
pusha
xchg
mov
inc
mov
sbb
jmp
stos
fs
mov
sub
subb
les
mov
fstpt
aaa
push
mov
inc
lods
pop
loopne
mov
xchg
rclb
xchg
movb
mov
inc
pop
decl
movsb
adc
lcall
add
dec
or
mov
imul
xchg
adc
leave
push
lods
cltd
mov
incl
into
xor
sub
fidivs
rclw
mov
js
mov
mov
inc
sbb
pop
scas
call
dec
push
jno
push
adc
jge
aas
sub
imul
mov
shll
mov
roll
lods
mov
xchg
add
lock
outsl
mov
mov
push
mov
roll
scas
jl
sahf
leave
jl
push
gs
xor
mov
inc
lret
pop
xor
pushw
leave
add
in
fisubrs
mov
inc
testb
lcall
es
xchg
mov
adc
lock
pop
lock
stc
sahf
fcmovnbe
sbb
pushl
aaa
repz
nop
sub
movsl
jae
and
jmp
shll
add
push
bound
addb
outsb
decl
into
mov
fldl
pushl
jo
push
mov
sarb
int
call
mov
je
mov
test
xor
stos
add
cmpps
cmpsb
call
sahf
popf
insb
das
and
test
xor
mov
es
ds
out
sub
mov
outsl
out
fldt
mov
mov
sti
jnp
or
add
lea
push
fwait
loopne
jns
je
sbb
fiadds
sbb
enter
addr16
jnp
loopne
pop
loop
jg
ss
xorl
pusha
outsb
and
loopne
ljmp
inc
pop
lods
ds
adc
push
mov
push
xchg
push
jg
mov
xchg
stos
clc
cld
mov
arpl
xor
pushl
stc
adc
bound
adcl
inc
test
in
sub
inc
xor
out
insb
imul
dec
pushf
adcb
lahf
xor
rclb
push
inc
das
test
std
addr16
pushl
call
sbb
test
jae
rorl
sub
push
lret
dec
gs
sarb
jl
inc
jo
ret
or
inc
mov
sub
fistpll
pop
popf
mov
insb
cmp
pusha
cmp
jle
jmp
in
add
out
adc
xor
inc
and
sub
mov
mov
jmp
jp
xchg
jecxz
movsl
mov
cmp
cmp
xor
out
pushl
adc
cs
repz
xor
mov
add
pop
movsb
imul
sub
jbe
jmp
cmp
je
notb
in
inc
dec
jecxz
jp
ret
dec
pop
dec
xchg
xor
inc
mov
or
jns
or
mov
out
jg
adc
loop
mov
pop
mov
jmp
and
fucomi
jmp
lcall
out
xchg
in
and
ljmp
data16
filds
add
lock
ljmp
sbb
test
push
push
fstl
ljmp
push
jecxz
popf
das
mov
inc
ljmp
adc
jno
add
add
test
mov
mulb
pop
push
imul
sbb
xchg
ja
dec
pop
scas
and
jbe
movzwl
ret
fistps
jbe
lcall
je
mov
jne
je
xor
fsubrl
lock
insl
adc
loop
lcall
ja
cli
andnps
inc
aad
xchg
aas
add
cmc
and
dec
sbb
push
sti
xchg
fwait
aam
je
mov
dec
loop
mov
mov
decl
insl
dec
mov
pop
sbb
hlt
jno
mov
ret
popa
loop
js
push
pushl
cmp
into
jge
mov
xchg
jne
ror
arpl
movsl
jo
lods
in
add
jmp
pop
stos
add
dec
ret
ss
sub
shl
xchg
imul
outsl
clc
call
push
push
pop
scas
pop
mov
add
in
jae
push
add
pop
push
cmp
mov
mov
cmp
jbe
jmp
rol
and
incl
mov
jnp
test
out
out
adc
lcall
xchg
pop
popl
lcall
mov
mov
push
test
insb
push
jecxz
decl
mov
jle
sahf
stos
dec
int
xchg
or
sub
in
mov
sub
ljmp
add
jmp
mov
aam
dec
mov
dec
movsb
jmp
movsl
lret
outsl
mov
aaa
popa
mov
mov
call
add
push
popa
and
lret
pop
lahf
mov
push
arpl
push
mov
and
gs
mov
sahf
push
mov
xchg
sub
popa
xchg
jle
addb
mov
dec
jmp
push
sahf
in
leave
out
mov
popa
and
cltd
fidivrs
jl
or
std
jp
dec
and
sahf
inc
imul
or
jmp
add
fsubs
xchg
call
imul
cmp
loopne
ljmp
push
xchg
xor
jg
outsb
jge
mov
pop
loopne
push
dec
loop
sbb
imul
lcall
dec
je
scas
and
mov
mov
cltd
lret
in
outsl
dec
add
pushf
int
mov
lcall
add
out
ja
inc
jmp
push
adc
add
cmpl
out
fisttpl
pushf
jmp
cmp
mov
xchg
sbb
pop
xchg
mov
jmp
cmp
bound
mov
and
in
mov
rcl
mov
xor
push
sbb
push
pop
jl
lods
lret
movsb
lock
decl
add
inc
test
data16
stos
inc
fstl
stos
ljmp
and
cmp
sub
repz
cmp
sub
jbe,pt
xor
inc
std
je
pop
sub
cld
decl
jne
enter
xchg
scas
or
push
adc
or
xor
fldcw
aam
push
push
mov
sbb
cmc
and
pop
xchg
inc
test
jbe
push
cmpsl
sarb
cs
mov
adc
sub
pop
in
loopne
and
idiv
push
mov
or
xchg
gs
fcoms
shlb
push
mov
call
cmc
lea
adc
nop
xchg
xchg
mov
jmp
cwtl
lret
push
mov
add
pop
ja
mov
cmp
in
bound
ds
mov
dec
push
dec
jno
jg
cwtl
jns
adc
jg
sub
scas
in
pop
mov
sbb
outsb
js
test
call
aas
test
xchg
mov
xchg
decl
jmp
outsb
adc
and
std
outsb
pop
mov
dec
push
sbb
mov
push
xchg
aam
sahf
punpckldq
int3
ja
enter
mov
lds
ds
pop
cld
repz
rolb
les
xor
adc
mov
clc
je
xchg
in
xor
jl
mov
js
decl
sbbb
dec
add
push
test
add
sbb
subb
or
pop
das
mov
popa
sahf
js
inc
fidivs
sub
push
fidivl
jb
or
lods
lock
minps
call
insl
or
jb
cmp
jmp
dec
inc
sbb
ljmp
stos
sub
lods
jl
fwait
push
push
mov
pusha
sahf
ret
push
jo
enter
loope
call
jmp
int3
into
jmp
ljmp
jge
xor
mov
call
aaa
fistpll
adc
mov
pop
popf
pop
mov
sub
sbb
xchg
push
aam
ljmp
scas
shrb
dec
cmpsb
push
and
test
xor
xchg
arpl
cmp
mov
pop
pop
pop
stc
in
fistpl
shll
mov
lds
lea
mov
mov
sub
inc
ljmp
mov
jg
daa
cmc
sbb
shrb
sbb
xor
mov
fisubl
stc
and
pop
lcall
lea
add
dec
in
mov
fistl
sbb
push
in
mov
addb
sbb
jae
out
push
add
push
sub
xor
int3
in
xlat
xchg
incl
cld
out
push
pop
xchg
inc
cmp
mov
jo
inc
popf
and
inc
jb
sar
push
pop
lods
sarl
push
aam
push
imul
or
or
adc
call
decl
push
cmp
xorb
pop
jg
mov
movzwl
pop
or
ja
sub
decl
pop
loop
jg
popa
push
push
in
jae
jo
push
push
daa
adc
push
into
test
gs
pushl
insl
pop
pop
cld
test
ss
ss
jle
scas
lret
fs
dec
sbb
pushl
dec
pop
popa
aam
add
ret
mov
push
mov
adc
aaa
mov
xadd
cmpsb
cmp
popa
stos
out
xchg
mov
xor
shll
ficoms
pop
imul
call
aas
test
mov
in
push
fisubrl
jae
outsb
fstpt
add
or
jg
dec
dec
adc
idivl
loope
lods
and
outsb
mov
stc
mov
jne
decl
add
jo
sbb
ja
sahf
mov
fistpll
jle
pop
cmp
add
int
jmp
cltd
and
mov
test
cmp
in
outsl
sarb
jno
mov
push
lds
xor
jne
mov
mov
mov
adc
fcomip
pop
and
dec
movsb
rorl
imul
inc
xlat
xlat
imul
adc
pop
ret
loope
mov
lcall
sbb
push
lret
notl
mov
stos
jno
and
stc
repnz
ficomps
decl
sbb
mov
call
sub
loope
xor
and
ljmp
js
ja
xchg
push
mov
push
inc
mov
mov
pop
mov
decl
stos
mov
in
stos
cmp
xor
mov
push
lahf
mov
and
and
cltd
push
sub
incl
js
notb
scas
push
jl
pusha
push
sahf
imul
scas
mov
fildl
icebp
fdivrs
dec
xor
mov
cld
mov
incl
ret
fistl
mov
lea
push
ljmp
push
pop
pop
mov
jmp
sbb
fwait
and
or
push
in
jmp
dec
mov
jnp
pop
mov
aas
and
call
repz
cmp
adc
hlt
mov
hlt
call
xchg
popa
cmp
mov
jg
ljmp
insb
pop
in
jne
sub
fbld
sub
push
jns
out
fistps
pop
jle
decl
popa
data16
outsb
sbb
dec
xor
fsts
dec
pop
xor
cmp
cmpsb
jnp
call
dec
sahf
inc
outsb
idivl
ret
sbb
mulb
ret
inc
nop
stos
test
popl
out
jl
sbb
cs
aas
lcall
sbb
jno
dec
xchg
mov
pop
jg
mov
repnz
and
xor
pusha
mov
jns
sbb
lock
jmp
nop
leave
out
pop
in
push
sbb
jae
mov
dec
stc
mov
mov
fs
jg
test
in
fimuls
mov
cmp
decl
inc
lcall
push
or
jb
in
jno
jmp
es
cmp
mov
sbb
add
mov
or
or
sti
testl
loop
incl
fmuls
mov
sub
pusha
dec
jo
int
pushf
add
ljmp
mov
adc
mov
orl
cs
push
mov
out
test
mov
mov
jge
sub
jmp
insb
inc
cmp
pop
or
inc
inc
jecxz
cmp
xchg
dec
popa
sbb
cmp
mov
outsb
sbb
stos
incl
bound
or
pcmpeqw
mov
gs
decl
push
popa
out
cmpsb
shrl
inc
dec
xor
and
dec
sub
sbb
pop
lock
jg
xchg
and
scas
repnz
push
rolb
dec
cmp
shr
xchg
xor
test
xchg
inc
xor
ljmp
cli
scas
clc
add
loop
mov
xchg
aas
mov
jnp
jmp
mov
push
stos
lods
jg
mov
mov
int3
in
mulb
into
pop
mov
cmpsb
iret
xor
incl
xchg
aaa
jg
icebp
bound
inc
shlb
imulb
ret
mov
ja
inc
lea
inc
fcomi
lahf
mov
pop
sub
mov
rol
inc
fnstsw
mov
mov
pop
ja
cmp
rclb
adc
dec
lods
repnz
mov
sbb
out
jmp
mov
xchg
adc
xchg
cwtl
jmp
sbb
neg
repz
adc
push
sub
jae
xchg
jl
jp
outsl
clc
jmp
jne
jns
rcrl
adc
cmpl
pop
mov
jg
aad
js
call
loope
sub
mov
sbb
cmc
inc
mov
dec
jmp
inc
sbb
push
adc
bound
insb
pop
loop
push
sub
sbb
lcall
sbb
repnz
and
dec
mov
fadds
fcomi
xchg
mov
sbb
call
xlat
cmpsb
sub
xchg
and
stos
sbbb
daa
nop
ret
dec
inc
xchg
dec
jge
and
std
pop
lods
ret
icebp
push
sub
repnz
inc
lret
pop
sbb
inc
mov
mov
das
push
rorb
mov
adc
lock
ss
sbb
dec
test
ss
mov
je
dec
fucomip
adc
lods
lock
push
and
call
insl
mov
inc
jb
pop
or
mov
pushl
push
mov
or
jne
mov
gs
ljmp
add
subl
adc
aam
adcb
or
inc
mov
addr16
shl
fisubl
pop
pusha
adc
pushl
mov
lock
test
mov
xor
test
mov
daa
popf
jne
fbld
mov
lods
repnz
lret
push
mov
lret
push
add
mov
fnstenv
fldl
xchg
sbb
sub
ficomps
mov
jnp
pop
ja
aaa
push
adc
adc
and
mov
inc
mov
lahf
fsubl
pop
push
lods
xor
push
in
clc
mov
push
aad
xchg
adc
jmp
loope
adc
sub
sub
pop
xchg
cmp
call
push
pop
in
out
mov
ss
mov
cmpsl
cld
dec
repnz
mov
js,pn
ficompl
ljmp
jecxz
push
pusha
scas
lret
es
test
cld
paddsb
int
adc
dec
pop
ljmp
les
test
adc
push
jecxz
arpl
xor
or
mov
add
addr16
shlb
sarl
push
iret
out
mov
mov
mov
hlt
mov
mov
rcr
jns
stos
sub
mov
ds
adc
mov
pushf
or
ret
scas
inc
imul
inc
pusha
mov
bound
daa
cmp
adc
rorl
ja
fwait
jg
iret
scas
lea
mov
xchg
xchg
incl
adc
adc
cld
jg
incl
in
aaa
ljmp
dec
stc
repnz
dec
ror
or
lcall
xor
dec
jns
mov
lret
pop
out
aaa
std
fwait
loopne
push
push
ficoms
leave
inc
pop
cmpb
aaa
mov
pushf
mov
lret
dec
jo
pop
push
dec
push
loopne
inc
jg
decl
lahf
push
inc
aam
jno
or
out
xor
pop
lock
js
add
jae
cmp
scas
xlat
cmpl
jne
lret
lock
cwtl
mov
mov
ss
popf
seto
popaw
mov
aas
ds
xor
xchg
ljmp
and
and
out
stos
test
mov
adcl
cmp
mov
sbbl
jge
jbe
add
cmpb
jg
jge
lds
inc
dec
dec
push
fisttpll
sahf
out
jg
pushl
xor
push
fldl
cmp
xor
in
dec
add
cmp
in
pop
aad
and
in
ja
push
rdrand
into
cmp
adc
adc
cmp
decl
or
dec
fwait
scas
pop
mov
aas
jg
sbb
inc
dec
mov
decl
mov
aam
sbb
xchg
repz
das
popf
out
sbb
lcall
pop
cli
and
jge,pn
movsl
rcrb
sbbb
ja
inc
add
es
lcall
int
sub
push
ds
js
cltd
dec
mov
mov
ret
icebp
inc
aad
outsb
dec
jae
out
cmpl
add
sub
pop
pop
not
jg
jl
addb
ljmp
out
cli
incl
outsl
scas
lret
stos
clc
sbb
aas
jmp
jo
out
jl
out
or
cmp
jg
stc
cs
push
jbe
movsb
test
bound
jp,pt
and
sbbl
sbb
ljmp
mov
ss
test
jo
jo
mov
movsb
ljmp
dec
xchg
fisttpl
aaa
cmpsb
push
jmp
insb
jo
inc
mov
test
jge
push
lods
cli
jmp
es
fsubs
mov
scas
pop
dec
je
mov
mov
sti
push
cmp
cmpsl
mov
xor
cmpsb
adcl
decl
mov
test
clc
dec
imul
jbe
les
scas
or
jle
lock
jmp
or
imul
or
repnz
mov
inc
adc
lock
jg
add
fucomi
jl
and
dec
xor
sub
jg
call
arpl
scas
xchg
fstpt
lahf
or
inc
cmp
pop
in
fwait
xor
int
jg
lcall
lds
shlb
loopne
mov
and
pushl
popa
shrl
jo
daa
sub
jne
test
inc
inc
jno
or
hlt
aam
fwait
call
dec
jns,pn
inc
ss
sti
mov
add
xchg
or
cwtl
mov
pushl
lret
xchg
jo
orb
sbb
insl
pop
rcrl
ljmp
cmp
stos
jg
pop
cmc
in
movsb
cmpsb
adc
xchg
inc
and
scas
adc
incl
and
pop
pop
imul
cmp
sbb
jne
xor
stc
aas
dec
insb
jle
sbb
mov
cmpsl
lock
jge
test
fisubrs
cli
lret
xchg
mov
jae
and
push
ret
leave
jge
or
xchg
push
pop
mov
adc
dec
sbb
ret
pushl
fists
cltd
push
mov
shrb
jns
mov
dec
xor
testb
mov
push
out
pop
stos
ret
scas
sub
sub
cmp
repz
jmp
add
decb
leave
mov
mov
fnstenv
in
dec
mov
jecxz
pop
cmpsl
cwtl
ljmp
or
xor
xor
sbb
lds
and
cltd
cld
movsb
movsl
sbb
mov
add
mov
std
ljmp
xor
lock
push
mov
out
ss
in
mov
fcomip
shll
into
push
in
mov
popa
rorb
rcrl
into
or
hlt
loope
jp
lods
mov
loope
adc
or
stos
cli
jne
jb
mov
push
or
cmp
dec
pop
push
iret
push
pop
cmpsb
bound
data16
inc
sub
aam
test
ja
fsubrl
scas
fs
inc
cmp
mov
sub
std
jo
sub
jns
mov
shrb
sub
test
hlt
add
das
lods
dec
incl
roll
inc
cwtl
add
insl
pop
push
dec
mov
sub
je,pn
push
adcl
out
mov
fldcw
or
out
sub
decl
decb
cmp
jnp
ja
pop
cmc
xor
cmc
gs
adc
mov
inc
adc
decl
jne
fsub
sub
xor
out
data16
xor
je
icebp
fstpl
call
lea
xor
mov
xchg
es
faddp
arpl
xor
fs
add
lcall
or
push
mov
fimull
in
sub
inc
add
cld
xchg
pop
adc
xchg
and
fs
or
fnsave
mulb
lods
jno
aas
ljmp
sbb
scas
dec
outsb
mov
ret
push
sbb
inc
pop
mov
ljmp
les
dec
icebp
out
jg,pt
jo
jo
and
scas
cmp
out
adc
pushf
mov
filds
cmp
ljmp
das
sar
xchg
inc
mov
out
pop
testb
sub
mov
decl
iret
or
out
xchg
mov
stc
push
addl
icebp
mov
sub
shrb
mov
jg
cwtl
clc
mov
pop
dec
int
pop
out
dec
jno
push
cs
xlat
jge
xor
xor
fnstenv
stc
cmpb
push
mov
xchg
pop
cmpsb
push
or
jg
scas
cs
stos
or
mov
inc
and
out
fisubl
mov
jne
add
pushl
cmp
and
cmpb
sahf
push
push
enter
push
xchg
cltd
rcl
decl
into
mov
outsb
inc
xchg
push
mov
cmp
jno
pop
lea
adc
lods
incl
dec
aad
les
testb
or
sub
clc
sti
test
sbb
fnstcw
cli
mov
loope
stos
push
shrb
adc
pop
jmp
or
push
pop
adc
sub
pushl
mov
xor
fwait
sti
mov
mov
notb
and
or
mov
mov
insb
aas
sbb
mov
and
pop
xchg
push
int
xchg
mov
lcall
imul
sbb
push
push
cmp
xor
jecxz
repz
push
je
incl
lcall
sbb
inc
mov
mov
fstl
pop
in
mov
test
call
subb
rorl
mov
cmp
adc
add
mov
inc
arpl
lds
int3
stos
cmpsb
or
scas
leave
sbb
pop
add
dec
rep
insl
ljmp
xlat
cmc
add
xchg
das
sbb
push
enter
addl
popf
add
ljmp
inc
jne
ss
lods
les
jecxz
in
mov
mov
cmpsl
out
aad
jg
cld
idiv
scas
jp
imull
push
sbb
lock
inc
add
ficompl
addr16
push
std
clc
adc
pop
loopne
out
jl
lock
push
xorl
jo
ja
cmp
jae
mov
fcmovnb
movsb
popa
mov
mov
jbe
mov
mov
or
fildll
jmp
lret
mov
sub
jne
adc
dec
pop
cmp
call
bnd
mov
les
pop
ficompl
inc
push
mov
test
cmp
jecxz
sbb
sbb
ret
xor
leave
int
subb
mov
int
pushl
and
mov
mov
inc
dec
outsl
pop
mov
adc
xor
pusha
pop
out
out
decl
adc
xchg
mov
icebp
cmpsb
inc
aad
in
mov
mov
push
push
cmp
inc
push
sbb
push
inc
jmp
stc
in
xlat
mov
inc
loopne
loop
addl
int3
js
pop
lods
les
test
out
add
push
and
out
mov
cmp
mov
fisttpll
std
in
pushf
out
inc
mov
mov
mov
incl
sub
sub
cmpsb
movzbl
mov
andl
or
mov
dec
out
clc
jg
ljmp
dec
xor
repz
xchg
mov
and
movb
test
cmpb
push
mov
inc
sub
xchg
pushl
pop
hlt
sub
pop
rclb
pop
dec
es
rcrb
sbb
pop
ljmp
pushl
sbb
mov
mov
in
fwait
int
js
xchg
enter
jmp
repnz
lcall
outsl
lret
int3
pop
aam
out
jnp
mov
test
dec
mov
stos
aas
cmc
cld
lret
or
dec
insl
mov
xor
outsb
fmull
popa
sub
fbstp
arpl
adc
js
cmp
lcall
mov
das
repnz
aam
xchg
dec
loop
mov
lcall
sbb
xor
clc
lds
adc
dec
mov
out
test
mov
ljmp
jg
clc
insl
aaa
frstor
xor
add
push
out
fwait
sub
fcomip
bound
ljmp
stos
pop
or
ljmp
fs
add
xchg
xchg
insl
je
lcall
subl
mov
icebp
cmp
inc
in
jg
jle
test
aad
fsubs
push
les
push
xor
jecxz
jmp
xchg
movsb
movsb
push
xchg
sub
iret
dec
inc
xchg
add
movsl
lds
insb
lea
nop
insb
out
cld
lcall
pop
insb
xor
in
mov
mov
add
xchg
inc
adc
lcall
aad
jg
push
pop
movsb
jg
lcall
loopne
mov
les
mov
lahf
jns
push
lock
sarb
ret
lcall
xchg
pusha
stc
push
mov
adc
jl
push
xor
adc
mov
notb
ljmp
sub
cs
ret
adc
add
cmp
sbb
hlt
or
sbb
shrl
jns
sub
dec
xor
aaa
aas
ljmp
std
or
dec
ss
roll
fsubs
pop
xor
lret
sar
xchg
insb
inc
das
cmp
psadbw
ss
pop
aas
sbb
sar
outsl
pop
cmc
cli
push
pop
int3
daa
out
lret
push
jg
add
es
dec
pop
aas
int
lcall
push
mov
sti
lea
aas
hlt
sbb
pop
daa
push
push
pop
and
test
decl
aam
nop
jge
mov
pushf
pavgb
int3
adc
inc
mov
das
lods
fbstp
push
test
add
push
mov
insb
jl
ljmp
xchg
out
jo
scas
iret
adc
sub
pusha
loop
xchg
push
imul
decl
inc
sub
mov
xor
outsb
mov
jge
xchg
xlat
popf
add
and
ja
iret
imul
dec
push
arpl
movsl
pop
sbb
lea
cli
mov
loope
nop
sbb
fmuls
sbb
call
pop
loopne
addr16
fidivs
xchg
jnp
jbe
mov
lods
inc
call
enter
push
jo
sbb
sbb
inc
loope
sub
push
mov
push
push
int
lock
or
mov
mov
inc
add
jle
mov
push
das
les
mov
in
int3
add
inc
dec
adc
inc
nop
pushl
cmp
mov
mov
jno
mov
jb
push
das
mov
into
pop
fwait
xor
add
adc
ds
mov
xor
addr16
xor
out
aas
xchg
xor
cld
call
gs
xorl
iret
push
dec
sbb
add
push
jmp
mov
out
and
mov
sub
push
pop
testl
scas
adc
loopne
iret
loop
scas
movsb
stos
adc
scas
jnp
out
adc
mov
mov
adc
dec
adc
sbb
mov
push
dec
jbe
jp
jo
es
sahf
cmc
sub
rcrl
je
pop
repz
add
incl
pcmpeqb
test
stc
mov
daa
adc
jne
cmp
cmpsl
jle
idiv
icebp
jg
add
jb
mov
adc
in
lcall
sahf
add
jb
arpl
mov
jecxz
lods
ret
sar
lcall
jo
push
fwait
jno
into
jae,pn
push
or
pminsw
cmpb
cmp
jbe
sub
lcall
mov
jecxz
lea
mov
imul
jg
ljmp
push
cmp
adc
inc
fmul
adc
push
push
xchg
dec
jnp
incl
pop
jmp
loope
scas
sbb
push
outsb
out
sbb
daa
stos
out
inc
insl
js
out
mov
std
cltd
decl
decb
xchg
movsb
lods
sbbl
inc
cld
adcl
mov
and
loope
lret
cmp
insb
add
decl
or
test
push
std
xor
mov
pop
xor
xorb
push
mov
pop
in
xor
popa
nop
dec
sbb
loopne
icebp
je
cmpsb
outsl
sbb
jmp
mov
and
ret
and
mov
sbb
bound
data16
jmp
jne
fbld
mov
loopne
mov
mov
mov
sub
sbb
jmp
in
mov
cmpsl
daa
pop
jbe
xorl
roll
in
shl
clc
sbb
andl
out
mov
inc
pop
mov
pop
pop
dec
int
sub
jmp
mov
out
fwait
loopne
shll
sahf
mov
and
sbb
decl
test
xor
ret
or
jle
and
ds
and
mov
ljmp
into
pop
aad
or
sub
loopne
loope
jle
shlb
push
push
movsl
fwait
sbb
adc
adc
lock
rcr
xchg
fs
inc
sub
fdivs
push
ljmp
add
scas
or
lret
adc
repnz
add
lds
lock
add
int3
gs
push
cmpsl
imul
inc
popa
call
cmpsl
jbe
lods
mov
dec
loopne
lcall
ja
cmp
in
mov
fwait
aam
jnp
xchg
decl
jmp
mov
mov
loop
scas
imul
mov
inc
incb
jne
push
or
sub
std
out
cmp
outsl
in
je
int3
fisubl
mov
jo
pop
ja
and
fcmovnb
adc
mov
ret
jmp
mov
lcall
in
mov
pop
jmp
pop
inc
icebp
mov
or
ja
ds
shll
ds
pop
mov
mov
movsb
iret
pop
jle
xor
xchg
cmpsl
dec
mov
sbb
sbb
mov
push
pushf
pop
je
daa
dec
stc
push
pop
std
mov
inc
mov
rol
xchg
out
mul
xor
int3
stos
pop
push
testl
cmp
out
jne
sub
aaa
in
adc
rorb
jo
dec
jne
incl
dec
in
sbbb
aad
dec
xlat
cwtl
dec
adc
pop
push
push
push
jge
inc
cmp
and
inc
sub
ret
lcall
push
push
cs
mov
jo
cmp
dec
pop
adc
cltd
call
mov
and
push
jae
icebp
xchg
arpl
jp
std
mov
daa
and
pushf
call
cmpb
cltd
arpl
mov
cld
outsl
imul
cmp
sub
cmpb
shlb
or
ljmp
pop
pop
out
mov
jl
dec
in
or
push
pop
movsl
sar
xchg
cmc
fs
lcall
cmp
jge
out
xchg
jle
mov
add
lea
pop
stc
sub
lcall
fs
in
daa
lea
cmp
bswap
mov
in
mov
ljmp
jp
push
xor
fwait
mov
out
fisubrs
adc
lea
mov
and
in
and
cwtl
nop
adc
sbb
pop
dec
push
cmp
jg
jo
lock
fs
xchg
out
in
mov
mov
movb
fwait
in
xchg
cmp
add
mov
cmp
cmp
fcmovu
mov
dec
mov
pushl
ret
loopne
je
fs
dec
lahf
cmp
and
loope
add
aad
xor
stos
mov
jmp
scas
push
xor
sbb
sarl
push
and
cld
negb
lock
in
gs
dec
clc
incl
into
mov
insb
push
mov
mov
sub
jl
ljmp
cmpsb
mov
jle
ljmp
roll
fldcw
dec
xor
add
decl
inc
cltd
js
sti
fsubrs
xchg
cmp
ja
inc
and
or
jg
test
lahf
inc
inc
xchg
xchg
popf
ds
dec
ret
jmp
jns
mov
mov
mov
inc
hlt
adc
cmpsl
aas
xchg
outsl
les
pushl
call
clc
cmp
push
movsb
mov
inc
or
sub
shlb
and
mov
pop
ljmp
push
cmpsl
out
sbb
lahf
stos
and
sarb
int3
repz
addr16
js
sbb
mov
add
push
les
pusha
and
in
xchg
pop
test
or
dec
jns
out
shrl
jmp
ljmp
scas
adc
and
fldl
mov
ja
mov
jmp
fidivl
test
popa
lock
mov
mov
xlat
popf
mov
dec
movsl
addr16
mov
jmp
dec
or
in
int
out
push
enter
jle
dec
xor
xchg
mov
cltd
mov
outsl
call
gs
xor
inc
cmp
cwtl
cwtl
rcll
addr16
jg
mov
loop
push
push
clc
xor
push
sbb
mov
or
int
mov
cmp
in
push
cli
push
push
movsl
inc
xchg
sbb
mov
stos
pop
mov
pop
test
into
mov
push
sbb
cld
ljmp
aas
dec
or
sub
jle
outsb
jno
fs
jecxz
aaa
insb
out
call
call
mov
sarb
cli
cmp
aas
lods
inc
mov
dec
xchg
insb
sub
push
inc
sbb
pop
or
push
test
movsb
xchg
xor
ror
dec
mov
mov
cmp
lcall
cmpsl
int
clc
lcall
dec
arpl
andb
and
xor
add
popa
push
jb
cli
jns
in
sub
jae
xchg
testb
push
xor
pushl
fidivl
mov
push
cmpb
in
mov
scas
arpl
cltd
mov
sahf
mov
jmp
inc
sbb
xchg
push
clc
stc
push
cltd
and
jg
fdivs
ret
ds
ds
mov
aas
add
test
sub
xchg
sarl
inc
xchg
stos
fcmovu
sar
mov
jns
pusha
cmp
mov
xchg
mov
insl
clc
test
push
pop
mov
xor
adc
fmuls
pushl
in
mov
mov
push
sbb
push
fildl
push
jne
sysret
repnz
mov
dec
jmp
dec
movsl
scas
cmp
je
shld
push
int3
fwait
jecxz
lock
push
lcall
aad
sub
call
pop
movsb
outsl
xor
cmc
inc
lds
lahf
mov
lret
divl
insb
jg
cltd
out
daa
push
cltd
ljmp
xor
xor
mov
in
mov
into
xor
push
mov
mov
decl
out
dec
xchg
adc
icebp
out
iret
and
je
lret
dec
mov
outsl
jg
mov
push
out
rorl
dec
in
xchg
cltd
lcall
movsb
fldt
cmp
mov
ja
inc
xchg
push
mov
dec
push
notl
fs
stos
sbb
jle
inc
dec
or
out
int
shll
sub
movsl
arpl
pop
mov
ljmp
lds
iret
mov
repz
adc
leave
movl
decl
dec
imul
add
fadds
icebp
test
dec
push
cld
incl
iret
cmp
adc
leave
inc
test
lock
pop
mov
mov
fwait
stos
cmp
jmp
ds
addr16
imull
mov
or
call
ljmp
mov
mov
jno
and
testl
aas
popf
sub
dec
add
adc
push
sub
int
imul
cli
inc
ffree
xchg
lods
jbe
in
je
mov
movsl
push
movsl
lock
aad
jle
push
xchg
adc
rcrl
pop
mov
sbb
inc
mov
jp
jmp
dec
inc
lds
ficomps
pop
pop
iret
xor
les
movsl
lea
mov
jmp
mov
push
es
fcmovne
and
in
jmp
test
inc
bound
inc
fcoml
popa
aas
jp
fcoml
dec
incl
into
cmp
pop
xor
incl
sbb
dec
out
xchg
inc
pusha
movsl
std
mov
jo
hlt
pop
hlt
dec
adc
mov
inc
lcall
xor
pop
or
loope
jo
aaa
sbb
ljmp
sub
jmp
mov
dec
ficoms
imul
out
adc
xor
loop
call
cmp
inc
insb
mov
mov
inc
stos
jl
popa
adc
pop
loopne
cs
mov
stc
pop
into
in
cmp
call
mov
adc
dec
mov
aaa
add
ret
jl
ret
inc
cmp
push
or
jecxz
dec
nop
mov
scas
or
sbb
incl
arpl
icebp
movsb
push
xchg
fisubrl
fstl
movsb
cmp
jmp
ret
add
leave
pop
in
insl
movsl
mov
fwait
sub
repz
fadds
aad
subb
sbb
and
dec
mov
fnstcw
jno
pushf
out
mov
pop
out
xor
int3
cmp
or
loopne
inc
jg
into
mov
addb
cmp
mov
popf
mov
adc
movsb
push
xor
push
jmp
dec
ret
cli
fmuls
mov
mov
push
adc
mov
jae
outsb
pushf
out
mov
lcall
mov
ret
cmp
jle
ret
aam
rcrl
push
or
xchg
mov
test
inc
jo
sub
sti
mov
decl
adc
add
movsb
sbb
insb
adc
mov
add
in
aam
lret
test
das
sahf
mov
es
imul
test
or
jmp
pushl
cs
lods
lahf
mov
xchg
inc
out
popa
aam
in
ror
pop
cmp
out
sub
lods
mov
add
js
sub
mov
clc
jecxz
jle
jmp
cmpsl
imul
es
stos
push
out
sbb
leave
adc
dec
pushl
mov
push
xor
insb
mov
sbb
mov
ss
sub
dec
stos
inc
push
insl
sub
dec
pop
sarl
ret
repnz
cmp
cli
vunpckhps
sbb
ds
push
loop
and
out
call
and
or
call
pandn
cmpsb
jle
push
xchg
xor
cli
or
sub
mov
jp
pop
sbb
xor
pop
loopne
add
cmpl
mov
adc
in
aas
jne
pop
ret
add
loopne
lcall
retw
gs
ret
push
aad
int
add
ljmp
inc
jecxz
aaa
nop
cmpsb
jb
repnz
or
mov
and
fwait
ret
sbb
test
push
sub
push
data16
xor
hlt
lcall
inc
cmpsb
cmp
hlt
gs
es
mov
push
lds
out
scas
popf
xchg
lret
out
mov
lds
and
or
xchg
dec
sbb
incl
lea
push
xchg
mov
stc
jne
inc
ja
and
pop
inc
pop
push
jg
aad
clc
cmpsl
stos
push
or
ror
or
jge
mov
or
pop
fwait
push
mov
push
xor
jmp
dec
lods
mov
or
ret
in
jae
out
or
les
lcall
movsl
add
cmp
sti
xor
fisubl
mov
addr16
push
xor
and
mov
lcall
mov
add
adcl
andb
pusha
jge
ret
inc
mov
cmp
mov
icebp
mov
iret
add
dec
jbe
push
out
bound
inc
mov
negl
cmpsb
jns
jle
jmp
fcomip
mov
gs
adc
dec
ret
pop
ret
ja
nop
dec
jge
in
xchg
mov
pushl
int3
fdivl
mov
push
test
push
pop
jecxz
lods
jecxz
nop
xor
jecxz
cmp
incl
xlat
pop
or
popa
add
and
sub
outsl
sub
ja
incl
ret
pop
dec
ds
ss
cli
or
movsb
inc
pushf
and
aas
lock
sub
xchg
sub
dec
inc
lcall
fdivrl
jmp
ljmp
pop
leave
pusha
outsl
xor
mov
lcall
call
push
lods
or
sbb
lret
xor
push
and
ficomps
mov
lcall
adc
pop
rcrb
mov
xchg
iret
pop
or
rolb
push
sbb
mov
test
xchg
ljmp
outsl
stos
sub
fisubs
xlat
in
xchg
enter
cwtl
in
insb
jb
xchg
shrb
xchg
insl
cmp
sub
incl
enter
data16
vmread
ljmp
insl
ja
xor
and
mov
sbb
js
inc
gs
out
outsb
jg
sub
incl
pop
inc
andl
sub
daa
push
jne
xchg
out
sti
adc
pushf
jbe
pop
decl
cmp
mov
push
jge
sarl
mov
into
lods
xchg
mov
lods
je
cmpsb
lcall
jp
fsubrs
xlat
mov
mov
movsb
in
and
pushf
mov
mov
lahf
inc
jl
packuswb
mov
in
dec
xor
sub
mov
push
pop
imul
mov
arpl
xorl
mov
lock
stos
mov
and
push
push
push
cli
out
jecxz
xlat
mov
fnsave
push
pop
loopne
ficomps
addr16
sub
jmp
fistps
jbe
sbb
clc
shl
or
test
fists
imul
xor
cmp
lcall
repz
dec
addl
or
sbb
ljmp
lcall
lds
je
leave
xchg
add
sub
sbb
js
mov
pop
test
mov
sbb
lret
test
aas
mov
jle
cmc
out
adc
nop
xlat
pusha
mov
int3
mov
adc
cmp
loopne
scas
sub
hlt
sub
aas
ja
add
incl
xchg
push
xchg
dec
orl
jo
pop
or
fsubrl
cmp
ljmp
aaa
rorl
cmc
outsl
inc
dec
and
pusha
push
ja
inc
jp
sbb
imul
ljmp
int3
jmp
cmp
inc
cmp
in
jg
stos
push
lock
sub
mov
push
cmp
lahf
mov
aam
call
gs
jmp
jns
cmp
in
shlb
stc
decl
xlat
shl
rclb
mov
pop
stc
sar
incl
daa
popa
xor
fiadds
sub
stos
icebp
dec
repnz
loopne
dec
mov
shlb
hlt
mov
xchg
dec
xchg
mov
clc
fcomip
nop
imul
imul
decl
cmp
jle
jno
pop
dec
mov
jb
loopne
push
mov
mov
jmp
sub
jne
sub
dec
in
test
fidivrs
cwtl
test
add
imulb
jbe
push
sub
jp
jbe
sbb
mov
in
jmp
add
and
mov
out
clc
sub
jae
scas
or
mov
ljmp
cmpsb
data16
popf
add
inc
cmpsb
or
test
jo
call
mov
mov
das
int
dec
in
sbb
loopne
iret
insl
divl
les
cld
mov
imul
sbbl
mov
decl
dec
xlat
mov
jg
mov
insb
cmp
lret
mov
xchg
add
ljmp
pushl
popa
jecxz
loop
shrl
add
outsb
loope
mov
je
andb
arpl
pop
aas
mov
mov
jno
or
mov
push
enter
je
incl
cmp
jbe
fwait
pushf
xchg
lcall
pushl
fsubl
and
lcall
mov
shll
mov
or
rorb
call
lcall
sbb
popa
stc
ret
inc
mov
add
mov
xor
jmp
mov
mov
pop
mov
push
stc
xchg
ljmp
xor
add
pop
dec
cmp
mov
mov
cwtl
popl
lcall
inc
mov
pop
jle
in
sahf
push
xchg
adc
lods
ja
cwtl
push
mov
jg
lcall
dec
aas
cmp
daa
pop
inc
pop
sub
insb
test
divb
xchg
or
sub
or
cld
out
lahf
clc
inc
push
cld
add
sub
icebp
jge
je
cmc
inc
call
or
and
xchg
cmp
ss
nop
dec
sbb
push
cmp
sbb
ljmp
inc
mov
xor
xchg
and
pop
inc
aaa
xchg
mov
xchg
fldcw
sub
hlt
add
ljmp
mov
jg
or
fisubl
in
lret
adc
mov
fnsave
in
lea
adcl
stos
pusha
scas
dec
lret
mov
movsl
fs
pop
shlb
xor
dec
xchg
inc
je
test
sti
faddl
or
fisubrl
mov
imul
cmp
pop
cld
pop
loopne
xchg
push
notl
dec
dec
sub
jmp
or
test
pop
jno
rcl
mov
arpl
rclb
inc
lds
pop
jg
dec
arpl
mov
and
lock
out
int
mov
lcall
xchg
rorb
cmp
mov
adc
bts
leave
icebp
out
and
cmp
jbe
mov
dec
inc
lcall
sbb
stos
jge
xchg
nop
mov
lods
das
cli
ljmp
mov
or
jle
cli
aam
inc
sub
jbe
jg
decl
jae
test
loopne
xor
rorb
or
fcmove
addl
push
lahf
sub
lods
fistl
lds
or
jbe
repnz
call
cltd
aaa
xchg
xchg
and
int
cwtl
cmp
sub
sbb
daa
cmc
rcrb
das
sub
pop
dec
xchg
aas
pop
imul
cmp
out
dec
cmp
fwait
ljmp
inc
std
or
jl
cmpsl
push
mov
jnp
test
xor
add
int3
push
mov
test
popf
repz
out
jmp
hlt
sub
scas
cmp
xchg
xchg
shll
dec
push
test
pop
cmpsb
aaa
dec
mov
loope
pop
lcall
mov
dec
add
push
bound
mov
stos
test
xchg
cmp
or
cli
aaa
xor
inc
mov
inc
jno
bound
ljmp
xchg
aaa
mov
fs
push
mov
mov
data16
lcall
adc
mov
adc
loop
dec
adc
data16
add
mov
add
ljmp
cmc
and
cmp
call
push
push
mov
movsl
mov
jge
in
add
lret
sbb
dec
mov
das
mov
call
dec
pop
scas
sbbb
and
cmpsl
lcall
in
out
ss
aad
daa
out
jg
mov
cltd
mov
mov
push
leave
ljmp
outsb
movsb
ss
bnd
push
push
pop
lret
int3
data16
imul
mov
test
lret
ret
pushw
push
mov
fs
mov
and
push
testb
cmpsb
call
bound
aad
in
jmp
test
test
mov
bound
push
popf
pop
sar
jg
inc
imulb
out
or
mov
add
mov
jg
or
inc
sub
pusha
lods
stos
fsubs
dec
sar
jp
cmp
mov
icebp
xchg
imul
mov
fprem
call
clc
push
sub
add
aaa
add
pushl
mov
sub
gs
dec
scas
into
pusha
cmp
es
mov
insb
cmpsb
xchg
orl
es
mov
addr16
fsubrl
dec
scas
mov
xor
xlat
int3
mov
int3
ud0
call
inc
stc
sub
xchg
jnp
push
pop
mov
mov
mov
sbb
cmp
jg
lcall
data16
cmp
mov
and
mov
jmp
stc
mov
aad
cmp
shll
lcall
inc
rorb
mov
mov
mov
xlat
push
mov
iret
push
gs
pusha
mov
imull
movl
in
mov
mov
je
xchg
scas
adc
iret
xchg
loopne
dec
sub
call
xor
and
fmull
in
int3
and
in
adc
call
in
ljmp
and
xchg
int
sub
jecxz
push
lahf
insb
sbb
adc
add
outsb
sub
fadds
repnz
jbe
add
lcall
sbb
adc
dec
out
xchg
js
mov
push
and
mov
xchg
sub
roll
std
shlb
pop
insb
jge
cmpsb
mov
lods
mov
shrl
xor
fimuls
loope
in
stos
cld
mov
inc
imulb
rcr
mov
lret
mov
ljmp
test
lret
ljmp
int3
or
sbb
and
push
je
add
xor
ds
hlt
push
mov
ficompl
fstl
xchg
sbb
lret
pop
add
ds
sahf
jle
jp
push
in
repz
pushl
pop
ficoml
mov
popf
inc
aaa
adc
out
adc
daa
out
cmpsl
adc
int3
mov
dec
mov
jb
repz
push
cmp
push
adc
xchg
jecxz
inc
ror
je
inc
mov
cld
jg
push
stos
addr16
cmpl
inc
fiadds
pushf
test
mov
rcr
jns
pop
test
ds
mov
ljmp
lcall
sbb
sub
jg
imul
and
xchg
out
xchg
out
jg
incl
jl
push
xchg
repnz
and
pop
sbb
sub
call
jle
xchg
in
xor
stos
xor
xchg
push
pop
mov
cmp
push
nop
fnstenv
leave
sarl
pushl
push
loop
pop
add
cwtl
or
mov
adc
xchg
and
adc
fwait
inc
lcall
jecxz
mov
out
jmp
inc
mov
push
test
mov
mov
xchg
out
and
mov
push
mov
cmp
lret
bound
mov
jmp
test
add
lcall
xor
and
add
mov
sbb
pop
jmp
into
andl
ja
lods
mov
call
pop
je
loop
inc
lds
ljmp
or
mov
jp
jmp
ljmp
add
repnz
nop
rcrl
shl
insl
mov
imul
xchg
icebp
lcall
cld
pushf
mov
sub
shrb
push
in
or
clc
inc
inc
pop
adc
push
push
push
sub
je
out
xor
nop
out
and
int3
aaa
jmp
hlt
cmp
pop
shll
cwtl
pop
inc
fildll
mov
inc
pop
inc
and
pop
inc
into
cltd
call
jbe
sbbl
or
sti
mov
pop
jnp
dec
cwtl
bound
sub
lds
mov
mov
decl
aam
cmp
loope
mov
es
cmp
lcall
out
pushl
cmp
stos
xlat
cmpl
shr
ja
push
int
add
adc
out
push
jnp
enter
pop
shl
mov
inc
addl
test
push
mov
push
fcomip
dec
xlat
int
push
imul
adc
sub
loope
xchg
xor
mov
out
cli
jmp
cltd
push
pavgb
das
add
pushf
pop
jg
lret
nop
jne
dec
jp
decl
sub
inc
gs
add
ja
fildll
nop
jg
pushl
adc
lock
mov
cmc
xchg
test
sub
lret
xor
xlat
pushf
inc
movsb
push
pop
mov
mov
shld
ja
mov
or
mov
mov
dec
push
lock
cmp
push
js
shl
or
nop
jge
stos
sbb
in
and
cmp
mov
decl
mov
mov
add
cmp
and
adc
push
cmp
mov
sub
inc
cld
pop
shlb
mov
or
cmpsl
xchg
mov
xor
cmp
cld
pushl
addl
mov
xor
inc
into
call
mov
pop
jg
pusha
dec
mov
loopne
lahf
jbe
popf
or
shlb
push
inc
inc
jno
ljmp
adc
cmpsb
jg
in
iret
cld
scas
nop
push
inc
jge
aaa
or
mov
popa
out
jmp
dec
adc
arpl
or
and
mov
mov
sbb
pop
leave
sub
inc
bnd
dec
in
xor
stos
sbb
ljmp
outsb
popa
jae
mov
popf
sbb
mov
lcall
pop
in
int3
cmc
fwait
aad
mov
aad
cmpsb
mov
add
pop
jg
movsb
pop
jl
enter
insb
mov
mov
int3
arpl
call
jecxz
jp
dec
pop
iret
cmpsb
sti
jp
xchg
jne
rorb
mov
das
clc
jmp
mov
out
imul
xchg
aas
add
bound
les
xlat
mov
sbb
mov
jmp
mov
fldenv
cli
mov
or
inc
and
ds
cmpsl
enter
lcall
and
cmp
nop
sub
movsb
imul
pushl
cld
mov
sub
push
and
pop
hlt
orb
mov
fdivl
push
push
jo
and
out
leave
ljmp
xor
push
mov
ljmp
call
iret
xor
scas
into
inc
rcrb
jmp
orb
ret
jns
inc
add
mov
pop
lret
sahf
scas
mov
sbb
fs
jg
and
push
ja
adc
lret
cli
inc
xor
fwait
xor
icebp
jno
out
aad
movsl
or
sbb
pusha
call
cmpxchg
loope
loopne
jmp
jecxz
jmp
fisubs
sahf
out
dec
mov
fnstsw
movsb
decl
cmp
movsl
icebp
je
cmp
roll
sub
leave
mov
add
test
push
and
out
shrb
movsb
push
lahf
jno
int
nop
jns
inc
insb
or
jb
jnp
jg
pushl
xchg
mov
cmp
or
mov
inc
call
add
incl
cld
lahf
rol
repz
xchg
xorl
scas
push
dec
sbb
out
jle
xchg
clc
incl
or
cmp
or
xlat
mov
cmp
jae
pop
ljmp
push
leave
cltd
inc
push
les
les
loopne
addr16
xchg
pushl
pushl
shlb
add
outsl
fsts
leave
loop
loopne
call
sub
icebp
in
xor
shlb
imul
pop
cwtl
xchg
cmpsl
js
ljmp
and
insb
dec
popa
mov
jle
dec
ljmp
ret
out
sarb
int
ret
sub
dec
stos
inc
jl
pop
inc
or
xor
lock
scas
inc
push
and
add
lcall
adc
adc
sbb
decl
cmp
out
outsb
cmp
fsubl
lahf
sub
movsb
xchg
loope
sahf
jmp
decl
xor
and
mov
rcll
arpl
popf
mov
out
adc
mov
leave
das
cmp
jnp
jno
sahf
inc
sub
ja
shll
sbb
arpl
jmp
rolb
cmpsb
mov
sbb
or
cmp
add
push
out
push
incl
mov
shl
loopne
aad
xorb
mov
outsb
jecxz
adc
push
xlat
call
sub
cmpsb
xor
push
lret
arpl
adc
inc
cmpsb
mov
faddp
lods
and
mov
pusha
push
lcall
test
and
dec
xchg
js
imul
sbb
push
xor
and
shr
jg
mov
aad
insb
pusha
mov
and
sbbb
adcl
sbbb
cmp
push
mov
ljmp
adc
dec
icebp
std
adc
sbb
sub
jmp
push
das
cltd
stos
or
mov
imul
mov
inc
outsl
or
stos
rolb
adc
mov
test
call
loopne
jb
xrelease
mov
leave
pop
adc
jb
fcomip
incl
icebp
fidivrs
push
adc
or
dec
sub
sbb
flds
sarl
ds
cli
push
jecxz
movsb
xchg
and
mov
lock
cmpsb
test
popf
ds
les
xor
xor
cmp
lahf
lock
call
mov
mov
mov
sbb
xchg
cltd
enter
incl
cmp
in
inc
mov
icebp
clc
insb
jo
xor
push
cld
push
pop
popf
xchg
pop
fildl
pop
add
and
adc
and
arpl
scas
sti
jmp
xor
jg
pop
sbb
sub
aaa
inc
add
push
fdivr
incl
and
xchg
mov
jmp
lds
dec
mov
push
test
sub
lcall
mov
pop
mov
cmp
loopne
jb
fbld
jg
xchg
jb
in
in
lds
incl
and
adc
push
xchg
xchg
fisttpl
scas
xchg
xor
fcomps
add
xlat
xchg
cmp
jmp
rorl
scas
lock
imul
add
mov
imulb
adc
pop
xor
nop
mov
ljmp
inc
pop
cs
testb
cmp
inc
ret
dec
mov
cli
stos
out
test
je
mov
mov
cmp
push
push
sub
cmp
pop
dec
jg
inc
cwtl
adc
cwtl
pop
mov
jb
xor
mov
xchg
movsb
inc
sbb
jmp
mov
aam
dec
dec
xor
fiaddl
mov
mov
xchg
xor
jg
cmp
push
mov
inc
cmp
cmp
fisttps
lret
or
adcl
xchg
sub
xchg
jnp
pushl
push
mov
xchg
adc
xchg
stos
gs
pop
lods
lock
in
aam
in
mov
pusha
mov
dec
sub
xchg
adcl
ret
xchg
mov
lods
aam
adc
ljmp
xlat
mov
mov
adc
add
lock
or
push
pop
mov
repz
decl
mov
bound
jbe
dec
daa
enter
push
mov
pop
jno
push
add
mov
decl
lock
mov
rcll
repnz
decl
dec
imul
incl
ss
xor
in
fwait
test
jle
cmp
push
fdivr
cmp
sub
jbe
int3
icebp
cmp
add
dec
lret
mov
fiadds
loopne
lret
jle
scas
sub
movsl
outsl
lcall
xchg
dec
shrl
jbe
aaa
clc
jge
insl
daa
mov
adc
push
cwtl
les
lahf
xchg
in
adc
mov
mov
fcomip
push
push
xchg
mov
imul
loop
cli
outsb
pop
push
adc
xchg
aad
decl
sub
adcl
cmp
inc
dec
lcall
xchg
dec
mov
loope
push
adc
pop
imul
cld
adc
mov
cltd
ss
lcall
sbb
pop
jmp
push
ljmp
xchg
mov
mov
scas
clc
ljmp
push
lcall
idiv
jle
mov
mov
aam
jno
mov
les
pop
adc
addb
call
punpckhdq
cmp
ja
sahf
add
fmull
in
xlat
ficoms
add
inc
clc
pushl
js
xchg
adc
addr16
push
incl
lret
xchg
add
test
scas
push
mov
mov
mov
cmp
cmp
jno
sub
lcall
and
push
addl
xchg
movsb
xchg
cmpsl
pop
cmp
cwtl
int3
fnstenv
lret
cli
cmpl
jb
push
stc
fsubs
lock
inc
ja
or
repz
ds
inc
imul
jg
int
fnstenv
mov
dec
or
jg
ret
out
adc
cmp
ljmp
add
or
push
std
pop
mov
aad
inc
cld
sub
lret
fbld
xchg
leave
lods
dec
stos
pushl
cld
lods
cmovae
add
pop
in
xor
inc
lods
mov
in
outsl
xlat
test
jge
popa
fcoml
lods
mov
jnp
fcmovbe
xor
adc
dec
cmp
cmp
int3
mov
jle
jg
aaa
std
mov
imul
mov
mov
decl
fs
stc
push
sbb
ret
in
gs
out
es
mov
pop
sub
and
mov
mov
dec
fnstenv
sub
stos
adc
leave
call
repnz
jg
ljmp
lock
rcrl
jo
loop
imul
fld
sbb
aas
sbb
mov
fdivrl
sbb
xor
fistpl
and
jne
int
inc
jp
popl
mov
dec
outsb
or
fwait
add
inc
dec
cld
pop
xchg
call
popf
jg
mov
pushf
or
fildll
aas
call
loopne
loopne
cwtd
ud0
pushl
insb
je
icebp
stos
or
sbb
lcall
push
out
jmp
mov
xor
push
sub
mov
mov
add
in
jle
pop
adcb
cmpsb
push
jmp
mov
scas
add
hlt
cmc
les
mov
jnp
cmp
andb
xor
add
lret
mov
test
cwtl
adc
mov
push
lret
call
neg
test
mov
adc
testb
jne
test
sti
out
lcall
jmp
ljmp
jl
repnz
shl
jno
in
and
div
aaa
outsl
mov
lcall
inc
pop
cmpsb
aas
push
frstor
repz
icebp
pop
add
ss
loope
cli
fstp
and
imul
xchg
call
pop
decl
cmpsb
daa
lcall
xor
aad
add
inc
scas
adc
xor
incl
inc
mov
clc
stc
fnstcw
add
das
mov
pusha
mov
push
loopne
push
xor
std
xor
les
testl
dec
mov
push
fs
push
call
and
pop
fimuls
jnp
rcll
inc
push
addr16
adc
call
test
mov
sar
sar
jp
add
inc
or
mov
sbb
movb
lcall
lcall
clc
mov
jmp
mov
push
std
pop
cmc
pop
lcall
outsb
lret
add
js
loopne
and
iret
cs
pusha
dec
xchg
decb
add
decl
int3
adc
push
bound
fcmovnu
or
jg
sti
fsubrs
clc
mov
rcr
andb
cmpsl
pop
sti
mov
jmp
test
cwtl
inc
call
jb
hlt
test
mov
ljmp
jmp
xchg
out
divb
fs
cli
stc
ljmp
cmp
jmp
cmpsl
outsb
adc
loop
aas
hlt
jbe
shll
icebp
in
pop
ss
incl
mov
ja
xchg
int3
fidivs
in
inc
xchg
inc
mov
cltd
lret
pushl
push
stos
dec
scas
popa
fists
and
popa
push
pop
and
and
push
or
movsbl
adc
or
insb
dec
mov
jne
xor
out
scas
stos
inc
xchg
test
std
mov
mov
cmp
outsl
pop
div
jg
lahf
test
mov
push
sti
sarb
sub
mov
fistps
adc
jb
outsl
mov
movsl
adc
push
aas
xchg
sbb
mov
jbe
icebp
test
mov
sub
int
push
sahf
decl
loopne
cmp
mov
lret
fsubrp
pusha
xchg
movsl
iret
xchg
mov
xor
inc
js
jns
in
mov
out
cmpsl
xor
int3
mov
in
ljmp
pop
jl
or
push
sub
pop
xor
cmp
mov
out
aaa
adc
filds
mov
mov
jne
gs
jg
cmp
and
pop
pusha
fistl
aaa
imul
repnz
call
insl
and
cmpsl
and
mov
mov
push
inc
sbb
xor
sbb
pusha
dec
nop
cmpb
lods
iret
xor
fwait
loope
sub
sub
jo
jle
enter
sub
mov
stc
jmp
sub
inc
in
cmp
xchg
mov
fdivrs
sub
es
lcall
arpl
out
aad
mov
in
adc
hlt
popf
ret
out
fcompl
pushl
subl
adc
scas
add
or
mov
imul
in
mov
stc
jp
mov
lcall
pop
cmp
loop
push
xor
jp
fs
test
cltd
inc
loop
dec
sbb
cmpl
js
jmp
lcall
insb
jmp
les
or
mov
lret
jle
adc
or
or
imulb
mov
inc
sbb
pushl
jle
mov
adc
shll
sti
out
inc
or
mov
adc
scas
or
call
aaa
jp
adc
push
stc
fists
or
fs
add
cwtl
cwtl
inc
sub
pop
ja
call
lea
lods
push
push
loope
xchg
jo
jmp
and
fdivr
call
xlat
in
push
adc
aaa
pusha
js
sti
in
sub
ds
rcrb
out
add
pushl
inc
xchg
adcb
lock
aaa
push
insb
lock
popf
sub
mov
test
mov
test
xor
adc
icebp
sub
xchg
fisttpl
cltd
andb
mov
xchg
cs
mov
mov
mov
mulb
outsl
add
xchg
inc
aaa
lea
loope
sub
adc
rorb
imul
fcmovnu
push
mov
ret
ljmp
ljmp
adc
xchg
or
incl
in
cwtl
add
sar
add
mov
mov
shrb
push
cmp
pop
xor
sub
stc
pop
clc
and
outsl
lods
bound
mov
push
sub
or
push
jbe
mov
sarl
sub
xlat
cmpsb
cmp
shrb
mov
clc
mov
lcall
jno
jge
dec
pop
and
jmp
sbb
call
jb
int
out
add
jb
add
outsl
lea
jno
subl
adc
mov
add
inc
cmp
clc
fadd
dec
lds
mov
cmc
mov
mov
cmc
cld
ljmp
lods
movsl
adc
clc
push
repz
pop
out
inc
hlt
enter
pop
cld
mov
cld
call
sahf
scas
push
add
adc
inc
dec
negb
xor
test
std
test
mov
cld
inc
pushf
mov
sbb
mov
imul
pushl
stc
rcrb
outsb
cmpb
syscall
and
mov
loop
in
add
call
jno
test
loop
dec
jns
add
sbb
and
outsb
cmp
outsl
adc
sub
pop
adc
lds
sbb
decl
js
add
ljmp
jg
mov
stos
out
inc
popf
cmp
enter
fidivs
xchg
jmp
jne
out
loope
out
addr16
push
insl
in
daa
pusha
scas
push
shll
ljmp
jp
or
mov
sbb
sbb
mov
push
lcall
sub
testb
stos
mov
aas
sub
call
call
pop
mov
divl
or
adc
add
sbb
xor
pop
fstl
push
cld
fimuls
mov
hlt
lahf
xchg
cwtl
repnz
je
jns
decl
test
jecxz
add
addr16
movsl
dec
loop
stos
cmp
sar
cmp
inc
fcoml
sarb
mov
int
cli
adc
push
pop
cmpsl
jnp
icebp
pushf
sti
jg
call
repnz
lock
bound
ljmp
arpl
mov
mov
aas
cmp
add
in
jle
loop
sbb
ljmp
jg
lcall
push
add
push
ret
outsb
jp
fcomi
ja
mov
incl
in
pop
push
mov
lock
inc
cli
dec
jbe
sbb
lds
aaa
mov
icebp
fbld
imul
sahf
jno
lea
popf
push
or
call
aam
push
movsl
mov
push
in
cmp
add
or
push
mov
cmp
pop
sbb
incl
adc
mov
lds
pop
bound
loop
lret
jecxz
ja
enter
adc
pop
sbb
cmp
movsl
push
cmpsb
adc
rcll
and
sti
arpl
ljmp
pop
push
ljmp
and
jge
fisubrl
xor
inc
mov
jo
push
repnz
mov
pop
mov
incl
lcall
and
enter
shr
out
lods
loop
sub
filds
and
les
push
sub
push
sub
in
cmp
ljmp
testl
pop
enter
into
and
lcall
jbe
mov
rclb
or
inc
ficomps
and
rorl
push
stc
sub
mov
aaa
jmp
xlat
lcall
push
movsb
lret
cli
ljmp
sbb
sub
add
sbb
cmpsb
pop
adc
push
push
cmpsb
loop
in
jl
incl
jle
ds
sbb
xor
adc
xchg
xor
lret
popf
jae
add
pop
dec
push
add
ljmp
rcll
ljmp
test
stos
dec
adc
or
outsl
shrb
pushl
adc
cmp
pop
mov
nop
jns
scas
stc
inc
cmp
pushl
adc
stc
stos
imul
add
ret
adc
xor
aas
push
jne
into
mov
lcall
jmp
jns
cmp
adc
add
mov
shl
add
push
ret
jecxz
inc
add
add
sub
iret
aaa
pop
lret
fadd
sbbl
push
setno
xchg
inc
pushl
mov
dec
das
pop
and
sti
sbb
add
xchg
push
mov
cmpsb
lcall
xchg
test
ja
daa
test
sbb
in
push
mov
push
ja
fsubr
ljmp
push
icebp
leave
add
into
adc
dec
cmp
jno
arpl
iret
inc
xor
xchg
cmp
popa
call
dec
lods
mov
mov
subl
aad
fdivl
lock
orl
cmp
or
test
divb
decl
outsl
js
lcall
mov
mov
int3
pop
test
jle
call
jmp
adc
gs
fwait
shll
cld
ljmp
cmc
outsl
xor
pop
cwtl
mov
cltd
sub
imul
fildl
jecxz
or
xchg
pusha
push
xor
push
es
lds
or
sub
incl
jno
or
pop
mov
repz
cmp
cmpsb
stc
jle
sahf
imul
rcl
jg
hlt
cmp
iret
sbb
adc
loopne
sbb
add
insl
jae
sub
dec
mov
lcall
std
xor
dec
out
loopne
test
mov
icebp
int
jb
xor
dec
les
adc
xchg
call
cmp
xor
jno
pop
sbb
mov
adc
shlb
xchg
mov
cld
jmp
add
lea
mov
daa
jp
push
push
pop
xchg
add
call
icebp
add
call
xchg
adc
xor
cltd
popf
pop
fsub
lock
lods
push
sbb
mov
xchg
les
adc
incl
lret
bound
sti
out
xor
jae
fwait
outsb
out
jge
jl
incl
leave
xor
push
dec
mov
push
dec
dec
sub
clc
push
xlat
pushl
icebp
dec
into
popa
imul
xchg
adc
pop
jne
push
daa
and
loope
ljmp
pop
clc
test
add
inc
lret
fs
push
xor
mov
pop
jle
dec
push
pop
dec
xchg
je
ret
push
jmp
xchg
cmp
jg
inc
out
push
pop
inc
jmp
add
cld
scas
aam
jecxz
ds
push
and
dec
movsb
add
push
pushl
mov
fadds
lock
mov
push
fdivr
incl
mov
sbb
push
mov
pop
dec
pop
lea
add
addl
fcomip
xor
mov
lock
push
push
xchg
fcomi
adc
sahf
popf
das
subl
jmp
lock
jge
bound
popf
cwtl
nop
std
mov
cli
dec
test
rcll
decl
orb
ret
adc
shll
fwait
inc
pop
fcmovnu
dec
imul
lret
cltd
adc
fwait
ret
in
in
pop
jecxz
cmp
in
mov
xor
lcall
jnp
cltd
cld
ja
je
mov
xor
inc
fldln2
adc
push
jns
clc
mov
push
dec
sub
mov
es
int
gs
dec
sbb
or
push
ds
sbb
jle
test
jge
mov
cmp
scas
clc
fsubrl
mov
out
divl
adc
clc
adc
inc
inc
mov
push
jg
lcall
aam
jecxz
pop
or
xor
popa
inc
pop
push
mov
mov
jmp
loop
test
stc
push
and
and
aaa
xchg
sbb
jg
sar
add
ljmp
inc
or
dec
cld
roll
adc
enter
xor
clts
sarb
stos
sbb
in
xchg
insl
inc
pusha
xchg
jmp
mov
scas
ljmp
rclb
or
xchg
ja
pop
dec
cmc
pop
dec
inc
jp
and
sar
call
insb
loopne
sbb
enter
scas
pop
cs
pop
cld
mov
iret
mov
push
sar
fiadds
mov
push
mov
inc
and
mov
inc
gs
inc
xchg
jg
lahf
xchg
mov
orb
inc
fstpt
sub
dec
jae
sahf
sarb
dec
gs
popf
into
jp
mov
call
movsb
inc
arpl
cmp
mov
in
loopne
icebp
mov
jp
mov
dec
inc
sbb
mov
lret
pop
mov
sbb
sub
sbb
ficomps
inc
in
cmp
mov
mov
push
inc
repz
ds
ret
push
add
mov
int
inc
decl
mov
cmpsl
sub
cld
cmc
inc
push
pop
lahf
sysexit
pop
leave
jl
inc
repz
jmp
popf
adc
sbb
pop
jg
add
ljmp
outsb
rclb
mov
jmp
aas
and
das
sbb
pop
es
loope
mov
sbb
rcl
or
jmp
fimull
or
out
jp
xchg
mov
jmp
ds
mov
ljmp
fdivr
fisubl
and
lds
cmp
inc
dec
add
pop
or
cmp
xlat
scas
shll
stos
pop
mov
in
push
test
int
mov
sahf
push
pop
sub
pop
imul
lcall
pushl
jns
jns
jns
in
ja
push
inc
mov
into
pusha
adc
xchg
mov
incl
mov
sbbl
insl
xor
lods
push
adc
inc
int3
mov
mov
lock
xchg
cs
pop
adc
pop
mov
pmaxub
fs
call
ror
push
hlt
out
mov
xchg
xor
jg
stc
pop
dec
rcr
mov
in
cli
sub
inc
cmp
and
jg
and
inc
mov
mov
and
sti
clc
loope
dec
daa
orb
outsl
sbb
scas
clc
mov
and
mov
fwait
cs
popf
in
push
sbb
popf
xchg
push
sbb
cmp
sbb
mov
add
popf
daa
sbb
ds
add
add
mov
sbb
mov
imul
mov
jg
sub
jl
jg
xchg
sub
jns
pop
pushf
xlat
in
leave
push
jge
xor
in
decl
shlb
nop
xchg
xchg
push
loop
mov
pop
jmp
jmp
rcrl
sub
add
insb
cli
fsubrs
scas
shll
test
fnstcw
pop
js
sar
lcall
in
ror
add
scas
movsb
into
movsb
test
cmp
pop
loop
xchg
and
xlat
fdivs
pop
stc
and
cs
mov
subl
loope
movsb
add
jmp
mov
xor
stos
sub
mov
mov
sti
inc
or
imulb
cltd
cmp
push
dec
sahf
inc
es
mov
sahf
movl
cmpsl
xor
cmp
fdivr
lcall
dec
aad
mov
gs
scas
sahf
jle
jo
mov
lcall
test
test
ficoms
movsl
cwtl
dec
mov
lahf
clc
mov
inc
and
pop
aam
mov
push
adc
dec
xor
adc
stos
jns
ljmp
xor
push
fcmovb
cmp
jle
cmp
jg
test
sub
xchg
test
fisubl
call
imulb
mov
pop
xchg
ss
aaa
mov
pushf
adc
out
rorb
or
incl
sbb
cmpsl
clc
xchg
dec
jl
add
lods
pushl
push
or
sub
mull
sub
jne
jae
lcall
jg
or
jle
push
sub
imul
in
mov
aaa
call
mov
idiv
incl
js
and
ds
cltd
repz
mov
jb
inc
jns
mov
hlt
xor
dec
and
lcall
movsl
mov
loopne
orl
out
mov
xlat
fldt
lock
mov
jo
adc
fisttpll
pop
mov
sub
inc
xchg
xchg
daa
jg
ljmp
lahf
jl
out
or
mov
int
push
sub
stc
mov
lcall
shrb
mov
cmpsb
push
or
fcom
inc
insl
jbe
decb
xchg
add
decl
or
jae
xchg
lret
inc
cmp
adc
arpl
movsl
cltd
add
and
push
frstor
pop
inc
xchg
inc
sub
jg
clc
insl
lret
mov
cmp
js
pop
jmp
or
jmp
lret
daa
mov
popa
dec
out
loop
add
mov
mov
dec
loope
pop
mov
jbe
call
push
dec
inc
bound
les
xor
imul
outsb
push
mov
mov
idiv
lods
pushf
and
call
jl
or
lods
mov
mov
idivb
dec
repnz
rcrb
add
cltd
pusha
xor
ficoml
mov
lea
jns
clc
dec
mov
xor
jge
outsl
mov
pop
into
jo
xchg
sbb
jmp
sbb
inc
gs
mov
cwtl
ja
cmp
pop
cmp
jnp
dec
and
clc
fistl
fdivp
mov
pop
sbbb
mov
shrb
jg
cmp
pop
sub
movsl
and
mov
xchg
out
and
call
popf
push
scas
pop
jp
inc
mov
adc
clc
aaa
ljmp
sbb
sub
and
inc
sbb
jl
fwait
shlb
cmpsl
jnp
adc
in
cld
lock
sbb
xchg
popa
or
add
xchg
xchg
int
repnz
in
push
inc
jo
mov
ljmp
clc
stos
rcrl
or
loope
mov
or
adc
ljmp
stos
les
dec
mov
imul
iret
in
mov
ljmp
sub
inc
mov
xlat
insl
push
xor
and
incl
adc
cmpsl
insl
js
add
and
in
aam
dec
dec
dec
adc
test
in
aad
in
loop
push
push
out
push
cmp
popa
sbb
push
xchg
sbb
scas
xor
movsl
sub
es
ljmp
mov
lret
in
movsl
sbb
mov
xchg
addb
lcall
push
sbb
mov
loopne
fmuls
out
jne
je
pop
xchg
leave
out
jecxz
pop
cltd
rorb
sahf
bound
mov
inc
push
adc
aaa
add
xor
cmp
lea
inc
imul
mov
incl
pop
dec
rorl
add
cltd
sbb
sub
lret
mov
lods
lcall
pusha
in
cmp
test
mov
cld
mov
sub
shrb
fdivrp
incl
inc
lret
aas
les
aas
jno
loope
mov
xchg
push
xchg
std
pushf
je
shr
cli
fidivrs
push
je
js
push
mov
daa
das
cmp
adc
adc
push
incl
inc
jge
mov
pop
aam
pushf
call
aad
add
push
cs
jp
popf
sub
decl
aaa
addr16
data16
sbb
sub
shll
test
push
aam
sahf
aaa
inc
sub
decl
lods
dec
cmp
and
push
and
lock
int3
jl
or
inc
stc
push
push
imulb
jnp
rdtsc
jae
inc
sbb
sub
testl
test
dec
and
scas
add
loopne
lcall
pop
imul
inc
adc
push
popf
mov
push
xor
je
mov
pcmpeqb
mov
inc
and
fcomip
push
cli
imul
andl
inc
xor
in
sbb
and
pushl
out
je
rcrl
fadd
add
mov
xchg
rcrb
jae
stc
dec
jns
cmp
call
bnd
xchg
push
push
nop
mov
popa
jae
fildll
push
dec
imul
fldl
pop
cmpsb
or
adc
ret
jg
adcl
addr16
enter
lea
xor
cmpsb
je
adc
cltd
std
test
push
push
hlt
lods
cmp
mov
loopne
ljmp
mov
decl
dec
mov
pop
out
out
mov
rcll
test
fbstp
xadd
inc
popa
insl
jb
mov
mov
push
push
test
aas
xchg
aas
arpl
mov
rcl
movsl
jo
inc
pushl
fidivs
cmp
push
dec
xor
inc
bound
xchg
les
in
nop
mov
add
movsb
push
stos
outsl
cli
add
insl
arpl
in
lret
mov
aas
ret
jmp
mov
push
sub
iret
jmp
rcrb
mov
inc
cld
lcall
mov
push
mov
jl
add
cwtl
xlat
xor
mov
ja
inc
xchg
push
rorl
call
sbb
popf
jmp
mov
mov
pushf
mov
movsb
dec
das
das
xlat
ds
inc
pop
out
and
push
dec
jnp
out
subb
inc
xor
sbb
ret
aaa
xor
inc
adc
mov
push
sub
pop
xchg
adcl
sarb
inc
adcb
out
adc
popf
and
scas
xchg
sbb
out
stc
or
push
pop
mov
mov
mov
fcomip
incl
into
pop
inc
mov
lock
or
imul
or
jmp
pushl
lea
icebp
mov
ja
aad
add
inc
out
inc
adc
mov
xchg
jmp
inc
nop
bnd
enter
adc
mov
push
add
incl
and
cmc
loop
stos
pop
sti
call
bound
jno
adc
dec
cmp
dec
xchg
lods
es
jo
sarl
add
jl
sbb
imul
xchg
mov
bound
xchg
icebp
mulb
dec
pop
cmc
push
adc
lret
shr
ljmp
inc
pop
ljmp
mov
inc
push
orl
and
subl
in
add
sub
je
push
and
lods
push
fsqrt
jmp
xchg
fcomps
stos
cmc
or
aaa
test
xor
jbe
sbb
call
pop
shrl
mul
loope
testl
ss
dec
sar
dec
cmp
jnp
cmp
into
cmpsl
jae
dec
sub
push
jg
adc
cmp
cmp
iret
mov
jnp
popf
sbb
cmpsl
pop
outsb
cmp
adc
dec
inc
xchg
std
xchg
jb
imul
push
int
adc
enter
xlat
push
outsl
adc
mov
mov
movsb
stos
xchg
imul
dec
sub
mov
test
jl
xchg
mov
incl
cmp
xor
lret
outsb
js
adc
roll
das
ljmp
cs
fwait
ja
insb
fimuls
ja
addr16
ja
jge
insb
fisttpl
fcomip
xchg
and
sahf
adc
and
es
jecxz
ljmp
das
pop
icebp
ljmp
clc
stos
clc
or
xor
sahf
jl
sub
adc
jmp
mov
dec
divl
adc
hlt
adc
popa
mov
mov
or
dec
mov
jge
stos
fcoms
inc
xchg
jmp
mov
pop
in
jno
lock
adcb
sbb
sbb
dec
aam
outsl
or
scas
sbb
ret
push
adc
dec
jecxz
arpl
jmp
call
shlb
push
dec
test
sbb
add
dec
cmp
jmp
mov
fcmovnbe
ljmp
xchg
push
int3
jbe
jg
jmp
dec
insb
into
add
xchg
rcr
out
pop
cmpsb
cmp
pop
xor
mov
pop
das
clc
mov
mov
adc
cmp
ljmp
xchg
pop
xor
sbb
jp
inc
ss
adc
jmp
jns
mov
pop
icebp
jmp
or
sbb
movsb
add
mov
js
call
or
leave
sub
lds
cmc
int3
mov
pop
stc
ja
jecxz
cmpsl
sahf
xchg
ret
or
icebp
lcall
shl
xor
push
dec
hlt
cmp
jg
inc
dec
mov
dec
sbb
mov
rcrl
push
sub
loop
or
jg
jmp
imul
int3
xor
stc
sarb
sbb
ret
jg
jns
mov
mov
xchg
sbb
iret
sbb
incl
stc
test
fcompl
push
push
lahf
iret
aaa
jge
shlb
arpl
call
lret
test
adc
test
fwait
mov
xchg
imul
lods
icebp
mov
xor
stos
popa
cld
incl
into
adc
clc
fld
mov
or
in
sub
std
cwtl
add
push
rol
push
into
inc
cmp
out
dec
mov
or
lret
sar
inc
cmpsb
lretw
lods
sbb
pop
pop
sub
repz
movsb
jge
shl
cli
fists
jmp
cmpsb
icebp
ljmp
daa
aaa
inc
cmp
and
je
test
sub
stc
bswap
stc
adc
sbb
pop
dec
je
into
dec
incl
ljmp
mov
outsb
sti
add
call
in
test
mov
push
sub
inc
xchg
lret
loope
pop
sbb
in
pop
sbb
fdivr
push
std
incl
addr16
pushf
mov
lock
sahf
pop
adc
jne
sarb
js
in
or
push
sbb
push
pop
cld
sub
cltd
xchg
mov
ret
cmp
int
es
int
decl
add
stos
cmc
mov
cmp
mov
push
dec
xchg
data16
lret
jmp
nop
xchg
and
sbb
sbbb
aam
mov
mov
push
sbb
mov
call
out
in
inc
pop
dec
repz
jl
imul
call
mov
adc
push
xor
sub
popa
pop
jb
xchg
out
fwait
jle
push
xor
in
loopne
int3
mov
in
insl
out
cmp
and
ljmp
cmpsl
push
scas
pusha
fs
sub
dec
fwait
mov
scas
pop
cmp
mov
add
lds
lock
pusha
imul
insb
mov
out
sub
and
jg
subb
decl
and
inc
xchg
out
outsb
inc
mov
mov
popf
jp
adc
mov
xor
pushl
das
loope
jnp
lcall
dec
xor
test
sub
mov
pop
call
loop
cld
sbb
xchg
divb
daa
push
fmul
movsl
cltd
cmp
ss
movsl
imulb
ja
push
cld
imul
mov
xor
sbb
jmp
jl
cltd
and
rcrb
incl
dec
mov
ficoml
mov
daa
cmp
hlt
sbb
mov
push
xchg
out
clc
jp
cmp
cmc
mov
rclb
or
push
rolb
sti
adc
pushl
dec
pop
mov
pushaw
dec
and
mov
mov
mov
inc
call
xchg
inc
mov
mov
xchg
enter
dec
jmp
cmp
push
mov
inc
or
decl
lret
push
push
icebp
sub
mov
dec
loope
mov
and
aam
and
iret
sub
pushl
jne
cli
sub
mov
iret
sbb
adc
dec
mov
dec
mov
imul
mov
ficoms
adc
adc
adc
leave
incl
pop
xorb
ss
sbb
add
pop
cmp
int
jp
mov
mov
cli
vmread
adc
adc
push
ds
in
test
pop
cltd
jmp
sbb
mov
das
bound
mov
shlb
xchg
in
jne
dec
xchg
fidivs
xchg
xorl
sbb
jl
pop
out
test
je
loopne
fwait
sahf
mov
adc
cs
mov
jmp
xor
stos
add
push
push
mov
add
and
mov
mov
inc
jp
push
lret
jmp
ja
sbb
enter
adc
lret
adc
jg
pop
rcrb
fwait
je
stc
pop
sub
and
cmp
xchg
repnz
pushl
cmc
lahf
add
xor
call
mov
or
hlt
xchg
or
leave
mov
push
xchg
cli
and
call
mov
xor
hlt
inc
add
push
pop
mov
mov
cli
xchg
aam
mov
andb
adc
outsb
test
mov
fisttps
mov
xor
jmp
sub
mov
cwtl
aam
xchg
movsl
and
sar
mov
adc
and
ret
and
decl
loopne
pop
dec
mov
rcl
stc
mov
decl
fwait
inc
mul
or
push
loopne
fisttpll
xchg
rolb
mov
pop
dec
pop
mov
aam
out
sub
or
call
cltd
mov
movsl
in
pop
pop
in
jg
add
jbe
popa
lcall
aas
pushl
cmp
popf
add
shl
xor
mov
inc
add
bound
push
sub
or
jg
js
adc
push
iret
imul
cld
shll
movntq
out
sub
pop
sarb
fbld
mov
cli
xchg
sbb
dec
push
mov
and
push
xchg
push
dec
xor
jnp
incl
daa
xor
sub
mov
mov
sub
out
push
pushf
sbb
loop
jmp
jle
stos
pop
dec
sub
rorb
inc
push
insl
popa
popa
dec
xor
call
in
mov
sbb
and
lret
enterw
into
jg
decl
pop
xor
mov
mov
clc
xchg
inc
mov
dec
pop
jl
out
scas
es
ljmp
icebp
divl
mov
sbb
inc
fcmove
je
aaa
push
xchg
outsl
aaa
mov
sbb
pop
out
pop
sub
jmp
mov
push
pusha
push
jb
rcrb
dec
push
sub
push
leave
aad
shrb
pushf
cli
pushl
xchg
je
repz
dec
lods
and
xor
test
insb
cmp
mov
imul
out
movsl
loope
gs
xchg
call
adc
fs
lcall
jmp
ret
jl
pop
dec
add
and
or
mov
nop
movsb
pop
das
leave
fwait
inc
add
incl
cld
decl
outsl
out
fsubl
sub
aas
sti
push
mov
cmp
pop
hlt
lods
les
inc
and
sub
in
pop
or
mov
mov
sbb
jl
decl
aas
pop
insb
or
inc
sub
std
sahf
lock
jge
es
and
or
sub
lea
popa
out
test
out
fwait
add
in
or
jbe
xchg
jbe
dec
bound
fdivrl
aas
fdivr
cmpl
ljmp
cwtl
jns
jne
mov
dec
sub
inc
mov
xchg
jge
unpcklps
int
jbe
fbstp
adc
pop
out
insb
adc
movsl
cmp
cmp
mov
aas
push
ljmp
cli
decl
dec
mov
adc
sbb
mov
mov
mov
mov
mov
push
bound
xorl
decl
loopne
jp
ja
mov
clc
popf
inc
sbb
daa
in
push
clc
and
test
stc
sub
pushl
lods
ja
push
ss
idivb
xchg
arpl
cmp
ja
imul
inc
adc
jg
daa
sbb
xor
push
out
mov
push
repnz
add
mov
adc
les
add
incb
subb
pop
push
incl
call
and
pushf
dec
or
call
lods
xlat
mov
inc
sub
jmp
fmuls
push
dec
and
lret
adc
push
fs
mov
int
icebp
int3
ss
in
inc
aas
scas
xor
cli
adc
jecxz
pop
sub
inc
mov
shlb
sbb
pushl
call
repnz
jg
mov
cmp
jae
movsl
stos
xchg
pop
mull
decl
push
pop
xor
push
mov
mov
cmp
sub
cwtl
xchg
divb
adc
push
les
push
pushf
mov
inc
mov
add
mov
mov
cli
cmp
lcall
imull
add
push
inc
cmp
daa
jbe
push
sbbb
dec
icebp
push
pop
cmp
mov
loope
xor
pushl
xchg
fadds
popa
cltd
enter
sub
popa
in
cli
decl
push
or
cmp
cmp
or
xchg
adc
sbb
lock
inc
cwtl
sub
icebp
decl
fwait
nop
sub
mov
adc
dec
inc
pop
push
mov
incl
ret
sub
pop
inc
pushf
outsb
mov
push
xor
xorl
ja
mov
adc
inc
jmp
inc
adc
push
fisubrs
mov
jno
inc
fiadds
pushl
mov
fists
push
inc
xchg
cmp
xchg
sub
pushl
jnp
cmc
hlt
movb
push
loopne
jp
lods
loope
inc
mov
inc
mov
mov
fidivl
ljmp
inc
sbb
adc
lods
mov
lea
sub
mov
dec
std
jg
lcall
sub
or
xor
sbb
out
and
rolb
test
ljmp
jnp
jle
int
in
pop
cmp
lods
test
xor
xlat
jae
in
mov
mov
imul
pop
or
and
loope
inc
loop
mov
jg
enter
cmp
and
xor
das
popf
out
testb
mov
incl
add
dec
ret
popa
insl
adc
lret
and
adc
ror
xchg
rcll
fs
xchg
mov
ficomps
inc
or
dec
in
add
jns
push
stc
ljmp
inc
gs
cmp
clc
call
out
mov
clc
or
xchg
das
mov
jb
pushf
pop
jge
inc
repz
and
xor
scas
addb
pop
mov
mov
call
jecxz
and
mov
in
divl
in
lcall
add
sbb
xor
fyl2x
and
aas
loop
mov
sub
inc
sbb
daa
inc
std
xchg
lret
sub
jb
mov
ljmp
fisubl
xchg
xor
stc
mov
int
orb
cmp
pushl
clc
test
out
call
or
pop
movsl
inc
sahf
decb
mov
jmp
data16
cmc
repnz
shrb
rcll
gs
xorb
xor
clc
and
scas
jmp
int
dec
xor
call
xchg
enter
xchg
push
mov
pop
cld
rcrb
int
aas
push
popf
imul
lock
fsubrp
cli
mov
js
xchg
xor
pop
arpl
mov
movsb
and
lcall
mov
lahf
mov
pop
loop
out
adc
dec
and
fdivr
das
dec
aam
cld
outsb
mov
lcall
stos
adc
pusha
fimull
mov
jns
lret
jnp
xor
lea
sbb
inc
in
ljmp
and
adc
pop
test
out
nop
push
std
das
inc
sbb
add
mov
mov
and
mov
test
xor
jae
jmp
fninit
mov
push
adc
pop
scas
jge
mov
incl
int3
xor
mov
adcb
inc
test
adc
jmp
cli
inc
cmpsb
adc
cld
ljmp
mov
add
mov
arpl
push
mov
sahf
push
cmp
dec
jmp
bound
in
addl
subb
inc
insb
sbb
xor
pop
xor
into
push
mov
adc
ljmp
addr16
shlb
mov
mov
loopne
jp
mov
outsl
pushf
hlt
mov
pushf
push
add
jg
pushl
sbb
call
push
addr16
jo
loope
and
jb
xor
lcall
pop
je
jne
lods
sbb
push
inc
add
push
aas
arpl
xchg
inc
in
leave
in
mov
mov
out
pushl
out
into
inc
scas
mov
sarb
cli
cmp
clc
cmpsb
xchg
in
stos
or
pop
call
mov
clc
xor
mov
mov
stc
je
pushl
scas
fdivs
jg
xchg
sub
test
mov
and
fnstsw
push
aad
push
sti
and
pushl
jge
nop
rcrl
cmc
in
pushl
out
iret
jbe
xchg
sarl
mov
lock
mov
cli
mov
push
fs
data16
adc
lret
push
or
ljmp
ja
test
jne
pushf
sbb
out
jnp
cld
jg
pop
mov
inc
cmp
ja
xor
mov
sub
lcall
jmp
xor
push
call
cmp
pop
hlt
insl
call
insb
add
jle
addr16
mov
js
pop
jo
mov
std
ljmp
mov
cmp
stos
lret
jl
pop
add
jmp
out
loope
std
clc
sub
mov
addr16
xor
jae
stos
jns
sar
call
ret
imul
jns
imull
lods
pop
ljmp
push
push
decl
scas
outsb
insl
sar
popl
add
orb
addr16
insl
fimuls
scas
in
cld
dec
mov
mov
xor
ror
mov
shl
sbb
outsb
xchg
mov
popa
les
arpl
ss
push
mov
pop
inc
mov
pushl
in
sahf
das
int3
movl
fistpll
jb
test
sub
ja
sub
fcoml
call
push
popa
sbb
in
jno
jp
aaa
pop
jno
popf
mov
in
daa
idivb
imul
inc
les
and
add
dec
xchg
and
loop
lcall
lods
cld
sbb
pop
test
jns
ja
shll
mov
negb
mov
mov
ljmp
or
mov
loopne
fiadds
and
mov
jg
jb
mov
push
movsbl
jo
out
decl
outsb
loopne
pop
xchg
shlb
jg
fdivp
xor
dec
xor
dec
sbb
cltd
daa
dec
xchg
pop
movsb
fdivr
pushl
add
mov
xor
jge
xchg
pop
add
lods
mov
push
and
incb
lahf
rclb
push
sahf
mov
pop
mov
ss
jg
pushl
ja
ret
lods
daa
mov
mov
adc
dec
sti
scas
out
inc
scas
pop
std
incl
sbb
sub
je
cmp
xchg
xchg
fucom
mov
repnz
rolb
push
and
pop
sub
pop
mov
ljmp
jne
mov
mov
pop
test
cmpsb
dec
and
xchg
mov
xchg
xor
in
lahf
xchg
test
cmp
in
mov
cld
test
aam
out
out
add
cmp
scas
cmp
or
fxch
cmpsb
add
add
out
or
sbb
mov
rorb
dec
dec
jl
dec
add
in
ret
cmp
cmp
outsb
xor
xchg
cmp
lock
icebp
das
and
xor
cmpsl
add
push
cli
xchg
dec
jecxz
xchg
fildll
jle
mov
or
push
adc
rcr
xor
cltd
cmpb
mov
jae
pop
mov
out
clc
jmp
in
and
lret
aam
mov
loop
mov
pop
add
pushl
and
inc
and
fwait
mov
loop
jno
jbe
xchg
add
stc
or
xchg
and
jle
or
add
ljmp
mov
pop
aam
hlt
cmpsl
xchg
add
decl
cld
or
jg
call
adc
aas
das
push
xchg
divb
sub
xor
mov
pop
pop
adc
xchg
mov
cmpsb
sti
pop
loopne
mov
lret
packsswb
incl
cwtl
adc
or
imul
jmp
add
mov
pop
sahf
shrb
fwait
and
mov
data16
cmpl
addr16
dec
jno
sbb
cltd
cmp
sbb
mov
dec
icebp
ljmp
or
push
xor
js
ja
mov
gs
clc
push
sbb
mov
test
cmp
cmpsl
mov
and
insl
push
jle
popf
out
rcll
mov
jmp
aas
fadds
mov
outsb
in
data16
jns
test
loop
sahf
sbb
sbb
ljmp
jle
add
sti
sub
jl
cmp
aam
loop
lock
aaa
dec
scas
cmp
mov
xorl
incl
fsubrl
mov
add
bound
inc
cmpsl
in
ffreep
and
pushl
pop
cmp
fldcw
jg
cmp
xor
cmpsl
rcrl
jl
cltd
idiv
fwait
push
repz
pushl
jg
cs
sub
int3
xchg
mov
shrl
js
add
sub
movsl
insb
aaa
and
sbb
ljmp
in
fwait
iret
es
sti
jmp
aad
jbe,pn
sbb
decl
adc
xor
adc
shll
mov
mov
adc
push
iret
xchg
mov
aas
inc
cmp
sub
addl
cmp
lcall
call
int
xchg
repnz
jp
push
cmp
adc
jmp
ret
shrl
mov
xor
les
or
into
mov
add
jp
aad
outsb
incl
jo
fisttpl
sub
pop
mov
mov
push
add
and
jno
cmpsb
lock
pushl
outsl
cmp
jl
mov
jbe
inc
push
gs
add
push
pop
test
scas
mov
lret
lea
mov
mov
fbld
jno
push
das
inc
faddp
hlt
mov
xchg
popa
mov
aas
aam
mov
inc
imulb
nop
add
sbb
cld
stos
imul
cli
mov
je
gs
xor
ljmp
sbb
cmp
push
std
cmp
leave
hlt
dec
jns
jmp
pushl
sbb
mov
inc
sbbl
inc
inc
lock
inc
inc
adc
scas
mov
call
jne
push
dec
rcll
sbb
pop
xchg
aam
int3
cmp
mov
fisttpll
xor
lods
xor
call
repnz
cli
push
data16
fs
push
lcall
add
or
adc
mov
scas
call
fwait
cmpsb
add
adc
mov
cmp
push
adc
jg
mov
xor
add
out
fdivrl
dec
mov
cmc
or
adc
incl
mov
push
add
mov
lcall
aam
add
cmp
inc
fists
jb
je
pusha
xchg
xchg
jle
xor
lahf
jg
push
idiv
pop
mov
jp
test
cli
dec
fistpll
pushl
lcall
xorb
fsubr
mov
sahf
out
mov
test
movsb
adc
iret
xchg
rorl
sub
stc
xchg
shrl
mov
mov
jge
pop
std
lcall
pop
xchg
subb
aad
add
aas
mov
repz
xor
incl
test
lret
add
dec
xor
dec
jbe
outsb
arpl
pushl
jecxz
es
leave
cwtl
xchg
inc
pusha
out
mov
mov
outsb
rorl
add
lcall
lret
push
mov
xchg
mov
in
shl
mov
cwtl
or
pop
xchg
test
push
cmp
scas
mov
scas
jbe
dec
mov
roll
or
pop
push
lcall
mov
clc
jae
mov
xor
cmp
jae
lea
ljmp
mov
mov
push
cmc
mov
lock
xorl
adc
out
lahf
pop
mov
dec
xor
inc
sub
add
ds
inc
lods
enter
es
mov
shll
ljmp
push
movsb
or
mov
xchg
cmp
cmpsl
xchg
adc
and
cmpb
fcomip
mov
movsb
dec
xchg
cmp
es
cmp
pop
and
inc
push
loope
sub
outsl
clc
call
mov
cmp
push
xchg
sub
negb
dec
aaa
push
add
aam
jmp
adcb
stc
mov
das
es
xchg
and
sub
mov
repnz
aam
ret
jecxz
sub
mov
jle
mov
decl
cld
rcrl
or
test
iret
jg
imul
cli
imul
pop
hlt
ljmp
adc
cwtl
dec
mov
outsl
dec
cmp
js
xlat
imull
repnz
loopne
jmp
pop
stos
stos
cmp
cmpsl
jl
loop
sbbb
push
ret
pop
sbb
add
jb
push
mov
pop
fsubrp
int3
out
or
call
stos
inc
inc
fs
leave
mov
sub
dec
add
clc
scas
pop
lods
xchg
xchg
jl
sbb
insb
seto
mov
cltd
in
aam
jns
or
or
push
inc
cmp
adc
fmuls
cmpsl
aam
and
mov
jne
testb
pop
daa
push
pop
in
and
mov
int3
sub
lahf
andl
mov
pcmpgtd
or
call
shll
movsl
cmp
mov
or
and
mov
mov
addl
mov
add
sbb
inc
mov
xor
stos
add
repz
movsb
popa
ss
sbb
adc
cmpsb
decl
aam
jne
xor
out
sbb
jg
inc
inc
cmp
sbb
mov
pop
daa
stos
and
mov
int
imul
xor
js
cmp
add
cmp
jmp
dec
repz
call
ds
ficompl
outsb
mov
inc
jmp
mov
test
inc
xchg
scas
add
jo
decl
lock
pushf
movsb
mov
adc
movl
ret
sub
jb
fwait
call
inc
mov
pop
repz
popf
dec
fnstenv
imul
push
adc
outsl
cld
dec
decl
jle
dec
sarb
into
xlat
pop
out
inc
enter
xor
mov
loop
cmp
imul
lret
into
dec
in
jg
clc
mov
sub
xchg
mov
je
sti
mov
pop
dec
addr16
inc
std
push
adc
cmp
fnstsw
std
xor
lahf
cmp
out
mov
inc
sub
ficomps
js
mov
mov
cmp
stc
adc
imull
out
push
lcall
sahf
out
add
sbb
fnstsw
push
pop
scas
inc
cwtl
call
call
mov
loop
andb
xchg
popl
jnp
pop
testl
fcomip
sub
in
lret
inc
jnp
testb
jg
int
inc
cld
and
shlb
xchg
add
mov
js
cmp
adc
sarb
cmc
xor
mov
jne
insl
orl
arpl
jmp
repnz
call
dec
fbstp
pushl
out
xor
popa
mov
loopne
jl
and
lcall
push
fstpt
stc
jmp
xlat
lahf
cs
rcrb
xchg
sub
js
and
sbb
hlt
sarl
mov
cmp
push
fldl
jp
xor
rcll
adc
push
decl
jmp
stc
add
cmp
xchg
xchg
xlat
add
mov
sbb
add
jge
test
and
outsb
cld
fcmovne
and
ret
test
aas
jbe
leave
sub
mov
push
mov
ret
xchg
movsb
frstor
push
sbb
paddsb
testl
scas
dec
je
inc
incl
call
jne
cmpsl
xchg
add
pushf
aaa
add
cltd
addl
sti
inc
popf
jno
inc
pushl
sbbb
adc
add
jb
inc
xchg
pop
shlb
cli
dec
pushl
inc
in
stos
add
call
in
leave
adcl
lret
mov
jb
sahf
orb
addr16
mov
jne
leave
out
stc
sbbl
add
mov
out
cli
pushl
xor
lret
loop
outsb
repnz
adcl
call
clc
mov
xchg
xor
xor
je
in
mov
addr16
mov
aaa
fisubrl
sbb
adc
repnz
add
inc
push
xlat
pop
adc
add
mov
incl
pop
xor
insl
ja
cmc
fistpll
call
imul
cmp
mov
mov
iret
mov
repnz
ret
add
mov
pusha
xchg
lcall
incl
add
jno
cltd
mov
dec
pop
cld
pop
sbb
jmp
mov
cld
mov
je
jge
mov
mov
or
sub
push
imull
stos
es
incl
imul
mov
inc
add
push
js
inc
mov
call
out
pushf
mov
popf
push
dec
xlat
mov
aam
in
mov
movsb
pushf
aad
decl
in
jae
sub
adcl
imul
scas
inc
inc
pop
fadd
ljmp
stc
out
aas
ljmp
sub
lcall
call
inc
pop
pop
dec
inc
mov
dec
jbe
pushf
push
cmc
daa
ret
lcall
inc
test
and
sahf
xchg
push
push
push
arpl
lds
ss
ret
ja
pop
push
gs
jmp
xchg
call
ja
inc
inc
mov
push
dec
cmp
bound
jmp
push
pushf
cmp
fucomi
mov
jg
lcall
inc
rolb
out
icebp
and
cmp
dec
inc
fists
stos
inc
in
jno
lret
jg
adc
cmp
das
in
sub
adc
add
sub
fdivrs
jmp
pop
cwtl
mov
ret
iret
in
scas
rolb
jbe
inc
shlb
lods
mov
lcall
sbb
fnsave
mov
aam
pop
sbbb
mov
jns
lret
cli
jo
pushl
std
jnp
mov
pop
stos
push
popf
jp
imul
mov
call
aaa
movsb
je
inc
mov
dec
and
ja
hlt
xor
mov
push
ljmp
out
mov
pop
xchg
mov
mov
inc
lods
mov
dec
cmp
push
nop
icebp
mov
mov
xor
pop
or
lret
adcl
int
xchg
lret
push
shl
xchg
insl
ret
int3
mov
dec
mov
idiv
fisttps
cs
mov
pop
mov
ljmp
dec
cwtl
xor
movsb
push
aam
call
mov
ss
aas
fistl
mov
and
cltd
insl
in
and
lock
clc
aas
mov
mov
or
decl
test
or
jno
adc
arpl
sub
call
ret
cmp
test
sbb
insl
dec
pushf
les
dec
int
or
xchg
in
mov
lds
loope
nop
inc
nop
pusha
cltd
movsl
popf
sbb
in
cs
push
sti
inc
mov
mov
out
idivb
adc
cmc
add
call
std
jae
call
inc
mov
je
dec
sarl
push
add
lcall
fcoms
lret
adc
push
push
pop
into
cmc
pop
sbb
xchg
mov
out
cli
decl
mov
inc
imul
inc
mov
adc
out
fadd
jo
jle
das
lcall
adc
inc
adc
int
fs
es
pushl
adc
dec
int
cltd
ss
mov
int3
adc
test
decl
sbb
imul
xchg
cmp
xchg
popf
push
loopne
ja
cmp
sbb
stos
ljmp
scas
ret
jae
popf
inc
psraw
xchg
xchg
cmpsb
loop
push
call
xor
cmp
xor
xchg
enter
orb
mov
fwait
js
addl
pop
ret
add
shrl
sbb
addb
cmp
dec
mov
scas
mov
xchg
adc
lock
call
or
push
add
aaa
stos
scas
incl
lds
out
call
loope
cmp
jg
iret
jae
lret
push
or
dec
jle
call
insl
sbb
push
rorb
xor
clc
push
into
mov
dec
dec
pop
out
aad
xchg
imul
dec
fs
push
lods
aas
cmp
arpl
popf
xchg
aaa
dec
and
gs
test
incl
aaa
xor
mov
cwtl
sub
dec
jno
and
cmpsb
test
dec
cmc
lock
cmc
inc
xchg
daa
mov
sub
and
lahf
int3
xchg
data16
add
push
cmp
mov
lcall
add
inc
fwait
jecxz
xor
cmpb
mov
inc
cmpsl
push
popa
pop
cmp
test
out
and
dec
in
outsl
inc
psllq
je
daa
mov
inc
cmc
mov
inc
sbb
dec
mov
jbe
push
add
test
in
sbb
repz
pop
jmp
fnstenv
xchg
xchg
pop
sahf
and
shrl
ja
int
sarb
fdiv
ds
test
nop
or
imul
clc
incl
adc
sbb
mov
sbb
js
or
mov
jmp
out
lret
sar
add
mov
outsl
mov
mov
push
xchg
scas
mov
xor
jmp
inc
fs
ret
push
idivl
xor
ljmp
mov
lock
pop
sub
test
cwtl
roll
xchg
push
inc
jle
mov
fcomip
call
pop
jecxz
das
movsl
fcomi
and
adc
pop
sub
dec
das
icebp
in
cld
xchg
fnstsw
scas
pop
mov
popa
xor
mul
cmp
adc
stos
mov
aam
test
mov
ljmp
lcall
jge
in
dec
add
or
adcb
sbb
lods
jb
inc
test
lock
call
enter
addr16
push
add
or
jb
daa
ds
cmp
cmp
pushl
push
push
test
insl
into
js
clc
xchg
pop
les
push
leave
popa
popa
test
or
mov
lods
add
mov
pop
jbe
ss
bound
popf
xor
filds
and
jne
ljmp
std
popf
sbb
xor
dec
iret
sbb
into
andl
mov
inc
sub
add
scas
mov
sub
mov
bound
mov
mov
and
sub
mov
bound
scas
out
rcrb
or
lds
repnz
cltd
cmp
mov
enter
out
outsb
addr16
ljmp
dec
jb
lcall
jmp
int3
mov
lcall
push
mov
into
icebp
pushf
adc
cmp
or
xor
nop
cld
fnstcw
pop
inc
cli
pop
js
outsb
out
adc
mov
repz
pushf
xor
out
clc
pop
push
mov
pop
sub
jne
daa
loopne
data16
dec
lds
jecxz
insb
pushl
add
or
mov
sub
add
inc
and
nop
push
mov
jae
cltd
stos
insb
std
incl
mov
add
dec
mov
fs
shlb
lock
dec
mov
jp
cld
xlat
jecxz
es
cmp
sti
clc
push
or
sub
sbb
stos
xor
or
mov
xchg
in
mov
add
and
or
ljmp
es
push
inc
ficoml
outsb
imulb
push
dec
push
std
push
pop
fisubrs
ja
je
cmp
sbb
pushl
int3
push
adc
mov
test
das
ret
xchg
sahf
jnp
in
pop
sbb
pushl
mov
mov
sub
test
lret
subl
inc
lret
push
cmpsb
push
filds
bnd
or
push
cs
lcall
pusha
lcall
or
fsubrl
lcall
adc
aam
mov
jmp
push
bound
cmpsl
add
repnz
ss
sub
cmpb
adc
push
popf
in
in
out
and
adc
mov
or
sub
adc
xchg
fwait
jmp
dec
dec
mov
dec
sub
sbb
les
incl
pop
sarl
icebp
mov
aam
lock
bound
mov
jmp
mov
sbb
mov
jp
cmc
shr
dec
out
pushf
cmp
pushl
call
ret
mov
pop
mov
sub
cmpsl
xor
fisubs
lcall
mov
mov
std
xchg
repz
xchg
and
ljmp
add
fsubl
clc
mov
lcall
xchg
out
popa
daa
jg
les
in
dec
mov
cmp
decb
xor
mov
xchg
xor
cmp
lock
xor
inc
es
push
dec
or
call
leave
mov
mov
stc
adc
lret
nop
aas
or
aam
pop
cld
incl
push
insl
insl
pop
stos
negb
xchg
stos
test
push
adc
inc
add
adc
lcall
pop
adc
leave
xchg
xchg
xchg
sbb
pushf
sbb
cmpsb
push
xor
push
int3
aam
adc
and
aad
sub
xchg
enter
or
std
stos
mov
mov
pushl
leave
adc
shll
ds
push
out
mov
aad
add
nop
repz
std
jl
mov
decl
inc
stc
test
add
and
jae
sbb
insb
shlb
xchg
ljmp
and
sbb
jae
jne
hlt
ficoms
dec
movsl
sti
aam
ljmp
les
int3
icebp
clc
inc
pop
xchg
pop
or
les
xor
add
xorb
xchg
rorl
stc
jnp
icebp
or
mov
inc
enter
pop
add
faddl
xchg
inc
xor
je
sbb
insl
aam
call
ljmp
outsl
sub
jb
adc
xor
and
fcomi
dec
adc
movsb
mov
clc
sbb
iret
mov
imul
leave
mov
push
stc
fwait
pusha
add
daa
fdivr
xchg
push
cmp
xlat
mov
rcll
mov
rcll
fbstp
add
inc
repz
pushl
adc
in
cli
xchg
test
xchg
test
lret
adc
cmp
loope
push
ficomps
in
mov
pop
repnz
lcall
sti
push
push
cs
xorb
mov
inc
mov
xor
push
insb
clc
call
dec
jo
pop
into
test
aam
lods
jg
dec
jge
jg
rcrl
daa
mov
pop
frstor
ljmp
sub
push
pushf
mov
repnz
les
mov
imul
lret
fwait
xor
in
inc
mov
in
das
lea
mov
cmp
outsl
lahf
pushw
clc
adc
inc
fwait
in
daa
xchg
adc
incl
pushl
aas
insl
mov
xor
sti
test
fdivrl
js
cld
pop
out
fdiv
shll
xchg
or
dec
iret
pop
mov
outsb
imul
out
sbb
push
mov
fdivs
enter
rcl
hlt
adc
scas
pushf
call
pop
out
shr
xor
test
dec
rclb
xchg
mov
mov
clc
rorb
fcmovnb
call
add
add
lret
call
pop
pop
call
pop
jmp
pushf
fnstcw
mov
pop
daa
imul
push
cmpsl
in
mov
divl
sbb
push
dec
imul
mov
popa
sbb
cmp
decl
enter
in
fsubr
rclb
push
iret
mov
pop
test
int3
repz
mov
ljmp
inc
xchg
jno
xchg
out
mov
add
repz
cltd
sti
aaa
pop
sahf
jo
sbb
xor
test
cmp
push
push
mov
stc
sar
pushl
cwtl
lret
andb
cmp
adc
add
cld
push
sbb
jecxz
add
xor
inc
shrl
incl
mov
push
pop
push
arpl
iret
sti
lods
iret
push
pop
mov
std
je
jb
fstpt
jl
lret
cs
xlat
jmp
fists
sub
in
jne
pusha
cmpsb
dec
stos
stos
or
push
lahf
insl
shlb
ljmp
sub
lcall
fimuls
in
ds
mov
leave
fmuls
imul
lods
mov
push
sub
sarl
mov
outsb
mov
mov
jg
and
push
aaa
pop
imul
std
jmp
cmpsl
mov
cld
popa
in
shl
and
fdiv
movsb
movsb
rcrb
cs
lcall
push
inc
cmp
andl
add
mov
mov
push
ljmp
cli
inc
cmpsw
data16
push
push
cltd
cmp
cmpl
insb
fs
stos
jmp
lret
out
movsb
or
xchg
clc
or
ljmp
dec
pop
cs
sub
and
pop
aaa
inc
dec
mov
mov
inc
in
decl
lahf
or
faddl
dec
xchg
jg
cmp
push
cs
outsl
inc
loopne
sbb
sti
adc
jmp
cmp
xor
add
cltd
fscale
int3
xchg
mov
aas
or
ljmp
sub
mov
lods
daa
bnd
stos
dec
push
shll
pusha
fwait
sub
push
pop
sbbl
cli
cmovnp
mov
call
mov
or
icebp
jns
outsl
cli
call
out
sbb
in
xlat
sbb
add
stc
arpl
repz
inc
cs
jmp
sbb
sbbb
cmp
jg
add
add
stos
inc
jle
or
sbb
fstps
aad
xor
pop
inc
je
dec
or
mov
pop
stos
mov
lock
jg
xchg
rcrb
scas
jp
xchg
push
in
push
add
sbb
imul
jg
aam
clc
lods
pop
je
xor
jnp
and
mov
mov
push
and
repnz
enter
lcall
decl
shrl
pop
pop
aad
pandn
sahf
arpl
mov
inc
add
das
clc
incl
jbe
test
and
push
xor
xor
decl
adc
pop
jae
add
cli
cmpsb
pushaw
in
lahf
and
or
cmp
xor
sahf
cs
jl
in
jge
sbb
insb
dec
test
lods
mov
cmp
ljmp
icebp
mov
cwtl
xchg
insl
in
int3
popa
in
rorl
xchg
lcall
in
xor
ljmp
mov
xchg
addl
subb
push
lock
jg
mov
pop
ja
xor
ficompl
lock
in
push
mov
ljmp
jle
mov
pop
icebp
sbb
call
push
sbb
and
decl
xor
jae
stos
sub
xor
in
ss
cmp
push
dec
xchg
add
and
cmp
adc
cld
pop
mov
push
daa
xlat
insb
cwtl
jmp
fildl
mov
repnz
mov
lcall
ss
lcall
adc
xor
mov
mov
mov
fimuls
add
cmp
xor
mov
add
int3
movsbl
je
js
mov
test
inc
loopne
popf
imul
outsl
xchg
ljmp
lock
ljmp
in
push
inc
es
cmp
mov
aas
dec
insb
or
mov
stos
fsubl
add
add
or
pop
xchg
push
push
cs
imul
call
mov
or
cli
mov
jo
pop
pop
fs
jmp
cmp
mov
dec
push
mov
adc
jmp
cltd
in
mov
mov
dec
in
inc
mov
jmp
jge
pop
cmc
xchg
inc
inc
ja
les
lret
mov
pop
add
mov
gs
lcall
or
mov
outsb
insl
push
pop
pop
cmpsl
out
cld
into
in
mov
inc
lcall
jo
out
adc
test
adc
outsl
int3
insl
fxch
xchg
mov
sbb
scas
jmp
sbb
and
cmp
pop
dec
loope
ret
fwait
pushl
inc
es
popa
jge
ss
scas
dec
mov
lods
sub
jg
adc
sti
leave
and
xor
mov
ret
adc
or
cli
pushl
cld
jmp
test
add
mov
lahf
or
xchg
idiv
out
sahf
mov
or
mov
into
push
sbbl
pop
mov
clc
dec
cld
iret
mov
cmpsl
lods
movsl
push
cmp
xchg
dec
add
in
xor
dec
out
xchg
inc
xor
sub
mov
mov
addr16
ljmp
test
pop
pushf
xlat
push
cltd
in
in
rorl
lcall
xchg
inc
sti
bnd
rorb
subb
rcll
clc
rcl
push
pop
test
decl
incl
pop
push
xor
xor
cmc
push
dec
push
fistl
mov
mov
adc
not
pop
lret
cmpb
out
bound
je
daa
dec
pop
mov
xchg
shr
pop
cmp
gs
les
cli
push
ficompl
ja
call
scas
or
pushf
jmp
xor
inc
and
ja
fsubs
push
decl
outsb
insb
sub
int
ss
xchg
bswap
insl
mov
out
sbb
inc
mov
mov
jmp
xchg
push
addr16
int
shrb
bound
vmovsldup
xor
jae
jle
jmp
adc
jecxz
idivl
pop
sarb
fildll
cld
dec
mov
inc
lcall
aad
mov
dec
daa
mov
sbb
out
sub
and
mov
jge
push
ljmp
mov
movsb
lret
pop
and
movsl
inc
mov
adc
mov
add
pushl
movsl
cmp
or
testb
insl
das
fimuls
or
push
xchg
lret
pop
mov
mov
jl
das
je
mov
xchg
push
adc
mov
mov
or
gs
lds
and
inc
mov
outsb
mov
pop
test
ljmp
mov
jmp
push
push
sti
xchg
push
pop
gs
xchg
orl
jbe
sti
cmp
dec
in
leave
shrb
das
lea
imul
jl
jecxz
stos
lods
shl
dec
daa
aad
sub
cltd
scas
jg
fs
xor
push
mov
pop
inc
dec
hlt
and
sub
mov
leave
inc
mov
call
sub
jns
push
lds
test
add
xor
push
push
rorb
jmp
test
mov
sbb
pop
xor
adc
sbb
push
dec
je
pop
lcall
mov
ja
mov
cs
pop
sbb
mov
mov
mov
mov
jg
jmp
push
shll
push
fistpll
jno
sbb
xor
inc
push
out
and
dec
jnp
lcall
cltd
fstl
sbb
push
les
add
push
jb
sub
cmp
cmp
jmp
pushf
push
push
pop
sti
js
mov
out
loop
gs
out
scas
xbegin
lret
ret
xchg
xchg
pop
jg
decl
jo
shlb
movl
pop
cmp
incl
or
shlb
xor
ficoms
clc
das
mov
jne
dec
inc
mov
xchg
and
jmp
outsl
js
mov
ss
jnp,pt
mov
lods
fdivrl
adc
sbb
ja
dec
cltd
fisttps
inc
in
in
sub
test
jp
lea
cli
pop
sub
cmp
cld
outsl
call
mov
test
inc
jp
adc
xchg
xor
mov
mov
iret
in
add
pushl
or
clc
jns
and
and
sbbb
fbstp
mov
mov
add
nop
test
mov
jb
dec
mov
adc
or
mov
test
popa
mov
dec
loopne
orb
arpl
pop
sbb
decl
mov
shl
cs
rcll
mov
test
pop
mov
dec
cmp
pop
lea
inc
ret
mov
sbb
nop
xor
rol
fstpt
and
mov
inc
jle
jb
das
jl
and
aad
or
cli
mov
pop
lcall
push
fists
pop
inc
or
in
add
aam
in
sbb
insb
mov
incl
mov
push
shrb
sbb
iret
fidivrs
and
cmp
pop
pushf
pop
std
mov
aaa
dec
pop
mov
mov
faddl
jecxz
mov
incl
imull
jo
daa
mov
cmpb
sbb
xor
add
pushl
push
jns
outsl
arpl
aaa
je
xlat
cli
xchg
inc
lods
mov
movsl
push
mov
dec
cwtl
adc
push
lcall
loope
mov
jg
in
fwait
int
notl
xchg
xchg
fisubs
pop
ljmp
jae
icebp
incb
or
jns
dec
test
xor
push
sbb
adc
ret
dec
shlb
and
nop
dec
hlt
loope
test
xchg
jae
xchg
push
fstl
loopne
jle
out
mov
clc
or
loope
adc
sub
dec
mul
minps
sarl
decl
lds
mov
popa
ss
loope
cltd
leave
pop
sub
ret
add
mov
jp
xor
pop
inc
je
les
fstpl
andb
inc
pop
insb
ret
sbb
xor
loopne
fistpl
jbe
mov
lods
rclb
je
add
xchg
push
mov
jp
adc
or
jno
mov
pushl
stc
aad
cmp
mov
lds
lret
pop
cli
push
pop
daa
jb
add
mov
jmp
popf
orl
jno
fidivrs
sub
mov
adc
cmp
xchg
mov
sbb
and
imul
jmp
or
cmp
jne
addr16
mov
hlt
add
mov
popa
sub
dec
int3
sbb
mov
push
imul
push
jp
and
call
fsubrp
jle
rorl
or
stc
lcall
loopne
mov
ja
dec
adc
stos
movsb
lcall
mov
mov
mov
inc
xchg
push
ljmp
scas
adc
ret
jne
adc
mov
fs
int
xchg
inc
popa
lcall
test
fiaddl
popa
lcall
push
sub
jge
dec
repnz
fldt
jg
push
stos
cmp
push
hlt
fcmovnbe
lods
scas
jne
mov
divl
call
mov
sub
jo
or
mov
jg
pop
mov
inc
shll
fbstp
cld
scas
in
out
add
pusha
or
sub
sbb
iret
mov
ljmp
lea
dec
jp
ja
iret
and
imul
lret
pop
sahf
adc
lds
or
pop
hlt
je
mov
inc
jle
scas
and
pop
loopne
push
clc
cmpsb
push
std
add
dec
inc
popa
sub
pop
sub
ljmp
xchg
mov
or
cwtl
and
cmp
sbb
fnstsw
loope
dec
push
pushf
pop
push
pop
ljmp
hlt
push
fs
sub
js
ja
mov
das
aam
and
cmp
or
xchg
pushl
cmp
cmp
push
icebp
mov
jg
test
jle
aas
test
cmp
mov
jmp
es
test
cwtl
out
ret
jb
sub
mov
push
sub
sbb
ljmp
mov
jno
cmp
or
inc
sbb
roll
rol
pop
dec
loopne
xor
or
mov
mov
insb
lea
lea
pop
lods
ja
ljmp
dec
push
std
cmpsb
pop
clc
xor
pushf
mov
addr16
xor
inc
test
mov
and
call
rep
dec
testl
or
jno
loopne
mov
mov
stos
jno
pusha
bound
lret
loope
sbbb
mov
inc
shlb
pop
test
ret
fldt
adc
out
clc
dec
bound
or
or
mov
lcall
xor
loope
or
cmpl
mov
mov
andl
fs
ljmp
stos
xor
sub
adc
movsl
inc
incl
sub
or
sub
mov
out
add
call
jl
fcomi
int
call
jecxz
jmp
cmp
cmp
pop
mov
add
adc
call
stos
push
pop
std
es
cmp
btr
adc
xchg
sbb
lock
fistpll
jle
int3
fwait
xchg
adc
ljmp
xchg
and
call
andb
stos
adc
sbb
push
in
orb
enter
notb
scas
xchg
push
fcmovb
lds
push
sbb
dec
outsb
int
sbb
lcall
mov
dec
orl
jno
data16
sub
arpl
test
cmc
inc
out
xchg
incl
adcl
and
jl
dec
xchg
or
dec
inc
test
aad
loop
cmp
sub
cli
sbb
mov
es
dec
lcall
arpl
push
pop
rclb
cli
sahf
stos
pushl
nop
sbb
int3
xchg
pop
jmp
bswap
mov
call
lea
mov
loope
cmp
leave
xchg
mov
mov
ljmp
imul
mov
xor
jae
movsl
inc
incl
cmc
or
add
cwtl
stc
xor
or
xchg
lret
mov
xchg
mov
aaa
std
call
sub
dec
aaa
xor
pop
pop
inc
push
pop
cs
popf
dec
outsl
jbe
sub
decl
xor
mov
push
xor
pop
xor
std
addr16
lods
adc
ljmp
mov
addl
mov
mov
mov
shr
mov
sub
daa
nop
stc
out
mov
pushf
sbb
ljmp
add
or
rol
cmp
mov
sub
dec
fimull
movsb
loopne
jg
jbe
flds
mov
xor
iret
inc
imul
and
idiv
call
mov
push
mov
add
jmp
ret
xlat
je
xor
icebp
jmp
mov
jno,pt
shlb
adc
loopne
es
push
std
lcall
cs
imul
lds
lcall
push
adc
clc
mov
scas
xor
cmp
incl
mov
das
lahf
outsb
add
xor
ret
jle
mov
inc
outsl
mov
pop
cli
sbb
xor
lock
cmp
jecxz
mov
jno
ljmp
imul
sbb
out
dec
rorb
mov
add
lahf
fimull
mov
mov
adc
jmp
outsl
out
mov
shrb
fsubrp
sarl
mov
dec
insb
xchg
js
inc
cmc
lods
loope
dec
rolb
mov
jnp
push
dec
cld
xchg
call
ret
mov
inc
mov
sbb
xchg
xor
xor
xorl
mov
shrb
popf
adc
decl
push
mov
negl
jecxz
mov
ds
fwait
mov
sbb
lcall
pushl
loope
jle
inc
jo
sub
imul
loop
stos
call
in
mov
sub
dec
add
mull
sahf
cmp
ljmp
fmuls
sbbb
dec
into
and
lcall
dec
dec
jle
fsubr
push
xor
cmp
test
fidivrl
fcomip
incl
je
or
lock
cmp
in
insb
push
pop
daa
pushl
mov
cmp
icebp
xchg
mov
fisubrl
mov
sub
cltd
fdivr
and
cmpb
sbb
test
jmp
pop
jg
scas
es
lock
gs
push
int
mov
mov
push
incl
push
cmp
movsb
cltd
xor
rolb
pop
cltd
insb
aas
adc
in
popa
ljmp
addr16
xchg
jnp
ds
jno
mov
pop
out
lcall
mov
inc
adc
pop
xchg
scas
jns
rolb
out
jb
popa
iret
add
pop
insl
sar
push
out
xchg
popa
std
in
ss
mov
mov
pop
imulb
cmpsb
cmp
rcl
mov
pop
sahf
stc
ror
pop
mov
adc
lea
mov
in
lods
jne
inc
mov
aad
xor
sbbb
je
mov
mov
cs
jle
out
add
call
sub
inc
adc
aam
fwait
shl
mov
sahf
sti
mov
inc
xor
stos
mov
imull
addr16
enter
sub
adc
leave
nop
lock
jmp
xor
or
sbb
adc
and
push
adcb
cmp
mov
jmp
ret
data16
lcall
lock
incl
xor
jmp
push
sbb
les
packsswb
aaa
addr16
cld
fisubrl
mov
insl
sarb
sbb
jecxz
or
ljmp
fnstsw
jno
xor
jg
push
pushl
je
and
mov
test
cmp
jae
sbb
sbb
outsb
inc
jg
lahf
pop
mov
lods
std
cs
mov
pop
jne
adc
jns
es
mov
xchg
sub
rolb
subb
pop
div
nop
in
fisubrl
cwtl
bswap
orl
xor
stc
into
push
aaa
aaa
sub
lcall
or
fistps
sub
push
lods
call
imul
add
lcall
test
sbb
lahf
inc
insb
adc
test
mov
mov
inc
shll
out
inc
push
ret
mulb
call
clc
stos
mov
cmp
sar
ret
cmpl
or
push
push
out
in
fisubrs
dec
hlt
cmpsb
mov
jg
in
fldt
or
incl
fdivrl
pop
mov
insl
faddp
pushf
sub
shlb
jmp
mov
pushl
les
jno,pn
rolb
int
or
shll
lcall
cmpb
in
xchg
nop
pushf
mov
dec
cld
add
iret
xor
mov
ret
mov
xor
fs
ljmp
adc
push
pop
mov
push
cmc
pop
testb
xor
shl
push
aas
dec
jp
sub
push
std
sub
aas
cmp
pop
inc
dec
mov
xor
push
mov
pop
jno
add
scas
lcall
mov
mov
scas
cmp
mov
push
sub
dec
xor
cmp
xor
lods
mov
jb
outsl
dec
dec
shll
jbe
add
lret
pop
clc
outsb
ljmp
es
pop
out
pop
mov
jge
gs
lock
push
sarb
ljmp
xorl
clc
in
lods
inc
mov
fnstcw
decl
lds
pop
mov
les
xor
xlat
cli
sbb
addl
lcall
or
sbb
jecxz
divb
mov
add
xchg
cmp
and
insb
cmp
adc
mov
aam
push
movl
cmp
and
stos
mov
pushf
mov
adc
mov
ljmp
and
cmc
loop
mul
mull
dec
mov
xchg
mov
cmpsl
fucomp
decl
sub
mov
js
and
pop
or
addb
jp
inc
mov
stos
pushl
stc
pop
jle
xor
pop
pop
push
lea
sbb
dec
mov
out
cmp
jns
in
xchg
and
ds
jge
das
out
pop
test
imul
inc
cmp
jnp
and
pop
rclb
cmp
mov
or
in
pop
inc
dec
mov
or
mov
cli
stos
cmpl
addb
and
inc
sahf
mov
ficompl
xchg
fnstenv
sbb
push
std
std
mov
ljmp
test
add
push
inc
xor
mov
push
cwtl
loope
adc
clc
push
push
cli
fsubp
add
hlt
inc
loope
je
mov
mov
adc
cmp
idivb
mov
mov
adc
fisttpl
push
xchg
or
imul
das
dec
stc
addr16
push
push
add
push
mov
lods
pop
iret
fldl
das
loope
outsl
enter
test
shrb
lahf
aas
dec
mov
mov
lret
pop
subb
or
and
sub
mov
inc
push
les
mov
imul
in
and
and
lcall
mov
dec
and
jne
adc
add
add
and
das
addb
nop
out
add
out
cwtl
ret
ljmp
cli
incl
sti
inc
jbe
jae
daa
ljmp
push
loopne
xchg
adc
incl
incb
sbb
iret
shrl
sbb
int3
cmpsl
mov
lock
sti
rcll
orb
hlt
push
pop
push
xchg
mov
inc
mov
or
dec
jo
jp
add
outsb
mov
ret
adc
pop
mov
incl
imul
call
aad
rolb
pop
xchg
xchg
sahf
stos
push
ljmp
ja
icebp
lea
aam
cmpb
pop
imul
sbbl
xor
fcomip
outsl
clc
xor
or
pop
repnz
jecxz
outsb
scas
divb
add
ja
fnstsw
jne
fwait
ljmp
mov
inc
push
cmpb
aas
movsb
sub
push
ljmp
std
sahf
inc
cmp
sbb
insl
xchg
pop
xchg
mov
jb
clc
pushl
mov
inc
mov
xchg
dec
movups
out
popf
dec
movsl
sub
insb
int
decl
shrb
xchg
sbb
mov
imul
ja
and
dec
xchg
or
cmp
pop
lcall
nop
sbb
into
jns
mov
adcb
in
movsb
add
lret
insb
pop
jp
pop
mov
ljmp
loop
pop
testb
cmpsl
mov
mov
pop
leave
imul
pushl
imull
jnp
loope
push
leave
xchg
les
push
in
inc
mov
inc
mov
incl
rol
add
inc
mov
data16
imul
sub
iret
into
dec
into
fcmovbe
or
je
pusha
jnp
push
push
je
cmpsb
and
jl
lea
push
out
mov
icebp
jmp
mov
in
ja
loope
push
mov
and
jmp
popf
imul
push
pop
sub
cli
cmc
cmp
ficoms
incl
and
xor
mov
or
js
in
loopne
mov
in
cmp
push
mov
aam
adc
mov
mov
scas
inc
dec
or
jmp
cmpsb
and
out
push
lods
adc
mov
adc
mov
add
shll
inc
loop
mov
inc
jno
dec
andb
add
sbb
mov
pop
ret
clc
sub
add
decb
je
loope
jge
hlt
jns
jmp
mov
ss
add
mov
and
xchg
cld
push
mov
sbb
dec
mov
lcall
mov
mov
out
adc
out
sar
cmpsb
cmc
incl
jge
sti
mov
push
shlb
push
push
stc
popa
adc
shrl
mov
pushl
cld
cmpb
rorb
add
inc
pop
inc
fwait
insb
or
mov
sar
jb
mov
mov
mov
push
xchg
notb
mov
imul
ljmp
sub
inc
or
push
ss
mov
push
adcb
scas
es
add
incl
and
ret
imul
fldcw
xchg
pop
pop
cmp
fcoml
xor
xor
rclb
sar
cmp
adc
lret
mov
fisubrs
mov
loop
or
mov
ljmp
or
cmp
psubq
jp
addb
sbb
hlt
insb
decl
inc
std
jle
mov
jbe
mov
jbe
leave
pushl
inc
rcr
mov
repz
pop
fsubrs
pusha
mov
sbb
push
dec
inc
je
je
dec
sar
add
call
and
inc
pusha
mov
out
lcall
outsl
pop
pop
lahf
ffreep
mov
daa
pop
mov
ficoms
sbb
pop
pop
das
cmp
call
mov
sub
stc
les
bound
out
jns
jb
or
push
cmc
sub
inc
mov
add
ret
mov
inc
stos
mov
cmp
jp
subb
ss
insb
sahf
cwtl
nop
icebp
mov
cmp
fcmovbe
lcall
cmp
gs
xor
fmuls
jg
inc
pop
inc
inc
or
and
fwait
stos
jo
call
cli
faddl
add
decl
pop
stc
mov
lcall
sti
xor
movsb
gs
and
idiv
mov
add
xchg
stos
xchg
add
popa
sbb
mov
aaa
clc
cmp
mov
dec
ss
test
test
in
jl
inc
out
int
addb
incl
mov
jl
cmp
pop
cmpl
mov
decl
stc
jl
sub
lret
inc
xchg
mov
jecxz
ret
push
pop
cwtl
jno
lcall
push
mov
mov
adc
stc
push
out
out
sahf
xchg
dec
pop
ret
mov
ret
movsb
nop
adc
insl
fldl2t
cmp
cmp
inc
xchg
xchg
call
add
cmpsb
add
test
mov
movsl
push
pop
jbe
leave
ret
xchg
jbe
jmp
and
repnz
xor
mov
imul
mov
pop
mov
lcall
inc
xchg
testb
shrl
in
inc
jb
in
hlt
scas
xchg
call
cmpsl
mov
popf
sub
into
addr16
pop
loope
sbb
divl
les
xor
cs
cmp
pushl
iret
in
fbld
jle
mov
outsl
push
or
shlb
dec
mov
decl
cmpsl
mov
adc
pop
dec
jecxz
jnp
xlat
in
inc
out
mov
loope
cmp
mov
mov
int
pushf
out
and
dec
push
push
xor
movsb
in
fcoml
push
adc
adc
mov
cmp
xchg
pop
jg
iret
add
dec
lods
mov
push
pop
aas
je
data16
push
in
mov
stc
in
adc
jp
call
pusha
stos
daa
push
and
call
or
call
mov
pusha
jns
outsl
adc
popa
push
pusha
lock
jae
push
inc
nop
push
lods
adc
jge
dec
mov
jno
mov
shlb
xchg
jne
xor
ljmp
add
jecxz
mov
int
test
call
pop
xchg
mov
mov
sahf
lock
fidivrl
adc
loop
sbb
push
in
orl
fists
cs
lahf
mov
push
mov
pushf
mov
call
mov
lea
es
and
in
xchg
jo
std
fisubl
dec
sub
or
lcall
add
enter
or
scas
jb
mov
pushl
and
add
and
mov
notl
sarl
cmc
decl
popf
fidivrs
jnp
ror
xor
adc
adc
xchg
sub
fisttps
jnp
popf
sub
imul
aam
mov
imul
arpl
fsubr
mov
outsl
stc
loopne
das
xor
push
add
inc
arpl
adc
lcall
add
push
xchg
mov
decl
add
or
jl
and
mov
fistps
out
les
adc
push
mov
inc
mov
and
jp
repnz
push
lcall
jo
and
xchg
inc
adc
insb
or
mov
xor
lret
pop
jae
cmpsl
cmc
and
push
lahf
push
lret
push
es
ljmp
aas
fidivrs
mov
dec
insl
hlt
mov
jp
mov
in
jns
mov
xchg
test
aad
xchg
out
mov
mov
fisubrs
call
lock
adc
pop
push
add
inc
or
imul
shlb
loop
jbe
fnstenv
incl
cmp
or
add
jmp
ficompl
cmp
push
push
pop
xchg
mov
sbb
ljmp
aad
add
aas
imul
cltd
loop
pop
std
and
jmp
jno
decl
enter
adc
nop
fsubrp
inc
inc
mov
push
inc
jl
cmp
push
out
dec
lods
out
adc
fdiv
mov
dec
and
jno
lcall
daa
mov
decl
inc
xchg
pusha
jae
aam
cli
pushl
mov
xlat
fyl2xp1
and
shrl
adc
lods
sub
call
dec
lea
jno
inc
ret
popa
in
mov
repnz
icebp
insb
push
jmp
lcall
mov
mov
cld
movsb
add
push
pop
icebp
push
mov
jle
ljmp
push
xchg
jmp
imul
xchg
hlt
cs
or
xor
not
pop
xor
call
mov
sbb
mov
arpl
jb
xchg
jg
xchg
popf
jne
sbb
insl
loop
mov
dec
sbb
xchg
mov
pop
push
push
or
sbb
mov
pushl
jl
jb
mov
sbb
push
mov
dec
ret
cld
inc
cmp
dec
mov
push
and
test
inc
fs
mov
inc
enter
ja
stos
subl
mov
mov
dec
dec
push
push
aad
dec
mov
dec
mov
mov
rorl
call
adc
or
into
dec
dec
outsl
dec
fidivrs
pop
out
cli
ljmp
cmp
cwtl
and
sub
hlt
stos
lret
and
inc
and
movsl
jecxz
mov
ja
hlt
iret
mov
inc
jno
pusha
sbb
lret
mov
xor
mov
sub
lcall
cld
add
inc
lahf
dec
shr
fiadds
loopne
push
push
mov
jae
cmpsl
or
inc
mov
outsl
cmp
or
jmp
aas
push
sub
mov
mov
pusha
sub
jmp
and
arpl
pop
aad
mov
add
divb
mov
test
xchg
call
xchg
aaa
and
inc
sahf
test
lcall
enter
aaa
dec
dec
stos
sar
mov
and
cs
mov
pop
and
mov
cltd
les
push
insb
sbb
jmp
mov
addl
push
es
cwtl
mov
je
push
jg
or
outsl
xchg
add
mov
and
scas
es
in
pop
std
cmc
std
nop
int3
test
add
je
xor
movsl
pushl
xchg
cmc
or
pop
ret
jns
mov
loop
imul
push
rcrb
std
jno
pusha
daa
ljmp
dec
pop
ret
mov
mov
adcb
pushf
jmp
int
daa
lcall
loopne
lods
pop
fbld
push
lea
push
lds
mov
inc
and
repnz
jo
sahf
xlat
call
ss
pushf
sub
jg
push
call
pop
xor
xchg
xor
in
out
jmp
xor
push
cmpb
jge
andb
mov
jle
fs
mov
aas
call
sub
jns
flds
sub
jmp
push
gs
stc
mov
outsb
data16
mov
pop
push
jnp
cmc
dec
enter
inc
pushl
mov
inc
push
xchg
jns
mov
push
addr16
mov
or
jecxz
testl
jle
push
ss
adc
insl
mov
pusha
mov
pop
loope
fimull
pop
dec
nop
leave
sti
sbbb
ljmp
movsl
mov
mov
clc
das
dec
imull
stos
cli
sarl
out
aam
xor
incl
push
in
mov
mov
adc
push
out
mov
ljmp
xor
insb
add
es
mov
push
jne
dec
pop
inc
mov
icebp
mov
jns
cwtl
sub
inc
rolb
decl
ss
push
arpl
sbb
inc
lds
mov
sbb
std
pop
adc
call
cli
mov
insl
punpckldq
push
push
int
subl
out
outsb
outsb
mov
aaa
hlt
dec
jne
iret
pop
sbb
xchg
lock
imul
test
ljmp
xlat
mov
inc
adc
test
mov
fiaddl
add
or
cmpb
cmp
ljmp
icebp
orl
jae
mov
xchg
fdivs
sub
hlt
push
notb
sub
fwait
es
nop
mov
pusha
in
xorl
decl
inc
call
fidivl
fs
push
shll
aad
push
push
daa
addr16
call
dec
xor
mov
cmp
push
ret
orl
cmp
movsb
inc
mov
insl
cmpl
inc
icebp
into
push
cli
jecxz
orw
decl
pop
cmp
dec
jo,pt
aam
jecxz
pop
add
jae
out
jg
lea
adc
push
popf
fisttpll
dec
adc
lcall
fstps
aad
lock
rclb
les
out
fcomp
incl
aaa
pusha
xchg
les
inc
lea
sub
pop
test
cmp
decl
or
mov
lahf
xchg
outsb
outsl
and
push
mov
cmp
fcmove
repnz
aas
cli
incl
dec
testb
mov
std
mov
cwtl
xchg
lods
es
out
xchg
lock
fwait
gs
loope
inc
das
jg
pop
pop
ss
jg
ljmp
push
sbb
xor
cmpsb
cwtl
insb
imul
decl
xchg
lret
push
push
xor
inc
repnz
frstor
lahf
add
test
ja
ss
shll
mov
push
cmp
cltd
fsubrl
sar
pop
jecxz
imul
xchg
data16
fistpl
jg
inc
mov
stos
ljmp
mov
mov
push
jbe
mov
dec
mov
and
mov
ljmp
mov
xor
rorl
fs
pushl
lea
dec
fs
or
sbb
push
inc
pop
cld
lcall
lret
mov
mov
mov
pushl
cmp
mov
push
adc
jmp
rclb
nop
imul
pushf
add
push
jns
and
adc
lea
cmp
mov
and
cmc
ljmp
mov
pop
mov
stos
call
xor
jle
outsb
lret
ret
mov
xchg
jbe
fdivp
scas
or
jae
or
clc
inc
dec
mov
push
add
enter
decl
lock
lcall
jns
and
imul
and
push
add
in
pop
jns
push
idivb
bound
inc
mov
sar
out
dec
mov
mov
in
xchg
mov
jmp
mov
loop
out
popf
inc
repnz
ret
int
sub
sarl
fimuls
out
lcall
fcmove
std
incl
jge
call
aaa
mov
xorl
in
dec
or
insb
xor
test
jbe
push
dec
testl
cmp
jmp
imul
scas
clc
les
push
push
icebp
sub
ficoms
dec
leave
push
add
mov
ss
inc
rclb
adc
adc
or
or
scas
mov
xor
lcall
int
add
pushf
dec
push
mov
cltd
and
outsb
pop
enter
cld
sub
mov
jg
ds
sbb
loopne
push
jno
stos
loope
nop
jns
test
out
sbb
dec
shll
add
mov
push
push
lods
cmp
cmp
adc
fnsave
xchg
sub
xchg
xchg
jnp
adc
pushl
lock
stos
adc
or
mov
lock
inc
mov
sbbb
lret
and
cwtd
mov
add
sbb
cs
loope
lods
push
cld
mov
in
incl
cltd
inc
test
rorl
out
lea
fcoml
fdivr
idiv
jl
add
dec
cmp
out
lds
cs
dec
sti
add
cmp
sbb
ud0
incl
add
xor
add
and
nop
enter
xchg
clc
sub
mov
incl
sub
jo
lret
icebp
cld
xor
outsb
mov
inc
inc
enter
inc
test
lret
xlat
insb
sbb
mov
dec
jle
test
jge
fsts
xor
out
ret
incl
jae
mov
mov
pushf
xor
shrb
pop
out
cmpl
ljmp
jge
loopne
ds
jno
xchg
daa
and
dec
push
hlt
fwait
sbb
mov
arpl
stc
sbb
mov
jle
ljmp
jo
aad
cmp
fwait
add
out
xor
add
ja
jne
dec
outsl
sbb
ret
dec
jno
insl
fs
dec
inc
iret
push
stc
push
inc
mov
ds
add
sub
imul
cmp
sub
ljmp
xchg
mov
mov
add
ret
sbb
push
jg
fldt
stos
ffreep
loopne
pop
cli
cmp
push
rcll
test
inc
imul
inc
pop
inc
sbb
mov
sbbb
shr
aad
sub
leave
pop
shlb
lcall
mov
mov
sbb
sub
push
add
mov
mov
pushl
in
loope
jge
inc
mov
shrb
jge
sbb
shll
inc
dec
mov
ss
fdiv
push
pop
call
xchg
xchg
fwait
ss
mov
pop
mov
in
adc
sbbb
mov
insl
or
xlat
push
sbb
mov
addb
iret
outsb
mov
inc
add
int
shrb
push
mov
pushl
fmuls
in
test
pop
sahf
mov
mov
sbb
cmp
shll
clc
ljmp
xrelease
inc
push
imul
leave
stos
insb
sbb
pop
xor
cwtl
int
decl
or
fists
clc
xor
sbb
popa
movsb
loop
push
aaa
mov
sbb
inc
pusha
bound
mov
dec
lret
or
add
popa
jbe
jp
dec
xor
cli
push
inc
push
mov
pushf
mov
mov
mov
and
lret
cmp
out
sbb
jecxz
or
ja
push
sbbb
call
pop
fcomp
xor
ss
and
hlt
mov
inc
std
call
or
adc
cmp
mov
pop
jp
sti
sub
mov
hlt
mov
or
repnz
mov
cmc
jg
mov
pusha
mov
sbb
ljmp
stc
lcall
mov
int3
adc
mov
add
jb
push
mov
pop
pop
jl
sti
mov
lahf
push
adc
mov
lds
push
or
pushl
or
testb
das
pop
cmc
adc
adc
jmp
in
sub
add
mov
and
stc
out
loop
push
sbb
xchg
pushf
insb
lcall
xor
sahf
in
adc
fcomps
jno
xchg
scas
aam
data16
cld
shl
lea
mov
clc
jmp
or
insb
fidivrl
pop
mov
xlat
jle
jge
int3
pop
xor
mov
adc
sub
rcrl
sbb
or
subl
leave
cmp
pushl
jae
sar
add
xchg
pusha
and
mov
movsb
dec
sub
les
mov
push
lea
incl
movl
lds
fldcw
pop
hlt
mov
in
inc
lds
imul
pusha
jne
ljmp
jl
sti
int
sub
fimuls
lods
cmp
out
sub
mov
sbb
lcall
mov
dec
jne
adcl
pop
outsl
mov
mov
call
fldl2e
sub
mov
fisubrs
lds
pop
enter
jle
filds
mov
pop
cld
ds
popf
fisttps
loopne
add
jg
push
sahf
idivl
inc
sbb
cld
ljmp
iret
add
gs
in
and
cmp
ljmp
daa
inc
imul
add
jp
andb
pop
insb
int
lock
pop
bound
sbb
mov
sub
ljmp
jns
movb
pop
inc
loopne
inc
push
je
push
stos
push
std
add
adc
fdivs
pop
jge
aas
inc
mov
stos
dec
xor
fwait
cltd
orb
jge
ljmp
pop
adc
mov
and
xor
cmp
sub
leave
fidivrl
and
clc
add
jo
fcomip
xor
test
sub
movsl
and
mov
jmp
dec
lods
fisttps
in
stos
popf
int
sbb
nop
inc
imul
xor
inc
int3
outsl
rcll
fwait
rorb
jno
xchg
jg
outsb
jno
add
scas
cmp
imul
cmp
mov
movlps
call
mov
inc
cmpsb
pop
aas
dec
pop
or
jecxz
mov
popa
xchg
scas
stos
lods
mov
test
hlt
imul
sbb
push
xchg
mov
cltd
xchg
mov
loop
mov
jp
and
imul
mov
cmp
call
stos
in
call
data16
ret
test
xchg
xor
jp
sbb
jbe
push
pop
in
lret
ud0
jmp
push
cmp
push
mov
outsb
mov
std
or
cmpsl
push
dec
mov
push
fiaddl
adc
lcall
testb
push
xlat
test
leave
aam
push
xlat
push
fcmovb
mov
pause
mov
decl
mov
jb
lock
xchg
mov
lret
es
fcmovnbe
or
xchg
imul
scas
popf
pop
in
mov
dec
push
daa
lods
ljmp
cli
pushl
inc
push
pusha
jg,pt
popa
cld
jno
sarl
rcr
pop
outsl
add
decl
add
pop
fdivl
push
fcmovnu
repz
or
push
mov
loop
mov
cli
sbb
cmp
pusha
int
ret
dec
xor
es
or
pushl
ss
loop
in
mov
jne
andb
enter
cltd
ds
dec
pop
out
lcall
sub
pop
in
push
sbb
xor
ret
or
sbb
out
mov
test
repz
ret
inc
pop
je
inc
ret
or
mov
add
decl
scas
cld
jne
cvttps2pi
jo
icebp
in
popa
shll
out
add
shll
sbb
hlt
cld
mov
cwtl
or
jns
mov
imul
mov
add
lret
pop
xchg
call
adc
test
js
mov
add
int
leave
jmp
pop
addl
jmp
inc
fstl
xor
sbbl
sub
inc
xchg
cs
ljmp
push
ss
clc
jmp
xor
dec
or
ret
call
jmp
push
adc
outsl
mov
mov
fwait
add
sbb
in
xchg
and
jge
scas
xor
add
idiv
adcb
pop
cmp
cmpsl
push
enter
out
fstps
cltd
scas
dec
mov
bound
xor
repnz
mov
into
dec
sti
xlat
nop
sub
in
xlat
jmp
adc
fistpll
imul
fisttps
jae
pop
xchg
push
and
imul
loop
fwait
mov
jae
mov
lcall
mov
xor
call
cmc
pop
pop
imul
adc
repnz
push
push
out
mov
or
inc
daa
repz
incl
iret
cli
outsl
push
dec
dec
push
cli
rcr
mov
adc
push
divb
cmpsl
xlat
js
mov
loop
dec
in
push
cmp
sbb
imul
jns,pn
cwtl
mov
test
decl
int3
inc
pop
or
inc
out
or
ja
pop
pop
repnz
bound
mov
inc
pop
mov
push
sbb
rol
jp
add
sarb
inc
and
mov
fcmovne
pushl
jmp
repz
enter
test
out
addr16
hlt
xchg
scas
mov
pusha
xor
add
out
decl
insl
iret
popf
jecxz
cltd
mov
sub
mov
cmp
push
sub
decb
sti
shrl
mov
push
jg
add
cltd
pop
mov
push
stc
sub
add
mov
outsb
mov
mov
jecxz
ljmp
aaa
pop
sar
sub
ja
xchg
fsts
fistpl
out
xor
test
out
dec
or
xchg
mov
lds
ljmp
leave
inc
movsl
sar
incl
xor
mov
mov
mov
sbb
inc
cmp
std
enter
fstp
sar
mov
subb
movsb
repnz
adc
inc
dec
xchg
movsl
addr16
lret
jmp
dec
in
add
pop
mov
or
xchg
xchg
lea
fs
call
outsl
in
scas
fsubrs
sbb
mov
fwait
inc
lock
ljmp
jecxz
ds
je
lcall
fidivrs
aas
dec
jb
add
jle
aam
cmp
or
into
mov
or
shll
add
ljmp
lret
gs
push
loope
pop
aaa
pusha
nop
cmp
dec
xchg
or
popf
roll
ss
dec
push
sbb
push
loopne
in
ljmp
test
adc
cwtl
adc
sub
mov
push
and
sti
pop
aas
mov
loop
xchg
hlt
incl
clc
loope,pt
rclb
cmp
popa
jle
add
scas
cltd
dec
mov
scas
jge
sbb
lcall
cmpsb
ss
add
dec
lods
imul
mov
inc
pop
jmp
dec
adc
rclb
out
cmpsb
lret
out
push
or
xchg
rol
jmp
xor
lcall
xor
rorl
cmpsb
mov
lahf
adc
jg
lret
inc
sahf
adc
push
add
push
stos
and
orl
arpl
test
movsl
mov
xchg
lock
push
dec
imul
enter
inc
jp
push
jecxz
std
push
sub
pop
arpl
leave
jo
ljmp
aam
loope
cmp
sarl
add
stos
inc
movsb
idivl
aas
cmp
dec
fists
xchg
out
call
andb
sub
lcall
lahf
mov
sti
add
stc
or
mov
inc
in
sbb
call
dec
fidivl
roll
adc
insb
push
jno
ret
sub
jmp
fisubl
lcall
mov
pop
adc
orl
push
adc
lea
call
and
pop
pop
jge
mov
pop
pop
lcall
out
cwtl
loop
adc
push
jg
sub
sub
in
int3
jge
pop
mov
scas
gs
fldenv
sbb
ljmp
dec
jp
shll
cwtl
xchg
addl
nop
xor
decl
test
mov
mov
in
aaa
mov
sarb
cmpsl
mov
jmp
inc
fwait
orl
mov
ja
sti
push
fsubs
lock
push
adc
xor
fisttpll
in
mov
test
or
mov
inc
loope
out
sbb
xchg
xchg
sbb
jmp
cmp
shll
in
add
inc
call
lret
movsb
xor
scas
add
lcall
mov
iret
call
in
xlat
jge
nop
or
sub
push
iret
jbe
pop
inc
pop
adcl
pop
add
sub
lods
data16
jns
dec
dec
sti
cmp
lcall
arpl
mov
pop
adc
xor
dec
cmp
nop
inc
ss
dec
push
pop
cli
inc
flds
fisttpll
dec
test
fisubl
je
jns
add
scas
frstor
sti
stc
pop
push
dec
mov
mov
fcomip
pushl
sub
or
inc
pushw
popa
xchg
in
lods
repz
in
or
jmp
lods
push
jg
adcl
push
and
cld
mov
enter
adc
imul
xchg
test
or
outsl
clc
push
sub
hlt
lret
mov
push
call
sub
jae
aas
jbe
subb
add
xchg
leave
imul
out
movsb
lock
incl
insb
pop
jp
pop
stos
pmaddwd
mov
scas
int3
xchg
jg
or
jo
int3
mov
mov
xchg
bound
mov
aaa
mov
enter
add
jp
inc
ret
pop
xor
punpckldq
decl
push
mov
pushf
xchg
pop
imul
adc
ja
push
loopne
add
fcos
incl
cmp
movb
xchg
push
jp
mov
fwait
xor
sub
dec
stos
xor
ret
push
aam
pop
aas
pop
xchg
popf
call
int3
fbstp
js
stc
std
lcall
xchg
sub
jecxz
and
sbb
xchg
scas
loope
ret
ljmp
or
lea
test
push
cmp
inc
mov
int
pop
iret
jmp
aad
pusha
jmp
test
out
pop
add
sub
cmc
push
stc
enter
add
fcomps
fdivrl
xchg
test
mov
cmp
jg
dec
jno
mov
dec
pop
sbb
nop
jle
cmpb
push
outsb
fnstenv
inc
jg
mov
push
xchg
add
mov
xchg
mov
rcr
cld
xchg
subl
xor
ljmp
xor
in
xchg
daa
add
lods
dec
cmpsl
dec
call
inc
rolb
inc
aaa
cmovs
mov
leave
and
push
xor
stos
or
mov
adc
lcall
aam
cmpsl
test
and
les
jmp
jmp
arpl
pushf
lret
insb
sub
faddl
push
sub
dec
ficompl
or
fists
mov
adc
adc
nop
mov
rcrb
lcall
decl
dec
sbb
mov
mov
ljmp
sub
mov
sub
incl
mov
mov
hlt
ljmp
jmp
pop
xchg
leave
js
sbb
notl
mov
fucomi
loopne
mov
jp
push
dec
mov
inc
or
gs
mov
sub
xor
mov
adc
xor
mov
stc
push
out
clc
mov
mov
hlt
aad
mov
ja
push
scas
std
pop
cmp
lods
xor
mov
pushl
nop
and
stc
aad
sub
out
mov
sub
fisubl
or
incl
lcall
mov
jnp
cmp
cltd
lret
lock
pop
inc
sbb
popa
xchg
sub
jg
rclb
ja
in
jle
inc
cmp
or
fcos
lds
js
mov
ja
jmp
push
out
loope
aam
or
loop
sub
mov
sub
frstor
or
push
lret
cltd
out
xchg
mov
jne
insb
repz
and
jne
inc
addl
jmp
and
and
mov
jge
mov
daa
addr16
into
mov
mov
scas
jl
rorb
in
decl
incl
arpl
mov
loop
rolb
inc
sbb
push
cs
push
sub
test
mov
test
mov
lods
repz
or
adc
or
mov
xlat
push
les
fcomps
out
adc
push
inc
data16
mov
pop
jbe
dec
and
fimuls
mov
jmp
loopne
fwait
adc
and
cli
add
rorb
inc
pop
fcmovnbe
sarb
ffree
xor
fwait
push
adc
std
jae
or
mov
rcrb
cld
ljmp
dec
add
and
int
mov
and
push
push
lcall
inc
jp
sub
xlat
daa
mov
sti
loope
lock
jmp
int3
fs
ljmp
movsb
xchg
add
and
fucomi
fldenv
mov
mov
sbb
sahf
shr
adc
decl
adc
mov
sbb
sbb
jg
pop
pcmpgtw
add
aad
mov
ja
ret
cmp
inc
std
mov
bnd
mov
mov
iret
cltd
push
mov
popa
aam
pushl
sbb
push
es
pop
popf
lds
mov
aas
dec
dec
mov
push
xor
xor
sub
inc
dec
lcall
pop
xor
push
xchg
sahf
jns
sbb
call
stc
outsb
cld
inc
xchg
loopne
and
cmpsb
mulb
int3
adc
loop
adc
cs
cmp
mov
push
sar
mov
pop
cmp
int3
lock
jp
jnp
popf
add
ret
bound
pushl
push
out
sub
jmp
xor
leave
rcrl
scas
pop
inc
enter
call
ljmp
andl
lock
fisubl
cmp
sbb
pushf
cmpsb
int
inc
jl
out
testl
cmp
jp
scas
clc
call
jne
xchg
fcomps
in
into
xchg
jecxz
cmpsl
insb
fwait
xchg
loop
shlb
inc
jg
incl
mov
dec
push
sahf
out
jecxz
jno
or
lret
cld
xchg
sub
dec
adc
cmp
orb
cmpb
dec
popa
sub
int
xchg
push
mov
test
imul
mov
mov
mov
out
jbe
or
xor
pop
cmp
mov
daa
pushf
arpl
or
sbb
jo
repnz
pop
mov
js
nop
dec
jno
pop
hlt
dec
jl
sub
jbe
or
sti
dec
push
jecxz
lods
mov
mov
dec
push
clc
out
mov
jbe
adc
push
call
loop
cmp
je
dec
cli
fwait
xor
aaa
adc
push
or
lret
pusha
mov
faddl
incl
ja
xchg
ja
into
xor
jg
cmp
sbb
inc
fdivrl
add
call
cmpsl
push
add
mov
adc
xor
in
push
sbb
adc
inc
mov
jg
ljmp
and
not
stc
add
push
and
inc
jle
ljmp
adc
loop
dec
mov
jecxz
jmp
cmpsb
xor
sahf
add
sbb
inc
mov
pushl
xchg
repnz
push
or
bound
ror
xor
fs
filds
mov
pushl
mov
loope
cmpb
mov
push
push
push
jb
fldt
jp
cmp
rorw
fildl
mov
xlat
add
hlt
cwtl
fiaddl
inc
repnz
or
loop
add
ljmp
fdivrs
out
jnp
inc
enter
mov
inc
mov
adc
xchg
lock
call
xchg
sbb
cltd
pop
mov
push
rcr
add
dec
enter
dec
test
lcall
sbb
mov
test
fisubl
cld
inc
mov
popf
ds
jg
daa
outsl
lock
mov
loop
dec
cmpl
in
push
xchg
gs
mov
mov
mov
mov
xor
js
imul
add
pop
cltd
push
daa
cmpsb
movsb
sub
xchg
in
sub
fildll
sub
fists
mov
test
mov
jmp
int
std
vorps
fsubl
and
pop
add
mov
cltd
pop
cmp
std
jle
cld
orb
dec
movsl
rcrl
data16
inc
inc
sbb
pushl
lret
sbb
mov
sub
sti
jl
adc
and
dec
outsl
or
call
stc
sbb
mov
xor
xchg
pop
mov
es
clc
arpl
cmp
pop
test
mov
test
stos
push
stos
jle
cwtl
decl
sub
fsubrl
popa
jecxz
ss
sub
jb
cld
jp
jb
or
adc
jg
sub
push
mov
iret
cmp
lret
inc
push
lahf
fldl
adc
dec
loop
std
addb
dec
jecxz
or
rorb
xchg
inc
xor
jmp
insl
sub
out
mov
jae
mov
icebp
adc
mull
jle
decl
adc
mov
addr16
imul
lcall
adc
jp
in
or
aaa
add
aas
pop
in
lcall
sbb
mov
pop
fcomip
jg
out
mov
les
sbb
inc
jbe
lea
dec
xbegin
add
push
js
jmp
test
inc
in
mov
out
out
push
incl
dec
cmp
icebp
or
in
inc
pop
mov
push
add
push
or
jns
jle
daa
pop
adc
imul
aaa
das
ss
cli
pop
or
lahf
popa
decl
mov
dec
in
lds
pop
gs
js
inc
scas
adc
push
pusha
rolb
push
test
xchg
jg
lcall
sbb
cmc
iret
push
das
lcall
cmpsl
push
nop
jmp
mov
fidivrl
sbb
incl
inc
imul
xchg
movsb
stos
adc
ljmp
pop
push
xor
sbb
push
dec
inc
mov
cld
loop
xor
jge
out
add
inc
inc
inc
loopne
incl
cs
cmp
shrl
jno
xor
cmp
adc
or
mov
mov
lds
andl
test
fldl
xor
inc
cld
and
cmpsb
jge
mov
sbb
add
and
add
fimuls
loop
xor
xchg
fcmovnbe
or
sbb
push
push
hlt
dec
out
daa
fisubrs
sub
mov
fwait
shl
ja
pop
aas
sub
ret
incl
addb
add
or
mov
add
cli
mov
out
call
sar
int
and
jge
sarb
push
pop
out
or
lods
jecxz
dec
cmp
or
jle
cmp
or
in
mov
cmp
pop
adcb
sbb
das
enter
test
pop
std
or
ss
jmp
push
mov
jg
idivb
mov
mov
mov
sub
lret
aam
inc
movsl
jle
and
dec
inc
testb
cld
ljmp
push
dec
insl
dec
pop
xor
out
inc
mov
mov
add
xchg
cwtl
xchg
jg
and
xor
sbb
lods
mull
pop
ja
lcall
mov
mov
jno
push
cmp
jle
mov
sbb
ffree
add
sbb
jb
out
mov
jg
cmpsb
je
inc
xchg
enter
stos
repz
sub
js
mov
mov
xchg
sbb
sbb
std
mov
ljmp
fs
sar
add
sub
mov
fcompl
out
mov
push
adc
ljmp
pop
cmpsl
lahf
and
hlt
mov
cmpb
lahf
fistl
mov
call
dec
scas
shl
orl
leave
jle
pop
arpl
or
inc
and
rcl
cmp
int
outsb
mov
outsl
cmp
pop
push
insb
ljmp
xor
sahf
std
out
js
call
clc
in
jle
add
mov
and
rol
rcrb
pushl
or
lods
lods
push
rol
pop
mov
sbb
shlb
aas
or
call
jl
mov
sub
imul
mov
push
dec
adc
inc
jmp
out
outsl
cwtl
lods
movsb
push
fs
xchg
push
cs
mov
cmc
stos
or
and
push
pop
es
fidivl
enter
ret
insl
repz
test
cmp
xor
xor
je
mov
mov
test
inc
or
add
call
aas
pop
pop
jle
in
or
jno
mov
js
sub
popa
testb
xchg
and
in
push
ljmp
out
aam
mov
loope
inc
jns
xor
sub
stos
jl
out
inc
or
add
inc
mov
notl
or
iret
faddl
inc
es
dec
xchg
pop
xchg
cmp
ljmp
clc
and
push
or
xor
push
or
cmp
xor
pop
test
pop
call
pusha
mov
incl
push
xchg
shrb
add
adc
mov
cld
call
cltd
lock
shll
out
inc
outsl
fstpt
add
mov
mov
jnp
leave
add
mov
insb
cmp
enter
fnstsw
cmp
mov
dec
push
sbb
icebp
rcrb
ret
and
lahf
loope
push
fnstenv
repnz
sbb
cmp
mov
lcall
cmp
imul
das
loop
lock
rolb
in
call
mov
mov
das
xor
xchg
push
mov
cs
stc
add
cli
pop
je
pop
pop
push
out
addr16
adc
cmp
mov
out
dec
push
gs
lcall
mov
nop
xchg
xchg
pop
ljmp
imul
add
push
fidivl
in
lcall
xor
jge
adc
cmp
mov
adc
mov
sub
in
imul
dec
add
adc
sahf
mov
inc
notb
fwait
jmp
decb
mov
pop
jle
cltd
in
jo
out
cmpsl
fisttps
mov
sbb
jmp
in
push
cli
sbb
sbb
push
xor
fistpll
in
or
pop
or
mov
mov
outsb
das
dec
cmp
std
inc
popa
push
repz
ds
jb
sbbl
mov
mov
scas
sub
xchg
je
push
cs
or
test
and
in
jle
cld
stos
ljmp
shr
xlat
ljmp
lcall
sbb
adc
mov
test
leave
scas
xlat
fiadds
fcom
repz
scas
hlt
ret
sar
sub
sbbl
lahf
cwtl
mov
lods
call
daa
dec
or
je
loope
jne
mov
jmp
jge
push
iret
push
push
xchg
cmp
fcmovnb
dec
loope
ret
lds
lods
aam
cmp
std
scas
cli
jmp
pop
movsl
ficoms
sbb
jno
mov
out
test
nop
adc
sbb
and
shrb
leave
cld
fildl
xor
ja
fwait
sar
pushl
outsb
or
cltd
jo
add
xchg
mov
pushf
mov
popf
popf
xor
mov
add
in
shr
lret
out
sbb
rcrl
fdiv
adc
push
or
in
pop
adcl
sbb
pcmpeqw
insl
rorb
std
jge
stos
aad
add
lcall
fdivp
dec
add
xchg
pop
xor
pop
jp
mov
sbb
rcrb
add
jmp
adc
hlt
js
add
pop
jle
push
mov
or
jnp
lock
sti
ljmp
or
and
cwtl
cltd
jl
or
pop
pop
stc
decl
out
fadds
mov
push
inc
cld
lds
push
cmp
cs
lcall
in
lret
std
stc
scas
fdivrl
cmp
mov
xor
ret
pop
ja
fsub
mov
clc
xchg
nop
jnp
lret
in
ret
out
mov
fwait
leave
and
fidivs
jnp
test
jmp
lock
mov
sub
cmc
xchg
mov
mov
shlb
ret
and
ret
push
fdivrp
pushl
js
fcmovnu
test
notl
sahf
loopne
adc
addr16
neg
rorl
push
sub
dec
cmp
lea
dec
pop
xchg
dec
mov
scas
mov
xor
sbb
daa
ss
xchg
pop
lret
ljmp
cli
sub
xchg
test
or
cmp
data16
lcall
or
dec
daa
or
daa
add
inc
ds
sbbl
mov
scas
dec
xlat
out
movsb
jne
jmp
adcb
or
cltd
data16
push
or
movb
stos
push
fdivr
fcmovne
in
jle
hlt
ja
sbb
sar
out
mov
test
inc
sub
dec
fdivr
cmp
sar
inc
jmp
push
in
jecxz
shl
mov
aad
push
sbbl
in
je
fwait
in
adc
call
push
stc
rolb
aad
jge
fadd
mov
pop
pop
mov
cmc
dec
mov
in
cmp
inc
push
cmp
xor
jp
push
inc
ss
pop
mov
imull
push
and
lock
inc
test
sub
cmp
cmovne
or
lcall
mov
mov
jg
fsub
sti
loopne
lds
jle
dec
push
adc
xchg
xorb
push
mov
or
mov
mov
pop
dec
sbb
je
mov
sbb
pop
aam
xchg
jge
push
decl
sahf
add
jle
dec
dec
adc
fcomps
roll
jmp
rcrb
add
cwtl
inc
add
std
cmp
int3
xchg
sub
inc
out
daa
fbstp
xor
ds
and
ljmp
out
call
xlat
fdivr
mov
push
bound
inc
insb
jno
mov
xor
cmp
lock
xchg
movsb
xlat
push
bound
sbb
loop
inc
movsb
jo
insb
outsb
mov
dec
ret
or
pop
out
xchg
sub
ret
rolb
in
cli
pop
nop
add
ja
mov
jp
lahf
fldenv
lcall
or
nop
lods
and
adc
into
and
push
sbb
std
mov
gs
mov
leave
adc
sbb
pop
out
scas
imul
mov
push
push
dec
pushl
sbb
outsl
jp
or
roll
dec
xchg
mov
xchg
aaa
xor
fcompl
sub
ljmp
stos
lock
pop
bound
fsubrl
jle
adc
jbe
test
cmp
mov
decl
rclb
int3
dec
inc
cltd
les
addr16
sarb
nop
std
pop
cmc
dec
clc
pop
sbb
dec
or
cmp
jno
data16
sub
push
std
mov
insb
xlat
outsl
pop
bnd
add
or
jmp
pop
add
inc
jbe
jecxz
cmp
cmp
fnstenv
push
push
and
lods
sub
inc
adc
adcb
or
ret
sub
jne
adc
xchg
insb
or
adc
cmp
mov
mov
xor
push
push
scas
sbb
mov
pushl
pop
lret
add
jns
imulb
sar
daa
insb
les
stos
jmp
insl
inc
roll
or
cmp
sbb
mov
ljmp
sti
sub
movsl
jg
out
cmp
or
mov
mov
jnp
fsub
xorl
push
stos
mov
mov
xchg
xchg
call
mov
adc
add
in
stos
insl
outsb
push
fadd
mov
push
jg
pushl
scas
sub
jbe
ret
pop
push
add
mov
rorl
jl
lea
arpl
ds
cmp
cld
sti
inc
lea
adc
push
incb
notl
shl
and
push
lahf
nop
sub
pusha
adc
incl
loopne
mov
movsl
mov
inc
sarl
pop
adc
int
mov
or
arpl
sahf
aas
decl
xchg
xchg
decl
lret
ret
pop
mov
cmp
mov
cwtl
cmp
daa
cmp
int
pop
lcall
inc
jno
call
sti
inc
js
out
mov
xchg
adc
fs
cmc
rorb
or
and
add
pop
xor
leave
loop
aas
or
lods
mov
dec
insl
cmp
fwait
xor
out
cli
decl
mov
add
pop
ljmp
cs
loopne
mov
jge
insb
adc
fnstenv
inc
sbb
fsub
mov
es
xor
pushl
test
adc
imul
stc
divb
sti
and
loope
lahf
xor
sbb
fcomip
mov
adc
sub
rcrl
loop
mov
push
xlat
fidivs
mov
adc
fs
push
push
sub
or
es
and
pusha
clc
nop
adc
fisttpl
mov
movsl
inc
dec
sbbl
jle
dec
cmc
pop
fs
push
adc
lcall
clc
push
lds
mov
adc
dec
jge
pop
mov
ljmp
data16
and
idivl
mov
ljmp
push
sub
mov
jb
mov
sub
ljmp
sub
or
in
loop
lock
in
in
push
repz
xchg
xchg
in
adc
dec
dec
insb
pop
icebp
xchg
jmp
lret
leave
and
jo
xlat
fists
add
dec
xchg
add
popa
and
lea
push
xchg
inc
dec
sbb
je
int3
inc
pop
mov
add
out
inc
divb
xor
int
icebp
cmp
xchg
xchg
repnz
mov
pop
xchg
or
xchg
mov
jecxz
cld
dec
test
dec
cmpsl
xor
mov
cmc
test
sub
cmp
sar
scas
lcall
sub
add
outsl
mov
sbb
pushf
adc
sbb
cmc
aaa
fstps
cmp
das
mov
and
sbb
jp
jno
repnz
loope
cli
jmp
push
pop
inc
sbb
imul
cmpsl
fwait
sbb
test
jmp
lcall
std
out
push
inc
outsl
test
xor
mov
je
jmp
adc
jg
push
mov
fimull
adc
xor
dec
sbb
cld
call
mov
shl
pop
xchg
xchg
stos
sub
or
dec
insl
xchg
mov
inc
mov
sub
test
sub
ret
add
ljmp
pushl
jmp
xor
ss
out
mov
dec
dec
xchg
jl,pt
add
hlt
mov
ret
decl
jg
xchg
fsts
sbb
xchg
xchg
sbb
mov
jno
das
and
jge
hlt
nop
incl
lds
movsl
inc
stos
sbb
sub
andl
fucom
enter
jmp
jl
mov
das
ljmp
sub
inc
jp
pop
jg
incl
das
int3
xor
pushf
push
out
popa
in
lret
or
insb
mov
jmp
sbb
in
loopne
jmp
gs
xor
cmp
push
xchg
ljmp
shr
push
sub
arpl
push
pop
add
scas
mov
xchg
jmp
mov
movsl
sbb
xchg
push
popf
ror
jbe
sub
xchg
shl
jp
pop
add
imul
ljmp
jo
mov
out
push
push
pop
pushf
jmp
push
jnp
xchg
imul
call
dec
je
jl
inc
and
jns
pop
xchg
adc
out
push
dec
mov
clc
lcall
xor
mov
jl
inc
sbb
mov
mov
loop
in
ja
pop
test
push
outsl
addb
out
cli
jge
fs
pusha
mov
les
dec
je
xchg
cwtl
sub
test
xchg
dec
xor
xchg
lock
decl
add
scas
sbb
sarl
mov
mov
cmp
jmp
jmp
lcall
push
iret
push
mov
int
in
xchg
mov
mov
jns
arpl
mov
dec
adc
push
lock
xchg
add
testb
sti
add
call
xor
sub
in
adc
inc
mov
test
dec
das
dec
in
sub
push
stc
mov
push
imul
mov
mov
clc
rcrl
andb
cmpsb
addl
rcl
hlt
pop
jge
dec
cmc
decl
pop
icebp
icebp
jns
dec
jno
and
in
js
adc
mov
lcall
cmp
cwtl
pop
in
clc
jb
inc
shr
pop
jae
insl
repnz
push
loop
add
push
std
in
int3
and
mov
out
mov
fs
adc
xchg
push
or
js
cmpsl
incl
jg
pop
sbb
adcl
adc
and
in
lcall
sub
cmc
cs
add
xor
xor
imul
add
lcall
cltd
cmp
daa
push
and
mov
inc
inc
scas
adc
cmp
mov
cmp
call
fucomip
xor
cmp
mov
push
stos
data16
shr
lds
xchg
mov
fisttpl
lcall
or
mov
aas
test
lods
jecxz
adc
outsl
add
lcall
pop
jb
add
adc
mov
pop
inc
xchg
xlat
adc
iret
xor
add
push
stc
outsb
arpl
pushl
or
cmpsl
mov
lods
add
shr
idivb
insb
std
jmp
cwtl
push
leave
pop
and
mov
inc
andl
lcall
jmp
dec
jg
or
ret
adc
inc
subb
cmp
movsb
push
jecxz
decl
loopne
xor
inc
repz
dec
adc
addr16
ja
mov
jg
pushl
xchg
sub
in
dec
inc
sahf
adc
xor
mov
lcall
call
jmp
aam
xor
arpl
daa
ja
test
mov
xchg
sahf
dec
imul
add
jmp
decl
adc
icebp
movl
add
jo
sbb
lds
pop
pop
cli
pop
jmp
nop
inc
clc
call
enter
rorl
loopne
sarb
mov
in
sub
or
stc
fwait
ljmp
mov
hlt
mov
jne
push
test
in
jle
test
movsb
je
jp
in
sbb
pop
jg
movsb
sbb
ss
push
push
push
and
xchg
jmp
mov
cld
hlt
aas
sub
loop
pop
addl
lcall
pop
or
sub
in
test
xchg
shl
aam
fimull
stc
sbb
jmp
out
mov
push
xchg
int
aad
or
pop
mov
call
call
dec
sbb
pusha
xorl
push
jp
ds
cmpsl
ljmp
incl
cmp
out
cwtl
sarl
fdivrl
push
call
stos
stos
imul
frstor
roll
pop
mov
ds
clc
loopne
mov
test
adc
lods
fwait
mov
push
cmp
js
addr16
pushf
push
xor
xchg
nop
inc
ret
pop
or
scas
jmp
push
ljmp
sbb
add
in
test
sbb
cmp
lock
dec
inc
xor
movsb
sub
leave
test
jnp
xor
mov
push
ror
fcoml
or
ljmp
mov
inc
lock
loopne
test
inc
xorb
out
ss
inc
jbe
jg
ljmp
pop
stmxcsr
aam
loopne
xchg
outsb
loope
decl
inc
loopne
push
cli
mov
mov
enter
cmpsb
cli
decl
rcrl
sbb
push
or
or
movb
shll
push
jo
lcall
pop
mov
loope
mov
adc
aas
add
jg
lods
dec
shrb
div
mov
cmpsl
stos
sbb
call
inc
scas
lock
sbb
into
rcr
dec
dec
jo
inc
or
test
incl
daa
lock
jns
push
inc
lods
dec
add
sub
push
movsl
xchg
push
mov
daa
sub
mov
lcall
or
jecxz
je
mov
popf
out
popa
pushl
dec
hlt
mov
imul
jno
mov
xor
hlt
adc
call
xchg
dec
test
sub
push
arpl
lret
cli
popa
andb
or
inc
aad
adc
pusha
pop
pushf
popf
ret
or
xchg
dec
loope
sahf
dec
xor
mov
xchg
pushl
gs
jg
in
stos
sar
pop
call
out
xor
push
test
or
movsl
mov
dec
in
pop
sub
sti
cmpsl
aam
mov
add
adc
push
add
mov
cmp
pop
and
jae
aaa
scas
sub
fildll
jae
clc
adc
insb
add
pop
pop
cld
jmp
test
mov
in
rorl
sahf
sub
std
lods
or
jmp
push
jp
bound
test
imul
mov
jo
iret
rcl
in
movl
subl
xchg
lret
inc
nop
lahf
pop
scas
pushf
sub
mov
pop
add
fs
adc
xor
lock
mov
in
add
jmp
jle
push
cmp
fs
repnz
sarb
or
lds
dec
add
jnp
call
pushl
ret
mov
cmpsb
lea
jae
xchg
inc
jmp
fwait
aam
clc
mov
cmp
popa
add
or
jae
pop
movsb
xchg
mov
aaa
aad
pusha
sub
pop
out
push
mov
xor
push
in
mov
ds
pop
cmp
andl
and
incl
lahf
idivl
faddl
popf
add
in
fcmove
jne
add
push
inc
icebp
mov
mov
and
call
test
push
sarb
xor
inc
cmpsl
mov
dec
idiv
jg
jmp
mov
insl
popa
lcall
je
rolb
sbb
push
ret
sarb
call
test
aam
out
jl
inc
jns
scas
inc
cmp
faddp
dec
aam
leave
aam
and
leave
or
roll
add
scas
pop
xchg
adc
push
cmp
mov
jae
faddp
adc
dec
jb
inc
fs
jmp
pusha
adc
stc
idivl
ss
mov
adc
mov
nop
sub
jae
lret
mov
push
adc
stos
mov
inc
and
clc
shl
jno
sti
and
cmp
cld
ljmp
jmp
jae
rolb
push
sub
sub
pop
inc
popa
lock
iret
mov
jg
or
or
add
adc
outsl
std
pop
adc
jmp
mov
mov
jb
in
dec
mov
dec
adc
lret
adc
data16
push
dec
rclb
out
and
jmp
mov
enter
fmuls
adc
mov
xor
jbe
mov
fbld
mov
mov
cmp
call
ljmp
imul
ja
lret
dec
iret
push
inc
lret
adc
cmp
outsl
inc
rcrb
test
shll
xor
cmp
mov
ljmp
scas
jmp
outsb
cmp
pop
add
addr16
orb
loope
incl
pop
cmpsl
icebp
jo
xor
sbb
jne
adc
aad
cmp
dec
enter
add
mov
ss
addr16
in
mov
mov
mov
mov
daa
add
sarl
cld
pop
jg
ljmp
clc
push
out
jno
andb
loop
gs
or
xchg
xchg
hlt
out
mov
incl
lea
dec
jmp
sbbl
scas
mov
mov
mov
call
inc
shlb
or
xchg
adc
push
les
pop
loopne
or
and
sub
xchg
adc
push
xchg
inc
lock
bound
pushl
loope
cs
mov
lock
or
test
mov
fwait
mov
fdivrl
pop
jmp
push
xor
out
xor
mov
test
imul
es
ds
icebp
mull
or
jb
cmp
fimull
and
shr
cmp
jb
cs
sar
dec
pop
xor
js
loopne
sub
jo
pop
mov
sti
adcb
out
inc
call
orl
cld
cld
and
mov
std
xor
or
pushl
jge
pop
jne
mov
in
lock
das
mov
cmc
outsb
sahf
push
adc
in
add
out
mov
push
arpl
test
push
cmp
aaa
jns
dec
pop
in
inc
xor
or
out
jns
adc
mov
shl
jecxz
incl
pop
ret
cltd
or
leave
imul
jg
js
out
aaa
jecxz
imul
and
sbb
fsincos
fcoms
cmpl
stc
lock
add
movsl
jae
jle
push
xor
adc
cmc
lock
call
in
pop
xchg
imul
icebp
pusha
pop
pop
outsb
outsb
vucomiss
call
in
incl
inc
jno
sub
aam
and
pop
jecxz
mov
inc
pop
mov
lret
popa
inc
xorb
loope
ds
cs
aas
pop
jmp
jmp
sbb
js
add
mov
dec
adc
push
fcoml
sbb
jmp
das
cli
outsl
push
mov
xor
pop
cld
cmpsb
adc
outsl
stos
pusha
mov
lods
xor
fcoms
mov
inc
cmpsb
xor
mov
inc
jnp
loopne
mov
sub
testb
inc
dec
out
pushl
dec
lret
inc
mov
xor
ficomps
inc
add
pop
insb
cmpb
aam
mov
decl
ljmp
push
jp
dec
mov
xchg
testb
cs
pop
aam
std
cmp
push
mov
mov
fcomps
jl
pop
addr16
dec
int
pop
mov
jbe
test
push
fimuls
xchg
mov
call
cmc
sub
jle
bound
inc
pushl
adc
jecxz
outsl
call
xchg
mov
popa
out
xchg
std
xchg
js
outsl
sbb
pop
jb
lret
adc
aaa
aaa
mov
aas
inc
lret
xchg
jbe
jns
xadd
xchg
decl
sub
sbbb
or
sub
cmp
shrb
xor
decl
sub
sbb
in
dec
jns
or
outsl
sbb
fisttpl
decl
mov
or
mov
mov
js
fstp
jecxz
cmp
loopne
movsb
dec
js
std
mov
jg
jmp
xor
clc
pop
dec
mov
popa
mov
in
xor
pop
ljmp
lcall
sub
jecxz
add
test
aam
mov
jns
cmp
imul
mov
mov
ret
sub
or
sti
sbb
mov
subb
icebp
loopne
pop
xor
sub
mov
mov
test
or
pop
xchg
mov
cmp
or
inc
pushf
out
adc
adc
popa
or
jo
fistps
jl
call
in
mov
or
dec
mov
shr
adc
bound
or
imul
stc
add
adc
xchg
mov
ret
or
mov
ljmp
xchg
mov
cmpb
rcl
stc
rorl
or
lods
mov
and
sbb
ret
into
sarl
aam
jg
mov
hlt
mov
call
ds
cmp
jcxz
movsl
push
imul
add
decl
mov
outsb
or
mov
jl
add
in
or
int
and
cmp
aas
std
movsl
jno
or
or
cld
jns
sbb
movsl
xchg
lods
stos
and
pop
and
push
fs
mov
cwtl
sbb
mov
push
xlat
cmp
lcall
xor
dec
nop
lahf
outsb
aaa
push
or
mov
subl
dec
add
sbb
dec
stc
jbe
daa
pop
int
ret
jecxz
mov
pop
mov
leave
test
aam
or
jmp
sub
pushf
pop
pushf
addr16
loope
sub
cli
mov
pushl
sub
push
lahf
notb
hlt
test
or
rorl
jbe
aaa
inc
popa
push
xchg
sbb
xor
fwait
pop
sti
pop
mov
mov
out
outsl
std
aaa
shll
imul
movsb
in
jmp
inc
daa
es
out
fcoml
push
mov
pop
push
call
out
jo
mov
fiadds
fstl
cmp
filds
popa
das
jnp
lcall
das
ret
out
push
xchg
inc
clc
ja
in
xchg
dec
mov
pop
sarl
lods
fcomip
call
mov
bts
and
insl
jb
mov
mov
and
or
clc
jecxz
imul
loopne
insb
and
mov
decl
mov
and
jmp
jne
mov
pop
jbe
mov
inc
jecxz
jmp
leave
shr
cwtl
or
int
sub
fistpll
filds
fs
ljmp
stc
decl
ret
stos
mov
fidivs
sub
rcl
mov
pop
xchg
xlat
movsb
and
cld
rol
lret
jnp
adc
xchg
movsl
inc
push
in
pop
add
es
sar
fidivs
xor
je
dec
jge
and
sub
inc
mov
subl
pop
sbb
cli
into
sbb
pop
aaa
enter
das
sahf
push
push
bound
movsb
jmp
leave
call
mov
in
cs
inc
imul
xchg
fidivl
leave
ja
push
fucom
lds
pop
in
sub
cli
jecxz
mov
mov
add
inc
dec
push
xor
movsl
dec
daa
cmp
jbe
cmpsb
push
inc
push
inc
sbb
pop
dec
pop
add
or
stos
dec
pusha
push
mov
sbb
jne
push
inc
popf
repz
inc
xlat
outsb
arpl
lcall
mov
push
sti
scas
clc
cmpsl
push
js
sbb
mov
sub
sub
lcall
push
add
cld
mov
fmuls
lods
outsb
in
mov
scas
sub
std
fbld
test
jp
cmp
imul
subl
pushl
dec
xor
imul
mov
cmpsl
icebp
pop
sub
mov
ret
inc
add
sbbl
call
push
imulb
dec
jae
jae
ds
fs
mov
data16
push
mov
arpl
and
sahf
addr16
decl
cld
mov
xor
push
stc
ljmp
push
aam
jg
dec
jno
pop
mov
insb
mov
ljmp
sbb
decl
xchg
aad
bound
scas
cmp
inc
mov
fsts
bound
ljmp
arpl
les
jnp
dec
inc
or
inc
dec
mov
out
sub
cmp
jmp
daa
jg
popfw
adc
cmp
push
xchg
rcll
lds
out
xchg
push
pop
push
ljmp
and
xchg
bound
add
fcomip
iret
fidivrs
cmpsl
add
out
cmp
test
loop
inc
mov
ljmp
aad
pop
insb
ss
sbbl
push
imul
loope
mov
mov
and
decl
clc
xchg
fidivl
add
push
mov
pop
int
fstps
mov
mov
mov
es
pop
pop
js
jecxz
push
bound
add
dec
push
mov
cwtl
decb
add
repz
or
int
or
out
cli
sti
lods
in
call
stos
push
add
lea
or
shlb
jp
mov
mov
incl
leave
and
mov
xor
popf
jbe
lock
loopne
add
mov
out
xor
inc
add
jbe
imul
pop
scas
jge
addr16
xor
xchg
adc
out
add
jp
fs
dec
jp
bound
es
pop
push
nop
loopne
jmp
dec
loopne
or
add
mov
lods
cmp
loope
mov
xchg
outsl
inc
lods
cmp
fwait
mov
int
cmp
push
mov
es
and
insb
insl
stos
push
cmp
jle
mov
stos
test
mov
call
ret
imul
pop
iret
dec
mov
dec
xor
push
mov
xor
shlb
fbstp
xor
out
lret
test
jg
jns
xchg
mov
fcoml
decl
mov
xor
push
seta
add
inc
in
and
dec
adc
incl
dec
mov
mov
in
cmpsb
pusha
dec
outsb
fs
hlt
pop
add
sbb
sbb
xor
jmp
mov
xchg
cli
sub
inc
push
idivb
xchg
sub
mov
inc
data16
add
cmp
jno
cmpb
cltd
rclb
hlt
push
push
pop
push
nop
notl
sub
fs
daa
or
stos
popa
cld
fisttps
loopne
dec
js,pn
adc
jno
push
inc
add
incl
fiaddl
ret
jne
dec
stos
sub
stc
pop
jo
imul
and
insl
sarl
lock
jg
xchg
and
mov
xchg
faddl
dec
mulb
sbbb
je
inc
adc
incl
cld
jg
int3
inc
lahf
pop
sub
in
loope
push
movsl
sbbl
outsl
mov
pop
xlat
xchg
dec
jnp
add
inc
xor
hlt
dec
push
fisttpl
cmpsl
jle
dec
ret
rclb
mov
mov
adc
mov
std
call
xorb
dec
stos
mov
adc
rcrb
icebp
xor
in
mov
lea
stc
xor
sbbb
inc
xchg
push
int
mov
insl
mov
ljmp
jb
in
mov
sti
inc
mov
mov
jae
fisubl
add
sbb
daa
pushf
jg
pushl
sbb
cmpl
cltd
notl
or
fbld
jo
ljmp
mov
loopne
sub
xchg
dec
imul
mov
je
cli
outsl
xor
sarl
dec
or
decb
pop
xchg
xor
sub
jg
lods
out
neg
mov
out
xchg
xchg
in
mov
dec
mov
fwait
cli
jp
pop
mov
fwait
cmp
jnp
rorb
mov
inc
inc
stos
nop
lret
add
jns
lret
pop
push
pushl
repnz
adc
jp
pop
mov
lea
ljmp
xchg
mov
pop
cmpsb
je
mov
and
mov
icebp
add
leave
shrb
or
ljmp
xlat
outsb
pop
inc
dec
xor
mov
jmp
call
lcall
call
jae
testl
mov
cmp
push
ljmp
dec
pop
cld
or
cmpsb
stos
dec
or
fucomp
push
rorb
loopne
pushw
fnsetpm(287
sar
decl
sbb
inc
lret
adc
xchg
adc
icebp
or
inc
mov
fistpll
pop
sbb
ret
ficoml
aas
mov
jg
push
test
jb
call
pop
add
xor
mov
call
push
loop
mov
ljmp
mov
enter
out
adc
aam
jmp
jl
scas
push
mov
outsb
shlb
sbb
ljmp
std
ljmp
fwait
movsb
mov
cmp
cwtl
daa
test
mov
add
mov
in
popa
sub
mov
mov
ljmp
lods
adc
xchg
movsl
and
mov
sub
or
das
mov
xchg
mov
push
lcall
sub
fcoms
mov
add
test
stc
sbb
call
push
mov
or
mov
inc
movsb
insb
jecxz
cmpl
test
pop
sar
push
int
lds
sub
test
add
test
aas
nop
xchg
add
sub
push
jle,pn
rclb
sbb
and
cmp
mov
inc
xchg
inc
sbb
push
inc
ss
cmp
lea
inc
xor
cmp
clc
mov
push
inc
sub
mov
mov
and
int3
mov
cld
aas
jnp
inc
dec
shl
subl
cltd
out
or
xor
aad
jg
insb
es
rcr
inc
imul
adc
cmp
cmpsb
stc
jmp
and
call
ljmp
or
nop
fnstcw
mov
sahf
jbe
dec
dec
sub
imull
adc
ds
mov
cld
jmp
outsb
xchg
mov
push
and
push
movsl
mov
inc
jg
insl
xchg
sbb
rclb
push
push
cmp
push
stos
call
mov
ljmp
std
orl
scas
mov
outsl
mov
stc
test
int
std
mov
jmp
inc
jmp
fnsave
pop
adc
fucomi
aaa
ljmp
dec
jl
sub
bound
add
add
jg
cwtl
xor
xorl
ret
xchg
cmp
cmpsl
scas
fwait
pop
mov
mov
cmpl
mov
ljmp
testb
sub
popa
lret
in
jmp
push
xor
ja
mov
cld
decl
jge
repnz
arpl
loope
clc
pushf
push
daa
ja
fstpt
les
pushl
xchg
push
cmp
int
push
and
and
or
out
pop
push
movsb
or
push
mov
jg
push
push
cmp
jecxz
shlb
mov
imul
pop
int
decl
fildl
lret
push
sti
cmp
push
into
out
fstpt
rorb
mov
cmp
rol
mov
bound
pop
cmp
call
call
icebp
sti
rolb
push
mov
sbb
cmp
jno
lea
sbb
sbbl
std
scas
jp
push
repz
call
outsl
mov
jae
test
or
les
push
shll
cs
cmp
add
mov
ret
jo
adc
das
sbb
dec
mov
xor
cmc
mov
dec
push
ret
lcall
lea
xor
fists
lock
xchg
xchg
xor
xor
iret
dec
andb
fiaddl
iret
mov
sahf
push
mov
into
cmp
rorl
xor
call
rorb
scas
iret
jno
mov
xor
pushl
cwtl
mov
inc
fcmove
pusha
adc
icebp
outsl
shll
mov
xor
sbb
sar
aaa
inc
and
ficoms
sbb
xor
push
push
xchg
xchg
cmp
mov
push
aaa
push
stc
and
inc
orps
pop
mov
mov
or
xchg
subb
push
fidivs
adc
mov
repz
nop
dec
add
dec
test
jns
adc
sub
adc
lds
std
int
jle
mov
xacquire
loopne
sahf
arpl
incl
jl
push
mov
rol
mov
shrb
adc
fdivrp
lcall
fdivrs
dec
jg
lahf
shlb
jo
adc
mov
jae
ljmp
ds
jae
adcl
jmp
hlt
jmp
jp
data16
outsb
rclb
push
dec
or
mov
and
test
fisubrl
ffreep
or
pop
movsb
mov
mov
fdiv
loop
mov
jmp
ficoml
adc
mov
mov
xchg
dec
mov
fst
cmp
pusha
movsl
int
jp
push
popa
repz
mov
push
push
pop
orl
les
into
cmp
stos
lock
pop
jbe
push
adc
ja
incl
lret
xchg
jne
leave
shl
sub
mov
push
jmp
pop
hlt
pop
loopne
dec
xchg
testb
rcr
add
sbb
jmp
mull
xchg
roll
stos
lcall
push
ret
ret
int3
mov
cmp
ljmp
std
mov
imul
dec
leave
insb
into
dec
mov
ljmp
jo
jbe
jbe
and
repz
sbb
xchg
push
dec
cs
mov
lcall
enter
push
mov
sub
sbb
call
sbb
pop
push
bound
sbb
jmp
jnp
jg
rcr
jb
jmp
xor
fwait
mov
dec
cmc
mov
cld
xor
decl
stos
lahf
or
add
cmovs
fstpt
sub
ljmp
mov
iret
lret
and
ds
sbb
inc
pop
push
je
xchg
or
pushl
inc
shl
fldcw
push
rcll
das
mov
xor
or
ljmp
fsubrl
fidivs
pop
and
push
mov
inc
cld
add
lock
daa
in
mov
cmp
mov
nop
mov
sbb
mov
clc
movsb
cmp
clc
pop
mov
adc
mov
or
aas
outsl
push
les
ljmp
sub
cmp
lods
popa
je
cmp
test
and
stos
mov
lcall
int
das
dec
mov
push
mov
decl
and
flds
or
call
cmp
incl
lret
cmp
cmpsl
ud2
and
repz
stc
scas
mov
or
decl
out
push
hlt
or
ja
add
jg
push
sbb
inc
xchg
lahf
cmpsl
and
scas
lods
dec
mov
mov
and
jg
push
dec
pop
std
outsl
mov
rclb
or
daa
sarb
lcall
and
pop
pop
hlt
push
das
fildl
mov
test
jmp
push
cmpl
adc
add
icebp
add
add
sbb
dec
loop
xor
jb
in
mov
add
mov
xor
filds
jg
test
outsb
in
xchg
sub
cld
xchg
ja
inc
mov
repz
xor
repnz
pushl
push
mov
sahf
pop
cmp
addl
mov
out
add
xchg
and
mov
incl
dec
xchg
jb
movsb
push
dec
cltd
push
push
mov
inc
inc
pop
push
fidivrs
pusha
and
addr16
push
les
cld
fcom
cmc
fstpl
lea
inc
cmpsb
xchg
add
sub
ljmp
popf
outsb
sbb
xorb
movsb
int3
xchg
jnp
into
int
xor
or
or
aam
push
decl
mov
inc
repz
imul
ss
shrl
pop
pop
add
lock
push
pop
sarb
or
sbbb
jmp
cmpl
and
mov
xchg
lods
cli
lcall
stc
push
insl
pop
xchg
pop
sub
add
pop
xchg
pop
jnp
ror
icebp
test
and
fcomip
xchg
pop
filds
loope
xor
xchg
mov
push
push
loopne
pushf
push
xchg
cmc
ljmp
pushf
stc
mov
add
xor
ficoml
iret
clc
fnstcw
ljmp
nop
push
push
xor
add
mov
stos
xor
rcrb
repnz
cmc
xchg
inc
mov
test
mov
test
lahf
push
ljmp
xor
pop
sub
stos
out
xchg
lcall
or
ljmp
push
fidivrs
sbb
jle
push
pop
mov
incl
adc
out
xchg
push
in
jp
sarb
mov
xor
je
push
xor
divl
lret
out
mov
push
rcrl
into
mov
xchg
fdivrl
into
mov
stc
push
mov
les
push
aaa
ss
aad
xchg
sbb
push
shll
inc
pop
mulb
sub
decb
int3
ljmpw
pop
mov
push
and
lds
rclb
jmp
pop
out
add
mov
sbb
jmp
inc
cld
inc
das
cmp
aad
iret
push
xchg
xor
sbb
push
roll
or
outsl
or
cwtl
mov
mov
push
or
mov
dec
test
inc
repz
rcr
ljmp
or
mov
sub
popa
cwtl
dec
ss
stos
mov
sbb
cmp
add
mov
call
mov
fsts
cmpsl
insl
insb
inc
inc
or
mov
jmp
cmp
inc
add
sbb
sti
inc
mov
mov
je
sub
sbb
lcall
loope
inc
mov
pop
jle
pop
imull
push
jae
add
loop
xchg
cmc
out
jo
jl
xchg
add
pushl
mov
jg
inc
fwait
arpl
out
aad
mov
pop
push
xor
clc
cmp
scas
mov
out
and
jo
test
pop
std
jp
add
and
dec
decl
jns
mov
loop
or
in
cli
cmp
dec
das
mov
stos
lea
inc
xchg
cld
subl
mov
pop
out
sahf
mov
mov
in
fmuls
imul
call
cmpsl
das
ret
jecxz
dec
sbb
mov
lods
pop
and
movsb
and
fwait
call
adc
out
inc
pop
rcl
arpl
ret
or
das
cmp
dec
jmp
subb
mov
ljmp
add
cmp
adc
std
test
sbb
pushl
dec
mov
push
dec
filds
jecxz
jae
inc
mov
outsb
jne
std
call
pop
mov
scas
adc
stos
mov
sub
lods
ja
stc
sar
pushl
and
and
inc
arpl
mov
sbb
jecxz
lods
insl
mov
add
test
in
ljmp
repnz
dec
adc
cmp
lock
movsl
outsb
loop
pop
mov
ljmp
push
sbb
jmp
mov
imul
inc
mov
je
jmp
sub
xchg
test
sbb
mov
mov
movsl
sahf
ret
rcll
jne
int
pop
loope
and
jp
sti
loop
incl
cwtl
aad
insb
gs
fbld
scas
add
shrl
rcll
or
mov
xchg
mov
fstpt
nop
filds
or
xlat
jl
int
into
cltd
dec
add
sub
loopne
dec
les
cmp
mov
xor
outsb
dec
ror
stc
jle
test
jmp
mov
dec
add
inc
mov
mov
test
add
lcall
add
jns
andl
push
mov
sahf
mov
mov
pop
cmc
scas
out
inc
sbbl
add
mov
mov
lcall
mov
daa
in
mov
int3
inc
popf
ret
cmp
mov
ljmp
clc
pushl
rol
fldenv
call
cmp
and
das
jl
out
cmpsl
jg
jno
and
cs
cld
sub
fcmovnu
sbb
xor
pop
daa
mov
insb
sub
pop
call
into
mov
test
nop
adc
ja
mov
inc
mov
pop
imul
cld
jmp
xchg
imul
cmpsl
or
into
cmpsl
popa
ret
lock
adc
hlt
mov
push
int
incl
outsb
dec
js
push
bnd
jecxz
daa
mov
mulb
add
mov
xchg
daa
add
bound
or
xchg
loop
inc
dec
enter
add
or
push
inc
jnp
loope
xlat
mov
in
mov
jmp
mov
mov
cmp
push
outsl
pop
cmc
insb
cmp
inc
adc
mov
dec
shlb
outsl
in
shll
cli
push
xor
lcall
ljmp
jl
dec
scas
cmpsl
ljmp
dec
jnp
scas
push
xlat
das
jge
mov
in
dec
jg
lods
jl
sub
shll
push
cmp
je
imul
cmp
cmp
fiadds
stos
xchg
jle
daa
outsb
shlb
leave
js
adc
push
or
hlt
and
lret
fwait
xchg
rep
xchg
add
jbe
cmp
pop
sub
or
sbb
sbb
call
in
cmp
movsl
out
jl
sub
shlb
dec
and
add
notl
fisubl
not
aaa
dec
push
sub
jnp
icebp
push
dec
pop
pop
loop
sahf
lcall
decl
xor
ss
adc
jl
or
insl
call
ljmp
dec
xchg
movsl
je
jg
data16
ds
fimuls
xchg
cwtl
inc
add
js
push
jnp
mov
aam
lcall
or
lcall
or
adc
loopne
adc
adc
mov
pop
jl
and
call
add
and
sbb
clc
xor
ds
xor
mov
ljmp
xor
add
fadds
and
int3
stc
cmp
sub
shll
inc
adc
mov
sbb
jp
pushl
fdiv
mov
leave
inc
push
int3
aaa
ret
mov
adc
inc
pop
lret
ljmp
sub
lret
aam
adc
ljmp
sti
sbb
out
fidivl
test
lock
aam
mov
fistl
test
in
fwait
mov
fstpt
test
test
mov
lahf
push
clc
or
pop
push
push
movsb
adc
incl
pop
movsl
in
aaa
mov
mov
test
ss
pop
cmpsb
cmpsl
outsb
add
fdivs
inc
dec
xchg
loop
sbb
mov
sbb
insb
add
mov
or
cmp
mov
popa
inc
cmpsb
imul
cmp
sbb
fisubrs
andb
mov
iret
inc
and
jno
inc
push
js
mov
pop
push
icebp
mov
mov
jle
add
jle
or
xchg
mov
or
mov
jp
clc
xchg
push
pop
loope
xor
push
sub
sbb
clc
aaa
cld
lcall
inc
inc
xchg
hlt
or
decl
lret
movsl
xor
jbe
into
push
cld
mov
fisttps
mov
inc
jl
testb
xchg
jg
mov
loop
out
push
xorb
adc
pop
inc
jge
push
lret
out
xor
and
addr16
decl
repz
cmp
jp
mov
add
test
insl
xchg
pop
and
mov
pop
test
cld
aas
mov
out
in
ret
in
push
mov
ljmp
jae
push
lret
fstpt
lret
ror
test
xchg
sarl
jns
in
xchg
fs
fdivl
pushf
cltd
xor
jae
lods
movsb
sbb
jg
sysexit
dec
daa
cld
andl
sahf
arpl
hlt
adc
xchg
xor
test
xor
outsl
cmp
sbb
popa
out
adc
mov
shl
cmpb
inc
dec
shlb
das
cmp
clc
ja
imul
xchg
aad
mov
cld
mov
mov
pop
sub
les
mov
mov
xlat
pop
adc
push
jae
mov
jbe
loope
cltd
dec
adcb
cmp
leave
out
cwtl
pusha
push
cld
mov
call
in
ds
xchg
add
fsubr
xchg
jns
out
jne
jecxz
scas
cmp
and
call
out
xchg
ss
out
adc
scas
mov
push
and
cwtl
or
jl
fstps
fcoms
pop
out
or
xchg
insb
mov
inc
lcall
mov
add
cs
call
dec
xchg
cwtl
outsl
mov
popf
icebp
cmp
and
inc
ja
rcr
out
fdivr
ljmp
fs
cld
jb
pushf
dec
jle
push
mov
adc
sbb
mov
aas
sbb
ljmp
jnp
cmpl
sbb
jg
cltd
pop
addr16
or
loopne
mov
dec
pusha
fsubl
clc
push
out
mov
pop
cmp
dec
cmp
insl
fdivl
loope
lcall
adc
stos
xor
jp
fwait
out
popa
jp
sahf
cmp
mov
cmp
sub
push
cmp
sub
out
mov
icebp
jmp
test
adc
in
dec
aaa
js
push
sub
mov
xor
int
scas
in
incl
add
sub
imul
out
pop
repnz
and
jecxz
hlt
dec
inc
mov
add
mov
leave
mov
push
fcmovne
popa
jge
mov
xorl
subb
jo
and
jno
incl
mov
test
add
pop
mov
insb
fdivl
flds
push
inc
push
add
lock
push
adc
movsb
push
aam
push
jo
ret
xchg
cmpb
adc
mov
jge
int3
mov
cwtl
js
xchg
data16
mov
call
push
fimull
call
int3
decl
orl
test
jnp
bound
jle
cmp
fwait
ljmp
fdivrs
lds
jle
mov
push
data16
sbb
mov
mov
jmp
sub
insl
nop
pop
xchg
cmp
out
sbbb
jns
cmp
sahf
cmp
dec
aam
jmp
push
inc
push
mov
aam
ret
jmp
xchg
movsb
push
test
pop
movsl
daa
ljmp
ljmp
loop
jl
fwait
sar
shll
aaa
dec
mov
adc
xchg
daa
lods
inc
in
add
pop
sbb
fsubl
jg
gs
js
push
nop
push
sub
insl
sysenter
dec
les
adc
xchg
loope
lret
add
andb
adc
lods
dec
xor
fidivs
mov
lret
scas
js
pusha
add
in
loope
hlt
mov
fcomps
lret
arpl
popf
jnp
call
mov
call
sub
in
mov
stos
fmuls
lods
cwtl
sti
or
aam
jnp
sub
pop
call
mov
jns
pop
or
jmp
test
cwtl
fistl
cld
incl
or
push
bound
fmuls
or
mov
addb
leave
cs
call
ljmp
xchg
aaa
stos
arpl
dec
stc
mov
jg
pop
adc
push
shlb
mov
es
or
xor
and
add
rcll
cwtl
adc
gs
mov
arpl
push
or
pusha
sbb
cmpb
sbb
testl
sarl
sub
int3
push
je
push
das
adc
decl
xorl
je
das
mov
mov
add
cli
rcll
aas
dec
xchg
mov
jmp
add
arpl
je
cli
lcall
aaa
hlt
scas
sarl
sub
lock
loope
xchg
mov
cli
in
hlt
sub
testb
cld
shl
xchg
and
mov
mov
cld
adc
cli
inc
and
lods
ret
sub
adcl
xchg
xchg
mov
scas
decl
sub
gs
in
pop
test
test
test
mov
push
aaa
add
cltd
jg
push
jmp
ficompl
js
dec
push
mov
stos
std
push
ficoml
call
pushf
stos
imul
jp
push
or
cmp
fwait
push
movsl
pop
fcomi
rcrl
adc
sbb
mov
sub
rorl
ljmp
and
inc
lahf
into
mov
outsl
add
in
outsl
test
sti
arpl
pop
decl
cltd
pop
push
or
data16
minps
int3
mov
pushf
jno
mov
xchg
decl
sub
mov
xor
xchg
int3
dec
ljmp
add
mov
jo
in
ljmp
xor
mov
outsb
jl
shlb
inc
and
mov
call
cmpps
clc
xor
lahf
xchg
lfs
sub
lcall
pop
sbb
icebp
and
int3
jmp
ljmp
mov
addr16
loope
loop
cmp
ss
pop
rcll
ljmp
sub
sub
in
adc
and
cmpsb
and
xor
lcall
adc
mov
lret
es
mov
add
incl
es
rclb
pushf
out
cwtl
out
std
mov
std
push
pop
xor
xchg
add
jp
ljmp
push
daa
fs
mov
scas
mov
dec
mov
repnz
inc
add
xchg
or
ss
dec
insl
aas
jmp
iret
imul
mov
icebp
pop
out
jl
inc
add
sbb
add
mov
stos
pushl
bound
mov
fistl
mov
daa
xchg
sbb
mov
adc
xchg
add
sbb
lcall
or
pop
lcall
in
ljmp
aam
sahf
jb
push
in
push
lcall
jle
inc
mov
cmp
test
aaa
std
call
jmp
shl
mov
mov
enter
or
mov
jmp
xor
push
xchg
nop
mov
mov
jle
loop
sbb
not
mov
loop
loopne
mov
pop
pop
pop
mov
push
mov
decl
and
daa
mov
sti
dec
bnd
or
int
ljmp
aas
push
sbb
sbb
sub
iret
ljmp
jecxz
jnp
or
sbb
push
into
and
dec
aas
cld
sub
mov
cmp
mov
incl
push
pusha
imul
lods
pop
pop
xchg
pop
xor
lahf
xchg
mov
and
scas
jnp
dec
xor
jb
and
push
flds
xchg
in
outsb
lcall
decl
stc
mov
sbb
iret
xor
pop
pop
xor
sbb
mov
js
cltd
xchg
js
rclb
pop
pusha
fldcw
std
clc
mov
sub
lds
jmp
lcall
fcoml
call
hlt
mov
enter
subb
sub
rolb
lahf
cld
sahf
loope
xchg
push
test
loopne
push
imul
adc
or
test
and
scas
imul
xchg
out
jne
push
orb
mulb
std
dec
orl
push
sar
lock
incl
aad
cmp
push
dec
mov
jge
inc
lea
sbb
pop
hlt
fbstp
and
push
dec
or
cwtl
push
or
iret
push
xor
jmp
fildl
scas
sub
ret
adc
in
mov
cmpsl
adc
or
mov
mov
mov
loop
jne
stos
xchg
cmp
fisttpll
test
filds
mov
mov
je
fcomip
incl
pop
lret
leave
repz
add
adc
icebp
dec
inc
xchg
call
fsubs
mov
mov
adc
aam
mov
imulb
fildll
mov
incl
scas
jo
push
pop
mov
out
scas
adc
mov
fidivrs
clc
stos
mov
dec
dec
jno
in
stos
jnp
mov
in
push
dec
pushf
push
inc
rclb
das
mov
sti
mov
inc
jmp
mov
lds
call
shl
add
xor
jg
pop
push
pop
xchg
lods
pop
pop
mov
scas
inc
inc
insb
imul
inc
incb
ret
xor
addr16
movsl
jg
icebp
add
xchg
mov
rcl
punpckhbw
jle
imul
push
lcall
outsl
jl
dec
xchg
dec
xor
sub
lods
xor
scas
sub
pop
push
loop
stos
pop
push
imul
mov
xchg
rclb
mulb
add
xchg
mov
ror
shlb
fiadds
push
leave
and
inc
pop
insl
xor
jle
sub
out
ljmp
pop
inc
lcall
and
mov
shll
sub
cli
pop
scas
adc
sub
xchg
pop
inc
incl
mov
mov
cmpsl
jge
aas
pop
push
shlb
fimuls
in
fs
inc
and
jo
push
bound
std
int
ja
in
inc
mov
inc
jp
pop
inc
decl
lea
call
cmc
fstp
xchg
xchg
inc
in
pop
inc
dec
sub
cmp
das
mov
jo
mov
add
out
popa
scas
sub
sbb
push
mov
dec
imul
dec
fdivs
add
jecxz
aas
shrb
jle
sub
ds
pop
mov
out
sbb
sub
lcall
sbb
xchg
dec
movsb
adcb
dec
jnp
data16
dec
daa
cmp
pushl
call
aam
mov
in
in
or
add
cmp
out
pushl
mov
cmp
lcall
push
add
push
fmull
cmp
jno,pt
mov
xchg
test
add
mov
xlat
sti
or
lret
fsubrl
lock
mov
sbb
into
rcll
mov
and
mov
stc
jnp
ljmp
cmp
movsb
adc
nop
shr
ret
xchg
insl
lock
push
pop
adc
and
mov
jb
add
lcall
imulb
sahf
lret
sub
fsubrs
icebp
jae
stc
push
push
cltd
and
xor
inc
or
dec
imul
jle
or
insb
aad
fcmovb
inc
cmpsb
loopne
ds
test
scas
cld
xor
es
fst
adc
xor
xchg
not
push
cli
mov
popf
lods
loope
inc
dec
outsl
xor
ds
mov
push
dec
push
js
andb
cld
daa
mov
lcall
mov
dec
rolb
insl
clc
fisttps
mov
test
xchg
xchg
imul
sub
add
or
pushl
push
add
sub
or
push
jb
pushl
adc
mov
sti
fs
sub
inc
push
push
cmp
sub
ja
cs
push
cld
incl
test
jge
cmp
out
mov
lods
xor
sub
insb
mov
and
pop
mov
fnstenv
and
lcall
in
andb
gs
les
cmp
repnz
mov
aas
in
in
call
and
or
push
adc
pop
mov
ds
sub
mov
and
fiaddl
fnstsw
mov
jnp
adcb
cmpsb
fcomps
sbb
outsb
dec
mov
push
outsl
cmp
ljmp
push
dec
divb
mov
js
cmp
mov
jmp
cli
out
mov
lcall
lock
and
or
and
cmp
inc
repz
sbb
pushl
and
cltd
jp
jecxz
xchg
je
imul
inc
incl
dec
mov
sbb
mov
cmp
jl
ljmp
fs
jmp
int
and
ljmp
add
filds
jecxz
insl
or
push
xchg
push
aaa
cmp
bound
insb
hlt
das
or
add
push
stc
in
mov
das
cmp
push
sub
shrl
sahf
les
jge
nopl
dec
dec
mov
jo
out
mov
dec
mov
jbe
sbb
lcall
and
xchg
xchg
sub
push
sbb
jae
fwait
pop
sar
ljmp
aas
leave
mov
lcall
js
imul
mov
call
xor
pop
cmpsl
add
bound
daa
cmp
xor
lret
sub
push
and
inc
pusha
lret
ljmp
cwtl
cmc
cld
loopne
aas
lds
push
pop
sub
leave
iret
test
jle
mov
xchg
mov
mov
jmp
mov
dec
jge
push
mov
mov
push
aam
scas
outsl
pop
mov
insl
outsl
sub
test
test
cli
incl
into
jbe
fwait
loop
cs
mov
orb
lods
xchg
testb
ljmp
cmp
adc
xor
sti
test
sub
fwait
cmc
lcall
std
pop
and
sbb
jg
out
orl
aam
lret
scas
jmp
cld
sub
push
xchg
shlb
sub
mov
cld
mov
adc
fs
repnz
fisttpll
pop
shrb
fcoms
rclb
loope
es
inc
addl
sbb
dec
push
fsubl
mov
jle
clc
jl
lods
and
fistpll
mov
int
insb
mov
into
scas
xchg
orb
push
sbb
fsubrl
sbb
mov
inc
pop
sahf
inc
add
sahf
nop
mov
push
push
js
stos
ljmp
and
mov
push
xchg
leave
movsl
in
cmp
jae
decl
and
stos
jecxz
dec
loop
xchg
dec
push
enter
mov
adc
or
push
popa
push
mov
mov
ja
aad
mov
incl
jp
hlt
mov
fnstsw
ret
dec
dec
std
out
lret
movsl
mov
or
fistpll
ret
fcomip
mov
popf
add
push
in
cmp
xchg
incl
les
inc
nop
mov
mov
js
mov
jp
outsb
movsb
mov
adc
push
cld
cmp
dec
call
sbb
dec
stos
imul
fwait
sbb
jo
test
sbb
sar
mov
mov
push
and
add
and
jbe
and
push
nop
mov
jmp
mov
or
or
clc
or
decl
or
cld
dec
sub
xchg
cltd
inc
pop
dec
xlat
mov
addr16
jecxz
rol
push
lea
test
jp
js
push
xor
call
insb
sbb
stc
mov
das
dec
lods
out
cmpsb
or
mov
sbb
xchg
jne
test
aas
or
popa
inc
push
and
outsb
mov
dec
shll
pop
sub
pop
xchg
std
mov
shr
and
js
cmp
test
adc
jns
jmp
loope
or
jmp
xor
mov
mov
cli
jg
mov
pop
sub
shl
sbb
pusha
cld
mov
idivb
adc
pushl
jge
push
mov
cs
jl
mov
scas
and
xor
hlt
call
mov
jecxz
out
jge
mov
and
xor
sti
push
pushl
sbb
repnz
adc
sub
jbe
incl
dec
aas
cwtl
movsb
insl
out
inc
icebp
pop
mov
or
jmp
sbb
fwait
mov
add
push
dec
std
sub
push
mov
insb
fstl
lock
in
add
pushf
cld
nop
push
jno
lock
mov
outsl
clc
ljmp
out
pop
jp
icebp
and
movsb
xor
je
mov
inc
push
mov
adc
stos
mov
lock
and
sub
jl
clc
pop
stos
or
ffreep
shlb
pop
lods
push
jge
push
bound
adc
fwait
ret
mov
jmp
cld
push
mov
fmuls
aad
cmp
adc
lcall
or
in
cbtw
dec
stos
sbb
jmp
out
add
aas
and
jl
add
decl
aad
mov
jae
outsl
faddl
sbb
stc
jnp
ds
lcall
xchg
inc
movsl
fistpll
in
leave
cmp
xchg
stos
hlt
mov
sbb
xor
jbe
ljmp
call
jo
loopne
adcl
addl
mov
cmp
sub
fmuls
jmp
pop
fldt
arpl
popf
fdivl
icebp
dec
or
push
in
cli
mov
jno
test
push
pop
fnstenv
insb
rclb
cmp
sbb
cli
test
mov
loopne
or
cmp
fldcw
xchg
cmpsb
in
pusha
ds
jno
pop
dec
nop
push
cmpsl
sub
add
mov
push
rcr
add
mov
mov
jg
cmp
repz
sub
dec
adc
pop
cs
lds
inc
pop
fnstcw
lcall
pushl
mov
loop
enter
and
pop
push
cmp
adc
mov
inc
mov
fisubrs
jge
ja
or
in
push
ret
add
xor
jns
or
inc
or
fs
xchg
xchg
xor
mov
or
jb
inc
shll
hlt
mov
cmp
jo
sub
push
lods
int3
sahf
test
push
clc
mov
cmp
push
mov
push
lret
icebp
xchg
pusha
cmpsb
stos
mov
inc
test
test
repz
mov
nop
mov
push
mov
sarb
sar
lods
dec
repz
adc
adcb
call
xor
mov
stos
dec
clc
pushl
xlat
insb
xchg
mov
cmc
icebp
shrl
inc
pop
decl
fimuls
mov
bnd
in
sub
cltd
add
sbb
push
pop
dec
jp
stos
xchg
mov
fstpl
call
dec
popf
mov
cmp
dec
pop
int
inc
ror
sbb
aad
leave
pop
inc
push
decl
jecxz
test
sbb
stc
mov
inc
lcall
lods
xchg
cmp
mov
push
iret
or
mov
subl
cs
nop
mov
xchg
ljmp
in
jecxz
jge
pop
pop
testb
into
jae
imul
stos
call
sbb
lahf
or
push
fisttpl
sbb
call
scas
push
icebp
or
fisttpl
push
jno
or
lds
pushf
push
leave
arpl
jae
adc
lcall
ss
pushf
lahf
out
xlat
mov
aam
mov
or
mov
cli
pushl
shl
pop
adc
cltd
mov
fildl
stos
cmp
ss
jmp
fcomip
ja
mov
fcomps
mov
jmp
icebp
inc
loop
loope
stc
fwait
sbb
adc
ret
push
mov
ljmp
lcall
popa
pop
or
lock
dec
jnp
jne
addr16
add
mov
and
fwait
clc
sti
xchg
jb
xchg
pop
sub
gs
push
stos
mov
or
adc
fsubrs
incl
sub
push
enter
rorl
add
aad
sub
hlt
mov
sub
lcall
dec
loopne
fisttps
add
pop
rcr
xchg
inc
adc
mov
in
and
xor
les
outsb
jmp
dec
mov
nop
pop
movsl
push
inc
xchg
xchg
pushl
cld
sub
add
scas
sti
xor
or
sub
ljmp
test
jp
add
push
and
or
and
sbb
out
lods
or
fwait
push
mov
push
cmpb
adc
mov
mov
aam
jp
bound
push
jg
mov
scas
push
add
fistpl
pushl
std
xor
inc
pop
scas
scas
mov
insl
adc
pop
jo
push
cmp
into
cmp
andb
pop
pop
movsb
call
lock
in
jne
in
mov
fldl
insl
xchg
rorb
push
call
pop
sub
inc
mov
xchg
xchg
bswap
cli
aad
mov
fistpl
inc
cmpsl
sub
mov
lcall
add
xor
pop
out
scas
and
mov
and
lcall
movsb
pop
cmp
mov
dec
sub
aaa
xchg
scas
push
dec
sbb
lcall
arpl
sbb
mov
jecxz
push
pusha
lods
jbe
sub
xlat
adc
js
add
int3
out
in
jmp
lahf
das
or
dec
and
xor
jno
test
sub
std
das
int3
aad
dec
cmp
pushl
data16
mov
xchg
mov
in
jo
adc
pushl
imul
inc
in
cs
test
inc
lret
mov
call
out
sbb
lods
leave
roll
mov
lcall
xchg
jb
incl
sub
xor
sub
loopne
jge
and
arpl
gs
outsl
pushf
test
aas
cmp
adc
add
ljmp
dec
jmp
in
dec
in
mov
mov
rcrb
inc
xlat
aas
inc
call
cli
test
push
mov
leave
lret
insb
mov
ds
sbb
adc
jecxz
pop
repz
and
out
xor
xchg
int
mov
xlat
out
sbb
in
ljmp
sub
in
scas
jle
stos
add
fs
in
push
cmp
in
lcall
xchg
std
cmp
addr16
out
inc
je
cwtl
stos
or
lahf
mov
jnp
push
add
pop
and
dec
ja
inc
test
test
cmpl
arpl
fsubs
adc
incl
cmc
adc
xor
mov
ljmp
cli
jmp
mov
or
je
xchg
xchg
pop
fsincos
lock
mov
stos
scas
sub
push
loop
mov
ss
repnz
fcomip
cmp
decl
xchg
shlb
movsb
out
lods
adc
test
or
nop
incb
inc
and
mov
loop
jl
xor
pop
inc
cld
ljmp
sti
sbb
sarb
popf
hlt
push
imul
mov
or
lret
cli
popa
mov
fprem1
xlat
mov
lcall
fucom
xchg
cmp
cmp
shlb
push
or
fcmovne
ja
pop
push
stos
cmpsb
push
mov
lahf
cmc
aaa
jmp
stos
mov
and
ljmp
sub
mov
call
js
psrlq
addr16
cmc
aas
pop
movsb
cmp
insl
dec
movsl
cmpsb
stos
std
fisubrs
cli
repnz
ja
ds
test
cmpb
stos
mov
ljmp
stc
mov
aam
and
or
in
mov
inc
adc
pushl
cmc
data16
ret
xor
js
ljmp
lret
insl
mov
aam
cmpsb
movsl
cld
fdivrp
fwait
mov
incl
mov
push
dec
fdivl
jne
sub
data16
mov
dec
fldcw
ljmp
sbb
jmp
lret
mov
int3
rorl
xor
pop
sub
enter
ljmp
inc
enter
rcrb
add
pusha
div
stc
imul
pop
and
flds
std
dec
test
jno
sbb
or
add
fbld
lcall
idiv
mov
loop
rolb
mov
xchg
lret
scas
dec
pop
iret
int3
shlb
lcall
sub
cmc
cmpsb
sub
inc
add
pop
and
xchg
movsb
push
outsl
jmp
ret
outsb
mov
jbe
jns
roll
mov
push
jmp
int3
stos
jo
icebp
jnp
push
adc
mov
and
ljmp
clc
pushl
push
jg
push
xor
or
in
mov
pop
jo
and
push
xchg
cmp
mov
ja
sub
fistl
ret
jecxz
std
incl
xor
xor
add
add
mov
push
adc
les
push
dec
pop
cmpl
inc
scas
lahf
and
imul
jle
ss
sub
xor
rolb
jg
and
xchg
push
xchg
fdivp
repz
imul
decl
inc
mov
pop
js
ds
ds
sub
xor
cmp
fs
call
out
adc
fistps
ljmp
mov
mulb
add
cmp
mov
dec
bound
pushl
rol
cmpsl
popa
push
fistl
imull
das
pop
arpl
lahf
sbb
xor
shl
mov
xlat
andb
shlb
aad
sub
push
dec
vfrczpd
int
lret
xchg
iret
rcrl
lcall
test
jp
outsb
in
scas
fstpt
je
jl
filds
ret
inc
adc
cmp
sub
dec
mov
inc
pop
push
push
std
push
cmp
xor
mov
jb
std
shll
mov
inc
sub
xchg
sahf
mov
hlt
inc
dec
mov
cli
adc
test
aam
lret
push
imul
lcall
mov
shlb
lahf
xor
dec
mov
sarl
xchg
dec
sbb
sub
fcom
xor
repnz
int3
sub
arpl
mov
sbb
pause
and
lods
sahf
in
inc
mov
or
xchg
push
pop
aas
cld
jge
out
or
repnz
xchg
push
outsl
jge
xchg
xchg
dec
mov
ret
jnp
inc
dec
ja
pop
clc
cld
dec
enter
mulb
pop
mov
jg
call
imul
out
xchg
jl
rclb
mov
mov
lret
rol
scas
dec
jle
out
cwtl
jno
cmpsl
ficoms
icebp
outsl
cli
inc
cmp
sbb
push
rclb
sub
movsb
ljmp
lds
fistps
insl
xchg
hlt
add
adc
ja
ret
and
mov
pop
ret
jle
fdivr
ljmp
ret
dec
xchg
repz
push
jmp
dec
fildll
sub
outsl
cmp
je
pop
ja
insb
cmp
lcall
cmp
push
push
xchg
ss
call
add
fsub
push
and
pop
out
lods
loope
inc
jge
hlt
jg
jns
sub
les
mov
hlt
sarb
push
jbe
nop
aad
in
or
lret
repnz
loopne
mov
lcall
int
jp
nop
mov
xchg
xchg
push
out
sbb
dec
repz
fiaddl
or
imul
lea
out
pop
sbb
jo
idiv
jg
or
test
sbb
adc
int
xchg
aas
js
pop
mov
in
or
jl
incl
mov
insl
ljmp
repz
cmc
cld
xorb
decl
sbb
das
popf
into
popa
lcall
pushl
cli
int3
insb
sub
xor
jbe
jle
push
int
xorl
pop
daa
orl
dec
adc
jmp
cmc
call
adc
inc
inc
incl
or
push
dec
cmp
idivb
aaa
call
loopne
adc
mov
std
adc
movsl
ljmp
aad
decl
lock
adcb
lahf
in
push
sbb
push
out
sbb
pushf
push
inc
ljmp
mov
pop
movsl
push
mov
insl
lahf
sub
add
or
sbb
rcrl
pop
sub
int
test
loopne
pushl
ja
sahf
popf
cld
mov
xchg
xchg
out
lds
xor
lds
mov
imul
inc
push
xchg
xor
lock
add
lcall
and
daa
test
xchg
or
mov
test
mov
decl
jl
push
fsubr
sub
sub
sub
aam
xchg
leave
xchg
adc
sar
aas
dec
jmp
mov
ret
xor
and
jle
and
mov
xchg
dec
das
xchg
call
dec
fwait
daa
mov
or
lcall
dec
xchg
sbb
adc
jmp
inc
stos
bound
ljmp
fisubrl
dec
aaa
push
mov
jmp
push
sbb
and
sub
mov
call
cld
call
mov
dec
lds
adc
aad
mov
in
mov
jg
fs
out
cmpb
adc
xchg
lcall
inc
clc
jnp
jae
lods
pop
push
ret
adc
jl
pop
xchg
inc
and
jne
mov
sub
ret
ja
es
stc
lock
lock
into
add
call
or
pop
addr16
sub
push
pop
xchg
out
and
push
mov
lods
test
push
into
call
loopne
imul
fsubl
sarl
inc
push
adc
and
repz
pop
inc
rolb
in
sub
add
out
mov
call
jge
xchg
pusha
push
stos
xchg
cmp
xchg
fildll
bswap
pop
mov
loope
xchg
or
mov
andb
add
mov
fistps
mov
in
dec
mul
pushf
jb
pushl
lret
and
adc
pop
in
pop
add
jae
imulb
jle
fwait
adc
xchg
xor
pushl
push
inc
icebp
sbb
imul
cmpsl
mov
outsb
xor
add
cld
push
and
decl
push
or
inc
xor
in
cwtl
out
push
aaa
inc
sbb
jb
mov
or
daa
mov
dec
push
je
push
lcall
mov
lret
push
mov
decl
pop
xchg
inc
cmp
adc
stos
xchg
stos
and
cmp
repz
ja
fs
fmuls
ljmp
ret
cmp
loope
in
lods
and
xor
test
inc
stos
mov
inc
fsubrp
pusha
push
sbb
pushl
mov
into
stc
loope
push
lret
add
push
dec
insb
fcmovne
shrl
fistpll
pop
jae
dec
jp
mov
mov
add
add
fdivl
adc
xchg
pop
repz
sarb
in
rclb
fnsave
dec
ljmp
aam
push
jle
in
inc
add
daa
ljmp
add
mov
pop
inc
cld
popf
mov
adc
sub
mov
mov
inc
add
adc
xor
push
fsub
mov
xor
outsl
std
sar
jmp
outsb
xchg
je
es
adcl
lds
jbe
xchg
ficoml
enter
mov
pop
xor
inc
call
cmpsb
xor
mov
add
scas
add
rcll
mov
dec
insl
loopne
decl
adc
hlt
mov
push
into
ja
xor
popf
mov
stos
insl
data16
in
mov
les
decl
cmp
mov
sub
xor
sub
jg
movsb
mov
jmp
je
rorb
fsubs
inc
or
jle
ds
test
stos
popf
daa
cld
inc
mov
ret
inc
inc
fisttpl
sbb
add
outsb
xchg
in
lods
hlt
adc
inc
lret
lahf
cmp
mov
mov
pop
or
push
pop
jle
out
sbb
and
imul
adc
call
je
leave
repz
lcall
addr16
frstor
cmp
ret
cwtl
ret
xor
ret
add
pushl
inc
cltd
pop
push
test
clc
cmp
push
loop
in
enter
mov
xchg
inc
dec
popf
adc
pop
jl
ja
adc
out
lret
dec
cmp
testb
pop
xor
aam
pop
in
lea
or
sbb
pop
icebp
ljmp
sub
pop
mov
pop
mov
mov
mov
xor
inc
xor
sub
xchg
sbb
jno
jg
jl
pop
incb
mov
lea
pusha
mov
and
add
cld
fcomps
xchg
mov
adc
xchg
inc
sub
push
cmp
ret
cmpsl
dec
sahf
dec
mov
jmp
xchg
xchg
out
and
test
sbb
rol
cltd
mov
push
insl
xor
dec
inc
scas
pop
mov
ret
pushw
or
loop
sub
jg
fucomip
sbb
rcrb
shrb
divb
hlt
jmp
repz
incl
cli
dec
out
mov
in
adc
jmp
push
fisubs
fwait
inc
sar
mov
jg
fnstcw
lret
adc
mov
mov
sub
jecxz
ja
sbb
loopne
subl
xchg
sarl
ret
mov
call
jp
imul
js
mov
jl
jne
mov
cmc
shll
xchg
inc
mov
jns
inc
pop
mov
xchg
insl
or
fucomi
cli
pop
shlb
pop
fadds
and
outsb
jne
cmp
pop
push
sarb
push
dec
outsl
sahf
mov
cmp
cld
mov
outsb
mov
pop
js
in
loopne
pushl
loopw
add
int
push
dec
xchg
ret
adc
out
jg
cmp
xor
loopne
fwait
leave
add
movl
jl
repz
jl
push
call
push
pushf
lods
sbb
add
and
jg
test
mov
inc
idivb
dec
aad
fst
out
insl
jnp
mov
ret
and
pushl
or
mov
push
sub
mov
xchg
repnz
fmul
scas
fbstp
mov
jmp
sub
aaa
mov
push
out
aam
push
xor
pushl
jmp
cwtl
popa
test
push
leave
fdiv
es
or
clc
push
mov
decl
adc
ljmp
xchg
add
bound
xchg
mov
mul
mov
jle
pop
rcl
cwtl
jo
leave
roll
pop
mov
pop
mov
jae
fistpl
sbb
jg
in
jbe
daa
cmp
cli
jno
int3
loopne
ret
pop
xchg
dec
out
add
xchg
fwait
mov
shll
pushl
fdiv
xchg
and
sub
xchg
aaa
xchg
data16
or
cmpsl
cmp
out
in
fnstsw
inc
mull
xchg
nop
lock
cli
fdivs
mov
dec
scas
incl
pop
ret
add
ret
stos
repnz
mov
xor
mov
mov
ljmp
in
push
dec
xchg
ds
xchg
sbbb
arpl
ljmp
jmp
lods
cmp
out
js
scas
and
cmpsb
movsl
mov
xchg
xchg
or
out
je
jmp
mov
xor
jle
cmp
or
test
pop
xor
pushl
xor
arpl
mov
ja
cmp
jb
shlb
lods
outsb
adc
jge
and
daa
je
and
jg
ljmp
xchg
fbstp
push
pusha
mov
mov
lods
and
out
cmp
fcomip
jmp
loopne
mov
and
jecxz
sub
cli
dec
fdivr
mov
cmp
fisttpl
jmp
inc
dec
xchg
jle
sub
insb
push
push
out
das
out
xchg
and
push
push
and
mov
mov
incl
sub
push
jp
adc
mov
in
add
test
popa
dec
andb
jg
push
ljmp
inc
dec
jl
push
add
popf
cmc
cmp
mov
xchg
xchg
adc
mov
sub
mov
in
jne
xchg
std
mov
mov
sarb
out
inc
call
lods
sahf
jle
push
sbb
push
in
sbb
cmp
inc
insb
or
mov
lcall
lcall
stos
ret
jne
push
mov
push
pop
call
loop
mov
dec
aaa
push
mov
push
jp
mov
mov
jp
arpl
cmp
clc
mov
stos
idivb
jecxz
icebp
adc
dec
mov
sar
incl
int3
sarb
or
dec
dec
adc
mov
pusha
sub
sbb
push
jmp
lahf
xchg
ret
sbb
push
xor
dec
ljmp
jecxz
sbb
sbb
xchg
inc
dec
mov
dec
aam
adc
mov
sbb
test
mov
mov
ja
sub
add
pushf
or
clc
cli
mov
jg
pushl
mov
inc
out
pop
and
int
call
jno
pop
inc
enter
adc
decl
in
push
push
mov
arpl
inc
ja
push
jmp
insl
ret
cmp
mov
fbld
lds
cli
cmc
jns
cwtl
fs
push
je
in
mov
pop
gs
mov
pop
jnp
xor
incl
push
lcall
out
ss
rorl
mov
and
cs
cmp
inc
fucomi
push
dec
mov
cmp
or
dec
fwait
fmuls
out
les
shl
fs
mov
insb
cld
das
clc
mov
aas
loopne
test
lods
jo
ljmp
call
push
push
je
pop
call
dec
repnz
or
or
mov
sub
xchg
ja
incl
flds
ret
mov
jge
notb
stos
xchg
dec
hlt
and
mov
or
jge
stos
mov
out
xchg
push
test
es
into
pop
mov
xchg
pop
sarb
std
adc
test
pop
ljmp
add
stc
lcall
mov
pop
adc
unpckhps
movsb
loop
decl
inc
xchg
xor
pop
jae
jb
cwtl
sbb
pop
adc
push
fwait
movsb
sbb
sbb
cmpb
imul
adc
and
mov
jnp
in
lods
pop
mov
fbstp
mov
ret
push
shlb
lods
push
leave
push
test
sub
jp
jmp
push
mov
sbb
scas
jl
inc
pop
cmp
and
jl
mov
enter
add
out
push
cmp
std
lcall
mov
lds
ds
mov
insl
enter
pop
scas
pushf
insl
sahf
int3
xchg
std
xchg
les
sub
sbb
mov
jecxz
adc
inc
pusha
mov
test
repz
rolb
inc
mov
iret
xchg
scas
shr
push
pop
pop
loopne
jge
dec
fistps
bound
fistpll
xchg
rorb
fwait
nop
adc
add
or
mov
inc
loop
pop
xchg
in
xor
add
dec
sahf
std
push
loope
aad
push
jae
loopne
dec
cmp
inc
pusha
add
clc
ficoms
xchg
mov
test
mov
cmp
pop
dec
out
xor
cltd
jne
mov
cli
call
std
jb
in
fidivrl
outsb
lahf
test
xor
jnp
in
xor
push
dec
sar
dec
cs
dec
movsl
jns
pop
mov
push
cld
jmp
test
mov
adc
ds
incl
push
push
pop
cmc
xlat
or
jp
and
nop
rorl
lds
jle
mov
stos
loopne
mov
xchg
in
call
add
mov
es
std
negb
pushl
cld
call
xchg
cmpsb
jg
xor
outsb
call
ror
inc
in
mov
ljmp
insb
loope
cmp
mov
lds
xor
imul
aaa
loopne
fisubrl
out
push
testb
pusha
xor
aaa
pop
ja
lcall
aam
push
ja
pop
sbb
xchg
sub
int
int3
cmp
mov
mov
cmp
pop
jo
insb
stc
lret
das
mov
or
push
jg
movsb
daa
xchg
pop
xlat
mov
decl
mov
pop
mov
jo
test
out
cld
dec
imul
mov
incl
mov
dec
push
inc
loop
outsl
xorl
lods
std
jmp
cmp
pushl
aad
stos
cmpsl
aaa
mov
mov
fistpll
inc
inc
or
dec
mov
inc
pop
sarl
cld
and
mov
pop
nop
mov
dec
decb
adc
lcall
aas
ljmp
mov
cmp
jo
int
and
and
mov
fwait
push
aaa
es
lcall
sbb
mov
cmc
jecxz
mov
jmp
mov
pop
and
sarb
lret
imul
pusha
clc
mov
in
jmp
out
add
and
fldenv
std
xor
cmpsb
add
lret
popa
scas
sbb
in
and
repnz
test
pop
loop
pop
repz
inc
iret
pop
mov
sbb
addr16
aam
pop
sbb
rolb
ljmp
and
nop
out
mov
mov
repz
mov
or
cs
inc
les
mov
fisttpl
xchg
lret
bound
mov
fldcw
rclb
cltd
orb
andl
jnp
ss
sbb
ret
daa
movsb
mov
push
mov
or
mov
inc
push
pop
test
ret
sbb
pop
cmp
faddp
or
dec
loope
mov
cmpl
xchg
mov
jg
pop
lcall
loop
mov
push
xchg
cli
pop
cmp
stos
jg
adc
pop
and
mov
test
sbb
cli
jmp
inc
mov
push
loop
out
push
push
cmp
call
push
xchg
jg
pop
in
push
gs
inc
mov
jbe
aas
ds
out
ds
inc
adc
xor
imul
jne
repnz
fprem
out
or
ss
and
sub
std
decl
lea
aas
xorl
hlt
pushf
ss
mov
pop
mov
decl
out
cli
add
inc
and
xchg
and
dec
mov
xor
push
xchg
mov
push
or
ret
sar
sbb
cmpsb
fucomip
xchg
push
pop
mov
add
inc
stos
fistl
pop
pop
xchg
xchg
popf
adcb
clc
jmp
add
xor
or
mov
incl
xchg
jmp
scas
add
and
outsl
xchg
xor
ds
jno
jae
pusha
enter
dec
jmp
or
xor
outsl
filds
inc
dec
in
xchg
dec
test
adc
cltd
aaa
inc
imul
stos
and
push
iret
negl
fcomps
mov
testb
es
add
xchg
cmp
and
test
test
js
rcll
rclb
pop
es
jmp
test
lock
jno
fsub
ja
sub
ret
fidivs
sbb
jno
xor
push
ljmp
icebp
shl
and
cmp
or
mov
jmp
call
fs
push
mov
adc
inc
xor
mov
pop
imul
pop
dec
pop
inc
push
mov
add
mov
sbb
scas
push
cmp
call
mov
mov
scas
imul
movsb
jbe
fistpl
sbb
mov
sbb
jl
pusha
xor
adc
loope
movsl
je
mov
test
fcomps
clc
mov
filds
adc
into
popf
push
test
jb
lods
xor
dec
fdivrs
subl
or
cli
loop
shlb
fisubrl
incl
repnz
mov
adc
pop
fs
jp
movl
pop
notb
adc
lret
mov
or
and
stos
int3
movsl
sbb
xlat
mul
cwtl
add
sbbb
ret
idivb
hlt
int3
aam
jg
inc
jne
cmp
aaa
cld
xor
mov
mov
cs
push
or
dec
fists
xchg
lahf
xchg
inc
lock
xchg
pushl
ja
stos
xchg
not
aam
pop
icebp
loop
jnp
pop
xchg
jb
add
ljmp
dec
xor
addl
cltd
mov
inc
outsb
push
ss
fcoms
mov
xchg
out
inc
dec
cli
outsb
mov
stos
sarb
cmpsb
jnp
sarl
push
jp
dec
int3
pop
lods
popa
test
jo
inc
xchg
pushl
aad
in
inc
sbb
aam
dec
cltd
add
push
push
xor
or
push
push
hlt
cs
push
sbb
xchg
mov
xchg
push
inc
fidivrl
push
mov
dec
push
lcall
pop
rcrb
pop
or
xchg
dec
or
pop
clc
mov
xor
jmp
pop
lock
cmp
mov
das
repnz
aad
cltd
push
outsl
mov
test
mov
xchg
push
adcb
rolb
pop
icebp
lcall
inc
es
xor
scas
and
mov
shll
cwtl
stc
push
cmp
lahf
daa
cld
lcall
data16
jg
or
mov
push
andl
push
mov
jg
inc
hlt
ljmp
sbb
lea
xlat
decl
add
xor
cmp
push
xor
inc
or
xchg
sub
adc
inc
out
cs
xchg
ret
or
lods
cmp
loop
insb
jo
fstp
jns
adc
inc
push
sbb
sbb
lret
mov
cmpsl
and
inc
pop
push
sub
decl
inc
mov
dec
aaa
orb
or
aam
aam
jle
cmp
addr16
add
xchg
ljmp
xchg
dec
insl
adc
or
mov
push
addb
call
cmp
xchg
test
loop
sbb
data16
stos
data16
loop
fcos
pushl
pop
add
mov
mov
pop
or
pop
addb
int
jp
sub
jg
aad
jno
sub
mov
or
cmp
mov
xor
sub
call
sahf
loopne
inc
addr16
testb
adc
ja
test
adc
insb
mov
push
out
popf
or
ljmp
clts
jno
fisttps
popa
cltd
dec
jecxz
aaa
inc
mov
leave
mov
lods
ss
pushl
pushf
xor
mov
das
cltd
add
mov
pop
and
loope
xchg
xorl
mov
gs
fisttps
cmpb
pop
mov
cmpsb
cli
push
daa
mov
incl
adc
mov
lock
test
clc
fwait
test
mov
cmc
ret
jo
mov
ljmp
lret
inc
jne
movsb
arpl
adc
test
imul
cli
push
movsb
fsubrp
sbb
shr
movsb
imul
adc
mov
mov
push
mov
lahf
cmp
data16
and
es
hlt
adc
insb
sti
mov
call
mov
or
jno
popf
push
or
and
stc
test
fisubs
adc
call
bound
sub
lods
fisubrl
push
cmc
and
mov
test
shl
jp
pushl
push
pusha
fimull
cltd
insl
and
imul
or
jmp
clc
jno
lret
xor
inc
mov
arpl
pushf
sbb
ds
fbld
hlt
cld
arpl
mov
aas
adc
icebp
mov
call
lret
add
mov
push
lcall
clc
call
adc
add
sbb
mov
fisubrs
jbe
fidivl
ds
mov
call
adc
gs
add
call
mov
xor
fcmovnb
loope
lret
andl
jg
scas
xchg
in
xor
pop
inc
jge
mov
stc
and
lret
or
push
aad
cmp
into
enter
jg
stc
cwtl
mov
shlb
loop
packsswb
pop
out
mov
push
insl
push
pop
pushf
bound
decl
sarl
stos
rcrb
cltd
mov
mov
lret
and
in
push
js
in
cmp
ljmp
or
out
lods
lock
insb
out
cltd
push
in
push
jmp
subl
push
cmpsl
fsubl
push
notb
and
repz
ljmp
pop
shrl
and
sbb
bswap
adc
mov
out
pop
scas
xchg
das
lcall
shrl
dec
sub
jbe
out
push
fsubl
sbb
jl
cmp
cltd
outsl
les
jne
ljmp
dec
jp
or
std
test
or
sahf
cwtl
in
hlt
mov
jne
movsl
clc
ljmp
ss
iret
pushf
hlt
out
lcall
fwait
jmp
ljmp
add
das
inc
xchg
sub
cltd
sub
decl
xor
xor
hlt
add
in
stc
inc
call
push
push
vmaxss
cmpsb
xor
xor
dec
jmp
mov
lock
push
roll
ja
lahf
lret
lods
in
and
pop
cmp
and
lock
mov
ljmp
mov
scas
xchg
jge
lcall
ljmp
push
roll
jno
pop
mov
xor
aam
in
int3
mov
fdivr
xor
enter
jno
faddl
dec
jne
fbld
pusha
sub
int
fisubrl
outsb
dec
xor
xchg
pop
add
mov
sarb
stc
data16
ror
and
push
fs
sarl
out
mov
push
or
sub
jg
jmp
adc
pop
and
push
lret
cmp
sub
cmp
inc
dec
push
test
and
shrb
push
je
and
es
cltd
mov
inc
movlps
sti
mov
gs
insl
adc
mov
mov
xor
fstpl
imulb
adcl
ret
xchg
adc
sbbb
das
loop
jle
decl
or
sbb
and
inc
adc
cld
out
clc
fucomip
pop
lock
mov
and
jle
mov
fisttpll
and
sub
incl
arpl
xchg
sbb
pop
cmp
mov
ret
js
test
and
incl
idivl
int3
lods
imul
inc
dec
mov
dec
or
leave
lahf
pop
fcomi
sbb
cld
lea
add
std
psrlw
mov
out
into
cmp
lock
scas
mov
mov
xchg
dec
inc
or
je
shlb
scas
mov
insb
ljmp
fisubrs
or
data16
push
jb
sub
jle
lds
inc
imul
jg
push
push
repz
movsb
xchg
xchg
push
test
inc
cmp
cli
in
cmp
das
xor
jle
push
sbb
add
mov
std
call
mov
out
jg
leave
sub
call
ja
in
inc
int3
ret
iret
add
out
les
xchg
mov
push
lret
stos
pop
and
es
lods
pushl
dec
mov
dec
ss
or
sbbb
scas
nop
xchg
pushf
pop
stos
jg
adc
fs
les
pop
arpl
dec
in
dec
cmp
jp
stos
into
push
fidivrs
dec
fidivrl
mov
scas
inc
or
loopne
jmp
pusha
fstl
gs
repz
lock
mov
imulb
pop
aas
test
and
stos
ret
or
and
jno
or
dec
pop
iret
jne
cld
lcall
inc
mov
xor
out
xor
xchg
xchg
lcall
cmp
pop
cmp
sbb
into
fnstenv
dec
scas
add
lcall
cli
push
push
add
push
push
pop
xchg
mov
pushl
cld
incl
add
or
sbbl
mov
sub
xchg
int
jmp
push
lcall
pop
pop
insl
addr16
jmp
adc
mov
cmp
and
shrl
orb
inc
xchg
sbb
aad
lock
inc
push
sbb
lea
aam
call
loopne
add
hlt
inc
push
mov
outsb
pusha
test
push
test
jo
sub
enter
sbb
xchg
mov
ljmp
cli
mov
adc
dec
iret
incb
and
inc
ja
mov
sub
adc
cmp
cmc
pop
jmp
imul
in
lcall
jl
xorl
sbb
adc
mov
dec
inc
test
call
lds
fbld
mov
loop
mov
mov
int
out
in
mov
fwait
enter
das
int3
les
xor
jg
pop
sub
jle
sbb
das
add
stos
xchg
and
lret
arpl
jle
ljmp
or
jmp
stos
test
push
rol
call
lds
ljmp
jle
cmp
ja
sub
mov
sbb
sbb
das
lcall
jp
mov
add
call
mov
pop
dec
cmpsl
mov
jp
cmpsl
cmp
fstpt
mov
incl
xchg
mov
fcmove
int3
cwtl
fstpl
xchg
cmp
mov
mov
decl
in
mov
jno
mov
ds
test
and
incl
mov
aaa
pop
gs
push
popf
xor
mov
xor
mov
leave
sti
fwait
incl
cmpsb
fisubl
fbstp
lods
jle
rcrb
dec
dec
jecxz
iret
call
inc
decl
jecxz
push
jnp
fldcw
sti
sbb
loope
aas
sub
lahf
loope
mov
imul
sub
nop
ds
or
pusha
movsb
push
mov
mov
in
adcl
in
adc
xor
adc
xchg
mov
insb
sbb
pop
jnp
sub
or
mov
lock
cmc
negb
push
mov
dec
inc
mov
bnd
clc
call
jno
addr16
pop
daa
cs
xchg
popa
xlat
lcall
mov
out
cmp
andb
inc
shl
cmp
or
sub
mov
mov
aaa
sahf
test
sub
mov
incl
incb
mov
into
in
pop
sub
pushf
push
mov
xchg
pusha
mov
push
jmp
cli
inc
xchg
push
outsl
popa
test
adc
fcoml
mov
push
incl
arpl
rcll
rcl
lret
cmp
fwait
aad
jb
mov
adc
fists
pop
inc
mov
loop
lods
mov
inc
xlat
orb
cltd
clc
sub
fsub
xor
cmp
and
call
lahf
out
repz
or
dec
fwait
add
stos
cwtl
mov
das
xlat
pop
push
int3
dec
stc
nop
lahf
pushl
xchg
and
fbstp
imul
adcl
shrl
sti
sub
and
shr
mov
stos
push
out
lret
daa
dec
cmp
add
xor
xchg
imul
xor
icebp
cld
call
outsl
rcll
insb
xor
sbb
popf
xchg
cmpsl
mov
mov
cmp
call
fs
jb
sbb
das
pop
shlb
rclb
push
scas
out
mov
loop
ja
jmp
sbb
add
mov
mov
rclb
xchg
clc
jg
dec
arpl
jmp
pop
jno
mull
adc
push
or
loop
push
lea
or
jae
fwait
or
decl
imul
shrb
gs
movsl
mov
jns
pushl
test
jb
es
add
cmc
push
lcall
xchg
push
aaa
call
pop
inc
lret
dec
cmp
imul
dec
adc
incl
in
jae
xchg
push
rorl
mov
outsl
xchg
push
lea
push
and
enter
and
frstor
push
adc
loopne
cmp
insl
mov
and
and
dec
fsubl
gs
mov
mov
dec
icebp
sbb
jge
jp
lods
mov
lahf
pop
dec
aaa
add
out
es
push
arpl
rolb
cld
mov
and
dec
pop
repnz
sar
dec
mov
add
jnp
lcall
stc
dec
dec
sahf
shrb
ss
mov
cltd
dec
ror
mov
sahf
mov
dec
pop
repnz
lcall
sub
push
jns
mov
push
inc
loopne
dec
ss
push
pop
cs
call
iret
clc
rcll
or
mov
inc
ret
dec
mov
or
jmp
xchg
fwait
cmp
stc
pushf
call
mov
mov
pushl
or
test
push
fiaddl
paddsw
jg
adc
int3
shl
add
adc
sub
out
imul
stos
popa
or
pop
nop
sti
fwait
inc
data16
inc
cmc
mov
into
sarb
popf
lods
sub
jmp
stc
leave
xchg
dec
in
aad
sbb
mov
iret
fcomps
fs
cmp
dec
jg
pop
and
or
xchg
mov
idivb
fs
aad
in
inc
data16
fcomip
bound
ljmp
or
mov
jmp
push
mov
mov
and
mov
add
inc
mov
loopne
add
std
mov
push
std
and
nop
mov
dec
pop
dec
cmp
call
mov
xor
sbb
adc
pushl
cld
pop
or
les
movsb
pop
outsb
xor
sub
shl
xchg
adc
mov
insb
das
mul
jp
arpl
enter
adc
xor
aam
popf
sbb
gs
call
and
add
rcr
sti
scas
into
js
or
ljmp
std
insl
sbb
stos
les
mov
or
repnz
enter
imul
mov
test
xor
out
cltd
outsb
sbb
arpl
divl
sub
fldcw
jo
stos
jne
insb
lods
scas
mov
les
lea
push
push
jle
outsl
mov
jns
insl
sbb
shll
dec
sbb
push
push
in
mov
les
sub
jae
jae
dec
cmp
addr16
cmp
mov
inc
cmp
inc
lea
popa
fwait
dec
jae
cld
adcb
mov
test
push
mov
cmc
mov
pop
mov
jge
ljmp
das
mov
mov
into
clc
test
pop
cmpsb
fdivrs
mov
mov
mov
xlat
sahf
ds
jg
mov
nop
fmulp
lcall
bound
xchg
test
mov
dec
mov
movsl
roll
sub
xchg
or
mov
adc
sbb
xchg
cltd
xchg
jp
dec
out
es
into
cmpsl
mov
inc
fdivp
mov
lock
xchg
mov
mov
test
dec
or
outsb
es
fldcw
fmuls
pop
pop
filds
loop
mov
push
jb
push
icebp
mov
std
gs
push
mov
mov
jo
jns
push
loop
sub
or
push
dec
shl
mov
dec
cmpsb
lcall
cmp
mov
mov
jg
inc
test
sahf
sbb
mov
lret
in
sub
lods
mov
sub
xor
add
ret
decl
fidivrs
mov
pop
push
test
rorb
jmp
mov
lock
dec
pop
clc
nop
jnp
add
inc
dec
mov
leave
xchg
adc
out
mov
int3
fstpl
fldl
mov
lcall
roll
push
dec
out
mov
shrb
in
addr16
mov
andb
call
and
jl
ljmp
sbb
push
push
jmp
jae
pop
jge
repnz
push
mov
cmp
sbb
test
fisubrl
in
or
stc
ret
sbb
jo
add
xchg
inc
lea
mov
cmovp
mov
push
mov
add
jae
call
sti
outsb
jp
ja
repnz
cld
movsl
adc
jp
incl
fists
movsb
nop
xor
jg
fs
mov
in
lret
sahf
fdivrs
icebp
inc
push
arpl
aam
int3
call
push
sbb
cmp
inc
movsb
xor
cwtl
out
sbbb
flds
push
shlb
jmp
xor
sub
jmp
push
and
hlt
jge
adc
call
push
es
pop
outsl
cwtl
xor
ret
add
ret
flds
lods
mov
mov
in
lcall
ss
mov
pushf
inc
adc
sub
lret
fbld
out
jle
iret
xor
dec
and
cmp
xor
mov
mov
jle
jp
stc
clc
add
dec
jmp
xor
dec
ljmp
add
rorl
xor
pop
sub
ss
or
mov
insl
add
lcall
addr16
xor
cmp
mov
fldenv
and
test
pushf
test
sar
mov
sub
mov
enter
lods
sbb
inc
sub
xchg
outsl
fstpl
in
aad
cmp
jno
adc
lds
cmpsl
arpl
nop
add
pushl
es
xor
int
jb
sub
dec
mov
ss
fcomip
jg
out
sub
nop
movsl
sub
cmp
pop
call
clc
pop
icebp
fs
inc
incl
fldcw
add
scas
mov
mov
adc
ret
and
fisubl
add
ljmp
and
jnp
jg
std
popa
push
hlt
icebp
hlt
xchg
aam
push
cld
cmp
inc
int
cmp
xor
xchg
adc
ss
into
cmpsb
push
sbb
decl
mov
in
andl
jle
xchg
mov
cli
ljmp
pushl
call
inc
test
dec
or
pop
stos
idivb
push
mov
push
lahf
in
fcomip
and
pop
sbb
pusha
cld
jae
cmp
mov
cmp
ljmp
loope,pt
push
lods
jbe
xor
jg
jle
jg
jp
and
test
flds
cs
jge
xchg
sub
jne
fmull
push
add
jmp
and
in
jno
inc
adc
fs
pop
dec
fbstp
xor
mov
das
mov
inc
lcall
push
jge
adc
insl
mov
jl
sub
jne
add
decl
push
mov
xchg
enter
test
les
pop
fstl
xor
mov
fistpll
aaa
in
stos
arpl
mov
push
jb
cwtl
scas
mov
xor
ljmp
pop
jo
fildl
mov
stos
das
outsl
in
bound
cmpsl
mov
mov
add
push
sbb
outsb
cmp
pop
add
lret
aaa
mov
or
cld
call
xchg
ficoml
fs
repz
jg
pop
leave
jmp
fldl
lret
outsl
inc
xchg
iret
int
scas
pop
std
pushl
mov
or
dec
hlt
iret
lods
cwtl
fs
mov
add
mov
pop
jle
into
gs
fsubrs
mov
shll
cmc
push
into
cld
js
call
xchg
ja
pop
pushf
or
xchg
sbb
cmp
and
add
cmc
repz
pop
mov
call
push
orl
xchg
and
jbe
mov
arpl
adcb
ret
in
ljmp
jnp
aad
push
add
lods
mov
decl
or
insl
std
fisubrs
int3
cmpb
sbb
rcrb
sti
jno
xchg
inc
dec
ljmp
add
stos
aas
cmpsl
dec
test
int
arpl
pop
xchg
push
mov
aaa
cld
call
pushf
int3
mov
out
lock
clc
movsb
add
cmpsl
dec
mov
aam
cmp
mov
lret
sub
unpckhps
pushf
das
aad
mov
jmp
or
mov
push
cmp
dec
inc
pushf
sbb
push
xchg
add
and
test
jmp
outsl
cli
decl
sbb
and
aam
xchg
fdivs
lret
inc
inc
sub
jg
test
movsl
ret
sub
stos
jg
sub
mov
xchg
xor
inc
pop
fisttpl
adc
adc
xor
leave
mov
mov
out
jmp
loop
das
adc
or
dec
outsb
pop
sbb
mov
add
sub
stc
pop
outsl
or
push
mov
rorb
or
jecxz
mov
dec
jp
or
nop
jo
push
pop
mov
cmovns
loopne
mov
sti
mov
cmp
int3
jecxz
fdivl
sub
clc
shlb
rcrb
mov
scas
fnstsw
sbb
shll
movsb
push
pop
pop
out
cli
decl
push
in
adc
inc
push
cwtl
fcompl
jbe
decl
inc
dec
imul
aas
mov
scas
insl
xchg
fiadds
and
or
or
xor
call
loopne
test
mov
int3
mov
scas
inc
inc
mov
int3
shll
mov
jo
lea
mov
call
jmp
pop
push
or
daa
in
sbb
lcall
cmp
sbb
outsl
ret
in
mov
decl
out
push
mov
gs
cs
fcomip
call
movsb
add
clc
jne
aas
icebp
notl
sbb
lock
call
call
sub
sbbl
adc
stos
cmp
pop
daa
loop
fadd
inc
call
movsl
cmc
ljmp
dec
movsb
jle
insb
mov
aad
pop
add
call
add
jp
and
adc
popf
push
fildll
and
int3
lret
jae
movsb
sbb
inc
in
test
lcall
aad
hlt
hlt
repnz
fsin
nop
popa
xchg
pop
test
lahf
push
sarl
dec
add
scas
add
pop
iret
xor
ds
jmp
in
dec
jge
mov
repnz
pop
fdivrs
cmp
cmp
imul
je
or
mov
lcall
sti
inc
imul
mov
enter
pop
inc
pop
add
sub
xchg
lret
cmp
jnp
sub
addr16
cmp
out
sbb
sar
call
cmp
dec
lds
js
mov
dec
loopne
sbb
jae
sti
std
cld
ds
push
lea
movsl
inc
or
aas
cmp
mov
mov
and
push
fsubl
and
fimuls
jmp
sub
sub
push
mov
lret
call
mov
out
adc
adc
jge
adc
xchg
mov
xor
fbld
xchg
je
xchg
jns
dec
xchg
cmpsb
movsb
jl
pop
in
mov
push
fisubrs
ret
add
push
popf
add
mov
mov
shll
xlat
sbb
pushl
ret
add
jl
xor
push
mov
xchg
test
addb
aam
fistpl
and
cmp
decl
dec
cld
mov
das
sahf
mov
cmp
or
enter
call
mov
loopne
jae
imul
jg
int3
cmp
mov
xor
jg
mov
push
or
jmp
xchg
inc
sbb
cmp
fwait
ret
aaa
repz
push
or
aas
or
loope
lock
jmp
mov
cmp
mov
inc
xchg
jge
xor
decl
jge
cltd
jae
push
add
rcrb
stos
mov
sub
cmp
dec
inc
push
push
mov
pop
inc
push
call
pushf
pop
xor
mov
in
bound
sbb
xchg
xchg
test
push
bound
ret
jmp
imul
dec
jg
cmpsb
aam
cmp
outsb
and
mov
push
mov
mov
mov
mov
lea
cmp
popa
mov
decl
and
dec
cmp
xchg
inc
out
aad
sbb
stc
andb
out
adc
xchg
fsubrs
pop
or
sbb
pop
sbb
lea
pop
popf
mov
call
mov
pushf
ret
mov
xchg
xor
gs
fildl
xor
inc
andb
jns
movsl
pop
leave
int
lock
hlt
incl
int
pop
icebp
pop
add
mov
pop
add
xchg
shll
cmpsl
sbb
decl
inc
xor
imul
fistps
daa
int
les
icebp
call
push
das
inc
xor
imul
mov
mov
xchg
loop
call
out
rorl
mov
incl
mov
sahf
dec
sbb
cmp
lods
mov
adcl
jmp
pop
loope
lcall
sbb
pop
lds
sub
jnp
push
cld
cmp
mov
stos
in
dec
fwait
dec
adc
fildll
pusha
add
push
mov
mov
test
jo
sar
popa
test
sbb
shl
fldt
pushl
shll
outsl
movb
cwtl
shrb
pushf
jecxz
mov
xchg
icebp
lcall
into
lret
dec
cli
push
jno
mov
lds
jecxz
mov
ljmp
notb
cmp
arpl
sbb
cmp
sahf
sub
mov
pop
cld
xor
pop
dec
ljmp
addb
fstps
push
fisubl
xchg
adc
out
stos
jne
inc
inc
mov
jns
repz
inc
mov
push
lahf
out
cli
ljmp
push
cmc
and
inc
push
cld
push
outsb
sbb
hlt
dec
jae
fcomip
ljmp
add
push
iret
icebp
lock
cmc
mov
in
push
sti
fnsave
in
inc
decl
push
adc
pop
adc
push
adc
and
lret
jmp
mov
out
js
subb
popf
mov
orb
jno
rcl
out
adc
les
pop
in
pop
and
movsb
xchg
mov
mov
pmullw
mov
dec
lods
xchg
mov
int3
jp
repnz
adc
push
divl
jo
sbb
or
in
jg
lock
shr
pop
sub
shlb
in
insb
aas
loope
xchg
jg
ds
xchg
pop
incl
lcall
xchg
mov
dec
and
sub
lret
xlat
or
jb
xchg
sub
lcall
jmp
pop
fistpll
cmp
ljmp
push
add
fcoml
jmp
jmp
add
cmpsl
xchg
cmp
test
sti
iret
int
vdivss
jp
mov
incl
popa
rcrl
jecxz
xchg
addr16
add
pop
decl
clc
mov
and
aam
jns
or
les
loopne
stos
and
and
mov
xor
sar
inc
loop
scas
sub
and
aaa
lods
aaa
aad
dec
dec
subb
popa
add
xchg
and
pop
xor
ds
js
adc
dec
clc
xor
add
inc
popf
xchg
stos
movsb
jg
decl
adc
ja
out
cmp
adc
jne
rolb
daa
push
ja
lods
iret
movsl
pushl
dec
mov
dec
clc
les
repnz
pop
imul
je
mov
fs
and
cmp
mov
repz
fdivs
lret
test
sub
cmpsb
cwtl
loop
shll
mov
smsw
pop
fwait
mov
mov
pop
dec
and
add
cmpsb
mov
iret
iret
push
loopne
out
pop
stos
test
cli
add
ja
xchg
mov
call
ja
test
ss
imul
fwait
lret
cmp
push
inc
fwait
cmp
adc
fsubl
shr
push
jmp
call
pop
xchg
jb
mov
cwtl
movsb
dec
popf
jnp
mov
push
insb
setno
rcll
pop
xchg
sti
mov
push
dec
lret
into
lcall
pop
inc
inc
push
inc
pop
repnz
fbld
sbb
jge
lret
popf
push
movsb
negl
aas
add
cltd
call
stos
mov
ss
cld
incl
vmread
not
add
push
rol
sbb
jge
mov
mov
pop
dec
pushl
dec
dec
lods
sbb
cld
mov
cld
fbld
dec
push
movsl
xchg
dec
jg
jmp
mov
in
dec
in
jb
or
movsb
test
out
pop
loop
outsl
jge
arpl
sbb
mov
std
pop
es
cmp
aas
ja
std
into
sarb
sub
pmulhuw
incl
add
lahf
cmpsl
mov
outsl
jge
inc
xor
jge
pop
xor
fidivs
jg
xor
push
inc
push
mov
adcb
add
gs
nop
sub
sbb
add
ljmp
cmp
iret
jb
lcall
dec
adc
sub
repz
clc
mov
aas
cmp
dec
jae
pop
hlt
call
mov
inc
xor
jge
sti
push
mov
jg
jno
jmp
adc
lock
mov
mov
inc
jp
stos
jp
push
adcl
jmp
pusha
movsl
cwtl
inc
nop
xor
lahf
add
xchg
dec
out
fnstenv
daa
lahf
pusha
call
hlt
jge
cmpsl
les
call
mov
sti
pop
pop
jl
fdivrl
inc
xchg
rclb
mov
ljmp
rorb
insl
sbb
ja
cmc
or
orl
inc
mov
jmp
mov
xor
dec
mov
mov
fldt
jne
sbb
das
jmp
outsb
rorl
ja
aaa
cmp
sti
jb
lcall
sbb
decl
daa
test
movsb
ds
jne
jnp
bound
or
cmp
dec
shl
daa
jmp
jl
cwtl
dec
into
cmc
cmpb
inc
scas
jle
add
pop
xor
lahf
cmp
jmp
and
fisubrl
lods
xchg
cmp
inc
aaa
decl
aaa
lods
inc
jno
lret
jno
push
push
jmp
sbbb
fidivl
icebp
pop
decl
orl
lds
sar
movl
scas
decl
js
fnstenv
pop
mov
movsl
rcrb
mull
outsb
popf
adc
aaa
xor
inc
cmp
sub
shlb
jp
bound
xchg
jmp
out
mov
orb
dec
xchg
mov
xchg
or
iret
pop
jle
or
lret
cmpsb
les
mov
pop
pop
sub
clc
mov
cltd
push
jns
incl
pop
dec
ret
jl
add
sbb
push
sub
mov
and
stc
push
fcomp
push
call
cmp
dec
add
out
insl
in
lock
jmp
dec
mov
cmpsl
movsb
flds
push
xor
cltd
adc
cltd
rcrb
dec
cli
jbe
pop
pop
scas
mov
jmp
rorb
rcrl
mov
jg
shl
sub
adcl
mov
jg
pop
dec
cmpl
fisttpll
test
inc
in
or
inc
popf
sar
dec
shrl
sbb
jg
pop
fimuls
xor
test
stos
and
in
fucomp
mov
cld
decl
jp
pop
mov
xchg
xor
and
lods
jae
sub
push
shll
or
jg
inc
out
cmp
pop
stos
jp
das
leave
pop
mov
ja
pushf
mov
mov
ja
jge
popf
xchg
mov
jno
pop
lret
jg
ljmp
inc
or
mov
mov
cmovae
inc
adcl
inc
les
out
aad
decl
xchg
enter
xor
pusha
data16
add
mov
pusha
icebp
pop
jge
ficoml
jg
pushl
lea
fldcw
fidivrs
inc
add
jns
fisubl
mov
pop
jns
les
inc
les
jmp
mov
in
mov
jg
fs
in
test
jmp
fdivrl
mov
stos
mov
ljmp
mov
cmp
jbe,pt
aaa
mov
orl
push
mov
test
decl
xchg
inc
out
mov
sbbb
inc
popf
std
mov
outsb
dec
jno
inc
hlt
imul
outsb
clc
cs
pop
ss
cld
jmp
xchg
loop
outsb
adc
cmpsl
mov
lods
cmp
mov
dec
mov
adc
pop
jns
xchg
or
jne
out
cltd
rcr
adc
xchg
jne
lea
pushl
pop
xor
mov
nop
lret
out
adc
pop
mov
dec
ret
jns
inc
xor
add
push
test
jb
movl
decl
add
adc
push
jns
loop
sti
test
mov
xor
stc
rcrb
push
xor
cmp
sar
sub
sbb
ss
xchg
add
incl
jb
pop
dec
arpl
in
dec
xorl
scas
in
scas
lock
scas
dec
add
incl
jmp
sbb
pop
in
cli
adc
jl
mov
inc
ret
sbb
call
jae
dec
dec
lock
fcmovu
stos
pop
imul
nop
call
push
scas
stos
push
xor
repnz
xor
sbbb
aas
repz
in
hlt
movsl
inc
notl
jl
lcall
xchg
fsubr
pop
add
sahf
loopne
adc
lret
ljmp
sub
xchg
or
jmp
xor
cld
and
inc
mov
lods
rep
jnp
sub
cmp
pop
out
xchg
xchg
jno
stos
jmp
dec
in
movsl
sahf
xrelease
xchg
sbb
adc
in
js
mov
xlat
into
push
add
je
cmp
loopne
mov
sahf
or
xchg
pushl
ss
and
nop
cld
loopne
stc
mov
insl
adc
fwait
icebp
push
lock
pushl
or
pop
push
test
mov
iret
push
icebp
out
adc
or
mov
xor
jne
out
cmp
or
in
sbb
out
cli
jmp
pop
fisubrl
and
into
adc
dec
xchg
push
pushl
cld
cmp
sbb
test
rcrb
pandn
and
icebp
ljmp
icebp
shlb
insb
or
outsb
scas
icebp
mov
jae
push
pusha
add
mov
xchg
insb
mulb
rcr
aam
daa
inc
add
mov
mov
push
mov
xor
add
rorb
mov
inc
in
push
cmp
xchg
cmp
add
xor
inc
xor
add
pop
imul
push
lret
aad
ljmp
jo
adc
popa
pop
insb
ds
or
push
dec
dec
add
lods
lods
into
add
scas
push
xchg
das
jnp
lcall
addl
lret
sbb
xchg
mov
sub
dec
incl
aad
imul
dec
jae
data16
testb
les
ja,pn
dec
pop
loopne
sar
inc
shl
jge
cmpsl
ja
cmpsl
mov
sbb
jmp
add
and
xchg
xor
push
cmc
xchg
jecxz
add
incl
in
mov
dec
push
cmp
push
jmp
mov
decl
pop
mov
dec
test
mov
push
frstor
pop
jg
and
pop
sarb
jge
mov
cwtl
or
pop
xor
pop
jbe
scas
dec
and
cli
sub
lds
jne
das
xchg
jb
jne
imul
lahf
fldt
repnz
loope
das
ret
rcr
mov
jg
xchg
sbb
incl
or
pop
or
jmp
sub
dec
jmp
fsubr
repnz
xor
mov
sub
xor
lods
mov
incl
movsb
loope
movsb
js
xor
xchg
data16
out
sbb
mov
in
dec
and
mov
and
js
stos
lods
imul
stos
sbb
pop
data16
mov
jns
dec
ja
xor
incl
testb
adc
sub
setle
sub
out
cli
jmp
jmp
and
pop
mov
shr
hlt
cmpsl
pushf
out
aam
sub
imul
jg
std
cvtps2pi
xlat
push
xor
decl
rcrb
pop
cmc
fistps
mov
pop
int
jnp,pt
jg
test
adc
adc
sub
mov
shl
test
cmp
mov
mov
add
fbstp
cli
shlb
popf
jnp
pop
or
add
clc
adc
lods
test
mov
or
inc
sbb
lds
test
mov
lods
stos
xchg
mov
adc
lods
mov
sbb
dec
decl
cmp
out
mov
push
jae
xchg
mov
es
jb
cmp
out
test
icebp
pop
popf
push
or
mov
sahf
add
movsb
test
mov
dec
cltd
pop
adc
std
xchg
or
loopne
sub
add
adc
cmp
mov
xchg
ljmp
out
cli
outsl
mov
or
ds
test
ss
fdivs
shlb
add
mov
or
jmp
xor
mov
fnsave
push
or
pop
pop
shlb
dec
add
mov
iret
xchg
xor
jecxz
mov
ljmp
xchg
and
imul
and
imul
mov
dec
daa
jae
jnp
insb
jg
incl
jae
or
leave
icebp
cmp
mov
mov
insl
hlt
jns
or
sub
out
add
push
inc
mov
push
dec
sti
xchg
lea
je
into
fprem1
loope
or
adc
pop
inc
or
push
repz
sub
int3
push
in
sbb
cwtl
je
xor
xchg
mov
js
inc
repz
push
scas
push
xchg
inc
sbb
call
daa
and
lea
jnp
hlt
mov
mov
dec
test
sub
adc
mov
push
pushl
aas
pop
xor
pop
pop
inc
jne
out
cwtl
add
cmpsb
xchg
push
push
mov
xchg
sbb
decl
mov
jne
loope
xor
xor
ret
cmp
or
cs
push
pushl
fwait
sahf
enter
fwait
jns
mov
dec
out
aaa
das
mov
repnz
jbe
add
shl
inc
incl
sbb
arpl
repz
add
jmp
cmc
ds
ss
mov
xchg
inc
mov
std
lahf
mov
xor
adc
popf
jmp
xchg
inc
out
imul
pop
xchg
clc
je
jns
in
mov
divl
out
test
mov
fildl
sar
fidivl
and
ja
cmp
and
sahf
push
pop
icebp
out
fwait
cmp
adc
push
mov
ljmp
call
and
cmp
push
jp
arpl
ljmp
push
jge
push
idivb
jge
js
mov
sar
add
cmp
jnp
lea
sub
andl
jg
addr16
pop
loope
cwtd
mov
repnz
jae
mov
sub
ret
push
das
mov
mov
outsl
add
enter
in
jl
adcl
aaa
jbe
xlat
movsl
xor
sbb
decl
arpl
xor
int
sbb
or
xlat
push
mov
push
jae
loope
in
dec
mov
ss
scas
into
push
imul
imul
pop
ss
decl
fimuls
fisubs
rolb
scas
ret
adc
pop
jbe
fwait
cltd
sub
gs
mov
xchg
icebp
mov
lcall
add
jo
in
dec
or
pushfw
popf
xchg
cmpsl
fcomps
xor
decl
test
adc
mov
cli
push
outsl
mov
sub
jg
ljmp
jmp
mov
shlb
fs
mov
dec
inc
xor
xor
pushl
cmp
inc
fidivl
cmp
into
arpl
mov
bound
mov
jg
cwtl
cmp
sub
insl
sbb
sub
adc
jg
xchg
outsb
ljmp
or
pop
stos
push
scas
fists
mov
adc
jg
xor
int3
out
lock
into
inc
and
or
push
insl
xchg
sbb
cmpsl
call
movsl
in
out
cli
jmp
xchg
imul
dec
jne
jbe
mov
pop
jp
mov
cmp
incl
pop
js
adc
cmc
repnz
enter
add
push
mov
mov
adc
cltd
jge
pop
call
pop
test
or
loop
gs
mov
jae
insb
call
icebp
loop
pop
jl
enter
jle
and
jbe
xor
es
sub
stc
lahf
incl
sbb
xchg
movsl
sub
jo
test
push
push
jle
add
sub
pusha
sti
insb
jmp
loopne
mov
jge
push
pusha
push
inc
cmp
or
lcall
sbb
push
pop
xchg
xchg
cmp
add
lods
out
movsl
push
clc
jno
lret
dec
lahf
ds
fldcw
icebp
ja
cltd
in
mov
cltd
mov
push
xor
push
xor
cs
pushl
add
vmovhpd
outsb
cmp
dec
mov
or
ja
jp
push
call
inc
ficoml
dec
gs
mov
and
call
mov
mov
rorb
mov
jle
push
pusha
fmul
popf
dec
jle
sbb
loop
enter
jg
outsb
mov
push
adc
aas
xchg
inc
push
mov
inc
jg
or
stc
insb
cmovb
jle
incb
dec
jnp
sahf
out
notl
ja
mov
cli
cmp
je
mov
in
push
sahf
inc
fisubrs
addr16
xchg
xor
dec
daa
es
dec
dec
adc
fdivs
cmp
or
cmp
mov
pop
jl
sbb
pop
mov
mov
add
les
decl
fbstp
or
popa
xchg
int3
arpl
sub
pop
aas
sub
decl
shr
mov
jo
jle
cmp
mov
add
cmp
mov
cmp
dec
mov
testl
jbe
mov
adc
or
stos
sub
sbb
decl
mov
xor
es
mov
je
mov
add
adc
mov
lcall
cwtl
aad
roll
pop
cmp
jp
or
mov
sbbb
test
pushl
xor
xor
sub
fs
aaa
pusha
xor
push
and
sub
and
and
in
inc
mov
out
out
out
xor
dec
jg
mov
jo
mov
aam
jb
adc
sbb
aaa
std
ljmp
mov
std
inc
repz
jno
pop
mov
icebp
sub
repnz
sub
cmpsb
push
clc
pushl
mov
inc
test
sar
or
sub
push
mov
sub
xchg
mov
and
movsb
out
and
jle
incl
mov
mov
or
bound
jno
decl
push
aaa
inc
dec
fdivp
jp
nop
xor
lods
mov
and
loopne
pop
jl
clc
sub
mov
out
mov
mov
jno
pushl
cmp
inc
cmp
lahf
jae
sbb
cmp
fdiv
push
jne
cmc
pop
inc
push
arpl
fnstsw
pop
data16
sarb
scas
cli
outsl
push
or
bound
cmp
jg
pop
test
mov
or
cmp
xchg
out
stc
aad
mov
leave
sarl
sbb
sarb
xor
push
roll
mov
scas
jp
inc
pop
push
aas
sti
adc
addl
imul
xchg
mov
jle
jne
or
sti
aam
aad
int3
mov
pushl
jae
dec
adc
mov
enter
leave
lds
jg
lcall
xchg
push
imul
mov
fwait
adc
add
je
pop
adc
incl
popa
popf
iret
pop
jo
dec
ja
loopne
in
adc
lds
inc
adc
dec
lods
sahf
push
out
mov
or
scas
arpl
daa
in
filds
push
fwait
cmp
xchg
jmp
push
inc
sbb
mov
pmulhw
bound
js
into
roll
decl
inc
xor
jle
mov
pop
cli
adc
dec
imul
sarl
lcall
movb
icebp
push
inc
cmc
arpl
sbb
clc
aad
popa
lcall
rcr
data16
lock
scas
js
inc
shll
repnz
and
cld
cld
mov
daa
sbb
repnz
dec
rclb
rcrl
lods
fwait
leave
sub
inc
push
jo
xor
add
fnop
test
push
ret
dec
movsb
gs
mov
cmp
adc
jae
push
ljmp
push
cmc
fsubrl
push
stc
add
xlat
push
scas
repnz
ret
out
fwait
dec
js
jg
mov
aad
fs
outsb
jo
adc
in
das
xor
mov
sbb
test
push
xchg
sbb
pop
xchg
xchg
push
mov
les
sar
mov
jecxz
out
pop
push
sbb
orb
mov
push
cs
loope
iret
push
pop
or
dec
pop
xchg
add
xor
vandnps
push
cld
sarl
imul
dec
add
iret
inc
jne
rcrl
lahf
adc
daa
sub
cmp
insb
outsl
clc
decl
jg
inc
jno
and
jecxz
jae
adc
cmp
cmp
pusha
or
add
ljmp
cli
movsb
adc
testb
adc
out
mov
call
sub
pandn
push
ss
adc
adc
popa
jb
or
ret
cld
in
mov
mov
aaa
cld
or
ljmp
xchg
pop
and
cmc
adc
call
incl
pop
mov
dec
lret
push
lahf
inc
and
pop
pop
stos
and
ss
and
cs
or
incl
data16
pop
loopne
jle
jecxz
mov
sbb
jns
mov
leave
xchg
loope
mov
mov
or
call
decl
jb
mov
stos
rorb
ja
lds
popf
jmp
mov
loope
adc
sbb
inc
jnp
push
adc
push
xor
cmp
decl
fadd
outsb
orl
add
jbe
gs
pop
rcrl
divl
repnz
push
test
incl
out
cmp
int3
mov
sbb
jo
and
sar
cmpsb
sub
xchg
ljmp
pushl
mov
enter
xchg
sbb
lock
insb
sub
std
outsl
decl
bound
out
aad
cmp
and
decl
js
or
mov
or
fwait
cmp
scas
gs
xor
dec
sub
mov
sub
and
lods
or
pop
imul
jns
dec
shl
push
sarb
cmc
push
push
ljmp
sub
rolb
bound
or
push
fcomps
mov
pusha
xchg
ds
repnz
adc
pop
push
sub
sti
xor
push
sub
insl
mov
or
cmp
jle
dec
outsl
adc
mov
cwtl
sbb
pop
add
faddl
inc
add
scas
stos
sub
imul
das
xor
adc
pushf
xchg
jo
dec
dec
push
decl
into
push
lods
aas
lds
jge
and
popa
mov
or
xchg
lods
dec
incl
fs
leave
and
inc
insb
shl
xor
fs
xor
xor
push
lret
call
ret
cwtl
mov
adc
mov
add
mov
cwtl
jg
mov
sti
les
jne
push
sub
aam
pushf
and
out
out
pop
cmc
lcall
cltd
stos
sbb
inc
je
std
mov
xchg
sub
lcall
clc
aam
sbb
add
dec
xchg
icebp
pop
pushl
inc
shll
jmp
aaa
xor
das
sub
push
std
sbb
imul
int
mov
and
adc
imul
pushf
jecxz
addr16
fstps
add
lds
jnp
ja
ret
push
jmp
addr16
xor
jmp
out
inc
icebp
addr16
jmp
add
pop
xchg
pop
cld
lcall
sbb
cmc
int3
mov
nop
xor
lcall
ja
push
popa
jecxz
call
outsb
movsb
scas
mov
test
loope
icebp
pop
pop
stos
mov
pop
jl
pop
sti
fs
dec
jnp
stc
pop
clc
dec
es
pop
inc
pop
jl
lea
arpl
mov
jl
dec
ret
xchg
jg
cs
sti
inc
jg
mov
jmp
or
cmp
pop
pop
outsb
xlat
cmpb
push
outsl
jmp
insl
inc
jecxz
cmpsb
shr
push
pop
push
insl
xorl
in
popf
mov
pop
lcall
push
jmp
jmp
lahf
ljmp
pop
rcrl
ds
lcall
push
mov
test
ficoml
cltd
clc
mov
jp
in
sbb
add
xchg
lahf
dec
inc
xor
in
dec
mov
inc
insl
dec
add
mov
push
mov
scas
cs
mov
cmpsb
ja
cmpsb
mov
call
cld
xor
and
out
adc
stos
fnstcw
sub
in
push
and
mov
push
inc
add
mov
jnp
xchg
sbb
out
xor
clc
xchg
mov
fs
decl
cltd
out
push
clc
xchg
jmp
xchg
xor
mov
push
test
xlat
cs
adc
ja
add
call
cs
arpl
testb
cmp
pop
jno
jno
es
shrl
dec
xor
and
mov
movsl
sbb
mov
and
out
nop
cs
mov
fstl
sub
jp
jb
call
jge
gs
xchg
push
ret
std
xchg
push
mov
mov
and
mov
cmpsl
pop
filds
ss
xchg
xor
jg
jg
call
leave
xor
xor
or
inc
stc
xchg
lods
xor
sbb
sar
shll
jo
add
and
out
into
mov
pop
addl
stos
cmp
call
decl
push
jbe
push
pop
mov
mov
mov
mov
push
mov
mov
pop
fcmove
outsl
pop
outsb
sub
bts
inc
insl
popl
arpl
push
rorb
sarl
sbb
aaa
mov
xchg
lds
ljmp
rol
push
add
fwait
rol
sbb
rcr
inc
pop
jecxz
xlat
mov
in
add
push
sbb
push
in
jb
push
mov
enter
dec
cld
inc
xchg
clc
ljmp
cmpl
mov
mov
mov
add
lods
ss
push
add
dec
mov
movsb
sub
adc
sub
xchg
hlt
cmc
xor
push
lods
xchg
lcall
pusha
push
insl
mov
sbb
icebp
cmp
sbb
inc
ret
sub
jmp
and
out
imull
push
out
jbe
jl
mov
mov
sbb
loope
xchg
aaa
xchg
jg
xchg
pusha
lds
cmp
xor
mov
push
lds
mov
xor
scas
and
loope
cmp
clc
jg
push
add
ret
dec
dec
or
adc
inc
loopne
and
or
adc
cwtl
addb
fcomip
outsl
xor
or
ret
es
mov
sub
rorb
rclb
pushl
xor
or
mov
dec
cs
cmpsl
lds
data16
popa
test
sub
lods
push
or
ljmp
inc
lret
gs
push
xor
negb
and
mov
inc
xchg
jge
sbb
cli
jge
inc
inc
scas
into
sub
nop
xor
fdivr
jg
and
mov
cmp
sub
fdivrl
push
and
into
jnp
or
lret
loope
cmp
cmpsb
or
ficomps
arpl
push
insl
sbb
push
inc
ja
out
mov
inc
inc
adc
pop
sub
add
out
xor
test
cmpsl
push
insl
adc
lods
stos
or
jo
ret
incl
sbb
mov
dec
xchg
cs
ret
push
mov
xor
cmp
sar
cmp
cmp
adc
ljmp
pop
mov
enter
in
jg
mov
in
xorb
push
push
roll
decl
jbe
add
mov
std
ret
push
xor
int3
jb
xchg
incl
jp
test
cli
movsl
ja
xor
push
shl
jb
dec
std
jbe
mov
aaa
ret
js
inc
ljmp
in
ljmp
inc
fildll
lcall
scas
es
jmp
fldcw
mov
pushf
stos
ret
sahf
or
cvtpd2pi
ljmp
ret
push
mov
push
into
fbld
div
sub
inc
loope
bound
jmp
dec
fiadds
xor
jno
xor
adc
js
lds
mov
sahf
push
int
and
sub
mov
inc
mov
cs
clc
mov
mov
stos
adc
ja
nop
dec
clc
call
loope
fs
dec
dec
aas
sbb
sub
hlt
sbb
jo
loope
loop
pop
out
cli
lcall
test
sti
test
or
cmp
jno
lcall
stos
and
lahf
push
pop
popa
fisttpll
jne
inc
insb
loope
cmc
leave
in
arpl
mov
daa
imul
add
push
jnp
std
and
test
ljmp
add
lods
sar
sub
jg
or
xchg
lret
inc
imull
mov
or
cmp
push
adc
in
repnz
ss
lcall
icebp
testb
push
icebp
add
stos
cmp
cld
popl
nop
mov
and
cmp
cmp
imulb
leave
inc
arpl
fbld
or
nop
xor
push
pop
popf
popf
mov
jno
push
push
das
inc
outsl
outsb
sub
cmp
call
movb
roll
lret
les
pop
push
mov
xchg
incl
in
xor
mov
lds
sbb
or
pushl
xor
pop
pop
rol
ficomps
fisubl
icebp
xchg
decl
decb
ret
and
adc
sub
cmp
mov
pop
cld
ljmp
pop
mov
inc
outsb
in
adcb
lea
jb
dec
dec
fcmovnb
mov
movsl
mov
in
je
mov
sbb
or
add
mov
mov
push
mov
testl
fs
mov
and
cmc
push
mov
lcall
popa
sub
repz
pop
sbb
jnp
inc
jne
sbb
sub
sub
mov
mov
bound
mov
xor
xchg
jo
les
fstp
pop
ljmp
sbb
xchg
sub
mov
int3
clc
sbb
fnstenv
ja
inc
or
cltd
test
push
xor
mov
test
jg
test
sbb
fdivrl
or
cmpsb
rol
xlat
pop
xchg
loopne
dec
addr16
ljmp
decl
shlb
sbb
dec
inc
adc
rorb
jb
aaa
lret
ret
in
adc
popa
jbe
nop
repnz
jmp
push
mov
dec
cmp
and
sub
call
mov
cli
ja
or
fimull
aaa
aam
xor
push
popf
xchg
jg
cmc
scas
scas
cli
mov
mov
daa
sbb
fcomp
hlt
decl
dec
ficoml
in
loopne
les
mov
stos
add
xchg
lcall
add
sahf
in
xchg
pop
inc
in
add
lcall
ror
sbbl
stos
ljmp
lcall
out
mov
cmp
cmpsb
frstor
mov
imul
mov
add
lods
add
or
dec
inc
add
cs
sti
leave
jge
adc
iret
and
or
cmp
idivb
or
sub
addl
pushl
nop
cmc
enter
aad
mov
push
ljmp
addr16
add
xchg
out
pop
leave
pop
jae
mov
call
mov
sbb
fdivs
stc
data16
cmp
jb
xchg
imul
cmp
sbb
push
inc
pop
imul
lock
mov
cmpsl
xlat
gs
icebp
call
loopne
test
mov
and
or
xor
jns
jle
incl
out
inc
push
mov
shrb
mov
mov
cld
xchg
mov
loope
fisubs
inc
push
pop
imul
inc
sahf
mov
inc
cmp
lea
xchg
mov
clc
ljmp
dec
cmp
inc
mov
hlt
testl
lcall
fsubrs
idivl
das
jge
lock
mov
cmp
jp
out
cli
fucomip
fidivl
inc
je
pop
or
fwait
sub
imul
jae
push
nop
jg
jg
lods
sbb
jle
jb
mov
popa
push
repz
pop
imul
pop
stos
dec
push
xchg
cmp
call
incl
jle
jns
mov
inc
cs
lea
adcl
clc
in
cmp
sbb
and
push
loopne
jg
inc
sub
xor
fiadds
adc
inc
mov
ret
int3
pop
jo
xorb
adcb
xchg
fnsave
std
out
and
lcall
mov
test
add
test
xchg
shll
lods
repnz
dec
and
xor
adc
sar
ljmp
gs
fs
pushf
loop
adc
enter
pop
sub
enter
mov
ljmp
dec
xchg
and
dec
push
mov
push
mov
dec
jecxz
jo
jmp
sbb
lahf
mull
negl
jp
rcr
ud1
push
xchg
push
mov
sbb
movsl
gs
negb
mov
mov
mov
decl
add
lcall
mov
mov
xor
pushl
cld
pushl
aad
and
jnp
mov
adc
and
sar
clc
cwtl
dec
xchg
mov
outsl
testb
cmp
stos
decl
add
fmuls
movb
push
mov
inc
decl
mov
sbb
mov
mov
pop
push
std
or
inc
lcall
push
dec
cld
subl
push
inc
loopne
sub
mov
cld
leave
xor
xchg
imul
div
and
or
mov
push
fs
fcomip
push
push
or
loop
bnd
sti
xchg
call
pop
push
push
clc
lcall
cmpb
jmp
fistps
aaa
mov
movsl
mov
outsl
mov
ds
jg
out
sub
lcall
lods
dec
cld
cwtl
inc
add
cmpl
mov
cli
in
xor
adc
jg
mov
jae
in
adc
addr16
out
push
mov
mov
scas
mov
mov
pop
mov
pop
mov
xor
pushl
and
sbbb
popf
jg
inc
fxtract
outsl
popf
cmc
xchg
fsubrs
mov
bound
jecxz
jg
xlat
adc
addr16
repnz
lea
mov
iret
jg
pop
mov
push
mov
xor
xchg
mov
ljmp
rolb
pop
cmp
cmpsb
lcall
loop
scas
push
add
call
cmp
pop
inc
data16
fwait
xor
jp
dec
ret
ja
pop
cmp
xchg
decl
mov
icebp
int
or
sarl
cmp
or
int
cld
sub
xlat
push
sub
ja
inc
or
inc
sbb
call
push
bound
pop
xchg
jmp
gs
xchg
lret
out
mov
aam
int
stos
push
in
mov
ss
in
or
cli
xor
jmp
add
and
in
flds
cltd
xchg
call
push
pop
jle
cli
movsl
stc
pop
jg
add
lcall
shr
or
cs
cld
rclb
dec
sbb
popf
fdivl
je
outsb
lcall
outsb
pusha
in
insb
pop
stos
mov
scas
dec
dec
sahf
push
mov
negb
xor
fisubl
lds
inc
push
sub
iret
decl
insb
ret
sarb
scas
sub
in
cld
inc
iret
mov
and
dec
mov
jg
jo
add
push
imul
mov
out
mov
dec
mov
sbb
lcall
push
or
enter
xor
mov
out
call
orl
into
mov
sub
inc
xchg
int3
orb
ljmp
xor
dec
push
imul
jecxz
sbb
pop
dec
jae
mov
insl
dec
movsb
dec
test
cmp
mov
std
push
adc
mov
out
std
test
sub
divb
divb
imulb
adc
sbb
bnd
pop
lock
mov
out
or
mov
or
mov
jg
aaa
cmc
mov
lcall
cmpsl
mov
leave
aam
ss
cld
cmp
pushl
repz
add
sbbb
ficoml
pop
ljmp
out
loope
fmuls
addb
and
sti
ljmp
sbb
inc
push
divl
sub
stos
loopne
in
jns
jge
repz
int3
ljmp
jg
adc
xchg
push
sub
inc
sbb
jmp
pop
dec
dec
les
shrb
cltd
jno
fistpl
sti
incl
pop
add
addb
lret
or
adc
jecxz
std
fidivs
inc
lahf
mov
mov
sub
int3
lret
aas
pop
sbb
pop
xor
lea
rorb
xchg
negb
into
pop
push
pop
outsb
push
subb
incl
xchg
mov
aas
cld
ret
rcr
mov
add
jecxz
std
jne
pop
lret
adc
pop
ja
dec
xchg
jle
cltd
shl
jbe
data16
or
xchg
xchg
sbb
sub
incl
bound
gs
cmpsl
mov
out
shlb
xor
add
imul
scas
cli
call
shl
sti
insl
jo
and
sub
rolb
dec
out
fsubrs
adc
and
or
lcall
adc
in
pop
rcrl
xchg
sbb
mov
in
xchg
arpl
mov
jb
jo
sbb
ja
push
ljmp
xchg
loop
xor
cmp
xor
in
and
mov
push
mov
mov
inc
mov
adc
fldz
xchg
std
lcall
cwtl
cmp
clc
pusha
jmp
data16
jg
icebp
stc
jns
iret
push
fimuls
pop
add
fmuls
lret
dec
pop
decl
dec
enter
and
adc
decb
xchg
fidivl
ja
imul
add
xchg
cmpsl
jae
fwait
dec
dec
aam
jbe
popf
sub
call
shrb
ja
dec
push
jmp
daa
xor
fwait
mov
fldl
xchg
sub
inc
sti
aaa
addr16
sbb
clc
push
mov
add
das
pop
lods
aam
jecxz
pusha
scas
xor
lods
aaa
ds
pusha
mov
call
jmp
jno
ret
adc
jp
in
jnp
into
xchg
sub
jl
adc
fsubrl
ret
pop
out
xchg
test
in
jo
lret
inc
shlb
add
arpl
inc
fsub
aas
adcl
adc
fstpl
push
dec
dec
xor
scas
pop
scas
pushf
mov
jnp
or
add
pop
fs
ljmp
nop
and
xchg
push
scas
addr16
cmp
sub
daa
adc
ss
add
pop
cs
inc
xchg
fisubrs
dec
jo
decl
inc
loop
scas
mov
hlt
cmp
mov
stos
call
loopne
test
mov
lret
daa
cmp
arpl
psraw
pop
nop
and
call
mov
lock
ficomps
lods
insl
scas
subb
jmp
fbstp
je
call
pop
inc
aas
jne
pop
jmp
fbstp
xchg
jae
or
inc
mov
jmp
dec
pop
lcall
ss
cmp
out
lcall
xor
push
stos
mov
jecxz
mov
pushl
dec
pop
push
jae
outsb
push
aaa
cld
inc
fldt
out
loopne
sbb
lcall
andl
jp
pop
orl
call
jle
mov
imul
jns
xchg
xchg
push
call
lods
stos
add
movsb
lcall
decl
mov
push
je
cmp
inc
bound
mov
xchg
cld
clc
rcll
cld
jmp
out
add
out
jb
aad
fisubrl
outsb
mov
call
mov
fcomps
es
das
hlt
jo
and
dec
mov
data16
xchg
repnz
int3
jecxz
aad
mov
rcll
cmp
into
add
jbe
push
ljmp
jge
mov
push
daa
jmp
fldcw
mov
adc
or
cmc
fstpl
and
loopne
lods
dec
jmp
incl
jmp
push
mov
mov
shld
mov
add
jae
fsts
push
xor
push
mov
int3
addb
mov
decl
push
jl
aas
testl
inc
aam
aad
sbb
jmp
push
inc
xor
sub
mov
inc
push
fcompl
arpl
mov
in
std
dec
pop
shl
or
lahf
outsl
add
xor
sahf
bound
inc
ss
jmp
movsb
cld
ljmp
mov
mov
jae
xor
xchg
fdivr
jb
ret
sub
aaa
hlt
jb
jmp
jg
or
jne
xchg
push
inc
xchg
aas
popf
sar
ljmp
inc
scas
mov
leave
push
pop
std
and
inc
dec
mov
and
add
fildll
loopne
lret
icebp
xlat
mov
xchg
mull
orl
pop
test
incl
dec
xchg
mov
or
sbb
xor
sbb
incl
into
xchg
mov
std
mov
mov
movsb
js
fsts
mov
cmp
sahf
shlb
push
mov
imul
out
cli
std
pop
mov
push
call
xchg
fldenv
cmp
lock
mov
fucomi
add
addr16
test
push
mov
decl
cmp
inc
sti
cltd
push
sbb
gs
adcl
cmp
filds
adc
pop
popf
call
pop
mov
loopne
cltd
fisttps
xlat
dec
cmp
out
pop
popf
adcl
movsb
push
or
cwtl
sbb
push
pop
fildl
sti
mov
xor
pusha
fs
push
cmp
add
jmp
and
mov
cmc
sbb
mov
std
repnz
lcall
push
cld
lods
fisubrs
rcr
fcmovb
scas
fs
and
adc
loopne
pop
push
jbe
dec
or
loope
xor
pop
mov
jb
add
insl
je
push
sub
and
hlt
xchg
add
push
and
mov
sahf
cmp
outsl
or
call
mov
sbb
and
xchg
inc
aad
mov
hlt
inc
stc
adc
push
mov
mov
je
inc
aad
cwtl
addr16
xchg
pusha
mov
inc
or
imull
divl
pop
loopne
cmc
sarb
movl
pusha
jge
adc
jnp
and
outsl
jp
fisubs
adc
jns
je
xchg
push
rcll
pushl
fwait
in
movsl
sub
mov
gs
js
ds
movsl
or
daa
outsl
or
notl
cld
in
xor
xchg
cmp
imul
ljmp
int
cmpsb
cli
pushl
call
fs
mov
fimull
jnp
lahf
mov
jg
out
and
lahf
inc
movsl
in
fisubrs
gs
iret
mov
mov
lcall
imul
dec
mov
les
inc
mov
cmp
pop
or
icebp
call
push
int3
loop
daa
add
setle
xchg
or
or
jl
mov
jecxz
lods
out
and
jo
outsb
add
cmp
jl
test
imul
dec
je
xor
iret
test
mov
sub
sbb
adc
pusha
mov
icebp
and
pop
xchg
rorb
decl
cltd
lods
and
gs
data16
dec
stos
inc
pop
pop
adc
mov
ljmp
pop
sub
pop
fisttpl
pop
sti
je
sub
pop
pop
test
call
add
movsl
loop
sub
jae
xchg
ljmp
filds
aaa
push
adc
inc
lret
out
mov
bound
or
std
ret
dec
rclb
cs
fmuls
iret
aaa
and
jmp
jnp
pop
sbb
mov
cmc
test
cld
push
xor
jnp
cs
add
cli
lcall
push
sbb
jns
dec
cmpl
shlb
fdivr
ljmp
sbb
mov
inc
pop
cmpxchg
loope
mov
mov
mov
loop
dec
push
outsb
push
push
jbe
popf
jp
sub
sub
xor
call
jnp
rcl
testl
and
imul
mov
in
inc
outsl
push
jmp
lret
dec
pop
xor
clc
hlt
lods
movaps
scas
cli
cmpsl
iret
jne
inc
lea
add
pushl
adc
out
jge
divb
push
mov
ljmp
pusha
jl
hlt
scas
loope
xor
push
in
xchg
jnp
jp
sub
jmp
inc
add
xor
xor
fbld
popf
xchg
or
ljmp
fnstcw
xor
cmpsl
xchg
push
lock
mov
es
insl
les
mov
mov
push
xchg
ss
or
out
lcall
pop
cmp
es
int
cwtl
mov
in
mov
je
hlt
mov
mov
pop
ss
call
in
xor
push
sbb
lods
adc
dec
xor
xor
testl
sub
fdivs
ljmp
clc
incl
rcrl
jo
fistl
sahf
adc
fs
lret
jl
jl
cltd
imul
call
icebp
cli
mov
imul
add
jnp
cmc
sti
stos
fimuls
sbb
out
mov
mov
jmp
pop
jg
or
sti
mov
inc
xorb
and
dec
imul
jg
inc
xor
sbb
mov
roll
jmp
and
es
decb
dec
jns
pop
popa
mov
andb
data16
pop
dec
inc
inc
mov
inc
nop
dec
mov
sub
data16
cli
mov
enter
mov
xor
mov
imul
or
inc
ljmp
pop
or
les
and
ds
push
in
popf
cmp
push
and
mov
aam
jecxz
out
pushf
outsb
dec
inc
std
dec
inc
aam
push
add
pop
decl
cmp
frstor
pop
icebp
dec
mov
sahf
dec
jne
es
mov
mov
mov
xor
pop
xor
push
ret
adc
sub
xor
adc
lods
mov
fs
mov
das
test
out
adc
push
push
lods
sti
jne
mov
loop
ja
aad
aam
jo
and
notb
mov
xchg
jns
mov
fldz
sub
iret
fsubrl
rclb
cmp
cli
loope
pop
iret
shl
bound
mov
pop
dec
icebp
pusha
cli
jmp
sti
push
mov
lods
loope
lds
loop
xchg
into
loop
clc
jecxz
pop
hlt
loopne
sbb
ljmp
lret
mov
inc
loop
cwtl
adc
mov
xor
jns
xor
lock
hlt
cwtl
popf
out
cmp
or
lret
inc
mov
dec
dec
jne
hlt
jmp
jae
dec
inc
negl
sub
in
jge
cli
ljmp
lods
cld
gs
mov
or
and
movsl
cmp
pop
mov
mov
pop
push
outsb
cld
movsl
adc
cld
mov
xchg
test
jmp
sbb
gs
das
and
and
decl
mov
and
icebp
inc
cltd
or
scas
or
dec
cs
ljmp
rcr
enter
mov
stc
cld
mov
push
in
push
ret
jae
pushl
cld
cltd
pop
out
dec
push
add
add
test
cld
adc
cli
lahf
aaa
pop
mov
inc
fimuls
mov
xchg
jg
sbb
subb
outsl
jmp
jle
and
or
out
mov
inc
cmp
sub
clc
aad
jmp
pushl
jo
push
jnp
fdecstp
rcrb
aam
lea
gs
mov
sbb
jmp
fistps
pop
insb
mov
inc
dec
pop
repnz
sbb
ficomps
sbb
fisubl
mov
sahf
sbb
data16
movsb
fistpll
push
scas
xchg
lods
pop
push
pop
popa
pop
aad
ljmp
xorb
cltd
scas
adc
xchg
fnstenv
push
adc
or
pop
jno
cmp
push
sahf
pop
push
adc
decl
fwait
xchg
push
addr16
and
push
stos
mov
cld
call
or
adc
push
inc
and
sbb
rorb
rclb
ret
jg
add
pop
jmp
inc
cmpsl
das
lods
or
jecxz
icebp
imul
ret
cwtl
movsb
jbe
jecxz
add
cmpl
out
sub
dec
fcmovbe
out
sub
scas
mov
ret
fstps
xchg
add
vmovss
jle
ud0
jmp
cmp
push
or
jns
pop
adc
pop
in
insl
fiadds
ljmp
testl
dec
sub
xchg
mov
sbbb
dec
f2xm1
enter
cli
or
ljmp
lds
mov
out
mov
ljmp
xor
lret
fistps
aas
push
sub
lret
mov
xlat
pop
push
les
shlb
fidivrs
jne
insb
pop
cmp
cs
pop
cmp
dec
test
add
add
or
xchg
loopne
clc
jmp
add
sbb
fcomip
jl
xchg
adc
fdivrp
iret
call
jge
cmpsl
ljmp
orb
cwtl
xor
insl
lds
lock
cmp
out
mull
cmp
fs
pop
mov
in
mov
xchg
adc
pop
stos
idiv
jg
pop
xchg
mov
inc
adc
test
and
int
xchg
mov
loop
int3
fisubrs
in
mov
outsl
and
xchg
not
leave
pop
scas
jmp
adc
data16
aam
mov
pop
mov
daa
jno
add
inc
pop
loop
mov
pop
mov
and
xchg
fadds
pop
popf
sbb
or
push
dec
test
dec
in
lret
lret
adc
mov
pop
shrl
jmp
jg
cli
mov
rol
inc
mov
cmc
pop
mov
xchg
lahf
pushl
mov
das
xchg
out
mov
popf
mov
into
neg
movsl
push
and
cmpb
ret
cmp
rcrb
sti
mov
inc
iret
sub
mov
mov
or
and
jg
pusha
jno
ret
mov
xchg
repz
mov
mov
adc
ljmp
mov
dec
pushf
push
insl
mov
mov
lods
addr16
enterw
fcomip
mov
and
inc
lods
lods
jle
nop
scas
mov
mov
add
in
aaa
or
in
lret
cmp
mov
cwtl
adc
mov
inc
sbbb
jnp
andb
jbe
mov
adc
mov
lret
scas
jmp
maskmovq
adc
imull
dec
mov
mov
mov
sbb
sbb
inc
mov
xlat
jae
mov
gs
sti
insl
xorb
in
jne
mov
je
mov
loop
out
cli
xor
lret
add
fimull
adc
dec
jb
sahf
or
fwait
dec
add
or
mov
sarb
test
pop
push
adc
xlat
decl
movsb
add
dec
pop
pop
sbb
push
cmpl
lahf
stos
fwait
es
test
jg
incl
gs
xchg
cli
dec
mov
insb
cltd
mov
push
leave
jmp
cmpb
jl
sbb
incl
ds
cmp
sahf
ja
pop
jb
fdivrs
fcomps
lds
icebp
das
cli
call
addr16
xchg
lods
daa
rcll
adc
mov
sub
fists
sub
jnp
or
jecxz
cltd
push
dec
ljmp
fdivr
lcall
jmp
add
push
mov
cmpsb
push
or
les
iret
dec
lcall
call
and
data16
mov
xor
jl
in
or
cmp
std
lcall
test
push
ret
xlat
dec
sub
sub
mov
cld
cmp
test
mov
clc
loop
fucomi
and
mov
test
scas
sub
mov
push
les
aaa
pop
int3
pop
lea
and
sbb
mov
call
mov
aas
aam
and
pop
cmp
xor
mov
mov
cmp
rorl
shl
xor
ljmp
jb
sahf
mov
out
cmc
pop
flds
rcrb
sub
call
jbe
mov
les
fistpll
repnz
in
in
sub
pusha
push
sub
fdivr
incl
lcall
pop
lods
push
fistps
call
cmp
cwtl
cs
rcr
out
fcomip
sbb
ljmp
cs
call
dec
adcl
es
lods
lcall
dec
stos
int3
mov
mov
or
push
cld
add
sbbl
push
jl
sub
std
ljmp
and
lock
mov
and
dec
es
mov
dec
cld
jl
call
jp
scas
in
cli
cmp
addr16
mov
pop
sbb
sbb
mov
test
cmpsb
ds
xchg
filds
ljmp
xchg
xorl
or
pushl
popa
dec
push
enter
cltd
rorb
movsb
ds
ss
cli
ljmp
mov
inc
in
xchg
sbb
push
out
cmp
loop
iret
lods
adc
cmp
cmpsl
push
push
rcrl
imul
imul
int3
nop
pop
aam
lcall
dec
btr
add
push
mov
cmpsb
fldt
sbbl
pushl
std
or
or
repz
int
inc
xchg
rcrb
inc
jmp
pop
push
sahf
adc
mov
inc
sbb
gs
sbb
cmp
sub
jl
push
in
sub
cmpsl
mov
jmp
dec
inc
es
cmp
scas
sbb
fsubrl
pop
pop
nop
fs
xlat
ficoms
shrl
das
mov
out
inc
mov
push
scas
cli
call
lret
push
cmpsb
mov
or
inc
shrb
test
enter
pushl
test
das
add
dec
mov
repnz
push
jno
add
jmp
sbb
cmp
dec
clc
push
sbb
inc
scas
mov
jbe
arpl
in
in
cmp
aad
pushl
lea
cmp
push
mov
and
mov
aad
ja
fistl
rcrl
adc
decl
outsl
pop
adc
mov
cmc
ljmp
ficoms
dec
cmp
ljmp
in
insl
or
sti
fcomip
mov
pop
out
sbb
int
pusha
iret
arpl
sub
xchg
jbe
add
je
movsl
inc
push
xchg
icebp
and
scas
fisubrl
xor
push
pop
fucomip
data16
jg
movsb
imul
mov
xchg
decl
mov
stc
and
inc
push
scas
pop
jge
rol
xchg
sbbb
cltd
mov
inc
mov
sar
jmp
mov
gs
pushf
or
add
int3
iret
cmpsb
adc
das
clc
pop
mov
and
jg
sub
cmp
fs
scas
xchg
adc
mov
lods
jg
pop
xchg
fcomip
lcall
xchg
xchg
cmpsb
mov
jne
out
sub
push
addl
call
mov
xor
mov
mov
add
xor
lret
xchg
shrl
andl
ljmp
decl
clc
mov
mov
xor
cmp
lcall
out
movsb
in
sbb
out
sti
and
fcoml
aam
int
imul
pop
inc
xchg
lret
adc
aam
pop
movsb
push
leave
pop
ljmp
fldl
scas
incl
push
xor
movsb
jo
pop
daa
or
ds
bound
inc
sbb
ljmp
je,pt
sbb
xor
cwtl
jmp
pop
xor
adc
jae
and
mov
sbb
jne
mov
mov
imul
leave
pop
jg
sub
push
pusha
lock
arpl
hlt
cmp
stos
dec
mov
xchg
cmp
incl
add
cmpsl
mov
ret
icebp
mov
scas
mov
mov
mov
popa
aad
pop
xchg
or
xchg
in
loop
loop
les
jg
inc
ljmp
cmpsl
loope
movsl
pop
ja
push
push
inc
shll
ds
dec
dec
xchg
ficoms
inc
push
cmpsb
test
xchg
mov
inc
add
dec
sbb
mov
sub
jp
fbld
cmp
ds
pop
pop
and
data16
popa
js
test
mov
ss
sub
aas
shll
sbb
leave
push
inc
and
into
mov
mov
inc
movsb
call
jb
in
mov
jle
adc
sub
gs
incl
outsl
outsb
insb
in
out
jmp
out
and
inc
inc
subb
enter
mov
cmp
jmp
pusha
out
fmuls
js
xor
xor
jb
je
mov
inc
pop
fildl
sbb
je
inc
in
cmp
mov
lcall
arpl
or
test
rep
test
ljmp
push
xlat
outsl
incl
and
xor
mov
pop
inc
sbb
jmp
jge
sti
jae
mov
xchg
aas
aam
jbe
leave
xor
stos
stc
xchg
mov
adc
jmp
jle
icebp
inc
inc
mov
mov
xchg
pusha
mov
jo
cmp
inc
dec
and
jmp
mov
repnz
data16
popf
mov
cs
call
or
pop
gs
fsubrl
shl
sub
xchg
cs
ret
int
and
mov
and
in
out
outsb
mov
mov
cmp
icebp
mov
mov
repnz
addr16
mov
inc
add
fldt
nop
mov
ja
mov
sub
push
aam
fwait
push
ja
inc
cld
pushl
in
repnz
jne
scas
out
fildll
cmp
je
loopne
pusha
xor
and
fs
test
push
add
jmp
imul
push
mov
cmc
in
push
push
jbe
and
push
rolb
cmp
xchg
in
lods
daa
push
icebp
call
loopne
cmc
aas
cltd
ss
pushf
xchg
jp
cmpsl
test
imul
faddl
imul
lock
pop
add
sub
sub
pop
jge
and
shlb
mov
ss
jne
dec
and
and
and
adc
xchg
in
clc
xor
pop
insl
add
and
jb
jle
pop
xor
xchg
push
dec
lcall
pop
sbb
int
mov
sbbl
mov
iret
fmull
out
cli
xchg
loopne
cmp
lret
int3
or
ljmp
mov
mov
or
dec
into
scas
cwtl
adc
xchg
cmp
push
xchg
inc
push
mov
mov
imul
ss
adc
jnp
jno
jg
fildl
lahf
mov
ljmp
mov
adc
adc
xor
or
test
mov
or
ss
loope
das
int3
loopne
call
xchg
fdivs
shll
cmc
mov
or
push
jmp
jo
ds
mov
jb
or
sbb
call
mov
aam
dec
jle
push
push
mov
jae
loopne
es
or
in
stos
mov
xor
jmp
test
push
imul
popa
test
inc
sbb
inc
int
aas
sbbl
mov
pop
push
lock
out
xchg
call
fwait
cmp
jle
in
mov
fbstp
mov
dec
jbe
es
lret
pop
xchg
addr16
int3
push
lock
out
cli
sti
loopne
stos
mov
stos
mov
mov
repnz
sbb
leave
sub
jmp
cld
nop
mov
mov
xlat
dec
ss
inc
fsubrs
push
inc
cmp
pop
ret
add
icebp
dec
jle
mov
ds
pusha
rclb
xor
mull
lcall
call
mov
adc
fcmovnbe
add
add
xchg
xlat
fucomip
and
das
pop
push
mov
inc
ss
cli
sarb
sbb
jle
iret
pop
fisttps
or
lock
xchg
and
or
mov
mov
jg
mov
xor
enter
std
push
lods
gs
xor
loopne
add
lcall
mov
aas
inc
cmpsl
adc
push
dec
out
jg
or
test
push
pushf
leave
in
bound
or
mov
inc
shrb
fnstenv
jp
cli
dec
lret
jle
push
sbb
sub
add
inc
pop
aad
outsb
or
pop
insl
dec
add
pop
cmp
in
inc
decl
jne
inc
into
imul
lods
movsb
mov
pushf
push
dec
int
cmc
mov
andl
fwait
incl
int
mov
xchg
aas
sub
mov
push
je
sub
insl
inc
add
lcall
inc
mov
pop
test
mov
lcall
out
pop
jmp
and
pop
adc
add
mov
jp
aas
fidivrs
ljmp
mov
or
es
mov
dec
push
mov
les
leave
int3
pop
sub
in
inc
xor
or
shll
add
imul
xor
dec
dec
xchg
add
jae
mov
stos
pop
add
mov
pop
cs
lds
xor
ljmp
xchg
push
in
fsubrs
xchg
lret
inc
sub
cltd
shlb
iret
pop
cmp
int
in
enter
in
and
and
pop
jne
lods
addr16
xchg
call
std
inc
loop
icebp
rcrb
adc
sub
sub
sbb
aas
call
cmpsb
icebp
and
xchg
pushf
mov
je
js
out
add
aas
push
and
mov
sti
fdivrs
fsubrl
xor
mov
fmull
lea
out
xor
fistps
in
sar
jmp
data16
pop
popa
pushf
dec
daa
xchg
ret
repnz
sti
insb
pop
or
iret
cs
jb
mov
movsl
sbb
call
inc
dec
pop
xchg
sbb
or
popf
fs
inc
fistl
pushl
push
xor
mov
out
in
push
popf
fisubrl
pop
cld
xchg
loopne
or
shll
ja
bound
push
xchg
mov
xchg
xor
inc
mov
cmc
ss
fwait
cmp
daa
pop
rclb
test
call
cld
das
sub
into
jne
xor
cwtl
test
sub
sub
jmp
into
pop
sub
xchg
lea
scas
add
or
insb
shrb
and
push
push
push
incl
aam
push
sbbb
mov
mov
mov
xchg
stc
scas
ficomps
xchg
mov
pop
fistpll
add
lcall
mov
out
pusha
sets
inc
mov
inc
cltd
pushf
inc
jmp
lahf
pop
jmp
lahf
mov
pop
add
mov
mov
sub
cld
into
movsl
scas
adc
jl
icebp
sahf
outsl
cmp
and
call
jmp
push
dec
hlt
outsl
adc
sub
mov
es
sub
push
sub
leave
inc
addr16
test
ja
ljmp
sbb
test
push
stos
in
pop
test
cld
js
sub
dec
pop
mov
movsb
call
cli
pop
sub
mov
bound
sahf
mov
cwtl
out
imul
inc
loop
cmp
stos
popf
and
ret
imul
jmp
pusha
dec
aad
jae
sar
call
mov
xchg
push
push
push
mov
test
mov
xchg
aad
cmp
add
mov
jg
incl
and
mov
sbb
jnp
ja
lahf
sub
mov
pop
movsl
jg
add
pushf
divb
out
outsb
sub
lret
push
and
add
mov
loop
lahf
inc
aaa
xor
mov
adc
adc
dec
idivb
out
jo
push
mov
mov
ljmp
cmp
and
lahf
fsts
ljmp
mov
pushf
lea
sub
push
push
xorl
fildl
pushl
push
in
test
push
sbb
and
ret
mov
and
pop
js
out
add
lcall
int
pop
push
pop
xchg
mov
in
adc
xchg
loopne
dec
arpl
std
imul
lcall
push
add
inc
mov
cmpsb
add
clc
mov
imul
repz
adc
outsl
das
fdivrl
mov
jmp
mov
inc
pop
xchg
pop
xor
pop
mov
or
out
xchg
cli
push
sub
xor
jmp
rcr
in
xorb
loop
cltd
sbb
sub
fs
decl
pushf
nop
mov
rep
stos
mov
insl
cld
inc
enter
push
arpl
pusha
fcompl
xor
mov
arpl
popa
mov
jns
or
dec
and
mov
ror
pop
cmp
in
add
add
pop
loopne
stos
pop
outsl
cli
pushl
push
test
pop
and
iret
or
sbb
xor
ljmp
xchg
cmp
sti
adc
pop
push
sub
mov
pop
mov
negb
clc
incl
push
pop
addl
xchg
pop
fsubrl
sbbl
hlt
jmp
fs
mov
in
lds
or
sub
push
pop
ja
addb
mov
xor
xchg
mov
cmp
dec
cli
pop
popa
mov
inc
push
push
test
push
cmp
sbb
in
fstps
int3
and
jmp
push
sbb
cmp
jns
mov
cmp
int
andb
enter
das
test
push
dec
sub
jmp
lods
inc
mov
dec
jg
sub
pop
pop
push
push
sti
je
das
test
pushl
mov
out
clc
data16
lcall
int
ret
mov
incl
ret
inc
mov
mov
jo
gs
cmp
out
sbb
fcom
cmp
cmp
cmp
sbb
sub
out
scas
cli
push
movsb
ljmp
scas
test
sub
imul
xchg
inc
push
pop
inc
imul
sub
adc
jg
push
sbb
test
in
lcall
outsl
aam
test
add
mov
sub
lea
repnz
insl
ss
xchg
aam
push
addb
xlat
rclb
lods
aaa
ret
dec
out
jno
xchg
add
jnp
fnsave
jge
test
imulb
push
out
push
loope
mov
fcomip
incl
mov
mov
mov
mov
js
adc
jl
fistl
push
stos
lcall
push
jl
jmp
cltd
loop
mov
jns
fsts
push
pop
pop
mov
jle
cld
in
jb
lds
jnp
scas
icebp
mov
scas
jge
push
pop
pop
jp
popa
pop
ljmp
clc
std
ljmp
imul
push
or
in
incl
arpl
cmp
pop
sti
xorl
dec
call
inc
fwait
andb
mov
add
inc
aad
ret
ret
xor
mov
mov
pushl
pushf
mov
lcall
aam
into
jge
divl
or
jbe
aaa
inc
decl
mov
pop
jne
ffree
jb
dec
stos
jmp
xchg
aaa
mov
lcall
in
sub
rcrb
ljmp
add
enter
push
jmp
mov
decl
xchg
or
cmp
sub
mov
int3
mov
mov
mov
lret
loope
call
cli
pop
addr16
aas
xchg
sub
push
test
and
pop
mov
call
or
xchg
fidivrl
arpl
mov
jmp
jecxz
cmp
leave
xor
inc
fsubl
sbb
add
ss
mov
jge
add
cmp
sbb
dec
xchg
icebp
es
jle
push
cmp
cs
pushl
jo
or
outsb
ss
add
fwait
movsl
or
adc
ljmp
and
push
imul
pop
jnp
mov
push
push
and
adc
push
push
icebp
ss
cli
outsb
call
push
push
xor
je
call
ds
mov
dec
sbb
psubsw
jg
add
and
test
int3
mov
sub
aaa
nop
cmpsl
cli
ds
decl
xchg
push
pop
mov
sbb
daa
test
les
fmul
ljmp
mov
hlt
mov
pop
mov
fs
outsl
adc
ja
ret
sbb
fmuls
aaa
dec
clc
in
ret
out
ret
adc
jo
cwtl
decl
dec
jg
push
sbb
dec
jp
mov
loope
mov
jecxz
decl
movsl
add
insl
mov
push
sbb
xlat
imul
cli
inc
lret
jne
les
rol
jns
data16
pop
aaa
aam
cmpl
dec
cmp
iret
and
or
fs
test
add
call
push
cmp
inc
jge
inc
mov
fisttps
enter
pop
or
xchg
mov
icebp
ds
in
popa
adc
cmpsl
inc
cmpsb
lea
lcall
inc
add
fbld
sbb
clc
lcall
imul
mov
xor
and
int
cmc
addr16
and
pop
insb
arpl
mov
mov
xor
shlb
out
je
fwait
push
push
push
cmp
sbb
sbb
dec
outsl
scas
sbb
jno
pop
scas
xchg
push
sar
mov
mov
stc
inc
or
iret
xchg
je
out
inc
inc
and
jg
pop
fistpl
aas
push
mov
cmp
mov
adc
in
sub
jl
jl
ljmp
les
test
pop
add
pushl
pop
testl
dec
xchg
pop
push
jns
subb
clc
cmp
scas
in
xchg
lret
inc
push
cmp
test
jo
outsb
xchg
out
test
xor
xchg
or
sub
adc
mov
shrb
fdivl
xor
js
sbb
add
loopne
incl
popf
jbe
cmp
and
insl
adc
or
mov
cwtl
out
push
xor
pop
mov
xor
adc
shll
int3
push
and
push
cmc
stc
inc
loop
out
mov
in
insl
pop
and
imul
jbe
jmp
js
loopne
ljmp
mov
addb
xchg
jg
into
and
xchg
inc
push
sbb
push
filds
mov
test
outsl
xor
xor
aad
cmp
in
nop
cli
xor
call
and
mov
lds
inc
xchg
clc
js
adc
aas
sbb
push
js
push
jnp
clc
sahf
push
rol
pusha
insb
pop
pushf
nop
in
mov
call
mov
cmpxchg
decl
lods
xchg
sbb
push
mov
std
test
push
int3
cmp
addr16
ficoml
mov
mov
loope
jmp
fnsave
dec
clc
fcomip
xor
or
fdivr
aad
mov
out
fldt
cmp
sbb
xor
addr16
sub
adc
inc
jecxz
ffree
mov
lds
icebp
add
pusha
sbb
das
jb
lcall
adc
orb
xchg
call
xor
mov
mov
in
pop
and
and
nop
mov
push
movsl
aaa
sub
push
fcoms
sbb
push
fbstp
jae
ja
mov
xor
pxor
fwait
out
mov
cli
push
mov
out
out
cmp
popa
xchg
lea
xlat
aam
int3
sub
xchg
orb
in
mov
mov
iret
dec
mov
icebp
jne
aaa
jns
lods
icebp
pop
mov
fs
decl
inc
test
mov
fidivrl
cmpb
jmp
and
pop
out
sarb
loop
mov
or
pop
and
mov
or
aad
mov
sub
add
jge
lret
call
cmp
mov
gs
adc
mov
jo
je
pop
lcall
int
adc
jl
xchg
push
sbb
popa
lods
mov
test
dec
mov
mov
jl
gs
mov
cmc
lcall
pop
jle
cmp
sbb
or
stc
bound
inc
loop
mov
ret
movsl
inc
jo
js
and
pushl
mov
mov
cmpsl
xchg
loop
sbb
mov
test
cmpsb
shll
adc
call
in
stc
in
in
cmova
mov
push
dec
or
mov
repz
cs
jae
adc
and
mov
or
xchg
or
leave
dec
outsl
pop
icebp
jb
das
inc
lret
jo
fadds
xchg
cli
idivb
stos
into
mov
sub
scas
pop
and
mov
pop
inc
cmpsb
adc
call
clc
sbb
ljmp
push
scas
adc
jbe
mov
insb
cmp
mov
shlb
adc
scas
mov
cmpsl
mov
pushl
lret
pop
xor
hlt
adc
jecxz
sbb
mul
nop
fisubs
jns
add
inc
loopne
jp
sbb
push
fldcw
or
mov
push
scas
sbb
gs
dec
cmp
lahf
add
dec
testl
xor
fdivp
push
fmuls
repnz
test
pop
jmp
aam
or
cmp
filds
out
lds
push
out
pop
rcrl
jbe
xchg
popa
cltd
cmp
lds
jge
cmc
pop
int3
inc
in
icebp
inc
jae
xor
mov
sbb
leave
aaa
outsb
mov
cmpsb
dec
outsl
loope
and
iret
push
or
jmp
sub
and
push
popa
xor
xchg
jg
jp
ljmp
pushf
movsb
int
pop
pushf
jg
push
push
call
xor
out
lcall
push
add
jmp
repnz
xchg
test
pushl
push
mov
pop
rolb
and
imul
std
sbb
stc
out
push
push
enter
add
cs
add
sbbb
dec
mov
mov
sbb
push
add
jp
push
shlb
jnp
dec
xchg
pop
lds
js
inc
mov
lcall
sarl
imul
fwait
stos
popa
cld
pop
call
cmp
sbb
cli
call
out
fistps
lcall
adc
out
and
jecxz
dec
pop
jg
add
lea
insl
mov
pop
mov
decl
and
mov
aad
cmp
test
clc
xchg
xchg
and
or
push
cmp
jmp
call
inc
jecxz
daa
pop
xchg
test
adcb
mov
les
fdivrl
shl
pushl
jle
sub
imul
ret
out
adc
dec
test
loope
pushl
pushf
fdecstp
xchg
jnp
xchg
xor
push
jns
das
push
mov
iret
xchg
out
js
les
sbb
call
dec
cs
cmp
aam
pop
sub
adc
mov
pop
lods
sub
imul
adc
iret
imull
leave
or
push
orl
std
pushl
cld
enter
sbb
shrb
push
icebp
scas
xchg
aam
add
xchg
repnz
jg
mov
pop
add
pop
dec
cltd
mov
cmp
cmp
pop
in
jp
cmp
dec
mov
js
dec
sbb
in
adc
cmpsb
jmp
pop
mov
and
in
ljmp
mov
or
dec
pmovmskb
filds
js
out
je
mov
mov
mov
xchg
dec
push
dec
jg
mov
mov
icebp
push
mov
push
mov
testl
fmull
pushf
pushl
and
int
movsb
addr16
loopne
lds
outsb
call
leave
add
push
mov
push
fadd
adc
inc
out
sbb
jmp
mov
fcomp
mov
pop
mov
cmpsb
xlat
jmp
jp
jae
mov
ljmp
sbb
es
and
int3
dec
mov
sub
mov
inc
pop
sbb
adc
and
inc
repz
xor
cmp
das
sti
mov
cli
filds
jbe
mov
out
lock
icebp
inc
jns
test
pop
call
inc
dec
dec
out
sbb
bound
adc
adc
call
mov
push
xchg
pop
dec
xor
push
push
test
sub
outsb
pop
lds
and
repnz
pop
xor
enter
out
mov
adc
cmp
or
fdivp
or
mov
ljmp
test
mov
cli
sbb
ret
rcrb
pushf
cli
xchg
fistpl
cli
pop
lods
or
and
pop
mov
push
xor
in
cli
cmp
dec
inc
lods
cs
in
inc
jb
push
sbbb
lods
jbe
sbb
xchg
cmpsb
jge
in
aas
xchg
iret
cmpsb
jecxz
adc
rorb
hlt
sub
clc
mov
dec
mov
adc
fimull
orb
cmp
jg
lods
inc
xchg
pop
hlt
leave
mov
ret
or
cmp
lcall
inc
mov
add
and
xchg
cmp
mov
jl
mov
call
add
stc
pusha
inc
xchg
stos
push
sub
fnstsw
dec
mov
fwait
mov
push
fs
pushl
test
imul
cmc
lcall
dec
ss
in
push
ss
mov
mov
mov
stos
mov
adc
loopne
sbb
cmp
xor
and
xchg
inc
xchg
pushl
lcall
cmp
repnz
sbbl
add
add
jmp
bound
repnz
fidivl
pop
jl
push
pop
outsb
leave
jns
dec
xor
das
or
in
inc
loopne
in
adcb
and
ss
pop
scas
mov
icebp
imul
cmp
mov
cmpsb
mov
movsl
rorl
cli
mov
sbb
out
cli
testl
ljmp
mov
push
dec
shrb
xchg
cmp
push
cmp
fucompp
push
loopne
xor
push
add
push
adc
jo
je
in
gs
popa
cmc
push
stc
sbb
inc
cli
lcall
lods
lods
dec
fs
push
dec
popa
adc
jno
loopne
rcrl
lods
loopne
ljmp
jmp
ljmp
jl
out
jecxz
sub
incl
ljmp
notb
cmp
dec
inc
pop
xor
mov
das
shll
lods
cmp
shl
add
dec
jns
cltd
jmp
mov
scas
in
cmp
scas
cli
adc
add
ds
xor
cmpsb
test
jle
jecxz
jg,pt
call
adc
in
popf
aam
mov
push
leave
cwtl
jp
pop
and
mov
jp
and
ljmp
stos
xchg
sahf
nop
mov
pop
add
pop
into
and
jns
mov
in
ljmp
add
test
es
repz
sbb
loopew
aad
test
mov
aaa
std
js
cmp
in
les
subl
and
rcll
xchg
clc
jmp
nop
xchg
icebp
popa
and
shrl
outsb
dec
sub
sbb
in
jg
decl
cmpsb
xor
bnd
mov
add
leave
ljmp
pop
mov
iret
cld
rclb
inc
xorb
sarb
and
add
decl
push
insb
and
and
test
pop
cmp
fsts
mov
ficoml
push
or
cmp
fcomps
adc
cwtl
inc
fcomps
mov
jge
cld
mov
or
jmp
int3
pushf
jge
add
pushf
jae
in
and
scas
enter
ss
fucomi
ret
cmp
cs
in
pop
iret
add
in
xor
pop
sub
repz
insb
push
mov
mov
pop
cmp
out
or
mov
fsts
xlat
jne
int
call
movsl
sbb
iret
ljmp
cmpsl
icebp
ljmp
rcrb
subl
mov
hlt
jg
pop
into
ss
popa
aam
add
add
xlat
cmpsl
aas
cmp
pop
loopne
push
add
outsl
and
scas
add
test
jg
call
pop
xor
mov
inc
lds
mov
fisttpl
ljmp
lea
sti
xor
ret
rol
mov
dec
xchg
ret
jo
jae
dec
push
scas
cmc
pop
mov
insb
or
addr16
fadd
bound
push
sub
ljmp
sub
shlb
inc
xchg
xchg
loop
push
pop
std
or
inc
jle
ret
stos
pop
pusha
add
push
fdiv
xchg
mov
insb
mov
cmp
ud0
jmp
xor
mov
neg
push
movsb
sbb
lods
out
sbb
cmc
aam
out
mov
js
leave
into
jg
inc
test
inc
jne
pop
call
out
jae
test
loop
push
jge
jp
jge
sar
cmp
std
cwtl
pop
add
add
nop
jnp
dec
pop
in
pushl
scas
add
cwtl
sbb
movsb
xor
sti
xchg
je
sub
pushl
sub
fldt
jecxz
das
mov
cltd
inc
shl
fisttps
sbb
lcall
test
sbb
mov
mov
push
jle
jbe
push
incl
test
mov
repnz
mov
aad
ret
ret
xor
daa
sbb
mov
xchg
mov
mov
mov
push
dec
les
push
add
mulb
cwtl
mov
stc
sub
xchg
not
ret
ljmp
ljmp
dec
arpl
test
xchg
mov
iret
mov
xchg
lock
jnp
cmp
push
into
mov
xchg
stos
sub
hlt
push
outsl
jbe
je
adc
subb
mov
add
jmp
jo
pusha
lret
inc
sti
inc
test
xorb
jg
dec
les
cmp
inc
jmp
in
jmp
je
push
rcll
add
aaa
ljmp
stos
sbb
adc
sub
orb
ret
lahf
ljmp
repnz
incl
jo
mov
popf
pop
ror
inc
push
mov
clc
mov
enter
and
call
pop
push
mov
or
jno
mov
or
test
in
add
cmp
cmp
cld
xabort
cmp
or
dec
sahf
lock
mov
rorb
mov
mov
dec
aad
test
xorb
xor
inc
adc
stc
mov
int3
js
sub
dec
xorb
ret
dec
mov
imul
aam
lcall
mov
fisubrl
call
insb
inc
inc
gs
sub
dec
cltd
stos
sbbb
adc
in
fistpll
jbe
pop
lret
mov
dec
sub
scas
or
into
in
dec
lret
enter
incl
call
cmp
in
out
mov
enter
mov
ljmp
pushl
aad
cltd
push
addb
mov
int
mov
out
dec
lret
cmc
jg
push
push
sub
aam
cwtl
lods
push
das
aaa
sub
leave
xchg
pop
cmpsb
call
mov
mov
lods
int3
pop
mov
ja
or
jle
lea
hlt
insl
push
test
stos
and
pop
stos
jg
jno
insb
repnz
adc
mov
cli
xchg
std
test
inc
add
ljmp
pop
outsb
inc
adc
fwait
sbb
std
mov
rolb
cmpsl
rorl
fndisi(8087
mov
out
add
mov
pop
mov
xchg
mov
jmp
xchg
pop
fcos
push
cmpsb
aam
loope
cmp
adc
mov
push
mov
loope
clc
mov
fstps
pusha
add
jg
mov
insl
aaa
push
inc
xchg
cld
xchg
mov
pop
lock
clc
jno
std
mov
decl
loop
js
test
daa
mov
mov
dec
jle
mov
jns
jle,pn
dec
pushf
lds
push
sub
jne
ret
push
daa
jg
and
xor
dec
cmp
stos
ret
lcall
mov
inc
das
xor
xor
mov
or
mov
inc
xchg
sti
push
call
les
inc
sbb
cld
movsl
adc
jmp
pop
push
rclb
mov
add
dec
bound
movsl
mov
jmp
push
ret
xchg
push
mov
xchg
es
hlt
jo
cli
mov
out
dec
pop
xor
dec
pushf
xchg
push
and
push
leave
stos
sahf
bound
call
adc
scas
fs
sbb
loope
lods
mov
jne
push
add
ljmp
pop
out
and
pop
push
imul
sub
les
pop
ds
push
add
xor
inc
sar
jns
xor
cmpsl
ret
mov
and
mov
mov
pushl
popf
stc
push
xor
adc
stos
lds
stos
pop
sub
mov
pop
popa
jne
mov
fsubs
cmp
pop
sbbb
pop
rcrb
ljmp
faddl
adc
ficomps
test
push
std
xchg
inc
inc
loopne
mov
jae
cmp
lahf
cmp
ljmp
dec
sbb
adc
dec
stos
push
sti
aas
lock
cmp
movsb
mov
sub
setns
cmp
xor
cmpsl
div
mov
xchg
bound
jne,pn
sub
out
out
data16
inc
je
push
mov
lcall
jle
outsl
ds
or
pushf
inc
bound
mov
sahf
fdivrs
inc
mov
aaa
push
ret
cmpsb
push
push
repz
sub
mov
incl
dec
mov
leave
stos
xlat
scas
scas
add
inc
fcoml
divb
cld
mov
adc
inc
push
call
stc
loopne,pt
out
call
testb
fs
dec
hlt
loop
lahf
insl
adc
push
out
or
out
bound
cmp
and
mov
dec
jno
fmuls
call
and
in
iret
push
add
sbb
addl
or
sbb
add
and
jnp
ljmp
sub
pop
popf
sub
and
push
movsb
in
aam
sbb
lcall
fdiv
inc
frstor
insl
push
push
outsl
je
push
insb
stos
cmp
popa
sbb
in
insb
cmp
or
mov
jae
hlt
push
lods
jle
lods
adc
mov
ljmp
popf
imul
das
out
mov
mov
push
mov
ljmp
push
mov
sbb
xor
shl
dec
sti
les
daa
ljmp
push
mov
dec
mov
jge
pop
into
rorb
and
call
and
imul
mov
aam
fs
incl
jno
mov
fcoms
jae
cmp
lcall
mov
stos
mov
incl
jae
int
xor
mov
test
addr16
insb
add
mov
imul
inc
cmp
jmp
mov
jns
loope
loop
daa
pop
pop
add
xor
push
jp
es
lahf
fldl
push
imul
lcall
mov
xchg
enter
dec
ljmp
mov
es
adc
in
sub
jo
fdivr
push
cld
dec
insb
and
jl
aas
das
jecxz
fimull
test
cmp
mov
push
lcall
jle
cs
stc
xchg
cmpsl
imul
stos
jo
fisubs
dec
dec
pop
cwtl
xlat
push
cli
push
movsl
jb
push
pushl
clc
or
xchg
rcll
testb
mov
push
pop
mov
sbb
adc
and
adc
cld
inc
decl
stos
xor
cmc
into
inc
pop
fldenv
sbb
push
jmp
mov
push
jnp
cwtl
loopne
mov
sub
lods
sbb
insb
mov
inc
cld
jnp
call
xor
inc
jae
jle
mov
ljmp
jp
into
pop
andb
add
push
cwtl
jno
push
mov
lcall
mov
aad
repnz
sbb
cmc
fcomi
shlb
outsl
or
lret
lds
mov
decl
es
int3
sbb
inc
jmp
fwait
jl
in
divl
mov
pop
add
add
inc
int3
sahf
gs
sbb
lea
inc
lcall
pop
sbb
and
jb
scas
push
test
repnz
out
lret
mov
loope
pop
in
pop
mov
ret
repnz
cmp
lcall
jmp
sarl
mov
pop
pop
pop
lea
mov
xor
sub
xchg
add
dec
call
sbb
pusha
rorb
adc
jnp
dec
mov
push
jge
rorl
sub
and
jg
loopne
int
sub
jae
push
repnz
push
dec
sahf
lahf
push
sub
adc
inc
pop
sbb
ljmp
push
mov
jno
test
dec
inc
mov
jmp
test
ja
out
dec
mov
in
inc
fldl
xor
pop
cmp
das
rolb
loope
sbb
sbb
xchg
jg
fisubl
sub
call
xchg
test
and
cmp
xor
mov
mov
push
lcall
ljmp
sti
jno
pop
xchg
mov
lret
out
cli
dec
int
xchg
adcl
inc
loope
fbstp
in
outsb
rorb
inc
jb
xchg
cmp
decl
mov
loope
jg
cwtl
mov
daa
es
scas
xchg
mov
repnz
cli
pop
xchg
or
jg
lcall
dec
jae
daa
outsl
adc
inc
cli
push
ja
push
sbb
xor
push
pusha
pop
or
incl
shll
mov
add
xchg
or
aad
mov
push
or
inc
xchg
inc
fisubrl
call
push
ret
mov
int3
int3
ss
inc
ljmp
dec
xchg
ss
push
outsb
add
lock
pushl
arpl
jge
and
insb
imul
outsb
jle
daa
xor
nop
pushl
shll
in
sbb
adc
popf
sti
faddl
mov
mov
cli
pop
cmp
mov
push
repnz
xchg
in
ret
call
ljmp
subb
xchg
mov
mov
lahf
adc
adc
call
sbbb
push
dec
adc
mov
and
xor
mov
decl
ja
push
insb
lock
fildl
jns
popa
fwait
mov
fmull
add
jg
sbb
js
bound
icebp
sbb
ljmp
xchg
mov
mov
ljmp
or
and
arpl
jp
insl
adc
outsl
sbb
lcall
lahf
or
imul
lret
mov
pop
subl
daa
test
mov
jecxz
xchg
fwait
adc
push
fwait
mov
mov
add
mov
xchg
push
clc
dec
addr16
or
fdivrs
mov
mov
fwait
jp
or
sarl
daa
std
ret
clc
jg
pusha
mov
cmp
push
jg
add
mov
sarl
xchg
cmp
sarb
xor
loop
cmp
fstpt
scas
or
mov
jno
pushl
xlat
insb
loope
rclb
dec
out
lret
jl
xor
sub
or
sub
stos
cmp
mov
add
cmp
lret
dec
imul
or
jg
pusha
lods
pop
movsb
orl
lret
xchg
adc
pop
jno
dec
mov
outsb
leave
loop
jb
mov
clc
adc
adc
jns
ljmp
xchg
andb
dec
out
jnp
xlat
mov
xchg
mov
mov
xor
pop
fcomps
icebp
ja
divb
aaa
or
jle
cltd
pop
push
or
sub
fldl
iret
add
pushl
ret
outsb
jnp
pop
sbb
pop
frstor
movsb
or
dec
movsb
and
loopne
jno
call
paddusb
fldt
ret
dec
into
or
xchg
sbb
xchg
sbb
popa
mov
call
lods
in
addr16
mov
popa
cld
stos
or
pop
test
dec
mov
lock
jmp
pop
popf
movsl
pop
pusha
dec
mov
ljmp
pushl
dec
inc
adc
lods
xchg
or
loop
mov
mov
dec
xchg
decl
js
inc
and
push
cwtl
push
xlat
iret
lret
insl
inc
aam
inc
cmp
or
cmp
or
decl
push
pop
in
fdivrl
aaa
inc
mov
mov
in
les
mov
lret
dec
push
jo
int
mov
in
xchg
hlt
fildll
mov
add
outsl
add
incl
sbb
or
mov
fwait
jmp
decb
mov
mov
cmp
call
sarl
add
lret
orl
ret
cmp
pop
mov
xlat
jle
jecxz
pop
lock
lea
bound
stc
mov
mov
jb
sbb
jg
and
pop
gs
jg
lds
pop
sti
xchg
inc
call
mov
fsubrs
int3
sub
in
shlb
push
leave
lds
gs
jle
xor
push
xchg
adc
cmp
arpl
push
push
or
jne
aaa
and
clc
push
adc
and
rol
xchg
sub
push
add
data16
cmp
jns
arpl
dec
test
out
xchg
ljmp
adc
and
mov
or
fwait
sbb
sbb
cmpsb
mov
xor
into
test
sub
push
in
jge
lock
ljmp
jne
sbb
cmp
sbb
fcomp
fwait
add
sub
sbb
mov
jp
xchg
pop
mov
mov
sbb
rcl
stos
sub
jmp
xor
mov
add
inc
stos
xchg
out
insb
icebp
sahf
rcl
jmp
jl
push
nop
mov
call
loopne
inc
xor
int
js
and
sub
ja
xchg
std
pushl
sbb
repz
out
pop
dec
rorl
cmp
mov
pop
jae
repnz
mov
in
cltd
test
mov
test
fistl
popf
rorl
inc
pop
jo
or
test
push
rcr
mov
lcall
das
enter
imul
adc
rclb
mov
push
and
shrb
mov
xchg
sbb
fbstp
cli
push
xchg
mov
mov
in
lcall
mov
data16
and
add
or
incl
pop
dec
pop
mov
leave
inc
in
xor
sbb
adc
inc
mov
jns
stos
enter
outsb
sar
call
outsb
fwait
ljmp
addr16
repz
iret
add
dec
mov
aaa
mov
shl
fildll
mov
mov
xchg
aaa
std
jo
jbe
lret
cmp
lods
jp
xchg
sub
and
jg
cmp
mov
lret
pop
inc
roll
mov
ss
mov
incl
mov
cs
in
jno
push
sub
out
jmp
add
insl
into
out
push
sahf
pusha
mov
movl
pop
push
fcomps
push
lcall
sbb
std
clc
roll
xchg
pushl
or
std
ds
push
mov
pop
xor
mov
and
sti
mov
pop
cmp
and
sbb
insb
das
clc
call
fistps
fsub
pop
cmc
mov
xchg
sub
jnp
pushl
nop
in
adc
sbbb
aam
adc
or
ss
je
xchg
hlt
push
nop
insb
outsl
clc
dec
mov
imul
addr16
mov
xor
mov
add
idiv
dec
push
push
in
push
les
push
jg
jbe
pop
in
inc
pop
sub
loopne
ret
je
mov
inc
shl
xor
pop
movswl
ljmp
and
mov
dec
mov
dec
ja
negb
or
push
push
jae
inc
cmpsl
lcall
rorl
xchg
loope
fsubrs
divl
push
icebp
push
jmp
xor
cmp
decl
mov
repnz
adc
dec
xchg
cld
jecxz
cmp
clc
push
test
jmp
jae
xlat
ds
xchg
dec
pop
mov
xchg
push
sub
out
xor
sub
stc
cmpsl
mov
dec
mov
arpl
test
xor
mov
and
push
mov
sbb
out
push
mov
movsl
mov
push
sub
push
out
xorl
fwait
aam
aad
out
sbb
incl
test
xchg
push
or
repnz
jns
xchg
push
out
and
jnp
and
aam
lea
test
mov
dec
mov
cld
loope
fimuls
and
push
jne
icebp
sub
lds
std
jae
mov
cld
aam
mov
adc
out
loope
inc
mov
sar
mov
fisubrl
cmp
sub
ret
cli
push
fimull
int3
outsl
jmp
inc
mov
mov
cmp
repnz
subl
dec
cmp
dec
pop
ja
xor
les
jnp
scas
sub
cs
scas
addr16
dec
xor
or
fyl2xp1
ss
stos
cmp
cmc
aaa
loope
sbb
mov
dec
aam
out
addr16
adc
pushl
inc
ret
sahf
icebp
xlat
jecxz
adc
and
sbb
pop
fistps
mov
mov
dec
adc
mov
mov
push
hlt
leave
stos
shrl
fstl
scas
push
mov
ds
stos
dec
pushf
sbb
or
inc
and
es
in
jg
test
jno
xchg
jg
test
das
pop
xchg
mov
outsb
jg
add
xchg
dec
add
dec
push
lods
lret
shl
fnsetpm(287
aam
lock
outsl
fadd
adc
adc
call
mov
in
aad
mov
mov
stos
mov
popa
mov
or
cmpsb
push
outsb
jmp
in
add
inc
push
pop
or
dec
iret
andl
mov
and
pop
lcall
mov
adc
call
dec
outsl
leave
lods
pop
xor
cmc
loop
in
sbb
sbb
jae
jns
loopne
sbb
pushl
mov
adc
aas
test
mov
ja
jbe
aad
jne
or
mov
clc
lea
push
pop
pop
call
xchg
ret
xor
mov
add
sub
pop
cmp
stos
clc
mov
dec
inc
bound
daa
adc
push
popa
pop
add
mov
ret
fs
mov
lret
clc
jg
or
jno
pop
jmp
call
ljmp
out
mov
sub
push
loope
push
cmp
cld
inc
cmp
cld
lcall
adc
test
pop
gs
lret
enter
je
sbb
or
mov
sbb
test
jns
loopne
lcall
pop
push
scas
pop
cmp
mov
es
outsb
clc
mov
sub
dec
add
jl
out
insb
mov
mov
cmp
ret
mov
test
scas
loop
sti
outsl
call
xchg
lea
adc
inc
push
add
fs
arpl
xchg
les
or
js
loopne
mov
test
fdivr
fbstp
adc
xchg
sub
xchg
jmp
mov
je
push
push
shlb
mov
loop
cmp
int
incb
pusha
iret
test
inc
add
pop
ficompl
idivb
shll
jp
xlat
scas
daa
push
mov
cmc
popf
rorl
sahf
mov
jns
call
ljmp
cmpl
cld
push
dec
lea
cltd
mov
jmp
mov
xchg
cli
test
cmpsb
xor
jecxz
lds
lea
imull
mov
jg
incl
adcl
push
stos
mov
jo
ret
push
cmpsl
push
sbb
lcall
test
jecxz
mov
push
sbbl
xchg
mov
aaa
dec
dec
dec
jecxz
inc
mov
call
rclb
ret
and
ss
pop
jns
inc
inc
dec
mov
jmp
and
dec
and
jecxz
dec
call
out
xchg
loop
call
fld
gs
int3
xchg
push
pop
ficoms
icebp
pop
test
mov
shll
lret
push
in
adc
cli
call
lahf
dec
es
shlb
mov
lods
stos
pop
pop
test
clc
repnz
or
out
mov
scas
jg
jmp
pop
clc
xlat
enter
jo
adc
cmp
and
pushl
pop
sbb
add
imul
push
shlb
repz
decl
aas
xchg
in
shl
mul
xorl
inc
jecxz
pop
xchg
loop
fcmovu
loope
lcall
push
mov
pushf
and
cmc
jnp
lods
ljmp
into
int3
add
movb
lcall
inc
jle
or
jg
popa
notl
test
sbb
xor
clc
dec
ljmp
xor
loop
push
aam
rol
jae
and
sbb
call
sub
sub
push
rcl
jle
sbb
jle
jl
cmpb
and
popf
or
ret
jns
lods
fldt
xchg
cmp
mov
fstpt
fwait
rcrl
push
pop
pop
or
inc
icebp
sub
cli
or
fs
cli
orl
dec
push
fisubs
inc
cmp
pop
cmc
decl
xor
xchg
mov
jmp
fldt
das
mov
cmp
out
cli
jmp
lock
cwtl
pushf
xor
aaa
mov
adc
std
mov
add
adc
jne
mov
imul
push
lds
push
jo
insb
pop
xchg
jns
test
fisttps
dec
fists
rcll
cli
std
out
xchg
lock
lret
outsl
pop
jae
sub
mov
xor
xchg
ss
dec
fistl
mov
mov
aam
lods
cmp
in
ret
fcoml
pop
test
pop
jecxz
lock
pushl
inc
out
push
push
mov
nop
jne
lods
cmpsl
cmp
fimull
dec
push
push
xor
test
and
sbbb
xchg
add
ret
imul
jmp
rcrl
xor
pop
out
in
daa
mov
sub
stos
sahf
push
add
repz
mov
in
test
lods
xchg
call
jmp
mov
imul
mov
xor
arpl
dec
inc
scas
push
adc
fcoms
in
sub
add
arpl
cli
les
fidivl
inc
push
call
or
hlt
int
popa
addl
mov
xlat
jno
sbb
dec
pushl
pop
inc
ret
xchg
shrb
scas
movsb
mov
xchg
mov
rol
xor
mov
clc
lret
mov
pusha
enter
loope
ss
decl
scas
adc
pushf
jns
push
int
nop
inc
cmp
call
add
stos
outsl
inc
pop
xor
in
out
in
sbb
in
xor
call
xchg
and
adc
pop
outsl
jp
aam
out
adc
push
xchg
mov
mov
popa
aam
stos
cmp
adc
mov
loope
repz
lret
add
sahf
in
cmp
jmp
add
adc
sub
aad
std
or
push
cltd
std
xchg
std
pop
xchg
and
ljmp
popf
fildl
inc
jmp
data16
jp
add
pushl
add
cmc
notb
pop
fists
inc
bound
pop
ljmp
ljmp
pop
pop
ljmp
out
dec
mov
call
mov
and
outsb
mov
cs
rorl
in
push
add
jge
pushl
xchg
mov
or
sub
push
mov
outsl
mov
push
sub
incl
aaa
notl
clc
mov
adc
fcoms
out
mov
aaa
push
icebp
fcomip
jne
dec
adc
xor
pop
lret
pop
cld
lcall
inc
cld
js
push
mov
xchg
jmp
leave
or
call
ret
cmp
and
mov
enter
iret
adcb
xchg
push
xchg
push
mov
pushf
add
lcall
xor
insl
fistps
out
xchg
jmp
sbb
jmp
sbb
cltd
adc
pushf
xchg
cmp
popf
xchg
add
mov
mov
jg
push
enter
daa
enter
adc
mov
mov
in
aam
xrelease
loopne
js
das
icebp
mov
in
sub
ret
dec
ljmp
jae
mov
mov
adc
mov
xor
mov
sbb
call
rorb
dec
pusha
js
xchg
adc
mov
dec
jp
mov
cmp
xor
int3
mov
sysenter
dec
cmpsl
jge
pushf
fsubs
cmpsb
push
cmp
pop
and
inc
xchg
lods
add
push
inc
es
ud0
push
mov
sbb
js
es
lds
int
cmp
fisttpl
cmp
adc
imulb
jmp
mov
pop
xchg
js
sub
lret
mov
jge
lea
and
adc
push
movl
jl
call
push
stc
rolb
ret
push
int
or
cmp
add
cmp
pop
fmull
outsb
mov
push
adc
push
test
inc
sub
push
decl
mov
out
fistl
or
leave
in
add
push
insb
cli
cli
dec
test
inc
int3
sbb
or
stc
mov
stc
sahf
shll
mov
ja
jge
in
xchg
incl
jle
and
es
or
out
xchg
cmp
xchg
xchg
insb
popf
mov
add
ficompl
inc
jl
inc
pop
xchg
mov
decl
sahf
cmp
icebp
js
add
out
daa
or
pop
insl
dec
dec
leave
lock
call
xchg
jg
inc
lea
mov
jo
pop
and
lret
xchg
dec
shrl
mov
add
mov
call
gs
lods
inc
enter
int
mov
sub
inc
lock
jbe
dec
adc
lcall
enter
mov
dec
sti
cmp
mov
mov
and
lock
pop
adc
fiaddl
sbb
les
mov
aaa
into
cld
pusha
or
inc
stos
popf
pusha
sbb
les
inc
pop
test
jecxz
pushl
or
lahf
sub
jno
xchg
scas
inc
roll
lods
cmc
lcall
sarl
subb
sub
mov
lcall
stos
mov
mov
sub
cmc
fmull
fwait
pop
out
ljmp
cmp
or
ror
lahf
outsl
aad
lods
shrb
push
lahf
mov
xchg
xchg
pushl
std
lcall
inc
lret
scas
cwtl
pop
into
dec
cld
lock
mov
dec
fs
stc
mov
fdivrp
imul
adc
std
iret
inc
cmovle
out
cmpsb
dec
push
shl
dec
mov
nop
divb
out
mov
jg
mov
lods
push
push
add
fcmovbe
ljmp
in
mov
dec
and
call
in
int3
pop
leave
mov
dec
jecxz
sub
in
xchg
enter
nop
clc
mov
ja
push
and
testb
dec
pop
inc
fmull
add
cld
decl
jae
cwtl
mov
pop
in
xchg
jmp
fistps
or
pop
rorl
outsb
sbb
jg
or
mov
leave
mov
pop
pop
xor
call
lcall
lret
and
mov
aas
and
fisubrs
cwtl
cs
push
and
cltd
mov
inc
lods
xchg
mov
out
and
lea
pop
scas
data16
out
js
inc
inc
push
cs
xlat
add
aas
les
or
scas
cmp
fildll
mov
incl
test
cwtl
adc
sbb
ds
out
push
sti
dec
hlt
jne
and
fistpll
pop
ret
pop
mov
pushf
lret
stos
sahf
sub
mov
loopne
sbb
sub
imulb
fcomip
push
push
repnz
add
fdivrl
in
pop
xor
inc
cmp
xchg
outsl
add
mov
or
decl
jle
mov
and
pusha
sub
repnz
ja
clc
jge
adc
clc
jmp
jnp
ret
mov
sub
jae
insl
sub
or
les
pop
cmp
call
pushf
mov
dec
add
jnp
out
inc
fimuls
popa
push
dec
incl
cltd
xchg
xchg
int
inc
or
cmp
sbb
stos
xchg
repz
jl
ds
fnstcw
dec
icebp
push
in
push
or
scas
push
xor
jnp
and
mov
or
jg
loopne
xor
add
dec
pop
mov
icebp
lcall
mov
mov
lret
jbe
pop
jg
cld
shlb
test
fisttps
sub
rclb
adcb
shll
arpl
into
bound
ret
pop
or
add
std
jnp
hlt
add
cli
jg
lock
jae
push
cmpl
cmp
lcall
hlt
xchg
outsb
pusha
dec
mov
repnz
push
aad
repnz
mov
mov
mov
js
sbb
int
repnz
lea
loope
ljmp
inc
sbb
cmp
add
push
mov
pop
arpl
mov
data16
out
cli
or
scas
hlt
or
clc
jmp
jnp
fsubl
jmp
call
xor
mov
lea
jno
fsubrl
push
stos
push
pushl
inc
ss
xor
pop
jle
orb
adc
sub
bound
call
push
adc
dec
into
jno
shlb
int3
into
iret
jl
dec
cmp
jns
mov
fldl
mov
mov
psubw
sti
adc
xchg
popa
ss
and
call
and
aad
incb
lcall
push
add
fldl
mov
jns
mov
lea
data16
and
jmp
daa
loope
loopne
enter
xchg
xchg
or
inc
or
push
fdivrp
pushl
daa
clc
push
jno
dec
jecxz
in
aas
mov
push
daa
and
push
add
cmpsb
imul
jmp
sahf
ja
mov
xchg
dec
andl
popf
aaa
pop
push
daa
xor
mov
setne
xor
push
incl
fmul
mov
hlt
je
loop
js
mov
lcall
rcrl
out
subb
nop
add
repnz
jg
ljmp
cmp
mov
test
and
call
das
adc
imul
enter
fnsave
cmp
dec
idivb
stos
mov
jmp
incl
nop
divl
nop
call
push
mov
add
idiv
incl
push
scas
nop
jecxz
cmp
and
lret
stos
gs
xchg
stos
sub
jne
inc
jmp
pushl
cli
rclb
test
pusha
adc
adc
add
test
cli
call
iret
pop
sbb
jbe
lods
repnz
rclb
roll
sti
nop
aas
bnd
push
sar
out
je,pt
push
inc
lods
fidivrl
jg
add
iret
jb
aam
mov
out
adc
stos
ljmp
cmp
pop
mov
jbe
jmp
out
jl
loopne
decl
sub
enter
pusha
das
jne
push
sbb
cmpsl
pop
test
cmp
xor
call
pop
dec
jb
mov
dec
pop
add
popa
mov
dec
enter
fcmovnu
loop
sub
popa
clc
jmp
fstpl
sub
inc
jo
out
dec
shl
push
cmc
mov
cmp
pop
or
and
scas
clc
add
test
or
cs
pop
addr16
mov
lcall
cmc
sub
push
negb
sbb
popf
and
hlt
pop
xchg
mov
pop
lcall
lahf
or
jl
push
addr16
sbb
dec
pusha
cmc
mov
cmp
mov
lret
mov
mov
inc
xchg
and
ja
jno
repnz
test
bound
sahf
fwait
cmp
jmp
sbb
movsb
and
inc
sub
insb
and
and
mov
nop
in
inc
hlt
ret
sbb
stc
lret
inc
push
ljmp
lock
dec
mov
cmp
lcall
mov
lds
mov
push
xor
divl
nopl
decl
pop
repz
push
repnz
xor
jb
daa
fsub
push
sbb
xchg
adc
dec
iret
hlt
xchg
fimuls
ljmp
sub
rolb
stc
mov
insb
ret
sub
cmp
call
mov
add
scas
sub
mov
jno
ljmp
lahf
lret
and
icebp
in
pop
fs
pushf
ret
jmp
mov
cli
repz
rcll
out
xchg
stos
cmp
loop
aas
insb
cmp
scas
jmp
jp
decl
jne
test
lds
fistl
sbb
jne
insb
mov
lods
push
or
adc
jg
adc
addb
in
mov
mov
xchg
mov
and
lea
or
je
lds
mov
pushl
shll
iret
mov
js
adc
sbb
push
pusha
jg
mov
jb
stos
int
decl
call
sbb
lea
movl
push
sub
sub
mov
incl
call
stos
mov
arpl
negb
cmp
orps
sahf
inc
sti
mov
call
icebp
xchg
mov
lods
jg
test
shl
insl
jb
push
fiaddl
jg
jge
mov
dec
adc
add
rolb
rcll
jae
mov
fstl
mov
mov
jle
lcall
adc
and
and
cmp
notb
mov
xor
repz
or
sbb
pop
and
incl
jg
xor
das
aaa
dec
xchg
mov
cmp
jg
mov
test
jbe
sub
xchg
inc
mov
sub
movsb
jae
inc
mov
pop
pop
stc
iret
pushl
mov
xchg
jno
adc
cld
jge
ja
adc
adc
xor
jmp
data16
repnz
loop
mov
incl
and
xorb
inc
xchg
stc
cli
ds
xchg
and
sarl
loop
sub
incl
fcomps
ss
out
mov
mov
test
push
cld
adc
push
and
insl
fistpl
xor
outsl
and
ss
roll
adc
xlat
cs
adc
pop
test
pushl
push
ja
dec
pop
movsl
imul
push
scas
jle
lea
inc
iret
rolb
pop
add
mov
adc
xchg
out
mov
xchg
add
pop
lcall
sbb
adc
sbbl
insl
js
rcr
mov
push
decl
push
inc
dec
pusha
pop
lea
test
cli
inc
mov
idivb
test
sub
lcall
pop
xlat
jae
dec
int3
sub
imul
mov
fisubs
lret
push
rorl
dec
enter
lret
loopne
rorb
push
rcrb
orb
mov
pop
in
and
push
mov
xchg
aaa
mov
fwait
dec
clc
jle
pusha
fstp
ss
mov
pusha
test
xchg
lcall
and
mov
pop
call
aam
and
out
insb
es
sbb
gs
sbb
pop
popa
cld
call
add
cmp
out
push
repnz
mov
cmc
or
lea
cli
push
dec
push
frstor
call
rorb
jae
lods
mov
adc
gs
adc
pop
loopne
pusha
out
subl
dec
jl
les
add
dec
mov
rorb
cs
jp
fcomi
cmpb
test
adc
jo
repz
cmc
push
cmp
xchg
cs
push
jp
ret
dec
xchg
jmp
decl
fistl
in
popa
jg
or
sbb
iret
sub
xor
mov
add
mov
fdivr
decl
xlat
mov
nop
rcrb
cmpsl
stc
repnz
or
sub
stos
adc
and
mov
adc
decl
adc
or
dec
adc
movsl
in
and
loop
pop
popa
pop
push
mov
dec
js
rcrl
or
in
dec
inc
and
imul
push
jmp
fcmovnbe
leave
mov
std
pop
mov
mov
sub
fs
lock
test
mov
pop
jecxz
jno
sahf
cmpsb
cmp
data16
decl
dec
mov
dec
inc
rcll
subl
or
int
sbb
dec
jge
add
push
std
dec
mov
pop
and
dec
mov
sbb
inc
or
sub
mov
xor
call
outsb
mov
testl
adc
mov
mov
dec
lods
fistl
and
clc
xchg
and
fisubrs
rorb
sub
nopl
jg
pop
and
push
rep
push
pop
cmp
addr16
push
sub
sub
lret
sbb
dec
mov
pushl
ds
add
sub
cmp
aam
sbb
push
leave
inc
xor
daa
mov
push
cltd
add
popa
std
mov
push
jge
rclb
test
cmpsb
xchg
in
in
jno
outsb
or
inc
sub
dec
add
clc
pop
rcl
subl
inc
out
lret
lret
cli
xor
jle
inc
cmc
mov
les
adc
push
fst
mov
test
icebp
ljmp
clc
cmp
xor
cmp
inc
mov
sbb
or
pushl
cmp
loope
faddp
jle
mov
fcoms
out
sbb
daa
pop
xor
mov
aas
mov
fldt
incl
ficoml
insb
and
add
jmp
inc
and
clc
repnz
movsl
pop
stos
inc
daa
mov
xchg
invd
and
stc
cmp
mov
aaa
pop
mov
repz
inc
dec
jbe
call
js
push
aad
js
lahf
jns
lods
cmp
sub
dec
outsb
cmc
fldenv
jnp
add
scas
xor
cmp
mov
repz
mov
mov
sbb
pop
incl
add
add
inc
lock
repz
lret
loop
lock
mov
jmp
xlat
mov
imul
fucomip
ljmp
inc
jnp
dec
lock
push
rol
out
jmp
out
pop
aas
addr16
loopne
out
into
jmp
pushl
rcrb
add
pop
xor
rcrl
rorl
cld
or
jg
sub
bsr
ljmp
sbb
mov
mov
or
inc
xor
add
adc
call
fisttpl
mov
add
call
push
mov
dec
push
xor
scas
movsl
cld
mov
ret
cs
stos
push
pushl
mov
xor
cmp
adc
stc
or
jns
call
cmp
jbe
xor
dec
cld
fidivrs
jp
shll
rep
scas
out
sar
mov
shll
inc
adc
inc
cli
ljmp
cld
ljmp
std
out
jle
nop
xor
xor
fsubs
dec
filds
xchg
jae
cli
stc
stos
sub
xchg
jo
xor
fdivl
rol
adc
sub
mov
out
cli
inc
out
jne
incb
imul
fwait
out
push
sub
jb
sub
pushl
mov
je
cmp
xlat
add
and
and
push
adc
rclb
and
lcall
icebp
popa
cmp
sub
xchg
fidivl
scas
dec
lea
and
int3
std
mov
mov
xor
mov
push
or
into
xchg
je
fbstp
enterw
fsubs
mov
push
lds
sub
out
rclb
jmp
xchg
leave
scas
add
cmp
adc
in
xchg
mov
push
cmp
mov
jb
lods
ljmp
sbb
add
ja
test
cmc
pop
imull
repnz
pop
stos
add
and
mov
aas
es
and
pushf
mov
ljmp
addb
mov
outsb
cli
jne
fdivs
sbb
mov
xor
orl
lahf
mov
push
cmp
and
cs
rcll
rcl
xchg
es
jns
sbb
pop
push
into
imul
add
mov
mov
push
and
insl
shll
js
add
andb
jne
xchg
test
inc
fwait
add
aas
jae
adc
mov
mov
das
fbld
ja
pop
ret
inc
cmpsl
repnz
push
imul
jmp
mov
xor
pop
jl
jmp
sub
push
lret
push
and
ljmp
jnp
movsl
mov
std
shl
fists
negl
mov
push
mov
jmp
cmp
imul
cmp
mov
pop
jmp
pushl
scas
mov
cli
or
jp
fiadds
fistl
mov
pop
xchg
inc
or
xor
dec
jmp
lret
push
jg
or
pop
adc
sarb
cmp
cmp
cmpsb
jns
jmp
js
mov
test
xor
pop
adc
aaa
clc
ljmp
and
mov
xchg
add
or
fucomip
mov
decl
or
int3
mov
xor
mov
add
incl
call
sub
sub
cli
mov
mov
call
shrl
insb
roll
iret
lret
cs
test
add
mov
pushl
in
leave
or
mov
xrelease
cmp
xchg
cmp
lcall
mov
test
mov
negb
inc
in
iret
je
jnp
repnz
popa
decl
pushl
pop
leave
pop
insb
cmp
insw
das
stos
and
stc
jns
ljmp
mov
jl
jne
in
enter
xchg
popa
mov
imul
dec
imul
jmp
popa
mov
mov
cmc
loope
lret
inc
dec
in
clc
jae
fisubrs
clc
ljmp
clc
mov
mov
imul
jle
fdivrl
ljmp
in
pop
icebp
ret
cltd
push
popf
test
xor
push
mov
clc
or
pop
sbb
nop
adc
pop
jb
push
mov
dec
jns
mov
jbe
int3
mov
daa
push
inc
jnp
repz
mov
sahf
mov
aaa
imul
das
inc
inc
xor
std
and
into
mov
jno
imul
inc
inc
mov
push
lcall
add
dec
in
push
mov
test
pushf
pop
sub
sub
xor
push
ret
cwtl
push
add
xchg
add
dec
jne
xlat
sahf
xchg
imul
movsl
push
ljmp
mov
loop
push
adc
add
ss
mov
in
xchg
mov
into
clc
xchg
decl
adc
mov
jg
pop
jnp
out
hlt
mov
dec
mov
daa
cmp
mov
sbb
fwait
das
add
jle
out
in
gs
pushl
mov
mov
lret
lock
movsl
push
fisubrs
sbb
push
cltd
jmp
psubw
jb
addr16
add
add
lock
fcomps
xchg
inc
mov
sar
add
mov
xchg
or
int3
ja
std
rol
fisttpll
test
ljmp
dec
aaa
and
popf
popf
iret
adcb
ret
mov
push
fwait
call
adc
mov
dec
jo
push
add
jl
lcall
pop
xor
movsl
setbe
xlat
idivb
leave
fst
lods
xor
pushl
dec
xor
aam
lahf
outsl
hlt
dec
loop
and
and
sbb
and
add
or
cmp
pop
loopne
lcall
pop
sub
dec
arpl
aaa
gs
mov
pop
call
out
xor
inc
mov
cmp
push
out
dec
jbe
jp
push
imul
scas
xchg
jl
xor
adc
inc
sbb
ss
gs
in
cmp
mov
push
icebp
inc
cmp
call
lea
xchg
rclb
xchg
rclb
test
stos
mov
adc
or
jge
decl
push
mov
pop
mov
mov
or
sbb
xchg
xchg
divl
outsl
jmp
call
cmp
inc
pop
out
pop
fnstcw
push
push
daa
lods
push
cmpsb
adc
adc
out
lods
loop
inc
call
fildll
stos
ljmp
xchg
mov
xchg
test
sub
cmpsl
sub
lahf
xchg
arpl
call
sub
sub
dec
idiv
js
daa
pop
std
adc
adc
arpl
mov
push
call
loopne
mov
xchg
add
xchg
mov
jb
test
mov
or
mov
hlt
push
xor
jnp
les
pushl
cli
or
add
sub
xchg
xchg
or
scas
loop
pop
cld
ret
dec
push
jo
push
mov
movsb
adc
decl
cmp
pop
and
or
inc
ja
or
jno
jl
out
enter
lcall
addr16
insl
and
repnz
inc
push
sti
inc
mov
jl
xchg
and
lea
iret
adc
stc
jo
xchg
das
mov
ficomps
and
int3
pop
das
imul
mov
inc
mov
clc
leave
xchg
lock
pop
inc
add
jmp
lods
addr16
lret
and
unpckhps
rol
and
ja
cli
mov
sub
inc
flds
mov
adc
pop
bound
repnz
lcall
arpl
xlat
and
ret
push
cld
call
mov
push
rol
ljmp
mov
bound
movsb
dec
jmp
push
movsb
fcoms
ret
pop
adc
pop
inc
mov
int
inc
comiss
or
or
adc
dec
xchg
fucomi
and
pop
sbb
or
mov
push
iret
in
pop
hlt
decl
lods
cmp
cmp
mov
mov
pusha
cli
push
js
dec
push
rcrl
pop
test
in
inc
out
ficoml
pop
jg
std
lcall
and
js
mov
pop
bound
cmpsb
dec
cltd
inc
shl
mov
adc
jmp
jbe
ljmp
or
pop
pusha
cmpsb
scas
cmp
shl
std
cwtl
pop
dec
pop
imul
je
push
jl
pop
inc
cmp
inc
clc
jg
imul
popf
xchg
adc
ljmp
mov
inc
mov
pop
jnp
fisttps
cmp
xor
outsl
call
pop
ds
sub
jecxz
mov
push
xchg
loope
fimuls
faddl
xor
xchg
jg
out
ds
push
add
xor
mov
roll
inc
pop
call
pushf
mov
orb
sub
and
and
clc
xor
jmp
cmpsl
shll
and
pop
adc
xchg
mov
jp
jb
ds
push
pop
mov
cli
pushl
lcall
mov
fidivl
adc
inc
dec
pop
ljmp
push
push
xlat
les
pusha
std
add
sbb
test
mov
sbb
fbstp
mov
xchg
sbbl
sbb
cwtl
orb
mov
test
decl
add
pop
xor
sbb
push
pop
and
clc
pop
xchg
aas
out
cli
pushl
dec
xchg
mov
shl
icebp
jo
mov
sub
ret
int
sub
jmp
mov
daa
or
ja
dec
dec
adc
or
sar
ljmp
mov
test
adc
std
adc
sbb
jp
popa
fwait
test
icebp
lods
and
jg
movsb
jmp
fbld
outsl
rcl
mov
push
dec
fisubrl
push
add
repnz
mov
dec
dec
adc
pop
fsubr
es
jne
decl
dec
jp
ja
je
push
test
sbb
std
mov
fbld
sbb
lods
shl
test
dec
ss
cs
sub
mov
stos
push
test
cld
stos
decl
push
dec
call
fnsave
bound
push
pop
cmp
filds
sub
cwtl
push
popa
pop
xchg
cld
popl
iret
gs
pushl
mov
stos
lods
adc
mov
cwtl
mov
pop
jle
lcall
loopne
mov
mov
std
cmp
inc
mov
pop
shrl
xor
pop
jp
lcall
dec
cli
mov
or
xor
mov
sub
xchg
add
xchg
mov
pop
std
fisttps
div
cmp
cmp
fildll
mov
mov
and
nop
test
push
cmp
sub
push
push
jmp
ljmp
sbb
xchg
lods
push
leave
mov
rol
cmc
aas
pop
test
add
mov
mov
push
ja
push
xor
xchg
sbb
insb
sub
int3
aam
sub
adc
cmp
out
and
sub
pop
test
jg
push
dec
mov
cmp
push
or
inc
rcrl
sarb
in
lcall
push
inc
icebp
or
out
clc
or
ss
xor
scas
fldl
inc
stc
sbb
das
mov
fdivrs
mov
insb
mov
mov
pushl
adc
sbb
lret
inc
out
jge
mov
cmp
mov
adc
add
cli
call
cmp
int
jo
int
adc
xor
and
lds
cmp
mov
out
and
jecxz
xchg
fdivs
adc
dec
cmp
cltd
xchg
add
pop
daa
rclb
pop
push
popf
cli
decl
sbb
imul
imul
testb
mov
mov
jne
imul
add
in
decl
decl
std
pop
pusha
js
std
xchg
out
lods
scas
mov
jbe
insb
scas
loope
pop
adc
insl
pop
dec
pushl
cmpsb
sub
inc
into
adc
jno
mov
dec
fldenv
xor
inc
xchg
dec
xor
xchg
xchg
rclb
shll
add
shlb
sub
inc
sbb
inc
fldt
cltd
cmp
clc
jbe
adc
cli
push
fildll
cli
pop
mov
jg
dec
push
adc
lret
dec
out
sbb
lock
mov
mov
pop
stc
inc
incl
orb
out
pop
pop
into
nop
lret
jmp
or
xor
push
mov
jmp
rclb
loope
push
cmpsb
pop
xor
adc
mov
ffree
cmp
loopne
in
mov
push
icebp
xorb
call
mov
icebp
pand
push
clc
dec
in
outsl
int3
mov
test
mov
pushl
adc
sti
mov
call
xor
stos
mov
dec
sub
ljmp
int
xor
xor
add
fildll
mov
push
negb
add
push
inc
fs
in
lret
and
xchg
and
jb
icebp
mov
pop
jl
in
leave
add
dec
es
mov
xor
pusha
jmp
mov
in
popf
lret
sbb
sahf
stos
leave
or
jb
ljmp
push
imul
push
or
pop
mov
mov
inc
inc
repz
addb
sar
incl
scas
sbb
inc
movsl
mov
gs
mov
mov
into
icebp
mov
pop
and
push
xor
jae
xorl
push
in
out
nop
test
push
stc
pop
or
and
jmp
mov
jbe
cmp
test
bound
xor
mov
adc
js
insl
fildl
pop
pushf
clc
mov
sti
push
jne
mov
adc
ds
les
pop
lret
call
popa
sbb
or
inc
add
push
and
mov
cmp
dec
jae
add
mov
outsb
fisttpl
rolb
outsl
fwait
ljmp
popa
rolb
sti
adc
mov
xor
adc
incl
cmp
jo
mov
pop
hlt
ret
paddsw
push
push
shr
call
add
scas
cmp
mov
push
push
xchg
sub
clc
xchg
sbb
fbld
xchg
scas
sub
mov
inc
sbb
daa
out
pop
inc
shl
push
sbb
sub
inc
lret
mov
cltd
pcmpgtw
cld
jg
lods
mov
jp
jne
lcall
icebp
jg
and
movsl
pop
dec
paddd
mov
pushl
push
cmpsb
mov
ds
mov
in
out
fldl
and
cmp
icebp
and
insb
addr16
aad
mov
call
sub
mov
scas
or
outsl
jg
cld
mov
dec
pop
sub
ja
mov
push
adcb
push
shll
flds
jbe
incl
push
mov
pop
shll
outsl
mov
mov
pop
movsl
test
inc
out
pop
cmp
aam
jmpw
div
fwait
lods
sbbb
and
sub
xor
rcrb
lods
enter
pop
sbb
mov
call
aad
mov
ret
xor
stos
cmpsl
and
rcr
mov
jg
jl
out
lret
fisubs
cmp
cmpsb
sbb
push
stos
in
aad
sbb
sub
pop
pop
pop
add
imul
insb
cltd
dec
andl
mov
cmp
aaa
clc
jmp
sarb
mov
ljmp
jmp
cmp
rclb
gs
xor
pop
mov
addb
pushl
mov
popa
jb
leave
sbb
push
out
pusha
inc
int3
cmp
in
lret
cmp
add
jmp
sbb
aas
or
jnp
lea
in
cmovno
ds
in
push
das
clc
ljmp
dec
jns
adc
and
sub
cmc
jmp
popl
idivb
dec
jmp
call
push
sub
fsubp
ret
decl
jp
insl
out
cwtl
fistpll
rorl
cmp
dec
repz
mov
xor
cld
pop
mov
into
xor
shrb
mov
adc
xchg
inc
ljmp
lock
jo
jne
jo
inc
adc
inc
inc
cmc
je
scas
fsubp
jmp
incl
push
int
cmp
and
jle
jl
into
dec
mov
pop
and
cmp
push
xchg
hlt
ljmp
idiv
in
loopne
xchg
xchg
inc
shll
xchg
ficoms
and
ljmp
push
sub
jns
rorb
lock
sbb
mov
ss
or
pop
lcall
mov
cmp
dec
shlb
lods
rorb
pop
and
icebp
add
and
cmc
jmp
jmp
lods
or
loopne
adc
add
stos
xor
inc
mov
call
cld
movsb
xchg
cmp
mov
fdivrs
scas
jg
addr16
jno
fisubs
inc
imul
sbb
loop
ret
adc
mov
call
jl
mov
cmp
pusha
shrl
dec
push
lcall
pusha
dec
int
push
bnd
inc
pop
xchg
cmp
aas
sbb
iret
aam
mov
xor
popa
push
mov
lahf
sub
aaa
std
jg
xchg
or
pop
or
cmp
adc
js
lods
xchg
add
pushl
mov
hlt
jbe
mov
sub
and
xor
mov
xchg
adc
ret
ljmp
pop
and
jecxz
lea
repnz
inc
xchg
bnd
std
inc
hlt
push
add
jns
jno
insb
in
and
or
cmp
adcb
ljmp
fld
mov
clc
push
push
cmc
push
sub
sub
fbld
das
cmp
cmp
dec
jmp
mov
jbe
fbld
and
jne
lods
push
notl
cld
jbe
adc
rclb
jg
arpl
dec
insb
inc
fs
mov
or
mov
popf
inc
xchg
mov
fnsave
lret
push
call
sti
mov
cld
divb
test
stc
and
cmp
xchg
fisubrs
and
sbb
or
gs
adc
mov
adc
shll
or
push
out
in
jecxz
push
cmp
jle
daa
pop
cmc
lcall
push
jp
inc
out
sbb
sarl
adc
cmpsb
lods
pop
cld
incl
dec
fwait
sub
loop
mov
inc
adc
dec
mov
mov
xchg
push
aas
inc
shrb
or
push
cmc
mov
xor
cmp
dec
fwait
cmp
xlat
lods
aad
decl
iret
pop
pusha
mov
cmp
test
stos
pop
or
mov
add
or
lcall
fdivp
xor
fs
mov
push
ss
dec
jbe
in
repnz
enter
cmp
jge
dec
push
or
cwtl
fwait
hlt
jg
and
lock
inc
mov
cli
in
jl
mov
ljmp
sub
mov
into
xor
adc
call
popf
and
mov
xchg
addr16
pusha
mov
mov
mov
adc
and
push
pop
xchg
jne
ja
push
push
jg
pushf
or
push
incl
xchg
into
push
cmp
aam
adc
jg
dec
std
mov
and
inc
sarb
push
jbe
cmp
es
movsl
mov
pop
xor
sbb
xchg
mov
cmpsl
fimuls
scas
push
fs
addr16
and
rcl
jnp
adc
jmp
jmp
es
and
mov
jnp
std
cmc
jecxz
sbb
cmp
and
inc
rcrb
mov
fdiv
jmp
mov
mov
lds
cmpsl
pushaw
xor
xor
sub
clc
rorl
push
xchg
push
xor
jmp
cmp
push
das
ljmp
xchg
mov
xor
inc
sub
in
add
out
inc
cs
imul
cmp
add
inc
dec
call
mov
in
cli
fcmovu
pusha
ret
lods
xchg
fstpt
cmpsl
push
enter
add
sbbb
pop
decl
js
ljmp
mov
mov
adc
jnp
jge
aas
jecxz
or
ljmp
loopne
or
pop
jp,pt
std
mov
das
xor
xchg
dec
pop
repz
sti
pop
mov
out
sub
ljmp
or
mov
sti
nop
mov
pop
adc
sbb
cmpb
mov
mov
addr16
fadds
ljmp
mov
testl
rcrb
movb
cmp
incl
inc
fnstsw
mov
and
shlb
adc
ja
pushf
mov
popa
add
icebp
ffree
out
mov
ffreep
scas
repnz
incl
lcall
push
jnp
mov
iret
fistpll
pop
mov
mov
inc
sub
push
pop
fstp
sarl
outsl
repnz
cmp
pushl
outsb
pushf
je
popa
lahf
inc
xor
pop
aam
jno
stc
sub
sub
fsubs
and
stos
lock
xchg
jge
add
stc
negb
xor
sti
jl
xchg
adc
out
adc
clc
fists
js
or
daa
adc
mov
push
pop
xlat
and
dec
imul
repnz
pushf
test
int
mov
mov
bsr
or
dec
pop
andb
outsl
pop
mov
sti
add
fisubl
je
iret
jg
jmp
int
dec
dec
neg
sahf
mov
mov
dec
pushl
pop
sti
mov
loope
and
pusha
int3
adc
xor
arpl
mov
push
cmpsl
nop
xchg
ljmp
pop
push
jmp
pop
sub
stos
inc
lret
cmpsb
std
jl
jmp
jp
fs
push
or
jg
clc
shll
gs
mov
int3
dec
jns
jbe
pop
stos
inc
pushl
call
add
popf
jp
sub
mov
inc
lods
mov
sub
dec
inc
stc
adc
mov
aad
cmpsl
incl
fidivrl
cmp
inc
pop
inc
repnz
push
lret
mov
hlt
hlt
or
insb
mov
fcompl
scas
mov
mov
into
imul
outsb
adc
push
pop
and
push
mov
pop
aam
call
dec
pusha
pop
in
clc
int3
mov
cvtps2pd
sbb
dec
clc
push
add
or
inc
insb
movsl
iret
xor
pop
push
sub
clc
jb
adc
dec
lock
scas
outsb
add
sbb
ret
daa
jo
cmpsl
inc
dec
cli
aaa
mov
ret
adc
loop
rorl
out
test
push
xchg
movsl
gs
or
push
xor
std
shrb
incl
adc
lds
mov
mov
jb
popf
push
push
xor
dec
mov
call
sbb
cmp
cmp
mov
insb
stos
mov
pushf
or
pop
inc
aaa
cli
iret
adc
inc
loope
sbb
mov
mov
je
xchg
mov
and
mov
fdivr
js
push
and
sub
movl
push
testb
std
popf
jmp
enter
cmp
push
ds
rcrl
call
push
inc
xchg
loop
sub
les
cmc
imul
dec
and
ljmp
dec
jecxz
cmp
mov
pop
stos
push
inc
lcall
adc
adc
mov
dec
out
add
mov
pop
and
mov
lret
cmpsb
popl
push
xchg
push
andb
inc
jo
movsl
mov
test
into
mov
out
ljmp
jecxz
cmp
test
aaa
cmp
fisttpl
or
ret
jmp
push
in
cmp
ss
mov
movsl
rcr
ret
mov
enter
ljmp
push
adc
mov
movsl
outsb
jle
adc
loope
jo,pt
inc
mov
pop
add
cld
fsubrl
out
aaa
or
jmp
xchg
dec
mov
cmp
pop
pop
adc
cmp
in
loopne
pop
sbb
sahf
fisttpl
xchg
std
add
scas
ljmp
push
fwait
adc
mov
jnp
mov
fidivs
mov
pop
jle
enter
inc
sub
adc
sbb
inc
subb
xor
push
cmc
push
insb
mov
mov
xor
xor
lcall
sub
add
inc
fsub
adc
nop
pop
roll
cwtl
lcall
lahf
cli
leave
sub
and
pop
pop
inc
clc
xchg
xchg
push
mov
jmp
adc
ljmp
js
repnz
ret
fistl
fidivrs
cmp
in
fdivp
ret
fsubrp
mov
dec
sub
decl
cmp
lods
add
fsts
xor
adc
cmp
in
jp
and
inc
xchg
push
dec
jns
and
movsb
incl
outsl
cld
push
repnz
fsubrl
dec
and
cli
call
ja
imul
aas
push
ja
fbld
test
movsb
sbb
jmp
ljmp
mov
shrb
and
fcomps
xchg
loop
jl
leave
out
push
fs
insl
call
clc
bound
test
and
xchg
insb
push
dec
sbb
sub
pushf
cmc
cmpsl
and
mov
lahf
push
mov
mov
push
pop
insl
inc
sub
pushf
call
mov
jne
jmp
jno
inc
sub
mov
mov
fwait
and
int3
sub
dec
mov
sti
loopne
or
clc
jmp
fldt
popl
pushl
lods
stos
jecxz
clc
scas
mov
in
shrb
mov
and
call
jnp
test
mov
sub
repz
lcall
repz
sbb
hlt
rclb
inc
js
mov
int3
test
pop
push
out
add
mov
cli
push
lea
sbbb
sbb
call
ret
or
push
mov
sahf
pop
repnz
fildl
mov
and
aam
and
les
leave
or
or
jmp
repnz
inc
pusha
push
cmp
ret
xlat
int3
lods
pop
fldt
adc
repnz
pop
and
stos
lods
xchg
lock
pop
scas
mov
ljmp
push
ss
cmp
stos
or
fdivs
ss
dec
in
xor
addr16
call
dec
out
gs
xor
pushf
cli
sub
lock
fildll
repz
jo
jno
pusha
jns
sub
jmp
fstpt
popf
adc
inc
mov
and
orb
sbb
dec
add
adc
cltd
arpl
jg
pushf
xor
out
cmp
mov
and
fiadds
xlat
adc
sbb
xchg
or
push
push
into
scas
xchg
lcall
stc
mov
arpl
leave
push
fs
jecxz
and
lods
das
in
mov
incl
ja
andl
lcall
mov
ficoml
ret
jo
xchg
loopne
test
pop
inc
mov
stc
lahf
fisubl
aam
mov
adc
mov
ljmp
jle
fcomip
mov
adc
leave
mov
call
push
sub
stc
cwtl
push
and
test
sub
mov
cmpsb
testb
pushl
insl
mov
cmp
pop
sbb
into
jge
das
mov
mov
or
sti
addr16
cmovo
pop
adc
mov
subb
pushl
mov
dec
push
push
pusha
aas
es
fsubrs
mov
add
icebp
into
or
out
and
aad
stos
xor
std
push
js
mov
sarl
mov
ret
pop
xchg
jb
mov
xchg
stos
adc
nop
lcall
loope
mov
sbb
and
outsl
adc
insl
in
leave
cwtl
negl
inc
ljmp
test
and
mov
cmp
or
push
xor
scas
or
incl
adc
lds
js
mov
bound
jle
xlat
xchg
xchg
fisttps
into
nop
mov
xchg
xchg
lds
add
inc
push
mov
jg
je
aam
sub
mov
mov
daa
push
ljmp
add
xchg
ret
xor
js
xor
aam
mov
iret
mov
jne
add
xor
jnp
cmpsl
das
mov
test
mov
ljmp
jge
dec
mov
stos
sub
xchg
sbb
sar
or
add
rorb
push
inc
les
lret
mov
popa
call
add
insb
sub
jmp
fiadds
out
int3
aad
out
cmp
int3
sub
loope
jb
test
loopne
jnp
call
xchg
xor
shll
push
pop
inc
test
and
jo
ficoml
daa
hlt
cwtl
iret
ljmp
das
sub
test
adc
je
ret
lock
and
pop
and
jle
jnp
cli
mov
jle
add
jb
imull
test
rorb
cs
call
fisttpll
pop
out
pop
out
hlt
inc
mov
jge
loopne
or
cld
in
sub
mov
jmp
xlat
add
mov
adc
mov
sub
xchg
mov
xor
xor
loopne
cmp
sub
mul
xor
imul
jg
fcompl
rorb
add
fs
sbb
in
incl
inc
clc
pop
into
xchg
pop
lahf
cwtl
pop
push
xchg
inc
js
xor
adc
scas
pop
rorb
movsl
mov
test
call
in
nop
xor
xchg
push
call
outsl
mov
push
pop
es
call
insb
std
pop
lock
jo
xchg
inc
fdivr
xchg
pushf
aam
dec
xchg
gs
pop
jmp
out
bound
inc
ret
inc
enter
adc
sbb
cmp
add
mov
popa
pop
jle
sub
imul
inc
pushf
lea
roll
xchg
pop
pop
push
movsb
jmp
ljmp
mov
lods
cmpl
cs
mov
out
popa
mov
lock
sub
ljmp
je,pn
movsb
int
sbb
icebp
arpl
push
and
icebp
xchg
cmp
decl
add
pop
xor
test
lahf
mov
xchg
push
push
daa
pop
inc
add
mov
xchg
rorb
mov
sti
lods
inc
rorl
test
stos
lods
in
push
cs
out
inc
jle
test
pop
sub
lcall
mov
and
dec
sbb
aaa
ljmp
rol
jo
jae
sub
xchg
or
inc
mov
fdivrp
lcall
insb
xchg
jae
in
inc
add
test
mov
movsb
iret
lock
mov
pushf
aaa
push
stc
fsubr
xchg
enter
int
mov
out
rcll
and
jb
gs
cmp
cmp
mov
or
pop
inc
call
lcall
xor
or
loope
and
cmp
add
mov
addl
mov
pusha
push
mov
mov
jnp
push
cwtl
pop
sbb
pop
xorps
sub
call
clc
fcomps
mov
inc
cmp
stos
das
push
das
rorb
aam
and
cmp
outsl
clc
mov
es
popf
js
or
jns
call
ret
les
imul
aaa
lods
lock
mull
sarb
jg
xor
ds
sbb
pushl
inc
ds
fs
in
pop
jne
aad
pop
clc
addr16
in
jb
push
jbe
jne
xor
push
pop
push
fadd
inc
or
pusha
mov
dec
jnp
clc
mov
imul
dec
push
mov
sbb
mov
sub
add
div
mov
call
das
sbb
rcl
imul
mov
pop
bound
xchg
xor
mov
lcall
mov
leave
mov
add
push
pop
inc
pop
into
fbld
pop
sbb
jbe
push
lcall
mov
pop
movsl
xchg
mov
icebp
jmp
lods
mov
jae
sub
mov
aas
jbe
scas
ret
lea
add
ljmp
mov
mov
sahf
push
inc
sub
aas
sub
jb
mov
and
decl
push
movsb
xchg
mov
mov
push
jnp
in
dec
pop
mov
inc
loope
xor
les
mov
jne
incl
adcb
and
and
imul
jae
ret
sar
fcomps
lock
jmp
ljmp
mov
xorb
inc
adc
pushl
aaa
cli
fdivrl
xor
insl
sub
stos
loopne
adc
lret
lods
xchg
inc
sahf
inc
sbb
pushl
imul
clc
mov
jmp
push
mov
in
fisttps
or
jge
lods
pop
enter
push
push
jl
push
jno
adc
sti
sahf
cmp
add
jns
sahf
cmpl
shl
cmp
cmpsb
cmp
int
add
fld1
mov
cld
into
rcrl
sub
incb
ds
push
mov
push
loop
sar
lcall
dec
subl
ss
testb
sub
ljmp
jg
cmp
fnsave
in
orl
pushf
mov
sti
sbb
xor
popf
incl
add
pusha
mov
push
fxch
and
subb
mov
aaa
and
popa
mov
incl
movsl
mov
and
in
xor
jno
jge
xchg
pop
and
push
ljmp
incl
xchg
dec
icebp
mov
fildl
cmp
repnz
lods
repz
test
idiv
dec
mov
lcall
sbb
ja
inc
sub
mov
arpl
push
pushl
mov
add
pusha
pop
mov
sub
pop
cmp
shr
mov
sub
outsb
cmp
mov
lea
adc
and
mov
cmp
enter
lret
pop
lods
xchg
jb
sbb
call
xchg
cmp
sub
imul
shlb
int
std
mov
push
inc
lahf
sbb
push
inc
outsl
std
into
jmp
stos
and
icebp
fwait
jle
dec
sub
ds
lds
std
cmp
fisubl
leave
push
ljmp
cmp
mov
xlat
lret
push
outsl
out
pop
and
decl
shlb
icebp
icebp
adc
sbb
rolb
roll
jl
outsw
sub
cmpsb
jae
pushf
mov
loopne
mov
mov
or
lods
test
ljmp
mov
adc
scas
std
test
adc
fcmovnbe
test
mov
decl
jno
pop
faddl
pop
sahf
dec
jg
sub
call
push
cld
frndint
mov
call
inc
ret
jbe
js
lock
cmc
stos
pop
sub
sbb
mov
or
ljmp
jmp
dec
in
or
sti
jmp
adc
adc
add
lret
ror
and
decl
loop
jecxz
clc
test
pop
pop
test
pop
test
pop
inc
xor
jmp
sub
cwtl
cmp
cltd
fcmovnb
mov
jbe
fwait
ss
inc
cmp
mov
mov
aam
xchg
call
dec
and
cmp
jae
fucomi
dec
loope
test
inc
xchg
jge
mov
pop
xor
or
and
scas
mov
mov
gs
fadd
call
cmpsl
inc
mov
shrb
aaa
push
dec
repnz
repnz
mov
addr16
sub
sbb
mov
les
std
pop
out
jns
push
pop
in
js,pt
mov
cld
add
mov
ljmp
rcrb
fstps
cmp
mov
cs
call
sub
mov
lock
call
and
cmp
inc
jg
mov
sub
or
xor
cmp
or
decl
push
jecxz
xor
inc
ret
sahf
es
xlat
mov
into
sti
lret
or
cmp
int3
or
repnz
pusha
xor
out
aam
out
clc
shlb
dec
push
call
adc
push
jns
ss
outsb
ffree
ljmp
pop
out
inc
pop
icebp
and
call
xchg
stos
xchg
jno
rcrb
insl
movsb
cs
decl
and
aam
push
int3
pmuludq
loop
test
out
ret
push
rcrl
scas
mov
call
push
mov
fcomip
and
inc
cmp
sub
push
push
les
mov
push
ret
sbb
mov
gs
push
scas
aas
pop
adc
aad
idivl
cmpsb
fcmovb
sub
cwtl
or
jns
cmp
into
adc
call
lds
dec
pop
jg
adc
and
pop
inc
cmp
hlt
mov
call
xchg
pop
pop
sbb
dec
lock
jle
into
mov
incl
add
in
add
jp
insb
fcomp
jp
and
decl
aam
rorb
in
rcrb
movsl
je
push
lahf
movsl
enter
decl
or
cmp
xor
add
in
or
mov
mov
and
call
int3
inc
add
xor
rcr
xchg
cmpsb
sub
or
xor
pop
pop
mov
out
fwait
es
stos
sbb
xchg
add
sub
and
mov
lock
fisubl
mov
pop
mov
aaa
adc
and
inc
idiv
call
sub
mov
push
frstpm(287
cmp
das
mov
lret
add
pop
cmp
mov
xor
push
fsts
stos
sbb
mov
lods
push
xchg
out
jmp
fcomip
mov
adc
fmuls
fildll
or
pusha
cwtl
outsl
jl
and
push
shll
lds
sub
dec
in
std
jae
mov
pop
nop
xchg
imul
sahf
inc
in
xchg
cld
call
add
out
cmpsb
hlt
pop
inc
imul
in
push
or
pop
sbb
out
fs
jg
popa
push
or
leave
test
mov
mov
mov
in
popa
mov
pop
jo
lret
jns
sub
popa
cmp
out
decl
or
or
aaa
inc
sbb
js
cmc
sub
fs
push
mov
xchg
out
xor
inc
jno
ficomps
pusha
sarb
sti
cmc
push
push
lahf
cmp
mul
ret
pushl
push
pusha
fdivrs
push
inc
xor
stos
adc
ret
lret
jg
pop
pop
js
push
xlat
pop
xor
pop
cmp
test
lea
lock
jle
inc
xchg
fcomip
incl
mov
fsub
jnp
testl
sub
jns
dec
notl
filds
pop
iret
fs
mov
outsl
fldenv
pop
mov
inc
in
pop
icebp
add
push
lcall
loopne
jae
mov
fadds
dec
cmp
xor
das
and
ljmp
add
std
loope
mov
les
sub
lret
mov
sar
and
dec
push
mov
dec
lcall
clc
xor
push
rol
sbb
jecxz
or
jmp
jg
frstor
pop
xchg
pop
xchg
jae
out
pushf
dec
mov
mov
dec
sbb
mov
cmpsl
jp
jmp
mov
add
fisubrl
lea
pop
int
mov
fstl
das
xchg
fistpl
std
xchg
mov
lcall
movsl
fimuls
gs
daa
aas
add
inc
xor
xor
pushl
clc
dec
out
add
cmp
ret
gs
fldcw
roll
xchg
adc
fdivl
pop
mov
sti
jmp
sub
stos
test
mov
xorb
jae
sub
mov
scas
packuswb
or
jg
adc
das
xor
mov
shrl
xchg
cmp
cld
shll
add
ja
fistpl
push
jg
sti
and
sub
outsb
test
cmpsb
sub
lds
repz
popa
insb
jle
adc
aaa
cld
jmp
aad
mov
pop
ret
or
into
sbb
popf
mov
mov
xchg
add
je
sbb
clc
popl
data16
cmpsb
mov
mov
jmp
aas
into
adc
pop
mov
out
push
into
repnz
out
inc
imul
mov
adc
cmp
outsl
mov
adc
mov
mov
decl
xor
mov
pop
lcall
mov
subl
pushl
xchg
and
bound
push
add
loope
movsl
das
xchg
sbb
inc
out
jge
leave
xor
jecxz
decl
divl
add
repnz
rcl
push
mov
add
adc
adc
mov
call
ss
popf
ja
clc
addr16
inc
loopne
ret
ljmp
sbb
les
aaa
cltd
les
xor
flds
fwait
mov
hlt
or
and
sbb
push
push
nop
lock
add
add
sbb
mov
dec
loopne
xchg
adc
mov
xchg
push
cli
stos
sub
outsb
pop
and
stos
sub
fnsave
lcall
in
xchg
mov
insb
xchg
int
and
inc
add
adc
ret
and
loopne
scas
sbb
cmc
mov
dec
add
jle
xlat
test
rorl
ja
loop
lcall
int
pop
add
outsb
or
out
xor
sti
clc
sub
insl
ret
jmp
aam
clc
aaa
xor
iret
stos
pop
cld
fsubl
lock
mov
sahf
xor
mov
fwait
sarb
in
mov
mov
xor
ljmp
stc
bound
and
or
mov
ret
sysexit
sbb
pslld
sub
dec
or
sbb
cmp
push
ja
repz
cld
flds
sbb
addr16
add
jmp
mov
or
mov
add
test
dec
xchg
daa
ljmp
jmp
dec
cmc
popa
mov
pop
lds
push
adc
andl
incb
push
inc
test
xchg
test
shr
arpl
xchg
add
sub
mov
sub
mov
sbb
decl
iret
arpl
xchg
movsb
test
imul
adc
dec
mov
incl
movsl
push
mov
ret
xor
rcrl
xchg
outsb
cmpsb
mov
dec
idivl
pop
mov
cmpsb
pop
mov
outsb
mov
push
push
ljmp
sub
sub
push
jmp
sub
mov
jnp
outsb
movsb
lret
int
inc
cli
jnp
outsl
lds
dec
xchg
mov
dec
xor
push
aam
sub
test
mov
ret
cmpsl
scas
push
push
std
push
sub
or
call
jg
xchg
ljmp
add
push
mov
pushf
adc
pop
xorl
loop,pt
pushl
stos
ja
push
stos
pop
fsts
mov
pop
sarl
pop
lea
aaa
push
xor
cmp
sub
pop
inc
and
jle
fcompl
add
sar
ljmp
xchg
cltd
pop
shr
dec
notb
lds
pop
mov
dec
lret
xlat
jmp
ja
repz
xor
sbb
push
iret
cmpsl
cli
jg
jg
cs
mov
jg
movsb
cwtl
mov
bound
sbb
leavew
mov
xchg
dec
pop
jb
jbe
ds
sbb
loope
pop
out
jmp
fdivrs
fildl
in
mov
repz
add
dec
mov
sahf
xchg
xor
fs
ret
inc
sbb
sub
or
sub
adc
adc
dec
and
dec
scas
xchg
or
jmp
bound
lock
xchg
mov
jge
aas
stos
xlat
subb
xchg
ss
cmp
mov
jns
push
xchg
cmpsl
roll
sar
mov
and
xor
loop
scas
jnp
rcrb
pop
fsubrl
mov
adc
xchg
test
or
push
cmc
dec
jo
cli
mov
push
and
jbe
mov
ret
orb
cli
movsl
lods
or
mov
addr16
sub
dec
aaa
pop
xor
nop
pusha
cmp
test
cmp
mov
jns
pusha
add
jo
rorb
fisubrl
or
adc
call
in
ds
sub
xchg
mov
gs
addr16
sub
loope
iret
cmp
repz
add
call
pushl
push
test
in
adc
sub
in
shrb
mov
jmp
add
xchg
mov
inc
mov
in
lcall
fistps
ljmp
jbe
sub
push
rolb
xlat
scas
push
ds
cld
pop
add
in
fdivl
inc
mov
lods
mov
adc
addr16
stc
filds
clc
cltd
std
ds
and
xchg
cld
test
cmp
cmp
jle
mov
lret
add
cmp
adc
jge
inc
sbb
fsubl
inc
add
sub
mov
jecxz
ljmp
andb
aad
sub
dec
xor
call
mov
hlt
mov
mov
or
pop
pop
xchg
xchg
dec
sar
jnp
adc
jmp
and
jmp
pusha
icebp
cmp
movsb
and
out
icebp
out
ficomps
inc
lcall
dec
pop
mov
mov
movsb
popa
dec
cmp
jmp
xchg
lds
fs
xrelease
loopne
insl
pushf
adc
in
lds
insb
cmc
pushl
xchg
in
icebp
cmp
cmp
xchg
xchg
push
or
les
outsl
addb
inc
xchg
pop
movsl
scas
pop
icebp
std
pop
fdivrs
dec
add
bound
or
push
sarl
jae
sar
decl
in
or
jbe
mov
std
fidivrl
push
int3
ss
fidivrl
aad
es
pushl
push
cmp
iret
cmc
cmp
inc
lock
pop
xor
xor
rcl
out
xchg
out
xchg
cmp
xchg
movsb
xchg
mov
movsb
mov
popa
lcall
clc
pusha
or
insl
loope
incl
xchg
jmp
into
cli
outsb
test
ljmp
scas
and
push
push
mov
movsb
dec
arpl
enter
js
jno
adc
push
clc
scas
decl
mov
sub
sahf
xchg
jmp
sti
cmpsl
pop
aaa
xchg
shll
dec
mov
fdivrs
not
xchg
push
clc
test
pop
cmp
subl
loopne
sub
cmpsl
pop
jo
loop
mov
enter
pusha
dec
add
push
pop
sub
mov
lds
jle
call
ret
ljmp
call
sbb
test
decl
cs
push
or
adc
cs
out
repnz
cmpsb
fwait
lcall
jecxz
pushf
mov
test
push
cmc
xor
cltd
xchg
mov
mov
lcall
mov
lahf
lret
cmp
lcall
mov
jg
test
jae
in
into
dec
fmull
mov
scas
jmp
jecxz
jnp
decl
call
xchg
add
loopne
bnd
mov
and
push
sub
call
xchg
js
dec
notl
leave
xor
call
add
sbb
fcmovnbe
js
xchg
adc
mov
inc
xor
out
sarl
cmc
xlat
clc
and
clc
fnstcw
push
ja
imul
popf
cld
push
cmc
xor
dec
clc
ljmp
setnp
sub
inc
bswap
dec
or
test
dec
jg
ljmp
cli
inc
add
push
iret
pop
jbe
sahf
push
fs
or
dec
call
cld
pushf
and
pop
lock
es
cmpsl
push
add
data16
pushl
addr16
sub
icebp
mov
and
xchg
lahf
icebp
adcb
mov
jnp
sbb
jmp
clc
loopne
outsl
lahf
mov
cwtl
xchg
sbb
adc
jg
cwtl
call
sub
loopne
fwait
or
ret
or
mov
ljmp
cli
subl
push
push
dec
and
shlb
pop
jae
xchg
icebp
imul
stos
mov
push
leave
rclb
cld
movsl
mov
dec
push
pop
and
inc
enter
adc
xor
jns
cli
subl
fwait
clc
outsb
dec
iret
cmp
add
jge
jmp
popa
dec
and
inc
stos
int
dec
and
adc
leave
mov
ljmp
cmpl
dec
jb
in
cli
push
push
adc
jns
xchg
pop
inc
xchg
jmp
shrb
push
dec
pop
lock
push
subl
mov
xrelease
jmp
cmpsl
inc
cmp
sar
popa
sub
rorl
mov
loopne
loope
pop
incl
mov
jp
das
mov
mov
mov
fcmovu
lahf
sahf
aaa
cmc
ljmp
pop
mov
outsb
pop
mov
rcrl
xchg
fbstp
and
insl
mov
xchg
test
cmpsb
mov
pop
push
sti
jno
ljmp
mov
pop
xlat
xor
jg
inc
pop
inc
xchg
test
leave
inc
lock
iret
jbe
call
mov
cmp
in
sar
incl
mov
push
inc
mov
cmpsb
mov
jg
idiv
push
adc
or
call
shl
pop
rclb
pop
mov
dec
loope
sub
ljmp
sub
push
adc
sbb
inc
xchg
fldcw
xor
fs
mov
push
xchg
iret
cmpsl
aaa
sar
cmp
aad
mov
or
addr16
pushl
sbb
mov
jbe
pop
mov
mov
jmp
lcall
inc
push
pop
pop
aaa
mov
jl
pushl
mov
leave
dec
pop
push
lahf
pop
adc
or
pop
imul
decl
cwtl
lock
decb
push
adc
jge
subb
push
call
in
xchg
inc
xchg
in
jno
nop
inc
push
mov
xlat
test
xor
jno
mov
sti
mov
pop
dec
adc
or
mov
lock
imul
mov
je
pop
ljmp
add
popa
push
pop
mov
cmp
test
movl
outsl
out
loop
mov
data16
jg
icebp
sahf
hlt
ss
sub
jns
mov
int3
push
lret
cld
imul
push
sub
cwtl
adc
cmp
stos
push
ret
jbe
movsl
mov
ss
dec
push
push
sub
xor
inc
jle
das
loope
cmpb
filds
mov
test
sbb
inc
inc
outsb
dec
xor
loope
xsha1
cmpsb
or
jmp
dec
sub
into
or
sub
js
fsubrl
adc
mov
leave
jp
add
rolb
scas
and
ret
cld
das
dec
es
push
sbb
out
sti
jl
mov
mov
push
testb
mov
dec
and
mov
and
ret
call
lods
lret
xchg
outsb
cmp
sbb
aam
aam
arpl
jo
mov
fidivrl
dec
mov
add
jg
call
inc
jns
cld
inc
xor
into
dec
push
adc
or
mov
repz
scas
sub
cmp
or
arpl
mov
pusha
sbb
and
inc
test
xchg
jmp
sbb
int
movsl
cmp
gs
ljmp
push
iret
in
pop
and
arpl
fwait
jb
movl
shl
in
adc
into
ficomps
cmp
add
mov
fsubr
lcall
ret
movsl
sbb
scas
lcall
dec
in
mov
jb
mov
adc
sub
or
js
fidivs
push
stc
stos
inc
or
iret
xchg
repz
mov
test
mov
imul
cmp
jmp
jno
repz
fsubrs
adc
inc
jae
mov
and
xchg
jo
stc
aas
call
cmp
xchg
arpl
repz
push
pop
ret
es
aas
cmpsl
mov
inc
cld
decl
outsb
pop
pop
ja
inc
mov
das
lret
fs
mov
lds
sarb
enter
gs
xor
push
repnz
arpl
ds
scas
cmovnp
add
or
xchg
inc
data16
sbb
inc
xchg
sub
push
push
fwait
ljmp
push
stc
push
sbb
sbb
jne
mov
push
sbb
ja
mov
sbb
dec
jl
call
sub
jge
cmp
cmc
pop
loopne
out
jmp
int
jmp
mov
stos
xor
hlt
sbbl
mov
lcall
decl
and
jno
mov
push
and
dec
hlt
jmp
imul
xchg
xchg
imul
and
inc
jo
cmp
jge
adc
decl
data16
fildll
xchg
jle
fidivs
adc
add
add
push
push
in
push
in
fs
lcall
inc
and
xchg
xor
xor
jno
add
out
push
enter
push
cld
or
xor
and
jecxz
jg
adc
xchg
nop
jo
mov
or
sarb
or
jno
mov
sbb
mov
hlt
mov
cmp
dec
js
addl
inc
inc
dec
lock
out
icebp
scas
ds
adc
or
fiadds
xor
push
insl
aaa
int3
stos
adc
js
hlt
out
ficoms
jmp
sub
sahf
lods
pop
insl
add
mov
jnp
adc
popf
mov
mov
mov
js
xor
std
push
jge
jecxz
arpl
sbb
sub
test
mov
ljmp
jb
jp
movsb
pop
pop
jae
push
and
mov
mov
xchg
ljmp
push
jo
mov
jne
jns
cmp
mov
xchg
popf
outsl
jmp
adc
std
pop
xchg
movsb
and
pop
outsb
dec
xchg
mov
js
cli
jb
popa
add
cli
aad
adc
cmp
dec
cmpsb
sub
xor
sbb
pop
cmc
dec
mov
cmp
inc
pop
inc
jnp
out
xchg
mov
lods
mov
into
repnz
sahf
mov
ret
jmp
sub
mov
aas
iret
je
sub
add
sub
fstpt
jle
jbe
ret
data16
lcall
cmp
fsubs
push
and
push
outsl
popa
pop
mov
cli
inc
mov
enter
test
mov
pop
fsts
pop
lods
pop
daa
loopne
mov
jg
out
int3
push
inc
arpl
pop
cld
lret
pop
jno
insb
xchg
cwtl
mov
push
jg
ret
clc
push
push
pop
mov
into
in
sbb
pushl
fdivr
js
leave
lods
sete
in
add
nop
push
rorl
mov
es
lcall
pop
int3
sbb
fs
and
jg
repnz
push
mov
ljmp
mov
mov
pop
inc
repz
int3
or
mov
ja
movsl
push
add
decl
or
jle
jg
lret
sub
mov
js
subl
mov
pusha
jge
jmp
das
std
push
shll
cmp
stc
dec
pop
pop
push
ljmp
adc
ja
ljmp
popf
jmp
add
in
xor
ds
jb
rclb
in
lret
or
fstpt
mov
fstps
ret
mov
sbb
lret
mov
ljmp
and
orb
cmp
movsl
rorb
call
loopne
ljmp
push
mov
sub
pop
push
sub
lcall
aas
mov
sbb
pushf
sbb
cmp
sub
push
mov
add
ljmp
decl
mov
ror
jb
aaa
xchg
jno
jle
and
shll
mov
inc
iret
call
test
imul
pop
dec
mov
pusha
pop
mov
lea
shl
stc
or
push
ljmp
das
inc
push
clc
sub
mov
mov
out
mov
call
addb
stos
jno
jl
ror
mov
xchg
inc
inc
stos
adc
lcall
mov
push
lcall
sahf
pusha
loopne
and
scas
dec
std
push
xor
jne
decl
dec
outsl
stos
xor
gs
divl
sub
leave
lea
cmp
xchg
mov
pop
inc
push
hlt
mov
xchg
jmp
jmp
cmpl
lea
popf
xchg
dec
dec
addr16
mov
adc
sbb
fisttps
gs
scas
mov
fnsave
mov
call
outsb
fdivs
inc
or
push
test
sub
or
out
and
sbb
mov
loopne
cmpb
testl
lods
sbb
xchg
lret
pushl
movsb
addr16
fistl
add
es
mov
add
mov
insl
decl
lock
lods
sahf
push
je
mov
jns
loop
jecxz
jmp
std
ljmp
dec
pop
test
insl
stc
imul
insl
movsl
ret
ficoml
inc
sub
dec
orl
pop
lock
insb
loope
cwtl
mov
repnz
rcl
cmc
data16
lcall
push
jo
mov
cmp
rolb
imul
mov
stos
sub
mov
decl
or
sub
stos
pop
ljmp
sar
call
push
add
in
fwait
push
fisubrs
inc
jle
pop
stos
xchg
mov
call
lcall
mov
add
mov
movsl
xchg
repnz
mov
enter
ljmp
sti
add
sbbl
ret
dec
mov
clc
lock
into
xchg
mov
lcall
sub
outsl
fwait
mov
push
es
ret
fcomip
incl
mov
push
mov
jne
mov
ljmp
cmp
lcall
pusha
mov
out
mov
add
and
mov
das
or
push
xchg
lcall
rcll
add
out
inc
int
pop
outsl
icebp
sub
in
cmp
pop
insl
sub
adc
call
pop
movsb
pop
or
insb
and
test
mov
or
jbe
test
add
aam
scas
movl
push
sub
mov
sbb
stos
jg
sub
leave
jmp
sub
push
xchg
roll
xor
mov
sub
mov
ror
jae
jp
xor
dec
loope
call
adc
lods
lock
inc
negb
dec
lahf
cli
cld
lcall
call
mov
push
pop
push
xchg
mov
pop
push
fdivrs
push
iret
adc
decl
loope
repz
dec
push
mov
xchg
cltd
mov
add
sub
clc
cld
lahf
mov
shrb
out
call
lcall
ds
divb
push
sub
in
sbb
pop
xchg
jle
iret
cmp
lds
lcall
in
pop
arpl
jno
or
fucomip
testl
mov
mov
pop
scas
sub
scas
clc
std
pop
mov
jns
mov
iret
pop
inc
xlat
inc
mov
jle
jns
mov
test
dec
inc
xor
jecxz
pushl
push
push
dec
sub
insl
fwait
or
stos
sbb
test
mov
rcll
shlb
xor
cmp
outsl
adc
fwait
adc
pop
xchg
jle
insb
pushl
mov
jb
fcmovnbe
sub
cmp
outsb
in
stc
jmp
and
call
neg
add
mov
mov
pop
cwtl
enter
push
pop
push
pop
sub
icebp
mov
ljmp
xchg
fisubs
rcr
lds
inc
stos
push
and
inc
repz
pushl
inc
cmc
dec
xor
stos
pushf
inc
repnz
lods
sub
adc
mov
test
lret
vhsubps
mov
adc
dec
loopne
dec
sub
sub
lock
or
sbb
sub
incl
movsb
aad
stc
loop
xor
dec
adc
sbb
ljmp
mov
adc
frstor
lcall
icebp
and
lret
inc
clc
decl
or
sub
dec
xchg
pusha
cmp
xlat
int
sbb
push
mov
mov
cmp
xchg
fwait
shll
incl
and
xor
xor
les
xchg
dec
data16
jbe
imul
ficoml
sbb
jg
push
test
inc
notl
push
stc
or
cmp
xchg
imul
xorl
mov
or
mov
je
sbb
pop
fisttpl
decl
out
jnp
idiv
mov
lods
icebp
addl
jb
mov
push
insb
into
or
jle
ss
lds
inc
fwait
pop
mov
push
imul
adcl
xor
sbb
jmp
mov
or
popf
lock
pop
popa
scas
xor
iret
out
or
sbb
ljmp
cmpsl
decb
popf
stos
sbb
mov
movsl
sbb
sbbb
mov
xor
lcall
pushf
cmp
ss
push
jbe
in
xchg
xchg
jge
scas
xor
popa
adc
lahf
incl
cmp
clc
or
notb
rcrb
loope
cli
shl
ret
mov
sub
jmp
shll
jbe
out
loopne
inc
rorb
or
mov
mov
rcl
nop
jecxz
lock
ljmp
xchg
std
mov
fs
aad
lahf
sub
mov
mov
call
adc
push
xor
mov
das
inc
xchg
shl
sar
incl
push
in
lea
lret
inc
push
fists
adc
arpl
sbb
ja
mov
ja
dec
pop
pop
pusha
mov
pushf
ret
lahf
iret
nopl
and
nop
mov
mov
ljmp
jb
sub
addr16
outsb
repnz
hlt
fsubl
xor
cwtl
mov
data16
lcall
mov
or
int
cmpsl
dec
jno
pop
cmp
inc
cli
hlt
sbb
ret
xchg
jge
cmc
out
filds
sub
sub
xor
pushl
mov
jnp
imul
sbb
rcll
mov
out
xchg
mov
add
incl
mov
jecxz
pop
popa
cmp
inc
jbe
sti
mov
or
dec
jl
xchg
mulb
mov
jmp
adc
in
jns
xor
mov
outsl
stos
xchg
or
inc
mov
clc
pop
mov
adc
mov
dec
add
or
or
jg
mov
add
imul
xor
incl
in
sbb
lret
xlat
sbb
aam
lds
in
call
mov
adc
jge
push
fwait
sti
mov
insl
pop
xorb
movl
decl
or
lea
ss
cmp
addb
mov
mov
push
xchg
mov
mov
and
dec
mov
adc
mov
push
cmp
rorl
add
inc
adc
ror
out
frstor
or
mov
ds
mov
xchg
js
xchg
sub
jecxz
out
xchg
adc
divb
clc
push
clc
dec
sarl
ds
repnz
jge
mov
mov
mov
sub
mov
pop
cmp
incl
fwait
add
fs
adc
push
js
aam
stc
mov
movsl
insb
xor
push
cld
sbb
push
sbbl
out
gs
aaa
mov
clc
jmp
cmp
cmp
lea
jb
int3
cmp
jecxz
inc
mov
and
nop
in
mov
subl
cwtl
dec
test
imul
add
pop
call
jo
dec
sahf
mov
mov
mov
call
jecxz
mov
int3
loopne
fdiv
jecxz
test
xor
ret
xor
arpl
sub
fcomip
jmp
and
scas
iret
cmpsb
xlat
inc
inc
clc
or
or
mov
adc
sar
out
xchg
test
jb
sbb
subb
sbb
int
jne
fwait
xor
mov
adc
jp
jo
lcall
push
sbb
cmp
fs
popa
stos
in
mov
add
jmp
or
arpl
scas
or
pop
adc
mov
sub
add
ret
mov
jge
dec
and
jns
aas
or
insl
in
jg
subb
icebp
mov
sbb
into
scas
mov
pop
add
jl
mov
sbb
aaa
test
and
pop
jns
cmpsl
cmc
addr16
jle
mov
fmuls
adc
jnp
ja
insb
ja
gs
jge
movsl
dec
dec
xor
call
test
pusha
mov
sarl
xor
les
insl
inc
les
incl
mov
pop
or
mov
push
int
cwtl
jmp
into
jb
jo
push
or
test
dec
subl
cld
adc
lahf
mov
insl
and
in
data16
mov
shll
jno
movsl
outsl
push
rol
mov
add
push
or
cmp
aad
notb
cmp
mov
test
cmp
mov
dec
cs
decl
fisttpl
scas
movsl
xchg
das
sub
mov
scas
sbb
cmp
lea
clc
push
cli
out
pushf
out
inc
out
decl
flds
rcll
dec
cli
push
and
fdivl
add
mov
push
xchg
insl
pop
adc
das
cli
call
xchg
icebp
dec
pop
adc
xor
pushf
jae
sbb
mov
icebp
mov
push
xor
push
or
hlt
test
mov
and
pop
mov
repnz
insl
or
add
call
cld
add
pop
cmp
sbb
jo
shlb
repnz
stc
adc
imul
clc
cmpb
inc
and
stos
or
pop
bound
subb
out
sbb
jmp
cli
jmp
mov
sbb
mov
mov
testb
pop
dec
push
loope
sahf
cld
enter
lahf
and
inc
or
lcall
loopne
scas
xorb
cmp
test
aam
insb
jp
inc
insl
adc
cli
xchg
mov
or
mov
add
fdivrl
test
testb
inc
js
adc
cld
jo
stos
decl
sbb
stos
inc
and
sti
cmp
xchg
pop
push
xor
insb
es
ljmp
outsb
imul
inc
and
fst
add
fildll
call
cld
mov
sub
sbb
or
cmp
push
push
scas
push
pop
pop
or
jno
fs
fsubs
lcall
call
ljmp
inc
and
sti
aam
jl
lret
mov
incl
push
scas
cmp
rclb
xchg
lret
push
loope
pushl
inc
and
jp
mov
cmpsl
insb
popf
push
scas
int
add
out
cli
xchg
push
pop
or
hlt
jbe
and
fs
leave
nop
pop
push
pop
jmp
jecxz
sti
mov
mov
inc
mov
add
data16
xchg
popf
scas
call
lret
das
dec
fiaddl
dec
rorl
cwtl
jns
push
in
pop
mov
call
test
call
lret
pushf
mov
inc
mov
in
out
add
jae
jne
in
push
xchg
add
call
dec
jmp
les
pop
or
mov
in
dec
xchg
sub
jl
sti
push
mov
mov
jo
pop
hlt
push
in
push
lahf
mov
nop
test
lret
int
addr16
call
jbe
adc
fists
xlat
adc
mov
xor
mov
ja
jle
pop
dec
mov
lods
xchg
dec
cli
mov
ljmp
mov
push
or
add
xor
cmp
cwtl
and
xor
pushl
or
insb
cmc
mov
addr16
cltd
jb
fwait
insb
jmp
mov
add
push
out
inc
lahf
push
add
xchg
push
sbb
sbb
pushf
iret
jbe
shrb
sbb
ljmp
js
or
mov
icebp
inc
dec
scas
testb
adc
push
push
push
xchg
xchg
push
shll
enter
push
pop
push
scas
iret
xor
push
out
nop
mov
jp
shrb
pop
in
out
sbb
or
lods
dec
hlt
fwait
dec
jg
loop
aaa
fistl
hlt
scas
out
lock
cmc
movsl
fwait
imull
xchg
push
jmp
jmp
mov
fwait
jo
rclb
mov
jb
in
roll
push
mov
std
fdiv
ret
vgf2p8mulb
fcoml
test
xchg
mov
call
jle
or
out
stos
add
xchg
ret
inc
jo
lcall
fistpl
mov
es
adcl
insl
dec
scas
fcoms
fbstp
bound
xor
adc
shrl
out
xlat
scas
es
lret
xchg
cmp
mov
adc
inc
push
mov
jg
jmp
mov
repnz
dec
add
data16
call
cmp
inc
lcall
outsb
sbb
rcl
lods
fsts
dec
inc
xorl
lcall
cmp
std
pusha
orl
loop
vpsubusw
in
pop
mov
add
or
inc
lock
shll
or
push
cmc
cmp
insb
sbb
daa
repnz
fisubrl
repz
decl
dec
cmp
and
xor
ret
add
cli
xchg
idivb
shlb
call
jle
lock
out
into
shll
dec
push
dec
rdpmc
cmpsb
stc
leave
and
push
lods
and
push
or
mov
jp
or
jp
xlat
aam
inc
push
out
mov
jmp
fidivs
loope
stc
push
adc
mov
jae
movsl
mov
lea
dec
xchg
or
fldl
and
js
dec
push
rclb
add
sbb
stos
mov
ljmp
pop
push
or
adc
lcall
int3
xor
push
mov
mov
aad
inc
mov
out
jmp
int3
ffreep
test
jne
fs
or
mov
int
push
mov
mov
fbstp
sub
sar
mov
cmp
std
or
popf
lods
mov
mov
call
lret
adc
ret
cli
out
mov
pop
shlb
lock
subl
ret
aaa
mov
xor
fmuls
add
dec
mov
das
adc
popf
fcomps
sahf
data16
iret
xchg
and
dec
mov
decl
mov
jns
ror
adc
jp
aaa
in
daa
adc
and
mov
stos
ljmp
jle
ret
arpl
pop
cmpsl
pusha
and
dec
adc
and
shl
call
add
incl
scas
xchg
inc
and
loope
add
cmp
lods
adcb
ficoms
cmpsb
dec
jnp
hlt
outsl
lods
push
dec
filds
jp
add
cmp
aam
aas
scas
pop
ss
jg
ljmp
jns
stc
cmp
ds
xor
xchg
jmp
sub
incl
scas
mov
xor
dec
mov
inc
push
jmp
test
ljmp
pushf
dec
sub
inc
fs
push
pop
and
fdivrs
jecxz
add
ficomps
pop
sub
or
xchg
xor
incl
pop
mov
dec
pop
add
pop
aas
jbe
pushf
inc
and
pop
cld
into
mov
clc
xor
leave
cwtl
out
sbb
cmpb
mov
sbb
es
dec
aas
outsl
cli
or
outsb
mov
insb
jg
stos
xor
stos
shll
dec
ja
and
inc
repnz
stos
xor
incl
fnstenv
add
mov
xchg
pop
lahf
pop
ljmp
gs
dec
mov
out
shrl
jnp
jmp
fistps
jne
imul
jbe
inc
jno
sub
xchg
bound
lcall
pop
insb
and
decl
dec
hlt
ds
jae
aad
jb
xor
adc
dec
mov
iret
mov
cmpsl
fcomi
into
lea
inc
int3
adc
dec
insb
jbe
xor
mov
mov
out
hlt
outsb
rcl
les
push
lret
lea
inc
mov
mov
sub
or
and
pop
xchg
mov
mov
cmp
adc
and
xchg
inc
imul
and
aam
nop
or
jmp
pop
roll
mov
int3
sbb
dec
ret
cwtl
mov
pop
xchg
mov
inc
mov
std
scas
mov
push
push
pop
pop
cmp
insl
push
xor
xchg
xchg
mov
lock
push
lcall
push
test
sub
dec
or
loopne
mov
sub
xchg
dec
jne
inc
or
cmpsl
insb
mov
cmp
or
das
stos
enter
clc
add
add
call
clc
xchg
jne
popa
jge
data16
bound
and
mov
cmp
hlt
xchg
test
or
jno
aam
and
push
sbb
pushl
je
loope
pop
sbb
pop
cmpsl
cmp
inc
lock
lret
sahf
std
jns
or
out
jns
mov
sti
mov
pop
jecxz
xchg
nop
mov
mov
rorb
sti
insb
or
push
stos
outsb
fwait
lcall
or
mov
mov
jle
incl
in
repnz
lds
jno
cwtl
mov
daa
pop
jg
sar
call
shr
subl
std
add
jp
sar
das
sub
imul
aam
les
jno
jns
icebp
mov
pushl
or
daa
test
and
pop
out
iret
pop
push
mov
cltd
pop
sub
mov
lock
push
lcall
jb
fstl
nop
mov
fldenv
stos
push
arpl
mov
mov
pushl
mov
dec
arpl
jle
xchg
insl
sub
enter
out
mov
es
call
roll
leave
daa
jo
insb
insb
ret
dec
pop
mov
test
jmp
mov
cmc
negl
fnstenv
pushl
mov
aam
fistl
cmp
add
inc
mov
fadds
in
mov
jmp
push
or
fsub
test
cmpsl
pop
mov
mov
call
jmp
pop
movsl
scas
mov
inc
xchg
cmc
imul
test
xchg
sub
sub
xchg
sbb
mov
push
ja
lock
jns
mov
pusha
jecxz
clc
pop
inc
faddl
add
mull
fcoml
aad
jmp
dec
pop
cmp
cmp
xor
aam
inc
jg
and
lret
outsb
and
pop
jg
in
mov
mov
scas
push
sub
cmpsb
and
mov
lcall
or
pop
adc
push
mov
push
aad
mov
fmul
sub
andb
cmc
jg
cli
pop
mov
aaa
rclb
pop
cli
mov
add
ljmp
lret
outsl
xchg
mov
hlt
xor
frstor
mov
and
call
in
daa
cmpsb
adc
xor
outsb
jmp
mov
mov
mov
mov
cmp
pushf
push
sti
loop
cli
fisubrs
cltd
lahf
sbbb
ljmp
lods
std
icebp
and
pop
or
pop
adc
and
jne
mov
fstpl
shl
inc
push
adc
aaa
std
inc
rorl
jp
push
mov
push
mov
dec
int
in
dec
sahf
and
loopne
test
sbb
mov
mov
scas
and
xor
mov
lcall
add
das
pop
adc
xor
mov
out
into
icebp
sbb
adc
mov
and
outsb
std
cld
pop
mov
or
incl
mov
dec
sub
jg
leave
cmpsl
mov
lret
inc
jg
outsb
pop
xor
ljmp
test
lds
pop
mov
push
loopne
ud0
outsl
push
push
sub
mov
arpl
push
jne
lock
stos
lock
mov
mov
push
pop
stc
xor
xchg
pushf
fidivs
fs
stos
aad
dec
dec
jmp
ret
pop
inc
pop
dec
fwait
mov
test
incl
shlb
popf
xor
je
mov
lds
or
lock
imul
in
cwtl
ss
pushl
loope
pop
test
in
decb
push
add
sbb
adc
clc
jp
test
gs
and
out
enter
dec
addr16
push
or
and
jmp
dec
popa
push
pop
int
mov
mov
and
cmp
lahf
leave
pop
js
outsl
test
fcomip
cmp
sahf
lea
mov
pop
dec
fsub
lods
imul
jge
adc
int3
xchg
pop
fstps
mov
dec
daa
cmp
pusha
push
mov
xchg
loop
xlat
lock
push
and
mov
mov
aaa
mov
mov
testl
xor
add
aam
loop
or
ljmp
fwait
xchg
lods
mov
fidivl
fidivs
popf
lods
xchg
int
mov
cwtl
cmp
mov
sbb
push
cld
mov
sbb
cmp
push
insb
mov
lcall
pop
in
jp
dec
clc
sbb
mov
aas
sbb
ljmp
push
leave
test
sub
push
fdivr
int3
or
mov
jmp
int3
int3
xor
or
dec
adc
xchg
pusha
mov
ss
insb
adc
pusha
lretw
rcrb
or
jg
jecxz
out
lret
cmpsl
mov
add
in
and
sbb
xor
inc
sbb
imul
movsl
imul
mov
xchg
inc
cld
scas
push
or
dec
pop
or
shr
in
clc
mov
mov
dec
push
sbb
incb
pop
mov
popa
push
pop
lea
mov
sub
pop
adc
int3
lods
push
and
lahf
movsl
mov
loope
data16
stos
mov
leave
mov
push
ret
stos
mov
sub
sub
mov
aaa
xchg
ss
xchg
das
jl
mov
push
xchg
cs
ja
ret
popf
inc
jne
mov
xchg
pop
sar
fildll
adc
sub
pop
cmp
iret
fidivs
aaa
add
push
sar
jbe
inc
popa
roll
repnz
ss
jo
imul
lock
ljmp
andl
adc
sub
lahf
fisubrs
mov
xorl
dec
call
arpl
fs
inc
push
mov
inc
lds
jmp
add
dec
mov
or
dec
dec
adc
sar
ljmp
and
sub
stc
xchg
jecxz
stos
xor
mov
sbb
pop
test
pushf
mov
decl
scas
cmp
jmp
das
add
in
in
test
repnz
adc
inc
jp
pop
imul
cmp
jo
jecxz
pop
lahf
inc
jmp
and
shll
in
scas
pop
into
shrl
cmp
adc
mov
jmp
orb
pop
es
push
cmp
sti
pop
dec
fstpt
cmp
incl
push
nop
xchg
rcll
test
ds
mov
xchg
cmp
jae
and
dec
imul
decl
xlat
repnz
or
pop
ficoml
jnp
fisubl
dec
and
ffree
out
xor
mov
fildl
rorb
push
push
jmp
jbe
das
std
mov
add
sub
out
loopne
cld
and
mov
dec
sub
mov
pop
nop
or
icebp
add
incl
mov
ja
pop
sub
inc
adc
sub
repnz
inc
repnz
or
sbb
mov
call
and
cmp
cs
ja
mov
pop
mov
and
cld
mov
out
lods
out
jmp
fwait
mov
jg
mov
repz
sbb
outsl
jp
inc
jle
rcrb
imulb
js
incl
loop
lahf
xlat
aas
adc
and
mov
aas
inc
je
lret
pushf
outsl
clc
call
cmp
popf
andl
mov
imul
lcall
add
jbe
cmp
and
sub
lcall
lock
decl
cmp
cmp
subb
xchg
stc
nop
rclb
incl
lds
dec
enter
sbb
pop
js
xchg
ja
call
sub
test
or
imulb
cs
inc
ret
aad
leave
js
lcall
adc
jo
cmp
add
in
clc
in
divb
iret
inc
pop
push
pop
dec
mov
cmp
dec
xchg
loop
mov
iret
adc
incl
ja
xor
repz
mov
dec
xchg
test
inc
inc
and
lea
mov
fcmovbe
jecxz
dec
pop
insl
test
pop
xor
jmp
mov
sbb
inc
mov
or
repz
dec
out
fidivrl
add
in
movsl
icebp
mov
jb
jecxz
pop
mov
jp
mov
and
pop
lcall
idivb
xor
test
cmp
push
fldt
sbb
loopne
push
nop
push
sahf
ljmp
call
xchg
daa
in
jne
insl
mov
push
xchg
xchg
loopne
xchg
xchg
ficomps
pushl
inc
pusha
cltd
imul
loopne
cld
inc
js
fsubr
rcrb
xchg
imul
outsb
lcall
push
icebp
icebp
jl
add
sahf
or
stos
sbbb
cmp
call
or
fcoml
xchg
cmp
roll
mov
push
test
ljmp
mov
sbb
add
cmpb
xchg
testl
jmp
pop
dec
and
jg
out
jmp
mov
fs
aam
hlt
push
clc
jae
cltd
test
aaa
push
sub
pushl
dec
push
jno
scas
sbb
fwait
hlt
mov
arpl
or
data16
dec
rcrb
aas
int3
test
rcrb
cmpsb
mov
push
cmp
ret
jecxz
fstpt
push
ljmp
push
imul
mov
ss
add
ljmp
fildl
mov
pushl
sub
sahf
xchg
push
int
call
outsl
mov
adc
inc
mov
incl
jae
jl
pop
bound
stc
sbb
push
dec
in
mov
leave
pusha
or
leave
sbb
mov
jge
cmp
jmp
inc
insb
fldt
mov
ja
mov
adc
div
push
es
enter
pop
mov
pop
ficoms
in
xchg
je
pop
and
push
test
xor
mov
addb
lock
ljmp
xchg
lahf
jae
ja
fildll
mov
das
fs
scas
test
add
decb
mov
aas
jecxz
std
inc
aad
shld
jne
push
subb
cmp
andb
in
jmp
and
ret
mov
push
cmp
jg
popa
jl
mov
mov
mov
insl
inc
mov
sbb
aaa
das
pop
sub
and
pushf
sbb
es
push
jmp
dec
outsl
sub
rcr
adc
cli
mov
xor
test
loopne
jmp
xor
loop
aad
fistpll
test
scas
shr
popf
std
daa
std
cmpsb
push
inc
mov
stos
sbb
in
mov
or
les
fistpl
sbb
or
mov
fcomip
stos
push
push
xor
dec
jno
inc
cmp
pop
imul
mov
incl
xchg
clc
push
fstps
leave
mov
mov
in
fst
icebp
fmuls
lds
repnz
shlb
cli
mov
in
movsb
lods
jno
xor
fucomi
out
push
and
mov
pop
mov
sub
fsubl
cmpsl
ret
mov
incl
iret
cli
cmp
aaa
push
call
jle
in
and
and
jle
mov
cmc
pushl
idivl
jmp
bound
gs
dec
adc
into
mov
call
add
xchg
outsb
push
icebp
adc
andb
ret
pushf
mov
xchg
jb
mov
test
in
bound
adcb
cs
das
push
mov
enter
call
cmp
sbb
fcmovne
and
inc
mov
sbb
dec
adc
arpl
lds
addr16
fwait
clc
mov
dec
ds
push
stos
jae
dec
mov
in
cmp
jo
imul
and
adc
mov
mov
scas
xor
incb
fwait
adc
ret
lcall
push
std
jecxz,pn
mov
cmp
add
push
fs
js
fisttps
pop
imull
dec
pop
mov
lock
jecxz
cmp
enter
hlt
imul
mov
sbb
xor
ljmp
fldt
xor
imul
push
mov
insb
ds
pop
iret
ja
stc
ds
je
imul
inc
rcrb
mov
sbb
insb
insl
out
push
ds
daa
push
das
mov
repnz
ljmp
shrb
pop
or
fimuls
sbb
aad
clc
adc
push
add
jecxz
dec
cli
shlb
pop
jo
sbb
xchg
movsb
mov
cmp
scas
gs
das
dec
movsl
and
pop
cli
push
mov
or
push
lcall
jp
and
mov
push
test
das
shrb
add
stc
sub
inc
jbe,pn
sbb
test
xor
call
sbb
cli
lock
ret
cli
inc
xor
int
repz
sahf
sub
pop
adc
js
dec
fdivrl
out
lds
push
nop
sbb
and
pop
scas
clc
mov
ljmp
dec
in
and
imul
pushf
push
lret
mov
lret
fstp
cmp
loop
xor
jb
mov
incb
push
cmp
lcall
roll
cmpsb
fdivl
add
mov
stc
adc
fcomip
jg
out
ja
xor
inc
inc
adc
and
mov
jb
fcomp
lret
call
rcll
mov
adc
call
out
push
xor
aad
and
xchg
test
clc
test
dec
mov
add
mov
mov
popa
dec
out
cli
mov
add
sub
cltd
mov
decl
test
lea
and
xchg
jmp
adc
decl
leave
adc
dec
cmpsl
jo
mov
pop
jnp
push
orl
pusha
andb
popf
push
xchg
scas
and
loope
jle
ljmp
push
adc
cmp
xchg
test
mov
or
cld
adc
cmpsl
adc
seto
incl
lret
sub
dec
mov
imul
mov
pop
std
xchg
lcall
incl
xchg
fstsw
les
rcrl
inc
xchg
in
add
gs
incl
push
mov
pop
dec
xchg
rorb
fs
decl
movups
inc
jge
ljmp
xlat
jg
mul
fcom
add
dec
cmp
fsqrt
out
adc
imul
aad
pop
sub
mov
aam
and
bound
clc
pushf
call
add
pop
fldl
stos
ret
mov
imulb
repz
cmpsb
not
aas
xor
jb
cmp
xlat
incl
arpl
dec
or
jne
nop
rcr
ds
and
loope
add
mov
sub
or
xchg
or
sub
decl
adc
push
or
testl
stos
lea
fsubp
add
clc
pushl
xchg
in
out
test
jl
daa
fs
mov
push
jae
jmp
ficoms
in
pop
subl
icebp
lcall
mov
subb
xchg
push
push
aad
sub
icebp
pop
mov
incl
add
leave
dec
push
je
jbe
jg
jmp
leave
fimuls
mov
mov
cli
subb
push
pop
js
addr16
xchg
lret
add
mov
data16
add
lea
repnz
pop
inc
decl
inc
jge
xchg
out
jo
dec
xchg
mov
mov
add
aad
nop
dec
lcall
and
cli
fwait
and
mov
les
mov
adc
pop
and
js
cmp
insl
jge
into
inc
sub
cmp
in
mov
xchg
cmc
inc
and
insb
icebp
std
clc
sbb
aas
and
pusha
sub
fidivrl
dec
mov
loope
jge
pushl
mov
fdivrl
lds
bound
adc
push
adc
in
lods
jno
roll
pop
test
push
lods
aaa
push
imul
pop
lea
mov
pop
or
ss
lcall
or
cmp
pop
hlt
xchg
enter
pop
cld
ljmp
inc
aam
cmp
dec
mov
inc
stc
add
stos
pop
cmpsb
in
mov
jbe
push
and
decl
adc
sub
jno
add
stos
pop
push
jg
test
inc
cwtl
in
mov
jle
stos
loop
clc
test
decl
sbb
jg
test
lret
jnp
xchg
mov
stc
sarb
fwait
shl
jp
mov
test
push
or
insb
add
int
sub
or
cmp
jg
mull
std
aas
xchg
in
mov
imul
dec
shrb
adc
and
mov
add
xchg
push
push
mov
test
fcomip
fcmovnbe
mov
int
push
nop
and
imul
xor
adc
in
loopne
out
cli
lods
sub
scas
dec
jbe
ljmp
outsl
mov
adc
pop
aaa
mov
or
js
pop
jl
sbb
fistl
std
mov
repnz
inc
sahf
inc
dec
repz
in
cs
rcrl
cmc
mov
call
or
jne
pushf
out
into
and
sti
test
and
push
and
push
sub
js
fbld
loope
lods
loope
jno
repz
aaa
adc
in
cmp
lcall
ret
mov
adc
imul
and
das
dec
sub
or
push
jno
cmp
lds
mov
mov
sbb
hlt
out
sub
je
in
cwtl
leave
es
jmp
jnp
icebp
adc
mov
ffree
daa
hlt
cmp
sub
rcr
das
mov
repnz
pop
mov
sbb
mov
mov
js
sbb
dec
out
outsl
cli
mov
and
outsb
jge
add
test
fcomip
call
imul
dec
loopne
sub
dec
xor
cld
cmc
arpl
mov
xchg
into
mov
data16
ds
decl
mov
xchg
in
mulb
sbb
xchg
inc
lods
dec
stc
or
inc
decl
or
sahf
shl
addb
pop
pop
or
je
mov
cmp
and
inc
xchg
aam
mov
mov
fstps
pop
enter
pop
xor
es
std
frstor
movb
fwait
xchg
in
leave
jbe
push
call
sub
inc
in
pop
aam
lret
call
xchg
xlat
int
mov
inc
js
enter
mov
pop
aam
pop
outsl
call
cmp
mov
rol
mov
add
mov
sub
and
pop
loop
mov
ljmp
push
mov
xchg
aad
or
jmp
inc
or
ljmp
xor
aaa
stc
jle
int
cli
or
test
adc
pop
out
fstl
movzwl
lcall
push
cmpsb
daa
push
push
adc
jp
es
pop
push
jns
sar
push
pop
loop
es
mov
adc
fs
aad
shll
sub
test
jl
insl
cld
xchg
stos
xlat
or
xchg
inc
push
sbb
out
pop
mov
pop
pop
test
add
mov
ja
fs
int3
and
mov
lock
jp
cwtl
cmp
decl
outsb
ljmp
paddq
loopne
jbe
nop
and
fnsave
jno
xchg
lret
das
shrb
xor
imul
into
shrb
push
fmuls
fisubs
xor
push
imul
incl
call
jge
or
popa
aas
push
ret
lods
mov
ror
push
jp
dec
push
aam
dec
outsl
out
sub
in
add
fs
dec
repnz
and
mov
insb
pop
jmp
mov
pop
or
das
nop
aad
mov
xor
sub
je
js
andb
cmpsb
add
xchg
jo
ret
lcall
mov
incl
les
push
repnz
fwait
out
fcoms
dec
insl
push
cld
push
nop
test
or
test
ret
sbbl
adc
ds
xor
rcrb
fstpl
cmp
cmp
push
xchg
and
sbb
pushf
fldlg2
jl
add
jns
popf
xchg
ljmp
add
xchg
xor
add
pcmpgtw
lret
mov
out
push
dec
insl
fs
lret
inc
aaa
xchg
das
clc
jmp
repnz
cli
mov
sar
movsb
test
adc
jmp
pop
dec
sbb
and
adc
xchg
push
icebp
mov
jle
ficoms
hlt
mov
sti
lcall
sbb
mov
pop
push
outsb
cmp
adc
mov
icebp
stos
mov
arpl
fcompl
jl
mov
jg
pop
cmp
testb
pusha
pop
xchg
xor
xchg
mov
ret
cmc
das
mov
pushl
sti
fidivrs
scas
lods
cmp
out
pop
aas
es
add
fimull
sub
in
pop
mov
push
mov
mov
int3
sti
mov
lahf
mov
out
add
jbe
bound
lret
popa
leave
dec
dec
add
js
dec
pop
push
pop
imulb
xchg
stos
loop
push
cmp
sub
add
decl
cli
mov
adc
adc
cmpsb
das
sub
cmp
int3
inc
lret
repz
mov
pop
push
mov
push
dec
out
ficompl
incl
rcl
rcrb
xorl
jg
cli
jmp
xor
ljmp
fs
pop
mov
icebp
inc
xchg
negb
sbbb
insb
dec
mov
push
test
call
data16
out
insl
sbb
push
nop
push
sub
test
mov
sub
xor
out
jb
ljmp
mov
or
jmp
fnclex
push
jo
xchg
dec
mov
pop
sub
mov
lock
jle
cmpl
shl
fadd
stos
mov
imull
decl
pushf
mov
and
je
mov
enter
ds
mov
lcall
and
flds
or
adc
mov
ret
jne
push
lods
xchg
nop
jmp
clc
mov
add
out
cs
mov
leave
lret
inc
and
xlat
sbb
sbb
clc
sub
popa
cld
jg
mov
lods
xchg
mov
lcall
mov
xchg
jmp
clc
adc
out
iret
inc
mov
adc
jmp
jmp
rcll
in
xor
pop
movsb
arpl
push
test
pop
inc
hlt
outsb
jbe
mov
mov
dec
xchg
mov
push
pop
pop
mov
mov
cmpsb
mov
push
scas
mov
lea
sub
adc
cmc
jge,pt
sub
push
inc
mov
scas
inc
push
push
cwtl
aad
cmp
sbb
mov
jp
sub
and
test
imul
jg
imul
pop
pand
sub
push
insb
ret
jecxz
or
outsb
adc
clc
dec
pop
cmp
rclb
push
sub
push
mov
dec
mov
das
pop
xlat
vcomiss
incl
jmp
loop
xor
into
rolb
mov
jo
aam
fcomip
and
shlb
mov
fnstsw
inc
dec
and
cmpsl
mov
jecxz
jmp
jnp
sbb
test
sbb
imul
xchg
enter
or
call
xorl
clc
in
ljmp
shl
sub
xchg
pop
stos
stos
jp
imul
adc
mov
push
and
loopne
or
xor
jmp
adcl
clc
pushl
call
in
jmp
stc
and
sbb
data16
int
push
jne
inc
mov
mov
mov
push
cmp
aad
push
and
cwtd
adc
mov
jg
jmp
mov
xchg
and
xor
sub
addr16
insb
ss
pop
xchg
and
sti
decl
enter
push
mov
push
sarb
add
fdivrs
push
mov
scas
ds
jg
adc
mov
in
je
call
pop
mov
icebp
jns
ds
in
xlat
and
mov
jbe
push
fisubrl
mov
into
call
fisubrs
and
fbld
cmpsb
inc
mov
out
cmp
imull
sbb
xor
or
push
insb
lret
sub
mov
ss
cmp
mov
incl
dec
pop
xchg
push
pop
data16
adc
mov
jne
xchg
imul
mov
call
jle
mov
test
aam
push
ffree
xor
mov
xchg
sbb
push
int3
inc
xchg
cmp
and
lcall
inc
or
lahf
cs
push
test
leave
cmpsb
outsl
lahf
or
mov
movsl
outsb
pushl
and
in
mov
lcall
test
testl
pushf
lahf
repnz
call
outsb
lods
icebp
push
gs
lock
pushf
scas
adc
out
sar
rol
pop
mov
ss
ljmp
or
std
inc
jnp
in
inc
popa
jb
js
movsb
xchg
mov
add
mov
cld
or
cmc
aas
lock
sbb
lcall
jb
not
lret
mov
inc
ja
xchg
xor
mov
lods
mov
pushl
jmp
xor
test
xor
inc
aas
xor
jecxz
sub
jbe
xor
out
clc
incb
lret
bound
das
jle
mov
lcall
call
dec
ljmp
push
mov
sub
int
jge
fcompl
cmp
into
pop
push
lods
cmp
pop
nop
int3
outsb
push
not
imulb
push
cld
jg
aam
and
mov
cmp
lahf
jne
or
cmp
xor
push
ss
call
clc
loope
fsts
adc
lcall
frstor
call
sbb
repz
pop
aad
movsl
jle
sbb
in
pop
out
cmp
jb
sar
cli
insb
in
mov
cmp
pop
mov
call
mov
pop
sbb
inc
loopne
ja
push
cmp
les
mov
cwtl
ljmp
pop
int3
dec
mov
clc
inc
push
fs
jge
js
jle
inc
imul
scas
call
fnstsw
lret
inc
mov
pop
int
lcall
push
pop
jmp
xor
jno
jmp
inc
pop
fisubrl
xchg
loopne
ss
inc
add
icebp
cltd
push
insl
sub
fcos
pushl
cmc
cs
cwtl
subl
mov
ret
pop
les
std
mov
jb
scas
dec
and
mov
popa
sub
subl
das
clc
inc
sbb
ja
popa
pop
mov
push
scas
or
pop
lret
fstps
lret
and
hlt
cmp
mov
jb
call
bound
stos
add
popf
sbb
or
push
fwait
test
mov
pop
push
mov
lret
outsb
dec
dec
cs
sbb
mov
fs
call
dec
enter
xchg
push
dec
bound
addb
mov
jecxz
push
test
jecxz
hlt
mov
incl
mov
dec
lock
lret
nop
ljmp
add
cmc
dec
cli
adc
fists
push
push
roll
sub
sbb
popa
mov
adc
pop
sub
test
jns
jecxz,pn
decl
pop
sbb
add
mulb
push
repnz
ss
das
sub
add
xor
sbb
mov
fadds
lret
jnp
std
outsl
repnz
scas
sbbb
mov
les
xchg
or
test
daa
mov
ljmp
in
pop
inc
or
jge
jns
data16
insb
out
sbb
daa
xor
jg
nop
int3
pop
bound
mov
cli
shrb
jge
push
mov
pop
icebp
cmp
xor
sbb
xor
pusha
je
mov
stc
leave
fildl
mov
je
cwtl
dec
jp
ja
ror
mov
les
push
dec
repnz
icebp
shlb
xchg
movl
pop
pop
push
mov
adc
wbinvd
dec
cld
mov
aad
jmp
fmull
out
cld
gs
lcall
ret
sub
sbb
sbb
leave
rcrb
and
sahf
or
cld
fadds
je
std
cmp
push
std
xchg
cmp
xchg
sti
icebp
lock
sub
mov
inc
or
push
push
mov
xchg
mov
sbb
test
pop
aas
sbb
fs
jp
gs
dec
insl
ljmp
call
dec
mov
mov
insb
jnp
loope
and
pop
aas
ljmp
fstl
sub
jb
test
push
pop
outsl
xchg
dec
dec
daa
lock
mov
imul
lds
add
data16
decl
test
repz
imul
mov
lock
jbe
cmp
sar
decl
jge
and
jle
insl
lds
out
xchg
push
push
aaa
sub
pop
addr16
jg
jbe
push
ffree
dec
divl
cltd
test
mov
call
lock
jg
push
das
loope
xchg
xor
hlt
adc
pop
popa
mov
xchg
cmpsl
aas
out
test
xor
imul
test
arpl
dec
mov
dec
aad
mov
mov
fwait
xchg
cmp
push
insl
cmp
aam
or
roll
das
sub
inc
inc
clc
decb
sbb
pop
adc
aad
call
and
mov
sub
test
jo
mov
aad
fbld
cltd
and
jmp
adc
ret
outsl
lcall
lcall
push
xchg
aad
int3
dec
sbb
xchg
roll
das
pushf
and
jae
jg
push
fisubrs
call
rorb
in
in
iret
cli
push
push
push
and
in
jle
test
lods
aaa
mov
incl
add
mov
mov
xlat
scas
cli
incl
stc
in
shlb
push
lcall
inc
cmpsb
ja
ficomps
push
ret
imul
out
scas
pop
add
sbbl
and
xchg
jns
pop
test
or
pushl
imul
in
movsb
pop
inc
nop
shll
loopne
xchg
in
jbe
jne
incl
jecxz
mov
xchg
loope
dec
movsl
fimull
xor
mov
imul
shll
cmp
sti
insb
lock
push
into
sbb
sub
mov
scas
push
push
aad
jl
sbb
pushl
or
jmp
sahf
jnp
dec
or
sub
or
in
int
and
cld
in
out
cmp
mov
test
jmp
xchg
cmpl
jne
inc
arpl
call
sub
push
shl
pusha
ret
mov
nop
push
add
subl
rclb
inc
dec
or
push
push
pop
popf
decl
lock
mov
pop
xor
imul
decl
lock
mov
or
inc
cmp
pop
movsb
jl
jecxz
in
fistpll
adc
div
pop
sbb
mov
or
push
dec
lods
inc
cld
push
cmp
dec
cmp
cmp
enter
scas
aad
pop
lcall
out
sti
cmpsb
fdivr
decl
push
xchg
push
mov
cmp
and
jae
cmp
arpl
push
cmpsl
stc
je
xchg
cmp
xchg
lahf
fcmovb
dec
stos
repz
clc
ljmp
out
jo
lock
push
test
xchg
cmp
mov
jno
inc
lcall
dec
pop
lods
sarl
push
inc
or
in
mov
or
cmp
mov
lea
cmpsl
dec
sub
lret
movsb
cmp
insb
sbb
xor
fcomip
call
or
cld
mov
adc
mov
xchg
dec
cwtl
and
outsl
mov
jo
push
ljmp
inc
je
adc
mov
stos
sarb
push
fcomps
inc
mov
ljmp
sub
or
push
sbb
or
ret
xor
jne
sar
call
inc
lods
pop
bnd
outsb
dec
mov
and
jmp
sahf
loop
nop
sar
imul
push
push
pop
xacquire
inc
loop
or
mov
jnp
jle
sub
ret
js
push
dec
outsb
cli
mov
dec
pop
xor
add
xchg
push
repnz
icebp
mov
shll
incl
add
jecxz
lods
xlat
jnp
fs
jbe
push
testl
pop
orb
decl
jae
mov
mov
adc
fistps
xor
adc
fbld
lcall
mov
xlat
scas
inc
lahf
pop
movsb
ficomps
dec
aam
scas
nop
test
test
out
scas
test
jnp
cmp
adc
mov
roll
cmp
fidivrs
push
pop
mov
call
dec
ljmp
pushl
push
je
jbe
xor
jns
cld
fwait
inc
add
jg
mov
in
sub
sub
in
push
add
imul
pop
xchg
fcomi
push
fs
jo
fbld
out
ret
xlat
call
jg
enter
mov
push
out
inc
pop
out
in
call
mov
mov
mov
or
mov
movsl
dec
daa
out
jae
and
mov
stos
mov
int
popf
sti
xor
sbb
jae
jmp
decb
sbb
nop
lret
inc
stos
jg
add
insl
scas
std
and
lods
push
call
cmp
test
dec
jl
pop
fsubrs
insb
clc
enter
in
mov
sub
inc
les
or
roll
js
outsb
jecxz
dec
js
es
int
test
push
pop
cmc
test
add
nop
sbb
pop
repnz
add
jp
and
lods
push
sub
adc
inc
cmp
ljmp
incl
inc
mov
mov
clc
int3
mov
push
or
cli
out
mov
bswap
nop
out
out
cmp
dec
ret
inc
in
cmp
jo
cmpsl
gs
mov
cmp
mov
into
mov
stc
icebp
dec
clc
jmp
dec
cmpsb
push
movsb
loop
fldenv
in
xor
prefetch
mov
sbb
call
mov
or
popf
mov
sbb
mov
xchg
dec
sbb
jl
mov
iret
add
ret
push
cmp
mov
jne
mov
test
fimull
push
mov
jbe
icebp
bound
leave
sbb
movsl
aaa
pushf
jmp
subl
mov
add
shll
cld
decl
xchg
stc
fs
lcall
jne
adc
inc
jo
loop
shll
icebp
ljmp
iret
sbb
and
dec
add
mov
setne
ja
fstl
aad
insb
int3
add
mov
cli
decl
bound
fistpll
sub
insb
adc
pop
xchg
icebp
xor
stc
or
leave
xchg
bound
pop
ljmp
adc
jecxz
lahf
add
sbb
sub
adc
mov
dec
sub
cmp
or
sti
cltd
ljmp
cmpsl
pop
jmp
mull
repz
decl
bswap
jle
or
pop
pop
insl
dec
sahf
lea
pop
adc
mov
test
lcall
shlb
or
cmp
cmp
add
jmp
imul
insb
je
gs
not
and
dec
sbb
cmp
lock
mov
sti
sti
sar
scas
clc
sbb
ss
jb
aad
mov
lahf
cmp
push
jae
cmpsb
test
add
rcll
jp
pop
cs
xchg
fdivs
mov
sti
jle
sti
push
xor
add
xor
test
jg
out
arpl
sub
dec
aaa
sbb
nop
sub
and
mov
ret
inc
sti
jne
jmp
push
scas
sbb
or
sub
and
mov
add
fimull
mov
xchg
clc
pushl
gs
inc
mov
lock
stc
mov
xchg
repz
data16
into
test
shl
mov
or
ljmp
push
test
mov
enter
pop
mov
inc
jle
dec
fs
out
sbb
insl
dec
inc
in
mov
cmp
addr16
pop
mov
add
lret
sub
rcll
cwtl
nop
filds
mov
cli
in
fmull
pop
outsl
test
gs
nop
clc
jno
incl
cld
fldenv
call
int
mov
mov
andb
pushl
sbb
ja
pop
mov
jae
mov
stos
dec
pop
inc
jmp
jg
in
out
jle
jmp
and
mov
xchg
jl
push
imul
push
sub
sbb
pop
jecxz
aas
sub
pusha
inc
fwait
movsb
cli
in
jge
and
mov
pushf
pop
push
call
sub
in
and
div
lds
outsl
push
repz
aam
or
inc
dec
xor
xchg
pop
aad
lea
cmp
decl
cmp
hlt
lds
mov
scas
cmp
lret
leave
gs
test
pop
sbb
inc
js
inc
in
iret
sub
imul
pushl
inc
fmul
mov
mov
das
test
bnd
notb
dec
fnstenv
fnstcw
lods
ss
fcomip
mov
sti
push
sahf
inc
xchg
push
hlt
jne
ficoml
sub
imul
mov
bound
test
xchg
mov
shrb
rcll
pop
stos
xchg
xchg
inc
insb
push
sbb
xor
incl
add
jbe
popf
cmp
imul
repz
addr16
incl
jne
loop
cmp
mov
jno
into
fimull
aam
ljmp
pushl
out
jne
mov
jp
and
std
pop
icebp
ret
jo
lret
mov
cmpsb
jo
xlat
pushl
xor
pop
js
dec
loop
mov
fiadds
push
andb
and
sub
shll
incl
pop
sub
sbb
mov
sti
test
loop
ljmp
stc
std
cmp
xor
jmp
jae
push
sbb
cmpl
xchg
and
es
push
xchg
sti
add
mov
xor
jle
and
out
fcomps
daa
add
and
repz
rcll
fdivrp
incl
cmp
sub
cmc
push
and
lock
shlb
dec
cmpsb
push
hlt
das
add
inc
hlt
outsl
es
adc
fstpl
cld
ljmp
pop
lret
rcrb
inc
push
cmp
fidivrs
sub
decl
sub
cmp
cli
adc
inc
xlat
movl
js
imul
stos
jp
mov
or
in
jge
imul
incl
dec
push
mov
lret
dec
sub
jae
clc
mov
call
pop
push
out
inc
mov
push
dec
and
or
sbb
sbb
insb
stos
and
and
dec
lahf
sbb
div
dec
dec
jecxz
pop
divb
sub
mov
sbb
decl
nop
cmpl
loopne
cmp
loopne
push
stos
call
decl
incb
outsb
jl
cli
mov
iret
and
cs
dec
stc
fsubrs
mov
push
adc
jb
adc
xor
cmp
mov
jmp
mov
push
inc
xchg
xchg
popf
hlt
xlat
mov
je
leave
js
and
inc
popa
xor
push
daa
outsb
jmp
cld
clc
lods
sar
stc
ret
hlt
lods
enter
push
fidivrs
push
scas
cmpsl
fnstenv
enter
push
pop
leave
in
incl
jecxz
lods
and
stc
movsb
push
adc
imul
jmp
lret
pop
mov
cmpsb
sti
aaa
mulb
inc
jnp
dec
sbb
stos
out
xor
in
jp
pop
jo
push
inc
inc
cld
incl
std
ret
mov
sbb
hlt
mov
cwtl
popa
add
cs
cli
fwait
xor
call
loop
xchg
push
mov
pop
test
jne
push
int3
xchg
cmc
xchg
push
adc
or
mov
jne
sahf
cmp
inc
or
movsb
aam
mov
cmp
mov
lret
int
out
jmp
cmp
aam
push
shrb
dec
and
push
clc
dec
inc
hlt
inc
fmull
push
iret
fwait
add
cmc
adc
sti
scas
add
mov
incl
es
pop
nop
push
int3
and
cmp
call
fidivs
lds
push
bound
push
adc
sti
lahf
xchg
adc
cmp
mov
pop
mov
aaa
lret
sub
jmp
jle
mov
cmp
cmp
mov
addr16
jnp
mov
jg
shr
cmpsb
jmp
push
ljmp
xchg
pop
push
pop
jmp
lret
add
sbb
push
xor
repz
icebp
shlb
js
ret
cld
adc
cmp
bnd
adc
cltd
sub
xor
xchg
frstpm(287
orl
and
jmp
and
sub
movsl
orb
in
jb
mov
cmc
imul
inc
sti
xchg
push
mov
mov
mov
shll
lret
cmp
cltd
rorb
xchg
ja
shrb
movsl
lcall
sub
cmp
mov
xchg
das
add
gs
lods
pop
testl
dec
inc
ljmp
jbe
mov
add
test
in
adc
outsb
lret
mov
jae
dec
shll
repz
mov
adc
js
aas
das
into
pop
lock
enter
ret
inc
gs
inc
incl
mov
mov
loopne
jg
jp
inc
xlat
andl
incl
mov
mov
xor
shr
popa
repz
push
mov
fbld
mov
or
xchg
insb
test
jecxz
pop
inc
pop
jge
or
call
mov
jb
mov
sub
cmp
or
aas
mov
test
pop
and
scas
push
arpl
adc
jno
pop
ljmp
rcrb
xchg
push
jl
sbb
sbb
out
test
jmp
push
out
loopne
rclb
and
lea
scas
pop
loopne
scas
ds
jno
pop
xor
mov
pop
fcom
mov
cwtl
stos
outsl
and
mov
decl
and
inc
js
xchg
sti
jecxz
adc
lock
pop
in
ffreep
lods
fcmovu
loopne
sbb
das
xor
jp
push
aam
sbb
or
adc
or
movb
sbb
sub
xor
push
mov
fistpll
lods
fucomi
dec
stc
and
cmpsl
cmp
pop
in
pop
xchg
jae
js
test
fs
jge
inc
scas
adc
mov
fstpl
das
dec
sbb
push
icebp
sub
xor
call
enter
call
inc
pop
imull
or
xchg
add
jg
mov
xlat
lret
filds
push
cmp
jle
clc
pushl
push
push
maskmovq
notl
hlt
orb
aam
and
aas
mov
mov
dec
test
pop
push
ljmp
mov
call
lret
jmp
aas
fs
lcall
jge
and
dec
cli
popf
lock
call
call
rcrb
test
pop
movsl
leave
inc
stos
fidivs
jns
mov
xchg
push
mov
int3
fstl
cmpsl
andl
ljmp
dec
mov
movsb
add
int
hlt
icebp
inc
and
dec
mov
ljmp
adc
jg
sbb
push
ret
sar
stos
fsubr
xchg
in
call
mov
insb
sbb
cwtl
push
sbb
xlat
jno
xor
int3
insb
cmpsl
add
cmp
loopne
pop
je
movsl
out
xchg
loope
mov
jmp
mov
pop
fdivl
mov
pop
cmp
jmp
dec
mov
lahf
xchg
fcoml
sar
mov
pop
jb
jl
cmp
loop
push
mov
mov
sbbb
rolb
jge
cmp
dec
xchg
pop
lcall
mov
push
out
dec
cli
mov
mov
lock
into
and
stos
inc
push
jmp
and
push
andl
adc
push
shl
filds
shll
into
shl
test
cmp
ljmp
hlt
arpl
xchg
out
mov
ret
out
out
push
js
pop
adc
lcall
lahf
cmp
and
and
decl
pop
mov
andb
xorb
cld
shrb
jecxz
iret
mov
scas
mov
cmp
insl
repz
cwtl
or
call
cmp
mov
insb
daa
jl
fs
cmp
loop
mov
jge
es
decl
xchg
sub
xchg
sub
jae
out
jbe
jmp
mov
push
pop
mov
jmp
test
xchg
add
fwait
and
lods
and
xor
sub
mov
fisubrl
incl
jecxz
arpl
les
inc
mov
nop
dec
scas
popf
in
mul
fnstenv
mov
loope
jmp
jmp
and
push
test
xchg
cmp
sbb
mov
add
adc
add
fcomip
jmp
sbbl
leave
outsl
lret
shl
shlb
loope
jnp
bound
lods
dec
dec
clc
or
je
in
out
and
lods
pushf
fmul
loopne
ficoml
jb
mov
add
jmp
jne
cmpsl
data16
cmc
mov
sbb
mov
scas
mov
enter
pop
dec
jae
fs
test
add
sub
dec
fcomip
jmp
mov
jle
imul
nop
jecxz
inc
mov
xor
mov
das
fdiv
xlat
push
mov
mulb
out
xor
adc
pusha
push
sub
ljmp
in
xchg
aaa
or
sub
jmp
pop
cwtl
gs
mov
daa
and
call
xlat
stos
pop
addb
fldcw
rcrl
mov
ja
icebp
mov
js
int3
dec
mov
sub
ljmp
mov
pop
push
popf
jmp
mov
sbb
sbb
add
pop
ljmp
jne
movsb
fs
hlt
sub
in
xchg
jecxz
movsl
outsl
cmp
dec
pop
jg
imul
mov
lahf
cmp
pop
incl
ret
lret
or
push
xorl
lods
jnp
add
decl
loopne
imul
or
ja
cmp
gs
or
cltd
adc
loop
data16
fucomi
cmp
aas
std
mov
rolb
jne
call
xchg
jns
in
cld
pop
aas
lahf
sahf
xorb
outsl
add
sub
add
xlat
rcrb
lcall
and
jmp
push
cmpsl
test
push
inc
mov
and
xchg
enter
mov
stos
ret
rcr
jns
imul
lret
shrl
daa
icebp
xchg
popf
lods
inc
mov
data16
call
adc
loope
adc
loop
and
add
lret
pop
cld
jmp
sub
pop
adc
out
in
adc
hlt
push
mov
pusha
sub
mov
mov
mov
dec
lcall
dec
leave
lea
loope
ljmp
pushf
add
ret
les
rolb
jo
in
ljmp
popa
dec
jl
int3
sbb
mov
mov
addl
cmp
std
add
in
xor
push
scas
and
lea
mov
or
cld
fisubl
call
aaa
push
fmuls
inc
shl
jae
gs
jp
mov
fldt
dec
arpl
push
mov
fadds
popf
cmpsb
adc
das
div
sar
stc
and
mov
pop
loopne
sub
incl
mov
inc
fcoml
loope
add
in
in
adcb
popf
mov
xlat
adc
mov
pushl
mov
pop
push
fnstsw
movsb
fstps
outsb
je
scas
push
mov
mov
loope
dec
ds
ja
aad
xor
mov
jl
ljmp
mov
push
cs
ljmp
nop
fs
roll
cld
xor
cmp
icebp
dec
ljmp
dec
sub
ret
fbstp
icebp
loope
xchg
xchg
cs
jnp
mov
xchg
dec
jmp
mov
mov
mov
push
repz
sbb
into
aas
fcoms
pop
nop
sbb
bound
dec
mov
jae
cs
clc
ljmp
lret
dec
daa
sub
sbb
es
insl
pushl
mov
test
stc
fstps
cmp
aaa
arpl
inc
cmp
sbb
lcall
jbe
cld
jp
pusha
sbb
mov
rorl
inc
imul
add
inc
sub
xchg
push
fsubl
fcomip
pushl
into
cmp
adcb
mov
dec
std
out
jl
call
arpl
sub
xchg
sub
lret
inc
push
jnp
nop
dec
mov
xchg
jno
pushl
push
test
mov
movsl
in
cmp
cmpsb
ds
test
imul
and
push
adc
leave
mov
stos
and
dec
shlb
lods
das
and
and
and
out
fmuls
pop
hlt
ftst
cmp
fstp
xchg
cmc
push
xchg
mov
jmp
dec
and
ret
mov
popa
and
jae
jge
lds
xchg
inc
inc
int3
xchg
imull
jg
inc
xchg
add
sbb
add
jns
pop
call
sbb
pushf
mov
sub
xor
cmp
jg
mov
mov
clc
rolb
pop
outsl
xlat
int3
fidivs
fs
incl
or
adc
test
mov
lahf
sub
leave
dec
gs
cmp
mov
or
ja
pop
das
rcr
cmp
loope
imul
or
xor
call
mov
fsubp
stos
outsl
orb
enter
cmp
push
aas
push
iret
rcr
and
cs
lea
jg
dec
sub
pusha
xchg
mov
sub
ret
mov
xor
jle
cmpl
rorb
ljmp
jae
jp
push
leave
inc
pop
ret
in
and
sub
mov
jl
add
and
jmp
push
std
das
lcall
pop
fcmovb
dec
loop
pop
jbe
movsl
mov
push
mov
cli
and
cmp
inc
jae
cmpsb
sub
jmp
or
xchg
incl
sbb
cmp
or
mov
mov
cli
sbb
out
dec
push
cmp
pushl
hlt
xchg
insl
ds
mov
popf
inc
gs
push
inc
shl
dec
xor
repz
push
mov
aaa
test
orl
fistpll
je
xchg
adc
rclb
push
into
sbb
decl
mov
push
lret
dec
ljmp
sbb
cli
jmp
adc
and
cmp
inc
js
pop
or
adc
jg
test
fadd
aaa
push
or
inc
push
or
ficoms
stc
dec
call
in
cs
aas
int
inc
out
xlat
shlb
popf
lcall
pushf
mov
test
sub
pop
cmp
push
push
inc
and
sub
xorb
decl
jmp
ljmp
outsb
aas
shrb
push
pop
fisubl
ljmp
movsl
or
jl
jo
or
pop
lret
ljmp
js
sbb
mov
mov
xchg
adc
adc
aas
in
scas
and
mov
cld
pop
icebp
inc
add
insb
fimull
shrl
jns
mov
jbe
fs
jns
test
inc
roll
es
or
cmp
adc
mov
imul
call
push
scas
aaa
cmpsb
xchg
int
sub
data16
loopne
sbb
adc
or
imul
pushl
mov
or
inc
inc
movsb
mov
movsl
pusha
mov
das
mov
pop
cmp
mov
pop
std
decl
test
mov
decb
inc
xor
jns
and
mov
add
loop
adc
das
mov
sbb
adc
pushl
or
sub
add
sub
jmp
rorl
pop
jl
shlb
int3
rcrl
add
mov
sub
icebp
pop
mov
adc
mov
xor
inc
dec
jns
jge
jnp
mov
popf
mov
pop
imul
cmp
jno
mov
jg
sbb
mov
outsl
jne
inc
jg
ja
mov
xchg
xchg
icebp
jg
in
mov
les
push
jmp
decl
aam
dec
mov
sub
sbb
cmp
das
mov
inc
mov
inc
aaa
les
xchg
cwtl
scas
das
push
jmp
rcr
outsb
cmpsl
jno
lret
xchg
jge
imul
or
inc
push
push
cs
mov
sub
orb
jno
pop
mov
inc
dec
mov
jle
out
jle
ja
xchg
cmp
fdivrl
jp
in
cmc
insl
stc
inc
cmp
ljmp
cmp
sti
pop
ret
dec
jbe
push
mov
push
xchg
aaa
cmpsl
stos
sbb
adc
jmp
sar
lock
dec
fidivs
push
adc
incl
testl
mov
jle
in
cmp
movq
hlt
mov
fimuls
lcall
stc
ljmp
inc
test
mov
pop
jbe
xchg
inc
test
stos
iret
leave
cmp
cs
aad
fdiv
call
push
dec
pop
cwtl
pop
lods
pop
out
xchg
jb
pop
js
push
mov
das
outsb
inc
add
mov
fistps
movsb
and
sbb
pop
dec
xor
mov
sahf
mov
jnp
imul
mov
movl
push
addr16
repz
xchg
pop
into
cs
push
sbb
jge
mov
enter
addr16
cli
cmp
mov
mov
ja
xor
push
call
imul
sbb
mulb
lret
add
jp
adc
mov
add
cmp
std
mov
cmp
pop
mov
sub
das
push
or
jbe
bound
xor
call
enter
leave
fadd
mov
sub
dec
fmuls
scas
inc
daa
adc
insb
lods
add
and
sub
xchg
cs
call
dec
add
mov
add
fs
xchg
push
and
mov
ficomps
jmp
mov
ljmp
ret
mov
shll
push
ret
jo
fcomp
push
mov
adc
ds
popa
lret
out
and
pop
mov
loope
testb
testb
adc
mov
call
mov
push
rorl
fisttpll
mov
clc
jnp
das
cmp
loop
lcall
lods
sbb
cs
sti
push
outsb
push
mov
jg
and
cltd
mov
or
add
mov
sarb
jbe
cmp
cli
mov
ss
decl
add
xchg
aas
movsl
cwtl
cmpsb
mov
pop
xchg
xchg
scas
into
inc
mov
mov
clc
call
daa
inc
loop
jl
imull
repz
mov
ja
mov
pushl
scas
loop
jg
or
adc
xor
aas
and
lcall
cld
or
je
adc
or
ret
mov
decl
or
clc
adc
ficomps
add
mov
adc
test
jecxz
pushl
hlt
ljmp
iret
ret
lock
cmpsl
cmp
mov
mov
shr
fwait
lret
jl
dec
nop
pop
sti
movsl
jl
adc
arpl
insb
std
std
lds
lods
sbb
popf
stos
push
loope
je
xchg
sbb
std
sub
mov
mov
jg
push
imul
icebp
sbb
add
mov
es
inc
sbb
dec
incl
xchg
out
sub
add
mov
jmp
mov
test
sbb
rcrl
pop
jb
mov
cmp
ja
roll
pop
aam
dec
mov
fsub
outsb
stos
clc
addr16
sbbl
jecxz
lret
mov
leave
bnd
lcall
sub
push
adc
adc
mov
and
incl
jno
cmpsb
fldcw
ret
adc
lcall
xchg
addr16
rol
adc
cmc
icebp
fs
add
sub
cmpsl
xchg
inc
repnz
add
pushl
scas
sbb
out
xor
arpl
loopne
mov
pop
arpl
out
and
and
movsl
or
cmp
pop
cmp
cli
out
and
pop
daa
jns
clc
push
mov
mov
cmp
push
mov
inc
push
sbb
fiaddl
jnp
mov
mov
std
rep
mov
outsb
sarl
out
mov
fs
jecxz
sub
hlt
cltd
xor
decl
fwait
leave
push
mov
popa
movsl
inc
pop
dec
stc
ret
call
lods
clc
cmpsl
icebp
in
add
add
aas
xor
push
sbb
lahf
pop
mov
pop
mov
scas
xchg
push
fwait
inc
std
stos
push
jbe
adc
data16
mov
outsb
cmp
ljmp
rolb
out
outsl
mov
lcall
mov
clc
in
jg
push
push
mov
pop
cmp
push
jb
mov
pop
enter
rolb
jnp
pop
adc
jne
xor
pusha
push
into
adc
cmpb
push
iret
out
je
xor
outsb
int
or
js
stos
pop
and
incl
adc
push
add
rcl
mov
sub
imul
orb
ljmp
push
or
and
outsl
mov
pop
mov
inc
mov
mov
xchg
sub
test
ljmp
and
push
les
scas
int
jle
setp
dec
cmpsb
push
ret
xor
decl
scas
adc
ljmp
add
mov
adc
call
in
fwait
push
adc
cmp
test
ljmp
xor
sti
jle
or
mov
mov
mov
dec
xchg
or
adc
dec
jle
cmp
mov
and
je
add
pop
add
rclb
aas
sbb
push
adc
jecxz
loope
cmp
data16
decl
mov
mov
in
ljmp
dec
jo
pop
jae
or
ljmp
sar
ss
lea
pop
mov
pop
nop
clc
decl
inc
adc
xlat
adc
mov
jp
inc
stos
mov
or
push
rolb
test
lcall
call
inc
jp
push
jno
push
mov
push
fnstenv
gs
ja
dec
adc
idiv
aaa
std
ljmp
cmc
mov
xor
adc
scas
iret
sub
xchg
pushf
fidivrl
pushf
pushf
das
xchg
jmp
loopne
xchg
and
test
push
dec
fwait
imul
or
je
pop
inc
xor
sub
in
push
shll
lods
lcall
mov
inc
add
pushf
rolb
stc
iret
fsubrs
test
call
mov
mov
aaa
mov
cld
inc
cmp
ss
out
add
out
rorl
outsl
out
sub
mov
mov
adc
push
lods
test
xchg
js
lahf
repz
xor
ljmp
fisubs
jno
lret
push
inc
sbb
shl
xor
push
dec
dec
enter
xchg
leave
xchg
push
or
out
clc
stos
jns
sbb
mov
adc
mov
into
adc
jns
hlt
xchg
adc
adc
add
add
dec
push
ljmp
les
test
xor
sahf
cmc
test
sbb
pop
add
loopne
negb
push
mov
sarb
out
stos
jbe
xchg
xlat
xor
popf
iret
repz
mov
or
adc
ljmp
pop
insl
or
iret
incl
pusha
pop
inc
mov
rorl
inc
dec
dec
xchg
or
push
push
sbb
cmpsl
mov
mov
jno
daa
push
call
or
shrb
ja
fiadds
imul
cld
je
xor
pop
cld
pop
stos
mov
std
jmp
mov
aaa
cmp
adc
add
aaa
pop
sub
jecxz
ret
nopl
cli
cs
mov
sbb
out
not
into
das
adc
push
mov
xorl
jmp
cmp
xchg
aaa
cmp
popa
pop
sbb
push
lods
out
popa
dec
sbb
inc
js
ficoml
adcl
mov
pushf
fwait
mov
jle
jae
lea
lret
fsubrl
add
mov
adc
lods
inc
pop
inc
decl
push
push
dec
push
add
das
pop
in
cltd
push
add
push
aaa
cmpsl
clc
jmp
sub
or
bound
adc
add
cs
call
out
enter
decl
sbb
pop
mov
push
pusha
pop
incl
insl
push
mov
and
sbb
in
stos
shrb
mov
test
pushl
xchg
out
jb
or
in
repz
sahf
pop
cltd
dec
fsubp
adc
jecxz
jg
add
xor
ret
loopne
addl
push
mov
out
mov
mov
pop
lods
jl
mov
mov
add
sbb
push
mov
mov
jmp
adc
pop
pushf
gs
sub
shll
sbb
test
jbe
smsw
dec
sahf
int
mov
xchg
loope
dec
movd
jno
sub
in
sbb
flds
loopne
xchg
int
jmp
loopne
push
lds
or
or
push
cld
dec
fsubrl
js
arpl
and
movsl
jb
leave
sbb
xor
call
mov
insb
or
inc
or
sbb
mov
inc
push
sbb
sbb
push
std
decl
stos
mov
mov
ja
mov
inc
pop
dec
push
aas
cmp
mov
push
bound
mov
ret
pop
fidivl
add
push
mov
cmp
loop
or
cli
ljmp
cmp
and
push
adcl
stos
mov
sbb
cmp
jle
loop
call
adc
mov
dec
adc
fdivs
maskmovq
jmp
and
xor
pop
push
mov
cmp
mov
aam
jb
adc
mov
scas
xchg
mov
and
sub
or
dec
out
outsl
ret
lcall
bnd
int3
testb
outsl
push
loope
dec
pushf
mov
sub
cwtl
int3
std
mov
add
xchg
loope
cmp
mov
orb
dec
faddp
dec
scas
test
jmp
ss
jmp
nop
cwtl
andb
xchg
adc
in
cmp
cmp
mov
and
mov
add
incl
jo
push
xchg
pop
scas
cs
orl
push
stos
push
jl
daa
pop
push
cmpsb
mov
jg
jmp
cmp
mov
push
lret
sahf
int3
xchg
repz
jp
ss
out
inc
mov
lcall
xor
adc
insl
insb
stos
imul
insb
arpl
flds
jle
push
fistps
ljmp
sub
dec
add
mov
test
mulb
push
cli
sbb
jbe
cld
or
xchg
xchg
in
dec
xchg
pop
call
jbe
std
xor
lret
fs
lret
pusha
xchg
incb
jmp
mov
scas
adc
insb
sub
sahf
and
test
bound
loop
out
pop
stos
mov
ja
lds
inc
pop
sbb
jmp
mov
scas
push
rorb
test
jmp
into
inc
pushf
mov
xchg
test
mov
push
mov
and
pop
xchg
or
or
sahf
sahf
incl
push
jne
xchg
mov
inc
std
data16
mov
inc
repz
jmp
xchg
jecxz
mov
call
mov
roll
jo
sub
mov
mov
int
fnstsw
js
pop
cmp
or
sub
shlb
jmp
pushf
lock
mov
imul
ja
clc
dec
movntq
out
addb
bound
aad
xor
sbb
cld
int
icebp
mov
mov
out
lret
add
sahf
test
test
shlb
xchg
jg
push
lcall
fcomip
call
fwait
mov
mov
data16
xchg
hlt
cld
daa
dec
test
push
call
cmp
dec
fdivs
add
fdivr
pop
push
jmp
bswap
test
addr16
jle
decl
jo
xchg
mov
mov
test
je
repnz
lcall
jmp
dec
cmp
rcr
repnz
ds
push
rcrb
xor
decl
je
and
xorb
test
jne
lret
bound
hlt
jb
test
dec
bound
out
cli
mov
add
out
add
int
mov
and
mov
sub
call
data16
ds
mov
jb
cmp
and
push
shlb
jge
dec
xchg
cmpsl
add
lcall
and
push
cmp
push
std
dec
mov
shll
inc
mov
adc
ret
scas
sar
jg
pusha
mov
jbe
lret
test
aad
fdivr
cmp
popf
push
bound
decl
sub
in
dec
mov
inc
addl
push
std
add
insb
loop
or
call
xchg
adcb
add
dec
cmpsl
arpl
jns
lcall
mul
sbb
inc
das
aad
cmp
loopne
jecxz
adc
push
nop
mov
cli
incl
jne
jbe
stc
dec
mov
adc
lods
int
inc
mov
lret
das
sar
sahf
cmp
clc
mov
mov
ror
dec
xor
call
aas
testl
xchg
ret
lret
aam
push
jle
imul
mov
xor
data16
push
mov
cmc
dec
xchg
je
mov
dec
sbb
cmpsl
popa
imul
push
inc
movsb
into
adc
decl
fisubrl
dec
data16
pop
outsb
push
shlb
pushl
cmpsb
push
stos
dec
cmpsl
andb
loop
ss
jae
lods
in
mov
pop
sub
lcall
andb
enter
add
nop
mov
clc
imul
ja
clc
stc
mov
mov
push
jo
rcrb
push
clc
ret
push
and
test
lods
mov
sbbb
test
dec
ror
test
adc
aaa
ss
enter
dec
mov
adc
lcall
adc
pop
das
cmpsb
orl
jle
insb
ret
fs
inc
into
push
inc
inc
stos
xchg
scas
inc
cmc
mov
adc
sub
push
lods
jge
das
xchg
ljmp
mov
mov
xchg
insb
mov
add
ljmp
ret
dec
pop
int
or
pop
data16
call
dec
loope
adc
fbld
sbb
mov
inc
in
sub
aad
lds
cmp
sarb
pop
dec
push
jbe
loop
loope
mov
gs
mov
mov
decl
jge
inc
adc
mull
pop
iret
ret
mov
sbb
andb
decl
js
cmp
lcall
mov
scas
dec
mov
xchg
hlt
hlt
mov
ja
ljmp
in
push
mov
vpavgw
call
cmp
stc
mov
std
testl
repnz
xchg
mov
dec
in
jmp
popa
mov
lcall
pop
loope
inc
adc
dec
mov
aam
pusha
dec
popa
jnp
xchg
dec
add
imul
mov
call
sbb
pop
scas
mov
mov
loopne
daa
mov
imul
ret
gs
lods
test
adc
decl
adc
push
sahf
popa
out
aam
sbb
daa
dec
jno
xor
scas
mov
cmpsl
out
and
lcall
test
jnp
or
sub
daa
jbe
mov
sub
jmp
sbb
sbb
jl
or
mov
mulb
ja
pop
lock
xor
int3
sub
daa
inc
fildll
call
cmp
outsl
lock
shl
testb
push
mov
movsl
add
pushl
imul
and
mov
mov
adc
enter
pop
sub
fwait
mov
std
std
xchg
inc
ja
rclb
mov
push
add
nop
sbb
in
cmpsb
pop
repnz
pop
mov
sahf
mov
incl
or
data16
mov
pop
mov
fcomip
lcall
mov
xchg
lea
in
mov
mov
inc
ljmp
pop
test
and
jl
mov
push
scas
mov
bound
insb
push
daa
jb
push
lods
fs
es
mov
incl
adc
enter
cmp
xchg
mov
sbb
call
test
aam
ljmp
mov
xchg
ds
decb
sub
jnp
dec
aaa
xchg
lcall
decb
cmp
dec
ss
cmp
mov
mov
popa
fisubrl
or
arpl
pop
pop
inc
and
movsb
dec
in
cmp
je
and
jne
add
xorb
xchg
sbb
ret
std
lods
mov
lds
into
xor
mov
pop
mov
dec
les
xor
push
loop
mov
out
ret
add
jns
cltd
and
pop
ja
insl
inc
jne
test
incb
jge
frstor
pop
and
pop
hlt
dec
mov
ja
or
mov
sbb
jmp
lods
gs
inc
dec
fisttps
pop
leave
xchg
mov
lods
out
mov
mov
pop
mov
out
adc
or
bound
xor
aaa
call
cld
mov
aad
and
stos
fsub
fwait
push
mov
shlb
pop
lods
jp
add
popf
sbb
cwtl
push
ss
dec
push
ja
mov
filds
mov
cmp
pushl
or
int3
cmp
jg
hlt
sbb
addb
mov
xor
jbe
mov
int3
mov
test
stos
and
add
add
adc
cmp
lods
add
call
inc
inc
sar
je
push
std
popa
imul
jae
sbb
call
test
xor
icebp
in
addr16
xor
jnp
icebp
jmp
ror
cli
jo
xor
sub
jg
subb
push
negb
data16
sub
mov
std
aad
adc
jmp
push
das
push
sbb
cld
scas
jecxz
add
mov
xchg
pop
int
in
out
fidivrl
shll
call
add
mov
filds
push
movsl
into
xor
sub
outsl
push
mov
lock
mov
adc
clc
ljmp
in
mov
pusha
mov
iret
out
pop
cmp
decl
fsubrl
and
fisubrs
mov
lds
jge
xor
dec
sti
push
fwait
xor
loopne
xorl
xchg
or
mov
popf
cld
nop
ljmp
push
mov
cltd
stos
xchg
jle
mov
push
inc
jbe
aam
insb
imul
call
sbb
les
mov
sub
mov
add
ja
adc
sbb
call
movsw
insb
pop
stc
adc
push
sbb
add
ja
jge
sub
mov
cwtl
lret
hlt
ljmp
into
and
les
inc
adc
inc
je
lods
cltd
std
fisubrs
xorl
inc
cmp
jmp
xchg
sub
push
pop
int3
pop
mov
adc
sbb
incl
inc
testl
stos
test
gs
and
clc
add
movsl
ret
xor
xchg
cmp
xchg
inc
cmp
sbb
mov
incl
push
mov
sub
loope
lea
sub
call
ljmp
imul
movl
push
out
das
sub
mov
int3
insl
cmp
sub
loopne
dec
subl
jno
aam
cmp
bound
add
loope
xor
mov
push
cltd
cmp
mov
fs
sbb
sbb
aam
xchg
mov
aas
adc
lcall
decl
mov
cmp
out
inc
aam
push
mov
sbb
popl
js
ret
int3
sbb
and
call
pusha
fisubrs
and
lea
and
add
loopne
or
mov
cld
call
out
sbb
out
or
mov
push
ljmp
jg
hlt
decl
mov
mov
xor
mov
push
and
pusha
loop
pushl
cmpsb
cmp
pop
sub
dec
addr16
movl
sar
cmp
xor
fwait
int3
jg
lods
xor
pop
dec
sub
ss
mov
sbb
push
in
sub
mov
jmp
jg
rcl
les
insl
std
pop
jmp
cs
sub
push
jbe
or
xor
mov
scas
dec
les
inc
out
mov
fs
jo
pop
pushf
or
jns
cld
mov
and
mov
gs
and
sbb
adc
pushl
mov
push
and
jmp
or
stos
das
es
mov
and
fs
pop
test
pop
nop
jge
out
fwait
xor
jns
xlat
jbe
icebp
adc
icebp
inc
push
mov
adc
push
dec
adc
cltd
and
or
xchg
incl
mov
notb
sahf
jmp
jg
ljmp
lds
hlt
movsl
adc
test
jg
ror
test
dec
ret
andl
and
das
add
lock
pop
jg
clc
jg
push
pop
test
ljmp
pushl
scas
sarb
pop
out
stos
sbb
out
pop
pop
mov
out
sub
fwait
inc
mov
loop
jg
call
std
daa
mov
dec
cs
dec
femms
out
mov
out
scas
pop
or
sbb
pop
mov
push
add
pop
or
lcall
pop
clc
mov
push
cli
shll
imul
ss
nop
cmp
pop
sti
int3
and
popf
rcrl
inc
ljmp
dec
mov
lahf
and
fistps
xchg
cltd
fwait
mov
mov
pusha
and
sbb
repz
lcall
mov
dec
mov
add
dec
add
or
jle
mov
dec
repz
aad
test
rorb
or
add
and
inc
sub
mov
sahf
gs
mov
and
leave
cmpsl
sbb
push
cmp
pop
jg
cmp
out
jg
shlb
cmp
not
mov
call
movsb
stos
lods
into
ss
cli
push
imul
push
call
mov
test
movsl
fstl
pop
cmp
xor
aad
push
hlt
xchg
push
or
xor
or
adc
xchg
aas
lcall
leave
pop
xchg
call
enter
sahf
test
cmp
lret
mov
scas
rcl
pop
dec
xor
call
and
sub
push
test
mov
cld
inc
xor
dec
insb
or
sbb
xchg
jnp
ret
andb
mov
ret
jo
hlt
cld
dec
inc
add
inc
xchg
or
jmp
and
adc
xchg
pop
xor
xor
cmpsl
mov
sub
enter
mov
cmp
adc
das
outsb
cmp
nop
pop
ljmp
pop
cmp
rorb
pop
xchg
fdivl
lods
sub
scas
mov
fbstp
lahf
xlat
mov
mov
mov
or
mov
leave
jns
sbb
pushf
sub
push
cmp
cmp
mov
arpl
xlat
dec
dec
outsb
mov
stos
aam
insl
gs
jl
leave
adc
inc
mov
sbb
dec
imul
jl
scas
xchg
pop
lods
push
add
scas
xchg
mov
cmp
movsl
lret
pushf
mov
cli
adc
stos
dec
xchg
add
out
or
faddp
repz
sti
test
push
or
fmull
mov
hlt
test
sbb
das
push
sbb
std
call
shlb
jbe
adc
fcoml
loop
ds
mov
daa
xchg
jg
in
push
cmp
jle
jecxz
lcall
jecxz
jmp
lods
xor
fs
jp
aas
inc
inc
mov
mov
decl
mov
xchg
das
xchg
push
fdivs
repz
int
mov
add
inc
test
inc
lds
mov
mov
jmp
jb
fwait
push
fwait
xlat
mov
and
pop
xlat
shll
mov
imul
clc
shl
shrb
cmp
adc
sbb
xchg
sub
sub
arpl
mov
dec
call
mov
out
shlb
jns
mov
and
cmp
push
mov
and
mov
mov
xlat
and
clc
cmp
sbb
fucom
jg
jg
pop
xor
mov
enter
daa
mov
flds
aam
std
inc
xor
iret
sub
sub
sbb
js
cwtl
lods
popa
loope
push
out
out
mov
call
pop
mov
xor
stc
mov
jecxz
pop
xchg
jmp
jb
and
fadd
call
xchg
es
decl
aad
dec
mov
movsl
test
mov
lret
xchg
dec
push
cmp
or
stos
ljmp
and
fistl
mov
cmp
icebp
fldenv
clc
fsubrs
jg
lea
out
mov
mov
mov
inc
loope
fbld
imul
insb
and
out
mov
dec
pop
cmp
rorl
or
push
mov
jp
dec
ret
sarb
aad
out
fwait
mov
in
and
sub
test
shll
ss
inc
sti
xchg
ret
out
clc
jmp
adc
into
movsb
aaa
fisttpll
xchg
xor
xor
aaa
jmp
outsb
hlt
adc
ret
scas
rcrb
adc
shlb
ljmp
clc
and
ss
imul
mov
xor
sarl
and
jmp
mov
out
rol
mov
gs
push
adc
cmp
adc
outsb
or
mov
lret
mov
lock
mov
mov
mov
sbb
xor
call
loop
cmp
mov
imul
js
mov
pushf
ja
lods
push
in
loop
ss
cltd
lahf
enter
ljmp
lcall
jg
dec
push
xchg
adc
xor
or
sbb
inc
arpl
arpl
test
or
repnz
mov
mov
mov
dec
out
jg
push
dec
mov
jae
pop
add
outsb
mov
inc
inc
xor
movsb
lock
push
in
cmp
and
pop
imul
add
call
pusha
movsb
add
cmp
mov
xchg
call
inc
int
adc
clc
mov
call
pop
je
fs
mov
arpl
ja
imul
inc
in
lea
mov
inc
inc
mov
rcll
mov
add
mov
and
mov
nop
out
jecxz
jb
adc
cld
incl
lods
jmp
movsl
lods
mov
int
mov
cmp
and
sub
pop
push
mov
hlt
jg
inc
push
jl
out
cwtl
mov
adc
ljmp
in
push
sub
sub
into
outsl
fistpll
movsl
psubw
pop
mov
mov
sbb
out
mov
loopne
mov
lea
outsl
repnz
outsl
pop
fdivr
dec
nop
inc
imul
ja
pushl
ds
daa
cld
or
imul
leave
xor
push
outsb
xor
mov
sbb
adc
loop
iret
push
jl
loopw
sarb
orl
fldl
fsubrs
mov
mov
das
add
pushf
dec
leave
or
rcr
jo
jns
stc
push
push
sub
add
pop
das
and
repnz
ljmp
sub
add
in
mov
push
ja
iret
jmp
xchg
mov
cmp
add
adc
ds
popa
cmp
inc
mov
mov
leave
test
pop
push
cmp
jns
stos
xor
inc
push
adc
orb
inc
andb
push
push
fbld
jp
jne
daa
pop
and
mulb
sbb
add
jnp
lret
jg
jmp
fbld
icebp
push
add
test
pushf
pop
push
xor
fnstcw
orl
mov
ja
jg
out
cmp
test
cli
es
dec
dec
adcb
pop
or
sbb
pop
dec
sbb
dec
clc
call
and
rclb
imul
xchg
call
fimull
xor
popf
push
and
out
test
xor
fcmovnb
sarl
outsl
mov
dec
push
lret
out
insl
jmp
into
mov
in
repnz
rorl
sahf
cmp
mov
in
sahf
js
test
jg
sbb
call
test
int3
pop
mov
pushl
sbb
ss
sahf
pop
ja
cld
lea
aam
jge
aam
andb
cltd
call
mov
jp
sub
push
adc
push
mov
imul
mov
popf
xchg
ljmp
and
mov
xchg
mov
dec
dec
repz
xchg
or
in
shll
test
das
jecxz
xor
inc
ret
mov
mov
jg
push
pop
pop
adc
mov
cmpsl
xor
dec
xchg
push
sub
pop
push
imul
fbld
sbb
sbb
ss
fildll
hlt
jp
sub
mov
pop
icebp
mov
test
out
in
outsb
cmp
adc
std
cmp
call
add
call
mov
sbb
popa
rclb
gs
ljmp
pop
dec
fldcw
repz
orl
pop
loopne
cmp
jge
inc
jbe
orb
mov
out
test
cmp
int3
pusha
mov
mov
test
ret
xchg
jbe
enter
mov
aaa
sbb
cmp
insl
fcos
outsl
cli
scas
inc
cld
jb
outsb
xorb
push
ja
sub
lods
fcom
push
lcall
xchg
stc
pop
mov
fwait
aad
pop
adc
imulb
cmp
ja
adc
xor
inc
decl
call
cwtl
pusha
lods
pop
lods
cmp
mov
xor
push
sbbl
mov
decl
jmp
xchg
xchg
lock
xchg
cli
inc
iret
dec
adc
cmp
jnp
adc
sbb
data16
or
mov
xor
movsl
mov
jnp
or
dec
sub
mov
adc
mov
pop
fsubr
xlat
sbb
fists
mov
loopne
push
dec
test
xor
hlt
dec
cltd
jl
ljmp
out
mov
sarl
pop
mov
pop
mov
pop
xor
mov
xchg
jmp
js
pavgb
shll
lret
mov
adc
negb
popf
mov
dec
aam
iret
into
inc
fistps
xor
mov
rcll
mov
test
add
scas
sub
test
ret
incl
scas
adc
icebp
rcrb
movb
repnz
push
jl
and
pushl
or
jle
mov
mov
mov
scas
cmp
cmp
adc
sti
call
in
jmp
and
stc
loop
dec
jmp
mov
stos
inc
sub
cwtl
push
dec
jb
sbbl
cmp
clc
and
ljmp
push
xor
cmpsb
imul
fistl
jl
adcb
pop
xlat
arpl
ljmp
pop
subb
andb
jmp
xor
js
add
sar
movsl
cmp
fdivs
nop
add
dec
loope
add
mov
in
push
dec
jns
mov
call
xchg
inc
and
sub
in
xor
mov
push
cltd
stc
out
lret
ss
dec
ds
inc
mov
and
addr16
sahf
mov
fldt
fbstp
xor
push
fidivrs
cmpsl
rcrl
es
cltd
and
dec
or
jae
cli
les
inc
adc
es
loop
ljmp
loope
jno
test
jae
arpl
or
xor
shlb
das
clc
mov
xchg
xchg
push
loope
adc
lds
xor
das
popa
mov
mov
incl
mov
mov
push
rorl
or
sbb
adc
call
test
hlt
cmp
push
rolb
sub
jg
call
pop
fstpl
movsb
sub
sub
dec
pop
arpl
add
ds
xchg
and
or
test
cmpsb
adc
testb
jbe
scas
jg
cmpsb
fcom
xchg
cmpsl
pop
psrlq
std
faddl
lahf
xchg
cmp
and
xchg
push
cld
out
cli
aam
cmp
or
fcmovb
out
xchg
mov
in
out
mov
js
loopne
lock
loopne
rcll
mov
mov
into
push
insb
decl
cmp
bound
dec
push
fs
repnz
dec
movsl
fiadds
cli
incl
pusha
imul
test
mov
nop
push
pop
mov
xchg
xor
idiv
out
jl
clc
cwtl
cmp
mov
jno
inc
mov
jo
mov
fimuls
stos
outsl
clc
lcall
repnz
das
mov
or
shrl
ror
out
scas
xor
jo
sbb
ret
jge
push
xor
sub
or
and
aas
pusha
xchg
pop
aaa
mov
incl
inc
mov
popa
daa
dec
bound
call
gs
mov
test
int
jbe
fnstsw
jmp
cmpsl
or
int3
dec
mov
leave
iret
inc
lods
mov
mov
movsb
pop
cwtl
pop
or
jg
pop
jns
mov
inc
mov
fdivl
mov
hlt
mov
xor
mov
inc
je
cltd
pop
jl
dec
mov
pop
mov
sub
orb
call
push
gs
gs
ror
dec
fimull
jns
jnp
sahf
sub
daa
pop
jne
sub
ljmp
mov
mov
out
outsb
jne
dec
scas
mov
cmp
xchg
push
cmp
insb
sbb
sbb
ret
or
sbb
and
dec
insb
inc
mov
mov
cwtl
call
inc
dec
push
dec
cmp
fstl
jmp
mov
xor
sub
cmp
loope
cmc
lret
cmp
push
fwait
hlt
mov
jmp
js
xchg
cmp
cmpb
cld
xor
decl
enter
cwtl
mov
ds
pop
jb
cmp
es
mov
jo
cmp
mov
cmova
rorb
xchg
mov
call
mov
jmp
mov
das
push
ret
addr16
mov
fnsave
lcall
stos
sarb
sar
fsubrs
adc
jecxz
fwait
ret
stos
mov
pusha
jle
or
in
test
call
xor
inc
push
or
cltd
sub
xor
sub
add
call
cli
push
int
jb
shrb
cwtl
or
cmpsl
push
xor
popl
adc
andl
test
clc
pop
enter
dec
pop
js
mov
push
js
in
add
ljmp
push
dec
movl
jae
in
test
xor
or
pop
xchg
sbb
and
jns
std
jg
cmp
int3
int3
mov
das
push
add
xlat
mov
incl
jl
xor
les
mov
mov
adc
mov
lret
outsl
scas
shlb
adc
andb
in
data16
jmp
fs
jp
dec
mov
fbld
and
rorb
jns
pop
clc
cli
inc
test
cltd
inc
daa
cmc
into
adc
js
mov
subb
jns
cmp
aas
cli
adc
ds
mov
inc
dec
add
sbb
mov
out
push
ljmp
or
sub
sbb
cmp
imul
loop
cmpsb
mov
into
fisttpll
push
sarl
inc
setne
dec
push
aad
call
dec
xchg
sahf
scas
sub
jg
inc
pop
xchg
ljmp
jne
sbb
mov
pop
pop
mov
pcmpgtw
jmp
mov
in
inc
popf
bound
testb
mov
rcll
pop
stos
add
push
inc
jmp
out
call
lret
cmp
fdivl
fs
jb
mov
sub
call
cmpsl
xorl
xor
and
out
lcall
movsl
push
or
lods
push
ja
adcl
adc
jae
in
dec
fistpll
out
cld
mov
into
push
cld
jns
jne
ss
ret
xchg
lcall
cmpl
lcall
cmc
mov
into
xor
push
bnd
stc
jmp
cmp
movsb
or
xchg
cmp
xchg
or
cmp
jg
inc
cld
icebp
mul
fisttpl
pop
and
loopne
enter
incl
jg
or
shll
nop
mov
int
cli
stos
sub
xchg
pop
dec
outsl
cltd
out
rcr
test
stos
test
sbb
ljmp
or
nop
pop
rcrl
push
js
xchg
cld
and
scas
incl
adc
or
incb
xchg
stc
xchg
mov
sti
cmp
adc
outsb
filds
mov
fsubs
adc
stos
and
imul
push
sbb
frstor
xor
push
inc
jge
inc
sar
dec
add
lcall
test
mov
xor
sub
adc
or
loope
dec
data16
fistpll
aad
cwtl
out
mov
mov
lret
mov
loopne
aas
pop
mov
xor
cld
incl
push
push
aaa
daa
jp
out
movl
cmp
icebp
lcall
fisubrs
push
cmp
adc
adc
mov
cmp
mov
inc
lret
int3
decl
enter
scas
push
hlt
addr16
test
or
mov
xor
scas
clc
aad
inc
jg
xchg
and
pop
fcomp
dec
sbb
pushl
mov
jbe
jne
insb
inc
or
stos
ljmp
mov
adc
subl
mov
les
lds
js
mov
push
out
xchg
mov
sbb
stos
fisttpl
xchg
xchg
lcall
cmp
push
ret
and
pop
out
mov
lret
lods
mov
mov
mov
ret
loop
aaa
adc
add
jmp
mov
fisubs
mov
call
adc
jge
cmp
sbb
test
xor
rorl
mov
pushl
jle
xor
xor
pop
mov
mov
rol
fistl
jnp
and
xchg
xchg
add
cltd
jle
push
mov
cmp
decl
gs
jns
lea
push
xor
les
and
stc
in
movsb
jg
call
pop
in
test
or
data16
mov
push
ja
pcmpgtb
lcall
adc
cmp
cmp
sub
test
sahf
mov
xchg
sub
clc
int3
hlt
lods
mov
imul
jg
pop
out
out
daa
pop
in
jmp
pusha
mov
and
cli
mov
push
lret
and
mov
enter
enter
test
jmp
in
lcall
cli
jg
jno
jp
push
imul
fisttpl
lods
test
ret
sbb
stc
lahf
es
pushl
mov
mov
xchg
pop
push
and
and
pop
push
in
or
add
mov
ds
inc
subb
dec
loope
xor
dec
clc
jmp
xor
addb
jecxz
jno
cmc
adc
cmp
lcall
and
sub
mov
dec
pop
fs
xchg
jle
stos
or
mov
ljmp
ss
stc
fcmovnu
xchg
shll
cmc
pop
adc
jg
andl
int3
adc
stos
es
decl
jle
or
loop
out
push
push
or
and
int
jnp
xlat
pop
sar
adc
inc
mov
imul
xchg
hlt
jecxz
xchg
jg
mov
sub
adc
sbb
out
cli
lret
pushl
loopew
and
cmp
xchg
dec
sbb
test
imul
push
ja
rolb
loop
lea
aaa
rcrl
push
les
jbe
adc
jmp
into
jns
dec
mov
push
rolb
pop
fadd
ljmp
ja
adc
adc
decl
pop
cltd
daa
cmpb
rcrl
dec
mov
cs
adc
aaa
ret
in
ret
les
pop
add
lds
mov
cmp
pushl
push
cmp
jp
jno
daa
sbb
cmp
cmp
jo
out
imul
decl
or
test
ret
sbb
jns
inc
cmp
inc
jmp
mov
sub
cmp
pushl
pop
jmp
mov
jg
ss
dec
inc
sbb
lret
aaa
add
sbb
jmp
mov
loop
xlat
int
les
pop
and
test
orl
shlb
mov
push
pop
pop
xchg
dec
inc
mov
mov
lds
lds
ret
xchg
stos
mov
ret
mov
jg
push
adc
push
out
ret
jg
cmpsl
loop
outsl
push
adc
jecxz
adc
or
jo
pop
int3
fcmovnb
sarb
jg
push
and
push
and
mov
mov
jg
clc
mov
ljmp
es
xchg
mov
pop
xchg
cmpsl
dec
xchg
pop
jl
daa
sti
xlat
call
cmp
repz
loop
adc
mov
dec
hlt
lahf
inc
out
jg
sti
adc
testb
xchg
mov
dec
sbb
sahf
dec
push
sar
jns
decl
stos
cmp
xorb
lahf
inc
inc
ror
inc
addb
jp
mov
mov
incl
subb
or
std
push
bound
aam
dec
mov
mov
lds
stos
iret
jmp
or
fwait
mov
add
aaa
pop
mov
and
add
add
decl
pop
pushf
cld
xor
int3
sahf
mov
jg
dec
in
lods
xchg
jns
inc
sbb
daa
mov
loopne
dec
bound
in
sub
mov
push
sub
mov
ljmp
jno
push
jp
and
push
xchg
and
fdivl
fstps
pop
mov
push
sub
adc
mov
ds
ss
push
or
inc
div
cmp
clc
ljmp
hlt
sbb
ret
shrb
mov
pop
xchg
pop
sbb
fcomip
mov
mov
imul
mov
leave
mov
jnp
ja
nop
add
addb
out
popf
push
xchg
imul
ljmp
in
mov
lods
insl
loopne
sbb
andb
sbb
mov
xor
incl
push
sbb
dec
sub
ss
dec
xor
mov
decl
xchg
stos
outsb
dec
push
sub
adc
pop
fwait
es
push
icebp
cmp
ljmp
inc
push
data16
adc
mov
lret
pop
js
ds
outsl
fdiv
jmp
lods
fsubp
cwtl
sahf
enter
popa
test
mov
int3
lds
call
into
sbb
jno
push
pop
lret
jge
pop
les
mov
push
dec
pushf
incl
jne
jno
scas
push
pop
lods
sbb
fnstenv
inc
adc
xor
xorl
ss
repnz
xorb
mov
sub
xchg
test
sub
jb
inc
adc
je
sahf
lahf
push
ljmp
sub
xchg
fnsave
rol
or
fs
push
adc
and
in
movsl
outsl
out
filds
loopne
scas
hlt
cli
popa
enter
aad
xchg
clc
arpl
fidivl
mov
cmc
push
sub
inc
cli
js
es
ja
mov
mov
mov
nop
mov
push
sub
jb
jb
call
add
cmpsl
out
insl
mov
mov
fldl
cmp
mov
jg
dec
inc
and
movsb
pop
test
es
insb
sbb
jp
mov
mov
pop
call
push
adc
fld
mov
xor
mov
or
hlt
or
hlt
data16
jmp
push
inc
leave
inc
clc
pop
rcrb
xchg
shr
cli
fs
jmp
mov
inc
fmul
push
jno
incl
pop
ss
aas
pop
pop
mov
mov
mov
out
rolb
pushl
data16
mov
pop
pop
ds
inc
xchg
mov
call
gs
dec
mov
jnp
ja
xchg
jo
push
or
push
hlt
pop
jg
add
add
push
pop
adc
dec
mov
scas
movsl
xchg
out
dec
imul
jmp
test
or
lret
xchg
lds
iret
shl
xor
pop
or
lret
arpl
xchg
rorl
popa
jle
lcall
stos
test
aas
movsb
mov
test
pushf
fisttps
test
shll
lock
ljmp
mov
loopne
movsl
pop
push
push
or
push
insl
stc
test
ljmp
push
xchg
repnz
and
lcall
cmp
xchg
xchg
mov
bound
push
lds
push
pop
push
shlb
ss
cli
sub
loop
int
in
xor
decl
rclb
dec
repnz
adc
inc
pop
xchg
addl
arpl
imulb
nop
into
icebp
das
cli
cmp
or
jb
xchg
insb
aaa
arpl
leave
add
sti
bound
scas
sbbb
fbstp
fsts
lcall
sar
call
push
mov
sar
ret
test
mov
ljmp
aad
add
or
mov
jne
jmp
aam
push
shlb
in
mov
inc
data16
das
bound
cli
ljmp
xchg
rol
js
in
outsb
ljmp
pushl
pop
outsb
roll
mov
sarl
data16
outsl
cmp
cmp
xchg
stos
cld
call
cs
cwtl
jge
push
loopne
scas
mov
fmuls
adc
jmp
sub
jg
or
xor
xchg
adc
sub
push
dec
ret
je
lret
outsl
mov
lahf
jecxz
imul
xor
cltd
fcomip
push
mov
mov
xor
subb
cmp
push
add
inc
lea
clc
push
stc
test
push
dec
out
mov
pop
nop
or
push
cli
sbb
es
fdivr
xchg
cmpsb
icebp
fwait
shl
sub
pop
lahf
repz
adc
fistpll
or
mov
sti
in
fwait
jns
popf
pushf
inc
push
arpl
or
nop
pop
xchg
adc
mov
sbb
jmp
das
push
push
xor
movsl
add
out
adc
test
jmp
add
into
fisttpl
dec
out
push
xorl
aad
jmp
shrb
outsb
das
mov
test
insb
frstor
push
sar
jg
imul
pop
rolb
in
jle
jae
cmp
inc
lret
cli
repnz
xlat
call
mov
pop
pushf
or
mov
mov
xchg
pop
jne
fs
mov
mov
sbb
inc
push
and
lds
sbb
shll
push
lret
dec
dec
jmp
fdivr
fisttpl
cltd
mov
pusha
xor
push
mov
dec
fwait
xchg
xlat
jae
dec
xor
mov
sahf
dec
inc
test
sbb
das
xchg
loope
mov
sub
ljmp
or
bound
mov
loope
jp
loope
sub
mov
xor
movsb
popa
ljmp
out
xlat
in
or
out
xchg
push
sub
dec
xchg
cmp
jo
xlat
jmp
lock
lahf
push
adc
ljmp
cmp
std
inc
fnstcw
mov
pusha
mov
adc
clc
pushl
push
cmpsb
lret
imull
xorl
push
decl
ss
cmp
je
repz
mov
push
test
pop
add
call
pop
cmp
add
push
mov
jp
add
mov
icebp
jmp
fcomps
lahf
out
push
das
sbb
adc
jo
mov
out
pop
fstp
pop
nop
add
and
xor
call
dec
fxch
mov
mov
lahf
push
loopne
decl
rclb
dec
outsb
imul
adc
and
push
mov
mov
add
dec
pop
mov
mov
push
lock
push
jmp
js
xor
notb
jg
lcall
mov
mov
movsl
add
nop
jnp
cld
inc
mov
mov
call
insl
cld
mov
in
incb
stos
addl
jp
cmc
adc
inc
xor
call
and
movsl
and
jmp
in
mov
mov
jmp
andb
mov
push
lahf
iret
repnz
add
lcall
ljmp
and
and
inc
or
leave
sbb
mov
or
jecxz
add
xlat
xlat
cs
sbb
call
add
cs
cmp
xor
mov
inc
or
decl
mov
adc
mov
pushf
push
aas
outsb
fldl
lret
jecxz
mov
movsl
mov
jg
inc
push
or
loop
aaa
mov
mov
xchg
inc
mov
les
jmp
push
and
xchg
add
pop
imul
hlt
sbb
mov
adc
in
dec
cld
ja
decl
push
shl
mov
out
mov
sub
mov
pushl
inc
inc
inc
mov
jae
inc
out
popa
mov
testl
cli
nop
lea
mov
push
dec
xchg
xor
push
stos
mov
xchg
out
dec
xchg
dec
mov
dec
arpl
xchg
pusha
push
inc
dec
mov
adc
jecxz
sbb
sarb
cmp
jmp
cmc
aaa
mov
push
mov
lahf
and
add
push
sbb
ja
cmp
sbb
int3
into
mov
pop
lock
in
out
pushl
ja
shrb
sub
lock
fsts
add
xchg
add
incl
clc
mov
xchg
pop
xchg
loope
cmp
addl
pop
mov
in
call
rcrb
daa
lods
add
jle
movsb
mov
pop
cmpb
faddp
mov
aaa
mov
in
cmp
in
pushl
lods
sub
data16
add
add
mov
adc
icebp
ds
sbb
jmp
push
pop
out
imul
repnz
lret
jp
inc
jg
loopne
push
cwtl
xchg
nop
loop
and
mov
cmpsl
call
pusha
call
stc
pop
sub
xchg
test
fs
cmpsl
imul
out
cld
hlt
jo
out
dec
sbb
ret
cmc
stos
fildll
in
pushl
or
test
out
in
insb
pop
xor
lret
adc
push
incl
jae
mov
ja
mov
ja
mov
repz
ljmp
push
sbb
sti
or
imul
mov
mov
popf
arpl
xchg
push
mov
cmpsb
push
fdivl
data16
call
js
mov
or
mov
addb
lret
sbb
add
push
sbb
ffree
sbb
dec
pop
shl
sarb
mov
push
sbb
pop
mov
push
in
mov
ljmp
mov
int
lcall
js
xor
test
or
fsubrl
sub
mov
pushl
mov
mov
push
or
inc
xor
outsb
adcb
lahf
clc
pop
mov
jne
es
call
fs
xchg
xlat
sahf
dec
outsl
pop
in
rol
adc
inc
inc
jl
and
loope
loope
xchg
push
dec
cmp
out
cmp
cli
or
add
inc
mov
jae
lcall
mov
cmp
popf
mov
aam
daa
andb
out
fsts
adc
sbb
mov
das
test
decl
out
mov
pop
leave
jge
xor
stos
out
cld
call
mov
lds
mov
jae
mov
xchg
push
adc
lahf
lea
sub
and
cmp
loopne
aam
adc
adc
xchg
mov
dec
fwait
xchg
jl
sbb
pushl
mov
and
enter
mov
icebp
jg
dec
or
lahf
popa
fistps
ljmp
testl
or
mov
fsubrl
lcall
inc
test
xchg
ret
repnz
lahf
dec
pminsw
daa
push
and
hlt
decl
out
test
test
inc
xlat
add
or
mov
je
mov
push
pop
cli
sub
ja,pt
mov
add
push
or
fs
jg
bound
adc
lods
loopne
loopne
mov
fisttps
popa
pop
cld
lcall
cwtl
xchg
inc
inc
lret
arpl
cmp
cmp
pop
mov
cmc
dec
je
notb
leave
ret
mov
xchg
xorl
decl
add
nop
xchg
ljmp
xor
aas
ds
jnp
repnz
or
loopne
jl
pop
jae
cs
pop
iret
dec
or
pop
dec
ds
gs
xchg
or
je
xor
hlt
fcomps
je
dec
lcall
daa
in
iret
in
popf
loopne
in
movsl
adc
bound
or
stos
aad
push
add
add
mov
in
sahf
push
mov
into
inc
add
ret
cld
dec
punpcklwd
fisubl
mov
and
add
cmpsb
daa
or
incl
popf
stos
pop
loop
push
adc
outsl
sbb
mov
xchg
lahf
jmp
repz
fists
mov
inc
xchg
mov
ljmp
inc
ret
dec
aas
mov
xchg
enter
lcall
xchg
xchg
mov
mov
xor
or
ja
incl
xor
mov
inc
nop
out
iret
ficomps
lods
inc
inc
adc
fcomip
or
enter
ret
jle
sub
fs
out
push
ljmp
xchg
cmp
data16
mov
cmpsl
cwtl
aaa
arpl
mov
and
ljmp
cmp
cmp
ljmp
dec
lods
pushl
mov
and
mov
jnp
xor
xchg
pop
mov
adc
ret
adc
ljmp
pop
jg
clc
add
or
add
outsb
fprem1
test
jmp
lret
jle
mov
decl
pop
mov
sub
push
stc
jmp
or
add
aaa
std
jmp
addr16
xchg
fsubr
cli
lret
pushf
mov
das
fwait
decl
dec
mov
or
sbb
sbb
mov
push
lahf
or
je
rorb
ljmp
dec
clc
xchg
mov
cmpl
sahf
ret
inc
and
ret
daa
dec
fcomi
add
imul
bound
call
aam
aas
ret
cmp
loop
in
ror
lds
dec
loope
pop
movsl
inc
mov
xor
ret
dec
cmpsb
adc
test
xchg
mov
mov
mov
mov
dec
std
add
loopne
push
xchg
dec
sbb
rolb
popf
xlat
stos
add
or
pop
rolb
inc
imul
pop
jg
ljmp
ljmp
pavgb
cmpsl
popf
mov
mov
inc
call
in
inc
or
es
std
sbb
je
or
ret
add
jmp
push
mov
push
cmp
aam
and
xor
cmp
mov
jae
mov
iret
mov
jno
aaa
mov
xor
sbb
sbb
add
stos
pop
out
and
bound
rclb
mov
ljmp
inc
sarl
and
push
cli
lcall
out
pushf
xor
lcall
faddl
mov
es
sahf
xor
out
clc
dec
sub
jecxz
mov
outsb
cmpsl
pop
add
jnp
in
hlt
jae
cmp
clc
and
sbb
cli
into
cs
dec
int3
pop
out
push
scas
mov
xchg
xchg
push
cwtl
addr16
hlt
call
out
fdivs
enter
mov
jbe
push
sbb
mov
negb
push
or
mov
jg
push
cld
pop
cmp
jge
or
pop
aad
add
daa
pop
popf
sahf
addr16
sahf
jle
lcall
adc
jmp
xor
push
cld
loope
call
cs
pop
xor
or
push
mov
cmp
ljmp
aas
xchg
push
sub
and
xlat
dec
lret
clc
lcall
leave
movb
cld
test
aaa
cld
mov
clts
xor
divb
into
and
rorb
dec
lcall
push
jnp
mov
sbb
xchg
pop
pusha
lcall
dec
stc
loope
addr16
push
pop
cmpsb
scas
jp
cltd
sbb
cmpsb
and
or
mov
dec
mov
dec
sub
fidivrs
out
lods
scas
repz
out
and
pop
jnp
sbb
call
cld
ret
mov
fcmovu
in
or
push
iret
push
inc
in
into
lcall
pusha
push
pushf
les
filds
gs
adc
and
aaa
push
dec
movsb
nop
add
incl
push
stc
popa
cmp
adc
in
mov
iret
mov
lret
add
jp
mov
mov
jns
in
mov
sbb
hlt
adc
lahf
sub
push
inc
scas
lahf
cmc
xchg
in
movsb
push
jg
jecxz
loop
jae
sbb
cld
jecxz
orl
decl
jmp
inc
lea
dec
or
jge
pusha
push
in
mov
jnp
incl
imul
out
cmp
jns
pushf
fnstcw
incl
jnp
jg
fadd
jno
pop
mov
sbb
xor
push
mov
sbb
clc
jp
xchg
mov
sub
mov
in
lods
std
push
xor
ret
add
push
sbb
sti
and
xchg
dec
jg
mov
bound
call
or
pop
xor
xor
loopne
popa
call
xchg
icebp
xor
cmc
lods
sub
add
clc
mov
adc
or
das
mulb
sub
mov
fwait
decb
add
or
shll
mov
xchg
js
shr
adc
dec
inc
cmpsb
stc
or
fs
add
movsl
dec
jae
mov
jnp
jae
flds
adc
mov
test
xor
mov
xor
jl
jmp
and
cli
push
lret
xchg
lock
and
ljmp
data16
loopne
xchg
jmp
and
dec
mov
ret
mov
mov
dec
int3
push
add
add
gs
mov
sbb
addr16
mov
es
add
pop
fsubl
popf
neg
xchg
pop
push
push
sub
sub
popa
add
cli
jns
je
lods
or
push
scas
sub
sbb
pop
cmp
push
stos
pop
dec
sbb
shll
mov
sbb
ljmp
out
jp
push
mov
lcall
mov
shlb
and
xchg
dec
lds
rcrl
dec
jmp
dec
jmp
mov
mov
lock
adc
or
pusha
or
add
pop
jo
xchg
fbld
adc
xlat
cmp
jg
das
stc
mov
xchg
xor
bound
outsl
fldt
xlat
sub
enter
fwait
sub
fisttpll
pop
enter
mov
pop
add
decl
fistps
icebp
jge
mov
jl
jp
sub
call
or
lret
mulb
push
std
lcall
jo
pop
xchg
cmp
fisttpll
mov
aad
xlat
fcompl
mov
mov
std
call
sahf
sahf
pusha
outsb
xor
pop
mov
pop
scas
pop
jg
and
je
rol
cmp
push
xchg
cld
aaa
or
and
push
jl
mov
inc
mov
lret
lret
lcall
loopne
inc
dec
jle
mov
lods
jg
push
rorl
jmp
aam
incb
test
stos
adc
arpl
dec
popf
mov
ja
jmp
ja
dec
adc
nop
xchg
jne
jno
fisubrs
aaa
xor
cmpsl
jecxz
sub
ljmp
hlt
ss
mov
insl
ret
push
inc
mov
loop
pop
mov
lds
insl
sbb
or
es
dec
mov
adc
out
int
sahf
sub
cld
ljmp
cli
inc
or
out
add
std
or
mov
lret
data16
ret
push
lock
stos
dec
sub
or
dec
cmpsl
nop
sarl
sbb
sbb
icebp
inc
jae
xor
lcall
or
stc
jl
fucomip
push
sub
dec
imul
test
pushl
mov
ds
dec
cld
push
and
xchg
mov
scas
adc
cs
push
xchg
pushl
movb
add
mov
or
js
cmp
mov
in
xor
mov
xor
xor
popf
adc
mov
jmp
dec
mov
std
jecxz
gs
lret
aas
add
push
rcrb
jle
add
inc
and
jnp
pop
sahf
inc
add
xchg
or
mov
lods
mov
cs
stos
cwtl
push
mov
mov
lret
mov
mov
mov
lods
inc
xor
addb
cli
aaa
cld
mov
lock
repnz
push
cmp
dec
jns
pushf
ret
dec
or
scas
les
int
inc
mov
insb
dec
dec
or
fbld
jg
fisttps
add
jae
or
jp
jmp
xor
pop
add
jmp
test
mov
cwtl
js
inc
jns
and
aas
sub
bound
ljmp
into
add
add
ret
ficoml
xchg
into
cmpsb
and
sbb
pop
and
adc
decl
call
push
in
ficoms
lds
pop
mov
mov
cmpsl
jp
mov
jmp
out
mov
stc
cmp
shlb
or
push
enter
sbb
or
incl
cmp
cmp
addr16
add
or
in
adc
mov
rcrb
or
popf
pop
inc
mov
push
mov
repz
jmp
fcomps
cmp
sti
sub
inc
dec
cmc
sbb
popf
out
movsb
repz
lds
push
ja
fbld
ret
inc
ja
dec
adc
aad
pusha
inc
jo
dec
je
push
inc
movsl
test
jmp
pop
in
test
or
pushf
leave
pop
and
inc
int
cmp
cmp
cld
stos
pusha
pop
adc
pop
xor
dec
rcll
cmp
jge
insb
repnz
jno
rcll
dec
ljmp
clc
cltd
xor
jge
cltd
cmp
sbbl
inc
or
rorb
mov
in
cmp
inc
sti
decl
pop
inc
jg
adc
fimuls
ficompl
pushl
loop
sub
inc
int3
dec
outsb
fcmovb
cltd
push
xlat
jae
dec
pop
ret
ret
jnp
or
cmpb
jp
lods
inc
loopne
stos
int
xor
xor
scas
mov
jne
shll
data16
daa
dec
call
lods
ficoms
inc
enter
xor
push
xor
aaa
gs
xor
outsl
dec
adc
decl
xchg
cmp
push
lods
popa
cmpsl
dec
add
ss
test
lahf
dec
test
jp
lods
jmp
enter
mov
jbe,pn
pop
test
pop
cli
bound
ljmp
pop
lahf
fiadds
enter
xchg
mov
mov
cli
cmpsl
dec
pop
xorl
out
mov
or
ljmp
fs
xchg
and
push
jp
sub
lcall
aas
mov
shl
mov
xor
lcall
jbe
xor
mov
mov
lcall
xor
mov
or
call
mov
out
out
lock
mov
push
insb
adc
sub
xor
adc
add
mov
stos
or
decl
cmp
and
sbb
jne
icebp
xchg
in
inc
lock
add
mov
adc
das
es
push
xchg
pop
cmpsl
or
jge
clc
lcall
loop
inc
xor
or
push
mov
cwtl
push
outsl
clc
outsb
fnclex
lahf
add
aaa
fwait
or
mov
insb
clc
call
dec
mov
fwait
cltd
dec
cmp
lcall
sbb
add
mov
jp
push
xchg
loopne
dec
imul
sbb
dec
jns
xchg
cmp
hlt
pop
jl
mov
pop
orb
xor
or
nop
pop
fidivs
ljmp
cli
decl
movsl
shll
sub
aam
adc
sbb
int
and
lods
mov
or
pop
insb
mov
adc
mov
add
clc
insb
inc
lcall
jmp
movsl
loop
and
jge
jae
into
mov
cli
fimuls
out
jmp
xor
cmc
or
xor
adc
pop
push
es
inc
xlat
aaa
outsb
sbb
nop
sub
jmp
pop
add
mov
popa
adcl
int
movsb
cmp
call
jmp
out
xlat
inc
cmp
or
popf
sbb
inc
xor
sti
xor
dec
mov
sbb
loope
scas
incl
pushf
insl
sbb
arpl
insb
add
aad
mov
xchg
xchg
roll
clc
in
jmp
leave
push
ret
inc
mov
pop
pop
inc
mov
sahf
cmp
pushf
dec
mov
imul
mov
xor
ficomps
adc
enter
add
add
sbb
insl
jbe
push
fnsave
hlt
pop
into
dec
lret
pop
cmp
mov
lcall
enter
imul
inc
fwait
arpl
cmp
pushf
xor
mov
test
or
decl
push
inc
mov
ffree
dec
pop
mov
mov
cmpsb
mov
xor
jnp
jg
loope
push
jb
add
ljmp
jne
js
mov
jle
xor
in
or
icebp
loop
mov
test
dec
adc
das
cli
inc
jns
add
dec
push
test
xchg
call
add
enter
movsl
dec
aad
adc
ret
mov
fdivrp
in
clc
jl
cmp
fdivrs
lcall
fcomi
test
lcall
loopne
adc
repnz
lds
rcrl
loope
arpl
mov
mov
xor
cmp
lcall
sbb
loope
mov
out
into
pop
jno
fs
xlat
cmp
sub
inc
gs
lcall
lret
popa
sbb
xchg
in
mov
scas
mov
cli
pop
insl
testb
jmp
dec
shll
jmp
cmpb
jp
adc
decl
push
jo
out
push
cltd
lods
xor
mov
mov
cmp
ja
addr16
sub
mov
adc
outsl
jo
inc
shr
fcomip
outsl
xor
adc
mov
mov
lods
dec
pop
call
lods
sahf
jne
test
das
das
enter
mov
cwtl
dec
stc
cmp
icebp
lahf
mov
dec
test
in
movsl
mov
xchg
stc
sub
inc
push
jns
sub
pop
hlt
mov
mov
hlt
jmp
addr16
clc
sbb
fcoml
filds
in
sub
jle
ss
xchg
xor
xchg
lret
adc
fcompl
cmp
dec
aad
std
cld
lcall
cmp
jmp
or
mov
ljmp
push
and
mov
loopne
jcxz
xor
fcomi
lcall
inc
call
sbb
cmpsl
loopne
mov
call
xchg
subl
sub
daa
out
in
xor
fdivs
mov
or
cmc
outsb
pop
adc
fwait
sahf
mov
test
test
scas
and
and
mov
loope
pop
lcall
sub
add
xor
adc
lods
mov
xor
stc
mov
dec
mov
incl
std
pop
push
aam
fidivs
jns
or
fdiv
adc
out
jg
jns
pop
mov
cmp
shr
pop
fisttps
mov
inc
in
and
call
mov
lret
js
jl
cmp
mov
dec
rcrl
dec
mov
sti
pop
dec
inc
sub
inc
out
adc
jmp
jg
es
pop
pop
sbb
test
sahf
ds
adc
incl
aam
mov
pop
mov
xor
adc
and
call
stos
pop
sbb
xlat
movsb
sub
pop
xlat
fs
ds
test
lock
mov
ja
les
mov
int
scas
pop
and
mov
incl
mov
xor
mov
mov
movsl
fmull
lds
rclb
data16
ljmp
mov
lret
aad
cltd
lock
insl
int3
cwtl
ds
sub
adc
sar
jp
sti
lahf
jmp
pop
add
and
cmp
std
sbb
je
jmp
popa
movb
or
mov
push
push
kmovd
and
push
mov
loop
pop
sbb
cs
iret
bound
sbb
jmp
testb
repz
and
and
shlb
ljmp
fxch
ja
push
sub
sub
insb
pop
xor
aaa
fsqrt
pop
ss
fwait
cltd
jg
push
movsb
or
movsb
sbb
aaa
scas
or
sbb
pop
cwtl
idivb
add
gs
test
push
push
pop
pusha
fwait
cs
and
mov
ror
in
incl
mov
testb
lods
xor
lods
xor
lcall
jmp
dec
das
dec
mov
add
test
jle
idiv
add
mov
pusha
jne
daa
call
mov
pop
loopne
shll
incl
leave
mov
xchg
adc
hlt
imul
cld
sub
mov
out
and
lcall
dec
mov
adc
es
mov
daa
loopne
add
decl
jmp
inc
cs
jb
adc
push
xchg
jno
bound
out
int
pushl
mov
call
xchg
pop
lcall
scas
ffree
mov
es
mov
mov
and
or
in
enter
cmp
inc
cmp
jp
mov
popa
push
mov
inc
adc
xchg
rcrl
mov
jae
inc
push
and
pushl
add
lods
sbb
add
mov
loopne
call
sub
mov
mov
addr16
dec
xor
in
repnz
sar
mov
and
dec
adc
out
ja
push
inc
pushl
pop
test
or
andl
add
xor
cmovge
jge
decl
lock
push
fistpll
mov
fcompl
addr16
pop
jmp
scas
sahf
mov
push
cwtl
mov
out
notb
dec
test
cmp
outsb
add
aas
out
and
lock
push
pushl
mov
cmp
adc
dec
sbb
xor
jnp
lret
push
aaa
pop
or
xor
imul
jg
or
out
push
inc
pop
inc
cmp
xor
xor
movsb
call
nop
cmp
std
jmp
adc
push
sahf
push
in
test
sar
mov
pop
lods
xchg
mov
int
mov
push
jns
and
push
or
sbb
push
jo
or
adc
fists
ljmp
xchg
ds
repz
pop
jne
les
popa
inc
dec
mov
test
sti
and
pushl
std
xor
mov
adc
and
fistl
or
adc
stos
jnp
int
pushl
cld
sti
cmc
mov
test
sbb
and
fidivrs
repnz
in
adc
addb
jge
daa
fcompl
int
push
dec
inc
mov
das
mov
ja
or
jmp
xchg
dec
in
adc
in
mov
js
dec
jmp
push
fwait
sbb
or
xchg
push
jo
filds
ljmp
in
cli
adc
and
out
in
mov
adc
outsl
mov
std
call
xor
mov
jns
push
in
imul
subl
decb
push
mov
shlb
outsb
jno
or
and
jg
adc
or
jl
or
xlat
ljmp
in
movsl
sbb
ret
lret
lret
dec
mov
push
xchg
push
icebp
sub
ficoms
cmp
aad
test
mov
decl
mov
jl,pt
scas
and
dec
test
test
ljmp
jmp
jo
rcll
xchg
js
cmpsl
test
cmpsb
icebp
scas
cmp
mov
hlt
incl
loope
mov
mov
mov
xor
mov
hlt
jp
int
decl
xor
lods
adc
loope
xor
mov
jge
arpl
jmp
out
jno
addr16
adc
mov
aaa
xchg
nop
test
aaa
mov
fsub
mov
andb
pop
sar
addb
dec
imul
nop
mov
incl
jle
and
push
insb
push
cmp
mov
mov
xor
jno
pop
jp
mov
jns
push
mov
ret
popa
sub
ja
fs
aaa
in
loopne
xlat
pop
xor
notb
and
pop
call
std
adc
test
mov
inc
in
out
mov
xor
es
pushl
adc
dec
mov
bound
scas
xlat
lahf
enter
add
shrb
sub
in
add
loopne
or
or
add
push
int
mov
imul
add
and
rorb
sbb
jecxz
enter
and
ss
mov
ljmp
mov
shrl
push
mov
rcrl
xchg
imul
or
push
add
scas
pusha
shr
popa
test
lcall
aad
adc
jl
dec
mov
ret
and
push
jae
aaa
ss
pop
movb
pop
push
or
cmpsb
data16
adc
fsubs
aaa
or
ljmp
xchg
pop
hlt
mov
mov
testb
shrb
sar
incl
movsb
and
jae
in
jo
hlt
push
jmp
stc
push
adc
repz
lret
push
rorl
call
cs
cmp
sub
ss
jns
and
mov
sub
and
leave
or
ljmp
clc
test
cs
ljmp
lock
aas
pop
cmp
mov
int3
mov
lea
pushl
or
lret
jge
mul
adc
mov
mov
push
in
out
das
enter
pushl
das
and
idivl
xchg
pusha
or
in
outsl
cs
pusha
scas
cmp
fisttps
jle
push
xor
test
lods
stos
xor
jmp
xor
jl
sub
into
pop
mov
mov
mov
pushl
push
xchg
push
inc
push
je
jmp
inc
and
xor
mov
rcr
add
jmp
aaa
cmp
int3
dec
mov
fs
jg
stc
jnp
mov
popa
mov
out
mov
dec
call
aam
pop
dec
ja
subl
sbb
js
push
sub
ds
ss
push
decl
pop
dec
fldenv
imul
loope
ret
adc
lcall
mov
mov
and
ffree
nop
inc
nop
dec
pop
ret
sahf
lret
inc
cli
mov
call
or
cmpsl
lret
pop
lods
rorl
cmp
cmpsl
push
inc
xchg
cmpsl
subb
sarl
jle
cmp
inc
icebp
mov
inc
pop
ror
stos
xchg
mov
or
mov
push
loop
int
enter
mov
mov
fwait
jnp
adc
das
pusha
mov
popf
ret
inc
pop
loop
lahf
cwtl
mov
les
sub
hlt
pushl
std
xor
popa
xchg
clc
mov
xchg
jae
jmp
fwait
add
int3
jmp
jns
cld
mov
nop
sar
incl
out
or
ds
adc
lods
mov
inc
negl
ljmp
adc
faddl
pop
scas
movsl
fistpl
sub
pop
push
push
outsl
push
mov
pop
jae
mov
lods
lea
outsb
mov
jmp
repnz
fstl
sbb
std
outsb
cli
lcall
and
pop
es
adc
push
xchg
mov
jle
jnp
jg
subl
and
push
dec
addl
xchg
dec
repnz
inc
fdivrl
cmp
adc
mov
aas
mov
sarl
mov
mov
push
mov
push
mov
fcomip
push
push
jo
scas
pop
mov
jb
mov
mov
xchg
out
dec
push
decl
lock
mov
test
mov
aaa
pop
jle
out
cmpb
lods
fdiv
inc
pushl
test
jp
loopne
bts
jb
call
call
out
adc
sar
and
shl
ret
arpl
lret
jbe
lcall
cli
call
movsb
sub
jle
cmp
das
jb
pop
movsl
sbbb
inc
cmpsb
adc
aad
into
pop
jp
inc
jnp
insb
mov
inc
in
cmp
les
jmp
cmpsb
jle
xchg
sub
lret
sub
jnp
push
scas
or
jl
fdivr
enter
lods
push
sar
out
divb
adc
pushf
rorb
fimull
data16
dec
mov
mov
pop
mov
mov
jg
sub
or
push
adc
mov
test
push
pop
xchg
push
mov
and
push
lcall
call
idivb
push
bound
push
add
shrb
jmp
dec
in
hlt
inc
add
lret
aas
insl
push
fisttpl
ja
sbb
lock
call
mov
jo
mov
lods
push
sub
inc
call
mov
pop
ja
push
leave
jnp
jnp
std
push
sub
cmovo
out
jp
jecxz
dec
cli
adc
loope
push
inc
push
mov
into
ret
test
pop
pop
out
adc
mov
cmp
orl
pop
icebp
out
js
std
mov
xor
popa
sbb
mov
or
mov
ljmp
int3
mov
rorb
rclb
add
call
push
cmpsb
add
scas
scas
add
xchg
jg
outsb
test
jo
lcall
stos
lods
sti
cmp
mov
jmp
adc
inc
orl
mov
sub
movsl
icebp
sti
inc
addl
insl
push
cwtl
icebp
jp
xchg
push
rcrb
mov
cld
repz
mov
jnp
adc
int
dec
in
ret
cmp
ret
xchg
lock
dec
fs
je
mov
cwtl
pop
lock
ljmp
lds
adc
pusha
shrb
cmp
push
pop
ficoms
push
xchg
int3
xchg
adc
ja
adcl
inc
gs
mov
inc
sti
xchg
mov
clc
pop
cld
pop
icebp
jae
fsubrs
int
cs
in
bound
call
mov
add
fcoms
out
jmp
fld1
loop
dec
sub
dec
jmp
mov
rcrb
dec
leave
js
mov
pop
add
mov
xchg
add
mov
adc
inc
dec
pop
aad
popf
xchg
movsb
xor
xlat
dec
lods
jle
add
xchg
push
xchg
adc
jne
je
mov
xchg
movsb
pop
loopne
mov
pop
es
jnp
push
shl
and
mov
insl
mov
lods
aas
int3
imul
mov
push
cltd
lret
fdivrl
decb
mov
push
and
ss
aaa
push
push
or
imul
pusha
frstor
pop
sbb
rcr
adc
decl
insb
andb
cmp
cmp
xchg
inc
into
xor
mov
call
sub
in
test
adc
mov
xchg
pop
mov
lods
mov
cmp
sarl
es
sub
jg
mov
sbb
cmp
and
xor
xor
push
and
je
cmpsl
push
ret
cmp
xchg
gs
mov
mov
xchg
jmp
mov
mov
sub
imul
lcall
pop
inc
xchg
push
icebp
ret
in
dec
cmp
pop
rcll
sar
cmp
jbe
out
ljmp
pop
test
and
imul
das
pushl
or
adc
jnp
call
lds
lods
add
jmp
mov
xchg
insb
iret
pop
scas
icebp
sub
jno
aas
lcall
outsb
xchg
ljmp
pop
adc
in
js
inc
xor
cmpsl
pop
insl
inc
idiv
incl
cbtw
cmp
rcrl
in
add
icebp
int
push
sarl
roll
lcall
sub
mov
rolb
pop
fldt
mov
cmp
mov
testb
pop
push
addl
nop
negl
pop
mov
cmp
in
fwait
xor
daa
lcall
popa
xchg
dec
stos
call
aas
mov
fnstsw
dec
imul
incl
cmpsl
mov
scas
or
mov
adc
outsb
clc
das
xor
es
mov
ljmp
mov
pop
xor
subb
adcl
iret
push
xchg
jl
mov
outsl
repnz
sbb
push
push
jmp
mov
int
fcmovnu
cmp
aas
loop
js
lea
sbb
fcomip
ljmp
pop
pusha
pop
leave
adc
shl
dec
push
mov
imul
cmpxchg
jne
incl
xchg
push
iret
xchg
pop
ja
push
ljmp
adcb
cmp
pushl
fimull
iret
mov
dec
subl
mov
stos
or
sub
jmp
pop
das
hlt
clc
or
xchg
cmp
stos
push
pusha
jg
shlb
jae
out
fimull
push
sub
ljmp
les
adc
callw
sub
cmp
and
iret
sub
cmp
pushl
jl
movsb
xor
fnstenv
int
cmp
push
push
int3
jp
or
stc
int
out
fwait
clc
out
std
mov
pop
pop
or
mov
jg
push
fsubl
dec
clc
jg
mov
inc
pushf
cmpsb
fwait
or
or
cs
les
adc
mov
push
jle
jg
dec
pop
outsl
jae
mov
add
or
lods
cmpsl
jne
pop
mov
xor
jno
cli
sbb
push
sbb
dec
adc
push
pop
mov
stos
pop
repnz
mov
jo
mov
or
mov
test
scas
xchg
push
aad
jle
sub
pop
inc
mov
decl
jg
cld
test
mov
jge
adc
push
fistpll
xor
sti
leave
imul
decl
and
out
lods
jo
gs
xchg
fsubs
xor
std
jge
std
pop
out
hlt
xor
aad
mov
repz
jmp
sub
pop
xor
mov
add
test
dec
data16
push
mov
cmpsl
int
sarl
push
or
je
ja
fmull
sahf
add
add
cli
cmp
mov
add
ljmp
fisubrl
sbb
call
rcll
lret
and
mov
pop
data16
fisubrl
mov
mov
subb
repz
xchg
mov
pop
das
sarb
jbe
mov
cmp
dec
lcall
icebp
hlt
mov
and
lds
out
xor
pushl
addl
mov
mov
hlt
and
inc
adc
fcmovu
inc
loop
ljmp
lahf
sahf
lcall
loope
sbb
mov
sbb
sbbb
pop
adc
dec
adc
test
notb
sti
mov
enter
lock
ljmp
jns
add
xor
dec
es
outsl
loopne
lods
jmp
aas
push
es
jmp
in
mov
xchg
sub
and
xor
xchg
ss
push
imul
rolb
lret
test
adcb
pop
iret
ljmp
fs
popa
ja
pop
ret
push
cltd
bound
xor
add
xor
xor
shlb
inc
mov
daa
push
push
das
cli
ljmp
and
stos
xor
push
pop
and
mov
cltd
dec
push
mov
xor
data16
fwait
cmc
es
stos
pop
fwait
mov
das
popa
outsl
outsb
fisubrl
ljmp
or
mov
cmc
pusha
pop
clc
xchg
jbe
pushf
cli
pushf
movsl
movsb
dec
mov
jg
call
fwait
inc
insl
xchg
jb
or
incl
cmpb
inc
fucomip
loop
notl
add
inc
jmp
fnstsw
std
inc
loopne
fstpt
hlt
push
mov
cmp
sub
test
ljmp
bound
and
repz
test
mov
aas
inc
xor
adc
test
incl
jnp
test
push
pop
lock
jae
and
rcl
and
insb
dec
inc
mov
lret
ds
dec
lods
jno
mov
or
insl
jbe
jp
inc
arpl
movsb
xor
into
sti
aad
xor
sbb
mov
jmp
sbb
ret
popf
sbb
int3
sti
pusha
jb
clc
sbb
jg
daa
xchg
ljmp
sub
xchg
movl
inc
cltd
and
mov
cld
xchg
lods
xor
out
loope
stos
jle
sub
mov
sar
decl
push
pop
stc
dec
shll
icebp
xchg
sub
pop
iret
sahf
lahf
aad
jno
xchg
bound
decl
lock
cmpsl
sarl
cmp
mov
sub
lret
jae
jecxz
enter
xor
sub
mov
ds
push
ret
pop
test
hlt
sub
inc
mov
add
jle
xor
fs
sti
pop
cwtl
sti
sbb
inc
sbb
loope
int
daa
xlat
mov
xchg
mov
mov
and
or
sub
cld
mov
adc
pop
mov
mov
lcall
call
cmp
test
mov
sarb
cmpsb
fs
add
popa
out
fwait
push
hlt
out
pop
lcall
push
jg
pop
add
call
sub
out
fwait
xchg
dec
adc
sbb
xor
cmc
jo
icebp
cwtl
in
call
dec
mov
mov
and
out
in
inc
mov
das
stc
inc
and
adc
pushl
das
xor
daa
mov
out
fucom
and
js
jbe
xor
sub
incl
out
movb
push
add
mov
add
jne
in
mov
mov
pop
or
loopne
push
inc
pop
dec
clc
mov
mov
xor
popf
hlt
mov
pop
push
stc
decl
repz
les
fdivs
dec
xchg
int
jecxz
cmp
loopne
adc
ljmp
std
scas
out
dec
cli
rcrb
mov
add
cmpsb
push
in
into
jo
mov
mov
and
sahf
loop
divb
loopne
inc
ss
ljmp
out
test
xchg
stos
fs
call
adc
dec
iret
push
mov
movsb
inc
int
lock
insb
xchg
push
add
call
mov
cmc
jmp
addb
and
in
stc
pop
xorl
test
lea
cmc
sar
lcall
inc
into
fsubr
mov
cmp
dec
jmp
in
inc
cmp
mov
pop
cld
cli
or
insb
leave
lods
push
int3
enter
shrl
in
xor
or
insl
xchg
cmp
cmpsb
xchg
fcomip
jmp
fidivs
cwtl
int3
xor
or
or
test
sbb
stos
frstpm(287
dec
push
movsb
pop
cmp
lcall
cmpsl
popa
addr16
mov
das
inc
into
mov
mov
int
cmp
or
ljmp
dec
pop
sahf
sub
lds
fs
aam
mov
in
push
mov
cmp
stc
fcompl
or
scas
pushf
dec
mov
mov
inc
cmp
mov
cld
jmp
xor
xor
xchg
adc
mov
jg
test
push
add
jmp
aaa
and
out
dec
inc
mov
inc
xchg
push
rcrb
sub
daa
out
inc
mov
lret
sbb
int
insl
xor
pushl
mov
lods
mov
or
inc
jmp
mov
or
in
sahf
popa
pop
lret
pop
ljmp
ret
adc
sub
fiaddl
mov
jle
aas
inc
cmpsb
jg
add
xchg
cli
loopne
and
cmp
jns
mov
ljmp
pop
pop
push
in
shrb
push
in
aas
insb
lcall
and
int
test
inc
stos
push
jno
or
arpl
xor
jmp
in
test
incl
ja
jbe
sbb
out
stos
xchg
mov
ds
scas
icebp
test
cwtl
inc
ljmp
inc
mov
testb
mov
push
jae
mov
pop
les
ljmp
xor
mov
loope
adc
ss
mov
push
insb
mov
imul
pushl
fldcw
lods
add
jp
inc
and
sub
mov
jbe
xorl
fldt
mov
or
leave
inc
jns
out
xlat
adc
stc
jg
or
sbb
nop
aam
sub
add
ljmp
push
adc
fcomps
add
andb
test
adc
push
push
cli
or
jno
sar
call
jp
push
push
out
fldcw
subl
data16
mov
leave
xchg
loopne
sub
lock
lret
dec
xchg
xor
and
sub
addr16
daa
cmp
xchg
push
sub
and
jnp
jl
in
xchg
fidivl
jp
sub
sar
call
cld
pop
mov
mov
popl
fisubs
push
jbe
cltd
pop
jp
xchg
jbe
ds
adc
mov
fnsave
lcall
aas
clc
push
int3
sub
clc
fs
sbb
jno
xchg
inc
xlat
cs
xor
clc
pushl
dec
push
lcall
mov
aas
inc
inc
sar
jmp
inc
out
iret
icebp
push
lret
mov
push
push
leave
lcall
decb
cmp
adc
popa
mov
mov
loopne
hlt
sahf
ja
mov
push
mov
std
xchg
xor
or
pushf
repnz
pusha
ja
mov
adc
lret
incl
dec
insb
loope
and
sbb
push
ljmp
add
dec
sbb
inc
jle
lods
jbe
cs
and
icebp
inc
jnp
adc
aas
stos
movsb
mov
jg
inc
sub
inc
jb
nop
jle
pop
ficoms
cmovg
scas
xlat
jo
sti
call
cld
ljmp
into
push
mov
dec
add
and
fldcw
gs
lcall
or
pmuludq
lds
lods
mov
sti
jge
push
jle
jnp
and
fildll
mov
es
inc
mov
cs
push
in
je
inc
push
sub
incl
sub
stc
xor
sahf
shll
cmp
cltd
mov
add
pushl
cltd
and
repnz
or
lret
cmpsb
push
and
das
hlt
mov
fcmovb
das
inc
mov
cltd
jecxz
cmp
jecxz
xchg
popf
sub
push
fs
sbb
lods
int
sahf
repz
rorl
stos
jb
and
mov
popf
in
movb
add
roll
push
hlt
lahf
jge
add
cmc
fs
pushl
outsb
fldpi
out
jmp
scas
dec
push
inc
fsubrs
pushf
lcall
pop
es
decl
jecxz
das
fldcw
iret
mov
sub
in
sub
adc
and
jne
dec
pusha
shll
sub
adc
jmp
mov
loope
fbld
push
xchg
or
or
es
xchg
scas
cli
ljmp
dec
sbb
mov
push
lret
stc
rcl
sahf
and
xchg
sar
incl
imul
xchg
lret
sub
and
imul
add
lcall
pop
orb
call
popa
call
loop
cmpsl
je
popf
jmp
sub
cmc
testb
jae
jle
cmp
push
pop
or
inc
xor
rclb
lods
pushl
fistpl
xor
inc
icebp
lods
sub
loop
ret
lds
jmp
clc
pop
pop
in
fdivp
mov
mov
orps
sbb
xchg
aaa
std
mov
jmp
sbb
xchg
jno
mov
xchg
pushl
cmp
mov
dec
ret
jo
push
into
adc
or
or
iret
mov
cmp
add
enter
jp
lock
adc
out
loop
jbe
test
decl
es
xor
xchg
mov
imull
mov
sbb
repz
cmp
mov
ljmp
xor
ss
repz
iret
xlat
sub
cmp
repnz
cli
inc
cmp
adc
jl
mov
jo
das
clc
inc
xor
insb
sub
call
int
shrb
mov
mov
in
dec
dec
mov
xchg
mov
sbb
inc
sbb
fiadds
testb
push
out
cmp
push
mov
pop
or
outsl
adc
mov
and
test
shrb
cld
daa
xor
ljmp
xchg
mov
sub
sti
test
leave
adc
repz
push
and
shlb
cmp
pop
add
mov
test
mov
push
incl
push
ret
fs
fisttps
dec
jmp
xchg
mov
incl
and
lea
mov
xchg
and
pushf
cmp
pop
shrl
incl
test
jl
push
and
mov
jp
add
jg
xchg
cmc
dec
hlt
cmp
cmpl
mov
in
lock
imul
xor
movsl
jp
lods
xor
fwait
loope
cwtl
lahf
stos
mov
fsubrl
stos
incl
out
lock
sbb
sub
popa
cltd
pop
flds
mov
sub
xchg
or
jb
cmp
sub
out
pop
sbb
xor
ljmp
adc
outsl
dec
cmp
dec
test
popa
push
inc
mov
pushl
lret
loopne
or
xchg
push
int
outsb
push
dec
or
shl
and
out
mov
inc
fldl
arpl
test
inc
sub
incl
stos
cld
cmc
movsb
out
movsb
sub
out
test
fimull
fucom
leave
mov
push
in
loopne
stos
sbb
les
cmp
mov
lcall
jg
jno
andl
mov
dec
mov
shll
sub
add
lcall
inc
jg
mov
xlat
sbbl
dec
outsb
pop
add
cmp
mov
imul
outsl
mov
xor
arpl
push
call
fwait
ret
push
dec
mov
add
cs
inc
call
push
std
fcmovne
popa
xchg
arpl
arpl
dec
loopne
jb
ss
sub
decl
cmp
nop
fwait
add
xchg
sub
push
dec
lods
xchg
jecxz
mov
inc
inc
outsl
clc
jg
cli
pusha
dec
sbb
andb
adc
mov
cli
xor
cli
and
or
movsb
lods
shll
adc
jp
mov
cmc
out
mov
dec
mov
dec
inc
add
xadd
cli
outsb
xchg
xchg
dec
xor
pop
xchg
jl
xor
sub
xchg
inc
mov
outsb
fisttpl
loop
imul
ror
popf
or
enter
jge
fs
push
je
data16
test
std
xor
mov
cmpsb
cli
sub
out
shll
pop
dec
add
call
push
pushf
cmpsl
test
aaa
mov
mov
add
mov
pop
jl
sti
xchg
inc
lcall
jg
cmpsl
cli
dec
cmpsb
mov
xorl
test
outsb
or
cmp
mov
pushl
xor
sub
push
or
inc
outsb
push
mov
decl
test
jb
sbb
xchg
cmp
in
pop
mov
sub
xor
push
decl
xor
xor
xorl
scas
aaa
inc
ret
mov
inc
xor
lret
loop
mov
lcall
popl
jo
jae
lcall
js
dec
or
sbb
loop
into
test
js
scas
jmp
fsubl
sbbb
fistl
ja
lods
push
adc
test
cmp
adc
call
es
xor
std
lcall
es
xchg
icebp
pop
fdivr
sahf
push
push
cmp
mov
fsubs
flds
xlat
jp
in
add
lods
inc
inc
mov
stos
xor
or
jp
icebp
push
stc
xlat
cmp
loopne
xor
cmp
jg
ljmp
shl
xorb
out
xor
push
fldenv
xchg
adc
incl
sahf
dec
addr16
jo
mov
sti
cmp
scas
ljmp
and
xchg
repnz
jns
dec
popf
add
xlat
mov
pushl
sti
mov
jle
jge
nop
mov
jnp
out
xchg
rcll
sub
ljmp
jmp
sbb
in
lahf
jle
repz
or
cs
andb
pop
icebp
dec
stc
cltd
jl
popa
pop
fsts
ret
mov
adc
outsl
into
xor
std
fsub
enter
mov
lret
sub
getsec
insl
sub
sahf
xchg
cmc
cmp
cmpsb
push
out
or
sarb
call
inc
adc
dec
and
fisttpl
jmp
fsubr
fidivl
mov
mov
or
movsl
mov
adc
sbb
aad
jge
pop
push
stos
push
mov
mov
sti
shlb
and
ja
push
xchg
jbe
pop
mov
decl
cmp
xchg
clc
mov
dec
sub
pop
push
subb
dec
cld
cmp
cmp
inc
aam
push
imul
clc
pop
inc
inc
push
and
je
mov
cli
mov
adcb
cmp
insb
lock
pushl
call
in
in
mov
mov
fcmovbe
pop
push
mov
lcall
inc
mov
lods
and
shll
flds
xchg
pop
mov
mov
call
mov
roll
mov
clc
mov
mov
sub
call
mov
mov
push
cwtl
rcll
mov
fistps
push
shrl
std
shrd
pop
je
mov
add
pushf
mov
sbb
stos
cmp
mov
ljmp
xchg
adc
add
inc
adc
fwait
repz
xchg
lret
arpl
or
cmp
inc
addl
push
xchg
cmp
jae
scas
mov
mov
and
fwait
lret
add
jbe
pop
push
sar
scas
pusha
sbb
jge
iret
out
mov
pushl
dec
popf
xor
imul
adc
mov
lods
mov
lcall
loop
test
mov
test
jnp
push
cmp
or
clc
and
in
xchg
fwait
imul
ja
shrb
outsl
pop
sbb
lcall
test
jge
xor
scas
push
xchg
or
test
and
xor
mov
xor
in
iret
inc
rorb
mov
push
daa
daa
mull
jmp
mov
shlb
pusha
rcrl
cmpb
pushf
jmp
movsl
out
cmp
pop
cmp
pop
rolb
cmp
daa
enter
sub
pop
inc
or
fwait
inc
loopne
xchg
cmp
pop
sub
jmp
ljmp
data16
inc
jle
rcl
jmp
fnsave
and
sub
pusha
adc
fdivr
cmp
push
fs
fldl
and
pop
dec
popf
out
add
incl
cmp
aaa
mov
imul
cmp
or
mov
lret
mov
inc
inc
inc
jge
mov
addb
mov
je
jmp
xor
dec
cli
inc
push
call
cli
xor
add
dec
test
lds
pop
cmc
ljmp
popa
mov
test
push
cmpl
lods
or
lods
mov
inc
xchg
das
inc
loop
and
cwtl
cmpsb
or
mov
lret
repz
inc
fnstenv
or
sbb
data16
or
in
jne
orb
cmp
es
cli
jmp
push
mov
mov
cmp
inc
cli
lcall
xor
sbb
jmp
fcomip
orl
xchg
sarb
mov
jge
jg
loop
cmp
xor
fucomi
leave
mov
inc
xor
xchg
loopne
push
bound
xchg
push
lahf
pushf
mov
popa
and
fadds
mov
xchg
dec
xchg
test
xchg
inc
ja
ficoml
enter
call
lret
or
dec
push
mov
scas
jle
inc
or
push
xor
test
dec
push
jnp
mov
aaa
sbb
hlt
mov
xchg
rolb
pop
mov
pop
xchg
adc
push
pop
jnp
sub
pushl
xchg
rol
and
and
mov
sub
adc
pop
sahf
xchg
decl
icebp
inc
imul
adc
movlps
mov
movsl
pop
pop
mov
cmp
push
push
iret
das
imul
mov
popa
jnp
mov
mov
int3
adc
pop
jno
cwtl
jmp
call
pushf
sub
ja
add
fwait
inc
lods
cs
dec
lock
jbe
mov
jmp
pop
movsb
cmpsb
ret
push
shrl
inc
add
imul
fdivrp
pushl
and
loope
cmp
daa
mov
fs
lds
test
xchg
jmp
lcall
rcl
pop
push
jo
fstl
jg
sub
inc
push
ret
push
pop
pushl
ficoms
xor
add
push
cmc
mov
fistpll
inc
sbb
mov
and
or
mov
stos
lret
lcall
pop
pop
fsubrp
in
push
insb
nop
arpl
mov
pop
icebp
ljmp
and
xchg
inc
push
loop
outsl
xchg
movsb
sti
push
hlt
lcall
test
mov
jg
fldl2t
mov
xchg
xor
xchg
inc
xor
imul
mov
cli
adc
xchg
lock
out
call
lret
push
outsb
in
cld
xchg
add
pop
mov
in
out
mov
popa
subl
fsubl
insb
jg
jmp
jle
into
std
cmp
jb
push
mov
pop
jle
loop
inc
cmp
push
or
xchg
add
jae
mov
adc
mov
scas
adc
inc
int3
add
cltd
xchg
lcall
inc
jmp
adc
sbb
jg
fcoms
lds
adc
jmp
outsb
out
jg
lcall
mov
mov
add
mov
adc
xor
and
jne
outsl
cli
pushl
adc
aad
jno
xchg
cmpsl
rorb
enter
jmp
jmp
hlt
mov
je
leave
nop
out
in
jg
jnp
mov
jne
shl
out
adc
mov
xchg
xchg
dec
add
dec
arpl
or
push
fcmovne
xchg
jmp
mov
inc
outsl
mov
mov
mov
mov
mov
push
leave
push
jb
fidivl
and
jo
pushl
jmp
imul
adc
jo
xchg
adcl
mov
cltd
dec
je
lock
mov
push
jl
adc
ficoms
inc
out
inc
repnz
or
test
mov
pop
push
inc
dec
cmp
inc
clc
ljmp
cmp
std
test
arpl
aaa
and
add
mov
ljmp
ljmp
fldt
push
sub
xchg
insb
cld
xchg
call
jno
jmp
shrl
imul
push
sub
pop
test
es
leave
decl
pop
cmp
lret
sbb
xor
inc
stos
pop
mov
imul
dec
into
sub
fbld
dec
inc
insb
sbb
mov
xlat
mov
and
jmp
pop
mov
movsl
mov
call
mov
mov
stos
sbb
mov
pushl
sub
mov
lcall
js
out
or
lcall
je
sub
lcall
out
daa
stos
cmp
or
dec
decl
jo
push
add
movsb
dec
rorb
sub
or
int3
or
decl
movsl
loope
loop
ja
mov
mov
cli
stos
jp
inc
aam
movsb
je
stos
jnp
adc
push
clc
jae
dec
into
test
cmp
loope
mov
jae
mov
pop
xchg
jb
jle
jp
outsl
ljmp
cmpsl
adc
pop
mov
mov
cltd
out
jg
or
int3
cmpsb
ret
stc
inc
mov
and
loop
jno
push
out
adc
mov
fimull
test
dec
incl
hlt
lahf
inc
pop
lcall
mov
sbb
ret
pop
in
jmp
std
test
lcall
lds
dec
mov
jbe
lods
xchg
fistl
loopne
icebp
push
and
cmp
stc
js
ljmp
fnsave
adc
mov
stos
sahf
mov
repz
push
xchg
mov
out
cmp
mov
adc
cmp
mov
sbb
das
add
negb
pop
cli
mov
jns
pop
mov
mov
push
hlt
decl
int
dec
and
fcmovnu
test
xchg
sti
pop
insb
add
mov
out
push
mov
enter
cmpsl
lds
mov
inc
mov
dec
ljmp
sbb
dec
outsl
test
xlat
add
inc
rcrb
dec
pop
xor
movsb
xor
scas
icebp
sbb
icebp
mov
add
jl
and
jmp
leave
cmc
outsb
mov
fs
call
xchg
dec
pusha
inc
or
stc
addb
inc
add
std
cs
rclb
arpl
inc
fisttps
sbb
dec
cmp
ljmp
mov
enter
shlb
scas
loope
push
es
and
push
ss
lcall
fdivs
push
push
insl
jb
pop
mov
mov
insl
shl
push
xlat
rolb
cli
fcom
push
sub
xchg
loopne
lcall
pushl
pop
jae
mov
dec
loopne
mov
jge
or
mov
daa
inc
inc
movsb
test
mov
lea
pop
ret
iret
in
shrb
jmp
cmp
mov
dec
divl
xor
xor
xchg
push
jnp
mov
outsl
insb
test
cmp
imul
jne
in
int
xchg
adc
pop
add
cmc
add
incl
aam
sub
and
rcrl
mov
cwtl
fdivrs
and
rolb
imul
decl
add
sbb
sbb
ljmp
inc
adc
add
int
sbb
aam
cli
or
jbe
test
mov
fsub
repz
push
pop
and
jecxz
jnp
dec
stos
push
sar
push
dec
int3
sbb
mov
cs
aad
hlt
jmp
call
push
xor
mov
mov
divl
out
nop
insl
push
iret
xchg
xchg
and
and
mov
decb
mov
pushl
inc
nop
pop
cs
gs
imul
repz
fcmovbe
add
xor
xor
push
add
test
mov
mov
cs
fmull
out
jl
cmp
mov
jne
push
cmp
jg
cwtl
bndldx
cwtl
dec
rcrl
mov
inc
fs
dec
stos
xchg
out
int3
pop
sti
popa
inc
imul
push
mov
pop
or
dec
mov
dec
inc
jno
adc
pushl
pop
cmc
pop
fimull
mov
push
adc
jge
ja
xor
inc
mov
push
xchg
in
decl
test
pop
lods
sub
pushl
rcl
jmp
enter
jns
sub
ret
pushl
mov
sbb
lea
jne
sbbl
call
bound
je
dec
and
movsb
aad
inc
call
inc
lea
stos
pop
xor
xchg
lods
and
and
pushl
dec
or
dec
mov
pop
cmpsl
mov
jmp
and
nop
add
xor
cli
decl
sbb
movsl
addl
push
jge
out
fisubrl
movsl
incl
and
inc
push
push
xor
mov
fcos
call
adc
daa
sbb
or
pop
gs
xchg
pop
mov
ja
mov
sbb
jmp
ljmp
orb
mov
sbb
cmp
pop
pushf
sti
ja
and
pushl
or
out
and
add
fistps
mov
test
jns
in
sbb
sbb
and
pushl
mov
dec
addb
scas
pop
iret
aaa
ljmp
scas
lds
cmp
sti
mov
data16
or
push
inc
jp
cmp
xor
cmp
sbb
ljmp
dec
idivb
btc
das
and
inc
aaa
rcll
sub
into
mov
int
and
call
jnp
lock
in
jle
sbb
out
or
and
mov
dec
xor
decl
iret
arpl
pop
fs
dec
loopne
mov
sbb
and
push
or
lcall
fidivrs
push
lock
cmp
das
cli
jmp
add
pop
pop
stos
inc
call
xchg
and
add
in
cmp
decl
lret
mov
and
xchg
push
cmp
xchg
movsb
mov
pusha
jbe
int
add
ljmp
and
jle
mov
cld
xor
sbb
inc
dec
mov
cmc
ljmp
and
add
stc
ljmp
push
mov
adc
ljmp
and
rcr
nop
iret
and
lock
xor
and
mov
xchg
xchg
icebp
sbb
or
pushf
inc
mov
lcall
mov
daa
xchg
sbb
popf
pushf
and
sbb
cmp
sbb
stos
mov
xchg
lret
ljmp
adcb
es
je
push
lret
out
les
mov
nop
lea
iret
xchg
xchg
add
jmp
loop
in
mov
shll
sub
add
and
mov
ljmp
mov
add
popf
in
in
ret
or
incl
and
data16
jnp
jl
sub
ja
inc
sar
dec
mulb
stos
xchg
test
scas
loop
xchg
in
mov
push
pushl
jg
push
xchg
lods
pop
cmp
jmp
int
xor
cmp
es
cmc
ljmp
in
rclb
pop
rcll
das
xrelease
aaa
push
dec
subl
aas
fs
test
jmp
fs
sub
lahf
sbb
dec
rcll
mov
cmp
mov
push
cmp
dec
add
jmp
push
jae
push
add
out
jp
cld
xchg
into
dec
cmp
lcall
pushl
aad
mov
mov
mov
sub
pop
loopne
xchg
sti
dec
fwait
jmp
loop
xlat
insl
mov
loopne
add
adc
add
inc
outsb
sub
or
clc
mov
lret
pop
adc
test
mov
jg
lds
pop
leave
mov
lods
arpl
aad
mov
mov
dec
xor
incl
rorb
icebp
in
fistl
fadd
lods
sbb
fs
aaa
pop
xor
ds
push
jle
mov
test
xlat
mov
pop
shrb
sahf
sbb
movsl
xchg
mov
add
mov
xchg
sbb
subb
bound
jb
jo
dec
ja
xchg
adc
add
pop
outsb
sub
sub
ficoml
inc
loopne
inc
mov
lds
fwait
cmc
ljmp
scas
lcall
add
leave
or
bound
repz
mov
stc
sbb
and
incl
jb
pusha
rcrl
ds
or
int
jnp
jns
lds
into
loope
andb
jge
ficompl
iret
mov
or
call
jmp
inc
nop
push
pop
in
pop
dec
xchg
mov
push
inc
or
test
jl
pop
pop
and
jecxz
pop
pop
into
and
scas
fisubl
push
out
sbb
mov
sbb
mov
jnp
and
fwait
dec
and
out
aam
push
jne
jg
or
and
pop
mov
push
or
adc
inc
cld
fmuls
shufps
jmp
popf
scas
push
movsl
jae
and
or
ljmp
cs
into
jbe
test
cmp
pusha
clc
mov
in
and
decl
push
dec
andb
mov
arpl
pop
outsl
pop
and
test
xor
cmc
pop
sbb
sbb
arpl
mov
fwait
xor
test
push
pop
xor
jb
mov
scas
nop
hlt
mov
mov
mov
call
fcomp
mov
push
fnstsw
mov
push
jb
insl
imulb
stos
ljmp
mov
xchg
sti
test
pop
in
test
push
jno
pop
rcrl
gs
not
fsts
sbb
sti
sarl
xor
mov
mov
outsl
gs
roll
dec
xchg
or
cli
jg
xor
daa
loope
mov
lods
xchg
iret
test
pushl
mov
fs
jb
inc
fxch
arpl
shll
popf
iret
cmpl
push
inc
test
jns
cmp
jbe
mov
push
out
sarb
dec
in
data16
fs
pushl
add
into
push
ljmp
stos
inc
not
xchg
xor
mov
sar
call
lret
mov
in
out
mov
std
xchg
call
sbb
or
xchg
push
out
out
test
jecxz,pn
mov
in
rorl
sub
cmp
adc
dec
pop
cli
inc
push
mov
sbb
push
lret
pop
lea
mov
fwait
push
and
lcall
jge
cltd
sarb
adc
mov
jmp
pop
fcmovb
sti
sbb
sti
inc
dec
add
mov
ljmp
fldenv
outsl
cli
bound
and
push
jl
xlat
xor
dec
adc
frstor
js
push
add
ds
mov
inc
test
jmp
fsubs
pop
xchg
mov
xor
xor
jnp
cmp
mov
jg
ljmp
and
jae
jae
lahf
sbb
out
outsl
add
cmp
es
decl
pop
inc
mov
jnp
mov
sbb
or
mov
push
or
incl
pop
and
pop
xor
jle
fnsave
or
xor
push
mov
sbb
test
xchg
shlb
cmc
pop
je
pusha
scas
scas
lcall
ljmp
mov
jle
sbb
test
inc
sbb
rcll
call
inc
cmp
pop
push
xlat
jg
ror
test
mov
dec
mov
aas
movsl
data16
xrelease
jge
fisttpll
or
xor
or
das
mov
imul
loop
lcall
data16
xchg
push
push
scas
xchg
and
faddl
and
call
cmp
lcall
clc
mov
and
or
push
push
into
lods
xchg
cmp
mov
pushl
enter
adc
push
cwtl
inc
nop
push
inc
xchg
mov
clc
popa
mov
sub
adc
pop
jmp
adc
sbb
mov
pop
std
xorb
cmp
jns
ja
shl
imul
and
mov
jmp
cld
and
pop
cmpl
cmp
cli
out
mull
mov
dec
sarb
cld
jmp
iret
inc
out
ja
cmp
popa
cwtl
adc
test
insl
out
inc
sti
nop
xor
call
jmp
xor
xor
andb
insb
push
xchg
mov
pop
mov
aas
xlat
das
fstps
sbb
sahf
sbb
sbb
ficomps
and
loopne
add
xchg
xchg
pop
cmpb
cmp
pop
adc
fwait
leave
inc
mov
icebp
imul
add
cmpsb
rcl
mov
std
push
xchg
or
mov
mov
decl
ljmp
clc
and
sbb
or
pop
shll
cli
call
pop
inc
rolb
repz
fwait
mov
add
outsb
dec
aad
ljmp
dec
xchg
insb
arpl
xor
repz
push
cmp
pop
mov
and
sub
and
mov
push
fwait
js
jnp
and
fdivr
sbb
xchg
outsb
adc
sub
in
dec
xor
pushl
int
in
ret
hlt
movb
cs
xchg
pop
jae
dec
adc
repz
mov
adc
out
lret
jnp,pn
iret
inc
fwait
insl
ja
es
mov
fbld
adc
fildll
call
inc
andl
ljmp
cs
pop
lahf
inc
fisubs
sti
inc
sbb
adcb
popa
test
push
data16
add
jmp
mov
mov
sahf
mov
dec
jge
sbb
scas
cltd
xor
call
insl
push
adc
inc
jg
popa
movl
mov
popa
hlt
movsl
push
rorl
ficomps
mov
jg
lods
setbe
call
scas
dec
mov
mov
xchg
dec
imul
pusha
cld
call
pop
push
inc
test
into
pop
xchg
jg
imul
dec
mov
icebp
jno
xchg
arpl
lea
clc
push
xor
inc
aad
incl
mov
xchg
and
pop
aas
pushf
or
outsl
mov
hlt
cmp
jmp
xor
and
ljmp
fst
adc
push
lods
fisubrs
mov
ret
jmp
dec
popf
inc
popf
mov
lds
decl
sbb
dec
leave
dec
bound
add
adc
mov
ljmp
test
sub
adc
int
push
test
and
je
movsl
xor
adc
cld
ficomps
pop
out
js
das
xor
insb
repnz
repz
call
ljmp
lret
vpshufd
imul
ret
jecxz
push
lock
subb
in
push
jbe
push
xchg
or
cmc
insb
and
xor
cwtl
inc
pop
jge
sub
jmp
shll
das
negb
mov
mov
and
or
dec
int3
push
xchg
xor
jbe
call
xchg
xor
inc
dec
cli
jae
movsl
dec
and
jecxz
js
lods
aam
cmp
jnp
mov
pop
les
pop
dec
sbb
repz
lock
cld
or
aas
dec
sbb
das
ror
pop
lods
pop
and
popa
movsb
rorb
insb
pop
in
sub
jae
jo
dec
roll
cmpsl
fbld
fsubl
adc
xor
inc
out
fists
lock
cs
xlat
or
fbstp
out
xor
push
imul
mov
int3
push
mov
popl
lods
lahf
pushl
rcl
jb
add
jns
movsl
ret
mov
insl
add
or
pop
in
fdivp
jg
js
push
sbb
inc
cmpsl
std
mov
add
in
adc
lea
pop
mov
xchg
pop
rclb
pop
and
fsubl
xor
jmp
xchg
test
sbb
pop
mov
adc
and
clc
mov
cld
pop
ss
call
sbb
adc
xchg
js
xchg
cmp
xlat
or
outsb
adc
cmp
jp
shr
ret
test
call
jg
dec
xlat
cli
ret
daa
enter
add
icebp
adc
pop
jo
call
pop
cwtl
in
sbbl
jp
or
add
pop
sub
xor
lcall
fucomi
cmp
push
scas
jne
adc
fucomi
int
mov
clc
pushf
mov
sub
rclb
mov
sar
sub
inc
movsl
pop
jle
jge
and
add
sub
sub
call
xchg
pusha
stc
loope
mov
lcall
loop
xor
stos
xchg
ret
and
push
mov
sbb
sub
insb
pushf
jmp
mov
imul
int
bound
xor
arpl
push
and
mov
xchg
add
ljmp
mov
xchg
mov
xchg
mov
or
jl
push
jmp
imul
push
inc
test
ljmp
in
shrl
xor
push
cmpl
bound
push
sbb
inc
pop
movsl
gs
mov
pop
jl
mov
xchg
in
mov
ljmp
xor
sub
popf
lahf
mov
cmp
mov
or
movsb
dec
push
xlat
rorb
in
jle
leave
dec
cs
out
rorb
lcall
xor
adc
int
xchg
push
cs
cli
ljmp
push
fs
outsl
in
jnp
pop
or
adc
jmp
nop
jecxz
mov
mov
adc
addr16
cmpsb
mov
decl
adc
mov
adc
fbld
enter
icebp
dec
fiaddl
xor
jge
and
or
mov
xchg
push
pushl
dec
aas
adc
mov
addl
fcompl
ds
push
sbb
jns
cld
pushl
fwait
scas
mov
cmp
sub
mov
inc
dec
icebp
mov
push
jg
sub
adc
inc
dec
dec
cmpsl
jle
das
xor
fucomp
movsb
into
and
scas
stc
movsb
outsl
jae
dec
pop
cmc
shlb
pop
cmc
lcall
and
inc
iret
int
fisubl
mov
stos
inc
out
bound
adc
jnp
sbb
xchg
movsl
out
xchg
ss
out
mov
int3
cld
mov
xchg
mov
in
xor
aam
stos
arpl
sahf
or
pushf
ret
rorb
cmc
shrw
mov
sbb
sbb
pop
inc
enter
cmp
sub
pushl
in
push
cmc
repz
mov
mov
clc
sbb
fiadds
enter
jg
gs
rclb
or
add
mov
in
pusha
imul
icebp
mov
shll
lea
out
mov
xor
mov
mov
ja
xchg
mov
int3
sub
sbb
sar
dec
and
mov
test
mov
cmp
add
xor
pop
inc
and
inc
or
jns
mov
mulb
xchg
mov
test
adc
mov
shrl
jne
sti
pusha
cmp
pushl
es
std
mov
sbb
fiaddl
jbe
leave
mov
and
js
cli
jl
roll
xchg
cli
jne
push
dec
sbb
dec
mov
push
xchg
popa
cmp
fsubp
cwtl
incl
add
rorb
dec
sub
jecxz
jle
aas
icebp
incl
or
xchg
test
sub
pop
jecxz
dec
mov
xchg
xorb
ljmp
out
adc
push
push
xchg
daa
test
or
adc
and
pop
jae
xsave
ss
ret
shlb
fsubrs
sbbl
fs
jno
ret
incl
in
mov
jo
mov
pop
and
cld
jg
test
call
xchg
rcr
or
inc
repz
jns
xor
or
xor
jmp
mov
cmp
aad
push
cmp
roll
dec
test
dec
jg
or
xorl
fistl
fcoms
out
push
mov
pop
dec
sbb
lcall
mov
and
test
adc
scas
cli
ljmp
xor
imul
push
cwtl
loop
or
sahf
mov
aas
ret
scas
pop
cld
mov
movsl
sbb
sbb
nop
lds
cmp
call
adc
dec
inc
lock
divl
data16
nop
imul
or
ret
mov
dec
cmp
shll
inc
pop
mov
xchg
test
ljmp
pop
inc
nop
and
jne
cwtl
cmc
ret
pushf
icebp
mov
xchg
and
jns
pop
add
nop
das
rol
pop
cmp
xchg
addr16
pop
mov
xor
ficompl
je
es
ljmp
nop
cmp
ds
cmpsb
scas
dec
mov
mov
inc
cmp
push
das
dec
cltd
jmp
add
das
mov
aad
lds
push
insl
cmpsl
sub
fisttps
imul
into
xchg
ret
xor
dec
push
cmp
int3
cmpsl
sub
ja
pop
adc
add
insl
dec
dec
clc
jge
jbe
into
call
in
fcomps
lock
or
jp
sbb
mov
insb
ficomps
ljmp
push
loop
mov
fcomps
sbb
xchg
test
shlb
and
rolb
dec
mov
push
mov
mov
call
out
jb
in
jge
xchg
mov
jmp
mov
sbb
insl
jge
ljmp
jg
rcrl
ror
jg
int
mul
stos
mov
into
cwtl
cmp
mov
ficoms
std
lcall
mov
int
jbe
neg
loope
je
daa
sbb
stos
out
mov
call
cmpsl
int
dec
pop
mov
cmp
add
adc
mov
jb
sarb
mov
fstpt
pop
xor
lods
jb
push
jg
jae
jmp
test
adc
insl
mov
leave
cmc
push
push
and
mov
inc
mov
pop
sbb
mov
jl
ret
sbb
subb
loopne
pop
cwtl
pop
cmp
fidivs
mov
fcmovb
sub
sarb
push
decl
add
popf
jne
cwtl
push
lods
sub
ljmp
daa
pop
hlt
shrl
inc
ret
sbbb
in
ljmp
xchg
jp
ret
cmp
sbb
repnz
jo
adc
dec
out
pushf
xchg
ret
andb
sahf
loopne
test
pushl
faddl
xchg
addr16
sub
push
pop
push
in
adc
lods
lcall
lcall
stos
sbb
pop
fwait
pop
aad
data16
mov
sbb
mov
and
decl
push
je
dec
les
cmpsl
loope
and
push
icebp
ljmp
xchg
inc
jns
jns
fdivp
pop
add
and
jge
sbb
decl
or
mov
stos
mov
mov
jae
xchg
jle
cmpb
push
ss
add
inc
sbb
push
decl
cmp
mov
aas
iret
fcom
int3
xchg
divb
jg
dec
stos
pop
cltd
add
pop
sbb
mov
sbb
addr16
dec
pop
mov
xchg
cmp
dec
out
inc
dec
mov
adc
add
lcall
jmp
mov
int3
pop
and
cld
imul
fstl
add
subps
mov
icebp
mov
mov
insl
xor
push
test
jns
loope
fcomip
push
dec
fisubl
jmp
leave
sbb
jbe
cmp
dec
sbb
dec
pop
jnp
or
sti
dec
stos
xor
sub
out
cld
xor
lcall
bound
cli
hlt
xor
inc
lods
xchg
loopne
push
ds
mov
inc
cmp
xor
ljmp
mov
nop
outsb
cli
dec
sub
mov
rol
push
jmp
xor
call
stos
testb
jl
sub
push
in
sub
fcomps
mov
cmp
clc
pop
add
inc
mov
mov
pop
xchg
and
imul
decl
ja
pop
jno
dec
sbb
je
sbb
xchg
lahf
in
lahf
dec
shlb
incl
push
fists
jae
sub
popf
sbb
les
test
js,pn
std
aas
testb
call
ficoml
jecxz
jle
and
insb
add
mov
in
clc
fcompl
into
add
add
push
or
lcall
stos
sbb
jp
cltd
mov
imul
aam
or
test
popa
lcall
test
stos
mov
xor
sti
mov
sub
test
or
inc
push
sub
call
pop
pusha
adc
enter
push
repnz
into
mov
mov
lods
mov
pop
lock
push
push
lods
mov
lcall
aam
pop
aaa
nop
fcomi
ljmp
mov
loopne
std
fisttpl
push
and
push
mov
hlt
and
lods
lcall
sbb
scas
sbb
stos
dec
mov
inc
sub
dec
rcl
xor
incl
mov
pop
push
pop
rcrb
outsl
xchg
stos
scas
mov
iret
mov
sbb
pusha
lods
rclb
incl
in
pop
test
push
cmpl
pop
fists
cmp
jae
sub
aaa
mov
pushf
lock
popa
xchg
inc
call
mov
dec
cmp
mov
cli
pop
mov
pushl
inc
xchg
das
push
pop
xor
xchg
jns
jmp
loope
cmp
test
jae
push
aas
add
hlt
clc
les
xchg
xchg
sar
ljmp
lods
into
inc
pop
dec
mov
ret
icebp
or
adc
adc
call
mov
jg
mov
aad
sbb
and
push
adc
inc
dec
mov
int3
loope
and
push
cmp
decl
jp
outsl
push
stc
lods
enter
pusha
scas
mov
sarb
ss
inc
dec
sub
sub
lahf
lock
stos
mov
je
aam
and
jbe
fwait
adc
cmpsb
jl
nop
sbb
ljmp
fcmovnb
test
test
adc
out
sub
movsl
pop
cmp
fiadds
push
mov
insb
jb
jle
or
pop
call
mov
sbb
dec
inc
xlat
lock
xchg
jmp
jp
adc
mov
dec
mov
aad
add
js
push
add
popf
xchg
call
stc
imul
cmp
cmpsl
in
sub
jbe
cmpsl
mov
mov
mov
sub
dec
dec
mov
mov
subl
imul
or
mov
inc
xchg
inc
ret
es
cli
pushf
add
std
aas
fists
shrb
hlt
fst
nop
int
pushf
leave
jge
sub
dec
ret
add
ds
comiss
lret
or
push
addr16
testl
ret
xchg
imul
mov
jnp
mov
stc
mov
mov
mov
push
adc
arpl
or
dec
push
sbb
dec
loopne
repz
add
pop
push
adc
data16
pop
push
movsb
hlt
incl
pop
cmc
and
jo
or
push
jmp
scas
outsl
shll
subl
nop
or
loopne
aad
mov
xor
lcall
ja
cltd
cmpsb
lds
out
cmp
adc
inc
mov
mov
lcall
or
aad
adc
shlb
sub
adcl
aam
fwait
cwtl
iret
imul
mov
add
pop
adc
xor
popf
push
imul
and
call
loopne
nop
add
insb
sub
ficoml
push
xor
ja
cmp
in
cli
push
rcll
divl
pop
stos
dec
inc
data16
fcmovnbe
pop
inc
dec
mov
out
sbb
test
les
or
int
xchg
mov
mov
inc
sbbb
lret
mov
inc
xor
and
inc
sbb
aas
int3
mov
jbe
add
dec
fcos
sub
loopne
add
or
push
enter
push
insl
pop
lcall
and
outsb
gs
pop
leave
mull
jbe
imul
loopne
pop
inc
cmp
jle
pusha
insl
shrl
mov
inc
pop
pop
repz
add
call
jl
pop
adc
jle
pop
fdivrp
das
mov
mov
rcll
mov
incl
jae
fistpl
cmp
pop
or
mov
out
call
lcall
clc
lcall
jns
cmp
xchg
pop
and
decl
test
cli
jg
stos
mov
push
mov
mov
lret
sbb
pop
lret
aad
jle
dec
adc
lcall
cld
std
mov
lret
sub
xchg
cmp
icebp
cmpsl
nop
movsl
inc
nop
xor
xor
insb
fcoms
and
or
pop
hlt
mov
mov
int3
aas
shll
mov
adc
rorl
push
xor
fdivrl
jle
mov
std
ljmp
and
stos
xchg
jle
sbb
lock
jg
xor
pop
leave
jnp
mov
cmp
push
inc
popa
loop
mov
addr16
popf
cmp
lcall
arpl
pop
ljmp
xlat
in
std
sub
dec
movsb
je
loope
lds
lock
aam
pop
jb
sbb
push
fmuls
pop
subl
pushl
dec
push
into
adc
jb
shrl
sbb
addl
xchg
push
lea
lock
call
hlt
push
cld
dec
inc
repz
and
inc
pop
in
xchg
inc
addr16
decl
jle
clc
sbb
mov
fnsave
pminsw
out
test
loopne
xchg
mov
cmp
push
sbb
cmp
ficompl
push
out
sbb
stos
clc
cs
push
jmp
jne
cwtl
mov
rclb
mov
mov
fisubl
jmp
je
shrb
lea
clc
jmp
in
mov
rolb
push
xchg
fstps
pop
adc
lods
sbb
les
outsb
xor
jb
mov
jg
dec
sahf
out
or
pop
sbb
sarb
jmp
mov
push
inc
add
repz
sbb
jg
cmp
cmpsb
xor
fsubs
pop
adc
pop
cli
jmp
test
aam
mov
fmull
push
mov
pop
cmp
xchg
out
iret
jge
pop
cmp
mov
jle
push
ja
call
ret
xchg
dec
lods
cmpsb
mov
mov
mov
stc
popa
fs
cmp
add
call
add
mov
jne
jns
popf
call
pop
ljmp
xor
enter
mov
jb
jno
ret
decl
sub
sbb
xor
fdiv
iret
test
mov
jnp
ss
rcrl
dec
jae
in
push
and
lods
decl
clc
xor
repz
fstl
daa
call
sub
cltd
out
xchg
add
pop
mov
imul
subb
mov
inc
std
inc
mov
sbb
jb
icebp
cmc
clc
inc
stc
je
xchg
cli
ljmp
sbb
out
imul
mov
xchg
ficomps
cs
mov
xchg
pop
insb
pop
mov
fsubrp
stos
jp
iret
adc
sub
xlat
and
pop
xlat
ret
pop
testl
in
mov
fs
xchg
mov
jne
leave
mov
dec
and
scas
cmpsb
pushl
push
cld
dec
subb
js
adc
pop
outsl
shl
ljmp
mov
je
int3
mov
subb
and
lcall
adc
sbb
xor
mov
pop
ja
mov
lcall
mov
xchg
and
sbb
ds
aas
dec
or
mov
mov
sbb
inc
insb
pop
xor
jb
dec
dec
int
int
jo
icebp
icebp
fstpt
shll
cmp
inc
inc
jmp
inc
adc
mov
stos
sbbb
mov
test
push
rcrl
fsts
mov
into
push
insb
mov
cli
jno
mov
gs
ljmp
xlat
inc
dec
imul
mov
leave
cmpsl
xor
mov
fidivs
cwtl
push
in
fisubl
fs
fnsave
icebp
pop
je
mov
in
sub
rolb
call
jge
ret
adc
sub
lret
jge
mov
add
cmp
call
shrb
add
iret
mov
sahf
cltd
out
mov
pop
mov
xchg
push
ret
mov
cmp
ret
cld
in
test
lcall
push
ds
mov
push
ret
xchg
test
xor
jecxz
or
ljmp
dec
mov
xor
ss
sub
sub
loopne
in
mov
fbstp
sbb
jmp
or
rcrb
fidivrl
cmp
clc
and
pusha
jp
cli
add
pop
dec
dec
test
inc
clc
dec
or
fcom
xor
mov
out
lahf
or
cmc
mov
sti
adc
xor
sbb
mov
out
cli
lods
call
push
sbb
pop
inc
xchg
mov
pushl
or
popf
xchg
clc
ja
ret
adc
or
jg
repz
mov
mov
aad
sbb
cltd
xor
push
stos
inc
ficomps
xlat
lcall
pusha
fdivs
lods
inc
pop
adc
xor
aaa
imul
pop
clc
test
cmp
cmpsl
sti
push
lds
fucomip
sub
push
dec
jp
scas
inc
lret
sub
call
or
int3
sub
xchg
sub
xor
dec
add
cmp
add
pushl
dec
addr16
sub
fdivs
ljmp
adc
incl
sbb
jp
stc
ret
add
insb
stos
mov
xor
mov
mov
incl
dec
jbe
mov
fmulp
movsl
adcb
iret
repnz
pop
fld
push
in
inc
and
mov
insl
adc
imul
ret
adc
jo,pn
orb
or
xlat
sub
ficoms
pop
xor
mov
jmp
adc
mov
mov
cmpl
gs
adcb
xchg
hlt
push
mov
ficoms
pushf
addr16
incl
test
in
cmc
mov
jnp
sbb
pop
fisubrs
addr16
push
fcoms
hlt
dec
inc
cli
call
jno
jmp
sahf
adc
roll
outsl
mov
xchg
ss
test
sub
and
lret
ss
repz
adc
filds
add
mov
xchg
shrb
cmp
call
fs
lea
ficoml
bound
data16
cwtl
adc
push
sbb
decl
popw
aad
push
pop
pop
jecxz
cmp
xchg
xchg
mov
mov
insb
movsl
mov
jae
dec
cld
jmp
lahf
mov
jl
sbb
aad
jg
movsb
lahf
mov
or
xor
sub
aam
popa
test
pop
pushl
sub
imul
mov
push
icebp
testb
movsl
in
and
cmp
fstl
mov
fs
je
jae
insl
mov
call
roll
sbb
mov
sub
cmp
enter
mov
call
in
pop
xchg
test
enter
lret
xchg
cmc
dec
outsl
and
mov
scas
pushl
and
sahf
ret
push
or
push
add
loop
jne
sbb
ljmp
xchg
adc
adc
inc
or
lods
sbb
push
pusha
cld
shl
decl
xor
ljmp
outsl
jle
pop
sub
push
pop
lods
mov
adc
decl
mov
inc
jnp
inc
sbb
es
sarl
mov
sbb
sub
dec
push
sub
pushl
inc
push
out
movsb
inc
jb
out
arpl
cli
or
sbb
xchg
pushl
sbb
data16
jecxz
pop
mov
ljmp
jg
int3
xchg
mov
stos
fwait
push
ds
inc
test
lock
ret
hlt
sbb
jmp
pop
cmp
or
inc
xchg
or
loopne
sarl
fs
dec
movsb
call
sub
mov
push
rcrb
fadds
push
ret
decl
lock
push
sahf
imul
adc
mov
add
jg
cmc
mov
mov
leave
xchg
cltd
repnz
xor
cmp
mov
push
mov
pusha
data16
sub
lcall
ret
mov
out
enter
mov
int3
adc
out
imul
outsl
pushf
cmp
add
icebp
xchg
cmpsb
sbb
cs
xchg
pop
cld
jmp
mov
pop
cmp
hlt
insl
in
push
data16
jo
clc
sub
xor
incl
mov
sar
lcall
push
fdivrl
or
daa
lds
andb
inc
enter
jp
or
xchg
movsb
in
sbb
aaa
dec
cmp
ljmp
cmp
sub
in
mov
inc
loopne
sub
inc
jle
jo
out
sub
sbb
call
jnp
shr
inc
movb
shlb
fs
and
adc
mov
ljmp
push
nop
stos
mov
inc
fcoml
xchg
stos
xchg
push
mov
outsl
dec
dec
cs
jg
add
movsl
bound
repnz
jg
sub
lds
repz
dec
dec
push
cli
push
jnp
adc
inc
adc
adc
pop
sbb
pop
lea
loop
and
jae
test
andb
cmp
shlb
arpl
jg
decl
jmp
xchg
inc
push
xchg
mov
insl
pushf
call
cwtl
mov
insb
hlt
shll
fimull
adc
cmpsl
test
lret
in
fs
mov
cmpsl
aaa
mov
addr16
in
mov
jg
enter
idivb
mov
or
cmp
je
xchg
cld
rcll
std
lcall
or
jmp
and
pop
inc
shll
mov
lahf
test
sub
jmp
adc
mov
mov
cmc
and
out
inc
aam
int
sub
push
fdivrp
adc
xor
cltd
inc
jo
in
ret
out
dec
aad
shll
mov
mov
ljmp
addr16
push
fs
test
imul
xchg
hlt
test
scas
jnp
popf
mov
fcmovb
push
mov
cmpsl
js
dec
dec
aaa
lods
xchg
insl
mov
ljmp
mov
xchg
shr
fwait
dec
cmc
pop
enter
push
lds
enter
cmp
xor
lcall
inc
fsubrs
lds
xchg
fadd
cmpsb
popf
pop
adc
cld
inc
aad
sub
push
fisubl
fwait
jecxz
mov
xor
xchg
jns
add
mov
push
push
adc
iret
iret
into
popa
inc
dec
movsl
xor
add
and
mov
dec
and
adcb
je
jg
fdivr
mov
out
push
clc
pop
repnz
and
adcb
lods
xor
out
cltd
out
push
mov
test
cli
pusha
sub
jo
add
gs
in
decl
xchg
int
sub
stos
setbe
incl
inc
or
adcb
insl
int
xchg
or
pusha
lahf
jle
jmp
ljmp
out
out
jo
out
les
and
dec
call
fimull
push
decl
push
lcall
test
nop
faddl
or
ljmp
movsb
je
mov
aaa
clc
mov
mov
mov
lcall
mov
adc
cltd
inc
sbb
decl
dec
mov
pop
in
sub
mov
or
cli
aam
cmp
or
dec
lock
mov
nop
jp
dec
aaa
out
scas
pop
fsubrl
insb
inc
or
out
inc
fists
aad
ljmp
cli
mov
sbb
mov
pop
sbb
inc
in
mov
aam
sar
out
xchg
dec
mov
pop
out
and
dec
out
sti
pop
cmp
or
sub
pop
insb
enter
and
mov
lock
decl
cmp
xchg
outsb
push
repnz
je
insb
jae
fcoml
fcomip
sub
sub
jmp
int3
push
lcall
jne
cmpsb
fstpt
or
nop
jno
pop
mov
je
mov
push
mov
jp
into
fdivr
and
ds
or
mov
cmp
iret
jge
adc
fs
call
cli
mov
cli
sbb
pop
repz
mov
mov
sub
dec
push
sahf
add
mulb
xchg
pushl
loope
mov
sub
data16
aas
in
adc
loop
mov
mov
inc
push
aaa
cmc
push
dec
shlb
lods
test
decl
ret
dec
pop
dec
or
and
iret
pop
pop
test
ljmp
push
xchg
ss
and
jg
pop
aas
roll
incl
mov
call
test
xchg
mov
inc
mov
jmp
jbe
jge
adc
or
bswap
pop
push
sub
test
ret
scas
lds
inc
mov
xchg
mov
aaa
jmp
cwtl
andb
pop
mov
enter
cltd
pop
cmp
cmp
rcr
stc
and
pop
or
dec
cli
iret
pop
push
push
rcrb
jmp
jns
add
in
jmp
mov
inc
xor
jae
les
mov
add
jmp
inc
add
popa
test
mov
or
or
ja
ljmp
inc
sbb
adc
lcall
add
push
cmp
ljmp
mov
jle
daa
fmuls
leave
inc
nop
push
and
andb
jo
aaa
adc
or
jmp
pop
jb
dec
pop
shll
dec
or
aad
push
ljmp
incl
xor
cmp
xor
xor
leave
ficompl
lcall
loopne
arpl
add
arpl
dec
cmpl
mov
dec
push
jbe
shlb
jmp
aam
and
jge
sub
fsubp
xchg
add
out
ljmp
push
xchg
pop
jmp
out
fistl
jne
mov
aaa
cmp
adc
adc
sar
lcall
ret
mov
mov
mov
xchg
ficoms
ljmp
jbe
sbb
sub
mov
cwtl
add
cmp
and
jmp
xchg
fadds
xchg
sbbb
jl
mov
adc
mov
add
clc
pop
repnz
and
mov
call
popaw
jmp
lret
mov
cmp
pop
add
or
jge
ret
push
ljmp
pop
and
pop
push
adc
daa
test
add
in
mov
jmp
pop
sub
movsl
jne
int
clc
test
mov
and
adc
fwait
sub
inc
stc
ds
xchg
push
fdivrs
pop
push
push
pop
xor
adc
stos
ret
add
adc
cltd
bound
sti
sbb
dec
inc
pop
mov
mov
sbb
xor
sbb
fsubrs
dec
shlb
dec
rol
leave
mov
push
sbb
ret
fs
daa
sbb
fadds
loope
mov
cmp
mov
enter
lods
xor
or
loop
int3
fldcw
imul
sub
mov
and
and
pusha
jle
ss
outsb
test
arpl
call
in
xor
popa
stc
cmp
mov
cmp
cwtl
sahf
loope
adc
pop
insb
adc
sbbl
movsl
out
ljmp
push
lahf
fnsave
cmp
push
push
rol
jmp
test
shlb
inc
scas
out
in
insl
or
push
and
push
aad
xor
jle
out
mov
enter
das
lret
add
lcall
sub
or
loop
mov
adc
adc
cmpl
call
sbbb
add
test
mov
movsl
sbbl
in
or
and
test
std
pop
call
out
fdiv
add
pushl
aad
popa
push
stos
rcll
stos
out
cs
nop
gs
jg
mov
ss
inc
inc
sbb
sub
ljmp
and
loop
movsl
jmp
jo
fsts
mov
cltd
push
or
incl
pop
push
dec
sbb
adcb
cli
in
int
lds
pop
cmc
jmp
inc
ljmp
test
int3
jbe
repnz
cli
cld
aad
jne
mov
mov
incb
negb
jns
stos
mov
push
add
cld
cmp
aas
jle
shrl
pop
movsb
dec
imul
or
sub
sub
cmp
and
scas
clc
test
fisubrl
cs
hlt
pop
loopne
adc
ss
subb
fst
push
push
push
sbb
sbb
decl
xor
and
mov
push
push
push
add
shll
adc
hlt
sbb
mov
jl
fucomip
cltd
jno
mov
jge
cli
pusha
mov
pmullw
es
call
aad
fsubrs
jmp
cld
mov
es
lret
fnstcw
sub
pop
shll
jecxz
lcall
lea
or
in
dec
xor
pop
xor
pop
aad
pop
jg
bound
mov
dec
cli
incl
push
sbb
fs
adc
inc
xchg
fadds
mov
ljmp
lods
js
pop
dec
jne
shl
ja
mov
in
faddl
insb
loop
shl
mov
sbb
aad
mov
idiv
filds
push
push
jbe
lock
cmpb
outsb
stos
mov
xor
test
call
ret
orl
out
daa
and
jae
mov
hlt
mov
inc
enter
decl
inc
aad
inc
data16
lret
mov
cmp
push
add
xor
dec
jl
xchg
jecxz
loope
into
xor
sub
mov
pop
ljmp
and
push
jne
push
popl
dec
add
and
mov
push
and
push
push
in
repz
jae
shlb
push
jl
mov
or
cmp
aas
sub
mov
incl
gs
sbbb
fbstp
sub
mov
push
mov
les
int
ret
lret
jb
cmp
jmp
jno
rcrl
test
aaa
and
aaa
jl
test
mov
sub
mov
adc
jb
inc
pop
sub
sahf
lret
ljmp
xchg
mov
enter
movb
xchg
rorb
adc
aaa
lock
dec
int
std
ret
into
cld
push
pop
mov
sahf
sbb
leave
insl
sar
xor
mov
adc
data16
add
data16
pop
xchg
cmp
sbb
pop
inc
iret
or
les
cld
call
mov
scas
imul
lods
in
pop
xchg
ret
in
scas
or
pop
ljmp
push
and
nop
movsb
scas
loope
jp
call
or
lea
fstpl
pop
fmuls
fwait
arpl
movsb
lcall
lock
inc
cmpsl
fimull
mov
idivl
movsb
jg
cld
pushf
pop
enter
mov
mov
out
lea
std
dec
icebp
mov
andb
mov
push
xchg
cmc
dec
movsb
push
decb
lahf
jge
inc
repz
cmpsl
push
mov
mov
sub
iretw
pop
repz
incl
adc
icebp
stos
out
decb
mov
inc
fistpll
hlt
mov
scas
and
lcall
dec
loope
jb
lea
repnz
push
sub
fsubrl
ljmp
sub
out
or
call
pushf
mov
dec
pop
dec
xlat
outsb
xor
ljmp
jbe
and
adc
mov
or
or
xchg
mov
or
pushl
sbb
int3
stc
jne
shll
fs
sbb
ret
inc
fnstenv
sub
mov
inc
pop
inc
sbb
jmp
js
scas
mov
xchg
lret
and
mov
ljmp
pushf
dec
inc
mov
pop
mov
xor
fildl
cli
push
sar
decl
pop
mov
dec
mov
pop
aaa
push
das
stc
cmp
cmc
mov
push
sbbb
mov
rcrb
stc
jge
pushl
nop
adc
xlat
xchg
fs
test
or
insl
lretw
mov
push
add
lcall
dec
sbb
mov
test
and
or
cmpsb
pushl
test
leave
and
int3
mov
xor
mov
adc
mov
imul
xor
dec
push
sbb
test
sbb
call
or
push
lock
pop
sbb
data16
pmulhuw
pushf
push
outsl
mov
fiaddl
push
xor
das
xchg
or
and
loopne
stc
mov
inc
in
inc
aam
sti
ret
inc
cmpsl
shl
call
adcl
call
mov
xchg
stos
ljmp
fcoml
outsb
sti
loopne
jne
les
adc
ljmp
inc
push
mov
add
or
push
and
and
adc
mov
lea
enter
frstor
push
and
or
test
cmpb
loope
cmp
push
jae
ja
incb
scas
cmp
hlt
cli
mov
orb
push
mov
cld
push
mov
scas
cli
mov
xor
jge
out
bound
or
outsl
in
aaa
retw
call
rcr
and
sahf
or
pop
push
jo
sbb
xchg
mov
sar
mov
movsb
shl
pushf
or
aaa
cmp
mov
jo
popf
icebp
pushl
loop
jo
xor
pop
test
cmp
test
test
mov
or
es
cli
fists
ret
pop
mov
movhps
std
jmp
dec
add
pop
mov
dec
mov
xlat
insl
cmpb
jg
mov
mov
mov
scas
jecxz
inc
int
call
shlb
movsb
movsb
jnp
ret
dec
jno
testb
sbb
mov
mov
enter
test
or
aaa
ds
dec
ljmp
jmp
lock
push
sub
pusha
xchg
add
jmp
rcll
ficoml
ret
ret
or
cld
fsubr
and
cmpsb
repz
xor
mov
pop
push
mov
sbbb
vcmpsd
jne
jecxz
or
pushl
test
xor
in
add
into
shl
pop
mov
jg
sbb
sub
mov
cmp
aaa
inc
sbb
clc
xlat
push
inc
lea
int
sar
lcall
push
sub
pop
popa
sub
pop
jnp
das
mov
jle
sar
pop
xchg
sub
loop
lods
out
dec
nop
mov
sub
jmp
test
mov
inc
xchg
pop
out
out
loope
loop
or
addb
popf
je
pop
mov
jmp
test
sub
sahf
ret
clc
xor
clc
std
add
int3
dec
push
pop
ja
mov
stc
testb
push
cld
pushl
push
jmpw
bound
pop
inc
inc
dec
into
test
xchg
mov
loopne
pop
das
cli
incl
jbe
mov
or
ret
in
lds
xor
mov
daa
mov
pushl
mov
xchg
iret
fistl
int
xchg
xchg
sbb
ficoms
call
popf
ret
sbb
mov
insb
and
adc
add
xor
pop
aad
stos
dec
dec
or
insb
mov
lret
rcll
int3
outsl
dec
ret
and
test
adc
fsts
dec
mov
incb
inc
inc
inc
and
sarb
cwtl
aaa
xchg
dec
xchg
idivb
ljmp
inc
jl
loopne
dec
cltd
push
incl
mov
mov
call
sbb
data16
or
inc
insb
xor
ljmp
xchg
mov
arpl
mov
or
pop
push
xchg
out
or
outsl
mov
lods
xor
fstl
mov
lods
cmpsb
call
mov
push
out
stos
es
dec
lea
cmpsb
and
jne
in
movl
and
repz
arpl
jp
loop
jbe
lea
shlb
leave
dec
mov
sub
gs
idiv
outsl
cld
aad
out
fstp
add
fbld
adc
mov
adc
xchg
ljmp
dec
aam
stos
inc
rcrb
push
icebp
dec
pop
jl
das
sub
mov
xchg
imul
lcall
sbb
es
imulb
jne
test
push
in
mov
or
pop
push
pushf
fwait
daa
adcl
mov
mov
ss
lcall
mov
repnz
adc
and
mov
mov
idivb
push
push
test
xchg
ljmp
dec
dec
rcl
adc
mov
dec
fs
and
out
mov
dec
xor
lcall
xor
call
push
adc
cmp
lcall
loopne
mov
ret
int3
aas
dec
jge
xchg
movsb
cwtl
adc
jmp
fildll
dec
enter
pushl
js
xchg
imul
out
ficomps
xor
jp
add
xorb
sub
insl
inc
and
xchg
mov
push
cmp
insb
aaa
test
lcall
push
aam
call
js
jae
mov
out
movsb
jle
pop
and
sbb
cmp
pop
pop
dec
pop
mov
in
scas
push
pushf
lcall
loopne
insl
push
ror
andl
movsb
ret
push
fbstp
cmp
fwait
pop
mov
jecxz
lret
sub
cmp
xchg
pop
add
mov
pushf
pop
popf
dec
rorl
inc
clc
mov
jge
loopne
push
loope
imul
xlat
sbb
cmp
rcrl
pop
push
and
ret
xor
mov
push
jns
pop
pop
or
xlat
sbb
incl
jle
dec
ljmp
mov
ljmp
mov
or
icebp
pop
icebp
out
mov
pop
jg
or
inc
sbb
or
add
jns
and
in
lds
ret
sub
add
cmp
leave
aaa
sbb
rorl
mov
clc
adc
mov
push
cmp
mov
dec
mov
pop
lcall
jb
stos
pop
xchg
pop
push
into
negl
sbb
loopne
ds
ret
insl
mov
arpl
cwtl
mull
call
and
in
in
outsb
adc
call
movsl
out
hlt
mov
inc
scas
and
ljmp
test
xchg
out
jb
sub
or
dec
mov
mov
dec
xchg
pop
push
iret
je
daa
cld
aam
insl
lods
sahf
mov
call
leave
pop
sub
cmpsl
sar
lcall
jae
jae
fisubrl
mov
call
jns
cmpsb
sbb
xchg
je
mov
mov
jbe
clc
test
test
int
xor
fnstenv
push
add
std
cltd
mov
cmc
inc
or
adc
aaa
loope
lods
shll
clc
pushl
cmc
js
into
cmc
jmp
movsl
xor
dec
xchg
sbb
inc
xor
jmp
rcrb
ds
nop
arpl
pop
and
mov
lea
lcall
lds
mov
cld
jo
cmc
xor
repnz
mov
repnz
dec
inc
push
inc
lret
mov
and
mov
dec
and
jns
jge
into
pop
mov
jmp
fbstp
gs
cltd
or
xchg
and
cwtl
push
out
sarl
aaa
mov
or
cld
xchg
rclb
js
push
push
daa
incl
mov
pop
shrb
push
insb
sbb
sbb
pop
fnstenv
push
push
push
cmp
mov
mov
mov
aad
call
popa
push
xchg
dec
shl
fildl
jg
jmp
pop
push
fdivp
mov
idivl
test
jl
sub
ljmp
and
cmpsl
aam
aaa
sahf
mov
sbb
pop
mov
or
aad
xor
lcall
dec
orl
ficompl
or
xlat
mov
movsl
decl
idivb
jecxz
mov
or
pop
mov
gs
clc
cmp
jg
daa
xchg
xlat
mov
sub
cmp
incl
xor
aam
mov
xchg
jp
mov
js
sub
aam
rorl
cwtl
insb
jg
xchg
pop
sahf
cmpl
mov
push
inc
mov
mov
or
or
roll
jp
outsb
mov
shlb
mov
jecxz
push
xlat
addr16
or
xor
dec
jg
cmp
mov
cmpsl
push
and
xorb
mov
jg
test
and
xchg
xchg
pushf
mov
cmpsb
daa
stc
inc
pop
lcall
aam
mov
stc
xchg
add
hlt
ds
jnp
add
adc
or
incl
pop
addl
es
adc
or
js
gs
fistl
add
call
and
xchg
ficompl
pop
mov
pushl
xchg
clc
ret
fisubrs
add
data16
ret
es
sbbb
popaw
fcoms
mov
pop
or
ljmp
jmp
and
and
push
xchg
push
sub
pop
dec
mov
mov
ja
ret
inc
cmp
cmp
call
pop
pop
icebp
push
movsb
push
or
push
addr16
push
loope
lods
lds
or
movb
mov
jbe
in
mov
jmp
sub
cmp
push
adc
nop
mov
push
xchg
dec
xor
fistpll
mov
mov
ds
or
push
stos
or
sbb
add
xchg
xchg
push
sbb
sahf
movsl
movsl
std
mov
xchg
dec
outsl
fiaddl
jb
repz
xchg
jns
imul
sti
incl
push
icebp
xchg
stc
jae
mov
push
fs
push
aaa
and
rclb
jg
xchg
dec
das
inc
mov
pop
sub
insb
in
lahf
cmp
imul
jb
decl
pop
mov
cmpsb
adc
das
mov
cmp
mov
shl
dec
xor
aaa
dec
call
ds
adc
out
repnz
fxam
mov
xor
xchg
fdiv
call
ret
inc
push
cmp
pushf
js
or
fs
std
incl
add
or
or
mov
fisttps
scas
lret
pop
clc
mov
rcl
aas
je
lock
jecxz
ret
addr16
push
jmp
xchg
jae
add
sub
es
ljmp
dec
pop
push
and
inc
call
dec
xlat
nop
push
dec
pop
testb
jg
fdivrp
jmp
sbb
fucom
sahf
jnp
int
xchg
nop
dec
xor
ret
mov
mov
adc
jg
and
cmc
pop
and
shrl
mov
movsb
dec
insl
cwtl
inc
sub
repz
add
lock
adc
sub
dec
fs
movsb
nop
dec
push
add
mov
xchg
sti
ffree
push
mov
ja
mov
dec
or
sub
xchg
lahf
pop
adc
mov
repz
dec
rorl
mov
pop
pop
pop
push
jp
pop
sbb
fucomi
and
ljmp
or
jge
mov
push
clc
xor
mov
decb
xlat
push
mov
int3
and
lcall
decl
xchg
fldt
js
cmpsb
sbb
xor
out
cmp
stos
ljmp
mov
cmc
mov
int
mov
dec
int
pop
jnp
or
rcll
loopne
xor
jle
mov
hlt
lea
cmpsb
orb
dec
loope
pop
aam
les
add
xlat
loopne
push
sbb
sbb
lcall
mov
pop
loop
cld
outsl
addr16
stos
in
push
out
cld
add
adc
js
mov
or
out
sub
mov
or
pushl
cmp
inc
or
clc
mov
jns
pop
jne
mov
incl
in
outsb
fists
inc
mov
mov
jb
or
and
cmp
out
cmp
imul
std
insb
negb
sub
mov
je
sbb
mov
cmp
mov
pop
mov
inc
pop
je
notb
nop
mov
xor
vmovq
push
adc
ljmp
fcmovu
out
inc
loope
loope
sub
ja
das
scas
in
push
xor
lods
mov
dec
jg
jo
push
call
jp
in
and
rcrl
inc
xor
inc
inc
sahf
shlb
xor
cmp
rolb
cmp
cli
adcl
dec
lahf
mov
je
psrlw
cli
add
cli
in
mov
inc
ljmp
jge
arpl
xchg
popf
out
enter
mov
pop
insb
test
jns
and
sbb
movsl
imul
std
into
mov
shl
stos
and
lret
popf
xchg
and
outsl
icebp
test
jle
mull
sahf
and
xchg
jne
and
mov
or
stos
push
cmc
jne
adc
and
lock
and
cmpsl
push
mov
jmp
cmpsb
push
pop
or
ret
jne
dec
mov
push
ret
sub
cli
incl
rcll
hlt
popa
dec
push
mov
pop
imul
nop
test
out
ret
adc
bound
xor
ljmp
mulb
pusha
out
out
jae
fiaddl
add
or
les
movsb
pusha
mov
sti
jle
xchg
andb
jge
aaa
aam
cmpsl
dec
rolb
push
push
mov
push
add
incl
scas
lcall
pop
lds
xor
mov
inc
mov
xchg
lods
loope
pop
mov
xchg
fsubs
call
and
push
jge
or
out
pop
in
icebp
ds
inc
je
enter
jne
in
incl
push
inc
dec
scas
push
popf
inc
cwtl
aad
jmp
sbb
mov
and
jg
jecxz
mov
adcl
push
dec
adc
adc
daa
mov
ljmp
cld
aas
dec
cmp
mov
movsb
jae
sbb
dec
icebp
enter
xor
cmp
aad
sbb
cli
incl
cmpsl
out
xchg
dec
out
in
aas
xor
mov
call
lods
dec
hlt
lea
add
dec
sbb
flds
sahf
lods
adc
xor
test
pusha
call
loop
in
jns
and
into
out
cmp
xor
adc
shl
in
jg
or
xor
cmpsb
jb
in
jno
mov
pop
std
jmp
cld
cmpsb
mov
jecxz
cli
shrb
xor
mov
xor
lret
mov
pop
aam
rcrb
jge
jl
sub
out
fdivl
ljmp
add
popf
inc
negb
adc
xchg
dec
movsl
or
call
adc
cwtl
sbb
inc
aaa
rcrl
jg
in
jp
in
les
cli
cli
incl
xor
and
dec
lods
sbb
fiaddl
pop
mov
jl
jle
jecxz,pn
call
push
xor
stos
jp
push
xchg
in
shl
xor
ja
fbld
dec
inc
mov
mov
add
xor
out
incl
mov
push
cmpsb
movsl
or
pop
mov
pop
xor
insb
add
into
ljmp
roll
mov
insb
pop
inc
fisubl
dec
cmpsb
shlb
aad
push
pop
inc
or
inc
bound
scas
dec
jg
mov
sub
dec
and
jns
or
or
cli
insb
nop
popf
fs
sub
es
fbstp
orb
or
nop
int3
add
and
sub
xchg
pop
push
fdivs
cmp
pushl
popf
hlt
push
lret
cmp
sub
cmp
daa
ret
sub
sub
mov
in
jo
dec
je
xor
and
sub
dec
fmulp
push
lds
mov
jmp
sub
into
shl
or
mov
mov
cmp
in
lods
into
adc
lcall
cmp
imul
add
jbe
dec
mov
cltd
dec
or
jp
jge
inc
lcall
sub
fucomi
jbe
xor
mov
push
loope
pop
dec
in
and
cmp
pop
lret
mov
fisubl
sbb
in
int
xchg
imul
cmp
push
insl
in
pop
sar
daa
insl
push
mov
rcl
dec
fstpl
jp
cmp
mov
hlt
xor
or
adc
mov
int3
cmp
cld
fisubs
mov
jg
inc
dec
fisttps
inc
dec
ljmp
lea
sub
jg
dec
stos
inc
loope
mov
adc
bound
in
xlat
pop
mov
test
popf
imul
jg
pop
sub
inc
xchg
adc
dec
test
cs
outsl
or
mov
inc
loop
call
in
add
shl
adc
push
push
clc
sahf
push
es
cld
xchg
dec
outsl
or
mov
add
mov
xchg
ljmp
clc
inc
xor
jecxz
xor
rclb
cmpsb
cmp
pop
enter
push
rorb
mov
test
je
incl
push
fs
fs
out
rcl
sbb
push
mov
dec
js
ljmp
lcall
out
xchg
and
pop
or
push
into
adc
xlat
cmp
dec
xlat
push
adc
ljmp
mov
mov
and
dec
sub
sbb
dec
call
sbb
test
incl
mov
pusha
mov
push
into
jecxz
es
push
movsl
xor
scas
and
inc
repnz
dec
cld
jmp
int3
xchg
xchg
xchg
or
mov
jnp
cwtl
add
jnp
jg
jle
lds
lcall
pusha
fwait
push
movhps
call
pop
push
sbb
shrb
call
adc
int3
sbb
outsb
or
sbb
cmp
sbb
sub
je
stos
mov
jo
pop
outsb
xor
mov
or
pop
shl
jg
sbb
sub
xchg
fs
gs
fldt
and
mov
pop
mov
fwait
mov
cmp
loopne
sti
mov
lahf
inc
adc
sbb
shrb
ljmp
lods
outsl
sub
iret
rcr
ljmp
cmc
inc
mov
sub
cmpsl
and
inc
inc
mov
fdivs
xlat
mov
sti
pop
xchg
xchg
pop
xor
cmpsl
out
cmp
and
xchg
icebp
call
std
xchg
rcll
mov
and
incl
push
insl
repz
pop
fldl
fldl
mov
mov
mov
cld
push
push
nop
decl
cmp
sbb
xor
int3
xor
or
adcb
pop
jp
push
inc
sub
cmp
cmpl
lcall
fwait
and
xchg
test
xorl
aaa
inc
cmp
xchg
lret
sbb
loop
xchg
cmpsb
mov
inc
mov
cmp
loopne
ss
pop
out
mov
pushf
loope
inc
ss
fs
ljmp
add
ss
dec
loop
and
shll
adc
mov
daa
cs
nop
filds
xchg
in
fdivp
adc
mov
or
jmp
lret
cltd
jbe
clc
fstl
adcb
rorl
cmp
sti
imul
gs
mov
cld
add
inc
ret
or
or
adc
dec
stos
cmc
mov
mov
sti
jmp
movl
inc
mov
xchg
xchg
jmp
pusha
sbb
addr16
pushl
sar
dec
add
iret
push
mov
movsb
jae
in
shrb
popf
addb
gs
call
nop
dec
in
into
sahf
xlat
pop
mov
push
cmp
sti
addr16
mov
dec
xlat
cmpsl
dec
mov
out
lds
test
mov
cmp
xor
cli
test
mov
jmp
mov
je
xor
ror
xlat
in
ds
decl
into
push
push
faddl
mov
pop
call
cmc
decl
jmp
sub
cs
push
jb
insb
cmp
mov
jl
repnz
addr16
mov
dec
mov
addr16
adc
inc
inc
jg
call
pop
movsb
pop
ljmp
mov
das
pop
push
xlat
addr16
sub
and
mov
jmp
or
cmpsb
xadd
cmpsb
pop
jecxz
fwait
jg
jg
mov
loopne
arpl
jge
lods
or
mov
jecxz
mov
push
sarb
or
mov
daa
jmp
push
aaa
lds
mov
loop
leave
mov
je
sarb
mov
mov
jle
adc
pushl
adc
cltd
cmp
xchg
call
push
lcall
decb
js
rcl
js
push
cld
push
sbb
lret
sti
decl
mov
cld
sub
mov
repnz
mov
xchg
mov
or
shll
lcall
xchg
xor
push
aam
ficomps
std
xlat
insb
fdivrp
inc
adc
add
les
fisubl
xchg
data16
and
mov
xorl
push
notl
outsl
push
cmpsl
and
rep
in
movsl
lock
add
stos
int
incl
xor
dec
sbb
repnz
xchg
cmpsb
int3
sub
and
sub
mov
push
xor
clc
cmc
mov
cmp
xchg
mov
clc
add
mov
jmp
mov
pop
es
cli
ljmp
xorl
xchg
jmp
mov
jl
sub
pushf
mov
cmpl
or
mov
ljmp
mov
cs
test
mov
lcall
jle
mov
and
pop
or
aam
dec
mov
cli
cs
ds
sbb
jmp
cmp
and
stos
sbb
push
add
call
mov
std
inc
pop
cmp
dec
mulb
lea
sbb
xor
icebp
popa
lds
outsl
addb
or
mov
ss
cmp
mov
lods
or
pop
and
call
insb
cmp
push
lods
pcmpgtb
mov
dec
cld
mov
pop
push
jo
cld
or
out
or
fidivrl
aas
cmpsb
sbb
lcall
or
in
test
loope
rcrl
call
xchg
lcall
xor
mov
sbb
loopne
mov
push
push
or
pop
lret
xchg
add
gs
ljmp
mov
cmp
inc
and
sahf
mov
lcall
pop
cld
jne
push
out
je
adcl
mov
out
add
add
lcall
xor
les
mov
imul
xchg
jg
dec
xchg
jo
fcoms
sub
mov
sbb
push
aad
sarl
fisttpl
inc
jg
xor
xlat
cmpsb
lds
ja
xchg
aas
mov
add
fbld
sub
add
pop
or
in
sbb
cltd
fildll
mov
iret
jb
mov
push
add
mov
xor
stc
dec
push
movsl
sbb
out
repnz
push
push
rorb
fldl
pop
mov
mov
test
xchg
test
xor
xchg
test
call
push
ret
clc
decl
in
or
insl
inc
std
jae
test
jbe
movsb
sub
pushl
test
dec
insb
push
lea
inc
add
mov
xor
push
inc
xchg
decl
and
mov
pusha
push
outsl
adc
sar
or
pop
pop
cltd
aaa
inc
es
xchg
out
xor
incl
jl
add
sbb
imulb
call
jecxz
arpl
push
das
into
flds
ficompl
scas
cmp
sbb
mov
sti
jae
jle
test
xchg
jb
ficoms
ljmp
mov
inc
or
xchg
dec
rcll
xchg
dec
mov
mov
mov
dec
lods
mov
mov
dec
fldl
jns
enter
fbld
data16
sbb
or
test
call
movsl
fstps
out
or
decl
aaa
cmpsb
ss
cmp
stos
pop
cmpsl
cmpsl
add
sahf
xlat
lcall
int3
jnp
push
push
insb
ret
dec
xchg
cwtl
xor
mov
cld
call
ljmp
add
shll
inc
pop
mov
sub
or
add
pop
jmp
insl
push
or
rolb
cld
cmpsb
aas
enter
bound
jmp
cmpsb
xchg
loope
int
pop
xor
pop
xchg
pop
mov
cmp
cli
adc
mov
out
adc
mov
push
in
mov
adc
push
fsubl
inc
jnp
xor
insb
scas
addb
call
jecxz
fbstp
ror
inc
push
addl
push
std
sub
fwait
js
add
pop
xchg
sub
sbb
mov
leave
xor
push
cmc
jp
les
dec
arpl
lea
lcall
mov
incl
cmc
and
icebp
xor
mov
jecxz
ljmp
jno
push
lock
movsl
jle
xchg
add
xchg
movsl
dec
std
and
les
jp
decl
adc
loop
lds
and
sub
rolb
cmpsb
jp
pop
out
lods
js
xor
xorb
and
les
je
adc
fs
das
test
into
jnp
decl
fsubrs
lods
push
cmp
int3
aad
push
add
stos
ss
add
push
sub
negb
push
xor
js
xchg
scas
orl
loopne
jg
pusha
or
pop
add
mov
outsl
jle
xchg
push
inc
inc
ljmp
lahf
movsl
sbb
lret
inc
sub
sahf
test
fwait
mov
ret
stos
add
popf
js
es
daa
dec
sbb
fcomip
mov
cmpps
mov
mov
inc
or
adc
call
cmp
arpl
lret
jp
adc
lahf
mov
adc
cli
incl
ror
xor
mov
enter
push
adc
lcall
fbstp
insb
xlat
mov
mov
dec
xlat
movsl
dec
xor
xchg
cltd
stos
cmp
cmc
or
lods
andl
out
xchg
dec
sub
pop
xchg
sbb
push
sahf
xchg
and
aas
int3
sbb
ficomps
push
mov
xchg
clc
fwait
imull
cli
loopne
lods
or
xor
xor
cld
insb
xor
sub
ja
fdivl
mov
pop
push
ja
push
sbb
incl
adc
cmp
clc
jo
lret
aam
jns
xchg
in
icebp
pushf
test
cmp
push
call
jne
and
in
shll
ret
in
stc
imul
inc
sbb
sbb
int3
test
xchg
or
sub
call
call
mov
clc
mov
xor
fidivrl
lock
les
jecxz
imul
pushf
mov
pop
loopne
sbb
les
pop
lea
jb
sub
call
sub
aas
and
and
inc
adc
ret
pop
mov
movsl
xchg
add
sbb
jg
test
int
pop
aam
gs
pusha
inc
xor
es
mov
mov
jmp
pop
inc
imul
pusha
imul
into
cmpsl
outsl
fdivs
movsb
or
cli
xchg
popf
jns
inc
adcl
popf
ss
hlt
push
fadds
mov
lcall
adc
jne
repnz
push
rolb
inc
clc
jmp
push
cmp
xchg
rclb
or
mov
mov
jmp
add
xchg
ss
dec
leave
push
mov
mov
pusha
cli
and
cmp
cmp
fildll
push
cmp
sbb
mov
inc
cld
xchg
out
xor
shrb
ljmp
xor
dec
daa
jmp
rol
call
ficomps
mov
aaa
inc
or
rcll
loope
dec
mov
sub
push
out
dec
inc
sbb
mov
les
cltd
inc
mov
lds
mov
sbb
decl
sub
push
rcll
int3
cmp
pop
xchg
lods
dec
test
push
mov
pop
add
rorl
aad
cmpsl
stos
adc
cmpsb
leave
rcr
ljmp
subl
jecxz
fldpi
sub
mov
push
nop
into
mov
and
js
sbb
inc
cld
pushl
and
rcpps
imul
dec
adc
mov
lret
iret
jg
decb
jmp
cmp
mov
mov
jae
jnp
push
mov
pop
dec
sub
ja
push
lods
jns
pushf
mov
ljmp
sbb
mov
shll
pushf
jmp
call
in
repz
mov
addr16
xor
call
jne
cmp
sub
jp
test
and
adc
mov
je
and
fistpll
lcall
inc
arpl
fsubl
aas
pop
sbb
shrl
sti
test
lods
mov
js
lea
scas
jbe
ficoms
cld
pop
cld
fimull
add
adc
or
push
xchg
mov
pushl
sarb
mov
into
adc
call
outsb
mov
inc
add
jae
sbb
xchg
xor
fsubs
repz
sub
stc
mov
out
push
movsb
mov
scas
ds
cltd
lret
cmc
icebp
icebp
pushl
clc
dec
or
jo
call
jnp
pushf
shrb
aad
mov
mov
cmp
stos
testb
jecxz
mov
call
xchg
lea
mov
xchg
xor
pop
jb
loopne
shlb
lods
ja
arpl
call
or
jp
push
in
rclb
and
mov
fwait
or
xchg
sarb
jae
pop
mov
mov
ret
and
pop
jb
aas
test
jg
scas
test
nop
bound
adc
mov
aas
aaa
in
iret
sub
cmc
in
mov
jmp
mov
xor
xchg
sarl
jle
psadbw
test
lds
rcr
fsubs
dec
adc
add
lcall
xor
test
fadd
push
popf
mov
dec
mov
pop
int3
lret
shlb
xor
sub
imul
sbb
mov
int3
pop
mov
out
icebp
push
and
std
movsl
add
lcall
sbbl
cmp
pop
loopne
scas
es
int
fwait
ja
mov
pop
loopne
jp,pn
inc
push
fbld
lds
ret
adc
test
mov
ljmp
inc
aaa
fists
push
cmc
test
negb
xchg
xchg
adc
call
jo
jl
cmpsl
pop
ss
or
daa
icebp
pop
mov
inc
adc
sti
mulb
clc
filds
jmp
xor
dec
div
mov
mov
mov
cmp
cmp
les
je
xor
testb
sbb
loopne
push
sbb
mov
cmp
into
sbb
ljmp
xor
push
or
xor
xchg
fwait
and
adc
call
adc
dec
push
aad
jmp
sub
in
push
es
gs
pop
sub
inc
pop
imulb
lret
adc
cld
out
cwtl
or
mov
push
pusha
or
call
sub
gs
leave
lcall
fcomip
xor
dec
arpl
repz
es
xlat
mov
stos
out
pop
popf
or
iret
or
lahf
cmc
push
testb
add
lds
in
or
pop
jp
mov
popf
jno
cwtl
rcr
outsb
int
mov
cmp
incl
push
in
mov
jge
cld
cmpsb
out
dec
stc
xchg
les
lahf
jmp
xor
outsl
push
jge
dec
jnp
sbb
push
or
mov
lsl
or
rorl
sub
sub
or
popf
sahf
lods
jnp
push
mov
decl
pop
jne
into
pop
in
push
sbb
pop
cmp
or
test
test
je
push
repnz
clc
adc
leave
push
adc
lahf
xchg
mov
xchg
inc
data16
lcall
imul
adc
stos
or
add
dec
aaa
sti
int
imul
or
pushf
mov
sub
daa
xchg
pop
jns
andb
push
mov
roll
call
mov
loope
push
xchg
ss
sbb
ret
pop
into
mov
pop
and
stc
inc
pushl
lret
sti
ds
xor
fisubs
cmc
popf
add
loope
mov
lods
inc
xchg
mov
call
xchg
add
test
jbe
sub
push
jnp
xlat
mov
cld
lods
into
test
dec
adc
xchg
sbb
aas
push
push
pop
cmp
out
test
dec
inc
in
xor
roll
add
inc
inc
push
repnz
je
xchg
inc
scas
aaa
xchg
sub
xchg
sbb
push
dec
test
push
lahf
dec
mov
xor
sbb
xadd
xorb
inc
addb
imul
dec
push
outsl
aas
jns
sbb
mov
mov
lcall
pop
cmp
cltd
ljmp
mov
popf
and
pop
test
push
and
scas
push
insb
pop
push
js
xchg
out
pop
mov
cmp
pusha
pop
pop
stc
in
pushl
mov
dec
cwtl
es
jp
or
pushf
jg
pop
test
decl
shl
pusha
lods
adcl
scas
mov
xchg
daa
pop
mov
popf
call
call
loop
test
cld
lods
sub
jle
mov
enter
dec
std
jbe
inc
mov
outsl
inc
xor
add
push
pop
jecxz
push
int
mov
lea
bnd
sbbl
insb
scas
nop
in
and
ljmp
push
arpl
sub
in
inc
roll
jp
mov
push
push
ja
rorl
sti
aam
repnz
lea
inc
pop
setne
jno
xchg
imul
add
cs
and
popf
leave
push
mov
aaa
mov
loop
jl
das
jmp
mov
call
adc
mov
xchg
add
cmp
push
aas
jge
dec
enter
inc
sahf
xchg
and
adc
daa
fimuls
mov
add
adc
insb
push
aad
pop
or
sti
pop
add
jg
imul
and
ret
push
mov
inc
or
push
sbb
lcall
mov
test
lret
push
stc
adc
inc
xchg
dec
xor
ret
nop
rol
enter
aas
cmp
ja
xchg
adc
push
mov
add
and
dec
inc
jp
cmp
fwait
cltd
add
and
jge
pop
fldcw
push
cli
int3
pop
into
xor
sti
jne
scas
sbb
lds
mov
lret
and
mov
clc
fbld
and
pop
addr16
shl
pushl
gs
icebp
shll
cltd
lock
repz
mulb
add
xchg
call
test
adc
push
nopl
lahf
ds
cmpsl
adc
movsl
xor
sbb
mov
insb
adc
movsb
call
jg
or
xor
pop
ja
dec
pop
xchg
sbb
dec
mov
inc
cwtl
in
arpl
decl
out
cwtl
in
adc
arpl
cmpsl
xor
into
cmp
jg
stos
add
fcomip
div
clc
sub
scas
frstor
xor
jg
decl
imulb
xchg
cmp
sub
ret
addl
ljmp
mov
jb
sbb
lcall
push
lcall
cs
adc
ljmp
mov
aaa
loopne
es
add
scas
test
gs
push
push
leave
sub
add
pushl
mov
cmpsl
jg
jmp
mov
mov
add
jg
shlb
cmp
ss
mov
fistpll
test
iret
daa
jecxz
jo,pt
sbb
clc
loop
pop
or
cmpsb
adc
ret
push
inc
mov
cltd
cmp
int
xchg
ljmp
cld
pop
pop
clc
xchg
insl
jns
pushf
mov
js
ja
mov
mov
repz
cltd
ss
loope
out
lret
jae
je
popa
repnz
stos
into
fbstp
sbb
pop
out
add
lcall
pushf
push
in
mov
orb
jecxz
adc
push
icebp
inc
lods
ljmp
sti
rorl
sti
mov
mov
stos
cmpsl
data16
push
out
sbb
adc
loopne
dec
add
dec
jno
fwait
push
jecxz
aas
xchg
mov
dec
jae
cmp
fdivrl
or
jns
icebp
jp
mov
fimull
pop
fs
stos
ret
lcall
data16
mov
lcall
jae
ffreep
pop
and
fldcw
mov
sbb
and
jmp
scas
je
lcall
cmp
out
dec
ss
mov
ljmp
dec
in
in
push
pop
xor
int3
roll
lret
pop
subb
pop
push
add
push
pop
cli
inc
icebp
addb
imul
jp
fimull
movsbl
xchg
xlat
repnz
cmp
incl
add
lahf
mov
hlt
add
push
gs
xchg
popa
popa
xchg
das
pop
repnz
in
inc
repz
lcall
mov
pop
iret
clc
pop
in
mov
and
popa
cmpsb
jbe
inc
xchg
sbb
cli
mov
xchg
insl
out
and
es
call
mov
adc
out
cwtl
pop
repnz
in
popa
pop
and
clc
cli
inc
mov
ja
cwtl
pop
pusha
xchg
inc
test
fistps
lods
outsb
negl
mov
mov
daa
icebp
pushl
xchg
dec
test
mov
jne
mov
je
imul
outsl
pop
popa
mov
inc
jne
in
mov
fcomip
out
xchg
sti
xchg
mov
imul
jae
sbb
and
push
movsb
jmp
repz
out
pop
push
jecxz
in
daa
adc
push
in
shlb
dec
decl
fstpt
sub
inc
and
daa
shrb
xchg
fwait
and
sar
mov
je
cs
or
lret
push
xchg
mov
or
sbb
pushl
adc
cmp
adc
adc
rolb
test
sub
pushl
dec
test
fcoml
add
push
fildl
aas
pop
xchg
or
insb
icebp
push
dec
out
push
jbe
push
pushl
cld
add
rcrl
js
lea
lea
loope
xlat
or
cs
cmp
ljmp
jecxz
jne
lahf
lods
or
pop
daa
push
addr16
xor
add
ja
push
mov
fidivrs
mov
pop
mov
dec
sub
decl
mov
ficompl
icebp
mov
and
shlb
push
mov
adc
xlat
pushf
scas
dec
cmp
loope
test
xor
ljmp
cli
jle
les
ljmp
and
stc
cs
adc
sbb
dec
dec
hlt
inc
mov
xor
fsts
fbstp
add
bound
inc
inc
insl
xchg
shrb
mov
inc
mov
sti
mov
fwait
js
lret
mov
sub
mov
in
xchg
sub
jmp
xchg
add
cwtl
xorb
xor
ffree
mov
xor
add
xor
repnz
lcall
jmp
sub
fstpt
jnp
push
dec
xchg
mov
inc
cmp
jmp
lods
xchg
mov
sub
popl
dec
or
bound
lret
mov
in
in
ja
nop
pop
mov
mov
jecxz
xchg
int
mov
out
cli
das
nop
pop
stos
mov
xor
sub
sti
mov
decl
rcll
xchg
xchg
dec
aas
popa
je
pop
or
mov
pushf
dec
mov
das
add
incl
sub
xchg
xchg
gs
cld
xor
adc
ljmp
fcomip
decl
xchg
mov
xchg
xchg
mov
or
cmpsb
fwait
mov
in
test
ret
mov
int3
movsl
ret
and
divb
hlt
ljmp
sbb
shlb
addr16
jnp
pop
and
int3
js
rcr
inc
pop
fstpt
inc
mov
outsb
sub
adc
ss
lock
mov
rolb
btc
imul
and
in
in
jmp
stos
push
mov
mov
mov
ds
arpl
test
or
in
jl
mov
js
and
jecxz
incl
jl
stos
pusha
mov
dec
inc
mov
dec
scas
mov
popa
loop
fists
adc
dec
aam
jo
cmp
xchg
xor
leave
jmp
xchg
push
mov
or
lods
shll
or
mov
enter
insl
fwait
or
pushl
test
push
xchg
jo
push
dec
mov
ret
push
cld
mov
mov
push
fiadds
inc
adc
lock
mov
mov
and
xor
mov
sub
push
mov
push
inc
xchg
xlat
imul
cmp
cmpsl
fstpl
or
sbb
inc
fcoms
jge
sbb
loope
lds
lret
push
nop
stc
lea
jmp
mov
cmp
adc
test
fs
inc
sbb
push
xchg
add
out
mov
xlat
sti
and
sub
lods
sub
and
out
sbb
pop
aam
jb
enter
mov
ret
test
jmp
xor
fisttps
jnp
xchg
stc
ja
and
lret
ljmp
xor
aas
jno
mov
lock
aam
insl
mov
push
jge
js
sub
jbe
mov
pop
pop
xchg
push
bound
lret
ret
push
or
pushf
stos
imul
xchg
and
pushl
dec
jno
mov
xchg
jle
aad
jg
add
or
lcall
and
mov
dec
add
in
jno
adc
lods
popf
ss
fsubs
dec
cmp
jecxz
mov
fistpl
jns
adc
call
clc
push
iret
push
enter
and
sbb
jmp
dec
ja
lret
cli
mov
insl
fadds
mov
pop
inc
mov
dec
inc
loopne
gs
jno
jne
lds
fidivrl
sbbl
add
insl
push
mov
pushl
or
ss
rcll
iret
and
mov
insb
xor
icebp
ljmp
or
mov
cmp
inc
add
rcll
repz
sub
or
mov
mov
sarl
xor
pusha
adc
mov
data16
xor
lcall
test
ret
dec
mov
push
mov
cmc
or
mov
scas
add
jg
add
pop
mov
mov
xchg
sbb
pop
push
xchg
xchg
bound
out
or
xchg
mov
push
cmpsl
inc
mov
inc
fs
mov
shlb
cmp
mov
mov
push
xchg
lcall
push
lea
bswap
or
mov
ret
movsl
mov
push
sbb
fcmovu
sarb
pop
call
push
cs
jae
out
mov
mov
std
mov
subb
aam
pop
mov
sub
jp
fnstenv
ja
pop
rclb
daa
push
pop
adc
add
add
mov
sahf
roll
and
inc
sahf
mov
push
jbe
cmp
jae
inc
jns
xchg
test
and
xchg
pop
jle
lods
insl
jg
xor
sub
sbb
sbb
push
imul
lcall
test
push
insb
jne
xor
pop
daa
push
jmp
xor
and
decl
pop
daa
inc
pop
mov
idivl
jo
call
fwait
hlt
lret
xor
icebp
mov
movsb
int
mov
aas
int
xchg
jns
scas
pop
sar
bound
dec
shll
aam
in
cmpsl
rorl
lds
cmc
fcomip
out
dec
xchg
or
nop
cld
jg
xor
fwait
jo
lcall
cmpsl
rcr
mov
xchg
shrl
mov
dec
aad
scas
insb
loopne
xor
add
cli
pop
adc
leave
mov
je,pn
xchg
pop
xor
fs
fadds
push
idivb
cmpsl
push
call
adc
lret
and
cmp
dec
adc
cmpsl
xchg
inc
dec
cs
dec
cmpb
xchg
into
push
call
jg
cmp
fwait
ret
sti
jne
adc
in
test
dec
ror
and
xchg
icebp
incl
mov
ret
cmp
mov
inc
cli
lcall
arpl
pop
pushf
nop
imul
jmp
fimuls
cmp
and
lcall
loop
mov
ds
inc
add
call
pusha
sbb
mov
or
mov
and
pop
mov
imul
loope
loope
nop
js
test
cli
decl
or
add
out
jo
sahf
mov
lret
and
xchg
jg
mov
mov
xor
std
lds
jnp
jnp
cld
cmp
cmp
mov
mov
int3
xor
mov
inc
ljmp
ret
fstps
out
stos
jp
sub
test
or
inc
fnsave
jg
pushf
jbe
shlb
cltd
push
xor
mov
add
das
jnp
insb
mov
push
adc
sub
or
ljmp
push
dec
addr16
lds
pop
lea
cmp
push
mov
xlat
icebp
lahf
push
enter
cwtl
rcl
inc
call
adc
mov
mov
leave
arpl
incl
arpl
inc
sbb
sbb
xchg
pop
pop
mov
dec
enter
stc
ffree
das
lcall
cmp
pop
fsubrl
inc
or
movsl
cmc
fldenv
dec
ficoml
push
xchg
cs
fwait
add
push
xor
mov
pop
pusha
jno
pop
dec
sbb
mov
ljmp
mov
pushf
push
jae
xor
sub
aad
inc
add
clc
dec
jae
jns
mov
inc
cmpsb
dec
ljmp
movsb
push
daa
jge
test
mov
cwtl
lea
mov
adc
inc
xor
das
mov
ljmp
pop
insl
vmread
jae
inc
xor
leave
aaa
or
lcall
aad
pop
cmp
xorl
jg
mov
lods
scas
jns
xchg
ds
and
xor
mov
dec
mulps
mov
movsb
test
hlt
jo
mov
call
stos
ret
or
inc
xor
in
pop
jge
xor
push
fst
cltd
pop
inc
shlb
sbb
shl
arpl
add
call
call
cmpsb
hlt
divl
jno
mul
outsb
mov
jge
mov
clc
lock
or
addl
push
jmp
xlat
int3
shll
jmp
cli
imulb
dec
add
lahf
sub
out
imul
dec
push
push
shl
or
and
xchg
cmp
cmp
clc
push
pop
push
inc
mov
les
push
repz
inc
jno
lods
call
push
xchg
xchg
test
xchg
mov
ss
inc
dec
adc
dec
mov
mov
je
cmc
pop
mov
popf
jge
sbb
loope
vpaddsb
pop
cmp
stc
pop
inc
push
jno
cld
rep
or
pop
notb
mov
jmp
scas
or
aam
and
das
push
mov
gs
mov
push
add
pop
lcall
cmp
lds
mov
dec
pusha
insl
shlb
call
mov
xchg
fcoml
sti
mov
mov
js
loop
lock
mov
adc
pop
ss
insl
flds
mov
mov
dec
or
inc
mov
sbb
mov
inc
ds
in
pop
aaa
jmp
inc
ljmp
push
lret
in
lret
mov
mov
das
or
mov
cld
lcall
mov
out
cmp
push
mov
push
inc
mov
pusha
mov
inc
xor
xchg
insl
adc
icebp
outsl
inc
push
inc
mov
pop
jmp
shrb
pop
xor
push
push
popa
int
call
mov
mov
jl
cmp
ficompl
negl
jmp
adc
ficoml
sbb
in
lahf
inc
movsl
addb
jle
sbb
fcmove
cmp
loopne
imul
fdivr
decl
dec
aaa
and
ret
popa
add
movsb
mov
inc
mov
adc
mov
and
ljmp
fistpl
dec
icebp
inc
fisttps
out
pop
inc
and
out
pop
int
das
mov
and
jmp
scas
jg
and
outsl
mov
xchg
call
ljmp
cmp
or
out
movsb
jle
jns
imul
in
dec
test
stos
fldt
inc
jle
nop
leave
mov
adc
in
divl
and
vpaddsb
jg
add
loopne
lods
test
pop
repnz
push
inc
mov
out
faddl
in
dec
sub
aaa
cs
cmpsb
call
jo
outsb
push
iret
hlt
and
xor
in
or
adc
fisttps
xchg
sbb
out
pop
xchg
or
jno
sbb
xchg
dec
lock
incl
sub
movsb
sahf
inc
leave
dec
ds
or
inc
inc
jp
lods
cmp
flds
decl
xchg
test
orb
fbstp
imul
adc
mov
pushf
push
add
aad
lock
or
ljmp
mov
or
pop
mov
or
inc
push
dec
out
xchg
ja
mov
call
mov
xor
lock
repnz
mov
inc
ss
sbb
rorb
or
mov
sti
cmp
push
sub
ljmp
sub
repnz
rcll
pusha
outsl
or
xor
jg
lcall
xorb
cmp
rolb
std
int3
jecxz
and
push
adc
ja
testb
sub
fwait
stos
sbb
lcall
roll
je
stos
pop
testl
mov
mov
sbb
popf
pop
jno
or
daa
sbb
scas
repnz
jg
mov
movsb
inc
roll
insb
lret
leave
mov
mov
movsb
jg
lcall
lret
jecxz
ljmp
sbb
call
fsubs
test
sub
or
out
push
mov
leave
xchg
cmc
mov
xchg
lods
lret
add
lcall
xor
jmp
lea
jecxz
add
jecxz
fldcw
xor
outsl
incl
dec
mov
inc
adc
insl
cltd
fistpll
out
insb
cmpsl
jnp
arpl
mov
push
call
bndldx
aas
pop
pop
js
movsb
mov
lds
lock
lret
and
jnp
decl
mov
sub
xchg
add
imul
cli
lcall
roll
adc
jmp
push
xchg
cmpsb
repnz
mov
pop
push
std
and
scas
pop
daa
out
dec
insb
and
push
ljmp
jae
negl
shll
inc
icebp
test
xor
rol
adc
adc
and
call
lret
ret
push
mov
test
bound
push
fmull
xor
pop
xor
pushl
mov
pusha
sub
aas
xlat
pushf
shr
jno
xchg
lret
aam
jmp
leave
inc
sbb
in
imul
mov
out
ret
aas
cmpsl
push
or
enter
nop
dec
push
cwtl
test
mov
cmp
sarl
push
imul
mov
push
aaa
sub
cmp
adc
pop
fisubs
push
movsl
or
pop
fidivl
xchg
or
dec
imul
xchg
dec
mov
incl
xchg
lock
loop
or
popa
movsl
rcrb
mov
scas
cmp
popf
mov
sub
stos
call
std
jle
xchg
jp
mov
decb
cs
push
enter
inc
test
sbb
je
pop
push
ret
and
mov
and
mov
ds
pop
mov
sbbb
push
int
jp
mov
dec
sbb
aaa
lcall
mov
pop
add
pop
mov
mov
or
dec
mov
call
mov
and
mov
test
ljmp
cld
fstps
xchg
lock
rorb
sub
push
scas
xchg
out
mov
xor
sbb
sub
mov
out
mov
adc
ds
cmp
cmpsl
pop
cmc
lcall
adc
movsb
adc
pop
ds
pop
adc
into
mov
decl
into
cwtl
fdivrl
and
in
out
pop
into
jns
mov
aaa
nop
jne
call
pop
icebp
mov
pop
fnsave
sbb
shll
outsl
cmp
cwtl
loope
popf
jle
inc
cmpsb
push
pop
push
ret
clc
aam
fldl
cmp
aaa
pop
rolb
push
orl
or
pop
data16
pop
decl
scas
mov
das
cmpsl
data16
stos
sahf
fmul
loop
jl
dec
pop
mov
xchg
roll
decl
cmp
xchg
rclb
fisttpl
xchg
adc
aaa
shrl
outsl
push
cmp
out
mov
les
sarl
sbb
inc
sbb
mov
mull
cmp
pushl
jge
jbe
mov
pushf
cmp
add
es
adc
dec
cld
fsubrs
mov
loopne
lds
sbb
pop
gs
add
in
cmc
pushf
mov
jmp
mov
aas
shlb
or
jp
jle
popfw
and
repnz
adc
pushl
cld
add
rcrl
movl
inc
popf
inc
insl
out
es
nop
lods
ds
pop
and
decl
imul
xchg
aas
cmp
lret
pop
incl
cld
mov
les
cmp
jns
sub
mov
xor
pop
sar
scas
decl
jbe
sub
rcl
sbb
pop
fsub
add
ret
mov
fdivrs
and
iret
xchg
loope
out
xor
jg
cmp
sar
push
shlb
fists
fbld
and
out
inc
or
ljmp
cmpsb
push
mov
out
shlb
jl
mov
mov
pop
aad
mov
mov
jno
lcall
xchg
les
jmp
and
int3
addr16
lcall
outsl
aaa
ss
test
inc
aas
jno
mov
je
psubusb
cmpsl
pop
jge
jg
test
outsl
lret
push
dec
fmuls
xchg
mov
adc
decl
sbb
adc
imul
sub
add
call
pushf
dec
insb
adc
repz
movsb
mov
mov
inc
insl
repnz
hlt
popf
fisubl
add
dec
pop
hlt
xor
out
fucomi
push
shl
mov
int
fnstsw
lcall
push
fidivs
fs
orb
mov
ljmp
mov
inc
push
scas
or
lock
lcall
pop
shrl
mov
sbb
jecxz
dec
xor
xchg
xor
andl
add
cltd
ljmp
hlt
outsb
insb
push
mov
gs
fwait
lahf
sub
cmp
int3
add
out
sbb
fiaddl
enter
xchg
pop
imul
ljmp
push
data16
dec
ret
xchg
negl
inc
xchg
sbb
call
cld
jmp
out
pop
cli
mov
loop
cmp
lret
jl
fcomi
cmp
scas
mov
hlt
out
adc
sarb
jle
add
popf
js
fnsave
in
dec
push
or
and
push
ljmp
xchg
inc
adc
and
mov
and
test
jnp
decl
dec
imul
movsl
cmpsl
outsb
orl
pop
or
jecxz
mov
cmpsb
incl
les
daa
xor
cwtl
aad
mov
test
fbstp
fsts
pusha
sub
cmp
incl
sahf
lods
dec
imul
sub
psubq
xor
jne
or
cmc
jl
lret
or
jp
icebp
xor
or
cmp
int
clc
pusha
lea
frstor
mov
ljmp
andl
or
int3
repnz
in
popa
insl
xor
jae
ss
addr16
fnsave
ljmp
cmp
shll
lret
rolb
lret
fcomip
ficoms
cmp
or
add
or
and
dec
decl
loope
jo
and
inc
inc
xchg
cld
adc
shl
faddp
daa
in
test
cmp
jle
nop
ss
adc
mov
lods
loopne
sub
xchg
ja
sub
push
fstl
pop
popa
or
pop
xor
ror
mov
jg
cmp
push
mov
xchg
jg
xchg
cmpsb
mov
jae
pop
add
icebp
xchg
into
les
jnp
pop
or
in
inc
lods
push
mov
pop
sbb
test
push
sti
sub
mov
add
pusha
adc
jnp
sahf
sub
lret
cltd
sar
lcall
fiaddl
jbe
or
pop
jnp,pt
fwait
lret
pushl
test
lods
es
loopne
outsl
mov
mov
data16
adc
or
jg
mov
scas
mov
push
gs
in
fldcw
sub
inc
call
les
das
in
xchg
pop
xchg
int3
movsl
mov
push
andl
dec
sub
xor
lahf
adc
or
pushf
sub
cmp
and
inc
push
xlat
aad
pop
movsb
jmp
aad
pop
aaa
es
nop
imul
mov
jg
or
stc
sahf
aaa
push
fsub
es
into
sbb
jbe
outsl
mov
dec
ds
mov
add
inc
inc
sbb
pop
push
sub
mov
pop
arpl
ljmp
jle
arpl
push
cmpsl
fdiv
pushf
jo
xor
loope
test
sub
sbb
scas
clc
ljmp
cmp
cmc
push
fstp
test
lds
add
pop
insl
call
out
jo
push
aad
or
jnp
cmp
lcall
into
or
pop
dec
insl
pop
fsubl
cld
outsl
nop
mov
cld
out
push
mov
pusha
movsl
fdivr
inc
inc
clc
mov
out
enter
sahf
aam
sarl
or
add
repz
push
iret
add
pop
addr16
cmp
fcompl
or
dec
dec
sub
or
pushf
bound
cmp
fstpl
mov
jmp
jb
adc
and
add
pop
inc
inc
in
imul
hlt
insl
sti
loope
test
aas
sbb
mov
and
stc
pop
test
rorl
xchg
pushl
inc
pop
mov
push
push
pop
add
xor
sub
xchg
mov
lods
cmc
sar
clc
adc
and
dec
jp
pop
jbe
push
cmp
or
inc
fcmovu
sbb
call
jno
scas
inc
fwait
es
enter
dec
pop
adc
shl
or
popf
and
jge
cmpsb
pop
mov
fwait
add
hlt
adc
pushf
or
lcall
scas
repz
mov
xchg
add
push
outsl
xchg
out
enter
sti
call
or
pop
inc
clc
mov
mov
leave
pop
jg
inc
push
loopne
mov
lret
mov
mov
xchg
mov
fidivl
add
ja
lcall
xlat
sti
push
je
xor
out
ss
dec
or
clc
data16
cwtl
into
push
cld
call
in
push
lret
mov
cmc
rep
lcall
push
popa
and
cmpsb
repz
call
lea
stos
push
or
test
xchg
dec
sbb
stos
push
cli
jp
arpl
ja
add
cmc
pop
dec
insb
xchg
mov
inc
outsb
jg
xchg
lods
bound
cld
and
int3
pop
jecxz
popf
mov
ret
pop
sbb
push
sbb
sbb
icebp
leave
mov
or
inc
push
ds
imul
mov
call
xor
sbb
mov
mov
clc
pop
std
mov
loope
adc
jae
in
es
sbb
call
pop
sbbl
ficompl
or
out
fbld
jmp
shlb
xchg
roll
lcall
call
sub
cmpsl
les
std
dec
aam
loopne
loopne
adc
sti
mov
jmp
cli
scas
stc
inc
jnp
inc
xor
shlb
xchg
in
test
outsl
popf
mov
jl
mov
adc
imul
xor
aaa
test
fcomps
mov
or
sbb
sbb
sbb
or
inc
dec
mov
cltd
pop
xor
sub
dec
sbb
sub
sbb
mov
push
subl
add
pusha
adc
pop
pushf
lcall
pusha
pop
and
cmp
outsb
inc
cmp
mov
faddl
sub
pop
jb
add
sbb
cli
call
jp
jge
movsb
mov
fsubr
push
out
sbb
push
cs
rcll
repnz
push
dec
cmp
xchg
jmp
lcall
or
pop
rcrl
lahf
hlt
dec
pop
push
jl
or
decl
dec
shll
pop
loopne
pop
clc
gs
data16
inc
mov
cmpsb
pop
imul
cmp
cwtl
inc
sub
outsb
cmpsl
arpl
sbb
push
test
out
xchg
push
adc
in
push
cli
call
jne
inc
push
dec
push
mov
cmp
sub
xor
mov
pop
sar
ret
test
or
aaa
sar
fwait
pop
fcompl
xchg
pop
jns
or
test
mov
fistpll
pop
in
jns
int
xchg
test
popa
xchg
fimull
mov
xchg
stos
pop
or
decl
pop
loop
leave
in
movsl
mov
push
dec
mov
idivb
jg
adc
outsb
add
cmp
lea
std
fcomip
and
aas
inc
add
mov
and
lcall
enter
pop
inc
ss
fcomip
jnp
call
and
mov
sub
push
je
loope
test
jg
cwtl
pop
xor
dec
sbb
xor
jp
std
or
jmp
lcall
icebp
cmpsb
lret
or
sub
or
mov
int
outsl
clc
xchg
daa
ret
sbb
add
jg
and
dec
lods
sbb
adc
test
rclb
loop
mov
mov
lock
xchg
lock
or
sub
mov
lds
imul
ret
jg
stos
nop
dec
mov
jne
mov
ror
cli
pop
ja
pop
xor
loop
or
fs
mov
or
dec
dec
imul
and
and
imul
cmpl
cld
inc
push
add
inc
dec
rep
jnp
into
jp
shll
rep
decl
dec
inc
push
or
adc
sets
lcall
pop
lahf
popa
add
aad
adc
sar
lcall
push
sub
jecxz
and
fmuls
movsl
pushf
stos
xor
nop
insb
xchg
xor
into
incl
add
push
fmull
bound
push
int
scas
inc
xchg
out
pop
lock
out
sub
dec
lea
dec
and
and
push
nop
faddl
xchg
cmpsl
out
pop
cmpsb
and
mov
fnstsw
iret
fxch
cltd
push
adc
jge
or
xchg
xor
lea
loope
bound
mov
ljmp
fsubrs
inc
loopne
dec
cmc
pop
sub
outsl
data16
vmread
in
inc
xchg
outsb
roll
clc
mov
test
dec
mov
fisttpl
sbb
cmp
ljmp
daa
lods
xchg
sarl
out
pushf
js
pop
push
xor
dec
sti
jbe
dec
mov
cs
mov
cld
ljmp
out
les
push
mov
add
mov
arpl
adc
insb
dec
adc
jne
cmp
jg
push
insl
sub
push
xchg
in
std
cmp
sarl
push
lds
hlt
or
call
sarl
push
jge
mov
popf
push
stos
fcmovne
std
add
xchg
add
cmpsb
jnp
push
mov
test
in
inc
cmpsb
jnp
pop
lock
fiadds
push
ljmp
jg
mov
sahf
push
xor
mov
xor
dec
xor
loop
pop
pusha
mov
push
jmp
loopnew
xor
push
adc
repnz
dec
pusha
dec
repnz
js
fmull
lods
incl
gs
clc
daa
gs
cmp
arpl
sub
in
leave
mov
ljmp
aam
xor
jne
and
pop
std
jecxz
mov
loope
decb
fbld
mov
nop
pop
cmp
dec
push
into
and
jecxz
imul
and
decl
insl
sbb
dec
jne
loop
imul
dec
addl
std
push
fiaddl
pushl
xor
les
ljmp
hlt
jns
call
fdivl
hlt
test
push
mov
xor
mov
and
cwtl
test
aaa
mov
jge
pop
xchg
shrb
fnstcw
mov
add
insl
outsl
fidivrs
mov
and
jne
sarb
pop
dec
cmp
faddl
nop
stos
xor
mov
incl
loop
add
dec
mov
mov
shll
stos
movsl
and
or
clc
sbb
mov
in
shlb
sbbl
ja
les
fistps
out
or
add
adc
lea
adc
mov
dec
cmp
fildll
xchg
nop
push
aam
push
adc
add
test
sbb
or
mov
mov
mov
xor
xchg
dec
push
lds
cltd
cmp
cli
and
cmp
lcall
es
and
dec
inc
int
cli
mov
filds
lock
loopne
xor
call
mov
cmp
sahf
mov
rcrl
sbb
dec
push
inc
inc
sbb
dec
push
les
mov
mov
inc
fdivs
outsb
pop
mov
gs
jecxz
lret
jecxz
shlb
in
push
xchg
movsl
push
jecxz
rorb
in
test
mov
movsb
lods
adcl
jecxz
loopw
cmc
call
adc
jle
mov
aaa
fisttps
decl
out
lock
xlat
inc
ret
decl
jmp
mov
pop
mov
cmc
cmp
shl
add
lret
push
inc
mov
aad
push
addr16
rol
movsb
in
pop
and
push
cmp
into
pop
adc
iret
add
ljmp
mov
sub
xchg
pop
adc
jb
adc
dec
out
push
popf
pop
lock
lods
dec
and
push
out
cmp
mov
ret
sbb
loop
jno
lahf
imul
test
test
leave
jns
dec
adc
lock
test
addr16
xchg
ss
aaa
mov
xchg
and
cmpsb
ret
inc
dec
out
loope
mov
jnp
fwait
pop
mov
mov
aas
ljmp
jmp
jb
je
jb
push
inc
and
xchg
dec
es
and
ja
xchg
stos
shl
lahf
es
decl
lcall
filds
blci
xor
push
and
jmp
ljmp
add
movsl
push
fmuls
cmp
inc
dec
sub
mov
mov
cli
sti
dec
arpl
int3
outsb
or
pop
mov
shlb
dec
mov
mov
ljmp
push
sar
mov
add
lea
fs
cmc
aam
ret
fsts
mov
mov
push
sbb
enter
mov
insl
mov
push
dec
js
ret
sbb
mov
pop
addr16
xlat
adc
pushl
and
lock
jl
lea
into
fistpll
cmc
in
ljmp
dec
xor
decl
push
inc
in
pop
or
xlat
jnp
shrl
and
outsl
cwtl
mov
popf
pop
add
aad
add
lret
popw
mov
pop
repz
and
mov
ficoms
inc
inc
incl
rcll
in
in
nop
jnp
loopne
stc
lahf
data16
incl
sbb
ficomps
sub
cltd
jbe
out
jmp
jecxz
mov
ljmp
sti
call
insl
mov
add
loopne
push
pop
psubsb
sarl
gs
les
pop
mov
push
dec
out
scas
cmc
incl
movsl
adc
mov
sbb
imul
mov
mov
ror
push
mov
insb
pop
ljmp
jo
sub
inc
ljmp
mov
pop
jle
mov
add
mov
xchg
push
loop
jmp
into
fcomps
rolb
mov
fcomps
xchg
mov
pop
int3
aam
xor
sbb
fisttpl
ss
jmp
hlt
aaa
das
jl
pushf
cltd
mov
jbe
xlat
jmp
loopne
out
hlt
or
ss
js
shrb
lcallw
ss
stos
adc
sti
cmp
sbb
repz
pop
dec
and
push
decl
push
cmc
int
rorb
popf
mov
loope
das
cmp
adc
pop
push
cmp
fwait
das
es
mov
pushl
sub
aas
pop
out
outsl
insb
cltd
ror
and
xchg
pop
movsl
ljmp
adc
into
adcb
jle
pop
pop
jnp
dec
lahf
add
sbb
dec
add
aad
and
decl
in
mov
jbe
ja
inc
loope
aam
mov
mulb
cltd
jns
das
sar
iret
insl
lds
scas
adc
icebp
push
nop
push
jp
repnz
imul
sub
xchg
lret
and
xchg
adc
or
cmovae
jle
cmp
push
incl
les
addr16
adc
pop
call
cltd
ret
mov
mov
sub
ret
xor
jo
xchg
repnz
rol
jnp
adc
inc
stos
mov
fcmove
adc
jecxz
lret
in
repnz
mov
cmp
inc
jp
fsub
cs
mov
leave
jae
adcl
lods
jae
sbb
leave
inc
ds
pushl
mov
push
xchg
ss
cltd
test
cmp
orb
sbb
imul
insl
je
call
outsb
sub
ret
notb
test
dec
pusha
sub
mov
ret
xor
add
adcl
fwait
pop
push
insb
dec
imul
dec
test
mov
ret
jns
or
mov
loop
rcrb
adc
stos
xchg
neg
jb
inc
das
lea
inc
adc
fadd
les
lcall
int3
cwtl
js
loopne
pop
rcll
ret
incl
clc
or
int
in
pop
xchg
jg
lods
push
rol
cltd
fimull
les
pop
out
or
daa
or
add
incl
dec
jmp
inc
out
mov
popf
xchg
lock
ljmp
mov
pushf
mov
mov
dec
mov
adc
clc
imul
jmp
pop
push
jmp
or
faddl
mov
fwait
lods
jle
mov
xchg
mov
jg
ret
and
cmpsb
or
jg
adc
push
jecxz
mov
das
mov
rcrl
mov
in
imul
push
fldl
fcomip
outsl
push
loopne
xor
push
mov
ds
mov
xchg
add
cmp
call
shl
jns
push
or
aas
cmp
pop
mov
xor
sub
push
mov
in
sub
incl
mov
mov
je
addl
icebp
pop
inc
pop
cmpsb
cmp
pop
icebp
jg
mov
out
je
dec
scas
inc
rorl
incl
jle
enter
imul
sbb
jbe
push
lret
mov
inc
decl
mov
mov
fsts
clc
sbb
flds
jb
addl
sbb
jne
add
lods
arpl
inc
loopne
lock
mov
incl
xor
loopne
stos
clc
push
fwait
pop
dec
test
std
lock
jo
scas
sbb
jno
or
mov
mov
fldt
aas
movsl
daa
popf
adc
mov
ret
outsb
and
stos
fstpl
push
jl
sar
call
es
and
sub
iret
mov
ja
mov
repz
lock
jnp
fisttpl
lret
movsl
aad
xchg
push
fsubl
incl
and
pop
pop
ret
mov
mov
imul
mov
decl
data16
dec
fstp
or
daa
arpl
cmp
sub
das
xchg
cmp
decl
add
jnp
mov
sub
pop
pop
addb
out
fistl
shlb
lock
in
jmp
call
xchg
sub
lods
jp
pushf
add
bnd
push
push
xor
incl
sbb
add
pop
cmp
mov
add
dec
sub
cmp
std
fcomip
lock
mov
xchg
inc
mov
mov
fs
push
jne
cmp
sub
imul
jne
add
xchg
cmpsl
push
imul
jmp
add
push
xchg
leave
and
movsb
loopne
sub
dec
ret
mov
out
mov
push
pushl
ljmp
daa
cmp
rcl
pop
mov
pusha
movsl
mov
mov
imul
jmp
dec
sbb
sbb
mov
ljmp
pop
hlt
scas
mov
mov
mov
sbb
shr
cmpsl
pop
or
inc
pop
lcall
pushl
lods
sub
sub
fisttpll
popf
ss
cmp
mov
lcall
push
xchg
aad
cmpsl
push
xor
pop
popf
dec
xchg
notl
loopne
je
xchg
xchg
pop
je
jmp
rcrb
mov
mov
loopne
mov
cli
push
xor
notb
push
in
sub
call
bound
stos
orl
mov
cmp
or
adcl
and
jmp
push
shll
add
mov
cmpsl
incl
test
jp
test
test
adc
and
and
lods
fcoms
incl
jge
mov
daa
inc
fs
les
jmp
aad
mov
inc
stos
mov
cld
or
push
movsb
jae
cli
jg
or
les
inc
in
sbb
aam
mov
ss
inc
fcomp
imul
stc
pop
call
scas
mov
subb
add
cmovs
mov
insl
repz
repnz
popa
out
es
decl
das
incb
pop
in
inc
stc
int
ret
fisttps
or
imul
push
sbb
sbb
or
mov
popf
out
push
les
cltd
out
mov
xchg
sahf
sbb
call
xchg
into
ret
leave
fiadds
inc
leave
xchg
shlb
jge
jbe
cmpsb
or
icebp
pop
addr16
and
clc
lahf
sti
or
sub
out
jnp
add
fcomip
mov
inc
xchg
dec
dec
pop
sbb
push
lods
add
jle
or
pop
in
jno
sub
push
sahf
outsl
out
sub
std
cmp
ja
dec
inc
push
clc
dec
sti
pop
jecxz
push
stos
cmp
jge
ljmp
inc
stos
xchg
nop
aaa
pop
mov
and
cmp
inc
fdivl
leave
data16
xchg
cmp
mov
mov
fisubrs
mov
jmp
mov
ljmp
jg
mov
test
fnstsw
test
mov
xchg
outsl
push
adc
std
popa
jmp
mov
ret
rcrb
jmp
pop
cmp
add
jg
nop
jge
insl
add
sub
inc
cmp
jbe
out
jmp
testl
push
sub
jg
fldenv
jbe
adc
xor
mov
inc
daa
or
xorb
mov
lret
mov
pop
inc
incl
lahf
mov
sub
test
loope
popa
insb
mov
in
enter
jnp
add
clc
jg
mull
jb
call
vmaxss
adc
adc
out
fimull
insb
mov
xor
or
out
push
and
push
cld
decl
and
mov
xchg
out
jne
jbe
push
insb
xchg
sub
mov
push
or
movsb
lret
movsb
in
in
mov
int
decl
and
inc
sbb
cmp
repz
int
pop
int
incl
jecxz
sbb
pop
dec
sub
push
jnp
sahf
sbb
pop
xchg
test
daa
pop
call
mov
mov
aaa
and
jge
mov
movsl
les
sbb
hlt
cmpsb
out
push
jbe
mov
stc
xorl
aaa
cli
clc
dec
and
mov
cwtl
push
pusha
stos
aam
lahf
mov
xorb
inc
pop
je
mov
fs
ljmp
xor
adc
cmp
xor
jbe
add
cmp
pushf
pop
dec
inc
popa
sub
lcall
mov
xor
repnz
mov
cmp
mov
xor
into
test
adc
movsb
cmpsb
jbe
inc
cmp
insl
clc
insl
aad
adc
ds
push
insl
pop
mov
pop
cmpb
aaa
inc
push
sub
mov
lock
addb
test
hlt
mov
ljmp
adc
fimull
and
fistps
jecxz
cwtl
fbstp
cmp
mov
xchg
mov
sti
cmpsl
jo,pt
sahf
rcll
adc
mov
cmp
inc
push
stos
loop
stos
popf
movsb
movsb
mov
mov
xor
xor
xchg
jg
cmp
mov
cmp
inc
ljmp
sbb
xchg
adc
hlt
test
incl
cmpsb
out
scas
lea
mov
or
aaa
cmpsb
outsb
mov
inc
and
push
lcall
clc
cld
jge
push
cmp
lcall
loop,pn
test
jns
push
and
mov
lcall
inc
sub
faddl
push
clc
fcomip
add
cmp
fdivrs
dec
pop
js
pop
cwtl
les
xor
add
outsl
xchg
js
shll
fisttps
fcmovnb
sbbl
stc
imul
adcb
fs
in
popa
mov
mov
leave
mulb
call
mov
or
js
fldt
add
jne
data16
jp
sti
call
sbb
mov
sbb
test
ljmp
inc
inc
or
into
cwtl
sub
sbb
fnsave
outsb
lcall
lock
out
out
dec
ljmp
lock
aas
or
pop
mov
loopne
rcl
sbb
in
lret
and
pop
mov
jmp
jp
lret
cli
jno
jp
test
pop
enter
mov
ja
mov
jl
jp
jo
lcall
daa
or
and
rcll
je
shrl
adc
decl
fdivp
fsubl
dec
fldl
dec
dec
dec
movsl
cmp
out
outsl
sub
rcrl
rolb
mov
arpl
add
call
lcall
sbb
jne
push
xchg
scas
sarb
pop
pop
or
repnz
lahf
movsb
ret
mov
fdivl
imull
jo
adc
pushf
fdiv
ljmp
rorb
cmpsb
or
add
or
pop
cltd
inc
sub
lods
stc
fsts
arpl
ljmp
imul
pop
loop
popa
add
fstpt
mov
es
pop
cld
mov
xchg
adc
lods
push
shll
arpl
ja
out
dec
inc
push
jnp
ljmp
mov
rcll
or
jp
adc
mov
jmp
ljmp
ret
ljmp
pop
cmp
fistps
inc
dec
inc
fcompl
push
jecxz
cmp
push
cli
pop
sti
xchg
ss
popa
cld
loop
decl
mov
add
push
js
mov
xchg
xchg
xlat
bound
stc
pextrw
pop
fadd
or
dec
inc
mov
lret
dec
cmpsl
pop
in
pop
jno
push
add
jbe
popf
mov
mulb
mov
mov
dec
ficoms
test
jl
shl
rcrl
push
test
jne
lds
cli
aad
dec
decl
mov
pop
add
pop
pop
scas
and
cmp
mov
es
pop
arpl
mov
lcall
fbld
imul
lock
push
repz
push
push
adcl
insl
ljmp
push
and
hlt
mov
cli
mov
inc
dec
leave
daa
lahf
mov
dec
loop
mov
aam
ljmp
jbe
push
ljmp
sub
ljmp
sub
mov
cmpsb
mov
test
imul
ljmp
stos
insl
mulb
sbb
or
hlt
xchg
faddl
decl
pusha
jne
pop
jae
outsl
imul
lods
ds
xor
push
mov
mov
rcrl
jecxz
jecxz
adc
call
mov
in
lea
dec
ss
pop
sbb
pop
xchg
hlt
sarl
fildll
fidivs
popa
decb
push
push
into
fldl
or
fsubp
mov
jne
adc
or
jecxz
pop
subl
pop
xchg
jo
pop
loopne
push
aas
lds
lcall
pop
cmpsl
and
push
pop
sub
out
fcompl
and
jecxz
and
sbb
fbld
mov
mov
xchg
jl
lret
push
movsb
jo
xchg
push
fsts
mov
xchg
xchg
test
dec
inc
jp
stos
pushf
jge
lcall
ljmp
xor
mov
call
insl
jmp
nop
scas
imul
loope
dec
data16
loopne
jmp
jmp
std
insb
lcall
push
in
popw
sub
jno
lret
out
add
inc
mov
mov
pop
pop
es
enter
stc
push
rcrl
mov
stos
aas
icebp
movsb
sub
adc
mov
cltd
xchg
rcr
add
pop
sahf
sub
dec
push
mov
mov
mov
mov
ret
int3
popf
ret
push
inc
dec
leave
decl
sub
cmp
in
cmpb
notl
lcall
dec
cwtl
sub
cmp
inc
cld
mov
xchg
std
and
enter
out
loopne
cmpsb
in
jecxz
push
test
pop
pushl
add
inc
lret
and
sub
ret
bound
ret
nop
pop
shll
sub
cmc
cltd
inc
test
or
inc
out
ret
shr
xchg
mov
ret
mov
xchg
push
or
mov
mov
adc
movb
sub
and
jmp
inc
lcall
xor
or
lcall
sbb
mov
and
pop
mov
mov
or
adc
test
lcall
hlt
inc
mov
ljmp
shl
mov
or
orb
int3
cmc
mov
mov
inc
pop
icebp
pushf
aas
adc
and
cmp
jecxz
mov
mov
fidivrl
lcall
lea
fimuls
leave
inc
int3
and
dec
mov
add
inc
sbbb
fildll
mov
outsl
pmullw
aam
nop
push
enter
inc
ret
jg
ret
scas
sahf
stos
outsb
imul
mov
lcall
pop
stc
jle
jecxz
mov
out
les
push
imul
sbb
out
fiaddl
push
add
incl
mov
lods
adc
pop
or
inc
in
lahf
fwait
mov
xor
jb
ljmp
xchg
popf
int3
cmpb
movsl
clc
jbe
les
dec
jb
lahf
test
ljmp
or
mov
in
inc
das
mov
decl
and
cli
lret
popf
lods
adc
cmpsb
cmc
movsb
push
scas
add
and
jle
jbe
das
push
cwtl
ficomps
or
dec
clc
test
imul
jle
js
dec
mov
cmp
call
ja
mov
and
jns
add
and
or
fwait
subb
clc
call
lds
daa
in
outsb
movsl
out
sar
enter
and
push
cmp
pop
filds
icebp
test
push
fstps
outsb
xor
sbb
mov
decl
repnz
adc
loop
mov
insl
xchg
xor
dec
jmp
and
inc
push
outsl
decl
push
sbb
in
icebp
cwtl
pop
adc
mov
cs
cli
ds
lcall
lret
incl
daa
repnz
adcb
adc
outsb
push
push
in
jg
lcall
push
mov
fmuls
bswap
sbb
shr
dec
mov
jo
add
gs
sti
mov
cmp
sbb
jmp
xchg
lea
stos
mov
jp
scas
add
push
lret
test
xor
xchg
shr
mov
pushl
xchg
xlat
lcall
or
cltd
push
je
inc
push
mov
call
test
mov
popa
or
test
bound
dec
push
push
xchg
decl
arpl
jnp
leave
xor
xchg
pop
jp
xchg
or
cmp
jge
mov
mov
push
and
cltd
inc
jb
pushl
pop
sahf
test
xchg
pop
cld
rolb
shlb
adc
or
push
imul
jae
cmp
or
dec
dec
out
sbb
int
fs
xor
in
pushl
andl
adc
paddd
jl
push
and
add
push
pop
sbb
mov
out
int
bound
pop
enter
cltd
inc
sub
vmwrite
loopne
mov
xor
inc
xor
pop
ds
repnz
outsb
xchg
ss
inc
xchg
out
clc
incl
mov
std
dec
cmp
push
out
mov
mov
in
pop
in
sahf
pop
xlat
and
lock
jmp
push
cmp
lahf
imul
es
lock
call
sbb
pop
cld
dec
cmp
ljmp
push
bound
inc
and
sub
and
test
or
or
lea
mov
ljmp
ror
addr16
inc
aas
movsl
and
gs
dec
inc
cli
mov
sub
push
fidivrs
cmp
pop
inc
dec
adc
mov
rorb
ds
cmp
ja
pop
cmp
jbe
ret
xchg
lock
mov
imul
mov
mov
idivb
pop
jb
xor
adc
push
cmp
out
mov
pop
je
cmp
or
sub
mov
cmp
jle
fdiv
push
test
fnstenv
fs
mov
mov
movsb
pushf
and
add
xor
add
call
out
mov
loope
scas
repnz
inc
lods
jmp
movsl
pop
inc
cld
into
pop
sar
sbb
ss
call
adc
imul
mov
and
sbb
xorl
decl
pop
cs
sbb
addr16
mov
call
mov
adc
mov
je
rolb
adc
mov
in
cmp
dec
jg
add
adc
cmpsb
jle
andb
call
scas
fiaddl
sbbl
jg
cmpsl
mov
inc
cmpsl
ficompl
ret
adc
jae
mov
sbb
jp
xor
sahf
jmp
mov
dec
mov
lock
aaa
cmp
pop
movsl
push
nop
adc
popa
clc
mov
push
test
arpl
lea
dec
mov
lahf
in
or
sbb
ljmp
xchg
pusha
or
push
jae
mov
mov
outsb
testl
arpl
cmc
jg
and
fwait
pop
jmp
or
mov
mov
add
pop
xchg
pop
adc
incl
mov
xchg
inc
push
cs
and
sti
lret
es
sbb
or
and
pop
lahf
push
mov
enter
into
mov
divb
jmp
std
inc
stc
movsb
into
or
dec
dec
or
xor
pop
insb
imull
xchg
cmp
or
ljmp
or
ret
sub
leave
ret
in
jbe
jno
aas
or
pop
mov
mov
stos
xchg
das
xor
xor
incl
test
jno
lret
inc
fadds
mov
insl
cmp
stos
push
mov
les
jmp
jns
rorb
pop
xchg
add
das
jae
out
bound
dec
adc
jae
mov
insl
ret
pop
cmp
enter
out
xorb
cld
or
andb
jmp
aas
ds
jbe
sbb
repnz
lcall
mov
jmp
cld
arpl
ret
int
or
ret
sub
fwait
ds
test
sbb
das
or
into
hlt
scas
arpl
lods
jp
cs
xchg
sbb
clc
sub
push
enter
mov
sahf
fdivrl
scas
push
imul
mov
js
loope
cli
jno
jns
cmp
lds
sub
sbb
popf
jmp
pop
pushl
test
dec
in
mov
mov
cmp
xor
in
pushf
push
jmp
lea
mov
jb
xchg
cmpsl
jno
and
inc
loop
add
jo
inc
and
adc
pushl
addr16
es
cmp
adc
mov
push
pop
adc
sbb
outsl
sub
out
je
lods
stos
push
cmp
lcall
cmp
popa
sbb
sbb
and
sbbb
sub
cmp
mov
cli
fucom
xorl
lea
push
pop
out
xchg
inc
jl
mov
cmp
test
jns
movzbl
cli
jnp
push
ljmp
in
lcall
xchg
dec
lret
out
jmp
addr16
mov
cmpsl
cwtl
dec
mov
hlt
call
call
pop
pop
ret
icebp
outsb
and
loop
adc
enter
pop
imul
jecxz
mov
into
cmp
pop
pop
and
mov
jmp
add
lds
les
xor
cs
sbb
mov
lcall
cmp
or
mov
movsb
mov
in
es
mov
cmp
out
pop
mov
sub
mov
adc
lcall
inc
lret
movsb
lret
push
popa
cli
enter
pop
jbe
dec
inc
lcall
push
dec
sbb
inc
jno
lcall
rolb
adc
jmp
cli
xor
xchg
pop
aam
inc
mov
mov
jns
sbb
shlb
pop
jb
mov
and
lock
pop
jle
jmp
mov
pop
mov
adc
cmp
fmuls
xchg
dec
dec
ljmp
push
push
lret
stc
xor
jnp
add
jbe
fdivrs
jecxz
idiv
mov
sar
jmp
sub
cwtl
add
and
bound
xorl
out
jno
and
lret
popa
sbb
call
and
sbb
aaa
test
call
decl
xor
daa
in
dec
ljmp
movsb
loope
rorb
jo
js
push
fsub
out
ljmp
incb
fisubrl
inc
lret
lds
jp
les
pop
test
add
or
or
jg
mov
cmp
xchg
test
iret
cld
out
adc
push
add
lcall
rcrl
adc
fistpll
add
mov
xor
ljmp
repz
test
jmp
add
xlat
not
push
jge
push
add
dec
add
cmp
lock
jle
into
inc
pop
push
leave
jp
jg
cmp
pushf
jmp
mov
cmpsb
pusha
jnp
xchg
cs
stc
jnp
lcall
mov
jbe
inc
adc
mov
mov
mov
imulb
lods
mov
jmp
addr16
mov
ss
popa
and
inc
mov
xchg
lods
test
mov
push
sbb
mov
jg
sub
outsb
mov
test
std
ljmp
inc
or
sbb
sub
xchg
xor
push
nop
xlat
incb
mov
fwait
pop
shrb
bound
jmp
je
cmpsl
mov
adc
dec
add
mov
inc
loopne
mov
outsl
jns
scas
scas
xor
inc
mov
ss
jl
addl
lcall
mov
arpl
insb
sbb
mov
out
push
pop
mov
or
shlb
xorb
push
out
clc
dec
xor
push
sbb
xor
pop
sub
adc
call
jne
scas
xchg
dec
arpl
mov
mov
pop
dec
sahf
xor
xchg
ljmp
jbe
pop
js
loop
lcall
sbb
xchg
stos
sti
dec
icebp
in
mov
data16
decl
inc
mov
xchg
push
pop
xchg
ret
push
mov
movsl
xchg
cmpsb
mov
popf
clc
incl
push
ret
xor
jl
mov
sarb
pushl
incl
inc
add
adc
and
sub
push
ret
xchg
jno
lcall
mov
push
adc
ja
popa
sub
xchg
movsl
int3
adc
mov
flds
dec
outsl
scas
dec
cmc
out
mov
fwait
dec
xor
js
cmp
fadds
frstor
mov
add
lods
ja
sahf
push
ljmp
add
bound
inc
out
sub
inc
les
xlat
mov
roll
push
cs
dec
scas
sbb
inc
sub
test
jle
call
add
push
jmp
inc
jg
lds
jnp
jae
pminsw
stos
pop
and
sub
push
insb
loope
xor
call
adc
negb
movsb
daa
push
push
pop
and
ljmp
stc
push
mov
adc
mov
inc
das
insb
inc
jnp
lret
add
sub
add
mov
je
hlt
ljmp
push
xor
fstpt
and
data16
imul
shll
pop
hlt
gs
ret
ds
hlt
jo
jmp
fwait
xor
add
call
mov
push
or
roll
cmp
cmp
sti
fsubs
fdivr
decl
cwtl
mov
loope
repz
testl
push
mov
decl
outsl
aad
nop
xchg
sub
add
cmp
test
nopl
pushl
ret
fcomp
shll
popf
or
aaa
pushf
mov
scas
pop
cmpsl
addl
add
xchg
mov
loopne
and
scas
stc
lock
xor
adc
out
in
pop
inc
mov
das
imul
lcall
xchg
xor
repnz
fstl
loop
fwait
cmp
int
std
fldcw
shr
addl
add
pusha
jl
pushf
and
sbb
lret
sub
dec
mov
loope,pt
or
adc
mov
imul
xchg
pusha
pop
mov
unpckhps
pop
sub
sbb
pop
gs
aad
add
cmc
dec
jnp
fiadds
lcall
or
adc
cmp
jmp
lcall
stc
mov
pop
or
xchg
xchg
addb
test
push
sub
mov
stos
mov
pushf
and
pop
push
iret
jae
mov
jg
scas
lock
int3
cmc
xchg
out
dec
negl
jno
test
popa
filds
stos
jo
test
fs
call
in
push
xor
imul
or
mov
in
mov
jmp
nop
idivb
add
pusha
es
adc
pushl
popa
sbb
pop
out
dec
es
sub
clc
sub
adc
or
xorb
es
sar
call
pop
shl
lock
out
cltd
js
out
jecxz
aaa
xchg
jne
xor
cmp
lret
ret
or
jnp
mov
cmp
push
jo
and
and
jno
in
mov
cmp
sbb
lahf
outsb
and
iret
nop
jl
dec
int
addr16
cmp
ljmp
ret
pop
pop
ret
ja
mov
lahf
lock
ja
mov
scas
das
sti
adc
jnp
mov
ljmp
fidivl
scas
mov
pop
je
mov
mov
decl
stc
subb
sub
test
test
mov
scas
int3
pop
incl
cli
jb
mov
leave
out
mov
cmp
incl
sub
cmp
aam
and
xorb
icebp
mov
cmc
decl
or
push
fwait
lcall
xchg
rcrb
shl
and
fisttps
mov
inc
or
pusha
int
scas
movsb
mov
mov
pusha
ds
std
pushl
pop
cmp
cld
sbb
or
test
fiaddl
jmp
cmp
sbb
iret
loopne
daa
push
outsb
dec
push
mov
dec
sbb
pop
incl
jmp
xchg
add
and
sbbl
lcall
jne
daa
sti
mov
bound
insb
fcmovu
idivb
enter
xor
cmp
test
cmpsl
shr
jno
push
outsl
mov
loope
sbb
ja
or
dec
sub
lret
sarb
inc
popa
add
cmpsb
cmpsl
cmc
addr16
xchg
cmpl
xor
pop
mov
call
inc
inc
xchg
or
jecxz
bnd
push
mov
cmpsl
cmpsb
adc
andl
cld
mov
lea
dec
mov
pop
cltd
pop
inc
incb
iret
fsubrs
adc
fwait
adc
sbb
adc
notb
in
lods
in
sbb
int3
xor
aam
xchg
ffree
les
cmp
mov
popf
aaa
popa
ret
leave
sbb
js
inc
or
addr16
sbb
ljmp
xchg
int3
mov
aad
loopne
clc
push
decl
ja
in
fwait
mov
inc
add
test
mov
push
ret
loope
mov
loopne
int
and
mov
cmp
mov
jb
push
sbb
decl
insl
cs
mov
xchg
fidivl
push
fbstp
mov
xchg
sbb
pushl
push
dec
ss
adc
cmpsb
mov
fcoml
jge
call
imul
gs
int3
ljmp
fs
cmpsb
mov
test
fs
xchg
bound
lcall
inc
mov
push
push
jmp
inc
mov
cmp
decl
xchg
rolb
push
lahf
jbe
inc
xchg
adc
or
mov
repz
decl
dec
mov
dec
adc
mov
xchg
inc
xchg
stc
mov
fmul
icebp
inc
push
mov
mov
in
std
stc
pop
cmp
test
into
vmovupd
and
push
in
pop
in
xchg
mov
adc
pop
cltd
scas
movsl
sar
fwait
sbbb
movsl
dec
stos
jns
mov
push
stos
lcall
rcrb
std
jmp
sbb
mov
sti
decl
es
mov
bnd
cmpsl
inc
mov
jnp
sub
movsb
jno
ljmp
test
pop
loopne
xor
xchg
push
cmc
in
sbb
jb
sahf
fsub
adc
ljmp
dec
lods
test
xchg
dec
dec
mov
clc
jnp
arpl
push
xor
aam
decw
sbb
and
and
scas
lds
add
mov
push
iret
jbe
mov
fisubrs
je
addb
fiadds
and
rcrl
and
jns
mov
cmpsb
push
mov
pop
cld
push
add
mov
pop
inc
dec
cmc
cmc
outsb
pushf
cmp
incl
sbb
sub
cli
sahf
cmpsl
jg
icebp
out
xchg
pop
pop
pop
js
outsb
push
mov
clc
jg
push
lahf
stos
push
and
mov
rorb
daa
adc
popa
sub
cwtl
arpl
dec
push
xorb
or
and
sbb
xchg
jb
lret
lahf
dec
fdivs
jl
incl
sarl
out
loope
test
pop
jae
mov
repnz
mul
es
mov
call
xor
push
mov
lret
lahf
iret
jo
mov
sub
inc
push
sar
jmp
xchg
pop
jecxz
imull
daa
iret
test
mov
outsb
sahf
out
out
gs
mov
and
imul
dec
clc
jmp
xchg
jmp
into
pop
mov
cmc
jne
incl
ret
daa
add
mov
cmp
loope
imul
sbb
mov
xchg
gs
pusha
jle,pn
or
jl
or
adc
jle
mov
jmp
inc
sub
insl
jg
inc
cmp
insl
cmpsl
mov
das
mov
pushl
mov
pop
jno
push
leave
pushf
jo
pop
jmp
fs
insb
mov
xchg
mov
out
cmp
enter
xor
shll
loopne
mov
add
push
icebp
in
and
subl
and
scas
jg
dec
sbb
or
sub
mov
push
jecxz
lcall
das
shrl
add
lea
out
jo
loopne
mov
pop
mov
js
push
adc
decl
out
pop
and
into
mov
mov
shlb
xchg
lret
mull
lcall
fucomip
cmpsb
dec
sbb
lahf
sbb
fadds
fidivrs
pop
dec
sbb
pop
icebp
and
daa
fsubrs
push
cmp
inc
fldt
sub
movsl
mov
pop
add
jmp
mov
cmp
int
xchg
dec
pushf
pop
sbbb
lea
mov
sub
and
xor
in
mov
lret
push
in
and
adc
sub
xor
pushl
cmpsb
pop
movsl
xor
fists
jne
leave
pop
mov
jp
mov
sti
ljmp
xor
adc
add
jno
clc
mov
inc
ljmp
adc
sbb
xor
or
dec
sarl
bound
inc
mov
mov
aas
cmp
adc
pop
or
sbb
mov
outsb
cmpsl
or
mov
lea
ja
jns
push
add
pop
pop
push
adc
and
stc
outsl
mov
test
data16
lock
push
add
xchg
jmp
and
mov
mov
lcall
cmp
rorl
cmp
les
cmp
mov
rcr
or
add
lods
and
insb
stos
xchg
bnd
or
out
pop
subb
and
fildll
push
jl
adc
xor
add
frstor
jle
or
adcb
push
adc
cmp
cmp
mov
mov
imull
outsl
lds
in
jl
xor
cli
call
jnp
push
addr16
into
fmull
pop
ds
aam
orb
sbb
jmp
mov
scas
and
sub
mov
inc
adc
mov
jne
jl,pn
decl
iret
mov
shlb
push
cltd
jecxz
sbb
pop
add
ljmp
nopl
xchg
push
rolb
ljmp
adc
movl
add
mov
movsl
jns
pusha
pushf
inc
jmp
mov
sbb
pushl
ret
push
sub
add
repnz
jp
stos
mov
mov
loop
mov
or
lock
pushf
push
out
xchg
into
fs
sbb
cmpl
call
fisttps
sub
dec
cmpsl
imul
xor
ljmp
lds
aas
mov
cltd
pop
imul
fldcw
fbstp
das
roll
out
ljmp
repz
mov
or
mov
jno
rol
sub
mov
xor
out
stos
jg
jmp
adc
sbb
test
adc
mul
push
pushl
or
xchg
pop
cmp
mov
fadds
mov
andl
clc
lret
fwait
pop
sub
aaa
mov
xor
cmp
lret
ss
jne
pop
jp
and
mov
push
negb
outsb
ljmp
inc
jbe
sbb
shl
adc
int3
imul
add
ds
sub
mov
xchg
inc
into
and
or
lods
lock
or
in
add
decl
int
xchg
pop
pushf
dec
or
imulb
pop
add
xor
lds
loope
xchg
push
ror
jl
stos
stos
out
fmull
sbb
xchg
movsb
adc
stc
and
cltd
sub
xor
popa
test
adc
iret
leave
adc
push
push
mov
repnz
shll
js
out
int3
loopne
cmp
jg
in
andb
data16
cmpsl
bound
aas
in
dec
add
or
cld
mov
adc
push
mov
push
add
or
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
or
inc
push
lcall
rcrb
xchg
sbb
mov
cld
fldt
sahf
insl
stos
mov
cld
cmp
jmp
jmp
mov
push
jl
dec
stos
sub
adc
sub
jo
es
xchg
inc
mov
pushl
dec
in
inc
lret
mov
pop
es
out
add
mov
icebp
or
or
pop
stc
jne,pn
jmp
aad
sub
xlat
cmp
outsb
pop
adc
in
fildll
push
mov
testb
pop
xor
adcl
mov
lret
cmp
xchg
mov
ds
jg
sub
or
lcall
popa
pop
lock
sbb
jne
lahf
jmp
lods
lods
jle
pop
imul
sbb
ljmp
xlat
lods
jae
push
inc
imul
inc
cmpsb
push
adc
mov
outsb
push
jmp
div
std
aaa
adc
and
push
mov
in
or
movnti
repnz
or
mov
sbb
cmp
adcb
jg
ss
fsts
jecxz
pop
repz
xchg
andl
mov
cs
subl
add
push
inc
mov
or
or
dec
pop
inc
push
negb
cmp
mov
adc
jecxz
call
pop
fistpl
addb
insl
in
mov
inc
mov
std
cmp
pushl
scas
cmp
cmp
cmc
subb
mov
sbb
lahf
loop
add
out
xchg
lcall
push
stos
gs
mov
mov
mov
and
dec
scas
loope
incl
fisubl
lds
mov
dec
jle
push
mov
cmp
jg
xchg
cmpsl
call
sbb
sbb
jbe
xchg
lds
adc
xor
imul
incl
pusha
cld
cmp
loopne
add
cmpsl
mov
in
jge
dec
insb
iret
inc
sbb
int3
push
sbb
mov
roll
mov
int
xchg
aam
dec
cmp
ss
fists
insl
int3
mov
ljmp
inc
add
test
repz
cmp
data16
subb
daa
pop
jmp
shlb
repnz
pop
dec
sarl
aad
dec
fsubrl
nop
jbe
insb
pop
repnz
mov
call
adc
mov
mov
push
xor
mov
xchg
mov
je
popa
cmpsb
mov
popa
mov
xor
ss
adc
sub
add
dec
orb
mov
add
fs
or
add
add
adc
and
inc
inc
inc
dec
dec
inc
pop
pop
adc
add
jno
add
mov
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
cwtl
out
inc
call
outsb
imul
push
dec
imul
sti
pop
push
insb
jae
gs
sub
sbb
jb
inc
gs
push
frstor
and
imul
arpl
insl
outsb
sub
pusha
inc
jne
jb
push
push
outsl
jbe
push
arpl
outsl
and
arpl
popa
outsb
fs
cmpb
mov
les
inc
push
jb
jne
inc
push
fmul
ficomps
xor
jae
mov
out
cltd
push
pop
cwtl
in
fimuls
fs
outsb
dec
outsl
dec
bound
mov
sbb
inc
test
mov
int3
out
inc
insb
mov
mov
xchg
fmul
mov
sbb
push
jns
push
imul
inc
lods
imul
and
jns
imul
sub
dec
jae
inc
adc
insb
xchg
fsubs
loopne
outsl
fs
dec
js
aas
push
sahf
lretw
sbb
dec
insl
popa
addr16
ret
outsb
jne
cmp
repnz
jns
ret
fidivl
cmp
inc
imul
xchg
lret
inc
mov
adc
or
mov
bound
xchg
jge
xchg
xor
andb
xor
or
mov
fsubrs
lea
inc
xor
inc
in
inc
adc
jg
jno
and
jne
add
sub
mov
push
add
or
mov
dec
repz
mov
mov
sub
pop
sub
or
sub
outsl
test
stos
mov
sbb
push
mov
add
mov
add
and
push
and
adc
or
daa
inc
je
dec
xchg
inc
jno
add
sub
and
adc
pop
mov
mov
stos
push
add
mov
dec
inc
js
or
add
add
inc
shll
sub
inc
stos
cmp
add
enter
jb
outsb
jae
dec
pop
leave
push
out
cmp
in
shlb
push
and
fs
jnp
and
inc
sub
add
ret
sub
pop
adc
xlat
add
adc
jnp
adc
or
aad
jne
jg
add
mov
add
mov
add
sub
or
dec
rclb
and
or
add
inc
pop
jno
cmpsl
inc
sbb
add
sub
and
or
push
or
add
or
or
add
test
mov
or
pop
and
push
shrl
sub
adc
aaa
push
xorb
mov
adc
sub
inc
or
inc
scas
pop
mov
dec
or
add
loop
and
or
or
mov
bound
idiv
insl
push
inc
push
dec
add
add
ljmp
orl
out
insl
push
mov
adc
or
inc
add
lock
add
jge
pop
mov
add
pop
or
push
daa
xor
sub
js
mov
add
cmp
pusha
sbb
es
cmpsl
testb
lcall
push
jo
fadd
movd
add
jg
shrb
push
inc
testl
ss
inc
mov
rorb
mov
andl
dec
and
xchg
xchg
push
shlb
scas
add
jae
cmp
push
jbe
jb
loopne
ficoml
lods
add
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
inc
add
addb
add
add
add
add
add
add
add
add
add
pop
add
add
xor
add
or
add
add
add
add
add
add
add
add
addb
addb
add
add
add
add
add
add
add
add
add
cwtl
add
add
fildl
sub
add
in
add
add
add
add
add
add
add
rolb
addb
add
add
add
add
add
add
add
add
add
fadds
add
dec
inc
fildl
in
add
in
add
add
add
call
dec
int3
dec
imul
add
add
mov
mov
dec
mov
popa
sbb
iret
aad
hlt
orl
cld
in
shl
in
lahf
add
sarb
xor
ret
add
adc
cmp
fidivs
sub
dec
lahf
xchg
adc
jle
mov
or
pusha
jp
sub
and
fs
pop
push
sub
sub
icebp
ficompl
repnz
cmc
out
dec
cmpsl
inc
lds
hlt
roll
jmp
movsl
push
inc
test
filds
leave
inc
lahf
pop
push
sysret
outsb
faddl
xchg
insb
test
cltd
push
push
test
ja
mov
sti
cmp
mov
jg
push
lret
pop
pushf
fldcw
sbbl
sti
dec
jmp
mov
and
mov
dec
cmp
xor
and
and
jno
push
pop
aas
sub
cmp
xchg
fisubs
sti
add
mov
bsf
mov
call
lahf
sarl
and
cmpsl
fnstsw
pushf
shlb
test
xchg
sahf
mov
xor
pop
jae
sbb
xchg
sbb
vmovaps
hlt
inc
mov
sbb
sbb
and
ljmp
and
inc
fwait
jbe
adc
inc
or
fsubl
push
pop
loop
loop
pop
lret
mov
sub
inc
cmpsl
and
sub
dec
outsl
mov
sbb
cmp
hlt
inc
outsl
ret
xlat
repnz
hlt
push
lahf
inc
sub
insb
je
mov
jno
sbb
test
dec
or
jge
mov
nop
mov
jle
and
xchg
scas
das
adc
test
xlat
push
adc
sarl
mov
das
push
inc
inc
or
or
push
mov
call
add
stos
mov
jp
clc
out
mov
xorb
faddl
sub
push
sub
jb
aam
push
xchg
pop
fdivs
loope
lods
mov
cmp
pop
or
lret
in
popf
stos
xor
sbb
sub
pop
loopne
pop
or
mov
mov
and
mov
lock
inc
out
jne
cmc
dec
jbe
add
push
or
sbb
in
cwtl
pop
fs
scas
mov
out
shll
jae
or
push
mov
xchg
loope
pop
cmp
mov
pop
ffreep
adc
sbb
out
jp
dec
cld
shll
ficoml
add
lock
sub
lods
adc
or
dec
jl
jg
sub
repnz
lock
xlat
lahf
orl
mov
mov
repz
leave
and
cmp
pop
sbb
movsl
jbe
jecxz
jle
xchg
dec
cwtl
lea
addr16
pop
test
movsb
mov
decb
push
dec
lods
sahf
enter
pop
dec
mov
std
push
mov
roll
mov
ds
cmp
icebp
pop
jns
sar
rcr
inc
mov
pusha
xchg
cld
dec
bound
dec
insb
jns
mov
mov
roll
cltd
mov
mov
mov
mov
adc
loope
scas
loopne
cmpsl
push
cmp
or
outsb
sbb
and
int
pop
fidivl
adcb
ficomps
aad
add
aas
scas
call
adc
adc
imul
mov
fbld
jmp
xchg
data16
ret
push
mov
fidivl
jb
enter
adc
push
pop
xor
js
test
aaa
xchg
add
xor
sub
mov
mov
push
xorl
lcall
insb
shlb
jl
fwait
aas
fsts
cmp
mov
leave
fists
mov
push
pop
push
pop
ljmp
fdivrs
or
xchg
and
xchg
xchg
xchg
cmp
test
sbb
in
in
ret
dec
out
adc
pop
outsb
sti
sub
add
inc
xchg
dec
mov
dec
arpl
call
popa
dec
lcall
dec
pop
adc
leave
lahf
xor
jae
lahf
mov
mov
inc
sbb
pop
jnp
lea
ljmp
and
add
pusha
jl
sbb
mov
xchg
jb
pop
addr16
das
mov
in
push
repz
or
mov
fcmovu
rcr
adc
stos
dec
rorb
pop
shrb
ret
and
xchg
mov
jge
aaa
mov
stos
test
dec
mov
ret
xchg
xchg
pop
js,pn
and
fwait
lods
leave
test
mov
xor
iret
sbb
mov
aam
cmp
push
pop
shl
out
in
fisubrs
movsb
fmull
pop
push
push
sbb
fwait
dec
cld
int3
aaa
cmc
rorb
repz
mov
lahf
es
mov
addl
sbbb
inc
sub
mov
mov
sbb
mov
repz
rcrl
cltd
mov
cs
sub
sbb
int
out
enter
xchg
in
je
cmp
mov
roll
sbb
push
fdivrs
xchg
push
inc
leave
loop
xchg
fsubl
rolb
fdivs
lret
or
xor
sti
pop
mov
test
sub
movsb
sbb
mov
push
cli
jecxz
sarb
cmpl
daa
xchg
pop
movsb
mov
test
pop
mov
push
xchg
sub
imul
loope
test
lea
add
ret
pusha
into
hlt
push
std
dec
cwtl
mov
or
sbb
pop
sbb
adc
adc
adc
call
sbb
arpl
je
xor
pop
push
pop
mov
inc
int
inc
push
adc
inc
popf
in
jl
sbb
cmp
mov
lret
fwait
aad
arpl
rcll
inc
pop
into
sub
dec
mov
dec
stc
pop
mov
xchg
pop
int3
sysenter
push
loop
mov
add
in
enter
add
ljmp
push
xor
aam
rcrb
or
cld
add
repz
sub
push
push
jmpw
cmp
pop
mov
test
mov
out
ja
rcl
jne
bound
mov
pop
cltd
ficomps
jo
pop
push
dec
cmpxchg
loopne
inc
jmp
out
in
cltd
push
pop
popa
push
xchg
lahf
dec
jne
push
pop
push
adcl
and
jl
mov
and
xor
lahf
rorl
jb
inc
xchg
or
mov
push
shl
cmp
dec
shrl
lea
iret
mov
aas
or
push
btr
nop
sub
mov
jne
leave
fimull
jp
fmul
imul
aas
adc
sub
in
shrb
clc
fstpl
push
nop
push
mov
js
sbb
jge
sti
cmp
ret
cli
adc
andb
in
enter
cld
push
les
xchg
add
adc
or
mov
xor
mov
daa
inc
add
dec
cs
jae
ficoml
jae
loopne
out
insl
lret
xor
dec
mov
ret
hlt
xchg
sbb
pop
outsl
movl
inc
arpl
fdivrl
xor
sub
sub
mov
shrb
inc
imul
lds
aaa
lea
jmp
inc
inc
adc
lds
lcall
sub
sbb
flds
mov
mov
dec
mov
popa
sbb
iret
aad
hlt
orl
cld
in
shl
in
lahf
add
sarb
xor
ret
add
adc
cmp
fidivs
sub
dec
lahf
xchg
adc
jle
mov
or
pusha
jp
sub
and
fs
pop
push
sub
sub
icebp
ficompl
repnz
cmc
out
dec
cmpsl
inc
lds
hlt
roll
jmp
movsl
push
inc
test
filds
leave
inc
lahf
pop
push
sysret
outsb
faddl
xchg
insb
test
cltd
push
push
test
ja
mov
sti
cmp
mov
jg
push
lret
pop
pushf
fldcw
sbbl
sti
dec
jmp
mov
and
mov
dec
cmp
xor
and
and
jno
push
pop
aas
sub
cmp
xchg
fisubs
sti
add
mov
bsf
mov
call
lahf
sarl
and
cmpsl
fnstsw
pushf
shlb
test
xchg
sahf
mov
xor
pop
jae
sbb
xchg
sbb
vmovaps
hlt
inc
mov
sbb
sbb
and
ljmp
and
inc
fwait
jbe
adc
inc
or
fsubl
push
pop
loop
loop
pop
lret
mov
sub
inc
cmpsl
and
sub
dec
outsl
mov
sbb
cmp
hlt
inc
outsl
ret
xlat
repnz
hlt
push
lahf
inc
sub
insb
je
mov
jno
sbb
test
dec
or
jge
mov
nop
mov
jle
and
xchg
scas
das
adc
test
xlat
push
adc
sarl
mov
das
push
inc
inc
or
or
push
mov
call
add
stos
mov
jp
clc
out
mov
xorb
faddl
sub
push
sub
jb
aam
push
xchg
pop
fdivs
loope
lods
mov
cmp
pop
or
lret
in
popf
stos
xor
sbb
sub
pop
loopne
pop
or
mov
mov
and
mov
lock
inc
out
jne
cmc
dec
jbe
add
push
or
sbb
in
cwtl
pop
fs
scas
mov
out
shll
jae
or
push
mov
xchg
loope
pop
cmp
mov
pop
ffreep
adc
sbb
out
jp
dec
cld
shll
ficoml
add
lock
sub
lods
adc
or
dec
jl
jg
sub
repnz
lock
xlat
lahf
orl
mov
mov
repz
leave
and
cmp
pop
sbb
movsl
jbe
jecxz
jle
xchg
dec
cwtl
lea
addr16
pop
test
movsb
mov
decb
push
dec
lods
sahf
enter
pop
dec
mov
std
push
mov
roll
mov
ds
cmp
icebp
pop
jns
sar
rcr
inc
mov
pusha
xchg
cld
dec
bound
dec
insb
jns
mov
mov
roll
cltd
mov
mov
mov
mov
adc
loope
scas
loopne
cmpsl
push
cmp
or
outsb
sbb
and
int
pop
fidivl
adcb
ficomps
aad
add
aas
scas
call
adc
adc
imul
mov
fbld
jmp
xchg
data16
ret
push
mov
fidivl
jb
enter
adc
push
pop
xor
js
test
aaa
xchg
add
xor
sub
mov
mov
push
xorl
lcall
insb
shlb
jl
fwait
aas
fsts
cmp
mov
leave
fists
mov
push
pop
push
pop
ljmp
fdivrs
or
xchg
and
xchg
xchg
xchg
cmp
test
sbb
in
in
ret
dec
out
adc
pop
outsb
sti
sub
add
inc
xchg
dec
mov
dec
arpl
call
popa
dec
lcall
dec
pop
adc
leave
lahf
xor
jae
lahf
mov
mov
inc
sbb
pop
jnp
lea
ljmp
and
add
pusha
jl
sbb
mov
xchg
jb
pop
addr16
das
mov
in
push
repz
or
mov
fcmovu
rcr
adc
stos
dec
rorb
pop
shrb
ret
and
xchg
mov
jge
aaa
mov
stos
test
dec
mov
ret
xchg
xchg
pop
js,pn
and
fwait
lods
leave
test
mov
xor
iret
sbb
mov
aam
cmp
push
pop
shl
out
in
fisubrs
movsb
fmull
pop
push
push
sbb
fwait
dec
cld
int3
aaa
cmc
rorb
repz
mov
lahf
es
mov
addl
sbbb
inc
sub
mov
mov
sbb
mov
repz
rcrl
cltd
mov
cs
sub
sbb
int
out
enter
xchg
in
je
cmp
mov
roll
sbb
push
fdivrs
xchg
push
inc
leave
loop
xchg
fsubl
rolb
fdivs
lret
or
xor
sti
pop
mov
test
sub
movsb
sbb
mov
push
cli
jecxz
sarb
cmpl
daa
xchg
pop
movsb
mov
test
pop
mov
push
xchg
sub
imul
loope
test
lea
add
ret
pusha
into
hlt
push
std
dec
cwtl
mov
or
sbb
pop
sbb
adc
adc
adc
call
sbb
arpl
je
xor
pop
push
pop
mov
inc
int
inc
push
adc
inc
popf
in
jl
sbb
cmp
mov
lret
fwait
aad
arpl
rcll
inc
pop
into
sub
dec
mov
dec
stc
pop
mov
xchg
pop
int3
sysenter
push
loop
mov
add
in
enter
add
ljmp
push
xor
aam
rcrb
or
cld
add
repz
sub
push
push
jmpw
cmp
pop
mov
test
mov
out
ja
rcl
jne
bound
mov
pop
cltd
ficomps
jo
pop
push
dec
cmpxchg
loopne
inc
jmp
out
in
cltd
push
pop
popa
push
xchg
lahf
dec
jne
push
pop
push
adcl
and
jl
mov
and
xor
lahf
rorl
jb
inc
xchg
or
mov
push
shl
cmp
dec
shrl
lea
iret
mov
aas
or
push
btr
nop
sub
mov
jne
leave
fimull
jp
fmul
imul
aas
adc
sub
in
shrb
clc
fstpl
push
nop
push
mov
js
sbb
jge
sti
cmp
ret
cli
adc
andb
in
enter
cld
push
les
xchg
add
adc
or
mov
xor
mov
daa
inc
add
dec
cs
jae
ficoml
jae
loopne
out
insl
lret
xor
dec
mov
ret
hlt
xchg
sbb
pop
outsl
movl
inc
arpl
fdivrl
xor
sub
sub
mov
shrb
inc
imul
lds
aaa
lea
jmp
inc
inc
inc
add
add
pop
push
sub
sbb
flds
mov
mov
dec
mov
popa
sbb
iret
aad
hlt
orl
cld
in
shl
in
lahf
add
sarb
xor
ret
add
adc
cmp
fidivs
sub
dec
lahf
xchg
adc
jle
mov
or
pusha
jp
sub
and
fs
pop
push
sub
sub
icebp
ficompl
repnz
cmc
out
dec
cmpsl
inc
lds
hlt
roll
jmp
movsl
push
inc
test
filds
leave
inc
lahf
pop
push
sysret
outsb
faddl
xchg
insb
test
cltd
push
push
test
ja
mov
sti
cmp
mov
jg
push
lret
pop
pushf
fldcw
sbbl
sti
dec
jmp
mov
and
mov
dec
cmp
xor
and
and
jno
push
pop
aas
sub
cmp
xchg
fisubs
sti
add
mov
bsf
mov
call
lahf
sarl
and
cmpsl
fnstsw
pushf
shlb
test
xchg
sahf
mov
xor
pop
jae
sbb
xchg
sbb
vmovaps
hlt
inc
mov
sbb
sbb
and
ljmp
and
inc
fwait
jbe
adc
inc
or
fsubl
push
pop
loop
loop
pop
lret
mov
sub
inc
cmpsl
and
sub
dec
outsl
mov
sbb
cmp
hlt
inc
outsl
ret
xlat
repnz
hlt
push
lahf
inc
sub
insb
je
mov
jno
sbb
test
dec
or
jge
mov
nop
mov
jle
and
xchg
scas
das
adc
test
xlat
push
adc
sarl
mov
das
push
inc
inc
or
or
push
mov
call
add
stos
mov
jp
clc
out
mov
xorb
faddl
sub
push
sub
jb
aam
push
xchg
pop
fdivs
loope
lods
mov
cmp
pop
or
lret
in
popf
stos
xor
sbb
sub
pop
loopne
pop
or
mov
mov
and
mov
lock
inc
out
jne
cmc
dec
jbe
add
push
or
sbb
in
cwtl
pop
fs
scas
mov
out
shll
jae
or
push
mov
xchg
loope
pop
cmp
mov
pop
ffreep
adc
sbb
out
jp
dec
cld
shll
ficoml
add
lock
sub
lods
adc
or
dec
jl
jg
sub
repnz
lock
xlat
lahf
orl
mov
mov
repz
leave
and
cmp
enter
xchg
inc
fildl
aad
fildl
mov
fildl
fldl
mov
add
add
inc
fildl
rolb
add
add
inc
fildl
cli
inc
fildl
or
add
inc
fildl
sub
add
inc
fildl
add
add
inc
inc
fildl
add
add
pop
inc
fildl
add
add
push
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
jns
je
xor
imul
jo
jne
gs
xor
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
jb
jo
push
gs
data16
imul
gs
add
add
outsb
fs
insl
popa
add
add
je
imul
