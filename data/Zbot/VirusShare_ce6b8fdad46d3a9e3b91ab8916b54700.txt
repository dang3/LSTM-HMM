decl
test
mov
ret
sahf
mov
add
push
push
ret
out
xchg
ja
stos
and
call
rcrl
pop
jns
nop
and
mov
insb
and
adc
imul
adc
or
mov
ljmp
mov
add
ja
mov
adcb
test
xchg
mov
inc
incl
fldl
or
jne
xchg
sub
pop
test
lock
ljmp
loope
sbb
add
mov
scas
jo
mov
xor
enter
mov
ja
lds
pushf
mov
iret
and
xchg
push
outsb
push
inc
push
mov
ljmp
outsb
adc
stc
js
sub
orb
les
push
loope
xchg
lret
jne
hlt
mov
mov
fwait
das
xor
outsb
sbb
shll
arpl
xor
shlb
pushl
ss
jp
xor
adc
adc
sbb
pop
lods
push
add
mov
lcall
xchg
outsb
xchg
cltd
daa
jno
push
xor
hlt
inc
stos
popa
aam
js
js
fnsave
inc
xchg
cmp
js
dec
jnp
sbb
scas
int3
mov
jmp
outsl
loopne
data16
add
incl
pop
test
jg
mov
fimuls
out
cmpsb
popa
jmp
mov
ret
ret
mov
imul
xor
das
popf
into
xor
mov
cmp
call
cld
sub
out
clc
sub
xor
js
addr16
push
jae
out
xchg
adc
dec
mov
ljmp
push
inc
int
mov
dec
std
sahf
fdivs
mov
add
or
inc
xorb
stos
mov
je
jg
aas
mov
sbb
lcall
jle
scas
mov
cltd
push
fdiv
jp
nop
dec
lahf
cmp
adc
jne
sub
push
shl
ljmp
sbb
adc
cld
inc
into
into
and
dec
rorb
jmp
mov
in
loopne
jno
xor
and
xor
inc
sub
movsl
dec
or
and
decl
inc
subb
js
adc
dec
ljmp
mov
mov
mul
pushl
push
cmp
cmpl
ficomps
mov
mov
outsb
or
cs
mov
inc
push
xchg
mov
cmpsl
mov
inc
add
test
dec
out
popf
jle
mov
jnp
stos
daa
xchg
dec
daa
hlt
lret
jmp
rclb
rcr
sti
not
out
or
jle
pop
and
call
xor
mov
notb
in
add
hlt
mov
push
or
jnp
call
out
mov
cmc
fisttpl
movsb
ret
jno
test
ret
pop
into
loop
sbb
loope
sub
das
adc
inc
lods
jno
int3
test
or
push
sub
or
sbb
enter
outsl
lcall
je
xor
aad
mov
inc
cmp
test
jae
sbb
cltd
std
sti
mov
mov
nop
xchg
xor
fdivrp
mov
jne
test
or
lods
jmp
in
xchg
jmp
mov
cwtl
or
mov
fnsave
sbb
add
incl
push
repnz
out
test
jne
fs
mov
int
aad
mov
jp
je
fldcw
jp
xor
dec
mov
lds
push
jecxz
insb
imul
pop
stc
xchg
orl
inc
ret
sbb
jecxz
bound
cmc
movsb
repnz
test
stos
xor
mov
mov
dec
mov
pop
sbb
icebp
stos
mov
call
pop
ret
ja
lret
fildll
inc
mov
dec
outsb
imul
lcall
clc
cmpsb
pushl
mov
pop
push
pop
xlat
out
add
scas
stos
pop
jo
dec
mov
mov
pushl
insb
pop
mov
nop
mov
loopne
mov
int
cmp
ljmp
ljmp
lret
cmc
xchg
in
loope
lea
adc
adc
mov
jae
pop
lret
test
in
lds
push
jp
xlat
inc
mov
push
xlat
mov
scas
sbb
adc
fisubs
incl
mov
rclb
stos
leave
outsl
dec
aas
das
cmp
test
fwait
xor
incl
ds
push
push
vpsubw
imul
int3
aas
mov
add
dec
xchg
shlb
fisttps
adcl
or
hlt
stc
mov
add
pop
lods
inc
cmp
mov
xlat
dec
jl
ljmp
or
pop
adc
pop
std
decl
clc
pop
xchg
ja
or
sbb
push
idivb
popf
aam
in
lods
and
push
icebp
xchg
adc
mov
btc
cmp
mov
out
mov
pusha
mov
sub
cs
out
sub
jmp
repz
mov
push
cmp
and
popa
stos
push
fisubs
test
pop
jge
sub
mov
clc
jbe
leave
les
movsl
shl
inc
xor
cs
jmp
cmpsl
imul
mov
xor
inc
mov
sbb
into
jne
aad
push
lea
push
jecxz
pop
push
aam
and
mov
outsl
push
outsb
clc
decl
mov
das
mov
mov
or
je
push
pop
fmull
push
add
shr
mov
out
xchg
stc
rcrb
adc
popf
stos
das
mov
sub
ljmp
pop
call
pushl
or
lea
out
add
sub
or
jns
pop
pop
dec
jae
hlt
ret
sbb
ljmp
jo
mov
lahf
and
fs
mov
lods
das
mov
pop
pop
cmpsl
stc
cmp
arpl
sbb
incl
test
scas
ret
mov
fcmovnu
mov
add
call
out
dec
or
xchg
jecxz
js
clc
pop
xchg
lcall
cmpsl
hlt
sarb
lret
decl
movsb
inc
mov
sahf
mov
gs
and
ljmp
test
pop
mov
adc
loop
fstps
mov
int
sub
dec
inc
push
loope
mov
sbb
and
sbb
int3
ret
cld
lods
and
push
lahf
xchg
jns
nop
xlat
imul
jmp
xor
xchg
pop
jl
cld
xchg
lock
lret
loope
mov
test
or
clc
jmp
sub
icebp
enter
sub
ror
adc
sbb
pushl
or
or
sti
mov
cmp
xor
mov
jecxz
jmp
pusha
cmp
cmpsb
cltd
cmpsl
xlat
sbbl
mov
incl
cmp
dec
sub
cwtl
xorb
jne
cmp
test
sbb
cld
xor
sbb
jmp
pusha
testb
sbbl
decl
pop
push
cmp
xor
ljmp
ja
lret
pop
sarl
and
rorl
ljmp
mov
fwait
insb
ja
mov
pop
sarl
out
xchg
out
jo
les
into
jmp
pushl
test
push
outsb
rcr
sti
fwait
jge
pop
fsubs
hlt
mov
sub
xchg
mov
and
out
inc
in
int3
insb
sar
dec
sar
dec
jmp
xor
pop
scas
dec
clc
mov
add
insl
repnz
dec
lods
cmp
cmp
decl
shll
lret
sti
xor
push
fwait
and
cmp
jne
rcll
pop
orb
mov
and
popa
mov
outsb
rolb
jle
inc
add
pushl
mov
lock
or
incb
fwait
loopne
jo
call
xor
decl
jmp
mov
xor
cmp
or
and
gs
sahf
imul
push
mov
add
pushf
sub
mov
addr16
push
stos
jge
imul
mov
std
fcom
mov
cltd
jae
fdivrl
andb
jo
push
lret
xor
call
mov
add
push
scas
jg
adc
aam
ret
adc
xchg
in
dec
or
decl
clc
ss
loopne
lods
sbb
sub
xchg
adc
xchg
jbe
in
mov
dec
and
mov
icebp
test
dec
dec
xlat
cmpsb
jecxz
ret
pop
addl
push
or
jmp
aad
test
dec
pop
cli
jge
fsubrs
jo
shr
jge
jge
arpl
call
data16
or
pop
out
pushf
add
xor
push
jmp
xlat
cmp
cltd
push
cwtl
mov
sub
jg
mov
pop
sub
mov
adcl
in
call
test
cmp
mov
pop
loop
lds
fcmovu
sbb
sar
call
inc
and
sbb
loop
sbb
fimuls
push
inc
push
jmp
iret
inc
pop
mov
push
pop
xchg
pop
jg
popa
jno
in
stos
cs
imul
ficompl
out
repz
fs
loop
cmp
mov
fistl
mov
add
hlt
mov
fcmovu
jae
cmp
enter
fxch
movsb
add
jns
push
sbb
sbb
xchg
in
data16
fldt
cmpsb
jg
adc
adc
inc
scas
inc
sbb
adc
inc
and
dec
xchg
popa
je
xlat
lcall
push
sahf
fisttps
scas
pop
ljmp
mov
fdivs
lcall
aaa
cld
rclb
loop
cltd
lock
mov
into
push
shrb
and
mov
mov
jnp
mov
movsl
bound
imul
call
push
pushf
aad
das
lods
mov
out
push
xor
int
sub
loopne
cmp
js
xor
lcall
mov
es
in
push
ret
in
xor
iret
out
pop
arpl
xchg
dec
mov
pop
xor
adc
xchg
jb
mov
mov
popf
jnp
mov
push
popf
stc
adc
int3
mov
or
xchg
cmp
pop
jbe
sbb
mov
cld
mov
xchg
push
add
pop
jmp
loope
adc
mov
ds
mov
in
xor
out
dec
adc
mov
pop
mov
push
je
push
jmp
testb
dec
test
sbb
inc
lahf
and
dec
fs
movsl
pop
dec
xlat
or
out
ss
or
or
and
fmulp
ds
xor
jle
ret
fcmovb
mov
js
je
jae
jbe
cmp
or
or
jo
lret
push
mov
jae
or
fiadds
and
xchg
mov
vpmaxsw
inc
rorl
pushf
imul
ja
lcall
pop
mov
cmp
pop
pop
add
mov
aaa
aaa
pop
adc
pop
jns
jg
decl
subb
sub
sbb
adc
or
pop
dec
out
incl
outsl
add
shlb
pop
xchg
jle
ret
cmp
sahf
fucomi
outsl
mov
pushl
cvtpi2ps
icebp
sub
out
and
or
jl
mov
lcall
std
dec
sbb
or
pusha
cmp
lahf
sbb
pop
out
rorl
lods
sub
test
call
icebp
aad
pop
fs
es
test
icebp
movsb
or
push
aad
imul
dec
push
inc
pop
jb
pop
dec
ljmp
inc
call
ret
mov
mov
jmp
test
push
aas
pop
ljmp
xlat
and
pop
in
adc
fmull
lods
jg
decl
pop
mov
mov
pop
jecxz
push
ret
aas
sahf
sub
dec
sbb
mov
call
ds
and
push
iret
pop
mov
mov
fbld
int3
cld
or
mov
nop
in
mov
jnp
cld
sbb
ljmp
aas
inc
rclb
jbe
or
rorl
pushl
lret
test
xchg
je
jg
jbe
mov
lds
in
mov
push
cmp
jge
stc
cmp
sahf
jmp
mov
push
xchg
addl
cld
fisttps
ljmp
aas
aad
sbbl
notl
sub
xorl
dec
dec
cmc
mov
jge
jbe
mov
addr16
ja
mov
repnz
xor
xchg
lds
cld
incl
mov
jg
sbb
scas
or
cmp
ljmp
enter
jge
sub
jecxz
rorb
mov
out
mov
dec
xchg
in
xor
outsl
ljmp
sbb
lret
push
fsubs
rolb
mov
jle
mov
jle
hlt
insb
test
pusha
ljmp
nop
sti
mov
sbb
mov
cmpsl
sbb
mov
pop
mov
lahf
stc
inc
push
or
jno
cwtl
mov
jns
jp
adc
or
das
scas
in
xchg
xor
mov
inc
pop
das
in
or
lods
popa
or
pop
cmp
dec
xchg
cld
pusha
clc
mov
fdivrl
lds
js
ret
jg
lcall
fwait
jecxz
iret
test
push
lcall
and
push
inc
jge
lcall
push
movsl
or
iret
cmp
sub
mov
dec
rcll
pop
das
aas
mov
incl
pop
cmp
aad
ds
aam
pusha
bound
adc
mov
jle
sub
test
decl
or
inc
mov
xchg
adc
push
js
lret
lods
inc
sbb
jg
jmp
aam
dec
xorl
cmc
adc
adc
cmc
enter
iret
fcomi
lahf
out
jne
lods
dec
mov
push
pop
pop
xchg
lret
lret
dec
cmpb
orb
push
subl
pop
stc
sub
decl
cmpsb
pop
repz
dec
popa
jbe
pop
dec
mov
add
int3
pop
stos
rcr
clc
sbb
repz
scas
mov
jns
repz
jne
mov
cmp
popa
or
pop
xchg
js
in
loop
int
push
and
std
aad
mov
inc
cs
call
pushl
ja
jo
test
adc
repnz
xchg
ret
aam
movsb
andb
call
jmp
jg
repz
jmp
xchg
fnstenv
dec
sti
mov
and
push
int3
adc
sbb
lcall
sbb
inc
test
clc
adc
aas
inc
rcl
adc
je
cmc
mov
ljmp
mov
sub
jp
js
pop
xchg
pushl
sub
scas
cmpsb
loop
hlt
push
push
cs
and
cmp
call
or
iret
ret
jns
popa
repnz
insb
cs
fcmove
dec
add
jb
out
stos
stos
lcall
mov
jb
jmp
pop
push
stc
add
or
or
lcall
stc
test
adc
rorb
gs
xor
mov
imul
pushl
cli
mov
pop
jl
addr16
imul
test
push
push
and
ja
repz
ljmp
pop
adc
stos
mov
in
dec
loope
insb
mov
xchg
pop
icebp
incl
xchg
arpl
dec
mov
adc
daa
pop
xchg
fcomip
es
into
sti
je
inc
jp
push
mov
xchg
sti
mov
ljmp
xor
xchg
daa
pop
xchg
sahf
jmp
stos
das
add
sbb
add
in
sbb
into
outsl
mov
push
or
jg
xor
adc
out
inc
imul
push
jno
sbb
out
stc
ret
cmpsb
and
inc
mov
inc
test
dec
cltd
add
fwait
hlt
and
call
cmp
loope
xor
and
jo
xchg
scas
add
push
add
inc
pushf
cmp
sub
push
out
call
pop
outsb
sub
cli
loope
repnz
incl
lahf
ja
cmp
push
nop
test
cmpsl
mov
loopne
xlat
jg
dec
jl
mov
ljmp
xchg
sbb
jle
mov
mov
sbb
or
jg
incl
sbb
xchg
jg
sbb
sti
adc
roll
cli
xor
adc
scas
jmp
mov
pop
xorl
mov
jl
cmc
dec
test
loop,pn
and
xor
out
pop
and
sub
fmulp
pop
mov
mov
rorb
xor
cmp
cmp
incl
fcoms
dec
push
out
pop
cltd
in
sbb
iret
mov
or
incl
lea
loopne
lret
mov
mov
out
dec
push
pop
xor
das
stos
or
or
jp,pt
je
sahf
push
ljmp
and
mov
fdivrs
ljmp
pop
std
shl
cmpsb
push
mov
dec
push
cwtl
push
cmp
mov
jecxz
subb
icebp
add
jg
jmp
insl
xchg
push
pop
sbb
inc
fbld
cmp
ret
lods
dec
icebp
cmp
leave
gs
pop
or
sti
pushf
fwait
mov
jle
dec
add
aam
pop
mov
and
gs
cli
cmpsb
push
ljmp
arpl
sbb
test
je
dec
out
mov
psrlq
js
ret
ljmp
sahf
push
xor
push
fidivl
incl
sbbb
lret
inc
or
sti
mov
rcr
xor
xchg
gs
adc
clc
xchg
ljmp
shll
cmpxchg
lods
pop
push
dec
jmp
mov
dec
push
mov
mov
inc
fldcw
in
inc
in
or
xchg
bound
xchg
in
and
pop
outsl
stos
dec
mov
lcall
fcomip
aam
std
mov
push
xchg
fcompl
into
adc
mov
scas
das
outsb
jle
jmp
push
ret
repnz
pop
add
scas
and
push
fcomps
in
push
fs
lret
ljmp
ljmp
xlat
inc
cmovb
jmp
xchg
jecxz
mov
fs
fisttpll
adc
jg
call
inc
mov
xchg
xchg
sti
mov
mov
aas
imul
lea
push
adcb
pop
jne
adc
xchg
cmp
add
push
xor
jbe
call
sbb
setb
sbb
fldt
xor
rol
sbb
inc
out
jmp
sti
lock
mov
push
mov
pop
mov
std
jbe
lret
mov
push
mov
jmp
lock
bound
add
nop
push
push
repz
and
adc
pop
sub
fcompl
xchg
pop
mov
lret
lahf
mov
imul
loope
jmp
pop
dec
inc
and
scas
inc
cwtl
mov
add
sbb
mov
adc
xchg
or
in
sbb
push
pop
repnz
adc
inc
ror
lock
sub
ds
jl
jne
fstps
shlb
clc
mov
icebp
jnp
insb
and
in
mov
or
lahf
mov
ja
mov
lcall
push
jle
or
sub
fists
fistpl
mov
fsubs
shrl
pop
lcall
jmp
mov
test
stc
mov
enter
push
jl
stc
idivl
out
aad
lds
andl
xchg
popa
sbb
subb
cmp
call
mov
lods
mov
jp
fildl
cmp
xchg
mov
jmp
jge
dec
out
pop
mov
adc
divl
roll
js,pt
test
and
and
jg
pop
pop
ds
sahf
insb
pop
movsbl
adc
dec
push
imul
lcall
push
mov
mov
scas
loope
and
jecxz
stc
lcall
or
addr16
ret
jne
mov
mov
mov
inc
subb
call
lock
pop
xchg
and
sbb
xchg
mov
push
mov
adc
mov
mov
mov
jbe
mov
das
nop
sub
cmp
scas
xor
xor
inc
xor
push
or
mov
mov
add
incl
sub
sbb
fs
scas
jns
mov
xor
sub
mov
lahf
loop
fbld
sbb
mov
mov
std
ja
sub
mov
sub
sbb
sbb
xor
fildll
inc
inc
sub
add
in
les
mov
mov
mov
or
mov
push
jmp
xchg
int
lret
ljmp
cmp
jp
add
shrb
cmp
mov
push
sbb
pop
or
aas
lret
mov
ja
cmp
mov
cmpsb
mov
std
test
je
lds
add
fldenv
cmp
push
rdpmc
jge
clc
in
add
and
cmc
jo
in
in
or
sub
sti
insl
iret
cmp
test
jmp
xchg
pusha
mov
cmp
ret
push
push
pop
mov
mov
add
mov
ja
or
subb
jmp
adc
cmp
fbstp
adc
inc
cld
push
data16
cmp
mov
xchg
ret
outsl
jns
dec
nop
mov
mov
ret
fs
loope
xchg
and
rcrb
add
pop
insb
fidivrl
jmp
pop
addb
push
rclb
addb
jbe
jne
adc
xor
arpl
std
iret
jo
loopne
fdiv
jle
roll
sub
add
incl
inc
mov
cwtl
sbb
int3
cmc
push
inc
xchg
std
lret
inc
adc
hlt
sub
adc
pushl
sbb
imul
inc
dec
jecxz
lods
dec
push
stos
outsb
aad
cmc
ja
adc
es
fwait
pushl
jle
sbb
out
fistl
movsl
push
xchg
cli
out
push
call
call
js
xchg
iret
push
or
ret
mov
loope
or
xchg
and
jg
ja
push
aad
jmp
lods
dec
mov
cmp
aas
rdtsc
and
push
lcall
ljmp
jg
js
jmp
mov
cs
lods
mov
jne
mov
lods
sar
pushl
pop
insb
daa
nop
jl
jo
and
movsl
into
jecxz
out
push
mov
xor
mov
movsl
jp
add
add
data16
jns
shlb
sub
mov
adc
ljmp
clc
pushl
fs
stos
xor
stos
lret
std
sub
xchg
decl
mov
call
arpl
lea
jb
subb
fwait
loopne
mov
imul
lcall
cmp
aad
jno
jp
call
repz
mov
mov
adc
push
fisttpl
fldln2
cmp
orl
adc
aad
jne
dec
sahf
lea
xor
loope
icebp
enter
jns
lcall
mov
inc
mov
imulb
cmp
fnstenv
retw
push
leave
pop
test
lods
and
xor
gs
push
adc
sbb
jbe
inc
sbb
fisubrl
ds
cmp
pop
mov
lret
outsl
and
xchg
insl
incl
test
test
popa
rorl
adc
cld
mov
mov
add
in
rorb
out
jmp
pop
pop
lods
int
jmp
xor
mov
sub
imul
std
test
ret
cmp
dec
adc
out
cli
lods
iret
adc
test
mov
lods
lcall
xlat
mov
loope
adc
adc
jg
in
test
fldt
or
ljmp
cwtl
push
sbb
mov
fildl
mov
popa
in
repz
hlt
outsb
in
repz
or
lcall
loop
or
lods
xchg
pop
ret
mov
lret
pop
push
ret
dec
int
mov
roll
call
mov
scas
rcll
and
mov
push
jbe
push
sbb
in
fcompl
orb
fidivs
jae
and
mov
fdivs
call
push
add
arpl
dec
mov
mov
hlt
xchg
les
das
inc
jl
es
mov
xchg
incl
or
into
fptan
shrl
xor
mov
stos
movsb
xor
add
pop
pushl
loop
dec
fistpl
cmp
popf
imul
leave
inc
pushf
imul
sbb
lock
xchg
arpl
mov
jecxz
add
insl
fidivrs
outsb
pushl
loop
pushf
add
mov
xchg
subl
pop
push
pop
dec
clc
push
decl
jle
push
pop
adc
and
test
lds
shlb
addr16
mov
aam
xchg
pop
or
rcrb
cs
rep
sub
or
lahf
nop
ljmp
jno
mov
adc
add
enter
not
clc
mov
sub
out
pop
popf
test
mov
filds
add
jl
dec
lret
ja
mov
mov
test
paddusb
sub
mov
std
adc
icebp
pusha
imul
imul
jmp
roll
pop
incl
jnp
sbb
or
add
mov
jns
je
hlt
test
jmp
mov
sub
mov
xchg
subb
mov
cmpsb
pop
xchg
daa
mov
xor
orb
cmp
out
push
shl
pushl
dec
ss
addb
fldt
insl
lcall
mov
jg
and
movsb
pop
std
fmuls
xchg
mov
popf
add
repz
call
cmp
push
mov
mov
test
mov
mov
mov
clc
jle
jg
jg
sub
fsub
mov
cli
push
dec
in
or
popa
sub
cli
inc
lods
pop
jo
inc
je
xor
sbb
or
outsl
lds
movb
cmp
decl
mov
ja
jnp
sub
sub
pushf
push
fs
jmp
dec
clc
lcall
and
xor
sbb
sub
push
pop
cld
mov
lahf
xchg
jnp
mov
pop
call
mov
js
mov
xlat
lcall
test
mov
mov
insb
lahf
in
xchg
test
jl
imul
mov
jg
push
shlb
loope
inc
xlat
sub
adc
mov
inc
mov
rorb
xor
push
cmpl
push
nop
xor
xor
fs
push
addl
inc
push
mov
incl
lret
push
loop
popa
or
mov
xchg
pop
xchg
or
das
insl
dec
dec
cs
ljmp
rcl
in
int
lods
inc
push
xor
jle
sbb
push
add
inc
rolb
pushf
mov
int3
hlt
mov
jle
cmpsl
inc
movsl
out
or
adc
add
mov
or
fsubrp
dec
dec
aam
mov
imul
fcomps
xchg
adc
jbe
loopne
push
or
xor
or
ret
or
mov
and
mul
sub
sar
lcall
xor
or
stc
push
sarb
lcall
mov
inc
mov
movsl
cmp
push
pop
sti
xor
cmp
pop
ficoml
jge
push
jb
incl
dec
mov
and
cs
shr
dec
testl
daa
mov
xchg
aaa
test
jmp
jns
sub
hlt
mov
mov
je
call
int3
adc
jecxz
adc
int
pop
ds
adc
push
mov
sub
adc
pop
mov
pop
push
add
iret
jp
or
aas
fimull
mull
aas
pop
xchg
jl
outsl
xor
inc
or
pop
sub
inc
mov
fstpt
push
pop
jne
dec
mov
sub
and
adc
insl
and
and
das
xchg
mov
sub
shll
roll
and
jge
or
aad
mov
dec
pop
cmp
jno
inc
mov
mov
adc
cmp
xchg
and
xchg
pop
inc
jo
pop
inc
insl
xor
adc
inc
and
jne
inc
lea
pusha
insl
or
js,pn
pop
mov
xor
mov
cmp
cmp
cmp
adc
mov
lahf
mov
bound
xchg
xlat
cmp
sub
sbb
enter
xlat
cmp
ss
dec
ds
mov
imul
insl
sub
and
fiadds
lods
ds
popa
or
and
scas
push
jmp
popf
sarl
testl
jns
scas
test
inc
jno
mov
jbe
and
cmc
leave
mov
adc
nop
pop
mov
das
sbb
push
aas
pop
fldl
jnp
push
cmp
sbb
mov
xor
push
popl
fsts
mov
icebp
stos
xchg
sbb
fnstenv
push
in
pop
xor
mov
or
or
mov
xchg
pusha
or
mov
stc
lret
std
imul
sbb
mov
decl
cmpsl
push
xor
inc
mov
fsubs
decl
xor
leave
xchg
dec
popf
leave
push
xchg
fldenv
jle
pop
cmp
inc
sub
mov
call
enter
adc
sbb
mulb
pop
add
insl
std
push
fiaddl
decl
je
cmp
out
cltd
ljmp
out
sbb
and
mov
ss
push
decl
movsb
sub
mov
xchg
inc
test
in
pop
jp
sub
xchg
lahf
mov
ljmp
repnz
sti
cmovle
shl
and
and
cli
leave
idivb
xchg
aam
mov
xor
leave
xor
push
jle
jl
and
incl
mov
movsb
loop
das
imul
mov
add
xchg
or
xor
leave
fsubr
cltd
mov
sub
lods
or
fisttpll
fxtract
std
inc
ret
cmp
insl
pop
das
dec
xorl
mov
lcall
mov
add
pop
jns
cmp
int
out
loope
push
push
out
add
fdivr
iret
sti
out
push
aaa
sbb
aam
push
fnsave
cmp
hlt
fbld
cmp
imul
out
rcrl
sbb
xchg
push
push
and
stc
push
outsl
cmpsl
sub
jmp
subb
int
mov
jne
mov
mov
pop
stc
imul
mov
or
lds
adc
jb
sbb
mov
push
in
aas
jb
or
inc
push
loop
out
sub
mov
je
insl
cmp
cmp
pushl
xor
xchg
jp
inc
loop
fcmove
mov
aaa
insl
iret
jecxz
xchg
lret
jne
scas
xor
decl
mov
lock
pushf
sahf
jae
jo
ja
jecxz
daa
xchg
and
push
push
arpl
pushl
int
out
or
rorl
sub
mov
cwtl
rclb
cmp
jns
dec
fsubrs
je
fstp
sbb
inc
pop
push
add
sahf
cwtl
mov
xchg
pushf
sar
outsb
xor
pop
mov
push
cs
jl
mov
mov
pushl
stos
cmp
mov
pop
mov
mov
pop
fwait
add
testl
xchg
jg
inc
fistpl
cmc
jmp
adc
test
gs
xorl
decl
push
enter
leave
fwait
test
adc
lret
xlat
jmp
sbb
cmp
mov
sar
decl
test
call
xor
insl
and
jno
nop
pop
arpl
add
cs
adc
lcall
or
xorl
or
cmovae
pop
dec
xor
adc
decl
jo
insb
lock
sub
inc
jmp
pop
fldz
aas
jnp
jo
arpl
xor
sbb
loope
jbe
jns
dec
fs
call
notl
xor
sbb
pusha
call
lods
mov
and
mov
rcll
push
inc
mov
jne
jno
das
decl
aaa
shll
mov
sub
test
popa
jb
xor
cmp
jle
push
push
push
insb
in
jp
loope
mov
addr16
shrb
sbb
jg
jmp
pushf
dec
lcall
and
sub
loop
rolb
dec
pop
mov
dec
jle
mov
mov
sbb
jno
mov
addr16
rcll
mov
jmp
out
sbb
inc
shlb
clc
mov
mov
jmp
lods
aaa
sbb
ds
mov
pop
xor
test
jecxz
push
cmpsl
imul
and
mov
xor
and
push
in
mov
shll
ss
cmp
mov
fwait
nop
fisubl
pop
mov
insb
inc
clc
pop
pop
mov
scas
push
jg
mov
push
daa
cmp
mov
push
mov
or
ja
xchg
jmp
and
out
sbb
jnp
or
mov
popf
shll
das
push
xchg
call
call
adc
xorb
jg
xor
mov
mov
xor
sysret
in
pusha
push
lcall
cs
stc
cmpsb
cmp
jno
ljmp
push
jo
sbb
cmp
int
lds
in
xor
sub
sahf
push
push
adc
lds
mov
lret
or
dec
cmp
sbb
push
insl
push
negl
incl
and
data16
mov
and
inc
push
adc
and
add
or
add
dec
sub
push
and
add
test
mov
add
and
add
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
dec
lcall
mov
daa
ret
sahf
mov
add
jmp
push
push
ret
out
xchg
ja
stos
and
rcrl
pop
jns
nop
and
mov
insb
and
adc
dec
leave
sbb
imul
adc
or
mov
mov
add
ja
mov
incl
xchg
mov
inc
test
xchg
mov
and
fists
or
jne
call
and
test
lock
loope
sbb
add
mov
scas
pushl
mov
xor
enter
daa
mov
lds
pushf
mov
iret
and
incl
inc
push
mov
sub
adc
js
sub
orb
les
pushl
lret
jne
hlt
mov
fisttpl
jecxz
sbb
shll
arpl
incl
xor
shlb
ss
jp
xor
adc
adc
sbb
incl
lods
push
add
mov
sbb
jno
push
xor
hlt
inc
stos
popa
aam
js
pushl
js
fnsave
inc
xchg
cmp
dec
jnp
sbb
scas
int3
mov
jmp
mov
loopne
data16
add
or
pop
test
xchg
mov
in
jmp
fimuls
out
cmpsb
popa
jmp
mov
imul
xor
das
popf
incl
pop
push
sub
sub
out
clc
sub
xor
js
addr16
call
push
jae
out
xchg
adc
ljmp
push
inc
int
mov
dec
std
sahf
fdivs
mov
add
or
xorb
stos
mov
je
jg
aas
mov
lcall
lcall
scas
mov
cltd
push
fdiv
jp
nop
dec
lahf
cmp
adc
pushl
sub
push
shl
ljmp
sbb
adc
cld
inc
into
into
and
dec
rorb
popa
cmp
call
fdivs
icebp
test
push
cltd
xor
inc
sub
cmp
and
adc
subb
js
adc
dec
ljmp
aas
je
mov
in
mov
cmp
cmpl
ficomps
mov
mov
ljmp
cld
cs
mov
inc
push
xchg
mov
cmpsl
mov
inc
add
test
clc
jo
out
popf
jle
mov
daa
xchg
dec
daa
hlt
lret
jmp
rclb
rcr
sti
not
out
decl
push
jae
sbb
inc
dec
xchg
adc
mov
notb
in
add
hlt
mov
jmp
cmp
xchg
mov
out
mov
cmc
fisttpl
movsb
ret
jno
test
inc
pop
adc
pop
into
loop
sbb
das
adc
inc
lods
jno
int3
test
or
push
sub
pushl
or
sbb
enter
outsl
fwait
pop
imul
xor
aad
mov
inc
cmp
das
clc
ljmp
sbb
cltd
std
sti
sub
sbb
xchg
xor
fdivrp
mov
jne
incl
pop
xor
jne
out
xchg
jmp
mov
cwtl
or
mov
fnsave
lcall
add
sbb
xchg
push
push
out
test
jne
jmp
jge
mov
mov
xor
dec
mov
lds
push
jecxz
call
pop
stc
xchg
orl
inc
ret
sbb
jecxz
bound
ljmp
enter
test
fsubl
dec
mov
pop
sbb
repz
xor
icebp
stos
mov
pop
ret
ja
lret
fildll
inc
mov
dec
outsb
imul
decl
sbb
jns
mov
pop
push
pop
xlat
out
add
scas
stos
pop
jo
dec
decl
mov
mov
nop
mov
loopne
pushl
inc
iret
iret
xor
sub
cmc
xchg
in
loope
lea
adc
adc
mov
or
call
lahf
pop
lret
test
in
lds
inc
mov
push
xlat
mov
scas
sbb
adc
decl
jno
mov
rclb
stos
leave
outsl
dec
aas
das
cmp
test
inc
inc
fadds
loop
adc
sbb
push
push
vpsubw
imul
int3
aas
pushl
dec
xchg
shlb
xchg
and
ds
mov
stc
mov
add
ljmp
ret
pop
pop
lods
inc
cmp
mov
shr
add
xor
or
fistpll
xchg
pop
adc
push
xchg
cmpl
or
sbb
sar
adcb
aam
in
lods
and
push
icebp
xchg
adc
mov
ljmp
btc
andl
out
mov
pusha
mov
sub
cs
mov
mov
jne
sbb
outsl
add
cmp
repz
mov
push
cmp
and
loopne
cld
lods
popa
stos
push
fisubs
test
pop
jge
sub
mov
clc
jbe
leave
cmp
xor
mov
cmpsl
imul
mov
xor
inc
cmc
decl
jo
and
jne
lea
push
jecxz
pop
push
aam
and
lcall
mov
outsl
push
dec
jp
out
push
fisubl
or
je
push
pop
ficoms
fmull
shr
mov
fwait
push
stc
rcrb
adc
popf
stos
das
mov
sub
ljmp
sub
cli
mov
pop
add
hlt
mov
lea
out
add
sub
or
jns
pop
pop
dec
pushl
hlt
ret
sbb
sbb
mov
lahf
and
fs
mov
lods
das
mov
pop
pop
jmp
cmp
sbb
pop
dec
test
scas
ret
mov
fcmovnu
mov
add
clc
call
mov
dec
or
repnz
pop
xchg
lcall
mov
cmpsl
hlt
sarb
lret
sbb
movsb
inc
mov
sahf
mov
js
gs
and
imul
ficomps
xchg
test
adc
loop
fstps
mov
dec
mov
fimull
push
loope
mov
jp
and
sbb
int3
ret
cld
lods
and
call
xchg
jns
nop
xlat
imul
arpl
pop
jl
cld
xchg
lock
lret
loope
mov
jmp
dec
or
lea
leave
mov
mov
mov
iret
adc
sbb
or
or
sti
mov
cmp
xor
outsl
ret
lcall
jecxz
cmp
pusha
cmp
cmpsb
cltd
cmpsl
xlat
sbbl
lret
dec
mov
inc
or
dec
sub
cwtl
xorb
incl
out
jne
cmp
test
adc
xor
sbb
jmp
pusha
testb
push
loope
or
sahf
sti
imul
push
cmp
xor
ljmp
ja
lret
decl
cmp
jno
rorl
sbb
jp
sub
out
pop
sar
cmp
xchg
out
jo
les
into
mov
je
sub
push
outsb
rcr
sti
fwait
jge
out
cli
push
inc
push
sbb
std
xchg
mov
and
out
inc
in
sar
pushl
int3
insb
sar
dec
shlb
xor
pop
scas
dec
clc
mov
add
insl
repnz
jg
dec
lods
cmp
cmp
cmp
lret
sti
xor
push
fwait
and
cmp
pushl
rcll
pop
adcb
dec
and
popa
mov
outsb
rolb
mov
add
mov
lock
or
incb
fwait
loopne
jg
shr
xor
stos
xor
dec
adc
xchg
mov
pop
and
mov
cmp
inc
cmp
or
or
addl
imul
insb
roll
pushf
sub
mov
addr16
lcall
stos
jge
imul
mov
mov
cltd
jae
fdivrl
andb
jo
dec
push
lret
xor
adc
mov
add
push
scas
jg
adc
aam
pushl
ret
adc
xchg
in
dec
or
or
clc
ss
loopne
lods
sbb
sub
xchg
call
les
mov
in
mov
icebp
test
dec
dec
xlat
cmpsb
jecxz
ret
pop
addl
incl
fcompl
or
jmp
lahf
icebp
and
cli
jge
fsubrs
jo
shr
jge
jge
arpl
shlb
or
pop
out
pushf
add
xor
push
jmp
pop
lock
xlat
cmp
cltd
push
cwtl
mov
sub
pop
sub
mov
adcl
arpl
push
mov
rcl
jg
mov
or
loope
pop
loop
lds
xor
lret
sbb
rcl
inc
and
sbb
loop
sbb
fimuls
push
inc
push
jmp
iret
inc
xlat
lcall
mov
push
pop
xchg
jno
in
stos
cs
imul
ficompl
jg
repz
fs
loop
mov
fistl
mov
add
hlt
mov
fcmovu
jae
mov
enter
add
jns
push
sbb
sbb
xchg
in
lcall
sub
fildl
sub
inc
scas
inc
sbb
adc
inc
and
cmc
mov
je
pop
push
sahf
fisttps
scas
pop
ljmp
mov
decl
imul
sub
ret
push
mov
lcall
push
shrb
aas
addr16
mov
jnp
mov
movsl
bound
jmp
xchg
xchg
incb
pop
push
xor
cmp
aad
das
lods
mov
out
push
xor
int
sub
jmp
pop
and
xor
xor
sarl
and
fmuls
in
push
ret
mov
sbb
ja
arpl
push
sub
pop
xor
adc
xchg
jb
mov
outsl
cli
ljmp
mov
popf
jnp
movl
adc
int3
mov
or
xchg
cmp
call
jb
ja
cmp
mov
xchg
push
add
pop
jmp
loope
cli
call
pop
push
mov
ds
lret
xor
out
dec
adc
mov
pop
mov
out
mov
or
push
testb
dec
test
sbb
inc
lahf
and
dec
fs
movsl
pop
dec
xlat
or
jmp
shll
sahf
or
or
and
lret
or
xor
jle
ret
fcmovb
mov
ljmp
js
je
jae
jbe
cmp
or
or
jo
lret
push
mov
pushl
or
fiadds
fisubs
mov
out
jp
inc
rorl
jl
ljmp
or
pop
mov
cmp
pop
pop
add
mov
jg
pushl
aaa
pop
adc
pop
jns
jg
mov
mov
jmp
sub
call
dec
mov
pop
dec
out
subb
stos
jnp
or
pminsw
pop
xchg
jle
fld
cmp
sahf
fucomi
outsl
mov
aaa
fisttpl
sub
icebp
sub
out
and
or
cmp
jl
mov
dec
sbb
or
pusha
cmp
lahf
sbb
pop
jmp
std
rorl
lods
sub
test
aas
adc
fs
es
test
icebp
movsb
or
ljmp
push
aad
imul
pop
jb
pop
dec
ljmp
inc
call
ret
jmp
ret
leave
mov
loop
xor
aas
pop
ljmp
xlat
and
pop
in
adc
fcomp
mov
push
mov
jg
lea
pop
mov
mov
pop
jecxz
push
inc
in
aas
sahf
sub
dec
sbb
mov
call
ds
and
cmp
fisttpll
iret
pop
mov
push
adc
rol
sbb
int3
cld
or
mov
nop
in
mov
jnp
imul
enter
cmp
or
mov
addr16
lret
test
xchg
je
jg
jbe
mov
lds
incl
mov
mov
cmp
sahf
jmp
mov
push
xchg
cmp
stos
incl
cli
cld
fisttps
cmp
pop
clc
aas
aad
sbbl
notl
sub
cmp
mov
dec
sbb
cmc
mov
jge
jbe
mov
addr16
ja
mov
jmp
push
adc
aaa
xor
xchg
lds
mov
jg
sbb
scas
or
incl
cs
jge
sub
jecxz
rorb
mov
out
mov
dec
dec
xchg
in
xor
outsl
sub
sbb
lret
push
fsubs
rolb
mov
jle
mov
decl
hlt
insb
test
pusha
nop
sti
mov
sbb
mov
cmpsl
sbb
lcall
mov
pop
mov
lahf
stc
inc
push
or
jno
cwtl
mov
jns
jp
adc
or
ljmp
jecxz
scas
in
xchg
xor
mov
pop
das
in
or
lods
popa
or
pop
cmp
dec
xchg
cld
pusha
clc
mov
fdivrl
out
jnp
lds
js
ret
sbb
fiadds
lcall
and
shl
in
push
inc
jge
sbb
push
movsl
or
iret
cmp
sub
mov
decl
push
lret
pop
das
aas
mov
pop
cmp
aad
ds
aam
pusha
bound
adc
mov
lcall
xchg
fwait
lahf
mov
inc
mov
xchg
adc
push
js
lret
fcomip
lods
inc
sbb
dec
jmp
aam
dec
xorl
cmc
adc
adc
incl
iret
fcomi
lahf
out
jne
lods
dec
mov
push
pop
pop
xchg
lret
lret
dec
cmpb
incl
sub
sub
cmpsb
pop
repz
dec
popa
jbe
pop
dec
mov
add
int3
pop
stos
mov
sar
sbb
repz
xor
sbb
jne
mov
sar
inc
cmp
popa
or
pop
xchg
sub
jg
std
aad
pushl
dec
sbb
call
jo
test
adc
repnz
xchg
ret
aam
movsb
incl
push
stos
call
jg
repz
jmp
xchg
fnstenv
dec
sti
mov
call
and
push
int3
adc
sbb
pop
negb
adc
inc
test
clc
adc
aas
inc
std
ljmp
rcl
adc
je
out
mov
fisubrs
inc
mov
sub
jp
sbb
in
pop
xchg
jp
scas
cmpsb
loop
hlt
push
push
cs
ljmp
and
cmp
xchg
push
fbld
or
iret
ret
jns
popa
repnz
insb
cs
dec
dec
add
jb
out
stos
stos
lcall
mov
jmp
pop
push
stc
add
in
or
or
test
adc
rorb
gs
xor
fidivrs
imul
mov
pop
jl
addr16
imul
dec
test
push
push
and
ja
repz
pop
adc
stos
mov
in
dec
loope
cld
insb
mov
xchg
inc
scas
xchg
arpl
dec
mov
adc
leave
icebp
js
daa
pop
xchg
adc
into
sti
je
inc
jp
call
sub
push
data16
ficompl
xchg
daa
pop
xchg
sahf
jmp
stos
das
add
sbb
add
dec
in
sbb
into
outsl
mov
mov
jg
xor
adc
out
inc
imul
push
jg
jno
sbb
jo
and
inc
mov
inc
test
dec
jg
sbb
cltd
add
fwait
hlt
and
lock
xor
and
jo
incl
xchg
scas
add
push
add
sub
push
out
call
dec
pop
pop
outsb
sub
cli
loope
repnz
lahf
ja
cmp
push
nop
test
cmpsl
mov
loopne
jg
dec
jl
mov
cmp
jle
mov
mov
sbb
incl
inc
cld
sbb
xchg
jg
sbb
sti
adc
roll
sbb
xor
adc
scas
cld
mov
pop
xorl
ficoml
fs
scas
cmc
dec
test
loop,pn
and
xor
out
pop
and
ljmp
fmulp
pop
mov
mov
rorb
xor
cmp
cmp
mov
ljmp
out
pop
cltd
in
jg
lcall
sub
iret
mov
or
lea
loopne
lret
mov
mov
out
or
dec
std
dec
push
pop
xor
or
add
jp,pt
pushl
push
ljmp
and
mov
fdivrs
std
call
in
push
mov
dec
push
cwtl
push
cmp
mov
jecxz
subb
icebp
add
call
dec
sbb
insl
xchg
push
pop
sbb
inc
fbld
cmp
ret
lods
dec
icebp
cmp
leave
gs
pop
or
sti
pushf
fwait
pushl
add
aam
pop
mov
and
gs
cli
cmpsb
push
in
ljmp
arpl
sbb
test
je
dec
out
mov
psrlq
js
jae
scas
push
jmp
loope
bound
adc
dec
lock
push
fidivl
sbbb
call
lret
inc
or
sti
mov
rcr
xor
xchg
gs
adc
clc
xchg
sub
fs
mov
lods
pop
push
dec
jmp
mov
dec
push
mov
mov
ljmp
push
inc
in
or
xchg
bound
xchg
in
and
pop
outsl
stos
dec
mov
popf
jmp
push
out
hlt
aam
std
mov
push
xchg
fcompl
into
adc
mov
scas
das
outsb
jle
in
ret
call
repnz
pop
add
scas
and
push
fcomps
in
push
fs
lret
ljmp
inc
xlat
incl
inc
push
into
jmp
xchg
jecxz
mov
fs
fisttpll
adc
jg
icebp
ret
ljmp
aad
mov
xchg
xchg
sti
mov
mov
aas
imul
lea
lock
ljmp
arpl
mov
adc
xchg
cmp
add
push
xor
jbe
call
setb
sbb
fldt
xor
rol
sbb
inc
out
mov
jmp
sti
lock
mov
push
mov
pop
mov
std
jbe
lret
mov
push
mov
lcall
lret
loopne
mov
bound
add
nop
push
push
repz
and
adc
pop
ljmp
dec
fcompl
xchg
pop
mov
lret
lahf
mov
imul
loope
jmp
pop
dec
inc
jmp
xchg
scas
inc
cwtl
mov
add
sbb
mov
adc
xchg
or
in
sbb
push
pop
repnz
jg
test
test
iret
lock
sub
ds
jl
jne
fstps
sar
pushl
or
mov
icebp
jnp
insb
and
in
mov
or
lahf
mov
ja
mov
cld
ror
jle
or
sub
fists
fistpl
mov
fsubs
shrl
xchg
decl
pop
sbb
out
test
stc
mov
enter
call
jl
stc
idivl
out
aad
lds
andl
xchg
popa
sbb
subb
mov
and
lods
mov
jp
fildl
cmp
xchg
mov
decl
and
dec
out
pop
mov
adc
divl
roll
js,pt
test
and
fcomip
and
pop
pop
ds
sahf
insb
pop
movsbl
adc
dec
push
imul
lcall
sbb
push
mov
mov
scas
loope
and
jecxz
stc
lcall
call
cld
decl
mov
mov
mov
mov
mov
inc
incl
sbb
pop
xchg
and
sbb
xchg
mov
mov
lret
ds
push
imul
sub
jg
cmp
scas
xor
xor
inc
xor
push
or
mov
mov
add
jmp
xor
cmpsl
ret
sbb
fs
scas
jns
mov
xor
sub
cmpsl
clc
out
testl
mov
mov
testb
sub
sbb
sub
sbb
sbb
lcall
into
dec
inc
inc
call
adc
pop
mov
dec
mov
sub
aas
mov
mov
mov
push
frndint
ret
lret
ljmp
dec
or
mov
jp
add
shrb
inc
sbb
mov
cwtl
pop
pop
mov
cmp
mov
lret
cmp
mov
mov
decb
test
dec
addl
cmp
push
rdpmc
iret
dec
lock
adc
ret
testl
lret
push
sub
neg
adc
sti
dec
inc
jne
sti
jg
fists
cmp
push
push
loope
mov
mov
add
mov
out
into
adc
sub
jmp
adc
gs
mov
adc
incb
adc
xchg
ret
fdivp
or
loopne
xor
rcrl
ret
fs
ret
imull
and
rcrb
add
adc
lds
adc
sbb
addb
mov
rclb
xchg
js
bound
adc
lock
jmp
jg
decl
fdiv
jle
roll
sub
add
jmp
mov
cwtl
sbb
int3
cmc
push
inc
xchg
std
lret
inc
adc
hlt
sub
adc
lcall
cmp
jb
dec
jecxz
lods
dec
push
stos
outsb
aad
cmc
ja
adc
es
xor
jmp
lahf
sbb
out
fistl
movsl
push
xchg
cli
out
push
call
mov
call
add
ret
mov
loope
or
xchg
and
jg
ja
push
and
jmp
inc
outsl
cmp
aas
rdtsc
and
push
lcall
in
js
push
jmp
mov
cs
lods
mov
jne
mov
lods
shll
insb
daa
call
and
movsl
into
jecxz
out
push
mov
xor
mov
movsl
jp
add
lcall
or
data16
jns
shlb
sub
mov
adc
jae
cmp
dec
fs
stos
xor
stos
lret
std
sub
xchg
mov
cmp
call
arpl
lea
jb
subb
fwait
loopne
mov
imul
cmp
cmpsb
fcomps
daa
aad
jno
jp
call
repz
mov
mov
adc
push
fisttpl
jge
fldln2
cmp
orl
adc
aad
jne
dec
sahf
lea
xor
jmp
loope
jns
lcall
mov
inc
mov
imulb
fnstenv
pop
in
dec
retw
push
leave
pop
test
lods
and
xor
gs
push
adc
sbb
clc
lcall
fisubrl
ds
cmp
pop
mov
lret
outsl
and
xchg
insl
out
ljmp
push
std
test
test
popa
rorl
adc
cld
mov
decl
jae
in
rorb
out
jmp
pop
pop
lods
int
ljmp
mov
nop
xor
mov
sub
imul
std
test
ret
adc
ljmp
clc
jmp
add
lods
iret
adc
test
mov
lods
cltd
adc
es
jmp
xlat
mov
loope
adc
adc
jg
in
test
fldt
or
cwtl
push
std
sbb
mov
fildl
mov
popa
in
repz
hlt
outsb
in
repz
or
pop
shl
decl
out
lods
xchg
pop
ret
mov
lret
pop
push
ret
dec
int
mov
roll
jo
test
rcll
and
mov
push
jbe
push
sbb
fcompl
xorb
orb
fidivs
jae
and
mov
fdivs
adc
repz
jmp
or
dec
imul
mov
hlt
xchg
les
das
inc
jl
es
mov
xchg
test
xchg
jmp
xor
into
fptan
shrl
xor
mov
stos
movsb
xor
add
pop
xor
push
fistpl
cmp
popf
imul
leave
inc
pushf
imul
decl
je
dec
xchg
arpl
mov
jecxz
add
insl
fidivrs
outsb
lahf
into
loopne
jg
mov
daa
mov
xchg
subl
pop
push
pop
dec
clc
push
mov
adc
and
test
lds
shlb
addr16
mov
jp
pop
or
rcrb
cs
rep
sub
or
lahf
nop
loope
jno
ljmp
pop
sti
adc
add
enter
not
clc
test
xchg
mov
sbbb
dec
pop
popf
test
mov
filds
add
fisttpll
das
cli
pushl
mov
mov
test
paddusb
sub
pop
jne
adc
ljmp
imul
imul
jmp
roll
pop
jnp
sbb
lcall
or
add
mov
jns
je
hlt
test
rcrl
cmp
cli
inc
sub
mov
xchg
subb
mov
jg
mov
xor
orb
cmp
out
push
shl
jb
dec
ss
push
jmp
inc
pop
sbb
or
mov
lcall
mov
jg
and
fcomip
dec
movsl
xchg
mov
popf
add
repz
call
cmp
push
inc
mov
test
cli
push
mov
mov
mov
clc
jle
sub
call
aaa
fsub
mov
cli
push
dec
in
or
popa
sub
lods
pop
pushl
inc
je
xor
sbb
or
outsl
lds
movb
cmp
in
inc
mov
pop
ja
jnp
sub
sub
pushf
push
fs
jmp
sbb
std
call
inc
sub
push
jb
xor
dec
lahf
xchg
jnp
mov
pop
call
mov
js
mov
pop
mov
decl
in
xchg
test
jl
imul
mov
loopne
pushl
loope
inc
xlat
sub
adc
mov
inc
mov
rorb
xor
adc
pop
in
mov
push
nop
xor
xor
adc
nop
inc
inc
adc
mov
jg
lret
push
loop
popa
or
mov
xchg
pop
xchg
or
das
insl
dec
dec
cs
rcl
in
int
lods
inc
push
xor
jle
sbb
push
add
inc
rolb
pushf
mov
call
hlt
mov
jle
cmpsl
inc
movsl
out
or
adc
add
mov
or
fsubrp
leave
dec
aam
mov
imul
fcomps
xchg
adc
jbe
loopne
or
lcall
mov
mov
lss
inc
pop
call
push
sbb
ds
decl
or
stc
push
sarb
lcall
mov
inc
mov
movsl
cmp
push
lcall
sti
xor
cmp
pop
ficoml
jge
push
jb
push
dec
mov
call
and
cs
shr
dec
testl
daa
mov
xchg
popa
push
scas
jg
clc
ljmp
sahf
cld
push
pop
mov
add
roll
add
mov
sarl
push
adc
push
push
sub
sti
insb
push
or
je
roll
cli
push
int3
rol
add
sar
pop
or
aas
mov
cmp
xor
pop
xor
cmp
in
sub
inc
mov
ds
imull
push
pop
jne
pop
xchg
movsb
sub
adc
and
inc
sbb
xchg
and
xchg
mov
repz
rcl
sub
sub
sbb
mov
fisttps
aad
pop
mov
push
add
adcl
and
inc
sarl
fs
subb
inc
add
xor
imul
stos
inc
and
pop
jne
sub
sub
push
xchg
sub
xlat
cmp
lret
cmp
adc
mov
xchg
sub
dec
or
lods
jns
sbb
jmp
cmp
insl
ret
mov
cltd
inc
loope
mov
in
mov
xor
inc
shll
imul
push
and
add
sbb
popf
call
mov
shl
inc
add
inc
push
mov
cld
pop
xchg
pusha
inc
jno
xor
jbe
and
mov
mov
push
stos
cmp
jne
pop
das
sbb
xchg
imul
inc
sbb
or
popa
or
adc
fsts
in
icebp
lods
push
xchg
aad
mov
pop
pop
xchg
ja
push
in
inc
mov
jae
or
mov
add
fdivs
or
fnstcw
mov
imul
jne
call
mov
mov
xor
inc
mov
fsubs
xor
fnstenv
leave
xchg
dec
popf
leave
push
xchg
fldenv
jle
pop
cmp
inc
sub
mov
adc
call
adc
sbb
mulb
pop
add
insl
std
push
fiaddl
mov
xlat
xor
pushl
push
cmp
out
cltd
ljmp
out
sbb
and
mov
ss
push
or
jmp
das
movsl
mov
xchg
inc
test
in
pop
jp
sub
xchg
lahf
mov
in
cli
jmp
dec
mov
inc
mov
jmp
loope
and
and
cli
leave
idivb
xchg
aam
inc
ret
ja
mov
leave
xor
push
jle
jl
and
rorl
incl
movsb
loop
das
imul
mov
add
xchg
or
xor
leave
fsubr
cltd
mov
decl
lahf
lahf
dec
fisttpll
fxtract
std
inc
ret
cmp
insl
pop
das
dec
xorl
mov
aad
incl
rcl
jns
cmp
int
out
loope
push
push
out
add
fdivr
iret
sti
out
push
pushl
sbb
aam
push
fnsave
cmp
hlt
fbld
cmp
imul
cmp
lcall
fcomip
sbb
push
and
stc
push
outsl
cmpsl
sub
and
inc
int
mov
jne
mov
mov
pop
stc
imul
mov
shlb
rol
pop
lds
adc
jb
sbb
mov
push
in
aas
jb
dec
or
inc
push
loop
out
sub
mov
je
insl
cmp
cmp
xor
incl
loop
fcmove
mov
aaa
insl
iret
jecxz
xchg
lret
jne
scas
xor
sbb
incl
jae
jo
ja
jecxz
daa
xchg
and
push
push
arpl
dec
jmp
lcall
and
pop
sub
mov
cwtl
rclb
cmp
fdivr
ljmp
cli
lods
inc
xlat
stos
cmpsb
lcall
jg
inc
pop
push
add
sahf
cwtl
mov
call
ljmp
rcrl
popf
push
cs
jl
mov
mov
xor
pushl
pop
xlat
pop
mov
pop
mov
mov
pop
fwait
add
testl
dec
inc
fistpl
cmc
jmp
adc
test
gs
xorl
push
enter
jmp
fwait
test
adc
lret
xlat
jmp
sbb
cmp
mov
rorl
test
call
inc
xor
insl
and
jno
nop
pop
arpl
add
cs
adc
sbb
xchg
lock
jmp
fisttpll
bound
cwtl
leave
cmp
test
clc
cwtl
ljmp
fcomip
es
lock
sub
inc
jmp
pop
fldz
aas
jnp
jo
arpl
call
loope
jbe
jns
dec
fs
call
notl
xor
sbb
pusha
adc
decl
scas
das
sub
cmp
xchg
sbb
or
jne
jno
das
fists
testb
jno
push
mov
sub
test
popa
jb
xor
mov
inc
jle
push
push
push
insb
in
jp
loope
mov
addr16
shrb
sbb
es
dec
lcall
aad
mov
gs
scas
sub
loop
rolb
int
mov
decl
xlat
mov
mov
sbb
jno
mov
addr16
rcll
cli
clc
mov
stc
sbb
inc
shlb
clc
mov
mov
lods
aaa
sbb
jmp
ds
mov
pop
xor
test
jecxz
push
cmpsl
imul
and
mov
jmp
xor
and
push
in
mov
shll
ss
cmp
mov
and
xchg
or
loope
insb
inc
clc
pop
pop
mov
scas
push
jle
xchg
call
std
fimuls
daa
cmp
mov
push
mov
or
ja
xchg
jmp
and
sbb
ljmp
adc
jle
mov
popf
shll
das
push
xchg
call
adc
ljmp
outsl
lods
push
js
in
pop
mov
mov
xor
decl
icebp
sbb
mov
test
cmpsb
cmp
jno
push
pushl
xor
cmp
int
lds
in
xor
sub
sahf
lock
adc
lock
inc
jl
cmp
lret
or
dec
cmp
sbb
push
insl
push
mull
mov
mov
mov
adc
add
sbb
mov
jno
sub
mov
add
test
mov
inc
adc
ud0
aas
add
mov
jecxz
mov
cmp
sub
mov
stc
shlb
mov
mov
in
jge
movsl
rorl
sbb
adcl
aam
sahf
pushl
mov
inc
bound
dec
mov
sbb
and
inc
ja
mov
incl
mull
test
mov
jne
jnp
js
rolb
test
incl
mov
xchg
dec
inc
aaa
ret
sbb
cmc
into
into
adc
mov
inc
sub
mov
in
pop
adc
lcall
mov
adc
data16
fwait
add
push
xor
push
mov
das
rorb
mov
mov
mov
adc
leave
leave
std
or
popa
sbb
mov
push
push
rcll
mov
sbb
mov
jae
jae
shll
insl
adc
adc
ret
and
cmp
ds
jo
add
pop
cmp
fwait
testl
add
ljmp
insl
jl
je
xchg
cmp
mov
scas
repnz
jnp
xchg
nop
dec
fdivrs
js
repnz
lcall
mov
insb
int3
or
pop
adc
cmc
mov
cmp
pop
es
push
add
jmp
or
lods
pushf
adc
pop
test
sub
insl
je
mov
push
sbb
push
jecxz
enter
sbb
dec
je
sub
sub
mov
xchg
dec
faddp
out
and
push
lcall
data16
das
js
mov
ret
jecxz
cmp
xchg
les
pop
shrb
pushl
cli
enter
or
cwtl
sub
scas
fisttpl
push
sbb
xor
jmp
cmp
mov
or
sbb
addb
sbb
rorb
pop
inc
int3
mov
ljmp
add
lds
hlt
push
adc
lea
fdiv
mov
jo
xchg
cmp
jmp
out
into
and
into
dec
and
popa
mulb
insb
xchg
repnz
xchg
and
incl
xchg
cmpb
cmpsb
push
xchg
insb
dec
and
insl
repnz
movsl
push
jae
xchg
stc
push
cmp
sub
aaa
push
insl
iret
aam
sub
sbb
cmc
mov
push
xchg
adc
or
xchg
stc
cmp
add
cmp
imul
and
bound
push
push
ss
rcl
out
cmp
loope
or
sub
jg
js
or
cmp
fimull
pop
xor
jmp
lcall
cmc
inc
pop
ss
orps
push
mov
lahf
ss
in
idiv
mov
push
push
aam
fiaddl
push
ret
jge
int
call
pop
xor
mov
fbld
add
shlb
add
mov
mov
hlt
add
pop
icebp
aaa
jle
rolb
push
and
sti
call
and
xor
push
push
lcall
push
pushf
shll
push
orl
pop
mov
jg
lods
shl
cmpl
cmp
icebp
xor
sub
mov
insb
clc
dec
stc
pop
in
sub
push
xchg
ds
xchg
sarb
jae
cli
ds
fwait
mov
scas
mov
fcmovnbe
aaa
pop
mov
xor
roll
sub
rcr
shlb
inc
mov
jge
mov
mov
xor
aad
sahf
out
in
pop
movsb
fmuls
rorl
pop
cwtl
cltd
ljmp
ja
cmp
xor
xlat
pop
pop
mov
dec
scas
enter
aad
outsl
or
gs
into
int
ds
and
shll
mov
pop
xchg
mov
iret
cs
fdivrs
pop
repnz
sbb
xchg
mov
lcall
mov
fdivrs
or
ss
out
fnstenv
dec
call
sub
xor
lods
aad
push
fidivs
pop
fidivrl
inc
fdivrs
pop
inc
lret
stc
punpckldq
mov
cmp
pushf
xor
faddl
dec
push
ror
ss
xor
test
xor
neg
incb
fdivl
inc
aad
jbe
leave
or
ljmp
xchg
mov
pop
jp
dec
imul
xlat
jns
shll
call
sbb
mov
aaa
add
bswap
fdecstp
xchg
mov
cmc
push
jmp
into
inc
cli
fidivrs
sahf
mov
jo
fsubrs
pop
out
push
loope
int
mov
mov
xchg
int
or
repz
mov
enter
dec
push
push
sti
cmp
shlb
je
sarl
data16
push
repz
int
inc
pop
ja
dec
xor
iret
outsl
sahf
xor
jle
fidivs
and
idiv
repz
int
pusha
cmp
xor
lock
xchg
mov
out
out
cmp
and
mov
fiadds
or
insb
out
movsl
clc
data16
cmp
add
xor
mov
aas
fdivs
jmp
hlt
pop
inc
out
aad
pushl
pop
pop
pop
mov
test
mov
mov
inc
mov
pop
sbb
cmpsl
mov
nop
in
incl
fwait
jl
push
mov
mov
stos
test
dec
push
cwtl
cmp
inc
ret
repz
decl
jmp
dec
mov
loope
jle
aam
rcrl
test
repz
icebp
orl
pushl
xchg
mov
lret
dec
cmp
shr
dec
cmp
call
aaa
in
not
ja
filds
repz
outsb
fcmovu
cli
inc
cmp
pushl
les
sub
outsl
push
mov
mov
adc
xor
xor
cmp
push
gs
jmp
inc
pop
inc
pop
xlat
gs
add
outsb
mov
scas
lock
mov
mov
and
jle
ljmp
ss
mov
mov
cmp
fidivrl
inc
hlt
lcall
jecxz
sbb
pop
mov
sahf
dec
pop
jl
adc
sbb
xchg
xor
adcl
ljmp
push
dec
insl
xchg
dec
mov
leave
dec
fs
xor
out
and
dec
pop
in
decb
jae
shlb
xchg
push
into
jo
scas
divl
xor
shrb
decl
jg
jno
cmp
lret
dec
repz
xor
adc
pushl
fcmovbe
or
add
mov
dec
fprem1
hlt
cs
or
cld
mov
pop
xor
sti
sbb
and
jg
aaa
push
in
jmp
out
push
popa
mov
fmuls
mov
push
mov
xor
pusha
addr16
aaa
mov
mov
leave
inc
mov
dec
mov
in
std
aas
sahf
push
hlt
inc
mov
and
mov
add
shrb
pushl
push
addr16
pop
pop
leave
scas
xor
aaa
sbb
push
jl
push
pop
testl
inc
pop
cmp
ljmp
mov
pop
ret
push
xor
sub
cmp
enter
icebp
fwait
mov
out
dec
scas
ljmp
mov
int
inc
and
lds
idiv
fstpt
scas
icebp
lahf
mov
mov
xchg
mov
test
stos
das
clc
dec
mov
mov
jbe
mov
out
inc
or
or
cld
fistps
loopne
pop
pusha
dec
jmp
push
daa
cld
in
lcall
daa
imul
aaa
in
lods
push
mov
enter
lea
roll
push
cld
call
data16
dec
xor
movsb
shlb
stc
jmp
mov
into
cmc
mov
mov
pop
fs
inc
movsb
out
inc
push
mov
fisubs
or
inc
out
inc
fs
fadds
cs
std
sbbb
lahf
adc
cmp
lock
std
mov
dec
insl
sti
cld
movsb
xchg
push
jo
aas
int
push
addr16
mov
incl
pusha
outsl
sbb
or
mov
push
or
scas
insb
roll
xchg
lock
push
lcall
xor
out
int3
add
pop
cmc
cmp
jge
cwtl
in
mov
cld
in
pop
icebp
testb
adcb
test
out
mov
test
dec
lea
decl
cmp
xor
cmp
push
je
mov
push
hlt
in
lahf
sub
sahf
sbb
pop
test
incl
inc
mov
cld
jb
dec
dec
inc
outsb
jae
insb
dec
inc
push
sbb
dec
push
cmp
js
dec
push
jbe
outsb
outsl
jo
je
je
jae
inc
cmpsb
dec
push
xor
pushl
inc
inc
xor
xor
inc
dec
inc
outsl
ja
dec
inc
push
dec
jae
xor
jns
pop
imul
mov
je
dec
jp
inc
push
xor
outsl
push
jb
push
pop
dec
inc
incl
sub
mov
je
inc
push
jb
push
addr16
dec
jbe
ljmp
dec
je
aaa
dec
ss
arpl
js
dec
ja
push
push
dec
ss
cmp
call
xor
push
push
xor
fs
push
arpl
imul
mov
adc
dec
xor
pop
pop
mov
aaa
inc
push
imul
cmp
mov
imul
pushw
push
jo
dec
inc
dec
dec
xor
imul
pushl
addr16
outsl
pop
dec
outsb
insb
jo
cmp
jb
fs
imul
pop
bound
decl
push
xor
insl
outsb
inc
jbe
pop
jb
ss
adc
xor
push
add
imul
xor
imul
push
stos
pop
jg
pop
lock
pop
inc
jbe
push
pop
cmp
pop
cwtl
dec
outsl
push
dec
dec
inc
push
pushl
push
push
push
popa
data16
dec
pop
push
dec
xor
push
push
dec
gs
ja
popa
jbe
dec
inc
xor
push
dec
dec
push
push
inc
xor
decl
pop
imul
inc
ss
jbe
cmp
inc
mov
aaa
ss
dec
xor
push
insb
xor
out
jg
jle
fs
jo
add
inc
push
push
je
je
or
outsb
addr16
pop
sbb
nop
add
cs
das
andb
add
and
pop
push
xor
mov
aaa
out
ljmp
or
sbb
jecxz
add
add
shl
or
dec
mov
out
sahf
push
fcompl
mov
call
inc
cld
jmp
dec
in
or
fstps
cmp
es
pushf
jge
outsl
mov
cmp
and
ja
inc
sub
addr16
mov
jbe
push
or
push
mov
adc
ss
inc
push
adc
adc
stc
int
mov
sbb
sbb
sbb
jbe
dec
divl
mov
xor
inc
mov
int
sti
fisubrl
jno
jle
xor
loop
idiv
sarl
loopne
inc
xor
ret
xchg
dec
dec
jbe
pop
subl
decl
push
xchg
adc
lcall
push
fucomip
jg
std
out
idivb
daa
out
dec
test
dec
push
popf
inc
test
pop
shl
fidivrl
jnp
js
rolb
pop
sti
jbe
adc
cs
adc
push
xchg
cvtps2pi
leave
push
in
roll
roll
lds
inc
fisttpll
inc
inc
repz
push
sbb
adc
cmpsl
dec
jo
or
xor
cs
pop
or
dec
jbe
pop
xchg
loop
xlat
inc
mull
and
inc
enter
xbegin
mov
pushf
pop
test
outsl
insb
popa
push
cmp
outsl
and
addr16
push
inc
adc
es
jb
push
pop
xor
loopne
or
aas
leave
mov
sub
push
push
push
mov
xchg
jo
data16
ss
icebp
sarl
add
mov
int
dec
mov
jmp
pushl
popa
ds
jns
test
jbe
fistl
lret
inc
je
sti
fiaddl
das
jge
insb
mov
jb
out
jmp
call
int
std
or
into
loope
jbe
push
jae
loop
out
xor
mov
icebp
dec
push
scas
ds
fwait
dec
mov
mov
lds
in
imul
out
imul
gs
xor
cs
insb
pop
inc
sbb
gs
push
jb
je
arpl
push
arpl
outsl
outsb
cs
gs
jbe
fstpt
outsb
pop
jb
dec
outsb
and
imul
push
imul
gs
insl
insl
outsl
arpl
or
pop
xor
push
jo
xor
inc
outsl
jne
pop
push
jne
mov
push
push
outsw
jb
popa
outsb
arpl
sbb
fucomi
out
mov
adc
sbb
jb
cmp
xor
and
fs
push
mov
fs
scas
adc
ds
adc
in
out
sub
push
imul
popa
jb
outsl
dec
jne
mov
jns
sub
fucomi
pop
data16
sub
movsb
mov
pop
jnp
loopne
arpl
sbb
jb
movlps
jns
js
push
dec
cmc
and
and
jo
mov
jbe
rolb
push
jb
inc
fs
jae
imul
or
gs
push
or
inc
mov
arpl
insl
sub
mov
inc
mov
cmp
sbb
insl
mov
pop
imul
sbb
fs
jb
xor
fisubrs
jae
sub
imul
in
shr
push
push
outsb
push
jo
mov
adc
fwait
push
outsl
test
int
and
std
add
insb
xorb
cmp
or
xor
imul
fisubrl
pop
push
adc
or
push
jns
jns
inc
shl
xchg
xor
fildl
jno
adc
push
fisttpl
jns
pop
jb
jae
clc
sub
das
jae
fsubl
gs
outsl
inc
mov
mov
js
push
inc
jbe
jecxz
xchg
jae
jg
pop
jnp
dec
add
es
movsb
outsb
mov
and
adc
add
popa
jne
mov
loop
jg
jns
sbb
pop
xchg
fldlg2
leave
pop
aas
and
inc
xor
sub
xchg
fld
rorb
inc
out
shl
mov
or
mov
insl
push
movsb
push
lcall
jne
cmpsb
xlat
bound
repz
sbb
pop
push
jo
cmpsb
sub
sbb
mov
jbe
jne
popa
push
xlat
jbe
jmp
mov
out
mov
repz
mov
push
roll
adc
sub
and
xchg
add
lahf
pop
movsb
mov
adc
repz
loopne
les
lods
stos
fdivs
rorl
push
sti
adc
out
loop
or
jo
jae
adc
pushf
mov
sub
sub
sbb
sub
push
notl
jp
add
sbb
ret
fnsave
sub
or
adc
movsl
in
ret
fwait
subl
das
pusha
mov
sbb
jo
loop
adc
adc
inc
movsl
dec
jmp
and
imul
push
jecxz
or
mov
hlt
adcb
mov
mov
inc
xor
cmp
sub
addr16
orb
in
jnp
push
flds
xchg
fistl
push
xor
out
pop
fcom
inc
imul
mov
sbb
je
rcrb
movsl
push
mov
jecxz
int3
divl
pop
push
xchg
xorl
xchg
cmp
ja
gs
js
jo
addr16
nop
lock
jecxz
imul
inc
inc
cmpsl
mov
mov
adc
daa
popa
insl
inc
or
add
or
jae
ja
inc
clc
xor
push
or
jmp
xor
shll
pop
sbb
fsubs
or
nop
sub
inc
lret
xlat
and
pop
ficoms
inc
cmpsb
subb
add
push
adc
xchg
stos
incl
lret
incl
xchg
add
and
or
add
nop
push
add
add
xorl
and
or
adc
sub
mov
add
adc
inc
es
sti
mov
sbb
add
mov
add
and
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
sub
andb
in
sub
out
cmp
xchg
jnp
repz
cli
push
pop
and
iret
repz
xor
insb
jl
outsb
iret
repz
test
ret
iret
rcr
testl
jbe
push
xor
push
iret
repz
mov
out
repz
or
push
inc
push
data16
repz
sahf
mov
call
push
jae
xor
out
sahf
out
je
stos
mov
loop
je
sub
cmp
repz
test
repz
cmp
jns
out
xchg
mov
cmp
add
and
push
iret
repz
mov
repz
or
push
sub
cmp
repz
pop
subb
int3
fsubr
and
out
sahf
cmpsl
xor
insb
xchg
mov
enter
inc
push
xor
out
sahf
out
xchg
mov
roll
push
adc
pop
repz
repz
ds
call
pop
sahf
out
sahf
push
cli
cmp
sarl
xor
js
cmp
repz
lcall
cmp
jo
nop
mov
jns
ljmp
iret
repz
jle
mov
out
sahf
out
jg
and
jo
out
sahf
xchg
mov
dec
and
sahf
ja
and
pop
or
jns
xchg
mov
sub
repz
pusha
jo
xchg
imul
lock
andb
jns
out
pop
outsb
adcb
lret
adcl
cmp
repz
pop
adcb
enter
or
sub
fs
out
sahf
pushf
lods
mov
out
sahf
ja
cmp
jb
dec
repz
mov
cs
cmp
repz
jbe
scas
sarb
repz
push
xchg
push
jmp
sahf
out
jbe
lcall
enter
in
or
adc
dec
bound
repz
nop
stos
mov
jns
iret
repz
or
push
xor
jns
out
push
data16
lahf
out
sahf
movsb
mov
push
mov
repz
and
push
jb
mov
iret
int3
out
add
sahf
cs
pop
fs
jns
out
mov
repz
repz
push
and
xor
repz
inc
pusha
jb
xchg
mov
mov
lea
out
sbb
cmp
out
sahf
out
mov
fidivrs
lock
fimuls
out
sahf
out
data16
mov
clc
cmp
sarl
and
dec
push
repz
repz
data16
fsub
hlt
push
nop
sahf
out
sahf
and
cmp
pop
jb
sahf
out
jl
nop
lcall
enter
nop
xchg
jns
out
push
sub
pop
push
jns
out
jle
stos
les
jns
fdivp
cli
or
push
sub
repz
push
outsb
mov
lods
fsub
in
out
sahf
out
xchg
adc
cmp
sahf
out
sahf
jo
xchg
scas
ror
mov
jns
pop
xchg
push
sbb
repz
ds
push
fs
cmp
repz
mov
enter
iret
sti
in
xchg
jle
xchg
push
sub
cmp
repz
push
xchg
mov
cmp
repz
sub
adc
cmp
repz
cmp
iret
repz
outsb
orb
repz
in
sbb
jns
ds
push
out
sahf
out
cwtl
stos
mov
push
clc
jns
fsub
cld
push
cwtl
cmp
sub
and
test
cmpsl
and
inc
add
push
inc
push
push
lcall
adc
dec
sbb
mov
call
movsl
lahf
add
cltd
ja
nop
movaps
jle
mov
in
jmp
bound
cmp
push
pop
es
stos
hlt
mov
fwait
iret
jns
daa
stos
fistpll
sbb
fbstp
mov
divl
decl
sti
push
sub
js
ret
leave
call
mov
xchg
test
jb
stos
test
xlat
es
add
fwait
lcall
sub
jg
fsubrl
adc
dec
aad
pop
inc
mov
ljmp
lock
sarl
lods
gs
push
rorl
popa
mov
rep
ss
out
adc
jl
pop
sub
stc
inc
iret
rorb
jnp
mov
mov
ja
sub
add
lret
cmp
mov
xchg
cli
push
pop
in
adc
push
outsl
jae
fimuls
jnp,pt
sub
stc
lcall
sti
and
add
cwtl
scas
outsl
jmp
or
ret
cmp
aam
paddw
scas
loope
ljmp
pop
hlt
push
lret
adc
mov
adc
into
insb
test
fmul
push
jl
idiv
pushl
dec
cwtl
lods
or
fsubrs
sub
sbb
dec
or
xchg
mov
jmp
mov
incl
negl
scas
hlt
cmpsb
mov
pop
rcrl
fs
repnz
cmp
pushf
fisttpl
adc
jne
cs
ret
out
lcall
xchg
mov
scas
testb
arpl
in
dec
roll
push
ret
inc
jbe
dec
jmp
add
jb
xchg
or
icebp
andl
adc
cmp
nop
cld
mov
sarl
stc
out
jns
loope
mov
dec
sbb
ret
sbb
jns
das
imul
mov
fistpl
movsb
decl
jns
xor
cltd
sahf
mov
ret
or
xlat
sbb
std
sub
ret
xchg
lcall
cli
xchg
dec
in
arpl
push
inc
inc
std
frstor
fdivrl
jnp
cmp
jmp
pop
pop
cwtl
cmp
outsb
shlb
xchg
in
push
ja
cmovl
lock
cmpsb
lret
add
pushl
jp
pop
cmp
aaa
lea
inc
ljmp
pushl
jbe
call
push
je
push
dec
jae
repz
mov
sub
es
jmp
movl
sti
das
inc
ret
lock
sub
inc
xor
fidivrs
fisubrs
in
movsb
sarb
lcall
push
jns
push
in
or
mov
stc
ljmp
outsl
paddusb
insb
arpl
xchg
addr16
mov
pusha
mov
or
dec
iret
jo
inc
push
daa
movsb
inc
aaa
pop
pop
mov
scas
cmp
xor
add
shrb
push
test
fisubrs
stos
jecxz
cmp
sarb
adc
insb
mov
cmpsl
and
decl
fdivl
leave
dec
push
cli
mov
popw
dec
movsb
push
loop
popa
out
mov
ud0
decl
shl
outsb
int
arpl
pop
inc
dec
push
popf
pop
mov
xor
aam
movsb
inc
scas
repnz
mov
decl
in
sahf
mov
fs
or
in
lret
int3
or
mov
jge
cmp
in
add
dec
insl
jmp
faddl
inc
jp
ror
jmp
xchg
cmp
jb
lods
cmp
and
inc
push
xchg
pop
and
or
push
xchg
stc
in
testl
in
fisubs
cmp
addr16
lea
je
loope
decl
and
xor
fistl
mov
outsl
out
mov
fsub
incl
jae
xor
in
fsts
and
ljmp
sbb
mov
sub
call
iret
out
xchg
pop
xor
rol
loope
cmp
and
mov
xchg
xchg
aas
mov
jmp
pushf
cmp
int3
das
int
cmp
and
popf
mov
mov
pop
jne
loop
aam
enter
pushl
lods
sbb
mov
lcall
sub
cmp
test
jmp
test
mov
incl
inc
mov
outsb
rclb
add
push
pop
adc
repnz
lcall
mov
pop
push
mov
push
adc
adc
scas
cmp
push
iret
imul
call
sub
test
and
icebp
testb
dec
daa
jbe
xchg
adc
leave
ss
add
decl
add
push
push
jb
ljmp
sbb
ljmp
movsl
mov
cmp
icebp
pop
pushl
aad
call
jb
or
shrb
xchg
mov
add
and
stos
push
test
mov
cmp
fisubrl
repz
xchg
push
std
call
test
mov
xor
jle
mov
mov
popa
xchg
dec
pushl
stos
js
jbe
addr16
cs
push
repz
push
popa
jb
push
inc
out
push
mov
pushl
enter
pop
arpl
out
xor
sub
inc
push
or
mov
jg
xchg
mov
loopne
pushl
adc
popf
mov
mov
xchg
add
sbb
pop
lods
cli
push
pop
test
outsl
pop
call
mov
mov
pop
cltd
xor
push
int3
test
ss
sub
movsb
aam
int
scas
ss
fidivrs
xchg
dec
rcll
xor
lods
mov
mov
ficomps
nop
inc
daa
jmp
cwtl
rcl
pop
xchg
loopne
fiaddl
ja
inc
out
cs
jno
and
outsl
clc
aaa
std
pop
sbbb
call
xchg
cmp
jne
add
dec
nop
cli
push
push
dec
jle
and
or
cmp
adc
sub
ljmp
cli
das
mov
into
movsb
movsl
or
pusha
add
sbb
clc
jne
jbe
push
fisttpl
repz
dec
sbb
sbb
hlt
mov
jge
int
cmp
xlat
dec
das
add
adc
dec
xchg
imul
adc
inc
sub
out
lahf
adc
lcall
gs
fwait
shll
cltd
mov
or
jne
sbb
js
rcrl
jb
xchg
fwait
mov
bound
cmp
pop
ja
mov
xor
jbe
mov
adc
das
clc
incl
mov
dec
add
mov
lods
mov
jno
inc
lods
arpl
sbb
push
pop
add
outsl
cmp
jnp
mov
xor
fists
sbb
testb
xchg
adc
mov
cmp
push
cmp
cmp
test
aam
push
lcall
bound
inc
stos
push
inc
mov
mov
fcmovnb
movsb
dec
adc
or
leave
clc
mov
mov
mov
and
cli
movsb
xor
add
decl
dec
hlt
rorb
dec
sti
jo
scas
sub
xchg
pushf
jge
jge
mov
dec
lock
pop
jb
cwtl
jg
xchg
cmc
dec
inc
or
pop
xchg
out
data16
adc
or
push
push
jl
inc
xchg
std
in
out
inc
nop
dec
decb
icebp
ds
jo
sub
push
and
inc
xchg
sbb
push
sbb
loopne
mov
xor
mov
mov
arpl
call
lcall
jno
dec
and
lea
icebp
popf
insb
ss
add
in
mov
inc
aam
xchg
ret
lret
aaa
loope
lea
lds
sarb
movb
call
sbb
mov
daa
or
xchg
jnp
sub
movsb
inc
xchg
jg
dec
pop
cmc
cltd
cmp
push
push
xchg
in
jge
inc
imul
ljmp
and
and
insl
mov
mov
push
lret
mov
and
pop
in
mov
cmp
mov
fabs
bound
push
aad
sub
mov
jmp
mov
xchg
pop
adc
shl
sbb
mov
sub
adc
leave
test
jge
sbb
push
rcl
cmp
test
inc
fldl2e
js
outsl
in
mov
sbb
ljmp
pop
shlb
sbb
je
ret
bound
mov
int3
sbb
and
int3
out
incl
pop
xchg
pop
dec
xchg
nop
enter
scas
fdiv
lea
pop
mov
sbb
jp
mov
call
lea
les
jno
stos
pop
or
imul
sahf
popa
insb
adc
push
xchg
incl
add
aad
cli
test
add
xor
xor
mov
das
out
mov
fs
into
or
popf
or
jg
repnz
div
pop
mov
in
inc
addl
mov
mov
filds
in
sub
icebp
lods
mov
faddl
lcall
ficompl
inc
sub
cmp
pop
out
jo
jg
decl
and
jmp
cmpsb
mov
cld
jb
xchg
mov
pop
jb
and
sub
mov
cmp
repz
decl
fs
inc
fstl
mov
cld
fwait
push
test
mov
cmc
adc
lea
fldl
call
add
xchg
rorl
jmp
test
push
outsl
sub
add
adc
pop
ret
mov
sub
sbb
add
mov
add
xchg
push
mov
mov
jmp
roll
test
and
mov
data16
pop
inc
enter
ss
rorl
shl
ss
ficomps
mov
sbbl
cli
lcall
out
xchg
incb
rorb
push
adc
ret
out
mov
dec
imull
mov
shlb
loop
fldt
push
es
cmpsb
push
adc
push
pop
jp
fwait
ss
test
adc
ror
mov
pop
scas
fcoms
daa
inc
dec
lret
mov
dec
xchg
push
fdivs
aas
packuswb
pop
xor
pop
mov
cmp
mov
fadds
jp
mov
in
cld
sub
and
inc
cmc
ret
stos
arpl
fldt
call
fists
inc
hlt
xor
jb
imul
aam
cmp
aam
stc
mov
repnz
dec
adc
dec
lock
les
add
adc
inc
cmp
aam
jle
sbb
pop
pop
das
cmp
jle
imulb
call
inc
mov
hlt
loopne
pop
test
or
push
inc
xor
dec
sti
add
inc
sub
jmp
add
testl
add
push
mov
gs
clc
outsl
cli
ljmp
call
int
cmp
mov
rol
not
xor
enter
jmp
mov
icebp
jns
stos
jb
movsb
xchg
fidivl
test
jbe
xor
fs
dec
fwait
xor
shr
aaa
call
push
fcomps
popf
loopne
les
flds
push
dec
in
fs
mov
orb
dec
insb
lcall
inc
nop
fstpl
xchg
jbe
pop
mov
push
pop
in
sbb
and
std
cmpsb
cmp
jne
sub
sub
das
fmul
jle
ficoms
call
push
add
push
mov
mov
jnp
push
dec
iret
bound
cmp
or
shll
xor
fldt
mov
sbb
loop
adc
cmp
xlat
mov
cmpsb
xor
jmp
sbb
das
mov
push
rorb
loopne
fisubrs
xchg
call
jmp
adcl
dec
cmp
mov
cmp
xchg
xchg
push
jge
sub
decl
sbb
fcompl
je
aad
ja
push
insl
pop
ss
fdivrp
ljmp
dec
test
insl
out
icebp
outsl
pop
ret
ret
inc
dec
popa
pop
mov
add
outsl
cwtl
push
je
movsb
push
lret
mov
aas
sbb
decl
cld
in
ljmp
fbstp
adc
aam
cli
xchg
cmp
loopne
push
dec
enter
pop
mov
outsl
nop
fwait
or
sub
leave
dec
addr16
jmp
push
mov
dec
cld
popf
int3
arpl
or
int3
outsb
out
pop
cmpsb
sub
mov
mov
out
fildl
daa
mov
or
cmpsl
lds
das
and
insl
mov
mov
inc
in
scas
cmp
dec
push
push
das
inc
aas
cli
ret
mov
popl
incl
in
or
push
xlat
adc
movsb
fidivrl
clc
lea
out
dec
xchg
pop
or
ljmp
fwait
jo
clc
popf
data16
idiv
pop
xchg
xor
inc
mov
dec
cmp
lcall
in
cltd
repz
jmp
sub
insb
imul
imul
inc
ss
cmpsl
jle
ljmp
dec
inc
scas
mov
aas
movsl
daa
lahf
sahf
insb
call
push
jle
pushl
in
insl
loope
shll
xchg
ds
or
inc
add
filds
pushf
mov
pushl
sbb
mov
out
cwtl
mov
cld
loope
enterw
repnz
lcall
inc
test
jmp
out
iret
mov
addb
cmpsb
xchg
add
aad
test
in
fcompl
inc
cs
push
subb
jle
incl
test
mov
fadds
and
mov
rcll
pushl
and
sarb
test
mov
int3
mov
mov
jnp
mov
push
stos
jo
js
je
jecxz
pop
dec
dec
test
jle
or
sahf
mull
imul
insb
nop
cld
decl
add
mov
ret
jnp
mov
ret
bound
mov
mov
call
cmp
adc
jnp
sti
sbb
mov
pushl
push
jp
adc
test
xor
gs
mov
and
and
or
pushl
pusha
pop
lock
pop
call
and
mov
mov
and
loopne
push
or
mov
push
pop
cmp
pop
mov
fnstenv
lea
add
push
jl
sbb
test
jg
decl
cmpsb
bound
push
incb
add
pop
sub
lcall
nop
cmp
pop
cmc
roll
dec
fsubrl
mov
movsb
lcall
ljmp
or
jg
dec
mov
test
popf
test
dec
lahf
jnp
clc
clc
outsb
cmc
xor
cmpb
dec
jg
pushf
clc
mov
cmpsl
ljmp
lods
incl
dec
adc
pop
xchg
xchg
leave
pop
cwtl
mov
cmpsl
jl
inc
sbb
imul
call
and
and
add
int3
mov
iret
cmp
lcall
loope
idiv
jecxz
sahf
js
xor
ja
scas
jle
xchg
test
mov
xchg
call
ficompl
push
cs
and
sbb
cltd
lret
mov
mov
adc
js
push
and
sub
xchg
sar
incl
jnp
add
jge
pushf
lahf
shll
sahf
xlat
fiaddl
mov
jg
jl
push
clc
jge
pop
out
fcoms
pmulhw
xchg
mov
mov
mov
andl
cli
out
enter
into
addr16
dec
int3
mov
ja
ficomps
and
cli
and
jbe
sbb
jns
scas
insl
in
lahf
in
pop
pusha
push
or
enter
jae
inc
sbb
push
push
insb
rcl
outsb
lds
mov
mov
mov
out
clc
das
jo
andb
mov
mov
call
cli
adc
push
jae
repnz
jns
jle
insb
adc
incl
pop
out
mov
mov
icebp
jecxz
sub
or
shrl
pushl
adc
mov
jg
adc
xchg
push
movsl
mov
sbb
nop
add
mov
test
cmpb
add
je
jno
dec
push
add
push
test
stos
xor
push
std
jmp
mov
fimull
enter
fisubs
mov
ret
cli
xlat
pop
ret
add
inc
xchg
pushf
mov
push
xchg
negb
jns
jle
mov
xchg
lcall
pop
pushf
adc
in
neg
lock
imul
loop
lea
scas
ljmp
push
shr
cmpb
inc
push
fs
fsubrp
mov
jmp
cmp
cmp
lcall
pop
or
cmc
mov
js
das
out
loop
cmpsb
movsl
sbb
jg
adc
les
cmp
xor
fists
outsl
mov
xchg
push
inc
sbb
xlat
xor
xlat
dec
lcall
cmp
add
shl
test
mov
jmp
jge
and
in
pop
inc
jnp
adc
hlt
iret
sbb
lret
mov
mov
inc
shrb
into
jp
js
js
mov
sub
dec
add
mov
jg
and
bnd
sbb
xor
cmp
cmp
dec
sbb
in
mov
ljmp
adc
and
mov
pop
ret
cmc
push
push
sbb
iret
or
jae
sub
push
cltd
cmp
mov
jae
mov
jne
pop
enter
xchg
imul
mov
gs
call
mulps
in
aaa
cmp
cmp
stos
iret
adc
mov
jmp
sub
arpl
test
mov
push
into
pop
add
lds
stc
shlb
pop
sbb
add
xchg
cmp
or
push
fidivl
cltd
push
enter
mov
jg
and
mov
addl
loope
sub
popf
mov
inc
adc
dec
cli
es
mov
jb
mov
push
pop
fnsave
movsl
or
dec
sti
add
mov
xor
lahf
adc
stc
or
mov
sub
fdiv
dec
mov
dec
jmp
dec
ss
pushf
cltd
dec
jb
sbb
call
repz
popf
inc
jae
int3
inc
out
xchg
rclb
decl
xchg
in
xchg
pop
sub
ljmp
xor
lret
loopne
ljmp
sbb
aaa
in
and
lea
mov
in
pop
hlt
loopne
sar
outsb
jmp
cmp
mov
xchg
dec
sub
mov
into
and
ds
fwait
loop
loop
lret
sub
rorb
decl
mov
sub
sub
pop
mov
jle
pop
push
lock
flds
xor
aad
adc
filds
xchg
xor
cmp
fnstenv
sub
add
jl
rcrl
adc
in
in
lcall
rolb
jmp
and
mov
test
iret
sar
xchg
insl
pushl
cld
call
pop
clc
sahf
mov
je
jp
inc
or
fs
scas
add
lcall
jae
and
arpl
shlb
insl
pop
sbb
in
decl
add
ljmp
daa
repnz
test
ret
and
adc
jbe
fisubrl
negl
mov
mov
add
or
dec
cmp
adc
test
cli
dec
sub
inc
pusha
fdivrs
xor
mov
and
shl
mov
cmp
dec
mov
xor
popf
adc
pop
div
popa
xlat
std
push
and
add
movsb
movsl
mov
imul
test
fdivrp
lret
or
test
in
andl
cs
incl
dec
mov
pop
call
je
mov
fcomi
mov
sarl
call
ret
fistl
mov
call
stc
icebp
push
ja
mov
pop
sub
sub
call
insb
mov
das
out
jl
mov
out
into
arpl
int
mov
aaa
inc
push
xor
jns
jmp
fs
jno
test
push
iret
clc
test
idivb
dec
mul
outsl
add
and
pop
dec
mov
scas
out
sbb
clc
inc
xchg
xchg
jnp
lea
and
ljmp
insb
lcall
jne
jae
clc
nopl
lret
jnp
out
incl
insb
mov
pop
xor
sbb
sbb
dec
rcrl
lea
mov
jnp
pushl
mov
push
mov
mov
outsb
test
cmc
imul
sub
xchg
test
sub
and
mov
fistpll
lret
movsb
sbb
cmp
xor
ds
sub
jb
xchg
test
clc
jg
adc
lods
cmp
idiv
sub
inc
xor
lods
in
outsl
sbb
fidivrl
xor
jg
lcall
mov
sub
xchg
jecxz
add
inc
call
les
ljmp
int
adc
and
rcrb
mov
fcmovu
iret
dec
push
xor
ljmp
or
enter
xchg
jmp
cmpsb
data16
stos
cltd
mov
cmp
lock
cwtl
lods
inc
dec
or
push
push
lock
mov
dec
repnz
xchg
add
loopne
lods
ss
fwait
decl
andb
inc
sbb
or
push
testb
pusha
xchg
inc
adc
xchg
decl
push
xchg
stos
das
jnp
movsl
fcompl
in
repz
xor
sbb
xchg
ljmp
call
add
push
xchg
mov
std
fwait
adc
jns
lock
pop
push
pop
lcall
cmp
xchg
xchg
fsubp
dec
pop
pop
pop
push
mov
jle
adc
cmp
inc
lock
push
jns
xorl
pop
popf
jmp
cmpsb
nop
inc
jmp
pushl
mov
add
hlt
and
sub
cmpsb
gs
cmpsb
dec
xlat
insb
shl
jmp
push
and
mov
in
mov
or
es
and
out
addr16
repnz
dec
mov
push
dec
lea
in
call
insb
mov
mov
xchg
loop
iret
mov
outsb
rep
scas
pushl
es
out
loopne
popf
mov
add
xchg
fadd
mov
sbb
inc
arpl
mov
icebp
test
into
sub
aaa
jne
dec
loop
dec
cmp
dec
cs
pop
mov
insl
push
std
call
cld
xchg
pop
jnp
iret
xchg
fstps
or
lcall
pop
mov
ljmp
pop
dec
bound
gs
test
push
or
scas
jb
aam
adc
lea
gs
mov
cmp
jo
fdivl
inc
je
insl
lcall
xchg
xchg
push
das
pusha
push
mov
fisttpl
dec
cmpl
insl
scas
pop
push
pop
xor
test
mov
test
aam
xlat
leave
mov
mov
hlt
mov
call
clc
mov
mov
sub
nop
jne
sbb
mov
pop
mov
sbb
jmp
mov
jbe
pusha
add
btr
test
lahf
mov
mov
jge
push
dec
mov
sbb
sub
inc
cmp
adc
inc
cld
incl
sub
sbb
testl
sbb
ss
cli
jge
adc
das
clc
aaa
fimuls
mov
js
xchg
xchg
mov
push
xchg
cmp
push
mov
cltd
pop
insb
inc
and
cmp
clc
cli
and
clc
dec
test
mov
sti
jge
cmp
cmp
push
push
mov
fs
mov
int3
push
adc
movsb
stc
int3
inc
xor
aad
out
xchg
add
imul
movsl
pop
jns
push
add
pushl
sub
dec
cmc
inc
push
mov
pop
cs
nop
std
stos
jl
jno
scas
ss
cmp
push
out
outsb
lret
pushl
mov
push
pop
cwtl
sub
inc
repz
es
add
insb
xchg
mov
xor
add
inc
sbb
dec
sub
jo
mov
out
cld
incl
cmp
mov
lods
sahf
fidivl
je
push
lret
in
push
inc
addb
pushl
push
adc
push
pushf
shrl
mov
aas
movsl
inc
addr16
push
push
adc
add
stos
loopne
fcomps
mov
sbb
add
and
loopne
push
outsb
pop
aas
insb
jmp
sub
pop
rorb
icebp
sbb
sub
ret
shrb
add
bound
cmp
decl
xor
insb
mov
jne
daa
fisttpll
mov
inc
push
mov
add
imulb
aas
imul
or
pushl
adc
add
lds
mov
lahf
faddl
jo
mov
mov
dec
pushl
std
push
or
movsl
loop
arpl
xchg
adc
inc
stc
imul
xor
out
cli
incl
fstpl
iret
imul
cld
cmp
outsl
movsb
mov
adc
jmp
mov
or
movl
bnd
ss
jnp
mov
add
jnp
lock
mov
dec
rcll
cmp
das
xchg
repnz
xchg
xor
lcall
xor
pop
lods
or
sbb
push
inc
push
mov
inc
dec
mov
mov
lcall
out
sbb
inc
scas
in
add
jne
xor
mov
std
ljmp
and
inc
cld
aam
push
cmpsb
push
xor
scas
insb
inc
loop
call
and
jp
addr16
jg
ljmp
outsb
jno
lret
mov
pop
nop
or
cmp
cmpsb
push
data16
clc
icebp
cltd
ficoms
ret
fildl
in
push
test
loop
xchg
sahf
jp
jbe
ljmp
sbbb
call
dec
mov
outsl
lock
cmp
mov
jmp
add
mov
daa
loope
pop
ret
pop
sub
data16
inc
xchg
xorb
call
fcmovb
mov
js
inc
shlb
in
addr16
mull
jo
sahf
lret
int3
mov
xor
jmp
jae
mov
subb
cmp
lcall
xchg
loop
xchg
xchg
imul
out
cmp
xor
xchg
mov
or
enter
mov
cmp
les
dec
into
sahf
stos
push
aas
enter
xor
mov
loop
jg
jmp
push
imul
loopne
fdiv
fcomip
dec
xchg
imul
popa
and
pop
sahf
aas
movsb
push
call
push
push
fistps
incl
adc
insl
outsl
mov
divb
js
mov
jg
incl
pop
daa
push
mov
cmp
xlat
push
or
xor
sar
ljmp
cmp
xlat
inc
and
ss
loop
cs
jbe
or
pop
ljmp
push
xchg
mov
lea
mov
je,pt
sti
inc
call
push
xlat
lods
scas
lock
adc
push
pop
bound
js
lret
jmp
xor
add
call
test
mov
push
sub
ret
out
imul
hlt
out
scas
xchg
mov
push
mov
cmp
arpl
ss
aas
mov
dec
dec
adc
fcomip
sbb
cmp
push
mov
xlat
inc
adc
push
loopne
adc
mov
jg
lods
ljmp
js
mov
jne
gs
mov
mov
fsubl
das
movsl
jp
nop
push
push
call
lcall
push
ret
lds
xchg
mov
in
jbe
pop
dec
out
xchg
bound
dec
mov
mov
mov
push
add
xlat
dec
lea
lret
xor
leave
lea
lea
add
je
mov
cmp
xchg
fs
rolb
mov
jl
fcompl
xlat
add
jge
sti
fwait
and
sbb
in
push
xchg
xchg
pop
adc
lcall
fisubs
or
iret
js
push
mov
mov
enter
mov
ljmp
cwtl
mov
jae
and
aaa
mov
test
mov
jecxz
adc
fisubrl
cmp
lock
call
add
mov
push
and
dec
vpshufd
imul
decl
and
call
clc
inc
xor
mov
sub
je
and
decl
fcomi
lcall
mov
cs
jns
mov
fpatan
int
pmulhuw
inc
pop
into
mov
dec
sub
mov
adc
lcall
insl
arpl
shrb
std
je
ret
and
decl
insb
cld
xchg
inc
xchg
mov
or
fidivrl
loop
adc
sbbl
fwait
imul
mov
out
jmp
rcrl
push
xor
jmp
inc
addr16
adc
cltd
add
fs
inc
jl
out
cli
outsl
xlat
xor
clc
push
idiv
inc
das
adc
aam
mov
aad
fnstcw
mov
les
pop
adc
sub
outsb
dec
mov
pop
lcall
lcall
dec
cmpsl
jg
sub
stos
hlt
scas
push
jmp
dec
and
decl
cmp
cmovl
lret
jae
xor
pop
mov
loopne
es
dec
jnp
inc
cmp
out
shlb
lock
mov
fistps
push
dec
push
popf
cmp
dec
lret
div
add
pushf
cmp
cld
ljmp
mov
jg
push
inc
mov
clc
setnp
pop
fnsave
scas
jmp
xlat
sbbb
jecxz
scas
jmp
lods
sahf
cmp
lret
scas
sbb
adc
push
jl
decl
outsb
aad
lea
xlat
sub
scas
imul
cld
jmp
mov
dec
sti
inc
fldt
clc
pushl
jbe
inc
filds
pop
mov
repz
mov
xlat
int
mov
sbb
mov
nop
push
inc
shrb
rcrb
mov
cli
or
push
scas
xlat
aad
xor
adc
lret
iret
data16
lcall
lret
jg
mov
sub
addb
hlt
or
mov
test
dec
jb
cwtl
mov
mov
or
andb
add
push
push
dec
sbb
add
stos
pushl
ljmp
pop
jmp
pop
rdmsr
dec
inc
cmc
cmp
loope
add
mov
sub
nop
mov
popa
adc
add
inc
insl
inc
subl
scas
leave
clc
aad
xchg
jns
cltd
xchg
mov
and
test
cltd
icebp
scas
ljmp
push
inc
in
mov
push
ljmp
dec
mov
cmp
xor
xor
xchg
fs
mov
scas
sub
sahf
movsb
adc
fld
pop
in
loop
cmp
sbb
and
jno
mov
in
loope
push
cmp
clc
out
je
sti
incl
sbb
push
or
jl
and
or
lods
in
lcall
add
pop
lret
inc
mov
imul
pop
pcmpeqb
mov
or
lea
test
imul
dec
mov
cmpsl
leave
shll
pushf
and
jmp
pop
call
jnp
fstl
mov
cli
pushl
push
and
and
pusha
movsl
xchg
jl
add
push
in
or
icebp
bound
add
inc
ljmp
sahf
repz
insb
andb
movsb
popa
aas
sbb
push
movsb
insb
mov
pop
xorb
popf
mov
xor
mov
ljmp
xor
inc
mov
jb
leave
pusha
mov
and
aas
stos
daa
and
lock
in
call
push
jmp
loop
xchg
fiadds
and
call
aad
xor
jecxz
call
xor
mov
sbb
ss
push
push
mov
xlat
pop
xor
mov
sahf
scas
loop
insl
inc
daa
test
or
push
repz
jmp
sub
and
add
movsb
dec
mov
outsl
orl
cs
decl
les
imul
popf
sarl
lret
lds
decl
loop
nop
xor
jmp
cltd
int
mov
sti
ss
incl
mov
inc
clc
aas
cld
or
mov
add
sub
das
cmp
mov
dec
push
sub
lret
pop
hlt
inc
ds
mov
add
push
daa
rolb
mov
sarb
loop
mov
pop
stos
xchg
shlb
sub
mov
filds
inc
sarb
lods
push
rcl
cwtl
fiadds
sar
sub
incl
popa
decl
adc
data16
clc
fdivrs
shlb
xor
pushl
or
lods
mov
pop
lds
jae
push
push
push
lods
leave
std
dec
push
or
in
iret
insl
mov
pop
subb
add
gs
or
aam
xchg
xor
xlat
sbbb
mov
cmp
sub
repz
imul
lcall
daa
push
in
xchg
lods
arpl
mov
ljmp
jae
xor
pop
push
mov
fildll
adc
push
je
fdivl
mov
loope
nop
fwait
push
jmp
outsl
mov
mov
and
pop
push
out
dec
jns
mov
sbb
decl
clc
push
imul
in
into
push
push
push
or
iret
push
xchg
mov
cli
les
sub
fs
lds
push
sbb
in
jb
xchg
scas
inc
add
loop
call
pop
fs
outsb
add
mov
mov
loope
or
push
imul
loope
dec
sub
bound
mov
or
mov
out
push
in
mov
loop
sti
pop
je
inc
cmpsl
sti
dec
pop
mov
push
push
jl
cwtl
cwtl
fsubs
incl
xor
adcl
pushf
dec
add
dec
cmp
clc
xorl
lahf
sahf
decl
sbb
sbb
mov
sub
icebp
rclb
cs
dec
inc
inc
xchg
pop
ljmp
and
lret
jle
rclb
xchg
int3
cmc
lds
pop
pushl
add
flds
pop
xorb
adc
push
mov
sbb
mov
and
pop
pop
ret
push
popf
in
inc
push
fucomp
fs
fwait
push
and
test
push
mov
mov
dec
xchg
fstl
mov
popa
je
push
cltd
cmp
mov
sub
mov
js
add
cmp
inc
ja
out
lret
mov
stc
lock
clc
in
fists
jo
or
dec
pop
jp
and
lds
decl
shl
push
pop
js
lods
mov
push
sub
xor
rcll
shlb
aad
stos
adc
outsl
stos
mov
cmp
les
arpl
rorl
lret
cmp
mov
and
test
sbb
aas
ficompl
jmp
xchg
insb
jp
lcall
lcall
repz
adc
lcall
cmp
pop
inc
sbb
push
pushl
decb
lods
cmp
dec
push
leave
pop
add
mov
mov
cmp
jmp
dec
int
jns
fwait
out
mov
xor
cmp
pushf
pop
xor
cld
pushl
sbb
add
movl
inc
adc
lret
decl
sub
insb
xor
jecxz
cli
das
in
cwtl
xor
nop
out
insl
cwtl
fadd
and
and
pop
adc
stos
sub
inc
daa
inc
sub
arpl
movsb
stc
out
call
jmp
push
insl
in
inc
mov
pop
popa
mov
call
jmp
roll
out
aaa
jb
sub
leave
shll
mov
dec
call
pop
fisubl
mov
cmp
jnp
add
mov
cmc
jmp
dec
sub
sar
jmp
xlat
les
sbb
cmp
pushf
out
dec
xor
and
mov
adc
xor
sbb
nop
push
icebp
cmc
stos
sbb
jbe
out
cli
in
pop
dec
scas
stos
fdivrs
cmpsb
scas
dec
push
movsl
mov
rorb
jle
loope
ret
pop
add
std
pop
xchg
xor
pop
add
das
scas
pop
fisttpl
ljmp
out
sub
mov
xor
hlt
mov
shl
dec
mov
scas
cli
cmpsb
inc
push
enter
jb
iret
jg
daa
cld
jne
popa
insb
mov
ja
jmp
mov
int3
lods
idivb
cmp
scas
repnz
jns
add
jmp
add
int
mov
push
lahf
aaa
ficomps
mov
lret
push
inc
popf
outsb
dec
or
ljmp
and
cld
push
adc
xor
test
push
decl
xchg
mov
lret
mov
ja
jle
loopne
call
xchg
leave
push
pop
cli
or
pop
pop
cltd
mov
adc
push
fcomip
lahf
push
fs
xor
jno
jns
sub
lcall
inc
xchg
inc
pop
mov
inc
xchg
lods
add
or
sbb
xor
inc
push
ja
mov
sub
in
mov
insb
cmpb
stc
inc
clc
and
jb
mov
dec
stos
faddl
mov
ljmp
pop
int3
daa
dec
cmc
lret
or
jno
cmc
cmp
push
aaa
in
push
mov
cli
and
std
in
adc
neg
cmp
pop
fcompl
push
sub
fs
incl
and
add
iret
mov
pop
scas
jmp
repnz
addl
frstor
xor
pusha
cmpsl
lock
jo
pop
icebp
mov
lods
movsl
clc
mov
dec
cmpl
pop
sahf
xor
out
jns
mov
jp
sub
jg
push
das
pop
cmp
loopne
cmp
les
rclb
mov
loopne
fcomip
sub
pop
lods
repnz
scas
or
push
pop
xor
sbb
mov
cmp
adc
cmp
jmp
push
adc
aad
mov
or
fdivrp
cli
jle
flds
ljmp
cmp
sub
xor
popf
xchg
jmp
sub
xor
inc
cmp
outsl
mov
jmp
or
inc
mov
arpl
mov
cmpsl
dec
cltd
mov
movsl
add
lcall
pop
gs
xchg
lret
out
fisttpl
repz
mov
mov
sbb
pop
mulb
push
out
inc
fcomip
call
mov
inc
out
repnz
mov
push
test
imul
inc
push
and
data16
dec
or
inc
jae
icebp
flds
dec
jmp
leave
xor
jns
pop
hlt
aaa
cld
push
in
ret
dec
ficoms
fisubrs
test
and
fcomip
pushl
adc
jnp
mov
stc
cmp
mov
in
sbb
cwtl
lods
repnz
shl
call
aaa
call
orb
mov
dec
inc
cmpsl
push
sbb
push
jae
fwait
push
std
jmp
sub
cwtl
pop
push
mov
xchg
pop
aas
mov
adcb
scas
mov
pusha
loop
arpl
mov
ja
add
aaa
ds
incl
cmp
add
jmp
xor
pop
push
or
cmp
div
sbb
jmp
xor
add
pop
xchg
jp
idivl
call
in
dec
lock
je
decl
add
and
enter
out
mov
out
sahf
pop
cmp
dec
sbb
in
incl
cmpsl
pop
inc
mov
loope
outsb
dec
je
in
sub
push
xchg
lds
jmp
push
pop
push
movsb
mov
clc
push
xchg
push
lret
dec
jae
mov
inc
movsl
les
dec
jg
std
mov
pushf
iret
pusha
lock
pop
adc
fcomps
mov
push
lcall
lea
rsqrtps
fsts
test
push
pop
jmp
pusha
bound
jg
dec
sbb
jmp
push
nop
cs
xor
push
ficompl
pop
or
movsl
ds
sbb
out
dec
pop
movsl
xchg
jle
mov
std
aad
dec
mov
push
or
cs
mov
pushl
imul
daa
mov
xorb
jmp
insl
sti
add
mov
repnz
cld
sar
cmp
inc
adc
out
xor
clc
lahf
sbb
jb
sahf
inc
iret
jnp
je
cli
fcomip
decl
jge
pop
xchg
cmpsb
and
popa
xlat
stc
lods
addr16
out
add
sub
hlt
movsl
lods
push
ret
xchg
mov
push
aas
cmpsl
jne
and
jmp
xor
fistpl
stos
mov
rorl
dec
pop
push
int3
xor
call
fcoml
loop
lretw
cmp
fbstp
jns
adcl
cwtl
outsl
shrb
lret
fldl2e
shrb
add
fisttps
repnz
out
dec
fsubrp
xor
loopne
mov
inc
adc
out
sbb
iret
push
je
jbe
cmc
add
inc
mov
ss
shrb
popa
loope
ret
call
push
add
out
outsb
and
xlat
pushf
in
in
out
test
sti
cli
call
bound
daa
push
je
out
iret
test
push
incb
adc
push
rcrl
imul
leave
cli
out
sub
xchg
xchg
aaa
scas
daa
xlat
test
push
lcall
mov
pop
scas
mov
filds
add
dec
pop
sbb
sbb
je
pop
fsubl
push
cld
incl
mov
cmpsl
dec
sub
out
pop
mov
dec
arpl
into
push
dec
push
sub
lcall
stos
add
pop
jno
fstps
lcall
into
jecxz
sarl
and
decl
pusha
dec
aad
sti
test
pushf
dec
push
mov
dec
sbb
or
add
add
stos
lds
adc
xchg
pop
in
mov
push
pop
jbe
mov
data16
into
push
sbb
loop
rclb
test
jb
incl
xor
loopne
dec
cs
xor
or
or
fisttpll
mov
into
decl
out
aas
out
pushf
pop
bound
adc
ret
push
aaa
cmp
cmp
clc
mov
stc
jl
jmp
aaa
aam
jo
les
jecxz
in
rcrl
pop
jl
mov
xchg
mov
fwait
or
fmuls
outsb
out
cmp
push
sub
add
pushl
mov
shl
pop
ret
insb
lret
jnp
imul
test
rcl
jmp
xor
push
ljmp
loop
cmp
adc
cmp
pusha
inc
mov
stos
aaa
std
ljmp
and
push
sub
push
iret
scas
scas
mov
pop
xchg
adc
ljmp
ss
cld
push
mov
in
mov
sub
lock
pop
sub
sti
jg
inc
cltd
imul
in
test
mov
cmpl
icebp
pop
pop
jbe
outsl
cli
ljmp
lds
fldt
cmp
jo
ja
and
into
sbb
or
inc
jg
add
mov
nop
cmp
popa
ror
sub
incb
std
sbb
incl
ljmp
lcall
les
adc
lock
xchg
push
jne
fcomip
or
test
and
pop
pop
mov
mov
adc
add
leave
aam
fmull
jle
xor
fnsave
lock
push
jb
and
xlat
lods
fwait
lcall
data16
dec
mov
pop
add
in
cmp
or
cmp
dec
mov
cltd
sub
std
nop
into
adc
inc
sbb
mov
push
jmp
xor
mov
js
and
dec
int3
jle
out
pop
scas
mov
imul
test
sbb
cmp
pop
into
fdivrs
mov
call
ljmp
lret
cltd
cmp
cmp
add
aam
bound
or
xor
in
nop
ja
lcall
push
jg
std
pop
cmp
iret
ss
lds
add
cli
mov
jmp
cmp
adc
mov
adc
add
ret
push
ficoml
out
mov
outsl
hlt
mov
pushl
mov
jmp
dec
sarl
sbb
pop
lahf
arpl
mov
adc
sahf
fldl
xlat
jmp
leave
arpl
cmpsl
test
loop
cmpsl
incb
es
adc
push
out
sar
jg
in
mov
sub
jne
dec
push
jp
inc
pushl
dec
insl
outsl
and
outsl
clc
fdivrl
add
iret
sahf
test
and
pusha
clc
iret
lea
xchg
dec
incl
scas
jp
xchg
jae
stc
and
out
outsl
faddl
in
call
mov
mov
add
push
jnp
sub
hlt
add
jo
or
incl
cmp
sub
stos
fwait
sbb
sub
xor
mov
fmull
iret
arpl
lret
in
mov
inc
sub
jo
jl
jae
pop
sub
pop
sbb
out
jp
bound
jbe
aaa
add
fwait
lcall
cld
leave
mov
scas
push
jb
ret
adc
mov
mov
sti
push
mov
lahf
mov
insl
lock
lods
push
imul
pushl
mov
xor
addr16
pop
pop
scas
pop
je
mov
push
pop
ds
cli
enter
fcomip
inc
and
cmpl
inc
sbb
sub
and
fcomip
incl
ljmp
aam
fiadds
cmpsb
mov
lock
rcl
aas
insl
je
daa
fs
jmp
cmpb
je
mov
in
jg
ljmp
das
daa
adc
push
jbe
mov
jle
notl
cli
nop
add
push
adc
icebp
aas
cltd
test
mov
xchg
cs
jp
loopne
mov
call
std
shrl
and
into
ret
xor
mov
xor
mov
cmpsl
jnp
mov
sbb
rolb
ss
icebp
xchg
out
arpl
pushl
call
fs
xchg
popa
pop
lahf
add
nop
mov
popf
std
dec
jmp
pop
rcr
cmc
js
mov
xor
mov
stos
sbb
test
pushl
ljmp
imul
fldt
stc
dec
imul
fisubl
sbb
push
test
sub
testl
mov
dec
repz
pop
xchg
idiv
fiadds
sti
adc
xor
loop
mov
stos
inc
jno
xchg
mov
pop
sub
push
int3
sub
pushl
lods
add
lods
bound
rcrl
jno
push
sbb
add
mov
mov
stc
shrl
out
stos
scas
lods
pushf
mov
sbb
adc
repz
call
add
sub
ret
int
out
pop
mov
div
inc
test
push
shlb
test
cli
mov
and
xor
or
bound
lcall
les
and
push
cli
push
insb
scas
dec
lret
lahf
xor
jg
push
lcall
test
sbb
jecxz
xor
dec
pop
sub
scas
jmp
dec
mov
adc
fcomip
decl
mov
sbb
pop
mov
fisubrl
push
push
aam
aad
insl
push
mov
jl
pop
and
call
movsb
pop
push
sbb
pop
mov
pop
adc
scas
aad
fistpl
scas
lcall
add
inc
cmp
xorb
and
enter
or
lcall
das
jg
cld
idivb
fists
repnz
jbe
ja
mov
test
jmp
dec
stc
xor
push
sub
faddl
push
mov
js
mov
sahf
into
icebp
or
ljmp
dec
mov
dec
inc
insl
jp
adc
imul
fstl
jmp
lcall
iret
mov
mov
mov
test
fmul
gs
fsubl
incl
lahf
lods
imul
out
testb
sahf
adc
adc
idiv
call
shll
outsl
scas
pop
jecxz
in
out
test
push
rorl
arpl
jnp
into
jmp
push
xchg
and
mov
ja
push
fsubrl
mov
xor
mov
gs
mov
ljmp
and
test
data16
and
add
inc
lahf
jg
mov
push
addr16
jmp
mov
das
pop
pop
and
out
int3
orb
fstpl
or
xchg
daa
mov
pop
stos
and
and
repnz
ljmp
shrb
cmp
and
dec
jb
mov
repz
fdivr
jg
jmp
sti
cwtl
test
out
xor
lret
scas
pusha
lret
sub
adc
mov
stos
inc
lahf
jnp
pop
mov
ficomps
aas
push
mov
mov
call
mov
mov
adc
loope
pusha
push
fst
fcomi
xor
nop
decl
jbe
fwait
cli
mov
or
lods
jge
cmp
or
jne
pop
cmp
cmp
mov
outsl
cld
sub
dec
cltd
rclb
push
xlat
xchg
ret
jbe
inc
adc
or
mov
sub
fcomip
sti
lret
outsb
or
gs
push
imul
adc
inc
sub
aas
mov
sub
decl
mov
push
mov
repz
scas
leave
fimuls
in
mov
pop
cld
push
data16
adc
decl
pushf
mull
gs
jnp
test
jge
dec
push
int3
mov
cmp
mov
ja
inc
dec
decl
adc
mov
and
popa
mov
lea
mov
lcall
add
sbb
sbb
fnsave
cli
repz
push
adcb
loope
and
std
jp
push
or
xchg
jg
scas
adc
test
lcall
xchg
mov
les
std
push
insl
adcb
loopne
xor
mov
lahf
clc
pop
rorl
out
clc
xchg
data16
mov
fimull
mov
shl
mov
bound
dec
notb
pusha
popf
rcrl
or
mov
push
sbbb
fiaddl
lods
mov
fld
cwtl
test
std
jg
in
mov
xor
jmp
xor
enter
call
in
lods
fmuls
push
fisubrs
cmpsb
inc
pop
add
cmp
add
jp
call
dec
push
nop
pusha
mov
repnz
pop
mul
xlat
stc
jecxz
push
fmull
into
mov
mov
dec
popf
cmp
jecxz
jmp
icebp
add
loopne
insl
xchg
inc
push
jmp
xor
outsl
dec
jg
inc
lcall
clc
sar
xchg
ret
int3
and
inc
xchg
test
sub
inc
push
lret
imul
outsl
enter
outsl
clc
lcall
hlt
into
push
shr
sub
fstpt
in
mov
mov
jmp
lret
mov
xchg
push
mov
lea
pushl
fsts
inc
push
scas
ret
mov
or
pop
jle
cli
int3
pushf
fucomp
dec
repz
fidivrs
xor
ljmp
mov
lcall
inc
push
fsts
loope
mov
cmc
clc
data16
roll
push
insb
addr16
scas
mov
jle
sub
out
sub
push
flds
jns
call
addr16
int
imul
out
lret
setge
jle
adc
rorb
sti
enter
xorb
ljmp
jle
jo
cld
pop
pop
fimull
les
push
mov
sub
pop
fisubs
popf
insb
shr
pop
xor
gs
arpl
add
and
jle
push
out
mov
pop
insb
subb
sub
stc
stc
cltd
imul
mov
lret
adc
push
std
pushl
lock
sti
lods
fs
fs
jbe
push
leave
jno
xchg
gs
or
scas
sahf
ljmp
bnd
mov
imul
sbb
sub
lea
out
jne
ljmp
je
xchg
inc
push
jno
sahf
mov
add
sbb
xor
outsl
cli
lcall
cmp
orps
xchg
add
add
gs
out
inc
data16
push
cmp
fcomip
push
js
cmpsl
test
pushl
test
cli
mov
aad
int
pop
lock
roll
loopne
mov
pop
stc
stos
mov
inc
ljmp
mov
mov
cmp
fstl
mov
xor
enter
test
fucom
push
jmp
insb
dec
fld
inc
push
aas
shl
fisubrl
pop
iret
xchg
lcall
out
mov
imul
push
lcall
push
and
fistl
pop
fs
rorl
xorb
mov
and
and
jns
call
mov
in
add
inc
and
lock
push
mov
dec
jbe
sar
jmp
dec
addr16
leave
mov
std
xor
gs
xchg
insb
lahf
and
fimull
mov
adc
das
icebp
ret
out
adc
sbb
orb
push
aaa
orb
sbb
jle
jge
cmp
arpl
rcr
and
mov
mov
or
push
jp
test
decl
into
xchg
push
mov
or
and
jbe
mov
and
lock
push
mov
jno
fcoms
dec
jae
xchg
aad
inc
mov
lcall
repnz
mov
aas
pop
sbb
sbb
and
mov
or
ljmp
cli
or
xchg
arpl
cmpsl
shl
mov
dec
mov
cli
push
cmp
pusha
incl
and
ficomps
int3
xchg
out
shl
pop
rorb
mov
pushl
or
add
xchg
sarb
inc
pusha
lods
lcall
adc
add
jg
jmp
or
jge
mov
imul
scas
adc
je
in
dec
push
das
push
inc
mov
pop
test
sbb
imul
daa
adc
push
adc
dec
pushl
or
inc
movsl
add
mov
adc
clc
out
mov
sbb
loop
pop
xor
sahf
pop
mov
incl
mov
test
cmp
adc
adc
lcall
mov
mov
cmp
loop
movsb
in
shrb
repnz
jmp
es
push
xchg
fistps
or
sarl
shll
pop
cmp
jmp
jp
sbb
je
cltd
xchg
js
enter
outsl
in
mov
fbstp
cmc
int3
mov
incl
dec
fsubrl
aaa
xor
dec
sbb
cmp
xchg
xlat
and
hlt
call
sub
sbb
adc
insl
inc
mov
sar
call
sub
jl
xchg
push
push
adc
mov
fistpll
decl
mov
xchg
add
push
mov
and
dec
add
incl
ja
xchg
mov
jl
jg
popa
fidivrs
pop
flds
divl
nop
jmp
mov
mov
push
add
es
les
loop
add
fidivrl
imul
dec
jo
fildl
and
cs
pop
lahf
adc
jno
add
pop
lcall
pop
mov
aaa
dec
push
pop
fldl
stc
mov
cmp
shll
inc
cmp
shlb
leave
inc
pushl
push
mov
sub
cmpsb
ja
loop
jb
lret
xchg
fistpll
out
or
aam
dec
pop
sarl
int
xor
mov
jecxz
out
sbb
mov
mov
int
mov
icebp
call
sub
mov
ljmp
orl
inc
jne
repz
imul
push
rcll
pushf
cmp
sbb
pop
lock
jp
incl
insl
fists
loopne
mov
jne
ffree
adc
xchg
sar
inc
pop
xlat
popf
mov
das
mov
add
sub
ljmp
or
jl
cli
xchg
stos
mov
sub
ljmp
pop
xlat
inc
cmp
jg
lds
jns
pop
jge
js
adc
sahf
push
nop
fdivrs
nop
inc
adc
hlt
pop
xor
incl
fsubrs
xchg
fildll
adc
mov
sbb
lret
flds
es
in
out
jmp
push
pop
xor
ror
mov
xchg
mov
addr16
pop
loopne
mov
sub
dec
push
dec
stos
xor
lods
aad
push
xor
push
les
popa
cmp
sahf
ja
mov
ljmp
pushf
dec
imul
push
rclb
addr16
cmp
push
xchg
mov
dec
jge
incl
sahf
push
adcb
pop
cmp
inc
and
das
dec
ljmp
push
out
cmp
adc
incl
es
fs
out
jp
jl
in
or
mov
inc
lods
and
cmp
mov
pusha
cwtl
aaa
xlat
lret
sbb
mov
mov
sub
jg
xor
lcall
or
adc
fadds
insl
pusha
stc
pushl
ret
push
push
xor
iret
push
pop
dec
push
and
lret
or
sbb
mov
aad
repz
xchg
cmp
or
jl
xor
daa
jl
pushf
data16
lcall
and
push
xchg
pop
adc
sub
sub
sbbb
xlat
push
push
push
std
int
shl
sub
ret
test
ret
not
xchg
cmp
ret
xchg
sub
aam
jl
iret
testl
fcmovu
sbb
aam
ret
leave
cli
cmp
fsubrl
and
jg
aad
test
sub
dec
shrb
mov
adc
mov
nop
imul
lahf
pushf
mov
xchg
rcrb
pop
fsubp
mov
stc
sub
lret
sub
sub
call
movsl
jecxz
fwait
jg
outsl
sub
and
and
stc
decl
push
imul
and
cwtl
xor
pop
jl
std
inc
mov
stos
loopne
call
les
xor
es
sbb
int3
xchg
iret
cmp
xchg
call
inc
rcll
das
mov
adc
push
inc
xorb
push
stos
mov
mov
ljmp
sub
dec
sti
jge
mov
clc
rcrl
loop
rcrb
fs
jp
dec
sti
pop
dec
or
mov
stos
and
lds
jmp
jne
push
pop
sbb
call
cmpsb
loope
aad
faddl
leave
aad
ljmp
lea
fsubrs
pushf
ret
sbb
adc
mov
loope
xchg
dec
sti
imul
inc
lcall
push
push
out
outsb
cld
fisubrl
mov
lahf
jecxz
into
add
mov
movsb
cs
std
call
xchg
mov
test
cmp
dec
jns
mov
insb
in
mov
ror
mov
xchg
mov
arpl
lret
push
jmp
push
aaa
push
push
dec
out
pop
sub
jmp
mov
jo
pop
insb
dec
fwait
dec
loopne
push
cmp
lock
pop
add
aas
adc
and
cltd
mov
data16
out
mov
or
inc
outsl
in
mov
sub
sti
jmp
jb
dec
push
arpl
movsb
dec
mov
xchg
clc
xchg
ljmp
incl
fbld
je
pop
sahf
jecxz
sahf
repnz
jae
int3
mov
lret
push
jg
push
and
outsl
sbb
call
popl
jle
and
jecxz
cmp
push
pop
dec
das
aad
cltd
cmp
cmp
fdivrl
jmp
inc
in
es
xlat
fistpll
add
mov
ss
cmp
push
cmpsl
cmpl
pushl
rcl
or
outsl
mov
pop
xchg
testb
roll
loopne
mov
jmp
xor
incb
and
add
push
xlat
aaa
faddl
fcos
ljmp
insl
xor
sbb
clc
sti
jno
popa
icebp
mov
not
gs
addr16
mov
push
sbb
jmp
sub
bound
repnz
imul
mov
out
cmp
lcall
call
mov
int3
insl
and
jb
dec
sahf
cmp
sbb
ss
dec
mov
push
idivb
xchg
aaa
ja
fdivl
push
pop
arpl
mov
loopne
sbb
incl
sbb
repnz
imul
rcrb
int
bound
ljmp
ljmp
outsb
pop
jne
pop
ret
xchg
inc
pusha
stc
push
or
std
std
xchg
js
push
jp
ss
pop
dec
xchg
jl
dec
mov
stc
outsb
int
sub
adc
mov
int3
or
int3
dec
add
jp
pop
call
jbe
mov
pop
sbb
jge
das
cltd
cmpsl
mov
inc
cli
sbb
lret
mov
enter
call
stc
sahf
les
inc
mov
out
in
or
leave
mov
cmp
pop
popf
xchg
cmp
dec
jmp
sub
add
stos
cli
imul
jb
xchg
add
movsl
ja
or
xchg
sub
cmp
xor
mov
mov
or
jg
jle
mov
cmp
mov
add
test
xor
xor
mov
jmp
add
hlt
repz
xchg
sub
mov
pop
das
pop
mov
and
pushl
jmp
or
sar
cmc
dec
cli
pop
push
repnz
push
jmp
aam
ljmp
outsl
pop
xor
inc
jmp
add
sub
jae
jmp
dec
push
cmpb
orb
test
and
xchg
lods
cmp
jmp
jnp
mov
decb
push
int3
loop
daa
loop
jmp
int
or
inc
mov
mov
mov
pop
stos
out
xchg
sbb
out
xor
and
js
adc
pop
lcall
ljmp
mov
movsl
add
sbb
out
out
incb
pop
sub
imul
adc
orl
jmp
or
mov
movsb
or
cmpsl
lea
mov
xchg
jle
je
mov
ljmp
loop
dec
fidivrs
imul
cmpsb
inc
mov
fcomip
sub
adcb
or
cmp
jno
in
pop
data16
dec
jp
sbb
and
ljmp
stos
xchg
mov
sbb
cmpb
adcb
jg
lcall
dec
mov
insl
mov
xlat
pusha
cmpsl
scas
test
mov
into
adc
cmp
lcall
add
ret
or
cs
mov
jle
cmpsl
dec
test
int
sahf
jle
adc
ljmp
lcall
mov
je
fisttpl
cmp
sbb
inc
xor
ljmp
in
push
mov
cmc
in
inc
mov
jne
negl
xlat
je
dec
popf
hlt
and
push
cwtl
pop
xchg
xchg
repnz
int
pop
loopne
popa
sarb
scas
xchg
pushf
cmpsb
push
add
sub
call
std
cmp
aad
test
push
repz
jmp
ret
shr
mov
bound
jg
call
push
movsl
sub
fsts
clc
shrb
push
fidivl
cmp
dec
sbb
mov
mov
divl
fcmovu
xor
pop
mov
mov
je
stos
repz
inc
leave
push
psraw
push
lret
test
add
arpl
adc
hlt
call
sub
daa
enter
hlt
pop
jmp
fdivl
mov
jmp
jmp
push
mov
incl
shl
fwait
and
and
jmp
push
es
sbb
push
mov
imul
xor
mov
mov
dec
mov
rol
orb
in
push
push
decl
int3
lock
push
inc
int
aad
pop
cwtl
adcb
inc
rcrb
and
call
es
lds
adc
or
mov
mov
jne
pop
jmp
mov
divl
sbb
pop
sarl
xor
popa
sbb
xor
jmp
fisubrl
push
jle
stc
push
mov
xorl
lahf
inc
push
jbe
jb
xor
call
and
cli
daa
out
push
stc
les
std
jnp,pt
push
testb
cmp
cld
mov
ret
mov
into
ret
popa
dec
inc
mov
jmp
pusha
mov
cmp
sub
dec
adc
dec
mov
incl
test
mov
int3
or
mov
adc
push
xchg
xchg
fists
bound
sub
stos
xchg
stos
xchg
shrl
mov
and
nop
pop
shll
lcall
jnp
jmp
fld
iret
inc
imul
inc
adc
and
test
mov
incl
test
lret
jae
int
xchg
mov
enter
jb
pushl
jae
push
pop
ret
hlt
rcrb
cwtl
out
sar
outsl
arpl
dec
mov
push
subl
mov
push
xchg
mov
sbb
xchg
mov
jg
push
push
or
lcall
scas
test
or
and
aaa
cs
fwait
decl
es
inc
jne
push
imul
mov
std
mov
push
lods
adc
cmp
cmpsl
dec
or
adc
dec
push
cs
dec
sbb
adc
inc
and
push
leave
xor
mov
fisubrl
cwtl
jg
sub
mov
orb
ljmp
inc
mov
iret
and
sbb
mov
dec
clc
shr
rorb
mov
fstpl
lods
mov
lea
imul
aas
xor
daa
es
lahf
xor
cld
sub
into
dec
ret
int3
and
stos
mov
outsl
ficomps
jle
jnp
add
dec
bound
cmp
test
pusha
or
iret
inc
cmc
call
mov
leave
imull
mov
pushf
adc
mov
push
pop
fnstenv
add
jne
sub
lcall
xor
xor
shll
pop
rolb
scas
add
xchg
pop
jg
ljmp
or
push
ljmp
and
xchg
pop
or
sbb
mov
test
stc
mov
sar
mov
fildl
aaa
push
jb
arpl
ss
mov
decl
aaa
nop
ss
out
int3
dec
or
cmc
fdivrs
sbb
cmpsb
mov
cmpsl
mov
aam
lcall
lcall
fmull
fwait
xor
dec
int3
pop
sarl
sub
fwait
cltd
ljmp
add
xchg
push
mov
and
xchg
xchg
ja
jmp
out
dec
mov
mov
xchg
dec
dec
sub
lods
cwtl
fiaddl
daa
addr16
fnsave
call
aam
mov
inc
cmpsl
and
movsb
ljmp
sub
pop
scas
jg
int3
lcall
int
in
inc
push
sub
sub
repz
fldl
jne
mov
or
dec
ljmp
and
fcompl
dec
ljmp
push
push
pop
push
jmp
jae
imul
enter
jno
push
sahf
sbb
iret
test
bound
outsl
test
icebp
call
xchg
insb
pop
ret
gs
fdivrl
sbb
call
lcall
inc
push
or
ss
sbb
cltd
xor
cmp
loop
gs
xor
rclb
imul
out
clc
mov
imul
test
stc
fstpl
sti
push
js
incl
sahf
cs
xor
repz
test
aam
pop
add
jge
in
pop
jmp
jmp
sarb
outsb
sbb
popa
pop
add
mov
dec
add
mov
fistps
xchg
push
or
test
mov
dec
jl
mulb
call
jns
cli
adc
and
xor
dec
adc
ds
mov
call
lret
icebp
lret
pushf
dec
mov
repz
jg
xchg
insb
push
sub
mov
popa
add
dec
in
sub
imul
jmp
into
or
add
cwtl
mov
call
std
clc
insb
xchg
leave
xchg
mov
test
out
out
push
je
pop
and
lods
inc
jmp
mov
cwtl
cs
insl
xor
jae
sbb
pop
sub
mov
adc
incl
pushl
jmp
aam
mov
and
jae
jnp
repnz
cld
xchg
cmpsb
and
mov
add
das
sbbb
push
movsl
jl
ja
and
sub
loop
cmp
mov
sbb
pop
adc
cmp
mov
mov
cmp
popl
xchg
test
cmpsb
fsubr
cwtl
push
add
mov
inc
aas
and
push
sub
mov
out
lods
cmpb
jmp
dec
sub
shll
sub
nop
aad
pop
adc
mov
fldcw
mov
xchg
aad
test
shrb
call
decl
fisubs
xor
push
xchg
insl
fwait
inc
xchg
sbb
int
sbb
aaa
test
hlt
mov
ja
js
rcll
out
int3
or
fcmovnbe
jp
inc
xchg
jg
or
mov
cltd
test
pusha
cltd
test
repnz
ret
sbb
mov
add
in
jmp
cmp
pushl
addr16
movsl
ficoms
xchg
ret
inc
loop
test
inc
sarb
lret
pop
js
jmp
mov
jmp
xchg
mov
in
das
arpl
int
jae
arpl
ljmp
push
pop
in
and
ret
push
leave
jne
xchg
sub
stc
movsl
add
int
ljmp
sub
idivl
jo
pushf
lock
int
out
int3
mov
mov
incl
xlat
dec
sbb
insl
lret
cld
cmp
push
mov
rorl
mov
adc
lods
bound
test
adc
es
lcall
dec
xor
test
xor
filds
in
mov
or
fidivs
cld
mov
cli
push
jns
cmp
inc
rcll
ss
fsubr
add
mov
aam
jmp
loopne
clc
mov
test
fildll
std
push
pop
jl
rorl
call
aad
ljmp
and
xchg
xor
sbb
lcall
cmp
popf
mov
mov
mov
ret
mov
cwtl
scas
outsb
push
pushf
das
aad
mov
adc
push
sub
mov
xchg
test
jl
stc
andb
jmp
sub
in
mov
mov
fwait
mov
shrl
cmp
fnstsw
into
cmpl
sub
call
mov
rcr
cwtl
add
xchg
pusha
and
fchs
mov
incl
daa
mov
into
xorl
sub
mov
pop
cmpb
sub
xchg
jle
xor
sti
in
and
push
xchg
jg
outsl
adc
iret
adc
repnz
xabort
xchg
js
std
jne
jg
insb
int3
xor
pop
icebp
stos
sub
jns
pop
xor
mov
push
jae
inc
sub
ds
lret
xchg
mov
lret
outsb
dec
add
pop
rclb
outsb
aad
scas
adc
lcall
popf
mov
addr16
cli
push
sbb
mov
sbb
xchg
jg
outsl
xlat
roll
push
or
frstor
pop
cmp
shl
mov
je
pop
xor
decl
adc
sbbb
mov
sub
pop
jne
sbb
jg
loop
add
lcall
push
filds
dec
clc
aad
nop
xchg
iret
push
or
lret
mov
loope
sti
inc
push
xchg
mov
add
lods
call
jb
xchg
cli
pop
mov
sub
xor
push
jne
xchg
add
adc
repnz
and
mov
test
xchg
dec
lods
rorb
pop
lcall
popa
outsb
mov
jg
sar
aas
out
je
lods
push
and
ficoml
xchg
out
stos
lahf
push
pushl
mov
cwtl
cltd
jl
jp
dec
xchg
pop
test
lock
sti
ljmp
jg
inc
cld
or
cmpsl
je
push
test
dec
insb
sub
ljmp
out
clc
xchg
push
inc
icebp
jmp
jae
inc
lds
xor
push
icebp
cltd
ja
xlat
add
adc
cmp
mov
inc
cli
push
xchg
in
xchg
xorl
iret
or
cmp
repnz
or
jp
testl
leave
sub
sbb
jg
decl
jle
adc
int3
sbb
aaa
addr16
and
orl
fnsave
ffreep
cltd
test
mov
das
fs
sar
imul
imul
ljmp
addr16
adc
outsl
xchg
out
and
shll
in
mov
mov
cmpsl
jle
outsb
ss
test
cmp
jbe
jno
sbb
or
push
jb
ljmp
and
pop
ret
movsl
mov
sub
xchg
cli
pushl
pop
lds
inc
das
mov
lret
push
lods
hlt
imul
fdivl
sahf
inc
xchg
andb
adc
mov
xor
stos
push
decl
hlt
in
mov
push
sbb
xlat
xor
negb
push
dec
inc
cltd
add
dec
pop
sti
lcall
nop
sbb
pop
test
inc
jecxz
cld
mov
dec
sub
or
cmc
out
xor
xlat
pop
cld
into
cltd
inc
push
sub
jg
mov
jnp
mov
push
ffree
loopne
cmp
stos
cmpsl
mov
lea
dec
xor
ljmp
movsb
dec
das
dec
push
cmpsb
xchg
andl
dec
shl
mov
decl
sub
xchg
leave
sbb
jmp
push
repz
inc
jle
jne
xor
inc
decl
lock
cmp
out
adc
inc
ljmp
int
mov
movb
push
fnstcw
add
jns
repnz
sahf
enter
ljmp
ljmp
add
frstor
and
xor
and
out
mov
jmp
cmp
xlat
and
mov
loop
fcompp
enter
ss
out
fbstp
fs
inc
jo
test
les
sahf
xor
ss
lcall
xchg
fwait
ret
xchg
adc
insb
mov
aaa
sarl
das
jmp
fs
xor
inc
ljmp
push
cwtl
out
jle
push
bound
repnz
adc
push
jle
fwait
clc
gs
inc
into
test
outsl
mov
xchg
jbe
rolb
fildl
lret
or
rorl
xchg
popf
xor
jb
and
pop
sbb
xor
mov
mov
jg
sub
loope
shr
insl
mov
pop
xchg
rcl
pushf
scas
stc
hlt
call
inc
mov
lcall
push
and
mov
ljmp
data16
dec
xchg
gs
jl
adc
pushl
mov
sti
mov
inc
dec
imul
jg
push
mov
lcall
jp
fildl
repz
inc
sti
or
sahf
jmp
out
lret
pop
pop
mov
inc
mov
outsl
xchg
lods
cmp
inc
shrl
es
call
adc
and
xchg
negl
out
out
jg
adc
cmp
loope
sbb
call
cld
hlt
negl
decl
aaa
mov
enter
push
mov
and
sti
fisubs
mov
xor
cmp
inc
lcall
out
push
mov
sti
mov
add
mov
aaa
lods
lds
ljmp
in
sbb
dec
fstpt
stos
pop
inc
mov
ds
and
bound
shrb
pushl
test
push
mov
cmp
cli
out
ss
push
push
add
sar
incl
int3
or
fisttps
ja
inc
ja
pop
adc
sahf
lcall
pop
sbb
enter
addb
xchg
xor
jle
outsl
pushf
shll
in
lock
mov
movsb
jno
fldenv
aam
xchg
jg
das
add
sbb
ja
lock
add
pusha
cmp
xlat
insb
sub
fdivrs
subb
loopne
ljmp
rorl
shlb
inc
cli
test
pop
inc
popa
mov
movsb
iret
sbb
mov
xchg
sub
lods
or
xchg
rcrl
jg
int3
xor
and
repnz
jnp
mov
or
push
add
imul
dec
in
adc
rorb
shrb
decl
adc
lock
in
roll
sbb
mov
and
inc
daa
int
stc
decl
push
addr16
jbe
mov
testl
add
jp
lock
pushl
fisttps
ss
daa
in
inc
push
jp
pop
std
rorb
fildll
in
stos
incb
outsl
xor
jg
cmp
pop
stos
jp
mov
jno
xchg
addr16
in
pop
js
push
es
dec
inc
sub
test
in
xchg
or
adc
add
imul
push
insl
cmpsb
adc
and
stc
jmp
loopne
jae
dec
test
clc
fidivs
arpl
adc
dec
mov
out
aaa
fcompl
lock
cmc
mov
adc
mov
aad
mov
inc
mov
lcall
or
adc
test
bt
adc
test
jnp
or
jmp
cwtl
jnp
lods
and
mov
add
aaa
jmp
out
in
dec
arpl
out
mov
stc
mov
xchg
push
int
pop
or
sbb
mov
decl
inc
int
jecxz
dec
js
sub
jb
fwait
jno
sbb
test
sar
ljmp
mov
ret
sti
sub
cvtps2pd
insb
push
sub
and
imul
rcl
sti
repz
mov
mov
lcall
mov
mov
decl
and
cmpsb
je
std
mov
jno
lret
xorl
add
fidivs
ficompl
jle
inc
in
jg
ss
push
sbb
lock
inc
jno
jg
cmc
jns
mov
stos
xchg
push
repnz
in
incl
stc
leave
mov
push
pop
mov
ret
pop
mov
pop
mov
decl
and
jns
xor
dec
ficompl
push
leave
ret
xor
xor
loopne
push
jmp
push
sahf
rcrb
or
jno
xchg
pop
lock
push
jmp
xchg
test
sbb
jnp
xchg
mov
ljmp
pop
mov
insb
jo
mov
or
pop
xchg
xchg
add
inc
inc
mov
stc
jb
movsb
test
sub
pop
shr
ja
sbb
loope
pop
jecxz
scas
mov
mov
out
push
and
pop
std
dec
orl
push
pop
xor
cld
lahf
jbe
xchg
dec
lock
sbb
ljmp
andl
mov
push
cmp
mov
outsb
cmpsb
dec
test
cmpxchg
lret
leave
fldenv
incl
and
push
mov
clc
arpl
and
out
xorl
mov
dec
adc
hlt
dec
call
iret
mov
jg
mov
mov
inc
or
into
sbb
push
and
inc
pop
scas
jo
xchg
sbb
dec
enter
incl
adc
fnsave
scas
out
sub
pop
movsb
sub
push
fisttps
subl
sub
lds
cmpsb
dec
test
addl
and
cmp
cmpsl
jno
mov
test
ficomps
shlb
mov
push
cmp
test
ljmp
inc
pusha
push
cwtl
or
aam
xor
pop
negl
cmc
sahf
in
insb
mov
ficompl
inc
pop
scas
sbb
adc
rorb
call
ljmp
jmp
dec
call
hlt
add
xor
sbb
fwait
add
lods
mov
lcall
out
add
pushf
jle
adc
ds
gs
pop
push
outsb
sbb
xchg
pop
xor
xlat
call
dec
movsb
push
gs
std
aad
inc
xor
mov
adc
or
cmc
jg
sti
stos
add
or
aad
stos
fcmovnb
test
and
mov
xor
dec
divb
int
repz
scas
adc
pop
daa
pusha
fstps
push
aas
lret
dec
sbb
or
and
shl
cltd
cmp
push
sub
les
xchg
dec
shrl
jmp
std
shll
jecxz
mov
push
shlb
les
push
mov
int3
test
pushl
mov
dec
sbb
rcrl
cmp
filds
pushl
cmp
mov
pop
mov
lahf
cmp
in
push
mov
ret
inc
andl
cs
outsb
xor
call
xor
lahf
sub
fwait
jne
mov
inc
jp,pt
mov
cmp
out
cmp
out
es
in
mov
adc
and
aaa
mov
loope
lods
aas
and
push
add
aad
mov
ret
enter
fbstp
xor
cmp
dec
and
fdivr
fldt
mov
jl
cmp
mov
add
mulb
out
lea
in
xlat
adcb
gs
filds
pop
mov
xchg
mov
lahf
lcall
sahf
push
xchg
pop
shlb
fs
outsb
ss
scas
in
ljmp
rcl
jae
lcall
lods
int3
push
jb
rclb
cmp
jae
xor
pop
inc
rcr
les
out
scas
xor
pop
or
or
jno
or
addr16
loopne
or
jo
inc
add
inc
shll
mov
mov
xor
sbb
sub
std
pop
xlat
fbld
inc
fcomip
call
push
add
movsb
in
test
or
ljmp
ret
dec
mov
mov
stos
mov
mov
dec
pop
mov
and
pop
cmc
ljmp
add
call
jge
sub
mov
mov
cld
xchg
adc
add
pop
push
outsb
pop
xchg
cmp
lahf
mov
lret
pushl
stc
xchg
jmp
cmp
cmpsb
jns
sub
dec
inc
loopne
int
ljmp
lds
or
xor
mov
or
cli
fildl
sbb
dec
jbe
aaa
xor
and
lcall
sahf
mov
fadds
pop
dec
mov
inc
js
repz
sub
out
xor
adc
decl
aam
mov
pop
fyl2xp1
movsl
jle
popf
mov
mov
call
pop
js
xchg
je
je
mov
lock
mov
fisubrs
or
cmp
outsb
mov
push
mov
stos
cmpb
ja
repnz
test
push
jmp
cmpsb
aam
adcb
jl
jno
xor
inc
insb
es
cs
and
dec
inc
adc
jmp
mov
ja
js
dec
sub
divl
nop
dec
mov
pop
lock
incl
jmp
sub
mov
lock
js
cmpb
lcall
idivl
jbe
or
ljmp
les
sti
push
mov
repnz
mov
jle
aaa
pusha
push
add
add
sub
sub
adc
hlt
decl
cs
adc
daa
xorl
int3
xor
push
lcall
js
lods
mov
sar
adc
fsubrl
dec
cmpsb
adc
data16
scas
nop
pusha
fiadds
xchg
pop
aaa
arpl
pop
mov
inc
dec
or
outsb
fwait
popl
lods
xchg
incl
add
or
iret
push
adc
mov
icebp
xor
test
decl
jo
sub
popa
popa
in
cmpsl
orb
addl
mov
pushf
call
incl
test
inc
add
inc
movl
out
mov
inc
add
repnz
jg
ja
sub
int3
lcall
adc
xor
pop
sbb
pushl
cld
jmp
or
adc
cld
lea
test
adc
out
icebp
pop
dec
push
pop
fists
dec
jnp
add
fnsave
cmpsb
mov
insl
lret
rol
add
mov
sub
dec
popf
jnp
aam
stos
jo
pop
int3
adc
lcall
ret
xchg
xchg
aas
bound
jg
cmc
insl
popa
pop
mov
mov
jl
adc
negb
lcall
jb
sbb
xchg
outsl
inc
push
mov
push
xchg
cmp
sub
sub
fdivs
mov
call
cmp
pop
xchg
nop
shl
jnp
push
xchg
outsb
mov
lock
mov
je
sub
lcall
mov
jg
push
int
nop
cmpsl
mov
hlt
sbb
in
data16
push
xor
call
cmpsb
cmp
mov
movb
jb
mov
mov
dec
addr16
decl
add
es
ja
shrb
aad
jo
arpl
fcmovne
or
xchg
mov
dec
mov
es
jmp
fimuls
and
sar
sbbl
add
jmp
in
push
fisttps
aaa
jp
popf
movsb
mov
sarb
fcmovnu
push
jge
mov
mov
and
idivb
mov
fcoms
call
inc
test
fwait
mov
mov
mov
rorb
mov
insb
lret
ljmp
test
insb
dec
mov
data16
popa
fisubl
cmc
mov
cld
fcomip
sbb
pop
aas
leave
dec
in
into
fdivrs
push
or
jmp
xor
pop
jg
xchg
inc
pop
xchg
mov
mov
mov
mov
sub
dec
or
pushl
add
test
or
adc
adc
unpcklps
mov
xchg
pusha
or
cmpsl
dec
push
xor
lcall
lock
cmpsl
fistps
jmp
sahf
iret
mov
scas
aaa
stos
nop
push
sarb
sahf
mov
std
into
ficomps
ljmp
repnz
fldenv
push
pop
popa
scas
ljmp
adc
ljmp
adc
lret
add
call
pop
dec
cmp
leave
imul
lds
mov
jg
rcl
in
jmp
xchg
nop
mov
mov
punpcklbw
insl
sub
incl
xchg
cwtl
sahf
andl
out
stc
mov
mov
push
test
jmp
cmp
decl
pop
fcoms
mov
mov
lret
arpl
cld
jg
into
dec
into
jns
sub
cmp
mov
pop
pusha
add
pop
cld
jmp
cmp
outsl
mov
inc
stos
mov
add
cwtl
ret
xor
mov
mov
cmpsl
call
pop
sbb
in
data16
imul
cltd
xor
into
cli
inc
sub
out
arpl
call
ja
or
pop
iret
mov
mov
add
pop
sbb
stos
popa
or
repnz
fbstp
cwtl
test
aaa
std
lcall
sbb
hlt
mov
aad
cmp
push
push
and
ret
add
loop
pushl
cld
mov
into
cmc
in
sbb
cmp
cmpsb
rorl
push
lahf
jnp
pop
jg
movsb
outsb
jge
movhps
or
mov
xchg
popf
stos
push
pusha
adc
ljmp
imul
mov
lods
subl
push
loope
fdivr
pushl
arpl
pushf
and
shr
shrl
and
mov
or
lcall
fsts
aas
push
aam
les
mov
icebp
inc
sub
call
incl
inc
add
fsubr
inc
lock
mov
jl
subl
decl
lock
cs
xlat
dec
pusha
js
sub
shrl
seto
cli
cmp
scas
test
pop
sti
add
jecxz
xchg
push
icebp
movsb
pop
in
cmp
iret
jge
jmp
dec
test
sarl
in
out
repz
add
ret
lahf
arpl
lds
inc
adc
decl
inc
cli
inc
aam
inc
aas
cmpsb
pushf
int
add
sbb
jge
inc
inc
or
adc
pushl
movsb
imul
mov
and
std
fcomip
outsb
pop
pop
gs
pop
cmp
mov
pop
add
std
inc
aas
sub
add
jecxz
xchg
subl
aad
sbb
inc
sub
or
push
mov
jl
xor
test
and
std
mov
and
inc
cmp
out
data16
and
add
repz
test
pushl
int3
or
dec
hlt
lods
into
sub
mov
xor
and
inc
mov
add
cmpsb
movsb
or
pop
enter
mov
pop
sbb
push
mov
lcall
jo
lret
xchg
test
push
scas
sbbl
add
into
add
jnp
mov
test
pop
and
push
push
xchg
dec
cmpsb
fcomip
push
je
add
xor
or
push
inc
sbb
cmp
mov
cmp
testb
test
mov
inc
push
cmpsb
mov
cltd
je
fldl
cmp
sbb
dec
dec
cmp
jb
inc
cmpsl
inc
stos
lea
xchg
incl
das
push
add
xor
push
cld
out
cmp
cmp
movsl
xchg
mov
cld
mov
in
cmp
jmp
inc
stc
dec
idivl
dec
cmp
arpl
mov
loope
jnp
mov
cld
nop
outsb
xor
mov
aas
stos
testl
add
decl
sahf
imul
out
or
lea
cmp
rolb
jo
sub
xor
jg
sub
outsl
and
fstps
lret
pop
or
xchg
ljmp
jge
jmp
xchg
not
push
mov
inc
mov
cs
les
jge
inc
repz
ljmp
shrb
cwtl
cmp
xchg
jb
xchg
imul
loop
mov
hlt
int3
insb
sbb
decl
stos
and
dec
pop
jbe
push
loopne
enter
aaa
lds
sub
lcall
call
mov
ffree
mov
loop
test
sbb
jns
mov
mov
into
and
lea
sub
mov
push
add
ds
xor
hlt
mov
add
or
jne
jbe
dec
dec
pusha
sbbb
xchg
cmpsl
or
call
or
gs
jle
pop
subl
mov
xchg
jg
mov
push
add
pop
lcall
cli
je
fcoms
ss
mov
mov
cmpsl
push
mov
mov
push
sub
push
mov
jp
xorl
stos
cmp
adc
push
add
ljmp
lahf
imul
xchg
scas
jnp
sti
jae
repnz
lods
jo
jmp
mov
lods
xchg
int3
stc
shrl
pop
testl
cwtl
dec
out
push
mov
mov
decl
cltd
sbb
push
pusha
ret
shr
inc
push
add
fwait
or
ljmp
inc
mov
call
adc
dec
push
scas
mov
jo
add
cld
out
pop
das
push
lcall
xor
aas
jl
movsb
push
es
mov
sbb
ds
sub
nop
aaa
adcb
jmp
out
insl
enter
cli
fidivrs
lret
scas
xor
imul
jnp
add
push
jns
lcall
scas
cs
dec
jl
sub
add
mov
loop
ja
pop
imul
call
cld
inc
out
sub
gs
xchg
fisubs
mov
in
std
xchg
shlb
sbb
clc
decl
xor
add
in
mov
rcrl
sub
fdivrp
aaa
std
incl
rorb
or
xchg
adc
push
sbb
push
in
and
cmp
cld
ds
add
lret
xorl
arpl
pushl
jb
fstpt
jnp
xor
jecxz
sbb
test
mov
loop
mov
mov
hlt
inc
addr16
out
sub
out
gs
addb
adcb
imul
mov
or
sub
hlt
jl
int3
jp
test
int3
fsubrl
mov
scas
or
dec
cmpl
idiv
cltd
pop
gs
pop
into
imul
mov
pop
cmc
sbb
clc
add
mov
xor
sarl
js
pop
ret
mov
xchg
or
or
bound
lcall
test
jb
sbb
jp
mov
lock
sbb
std
inc
jbe
mov
xchg
or
out
movsb
or
clc
mov
push
call
mov
cmc
lret
mov
mov
inc
rcrl
ljmp
jnp
ljmp
add
test
mov
pop
inc
fmul
dec
pop
pop
es
adc
pushf
popf
xchg
pop
cs
jns
cmp
pop
fdiv
ss
imul
jp
arpl
out
nop
in
xor
mov
jno
aam
div
cmp
cmp
popf
loope
call
rcr
incl
movsl
or
rorb
enter
sbb
dec
and
lret
adc
out
clc
push
mov
xchg
testl
dec
sub
cld
icebp
xor
sbbb
pushl
cs
stos
frstor
je
inc
insb
or
sub
imul
aad
add
jmp
lods
decl
pop
sti
pop
sub
ja
jnp
unpcklps
fs
iret
mov
or
ljmp
pop
lea
dec
jae
add
xor
loopne
or
je
outsb
pop
inc
fs
scas
call
js
fstl
stc
xchg
pop
xor
add
test
flds
inc
dec
loope
loope
outsl
ret
inc
ljmp
xor
jge
js
mov
jb
repnz
call
addr16
dec
ljmp
faddl
cmp
aad
adc
mov
ret
adc
cmpsb
mov
frstor
ljmp
rorb
mov
fimull
sbb
fdivrs
clc
pop
push
int
call
and
movsl
or
and
or
push
leave
rcl
mov
or
sbb
mov
fdivs
jmp
xlat
les
dec
adc
fisttps
mov
insl
ret
push
push
jge
dec
mov
add
out
inc
cli
stc
pushf
push
dec
addb
mov
jg
sahf
dec
cmp
and
in
ds
cmp
stc
imul
or
decl
pop
in
bnd
xchg
loope
inc
xor
mov
nop
add
add
fstp
in
in
stos
or
lcall
in
adc
cmpb
mov
xchg
add
dec
arpl
stos
jae
and
inc
ljmp
adc
sti
sti
lock
mov
pop
push
cmpsl
mov
cmp
movb
adc
lcall
sti
repnz
in
and
cmp
movsb
cmp
movsl
lea
mov
lcall
add
cmp
inc
mov
adc
mov
jp
add
jns
ljmp
xor
leave
insl
lcall
mov
mov
adc
inc
push
sub
push
call
inc
sbb
stc
aam
cmp
aas
adc
scas
sub
jo
int3
shl
jl
decl
call
dec
cmp
in
and
mov
js
mov
cli
call
jp
aad
imul
pop
mov
out
jo
sbb
lret
ljmp
fcoms
xor
repnz
je
sbb
mov
sar
lcall
and
test
popa
push
rorl
or
fdivp
cmp
ds
lret
nop
jns
inc
mov
aam
jg
mov
cmpsl
jecxz
ljmp
mov
cs
or
and
and
out
inc
or
pop
lods
ss
leave
mov
mov
push
sbb
loopne
xor
sbb
out
mov
call
xchg
lret
scas
in
xchg
adc
mov
jb
outsb
push
jbe
pop
mov
pushf
mov
dec
mov
pushl
inc
imul
cmp
cli
adc
xchg
mov
xor
clc
pushl
mov
push
daa
jmp
mov
mov
pop
testl
push
cmpsl
sbb
clc
mov
leave
inc
lahf
xor
je
mov
repnz
negb
push
mov
jmp
lahf
jl
xchg
inc
and
inc
lret
jno
adc
test
adc
fcomip
pop
sub
push
inc
das
mov
add
cmp
mov
fwait
clc
adc
sbb
jo
push
cld
xchg
shlb
lret
fwait
push
mov
xor
ljmp
xchg
jl
jl
mov
ss
pusha
jl
sbb
pop
pop
scas
call
xchg
sbb
dec
lea
dec
loop
aaa
ja
notb
fnclex
xor
pop
ret
dec
loop
leave
lock
mov
xchg
inc
push
pushl
mov
dec
roll
mov
push
push
test
outsl
cld
in
out
and
cli
mov
adc
add
andl
mov
inc
rcrb
sti
jecxz
sub
loop
int3
jecxz
outsb
out
shll
mov
adc
lea
xchg
sub
shlb
adc
out
lcall
lcall
cld
mov
cmc
mov
inc
mov
jae
add
inc
cmp
movsl
inc
mov
mov
cli
pushl
cmp
ret
cmc
inc
cmp
jmp
xchg
imul
call
daa
loop
ret
andl
insb
xchg
adc
push
mov
push
fcomip
inc
addr16
and
push
rcrl
jle
insl
popa
mov
test
les
jmp
int
sbb
dec
in
test
divl
insl
jp
add
mov
jae
pushl
dec
mov
mov
lods
push
add
clc
addr16
icebp
int3
mov
jmp
testl
xlat
arpl
push
mov
pop
xchg
mov
jnp
pushf
neg
hlt
pushl
cmpsb
mov
imul
cli
mov
sub
scas
or
fs
js
stos
outsl
pushl
movsl
nop
mov
test
fidivrl
inc
movsb
fs
sub
aaa
add
ss
ljmp
rol
add
cmpsl
orl
mov
loope
jl
pushl
or
sub
cmp
mov
mov
es
xchg
push
xchg
sub
repnz
ja
mov
mov
jp
hlt
mov
stc
add
xor
push
jmp
add
sbb
movsb
nop
fdiv
dec
xchg
in
pushf
stos
xorb
xor
jle
into
adc
and
pop
cmpsl
xchg
rorx
call
push
jecxz
imulb
aam
jl
in
jbe
mov
ret
mov
xchg
and
jmp
arpl
stos
hlt
push
push
aam
inc
clc
loop
mov
cli
and
sub
mov
xor
add
dec
scas
sbb
notb
jae
aad
push
lret
or
mov
out
lock
inc
gs
sahf
adc
outsb
jge
push
jmp
push
outsb
mov
aam
mov
ljmp
jecxz
cli
pushl
aam
iret
aaa
sub
push
adc
dec
sahf
sbb
add
inc
cwtl
cmp
pop
loopne
jecxz
jbe
repnz
jns
mov
inc
mov
or
sub
or
xor
push
rcl
cmp
shrb
fisubrs
fcomip
ret
fnstenv
movsb
rcll
call
push
dec
iret
xor
insb
ficoms
xchg
lret
int
decl
rorb
xchg
lea
in
push
adc
adc
push
push
repnz
sub
insb
out
or
outsb
bound
mov
ja
push
mov
addr16
dec
clc
xchg
ret
call
pop
movsl
or
ficompl
outsb
jmp
mov
dec
aad
pop
test
leave
dec
ds
shlb
mov
and
xchg
push
movsb
imul
clc
mov
sub
sub
sbbb
lcall
sbb
mov
xchg
mov
push
cmp
cmp
pop
ljmp
push
xchg
decl
fmul
dec
or
push
lahf
out
mov
sti
xor
popa
adc
sbb
lahf
cmp
pop
cmc
pop
inc
out
and
mov
pop
in
add
jnp
mov
imul
sarl
cld
mov
xchg
pusha
sub
adc
ljmp
andb
repz
jecxz
je
jbe
mov
fnstcw
dec
aam
decb
aad
call
inc
xchg
sbb
jo
xor
and
mov
bound
shr
and
jg
sbb
adcl
add
or
cltd
xor
or
mov
sbb
lcall
ret
xor
adc
iret
mov
sbb
loope
or
sarb
add
mov
mov
or
test
das
inc
ljmp
clc
test
test
jae
lcall
lret
push
std
jmp
out
jae
mov
pop
testb
cmpsl
sub
repnz
mov
shlb
mov
ret
or
mov
je
xor
push
and
es
and
push
inc
push
sbb
push
sbb
cmpsb
mov
sbb
movb
sub
ljmp
clc
jecxz
cwtl
inc
pushl
adc
orb
cmp
loop
lds
mov
cltd
or
pop
push
cmpsb
pushl
xlat
outsb
cld
add
pop
sub
mov
dec
mov
lret
clc
lods
negl
pushl
in
cltd
dec
add
push
outsl
ret
push
lret
cmp
pop
shl
mov
add
stos
jbe
xlat
add
xlat
add
xchg
mov
inc
pop
nop
jmp
jg
adc
fildl
pop
sbb
negl
addr16
scas
call
jecxz
cwtl
fdivr
ret
imul
loope
out
mov
pop
push
adc
dec
lds
das
movsb
inc
cld
imul
cmc
jb
pusha
shll
jg
stos
movsb
xchg
cwtl
mov
mov
mov
jo
jmp
pop
cmp
xor
call
std
pushl
mov
jns
and
mov
ss
fsubr
leave
jle
std
push
in
lret
rcrl
mov
inc
cmpsb
add
mov
insl
cmp
mov
mov
nop
inc
into
imul
mov
push
jmp
xorb
aam
lods
ss
sbb
and
dec
or
test
call
cmpsb
repnz
adc
sbb
ds
imul
popf
into
aam
dec
or
mov
push
dec
pop
jns
add
inc
or
mov
mov
add
decl
ret
int
sbb
imul
and
and
loope
cmc
nop
adc
xchg
imul
pop
add
imul
adc
and
scas
lock
scas
jae
jmp
call
stos
jo
cmp
push
push
xor
sbbb
scas
into
xchg
out
cmpl
lcall
repnz
sub
cmp
stos
mov
jl
jg
xorb
jbe
addr16
bound
push
inc
dec
mov
das
bound
mov
mov
adc
enter
imul
add
incl
lret
push
jns
pop
add
sub
sarb
call
scas
lcall
mov
mov
mov
fsubrl
pop
push
jns
mov
int3
sub
pop
cmc
lock
icebp
lcall
mov
inc
xchg
push
inc
sub
js
mov
mov
lcall
ljmp
out
mov
cmp
add
jae
nop
xor
enter
call
les
push
test
push
cmp
aam
rcrl
dec
repnz
into
stc
inc
data16
pushl
mov
sbb
popf
jmp
sub
aam
jae
iret
mov
sub
inc
sbb
push
lds
push
adc
jae
inc
cmp
lcall
add
rcll
out
std
fadds
inc
je
mull
iret
sbb
inc
cld
cmp
movsb
inc
imul
mov
xor
lods
jge
sahf
jb
sbb
pushaw
cwtl
into
xchg
decl
addr16
mov
add
jecxz
inc
hlt
je
cltd
xlat
test
ljmp
or
iret
inc
or
out
call
divl
add
mov
test
jmp
das
jno
xlat
jb
aad
inc
or
outsb
insb
dec
sub
sub
push
mov
inc
insb
mov
arpl
lcall
stc
std
or
movsl
push
mov
sahf
inc
mov
rorl
pop
cmc
push
xchg
mov
jbe
jecxz
call
sub
xor
stc
inc
adc
mov
hlt
ss
cwtl
adc
or
aaa
jl
ret
sarb
out
cs
sub
mov
push
lcall
scas
movsl
es
ret
mov
dec
adc
mov
lea
fbld
xchg
adc
sti
out
outsl
imul
dec
push
adc
fwait
mov
jmp
pusha
sbb
arpl
mov
lret
push
sahf
imul
lahf
sbb
add
jmp
aas
pop
ja
rorb
pop
in
into
mov
dec
in
pop
icebp
call
sbb
cmpl
xor
xchg
lock
pushl
or
int
cmpsl
in
mov
pushf
lcall
test
xchg
adc
loope
add
add
sub
pop
add
test
jg
jmp
movsl
inc
repz
push
inc
nopl
std
and
or
incl
lock
stc
imul
pop
sub
sub
mov
pop
les
mov
cli
fisttpll
rol
aam
pop
cmp
mov
and
addr16
pop
pushf
out
aaa
inc
mov
test
int
rorb
lds
jmp
call
push
mov
addr16
cld
faddl
bound
adc
pop
clc
mov
filds
mov
les
jecxz
fisubs
ljmp
fwait
in
aam
cmpb
xchg
ret
ja
inc
jp
jp
xlat
push
add
and
mov
out
and
mov
pop
jp
add
xchg
dec
mov
pop
sbb
mov
jbe
jbe
enter
call
rorb
loop
dec
and
movsl
mov
out
int3
or
rcr
and
jmp
mov
insl
push
sub
imul
je
cmpsl
inc
fildl
incl
outsl
cs
bound
movsl
leave
pop
mov
or
imulb
dec
jge
lcall
dec
or
mov
sub
dec
pop
or
ds
and
loope
rcl
sbbl
addl
shlb
sub
jg
cmc
pop
loope
out
sbb
mov
add
into
push
xor
out
cvttps2pi
decl
sbb
add
lea
std
lock
lret
gs
andl
stc
int
daa
mov
dec
xor
fildl
xchg
inc
cmpl
loopne
sub
decl
negb
inc
and
imulb
out
mov
pminub
jle
xlat
mov
shlb
push
jb
jg
cs
stos
rcll
or
xchg
push
mov
pushl
mov
xchg
xchg
outsw
imul
stos
add
inc
push
data16
fisttpll
jnp
inc
push
call
or
into
cltd
mov
inc
cmp
fnsave
xor
mov
in
subb
orb
mov
jmp
lcall
mov
sub
hlt
jne
clc
and
xchg
jmp
lock
out
insl
fmuls
lcall
xor
dec
ret
or
and
sbb
xchg
mov
jae
pop
repnz
jg
or
mov
push
mov
and
adc
lea
jmp
aam
jno
lretw
mov
fucomip
pop
je
push
out
dec
jb
jae
mov
out
out
ljmp
movl
test
mov
xchg
mov
and
adcb
jl
xchg
pop
dec
sbb
in
scas
and
mov
shlb
fnstsw
push
clc
mov
or
stc
js
imul
shlb
fst
jecxz
cmp
pushl
subb
xchg
push
into
daa
jg
cmc
dec
push
sub
cmp
cs
add
out
fsubs
lahf
iret
pop
adc
push
xchg
inc
or
xchg
test
out
mov
decl
or
xchg
das
cld
adc
ret
aas
jns
popl
add
cmpsb
call
push
int3
sti
pop
ja
stos
shl
ss
jno
push
cmp
in
lods
pop
mov
adc
mov
aas
nop
sbb
ja
jns
jae
xor
pop
jno
leave
pop
jo
xchg
adc
push
jl
aaa
adc
in
add
push
pushf
add
stos
std
mov
out
bound
add
adc
lcall
das
ret
inc
fwait
loopne
andl
mov
xor
cmpsb
pop
fadds
mov
inc
sbb
insl
mov
dec
inc
xorb
sbbb
popa
xchg
es
inc
inc
lods
int3
or
cltd
dec
xchg
and
mov
xor
dec
stos
faddl
iret
fistps
int3
daa
dec
fisubs
inc
pop
pop
inc
inc
testb
imul
incl
fnstenv
sbb
call
fcoms
data16
pop
mov
or
jl
ljmp
push
and
add
lret
push
mov
in
in
jmp
repz
loopne
in
aaa
jl
call
repz
pop
loop
jo
sahf
and
xor
jne
jno
pop
push
mov
test
lock
cs
insb
dec
xchg
je
xor
aas
sbb
les
add
xchg
xor
dec
sub
cmc
inc
outsl
rorl
pop
cmp
outsl
je
sub
scas
push
repz
shrl
mov
rorb
push
incl
test
cmpsl
lret
iret
repnz
sarb
add
sar
xchg
mov
cmp
sub
mov
or
outsb
lahf
pop
sbb
ljmp
sahf
enter
jl
pop
notb
les
sbb
and
jge
iret
cmpsl
add
mov
mov
and
mov
mov
or
xchg
aaa
push
adc
decl
adc
imul
add
outsl
js
push
pushl
rol
rol
test
add
aam
clc
jmp
pushf
inc
inc
pop
add
incl
mov
movsl
popf
imul
mov
xchg
add
inc
cmpsb
lret
ja
lcall
test
out
sti
jno
shrl
ss
mov
sub
push
mov
cmp
cmp
mov
and
mov
xor
icebp
cmp
call
or
sub
and
pop
jp
outsb
push
ficomps
xchg
dec
adc
ds
mov
pop
mov
sar
lcall
pop
xchg
insb
scas
dec
mov
jns
or
push
shrb
call
mov
test
mov
neg
icebp
jecxz
pusha
jne
and
call
out
dec
jge
mov
test
hlt
fldenv
sahf
outsb
insb
and
incl
shr
cmp
sbb
popa
pop
jnp
negl
lods
divb
cli
call
cld
movsb
mov
jb
pop
popf
lcall
loope
push
mov
ljmp
fisttpl
push
pop
mov
cmp
push
test
pushl
cltd
cmp
hlt
sub
inc
sarl
dec
inc
adc
pop
cmp
inc
xchg
xor
inc
jl
stos
pop
xchg
xchg
mov
mov
mov
and
jo
pop
dec
xor
cld
jmp
mov
cmc
shlb
jmp
cmp
add
jl
shr
ljmp
ss
fisubrl
sarb
pop
xor
sbb
adc
and
call
adc
outsl
adc
daa
mov
movsb
rcl
fisttpll
xchg
adc
push
push
push
sub
into
pop
rcrl
fstps
cs
xchg
data16
pop
int3
xor
dec
into
into
fidivs
call
test
clc
ds
push
dec
mov
int3
nop
sarb
dec
ret
jno
out
das
jg
fcomip
pop
dec
jle
jb
out
pop
push
or
rorb
xor
mov
ljmp
and
test
push
xchg
in
lods
push
scas
pop
pop
or
sbb
lcall
cmp
lret
dec
out
pop
inc
aad
in
mov
xchg
mov
popa
mov
insb
sti
cmpsb
aad
in
adc
pop
sbb
flds
jg
adc
mov
pushl
and
jnp
sub
lret
xchg
out
cmpsl
out
fdivrp
shll
mov
sbb
push
xchg
inc
mov
push
add
adc
or
dec
lock
insl
sub
fisubrs
or
cmc
fcomip
js
in
dec
adcb
cwtl
add
ja
mov
fistpll
insl
fldt
sub
mov
jnp
pop
ja
cmc
cmp
and
xchg
ja
out
cli
jmp
std
and
sahf
pop
jge
xchg
cli
inc
add
dec
mov
pop
xor
fucomi
call
dec
popl
mov
ds
add
jmp
mov
or
das
cli
call
loop
add
fxam
pop
cmc
dec
dec
push
mov
dec
adc
call
imul
sub
sub
popa
cmp
gs
stc
notb
rorl
inc
mov
jns
frstor
hlt
dec
outsl
add
dec
inc
cli
pushl
fcmovne
rcl
jne
jo
lcall
popa
or
pop
jbe
loopne
jecxz
xor
lods
inc
cmpsl
push
lock
cli
pop
test
lret
les
jbe
add
mov
pusha
loop
daa
lods
mov
fnstcw
pop
jge
mov
enter
leave
sub
mov
bound
ljmp
aas
dec
xchg
insb
jae
sti
std
mov
jp
xor
cmp
fcos
mov
cmpsb
fstpl
mov
test
adc
pop
and
push
verw
and
dec
mov
incl
xchg
call
adc
pop
mull
jg
fimuls
mov
jmp
test
inc
outsb
cmp
cmpl
sahf
inc
xor
or
shr
dec
insb
in
insb
mov
iret
add
cmc
push
sbb
pop
sbb
mov
pop
inc
es
sbb
push
inc
lods
add
pop
das
mov
xorb
or
loope
mov
xchg
xchg
idiv
incl
fistl
dec
pop
adc
push
cmpsb
sahf
lret
push
push
ret
add
insb
mov
push
or
xor
cld
and
push
or
sub
in
mov
mov
jg
pop
enter
das
mov
aad
ret
xor
test
fistpl
movsl
mov
ja
clc
call
sbb
das
call
jle
aad
call
mov
pushf
mov
orb
jle
inc
hlt
cmp
xchg
push
mov
fadd
outsl
cli
incl
add
sbb
xchg
scas
scas
ljmp
dec
cmp
pushf
data16
out
clc
cmp
imul
lret
push
xchg
cltd
inc
in
adc
stos
aad
add
cld
adc
sbb
jge
jg
xchg
fs
or
push
out
test
out
dec
les
mov
into
adcl
cli
js
stos
je
or
mov
mov
ljmp
mov
insl
or
std
xchg
sub
ljmp
sub
decl
sub
add
add
add
mov
loopne
jg
jbe
pop
xchg
ljmp
sbb
dec
or
call
fidivrs
cmpsl
popf
jge
xor
inc
gs
out
js
shrl
sub
sbb
aas
mov
pushf
je
bound
out
or
stos
jl
jmp
add
cli
xchg
xor
sbb
mov
fs
andl
call
jnp
mov
or
cltd
das
mov
push
add
std
lcall
xchg
xchg
pop
mov
loope
pop
inc
gs
mov
call
and
xchg
sarl
add
jg
sbb
dec
pushf
bound
mov
test
daa
mov
jb
jp
filds
push
fistpl
pusha
xchg
insb
fdivr
cld
push
fmuls
dec
aas
int
sub
mov
jge
scas
aad
and
sbb
mov
hlt
jns
mov
xchg
arpl
jp
xchg
jg
push
sahf
int
xor
ljmp
push
and
test
jbe
or
fs
int3
outsl
add
mov
inc
sbb
jmp
or
data16
jle
pop
xchg
add
cltd
xchg
xor
mov
add
das
std
xor
fnstenv
cmp
outsl
sbb
scas
jns
jmp
add
mov
push
pop
or
jmp
insl
dec
xor
sti
xor
jg
psubb
negl
xchg
jmp
movsb
rol
les
or
push
push
out
scas
nop
inc
pop
dec
inc
lea
xor
sbb
decl
rorl
inc
aaa
mov
pop
mov
mov
jp
pop
hlt
sbb
loope
and
dec
mov
jbe
sub
adc
cmp
jbe
sub
and
lea
xor
add
mov
loop
nop
push
push
cs
pop
inc
ret
cmp
sub
cmp
adc
loope
call
out
sub
dec
sub
out
mov
dec
cmc
js
mov
inc
jl
cmp
ljmp
or
cmpsb
jg
lock
and
fidivl
push
in
inc
mov
adc
sahf
ljmp
cmpb
inc
dec
mov
add
jae
jnp
test
ljmp
mov
cmp
dec
mov
xchg
enter
into
repz
lcall
jmp
fisubrs
inc
cmp
lahf
jg
in
jp
rolb
in
mov
xor
jge
pushl
ss
pop
popf
mov
pop
mov
lock
shll
std
jbe
jle
push
xor
push
jl
mov
mov
hlt
scas
mov
fsubrs
movl
inc
pop
cs
js
lcall
adc
mov
pop
ss
mov
adc
push
adc
ds
xor
dec
dec
test
sub
jnp
test
xlat
test
shrl
jl
lcall
in
sbb
jae
scas
std
leave
divb
test
dec
lea
push
flds
pop
outsl
jae
jae
scas
push
cld
je
pop
cmp
in
gs
mov
int3
add
jl
push
lcall
dec
lahf
push
sub
jl
filds
jmp
lcall
loope
push
insw
cmpsb
and
push
in
movsb
ds
cmp
adc
sbb
les
dec
js
mov
adc
mov
notb
jb
dec
push
jbe
mov
lcall
test
sbb
pop
lcall
sbb
call
mov
mul
xchg
test
xchg
cli
dec
adc
add
rol
in
dec
sbb
jnp
mov
and
sbb
and
stc
lcall
push
stos
jmp
mov
fisttpll
xor
pop
xorb
and
fidivs
cmp
sbb
fisttpl
jmp
xlat
mov
or
in
xor
cmp
cmp
out
and
call
xor
xor
popa
pop
fbstp
andl
jg
pop
push
insb
rcrb
mov
into
out
jle
or
jmp
les
js
mov
lret
inc
mov
mov
decl
lods
daa
mov
flds
dec
sbb
movsl
or
sub
shlb
aaa
cld
call
push
sahf
xchg
xchg
ljmp
mov
mov
jp
data16
cmp
jmp
inc
jl
sub
test
jnp
arpl
push
inc
xorl
jmp
insl
lret
jb
mov
add
or
pop
push
xchg
xlat
add
adc
incl
imul
jle
faddp
enter
xor
jp
stos
test
jg
aad
incl
inc
sub
pop
sti
mov
scas
sbb
and
orb
dec
xchg
jg
hlt
sarb
xchg
aad
pop
mov
sbb
lcall
jns
movsb
in
out
adc
subb
insb
ljmp
jno
outsl
sub
jns
aad
mov
je
mov
cmp
cmp
cmp
sub
and
pop
ud2
loope
cmp
lcall
mov
jg
push
mov
sbb
mov
in
pop
pop
jo
jmp
scas
jno
lods
iret
jnp
mov
in
scas
fistl
rcll
in
adc
mov
dec
inc
or
aaa
fimull
xchg
adc
xlat
adc
dec
sbb
mov
gs
decl
mov
idivl
outsb
cli
ss
add
xchg
pop
lahf
cmpsb
mov
cmp
or
pushl
fidivrs
lea
ss
inc
ja
dec
ljmp
xor
insl
xchg
cmp
movsb
out
add
cmp
popf
xor
aaa
xchg
jecxz
pop
jbe
pop
mov
cmp
in
insb
cmpb
ret
call
jnp
mov
mov
mov
add
jge
add
ret
xor
cmp
mov
lock
jmp
outsb
mov
xchg
mov
cmp
add
rorl
sbb
ficompl
data16
jg
inc
sbb
xor
test
rorb
pop
ss
mov
mov
call
fwait
outsl
ja
cli
fadds
fadds
xchg
xchg
mov
incl
inc
test
into
push
dec
sarb
aad
and
es
inc
lcall
std
inc
loope
pop
pop
pusha
mov
mov
mov
cmpb
movsb
and
or
jmp
frstor
out
cmp
xchg
daa
mov
inc
xor
jmp
jae
xchg
and
jg
mov
mov
nop
cmc
pop
ljmp
cli
call
std
xor
aaa
xor
xchg
fwait
push
sub
fcoms
mov
pushl
mov
out
movsb
fs
lcall
add
sub
cltd
inc
mov
jnp
pusha
sub
sbb
xrelease
and
daa
add
stos
jecxz
jmp
icebp
cmp
out
fwait
mov
jne
xchg
and
testl
add
fstpl
outsb
sahf
ret
stos
mov
stc
and
jg
sub
mov
ljmp
sbb
cld
fdivl
mov
jno
fwait
scas
mov
lcall
fwait
pushw
pop
sub
inc
mov
jg
lret
sbb
xchg
adc
mov
dec
pop
ljmp
es
ret
dec
ds
mov
and
stc
xchg
jno
pop
imul
cmpsl
mov
sub
or
cmp
mov
and
jb
mov
out
push
adc
scas
pop
push
jp
loope
aas
out
bound
pxor
dec
mov
popa
push
je
negb
and
movsb
xchg
sub
mov
into
jo
ret
cmp
adc
pop
xchg
sahf
subl
cmp
lcall
repz
loopne
mov
jo
imul
adc
clc
xchg
adc
stc
clc
or
call
xchg
rolb
jge
cmpsl
add
ljmp
stos
dec
mov
mov
push
xor
cwtl
dec
push
outsb
adc
xchg
jl,pt
pushl
mov
insl
mov
jne
xor
int
sbb
ds
lcall
pop
add
mov
add
xor
or
adc
scas
fsubrl
sbb
enter
decl
sahf
movsl
sbb
sbb
out
adc
pop
outsl
cmp
push
mov
xchg
in
jno
sbb
push
sub
xchg
jmp
outsl
sub
hlt
imul
push
inc
pop
mov
or
xor
fwait
ret
and
pop
pop
lock
dec
jmp
shlb
sbb
sub
rcrb
and
fwait
sahf
das
ret
dec
out
clc
js
stc
gs
mov
jbe
hlt
sbb
cmpsb
push
xor
or
sbb
inc
xchg
out
mov
in
pushf
mov
test
pop
loop
mov
pop
xchg
test
push
sub
js
decl
xor
push
gs
push
cmp
dec
cld
pop
lret
scas
fmuls
sbb
inc
dec
push
jl
mov
mov
and
sbbl
pop
xchg
sub
std
dec
shll
xor
pop
mov
pop
movsb
inc
xchg
inc
xchg
sub
sub
mov
jle
decl
jp
adc
pop
aad
and
inc
outsl
push
das
add
aad
iret
jg
incl
xchg
pushf
icebp
dec
jne
out
mov
sub
mov
incl
lea
lods
push
pop
incl
add
outsb
push
mov
test
insl
mov
adc
and
pop
test
inc
in
and
mov
ret
pop
icebp
inc
stc
cmc
sub
fld
ss
xor
push
imul
mov
adc
dec
adc
in
dec
mov
aad
fwait
dec
inc
push
lds
push
xchg
mov
imul
jmp
int
and
jae
mov
jne
movsl
sbb
fdivr
js
test
dec
or
mov
outsb
fiadds
add
sbb
mov
add
add
ror
inc
in
pop
mov
les
push
jp
cmpsb
inc
jno
popf
adc
cmp
lea
pop
shlb
adc
lock
inc
rorb
jg
lods
decl
fisttpl
cs
jecxz
sbb
jecxz
js
push
cs
dec
adc
xchg
mov
inc
subl
adc
mov
ret
dec
jl
and
mov
pushl
loop
loope
fwait
adc
pop
imul
xor
pop
and
ljmp
or
push
cwtl
and
pop
jp
repnz
sbb
pop
mov
inc
scas
fldt
cld
rorb
push
test
adc
call
in
loopne
je
js
das
xor
mov
cmp
mov
mov
jmp
xlat
pushf
call
or
xor
mov
stos
xchg
mov
xchg
in
cmp
lcall
fiadds
push
sub
mov
test
push
loop
pusha
mov
in
cmp
cltd
repnz
pop
jne
xabort
decl
rcl
mov
xlat
mov
aaa
sbb
inc
je
gs
ljmp
addr16
ret
dec
cmpsb
mov
sub
add
repz
lea
imull
lcall
mov
sub
loopne
xor
shl
push
mov
notb
hlt
imul
dec
or
xchg
cs
scas
cmpsl
xor
push
jo
jns
loopne
leave
push
mov
lcall
lods
lcall
scas
test
push
jb
pop
insl
decb
add
lcall
jno
fldt
es
aam
cli
lret
inc
push
and
arpl
jne
jmp
jns
rorb
int
call
subb
mov
and
cmp
pop
cmc
jecxz
daa
pop
cmp
movsl
pop
jl
das
cmp
fwait
push
jo
pushf
inc
mov
call
sbb
cmp
dec
jnp
add
dec
test
in
mov
insb
sub
xchg
mov
push
jae
lea
pop
xchg
cltd
pop
fmull
outsl
jg
mov
inc
fldl
inc
pop
mov
call
addr16
fdivl
jb
xor
push
into
push
js,pt
push
mov
fimuls
sbb
addr16
mov
inc
cli
arpl
lds
ficomps
jg
mov
ret
sbb
pushf
std
dec
xchg
dec
mov
lods
stos
cmp
pop
lcall
call
in
popf
and
ror
xchg
in
mov
pusha
and
in
aam
incl
incl
call
shll
xor
in
jp
stos
dec
push
lcall
out
adcl
jmp
mov
dec
addb
inc
inc
aam
or
incl
mov
mov
dec
jecxz
jne
cltd
test
pushf
push
dec
mov
push
sbb
lcall
pop
popf
inc
daa
inc
jo
adc
cmpsb
pushf
ja
jae
jle
mov
scas
ss
ljmp
sar
xor
fs
dec
push
jge
test
inc
mov
lods
xchg
das
sbb
mov
lcall
lods
add
adc
lock
insl
mov
jge
pop
mov
cmp
pushl
loope
call
mov
push
fwait
push
fbld
pop
xchg
pushf
cmp
arpl
push
pop
andb
nop
push
int
dec
jo
ret
push
ret
arpl
lcall
test
test
ret
dec
outsb
scas
xor
je
gs
jecxz
data16
dec
in
mov
ljmp
jae
iret
push
and
inc
add
cwtl
fwait
iret
shl
mov
dec
and
ljmp
lock
hlt
dec
mov
movb
sub
out
and
incb
xor
sti
mov
decl
pop
lods
shll
push
in
mull
ljmp
aaa
and
jmp
pushl
inc
test
cmpsb
xor
or
repz
jbe
jle
call
adc
leave
daa
insb
mov
stc
dec
mov
adc
clc
movsl
adc
aam
push
loope
add
xchg
loope
stos
jns
mov
xor
lds
cmp
pop
mov
dec
dec
pop
popl
ja
in
xor
mov
push
mov
enter
jmp
pushf
out
push
adc
pop
jecxz
int3
pop
jb
xchg
xchg
or
call
mov
mul
bound
dec
aaa
addr16
lret
sti
add
cmp
repnz
rcl
test
dec
dec
cmp
mov
nop
sarl
pop
pop
cmp
stc
shl
xor
call
sar
jb
fs
cmc
mov
pop
xchg
std
aam
xor
cli
add
and
jns
stos
insl
jmp
cvtpi2ps
mov
aas
loopne
mov
jnp
aam
jmp
outsl
pop
sbb
es
cmpsb
adc
push
outsb
in
es
xor
and
ds
lcall
das
outsl
mov
sub
jecxz
mov
mov
pop
sbb
xor
jmp
incl
or
adc
cld
lea
stc
outsb
sub
sub
mov
lods
mov
out
pop
hlt
lcall
inc
dec
cltd
dec
cmpsl
adc
xchg
lock
mov
inc
std
stos
pusha
pop
lahf
cltd
xchg
jnp
mov
inc
dec
pop
insl
dec
test
stos
lahf
mov
push
jmp
decl
rcrb
push
add
cmp
adc
push
xchg
or
mov
es
mov
movsb
icebp
mov
pusha
and
ret
ss
sbb
call
inc
mov
mov
mov
nop
jns
imul
ficomps
aam
lcall
hlt
add
cld
xlat
fdivr
dec
push
xor
add
push
pop
mov
fimuls
sub
dec
jbe
inc
mull
push
out
test
mov
lret
nop
insb
lds
jnp
fsubl
iret
clc
adc
and
mov
aaa
repz
inc
sub
test
stos
out
mov
or
xor
mov
int
sub
dec
aas
adcb
fldt
out
add
imul
std
mov
mov
mov
jge
push
jge
xchg
jmp
jae
cwtl
imul
or
sub
out
adc
pop
jge
xchg
leave
pop
push
out
out
clc
jno
hlt
fucomi
mov
jno
mov
jge
inc
add
jge
mov
in
sub
stos
fidivl
dec
and
popa
or
mov
or
out
fs
or
mov
sbb
aas
jge
and
add
fcmovnbe
pop
jbe
stc
bound
adc
push
outsb
inc
push
arpl
loop
enter
mov
jmp
mov
sbb
fistps
adc
fdiv
and
add
push
out
sti
mov
pushl
dec
sbb
cli
sbb
int
fsubs
test
mov
xchg
out
iret
cmp
imul
sub
jmp
jl
sbb
in
gs
hlt
cmp
sti
sbbb
xchg
pusha
ds
ficoms
pushl
cmc
dec
mov
insb
lret
cmp
mov
mov
and
inc
xorb
lcall
sub
out
push
das
sub
mov
sbb
mov
sub
mov
out
cmp
icebp
jmp
outsb
paddw
fbstp
adc
sub
dec
call
or
loope
outsb
adc
jnp
mov
rcr
jnp
out
mov
push
xchg
inc
dec
cmpsl
sub
jmp
inc
cli
cld
or
int
loope
cmp
fidivrs
repz
fdivr
pushl
aad
jmp
jno
leave
or
insl
inc
add
stc
adc
movl
lahf
mov
incl
daa
dec
fsubl
test
adc
jecxz
add
daa
mov
jg
in
dec
cmpb
in
lods
push
or
pusha
fisubrl
mov
cmp
xchg
ud0
pop
cmc
fnstenv
into
mov
mov
cmc
jmp
sub
incl
lods
popf
push
and
push
pop
pop
mov
bound
in
sub
loop
xchg
fcomip
orl
add
cmp
xchg
leave
out
mov
push
xchg
pop
fisttps
fwait
daa
inc
sbb
sbb
in
pop
stos
mov
cmp
or
mov
xchg
sar
jmp
out
sub
in
pop
sub
adc
out
scas
lahf
mov
lods
pusha
jbe
test
decl
fldenv
pop
ficomps
jno
iret
sbb
sub
and
lcall
mov
pop
inc
adc
cwtl
push
jb
mov
mov
push
dec
imul
mov
pop
dec
mov
daa
mov
sbb
push
js
xchg
adc
dec
mov
xor
and
sub
mov
ja
mov
mov
push
mov
fildl
push
movb
ret
stos
in
scas
cmp
fwait
inc
nop
add
leave
call
cmc
sub
cmp
push
call
scas
jne
inc
mov
enter
andb
addr16
jmp
sub
test
adc
fstl
inc
testl
aaa
cmp
pop
lock
lock
sub
pop
clc
sar
rolb
and
data16
nop
pop
mov
lcall
icebp
sahf
hlt
test
inc
mov
into
incl
into
sbb
test
dec
pop
mov
add
push
inc
push
cld
jmp
push
xor
adc
push
out
pop
stos
fldcw
cwtl
cli
adc
adc
loop
std
xchg
sbb
dec
mov
cmp
shrl
je
jg
xor
mov
and
and
inc
and
and
mov
push
mov
pop
mov
add
inc
mov
je
test
data16
ficoms
mov
xlat
and
xor
add
decl
push
and
int
jno
enter
cwtl
ret
daa
push
and
decl
jnp
clc
and
addr16
lods
aam
push
adc
dec
or
lahf
mov
es
ss
jg
outsl
push
pop
push
push
xor
push
mov
jno
ja
ficompl
inc
mov
xchg
aas
mov
dec
test
out
push
out
cwtl
xor
cltd
and
sub
xchg
sbb
lcall
adc
pop
push
js
cmpsl
pop
sbb
pop
lret
nop
clc
cwtl
xchg
cltd
je
jge
ljmp
stc
loop
dec
pushf
or
cmp
mov
out
sbbb
pusha
jge
ljmp
sbb
popl
pop
xchg
outsb
dec
cmp
lret
pop
loopne
xchg
into
faddl
decl
lret
cmpsb
lods
xchg
jno
pop
imul
in
add
adc
aaa
test
ljmp
popa
sbb
push
imul
or
cmp
adcl
aam
add
das
cli
lcall
and
cmp
adc
push
sbb
cld
xchg
jmp
mov
lcall
gs
inc
mov
sbb
shl
mov
mov
outsl
xor
mov
push
clc
pop
mov
vcvtsd2si
std
pop
inc
push
mov
insb
mov
pop
jmp
daa
jmp
pop
mov
mov
mov
popa
sub
jg
sbb
insl
or
and
add
jg
outsl
outsl
nop
xchg
out
mov
lret
aas
pop
pop
pop
cmpsb
cmp
jl
push
xchg
shrl
dec
incl
mov
rolw
xchg
inc
mov
test
mov
jns
sub
and
sti
stos
sbb
jmp
sbb
bound
nop
test
cli
cli
add
gs
sbb
bound
sub
xor
out
stos
xor
jns
lcall
es
int3
movsw
sbb
xchg
shlb
and
mov
add
movsb
incl
cmpsb
js
inc
sar
sub
fnstsw
xor
push
int3
xchg
pop
mov
imulb
mov
cmp
jmp
fmull
ja
aad
xlat
add
push
xor
jo
pop
cmp
and
jnp
push
sub
push
xchg
inc
xchg
jge
enter
mov
loopne
ss
cwtl
adc
cmpl
xlat
mov
lcall
add
push
add
and
sub
mov
in
mov
popa
test
das
clc
decl
test
xor
scas
mov
xchg
or
sub
sbb
push
mov
ljmp
mov
mov
lret
xor
outsl
mov
or
pushl
mov
dec
xorl
ror
mov
pop
pop
int
sub
cmpsb
dec
inc
add
mov
mov
mov
mov
mov
icebp
jmp
jmp
cmp
into
neg
call
push
aad
dec
mov
add
ret
filds
mov
sub
repz
cmp
decl
jmp
insb
mov
jg
fists
aad
pop
jl
push
sbb
xor
adc
jo
push
stc
decl
mov
mov
stos
call
xchg
xchg
add
xchg
add
mov
sbb
jmp
jmp
pop
xor
cwtl
leave
outsb
mov
imul
loopne
cmp
call
sti
cwtl
fldenv
sti
popf
adc
sub
xchg
mov
shrb
xor
push
sub
or
jo
adc
mov
outsb
cwtl
xchg
adc
rorl
fsts
repz
call
mov
sahf
mov
fidivs
notl
scas
in
lcall
aam
or
js
adc
hlt
jmp
mov
push
or
jle
add
into
dec
test
jmp
sub
cmp
sarb
dec
adc
fs
mov
cmpsl
fcomi
push
jg
ljmp
lcall
push
cmpsl
les
push
in
pop
popf
push
pop
hlt
push
xchg
cs
adc
dec
xlat
les
nop
dec
jge
xor
jne
lcall
incl
adc
jp
add
xchg
cmp
movsl
sar
pushl
arpl
int
dec
jbe
sub
lock
stos
dec
jecxz
out
fwait
leave
mov
fists
sub
push
lret
mov
lret
pop
sub
fdivr
jb
jb
mov
mul
pop
push
xchg
xchg
xor
cmp
push
sbb
and
dec
jns
mov
adc
pop
ljmp
cmc
pushf
xor
dec
aas
orb
jmp
insb
pop
in
aad
lock
mov
loope
dec
jno
xor
icebp
dec
jnp
aad
jno
aas
bound
inc
andl
ljmp
clc
pop
sbb
scas
faddl
sbb
pusha
jno
ss
decl
pop
and
ret
leave
sbbb
mov
push
push
inc
addr16
xor
jmp
jp
insb
in
enter
pop
nop
jb
imul
in
lcall
push
sub
test
mov
pop
imul
shl
outsl
pop
push
daa
dec
lret
imul
stos
and
jb
ljmp
arpl
mov
dec
enter
pusha
add
add
lock
fwait
xorb
dec
in
push
std
pushl
cld
rcl
cmc
cld
addr16
hlt
das
inc
fmuls
sbb
mov
negl
pop
inc
or
inc
scas
xchg
sub
fwait
mov
in
pop
pushf
pop
and
cltd
add
ud0
jmp
xor
mov
cmp
icebp
sbb
fcmovb
test
fdivs
out
sbb
incl
dec
cmp
or
jbe
in
insb
pop
fbstp
je
cmp
push
daa
repz
mov
mov
pop
dec
ret
icebp
sub
mov
xchg
jmp
lcall
jge
mov
pop
ja
pop
fldenv
or
hlt
insb
jmp
push
cmpsl
mov
incl
test
shrl
mov
sub
xor
jl
or
ljmp
and
cmp
out
scas
xchg
fcmovb
pop
or
mov
mov
out
mov
and
xchg
push
cmp
divb
dec
jae
push
cmp
ljmp
inc
or
test
out
inc
or
sbbb
scas
push
jl
pop
mov
pushl
outsl
cmpsb
or
add
ja
addr16
jae
movq
push
mov
mov
call
xchg
lret
jns
mov
jne
outsl
add
and
test
mov
mov
fimull
ret
xchg
mov
mov
test
dec
cmp
and
fcmovne
jo
pop
push
pop
lcall
int3
out
sub
lock
dec
push
jl
lahf
inc
roll
lods
jp
idiv
lcall
es
sub
ljmp
jns
sub
out
fldt
in
pop
and
fcomip
incl
iret
lcall
arpl
testl
leave
leave
dec
incl
xchg
addr16
fmuls
mov
imul
fimull
ja
jp
or
jmp
arpl
mov
cmp
mov
jmp
mov
lcall
sbb
imul
movsb
mov
rorl
decl
push
js
or
inc
cmp
mov
sahf
fldl
les
daa
pusha
lods
loope
loop
add
xchg
shll
into
pop
push
mov
mov
mov
jg
inc
test
lea
scas
movsb
cs
mov
sub
jmp
jb
insb
xchg
xor
pop
cld
or
pop
sub
mov
repnz
loopne
enter
ljmp
push
insb
inc
mov
clc
mov
xchg
adc
clc
push
shrb
rorb
dec
jns
and
cmp
jmp
mov
jbe
or
add
out
push
or
ds
jbe
imul
sarb
insb
xchg
mov
ret
lret
fimuls
addb
mov
call
std
in
pop
xchg
cli
insb
loop
adc
mov
adc
adc
pushf
incl
shll
sahf
daa
and
ss
andl
jmp
and
test
cmp
test
jmp
mov
mov
fldl
cli
cmpsb
repnz
xchg
mov
ret
jo
adc
rorl
out
xor
scas
sub
dec
sbb
ljmp
jne
scas
leave
loop
mov
es
outsl
call
mov
add
cld
mov
add
scas
xor
push
les
mov
inc
and
call
mov
mov
or
cmp
add
in
mov
out
jl
aad
cs
push
inc
mov
mov
sub
lcall
decl
cmp
xor
mov
hlt
xchg
add
popfw
mov
xchg
decl
mov
jae
pop
inc
adc
mov
into
and
aam
inc
outsl
mov
je
jle
jmp
sbb
ljmp
inc
mov
push
xchg
ret
inc
sbb
and
lcall
jb
adc
ss
push
sbb
adc
mov
cltd
jno
push
xlat
jmp
sbb
lods
lahf
mov
cli
inc
add
out
mov
daa
out
xor
stc
dec
ja
and
mov
jp
and
pop
mov
clc
jp
adc
cltd
xchg
pop
add
jb
mov
pop
ljmp
mov
out
aam
pop
enter
ja
pop
sarb
push
pop
popf
cltd
adc
cmp
push
or
push
jmp
push
xchg
mov
cld
and
outsl
aaa
in
lcall
dec
shlb
jmp
pop
dec
xchg
lahf
leave
ret
mov
inc
or
push
mov
add
incl
dec
adc
test
cwtl
lret
into
add
arpl
push
rcll
inc
decl
pop
test
mov
addb
inc
jecxz
mov
aad
push
dec
sbb
incl
jo
adc
das
popf
popf
jle
inc
jp
enter
xchg
mov
pop
loope
jg
add
lret
jmp
sbb
cwtl
je
std
lcall
cmovge
push
adc
push
test
mov
cmp
ljmp
lock
into
adcb
dec
into
mov
lods
std
movsb
and
sub
arpl
jmp
cld
mov
mov
or
stos
push
sub
sbb
jp
stos
inc
mov
repnz
mov
fldcw
pop
jg
mov
jp
push
xchg
pop
sbb
xlat
call
ljmp
mov
rcr
xor
bound
adc
dec
paddsw
pushl
std
call
sbb
popf
bound
fisttpll
popf
jns
add
jle
js
cwtl
xchg
pop
mov
mov
pop
daa
pop
dec
shlb
mov
jle
imul
icebp
je
outsl
fsubrs
mov
xchg
jns
aaa
add
daa
xchg
fisubrs
xchg
int3
sar
jmp
push
mov
ds
lds
inc
push
fcoms
cmp
adc
lcall
pop
into
jmp
out
jg
insl
xchg
cmp
lahf
scas
icebp
inc
mov
iret
push
dec
addr16
inc
stos
cmp
ljmp
add
out
add
je
push
cmp
repnz
cmp
out
clc
jmp
loop
jecxz
bound
popf
sarl
in
fidivrs
inc
mov
lret
mov
addb
decl
mov
sbb
mov
xor
push
dec
daa
hlt
aam
cmp
jp
mov
or
add
rorb
pushf
add
dec
cli
aad
adc
jne
mov
push
in
jmp
and
out
add
out
cmp
xorb
cli
idivl
lock
rol
addr16
lcall
dec
jo
mov
sub
loope
mov
dec
pop
xchg
movl
lcall
sub
fs
xor
insb
int3
push
repnz
jne
mov
lcall
adc
ret
call
cmpsl
div
xor
in
je
repnz
cwtl
push
mov
popa
loopne
in
inc
sbb
adc
shlb
lret
add
test
xchg
add
decl
push
or
or
xchg
ficoms
xor
rcrl
rcll
jo
sbb
nop
lahf
adc
imul
mov
inc
movsl
inc
push
mulb
mov
cmp
sub
adc
push
push
push
decl
shl
out
sbbl
jno
aad
gs
js
mov
rorb
cmp
ljmp
out
clc
xchg
rorb
repz
loop
or
xchg
or
enter
out
ficompl
pop
iret
ret
popf
call
jl
mov
mov
jecxz
idiv
decl
sbb
cmpsb
jne
loopne
fnsave
out
or
lock
les
ja
jmp
outsb
push
xor
xchg
sub
mov
push
stos
stc
xchg
jg
cli
jno
adc
subl
mov
orl
pop
fdivrs
inc
push
mov
jg
xchg
push
clc
or
inc
mov
je
add
push
call
clc
and
lods
dec
loopne
insl
lods
sub
aam
push
dec
adc
call
jb
sbb
std
xchg
cmp
cmove
adc
inc
sbb
ljmp
adc
cmp
lds
ret
in
add
ja
data16
fwait
popf
lcall
decl
les
outsb
xchg
and
stos
in
insb
xchg
outsb
rorl
pusha
mov
cli
ljmp
call
xchg
es
mov
adc
mov
add
pop
cmp
mov
pop
pop
adc
lcall
inc
dec
dec
adc
sub
cld
idiv
test
push
push
dec
movsl
cmp
pop
adc
movsl
cli
mov
jg
test
mov
pusha
bound
lret
insl
outsl
jg
mov
sbb
out
pop
out
pushf
inc
sub
call
pushl
pop
fcomp
popa
pop
out
jmp
mov
clc
ret
xor
sub
jl
sub
xor
cmp
adc
xchg
fadds
mov
inc
mov
mov
ss
fwait
adc
fucomip
fisttpll
lods
pushl
cld
inc
clc
shlb
mov
xchg
xchg
jecxz
push
dec
fistpll
cld
rorb
push
je
ljmp
scas
rcrl
push
jp
dec
dec
adc
xchg
sub
sbb
or
mov
mov
inc
push
rcll
pop
das
fidivs
or
xchg
fldlg2
sarl
std
add
icebp
popl
add
scas
dec
pop
and
mov
js
pusha
xor
inc
in
mov
or
ljmp
out
fcoms
or
lcall
incl
sahf
xchg
cmc
lret
xchg
aas
push
mov
enter
lock
loop
dec
jmp
in
es
mov
adc
fildl
jmp
insb
pop
sbb
push
je
inc
jbe
lea
aas
sub
xchg
mov
or
sahf
or
push
mov
clc
out
decb
fistpll
sub
mov
pop
sahf
lea
jp
rcrl
lcall
sarl
lock
jo
inc
mov
ds
mov
dec
mov
repz
ljmp
jecxz
mov
call
packuswb
mov
xchg
test
ret
pop
pop
adc
xor
decl
mov
scas
inc
mov
pop
das
repnz
jns
cmp
dec
push
iret
daa
xor
sti
repz
decl
incb
ret
hlt
jle
aad
sbb
xchg
scas
adc
clc
inc
lods
xor
mov
lea
mov
push
scas
xor
daa
mov
jmp
popa
test
lret
adc
stos
iret
shlb
scas
daa
movsb
jmp
cmpsb
push
mov
js
addl
mov
cli
sbb
loope
clc
nopl
sti
outsl
subb
neg
cli
add
fsubp
mov
aad
mov
mov
xchg
xor
mov
std
aas
inc
and
aas
loope
or
jns
test
jle
mov
or
mov
cwtl
jle
das
add
ljmp
cmc
ret
push
jge
leave
sub
sbb
mov
add
loope
push
or
jno
mov
addr16
ja
movsb
pushf
int
out
addr16
pop
xchg
xor
push
sbb
bound
mov
fwait
aas
jno
push
mov
int
xor
addr16
in
jae
adcb
inc
xor
push
cmc
ljmp
mov
jbe
mov
stos
mov
inc
out
roll
pop
out
leave
fists
mov
imul
pop
stos
outsb
movsb
fmull
jbe
sar
add
add
mov
das
shl
jp
leave
xchg
fstps
mov
adc
jg
mov
fmuls
xlat
mov
sub
lods
mov
mov
ja
insb
adc
xchg
xor
cs
addr16
outsb
cmc
ljmp
lret
mov
add
mov
cli
data16
pop
inc
ret
decl
orb
xchg
mov
pop
sar
xchg
cmpb
mov
ljmp
stc
add
ja
fisubs
mov
cmp
xor
pop
arpl
pop
jp
lcall
fcomip
call
test
jae
ret
sbb
shlb
sbb
vmread
and
in
js
inc
ret
xchg
in
mov
int3
mov
test
out
popf
xlat
mov
cmp
pushl
scas
push
cmp
psubsw
enter
cmpsl
add
push
mov
xchg
inc
ljmp
in
int
dec
cli
add
adc
xchg
nop
out
ss
cmp
rep
and
stos
mov
pop
movsb
jnp
out
div
dec
xchg
add
push
pop
call
cwtl
gs
xor
jnp
sbb
lahf
fiadds
push
inc
cwtl
mov
mov
xlat
aam
popa
xchg
neg
or
dec
loope
mov
mov
jl
cmp
lret
mov
std
outsl
shll
pop
cmc
scas
mov
cmp
scas
push
outsb
lods
mov
mov
sahf
gs
lret
call
mov
xchg
testb
ljmp
push
cmc
lods
popa
xchg
jb
jmp
aas
test
xchg
call
insl
jg
jp
jp
cmpl
mov
aad
sbb
xchg
mov
pop
fadds
cmp
in
mov
enter
mov
fldcw
mov
outsl
decl
out
adc
pop
and
ror
icebp
leave
jge
sub
insb
xchg
fdivrp
jnp
repz
push
pop
jae
das
dec
add
lret
cmp
int
in
adcb
stc
aaa
int
test
xlat
xor
nop
and
mov
dec
jo
in
adc
xchg
lods
clc
decl
cwtl
cmp
int3
aam
dec
push
fsub
outsb
adc
adc
or
imul
call
jg
leave
mov
repz
add
xor
sbb
pop
sub
scas
cmp
inc
out
aad
inc
inc
sahf
out
push
add
add
xchg
cs
xor
sbb
popf
jmp
cld
lcall
jg
test
rcrb
std
xchg
mov
and
mov
mov
test
add
imul
jae
ljmp
cmp
cwtl
mov
test
inc
jmp
jp
movsl
add
pop
fcoms
cmc
repnz
cmp
jle
jge
loop
mov
pusha
mov
or
sub
popf
adc
lcall
stos
nop
iret
sub
sbb
and
shrb
or
roll
add
adc
sbb
jo
inc
sbb
hlt
sub
popf
adc
jmp
jb
std
rclb
call
add
and
dec
xor
ljmp
xchg
jae
adc
inc
xor
je
add
loopne
inc
outsb
inc
xor
hlt
jns
aaa
hlt
mov
pushl
aam
adc
mov
push
dec
sub
movsl
jnp
pusha
fstpt
fsubs
call
pop
mov
cmc
mov
aam
mov
aad
inc
sbb
mov
xor
cmp
incl
sub
dec
push
dec
adc
xor
mov
inc
test
inc
inc
add
repz
ds
cmpsb
push
sahf
push
cs
jmp
mov
cwtl
inc
lcall
pushf
ljmp
pop
pop
insb
add
sbb
cmc
jae
xor
cmp
bound
pushl
jae
xchg
push
xchg
repz
stos
out
dec
popa
mov
sbb
mov
xchg
cmp
pushf
jno
pushf
pop
add
sti
lret
rorb
cld
inc
cmp
xchg
inc
mull
scas
mov
icebp
popa
scas
add
incl
les
fstl
mov
mov
or
adc
lahf
imul
int
sub
je
push
repz
xor
mov
leave
cmp
jl
and
push
ficompl
repz
push
into
mov
jg
outsb
sub
push
loop
clc
mov
xchg
push
into
push
cmp
call
std
push
lods
cmpb
aaa
stos
insl
ret
les
push
or
or
mov
xchg
push
push
push
sub
cvtps2pd
cmpl
ret
lods
mov
adc
push
mov
xor
dec
add
movsl
xlat
pop
or
pop
jmp
in
push
jnp
add
rcl
in
sti
sub
in
xor
ja
pushf
dec
lcall
add
out
cmpl
cmpsl
mov
add
pop
mov
insl
dec
dec
outsb
je
fistps
loop
mov
sbb
jecxz
xorl
push
jmp
mov
call
rolb
dec
sti
xchg
pop
and
jns
vpshuflw
pushl
in
ja
pop
mov
xor
push
pop
in
inc
inc
mov
sub
add
out
unpcklps
jg
xchg
test
jo
fdivp
mov
lds
jns
stos
mov
je
in
inc
mov
or
int3
and
adc
rol
rclb
inc
mov
call
dec
popa
or
and
cmpsb
fnstsw
cli
inc
and
int
push
out
adc
mov
repnz
lretw
call
lock
inc
xlat
sbb
loopne
nop
pop
and
mov
nop
loop
cli
ljmp
add
inc
or
mov
add
jmp
js
addr16
cltd
js
loope
push
jge
inc
lods
jecxz
clc
ficoms
clc
repz
dec
pop
push
cld
dec
cmc
push
and
sahf
mov
lahf
in
add
loope
ja
mov
call
mov
mov
loop
mov
mov
push
or
and
xor
cmpsl
push
scas
xchg
decl
out
mov
neg
loop
dec
popf
mov
data16
jg
dec
lcall
pop
jae
jg
int
shll
ss
adc
mov
push
xchg
add
ffree
push
jns
pop
popf
les
stc
sub
sbb
in
sbb
xor
sbb
mov
mov
out
fwait
cmp
cmp
fmull
std
jmp
mov
adc
add
aam
test
pop
je
ljmp
jmp
lods
mov
lods
fisttpl
das
aaa
mov
stos
jno
sbb
xchg
push
incl
cmpsl
push
fisubrl
fs
mov
push
leave
jl
add
cmc
fldcw
aaa
repz
rcl
cmp
mov
ljmp
inc
cmp
into
daa
jo
mov
loopne
inc
imul
adc
jb
push
inc
pushl
sbb
jbe
pusha
vpsadbw
insb
bound
cmpsb
mov
filds
in
pop
mov
decl
dec
pop
pop
push
mov
sub
out
push
ds
xchg
fadds
pop
sub
xchg
popa
push
out
jmp
fwait
das
mov
sahf
std
test
movzwl
jecxz
je
ljmp
inc
adc
mov
frstor
divl
push
sub
popl
incl
sub
cmp
test
cmpsl
add
mov
ret
jmp
jmp
push
ss
decl
jle
sbbb
inc
lret
sbb
xchg
push
cmp
pushf
es
push
call
pop
cwtl
push
mov
dec
dec
cli
test
dec
pop
cmp
inc
out
lcall
ret
mov
std
out
mov
aam
and
lock
or
imul
ret
ljmp
sahf
inc
loop
addr16
dec
add
jns
mov
inc
or
pushl
inc
push
mov
mov
movsb
push
mov
mov
xchg
adc
call
iretw
out
jge
xchg
push
lea
inc
iret
shlb
repz
scas
popf
pop
lahf
sub
clc
sub
dec
sbb
lcall
outsl
sub
mov
push
jbe
hlt
mov
or
jne
repz
sbb
cmp
incl
pushf
icebp
mov
cmp
jp
xchg
inc
and
jo
decl
pusha
out
out
loop
xchg
mov
ret
sbb
jmp
push
mov
pusha
test
mov
mov
jno
out
mov
xor
xorw
outsl
clc
pushl
inc
es
ja
lcall
leave
cmp
sbb
mov
stc
and
jmp
and
sub
xlat
jmp
ret
ds
incl
imul
das
sbb
sahf
mov
pop
test
mov
scas
adc
cmpsl
xchg
jecxz
jle
and
gs
or
rcrb
mov
popa
gs
test
fisttpl
pop
fldcw
lods
test
pop
test
ljmp
xor
sarl
cmp
test
push
outsl
pop
cmp
ret
mov
mov
cmp
push
mov
mov
xor
sub
dec
std
lods
jge
insb
xchg
mov
and
jmp
add
and
movsl
roll
js
rolb
add
sub
push
pop
fs
aas
mov
incl
movsb
xchg
es
mov
push
sbb
and
push
enter
lock
mov
pop
nop
inc
mov
jmp
pop
inc
stos
inc
idivl
and
jl
jnp
sahf
xchg
jl
shlb
call
das
dec
jg
adc
pop
icebp
iret
rol
mov
imul
jl
in
inc
mov
ss
decl
xchg
lcall
fnstsw
repz
int3
int
push
pop
test
sbb
mov
sar
incl
dec
clc
mov
fisubrs
aaa
and
jle
push
sub
push
stos
jmp
loop
pop
sbb
cs
icebp
mov
repz
arpl
xorl
aas
sbb
mov
inc
sbb
xor
inc
pusha
movsb
in
daa
sbb
pop
xchg
inc
jns
pop
fildl
lcall
cmp
mov
js
push
cltd
in
xor
incl
xor
pushf
ja
ds
lea
jnp
xor
cmp
sub
xor
jmp
mov
push
cmp
rolb
ficomps
mov
ljmp
cmp
mov
jae
out
mov
add
push
out
sti
dec
sar
lcall
ret
cmp
aad
inc
outsl
sbb
mov
jmp
push
and
mov
adc
decl
push
dec
jne
lret
popa
push
scas
mov
cmp
int3
inc
lcall
cli
movsb
fcompl
adc
mov
push
repz
lcall
incl
xchg
scas
cmp
int
sub
and
add
xor
inc
mov
popf
in
xchg
mov
cli
decl
test
stc
jmp
mov
js
pushf
push
push
decl
fs
sbb
jecxz
jle
bound
jge
test
fstpt
adc
xchg
mov
and
nop
enter
jmp
daa
push
xor
imul
sub
outsl
mov
pop
test
jecxz
xlat
xor
dec
cmc
add
repnz
nop
pop
cwtl
lahf
jecxz
sahf
jns
in
jno
mov
xor
ljmp
in
das
lods
pop
lock
je
inc
pushf
sbb
push
shr
insb
outsb
sti
ljmp
push
leave
fimull
lea
xchg
sarl
nop
jnp
xchg
add
outsb
cli
daa
enter
xor
jbe
add
hlt
mov
push
inc
incb
mov
sbb
mov
dec
loope
inc
xchg
test
inc
sar
decl
push
pop
sbb
mov
rcl
repz
rcll
xlat
lods
add
mov
ljmp
add
cmp
pop
pop
test
mov
fs
loope
mov
push
out
inc
out
sbb
mov
es
xchg
or
movsb
sub
stos
test
fcomps
cmp
hlt
repz
incl
push
or
sub
add
sti
dec
out
mov
stc
lcall
mov
ljmp
test
fs
push
jo
pusha
icebp
adc
das
fidivrs
incl
jecxz
mov
cmp
lea
mov
arpl
jecxz
mov
sub
call
pop
imul
sbb
pop
int3
lret
pop
neg
sarb
inc
ljmp
adc
xchg
jne
pop
dec
and
cs
add
jo
cs
push
test
and
ror
or
pop
mov
cmpsb
call
cmc
es
adc
pop
sbb
test
repnz
jg
xchg
outsb
mov
jecxz
xor
or
dec
les
fs
ljmp
adc
pop
imul
or
jb
or
pop
movsb
ret
in
pushl
push
mov
movsl
pushf
mov
mov
dec
xor
popl
mov
pushl
orb
cmc
in
push
loopne
outsb
or
les
dec
adc
sub
lea
push
or
add
pushl
pop
fdivrs
out
lods
mov
add
sub
test
mov
cmc
xchg
mov
pushl
sti
jmp
cmp
std
mov
inc
inc
adc
sub
xor
jns
test
pushl
rolb
xchg
cli
xchg
xchg
sahf
and
mov
xchg
icebp
clc
adc
dec
mov
push
xchg
mov
lock
stos
cmpsb
dec
shl
es
inc
jne
fsubrs
lahf
mov
ljmp
mov
in
mov
adc
lss
adcb
js
orb
pusha
jmp
pushl
xchg
cmp
test
fmuls
pop
jb
inc
inc
cmp
push
adc
jmp
cltd
mov
mov
push
jb
sub
push
cld
mov
into
lcall
sbb
push
je
hlt
mov
enter
mov
mov
pop
cld
jg
inc
mov
adc
adc
xlat
dec
mov
push
mov
shll
xchg
xchg
mov
mov
fstl
dec
jns
popf
in
lahf
hlt
mov
add
addr16
lea
loope
jecxz
add
push
imul
out
clc
mov
hlt
push
call
ss
lahf
movsb
dec
lea
jg
mov
pushl
pop
sbb
int
jae
inc
in
test
mov
jmp
outsb
mov
ror
out
sbb
mov
popf
push
nop
clc
cmpsb
add
add
imull
jg
cmp
inc
push
pushf
dec
cmp
cmp
pop
shrb
lea
pushl
fs
cmp
mov
pop
dec
inc
pop
cmc
xor
loope
in
and
adc
jg
xor
cmp
mov
pop
adcb
xlat
lcall
incl
mov
cmpb
jl
lcall
inc
sub
push
call
jns
call
cs
stos
cmp
or
lcall
pop
jp
dec
dec
movsb
clc
incl
out
imulb
out
int3
push
cmp
in
jnp
xor
inc
shrl
pop
pushl
fucomp
dec
repnz
mov
adc
inc
je
adc
ficoml
incl
dec
or
int
mov
movsb
aam
or
mov
pop
in
adc
cmpl
out
jmp
std
imul
rorb
lret
xacquire
fldlg2
nop
cmp
stos
ss
incl
shl
mov
jae
or
xor
into
xor
cmp
sbb
insb
int
incl
popf
and
inc
mov
leave
lods
dec
dec
ja
test
sbb
mov
jg
imul
push
xlat
addr16
flds
xor
mov
pop
std
mov
daa
jbe
jecxz
sub
xor
inc
mov
mov
call
sbb
adc
ds
mov
imul
xchg
rcrb
in
dec
mov
push
inc
ss
imull
xchg
xchg
jl
sbb
lds
lcall
jg
jmp
inc
mov
pop
sbb
insb
jo
sbb
cmp
cmp
adc
call
sub
mov
fisubrl
sub
or
ret
popl
xchg
mov
mov
add
imul
rcrb
int3
xchg
mov
add
popl
lret
popa
out
pop
jns
daa
push
stos
popa
loope
ljmp
pop
negl
icebp
out
push
cmp
ds
or
flds
mov
sbb
jg
stc
xor
pop
sub
aad
sbbl
mov
aad
aad
mov
lcall
mov
outsl
leave
jmp
inc
mov
dec
xchg
inc
xor
loope
push
popf
mov
loop
ljmp
pop
push
mov
imul
push
push
pop
incb
in
out
cmpsl
add
mov
sti
pop
clc
dec
and
sub
or
movsb
cmc
jne
ret
mov
incl
dec
pusha
dec
jg
dec
inc
cmp
test
pop
sub
imull
lcall
xor
je
push
test
shrl
pop
aad
loop,pt
lea
pop
sub
sub
sbb
fs
in
cmp
addr16
inc
cmp
jmp
pop
add
fnstenv
fiadds
clc
mov
push
mov
lcall
movsb
and
adc
lret
xor
in
ja
sarl
int3
adc
mov
out
jg
mov
mov
jne
jno
push
jo
mov
ds
cmp
fstl
push
and
dec
xlat
sahf
jb
shrb
cli
cmpsb
sub
inc
mov
outsl
mov
or
ss
ret
jo,pt
mov
mov
rcr
sub
fisubrl
call
push
xor
inc
pop
int3
and
mov
mov
aam
push
sub
push
sbb
aam
push
pop
fsub
lret
mov
mov
mov
jae
jl
inc
call
popa
xor
xchg
adc
xchg
shr
nop
push
cld
imul
xchg
roll
or
pushl
cld
mov
push
enter
pushf
lret
or
mov
decl
xor
mov
jo
data16
fstpt
das
mov
jp
adc
mov
push
decl
push
or
cmp
lret
push
mov
push
push
fcoms
ret
incl
dec
imul
push
xor
ret
push
shll
ret
pusha
pop
dec
rorb
cs
xor
inc
shl
mov
imul
push
and
push
push
fimuls
out
mov
and
addl
jg
or
xor
data16
incl
popa
add
cmp
and
pusha
inc
mov
mov
xor
shr
test
fidivrl
inc
or
mov
pop
sub
ficompl
sahf
or
inc
in
push
mov
and
lcall
xorb
cmp
lret
or
in
mov
cmpsl
es
jl
mov
cmp
mov
inc
test
and
push
sub
in
pop
lock
adc
mov
dec
sbb
mov
mov
push
or
rcrl
mov
sbb
aas
xor
insl
aas
jp
inc
xchg
and
push
shr
mov
and
call
lcall
mov
or
sbb
enter
or
out
jo
xchg
mov
mov
pushl
roll
cmpsb
adc
lds
sbb
pop
movsb
and
jo
cmp
or
adc
mov
aas
rcrl
ret
out
mov
push
mov
push
cmp
mov
xchg
push
lods
or
sub
pop
movsl
mov
mov
sub
decl
add
lcall
insb
mov
or
subb
mov
enter
test
aad
loopne
cmp
cmp
dec
sahf
hlt
clc
cmp
clc
lcall
repnz
pusha
aad
push
jmp
fildll
imulb
jp
call
inc
push
dec
pop
mov
push
outsl
jae
rorl
hlt
dec
push
fnstsw
into
adc
out
mov
add
ret
loope
lahf
subb
jbe
inc
mov
sub
outsl
incl
push
ljmp
cmp
mov
call
jg
pop
push
hlt
and
fadd
cmp
xor
jns
out
test
or
enter
js
pop
mov
cmpsb
mov
cmp
fadd
push
xor
jnp
sub
or
push
inc
out
pop
lock
jmp
pop
xchg
in
icebp
sbb
sub
call
das
ja
dec
mov
adc
mov
adc
out
sbb
daa
xor
mov
incl
cmc
iret
add
push
insl
mov
cmc
shrb
dec
mov
mov
mov
test
ds
ljmp
mov
enter
cmpsb
inc
adc
frstor
sbb
lcall
jae
insb
or
adc
jg
mov
xor
sbb
lret
mov
incl
pop
push
test
and
popf
movsl
ljmp
adc
sub
adc
call
test
icebp
jbe
call
aam
pusha
and
je
jo
in
movsl
sbb
icebp
dec
push
mov
out
cmpsb
clc
sbb
jmp
mov
mov
out
push
jp
ljmp
sahf
mov
in
cli
mov
push
mov
popf
leave
pop
hlt
outsb
mov
int
aaa
push
pop
push
fidivrs
daa
or
out
test
ljmp
rcll
inc
push
add
into
popa
jg
lods
adc
mov
xor
addb
jg
fwait
aam
lock
jp
mov
out
jae
popf
cmp
mov
lock
test
jg
pop
xchg
adc
negb
mov
push
mov
mov
enter
jmp
enter
orl
lahf
bound
lret
fisubl
outsb
lret
push
arpl
decl
cmp
test
imul
data16
jnp
std
fucom
mov
call
mov
gs
mov
sub
cld
out
mov
mov
test
call
and
into
inc
loope
dec
xchg
test
xor
pop
addb
rcrl
mov
mov
xor
pushf
enter
lods
sbb
andl
jno
into
push
pushl
push
push
jno
xlat
sub
mulb
fisttpl
add
push
movsb
adc
and
fs
xchg
dec
and
scas
loope
in
inc
fwait
incl
sbb
scas
pop
cwtl
stos
fsub
jecxz
adc
les
dec
mov
into
ljmp
cld
loop
sar
out
enter
add
lods
sbb
loopne
add
xor
repz
inc
xchg
push
sbb
push
addr16
dec
jle
dec
dec
sbb
dec
cmp
jg
adc
enter
or
decl
movsb
addr16
ds
dec
xor
and
mov
lock
mov
push
call
lret
push
jo
cmp
mov
push
into
jecxz
imul
popf
fmull
jnp
mov
fsubrs
shll
scas
mov
adc
inc
insb
movsl
movsl
jne
jne
xor
outsl
inc
fisttps
addr16
adcb
test
fisubl
out
fdivr
and
jle
and
ret
inc
cli
cli
mov
adc
int
dec
out
jle
lods
mov
decl
lret
scas
sarb
xchg
cmp
adc
dec
pop
push
movsl
out
imul
cmp
pushf
mov
clc
cmp
push
mov
jbe
icebp
mov
ljmp
push
and
ja
in
xor
iret
adc
ret
inc
hlt
lods
sbb
xchg
cmp
pushl
jb
cmp
shll
inc
sub
out
in
mov
jmp
stc
out
stc
dec
lods
outsl
inc
push
fsts
lret
adc
das
jmp
popa
cmpsl
movl
popa
mov
xchg
mov
mov
fists
mov
xor
out
orb
dec
sbb
mov
sub
decl
mov
daa
test
or
sarl
fdivrl
ljmp
dec
cli
push
xor
pushf
jecxz
mov
mov
xchg
aas
ret
cvtpi2ps
leave
iret
jg
or
cmp
and
sub
negl
ret
hlt
bnd
add
pusha
pushl
cmp
jno
pop
insb
mov
lds
testb
sbb
dec
scas
dec
pop
jecxz
clc
loop
out
sub
popf
dec
cltd
pop
wrmsr
ljmp
repnz
inc
into
mov
lcall
pushl
outsb
dec
mov
insb
fnstsw
inc
xchg
rorl
repnz
cmc
jmp
iret
and
add
roll
fcomps
jl
aad
adc
add
sbb
jp
aaa
push
mov
jno
lea
inc
dec
call
cmpb
les
dec
ja
sti
lods
imul
add
pushl
std
pushl
arpl
inc
lods
icebp
into
repnz
sbb
test
push
xor
add
xchg
mov
jmp
cld
cmp
sbb
push
sub
insl
inc
jnp
popf
popa
add
mov
or
aad
sub
sbb
test
lret
or
idiv
pop
rcl
mov
std
sbbb
jmp
imul
decl
and
int
pop
cmpsb
push
js,pt
push
sbb
adc
enter
sbb
lret
xchg
punpckhbw
incl
fisubrl
test
aam
mov
jnp
push
outsl
sub
mov
stos
jge
push
jg
jmp
xor
rcll
inc
in
in
fisubs
xchg
xchg
flds
rcrl
loopne
decl
mov
or
push
push
mov
insl
xor
push
clc
sahf
pusha
gs
adc
ljmp
cli
cld
lods
rolb
and
inc
jnp
mov
jle
in
mov
push
push
fdivrs
mov
dec
aad
mov
int3
adc
jg
clc
sbb
xor
sub
jmp
je
mov
clc
adc
mov
cmp
fistpl
cmpsb
pop
addr16
pop
adc
push
add
jp
dec
or
cmp
push
fidivl
sbb
xor
lcall
mov
add
mov
cwtl
inc
adc
push
sti
mov
push
dec
loopne
out
mov
scas
loopne
pop
cld
cli
aad
pop
mov
fstps
pop
scas
pop
pop
jecxz
mov
add
icebp
or
mov
cmp
test
mov
jmp
pop
mov
xchg
movsb
lea
jo
push
lret
fsts
pushf
push
jp
mov
cmp
shrl
adcb
cs
push
repz
cwtl
divb
pop
sub
jg
mov
nop
mov
push
pop
jo
pop
aas
sub
lods
test
mov
mov
ljmp
or
inc
xchg
lods
xchg
test
or
xchg
rcrl
shl
gs
ret
jne
mov
rol
fmuls
loop
icebp
xlat
out
jp
int
mov
mov
test
lcall
popa
xchg
stos
lds
xor
nop
mov
pop
fwait
inc
cwtl
push
ljmp
lcall
xchg
dec
push
lcall
cltd
out
jmp
icebp
decl
cmp
sahf
push
jmp
dec
rcl
adc
push
add
jb
cmp
cmp
xchg
and
outsb
pop
xchg
sbb
adc
rcrl
cld
addb
test
add
mov
mov
aad
xor
movsb
leave
sti
fiaddl
mov
pop
lea
ljmp
cmpsb
fwait
add
cmp
loopne
pop
lds
hlt
push
outsb
mov
loope
ljmp
les
data16
sub
mov
ret
loope
hlt
es
nop
sbb
dec
fistl
js
lcall
cmpl
test
stc
jge
mov
sahf
jl
imul
jmp
cli
mov
pop
movsl
pop
sbb
mov
and
mov
and
call
aam
mov
inc
hlt
cld
jmp
xor
pop
in
push
add
addr16
jmp
js
xchg
mov
inc
lcall
ljmp
sbb
jnp
in
fistpll
fdivrs
cli
insb
sub
add
incl
icebp
and
daa
mov
es
pushf
mov
stos
jg
dec
es
mov
jo
or
jge
in
adc
clc
pop
or
pop
ss
mov
fsubr
stc
dec
sbb
mov
adc
popa
stos
cmp
out
call
pop
cmp
mov
fisttpll
push
jae
imul
adc
ret
ljmp
fwait
or
sbb
pextrw
into
loopne
notl
imul
xchg
shll
jg
out
fsub
jle
add
les
loop
inc
pusha
and
jo
inc
adc
loope
adc
imul
lcall
or
mov
dec
sub
aas
push
sub
or
imul
loope
fcomip
adc
lahf
call
xchg
bound
out
xor
pop
xchg
fbld
cld
pushl
mov
mov
mov
out
mov
sbb
inc
inc
jge
sbb
xlat
sbb
clc
jmp
into
outsl
jp
fisttpll
and
jg
ja
jo
into
je
fistps
mov
jmp
pop
sbb
lcall
dec
dec
adc
arpl
arpl
stos
pop
push
mov
jg
jmp
cmc
popfw
push
cmp
fstpl
scas
mov
cmc
sub
enter
movsl
push
cmp
das
jmp
mov
mov
out
idiv
jmp
jp
nop
mull
sub
movsl
pop
cli
int3
ljmp
ljmp
mov
fprem1
lock
or
insb
pushf
mov
lret
inc
iret
addr16
xor
call
addb
testl
mov
rolb
xor
cmp
in
ds
jmp
scas
mov
ret
insb
cmp
iret
add
pop
dec
pop
iret
pop
in
ficoms
das
jecxz
shl
incl
roll
gs
jmp
cmp
loope
or
pop
pop
mov
jae
rorb
call
arpl
ficompl
daa
lods
sbb
test
sub
in
call
jno
pushl
sbb
cld
arpl
stos
test
or
ds
stos
push
js
incl
sar
das
pop
shlb
nopl
daa
paddusw
ljmp
xor
in
push
cmpsl
out
push
or
stos
add
test
mov
push
push
mov
cld
and
jo
mov
add
or
mov
xor
jns
add
fisubl
add
jnp
xchg
ljmp
incl
lock
movsb
mov
or
pop
sbb
sub
test
call
pop
cmp
inc
rol
das
mov
daa
inc
and
cld
xor
adc
incl
loopne
cld
dec
xchg
mov
adc
or
xchg
lods
or
scas
movsb
mov
call
leave
inc
xor
xor
mov
push
adc
int3
jle
in
inc
dec
xbegin
loop
iret
dec
xchg
adc
mov
add
loope
rcr
in
inc
out
jecxz
incl
cltd
mov
cmpsl
cmp
mov
lea
fcoml
fwait
out
clc
sbb
repnz
or
fnsave
std
inc
nop
pop
mov
push
leave
sub
int3
pop
std
jmp
stos
lods
fidivl
inc
jl
pop
gs
test
lods
dec
jne
jmp
mul
addr16
pop
aas
adc
dec
and
sub
out
loop
cmp
lret
inc
movsb
mov
lcall
or
stc
xchg
je
mov
pop
fpatan
add
out
out
loopne
imul
ret
inc
fidivs
mov
stc
cli
add
pop
pop
adc
testb
aas
xchg
addb
mov
jns
std
decl
movsb
mov
les
aas
ss
adc
cmc
pop
push
into
inc
out
decl
arpl
xchg
mov
adc
sahf
iret
aam
dec
inc
imul
sbb
mov
mov
fdiv
sahf
jo
leave
stc
je,pt
xchg
adc
jge
pop
sbb
outsl
test
jp
pop
jmp
xor
mov
xchg
adc
mov
es
push
or
mov
adc
decl
push
cs
cmp
aad
or
and
xchg
sub
jb
inc
push
jns
jmp
insb
dec
popa
cmp
and
sbb
cs
mov
cld
push
cmp
push
scas
bound
dec
mov
arpl
fst
sub
jb
mov
xchg
into
stos
mov
push
adc
in
lcall
sub
push
out
mov
xchg
sti
sbb
pop
test
adc
xor
outsl
decl
int
rorb
and
or
mov
lock
push
jmp
mov
lahf
sbb
mov
test
jne
mov
xchg
sub
call
or
lea
xorl
adc
ss
push
out
das
imul
fbstp
jg
sbb
sahf
sbb
aad
ds
mov
push
leavew
repz
cli
decl
jmp
sahf
jnp
ss
cmp
movsl
inc
sub
adc
lcall
call
loop
lds
mov
and
fadd
mov
call
pop
cmpsl
cs
dec
cmp
fwait
jo
aas
pop
pop
out
test
nop
dec
out
js
inc
mov
mov
into
cmp
xorl
stos
inc
xlat
or
mov
cmp
fdivr
cmp
mov
ss
btr
int3
dec
or
in
xor
rclb
mov
ret
stc
jmp
dec
dec
pop
fstpt
adc
jae
loopne
popa
lcall
out
stos
sbb
inc
and
jg
fdivl
mov
sub
pop
inc
out
sbb
push
ljmp
fsubs
ret
out
sub
pusha
adc
pushf
test
fiadds
sub
stc
sub
repnz
ja
jmp
mov
loop
mov
fimull
dec
push
rolb
mov
lcall
and
or
movsl
xor
jne
pop
push
popa
cmp
xor
sub
push
lods
push
inc
jo
adc
call
xchg
xor
test
push
sbb
add
rclb
pop
stos
pop
repnz
call
roll
lret
fstpl
test
sub
out
mov
pop
scas
xchg
pushf
sti
and
ret
and
std
call
lea
scas
xorb
xchg
or
cmp
adc
mov
test
inc
add
cli
mov
outsb
jle
in
add
scas
add
rorl
sahf
leave
pop
mov
int3
mov
and
fdivr
inc
pusha
inc
idivl
sahf
xchg
test
push
jb
fwait
arpl
add
push
sahf
jno
add
call
push
lret
xor
pop
jecxz
or
jmp
cmp
mov
lcall
fcomp
in
into
xchg
pushf
lret
add
mov
loopne
out
xor
jbe
push
xchg
movsl
clc
lcall
incl
fcoms
mov
scas
js
gs
lret
inc
mov
sahf
shlb
lock
add
pop
popf
cltd
push
mov
stos
rolb
movsl
push
jecxz
lcall
insl
repnz
push
sahf
ja
test
aad
adc
jno
lret
dec
daa
mov
jg
push
adc
push
mov
enter
repz
je
arpl
sub
cli
shll
lret
iret
popf
sti
sbb
test
jno
loopne
xlat
jne
add
repz
call
add
loop
adc
ret
mov
stos
pop
pop
push
pushl
pop
outsb
fldcw
pop
testl
jno
xor
arpl
push
mov
add
push
loopne
ljmp
xor
or
fdivr
adc
xchg
aaa
notb
cmpsb
out
mov
adc
inc
pop
xor
and
cmp
sub
sar
repz
push
cld
cltd
xchg
incl
cmpl
dec
xchg
inc
loop
mov
xlat
movsb
sub
pop
into
test
jg
inc
incl
pop
gs
cmpsl
jecxz
add
dec
jp
addl
adc
xchg
pop
adc
pushl
sahf
js
push
add
int
insb
cmovne
int3
push
bound
ja
mov
add
fldlg2
loop
and
mov
and
paddd
pop
mov
repnz
add
lcall
xor
cli
dec
imul
or
jg
outsl
pushl
fcomps
das
mov
push
and
shr
add
pop
xor
hlt
cmp
in
ljmp
clc
mov
add
stc
sbb
aad
inc
insl
and
adc
pushl
insb
mov
mov
in
lcall
hlt
dec
int
push
push
mov
jae
movsl
pushl
sbb
cmp
inc
adc
mov
std
mov
inc
lcall
and
gs
insb
inc
or
mov
sbb
call
xor
lcall
inc
mov
movsb
cltd
loop
sub
and
je
cmp
shrb
jmp
aaa
outsb
push
jmp
dec
push
sbb
add
jns
ss
inc
fidivrs
push
fcmovbe
cli
mov
and
mov
sub
lahf
in
in
jne
push
mov
jl
daa
jg
ljmp
push
pop
mov
std
mov
out
scas
int3
ficomps
inc
lcall
jae
aas
mov
out
mov
movsl
inc
pusha
daa
sub
js
cmp
call
subb
xlat
push
adc
add
sti
mov
pop
xor
je
mov
mov
in
mov
add
loopne
push
dec
shrb
xchg
test
pushf
mov
cwtl
inc
lcall
mov
decl
adc
add
cltd
or
push
sub
aam
icebp
ss
sti
mov
out
mov
jmp
xchg
mov
pushf
cmpsb
mov
scas
push
sub
das
clc
fistpl
shll
push
cmp
leave
std
fcompl
add
iret
mov
xor
insb
pushw
xlat
mov
test
push
pop
pop
call
popf
repz
ljmp
roll
sbb
scas
xor
fwait
sub
in
pop
lahf
insb
push
and
pop
fsub
flds
xchg
aad
out
clc
mov
out
pop
test
xchg
in
jl
int3
insb
insl
xchg
icebp
int
out
out
pop
call
clc
inc
repz
loop
dec
and
sub
sub
repnz
mov
cmp
std
ljmp
es
mov
jno
movsb
fidivs
pop
mov
jmp
lea
aam
add
add
ficompl
add
test
ret
aas
jge
ljmp
jl
add
daa
dec
jle
enter
xchg
or
fnsave
dec
cmpsb
dec
xor
dec
stos
xor
cli
cmp
ljmp
cmpsl
rcrb
cmp
mov
cld
loop
sbb
pushl
sbb
outsl
xor
pop
scas
sub
sbb
cmp
mov
insb
test
out
push
or
add
int
mov
ret
mov
jecxz
sub
call
sbb
mov
and
pushl
sub
test
icebp
push
sti
sbb
das
rolb
ljmp
incl
xchg
aas
push
nop
adc
lret
jl
shl
outsb
add
jle
ljmp
dec
pop
adc
lahf
jg
or
int3
sub
cmp
aam
scas
pusha
les
sti
mov
sbb
orl
cmp
add
xchg
iret
jbe
jle
jle
adc
cmp
lcall
ljmp
jns
and
add
push
sbb
ret
dec
ds
dec
stos
or
jg
and
cld
jl
lahf
rcrl
dec
pop
lahf
cwtl
and
pop
pop
pinsrw
mov
mov
mov
out
mov
pop
or
lds
aad
sbb
push
movsb
pop
sub
in
or
add
mov
jg
pop
scas
gs
cmpsl
and
ret
cmpsb
or
mov
jbe
lahf
mov
test
ljmp
push
jns
push
adc
cmpsl
push
call
jp
sbb
xchg
imul
jmp
dec
int3
mov
add
xchg
into
xor
loope
adc
adc
and
add
mov
decl
lock
or
fwait
add
mov
ljmp
dec
jl
pop
adc
mov
lcall
sbb
sbb
jbe
mov
lods
test
pop
mov
lcall
js
cmp
lods
in
pop
nop
sub
xchg
aad
or
lds
enter
rcrb
jecxz
ljmp
orl
pop
adc
lcall
mov
pop
lds
sbb
loopne
xor
lret
jb
std
data16
cmp
mov
sbb
gs
cmp
andl
pop
pushf
or
stos
lods
xchg
orb
sbb
into
fidivs
adc
pop
push
std
mov
cld
fucom
sub
mov
mov
add
xchg
push
push
mov
or
adc
cmp
mov
xchg
movsl
mov
lock
sbb
pop
mov
pop
push
enter
dec
jecxz
jbe
ret
in
adc
stos
push
dec
adc
push
push
test
or
or
lret
sub
bnd
decl
addl
mov
scas
pop
jmp
push
ljmp
mov
stc
or
std
enter
dec
sub
push
jle
ljmp
dec
adc
mov
lods
push
sarl
mov
in
xchg
sub
mov
xchg
inc
outsb
data16
xor
sbb
and
jmp
aas
lahf
xchg
test
jg
outsb
jle
mov
push
popa
inc
movsb
sub
ds
iret
cld
decl
ret
out
addr16
and
and
jnp
or
es
addb
scas
and
xchg
jl
std
xlat
xor
mov
mov
xor
pop
mov
sti
sub
decl
pop
divl
loopne
push
pushf
in
mov
into
lret
popa
add
idivb
call
ret
mov
sub
push
into
out
sub
test
icebp
mov
dec
leave
pushl
jmp
cmpsb
add
dec
jb
jae
pop
sub
xor
mov
pop
stos
pop
lcall
out
cmp
xchg
and
jo
imul
push
test
cmp
dec
mov
cmp
test
xchg
push
mov
js
mov
fs
leave
xchg
fstpt
movsl
push
xor
sub
mov
test
or
decl
inc
and
push
mov
xchg
sbb
mov
shlb
cli
xchg
insb
jb
mov
lcall
or
xchg
add
rolb
ret
lret
stc
and
push
xchg
inc
jle
jae
jmp
in
adc
xor
jb
push
jmp
ficoml
lcall
decb
aad
lds
xchg
xchg
sahf
add
lcall
shll
std
jle
cmpsb
mov
enter
fldcw
lcall
les
das
mov
pop
mov
xor
es
inc
ljmp
mov
jnp
cld
dec
mov
lock
inc
incb
hlt
mulb
cmpsl
sbb
jecxz
pushl
add
das
xchg
loope
jb
push
in
bound
and
mov
call
sub
mov
add
pop
or
jmp
cmpsb
or
jg
incl
lret
in
stos
clc
sbb
adc
aas
lock
mov
lds
decl
sub
and
arpl
addr16
int
insb
lahf
inc
loope
inc
adc
out
pusha
les
jmp
cmp
ja
and
fwait
push
pusha
sub
lahf
cmp
sub
out
dec
xor
dec
sub
inc
mov
ljmp
cli
call
movsl
repz
pushf
or
fwait
cld
aad
jno
jecxz
and
out
test
mov
stos
loop
inc
sbb
pop
call
call
test
test
popa
jno
enter
mov
sub
pop
std
lods
mov
repnz
int
subb
sti
or
decb
in
popa
sbb
cli
add
in
loop
repnz
dec
aam
cli
inc
mov
dec
stos
xor
mov
test
aas
mov
pusha
lret
mov
ljmp
push
mov
xor
lods
xlat
addl
add
aam
pusha
mov
jmp
lcall
ljmp
mov
sbb
stc
xorl
mov
repz
ds
fmull
mov
adc
fldl2e
mov
pop
lock
sbb
jnp
rclb
cmp
mov
adc
add
or
cmp
into
xor
mov
mov
orb
aad
jne
and
pop
add
incl
mov
lock
outsl
xchg
adc
mov
stos
xchg
clc
jg
jp
mov
movsb
out
xchg
dec
xor
push
lods
cmp
movsl
or
inc
adc
mov
push
call
movsb
out
pop
sub
cmpsb
dec
inc
out
mov
xor
movsb
jb
mov
mov
test
shll
lock
in
decl
jmp
aas
xor
mov
or
and
cltd
adc
es
jno
adc
decl
ljmp
push
out
out
adc
add
fisubs
into
testb
ljmp
enter
mov
sub
mov
jae
ret
enter
decl
inc
or
sub
push
repz
fsubr
jne
aam
pusha
pop
pop
xchg
in
icebp
mov
insb
ljmp
xchg
mov
aad
jge,pn
cmpl
push
mov
and
push
pop
sar
push
icebp
xchg
sub
mov
and
xchg
stc
or
enter
pop
cmp
fcomip
fldcw
mov
stc
rclb
mov
cwtl
or
insb
or
pop
popa
insb
lcall
jmp
leave
inc
cld
adc
cmp
mov
out
ljmp
or
or
dec
pushf
mov
lahf
mov
jg
and
jae
mov
adc
out
and
lret
mov
pop
push
pushf
jne
pop
add
or
sbb
mov
mov
mov
leave
push
push
lcall
push
adc
cmp
sahf
lds
mov
ret
jge
lret
ljmp
stos
int
xchg
rorb
dec
and
dec
mov
repz
jae
inc
lcall
xor
inc
and
pop
xor
xor
aaa
das
and
fldt
ljmp
cld
jo
cmp
jg
inc
iret
mov
pushl
mov
lods
cli
cli
add
xchg
dec
cmp
rcll
cs
test
mov
inc
es
or
ja
or
incl
lret
mov
cmpsl
daa
loop
xchg
call
daa
xchg
mov
aaa
popf
or
and
repz
mov
xlat
push
ret
xor
and
stos
xchg
bound
sub
fisttps
jmp
inc
mov
jae
fs
call
xor
pop
mov
mov
in
ljmp
xchg
sub
sbb
sbb
dec
adc
mov
adc
stos
pop
arpl
test
fs
decl
adc
or
xorl
fisttpll
mov
xor
outsl
decl
mov
sbb
inc
xor
loop
and
fs
xlat
ss
repnz
inc
daa
mov
das
ja
push
mov
shrb
sbb
shrl
cmc
push
mov
jnp
jo
cmpb
repnz
xchg
mov
sub
sub
xchg
or
cmp
adc
lods
out
or
add
cmp
mov
pop
or
ja
mov
pushl
je
stos
sbb
gs
mov
jp
push
in
mov
lcall
scas
cmp
hlt
jge
movsb
lret
decl
sbb
jnp
or
mov
inc
or
adc
xor
ficomps
push
sub
fistpll
fimull
add
xchg
enter
outsl
and
aam
mov
jne
ljmp
outsb
xor
clc
data16
out
das
mov
pop
imul
js
jbe
je
mov
jp
mov
outsl
pushl
push
test
mov
std
mov
ljmp
xor
adc
add
or
pushl
ficomps
jle
fidivl
xchg
mov
xchg
jo
mov
mov
decl
mov
mov
scas
fisubs
cltd
pop
mov
lahf
xchg
mov
mov
ljmp
cld
xchg
adc
dec
movsl
jo
fiadds
rorb
pop
jecxz
or
jmp
mulb
lea
pop
or
sbb
pushl
inc
cwtl
enter
or
in
rcll
test
mov
xchg
push
sbb
xchg
jmp
adc
push
outsl
jp
mov
push
cmp
push
out
inc
cmp
data16
pop
mov
decl
sub
xchg
dec
out
jle
xor
insl
inc
adc
inc
xor
and
loope
lock
call
pushf
jnp
inc
dec
sub
out
xor
rorl
call
lret
xor
daa
xchg
cmp
dec
add
or
fpatan
dec
push
cs
mov
aaa
cld
inc
cmpsb
mul
jge
inc
out
push
aaa
xchg
xchg
mov
xchg
loop
lock
cmpsb
incl
imul
ljmp
pop
adcb
dec
iret
cmp
mov
incl
ficomps
mov
cmp
test
and
cmpsb
xchg
dec
sbb
push
cmpsl
js
mov
iret
jg
jp
call
jnp
shl
ret
aad
ljmp
lea
cli
insb
out
js
push
mov
fcom
nop
and
inc
add
fistpl
mov
dec
and
lcall
xor
adc
inc
add
adc
jo
inc
adc
mov
decl
add
in
pop
movsb
popa
fstl
repz
add
mov
mov
repz
lret
ja
mov
xor
jg
movsb
jmp
arpl
push
movsb
stc
sbb
add
roll
or
repnz
call
loope
add
stos
xchg
das
adcb
cwtl
lret
jg
pop
cld
in
ret
xchg
dec
mov
leave
or
call
cmp
sar
es
fiaddl
repnz
in
int
or
ret
cmpsb
popf
push
incl
sub
lahf
lds
nop
das
push
out
mov
or
xchg
out
cmp
in
jecxz
incl
pushf
mov
mov
ljmp
rcr
mov
fbstp
mov
repnz
int
sahf
inc
add
xor
jnp
repz
xchg
mov
push
pop
mov
aaa
add
shrb
inc
mov
call
mov
fidivl
inc
jmp
hlt
cwtl
xor
sarl
fucom
sbb
jmp
pop
fsubrl
push
cmp
loop
nop
cmp
sbb
gs
pop
popf
mov
ficoml
movsb
enter
div
loope
rcll
mov
nop
mov
cmp
fs
pop
lock
repnz
stos
jnp
jecxz
xchg
cmp
addr16
pop
out
pusha
call
inc
xchg
aas
and
ret
arpl
out
stos
sbb
nop
add
sahf
jnp
mov
call
mov
addr16
sbb
mov
mov
cmc
mov
mov
cwtl
mov
ljmp
ja
pop
jb
inc
sahf
pushf
pop
jg
jmp
jbe
aad
cld
sti
into
xchg
or
addb
sti
jl
popa
out
clc
jmp
addb
in
push
ja
or
fwait
bound
ss
nop
inc
mov
decl
lock
jnp
ret
cmp
std
scas
leave
cmp
icebp
jns
std
cmpb
dec
in
cmp
das
out
mov
fiaddl
mov
jbe
incl
pop
inc
hlt
inc
mov
jnp
mov
pop
inc
popf
stc
rcl
pusha
add
test
call
and
push
es
pushf
and
stos
mov
cmpsb
push
stos
xchg
cli
enter
fsts
or
xchg
mov
mov
jp
leave
sar
loope
mov
into
fnstenv
push
mov
subl
test
addr16
rol
into
aas
stos
out
ja
fisubl
outsb
xor
sar
std
out
je
dec
in
inc
mov
or
xchg
sahf
jg
jge
imull
outsb
mov
adc
adc
push
jg
int
xchg
je
jb
pop
repnz
clc
incl
or
aas
cmp
mov
xor
add
out
in
xor
xlat
inc
inc
ja
ljmp
sbb
in
test
mov
data16
xchg
push
inc
stos
cmp
sbb
aam
jmp
decl
sub
cld
xor
into
jmp
fs
xchg
bound
js
dec
repz
push
xchg
mov
pop
cmp
inc
shll
cmp
or
jnp
sahf
into
dec
add
push
std
call
shll
jp
lods
sbb
in
xchg
lea
xchg
fwait
push
lock
xor
mov
jb
dec
mov
pusha
fcompl
mov
and
cli
mov
inc
lcall
jge
push
adcb
cmp
leave
mov
mov
or
jmp
or
dec
adc
enter
fidivl
sub
jmp
lods
push
ljmp
stos
scas
imul
dec
mov
sub
sub
aaa
add
sub
call
and
scas
sub
mov
dec
cwtl
mov
mov
packuswb
in
ud0
out
clc
test
mov
es
daa
stos
inc
xchg
cmp
pushf
dec
jo
cld
pop
sub
sbb
lds
call
push
rol
fidivrl
loopne
jg
pusha
jmp
aam
lods
ljmp
es
ljmp
icebp
xor
pop
les
aam
ljmp
shll
and
rorb
cmp
push
adc
mov
dec
rol
xchg
in
pushl
xorl
adc
imul
jle
xchg
and
mov
popf
movsl
aas
and
inc
sti
lcall
test
xor
stos
jmp
jge
push
insb
imul
out
ljmp
jnp
push
movsb
fptan
in
out
and
mov
test
test
pop
pushl
mov
ss
inc
lods
mov
push
xor
and
sub
in
fchs
xchg
cmp
mov
pop
js
mov
rcrl
jmp
pop
mov
add
sbb
call
push
or
inc
push
mov
cmp
outsl
mov
mov
xlat
cs
inc
roll
ljmp
ds
or
or
stos
rorl
cli
cmp
cmp
jnp
xlat
add
dec
or
or
das
hlt
lea
aas
adc
pop
jb
aaa
jp
inc
aam
call
add
lcall
hlt
fs
fucomip
and
inc
cmp
push
int
sbb
pushl
push
mov
mov
inc
push
ss
sete
scas
mov
adc
dec
into
sbb
setbe
push
mov
incl
lret
repnz
adc
scas
int3
lods
mov
dec
push
leave
xchg
sbb
jecxz
or
cld
jge
xchg
xor
ja
repz
cmpsb
adc
push
inc
mov
imul
and
outsl
incl
mov
adc
into
inc
inc
scas
ljmp
mov
jmp
mov
aas
jne
cli
ficoml
xor
jns
adc
add
dec
sub
push
aad
sbb
push
fsubr
cltd
adc
int3
and
ljmp
add
cltd
mov
mov
mov
mov
ljmp
push
outsb
cmpsb
aad
jg
aas
sahf
nop
xchg
in
jnp
les
and
add
ljmp
cli
sub
mov
addb
adc
stos
in
out
xchg
push
incl
fnstenv
ss
mov
sub
stc
sub
lcall
insl
loop
cmpl
or
inc
hlt
push
ljmp
mov
incl
cmp
movsl
add
pop
lahf
test
cmpsb
gs
jecxz
xchg
pop
mov
inc
cmpl
sub
dec
pop
adcb
push
rep
das
xchg
jae
jmp
jg
jg
dec
rolb
push
cmp
jmp
imul
mov
xchg
test
movsl
mov
inc
insl
xor
icebp
xchg
xor
xchg
or
mov
sbb
mov
movsb
insl
xor
jbe
or
mov
pushl
sub
sub
mov
dec
pop
dec
mov
stos
sub
sbb
inc
add
cmpsb
inc
lret
lcall
pop
frstor
push
dec
cli
pop
xchg
mov
fucomi
push
push
mov
sbb
incl
fsubrs
fwait
xor
mov
sbb
out
stos
js
stos
rcrl
ljmp
sbb
mov
and
xchg
cli
and
mov
or
imul
inc
es
stos
icebp
popf
mov
mov
pop
xor
stos
daa
loop
lret
sub
inc
adc
mov
std
inc
inc
push
mov
add
push
jo
imul
adc
cmp
pop
lret
dec
out
add
filds
pop
pop
xor
jb
jmp
push
and
call
jg
incl
movb
es
push
cmp
outsb
adc
lret
insl
mov
movsb
jge
jg
push
jle
out
shll
and
mov
dec
and
inc
lret
adc
rolb
mov
sbb
and
incb
push
xchg
mov
lcall
jle
arpl
or
mov
cs
cmp
lret
aaa
imul
push
push
mov
inc
push
xor
mov
inc
dec
aaa
mov
outsb
out
call
xor
mov
push
leave
lock
nop
cmp
decl
xor
repz
stos
mov
xchg
add
jp
sti
and
xor
cmpsl
call
mov
add
iret
lret
popf
lods
enter
rcrb
inc
ret
jno
or
ljmp
movsl
add
push
xchg
ljmp
aas
inc
ret
sbb
daa
inc
mov
cmp
push
inc
lods
gs
mov
mov
xchg
paddusb
push
std
call
test
xor
ret
jo
lahf
sbb
pop
pop
popa
lahf
add
mov
cld
sbb
bound
mov
popf
in
test
mov
and
dec
jl
cmp
test
pushf
and
cli
call
movsb
adc
sahf
ret
push
jecxz
pop
jbe
push
ds
adc
incl
sbb
mov
adc
mov
ret
add
incl
in
or
negl
or
into
lret
divb
sub
stc
divb
and
adc
and
mov
add
xorb
imul
mov
outsb
test
add
jnp
ljmp
add
ret
inc
cmp
fdivp
mov
cmpsb
xchg
xchg
pop
push
sbb
decl
mov
cld
popf
inc
cmpb
pop
jno
push
xchg
cmc
rorb
data16
lcall
orb
sar
dec
mov
xchg
jge
inc
shl
sbb
stos
in
cmp
push
lret
jp
dec
rcl
xchg
outsb
jmp
lock
pop
xchg
lcall
bound
aad
hlt
into
cmp
adc
mov
push
sbb
test
ljmp
xchg
lods
insb
cmpsl
popa
sbb
pop
pop
aam
pusha
jg
push
ret
sahf
push
enter
add
or
lcall
or
scas
ficoms
xchg
popf
rcll
jb
jmp
dec
inc
popa
movsl
pop
xor
jno
pop
in
cli
add
popa
insl
hlt
scas
std
cmc
push
stc
pushl
mov
lock
push
jno
cmpsb
mov
jo
pop
mov
loope
mov
mov
insl
das
push
xor
cmp
sbb
aaa
inc
in
clc
or
push
in
and
mov
xchg
mov
sub
cs
and
in
mov
std
addl
cmc
xchg
test
in
in
incl
cld
mov
outsl
mov
jmp
add
lret
push
bound
xchg
adc
jmp
les
mov
or
pop
push
jae
mov
ficomps
xor
mov
cltd
and
pop
pop
add
roll
pop
cmp
mulw
mov
xlat
int3
idiv
call
jne
shlb
mov
andb
or
jmp
or
imul
cli
mov
xchg
testl
fisubl
xor
jge
lcall
out
shrl
mov
cmp
dec
je
fcompl
lock
data16
fimull
or
incl
test
out
pop
daa
cmp
xchg
pop
cs
and
or
cli
scas
push
pop
sbb
add
sbb
ret
adcb
in
incl
mov
lcall
jge
mov
jmp
mov
dec
iret
pushf
out
aaa
or
jae
xchg
cmp
pop
fists
add
daa
jl
int
decb
sbb
push
mov
pop
mov
sti
sahf
mov
shll
inc
dec
cmp
push
jo,pt
iret
mov
or
inc
sbb
aad
rclb
popa
cmp
nop
cmpsl
or
lcall
inc
in
cmp
jne
movsb
mov
mov
xchg
xchg
xchg
nop
jns
xchg
dec
push
jnp
inc
fstl
push
cmpl
fsubl
or
loop
jbe
add
insl
std
es
out
sub
shlb
fsubl
pop
dec
cmc
and
stos
insb
adc
push
xor
lretw
sub
sub
mov
ljmp
arpl
push
icebp
cld
mov
ret
cld
lods
mov
add
ljmp
mov
bound
and
xchg
popf
icebp
xchg
xchg
fistl
mov
das
pop
sbb
mov
sub
mov
aas
mov
sbb
rcrb
or
incl
clc
adc
pusha
shr
popa
lea
push
or
outsb
loope
decl
testb
lods
xchg
adc
cltd
hlt
and
or
or
cmc
sbb
sub
add
je
or
mov
jmp
lret
out
movsb
cmp
cld
es
fdivl
ret
jb
pop
les
pop
hlt
mov
or
push
adc
jp
stos
xor
push
or
dec
and
push
cmp
fcoml
shl
fstpl
xor
or
stos
sbb
inc
add
xchg
dec
push
xor
inc
inc
decl
inc
ds
fcoms
jo
out
addr16
in
jbe
xlat
in
xchg
lcall
mov
mov
xor
incl
scas
sub
push
sbb
jbe
push
mov
lds
jp
xchg
lcall
jo
xchg
push
sahf
or
pop
loop
jns
inc
sub
mov
int
add
jmp
add
loopne
daa
xchg
push
icebp
pop
push
sbbl
in
lods
sbb
xor
jmp
andb
add
ja
pop
inc
es
out
pop
js
gs
lcall
arpl
sub
xorb
lret
cli
jbe
push
mov
mov
mov
das
insb
push
xor
inc
pushw
lods
jg
movsb
mov
inc
sbb
pop
adc
or
ja
out
aad
pop
aad
fldenv
mov
and
xchg
stos
jmp
das
or
roll
lcall
call
adc
test
jnp
lret
ret
mov
out
aam
test
cmp
fidivrl
xchg
sbb
adc
xor
std
bound
cmp
call
sbb
fwait
mov
sub
or
leave
scas
xor
aam
dec
in
xor
ljmp
movb
pushf
std
jmp
lahf
out
in
cmpl
out
loop
adc
ljmp
inc
sbb
or
sahf
popa
mov
cmp
imul
and
cmpsl
sbb
or
lcall
mov
mov
adc
mov
subb
mov
test
call
or
mov
mov
and
mov
ds
adc
test
loope
dec
mov
dec
scas
mov
nop
leave
jecxz
fwait
int3
push
add
mull
jle
jg
js
sbb
pop
leave
enter
lods
dec
mov
ret
add
xor
clc
xchg
out
stos
add
adc
or
adc
sbb
into
int3
jo
jmp
out
outsb
bound
pop
sti
hlt
mov
adc
mov
mov
ljmp
jno
sub
jns
flds
inc
xchg
out
fucom
stos
insb
xor
cmp
dec
mov
sub
add
fldcw
push
jp
inc
sub
gs
adc
cmpsl
call
cmc
xchg
xor
or
test
aas
adcb
and
lds
dec
fs
and
push
fwait
bound
sbb
add
mov
xor
add
out
mov
mov
push
sbb
lcall
lret
rolb
adc
aad
or
incl
adc
inc
ds
and
sbb
pushf
iret
scas
ret
lods
and
jmp
adc
mov
fdivs
je
mov
lds
pushl
or
fbstp
fdivp
fwait
stc
dec
lods
ficoml
insl
out
xor
mov
push
sbb
decl
jne
outsb
hlt
movsl
icebp
cwtl
or
in
loopne
mov
popf
lods
pop
adc
dec
or
call
mov
add
fsubr
inc
sti
scas
incl
mov
mov
movsb
sub
jp
and
out
mov
mov
lcall
jle
sahf
notb
hlt
ss
and
mov
scas
or
mov
js
std
sbb
pop
lods
cmp
std
lock
outsl
mov
ja
mov
in
test
ffree
rcl
cwtl
repz
jbe
out
jns
fdiv
push
decl
test
mov
out
insb
std
push
sub
cli
aam
mov
push
sub
jmp
es
rorb
mov
push
dec
xor
xchg
iret
mov
dec
jbe
jb
pushf
scas
lcall
sbb
cmc
jmp
ljmp
mov
mul
mov
xchg
sarb
add
out
cmp
and
mov
movsl
mov
loope
adc
mov
iret
popa
jns
xchg
pop
les
dec
rol
inc
mov
mov
pusha
imul
inc
cmc
ret
dec
jl
push
ds
xchg
pushf
cmp
fistpll
insb
adc
jg
jmp
or
xchg
subl
decl
out
es
mov
daa
dec
cwtl
lret
add
std
in
cmp
lcall
jle
fcoml
imul
push
jl
mov
and
repz
lcall
xor
out
add
repnz
jle
ljmp
loope
sbb
js
aaa
mov
sahf
push
call
into
xchg
jmp
out
pop
jmp
xchg
and
add
rcll
jge
enter
notb
les
clc
mov
shrl
push
mov
lret
fimuls
call
andl
jno,pn
or
adc
sub
enter
ljmp
cli
cltd
mov
jge
aaa
arpl
pushf
mov
mov
xchg
ljmp
or
test
xchg
mov
adc
xchg
mov
pop
loopne
aaa
sbb
cmp
mov
pusha
scas
fwait
pop
cmp
and
enter
scas
insb
repz
push
jbe
popf
mov
adc
xor
cwtl
lock
push
jmp
sub
xlat
push
lds
xchg
xlat
dec
test
jl
cld
jne
stc
adc
call
lock
popa
mov
icebp
in
enter
test
inc
mov
and
insl
leave
mov
call
mov
data16
shl
out
test
dec
inc
sbb
ljmp
mov
pop
mov
cmp
pop
fcomps
xchg
insl
add
pop
mov
pop
gs
pushl
fadd
in
std
fs
lock
shll
aad
inc
add
pushf
mov
xchg
dec
incl
sti
lret
sub
push
in
inc
xor
das
incl
cmp
mov
mov
add
lret
movsl
pushf
sub
mov
or
or
cmp
ffree
out
addr16
dec
mov
dec
dec
in
inc
pop
mov
inc
cmpsl
in
mov
adc
sub
cmpsb
mov
pushl
jecxz
icebp
je
add
mov
pusha
or
hlt
mov
and
addr16
mov
mov
lret
scas
jns
movsb
rcrl
sahf
ror
test
sbb
and
inc
adc
pop
loop
mov
aam
xchg
push
mov
nop
jp
stos
rcl
fnsave
add
or
mov
mov
call
ds
sub
rorb
mov
push
aaa
push
cs
pop
mov
outsl
ss
dec
cmpsl
dec
inc
lret
mov
jecxz
sub
lcall
xor
jae
int
push
cmp
int3
out
dec
aas
cmc
push
int3
and
test
or
lcall
lret
dec
jnp
stos
xor
popf
jg
aaa
dec
sub
inc
add
call
imul
adc
sub
xchg
sub
mov
incl
imul
xchg
loopne
fwait
inc
btr
sarb
jne
notb
xor
int
incb
mov
into
jbe
scas
cli
mov
and
pop
jge
jp
mov
movsb
ljmp
lcall
addl
lds
inc
fstps
jb
shl
add
fs
out
sbb
out
inc
adc
or
sub
cltd
jle
mov
jle
and
rolb
mov
jp
adc
adc
sbb
in
mov
es
or
out
out
mov
decl
cs
fisubs
adc
sbb
mov
push
ljmp
int
mov
mov
inc
in
cmp
sub
cmp
bswap
and
lds
incl
call
out
sub
mov
jmp
popa
lds
clc
rorb
dec
stc
sbb
push
push
mov
jge
ljmp
lea
enter
sahf
mov
mov
ljmp
jge
push
jl
adc
jge
sub
sbb
push
sahf
inc
je
movsb
mov
pushl
aam
jbe
mov
imul
stos
xchg
cmp
push
leave
cmp
ljmp
mov
push
and
jg
ret
add
sti
sub
cmpsl
adc
test
inc
pop
mov
repnz
call
mov
fldl
cld
sahf
rclb
jp
add
dec
mov
mov
lcall
sbb
test
mov
mov
call
decb
popl
test
cwtl
push
outsl
mov
inc
gs
mov
sahf
jbe
pop
inc
cltd
subl
sbb
stc
jl
jg
mov
push
addr16
jg
mov
fwait
adc
cld
and
in
pop
pop
repnz
jmp
cld
jne
sbb
lods
cld
bnd
pop
lret
divb
adc
jmp
mov
clc
jl
mov
lret
push
mov
adc
enter
xchg
incb
jmp
insb
xchg
mov
mov
sbb
jo
pop
sub
mov
out
and
stc
sar
push
std
jmp
adc
cmp
push
sbb
out
imul
jmp
data16
or
adc
ret
pop
cmp
jge
sbb
nop
jg
mov
pop
rorb
das
mov
pop
xchg
cs
jmp
stc
repnz
imul
int3
pop
popa
xor
mov
cwtl
and
add
insl
dec
icebp
pushl
xchg
stc
jno
mov
push
ret
dec
push
in
fs
call
jg
dec
subb
dec
cmp
fsubp
dec
push
sbb
frndint
daa
addr16
jp
jmp
es
clc
js
ja
dec
xor
pop
cmpsb
sub
negl
push
out
data16
loop
ljmp
clc
jge
cmp
repnz
insb
test
adc
js
or
arpl
cmp
ljmp
imul
pop
mov
shrb
pop
dec
push
cltd
push
mov
sbb
or
int3
mov
decl
cmp
dec
loope
ficomps
cwtl
sbb
push
mov
jg
rcll
loope
loop
fildll
insl
lods
dec
imul
add
push
jbe
push
ja
les
xchg
mov
and
mov
jns
push
mov
mov
push
push
std
jmp
cld
incb
cmc
mov
sti
xchg
fildl
decl
sub
lods
mov
ljmp
dec
sub
sub
fwait
decl
mov
test
mov
addb
insl
rolb
inc
call
mov
mov
dec
add
cmp
or
mov
mov
ds
cli
cs
sbb
fwait
out
mov
mov
lcall
pop
aaa
out
sub
dec
mov
nop
aaa
mov
loopne
push
mov
adc
incl
inc
pop
mov
cmc
jg
lret
rclb
mov
stc
aam
fcomps
sbb
dec
adc
inc
xchg
fisubrs
lds
mov
inc
fimull
sar
jp
in
dec
movsl
fldcw
jl
fiadds
in
sub
rcrl
mov
jg
or
lods
hlt
dec
mov
pusha
shrb
test
mov
out
decl
lods
fsubs
in
sub
maxps
sub
adc
or
call
cmp
push
mov
jmp
ucomiss
jno
jo
sub
stos
mov
call
pop
sete
xchg
in
xchg
lret
push
pop
pusha
scas
sub
mov
pop
data16
pushl
xchg
jb
add
sbb
stos
dec
and
mov
adc
xchg
lret
sarb
aad
mov
sahf
lret
sbb
or
sub
lods
data16
sbb
ret
ja
decl
pop
into
mov
mov
mov
add
ljmp
mov
sub
je
mov
jno
mov
xor
jg
pusha
les
in
stc
js
mov
lret
jbe
or
subb
popa
xchg
inc
add
fabs
jne
inc
adc
mov
jb
add
xorb
push
adc
ret
imul
mov
cmp
repnz
out
js
sarb
cmp
mov
rcl
jp
push
sub
jb
push
iret
adcb
inc
sahf
add
gs
sbb
fs
push
out
repnz
ljmp
cli
nop
push
jns
mov
call
dec
lea
aas
and
cmpsl
jae
xor
cmc
ljmp
outsb
xchg
inc
aam
andl
pop
adc
or
ret
lcall
xor
cld
fwait
addb
xchg
adc
jp
and
out
aas
ljmp
clc
mov
inc
aad
mov
insl
nop
arpl
out
psubd
int
mov
incl
or
pop
mov
add
sbb
sbbl
decl
or
enter
das
sbb
pushf
adc
mov
xor
ds
addr16
xchg
mov
sahf
pop
fidivrs
inc
lcall
cltd
jne
decl
mov
jbe
jo
mov
cmc
cld
stos
repnz
pop
aad
cld
call
xchg
push
ja
mov
sbbb
outsl
adc
data16
ljmp
fisubrl
aad
dec
popa
out
and
test
cmp
jg
dec
outsl
rorl
xor
jb
add
dec
sbb
ficompl
cmp
adc
dec
inc
enter
jmp
or
lods
out
loop
pop
fidivs
jg
xchg
or
cmp
jo
js
lcall
and
je
mov
fcmovnu
push
mov
and
xchg
sbb
nop
pop
repz
sar
sub
xlat
outsb
js
sbb
fildll
sub
ja
jmp
sahf
push
cmpb
fsubs
mov
outsb
pushf
stc
pop
gs
add
data16
add
lcall
mov
les
pop
stos
xor
fisubrs
data16
js
jle
adc
mov
ljmp
jbe
jge
stc
cli
es
or
cli
mov
jg
cmc
add
cmp
hlt
inc
or
loop
lds
and
bound
inc
pushf
mov
xchg
incl
fwait
movsb
bound
sub
in
inc
test
cmp
inc
cmpb
inc
mov
pop
shrl
cwtl
lcall
incl
test
xchg
ficoml
sarb
adc
fisubs
mov
ljmp
loop
aas
repz
jmp
movsb
pushf
arpl
push
arpl
cmp
mov
lret
and
popa
scas
scas
inc
and
jmp
je
icebp
stc
imul
fldcw
jmp
loopne
ret
push
add
mov
loopne
add
aam
inc
xchg
mov
xor
cld
jp
es
imul
sbb
lcall
lret
sbb
test
pop
adc
and
les
cmpsb
or
push
flds
pushl
stos
pop
scas
xchg
repnz
movsl
clc
stc
fimull
pop
pushf
xorl
jmp
mov
scas
push
mov
or
popf
fiadds
aam
ret
pop
popf
push
add
jle
int
mov
push
mov
jge
push
cli
nop
xchg
fsts
adc
mov
sub
call
and
sub
rcl
adc
sbb
mov
arpl
cld
push
cmp
mov
decb
adc
jo
cmc
push
repnz
aaa
and
add
jl
shl
fisttpll
pop
add
jo
in
leave
or
cli
adc
cmpl
add
or
push
xchg
cmp
and
inc
iret
jg
jno
jg
inc
and
adc
insl
pop
sbb
inc
ret
cli
lcall
das
push
rclb
sub
mov
addb
mov
dec
pop
mov
mov
jnp
and
enter
and
leave
jbe
mov
push
push
nop
daa
leave
mov
xor
sbb
sbb
decl
mov
pop
insb
pop
shl
iret
sub
xchg
sbbl
in
mov
jb
jmp
push
imul
insb
into
pop
adc
push
std
add
dec
mov
stos
cmp
lahf
sub
push
xchg
add
jnp
jle
add
lods
push
mov
mov
cmpsb
ret
pushl
sti
andl
cmpsb
cwtl
dec
jg
sarb
sub
jns
jg
xor
sbb
ljmp
loopne
scas
dec
dec
xor
sbb
call
pop
ds
inc
and
filds
fnstsw
sub
xor
in
jne
mov
sub
jmp
jge
cmp
adc
xchg
push
fdivp
jo
fprem
sti
pop
ja
and
cwtl
and
out
cli
fcmovne
dec
inc
pop
add
lret
add
xor
push
fmuls
stc
mov
iret
lret
sbb
mov
lcall
aas
push
xor
inc
enter
cmpsl
mov
into
loopne
ds
decl
out
cwtl
jae
dec
out
daa
mov
lea
lret
push
pop
scas
aad
and
lahf
dec
lcall
cld
pop
shll
mov
inc
dec
shlb
ffree
enter
push
push
bound
pop
inc
pop
es
out
and
dec
pop
sarb
xchg
into
sbb
jecxz
movsb
sbb
mov
orl
stc
sbb
inc
outsb
das
dec
add
sbb
incl
dec
insl
out
inc
mov
mov
xor
repz
mov
xor
jle
mov
jmp
add
ljmp
cmpsl
into
cmp
les
jnp
rep
mov
popf
add
decl
movsl
out
insb
lds
push
jnp
dec
sbb
clc
rol
sub
das
inc
xor
int3
dec
and
lcall
pop
jne
repz
scas
loopne
pop
in
div
loopne
in
jo
push
int3
fidivl
fwait
xor
mov
and
push
call
or
jmp
sbb
sbb
aad
sub
adc
and
in
and
sub
je
xchg
pop
fidivrs
fidivs
sbb
ja
ljmp
jns
aad
mov
rcr
or
ds
xchg
inc
inc
or
sbb
sarl
cli
jo
sbb
xchg
mov
mov
sbb
push
push
adcl
gs
jns
cmp
xor
scas
mov
inc
cwtl
inc
jmp
pop
lcall
inc
mov
ret
mov
rcr
mov
in
sbb
jge
arpl
test
lcall
or
xor
push
sub
mov
fdivrl
or
lods
lret
and
decl
inc
cwtl
or
add
std
sahf
jnp
sbb
jns
mov
hlt
lods
movl
ljmp
sub
push
adc
xor
es
push
lods
popa
push
cmp
incl
and
div
jne
ss
adc
fdivrp
fadds
xchg
mov
cld
dec
mov
add
inc
bound
jmp
sbb
fwait
int
push
push
and
pop
xor
lods
ret
inc
es
push
cmp
outsl
mov
and
sub
push
add
lock
lcall
jne
sbb
mov
inc
imul
jnp
popf
addr16
in
sub
shrb
lcall
jne
fdivl
push
js
xchg
sub
leave
mov
push
and
adc
leave
jge
shl
dec
add
mul
jnp
repnz
push
xor
cltd
lahf
hlt
mov
lret
xchg
sbb
nop
outsl
push
mov
cmc
addr16
xor
add
ss
cli
xchg
lcall
dec
mov
scas
stos
cmp
fildll
xor
push
pop
test
xor
rol
cmp
bound
scas
out
add
xlat
std
xor
jmp
mov
dec
jl
test
jo
lret
fimull
in
hlt
adc
out
or
dec
xorl
dec
repnz
popa
xchg
add
loopne
aas
sbb
rdmsr
lcall
sbb
mov
imul
stc
jmp
ret
data16
push
aaa
or
incl
pop
lds
mov
sub
mov
sub
sbb
cltd
insl
cs
push
xchg
cs
cmpsl
call
inc
lods
decl
jae
movsl
jle
incl
stc
sti
rcl
imul
outsb
dec
push
jmp
adcb
dec
call
jne
dec
les
cwtl
sbb
xor
adc
sahf
mov
dec
sbb
jl
xchg
pushl
lret
fwait
out
stc
or
xorb
sti
add
push
and
dec
incl
cmp
imul
lds
and
add
mov
xchg
jle
ljmp
decl
inc
xchg
aaa
and
xor
push
call
xor
or
aad
decl
mov
iret
inc
push
aad
lahf
cmc
xor
cmpsl
aam
ja
inc
inc
test
jnp
testl
repnz
add
and
jmp
xchg
sbbb
jmp
inc
push
movsl
add
sbb
inc
sub
insl
and
or
das
clc
sub
fisttpll
rcrl
dec
rol
clc
mov
jns
sahf
ss
pop
jo
pop
std
lcall
cmp
inc
ret
leave
push
loope
mov
jge
pop
movsb
cmpsl
ret
xor
inc
add
push
test
xchg
mov
sar
out
cli
incl
outsb
ljmp
push
stc
push
dec
cwtl
pop
jmp
hlt
pushl
mov
and
in
imul
xlat
mov
jg
in
loope
loope
mov
push
stos
test
sub
cmp
incl
jno
pop
dec
mov
pop
jle
jns
stos
sub
and
jmp
xor
jmp
out
call
xor
mov
pop
bound
mov
aaa
sbb
stos
test
mov
xchg
sbb
lcall
push
in
mov
mov
ret
stc
cli
loope
pop
adc
mov
pop
aaa
test
push
push
leave
mov
lods
mov
push
dec
fnstenv
fcmovbe
fisubrl
add
cmc
or
hlt
mov
sbb
lcall
lcall
jo
xor
jecxz,pn
fwait
inc
push
outsb
mov
hlt
in
aam
movsl
xchg
mov
dec
mov
inc
test
icebp
loope
mov
lds
lcall
test
pop
and
sub
or
inc
cli
xchg
pop
test
cld
dec
call
iret
in
sahf
add
push
mov
mov
icebp
out
aaa
imul
fidivs
add
lcall
ss
outsl
mov
imul
hlt
xchg
mov
ss
call
add
lret
cmp
or
repnz
leave
and
sbb
aad
sub
dec
cmp
decl
mov
mov
xchg
iret
sbb
arpl
mov
cmp
push
stos
in
cmp
cwtl
push
xor
pusha
push
inc
xchg
mov
test
push
sbb
xchg
cmp
sbb
xchg
test
jmp
jb
and
jecxz
dec
pop
push
sarb
aam
xchg
repz
xor
pop
dec
push
lahf
out
dec
testl
iret
notl
jg
jmp
cmp
inc
bound
daa
repnz
push
sbb
mov
shrl
out
decl
in
mov
adc
cmp
pop
in
dec
aam
fiaddl
mov
pushl
fbstp
add
and
clc
mov
xor
outsb
xor
int
mov
call
dec
and
cwtl
addb
test
mov
dec
jp
sbb
cld
mov
incl
cmpl
out
push
jns
popa
push
xchg
sahf
dec
cmp
test
inc
cmp
xor
loope
js
mov
mov
jne
inc
xor
mov
mov
xor
add
cld
xchg
xchg
out
enter
push
and
push
aas
insl
mov
cmpsb
iret
insl
push
sar
lods
adc
ds
scas
mov
inc
fldl
xor
pop
in
in
shrb
cmc
cmp
push
hlt
adc
frstor
and
xchg
in
fnstcw
je
push
les
sub
sar
jmp
cld
incl
and
mov
mov
scas
push
sub
dec
xor
popa
xchg
cli
decl
lret
mov
fs
sbbb
loop
add
rol
imul
data16
xor
and
dec
sbb
jns
jmp
or
pop
sub
scas
insl
xlat
insl
lcall
sti
in
dec
sbb
dec
inc
jbe
pop
xorl
ret
xchg
adc
pop
sar
cmpsl
and
and
adc
loope
clc
jmp
testl
popf
lods
jecxz
dec
or
mov
sbb
test
or
sahf
ljmp
test
adc
mov
mov
lcall
jns
mull
lock
neg
ljmp
adc
cmp
pushl
push
rclb
push
xchg
clc
dec
inc
mov
cli
mov
pop
cmp
fcompl
call
addr16
xor
arpl
pushf
cwtl
mov
push
inc
sti
ret
xchg
fisubs
push
pop
shr
mov
mov
cld
int
aaa
repnz
xor
jle
jg
xchg
pop
adc
lret
lock
push
fisubrs
mov
fwait
sub
mov
decl
das
mov
ja
insl
adc
out
std
push
es
push
dec
rorl
adc
add
fsubs
and
into
sbb
jl
rcrl
sbb
pop
loopne
and
insl
fsubp
mov
and
cmp
add
aaa
pushl
jb
in
inc
pop
or
push
or
jge
icebp
ret
jb
addr16
or
mov
push
sub
fbld
out
test
push
adc
ret
das
addr16
ljmp
xchg
aaa
iret
paddsw
pushf
jp
aaa
fdivrs
mov
test
js
dec
pop
shll
stos
adc
dec
adc
sub
push
fisubrs
sbb
in
jbe
dec
inc
add
fidivs
inc
sarl
out
mov
mov
xchg
shr
inc
int
fisubl
adc
fs
cltd
ret
enter
call
adc
push
stos
and
rorl
imul
or
mov
incl
adc
add
out
shl
das
jle
aad
jp
dec
mov
cmp
lods
and
sbb
pop
pop
push
imul
mov
inc
add
cmp
sahf
js
test
and
dec
mov
jmp
add
xlat
ror
lods
outsl
add
loope
loop
pop
movsb
lcall
push
ret
data16
sbb
dec
mov
push
movsl
mov
pop
and
stc
mov
pop
lock
sub
mov
pop
stos
dec
cmp
jmp
pushf
fimull
iret
lahf
es
jnp
push
int
dec
jae
jbe
jne
mov
decl
xchg
mov
adc
mov
mov
in
mov
push
lcall
fs
leave
jl
dec
inc
das
clc
lcall
outsb
std
ljmp
cli
lcall
lret
adc
adc
ffree
cli
sub
addb
add
xchg
clc
lods
ja
mov
paddusb
push
mov
pushl
fisubrs
daa
sub
imul
jle
loopne
int
int
jg
cli
fchs
lock
leave
filds
dec
dec
in
fadd
jge
ja
mov
jle
incl
sti
in
sub
es
addr16
dec
ret
add
pop
rcll
movsb
popa
mov
call
inc
pop
sbb
lahf
mov
addb
jle
lret
popa
call
leave
shlb
mov
xchg
mov
loopne
xor
push
pop
or
xchg
cmpsb
dec
movsb
pop
add
in
fwait
mov
inc
mov
jne
call
hlt
std
clc
jbe
fnstsw
pop
movsb
movsl
gs
das
xchg
call
cmc
and
add
push
aam
enter
aad
dec
sbb
decl
in
negb
cmpsb
sub
xor
jmp
add
in
add
fiaddl
jmp
sahf
das
inc
imul
in
aas
cli
sti
lods
xor
outsl
inc
scas
dec
xchg
mov
mov
sbb
jp
mov
pushl
ljmp
ret
lahf
mov
repz
sahf
mov
mov
sub
lcall
imul
in
lret
and
mov
inc
adc
jbe
test
cltd
ljmp
inc
add
xchg
insl
repnz
inc
insl
inc
mov
lds
int3
xlat
lods
popf
lcall
outsl
insb
mov
xor
fcoml
push
fisubrs
or
cli
xor
sub
pushf
mov
mov
cmpsb
sub
jns
repz
shlb
sbb
test
ljmp
cmp
mov
cmpsb
stos
jae
in
je
es
mov
shrb
adc
sbb
mov
sub
shlb
sub
call
shlb
xchg
mov
jg
pop
lret
cmc
js
repnz
dec
sarl
jp
cltd
pop
jne
pop
icebp
fdivs
fs
cmp
dec
mov
lds
dec
and
stc
jg
mov
mov
mov
in
jmp
jns
mov
push
loopne
in
icebp
push
add
call
outsb
jns
fcmovbe
adc
repz
lret
push
test
mov
ljmp
xchg
mov
push
sti
sub
sub
incl
jg
lods
inc
ss
mov
mov
or
data16
push
ret
mov
or
decl
xchg
std
mov
sbb
push
test
cmc
shr
shll
push
cmp
dec
mov
cs
out
adc
push
sbb
dec
xor
decl
xchg
inc
push
push
mov
aaa
mov
and
add
xchg
dec
add
inc
cmp
inc
std
sti
jmp
mov
aas
outsl
repnz
popa
outsb
repz
cs
decl
repz
sarl
inc
sub
pandn
or
setge
sbb
jle
outsl
and
jmp
lcall
arpl
sbb
xlat
pop
push
fiaddl
int3
push
hlt
inc
and
ja
xchg
std
jmp
dec
pop
xor
and
into
xor
in
dec
mov
icebp
adc
push
pop
pop
xchg
loop
mov
push
dec
cmp
orb
pop
scas
inc
pop
mov
lcall
mov
mov
stos
pop
cmpsb
pop
out
int3
fmuls
add
push
mov
sub
fstl
cmp
imull
or
mov
lods
call
inc
xchg
jb
sti
jnp
sbb
sub
loopne
pop
pop
push
scas
xor
xor
pushl
inc
inc
xchg
out
pop
jne
jmp
mov
rclb
adc
mov
in
loop
fisubl
sbb
mov
ror
or
mov
inc
int3
sti
mov
ljmp
idivb
cmp
jl
push
push
ja
sub
cli
pop
push
nop
adc
inc
mov
call
xor
test
data16
sub
lcall
jmp
cs
jae
pop
fstl
stc
mov
adc
xor
add
jmp
inc
sbb
mov
notl
or
test
adc
push
outsl
lock
push
les
test
xchg
je
icebp
mov
lods
and
cmpl
pop
jns
outsl
dec
adc
jb
test
adc
cltd
cwtl
or
add
pop
int3
inc
xchg
cwtl
ljmp
stos
stos
call
loop
cmpsb
je
test
idivb
lcall
arpl
push
es
jne
dec
dec
rorl
pop
mov
dec
cmp
xor
out
dec
xor
in
rcrb
sub
gs
stos
xor
jmp
movsb
addb
icebp
in
xchg
adc
stos
jno
insb
cmp
xchg
mov
lcall
decl
jnp
test
dec
movsl
cmp
or
out
out
rcr
incl
sbb
ljmp
int
dec
in
mov
inc
sti
xchg
adc
mov
movsb
jmp
repz
xor
mov
jmp
mov
push
sbb
std
ds
jecxz
loope
adc
enter
hlt
repnz
cwtl
dec
add
mov
decl
jns
sbb
test
jb
xor
push
test
lcall
filds
inc
aad
sti
lds
jg
sti
inc
and
out
mov
pop
fwait
xchg
cwtl
xchg
lahf
mov
jno
adcl
icebp
jbe
mov
int3
test
je
shlb
or
call
scas
subb
inc
push
mov
pop
inc
lock
add
pushl
ss
sarl
jge
xchg
push
pop
int3
ja
mov
lcall
push
movsl
outsb
bound
or
in
cli
dec
ds
pushf
aam
xchg
imul
insl
aaa
std
decl
lret
rolb
sub
xchg
stos
fs
and
sbb
mov
cli
std
xor
xor
in
or
jbe
mov
ror
pushf
enter
xlat
jg,pn
ljmp
inc
mov
cmpsb
int
icebp
pop
mov
pop
push
loope
or
incl
movsb
out
pop
rcrb
mov
mov
sub
jecxz
push
pushf
adc
lcall
icebp
movsb
mov
xchg
dec
mov
mov
pushf
fsubl
mov
out
push
jmp
add
pop
xor
dec
ljmp
xor
xchg
jl
scas
mov
cld
jnp
xor
adc
pop
mov
or
push
into
cmpsl
mov
test
inc
pushf
mov
dec
inc
icebp
sbb
lcall
xchg
pop
jno
jns
hlt
scas
mov
mov
decl
sbbl
out
addr16
cmp
fcomps
inc
rcl
sub
sub
inc
push
fdivrs
in
and
or
mov
pop
in
mov
clc
hlt
arpl
push
cli
ljmp
adc
nop
lcall
push
in
fidivs
repz
jmp
sahf
out
pop
dec
arpl
fdivs
mov
lods
cmpsb
add
daa
mov
mov
and
push
cmp
daa
xorb
ja
add
test
rcll
sub
jnp
ds
in
pop
mov
subb
test
and
jno
push
imulb
jmp
mov
xchg
push
pop
and
mov
fnstcw
mov
icebp
cli
push
lods
mov
cli
int3
mov
cmp
data16
scas
shr
test
push
jb
vandps
ljmp
call
shl
jmp
inc
sbb
mov
or
add
data16
cmp
mov
test
push
fstps
and
popf
test
cwtl
push
pop
lcall
fldt
iret
ret
aad
jg
push
mov
out
jno
out
pop
mov
and
stc
les
incl
dec
dec
notb
scas
sbb
rcr
ret
push
shll
movsl
out
adc
xor
pop
icebp
lcall
cmp
aad
rol
enter
mov
fcoml
in
add
push
daa
pushf
in
not
xlat
xor
lret
movsl
ljmp
dec
lods
es
das
jbe
scas
xchg
jge
and
inc
popf
dec
repnz
sbb
jle
or
decl
mov
adc
cmpsl
imul
shll
pushf
mull
loop
jmp
test
sahf
std
pop
mov
fildll
test
or
adc
mov
rcrb
hlt
data16
xchg
cmp
in
repnz
ljmp
pushl
mov
imul
leave
call
adc
mov
shrl
mov
mov
aaa
pop
imul
int
lret
es
lcall
in
pop
cmc
jle
daa
in
add
iret
xor
jb
add
jl
pop
xor
rorb
aam
xchg
cmc
sar
out
dec
lret
push
clc
dec
orl
cmp
jge
je
sbb
test
push
push
jg
addr16
fprem
adc
and
add
lahf
imul
loop
add
mov
out
cmp
jmp
sub
mov
push
pop
shlb
cmp
popf
push
ljmp
mulb
cli
lods
and
inc
jnp
push
fnsave
mov
out
in
sbb
and
jp
mov
ds
xchg
mov
sub
or
ret
lcall
push
sbb
and
dec
test
in
sub
push
mov
fsubp
add
mov
adc
dec
cmp
mov
mov
pushl
sub
daa
js
aam
xor
xor
mov
or
pop
test
call
mov
out
aas
int3
mov
cmpsl
popf
fldt
fcomps
jg
clc
pop
and
xchg
mov
mov
imul
cwtl
std
or
mov
add
negb
pusha
xchg
mov
jns
int
sbb
scas
or
stos
jg
test
dec
in
mov
fsts
inc
decl
push
popa
mov
ds
dec
clc
add
jb
pushl
xor
push
les
outsl
es
lock
push
push
fisubl
lret
mov
cmc
call
push
push
mov
xchg
add
push
aas
add
inc
ds
jl
fisubs
cld
cmpsb
adc
pushf
out
xor
xchg
cld
inc
repnz
daa
add
incl
push
ds
lret
in
dec
in
mov
xlat
aad
dec
push
push
mov
pop
or
jg
incl
mov
es
and
add
lret
jmp
in
daa
stos
pushl
mov
sbbl
pop
ror
lcall
movb
movsl
xchg
cld
mov
mov
xchg
dec
addr16
jb
sbb
pop
or
call
lcall
lods
in
mov
out
mov
sti
mov
cmp
aam
fmul
xor
lcall
call
je
inc
xor
jb
push
xchg
adc
pop
cmp
push
imulb
rcrl
jg
xor
mov
cmp
xor
sub
test
mov
inc
xchg
mov
sbb
fs
xchg
cmp
lcall
or
sub
mov
xchg
mov
cli
pop
inc
aas
and
mov
inc
call
stos
inc
push
rcrl
loop
outsl
rcrb
scas
jne
jp
test
imul
icebp
xchg
or
mov
stos
sub
ficoml
cmp
lock
sbb
into
mov
cmp
jbe
sbb
in
pop
std
call
add
jae
xor
scas
iret
shll
in
lahf
mov
mov
mov
and
call
or
inc
and
adc
sahf
repnz
cltd
icebp
stc
dec
adc
fmull
or
arpl
push
sbb
xchg
cwtl
pop
jmp
mov
enter
jp
xor
bound
shlb
fcmovne
mov
out
int
jo
imul
out
adc
inc
or
pop
or
fisubrs
push
push
sti
jno
push
js
clc
test
pushl
inc
shr
call
or
pusha
mov
inc
test
and
dec
jecxz
and
lds
push
cmc
xchg
orl
test
mov
aad
or
in
cmpsl
fwait
in
jge
sub
incl
inc
neg
push
jae
cmp
sub
leave
outsb
imull
subl
jmp
cmc
inc
push
test
mov
js
dec
mov
mov
rolb
add
inc
cli
pop
mov
push
mov
ljmp
ja
cs
dec
mov
xchg
cwtl
inc
inc
pop
test
notl
dec
pop
cmpsb
and
sbb
cli
jbe
cld
incl
inc
nop
std
divl
add
shr
das
mov
sbbl
ljmp
addr16
pop
inc
cmc
movsl
cmp
rclb
pop
aas
movsb
xchg
dec
and
sti
dec
cwtl
icebp
loop
add
cmpl
inc
xchg
stos
mov
test
lcall
inc
fcmovnu
aaa
adc
push
jge
mov
xor
cmp
dec
in
mov
repnz
jg
and
faddp
out
inc
fsubrp
or
inc
fcmovu
testl
sbbb
lods
scas
pop
enter
jmp
fstpl
movsb
addr16
mov
mov
mov
push
idivl
or
hlt
inc
jne
and
pop
aad
lahf
iret
iret
pop
dec
xor
out
mov
ljmp
fldpi
in
cmpsb
pop
jb
xor
ja
ljmp
inc
xchg
inc
popa
icebp
adc
lcall
ja
push
mov
fists
pop
or
jbe
dec
add
mov
mov
pop
ljmp
notl
movsb
sub
mov
fcmove
in
and
push
jb
fiaddl
aas
mov
dec
imul
push
lods
cmp
or
loope
dec
mov
push
daa
adc
mov
push
jmp
shlb
jns
jmp
test
sbb
xchg
xchg
sbb
mov
scas
movsb
pop
sbb
pop
add
xor
in
dec
push
jbe
loope
add
xchg
pop
xor
lret
jnp
lea
out
jge
clc
ljmp
inc
cmp
and
in
fbstp
mov
addr16
push
lods
gs
xchg
and
cwtl
repnz
arpl
hlt
insb
loopne
sbb
push
dec
mov
or
lret
add
jnp
fimuls
ljmp
push
rolb
adc
mov
mov
xor
pop
fwait
dec
push
imul
out
clc
jmp
or
decb
jo
mov
cltd
and
in
aas
cmp
das
lcall
adc
xchg
or
std
stos
or
in
pop
lcall
stos
sbb
stos
cmp
cmp
ficompl
lret
jae
aas
and
loopne
sbb
mov
push
dec
or
pushl
imul
xchg
mov
test
decl
gs
pushf
push
push
mov
dec
xchg
mov
sbb
xchg
lret
mov
push
lods
pop
cmp
incl
aaa
cmpsl
fs
dec
sar
mov
jg
inc
push
sub
jle
pop
sub
pop
orb
and
out
jp
pop
insl
push
sub
ljmp
mov
xchg
cmpsl
dec
ret
insb
cld
cmp
lcall
ret
mov
ss
jl
push
and
test
dec
sub
bound
jg
imul
jno
out
xor
ds
xchg
mov
das
mov
and
lcall
sahf
in
fs
mov
nop
push
adc
push
dec
mov
pop
cmp
jmp
cltd
push
rcrb
jmp
leave
movsl
insb
mov
test
sub
or
or
cli
cli
jmp
jo
and
sub
xchg
leave
cli
fstps
mov
aam
push
xchg
mov
incl
dec
sub
imul
or
mov
xlat
inc
hlt
leave
inc
in
ficompl
sbb
dec
or
add
call
and
divl
clc
incl
dec
jnp
mov
insl
test
mov
cli
in
mov
movsb
pop
das
inc
dec
lcall
pop
xchg
jae
aad
into
inc
mov
cmc
mov
sbb
mov
push
daa
pop
or
fcomip
call
jmp
push
aam
test
cmpsl
fmull
ljmp
sub
mov
addr16
loop
cwtl
scas
imul
leave
fistl
ret
out
incl
jae
sbb
dec
insb
jge
jle
int3
aas
rcll
inc
ret
daa
icebp
rolb
fldcw
call
mov
adc
dec
ret
outsb
ja
xor
roll
cld
cli
cmp
inc
pop
mulb
fcomip
dec
cmp
pop
sub
shll
push
gs
inc
xchg
jp
lcall
push
add
mov
and
xchg
dec
repnz
mov
jo
pop
pop
lcall
mov
inc
mov
outsl
pop
push
test
add
repnz
xchg
push
imul
mov
lcall
les
mov
outsb
push
popa
cli
mov
into
sarl
scas
in
jnp
pusha
jecxz
jg
ret
inc
xor
js
push
jp
add
xchg
loopne
roll
call
repnz
mov
cld
push
xchg
mov
ret
push
in
pop
enter
adc
test
jge
test
mov
add
call
imul
xlat
popa
inc
sti
mov
mov
mov
enter
out
in
sub
call
cmp
pop
dec
inc
inc
and
push
sub
test
imul
cs
out
sbb
and
sbbl
pop
call
cmc
mov
cmp
mov
iret
ret
pushl
cmpsb
jno
jge
jb
call
les
sub
adc
or
jg
or
repz
out
popf
shrl
jg
popa
inc
sbb
pop
movsl
fwait
push
jbe
jmp
push
sub
loop
add
ficompl
incl
rcll
mov
rorl
adc
and
cmp
stos
sub
cmc
lods
rcrl
call
and
mov
lcall
add
inc
cmp
mov
loop
ljmp
sbb
pop
pusha
xchg
cmp
inc
shlb
pushf
push
jge
add
mov
push
incl
or
sbb
lods
loop
or
sbb
aad
nop
imul
pushl
push
mov
mov
mov
dec
leave
sarb
leave
ret
ljmp
jmp
xor
cvtps2pi
and
pop
scas
sahf
adc
mov
xchg
push
out
xor
xor
out
fldt
call
cmp
fidivs
stos
xchg
imul
andb
mov
or
int
movsb
inc
inc
jecxz
inc
mov
mov
jg
dec
test
fisubs
xchg
add
mov
arpl
sti
lock
push
lock
inc
ja
sbb
adc
xor
imul
scas
push
cmpsl
or
or
decl
les
aas
hlt
mov
cs
ja
ficoml
jp
scas
sbb
jmp
cld
mov
xchg
xchg
lret
push
xchg
mov
xor
dec
mov
ret
xchg
inc
adcl
jmp
cmp
in
mov
aaa
sub
push
aam
mov
jmp
mov
lods
or
or
cmp
inc
jmp
push
repnz
fiaddl
je
lods
mov
rcrl
sub
ljmp
imul
jmp
hlt
sub
mov
jns
dec
push
mov
pop
ret
adc
test
jmp
jnp
pop
adc
mov
jge
daa
fs
addr16
inc
orb
ja
pushl
jmp
fmuls
mov
outsl
imul
fwait
jo
mov
pop
inc
ss
add
cmpsl
cli
push
call
jne
mov
cwtl
mov
cltd
cmp
push
out
nop
ret
aas
inc
xchg
push
gs
outsb
faddp
call
xor
xchg
xchg
out
mov
movsl
adc
arpl
jp
jno
add
jg
jg
in
addl
hlt
dec
xor
and
outsl
jmp
out
jb
mov
lcall
clc
or
rolb
int
in
adc
jns
fcomi
inc
aas
cmp
sbb
lods
scas
mov
jg
push
mov
icebp
cmp
pop
pop
test
paddb
sub
stc
dec
mov
xchg
jmp
bswap
je
mov
pop
call
bound
lret
xorb
stos
sub
or
push
sbb
dec
mov
jmp
cs
sahf
and
cmp
or
pop
ss
or
mov
sbb
loopne
lcall
sub
sub
or
adc
outsl
jg
push
push
repnz
pushl
jno
fwait
out
sub
lods
das
add
ss
outsl
out
xor
dec
in
push
pop
pop
outsl
hlt
outsl
cmp
jle
fmull
jmp
xchg
pop
mov
xor
test
mov
lcall
sti
xchg
inc
adc
stos
sbb
lds
dec
ja
fldl
cmc
jp
jne
call
mov
cld
nop
icebp
stos
cmp
call
jae
pop
jne
push
decl
lock
out
loop
mov
mov
push
push
pop
xchg
pushl
loope
in
out
jbe
cld
lcall
out
pusha
cmp
sbb
xor
inc
dec
lods
dec
lcall
push
dec
jne
sbb
fcmovnb
fstpt
jle
xchg
cmc
mov
ficoml
in
call
movsb
fistpl
sbb
jl
in
ss
ret
jg
out
push
sbb
xchg
push
sbb
pushl
and
dec
mov
call
pop
ret
imul
pop
xchg
mov
mov
ficoml
insl
cmp
sbb
cmp
lock
mov
out
sahf
loopne
pmaxsw
incl
cwtl
mov
adc
sbb
cmp
xor
bound
cmc
adc
rcll
inc
test
data16
jbe
decl
pop
dec
push
mov
dec
call
adc
mov
sbbl
cmp
loop
dec
pop
sub
xchg
loop
jae
add
jge
push
xchg
loopne
pushl
mov
jecxz
and
mov
add
mov
daa
dec
call
sbb
in
and
sbbl
push
pop
jne
or
movsl
aaa
xor
pop
cmp
out
int
lea
inc
mov
decl
sti
adc
xchg
fs
loop
fbld
mov
jne
dec
cmc
pop
mov
repz
jmp
inc
sub
mov
xchg
cmp
push
adc
sub
mov
clc
incl
push
adc
out
add
stos
push
subb
sbb
push
ljmp
fmull
insb
orl
lcall
sbb
outsb
mov
out
jl
incl
sbb
pop
in
jno
shlb
push
sti
add
adc
lea
xor
mov
fwait
pop
pop
xchg
jmp
xchg
cld
fnstenv
dec
popa
ja
adc
mov
push
outsl
lahf
cmp
test
push
mov
icebp
outsl
jae
jg
subl
jg
icebp
lret
sbb
nop
mov
aas
stc
pop
jmp
pop
int
or
mov
jmp
add
outsl
mov
lret
and
mov
in
cmp
push
mov
mov
push
cltd
xor
and
addr16
mov
jg
scas
push
jo
dec
inc
out
andb
dec
out
push
outsl
out
repnz
sub
imul
xorb
sar
sbb
std
mov
ret
mov
xor
fmulp
call
xchg
xchg
dec
jmp
subb
in
arpl
test
adc
test
jmp
mov
and
mov
sbb
xor
xorb
xchg
xor
insb
and
pop
dec
js
mov
decl
inc
insl
pop
mov
xchg
int
jne
pop
inc
rcl
shl
test
fwait
xchg
fisubrl
pop
int
lcall
jb
repnz
dec
out
and
insl
cmp
adc
popf
push
push
fs
decl
jo
mov
insb
lret
out
in
loope
fstl
mov
scas
mov
push
decl
adc
in
mov
cmp
loope
decb
rcr
mov
jbe
icebp
push
push
lahf
or
pop
pop
xorb
test
jae
ret
jg
jmp
and
test
ds
mov
xor
adc
push
sahf
dec
push
in
xlat
loop
into
setge
sbb
mov
add
ljmp
je
ret
pop
xchg
insl
xlat
scas
fcmovnb
sbb
pop
loopne
xchg
lea
gs
movsb
iret
mov
call
popf
adc
stc
stc
jp
scas
es
test
push
jg
test
jp
sbb
mov
dec
or
sub
xchg
call
decl
add
lret
pop
xlat
or
das
push
add
lret
pushl
cli
movsb
lea
aaa
cwtl
sbb
daa
aas
int3
outsl
mov
ljmp
cmpsb
add
fimull
clc
push
sbbl
mov
jle
sub
xor
ljmp
mov
call
and
lock
out
repnz
clc
cmp
sub
outsl
and
fwait
gs
movsb
movsb
nop
inc
inc
lods
sub
or
cltd
inc
and
push
mov
xabort
sub
rorl
jg
incb
int
push
movsl
pusha
cli
into
xchg
xchg
cmpsb
inc
lret
fisubs
loop
outsb
in
ljmp
int3
add
push
xchg
or
xor
push
out
call
jge
arpl
sti
inc
xor
movsb
pop
call
out
movsl
and
inc
adc
lds
push
shr
addr16
movsl
dec
mov
sub
adc
pop
mov
incl
xchg
pushf
jl
inc
mov
inc
mov
adc
and
pushf
addr16
decb
jmp
xchg
inc
mov
xchg
inc
out
jmp
lahf
mov
mov
aaa
leave
mov
cmp
jmp
clc
shll
xor
daa
fnstcw
nop
cmp
jle
out
sub
sbb
subb
lcall
sahf
es
ret
jbe
cmp
fnsave
sbb
loopne
pop
push
ret
jg
scas
cli
mov
cmp
fsubs
lret
dec
fs
mov
pusha
xor
in
dec
adc
arpl
es
push
popa
mov
push
lret
incl
cmp
or
xchg
xor
insb
int
ljmp
in
push
adc
inc
mov
sub
cs
or
mov
jmp
sub
jle
insl
lcall
mov
roll
push
mov
icebp
loope
xor
stc
bound
pop
outsb
sar
call
add
shl
push
imul
mov
xor
mov
into
inc
xlat
inc
movsl
xchg
addr16
sarb
negb
dec
insb
adc
sar
pushl
in
pop
add
jecxz
and
mov
pop
outsb
adc
cmpsb
xor
jno
loop
dec
and
xchg
ret
out
and
pop
lods
push
aaa
or
push
scas
jl
jg
les
hlt
jbe
cwtl
xor
fisttps
test
xchg
mov
push
aam
ret
loopne
add
incb
lcall
mov
fisttpll
shlb
push
fisttpl
push
xchg
xchg
mov
xchg
loope
dec
test
aam
loopne
or
js
fcomp
push
clc
test
mov
push
adc
push
xor
jmp
je
dec
lock
xchg
stos
sti
loopne
jmp
daa
push
idiv
xchg
ds
xor
outsb
cld
or
dec
sti
sub
movsb
insl
mov
enter
ds
out
xchg
jge
mov
pushf
mov
scas
clc
jecxz
sbb
adc
mov
push
fstpl
pop
push
mov
jmp
cmp
jge
pop
xor
push
mov
jns
pop
or
jns
pop
lods
or
inc
add
xchg
pusha
pop
mov
jns
je
jbe
imul
mov
loopne
lcall
dec
cmpsl
mov
pop
enter
jecxz
ja
xchg
stos
inc
xchg
xorb
in
pop
insl
or
xchg
outsb
cwtl
xchg
mov
mov
jle
mov
in
mov
pop
test
scas
les
pop
adc
call
pop
mov
mov
in
std
push
scas
sti
and
insl
add
pusha
incl
test
push
je
xchg
scas
adc
xor
jl
sub
leave
push
pop
mov
lcall
loope
dec
adc
mov
dec
adc
lret
fdivr
push
aas
mov
test
push
cmp
call
jne
arpl
mov
pop
fwait
xchg
inc
loopne
jnp
fisubs
mov
mov
pop
cmc
cmc
imul
cwtl
int3
mov
aam
dec
dec
iret
packssdw
jns
decl
mov
test
sbb
fcoms
imul
push
test
ret
adc
cmp
or
and
xlat
pop
adc
data16
xor
xor
lcall
stos
sarl
jns
jp
mov
mov
dec
mov
push
mov
idivl
dec
es
inc
pushf
xchg
leave
or
and
lret
incl
pushf
xchg
sub
sbb
mov
xor
pop
lock
mov
incl
jo
sub
sbb
dec
js
shlb
pop
sub
int3
aam
and
mulb
inc
push
jbe
addr16
mov
fs
clc
xchg
ljmp
dec
add
rcl
jbe
add
mov
inc
out
clc
xlat
mov
hlt
jg
sar
dec
inc
cmp
aad
or
sub
xor
adc
daa
rcll
and
in
xor
mov
mov
push
jl
les
in
jp
sar
call
push
jne
aaa
pop
jne
sti
into
cmp
into
test
mov
jecxz
inc
jne
push
cmp
outsb
daa
pop
pop
outsb
gs
sub
outsb
pusha
dec
mov
mov
and
or
sub
roll
mov
dec
in
xor
icebp
pushl
movsb
sbb
mov
adc
or
cwtl
pop
inc
jp
daa
or
mov
sub
dec
sbb
cltd
jnp
or
sbb
and
test
fistl
incl
inc
outsb
scas
clc
dec
repnz
xor
bound
xchg
outsl
lahf
div
pushf
and
lcall
xchg
pop
and
mov
jns
stos
lret
mov
mov
jo
cli
std
cwtl
sub
xchg
pushl
adc
adc
rorb
and
sub
lods
ret
fwait
jae
inc
or
fwait
sbb
std
and
in
sbb
es
sahf
mov
mov
pop
jo
hlt
std
mov
xchg
push
mov
lea
jne
mov
pushl
dec
into
sar
cmp
test
pop
psubw
sbb
mov
cltd
sbb
call
loop
push
repnz
pop
mov
or
dec
sti
loope
push
sbb
mov
jb
rclb
fstpl
sbb
stos
dec
jg
push
push
pop
loop
dec
dec
jno
add
mov
cmp
mov
fsts
or
out
je
aad
in
fcoms
shll
in
repz
std
jle
fiadds
popa
aam
inc
pop
rcrb
mov
push
incl
fidivs
bound
dec
cld
stos
out
xchg
dec
mov
incl
jns
inc
aas
ret
push
mov
sbb
movsb
adcl
cltd
dec
lods
dec
lds
das
cli
ljmp
clc
jg
scas
out
cmpsl
lods
rolb
pop
adc
lcall
insl
lea
push
ret
inc
test
mov
fsincos
filds
or
repz
ret
jecxz
leave
pop
dec
add
jmp
sbb
mov
mov
xor
repnz
movsb
xchg
mov
cmp
adc
aas
lret
rolb
xlat
test
ret
pushf
call
add
rcrl
jg
dec
shl
fs
fnop
shll
adc
jb
std
out
in
push
das
leave
pusha
fwait
jns
clc
jmp
mov
push
test
inc
dec
mov
aam
cli
sub
test
lcall
jge
jge
aad
pop
inc
das
imul
ror
cli
decl
mov
in
sar
pushl
movsl
mov
pop
cmpsb
cwtl
jecxz
pop
dec
jmp
call
fdiv
arpl
jo
stos
mov
sbb
mov
mov
test
loopne
xchg
in
out
outsl
jns
inc
dec
fstl
cmp
xlat
ret
xchg
push
xchg
mov
xor
sub
and
jo
push
divb
lcall
fwait
bound
inc
mov
data16
jbe
xchg
or
int3
stos
xor
push
adc
std
les
mov
jnp
incl
adc
data16
stos
gs
cmp
sub
and
pop
xchg
xor
jg
jg
lret
sbb
sbb
rorl
mov
cld
jne
ficoms
push
imull
out
test
add
call
sub
lret
pop
jp
pop
test
ret
imull
bound
xchg
sub
mov
out
in
lods
pop
rol
sub
mov
popa
loope
lds
test
pusha
xchg
test
mov
ja
xchg
jge
decl
or
popa
jmp
and
aam
test
movsl
adc
sbb
rcll
jl
in
fdivl
bound
imul
cmp
sub
rcrb
xchg
and
cmp
mov
mov
jecxz
jle
leave
fcmovnbe
dec
push
imul
incl
jecxz
mov
cmp
clc
out
repz
sub
les
xchg
leave
int3
lea
xchg
or
cmp
ljmp
add
push
mov
xchg
mov
sbb
push
movsl
pop
shll
inc
jle
js
call
mov
lret
jnp
fs
cmpsb
xchg
lock
outsl
push
aas
push
andl
jbe
imul
mov
mov
add
jne
or
or
hlt
aas
cmc
ss
das
mov
clc
addl
mov
pusha
outsb
lods
das
adc
inc
jnp
mov
jmp
lcall
and
aad
arpl
jb
pop
adc
and
pop
jg
bound
pushf
push
lret
jns
push
aaa
jp
gs
mov
sbb
dec
cld
add
push
faddl
lret
hlt
scas
mov
xchg
inc
mov
mov
ljmp
decl
lcall
cs
ret
sub
sub
bound
mov
hlt
jmp
out
sub
xchg
daa
xchg
loop
adc
rcr
add
mov
jg
push
js
sbb
jp
rclb
jo
push
jl
xor
adc
pushl
dec
adc
sarb
fistpl
dec
out
neg
pop
jae
mov
mov
lahf
sar
pushl
call
clc
movsl
lods
test
frstor
cmp
adcb
inc
stos
xlat
mov
dec
fstl
jg
sub
iret
push
icebp
mov
outsb
mov
mov
incl
dec
cmp
pop
test
insb
pusha
imul
and
ljmp
jmp
arpl
add
adc
jmp
ljmp
shrl
jg
cli
dec
pop
rcrb
jmp
aas
jb
xchg
xchg
inc
cmpsb
cmp
push
icebp
xor
stos
jg
daa
movsb
cli
icebp
out
imul
test
js
aaa
and
out
shrb
lcall
or
shl
sub
inc
xchg
mov
and
pop
add
xchg
and
idiv
ljmp
adc
aas
addr16
out
or
mov
out
bound
sbb
lock
lods
ja
pop
js
jmp
inc
add
test
aam
sub
mov
pop
test
imulb
in
push
sub
pop
aaa
cmpsb
std
lds
jmp
xor
dec
leave
or
jecxz
push
in
pop
add
or
orl
push
rolb
insl
push
fbld
pop
ja
inc
sbb
xchg
adc
or
test
xchg
rorb
mov
icebp
andl
mov
nop
ss
mov
cmp
insl
jl
leave
sbb
adc
pusha
cmpsl
mov
pushl
ljmp
lds
cmp
dec
inc
push
cmpsb
stos
dec
mov
mov
incl
xchg
insb
mov
inc
es
popf
sti
cli
icebp
in
sbb
xchg
rclb
or
mov
sbb
popf
aaa
dec
fildll
in
xchg
pop
mov
cmp
pop
ds
stc
decl
inc
and
sbb
mov
jle
mov
sbbl
int
xor
mov
cmp
lahf
sub
scas
fs
push
data16
push
lret
mov
cmp
dec
enter
aad
jl
stos
jo
xchg
dec
sub
popa
cmp
xor
and
idiv
mov
out
mov
mov
pop
icebp
and
push
mov
sbb
mov
push
addr16
mov
push
icebp
shlb
out
ljmp
arpl
push
adc
out
mov
pushl
jp
flds
ret
scas
insl
mov
fistl
shl
repnz
pushl
scas
jbe
popf
add
fnstenv
or
mov
pop
hlt
mov
push
cmp
adcb
iret
mov
sub
test
jno
pop
shr
mov
mov
jnp
jp
pushl
mulb
lds
scas
out
add
sti
lret
add
stos
lcall
and
cmp
xchg
pop
inc
jg
int
lahf
imul
scas
push
xchg
ret
xchg
push
in
loopne
pushl
in
out
pop
sbb
jmp
cmpb
jg
insb
cltd
lea
push
fwait
divl
mov
xchg
ss
rsm
push
test
push
add
mov
flds
aad
fnstsw
jl
ljmp
in
ret
frstor
nop
push
add
pusha
pop
sub
jg
test
lods
pop
nop
dec
sub
outsb
add
xor
call
jl
das
jp
mov
jmp
pop
setns
cmp
cltd
fildll
mov
mov
outsl
cld
xorl
pop
adc
ja
adc
jnp
jl
bound
ds
push
pop
cli
out
xchg
loope,pn
mov
mov
fmulp
jg
adc
daa
push
mov
in
dec
hlt
es
inc
cli
gs
push
incl
vcvttss2si
mov
outsb
jbe
aad
nop
lock
pop
mov
jmp
and
xchg
aas
mov
jg
adc
mov
mov
lds
std
call
push
jne
pop
mov
mov
adc
loop
mov
lret
cmp
push
mov
xor
insl
jecxz
xor
ret
js
aas
fsubs
call
cmpsb
aam
dec
push
dec
xor
mov
jge
cwtl
add
mulb
cwtl
les
push
and
call
data16
and
lods
repz
ltr
adc
pop
loope
lcall
addr16
and
sub
jmp
mov
inc
pop
xchg
cwtl
xchg
mov
mov
pushl
outsl
dec
sbb
pushf
fldcw
inc
cmp
xor
add
lret
sbb
or
mov
push
push
or
leave
in
push
mov
push
clc
xchg
adc
lahf
sbb
call
cltd
filds
subb
jle
js
test
mov
or
int3
adc
add
add
lock
mov
inc
in
jle
rorb
or
fistl
mov
mov
adc
xchg
cmc
pop
sbb
jle
inc
push
decl
pop
cmc
mov
ja
lcall
xlat
sub
cwtl
mov
shll
mov
test
gs
dec
jae
in
and
push
mov
out
clc
lea
rcrb
xchg
outsl
pop
add
push
adc
pushf
push
xchg
shll
mov
decl
mov
push
imul
clc
push
xor
adc
xchg
add
add
arpl
ljmp
adc
das
in
push
mov
pop
sub
push
inc
cmp
inc
jmp
dec
insb
out
push
sbb
mov
call
je
mov
fcomi
xor
sub
and
cli
inc
sahf
jmp
mov
sti
repnz
jecxz
ret
xorb
push
pop
jbe
sub
ljmp
mov
mov
and
xchg
shll
lret
arpl
xchg
repz
mov
scas
adc
xchg
xor
repz
data16
jnp
push
dec
jg
data16
sub
jmp
not
jns
cmc
xor
out
stos
enter
sub
test
mov
call
loop
leave
jno
rcll
test
mov
push
dec
fbld
sbb
loopne
shr
stos
imul
pushf
inc
mov
test
loop
sub
add
xor
mov
dec
mov
xchg
pushf
mov
pushl
add
fldcw
int
xchg
sar
jno
pcmpeqd
arpl
sbb
dec
adc
pushl
mov
aaa
fs
pop
inc
insl
cmpsl
pusha
adcl
mov
lcall
bound
lea
sub
test
jl
and
rcl
out
jmp
push
mov
cwtl
mov
push
vpcomuq
ljmp
pop
push
fs
repz
pop
cmpsb
or
add
pop
sbb
mov
call
or
mov
mov
push
or
ret
pop
xor
popa
xchg
scas
pop
mov
lock
aam
scas
ficoms
stc
sbb
jb
push
dec
fimull
jmp
out
cmp
mov
into
mov
inc
inc
and
mov
add
lds
out
cli
cli
mov
cmp
push
dec
imul
xor
pushl
cld
ljmp
sbbb
inc
or
mov
adc
aam
mov
orb
cli
incl
sub
popf
cmp
repz
push
and
xor
and
int
sbb
das
pop
lcall
enter
push
ljmp
xor
xchg
int
lret
dec
divl
jae
mov
out
jmp
sarl
enter
push
and
nop
and
out
test
mov
aad
cmp
ljmp
sub
pushf
push
ja
dec
jmp
jmp
adc
push
cmpsl
xor
shl
cmp
jb
xor
loope
in
xor
cmc
jmp
sbb
gs
outsl
jno
and
xchg
mov
push
add
incl
cld
dec
push
push
shll
jp
and
lret
outsb
cmp
mov
push
mov
inc
fwait
push
mov
adc
fcomp
pop
push
pop
out
mov
mov
decl
divl
loop
out
outsl
ds
cmc
lds
jnp
fistl
sub
sbb
cmp
push
clc
incl
in
jo
stc
clc
sbb
push
test
xchg
jmp
mov
xchg
pop
stos
sub
mov
xlat
shlb
mov
aad
jle
cli
popa
sub
inc
insl
jg
jmp
ds
fwait
mov
mov
popf
inc
push
push
js
adc
mov
push
subl
pop
add
sub
bound
icebp
fadds
add
mov
pop
inc
pop
subb
push
int
lcall
loopne
add
ljmp
dec
in
mov
mov
jp
fisttps
jo
push
lds
pushl
jmp
not
cmpsl
push
and
mov
xor
sub
in
roll
nop
push
int3
into
push
lods
shrl
rolb
rorl
add
divl
insb
xor
sub
fcmove
gs
fildl
mov
jns
sbb
mov
fstps
add
or
call
push
push
pushf
push
roll
jae
mov
jg
sbb
fs
ja
xor
out
push
add
test
jmp
xor
lock
mov
mov
imul
cmp
adc
jl
clc
cmp
decl
mov
in
lcall
leave
popf
movsb
repz
aad
xor
cld
ljmp
iret
test
andl
mov
cmp
or
notl
jmp
in
int
mov
notb
mov
dec
sbb
cmp
ljmp
stos
aas
out
pop
jnp
xor
shl
sub
xchg
pop
test
loop
addr16
dec
mov
clc
jb
mov
test
xlat
and
pop
sbb
sub
and
incl
gs
xor
arpl
movsl
mov
jb
mov
jecxz
daa
jg
daa
mov
sahf
sahf
jg
rorb
push
std
decl
or
movsb
data16
psubd
cmpsl
fsubl
and
loop
sar
cmp
push
jns
mov
in
cmpsb
mov
mov
inc
cmpsb
loope
test
out
rclb
xchg
cmc
sub
jmp
sub
and
sbb
fisttps
inc
or
sub
fstpl
jl
ljmp
aad
stc
push
out
outsb
dec
dec
stos
les
imul
mov
pushl
xchg
stc
testl
push
cmpl
jno
mov
pop
jg
or
pushl
addr16
insl
mov
mov
push
loop
imul
pushl
mov
stos
rolb
arpl
aas
adc
xchg
addr16
adc
rcll
lods
mov
push
jge
add
sub
test
jge
into
dec
cmpsb
jns
xchg
stos
es
subb
cmp
outsb
rorb
inc
shlb
sub
inc
sbb
push
loopne
xchg
pop
xchg
addr16
pushl
and
jge
sbb
inc
add
sub
js
out
pusha
loope
decl
jmp
or
pop
fisttpll
pop
shl
sbb
ja
push
fcompl
push
mov
enter
lcall
insb
std
movsb
sbb
imul
mov
scas
and
inc
cmc
pop
pop
aas
in
arpl
call
xchg
push
fistl
call
rcrb
xchg
aam
jmp
data16
ljmp
inc
lods
adc
in
jno
mov
dec
add
iret
xor
ljmp
shrb
jne
and
sbb
mov
fucomp
je
push
cld
dec
mov
out
mov
pushl
pusha
into
and
jmp
inc
pop
jae
xchg
inc
mov
std
mov
mov
orb
rclb
sbb
pushl
ljmp
mov
sbb
mov
sub
push
out
movsl
std
mov
jo
cmp
in
das
orl
sbb
push
fnstenv
xchg
push
in
roll
fistpl
adc
jmp
pop
inc
int
vphaddubq
jmp
pop
sahf
fildl
add
aaa
aas
xchg
and
out
lcall
scas
push
or
test
aaa
sbb
cmp
dec
jno
sar
xor
push
out
clc
decl
lahf
imul
mov
divb
cwtl
mov
and
call
sub
jmp
gs
mov
xchg
sub
cli
andb
or
decl
andb
jbe
mov
cmp
pusha
test
outsb
nop
outsl
cli
inc
ficomps
lahf
stc
xchg
xchg
jg
mov
adc
pop
les
inc
aad
popa
or
cwtl
jnp
mov
out
cmp
mov
xchg
dec
subl
lea
push
sbb
add
ljmp
movsl
scas
aam
adc
cld
outsl
flds
push
inc
les
or
dec
mov
mov
mov
in
aaa
cmpsb
repnz
sti
add
movsl
or
sbb
scas
scas
adc
pop
sub
cld
jmp
dec
loope
int3
jb
ret
addr16
add
ss
ret
and
fdivr
incl
pusha
sbb
repnz
jns
sub
dec
aas
mov
fists
pop
xchg
lcall
mov
or
gs
jbe
aas
aas
adc
jge
lahf
jmp
into
and
icebp
xor
lahf
in
inc
std
xchg
push
bound
jb
mov
mov
mov
xchg
xchg
in
or
and
add
cmp
adc
in
pop
push
mov
arpl
push
xchg
xchg
xchg
test
insb
pop
fldt
push
mov
in
popa
inc
lcall
cmc
stos
out
mov
outsl
jbe
fmull
mov
test
test
pushl
lods
push
xlat
cld
mov
xor
dec
xor
cmpb
int
and
pushl
fcmovne
adc
push
xor
xchg
xchg
add
stc
push
and
cmpsb
lcall
fisttpl
in
loopne
repz
push
lock
lret
push
lcall
push
incl
nop
pushf
cmpsl
and
movsl
outsb
inc
sbb
xor
outsl
aas
mov
fwait
add
cmp
dec
and
xchg
pop
shrl
loope
mov
fcomip
mov
hlt
popf
add
ret
hlt
inc
push
imul
mov
push
in
mov
ljmp
or
and
ret
pop
jg
mov
mov
fs
incl
mulb
adc
filds
push
dec
fldt
sbb
xchg
lcall
gs
fsubrl
dec
jmp
gs
repnz
push
incl
lcall
sarb
iret
cli
xchg
push
xchg
add
sub
mov
mov
sbb
jmp
jne
pop
sub
pushf
sbb
xor
jle
or
sti
cmp
jo
mov
outsb
adc
push
in
mov
xchg
dec
ja
lcall
jge
cmp
outsb
rolb
xchg
pop
sti
aam
or
dec
cwtl
out
adc
jbe
into
pop
insl
sub
lahf
ror
loopne
outsl
popf
outsl
jge
test
lahf
lret
incl
nop
or
dec
pop
pop
movsl
adc
xor
mov
or
ret
lcall
incl
adc
xchg
sahf
shrl
jle
mov
addr16
xchg
repnz
ja
xor
jmp
xor
dec
mov
mov
shlb
sbb
fmuls
pop
lcall
cli
jg
dec
sahf
test
push
cmp
aam
cmp
cmp
jbe
mov
out
cmp
lods
das
cmc
mov
call
mov
cmp
add
loopne
incl
shll
sub
cmovl
popf
inc
cltd
scas
lret
jmp
fnstcw
pop
or
int3
subb
sbb
pop
mov
push
js
jg
call
jmp
inc
ret
pop
mov
pop
int
pop
pusha
jne
jp
incl
push
xchg
pop
add
sbb
push
jo
aas
or
inc
inc
cmp
sub
incl
loope
mov
or
aam
fistps
push
add
push
and
push
and
decl
inc
push
mov
outsb
into
and
shr
je
scas
imul
lcall
test
iret
sub
push
adc
arpl
cltd
jbe
fsts
push
mov
out
pushl
mov
stos
jne
sub
ljmp
cmp
jb
or
cmp
mov
rcr
push
insb
es
and
pushl
ret
inc
sub
push
rcll
sbb
pop
xchg
daa
sub
js
out
cli
push
repz
xchg
mov
cmpb
movb
sub
call
int3
rolb
or
fs
outsl
bswap
sbb
aaa
lcall
jmp
inc
rorb
insb
cli
mov
mov
xchg
lcall
lods
jns
inc
add
push
jge
out
inc
icebp
rolb
leave
out
aaa
orb
scas
jo
add
lods
inc
decl
dec
mov
leave
js
inc
mov
int3
aam
mov
xchg
scas
gs
jg
sbb
pushl
testl
enter
imul
or
mov
pop
pop
mov
pop
idivb
xchg
xchg
std
ret
pop
inc
xchg
lretw
in
jbe
adc
mov
or
push
iret
mov
out
repz
xchg
dec
sbb
pop
pushl
push
out
out
test
mov
lret
hlt
mov
scas
jmp
mov
cli
sbb
push
mov
aam
pop
mov
mov
mov
xchg
es
inc
popf
negb
and
fadds
adc
push
enter
push
jns
mov
sbb
or
sub
jmp
push
xor
lea
pop
std
call
add
rcrl
sahf
addr16
fsubr
inc
adc
pop
lea
into
std
ljmp
jl
pop
push
mov
les
mov
inc
mov
cmp
fbld
int3
pushf
mov
push
mov
test
cmp
adcl
daa
incl
push
dec
cmpsl
ret
movsl
aaa
sbb
mov
mul
cmp
sarb
out
movb
jmp
jp
mov
xor
imul
addr16
into
les
std
pushl
aad
inc
insb
arpl
int3
daa
jle
std
fs
addr16
hlt
dec
int3
sbb
dec
sti
push
dec
ret
ret
and
cmpsl
aad
orb
push
jg
dec
subl
pop
mov
jno
repnz
outsb
push
mov
ficompl
dec
and
lods
pushl
ja
dec
lock
cmp
adc
loop
cmp
sbb
loopne
test
aaa
std
fbstp
popf
or
enter
cmpsb
and
int
xchg
je
icebp
js
call
cmpsb
mov
aad
and
push
pop
test
in
stc
mov
rclb
fisttps
and
repz
or
enter
test
sbb
pop
cld
mov
and
lcall
inc
rcl
cmpsl
cltd
aad
cmc
dec
cld
adc
sbb
jnp
mov
xchg
inc
lock
arpl
cmp
jg
pop
adcb
dec
mov
cmp
pop
popa
jb
cltd
sbb
or
sbb
decl
cmpsl
sbb
xor
and
mov
push
clc
ds
filds
mov
ret
add
adc
repnz
push
mov
sub
lcall
pop
dec
inc
push
sbb
cmpsl
aas
adcb
pop
out
cmp
and
inc
cli
jl
sbb
push
cmp
ret
ljmp
mov
and
pandn
dec
pop
or
mov
mov
dec
adc
jge
sub
sub
lods
mov
push
mov
js
gs
cmpsl
sub
rdpmc
push
enter
inc
leave
xchg
lock
js
subl
lods
pop
ja
adc
loopne
jle
out
push
not
imul
pop
mov
fwait
sbb
popa
dec
adc
sbb
jmp
sub
imul
adc
arpl
fldl
jmp
sub
imul
mov
pop
dec
dec
ja
lret
mov
pushl
inc
cmpsl
xchg
call
mov
icebp
or
lock
xor
jae
adc
push
add
adc
and
mov
dec
out
hlt
lret
fsubr
cli
pop
int3
fs
stos
push
aad
pop
cli
call
rcr
arpl
cwtl
mov
aas
mov
je
and
mov
xlat
push
xchg
daa
pusha
stc
mov
cmpb
dec
jg
pop
pop
orb
xor
pop
into
inc
sub
iret
pop
xchg
iret
sar
ffree
add
fisubrs
loop
pop
addr16
dec
mov
in
cld
ljmp
inc
das
mov
shrb
ret
or
movsl
addr16
jae
cwtl
stos
rolb
loopnew
jnp
adc
add
mov
push
pusha
xchg
mov
adc
mov
xchg
mov
xchg
mov
cltd
shll
mov
sbb
jb
jecxz
add
add
in
push
in
dec
mov
xor
in
mov
fidivs
and
mov
push
das
jnp
daa
movsb
test
daa
xchg
aam
and
ret
loop
jecxz
lcall
push
push
outsb
in
dec
fs
push
fs
mov
cmp
rolb
dec
insb
push
pop
cmp
call
repnz
loopne
out
pop
out
xchg
cltd
cmc
pop
cs
scas
mov
jno
cwtl
adc
idiv
jg
and
xchg
outsb
adc
sbb
mov
aad
pushf
sub
pop
inc
out
xchg
sub
xorl
xchg
jb
cmp
inc
mov
arpl
mov
sub
jne
adc
sbb
mov
fcompl
sub
stos
loopne
push
pop
lret
decl
and
adc
sub
inc
repz
ret
call
pop
test
sahf
pop
dec
pop
shll
dec
pop
add
pusha
adcl
aam
mov
jno
xchg
call
mov
xor
cwtl
mov
xorb
mov
mov
das
data16
in
fcmove
cltd
je
daa
cmpsl
imul
lcall
mov
dec
xor
jnp
mov
and
iret
stc
cld
xor
imul
nop
jecxz
xchg
xchg
mov
jle
push
mov
pushl
inc
scas
mov
mov
add
rclb
shr
dec
push
int3
leave
insb
xor
cmp
imul
pop
inc
mov
push
mov
push
in
decl
lock
in
popa
incl
jmp
es
lods
shlb
sbb
fildll
call
divb
or
inc
stos
mov
mov
xchg
imul
push
std
jg
inc
cmp
mov
fdivs
negb
addr16
dec
loopne
stos
addr16
adc
call
or
mov
add
daa
insl
pop
mov
cmpsb
dec
popa
dec
sub
or
js
jno
fistps
push
push
push
iret
out
push
lock
mov
testl
iret
jle
sbb
pop
xchg
dec
inc
and
movb
mov
cmp
and
decl
xchg
sub
jp
add
inc
lahf
and
sub
lcall
lcall
test
popa
fs
sbb
lahf
pop
inc
mov
aas
aaa
jl
mov
xchg
push
adc
xchg
lcall
push
rcr
mov
xor
adc
fcmovnu
cmc
jecxz
ret
lcall
xor
push
mov
fwait
dec
inc
mov
test
mov
call
sub
xchg
iret
lds
dec
pop
cld
add
mov
fstl
lea
call
iretw
popf
jae
call
cli
fldcw
xchg
adc
xchg
imulb
jmp
mov
scas
mov
mov
cmp
lock
sti
lret
scas
fimuls
lret
popa
in
hlt
test
loop
jb
dec
mov
adc
mov
das
sti
repnz
push
stos
cmc
js
jns
dec
movsb
nop
fidivrs
mov
sbb
and
or
cmpsl
cltd
movsl
or
aaa
add
add
lret
and
push
mov
ret
insb
fcmovu
push
jmp
ljmp
pop
adc
aas
push
adc
aad
andb
dec
jl
cmp
sbb
insl
adc
enter
push
testb
push
rorb
aaa
dec
push
sahf
mov
xor
repnz
sub
dec
dec
imul
mov
adc
mov
pop
or
inc
out
ljmp
pushl
pop
pop
xor
cmp
and
mov
adc
cs
lcall
out
ds
adc
insb
or
insb
rcll
out
outsl
or
ds
pop
add
in
movsb
jg
shrl
or
push
lret
loop
push
cmp
cmp
psrad
sahf
push
std
stos
incl
repz
cmpsb
jb
xor
mov
mov
add
aam
outsb
stos
inc
cli
push
xchg
xor
outsl
xchg
in
mov
jp
decl
mov
shrl
jne
jo
push
jb
xorb
pop
out
call
imul
cld
inc
sub
pop
pop
sbb
jge
dec
inc
jecxz
out
cmp
call
xchg
cmp
inc
xor
shll
cltd
std
xor
jecxz
xchg
sub
aaa
mov
pushl
push
mov
inc
or
loope
test
cmpsl
sub
mov
into
into
mov
or
dec
pop
ds
jns
add
ret
sbb
insb
xchg
mov
clc
mov
push
jmp
arpl
faddp
cmp
inc
jmp
jne
fists
mov
sub
add
icebp
dec
sub
adc
xlat
and
or
in
ret
jb
and
cmp
mov
rclb
adc
mov
outsb
sbb
pop
in
neg
ret
xor
push
sub
sub
ljmp
fisubrl
mov
das
movlps
test
data16
ficoms
aaa
in
clc
lcall
mov
int3
dec
std
or
mov
ja
or
shll
jecxz
decl
imull
rcrl
adc
dec
scas
pop
mov
cld
mov
cmpsl
add
fwait
push
incl
cld
jne
inc
out
mov
cmp
leave
mov
pop
pop
test
lcall
jle
cmp
js
jb
jnp
aad
jne
xor
bound
mov
fdiv
or
movsl
mov
call
adc
mov
sarb
add
pop
leave
jbe
clc
iret
push
or
pop
and
cmp
decl
iret
sbb
je
rcl
rolb
cwtl
dec
lods
mov
dec
mov
hlt
ljmp
ret
int3
adc
pop
jmp
push
jne
lret
cltd
mov
decl
int
ret
dec
jb
ret
jg
shll
cmp
jns
xchg
stos
jno
aaa
fcomip
ljmp
pushfw
into
adc
scas
outsl
jge
and
cmpsb
in
pusha
push
mov
adc
in
movsl
repz
push
in
xchg
add
mov
lcall
inc
pop
jno
fcoml
lea
inc
sbb
pop
and
mov
nop
mov
lea
sub
rclb
fs
mov
loope
decl
idivl
std
fcmovnb
jecxz
ret
mov
hlt
movsb
mov
pop
xor
or
decl
stos
and
and
xchg
fs
gs
or
int
repz
jne
jmp
push
push
bound
cltd
mov
xor
bound
sarb
pop
xchg
and
jg
mul
fdivrs
cmc
popf
push
and
xchg
mov
push
dec
je
cs
aad
sbb
ja
jg
cmpsl
mov
lcall
or
into
mov
push
inc
pop
mov
lret
in
test
mov
add
shlb
pop
sti
push
jnp
decl
js
dec
adc
cmc
fmull
nop
mov
mov
or
or
dec
out
mov
lods
add
jbe
xchg
add
sub
mov
mov
filds
push
jmp
data16
xchg
outsb
adc
test
cld
ljmp
add
push
mov
ljmp
mov
xor
jge
fwait
mov
jns
les
js
xchg
pop
mov
and
push
call
insb
adc
mov
mov
mov
or
jmp
push
pop
cmp
adc
dec
testb
imul
or
add
inc
sbb
es
incl
repnz
push
mov
fdivr
clc
inc
push
mov
xchg
sahf
ja
call
or
jmp
loopne
push
cmp
jge
test
push
adc
fimull
xor
sbb
jns
pop
cmpsl
pop
dec
hlt
pushl
sub
sti
push
andl
sbb
jns
sub
jp
dec
outsl
ret
mov
decl
mov
jle
outsb
js
subb
mov
cmp
test
stos
lods
jnp
inc
dec
repnz
loopne
xor
es
lcall
insl
add
inc
xor
into
inc
in
es
out
dec
jns
dec
mov
call
add
movsb
add
out
and
jl
push
leave
sub
ljmp
popf
aam
jns
add
or
sahf
fldt
or
jp
xor
mov
pushl
lds
lods
pop
mov
xlat
repnz
sub
push
mov
add
sub
sti
inc
mov
xchg
and
insl
pop
stos
adc
or
mov
push
scas
lods
sti
push
clc
mov
mov
push
or
adc
jle
out
lods
js
int
hlt
lcall
outsl
sub
mov
or
cmp
fwait
jno
int3
insb
ret
cld
or
repnz
ljmp
sub
lods
dec
aam
push
mov
in
enter
xor
add
xor
and
sar
andb
pop
sub
aas
das
add
ljmp
adc
or
mov
fsub
dec
xchg
inc
jecxz
int
adc
fwait
sub
mov
call
push
repz
xchg
daa
cmp
nop
mov
inc
scas
push
inc
mov
pushl
jecxz
mov
pop
push
sbb
dec
loope,pn
mov
xchg
fnstenv
jns
cmp
rorl
pop
jg
mov
daa
lock
shl
dec
inc
pop
mov
push
sub
cs
sub
adcl
jp
sbb
cmpsl
jne
scas
outsb
mov
cwtl
jg
into
push
stos
loop
in
xchg
ljmp
push
xor
xchg
jg
ljmp
and
dec
and
stos
int
icebp
repz
xor
xor
in
inc
sub
dec
pushf
adc
ret
cwtl
cmp
jo
imull
lret
arpl
loop
es
insb
push
gs
decl
mov
jo
orl
shlb
test
xlat
mov
insb
mov
cmp
cmpsl
lret
or
call
and
aaa
imul
cmp
ljmp
cmp
push
movsl
jno
ljmp
adc
cmp
testb
loope
je
add
decl
nop
int
pop
clc
movsl
pop
bswap
insl
mov
pushf
sti
repnz
cld
add
dec
jne
cs
ds
cld
jl
loope
int3
xchg
sub
cltd
dec
jnp
push
jns,pt
and
push
lods
lock
insl
clc
fsubs
cmp
cmp
aaa
dec
push
jge
pushf
outsb
sbb
or
std
outsl
clc
mov
jle
in
dec
jnp
and
mov
scas
mov
movl
adc
icebp
decl
popa
and
out
mov
out
jl
jg
sbb
dec
push
daa
push
pushf
mov
stc
dec
xor
jae
pop
dec
xchg
in
cmp
je
dec
mov
mov
lret
xchg
xchg
pusha
movsl
inc
stos
pop
mov
decl
add
or
push
scas
into
test
scas
adc
ffree
pop
push
push
mov
push
fiadds
jl
or
push
mov
js
loopne
push
or
mov
sbb
mov
or
inc
enter
cld
in
incl
inc
push
popf
inc
mov
mov
loope
das
push
or
add
call
jno
jne
lods
xchg
xor
call
xlat
xor
mov
enter
dec
das
iret
movsb
icebp
lods
popf
pop
into
sub
lds
lcall
mov
aad
xor
std
pop
lds
adc
mov
cmp
push
negl
imul
jb
jl
sar
insl
mov
mov
jg
jmp
pop
sub
psrlq
addr16
sahf
mov
data16
adc
mov
into
jge
push
push
arpl
pop
dec
xchg
pop
inc
dec
or
call
shrl
ret
fs
clc
pop
cld
jg
je
mov
sahf
jns
les
dec
andl
or
adc
rcll
rcrl
rorl
ds
call
xchg
icebp
sub
shl
leave
psadbw
fnstenv
xor
incl
adc
sub
and
incb
adc
mov
push
sbb
cmp
mov
cmpsb
pop
xchg
test
xchg
out
fldt
arpl
andl
pop
mov
rolb
std
call
adc
scas
fisubs
aad
ret
jp
mov
inc
xchg
incl
sbb
cmpsl
push
std
xchg
jae
loope
mov
add
out
mov
decl
je
loope
pop
inc
xchg
add
lcall
or
jno
jg
cmpb
or
mov
std
fldenv
xchg
call
jg
incb
ds
jns
mov
decl
jmp
mov
incl
pop
iret
addr16
repnz
fildll
mov
daa
adc
ret
test
test
push
push
dec
gs
mov
enter
adc
arpl
out
iret
mov
mov
and
cmpsl
ja
push
sub
ljmp
xor
and
xorl
mov
dec
in
mov
xchg
icebp
in
outsl
cli
in
call
fisubrs
jmp
jp
push
jnp
mov
lock
cmp
mov
pop
dec
aas
push
or
inc
pushf
jp
cli
push
divb
cli
sbb
push
jp
mov
mov
cmpsb
ljmp
or
lahf
ja
clc
sbb
cmp
jmp
lret
cmpsb
arpl
mov
pop
or
dec
mov
jne
mov
or
jmp
push
push
sbb
hlt
jmp
jo
scas
out
lahf
pop
loope
lret
stos
push
ficomps
mov
mov
xor
insb
mov
mov
das
jmp
cmpsb
dec
stos
jmp
mov
xor
push
sar
dec
or
mov
fbstp
mov
lea
fmull
mov
dec
cwtl
sbb
dec
out
inc
inc
pop
call
mov
cmp
rorb
das
mov
push
adc
jl
dec
push
into
add
xor
test
push
sub
push
dec
test
pushf
fwait
pop
insb
das
xchg
add
pop
mov
jae
cmc
aas
mov
sti
lcall
push
incl
hlt
insl
fistps
mov
pop
movsl
out
roll
dec
iret
subb
and
ljmp
push
dec
fwait
daa
fcmovnbe
mov
popa
inc
adc
rcl
push
out
pop
dec
incl
xor
aas
test
movd
push
insb
aas
fldcw
mov
mov
popa
outsb
fisubs
clc
mov
mov
bound
fnstsw
jae
sub
jge
jge
cmp
lcall
test
and
and
rep
outsb
cmp
into
jl
lcall
loopne
add
rorb
ja
jo
loop
mov
incl
pushl
jns
ret
not
jo
ss
hlt
jno
jg
xor
fsubrs
xchg
sbb
roll
dec
push
jmp
jmp
dec
shlb
movsl
std
jl
fimull
fmull
lcall
jecxz
or
add
fnstsw
jbe
loopne
decl
pushl
xor
push
call
xor
outsl
pop
xchg
popf
mov
sub
and
dec
push
ret
test
inc
or
int3
push
xabort
adc
hlt
test
mov
jg
xor
xchg
pop
or
lea
inc
ss
les
icebp
jg
adc
dec
xchg
sarb
xchg
add
jecxz
bound
sbb
fstpl
lods
xchg
push
dec
cmp
add
and
shl
setl
mov
push
aas
gs
stos
sahf
sub
test
insb
add
adc
icebp
cli
dec
or
xlat
jmp
subl
mov
jb
out
jno
js
mov
pushl
adc
jle
add
out
xchg
mov
orb
adc
std
incl
lds
dec
clc
xacquire
iret
dec
dec
imul
mov
xchg
push
ljmp
ja
push
hlt
jbe
fcom
and
in
imul
xor
icebp
stc
push
or
inc
in
mov
push
das
fistpll
mov
inc
sbb
cmp
out
adc
stos
mov
jmp
mov
adc
add
push
cmp
pop
das
jne
ds
pop
pushl
fimull
pop
lods
movsl
cmpsb
cltd
mov
xchg
inc
lock
and
adc
decl
scas
adc
xchg
xchg
push
aad
push
push
add
mov
cmc
lods
push
loope
dec
inc
cmpsb
xchg
ret
inc
out
cli
pushl
sub
inc
mov
into
dec
jb
mov
pop
lds
jmp
enter
sub
loop
sbb
fsubrs
movsl
adc
out
ds
lock
popa
lcall
loop
xchg
sarl
inc
jo
addl
mov
xor
call
push
in
cmp
hlt
or
mov
pop
mov
mov
sbb
lcall
sub
icebp
inc
push
pop
mov
in
xchg
and
fcomp
mov
iret
jb
jge
mov
pop
push
jnp
adc
lret
inc
push
aaa
enter
test
sbb
xchg
movswl
stc
cmp
aaa
movsb
xchg
ljmp
and
in
shll
int3
leave
add
mov
and
les
cmp
cld
out
pop
push
sarl
adc
mov
scas
mov
in
pop
xor
sub
mov
push
xor
icebp
lret
or
fcmovnu
clc
sbb
cmp
scas
and
sub
stos
jbe
fisubl
and
movsl
sub
mov
lea
divl
lods
xor
mov
ljmp
lcall
push
cmp
movsl
xchg
mov
sub
outsw
dec
xchg
cltd
xor
ljmp
rclb
cmp
mov
out
mov
inc
jo
sub
xchg
decl
dec
sahf
call
inc
pop
repz
imul
ja
hlt
paddsw
ret
rorl
add
ljmp
fsubrs
sbb
cmp
lock
xchg
dec
fwait
iret
cs
pop
imull
inc
insl
fs
cmp
and
in
mov
arpl
inc
jb
jp
aaa
pop
pop
dec
leave
into
cmp
mov
dec
mov
into
out
loopne
inc
xchg
insb
xchg
scas
clc
xchg
add
add
jnp
aam
mov
decl
in
ret
decl
ret
sbb
sbb
xchg
mov
jne
mov
fmulp
mov
imul
lods
dec
ret
in
sbb
adc
stc
leave
imul
sub
or
jo
inc
cmp
repnz
popf
addr16
out
mull
lea
inc
clc
in
jmp
jecxz
cs
sti
xchg
sti
xchg
adc
ljmp
sub
call
jp
sub
pop
lods
mov
es
lahf
pusha
pop
xchg
adc
gs
in
inc
jp
mov
jns
dec
divl
add
adc
les
incl
jl
dec
add
push
cli
fistpll
rcrb
lock
ret
mov
pushl
lea
je
fs
inc
lods
int
pop
mov
mov
mov
lcall
xchg
sti
or
xchg
ret
pop
pop
rolb
into
mov
add
mov
cmp
adc
xchg
push
std
push
insl
iret
push
scas
jp
cli
sti
mov
orb
sub
add
out
gs
outsl
jne
out
or
adc
popf
cmp
call
pop
mov
repz
stos
pop
loop
mov
xor
int3
and
cmp
lcall
mov
adc
mov
orl
mov
mov
xchg
or
mov
jmp
dec
das
fidivrs
aad
sub
lret
sbb
scas
jmp
mov
dec
mov
fimull
decb
push
aad
xchg
aad
mov
lcall
ss
or
jecxz
mov
in
lds
incl
enter
mov
push
add
inc
aad
mov
add
ljmp
pop
loop
imul
sbb
dec
pop
push
popa
jnp
sbb
sbb
ljmp
imul
mov
jge
jmp
pop
push
inc
jl
mov
cli
movsl
xchg
pusha
xchg
fucomi
lods
cs
addb
insb
push
cltd
adc
dec
and
hlt
fst
add
insl
lcall
into
adc
add
jae
in
andb
lcall
movb
pop
cmc
out
sub
mov
xchg
sbb
ret
jmp
or
mov
ljmp
icebp
lods
stc
fmul
cmp
xor
or
inc
pop
aas
add
xor
ljmp
xor
lock
inc
ficomps
push
test
mov
cmc
insb
aam
xor
jne
inc
xchg
lock
lcall
jno
push
out
sub
aam
notb
push
inc
adc
sub
out
jbe
xchg
add
or
pop
lock
mov
mov
inc
xlat
mov
into
push
jo
enter
rcll
jo
jg
pop
icebp
pushl
dec
ficoml
repnz
cld
adc
mov
lahf
pop
scas
cmc
push
mov
pushl
std
jb
jbe
cwtl
loop
arpl
std
cmp
pop
shrl
mov
jmp
dec
popf
mov
lock
movsb
push
pushf
jno
adc
mov
out
lcall
fisubrl
jbe
cmc
or
or
or
push
cwtl
pusha
pop
std
stos
imul
jnp
fbstp
sbb
xor
dec
sub
stos
or
ljmp
push
das
repz
mov
in
stos
jmp
adc
mov
leave
jg
cli
call
int3
push
mov
mov
cmp
fcmovb
xchg
jmp
xchg
icebp
inc
std
lahf
ja
xor
aaa
pop
pop
ret
decb
add
mov
sbb
or
lods
call
inc
stos
and
xchg
fcmovbe
mov
pop
inc
inc
adc
call
xor
dec
sti
xor
inc
sbb
xchg
test
aas
icebp
pop
ret
aad
jmp
cmp
ja
fisubrl
in
test
lods
xor
imul
pushl
mov
sub
dec
or
inc
fists
pushl
divl
test
jmp
mov
hlt
jl
js
jle
pop
xor
dec
cmp
xor
adc
lods
mov
test
aad
push
cltd
idivl
jno
and
ljmp
mov
jg
mov
les
mov
ds
add
fidivrl
ljmp
dec
mov
int3
pop
cs
mov
and
push
xor
idiv
test
push
jmp
mov
pop
je
daa
call
sbb
sub
js
jg
lret
scas
pop
sub
cs
loope
mov
andb
inc
push
and
mov
lcall
cmpsb
call
fdivs
adc
inc
pop
ljmp
dec
imul
shlb
mov
cltd
jle
or
call
adc
and
gs
pop
xchg
repnz
push
mov
decl
shlb
mov
stc
js
fcomip
out
ja
shll
cmp
inc
ss
pushf
dec
cli
decl
dec
int3
mov
xchg
ss
push
pop
push
dec
pop
or
mov
out
push
lret
pop
ss
mov
adc
xchg
out
mull
gs
dec
pushf
mov
out
cli
mov
pop
fnstenv
mov
sti
mov
cmp
in
js
or
jae
push
jmp
push
jne
clc
sub
ljmp
inc
popf
cld
sub
and
xchg
mov
inc
popf
inc
lods
jl
xor
jp
repnz
ljmp
ret
aam
std
ljmp
pushf
mov
push
call
sub
imul
loopne
jbe
sub
in
mov
outsl
xchg
mov
decl
fs
icebp
mov
pop
mov
add
mov
call
mov
mov
push
xor
leave
dec
xor
call
adc
push
inc
pop
lcall
shlb
inc
xor
pop
mov
test
pop
and
adc
push
fnsave
sub
dec
cmp
dec
or
xlat
call
jns
xchg
and
sub
mov
stos
mov
add
ljmp
or
cli
stos
jp
dec
adc
adc
orl
jg
mov
daa
sahf
aas
jno
test
jge
sub
jle
dec
dec
inc
stc
rcrl
lcall
and
mov
or
add
sarl
sbb
add
in
nop
jno
cmpsb
pop
scas
pop
cmp
or
cltd
cmp
dec
pop
lds
decl
addb
mov
cmp
int3
or
ljmp
fdiv
adc
jmp
sbb
sub
pop
ljmp
stc
lcall
mov
jb
xrelease
in
mov
rcrl
pop
leave
out
addb
fcomip
mov
mov
mov
imull
cmp
int3
shrl
adc
call
sub
or
lret
pop
inc
insl
shr
inc
int
jg
jae
mov
or
flds
jl
xlat
outsl
add
inc
sub
outsb
inc
ja
sub
mov
mov
pop
dec
push
pop
nop
lret
mov
mov
mov
lret
stos
lcall
std
dec
push
into
jae
into
adc
popa
inc
push
xchg
sbb
in
pushl
add
das
in
mov
inc
xchg
fcomi
push
sar
fistl
sbb
ljmp
scas
jno
inc
loope
in
inc
loope
or
stc
cmp
sbb
cmp
or
xlat
fstpt
pop
enter
ror
xchg
ret
or
mov
inc
cmp
xchg
push
mov
pusha
inc
call
push
lret
inc
inc
clc
ds
decl
hlt
adc
jno
rorb
xor
int3
ss
popa
or
push
pushl
sbb
insl
lods
fwait
pop
cmp
repnz
mov
inc
jle
xor
ds
stos
loopne
push
jmp
sbb
pop
fildll
or
inc
mov
mov
sbb
adc
mov
cmp
jmp
insl
rorl
cs
gs
fsubrl
mov
jo
and
sub
pop
push
jo
add
dec
ret
decl
add
pop
xor
mov
outsl
jl
add
jmp
aad
outsl
jmp
dec
add
and
mov
inc
outsb
lds
les
dec
rcrl
mov
pusha
jmp
loopne
cmpsl
sub
movsl
and
movsl
mov
mov
push
xor
je
and
call
mov
insl
sub
lea
push
or
in
or
xor
aaa
mov
call
adc
mov
ljmp
adc
fdivs
shlb
in
adc
cmp
aaa
push
dec
push
call
pop
lcall
mov
repz
in
push
dec
scas
icebp
dec
scas
dec
or
pop
sti
rcrb
insl
xchg
and
stos
fildll
loope
aad
aad
movsb
sbb
push
sub
leave
cltd
xchg
loop
xchg
cmpsb
dec
fcomp
movsl
mov
ss
lret
sahf
dec
fildl
fwait
clc
mov
and
icebp
fcoms
mov
cmp
cld
pushl
or
jbe
cmpsl
xchg
push
pop
sbbb
incl
inc
cld
insl
xor
sbb
fildll
mov
sbb
mov
adc
call
pop
mov
arpl
out
addl
scas
cmpsb
mov
cmp
dec
pop
das
cli
cld
cld
imul
xor
inc
cmp
pop
sub
cmp
test
shrb
dec
decl
xor
cmp
cwtl
je
sub
mov
ja
pop
imul
out
leave
xchg
cmp
inc
mov
imul
decl
pop
mov
mov
cmp
add
jo
cmp
inc
in
loope
lcall
addr16
xchg
push
mov
sbb
mov
xor
cmc
jl
lret
ljmp
xor
popf
dec
jge
cli
lret
pop
mov
std
out
and
dec
adc
fstp
mov
push
das
imulb
pop
aaa
jmp
jmp
cmc
mov
ljmp
fidivs
xchg
adc
adc
cmp
lcall
es
cmp
fidivrl
ljmp
jmp
insb
cmp
out
pop
testb
movq
in
fadds
incl
pop
mov
mov
outsb
bound
es
sub
cmp
decl
into
inc
outsl
mov
inc
clc
mov
cmpsb
inc
push
lds
scas
add
loopne
dec
je
gs
pop
jg
xor
and
inc
das
scas
dec
or
xchg
mov
scas
or
dec
stc
mov
call
add
je
lret
or
pushl
mov
mov
pop
notl
decl
add
movsl
cmpsl
pop
mov
pusha
mov
ret
pushf
lahf
outsl
add
sbb
mov
lcall
popa
cmpsb
cmpsb
dec
cs
stos
loopne
stos
inc
fnsave
cmp
in
repz
incl
imul
cmp
jl
jbe
aam
mov
jno
sarl
imul
jl
decl
add
adc
adc
and
add
cmc
add
fdivs
pushl
jnp
aad
jmp
mov
sbb
jne
stos
inc
stos
stos
xor
nop
stos
lahf
stos
pop
pusha
ret
jmp
incl
idivb
sub
xor
xor
fstp
jge
mov
and
out
sbb
jl
cmp
push
hlt
mov
xorb
mov
mov
movsb
pop
lcall
das
dec
add
add
lahf
fisttps
and
pusha
loope
or
call
dec
iret
mov
pop
push
inc
pop
icebp
enter
popf
popa
xor
adc
jle
clc
cwtl
mov
je
decl
mov
mov
test
repnz
aam
mov
sub
aas
imul
aam
shrl
les
sub
or
test
aas
pop
cld
das
pop
cmc
jno
rcrb
aas
cs
decl
xor
repnz
jbe
negb
cmp
fisttpl
outsl
popf
xorb
decl
cmp
lahf
daa
jne
or
mov
call
xor
adc
lfs
loopne
xchg
les
lods
xorb
mov
scas
add
lea
jl
lock
in
in
dec
dec
pop
scas
jle
lcall
mov
fisttpl
jno
lahf
mov
mov
xchg
xorl
jae
lahf
sbb
sbb
fcomip
decl
pop
or
ficoms
daa
lods
pop
pusha
sbb
dec
pop
cs
loopne
pushl
enter
cmp
leave
add
jge
das
fwait
dec
sbb
pop
sbb
xlat
add
decl
push
ljmp
fcoms
xchg
icebp
sbb
cmc
mov
incl
inc
loope
mov
mov
inc
cli
push
lcall
in
inc
ds
push
cmp
jge
inc
xchg
cli
jmp
lods
inc
aas
cld
and
dec
adc
mov
test
subb
test
mov
pop
ds
inc
push
subb
jb
outsb
std
nop
enter
mov
xchg
push
ds
mov
ror
sti
or
fldcw
pop
cmc
outsb
icebp
pushf
xor
lock
jle
xchg
inc
mov
and
je
pop
sbb
add
call
jp
stos
sbb
jg
xor
adc
mov
fcomps
int3
mov
fsubr
pusha
mov
mov
in
insb
mov
sarl
gs
push
subl
cld
or
and
fisubl
fisttpll
pop
mov
outsb
xchg
mov
cmpsb
aaa
mov
fcomip
incl
out
pop
or
inc
jne
rcrb
cmp
sbb
decl
divb
popa
inc
pop
jmp
pop
adc
lcall
call
adc
movsl
int3
push
jle
pop
cmp
mov
jae
dec
fwait
pop
push
mov
push
pop
jns
call
outsl
lret
call
cmp
decb
pop
call
aad
arpl
out
cmpsb
xchg
pop
mov
sbb
ljmp
jns
stos
xchg
lods
push
adc
mov
mov
scas
add
ljmp
fs
lock
pop
orb
nop
mov
adc
icebp
sti
jb
lcall
adc
mov
das
mov
cld
jmp
inc
aas
cmp
mov
bound
or
pushl
divb
fcoms
pusha
jge
fiaddl
add
mov
pop
mov
and
insl
push
xor
fcomip
decl
pop
mov
imul
int
test
inc
nop
xchg
inc
jb
jnp
push
xlat
mov
popa
enter
ret
in
push
mov
iret
mov
mov
decl
cmp
cmp
lahf
xor
cmp
xor
push
cltd
int
cmp
aad
mov
xchg
dec
faddp
shlb
scas
xchg
setnp
pop
cmp
test
cmpsb
push
inc
lcall
jl
cmc
fimuls
push
pop
pop
add
arpl
mov
cmp
insb
js
scas
mov
adc
xor
fucomp
dec
mov
rorl
lock
pushl
xchg
or
std
leave
or
nop
rcll
sahf
mov
jle
xor
call
bound
mov
cld
jbe
mov
mov
add
add
mov
adc
adc
mov
mov
xchg
stos
xchg
mov
inc
and
cmpb
mov
loopne
js
inc
xor
and
popa
cld
pop
pusha
cmc
xchg
and
sbb
movsb
cmpsl
stos
vpsadbw
mov
lods
rcll
call
std
aam
cmp
sub
mov
dec
imul
pusha
shl
cmpsl
aaa
std
call
dec
mov
nop
and
movsl
jmp
sahf
loop
in
js
fldenv
in
imulb
es
es
out
pop
dec
cli
cmp
jno
mov
ja
aas
cmpsl
push
xchg
in
arpl
adc
or
sbb
pusha
fstpl
lock
jo
jg
cmp
add
cltd
ja
mov
insb
lret
mov
imul
jecxz
mov
xor
lcall
outsb
shll
mov
mov
mov
cltd
sub
lock
shr
mov
dec
push
scas
outsb
ljmp
scas
cli
loop
roll
cwtl
insb
or
mov
fucomp
decl
subl
lea
dec
add
jmp
sti
arpl
aad
incl
mov
fwait
hlt
adc
daa
jmp
or
push
sar
pushl
push
dec
jecxz
femms
jo
jg
add
cmpsl
mov
mov
cli
popa
pop
and
push
inc
sbb
inc
gs
mov
hlt
and
lods
sbb
pop
fldl
mov
sub
inc
or
into
add
pop
push
outsl
push
jg
jbe
decl
jne
hlt
fisttps
and
loop
xor
addr16
pushf
adc
pop
mov
ds
adc
es
leave
daa
data16
ljmp
lock
jmp
ret
push
jnp
mov
jl
in
popa
neg
dec
sub
xchg
dec
lcall
fcoms
xchg
gs
push
xor
das
mov
insb
pop
idiv
ljmp
sarb
mov
outsb
jecxz
rol
imull
push
in
mov
cmpsl
mov
jg
icebp
es
std
fsub
ret
or
adc
mov
shr
in
out
xlat
push
mov
push
fmuls
xchg
iret
ss
shl
cli
ljmp
fisubrs
mov
ror
or
add
repz
out
mov
jo
dec
aas
sbb
std
dec
pop
rcll
aaa
xor
and
sar
ljmp
popf
add
xchg
xchg
push
and
outsb
xchg
sub
icebp
pop
and
call
mov
cmpsb
sbb
inc
pop
pop
sub
sbb
iret
dec
and
add
ljmp
push
repz
inc
jle
cwtl
or
divl
loopne
add
fcmove
mov
jo,pt
cld
call
bound
sub
loop
cmp
stos
adc
sbb
repz
addb
add
add
mov
cli
push
and
lcall
call
cmp
movsl
or
repnz
mov
mov
xchg
mov
in
xor
dec
dec
push
mov
or
mov
xchg
bound
xchg
mov
movsl
sbb
add
xchg
outsb
std
mov
add
shl
lods
push
orl
decl
aam
jno
mov
cmp
pushf
dec
mov
mov
push
adc
mov
inc
add
fwait
iret
mov
pop
push
movsb
outsb
lcall
scas
dec
cwtl
pop
push
cmp
mov
push
lret
repz
inc
inc
jnp
or
fstpl
lahf
dec
pusha
mov
adc
xor
or
ljmp
pusha
cmp
sbb
rolb
lahf
and
das
or
call
je
pop
mov
push
and
or
xchg
and
mov
mov
js
pop
xor
test
mov
je
das
cli
out
imulb
dec
leave
cmc
add
and
test
popf
clc
jmp
repz
pushl
cmc
push
jns
testl
sbb
adc
out
mov
cmp
cmp
incl
inc
ja
mov
insb
rorb
orl
test
in
out
adc
mov
repnz
mov
adc
outsl
jg
mov
jmp
aad
add
cld
xor
call
sub
sbb
lods
mov
aaa
rcll
addr16
psubb
and
imul
jns
scas
cli
aas
cmp
pop
cmp
call
pop
mov
stos
inc
sarl
sbb
cmpsb
mov
push
orb
sbb
outsb
daa
pushf
fdivs
aaa
cli
jnp
das
leave
outsb
fsubrs
shll
imul
add
dec
fcmovb
pop
push
xchg
std
dec
scas
adc
mov
pushf
jmp
test
sub
inc
sub
call
push
push
and
mov
dec
aam
sub
shl
out
and
cmpsb
call
ss
inc
popf
daa
in
sahf
testb
call
jnp
lods
test
mov
arpl
and
adc
lds
cmpsb
xor
les
add
decl
stc
loop
adc
test
mov
scas
sub
sbb
sub
mov
mov
lock
cltd
addr16
je
pushf
pusha
push
scas
xor
sahf
xchg
sub
pop
mov
xor
decl
mov
shll
mov
fdivrs
lods
btsl
jmp
scas
fdivp
inc
popa
mov
scas
cmp
mov
out
xor
ret
hlt
pop
loopne
jmp
xchg
loop
cltd
sbb
mov
dec
ret
clc
mov
adc
push
push
xor
adc
aaa
fsubrs
addr16
stc
insl
data16
xor
mov
int3
push
mov
xchg
inc
push
sahf
mov
sbb
enter
mov
std
aam
or
ret
sbb
mov
xchg
inc
jne
pusha
push
push
push
sub
adc
add
mov
data16
dec
lahf
fistpll
ljmp
in
call
add
stos
mov
cmpsb
nop
call
push
mov
mov
jne
mull
fwait
jg
dec
mov
mov
cmpsl
inc
mov
mov
inc
loope
mov
insl
jmp
test
mov
adc
xchg
in
or
popf
stos
mov
inc
inc
mov
jecxz
add
cmp
push
outsl
inc
jns
and
cltd
jno
hlt
das
nop
cmc
xchg
ror
pop
stos
xchg
fmull
movsb
and
insl
testb
lcall
inc
pushf
leave
addr16
mov
cmp
sahf
movsb
stos
lds
ljmp
test
js
add
iret
out
aaa
int
ret
jecxz
in
mov
or
insb
xor
inc
mov
sbb
add
adc
inc
xrelease
stos
negb
push
sti
out
add
in
adc
xchg
xor
mov
mov
out
adc
iret
pop
jge
pop
sbb
into
popf
xlat
stos
daa
loopne
sbbl
mov
add
jmp
pop
rcr
out
xchg
aam
jmp
mov
imul
push
mov
dec
sub
jnp
sub
add
sub
and
adc
sbb
dec
jno
mov
jg
call
push
jmp
jns
int3
jp
imul
test
into
iret
pushf
pop
les
sbb
decl
loop
sbb
xor
xlat
in
decl
add
addr16
push
cld
popf
add
outsl
enter
jg
lret
fadds
outsl
inc
cld
xchg
lahf
inc
push
ret
pusha
inc
mov
adc
jmp
xor
push
add
sub
inc
lods
leave
push
cli
lods
cmpl
lcall
dec
xor
xor
dec
outsl
xor
mov
das
jo
xchg
mov
mov
cmp
decl
mov
lcall
ds
pop
cmpl
mov
mov
xlat
call
std
decl
mov
pop
xor
inc
mov
pop
inc
mov
adc
mov
orb
scas
mov
scas
sub
adc
sbb
pushf
push
leave
shrl
sahf
xchg
shr
mov
decb
cmp
jp
push
sub
stos
jecxz
inc
jns
mov
ljmp
inc
imul
js
subl
xor
int3
mov
sbb
decl
push
ret
popf
cmp
xor
hlt
jns
jne
push
cmp
xor
loop
fwait
pushl
xor
aad
pop
loope
mov
loop
pop
mov
push
add
enter
sti
or
mov
or
pop
nop
xor
sbb
xor
lock
stos
or
mov
incl
pop
dec
jmp
ljmp
int3
lahf
mov
imul
fwait
or
negb
jmp
mov
mov
int
fdivl
cmpsl
or
ljmp
int3
and
das
fidivrl
push
jno
xchg
scas
arpl
jb
fdiv
inc
out
cmp
std
addr16
aas
dec
rcrb
in
mov
sbb
push
dec
push
lcall
test
ficoms
and
mov
jecxz
xchg
subl
pop
andb
decl
jmp
and
jge
lods
pop
fwait
dec
and
mov
dec
dec
sbb
scas
pop
xchg
jmp
pop
scas
negb
mov
outsl
mov
jnp
test
xchg
xchg
jle
ljmp
call
and
stos
sub
cmp
in
cmpsl
testb
aas
fdivrs
pop
aaa
out
fcomip
incl
in
jle
ss
xor
cld
jmp
fstpt
sub
lcall
pushf
in
sbb
lret
cltd
arpl
cmp
cmp
sbb
aam
pop
test
incl
roll
jecxz
es
sub
push
loop
pop
inc
mov
push
cmp
xor
aaa
mov
cmp
or
adc
aad
cmpl
jbe
arpl
or
sub
movsl
rclb
in
enter
ljmp
gs
mov
lcall
inc
push
iret
push
sub
xchg
lock
adc
xchg
push
mov
mov
sub
dec
pushl
daa
xchg
or
xor
std
pop
sub
or
jmp
sub
mov
dec
fwait
movsb
mov
mov
mov
push
jnp
call
popf
xchg
push
xchg
fisubl
add
dec
ss
inc
rolb
pop
mov
xor
cmp
decl
xor
dec
mov
lahf
fildl
jb
mov
xorl
mov
dec
xor
insb
int3
out
std
incl
mov
and
push
popa
fs
mov
sub
dec
out
dec
mov
or
and
fcmovb
jmp
xor
xchg
fistpl
cmp
add
ljmp
sahf
int
shll
cmpsl
push
lea
fisubs
pop
int
fmul
enter
adc
and
pop
ljmp
xor
cwtl
lods
pop
iret
cmpsb
mov
cmpsb
mov
push
or
pop
sti
mov
mov
imul
and
int
sti
add
xor
xlat
loop
mov
pusha
es
jge
bound
stc
sti
movb
out
fsubrl
call
pop
mov
clc
in
popa
add
lods
xor
dec
cmpsl
inc
mov
ds
mov
lcall
cmc
and
popa
das
xor
cmp
jnp
mov
and
cmc
xlat
mull
ljmp
flds
jg
sbb
cltd
add
scas
or
mov
mov
jle
aam
push
je
scas
clc
popf
adc
inc
push
or
xor
inc
pop
jns
xchg
ja
push
pop
dec
sub
jle
negb
sbb
sbb
xchg
cli
push
mov
dec
or
or
lret
cmp
out
clc
mov
insl
das
xchg
mov
stos
insl
xlat
outsb
std
jge
jg
add
xor
and
sahf
cmp
adc
jg
decl
mov
repnz
xor
in
jg
jle
aaa
in
dec
pop
arpl
mov
mov
cltd
cmp
das
cmp
repz
push
push
mov
pop
into
jl
xchg
fmulp
sbb
ds
sub
es
dec
mov
ficoms
xlat
stos
and
cmpsl
adc
pop
sbb
push
fildl
sub
mov
icebp
fistl
jno
call
adc
dec
pop
imul
in
cltd
mov
in
fmulp
jns
test
ljmp
loope
mov
sbb
and
mov
add
movsb
ljmp
and
addr16
aam
es
iret
mov
fnstsw
or
decl
adc
push
popa
dec
mov
lock
faddl
imul
jle
stc
mov
adc
andb
adc
fcomip
test
push
bound
ja
fimull
push
ret
insb
pushf
and
cmp
lea
int
pop
pop
or
out
dec
inc
adc
xor
pop
jae
test
lcall
jecxz
inc
mov
aam
cmp
shrl
cmp
int
jnp
mov
cmc
decl
jecxz
mov
or
insl
sbb
cmp
xor
fcoms
cmpsb
cmp
inc
fs
xor
punpckhwd
cld
inc
out
or
push
sbb
xor
adc
jno
xchg
fcos
ljmp
cmp
jmp
add
adc
mov
jg
jmp
pop
test
ficomps
shl
movsb
pop
add
rol
mov
lods
lcall
rolb
and
and
fucomi
adc
or
lods
aam
or
mov
ds
inc
mov
insl
cmp
jne
outsl
or
inc
imul
pop
mov
sbb
gs
out
cmpsl
pop
or
imull
and
mov
mov
das
sbb
or
das
inc
push
pusha
xor
xchg
mov
jl,pt
in
pop
add
in
push
sub
das
xchg
imul
push
xchg
inc
stc
adc
sub
xor
pop
xchg
mov
cmp
call
ficoml
clc
sub
out
or
incl
mov
dec
subb
sahf
repnz
push
fimuls
stc
cwtl
pop
in
cli
incl
cmpsb
xor
mov
sbb
dec
mov
adc
scas
lods
jmp
xchg
mov
js
stc
js
andl
test
push
pop
inc
ret
push
ss
cmpsl
sahf
pop
adc
call
xchg
lea
sbb
or
and
shl
push
imul
add
pushl
icebp
mov
cmp
mov
cmp
dec
mov
mov
sub
dec
dec
in
idiv
mov
jmp
fsubrl
or
outsb
ja
xor
in
popf
ss
mov
fistpl
pusha
decl
xchg
or
lcall
mov
cmp
lds
call
dec
sub
pop
push
push
test
pop
cmp
sti
mov
enter
dec
push
inc
rcrb
pop
outsl
sti
and
loopne
push
dec
andb
sub
sbb
pushf
dec
mov
jge
sub
mov
fadd
popa
jp
les
dec
xchg
add
or
sub
and
les
push
movsb
imul
pop
outsb
push
ret
std
incl
sbb
out
xorb
jb
subl
call
xchg
dec
dec
cvtps2pd
decl
jae,pn
jl
hlt
popa
sub
jl
adc
push
xor
jg
psubb
ss
pop
test
aam
add
sub
inc
fistl
dec
and
sub
ja
pop
cmpsl
cmp
dec
jmp
loope
lds
call
jge
test
scas
roll
add
dec
lret
ljmp
dec
cmpl
push
mov
iret
mov
adc
arpl
cs
push
adc
mov
mov
outsb
or
lcall
pop
adc
sbb
sub
mov
cmp
cli
jns
push
nop
cmc
pop
cld
mov
mov
fistps
ljmp
std
shll
inc
rolb
inc
imul
adc
mov
rcl
call
xchg
fidivs
push
inc
push
lds
test
lds
push
js
sbb
jno
push
dec
jo
sbb
jno
mov
aaa
int3
outsl
jecxz
incl
push
ja
jae
roll
aad
gs
pop
push
les
mov
mov
in
pop
insb
lds
adc
mov
adc
jnp
jge
iret
incl
add
imul
or
dec
lahf
inc
loope
imul
pushl
xchg
pop
xor
aad
aam
add
push
stos
jns
sbb
ljmp
cmp
inc
mov
xor
fimuls
or
cmp
stos
decl
xor
ret
or
pop
adc
insl
mov
jne
add
aad
mov
ret
ljmp
bound
pop
and
test
cmpsb
xor
inc
ret
incl
push
hlt
adc
inc
mov
adc
push
out
sbb
ret
jne
inc
mov
out
mov
mov
inc
or
into
jmp
sub
mov
aad
out
add
incl
or
repz
lods
lret
ss
sub
inc
sub
sahf
or
pop
mov
lea
jne
out
cli
adc
and
fisubrl
xor
xchg
dec
roll
xchg
in
xorb
frstor
adc
je
pop
mov
test
pusha
daa
pop
les
jbe
dec
and
icebp
adc
cmp
mov
dec
xchg
pop
cmpsb
mov
ss
call
xor
cmpsb
pusha
mov
inc
repnz
imul
add
xor
push
std
fnstsw
fwait
dec
stos
ja
repnz
loopne
pop
lods
add
repnz
cld
jg
jns
push
add
ljmp
imul
insl
adc
inc
fiadds
lods
insl
cld
and
clc
nop
inc
std
sarl
movsb
inc
ret
ret
insl
insl
ljmp
shrb
popf
call
xchg
cld
pushl
and
aam
cli
sti
push
loope
pop
scas
xor
sarb
movsl
pushf
test
push
lock
repz
loopne
push
jl
xchg
jne
lcall
mov
shr
sahf
aad
jb
aas
lock
cltd
jl
xchg
lcall
add
ljmp
pop
iret
es
js
push
out
add
lock
outsl
xchg
sbb
jnp
loope
ljmp
mov
je
pop
int
cmc
cli
xchg
sbb
add
or
dec
hlt
dec
mov
mov
decl
nop
dec
add
push
push
js
popa
push
jp
pop
inc
add
mov
pop
insl
lock
pop
sbb
mov
mov
adc
push
cltd
addr16
inc
les
decl
fidivrs
lret
add
outsl
add
jb
test
cmpsb
and
cmpsb
mov
jo
mov
mov
mov
imul
fdiv
clc
test
mov
pavgw
cmc
cmpsb
xor
jmp
clc
jle
adc
xchg
mov
push
daa
mov
loopne
mov
mov
pop
ja
jmp
into
sahf
scas
xchg
outsb
fstps
lods
mov
scas
inc
xchg
mov
inc
shl
lods
mov
fcmovne
cmp
lock
std
jp
cmp
test
dec
add
push
enter
xchg
bound
dec
aad
and
js
repnz
call
fdivs
ljmp
rolb
insb
mov
inc
mov
cli
push
mov
imul
jecxz
xor
cmc
pop
xchg
arpl
pop
fs
lods
pop
adc
adc
int
jle
pop
idivl
sahf
je
mov
imul
cmp
pop
insl
jmp
je
pop
inc
add
jp
es
insl
and
decl
lret
sub
dec
and
and
call
cmp
in
pusha
or
cmpsb
imul
jg
decb
dec
aas
sub
inc
or
shl
cmp
test
cmp
inc
jg
pop
jns
in
or
push
imul
add
lcall
loope
mov
icebp
pushl
les
cwtl
dec
xlat
mov
call
and
jns
jecxz
decl
fs
xchg
test
ja
jle
add
push
jnp
test
and
jmp
hlt
dec
inc
lret
sbb
dec
sub
push
lret
rclb
mov
xchg
out
adc
dec
in
loop
fdiv
ss
jg
xor
push
icebp
das
sar
xchg
sub
cli
sub
cmc
nop
mov
pushl
ret
jnp
shl
into
idivb
pop
fs
cmc
adc
cmp
inc
out
lret
cmp
fcomip
out
scas
xchg
loopne
mov
imul
jle
mov
cmc
imul
leave
mov
xchg
pop
mov
mov
sub
add
pop
lds
inc
jb
out
mov
lea
hlt
mov
into
scas
sub
lods
pop
lahf
ret
cli
jno
stos
mov
adc
in
jbe
rcrb
outsl
cld
mov
mov
idivl
cld
mov
icebp
out
sbb
in
xor
mov
outsl
jb
dec
fisubl
iret
xor
adc
rcll
add
dec
pop
data16
mov
sahf
xor
in
pop
xchg
push
and
in
push
bound
mov
call
fsubs
sbb
jmp
inc
cld
add
loopne
loopne
inc
sub
add
out
add
movsb
pop
or
or
jbe
jmp
jb
add
mov
repz
adc
xor
inc
mov
or
push
fldl2t
sbb
xchg
dec
cmp
cvttps2pi
or
lods
gs
in
icebp
ds
ljmp
adc
pop
inc
test
sbb
xor
adc
pop
ret
aad
ljmp
popa
and
mov
dec
pushf
mov
dec
pop
inc
dec
shlb
mov
jecxz
jg
ljmp
fcmovbe
mov
sub
ss
mov
shrb
cmp
adc
xor
pop
adc
mov
sub
pop
cwtl
push
sar
decl
mov
gs
enter
and
xor
xchg
push
xor
loopne
fistpl
ljmp
inc
js
mov
lock
ret
scas
adcb
jne
pusha
ljmp
jg
loop
dec
test
in
pop
loopne
inc
cmc
scas
iret
subb
lret
cltd
hlt
test
or
jno
int3
incl
dec
in
negl
inc
out
fucomi
out
xor
xchg
sbb
inc
sbb
les
popf
inc
addr16
push
call
ds
pusha
daa
jnp
repnz
sub
jge
xor
push
sub
jmp
mov
es
mov
std
cld
xchg
pushl
cmpsl
sti
sub
test
and
ljmp
mov
out
loopne
cld
push
out
rclb
inc
insl
popa
mov
mov
out
aaa
cld
cmp
dec
dec
les
iret
push
sub
mov
mov
pop
lock
ljmp
sbb
cmc
es
fstl
push
mov
scas
pushf
xchg
sbb
loop
or
lcall
add
stos
jbe
ficoms
mov
jge
es
ljmp
cmp
inc
xchg
xlat
stos
sbb
mov
and
xchg
mov
mov
ja
mov
mov
fstp
xor
mov
pop
xor
les
xchg
scas
js
pop
aaa
xchg
movsb
test
mov
imul
adc
push
mov
orl
leave
push
sub
dec
out
push
fiaddl
and
jb
dec
jne
jno
jp
iret
arpl
pop
rcll
sbb
or
mov
decl
sbb
adc
adc
xchg
aaa
enter
loope,pt
lods
sub
rcr
iret
incl
cmpsl
dec
cmpsb
mov
mov
mov
pop
jg
out
test
mov
andl
push
add
lea
lock
sbbb
inc
mov
inc
hlt
cld
loope
in
das
outsb
cmp
dec
add
or
xchg
mov
test
mov
aad
data16
ljmp
mov
mov
adc
std
cmp
pop
inc
adc
sbb
pop
mov
mov
out
loop
push
and
fsubrl
ljmp
rcll
shll
inc
jecxz
dec
inc
sbb
shlb
rolb
jg
lcall
dec
enter
jl
test
dec
sbb
dec
adc
add
mov
incl
mov
fadds
call
mov
idivb
pushl
mov
jmp
in
jmp
pop
jne
pop
outsl
push
or
sub
ljmp
jo
jo
repz
or
popa
mov
or
movq
xor
lcall
mov
cmp
jle
pop
sahf
scas
xchg
ds
sub
sarl
dec
test
or
mov
incl
shlb
mov
mov
iret
ds
stos
dec
and
sti
inc
ffreep
rclb
adc
push
lea
mov
lds
mov
jg
daa
or
dec
ret
fildll
repnz
pop
jae
push
xor
fmul
add
push
bound
cli
decl
lods
sahf
lods
pusha
cltd
push
test
mov
adc
xchg
push
decl
adc
sti
movsl
cwtl
out
jbe
aas
test
fdivrs
pop
sub
out
cmpsb
psubd
loop
test
fdivl
jno
pop
notb
pop
jp
leave
incl
mov
in
pop
inc
pop
xchg
add
pusha
aad
push
jl
leave
mov
push
jae
flds
repz
ljmp
sub
ljmp
outsb
pop
loope
jle
push
mov
or
decl
or
push
sub
adc
pop
push
push
jg
in
mov
pushl
std
push
add
inc
out
jb
stos
mov
lahf
fdivp
stc
mov
lcall
jmp
push
mov
cmp
cmp
shlb
sahf
call
incl
inc
fistps
push
test
in
add
insb
add
fdiv
ljmp
jnp
add
loopne
rcrl
repz
mov
xor
test
mov
jne
jmp
add
jl
aaa
cmp
xor
xor
jmp
fnsave
cmp
out
push
and
cmp
and
stos
insl
jae
mov
cs
jl
into
daa
and
add
sub
lock
cmp
lock
mov
jno
out
idivl
decl
jne
mulb
mov
push
je
adc
or
push
into
sbb
enter
ljmp
fstl
pop
mov
lahf
int3
fmuls
lods
ljmp
cmp
jmp
pop
scas
push
lret
or
inc
mov
dec
out
ficoms
int3
and
mov
fldl
cmpsb
inc
dec
xchg
xor
xchg
cmp
ljmp
aam
and
lahf
cli
mov
jmp
addr16
inc
xor
push
jbe
jbe
mov
dec
xor
mov
sub
xor
cwtl
or
out
and
clc
cwtl
cmp
in
xchg
or
in
xor
push
sub
mov
rcr
and
sbb
fistps
in
or
pop
repnz
aad
dec
pop
dec
push
jmp
pop
outsl
lods
push
cld
lods
cmp
jmp
in
lret
shl
inc
sbb
repnz
pop
or
mov
mov
sub
xor
push
gs
mov
jne
call
movsl
mov
mov
cld
pop
rorl
dec
dec
mov
int3
daa
jae
pop
pop
pop
inc
scas
and
mov
jnp
lret
mov
mov
fisttpl
inc
shrl
ljmp
cli
decl
add
neg
std
test
cmpsb
adc
test
xchg
dec
fcomi
pop
pop
subl
leave
int
dec
pop
iret
lret
and
sub
xlat
push
sbbl
lcall
std
add
out
sub
scas
dec
jmp
lahf
jge
gs
adc
icebp
call
lahf
insb
fidivl
ljmp
sub
iret
jg
ljmp
mov
xchg
out
aad
pop
mov
fidivs
fcomip
faddp
push
testl
pop
xchg
in
sahf
jle
mov
xor
xor
and
ljmp
mov
bound
jle
pop
cmpsl
dec
mov
addl
je
mov
cmp
pop
cmp
mov
pop
jnp
cmpsl
ljmp
push
inc
shr
ss
ficompl
decl
sbb
sbb
jnp
adc
push
jp
dec
inc
hlt
pushf
rcrb
loop
mov
xor
adc
jmp
sbb
xor
jmp
lret
or
and
enter
add
mov
incl
aam
pop
mov
jmp
jae
mov
sub
jle
mov
out
cli
jmp
outsl
jb
pop
loop
inc
push
dec
stos
mov
add
lahf
out
pushf
sub
das
call
cli
inc
rcl
nop
pushf
inc
push
pop
push
je
lret
repnz
out
subb
in
xchg
ljmp
ljmp
divb
mov
xchg
push
inc
mov
push
fbld
lret
aaa
pushf
incl
shl
mov
adc
int3
in
mov
mov
fistl
lahf
repnz
incl
xor
out
add
sub
out
rcll
jns
sbb
push
sti
dec
ret
lcall
pop
push
mov
mov
xor
jbe
adc
pop
xchg
sub
outsb
push
inc
loopne
xchg
jmp
inc
xchg
dec
lahf
xchg
mov
inc
push
fnsave
enter
adc
aad
pop
popa
lret
iret
shll
xchg
adc
inc
das
lock
jle
in
jae
rep
jnp
xlat
jae
lcall
xor
sbb
scas
jo
stc
push
adc
cmp
xchg
fcmovb
cmpsb
jp
dec
xacquire
jmp
jns
test
mov
aas
jnp
addl
dec
mov
jl
int
js
adc
pushl
push
mov
and
xchg
psrad
test
push
jl
jg
xor
xlat
popa
xor
popf
push
dec
mov
icebp
inc
and
fcomip
jmp
outsl
aam
or
and
jmp
roll
mov
ljmp
int
mov
and
mov
mov
hlt
decl
lock
inc
and
in
lods
jnp
cli
mov
in
decl
dec
mov
inc
ja
incb
or
movsb
jmp
or
dec
pushf
lds
ud0
decl
aaa
adc
call
cmpsl
or
bound
push
addb
dec
pop
mov
lods
pop
mov
lcall
xchg
leave
jg
leave
imul
pusha
or
addl
and
ljmp
add
mov
mov
jmp
push
push
out
xor
jmp
or
out
fistpl
out
push
stc
out
push
or
jns
xchg
jb
jp
das
sar
fsubs
lea
fistl
xor
jns
rorb
or
jmp
outsl
or
xor
rcll
sarb
mov
add
xchg
lcall
in
or
call
push
mov
pop
and
dec
pop
std
pushf
pop
sar
and
shl
fsubrp
dec
pop
test
lods
incl
jge
jbe
jle
aad
lea
pop
mov
push
sub
mov
decl
inc
mov
fwait
push
scas
jge
cmp
push
jo
jns
shr
pop
or
aad
das
lcall
sub
sub
aad
repnz
ficomps
shll
adc
xchg
ja
stos
call
idivb
scas
insb
notb
push
xor
mov
cwtl
mov
ffree
cs
fidivs
pop
pop
fnsave
xchg
les
ds
ud1
jmp
push
ljmp
mulb
and
lods
sbb
lods
popf
jecxz
jbe
jmp
dec
dec
fsubrs
and
push
jl
adc
int3
mov
lcall
add
ljmp
clc
pop
sbb
cmp
das
mov
aam
xchg
mov
ret
test
fimull
push
sub
jne
jg
sysenter
dec
fisttpll
pop
movsl
ja
insb
dec
cmp
lcall
dec
xor
cmp
ror
xchg
mov
mov
xor
jb
popa
pushf
cmp
add
insb
pop
and
ljmp
jle
cmpsb
dec
dec
test
sbb
mov
in
cmpsb
jb
cmp
inc
ljmp
adc
push
sub
je
add
fistpll
call
scas
fldt
mov
push
shrl
mov
lcall
pop
pop
test
xlat
push
xor
stos
insl
rorl
sub
push
addb
cmp
xchg
insl
scas
ljmp
sbb
pop
bound
test
cmp
dec
push
inc
rcll
pop
and
sti
ljmp
and
ret
push
ljmp
rcr
mov
xchg
lret
ljmp
adc
aas
dec
sub
or
pop
les
fs
push
push
shl
iret
dec
jg
mov
xchg
push
push
or
fbld
incl
out
test
hlt
mov
shrb
pushl
das
aaa
imul
jne
fisttpl
test
insb
cwtl
jecxz
ljmp
add
test
fsubrs
xchg
in
push
jmp
mov
mov
lahf
pop
xchg
stos
or
add
lret
cmpl
movsb
jge
out
call
js
popa
nop
mov
jns
xchg
jg,pt
mov
scas
and
add
xchg
push
js
xchg
aad
stos
gs
ret
jg
mov
shrb
popf
stc
mov
mov
jbe
rorl
sub
imul
xor
jg
push
aam
rorl
add
mov
sub
rorb
loopnew
and
jge
mov
cwtl
js
add
scas
mov
in
dec
cmpsl
mov
or
push
jbe
cmpsl
shrl
jmp
pop
push
pop
inc
enter
shll
and
mov
imul
inc
sub
test
cli
pop
mov
or
and
les
or
fcomps
in
mov
jno
stos
mov
pop
cltd
into
jno
inc
fidivl
mov
xchg
pop
cwtl
cmpsb
popa
rcrl
js
sub
pushf
out
subb
pop
push
cld
decl
cmp
pop
test
push
push
push
aad
or
fidivrs
fs
inc
dec
jle
je
or
or
in
mov
loop
out
xchg
cmpsl
mov
lods
decl
test
lcall
fstpl
adc
sar
loope
mov
call
xorb
and
jle
es
or
mov
mov
inc
pusha
sbb
roll
outsb
and
and
pop
test
stos
or
inc
testl
push
aad
movsb
lds
dec
mov
decl
inc
mov
addr16
pushf
jae
loopne
sbb
jne
dec
sub
int3
mov
pushl
sbb
es
xor
int
das
out
leave
sbbl
inc
jne
sub
js
jbe
lret
xlat
jae
test
dec
cli
push
dec
ficoms
push
pop
pusha
pop
scas
adc
hlt
clc
call
sub
xor
or
jb
dec
ret
xchg
cli
dec
jbe
add
mov
ljmp
push
rorl
sbb
and
push
pop
jno
out
inc
adc
call
daa
daa
fldcw
add
imul
outsb
jns
adc
push
smsw
decl
and
sbb
testb
xchg
int3
cmp
xor
imul
iret
mov
jl
out
or
mov
lret
jae
cmpsb
cvtpi2ps
and
sbb
cmpsl
dec
lcall
inc
lea
aaa
mov
ss
repz
cltd
imul
dec
push
popf
stos
jg
inc
mov
xor
sbb
cli
push
sub
mov
adc
jmp
ljmp
dec
sti
test
cld
lock
jge
test
lcall
add
and
cmp
icebp
mov
inc
pop
xchg
cmp
popf
adc
fwait
pushl
mov
and
in
or
aaa
sbb
fsubr
inc
into
and
test
push
push
pop
xor
call
movsb
fwait
lea
jecxz
xchg
xor
xchg
cmc
or
jge
gs
fcomip
mov
mov
sbb
cmp
arpl
call
push
hlt
int
adc
jo
xchg
or
aam
lcall
cmpsl
mov
test
in
mov
jo
je
push
push
call
cmp
and
testl
in
gs
lea
mov
cmp
add
out
fists
adc
dec
aam
push
loope
sbbb
test
xlat
mov
mov
add
pop
xchg
mov
negl
or
cmp
orb
jb
inc
popf
daa
cli
sub
cli
sbb
or
movsb
pop
jbe
jecxz
adcl
dec
dec
test
push
push
and
dec
adc
add
and
sub
test
mov
push
or
sub
pop
call
pop
js
icebp
jmp
aam
and
xor
js
mov
mov
mov
in
jg
outsl
int
xchg
push
fwait
jae
pusha
cmp
nop
adc
lahf
mov
clc
lcall
js
cwtl
jg
in
repnz
xor
or
lahf
jbe
xchg
xchg
jno
ljmp
mov
sub
inc
and
mov
and
mov
mov
arpl
push
add
call
nop
in
cld
push
inc
push
dec
mov
les
loopne
xor
xor
mov
inc
cmp
cli
lcall
or
ljmp
rcrb
lods
inc
loope
in
mov
call
push
add
mov
hlt
cmp
push
push
xor
ret
cli
call
adc
cmp
push
sub
lcall
mov
dec
add
sub
pop
aam
mov
std
add
push
cmp
int3
call
cld
pushl
out
clc
addl
pop
mov
mov
xlat
fmuls
or
aam
aas
and
int3
nop
jmp
xor
sub
mov
jg
xchg
scas
mov
xchg
std
shr
jge
movsl
mov
sahf
mov
cld
pop
inc
mov
mov
nop
mov
mov
push
mov
cmp
jmp
xchg
mov
fists
aad
dec
cmp
sbb
sti
xor
ret
cmp
push
mov
xor
push
lock
sub
mov
xlat
xchg
jg
movb
push
movsl
mov
sub
jle
out
jmp
mov
lret
clc
jb
ret
popa
cli
fadd
and
cmpsb
movsl
dec
xchg
adc
pop
aad
add
loopne
dec
and
cmp
hlt
fwait
push
pop
ret
push
ljmp
mov
mov
dec
jno
sti
lcall
cs
add
ds
xor
cld
daa
inc
lds
mov
or
mov
cmp
adc
xchg
or
in
pushl
std
add
stos
adc
push
adc
popa
and
imul
jge
mov
jbe
jp
mov
push
fsubl
stos
mov
fdivp
mov
or
negl
mov
and
out
cmp
mov
mov
imul
push
inc
mov
xor
xor
pop
mov
dec
mov
mov
test
push
out
loop
dec
xor
aas
xor
into
out
imul
out
ljmp
pushf
pop
fsubrs
lret
mov
popa
xchg
outsb
xchg
rcl
jge
shll
inc
stos
nop
mov
call
lea
adc
jbe,pn
dec
test
cmp
adc
dec
sbb
decl
sbb
in
fwait
jo
hlt
mov
imul
add
push
nop
jg
sti
mov
cld
aaa
inc
ljmp
jmp
and
gs
sbb
inc
sub
lods
mov
pushl
loopne
rcrl
sub
jmp
jb
xor
mov
outsl
xor
repz
std
sbb
popa
add
xor
jmp
lahf
mov
dec
or
pop
mov
mov
or
sub
jmp
outsl
pop
push
orb
les
ret
lods
cli
movb
add
lcall
lods
inc
sbb
dec
jne
iret
sub
add
out
arpl
push
cwtl
adc
inc
xchg
adc
mov
ja
cmc
add
jg
mov
mov
sub
dec
mov
mov
js
fiadds
add
inc
mov
xor
cmpsb
mov
mov
clc
mov
jbe
ja
mov
enter
cmp
mov
pop
and
ljmp
test
mov
imul
ret
decl
test
xchg
inc
je
pop
cmp
scas
test
push
inc
fsubs
in
and
mov
sar
incl
mov
int3
iret
xor
push
fisubrl
cld
call
xor
test
into
movsb
dec
or
xchg
sbb
outsb
mov
mov
shll
sbb
lahf
test
popa
and
divl
pushf
int
mov
xor
lcall
jp
fimull
and
xchg
scas
inc
sub
in
sbb
dec
jnp
ljmp
mov
stc
enter
push
or
adc
fidivrl
movsb
pushf
adc
repnz
push
std
ret
push
inc
mov
stc
nop
lods
xor
pushl
cld
movsl
dec
aad
xchg
push
sub
pop
clc
je
mov
leave
insb
loope
xchg
movsb
mov
mov
jb
pop
movsl
repz
push
jb
dec
scas
jb
lcall
ljmp
adc
and
aam
enter
jmp
pusha
sbb
imul
enter
sub
mov
lahf
sti
daa
test
fiaddl
pushl
mov
xchg
adc
pop
pop
inc
mov
fcmovnu
jg
xchg
xchg
test
lahf
leave
and
fcomip
decl
les
sahf
imull
dec
cmp
cmp
pop
ljmp
fstps
test
out
stos
ret
popa
lods
mov
mov
mov
scas
jo
lahf
in
jg
aad
fadd
adc
xchg
xlat
mov
xchg
pop
jg
xorl
pop
inc
js
imul
aad
pop
jmp
sub
add
push
adc
dec
clc
jbe
mov
es
jg
mov
add
popa
push
and
aam
cmpsl
adc
jne
lods
mov
jmp
aaa
xor
sub
xchg
lret
xchg
clc
mov
inc
push
js
dec
add
cld
xor
jne
xor
cmp
in
mov
sbb
into
cmp
imul
add
call
pop
add
pop
scas
xor
mov
inc
mov
sbb
into
pusha
test
jae
lcall
outsb
je
sub
movsb
les
sahf
in
clc
movl
pushf
inc
decl
test
mov
stos
inc
push
dec
inc
mov
int
pop
out
icebp
xchg
fisubl
in
cli
adc
ja
adc
mov
arpl
je
mov
ss
stos
jmp
in
or
xor
jo
lods
push
icebp
and
stc
pop
jecxz
cld
jmp
pop
jnp
in
pusha
test
or
and
ror
loopne
in
cli
out
ss
loope
push
jg
loope
ljmp
cltd
pop
out
push
fmul
scas
clc
aad
cmp
rol
xchg
and
push
decl
jnp
test
rorl
push
movsl
movsl
inc
jmp
aam
gs
outsl
call
mov
lods
stos
mov
mov
mov
and
inc
jle
repz
ret
std
xor
faddl
out
ja
mov
sub
es
or
add
ljmp
fists
in
clc
push
orb
adc
mov
sbb
and
and
jbe
enter
adc
pusha
xchg
jmp
inc
mov
je
mov
xor
outsb
imul
sub
mov
aam
add
pmullw
sti
push
push
pop
sar
test
cmp
inc
lret
clc
incl
enter
push
push
ss
sbb
cmc
pop
lret
icebp
or
sbb
es
jbe
and
jecxz
pop
pop
adc
inc
pushl
out
jp
sbb
sbb
push
or
aam
mov
dec
push
arpl
call
mov
movsb
add
xchg
jg
rclb
sub
mov
sub
out
cmovbe
lods
xchg
jmp
mov
mov
sub
int3
mov
shrl
lcall
call
pop
sub
movsb
movsl
testb
sub
jns
cli
outsb
mov
jmp
inc
xchg
jge
push
pop
lahf
hlt
dec
iret
jns
xor
fwait
xchg
mov
inc
push
xchg
shll
push
and
ret
mov
mov
add
outsl
jge
loope
jge
fnstcw
jae
fildll
mov
cmpsb
or
into
movsl
jnp
mov
scas
jg
ret
int
adc
mov
pushl
push
sbb
or
aas
jno
pop
inc
dec
jnp
pop
icebp
inc
inc
aad
int
mov
call
lret
iret
int
sbb
pushf
pop
push
shlb
iret
ret
cmp
sbb
mov
test
lahf
mov
xchg
mov
inc
mov
out
cltd
in
cmp
and
sub
test
mov
mov
pop
jg
lods
test
les
je
mov
loop
std
sub
rcrb
jmp
mov
push
sbb
leave
xchg
ljmp
xchg
into
outsb
pop
cmpsb
imul
mov
addr16
mov
data16
or
scas
and
sbb
mov
and
or
push
push
jno
jnp
lods
stos
jae
xchg
sub
inc
xor
sbb
pop
out
lcall
rol
cli
in
das
pop
repnz
mov
fdivs
adc
add
in
mov
push
mov
incl
jl
dec
fidivrs
lock
bsf
xchg
aad
xchg
popa
xchg
jg
ljmp
in
std
out
lds
subl
out
push
pushl
cld
incl
cmpsb
cli
repnz
or
movsb
lods
push
push
pop
cmpsb
ret
mov
push
cwtl
mov
lcall
mov
dec
sbb
cmp
into
cmp
and
mov
xchg
push
jae
lock
xchg
push
sbb
outsl
loopne
lret
dec
cmp
add
or
pushl
out
jp
fistps
xor
sbb
aas
adc
ret
push
cmc
cmp
out
jnp
decl
push
jns
mov
dec
mov
add
and
cmp
mov
add
mov
adc
pop
pop
push
jbe
xchg
ljmp
or
cli
mov
push
jbe
sbb
mov
add
incl
xchg
shrd
xor
cmc
xor
lcall
jno
mov
imul
jo
fdivrl
mov
and
call
xchg
shrl
and
jecxz
jno
mov
fildl
sarl
add
dec
inc
popa
pusha
pushf
das
jmp
mov
fsubr
inc
sbb
push
mov
sbb
fstps
cmp
addr16
lds
ret
lcall
scas
and
sub
movsb
js
cmp
icebp
mov
adc
inc
lods
rcrb
aad
scas
outsl
cli
ljmp
mov
and
gs
dec
mov
or
repnz
mov
sbb
xor
fucom
pop
and
mov
jae
int3
lea
incl
scas
inc
in
fimull
cmc
xlat
xchg
mov
push
ss
call
mov
xchg
xchg
lcall
rorb
and
sub
std
push
fnsetpm(287
arpl
iret
je
sub
sarb
inc
adcb
nop
shr
pop
sub
pop
mov
and
inc
mov
scas
pop
jmp
out
or
popf
ja
loopne
or
cmp
mov
xchg
mov
cmp
add
lret
mov
jmp
mov
aas
or
push
out
lock
xchg
or
test
int3
in
mov
stos
cmp
cwtl
mov
xchg
test
test
es
xor
cmp
insb
outsl
test
cmp
sahf
xor
in
cmp
fldl2e
push
mov
jns
notb
fildl
xor
insl
inc
lcall
test
xor
jl
pop
out
in
les
jnp
cmp
sbb
inc
int3
repnz
ljmp
adc
jns
mov
loop
pushf
pop
pop
mov
add
out
mov
mov
xchg
test
sarl
pop
push
jmp
orl
or
and
out
inc
mov
mov
mov
jl
mov
cld
ljmp
popa
and
lods
lods
test
xor
adc
xchg
mov
ret
dec
mov
das
adc
adc
xorw
shlb
decl
xor
sbb
adc
push
add
pop
repz
orl
fidivs
pushl
and
rol
jns
mov
ljmp
test
clc
hlt
xchg
push
bound
mov
shlb
mov
outsb
mov
sbbb
addb
pop
sbb
les
aaa
cmpsb
arpl
sub
pop
xchg
shrb
cli
sub
test
xchg
jne
add
inc
scas
insb
inc
and
mov
leave
rcrb
xor
mov
lcall
cmpsl
jg
bound
mov
cltd
pusha
repnz
or
mov
daa
lds
mov
pushl
fisttpl
insb
xor
pop
and
sahf
sub
pop
jae
in
inc
lret
lcall
test
xor
mov
in
out
adc
stc
hlt
jo
dec
ret
or
lcall
sar
ljmp
sub
adc
dec
add
test
mov
adc
mov
mov
out
push
test
cld
mov
filds
add
pushf
mov
push
or
pop
push
push
fdivr
mov
shll
mov
stc
sbb
pop
cwtl
fnstcw
insb
or
imul
fwait
inc
fs
push
cmp
jge
out
cmp
inc
adc
in
xchg
xchg
and
ljmp
push
push
push
mov
lahf
mov
fmul
jb
mov
lret
inc
mov
fmul
push
std
inc
enter
inc
leave
aas
stos
add
int3
push
pushl
pop
es
out
je
cwtl
pushl
mov
out
lret
jle
std
mov
bound
jo
out
daa
pop
test
xchg
aam
lcall
orl
fimull
sub
push
ss
rolb
out
xchg
or
or
jmp
sbb
mov
mov
les
call
mov
in
mov
inc
push
xor
test
push
sbb
jmp
imul
insl
xchg
ss
adc
xchg
xor
pusha
mov
push
add
in
call
jb
lods
jmp
shl
xchg
out
lds
xchg
mov
sbb
dec
icebp
or
stos
xchg
js
inc
xlat
xchg
sbb
jnp
ja
imul
fldt
cmp
cmp
jmp
cs
push
out
subl
adc
scas
fmuls
das
aam
faddp
call
jb
sbb
mov
test
jae
rcr
jo
mov
les
xor
jg
call
outsb
adc
rcll
ds
decl
loopne
jle
sbb
incl
sti
mov
lahf
pop
popf
les
pop
xor
cmp
inc
xchg
lahf
xchg
ret
sub
fidivs
lcall
inc
and
movsb
and
jnp
mov
cld
clc
test
dec
jg
inc
imul
fsubrl
sbb
lret
addr16
and
ja
inc
jge
cli
pop
out
clc
decl
add
std
and
lods
xchg
std
inc
out
mov
movsb
outsl
movsl
sbb
movsb
das
cmp
shrl
sub
and
adc
das
jmp
xchg
or
dec
adc
cmpb
cmp
out
jl
insb
sahf
jbe
insb
out
into
rolb
mov
lcall
cmc
int3
cltd
mov
cmp
xor
pop
loopne
xlat
ss
lret
scas
push
shrb
push
into
pop
aad
mov
icebp
push
arpl
icebp
mov
icebp
adc
adc
das
fucom
outsb
mov
push
mov
cmc
int
sub
loop
push
jl
repnz
jnp
fisubrl
out
and
into
cmp
cmpsb
push
fs
out
stc
stos
clc
dec
fisubrl
lods
jmp
cltd
inc
dec
inc
mov
leave
js
gs
into
iret
mov
sub
in
push
scas
xchg
mov
call
push
pop
pop
jge
mov
sbb
inc
push
aam
pop
sub
cmpsb
mov
sub
ljmp
pusha
loop
mov
add
xor
or
lock
jne
call
nop
mov
xlat
sub
push
outsb
mov
and
clc
lcall
or
mov
ljmp
dec
das
or
repnz
bound
mov
addb
cs
or
stos
fwait
mov
fwait
scas
sbb
cmp
test
pushl
ss
clc
aad
mov
jle
aaa
xchg
sub
inc
adc
out
inc
sbb
xlat
lods
cmpsb
mov
outsb
mov
pushl
add
mov
arpl
and
cltd
aaa
mov
les
dec
mov
decl
out
dec
sahf
dec
rcrb
cmpsb
inc
mov
call
lds
mov
mov
dec
aad
shr
push
inc
lods
clc
adc
xchg
ljmp
test
jbe
mov
imul
mov
and
sub
adc
mov
and
pushf
dec
in
dec
jecxz
pop
stos
dec
je
jp
jge
mov
cmpsb
jmp
insb
sub
xchg
iret
jg
rcrb
nop
lret
andb
mov
loope
popf
shll
cmp
dec
push
pop
mov
sbbl
cltd
frstor
mov
or
xchg
jp
addb
dec
movsl
pop
ficoms
inc
stos
mov
sar
dec
imul
mov
imul
cs
mov
cmpsl
aad
push
mov
addl
mov
mov
mov
dec
push
cvtdq2ps
xor
sti
aaa
mov
mov
jg
call
scas
push
stc
shl
pop
fwait
ret
in
popf
popa
and
ret
jmp
xchg
mov
aas
jmp
or
inc
push
jo
inc
jg
jbe
add
movsl
mov
push
sti
lret
cltd
add
inc
push
adc
cld
mov
loope
dec
sahf
movsb
rcl
ror
xor
push
push
jns
maxps
dec
repz
div
leave
push
and
shll
inc
iret
xor
popa
xor
in
js
sbb
mov
lcall
stos
sbb
pusha
mov
dec
or
cmp
inc
out
sbbl
decl
les
and
data16
mov
shlb
push
inc
jo
test
cmp
fxam
xor
jmp
rorb
jne
mov
imul
cmp
mov
dec
leave
lods
nop
movsl
movsl
incl
stc
mov
dec
cld
fstpt
fidivs
stos
andl
jp
push
fld
das
sar
add
add
std
shrl
sub
mov
xor
pushl
sbb
mov
fstl
dec
xchg
or
imul
push
lahf
jmp
cmc
jnp
push
and
incl
test
pop
jl
cltd
jns
insl
dec
test
mov
int
lock
push
mov
pop
and
jmp
xchg
call
lea
push
adc
lcall
and
xor
lcall
or
call
pushf
and
mov
mov
les
inc
aaa
in
push
pop
out
decl
pop
js
shrb
movb
stos
shl
and
pusha
fcomps
cmp
cli
cmc
subl
divl
xchg
aam
pop
inc
mov
and
pop
insb
push
jmp
or
das
sub
mov
fcom
add
js
aaa
scas
inc
inc
adc
cld
cmp
call
cmp
loop
pop
xlat
inc
imul
out
jo
fildll
jg
push
sar
push
xor
fs
aam
es
mov
push
mov
or
pushl
add
jb
mov
jmp
cmp
cwtl
aam
inc
lret
ljmp
dec
push
sbb
mov
fisubrs
lods
push
pusha
lcall
or
movsl
xchg
mov
xchg
xchg
mov
lods
dec
inc
push
jmp
lods
xlat
push
inc
add
ljmp
sub
mov
inc
adc
pop
daa
stos
push
sbb
pop
push
mov
inc
imul
mov
push
mov
or
xchg
pop
adc
clc
inc
insb
in
cmpsb
movsb
cmp
or
sub
fisubrl
sub
sub
aad
mov
cmp
ljmp
push
leave
mov
ror
rol
xor
popf
jmp
mov
fsts
in
push
add
ljmp
or
mov
or
cmp
out
fimull
incl
test
adc
fsubl
jle
xor
mov
dec
sub
dec
jmp
mov
jmp
lock
into
call
sub
mov
lahf
mov
imul
inc
std
loopne
mov
out
mulb
add
incl
sbb
fs
cli
mov
jmp
pop
scas
cmp
and
decl
leave
dec
mull
mov
add
test
push
mov
sub
dec
dec
cmp
lcall
add
sbb
mov
add
add
add
hlt
mov
pop
stc
lret
mov
rorl
aaa
into
xchg
cmpl
outsl
mov
push
bound
call
push
mov
sahf
sub
push
scas
mov
popf
inc
cmpb
jp
cmp
dec
cmp
test
add
stos
push
jg
lcall
mov
mov
pop
push
or
fmull
or
negb
xor
in
mov
and
and
mov
mov
pop
jb
in
aad
jmp
inc
mov
jg
xchg
jecxz
inc
sti
imul
dec
jno
aad
out
loope
les
inc
mov
incl
xchg
mov
dec
mov
sti
push
icebp
adc
cwtl
ljmp
pop
add
movsb
call
push
scas
mov
mov
mov
push
cmpsl
jg
in
scas
and
ret
xchg
pop
js
pop
sbb
xchg
test
inc
js
int3
imul
clc
push
mov
cmp
out
lahf
in
mov
dec
push
rcrl
int3
mov
jmp
movsl
mov
push
inc
cmp
mov
scas
mov
push
jle
adc
scas
adc
ret
dec
loopne
hlt
inc
xor
cld
scas
fidivl
cltd
or
jge
cld
lcall
or
mov
mov
jns
push
ljmp
adc
sub
mov
data16
daa
xor
addr16
popf
inc
icebp
pop
adc
or
call
dec
stos
add
js
fmulp
into
xchg
dec
mov
sbb
xor
repnz
fisttpll
fwait
out
jno
and
pop
dec
mov
test
or
sub
int
imul
aad
push
sbb
mov
daa
sbb
hlt
mov
adc
inc
jo
pop
sub
outsl
roll
lcall
sbb
dec
xchg
mov
cmc
sbb
and
mov
mov
mov
mov
add
dec
inc
subl
and
jae
das
ss
fidivrl
lds
jmp
je
fwait
aad
add
inc
imul
dec
xchg
push
push
push
sub
and
outsb
mov
pop
sahf
or
pusha
or
lcall
ret
xchg
xor
stos
and
call
ficoml
push
jg
inc
jmp
or
jb
lcall
mov
out
cli
cwtl
dec
cmp
cmp
fdivl
in
mov
pushl
mov
pop
mov
fs
lock
jnp
fnstcw
fisubs
cmp
jmp
dec
jl
aad
fs
outsl
lds
xor
cmpsl
insl
jnp
xlat
fld
fbstp
sbb
stc
sbb
xchg
pop
add
and
pop
movsbl
incl
nop
inc
ds
popa
lock
int
push
in
lahf
cmpsb
mov
lcall
loopne
cmp
push
repnz
sahf
insb
and
fldt
call
mov
and
push
out
pop
add
incl
push
push
in
jp
xlat
push
negb
cmp
xchg
jecxz
inc
add
out
xor
mov
call
pop
mov
icebp
xchg
adc
fstp
or
es
fisttpl
mov
shl
clc
and
mov
es
sbb
push
jbe
stc
push
add
out
and
pusha
dec
pop
xchg
fcompl
mov
dec
int3
push
sbb
in
push
add
popa
or
or
aaa
push
sub
es
shll
jmp
fisttps
cmp
cmp
enter
mov
aad
test
add
leave
ret
mov
cli
jg
pushl
mov
cmp
aam
popf
out
push
or
push
xlat
adcb
sub
les
or
imulb
data16
push
mov
filds
fs
jg
jbe
jnp
xchg
ljmp
jno
repz
out
cmp
add
sbb
fmulp
push
sbb
cmp
jg
mov
and
out
repz
adc
dec
movb
mov
ljmp
enter
stos
mov
dec
mov
xchg
xor
xchg
cmp
pop
mov
lcall
les
mov
lock
xchg
cli
xor
clc
push
repnz
and
and
ret
mov
les
xorb
mov
fistl
mov
negl
pop
loopne
insb
or
sbb
dec
hlt
jmp
inc
test
adc
mov
xchg
icebp
movsl
inc
xchg
pop
jae
xor
adc
sub
mov
aad
fcomip
ljmp
sbb
jne
cmp
ret
fwait
xor
mov
std
ljmp
cmp
shrl
push
xor
mov
push
jmp
cld
inc
dec
pop
cmpsb
ds
cli
cmp
push
add
mov
sbb
mov
xchg
and
xchg
xchg
push
in
push
cmp
or
out
add
in
scas
in
arpl
std
in
das
push
cmpsb
movsl
pop
icebp
jg
push
cmp
mov
or
mov
or
xchg
aaa
mov
sbb
jns
cmp
ljmp
xchg
outsl
test
gs
dec
fistpll
pop
mov
mov
mov
out
stos
jne
xor
or
pop
sbb
lret
pop
ljmp
popa
add
and
test
mov
mov
sub
mov
scas
fdivs
xor
js
add
dec
ds
push
ds
mov
ss
cli
test
jbe
lret
push
ljmp
outsl
pop
call
idivb
lds
fistpl
out
mov
out
cmp
mov
nop
in
idivb
inc
icebp
pop
aad
sti
movsb
jne
mov
add
sbb
in
mov
sub
cmp
sahf
sub
loope
call
sub
test
dec
xchg
add
insb
fmull
jecxz
out
xor
dec
hlt
leave
stos
or
and
das
mov
jae
push
lods
mov
ret
xor
pushl
rorb
mov
data16
mov
mov
je
into
in
xor
movsb
xor
xlat
call
adc
mov
lret
cmp
or
xchg
addl
xchg
lcall
lods
dec
out
jno
mov
jp
push
test
cmpl
shlb
jg
push
dec
adc
pushl
push
sbb
and
outsb
cmc
aaa
aaa
cltd
insb
mov
call
idiv
filds
lds
lods
pop
push
pusha
sbb
xchg
dec
call
test
mov
fwait
decl
loopne
mov
xchg
stc
xchg
cld
repz
add
arpl
incl
add
sbb
cmp
or
and
ds
loope
enter
push
mov
pop
sub
pop
add
mov
fidivrs
mov
pushl
call
daa
mov
out
aad
repz
cmp
cmpb
fcomip
incl
jp
mov
aam
bound
fldcw
rcrb
xchg
fmull
test
inc
loopne
incl
nop
hlt
mov
lret
pop
mov
ud0
mov
pushf
mov
xor
sub
inc
addb
inc
xchg
out
cltd
lcall
mov
fcoms
pusha
mov
mov
push
sarl
xor
sbb
sbb
or
jg
mov
sub
div
cmpl
or
mov
out
clc
pop
jg
les
sahf
mov
xor
ja
jo
bound
dec
xor
xchg
mov
lcall
aaa
and
imul
insb
xchg
aam
xchg
leave
inc
jbe
ret
das
inc
cmp
adc
dec
filds
aad
pop
jmp
repz
loopne
dec
vmovupd
jae
pop
in
decl
ljmp
ret
fsubl
mov
push
dec
loope
push
mov
int
ds
adc
dec
jb
sub
mov
and
cmp
xor
push
lahf
call
idiv
sub
mov
mov
sti
lret
pop
sub
leave
mov
cmp
je
call
rolb
sub
cwtl
jp
jmp
pop
lods
stos
pop
clc
sbb
call
mov
push
imul
jg
add
das
outsb
hlt
or
scas
stc
repz
cmp
push
jle
mov
outsb
sbb
fucomp
push
dec
movsb
lods
repz
popf
inc
pop
icebp
icebp
jnp
std
fisubs
das
pop
movl
imul
inc
lret
out
mov
fbld
mov
adc
lret
pop
xchg
in
roll
sub
xor
std
aaa
cwtl
js
jle
jbe
and
sub
pop
lret
cmp
stos
add
fnsave
fadds
movsl
rep
loopne
loope
inc
imull
aad
push
cld
jg
dec
cltd
out
dec
add
test
mov
movsb
wbinvd
mov
lcall
mov
mov
scas
outsl
sub
pushl
cld
jge
mov
mov
jne
out
add
aad
mov
and
jge
addr16
adc
and
mov
dec
ret
int3
mov
nop
push
mov
in
pop
xchg
pusha
jle
clc
mov
lcall
pop
or
mov
jmp
adc
stc
and
sub
ljmp
jo
rcrb
ds
pop
mov
add
packuswb
icebp
outsl
jb
mov
dec
cmp
lock
mov
pop
cmp
lock
adc
adc
loop
pop
dec
jmp
mov
or
inc
push
dec
repnz
mov
addr16
jbe
xchg
inc
xchg
repz
lock
mov
sbb
ljmp
dec
aad
or
or
sbb
add
pop
adc
loop
and
mov
xchg
xor
pop
mov
jge
jg
mov
pop
jae
jle
loop
hlt
rorl
sarb
fcmovnb
xchg
and
pushl
fisubs
mov
or
add
dec
push
aad
ljmp
inc
cmp
sbb
insb
aam
movsb
mov
dec
aam
andb
scas
or
xchg
cmp
mov
int3
xchg
push
ret
and
xor
sbb
or
call
pusha
lock
aam
mov
xchg
decl
insb
and
mov
add
sub
enter
xchg
add
jg
mov
add
mov
sub
pop
add
in
lahf
dec
mov
into
jns
cmp
mov
fxch
dec
push
out
xchg
mov
jg
push
push
lods
hlt
jne
mov
jecxz
lahf
fistps
cmc
outsl
cli
incl
enter
xchg
daa
xor
test
inc
enter
pushf
and
daa
ja
fmuls
cwtl
mov
je
out
mov
and
jns
jg
sub
sbb
ret
xor
dec
std
xchg
push
adc
adc
cmp
out
mov
dec
ljmp
push
pop
mov
lret
fisubs
pmaddwd
shr
or
fs
mov
add
xchg
and
scas
mov
push
add
inc
lods
sub
xor
dec
mov
dec
push
movsl
arpl
jg
adc
mov
xor
mov
dec
cmp
fwait
xchg
ret
shlb
movsl
push
icebp
scas
sti
pop
mov
lcall
clc
pusha
ljmp
insl
inc
jge
enter
jnp
xor
jmp
cwtl
popf
inc
dec
push
mov
adc
mov
jge
push
jae
in
or
cmpsl
pushl
push
scas
aaa
mov
inc
sbb
mov
aas
pop
xor
fs
lods
push
lods
rcll
arpl
daa
adc
lock
stc
mov
and
mov
fists
test
jbe
add
inc
dec
and
iret
jne
mov
mov
mov
dec
push
clc
in
xor
fdivrs
nop
stc
push
xchg
lock
and
aaa
dec
xchg
ljmp
lret
push
mov
lods
roll
sub
xchg
fcoms
lock
adc
or
cld
pop
pop
aam
call
js
scas
push
push
les
push
mov
push
jecxz
loop
xor
out
or
mov
xlat
cmp
jl
pop
pop
mov
jmp
xchg
cmp
pop
stc
das
xor
mov
repnz
stc
in
nop
dec
gs
mov
ret
sub
stos
xchg
mov
add
out
clc
dec
out
pop
stos
loop
in
push
in
push
sub
xor
add
mov
cmpsb
mov
jno
std
ljmp
mov
mov
scas
movsb
in
and
icebp
jmp
leave
pusha
fdivr
shll
daa
or
sbbb
or
push
dec
add
mov
fcoms
out
mov
xchg
jno
lret
in
sbb
aas
negb
icebp
jb
ret
xchg
push
aam
orb
mov
call
and
insb
loopne
ds
fbld
addl
adc
sbb
loopne
ljmp
sub
mov
sub
popf
push
insb
jne
jl
sub
mov
loope
stos
sarl
dec
lahf
or
mov
pop
adc
cmp
mov
lcall
push
inc
adc
aam
nop
pop
ret
push
adc
jle
pop
gs
push
sub
loopne
cwtl
lds
mov
shr
ds
dec
movsb
add
shlb
pushl
cld
jmp
dec
jl
bound
out
outsb
sub
jg
pop
int3
call
jb
mov
fmull
xchg
sti
cwtl
cmp
pushl
jno
and
or
out
mov
bnd
std
into
sub
xlat
rorl
sar
orl
jp
icebp
stos
iret
inc
fsubp
jno
xchg
xchg
mov
das
fstpl
std
incl
stc
nop
sbb
repz
mov
out
cmpsl
stos
dec
add
jmp
stos
sarb
jp
inc
cltd
cmp
mov
pop
mov
test
or
ljmp
sub
aad
cwtl
sahf
jns
mull
cwtl
popa
mov
addr16
adc
dec
out
jp
in
incl
jecxz
es
and
jp
mov
fstl
mov
pushl
add
sub
xor
sbb
call
or
jb
ja
sub
push
adc
incl
cld
lods
mov
add
in
popf
sbb
xchg
ret
mov
out
cmp
incl
inc
ret
stc
ds
incb
shll
jns
inc
test
fisttpl
lcall
jmp
inc
mov
xchg
lret
mov
testb
pop
mov
inc
mov
incl
sbb
in
or
inc
ss
pushf
bound
int
pop
aad
push
scas
mov
aaa
test
ljmp
inc
das
ljmp
pusha
scas
xchg
lods
sbb
and
add
dec
ljmp
call
pop
hlt
sub
or
clc
push
push
ds
shrb
sub
dec
jmp
rolb
mov
adc
stos
imul
repnz
fisttpll
das
sar
xchg
xchg
lds
dec
scas
inc
pop
sbb
out
loope
aad
orb
js
xor
iret
fstps
in
push
xchg
scas
jge
repnz
mov
dec
mov
fmull
sti
mov
sub
gs
test
stc
popf
arpl
adc
std
xor
notb
mov
pop
sahf
jne
xor
mov
adc
jle
cli
mov
jno
cmp
adc
mov
jp
out
xor
das
dec
gs
cmp
decl
and
movsl
popf
dec
adc
jmp
mov
mov
dec
push
lods
sbb
push
mov
jne
sub
iret
pop
and
gs
in
dec
dec
jbe
incl
insl
shl
ljmp
fnsave
pop
rolb
sbb
andl
pop
cltd
jle
mov
mov
dec
sub
pop
jg
add
and
push
test
sub
stos
pop
mov
decl
jne
push
dec
dec
clc
mov
std
ret
lods
and
mov
xor
dec
mov
xchg
mov
decl
out
sub
loop
jbe
sbb
fldenv
cltd
mov
lock
sbb
sar
js
or
dec
or
jno
cmp
insl
out
int
sarb
insb
fmull
sub
aaa
cld
aad
push
mov
scas
adc
jp
fwait
cmc
xor
add
stos
std
mov
pop
incb
cs
jae
sbb
fldt
aad
ljmp
loop
dec
xlat
dec
ds
xchg
add
sbb
dec
call
pushl
in
pushf
adc
xor
in
pop
lahf
xor
sub
outsb
stc
adc
lret
push
pop
lock
jmp
fmuls
mov
jl
sub
shll
mov
shl
out
push
mov
ljmp
adc
out
rcl
sub
cli
inc
pop
cmpl
pop
inc
adc
insl
mov
aam
dec
cwtl
jg
adc
mov
lock
mov
in
sbb
ffree
mov
ret
out
cltd
mulb
scas
pop
test
pop
mov
mov
cmp
lcall
mov
movsb
mov
andb
rclb
inc
sbb
je
jmp
pusha
dec
loopne
dec
pop
lahf
test
enter
jbe
stos
push
add
dec
unpcklps
sub
call
test
xchg
addr16
adc
push
xchg
gs
fcompp
mov
xchg
sbb
shrb
decl
lret
shlb
jg
shlb
xchg
and
pop
lcall
adc
in
jmp
add
cmp
sub
movsl
sbb
popa
into
adc
mov
and
sahf
cs
out
dec
std
aad
dec
jp
xchg
popa
xchg
inc
cmp
mov
sub
xor
and
mov
movsb
movsl
fs
movsl
sbb
cmp
lods
mov
sbb
scas
mov
push
test
call
int
mov
push
pop
jge
mov
mov
dec
cmp
addr16
insl
decl
mov
je
xchg
rcrb
leave
das
adc
loop
pop
xchg
push
jae
mov
jmp
jnp
aam
movsb
or
dec
arpl
push
mov
sub
sub
cmp
test
ret
jmp
cmp
add
xchg
test
adc
pop
jp
push
int3
lcall
sbb
sbb
sbb
nop
mov
clc
pop
or
mov
cmp
lock
call
loopne
lret
lahf
sarb
inc
bound
push
cmp
or
mov
mov
pop
push
pop
mov
mov
jp
cmp
fisubrs
jmp
inc
add
inc
cmp
jge
insb
cmp
lock
addr16
jge,pt
pushl
push
and
mov
pop
pop
ljmp
cli
cmp
mov
mov
mov
adc
jmp
push
adc
mov
inc
push
sbb
pop
movsb
or
add
ljmp
pushl
movsl
loop
loope
inc
test
xor
sub
icebp
mov
add
or
imul
jecxz
jg
fistps
fldt
inc
push
test
fwait
dec
cmp
xchg
adc
iret
leave
pop
aam
lds
decl
add
ror
into
shll
push
cmp
mov
push
ljmp
push
adc
ret
mov
xor
out
rcl
negb
cs
xor
out
js
repnz
push
in
mov
ja
add
xlat
aas
push
xor
sbb
dec
rcr
mov
ljmp
inc
mov
loope
xchg
and
xchg
inc
mov
sbb
ljmp
bound
je
adc
sahf
push
xor
gs
or
adc
mov
lcall
dec
cwtl
jae
mov
and
ret
inc
fisubs
in
xchg
repnz
ljmp
call
inc
dec
sbbb
push
mov
mov
cld
out
inc
lret
in
rorl
mov
sub
push
dec
movsl
addr16
push
fs
mov
fldl
enter
into
scas
cld
pop
jne
sbbb
imul
daa
fdivrp
decl
pop
ficoms
lods
fwait
or
stc
jl
rcl
hlt
lods
aad
jecxz
and
leave
gs
incl
mov
enter
add
push
ja
das
sbb
mov
stos
shrb
cltd
sar
mov
jne
clc
fisubs
mull
mov
xchg
inc
scas
jbe
ffree
or
aad
adc
xlat
push
test
push
mov
test
call
add
pop
ret
xchg
shll
lret
and
and
outsl
mov
iret
das
movsl
iret
jne
dec
dec
mov
lahf
or
xorb
ljmp
push
push
scas
or
dec
pop
mov
mov
mov
xor
in
ffree
pusha
cmpsl
and
stos
mov
sub
call
arpl
mov
or
mov
out
adc
scas
shll
push
stos
fdivp
dec
pusha
mov
scas
and
sbb
jno
iret
and
jp
or
xor
push
xor
loopne
iret
add
jmp
int
in
push
lret
xlat
dec
mov
ficompl
xacquire
das
test
mov
ljmp
push
fdivl
cld
imull
paddw
xchg
test
sub
iret
decl
cmpsl
fidivrl
in
jns
sbb
mov
jp
xchg
mov
xor
cmp
sarl
push
iret
xlat
jae
decl
push
dec
nop
pop
fnstenv
repz
push
cmpsb
dec
and
arpl
pop
ss
cmp
leave
cmp
loope
jmp
sub
and
bound
cmpl
or
fdivrp
shrb
imulb
cmpsb
jns
pushl
enter
sub
rorb
xor
dec
cmp
test
sub
call
inc
sub
jp
and
mov
mov
cmp
aas
mov
loopne
andl
jl
pop
fcoms
jns
push
mov
outsl
incl
jecxz
mov
xor
mov
mov
popf
dec
mov
out
loope
cmp
jnp
loopne
jmp
mov
xchg
insb
fildll
stos
dec
dec
add
test
jle
pop
jmp
add
cltd
adc
sahf
sbb
mov
fdivl
adc
lret
and
stc
shrl
inc
push
ljmp
stc
aaa
daa
adc
pop
movsl
xchg
sbb
fisubs
mov
push
inc
dec
xchg
or
jg
xchg
mov
insb
in
jg
adc
cmpsl
ror
repnz
sbb
loope
ljmp
sahf
jecxz
mov
inc
jp
sub
and
adcb
xchg
sbb
xor
pushl
push
mov
lahf
nop
sub
nop
stos
mov
shl
jg
xchg
cmp
fistpll
cltd
jb
pushl
pusha
adc
adc
add
dec
mov
jmp
add
xchg
lret
cmpsl
daa
fstpl
jecxz
xor
mov
cmp
fcomip
incl
or
xlat
dec
pushf
mov
mov
nop
mov
mov
sti
into
sbb
ret
test
adc
scas
ret
call
out
mov
loope
cmp
shlb
mov
mov
xchg
or
lcall
shll
add
ljmp
in
in
popa
xchg
mov
popa
pop
ljmp
bound
sbb
mov
add
cs
clc
mov
mov
leave
adc
jmp
adc
lea
cwtl
fidivl
jb
push
jno,pt
inc
push
dec
imull
pop
ss
incl
movsl
fs
and
gs
inc
in
aaa
sub
mov
ja
inc
sbb
into
int
sub
scas
mov
push
out
push
fwait
iret
fmul
mov
jae
push
clc
sub
fwait
repz
movsl
pop
jns
sbb
int3
cmpsb
bound
mov
cwtl
js
sbb
fcomip
jge
in
das
sub
loop
inc
cmp
fisubs
xchg
mov
jo
clc
jns
sarl
lea
jbe
mov
aaa
pop
notl
mov
cmp
arpl
js
sahf
mov
mov
cmp
inc
xchg
mov
cmp
jg
popa
xchg
inc
mov
fsubp
cmc
jl
insb
push
inc
jecxz
popa
pop
add
inc
sahf
es
xchg
iret
mov
incl
test
stc
arpl
xor
push
std
cmp
lcall
mov
lcall
xchg
js
clc
mov
in
jg
dec
jge
push
xchg
test
jp
les
mov
into
rclb
fldenv
cmpl
int3
shlb
fidivrl
loopne
in
jmp
mov
inc
jne
mov
push
xorl
frstor
sbb
lea
push
sbb
mov
cmpsl
inc
xchg
jb
into
icebp
out
mov
mov
gs
out
sbb
mov
mov
xchg
jnp
cmp
adc
movsb
push
sti
mov
int
adc
pushl
ds
enter
xchg
mov
mov
mov
mov
mov
sub
fnsave
sbbl
sub
or
std
ja
adc
incl
clc
push
mov
jle
sub
cmp
xchg
sbb
mov
jge,pn
enter
jge
nop
jp
pop
push
jge
mov
add
jp
stos
push
jmp
into
lcall
data16
addb
mov
in
xor
push
rorb
imul
inc
sub
adc
mov
scas
mov
leave
dec
test
imul
mov
push
xchg
or
inc
xchg
loope
pushl
cld
jmp
adc
shrb
stos
lds
mov
adc
cmpsb
incl
adc
inc
daa
lret
pushf
sbb
cmp
adc
aam
loope
sbb
sar
lcall
leave
into
test
cmp
testl
ljmp
lcall
xor
xrelease
in
or
arpl
dec
es
outsb
icebp
pop
and
jg
lcall
imul
jo
sbb
fwait
mov
mov
jb
or
push
shrb
xor
dec
scas
scas
sbb
push
lea
arpl
ja,pt
pushl
sti
orl
adc
call
xchg
int
mov
imul
jmp
ljmp
lcall
or
xor
lret
cmp
cs
lock
push
mov
and
pushf
fbstp
out
cmpsb
fdivrl
stos
fwait
out
push
xor
xor
pushf
dec
pop
cld
jmp
adc
out
add
decl
adc
lcall
out
je
frstpm(287
sarl
lret
popf
test
popa
inc
sar
mov
xchg
fnclex
sbb
faddl
icebp
pushl
fs
fidivl
mov
popf
call
lahf
sahf
xchg
sub
add
mov
lock
loopne
mov
movsl
xor
mov
repz
inc
cltd
ret
sub
xchg
lret
filds
lods
inc
and
inc
jno
fs
sti
loopne
dec
insl
sub
test
dec
and
push
mov
stos
cwtl
out
inc
mov
push
in
push
addr16
das
sahf
or
imul
mov
mov
clc
pushl
and
sbb
push
sub
add
push
mov
pop
cld
pushl
ja
dec
or
test
shrl
jae
les
dec
mov
js
or
repz
popf
push
or
push
push
mov
mov
icebp
fiadds
sub
stc
movsl
cltd
cmc
loopne
jp
cmpsl
mov
cltd
xchg
out
in
jns
inc
add
repnz
ss
mov
shlb
jg
pop
pop
lods
es
jg
adc
sbb
sbb
cld
lock
lea
addr16
mov
stos
movsl
xchg
jmp
pop
push
mov
adc
jne
pop
mov
lret
incl
test
pusha
dec
imul
push
aaa
xor
and
cmp
jb
mov
sbb
or
adc
mov
pop
dec
xchg
or
jmp
outsb
aaa
jns
test
outsb
push
scas
xchg
cltd
pop
cs
or
inc
cmp
pop
sub
add
inc
jge
sub
mov
mov
fimull
shll
dec
mov
push
les
push
pop
jge
test
and
jo
aas
xchg
stos
or
nop
xchg
lcall
xor
fucomp
xchg
rolb
xorb
addb
jmp
mov
inc
scas
xchg
jae
jns
dec
xor
mov
jl
aas
push
aam
nop
insb
add
add
lcall
or
lcall
ss
xchg
jl
out
into
mov
clc
dec
cld
adc
mov
xchg
jno,pn
out
inc
int
jmp
test
fwait
pushf
cmp
jmp
ljmp
xchg
test
mov
test
jmp
ja
inc
les
mov
and
mov
lret
cmc
jo
sub
dec
cld
fildll
cmp
xor
jge
sub
rolb
and
fcomip
mov
mov
jle
jb
mov
dec
sti
into
push
call
cmp
addr16
jle
testl
cmpb
jle
cs
mov
repnz
je
sbb
adc
mov
mov
push
inc
jne
mov
ljmp
inc
shrb
in
jae
inc
aam
cwtl
js
stos
es
xchg
mov
cld
jno
decl
inc
shl
cld
mov
cwtl
adc
aam
sbb
popa
xchg
mov
popl
decl
add
scas
in
xchg
out
adcl
insl
aad
incl
cld
inc
ja,pn
push
aam
mov
aaa
dec
cmp
ret
fstl
std
fidivl
stos
mov
in
adc
arpl
out
roll
jno
push
lods
lods
out
push
push
lds
jg
add
pop
dec
es
jmp
mov
fimull
bound
sbb
jp
arpl
adc
data16
inc
add
cmp
jne
mov
aaa
sub
shll
or
mov
incl
movsl
pop
mov
xchg
push
jecxz
sbb
dec
insb
push
aaa
add
push
in
sub
rolb
sub
lock
push
sbb
imul
cmp
out
loope
mov
aad
mov
enter
rcrl
orl
jno
movsl
jmp
mov
cmp
mov
enter
ds
mov
loope
decl
in
sub
into
cmc
jecxz
push
jp
inc
rolb
adc
fidivs
ds
jb
dec
cmp
icebp
bound
stos
cmp
fucomip
scas
mov
push
cld
daa
fistps
clc
out
mov
cmpsb
xchg
sti
insb
sub
pop
lock
jb
dec
add
lcall
insb
imul
cwtl
sub
fistps
sub
fstpl
loope
mov
fidivrl
pushl
xchg
and
mov
mov
ljmp
or
lahf
aaa
jp
popa
mov
in
mov
aad
addb
rcr
into
xor
sub
in
fbld
movsl
sbb
pushl
dec
fpatan
dec
mov
in
xchg
pop
pushf
inc
adc
lods
data16
scas
loop
gs
jmp
std
insb
dec
andl
jle
sbb
inc
or
mov
sbb
mov
mov
into
cmp
pushl
pop
clc
sbb
mov
lret
in
movsb
call
push
imul
int3
push
xchg
lods
inc
mov
mov
decl
shlb
dec
push
and
lea
outsb
mov
int
pusha
add
jge
aas
xor
ljmp
mov
fcompl
xchg
mov
pop
xchg
dec
lret
jmp
sbb
scas
push
mov
push
jnp
lds
jae
mov
xor
imul
insb
or
lahf
sub
jl
lcall
jecxz,pn
and
add
cmp
jmp
adc
add
and
push
and
test
dec
jl
leave
daa
push
pop
cmc
xchg
jbe
popa
rcll
pop
dec
push
xchg
pop
adc
js
imul
pushl
lods
jl
cmp
cmpl
or
jp
shlb
and
jg
mov
fsts
test
adcb
cmp
addr16
pop
mov
jmp
std
int3
scas
adc
hlt
js
sbb
inc
mov
jg
rolb
outsb
outsl
mov
insb
cmp
jecxz
fistpll
movsb
subl
scas
cmp
clc
sahf
fxch
mov
inc
pusha
pusha
pop
push
sub
lret
xor
sub
pop
pop
pop
inc
fwait
adc
clc
ljmp
cli
xchg
mov
ljmp
sub
testb
incl
pop
in
in
fs
subb
mov
dec
lfs
es
out
cli
mov
or
call
enter
fwait
mov
jo
aad
xchg
push
ljmp
add
stos
xor
pushf
ljmp
mov
xor
push
mov
test
jmp
call
fcmovnu
cmp
stc
sbb
sahf
mov
and
pop
push
inc
outsb
cld
lret
insl
sarl
pushl
pusha
stos
scas
pop
in
add
sbb
sub
test
push
rorb
int
mov
hlt
das
call
mov
adc
or
hlt
lea
adc
arpl
call
dec
imul
sbb
mov
inc
test
push
jecxz
enter
xor
xchg
mov
fsubr
hlt
or
lret
sbb
add
mov
jns
sub
mov
movsb
xlat
movd
dec
pop
dec
mov
imul
sub
inc
push
mov
decl
sub
insl
lcall
push
mov
mov
jle
outsl
xor
jmp
mov
mov
add
xor
jbe
push
push
out
lahf
imul
imul
dec
push
xchg
and
pop
dec
dec
push
enter
call
fisubrs
fldcw
loop
mov
fistpll
xor
icebp
jae
jae
into
popf
incl
std
fisttpll
xchg
adc
jecxz
pslld
cmpsb
cmovae
xchg
adc
or
sbb
jl
aaa
mov
pop
pop
xlat
and
mov
jnp
mov
stos
cmp
andl
int3
dec
mov
mov
int3
in
sub
jb
jno
pop
xchg
sub
pushl
sub
mov
adc
dec
dec
mov
repz
rorl
scas
xor
mov
push
add
xchg
xor
adc
std
or
in
fildll
adc
lods
hlt
bound
fs
lcall
dec
popa
ja
dec
sub
aaa
ds
cld
ja
mov
cmpsl
adc
dec
call
out
adc
add
ret
pushl
dec
cli
xchg
xor
hlt
dec
jns
sbb
out
push
clc
sar
call
jno
mov
jle
xchg
pop
xlat
add
mov
loope
mov
sub
xchg
pushl
fsubl
pop
fs
mov
out
pop
push
aam
or
cmp
adc
dec
stos
stc
clc
bound
dec
loopne
cmp
xchg
adc
mov
ljmp
jo
mov
int3
mov
cmp
mov
leave
pushf
dec
je
xchg
or
jne
in
adc
push
es
pushl
bound
push
push
xchg
ja
negl
jno
ss
movsb
mov
repnz
repnz
inc
pop
stc
popf
sahf
or
inc
add
add
mov
cmp
inc
cmpsb
push
push
mov
xchg
lea
es
fbstp
loop
dec
mov
repnz
jne
mov
cmp
fmul
cli
dec
push
xor
mov
pusha
cmp
neg
insl
dec
scas
mov
mov
sub
sub
fmul
mov
js
xor
mov
pop
pop
sar
cmpsb
and
leave
inc
enter
pushl
cs
xchg
testl
repnz
out
enter
dec
int3
jns
movl
addb
ret
fs
dec
fisubrs
fldt
das
lods
into
insl
xchg
insb
and
dec
out
inc
cmp
push
mov
and
push
pop
stos
in
out
clc
scas
lds
insl
mov
or
xchg
jg
or
mov
call
pop
daa
fsub
shlb
bound
cmpb
mov
adc
orl
fidivs
fldlg2
lcall
sbb
fwait
clc
mov
mov
sbb
ja
dec
jmp
std
xchg
outsl
jle
in
call
jbe
xchg
lahf
mov
pushl
loopne
xorl
lds
clc
loop
mov
fisubl
movsl
lods
das
call
cmp
cmp
jl
es
dec
clc
pop
inc
mov
leave
and
jl
push
inc
sbb
movsl
add
sub
pop
pop
dec
sbb
dec
push
lcall
call
cld
jb
cmp
pushf
adcb
nop
pop
lcall
mov
lret
cwtl
adc
and
or
xchg
mov
xor
call
pushf
cmp
or
loopne
int3
jl
cmp
int
ljmp
push
xor
subl
xor
rorb
mov
xchg
inc
xchg
ja
arpl
ljmp
or
pop
lret
adc
push
mov
push
loopne
call
dec
lcall
mov
xchg
loop
jno
bound
adc
iret
and
movsb
repz
push
ljmp
cmc
push
mov
xor
sarb
sbbl
lahf
lea
decl
sahf
jp
jmp
into
pop
cmc
and
fs
push
mov
cltd
or
cmc
aaa
add
test
call
sahf
in
insl
clc
into
jge
xor
or
mov
cwtl
cwtl
push
adc
shll
jl
jmp
and
push
movaps
mov
push
popa
clc
int3
das
or
xchg
xchg
adc
dec
mov
sub
hlt
pushl
enter
sbb
sti
inc
insl
xchg
xor
je
adc
pop
or
outsl
ficoml
adc
pop
gs
add
inc
and
pop
cli
inc
xor
add
lahf
push
pop
shlb
out
ljmp
jnp
push
mov
stos
pop
repz
imul
add
jo
into
jp
icebp
jb
pushfw
inc
xor
push
sub
mov
imul
jg
rclb
outsl
lock
push
xchg
jg
lds
mov
mov
sub
cwtl
mov
sub
aad
test
stos
ss
pushl
hlt
mov
adc
sarl
jle
fcmovu
test
mov
into
mov
pop
xchg
sti
mov
incl
js
popf
sbb
pop
shll
push
jbe
iret
pop
cwtl
pop
xor
iret
cmpsb
imul
jae
pop
mov
pop
outsl
outsb
addr16
repnz
cmp
dec
xor
jnp
add
push
mov
xor
aad
mov
add
pop
pop
pop
cli
cli
adc
aam
outsl
popa
cmp
lds
xor
insb
push
adc
sbb
inc
mov
push
stc
shrb
test
orl
push
ljmp
sub
pop
outsb
push
mov
adc
or
out
mov
iret
push
inc
push
icebp
mov
pushl
xchg
jns
pop
xchg
xlat
push
sub
inc
jecxz
std
lcall
imul
sub
notl
jne
and
xor
out
mov
popf
addl
and
xchg
push
cltd
pushf
cmp
and
fldcw
inc
xchg
jg
ret
insl
sub
cmc
mov
jecxz
pop
adc
sarl
repnz
es
icebp
incl
mov
nop
cmp
pusha
xor
mov
movsl
cmp
ficoms
mov
out
jecxz
dec
sahf
loopne
outsl
adc
ja
pop
in
jg
call
lcall
dec
aad
cmp
inc
xchg
dec
inc
inc
push
outsb
loopne
test
in
sub
mov
in
out
and
push
cmp
out
and
arpl
bound
mov
out
sub
aad
adc
test
push
mov
jb
mov
xchg
add
mov
out
jo
dec
adc
and
inc
mov
ljmp
push
mov
repz
dec
inc
push
fisubs
out
and
popa
push
xchg
fisubs
test
das
out
cli
dec
xchg
xchg
jne
xor
push
das
cmp
lods
adc
cmp
inc
and
insb
ljmp
dec
je
adc
pushf
out
xor
testb
gs
aas
mov
mov
xor
das
pop
loop
add
sub
out
push
leave
push
mov
mov
mov
mov
lods
in
sbb
lcall
xor
lea
lahf
jns
and
enter
xchg
loope
loope
call
loop
mov
les
shll
popa
ljmp
mov
xor
imul
jnp
lock
enter
fdivrl
xchg
rclb
mull
xchg
mov
sub
inc
stos
imul
xor
xchg
incl
sbb
jb
or
test
decl
pop
or
in
scas
mov
xor
pop
lock
call
cltd
sbb
sbb
sub
bndstx
sbb
ret
call
dec
sub
lds
or
repz
fwait
xchg
xlat
div
incl
jmp
int
xor
cmp
imul
lcall
push
sub
xchg
scas
and
dec
insl
mov
mov
test
jb
jo
std
call
pop
sbb
test
add
pop
mov
lock
out
decl
xchg
pop
sub
xor
mov
jecxz
jge
int3
cmp
mov
and
repnz
add
stc
cmp
pop
pop
jns
add
ds
lcall
cmc
sub
add
insb
cs
mov
cli
add
rep
sarb
pop
icebp
dec
arpl
int
sub
movsb
mov
idivb
decl
mov
pop
into
xchg
sbb
cld
scas
xchg
inc
out
xchg
xor
adc
js
ss
pop
jbe
icebp
leave
out
sub
push
imul
add
into
aaa
lds
adc
mov
dec
orl
push
sub
jno
push
stos
ljmp
jbe
gs
stos
hlt
xor
pop
sub
mov
jp
sbb
xor
popf
das
std
push
dec
or
out
loope
sub
jne
mov
push
pop
and
cmp
sub
lods
loop
cmp
xor
ss
stos
mov
out
mov
ja
pushl
push
andl
xchg
sub
ds
clc
sbb
lret
or
push
das
xor
aam
loop
lock
and
repnz
sti
ss
mov
into
sbb
sub
dec
call
xchg
mov
jae
or
insl
cmp
xlat
lods
lret
mov
nop
xchg
sahf
lret
test
cltd
mov
call
subb
sar
std
loop
add
cmpb
hlt
cmp
xchg
pop
movsb
push
cmp
push
int3
je
out
aam
sti
pushf
sub
mov
pop
jno
pushl
pop
mov
nop
or
pop
adc
xor
push
testl
mov
and
lcall
inc
mov
mov
push
push
xchg
outsb
rcrb
jg
sti
xchg
fisubrs
and
pop
sub
push
mov
and
fstpt
adc
adc
mov
sbb
xchg
mov
std
lahf
mov
xor
inc
mov
test
sti
incl
daa
sbb
rep
loope
mov
shrl
shll
fistpl
cmp
shlb
or
decb
pushl
cmpsl
imul
or
sbb
in
push
adc
sbb
popf
addl
mov
sub
repz
decl
adc
cmp
sbb
add
test
jmp
call
ja
push
jl
adc
xchg
and
jnp
fcomip
pop
xchg
push
lds
add
fisubs
cmpsb
hlt
nop
and
bswap
mov
icebp
ljmp
push
enter
and
scas
les
subl
jno
scas
add
mov
ljmp
clc
inc
xchg
jp
cmp
mov
fcmovu
mov
sar
insb
inc
pop
push
add
push
xor
pop
xor
jge
add
test
xchg
inc
xor
jnp
sub
scas
and
jg
lods
decl
lock
or
push
adc
xor
mov
dec
push
imul
xor
xchg
cmp
cwtl
and
mov
xchg
test
decl
mov
mov
pop
adc
push
jns
fwait
dec
mov
push
inc
ljmp
add
stc
scas
sub
shrb
imul
mov
repz
mov
sub
jmp
push
mov
push
scas
test
bound
clc
add
push
mov
sbb
add
lcall
insb
add
incl
mov
aas
out
lcall
jmp
imul
int3
mov
xchg
sti
test
jl
xorl
push
sub
iret
dec
cmp
and
xchg
in
pop
mov
sub
inc
xchg
push
xchg
cmp
ja
cmp
jg
mov
adc
movsb
xlat
pop
jecxz
xor
xlat
sub
add
repnz
decl
repz
repz
test
jnp
shrl
decl
ss
jnp
mul
pop
in
rorb
notl
test
sar
incl
push
iret
ret
adc
in
push
in
cmc
roll
hlt
jae
xor
ljmp
jl
pop
scas
xor
xchg
sub
imul
test
fimuls
decl
lock
push
fwait
push
dec
jbe
jge
dec
sarl
test
fnsave
jg
lcall
js
sbb
mov
push
ret
inc
xchg
fistpl
decl
xchg
or
and
sahf
in
shr
jo
out
adc
jno
movsb
jg
add
xor
clc
pushl
shl
inc
sub
sti
es
xchg
lods
sub
push
lea
aad
sti
mov
add
ljmp
mov
push
fsubs
in
xchg
incl
pop
jle
xor
xor
pop
les
ljmp
ljmp
pushl
scas
mov
cmp
rorb
mov
jmp
aaa
dec
pop
inc
shlb
stos
add
out
dec
mov
dec
mov
inc
loop
adc
movsb
jmp
or
mov
xor
sub
jg
jne
inc
pop
stos
pop
out
ud0
sbb
addb
adc
scas
cmp
push
pop
popf
inc
pop
jnp
jmp
rorl
mov
data16
dec
push
add
or
rclb
inc
cltd
sub
dec
pushl
jge
lret
cwtl
adc
in
in
dec
xlat
push
sbb
mov
aad
loopne
jne
es
mov
sbb
mov
mov
dec
pop
mov
dec
xor
mov
mov
call
or
dec
sti
sbb
and
xchg
mov
mov
xchg
jne
out
js
lock
call
daa
lret
sub
and
scas
jecxz
sahf
loop
stos
rcll
out
sar
lcall
lcall
loop
cmp
in
lahf
sbb
aaa
xor
and
sub
mov
out
testl
inc
lcall
movsl
outsl
pop
add
sub
jmp
decl
mov
pop
jae
mov
mov
sub
popa
lahf
mov
leave
daa
jmp
data16
dec
cld
adc
clc
jo
js
incl
cmp
adc
mov
icebp
pop
clc
incl
push
scas
enter
mul
mov
lods
outsl
ljmp
std
incl
movsb
in
xchg
push
outsl
rolb
pushl
push
or
cwtl
lds
out
or
mov
test
jmp
lret
fbld
notb
cmp
jecxz
dec
int
or
sahf
jne
cld
inc
lcall
pusha
xor
cmp
in
cmp
movsb
int
and
ret
mov
insl
loopne
call
insb
xchg
jnp
adc
xor
push
test
and
decl
xlat
imul
loop
pop
mov
stos
call
ror
jne
incl
inc
dec
cmp
aam
data16
sub
movsl
lea
or
dec
bound
loope
das
movmskps
std
popf
jo
out
xchg
push
adc
sub
rcll
xchg
frstor
push
dec
mov
incl
adc
xor
cs
dec
lret
inc
mov
mov
out
das
fcoms
ljmp
dec
sti
js
pop
cmp
push
jl
mov
fstl
pop
jp
adc
add
or
push
mov
dec
jle
jle
lock
push
jae
mov
xor
sar
sbb
int3
fstpl
rcll
rol
jle
sub
pop
dec
or
jl
and
gs
or
pop
test
inc
leave
push
orl
outsb
inc
push
jmp
jge
and
ret
xchg
sti
lret
and
icebp
mov
mov
push
hlt
in
sbb
movsl
into
add
popa
addr16
pop
jae
out
xor
sub
lea
and
cmp
cmp
and
inc
lcall
dec
rclb
insb
testb
fidivrs
inc
mov
fs
cmp
imul
stos
mov
adc
std
mov
sbb
pop
lret
aad
jne
popl
cmp
push
das
push
xor
inc
xchg
cmpsl
mov
test
scas
notl
push
mov
repnz
ljmp
call
fdiv
push
pop
adc
andl
out
inc
inc
ja
call
js
push
inc
jns
aam
stos
std
push
dec
jmp
aas
fiadds
int3
mov
pop
push
lods
or
ja
ljmp
fs
mov
stos
fsubs
ja
or
mulb
ja
jmp
loop
test
cld
push
inc
push
nop
sahf
dec
stos
cld
jmp
pop
fstpt
mov
sbb
ljmp
icebp
sbb
add
jns
push
lcall
mov
fwait
sahf
and
dec
test
les
jmp
fmul
jne
or
fcomip
push
inc
xchg
out
roll
pop
push
outsl
test
call
sbb
popa
pop
lcall
add
outsl
xchg
inc
push
leave
jae
movsl
out
and
cmp
push
jnp
push
xlat
and
pop
test
cmpsb
mov
xor
jg
jo
out
jmp
jmp
or
bnd
iret
pop
xchg
hlt
out
shrl
incl
mov
call
test
lods
out
sub
mov
xor
mov
mov
jbe
ror
aam
cmp
popf
pop
jnp
pop
xchg
dec
sti
cmp
ret
xor
out
jmp
cmp
mov
fwait
pusha
dec
lock
inc
xchg
mov
pop
sub
mov
decl
mov
insb
aas
nop
rcr
lcall
pop
dec
jecxz
pop
xlat
mov
cmp
arpl
scas
cmp
adc
jmp
mov
mov
xchg
sbb
mov
inc
push
sbb
ljmp
ja
aad
cmp
cli
pop
insl
and
push
je
push
mov
mov
scas
cli
jmp
aaa
aaa
push
shrl
xlat
mov
pop
pop
enter
xchg
ljmp
icebp
fwait
mov
jg
inc
sub
je
mov
scas
dec
sub
ss
loop
repnz
mov
arpl
push
data16
jae
fdivrp
lcall
pop
scas
adc
inc
mov
or
hlt
push
int
dec
add
mov
add
out
push
sbb
jmp
jb
or
mov
dec
test
hlt
xor
repz
adc
test
ljmp
lods
lret
sarl
jmp
push
inc
cmp
loop
sbb
std
ljmp
sti
call
call
lds
scas
jae
popa
into
pop
insb
pop
insl
lcall
push
stos
not
and
adc
pop
mov
mov
xor
mov
inc
adc
ljmp
cli
addr16
std
inc
rcr
mov
sbbl
push
xchg
sub
lds
ljmp
pushf
push
pop
pop
pop
leave
push
inc
mov
sub
pop
clc
xchg
cld
jbe
sti
bound
or
decl
loope
cmp
xor
outsl
lds
cmpsb
iret
rorl
jg
stos
xchg
mov
mov
call
dec
add
inc
xchg
xchg
mov
mov
outsb
xor
gs
imul
mov
cmp
in
and
or
add
mov
sahf
mov
adc
lock
mov
sti
mov
adc
mov
xchg
xor
shll
das
test
ds
sub
ds
xor
inc
dec
into
loop
iret
pushf
idivl
daa
lods
lret
pushl
std
pushl
and
clc
mov
loop
mov
mulb
and
push
dec
and
jmp
lods
stos
push
subb
out
nop
pop
push
das
cmc
xchg
pushf
repz
sub
mov
mov
std
mov
fstpl
hlt
cs
dec
push
popf
cmp
call
add
ja
js
test
push
call
cmpsl
cli
sub
dec
xor
std
adc
imul
jne
mov
cmc
fmul
fcomip
decl
and
test
pop
leave
and
cwtl
adc
xlat
pop
xor
outsb
test
pop
add
pop
push
xchg
loop
mov
decl
sbb
mov
int
xor
inc
mov
xor
movsb
out
lcall
jge
mov
add
stos
cmp
inc
movsl
fildl
mov
cli
lcall
out
push
pop
cmp
mov
add
add
decl
icebp
xlat
into
imul
ds
dec
fistps
sub
jnp
sbb
sub
data16
ja
pusha
jp
mov
std
pop
iret
ror
mov
or
aaa
aaa
cld
out
clc
mov
cmp
mov
adc
pop
rorb
pop
inc
mov
jmp
loop
lcall
or
push
jbe
mov
pop
cmp
pushl
ret
xor
mov
stos
nop
lahf
add
aas
out
and
cmp
dec
pushl
out
out
repz
and
xor
jmp
pop
addr16
cmp
nop
dec
in
hlt
incl
dec
sbb
jecxz
ja
rclb
sub
dec
or
lcall
push
int3
adc
aad
mov
add
arpl
rolb
push
pop
lahf
lods
push
pushl
scas
lods
add
pop
or
sbb
in
sub
and
pushf
hlt
push
pushf
xchg
xchg
pop
inc
jp
mov
cwtl
pop
repz
aaa
adc
or
pop
jno
stc
or
dec
rcrb
pushl
inc
icebp
push
push
inc
lods
xor
mov
es
scas
sbb
das
push
ljmp
mov
icebp
cltd
jns
mov
fs
or
ds
dec
inc
test
mov
jg
lcall
mov
jge
mov
lods
pop
mov
rcrb
xor
aaa
lret
test
incl
mov
cmp
xor
icebp
sub
dec
les
pinsrw
test
fcomip
and
and
inc
mov
push
xchg
test
ljmp
push
js
and
stos
or
into
sub
lock
sbb
dec
cld
sbb
int3
sti
adc
mov
loopne
call
add
pushl
rol
jge
sub
add
xlat
sahf
dec
add
jl
xchg
rcrb
rcrl
sub
pushl
fs
jne
push
ret
add
test
push
push
into
out
dec
cld
fucomi
aas
and
and
jmp
adc
lea
arpl
mov
setle
pop
push
stc
jns
incl
cld
stos
int3
push
les
mov
pop
jecxz
test
fs
insb
repz
add
mov
inc
iret
xchg
mov
addl
mov
sbb
fmulp
shll
mov
push
pop
sarl
call
sbb
int
mov
in
push
push
js
insl
adc
icebp
inc
negb
xor
sbb
sbb
dec
sub
xchg
cmc
push
inc
mov
pop
decl
xlat
pop
fcmovnu
out
xchg
jg
aas
push
push
mov
in
inc
gs
inc
clc
add
pushl
xor
out
xchg
in
mov
jno
pop
cwtl
stos
sbb
or
das
lcall
int3
ds
fcmove
das
mov
jbe
dec
cmp
cli
mov
xchg
adc
fcomps
xor
cmp
bound
sub
pop
push
pop
arpl
out
xor
cmp
shll
arpl
fs
pop
xchg
or
xchg
cmp
decl
lock
mov
push
popf
out
test
xchg
cmp
stos
push
je
lcall
mov
cmc
dec
and
daa
fdivp
pop
aam
push
insb
xor
adc
incl
add
mov
xchg
out
mov
bound
aas
bound
inc
cld
lcall
mov
notl
bound
push
adc
clc
mov
pop
es
nop
sub
or
dec
mov
mov
sbb
sub
testb
cmp
cld
push
aaa
shll
je
push
mov
dec
jg
push
adc
jmp
dec
in
xor
mov
pcmpgtd
adc
add
push
lods
in
int
or
or
push
ret
push
cmp
pop
xchg
lret
mov
fstpl
jmp
jmp
pop
aas
mov
pop
dec
pop
or
adc
dec
xor
adc
push
mov
loop
call
sub
jge
xor
xlat
cmp
adc
and
out
mov
in
popf
mov
or
pop
adc
test
dec
pop
add
xlat
dec
or
cmp
cmp
clc
add
ljmp
pushf
cwtl
sti
cmp
xor
repz
xor
sbb
call
dec
cmpb
dec
movsb
sbb
int
cltd
mov
outsb
sahf
push
shl
bound
cld
aad
sti
lahf
jno
and
decl
inc
and
adc
dec
push
xor
int
pop
sbb
subl
orb
icebp
loopne
out
in
fs
mov
pop
lds
out
nop
pop
cmp
decl
fstps
xor
mov
mov
dec
jmp
mov
xchg
std
or
cld
mov
popf
add
inc
out
and
cmc
dec
and
pushl
frstor
or
or
and
cmp
jge
xor
mov
jg
in
sahf
inc
mov
outsb
adc
sbb
cmp
and
out
adc
fistl
cli
adc
ljmp
and
stos
ljmp
popa
push
movsb
cs
lret
fadd
iret
mov
in
and
incl
ja
jb
ja
push
jns
jb
mov
addr16
mov
gs
mov
and
dec
pop
mov
push
sub
sub
divl
stos
outsb
fsubrs
mov
xor
pop
mov
pop
xchg
vunpckhpd
shrl
lods
test
adc
jne
out
clc
fstpl
add
mov
das
je
cmp
inc
mov
mov
aad
fcompl
xorb
pushl
jl
in
imul
lds
sub
mov
pop
stc
fdivr
mov
mov
in
jb
andb
jb
insl
clc
cmc
dec
sbb
ljmp
push
mov
shlb
jae
cmp
imul
xor
push
and
add
mov
inc
cmc
test
jnp
lock
incl
lea
sbb
dec
mov
mov
ret
cmpsl
or
decl
rorl
lcall
dec
xchg
and
mov
es
push
pushl
ret
jne
testb
int3
mov
scas
and
cmc
and
push
sbb
sbbb
into
jnp
test
negl
jno
incl
push
arpl
inc
inc
in
fldl
jno
xchg
push
jns
add
fwait
cmp
xchg
jbe
pop
xor
cmp
inc
scas
incl
adc
int3
cwtl
mov
idivl
icebp
pop
aad
jg
and
jmp
sbb
xchg
cmp
and
or
sahf
stos
fdivp
ljmp
and
inc
and
mov
push
scas
das
aas
in
jo
xchg
xchg
sub
repz
cmp
adc
jp
movsl
cmp
and
loopne
sbb
sub
incl
fnstenv
ss
sub
insb
fidivs
xor
jns
push
add
adc
fsubp
adcb
mov
add
fisubl
mov
pop
mov
rorl
aas
mov
call
pushf
loopne
negl
sbb
xchg
jecxz
cwtl
call
lock
filds
incl
test
rorb
sub
std
pushf
gs
and
dec
shlb
scas
scas
decb
pushl
jns
sarb
jnp
sub
les
xlat
mov
mov
pop
or
cmpsl
jp
and
adc
cmp
inc
rdmsr
jecxz
lods
fmuls
inc
lret
into
mov
inc
and
push
mov
sbb
rclb
and
xor
ljmp
push
dec
add
dec
cmpsl
mulb
sub
rcrl
iret
xchg
add
test
aaa
jmp
cli
pop
and
fs
cmp
sbb
xor
mov
incl
jle
push
addl
mov
mov
lods
mov
mov
addr16
filds
test
mov
cmc
arpl
xchg
push
push
push
outsl
clc
fwait
cmpsb
mov
cmp
int3
sub
cwtl
pop
subb
dec
xchg
ret
jmp
clc
push
push
dec
jae
inc
popa
ficoml
mov
jmp
decl
hlt
sarl
dec
or
in
sti
loopne
loop
push
pushfw
pusha
sbb
mov
cmp
ret
xor
test
mov
or
into
imul
dec
imul
orb
inc
subl
ljmp
push
inc
mov
loop
or
test
jo
fstl
cmp
sub
adc
insb
jo
shll
mov
je
lret
das
and
add
xchg
mov
push
rolb
or
sub
jno
mov
inc
imul
loop
scas
mov
in
movsb
inc
dec
cli
loop
stc
and
lcall
cltd
lds
xchg
loopne
in
lret
or
push
jp
std
cmp
and
push
or
decl
xor
mov
aas
add
sbbl
pushf
add
sbb
incl
aaa
in
jge
out
and
in
icebp
and
jmp
adc
jno
lahf
sahf
adc
sar
decl
mov
mov
xor
aaa
mov
insb
jmp
and
rorb
call
inc
or
push
sahf
cmpl
push
iret
mov
push
ds
pop
popa
loope
iret
sbb
lcall
cmc
add
jns
or
pop
ja
adc
mov
lods
repz
inc
mov
mov
fs
ret
xchg
mov
xlat
xchg
xlat
pop
push
jno
jge
inc
dec
decl
sbb
fisubl
sbb
xorps
mov
sbb
inc
pop
mov
pushl
jmp
sub
pop
addr16
data16
cli
sub
sbb
and
cmp
ret
popa
mov
pop
sub
cld
dec
std
fcompl
mov
into
hlt
mov
jmp
aaa
bswap
pop
sub
jmp
bound
aas
mov
pop
lock
jns
cmpb
idiv
in
mov
insb
sarb
sbb
hlt
cmpsl
mov
xchg
nop
mov
aas
mov
bnd
xchg
js
fstps
stc
push
cld
arpl
xchg
aam
mov
sub
call
push
mov
mov
loop
sub
sub
lock
int3
nop
movsl
add
push
jecxz
loop
jge
pop
test
sar
pusha
loope
iret
ficoms
mov
outsb
adc
std
sub
push
jbe
lea
sbb
ja
movsb
push
bound
dec
insl
sbb
decl
xchg
mov
aaa
int3
inc
ja
cmc
pop
fcomp
and
mov
cmc
call
mov
adc
jo
cmp
in
push
mov
daa
sbb
lcall
stc
cltd
adc
test
out
cltd
hlt
add
ret
inc
add
xchg
insl
sarb
cld
dec
add
icebp
or
cld
inc
lcall
jle
push
or
es
lret
push
jle
sarl
xor
cmp
call
iret
xor
stos
cwtl
and
pusha
ljmp
leave
inc
loop
ja
jmp
xor
xor
lahf
cli
sub
pop
jnp
or
mov
push
ret
out
cli
popf
loopne
lds
push
xchg
es
stc
pop
insl
or
sbb
dec
clc
jmp
mov
push
sub
mov
add
mov
sbb
repnz
incl
pop
mov
dec
add
add
jno
loopne
jg
test
scas
outsb
lahf
inc
dec
mov
fstl
dec
xchg
jo
hlt
adcb
cs
and
decl
rcll
dec
mov
popl
shlb
iret
pop
cmp
jmp
movsl
testb
cli
bound
add
jbe
jne
jns
dec
incl
test
push
push
repz
ficomps
sbb
pusha
cltd
inc
loop
mov
push
mov
inc
push
mov
jp
subb
sub
jge
mov
jbe
pop
jb
pushl
idiv
lods
pop
or
insb
xchg
call
outsb
shll
ss
test
push
cmp
incl
dec
push
mov
inc
jl
call
cld
pop
adc
stc
int3
imul
lcall
sub
xchg
out
mov
inc
jmp
jae
das
cltd
arpl
jg
mov
jno
push
idiv
lahf
xchg
mov
jmp
call
sbb
call
shlb
aad
pop
mov
dec
mov
outsb
ror
test
lock
sarb
mov
dec
push
aam
into
jle
sarb
mov
cwtl
and
xchg
lcall
insl
push
test
mov
pop
cmpsb
xchg
fcmovbe
or
popa
std
sub
mov
call
xchg
jmp
shrl
lcall
mov
ljmp
loopne
popf
pop
adcb
push
add
jmp
dec
and
test
push
cmp
repz
sbb
xor
push
inc
mov
incl
imull
mov
imul
leave
jae
dec
cmp
sub
mov
xor
push
and
call
stos
repz
clc
sub
inc
sysenter
mov
push
clc
push
into
jecxz
sub
in
fldln2
push
jg
rol
mov
sbb
or
sbb
enter
popa
pop
imul
inc
add
cmp
cmp
aad
icebp
sbb
mov
scas
xchg
pop
iret
call
xchg
ror
push
inc
jnp
inc
scas
lods
pop
incl
lds
js
lret
rcrb
ret
push
mov
xor
in
mov
ljmp
ret
pop
stos
ss
inc
ret
in
das
fadds
in
mov
lods
out
negb
inc
jmp
xor
movsb
repnz
cmp
fisubl
add
idiv
incl
pusha
clc
icebp
or
lock
stos
mov
rcll
mov
cmp
insl
inc
xor
scas
add
dec
out
cld
les
inc
and
ljmp
addr16
sub
pop
lds
scas
push
and
adc
fdivr
mov
leave
in
pop
ja
push
pop
lret
es
inc
fdivl
cmpsl
adc
les
rcll
sbb
and
push
call
push
ja
lret
fistps
xor
cli
dec
jle
fstpt
cltd
movsb
and
push
push
inc
jle
dec
testb
in
xchg
inc
fwait
js
aas
mov
dec
dec
fwait
inc
mov
mov
fcomip
decl
mov
pop
inc
jl
mov
xchg
lret
jl
add
push
push
in
jg
mov
jno
fisttpll
lds
adc
inc
mov
mov
xor
aas
and
sbb
lds
in
push
adc
xchg
in
aam
inc
nop
push
mov
pushl
adc
outsb
jmp
jge
xor
in
shlb
lcall
out
andl
sarl
cmp
lods
cmpsb
push
push
dec
and
jmp
scas
pop
inc
add
nop
dec
sub
push
push
cmp
jbe
pop
pop
icebp
jmp
add
ffreep
test
test
adc
es
sbb
jb
mov
into
mov
mov
cmp
pop
in
or
lcall
in
test
xchg
add
and
push
mov
push
xor
add
xor
mov
fiaddl
pop
mov
cmp
inc
outsl
outsl
add
iret
aam
jae
fcmovb
jo
ds
call
push
into
sub
push
mov
out
cmp
push
dec
cmc
xchg
adc
mov
fcmovnu
mov
push
xchg
bnd
stc
and
lret
xchg
xchg
fisttpll
mov
jne
fwait
pushl
out
cmp
and
aaa
cld
mov
mov
pop
mov
insl
sti
adc
jmp
xchg
mov
std
cld
shll
add
mov
sbb
cmpsb
call
ret
aam
std
mov
mov
push
or
outsl
cli
incl
sbb
sub
sub
leave
dec
pop
fsubs
aad
insl
aaa
pusha
or
push
sbb
jmp
push
sbb
jns
in
cmp
adc
lcall
add
adc
jmp
imul
mov
out
jecxz
cmp
pushl
sub
int
push
inc
and
push
jne
and
mov
add
dec
mov
pushl
and
dec
sbb
adc
lret
xor
in
lds
lods
cmp
decl
inc
xchg
ret
outsl
and
scas
fwait
xchg
sub
inc
sub
in
movsb
fiadds
inc
mov
pop
popa
push
out
js
mov
xor
or
push
and
sti
loope
xor
add
push
mov
sbb
ljmp
dec
bound
cwtl
lock
adcb
add
out
mov
loop
xchg
ja
xchg
pop
incl
pop
aaa
add
push
and
jae
sub
xchg
sub
and
jnp
jmp
inc
sub
push
lcall
cmp
adc
mov
in
adcb
icebp
sub
jno
jmp
jae
inc
loope
insb
gs
mov
mov
xor
inc
mov
jno
or
push
dec
push
and
mov
incl
cmpsb
movsl
test
aad
mov
xor
out
gs
jge
push
lret
ljmp
lock
add
dec
cmp
xor
pop
or
mov
lcall
jp
fdivl
mov
inc
add
sbb
inc
mov
adc
out
ror
pop
lock
test
scas
xchg
pop
pop
adc
les
test
lcall
sbb
scas
fucom
mov
push
loope
lea
pop
test
sbb
sbb
xor
jmp
jle
jge
fs
dec
push
sbb
mov
dec
push
or
mov
xor
mov
jmp
xor
push
inc
iret
mov
push
outsl
bound
sbb
fildl
stos
sti
sub
adc
mov
movsb
loope
fisttps
imul
push
rorb
inc
lcall
push
dec
daa
mov
lock
dec
mov
lods
push
xchg
push
mov
outsl
data16
testl
mov
ljmp
hlt
sti
sti
push
loopne
jnp
je
dec
in
sub
aaa
outsb
leave
adc
xchg
jno
icebp
fcomip
rorl
push
lcall
sti
cmpsb
push
push
loope
mov
mov
scas
ds
lret
addr16
inc
push
add
cld
fdivrp
pop
out
dec
out
xor
mov
push
addl
aaa
xor
test
jbe
pushl
adc
lock
sarl
loop
add
inc
data16
sbb
cltd
inc
add
xor
mov
mov
add
jecxz
push
fsubl
sbb
mov
inc
in
cmp
add
cmp
mov
add
add
sbb
fmuls
fmulp
lcall
call
mul
adc
inc
mov
inc
daa
aad
ss
int
adc
fcoml
in
mov
ror
sbb
movsb
pop
cmc
lods
xor
mov
adc
es
mov
sub
fadds
push
jae
in
jbe
jp
cmp
shll
out
push
int
int
mov
jecxz
xor
jb
aas
lahf
cmp
mov
push
sbb
mov
nop
loopne
push
rclb
adc
cli
jo
mov
in
cmp
add
jmp
icebp
sub
std
movups
sbb
dec
leave
out
outsb
data16
mov
daa
pop
mov
xchg
stc
je
fadd
fs
ljmp
xor
mov
decl
aam
invd
loop
sbb
outsb
insb
loop
pop
dec
lcall
loopne
test
ds
cli
sub
sub
lret
data16
cmp
jmp
push
js
mov
fs
cmp
inc
mov
loopne
lds
mov
push
and
aad
mov
mov
test
incl
outsl
fwait
stos
inc
daa
lret
and
insb
aaa
push
fnsave
popf
cmp
mov
jmp
mov
int
lods
jne
add
lret
mov
in
insb
pushf
fwait
pushf
pop
dec
out
push
adc
cmp
paddb
xchg
cmp
cmp
xor
sub
sar
jmp
ret
sahf
pop
add
lods
aaa
in
mov
mov
xchg
nop
jmp
in
xor
lret
mov
scas
cld
and
lcall
lods
mov
cli
cmp
cli
ss
decl
scas
and
push
loope
push
rcl
xchg
sbb
leave
cmp
push
enter
cmp
ja
pop
ds
sarl
jmp
cmp
add
idivb
lahf
dec
xchg
push
push
stc
test
orb
inc
cmp
mov
and
mov
loope
cltd
jl
icebp
decl
das
dec
sub
xchg
mov
ja
js
sub
sbbb
pop
or
pop
dec
lahf
ret
sbb
movsl
sub
jns
call
dec
and
rorb
in
in
cltd
xchg
push
fcoms
mov
pop
test
lcall
shll
or
add
mov
dec
jmp
aad
fsts
xchg
imul
sub
or
xchg
test
jno
fisttpl
insl
mov
aam
mov
bound
inc
clc
decl
jae
push
pop
sbb
jns
adc
fdivp
pushl
out
jo
mov
jo
mov
call
lcall
jne
lds
push
adc
pop
dec
sub
xchg
pop
xor
inc
sbb
popf
shlb
cli
decl
imul
push
push
lahf
pop
fnstenv
rorl
inc
inc
mov
out
adc
inc
and
and
jge
mov
stc
scas
test
mov
movsl
fistpll
adc
jge
cmp
cld
mov
lcall
icebp
mov
push
scas
movl
xchg
and
hlt
and
push
or
push
pop
je
ficoml
ss
lea
movsl
cltd
xlat
lods
pop
xor
jl
lcall
pushl
pop
push
bound
mov
fcmovbe
jl
adc
std
inc
mov
xlat
push
test
out
insb
or
call
mov
and
into
mul
mov
lods
pop
cmp
scas
cmp
call
fnsave
loop
jno
hlt
pop
idivb
ss
das
sbb
xor
ret
mov
sbb
inc
dec
outsl
xlat
sbb
test
cmp
mov
sub
pop
cmp
rclb
jmp
xor
out
jl
pop
test
push
cli
outsl
mov
mov
test
cmpl
aam
and
arpl
adc
pushl
adc
out
jnp
inc
jns
mov
ret
addr16
pushl
mov
cltd
fbstp
add
pop
cltd
mov
dec
repz
test
ljmp
fstps
std
iret
sub
cli
out
scas
je
push
aas
jp
sbb
xchg
out
mov
das
stos
decl
cltd
mov
into
pop
and
pop
jg
mov
ljmp
adc
into
test
jmp
lds
inc
shr
mov
pop
sbb
testl
pusha
sti
je
inc
pushl
es
lea
push
push
loopne
mov
mov
cmpsb
dec
sbb
jge
jne
fcoms
jbe
aaa
outsl
xor
ljmp
mov
jno
insb
out
and
pop
mov
in
dec
dec
ds
decl
hlt
jb
cmp
cld
testb
add
cmp
sub
push
mov
stc
jl
pop
xlat
in
or
xlat
outsl
addb
rcl
movsl
and
call
call
xchg
sbb
sbb
push
scas
jecxz
faddl
clc
stc
cmp
jl
mov
lcall
fwait
lock
fidivrs
je
sub
icebp
jp
lret
ja
imul
in
lahf
loopne
jmp
inc
adc
cmc
add
add
aaa
dec
push
mov
cmpb
pop
inc
lcall
jo
or
sub
or
mov
xchg
add
adc
clc
mov
push
sbbl
pop
mov
test
pop
lahf
shll
decl
mov
jle
fldt
aaa
fcomip
es
sub
pushl
mov
push
imul
xor
int
movlhps
inc
mov
mov
cli
dec
cli
andb
stos
pushf
sub
lahf
xchg
push
arpl
sti
jecxz
stos
imul
rorb
fwait
rolb
push
and
push
out
dec
sbb
dec
push
mov
mov
inc
jmp
inc
jb
adc
xchg
mov
mov
scas
clc
pushl
test
mov
xchg
mov
pop
stos
pop
sub
lock
cmp
cmpsb
test
sahf
and
cmc
add
stos
adc
icebp
sahf
mov
sbb
xchg
mov
test
push
aaa
push
cmp
xor
and
es
dec
mov
loopne
out
pushl
in
pop
dec
gs
push
pop
inc
insb
mov
push
push
xchg
test
sub
lcall
pop
lods
insb
insl
sub
cmp
out
sbb
mov
stc
fisubs
sub
mov
lcall
sbb
fcoms
scas
les
leave
inc
movsl
adc
lods
lds
sbb
decl
cmpsl
pop
and
aaa
jnp
jmp
mov
cmpsl
jb
adc
roll
push
mov
fwait
and
sahf
push
ss
shl
xchg
ret
ds
cli
insb
pop
fsub
mov
decl
and
sbb
sbb
hlt
movsl
or
addr16
push
outsl
clc
jne
push
add
push
icebp
fidivrs
data16
mov
xor
outsb
inc
cmp
jg
lcall
mov
outsl
dec
out
xchg
mov
mov
inc
popa
aas
xchg
aaa
cmp
and
push
pushf
jl
inc
in
call
mov
adc
mov
mov
into
shlb
scas
xor
xor
jb
icebp
jno
or
sbb
out
jbe
nop
sub
decl
stc
stos
sbb
popa
aam
jecxz
mov
or
int
pop
xchg
and
xchg
rol
andb
ds
jg
jmp
mull
sub
mov
movsl
in
lcall
lods
or
mov
pop
movsl
lcall
xchg
test
movd
lds
jge
ret
call
xchg
and
ljmp
cmp
addl
fwait
pop
push
out
cmpsl
popa
xchg
aaa
push
inc
out
or
es
mov
decl
movsb
cmp
add
xchg
pop
scas
repz
adcb
mov
mov
lcall
imul
stos
xor
imul
pop
dec
inc
mov
rorl
lods
jnp
dec
insl
cwtl
mov
adc
into
aad
arpl
adc
mov
lcall
push
sbb
in
cmp
popa
pop
in
sbb
xorb
je
frstor
loopne
ljmp
jecxz
adc
adc
jb
push
cmc
ret
icebp
lods
lret
jge
push
push
jns
lods
movsb
and
push
loope
cmp
mov
test
jle
aaa
test
inc
fcomip
add
push
xor
sbb
roll
lretw
xor
int
push
push
ds
ljmp
jg
std
fmuls
or
in
pop
lods
cmpsb
xchg
les
xor
pushl
mov
rol
mov
fnstenv
leave
enter
cli
adc
outsl
push
lock
xor
jns
and
and
idiv
fs
lcall
inc
rolb
mov
out
sbb
adc
test
cmc
inc
push
stos
jne
jg
movsl
pusha
jl
sbb
lock
lcall
scas
in
out
adc
xor
test
jb
mov
std
cld
sbb
mov
sub
inc
scas
push
dec
or
out
and
jnp
lea
dec
addr16
stos
dec
mov
xchg
xchg
gs
aaa
dec
push
push
dec
push
leave
and
arpl
incl
xlat
sbb
das
cmp
and
ret
mov
ret
mov
aad
xlat
lahf
ljmp
xor
cld
sbb
mov
and
scas
dec
bound
jae
sbb
incl
push
in
xor
fcoml
lahf
in
icebp
xchg
dec
push
jno
jne
gs
jae
ja
and
decl
je
xor
pop
mov
cmp
int
and
dec
and
xor
das
pop
mov
call
imul
jmp
test
pop
add
mov
pop
pop
push
mov
dec
mov
adc
sbb
dec
add
in
sbb
add
mov
sar
and
mulb
fs
sbb
xor
repz
xor
add
decl
sbb
sub
std
sbbl
pop
cmp
scas
cmpsl
xlat
cmp
jg
rol
fidivs
pop
mov
or
push
cmpsl
and
sub
mov
xchg
ud0
ljmp
mov
nop
int
push
movsl
jne
enter
into
fwait
push
jbe
aam
call
inc
lods
outsb
push
aas
stos
mov
mov
mov
and
inc
jmp
inc
jbe
imul
clc
push
or
subl
ss
adc
push
adc
jmp
ss
sbb
xchg
jp
xchg
inc
and
decl
add
scas
pop
jne
xchg
push
add
xchg
sbb
jb
lea
outsl
sub
pop
and
lcall
loopne
std
dec
call
xchg
incl
sahf
jg
pop
scas
jge
loope
cmp
ret
outsl
mov
mov
pushl
pop
daa
or
mov
jo
pop
jecxz
pop
jne
in
cmp
pop
imul
mov
cmp
popf
ljmp
sar
incb
pop
adc
jp
les
mov
adc
call
add
stos
sbb
fcoms
pusha
pop
fwait
divb
or
adcb
call
pop
or
push
sarb
movl
mov
sub
and
cmc
in
clc
jmp
pop
dec
mov
lret
sub
adc
and
sbb
je
outsl
sahf
inc
mov
test
in
cmpl
insb
rcrb
out
pushl
out
xor
insb
xlat
cltd
ret
and
fucomip
and
into
out
ud0
inc
cld
sbb
loope
xchg
pop
push
ljmp
mov
adc
jg
aaa
sbb
inc
push
ja
test
push
add
xchg
and
lcall
jge
jg
or
stos
or
mov
bnd
jl
aam
cmc
arpl
mov
cltd
cmp
nop
mov
xlat
call
into
sbb
jnp
hlt
rcll
aaa
sub
ret
pushl
adc
jg
mov
scas
lods
in
out
xor
pop
cmp
in
jp
decl
loope
mov
stc
and
pop
cmpsb
in
movl
out
mov
push
pusha
fdivr
ljmp
lea
mov
pusha
jmp
mov
push
lods
xor
dec
fisubs
loop
arpl
incl
pop
and
add
mov
repnz
inc
pop
and
ret
inc
add
cwtl
mov
decl
repz
pop
sbb
xor
push
adc
leave
inc
jg
inc
out
ja
jnp
push
pop
movsb
or
sbb
mov
imul
je
xchg
hlt
push
out
fbld
shrb
inc
dec
rcrb
dec
mov
aam
leave
shrb
sub
dec
setns
adc
imul
test
push
incb
add
push
std
call
push
fists
js
xchg
ljmp
aam
pop
outsb
outsb
fisttpl
loopne
lcall
and
mov
arpl
mov
add
xchg
cmp
jmp
jbe
cmpsb
lahf
mov
sub
mov
fadds
rorl
lret
in
jmp
ds
jp
pop
lea
mov
xchg
in
dec
in
push
cmovle
pushl
cld
mov
inc
and
add
sti
cli
xor
mov
cmp
scas
clc
stc
sarb
iret
dec
enter
or
push
pop
push
jbe
pop
xor
ljmp
mov
xchg
xlat
push
mov
sub
pop
inc
push
ljmp
loope
testl
repnz
mov
push
xchg
lcall
cmc
shlb
pop
dec
cmp
fisttpl
or
leave
test
cli
cmp
mov
cwtl
xchg
cli
incl
loopne
or
hlt
sbb
jmp
mov
pushl
push
push
xchg
xchg
ficoml
dec
test
and
test
call
adc
aaa
fisttps
mov
ret
cli
mov
mov
add
adc
jns
cmc
iret
mov
decl
adc
jo
add
adc
imul
sub
call
pushl
pop
pop
mov
mov
inc
aam
adc
insl
dec
dec
inc
cltd
test
jnp
cmp
mov
sbb
ss
sub
cld
inc
mov
cmp
mov
jg
mov
pop
adc
loope
arpl
mov
mov
in
jmp
lret
jae
pushl
mov
or
xchg
into
bound
icebp
imul
sahf
pop
pop
stos
mov
cmp
sbb
lds
out
aaa
fmull
test
dec
pop
pop
or
push
lret
inc
je
in
jecxz
add
adc
inc
pop
dec
out
test
jecxz
outsb
inc
mov
lock
pop
incl
jno
fs
lret
movsb
dec
loopne
leave
scas
shr
call
lea
cmp
xchg
and
test
jo
inc
mulb
mov
fcmove
jmp
sbb
loopne
jmp
cltd
mov
dec
outsb
pop
mov
lcall
adc
stc
push
inc
xchg
ret
pop
les
je
xchg
cmpb
sbb
xlat
and
xor
jecxz
es
jmp
jb
jle
mov
loop
pop
jae
test
outsb
jmp
or
mov
imul
and
pushl
shr
and
and
or
ret
fbstp
out
or
out
or
loope
imul
dec
clc
stos
test
xor
cmc
pop
jp
xor
cld
inc
cmpsb
cli
call
mov
lods
xor
mov
fst
hlt
aas
out
mov
rcrl
outsl
push
xchg
cltd
hlt
faddp
shlb
mov
int3
lea
test
or
pop
mov
outsl
rolb
test
call
and
xchg
push
xor
arpl
adc
loope
lods
sub
jnp
shrl
mov
add
sbb
stos
stos
lret
call
push
mov
mov
sub
xor
and
scas
xor
xor
mov
pop
loopne
aas
popa
or
pop
adc
sub
mov
xorb
sahf
xor
aas
cmc
insl
jge
fwait
mov
push
cs
aaa
das
ds
sbb
std
rorl
mov
repz
pusha
and
jg
adc
cmp
mov
cmp
inc
ljmp
xor
cmc
stos
sbb
pop
lret
mov
in
lcall
push
cmc
xchg
add
aad
cmp
pop
fucomp
enter
and
das
ja
jmp
jp
cmp
push
xorb
arpl
push
scas
fisttps
insb
stos
stos
in
int
cmp
and
rcrl
out
mov
out
pop
scas
scas
xchg
push
push
in
aad
jecxz
sti
pushl
cmp
and
push
or
inc
gs
push
adc
add
sbb
les
mov
xchg
push
jecxz
fdivs
inc
cmp
lds
scas
call
and
scas
int3
test
lock
mov
pop
sub
add
lcall
ljmp
pop
sub
cmp
lahf
out
or
shl
es
cmp
xchg
int
jecxz
arpl
outsl
mov
xor
aas
pushf
adc
es
pusha
mov
call
jae
mov
loopne
push
mov
add
fnstenv
mov
lret
ljmp
fmuls
cli
jne
mov
push
popa
or
and
push
push
xor
int
lret
sbb
call
jae
enter
inc
push
push
dec
orl
push
ret
js
jo
enter
aas
cld
pushl
jns
je
push
aaa
pop
adc
adc
sub
inc
push
test
call
mov
in
sbb
cmp
or
orl
xchg
addr16
ljmp
jp
jge
ja
push
adc
outsl
sub
mov
pop
push
push
ret
ffreep
mov
incl
mov
arpl
mov
lds
pop
roll
push
mov
mov
xchg
mov
std
shlb
xor
inc
iret
in
sbb
lods
pop
cmc
clc
or
dec
xchg
int3
mov
inc
xlat
sahf
cwtl
pop
push
jns
and
iret
shrb
mov
insl
dec
clc
cmp
xlat
cmp
sbbb
push
mov
nop
fisubs
ficompl
mov
sahf
jns
ret
inc
mov
cltd
nop
outsb
cmp
orl
pop
mov
ret
sub
repnz
dec
mov
sub
lods
mov
push
pushl
test
adc
out
iret
xor
add
sahf
sub
scas
xchg
xchg
ret
jle
lret
and
movsl
xchg
ret
xchg
loopne
push
mov
push
or
cmpsl
int
in
test
decl
and
in
jae
jg
jle
dec
mov
inc
xchg
sbb
out
jmp
faddl
mov
repnz
mov
out
rorl
cmp
call
decl
cmpsb
sti
inc
outsl
cltd
lret
push
dec
sbb
push
fnstenv
movsl
pop
mov
scas
cli
ljmp
sub
push
and
pop
inc
dec
lods
xchg
lock
fidivs
xchg
ljmp
testb
sub
std
or
mov
or
outsb
pop
fistpl
push
add
or
xchg
sti
inc
mov
stos
push
pop
jle
dec
jne
sbb
lods
cmp
jmp
pop
mov
out
pop
or
dec
add
inc
scas
mov
pop
cmp
mov
xor
fcoml
xchg
scas
cwtl
test
cmp
popa
mov
add
xor
and
data16
orb
and
int3
rol
jns
scas
dec
fadds
xchg
jne
je
call
mov
dec
incl
push
or
sub
lock
jle,pt
xor
mov
cld
jmp
stos
cmp
hlt
mov
push
pop
or
in
adc
loope
inc
fwait
mov
rorl
cli
xchg
inc
jmp
sub
pop
iret
mov
sub
inc
mov
and
xor
push
and
cmp
mov
dec
pop
pusha
ljmp
adc
ds
out
pop
nop
jns
xlat
lret
push
dec
shrl
push
push
mov
incl
lock
jne
andb
adc
mov
push
sub
dec
cmp
push
or
call
call
jl
inc
fnstcw
icebp
cmp
pop
push
jb
call
xor
call
pop
repz
leave
mov
dec
popa
and
decl
lock
mov
pop
sbbl
xor
xchg
ror
adc
out
clc
call
lock
mov
clc
daa
rolb
ja
loope
jns
sbb
call
jmp
jg
clc
aaa
jmp
scas
call
xor
repnz
xchg
incl
loop
xchg
jmp
sub
jbe
xor
sbb
mov
push
lods
mov
lcall
cmpsl
mov
into
inc
les
test
into
xorb
and
cld
daa
ds
scas
and
mov
leave
imul
cmpsb
in
pusha
outsb
jecxz
fisubrl
xor
jg
add
push
fwait
call
pop
push
daa
sahf
scas
jl
sub
mov
out
xor
or
cmp
push
mov
cmpl
loopne
bound
das
out
dec
cmp
loop
push
gs
mov
mov
sub
cmpl
xchg
mov
cld
incl
jle,pn
stos
popa
adc
jle
mov
aad
dec
stos
pop
lock
dec
daa
insb
dec
imul
xor
shll
or
mov
cmp
cmp
jns
aam
out
push
sbb
iret
mov
fs
and
adc
sub
pushl
mov
cmpsl
insb
cld
pushf
pop
dec
cmp
xor
xchg
mov
add
or
nop
cmpsb
lods
cltd
daa
cmp
push
xor
mov
movsb
mov
xor
adc
std
in
jg
ljmp
push
std
or
movsb
mov
pop
mov
shl
pop
cmp
jp
scas
jecxz
scas
lret
push
mov
mov
sub
stos
xchg
xchg
ret
cli
pop
sbb
popa
cs
sbb
xchg
and
sub
xchg
push
mov
xor
mov
sbb
mov
outsl
clc
mov
mov
add
mov
jnp
outsl
add
cmp
jle
rorb
ljmp
data16
pusha
js
sub
jge
stos
inc
test
insl
test
jmp
dec
incl
cld
das
rorb
push
lea
cwtl
outsb
pop
mov
jg
fidivl
mov
sbb
popf
pop
adc
cmp
pushl
mov
in
std
push
dec
sbb
shr
jbe
cmp
sub
push
inc
sbb
ds
mov
lcall
loopne
ret
mov
fldl
jl
xchg
fwait
mov
aad
pop
push
pop
or
loope
out
cmp
lret
ficompl
vpsubusw
jo
scas
clc
call
xchg
mov
sbb
dec
xor
mov
or
mul
cmpsb
popa
decl
xor
dec
inc
xchg
lods
out
jl
mov
adc
push
jp
and
pop
hlt
or
xchg
dec
in
xor
ret
movsl
mov
fwait
cmp
sub
mov
and
and
sar
std
xchg
inc
mov
pop
pop
incb
pop
mov
xor
mov
out
jg
pop
push
subl
mov
jecxz
movsl
stos
sbb
arpl
dec
pop
into
adc
jmp
mov
jo
inc
xor
cmp
aaa
jle
movsb
xchg
iret
ret
cmpsb
adc
call
add
out
and
jmp
ljmp
add
mov
scas
xchg
sbb
mov
sub
xor
add
mov
sbb
call
es
leave
icebp
mov
call
fwait
inc
or
aam
xor
pushl
shll
in
cmp
sbb
shrb
jmp
sbb
inc
daa
cwtl
and
call
leave
sub
cmpsl
cmp
pop
inc
ljmpw
pop
push
mov
jnp
mov
cmc
pushl
sub
cs
aas
push
es
popf
es
mov
lcall
jae
sbb
adc
cmp
pop
popa
fmuls
fdivrl
and
mov
clc
sbb
cltd
add
cmpsb
or
imulb
outsl
leave
popf
jge
hlt
sbb
pop
inc
cltd
pop
icebp
sbb
scas
mov
repz
cmp
rcrb
bound
add
or
or
test
das
sarb
jmp
mov
call
into
sub
mov
ljmp
cli
ja
mov
cmp
es
or
sti
push
pop
int3
adc
and
mov
add
adc
decl
or
add
pop
mov
insb
cs
pop
dec
or
scas
xlat
mov
js
sbb
cmp
dec
pop
lock
mov
adc
rep
decl
jge
mov
push
dec
cs
pushf
mov
test
fadd
jp
ljmp
mov
gs
imul
xchg
rcrb
mov
ret
cmp
cmp
jne
or
out
sahf
push
fildll
push
pop
xchg
sbb
pushl
dec
insl
in
mov
rol
inc
mov
je
and
ljmp
or
call
jecxz
rorl
cmpsb
aam
loopne
sbb
jmp
imul
inc
xor
das
mull
add
sub
pushl
and
lret
in
pushf
mov
in
popa
in
dec
lret
daa
mov
lahf
jmp
pop
jg
iret
test
xor
pop
div
inc
xlat
es
aas
pop
stos
jb
jmp
movsb
loopne
incl
pop
or
mov
push
pop
aas
xchg
xchg
mov
mov
jb
jle
call
mov
fstp
test
pop
call
push
sub
leave
adc
pop
push
incl
xchg
dec
shl
cwtl
cmp
inc
nop
or
and
pop
cmp
stc
push
mov
jnp
mov
imul
movsl
pop
lret
or
pushl
pop
out
dec
jp
xchg
jecxz
negl
xchg
or
into
and
adc
imul
add
or
jb
and
sbb
iret
and
sar
dec
in
xor
inc
mov
and
or
lret
add
xor
push
jns
mov
call
pop
fldl
inc
inc
sbb
int
push
call
sub
mov
mov
outsb
mov
push
inc
pop
mov
movsl
mov
fwait
xor
cmp
out
fcoms
sbb
decl
and
add
test
int
enter
fwait
xchg
inc
jmp
incl
ljmp
roll
in
mov
lcall
cltd
orl
xorl
cmp
sub
lds
shrb
sti
mov
mov
push
jnp
adc
push
outsb
cs
dec
ja
and
cltd
loop
mulb
jb
fldl
mov
add
push
jnp
inc
orl
push
mov
roll
sbb
out
icebp
sub
lock
rclb
sbb
or
mov
ljmp
mov
imul
fwait
cmp
bound
enter
and
ljmp
dec
sub
ror
mov
test
lret
jge
adc
rcrb
or
dec
mov
mov
adc
push
lock
mov
imull
jg
cs
lcall
xchg
dec
movsb
push
insl
jnp
fldt
rolb
hlt
push
mov
ret
std
xchg
mov
inc
loop
das
imul
mov
stos
test
or
or
or
jnp
adc
incl
cmp
pop
testl
mov
call
mov
sarb
xchg
dec
jo
lods
mov
ret
xchg
jmp
cmpsl
jo
pushl
push
push
sub
push
mov
js
gs
xchg
cwtl
and
add
push
jge
ljmp
sar
cmp
push
ret
test
push
ljmp
xor
ljmp
mov
inc
dec
jle
sub
aas
fildll
nop
dec
mov
or
loopne
add
js
sub
incl
cld
add
push
pushf
push
adc
adc
sub
adc
xchg
jle
testl
dec
es
outsl
xor
pushf
mov
xchg
inc
pop
jle
test
sbb
push
jns
fildll
jmp
mov
lret
mov
dec
out
out
jo
in
js
ljmp
xchg
cmc
lea
cld
inc
inc
dec
mov
cmpsb
jns
sub
ljmp
cmpsb
sub
xor
arpl
pop
push
test
mov
cli
insb
outsb
sarb
call
lods
push
push
mov
les
fcomps
shl
test
pushl
sub
adc
mov
lcall
push
mov
sbb
pop
inc
divb
xchg
push
gs
dec
in
pop
aas
xor
decl
loop
mov
ss
adc
sbb
pop
add
cli
std
mov
jbe
xor
xor
inc
pop
clc
test
sub
lahf
sub
pop
add
out
mov
js
psrad
ljmp
clc
bound
cmp
push
xchg
ret
cmp
jbe
add
sarb
gs
jmp
pop
jns
pop
inc
adc
ret
ljmp
orb
cwtl
xchg
cmp
jmp
test
mov
push
hlt
xchg
ss
pop
pop
test
mov
jae
lock
mov
loope
mov
rcrl
xor
aaa
xor
mov
xchg
dec
gs
fistpll
adc
cmp
sub
inc
cmpsl
sarb
add
inc
pop
dec
cld
cmpsb
dec
and
sbb
xor
lahf
loopne
add
adc
push
test
mov
rcr
sub
push
jb
ret
les
out
add
dec
sahf
les
ljmp
cs
add
inc
sbb
lret
mov
dec
mov
pop
fdivr
push
cld
or
xchg
clc
loope
sbb
and
inc
lcall
arpl
mov
stos
sti
jb
sub
push
push
aaa
xor
mov
and
jg
test
inc
das
or
adc
push
aad
and
lds
cmp
outsb
xor
mov
lret
mov
lea
out
adc
scas
mov
das
jl
mov
inc
or
inc
ljmp
sbb
xchg
test
movsb
fnstenv
pushl
jge
aam
ljmp
ret
adc
addr16
sub
jle
sub
pop
out
les
xchg
push
add
jnp
jg
xor
cwtl
pop
add
lcall
test
jg
scas
bound
movsl
incl
stc
call
xchg
xchg
call
cld
pushl
lods
es
cmp
push
movsb
scas
pop
leave
jae
mov
jl
lcall
jbe
xchg
inc
mov
mov
sbb
sub
mov
xchg
imul
std
sbb
lcall
movsb
cmc
outsl
repnz
mov
pop
or
push
sbb
mov
jae
cs
scas
jb
pop
hlt
pop
test
clc
call
and
sub
test
inc
mov
xchg
shlb
lret
sahf
imul
mov
je
inc
lods
ljmp
pop
je
add
incb
cld
lcall
data16
xchg
cmp
push
xlat
inc
sub
xchg
fsts
ljmp
push
add
add
mov
mov
adc
add
call
lret
cltd
or
iret
pop
push
jae
jb
adc
xchg
outsl
sub
popf
jns
pusha
cmp
jg
aas
cld
sub
imul
jne
stc
dec
insl
or
dec
daa
and
mov
lret
nop
addb
jo
clc
repnz
mov
pop
cs
ljmp
xchg
sbb
std
push
adcb
push
mov
dec
pop
rcrb
inc
outsb
fcos
jg
lock
lcall
sub
jge
cmp
cld
decl
aad
out
fwait
sub
rol
mov
loop
jle
out
lods
dec
hlt
aaa
or
leave
repz
mov
mov
add
fdivr
ja
pop
lods
aaa
cmp
pop
jne
scas
sbb
push
xchg
dec
adc
pushl
stos
mov
xchg
lcall
shrb
jnp
xor
sbb
cwtl
decl
movsb
loope
xor
dec
scas
push
and
add
out
and
push
mov
cmp
sub
mov
push
pop
mov
push
dec
rcrl
fldl
shlb
pushl
out
mov
or
test
aad
and
call
ja
out
scas
sbb
push
sbb
mov
stc
imul
rcl
fdivl
and
mov
mov
adc
incl
mov
inc
cwtl
dec
outsb
mov
and
out
inc
jle
adc
pop
xchg
repnz
push
data16
or
inc
rcrb
addr16
xchg
fstps
cmpsb
cld
add
xchg
aaa
data16
mov
test
mov
and
push
xor
sbb
jns
ljmp
sbbl
xchg
mov
out
sahf
addr16
nop
call
adc
xchg
decl
lcall
ja
or
and
sbb
sub
jmp
push
cmp
cmpsl
inc
push
mov
sbb
adc
fcmovne
cmp
push
add
jg
or
hlt
jp
mov
ja
clc
out
xor
test
daa
pop
sbb
or
jne
jg
jg
cld
lcall
fiaddl
add
cmpsl
jl
imul
imul
fneni(8087
incl
xchg
pop
fistps
inc
cmp
es
cmp
mov
fcomip
bound
pusha
call
mov
incl
mov
stos
or
cmp
fdivrs
xor
xchg
mov
jne
cmp
inc
fstpt
cmp
xor
xchg
ljmp
mov
sub
fcom
adc
je
sar
pop
lcall
fnstcw
sbbb
mov
test
nop
or
stc
arpl
cmp
pusha
and
sbb
sub
cltd
pusha
rorl
mov
mov
fs
decl
xchg
jg
loopne
mov
idivl
sti
aam
in
int3
jecxz
xchg
stos
fstp
mov
jg
sbb
sbb
cmc
pushf
or
xor
out
mov
std
clc
jle
cmp
push
leave
and
outsb
shl
inc
std
mov
lods
inc
jae
inc
fisubl
adc
fistpll
xor
cmp
and
outsl
or
fs
lcall
and
cmpsb
and
call
push
das
or
mov
xor
test
je
sbb
in
inc
mov
insb
adc
mov
outsb
je
enter
add
aam
cmp
cs
out
inc
std
mov
in
xchg
sub
xchg
cs
out
fcoms
dec
pop
pop
fildl
test
or
jmp
scas
cmp
xchg
leave
loop
lods
sarl
lods
sbb
mov
xlat
insl
nop
lcall
push
mov
inc
jns,pt
adc
test
jae
jp
lock
test
in
xchg
dec
das
inc
mov
pop
jo
dec
sarb
lcall
xchg
insl
je
sub
call
and
dec
sub
dec
push
clc
test
xchg
lea
jmp
xlat
sbb
push
mov
lcall
jle
lea
or
mov
pushl
pop
nop
dec
jae
fwait
mov
add
adcl
popa
stos
mov
push
mov
jmp
push
mov
cmpsb
ds
aad
mov
mov
xor
mov
mov
insb
aas
lcall
ljmp
dec
lods
push
fistl
jb
stos
lods
push
mov
inc
pop
mov
jne
push
ljmpw
xor
movmskps
jmp
adc
xlat
stc
stos
inc
mov
jmp
rorl
std
shrl
add
cmp
ljmp
xchg
ss
mov
fmull
leave
adc
jbe
loopne
loop
sti
incl
push
in
popf
jb
fcmovnbe
call
nop
mov
mov
lock
jg
mov
sbb
jecxz
imul
inc
sti
out
push
mov
leave
cmp
cli
test
adc
xchg
ljmp
mov
add
out
xlat
sbb
or
push
hlt
out
int
jg
xor
ljmp
pop
mov
enter
les
aaa
cld
mov
sub
or
or
cli
push
adc
jnp
cld
jmp
pop
call
jecxz
xchg
dec
xor
stc
xchg
mov
shlb
in
ljmp
call
sarb
mov
into
jg
mov
and
xchg
in
lret
clc
cwtl
mov
lcall
decl
jbe
scas
jbe
inc
repnz
stc
push
jle
cmp
mov
repnz
arpl
cmp
ret
addr16
jmp
sahf
or
push
mov
push
ret
jg
in
sub
lret
pusha
ja
ljmp
dec
mov
movsl
aam
cltd
int
or
cli
lea
sahf
dec
scas
std
mov
push
sti
mov
or
mov
in
dec
and
enter
cmp
adc
add
fs
lcall
bound
inc
adc
ljmp
xor
or
jmp
decl
shrl
sbb
daa
cmp
or
loope
sub
mov
mov
fwait
dec
dec
arpl
sub
in
pop
adc
jl
jmp
sbb
pushf
xchg
fcomip
lcall
cmp
repz
add
addr16
sub
ljmp
mov
and
gs
outsl
outsb
cmpsl
xor
nop
mov
adc
rclb
mov
push
xlat
jmp
and
jmp
fildll
inc
test
sti
ds
lock
mov
xchg
insb
adc
pop
shlb
sbb
daa
and
das
fucomip
shr
movsb
sbb
xchg
or
jg
cmp
test
push
test
sub
mov
enter
xchg
push
out
cwtl
mov
sti
push
mov
fisubs
fldl
lcall
lds
sub
fcoms
mov
imul
jle
clc
or
test
fisttps
mov
sar
and
cmc
jecxz
stos
std
out
mov
pop
pushf
pop
xor
int
aam
dec
xchg
aas
ss
jnp
outsl
rcl
jmp
aas
lret
pop
lcall
fsubp
add
jnp
das
dec
or
mov
mov
ljmp
cmp
mov
hlt
sub
bound
mov
je
ds
aam
push
xor
pushl
test
lcall
push
cli
test
addl
and
adc
fcomip
pushl
xchg
imul
pop
dec
adc
lret
sbb
xchg
jbe
in
nop
loop
lcall
dec
nop
stos
xchg
add
and
in
idiv
scas
xchg
jae
ret
dec
jp
dec
mov
cmp
mov
xchg
inc
and
xor
mov
movsl
inc
cmp
and
push
hlt
xchg
mov
jno
cld
adc
imul
nop
jg
sub
aam
xchg
inc
aam
add
jp
test
sbb
ljmp
imul
scas
pop
int3
add
and
pusha
sub
aaa
std
pop
and
jl
dec
pop
adc
xchg
add
cld
leave
imull
push
push
mov
pop
fdivl
or
jge
push
xor
xor
enter
outsl
imul
loope
pop
dec
xor
cmp
jo
mov
loopne
mulb
gs
and
jg
ljmp
jns
ret
adc
xchg
mov
cmpsb
push
push
adc
mov
imul
jle
xor
sbb
and
add
shll
adc
mov
stos
ficoms
loope
mov
bound
xchg
data16
adc
lcall
adc
sbb
test
xor
jo
in
test
out
lods
shl
decl
and
jb
push
adc
cmp
sbb
jg
xchg
add
sbb
jp
nop
stos
push
aam
push
pushf
fistps
dec
data16
cmp
fnstcw
adc
dec
mov
fdivr
mov
xor
in
xchg
leave
mov
cld
in
or
lahf
push
or
out
in
fimull
xor
push
outsb
push
mov
int
stos
sub
mov
lcall
loopne
pop
insl
cmp
cld
repz
sub
addr16
ret
shr
add
dec
push
jg
pop
loopne
movsl
fwait
jne
jo
inc
out
nop
ja
call
dec
cmp
adc
push
int
pop
je
sahf
cmp
add
loopne
push
popf
cmp
and
mov
mov
fadd
dec
mov
int3
xor
jmp
repz
dec
add
push
sti
adc
inc
jne
pushf
sbb
push
std
sub
push
test
incl
push
cltd
iret
mov
mov
push
push
mov
scas
cmpsl
add
lret
jg
cmpsl
addr16
adcb
outsb
out
loop
pcmpeqw
mov
and
mov
adc
lock
jb
cmp
clc
int3
out
scas
xchg
jb
mov
into
push
and
scas
push
jne
lahf
addr16
or
push
mov
xor
inc
xor
mov
sub
or
push
cmp
mov
sub
repnz
xor
jg
call
mov
push
mov
lret
popf
push
inc
idiv
add
or
dec
xchg
gs
push
and
xchg
mov
mov
idiv
dec
mov
movsl
sbb
cmpsb
jb
push
js
pop
aas
fwait
andb
lea
lea
sub
dec
ljmp
sbb
lods
in
lods
fs
xorb
sub
ja
and
pushf
adc
frstor
test
adc
pop
xchg
mov
call
mov
imul
add
and
push
push
outsb
int
add
movsl
arpl
loop
decl
call
test
mov
pop
in
leave
mov
ljmp
pop
inc
mov
or
cld
cs
pop
cmp
mov
pop
pusha
out
scas
aad
cmp
pop
add
jmp
icebp
hlt
inc
test
inc
out
fstpl
inc
outsb
sbbl
jmp
inc
rcl
nop
cmp
sahf
mov
jns
idivb
call
int
push
and
inc
sar
decl
scas
not
xorb
lods
fnstsw
or
ds
out
sub
gs
ljmp
jbe
dec
lods
test
pop
aaa
dec
cmpb
jle
cmpsl
cmp
add
pushf
sub
inc
daa
push
inc
incl
jmp
adc
mov
mov
pushf
sub
push
jmp
jbe
arpl
daa
adc
push
inc
mov
push
xor
ss
and
jg
fcoms
gs
mov
mov
mov
pop
cli
or
cmp
add
push
mov
jmp
cmp
fwait
test
mov
pop
jl
out
dec
leave
scas
out
jp
jmp
or
cmpsb
lcall
jne
xchg
repnz
rcll
fldl
cmp
sbb
lcall
jl
xor
outsl
lds
outsl
xchg
xor
cmp
lret
call
int
xor
jg
lcall
cmpsb
ficoml
je
jb
push
cmc
dec
push
pop
ret
pusha
xor
mulb
mov
mov
rcrl
out
outsb
mov
lret
mov
mov
fwait
stc
out
pop
cmp
xor
shrl
stc
mov
test
call
repnz
mov
xor
add
scas
in
jle
xchg
inc
and
mov
call
xor
dec
fsubrl
js
movsb
inc
jge
aam
mov
mov
decl
jb
xor
ljmp
cmp
mov
xor
sbb
pushl
inc
in
cltd
jp
mov
ret
xor
out
test
add
incl
into
andl
jle
mov
xor
dec
mov
jg
ss
lcall
lock
je
bound
add
cmp
push
ss
aam
out
and
mov
pop
or
mov
incl
inc
sbb
data16
mov
add
scas
mov
loope
nop
cmpsl
lcall
jns
jb
fcmovnb
xchg
loope
pop
mov
loopne
sbb
fcomip
pushl
dec
mov
imul
cwtl
dec
xlat
imul
push
push
lcall
incl
or
push
or
imull
inc
pop
inc
jmp
push
sbb
scas
out
mov
dec
ds
lds
outsl
cmpsl
and
cli
ljmp
mov
mov
mov
ljmp
outsl
mov
inc
mov
inc
fs
imul
sbb
pop
cwtl
push
das
cli
ljmp
mov
adcb
jo
call
cmp
in
fsubrl
pop
or
hlt
sti
dec
mov
fwait
orb
addr16
xchg
or
push
push
jmp
mov
xchg
jle
dec
jbe
inc
jmp
imul
iret
lea
dec
call
mov
or
mov
and
ss
xchg
imul
mov
daa
jl
lods
mov
or
cmp
inc
jp
lds
cmp
sub
sub
cli
mov
xchg
fwait
out
stc
push
repnz
aad
push
mov
mov
dec
sub
nop
test
jge
hlt
jg
and
mov
pushl
push
add
mov
test
xor
adc
out
pushl
ds
mov
arpl
out
fadd
out
lcall
mov
xchg
call
inc
sub
aaa
call
test
and
das
pop
mov
inc
loopne
add
sar
jg
mov
lea
jmp
outsl
pop
jb
push
and
cmp
sahf
jg
ljmp
loop
into
movsl
or
out
mov
inc
loopne
push
data16
cmc
lret
jb
adc
push
decl
dec
pop
leave
fcmovnb
adc
xor
mov
push
lahf
roll
ljmp
jmp
cmp
jle
jb
inc
xchg
sbb
pop
js
fadds
lock
test
lods
and
insl
mov
pushl
popf
mov
push
sub
sbb
inc
lods
call
in
pop
xchg
sti
jnp
jle
ror
xchg
pop
arpl
mov
jns
sub
popaw
shrb
push
nop
and
add
mov
dec
dec
aas
inc
xchg
loopne
ja
rcl
fsubl
xchg
or
xchg
mov
inc
lods
rcll
pop
push
inc
jne
add
push
mov
mov
out
mov
adc
call
loopne
jg
and
scas
mov
orl
shlb
aam
mov
incl
adc
push
fwait
popa
adc
ds
enter
adc
and
incl
dec
mov
pop
and
insb
dec
pop
push
push
scas
push
jne
pop
xchg
imul
fwait
jmp
dec
scas
mov
mov
incl
mov
movsl
testb
cmp
add
ja
and
jle
or
mov
cli
jl
add
fldcw
fdivrs
jno
add
xchg
jg
add
subb
jmp
or
icebp
ficompl
rol
push
push
inc
cmc
inc
push
sub
mov
fsin
jmp
or
ret
loope
xchg
movsl
sahf
andl
ds
pop
jnp
insb
icebp
jmp
and
mov
add
jmp
xor
out
xchg
and
clc
jmp
push
xchg
xchg
jne
clc
enter
sbb
popa
bound
mov
enter
push
add
cmp
mov
add
inc
jl
jl
xor
add
scas
ret
dec
inc
push
cmp
jnp
and
push
pushf
popa
inc
xchg
mov
push
ss
pop
push
pop
xchg
sub
sbb
int
mov
push
mov
daa
sbb
pushl
sbb
jae
push
sar
stos
pop
jns
jge
mov
inc
aaa
aas
in
out
call
mov
cwtl
fists
imul
sub
ja
sub
inc
pushl
das
in
jae
fbld
cld
dec
es
int3
sbb
add
and
xchg
xor
aaa
je
cmc
xchg
iret
mov
clc
jb
jle
xchg
imul
out
lock
aam
mov
lcall
push
mov
stos
dec
adc
xlat
pusha
shlb
xor
pop
push
cwtl
out
aam
push
adc
add
push
push
bound
insb
mov
call
jmp
push
dec
repz
mov
or
hlt
xchg
xchg
test
mov
pop
cmpsb
inc
lret
add
jmp
dec
lds
fwait
jg
aad
adc
xlat
push
movsb
cwtl
fstpt
and
or
test
call
pop
xorb
les
mov
movsl
cs
out
mov
pop
mov
lods
xchg
fcompl
fstpt
jmp
mov
jmp
pop
dec
insb
mov
enter
test
sahf
out
out
clc
inc
mov
and
push
sub
insb
orb
decl
xchg
jl
jae
inc
pushf
cmp
mov
ja
push
je
dec
cltd
ljmp
xor
incl
ret
sahf
xor
shr
adc
leave
lcall
adc
aam
test
inc
add
mov
out
imul
jg
in
or
pushl
bts
xor
jnp
mov
add
inc
or
popf
xor
pushl
inc
xchg
pop
jge
fstp
dec
jecxz
pop
js
test
mov
lock
out
inc
xchg
inc
push
icebp
inc
popf
popf
mov
insb
aam
jb
lds
bound
cmp
xor
pop
cld
lcall
mov
add
rcrb
and
incl
sbb
negb
stos
pop
repz
fiaddl
mov
fs
std
call
or
scas
fsubr
jae
pop
cmp
cltd
and
sbb
rorb
inc
nop
or
shlb
lahf
push
xor
push
add
jbe
addr16
dec
int
mov
outsl
imul
jmp
lods
decl
xchg
ret
loopne
cmp
pop
mov
mov
incl
sub
cmpsl
push
daa
or
jns
movsb
dec
mov
insb
jmp
mov
cltd
xchg
xchg
das
lcall
repz
mov
ja
pop
icebp
repz
jmp
fcoml
js
xor
mov
ds
mov
cmp
cmp
or
sub
push
lahf
test
daa
cmpsb
jmp
mov
out
insl
cli
stos
add
or
stos
sub
lods
in
aam
gs
xchg
mov
push
sbb
push
std
jns
nop
out
filds
ret
mov
mov
sbb
pop
inc
mov
add
lock
hlt
lcall
mov
and
mov
add
mov
mov
xchg
fcomps
fsubrs
pop
dec
ljmp
xchg
inc
and
fistl
add
push
lret
and
jbe
in
aaa
cld
dec
fneni(8087
cmp
gs
movsl
cs
or
mov
or
push
ljmp
inc
out
popl
fmull
imul
cli
cmpsl
cmpsl
scas
adc
imul
je
aad
pop
cmp
out
push
push
pop
je,pn
gs
xor
sarl
arpl
fcmovnb
dec
cmp
rcrb
sub
outsb
xchg
jnp
outsb
or
aad
lcall
subl
jg
rcrl
call
jp
adc
cltd
js
int3
mov
std
sbb
dec
sarl
jmp
mov
test
mov
xor
cwtl
xchg
andl
mov
ljmp
push
pop
out
cld
inc
hlt
lods
jp
sbb
popf
and
or
cmp
out
nop
imul
stc
mov
call
or
mov
sti
cld
sbb
cmp
push
ds
out
clc
jmp
mov
dec
out
dec
xor
xchg
rclb
rcrb
xor
clc
mov
stc
outsb
pushf
ljmp
je
bound
push
ds
pop
loop
jg
add
lcall
pop
popw
pop
nop
jns
cmpsl
loopne
mov
hlt
adc
cmp
pop
in
loop
mov
subb
call
ret
pop
int
ja
subl
pop
sbb
out
add
cs
dec
and
push
outsb
push
dec
or
xor
dec
mov
pusha
call
std
dec
dec
pop
mov
add
jp
dec
icebp
add
in
test
movsl
xor
lcall
lcall
dec
loopne
cmp
cmp
fmuls
push
test
jns
ja
pop
jmp
sarl
pushf
jge
data16
ljmp
xor
arpl
adcl
sbb
jg
call
and
jge
int3
imul
decb
adc
inc
cmp
decl
xchg
xchg
mov
dec
sbb
cld
dec
mov
sarl
shll
dec
jg
movsl
mov
out
pushf
pop
pop
adcb
sti
xlat
cmp
jmp
mov
shrb
xor
test
mov
leave
sub
xchg
xor
stc
into
rcll
insl
add
call
bound
xor
inc
push
popa
rcll
jns
inc
subl
inc
xor
add
test
cmpsl
aad
xor
cwtl
xor
dec
int
add
cmp
addr16
out
ss
sarb
sar
mov
add
or
sbb
ds
pushl
imul
adc
ljmp
dec
bsf
mov
pushl
add
push
or
lret
sub
mov
aaa
test
fistps
fadds
sub
cmpsl
and
or
push
je
fs
mov
mov
in
pushf
in
lret
decl
cmpsl
pop
in
and
dec
mov
xchg
or
movsl
inc
inc
add
daa
xchg
daa
pop
fsub
jnp
push
inc
ja
incl
cmp
daa
js
jle
and
cmpsl
lock
scas
xor
push
outsl
loope
outsb
repz
adc
inc
lea
into
jmp
mov
jmp
jmp
or
inc
mov
sub
fsubrl
jecxz
lods
test
adc
sbb
test
mov
push
push
test
pushl
incl
test
jno
sub
mov
cmp
movsl
hlt
aad
mov
dec
fwait
mov
das
cmp
xchg
decl
cmc
stc
repz
movups
cmp
pushf
cmp
into
les
mov
xor
jae
imul
jnp
add
pushl
shlb
jle
mov
adc
call
sbbl
xchg
jnp
adc
pop
in
add
lods
pushl
xor
xor
sti
pop
mov
jbe
decl
jg
ret
fisttpll
cld
int
sahf
sahf
push
fisubrs
insb
push
in
lret
cmc
clc
and
add
fsubrs
call
cld
pop
push
and
insb
jge
inc
les
loope
ss
bound
out
jle
imul
int
clc
addr16
xchg
insl
lret
movsb
sbb
xor
pusha
in
gs
sub
data16
bsr
adc
decl
or
data16
xor
pusha
inc
inc
outsb
fdivl
in
pop
xchg
jmp
xchg
sti
out
and
pop
daa
notl
mov
push
mov
insb
ljmp
inc
addb
stos
xchg
mov
mov
inc
mov
lahf
cld
pop
jp
and
decl
and
lcall
insb
lahf
ja
push
mov
mov
stos
inc
push
outsl
jo
xchg
pop
mov
xor
pop
loope
push
stos
pop
mov
insb
gs
xor
or
dec
ss
adc
jle
mov
mov
dec
daa
ja
sbb
add
sbb
into
in
jg
push
std
push
fidivs
icebp
inc
pushl
adc
stc
xchg
or
clc
pushl
sbb
in
mov
push
aam
call
call
idivb
icebp
repz
pop
cli
icebp
jnp
jns
xchg
aad
mov
jg
inc
sub
push
sub
jae
dec
sub
xchg
bound
cli
insb
aad
loopne
jno
xlat
arpl
shll
pushl
loop
testb
add
aam
jge
stos
jbe
enter
pushl
ja
cmpsb
xchg
pop
ficomps
outsl
cltd
push
dec
cmpsb
add
jl
or
dec
xchg
out
cmpsb
jmp
scas
and
lret
and
ljmp
jmp
clc
jmp
xchg
loopne
data16
mov
mov
js
movsl
mov
lahf
sbbb
int
add
or
adc
das
mov
cld
xor
mov
inc
cmp
or
lcall
push
loope
cmpsl
aas
push
add
jns
dec
iret
icebp
xchg
jge
repz
lods
insl
mov
pop
loop
ljmp
push
cmp
add
iret
lds
inc
xchg
mov
into
cwtl
pop
dec
sbb
sub
idiv
inc
mov
sub
repnz
jne
mov
cmp
out
jb
jp
xchg
jbe
adc
ds
mov
pop
stos
add
inc
xor
jnp
shll
jge
lret
xchg
inc
or
pop
jg
jnp
call
xor
pop
repz
aad
cld
adcb
out
dec
jnp
fstps
int
incl
arpl
out
mov
lahf
jno
xchg
lret
gs
pop
loop
mov
inc
lds
loopne
and
push
or
mov
lcall
loop
cmp
push
ds
scas
mov
xchg
or
ljmp
into
or
rcr
push
rolb
lahf
lahf
lret
sub
inc
test
inc
scas
cmp
pushl
cmp
fld
pusha
shrb
cmp
lret
int
pop
andl
pop
lock
ss
dec
adc
xchg
mov
and
xchg
cmp
ljmp
xchg
jo
xchg
pusha
mov
xchg
mov
stos
dec
ficomps
inc
mov
jecxz
and
fnsave
nop
sub
ret
sahf
aaa
call
ljmp
nop
inc
and
stc
sub
cmpsl
add
sub
adc
sub
cli
std
in
push
mov
sub
fwait
jmp
mov
fmuls
or
rclb
lahf
fisttps
movsl
add
xor
lret
lcall
aam
adc
xorl
movsl
and
cmp
cmp
sar
imul
or
mov
pop
push
sti
sub
xchg
aad
mulb
xlat
shlb
dec
cld
fldl
pop
pop
sub
xchg
mov
mov
or
cmp
ljmp
lret
xchg
mov
push
cmpsl
or
and
mov
loope
fs
decl
and
stc
and
lea
jmp
stc
lcall
ljmp
lcall
sbb
pop
sbb
test
lods
je
xor
ret
jno
push
or
insb
ret
jmp
cmp
mov
xor
jbe
xor
popf
imulb
push
je
jg
or
push
movsb
sub
pop
in
adc
daa
repnz
shll
pop
lahf
das
cwtl
fbld
inc
push
mov
scas
cld
bound
sub
cli
mov
fdivrl
sbb
popf
test
pop
pop
and
ljmp
jae
pop
in
imul
outsb
jne
ja
inc
sbb
add
pushf
xor
lcall
inc
mov
sarl
push
mov
push
sbb
jle
xchg
or
and
in
outsl
cli
decl
out
and
incl
bound
enter
pushl
mov
les
mov
je
push
cli
sbb
or
jg
dec
nop
das
xor
ljmp
aas
aam
ret
xor
popa
mov
repnz
mov
dec
jecxz
scas
cmp
xchg
lock
dec
sub
pushl
mov
shrl
push
xor
jp
sub
mov
and
int
xchg
incl
add
jmp
push
lahf
jbe
test
mov
dec
xchg
jge
and
sar
call
fwait
and
mov
inc
sbb
mov
inc
js
inc
leave
and
or
inc
inc
lcall
inc
test
pop
or
negl
call
movsb
jb
cld
xchg
xor
mov
adc
call
xchg
inc
add
insb
sub
aas
sar
repz
pop
gs
mov
js
sub
and
les
ljmp
jae
inc
js
dec
jg
xchg
mov
test
xor
adc
inc
ss
ljmp
dec
inc
loope
lock
outsb
and
xchg
jo
pop
lods
enter
jp
out
clc
aam
mov
call
std
adc
push
cmp
add
mov
pop
mov
iret
fcos
mov
mov
cwtl
out
push
data16
push
mov
inc
lret
mov
lret
sub
mov
mov
add
and
xchg
jle
xorb
incl
xchg
mov
mov
and
dec
imul
cmc
and
out
jns
push
dec
icebp
mov
call
pop
les
push
xchg
ds
and
jmp
xchg
pop
cwtl
push
xorb
int3
and
mov
mov
jnp
jbe,pn
jae
jmp
enter
adc
in
cli
insl
mov
in
and
and
or
shll
push
ljmp
or
jns,pt
inc
in
in
pop
cwtl
cmpl
push
adc
dec
cwtl
mov
not
or
jmp
xchg
iret
push
cwtl
xor
xchg
and
fcomps
and
add
mov
jge
push
fadd
imul
ja
sub
addb
mov
lahf
test
jg
add
add
cmp
or
int3
in
loope
mov
xchg
ljmp
mov
push
inc
clc
cmpsl
out
hlt
sbb
xor
add
sub
je
pop
mov
pop
mov
and
jno
cld
loop
mov
pop
lock
jmp
sbb
inc
jnp
nop
mov
cli
sub
ret
sbb
test
incl
inc
cwtl
fs
adc
test
iret
loope
sbb
pop
cmp
jle
jg
mov
shll
sub
dec
xchg
sti
dec
fcoml
movsb
inc
push
or
mov
enter
in
mov
cld
xchg
jno
xlat
ds
cld
jmp
loopne
sbb
cmc
mov
clc
cmc
lahf
insl
push
xchg
cmp
sbb
or
jecxz
pushl
mov
pop
je
ja
mov
fldenv
in
jmp
mov
xchg
lods
ja
call
call
call
call
nop
mov
sarb
adc
nop
mov
pop
pop
cmpsl
nop
pop
fst
mov
dec
repz
bound
scas
je
dec
add
mov
dec
push
mov
pushl
sbb
xchg
outsb
sbb
or
pop
or
imul
ja
dec
and
add
and
jge
jno
rorl
sbb
jmp
mov
filds
jns
inc
cmp
lahf
adc
push
lret
shlb
dec
outsl
std
pushf
out
jmp
pushl
mov
std
clc
push
cmp
pop
loope
aad
in
dec
arpl
call
stc
lahf
push
xchg
cmp
adc
push
cli
scas
add
jmp
mov
push
jmp
or
mov
adc
stc
push
inc
leave
icebp
xchg
mov
ret
in
decl
cmpsl
pop
mulb
jge
xchg
rcll
or
sub
ja
xor
ljmp
js
lcall
testl
aaa
cmp
gs
sar
arpl
iret
in
jbe
ljmp
pop
pop
es
pop
lahf
pop
in
out
mov
push
xchg
pop
arpl
mov
ret
mov
or
cmp
sub
das
jg
jmp
and
jmp
mov
mov
jp
out
les
repnz
call
flds
jg
es
pop
push
shll
mov
fisubs
fs
cmp
dec
adc
mov
pushl
mov
jecxz
in
lods
push
cmp
insl
cmp
aam
movsl
pop
js
sub
jmp
cmp
cmp
cmp
add
sahf
ds
sbb
add
jg
incl
sti
inc
ret
mov
sbb
js
inc
jl
fadd
rorl
ljmp
inc
push
test
or
mov
ss
and
sti
inc
add
ror
push
cmc
fildll
mov
test
mov
dec
mov
fsubs
jne,pn
sbb
mov
mov
xchg
fdivrs
mov
mov
push
stos
ficomps
mov
inc
cmp
xchg
std
mov
inc
push
xchg
add
movsl
stos
jno
inc
inc
lret
in
pop
icebp
ljmp
cmpl
mov
jne
std
pop
mov
cli
ds
jmp
int3
decl
mov
cmpl
mov
push
pusha
iret
subb
pushl
jp
mov
fdivp
fcoms
shlb
adcl
hlt
mov
xor
mov
mov
mov
call
outsl
mov
and
pop
ja
cmp
leave
add
ds
jge
aas
lahf
sbb
inc
mov
in
stc
pop
jbe
mov
out
rcrb
int3
outsl
loop
mov
adc
ljmp
test
es
inc
or
das
mov
mov
aas
fwait
sbb
arpl
not
push
into
and
pusha
push
push
xor
cs
sub
loopne
outsb
jmp
mov
sub
mov
add
hlt
jg
incb
mov
xlat
cmp
ficoml
ds
lock
jg
sti
sub
repnz
push
mov
cmp
inc
and
push
mov
je
dec
andb
mov
inc
pmullw
rcr
add
mov
popa
mov
fucomi
popa
jge
sub
icebp
or
and
repnz
xchg
xchg
mov
xchg
cmp
shlb
call
popa
xchg
shl
ss
dec
jbe
fs
lods
rcl
mov
movsb
shrb
fwait
dec
dec
fistps
inc
and
and
ret
or
inc
in
paddd
movsl
xchg
imul
lret
dec
in
jmp
xchg
jp
sub
lods
or
into
jl
or
xor
push
xor
clc
jmp
jp
inc
imul
aad
push
dec
xchg
cmc
jg
adc
xchg
inc
sti
out
mov
lret
mov
cmp
das
sbb
mov
or
mov
outsl
fstps
cmp
inc
loopne
lock
sbb
pushl
in
es
jecxz
or
mov
int
or
bnd
call
mov
fldl
sarb
mov
insl
cs
mov
enter
push
jbe
mov
dec
mov
jge
divl
and
or
cwtl
nop
rcrb
and
xor
pop
sar
pop
ljmp
pusha
imul
cli
pop
call
push
call
inc
sbb
call
mov
push
mov
sbb
inc
rclb
dec
call
rcrl
xor
mov
mov
gs
aad
and
jmp
call
ja
add
push
or
push
fsub
jecxz
sbb
in
sub
fisubl
aad
ret
ljmp
cmc
jno
mov
orl
add
fmul
or
in
ja
sar
jbe
cmp
push
mov
xchg
dec
adc
dec
mov
mov
outsb
insb
mov
mov
fistpll
push
pop
fs
incl
dec
movsl
sub
jmp
dec
lcall
js
adc
adcl
incl
pop
mov
mov
push
clc
test
aas
and
decl
or
dec
pusha
cmpsb
shlb
hlt
or
cmp
cld
jg
mov
addl
sbb
ds
lcall
fdivrl
ret
insb
insl
pop
cmc
faddl
xor
push
jg
lcall
and
sbb
ss
jbe
subb
jno
xchg
test
sbb
xlat
repnz
pop
and
incl
lods
cld
sbb
test
fs
push
cltd
or
inc
gs
ljmp
sub
xchg
adc
mov
jo
jae
sarl
aas
adc
sbb
cmp
adc
ljmp
pop
fbstp
sub
out
mov
fwait
in
scas
minps
cmp
mov
sbb
ljmp
test
loopne
std
cli
movsl
es
mov
jbe
fiaddl
mov
sbb
insl
jmp
in
xchg
iret
jnp
sub
insb
adc
push
bound
lcall
lcall
dec
adc
and
mov
mov
inc
test
adc
mov
push
filds
cmp
xor
ljmp
shlb
push
je
inc
das
and
lods
add
cmp
ret
aam
dec
xchg
fwait
xchg
lods
call
bound
mov
cs
iret
xchg
mov
sbb
jg
int
pop
and
sbb
xchg
pop
sub
rcrl
sub
data16
das
sbb
or
icebp
pushl
push
je
mov
xchg
jns
adc
lret
fdivrs
std
adc
jecxz
call
pop
adc
inc
aaa
xchg
sti
sub
mov
pushf
add
jmp
mov
cmpsb
call
fcomps
dec
mov
mov
rcrb
cmpsl
mov
lods
jmp
call
inc
cmp
mov
sbbl
fnstenv
call
sbb
sub
pop
lock
mov
loop
xchg
rclb
push
cs
hlt
rcrb
sub
rorb
and
ljmp
add
in
mov
push
mov
and
pop
iret
jae
test
jmp
xor
xor
sub
pop
or
or
sub
aaa
scas
in
add
mov
lods
jg
mov
add
aas
leave
loopne
mov
fcompl
subb
lods
in
mov
inc
lock
and
call
ljmp
cmp
sbb
sub
stc
mov
scas
clc
jmp
fwait
ja
cmp
cmp
mov
add
jae
mov
addr16
imul
inc
pop
cmp
adc
popf
addl
lahf
aaa
push
fcompl
call
push
push
xchg
add
jb
inc
push
dec
xchg
xchg
dec
iret
xor
sbb
icebp
sbb
jl
shrb
out
clc
or
adc
in
fidivrs
mov
dec
lock
call
jno
fwait
and
mov
or
inc
mov
shrb
iret
xchg
repnz
and
les
int
push
nop
mov
sbb
pop
leave
cmc
in
pop
xchg
jmp
mov
int
mov
xchg
imul
aam
in
and
lock
adc
dec
incl
dec
lds
mov
das
rclb
cmp
fidivrl
dec
iret
lock
push
stos
je
mov
stos
dec
add
sub
sub
pushf
enter
cmpsb
or
pop
push
jne
dec
dec
dec
std
jne
mov
xchg
jmp
cmc
pop
mov
mov
pusha
cs
sbb
sbb
loop
je
imul
mov
or
ljmp
ja
sbb
das
rolb
push
ljmp
xlat
aas
jne
inc
or
xchg
lcall
xchg
cmpb
and
call
mov
pop
mov
imul
mov
jge
sahf
pusha
jo
or
movsl
lahf
xor
lcall
and
ds
xchg
xchg
out
push
push
mov
mov
daa
rolb
fs
ljmp
clc
nop
adc
mov
add
mov
repz
sahf
and
pushl
pop
test
xchg
mov
cltd
movsb
call
add
jns
or
mov
pop
ljmp
les
dec
mov
mov
xchg
pop
gs
call
imul
mov
mov
pop
inc
xor
adc
mov
movsl
sub
inc
outsl
inc
mov
adc
insl
subl
ficomps
push
mov
outsl
ds
or
ljmp
xor
lock
out
andl
and
lea
cmc
hlt
out
dec
js
les
lcall
insl
clc
or
jno
add
jae
xor
pop
sbb
das
addb
inc
stos
sbb
mov
pushf
mov
mov
cltd
add
outsl
xorb
fnstcw
xor
notb
popa
in
mov
iret
jo
sahf
repnz
call
sub
or
inc
outsb
sub
mov
fwait
movsl
lcall
sub
jb
mov
lock
push
aaa
and
lcall
push
adc
bound
inc
call
sahf
jae
repnz
js
push
push
call
lea
or
stos
mov
call
aas
and
lds
xlat
and
incl
scas
dec
test
sub
mov
pop
lock
ret
ret
shrb
mov
lret
call
pop
or
pop
mov
stos
cmp
mov
decb
pop
xchg
cmpsb
mov
and
ss
jo
add
dec
insl
sub
adc
mov
sarl
sbb
or
incl
mov
call
das
sbb
call
jl
bound
cmpl
lcall
xlat
sarb
dec
pop
adc
int
bound
add
inc
pop
mov
mov
ds
push
ss
popa
mov
jno
mov
inc
adc
adc
ret
fldl
push
xchg
adc
decl
cmp
push
add
sti
mov
insl
inc
push
sbb
xor
pop
fcmovnb
outsl
fstl
xchg
pop
ffree
call
mov
ret
pop
data16
push
std
inc
stc
lcall
adc
fstpl
fs
or
fstl
mov
arpl
sbb
daa
in
cmp
and
daa
mov
repnz
mov
pop
mov
mov
leave
popf
sahf
out
lods
incl
adc
pop
xor
pop
icebp
ret
and
pushf
aaa
in
decl
shlb
enter
out
es
sbb
sub
stos
in
cmp
add
repnz
shr
iret
clc
out
xor
icebp
stos
fs
insl
add
xchg
adc
pop
mov
fimull
dec
push
xchg
sbb
sbb
dec
xor
in
incl
sbb
bound
dec
cmc
aam
icebp
mov
dec
push
hlt
pmulhuw
mov
or
pop
pop
clc
push
xor
adc
pop
mov
fcmovnb
mov
std
pusha
mov
test
cwtl
in
xchg
rorb
mov
repz
xor
test
incl
std
push
cmpsb
mov
je
cli
push
mov
push
mov
or
inc
sub
imulb
sub
mov
fsubr
popl
fstpl
call
pop
fiaddl
movsl
movsb
pop
pop
or
mov
add
iret
inc
push
pop
pushl
or
jp
int
push
loopne
mov
lods
mov
data16
add
imul
mov
xchg
dec
push
xchg
lea
dec
jo
pop
stos
mov
call
cmpsb
mov
or
stos
cmp
sub
jnp
cli
inc
push
cmp
jae
cmp
sbb
cs
das
mov
xor
fwait
bound
daa
mov
jecxz
xor
xor
dec
orb
mov
pushf
mov
lret
sbb
sarl
cmpsl
mov
fwait
rep
jge
pop
xor
addr16
sbb
in
fcmovnbe
lret
pop
dec
sbb
outsl
cli
mov
inc
out
xchg
push
push
pop
sbb
mov
inc
inc
imul
mov
dec
data16
sti
jno
mov
out
xchg
scas
fsubrl
xchg
xor
inc
pminsw
incl
jg
dec
sub
xchg
jbe
cmp
xchg
mov
xchg
addr16
mov
cmpsb
ja
dec
and
jo
enter
pop
fbld
cmp
push
mov
pop
jg
sub
iret
out
pusha
push
sti
push
testl
test
fcomip
cli
aaa
dec
mov
outsl
cmp
jecxz
repz
fwait
je
outsb
arpl
jmp
pop
push
dec
stos
mov
push
test
cmpsl
mov
fcomip
iret
aaa
fmuls
mov
lods
mov
loopne
push
icebp
push
mov
test
add
call
sarl
loop
inc
cmpsb
add
and
fmuls
call
into
pushf
sbb
ret
pop
mov
jnp
cmpsl
jge
ds
and
sub
mov
out
push
in
xlat
and
call
xchg
jl
xor
add
push
mov
mov
pushl
lret
push
movsb
nop
mov
push
jg
push
cs
and
jge
cmc
and
cltd
hlt
dec
incl
jnp
xor
inc
mov
lock
sub
and
mov
mov
call
dec
add
xlat
sub
das
pushf
inc
loopne
sbb
lret
add
int3
scas
and
incl
stos
ret
cmp
dec
stos
and
push
outsb
sbb
cltd
data16
inc
inc
cmc
adc
jmp
mov
aaa
int3
mov
dec
dec
dec
ret
sahf
mov
repz
mov
shl
pop
mov
dec
mov
cmpsb
into
popa
lcall
enter
sbb
decl
jle
xchg
add
sub
neg
subb
imull
jmp
int3
iret
pop
lret
andb
lods
test
inc
outsl
mov
dec
addb
inc
xor
mov
ljmp
jbe
out
jne
cld
and
adc
out
or
xchg
or
xchg
popf
rol
xchg
pop
cltd
mov
mov
pop
stos
ds
hlt
out
pop
add
jle
cltd
jns
dec
mov
sub
xor
test
in
xor
fs
fsubl
xor
xchg
push
mov
and
out
push
cld
dec
cmp
xor
xor
mov
shll
rcrb
decl
add
out
sti
add
xor
lds
lret
inc
stos
lods
and
jp
mov
and
pushl
mov
xor
lods
andl
lds
push
mov
incl
mov
movsb
jle
mov
mov
cmp
dec
dec
xchg
mov
ljmp
xlat
sbbl
xchg
idiv
movsb
or
cmp
insl
xlat
adc
ljmp
enter
jmp
movsb
leave
mov
cmp
pop
jbe
push
push
push
pop
repnz
jle
jmp
or
mov
fdivrl
movsb
mov
and
jecxz
pop
mov
lods
lahf
imul
repz
call
cmpsb
insl
pop
add
int3
push
or
negb
push
rcrb
lcall
decl
jnp
pop
xor
ja
push
pusha
hlt
std
jo
lods
loop
stos
rcrl
test
sub
lcall
incl
mov
loopne
push
mov
out
xchg
bound
mov
call
lret
dec
inc
scas
ret
pop
jl
sub
xor
pop
xlat
mov
test
adc
cmp
shrl
call
and
xchg
shrl
jb
int3
pop
push
add
fsts
int3
pop
ljmp
pop
lods
pop
movsb
mov
rorl
jge
or
mov
xchg
cs
mov
or
scas
add
ljmp
movsb
ljmp
or
fldenv
jp
pop
xor
xor
fildll
stos
test
push
jge
lds
push
into
and
out
sbb
or
out
not
dec
mov
mov
lods
gs
sbb
movsl
out
pop
push
or
cltd
pop
out
stos
adc
dec
mul
mov
test
push
aam
mov
add
popa
jmp
xchg
movsb
sbb
sub
ds
arpl
sbb
lahf
mov
push
fsubrp
xorb
or
aaa
inc
cmp
into
testl
and
bnd
call
test
mov
xchg
sbb
cmpl
jmp
mov
rcr
cmp
mov
stc
fstp
xchg
ss
lcall
cld
or
roll
ss
fdivl
or
xchg
and
pushl
cld
or
shl
mov
adc
ds
lahf
data16
pusha
pusha
cli
and
ljmp
mov
xchg
mov
adc
mov
popf
sub
lods
sti
mov
call
inc
stos
mov
sbbl
mov
dec
arpl
add
call
loopne
push
mov
mov
cmp
cmpsb
lcall
and
jge
jae
mov
decl
fs
jle
mov
dec
jg
mov
ljmp
adcl
incl
pushf
stos
mov
adc
sbbb
dec
imul
mov
das
jb
incl
sbb
mov
jnp
jmp
cmp
cmpsl
rorb
inc
es
mov
jg
fcos
jmp
js
mov
pop
and
call
nop
ret
adc
call
rcl
xchg
mov
mov
xchg
dec
outsl
pop
mov
test
jbe
daa
into
cmp
in
outsb
ljmp
call
test
sub
insl
int3
shrl
popf
aam
mov
dec
mov
push
cmp
lods
movl
xchg
pop
add
mov
clc
jg
mov
jl
scas
dec
push
xchg
mov
pop
mov
addr16
into
stos
mov
pop
jb
ljmp
fiaddl
stc
inc
iret
lock
lcall
jne
iret
jg
mov
nop
sahf
bsr
mov
out
cli
fildll
lods
or
movsl
lcall
pop
add
mov
sbb
fsub
mov
jge
ja
add
aam
ljmp
bound
fcompl
pop
mov
or
mov
pop
in
sub
mov
xlat
sti
mov
jne
push
mov
fbld
sbb
mov
rcll
jp
std
jg
sti
cmp
mov
or
ficoml
mov
cmp
addl
outsb
out
ja
out
out
lods
sub
cwtl
mov
add
sbb
cmp
jmp
addr16
lds
add
sti
jne
cmp
push
pop
lea
xor
and
dec
scas
in
dec
cli
mov
adcl
and
pop
in
xchg
insb
in
mov
or
call
call
push
scas
xchg
jns
mov
push
jbe
fistpl
lahf
jns
sbb
mov
adc
fsubr
lods
jl
mov
lcall
adc
push
push
jge
and
mov
xor
mov
sbb
daa
mov
jne
mov
dec
pop
add
add
and
data16
mov
mov
int3
add
roll
jae
xchg
ljmp
push
stc
and
mov
jg
outsb
loop
xchg
adc
jae
sub
or
cmpsb
scas
loopne
dec
ret
cmp
push
or
push
xor
adc
cmp
data16
jl
in
inc
nop
cmp
fisubs
cs
rol
or
call
pusha
ret
jge
pop
inc
push
in
les
mov
lods
cmpsl
mov
data16
jmp
fsubrl
das
push
push
movsb
int3
and
jmp
cld
jns
or
fs
jmp
call
push
outsl
insl
or
popa
xchg
es
repz
mov
cmp
das
mov
in
pop
outsl
arpl
movsl
xchg
jbe
incl
jmp
scas
mov
cmp
and
insb
fstl
pop
repnz
xchg
mov
iret
insl
xchg
ds
ret
clc
jl
int
int3
cmp
in
mov
xor
or
inc
pusha
jnp
test
lret
ret
mov
add
iret
cltd
inc
stos
fistpll
inc
dec
and
pop
lcall
pop
out
mov
out
in
sahf
ds
loopne
jne
idivl
push
inc
and
cld
cmp
lock
icebp
call
sbb
xchg
movsl
pop
sub
shrl
mov
cmp
call
cmp
mov
loopne
mov
xor
les
xor
pop
sti
cmp
int3
jge
test
decl
add
jge
cs
test
cli
xor
adc
mov
jne
setl
cli
enter
jnp
imul
test
jno
loopne
ljmp
int3
mov
push
das
sub
arpl
cwtl
sub
and
cmp
xchg
in
pop
sub
xchg
or
gs
push
inc
stos
out
fmul
lds
fstpt
ljmp
push
mov
inc
loop
rcl
adc
mov
movsl
popa
xchg
lcall
test
sbb
fnstcw
jo
sahf
pop
dec
sbb
icebp
les
xor
ljmp
inc
nop
mov
pop
lcall
cmp
andb
jecxz
test
sub
roll
ljmp
jbe
out
jno
js
daa
adc
das
fisttpll
adc
mov
adc
pushf
push
lock
jmp
das
lret
add
push
adc
adc
push
out
adc
dec
mov
and
pop
outsb
clc
dec
jp
call
xlat
je
imul
mov
fisubrl
fdivrs
sbb
call
sub
add
xor
lcall
and
sub
stos
sub
mov
jmp
push
rolb
ret
add
sbb
cld
or
in
popf
pop
clc
xor
and
in
call
pop
and
mov
xor
adc
jle
adc
aaa
or
cmp
shll
pop
push
insl
mov
mov
rcrb
xor
add
mov
xor
dec
xor
add
jg
not
push
push
iret
cmp
mov
jg
aas
lahf
lcall
mov
bound
cmp
std
addr16
mov
adc
jmp
add
xor
movsb
push
dec
sub
mov
stc
mov
mov
das
cli
jmp
pop
enter
rcl
or
jno
cmp
pop
das
sub
jmp
imul
and
cmp
xchg
mov
jnp
add
std
add
pop
clc
loopne
out
incl
and
out
pop
pop
das
mov
mov
xchg
cld
call
mov
jl
lock
add
jmp
dec
cmp
dec
mov
ja
aas
cmp
dec
outsl
jp
sbb
mov
jb
mov
das
pop
add
xor
out
insb
push
enter
decl
stos
xor
decl
inc
jmp
stos
rclb
or
call
jmp
flds
jmp
out
call
lea
inc
stc
push
mov
ljmp
das
add
addr16
fwait
mov
push
push
dec
fsubs
aam
push
fbld
inc
dec
les
mov
lcall
aaa
pop
or
jl
sub
addb
add
sbb
outsb
and
sub
jae
jno
test
ljmp
outsb
push
mov
cmc
icebp
xor
jnp
pop
rcrl
jmp
adc
lock
insl
cmp
mov
dec
cwtl
aad
test
push
orb
js
pop
mov
or
les
mov
xorb
rorb
lcall
loopne
cmp
fucom
fnstsw
lea
int3
aam
or
movsb
push
pop
add
incl
pushf
jmp
mov
shlb
sub
sub
fists
movhps
lahf
fsubl
rcr
leave
mov
xchg
dec
ds
ljmp
fisttps
mov
pop
cmpsb
jae
negl
jge
arpl
xchg
cmpsl
iret
fists
ror
leave
fdivs
or
movsl
out
pusha
fnstenv
lds
mov
jmp
pop
push
sbb
sub
lods
ss
and
cmp
push
js
xchg
icebp
filds
mov
sahf
push
ds
sarb
inc
add
jbe
lods
in
arpl
daa
fdivrp
decl
xchg
push
push
xlat
outsb
pusha
out
sahf
lret
xor
addr16
loop
ljmp
jmp
jmp
inc
pop
cs
push
stos
cmpsl
sarl
sbb
inc
jae
lret
or
xor
dec
out
cli
jg
in
push
pop
cmp
mov
je
sbb
mov
cld
mov
add
xchg
pop
mov
incl
cmpl
xchg
dec
dec
arpl
pop
aaa
mov
adc
and
sub
mov
xchg
push
jne
scas
incl
mulb
adc
or
pop
fmuls
stos
call
clc
pop
push
dec
push
xchg
ja
lcall
pop
ret
lock
mov
sub
sar
add
pushf
fldcw
jae
xchg
mov
setnp
push
add
cmp
cmpsl
incb
je
adc
std
ds
jg
mov
mov
pop
repz
outsl
rol
inc
clc
inc
dec
xchg
mov
inc
sarl
scas
shl
mov
leave
inc
mov
arpl
aaa
test
mov
adc
mov
scas
inc
scas
inc
xor
jnp
xchg
xor
cmp
incl
std
aas
cld
decb
cmp
push
inc
xchg
das
and
pop
jmp
aaa
leave
clc
jbe
adc
cmc
xchg
daa
mulb
cld
jmp
dec
aas
hlt
imul
mov
push
cmp
fsub
in
mov
rol
call
sub
idivb
mov
test
iret
or
cmp
pop
lock
fbstp
dec
dec
mov
jmp
cld
out
mov
notl
mov
mov
mov
sub
cmc
fidivrs
add
inc
adc
and
pushf
jns
adc
cmp
push
mov
stos
out
sub
insl
mov
lret
sub
lods
mov
push
mov
test
push
dec
push
pusha
aas
mov
sub
lret
jp
sub
lahf
das
les
lea
mov
out
lcall
push
sarl
inc
or
addl
loope
add
jbe
lret
pop
pushl
test
pop
les
push
or
into
adc
sbb
and
mul
notl
and
incl
ss
jl
or
and
and
cld
lcall
cld
popa
loopne
mov
dec
push
pop
jg
call
mov
inc
sbb
scas
xchg
test
rolb
rorl
adc
incl
push
mov
jne
and
outsb
mov
sbb
roll
out
je
cwtl
push
xchg
repz
jmp
sbb
out
shll
and
stc
movsb
sbbb
out
and
arpl
xor
jb
fbld
popf
shlb
pop
mov
mov
jns
jg
lcall
addr16
hlt
mov
inc
popa
push
xchg
arpl
xchg
add
stos
sub
decl
dec
sarl
pop
lcall
scas
cli
in
lds
sbb
insb
pusha
push
or
insl
insl
cs
add
scas
clc
lcall
dec
movsb
inc
ss
jns
movsb
ds
outsb
sub
xchg
les
mov
fcomip
pushl
outsl
addl
out
outsb
fucomi
jle
clc
push
gs
xlat
movsb
pop
mov
call
mov
adc
lcall
xchg
pop
loop
mov
in
dec
popa
or
or
rclb
mov
inc
mov
xchg
cmp
push
and
cld
inc
lcall
mov
mov
jmp
inc
inc
aam
push
daa
loope
stc
mov
push
jmp
and
call
fstpt
nop
fcoml
lcall
fisttps
push
fcoml
add
fmuls
lea
mov
cmp
lahf
cmpsl
js
cs
pop
test
lods
sar
jg
xor
inc
xchg
loopne
mov
mov
sub
movsl
mov
and
movsb
pop
jbe
xchg
dec
adc
cmp
loopne
leave
pop
adc
in
or
xchg
sub
insl
sahf
scas
sarl
mov
inc
and
les
mov
mov
cmp
dec
lret
mov
mov
jecxz
dec
aaa
cld
call
outsl
mov
in
inc
roll
mov
mov
in
or
jns
call
cmp
add
lret
cmpsb
dec
movsb
sub
push
iret
cs
mov
mov
inc
aas
test
enter
mov
jge
fnstenv
inc
adc
push
add
insb
fwait
sbb
push
jmp
out
cli
sbb
push
or
icebp
scas
xlat
out
inc
xchg
inc
mov
int3
jb
out
scas
inc
cmp
incl
shrl
int3
pop
mov
add
fcoml
push
add
push
call
adc
dec
mov
bound
mov
xchg
fwait
and
pop
push
es
aaa
cld
inc
imul
inc
jne
mov
pop
inc
lcall
jno
rcr
in
lcall
jnp
mov
scas
dec
mov
add
mov
cmc
jns
fwait
xor
ret
xchg
jne
mov
out
cmpl
xor
fmul
jle
or
push
xor
pop
add
sub
mov
lcall
push
fdivr
int3
mov
ljmp
outsb
cs
add
fucomip
bound
adc
xchg
mov
lods
xor
cmc
ljmp
xor
pop
jecxz
and
jmp
cmpsb
inc
mov
fistl
inc
enter
mov
sbb
and
or
add
in
stc
cmc
repz
sarb
decl
ljmp
cmc
dec
sub
in
mov
mov
inc
fldenv
incl
out
xchg
sbb
inc
xchg
and
iret
mov
cwtl
cmp
pshufw
scas
incl
push
sti
cmpsb
adc
xchg
lret
cmc
rcrl
xor
jbe
cmp
sub
xchg
test
call
jo
movl
lret
ljmp
cmp
inc
cmpsb
divb
in
inc
mov
mov
les
jnp
daa
testb
xchg
or
sub
aad
sub
in
pop
outsb
sbb
xchg
jp
sub
call
adc
fimuls
xor
stos
imul
pop
cmp
insl
loope
cwtl
xchg
sbb
int3
xchg
dec
sti
fwait
in
jle
das
stc
ljmp
enter
aaa
addb
xchg
jne
mov
dec
fcoml
test
pop
inc
jo
faddl
xlat
xchg
ret
sbb
sbb
inc
jnp,pn
and
and
bnd
mov
outsb
clc
xlat
ljmp
mov
rolb
and
sti
es
inc
pop
pop
sbb
bound
pop
jg
ja
inc
cltd
addl
fsubp
mov
out
lods
fwait
inc
cli
stos
jle
xchg
pop
jb
pop
lock
decl
in
pusha
push
ret
adc
pop
inc
adc
inc
jge
iret
mov
and
iret
adc
ljmp
out
and
in
sbb
mov
xchg
push
adc
icebp
incl
loop
add
scas
mov
and
daa
scas
test
nop
test
sbb
lret
ds
fs
or
bound
cmp
and
cmc
xlat
imul
incl
popa
insl
push
lret
jo
xchg
in
lahf
inc
push
jg
cwtl
sbb
cmpsb
adc
lcall
and
push
push
rcl
jg
call
ljmp
stc
sbb
mov
mov
xlat
jmp
sti
fs
cmp
cli
xor
push
into
xor
aam
add
mov
sbbb
mov
mov
sbb
bound
sbb
fbld
sahf
jae
data16
mov
sahf
ljmp
ret
mov
fldcw
popf
sahf
pop
xchg
xchg
add
pop
popf
flds
cmp
jmp
xor
jl
leave
cltd
cmpsb
mov
push
add
add
fistl
dec
pop
adc
lods
in
scas
frstor
cmp
sahf
lea
xor
shll
incl
leave
jne
mov
fiaddl
mov
cs
and
scas
xchg
filds
push
mov
es
mov
and
cmp
add
js
mov
xor
incl
mov
out
int3
repz
cmp
cs
loope
std
lret
rol
pop
stc
and
xchg
fucomi
sbb
jg
adc
fdivrs
dec
test
pop
arpl
sti
jae
imul
pop
lods
dec
jne
loop
addr16
mov
cmc
pop
test
sbb
das
push
pop
mov
call
andl
jae
out
rorb
ljmp
shll
pop
mov
or
or
mov
jle,pn
adc
sub
rcll
fsubl
icebp
jg
sahf
lahf
mov
cmpsl
jl
nop
lret
or
push
adcb
cmp
jg
sbb
lods
mov
mov
pop
fisubrs
enter
into
stos
cmp
and
jg
int3
or
pop
cmp
mov
jo
lds
lret
lret
mov
decl
sub
inc
data16
mov
ljmp
sbb
push
mov
rcl
dec
xchg
lret
sub
ficomps
mov
jle
es
and
pop
scas
inc
mov
push
pop
pop
aam
ds
jp
add
jg
stos
dec
icebp
repnz
adc
push
dec
cmp
decl
into
out
mov
add
pop
xchg
addr16
fs
mov
jg
repnz
sahf
xchg
icebp
test
decl
mov
pop
das
dec
dec
lods
pop
add
mov
sub
mov
mov
lahf
and
sar
ljmp
std
push
repnz
lods
mov
aaa
push
enter
sub
stc
shll
fstpt
pushl
sub
dec
xorb
cld
xor
imul
jl
jl
ljmp
sti
lret
push
jno
gs
xchg
jge
jl
push
or
jmp
jb
cmp
add
jmp
lods
cmp
clc
sub
sbb
mov
dec
icebp
dec
cmp
ret
stos
jg
aaa
and
push
adc
push
mov
and
cld
mov
daa
mov
fdivr
ljmp
rolb
push
in
fimull
mov
sub
pushl
xchg
inc
repz
cmc
mov
or
or
sub
add
ljmp
cmp
jge
lret
inc
in
in
lret
push
cmp
add
js
pop
cmc
jg
push
mov
cltd
jp
leave
in
iret
push
mov
pusha
int3
mov
aaa
jne
fstpt
cltd
jg
or
dec
mov
in
stc
es
xor
sbb
mov
js
xchg
jno
lods
lea
shlb
inc
push
push
xor
dec
xchg
or
decl
popa
subb
nop
je
dec
push
xchg
push
popa
call
fnstsw
jg
cld
mov
add
data16
hlt
rorl
and
js
cmp
mov
cmp
pop
and
lods
adc
dec
jge
lret
or
sub
sub
push
or
pushl
push
cli
andnps
mov
movsl
repnz
std
rolb
fwait
pop
or
pop
pusha
adc
insl
dec
std
jmp
sub
je
jnp
jp
inc
mov
outsl
add
lock
or
mov
pop
sbb
out
fadds
mov
sahf
xlat
add
sub
jmp
aas
sub
push
aaa
adc
fisttps
cs
inc
xchg
aad
inc
mov
cmp
cmp
lods
xchg
incl
nop
cwtl
push
fistl
sbb
loop
clc
mov
shll
lret
popf
notb
xor
mov
push
scas
aam
fwait
xor
dec
jmp
fldenv
cld
out
or
int3
pop
mov
and
sub
imul
inc
popf
pop
jno
repnz
sub
dec
cwtl
repz
push
faddl
ret
inc
decl
sub
jle
mov
push
dec
jbe
jo
add
cmp
dec
jecxz
cmp
and
xchg
cmp
cltd
add
adc
xchg
inc
lock
dec
jle
cli
jg
shrb
cltd
pop
cmpsb
mov
jnp
std
dec
std
outsl
sbb
scas
rclb
ljmp
adc
scas
sti
mov
iret
jbe
js
mov
xor
inc
loop
push
cli
or
out
cmpl
push
push
test
pop
mov
or
leave
sbb
ret
mov
cmp
jae
mov
mov
jno
loop
mov
pop
or
pop
std
dec
dec
mov
and
aaa
out
aaa
push
xlat
jg
mov
adc
fwait
push
sti
push
incl
adc
cli
bound
mov
inc
pop
clc
fwait
sub
repz
mov
in
jb
inc
out
and
cmpsl
sbb
shlb
adc
shll
outsl
add
das
push
out
daa
punpckhwd
decl
lock
rorl
aas
cmp
out
push
and
leave
push
xchg
push
sbb
pop
lock
sub
iret
push
mov
aad
cmpsb
jnp
xor
sti
mov
pop
cmp
out
jae
fcompl
enter
sahf
scas
xor
out
mov
jmp
mov
mov
aaa
loop
mov
fistpl
mov
sti
or
xor
cmp
ljmp
push
ret
clc
out
adc
les
sbb
iret
pop
out
out
lret
xorb
ljmp
ds
or
clc
cmp
inc
xlat
fildl
mov
cmp
cld
dec
mov
xor
leave
adc
nop
iret
test
lea
incl
mov
outsl
sti
arpl
push
xor
icebp
dec
sub
popa
inc
enter
call
sarb
jle
ljmp
push
enter
mov
mov
std
outsb
dec
in
mov
sti
adc
jle
xchg
jmp
dec
fwait
xchg
cld
mov
bnd
and
mov
lret
cmp
and
out
daa
pop
inc
fs
mov
aaa
pop
sub
imul
int3
out
push
notl
push
pop
aaa
mov
sbb
ljmp
mov
cwtl
xchg
cmp
pop
jb
fwait
add
in
mov
push
jo
push
jo
push
push
sub
inc
mov
push
and
call
push
push
cmp
daa
loope
imul
cmp
sub
push
xor
jecxz
push
lcall
stc
ret
mov
repz
pop
jnp
push
push
dec
in
icebp
sub
gs
lcall
mov
popf
icebp
push
mov
xor
test
xor
or
sbb
pushl
sub
ds
mov
mov
jle,pn
adc
jnp
xchg
call
mov
jp
pusha
push
fnstenv
cmp
iret
adc
ret
xor
dec
out
pushl
cld
lea
les
xchg
or
adc
fidivl
jmp
jecxz
and
push
and
pop
mov
mov
cmp
or
icebp
das
nop
hlt
decl
add
lock
mov
dec
add
jmp
lock
cmpsl
mov
mov
pop
adc
test
xchg
iret
cld
sub
inc
int3
fcomip
in
sub
mov
outsb
add
mov
aad
sub
jmp
ljmp
lahf
cmpsl
mov
fnstcw
dec
dec
fwait
ja
scas
fwait
in
inc
lock
ljmp
mov
mov
sub
push
gs
add
xchg
filds
pop
adc
add
cwtl
or
aas
and
adc
xchg
popa
dec
lcall
mov
mov
add
ficoml
mov
jne
cli
in
js
or
movsb
lcall
pop
mov
adc
cmpsb
or
pop
xchg
fmull
sbbb
or
push
dec
jmp
add
dec
adc
fldt
mov
addr16
inc
imul
adc
lahf
in
push
insl
fs
xchg
dec
sbb
arpl
addr16
and
jg
inc
lahf
aam
cwtl
pop
addr16
out
fs
xchg
fmull
int
out
or
pusha
enter
shl
cmp
popf
rcll
mov
mov
je
mov
jbe
or
pushl
inc
stc
inc
in
repnz
outsb
call
cmp
stos
ret
add
mov
sub
cs
cs
mov
cli
das
cli
jmp
std
xchg
or
lods
das
mov
sub
inc
ffreep
adc
sub
lods
popf
popf
stos
inc
dec
mov
or
push
ss
jno
mov
outsl
es
xchg
lcall
movsb
sarb
mov
stc
loope
lret
outsb
fs
sarb
call
push
es
inc
lods
or
into
xor
xchg
mov
push
inc
push
sar
inc
jg
sub
call
ja
daa
stos
aad
push
jecxz
sti
cmp
xchg
xchg
leave
xor
lcall
mov
inc
stos
fimull
mov
out
adc
in
cmpl
fcomip
call
scas
sbb
xchg
jb
movups
cmp
std
lcall
push
mov
ret
gs
jno
std
push
inc
xchg
cli
icebp
push
jl
mov
jle
rolb
lret
lods
out
jg
mov
movsl
clc
jne
shlb
push
inc
jle
fs
jo
test
jg
pop
jl
sbb
insl
je
push
lcall
push
jno
std
add
mov
call
mov
cs
push
call
mov
cmc
sbb
lret
sub
mov
aas
mov
lock
addr16
xchg
into
mov
lcall
and
inc
cmc
add
rolb
std
dec
jno
xchg
pop
mov
aam
mov
cmp
out
dec
incl
jmp
mov
movsb
add
fmuls
mov
je
sub
jp
inc
and
arpl
mov
iret
jle
adc
fidivrl
and
stc
lock
call
xchg
into
fs
pop
mov
int3
xor
add
adc
lcall
cmp
cmp
aad
sub
cmp
xor
pop
add
push
lods
jl
inc
xor
das
adc
push
push
add
adc
mov
ja
repz
mov
cmpsb
jmp
jmp
inc
scas
sarl
aas
mov
outsl
fiadds
pop
xchg
jmp
push
fxch
sbb
xchg
jne
lret
cs
cmovb
in
subb
xchg
fnstcw
nop
gs
lahf
loopne
sub
jnp
fiadds
or
mov
decl
jno
ss
cmp
xor
inc
xchg
inc
mov
mov
cmpsb
sar
jge
mov
fwait
scas
das
scas
in
cmp
and
lahf
in
dec
cmp
jmp
lods
movsl
or
testb
mov
jne
dec
cmp
jp
ljmp
ljmp
jmp
icebp
jle
adc
push
adc
jmp
iret
xchg
push
ljmp
jne
fcmovnu
adc
xchg
xor
push
not
lods
mov
jg
pop
outsl
lds
push
dec
mov
add
daa
dec
and
sbb
push
imul
decl
cmp
mov
push
aaa
mov
inc
out
mov
loopne
cmc
lcall
rcrl
mov
inc
dec
cltd
xchg
jo
mov
test
scas
cli
ss
mov
cmp
test
gs
or
mov
inc
xor
ljmp
or
xor
shl
aaa
das
fcoml
daa
fsubrs
test
xor
nop
jnp
jnp
sub
loope
inc
add
loope
and
pop
xor
push
jno
inc
hlt
ljmp
mov
jge
mov
jge
clc
lret
jg
shl
jp
mov
int3
mov
jmp
pop
xchg
xchg
lock
jne
and
fwait
cmpsb
add
lock
decl
clc
push
fsubrl
cltd
mov
push
xor
jmp
lea
jg
mov
jno
test
es
push
mov
cld
pushl
xor
dec
repz
outsb
in
cwtl
rorl
push
decl
fimull
insb
ljmp
fbld
mov
fisttpll
ljmp
mov
and
and
adc
ljmp
pusha
add
mov
insb
aam
int
add
mov
xchg
testb
decl
cld
insl
arpl
inc
lods
xchg
enter
mov
push
sbb
push
std
jmp
icebp
mov
lods
popa
shlb
das
outsl
int
lea
pop
cmp
jg
ret
jl
cli
push
mov
pop
xchg
mov
mov
daa
add
ja
imul
inc
rorl
inc
mov
sub
fsubr
idiv
shr
adc
mov
lahf
xchg
rcl
add
mov
or
jae
enter
out
ds
inc
call
jnp
pushl
push
data16
inc
add
lcall
pop
cmp
and
push
decl
xor
push
call
outsl
mov
mov
jmp
mov
jae
scas
and
icebp
repnz
push
xchg
aaa
lcall
jae
cmp
test
cmp
mov
je
imul
xor
decl
push
mov
pop
lret
bnd
inc
or
out
movsb
test
cli
iret
mov
aad
mov
in
mov
divb
sub
aad
aas
add
popf
hlt
das
and
ret
pop
shrl
and
decl
orl
fimull
xor
cmpsl
ljmp
mov
lea
inc
lcall
jns
jp
aam
or
ret
hlt
dec
int
jae
outsb
aad
lcall
movsl
ret
dec
bound
mov
sub
push
aam
push
andl
pop
movsl
inc
loope
call
popf
lret
cmp
aam
int3
aad
in
lds
inc
jae
mov
push
pop
inc
cltd
nop
out
inc
mov
sub
test
ljmp
cli
shll
addr16
js
fldz
lods
xchg
and
out
inc
insl
notl
frstor
cmp
pushl
into
or
cmpsb
push
cmp
cld
mov
jo
inc
subl
jnp
test
cmp
pop
mov
icebp
call
sahf
dec
repnz
inc
cli
out
scas
jb
add
sar
sub
xchg
jbe
sbb
lcall
rclb
jl
mov
or
stc
push
pop
push
shl
sub
ljmp
xchg
shll
in
orl
sub
push
xchg
mov
aam
dec
mov
sub
fcoms
loope
sar
das
outsb
rorl
das
jge
insb
mov
xchg
sub
test
subb
hlt
incl
sbb
lods
addr16
daa
inc
xor
sbb
ret
xor
lahf
jb
jmp
repnz
lahf
add
mov
xor
fwait
daa
test
iret
pop
xor
or
sub
sbb
dec
das
enter
or
call
add
out
test
jg
sbb
mov
inc
enter
push
sub
lcall
stc
cmpsb
cli
cmp
gs
sarl
clc
in
je
add
adc
jmp
cmp
call
sub
fists
out
mov
les
lock
pushl
stos
enter
loop
aas
dec
lock
push
mov
dec
mov
cmp
cmc
push
call
iret
or
fisttpll
push
adc
pop
in
shrl
pop
jg
ficoms
sub
outsl
clc
incl
mov
lods
push
jae
and
cmp
mov
addl
out
push
and
out
mov
stos
in
stos
decl
jmp
mov
jbe
xor
mov
xchg
test
push
pop
jnp
imul
cmp
jg
inc
fstl
out
aam
pop
sbb
sub
not
jp
xchg
lcall
cmpb
adc
imul
aam
pop
sbb
lcall
aad
js
or
pushl
push
xchg
sbb
pop
ljmp
call
movsb
loope
imul
je
arpl
inc
inc
outsb
repz
jmp
and
jns
ret
out
push
movsl
jns
cs
cld
pop
shll
jg
jmp
add
movsl
inc
push
pop
lock
shll
or
ljmp
sbb
adc
cmp
movsl
dec
clc
pop
cmc
jae
loope
and
cmp
fisubrs
mov
mov
lret
shl
insl
das
and
int
fsubl
mov
inc
fstpt
xchg
outsb
push
pop
inc
scas
sbb
inc
dec
push
pop
add
call
mov
push
enterw
or
add
aam
mov
xchg
fnstcw
sub
mov
jp
mov
hlt
mov
out
es
or
adc
pushl
ret
adc
add
adc
icebp
or
cld
jnp
pop
ret
pop
mov
decl
loope
jno
adc
mov
and
lods
xor
int3
aam
es
xor
call
dec
and
push
data16
sub
and
mov
jb
rcrb
es
mov
ficompl
sub
aam
adc
icebp
stc
mov
push
or
push
decb
out
or
sbb
out
decl
ret
cmp
pop
jle
inc
pop
push
je
and
lcall
adc
flds
lret
movsl
outsl
pop
inc
push
out
inc
ljmp
inc
jge
notb
daa
jecxz
adc
cwtl
xchg
sti
outsl
arpl
ffree
cmp
jmp
jmp
js
rolb
rcll
mov
fcoml
xlat
outsl
push
xor
mov
xchg
mov
xor
xlat
sbb
inc
subb
sbb
push
cmc
insl
sti
cs
pop
pushf
pop
jl
mov
lods
out
fs
xlat
and
push
jne
fwait
int
inc
add
sbb
lods
fsts
loop
xchg
push
std
pop
sbb
mov
or
call
jp
xchg
into
lock
es
pop
mov
cld
insb
adc
or
lcall
scas
cld
push
dec
jp
stos
outsb
xor
scas
fldcw
aad
sahf
and
in
loopne
ljmp
mov
hlt
icebp
inc
loopne
mov
aad
xor
mov
inc
jg
jmp
movsb
push
sbb
popa
movsl
fwait
in
fwait
jg
xor
int3
loop
pushf
mov
sbb
decl
adc
pop
xlat
pop
xchg
int
inc
movl
jne
shr
sub
xor
call
and
enter
sbb
mov
cmp
das
or
or
lret
mov
stos
and
loopne
cmp
cltd
add
repnz
stos
lods
decl
mov
mov
bound
mov
jne
push
inc
bound
repnz
lahf
leave
ljmp
clc
jmp
leave
divl
lcall
mov
xor
add
out
clc
call
sbb
mov
ret
sti
lock
cmp
jnp
jge
movsb
icebp
call
dec
dec
mov
xchg
repz
and
mov
stc
dec
cmp
idiv
lcall
xchg
jp
pop
je
xchg
ja
test
cmp
lahf
negb
mov
loop
stos
cmc
loopne
lcall
andl
pop
fcmovnbe
pop
loop
loope
addb
inc
add
loopne
sub
decl
lods
xlat
ja
stc
mov
pop
pop
adc
das
jb
rcll
mov
ljmp
popf
ret
xlat
decl
mov
and
fs
and
out
shlb
idiv
fdivr
ja
jmp
fsubp
and
and
loope
repz
flds
mov
punpckhwd
lock
mov
or
scas
sub
std
mov
push
packssdw
loop
jle
in
sub
mov
decl
xchg
hlt
daa
fsubs
dec
and
or
loopne
mov
xchg
and
mov
push
push
cmp
popf
and
xor
test
inc
ljmp
jl
add
call
sub
xchg
and
data16
imul
cmp
test
ljmp
ds
add
add
out
cmp
cmp
mov
stos
jle
add
ljmp
push
addr16
adc
iret
rcrl
cmp
daa
mov
and
mov
out
push
lods
inc
fdiv
decl
push
push
retw
cmpsl
mov
jns
push
out
scas
insl
rorb
popf
fisttps
insb
and
fs
test
xchg
sub
lret
mov
shrb
stos
mov
xchg
andb
mov
cltd
mov
sbb
sti
loope
cli
and
decl
fmuls
mov
daa
int3
pop
inc
pop
sahf
and
out
sti
sub
dec
aad
adc
add
mov
icebp
hlt
adc
jle
jno
in
pusha
dec
idiv
decl
jl
out
mov
add
adcb
scas
mov
test
jmp
xor
jmp
ljmp
mov
hlt
hlt
ljmp
jecxz
sbb
sarb
mov
lahf
sbb
nop
ret
mov
test
ret
js
cld
ror
sarl
mov
decl
pop
in
faddl
dec
or
lea
cli
or
stos
lds
xchg
mov
push
xchg
cmp
lcall
and
lahf
insb
or
push
xor
dec
jl
sub
imul
jnp
int
dec
pop
mov
mov
fwait
jbe
arpl
push
mov
jae
bound
mov
push
inc
add
je
cmp
fs
mov
clc
add
adc
adc
stc
cli
mov
mov
add
mov
fwait
mov
out
cli
push
popa
xchg
jg
sub
mov
mov
stos
sub
movsl
scas
out
mov
call
or
pop
sub
adc
push
cmpsl
sbb
pushf
adcl
mov
movsb
add
push
stos
mov
nop
adc
pop
inc
or
jb
inc
jg
mov
sbb
push
call
sbb
inc
int
xor
cmp
mov
lods
jno
xor
shrl
pop
pop
lock
andb
jbe
pop
cltd
and
stc
sub
lock
cltd
xlat
scas
inc
jecxz
int
push
inc
add
arpl
fsubrs
pop
data16
sti
pop
arpl
dec
ret
mov
incl
loopne
lods
inc
stos
adc
pushf
loopne
xor
mov
mov
push
aaa
gs
scas
popa
ret
adc
pushl
push
lods
popa
cmpb
aas
out
dec
xlat
jae
mov
outsl
mov
out
bound
aaa
incl
jmpw
pushf
outsb
jbe
std
adc
shrl
lret
add
dec
xchg
incl
enter
sahf
cwtl
sbb
pushf
enter
mov
inc
xchg
pushf
aam
sbbl
sti
mov
inc
push
add
imul
insb
pop
lds
lea
fbld
sar
push
std
es
push
jge
sbb
push
inc
insb
out
and
jae
imulb
xor
cltd
jg
ljmp
or
mov
aaa
fs
mov
int3
nop
and
jnp
data16
aaa
cwtl
insl
add
ljmp
jno
mov
jns
add
mov
pop
mov
aam
or
sti
out
xchg
adc
clc
cmp
icebp
and
inc
add
in
and
hlt
lods
dec
pusha
inc
xor
mov
dec
sbb
cmp
incl
add
out
out
xor
cld
xchg
lahf
add
mov
dec
call
popa
or
loope
add
test
cmp
stc
push
rorl
jmp
cmp
mov
cmp
in
sbb
and
ss
xor
data16
pop
ret
cld
notl
sahf
mov
pop
js
inc
aam
xchg
je
push
adc
xchg
pop
mov
bound
mov
dec
inc
jge
adc
push
cli
push
mov
lgs
loop
cmpsl
sbb
and
mov
xor
ja
jo
dec
jg
pop
jo
incb
xor
sub
push
ss
mov
ljmp
push
shrb
jle
jle
sub
xchg
xlat
lock
call
add
rcpps
sar
push
call
stos
add
incl
xor
loopne
enter
pop
std
clc
rclb
fiadds
mov
ljmp
clc
decl
fsts
jl
adc
jae
dec
leave
sbb
les
mov
push
in
sub
jmp
sar
dec
lcall
fisubs
pop
aad
jo
sbb
push
mov
jg
mov
in
xchg
sub
hlt
das
inc
popf
adc
mov
push
mov
cmp
jb
shrb
shlb
stos
cmpsb
xchg
xchg
pop
test
pop
es
push
sbb
mov
xlat
ret
push
ss
adc
add
fsubl
cli
xchg
push
ljmp
jg
mov
and
xor
cmpsl
push
mov
jle
add
mov
mov
add
hlt
jmp
ds
mov
gs
fwait
xchg
icebp
pop
ljmp
push
add
jmp
sbb
cwtl
ret
sahf
ljmp
ljmp
jmp
mov
and
test
or
mov
fstps
pop
mov
enter
adc
js
fildl
xchg
and
gs
ffreep
mov
sub
jg
test
ds
ds
paddq
lret
xchg
or
sub
jg
cmc
cmpsb
fstpl
sahf
jecxz,pt
dec
insl
insl
add
and
inc
xor
stos
and
pop
popf
pop
sarb
add
xchg
mov
xchg
jle
jmp
ljmp
leave
jno
mov
out
sbb
pop
call
inc
or
cmp
bound
repz
les
test
jge
and
mov
inc
rclb
rcrb
push
ficoms
adc
movsb
jg
loop
in
pop
jge
test
add
or
scas
sub
mov
sar
std
enter
add
add
mov
outsl
outsb
dec
out
mov
dec
fwait
stc
pop
inc
sbb
push
dec
xchg
push
cs
pusha
repnz
or
call
mov
jnp
mov
adc
rorb
cmpb
in
es
and
jp
or
inc
mov
dec
mov
into
cmpsl
mov
add
or
pop
pop
jno
scas
add
jg
mov
sbb
adc
cli
rcrl
mov
mov
mov
jl
ss
sbbb
loop
sbb
pop
divl
decl
xchg
push
leave
inc
rorb
movsb
push
out
sbb
jp
popa
adc
cmpsb
pop
icebp
inc
icebp
pusha
mov
pop
and
jo
sbb
or
push
cli
inc
shl
jns
sbb
sar
and
int
pop
jae
push
cmpsl
pop
call
bound
lds
pop
jo
jns
inc
mov
popa
cli
adc
aad
dec
mov
sub
out
hlt
mov
fbstp
shlb
xor
call
jmp
xor
xchg
push
lea
icebp
fstps
adc
ljmp
inc
cltd
xlat
call
out
sti
jg
mov
shrl
mov
call
sub
jp
sti
fucomip
aas
jbe
leave
loope
and
repz
aad
cmp
das
cmpsl
les
xor
out
jp
dec
add
ljmp
xlat
pushf
mov
stos
ja
stos
gs
incl
ljmp
leave
jnp
cmpsb
xchg
ror
jle
add
bound
repz
jg
mov
add
jnp
ja
lret
jno
mov
emms
jbe
add
lds
cmp
pop
lcall
addr16
sub
adc
les
ss
inc
icebp
sub
sbb
push
popa
pop
outsl
mov
adc
mov
cld
mov
andb
outsl
cli
lcall
and
idivl
mov
test
into
ret
lcall
adc
in
daa
or
fmul
and
inc
outsl
cli
inc
xor
out
das
ds
cmp
mov
push
les
inc
ljmp
clc
jmp
testb
ljmp
cmp
mov
insl
fwait
pop
test
adc
incl
add
and
in
loopne
sbb
jg
jno
sub
imul
nop
jo
jno
incl
clc
xchg
add
adc
or
push
lahf
ss
std
cld
sarb
adc
std
ljmp
push
test
jecxz
lock
push
enter
out
sbb
push
sbb
fbld
cwtl
mov
addb
mov
mov
jmp
js
in
adcb
inc
aas
jmp
pushf
inc
sbb
lahf
cmp
push
push
mov
jle
jns
outsl
aas
mov
cltd
ja
jae
gs
lock
jmp
adc
xchg
add
inc
scas
pusha
shll
dec
xchg
lods
cmpsb
dec
movsl
fcompl
or
cmp
fwait
push
inc
lret
repnz
xchg
aas
es
xor
mov
lds
pusha
mov
pushl
pop
sahf
mov
push
xor
and
fneni(8087
and
xchg
or
std
iret
xor
inc
fistpl
push
test
jmp
das
fnop
mov
jmp
imul
xchg
popf
fldt
add
fld
insl
lret
adc
mov
loopne
stos
test
and
stos
das
adc
sub
mov
fnstcw
xor
push
jae
xor
mov
jno
leave
xchg
mov
nop
jne
jns
push
xor
inc
aad
enter
xchg
sbb
mov
adc
shlb
faddp
or
loopne
roll
mov
sbb
pushl
xor
dec
data16
cli
and
inc
sbb
ljmp
aad
ja
ret
ljmp
test
jge
add
sarl
fistpl
dec
lcall
decl
pop
xor
data16
mov
push
mov
sbb
lahf
xchg
mov
ss
xchg
in
cmp
clc
mov
movsb
test
sub
jp
pop
call
inc
mov
mov
mov
jg
scas
divb
mov
decl
jb
flds
jg
bound
xor
adc
dec
jmp
into
fsts
push
pop
inc
mov
pop
outsb
notl
jno
push
cmpsl
xchg
cmpsl
xor
mov
pcmpeqb
clc
push
pop
jmp
loopne
stos
cmp
lahf
scas
data16
pop
xlat
push
out
ja
je
pop
cwtl
lods
ret
or
mov
adc
jge
call
or
sbb
inc
movsb
xor
cmpsl
and
daa
mov
xor
mov
pop
popa
sti
sbb
mov
mov
or
jb
and
mov
xchg
pop
movsb
lcall
pop
jne
test
out
ja
inc
stos
clc
cmp
orl
test
adc
pushf
in
ret
pop
mov
gs
jmp
and
adc
in
pop
inc
dec
cld
jne
pop
popa
dec
out
test
fildll
cld
lds
inc
xchg
fcoms
dec
leave
out
test
leave
lock
outsl
loopne
pusha
cld
cmp
jbe
sti
sbb
call
add
insl
loopne
add
rcl
mov
adc
lock
stc
xor
jnp
push
mov
sbb
cmp
loopne
stos
std
adc
cmp
pop
icebp
das
add
push
add
lahf
lea
call
sarb
xchg
sahf
inc
lds
xchg
dec
mov
loopne
nop
xor
sti
sbb
sub
ret
std
sbb
cmp
leave
jb
and
jne
push
fimull
mov
imul
push
push
lods
cmpsb
test
inc
aaa
push
mov
jg
enter
push
aad
inc
jno
mov
stos
int
mov
cmp
dec
mov
mov
xchg
ds
sub
or
popa
or
add
mov
clc
add
jae
push
enter
js
mov
shll
mov
imul
jl
repz
pop
hlt
jg
lahf
fwait
inc
jo
syscall
pop
dec
in
scas
jecxz
xor
cwtl
jbe
adc
dec
sbb
fwait
dec
xor
pushf
add
lret
fwait
mov
xor
pop
test
dec
xchg
mov
add
cld
stos
mov
mov
jle
addl
scas
pop
adc
fildll
adc
pop
or
stos
adc
lcall
test
mov
dec
sarl
mov
addr16
add
mov
sar
lcall
xor
mov
mov
inc
insl
imul
popf
outsl
xchg
repnz
mov
fdivl
lcall
lds
xchg
cmp
sti
fldlg2
scas
js
xor
jne
xchg
push
inc
add
mov
mov
int3
rolb
adcl
fimuls
sbb
xor
fisttpl
imulb
jg
jg
cs
jb
adc
push
sub
jl
cmp
decl
mov
jg
sub
mov
repz
jns
test
repnz
ja
jmp
loop
scas
cli
lcall
xchg
je
mov
adc
xor
test
lret
sbb
jno
dec
mov
js
sbb
mov
pop
aad
in
mov
popf
sbb
fistpll
xor
call
fists
mov
sbb
scas
fstpl
in
jecxz
ljmp
rolb
push
loopne
pop
or
decl
lret
scas
jp
and
aad
gs
mov
lods
or
jmp
lret
lds
cmc
xor
cld
pop
je
ljmp
ja
aaa
enter
dec
dec
xlat
sub
jg
ljmp
adc
cmc
sub
int3
inc
ss
fstpl
inc
dec
loope
xor
mov
cmp
or
jmp
repz
clc
jp
icebp
pop
sbbl
jbe
inc
add
mov
or
ja
dec
fnsave
or
jmp
call
out
mov
out
out
shlw
fsubrs
cmc
and
push
jmp
mov
and
cmp
inc
dec
cld
iret
lock
xchg
fstpt
hlt
inc
adc
fldln2
jns
aad
pop
pop
sbb
jle
decl
lods
daa
cmpsb
inc
xor
mov
bound
insb
pushf
cmp
data16
jo
fadds
rolb
xor
xor
push
call
ss
push
mov
xchg
inc
cmp
das
cmp
mov
cli
mov
cs
loope
jg
js
insb
mov
pop
fucom
inc
cmp
dec
cmp
mov
dec
xchg
or
push
ljmp
pop
dec
int
mov
js
jb
mov
xchg
pusha
xchg
mov
and
mov
xchg
and
cmp
ljmp
push
pop
ljmp
cmpsl
negb
outsl
clc
decl
and
andl
jmp
add
and
dec
xlat
bndldx
das
and
or
shld
mov
mov
sub
les
xchg
push
out
add
cmp
sbb
decl
decb
inc
push
pop
xchg
stc
mov
stos
mov
adc
outsb
pop
aas
icebp
aas
out
jae
arpl
mov
insl
js
pop
leave
addr16
mov
jle
adc
push
repz
and
dec
sbb
dec
call
or
lods
and
into
xchg
ja
mov
arpl
pop
sbb
xlat
jmp
fisttpl
jnp
adc
lret
mov
lds
dec
mov
fstp
add
sbb
fs
clc
cmp
test
inc
cmp
sbb
jp
or
pop
scas
mov
mov
and
aam
outsl
dec
push
or
cmp
mov
lcall
mov
or
sahf
iret
out
add
push
jmp
pop
xchg
leave
sbb
lcall
enter
mov
pusha
cwtl
lret
dec
xlat
imul
loope
or
mov
push
pop
dec
loopne
dec
dec
sahf
pop
outsb
dec
bound
dec
loope
cwtl
cmp
dec
fildl
cmp
jmp
xlat
pop
xchg
xchg
xor
jg
ds
out
sbb
movsb
bound
jmp
popl
leave
loopne
dec
dec
cmp
aas
dec
push
cmpsb
rclb
fwait
and
jbe
push
cld
mov
pop
enter
ljmp
enter
mov
rolb
hlt
mov
push
mov
add
mov
push
sub
xlat
xlat
add
cld
jmp
lods
push
push
mov
call
cmp
inc
add
addl
loope
call
bound
sub
push
mov
inc
mov
shlb
repz
js
lcall
dec
sbb
mov
mov
jnp
test
cmp
dec
sbb
cmpl
mov
call
jo
addr16
sbb
lret
pushf
xchg
add
lock
jmp
dec
in
pop
mov
imul
inc
repz
and
push
push
xchg
or
inc
push
pop
push
or
lock
nop
dec
cltd
ja
and
xchg
sub
mov
mov
mov
outsb
test
ja
clc
or
and
add
inc
mov
pushl
inc
jg
jecxz
mov
pushf
outsl
pop
iret
ljmp
cld
pushl
mov
mov
mov
nop
stos
inc
cli
movsl
std
pushl
xor
ljmp
xchg
sahf
fwait
xor
pop
flds
popf
mov
fisubs
jp
pop
dec
xchg
sbbl
je
lcall
inc
mulb
cmp
fsubl
ds
xchg
mov
dec
inc
xlat
pushl
cmp
push
adc
mov
dec
and
call
cmp
xchg
das
jl
push
and
call
pop
or
and
and
idivb
out
jbe
ret
push
jns
in
cld
call
add
pop
jbe
loop
sahf
adc
stos
and
xor
iret
ret
pushf
pop
ja
sbb
outsl
clc
stos
inc
pushf
mov
in
and
jecxz
stos
sti
das
cli
jmp
mov
mov
jmp
lret
cwtl
nop
test
jg
in
xchg
sbb
idivb
adc
mov
fwait
sub
jl
pand
pushl
pop
inc
pop
scas
inc
cltd
aam
jne
add
aam
xor
xchg
cmc
call
xchg
and
xchg
cmp
sbb
jp
add
jg
sub
cmc
es
insl
sbb
add
mov
in
or
call
ror
out
xchg
dec
scas
int
pop
pop
push
aas
or
rcr
and
or
jmp
mov
test
cmp
clc
push
mov
cld
cmp
mov
cmp
movsl
jmp
mov
testb
pop
dec
xchg
jg
decl
outsb
icebp
icebp
out
imul
nop
cmp
push
or
xchg
cmp
lcall
pop
enter
in
sub
out
or
pop
jmp
iret
leave
mov
sbb
call
insl
jg
loopne
push
aas
addr16
add
idiv
mov
sub
or
jp
jp
and
loopne
push
cmc
cmp
leave
cmp
mov
ja
cmp
enter
cwtl
hlt
out
call
test
repnz
dec
jl
push
xorb
push
adc
mov
or
mov
jnp
push
inc
cmp
dec
dec
pop
inc
ljmp
jge
inc
pop
rcrb
movsb
inc
sbb
out
push
lds
add
cld
pop
push
ret
ljmp
clc
inc
xlat
arpl
sbb
outsl
push
or
stos
push
mov
pop
hlt
xchg
stc
lahf
leave
pop
cmp
leave
push
in
les
mov
mov
pop
rcl
mov
and
adc
fsubrl
das
clc
cmp
stc
outsl
outsb
xor
mov
dec
xor
add
sbb
ret
lods
int
mov
inc
mov
inc
or
fcomip
pushl
xor
shll
outsb
jbe
cmc
sub
in
test
in
xchg
push
push
je
aam
adc
or
xlat
lock
add
in
or
imul
daa
lods
rcr
aaa
sub
jecxz
inc
mov
stos
hlt
icebp
or
mov
pushl
in
rcrb
dec
dec
ljmp
mov
imul
test
adc
push
decl
mov
fimuls
sbb
inc
or
or
add
push
in
mov
call
lahf
or
hlt
pop
mov
mov
cli
adc
inc
fisttpll
adc
xchg
or
xchg
lds
push
jg
ss
hlt
cmc
test
cmp
popa
mov
and
xchg
mov
cmp
jo
ja
ljmp
stos
mov
inc
mov
sub
pop
andl
pop
loopne
mov
jno
jmp
push
es
insl
jo
xchg
add
xor
cltd
or
cli
cmp
xchg
insl
dec
pop
xchg
dec
add
out
lcall
ljmp
adc
push
and
pop
rcll
loopne
sub
mov
repz
ljmp
jmp
xchg
add
and
fsubs
rcl
xor
data16
into
fists
cmp
lcall
mov
imul
test
repnz
push
movsl
dec
pusha
mov
imull
xchg
jnp
mov
add
out
dec
cmp
mov
mov
es
test
cmc
rcrb
aad
es
popa
pop
test
jb
mov
cld
mov
adc
xchg
ficomps
jnp
inc
cmpl
ja
gs
push
out
incl
lahf
add
push
stc
ljmp
sbb
cmp
sub
lcall
fisubrs
jno
xor
orl
mov
mulps
mov
out
sahf
ljmp
xchg
and
aad
sbb
rcrb
sub
jg
test
xor
test
cmp
stos
push
mov
es
stos
mov
in
sahf
mov
stos
decl
push
clc
dec
lock
aam
push
stos
shll
ljmp
popa
push
sarb
jg
cld
and
push
jb
incb
stos
pop
daa
mov
inc
add
sub
ja
stos
rcl
outsb
mov
sub
and
ret
cmp
mov
push
cwtl
xor
in
adc
and
push
lea
imul
es
stos
and
cmp
pushl
out
xor
out
mov
data16
pop
pop
add
inc
adc
into
hlt
mov
jmp
xlat
jg
gs
or
test
adc
adc
or
xchg
cli
pop
mov
or
jl
daa
fsubrs
out
outsl
cmp
ljmp
stos
sub
mov
xor
sub
mov
xor
dec
movsl
negl
mov
mov
in
adc
mov
dec
dec
jno
mov
shrl
pushl
inc
push
sub
mov
mov
out
adc
outsb
mov
sar
jmp
jge
pushf
stos
test
xor
add
xchg
scas
outsl
dec
int3
lcall
jg
add
orb
push
fisubrs
mov
dec
addr16
incl
adc
or
ficoml
subl
in
or
out
cmpsl
xlat
lods
xor
pushl
xor
xchg
out
sti
mov
dec
mov
inc
lds
imul
mov
and
pop
mov
push
add
xor
sbb
xlat
fwait
in
test
dec
addl
in
mov
sbb
loope
inc
add
jmp
aad
test
cmp
add
or
inc
jmp
aam
inc
test
fadds
pop
dec
jl
mov
inc
or
push
sub
jae
call
js
sub
je
xorb
rorl
jg
jmp
sahf
jo
leave
fs
sub
or
fimull
push
cmp
pushl
dec
jne
ret
daa
lods
loopne
sub
leave
dec
aas
mov
outsb
loope
pop
or
insl
push
jno
push
arpl
in
add
insl
mov
popa
xlat
mov
mov
inc
jae
leave
hlt
mov
jecxz
push
lea
or
and
cmc
decl
fadds
out
mov
dec
hlt
lcall
cld
lcall
mov
and
fstpl
push
cmp
jg
or
inc
fcmovne
adc
es
loop
ret
je
out
ljmp
incb
fistps
ror
arpl
adc
lcall
pop
xor
inc
es
or
cmpsl
sarl
xor
push
inc
pop
dec
dec
inc
insl
lds
add
fldl
decb
jbe
stc
addr16
add
jb
mov
jg
xor
jl
mov
push
int3
std
pop
popl
fists
mov
arpl
mov
fdivp
mov
pushl
pop
ret
test
int
inc
inc
outsl
dec
ret
out
int3
ss
pushl
sbb
stos
adc
push
add
jne
dec
push
das
jg
lods
cli
stos
pushl
jns
insl
push
add
ja
jno
mov
frstor
and
ljmp
push
mov
inc
test
daa
shr
push
packuswb
pop
jb
addl
add
xchg
mov
pushl
adc
daa
iret
shrl
hlt
adc
cs
pop
mov
fdivrp
ret
push
decb
push
sarl
mov
in
loop
adc
incl
push
xorb
mov
push
imul
mov
jge
or
push
dec
ja
lcall
fcom
jge
xor
add
push
test
push
cmc
dec
or
stos
lock
sbb
xchg
cmp
cmp
cli
cwtl
movsb
sbb
pop
pop
test
nop
and
xchg
into
movsl
stos
decl
lock
mov
lcall
push
adc
mov
call
scas
mov
les
stos
call
jg
aam
scas
xchg
out
mov
jnp
mov
jmp
aas
jb
push
lcall
aam
mov
cs
test
jns
pop
pop
out
imul
adc
mov
or
mov
in
sahf
scas
decl
shl
cmp
dec
ret
test
lea
sbb
out
add
aaa
rcr
mov
xchg
fs
ljmp
jb
ja
stos
sub
ret
scas
push
enter
xchg
adc
jns
inc
clc
mov
mov
xor
mov
mov
sti
ss
out
dec
sub
jp
inc
popf
dec
xchg
enter
and
add
pop
ljmp
xor
imul
jmp
sar
dec
mov
stc
cs
push
cmp
hlt
lea
insb
jge
mov
push
incl
pop
repnz
mov
mov
mov
sahf
fmuls
filds
add
incl
inc
insl
xlat
mov
ret
xor
xlat
idiv
add
xor
push
cmc
adc
push
xor
mov
cs
jmp
loop
rcrb
inc
dec
sbb
pop
cmpsl
sub
add
sbb
incb
add
loop
imul
push
ljmp
and
icebp
xor
mov
jmp
lock
cli
xchg
pop
or
inc
lcall
imul
adc
stos
xchg
adc
out
xchg
mov
xchg
lcall
pop
lods
inc
lret
shll
sub
mov
sbbl
mov
cmp
stos
jmp
push
push
popf
test
aaa
jle
pusha
mov
decl
adc
out
xlat
cmpl
popa
mov
xchg
xor
mov
cmp
cmp
fnstenv
lods
push
lods
fbld
or
mov
mov
aad
or
pop
mov
outsl
sbb
decl
dec
jnp
imul
jecxz
pop
push
adc
inc
jg
decl
aas
fwait
xchg
sub
push
lcall
fmull
pop
jp
cmpsb
jg
hlt
call
dec
rcll
mov
out
das
or
ljmp
sbb
fistl
fcoml
xor
ss
decl
sahf
sbb
dec
xchg
inc
xor
adc
push
xlat
cltd
xor
fcomip
incl
decl
in
sbb
jge
xchg
xchg
movsb
js
sbb
sub
ljmp
push
mov
jb
sbb
aad
xchg
jne
fdivr
jae
and
add
mov
pushl
sti
shl
movsl
adc
jge
add
gs
xlat
addw
jge
jp
leave
pop
insl
pushl
pop
mov
adc
loope
push
js
dec
scas
inc
pop
repnz
lret
ret
clc
aad
test
pusha
lock
out
inc
stos
inc
mov
mov
movsl
xor
clc
je
out
xor
imul
test
aad
daa
mov
into
fwait
rol
call
insl
out
or
mov
decl
cmp
xor
xchg
cmc
outsl
es
outsl
clc
das
out
dec
loop
pop
cmc
dec
aam
outsb
cmp
lock
rorb
cmc
pop
adc
stc
sbb
sub
pop
cmp
push
push
fnstsw
pushl
sbb
loop
sbb
mov
int3
cmp
and
lock
xchg
cltd
faddp
dec
das
repnz
out
adc
ja
imul
pop
mov
push
test
mov
lods
adc
lret
cmp
fisubl
push
and
lahf
das
and
jecxz
pushl
and
lret
ljmp
iret
push
add
sub
adc
rcll
adc
in
stos
mov
xchg
movsb
out
jmp
idivb
into
mov
mov
lret
pushf
fdivrs
mov
cmp
mov
pop
jmp
jge
bound
out
popa
in
adc
or
ficompl
sbb
dec
fistps
mov
sub
sbb
mov
pushf
out
repnz
js
dec
mov
pushl
ret
sub
sbb
xor
push
inc
fcoms
cmpsb
add
dec
cld
lcall
or
neg
pop
mov
sbb
faddl
lods
loopne
fildl
pop
and
loopne
fwait
in
mov
mov
inc
fisubrs
mov
sarl
xchg
negl
push
adcb
call
push
xorb
pop
bound
sbb
fldenv
sbb
mov
add
adc
enter
sbb
ljmp
cli
pushl
add
cmp
pop
and
dec
dec
inc
fbld
fdivrs
sbb
mov
adc
fiaddl
push
das
out
lods
and
lahf
sbb
push
or
testl
sbb
cld
nop
aas
lcall
push
add
push
lock
les
mov
mov
test
insl
ljmp
out
rcrb
aad
add
rorl
stos
pop
cmp
mov
stos
sub
jg
jmp
pop
shrl
inc
fldt
push
daa
ret
xchg
jp
dec
out
mov
xchg
lcall
decl
sbbb
jecxz
movsl
push
shrl
adc
push
call
out
cli
ljmp
push
sbb
xchg
jge
cmp
pusha
push
pop
push
jp
mov
dec
sub
imul
call
loopne
add
xor
or
rcll
jl
or
outsl
dec
ja
aas
ret
and
sbb
aam
fucomp
stc
mov
pop
sar
mov
jle
adc
and
push
cmc
mov
out
xor
aad
xchg
inc
daa
pop
cmpsb
jns
or
jg
decl
insl
popf
mov
je
pusha
jne
jle
gs
fistl
rol
rcl
bound
pop
jo
push
repnz
mov
scas
xlat
inc
add
andl
ficoms
enter
ljmp
pop
out
adcl
add
pop
xchg
cmp
gs
mov
aas
aas
out
int
or
lret
jl
clc
fildll
add
jmp
mov
out
inc
jp
dec
in
jbe
push
mov
cli
rolb
inc
hlt
pusha
sub
ret
gs
dec
fucomi
xchg
sub
adc
mov
ja
add
call
inc
dec
sbb
mov
shlb
adc
stos
rolb
mov
fsubrl
call
clc
ljmp
mov
xchg
pop
pop
xor
push
xor
incl
lret
sbb
or
ret
dec
mov
cmp
and
stc
or
loope
sbb
aaa
stos
stc
insb
or
xor
mov
ss
inc
cmp
out
rorl
jns
push
std
call
out
int
sub
and
fnstsw
jne
mov
pushf
or
mov
sbb
jmp
jge
xor
out
testl
push
push
dec
aaa
pop
call
imul
sbb
push
pop
add
ljmp
dec
sub
sbb
push
movsl
or
mov
fs
mov
sub
setne
inc
dec
jne
push
push
loopne
das
rolb
ffree
in
lock
pop
dec
dec
neg
popa
inc
pop
push
cmpsb
jo
inc
xor
mov
push
jg
pushf
cli
call
mov
das
mov
mov
imul
inc
fdecstp
int
in
cmc
ljmp
sahf
andl
sub
addl
sbb
jle
mov
lcall
pusha
or
lods
push
cmc
jl
jge
fistps
pop
pop
push
push
add
mov
cmpsl
loope
stos
clc
out
add
repz
les
cmp
stos
mov
andl
sbb
or
lcall
push
jle
int
insl
popa
inc
dec
lods
sbb
aas
push
andb
jg
scas
pop
or
test
cmp
stc
mov
add
icebp
pop
xchg
mov
mov
pop
or
incl
mov
pushf
dec
imul
push
mov
sub
inc
sbb
jg
pushl
xor
adc
icebp
into
sbb
shll
aaa
jp
lcall
cmp
mov
data16
test
mov
pop
push
fdivrs
adc
adc
sub
add
clc
loopne
pushl
mov
jnp
sub
push
push
repnz
inc
into
xchg
cmp
fbld
call
xor
cmp
push
sbb
in
je
pop
dec
loop
cmp
inc
movsl
in
incl
jge
jecxz
cmp
cltd
jne
outsl
cltd
pmulhw
fxch
mov
xchg
mov
pop
incl
mov
idivb
xor
jo
pop
mov
enter
arpl
mov
sti
out
test
dec
das
cmp
stos
pop
ds
xlat
mov
fs
push
sbb
mov
pop
xor
add
idivl
inc
mov
stc
clc
out
push
pushf
loope
xor
add
mov
sbb
lock
xchg
popa
clc
cmc
lret
enter
popf
add
sbb
mov
outsb
aaa
or
push
mov
fisubs
mov
stos
adc
sbb
lcall
cwtl
cmp
sqrtps
pop
int3
mov
addr16
mov
shrb
jmp
add
shll
repnz
decl
mov
sahf
push
sysret
xlat
xor
in
mov
push
pop
scas
mov
shl
shll
lcall
das
pop
xchg
dec
sub
dec
sbb
sbb
add
test
popf
xchg
dec
dec
mov
sbb
inc
jmp
pop
mov
sub
enter
pop
mov
das
mov
mov
in
call
pop
sbb
clc
daa
and
sbb
adcl
dec
push
cmp
pusha
pop
sub
decb
mov
adcb
sbb
xor
push
into
or
or
dec
insb
mov
and
mov
pminub
les
rorb
pop
aam
dec
mov
push
xor
fxch
stos
jmp
ljmp
push
cmpsb
pop
in
ss
je
and
lods
mov
add
std
pop
incl
inc
jb
dec
and
data16
cmp
clc
jg
jp
stos
es
dec
js
enter
lcall
pop
out
adc
pop
into
or
test
add
inc
out
in
mov
das
call
nop
iret
pop
mov
mov
pop
jae
lock
jns
rcrb
mov
popa
inc
add
addb
ljmp
sbb
add
inc
sets
push
xchg
mov
fisttpll
sti
mov
inc
jl
in
lahf
mov
dec
adc
mov
cld
mov
cmp
std
sbbl
mov
ljmp
pushl
sbb
push
cmpsb
or
push
jns
sarb
sti
mov
push
jno
jg
ljmp
dec
jmp
mov
rcr
sahf
arpl
jo
subb
lcall
incl
and
cmpl
sub
push
xchg
daa
inc
xor
mov
xor
and
ljmp
mov
test
jecxz
xor
pop
shrb
incl
dec
mov
fdivrl
jecxz
jbe
jo
rcrb
xchg
pushl
shl
pop
or
aaa
pop
lods
jo
ds
mov
sarb
jnp
hlt
outsb
fcomi
es
push
ljmp
stos
test
jecxz
movsb
and
loop
dec
scas
adc
inc
scas
imul
call
add
nop
rcll
jmp
ret
push
fucomi
outsb
and
in
pushl
aaa
stos
repz
mov
dec
pop
mov
push
push
inc
jp
add
lcall
rorb
les
jns
sub
call
lock
repnz
ljmp
sarb
xchg
sub
jge
sti
and
bound
loope
cmp
cli
or
mov
cs
adc
out
lret
jmp
loope
dec
mov
jecxz
cmpsl
cwtl
sbb
pop
mov
add
pushl
mulb
stos
xor
push
sti
fildl
inc
insb
pop
enter
dec
ror
es
push
cmp
decl
xlat
imul
push
xlat
data16
ljmp
and
and
ss
sub
pushl
sbb
cwtl
sub
inc
push
jae
cmc
and
ss
int
dec
jl
or
mov
daa
xchg
mov
sarl
fists
ds
ljmp
sar
mov
out
fistpl
dec
jp
arpl
out
in
lcall
xor
sbb
xchg
xchg
or
sar
pushl
pusha
push
ret
jge
loope
push
leave
nop
in
daa
int
jno
cld
xlat
aaa
imul
pushl
mov
and
nop
jge
das
jl
pop
inc
clc
xchg
fwait
sub
or
mov
jb
outsb
int
shlb
sub
loop
inc
mov
pushl
jne
jb
xchg
xorb
inc
dec
pop
xchg
data16
loopne
sbb
mov
je
pop
push
stc
mov
cwtl
scas
sub
arpl
out
ljmp
adc
ja
icebp
shlb
movsl
mov
push
rorb
aad
ljmp
outsb
clts
loope
cs
int
xchg
push
in
jecxz
dec
aad
adc
jmp
inc
pushl
inc
add
ret
ds
and
fildl
jne
push
cmp
icebp
ljmp
lcall
fwait
push
pop
fimuls
and
outsb
push
and
or
ljmp
int3
xchg
in
push
inc
int
pop
in
xchg
idiv
ficomps
popa
fstps
bound
cmp
and
dec
int3
inc
xchg
sbb
adc
push
xor
add
aam
fst
cmp
stc
jne
fildl
xor
xlat
in
shrb
or
pop
test
adc
clc
call
clc
add
xor
mov
pushf
sbb
ljmp
jle
fldt
jbe
sub
xchg
pop
jg
ss
ljmp
xor
xor
push
loop
adc
jmp
in
pushl
jo
mov
lds
inc
mov
add
scas
xchg
xchg
and
stos
incb
hlt
clc
mov
fs
in
xchg
sub
pop
scas
pmulhuw
ss
rcrl
or
test
jle
fwait
jnp
sar
dec
add
push
inc
xchg
leave
add
xor
call
xchg
jg
in
and
fildll
xchg
sbb
push
inc
lock
out
call
push
xchg
notb
push
jnp
push
mov
lcall
and
mov
xor
pop
jle
arpl
subb
cld
ljmp
mov
dec
hlt
sub
js
subb
out
lcall
ss
jge
xchg
imul
dec
pop
cmp
or
out
sub
xor
inc
inc
loopne
int3
ret
dec
xchg
icebp
pop
lock
sub
rcrb
adc
mov
push
fnstenv
mov
sub
outsb
test
jl
mov
dec
fstps
mov
insb
jecxz
pop
or
aas
lret
fistps
lcall
clc
test
mov
cmp
sbb
xchg
push
les
adc
fmul
lahf
jo
push
incl
in
fnstsw
insb
mov
incl
push
inc
fdivs
lods
out
push
xchg
mov
addr16
ljmp
in
push
sub
sbb
mov
xchg
lcall
pop
mov
mov
fistl
xlat
jmp
xorb
out
inc
sbb
clc
adc
xor
filds
add
jl
daa
lcall
pop
mov
sbb
jg
insb
mov
lds
push
pop
push
lods
inc
sti
cld
sbb
push
cmp
push
cli
fistpl
pushl
or
ljmp
dec
stos
movsb
mov
push
sar
dec
das
clc
lret
lcall
add
jecxz
pop
pop
mov
xchg
or
shrl
mov
and
dec
xchg
and
clc
pop
jmp
mov
fcomip
stos
ss
sub
jbe
fsubrp
shrb
xchg
pop
pop
gs
push
mov
in
adc
mov
decl
test
out
popf
push
outsl
aam
xor
clc
popa
and
data16
pop
cmp
dec
popf
push
dec
cmc
mov
sti
icebp
bswap
aaa
mov
outsl
jmp
sub
push
lock
pusha
aas
call
push
cmpsl
xchg
repnz
or
xchg
leave
bound
add
add
xorl
js
daa
mov
fcmovb
es
repnz
arpl
mov
mov
ja
adc
push
mov
mov
or
movsb
add
cmp
rclb
pop
incb
and
jmp
in
ss
stos
jp
dec
jae
out
sub
add
mov
jmp
out
sbb
mov
hlt
adc
je
les
add
xchg
xchg
jmp
push
sbb
call
push
mov
mov
pop
in
push
movsl
inc
pusha
in
mov
lcall
add
pusha
xor
pushl
gs
sub
push
cmpsb
cld
dec
and
test
addl
nop
stos
mov
lcall
xchg
pusha
pop
aaa
push
push
data16
dec
ficoms
cmp
add
dec
and
call
mov
dec
loop
in
inc
sbb
pushf
int3
fldl2t
mov
and
scas
sub
inc
xchg
push
bound
push
cwtl
add
out
in
xorl
pop
repz
jmp
scas
sub
aam
mov
sub
push
sub
lahf
sarl
das
jg
jle
adc
ljmp
lret
jns
push
inc
xchg
mov
int
or
movsb
and
or
sub
enter
pop
dec
mov
shrb
fcomps
hlt
push
dec
mov
js
xor
mov
subb
xor
setnp
add
inc
dec
xor
adcb
loope
in
cmp
dec
add
es
imul
ret
push
pop
cs
cmc
sub
xor
imul
aad
inc
pop
mov
dec
loop
add
mov
push
fwait
mov
or
repz
std
in
mov
jmp
xor
xor
mov
fidivs
imul
add
fnsave
mov
jge
sti
mov
shrl
pop
mov
dec
add
xchg
fmuls
xchg
xor
or
mov
fistpll
adc
xchg
ficomps
mov
bound
adc
mov
add
popf
jp
pop
lock
or
aad
popa
cmp
pop
or
push
incl
cmpsb
lds
xor
cmp
xlat
inc
and
idivl
lcall
stos
mov
jl
inc
gs
in
in
movsb
pop
mov
sti
scas
fnstcw
xor
aad
dec
das
xchg
mov
add
lcall
jns
xchg
mov
inc
sarb
and
xor
stos
mov
test
out
cli
call
loopne
loop
xor
popa
push
mov
jp
cmpsb
mov
mov
xchg
pushl
cld
push
lds
mov
push
dec
sbb
mov
cld
adc
cs
lcall
mov
jge
cmpsl
imul
ret
cmp
mov
jmp
jl
cltd
push
add
rol
sub
push
dec
jnp
test
scas
jbe
xchg
in
pusha
push
lahf
dec
xor
adc
mov
pop
add
stos
add
popf
cmp
into
xchg
fnsave
ds
std
ljmp
xor
ljmp
insl
cwtl
jo
lret
adc
dec
xor
mov
inc
inc
xor
and
push
push
pop
and
das
sar
je
in
in
xlat
mov
sbbb
or
xor
jmp
xor
jl
iret
int
add
fadds
rorb
xchg
lea
xchg
jnp
push
push
out
lret
pushl
orl
and
repnz
inc
test
mov
loopne
bound
dec
inc
icebp
pushl
cli
orl
sbb
daa
les
inc
push
int
stc
ret
stos
test
mov
lret
mov
rorl
loop
dec
mov
or
push
adcb
lcall
lcall
jo
movsb
sbb
push
les
sti
js
xor
and
fwait
data16
icebp
pop
pop
insb
cwtl
fcos
call
leave
jbe
and
cltd
mov
mov
ljmp
imul
ljmp
cmpsl
lret
rolb
xchg
pop
test
out
je
cltd
ss
shlb
xchg
push
inc
incl
cli
mov
jmp
mov
arpl
mov
fbld
push
xor
mov
xor
testl
jne
andb
std
mov
stos
lds
shl
mov
mov
out
xchg
shll
ljmp
jmp
sbb
xchg
ljmp
cmp
adc
jle
pop
inc
test
les
pop
stos
add
bound
sub
xchg
repz
decl
cmp
loopne
push
ljmp
add
gs
mov
xor
es
jg
jl
mov
pop
sti
imul
mov
pop
mov
jne
adc
and
in
decl
fmul
jle
cmpb
cs
data16
clc
jmp
inc
iret
add
bound
sub
shl
test
test
or
repz
daa
ss
cmpl
jmp
into
mov
jge
es
lret
adc
sub
fmull
sub
stos
jmp
or
lcall
call
fs
sbb
lcall
jo
xchg
pop
bound
lods
mov
adc
xchg
fdivrs
popa
je
mov
cs
pop
fsub
ss
inc
jae
mov
push
gs
shll
and
les
iret
mov
loopew
ljmp
xchg
lahf
jge
mull
mov
mov
cmp
cmp
stos
cmp
cmpsl
jnp
js
mov
mov
mov
add
xor
jnp
repz
aam
or
pop
mov
decl
adc
cltd
loope
fildll
test
jns
icebp
mov
or
imul
lds
cmpsb
pop
mov
sarb
mov
mov
jns
and
and
incl
jp
stos
push
pop
xor
pop
jmp
imull
lahf
and
scas
add
jl
into
idiv
jg
lcall
push
clc
jbe
orl
out
and
movsb
sbb
xchg
fistpll
mov
add
mov
cmp
in
sub
in
stos
dec
push
mov
inc
sub
movsb
xor
jnp
ds
push
xchg
jne
and
sub
test
sub
std
retw
sub
mov
and
stos
jb
adc
int3
mov
jo
jmp
sbb
sbb
mov
outsl
xor
fistps
push
and
xchg
mov
loope
ret
imul
lret
cwtl
sti
popa
loop
mov
push
pop
insb
decl
in
sub
stc
sub
ss
inc
outsl
push
push
xchg
gs
jmp
mov
push
push
mov
or
push
loop
cmpsl
adc
ds
out
aaa
incl
cld
insl
mov
inc
xchg
negb
xchg
insb
lods
rcr
dec
fbstp
fisubs
leave
jg
pushl
popa
pop
mov
mov
or
jbe
lds
call
cld
inc
xor
stc
mov
inc
jno
push
xor
add
insb
pusha
outsl
les
inc
inc
decl
repnz
testb
pop
icebp
rolb
cmp
add
mov
or
mov
push
xchg
pop
push
mov
and
cmpsb
mov
inc
fisttps
pushf
nop
ljmp
scas
mov
ret
cmp
jmp
push
xor
mov
push
aam
xchg
jnp
or
insl
lea
pop
ret
xor
push
cmp
jmp
cli
decl
adc
std
iret
adc
leave
shl
pushf
xor
or
mov
cmp
pop
cmpl
and
testb
icebp
int3
iret
lds
push
mov
stc
push
insl
mov
dec
adc
das
inc
aaa
mov
test
into
mov
rcll
imul
decl
ret
mov
fstpt
add
repnz
in
push
stos
mov
pop
push
mov
nop
sarl
adc
push
or
mov
jnp
mov
subl
les
sar
jmp
dec
mov
iret
sub
addl
hlt
sub
enter
decl
mov
lock
adc
or
cli
push
mov
fs
pop
leave
pop
mov
repz
call
and
inc
add
add
sbb
leave
lcall
shll
push
andl
aaa
inc
jg
dec
jl
cmp
fs
jl
jp
and
lcall
loope
loop
lods
mov
repz
jp
fwait
mov
call
enterw
xchg
outsb
pop
xor
push
mov
bound
cmp
dec
and
and
xor
mov
jl
fnsave
pop
rorl
add
jmp
daa
and
xor
adc
sbb
and
mov
ljmp
sub
xlat
jae
insb
push
out
xor
shlb
call
mov
xchg
ucomiss
mov
js
mov
call
add
cs
xchg
pop
jle
sbbl
adc
in
mov
jae
test
pop
aaa
sub
aas
and
rorl
and
inc
cli
jg
jns
mov
movsl
decl
ds
not
jmp
lea
adc
dec
push
dec
pop
shrb
xchg
fildll
push
push
xor
push
adc
dec
fmul
hlt
xchg
sarb
cltd
outsl
mov
in
mov
add
sub
or
incl
dec
fdivs
cmp
int3
cli
mov
cld
repz
ret
or
inc
int3
insb
in
ljmp
bound
xchg
sub
test
sti
add
push
inc
dec
lcall
dec
jno
aaa
xchg
push
ljmp
je
fxch
cmp
jp
loope
call
inc
pop
or
and
rcrb
push
in
cmp
mov
sub
es
scas
mov
pop
mov
sub
adc
imul
push
jo
imul
insb
fwait
xor
rcr
test
call
andl
cmc
xchg
data16
call
or
or
std
push
xor
aaa
fcmovnb
fisttps
std
decl
mov
data16
inc
mov
repnz
decl
or
cmp
out
jbe
aaa
add
jb
or
jno
and
ds
stos
decl
mov
in
aam
in
mov
dec
mov
or
xchg
out
jb
xor
mov
insb
sbb
push
pushl
jb
jle
pop
sbb
mov
mov
mov
or
aaa
sub
aaa
lret
add
jmp
add
and
sbb
out
imul
push
inc
and
ret
rcrb
stos
in
pop
adc
popa
add
fsincos
push
cli
cwtl
scas
pop
movsl
sub
mov
lcall
out
cmp
and
mov
les
xchg
xor
jne
mov
cmp
hlt
adc
add
std
pushl
pop
xchg
outsb
mov
mov
jecxz
addr16
push
xchg
adc
jg
decl
out
xchg
push
jmp
pop
inc
push
pop
pop
repnz
nop
or
ja
dec
cmp
pop
hlt
insl
in
fistpl
mov
cmpsb
ret
sub
stos
cmp
mov
hlt
mov
shl
hlt
loop
nop
stc
pop
ljmp
cld
pop
rolb
dec
mov
and
mov
cmp
bound
cld
mov
dec
imul
sub
sub
push
pop
stos
iret
insl
outsb
add
sub
clc
in
cmpsb
ljmp
dec
jb
jl
cmp
xor
aaa
test
push
clc
lcall
out
or
cli
rol
add
mov
cmp
movsb
jns
xor
mov
xchg
xor
cld
outsl
loopne
mov
insl
push
xor
int
fildll
into
inc
add
fiaddl
clc
roll
sbbl
xchg
jb
cld
sub
mov
jge
int3
pop
xor
enter
jns
inc
push
roll
adcb
mov
xor
dec
add
xchg
sub
mov
mov
xchg
jae
test
outsl
clc
lcall
mov
mov
movsl
dec
dec
cmp
cmpsl
and
dec
add
mov
jb
mov
loope
xchg
je
loope
es
in
ret
pushf
pmuludq
or
fildll
and
adc
call
inc
sub
ljmp
pusha
cmp
incl
push
sahf
movsb
dec
inc
inc
xor
nop
push
dec
sbb
lea
repz
incl
paddq
pop
pop
or
js
adc
mov
mov
addr16
dec
push
out
faddl
add
clc
cltd
mov
adc
mov
lods
enter
mov
adcl
mov
cwtl
adc
adc
push
or
push
inc
mov
adc
decl
std
out
aam
jne
in
mov
xor
test
repnz
jae
dec
shll
mov
in
xchg
std
cmp
adc
pushl
out
loope
push
mov
push
sahf
popa
mov
lcall
and
cwtl
push
dec
push
out
add
fisttpll
sbb
cmp
and
cmc
rcrb
push
ret
mov
mov
mov
dec
pop
std
repnz
daa
jp
adc
jle
push
arpl
js
jb
xchg
scas
cmc
es
cltd
push
fsts
test
in
sub
dec
dec
popf
jno
loop
mov
mov
pop
mov
mov
dec
adc
pushf
inc
dec
addr16
iret
loopne
ja
cli
push
mov
add
lret
xchg
lock
decl
xor
and
inc
scas
idivb
call
add
ljmp
sarl
xchg
jns
push
lret
mov
mov
sub
cwtl
mov
mov
lds
addr16
mov
push
imul
sbb
hlt
les
cwtl
mov
or
pop
rorb
ficoms
adc
jp
mov
push
mov
sbb
mov
mov
mov
daa
mov
xor
arpl
bound
mov
das
push
lock
cwtl
push
cmc
loopne
jmp
bound
jmp
outsb
push
and
lods
pop
lock
outsb
popf
std
mov
mov
out
pop
scas
clc
outsl
dec
push
popf
sbb
mov
js
fcomip
dec
test
mov
lods
fimuls
and
jg
daa
xor
jg
imul
ljmp
mov
pushf
ds
adc
mov
push
gs
dec
out
ljmp
mov
and
scas
mov
out
daa
stos
jmp
addr16
push
mov
mov
jle
shl
aam
pop
js
loopne
push
ljmp
dec
nop
mov
cmp
lock
lcall
or
shrl
test
int3
in
lds
mov
clc
jl
push
mov
or
add
xchg
cmp
call
add
xorl
mov
cmpsb
mov
cmc
outsb
int3
adc
cwtl
cli
mov
push
leave
xchg
test
and
cmp
and
mov
add
std
aad
push
hlt
dec
or
inc
fdivs
aad
incl
push
add
push
pop
cli
mov
fldenv
or
lret
ljmp
add
data16
push
les
ret
stos
movsl
aad
mov
xorl
mov
repnz
ret
subl
imul
sbb
sub
push
adc
push
arpl
mov
sub
and
sahf
das
lods
scas
push
pop
inc
adc
mov
push
xchg
mov
iret
shll
mov
mov
ljmp
ljmp
add
adc
daa
dec
and
xchg
lcall
xchg
rorl
call
bound
shrl
dec
stos
rorl
in
add
cmp
jns
fucomip
lcall
lods
repz
rcrb
lret
mov
movsl
jg
dec
xlat
cmp
and
test
gs
repz
out
jg
rolb
jge
and
mov
dec
sti
push
push
call
pusha
sbb
aaa
mov
ljmp
jp
test
add
into
xchg
inc
incl
es
inc
and
movsl
lcall
out
cmp
ret
ljmp
xor
imul
fwait
add
jle
cmc
adc
jp
ss
roll
jg
test
ret
out
sub
mov
jge
push
cli
ljmp
jbe
sub
bnd
adc
and
ljmp
push
pop
and
add
sbb
flds
loopne
jg
decl
mov
test
outsb
fsts
scas
aas
and
mov
std
mov
mov
jl
jle
cmp
stos
psubw
jo
lcall
jg
scas
mov
scas
in
pop
adc
outsb
stc
and
or
push
fstpl
in
pusha
mov
xchg
sbb
cs
stos
jne
xor
iret
jo
mov
test
adc
cmp
xchg
pop
adc
xchg
jmp
das
cmp
pop
add
cmp
and
ds
or
jns
fldt
inc
ret
xor
test
ljmp
add
ja
ss
lahf
inc
dec
mov
sub
gs
inc
sub
decl
push
or
sub
sbb
push
adc
push
sbb
dec
int3
mov
push
lcall
and
push
adc
insl
inc
fidivl
call
test
ljmp
pop
mov
ret
ljmp
leave
out
push
xor
mov
ljmp
in
jnp
xchg
mov
or
push
push
subb
mov
inc
sub
out
imull
dec
movsb
stc
jno
call
xchg
dec
popa
cmp
cmp
icebp
xlat
and
paddb
sti
dec
push
jmp
test
aam
xor
jmp
jne
sbb
pop
stc
or
sbb
pushl
jmp
mov
inc
fdivrl
imulb
pusha
insl
call
xor
in
stos
aam
mov
xchg
sbbb
mov
pushl
pop
rcrb
sbb
push
out
push
xchg
or
cltd
pop
mov
decl
add
data16
pop
push
rolb
imul
or
push
jnp
ljmp
xchg
inc
lret
mov
jl
adc
cs
popa
adc
fistl
loop
repnz
test
cltd
push
movsb
es
jno
ja
mov
inc
dec
cmpsl
jns
stc
push
jecxz
fnstsw
jmp
jmp
scas
dec
aas
cmpsl
and
adc
es
das
mov
ficomps
outsl
imul
lcall
cmpsb
mov
cwtl
dec
faddl
and
dec
clc
mov
xor
test
cmp
jle
or
adc
and
mov
jl
mov
decl
cmp
std
jle
or
test
cmp
jmp
or
xchg
cmp
lds
nop
jmp
inc
xor
mov
push
push
adc
inc
stos
repnz
fimuls
mov
fsub
inc
je
incl
or
push
pushf
push
insb
inc
mov
or
mov
or
pop
lock
out
int3
dec
dec
ds
lds
push
jo
jge
fdivs
jg
inc
arpl
add
jae
push
inc
loope
add
sbb
cmc
mov
loop
jge
sub
ret
in
xchg
lds
fldenv
inc
dec
jmp
cmp
decl
mov
xchg
pop
leave
hlt
jae
cmpb
add
add
pushl
adc
xchg
ljmp
push
or
xchg
mov
sub
ljmp
dec
shr
mov
shlb
xchg
inc
lock
sbb
loopne
pop
dec
jae
aam
test
mov
mov
rorl
lret
leave
xchg
jns
pop
shlb
pop
xchg
mov
icebp
cmp
inc
repnz
lcall
sub
mov
xchg
ss
call
mov
jmp
dec
pop
stos
fcoms
std
inc
dec
fsubrl
scas
jg
fs
add
std
sub
fbstp
ffree
loop
xor
in
sbb
and
mov
mov
cmp
and
push
jge
jg
mov
in
loope
fidivrl
push
loopne
sub
inc
pop
mov
pop
dec
mov
sub
out
dec
xor
lcall
xor
xor
xchg
push
cwtl
out
nop
enter
imul
sub
mov
mov
in
scas
mov
ja
and
lahf
xor
xchg
lcall
mov
scas
cwtl
fidivs
inc
out
pop
sti
cmp
jne
mov
mov
xchg
or
jmp
int
inc
js
fdivrs
lahf
pop
cmc
js
pop
into
lds
push
call
inc
repnz
stc
std
mov
outsl
mov
mov
adc
mov
mov
addr16
xchg
lock
and
decl
arpl
jp
flds
dec
pop
sarl
dec
and
push
sub
ret
lock
decl
push
add
mov
pop
imul
pusha
cmp
psadbw
cwtl
mov
mov
ljmp
xchg
lcall
jo
outsb
std
jns
arpl
popa
add
push
in
mov
pop
push
sarb
jae
jmp
popa
mov
leave
xchg
push
jmp
ds
xor
fcom
bound
push
push
cli
sti
cs
test
mov
je
sub
adc
cmp
fcomip
mov
push
cs
leave
pop
outsb
cld
inc
xchg
xlat
into
pusha
fcos
pushl
jnp
imull
sbb
xor
js
or
adc
outsb
scas
sbb
inc
xor
cli
and
mov
popf
mov
je
push
lea
rcr
xlat
cmc
xor
imul
or
sar
pushl
ret
mov
push
or
or
xlat
sbb
sub
shll
jmp
push
into
inc
mov
cs
lahf
mov
mov
repnz
adc
push
xor
pusha
sar
test
mov
jle
mov
pushl
adc
xor
incl
test
adc
xor
push
jo
add
adcl
push
movsb
cld
ss
lahf
outsl
stos
sbb
lret
sar
call
and
mov
inc
push
pusha
dec
int3
mov
das
fildl
pop
mov
out
push
jo
ljmp
clc
inc
pop
ss
cmp
pop
jne
push
xor
inc
xchg
sub
scas
cmp
jg
repnz
jmp
mov
mov
pop
jle
pop
cmpsl
jmp
jnp
add
ljmp
xor
and
dec
clc
ljmp
pushf
inc
push
jae
mov
add
decl
sti
incb
mov
push
push
xchg
int3
ret
xchg
inc
imul
fcmovu
leave
mov
scas
test
fldt
add
and
shl
push
add
mov
lods
ss
and
in
inc
jo
scas
mov
mov
dec
jecxz
rcl
shrb
pop
and
dec
push
dec
push
imul
rorb
xchg
jl
mov
jns
jo
adc
pop
sbb
jmp
fucom
aas
movsl
call
shrl
leave
pop
pop
dec
dec
repnz
and
insl
fdiv
mov
pop
in
or
incl
gs
orl
sbb
lock
rorl
mov
ljmp
inc
fadd
jno
mov
ja
in
repz
sbb
or
out
sti
popa
fbstp
inc
cmp
scas
ds
lret
jp
add
cmpl
in
dec
scas
add
popa
aad
sti
insb
push
mov
inc
add
stc
lods
xor
lea
imul
dec
ret
add
dec
outsl
in
xor
lcall
mov
dec
mov
icebp
add
stos
dec
in
cld
cmc
pop
push
ja
cmp
scas
call
popf
mov
mov
sub
shll
out
call
xchg
mov
repz
in
cmpsb
test
mov
lahf
jne
xchg
decl
dec
out
or
or
aas
ret
sub
jnp
push
pop
pop
arpl
enter
xchg
jo
das
mov
pop
pop
mov
pushl
lcall
leave
push
data16
arpl
add
adc
stos
frstor
pushl
sbb
cmp
mov
xchg
jl
decl
fs
or
adc
lea
int3
lret
adc
and
mov
mov
jo
push
int
fists
pop
daa
adc
nop
dec
adcb
ds
jmp
or
mov
inc
dec
add
sbb
fadds
cs
push
sbb
stos
push
jp
loopne
stc
int
in
dec
rcl
pop
in
in
adc
lahf
mov
lcall
ljmp
popa
xor
inc
jbe
sub
sub
mov
test
mov
aas
aas
test
les
mov
fdivrp
std
mov
out
sub
adc
dec
sub
cmp
dec
call
aaa
mov
clc
mov
add
xor
xchg
or
jbe
icebp
into
cltd
cmp
jg
repnz
push
subb
jmp
push
adc
push
pop
pop
and
lcall
and
cmp
pop
adc
inc
sahf
repnz
movsb
es
mov
lahf
int3
push
cmp
rcrl
add
and
dec
push
mov
jg
invd
cmp
mov
jae
push
cld
cmp
popa
call
or
fs
fbld
shlb
int3
xor
push
add
std
lock
and
push
fimuls
incl
and
loopne
rclb
mov
cmpsl
jge
xchg
pop
hlt
test
icebp
fsubrs
insb
pop
mov
decl
ljmp
push
das
inc
roll
mov
mov
rolb
sbb
test
mov
or
dec
icebp
push
cwtl
mov
sar
mov
add
cmc
sbb
sbb
cmova
mov
mov
aam
loopne
push
insb
push
movl
pop
inc
ljmp
cmpsb
xor
and
cmp
add
jecxz
mov
adc
push
fsubrl
stos
popf
xchg
stc
nop
pop
enter
mov
push
jle
mov
pusha
cmc
mov
pushl
sbb
movsb
fnsave
fildll
cltd
inc
sbb
inc
cmp
nop
pop
pop
lahf
lock
les
cld
cmpsb
subb
dec
lret
jle
pushl
dec
pop
jnp
inc
ret
js
das
loopne
fs
xor
adc
cmp
add
pinsrw
in
dec
daa
push
inc
sub
cmp
popf
aam
mov
data16
and
jl
mov
fnstsw
mov
push
pushl
cmc
test
ret
jmp
outsl
pcmpeqw
cmp
pop
les
aam
add
clc
roll
js
ret
mov
mov
mov
push
lock
fidivrl
lret
xor
incl
pop
loope
lds
dec
xchg
ss
out
add
mov
dec
lods
xchg
push
std
sub
loop
add
pop
push
out
push
cmp
dec
decl
dec
xor
xlat
mov
mov
or
mov
inc
mov
call
sub
xchg
shr
stos
add
pop
sbb
je
cmpsl
ret
xchg
xlat
stc
add
pop
pushl
popa
xor
shrl
sbbl
call
arpl
fwait
xchg
popa
add
pushl
cld
add
jl
push
mov
and
stos
jns
mov
lock
jbe
ljmp
fs
dec
out
in
loopne
clc
lock
mov
sub
cli
cs
std
das
aad
xor
push
call
mov
cli
pop
mov
pusha
ljmp
repnz
pop
lods
or
je
mov
jbe
cmpsl
xchg
lods
xchg
cld
ljmp
imul
out
pushf
add
inc
mov
stos
push
and
xor
call
lcall
jge
test
xlat
popf
lcall
cwtl
fcmovb
adc
inc
repnz
incl
xchg
sbb
inc
sbb
dec
sbb
out
ss
subb
lcall
xchg
jns
cmc
lods
adc
aaa
ds
scas
pop
dec
jg
xchg
data16
sub
int
mov
add
iret
jne
test
sub
xchg
test
jmp
insl
mul
repnz
dec
xlat
push
xor
add
incl
jno
jo
dec
inc
xchg
stos
mulb
sub
jmp
push
adcb
int
sub
mov
ficompl
sub
inc
sbb
jmp
mov
movsb
rolb
mov
lahf
rcrl
std
rcrl
sub
test
or
xchg
add
aas
cwtl
std
jb
out
out
and
jmp
mov
imul
or
push
in
int3
inc
inc
test
lcall
iret
jp
xor
add
mov
sbbb
into
int
mov
mov
push
fwait
dec
dec
imul
push
lds
iret
xchg
jbe
jl
ljmp
push
jno
pop
adc
ret
test
mov
and
pop
inc
or
add
incl
pushf
ror
jg
sbb
jl
and
fs
jmp
sub
jmp
ret
xlat
pop
or
mov
cmp
mov
insl
cmp
rorl
jle
jb
xor
mov
ljmp
mov
push
jmp
dec
add
jae
sahf
je
lods
cld
call
pop
jo
jmp
iret
pop
loope
ret
add
sub
dec
pop
daa
add
and
pop
push
pop
or
dec
cmp
jg
and
sbb
lea
cwtl
pop
lcall
ljmp
clc
cltd
jecxz
jmp
jg
dec
mov
sti
xchg
aas
test
adc
outsb
jbe
js
xor
adcl
gs
inc
fwait
mov
jl
rorl
mov
dec
mov
push
mov
pop
dec
arpl
fdivp
mov
add
sbb
rol
and
fldt
in
lds
cmp
roll
cmp
cs
jp
adc
cmp
inc
in
and
pushf
cs
mov
pop
movsl
xor
stc
pop
pushl
in
lods
jmp
cwtl
cmp
in
sbb
xor
and
sbb
andb
aam
xchg
or
xor
out
dec
dec
test
in
dec
pop
lock
and
pop
std
add
jnp
adc
enter
inc
inc
mov
rorb
dec
fiadds
stos
mov
movsb
mov
clc
adcb
pop
mov
fistps
es
popa
dec
add
pushf
rcrb
stos
jg
add
cmp
inc
mov
pop
lds
call
mov
roll
push
jns
ljmp
jp
dec
jno
dec
jg
and
fadd
std
loope
imul
daa
int3
ja
test
pushl
fwait
sbb
das
xchg
pop
insb
fldcw
out
and
cmp
mov
mov
nop
jg
fs
out
rolb
push
mov
pop
xchg
rorl
dec
mov
xor
insl
mov
pop
mov
dec
mov
in
loope
roll
mov
add
ss
mov
into
test
shlb
loopne
lods
mov
cmp
lds
stos
pop
out
mov
int
std
mov
mov
cmp
iret
sbb
fcoml
jno
sbb
ret
call
xor
sbb
popf
jbe
sub
push
mov
and
cltd
aaa
or
addl
bound
lcall
ja
add
add
addr16
pop
push
add
cli
scas
inc
mov
add
mov
jg
int3
jp
or
xchg
iret
std
pushl
cld
push
inc
mov
mov
orl
inc
sti
cmp
cmp
cld
mov
out
out
shrb
std
es
cmp
leave
mov
mov
pop
rorb
mov
les
mov
push
xchg
adc
mov
lcall
mov
fisttpll
test
testb
or
and
decl
data16
adc
mov
ds
sahf
shl
dec
pause
add
call
decl
or
jo
adc
lods
and
xchg
jnp
pop
call
inc
mov
lcall
loopne
add
and
sbb
push
xchg
stc
andl
add
mov
std
push
pop
mov
call
cmc
dec
mov
mov
mov
pop
fcmovu
jge
add
jae
out
pop
int
std
incl
xor
js
cmp
or
lock
addr16
sub
jo
dec
incl
dec
popa
ret
jne
in
or
pop
jp
movl
dec
xor
mov
int
dec
in
divl
or
xor
sarb
inc
sbb
mov
inc
rcrl
decl
out
mov
mov
repnz
push
mov
daa
daa
shrb
xchg
xchg
xchg
mov
jae
pop
jb
leave
lret
ret
repz
sbb
loope
ret
ljmp
pop
jne
idivl
pop
push
lds
repnz
dec
fwait
sub
hlt
fdivrl
add
lcall
shr
data16
or
mov
lret
push
xchg
dec
repz
xchg
sbb
cld
pushl
std
xchg
daa
iret
leave
sahf
xchg
arpl
jmp
ja
stos
ds
icebp
insl
pop
jne
or
push
inc
mov
je
ret
jmp
fbld
add
lcall
gs
push
gs
xchg
push
cltd
or
ja
cmp
add
pop
ljmp
or
jae
das
les
fnsave
call
dec
push
cltd
out
sbb
mov
jge
imul
orl
jmp
adc
jb
xchg
push
imul
mov
ljmp
jp
rorl
stos
sub
scas
mov
aam
dec
test
loopne
aaa
add
add
pushl
mov
push
aam
pop
les
lcall
daa
push
push
xor
lock
jmp
fldcw
mov
ret
mov
add
gs
push
pop
xlat
cmpsl
sub
test
mov
pop
in
addr16
jmp
aam
cmp
dec
xor
jae
pop
cmp
pop
daa
loope
jo
loopne
cs
adc
push
push
hlt
xchg
push
lahf
mov
and
or
leave
dec
mov
dec
aaa
std
lret
stos
scas
insl
xor
mov
add
adc
mov
push
jecxz
inc
and
lcall
outsb
sbb
add
add
mov
ja
call
scas
movsb
fdivr
jle
pop
mov
mov
jp
mov
or
xor
adc
push
pop
add
add
orb
cld
push
into
inc
sub
mov
xchg
xor
sub
sbb
push
or
pop
mov
addb
cld
cwtl
icebp
xlat
andb
rcrl
aas
sahf
mov
fnstenv
mov
fnstsw
jg
out
out
aas
imul
rclb
mov
das
sar
test
inc
int3
popf
xchg
mov
je
mov
add
fbstp
adc
jle
lods
out
mov
xor
pop
iret
push
je
fcomip
mov
sub
jl
xor
push
cmp
out
mov
dec
ss
incl
test
int3
shl
std
sub
outsb
dec
nop
insb
in
jno
out
cs
js
ljmp
pop
jge
mov
xor
pop
sbb
and
mov
dec
inc
pop
hlt
push
in
adc
lods
cmc
nop
jg
jnp
mov
dec
push
ficoml
repnz
mov
enter
lcall
inc
add
dec
xorb
int
xchg
incl
add
cmp
push
or
ljmp
dec
adc
push
ret
fwait
scas
lcall
adc
dec
xor
lock
sub
xchg
stc
push
ficompl
mov
ljmp
stos
add
ret
sahf
pop
mov
sub
cmp
sub
imul
cmp
repnz
adc
dec
pop
xor
mov
or
kunpckwd
out
and
dec
cmp
adc
jae
mov
mov
test
ljmp
add
cmp
enter
sub
jmp
daa
xor
mov
ljmp
push
sub
stos
fisttpll
aas
mov
arpl
arpl
in
fbstp
out
adc
addr16
jge
inc
xchg
dec
mov
xchg
cwtl
mov
mov
xchg
or
add
jmp
es
fiadds
sub
add
push
js
push
mov
fwait
movsb
pop
cmc
jmp
in
bound
inc
in
push
sub
das
shrl
es
sqrtps
sbbl
in
das
pop
icebp
pop
push
jb
fcom
pop
inc
fwait
and
in
xchg
rorb
decl
cmc
iret
sbb
js
jle
les
adc
and
inc
mov
dec
sbbl
dec
in
sbb
nop
pop
pop
aas
aas
jns
rorl
out
xchg
lea
and
repnz
jmp
fistl
stc
mov
cmp
in
loope,pn
dec
enter
mov
or
lret
es
test
out
lret
imul
in
ret
sbb
mov
cld
cli
jno
cwtl
shll
push
adc
xchg
jg
pop
pop
xor
mov
mov
xchg
sub
cltd
orb
fsubl
sbb
adc
push
inc
xchg
fistpl
mov
mov
xchg
xchg
hlt
out
mov
sar
rcrl
incl
imul
lret
pop
sbb
and
out
push
cld
lahf
hlt
movsb
movsb
in
or
fcomps
jmp
scas
pop
xor
jno
add
push
cmp
pushf
push
testl
cmp
push
popl
negb
mov
xchg
ja
hlt
sarl
dec
ret
xor
jo
in
jmpw
out
movsb
mov
outsb
pop
xorl
in
or
push
cs
insl
lock
movsl
jnp
int
inc
cmp
js,pn
inc
js
jle
cmp
lahf
and
mov
mov
xor
subl
std
clc
fs
call
xor
inc
outsb
sub
ljmp
clc
pushf
inc
add
inc
sti
movsb
pop
xchg
cmpsb
pop
aam
loopne
push
incl
mov
lret
cltd
aaa
push
shl
stos
mov
push
pop
in
popf
or
push
out
fsubs
cli
imul
das
cli
or
aad
subl
xchg
inc
lds
adcb
pop
cld
imul
and
iret
movsl
call
jne
mov
mov
cmp
fs
sbb
int3
inc
imul
jnp
popa
popf
int3
cmp
pop
cltd
cwtl
ljmp
dec
xor
loopne
sub
sahf
stos
mov
std
add
xor
lret
cmp
mov
ljmp
jg
or
js
jmp
xchg
jne
xchg
and
pop
out
pushl
pop
push
pop
sbb
mov
jecxz
addr16
fst
and
dec
pop
mov
daa
test
fwait
mov
push
stos
xchg
pop
jmp
gs
add
xor
mov
push
mov
stc
int3
popf
cmp
sbb
test
stos
jmp
jmp
rcll
add
cli
add
movsb
sub
jl
sbb
stos
inc
popa
mov
sarl
jl
mov
adc
push
fdivr
aas
loope
in
clc
inc
dec
in
cmpl
push
sbb
popf
jg
adc
jo
lahf
push
fwait
incl
incl
repnz
and
push
mov
loopne
idiv
jnp
sahf
mov
loop
shlb
inc
sbb
and
daa
lcall
decl
push
in
in
or
setne
cmp
inc
push
xchg
jne
test
fidivs
movsl
lahf
ja
jnp
or
jmp
adc
cmp
ljmp
cld
mov
clc
cmp
outsl
sbb
lret
test
dec
push
mov
bnd
in
fdivrl
stos
mov
shll
cmp
xchg
pusha
je
pushl
lret
unpcklps
ja
les
xchg
push
in
into
dec
shrb
pop
jne
ljmp
fcom
mov
outsb
inc
dec
jno
aas
hlt
xchg
inc
add
inc
adc
in
sub
in
push
aas
mov
fistl
call
pop
jae
je
adcb
cmp
xchg
xchg
xchg
les
mov
push
and
inc
enter
or
pop
pop
movsb
mov
or
lcall
push
push
clc
out
cs
mov
addr16
xchg
je
jge
pop
xchg
mov
aam
decl
xchg
loopne
mov
mov
enter
out
sub
sbb
addr16
lahf
mov
mov
lcall
add
pop
pop
push
cmpsb
loope
mov
mov
mov
mov
ljmp
jl
add
cmp
dec
cltd
jge
xchg
push
xchg
pop
sbb
popa
fcomip
ljmp
and
aaa
cmp
sbb
mov
lret
cmc
sub
jg
clc
incl
xchg
sub
xchg
mov
movl
mov
out
cltd
or
sti
sarb
or
sub
mov
pop
cmp
fstps
cmpsb
and
neg
dec
xor
cmpsl
rcr
orl
jmp
mov
imul
jne
out
pop
cmpsb
sub
and
mov
icebp
call
int3
in
cmc
or
inc
sbb
add
dec
aad
ljmp
pmaxub
jnp
aad
add
push
js
loope
and
and
pop
xchg
scas
mov
call
test
sub
dec
or
inc
rcr
cs
xor
mov
cmp
incl
shrl
aaa
push
out
outsl
fiadds
or
rorl
aas
cmpsb
mov
fildll
add
dec
inc
jbe
mov
cwtl
cld
das
in
inc
adc
xchg
mov
std
inc
icebp
jge
rcrl
insl
cmp
rol
mov
add
ljmp
push
bound
push
bound
outsb
sbbb
mov
cmp
cld
lret
stc
or
int
pop
mov
or
xchg
mov
mov
cmp
ds
leave
inc
je
dec
dec
fisubl
dec
clc
ljmp
lods
scas
dec
push
and
inc
negb
pop
add
sti
mov
scas
popf
cmp
add
call
icebp
and
leave
xchg
mov
add
xor
inc
xchg
adc
xchg
dec
inc
pop
fstpt
stos
scas
mov
push
sahf
push
and
notb
xor
dec
pop
push
and
adc
dec
cli
xor
mov
or
mov
jl
in
dec
nop
ret
xchg
stos
incb
sbb
jge
add
pop
sbb
call
imul
pop
mov
repnz
xlat
in
outsb
lcall
call
mov
leave
comiss
mov
insb
xchg
mov
jnp
dec
push
push
shrb
mov
adc
sub
inc
pop
xchg
mov
lods
pop
jae
cmp
lods
sbb
mov
call
push
ss
loop
mov
aas
mov
movsb
decl
ret
es
or
jle
and
mov
in
adc
jo
pushl
repz
lea
ss
scas
popf
lds
jb
inc
xor
shll
gs
cmp
mov
and
jle
stc
mov
add
push
daa
or
mov
sub
inc
fcomps
dec
jge
scas
mov
cmp
popa
mov
push
jg
mov
aaa
sbb
jmp
pop
xchg
add
in
and
popa
aas
mov
push
ja
dec
mov
fstp
mov
fists
sbb
lds
mov
sarl
shlb
cvtps2pi
insb
dec
dec
cmc
mov
pusha
fisttpl
ljmp
or
push
aam
xchg
inc
aaa
ret
adc
out
int
xlat
cs
sbb
pop
lods
call
loopne
mov
push
jl
inc
leave
or
pop
pop
enter
and
add
clc
pushl
das
jne
jge
dec
bnd
icebp
ja
les
test
pop
jmp
ljmp
push
jp
ficoms
jae
mov
lock
mov
push
jnp
cmp
out
dec
loope
ljmp
loop
pushf
push
ss
xor
or
es
add
mov
movsl
sti
and
mov
lret
ljmp
clc
lcall
ja
inc
and
push
push
fiaddl
mov
movl
pop
xor
insb
or
pop
pop
sub
add
jae
jmp
repz
cwtl
roll
je
call
sub
xor
call
mov
lods
in
repnz
and
fildll
xchg
out
fisttpl
aaa
clc
shlb
fmuls
icebp
call
inc
movsl
mov
sahf
dec
cli
mov
push
cmpsb
or
add
xchg
stc
add
adc
adc
jecxz
pop
rdtsc
inc
dec
cmp
mov
stos
inc
xchg
lds
iret
adc
outsb
pop
push
das
int3
sub
adc
inc
pop
xchg
xor
mov
sbb
dec
push
fstpl
pop
lods
dec
inc
sbbl
jne
sbb
xor
and
lcall
mov
pop
das
js
mov
xchg
outsb
jns
mov
das
clc
fildll
aas
and
scas
xor
jb
idivb
repz
pusha
pop
incl
sbb
or
repnz
mov
add
shlb
cmp
mov
scas
cli
call
sbb
sbb
xchg
imul
outsl
aaa
jnp
scas
and
mov
ljmp
shlb
pushf
jne
mov
dec
aad
sub
ss
bound
jb
loop
out
cmp
scas
and
and
push
rorb
add
inc
sub
xor
decl
mov
fadds
das
je
xchg
mov
out
or
sbb
add
jmp
sbb
mov
dec
xlat
jge
fiaddl
jmp
mov
jmp
jl
inc
pushf
mov
push
mov
mov
aad
adc
icebp
mov
sub
je
scas
push
and
dec
js
scas
add
lods
lret
jecxz
mov
call
mov
aas
pop
push
enter
sub
jmp
ja
jbe
jge
js
fcoms
imul
loop
pushf
and
dec
lock
popf
xor
jmp
push
sbb
cmp
sarb
jp
mov
jmp
jge
jecxz
mov
dec
add
fidivrl
and
sbb
sbb
adc
mov
add
popf
insl
push
lahf
mov
in
mov
or
jnp
sub
inc
sbb
test
or
lods
test
cwtl
mov
xlat
decl
stc
aas
sti
dec
gs
lcall
mov
negl
jae
xor
dec
xchg
inc
cmp
and
mov
iret
sbb
cmpsb
mov
lods
lea
add
cmp
push
sbb
sbb
mov
pushf
mov
mov
pop
add
mov
push
push
jp
loopne
popa
cmp
lods
popl
repnz
mov
push
loopne
or
xchg
call
xorl
xor
sar
sbb
jmp
enter
ror
aad
in
imul
push
xchg
add
lock
mov
push
xchg
jns
push
mov
sub
daa
lds
nop
sbb
pushf
xchg
incl
arpl
dec
xchg
int
insl
and
hlt
adc
stos
jl
inc
inc
loope
enter
dec
jno
sarl
cmp
fisubrl
fnstcw
decl
inc
sbb
adc
imul
add
xor
mov
stc
cmp
mov
test
push
out
into
scas
sub
dec
mov
push
cmp
ljmp
js
pop
push
testl
pop
dec
divb
xchg
int3
decl
dec
cmp
or
jl
xor
xchg
mov
inc
out
add
dec
cld
fimuls
push
repnz
test
dec
mov
lods
int3
dec
adc
adc
scas
jo
dec
mov
out
pop
and
test
xchg
push
adc
mov
loope
and
jecxz
rolb
mov
jb
cld
sub
sarb
sub
popf
movsb
xchg
add
mov
js
jg
dec
mov
or
js
push
jge
mov
mov
lods
mov
popf
ret
iret
xor
pop
pop
je
sbb
movsl
mov
cwtl
iret
mov
and
test
and
adc
jge
dec
scas
cli
jmp
mov
mov
imul
les
jo
inc
pop
ljmp
dec
popf
mov
mov
push
pinsrw
mov
in
dec
mov
aaa
dec
cmpb
dec
mov
sub
mov
cmp
inc
popf
mov
mov
mov
sub
pop
inc
adc
add
test
push
cs
ljmp
shrb
push
mov
or
cmpb
mov
mov
fcos
lcall
push
mov
jmp
imul
pop
add
lret
and
pushl
repz
cmp
cmpsb
mov
mov
jp
or
int3
movsl
cmp
movsb
or
hlt
frstor
jne
inc
mov
cmp
es
cwtl
mov
push
xchg
pop
pusha
in
inc
lock
push
xor
sarb
andl
rcrb
decl
ss
ret
shlb
mov
scas
mov
push
mov
inc
mov
cs
xor
xchg
add
mov
daa
mov
xor
std
decl
scas
sbb
pop
testb
pop
dec
dec
subl
arpl
or
cld
hlt
pop
mov
stc
rol
fdivr
jmp
jle,pn
in
lret
mov
sbb
mov
sub
inc
stos
ficompl
jmp
addr16
and
push
adc
xor
push
shrl
adc
pop
pop
jle
lcall
jle
jne
inc
cltd
jecxz
cmp
mov
add
cmp
add
repz
icebp
xor
call
mov
add
mov
rclb
out
push
jle
in
mov
clc
pushl
cmp
sub
mov
repz
ret
aas
mov
addr16
call
push
repnz
stos
pop
inc
je
xchg
sub
xchg
push
dec
xchg
push
in
call
sbb
jmp
cmp
iret
sarb
jg
iret
lcall
sar
incl
lahf
notl
aad
xchg
sbb
das
int3
cpuid
fcoml
jge
loop
fcomip
jg
shlb
cmc
in
fcompl
sti
adc
sbb
sub
mov
push
lcall
add
imul
rol
orl
arpl
mov
ljmp
lock
ret
mov
daa
leave
mov
inc
call
hlt
jmp
or
fsubrl
add
add
aad
pushl
sbb
into
push
mov
ret
ds
cmp
shll
cmp
jmp
pop
jle
pop
jmp
push
loop
enter
lcall
xor
add
pop
pop
jmp
lcall
repnz
mov
mov
test
inc
repz
mov
jp
cmp
and
mov
aaa
fdivs
or
push
aad
movsb
lcall
xchg
pushl
divl
and
ret
xor
fisubl
loope
sub
jns
or
aaa
cld
incl
dec
inc
add
scas
repnz
lcall
jne
inc
mov
fstps
ljmp
cmp
incb
cmp
cli
bound
out
cwtl
lret
xorb
push
add
dec
sar
call
jae
xchg
es
inc
push
adc
adc
push
inc
xchg
lods
push
pop
push
add
or
outsl
cli
jmp
xchg
test
jp
push
jle
xchg
dec
sbb
xor
or
dec
loopne
mov
add
stos
or
scas
lret
into
dec
test
xor
jg
jmp
hlt
dec
or
dec
mov
fsubs
test
sub
add
movsl
cli
jmp
ret
dec
xor
inc
jno
in
insb
clc
mov
cltd
and
pop
xchg
clc
das
inc
inc
jbe
es
dec
sbb
xor
mov
and
cltd
iret
mov
sbb
dec
mov
cmpsb
call
mov
cmp
cmp
rcrb
pop
sahf
aaa
fs
testl
jmp
mov
add
inc
sub
cmp
dec
cmp
int
cmp
sub
jp
sub
arpl
lcall
jmp
push
andl
stos
negb
faddl
jg
shll
stos
mov
js
adc
mov
or
mov
adc
xchg
jg
cmp
push
mov
mov
daa
mov
ss
jb
jb
mov
arpl
cmp
pop
mov
push
test
sbb
call
fisttpll
in
sbb
lahf
jnp
lock
rclb
ljmp
jmp
cmpsb
or
out
arpl
sbb
nop
mov
dec
lods
stos
loopne
cmc
adc
add
mov
jg
cmp
cld
gs
add
fucomi
or
fcmovb
cs
sbb
incb
das
sbb
mov
cmp
inc
jnp
mov
xchg
loopne
push
pop
outsb
mov
ljmp
into
cwtl
je
and
popf
in
loopne
insl
push
shr
jo
scas
and
dec
dec
cmp
xchg
add
out
loope
in
ljmp
sahf
sbb
nop
sub
rep
outsb
mov
js
or
jae
aas
pushf
add
aaa
fcoms
dec
ja
cmpb
pop
cld
call
push
cli
push
inc
cwtl
in
adcb
lahf
int3
adc
sbb
stos
lcall
xlat
push
sub
mov
xor
push
or
out
adc
lahf
nop
adc
mov
xchg
aaa
sti
in
int3
call
adc
pop
jb
movsb
inc
lock
pushl
les
pop
sub
push
inc
sub
pop
sbb
decl
sub
nop
inc
add
push
aad
mov
xor
clc
rcr
xor
jmp
lods
imul
les
sub
enter
lds
repz
mov
or
aas
add
jae
mov
mov
js
scas
push
dec
jle
cmp
adc
pop
ljmp
jno
roll
cs
push
xchg
add
mov
mov
js
loopne
int3
push
jge
in
pop
mov
mov
pop
call
jmp
ret
add
out
add
jmp
push
into
loopne
sub
push
ss
imul
jmp
sbb
repnz
fimuls
loop
or
shll
jmp
sub
loop
stc
rcrl
iret
ret
push
ds
cwtl
das
fisttpl
sbb
incl
adc
das
mov
sub
pop
or
push
mov
mov
outsl
jmp
lds
sub
pusha
mov
and
and
xor
inc
and
movsb
push
dec
add
fcomip
inc
mov
and
mov
pop
pusha
outsb
stos
enter
mov
pop
lods
inc
cmp
adc
mov
mov
ds
mov
cmp
orb
pop
insb
clc
stc
daa
push
pop
push
and
xor
adc
sub
xchg
adcb
or
aas
inc
mov
in
into
pop
outsl
inc
or
insb
add
jge
jae
mov
pop
cmp
xor
lcall
add
vunpckhps
gs
pop
mov
inc
adc
cmp
and
incl
cld
add
call
jmp
sub
sarl
out
push
adc
test
es
inc
xchg
ret
dec
mov
xor
nop
sbb
decl
mov
adc
mov
sbb
push
mov
mov
mov
xchg
mov
bound
shlb
ficompl
jmp
push
pushl
lds
popa
push
mov
fistpl
jge
jmp
pop
mov
mov
inc
aas
push
std
cs
call
and
cmp
lcall
movsl
mov
push
cmp
jne
cmp
sub
dec
vdivss
jb
dec
lcall
sar
sbb
iret
mov
adc
loopne
dec
andb
insl
cmp
xchg
jmp
and
jns
xchg
mov
dec
or
or
add
mov
pushl
or
cmp
sub
lahf
mov
aad
or
pop
ss
sub
cmp
daa
fildll
stos
sub
into
xchg
push
decl
inc
xchg
call
mov
les
mov
dec
xchg
movsl
aaa
add
dec
push
hlt
add
imul
jo
lock
cltd
mov
cmpsl
stos
xor
popf
pop
sbb
jmp
mov
add
xchg
outsb
and
fisttpll
in
pushl
mov
pop
jl
push
and
mov
xlat
sub
add
dec
xor
mov
decb
xor
xchg
adc
jle
lret
jmp
xchg
scas
cmp
inc
fwait
xor
ja
idiv
xlat
test
push
ss
jae
pop
inc
push
jae
sub
fadd
inc
mov
mov
rcrl
stos
fists
push
cld
or
ret
in
sti
les
mov
jmp
movsl
sub
cmp
je
mov
cmc
in
push
icebp
lcall
stos
add
sbb
xchg
rcr
mov
adc
mov
cmp
icebp
fistps
push
ds
fcmovne
aas
outsb
leave
jno
pusha
arpl
and
push
add
inc
adc
pop
cmc
pop
js
mov
fisubrs
mov
je
jl
sahf
xor
dec
sub
test
xchg
ss
mov
adc
scas
push
int
sarb
loope
jmp
add
xchg
push
xchg
xorb
lods
ret
cld
jle
dec
out
ret
arpl
ljmp
add
mov
iret
mov
mov
gs
jle
ljmp
arpl
cltd
sub
xlat
or
mov
push
mov
cmp
add
sar
repnz
sub
call
xchg
xor
mov
lcall
fwait
call
jae
xchg
int3
and
repnz
cwtl
xchg
lret
xor
ret
adc
loope
lcall
aas
loopne
lret
scas
jmp
push
sbb
shl
mov
loopne
xchg
out
adc
ficoms
pushf
dec
hlt
mov
xchg
std
cli
leave
imul
mov
cmp
iret
push
mov
ljmp
mov
pop
repz
inc
push
scas
sti
and
add
sub
fidivs
rol
jo
dec
sbb
dec
add
je
cmp
aad
sbb
bswap
or
jae
mov
orb
outsl
call
fadd
xchg
shlb
jmp
mov
outsb
push
std
jecxz
or
ljmp
or
ja
cwtl
cltd
adc
jnp
push
dec
out
xchg
mov
test
push
fiadds
sahf
jg
lods
push
lds
das
test
xlat
push
je
jnp
cwtl
ret
add
inc
pusha
and
add
inc
dec
scas
push
push
push
xchg
pop
rcr
out
idiv
ljmp
cli
mov
jmp
mov
and
int
outsl
movsb
mov
cmp
mov
mov
lret
push
imul
mov
dec
ljmp
sbb
leave
xor
sub
repz
addr16
aad
out
cli
nop
push
mov
imull
push
mov
movsb
jae
add
push
jmp
or
pop
push
mov
jb
into
mov
jbe
xor
or
mov
ljmp
pop
push
jge
add
xchg
adc
lahf
pop
daa
daa
push
ret
stc
js
sbb
scas
out
sub
or
decl
std
sar
out
mov
sar
pushl
imul
cmp
test
and
enter
pop
in
dec
adc
cwtl
and
incl
jns
scas
xor
nop
inc
loopne
imul
adc
fwait
popa
test
pop
nop
mov
data16
or
insb
mov
pushf
call
lock
lret
ds
lods
dec
stc
jl
std
mov
js
fs
push
adc
lods
out
addl
clc
jbe
mov
sbb
decl
add
outsb
and
lock
pushf
adc
jns
outsl
mov
lods
fisubl
bound
sahf
insl
ds
and
pop
push
insb
ffreep
jno
push
jl
pop
push
stos
movsl
cwtl
out
mov
mov
adc
cmp
sti
mov
push
shlb
mov
clc
lret
dec
je
mov
test
decl
cmpsb
mov
repnz
and
das
sbb
mov
pushl
xor
pushf
mov
imul
dec
imul
decl
jg
repnz
xchg
mov
mov
cli
sub
jo
mov
sahf
lret
fcmovb
inc
xchg
inc
jne
and
ljmp
adc
or
divl
sub
ljmp
jg
mov
push
dec
jge
movb
je
xchg
lds
imul
scas
cli
pushl
mov
sub
cmp
sbb
mov
adc
in
sbb
call
lds
mov
std
mov
into
cltd
test
sbb
rolb
das
fs
sub
pop
jp
icebp
jmp
sub
xlat
sbb
dec
xlat
xchg
xor
pusha
add
adc
or
arpl
hlt
arpl
je
add
imul
xchg
push
fwait
add
dec
fstpl
pop
adc
clc
mov
pop
pushf
arpl
fcomip
incl
dec
pop
dec
push
shlb
jae
pop
mov
mov
push
pushl
std
lcall
jne
lret
insl
xchg
in
push
lret
dec
repnz
and
fimuls
fcoml
enter
dec
out
inc
xchg
lea
pop
fisttpl
pushl
stos
mov
outsb
mov
push
dec
xor
sub
outsb
insb
add
push
aaa
mov
jge
mov
xor
cwtd
lahf
mov
mov
jne
xchg
mov
lcall
sbb
jmp
cli
and
js
in
adc
inc
subl
les
pop
cmp
mov
xlat
lock
xchg
jbe
xlat
es
in
push
jne
les
ljmp
sbb
rcl
push
outsl
jge
gs
loopne
add
or
data16
cmc
cmp
dec
out
mov
orb
out
into
mov
mov
imul
add
jb
cmc
cld
out
sbb
into
aas
in
les
ljmp
das
push
and
sbb
add
or
mov
pop
add
cmpsl
int
jmp
popf
arpl
adc
add
popf
and
rcrl
mov
dec
ret
cmp
pop
xchg
mov
pop
hlt
es
stc
dec
push
or
inc
mov
ret
or
lcall
ss
jmp
loope
or
fwait
cli
call
fmull
sub
sub
imul
push
push
leave
jmp
add
jecxz
inc
ret
mov
fsubs
lahf
in
iret
in
addr16
mov
ljmp
or
xor
adc
cmp
mov
mov
jge
mov
cmp
lret
movsb
repnz
jecxz
call
jmp
pop
xlat
push
std
mov
jecxz
jns
icebp
cmpsb
cltd
mov
popa
pop
jge
and
mov
cmp
push
sub
es
aas
inc
dec
jae
dec
mov
arpl
in
outsb
nop
mov
jecxz
mov
cmc
dec
jo
jo
xchg
shrb
fists
loopne
and
insb
mov
lret
sub
sub
jmp
pop
xchg
or
movsl
jnp
lahf
xchg
pop
popa
add
push
in
dec
jo
out
jbe
mov
jmp
popa
cmp
mov
xchg
cmpsb
repz
lea
arpl
mov
push
call
inc
dec
lahf
sarl
inc
adc
adc
or
popl
ret
mov
clc
lcall
xlat
xchg
out
and
std
mov
sub
out
xchg
or
cmp
or
lds
in
xchg
ljmp
pop
movl
cmp
je
jecxz
and
inc
push
and
test
nop
xchg
repnz
mov
leave
push
popf
or
push
stc
sbb
xor
incl
fcomi
insb
jecxz
aam
jle
sbb
jmp
mov
sub
mov
xor
test
lods
push
and
pop
out
repnz
jl
jmp
adc
loopne
shl
pop
or
fadd
js
inc
sbb
xchg
mov
mov
out
stos
int
je
and
mov
jno
bound
jo
clc
mov
adc
add
incl
xchg
pop
adcb
jo
and
cld
das
pop
pop
insl
std
lods
sbb
popa
cld
pop
pop
jns
adc
sbb
sarl
fwait
movsl
add
ja
push
sbbb
movd
sbb
or
cmp
xlat
xchg
jmp
mov
xlat
sbb
cmpl
jb
popa
nop
ss
mov
mov
nop
ljmp
inc
cltd
ljmp
inc
mov
and
sbb
ljmp
jmp
fists
lret
or
fstpl
add
mov
or
jle
or
xor
lock
push
aam
xchg
mov
dec
fildll
cwtl
iret
jb
and
or
dec
sub
push
lcall
and
or
ds
arpl
arpl
fsubl
loopne
mov
pop
xchg
sbb
mov
jle
pushf
xor
daa
ds
ss
popf
pushl
shrl
out
ds
adc
in
push
cs
sbbl
nop
sahf
in
mov
lock
dec
cmpsl
sbb
and
mov
clc
mov
mov
dec
fst
fmul
and
push
push
ss
jbe
push
pop
andb
or
adc
cmp
jg
mov
mov
cmp
pushl
mov
xchg
mov
subl
inc
xchg
pop
sbbb
pop
xchg
cli
outsb
dec
mov
add
and
out
fdivrs
add
pop
out
push
or
pushl
lahf
mov
mov
addr16
jmp
mov
jbe
sbb
mov
test
and
jo
decl
aad
xchg
pop
push
mov
pop
lds
idivl
stos
scas
sbb
jmp
ret
mov
insb
leave
fstp
inc
jp
cli
xor
call
out
xchg
cmp
ja
clc
fs
cmpsb
inc
out
stos
pushf
xlat
negb
hlt
sub
mov
push
mov
aam
jl
ds
enter
hlt
fcmove
mov
iret
cmp
ja
xor
lcall
icebp
fwait
push
push
and
sub
jbe
mov
mov
lods
movsb
mov
cs
lea
dec
push
push
adc
test
movsb
jns
rcr
dec
and
mov
insl
test
in
test
add
in
push
icebp
adc
xor
call
fstps
fcompl
nop
shld
mov
nopl
imul
call
xchg
pushf
jne
sub
fcmovnu
add
dec
and
lret
leave
dec
xchg
jae
jl
arpl
dec
ds
pop
pushl
xchg
xor
or
mov
or
pop
mov
pop
inc
mov
out
sub
or
inc
pop
call
jp
sbb
xchg
xchg
out
mov
xor
push
inc
ds
cmp
add
xchg
stos
dec
decl
dec
jmp
mov
cmp
xor
decl
xchg
bound
scas
mull
int3
in
inc
fstpl
xchg
lea
aaa
pop
rcrb
ds
or
aaa
int3
xchg
decl
cmp
sbb
ret
jge
and
pop
ds
pop
mov
aad
pop
pop
pop
loopne
ret
mov
aad
xchg
lret
mov
jle
dec
es
xor
stc
data16
bound
mov
jae
pusha
adc
jns
loop
dec
repz
ljmp
pop
add
and
lcall
cmp
fstps
add
pushl
incl
jne
push
inc
in
gs
mov
inc
xor
cmp
jl
fldcw
pop
rorl
lds
mov
jle
cs
lods
popa
cld
in
imul
bound
dec
dec
fnstsw
and
sbbl
xlat
test
mov
inc
cmp
pop
jno
cmp
dec
sub
movsl
orl
dec
cltd
cmp
ljmp
inc
lods
scas
cli
jne
add
push
cld
fcomi
ljmp
push
test
mov
iret
sbbb
push
mov
ja
pop
int
jg
and
pop
lods
or
int3
and
and
mov
inc
add
insb
jb
cmpsl
xchg
aam
pop
mov
cli
cltd
lret
push
sbb
jg
sbb
outsb
insb
shll
xor
add
fisttps
push
ljmp
cmpsb
jle
or
push
cld
cmpsb
jae
lahf
mov
push
adc
push
pushl
or
push
decl
test
sbb
icebp
incl
nop
sbb
stos
loope
xchg
shl
ret
aaa
rclb
jle
fdivrp
daa
jecxz
pop
cmpsl
shlb
mov
mov
push
gs
jno
fwait
add
into
jmp
dec
jg
cmp
mov
addr16
mov
mov
bound
mov
in
int3
and
and
dec
subl
pop
andb
test
mov
incl
fdivs
pop
loopne
inc
dec
cld
mov
sub
jmp
loopne
not
movsl
js
call
xchg
mov
test
ret
inc
add
call
inc
aad
imul
jae
lcall
sub
xchg
mov
rcrb
pushl
je
sub
mov
pop
ja
das
bound
sti
fwait
mov
fisttps
cmp
test
push
or
inc
jb
push
xchg
lahf
popa
mov
jmp
ljmp
popl
cmp
pop
pop
out
push
jecxz
jmp
lcall
push
jnp
test
sbb
cmp
out
push
dec
fwait
mov
add
and
sub
aad
aaa
lcall
jbe
mov
pushl
das
out
push
sti
sub
pop
mov
into
mov
sub
popf
je
sahf
popf
clc
decl
in
popa
xchg
rdmsr
cmpsb
hlt
enter
pop
pop
imul
movsb
xchg
in
xlat
or
sub
push
imul
ljmp
popw
mov
xchg
fs
into
push
sbb
mov
jns
scas
movsb
mov
lahf
popf
and
push
push
xchg
ficompl
pop
add
incl
dec
mov
addr16
and
mov
shlb
adc
sar
sub
cmp
xor
pop
mov
mov
cmp
std
decl
pop
mov
pop
loop
in
aas
add
sbb
cmp
hlt
stc
pop
adc
mov
decl
aaa
mov
clc
rorb
sbb
loop
lods
mov
sbb
inc
sbb
mov
gs
ljmp
and
push
mov
pop
pop
jmp
into
fs
call
lcall
sub
ret
sub
mul
sub
adc
incl
mov
jecxz
fstpt
sub
shll
fidivrs
xor
add
loopne
rcrl
call
add
jns
and
or
fmuls
flds
fisubl
jnp
ret
ds
lcall
movsb
divl
and
out
pushl
fiadds
jmp
dec
or
or
ret
cmp
push
lods
cld
xchg
xor
movsb
mov
push
std
mov
add
test
test
jnp
sbb
int
lods
popa
add
jmp
test
mov
push
aam
sbb
aaa
sub
popf
cs
and
fcomip
push
xchg
icebp
out
mov
pop
adc
arpl
jecxz
mov
sbb
dec
sbb
outsb
jmp
andb
and
sbb
xor
jbe
mov
mov
lock
mov
ljmp
addb
ljmp
insb
xor
in
fbld
clc
push
ret
cmp
cmpsb
test
and
cmp
aad
in
lcall
aam
add
xchg
addr16
xchg
adc
mov
aad
jmp
push
xlat
cli
dec
mov
or
ljmp
jmp
push
pop
jbe
daa
jno
inc
cwtl
test
lahf
fdivr
mov
ljmp
xchg
or
and
pusha
mul
cmpsl
push
mov
cltd
insl
jne
xchg
add
std
and
scas
and
mov
mov
dec
sub
dec
push
sbb
xchg
jg
xchg
add
pop
sub
hlt
outsb
stc
push
loope
out
pusha
clc
je
pop
shl
add
std
pushl
dec
mov
test
push
adc
push
sbb
or
leave
cmpsl
mov
cld
or
jb
nop
roll
fbstp
and
xchg
xlat
enter
sbb
mov
les
push
pop
aam
lcall
pusha
and
or
or
xchg
sub
stos
ss
lret
sti
movsb
aad
or
ljmp
rcl
jecxz
cmp
pop
lcall
or
pop
pop
in
outsl
adc
sar
jg
popf
ljmp
aaa
push
ss
mov
in
data16
aam
ljmp
js
fildll
dec
add
rolb
jge
sahf
jne,pt
cltd
inc
arpl
add
decl
loop
mov
jmp
jbe
in
xor
clc
decl
sahf
stc
pop
mov
pop
outsl
sbb
sub
pop
bound
jne
sub
les
insl
cld
cmp
sub
data16
pushl
js
xchg
mov
fsubr
insl
and
add
ss
call
cld
dec
imulb
stc
inc
mov
sub
sub
inc
mov
and
cmp
incl
je
xchg
mov
jo
stos
pusha
gs
cwtl
push
enter
mov
pop
or
cmpsl
fimull
lahf
jmp
dec
inc
mov
clc
add
inc
fs
xchg
xchg
aas
pushf
mov
popf
ja
push
in
iret
mov
dec
idivb
clc
pushl
aas
fld
out
fstp
push
sahf
gs
pop
or
push
ret
aad
and
xor
loope
mov
inc
fsub
mov
pop
pushl
sub
push
dec
mov
jo
fadds
rcrb
fldt
xor
xchg
decl
outsl
lock
scas
sbb
hlt
cmp
daa
popf
or
dec
push
cmp
aaa
or
test
sub
fcmovne
sarb
add
les
lcall
int3
shlb
test
dec
iret
mov
cmp
int
jno
mov
sbb
mov
mov
lock
push
es
lcall
pushf
test
rcll
xor
mov
outsl
sub
les
and
jb
cwtl
inc
jnp
mov
mov
pop
xchg
out
or
sbb
mov
nop
iret
cmp
dec
and
ja
notl
mov
icebp
imul
cmp
decl
sbb
xchg
or
adc
dec
lcall
jecxz
mov
divb
clc
decl
cmp
or
fimuls
in
cld
push
inc
repnz
push
and
decl
jmp
out
pop
lss
pop
mov
push
inc
jb
or
jno
jg
decl
and
sub
in
xchg
mov
sub
dec
mov
fwait
pusha
and
add
add
les
subl
push
popf
dec
js
pop
adc
pushl
sub
xor
das
sub
repz
jl
aad
adc
mov
jae
rorb
mov
in
fldcw
xor
jmp
in
ljmp
movsb
pop
pushf
pop
adc
or
aam
out
inc
orb
xadd
cmp
icebp
decl
stos
lea
in
repz
add
xor
stos
or
in
mov
jle
ret
jbe
aam
push
enter
xchg
jmp
fbstp
cmc
mov
fbld
or
xor
arpl
hlt
data16
sub
ljmp
cmp
mov
push
xchg
repnz
inc
lock
jae
imul
out
mov
jecxz
sbb
mov
sub
icebp
mov
pop
inc
dec
fdivs
jmp
pop
adc
pop
in
jg
outsl
cmp
xchg
xchg
hlt
cmp
adc
lods
idivb
cli
fwait
xor
sub
adcb
gs
cld
sub
das
decb
test
adc
movsl
pop
push
push
dec
jmp
dec
into
stos
jge
iret
inc
mov
lcall
pop
lahf
xchg
xchg
fstpl
movsb
sbb
dec
sub
jo
jne
sar
lahf
out
add
mov
enter
loop
push
pusha
push
call
mov
movsb
jmp
push
and
inc
stos
jns
lock
xor
mov
in
imul
cmp
cld
mov
add
add
sbb
xchg
pop
mov
sbb
js
scas
cltd
jae
imulb
adc
sub
inc
pushl
push
xor
xchg
outsb
sub
cs
mov
rcl
inc
and
and
pushf
cmp
dec
mov
push
xchg
clc
jle
pop
sub
rcr
mov
sti
pushl
rcr
mov
in
or
xchg
and
out
mov
sbb
fldt
sub
mov
jae
lret
icebp
ljmp
cmp
xor
add
bound
shll
je
inc
adc
std
mov
jg
pushl
inc
or
out
push
out
inc
movsl
ret
adc
sub
and
decl
mov
iret
aad
mov
and
pop
push
fcoms
xor
shrb
faddl
jae
out
add
movsb
pop
mov
int
out
cli
mov
mov
push
loop
and
cmc
imul
outsl
adc
ljmp
cli
push
ljmp
mov
in
mov
cmp
xlat
pop
xchg
jmp
lock
mov
nop
ljmp
leave
insl
jmp
push
ljmp
loope
lods
lock
and
in
jl
sbb
xchg
imul
movsb
and
cltd
push
jno
cwtl
push
lret
mov
mov
lock
outsb
pop
inc
adc
ja
jmp
clc
cli
es
sti
fisubs
popf
rcrb
lcall
jnp
lods
ja
aas
mov
jo
lods
lea
mov
call
imul
adc
sub
jg
jno
cmpsl
mov
mov
pop
pop
imul
incb
test
repz
jge
repz
xor
repnz
jge
mov
enter
sub
or
mov
call
fistpll
movsl
aam
outsl
scas
adc
mov
sub
jnp
and
imull
jmp
add
push
enter
shrl
sbb
xchg
add
mull
xor
lcall
adc
mov
movsl
popl
inc
mov
ds
hlt
and
mov
std
clc
jbe
iret
pop
adc
mov
add
mov
fisubl
ljmp
dec
sbb
cwtl
aad
sbb
pushf
popf
lret
rorb
subb
cmc
out
and
pop
data16
adc
lcall
fildll
call
in
bound
bound
jns
cwtl
shrb
and
call
cmp
insb
imul
dec
movsl
lods
sub
or
stos
sub
ljmp
sarb
fcom
push
addr16
les
or
push
out
les
lahf
call
cmp
dec
nop
mov
pop
nop
clc
aaa
sbb
cmp
loope
icebp
mov
fidivrs
xchg
cmp
jg
sbb
fs
out
mov
int3
sbb
adc
sar
lcall
lods
xchg
mov
push
stos
pusha
mov
fwait
daa
lahf
fisttps
add
in
lds
sub
add
add
scas
dec
mov
jbe
add
mov
ljmp
cld
pop
les
fs
push
sbb
dec
test
addr16
pop
push
xor
cli
inc
movsl
outsb
push
xchg
inc
cmp
ficomps
cmpsl
mov
jg
mov
pushf
cmpsl
push
and
sbb
rol
lcall
add
or
in
je
or
pop
push
add
xchg
aas
ret
pop
inc
jge
mov
in
test
loope
add
push
movaps
or
mov
hlt
cmp
mov
mov
sub
adc
and
and
pushf
mov
incl
mov
ja
fstps
loope
repnz
enter
fisubs
sbb
outsl
inc
fs
call
jge
pop
sub
push
fidivl
and
cltd
xchg
cld
cwtl
sbb
mov
or
sbb
movsb
je
call
fldl
mov
outsb
mov
aam
call
shlb
mov
jg
sub
xchg
add
adc
popa
xchg
mov
outsb
cwtl
nop
jp
adc
stc
sub
xor
mov
push
and
rorl
jbe
lock
jnp
call
incl
shl
popa
xor
clc
cmpsb
dec
iret
xchg
movsb
call
call
stos
add
mov
popf
stc
loope
in
jle
push
mov
mov
iret
cmpsb
jmp
imul
mov
lret
pop
dec
js
inc
xchg
cmp
mov
nop
scas
jae
pop
sbb
jo
rclb
mov
jecxz
xor
sub
adcl
setns
cli
inc
insl
mov
sub
rorl
or
mov
scas
ja
pop
mov
in
lds
popf
jecxz
adc
in
xlat
popf
call
stos
int
xchg
sti
mov
jg
jmp
ds
inc
xor
enter
add
sbb
ljmp
les
sbb
inc
and
xchg
adc
repz
or
loopne
es
jg
incl
push
stc
shll
cwtl
sarl
xchg
rorb
cmc
test
leave
dec
jbe
jns,pn
dec
pop
out
fcomip
jmp
stos
call
inc
dec
mov
adc
xchg
cmp
fnsave
and
in
sti
and
test
insl
sbb
in
mov
jo
mov
or
dec
mov
push
or
xchg
mov
add
lret
mov
add
das
aas
ret
mov
dec
mov
mov
leave
hlt
in
loopne
dec
out
mov
adc
xchg
les
out
fisttpl
test
int
mov
rcr
or
lods
leave
jge
sbb
pop
nop
pop
pop
jnp
hlt
call
nop
pop
testl
cli
lret
daa
outsl
and
mov
add
sbb
xlat
add
mov
jg
je
mov
mov
lds
in
hlt
jp
jno
mov
test
andb
push
lds
dec
xchg
movsb
aas
fldt
sub
adc
icebp
test
pop
sub
in
xor
or
pusha
decl
add
inc
pop
xor
sarl
and
fnstenv
lds
into
daa
aam
sub
leave
xor
cmp
sbb
insb
cld
inc
xchg
pop
sti
push
cmc
sbb
jle
fs
jmp
lret
fdivrs
cltd
push
sbb
jge
rorl
jns
lea
into
ljmp
sub
ss
cmp
lcall
dec
pop
rolb
sbb
dec
dec
sub
inc
inc
jp
push
jbe
jbe
testl
cli
add
test
xor
xchg
dec
sbb
pushl
jl
arpl
bound
orb
mov
sub
cmp
imul
bound
in
jge
push
imul
out
cmp
mov
incl
add
shl
jmp
mov
mov
ss
cwtl
or
push
xor
or
fstl
adc
loopne
ss
push
pusha
js
and
and
dec
add
jns
cld
call
adc
sbb
mov
sahf
stos
jg
es
popa
pop
mov
fwait
cmp
sbb
xchg
or
gs
ljmp
inc
push
pusha
mov
push
pop
rcrb
popf
cmpsb
sbb
lret
stos
fwait
loopne
jmp
stc
cmc
jno
data16
loop
adc
mov
call
sarl
mov
sarb
mov
out
sub
fcomps
sbb
cld
xchg
push
fstp
xchg
sbb
xlat
mov
cmp
mov
gs
ljmp
inc
ljmp
inc
sbb
mov
xchg
and
mov
adc
push
out
or
adc
ret
pop
int3
jns
xorl
enter
out
adc
pop
jl
push
sub
ljmp
mov
lock
add
adc
mov
or
push
aad
daa
add
adc
and
jb,pt
sti
fbld
cmpl
pop
rcl
imul
pop
mov
rol
add
jnp
call
push
pop
test
cmp
arpl
mov
adc
inc
xor
or
push
cmp
cmpsl
shll
inc
push
out
lret
sbb
xchg
imul
dec
push
add
cld
out
cmp
mov
ss
incl
inc
repz
mov
add
mov
cmp
pop
orb
jne
fsubl
cmp
int3
int
ret
adc
fnstenv
decl
lock
mov
stos
jmp
add
sub
out
fcomip
mov
jb
mov
and
jmp
popf
jl
ret
inc
fimuls
nop
mov
pusha
mov
mov
out
ficoml
call
jmp
movsb
inc
lcall
shrb
mov
mov
sar
decl
mov
sub
iret
mov
aam
call
pop
inc
xchg
mov
popa
rclb
inc
repnz
cmp
stos
jp
dec
scas
js
sub
fcomip
pushl
mov
pop
mov
ret
add
ficoms
mov
dec
daa
or
subl
jecxz
adc
popa
insl
les
ljmp
gs
jb
stc
cmp
in
ffree
mov
pusha
movsb
sub
sbb
push
movl
inc
popa
sarl
jns
inc
xchg
sti
add
test
in
push
inc
ret
and
mov
cld
sub
in
ds
pop
into
xchg
orb
jge
mov
push
js
xor
jno
mov
mov
pop
and
or
xchg
push
pop
mov
popa
xchg
outsl
xchg
lds
fmul
pusha
test
ss
adc
push
inc
push
and
sete
xchg
pop
jb
incl
cmpsl
or
add
mov
daa
jmp
xchg
and
xor
pushl
cmpsl
imul
lahf
rclb
ficoms
push
sbb
outsl
test
inc
inc
xor
mov
lcall
icebp
lcall
ljmp
popa
mov
and
cmpsl
in
mov
fldl
shlb
xchg
mov
mov
mov
lods
in
repnz
jg
pop
cmpl
lock
vmaxsd
push
inc
dec
inc
lock
dec
xchg
push
cmp
xor
pop
jg
call
adc
es
xor
sub
pushf
sbb
rcrl
decl
push
mov
or
sbb
and
outsl
dec
adc
pop
call
loopne
or
ljmp
mov
enter
inc
fnstsw
aam
cmp
dec
sbb
and
dec
cs
cs
scas
mov
rclb
cmp
bound
int3
jl
mov
mov
repnz
aam
stc
adc
incl
inc
mov
repz
adc
test
addb
mov
cmp
sbb
fdivrs
or
les
rcrl
sub
loopne
cmp
push
stos
xchg
xchg
imul
call
mov
sub
and
pop
ljmp
divl
add
sbb
ljmp
cmp
inc
arpl
mov
jno
dec
xchg
notb
dec
imul
sbb
or
test
or
lcall
inc
movsl
imul
cli
xchg
pushf
stos
das
fldcw
outsl
fld
cmp
addr16
out
fmulp
push
cmc
push
fdivrs
add
repz
add
adc
sub
dec
sbb
pop
xor
mov
adc
imul
adc
push
jg
cmc
insb
in
add
mov
pushw
mov
add
pop
mov
sub
adc
mov
movsl
inc
adc
pop
pop
pop
divb
rcl
incl
fcmove
push
sub
xor
xchg
js
jg
adc
or
movsl
int
data16
test
add
xchg
jg
xor
dec
xchg
jle
decl
ljmp
pop
out
cmp
dec
ljmp
mov
rolb
mov
dec
pop
jb
sbb
adc
dec
mov
mov
das
lock
pop
mov
mov
mov
aam
sub
push
and
push
inc
jbe
or
mull
ret
leave
rcll
jb
push
push
test
les
hlt
inc
enter
inc
mov
cmp
cmp
adcb
std
sub
and
mov
mov
xchg
std
aaa
or
test
jg
shlb
shll
sti
out
iret
lods
or
pop
in
fsubl
jne
das
cmpsb
jmp
inc
inc
fdiv
dec
mov
pop
pushfw
mov
sub
push
outsb
pusha
xchg
lret
xchg
cmp
das
cli
pushl
mulb
cmp
insb
push
pop
cmp
xchg
aad
sahf
jp
in
mov
dec
arpl
adc
cs
aad
xchg
cld
out
insl
adc
sbb
pop
sbb
int
lcall
fisttps
mov
imul
aad
aad
fs
cmpsl
jp
stc
xor
lcall
loopne
jle
out
mov
iret
mov
mov
cmp
mov
xor
decl
add
lods
mov
xor
push
lods
leave
sbb
and
fistpl
loopne
faddl
push
lock
push
add
mov
hlt
adcb
les
decl
push
jno
sbb
cmp
xor
lcall
adc
lret
lret
xor
push
push
js
enter
gs
je
sbb
ss
scas
clc
call
or
jecxz
in
inc
jecxz
rcr
ret
mov
jmp
pop
push
in
cmp
lret
addl
aad
jb
push
fldl
lcall
out
push
bound
cld
xor
jmp
enter
pop
test
imul
std
movsl
andb
xor
int
lock
decb
and
xor
adc
call
inc
and
cmc
aad
stc
mov
shll
xor
aam
jg
lcall
lret
push
movsb
jne
ljmp
test
das
cmc
pop
mov
mov
cs
mov
cs
pop
addr16
inc
in
add
call
xchg
xorb
mov
popa
rcll
cli
fidivs
ret
sbb
cmp
bound
add
cmp
or
lret
add
add
mov
scas
jp
mov
push
xor
insb
push
insl
data16
pop
xchg
cli
mov
jo
pop
outsl
jbe
mov
or
push
jmp
scas
xlat
push
push
pushf
arpl
fadd
inc
leave
shr
or
pop
in
mov
add
xchg
mov
and
push
and
sbb
call
mov
push
dec
dec
inc
lahf
push
repz
loop
sbb
fwait
ljmp
cld
mov
ljmp
call
mov
mov
dec
pop
popa
mov
sub
mov
xor
and
insl
jmp
inc
adc
repnz
data16
inc
or
sub
sub
fst
jo
repnz
fdiv
mov
ret
adc
cmp
adc
xchg
mov
xchg
mov
pop
call
lret
mov
xor
std
cmp
call
cmc
push
in
cmpsb
add
clc
int
jo
lahf
fbld
sub
xchg
xor
test
imul
mov
jmp
sbb
bt
popa
je
mov
shlb
cmc
cmc
pushf
cwtl
jl
inc
inc
xchg
ljmp
rcl
jnp
inc
inc
fmuls
lea
mov
insb
mov
jmp
or
jne
mov
shll
push
mov
lcall
lahf
fstpt
stc
daa
xor
mov
sbb
sub
lods
cmp
outsb
fsubrp
jecxz
lret
mull
sbb
pop
stos
enter
xor
or
push
loope
lock
jmp
shll
in
repz
push
aam
push
xchg
cld
out
xchg
jecxz
inc
add
lock
push
and
mov
cmp
inc
addb
loopne
inc
xor
outsl
scas
push
fistpll
push
mov
incl
js
stos
add
fucomi
sti
lcall
pop
scas
jmp
push
cltd
sbb
or
ljmp
and
pop
inc
ss
shlb
mov
lret
sbb
daa
push
clc
dec
dec
nop
ljmp
inc
daa
ret
add
inc
and
mov
adc
mov
arpl
das
push
test
jb
jecxz
ja
jnp
push
add
lcall
jle
jne
xor
push
cmpsb
cli
jmp
adc
pop
and
xchg
cmpsb
ljmp
inc
pop
xor
xor
sbb
into
dec
orb
sbb
jns
arpl
fcomip
lcall
cmc
hlt
fwait
inc
inc
push
push
push
sar
or
xor
shll
cmp
dec
adc
rclb
dec
inc
xchg
add
xor
daa
pop
lock
dec
pop
cmp
std
popa
outsb
add
rorl
xor
insl
inc
inc
ljmp
mov
adc
mov
ds
fcomps
xchg
ds
cwtl
push
cmpsl
shll
jo
ljmp
popa
lea
push
testl
loopne
xor
mov
shlb
mov
sub
adcl
pop
mov
mov
popf
pop
nop
hlt
mov
inc
sar
push
enter
adc
out
cld
outsl
push
add
ljmp
fadds
pop
addr16
mov
cmp
arpl
fisubrl
leave
arpl
jg
xor
jnp
xchg
mov
and
das
mov
movsl
stc
cmp
repnz
pop
add
add
mov
sub
jns
fwait
pusha
mov
pop
lock
push
inc
or
mov
cmp
inc
jecxz
xor
and
addr16
mov
daa
and
dec
outsb
rorb
inc
leave
enter
sub
mov
fs
adc
rclb
pop
dec
pop
sub
rclb
incl
jge
icebp
push
rol
inc
outsb
insb
add
ljmp
fisubs
push
pop
dec
and
sub
pop
mov
movsb
push
push
aad
incl
jecxz
cmp
fwait
jmp
pop
xchg
lods
inc
mov
push
enter
adc
jmp
loop
mov
jbe
jg
insl
sahf
addr16
addr16
fucompp
mov
pop
lahf
incl
in
inc
pop
decl
nop
in
inc
aad
or
cmpsl
pop
mov
lret
decl
jmp
shrb
or
daa
mov
cs
mov
xlat
imul
popf
sbb
xor
mov
cmc
jb
or
lods
add
xor
in
lea
lcall
mov
test
mov
mov
or
pusha
cmc
aaa
std
mov
je
push
push
pop
dec
rorl
outsb
sub
dec
push
sub
popf
out
ljmp
mov
les
out
push
inc
mov
leave
or
out
push
and
xor
cmp
cli
mov
shrb
sub
std
jmp
push
ljmp
adc
pop
test
rcll
leave
add
call
incl
pop
xor
call
aas
out
dec
cmp
gs
adc
push
push
inc
jns
mov
int
push
mov
into
inc
test
lret
shlb
incl
fwait
leave
mov
nop
sbb
mov
cmc
add
incl
lds
pop
sub
bndldx
and
outsb
jg
inc
fsubs
dec
pop
ret
adc
jo
jge
call
inc
or
or
cmp
ret
sub
daa
lret
or
popf
mov
popa
mov
das
mov
rcl
xchg
aas
les
mov
inc
insl
decb
dec
xchg
clc
add
test
xchg
inc
stc
fcompl
dec
fstps
cmc
mov
adc
pushf
ljmp
sub
mov
gs
pop
mov
ja
mov
pop
cmpsb
push
pushf
aaa
adc
loope
add
nop
loop
ss
sbb
ljmp
movsb
adc
ret
es
xchg
mov
push
into
mov
repnz
stos
mov
mov
jecxz
loope
dec
xchg
sbb
outsl
popa
daa
call
cmp
inc
sbb
hlt
popa
pop
clc
subl
add
mov
mov
sbb
sub
adc
ss
stos
push
mov
xchg
mov
icebp
dec
shlb
mov
push
pushf
call
sub
push
pop
loopne
push
lods
cmpsl
mov
sbb
sbb
dec
sub
outsb
dec
sub
decl
out
out
push
js
daa
aam
pusha
jg
rorl
cltd
stos
ja
cmpsl
loop
in
jae
jbe
iret
and
sti
inc
lcall
scas
add
cli
adc
inc
push
test
call
sbb
cmp
testb
jg
add
jge
sub
inc
sarb
sbb
jl
jae
push
out
inc
in
leave
nop
jnp
das
dec
or
mov
inc
out
int3
sub
lock
push
mov
inc
decl
loopne
int3
adc
dec
add
jne
gs
ficompl
stos
stos
call
pop
fnstcw
xor
and
ljmp
adc
push
pop
inc
push
xchg
or
rorb
add
sub
lcall
xchg
mov
cmp
sbb
fadds
mov
sub
push
cmpsl
outsb
icebp
arpl
pushl
mov
sbb
or
loope
push
jl
shr
leave
sub
jl
mov
dec
xchg
outsl
xchg
mov
pop
pop
push
jle
cld
out
or
cld
mov
xchg
ret
xchg
mov
decl
dec
xchg
xor
scas
cmp
lahf
mov
mov
mov
pushl
push
insb
fcmovu
cmp
call
mov
sti
inc
fs
clc
divb
mov
rolw
and
incl
addr16
add
adc
jbe
xor
fldenv
jmp
push
pop
arpl
iret
mov
cwtl
add
push
mov
xchg
cltd
es
xchg
cmp
and
in
adc
orl
push
mov
mov
gs
pop
cmp
mov
je
imul
mov
push
cmpsl
fdivrl
fbstp
xor
xor
daa
test
imul
iret
clc
xchg
incl
dec
adc
movsl
add
or
or
arpl
leave
xchg
pop
inc
loope
mov
mov
pop
mov
or
mov
dec
cmpsl
rolb
inc
push
movsb
adc
pop
pop
daa
pop
rol
in
mov
mov
cmp
roll
push
shr
aam
inc
lret
fsubrl
sbb
pop
pop
adc
call
jg
leave
jno
subb
add
lret
pop
xchg
leave
hlt
data16
cmp
push
sbbl
sar
js
push
xchg
dec
push
loopne
pushf
jecxz,pn
les
ljmpw
dec
xlat
xchg
mov
mov
pop
incl
mov
aam
xor
dec
sbb
cmpsb
and
push
pop
or
test
lea
jl
lock
add
jmp
inc
daa
adc
dec
cmp
stos
aam
push
js
mov
mov
ss
decl
insl
pop
ds
out
insl
mov
fwait
outsl
push
mov
mov
mov
jg
adc
fnstsw
xor
mov
jmp
fwait
and
pushl
loope
push
mov
xchg
shlb
andb
inc
fcom
cmovbe
jmp
inc
stos
inc
sub
dec
inc
xor
sub
jne
adc
mov
iret
mov
mov
jnp
decl
aaa
sti
mov
jb
xchg
and
jg
cltd
lods
je
aad
iret
jle
cmp
decl
mov
mov
xor
lahf
xor
pop
js
sbb
fdivrp
sbbb
gs
xor
movsb
xlat
mov
sub
mov
jp
in
in
mov
dec
mulb
cld
incl
aam
pop
outsl
jle
dec
pop
and
stc
fstpt
popa
in
sub
movb
mov
faddl
ljmp
jbe
mov
inc
addr16
push
mov
call
add
loop
add
mov
insl
inc
mov
xor
xchg
enter
pushw
or
jmp
mov
mov
test
jnp
ss
and
incl
cltd
in
and
xchg
mov
mov
sbb
xchg
jae
es
pop
and
and
push
push
cmp
imul
pushl
lock
sbb
jmp
inc
mov
daa
add
loope
scas
adcl
out
enter
das
decl
jnp
pop
dec
push
adc
jbe
gs
loope
roll
mov
mov
popf
test
test
push
mov
into
jg
ljmp
test
mov
shl
pop
test
pop
in
xchg
sbb
or
rcr
xchg
lea
call
das
xchg
nopl
movsb
mov
add
add
cmp
clc
hlt
ret
pusha
cltd
jmp
inc
dec
addr16
push
jno
cltd
pop
fcompl
xchg
aad
mov
pushf
int3
xor
push
pop
hlt
inc
xor
mov
jmp
sbb
jmp
push
mov
pop
inc
push
insl
ljmp
fcomps
fsub
xchg
sbb
xchg
xor
and
lods
stos
dec
aam
jg
push
jae
lods
jl
cwtl
lahf
out
daa
ljmp
fisttpll
jp
fdivr
insl
lcall
push
movsb
lods
pop
xchg
push
sub
pushl
mov
adc
sbb
js
cmp
popa
andb
and
decl
insb
das
jo
sbb
filds
jno
lcall
lods
push
add
xor
jp
bound
ds
decl
hlt
mov
shll
js
aam
pop
incb
lock
jle
movb
xlat
push
insb
push
push
jo
jo
mov
ficoms
push
cmp
lods
test
and
jle
frstor
into
gs
jl
xchg
or
mov
scas
stos
scas
call
add
ret
in
pushf
shrb
ret
aam
cmp
ljmp
push
push
cmp
pop
fisttps
sub
ret
and
add
hlt
dec
pushl
adc
jae
imul
in
lcall
js
and
loop
or
ret
inc
loopne
jp
ficompl
mov
lods
ret
sarl
mov
jmp
fisubl
pop
xchg
movsb
adc
dec
sbb
hlt
push
insb
daa
fstps
movsl
jg
call
pop
scas
xchg
adc
push
mul
dec
adc
mov
cld
ljmp
outsl
fistl
mov
pusha
cmp
leave
mov
hlt
clc
loope
movsl
cmp
cld
test
stos
dec
ljmp
pop
dec
jp
pop
sarl
inc
xorb
lcall
xchg
ret
xchg
fcompl
mov
fists
mov
jo
sub
call
jle
xchg
and
dec
add
pop
cmpb
ljmp
or
call
or
hlt
std
popa
dec
sbb
and
je
cld
jmp
sub
decb
pop
lods
loop
jge
cmpsl
sar
lcall
adcl
jg
stos
icebp
repz
xchg
sbb
in
xchg
arpl
and
pop
fmull
cli
fcomip
incl
aaa
cmp
xor
inc
push
movsl
fidivl
jmp
out
xchg
sub
push
inc
sub
or
jne
lcall
xchg
fisubl
insb
aam
in
mov
in
push
dec
dec
adc
push
jmp
bound
mov
into
mov
dec
push
pop
jecxz
sbb
jp
shl
fstps
loop
sbb
push
stc
cmpsb
imul
out
and
testb
mov
ss
imul
pusha
out
adc
ljmp
ret
fsubrs
loope
fbld
dec
push
pop
adc
ljmp
and
mov
ret
ds
dec
pop
mov
mov
and
push
jmp
decl
popf
xchg
sarb
and
mov
mov
mov
shlb
int
call
xchg
mov
sbb
jo
imul
pop
xchg
cmpsl
fbstp
cmp
cmp
and
iret
int
cmp
lcall
lcall
or
and
sbbl
rclb
iret
adc
jbe
push
mov
loopne
push
jl
adc
lock
adcb
into
jge
hlt
ror
cmpsb
mov
cmpsl
or
mov
jnp
outsl
sbb
dec
mov
inc
fs
ret
rcll
outsb
sarb
adc
sbb
ljmp
js
cmc
sub
aas
lods
push
fstpt
imul
cmp
jg
call
xchg
jle
cmpsl
fisubl
ljmp
out
mov
jno
sub
movsb
lock
aas
aaa
rol
dec
pop
scas
stc
push
cmp
test
mov
lret
xor
mov
mov
imul
mov
cld
pushl
fiadds
pop
mov
mov
adc
decl
repnz
ljmp
push
ds
pop
movsb
push
sub
cli
mov
mov
cmp
pand
pop
push
rcl
dec
fstps
xchg
mov
fistl
dec
sbb
sti
cwtl
sub
and
push
inc
sbb
sbb
adc
popa
pusha
orb
loop
pop
pushl
int
xchg
clc
lea
xchg
mov
inc
test
ficoml
or
sahf
lock
pop
cmp
gs
bound
pop
inc
shl
lcall
push
inc
dec
push
and
fs
ljmp
mov
adc
jge
cmp
sbb
shlb
ds
fucomip
push
inc
ljmp
push
xchg
insb
iret
cmpsl
mov
sub
lods
mov
out
adc
ja
lods
shl
mov
decl
loop
push
lcall
stos
fimull
jae
ror
int
adc
jp
fdivrp
decl
sub
push
bound
lcall
out
xlat
mov
jbe
scas
outsl
cmp
gs
adc
daa
push
subb
fists
nop
mov
aas
roll
cmp
daa
dec
pushl
or
mov
and
lret
sbb
ss
testl
sub
pop
cmp
repz
je
sbb
mov
lcall
dec
mov
lods
adc
rcrl
movups
add
mov
push
mov
mov
fcomip
lods
nop
mov
into
jo
add
notl
movsb
pop
cwtl
test
mov
mov
dec
add
ja
ja
shr
js
outsb
mov
mov
mov
insb
clc
jmp
bound
mov
dec
dec
das
sub
mov
decl
sbb
push
lock
jb
pop
push
popl
push
out
ss
lds
inc
cwtl
jns
and
lock
and
ljmp
es
popa
mov
pop
adc
and
jo
push
inc
inc
push
and
clc
mov
xor
in
cmp
push
dec
cmc
sbb
jo
lods
loope
lcall
pop
xchg
fsubs
add
or
mov
cmp
cmp
mov
idiv
mov
add
in
in
cmpsl
loop
std
frstor
jno
das
mov
pop
pop
mov
rcr
lret
sbb
popa
inc
jbe
dec
mov
mov
mov
call
std
add
mov
lcall
sahf
cmpsl
jecxz
fstl
enter
clc
decl
pop
in
mov
nop
mov
jae
push
cmc
mov
fdivr
out
fidivs
call
sub
fistpll
push
jnp
nop
or
and
movb
xor
mov
mov
mov
lcall
sbbl
out
and
cs
mov
pop
xorl
call
and
xchg
xchg
push
add
js,pn
jns
in
xchg
mov
pop
adc
in
sar
jg
lock
pop
lcall
mov
addl
jnp
lret
stos
lods
cmpb
cs
pop
stos
popf
mov
pop
insl
fildll
ljmp
mov
dec
pop
mov
and
call
or
or
sbb
mov
lods
push
sub
sub
in
cld
push
loop
call
bound
stos
xlat
push
aad
mov
cmp
cld
dec
imul
add
mov
data16
push
pop
mov
or
adc
cmp
cltd
call
sti
xchg
push
jl
das
xlat
call
test
add
aaa
fcmovbe
fucomi
dec
jnp
sub
call
stos
fisubrl
add
cmpsl
cwtl
adcl
jp
lret
sub
add
filds
jl
sti
jle
dec
xchg
xor
divl
cmp
loope
jmp
pushf
aad
xor
stos
inc
or
push
mov
jnp
mov
out
inc
ljmp
dec
out
sbb
popf
test
adc
mul
jnp
loope
into
xchg
push
mov
fbld
mov
jo
cmp
es
adc
xchg
pusha
add
nop
lods
outsb
push
iret
aad
mov
je
lret
ds
push
inc
ret
pop
mov
pushl
mov
into
lahf
sbb
jo
fs
inc
mov
xlat
fldcw
jo
adc
dec
xlat
cmp
sarl
lods
push
mov
and
sbb
adc
bound
inc
xor
cs
mov
xlat
dec
imul
xchg
incl
adc
or
adc
mov
mov
pop
dec
dec
int3
mov
or
ljmp
or
dec
push
icebp
scas
arpl
add
stc
pop
push
hlt
shl
lods
cltd
lea
mov
jae
cltd
mov
sub
sahf
sbb
sar
aad
xchg
scas
cmpsb
xchg
lods
adc
pop
bound
cmpsl
mov
mov
ljmp
ror
adc
ja
scas
or
dec
notl
sti
out
mov
loope
stos
gs
icebp
ljmp
aam
mov
xchg
lods
call
sub
cmpsl
negl
cwtl
outsb
or
aas
pusha
test
mov
jno
sbbb
sub
sub
popf
dec
pop
scas
pushl
push
add
push
lods
cli
jne
das
repz
aam
cmp
sub
mov
jmp
daa
iret
ss
mov
testb
and
ja
mov
jg
and
push
lock
and
pop
outsl
xor
xor
push
adc
clc
cltd
rcrl
in
mov
pop
ljmp
scas
cli
ljmp
jg
mov
jne
std
test
jb
inc
mov
lcall
push
sub
ud1
jns
mov
push
add
es
inc
jno
or
in
sub
pop
and
cmc
aas
cmp
lods
fisubrs
fwait
mov
pop
lock
decl
push
sub
out
mov
and
inc
mov
dec
int3
mov
scas
loop
push
in
pop
fucomp
pop
int3
popa
mov
inc
push
insb
sub
imull
xchg
and
lcall
push
xchg
dec
ret
lds
and
and
push
inc
loop
mov
fbstp
xor
loope
sbb
pushf
mov
fucompp
mov
enter
xor
rorl
into
push
xchg
fiaddl
jo
inc
das
fisubl
jbe
sub
xchg
mov
incl
idivb
pop
mov
lea
push
cmp
mov
add
jmp
push
fisubrs
add
jmp
hlt
mov
pop
mov
jl
jbe
inc
push
pusha
lods
out
dec
pushl
int3
or
xchg
popa
mov
cmc
xchg
mov
loop
dec
icebp
jnp
cmpsl
scas
push
inc
pushfw
addl
inc
add
jb
leave
adc
imul
mov
sbb
push
out
in
cmc
pusha
js
in
mov
into
push
out
enter
jmp
jnp
mov
push
push
sahf
into
push
into
and
testb
mov
stc
sbb
dec
outsb
repz
and
shll
shrb
mov
fistpll
ret
int
jmp
mov
jmp
mov
mov
jbe
xor
sub
jmp
ja
mov
push
push
mov
ret
push
xchg
mov
mov
pop
cmp
or
scas
lcall
inc
iret
mov
mov
and
test
out
sbb
and
cli
decl
outsl
sahf
pop
jno
rorl
mov
imulb
cmc
push
cli
lret
lcall
jmp
dec
divb
push
pushf
xorl
fisubrl
pop
add
or
ljmp
mov
jnp
jbe
test
cmp
js
out
gs
bound
test
call
push
loope
call
jbe
fistpll
adc
lea
lcall
jle
or
and
pop
sbb
mov
or
mov
adc
fdiv
jl
push
in
insl
pushl
test
mov
and
test
add
jl
mov
out
sub
sub
pop
mov
jl
cmpsb
movsl
jo
in
xlat
arpl
jmp
adc
adc
js
les
adc
dec
cmpsl
jp
xchg
mov
pop
nop
out
dec
xor
sub
cwtl
adc
insb
pop
repnz
dec
add
leave
and
add
add
insb
cmp
in
outsl
adc
dec
ljmp
push
shl
mov
daa
mov
lahf
cwtl
sti
mov
xlat
stos
bound
inc
jge
jnp
fcomip
incl
movsb
pop
out
push
mov
js
adc
jno
in
dec
sub
stos
cli
es
and
and
pushl
sbb
cmp
push
cli
lods
xchg
and
int
lcall
push
mov
mov
in
mov
push
lock
sbb
imul
in
mov
pushf
sbb
adc
enter
out
push
xor
stos
push
ret
shrl
repz
out
aam
js
imul
ljmp
shl
pop
insl
cmp
and
or
cwtl
jno
sbb
pop
cmp
and
loope
rorb
incl
lods
pop
pop
out
sub
loop
loopne
bound
push
insb
cmp
inc
ja
sarb
andl
sub
push
push
lock
fistps
jmp
adc
push
mov
mov
mov
ljmp
cmp
mov
jb
xchg
xor
enter
ss
pop
and
jmp
or
lock
sbb
cmpsb
pop
xlat
gs
adc
push
jecxz
leave
dec
xor
cmc
fdivr
call
hlt
lds
fdivrp
pushf
aas
push
rolb
scas
jno
pop
mov
inc
or
sbb
lock
out
or
decl
shll
mov
mov
mov
pushf
jl
ret
push
mov
rolb
leave
jp
insb
mov
call
jle
aas
movsl
fiadds
cwtl
inc
inc
add
in
push
sub
push
js
push
icebp
ljmp
test
push
dec
decb
cmpsb
push
std
push
xchg
cmp
faddl
fists
fucomp
shl
gs
in
add
dec
jmp
pop
mov
std
stos
lahf
int3
mov
jg
repz
pusha
cmpsb
or
rclb
jnp
in
or
ljmp
cmp
pop
data16
mov
cmp
push
jecxz
repnz
or
rorb
loop
data16
mov
test
dec
mov
jge
fisubs
sub
pusha
push
ljmp
sbb
lcall
sub
mov
inc
or
js
sub
fiaddl
mov
jg
loop
rcll
imul
test
jg
pop
nop
les
xchg
cmp
rclb
and
cmp
in
xchg
adc
stos
mov
ret
ja
xchg
addr16
push
jl
mov
xchg
sbb
mov
fs
popa
pushf
or
ss
lret
divl
or
mov
cld
fcoml
in
jg
lods
xor
jbe
cmpb
sub
arpl
mov
sub
sub
and
negl
mov
scas
dec
add
fs
mov
mov
aaa
cwtl
cwtl
je
aaa
iret
pop
mov
dec
mov
lds
lcall
out
div
loope
negb
mov
mov
cwtl
cltd
icebp
add
stos
js
mov
push
lea
sarl
addb
adc
cmp
push
ds
dec
pushl
jmp
push
cmp
and
les
or
or
hlt
jmp
cltd
mov
iret
ds
ret
popa
cmp
mov
jb
lods
jbe
xchg
mov
incl
mov
jle
adc
jbe
pop
pop
sbb
push
mov
jp
xchg
ret
cmp
aas
daa
lock
jmp
insl
js
je
mov
xchg
inc
bound
or
imul
mov
call
mov
shlb
jne
pop
mov
sub
dec
pusha
mov
cwtl
pop
lcall
push
xchg
shr
enter
cmp
or
adc
das
dec
test
xor
hlt
lcall
fadds
movsb
jb
lcall
pushf
push
scas
incl
push
and
ror
je
inc
mov
std
jmp
pop
bound
jnp
mov
pop
mov
mov
dec
sub
fbstp
fld
xor
mov
mov
add
scas
jb
imul
jle
pop
fucomi
inc
and
scas
lcall
add
jg
fdivl
xchg
test
add
lds
push
das
loop
negl
pop
push
scas
test
in
decl
rcrl
sub
sahf
insb
sti
jl
mov
pushl
loopne
mov
popa
shlb
dec
in
jns
rcrl
pusha
fcompl
pop
mov
nop
push
call
and
aam
test
xchg
fwait
pushf
add
and
cmc
stos
sbb
cmp
pushf
jmp
es
xchg
jecxz
test
push
clc
pop
lods
pop
out
jecxz
iret
push
or
loop
pop
bound
pop
ljmp
mov
fildll
lds
mov
mov
fs
fimuls
pop
xchg
xor
fists
pop
jne
sarb
jo
mov
test
sub
shrb
push
stos
lods
pop
xchg
in
mov
lcall
xor
push
xchg
ja
sub
mov
jae
dec
mov
cmp
sub
decl
xchg
enter
cmp
xchg
jmp
rclb
xchg
loope
or
jge
call
inc
dec
or
mov
xor
xor
mov
xchg
push
xchg
jmp
jb
mov
pop
pop
xchg
sti
or
mov
xlat
mov
fcomip
ljmp
mov
mov
mov
test
mov
cltd
ds
dec
lcall
incl
jle
mov
and
cli
jne
pusha
sbb
adc
in
idiv
ss
ljmp
daa
lret
fisubs
je
inc
aad
loopne
iret
push
pop
xorb
pop
sbb
es
outsb
lcall
lcall
xor
sbb
cmp
in
fdivs
dec
adc
call
stos
int3
pcmpgtd
cmpsl
cmp
push
and
jl
enter
aas
add
ljmp
pusha
mov
test
inc
adc
out
mov
aas
cmc
fst
fldcw
sahf
ja
ret
es
cmp
ja
decl
pop
subb
and
repnz
push
cmp
jne
mov
and
push
leave
sbb
jb
jg
call
xchg
or
or
sbb
idivl
cmpsb
inc
adc
inc
imul
mov
cmpsb
dec
lahf
adc
sahf
push
addr16
or
jl
or
divb
incb
sbb
or
mov
divb
add
jle
lock
fists
fisttps
stos
add
cltd
lock
add
xor
push
pop
mov
inc
adc
mov
pop
add
add
call
outsl
fwait
mov
ret
mov
jge
popa
xchg
repnz
cmpl
mov
movsl
hlt
lods
cmc
adc
add
dec
add
jo
xchg
pop
ljmp
int3
outsl
add
add
pop
mov
xchg
scas
mov
stc
in
pop
adc
cmp
loope
pop
jno
ffree
call
pop
mov
aaa
xchg
inc
jno
insl
scas
add
xor
stos
icebp
scas
stos
sbb
insb
cli
pop
test
sar
push
call
out
mov
mov
pop
pusha
or
pushf
cmc
or
arpl
decl
jnp
ss
mov
jle
inc
loopne
call
fldpi
push
imul
call
pop
test
loop
xchg
jle
xchg
loop
in
fwait
mov
daa
push
aas
pop
outsl
lock
sub
lcall
jp
rcrl
adc
rcll
movsl
inc
in
popl
fildll
inc
dec
or
pushl
xor
rep
sbb
ret
jmp
in
cltd
out
fucomp
pop
fadd
stos
push
ret
adc
test
sarl
adcl
jle
fsubrs
xor
fs
call
jmp
jg
loope
push
pop
push
push
xor
push
ds
push
sub
out
adc
lcall
mov
jmp
inc
cltd
xor
xor
jne
sbb
fwait
outsw
or
popa
rorb
scas
push
cmp
lcall
or
and
fsubrl
mov
or
scas
mov
pushf
cmpsb
sahf
push
into
in
sti
jcxz
in
rcrl
inc
aam
dec
rcrl
push
ror
jns
push
mov
hlt
mov
mov
dec
or
adc
cmc
test
imull
and
in
orl
dec
fldl
call
dec
xchg
or
pop
out
loope
jl
incl
cld
call
sbb
es
test
in
push
mov
ret
pop
pop
jnp
mov
sub
test
fsubr
push
push
test
jnp
xchg
aas
jmp
repnz
adc
pop
orb
out
shll
incl
shrl
jbe
mov
mov
inc
gs
leave
insb
fcomip
in
call
push
neg
cwtl
out
sahf
sbb
jnp
add
adc
add
ljmp
xchg
mov
ret
and
push
incl
cltd
scas
dec
pop
jg
sub
or
je
add
mov
jg
mov
std
ret
sub
pushl
loop
rorb
je
pop
cmp
mov
inc
sub
mov
cld
lret
jp
add
mov
leave
clc
inc
or
ljmp
xchg
pusha
pop
sub
pop
push
dec
inc
push
mov
repz
andb
and
xchg
or
adc
push
pushf
dec
ljmp
clc
pop
push
pop
repnz
es
stc
std
sbb
mov
mov
inc
out
cmp
lret
decl
enter
jns
out
xor
test
arpl
dec
dec
xchg
subl
or
push
add
sbb
fs
repz
and
jnp
xchg
std
aam
incl
xor
and
aaa
clc
mov
fiadds
adc
popf
loope
jle
cmpsl
add
ret
adc
jle
cmp
lahf
sub
mov
and
shrl
mov
jnp
dec
cld
and
out
enter
clc
cmp
std
inc
inc
in
lret
cmpb
rcr
or
mov
mov
mov
mov
xchg
inc
lret
sbbb
mul
stos
push
adc
lret
out
ds
loopne
cmp
mov
pop
mov
jp
hlt
in
jae
xchg
out
push
mov
jo
dec
adc
mov
mov
hlt
adc
sbb
sub
xchg
sub
jmp
pusha
into
xor
fsts
inc
decl
inc
call
adc
fstpl
cmp
scas
jne
mov
andb
xchg
push
ret
mov
idiv
ljmp
jns
and
inc
test
jns
leave
fidivl
cmp
sbb
mov
jmp
repnz
jno
mov
pop
test
addr16
repnz
jmp
test
nop
fdivr
lcall
decb
inc
pop
mov
jge
enter
pop
lahf
xor
sbb
clc
dec
adc
sar
out
add
fldt
aam
aas
sbb
iret
xor
movsb
xorb
push
dec
add
jg
notl
jp
in
mov
mov
sbb
iret
addl
icebp
out
cmp
inc
push
jge
mov
mov
adc
testb
incl
fisubrl
pop
xlat
testl
and
lcall
push
push
mov
pop
and
les
jns
xor
aas
dec
or
push
test
jae
fidivs
sub
sbb
adc
sub
xchg
stc
not
enter
lahf
icebp
das
xchg
cmp
jnp
mov
fimull
mov
add
mov
xlat
sbb
movsl
into
push
sub
lcall
jg
add
dec
arpl
mov
lahf
dec
daa
aas
pop
mov
or
insb
mov
sub
mov
enter
repnz
shr
cltd
sbb
lret
and
shrb
arpl
push
xlat
cmp
ljmp
jge
mov
std
and
push
jecxz
pushf
lds
decl
push
jle
inc
jo
movsb
jmp
nop
push
push
leave
xchg
sub
pop
xchg
mov
cmp
jb
push
xchg
jg
nop
adc
cld
decl
dec
fbstp
jb
push
xor
sahf
aad
ljmp
cli
ja
pop
nop
push
inc
cltd
add
cli
or
call
jmp
in
roll
movsb
pop
jmp
lret
loopne
mov
loop
cmp
add
daa
data16
ds
mov
sbb
sub
lods
call
xorl
daa
lock
lret
call
xchg
movsl
pop
and
mov
stos
dec
dec
lods
movsb
lds
lods
dec
and
popl
sti
pusha
cmc
cld
jg
shr
lock
test
sub
cld
popa
sub
jne
movb
sub
call
loopne
sbb
data16
gs
sbb
cld
cli
cmp
ljmp
and
imul
mov
jp
cwtl
mov
test
push
inc
and
mov
jo
mov
dec
push
cmp
sbb
or
call
insb
mov
fwait
cmp
push
cmp
push
loop
pop
enter
xchg
jmp
sbb
mov
ljmp
or
movsb
or
push
add
ljmp
adc
push
sub
sti
stos
or
in
dec
sbb
xchg
incl
aas
push
and
or
mov
lcall
mov
mov
sbb
sahf
loop
cmp
jecxz
aas
sub
je
sub
in
int3
std
ds
je
decl
add
add
es
push
jns
dec
inc
pop
push
adc
pushl
pop
jp
cmp
in
and
lcall
inc
arpl
lahf
lods
dec
push
scas
cmc
pop
mov
mov
call
scas
cltd
repz
jbe
xor
int3
or
aaa
dec
jmp
in
stos
sbb
xor
lret
add
inc
fmul
scas
popf
sti
and
jl
pop
pop
gs
call
jecxz
ret
and
lcall
push
outsb
imul
mov
sahf
das
in
adc
xor
or
ljmp
cmp
push
sbb
aas
or
in
pop
in
dec
lock
mov
clc
add
int
adc
xchg
mov
lods
loop
je
out
in
out
repnz
or
jg
cltd
gs
push
pop
jp
pop
xorl
inc
add
lcall
dec
jns
jle
push
jg
push
rorb
sub
ds
es
aad
sarb
stos
inc
data16
fsubr
xchg
push
mov
or
xchg
rcll
outsb
dec
daa
sub
ds
std
add
dec
dec
pop
pop
lret
lcall
addr16
hlt
cltd
imulb
jge
enter
ds
ljmp
sub
or
push
rorl
cmp
sahf
mov
and
incl
push
pop
fsubrs
test
inc
mov
scas
dec
aad
mov
rolb
daa
push
inc
in
inc
mov
sub
lcall
lahf
cmp
mov
mov
dec
cmpb
in
sbb
lret
lock
sub
call
cld
and
lcall
outsb
fisttps
jle
fwait
call
ss
mov
push
test
cltd
mov
incl
insl
mov
push
inc
movq
cmc
bound
jp
mov
test
xlat
mov
pusha
sarl
adc
push
fcomip
jg
pop
gs
mov
cmp
and
adc
cmp
xor
mov
sub
shrb
fbld
in
ror
mov
pop
cld
fistps
leave
lret
add
cmpsl
inc
xor
sar
lods
mov
pushl
cmpsb
loop
sbb
fdivl
orb
daa
pop
int
mov
xlat
sub
testl
jp
js
out
data16
xor
jge
pop
ret
add
lods
inc
sub
sbb
sar
fadd
xchg
jl
and
ja
xor
adc
mov
mov
add
mov
into
gs
lcall
aas
rolb
subb
std
into
add
lock
mov
clc
push
push
outsb
dec
mov
push
insl
je
jg
pushl
mov
jo
mov
dec
stos
pop
mov
jge
mov
sub
pushl
scas
pop
movzbl
nop
pop
pop
stos
rcr
rcll
inc
shl
arpl
inc
xor
mov
sbb
sbb
mov
scas
scas
or
nop
hlt
int3
pop
nop
adc
push
loope
pop
lcall
mov
pushl
bound
cwtl
fs
jns
stos
pop
sub
mov
leave
clc
incl
mov
push
popf
cmpsl
in
or
mov
sti
adc
or
call
xchg
cmpsl
lods
sbb
vxorps
call
sbb
jb
loope
or
les
test
mov
loope
ljmp
out
sub
inc
int
inc
fildl
test
push
push
pusha
fsubs
shl
cmpb
fmull
xorb
and
adc
iret
dec
jl
cwtl
jbe
addb
scas
mov
js
fimull
decl
mov
jno
pop
sub
imul
cmp
repnz
in
push
and
lcall
fs
nop
inc
mov
jne
es
repnz
push
jb
fsubrl
dec
test
cld
lcall
cmp
add
sahf
cmpsl
fwait
adc
faddl
sbb
fcomip
jmp
and
or
lret
stos
sub
cmp
mov
mov
xlat
xorb
lret
ret
mov
repnz
incl
loopne
flds
mov
sbb
xchg
shrl
cmpl
das
outsl
dec
mov
bound
xor
push
pop
or
cmp
adc
mov
ss
stc
xlat
pop
and
and
leave
popf
pop
mov
andl
fwait
sbb
js,pt
out
dec
cmp
pushl
add
and
add
es
adc
je
fidivs
lods
insb
or
fists
enter
test
aad
pop
out
lods
cmpsl
rclb
sub
call
mov
fists
aad
or
sahf
mov
cmp
mov
decl
out
adcb
out
out
icebp
subb
mov
or
or
and
jmp
gs
subb
sbb
fbld
xorb
fisubrs
cwtl
jmp
lock
push
stos
movsl
shrb
test
iretw
movl
mov
push
pushl
push
testb
push
add
sub
movsb
sbb
sub
dec
nop
in
outsl
jb
decl
push
loopne
mov
pop
cwtl
jecxz
dec
pushf
je
cmp
sbb
imulb
iret
out
push
loope
push
adc
out
inc
sbb
rorl
lds
add
data16
jge
cmc
dec
pusha
lcall
lcall
sub
push
movsb
sbb
decl
or
in
push
and
test
adcl
shr
pop
sbb
decl
cmp
fs
mov
imul
xor
xchg
mov
mov
sbb
ljmp
cli
popa
bnd
jns
mov
rcrl
in
push
ja
pop
cmp
ljmp
ficoml
adc
scas
inc
dec
cltd
jp
loop
rcll
popf
mov
incl
addl
popa
sub
pop
sub
xor
test
add
adc
dec
inc
jge
push
lcall
jne
pop
fldln2
or
add
mov
mov
cli
jg
incl
fdivs
dec
mov
fmuls
inc
and
mov
cmpsb
lock
dec
ja
sbb
pushf
xchg
mov
dec
jmp
push
mov
push
jecxz
sub
stos
outsb
sub
mov
mov
xor
loopne
pushl
mov
or
xor
incb
cwtl
clc
cwtl
test
lcall
ja
push
sub
sar
jg
and
sbb
xlat
out
insb
mov
mov
mov
insl
test
pop
dec
mov
jmp
and
push
int3
cmpsl
inc
mov
in
or
or
bound
jg
inc
fdivr
ljmp
mov
fists
mov
out
push
push
mov
inc
test
xchg
add
call
fidivrl
sbb
xchg
mov
adc
gs
pushl
mov
inc
mov
scas
push
fldcw
cmpsl
lahf
les
decl
decb
push
insb
pop
hlt
dec
popf
mov
icebp
icebp
sub
insb
iret
pushl
dec
mov
xchg
shll
xor
inc
cld
pop
sub
jg
cld
cmpsb
xlat
lcall
pop
push
divb
xchg
or
sub
arpl
rorl
inc
out
ljmp
fstpt
add
decl
adcl
mov
xchg
fbstp
in
stc
adc
enter
rcll
das
push
dec
dec
cmc
sbb
mov
rol
cmp
pop
and
call
into
mov
jmp
or
les
mulb
dec
xchg
hlt
nop
xchg
pop
mov
stos
into
mov
subl
ds
push
mov
jb
shrl
mov
inc
fmull
ds
sbb
mov
xrelease
inc
jp
jmp
xor
cld
inc
das
jns
dec
inc
divb
mov
jg
add
jecxz
and
ficoml
aaa
mov
call
mov
loope
enter
scas
inc
push
test
push
jno
call
loop
rcrb
scas
outsb
in
sbb
ret
aad
adc
mov
cwtl
lds
insl
rorb
sbb
std
xchg
mov
jg
push
clc
mov
test
or
imul
pop
leave
xor
decl
outsl
add
push
mov
push
jbe
mov
outsl
sbb
and
mov
popf
sub
push
add
mov
icebp
out
repz
pop
mov
icebp
incl
rorl
jno
cmp
orl
scas
clc
lcall
arpl
xchg
int3
jb
jmp
pop
in
or
or
idiv
cmp
sub
cmpsl
shrl
mov
pop
xor
lock
ljmp
dec
imul
sbb
movsb
cwtl
pop
sub
dec
sar
xorb
push
lahf
insb
pop
add
lcall
sub
es
pop
mov
fwait
fs
mov
decl
xchg
out
das
mov
aam
aam
inc
inc
xor
sub
sar
mov
jge
mov
jbe
and
ljmp
inc
rep
pop
sub
out
mov
jl
repnz
loop
sbb
rclb
fisttps
sbb
loope
cmp
or
inc
inc
int3
sub
mov
dec
pop
test
xchg
enter
sub
jbe
testl
jns
sub
push
call
notl
in
push
into
jle
aam
insb
cmc
dec
lret
rcl
int
rclb
cmp
lcall
sbb
push
inc
push
movsl
mov
fcoml
adc
lahf
jnp
inc
push
jmp
flds
rorl
cli
and
clc
pop
mov
cltd
jne
xchg
aas
je
add
push
pop
mov
pushl
lods
jno
dec
lret
push
mov
adc
addr16
insl
fwait
sub
call
inc
push
cltd
mov
cmpsl
ret
movsl
adc
push
sbb
add
fs
fists
cli
mov
cmp
adc
sbb
jo
int
outsl
mov
or
aam
cmp
ss
jg
enter
pop
mov
dec
cmc
push
dec
mov
inc
cwtl
push
inc
add
inc
and
repz
sahf
inc
adc
ret
fwait
fwait
cmpb
scas
out
out
and
incl
add
test
adc
cld
cmp
outsl
ljmp
lcall
jecxz
decl
dec
xchg
xlat
xchg
and
mov
cli
test
out
add
in
fists
pop
jbe
mov
out
inc
jp
inc
cmc
into
loop
movsb
dec
jle
jp
pushl
mov
cltd
pushf
imul
mov
dec
sbb
out
adc
xor
jle
stos
imul
dec
lock
je
sub
out
mov
jmp
mov
call
rcr
inc
inc
sbb
dec
lea
jp
jb
subb
int
mov
cmp
scas
cltd
jbe
mov
adc
push
fwait
cltd
sbb
decl
and
js
jae
pusha
xor
xor
aad
xchg
int
in
arpl
fisttpl
in
movl
inc
sbb
int3
cmp
insl
mov
stos
rorl
pop
add
loopne
jmp
stos
pop
ss
xchg
sbb
fists
shl
popf
repnz
jg
jmp
jne
mov
dec
ja
push
mov
inc
out
mov
push
cmp
jmp
or
cmc
shlb
outsl
jmp
test
pop
mov
cmpl
aad
mov
jg
mov
xchg
inc
lahf
mov
scas
mov
add
test
sbb
ljmp
cli
aaa
leave
mov
push
sbb
mov
mov
pop
xchg
lods
push
data16
decl
movsb
xor
popf
adc
xchg
adc
mov
inc
dec
add
adc
andl
fwait
cmp
push
add
add
fimull
insl
mov
mov
mov
stc
out
out
fldl
mov
inc
stos
adc
in
push
cmp
mov
pop
mov
lret
orb
xchg
mov
pop
call
test
jbe
scas
cmp
lcall
push
test
push
cmp
test
mov
lock
movsl
cmp
ret
nop
idiv
pushl
icebp
cmc
dec
int3
pmulhuw
and
cmp
fwait
mov
das
outsl
repnz
xchg
push
call
pushl
jecxz
or
loopne
sbbl
ret
shlb
inc
call
mov
mov
outsl
or
xlat
mov
mov
ret
sub
loope
xchg
decl
dec
jbe
jg
push
or
aam
ficoml
add
xchg
push
jnp
mov
ror
rol
cmp
in
call
jae
ret
pop
loope
insb
dec
popf
mov
xor
sub
mov
pushl
jne
ret
cmc
aam
xor
sbb
test
or
push
test
mov
call
into
lea
mov
sub
icebp
inc
xchg
aam
adc
decl
popa
enter
or
pop
arpl
push
ljmp
inc
mov
pop
and
inc
mov
mov
mov
pop
ja
mov
jmp
ljmp
dec
adc
and
sbb
sti
pcmpeqd
es
adc
std
dec
xorl
add
test
push
ljmp
in
pop
fnstsw
scas
or
adc
push
add
inc
pop
push
lods
xchg
inc
mov
icebp
pop
mov
dec
jb
std
pop
clc
mov
je
mov
inc
decl
incl
cs
dec
adc
or
mov
cli
xchg
dec
notb
pop
jmp
adc
orb
cld
cmc
push
test
pop
jecxz
ljmp
push
ja
pop
icebp
lcall
inc
loope
repz
push
test
push
inc
jmp
les
mov
call
jmp
scas
lods
sub
fbstp
sub
sbb
xchg
in
adcl
icebp
dec
push
div
test
outsb
adc
push
lea
xchg
std
cli
push
mov
loope
and
loopne
imul
sub
mul
add
push
dec
jbe
iret
xor
fsts
and
pusha
ss
fcoms
xor
sub
jns
out
jp
fisttps
fucomi
arpl
andb
adc
ret
decl
cwtl
or
sbbb
out
mov
aam
adc
sub
push
arpl
xor
cld
ljmp
rorb
push
and
mov
lret
and
iret
mov
js
and
jg
sub
cmpsl
and
xor
pop
sub
mov
push
sub
push
mov
mov
ja
or
sbb
jns
or
or
pushl
xor
pop
aas
push
inc
inc
roll
jmp
sbb
push
lods
lds
cld
lcall
sub
add
push
and
sbb
mov
fisubrl
adc
jg
add
enter
es
cmp
sub
lcall
mov
mov
cld
mov
xchg
mov
sbb
jg
adc
push
dec
and
jae
das
je
xchg
sub
cmc
aaa
decb
inc
pop
push
jg
shlb
push
mov
xor
cwtl
repz
adc
add
lds
pushf
add
mov
fsubrs
cmpl
in
pop
and
data16
cmp
addb
scas
sbb
out
push
lret
sbb
jmp
or
lret
and
decb
insb
jg
stc
leave
bound
test
sbb
push
xchg
shl
mov
cli
repz
mov
imulb
sbb
sar
popf
add
aad
mov
xchg
or
fstp
dec
dec
mov
das
xor
es
fists
inc
mov
mul
xor
arpl
dec
test
jp
test
and
mov
fmull
sub
in
stos
sub
pop
sbb
ficoml
pushl
call
jge
movsb
pop
mov
arpl
sub
sub
sbb
call
push
sahf
aad
mov
test
movsl
rcr
ss
clc
mov
out
call
call
ficomps
clc
dec
sbb
das
addl
jnp
dec
mov
lcall
xlat
add
lds
jno
inc
fs
loopne
xchg
inc
sbb
lods
xchg
mov
shrb
std
call
mov
stos
aad
stos
pop
ds
sbb
cmp
fcomi
cmp
arpl
ljmp
imul
push
incl
mov
push
xor
in
inc
mov
rorl
das
xchg
xchg
push
call
mov
xchg
mov
mov
add
test
ljmp
cli
jnp
inc
xor
movq
cmpsl
or
mov
or
les
pop
jo
jmp
test
test
lcall
or
push
push
cld
ret
mov
mov
dec
sub
mov
int
scas
jmp
pop
notb
and
lea
and
das
mov
fisubrs
mov
out
mov
adc
decl
inc
lea
ss
out
loop
test
inc
pop
dec
add
loop
jg
mov
pop
test
pop
sub
aad
add
call
inc
lods
fcompl
sbb
fisubl
sbb
dec
shlb
in
into
sbb
pushw
cmp
mov
call
std
xchg
pop
test
enter
inc
adc
repz
xchg
aas
cli
sbb
enter
ljmp
clc
xchg
mov
xchg
jns
cmpsb
pop
ret
stos
jo
jne
repnz
mov
adc
fwait
popf
jb
dec
pop
pop
popf
adc
cli
mov
xor
mov
mov
fists
pop
lock
roll
decl
scas
add
inc
aad
in
push
push
dec
dec
lcall
jg
and
xchg
lahf
loope
and
int3
or
cs
popa
sahf
mov
mov
shrb
decl
fnstcw
xchg
into
dec
fcoms
or
lcall
call
xorl
cwtl
movb
cmpsl
xor
push
jg
pop
jmp
xlat
pop
popa
iret
in
mov
dec
popa
data16
push
mov
aas
pop
mov
incl
lds
pop
cltd
sbb
imul
lret
test
or
test
add
les
push
xor
call
add
pop
rcll
loop
ret
ljmp
jnp
jecxz
out
fwait
stc
xor
dec
pop
shr
stos
ror
push
jg
inc
cld
and
pop
enter
std
stos
jbe
pop
imul
sbb
pushl
pop
out
movsb
jb
lods
test
sbb
mov
fists
xor
cmp
push
dec
popf
outsl
inc
loope
xor
or
push
add
ljmp
add
incl
es
push
jl
cmpl
or
and
xchg
xor
mov
in
adc
lcall
scas
lcall
inc
jle
movsb
cmp
js
xor
dec
dec
mov
mov
add
jo
push
inc
imul
rol
sub
pushl
sub
inc
aaa
out
leave
in
fsubs
mov
lods
jp
les
mov
push
cwtl
sub
push
out
loope
dec
subb
loope
into
adc
sbb
cmp
mov
push
mov
lcall
xchg
and
dec
cmp
sbb
adc
icebp
stos
mov
call
out
stos
or
pop
jae
mov
insl
movsb
jns
pop
mov
mov
and
jge
add
push
push
push
inc
mov
cld
jg
push
or
sbb
pop
add
loope
sub
pop
xor
ljmp
mov
dec
aad
ss
xchg
clc
imul
mov
rorl
jnp
lea
jge
inc
ret
mov
pusha
adc
xchg
adc
push
test
idiv
lock
test
sbb
add
sarl
popf
mov
sti
fildll
cmpsl
push
pop
push
mov
jl
es
jns
sbb
loopne
in
inc
sbb
stos
pop
hlt
lahf
push
jg
pusha
outsb
dec
jge
mov
jg
jecxz
int3
or
mov
rcrl
cmp
add
cld
jle
cltd
aas
enter
pop
mov
stos
ret
mov
mov
xchg
movsb
loop
or
lahf
jno
rorl
decl
mov
repnz
push
jecxz
mov
or
xor
xchg
int
adc
cmpsl
lods
into
test
ret
mov
xor
mov
xlat
pop
fisubrs
ss
fisttps
out
scas
xchg
adc
mov
cmp
xchg
call
fisttps
pop
adc
and
jg
incl
mov
mov
out
mov
decl
test
mov
mov
je
insl
mov
or
mov
incl
jl
enter
xor
mov
mov
in
test
xchg
and
lcall
movsb
fsubl
xchg
lcall
mov
addl
xchg
cmp
mov
add
je
lcall
sbb
mov
adc
lcall
rep
push
cs
aas
test
cmp
cld
add
ret
clc
mov
adc
jnp
inc
xchg
jmp
bound
negb
dec
ret
xchg
aad
jg
lods
pop
test
mov
sbb
test
mov
xchg
loop
ljmp
xor
enter
mov
int
sub
icebp
mov
pushf
jae
jmp
ret
insb
push
and
aam
or
pop
ds
enter
nop
cli
adcb
std
and
lcall
xor
movsl
or
cmp
mov
sub
dec
or
jmp
sub
lods
das
mov
inc
iret
shlb
cli
int3
inc
push
inc
mov
mov
sbb
int3
lret
fildl
cli
dec
cmp
sar
ljmp
cmp
mov
jle
les
hlt
sub
hlt
mov
adc
push
scas
push
xchg
sub
mov
mov
dec
loop
inc
sbb
pop
test
sbb
sub
fstpl
dec
fistpll
and
jp
out
clc
clc
sub
cmpsl
adc
xchg
push
scas
cli
jmp
pop
js
out
lea
out
hlt
int3
mov
lret
jnp
fmul
dec
imulb
fstpl
lods
xor
pop
cs
divl
test
mov
decl
mov
xor
adc
aas
sbb
lahf
mov
insl
fldpi
fldcw
pop
cltd
cmpl
orb
stos
pop
add
out
push
test
mov
imul
mov
or
decl
mov
ds
divl
or
jecxz
test
mov
fwait
inc
push
inc
sbb
fsts
or
ds
mov
out
add
in
aam
xchg
cmp
xchg
pusha
mov
ja
and
mov
push
call
pop
pop
pushf
sahf
push
xchg
push
add
stc
xchg
je
mov
movsb
out
mov
xchg
sub
std
mov
cmp
loope
sbb
pop
xor
enter
dec
decl
aaa
into
std
scas
fs
jne
push
ret
jl
in
in
rclb
in
call
xor
xchg
mov
pop
mov
repnz
call
xlat
popf
insb
or
dec
pop
jo
dec
es
jecxz
mov
xchg
or
inc
jmp
xchg
incl
mov
fwait
inc
mov
and
mov
movsb
repz
dec
sahf
loope
xchg
pushl
xchg
pop
xchg
daa
xor
cwtl
test
sbb
rcrb
sbb
mov
push
imulb
inc
jb
or
outsb
xchg
cs
dec
mov
push
mov
mov
push
xor
cmp
and
jmp
sar
cmp
pop
in
or
call
int
or
cltd
mov
lcall
int
or
mov
stos
cmp
adc
lcall
ljmp
xor
inc
and
mov
xchg
xor
int3
push
outsb
aaa
lret
dec
sbb
jmp
lcall
push
stc
in
loop
and
pop
hlt
xchg
jge
dec
mov
ret
xchg
imul
jmp
decl
and
inc
cmp
sbb
scas
mov
enter
dec
incl
push
test
int3
loopne
call
in
test
push
pop
scas
pusha
ret
jmp
add
lret
mov
push
mov
xlat
cld
repnz
mov
pop
addb
pop
cmp
push
jg
cltd
into
sbb
mov
es
xor
mov
sub
sbb
pushl
frstor
xchg
fstpt
sti
lds
inc
sbb
js
or
loop
insb
mov
push
ror
movb
call
or
pushl
daa
push
divl
mov
out
mov
fcompl
jno
int3
push
push
push
je
push
xchg
clc
lock
xchg
jle
push
mov
lret
std
push
fidivrs
xor
pop
xor
test
sub
das
test
adc
inc
call
pushl
ds
or
sub
pop
loopne
sub
imul
sahf
ret
dec
ljmp
sbb
jmp
mov
jg
leave
add
js
ja
ret
mov
jmp
xchg
dec
jmp
nop
sarb
push
and
cmpsl
hlt
call
mov
mov
and
into
and
leave
or
lcall
insl
xchg
lret
leave
and
add
dec
xchg
cmpsl
mov
push
daa
inc
cltd
fwait
aam
mov
cmp
imul
cld
icebp
aas
pop
ja
or
or
adc
xor
add
clc
in
add
enter
incl
sub
add
rorl
xchg
push
mov
mov
or
mov
cld
cmp
jno
push
fsub
pop
loopne
ja
inc
sbb
push
lods
lahf
clc
lahf
xor
mov
sub
mov
pop
cmp
dec
std
pop
stos
decb
in
cmc
add
decl
fdivs
shl
pushf
lret
sub
adc
sub
dec
add
call
daa
and
cmp
mov
jg
insb
push
mov
fcompl
jmp
decl
or
scas
add
into
mov
jb
mov
mov
pop
nop
out
ljmp
xchg
ljmp
fwait
lcall
xor
jae
call
imul
sbb
sub
inc
in
jmp
jnp
cmp
pushf
jp
rcrb
lods
div
in
in
stc
stos
shl
and
or
call
ljmp
adc
sbb
mov
xor
std
lcall
ljmp
imul
enter
mov
imul
adc
add
stos
mov
faddl
adc
ret
sub
jp
pop
cmp
xchg
jmp
cmp
inc
call
sbb
adc
add
ja
es
sbb
sub
out
and
dec
stos
rolb
dec
push
sbb
pop
adc
data16
jg
xor
dec
cmp
test
andl
add
lret
inc
sub
adc
push
mov
in
icebp
scas
pushl
dec
push
shlb
jmp
pmuludq
jbe
push
fsubrs
outsl
cli
jmp
pop
cld
test
orl
ret
push
mov
test
or
incl
cmp
xor
push
aam
jne
dec
add
pop
in
lcall
je
or
dec
cwtl
push
jne
push
lods
test
frstpm(287
mov
jmp
add
sbb
xor
add
mov
mov
enter
lcall
inc
repz
xchg
or
pop
repz
pusha
cmp
jge
test
aas
push
int
xchg
idivl
call
cmpsl
dec
sub
cmp
loop
loope
xor
add
mov
xor
jecxz
push
leave
dec
cmp
pop
inc
movsb
jmp
into
outsb
inc
push
inc
and
and
and
decl
stos
or
mov
call
pop
jb
rcrb
popf
jbe
js
fildll
cmc
add
loopne
nop
repnz
jmp
mov
test
fisubrs
push
mov
ret
dec
sarl
jmp
jno
fsubrs
adc
adc
dec
adc
adc
test
lret
std
popf
mov
movsl
mov
xor
sbb
fadd
or
test
ss
mov
test
xchg
fdivp
sti
push
dec
dec
out
push
imul
insb
dec
dec
dec
jmp
aas
clc
mov
pop
notl
push
dec
sbb
pop
pop
scas
test
jg
fdivrl
cli
and
or
push
cs
mov
enter
jg
jns
mov
pop
mov
dec
xchg
adc
aam
pop
ljmp
fs
in
ss
mov
imul
fs
jae
add
bnd
adc
cmpb
jg
fdivrl
stos
dec
loopne
cmp
mov
leave
scas
incl
pop
mov
outsl
jmp
movsb
xchg
lods
frstor
sub
push
inc
jl
cmp
test
pop
lcall
jp
inc
data16
sarl
in
arpl
jb
or
ljmp
push
xchg
cmp
add
arpl
arpl
pusha
and
cmpsb
lret
insb
subl
loope
fs
mov
push
outsl
icebp
jmp
or
fisttpll
cmp
fdivl
out
inc
and
dec
mov
mov
lret
repz
jl
xchg
inc
jg
sbb
nop
jns
mov
das
fstpt
loope
mov
or
decl
setl
sub
cmp
dec
test
cld
xor
addb
fbld
lcall
xor
sub
and
scas
pop
add
and
jl
inc
push
mov
and
xor
out
data16
fistpl
push
mov
dec
jg
inc
jl
pushf
or
push
xor
mov
jg
pushl
sub
mov
into
adc
mov
xchg
movsl
inc
jbe
fcomi
or
test
cwtl
add
fistpll
lret
mov
push
mov
pop
sbb
cmp
sbb
jmp
fnsave
mov
out
loope
mov
mov
cmp
imul
mov
inc
mov
inc
jne
enter
mov
xchg
sub
xchg
push
inc
out
mov
fnstsw
rcr
imul
stos
std
cld
sbb
scas
pop
call
inc
inc
jmp
fcoms
inc
inc
into
test
jbe
dec
mov
stc
mov
inc
int
daa
cwtl
pop
jmp
xchg
aaa
xor
mov
test
ljmp
pop
aam
mov
jb
jge
mov
out
xor
xchg
inc
pop
fnstsw
xor
or
arpl
stos
xchg
fbld
and
or
cld
and
sub
loope
cmc
cld
call
mov
repz
xchg
xchg
xor
jg
and
sbb
cmp
into
mov
lods
imul
fiadds
arpl
lock
mov
sub
xor
dec
fdivrl
mov
jmp
movsb
sub
push
mov
ljmp
mov
push
nop
xchg
in
pop
lret
pop
or
push
ljmp
outsb
gs
adc
xor
xor
iret
testb
mov
xchg
pop
or
dec
xchg
jmp
cld
mov
ljmp
pushl
mov
mov
mov
mov
push
mov
fmulp
mov
xchg
aaa
xchg
xchg
pop
repz
push
push
imul
ljmp
ljmp
test
push
dec
stc
inc
cld
jns
fs
sbb
pop
rorl
push
icebp
idivb
cld
pop
mov
and
test
out
decl
or
and
and
paddd
ja
jp
insl
xor
lods
xchg
out
stos
lods
cld
push
shrl
jg
fs
inc
push
and
xor
and
jbe
test
xor
mov
inc
popa
push
jnp
aad
push
mov
fiadds
imul
mov
xor
mov
cmp
pop
sbb
stc
or
xchg
mov
jp
out
sbb
dec
cltd
lock
fidivl
sub
jmp
fcoms
loop
inc
loop
orb
leave
add
push
fwait
mov
add
cmp
mov
xorb
push
pop
int3
push
pop
pop
sahf
xchg
sti
and
push
adc
pushl
lcall
sub
xchg
pop
fbld
jmp
fsts
jle
mov
cmovb
lcall
sbb
or
mov
add
push
leave
aaa
dec
cs
push
insl
jg
sub
jl
push
and
ss
iret
outsl
adc
pop
cli
jp
addr16
ljmp
cs
rorb
mov
rcl
loop
jge
ds
aad
call
mov
das
sbb
lcall
sub
enter
mov
outsb
inc
xchg
scas
push
icebp
outsb
xor
outsl
add
fwait
xchg
adc
dec
xor
inc
mov
addr16
pop
jae
js
hlt
popf
add
popa
loop
fildl
dec
mov
lcall
jg
fucom
and
sarb
inc
push
aad
mov
inc
fwait
orb
jnp
xor
inc
arpl
int
pop
out
lods
loop
js
popa
outsb
aad
insl
dec
ljmp
out
cmp
sbb
scas
es
lcall
mov
jg
int
mov
cmp
sbb
push
shrl
cmp
pusha
inc
ljmp
in
sti
mov
mov
shlb
addr16
incl
clc
inc
inc
lahf
shlb
jp
in
or
cmp
xchg
sub
pushl
pop
repz
in
dec
mov
arpl
pop
adc
jo
mov
inc
pop
mov
push
cmc
mov
xor
out
or
xchg
xor
dec
lods
cmp
outsl
mov
incl
push
lods
jnp
xchg
addr16
scas
inc
mov
pop
xchg
mov
or
add
rorl
cs
jle
or
jmp
pop
insl
mov
repz
dec
jb
or
mov
and
sub
mov
hlt
add
inc
push
mov
popf
xchg
pop
jg
add
mov
mov
or
lahf
ret
cmpsb
adc
inc
outsb
push
jmp
std
add
xchg
xchg
insl
jp
mov
aad
daa
sub
cli
outsl
call
lcall
mov
test
push
aad
nop
xchg
in
jp
fcomip
pop
popa
or
pop
or
ds
xor
scas
movsl
imul
lcall
xchg
loopne
xor
dec
and
sbb
mov
repz
xchg
inc
jns
fs
adc
call
add
aad
add
xchg
enter
call
hlt
int
out
sub
pushl
loop
js
out
adc
test
in
cmpsb
sub
dec
cmc
cmc
stc
test
lods
mov
outsl
sbb
or
insl
sub
call
outsb
incl
pop
cld
push
pop
xchg
dec
and
addr16
mulb
cld
inc
lcall
push
lcall
add
lods
mov
flds
or
inc
enter
ljmp
in
sahf
mov
or
or
jo
in
fistps
jbe
das
adc
shl
mov
cmpsl
sbbb
push
mov
push
jno
mov
cltd
jge
ss
call
lret
mov
movsl
shl
xchg
pop
push
xor
fimuls
lret
iret
adc
fdivr
pushl
mov
pusha
sarb
xor
fisttps
in
data16
movl
xor
push
mulb
data16
sarl
cltd
sub
lcall
dec
add
dec
mov
stos
aaa
cltd
mov
xor
shlb
stos
aam
push
mov
pop
addr16
adc
ds
lock
xchg
mov
lock
jo
cltd
popf
mov
push
pop
fwait
rcl
das
cli
jmp
xor
or
inc
jno
jg
mov
lahf
fwait
stos
test
add
test
mov
lds
loope
fcomip
dec
aaa
into
cmpsl
insl
or
inc
mov
cmp
cld
jo
in
nop
daa
adc
incl
sub
mov
xchg
lock
jmp
adc
fstpt
xor
cmp
loop
movsl
inc
int
sarb
or
stc
lods
jmp
push
js
jbe
sbb
test
call
mov
jbe
lock
adc
ret
xchg
decl
ljmp
mov
push
fisttpll
shl
inc
jg
scas
iret
lret
imul
inc
cmpsl
dec
icebp
js
aaa
mov
repz
pop
jmp
dec
clc
lods
inc
mov
jnp
out
mov
xor
add
ljmp
xchg
decl
xor
sbb
js
jg
sub
push
test
jb
enter
mov
int3
rorb
or
fsubl
incl
cmpsl
push
outsb
jmp
outsb
jb
aad
cmc
decl
xor
xor
fcmovb
nop
sbb
or
pushf
pop
and
push
sarl
test
enter
ds
push
mov
dec
push
shll
repz
call
or
adc
jae
repz
sub
mov
test
pop
in
clc
decl
push
clc
aaa
xchg
xor
addl
cwtl
adc
jo
sbb
outsb
outsb
add
out
test
or
lahf
mov
or
mov
pop
lods
sbb
push
xor
fwait
inc
std
or
push
inc
popa
fnstsw
flds
mov
dec
fcomip
incl
pop
push
in
out
lea
jns
loop
lret
xchg
bound
outsb
repz
lcall
sbb
add
pushf
push
pop
dec
pusha
ss
lcall
inc
push
pop
inc
jnp
sbb
push
aam
xor
xor
in
outsb
cmp
test
pusha
mov
and
repz
push
pop
jbe
lcall
aad
ja
mov
push
lret
jmp
push
test
adc
pusha
gs
jb
push
or
xchg
jns
mov
sahf
add
xor
call
xchg
cmp
movsb
sbbl
in
mov
inc
cli
mov
imul
scas
and
or
incl
outsl
in
xchg
jns
test
cmp
cmp
cmc
loop
jno
pop
fwait
dec
bound
lahf
inc
shll
in
loope
mov
lcall
jge
add
mov
insl
xchg
mulb
aas
push
or
add
icebp
sub
jg
leave
test
xchg
dec
dec
or
add
jns
add
jmp
bound
into
stc
push
mov
outsb
mov
mov
add
sub
loopne
sbb
adc
adc
fildll
jbe
les
fisttps
dec
insb
sar
inc
aad
add
pushl
insb
or
ret
movsl
cld
hlt
jl
push
adc
push
cmp
subl
aad
pop
imul
enter
adc
ret
xorl
adc
adc
movsb
adc
loope
jg
loope
mov
adc
pop
call
cmp
xchg
mov
call
sbb
scas
xor
sub
fidivrs
inc
xchg
lods
cmp
es
jge
sbb
pop
mov
pop
fcomps
xor
lds
mov
imull
ljmp
sub
in
sub
adc
jmp
outsb
xor
lods
ret
call
ret
sub
dec
bound
xor
sarb
push
mov
mov
and
pop
jg
or
adc
data16
xchg
int3
push
jg
insl
cld
lcall
push
dec
pushf
jle
push
and
ljmp
enter
mov
subb
sub
gs
aas
fs
cli
ljmp
leave
xchg
dec
mov
out
sbb
cmp
mov
inc
pop
stos
mov
bound
fwait
sbb
std
jno
adc
xor
inc
sbb
cmpsb
xor
call
adc
das
add
sbb
inc
in
dec
add
lret
mov
out
lock
cmc
movsl
or
jmp
arpl
lret
orl
js
mov
icebp
xchg
mov
mov
push
jle
dec
and
incl
xor
xchg
inc
cmc
mov
push
xchg
decl
mov
jl
sti
fnstenv
ljmp
stos
pop
inc
xchg
int3
insb
sti
jns
arpl
scas
push
xchg
popa
dec
addr16
cmp
push
pusha
cmp
testl
out
decl
xchg
aaa
cmp
pop
and
or
dec
in
and
inc
test
inc
mov
jns
adc
or
gs
neg
in
int
je
in
sub
xchg
div
loopne
mov
ljmp
fnstsw
add
add
xchg
ja
cltd
subb
out
pop
mov
push
mov
cmp
jl
sub
adc
mov
call
mov
cmp
mov
in
and
fistpll
loop
xor
insb
xchg
ds
add
xor
nop
jge
fisubs
adc
xor
decl
data16
sub
insb
mov
inc
xchg
lds
add
out
scas
aad
jge
xor
lcall
cmp
mov
mov
fildl
inc
adc
in
fstpl
lret
cli
ljmp
and
cmp
outsl
es
rcrl
shll
add
or
jae
xor
outsb
mov
daa
movsb
pop
xorb
lret
incl
mov
leave
or
push
rolb
push
jno
in
xor
pushf
dec
mov
pop
mov
add
mov
pop
stc
dec
pop
lods
in
push
jnp
in
cs
sar
adc
stos
pushl
cltd
dec
pop
push
lret
jle
jae
cmpsl
imul
and
leave
and
lcall
lahf
rcl
mov
dec
adc
push
cli
jmp
or
mov
sub
cmp
fstpl
mov
xchg
mov
call
ljmp
push
scas
lret
mov
and
sub
es
pop
pushl
push
cmp
and
outsl
jbe
clc
in
add
inc
insb
mov
loopne
xor
mov
add
mov
and
fisttpll
sub
insb
pop
fidivrs
mov
adc
repnz
or
cld
outsb
xor
mov
aam
xor
jne
stc
fdiv
sbb
sub
dec
cmp
pop
cmp
xor
xor
fsubrs
insb
std
jmp
xor
push
loope
cmpsb
aad
lret
stos
fldt
fisubrl
dec
xor
sbb
push
fildll
fiadds
movsl
add
jo
std
add
jno
call
mov
fwait
loopne
or
push
mov
mov
lock
cmp
push
jmp
std
sahf
jae
cs
mov
sbb
xchg
jge
pop
xchg
mov
inc
out
push
pop
dec
mov
lcall
sub
xor
mov
lret
loope
xchg
mov
sbb
pop
ljmp
mov
add
in
arpl
jbe
lcall
add
dec
push
jmp
fcmove
stos
lret
sub
into
in
dec
cmc
fwait
pushf
pop
pushl
sahf
js
ds
dec
mov
das
enter
dec
mov
test
inc
sar
call
fs
mov
mov
out
push
ja
ja
std
dec
js
add
mov
jmp
lods
call
mov
cld
ljmp
push
xchg
fldt
cmpsb
js
mov
cld
or
cmpsl
bound
sahf
call
std
call
sti
fwait
mov
cmp
push
xchg
jo
mov
jo
cs
cmc
outsl
clc
ds
cmp
xchg
enter
xor
mov
pop
add
das
inc
cmp
lcall
mov
orb
aas
mov
lock
sub
cmp
inc
sbb
inc
scas
shrb
xchg
jmp
fldenv
adc
lods
cwtl
stos
push
fwait
loop
cmp
pusha
loop
mov
fmull
decl
in
outsb
in
push
mov
aaa
enter
enter
jbe
aad
and
call
jecxz
lahf
stos
dec
shrl
aaa
out
fistps
inc
hlt
xchg
icebp
mov
push
inc
iret
les
xor
cmpsb
popf
mov
addb
inc
movsl
movsb
jg
inc
arpl
das
lds
cltd
sarb
inc
adc
xlat
popl
inc
push
ret
cmp
sub
cwtl
add
jg
push
pop
jmp
mov
out
shl
repnz
inc
xchg
loope
dec
ja
inc
inc
in
sahf
dec
ss
fistps
aaa
xor
mov
mov
decl
je
fistpl
loope
push
and
pop
push
xor
daa
add
decl
out
fmul
jmp
in
sub
lahf
repz
ljmp
inc
xlat
aam
sti
int
pushl
in
sbb
arpl
jl
iret
push
cli
mov
mov
rcrl
inc
inc
cwtl
js
mov
bound
into
pushf
mov
arpl
sub
xchg
inc
xorb
lcall
call
aam
mov
sub
dec
jo
push
addr16
cs
pop
xor
inc
sub
inc
sbb
jne
push
or
cmp
push
sub
adc
push
add
sbb
pop
pop
inc
mov
fnstenv
pop
rorb
cmpsb
mov
pop
adc
lret
std
lahf
adc
adc
mov
out
mov
insl
dec
repz
add
cmc
push
ds
dec
ss
mov
scas
popf
xor
mov
negb
pop
mov
inc
add
ljmp
in
mov
in
movsb
hlt
xchg
pop
mov
and
scas
add
ljmp
cli
ljmp
push
mov
push
xor
cmpsl
fildll
ds
je
int3
add
dec
rorb
lock
ljmp
dec
mov
into
add
loope
insb
dec
sub
pushl
aaa
lahf
cmp
sbb
adc
nop
sub
inc
idivb
adc
fwait
hlt
push
or
adc
xchg
mov
inc
les
test
xor
in
cmc
movsb
sbb
mov
fcom
xor
sub
mov
subb
aam
and
and
push
mov
cmc
push
pop
mov
xchg
out
cwtl
insl
int3
adc
mov
les
mov
fildll
xchg
xchg
loop
int3
xchg
sub
jge
inc
mov
fdivr
mov
ficomps
pop
les
pop
xor
sbb
push
inc
xchg
lcall
fidivl
in
les
cmp
pop
mov
adc
adc
addb
insb
das
sub
aad
aad
mov
fcoml
sbb
mov
jle
imul
sarb
movsb
mov
test
ret
setns
fsubp
mov
call
push
pusha
test
jecxz
jae
fnsave
xchg
mov
pop
test
jae
mov
push
xchg
lds
ret
inc
mov
shlb
insl
and
adc
push
inc
ss
sarl
xchg
xor
call
inc
push
push
jae
jb
aas
cmpsl
add
mov
fstps
pop
gs
mov
pop
mov
xchg
je
or
je
xor
add
xor
mov
in
mov
cmpb
rcrb
inc
sbb
popa
sub
daa
mov
mov
incl
or
nop
div
icebp
add
enter
inc
out
mov
leave
xor
or
stc
ljmp
rolb
aad
xlat
int
xchg
dec
inc
ret
outsl
fwait
ljmp
ljmp
test
sub
add
test
loop
xor
cmp
cmp
jmp
arpl
cmp
dec
xor
jl
repnz
pushf
xor
div
int
decl
add
out
jl
cwtl
test
xchg
aas
in
fildl
push
fcmovbe
mov
inc
jns
lret
insl
sub
call
dec
mov
rolb
mov
mov
mov
arpl
pop
sub
cld
sti
aaa
clc
cmp
mov
dec
mov
or
mov
push
lock
or
orb
out
ss
pushf
pop
stc
jne
pop
cwtl
adc
jb
xchg
mov
jmp
insb
addr16
dec
insl
cmc
mov
cmp
xchg
stos
push
loope
mov
mov
adc
pushl
jb
imul
jg
push
ss
push
pushf
xor
dec
inc
mov
xor
call
sbb
mov
adc
push
pushf
adc
push
decb
and
js
adc
test
loope
in
push
inc
mov
int3
push
and
cltd
in
fidivrs
jge
lcall
jl
lcall
fcoms
leave
pop
mov
add
scas
lods
call
inc
es
xor
xor
add
pop
mov
in
sub
mov
pushl
and
mov
icebp
add
lahf
push
mov
pushf
pop
pop
sub
in
ljmp
loop
xchg
fnstcw
clc
fsubr
imul
fimuls
xor
lds
aas
sti
and
inc
mov
aaa
icebp
sub
scas
xchg
mov
push
insl
xchg
fwait
loope
test
pop
faddl
ljmp
cld
push
sti
or
leave
pop
add
cmp
pop
pop
test
out
inc
rcrb
pop
jp
cld
mov
sub
push
notb
pop
cmpsb
jg
add
xchg
pusha
cmpsl
mov
in
fcoml
push
mov
dec
xor
imul
imul
pusha
pop
stos
mov
xor
push
cmc
cmp
and
addl
ljmp
mov
loopne
or
lea
pop
fdivrp
imul
dec
dec
jne
popa
xor
pop
mov
jmp
push
fiadds
mov
xor
pushl
decl
push
jp
aad
shrl
inc
inc
or
aaa
leave
das
sbb
sub
mov
jae
pop
mov
roll
cwtl
loop
mov
rcl
inc
cli
std
mov
fs
sub
jge
and
dec
ror
and
adc
and
int3
cmp
sbb
call
sub
lret
jmp
es
rorb
sub
mov
inc
bound
or
cmpsb
aad
or
nop
pushl
ret
mov
cbtw
xor
rcr
inc
jbe
sbbl
test
lcall
or
enter
mov
lret
fcomi
xchg
subl
inc
ja
mov
jmp
mov
out
scas
es
cmp
add
jg
jo
add
jg
mov
scas
jmp
sahf
out
lods
cli
movsb
cli
adc
loop
xor
jnp
fsubrp
fsubr
jo
or
jmp
imul
subb
ss
cmp
ljmp
loopne
lcall
aaa
lret
ljmp
dec
aas
push
out
add
clc
push
xchg
repz
pop
lods
hlt
push
lcall
incl
lea
mov
dec
addr16
mov
pop
test
xchg
sbbl
cmpl
decl
mov
loope
cmc
loopne
mov
jle
inc
arpl
fwait
cmpsl
and
in
jmp
clc
outsb
mov
movsb
and
rorl
pusha
pop
or
repnz
inc
pop
es
nop
out
adc
leave
loope
test
xchg
inc
jnp
push
adc
nop
xchg
ret
ret
fcompl
and
inc
sub
scas
clc
pushl
call
jo
pop
rclb
loopne
adc
cld
or
movsb
frstor
mov
jmp
xchg
andnps
jne
aas
lods
and
and
push
sbb
jo
ljmp
mov
fcmovbe
popa
fwait
in
cli
add
fistpll
mov
mov
jne,pt
and
add
test
xor
lock
ljmp
sbb
dec
mov
inc
sub
mov
arpl
dec
pushl
or
movsb
or
cmpsb
ret
or
fldenv
shrl
ss
ljmp
je
nop
rolb
push
cwtl
ljmp
ja
test
jle
mov
sub
xchg
sbb
scas
jo
add
xchg
push
ljmp
sub
mov
jl
aaa
fstpl
mov
fldt
mov
pushl
mov
push
mov
and
outsl
push
int
cmpsb
jns,pt
cwtl
cmp
push
or
and
ret
xbegin
imul
in
mov
loopne
xorb
call
mov
push
push
das
mov
push
fwait
jg
or
pop
lock
mov
ja
xchg
js
jnp
in
sub
cmp
call
in
rcrl
adc
or
lds
add
and
mov
ljmp
in
in
and
sub
and
add
nop
jns
or
jno
cmp
xor
jmp
jl
xor
push
sbb
iret
ds
lods
outsl
and
filds
adc
and
rolb
ljmp
cli
lcall
mov
lock
addl
dec
pushf
pop
cmc
mov
add
js
sub
lcall
mov
shl
rcll
pop
inc
cmp
sub
mov
decl
mov
test
xchg
fldl
push
xor
xchg
dec
mov
call
sbb
dec
jae
test
mov
dec
adc
or
subb
rep
pushl
jno
cmp
mov
in
pop
jle
call
icebp
mov
fistpl
push
mov
sub
rclb
push
add
pushf
xchg
hlt
inc
lods
pop
mov
xchg
dec
xchg
sbb
jno
pop
insb
inc
sub
call
mov
fnstenv
imul
xchg
shlb
cmp
sahf
push
sbb
or
andl
mov
and
call
stos
push
jg
inc
cmp
cmp
inc
fiaddl
addr16
mov
sbbb
adc
decl
sbb
gs
cli
sub
cmc
gs
push
repz
ljmp
xor
mov
jno
mov
in
in
jb
mov
mov
adc
roll
decl
lcall
mov
cmp
jns
fsubl
push
pop
fsub
mov
mov
int
adc
aaa
sbb
div
jecxz
cld
dec
div
repnz
xchg
jg
into
fucomip
xchg
aam
mov
mov
mov
js
dec
xor
inc
adc
inc
sub
inc
dec
jo
pop
add
jno
xorl
or
fildll
dec
inc
repz
fcmovu
push
stc
cmp
push
adc
push
decl
inc
hlt
into
push
es
xor
ss
or
and
mov
sub
mov
or
lds
cld
cmp
sub
rcrb
out
test
lret
pop
dec
les
jmp
das
jae
xchg
xchg
xchg
aaa
aas
loop
add
dec
lock
jg
cmpl
sub
outsl
ffreep
pop
ficompl
adc
mov
cmp
sbb
cmpb
std
xorl
lret
and
sub
cli
inc
lods
ret
jmp
ss
call
adc
mov
jg
mov
in
mov
fidivrl
subb
ficoms
add
and
and
adc
dec
rcr
arpl
aam
dec
jmp
push
sahf
xor
cmp
and
dec
pop
mov
inc
add
sti
xor
pop
mov
hlt
les
or
jmp
daa
lock
add
dec
aaa
enter
inc
and
and
push
repnz
decl
sti
cs
jnp
pop
pusha
add
mov
fidivrl
scas
fisubrl
xchg
or
jmp
rolb
test
aad
jp
stos
jle
add
and
decl
das
clc
push
mov
and
das
ret
subb
mov
popf
std
dec
in
inc
int3
push
sar
mov
fcmove
test
int
push
incb
mov
push
cs
repnz
pop
lcall
gs
nop
pushw
je
cmp
ret
ficoms
cmpsl
pop
stos
arpl
jne
xchg
mov
mov
sub
jmp
and
lahf
pop
rclb
bound
lock
sbb
pushl
sub
jb
cli
push
xor
iret
and
mov
push
pop
mov
sti
push
out
or
sub
in
int
adc
mov
or
jl
sbb
fcos
jmp
jp
or
int
cwtl
inc
mov
mov
pop
jp
dec
cwtl
push
imul
call
roll
mov
aaa
icebp
pusha
cmc
cmp
pop
inc
insl
mov
push
sub
dec
mov
dec
mov
sub
and
pop
ret
dec
ds
stc
lock
inc
mov
ljmp
push
imul
cmp
into
jbe
xchg
push
add
or
jmp
cli
lcall
lret
xchg
mov
xchg
or
int
push
jmp
mov
movsb
shll
lahf
and
push
pop
push
int
addb
iret
mov
or
jg
cmpb
add
ja
push
jp
lcall
pop
and
mov
in
xor
adc
push
cmp
ljmp
aaa
shlb
add
inc
ljmp
sub
clc
aad
movsl
add
push
mov
sbb
jp
ret
jae
mov
decl
mov
adc
imul
andl
xchg
leave
xchg
fs
xor
lahf
out
cli
jmp
pop
ja
enter
mov
mov
or
cmp
jg
xlat
cmpsb
xchg
jle
cmp
test
xor
loope
jle
test
xchg
pop
inc
sbb
fwait
decl
popf
jge
jno
xor
out
mov
xchg
mov
call
lret
adcb
lea
jo
inc
cmpsb
sbb
pushf
popa
pop
lock
lret
cltd
sbb
cld
mov
jmp
cltd
je
inc
push
add
test
dec
adc
lret
mov
insl
push
xor
or
sti
inc
pop
sub
mov
add
sti
dec
xchg
dec
cmpsl
mov
addb
pushf
mov
out
hlt
pop
repz
into
dec
fidivrs
call
nop
cmc
ja
subb
fisubl
adc
daa
mov
inc
jecxz
jnp
cmpb
add
int
sub
pop
ljmp
sub
push
int3
dec
fisubl
es
mov
push
sbb
lods
test
lds
pop
decl
dec
hlt
ret
fisubrs
adc
cli
adc
cwtl
add
sub
addr16
incl
aam
push
sub
in
dec
cmp
xchg
jns
push
in
and
inc
ljmp
pop
push
or
scas
popf
mov
lahf
xor
jmp
mov
xchg
dec
xor
loope
cmc
jmp
inc
inc
sub
mov
ja
pusha
popl
jecxz
aad
xchg
pop
test
mov
pop
dec
mov
cmp
cmpsb
xlat
ss
xor
push
test
mov
out
sahf
jmp
les
push
stc
fistpll
dec
mov
lahf
test
push
inc
adc
xchg
xor
or
dec
imull
cmp
cmp
jmp
jl
daa
jbe
fwait
stc
into
inc
sbb
adc
imul
scas
std
pop
or
adc
loop
add
cs
aaa
std
call
bound
call
add
add
insb
cli
clc
inc
clc
ret
std
sbb
mov
stc
ret
outsb
out
ds
dec
inc
add
cld
shlb
lock
inc
rcrl
popf
or
inc
push
mov
popf
add
mov
push
in
mov
incl
ljmp
clc
icebp
fs
dec
jp
fdivl
mov
push
daa
jo
xchg
scas
pop
leave
decl
sub
pushl
lahf
mov
mov
stos
test
mov
mov
daa
shll
movsl
stc
xchg
outsl
pop
sub
jge
dec
mov
js
sbb
out
jo
addl
xor
mov
dec
inc
stc
or
pushf
sub
pushl
lods
mov
xor
aad
and
testb
cld
jp,pt
decl
push
fyl2xp1
lea
inc
inc
shrl
scas
pop
arpl
and
and
stos
clc
jg
out
add
jle
mov
aad
and
cld
push
pop
outsl
and
sub
jg
cmp
in
inc
push
pop
mov
cmp
incb
lret
out
scas
outsb
je
mov
fildl
int
lds
adc
cmc
sahf
mov
aaa
aam
pop
popa
insl
jecxz
decl
inc
dec
add
cmpsb
adc
or
inc
sbb
decl
sahf
lret
shll
cld
scas
dec
xchg
xchg
enter
pop
mov
push
std
and
icebp
mov
mov
cmc
xor
jo
movsl
xchg
je
jmp
mov
pop
cmp
or
decl
ret
mov
mov
enter
sub
xchg
sub
outsb
stos
push
sahf
adc
cmp
cmpsb
call
inc
daa
punpckhdq
or
cmp
es
fwait
cmpsl
mov
mov
jg
data16
adc
sarl
movsl
roll
pop
daa
push
in
and
mov
mov
inc
sbb
aas
cmp
insb
loope
test
imul
jmp
enter
popf
fsubrl
push
pop
mov
ret
mov
push
mov
stos
daa
or
mov
and
cmp
jo
cli
dec
arpl
into
mov
or
aas
or
ljmp
imul
mov
ljmp
push
lret
xchg
cmp
inc
jae
jnp
out
add
and
lea
pusha
sbb
inc
imul
and
test
mov
ljmp
cs
xor
and
pop
push
pop
imul
loop
xor
jg
inc
jns
sub
push
or
pop
sti
or
push
inc
mov
cmp
inc
inc
repnz
add
add
jmp
movsl
mov
out
les
sub
sar
lcall
insl
push
sbb
or
sub
push
jecxz
scas
into
arpl
mov
movsb
in
jne
jmp
push
xor
add
push
daa
jmp
mov
lea
sti
rcrl
aaa
cld
push
negl
daa
add
lcall
push
cltd
inc
fimuls
ljmp
enter
mov
xor
lcall
cmp
jp
and
fistps
dec
ret
aad
mov
pop
pop
imul
fnstenv
rcrl
mov
call
in
push
arpl
das
sbb
dec
and
incl
cld
call
cmpsb
xchg
cmp
mov
jae
mov
jg
jg
jmp
xor
in
xor
xor
sbbl
cmp
xchg
add
jmp
pop
clc
dec
imul
adc
incl
fildll
lods
nop
dec
xor
dec
mov
or
movsl
xor
cmp
jg
and
out
jmp
jg
lods
jno
jl
test
mov
ds
or
sbb
cmpsb
dec
sub
inc
jg
sub
inc
add
or
cmp
jle
fs
repnz
xchg
cli
das
cli
out
adc
int
push
lahf
cmp
xchg
call
cwtl
or
iret
cwtl
adc
cmp
xchg
jg
sub
adcb
inc
mov
jecxz
dec
loopne
fisttps
push
adc
cmp
jno
cmp
and
testl
push
test
cmpsl
fldl
mov
subl
jnp
ljmp
or
clc
xor
pop
mov
dec
out
gs
xorb
ja
cli
ret
mov
xchg
adcl
adc
adcl
xchg
push
paddusw
pop
xorb
shrl
adc
out
rcrb
int
xchg
popa
es
jmp
or
sbb
mov
es
cmpsb
in
imul
shlb
enter
outsb
pop
adc
xchg
pop
xor
adc
dec
jmp
call
lock
xor
and
jne
sub
adc
ficompl
jg
inc
mov
push
dec
sbb
mov
dec
mov
sbb
sti
movsl
hlt
push
mov
push
enter
sbb
push
xor
jb
mov
ja
mov
mov
sahf
outsb
rorb
jp
arpl
or
sbb
jge
popl
xchg
and
or
adc
aas
sbb
add
pop
lods
or
pushl
add
add
gs
add
cmpsl
les
inc
xorl
outsl
jmp
cmp
sti
je
call
lods
lods
mov
add
outsl
jp
dec
push
xchg
ret
push
mov
shlb
fisttps
stc
fdivr
fwait
lret
sbb
inc
cld
decl
xchg
out
subb
adc
incl
cmove
out
add
pop
inc
xor
sahf
inc
ljmp
inc
out
mov
gs
in
xor
xchg
sbb
push
sub
jp
andb
lea
pushl
push
ret
stos
shlb
xchg
iret
mov
call
imul
bound
mov
cs
xchg
sti
repz
inc
fs
pop
mov
jb
mov
push
stos
dec
fimull
xor
pop
push
jno
shl
imulb
incl
xchg
jne
pop
sub
test
mov
in
jg
mov
push
pop
cmpl
pop
mov
lods
mov
in
push
pop
mov
aam
adc
pop
ja
mov
push
mov
lds
cmpsl
rorl
jge
mov
xchg
jmp
sbb
jecxz
ret
sub
push
fcom
fildl
jo
pushl
xor
xor
int3
push
pop
pop
xor
repnz
hlt
scas
in
xor
pop
jbe
jl
ljmp
scas
negl
mov
into
into
loopne
inc
or
es
in
cmp
inc
fdivr
stos
subb
clc
xchg
mov
cli
adc
movsb
cmp
mov
cmp
fistl
ds
lods
idiv
inc
sbb
jns
push
popf
pushf
in
scas
sbb
lret
sahf
std
imul
int
out
xor
jg
rcrb
movsb
jne
xor
push
inc
cmpsb
repnz
dec
push
les
dec
insb
sbb
test
daa
pop
jg
mov
jo
xor
sub
dec
rcr
rol
bound
lea
pushl
aam
add
leave
xor
enter
mov
xorb
jae
loopne
mov
ret
in
pop
adc
lods
jnp
sti
lret
pop
outsl
xchg
test
cmp
push
or
lret
xor
mov
dec
rcrl
and
mov
cs
clc
ret
addr16
aam
aas
dec
sub
aas
je
sbb
xchg
add
sub
ljmp
sbb
xchg
mov
adc
loop
adc
mov
push
or
cli
jbe
sub
fcomip
loop
mov
mov
mov
loop
int
dec
mov
add
ds
mov
cmp
in
fwait
dec
jnp
cmp
js
inc
dec
cmp
pushl
and
sub
lahf
and
sub
fldl
sub
push
cmp
lea
dec
xor
xchg
push
dec
cli
add
out
jne
xchg
ret
stc
loope
std
incl
call
sbb
jl
jecxz
inc
out
and
jg
sub
inc
and
pop
mov
movsb
scas
lahf
test
mov
repz
fstps
std
popa
das
push
fcompl
xor
jbe
jno
inc
pop
lcall
out
cli
pushl
outsb
xor
test
das
in
mov
out
out
call
fildl
cltd
ja
mov
and
out
movsl
mov
dec
push
or
xchg
mov
cmp
mov
cmpsb
popf
scas
add
pop
data16
pop
flds
mov
add
xchg
loopne
inc
dec
cmp
xor
inc
cmp
xchg
xor
lods
and
repz
pop
mov
push
xchg
push
aad
test
cmp
sbb
adc
das
adc
lds
mov
cltd
das
jmp
ret
xchg
subl
stos
outsl
pushf
ljmp
ljmp
mov
adcl
gs
or
gs
ret
mov
lds
ljmp
sub
outsb
sub
ljmp
xchg
push
fisttpl
lods
add
lcall
push
adc
mov
ret
data16
stos
shlb
sbb
sbb
mov
scas
xor
add
out
mulb
shrl
mov
je
incl
ficompl
inc
mov
loope
fcompl
inc
push
adc
stc
clc
lods
adc
mov
lds
inc
lahf
out
add
ficomps
lahf
push
or
incl
sarl
lods
xchg
inc
imul
cmpl
jno
mov
lock
adc
sbb
mov
add
xor
shlb
pop
mov
pop
lret
lret
and
jge
leave
mov
or
ljmp
adc
aas
lret
add
sub
mov
scas
sbb
push
cltd
sbb
lods
xchg
insb
jmp
jle
dec
sar
xor
cltd
push
cli
xchg
dec
aas
into
and
shrl
dec
dec
repz
lock
call
std
cmp
ljmp
dec
mov
and
jne
mov
sbbb
push
or
xor
lcall
lods
loop
fmull
aad
pop
mov
movsb
and
jp
dec
adc
ja
call
ret
mov
aaa
push
jmp
std
sbb
add
dec
roll
sti
ljmp
jmp
lds
repnz
jg
decl
into
ja
je
ss
fiadds
jno
outsl
stos
xchg
jl
arpl
cli
call
loop
cwtl
popa
notl
push
mov
lock
pushf
sahf
lret
push
aas
xor
ljmp
xchg
dec
into
jge
int3
cmc
jge
sub
push
cli
push
int3
sub
incl
mov
xchg
jle
out
out
add
stos
dec
add
jo
ljmp
jg
addr16
cs
inc
lods
mov
enter
repnz
mov
fisubl
loopne
inc
mov
mov
jmp
pop
lahf
imul
fdivs
leave
jl
dec
sbb
andb
incl
inc
pop
jge
push
inc
adc
xor
bound
adc
fwait
aas
mov
enter
mulb
test
movsb
mov
mov
js
add
ljmp
lcall
pop
lea
add
inc
jnp
inc
fnstenv
add
aaa
jle
and
clc
pushl
inc
dec
jae
repnz
xchg
out
push
add
imull
outsl
pop
cmpsb
insl
mov
mov
pop
into
mov
fisttps
nop
jbe
and
lds
add
call
mov
loop
mov
movsl
mov
push
clc
xchg
mov
loopne
fnsave
jne
nop
xchg
mov
sbb
mov
mov
ja
clc
lahf
icebp
inc
jb
hlt
xor
call
sbb
mov
or
std
inc
test
inc
cmpsl
mov
imul
mov
ja
sub
mov
and
jo
icebp
incl
push
rcll
cmp
addr16
jnp
add
push
or
pop
xor
jo
pushf
inc
scas
jb
repz
lcall
out
mov
aaa
mov
popf
pop
imul
and
sbb
outsb
call
je
ja
mov
fcompl
sub
sbb
cwtl
mov
jns
movsl
lcall
xchg
popa
push
sahf
xor
cltd
add
sub
ficomps
aaa
sub
fwait
stc
cmp
jbe
jmp
jecxz
das
jg
push
jne
xor
loope
in
add
in
inc
pop
mov
jmp
pushl
inc
rorb
push
pop
or
pop
adc
cmpsl
call
data16
ds
push
sti
fnsave
dec
jle
gs
add
mov
sbb
push
mov
xor
jecxz
out
mov
adc
mov
popf
lret
jnp
pushf
push
loop
nop
leave
cmp
push
xlat
xchg
jb
imul
jp
or
sbb
pop
btr
pop
xchg
mov
xor
push
sbb
sbb
mov
cmp
push
inc
out
int3
or
addr16
dec
mov
push
add
call
lods
inc
into
xlat
xor
sti
es
clc
std
push
stos
jg
repnz
arpl
add
adc
mov
fnstcw
movsb
adc
pusha
scas
jmp
add
and
mov
ljmp
cli
out
movsb
cmpsl
mov
loop
mov
or
cltd
mov
adc
inc
loopne
in
js
cmova
stc
iret
push
movsb
inc
add
mov
cmp
xor
cmpsl
mov
hlt
push
add
mov
push
add
jo
push
inc
movsb
rorl
cmp
push
xor
jp
sti
or
cmpsb
pop
lret
addr16
divb
cmp
xchg
inc
pop
sarl
lcall
pushl
xor
and
or
dec
or
xor
xchg
push
fildll
add
popf
pop
pushl
rcl
adc
mov
dec
sbb
decl
imul
in
les
call
push
and
mov
jmp
imul
fnstsw
xor
cmp
pushf
sub
lock
add
icebp
repnz
sar
js
jecxz
xlat
push
push
mov
and
inc
xor
ds
xor
or
scas
push
cmc
mov
stos
and
cli
les
inc
incl
repnz
dec
add
inc
and
mov
add
pop
sub
jns
in
mov
out
shr
clc
xlat
dec
push
inc
jmp
sar
decl
jne
mov
scas
mov
fwait
call
incl
xlat
mov
lahf
popf
push
cmpsl
mov
adc
shlb
gs
mov
push
mov
push
gs
mov
dec
xchg
dec
testl
mov
ds
and
popf
inc
lahf
or
ds
int
add
out
sub
inc
loope
pop
mov
mov
lcall
push
out
out
mov
bound
inc
cltd
sub
lock
in
insb
jno
push
pusha
mov
sbb
add
test
jl
xchg
cmc
frndint
mov
mov
pushl
cld
xchg
cmc
mov
test
and
adc
scas
dec
or
lcall
cmp
mov
clc
test
jbe
loope
mov
adc
decl
fwait
mov
in
sbbb
fcomip
lock
movsl
inc
adcb
xchg
xor
cwtl
jns
pop
xchg
push
in
dec
push
incl
pop
jmp
sub
adc
pop
mov
in
sbb
xor
adc
sub
jnp
push
and
cwtl
jge
jp
loop
out
mov
into
out
add
add
fsts
add
add
out
mov
leave
mov
jp
mov
mov
jno
or
insb
stc
mov
fbstp
sbb
mov
mov
fildl
pop
ja
push
or
pushl
stc
nop
xlat
cmp
sub
mov
imul
inc
imul
add
or
rclb
lods
jns
jmp
neg
lret
xchg
mov
mov
jns
das
or
insl
dec
xor
fildl
cs
push
pushl
push
dec
lods
or
rolb
inc
inc
loop
test
or
push
nop
push
mov
or
pop
adc
incl
test
cmc
xchg
loopne
adc
jnp
das
mov
loopne
pop
rcr
add
push
aad
pop
jns
dec
cld
call
mov
test
fildll
inc
divl
jg
sbb
add
mov
sub
bound
decl
lock
cli
lock
jbe
pushf
loope
jge
fldl
arpl
ljmp
mov
inc
mov
pop
mov
icebp
xor
mov
out
pop
mov
pop
scas
ret
xchg
mov
lea
call
xchg
mov
push
jg
and
jnp
or
jno
fdivrp
fildll
push
pop
js
cmp
cmpsb
cmp
mov
loope
stc
divl
jnp
loope
shl
decl
mov
ret
fwait
mov
inc
icebp
out
int3
sbb
test
scas
ljmp
sbb
jae
mov
test
das
xchg
test
jle
lret
adc
jmp
outsl
aam
incl
mov
sub
loop
jnp
push
or
lock
call
cmp
sbb
pop
jnp
call
dec
test
iret
les
dec
xor
into
adc
ds
sub
or
frstor
out
xchg
mov
adc
sbb
sbb
clc
incl
add
int
sbb
inc
in
mov
cmpsl
out
adc
out
incl
sbb
fcomps
fstpt
cmp
and
andb
lcall
stos
lret
sbb
sub
xchg
dec
push
push
sub
jl
mov
lahf
shlb
test
lock
movsl
and
lahf
or
pop
lcall
das
pop
int
pop
jns
lcall
lcall
andb
enter
scas
adc
call
mov
add
out
jno
shrb
inc
scas
and
adc
fldenv
cld
ljmp
mov
pop
push
leave
popa
mov
stos
f2xm1
sbb
jg
inc
mov
xor
push
xchg
stos
hlt
mov
outsl
shll
xchg
das
movsb
cmp
out
pop
push
in
dec
pop
aaa
lock
cmp
cmc
sub
xchg
pop
sbb
lret
dec
pshufw
incl
rcrb
loopne
icebp
loop
push
fsubs
inc
lret
call
mov
iret
xchg
jmp
aam
pop
xchg
jg
shrb
sarb
push
jo
dec
push
mov
shl
lea
dec
sti
data16
fcomip
push
dec
dec
mov
inc
xchg
das
les
mov
or
int3
mov
pop
loopne
fdivrl
jmp
dec
mov
sbb
dec
and
or
incl
dec
insb
aas
adc
or
fsubrs
into
repnz
lea
inc
pop
ds
jmp
ss
sub
cld
ljmp
lock
jl
push
ljmp
lret
ds
repz
dec
sar
mov
mov
mov
mov
xorb
jne
adc
out
xchg
call
push
inc
int3
pop
xor
je
ret
or
je
in
ficoml
outsb
enter
cs
jo
dec
sub
mov
loop
pop
les
dec
sub
xchg
cmp
push
aaa
lcall
adc
rcl
jne
rcrb
and
loop
call
mov
adc
int
into
movsb
inc
int
pop
cmc
decl
lock
jns
jnp
pop
or
in
int
mov
mov
inc
loop
jmp
std
outsl
adc
cmpsl
jne
lds
push
stos
scas
add
pushl
mov
xchg
fdivl
push
test
adc
mov
nop
sbb
add
les
insl
out
hlt
mov
mov
cmpsl
mov
adc
stos
movl
mov
icebp
mov
pop
adc
add
xchg
pusha
dec
test
incl
mov
jle
inc
or
jno
xor
dec
push
jnp
insb
clc
pop
mov
dec
addr16
sbbb
pop
inc
movsb
lret
pushf
dec
xchg
fwait
mov
in
add
mov
loop
insl
je
inc
pusha
test
test
add
xchg
inc
push
cld
xor
cmp
fwait
and
pushl
xchg
movsb
sub
rclb
ret
decl
jp
imul
movsl
popa
mov
sbb
xchg
loop
mov
dec
add
incl
ss
test
leave
dec
lock
dec
fs
incb
push
sarl
pop
andb
arpl
add
inc
insl
mov
and
cwtl
pop
shl
int
or
in
cmp
xor
popf
dec
sub
lcall
xchg
clc
or
add
out
inc
bswap
pop
mov
cmp
cs
pop
test
mov
and
jne
rcr
fwait
push
int3
aaa
mov
loop
or
mov
out
xlat
jno
das
push
loopne
stc
aam
lds
xchg
xor
pushf
mov
mov
add
fisttpl
out
sarl
das
and
out
sbb
xchg
aaa
insw
add
mov
jg
mov
jmp
andl
shl
jnp,pt
dec
imul
sub
jmp
popa
adc
pop
ja
mov
inc
lret
cmp
sbb
and
rorb
pusha
cmp
push
xor
sub
mov
jmp
pop
popf
jecxz
ret
adc
mov
mov
add
ja
incb
mov
call
cmpsb
fnstsw
aas
cmpsl
loop
xor
fldl
sub
sar
call
push
pushf
mov
or
lods
clc
loopne
mov
aam
mov
mov
stos
mov
jmp
negb
test
in
dec
jge
mov
mov
jg
mov
jp
sbb
push
cmpsb
lods
add
xchg
sbb
mov
cmp
push
mov
inc
sbbb
sbb
in
xchg
pushf
push
pop
add
movsb
out
and
xchg
pop
movsb
gs
fcoml
call
ret
cmp
mov
push
mov
add
fcoml
or
jmp
out
cmp
xchg
add
popa
sti
cli
fdivs
cmc
dec
sbb
jecxz
mov
aaa
adc
lcall
add
mov
aad
fisttps
sbb
push
cltd
fxtract
test
jge
xchg
mulb
lods
inc
loopne
pushl
push
stos
mov
xorl
xchg
fcomps
inc
and
mov
call
mov
sub
mov
cmp
push
daa
aam
jg
lods
dec
cmp
loope
fmull
cs
dec
xor
dec
subb
inc
cmp
shrl
loope
out
mov
mov
outsl
clc
and
les
or
dec
movsb
frstor
sbb
mov
out
mov
test
jmp
push
cltd
repz
mov
insb
push
jae
pop
or
push
call
std
or
dec
or
mov
mov
daa
xor
cmpsb
lcall
or
inc
sar
stos
mov
outsl
cmpsb
and
cli
mov
js
xlat
movsl
pop
sbb
std
int3
push
out
pop
mov
add
push
inc
addb
mov
dec
xor
xor
or
lcall
es
sbb
repnz
push
cmp
insb
add
pusha
ljmp
scas
fimuls
adc
mov
sub
mov
ljmp
fcomps
stos
xor
sbb
sbb
movb
cld
jae
mov
lock
push
movsl
fildll
or
stc
aad
lock
leave
clc
out
dec
sub
lods
mov
call
stc
inc
push
addr16
jb
mov
xlat
mov
out
lea
add
jmp
mov
call
push
cltd
psubsw
jg
cmp
push
lret
inc
orps
sti
xor
ja
jne
cwtl
jg
incl
cmp
repz
or
or
inc
ret
add
das
cmc
push
cmp
lcall
test
pop
mov
adcb
fld
jmp
or
movsl
movsb
and
fwait
ljmp
or
jne
mov
dec
ror
dec
jmp
jne
lcall
inc
stc
push
push
cmpsb
inc
push
outsl
leave
cmpsb
out
subl
roll
sbb
jge
inc
jne
push
jb
insb
int3
mov
dec
sbb
loopne
sub
test
dec
add
lcall
jmp
testb
aad
ret
orl
xchg
mov
jmp
inc
sbb
mov
push
xchg
xchg
mov
adc
mov
pop
xchg
pop
cmc
jl
decl
lret
in
ss
repz
mov
icebp
mov
mov
adc
incl
loope
dec
rcrl
mov
out
stos
fsubrl
fs
add
call
shl
call
enter
stos
inc
js
fidivrs
stos
aas
loope
decl
rcrb
fs
or
in
or
iret
rol
test
gs
loope
popf
adc
pop
fists
cmpsl
mov
or
das
mov
pushl
xchg
xor
or
aaa
mov
sbb
sub
fsubp
lock
call
sbb
xor
sbb
lahf
add
jb
das
adc
outsl
xchg
xor
push
and
decl
add
sub
xchg
xor
xchg
lcall
mov
cld
push
xor
out
clc
jmp
mov
jo
fwait
jmp
scas
dec
shll
aaa
lret
sahf
add
incl
inc
xchg
mov
mov
lea
fisttpl
or
popa
and
push
and
mov
pushf
jle
and
cld
add
popf
jbe
mov
ret
jg
subb
cmp
push
pop
gs
aas
mov
imul
cmp
pushl
add
adc
insb
ret
fwait
jp
push
inc
or
pop
xor
mov
jmp
lock
inc
fdivs
cmp
scas
pop
jbe
ret
fmuls
testb
jge
addr16
or
decl
jne
es
lret
and
stc
aam
jmp
std
lock
sub
mul
incl
jb
cli
out
mov
cmp
inc
mov
fisttps
push
test
mov
cmpsb
add
hlt
push
leave
add
add
cmp
aam
push
xlat
mov
push
ja
lods
test
stc
mov
andl
ljmp
push
out
and
lret
push
int
cmc
mov
mov
or
pop
and
decl
ja
imul
sub
pop
mov
sub
sahf
rorl
aas
shll
stos
push
mov
fwait
jns
in
mov
dec
push
nop
adc
outsl
shlb
call
sbb
ficoml
inc
adcb
xor
sbbb
mov
inc
push
clc
fildll
cmp
out
mov
nop
xchg
loope
inc
inc
popa
jl
xlat
jno
jmp
sti
xchg
je
dec
outsb
in
je
sbb
test
pop
xchg
mov
in
cwtl
sahf
fdivrl
mov
inc
push
daa
and
mov
push
cmp
test
pop
dec
or
xchg
mov
enter
cmp
int
das
out
bound
pushl
mov
sti
sti
sbb
repz
incl
push
dec
push
js
jg
sbb
cmp
cs
negb
cltd
inc
gs
stc
mov
popa
sub
adc
decl
xchg
adc
jno
xchg
mov
mov
cmp
incl
fsubr
outsl
pop
push
cmp
xchg
inc
in
xor
inc
cmp
adc
adc
inc
cmp
mov
repnz
movsl
pop
sbb
and
cltd
mov
pop
add
mov
gs
fmull
sub
rcr
mov
sub
mov
pop
adc
lds
aam
xor
scas
pop
imul
call
insb
cmpsl
les
mov
xchg
ljmp
arpl
inc
leave
mov
insl
xchg
lds
cld
cs
ret
out
dec
scas
inc
fnstsw
clc
ss
jmp
ficoms
les
lahf
dec
cmp
cmp
push
and
push
lret
jmp
in
imul
mov
lcall
lock
mov
into
ret
mov
cmpsb
outsl
add
cmpsl
movsl
clc
mov
push
cmc
push
adcb
sbb
mov
repnz
jb
sti
pop
loopne
cli
clc
push
cld
pop
sub
bound
or
daa
dec
jp
je
jnp
cmp
ljmp
nop
test
iret
je
loopne
mov
les
xor
mov
mov
sbb
ljmp
push
jbe
repz
pusha
fimull
out
pop
clc
test
cmp
push
add
mov
mov
aam
or
inc
call
pop
sbb
or
mov
loop
dec
sarl
decl
sbb
push
add
adc
inc
jns
xlat
cmp
lcall
inc
cltd
jne
push
xchg
and
push
ror
ficomps
mov
push
push
fwait
es
mov
jnp
adc
jmp
scas
lret
dec
lea
pusha
adc
aas
cs
cmp
push
push
push
inc
mov
push
iret
lret
lea
rep
call
mov
inc
lods
aam
or
push
mov
add
cmpsl
xchg
mov
xchg
pop
sub
cmp
divl
sub
sbb
or
push
mov
sbb
jmp
into
std
imul
xor
sti
or
ret
fldcw
push
rcr
lods
adc
pop
jle
pop
and
in
imul
push
mov
mov
adc
or
outsl
arpl
push
lret
loop
pushl
stos
jo
xor
sub
scas
jmp
push
and
adc
jg
lcall
xchg
ds
pop
and
pop
sarl
jg
xchg
or
dec
pop
cmp
cmp
and
leave
mov
scas
cmc
imul
jp
leave
xor
incl
pop
loope
sub
push
dec
sub
in
add
push
ljmp
loopne
mov
inc
xchg
xorl
sub
imul
dec
xor
out
jne
push
inc
add
pushf
outsb
jae
jp
rcr
out
adc
mov
insb
xchg
imul
js
push
or
dec
movsl
notb
inc
nop
fcoml
mov
add
or
pop
sub
mov
roll
test
ljmp
adc
cs
jecxz
dec
div
shr
mov
js
call
dec
aam
mov
ret
mov
mov
repnz
or
fwait
cmp
aaa
adc
ljmp
sarl
jns
cmp
push
pop
dec
dec
cmp
inc
pusha
mov
cld
sti
dec
xchg
jecxz
scas
js
clc
cmp
popa
mov
jmp
cwtl
int
or
test
fwait
xchg
or
out
outsb
or
mov
mov
jecxz
or
sbbl
xor
lcall
mov
jnp
testb
fs
inc
xchg
ds
xlat
dec
ljmp
cli
notb
pop
sti
in
ja
pusha
mov
ljmp
cmp
pushl
xor
adc
daa
add
push
enter
decl
jp
sub
xchg
movl
int3
jns
jb
xorl
mov
mov
add
lods
mov
push
popa
push
mov
sub
or
cmp
stos
xor
pop
lods
int3
bnd
nop
add
jg
jo
inc
arpl
or
sbb
sub
lret
xlat
adc
xlat
decl
lgdtl
pop
insb
push
dec
adc
pusha
add
sub
inc
test
insb
jl
push
sti
jns
jg
test
push
xor
mov
cmpb
inc
mov
jecxz
push
cmp
stc
lret
orb
ljmp
enter
rorl
and
mov
push
push
pop
mov
sub
ljmp
xchg
cmpsb
das
xchg
push
sbbb
push
shlb
ret
add
push
loope
insl
adc
out
scas
call
add
mov
pop
int
mov
ja
mov
inc
lcall
sahf
je
lock
incb
mov
inc
mov
inc
jp
dec
andb
mov
lods
setbe
popf
cs
fs
in
movsl
and
sbb
or
ja
dec
sbb
sub
out
imul
jmp
cld
jne
xor
and
fnstcw
mov
dec
mov
xor
jns
push
adcb
mov
mov
sub
loop
pop
and
mov
mov
mov
or
repz
hlt
imul
and
fdivp
or
pop
pop
lds
xchg
mov
xchg
rorb
ret
aam
repnz
f2xm1
inc
roll
mov
jle
push
fsubl
jg
or
andl
aas
dec
push
mov
fdivrp
lcall
or
les
push
jne
mov
pop
ret
mov
sub
out
mov
sub
add
xor
mov
cld
jmp
addb
scas
pop
jg
shll
cmc
test
mov
mov
and
jecxz
and
js
in
and
cs
decl
mov
push
xchg
and
cltd
cltd
icebp
push
jg
adc
lret
fsts
mov
cld
pusha
in
and
ljmp
xchg
push
jo
rcll
sbb
xchg
inc
shll
cmp
sbb
jmp
mov
xor
cli
frstor
sub
xor
xor
subb
pop
push
enter
incl
gs
push
sbb
decb
stos
cmpsb
or
mov
int3
std
repz
xchg
lcall
mov
cli
aaa
jae
ja
inc
cmp
adc
add
in
sar
mov
faddl
imul
pop
push
test
pop
pop
or
ljmp
loopne
jle
jg
scas
pop
mov
xchg
or
jg
in
push
pop
fld
mov
and
or
xchg
loop
jle
sub
lods
inc
dec
xor
sahf
jb
jmp
adc
loope
js
mov
pop
cmp
jp
dec
mov
aam
jle
fcmove
sub
and
push
hlt
in
add
clc
outsl
xchg
cmp
adc
stos
inc
sarl
pushf
ljmp
cmpl
sbbl
cmp
sub
add
mov
cmp
out
daa
jmp
loop
add
mov
push
insb
movsb
rorl
flds
jne
jbe
repz
ljmp
jmp
xor
mov
push
sub
jo
inc
pop
insl
pop
jne
push
ret
add
xor
jmp
ss
cwtl
std
cmp
cmovae
inc
dec
add
jg
and
and
repz
call
mov
sbb
push
mov
jecxz
jbe
push
arpl
xchg
and
mov
repnz
push
les
sub
lcall
cmc
sub
cli
jmp
fcomip
cmpsl
fs
fnstenv
push
xor
js
popa
aaa
xchg
jbe
sub
stc
mov
ljmp
loop
push
mov
or
insl
push
sub
into
or
mov
popf
push
pop
mov
ja
mov
pop
outsl
orb
arpl
lret
pop
mov
mov
xor
dec
int
mov
call
add
in
lcall
js
loop
decl
je
rolb
mul
jmp
lret
pop
movsl
sub
mov
pop
and
sbb
pop
lahf
shl
xchg
jl
pop
cmp
jge
lcall
mov
std
int3
insb
outsb
pop
test
lods
call
or
sarb
jge
sub
imul
add
nop
pop
rclb
in
mov
mov
sbb
imul
pminsw
out
test
int
in
mov
and
pushl
dec
mov
sub
push
int
sub
sub
dec
xchg
adc
push
jae
scas
pop
mov
fbld
pushl
test
sub
cmp
jo
in
push
out
clc
dec
dec
xlat
push
out
mov
popa
popf
sahf
scas
mov
jmp
lret
hlt
inc
rolb
sbb
testb
loop
mov
fisubl
cmp
mov
mov
ficompl
dec
mov
iret
inc
dec
inc
jg
mov
lret
xchg
shrb
jmp
xchg
les
xchg
sbb
icebp
test
cld
push
add
es
mov
repz
decl
clc
popf
cmp
inc
popl
sbb
adc
and
in
lods
cltd
lods
pushl
or
fldenv
sub
aam
fists
inc
ljmp
add
das
pop
scas
std
adcl
xchg
cli
xchg
cwtl
mov
out
mov
popa
fnstcw
cmp
xchg
inc
jg
in
mov
shl
subb
insl
popa
jmp
ss
insb
sarl
ss
or
call
adc
adc
subl
push
sbb
pusha
xchg
xor
bound
dec
call
xor
stos
aas
mov
int3
cwtl
jmp
mov
inc
lds
loop
mov
mov
xor
mov
sub
mov
sbb
cmp
hlt
lock
lock
mov
fdivp
addr16
mov
xchg
cmp
fists
sbb
decl
hlt
scas
and
dec
in
mov
test
mov
ret
xchg
pop
dec
add
lea
test
lods
sbb
jle
pusha
add
jmp
push
mov
inc
cli
mov
add
movsl
xlat
dec
das
push
push
sub
xorb
icebp
in
cs
decl
fwait
iret
jg
cmp
dec
out
mov
mov
lret
pop
push
pushl
popa
or
mov
pop
inc
jae
outsl
jecxz
out
push
loopne
jmp
inc
jge
inc
push
mov
lods
cli
call
ret
ds
pop
fsub
or
ljmp
call
xchg
jne
ficoms
aad
xchg
daa
push
filds
inc
and
dec
jmp
xchg
cwtl
cmp
sbb
push
rcrl
adc
aaa
push
enter
inc
cld
out
add
clc
push
dec
cmp
jge
cmpsl
jg
and
sbb
mov
inc
shll
sub
addl
xchg
or
nop
xchg
cmp
add
mov
in
push
pop
imul
icebp
lcall
test
mov
or
mov
fbstp
mov
pushl
jge
lcall
and
push
cmp
mov
aam
daa
push
inc
into
push
movl
clc
dec
lret
ljmp
xor
jmp
xchg
mov
stc
or
adc
push
or
testb
incl
or
cltd
aaa
testl
mov
out
les
dec
cmp
sti
leave
and
das
mov
ret
mov
test
fldt
bound
xchg
inc
add
notb
and
into
push
cmpsl
fcomip
xchg
xchg
lret
jbe
ds
xchg
repnz
jo
mov
cmpsl
push
jmp
incl
mov
fsub
mov
test
decb
int3
mov
xchg
lock
incl
jecxz
pop
inc
push
jecxz
jp
mov
test
mov
call
cmp
stos
addr16
popf
fnstcw
push
fcomps
sub
inc
mov
bound
push
hlt
movl
cmpsl
jne
adc
lcall
cmp
fdivp
adc
cmp
xchg
jb
aas
jb
adc
pushl
xor
imul
nop
insl
xchg
inc
fisttpll
ds
push
les
mov
in
dec
xor
pushl
sub
push
lds
jmp
xchg
js
xchg
jg
mull
iret
push
push
test
stos
or
sbb
daa
insl
stc
jmp
pop
repnz
fidivl
mov
push
mov
add
xor
xorb
lret
xor
xchg
xchg
push
aaa
add
mov
cltd
and
xchg
incl
inc
or
ret
bound
lret
jmp
adc
jmp
rcll
ds
hlt
xchg
decl
shlb
pop
cmc
push
add
lret
jb
outsl
sbb
inc
nop
fcoms
and
decl
insb
lcall
out
mov
inc
inc
dec
mov
repnz
call
insb
mov
sub
cs
ds
enter
jbe
les
decl
rorl
sub
cmp
adc
call
mov
dec
sarb
xor
out
sahf
mov
adc
mov
lcall
sbb
jo
cmp
lahf
lods
je
iret
aam
les
lods
aaa
jmp
adc
fwait
popf
and
cli
add
fldcw
adc
aas
loop
mov
ljmp
insb
add
mul
mov
cld
adc
mov
loopne
lret
out
and
jae
sti
in
dec
adc
in
cmp
ja
mov
mov
nop
add
sub
leave
in
pushf
mov
sub
shlb
cld
ljmp
jp
add
adc
jp
pop
out
or
inc
rclb
icebp
inc
push
jl
int3
jg
add
jb
cmp
or
mov
pop
pusha
jmp
inc
std
pop
lock
pop
sub
nop
jne
push
gs
fsubrl
sbb
push
mov
dec
imul
out
mov
dec
cld
adc
sahf
lret
aad
dec
push
ss
incl
push
mov
or
in
cmc
inc
jp
loope
scas
fmuls
cltd
sbb
dec
xchg
or
aam
rol
xchg
arpl
int
dec
mov
xchg
pusha
out
pusha
pop
int
add
mov
add
incl
sbb
int
stos
sub
mov
jecxz
mov
das
ficompl
jo
mov
incl
xor
das
sbb
xchg
test
sbb
loop
dec
push
in
nop
outsb
cmp
daa
fmulp
add
aam
push
imul
mov
movsb
sti
lea
idiv
stc
ljmp
xchg
test
shll
lret
mov
add
notl
xor
and
pushl
or
es
ja
inc
xlat
fimull
mov
jnp
xchg
orb
outsb
jg
ljmp
dec
mov
xor
add
scas
in
mov
jecxz
decb
lcall
pop
dec
xchg
mov
push
out
mov
sbb
mov
ljmp
roll
pop
and
xchg
pop
jmp
inc
xchg
sahf
or
mov
cmp
faddl
xchg
jno
sbb
test
mov
cld
incl
shrl
test
test
test
jg
mov
push
jno
imul
pop
scas
insl
movsl
and
clc
fdiv
sub
xor
cld
call
ljmp
out
jl
dec
cmc
sbb
mov
or
add
xor
adc
jg
test
mov
pop
pop
jle
pop
decl
movsl
adc
pop
stos
imul
cmpsb
aaa
pusha
imull
outsb
and
xor
cld
jnp
lods
aaa
insb
mov
sub
inc
stos
inc
push
push
imul
mov
lcall
or
bound
loope
pop
mov
xchg
mov
int3
mov
mov
andb
repnz
jecxz
nop
push
cmp
mov
decl
push
pop
push
or
jge
ja
sub
and
stos
push
into
sub
pop
xchg
add
dec
lahf
mov
lcall
mov
xchg
push
je
inc
rcr
dec
jo
cmpb
scas
jne
and
mov
lret
xor
xor
fs
outsb
fsts
outsl
push
leave
je
test
and
cmp
jmp
mov
ja
insl
add
sahf
add
stos
cmp
fisttps
fdivr
pop
adc
push
add
xor
fdiv
call
mov
push
arpl
sub
push
scas
adc
mov
nop
jb
std
add
mov
inc
out
jo
data16
or
fdivs
jg
xor
lcall
lcall
andb
mov
xor
jl
jae
stos
and
cmp
subl
pop
insl
jg
push
cli
sub
cmp
sbb
movsb
subb
test
ja
ret
imul
or
pushf
sbb
movl
or
push
or
mov
enter
mov
mov
into
cmp
dec
add
mov
xchg
dec
jns
iret
outsb
mov
movsl
les
jo
jae
add
ljmp
std
je
sahf
mov
add
lret
dec
push
cmpsb
out
call
xchg
test
popf
fstps
mov
push
jg
push
push
test
pusha
mov
int
xchg
sbb
aam
stos
cld
cs
jmp
sbb
mov
xor
xchg
mov
rolb
jbe
dec
ret
pushl
lods
jp
out
jnp,pn
cld
orl
add
push
out
iret
scas
daa
mov
jge
lea
xchg
js
stos
dec
ret
push
cmp
imul
test
xchg
mov
adc
cmpsb
jae
dec
pop
dec
ss
adc
cmp
push
mov
mov
inc
cmp
pop
push
lea
or
and
lret
nop
mov
or
pop
xchg
movsb
or
cmc
mov
fistpll
and
incl
push
ret
push
dec
call
mov
scas
cli
dec
inc
sub
dec
xor
inc
xchg
xchg
dec
lahf
inc
mov
or
lcall
inc
pop
cli
pop
or
or
xchg
sbb
jne
outsb
outsb
inc
lea
mov
xchg
fsub
ret
fidivl
dec
sbb
push
incl
pop
and
daa
mov
xchg
rolb
pop
push
fildl
pushf
dec
gs
cli
aaa
ss
icebp
sub
popf
scas
push
xlat
jne
sbb
mov
ret
adc
rorl
loope
repnz
mov
sahf
dec
mov
lods
ljmp
fistpll
lock
add
lods
adc
shll
mov
and
push
ja
jmp
shr
mov
or
jns
inc
mov
int3
lcall
scas
push
hlt
jecxz
call
jns
mov
xchg
mov
leave
fcoml
mov
in
jo
into
and
xor
lcall
mov
xor
nop
gs
cmp
and
xor
mov
adc
ret
pop
std
ret
outsl
pop
inc
xor
mov
inc
fistps
decl
jl
mov
fdivl
or
scas
loope
xchg
scas
dec
mov
adc
push
aaa
fsubr
push
xchg
js
test
push
pusha
push
rcll
jo
and
push
ficoml
stos
xor
cmp
mov
ljmp
pop
inc
push
mov
sbb
or
cmp
adcb
fs
mov
push
adc
dec
mov
cmp
push
test
add
mov
pop
cmp
imul
xor
mov
out
cmp
frstor
pop
xchg
repz
decl
lods
imul
push
pop
popa
in
pop
test
cmp
mov
jno
inc
inc
push
inc
arpl
pop
fidivs
mov
sbb
aad
mov
push
xchg
imul
add
mov
mov
icebp
push
push
and
sub
mov
cmp
mov
cmp
subb
cld
add
out
mov
arpl
xor
hlt
ljmp
jb
pop
mov
dec
icebp
aaa
push
jnp
pop
out
je
or
nop
mov
jo
ja
cli
cmp
lods
sub
mov
mov
jge
divl
ljmp
cmp
sub
ret
scas
adc
test
outsl
jecxz
pop
lcall
inc
cmp
mov
cmpb
jp
mov
fsubl
push
subl
and
sbb
aad
stc
int
mov
fldcw
mov
push
cli
mov
dec
push
jg
add
jbe
mov
xchg
and
in
adc
pushl
aad
adc
push
inc
push
adc
push
xlat
je
inc
mov
sahf
inc
call
adc
les
ret
adc
sbb
lea
mov
pop
xchg
mov
lahf
mov
fnstcw
push
in
xchg
mov
fcmovb
in
ss
divl
sub
sbb
addr16
jbe
stc
bound
std
das
cli
lcall
push
inc
orb
inc
add
xor
sub
cmp
mov
sti
test
push
mov
outsl
ja
cwtl
sub
sub
inc
test
icebp
decl
jb
xlat
pop
outsl
cld
sub
ljmp
ret
cmp
int
inc
xor
dec
jbe
xor
mov
mov
push
movsb
setp
rclb
decl
jge
or
push
sub
and
fcomip
push
sbb
xor
rolb
mov
dec
mov
imul
xor
inc
sub
std
or
dec
lods
cmpl
jmp
addr16
sbb
mov
fsubp
cltd
loopne
out
push
dec
or
and
sti
movsl
pop
sub
stos
xchg
sti
dec
int
xorb
in
std
xchg
arpl
rorl
jg
mov
ljmp
cmpsl
sbb
call
adc
jo
push
fmuls
jae
cmp
fwait
or
aas
pop
sbb
mov
ds
jg
sub
fstpl
xchg
dec
lods
mov
cmpsb
mov
inc
lds
and
lcall
nop
jl
add
jge
stos
call
lods
sbb
rclb
dec
daa
dec
clc
jno
jmp
push
dec
and
or
pop
decl
mov
push
das
mov
stos
add
push
lahf
push
in
aad
sub
xchg
mov
loope
scas
push
adc
movsb
push
int3
shl
ret
push
addr16
pop
add
cmpsl
ljmp
stos
xor
mov
shlb
cs
pop
movsb
clc
enter
jmp
inc
jnp
jg
or
lock
je
out
inc
sub
mov
jg
xorb
add
addr16
lock
jmp
cmp
push
int3
add
push
repnz
aas
adc
pushl
ret
call
jno
mov
lcall
pushf
clc
js
sbb
aad
mov
rcll
inc
lret
rorl
inc
mov
push
pushl
std
pop
es
push
jp
sub
inc
cmp
or
popl
push
xchg
and
push
ds
psllw
std
pop
mov
fisubrl
outsl
scas
mov
mov
and
fcoml
sti
push
shr
les
stos
movsl
ret
pushl
mov
push
cmp
out
push
adcb
lods
or
mov
call
cld
ljmp
ljmp
rol
js
loop
sub
cmp
push
mov
lcall
jne
pop
add
pop
imul
lea
xchg
jo
mov
or
mov
jo
jg
mov
aas
xor
aas
addr16
dec
subb
repnz
push
lahf
inc
out
adc
mov
call
in
mov
xchg
jns
mov
push
imul
mov
push
sub
add
arpl
xchg
movlps
xor
and
add
sbb
hlt
movsl
dec
std
ljmp
adc
aaa
cwtl
lods
mov
fbld
stos
mov
ja
aad
std
jns
cmp
jbe
sub
fwait
jge
in
mov
xor
cld
and
mov
xchg
cmp
pop
test
add
lret
out
jp
js
jmp
dec
out
xor
lret
lret
and
repnz
jne
sbb
inc
stos
adc
insb
xor
js
ljmp
push
iret
cmp
into
xchg
mov
dec
fmulp
inc
mov
out
or
xor
cmp
jle
mov
mov
pop
pop
mov
xor
and
data16
lcall
fwait
push
lcall
int3
dec
cwtl
push
push
add
fcoms
or
out
outsb
cmp
cwtl
pop
cmpsl
pop
pop
xor
scas
push
fistpll
je
dec
dec
repnz
add
out
ja
jmp
in
xchg
es
out
pop
cld
incl
loopne
dec
inc
push
shr
and
add
cli
out
ljmp
dec
inc
jno
xor
push
imul
or
and
cmpsl
lock
fs
pushl
xchg
mov
mov
adc
std
sub
jne
mov
inc
imul
into
aaa
mov
add
lods
mov
iret
mov
lods
sbb
popf
ffreep
mov
adc
loopne
jmp
dec
pop
add
and
push
ret
pop
lcall
cli
pushl
sbb
jae
sub
sbb
out
lret
sub
mov
push
mov
arpl
hlt
sar
out
mov
mov
nop
mov
mov
mov
add
loope
incl
push
mov
xor
popa
into
pop
lds
or
lahf
push
pop
orb
dec
xlat
pop
pop
lcall
xor
pop
in
scas
popa
xchg
jge
mov
and
cmp
fisttpl
inc
outsl
pusha
xchg
fcomip
iret
ja
inc
mov
xchg
jo
fsts
ss
xchg
pop
int
stos
mov
adc
xor
inc
lods
inc
test
out
adc
sbbl
lahf
ljmp
pop
pushl
std
in
adc
lret
mov
mov
and
femms
divb
mov
inc
jno
xchg
mov
mov
sub
push
imull
ja
jg
sub
xchg
push
out
or
push
fchs
les
inc
mov
ljmp
pop
mov
adc
insl
pop
jmp
js
sub
movsl
fstpt
push
aam
mov
push
das
into
cs
pushl
cmp
adc
rcll
insl
jle
daa
xchg
mov
cmp
frstor
ljmp
mov
sub
adc
mov
push
out
cwtl
out
pop
ljmp
pop
push
pop
mov
es
int
outsb
or
sub
and
rclb
jmp
hlt
addr16
out
and
push
dec
pop
test
cmpsb
into
inc
xchg
mov
in
push
jg
test
jbe
jns
aam
mov
in
lds
fs
bound
inc
dec
stos
mov
ljmp
les
cmc
je,pn
popf
out
mov
out
movsl
shlb
mov
push
rcrl
out
lcall
in
jae
mov
mov
cmpsb
mov
cmp
jns
sbb
jns
std
and
sbb
cli
ljmp
jmp
clc
mov
mov
incl
pop
pusha
inc
sub
pusha
mov
dec
cmp
dec
xchg
and
push
fwait
roll
scas
mov
push
pop
push
lods
inc
cli
pop
je
test
ljmp
in
add
rolb
sub
clc
in
ljmp
mov
mov
cmp
loop
fildll
mov
sbb
mov
push
mov
dec
sub
faddl
mov
das
sahf
loop
dec
xchg
jecxz
mov
test
jg
pop
cli
test
sbb
or
or
stc
rolb
sbb
xor
dec
xchg
mov
mov
xchg
call
aas
mov
xbegin
stos
mov
shlb
clc
sbb
shlb
jno
loop
xlat
lcall
pop
and
js
xchg
jp
jns
icebp
adc
mov
add
sbb
fisttpl
sbb
cli
sub
xor
add
inc
pop
push
xchg
je
call
xor
adc
test
or
loope
mov
cmp
mov
and
popa
ljmp
ljmp
cwtl
out
lahf
scas
popf
int3
ret
into
jge
adc
jno
mov
dec
cld
call
dec
fsubr
jns
jnp
mov
sbb
incl
sub
pop
inc
or
inc
das
fidivl
cmp
cmp
gs
mov
jb
or
adc
out
xchg
or
ljmp
adc
iret
lea
scas
add
test
or
sub
cmc
ljmp
jbe
lcall
in
jbe
in
hlt
sub
jl
repnz
sbb
fcomip
and
xchg
and
dec
mov
mov
add
call
jg
jbe
divb
dec
clc
insl
ds
lods
dec
xchg
dec
js
xlat
cs
sbb
cld
pushl
mov
dec
xchg
rol
or
mov
fwait
decl
push
xlat
pop
ret
adc
lods
cmp
lret
mov
sti
sti
or
sbb
sub
sbb
xor
ret
jl
outsl
pop
imul
jecxz
mov
jge
pop
sbb
or
xchg
or
es
mov
mov
xor
call
outsb
rcl
mov
sub
fdivs
inc
sahf
dec
jns
into
in
imul
incl
insl
mov
andb
loopne
mov
mov
push
inc
es
and
cld
int
sbb
fwait
mov
xchg
shr
pop
lods
cld
ds
cmpsb
cmp
sub
adc
xlat
pop
lds
inc
xor
out
std
xchg
jecxz
jg
or
shrl
frstor
bnd
cmp
int
mov
ret
lcall
mov
mov
sub
sbb
mov
leave
add
sub
enter
inc
sbb
inc
stos
lcall
and
mov
bound
div
xor
test
mov
gs
aaa
and
jmp
mov
sub
lahf
aad
sbb
cld
mov
adc
or
dec
sbb
cmc
jbe
loop
or
jmp
lods
mov
mov
xchg
sub
pop
pop
into
add
or
push
cmp
aam
lods
push
add
mov
dec
gs
ja
inc
imul
cmpsb
cmc
jmp
mov
dec
jb
dec
pop
cmpb
popf
xchg
pusha
jb
int3
out
out
ret
aad
fwait
out
pop
lret
decl
popf
bound
jge
mov
dec
sbb
sbb
jmp
das
mov
jmp
fdivrs
popf
push
adc
lahf
pushl
cwtl
fs
flds
mulb
shrl
mov
bound
mov
push
sbb
mov
cmpsl
xor
pop
xor
cmp
fsubrp
cmc
out
pop
mov
aam
pushl
dec
int
icebp
hlt
pop
fcmovnu
push
jae
loopne
mov
mov
adcb
in
fldcw
outsb
mov
inc
mov
insl
pop
mov
mov
or
stos
xchg
xchg
cmp
jae
jg
xchg
xor
in
pop
cld
inc
aam
adc
int3
aaa
jecxz
jnp
shll
and
ljmp
adc
into
mov
sub
jb
mov
and
pop
mov
pushf
jne
pushl
rcl
stc
cld
iret
xchg
ss
addr16
pop
lods
jno
repnz
mov
mov
aas
adc
lcall
orl
xchg
bound
ja
cmp
lcall
push
sbb
xor
adc
ds
mov
cmp
inc
xchg
outsb
xor
sbb
in
into
pop
adc
push
nop
sti
and
cld
or
and
and
jecxz
call
incl
xor
sbb
cmp
call
xlat
data16
fucomip
jbe
xchg
xor
gs
fs
cmpsb
cld
xor
adc
inc
sbb
test
sbb
ror
jg
ljmp
ljmp
or
push
sbb
ja
into
repnz
popa
mov
adc
sub
add
mov
mov
bound
cmp
lret
sub
pop
xor
inc
aas
nop
mov
ljmp
mov
out
or
hlt
jg
popa
pop
cmp
dec
jp
popl
incl
pushf
inc
js
sub
into
rcl
test
mov
fucom
inc
js
test
incl
xchg
inc
inc
out
in
sbb
test
fnstenv
xchg
inc
cwtl
push
jecxz
inc
cmpsl
or
jbe
cli
decl
cmp
test
and
or
sub
lock
ljmp
or
mov
dec
lret
fimuls
cmpsb
nop
or
out
cli
lcall
out
inc
jbe
outsl
movsb
mov
mov
pusha
hlt
loopne
add
push
std
sbb
sbbl
adc
outsb
sub
adc
push
sub
loopne
ljmp
insl
lcall
icebp
in
mov
cmp
mov
mov
stos
adc
cmp
jg
inc
sbbl
or
push
xchg
sub
lds
xor
in
arpl
add
cmpl
test
adc
cmc
ficoml
jp
decl
cld
lret
push
test
jne
mov
inc
iret
es
jae
loop
push
aaa
cld
pushl
jp
pop
mov
test
ljmp
aas
adc
cltd
push
dec
push
fadd
mov
inc
mov
je
sbb
jnp
mov
xchg
inc
mov
sub
ljmp
or
add
mov
cs
xchg
mov
jno
lret
mov
loopne
pop
mov
sbb
mov
mov
decl
lock
mov
outsl
cmp
test
sub
lcall
push
pop
movsb
adc
dec
cmp
int
inc
xor
mov
cld
pushl
lods
dec
pusha
push
pop
clc
and
xchg
pop
jae
jmp
xlat
scas
mov
mov
jae
incl
out
xor
sub
mov
lret
mov
add
into
and
pop
mov
and
mov
arpl
gs
jbe
fsubrs
lret
cld
jg
add
outsl
das
stos
add
nop
adc
or
jmp
mov
mov
movsl
sub
fldenv
mov
iret
cs
insb
jecxz
mov
pusha
in
jmp
ss
mov
sub
shlb
lea
jno
push
cmpsb
outsl
inc
in
pop
cwtl
inc
pushl
sahf
xchg
push
test
in
in
xchg
mov
mov
push
test
fsubrl
jle
mov
shll
push
inc
imul
aaa
das
dec
and
lcall
testl
daa
xor
mov
pusha
adc
mov
je
inc
or
jecxz
lcall
adc
cmpsl
inc
adc
mov
sub
cs
xor
ljmp
pusha
icebp
jb
and
mov
pop
push
iret
cld
dec
pop
mov
xor
dec
out
mov
jge
sbbb
mov
out
xor
divb
xor
jbe
inc
xchg
orl
xchg
les
mov
lcall
js
stos
arpl
mov
std
mov
aaa
cld
or
repz
xchg
rcll
ljmp
inc
lods
int
das
mov
cmp
mov
fildll
sbb
fimuls
xchg
pop
adc
xchg
xor
ret
insb
es
push
aad
ljmp
dec
xchg
pop
imul
aam
das
cmp
push
nopl
test
lds
jecxz
sub
mov
sti
sub
clc
inc
push
jo
cmp
cmc
mov
sub
outsb
clc
jg
mov
shll
ret
mov
jmp
pop
ljmp
inc
fmull
filds
loop
stos
ds
imul
sub
jmp
pushl
arpl
cmp
imul
jl
rol
pusha
dec
jae
mov
pop
cmp
imul
and
add
sub
fsubr
jle
stos
enter
mov
mov
cmp
push
sub
iret
pushf
adc
std
imul
ljmp
jmp
cltd
ss
cmp
mov
mov
test
inc
and
hlt
ljmp
xor
jle
push
mov
cmp
push
sahf
mov
fwait
fisttps
pop
aaa
xorb
sub
mov
sub
decl
mov
insb
repnz
mov
mov
and
lcall
xchg
sbb
repnz
aam
fsubrl
adc
and
xor
jmp
mov
stc
pop
or
fwait
sbb
dec
inc
loop
test
dec
lcall
xchg
pop
mov
ljmp
push
addl
dec
xchg
push
pop
and
sahf
repz
fwait
out
je
jne
repz
xchg
mov
push
xchg
insl
xchg
inc
leave
jb
mov
cwtl
xor
leave
push
decl
sbb
js
xor
add
or
imul
lcall
pop
int
sbb
lock
inc
or
and
or
jl
sbb
les
incl
pop
pop
movsl
dec
subl
idiv
nop
or
sbb
mov
mov
or
jmp
sahf
fistpll
xchg
push
pcmpgtb
xchg
loopne
lock
pop
adc
jle
pop
pop
sahf
and
xchg
lock
dec
or
mov
push
sbb
sbb
das
or
frstor
pop
in
cmp
lahf
sub
rorl
sbb
push
xor
mov
adc
lcall
incl
scas
jbe
lret
mov
cmc
stc
push
sbb
jne
jns
pop
inc
pop
sbb
push
std
push
orb
xchg
mov
mov
xor
into
std
push
imul
cmp
sti
out
inc
hlt
pop
cmpsl
in
adc
push
dec
aad
adc
ljmp
jns
std
mov
lcall
movsb
in
ljmp
js
ret
cmp
test
xor
lods
andl
mov
sbb
fs
pop
ljmp
shll
stc
push
hlt
mov
adc
clc
lcall
out
mov
mov
xorl
es
xorl
mov
outsb
inc
and
roll
mov
out
adcl
mov
popl
decl
bound
cmpsb
fwait
mov
inc
or
sub
mov
jmp
adc
sbb
push
addl
jnp
or
jae
dec
sarb
aaa
std
cmp
or
rorb
sbb
call
sbb
fisttpl
in
movsl
ja
mov
push
dec
or
in
or
jge
shr
stos
and
sbb
lods
and
sub
incl
adc
adcb
ljmp
mov
add
inc
cld
decl
sbb
and
imul
sbb
mov
jmp
mov
ret
fistpll
rcrb
push
fstps
js
push
or
mov
fcomps
es
outsl
sbb
repz
mov
lcall
jmp
testl
rorl
repz
adc
ja
dec
clc
or
in
out
js
push
lar
popf
dec
jb
sub
nop
ds
and
incl
in
dec
sti
mov
dec
sar
enter
dec
andb
inc
insl
decl
mov
xchg
ljmp
outsl
clc
xchg
inc
inc
push
mov
fdivs
stc
xchg
dec
push
clc
xchg
mov
add
mov
call
scas
cltd
mov
adcl
lock
pop
test
es
sbb
xchg
loope
sti
jb
lds
scas
stc
sub
dec
movsl
hlt
add
mov
int3
negl
push
pop
sub
clc
incl
sbb
call
inc
iret
sbb
sbb
rorl
push
shlb
insb
mov
cltd
fxch
test
scas
clc
dec
mov
jne
lcall
movsl
or
dec
lahf
addl
xor
lahf
and
clc
incl
or
mov
xor
sar
mov
pop
les
loopne
xchg
adcl
jbe
pop
mov
incl
push
mov
ds
test
or
push
xor
out
dec
sbb
push
test
inc
mov
jmp
ficoml
mov
or
cmpsb
inc
add
out
add
pop
mov
outsl
pop
aas
sbb
xchg
fstpl
out
rolb
jge
adc
jg
out
enter
cmp
jecxz
fldl
incl
mov
mov
outsl
pop
in
cmp
lret
clc
decl
fs
push
dec
dec
sub
jo
sub
jno
inc
enter
jl
mov
push
rcrl
mov
jg
test
fwait
cmp
add
aaa
mov
bound
jge
aad
in
sub
decl
mov
pushf
sbb
popf
gs
jle
adcb
adc
pop
outsl
inc
out
stos
stos
cmp
adc
cmp
push
test
call
sbb
hlt
cmp
lahf
aaa
adc
test
cmp
push
outsb
int
ss
iret
test
insb
loopne
pop
jl
hlt
sub
out
mov
fs
inc
arpl
jl
stos
cmp
xor
arpl
lea
xchg
dec
ljmp
xor
mov
bound
dec
outsb
fiaddl
mov
mov
push
xor
cs
or
inc
mov
pop
sbbb
cmp
nop
xlat
fistpl
xorl
ljmp
sub
daa
in
sbb
rol
add
mov
cmp
loop
pop
std
call
fstl
idivb
mov
add
cltd
mov
add
xchg
mov
lock
mov
mov
mov
out
pop
cmp
in
ljmp
popf
jae
fwait
jge
jnp
mov
fists
shll
pop
cmc
movsb
mov
adc
daa
les
sahf
loop
inc
decl
rcl
xor
fwait
adc
cli
mov
pop
or
ss
pop
lock
pop
fcomip
lcall
out
fwait
out
cs
lock
xor
or
xor
jg
ljmp
or
add
jbe
pop
hlt
shr
stos
imul
scas
notl
ljmp
sti
and
repnz
out
ja
cmp
mov
push
hlt
mov
mov
pushl
ret
cmp
push
or
ret
mov
stc
aad
leave
xchg
add
in
test
pop
and
sbbl
lret
lea
dec
mov
loopne
les
sbb
aad
cmp
inc
and
dec
mov
test
stos
shll
ljmp
add
sbb
or
out
adc
jnp
xor
and
cwtl
inc
lcall
pop
decb
push
ss
sahf
sub
or
cld
lcall
loope
mov
dec
inc
xor
in
xor
out
fildll
cld
fdivl
lahf
push
outsl
xor
daa
pop
lea
adc
xchg
or
jmp
pop
xchg
lea
jno
xor
stc
sub
aaa
ret
mov
insl
mov
or
clc
ljmp
sbb
jmp
mov
sti
pop
fucomip
dec
orb
sub
decl
mov
ret
xchg
mov
in
in
ds
repnz
call
jns
rolb
leave
cmpsb
js
rcrl
arpl
sti
pusha
jno
inc
shr
popa
xchg
dec
sub
std
arpl
sar
cmp
inc
mov
divb
push
cmc
cmp
and
mov
jle
mulb
jb
sub
popf
aaa
shl
sub
cli
fbstp
flds
arpl
sub
cmpsl
in
imul
inc
adc
fsubl
pop
daa
inc
or
dec
gs
jno
leave
std
incl
int3
pop
xor
stos
jle
sahf
fidivrl
xchg
push
sbb
enter
lret
inc
mov
xchg
and
inc
in
iret
pop
jb
sub
jecxz
sbb
call
cmpsb
lret
fisubrl
mov
push
sbb
pop
out
mov
mov
pop
call
stc
jp
lret
lea
lock
lahf
es
adc
out
cmpb
inc
push
and
sub
push
xchg
pop
insl
xchg
sbb
xor
adc
and
jle
xor
mov
and
fistl
mov
popf
pushf
cmp
push
inc
sbb
pushl
inc
xchg
jle
mov
imul
jecxz
adc
into
xor
xor
sbb
mov
clc
lds
lods
dec
mov
movb
cli
sub
clc
mov
je
mov
xor
test
push
dec
lock
fwait
fwait
adc
into
call
push
in
or
lret
xchg
jnp
xchg
pop
pop
divl
xchg
ds
lret
decl
jmp
sbb
jne
enter
dec
mov
cmp
sub
mov
addr16
call
add
xchg
es
mov
out
xchg
out
aas
lcall
rorb
xchg
mov
addr16
aad
mov
pop
mov
push
jg
fdivr
jg
decl
mov
pop
sub
jae
mov
adc
lock
std
ljmp
sbb
shll
subl
pop
movsb
ret
inc
jg
ss
mov
xchg
mov
mov
adcb
dec
pushf
decl
incb
arpl
mov
xchg
shll
mov
push
lods
imul
dec
cmp
mov
hlt
pop
mov
push
cltd
mov
in
sbb
jg
and
cmpsl
sub
add
mov
loopne
in
push
pushf
dec
push
xchg
incl
lock
mov
xor
mov
lcall
mov
out
imulb
insl
fcmovnbe
lahf
call
mov
rorb
call
sahf
cmp
jge
lea
cltd
xchg
cmpsl
xchg
xor
mov
pop
and
or
xchg
push
das
cmp
gs
mov
sahf
lret
out
clc
pushl
xchg
xor
sbb
add
bound
xlat
ret
leave
cmp
xchg
cmpb
pop
mov
cmpsb
cltd
data16
jg
or
scas
cmp
call
jae
std
nop
stos
push
insl
js
iret
sbb
inc
mov
cmpsl
in
push
cmp
test
lea
lock
or
mov
sbb
loopne
mov
int3
in
add
loope
push
call
push
aam
xor
push
fcmovnb
shlb
cli
jg
roll
mov
mov
mov
clc
lcall
sub
xchg
xor
inc
mov
mov
xor
mov
jp
scas
mov
addb
inc
or
cli
add
jecxz
dec
mov
ljmp
and
insl
shlb
pop
sahf
inc
or
les
xchg
imul
inc
xor
iret
jae
inc
mov
movsb
cmp
test
test
enter
pop
sub
cmpsb
and
clc
in
out
jmp
push
pushf
cmpsl
fidivl
pop
jbe
stos
mov
mov
stos
fcoml
mov
cmp
lock
sbb
cmp
sub
lea
dec
dec
iret
push
pop
icebp
ljmp
cwtl
add
mov
adc
rorb
xchg
fldt
call
or
push
or
cmc
mov
xchg
insl
ret
pop
outsb
or
arpl
out
incb
jmp
movd
aaa
inc
out
adc
pop
ficomps
jno
test
and
jmp
nop
and
mov
inc
mov
aad
lds
icebp
rcll
mov
cmp
popa
outsb
cmp
repnz
out
ret
push
mov
out
add
ret
push
in
test
dec
jle
jp,pn
fcmovnb
testl
adc
adc
incl
rcrl
fadd
or
call
out
pop
les
aaa
mov
cmp
clc
sbbl
sbb
sbb
std
inc
add
pusha
jb
xchg
xor
clc
ljmp
push
inc
nop
sbb
dec
lret
loopne
andb
movsb
and
mov
pushl
cli
xor
addr16
fcompl
push
mov
add
or
stos
je
in
xchg
jno
dec
jg
mov
pop
mov
test
push
mov
mov
test
loop
jmp
fildl
dec
or
jecxz
movsb
mov
jp
insb
jne
dec
mov
loope
test
lret
clc
inc
cmp
and
test
mov
fdivl
outsl
fmuls
pop
aas
popf
inc
adc
testb
cmp
imul
std
leave
mov
ds
jl
es
pushl
pop
mov
xlat
ds
mov
and
or
into
adc
jle
movsb
int
cmp
mov
mov
dec
notl
ret
sbb
jnp
out
mov
xor
sub
add
push
push
loopne
mov
cmp
push
push
arpl
call
cli
es
mov
sub
test
mov
je
int3
sbb
in
mov
nop
sub
ljmp
leave
testl
rol
pop
scas
insl
pop
pop
into
loop
mov
loopne
das
cli
dec
cmp
cltd
lea
stc
pop
cmp
in
cmp
imul
ja
clc
in
fdivs
cmpb
jns
cmp
test
sub
mov
inc
jo
cmp
fbld
mov
cmc
pop
jge
add
add
mov
mov
shll
sbb
mov
mov
jmp
jle
jp
scas
inc
mov
jns
shr
repnz
ret
cld
inc
jns
push
imul
loope
in
xchg
mov
int3
hlt
inc
sub
aas
push
fsubs
call
aaa
hlt
pop
inc
xor
xlat
out
push
jl
jb
dec
xor
sub
mov
fdivrl
cmpsl
loop
mov
xchg
inc
arpl
mov
push
sbb
outsl
fwait
mov
adc
jmp
cmp
mov
scas
cwtl
adc
jp
push
and
xchg
pop
mov
mov
aad
bound
add
add
add
call
cmpsl
mov
int3
add
sbb
ss
cmpsl
out
dec
xor
int
mov
fisttps
shrb
sub
sbb
data16
pop
in
call
ja
mov
aam
dec
sub
dec
adc
adc
xchg
fdivrl
mull
fnstcw
mov
jb
xor
pop
adc
rorb
add
jecxz
orl
fimull
mov
mov
loope
mov
jae
dec
adc
xor
sub
test
jp
lods
push
jp
mov
jb
test
js
and
addl
cmp
dec
jns
inc
jnp
or
push
or
test
and
jg
cmc
jne
not
push
inc
dec
mov
pop
jle
ss
adc
lds
pop
clc
jmp
lcall
jb
sbb
fmul
xchg
in
sbb
dec
sub
lock
push
movsl
cmp
fdivrs
push
fcomip
pushl
shl
mov
jle
jns
mov
mov
mov
dec
dec
cld
mov
cmp
mov
subb
divb
add
cltd
add
insb
inc
adc
mov
adc
repnz
scas
add
inc
push
inc
mov
cld
jg
ret
or
jbe
sub
mov
push
cmpsl
ljmp
dec
repnz
sub
mov
test
mov
imul
pop
mov
fisttpll
std
mov
sub
inc
xchg
iret
dec
dec
int3
mov
test
decl
cld
insb
lods
or
dec
stc
inc
fdivs
jbe
adc
sub
scas
push
jg
subl
sub
sbb
or
lret
iret
fnstcw
add
test
loop
mov
test
loop
dec
jg
dec
call
jnp
in
in
push
cwtl
jb
xchg
mov
cmp
ds
mov
decb
outsl
sub
pop
add
sub
stc
idiv
pushl
clc
daa
subl
dec
jp
mov
out
or
lcall
mov
add
and
mov
dec
dec
insl
sbb
pushl
popa
xchg
es
notl
adc
cltd
out
push
aaa
test
or
cmp
xor
ret
cwtl
das
xlat
inc
jecxz,pn
xchg
sarl
or
mov
cmp
mov
and
cltd
sahf
scas
clc
mov
pop
loope
xchg
std
cltd
and
mov
clc
cld
dec
sbb
mov
xchg
cmpsl
mov
sbb
addb
call
ljmp
or
mov
dec
inc
fs
xchg
mov
in
xchg
out
test
jmp
dec
ljmp
testb
test
or
adc
inc
jle
jb
dec
clc
inc
jnp
movsl
sub
pop
mov
mov
data16
inc
jae
mov
and
ret
faddl
sub
aaa
rol
pop
popf
cld
jno
popf
call
stc
cwtl
jecxz
lcall
mov
xchg
dec
and
cmp
lahf
and
leave
and
sar
push
aam
notl
leave
mov
imul
adc
ljmp
mov
sub
sbb
or
ljmp
test
inc
int
pushf
sub
push
insl
cmp
outsw
mov
jg
outsb
pop
mov
push
dec
pop
or
icebp
out
decl
xchg
inc
push
push
and
mov
mov
sbb
sub
ds
pushf
or
orb
add
fisubrs
lea
sub
out
iret
xor
xor
jmp
ret
mov
pushl
sarb
jae
out
sbb
leave
sbb
xchg
pop
shr
mulb
adc
call
aas
lcall
mov
nop
or
aas
insb
xchg
push
sub
mov
xlat
in
mov
mov
popa
fmull
pop
xchg
adc
or
sub
jg
decl
outsl
scas
mov
dec
inc
fwait
mov
push
ret
leave
inc
inc
das
imul
decl
or
add
bound
cmc
xchg
fstl
xor
call
iret
test
sbb
mov
mov
xor
call
aad
xchg
push
jmp
add
jmp
sti
cmc
mov
insl
mov
cld
dec
mov
and
cwtl
ja
adc
cmp
jnp
mov
inc
or
call
add
fnsave
test
ret
jg
ljmp
fisubrl
push
or
xchg
mov
push
fistpll
mov
jns
add
pop
lret
pop
sbb
jns
shll
pushl
jl
jnp
pop
push
cmp
arpl
in
fcomps
cld
lcall
inc
xlat
and
adc
xchg
adc
addr16
push
bound
mov
jl
clc
stos
lcall
shll
mov
imul
in
clc
lcall
aad
sub
ds
cmp
jle
jmp
jb
cltd
adc
mov
pop
cmp
sbb
jmp
loop
pop
popf
mov
dec
mov
int
lods
das
andb
stc
sar
scas
cli
ljmp
sub
mov
cmp
and
mov
or
adc
pop
push
int3
lret
lahf
xor
mov
std
aas
subl
mov
dec
cmp
dec
and
xchg
pushl
mov
imul
popa
leave
push
clc
imul
jo
or
sbb
dec
pop
mov
cli
jno
std
sahf
imul
mov
leave
sar
decl
sbb
mov
gs
sub
data16
lds
in
cmp
fadds
mov
mov
test
fsubs
clc
push
pop
aam
aaa
add
dec
jle
inc
and
cmpsl
cld
out
mov
cs
mov
push
push
mov
mov
add
notl
adc
hlt
sbb
lock
jnp
sub
imul
fucomp
add
pop
mov
sti
mov
out
decl
push
inc
jmp
mull
cmp
out
sahf
xchg
ja
cmc
pop
mov
call
mov
xchg
sbb
sarl
shl
cmp
mov
sub
jle
cmp
cmp
sub
pop
lret
idiv
push
push
es
cmp
decl
sub
inc
jle
shr
ret
push
sub
push
dec
insl
jg
stc
dec
ss
pop
sub
push
pop
pop
int3
pop
inc
scas
iret
add
test
fxch
test
call
cmpsl
in
rorb
pop
sbb
jns
fdivrl
mov
mov
shrb
movsb
bnd
es
and
mov
int3
dec
push
sub
mov
out
test
mov
lret
cwtl
in
pop
call
lcall
cltd
andl
and
out
pop
idivb
gs
dec
dec
push
ljmp
std
insl
push
adc
mov
fcmovb
mov
push
jnp
in
stos
incl
mov
in
adc
cltd
in
jp
imul
jmp
outsl
test
in
ljmp
imul
mov
mov
mov
std
dec
and
mov
cmpsb
push
or
stc
sbb
test
jg
adc
mov
pop
or
subb
int
adc
mov
sbb
and
push
adc
lock
jno
inc
in
fmull
jl
jg
test
jle
aas
xor
dec
sbb
aas
jns
outsl
pop
pushl
call
int
int
and
pop
ja
test
repnz
pop
dec
pop
mov
cs
adc
push
call
and
add
adc
push
jbe
or
adc
jmp
cmp
movsl
mov
mov
xchg
jno
iret
mov
adc
cli
orl
mov
insb
mov
pushl
lea
mov
jecxz
mov
sub
push
push
xchg
ja
add
lahf
mov
adc
jb
mov
cs
push
aam
je
push
cmc
add
xor
mov
lods
jle
sbb
inc
shll
sbb
mov
shlb
scas
mov
dec
gs
std
popf
cmpsb
lock
mov
leave
out
mov
mov
push
mov
or
iret
dec
clc
lcall
loopne
mov
dec
das
mov
incl
test
daa
sti
pushf
idiv
or
push
dec
push
cwtl
cltd
push
xor
sbbb
push
js
xchg
je
and
mov
adc
ret
push
jne
in
inc
pmuludq
adc
push
test
xor
sbb
or
jns
ljmp
and
lret
xor
mov
outsb
push
cmp
pop
insb
in
push
addr16
cmp
incl
or
mov
and
aam
xor
lods
out
mov
or
jb
scas
and
dec
aam
and
inc
or
pusha
js
dec
sbb
pop
and
js
or
jp
dec
cltd
call
mov
cmp
outsb
call
in
cli
call
fmull
mov
repz
xorl
xchg
pop
loopne
sahf
sti
pop
inc
rorb
pop
and
lea
and
or
lcall
add
ja
cwtl
jne
dec
and
out
lcall
xorb
xlat
push
cmp
inc
ret
aad
mov
mov
call
clc
mov
popa
sub
stc
sahf
push
fdivl
sub
jmp
pop
ds
sbb
adc
xlat
aaa
xchg
divl
pushf
inc
jne
jp
aas
pop
mov
in
or
gs
rcrb
mov
loopne
or
or
add
mov
shrb
repz
xchg
inc
cmpsl
fdiv
insl
jno
pushl
loopne
mov
cmpsb
arpl
push
insl
arpl
leave
ljmp
mov
nop
jne
bound
cltd
mov
fisttps
mov
test
arpl
or
cmc
pop
push
hlt
aam
push
pop
out
fcomip
dec
inc
pop
sti
mov
imul
jg
sub
inc
mov
xor
mov
xor
mov
clc
sbb
jmp
popa
dec
pop
loopne
aas
sub
push
test
pop
dec
in
adc
ljmp
fcomps
cmp
jmp
enter
or
je
adc
bound
push
inc
fs
fcomip
mov
repz
xchg
stc
cmp
mov
sub
push
jg
jmp
jge
push
push
xchg
leave
and
mov
sub
mov
xor
les
mov
pop
cld
jg
fists
das
or
adc
push
test
pop
xor
call
enter
dec
jle
call
jmpw
icebp
loopne
mov
call
adcb
jmp
fcmovnu
mov
dec
leave
fwait
cmp
std
xor
scas
nop
mov
cmpsb
jns
rclb
ljmp
or
push
jl
inc
push
push
cmpb
pop
cld
adc
imul
aad
fwait
fdivrs
jge
xchg
daa
stc
jmp
arpl
and
cmc
adc
cli
push
and
mov
data16
fimuls
jmp
push
fistps
sete
adc
xchg
loope
mov
push
mov
divl
lcall
insl
inc
sbb
leave
mov
mov
add
fwait
lock
lret
cmp
sub
jmp
or
mov
aas
push
scas
inc
ret
rcll
jge
or
stos
jle
dec
icebp
cli
fwait
sti
out
push
idiv
inc
sbbl
mov
dec
lcall
addr16
jge
xchg
mov
and
xor
subl
lcall
jb
dec
sub
cltd
pop
or
outsl
sahf
bound
mov
test
jo
cmp
pushl
outsb
pop
jb
adc
stos
xchg
rcrb
arpl
fstpl
lcall
out
and
out
jl
mov
ret
jmp
in
popf
xor
and
pusha
std
call
addl
inc
mov
jl
popa
insb
xor
decl
sub
pop
and
mov
inc
inc
cld
lahf
out
mov
mov
add
xor
ret
cmpsl
popf
xchg
lods
int3
imul
or
les
call
jnp
xor
jl
repnz
or
cmpsb
xor
dec
aaa
cmp
inc
ret
jmp
pop
push
mov
prefetcht2
fdivrs
dec
hlt
rolb
sarb
out
popf
add
clc
pop
sub
xchg
fisubl
add
mov
push
push
movsb
cmp
jp
add
inc
mov
sbb
push
pop
ja
das
push
loope
push
decl
jne
inc
stc
xor
xchg
sub
xchg
sbb
xchg
xchg
sbb
loopne
ds
ljmp
mov
nop
xchg
rclb
sbb
mov
mov
fwait
pop
leave
movsb
xchg
movb
incl
mull
shrb
ds
jo
pop
sub
sub
bound
cltd
rcll
call
fidivl
lea
lods
sub
fiadds
or
dec
int3
add
sub
insl
and
mov
jle
gs
push
mov
fisttps
add
call
cld
out
das
jo
mov
jmp
les
add
jg
mov
cltd
inc
clc
adc
bound
cld
arpl
pusha
addr16
lcall
adc
and
cmp
popa
fdivrl
std
jecxz
cmc
out
lods
push
iret
addr16
push
scas
cmpsb
cs
add
mov
loop
dec
and
inc
push
cmp
xchg
cld
mov
ja
xor
cmp
mov
jb
js
js
add
cwtl
ret
ud0
jmp
cmp
fisubs
pop
mov
inc
sbb
rclb
fistl
or
push
push
sbbb
mov
jg
and
sub
enter
or
sahf
decb
lcall
adc
int3
jle
ja
sub
jo
rclb
dec
mov
pushl
loope
fcmovnbe
out
testl
mov
pop
mov
out
test
decl
out
lcall
dec
lds
loope
mov
mov
out
lret
inc
das
aam
out
out
clc
jmp
mov
adc
inc
mov
insb
out
mov
call
push
inc
stos
iret
pop
inc
cmp
mov
push
popa
cmpsb
daa
adc
jle
lcall
hlt
adc
fnstsw
call
dec
sbb
clc
xor
cmp
cld
pop
faddl
jns
scas
sub
xchg
fldcw
sti
daa
add
pop
clc
arpl
out
loope
pop
repnz
ljmp
hlt
adc
les
lret
push
mov
sbb
xchg
inc
aas
fnsave
mov
ljmp
mov
loop
xchg
jg
imulb
neg
xor
adc
xor
adc
out
scas
jmp
push
jnp
xor
outsl
dec
add
sbbl
movsb
mov
call
sbb
xchg
xchg
adc
sbb
stos
inc
lds
mov
and
outsb
stos
lret
mov
cwtl
aaa
push
push
fsubrl
sub
jmp
dec
inc
call
sar
push
cs
loope
test
lods
mov
xchg
mov
dec
fldz
lret
dec
inc
clc
lcall
inc
sub
dec
xchg
sbb
ret
movsl
ret
jg
sbb
das
push
repz
cwtl
jle,pt
lock
ljmp
out
mov
sub
push
ret
push
int
lret
mov
inc
and
sar
ljmp
cmp
xor
inc
jg
xchg
aaa
adc
mov
pop
push
xchg
adc
or
xor
fisttpll
dec
cmc
pushf
jno
jl
or
sbb
leave
cmpsl
lock
cmp
loop
inc
adc
xorl
pop
cmp
pop
movsl
pcmpeqw
popf
push
sub
movsl
dec
adc
pushl
insl
sbb
imul
mov
push
xor
inc
push
pop
outsl
or
cmp
clc
lods
xchg
mov
mov
addr16
mov
fst
mov
nop
jo
dec
sub
mov
mov
lcall
add
fstp
jmp
imul
sub
pop
pushf
sti
mov
mov
mov
xchg
push
cmp
sub
jne
mov
inc
push
mov
xor
ret
dec
mov
jno
cmp
cld
pop
lret
pusha
call
lcall
xchg
jbe
out
add
ss
mov
mov
jmp
incl
movsb
inc
jge
xchg
inc
mov
jnp
lock
and
sbb
push
pushl
shr
pop
cli
leave
aaa
jecxz
jg
cmp
push
cmc
mov
bound
cmp
inc
jnp
jle
data16
dec
cmpsb
mov
xorl
cmc
ljmp
push
mov
movsl
dec
stos
cmp
xchg
mov
pop
mov
cmpsl
jmp
mov
fistps
mov
stc
jae
pop
pop
fists
push
inc
push
xor
mov
sub
add
pushl
jno
xchg
in
jo
shrb
jne
out
jp
xchg
ja
sbb
mov
pop
add
lcall
inc
mov
aaa
test
push
mov
cltd
jp
rolb
bsf
push
inc
inc
jae
push
jnp
loope
jg
push
jns
and
jp
jnp
jae
mov
jne
mov
cli
mov
popa
mov
je
test
pop
rolb
test
mov
add
ret
iret
add
add
inc
out
xchg
or
dec
jnp
xor
jnp
pop
enter
js
hlt
clc
ja
push
sub
sbb
gs
jg
leave
sub
ljmp
dec
test
les
negb
addr16
sub
mov
js
popa
pop
lcall
dec
pop
insl
ret
filds
imul
jle
hlt
inc
nop
mov
insl
and
push
pop
adc
loope
das
das
sti
mov
mov
inc
enter
dec
cmp
mov
mov
call
pop
mov
cmp
lret
mov
cmp
shld
add
into
add
mov
jae
mov
sub
jle
out
lahf
js
mov
xchg
test
adc
int3
lea
dec
push
or
insb
sbb
ja
call
inc
fwait
les
push
sar
fisttpl
lods
ret
fidivrl
push
mov
pushf
cmp
repz
pushl
sbb
or
jae
sbb
test
arpl
adc
mov
aas
mov
imul
pop
mov
insb
cld
pop
xlat
loopne
jge
cmp
push
push
sahf
clc
xchg
frstor
xchg
ret
xor
and
cmpsl
mov
shrb
iret
out
jbe
call
add
leave
lret
xchg
arpl
enter
mov
mov
stos
rorl
jecxz
pop
push
mov
std
incl
cmpsl
cmp
cmp
in
neg
rorb
sbb
icebp
and
fisttps
push
fdivrp
cmp
pop
xor
mov
repz
imull
and
aas
mov
jnp
es
ss
push
sub
cmp
xchg
data16
jl
mov
sahf
mov
cli
cmpsb
shlb
mov
ret
ds
sub
shll
gs
sti
arpl
sub
int3
gs
xchg
nop
mov
mov
fimuls
sarl
push
mov
push
popa
fcmovnb
aas
roll
addr16
pop
adc
call
vandnpd
cli
sub
dec
movsb
jp
inc
int
loop
bound
inc
cmp
mov
jg
pushl
in
fdivl
les
inc
adc
inc
xchg
loop
mov
stos
dec
out
pop
xorl
es
jle
into
mov
sub
xor
inc
mov
stc
int
movsl
inc
jnp
pusha
scas
addb
add
jo
icebp
sbb
icebp
jmp
stos
out
das
ret
cmpsl
add
negl
in
xchg
divl
inc
inc
lcall
or
aad
dec
inc
push
jg
aas
into
aaa
cmc
cltd
rcl
sahf
or
cmp
outsl
mov
ljmp
xor
insb
inc
push
cwtl
mov
ljmp
arpl
xor
add
push
sub
mov
fisttps
mov
adc
jbe
mov
jmp
jno
sbb
jle
or
call
fs
push
pop
xchg
dec
xorb
movb
lcall
hlt
shrl
pop
nop
outsb
or
mov
js,pt
push
inc
ja
clc
lcall
fwait
js
fmulp
and
sub
test
push
jns,pt
fisttpl
cmp
jg
out
lea
pusha
loope
sbb
js
test
or
loopne
xor
pop
call
push
mov
push
inc
pop
clc
rorl
push
jge
or
repnz
dec
cli
fnstenv
dec
and
inc
test
daa
cs
ljmp
out
jne
push
aad
mov
pop
ljmp
xchg
stos
ja
mov
xchg
mov
pusha
mov
loop
sbb
imul
repnz
rcrl
in
xchg
lret
cmp
xchg
inc
fisttpll
aaa
popl
xor
push
rorl
sbb
lcall
cs
dec
inc
dec
leave
daa
jno
xchg
mov
xor
es
shll
jg
sub
aam
pop
aas
or
rcrl
add
and
push
incl
movsb
mov
jae
sbb
jg
testb
sub
lret
scas
mov
mov
lcall
leave
sub
push
sbb
cs
in
ljmp
add
in
mov
push
adc
xchg
inc
adc
mov
dec
ret
jo
push
loop
fsubl
and
ljmp
outsl
cli
dec
jge
mov
xchg
push
pop
scas
push
data16
je
mov
call
jge
xchg
xor
loop
gs
mov
jo
mov
jle
add
cmc
jmp
pushf
xchg
loopne
mov
int3
or
leave
mov
and
outsl
bound
adc
pusha
mov
shlb
push
rorl
push
call
and
daa
xchg
xor
and
inc
loope
jmp
in
xchg
fwait
jno
hlt
sahf
out
mov
test
jle
fwait
call
inc
nop
mov
pop
aas
add
shrb
daa
sbb
es
xor
loop
cmp
cmpl
loope
das
mov
push
jnp
jge
and
cs
pop
lock
xchg
std
mov
sbb
sub
ds
sbb
sub
ja
loop
in
sub
pop
mov
movsb
cmp
push
fisubs
ljmp
mov
add
cld
xchg
mov
mov
jmp
dec
xor
mov
insl
mov
lock
mov
ret
cwtl
std
inc
repnz
fs
jae
stc
lock
jne
jns
inc
mov
xorb
or
enter
dec
lcall
or
cmc
xchg
cld
cltd
adc
das
insb
scas
bnd
out
call
mov
xchg
xor
or
sub
dec
mov
scas
add
and
sub
shlb
ljmp
push
hlt
scas
xchg
xchg
data16
mov
ljmp
jbe
movsl
dec
xchg
xor
inc
mov
movsb
add
pushf
mov
test
jecxz
and
cmp
std
or
inc
pop
and
fbld
jg
sarl
cmp
notl
ja
fdivr
call
xlat
cmp
and
mov
pop
push
gs
inc
jg
and
xor
sahf
add
dec
dec
mov
pop
cpuid
inc
xor
arpl
jl
jle
ds
scas
mov
sub
decb
jecxz
add
lock
jle
jmp
out
xchg
xor
mov
or
cmpsb
cmp
call
mov
mov
mov
fbld
out
push
ret
enter
sarl
int
mov
ja
mov
gs
iret
negl
icebp
pop
push
popa
ja
lcall
out
and
dec
cltd
and
and
clc
stc
fsub
scas
arpl
inc
adc
js
loop
outsl
das
mov
dec
cmp
lahf
sahf
decb
mov
decl
cmp
mov
or
jbe
iret
mov
cmpsl
int3
sbb
xor
int
jae
adc
int3
ljmp
add
adc
cmp
lea
pop
mov
add
clc
popa
sti
xchg
movsb
mov
mov
fidivrs
cmp
xor
int
xchg
lcall
pop
outsl
and
mov
pop
insb
inc
or
sub
rorb
lcall
mov
dec
sahf
aam
bound
jns
push
imul
shl
mov
call
clc
cmp
das
sarb
pop
mov
sbb
xor
pop
loopne
mov
dec
and
popf
jecxz
xchg
or
jne
jg
mov
inc
addr16
gs
decl
xor
adc
mov
push
adc
xor
mov
mov
push
pop
and
pop
xchg
push
cltd
loop
sbb
push
out
cmp
jb
jge
xor
call
test
fdivs
jge
es
jmp
cmp
adc
mov
test
ljmp
adc
popf
shl
cmp
jl
lahf
in
clc
shll
lods
stos
mov
mov
jno
scas
test
inc
pop
jb
jl
mov
scas
mov
xlat
bound
aaa
enter
repnz
push
ja
fildll
out
add
push
add
push
cmp
decl
testb
clc
xor
test
xchg
hlt
inc
jp
shll
es
dec
pop
popf
stos
lea
lods
std
leave
jnp
divl
jno
mov
data16
enter
sbb
ss
jae
and
mov
sbb
adc
cmc
mov
imul
int3
shrb
ljmp
push
jno
inc
jmp
hlt
ficompl
inc
sahf
jnp
xor
adc
std
scas
dec
lret
shlb
iret
pop
and
leave
jbe
fs
lcall
inc
and
gs
cmp
add
es
dec
xor
negb
add
mov
xor
dec
int
sbb
add
jg
addr16
repz
sahf
aad
pop
and
dec
pop
mov
notl
jmp
es
sub
jg
stc
mov
rol
sub
cmp
mov
lret
movsl
dec
push
mov
std
incl
cmc
das
iret
dec
xchg
lret
std
es
stos
sahf
pop
out
mov
inc
pop
movsl
aas
lret
call
add
int3
or
into
inc
or
std
push
int3
adc
sub
jmp
inc
adc
mov
xlat
adc
jo
and
in
imul
fldl
test
or
data16
push
js
or
lcall
jmp
pop
lcall
add
les
xor
push
int3
push
lret
cmp
cli
cli
pop
test
int3
mov
cmp
add
push
xchg
fdivrs
lret
daa
ljmp
sbb
xor
inc
cmc
and
pop
clc
jno
inc
sub
cs
clc
mov
testl
addr16
inc
fs
lcall
mov
lret
push
xchg
xor
xor
mov
sub
mov
into
ret
and
into
mov
mov
sub
loope
out
call
call
and
xchg
lea
xchg
lds
sbb
mov
hlt
mov
adcl
mov
enter
js
cltd
insb
loop
jns
cmpsl
add
or
out
lret
push
loope
inc
cmc
out
inc
sbb
cli
hlt
test
push
add
pop
subb
pop
adc
push
shll
mov
sub
test
mov
bound
ret
subl
dec
dec
push
cmp
out
mov
lret
add
mov
clc
mov
push
test
aam
push
or
incl
incb
mov
or
or
lret
js
xchg
add
test
xchg
and
push
adc
add
jg
xchg
les
add
gs
push
and
imul
and
sbb
xchg
and
and
dec
push
cltd
sbb
popa
jo
imul
push
dec
and
xor
hlt
and
imul
popa
sub
roll
je
inc
pop
je
gs
jo,pn
fidivl
inc
push
push
xor
push
arpl
aad
cwtl
and
mov
push
mov
xchg
pop
sub
xchg
sbb
nop
xchg
shrb
mov
mov
repz
sbb
mov
xor
push
dec
adc
cmp
push
push
inc
jb
jnp
loop
and
fcmovu
in
dec
fs
xchg
add
and
cmovae
adc
pop
imul
lahf
addl
adc
and
imul
pop
and
rorl
test
aaa
cmp
je
xchg
fwait
inc
inc
add
aam
add
mov
pop
mov
mov
add
cmpsl
add
adc
mov
xor
and
dec
arpl
add
and
out
stos
and
dec
mov
scas
adc
mov
add
dec
out
and
pop
and
imul
adcb
add
inc
sti
mov
lds
outsb
pushf
gs
push
sub
ret
and
subb
and
sub
inc
arpl
and
pop
add
or
add
test
adc
and
jg
popf
add
xlat
add
popf
dec
push
dec
je
jo
add
pop
push
in
push
jb
and
clc
mov
outsl
outsb
imul
mov
push
jae
dec
imul
and
loopne
daa
jne
or
pusha
test
sbb
in
mov
pop
call
jns
inc
test
xchg
leave
adc
cmovb
adc
adc
lcall
mov
add
and
and
or
push
icebp
test
sbb
fldt
adc
xlat
xchg
or
mov
rorb
andl
bound
add
mov
call
mov
aas
sbb
xor
pop
adc
add
mov
cmc
inc
xor
dec
adc
adc
push
sub
aas
xchg
push
inc
mov
xchg
mov
sub
inc
mov
jg
xor
ljmp
addb
adc
xchg
inc
or
push
inc
mov
sbb
sub
xor
and
add
adc
scas
adc
add
push
ljmp
xor
add
dec
add
sbb
daa
incb
or
inc
inc
pop
add
and
sbb
push
add
lea
pusha
cmp
outsb
xor
adcb
jnp
jl
je,pn
js
shlb
mov
add
imul
xor
xor
nop
xor
mov
lret
pop
in
jle
shrb
addb
scas
jbe
loopne
add
dec
jb
inc
sbb
push
xor
or
xchg
or
push
lock
out
aad
call
jae
dec
outsl
mov
push
scas
sbb
dec
aaa
dec
xchg
test
or
xchg
and
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
push
add
add
add
addb
add
add
add
add
add
add
add
add
add
dec
add
addb
add
jo
add
cwtl
add
addb
add
rolb
addb
add
add
add
add
add
add
add
add
add
pusha
add
add
and
add
add
add
add
add
add
add
add
mov
add
or
aas
add
add
add
add
add
add
add
add
mov
add
and
aas
add
add
add
add
add
add
add
add
fadds
add
inc
and
add
add
add
add
add
call
int3
cmp
xchg
ljmp
out
std
jg
in
inc
inc
add
cmp
xchg
ljmp
out
std
jg
in
inc
inc
sbb
cmp
xchg
ljmp
out
std
jg
in
inc
inc
xor
in
mov
xor
add
and
out
push
dec
xor
sub
jmp
inc
inc
add
mov
add
pop
push
pop
xchg
mov
rcrl
and
mov
sbb
popf
lods
das
cmp
dec
out
sub
pop
xchg
adcl
lret
loop
jge
jns
dec
mov
adc
pop
mov
add
loopne
das
cmp
loopne
or
sub
mov
inc
inc
or
xchg
pop
mov
outsb
sbb
xchg
lock
in
or
dec
scas
mov
sub
frstor
pop
mov
pop
and
push
insb
div
jge
fmull
ljmp
lahf
rcr
out
ss
frstor
sbb
scas
push
into
cmc
jge
mov
adc
or
arpl
sub
lods
jecxz
into
sub
push
mov
push
sarb
xor
xchg
inc
and
ret
loop
dec
cld
jb
jge
cld
push
mov
bound
aaa
sarl
mov
movsb
pop
gs
push
push
dec
push
xchg
aaa
test
xor
push
pop
pop
pusha
and
lret
lea
stc
out
fcmovu
loopne
pop
out
xchg
aas
in
push
stos
push
jnp
xor
adc
or
mov
fcmovb
mov
lock
add
int3
popf
push
inc
cmp
int
fwait
dec
add
dec
movsl
jo
or
lret
into
cmpsb
sbb
fidivrl
mov
cmp
jge
pop
jl
sbb
jno
and
and
les
jb
testb
daa
pop
sub
inc
out
subl
jg
xchg
sbb
data16
pusha
and
inc
sub
and
xlat
test
jbe
sub
inc
cli
faddp
sub
cwtl
add
xchg
movsb
out
out
push
mov
mov
js
jp
pop
leave
push
jb
jae
xchg
adc
mov
jns
mov
sbb
jge
repz
aam
adc
mov
pop
enter
into
rol
arpl
test
jl
sti
ja
xor
pop
inc
dec
adc
push
insb
test
jmp
inc
shlb
jge
xor
stc
outsl
mov
sub
shll
aam
dec
sahf
jg
aad
lock
add
mov
dec
stc
stos
hlt
mov
lret
mov
daa
and
push
lahf
push
pop
xchg
cmpsb
cmp
add
imull
cmp
inc
push
outsb
xchg
push
sbb
xchg
adc
addr16
hlt
inc
xchg
dec
jle
inc
cmp
mov
lea
lret
mov
les
test
rolb
ss
dec
mov
mulb
or
pop
or
jae
mov
cld
mov
sub
cmpsl
adc
cmp
enter
jbe
mov
icebp
xor
int3
gs
aam
xchg
fcompl
in
nop
scas
xor
inc
fidivrs
das
scas
xor
sti
fwait
pop
call
xor
adc
sarl
and
into
scas
stos
andb
les
gs
xlat
lods
mov
nop
push
cltd
dec
fidivl
cs
int3
popf
popl
inc
repnz
in
popf
push
mov
gs
lds
sub
adc
fwait
push
shr
mov
stos
push
icebp
mov
sbbb
rclb
adc
mov
push
fsubrl
fsubs
xlat
aas
int3
sbb
aaa
leave
jp
test
sbb
ljmp
xchg
ja
pcmpeqb
jmp
call
fildll
and
jl
sbb
cli
les
jne
stos
hlt
loope
jnp
jbe
jo
sub
mov
push
jbe
orb
popf
repnz
xor
inc
push
pushf
loope
jp
add
xor
leave
sub
ret
jnp
cld
fstl
imul
in
fs
mov
pop
xlat
cmp
xchg
dec
and
cld
mov
fiadds
inc
pop
daa
mov
imul
clc
dec
lds
js
dec
icebp
push
jmp
dec
idivb
cmp
jmp
fwait
and
cmpsl
or
sub
dec
out
scas
xor
jns
aad
cmc
loope
lret
xor
scas
scas
ficompl
cmpsb
movsl
adc
adc
inc
sub
imul
and
in
mov
je
xor
ffree
cld
das
call
mov
popa
pop
addr16
hlt
lret
cld
testb
or
inc
add
cli
cmc
pop
xchg
sti
insl
fisubrs
mov
inc
sbb
aaa
push
mov
rolb
push
sarl
push
shlb
add
add
int
aas
add
add
add
es
add
add
add
es
add
es
add
es
add
daa
aas
add
daa
aas
add
daa
aas
add
add
add
aas
add
add
add
daa
aas
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
gs
xor
ja
outsb
push
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
gs
imul
imul
jb
arpl
jb
