push
pop
jp
push
dec
xchg
lods
add
dec
pushf
xchg
test
inc
and
dec
inc
jp
lea
jmp
testb
orb
or
es
decb
sub
repnz
cmp
into
lahf
outsb
or
and
mov
add
sbb
rorl
incl
adc
imul
jge
cmp
andb
cmp
incl
mov
add
push
pop
pop
jnp
add
mov
std
bswap
cmp
incl
mov
inc
push
ljmp
jp
fcmovnb
jecxz
mov
jmp
jae
pushf
adc
fnstcw
in
sti
inc
inc
mov
mov
cmp
push
icebp
jno
outsl
loopne
sahf
push
pop
divl
sub
lea
aas
and
es
stos
push
inc
mov
subl
sbb
popa
in
fadds
push
sbbl
test
cmp
outsb
js
cmc
in
test
jns
mov
lods
adc
dec
mov
nop
scas
cld
daa
sub
add
cmp
cmpsl
lock
cmpsb
rcl
jo
adc
or
out
mov
mov
popf
hlt
jne
xor
sub
jmp
ss
or
mov
mov
shrb
sahf
aad
addr16
cmpsb
push
xor
lcall
jbe
ss
dec
jp
shl
enter
lahf
cmpsl
das
test
shlb
mov
cs
lcall
jbe
adcl
adc
dec
dec
sub
cmpsb
lcall
cld
cmpsb
gs
cld
fcoml
jmp
xor
dec
daa
ljmp
mov
or
dec
dec
inc
sti
push
sbb
ljmp
sub
mov
jmp
lods
and
popf
adc
ss
cmp
sub
movsl
test
mov
imul
decl
cmp
test
mov
jne
push
jg
loop
mov
jecxz
sbb
mov
out
add
pop
lods
xchg
push
clc
cwtl
insl
lea
ds
les
testb
adc
mov
pop
incl
push
push
dec
jae
ljmp
dec
jno
cwtl
in
shlb
ss
call
test
es
imul
and
imul
cmp
dec
or
jge
mov
push
lret
addr16
inc
adc
mov
push
fs
scas
aas
mov
and
jno
aas
push
cld
mov
pushl
mov
jnp
push
xor
mov
fadds
call
mov
push
pop
les
divb
jge
push
push
cmp
push
jg
xor
flds
cmp
idivl
inc
shrl
dec
inc
test
pop
jbe
xor
xor
clc
fninit
mov
inc
sub
rcrl
shlb
ret
pop
cld
in
jmp
push
iret
cld
scas
clc
ljmp
and
test
shrl
jae
adc
sbb
jmp
divb
sahf
ret
dec
dec
mov
xor
clc
stos
aad
sbb
push
ljmp
cli
decl
or
repnz
push
inc
adc
mov
mov
fsubrl
sub
lcall
popa
mov
push
stc
or
xor
adc
mov
sub
call
subb
leave
leave
bound
test
cs
ret
mov
outsl
cli
insb
sbb
and
ror
lahf
dec
cmpsl
cmp
leave
mov
mov
adc
jg
aad
test
cmp
sbb
pop
stos
rolb
out
int3
mov
jmp
push
jecxz
inc
jle
idiv
pop
pop
stos
repz
push
mov
mov
ljmp
ljmp
out
pusha
inc
and
mov
dec
and
jl
aam
and
pushl
lock
popa
or
andl
pop
lods
cwtl
mov
hlt
std
mov
in
ret
xchg
push
ljmp
mov
or
insl
in
xor
fidivl
jnp
mov
jb
and
dec
icebp
ljmp
xchg
pop
mov
push
in
adc
insb
call
push
mov
add
inc
cwtl
fcoms
adc
pusha
mov
arpl
xor
jg
mov
lret
push
dec
pop
mov
loop
iret
inc
xchg
xor
outsl
fwait
ret
sub
rcr
sbb
call
mov
rclb
aas
jbe
insl
jmp
rolb
mov
push
ljmp
int
mov
mov
xchg
imull
jmp
insb
scas
outsl
sbb
lods
mov
inc
push
cmpb
xchg
sub
psubd
dec
ds
ret
cli
push
out
rol
xchg
lock
xor
dec
int
mov
mov
inc
fs
incl
repz
rcrb
sub
lods
clc
call
cmp
repz
loope
cli
mov
in
ret
jg
movsb
pop
ss
or
xlat
and
jmp
out
lahf
jne
mov
inc
cmp
notb
or
stos
mov
cwtl
lods
iret
jno
mov
cmp
fisubs
stc
mov
mov
aam
ja
icebp
test
arpl
pop
lock
loop
shlb
pop
and
ljmp
pop
popf
arpl
roll
scas
movsb
ret
ljmp
jg
xor
pop
adc
jno
sbb
jge
xor
xchg
test
incl
push
add
xchg
ret
xchg
xchg
add
jmp
pop
mov
decb
xchg
jecxz
mov
mov
xchg
enter
mov
lock
mov
ljmp
mov
push
sub
test
mov
leave
jbe
cmp
sti
pop
in
cmc
jg
pop
testb
shl
fidivrl
ljmp
cmp
call
jnp
mov
hlt
sbb
pop
sub
insb
xchg
cmpsb
push
pop
cmp
and
or
jmp
jecxz
sti
iret
es
xchg
mov
inc
or
into
xchg
cwtl
inc
or
pop
sub
add
mov
mov
and
xchg
xlat
subb
loope
push
call
pusha
xchg
mov
pushl
cld
cmp
lods
adc
cmp
xchg
int3
pop
mov
fnstsw
xor
pop
xor
push
cmp
sti
jecxz
iret
jae
out
pop
xchg
jbe
fsubl
ds
ljmp
cltd
and
es
pop
int3
enter
sub
cltd
mov
nop
mov
lcall
ljmp
jle
inc
mov
and
bound
mov
pop
popf
adc
jmp
fcomps
hlt
cmp
xchg
test
mov
pop
popa
xor
push
mov
mov
clc
mov
decl
inc
das
int
out
maskmovq
idivl
push
aam
mov
cmp
jl
inc
cld
insl
pop
icebp
scas
cli
sbb
hlt
adc
je
rorl
lods
or
fidivs
fists
sti
imul
fcomp
sti
aaa
cmp
jge
lea
sub
shlb
xchg
lea
push
fwait
arpl
lahf
cmc
adc
mov
leave
insb
mov
scas
popf
pop
cwtl
testl
les
es
pushf
mov
xor
pop
pop
aas
mov
ja
pop
jg
jp
mov
test
stos
frstor
sbb
in
aad
cld
cmp
sar
lods
fidivrl
rcrl
xchg
add
decl
mov
adc
push
int3
or
jl
fildll
sbb
push
popf
dec
add
ss
subb
bound
lcall
mov
fbstp
jp
clc
aam
fxch
aas
cli
add
or
xorb
jecxz
ja
incl
nop
push
cwtl
nop
cmp
mov
and
pop
sbb
leave
pushf
adc
and
ljmp
xchg
pop
dec
inc
call
dec
out
mov
cmpsb
roll
xor
cli
gs
mov
xchg
push
int
inc
les
leave
mov
adc
incl
rclb
mov
int3
mov
test
and
js
pop
sub
in
push
js
aad
jmp
push
mov
or
jb
mov
xor
out
adc
add
lcall
sahf
mov
pushf
popf
cmp
sub
cli
cmpsb
std
ror
pushl
outsb
dec
pop
cwtl
mov
out
jb
dec
xor
iret
sub
sub
mov
sti
sbb
mov
loop
push
dec
dec
cmpsb
mov
psrlq
push
adc
lret
mov
sti
cmpsb
rcll
ss
adc
cmpsb
fwait
aam
js
fwait
addr16
add
std
test
add
test
and
pop
dec
sub
adcl
in
xchg
in
push
push
cmpsl
adc
sub
lcall
xor
lods
stos
dec
add
aaa
adc
adc
mov
in
cmp
incl
lods
mov
sub
push
jbe
sarb
lret
mov
dec
movsb
sbb
push
mov
mov
jbe
lock
leavew
scas
lret
cli
call
aad
repz
decl
pop
aaa
sbb
push
jg
inc
cmp
mov
or
dec
mov
add
inc
call
les
cmp
sbb
leave
dec
lds
pop
push
fs
pop
pop
sbb
xchg
jmp
aas
xor
daa
mov
adc
cs
fldenv
lret
ret
inc
orl
lcall
dec
aas
sbb
push
icebp
xor
jns
popf
add
mov
je
cmp
push
pushf
adc
rclb
adc
outsl
xchg
sub
call
xchg
insb
sahf
fwait
int
sar
jg
lcall
shl
bound
add
lcall
imul
cmpsl
inc
cmp
jmp
addr16
dec
hlt
in
adc
jg
inc
call
xchg
sub
test
pop
pop
sub
mov
dec
inc
fldl2e
inc
fbld
inc
movsl
fcompl
lcall
jl
sbb
lret
adc
adc
cmp
fsubrl
loop
decl
in
push
clc
xor
insl
mov
pop
mov
mov
lcall
xor
mov
jp
fnstenv
shr
xchg
mov
xchg
mov
lds
adc
clc
ljmp
lret
nop
dec
ds
mov
sbb
pop
mov
sti
mov
xchg
incl
xchg
jne
push
popf
inc
sbb
repz
imul
cmp
xchg
cmp
pushl
mov
jp,pt
inc
mov
cmp
js
pop
xchg
adc
dec
xor
fidivrs
cli
lcall
cmp
nop
jne
sub
insl
or
mov
test
outsb
adc
lock
std
pushl
repnz
iret
enter
mov
loope
dec
mov
in
das
dec
cmp
repz
push
rcll
mov
fisttpll
cs
inc
pop
subl
sti
add
xchg
imul
cld
mov
push
jp
jns
insl
dec
xchg
mov
cmp
mov
sbb
jae
fucomp
xchg
cmc
mov
jle
jge
push
ret
xchg
aad
dec
dec
add
inc
cmp
jle
xor
call
test
add
shlb
jbe
sbb
popa
hlt
jp
mov
sbb
je
incl
mov
xchg
pop
sbb
mov
test
bound
out
adc
xor
loope
call
lods
jnp
and
mov
and
jmp
cld
xor
push
jmp
cmp
idivb
inc
cld
inc
shlb
rcrl
mov
into
add
inc
call
fs
data16
es
mov
jp
notl
cmpsb
push
or
ds
xor
sarb
adc
lcall
cwtl
dec
inc
jno
je
dec
cmpsl
in
inc
adc
jl
fisttpl
cmp
lcall
fwait
movsl
add
mov
fwait
add
out
in
mov
rorl
xchg
lahf
leave
mov
cmpsb
cmpsl
inc
xor
dec
cmc
bound
cltd
and
push
out
push
push
ss
push
test
cmp
movsl
or
lcall
in
and
mov
push
sub
jne
lret
arpl
ja
push
fs
pop
push
aas
pop
repnz
sbb
pop
push
mov
cmp
or
in
push
xor
push
jne
sub
lcall
fsts
jno
loop
fldl
xor
or
mov
jae
jbe
xor
stos
imul
sahf
popf
jb
dec
push
out
mov
adc
pop
jo
adc
xchg
loope
in
inc
clc
decl
jae
repz
dec
adc
fcompl
xchg
jp
or
clc
scas
sub
adc
adc
mov
cmp
scas
mov
pop
decl
dec
inc
and
into
bound
mov
dec
push
std
stos
out
sbb
push
mov
repnz
lcall
test
pop
pop
out
pop
cmc
lret
sar
cltd
pop
lods
xor
mov
lret
jmp
cld
mov
cltd
adc
mov
dec
fcmovu
xor
rol
jnp
outsl
clc
decl
ret
push
dec
shrb
insb
sti
jns
sbb
in
mov
jb
pushf
test
pop
pop
cld
outsb
xor
mov
enter
out
sahf
xor
xchg
lret
push
repnz
xchg
out
in
fsubrp
ret
pushl
jge
dec
or
jg
mov
jae
add
jg
cli
testb
mov
jmp
pop
cmp
inc
outsl
rcrl
test
xchg
enter
ljmp
shrl
testb
jae
stos
sub
call
pop
clc
push
xchg
pop
cmp
int
mov
cltd
push
pop
xchg
push
or
mov
push
add
mov
mov
fisttpl
sub
lods
mov
jnp
push
add
and
cmc
das
sar
or
pop
push
mov
cltd
in
adc
test
jp
hlt
cmp
aad
adc
or
xor
in
cwtl
cmp
and
jg
in
xlat
xchg
xchg
inc
push
sbb
les
sbb
lahf
dec
pop
loop
xor
jns
call
std
dec
jl
clc
dec
sti
or
or
pop
mov
push
fisttpl
jmp
and
into
inc
loopne
outsl
test
dec
pop
xor
outsb
dec
mov
and
or
call
cmpsl
inc
dec
pop
mov
lahf
aas
dec
xchg
std
cs
xchg
aam
popf
es
ljmp
sar
jge
loope
popa
pop
push
mov
gs
and
out
jge
std
pop
stc
repz
push
int
negb
cmp
mov
xchg
push
dec
sbb
lcall
or
hlt
pop
mov
je
mov
cmp
sahf
rcrb
std
lcall
test
pop
fldenv
movsb
lds
lds
push
cltd
jns
fs
fimuls
call
mov
xor
jg
mov
adc
cmc
out
rcrl
pop
les
inc
fs
mov
adc
les
mov
incl
pop
pop
std
push
jle
in
xlat
fwait
mov
adc
aad
cmp
sahf
loop
hlt
ljmp
aam
jecxz
xchg
inc
js
movsb
out
pop
cmc
movsb
cmp
mov
or
cmp
add
shl
icebp
mulb
sbb
push
inc
rolb
push
stc
jg
cld
pop
or
in
sub
rclb
loopne
inc
dec
call
adc
add
xor
pushw
outsl
mov
icebp
or
hlt
aaa
sarb
call
adc
and
sub
xor
popa
leave
jbe
mov
cmp
inc
dec
mov
clc
pushl
mov
repz
mov
ljmp
sbb
pop
bound
cli
pop
test
lcall
push
dec
and
rorb
cmp
fstpt
jp
sub
lret
jmp
xor
xor
outsb
xor
cmc
push
rclb
jne
mov
pop
fwait
decl
pushf
subl
fs
or
sub
fcomip
call
mov
xchg
and
sti
jg
xlat
addr16
jbe
ja
sbb
jae
mov
shl
or
or
cmp
in
push
pop
out
mov
mov
and
addr16
cltd
repnz
shlb
xchg
bound
bound
mov
out
mov
mov
pop
sub
or
sahf
das
xchg
jnp
jle
xor
push
push
cwtl
xchg
inc
adc
call
lock
jecxz
dec
sbb
pop
cmpsl
scas
bound
scas
xchg
or
and
add
imull
or
mov
mov
or
call
push
mov
test
cmpsb
cmp
sub
mov
int
addr16
cltd
decl
pop
out
scas
mov
or
aaa
in
cmp
loop
cmp
mov
arpl
cli
repnz
outsb
jmp
cltd
xchg
hlt
dec
and
in
push
mov
bnd
addr16
std
outsl
sarb
xchg
jae
cld
pop
insb
and
rcll
lcall
das
push
and
pushl
roll
rcll
jmp
sub
pop
mov
stos
or
sti
ds
sbb
xchg
test
jb
inc
push
ja
call
mov
loopne
sti
and
mov
sub
jb
mulb
movsl
cmp
dec
pop
adc
cmp
rcl
ljmp
push
fstps
push
es
sbb
or
xlat
popf
fwait
mov
dec
jno
push
push
repz
into
adc
loopne
call
scas
pop
pop
repz
pop
push
cmpsl
incl
and
shll
scas
jne
jno
ror
cmp
andl
lret
imul
push
xor
decl
pop
push
and
mov
repnz
or
mov
mov
and
jmp
stos
cltd
cmpl
mov
fldt
adc
jnp
cs
sub
call
repz
mov
jecxz
pushf
sbb
out
test
push
add
pop
in
lcall
jmp
jmp
out
jnp
je
stc
repz
adc
jg,pn
insl
sti
cwtl
sub
and
arpl
movsb
xchg
lahf
mov
popa
por
insl
pop
jp
fiadds
push
sub
sub
cmp
inc
and
idivl
aam
or
pop
mov
xlat
inc
sub
cwtl
adc
mov
cmp
pushl
in
adc
inc
jmp
test
jl
push
mov
xor
xor
inc
pushl
nop
dec
xchg
cmp
out
mov
cmpb
es
sub
pop
pop
or
xchg
lcall
cmpsb
dec
sti
push
stos
sub
outsl
cmp
enter
out
push
out
xor
shlb
pushl
in
push
pop
aad
and
mov
outsb
stc
sbb
dec
insl
cli
xor
outsb
subb
fcompl
call
xchg
mov
push
cwtl
pop
pop
add
mov
mul
push
sbb
pusha
push
cwtl
bound
fcomip
dec
fisubrl
loopne
jb
nop
out
and
aad
jb
push
insl
adc
or
push
add
push
pusha
pop
mov
push
mov
fcomps
or
shlb
int
testb
out
fstl
and
push
jnp
call
lock
adc
mov
fxch
xchg
lock
lcall
add
addb
addr16
xor
xchg
cmp
cmc
fldl
das
enter
out
adcl
lcall
mov
cs
mov
pushl
adc
movsb
clc
sub
aaa
cli
out
pop
div
or
insl
push
cmp
xor
jg
pminsw
imul
shlb
pop
sub
out
icebp
push
push
sub
aad
fcom
inc
inc
cmp
call
pop
fwait
rcl
fcomip
scas
cmp
in
repnz
dec
adc
xchg
pushl
jb
js
jo
fwait
imul
mov
ret
or
sbb
xchg
insb
pop
xchg
jg
lods
in
jns
pop
std
incl
jno
lock
or
add
cld
bt
fldlg2
imul
pop
bnd
std
pop
dec
push
ffreep
sbb
rcpps
stc
and
and
arpl
stc
test
stos
pop
adc
mov
xor
out
testl
mov
mov
sub
sti
add
add
xor
pop
jmp
fwait
sub
imul
test
lea
add
mov
jns
int
adc
cmovae
aam
fnstenv
ljmp
fistpl
add
pop
inc
fnstsw
sub
out
mov
mov
in
daa
and
into
adc
fistpll
test
je
jo
sub
imul
das
fstpl
sub
jge
adc
cmc
or
sarl
add
es
gs
adc
or
push
pop
adc
add
push
push
inc
dec
sbb
dec
or
add
stos
sbb
mov
adc
xor
cmp
popa
gs
push
push
in
sub
inc
icebp
mov
xchg
test
xor
or
loopne
dec
fmull
lds
adcb
test
rol
sbb
adc
sub
nop
daa
imul
mov
push
rolb
into
mov
leave
sbb
pop
outsl
xor
aas
sbb
jmp
and
ret
insl
loop
int
pop
add
dec
inc
cmpsb
lret
ret
dec
enter
jp
jmp
push
ljmp
incl
cli
out
repnz
adc
add
and
shll
mov
outsl
movsb
jp
fdivrs
repz
je
sbb
push
sub
or
or
jle
cltd
fistps
sbb
jge
jmp
mov
jbe
hlt
and
inc
adc
subb
repnz
xor
pop
ja
add
fisttps
bound
iret
out
or
xor
jo
or
les
enter
outsb
pop
jae
ljmp
adc
sub
or
test
out
dec
jno,pn
lcall
in
pusha
ror
xchg
test
ds
nop
out
mov
sbb
out
push
lahf
fwait
mov
jg
jmp
stos
test
inc
sti
and
repz
out
mov
dec
dec
cltd
xor
cmpsb
sub
mov
adc
sbb
in
lods
jne
lcall
cmp
call
push
outsb
incb
hlt
idivl
mov
ja
and
aad
loope
orb
in
std
pop
loopne
push
mov
jae
dec
movsl
je
aam
mov
popa
bound
je
jg
ds
push
cmpsb
scas
scas
dec
push
fs
jl
mov
mov
decl
or
dec
scas
call
push
dec
pop
ret
pop
fsubp
mov
jmp
sbb
fisttpl
sbb
inc
xor
lret
ss
push
negl
incl
pop
dec
or
fcoml
sti
cmpsb
mov
iret
fsubl
add
xchg
xchg
dec
rol
push
pop
notb
jnp
and
adc
outsb
jbe
xor
pop
mov
pop
rolb
fildll
mov
in
sbbb
add
movsb
loop
push
jae
sahf
mov
inc
xchg
and
fbstp
call
push
test
jbe
out
sbb
mov
push
lock
inc
push
dec
dec
popf
arpl
jno
inc
repz
ljmp
sahf
cmp
shrb
add
mov
or
cmc
or
push
aad
push
out
mov
push
je
decl
push
jb
xchg
aaa
es
xchg
pop
lds
push
xor
jmp
mov
stos
int3
and
pop
rcll
movsl
jecxz
inc
or
jg
pop
mov
mov
mov
testl
test
sar
mov
jae
push
daa
jecxz
pop
pop
enter
ja
incl
ss
sub
mov
fimull
fs
and
xlat
mov
std
mov
loop
dec
add
clc
jl
call
cmpsb
sahf
sub
call
push
inc
enter
xchg
adc
push
fstps
outsb
jb
inc
ficoms
cmp
mov
mov
cli
jle
imul
jbe
mov
inc
insl
jbe
ljmp
cli
ja
jmp
xchg
insb
xchg
lcall
ret
mov
insb
dec
sub
add
out
call
sub
loop
aas
dec
into
jo
jl
mov
jns
push
nop
fwait
sahf
shll
jmp
dec
ret
daa
subl
xchg
xor
in
fldt
inc
adc
cmp
push
scas
lcall
sti
xor
fcompl
into
inc
scas
cwtl
pop
rcl
gs
lahf
nop
jbe
aad
adc
bound
incl
sbb
push
aaa
lods
test
js,pn
out
push
push
subl
insb
xor
aas
pop
xchg
xor
mov
test
sarl
sub
jne
mov
or
mov
decl
jns
sbb
out
sahf
movsl
mov
sbbb
cld
xor
mov
mov
hlt
cmp
leave
daa
xchg
xlat
and
lahf
lret
adc
xchg
iret
inc
push
sub
je
and
xor
outsl
cmp
std
aas
je
mov
insb
stos
repnz
fnstcw
insb
mov
add
pop
rcll
incl
xrelease
outsb
repnz
lock
repz
jg
leave
sub
add
and
jns
add
jp
add
dec
mov
dec
pop
sbb
xchg
add
les
xor
jmp
mov
das
mov
cwtl
shll
in
pop
addr16
cmp
or
ret
and
sti
adc
in
std
and
mov
adc
jae
pop
pop
std
pushl
das
mov
popa
cmpsl
xchg
add
shll
mov
clc
cmpsb
xlat
mov
dec
je
mov
mov
adc
mov
cmp
ja
xchg
cmpsl
stc
ud2
lods
lock
jmp
dec
sub
dec
fnsave
mov
sbb
repnz
pop
pop
ja
das
mov
cli
adc
dec
mov
in
jp
insl
sub
add
fldl
jo
out
in
cmpsl
mov
cmp
ret
sub
mov
out
lcall
je
add
ljmp
lods
rorl
or
cmp
cmp
push
pop
jae
ja
xor
jecxz
call
ficompl
cwtl
push
mov
pop
or
pop
test
inc
cld
fmull
inc
xchg
jl
and
mov
aas
mov
inc
mov
pop
xchg
cs
cmc
lods
out
repz
mov
aad
or
sub
jmp
dec
out
push
dec
movsl
cmp
mov
mov
jo
add
pushl
lcallw
inc
in
xor
push
addl
inc
push
mov
jmp
movb
xchg
pop
and
inc
lods
mov
and
les
push
lret
mov
enter
std
hlt
push
hlt
sahf
negb
cmp
pop
mov
or
andb
incl
mov
sar
xchg
push
adc
test
rorb
movsb
cwtl
push
lret
pop
mov
jmp
ret
out
sub
cld
xchg
jecxz
lods
and
addr16
dec
idivb
mov
push
xchg
ljmp
call
icebp
std
or
shll
push
push
or
push
call
iret
jmp
inc
scas
inc
lcall
mov
xlat
pushf
mov
pop
leave
ret
jecxz
pop
movsl
xchg
mov
imul
inc
dec
xchg
adc
mov
daa
cmp
std
jge
insl
decb
inc
sar
in
adc
mov
sub
shlb
and
sub
loope
cmp
jmp
stos
sbb
in
mov
mov
call
sti
add
mov
jecxz
adc
xlat
jge
push
cld
addr16
add
push
clc
iret
neg
scas
icebp
pcmpeqb
test
sub
sub
aaa
add
inc
fstps
sub
sbb
pop
cmp
xor
jge
xchg
sbb
pop
cmp
inc
fwait
lea
cltd
push
inc
sub
sarb
das
cmp
dec
add
and
sub
pop
sbb
inc
adc
lods
shll
or
xor
xchg
pop
inc
out
sub
sbb
and
xlat
jno
mov
pop
ret
insl
cmpl
gs
insl
and
sbb
xor
mov
or
mov
nop
and
sub
add
or
aaa
in
pop
sub
sub
mov
push
or
push
ds
mov
lret
mov
mov
popa
or
mov
jg
jmp
sbb
adc
outsb
movsb
dec
push
push
icebp
push
sub
cwtl
push
es
add
imul
push
test
cmp
bound
adc
mov
mov
xchg
xchg
dec
push
jbe
shrl
scas
inc
xor
stos
pop
fisubl
inc
mov
adc
imull
in
and
mov
aaa
aad
popa
in
xlat
scas
imul
sbb
dec
scas
and
jg
adc
adc
mov
mov
addr16
pop
mov
fisubrl
pop
aad
mov
xchg
ret
or
add
adc
lods
and
fildl
or
jns
lods
and
pop
cmpsb
sub
cmp
inc
adc
mov
sbb
rorb
flds
mov
ret
fldl2e
mov
mov
aas
in
cmc
arpl
xlat
js
icebp
insb
cmc
rolb
dec
fldcw
mov
aam
sahf
jmp
outsl
adc
push
cmp
fwait
or
cltd
sbb
and
mov
mov
inc
into
mov
push
lcall
daa
popa
repz
xor
mov
daa
pop
dec
cmp
enter
cmp
movsb
cmp
jae
pop
call
pop
xchg
cltd
adc
jne
add
push
xchg
bound
inc
mov
lret
jmp
adc
ljmp
icebp
and
dec
pop
ljmp
inc
mov
out
jecxz
push
pusha
mov
inc
ss
imul
add
push
fwait
push
mov
sbb
mov
incl
insb
std
and
idivl
sbb
fisubrs
xor
jge
je
in
ror
aam
f2xm1
and
push
enter
decl
movsb
dec
add
jo
enter
imul
xchg
mov
mov
in
fwait
mov
aaa
push
xchg
lcall
shr
mov
jmp
lock
insb
xor
dec
mov
xor
insl
xor
decl
jae
jbe
jp
pop
sbb
faddl
clc
data16
stos
push
pop
pop
jnp
xchg
pop
mov
incl
out
sahf
aas
js
sar
jp
sahf
daa
loope
mov
mov
jmp
and
sahf
out
rclb
stc
xchg
and
sbb
emms
pop
cmp
jl
repz
call
or
mov
cmp
push
pop
sahf
mov
je
push
daa
cmc
int3
pop
mov
call
sub
movsl
les
dec
ljmp
jmp
lret
push
mov
into
lahf
pop
decb
icebp
ss
mov
push
pushl
fnsave
adc
mov
cmp
mov
lods
imul
inc
mov
dec
out
xor
jg
dec
push
sbb
adc
inc
fisttpl
jg
sarb
push
adc
int
mov
dec
bound
mov
decl
scas
and
mov
stc
cmpsb
push
inc
mov
das
mov
loopne
and
push
cmp
xor
pusha
add
pop
cmp
mov
movsl
jmp
aad
xchg
out
clc
sti
push
cmp
shll
add
inc
cli
lret
sbb
add
incl
adc
sbb
cmpsb
jne
cmc
and
jbe
imul
pushf
mov
sbb
push
pushf
jne
xor
cmc
jb
mov
jbe
dec
lcall
call
cmp
aas
and
jns
mov
out
or
push
incl
lcall
cmp
aam
sbb
mov
adc
fmull
mov
jbe
xchg
push
sbbb
mov
in
icebp
mov
jp
push
lock
sub
mov
fdivr
call
xchg
aas
cs
cmp
sub
shlb
cmpsb
test
stc
sub
mov
cmp
xchg
cmp
das
cli
mov
roll
cmp
dec
push
mov
push
and
jns
incl
ja
adc
shrb
and
not
mov
hlt
lods
int
sbb
nop
out
inc
sbb
loope
push
int3
and
or
jge
adc
xchg
push
mov
ljmp
sub
adc
jo
and
push
pushf
mov
jmp
mov
fisttpll
out
sbb
xor
clc
lcall
insl
scas
pop
call
fildl
sub
mov
call
shrb
sarb
bound
mov
lcall
lret
push
std
pop
cld
call
pop
pop
lcall
sahf
and
jmp
add
xor
call
insb
bound
mov
ret
cmp
test
inc
dec
adc
jle
decl
divl
sar
loop
sti
lcall
xchg
xchg
mov
push
pop
cs
jmp
and
loope
mov
or
adc
mov
out
inc
es
test
fcoms
fistpll
rcl
sub
test
push
jp
jo
and
out
clc
lcall
loope
into
cmp
mov
mov
xor
mov
push
cmp
xor
testb
ds
arpl
mov
hlt
cmp
inc
call
cwtl
jmp
sbb
push
mov
rolb
or
cmpb
andl
imul
les
daa
in
or
mov
cmp
or
mov
into
xchg
ds
call
mov
fwait
out
push
int3
adc
adc
adc
add
and
inc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
pop
inc
aad
repz
jp
push
dec
xchg
lods
add
jmp
mov
test
inc
and
dec
inc
jp
lea
push
outsl
or
orb
call
mov
decb
sub
repnz
into
lahf
outsb
or
jmp
mov
lcall
mov
ret
imul
imul
and
mov
lea
gs
andb
cmp
mov
add
fmuls
pop
pop
jnp
add
mov
std
bswap
cmp
sbb
cmpsl
mov
inc
ljmp
mov
lods
xorl
sub
pusha
jae
pushf
adc
fcos
mov
in
sti
inc
inc
mov
mov
cmp
push
loopne
sahf
push
pop
divl
or
lea
aas
and
es
stos
push
mov
subl
loope
mov
in
fadds
push
sbbl
test
cmp
outsb
js
cmc
in
test
jns
mov
lods
adc
dec
mov
nop
scas
cld
daa
sub
add
fbld
aad
jo
call
or
out
mov
mov
popf
hlt
jne
xor
sub
ss
or
mov
call
rolb
jb
inc
cmpsb
push
xor
sbb
jbe
pushl
pop
dec
jp
shl
enter
lahf
cmpsl
das
test
shlb
mov
cs
jbe
stos
jl
adcl
imul
int
xorl
ret
dec
dec
sub
cmpsb
lcall
cld
fcoml
jmp
call
xor
dec
daa
ljmp
mov
or
dec
dec
inc
sti
push
imul
adc
mov
repz
into
jg
mov
jg
fstl
ss
cmp
sub
jg
test
mov
imul
or
mov
dec
fwait
cld
test
mov
pushl
push
jg
loop
mov
jecxz
sbb
mov
out
add
pop
lods
xchg
push
clc
cwtl
insl
decl
stos
cli
testl
dec
out
inc
pop
inc
in
push
push
dec
jae
ljmp
std
dec
jno
cwtl
in
shlb
ss
dec
test
es
imul
and
imul
fsubp
xchg
dec
or
jge
mov
push
lret
addr16
mov
cli
push
fs
scas
aas
mov
incl
xor
aas
push
cld
mov
jbe
mov
jnp
push
jmp
xor
adc
xchg
jno
outsb
call
notb
les
divb
jmp
int
jge
push
push
cmp
push
mov
pop
push
and
jnp
inc
shrl
dec
inc
test
pop
jbe
xor
xor
fninit
mov
inc
sub
rcrl
or
xor
pop
xchg
pop
cld
in
jmp
push
iret
cld
push
and
test
sar
call
xchg
js
loop
jb
sbb
dec
sahf
ret
dec
dec
mov
pushl
xor
clc
stos
aad
sbb
push
or
dec
loop
bnd
push
inc
adc
incl
cmpsb
mov
xor
fsubrl
sub
popa
mov
push
stc
or
xor
decl
mov
mov
sub
inc
sbb
leave
dec
dec
bound
test
cs
ret
mov
repz
cli
ror
lahf
dec
cmpsl
cmp
leave
mov
mov
adc
aad
test
incl
call
in
pop
stos
rolb
out
int3
mov
inc
test
insl
pop
push
jecxz
inc
jle
idiv
sti
pop
pop
stos
repz
push
mov
mov
ljmp
ljmp
call
clc
mov
dec
and
jl
aam
and
std
popa
or
andl
pushl
xchg
cwtl
mov
hlt
std
mov
in
ret
xchg
push
insl
jno
lret
inc
add
fisubrl
fnstenv
fidivl
jnp
mov
jb
and
cmp
pop
mov
push
in
adc
insb
pushl
sub
mov
and
lods
inc
sub
fcoms
das
sar
adc
pusha
mov
arpl
xor
mov
lret
push
dec
pop
mov
loop
call
xor
outsl
fwait
ret
sub
rcr
mov
rclb
aas
jbe
insl
jecxz
jg
jmp
rolb
mov
push
ljmp
mov
incl
dec
cmp
imull
gs
scas
outsl
sbb
lods
mov
jmp
push
cmpb
xchg
sub
psubd
ret
cli
push
out
rol
xchg
push
push
xor
dec
int
mov
mov
inc
fs
je
rcrb
sub
lods
outsl
clc
call
cmp
repz
loope
cli
mov
in
ret
movsb
pop
ss
or
cmp
jmp
out
lahf
jne
mov
cmp
notb
or
stos
mov
cld
jmp
lods
iret
jno
mov
cmp
fisubs
stc
mov
sbb
mov
sahf
ja
push
test
arpl
pop
lock
loop
shlb
pop
and
pop
popf
arpl
roll
das
jp
xchg
push
push
jmp
adc
jno
call
cwtl
and
xorl
xchg
and
cmp
imul
add
jmp
pop
mov
decb
xchg
mov
xchg
enter
cld
fistpll
mov
lock
mov
out
mov
push
sub
test
fcomip
jmp
mov
leave
jbe
cmp
sti
pop
in
cmc
jg
pop
testb
dec
mov
jns
ljmp
cmp
and
jnp
mov
hlt
lcall
ds
sub
insb
xchg
cmpsb
push
pop
cmp
and
or
jecxz
sti
iret
es
xchg
mov
incl
pop
lret
cwtl
inc
or
pop
sub
add
js
shll
xchg
xlat
subb
jmp
test
jge
or
mov
mov
mov
mov
cmp
lods
adc
cmp
xchg
int3
pop
mov
fnstsw
xor
sub
push
cmp
sti
jmp
lahf
iret
jae
out
pop
xchg
jbe
fsubl
ds
mov
hlt
cltd
and
es
ret
ds
int3
enter
sub
cltd
mov
nop
mov
mov
jle
inc
inc
mov
and
bound
mov
pop
popf
adc
pop
hlt
cmp
xchg
test
decl
xor
push
mov
mov
clc
mov
dec
jl
das
int
out
maskmovq
idivl
push
ljmp
inc
repnz
mov
cmp
jl
inc
cld
insl
sbb
hlt
adc
je
ljmp
rorl
lods
or
fidivs
fists
sbb
sub
aaa
cmp
addr16
mov
mov
jne
sub
shlb
sarl
fwait
arpl
lahf
cmc
call
iret
mov
leave
insb
mov
scas
popf
pop
cwtl
testl
add
mov
xor
incl
pop
aas
mov
ja
pop
jg
jp
mov
sbb
in
aad
pop
jmp
cmp
sar
lods
fidivrl
rcrl
xchg
add
push
mov
icebp
add
fs
push
int3
or
fildll
sbb
decl
dec
add
ss
subb
bound
je
test
xor
clc
call
push
fxch
aas
cli
add
or
xorb
jecxz
ja
mov
insb
mov
cmp
mov
jmp
xor
add
leave
pushf
adc
and
sub
jae
in
dec
out
mov
cmpsb
roll
xor
gs
mov
xchg
push
int
incl
test
fsubs
leave
mov
adc
inc
out
push
shrl
mov
int3
mov
cmp
and
js
pop
sub
in
push
js
aad
cmpsb
nop
pcmpgtw
push
mov
incl
test
lret
xor
out
adc
add
xchg
sahf
mov
decl
cmc
push
fstps
cli
cmpsb
std
ror
outsb
dec
pop
cwtl
mov
out
jb
cld
decl
iret
add
cmp
sub
sub
mov
sti
sbb
dec
dec
cmpsb
mov
call
ljmp
xchg
push
adc
lret
outsb
sti
cmpsb
rcll
ss
adc
cmpsb
fwait
aam
call
repnz
addr16
add
std
test
add
test
and
pop
dec
sub
lcall
adcl
in
xchg
in
push
push
cmpsl
adc
sub
sub
add
jmp
adc
mov
in
cmp
lods
mov
sub
push
jbe
mov
jmp
shl
push
dec
movsb
sbb
mov
mov
jbe
push
mov
leavew
scas
lret
cli
call
aad
repz
dec
fcompl
ljmp
mov
aas
lret
mov
or
dec
mov
add
inc
nop
stos
stc
int
les
cmp
sbb
lcall
cmpsl
leave
dec
lds
pop
push
fs
pop
pop
sbb
xchg
cmp
aas
xor
daa
mov
adc
jecxz
jmp
xor
fldenv
lret
ret
inc
orl
add
push
loopne
aas
sbb
mov
jns
popf
add
mov
je
cmp
test
mov
adc
clc
call
lret
outsl
xchg
sub
call
xchg
insb
sahf
fwait
int
rcrb
shl
bound
mov
inc
or
cmc
in
cmp
sbb
jmp
addr16
dec
hlt
in
adc
jg
inc
jae
xchg
sub
test
pop
pop
sub
mov
mov
ljmp
movsl
fcompl
mov
sarl
repnz
lret
mov
adc
cmp
fsubrl
loop
and
in
push
clc
mov
lods
mov
repnz
mov
mov
jp
fcos
pushl
shr
xchg
mov
xchg
mov
lds
adc
stos
and
mov
nop
dec
ds
mov
mov
sbb
pop
mov
sti
mov
xchg
adc
sbb
call
inc
sbb
repz
imul
cmp
xchg
cmp
jp,pt
inc
mov
cmp
call
xchg
pop
xchg
adc
dec
xor
fidivrs
cli
pop
les
xorl
jne
sub
test
or
mov
test
outsb
adc
lock
or
pslld
enter
mov
cld
test
mov
popa
lods
repz
push
rcll
mov
push
fisttpll
cs
inc
pop
subl
add
mov
insl
idiv
call
fistpll
insl
dec
xchg
mov
cmp
mov
sbb
jae
jmp
cmp
jge
push
ret
mov
aad
dec
dec
add
inc
cmp
jle
xor
test
add
shlb
jmp
jbe
sbb
popa
hlt
jp
mov
sbb
je
mov
xchg
pop
sbb
mov
cmp
lret
test
dec
pop
out
adc
xor
loope
adc
lods
jnp
and
mov
incl
and
jmp
cld
xor
push
fidivrs
cmp
idivb
inc
cld
incl
and
sahf
addr16
mov
into
add
inc
push
pop
fs
data16
es
mov
jp
incl
adc
cmpsb
push
or
ds
xor
sarb
adc
cwtl
dec
inc
jno
je
dec
ljmp
cmpsl
in
inc
adc
jl
fisttpl
cmp
fwait
movsl
add
mov
fwait
incl
dec
in
mov
rorl
xchg
lahf
leave
mov
cmpsb
cmpsl
shll
mov
xor
out
push
push
ss
push
test
cmp
movsl
or
in
and
mov
push
sub
incl
out
lret
arpl
ja
push
fs
pop
push
aas
pop
repnz
sbb
ljmp
push
mov
cmp
or
in
push
xor
push
jne
sub
jecxz
adc
loop
fldl
xor
aaa
std
decl
aam
push
mov
ja
pop
jbe
xor
stos
imul
dec
push
out
mov
adc
pop
jo
adc
xchg
loope
in
inc
dec
or
nop
repz
dec
adc
jl
inc
push
fcompl
xchg
jp
or
adc
adc
mov
add
mov
pop
fs
inc
dec
inc
and
into
bound
pushl
xchg
std
stos
out
sbb
push
mov
repnz
test
pop
pop
out
pop
cmc
lret
sar
clc
cltd
pop
lods
xor
mov
lret
jmp
cld
mov
cltd
adc
mov
dec
fcmovu
xor
rol
jnp
or
mov
dec
shrb
insb
sti
jns
sbb
decl
cwtl
mov
jb
pushf
test
xor
mov
enter
jmp
pop
xchg
lret
push
repnz
xchg
out
in
fsubrp
xor
jge
dec
or
jg
outsl
clc
jmp
mov
jae
add
cli
testb
mov
jmp
ljmp
cmp
inc
outsl
rcrl
test
xchg
enter
mov
push
aad
lcall
testb
jae
stos
sub
pop
clc
push
xchg
pop
cmp
jmp
int
mov
cltd
push
pop
xchg
push
or
mov
mov
mov
fisttpl
sub
decl
jnp
push
add
and
cmc
or
pop
push
mov
cltd
in
adc
scas
cli
add
dec
jp
hlt
cmp
in
or
out
cli
jmp
fsubrp
cwtl
cmp
and
test
xlat
xchg
xchg
inc
push
sbb
std
les
sbb
lahf
dec
pop
loop
xor
jns
int3
jl
clc
dec
sti
or
jmp
mov
push
fisttpl
and
push
into
inc
loopne
outsl
test
dec
lcall
pusha
mov
insl
and
add
or
cmpsl
sbb
jne
aas
clc
decl
cs
xchg
aam
popf
es
fistpll
loope
popa
pop
push
mov
incl
and
out
jge
std
pop
stc
repz
push
int
negb
lcall
xchg
ret
xchg
push
dec
sbb
or
push
pop
mov
je
mov
cmp
sahf
rcrb
push
test
pop
fldenv
movsb
lds
mov
mov
lds
push
cltd
jns
fs
fimuls
mov
xor
jg
jmp
ljmp
repnz
adc
adc
cmc
out
rcrl
out
pop
dec
jmp
mov
jmp
pop
xchg
mov
movsl
in
pop
pop
pop
std
push
jle
in
call
fwait
mov
adc
aad
cmp
sahf
loop
hlt
ljmp
xchg
inc
call
std
js
movsb
out
pop
cmc
movsb
cmp
pop
xchg
ljmp
fwait
lcall
mulb
sbb
push
inc
rolb
cld
pop
or
ljmp
in
sub
rclb
loopne
inc
dec
push
cmpsb
adc
add
xor
jmp
outsl
mov
icebp
or
hlt
aaa
sarb
xchg
sub
adcl
add
pushl
pop
jmp
mov
cmp
inc
dec
mov
clc
jno
mov
repz
mov
incl
ljmp
sbb
pop
bound
cli
pop
test
mov
push
dec
and
rorb
decl
cmp
fstpt
jp
sub
lret
mov
imul
jmp
push
rclb
jne
mov
pop
lea
subl
jg
jmp
push
cmp
sub
jno
mov
and
lcall
xor
sti
jg
xlat
addr16
jbe
ja
lahf
jae
mov
shl
or
mov
push
jae
cmp
in
repz
out
mov
mov
jmp
and
addr16
cltd
repnz
shlb
xchg
bound
bound
out
mov
mov
pop
add
pop
sub
sahf
das
xchg
jnp
jle
jg
xor
push
push
cwtl
xchg
inc
adc
lock
jecxz
dec
sbb
push
pop
cmpsl
scas
bound
scas
xchg
or
and
jp
stos
push
cmp
repz
stos
addb
leave
mov
test
cmpsb
cmp
sub
mov
ljmp
int
addr16
cltd
or
pop
out
scas
mov
or
aaa
in
cmp
loop
cmp
mov
arpl
cli
repnz
outsb
jmp
cltd
xchg
hlt
dec
and
in
push
pushl
addr16
outsl
sarb
xchg
jae
cld
pop
insb
and
rcll
lcall
lcall
dec
je
repz
rcll
jmp
sub
pop
mov
in
push
lods
stos
or
hlt
arpl
ficoml
jb
inc
push
ja
call
mov
out
cmp
jb
mulb
movsl
cmp
dec
pop
adc
pushl
cmp
rcl
cs
fstps
push
es
sbb
or
xlat
popf
fwait
mov
decl
push
repnz
into
adc
loopne
call
scas
pop
pop
repz
pushl
push
cmpsl
inc
jmp
scas
jne
jno
ror
cmp
andl
lret
ljmp
cmp
xor
pop
push
and
mov
repnz
or
mov
mov
and
stos
cltd
cmpl
mov
fldt
adc
jnp
ljmp
pop
sub
cmpl
mov
jecxz
pushf
sbb
out
test
push
add
pop
in
call
pop
loop
aas
out
jnp
je
stc
repz
adc
jg,pn
insl
sti
cwtl
sub
and
mov
mov
xchg
lahf
mov
popa
por
insl
pop
jp
fiadds
push
sub
incl
mov
push
out
inc
and
idivl
aam
or
pop
mov
xlat
inc
sub
cwtl
adc
mov
xorl
adc
inc
jmp
test
jl
push
mov
xor
decl
xor
inc
xor
nop
dec
xchg
cmp
out
mov
cmpb
es
sub
pop
ljmp
pop
or
xchg
sub
outsl
cmp
enter
out
push
out
xor
shlb
test
int3
mov
outsb
stc
sbb
dec
insl
cli
xor
outsb
subb
fwait
clc
fcompl
aaa
xchg
mov
push
cwtl
pop
pop
add
mov
mul
push
sbb
pusha
push
cwtl
jg
ljmp
bound
lret
pop
loopne
jb
nop
out
and
aad
jb
push
insl
call
or
push
add
pusha
pop
mov
push
mov
fcomps
or
shlb
dec
movsb
testb
and
push
jnp
call
lock
adc
mov
inc
dec
fxch
xchg
lock
lahf
out
cmp
add
addb
addr16
xor
xchg
cmp
cmc
mov
enter
out
adcl
lcall
mov
cs
mov
mov
add
fsubl
cmpsb
lds
cli
out
pop
div
or
insl
push
call
cmp
xor
pminsw
imul
shlb
pop
sub
out
icebp
push
push
sub
aad
fcom
inc
inc
cmp
sbb
sbb
rcll
pop
jg
in
repnz
pushl
xchg
jb
js
jo
fwait
imul
mov
ret
or
sbb
xchg
insb
pop
pop
hlt
call
jns
cli
jno
lock
or
add
call
mov
inc
xchg
hlt
dec
add
nop
push
inc
pop
bnd
std
pop
dec
push
ffreep
sbb
std
decl
push
pushf
and
pop
stc
and
and
arpl
stc
test
stos
pop
adc
mov
xor
mov
mov
mov
add
mov
mov
jnp
add
sub
sbb
xchg
lods
adc
es
fildll
jmp
fwait
sub
xor
movsl
pop
mov
std
iret
add
mov
adc
cmovae
decl
and
cmp
cltd
mov
sbb
add
pop
inc
sub
out
mov
sbb
xor
daa
and
fisubrl
into
adc
je
jo
lahf
imul
push
imull
fstpl
pop
xor
adc
cmc
sahf
jge
sub
xchg
add
mov
cmp
test
or
and
mov
incl
test
push
push
mov
dec
or
pop
lock
shrb
sub
jmp
xor
jmp
popa
gs
push
fistpll
push
sub
inc
icebp
mov
jle
jns
xchg
ret
and
cmp
cmpsb
fmuls
pusha
add
xchg
fcomp
sbb
ret
adc
shll
sub
nop
das
sub
outsl
loopne
addl
mov
in
inc
test
sbb
pop
outsl
lock
jno
lret
loopne
jbe
ret
insl
loop
int
pop
sar
incl
jnp
dec
enter
jp
jmp
push
ljmp
jg
add
out
repnz
adc
add
and
shll
mov
outsl
jmp
cmp
je
sbb
push
sub
or
or
jle
cltd
fistps
lcall
pop
jge
jmp
mov
jbe
hlt
and
inc
adc
subb
repnz
xor
pop
ja
add
jg
fisttps
out
or
xor
jo
or
les
enter
outsb
std
mov
movsb
dec
mov
sub
or
test
out
dec
jno,pn
call
mov
pusha
ror
xchg
test
ds
nop
out
mov
sbb
out
push
lahf
fwait
mov
ljmp
jmp
stos
test
inc
sti
and
repz
out
mov
lcall
int3
cltd
xor
cmpsb
sub
mov
adc
sbb
in
lods
jne
lcall
cmp
jnp
push
push
outsb
incb
hlt
idivl
mov
ja
and
aad
loope
orb
add
std
mov
jae
dec
movsl
je
aam
mov
popa
bound
fcomip
call
ds
push
cmpsb
scas
scas
dec
push
fs
jl
mov
mov
pushl
idiv
cmp
out
scas
call
push
dec
pop
ret
pop
fsubp
mov
pushl
daa
sbb
fisttpl
sbb
inc
xor
lret
ss
push
negl
mov
or
fcoml
sti
cmpsb
mov
iret
fsubl
add
xchg
xchg
dec
rol
push
pop
push
xchg
jo
jle
pop
adc
outsb
jbe
xor
pop
mov
pop
rolb
fildll
mov
fiaddl
in
sbbb
add
movsb
loop
push
jae
sahf
mov
inc
xchg
and
fbstp
push
test
jbe
out
sbb
mov
push
lock
inc
push
dec
dec
popf
arpl
jno
incl
stos
fiadds
sbbb
add
mov
or
cmc
or
push
aad
push
out
mov
cmpsb
decl
je
xor
jb
xchg
aaa
es
xchg
pop
lds
push
xor
pushl
popa
out
mov
stos
int3
and
pop
rcll
movsl
jecxz
inc
or
jg
pop
mov
mov
lcall
testl
test
sar
mov
jae
push
daa
jecxz
pop
pop
enter
jg
incl
ss
sub
mov
fimull
fs
and
xlat
mov
clc
faddl
dec
add
clc
jl
call
cmpsb
sahf
sub
incl
inc
enter
xchg
adc
push
fstps
outsb
jb
inc
ficoms
cmp
incl
mov
mov
cli
jle
imul
jbe
mov
inc
insl
jbe
ljmp
call
cli
cmpsb
xchg
lds
xchg
insb
xchg
lcall
ret
mov
insb
dec
sub
add
pushl
adc
mov
pop
xor
into
jo
jl
mov
jns
push
nop
fwait
sahf
shll
lcall
inc
daa
subl
xchg
xor
in
fldt
inc
adc
cmp
call
sbb
xor
fcompl
into
inc
scas
cwtl
pop
rcl
gs
lahf
nop
jbe
aad
adc
decl
push
aaa
lods
test
js,pn
out
push
push
subl
insb
xor
aas
pop
xchg
xor
pushl
mov
test
sarl
sub
jne
mov
or
mov
in
xor
sahf
movsl
mov
sbbb
cld
xor
mov
mov
decl
daa
xchg
xlat
and
lahf
lret
adc
xchg
iret
inc
push
sub
je
and
xor
jmp
std
aas
je
mov
insb
stos
repnz
fnstcw
insb
mov
add
pop
rcll
lock
xrelease
outsb
repnz
lock
repz
jg
leave
sub
add
and
jns
add
dec
jp
dec
dec
mov
dec
pop
sbb
xchg
add
les
xor
jg
mov
mov
das
mov
cwtl
shll
in
pop
addr16
cmp
or
fcomip
nop
dec
and
sti
adc
in
std
and
mov
adc
jae
in
push
pop
push
lcall
cmpsl
xchg
add
shll
mov
clc
cmpsb
mov
je
mov
mov
adc
mov
cmp
ja
xchg
cmpsl
stc
paddb
decl
lods
gs
dec
sub
dec
fnsave
mov
sbb
repnz
pop
pop
ja
das
mov
cli
adc
dec
mov
in
jp
insl
sub
add
fldl
jo
out
in
cmpsl
mov
loop
cmp
ret
sub
mov
out
lcall
je
add
decl
lods
rorl
or
cmp
cmp
push
pop
jae
ja
xor
lcall
xchg
mov
pop
dec
negb
jb
pop
or
pop
test
inc
cld
fmull
and
mov
aas
mov
inc
mov
pop
xchg
cs
cmc
lods
out
repz
mov
rolb
or
sub
jmp
dec
out
push
dec
movsl
cmp
mov
mov
inc
push
loopne
jo
xor
jp
dec
cld
inc
in
xor
push
and
adc
sub
call
pusha
mov
andb
pop
and
inc
lods
mov
and
les
call
mov
enter
std
hlt
push
hlt
sahf
negb
cmp
pop
mov
or
andb
xchg
inc
adc
clc
xchg
push
adc
test
rorb
movsb
cwtl
push
lret
pop
mov
jnp
fisubrl
mov
xchg
jecxz
lods
and
addr16
dec
idivb
mov
call
icebp
std
or
shll
push
push
or
push
call
iret
jmp
inc
ljmp
adc
mov
xlat
pushf
mov
pop
leave
ret
jecxz
pop
movsl
xchg
mov
ljmp
lahf
inc
dec
xchg
adc
mov
daa
cmp
std
jge
insl
decb
jg
inc
rcll
sub
mov
sub
shlb
and
sub
loope
lds
cmp
push
pop
mov
sub
call
mov
adc
jecxz
adc
mov
pop
ds
cld
addr16
add
push
clc
repz
sub
pcmpeqb
test
sub
out
lods
adc
repnz
or
lock
cmp
pop
cmp
xor
mull
push
cmp
cmp
shll
sub
xorb
daa
insl
ja
adc
insb
and
sub
roll
pop
mov
nop
and
insl
lods
rorl
fildl
xorl
out
sub
dec
mov
daa
sub
xor
pop
xlat
jo
sub
leave
adc
ss
inc
fistps
xor
lods
pusha
ret
cmp
push
in
adc
sub
roll
shll
test
cmc
sub
pusha
ret
in
lds
push
or
int
push
mov
popa
or
scas
pop
pop
cmp
jg
jmp
rol
add
pop
movsb
dec
push
push
mov
mov
stos
add
sbb
mov
push
sub
das
mov
xchg
cmp
adc
insb
insl
mov
xchg
xchg
push
xchg
sbb
dec
lods
sub
int3
jg
pop
inc
mov
xchg
testb
nop
lods
pop
lds
inc
and
cmp
mull
jne
rorb
imul
rcr
cmp
daa
xor
insb
or
add
jbe
jne
adc
adc
xlat
arpl
xor
or
aad
or
or
inc
imul
dec
icebp
daa
jbe
mov
dec
push
jo
enter
cmpsb
sub
adc
in
inc
and
call
mov
jg
outsl
jbe
mov
ret
fldl2e
mov
pushl
sbb
js
icebp
insb
cmc
rolb
dec
fldcw
mov
aam
sahf
jmp
ljmp
lock
fwait
or
cltd
sbb
and
mov
mov
inc
into
mov
incl
popa
repz
xor
mov
daa
pop
dec
cmp
enter
cmp
movsb
cmp
jae
ljmp
adc
pop
xchg
cltd
adc
jne
add
push
xchg
bound
inc
mov
lret
lcall
ljmp
icebp
and
dec
pop
ljmp
inc
mov
out
jmp
jecxz
pusha
mov
inc
ss
imul
add
push
fwait
push
mov
sbb
mov
ljmp
inc
push
insb
std
and
idivl
sbb
fisubrs
xor
jge
je
in
ror
aam
f2xm1
and
jg
call
adc
enter
imul
xchg
mov
mov
in
fwait
mov
aaa
decl
xchg
cltd
rcrl
mov
jmp
lock
insb
xor
dec
mov
xor
insl
xor
jns
sub
jp
pop
sbb
faddl
clc
data16
stos
push
pop
pop
jnp
xchg
pop
mov
call
cmp
out
sahf
aas
js
sar
jp
sahf
daa
loope
mov
mov
jg
fs
and
sahf
out
rclb
stc
xchg
and
sbb
emms
pop
cmp
jl
push
aaa
pop
or
mov
cmp
push
pop
sahf
mov
je
push
daa
cmc
int3
pop
mov
jg
mov
xor
sub
movsl
les
dec
ljmp
xor
mov
xchg
lret
push
mov
into
lahf
pop
decb
icebp
ss
mov
decl
fnsave
adc
mov
cmp
mov
lods
imul
inc
mov
push
lahf
into
out
xor
jg
dec
push
sbb
adc
inc
fisttpl
inc
je
cmp
inc
push
adc
int
mov
dec
bound
mov
jns
xsave
cmp
mov
stc
cmpsb
push
inc
mov
das
mov
loopne
and
push
cmp
mov
pusha
add
pop
cmp
mov
movsl
jmp
aad
cmp
dec
xchg
push
cmp
shll
add
inc
cli
lret
sbb
incl
imul
and
jbe
imul
pushf
mov
sbb
push
pushf
jne
xor
cmc
jb
mov
jbe
jmp
dec
sahf
sub
dec
ljmp
xchg
icebp
mov
fdivrs
mov
out
or
jmp
xchg
insl
xor
lcall
cmp
aam
sbb
mov
adc
fmull
ljmp
mov
jbe
xchg
push
sbbb
mov
in
icebp
mov
jp
push
lock
sub
mov
decl
cs
cmp
sub
shlb
cmpsb
test
stc
sub
mov
cmp
xchg
mov
cmp
mov
roll
cmp
dec
push
mov
push
and
pushl
push
ja
adc
shrb
and
not
mov
hlt
lods
int
sbb
nop
jmp
loopne
sbb
loope
push
int3
and
or
jge
adc
xchg
push
pushl
cld
adc
jo
and
push
pushf
mov
jmp
mov
fisttpll
out
sbb
call
xor
insl
scas
pop
call
fildl
sub
mov
call
sarb
bound
mov
lcall
incl
rcrb
pop
lcall
sahf
and
jmp
add
xor
call
insb
bound
mov
ret
cmp
test
inc
dec
adc
jmp
fdiv
xor
clc
loop
sti
lcall
xchg
xchg
mov
push
mov
mov
fimull
shl
call
mov
int
adc
decl
xchg
test
fcoms
fistpll
rcl
sub
test
push
jp
jo
and
jmp
sbb
loope
into
cmp
mov
mov
xor
xor
cmp
xor
testb
ds
arpl
mov
hlt
cmp
push
xchg
sbb
mov
jmp
sbb
push
mov
rolb
or
aas
xor
andl
imul
les
daa
in
or
mov
lcall
mov
int3
push
mov
into
xchg
ds
call
mov
fwait
out
push
int3
adc
sub
adc
mov
push
xor
mov
push
and
push
adcl
adc
add
inc
and
inc
xchg
mov
xchg
incl
rolb
imul
sbb
stc
inc
pop
daa
xchg
stos
js
repz
xchg
scas
dec
popa
adc
call
mov
sub
bound
xlat
js
mov
or
das
push
cmp
bound
push
mov
decl
daa
lods
mov
or
cmp
push
mov
xchg
push
in
int3
lods
incl
mov
shrb
mov
loopne
imull
mov
dec
dec
repnz
cmpsl
sti
cmpsb
out
jns
xchg
dec
jecxz
sti
dec
pop
adcb
push
dec
pop
fcomps
dec
jo
into
sbb
dec
push
mulb
arpl
test
pop
inc
imul
lds
inc
movb
xlat
mov
negl
aam
push
cli
or
mov
mov
inc
push
lods
xchg
out
add
stos
mov
stos
in
xor
sar
fdivrs
push
or
and
sub
mov
jecxz
jb
in
outsb
dec
pop
mov
pushl
cltd
mov
sub
pop
adc
repnz
cmp
inc
in
sub
lcall
lcall
jnp
lret
pop
dec
cmp
dec
lea
add
in
push
mov
add
cwtl
push
aaa
and
cmc
xor
adc
push
push
fdivrs
adc
movsl
outsb
xor
decl
sahf
test
orb
adc
lret
das
or
popf
ffreep
cltd
rol
inc
xchg
mov
call
lods
pop
aad
cmp
orb
fisubl
out
cmp
sti
adc
xor
xchg
fsubl
cltd
sbb
test
jmp
es
icebp
xchg
adc
and
loope
decl
test
jge
rorl
and
inc
mov
ds
pop
sbb
cli
xchg
rclb
dec
or
or
mov
sub
adc
lea
repnz
inc
pop
insb
es
or
fimuls
jno
insb
mov
and
mov
pop
test
repnz
imul
sub
mov
into
divl
aam
or
nop
sbb
mov
cmpsb
sar
ljmp
sub
inc
sbb
adc
scas
xor
jbe
loop
fdivrp
outsl
call
das
jp
inc
lods
loope
jge
loop
jg
and
adc
push
dec
shrb
lcall
pop
mov
sbb
stos
pop
adc
dec
pop
adc
push
push
mov
cld
roll
jmp
out
stos
fwait
enter
pop
nop
mov
outsl
fdiv
inc
jno
repnz
mov
adcl
mov
aaa
mov
push
jmp
jo
xor
pop
xchg
jp
dec
arpl
jp
add
mov
mov
pushl
inc
jp
into
add
xor
testb
fcomip
jae
jp
push
mov
pushl
mov
cld
decl
ret
repz
fst
sbb
fwait
aad
mov
fcomps
faddl
ljmp
add
shlb
add
pushf
rorl
in
mov
mov
loopne
jecxz
push
aam
lret
xchg
fcoms
nop
icebp
or
xchg
les
in
movsb
cmp
mov
mov
cwtl
xor
ficompl
lahf
fdivl
ficompl
or
subl
psubsw
push
inc
and
popf
mov
fnstsw
xor
mov
mov
jl
std
push
roll
xor
mov
pop
roll
cmp
mov
dec
into
fdivrs
ss
jg
and
xchg
fcompl
shll
out
into
dec
xchg
push
mov
jg
xor
inc
push
fiaddl
xchg
loopne
lret
cs
xchg
jl
out
fdivs
mov
push
xor
mov
pusha
sarl
ficoml
push
out
inc
fstpl
sti
lret
cmp
ss
lock
xor
xchg
aad
mov
loopne
das
clc
insl
int3
xchg
fcomps
ret
inc
fcoml
les
cmpsl
loopne
in
loopne
clc
mov
jo
cmp
cltd
cs
aad
lret
mov
rorl
lcall
fcomps
push
int
aad
out
or
aas
clc
outsl
mov
sbb
int3
in
or
sbb
rcl
dec
mov
lds
jmp
cmp
fdivrl
lahf
andl
lahf
or
arpl
cmpsl
dec
inc
inc
ja
outsl
mov
into
lds
pop
faddl
into
or
mov
xor
inc
cmp
icebp
imul
pop
lock
adc
fwait
idiv
xchg
in
inc
cmpsb
mov
add
rorl
pop
mov
pop
xchg
int
pushf
lahf
jg
fwait
rorb
fistpl
xchg
cld
cmp
mov
repnz
fistl
lcall
mov
jg
mov
jbe
adc
mov
jp
mov
roll
push
sbb
mov
jge
pop
sbb
repz
push
les
and
jb
fiadds
mov
sarl
push
fdivrs
int3
xor
mov
jno
fadd
aam
jg
add
push
dec
iret
pop
xor
fisubl
jae
jnp
jae
shrb
inc
mov
and
jb
repz
arpl
jnp
arpl
push
lds
clc
imul
jg
push
inc
mov
lock
jnp
jg
enter
push
xor
adc
mov
xor
dec
mov
or
lock
lods
cmp
mov
mov
pop
inc
clc
loopne
cmc
or
mov
cmp
mov
das
clc
jg
cmp
pop
cmp
scas
xor
mov
mov
push
sub
ljmp
xor
mov
clc
repz
xor
and
xchg
xor
mov
incl
push
mov
std
sti
mov
test
push
loop
jle
imul
mov
adc
out
dec
int3
out
push
int
mov
out
mov
out
repnz
mov
outsl
outsb
clc
in
pusha
js
arpl
ds
xor
mov
test
xor
decl
nop
jnp
repz
cmp
mov
lret
test
xor
or
jg
mov
push
fidivs
jbe
lock
jp
push
jecxz
lcall
lock
cmpb
mov
pushl
xchg
add
mov
cmpsb
mov
incl
jl
inc
aam
mov
jo
mov
sti
cmp
xchg
lock
mov
mov
aam
and
push
int
cmp
cwtl
leave
int
jg
cmp
mov
out
out
cmp
loopne
dec
xchg
xor
sbbb
js
mov
jno
sub
fsubr
int
mov
xor
shr
ret
in
repz
dec
mov
jns
mov
add
adc
inc
or
jno
mov
ss
dec
ja
cmc
xor
cmp
and
jge
xor
pop
cmp
dec
stos
inc
mov
mov
mov
pusha
fcomi
aaa
cmp
mov
dec
push
jo
push
xor
xor
xor
roll
call
int3
jmp
mov
or
clc
call
shl
loop
in
ja
js
leave
push
clc
leave
outsl
lock
add
dec
xor
push
xor
jmp
xor
push
mov
ljmp
data16
jecxz
dec
mov
inc
ret
mov
inc
mov
sub
aam
rorl
loopne
outsb
cmp
outsb
inc
inc
shrb
fimull
push
aam
cmp
into
pushf
jle
add
fldt
sbb
jle
arpl
xlat
outsb
int3
fisttpl
or
in
filds
xchg
dec
fistps
in
out
push
xchg
mov
jbe
jecxz
ljmp
cmp
mov
xchg
cmc
pop
out
inc
jecxz
jb
mov
call
cmp
adc
int
aam
inc
dec
xchg
mov
ja
adc
mov
mov
outsb
iret
xor
out
addb
in
adc
xor
decl
dec
fyl2xp1
out
push
iret
jb
inc
std
and
sub
aas
push
loope
cmpsl
and
pushl
cmp
cmp
imul
mov
mov
pusha
push
pop
std
pushl
jno
movsl
add
pop
pop
inc
add
in
pop
sub
jmp
mov
sub
fcomps
push
push
jns
inc
xor
jne
les
mov
xor
inc
imul
dec
js
bound
cmp
jae
inc
inc
pushl
incl
push
dec
jp
push
push
xor
push
xor
xor
inc
push
outsl
imul
push
push
push
dec
dec
push
arpl
imul
jg
decl
ss
inc
insb
push
imul
bound
push
test
push
jo
inc
push
jmp
push
pop
inc
dec
imul
insl
inc
push
jns
gs
outsb
outsb
arpl
inc
addr16
dec
loopne
pushl
inc
insl
dec
aaa
arpl
gs
popa
bound
inc
pop
push
jo
ss
gs
xor
mov
dec
insb
dec
dec
jl
jae
push
arpl
pushw
dec
arpl
pop
incl
jno
pop
dec
xor
dec
ja
dec
push
jb
push
aaa
dec
dec
arpl
inc
push
jb
push
je
pop
sub
outsl
stos
aaa
fs
xor
xor
jb
push
arpl
fcomip
decl
xor
fs
inc
dec
push
dec
inc
adc
cmp
push
pop
pop
dec
dec
inc
bound
add
pushl
inc
inc
outsl
aaa
gs
push
ja
dec
fs
js
sbb
incl
ss
dec
dec
outsl
addr16
jbe
pop
popa
ss
inc
pop
dec
push
inc
imul
sub
insl
jns
outsb
push
outsb
jo
jp
xchg
popa
insb
sahf
aaa
bound
cmp
dec
jno
xor
in
jg
jne
push
push
outsb
jae
jo
add
inc
push
push
je
je
or
cmp
sbbb
xchg
int
sbb
and
cltd
add
xor
pop
xor
shll
xor
add
shr
add
ja
sub
imul
pop
dec
repz
daa
shl
mov
or
push
fdiv
mov
ljmp
sub
adc
jmp
fstps
lock
in
sahf
inc
jecxz
int
jns
jo
out
js
push
fidivl
pushf
dec
pop
cmc
inc
cmp
and
ja
inc
sub
outsb
sbb
jbe
push
or
push
mov
int
mov
adc
adc
insb
fistpll
adc
sub
or
sbb
cmp
shll
lahf
xor
mov
jge
inc
mov
lods
aad
rorb
aas
in
shrl
adc
jns
xor
ret
insl
fbstp
xchg
dec
dec
mov
push
mov
and
out
cmp
xchg
push
xchg
adc
mov
fbld
lcall
push
std
out
idivb
daa
out
dec
test
dec
fildll
inc
test
pop
jnp,pt
js
rolb
pop
sti
orb
cmpsl
cs
dec
mov
pop
adc
loopne
ss
push
in
sarl
push
inc
pop
insb
jo
inc
push
sbb
adc
cmpsl
dec
js
aaa
xor
xchg
xor
cs
ret
aam
xchg
jbe
pop
push
cmp
pusha
xchg
loop
xlat
inc
aas
inc
enter
or
jnp
xbegin
jbe
pop
addr16
lock
outsl
outsb
push
cmp
es
and
inc
adc
es
jb
fnstenv
adc
xor
cmp
aas
leave
fisubl
movswl
push
push
push
mov
jge
pop
push
jo
out
icebp
sarl
add
mov
insb
ss
nop
mov
sar
data16
jmp
pushl
jns
test
psubq
pop
sti
fidivl
data16
das
jge
insb
les
out
jmp
out
dec
ljmp
jl
daa
push
jae
lods
fdivrs
out
pop
inc
icebp
dec
push
scas
ds
out
dec
aad
mov
lds
in
mov
shl
imul
gs
xor
cs
insb
mov
call
pop
inc
sbb
gs
jb
je
arpl
push
arpl
outsl
outsb
cs
mov
testb
sub
jb
in
scas
mov
dec
outsb
and
imul
jne
inc
fnsaves
in
jb
sbb
outsl
arpl
or
outsl
add
inc
xor
inc
outsl
jne
mov
addr16
jns
push
outsw
jb
popa
outsb
arpl
pop
fstps
push
adc
sbb
jb
xorb
or
dec
fs
push
in
pop
inc
ret
mov
fs
das
fiadds
dec
jmp
pop
push
imul
dec
jne
mov
jns
jle
ss
pop
sub
sub
or
mov
movsb
mov
pop
arpl
sbb
sbb
jb
jns
js
push
dec
cmpsl
inc
mulb
cmc
and
outsb
addr16
inc
and
cmp
fs
mov
fistl
jae
dec
outsl
fs
gs
push
or
jbe
mov
daa
inc
imul
mov
or
cltd
and
inc
inc
add
xor
out
pop
mov
sbb
xchg
popf
mov
push
jb
scas
cmp
addl
jae
mov
xor
cld
fisubs
idiv
push
push
outsb
push
push
int
cmp
xor
out
shr
out
fwait
push
outsl
xchg
and
dec
cmp
push
je
xorb
cmp
ret
jo
push
popa
imul
ss
adc
add
push
sahf
push
jns
inc
shl
xchg
dec
in
jbe
xchg
adc
lds
gs
pop
jb
jae
mov
dec
fsubl
gs
outsl
shr
sub
gs
push
inc
jbe
js
sbb
xlat
fimuls
push
add
es
movsb
outsb
mov
and
adc
add
popa
sub
js
jne
jg
jns
sbb
pop
gs
pop
aas
and
or
push
or
fs
rorb
inc
out
mov
push
mov
add
sbb
inc
push
sbb
adc
cmp
push
insb
push
pop
mov
push
repz
xchg
inc
push
jo
cmpsb
sub
sbb
dec
into
scas
mov
cwtl
push
xlat
jbe
cmp
insb
jne
mov
repz
mov
jbe
outsl
sub
and
add
xor
xchg
arpl
test
fldl
insl
inc
aas
repz
sti
lods
sub
dec
jo
inc
inc
insb
push
sbb
pop
lds
clc
push
mov
loopne
adc
rcrb
negl
loopne
fisubrl
daa
push
negl
inc
fwait
pop
inc
sbb
ret
fisttpll
out
or
ret
data16
mov
jno
les
inc
jo
loop
les
push
rcrl
loope
imul
push
jecxz
add
call
hlt
xor
mov
sub
jae
ss
xor
into
add
lock
loopne
stos
adc
mulb
xor
mov
fistl
push
xor
mov
imul
insl
int3
push
mov
pop
movsl
adc
cmpsb
int3
imul
js
mov
jae
fsubs
push
add
insl
xorl
xchg
mov
in
sbb
js
jo
loopnew
adc
pushf
jecxz
into
rcl
fildll
inc
inc
cmpsl
in
xor
xchg
adc
daa
pop
fistl
je
rcr
inc
incl
jne
push
loopne
push
push
or
cmp
dec
cmpsl
push
in
out
pop
sub
pop
sbb
nop
sbb
inc
outsb
sbb
pop
hlt
popa
ret
fldl
inc
lret
xlat
xchg
mov
fisubrs
pop
add
adc
nop
push
add
add
xorl
fs
orb
inc
add
inc
push
add
add
call
nop
inc
add
fs
inc
call
add
and
adc
nop
sbb
and
xor
jecxz
mov
inc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
push
adc
mov
push
push
outsl
cmp
test
xchg
cmp
iret
jnp
push
je
cwtl
cmpsb
iret
repz
scas
lret
cli
or
cmp
jnp
sbb
sub
inc
push
mov
out
out
push
jl
mov
repz
and
inc
push
repz
repz
out
lcall
push
sahf
out
sahf
fs
xchg
test
xor
out
lret
adc
repz
repz
pop
push
iret
repz
mov
or
out
lcall
jl
out
mov
ljmp
shll
xor
iret
repz
je
lods
mov
stc
cmp
add
cmp
sahf
out
outsb
adcb
repz
dec
pop
outsb
iret
repz
andb
out
ds
dec
pop
subb
lret
repz
repz
dec
outsb
jle
stc
cmp
mov
out
sahf
dec
jb
xchg
mov
jns
adc
xor
cmp
repz
push
jp
mov
imul
jl
xor
jl
mov
out
jns
cli
dec
jge
inc
push
iret
repz
data16
stc
cmp
or
push
fs
out
jbe
cwtl
test
repz
out
sbb
cmp
repz
jo
test
fsubrp
sahf
cmpsl
stc
cmp
adc
sahf
out
push
repz
out
call
iret
repz
push
push
sahf
out
cmp
loop
subb
jns
out
jp
mov
call
push
sbbl
inc
push
fcomip
cmp
jbe
scas
aam
inc
or
inc
push
js
iret
repz
cwtl
mov
sahf
out
lcall
imull
out
add
jns
out
push
and
inc
dec
pusha
out
sahf
out
mov
jns
call
cmp
repz
xor
push
repz
repz
mov
stc
cmp
int3
fsubrp
add
sahf
push
sub
push
pop
jo
sahf
out
adcb
out
out
or
iret
xor
data16
iret
repz
xchg
sahf
mov
jns
iret
repz
or
sahf
out
push
bound
out
sahf
cwtl
mov
cmp
sarl
push
sub
inc
repz
repz
push
repz
test
int3
call
lcall
jns
out
outsb
sbbb
out
sbb
xor
mov
mov
lcall
push
xor
jns
out
pop
data16
mov
ljmp
fidivrs
push
dec
pop
js
out
sahf
mov
int
jns
lock
iret
repz
jbe
iret
repz
lcall
cmpsl
stc
cmp
sbb
sahf
out
pop
push
xchg
mov
xchg
iret
repz
adc
xor
outsb
cmp
repz
xchg
lods
shrb
iret
repz
testb
sbb
jns
out
inc
pop
push
pushf
out
sahf
xchg
mov
aam
repz
xor
push
or
cmp
repz
push
fs
lcall
shl
cld
push
xchg
jns
out
sbb
dec
data16
sahf
out
lods
rcr
pusha
fidivrs
in
ficoms
and
push
sbb
and
adcl
call
inc
dec
adc
lcall
cs
sahf
push
cmpsl
pop
pushf
sahf
lret
jp
mov
lret
mov
imulb
cltd
ljmp
and
stos
jge
fdivl
popf
jbe
jge
xor
fidivs
lcall
and
inc
loope
test
ljmp
loope
add
inc
push
testl
mov
lock
and
out
push
or
rclb
je
je
mov
inc
xchg
loope
call
mov
dec
ret
das
scas
xchg
jb
mov
xchg
icebp
bound
sbb
jle
incl
es
shll
in
gs
cmp
and
pop
pop
aam
adc
inc
fistl
push
xchg
cmp
jmp
fists
fwait
adc
repnz
inc
hlt
fadds
mov
fildll
in
shrb
call
fcoms
aad
ds
xchg
test
loop
in
mov
pusha
pop
lods
dec
enter
pushl
jbe
push
mov
push
inc
insb
push
int3
loope
mov
shll
push
decl
aam
push
lret
nop
and
cmp
repnz
pop
out
xor
pop
out
data16
call
rorb
sti
add
cmp
leave
aam
sbb
decb
lods
std
mov
int
mov
cld
xorb
movsb
mov
ficomps
jge
icebp
adc
jnp
pusha
jb
and
call
dec
in
cmc
imul
cmp
rcr
mov
and
aas
push
dec
repz
lret
adc
adc
call
add
sub
mov
push
in
xor
pop
ret
call
ret
incl
aaa
and
mov
sahf
xchg
mov
or
xchg
scas
ss
out
mov
pushl
fcoml
or
mov
inc
mov
int
lcall
inc
inc
mov
ss
and
loopne
sbb
jae
jae
lret
adc
add
fucomi
push
fstpl
pop
xlat
add
mov
add
or
imul
xchg
daa
sbb
or
outsl
loopne
mov
aam
cmpsb
cltd
dec
jp
pop
or
adc
pushl
cld
nop
arpl
shlb
add
js
pop
imul
lret
mov
clc
jge
sub
repnz
push
lock
lret
cmpb
mov
jmp
lahf
popf
rclb
cmp
mov
cld
and
arpl
imul
decl
dec
iret
jle
decb
jb
mov
out
movsl
pop
xor
inc
fisubrs
orl
cmp
loopne
cmp
inc
and
xor
ja
imul
and
ficoms
rcrl
xchg
xor
dec
ret
push
mov
jmp
lock
mov
ret
decl
addr16
mull
nop
and
pop
fwait
popl
repz
inc
mov
push
stc
sbb
cmp
out
inc
lcall
das
insb
adc
xor
xor
fmuls
popf
pop
jae
fcoms
push
push
jae
je
push
or
jg
out
fisubrs
or
les
popa
mov
mov
xor
mov
lcall
pop
lret
mov
sarl
nop
in
imul
fisubrl
xchg
mov
jg
mov
xor
stos
push
pop
insl
sub
dec
mov
incl
cld
push
and
sub
xchg
sub
dec
sar
add
mov
inc
cmp
imulb
in
in
ljmp
pop
rcl
add
jp
jge
test
pop
adc
call
cmpsl
js
jle
lahf
mov
pusha
dec
test
sahf
jp
push
shrl
dec
nop
or
in
dec
add
call
imul
dec
sub
push
sbb
dec
sbb
jecxz
jmp
hlt
mov
pop
lcall
loopne
dec
mov
push
mov
cmp
lods
jge
mov
pushl
xor
lea
xchg
mov
lcall
sarb
jmp
scas
lock
dec
pusha
inc
addr16
adc
pop
test
loop
mov
icebp
imul
cmp
or
adc
cmc
stc
iret
pop
das
and
bound
nop
into
cs
inc
cmp
pushl
cmp
adc
push
add
inc
cmp
icebp
lea
out
mov
call
out
dec
push
ret
aam
aaa
cltd
mov
jno
scas
push
ljmp
ds
jmp
fwait
cmc
addr16
movl
sub
and
sbb
xor
fcom
dec
scas
mov
fwait
mov
or
test
test
pop
fists
push
xor
out
jmp
insl
dec
jmp
adc
iret
or
lcall
pushl
fldt
mov
mov
sub
add
push
mov
call
lcall
lret
sbb
jp
aas
cltd
sub
fs
mov
jmp
lcall
cmp
add
adc
fs
ret
push
ds
cmp
cmpsb
dec
push
adc
pop
lock
cld
repnz
mov
dec
push
popf
fsubrl
pop
movl
mov
xor
je
fisubl
cmpsb
cmp
or
jge
out
leave
mov
jmp
adcl
bound
cmp
jle
add
das
mov
sub
lcall
das
cltd
enter
jno
add
mov
out
popa
or
stos
sahf
std
fdiv
rol
loopne
push
mov
mov
cmp
mov
subl
fwait
aaa
addb
jnp
call
out
jne
pop
lds
push
push
fdivl
js
mov
push
push
adc
mov
and
jg
pushf
psubd
dec
sub
movsl
mov
adc
fstl
jle
mov
cmp
sbb
bound
cmpsb
adc
cmp
ljmp
cwtl
mov
scas
mov
jecxz
sti
outsb
or
je
dec
enter
adc
xor
jmp
and
popf
in
inc
dec
dec
mov
negb
adc
mov
push
scas
or
push
pop
cld
decl
into
sbbl
mov
rcrl
push
add
inc
iret
insb
dec
xchg
xchg
jge
movsb
adc
push
jns
fwait
add
mov
sti
jbe
ss
pop
adc
in
jmp
insl
fists
lret
das
cmp
push
and
mov
mov
test
cmc
pop
std
pushl
fs
mov
or
add
scas
repz
push
ljmp
rcr
xor
mov
sub
mov
add
mov
je
cld
incl
int
mov
scas
inc
adc
push
jb
jno
cwtl
push
push
js
ljmp
sahf
out
and
cwtl
inc
xchg
or
outsb
imul
sub
lcall
sbb
dec
repz
clc
movups
outsl
loopne
jmp
push
jmp
or
or
mov
out
pop
fs
roll
push
cmp
xor
xor
stos
incl
pop
sub
and
dec
push
cld
sbb
jb
jg
push
jg
ljmp
or
push
dec
loopne
lret
mov
dec
inc
mov
xlat
gs
ljmp
adc
movsb
mov
scas
push
arpl
mov
jnp
push
and
xchg
daa
xlat
clc
js
call
cltd
aam
jno
and
sti
shll
lods
push
cmpsb
jmp
jp
sbb
push
sub
xor
lcall
out
inc
xchg
loop
sub
pop
fidivs
sub
pop
adc
lret
sub
jne
sbb
sub
lcall
push
test
out
jne
fidivrl
imul
aam
mov
stos
addb
mov
xchg
div
insb
scas
push
cmpsl
inc
ss
fldenv
sub
inc
clc
xchg
add
ljmp
in
out
or
mov
fwait
das
in
out
add
fistpl
mov
outsl
ljmp
jg
fstl
lret
xchg
data16
xchg
je
mov
pop
push
add
fcomip
mov
jb
lods
nop
and
lret
bound
sahf
xlat
jbe
iret
imul
call
jnp
xor
xchg
or
jge
repnz
push
inc
hlt
lea
lcall
sbb
pop
mov
mov
jnp
ret
in
mov
das
clc
mov
pop
in
test
mov
push
push
adc
pop
loop
popf
daa
sub
ljmp
push
movsl
repnz
rorb
mov
mov
fs
jg
dec
or
jge
sub
xchg
push
in
aam
sbb
add
jmp
fdivl
into
lock
jb
xchg
push
clc
rolb
out
push
dec
push
sar
mov
fldcw
incl
adc
aam
xchg
inc
mov
mov
push
insl
loope
call
adc
incl
cmp
in
out
ljmp
sahf
xchg
sub
loop
decl
jle
fsubr
cmp
repz
insb
adc
cmpsl
test
mov
jecxz
sti
ljmp
addl
mov
inc
into
dec
cmp
icebp
fiadds
cs
pop
adc
adc
pushl
insl
inc
add
or
cwtl
aad
jp
jo
push
jnp
sbb
bound
mov
decl
jae
push
dec
mov
dec
and
add
and
cmc
das
jns,pt
cs
incl
sub
and
xor
cmp
jne
pop
pushf
mov
lcall
or
lods
out
out
sbb
scas
and
pop
decl
and
stos
decl
shll
mov
out
add
pop
mov
xchg
fld
xor
jno
cltd
decl
mov
aam
iret
or
mov
xor
xchg
shlb
incl
mov
das
push
or
in
xchg
arpl
in
add
sub
mov
and
cmc
pushl
aaa
fcoml
jne
lret
nop
inc
pop
iret
loope
call
aaa
pop
fildll
cmpb
repz
sbb
jbe
jo
ljmp
and
popa
aaa
shlb
enter
ljmp
jo
mov
lds
mov
hlt
pop
bound
aas
je
movsb
test
in
fisttpl
cmp
stos
jbe
lock
mov
sub
push
inc
es
dec
rcl
pushl
sub
pop
mov
or
xor
test
sub
xlat
nop
scas
decl
adc
popa
std
mov
cmp
shrl
cmp
ljmp
hlt
sarb
sub
mov
aad
push
inc
push
dec
fcoml
jne
lcall
mov
and
in
mov
pop
xchg
and
lret
sub
and
out
outsl
xchg
fbld
sbb
incl
sahf
fistl
mov
push
leave
xor
jp
xor
dec
les
jno
enter
ja
movsl
into
add
imul
movsb
iret
ja
pushl
std
add
xchg
xorl
pop
outsl
sub
je
sbb
inc
dec
adc
mov
xlat
and
mov
adc
or
inc
int3
push
mov
jg
mov
das
xor
pop
scas
jb
popf
cmp
into
pop
outsb
test
sarb
out
outsb
pusha
and
pop
lock
and
mov
sub
add
inc
in
xchg
adc
push
std
lock
and
ljmp
insl
lods
add
ljmp
inc
xor
jl
inc
mov
out
dec
xchg
adc
mov
js
mov
fbstp
fistpl
inc
outsb
jl
and
jne
pop
mov
push
lret
xchg
mov
icebp
jmp
daa
mov
testb
out
jmp
aad
nop
xchg
aad
dec
pop
lret
cli
hlt
rol
cmpsb
les
inc
mov
dec
sbb
cmpsb
or
icebp
test
xchg
xorl
xchg
sbb
ret
stc
arpl
cmp
jmp
es
pop
push
popf
mov
pop
mov
sub
in
lock
js
decl
jge
adc
mov
mov
negb
icebp
xchg
or
ljmp
call
cs
xchg
shrl
push
lcall
dec
lea
cld
push
xor
pushl
mov
xor
fildl
jnp
andb
movsb
mov
push
call
std
das
mov
lds
sbb
xor
inc
aas
dec
loopne
cmp
pop
push
cmc
mov
push
vcvtdq2pd
mov
iret
mull
adc
mov
ret
xchg
arpl
movsl
jns
imul
lahf
xchg
add
outsl
aad
inc
addb
xchg
pushl
and
insl
movsl
xchg
pop
arpl
inc
lcall
xor
pop
jbe
jb
movsb
sub
lcall
inc
push
push
push
ja
loope
jns
insb
sub
cmpsl
mov
jmp
or
push
int
dec
jg
pop
sarb
jecxz
push
cltd
cs
leave
outsb
int
pop
sbb
imull
clc
call
fcomps
lea
out
pusha
imulb
mov
fidivrl
ljmp
into
mov
aaa
or
sub
ja
lea
repz
or
call
dec
aas
inc
call
mov
pop
add
pop
dec
sbb
or
dec
mov
or
rolb
sbb
rcrl
add
cmp
sub
rcll
mov
stos
pop
mov
cmp
ja
push
mov
popa
pop
rorb
popf
sbbl
inc
add
cmpsb
lods
xor
pop
lcall
adc
adc
inc
xchg
cmp
repz
jmp
mov
loope
loope
mov
call
fsts
jne
mov
inc
xor
mov
mov
jno
in
push
sbb
pushf
push
mov
scas
cli
sub
ja
sahf
shlb
sub
outsb
addl
sub
incl
push
cli
or
test
and
xor
xor
std
stc
mov
add
aam
bt
cmp
add
cmp
fsubrl
push
xlat
pushl
ljmp
dec
inc
fistl
xchg
jge
movsl
mov
out
icebp
lcall
incl
dec
lret
js
or
sub
loop
jo
and
lcall
mov
arpl
aas
jg
cmc
insl
cmp
adc
xor
dec
int
push
cmc
jmp
das
clc
ljmp
sbb
fnsave
mov
dec
inc
sti
or
sti
sbb
xchg
cld
jmp
aam
sahf
popf
cwtl
fcomp
dec
mov
inc
shlb
pop
xchg
fldl
xchg
sbb
scas
push
jns
mov
scas
add
arpl
xor
cli
push
decl
mov
pop
repz
mov
cmp
ret
movl
mov
ljmp
pushf
jmp
cltd
adcb
les
movb
mov
das
movsb
repnz
cltd
adc
ljmp
mov
jb
in
subb
pop
imul
xor
fwait
adc
and
jno
sub
xchg
jo
push
mov
pop
jg
mov
xor
addr16
or
push
lret
shl
xchg
loop
mov
fcomip
imul
fadds
xchg
push
cmpsl
mov
cmp
ret
movsb
lret
sbb
jns
incl
imul
mov
hlt
sbbb
test
andb
andl
dec
inc
pop
or
adc
mov
add
in
repnz
pop
xchg
push
into
xor
mov
jp
sub
pop
loopne
sahf
inc
cld
push
iret
and
jge
mov
call
fsubs
nop
shlb
fdivl
clc
mov
mov
xorl
mov
ja
in
mov
mov
lock
and
out
push
jecxz
into
inc
outsl
or
adc
fisubrl
and
jmp
adc
andb
ja
popf
hlt
mov
pop
hlt
fists
std
jp
mov
push
sbb
test
mov
push
out
push
out
sbb
movl
jg
outsl
clc
push
addr16
scas
xor
gs
xlat
adc
jl
mov
jno
imul
pushl
lcall
aaa
add
push
push
sub
sbb
pop
mov
lcall
adc
push
adc
inc
out
jmp
xchg
es
dec
hlt
adc
mov
push
lcall
in
push
scas
sbb
pop
lret
jmp
jae
mov
loope
sub
call
fucomi
imul
ss
sub
add
xchg
pop
fisubl
sub
dec
or
aas
cli
std
cmp
add
cmpsb
push
xor
aam
enter
sbb
aas
and
push
out
pushf
mov
adc
push
in
dec
xor
xchg
enter
mov
sub
and
call
fisttpll
mov
lea
adc
dec
mov
dec
mov
mov
dec
clc
pusha
jl
daa
mov
add
mov
popa
daa
sti
repz
ss
add
jmp
mov
xchg
adc
inc
cmpsb
cld
or
xchg
or
jo
dec
mov
adc
ljmp
cld
addb
popf
jae
xor
scas
xchg
and
je
push
cmp
dec
les
jmp
ljmp
sub
mov
push
cltd
push
inc
pop
and
or
les
repnz
sub
ficompl
and
mov
sar
pop
stos
dec
mov
sbb
loope
cmp
decl
cld
cmpsl
movsl
and
cwtl
mov
fwait
adc
pop
mov
pop
std
adc
mov
jo
sbb
jnp
pop
bound
inc
mov
mov
lods
xchg
mov
adc
rcll
jge
xor
call
xchg
add
shl
or
add
call
dec
repz
ret
daa
fildll
push
jmp
xchg
dec
lret
mov
mov
push
adc
cmpsb
or
xorl
loop
insb
mov
pushl
dec
pop
pmaddwd
dec
xor
pop
jbe
push
mov
xor
push
pop
dec
adc
dec
cmp
jae
push
mov
data16
loop
adc
jl
jne
or
addr16
fsubl
xchg
or
pop
movb
cmp
pushl
push
jbe
sub
fstpt
jmp
sti
insb
xor
cmp
pop
je
ss
pop
pop
sbb
int
xor
ljmp
pop
sub
push
scas
outsb
lock
addl
enter
cli
repz
subl
lcall
pushf
rorl
and
xor
xlat
xchg
rorb
test
mov
fldl
jmp
andl
sub
or
sti
sbb
decl
lea
jne
call
sti
cmp
lahf
dec
test
mov
add
loopne,pt
ljmp
mov
inc
mov
cmpsl
out
adc
rcll
dec
pusha
leave
cs
fcomip
cmpb
ljmp
aas
xchg
mov
fmulp
and
pop
loope
add
sbb
adc
and
dec
sub
xor
cmp
js
push
inc
cmc
xor
adc
cli
or
or
dec
xor
jmp
inc
add
loope
scas
das
cli
incl
ds
inc
or
nop
loope
lret
fs
mov
decl
pop
mov
sub
xchg
jmp
dec
cltd
or
xchg
mov
mov
out
xchg
lcall
stc
sub
into
into
push
ret
add
mov
call
outsb
repz
out
ret
shll
cmp
inc
sub
faddp
jg
sbb
outsb
push
mov
decl
frstor
and
and
pop
lret
repnz
push
pop
push
inc
and
push
inc
jns
fcos
call
seta
cmpsl
mov
insb
enter
push
shll
bound
fs
leave
xchg
adc
jmp
mov
in
fucomp
nop
mov
pop
sub
jns
mov
aas
and
std
fcomip
jmp
mov
scas
add
sbb
cmc
lret
fsubs
push
popf
rorb
call
fcoms
push
cli
mov
jnp
into
lock
push
aad
xor
jo
inc
test
dec
enter
pop
xor
cmp
ljmp
movsbw
dec
rorb
mov
pushl
mov
jno
xchg
sahf
dec
fcmove
mov
pop
mov
ljmp
lret
xor
ljmp
fidivrl
adc
cltd
out
mov
ret
fwait
roll
push
mov
jle
xchg
call
in
fiaddl
mov
cwtl
adc
pushl
stc
in
pusha
dec
or
fldenv
push
mov
scas
sbb
decl
xchg
ss
sbb
aaa
dec
push
sbb
fwait
fwait
pop
in
mov
push
or
inc
pop
and
and
int3
cmpl
xchg
out
lock
sahf
leave
jne
push
adc
decl
gs
ret
xchg
mov
sti
add
pop
jns
jg
mov
mov
push
cmp
mov
mov
cwtl
aam
rcr
popa
std
mov
sub
sub
lret
lahf
inc
and
icebp
jmp
enter
dec
inc
pop
inc
das
adc
adc
loop
push
and
sub
push
std
call
icebp
andl
mov
out
pop
les
lcall
cmp
pop
mov
inc
pop
xor
sbb
xchg
shll
and
sbbb
pushl
jae
push
push
cli
mov
sub
xorb
inc
xchg
into
pop
in
pop
sub
movsl
incl
mov
inc
xlat
icebp
lods
nop
bound
movsb
mov
jp
lahf
mov
mov
stc
divb
xor
or
ds
aam
dec
add
xor
jo
mov
sub
mov
adc
mov
sub
pop
or
incl
pop
aaa
jmp
xchg
inc
pop
enter
adc
pop
inc
push
shrl
sub
jg
shlb
cli
arpl
push
sub
ja
mov
mov
iret
mov
push
jno
pushl
jge
mov
sahf
or
in
mov
push
rolb
addr16
push
aam
cli
jnp
arpl
xchg
push
mov
cmp
sbb
repnz
loope
sbb
incl
cmp
push
ds
xlat
daa
jg
xchg
adc
fists
pushl
adc
negl
add
clc
pop
xchg
test
outsl
scas
or
arpl
incl
ss
jb
inc
ds
lret
ds
pop
arpl
xor
insl
mov
sub
adc
incl
mov
jb
adc
pop
mov
in
test
xor
lods
jl
mov
aam
loope
dec
push
shll
popf
data16
jmp
fistl
enter
mov
outsb
add
mov
cwtl
fcomi
in
iret
jl
aam
mov
sbb
lock
in
or
mov
adc
aam
pop
dec
push
xor
pop
dec
shrb
fbstp
sub
into
jp
jae
pop
jb
jecxz
ja
mov
int
rclb
das
imul
fcmovb
cmp
movsl
push
adc
dec
inc
fmul
add
icebp
movsl
int3
pushf
call
mov
aam
js
loopne
sub
mov
or
cmc
and
add
jne
adc
aas
jp
sar
pop
std
dec
ss
int
pop
orl
adc
repz
xchg
cmp
addb
jbe
pop
stos
lret
inc
add
jecxz
lock
cmp
push
sub
push
movsl
jg
fbld
jecxz
and
cltd
fsubs
cmp
cmp
mov
adc
pushl
push
and
mov
roll
mov
decl
mulb
test
sub
sbb
xlat
scas
std
hlt
xor
loopne
pop
push
loop
add
bound
dec
push
aas
add
or
out
pop
subb
dec
lods
call
nop
aad
popf
jnp
lea
dec
add
inc
cmp
cmpsl
mov
lods
jno
call
mov
add
fwait
xorl
add
shll
push
jecxz
sahf
pop
lock
lcall
add
push
bound
int
jge
mov
push
lahf
fxch
xor
fdecstp
inc
dec
pop
addl
out
fcom
fisubrl
in
lcall
push
movsb
test
push
mov
jno
lock
dec
mov
pop
xchg
mov
lcall
gs
jecxz
mov
clc
movsb
jb
inc
into
test
mov
decb
out
sbb
lcall
lods
pop
ficomps
and
cwtl
mov
sub
mov
mov
in
int3
sbb
mov
jb
dec
xor
sub
mov
testl
popa
dec
xchg
sbb
in
decl
les
aad
and
fstl
cld
arpl
clc
add
push
cmp
jns
int3
popf
cmp
or
rolb
imul
lds
movsl
ljmp
lcall
movsb
icebp
cli
adc
adc
ret
inc
sti
lds
or
cmpsb
mov
addr16
pop
arpl
ret
xchg
inc
inc
push
xchg
adc
js
jl
inc
xchg
pop
add
movsl
fldl
rcll
ljmp
stos
call
sub
cmp
loopne
sarl
icebp
cmp
push
decl
add
inc
rolb
mov
lods
add
cld
mov
jno
jno
mov
decl
xchg
in
jg
subb
je
iret
sbb
push
test
mov
in
scas
dec
ljmp
clc
insl
mov
loope
cmp
adc
outsl
clc
lret
xchg
in
cmp
jmp
das
ss
mov
mulb
add
push
jae
clc
dec
xchg
lcall
pop
adc
inc
aas
pop
and
ja
repz
lret
addr16
ja
rcrl
mov
push
iret
jo
mov
adcb
add
loopne
jmp
jno
lret
and
je
mov
sar
incl
pop
hlt
jle
or
push
push
jp
out
mov
mov
sub
mov
cld
mov
push
icebp
pop
movl
xor
dec
adc
jg
jmp
pop
mov
xchg
and
cltd
bnd
arpl
movsb
xor
mov
push
mov
push
mov
add
scas
icebp
adc
mov
repnz
pop
outsw
incl
xor
adc
sahf
stos
roll
push
cmp
mov
mov
cmp
cmp
mov
pop
mov
inc
sub
xchg
push
pop
inc
leave
lret
in
push
dec
xchg
inc
pushl
jo
sbb
ds
les
or
pop
stos
mov
add
lcall
mov
test
movsb
mov
or
fimull
call
int3
mov
jne
insb
lret
in
dec
int3
sub
fistl
test
mov
cli
and
xor
lods
addr16
stos
out
sub
pop
hlt
mov
outsl
ds
scas
xlat
orl
mov
add
mov
shrl
pop
in
loop
pushl
xchg
sbb
les
push
mov
mov
fldenv
inc
inc
sbb
stos
ss
inc
mov
fidivrs
pop
push
ficomps
scas
das
lods
xlat
or
arpl
pop
sahf
imul
incl
or
fistpll
mov
xchg
jnp
xchg
or
push
nop
cmp
cltd
cwtl
fsubs
xchg
clc
mov
pop
sub
sbb
jge
ret
movsb
cmp
and
in
cmp
jno
and
sahf
dec
addr16
fs
hlt
pop
arpl
mov
stc
dec
sbb
xchg
shrl
pop
lcall
das
mov
jmp
jmp
insb
mov
cmp
jle
push
imul
push
sar
aas
mov
cltd
or
cmp
add
jle
sbb
adc
adc
dec
sti
sbb
pop
mov
ljmp
insl
dec
xor
mov
mov
sbb
cmp
jecxz
decl
loopne
pop
mov
pop
inc
xchg
push
rclb
add
jle
mov
aas
imul
test
imul
scas
lret
jbe
jle
test
mov
ret
sub
decl
xchg
pop
sbbl
repnz
loope
xor
mov
sarl
push
repnz
lcall
pop
incb
cmp
mov
mov
enter
fwait
cmc
pop
shrl
int
adc
mov
jmp
mov
and
jae
call
insl
pop
and
jg
stos
xchg
sbb
rolb
push
inc
mov
outsl
add
xchg
push
fnop
cmp
adc
ljmp
test
lret
adc
test
adc
lahf
ret
jg
xor
jne
cmp
cmp
mov
iret
sti
xor
mov
add
ljmp
jle
outsl
xor
in
jno
push
mov
es
mov
add
inc
incl
push
xchg
ret
lock
xor
xchg
test
ret
sbb
shr
fscale
xchg
jnp
mov
in
movsb
and
call
ds
mov
cmp
mov
cli
gs
decl
add
dec
mov
sbb
fadds
add
call
and
stos
or
data16
ds
add
cli
dec
cmp
or
mov
dec
outsb
rclb
leave
rcll
dec
pop
push
add
ljmp
cli
ret
pop
adc
mov
hlt
xorl
dec
cmp
int
ds
jns
adcl
stos
dec
push
xchg
jecxz
shl
mov
pushf
cld
pmulhuw
loop
jecxz
xchg
sbb
decl
inc
insl
lods
sbb
fs
jecxz
mov
push
sbb
aaa
mov
stos
fwait
rcrl
call
xor
loop
in
pusha
lahf
scas
dec
mov
push
cs
dec
xchg
inc
mov
ds
pop
adc
inc
ljmp
aam
ret
jecxz
push
xor
gs
mov
xchg
xor
outsb
dec
mov
popf
cmp
hlt
jg
ljmp
xlat
cmpsl
jge
pusha
sbb
mov
hlt
and
push
pop
rcrb
out
pop
insl
mov
in
nop
pop
movsb
int
flds
scas
or
lahf
enter
push
arpl
xor
fs
lcall
push
push
cmp
jnp
and
inc
xchg
add
mov
ljmp
adc
jmp
xchg
aad
das
inc
xchg
aaa
cwtl
or
outsb
xlat
mov
and
sbb
sar
call
xorb
shlb
ljmp
sub
mov
std
stc
push
xchg
inc
imul
shlb
lock
dec
mov
call
les
add
add
loop
push
imul
ret
mov
fstpl
lahf
mov
sbb
cltd
adc
or
sbb
jns
sbb
lcall
test
repnz
adc
mov
fcompl
les
pop
fisubrl
ljmp
subb
inc
fisttps
jnp
and
ljmp
dec
insb
ljmp
pop
clc
fists
pop
sbb
aad
imul
mov
dec
and
mov
incl
adc
shlb
call
ds
jns
rclw
inc
inc
xchg
mov
fnstsw
push
imul
ljmp
push
loop
jb
pop
or
push
jae
adc
jp
call
loopne
xor
and
test
dec
or
sbb
sub
aaa
or
movsb
mov
inc
stos
pop
xor
cmpsl
add
outsb
sub
sub
xor
pop
sbb
pushl
and
mov
dec
mov
push
icebp
mov
jne
leave
rep
je
and
cs
cwtl
outsb
call
jg
xchg
sub
dec
shll
stos
bound
push
leave
pop
xor
xor
ficoml
fstps
ror
mov
lods
adc
jg
mov
mov
and
or
sahf
xor
dec
cmc
xor
pushl
in
arpl
imul
and
mov
sub
cmp
fidivl
out
sub
lea
loope
or
mov
lret
sahf
arpl
cmpsl
mov
mov
sbbl
sub
dec
fstpt
lcall
cmp
and
popf
test
hlt
adc
aas
dec
adc
les
pop
stos
mov
pushf
xchg
out
cmpsb
push
push
sub
xchg
call
std
inc
stos
jae
and
xor
mov
nop
enter
jg
in
or
sbb
fwait
jo
xorb
pop
mov
pop
xchg
pop
data16
sbb
incl
pop
push
arpl
ret
push
testb
in
sahf
stos
mov
mull
pop
in
jno
ljmp
mov
jmp
jge
xchg
cmp
pop
push
mov
test
pop
sub
push
inc
shlb
jecxz
sbb
lock
mov
daa
and
js
xor
insb
pop
fcompl
xor
js
sub
lret
movsb
mov
and
cmc
and
dec
jg
add
cld
psubsw
nop
lock
pushl
lods
xchg
pop
add
xchg
movsb
vpunpcklqdq
sbb
scas
lahf
pop
mov
test
imul
aam
cmovge
adc
xchg
adc
incl
inc
xchg
xor
dec
fcoml
xor
inc
push
jnp
movsl
iret
call
loopne
imul
les
xlat
xlat
inc
jg
xchg
jmp
scas
and
sub
dec
cmp
xlat
scas
mulb
add
mov
mov
call
xchg
movsl
popa
adc
loope
sub
scas
inc
les
xor
dec
call
fistpl
call
std
and
lods
ljmp
mov
pop
xlat
shll
insb
mov
or
imul
sbb
cld
push
cmp
lahf
nop
mov
add
in
cld
jp
jle
enter
or
stos
and
or
mov
and
jecxz
stos
scas
movsb
cmp
pop
cld
dec
pop
jl
xor
rolb
mov
sub
push
adc
lcall
fidivs
ja
add
jmp
mov
push
jae
cwtl
imul
bound
xchg
mov
pop
add
lret
aam
xor
cmp
sarl
sbb
mov
testb
cwtl
mov
pop
xor
and
in
push
in
push
lock
lcall
cmp
cli
sbb
mov
cmc
ficompl
daa
xchg
xadd
xchg
push
cmp
or
decl
dec
mov
mov
pop
cmp
fwait
mov
test
gs
ljmp
subl
inc
daa
adc
or
lcall
cwtl
arpl
call
iret
mov
adc
mov
mov
cld
test
pop
dec
xor
jmp
lds
jl
add
mov
mov
loopne
inc
mov
jmp
cmp
mov
mov
das
xchg
ficompl
cmp
xchg
loopne
sti
cld
cmpsb
icebp
inc
mov
pop
das
mov
push
cmp
mov
sbb
inc
cld
gs
mov
or
cmp
cmc
lcall
int
push
mov
push
dec
les
ds
jno
pop
fidivl
or
add
pop
aaa
cld
ljmp
mov
stos
movsl
mov
jb
sbb
fadds
sbb
mov
incl
jmp
pop
inc
in
jns
cld
sub
imul
jne
sahf
xchg
inc
arpl
pushl
test
push
push
movsb
mov
fistpl
das
cmp
fiaddl
js
pop
push
loope
push
daa
mov
or
lret
cmp
xchg
mov
jbe
jae
fistpl
lret
fwait
dec
mov
in
repz
sbb
push
in
mov
pushl
aad
pop
or
outsb
push
xor
push
hlt
aaa
out
fwait
int
ljmp
shrl
xlat
mov
or
adc
push
push
ja
mov
adc
adc
test
incl
jl
lea
dec
sbb
mov
pop
xchg
push
cli
add
jl
pop
jo
or
loopne
ljmp
adc
xlat
test
cwtl
jmp
push
cmpsl
mov
mov
mov
test
es
push
or
sub
out
jnp
mov
aad
outsb
ret
push
incl
sbb
data16
movsb
pop
ja
rclb
push
xlat
hlt
pop
into
xchg
pop
jmp
sbb
cld
jns
and
xor
lcall
popa
scas
ret
inc
pop
push
push
leave
cmpsb
jg
loopne
mov
fdivs
dec
insl
and
cltd
rorl
mov
pop
jmp
sbb
push
add
lock
adc
mov
sbb
inc
push
jno
out
fwait
cmp
jmp
and
xchg
push
pop
int3
and
and
pushf
mov
jbe
mov
dec
and
xor
cmp
std
adc
iret
mov
mov
inc
push
xor
ljmp
je
inc
cmp
movsb
adc
mov
sub
das
mov
aad
cmp
in
ljmp
cltd
in
sub
xchg
or
or
dec
in
lods
mov
inc
add
push
adc
movsl
mov
xlat
push
lock
insb
or
scas
add
mov
fildl
mov
mov
inc
js
bound
lcall
pop
pushf
and
movsl
add
dec
sub
sahf
xchg
mov
pop
fistl
and
add
aaa
inc
out
xchg
scas
pusha
inc
push
rclb
ret
scas
cmp
in
mov
push
repz
sub
es
xchg
xchg
cmp
cmp
mov
test
jge
inc
fstp
xlat
push
movsl
outsb
xchg
pop
insl
gs
sub
sub
jp
ljmp
cs
xor
mov
cmp
lret
out
xchg
inc
hlt
lods
mov
jp
adc
popa
jnp
mov
push
or
push
pop
dec
add
or
jmp
and
pop
push
push
adc
adc
mov
stc
sub
jg
xor
outsb
mov
es
enter
xor
inc
rcr
sahf
pop
jb
rcl
call
std
mov
inc
inc
dec
jne
sbb
inc
xchg
shlb
outsl
xchg
jge
add
jmp
cmp
lock
add
adc
pop
xlat
mov
call
xor
sbb
cmp
push
pop
movsb
sub
pop
pop
sub
out
icebp
scas
or
fst
stos
mov
call
xor
imul
scas
sub
pop
pop
aaa
dec
xlat
sahf
sti
out
dec
dec
pop
scas
das
add
out
mov
insb
lds
imul
std
jmp
and
fdiv
pusha
sbbl
xor
testb
dec
dec
sbb
shrb
push
mov
iret
fstpl
lcall
sbb
out
jp
add
ss
stos
inc
aad
mov
and
cmp
jecxz
jns
bound
mov
xchg
icebp
std
mov
pop
test
in
aas
xor
mov
or
adcl
data16
pop
push
fdivp
lcall
shll
mov
xchg
adc
lods
push
decl
pop
adc
cli
sarb
lahf
fidivrs
test
pushf
sahf
cmp
xchg
pop
pop
cwtl
fcomip
mov
dec
mov
fs
cmp
shl
or
mov
std
call
mov
cmc
sub
fistl
lods
jo
nop
or
pop
xor
pushl
notb
nop
sub
leave
out
push
gs
pop
sub
int
mov
mov
mov
fdivp
lret
xor
int3
or
cmp
mov
imul
stos
arpl
sar
fstl
call
mov
pop
imul
and
lahf
cmp
lods
xlat
testl
idiv
incl
sbb
inc
sbb
outsb
shr
es
enter
dec
sbb
aam
jmp
ljmp
int
addr16
andb
inc
dec
pop
enter
sbb
stos
lods
mov
dec
mov
sub
lcall
mov
dec
addl
mov
into
int3
sar
fisttps
inc
orb
xchg
fistps
pusha
loop
cmpsl
lret
sub
js
ljmp
incl
dec
inc
lods
jmp
loop
jnp
or
or
mov
dec
or
jne
sbb
xchg
xchg
sub
inc
sbb
jg
icebp
pop
xchg
xorl
shlb
add
fwait
int
push
test
decl
cmp
movsb
dec
jmp
aaa
int
aaa
mov
sbb
lahf
daa
lea
fstpl
jg
out
sub
pushl
das
cld
jl,pt
add
xchg
inc
cmp
mov
inc
pop
mov
dec
mov
jecxz
ja
mov
mov
mov
sahf
sbb
pop
pushl
insl
add
loope
roll
inc
adc
lret
mov
push
or
pushl
xchg
cmpsl
cmpsl
stos
mov
and
mov
and
pushl
inc
mov
test
decl
pop
or
jecxz
shll
pop
cmp
popa
sub
cmp
pop
pop
lods
int3
mov
cwtl
out
pop
incl
mov
leave
mov
cmp
enter
sbb
push
mov
xor
ficomps
mov
xor
mov
and
jb
fiadds
dec
pushl
gs
fdivl
adc
jge
mov
inc
and
mov
ret
adcl
xchg
cwtl
mov
test
or
ret
jle
pushl
cld
push
jge
push
call
lock
leave
fs
jmp
xor
mov
pushl
outsb
or
repnz
adc
xchg
mov
subb
clc
incl
cmp
cmpsl
inc
and
je
es
pop
rcll
aad
xor
jcxz
call
inc
inc
xor
loope
xor
add
adc
fnstcw
push
out
fisubrs
decb
mov
call
mov
pushl
mov
jl
mov
fwait
or
lret
subb
popf
insb
fisubl
lock
lcall
adc
stos
pop
lods
stos
mov
mov
jne
mov
mov
mov
out
incl
sub
push
pop
fisubl
cltd
js
icebp
mov
ret
push
pop
shl
imul
mov
testl
out
cmp
out
cmp
das
or
or
in
cwtl
in
icebp
sar
push
adc
repz
ss
stos
jns
mov
dec
mov
shlb
cli
jnp
out
cmp
push
adc
lret
cmc
sbb
sar
cmp
push
xlat
fisubl
fucomi
or
or
in
mov
jnp
xchg
std
test
mov
decl
cli
sub
cli
or
stc
add
mov
popf
loopne
cld
or
push
add
imul
lods
outsl
sbb
lods
shr
add
xchg
mov
cmp
xchg
jmp
push
jno
sub
pop
icebp
aam
push
mov
adc
xor
push
in
sub
push
jle
push
push
dec
adc
addr16
jge
cmp
sbb
sbb
hlt
dec
xchg
mov
dec
negl
mov
outsb
fisttpll
jl
sbb
add
sbb
out
int
mov
jg
cs
xchg
and
arpl
and
xchg
repnz
sub
es
ret
or
mov
roll
lods
push
test
push
scas
loope
decl
mov
mov
out
mov
es
repz
jl
and
adc
xchg
jmp
push
test
adc
addl
in
xchg
inc
cmp
or
or
mov
stos
fidivrl
or
add
dec
imul
inc
mov
cwtl
aam
jg
lods
sbb
ljmp
mov
pusha
cli
cltd
mov
sti
add
inc
mov
add
js
add
or
push
test
int3
xor
dec
sbb
push
dec
mov
cmp
adc
push
cmp
ljmp
pop
jp
cmpb
test
rcl
jge
jecxz
sub
lcall
push
leave
push
das
cwtl
mov
mov
loop
jo
in
cmp
fdivrl
jbe
xchg
mov
push
fs
add
imul
lcall
adc
sbb
sti
fcompl
cmp
or
dec
xor
popf
push
lock
out
jp
clc
call
cld
mov
lret
aad
ret
scas
pop
jecxz
adc
ficoms
cmp
xchg
and
rcrl
cmpsl
jp
sbb
xchg
call
pop
jg
dec
mov
test
fxch
stos
push
mov
mov
stc
cmp
pop
cmpsb
mov
mov
cmp
push
push
and
jmp
lahf
stos
repnz
dec
sbb
daa
andl
insb
into
inc
mov
sub
inc
movsl
sub
sub
popa
push
cmp
adc
aaa
or
jno
outsl
mov
or
imul
orb
push
sar
jmp
pop
dec
pop
pushf
or
pop
jmp
jg
ljmp
xchg
ja
aas
sbbb
ljmp
call
xor
sub
xchg
int3
dec
repnz
jle
cmpsl
repnz
cmp
incl
icebp
icebp
jae
mov
into
andl
sub
xlat
adc
mov
call
sti
dec
mov
sarb
mov
rcrb
add
adc
pusha
pop
repnz
jmp
inc
inc
mov
lock
cmpsb
jnp,pt
jl
cs
out
dec
inc
outsb
xor
scas
ljmp
call
imul
rcr
xor
clc
test
rcll
xchg
loope
jp
out
lea
fnstenv
aad
xchg
insb
cmc
dec
jl
int3
aaa
inc
cli
jg
cli
test
push
fdivr
incl
xor
lods
pushf
sbb
mov
sub
popa
pop
les
dec
decl
adc
push
ljmp
adc
ljmp
fdivp
pop
arpl
push
mov
arpl
adc
cmpsb
dec
mov
pushl
or
lea
xchg
cld
cli
or
pusha
test
cmp
mov
stc
insb
rol
mov
in
add
sbb
inc
dec
fcmovnb
bound
pop
push
inc
push
adc
fisttps
inc
and
pop
or
pop
cltd
cmp
mov
or
mov
pop
jnp
incl
lock
fldt
imul
push
sub
fs
adc
dec
pop
mov
out
sbb
fisubl
adc
in
stc
mov
dec
add
cmp
and
inc
outsl
mov
pop
loope
sbb
jg
call
mov
dec
cltd
lahf
inc
dec
movsb
rcl
aas
movsb
inc
test
push
aam
les
pop
test
fistpll
inc
inc
pop
popa
lock
cmp
aad
pop
pushl
cmpsb
mov
sbb
xor
fdivrs
les
orl
cmp
icebp
je
jmp
mov
cs
daa
mov
mov
xchg
aam
in
int
mov
mov
pop
inc
sti
ret
dec
pop
lret
pop
into
fldl
jnp
inc
cmp
ds
and
mov
pop
shrl
ds
mov
jmp
mov
loop
mov
rcrb
ds
incl
arpl
dec
sub
and
aas
mov
fnstenv
sbb
insb
int3
stos
cmp
and
push
xchg
lods
fs
je
mov
fsubl
cld
pushl
sbb
sub
jae
xor
fwait
jb
add
lods
sahf
and
stos
loop
into
lret
mov
xor
pop
notl
cmp
out
movsb
xchg
cmp
rolb
incl
or
aaa
add
ja
mov
mov
push
jnp
decl
add
jg
mov
adc
pop
sub
enter
jns
jge
mov
jmp
jb
pop
push
nop
lret
mov
iret
or
push
ss
ss
ljmp
shrb
fisttpll
mov
dec
xor
cmp
sbb
push
jp
dec
or
pop
std
decl
add
xor
int
lahf
inc
mov
pop
jne
or
icebp
cmp
sbb
adc
rolb
mov
jp
into
sbb
call
mov
push
mov
rcr
adc
pop
inc
outsl
pusha
push
stos
sahf
xor
ja
aas
rclb
adc
push
adc
sub
and
mov
stos
rorb
repnz
outsl
jecxz
inc
lcall
mov
addl
ds
scas
push
xchg
insl
test
push
dec
jnp
add
decl
jge
outsb
jno
and
push
out
and
sbb
or
pop
xor
das
sar
adc
data16
mov
fcomps
push
mov
ret
gs
jmp
and
or
push
push
sahf
out
inc
mov
mov
and
xchg
xchg
arpl
movsl
dec
sub
stc
xor
insl
sub
inc
jno
sbb
pusha
xor
test
lahf
dec
pushf
mov
lcall
jg
push
or
lods
cmp
adc
int3
movsl
sub
jne
add
inc
and
cmp
ficomps
stos
leave
jp
jmp
mov
pop
aas
pop
out
popa
mov
add
stos
mov
outsb
mov
mov
mov
movsl
fdivr
sub
jge
frstor
xchg
ljmp
mov
adcl
pusha
sbbl
mov
and
jmp
decl
and
pop
pop
mov
lret
js
and
mov
adcb
dec
sbb
lahf
lock
rcll
and
xchg
outsb
scas
lret
mov
aam
mov
add
pushl
mov
dec
and
jb
orb
push
repnz
mov
hlt
incl
jae
sbb
imul
fs
arpl
sbb
aaa
int
add
cmp
out
xor
jae
pushl
pop
lock
sub
dec
and
push
xchg
inc
repz
lret
shrb
pop
mov
mov
or
jmp
mov
inc
lret
jle
fnsave
jmp
lods
adc
rcl
add
xor
mov
cmp
and
mov
incl
pop
imul
icebp
or
xor
jmp
pop
adc
sbb
pushl
cld
or
test
test
aad
cmpsl
in
push
push
enter
mov
repnz
mov
jbe
frstpm(287
es
movsb
pop
insb
add
xchg
jle
insl
cmpsl
ljmp
mov
pop
stos
arpl
insb
push
sbb
xlat
jne
orb
sti
mov
jg
cmp
clc
mov
loopne
add
es
adc
sbb
mov
in
mov
mov
in
cmc
dec
lahf
in
hlt
mov
iret
mov
cmp
pushl
xchg
aam
sub
lret
push
xchg
cwtl
mov
mov
jno
stos
add
scas
pop
lcall
jl
sbb
xchg
jle
ror
mov
mov
and
incl
cmpsb
rorb
adc
mov
insl
cmp
sub
incl
sbb
lock
xor
lods
dec
out
fidivs
sbb
scas
inc
ljmp
aad
loop
mov
fmul
movsb
push
pushf
pushf
loopne
inc
incl
in
mov
cmp
movsl
js
xchg
jo
lds
xchg
decl
jbe
jg
pop
outsl
mov
sbb
and
orl
mov
sub
std
clc
xchg
fnsave
or
sbbb
mov
mov
or
repnz
mov
call
mov
leave
lods
xchg
mov
xor
pop
lods
mov
mov
lea
aaa
cmpsl
xchg
jb
xchg
sti
jbe
ret
or
popl
jg
add
jne
out
mov
and
les
jle
jg
jb
xor
ret
add
rorl
sub
mov
out
push
mov
pushl
shll
fstps
pop
inc
mov
or
pop
mov
sub
lcall
mov
faddl
sbb
lods
xchg
inc
cmp
lods
adc
jmp
pushl
pop
mov
jnp
mov
je
ja
dec
mov
mov
sbb
cmc
es
ret
mov
jo
inc
and
push
sub
leave
or
ljmp
fmull
inc
loop
addr16
aas
and
fldt
sbb
test
mov
std
add
movsl
imul
dec
rolb
jo
std
testb
out
jecxz
cmpsl
call
add
test
and
aas
test
dec
sub
xor
pop
push
push
ss
andl
icebp
stc
sub
in
movsl
or
sub
out
push
addr16
mov
stos
sbb
push
fisubl
add
lods
or
incl
cmpsl
jnp
cmc
mov
adcl
push
cld
repnz
jmp
xlat
dec
and
dec
xor
inc
pop
inc
dec
test
and
mov
dec
xor
sbb
daa
aas
call
add
add
sbb
xor
or
jbe
int3
push
daa
sub
add
lds
test
pushl
sub
xor
push
fcomps
cmp
or
pushl
add
xor
data16
pop
or
inc
push
les
dec
idivb
pop
add
fwait
pushf
cli
sarb
dec
nop
push
pop
xchg
test
mov
fiadds
decl
mov
add
lcall
cmp
xchg
scas
stos
or
jmp
lock
or
jle
cmp
jae
test
push
fcmovu
push
sbb
addr16
jmp
jle
xlat
inc
lods
lahf
dec
dec
fmul
pop
sub
lret
sub
aas
jnp
insb
adc
lock
jmp
lods
lods
or
fimuls
loop
cs
cmc
lock
add
xor
lcall
stc
push
rorl
loope
xor
mov
popa
pop
aam
and
pusha
rclb
pushl
lret
inc
bound
xor
jge
lcall
add
bound
mov
and
insb
lea
pop
addr16
hlt
jl
xor
je
mov
adc
cltd
sbb
testl
repnz
push
cmpsb
ljmp
decl
bound
testl
xchg
cmp
sbb
xlat
pop
sbb
sti
stc
and
ljmp
sub
sbb
mov
pop
pop
xor
push
stc
mov
mov
pop
lods
hlt
xchg
or
call
sub
cli
shrb
mov
pushf
sbb
lcall
aad
xchg
pop
pop
lahf
das
lods
jecxz
pop
pop
notl
ret
int3
aam
jge
lcall
insb
mov
test
mov
les
mov
lahf
inc
lcall
imul
jle
push
xor
cli
sub
mov
popf
sahf
or
jo
decl
inc
ds
stc
stos
adc
faddl
and
clc
fwait
xchg
jmp
mov
add
fbstp
outsl
pusha
shrl
mov
mov
mov
lcall
pop
mov
mov
aad
push
sbb
sbb
adc
add
mull
sub
xor
push
test
push
cmp
out
pushl
xchg
test
cmp
mov
aaa
iret
leave
cmp
out
pop
sub
sub
xchg
pop
dec
push
into
cmp
sbb
push
push
or
nop
stc
test
push
fdivrs
mov
aad
jmp
lock
add
or
jecxz
ljmp
into
cltd
js
sar
loop
out
ret
sbb
mov
mov
decl
lcall
pushf
lods
jg
fadds
jmp
sbb
cwtl
dec
into
mov
mov
jno
fs
gs
test
shrl
cmp
std
aas
ret
pusha
cmp
adc
jo
and
and
fcomip
cwtl
nop
inc
out
data16
add
loope
mov
out
pop
inc
lcall
pushl
mov
loope
and
or
add
xor
aad
jo
cli
xchg
and
dec
lahf
push
cmp
cmp
xlat
ret
ja
test
xor
stc
xchg
sbb
incl
mov
pop
in
imul
stos
out
addr16
faddl
test
inc
negl
icebp
cmp
incl
and
push
push
enter
add
xlat
inc
rcrb
cmp
out
sbb
pop
add
jmp
mov
mov
mov
ror
fs
pop
jmp
dec
lret
jp
jbe
mov
sbb
push
shrb
or
incl
cld
mov
jmp
mov
fldt
jmp
mov
mov
mov
pop
lods
ret
frstor
sbb
aad
fimull
adc
sti
icebp
jmp
push
mov
sbb
fwait
mov
std
dec
std
notl
mov
jo
push
orl
js
stos
jno
scas
inc
scas
push
pop
push
push
roll
or
jno
aas
test
repnz
mov
push
jns
inc
adc
aad
lcall
xor
rorb
dec
inc
hlt
out
jg
add
movsl
mov
push
shrb
mov
scas
mov
push
mov
fcmovnb
in
pushf
call
mov
aaa
add
orb
and
or
jne
data16
jne
call
std
lock
jbe
mov
pop
lock
or
ss
or
pushl
sub
xchg
sbb
fdivrs
shlb
stc
inc
xlat
sub
mov
ljmp
inc
leave
test
daa
mov
clc
mov
jge
and
sarb
lcall
xchg
arpl
jae
mov
mov
in
dec
in
xchg
jne
scas
jo
xchg
pop
pushl
dec
inc
inc
sbb
xor
and
je
push
mulb
xchg
inc
push
lret
sbb
jae
sbb
movsb
sbb
clc
bound
cltd
aam
call
es
out
dec
or
jb
mov
inc
shll
push
stos
and
jle
inc
into
outsb
xchg
mov
xchg
popf
jne
xor
jmp
scas
arpl
in
push
push
adc
dec
or
jecxz
jne
nop
adc
jmp
fdivrl
dec
adc
sub
cmp
jns
cli
mov
cmp
jmp
cltd
mov
ror
loop
cli
jns
ret
push
jecxz
insl
add
adc
or
decl
mov
mov
movsl
test
adc
pop
dec
push
dec
jecxz
subl
incl
push
dec
insb
lods
mov
inc
dec
vmwrite
cmp
and
adc
cmp
sbb
or
mov
mov
jmp
cltd
sbb
push
jecxz
ljmp
jp
jmp
popa
outsl
push
outsb
add
les
test
dec
sub
dec
into
dec
ret
decl
inc
mov
and
and
fimull
mov
jmp
pushl
aam
cmp
add
inc
and
outsl
iret
xlat
mov
push
adc
scas
cli
cmp
xchg
pop
je
mov
repz
cmp
stos
dec
push
nop
adc
xor
decl
sti
adc
xor
or
out
sbb
arpl
or
pop
int3
je
mov
fcomps
and
fsts
call
incl
mov
or
and
repz
push
and
add
sub
xchg
mov
push
ljmp
aas
jnp
dec
mov
fisttpll
cmpb
adc
sarb
leave
jp
jo
pop
insl
cmp
dec
jae
lods
xchg
dec
cs
dec
pushf
fsubr
xor
loopne
test
out
pop
andnps
or
jg
pop
or
sbb
iret
ret
fstps
pand
scas
lods
mov
call
test
in
push
gs
ljmp
mov
or
hlt
mov
push
cld
dec
dec
xlat
xchg
in
jge
sbb
not
mov
jno
adcl
pop
xor
imulb
fs
adc
push
rorl
pop
outsl
ja
mov
mov
aaa
call
mov
sbb
test
lds
jp
or
mov
popf
hlt
push
inc
add
int3
push
loop
or
add
aas
lcall
lcall
fisttps
and
out
lds
in
xchg
in
mov
pushf
jl
xor
fbstp
cmp
mov
cmp
shll
cmpsl
outsl
jp
out
pop
stc
push
fwait
dec
and
pushl
xor
or
and
je
cli
adc
mov
push
lods
aam
adc
scas
cli
popa
mov
leave
push
lahf
jecxz
ret
arpl
bound
mov
in
pusha
adc
call
cwtl
mov
xchg
xor
cmp
and
movsl
xlat
or
mov
nop
sub
or
shl
mov
jmp
jecxz
das
sub
push
cld
dec
clc
sbb
jmp
and
sbb
add
clc
or
je
pushl
out
mov
lock
push
dec
add
mov
inc
pop
std
jge
pop
ficoms
dec
inc
ficomps
ret
fldenv
lds
push
mov
insl
mov
scas
pop
fcoml
jg
jnp
cmp
bound
adc
in
call
cmp
push
fcomip
incl
xor
lods
cmp
imul
jbe
xchg
scas
or
jnp
or
cmp
mov
sti
add
jl
mov
jg
lcall
pushf
push
movsl
ljmp
mov
xchg
cs
ljmp
ss
fcompl
enter
in
mov
push
mov
out
lret
jno
adc
xorl
loope
aaa
mov
test
cmpsb
incl
mov
jo,pt
insb
and
mov
aaa
xchg
cmp
push
vaddsubps
incl
xor
fisttpll
adc
xchg
les
mov
jns
inc
xchg
mov
loopne
inc
xlat
je
outsl
add
insl
lea
cmp
sub
lcall
pop
sahf
xchg
cs
cmp
lds
fwait
cmp
push
in
jno
orl
std
hlt
mov
push
loope
jmp
jmp
rcrl
fmull
rorb
int
mov
jp
icebp
fadd
rcr
test
mov
pop
mov
push
xchg
mov
fwait
adcb
lcall
or
cld
sahf
jns
mov
in
push
xchg
dec
push
jbe
cmp
and
out
scas
inc
mov
ljmp
pusha
pop
push
sbb
daa
add
iret
pop
and
jo
add
sub
ljmp
call
fmul
add
mov
int
mov
leave
shrb
lcall
loop
out
incl
push
int
xor
mov
and
add
mov
inc
icebp
dec
clc
notl
jg
movsl
movsl
cld
out
arpl
pop
cmp
or
cmp
divb
and
xchg
inc
lock
lcall
xchg
mov
cmp
or
and
xchg
ds
jb
jb
xchg
repnz
jmp
mov
fnsetpm(287
repnz
add
roll
dec
rcrl
cmp
jecxz
decl
jne
xor
out
mull
sub
dec
rcll
inc
or
incl
dec
fldcw
cmp
sub
sbb
jae
aas
mov
sub
or
orb
stos
call
sbb
sbb
in
jmp
std
jno
gs
out
jmp
into
sub
clc
enter
call
jns
iret
mov
inc
ljmp
mov
imul
test
es
jbe
call
andl
insl
pop
insb
adc
insl
mov
and
cmp
nop
add
out
add
shrl
add
adc
mov
inc
out
cmpsb
andb
icebp
lock
mov
push
adc
mov
incl
js
rep
fwait
shll
mov
mov
add
sub
xor
pushl
pop
lret
es
notb
xor
test
push
inc
outsb
xor
ja
push
or
fildll
and
enter
xchg
fcomps
test
shlb
fstpt
call
lock
push
sti
xor
cmp
outsl
mov
ljmp
dec
sti
lcall
push
popl
loop
xor
ja
push
cli
xchg
jl
inc
jg
enter
pushl
jbe
addr16
test
xor
imul
daa
sahf
enter
jns
adc
adc
je
pusha
sbb
jmp
fimull
adc
imul
shrb
in
lds
mov
push
cli
and
shrb
stos
or
pushl
lods
aam
cwtl
repz
xchg
adc
xchg
xchg
sbb
in
or
cwtl
sub
xor
push
aam
cmc
decl
and
push
push
push
sbb
jmp
jo
daa
push
mov
lcall
jmp
ret
xor
arpl
stos
xchg
loopne
rolb
cmc
incl
in
mov
ret
out
es
mov
aam
cmpb
mov
jp
jg
jmp
sbb
sbb
jo
mov
xchg
dec
fistpll
inc
inc
jmp
stos
mov
inc
pop
push
sub
or
add
cmp
add
mov
adc
push
loopne
testl
jecxz
add
or
call
xlat
adc
pushl
std
testl
xchg
icebp
or
jl
dec
mov
mov
es
decl
lock
sub
push
xor
xchg
cmp
pop
mov
jge
incl
mov
repz
pop
testb
lds
rdtsc
sub
aam
rcrl
ljmp
mov
movsb
xchg
mov
xor
cmpsl
push
push
sahf
repnz
pushl
push
ret
into
xchg
mov
loopne
pop
cli
and
lds
push
cmp
add
jmp
pop
cmp
repnz
popa
out
cmp
adc
aas
scas
adcb
enter
mull
xchg
xor
call
shl
adc
add
in
push
push
sti
movsl
xchg
fcomip
fstps
jg
jecxz
dec
add
rorl
add
cltd
mov
mov
andl
jae
lret
incl
jbe
repz
mov
push
popa
fcmovbe
push
cmp
dec
pop
xchg
inc
push
sub
testb
call
push
pop
insl
aad
cmp
mov
cmp
stc
jecxz
jle
ja
lods
xlat
jmp
dec
sbb
push
incl
in
mov
adc
jbe
mov
or
inc
mov
xchg
cmp
cli
in
jb
pop
sub
pop
mov
movsl
push
dec
sbb
push
xchg
inc
lods
scas
jg
in
sub
sub
pop
push
fidivl
lock
popf
sub
mov
movsb
and
lods
add
sbb
cld
pop
or
ds
mov
and
lcall
jg
scas
fnstenv
loop
xor
lods
popa
xchg
leave
adc
shl
ret
lcall
ljmp
subb
fsubl
mov
movsl
aaa
xchg
daa
rorl
xchg
xor
hlt
sbb
ds
test
ret
stc
bound
insl
ret
sbb
xchg
xchg
inc
mov
fcomip
jmp
sub
mov
xlat
inc
outsb
cli
lock
jmp
mov
sub
out
fwait
std
add
cld
xor
das
out
fcmovne
enter
mov
std
in
jo
not
ror
mov
pop
pop
mov
fwait
xchg
outsl
scas
je
mov
shll
fildll
pusha
jp
in
cltd
fildl
adc
and
stos
clc
fisubs
jg
aaa
push
in
call
push
adc
cs
pop
or
call
sbb
repnz
inc
sbb
bound
sbb
mov
sub
jp
aad
scas
mov
repnz
push
pusha
iret
insb
iret
lds
xor
outsl
cmp
mov
pushl
stos
xchg
xor
jle
outsb
testb
sarl
mov
jg
inc
stos
mov
insl
icebp
sub
mov
pop
lahf
pusha
dec
jnp
lock
ljmp
jo
push
int3
mov
andl
insb
push
out
mov
fidivrs
fwait
mov
mov
loopne
push
mov
stos
rorl
cmpsb
call
das
sar
icebp
or
loopne
test
adc
in
cmpb
pushl
insb
inc
cmp
lock
add
les
add
sbb
call
aaa
xchg
mov
leave
je
shrb
aad
jp
jno
sbb
fsubl
incl
iret
xchg
mov
mov
pop
fsub
xchg
je
arpl
dec
xchg
push
sub
pop
mov
mov
pop
jge
add
fwait
cmp
cmp
bound
xor
ljmp
cli
lcall
clc
sti
mov
push
mov
ds
pop
push
decl
jg
in
sub
lea
jne
pop
cltd
xadd
mov
pop
cld
outsl
jb
xchg
pop
xor
mov
in
xchg
das
shlb
int
ficomps
pop
insb
outsb
adc
mov
pop
inc
jne
adc
cwtl
pop
fbstp
ljmp
inc
sub
pop
dec
and
push
pcmpeqd
sub
push
icebp
decl
sbb
mov
adc
or
fistpl
in
adc
lcall
and
adc
or
cmpsb
ss
cltd
mov
shlb
call
push
inc
outsl
and
mov
inc
pusha
ds
and
imul
call
call
or
xor
gs
movsb
mov
dec
rcr
popw
mov
cmp
negb
mov
daa
lock
in
sub
inc
lret
add
mov
xchg
push
mov
shlb
fsubp
adcb
movsb
mov
rcl
mov
jne
lcall
mov
sbb
mov
scas
je
int
aaa
data16
push
pushl
rcrl
or
bound
mov
pop
es
xor
out
pop
out
or
movsb
in
push
lds
out
jg
dec
pop
add
pop
fidivrl
cs
loopne
nop
out
xor
fimuls
ficompl
cli
es
inc
adc
sbbl
scas
or
sub
jmp
movsl
xor
pop
cmp
ret
inc
jbe
pop
pushl
es
bound
pop
lahf
aam
cmp
mov
ds
stos
in
in
jmp
xchg
addb
push
std
filds
and
repz
add
out
mov
push
jmp
test
lcall
int3
jae
nop
jmp
sub
bound
mov
lods
cltd
jecxz
int3
je
adcb
pushl
ja
jmp
loope
in
or
pop
aas
dec
movsb
sub
push
or
jmp
sub
popf
xchg
or
repz
pop
or
adc
out
mov
jns
out
hlt
pop
aam
aaa
std
incl
pop
sarb
sarb
sbbb
movsb
ret
cwtl
inc
mov
pop
xor
xchg
mov
shll
jp
adc
imul
mov
mov
push
aam
and
inc
dec
or
cmc
cmp
imull
add
ljmp
pop
inc
pop
jmp
xchg
negb
mov
add
mov
or
jg
movsl
inc
dec
int3
jecxz
fmull
mov
mov
lcall
cmpb
jmp
fs
push
push
outsb
sbb
dec
leave
lea
adc
sahf
sbb
lds
lods
ljmp
push
bound
sbb
sub
sti
shll
push
incl
push
dec
sbb
mov
mov
dec
ljmp
movsb
pop
out
mov
data16
cmc
mov
out
stos
or
or
xor
ljmp
jo
dec
and
insb
push
jmp
rol
ds
sub
push
imul
call
inc
adc
jb
repz
mov
add
repnz
daa
test
dec
or
call
std
in
inc
lods
ljmp
mov
out
test
inc
add
mov
insb
cmp
push
out
outsb
inc
sub
jno
mov
pop
lret
pop
filds
idivb
cmp
std
cmp
stos
xor
sbb
pop
dec
int3
mov
lcall
stos
mov
test
or
psubsb
sbb
cmp
ljmp
sub
into
into
lea
out
dec
aam
clc
call
lcall
scas
push
ret
push
sbb
mov
jbe
push
jg
mov
clc
jmp
xchg
dec
or
mov
push
in
or
cltd
dec
inc
jl
arpl
jo
lcall
xchg
fsubrl
xchg
je
pop
shrb
sbb
inc
mov
adcl
bnd
mov
stos
add
lds
xor
cmp
mov
and
pushf
call
pop
push
xchg
pusha
push
inc
movsb
jae
push
pusha
jo
cmp
dec
into
in
pop
lea
or
lds
mov
sub
fcomip
test
xor
add
das
outsb
int
or
sbb
addl
adcl
call
xchg
sub
loopne
int3
lds
jg
fcmovb
cmp
ret
in
popa
hlt
shrb
push
cmp
xchg
subl
incl
mov
pusha
popa
or
iretw
push
aas
testb
js
xor
mov
sahf
sub
pop
or
jns
cmc
jbe
cld
out
sbb
flds
mov
rclb
cmp
cmp
stos
sbbl
incl
cld
es
mov
out
sub
orb
mov
xorl
mov
aam
pop
mov
inc
push
cmc
idiv
jmp
pop
aaa
test
cmp
inc
int
mov
or
sbb
ss
sti
je
inc
and
xchg
cmp
fistps
adc
or
inc
ss
cmc
jae
scas
sub
ficompl
int3
sbb
std
cmp
jno
cmpb
mov
pop
mov
push
and
lret
cmpsl
push
js
call
mov
imull
pushf
dec
dec
push
lcall
aas
and
std
test
incl
xchg
sbb
xor
dec
mov
adc
call
push
mov
notb
in
in
adc
mov
sbb
in
mov
scas
xor
jmp
sub
scas
push
sbb
popa
out
pop
sti
arpl
xchg
iret
imul
pop
xchg
nop
jle
mov
mov
dec
xor
popa
xor
popl
mov
bound
aad
adc
inc
jnp
cmc
lret
cvtpi2ps
mov
ljmp
cmp
xchg
xchg
lcall
not
leave
cmp
cmp
cmpsl
adc
lods
rclb
call
xchg
jbe
fadds
loope
or
or
mov
je
jns
adc
mov
inc
dec
loopne
cmp
enter
push
push
dec
mov
jg
push
add
and
mov
sbb
cli
mov
sar
lcall
and
popf
sbb
enter
hlt
insl
sub
and
mov
pop
fsubs
mov
inc
test
testb
mov
lods
xchg
movsb
popa
fisubrl
mov
dec
mov
cli
scas
push
cmp
in
mov
mov
dec
shrl
or
push
cmp
mov
dec
mov
push
add
or
jmp
inc
fcompl
leave
ret
aas
cmp
out
pusha
push
mov
mov
xchg
addb
inc
bound
xor
push
mov
adc
decl
inc
mov
outsw
loopne
jg
xchg
mov
adc
and
ds
in
cmp
and
cmp
push
cltd
or
xchg
divb
push
ret
jb
jl
out
or
addr16
in
adc
lock
push
push
ret
addb
mov
sub
test
push
gs
psrld
lcall
inc
pop
pop
mov
aaa
mov
xor
cmpsb
lods
dec
mov
push
je
mov
sarb
call
out
pop
sub
mov
enter
lret
decl
jp
and
lods
das
xor
sbb
cmp
push
sbbb
repz
lea
mov
push
pop
sahf
or
inc
and
xor
subl
stc
call
scas
clc
cmp
adcl
jle
test
jb
fdivrl
addb
popa
mov
push
mov
mov
ljmp
push
addr16
cli
test
push
dec
in
sti
sub
and
jg
pop
pop
jmp
int
inc
add
dec
punpcklbw
jge
sahf
lcall
sbb
push
addr16
or
je
cmp
repz
and
pop
roll
fcmove
xor
inc
nop
scas
les
fbld
scas
and
sbb
adc
addb
ss
sbb
dec
dec
insl
bound
mov
addr16
stos
push
push
sub
ret
xor
inc
adc
add
sub
sbb
or
imul
lahf
lock
or
dec
fdivr
pop
enter
aaa
iret
std
mov
jmp
sub
lahf
jmp
sti
mov
pop
loop
std
dec
popa
pop
lods
mov
pop
insl
rorl
mov
mov
call
sub
xchg
sbb
cmpsl
push
add
cmp
pop
aam
decl
pop
aad
pop
and
mov
ss
jmp
cltd
fstl
pop
jno,pn
mov
decl
sarb
pop
fsubp
imul
gs
mov
mov
cmp
inc
movsl
sub
call
popa
and
mov
jnp
repnz
imul
std
xchg
gs
lcall
add
pushl
lret
ret
repz
xor
sub
out
loop
lcall
rcl
jg
mov
xor
mov
popf
sbb
daa
sbb
dec
mov
imul
jmp
ret
sbbb
aas
insb
dec
les
dec
mov
data16
addr16
sbb
ljmp
addb
shll
or
push
aad
jmp
xchg
shlb
push
xor
sub
or
fwait
sbb
mov
div
int
mov
jg
ljmp
sbb
xchg
mov
mov
mov
leave
xchg
call
lcall
jge
mov
jp
insb
push
stos
int
pop
pop
enter
pop
sub
lcall
push
clc
jl
mov
mov
imul
popf
sub
push
fiaddl
lock
cmp
shlb
ss
sub
mov
xchg
mov
rcll
sbb
mov
fs
push
outsl
add
inc
mov
repz
cmp
out
lods
inc
mov
and
push
adc
add
ds
stc
sbb
insl
inc
cmpsl
cs
pop
ficomps
adc
lcall
mov
jp
pop
and
mov
cmpsl
out
and
push
mov
mov
pushl
pop
mov
push
ret
mov
jo
test
jl
and
pushl
or
movsb
and
mov
std
js
xchg
mov
cmp
xor
push
or
jmp
dec
lds
fsubp
push
shll
adc
xchg
pop
jnp
addl
add
scas
jmp
pop
cld
in
or
sbb
ss
ja
shlb
imul
pop
fsubrs
xchg
xlat
pop
repz
jae
cs
mov
pop
ret
dec
dec
jl
incl
pushf
push
imul
test
dec
mov
add
xor
ljmp
jb
cmpsb
sbb
cmpsb
fsts
sbb
inc
mov
fwait
lock
scas
cli
mov
call
sbb
in
addb
xor
xchg
xchg
loopne
lock
pop
xchg
jle
dec
incl
push
arpl
movsb
sbb
daa
cwtl
roll
insl
dec
mov
pop
dec
movsb
mov
jmp
fucomp
or
adc
addl
pop
fwait
mov
pop
adc
loop
push
js
sbb
pop
sbb
inc
xor
cmpsl
out
cmp
and
jmp
xchg
loope
pushl
mov
sub
pop
push
fists
push
lea
jno
cmp
jbe
jmp
les
std
lret
mov
ret
xor
test
stc
mov
adc
push
sar
inc
fcmove
cs
ljmp
loop
fwait
mov
nop
cmp
bound
punpckhbw
inc
lods
lea
ljmp
lods
xor
and
ljmp
int
jo
jmp
cmp
fldenv
jo
ljmp
aam
sbb
dec
dec
and
mov
mov
fstl
push
lock
mov
mov
call
add
cwtl
xor
rcrl
scas
push
adc
repz
mov
lcall
in
roll
cld
lods
dec
shl
mov
dec
mov
xlat
aad
aad
out
sti
lcall
xchg
push
stc
push
int3
xor
jae
loop
dec
ss
dec
sbb
sbb
mov
xchg
mov
jne
cmp
movsl
or
insl
adc
dec
das
push
out
cli
sbb
outsb
sub
or
stos
add
in
mov
mov
pop
dec
xor
cmpsb
mov
pop
sub
mov
pop
scas
pushf
les
dec
push
jg
mov
call
jns
lret
and
jo
ror
rcl
add
sub
inc
int
rorb
pushf
call
dec
sbb
jb
mov
mov
fdivl
xor
pop
cld
pushl
push
ljmp
das
fiadds
mov
xor
lcall
rcrl
and
cmc
popf
mov
scas
rcl
scas
call
sbb
inc
repnz
pop
mov
dec
call
mov
sub
adc
jmp
cmp
daa
dec
mov
push
icebp
pop
sbb
ret
inc
jmp
mov
ret
pop
mov
xchg
sub
mov
cmp
repnz
outsb
in
mov
mov
xchg
mov
mov
test
lahf
icebp
mov
jecxz
ljmp
push
push
xchg
cmp
mov
push
rcrb
mov
movsb
mov
xchg
stos
and
push
inc
pushl
or
or
dec
stc
ret
xchg
mov
repz
add
xchg
repnz
push
jnp
xchg
fisubrl
lds
stc
jbe
decl
and
test
outsl
cli
mov
sub
addr16
sub
sbb
add
sti
jno
ret
addr16
mov
addr16
mov
xchg
cltd
or
adc
dec
pop
cmc
xchg
mov
dec
jno
lret
sub
cmp
jns
fstps
lcall
es
test
sti
pop
cmp
daa
xchg
jp
mov
pushl
jmp
test
jno
fldenv
movsb
and
mov
out
add
sar
push
adcl
out
and
sahf
mov
mov
jl
mov
jmp
divb
fisubrl
sub
xchg
ds
lcall
and
mov
int3
mov
iret
mov
jnp
fistpll
lock
incl
sub
inc
dec
ret
mov
loopne
scas
sub
adc
and
inc
jg
xchg
ret
jle
dec
jmp
jmp
mul
xlat
stos
adc
movsl
stos
pop
push
call
dec
and
testl
cmp
movntq
sub
mov
pop
loopne
arpl
cmp
xchg
outsl
cmp
decb
outsb
imul
jle
movsb
movsl
cmpsb
add
jbe
cltd
bound
ljmp
scas
mov
lock
mov
xchg
push
lcall
lcall
divl
rclb
aad
add
and
cmc
lds
xor
dec
cmp
adc
clc
popf
inc
xchg
popf
pusha
leave
ficoms
push
fistpll
pop
das
clc
jmp
mov
xchg
xor
jge
sub
pop
sub
dec
sysexit
push
adcl
pop
filds
rorl
jmp
mov
cs
fwait
pushl
incl
imul
jecxz
or
push
jg
sbb
or
stos
cmp
aas
inc
push
cwtl
xor
mov
cmp
sbb
cmp
pop
fcomps
insb
mov
adc
or
push
in
inc
jl
push
pop
rcr
mov
imul
decl
cmp
popf
bound
add
sub
mov
aam
lock
js
int3
pop
mov
pop
sti
scas
push
or
xchg
hlt
xchg
fimull
pushf
test
je
cmp
mov
jmp
fstpt
jp
xor
movl
mov
mov
repz
ds
ljmp
adc
fsub
mov
movsl
loop
outsl
icebp
push
fstl
sar
lcall
sub
pop
jnp
or
pop
fdivrs
adc
lods
bound
or
scas
add
leave
lcall
lret
sarl
in
or
fsubrl
xchg
fwait
jg
add
out
addl
fldt
ljmp
in
into
lock
lock
lock
lock
call
push
enter
push
and
rolb
xchg
cltd
imul
mov
jg
aas
inc
add
cwtl
jnp
cmp
cli
jg
fcmovnu
adc
inc
out
and
aam
mov
outsb
xor
les
mov
push
inc
mov
fdivs
ficoml
std
decl
outsb
mov
push
or
adc
cli
decl
movsl
lcall
add
bound
fisttpll
daa
imul
mov
incl
pop
aam
fidivl
pop
sbb
jo
xchg
imul
sub
mov
mov
imul
shlb
iret
mov
data16
mov
push
and
ja
mov
pop
sub
jbe
sub
addr16
movsb
jge
mov
jg
fcompl
in
insb
dec
test
lds
sbb
dec
xchg
xor
idivl
and
push
scas
jmp
add
pop
sbb
xor
mov
add
mov
data16
in
mov
mov
mov
mov
sbb
pushl
jae
sub
or
lret
fwait
int
fdivl
inc
int3
cli
lcall
jmp
lcall
dec
xor
popa
out
dec
adc
or
inc
mov
testb
cmpsl
cmc
fdiv
jecxz
cwtl
scas
scas
out
xor
sub
ret
lea
jg
cmp
mov
sub
fwait
xor
push
fnsave
cmp
mov
inc
sbb
sub
jae
ss
cwtl
sub
iret
scas
enter
sub
outsl
insl
xor
pop
lcall
adc
rcrl
addl
shrl
test
pop
lret
mov
incl
incl
inc
sti
hlt
out
mov
int3
out
sahf
mulb
dec
ljmp
push
jmp
cmp
ljmp
lcall
jae
mov
mov
stos
jae
and
or
pop
sub
xor
pop
push
into
ljmp
ficomps
fstpl
aaa
mov
repz
icebp
lea
es
mov
xchg
jmp
loop
fldt
scas
jo
jmp
sbb
sahf
push
mov
push
inc
sub
mov
lds
and
incl
scas
call
cmp
flds
popa
incb
jmp
jns
xchg
mov
jmp
es
inc
pop
loop
push
mov
sbb
mov
popf
aaa
or
push
and
aad
enter
inc
pop
pop
out
js
jo
mov
mov
fcoml
push
add
cmp
pop
out
ljmp
fbstp
sub
push
fistpl
cld
mov
repz
mov
imul
fildll
fcoms
rcrb
sbb
bound
dec
mov
sbb
inc
test
and
in
pop
xor
inc
pushl
popf
xchg
sub
push
or
sahf
adc
les
jge
cli
mull
mov
ljmp
lods
sbb
sarl
jne
adc
xor
daa
scas
adc
add
or
je
xor
fidivrl
adc
and
fsubl
mov
inc
sti
pop
sbb
call
cmp
movd
dec
lcall
incl
in
es
xchg
xor
xchg
jg
dec
xor
lds
jb
and
or
iret
push
sbb
ljmp
jo
les
or
mov
popf
mov
cmp
incl
jae
mov
mov
outsb
dec
imul
test
addl
dec
outsl
insb
add
ljmp
sub
xor
cltd
lds
inc
adc
adc
int3
cmp
jmp
jmp
cmove
lret
fisttpll
loop
je
mov
cmpsb
add
sbb
lea
add
les
incl
xchg
dec
jb
mov
in
sbb
and
insb
mov
sub
test
cld
cmp
pop
fidivl
xchg
pop
xor
fists
jge
push
or
sub
popl
into
lcall
cwtl
decl
fucomip
aas
cmp
inc
popf
sub
nop
mov
test
js
mov
xchg
shll
pop
ljmp
addr16
push
fwait
je
into
cmp
jno
mov
popa
mov
cs
xchg
push
inc
push
ret
syscall
in
xor
sub
hlt
mov
jg
sbb
jecxz
decl
lret
xchg
out
cmpsl
xchg
vpaddsb
adc
push
test
in
lcall
mov
scas
pop
pushf
mov
test
data16
or
jae
mov
sahf
jge
sub
inc
fists
ret
sub
mov
daa
lock
hlt
and
dec
add
cli
ja
mov
add
cmpsb
cmpsb
in
xlat
fimull
cmp
fstpt
mull
mov
jle
fsubp
into
mov
cltd
jb
or
mov
add
insb
fcompl
or
pushl
shrb
mov
push
hlt
jns
jo
cmpsl
mov
sahf
pop
mov
mov
xor
ret
inc
jle
mov
sub
cli
enter
popf
xchg
in
xor
push
std
clc
mov
clc
sub
add
mov
push
xchg
popf
test
stos
push
bound
stos
decl
jp
pop
std
lcall
jne
enter
in
out
push
sahf
arpl
mov
call
pop
jne
icebp
scas
outsb
ret
xor
gs
out
cwtl
push
jmp
inc
push
sbb
rorl
incl
mov
mov
mulb
pop
or
stos
push
adc
adc
in
push
jge
sti
mov
dec
outsb
lahf
shrl
ffreep
lahf
shll
push
or
stos
inc
cmp
mov
pusha
push
inc
sub
scas
out
outsl
clc
fimull
js
inc
jge
cld
add
stos
in
std
sub
call
pushl
xor
sahf
mov
mov
pop
pushf
nop
stc
ficoms
adc
or
ud0
das
cli
adc
xor
sub
nop
out
loop
enter
jp
mov
add
push
sub
int3
shlb
ja
mov
cltd
push
or
ljmp
pusha
push
test
rorl
mov
push
cmp
inc
mov
cmp
jmp
out
cmp
sub
orb
inc
ds
das
mov
ret
loop
or
xchg
sub
decl
ret
or
insl
mov
dec
nop
mov
in
add
incl
scas
mov
out
sub
mov
push
aas
nop
fcoms
stos
jge
jo
cltd
xor
je
pushl
push
xchg
inc
adc
dec
fcmovnu
fimuls
adc
inc
mov
jne
popa
ja
scas
cmpsb
sub
das
clc
cwtl
add
es
enter
jl
add
out
adc
imul
fcomip
push
pop
cld
call
inc
out
into
sbbb
aam
pop
jp
xlat
mov
rorl
loopne
jg
sti
mov
cmpsb
xchg
test
jno
outsl
push
lea
xchg
int3
pop
popf
fists
in
dec
inc
cmp
les
and
fisttps
loopne
dec
push
mov
and
push
psubq
pushl
testl
xor
push
cmp
int
xchg
adc
cmc
fwait
inc
aad
push
decl
jnp
out
mov
jb
pop
or
jmp
xor
lcall
lcall
cld
decl
dec
or
mov
cmp
xchg
jp
mov
and
push
xchg
adc
jmp
push
jg
in
mov
xor
insb
xchg
mov
shll
in
adc
dec
mov
insb
sub
movsb
out
mov
dec
dec
mov
mov
mov
aaa
test
adc
sub
mov
stos
sbb
shll
aaa
cld
lcall
scas
das
or
or
xor
dec
in
js
add
out
sub
fwait
stos
das
jg
lcall
jno
push
sub
gs
out
cli
call
push
sbb
dec
icebp
movsb
pusha
scas
insl
push
xchg
in
loope
jbe
add
loope
lcall
xor
inc
cld
loop
addr16
test
inc
lcall
cli
cld
popa
sub
cmp
cmpsl
test
or
jmp
lea
roll
dec
cmp
pop
std
ljmp
sub
clc
or
mov
cmpsb
xor
jb
sarb
lods
push
cltd
mov
xchg
stc
stc
test
movsl
xchg
orl
add
mov
mov
lock
inc
xchg
rolb
out
sbb
mov
xchg
sbb
stos
mov
shll
xchg
adc
ds
stc
loope
jle
jle
gs
jmp
andb
push
cmovb
push
mov
cmp
lods
call
push
xor
cmp
pushl
dec
sbb
je
clc
cmpb
and
movsb
pop
push
call
int
fcos
call
mov
push
dec
pop
xchg
arpl
adc
add
in
aaa
arpl
mov
stc
lods
out
clc
push
and
hlt
fdivrl
mov
push
int3
lea
mov
movsb
cwtl
push
or
mov
dec
sahf
adc
push
repnz
daa
mov
xorl
imul
lret
pushl
pop
sbb
sbbl
xchg
sbb
xchg
test
inc
inc
xlat
jnp
push
pop
insb
mov
cld
mov
roll
filds
mov
xor
dec
jb
imul
or
and
mov
sahf
jmp
jnp
mov
sbb
sbbb
dec
fwait
cld
pop
xchg
mov
xlat
sub
lahf
pop
repz
lcall
popa
adc
add
stos
aad
add
js
popa
fcoml
dec
cwtl
xor
call
inc
daa
mov
movsl
inc
ljmp
nop
sub
jmp
mov
notb
jle
incl
addr16
pop
ds
inc
int
mov
and
int3
ficompl
jmp
inc
lds
bswap
xor
add
adc
jmp
ret
shl
push
adc
xchg
fldt
mov
sbb
dec
cmp
and
sbb
jl
out
test
fcomip
lcall
sbb
shrl
mov
push
ret
xchg
subb
jo
fnstsw
mov
dec
arpl
inc
mov
ret
xor
dec
out
imul
sub
call
cld
and
adc
lea
cs
adc
mov
gs
inc
adc
cld
sbb
bnd
js
loopne
jcxz
lods
movsl
nop
dec
mov
push
fsubrs
repz
movd
imul
jno
lea
decl
or
pop
dec
cmp
fwait
sahf
jne
insb
pop
lret
dec
mov
pop
imul
lock
mov
xchg
sub
das
sub
ret
lahf
pop
xor
test
mov
in
lcall
outsb
leave
or
psraw
adc
das
jmp
cmp
mov
jge
aad
and
xchg
xchg
mov
int3
add
add
mov
and
jmp
pop
arpl
sbb
mov
imul
shlb
scas
ja
ljmp
loop
sbb
ds
sbb
roll
mov
loop
mov
or
jg
rclb
js
rol
or
push
adc
mov
add
mov
ljmp
int3
mov
push
enter
xlat
inc
ss
push
xchg
xchg
mov
ljmp
movsl
xlat
mov
pop
dec
inc
fstpl
or
mov
mov
jmp
xchg
add
push
leave
int
cwtl
fsts
loopne
jnp
fsubl
dec
loope
rcl
stos
call
cmpsb
divl
mov
lds
xchg
and
push
pop
xchg
inc
mov
sti
xchg
ljmp
inc
add
push
jo
pop
icebp
test
xlat
inc
pusha
enter
xor
mov
insb
mov
sub
add
or
pop
cld
cmp
cs
ret
sub
daa
test
cmp
xchg
jmp
rol
sub
push
adc
orb
popl
or
nop
imulb
add
lret
ljmp
push
mov
das
outsl
ja
mov
subb
pop
mov
mov
cmpsb
pop
add
int
scas
imul
dec
jmp
lea
and
xchg
into
imulb
enter
xchg
push
xor
jg
adc
int3
or
jne
adc
insl
jae
mov
sti
and
cmp
inc
mov
inc
loopne
int
insb
in
rolb
cld
jmp
push
arpl
cld
dec
imul
outsb
cmpsl
bound
lock
test
xor
out
imul
imul
cli
sub
adc
add
jns
sub
lcall
call
dec
or
cltd
mov
fimull
inc
xchg
pop
in
add
jg
jmp
pop
push
out
ret
push
cmp
mov
outsb
sti
cli
or
lock
cmpsl
inc
and
aas
mov
adc
adc
or
iret
mov
imul
cmp
sbb
mov
pushl
stos
sar
sti
ficomps
jl
mov
push
or
sub
jmp
stos
imul
call
xor
mov
or
into
jg
add
push
mov
push
iret
lods
pop
shrl
mov
addl
push
sub
mov
jno
sti
jge
and
mov
outsb
aad
cmp
pop
inc
jg
in
pop
push
icebp
nop
out
jp
lcall
jl
or
xchg
packuswb
or
jne
rolb
mov
idiv
pushl
icebp
inc
add
popf
hlt
clc
fdivs
push
sub
daa
push
int3
sti
xlat
outsl
mov
call
xchg
jae
lock
sbb
push
pop
sti
int
sbb
xor
push
call
add
cmc
inc
out
mov
shll
cmp
jno
lods
cmp
mov
fdivrs
andb
cmpsl
fwait
push
jno
leave
add
int
ret
pop
and
gs
mov
cmp
lcall
jb
sub
cmp
mov
in
repnz
addr16
xor
dec
pop
push
mov
mov
pushl
shll
mov
int
mov
frstor
mov
dec
testb
stc
icebp
mov
jmp
inc
xchg
js
dec
aas
mov
mov
jns
xchg
sub
cwtl
jge
idivl
mov
dec
jnp
inc
or
fimull
fiaddl
push
insl
out
int
test
loope
sti
add
pop
mov
jb
pushl
test
adc
or
insl
test
mov
stc
fucom
cltd
xchg
xor
popa
pop
jmp
decl
and
cld
pop
lods
test
cwtl
mov
pop
jg
fdivrp
ljmp
fistpl
out
push
xchg
pop
pop
sub
fildl
cmp
mov
std
adc
decl
repz
add
or
clc
jg
inc
daa
sub
gs
shl
jecxz
add
ljmp
jge
push
enter
inc
inc
in
inc
cmp
pop
scas
out
push
rcr
cli
adc
xor
mov
lcall
push
add
fwait
stc
dec
push
inc
push
testl
jne
xor
std
fs
lcall
leave
cmp
cmp
mov
xor
pop
movb
test
lds
sub
lahf
sbb
sbb
aas
fldlg2
pop
nop
add
inc
leave
mov
cld
adc
mov
cltd
clc
in
fcmovnb
sahf
fwait
mov
leave
mov
inc
xlat
cld
jbe
out
mov
dec
clc
lcall
push
aaa
mov
xor
cld
pushf
mov
data16
lret
das
mov
lds
cmp
mov
fmull
jl
mov
int3
int3
into
lea
pop
fnstcw
cmp
cmc
sub
jl
clc
sahf
int3
sar
cmp
call
jecxz
xor
repz
fldenv
pop
orb
ljmp
fbstp
clc
cmp
cmpl
sbb
cld
add
dec
decl
mov
ds
or
je
xchg
mov
cwtl
cmpsb
pushl
call
mov
sub
cmpsl
push
mov
xchg
xor
jnp
mov
cltd
cld
rol
or
call
sbb
and
int
pop
dec
cmp
or
mov
sti
jmp
in
loopne
pusha
lcall
add
mov
outsb
xor
push
mov
cmp
push
cmpl
in
mov
stc
inc
inc
and
push
pushl
mov
in
lret
arpl
fcomps
mov
jns
add
fistl
lcall
lret
leave
and
or
mov
int3
inc
repnz
lods
lahf
push
sti
mov
sub
pop
out
cmp
outsb
jp
and
das
lock
sbb
incl
lods
jmp
xchg
jb
mov
jl
dec
lods
ljmp
mov
xorb
sub
cmc
push
and
in
mov
xchg
jp
inc
mov
and
lcall
test
xor
xchg
sbbl
call
icebp
enter
push
cmp
call
mov
addr16
sbb
mov
decl
sub
and
cwtl
and
jl
jo
scas
rcll
ljmp
in
lods
mov
stos
jnp
enter
movsl
and
subb
jns
and
mov
adc
and
and
sbb
cwtd
or
fs
fwait
cmpsl
in
lock
lock
sub
ljmp
sbb
fwait
jle
enter
lahf
arpl
scas
cmp
outsb
leave
loop
ds
lcall
clc
test
push
push
fldl
call
jnp
inc
lods
xchg
les
dec
ljmp
and
lcall
jnp
repnz
mov
jmp
shlb
xor
adc
int3
push
sub
fisubs
aad
mov
lods
outsb
ljmp
xchg
clc
jp
jp
xchg
cmp
in
jo
outsb
cmp
or
call
enter
es
cmc
stc
push
jge
inc
mov
xchg
mov
jbe
fnstenv
jp
cmpsl
inc
xchg
mov
mov
js
loope
fmull
rolb
test
mov
fs
jmp
dec
lds
dec
mov
push
lret
outsb
cld
jecxz
jecxz
dec
mov
mov
hlt
sti
or
push
pop
lock
call
jp
lods
sti
hlt
mov
cmp
mov
cmp
and
or
jmp
or
sbb
adc
sbb
sti
orb
out
in
xor
test
ret
or
jmp
jbe
add
mov
loopne
add
sti
jge
adc
loop
mov
jmp
or
enter
pop
sub
fwait
cld
lds
xor
lods
testb
mov
call
mov
push
sbb
mov
leave
out
sub
sub
aam
add
lds
out
lcall
lcall
sbb
outsl
stos
call
xchg
mov
pusha
mov
cs
cmp
jecxz
mov
jbe
jae
in
loopne
push
sub
gs
addb
aam
nop
jmp
xchg
mov
mov
mov
imul
mov
movsb
jge
add
or
test
pushl
in
loope
cmpsl
je
loopne
add
into
add
test
rol
sahf
cltd
lcall
cld
pop
shll
outsl
xchg
fwait
aas
or
add
jmp
mov
dec
adc
dec
add
in
ss
aaa
sub
pop
mov
push
mov
fnstenv
dec
les
lret
jnp
jp
and
inc
lahf
aam
jg
add
call
decb
mov
pop
sub
xor
movsl
dec
mov
out
pop
or
rolb
incl
fs
mov
pop
push
dec
xchg
lock
aas
inc
cmp
call
cld
ljmp
lret
adcl
jle
sbb
out
sbb
ljmp
jae
inc
jmp
and
movsl
faddl
dec
fsubl
sbbb
pushf
cmpb
mov
sbb
std
in
pushl
adc
adc
rclb
mov
xchg
mov
mov
jnp
mov
fmulp
jns
mov
mov
cmp
out
inc
adc
adc
pop
push
jge
sbb
popf
xor
in
je
incl
or
mov
data16
int
std
std
push
xlat
jp
out
ljmp
inc
sub
mov
xchg
mov
xchg
sbb
lcall
pop
mov
ret
push
aaa
lods
imulb
addb
mov
and
cld
jmp
xor
add
fs
sbb
mov
les
insl
imul
addr16
incl
cmpsb
loopne
hlt
outsl
push
cmp
push
jle
mov
cwtl
inc
and
jmp
xchg
stos
incl
nop
mov
fs
xchg
push
or
rcrl
out
dec
aas
scas
mov
mov
inc
push
sub
das
inc
insl
mov
filds
sub
stos
lret
decl
cmpsb
mov
mov
sbb
push
xchg
ret
xorl
call
xor
cwtl
jno
test
adc
sbb
ljmp
popa
in
cmpl
cmp
inc
mov
xchg
hlt
rclb
mov
jmp
in
dec
push
test
fimuls
bndldx
add
mov
xchg
arpl
ljmp
push
push
pusha
pop
mov
imul
frstor
jg
incl
pop
push
xchg
inc
or
push
popf
movsb
jnp
mov
cltd
pushf
xchg
push
and
and
mov
inc
mov
add
negl
outsb
jp
cs
and
out
mov
cmp
stos
scas
and
pop
jp
psubq
jnp
sub
call
mov
push
inc
push
dec
divl
lcall
push
stos
pop
bound
mov
cmp
cld
cli
fcomip
fistpll
lret
inc
mov
adcb
push
incl
cld
aad
cmp
fdivl
pop
sti
in
pushf
lret
shll
xorb
in
ljmp
aas
cmp
mov
lahf
push
xor
pop
loopne
shlb
pop
es
adc
adc
hlt
movsb
pop
inc
add
dec
out
call
inc
jg
imul
das
pusha
cmp
xchg
call
pop
mov
pushf
daa
sub
and
ja
xor
push
adc
push
mov
cmpsb
xor
incl
mov
and
jb
sub
add
sbb
push
out
dec
sub
popf
fs
push
outsl
aaa
cld
pushl
outsb
mov
mov
iret
cs
dec
dec
pop
std
movsb
push
jne
lea
subb
hlt
pop
push
push
lods
mov
dec
push
pop
sub
popa
inc
in
fstps
dec
cli
cmp
enter
and
rclb
mov
mov
orl
call
lods
int
cmc
stc
dec
cmp
out
or
xor
pop
fiadds
sbb
ja
clc
stc
aam
rep
adc
or
pop
pop
mov
rcr
add
jp
mov
sub
hlt
ds
out
mov
dec
jl
repz
nop
ja
or
dec
icebp
pop
cmpl
mov
push
cmc
std
xchg
push
jmp
fwait
ret
and
push
cmpsl
jb
shlb
movsl
fwait
lds
cs
call
fiaddl
aam
xlat
adc
test
pusha
adc
out
pop
jl
out
clc
decl
dec
imul
lds
xchg
and
push
lret
lahf
pop
inc
decl
push
mov
sbb
push
adc
incl
cli
push
push
popf
subb
inc
das
sub
je
mov
incl
dec
jle
push
leave
rcll
sub
add
es
xchg
sbb
decl
cwtl
aam
mov
fimull
jmp
jns
stos
xor
outsl
setge
fcomip
ljmp
dec
test
clc
es
ret
adc
jp
scas
mov
jo
lcall
lcall
movsl
jb
mov
lock
xor
mov
rorb
mov
popa
mov
mov
cmp
cs
sarb
ljmp
das
out
js
outsb
rcll
xchg
decl
ret
in
push
or
jl
mov
jp
loop
out
push
add
scas
lock
aad
push
jmp
icebp
stc
cmpb
out
adc
outsl
mov
mov
out
adcb
fwait
aad
fdivs
xor
mov
incl
out
add
inc
loop
sti
mov
loopne
sbb
ja
mov
xor
jmp
jge
mov
sub
mov
stc
out
push
pop
cmp
adc
or
xlat
push
ret
sub
push
mov
jbe
into
push
and
xor
push
sub
push
sbb
pop
push
push
xchg
shrl
sub
or
decl
shr
ror
mov
and
fwait
lods
sub
out
pop
inc
test
jo
xchg
bound
insl
add
pusha
dec
rcrl
xchg
data16
pop
leave
adc
incl
pop
jge
jg
repz
pop
stos
cs
repnz
sub
filds
xor
mov
fnstcw
call
js
xor
mov
pop
in
adc
xor
pop
pop
lahf
or
fistpl
or
loopne
sarl
mov
sub
cmpsb
mov
inc
dec
mov
xchg
dec
pop
sub
ficoml
divb
cmp
mov
cwtl
or
inc
lcall
ret
jmp
inc
dec
add
fwait
div
or
sahf
hlt
ljmp
clc
xorl
xchg
push
repnz
cmc
lret
sub
lods
xor
out
nop
jnp
xchg
test
adc
xchg
and
fiadds
xor
inc
sub
sarl
dec
faddp
cmp
call
lock
jge
test
cmp
or
aas
fsub
inc
or
in
mov
stos
ss
fwait
int3
bound
jg
or
aad
sarb
and
or
addr16
dec
enter
decl
jmp
outsb
mov
cmp
shlb
call
fisubl
sti
stos
push
mov
or
mov
cmp
adc
loop
sti
mov
hlt
add
aad
push
jnp
add
and
jb
sbb
jmp
xor
dec
ja
or
mov
sbb
push
imul
jns
ret
adc
mov
cwtl
push
test
adc
repz
rcrb
js
aam
push
pushf
cmp
mov
jbe
rclb
cld
mov
lcall
ljmp
inc
push
in
stos
adc
mov
in
inc
dec
push
sbb
push
push
stc
push
fdivrp
jmp
inc
dec
aad
in
mov
xor
sbb
cld
fcompl
mov
jno
cmp
data16
or
out
stos
shlb
shl
jp
adc
jmp
out
mov
loopne
and
or
test
pushw
push
hlt
fcompl
push
hlt
ljmp
outsl
mov
inc
test
int3
shlb
and
ja
jle
lcall
imul
sarb
fdivrs
mov
test
dec
je
xor
xchg
or
xchg
push
jne
jns
push
xor
push
mov
ja
rcrl
push
mov
in
jne
push
cmp
push
movsl
and
lock
incl
xchg
inc
scas
push
pushf
and
inc
mov
aam
xchg
pusha
dec
outsl
lret
mov
or
mov
fldl
or
lret
push
jbe
and
cmpsb
mov
les
imul
mov
les
ljmp
movsl
mov
inc
cwtl
dec
lret
orl
pop
hlt
js
add
push
aam
jnp
das
mov
pop
ret
adc
jbe
mov
jmp
sbb
lods
push
mov
lret
cs
icebp
mov
fisubrl
or
pusha
lcall
mov
lea
xchg
mov
cltd
pop
in
ljmp
jb
pop
mov
and
sbb
pop
mov
xchg
rcl
cwtl
mov
jle
xor
or
idiv
lcall
ds
out
jmp
sub
xchg
cmp
dec
in
aaa
sbb
jg
inc
jecxz
push
pop
ret
sbb
add
incl
push
mov
jle
lea
jge
ja
cmpb
pop
dec
push
pop
push
add
pushl
push
push
mov
es
add
mov
das
les
insl
loop
cmpsl
push
push
call
jmp
push
and
imul
push
iret
dec
clc
push
push
pop
mov
aaa
xor
incl
mov
adc
fst
pop
test
les
and
sbb
dec
lahf
push
dec
add
cmp
icebp
push
sbbb
xor
scas
lods
cmp
scas
fildll
inc
nop
jg
xor
and
mov
in
ja
pop
dec
add
mov
popf
pop
xchg
cmpsb
jmp
sub
hlt
sbb
fldcw
cwtl
push
add
fcmovbe
sub
push
dec
lds
adc
push
mov
inc
jno
jecxz
subl
mov
fisttpll
adc
mov
aam
scas
jae
pop
mov
inc
pop
test
mov
adc
pop
xchg
jecxz
decl
xchg
add
adcb
cld
pop
adc
pusha
inc
sbb
push
sbb
dec
ud0
call
stos
jl
adc
outsb
push
sbb
int3
leave
sbb
dec
jbe
faddl
mov
mov
incl
jecxz
lock
repz
or
push
lock
push
vmovq
cltd
pop
mov
das
mov
mov
arpl
sbb
pop
xchg
dec
mov
push
mov
cmpsb
pop
pop
aad
test
incl
pop
push
add
push
jno
sub
fcomps
out
jae
adc
jg
push
int3
adc
mov
imull
imul
cltd
popf
loopne
xchg
incl
inc
xlat
inc
add
cmp
ret
mov
mov
mov
push
ret
fistl
push
and
repz
loop
dec
mov
ljmp
and
push
or
mov
lea
push
or
iret
decl
ret
aaa
xchg
in
fidivrs
or
ljmp
xchg
std
pushf
ret
fldl
decb
xchg
dec
jp
addr16
xchg
bound
mov
enter
mov
xchg
clc
mov
insb
outsb
bound
cmp
decl
cli
std
cmp
sub
bound
and
mov
orb
ljmp
sbb
add
pop
fcomi
aas
mov
add
inc
test
call
push
imul
gs
cld
popl
mov
cltd
shrl
jmp
cmp
inc
ljmp
mov
gs
aas
bound
notb
xor
and
stos
decl
aaa
inc
add
mov
cld
cmc
pop
sbb
dec
aam
inc
lock
out
xchg
pushl
pop
mov
sahf
inc
mov
add
popa
cs
popa
cwtd
push
dec
sbb
push
mov
ret
mov
ret
pop
mov
sub
dec
ja
fwait
mov
push
mov
pop
mov
loop
aaa
fs
iret
gs
mov
push
outsb
aas
xor
jmp
xlat
xlat
loop
dec
or
inc
jbe
cmp
and
cmpsb
xor
or
loopne
incl
filds
mov
enter
xchg
xchg
mov
cli
decl
and
cmp
stos
jns
push
sub
jp
pop
ja
sbbl
mov
ljmp
adc
sbb
mov
add
decl
pushf
sti
call
xchg
or
push
dec
js
pop
cli
les
fiaddl
incl
sbb
fsubs
add
lcall
lcall
cmp
or
jge
push
scas
fimuls
pop
popa
push
dec
or
and
dec
and
daa
mov
dec
sbb
pop
adcb
push
clc
mov
fmuls
xor
pop
mov
cmp
test
jb
fxch
loop
into
jl
mov
loop
push
ljmp
jmp
sbb
add
in
cmp
jecxz
aas
xchg
lock
inc
pop
test
je
jbe
mov
dec
pop
push
pop
fsubl
and
add
orb
movsb
mull
out
call
jp
push
idivl
cmp
es
movsb
fs
out
inc
fstps
pushl
cmpsl
xchg
testb
mov
xor
pushf
test
call
mov
data16
push
dec
clc
arpl
es
fisubl
adc
dec
sarb
movsb
dec
mov
hlt
jmp
pop
rcrl
shrl
and
mov
and
mov
insb
cmp
out
inc
jge
pop
icebp
dec
cli
bnd
ljmp
dec
cmpsb
push
push
xchg
sub
out
mov
adc
leave
and
sarb
jg
rcrb
push
nop
mov
sub
icebp
jmp
mov
jnp
pushf
les
sub
popa
test
mov
out
push
insl
adc
push
mov
mov
jp
repz
mov
sub
ja
cmp
sub
lea
decl
aad
lds
jns
jo
int
xor
mov
xor
lcall
pushl
xchg
mov
andl
arpl
mov
inc
adc
decl
fimull
aam
xor
add
insl
sub
add
sti
push
loop
incl
adc
out
pop
sahf
lcall
jecxz
clc
test
dec
stc
dec
dec
pushl
cld
decl
outsl
inc
dec
cmp
int3
outsb
testl
decl
xor
cmp
test
pop
test
mov
push
test
dec
into
dec
add
fwait
lret
ljmp
clc
lcall
add
in
fs
sbb
repnz
push
dec
mov
ds
sahf
out
mov
push
movsl
xlat
push
ljmp
loopne
mov
pop
or
sub
and
stc
pop
sahf
leave
push
in
sbb
movsl
repz
iret
pop
inc
mov
mov
and
jmp
pusha
xor
push
test
shll
push
xlat
out
add
es
cltd
stos
faddp
dec
sub
lcall
rcrl
push
xchg
in
bound
adc
cmc
pop
ficoms
das
adc
in
cmpb
jecxz
test
lds
mov
rclb
sbb
decl
cli
jg
jns
xor
bound
mov
cli
jbe
mov
fcomip
ds
cmpsl
or
arpl
bnd
xchg
icebp
push
xor
lds
fwait
ljmp
lock
xor
sbb
jns
stos
leave
mov
or
pop
aaa
jnp
decl
mov
scas
dec
cmpb
lea
jo
inc
mov
sti
call
add
and
loopne
iret
stos
push
dec
rorl
xchg
sarl
pop
pop
jnp
jmp
mov
fmull
int3
ret
add
mov
aad
outsl
cli
decl
ds
scas
dec
and
sti
popa
dec
std
xchg
or
add
fcomps
or
lcall
lcall
js
leave
add
cmp
inc
inc
ds
jb
incb
lock
call
jo
and
imul
popf
pushf
jno
popa
sahf
and
jmp
or
xchg
or
ljmp
test
fisubrs
out
dec
cmpb
testl
jg
mov
ljmp
shrb
repnz
daa
mov
cs
lcall
bound
mov
imul
shlb
rcrb
push
in
push
sbb
pushl
cmpsl
cmp
lds
push
hlt
cli
mov
jl
mov
jmp
mov
and
mov
sete
push
xor
shlb
fs
loop
lcall
leave
in
mov
test
sbb
cli
sub
cmpsb
lahf
lret
icebp
shrl
sub
test
push
pop
add
push
js
int3
incl
mov
mov
cwtl
inc
pop
inc
cmc
push
jg
call
cmp
daa
aaa
std
incl
mov
dec
ljmp
das
call
jmp
xchg
mov
mov
mov
arpl
xor
stc
dec
mov
adc
dec
mov
loop
inc
dec
sbb
xor
mov
jae
int3
push
aaa
rcr
or
cmp
xchg
scas
sbb
incl
push
rclb
rcrb
push
aas
mov
lods
push
mulb
test
je
mov
inc
push
in
dec
and
fwait
jno
inc
push
xor
mov
movsb
push
sub
sbb
jecxz
mov
fisttps
std
imul
ljmp
lods
mov
sub
jp
cmpl
repnz
or
enter
jmp
and
sub
das
clc
jmp
inc
imull
shlb
xchg
dec
mov
icebp
or
test
sub
in
sbb
ljmp
jl
es
test
icebp
fbstp
sub
loop
jmp
pop
dec
xchg
negl
add
push
and
js
xchg
sub
shll
cltd
insb
incl
mov
dec
cs
pop
ret
pop
mov
push
mov
dec
repz
popa
ds
ljmp
rorb
popf
rorb
pop
push
call
jo
sub
cltd
ljmp
cmc
stos
ds
add
lret
dec
or
fsubrs
fnstcw
dec
push
std
aam
jmp
jp
mov
mov
mov
add
add
dec
cmp
mov
xor
incl
and
std
gs
sbb
mov
call
out
cmp
loopne
les
decl
insl
nop
xchg
les
inc
jne
mov
stos
adc
cmpsl
mov
push
scas
cli
and
jmp
mov
pop
loope
repnz
or
mov
mov
shll
mov
lds
mov
xchg
mov
jbe
orb
sbb
sub
pop
add
pop
xchg
lret
into
mov
cmpb
in
sub
lcall
lea
ljmp
add
sbb
mov
inc
mov
mov
jg
cmp
mov
pop
pushf
in
fstps
iret
data16
loope
lret
jb
lock
decl
loope
les
jb
sti
aam
mov
scas
pop
jg
loop
mov
add
cmp
jg
or
inc
leave
addr16
scas
xchg
shl
mov
sarb
and
js
pop
adc
cmpsl
sbb
popf
fcmovnbe
cltd
int
fldenv
and
ljmp
push
test
mov
mov
aas
xor
aas
mov
cmp
xor
xchg
jmp
in
decl
les
call
jl
fs
pop
jmp
jno
cmpsl
sub
inc
out
mov
xchg
fcomip
cld
scas
repz
jo
addr16
jns
ret
lahf
mov
fbld
mov
lock
cmp
pop
cmc
ss
jmp
cmp
hlt
mov
xchg
scas
cld
dec
sub
lcall
add
mov
push
push
push
testb
aad
rclb
stc
pop
or
mov
mov
popa
sub
mov
cmp
mov
loope
pop
test
or
fbld
stos
lret
pop
imul
jmp
fsts
int3
in
jne
lea
jo
jmp
and
gs
loopne
jge
sbbb
jnp
stos
jnp
mov
pushl
sub
repnz
cmp
daa
popf
cltd
fwait
cmpsb
or
dec
aaa
ret
sti
dec
fists
arpl
push
mov
shll
call
push
inc
sbb
cmc
in
inc
iret
cli
mov
push
push
lcall
jno
orl
daa
mov
js
dec
stos
pushf
xor
ret
cmp
push
ljmp
movsl
xlat
push
fnsave
pop
ret
sahf
cmp
sub
ja
xchg
xor
sub
or
pop
loopne
jmp
cmp
mov
sub
sub
xchg
add
incl
or
icebp
aas
aad
clc
aam
aaa
adc
xor
add
sti
aad
stos
loopne
in
call
nop
xchg
mov
mov
in
sbb
cmp
test
fs
sub
ljmp
js
push
xchg
fstps
push
inc
cmp
aas
jns
mov
cli
jp
mov
aam
decl
mov
subl
and
std
mov
push
lcall
out
test
sub
in
pop
loopne
sbb
xchg
popf
popa
or
jns
jb
decl
push
xor
cli
xor
sbb
adc
or
mov
push
scas
call
cmp
jl
stos
test
ret
dec
dec
cli
iret
aas
leave
jbe
leave
mov
testl
mov
out
out
movsl
lcall
ljmp
dec
shll
inc
cli
cmp
int
inc
mov
mov
add
mov
sbb
mov
or
std
inc
mov
push
jmp
lret
jnp
inc
add
iret
enter
leave
shll
mov
rcll
xor
xor
pop
mov
mov
inc
outsb
mov
daa
and
cs
sub
stos
mov
xor
xchg
or
sbb
dec
mov
adc
cld
push
add
fnstsw
pushl
shll
mov
jecxz
and
push
and
loop
imul
jbe
decl
xchg
cmp
andl
pop
adc
mov
pop
jge
xor
ds
call
sbb
dec
jge
cwtl
in
ret
add
mov
mov
xor
cltd
out
call
repz
inc
xchg
mov
xlat
lods
js
ret
and
lods
push
pop
pop
mov
dec
cmp
jmp
popa
daa
and
pop
subb
int
mov
outsb
dec
pop
cs
dec
jmp
insb
je
arpl
call
stc
add
cmc
movsb
insb
stc
popa
mov
pop
insl
lods
cmpsb
jmp
xchg
cmc
jmp
dec
fdiv
jp
cmp
push
neg
arpl
jecxz
shrb
incl
int3
jns
int3
test
insl
or
imul
or
rolb
cmp
loop
aam
mov
mov
outsl
mov
mov
xchg
gs
pop
push
incl
ret
sti
inc
mov
mov
push
pop
sahf
xchg
fstpt
inc
aam
ja
xor
ss
inc
out
ret
push
rcll
sarb
sub
in
sub
rcr
jecxz
addr16
sbbb
outsl
push
cmc
fldenv
xchg
test
imulb
and
pop
dec
adc
mov
lds
lcall
in
pop
mov
mov
xchg
addr16
dec
jmp
cmp
push
jecxz
inc
and
les
iret
cld
jl
arpl
sbb
and
popa
xlat
insb
or
mov
sbb
inc
ret
ja
ds
sbb
push
imul
test
call
cld
inc
pop
xor
adc
pop
addr16
das
mov
inc
mov
jae
and
inc
lds
mov
cli
cmpb
decl
sub
cmp
lods
fimull
sbb
movsl
lods
or
insl
cmp
iret
in
mov
call
pop
xlat
dec
and
pop
rcrl
insb
and
test
push
stos
data16
and
loop
mov
incl
fldt
jae
adc
pop
mov
inc
pop
sub
call
inc
jecxz
jmp
sbb
popl
xchg
ret
jnp
mov
add
sbb
dec
adc
sar
adc
lods
das
les
insb
xor
lcall
sahf
cmp
out
ljmp
cs
jne
and
push
push
mov
pushl
aas
jl
aaa
pop
mov
dec
push
adc
push
mov
inc
xchg
mov
xor
sbb
inc
pushl
movsb
xchg
xchg
jbe
xlat
imul
mov
lahf
div
pop
rcrb
push
gs
mov
rorw
and
jge
in
jecxz
sahf
lods
nop
test
jge
add
pop
xchg
or
in
shl
push
mull
or
pushl
lahf
jb
adc
hlt
sbb
lea
loopne
xor
test
cmpsb
mov
and
inc
push
dec
push
iret
sub
mov
mov
mov
push
sbb
mov
cld
call
inc
xchg
pop
sub
gs
adc
push
pushf
fs
out
scas
icebp
dec
xor
mov
and
pushf
gs
into
sub
loopne
inc
sbb
sub
sub
jo
pushl
xchg
sti
and
jae
add
add
test
std
jecxz
movsb
scas
int
push
dec
test
incl
push
jno
jb
arpl
fisttpll
adc
pop
dec
stos
dec
pop
pop
jle
jb
adc
jo
cmpsl
lods
jl
mov
js
cwtl
xchg
push
mov
push
mov
inc
sar
incl
aas
fiadds
inc
mov
ja
sarb
and
cld
mov
xchg
add
mov
dec
pop
sub
test
test
call
fs
psubsw
sbb
test
sbb
pop
movsb
xchg
test
gs
std
incl
shll
je
xor
movsl
test
push
ret
dec
pop
andl
inc
jg
in
ret
sub
cmp
mov
pop
rcrb
scas
jp
aam
jb
ljmp
int3
icebp
mov
mov
outsb
lahf
scas
jbe
dec
sahf
pop
jb
arpl
xor
lcall
push
imul
aam
sbb
inc
sub
fnstsw
jb
ret
test
xor
lcall
je
sbb
dec
xchg
jnp
aam
aam
aas
in
sub
dec
lods
arpl
pushl
outsl
sbb
hlt
xchg
add
mov
pop
ficompl
ret
mov
xchg
mov
imul
xorl
rolb
ljmp
sbb
dec
cli
call
in
sub
sar
loope
sbb
cltd
sub
mov
pushf
ljmp
sbbl
fstps
daa
cmp
pushl
cli
jns
stos
das
pushf
jbe
mov
lret
mov
mov
decl
sbb
pop
xor
jle
arpl
stos
inc
sarl
aad
and
cmp
movsl
dec
and
decl
pop
loop
decl
pushf
adc
sbb
clc
test
lea
sarl
adc
lea
cmp
mov
lcall
sub
scas
push
jmp
jns
xchg
decl
lock
sbb
lahf
add
add
cli
pusha
scas
iret
add
clc
mov
jl
es
cmpsb
push
test
cld
cli
fbstp
sbb
xchg
and
call
pop
test
popf
test
or
aam
rol
jge
in
xor
lret
inc
lcall
sbb
bound
ljmp
rcll
pop
les
jb
mov
call
aad
add
xchg
sub
cmc
xchg
out
sub
test
adc
push
cwtl
shl
add
dec
pop
int3
mov
mov
pop
pop
dec
das
lods
lea
cmp
imul
call
call
icebp
mov
xchg
push
xor
mov
mov
cli
mov
movsb
pop
jle
push
test
inc
mov
pop
mov
pop
clc
decl
loope
adc
test
test
incb
mov
pushl
mov
mov
jae
adc
dec
sbb
jecxz
cs
call
add
ds
pusha
test
arpl
dec
sbb
fs
sbbb
cmp
call
fcomps
dec
jle
shlb
jg
lods
bound
iret
loopne
inc
mov
jmp
js
sub
ja
in
testl
rorl
pop
icebp
adc
call
adc
std
in
insl
dec
loopne
aad
sub
incl
cmp
decl
xchg
ss
cmp
xchg
imul
push
jp
xchg
pushl
hlt
das
xchg
jecxz
bound
xchg
sbb
fldt
sub
add
loope
imul
push
pop
in
cmp
cmp
jle
testl
imul
jp
sbb
and
out
ljmp
inc
push
mov
jge
ss
adc
scas
xchg
addr16
mov
xchg
in
int3
mov
ljmp
add
jbe
cld
sub
in
sub
je
mov
fcomip
stos
out
stos
push
push
shl
fwait
pushf
sbb
popf
adc
xor
inc
cmpsb
fildll
xor
loopne
sbb
jg
sbb
fisttpl
in
stos
cmpsl
jae
jecxz
cld
int3
inc
push
mov
pushl
in
js
fs
and
pop
loopne
fildll
cltd
mov
jl,pn
xor
push
enter
icebp
imul
into
push
mov
jne
xor
mov
nop
and
sbb
aas
outsl
adc
das
jg,pt
aad
popa
call
je
int3
cmp
es
pop
loopne
mov
fdivrp
mov
rolb
fdivs
dec
and
iret
daa
push
mov
and
mov
sti
add
xor
jb
pop
mov
fadd
into
bound
add
incl
add
fmull
loope
stc
clc
xchg
stc
cli
xor
lcall
xchg
inc
jnp
loopne
rclb
sbb
test
test
lea
nop
lea
mov
mov
inc
inc
cld
ljmp
aas
xor
sarb
decl
js
cmp
push
test
adc
xor
and
xor
scas
cmp
adc
xor
jmp
sbb
ret
sbb
xor
repnz
dec
adc
lcall
arpl
hlt
add
mov
mov
imul
xchg
or
insb
pushf
and
lret
lcall
out
fldl2t
inc
test
push
out
mov
dec
std
icebp
push
fs
fnstsw
pop
ja
xorl
add
cli
in
mov
sbb
decl
lds
gs
sub
imul
cmp
scas
sbb
mov
inc
ja
div
sub
sub
sbb
ret
pushf
leave
jp
add
mov
orl
jle
jmp
icebp
pop
movsb
and
push
mov
shll
out
hlt
out
test
push
jmp
cmp
jae
aad
test
mov
cwtl
sbbl
test
cmc
mov
mov
cmp
insl
inc
shlb
sub
rclb
pop
in
add
repnz
lcall
dec
pop
jg
mov
add
add
or
test
ror
adc
cmpsb
pushl
xor
lret
sub
call
mov
or
lods
int
dec
xor
or
dec
pop
add
dec
pop
ljmp
mov
mov
sbb
mov
pop
add
fbstp
lcall
fcompl
mov
inc
ret
mov
push
in
into
clc
add
pop
lahf
cmp
mov
add
push
add
xchg
cmp
dec
sahf
mov
ja
insl
cld
arpl
push
inc
push
sbb
loopw
out
and
ljmp
and
sub
lcall
incb
sbb
stos
stc
lds
push
shr
es
pop
insl
push
ds
jp
lcall
mov
je
mov
popa
xor
mov
push
rolb
enter
and
ljmp
lret
insb
push
call
out
stos
or
mov
sbb
xchg
or
mov
int3
sar
jmp
out
lods
out
jo
adc
sti
push
fimuls
adc
pop
leave
ds
mov
das
mov
xchg
fisttpl
mov
into
or
scas
mov
test
jg
inc
cmc
insl
shlb
xor
sub
stos
adcl
mov
pop
pushf
mov
add
add
test
pinsrw
xlat
enter
mov
decl
pop
cmp
jg
cmp
dec
xchg
jns
add
add
ss
das
sar
pusha
subb
shrl
push
pushf
hlt
jge
sub
int3
das
addb
lcall
es
movsl
repnz
outsb
ret
pop
sbb
adc
and
fwait
adc
loop
es
ror
fwait
mov
push
xchg
movsl
data16
and
pop
sub
inc
pop
loope
and
incl
and
jecxz
popf
sbb
out
cmp
and
shrb
mov
ss
xchg
xor
push
xor
sbb
sub
or
js
arpl
cmc
jmp
shll
xchg
xchg
lea
xor
cltd
pop
pop
aaa
xor
xchg
inc
or
loopne
pop
mov
call
dec
jg
mov
rcrl
or
xchg
mov
int
ret
mov
mov
or
push
push
rolb
lcall
lds
xchg
xchg
popf
ljmp
adc
pop
sahf
and
lret
lea
mov
call
jb
int3
push
test
xorl
mov
xchg
imul
inc
pusha
call
jge
mov
in
jno
lea
dec
nop
sub
xchg
mov
loope
pushf
inc
jmp
mov
negb
pop
inc
inc
mov
push
sbbl
ror
sub
jnp
or
lcall
or
dec
adc
xor
icebp
sbb
dec
jmp
adc
and
push
ret
shl
inc
jl
fsubr
push
f2xm1
in
scas
in
incl
pop
les
sub
ffreep
ficoml
xor
pushl
imul
xchg
add
and
push
mov
aam
fsub
add
into
leave
or
mov
ja
in
loope
mov
adc
into
iret
push
call
ljmp
mov
add
fnstsw
or
shll
fidivs
lcall
mov
cwtl
sub
sub
jne
xor
sti
push
popf
dec
mov
mov
pop
xor
pop
fistps
push
movzwl
fidivrs
cmc
jns
call
jecxz
push
pop
push
xor
cltd
inc
pop
mov
fsubl
inc
divb
rol
sahf
ljmp
negb
popl
movl
sbb
pop
pop
insl
mov
neg
pop
call
enter
inc
sub
sbb
and
jecxz
flds
or
popf
les
call
mov
hlt
movsb
adc
ficomps
push
mov
pushf
shll
sahf
fs
call
jle
dec
fwait
mov
inc
or
imul
repz
sti
stc
adc
sahf
sahf
nop
inc
incl
incl
lods
push
into
dec
cmp
mov
push
mov
popf
fsubp
jmp
push
mov
xchg
pop
outsl
mov
je
push
dec
sbb
pop
leave
insb
lock
jne
xchg
mov
lcall
or
pop
std
into
outsb
or
mov
mov
sub
jb
jo
jmp
nop
adc
rcrl
push
movsb
add
dec
stos
nop
xchg
xor
mull
adc
call
mov
sub
add
sbb
psubq
xchg
xchg
in
aaa
mov
lcall
jecxz
sub
push
dec
into
pusha
lea
pop
test
out
xor
mov
jbe
adc
out
fcmovb
std
pop
mov
scas
out
les
lea
push
mov
mov
ljmp
clc
and
inc
mov
pop
mov
adc
cmc
push
insl
mov
adc
incl
push
scas
sbb
mov
dec
jns
jp
sub
xor
adc
decl
sub
sbbl
pop
stos
xchg
js
arpl
adc
cld
fsubr
push
sub
jne
jnp
cmp
js
sbb
add
mov
cmp
mov
push
js
aas
test
test
call
mov
push
lea
cmc
xor
or
std
cmpsl
js
incl
js
jbe
cmp
insb
js
mov
test
mov
pop
aas
push
icebp
inc
add
out
dec
xchg
xchg
push
adc
adc
gs
push
call
ficompl
xchg
or
xor
fmulp
ss
jl
cwtl
jmp
add
rolb
daa
decl
adc
sti
clc
and
mov
in
fucomp
xchg
std
and
dec
pop
pop
ret
push
fists
call
vpmulhuw
aas
out
pmulhw
mov
in
xor
adcb
mov
adc
jmp
add
adc
cwtl
in
mov
mov
and
or
in
mov
lret
test
pop
lcall
inc
lds
repnz
out
xchg
in
or
xor
or
aas
cld
jb
popa
loop
call
clc
dec
inc
or
adc
cmp
lret
and
mov
fwait
add
pop
loop
dec
in
push
mov
lock
push
imul
test
jbe
sbb
imul
sahf
das
sarb
scas
call
sti
dec
xchg
ljmp
testl
push
or
jecxz
into
divb
cld
jmp
fstps
cs
divl
jle
bound
decl
shlb
cmp
sub
mov
mov
xor
pushl
outsl
or
and
mov
xchg
jl
fsts
mov
andl
aaa
std
aad
xlat
jge
ja
test
jns
push
stos
mov
mov
push
pop
mov
pop
jl
mov
and
push
data16
mov
fcmovu
call
mov
decl
pop
xor
mov
mov
jnp
in
xchg
inc
adc
xchg
jmp
insb
jnp
dec
jp
push
test
movsl
movntq
mov
fldcw
xchg
push
jecxz
incl
les
shrl
clc
fcomps
and
pop
or
clc
mov
jmp
lods
loop
pop
and
push
push
jmp
jae
xor
popf
pop
movsb
lcall
lcall
xchg
xchg
aas
push
insb
fsubrs
xor
xlat
adc
ljmp
das
daa
neg
xor
nop
inc
data16
icebp
test
mov
rcll
int
pushl
mov
es
xchg
jno
inc
aaa
mov
xchg
fdivrs
cmp
jmp
icebp
adc
mov
jl
xchg
sbb
and
stos
sti
jns
in
sub
sbb
fwait
jae
cld
push
push
cmp
jns
shll
arpl
and
xchg
std
push
pop
jle
pop
dec
xchg
xchg
je
pushl
xchg
pop
jge
cmp
inc
loop
ror
sbb
fisubrl
mov
adc
add
and
sbb
mov
incl
push
cmp
les
mov
adc
xchg
pop
push
mov
mov
pop
loopne
push
test
jp
push
sbb
bound
mov
idivl
sbb
ret
pop
inc
loopne
cmp
or
out
rcrb
call
fsub
push
pop
mov
bound
repz
jmp
arpl
cmp
in
shl
fcomip
or
lods
mov
imul
call
jmp
pop
das
mov
mov
inc
arpl
fwait
ja
pop
rcrb
insb
jg
push
fistps
xchg
xchg
jns
and
incl
xchg
lods
test
stc
mov
and
pusha
aas
mov
xor
mov
adc
call
xor
sbb
jecxz
icebp
xor
data16
fmull
xchg
jg
incl
push
int3
repz
mov
pop
cmp
lea
pushl
insl
push
sub
pop
adc
mov
jg
push
jg
xor
jge
test
cmc
mov
rolb
fs
pop
aaa
mov
sbb
pop
adc
sahf
or
push
xlat
mov
cmpb
mov
push
fidivl
ficoms
ret
lods
xchg
fldl
imul
xchg
and
das
cli
decl
js
adc
inc
lods
sub
adc
cltd
inc
mov
jo
std
pushl
and
iret
movsl
push
cmpsb
sarb
jno
xorb
sub
nop
xor
cmc
call
dec
mov
scas
dec
inc
imul
xor
out
insl
xor
ffreep
adc
sub
mov
ljmp
xchg
jecxz
shlb
adc
pop
movsb
std
pushf
jae
pop
fwait
xor
push
add
push
lcall
frstor
sub
sti
daa
dec
push
imul
sbb
push
daa
inc
pop
cmpsb
call
movsl
mov
repz
cltd
adc
lods
insl
dec
dec
and
inc
incl
sub
add
mov
xchg
loopne
push
clc
andl
xor
xor
ljmp
mov
jge
jne
fstpt
iret
mov
or
icebp
ds
mov
js
fcos
decl
js
clc
outsb
or
stc
lock
lock
inc
sub
mov
inc
or
inc
decl
sub
jmp
lret
enter
sub
add
fsubs
mov
call
xchg
cmpsb
sub
int3
bound
out
push
gs
and
dec
push
xor
pop
inc
fistl
out
cli
inc
enter
pushf
push
pop
mov
jae
pop
aad
sub
mov
xor
sbb
push
xchg
mov
push
mov
lea
jle
test
add
and
pushl
ja
push
and
mov
mov
add
or
add
shr
xlat
test
inc
xchg
adc
cmp
mov
sbb
ljmp
add
add
mov
xor
cmp
scas
pop
and
add
dec
add
decl
sti
hlt
pop
jno
ss
std
lods
pop
and
xor
push
fstp
adc
inc
fistps
mov
js
ret
call
mov
pop
rcrb
idivb
jg
pop
stc
in
fistps
lcall
mov
push
jae
fdivr
decl
push
xchg
aad
insl
enter
outsb
cmpsl
dec
scas
cs
pop
push
orb
mov
sbb
ljmp
jmp
pushf
xchg
cld
roll
nop
movsb
or
in
subl
push
dec
ljmp
mov
lds
les
cmpsb
mov
pop
ljmp
popa
andb
lods
jmp
cmp
inc
int3
aam
dec
mov
add
sbb
push
lret
movsb
repz
push
xor
out
or
jle
jmp
gs
shll
add
adc
jne
add
incl
sbb
mov
mov
sub
inc
mov
sbb
jg
push
dec
insl
rclb
cld
dec
jp
scas
inc
fst
cmp
push
cmp
fldl
call
rcrb
cmp
and
cmp
lds
inc
mov
fwait
lock
sbbb
sub
repnz
pop
call
inc
pushf
popa
fcompl
lds
bound
cmp
div
test
pop
cltd
push
jg
jmp
loopne
ss
xor
loopne
push
gs
inc
sub
popa
jmp
push
sbb
push
xchg
inc
unpcklps
mov
jbe
pop
fnstcw
incl
daa
push
rclb
movsl
ja
push
push
and
or
xor
inc
adc
popf
in
and
popa
adc
ljmp
cmpsl
push
jns
mov
and
mov
mov
shll
xlat
pop
mov
filds
aad
jnp
mov
lcall
sub
jmp
dec
pop
aad
inc
xor
jl
out
mov
xlat
xchg
repnz
out
je
and
inc
mov
outsl
sbb
into
sub
push
inc
lds
sub
lods
pop
mov
add
mov
into
cmpsb
push
or
ss
lahf
adc
popa
test
jnp
mov
and
jmp
mov
add
lods
push
jnp
icebp
or
lea
cmpsl
ficoml
mov
adc
jae
push
punpcklwd
lahf
rorb
mov
aaa
aas
insb
cmp
mov
inc
int
stos
mov
mov
sbbl
stos
push
lea
sub
out
ss
lods
sbb
add
popf
push
les
fldenv
cld
xor
ljmp
sub
cli
mov
mov
mov
mov
push
jg
xchg
mov
ljmp
dec
push
jg
jge
inc
and
xchg
fisubrl
ljmp
rolb
pop
cmc
jmp
stc
sahf
jnp
jl
testl
xchg
fsub
loop
fcomip
call
sar
in
ret
mov
jp
pop
sub
adcb
das
sar
out
rclb
pop
test
jbe
loope
cmp
fisttpll
xchg
xchg
test
push
movsb
mov
sub
lret
fucomip
sub
pop
sahf
sbb
ljmp
jb
repz
adcb
dec
dec
mov
or
lcall
loop
loopne
mov
jae
inc
inc
jnp
xor
jb
addl
das
or
xchg
jns
stos
std
jmp
jnp
add
cmp
in
xchg
adc
pop
jl
pushf
mov
dec
fidivl
jg
inc
out
das
mov
lock
ja
push
mov
mov
mov
movsl
pusha
loopne
mov
enter
push
test
push
push
sbb
jmp
aad
xchg
repnz
fsubr
pop
push
in
fwait
in
scas
cmp
jg
rcrl
xor
jmp
movsb
mulb
pop
inc
mov
pop
outsb
aam
push
and
sbb
incl
movsb
pop
loop
cmp
in
sbb
adc
loope
push
xor
incl
std
adc
daa
ds
mov
sbb
notb
pop
lods
cmp
mov
mov
jg
mov
inc
sahf
cli
sti
push
test
cmp
sub
popf
xor
shrl
push
jmp
or
or
jg
sti
add
add
pop
adc
test
pushl
dec
adc
js
nop
mov
jnp
out
pushf
pop
xchg
jle
leave
sub
ljmp
and
test
subl
rorl
xor
sub
ret
mov
ret
testb
mov
cmp
fdivrp
jo
test
mov
sti
mov
jbe
mov
adc
int3
adc
out
sar
jmp
or
cs
dec
push
xor
lods
outsb
lock
jnp
fs
and
jg
rorb
push
test
mov
xchg
in
adc
jle
push
mov
mov
incl
jbe
aam
rcrb
imul
xchg
mov
fwait
inc
orl
scas
clc
daa
jecxz
push
and
arpl
mov
xor
push
fsub
mov
adc
je
aad
dec
das
dec
stos
mov
in
or
push
cld
jmp
xor
std
in
ja
xchg
lock
adc
sbb
incl
movsb
repnz
mov
jecxz
jbe
sub
mov
sahf
mov
pop
daa
pop
in
out
cli
incl
das
mov
or
pop
aad
push
ror
sub
sub
mov
add
cltd
mov
or
pop
rcr
out
incl
test
jno
js
das
sarb
lods
mov
pushf
jg
pop
cmp
fbld
cmp
repnz
popf
lcall
cmp
dec
push
pusha
out
mov
out
stos
lahf
sbb
cwtl
dec
sti
mov
clc
pop
scas
shlb
icebp
xor
xor
mov
int
and
inc
pop
inc
pop
fadds
jno
add
data16
pop
inc
sub
cmp
dec
jecxz
mov
pushl
cmp
loope
pop
add
mov
out
js
cmpsl
ret
mov
popa
fstpl
xchg
ljmp
pushf
pop
jns
test
bound
dec
mov
sub
cld
mov
sarb
xlat
push
decl
mov
pop
and
enter
mov
cs
mov
enter
leave
lahf
loopne
pop
or
lock
popf
repz
push
shlb
push
stos
cmpsl
jmp
and
xchg
xchg
jne
loop
mov
fcompl
pop
push
clc
jo
leave
mov
jbe
loopne
lcall
negb
fsubs
jns
dec
push
jle
and
into
cmp
push
push
push
xlat
xor
sub
mov
call
pop
je
cmp
cmpsl
fistl
scas
mov
mov
sub
ljmp
in
mov
mov
call
jle
cmpb
dec
add
fidivs
cmc
in
psrld
mov
in
jbe
add
sar
mov
jg
pop
in
aas
or
cmpsb
add
je
shl
pop
dec
adc
jg
call
enter
cmp
scas
jno
xor
push
and
shlb
decl
fstl
mov
andb
push
cmp
shrb
push
push
lretw
jo
jp
or
popa
push
adc
inc
sbb
fidivs
xchg
jae
test
jb
ljmp
cmp
popa
inc
adc
pop
popl
inc
popa
fs
jne
adc
pop
loopne
ljmp
push
or
push
jno
pop
cmp
popa
repnz
mov
test
mov
pushl
nop
pop
mov
xchg
std
mov
dec
addr16
pop
xor
sbb
jge
test
push
cmc
jle
push
sarb
adc
pop
add
xor
imul
pop
and
cmp
push
jae
dec
and
mov
fimuls
addr16
xchg
mov
std
adc
lcall
incl
call
dec
inc
iret
aam
push
cmc
iret
mov
mov
das
pop
lods
incl
push
mov
mov
mov
incb
ja
fcoms
sbb
add
cmp
aam
sub
add
mov
scas
pushl
cmp
ror
aas
popa
xor
cmp
or
push
icebp
andl
and
cmp
jne
call
ljmp
or
mov
inc
sbb
in
nop
shlb
inc
xor
cld
jp
add
and
dec
cmpb
cs
jmp
push
add
xor
mov
jl
pop
cmp
repz
mov
scas
adc
push
or
fwait
idiv
dec
cmp
adc
or
pop
insb
out
mov
xchg
sbb
in
mov
shll
mov
cmpb
lods
sub
xor
pop
or
popa
push
dec
pop
rep
int
imul
std
stos
mov
xor
fildll
fdivl
in
sub
rorb
icebp
mov
decl
mov
mov
aam
adc
jb
fxam
add
adc
ljmp
and
push
mov
jecxz
lods
imul
jnp
push
pop
addr16
dec
shl
cmpsb
jae
ljmp
fcoms
lahf
fdivl
mov
test
or
jmp
jno
imul
out
mov
insb
or
pop
push
push
scas
xchg
pop
sub
scas
decl
push
out
ljmp
or
add
ljmp
jo
adc
inc
movsb
mov
aaa
sbb
push
inc
and
in
addr16
pushl
in
mov
jne
pop
dec
loop
xor
bnd
add
out
or
push
push
out
push
ljmp
mov
loop
sbb
lds
jae
pop
sbb
stos
aam
lock
add
and
inc
out
sub
data16
stc
sub
xor
xchg
lock
pop
pushf
inc
mov
sbb
outsb
cmp
mov
lret
les
lcall
rcrl
fcoms
popa
add
lods
incl
jp
insb
mov
add
cmp
push
dec
jl
dec
or
add
cmc
decl
lcall
push
and
iret
mov
xchg
add
jmp
in
add
mov
dec
dec
jno
stos
cld
cmc
mov
stc
jl
mov
push
mov
pop
scas
cld
aaa
loopne,pt
xchg
mov
call
popa
stc
lods
popf
push
xrelease
popf
push
loopne
out
clc
inc
mov
inc
pop
stos
addr16
sahf
dec
or
aam
jo
icebp
call
lods
add
dec
je
xor
outsb
ss
or
loopne
adc
fld
xor
dec
shll
aas
pop
lcall
mov
inc
out
lods
jp
loopne
and
mov
data16
cmp
decl
in
cmpsb
push
mov
xor
fbstp
mov
clc
out
cmpxchg
loopne
or
mov
ds
shr
icebp
xchg
ret
stc
pop
jno
lds
xchg
xchg
fidivrl
dec
cld
cmpsb
sarl
or
xor
mov
decl
loop
lods
cmpsb
xorb
adc
arpl
popf
cltd
out
mov
mov
xchg
mov
stos
xor
hlt
cli
aad
sti
mov
pop
es
lock
pushl
push
scas
inc
adc
lea
mov
mov
daa
insl
das
int3
sbb
xlat
sahf
popl
call
jne
ret
nop
pop
stos
pusha
ja
push
dec
jae
jae
popf
std
scas
pop
xchg
or
and
call
push
and
leave
repnz
lret
test
xor
inc
cmp
xor
ljmp
adc
stc
xchg
push
enter
adc
insb
pop
sub
push
adc
out
adc
add
cli
adc
sar
sar
mov
jecxz
dec
aad
jge
fnstenv
lock
cmp
xlat
push
clc
lret
and
scas
daa
push
pop
movsb
ret
mov
lcall
jg
iret
pop
push
cmp
sahf
inc
xchg
xchg
dec
xlat
and
or
lock
adc
add
incl
or
sahf
ret
insl
aas
movb
pop
sub
test
jb
ljmp
mov
jmp
jns
enter
xchg
jle
mov
sbb
pop
and
adc
scas
sub
ja
pop
dec
jbe
call
std
scas
push
jge
sub
daa
repnz
jno
stos
push
lods
test
test
mov
or
cmp
lcall
xchg
add
negl
jg
in
jno
sub
js
pop
push
mov
and
addl
out
mov
add
outsl
dec
call
fs
out
out
pop
fldenv
lock
in
cmp
lcall
inc
sbb
jg
decl
loope
insl
adc
mov
out
mov
mov
push
insb
push
jmp
out
es
aam
rcrl
mov
xor
push
imul
xor
fmuls
and
call
js
shr
sbb
int3
jnp
or
cmp
ljmp
out
dec
cld
or
mov
roll
adc
into
mov
icebp
iret
inc
std
decl
clc
mov
jmp
fcmovb
mov
xor
pop
icebp
call
push
add
pusha
addl
pop
jo
fidivrs
jl
cmp
movsb
jmp
jg
sbb
imul
ss
mov
push
in
incl
jne
loopne
decb
ss
jo
insb
mov
pop
mov
in
mov
inc
sub
add
negl
push
roll
cld
jg
test
shrl
pop
sub
stos
lcall
outsb
fcomps
subl
mov
in
call
ljmp
in
dec
pushf
mov
mov
call
divb
mov
xor
addb
out
dec
cmp
call
mov
jno
outsl
in
stos
mov
gs
imul
call
fnstenv
xchg
mov
hlt
sbb
jae
sbb
bound
loop
adc
lock
adc
lret
lock
adc
lock
jp
into
test
adc
arpl
add
mov
in
mov
and
push
loop
pop
xchg
mov
lods
sbb
fcomip
jmp
scas
negb
push
shlb
outsb
gs
mov
pushl
shll
jp
jnp
mov
cmp
js
and
push
inc
adc
scas
cli
pushl
fmul
or
aad
jo
sbb
add
decl
add
gs
jo
enter
and
lcall
out
cli
call
std
sbb
push
lds
pop
adc
push
std
mov
outsb
mov
popa
rolb
ss
jb
and
in
loope
inc
mov
incl
pop
data16
insl
icebp
lret
xor
clc
mov
mov
sub
test
or
sbb
fcmovbe
push
mov
test
pop
shlb
jmp
out
cmp
jmp
mov
xor
mov
test
mov
mov
mov
jmp
sbb
or
sub
pop
inc
xchg
inc
dec
add
cmpsb
pushf
ljmp
xor
repnz
push
xchg
inc
sbb
mov
call
pop
and
add
adc
jo
dec
in
add
mov
or
push
cld
call
js
jecxz
dec
jns
jle
or
fiadds
mov
sarl
imul
aaa
cs
push
stos
aad
jae
jns
dec
ret
call
loope
jae
jle
das
push
sub
pushl
jb
aas
fistpll
jp
mov
xchg
lea
mov
aaa
jge
shlb
push
bound
sub
call
adc
push
test
push
xchg
repz
adc
xor
inc
mov
push
mov
ljmp
loopne
adc
pop
in
in
dec
cmp
dec
mov
push
adc
sub
sbb
ljmp
popa
stc
mov
sub
xor
gs
dec
pop
push
subb
jge
push
xchg
jecxz
pop
sub
cmp
xchg
lods
fnstcw
icebp
mov
insl
int3
push
fwait
pop
out
xor
inc
movsl
cmp
fwait
decb
add
insb
loope
in
into
loope
out
stos
movsb
test
addb
decl
repz
imul
iret
in
xor
in
stc
mov
ficoml
pop
decl
cmp
mov
sbb
xchg
adc
scas
add
inc
in
nop
push
lahf
add
loope
sti
mov
decl
dec
mov
and
pop
test
sub
mov
jg
call
and
pop
into
or
ret
inc
push
into
nop
push
leave
cmp
jmp
daa
div
mov
loop
rcr
into
daa
repz
int3
ds
adc
lcall
call
in
fbld
adc
cmp
cmp
dec
mov
arpl
stc
outsl
push
jno
push
out
pushw
fs
push
int
les
sub
popf
pop
mov
jg
cmp
adc
inc
je
cmp
and
mov
xchg
pop
aad
out
addr16
mov
push
sbb
cld
fsubrl
in
decl
add
jbe
mov
stos
sub
push
loop
rclb
aam
movsl
jmp
jno
pop
inc
jmp
sbb
jae
jnp
push
iret
jbe
xlat
sti
push
mov
dec
xchg
pop
adc
imul
sub
ret
cmc
adc
je
out
icebp
add
js
mov
ljmp
cwtl
repnz
jecxz
movsl
adc
xchg
call
arpl
insb
push
hlt
scas
lcall
mov
adcb
sub
sub
mov
rcll
xlat
movsl
int3
inc
das
xchg
cwtl
push
jg
inc
iret
roll
cmpsl
dec
mov
push
int3
mov
test
pop
cmp
jg
leave
sbb
lea
iret
imul
sbb
add
lcall
push
es
sahf
sub
mov
inc
or
rcll
incl
out
cli
rol
insb
mov
dec
xchg
cmpsl
add
dec
rorb
jnp
pop
lock
out
fs
mov
cld
incl
outsb
loop
out
shrl
lret
xor
push
cmp
xchg
mov
es
cmp
decl
mov
ljmp
fnstcw
pop
xchg
ret
icebp
xchg
mov
lcall
stos
popa
repnz
xor
pop
test
cltd
xor
push
imul
sub
mov
sarb
ljmp
mov
inc
les
leave
repz
cltd
enter
adc
xchg
insl
mov
pop
cld
lcall
mov
mov
jb
lret
test
pop
cmpsb
aas
out
lea
push
leave
mov
and
jge
in
pop
pushf
fimuls
sub
in
or
lock
decl
push
jge
arpl
mov
xchg
lcall
scas
add
fwait
mov
cs
cli
sti
dec
mov
hlt
scas
inc
sbb
call
sbb
out
dec
cltd
cmp
cmp
scas
xchg
lock
pop
cld
pop
pop
adc
imul
ljmp
lret
test
xor
pop
mov
pop
out
pop
or
mov
add
mov
pushl
jp
test
shll
mov
out
fcompp
into
adc
xlat
inc
fadd
cmp
orl
pop
dec
imul
repnz
add
push
fdivr
push
mov
incl
push
or
shrl
je
and
fsubrl
push
inc
in
cmpsl
xor
inc
jnp
cmpsl
add
incl
push
divb
into
inc
sar
jo
loopne
sub
shlb
sbb
andb
aaa
add
in
mov
adc
mov
mov
dec
pop
sbb
inc
cld
pushl
push
sbb
and
dec
cltd
jle
inc
and
addr16
fisubrl
xchg
xor
pushl
xchg
clc
fimull
in
outsl
adc
xchg
mov
pop
xlat
push
xor
loopne
inc
or
stos
or
mov
jle
sub
and
fldl
test
aaa
cld
pushl
stc
mov
push
in
sbb
mov
cwtl
lret
testl
ljmp
xor
mov
aad
cmp
lods
xlat
jge
lret
shl
pop
mov
cmp
movsl
roll
iret
shrb
dec
fnsave
sbb
scas
popl
out
cli
jne
js
xor
and
mov
or
shlb
scas
xchg
pop
mov
or
jns
cmpsb
add
or
and
pop
inc
jo
adc
lods
jle
call
xor
insb
cmp
and
in
negb
cmp
or
int3
out
cltd
es
dec
cltd
xchg
jecxz
fidivs
ret
cmp
imul
adc
push
add
int
lcall
hlt
popa
xchg
std
in
in
mov
jbe
sbb
xchg
xor
add
pop
mov
lahf
fists
push
pushf
jb
add
testb
neg
or
jl
adc
int
push
call
aam
lods
jae
iret
out
add
fstpl
cmp
mov
mov
inc
cs
adc
sbb
dec
stc
or
rclb
std
call
mulb
loop
or
lods
popf
popa
divb
lcall
sub
push
out
mov
pop
gs
in
mov
dec
fwait
xor
cli
or
stos
jns
sub
mov
mov
pusha
data16
fsubs
push
movsb
push
fadds
or
sar
or
jo
push
jae
cs
pop
cmpsb
mov
loop
inc
rep
call
fnsave
mov
lods
cmpsl
daa
orb
mov
sbb
add
mov
and
cmp
icebp
jne
das
mov
pop
test
xor
ljmp
mov
lock
popa
out
fwait
adc
jae
movsl
cmpsb
jo
mov
ljmp
inc
xor
mov
push
in
push
jo
or
mov
pop
lods
or
loopne
cs
cmc
push
dec
jno
mov
ret
out
jmp
out
pop
leave
adcb
decl
addr16
mov
inc
adc
xchg
xchg
jb
das
lea
lcall
call
bound
les
or
push
fidivl
in
idivb
cwtl
inc
out
sub
jmp
adc
jle
ss
cmp
popf
in
inc
xchg
in
sahf
stc
cmp
cmp
sahf
popf
mov
inc
clc
inc
sub
sbb
jnp
add
mov
xchg
inc
mov
ficompl
mov
in
fs
test
xchg
add
inc
dec
mov
je
jge
icebp
rcrb
mov
push
mov
jg
out
jg
dec
in
mul
inc
test
push
inc
cs
inc
outsb
out
flds
push
aas
jno
mov
lahf
push
cmc
out
cli
call
imul
xchg
xchg
add
mov
test
push
add
les
lock
stos
jg
cwtl
cmp
push
add
decl
jle
sti
test
dec
push
mov
loop
test
aad
xor
scas
cmp
cld
call
call
mov
mov
lds
mov
mov
cltd
in
xchg
mov
pushl
popf
mov
popa
cmp
and
inc
push
pop
int3
sar
sbbb
stos
sbb
mov
dec
xchg
and
pop
adcl
mov
aad
sub
jmp
jle
aam
fcoms
ljmp
push
sbb
xchg
dec
cmp
mov
sub
decl
add
mov
jmp
push
jge
mov
repnz
outsb
daa
fwait
push
insl
mov
scas
dec
sbb
inc
decl
or
lret
stos
cs
jecxz
push
lret
jl
add
adc
xlat
jo
lahf
insl
sbb
jg
ds
scas
jg
sub
repnz
shlb
dec
mov
hlt
cmc
pop
cs
adc
decl
sbb
cmc
movsl
repnz
insl
lea
jle
jl
inc
xlat
into
push
pop
pop
shll
push
push
adc
xchg
cmp
int
test
push
or
push
in
in
jp
mov
inc
orb
decl
repz
mov
xchg
jp
imul
lea
push
stos
icebp
pop
mov
jmp
push
xchg
pop
jb
loop
push
sub
ljmp
push
sbb
sahf
jle
mov
repz
adc
adc
shrl
mov
pcmpeqb
jecxz
xchg
call
cmp
icebp
cld
mov
mov
fbstp
loopne
push
in
stos
adc
imul
imul
imul
jmp
ja
fldt
fs
das
jecxz
push
and
lods
sub
decl
push
lock
lock
in
fwait
call
notl
inc
dec
pop
or
decl
push
mov
xor
dec
int
mov
jecxz
sub
push
std
sub
leave
mov
ljmp
data16
dec
imul
dec
mov
sbb
cmpsl
mov
adc
add
adc
in
mov
pop
jg
mov
add
push
inc
shrb
mov
mov
std
lods
insb
xchg
cld
ja
or
arpl
repnz
xlat
xchg
cmp
add
and
add
mov
popa
and
pop
pusha
mov
or
pop
decl
ret
cs
or
sbb
mov
ljmp
stos
repnz
test
sahf
adc
jmp
push
imul
mov
mov
ret
hlt
pop
popa
xor
and
loop
loopne
mov
push
mov
push
dec
loop
out
pushl
pushf
pop
sub
in
add
push
loop
mov
push
cli
pop
jno
add
and
data16
push
ficompl
mov
add
aad
mov
dec
sbb
nop
mov
aas
int
inc
sbb
inc
lods
cmp
arpl
mov
pop
rclb
jle
jmp
ret
add
daa
or
cmp
decl
call
adc
xor
xor
push
lret
and
cmp
insb
cmpsl
out
jmp
mov
sub
cmc
cmp
lahf
jno,pn
es
push
std
out
decl
push
add
sub
mov
sub
ds
push
imul
repz
in
negl
dec
adc
mov
cs
or
int
add
push
fwait
icebp
ret
pop
pop
fnstcw
call
fcmovnbe
es
cmp
push
bound
aad
mov
out
mov
jmp
jns
dec
loop
lret
mov
add
psrld
or
pop
stos
xor
fcoms
push
decl
dec
movsb
pusha
inc
ja
inc
pusha
imul
jle
xlat
push
mov
incl
jg
cmc
nop
aas
pop
jge
sarl
add
dec
ds
pop
cmp
jbe
aaa
add
incl
mov
popf
or
push
add
push
mov
mov
jp
fwait
and
adc
dec
xchg
mov
mov
insb
cmp
jb
es
jmp
loopne
fwait
ds
aad
and
mov
add
nop
scas
lea
js
mov
push
inc
pop
mov
jle
pop
stos
sub
imul
add
mov
xchg
mov
inc
ret
stos
inc
out
hlt
les
sbb
and
xor
mov
push
fwait
lret
pop
jb
adc
jg
mov
push
cmp
hlt
sbb
incl
pop
xchg
roll
shlb
sbb
lret
loope
and
ret
ljmp
ss
out
call
aas
loopne
push
jmp
cmp
mov
mov
and
mov
add
inc
cs
jmp
jns
xorb
faddl
mov
xchg
jp,pt
and
jmp
ss
mov
dec
inc
clc
mov
cs
mov
ss
ljmp
insl
lcall
fistpl
pop
addr16
push
icebp
cs
pop
mov
push
jae
dec
out
add
fcomip
push
lret
movsl
inc
js
je
and
mov
or
decl
mov
xlat
imul
scas
xor
push
sbb
pop
cmpsl
dec
adc
and
dec
pop
inc
cli
jb
popa
mov
stos
in
in
lods
in
mov
cwtl
insb
mov
mov
insl
inc
outsb
data16
aaa
inc
xchg
mov
or
or
aad
jle
or
mov
push
and
and
sbb
out
iret
decl
mov
in
fildl
enter
andl
xchg
pusha
data16
das
push
adc
insb
sbb
lcall
imul
dec
scas
pop
cltd
scas
sub
roll
repnz
jnp
call
inc
test
loop
stos
addr16
mov
jle
repnz
adc
mov
pushl
ljmp
xchg
and
gs
int3
jg
or
outsl
sbb
sbb
arpl
int3
lret
xchg
inc
add
mov
int3
in
push
loop
fcomip
pushl
push
mov
cmp
call
mov
arpl
push
push
call
lret
jle
aas
inc
not
pop
dec
outsb
pop
cmp
divl
in
xchg
mov
pop
pop
adc
fwait
xchg
add
jae
cwtl
test
lea
push
xor
sub
fwait
ja
mov
divl
lcall
xchg
ljmp
cmpsl
or
push
clc
in
xchg
incl
enter
dec
pop
pushf
sbb
or
and
inc
rclb
mov
das
in
add
call
daa
xchg
filds
hlt
adc
mov
jno
pop
aas
jg
lret
and
cmp
lock
mov
loop
and
fdivs
test
pop
ss
call
je
stos
mov
cmp
cs
call
seta
xchg
adc
leave
lcall
call
and
jecxz
sahf
stos
xchg
mov
pop
jb
pop
sub
xchg
js
les
call
jnp
fiadds
xlat
hlt
and
sti
and
lea
je
adc
jg
mov
dec
mov
sub
inc
inc
mov
push
adc
mov
rolb
loope
clc
imul
out
cli
enter
adcl
movb
pop
pop
loopne
pop
lock
mov
cmp
pop
mov
and
ret
daa
bound
fildll
lock
rol
pop
and
aaa
or
dec
inc
adc
ljmp
clc
lcall
cld
cmp
mov
movsl
das
nop
outsb
inc
cmp
cmc
sbb
jo
push
pushl
cmp
shlb
inc
cmpxchg8b
adc
push
mov
xchg
call
mov
adc
xor
shlb
sbb
xor
jns
add
std
mov
incl
icebp
mov
clc
mov
push
pop
mov
scas
out
inc
cmp
call
shlb
sub
or
xchg
jl
stos
pop
add
xlat
inc
nop
in
mov
or
in
test
push
dec
add
push
xorb
mov
in
lock
inc
jecxz
je
sbb
imul
fcomip
ret
push
stos
in
push
aaa
popa
xchg
xor
fisttpl
mov
sub
pop
jno
xlat
inc
arpl
cmp
ja
rorl
jmp
push
mov
mov
lcall
push
shr
or
mov
pop
int
mov
add
sub
sbb
inc
pushf
les
cld
xor
ja
insl
testb
out
shlb
inc
arpl
jg
push
sahf
pop
js
outsb
ss
and
or
rcrb
pop
add
mov
add
pop
mov
stos
jo
mov
sarb
in
sbb
stos
xor
in
loope
repz
pop
jae
jmp
add
mov
fidivl
push
fcompl
sbb
cltd
push
into
cmc
cmp
mov
divb
jne
mov
adc
xchg
movsb
sbb
rolb
pushl
pop
je
fisttps
sub
fistps
mov
sbb
mov
loop
fs
mov
in
cmp
fisubrl
sti
push
rorl
loope
stos
imul
xor
js
gs
mov
out
test
mov
imulb
cli
push
mov
fists
repnz
lods
add
call
xchg
cmpsl
shl
scas
xchg
or
ja
lods
stc
in
pop
xlat
sbb
out
mov
lcall
inc
sti
pop
pop
jp
sub
adc
xchg
shll
mov
mov
add
sbbl
sub
test
jnp
clc
pushl
fidivrs
fadds
jnp
jp
cli
adc
test
cli
dec
cli
nop
decl
jmp
fcomip
mov
out
icebp
cmp
xor
insl
dec
repz
push
mov
pushf
scas
mov
push
int3
inc
xchg
jecxz
sub
icebp
aaa
add
decl
and
aam
sarb
mov
sti
in
fcompl
jno
in
sbb
push
lcall
jo
mov
add
icebp
dec
icebp
mov
jmp
add
fistps
add
jo
push
enter
dec
xlat
addr16
xor
out
ret
add
sub
xor
repz
ljmp
xor
mov
add
incb
xor
mov
mov
mov
call
sbb
and
movsl
hlt
xchg
xchg
xchg
les
int3
dec
testb
mov
pusha
jmp
scas
sub
cwtl
ljmp
sbb
xor
xchg
fnstenv
inc
lea
or
call
jecxz
and
sbb
aam
nop
push
jl
scas
leave
jmp
stc
or
push
pop
and
push
cmpsb
call
ljmp
xchg
jmp
aaa
dec
lock
pop
sbb
mov
out
clc
ljmp
mov
sbb
ds
imul
lcall
inc
mov
decl
and
jp
imull
pop
adc
sbb
int3
cltd
or
loope
add
decl
lcall
dec
or
inc
in
push
mov
cmp
and
push
ret
loopne
and
push
lds
lea
add
mov
test
pusha
insl
mov
mov
mov
pusha
scas
cmp
rcl
fsubrp
and
lock
sub
sbb
pop
xorl
jl
xor
inc
or
sarl
dec
rcll
sub
out
pushf
dec
xchg
imul
out
and
mov
sub
or
sbb
and
sti
lds
addr16
fisubl
xlat
adc
or
hlt
push
mov
int
fldz
xor
test
incl
xor
enter
xor
mov
mov
bnd
xchg
fcmovne
scas
dec
xchg
mov
xor
add
sbb
loope
in
xchg
adc
push
mov
call
dec
cltd
aam
push
push
aas
out
lret
cs
loope
in
lahf
sub
out
sahf
inc
lods
shrb
decl
aam
mov
aas
ret
loop
jae
and
ret
pushf
pusha
lods
fsubr
jnp
sbb
outsl
ret
xor
cwtl
inc
ja
xchg
push
popf
sbb
lret
cwtl
mov
jmp
mov
dec
jno
popa
cmpsl
addr16
test
push
xchg
sar
shlb
inc
loope
inc
ja
inc
pop
arpl
add
stc
aad
mov
mov
xchg
in
lcall
mov
into
mov
out
test
push
xor
repz
sub
notb
adcl
mov
xor
and
or
or
jmp
dec
dec
xchg
mov
push
out
pusha
gs
inc
ja
push
test
pop
xorl
leave
and
push
mov
out
jnp
in
xchg
fcoms
jmp
push
xor
stos
adc
call
jne
and
xor
jge
inc
cmpb
add
adc
in
pop
iret
xchg
sub
mov
mov
jg
cmc
dec
push
mov
and
or
adc
dec
mov
out
aaa
xor
inc
sti
popa
add
adc
mov
dec
cmpsb
cmp
cld
fistpl
fs
cmpsb
nop
sbb
jl
pop
push
loopne
fnstenv
dec
cld
adc
fcomps
push
lock
xchg
adc
icebp
subl
repnz
jmp
sbb
push
imul
dec
mov
icebp
jecxz
imull
nop
push
addr16
negb
movsl
outsl
lcall
push
inc
sbb
push
xchg
mov
mov
pop
sub
inc
cld
incl
sbb
addr16
scas
in
aad
add
ljmp
negb
cltd
es
test
pop
inc
push
fwait
inc
jp
xor
pop
xlat
data16
jmp
iret
push
xchg
rolb
aas
pop
repnz
daa
fs
lock
and
test
incl
cmp
ss
imul
clc
mov
jae
mov
xor
adc
cltd
clc
xchg
lea
jmp
les
cltd
mov
xchg
mov
cmp
sub
shll
lcall
mov
fldt
xchg
or
mov
imul
lods
jo
push
leave
clc
incl
dec
push
add
pop
xchg
push
outsb
sub
xor
call
sub
jo
sbb
xor
stc
and
sub
lret
mov
lret
loope
pop
rcl
push
mov
out
ja
outsl
mov
mov
addr16
inc
inc
jo
dec
jmp
adc
test
push
jmp
jg
decl
add
cltd
sub
clc
lods
mov
add
dec
adc
decl
xor
ds
and
sbb
adc
mov
adc
cltd
lret
incl
add
pop
add
dec
lds
xorb
jo
jmp
sbb
inc
scas
pop
in
dec
sarl
sbb
sar
cmp
jmp
imul
dec
ljmp
add
imul
xchg
xchg
popf
push
mov
stos
pop
mov
out
lea
mov
xchg
jg
cmpsl
xor
cmp
jge
or
ljmp
or
pop
and
adc
mov
dec
call
fld
icebp
jb
xchg
lcall
ljmp
repz
and
rorl
frstor
ja
call
lods
aaa
sub
xor
xchg
ljmp
mov
xor
mov
orl
adc
jmp
and
adc
jge
jns
lea
cmp
push
cli
push
mov
pop
nop
jo
fwait
sub
sar
lret
sub
xor
call
subb
std
in
inc
or
xchg
mov
fidivrs
xor
out
lock
dec
stc
lea
cmp
and
mov
adc
scas
mov
cwtl
mov
push
cmp
or
fidivl
call
push
cmp
stos
jg
jmp
notl
fimuls
or
fs
fdivl
mov
jo
nop
bswap
lret
sbbl
inc
adc
ja
ja
xchg
jl
inc
jl
fadd
test
sbb
lcall
push
ljmp
cld
sbb
push
scas
dec
push
mov
dec
mov
cmp
popf
ja
pop
sub
test
sub
lcall
lcall
cmp
dec
outsl
es
cmc
rcr
fs
test
mov
adc
bound
jb
incl
loopne
inc
das
lods
ret
and
in
mov
je
fimull
icebp
addr16
scas
test
incl
adc
loope
fists
sti
cltd
in
shl
fcoml
jg
push
icebp
inc
movsl
push
adc
mov
mov
popa
rolb
inc
call
jo
movsb
scas
pop
lcall
mov
int
xor
fwait
jecxz
icebp
cld
js
enter
loopne
jb
inc
dec
mov
in
out
push
sub
fildl
das
fnstsw
ljmp
mov
fidivl
imul
pop
inc
xchg
int
mov
xlat
push
dec
incl
ss
movb
cmp
push
push
rcrl
imull
repnz
mov
in
ss
jmp
mov
xchg
testl
fildl
inc
fildll
push
in
lcall
dec
sahf
aam
mov
fidivl
pop
jbe
leave
in
insl
pop
mov
add
push
in
ja
cmp
jnp
decl
mov
pop
fwait
je
adc
and
add
jmp
sub
mov
in
or
xchg
fstps
inc
xor
sbb
jl
add
decl
call
adc
mov
shlb
sub
rcll
cs
cmpsb
inc
xchg
jmp
mov
adc
out
lret
jnp
daa
jo
pop
add
add
out
xchg
push
mov
jo
push
sbb
and
stos
test
jmp
sub
mov
cmpsl
pop
add
dec
mov
mov
mull
mov
mov
push
jmp
call
mov
add
jbe
bound
or
ljmp
cmpl
decl
jl
loop
arpl
add
push
inc
pushf
in
pop
mov
add
dec
sub
mov
lret
and
loopne
mov
mov
repz
repnz
cmp
cwtl
fidivrl
xchg
imul
dec
xchg
mov
enter
fadds
pop
sub
imul
fdecstp
sub
scas
test
inc
inc
sahf
push
popa
stos
jb
and
int3
frstor
loop
jg
xor
enter
add
js
clc
jmp
mov
mov
and
cmpl
shl
loope
test
sbb
pop
dec
sub
xorb
aad
sub
fbld
ret
mov
mov
cmp
or
outsb
pop
cmp
push
inc
fldlg2
mov
sub
les
inc
inc
pop
out
int
aad
ja
decl
pop
faddl
pop
pop
pop
test
repz
addr16
dec
inc
mov
lock
and
push
clc
xchg
cmp
mov
pop
fists
pop
cmp
push
sub
inc
push
xor
xchg
popf
and
mov
jg
andb
mov
adc
push
bound
mov
sbb
sarb
jne
test
es
out
out
cltd
mov
inc
sbb
or
ljmp
imul
and
outsl
mov
fs
push
pop
push
jno
cltd
mov
cmp
call
or
cmp
enter
shll
jno
push
mov
and
sub
pushl
stc
loop
sub
cs
xor
cmp
cltd
pushf
divb
ret
xchg
add
into
add
int
fistpl
jmp
mov
test
add
jb
daa
push
stos
or
cmp
idivb
pop
fildll
repnz
lods
pop
inc
jp
popl
insb
sbb
jmp
daa
sbb
movsb
pusha
pop
and
push
test
inc
mov
rcrb
ljmp
adc
xorb
jge
jl
and
adc
decb
jno
decl
and
je
or
test
jmp
cs
mov
sti
mov
mov
sub
jp
loop
xchg
add
insl
aam
mov
adc
into
sub
jge
in
fimuls
fistps
cwtl
jae
das
or
ss
push
out
scas
in
add
sbb
add
mov
push
pop
cmp
int3
cmp
rorl
mov
jnp
or
testl
mov
mov
fadds
add
test
inc
stos
sub
mov
lcall
mov
mov
mov
rcrl
mov
xchg
jne
enter
sub
jmp
xchg
xor
pop
ds
sbb
jno
aas
adc
test
ja
cmp
sti
mov
push
mov
add
mov
adc
test
mov
aam
dec
cld
push
loopne
pop
mov
sub
divl
inc
mov
cli
sub
stc
out
je
aad
stos
or
fildl
fwait
gs
add
push
jg
jg
in
insl
add
mov
into
mov
mov
or
loope
adc
pop
aam
lcall
fcmovb
and
push
clc
mov
xor
cmp
idivl
push
jns
inc
jnp
add
mov
adc
jl
negl
imul
pop
jmp
push
dec
push
jecxz
popa
aad
adc
mov
jg
fwait
xor
movsb
lods
and
cwtl
hlt
push
adc
je
ss
push
and
jb
add
iret
and
mov
lds
clc
into
sbb
and
push
rolb
adc
int3
ljmp
cmpl
in
jmp
in
lds
out
pushl
in
ja
dec
mov
push
push
sub
fstps
add
dec
mov
insl
cmpsb
dec
stos
call
push
jo
xor
insb
xor
jnp
aad
fwait
cmovl
jge
lock
lret
test
adc
clc
in
push
sub
sbbb
js
xchg
ljmp
lahf
ja
fstps
orl
call
xor
rcl
add
loope
push
pop
int
cmp
incl
das
jge
pop
mov
push
mov
push
xor
gs
pop
mov
jns
loop
jge
pop
xor
jno
je
cmp
lgs
xchg
ja
test
mov
scas
xchg
test
into
inc
int3
imul
sub
mov
xchg
sti
xchg
bound
jmp
cmc
jno
incl
jp
arpl
mov
lret
or
cwtl
movsb
push
inc
or
xchg
push
aaa
jae
inc
sbb
ret
fcoms
cwtl
pop
add
inc
push
incl
fisubs
mull
add
sbb
lret
and
push
dec
stc
cmp
jle
dec
jecxz
sub
in
mov
stc
inc
push
mov
sbb
ret
or
sub
sbb
aad
cmc
pop
cld
outsl
cli
sar
das
push
in
jns
lods
sqrtps
aaa
mov
xchg
add
pushl
xor
fidivl
jl
mov
ds
and
icebp
hlt
cmp
ljmp
add
adc
sbb
int
mov
mov
mov
std
mov
stc
ss
adc
cmp
mov
fidivrs
jb
jmp
imul
negb
inc
ja
ss
into
pop
xor
xchg
ret
and
cmp
mov
mov
mov
cli
pop
psrlw
dec
dec
or
mov
jp
inc
test
jae
jno
addr16
sbb
jae
lock
add
jle
outsl
cli
dec
cmp
std
mov
mov
cltd
mov
jg
push
jbe
add
test
out
std
jne
add
pop
mov
inc
aam
je
jl
jmp
jge
insl
push
lods
push
sahf
ret
int
sbb
insl
mov
fs
push
enter
pop
sar
inc
and
stos
cmp
jae
jg
xchg
jno
fisubs
fs
pop
js
sub
or
push
jmp
jmp
js
xchg
in
stos
aad
lock
xchg
ret
decb
lcall
xlat
push
jecxz
push
push
in
jo
sbb
out
scas
stc
stos
movsl
mov
incl
dec
mov
ret
cmpsl
jg
jns
out
das
aaa
fldcw
mov
add
loope
loopne
out
rclb
lds
jl
mov
enter
lret
js
xor
fbld
sub
add
adc
xchg
dec
andl
decl
psubsw
inc
aas
sub
inc
popa
notl
push
mov
ss
cwtl
in
out
clc
movl
scas
bnd
rclb
jge
xchg
pop
mov
clc
jb
add
push
mov
sbb
into
mov
cwtl
pop
testl
mov
call
in
out
dec
push
mov
adc
add
fisttpl
lds
xchg
fistpll
lcall
xchg
and
jg
call
add
incl
cli
xlat
ret
xor
sub
jecxz
and
pop
mov
stos
pop
or
call
adc
fildll
clc
sahf
shlb
aas
jne
mov
xchg
lcall
popa
sbb
mov
push
jne
pop
cmp
adcb
cli
hlt
push
scas
jecxz
push
js
xchg
in
sub
outsb
call
push
data16
out
jp
test
sbb
test
sub
shll
cmp
stos
mov
stos
fcomip
gs
ds
loope
xchg
shll
cli
sbb
call
mov
cs
push
lds
jne
and
cmp
rcrl
mov
shl
cld
pop
ljmp
incl
pop
jae
dec
pop
addr16
adc
and
xchg
push
and
decl
das
pop
fcmovnb
cmp
dec
nop
cs
add
mov
daa
in
push
call
inc
sub
clc
pushl
add
lret
scas
negb
fsubrs
mov
add
cli
call
and
inc
and
pop
mov
pushf
repz
clc
cmp
xor
test
notb
add
cmp
gs
mov
in
mov
inc
mov
push
jns
xor
or
stc
lods
mov
iret
xchg
or
mov
stc
sub
movsl
decl
and
xor
mov
push
idivl
fadds
pushl
and
push
mov
sub
mov
loopne
decl
clc
mov
cmp
lcall
bound
and
xor
and
adc
cld
lcall
cmp
ja
cwtl
xor
inc
je
cmp
jo
cmp
mov
xchg
sbb
lcall
inc
imul
sbb
and
add
or
lock
jbe
xchg
pop
xor
mov
test
ljmp
xchg
sbb
mov
pushf
ds
adc
repz
test
pop
dec
dec
inc
ret
mov
into
xchg
add
imul
jne
clc
pop
or
mov
add
inc
aam
lds
and
pop
pop
lock
arpl
outsl
outsl
mov
aaa
mov
add
inc
or
xchg
insb
aam
cld
mov
insl
pusha
pop
arpl
sub
cmp
fcomip
push
cwtl
stos
push
sahf
and
stc
xchg
mov
sahf
pop
or
lcall
and
repnz
pop
pop
dec
sub
push
fcompl
push
enter
outsb
scas
lcall
push
aad
inc
or
adc
or
jg
test
mov
dec
scas
mov
jecxz
pushf
inc
sbb
fisttpll
jp
pop
sbb
jmp
xchg
xor
adc
je
insb
test
sub
push
gs
inc
sarb
inc
xor
loope
or
decl
das
fwait
or
divl
iret
and
outsb
in
xchg
push
lcall
iret
xchg
jo
cmp
adc
and
mov
cmp
jge
out
outsb
pop
push
clc
push
add
pop
into
mov
add
les
sahf
fdivl
and
jmp
sub
push
or
dec
push
add
dec
jae
lret
imul
movsl
jge
decl
shll
repnz
loopne
rcrl
ljmp
xchg
mov
neg
hlt
jg
nop
push
push
dec
fsubrl
rorl
add
xchg
ud0
mov
leave
sti
jp
fisubrs
inc
out
ror
insb
jmp
into
stc
sub
test
faddl
call
dec
jbe
fwait
int3
add
cs
out
or
incl
sub
ja
mov
bound
mov
jno
xor
sub
aad
aad
dec
in
dec
data16
loope
cmpb
call
jno
out
call
adc
push
dec
lods
mov
inc
adc
mov
mov
lcall
sbb
out
lahf
or
pusha
push
jg
stos
mov
les
push
pushf
xchg
daa
push
sbb
fisttpll
mov
decl
and
mov
imul
addl
sbb
mull
jg
js
mov
gs
cli
stos
dec
push
pushl
mov
mov
xlat
mov
pushl
std
decl
sbb
adc
and
test
addb
clc
adc
push
cmc
scas
cli
push
leave
mov
jecxz
outsb
jb
pop
sub
sbb
arpl
bound
pushl
mov
pop
dec
push
pop
adc
rclb
js
pop
xor
cmpsl
incl
movsb
daa
xor
add
loop
or
inc
xchg
incl
mov
push
or
dec
dec
jnp
pop
push
adc
jmp
scas
jmp
fbld
pop
les
mov
add
push
cmp
mov
ret
jg
lock
std
mov
add
in
pop
sbb
and
sub
dec
push
adc
icebp
jg
decl
out
mov
lret
aad
mov
pop
sahf
test
and
inc
in
adcb
icebp
outsl
push
fdiv
mov
lock
adc
mov
push
pop
jns
jbe
mov
and
out
je
ds
add
inc
sahf
fisttpll
and
pop
adc
vminps
xor
xchg
gs
out
leave
pushl
sbb
insl
sub
mov
mov
and
gs
cli
incl
fisubrl
pop
xchg
xchg
out
loop
negb
call
lds
push
cmp
push
js
aam
loopne
setle
lcall
fdivr
mov
xor
pusha
test
popa
push
xchg
add
mov
out
call
out
xor
int3
ja
fnstsw
dec
xchg
mov
rcll
lods
mov
scas
call
sarl
pop
rcll
adc
in
xor
mov
call
stos
xchg
adc
ljmp
out
popa
xor
pop
call
jno
cmpsb
xor
lock
stc
sub
or
pop
mov
addr16
filds
in
cmp
roll
repnz
fs
xor
arpl
lret
xor
ljmp
cli
icebp
je
outsl
cmp
in
std
mov
shll
sbb
pop
mov
mov
rorb
lods
in
shl
outsb
cmp
mov
jge
das
and
jmp
out
add
sub
popf
xchg
repnz
cmp
mov
push
sarb
inc
or
aas
arpl
cmc
in
mov
outsl
test
or
cwtl
mov
add
inc
xchg
ljmp
jmp
inc
mov
loop
push
scas
mov
fsubrs
ret
xchg
sub
add
inc
pop
dec
mov
add
push
jp
or
fstpl
mov
lock
call
int
or
loopne
int
scas
push
mov
mov
ljmp
inc
pop
jae
mov
dec
in
scas
cmpsl
testl
fidivl
cmp
mov
sbb
sti
rcrl
hlt
cmp
cmp
sub
jg
movsl
scas
fldcw
and
dec
pusha
insl
filds
fstl
push
push
jne
cld
cltd
faddp
orl
cli
ljmp
cmp
test
or
inc
and
or
and
decl
sti
add
lcall
shl
ret
cwtl
aam
mov
call
loopne
mov
jne
faddp
jnp
sub
cmp
test
ret
xchg
js
jmp
clc
fnstcw
push
mov
aad
mov
repz
lods
inc
cli
nop
sarl
jmp
fcmovnb
xchg
ret
rcll
inc
xchg
xor
imul
or
pop
xchg
mov
scas
lahf
std
ljmp
jp
mov
adc
adcl
int3
scas
cmc
xchg
mov
int3
or
jno
pop
popa
shll
dec
popa
int
stc
movsb
jno
mov
pop
xchg
mov
std
add
cmp
dec
cmp
push
in
push
stos
pop
testb
cmp
daa
inc
jb
mov
mov
inc
mov
fisubrl
out
add
or
in
push
dec
and
mov
fsts
cwtl
in
and
lcall
repnz
shlb
sub
jnp
aam
jne
mov
inc
jle
pop
mov
jne
mov
push
push
sbb
push
sbb
jle
xor
and
mov
xor
shlb
fmul
cld
dec
mov
pushl
frstor
and
mov
xor
lret
xchg
dec
cmp
mov
ljmp
insb
int
testb
gs
adc
sbb
divb
ret
call
idivl
daa
xor
inc
test
jmp
lods
pusha
lcall
jg
mov
sbb
aam
and
test
mov
xchg
sahf
xchg
sub
pushl
cmp
test
xor
push
sarl
popf
fs
inc
mov
push
negb
in
sbb
inc
xchg
mov
dec
inc
pop
push
adc
shlb
lcall
jno
mov
rolb
ss
mov
or
outsb
pop
xlat
lods
hlt
sbb
mov
decl
lcall
dec
mov
cmpsl
mov
cld
mov
sbb
sub
add
mov
jp
addr16
or
notl
pushf
xor
test
mov
out
fiadds
std
pop
imulb
test
es
and
enter
mov
out
push
pop
sahf
mov
rcl
adc
dec
int
cwtd
dec
addr16
in
std
fcomip
incl
push
and
cmc
lret
sarl
push
mov
lods
sub
mov
push
dec
dec
into
inc
adc
add
pop
lret
mov
rolb
or
jns
sub
push
ret
push
imul
cmp
movsb
cmpsb
imul
mov
in
repnz
jecxz
cmpb
inc
push
xor
rcll
mov
jmp
xchg
mov
adc
mov
push
jno
push
sub
insl
cmp
mov
sub
xor
mov
pop
je
adc
movl
out
add
sbb
call
xchg
push
loope
pop
mov
fcmovb
or
jg
mov
dec
pusha
sbb
mov
aas
repnz
decl
incb
shlb
xor
mov
adc
scas
push
mov
inc
sub
nop
jp
out
push
jmp
mov
pop
sar
jg
jae
cmp
mov
cmp
jbe
cs
adc
xchg
cld
dec
outsl
sbb
jle
int
movl
inc
aam
xchg
inc
xchg
rorl
jmp
pop
push
mov
sub
insl
or
movd
jp
pusha
movsl
or
cwtl
add
call
sbb
jne
leave
mov
add
stos
sbb
inc
adc
xor
incl
xor
mov
sahf
sub
mov
mov
mov
sub
push
xor
jmp
lods
sub
xchg
iret
lds
les
dec
push
fcomps
xchg
mov
cwtl
outsb
adc
mov
lea
rcrb
shlb
call
cld
lock
adcb
mov
insb
loopne
cmpsb
pop
push
cmp
mov
add
cwtl
lret
jo
rcrl
lahf
adc
and
jg
shll
mov
mov
mov
mov
hlt
xchg
fistpll
xchg
out
mov
lods
adc
pop
ret
incl
notb
lods
sbb
mov
pop
pop
cmpsl
or
jg
mov
and
dec
or
fidivl
test
scas
adc
xchg
ljmp
call
sbb
mov
pop
lret
imul
jb
mov
rolb
cli
xchg
inc
jo
push
dec
mov
cld
xchg
sub
les
jne
pushf
adc
mov
pushl
push
test
xchg
mov
arpl
dec
add
fidivl
and
data16
movsb
sbb
inc
loop
sub
cmc
imul
popa
test
aas
mov
jp
jecxz
dec
dec
mov
test
add
test
int3
aaa
ret
or
mov
jg
cld
adc
outsb
and
or
in
pop
dec
lret
jge
pop
mov
incl
pop
xchg
inc
lods
cltd
enter
or
push
and
ljmp
xchg
je
sub
into
insb
or
std
xor
xor
adc
imul
push
sahf
fst
xor
pop
cmc
lcall
mov
ds
ret
stos
test
mov
xor
loop
ficomps
mov
sbb
and
jae
stos
mov
mov
xor
call
aad
push
and
incl
adc
mov
out
lret
mov
cmp
gs
mov
push
sbb
leave
rorl
xchg
roll
fcoml
adc
les
push
add
and
into
in
ja
roll
decl
decb
or
dec
sub
mov
call
push
sub
idivl
dec
jb
dec
push
or
mov
insb
pushf
jb
insb
mov
les
rolb
loopne
lahf
or
jmp
iret
lahf
das
add
push
stos
lcall
frstor
or
imul
orb
and
push
aas
add
or
mov
test
mov
pushl
out
sub
xor
ljmp
ljmp
mov
add
ficompl
lcall
fisubrl
pop
or
cmp
cmpl
lret
xor
inc
mov
mov
push
xorl
jno
mov
call
arpl
dec
jo
jo
lods
jle
mov
adc
lds
jmp
lock
mov
add
pop
inc
lret
cwtl
test
cmp
ljmp
sub
rclb
jae
pop
fimull
div
out
and
fimull
mov
mov
ret
add
incl
xchg
xchg
push
sub
push
push
push
out
bound
mov
jp
fnsave
fldenv
shll
sbb
or
inc
pop
jns
cwtl
pushl
inc
fs
mov
in
and
mov
ret
sub
decl
push
sbb
jp
ljmp
aas
cmc
jb
and
cmp
bound
pushl
jle
ljmp
sub
test
dec
jb
iret
xor
and
pushl
pop
pop
xchg
push
xchg
pop
out
sbb
push
test
xchg
and
jmp
ljmp
fdivs
inc
fmull
pop
hlt
add
aam
xchg
ret
or
fdiv
cmpl
out
loopne
ret
outsl
stos
adc
sbb
div
dec
std
push
in
movsb
sub
lahf
into
cmpsb
or
cmpsb
xor
xor
pop
sahf
sbb
pop
ret
jp
call
and
jecxz
xor
pusha
fnstsw
push
cmp
shlb
pushl
xchg
in
cmp
push
pop
in
in
push
std
aaa
scas
pop
ficoms
lcall
dec
fsts
jge
insb
sbb
mov
and
cmp
stc
push
stos
incl
lret
fstl
xchg
or
pushf
or
fsubr
clc
push
fildl
jne
clc
adc
jno
rcr
sub
mov
lea
ret
cmp
decl
sbb
push
outsb
mov
mov
out
xor
mov
popf
push
push
mov
fimuls
cltd
ret
inc
pusha
mov
sar
cmp
out
jmp
sbb
ficoml
jae
jmp
cmp
lcall
push
pop
fdivrs
call
rorb
cmp
dec
btsl
ja
inc
dec
popa
inc
xchg
test
pop
sbb
ljmp
nop
adc
and
bound
mov
mov
xchg
ss
insl
ljmp
outsb
add
movsl
xchg
push
adc
mov
daa
aas
sub
fs
push
push
mov
movsb
xchg
add
xor
mov
in
imul
aam
jbe
lret
jne
jnp
push
lcall
xor
xchg
adc
pop
sti
mov
adc
dec
jae
outsl
jne
adc
fistps
push
push
and
mov
pop
and
mov
jne
pmullw
sbb
push
nop
lods
rolb
or
ja
mov
mov
mov
hlt
and
and
incl
notb
arpl
jp
push
adc
pop
sbb
mov
popa
and
call
sub
push
dec
repnz
inc
pop
inc
faddp
out
out
bound
or
sbbl
mov
xor
arpl
in
xor
ret
int3
pop
outsl
push
mov
into
xchg
mov
mov
jge
incl
scas
sbb
int
mov
cwtl
mov
bswap
and
adc
fcomip
arpl
pop
xorb
dec
pop
bound
mov
insl
aam
scas
dec
roll
pushl
jno
cmp
dec
cmp
cmp
jle
pop
leave
push
or
std
notl
call
inc
stos
mov
cli
cwtl
push
adcb
test
js
push
add
fwait
decl
inc
cld
push
mov
es
ret
lods
add
sub
incl
mov
movsl
and
popf
jl
hlt
inc
pop
push
push
mov
inc
movsl
and
sub
cmpsb
aam
aad
xchg
mov
add
hlt
leave
xor
or
imul
dec
pop
sbb
mov
rorl
cmpl
int3
push
cmpsb
sti
inc
add
test
mov
xor
scas
clc
call
sub
aad
sub
leave
mov
sub
pop
or
mov
loopne
gs
dec
cmp
scas
or
inc
test
in
nop
loope
inc
lea
decl
adc
fucomi
sbb
ss
jp
out
outsb
rsqrtps
mov
std
incl
data16
inc
jbe
and
add
outsb
rorb
insb
inc
jb
cltd
call
mov
out
push
out
jecxz
pushf
push
loope
out
idivl
es
adc
xor
lea
mov
movsl
inc
fimuls
push
in
inc
call
call
scas
ficoml
dec
mov
mov
fs
stos
inc
repz
decl
inc
test
insl
inc
push
pop
pusha
add
xchg
test
cmpsl
nop
imul
jl
lcall
and
mov
dec
popa
add
and
jle
cltd
lahf
push
inc
push
cs
fnsave
or
repz
cmp
vmread
adc
aas
insl
adc
push
jmp
cli
push
pop
test
test
jle
cmp
fsubrl
push
inc
push
dec
mov
jmp
jno
pop
add
and
or
insl
loope
movsb
push
dec
xor
adc
lcall
or
cmc
jnp
push
mov
loope
lock
add
mov
decl
shlb
sub
hlt
dec
in
xchg
push
mov
jp
cli
lcall
incl
stos
fdivs
add
lds
xlat
lret
cmp
mov
shlb
lea
xchg
sti
mov
cmpsl
adc
pop
nop
popa
fdivrp
mov
xchg
aas
inc
aad
add
sub
adc
lcall
xor
imul
mov
incl
int
jb
shll
sub
xchg
ljmp
mov
cmpsl
add
arpl
sbb
rcr
jno
mov
xchg
insb
fst
jnp
ljmp
pop
add
xor
cmpsl
mov
pop
mov
enter
int3
cmp
jmp
cmpsl
xlat
xor
sbb
mov
and
push
jecxz
decl
imul
cmpsb
in
sub
jp
or
adc
decl
mov
fdivp
shlb
ja
sarl
std
adc
push
shlb
enter
decb
lcall
push
popa
sti
shlb
es
xchg
xor
scas
cmp
mov
iret
iret
mov
mov
pop
mov
adc
ljmp
xor
neg
gs
sar
mov
mov
pushl
dec
jbe
cwtl
xor
repz
dec
push
or
mov
mov
fs
push
aaa
stc
js
xchg
loope
inc
inc
cmpsb
or
inc
popa
ss
ror
in
jmp
and
ror
cli
mov
ja
mov
adc
mov
lcall
cmp
mov
pop
stos
xchg
jecxz
test
cld
cltd
ret
xchg
adc
cmpsl
idiv
ljmp
mov
stos
sub
pop
movsb
repnz
adc
loopne
or
push
cwtl
inc
pop
lods
jae
loop
xor
pop
cmpsl
push
inc
jns
pop
jnp
dec
pusha
call
sub
dec
neg
push
fs
sbb
sbb
dec
cltd
mov
adcl
ljmp
jns
loop
aam
outsb
adc
or
pop
jb
fcmovnb
fwait
xchg
jmp
mov
cli
jne
inc
fdivrp
jmp
adc
iret
adc
rorb
pop
dec
jl
or
mov
loop
or
test
rorb
mov
mov
decl
sbb
pop
and
add
pushl
insl
in
xlat
adc
and
lcall
jmp
mov
jae
push
pop
repz
xchg
push
out
and
ds
sahf
cmc
decl
jp
ja
cmc
xor
bound
push
bound
lods
sub
imul
pop
ss
jle
stos
push
cltd
adc
out
fcmovbe
push
loop
test
xchg
mov
fcomip
call
inc
lahf
add
in
outsb
fcompl
or
inc
loopne
out
xchg
stos
mov
xchg
inc
test
and
rclb
and
push
xor
lds
std
incl
aam
ret
decl
cmp
adc
test
in
xchg
test
push
lea
lds
or
cmp
ja
fnstenv
dec
seta
dec
adc
test
out
in
pop
and
in
mov
and
cli
dec
das
mov
mov
int3
cmp
ret
fstpl
in
push
das
decl
mov
jne
cmp
jp
sub
mov
mov
int3
je
xlat
fadds
cmp
insb
loope
mov
dec
ret
dec
cmp
jmp
jge
lds
ljmp
mov
imul
sbb
arpl
jb
mov
xchg
jno
sub
push
addb
xchg
movsl
out
stc
stos
adc
call
adc
pusha
add
aaa
aas
push
insb
add
stc
sub
aaa
adc
or
dec
cld
sub
ja
inc
jbe
test
ret
fmul
pop
xlat
add
pushl
adc
jnp
inc
or
jp
jl
push
dec
sysret
sbb
jle
int3
mov
loop
or
add
rol
add
dec
insl
mov
es
pop
incl
xchg
jmp
lcall
data16
ret
cmc
cli
pop
int
cmp
shrb
sub
mov
or
loope,pn
sub
pop
xchg
sarl
bound
pop
jbe
pop
push
scas
mov
pop
subb
data16
test
lcall
mov
dec
pop
movsl
lahf
aas
mov
js
fcmovb
icebp
int
movsb
cli
xor
cmp
xor
addr16
mov
call
call
adc
outsb
mov
mov
inc
daa
jae
adc
pushf
dec
mov
nop
fstl
or
sub
in
mov
sbb
and
xor
out
call
add
js
icebp
cmp
xor
pop
sbb
pushf
xor
inc
int3
jl
sub
pop
and
cmp
dec
sub
scas
push
imul
add
add
mov
scas
pop
movb
jae
outsb
shrl
iret
popa
adc
ret
mov
inc
fcoml
shll
jb
inc
ficoms
dec
sub
imul
push
aam
mov
les
std
mov
cmc
pushl
mov
xor
sub
pusha
subb
movsl
insb
movsb
popl
pushl
pushw
mov
fidivrs
movups
out
xchg
push
in
mov
jmp
dec
mov
mov
aas
push
fs
not
mov
in
jnp
pop
js
gs
repz
or
incl
stos
mov
lods
fwait
out
pusha
lret
pop
mov
scas
lret
cmp
pop
cwtl
xor
repnz
out
pop
stos
sbbb
cmp
add
jbe
push
push
and
sbb
gs
adc
jmp
and
push
jecxz
sub
psubusw
and
or
cmp
setl
sub
cld
push
adc
ja
push
inc
iret
xchg
stc
push
sub
cs
dec
pop
std
out
lods
push
or
arpl
inc
xchg
inc
mov
cmp
add
pop
fbld
mov
lret
leave
repz
fdivs
and
out
pushl
jmp
scas
test
cs
mov
je
jg
sti
xorl
mov
cmp
dec
iret
xor
ljmp
imul
and
fbld
sbb
mov
lcall
add
pop
mov
aas
xchg
jp
xchg
sub
and
mov
lock
mov
mov
popa
cmp
add
lea
mov
push
addr16
aaa
ljmp
and
js
sbb
sbb
stos
pop
pop
add
mov
cmp
repnz
loope
loop
loope
push
dec
cmp
fidivrl
xor
and
in
ret
or
mov
inc
pusha
and
cmpl
push
inc
xor
lock
lcall
jnp
nop
jp
loope
gs
mov
mov
repnz
inc
push
ret
test
je
aad
push
hlt
and
enter
jbe
jns
add
pop
xor
sub
fiaddl
adc
push
stos
pop
aam
mov
cli
lods
adc
aaa
inc
inc
mov
push
mov
cmp
jae
outsl
sub
cmp
scas
jb
or
out
js
decl
ljmp
sub
in
cwtl
fldl
mov
shr
mov
pop
rcr
incl
inc
sub
mov
enter
ss
bound
lods
and
cld
push
inc
in
and
jge
mov
imul
shll
ljmp
ficompl
mov
mov
inc
pop
sahf
mov
mov
dec
fld
jnp
in
int3
xor
jb
sub
ja
mov
mov
pop
cmp
cwtl
mov
in
mov
popf
sbb
add
clc
outsl
clc
ljmp
leave
xchg
jge
orb
ficomps
outsb
cmp
std
mov
jle
aam
add
push
mov
lahf
dec
xchg
lock
jbe
nop
sbb
ficoms
push
inc
hlt
pusha
leave
mov
inc
inc
fisttps
mov
loop
mov
push
xor
test
ljmp
mov
iret
jl
cmp
xor
sub
iret
lcall
jmp
xchg
out
outsl
push
or
int3
mov
mov
pop
test
jnp
xchg
adc
nop
pushf
cwtl
mov
ss
decl
gs
stos
lret
mov
xchg
adc
popf
and
repz
fldcw
and
ja
cmp
mov
jl
jg
jl
push
push
adc
test
jbe
pop
leave
dec
in
lds
es
pop
fsubrs
lcall
mov
mov
inc
ret
out
mov
mov
lcall
clc
sbb
lahf
inc
jmp
pop
sti
inc
icebp
xorb
mov
and
decl
cmp
or
test
add
mov
add
mov
mov
ljmp
inc
inc
pop
jecxz
xlat
lcall
loop
pop
and
stos
pushl
xchg
cmpsb
xchg
push
aam
scas
xor
lahf
xor
fsubr
stc
call
push
jae
sahf
clc
add
dec
sbbb
mov
mov
jae
adc
adc
lcall
and
mov
stc
fists
aaa
lcall
mov
call
scas
sub
repz
test
adc
mov
in
or
sbb
fldcw
pop
or
mov
sbb
roll
insl
add
inc
xchg
dec
adc
decl
cmpsb
mov
movsb
and
test
int
xor
out
jge
movsb
lods
les
pop
jmp
clc
mov
xor
sbb
adc
inc
xchg
inc
nop
add
call
mov
fnstenv
rorl
int3
inc
jmp
imul
mov
cld
call
gs
mov
add
sbb
or
xlat
jmp
dec
pushf
jns
push
push
pop
push
loopne
mov
scas
xchg
lds
ss
sarl
xchg
cmpsb
and
sti
iret
pop
jns
pop
push
std
jns
dec
xchg
loopne
icebp
inc
and
and
xchg
mov
jg
jl
scas
js
arpl
lcall
cwtl
jae
cmp
stos
adc
gs
addl
sbb
cmpsb
out
and
push
nopl
dec
xor
xor
loope
xchg
mov
sahf
sub
sub
daa
outsb
xor
inc
sbb
hlt
lcall
pop
pop
mov
cmpsb
add
and
out
aam
in
pop
cmp
loop
call
pop
inc
fsubrs
aad
mov
ret
or
inc
or
rclb
cs
std
test
jmp
fiaddl
jecxz
and
push
add
add
scas
jg
inc
sub
cmpsb
push
sbb
lcall
rorl
daa
pushl
ss
clc
pusha
ljmp
outsl
test
add
jmp
lret
and
rclb
sbb
sbb
cmp
mov
ljmp
mov
into
xchg
sbb
pop
mov
mov
stos
cli
and
pop
push
xchg
push
xchg
push
js
in
movsl
inc
stos
test
sbb
mov
jmp
dec
popf
das
jecxz
ret
pushl
adc
cli
pop
cmpsl
imul
pop
mov
jb,pn
adc
scas
into
jbe
pop
popa
aam
in
ljmp
enter
sti
dec
inc
sti
jmp
or
mov
cwtl
lods
test
test
fcomip
incl
adc
push
pop
fldcw
and
sbb
pop
dec
test
jnp
pop
std
mov
ja
test
insl
and
repnz
lahf
dec
or
sti
int
mov
push
mov
dec
push
repnz
push
mov
enter
inc
pop
int3
fbld
lcall
or
mov
mov
orb
movsb
je
xor
push
push
pushf
push
cmp
ljmp
lods
mov
out
cmp
pop
or
dec
xor
test
mov
repnz
sbb
mov
cld
call
pop
sub
shlb
sbb
test
cld
movsb
rcl
sti
call
add
pop
scas
pop
xchg
jno
rcrl
cmp
dec
jne
sbb
ljmp
jg
leave
mov
fucomi
loope
pop
scas
repz
mov
mov
push
pmuludq
decl
out
jp
push
sub
jmp
shr
lds
int3
dec
dec
rcrl
push
xor
inc
mov
cmpsl
jecxz
mov
xor
sbb
arpl
lock
jp
cmp
pop
jmp
xchg
sbb
mov
inc
sub
jg
xchg
bound
cld
xchg
test
popf
in
dec
xor
xor
mov
sub
cmp
ljmp
push
mov
jnp
mov
inc
adc
jb
inc
jg
pushf
xor
and
jbe
bound
stc
test
test
mov
fcomip
dec
xor
leave
es
call
push
and
cmp
movsb
xor
ljmp
dec
push
dec
mov
lock
fwait
adc
pop
inc
icebp
adc
sarl
je
ljmp
leave
inc
push
and
lcall
out
mov
adc
pop
shl
xor
pusha
cmpsb
push
push
das
aaa
ja
add
sbb
mov
xor
inc
sar
out
in
or
lret
andl
pushl
xor
sub
or
pop
push
sti
ficompl
inc
sti
shl
jl
paddsb
mov
push
jmp
xchg
sbb
fs
pop
xorl
fs
jl
enter
out
push
pop
push
fadds
pop
mov
int3
push
nop
icebp
xor
jg
pop
adc
and
jp
test
sbb
xor
mov
mov
inc
fmulp
lret
dec
dec
lock
decl
xor
cmp
int
xchg
rolb
xor
orb
decb
ljmp
in
add
mov
loopne
add
lcall
rorl
movsb
add
loop
jmp
add
cmp
fistl
fwait
clc
pop
ja
mov
jmp
jnp
or
hlt
hlt
add
in
inc
push
stos
xlat
lcall
or
pop
sbb
stos
stos
jecxz
mov
mov
push
inc
leave
icebp
or
decl
jmp
pop
out
lock
das
cld
in
add
cmp
in
nop
inc
pushl
aas
dec
xchg
popa
jg
mov
sbb
addr16
out
adc
shr
ret
pushl
sahf
iret
insl
adc
pop
add
enter
xchg
rcrb
push
in
adc
jns
xor
or
pushf
inc
fwait
cmpsb
adc
mov
ja
pop
fisubrl
aam
call
inc
adc
cmp
lock
mov
xchg
cmc
push
fimull
sbb
mov
add
pushl
js
inc
mov
xchg
jb
outsl
xchg
dec
sub
mov
incl
mov
and
in
bnd
cltd
in
je
mov
jmp
and
scas
lea
shll
or
repnz
add
push
xchg
mov
incl
xor
ret
adc
mov
clc
pop
xchg
and
cmp
out
jns
es
imul
sahf
pop
rorl
in
enter
sub
fucomip
aas
aam
push
arpl
xchg
fidivrl
pop
xchg
loope
enter
call
outsb
lock
decb
orb
lods
mov
clc
xchg
addr16
incl
or
rcll
xchg
xor
mov
and
mov
jbe
pop
pop
call
sbb
mov
out
lcall
daa
push
fisubl
rcl
sub
testl
jns
call
int
adc
ret
pop
jp
xchg
int3
mov
nop
notl
sub
mov
ljmp
and
int
shl
loop
sub
loop
or
aad
hlt
ds
xor
jne
iret
aad
lcall
adc
les
pusha
rcrb
mov
or
cmp
jg
pop
push
mov
xchg
int
aas
daa
pop
mov
inc
dec
loope
sahf
daa
cmp
int3
pop
out
arpl
out
jmp
or
idivl
jnp
cmc
or
push
pop
mov
push
nop
sar
cld
xchg
mov
incb
insb
stc
dec
hlt
cmpsl
out
pushf
scas
enter
pop
out
push
fdivr
jg
imul
not
cmp
adc
or
inc
sbb
data16
jnp
scas
movsl
orl
add
inc
sub
jg
pop
int3
push
mov
je
and
mov
nop
pop
enter
call
rcrl
das
add
imul
cli
imul
sahf
mov
sub
insl
jp
scas
insb
aad
popa
pop
insl
jae
cli
loope
pop
out
add
or
scas
pushf
mov
test
sbb
mov
cmp
pushl
into
pop
inc
in
popf
xor
mov
fisttpl
mov
stos
scas
mov
in
cmc
or
call
mov
mov
or
int
add
nop
mov
cmc
adc
jmp
cmp
fisttpll
sti
orl
sub
mov
cld
xor
mov
test
cmp
jmp
and
aam
in
jl
or
inc
fwait
aad
mov
xor
adc
call
outsb
and
mov
aam
lret
push
mov
cmpsb
jmp
inc
jp
rclb
xchg
and
sbb
rorb
imul
jmp
adc
adc
mov
xor
xor
out
incl
ja
arpl
adc
cwtl
loope
mov
jae
inc
leave
or
jmp
aam
jl
add
aam
mov
push
adc
xchg
mov
sbb
call
aad
icebp
bound
dec
scas
xchg
add
and
sar
jmp
mov
jb
mov
dec
sti
mov
cmp
sti
xchg
xor
popf
ljmp
fstl
or
inc
pop
push
push
je
cmpsb
cltd
jae
mov
lcall
mov
iret
push
ficoms
int
out
outsl
mov
je
ljmp
lods
fnstsw
sub
test
push
mov
pushf
mov
jb
and
repz
incl
data16
pop
popf
xchg
jae
pop
jle
mov
push
gs
imull
bound
fisubrs
mov
or
push
inc
pop
scas
in
pop
popa
sarb
dec
je
cmc
repnz
add
push
xchg
stos
mov
scas
push
dec
pushf
dec
jle
cwtl
jl
sbb
sbb
push
push
outsl
fwait
popf
daa
inc
dec
jns
adc
in
mov
insb
add
sbb
mov
pop
or
pop
mov
jnp
sub
test
imul
hlt
pop
ljmp
enter
sbb
jo
fiaddl
ljmp
jl
or
push
mov
negl
stos
pop
lcall
mov
int
testb
fisttps
sbb
int
popf
sbb
push
push
or
jge
aad
stos
stc
iret
cmp
mov
mov
cmp
shl
sbb
cltd
shll
sub
fwait
cltd
inc
das
add
shll
leave
pop
ret
es
cmp
push
shll
mov
fsubrl
outsl
arpl
cmp
pushl
scas
shlb
popa
inc
mov
pop
aaa
xor
arpl
xor
nop
in
and
lcall
flds
ds
push
out
jg
lcall
js
jbe
rcll
xorb
inc
cmc
addr16
outsb
jns
xchg
dec
loopne
pop
jno
xchg
imul
decl
je
sbb
scas
sub
mov
insb
scas
rcrl
xchg
mov
xor
mov
jmp
out
es
xchg
repnz
sbb
stc
pop
inc
lods
jecxz
mov
lcall
lcall
shr
and
out
sub
push
pushf
lods
daa
pop
jno
std
xchg
jmp
dec
stos
cmp
fcomps
jle
repnz
mov
pop
pop
movsl
scas
xor
dec
dec
pop
icebp
stos
das
and
je
add
or
ds
imul
jmp
pop
popf
shll
xor
and
mov
andl
or
pop
loopne
ror
or
xor
fldt
divb
mov
xchg
cltd
and
xchg
cmc
test
or
inc
jb
add
test
pushl
lods
jmp
jno
std
hlt
sbbl
mov
notl
in
add
dec
pop
ss
leave
mov
mov
ja
push
je
mov
xchg
popa
sbb
in
lahf
push
fisttps
push
and
lods
inc
pop
add
cmc
lock
xchg
mov
data16
xchg
push
ljmp
and
lcall
decl
dec
cmp
xor
es
pop
stos
test
mov
and
ss
or
ficomps
sub
sbbb
pop
push
mov
lcall
push
jnp
ljmp
insb
fsts
loop
sahf
sarb
push
testl
xor
sbb
or
jmp
jae
adc
js
xchg
dec
imul
frstor
shrl
and
mov
sub
int3
dec
and
sbb
rcll
inc
dec
lock
je
cli
jns
pop
xlat
in
call
add
adc
ret
or
punpcklwd
subps
push
push
scas
dec
in
movsb
ja
inc
sbbl
cmp
jle
sub
movsb
fsubrs
js
add
mov
stos
ljmp
jae
push
xor
sub
or
add
cmpsb
or
decl
sbb
and
shrb
repnz
add
push
inc
out
leave
jne
adc
pushl
pop
shrb
divb
cmp
xchg
repnz
jg
repnz
mov
addb
mov
aam
inc
xlat
pushl
push
int3
divb
add
or
and
mov
std
xor
sbb
mov
mov
push
not
hlt
incl
pop
inc
jns
lcall
out
nop
add
adc
xchg
jmp
or
fistpll
sarl
cmc
push
and
push
push
std
cmp
inc
cmp
aas
out
and
sahf
shrb
jne
popl
int3
or
clc
pop
std
imul
dec
or
cmpb
mov
decl
outsb
por
pushf
mov
std
je
nop
adc
roll
lcall
xorb
das
enter
jle
sbb
cwtl
xchg
lea
push
pop
sub
mov
lcall
icebp
bound
imul
inc
std
nop
add
jno
vcvtss2usi
jo
fsubp
sbb
mov
adc
daa
movsl
pushf
pop
fwait
mov
jle
lahf
jo
xchg
adc
mov
push
lret
ret
xchg
icebp
lcall
insl
or
ret
xchg
arpl
clc
arpl
and
ljmp
mov
das
loopne
mov
pop
into
adc
pushl
push
jnp
bound
cmp
shl
pusha
cmc
stos
xchg
sub
imul
in
pop
cld
mov
xchg
fildl
es
out
outsb
jmp
in
jno
stc
aaa
cwtl
push
jb
pop
lock
push
sbbb
sbb
push
test
pop
and
shlb
sub
call
lahf
adcb
or
inc
sbb
add
out
cmp
cli
lods
sub
int3
add
rclb
inc
pop
adc
idivl
sbbb
inc
jmp
or
mov
lock
inc
push
push
dec
jnp
mov
or
xor
dec
jecxz
xor
xchg
outsb
repz
xor
rcrl
sarb
dec
int3
fdivrs
jne
and
jno
lods
ja
mov
lret
push
push
cmp
mov
cli
subl
sub
pop
xlat
int
fldt
mov
sbb
push
std
jmp
jnp
jle
xchg
push
enter
mov
dec
cwtl
cwtl
out
mov
incl
imul
push
jns
data16
testl
add
shl
jmp
daa
fdivl
sbb
push
xchg
fsubrp
iret
lret
push
lcall
cmpsb
mov
jae
mov
pop
std
jmp
dec
mov
cmp
fptan
cmc
loopne
xor
pop
nop
jmp
inc
movsl
add
add
aam
xchg
incl
stc
mov
pop
int3
ret
xchg
jg
or
mov
cwtl
test
mov
push
add
add
mov
jmp
jle
scas
scas
out
subl
mov
aam
xor
fdivrp
jmp
jae
nop
sub
xorl
rcll
mov
int3
shl
insl
cmp
inc
incl
flds
lea
aaa
inc
int3
sbbl
cmp
insl
call
in
lret
add
decl
adc
jp
rcl
testb
and
and
xchg
jo
jge
movsb
stc
pop
xchg
sbbl
adc
dec
aam
nop
xor
cmp
mov
notb
aaa
cld
xlat
pop
sbb
test
sub
insb
enter
sti
lcall
inc
ljmp
stos
push
shr
sub
sbb
xchg
lds
std
jmp
out
vmptrld
inc
mov
inc
dec
inc
call
add
in
mov
out
repnz
jl
mov
and
jecxz
mov
sub
int
fwait
out
cmpsb
ljmp
pop
dec
cmp
adc
ss
scas
ret
inc
jo
mov
lcall
add
pushl
dec
adc
cmp
aad
mov
jmp
jo
dec
leave
or
mov
jg
push
mov
in
mov
mov
dec
mov
out
sahf
loope
gs
adc
dec
cwtl
data16
call
gs
add
aad
jg
sarb
adc
pop
sbb
add
mov
pop
fidivrl
mov
incl
push
and
jecxz
jmp
xor
push
xchg
and
and
lret
xor
mov
xchg
shl
pushl
iret
cwtl
xchg
cmp
jg
ret
rclb
ljmp
mov
out
jno
push
or
pop
es
or
dec
imul
mov
push
or
pop
adc
push
repnz
negl
xlat
lods
sahf
clc
lahf
shr
cmp
add
test
loopne
sub
or
lods
int
lds
lods
cmc
or
lcall
sarb
inc
sahf
cli
mov
adcl
imul
ja
in
ss
push
jne
movsl
daa
add
add
cmpsl
pop
scas
push
fimull
lock
decl
dec
adc
iret
fdivrl
out
cmp
notb
arpl
out
push
jmp
test
or
pushf
mov
leave
and
and
jle
dec
ljmp
sub
movsb
aad
ljmp
cmp
fadds
idivl
mov
dec
push
lret
sub
jg
or
mov
lahf
sub
or
pusha
aad
pop
int3
push
pop
mov
pop
pop
push
mov
push
addr16
jns
push
je
add
aam
inc
add
adc
sbb
adc
in
jge
mov
mov
xchg
dec
gs
ficomps
sub
pop
popf
stos
into
mov
shr
imul
decl
aam
mov
mov
dec
fsub
dec
js
ja
sahf
or
and
dec
mov
ljmp
clc
xchg
sub
test
jecxz
sbbl
add
fs
sahf
imul
sub
push
sbb
cld
inc
mov
mov
bound
stos
nop
movsl
scas
cmpsb
pop
pop
pop
js
and
push
ret
rorl
add
mov
dec
repz
pushf
fisubrl
cld
mov
ljmp
adc
sbb
into
mov
push
push
iret
jl
ljmp
stos
es
jp
push
subb
cld
dec
xchg
test
pop
xchg
cs
and
inc
jle
inc
das
mov
iret
xchg
mov
jg
test
in
cmp
fistl
js
jg
rcll
int3
mov
pop
ret
jae
mov
mov
shrb
push
and
dec
icebp
popa
inc
add
add
daa
sarb
mov
pop
ret
sahf
cmp
adc
mov
cmp
incl
shlw
mov
inc
arpl
lods
xchg
out
sub
pushl
incl
scas
xlat
and
lcall
pop
push
inc
or
lods
sbb
lock
sub
jns
scas
lock
or
xor
loope
push
lock
lock
mov
ret
dec
outsb
push
add
cmpsl
dec
pop
gs
fidivs
in
dec
mov
cmpsl
add
sbb
mov
in
add
test
mov
cwtl
mov
aad
clc
xchg
jp
add
lds
call
outsb
add
movsb
push
call
rorl
movsb
mov
mov
cli
sub
mov
dec
data16
ljmp
popf
cmpl
into
and
icebp
fldl
mov
lock
inc
call
mov
mov
adc
test
add
push
aad
mov
cmc
ljmp
out
dec
jg
popa
ret
lahf
xchg
rolb
test
inc
cli
fildll
or
dec
push
popf
mov
cmp
pop
dec
decl
stos
push
xchg
adc
sub
pop
ljmp
lret
sub
lret
or
cmp
fscale
xchg
imul
cmpsl
hlt
dec
fnstcw
int
test
xlat
mov
clc
xchg
jmp
sbb
cmpsl
adc
inc
in
in
ficompl
and
or
icebp
cld
mov
mov
push
inc
jne
xchg
mov
or
xchg
jnp
stos
mov
sbb
adc
adc
mov
lods
push
cmp
adc
inc
in
int3
mov
adcl
call
pop
out
xchg
test
ds
loope
xchg
out
pop
fwait
scas
jge
in
in
and
inc
sbb
mov
push
lcall
sti
je
lahf
add
xor
mov
decb
aaa
repz
mov
mov
xorl
mov
xlat
push
mov
jge
xor
pop
push
into
loop
ja
xchg
fcmovnb
clc
in
outsb
call
psraw
das
push
repz
cmpl
mov
xchg
rorb
and
call
mov
in
xchg
imul
inc
gs
popw
mov
mov
inc
mov
imul
jns
imul
xchg
mov
or
push
push
inc
or
aam
sbb
jae
incl
iret
cmp
pusha
or
sbb
mov
pop
fsubrs
fcomi
or
cmpsl
aad
push
ljmp
mov
push
mov
lret
test
cs
shll
out
mov
imul
incl
mov
fstpt
lds
sbb
xor
fwait
data16
and
add
jmp
movsb
decb
dec
lcall
fstpl
pop
lahf
fwait
adc
mov
jno
ljmp
push
data16
push
adc
aaa
mov
xor
lret
sub
push
ret
jmp
js
push
inc
scas
mov
and
mov
into
xor
jg
ljmp
inc
enter
inc
iret
ds
or
sbb
mov
loope
loope,pt
xlat
mov
test
adc
xor
and
repz
je
xor
mov
or
xor
pop
mov
fcoms
xchg
push
and
ljmp
lcall
ljmp
add
rcrb
push
push
jecxz
packsswb
push
mov
je
repnz
dec
adc
add
lods
lods
mov
les
pushl
sbb
out
loop
sti
xchg
aam
mov
sub
xor
ja
adc
orl
idiv
fcomip
mov
orl
pop
mov
out
out
arpl
das
xchg
loopne
lcall
std
out
jecxz
sbb
mov
adc
icebp
mov
cli
test
jmp
xchg
shl
mov
cmp
mov
pop
aaa
es
fnstenv
fbld
call
xor
jg
cld
mov
fsubl
std
mov
fcompl
push
lret
adc
mov
popf
insb
inc
sarb
lock
lock
ret
int
das
dec
stc
sbbb
mov
sbb
adc
std
adc
daa
pop
cmc
decl
mov
sbb
inc
push
cmp
mov
in
push
mov
insl
cs
paddd
filds
sub
or
and
out
std
and
test
and
rorl
xchg
hlt
mov
or
inc
pop
push
sub
icebp
out
mov
int3
aaa
addr16
xor
daa
cmp
rorl
xor
xor
ds
stos
mov
out
int3
ficompl
bound
jmp
or
mov
js
push
or
add
cli
dec
fmul
stc
sti
shrl
repz
mov
pop
decl
cmp
jl
ds
sbb
sarl
cs
subl
pop
decl
addl
outsb
mov
inc
dec
subb
out
incl
sarb
sti
cmovge
pop
icebp
inc
push
ret
dec
test
ljmp
inc
popa
add
cmpsb
popf
add
out
loopne
lret
cmpsl
icebp
and
pop
pop
adc
mov
mov
andl
mov
movsl
bound
and
mov
and
stos
jo
sub
outsl
jecxz
mov
jmp
test
inc
xchg
pusha
dec
test
mov
jmp
imul
mov
xchg
sub
jecxz
aam
leave
jle
inc
adc
pushl
inc
in
mov
addr16
js
fnsave
int
jp
popa
test
ljmp
pop
cltd
push
sbb
test
pop
dec
rcll
xor
inc
or
mov
push
jne
iret
lcall
jle
inc
nop
mov
jg
push
out
mov
fisttps
pop
dec
pop
jbe
mov
and
cmc
jnp
push
mov
outsl
push
fidivrs
or
add
es
ror
pusha
fnsave
mov
mov
xchg
ljmp
inc
daa
mov
and
cmp
xchg
es
jne
out
rcrl
xor
ljmp
pop
sbbb
ret
push
popa
or
and
pop
inc
into
jae
cmp
stos
push
icebp
push
aaa
std
incl
mov
fs
push
add
mov
cltd
sbb
pushl
fstpl
jne
push
hlt
dec
xor
xchg
or
jno
cld
adc
ljmp
mov
or
cli
mov
insb
fwait
movl
push
ret
hlt
stmxcsr
jmp
and
mov
outsb
jo
lods
or
cmp
pushl
sbb
dec
int
mov
fwait
push
or
out
ret
mov
ljmp
jno
data16
mov
out
int
or
imul
shl
das
ret
pop
bound
sbb
lret
jecxz
xchg
cmp
xchg
ja
icebp
in
jp
mov
cmpsb
in
mov
mov
call
iret
mov
fisubl
push
xchg
or
cmp
or
sbb
in
rorl
mov
dec
add
ljmp
popf
pop
pushf
sbb
inc
movsb
or
dec
push
packssdw
filds
jns
cmc
scas
push
sarb
pop
and
sbb
or
cmpl
incl
ds
scas
jg
sub
cs
lock
jl
dec
mov
jo
mov
jg
xor
dec
ret
adc
test
mov
inc
jl
jecxz
das
stc
xor
dec
inc
xchg
sub
inc
mov
stc
test
es
pop
jo
and
fidivrl
jnp
xor
cmp
cmp
out
jmp
outsb
lods
sbb
lods
jbe
or
ret
stos
test
cmp
shl
in
imul
frstor
addb
or
lret
mov
adc
cmpsl
loopne
decl
and
sub
ret
cld
clc
inc
xchg
insl
jno
xor
dec
jns
inc
pop
mov
pop
sbbb
fisubrl
ss
push
mov
lcall
adc
enter
fdivp
out
cli
das
shrb
sbb
mov
sti
les
lock
xchg
bnd
cmp
add
xor
notb
ljmp
pop
mov
scas
jno
pop
aad
jno
jge
repz
inc
icebp
sub
ljmp
int3
movsl
pop
scas
daa
outsb
dec
cmpsb
pusha
movsl
xchg
popa
mov
addl
and
lcall
lods
adc
pushw
cmp
cmp
mov
cmp
xor
dec
dec
jo
pop
mov
aaa
xorl
enter
push
and
cmp
mov
daa
pop
or
iret
inc
or
cmpsb
xor
adc
call
xor
sub
cmp
or
xchg
fs
sbb
sahf
jl
ret
hlt
push
and
lcall
xor
test
and
jbe
imul
lds
dec
bnd
push
ljmp
add
cmp
lock
dec
xor
or
ds
call
fmul
xchg
cmp
test
push
movsl
ss
fdivs
test
ror
aaa
test
pushl
xchg
mov
insl
loope
push
in
adc
xor
ret
in
lods
nop
push
rcrb
xchg
fnstenv
orb
cmp
daa
mov
icebp
xor
loopne
jae
sub
pushl
add
out
dec
in
in
dec
mov
imul
adc
sarb
popf
mov
jg
cmpsb
sub
rcll
adc
int3
add
loope
call
add
jle
outsb
inc
mov
xlat
dec
out
xchg
mov
push
push
inc
inc
jb
add
in
lret
cli
lods
jmp
mov
ret
das
daa
push
sbb
nop
fisttps
mov
push
jge
cmpsl
mov
stos
lcall
and
and
flds
addr16
in
dec
pop
test
pop
int3
sbb
xchg
shlb
loop
decl
test
push
movsb
jo
adc
sub
insb
xor
arpl
mov
ds
dec
leave
jnp
into
add
dec
push
mov
or
decl
les
push
scas
jae
shlb
mov
insl
push
rolb
xchg
push
xlat
mov
fcomip
jmp
jge
mov
sbb
jmp
dec
jno
push
ss
mov
incl
ret
xor
cwtl
sahf
xchg
jno
repz
sarb
adc
jne
mov
sub
in
out
jmp
lret
fmuls
adc
js
and
jge
cmpsl
nop
shll
adc
inc
pop
push
ret
or
test
push
lcall
mov
adc
icebp
pusha
mov
xor
test
add
cmpsl
loop
pop
std
xchg
sbb
pop
dec
scas
or
push
cld
pushl
lds
pop
push
dec
mov
jb
nop
fs
push
decl
cmpl
push
out
inc
movsb
mov
mov
cmp
jo
in
mov
cld
fistpll
dec
inc
outsl
inc
add
fnstsw
or
cli
mov
mov
push
sti
fwait
and
pop
cs
jne
cmp
jg
decl
repz
nop
xchg
movq
mov
sti
or
cmp
cmp
or
movsb
incl
addr16
xor
imul
push
xchg
adc
push
cld
call
jmp
aam
dec
jmp
cld
cmpsb
sub
scas
test
jmp
lahf
ss
outsb
mov
stos
mov
cmp
fld
arpl
das
xor
fwait
sbb
push
mov
xchg
int
outsl
cli
jmp
xchg
hlt
cltd
cmp
movsl
mov
daa
xor
fdivr
fcomip
clc
lfs
aas
in
scas
mov
push
cmp
cmc
push
fcomps
adc
mov
mov
shll
shlb
pop
idivl
lret
mov
jmp
jl
adc
fs
test
pop
xchg
shlb
out
outsl
inc
jg
xor
or
in
mov
adc
jbe
xor
pop
shrl
out
mov
cmp
decl
pop
xor
and
leave
rcll
xlat
das
push
jmp
add
xor
adc
lock
push
adc
cld
sbb
sahf
jmp
clc
test
scas
or
leave
fs
fdivl
dec
pushl
push
mov
add
enter
xor
gs
cs
mov
cmp
fadd
mov
jmp
js
inc
int3
mov
adc
or
mov
adc
ja
mov
cmp
scas
sar
clc
movsb
pop
fs
fsubrs
aad
outsl
inc
outsb
iret
cmpsl
popl
inc
ljmp
mov
loop
cmp
dec
xchg
pop
cwtl
pop
jnp
idiv
call
xchg
pop
push
mov
fcoml
stc
loop
jnp
and
out
mov
and
mov
cmp
ss
icebp
jecxz
mov
push
shl
push
mov
loopne
or
inc
push
bound
leave
mov
push
pop
mov
in
cltd
sarb
mov
repnz
call
call
popa
lcall
jp
push
mov
jp
jno
xchg
dec
lret
cmp
adc
repnz
push
jo
js
fisubrs
orl
pushl
fucomip
mov
insl
in
inc
in
pushf
iret
mov
and
jbe
pop
or
icebp
or
inc
ljmp
cmpsb
test
inc
rcrl
jg
cmpsl
fwait
sbb
cld
add
xchg
jae
inc
mov
aaa
cmp
jb
imul
or
call
mov
mov
mov
lcall
outsb
sbb
adc
insl
addb
push
lret
adc
adc
lret
xchg
loop
fcompl
pop
dec
out
mov
lret
xchg
pand
inc
xchg
aad
insl
ret
test
mov
ljmp
cmp
outsb
jmp
rcrb
sbb
out
sub
jge
decl
call
aas
ljmpw
or
inc
cli
popa
add
popa
decl
cltd
sub
into
stos
repz
xchg
add
scas
ret
je
push
fs
adc
jnp
cld
or
loope
je
enter
mov
or
insb
inc
add
add
data16
and
lcall
lds
push
pop
out
push
dec
or
repnz
xor
ljmp
jmp
popl
fdivr
mov
xor
out
js
call
push
mov
push
enter
pop
sub
xor
inc
in
sbb
or
mov
or
rcll
fbld
insl
nop
push
add
test
lcall
mov
in
lock
insb
fucomp
jmp
je
outsl
int3
push
mov
sub
hlt
push
in
jmp
jmp
popa
sub
mov
push
ja
fisubrs
cmp
mov
push
loop
fs
adc
inc
div
inc
and
jb
xchg
in
shlb
enter
xlat
add
cmp
xchg
mov
or
sub
push
lcall
jg
subl
cmc
out
ss
bound
lcall
test
cmp
std
jmp
sub
je
sbb
adc
fstpl
dec
data16
push
addr16
sbb
rcll
cmpb
push
lret
test
insb
icebp
loopne
andb
xor
mov
lds
and
mov
push
jg
sbb
lret
mov
push
jnp
mov
mov
mov
mov
ret
and
inc
rorb
mov
lcall
mov
and
or
mov
jle
loop
repz
repz
fldln2
je
insb
ret
out
incl
adc
and
in
es
mov
fwait
enter
lds
mov
push
pushf
aas
pushl
add
lock
unpckhps
cmpsb
jle
dec
jle
les
ficoms
repnz
lcall
mov
sbb
lret
into
adc
add
xor
or
mov
cmp
lret
scas
or
add
xchg
jo
popa
scas
mov
fdivs
xor
incl
xor
sub
fs
scas
arpl
sbb
hlt
mov
ret
jno
gs
std
andb
clc
cmp
jo
push
mov
inc
leave
pop
sti
bound
mov
imul
jg
or
fisubs
inc
inc
out
push
jno
xor
mov
fstpt
pushf
inc
std
lcall
outsb
cmp
add
xor
mov
cmp
inc
inc
mov
or
std
pop
fdivs
mov
les
cmc
idiv
insb
jbe
mov
loopne
cmp
push
std
in
sbb
jo
push
leave
cmp
cmp
out
and
xor
and
and
pop
mov
add
adc
repnz
jle
push
mov
push
neg
out
add
mov
xor
xchg
pushl
or
paddsw
push
mov
xlat
or
clc
ljmp
outsb
xor
mov
push
movsl
out
adc
push
mov
test
icebp
sti
mov
scas
jne
in
sbb
adc
das
pop
xor
test
push
lcall
and
mov
popf
fnsave
cmp
xor
mov
sub
push
dec
jbe,pn
xor
add
sub
decl
ja
dec
xor
push
cwtl
mov
bound
mov
pop
xchg
daa
pop
fidivl
mov
out
jne
pop
aas
movsl
imul
jl
or
ljmp
jmp
decl
xchg
adc
mov
xor
and
push
sahf
aad
daa
ljmp
mov
inc
mov
add
sbbb
iret
push
push
pop
in
inc
leave
std
sub
pop
scas
add
sbb
mov
pop
pusha
inc
dec
dec
cmpsl
cmp
aad
push
xor
sub
pushl
jp
mov
jb
loopne
in
aaa
xor
pop
or
je
repnz
out
mov
dec
or
sub
sbb
das
sbb
sbb
fldenv
dec
cmp
mov
add
push
adc
jg
fcmovnb
sbb
xchg
ds
in
mov
push
imul
pop
mov
incl
hlt
js
mull
enter
lahf
mov
inc
xor
inc
fildll
push
pop
sub
incl
popa
jg
rclb
jp
sbb
shlb
aas
iret
popa
or
enter
jp
jne
shld
push
in
ficomps
int3
push
inc
int
mov
clc
push
lea
pop
mov
pop
roll
in
je
pop
lods
cmp
shrl
ss
xchg
mov
out
xlat
pop
mov
xchg
pop
add
inc
icebp
loop
lcall
add
rol
pop
iret
shll
adc
xor
inc
cmp
ljmp
dec
inc
adc
or
jb
cmp
jbe
mov
inc
pushf
fdivs
imul
into
or
and
test
fisubrl
pushf
jle
in
enter
loopne
cwtl
jg
ret
mov
aam
xchg
cmpsb
repz
icebp
rcrb
add
sub
cwtl
pop
cmc
dec
xor
add
sbb
add
cmp
das
push
fsubs
jb
or
adcb
cli
incl
xor
cmp
push
sub
dec
jae
jno
fs
decl
in
mov
je
push
movsl
daa
inc
xor
inc
sub
je
decl
cmp
push
mov
lret
lock
sub
pop
dec
jnp
out
mov
call
sbb
inc
rorb
jmp
sbb
inc
jge
pop
ret
stos
or
loope
mov
jmp
iret
sub
sbb
sub
lea
gs
pop
or
xchg
sbb
cmp
decl
test
jae
adc
mov
shll
imul
xchg
sbb
movsb
imul
sbb
jnp
decl
fwait
add
stc
mov
shlb
mov
arpl
pop
cld
jg
jb
out
repnz
test
pop
lea
stos
sub
pusha
call
adc
jbe
jg
cli
enter
push
or
mov
and
std
test
outsl
sub
mov
inc
mov
xchg
jbe
mov
pop
ds
orl
pop
and
sbb
scas
sti
pop
mov
jno
xor
call
pop
insl
icebp
fs
push
mov
rcrb
mov
cli
jmp
arpl
jae
ja
jle
sbb
lahf
sub
pop
sarb
cmp
into
fs
dec
or
sub
loop
ds
shlb
ljmp
imul
jmp
mov
jmp
mov
mov
adc
js
adc
lock
xorb
jle
mov
call
out
sub
xlat
test
xchg
daa
dec
xchg
xchg
shrb
xchg
mov
lock
push
mov
ss
or
sub
pop
stos
mov
push
cmp
jb
jmp
mov
cld
cmpsl
shrl
xchg
bound
fstp
adc
arpl
jae
cmpsb
jg
lcall
ljmp
add
cmp
cvtpi2ps
outsl
jbe
add
mov
rcrb
pop
fadd
shrl
xchg
inc
push
fisubrs
mov
in
int
xchg
xorl
sub
aam
push
inc
sbb
test
xchg
dec
adc
inc
sub
cmpsb
cmp
jg
xorl
mov
sbb
jo
aaa
add
pop
in
inc
test
jmp
fmul
test
fisttpl
push
dec
call
fiadds
rcrb
sub
sar
incl
sahf
bound
mov
jno
jbe
sbb
cmp
mov
mov
jmp
sbb
xor
int
call
dec
cmp
cmp
loop
dec
shrl
cmp
in
xor
out
mov
or
mov
add
or
lret
inc
cmp
jne
and
push
jmp
and
xchg
mov
adc
pushf
popa
pop
not
outsl
cmp
into
jne
clc
jmp
mov
cmp
aad
cmc
out
cwtl
test
dec
jl
mov
xchg
mov
fisubs
fsubrs
mov
xchg
insl
stc
mov
cltd
or
push
cltd
sub
mov
incl
shl
adc
fstl
stc
mov
cltd
jg
mov
mov
mov
cld
jp
or
movsl
dec
fistpll
jp
jb
mov
repz
adc
ljmp
jbe
mov
adc
add
or
inc
rcr
add
pop
sbb
sbb
xor
lcall
loopne
movb
adc
mov
iret
pusha
pop
cmpsl
ja
lcall
push
sar
add
arpl
jecxz
nop
sub
outsb
test
jmp
outsl
dec
mov
loopne
jo
out
sub
inc
xor
jns
mov
sbb
outsl
and
mov
call
arpl
das
jp
ljmp
call
movsb
enter
push
in
mov
incl
lods
arpl
mov
pushf
popf
xchg
mov
mov
jg
sub
push
and
inc
incl
cwtl
push
inc
sbb
pop
pop
into
xchg
cmp
add
cmp
aas
mov
je
dec
into
sbb
ljmp
push
and
mov
imul
int
outsb
pop
fcmovbe
lods
fstpt
clc
push
push
scas
aad
mov
pop
mov
adc
mov
dec
jl
jmp
out
xchg
mov
enter
push
dec
xor
mov
mulb
cli
add
mov
inc
inc
adc
mov
sbb
das
mov
ljmp
sarb
jnp
push
inc
mov
inc
das
jmp
pop
cmp
inc
mov
xchg
cmpsb
sub
jl
cmp
out
push
inc
call
adc
pushf
stc
int3
mov
lahf
sahf
push
out
fisttps
leave
es
loopne
inc
xchg
mov
mov
jo
xor
mov
insl
movsl
fldcw
into
pop
sub
loope
inc
cwtl
inc
popf
pop
sub
and
loop
aam
data16
xchg
lods
pop
ror
sbb
sbbb
jmp
icebp
sub
jmp
divb
ret
mov
inc
out
fimull
subl
jmp
adc
fwait
sbbb
inc
sub
test
mov
jo
call
jne
and
jae
lahf
cwtl
jb
cld
mov
dec
es
xor
sbbb
in
pop
xor
push
xor
sahf
cwtl
cmp
ljmp
jno
ja
add
push
xchg
enter
push
fcmovnb
ljmp
outsl
incl
jp
imul
mul
and
ss
enter
sar
pushl
rorl
into
aas
adc
cmp
sbb
push
imul
out
push
dec
mov
fldl2t
mov
dec
fistl
mov
andl
pusha
sbb
incl
imul
mov
test
outsl
js
cmc
xor
mov
push
mov
adc
insl
xlat
xlat
incl
je
mov
ret
pop
cli
pushf
add
imul
xlat
addr16
lahf
in
cmpsl
stos
ljmp
mov
pop
add
mov
mov
outsb
inc
aaa
cwtl
mov
sub
incl
mov
adc
je
idivl
aas
es
pusha
sub
cmpsb
out
or
sar
incl
mov
out
fimull
cli
rep
enter
mov
xchg
add
jae
push
or
dec
imul
daa
inc
rcll
dec
lea
jg
loop
sub
subb
xchg
test
mov
fs
ficoml
dec
movsl
mov
mov
sub
jbe
adc
insl
jecxz
and
jne
daa
negl
decl
jno
xor
cmp
inc
sbb
or
and
icebp
int3
scas
mov
enter
jns
ljmp
jge
decb
add
test
sub
or
inc
jg
lock
and
in
clc
and
jle
cmpsl
mov
stc
xchg
inc
push
sbb
xor
jno
clc
ljmp
pushf
ret
mov
outsl
adc
cmp
fdivp
jecxz
sbb
cmpl
ljmp
cmp
lahf
mov
or
std
outsl
fstps
pusha
inc
xor
div
gs
xor
lock
pushl
push
aam
ss
test
jne
rolb
mov
xchg
adc
lahf
pusha
sbb
jns
sbb
mov
mov
xor
xchg
mov
and
shlb
ds
push
int3
shll
mov
inc
sbb
inc
out
movsl
inc
jnp
inc
lods
mov
sub
ret
lock
push
ret
or
mov
ljmp
iret
les
int
xlat
mov
push
in
xlat
push
aas
pop
jb
inc
repz
jl
or
cmp
add
cmp
xchg
xchg
mov
cld
imul
mov
cmp
into
inc
cmp
mov
mov
mov
cmc
jb,pt
sbb
out
dec
inc
cmp
or
xchg
jno
jle
lret
jg
xchg
fmuls
insb
insl
mov
std
jmp
cmp
fldenv
in
mov
push
out
add
mov
push
or
or
inc
lret
mov
icebp
movsb
cmp
incl
mov
jge
xchg
pop
jne
fsub
jo
add
lcall
pop
or
sbb
insl
in
icebp
leave
in
mov
sub
in
test
sub
call
mov
adc
push
adcl
xchg
mov
push
les
fcomip
jmp
insl
dec
xor
lahf
rcll
out
lret
iret
or
in
jp
jnp
cs
aam
push
ror
mov
stos
push
outsb
jne
and
sbb
fcmovnu
jg
ljmp
bt
cmp
int3
stc
mov
mov
pop
pop
nop
incl
and
scas
jmp
push
out
push
xchg
scas
dec
cld
inc
jo
mov
call
xchg
imul
stc
add
inc
loop
lods
fimuls
repnz
cltd
imul
mov
inc
gs
xor
mov
arpl
mov
fcompl
fisttpll
dec
js
clc
push
lods
inc
daa
mov
ret
inc
dec
mov
inc
or
pop
outsb
xchg
mov
sbb
ljmp
out
jle
rol
mov
int3
divl
jmp
xor
ljmp
mov
popa
or
mov
stos
sub
dec
lcall
xchg
or
lock
jmp
lret
cmpsl
nopl
out
notl
loope
daa
cmc
decb
adc
cmp
sbb
lcall
or
divb
xchg
lea
mov
lret
pop
in
lret
inc
sarl
cmpsb
pushf
data16
nop
call
sbb
popa
and
jb
ds
gs
lret
mov
sub
dec
sbb
inc
inc
test
inc
dec
xchg
ret
fisubrs
ljmp
mov
pop
mov
cwtl
lcall
push
cmp
decl
dec
cmp
push
idivl
fnstcw
push
adc
shl
pop
std
repnz
sahf
call
jmp
hlt
mov
mov
lds
jecxz
or
les
add
adc
js
notl
incl
push
aaa
adc
adc
inc
push
sbb
pop
std
pop
dec
test
xor
cmpsb
lcall
cmc
cmpsb
cwtl
cmp
insl
jg
adc
hlt
fstl
jg
fcomip
ljmp
rcrl
jbe
mov
mov
or
call
insb
xchg
pop
sbb
mov
gs
adc
notl
js
aad
std
cld
ljmp
push
xchg
cs
lret
or
sbb
in
cmp
add
sbb
orb
sub
sti
add
push
jmp
loope
out
fnsave
dec
enter
pop
dec
mov
jecxz
imul
xchg
inc
mov
mov
decl
sbb
sbbb
lods
gs
lahf
push
insl
fsubs
test
mov
orl
mov
and
cld
inc
icebp
xor
xchg
popf
orb
icebp
decl
and
hlt
cld
out
test
cltd
pop
cmp
sub
aaa
test
roll
cld
xor
lahf
push
aas
int
inc
ds
jbe
into
call
mov
das
insl
sub
push
inc
xor
cmp
stos
jnp
aas
xchg
stos
inc
pushf
shrl
decl
lock
test
lock
inc
and
xchg
loop
jg
ds
sbb
sub
mov
mov
addr16
pop
sbb
loope
out
sub
cltd
incl
cmp
lock
sub
lods
or
pop
ja
mov
cmp
lds
jmp
ss
push
sbb
pop
jl
sbb
dec
pusha
jmp
mov
jmp
dec
adc
hlt
push
lret
pop
inc
mov
shrb
scas
inc
clc
mov
mov
ljmp
mov
repz
in
je
test
cltd
xchg
movsl
mov
pop
xchg
call
ds
sub
insl
push
loop
cltd
cmp
test
mov
mov
jmp
sub
dec
push
cmp
cmp
leave
cld
adc
jl
cmp
out
cwtl
dec
sbb
jp
sub
mov
ljmp
jbe
rcrl
sbb
push
dec
or
mov
jne
sahf
ljmp
call
pop
hlt
sbb
les
sbbb
push
lret
imul
test
lods
fstl
sti
enter
decl
daa
gs
mov
mov
das
pop
jle,pn
cld
test
les
or
fwait
call
dec
mov
pushl
or
sbb
and
out
std
fwait
push
out
jmp
call
fistl
mov
xor
scas
insb
or
jge
dec
subb
ljmp
fs
xlat
lcall
xor
mov
lahf
fs
xor
lahf
ljmp
add
pushl
pusha
js
xor
bound
xor
in
mov
jno
inc
movsl
sub
test
add
jmp
add
pop
shlb
cmc
cli
jl
aad
popf
mov
hlt
push
inc
push
ds
out
sbb
add
jecxz
cwtl
and
dec
int3
jl
fnsave
mov
outsl
leave
decl
sbb
xchg
inc
mov
mov
cmp
lcall
lcall
xchg
or
cs
dec
pop
mov
mov
je
ljmp
pop
decl
xlat
cmp
sub
lret
int3
pop
and
or
dec
dec
daa
loop
xor
push
call
lcall
jno
or
and
fmul
insl
clc
or
mov
jge
outsb
incl
int3
inc
mov
clc
push
jbe
daa
lss
xor
rorl
fstps
pop
in
or
pop
orl
sub
fdivrs
out
mull
adc
dec
and
pop
ficompl
fsubl
sub
ljmp
sbb
iret
movsb
ss
lret
stos
aas
movaps
xor
aas
fisttpl
cmp
lea
notb
mov
mov
jno
in
push
mov
jmp
and
leave
and
and
mov
rorb
sub
adc
dec
insb
xor
and
push
ljmp
xorl
call
stos
xchg
dec
adc
aam
cwtl
sbb
mov
fiaddl
add
mov
push
inc
jl
rol
lock
xchg
jge
pop
scas
rolb
sub
inc
andb
fidivs
int3
arpl
xlat
stos
fldl
and
test
sbb
dec
dec
xchg
popf
ret
nop
adc
mov
lods
repnz
lret
mov
sub
hlt
std
decl
arpl
sub
pop
ss
xor
daa
fisttps
cmp
mov
pop
sbb
js
jp
fldenv
mov
pushl
das
push
mov
mov
and
clc
xlat
push
aaa
push
xor
les
jg
xor
jo
stc
pop
pop
dec
pop
inc
dec
jb
int
leave
out
loopne
out
sbb
cmp
fcomip
repz
movsb
jg
popf
pop
push
adc
outsb
outsb
repz
and
arpl
lcall
cmpsb
stc
ret
add
pop
aam
or
cwtl
pop
lcall
sbb
icebp
in
cwtl
ljmp
cmp
lcall
mov
iret
inc
sub
xor
jmp
pop
aaa
ds
jp
mov
jge
pop
fcomi
ja
cli
inc
inc
ss
xor
add
inc
stc
popa
decl
loopne
add
shlb
out
or
pusha
cmc
insb
pop
sub
inc
dec
cwtl
movsb
pushl
sbb
aad
or
mov
ljmp
unpcklps
xchg
stos
aam
test
bt
ds
lock
mov
or
mov
jnp
icebp
push
movsb
arpl
sahf
dec
xor
push
jecxz
push
mov
push
add
test
xor
cmpsb
fcomps
cmp
mov
cmp
push
aad
rorb
out
push
push
mov
mov
cwtl
sti
inc
pop
dec
cmc
aam
lahf
mov
cmpsl
push
in
dec
ret
ss
out
mov
cmp
mov
pushf
xchg
push
outsl
pop
inc
push
add
mov
icebp
adc
call
pop
cmp
repz
js
xchg
and
adc
xor
pop
out
pop
out
movb
aad
jne
lea
jecxz
adc
repz
inc
add
jno
filds
out
outsb
pop
mov
stos
mov
push
pop
dec
bndstx
inc
add
add
jl
mov
mov
jl
jl
inc
adc
inc
idiv
decl
sub
test
push
cwtl
and
push
outsb
mov
mov
push
ljmp
lods
icebp
jp
mov
cwtl
stos
push
loope
ds
cmp
sbb
stos
add
fsub
push
fwait
in
sbb
cli
xchg
xchg
sub
xor
arpl
aad
leave
jb
jmp
stos
mov
inc
das
cmpsl
mov
xor
out
lcall
mov
lahf
out
cmp
ljmp
inc
mov
adc
ret
and
xchg
hlt
push
call
shll
ljmp
add
and
inc
mov
jle
xchg
outsb
sahf
push
decl
loopne
xchg
sti
cmpsb
xchg
sbb
push
or
daa
add
cmp
out
decl
sti
pop
mov
loop
adc
jae
adc
sbb
dec
adc
jp
add
call
mov
les
mov
movsl
dec
ret
les
sub
fs
fnstcw
pop
jno
push
stos
leave
push
mov
and
mov
mov
hlt
adc
mov
add
lcall
movsb
jnp
jl
stos
mov
pop
xchg
roll
pop
call
cmp
cs
stc
sahf
mov
add
leave
nop
call
jp
add
jno
mov
sbb
out
dec
adc
or
adc
pop
call
jae
inc
inc
pop
inc
pop
neg
fcoml
lds
pop
dec
loopne
xor
adc
aaa
repnz
jo
and
mov
lcall
mov
and
push
rcr
inc
inc
flds
ljmp
rclb
xchg
xor
movsb
xlat
mov
mov
or
and
ja
cld
xlat
cmpsb
add
jle
sbb
add
int3
sub
adc
xorl
aad
mov
or
dec
xor
inc
jge
mov
call
cmpsb
dec
and
push
pop
push
cmp
xchg
into
je
les
jnp
sub
out
mov
mov
lret
dec
mov
dec
jbe
mov
and
dec
lock
test
int3
inc
dec
shll
sti
cmp
ss
arpl
dec
pop
mov
out
cmp
mov
jp
mov
cmp
xor
xor
aam
bound
mov
push
mov
ja
test
pop
dec
push
ss
sbb
daa
dec
pop
pusha
mov
cmpsl
iret
dec
lcall
push
dec
xor
arpl
loopne
push
cltd
bound
fldl
fwait
mov
insl
pushl
pop
out
sub
arpl
add
cli
and
js
rorl
xor
addl
mov
std
imul
daa
adc
je
ficoms
xchg
insb
inc
decb
orb
inc
mov
mov
sbb
mov
fstl
icebp
hlt
js
iret
mov
sbb
cmp
incl
mov
xchg
xchg
jecxz
push
lahf
jmp
pop
mov
imul
cmp
imul
mov
dec
mov
cmc
mov
add
addr16
and
std
call
and
cmc
cmp
sbbl
std
rcll
or
mov
pop
sbbb
dec
add
xchg
adc
lret
cli
cmpsl
push
inc
movsb
test
xchg
stos
or
xchg
je
xor
or
js
lcall
push
sub
sub
xor
ficoml
mov
add
jns
int3
shrl
cmpsb
rcrl
scas
add
fxch
scas
sahf
sbb
push
mov
scas
clc
pushl
inc
ret
repz
stc
push
pusha
add
leave
add
mov
js
jg
lcall
orb
ret
outsb
xor
add
adc
mov
dec
loopne
lret
in
push
mov
loop
fwait
in
popf
andb
pop
test
push
sti
out
subl
fmul
and
xchg
ror
pop
iret
and
mov
int
loopne
cmpsl
sahf
into
ret
mov
es
clc
ljmp
cmp
sbb
clc
push
fisubs
inc
mov
cltd
aas
pop
mov
outsl
jge
and
push
leave
fcos
leave
xchg
and
loopne
pushl
sahf
rcll
jp
neg
fidivl
hlt
sbb
sti
push
cmpb
call
push
mov
pop
fidivl
sbb
mov
ljmp
sub
mov
push
xor
test
inc
mov
ljmp
shl
fs
int3
lahf
add
and
sub
lock
sub
lcall
fdecstp
loope
negb
push
jp
jge
lcall
jno
xor
xchg
addr16
call
jb
pop
das
lock
sbb
jbe
shll
lcall
sbb
popf
sub
mov
decl
add
mov
or
xchg
xchg
mov
push
dec
pop
loopne
mov
inc
cmp
add
sub
pop
cmpsb
sub
loope
ljmp
or
add
les
xor
dec
jno
loope
repnz
insb
pop
es
mov
pop
pop
mov
stc
xor
pop
test
out
cmpsl
jmp
inc
inc
mov
loopne
cmp
xchg
mov
pop
jb
pushf
mov
sub
push
rcl
sub
or
adc
movsl
outsb
mov
jae
std
mov
shr
push
movsb
inc
mov
mov
outsl
in
inc
lock
push
sub
cmpsb
decl
into
xchg
push
push
scas
push
ffreep
repz
sub
sbb
xor
icebp
push
pop
jp
mov
scas
sub
jmp
f2xm1
mov
jne
xor
xchg
scas
rcr
mov
dec
xor
rcrb
fldl
jno
outsl
pusha
or
ljmp
js
inc
mov
xchg
fisubl
idivb
stos
push
pusha
adc
and
out
pushl
btc
mul
jle
push
mov
jns
sub
jnp
sub
mov
aam
test
ja
mov
cmp
mov
in
jnp
hlt
jp
jo
andl
sarl
add
adc
sbb
push
xlat
adc
scas
out
cwtl
repz
cld
mov
repnz
mov
add
xchg
and
inc
dec
mov
cmp
das
dec
lock
imul
cld
call
ljmp
push
xor
xchg
jg
js
mov
out
jno
mov
mov
aad
aaa
or
gs
aad
jne
in
imul
inc
aaa
dec
daa
fistps
sbb
negl
cmc
enter
imul
les
dec
cmc
cld
jo
jmp
add
sbb
fwait
jmp
jae
shrb
into
in
jge
into
jge
mov
insl
sahf
scas
stos
incl
repz
flds
dec
and
stos
dec
jge
pop
jp
fisubl
leave
or
outsl
mov
das
or
xor
xchg
idivl
or
decl
dec
movsl
test
stc
data16
es
outsl
or
rorl
hlt
mov
sub
inc
lcall
scas
or
pop
in
dec
ljmp
jb
aas
rcrb
sub
and
out
icebp
mov
jecxz
andl
jg
test
jp
adc
out
jbe
mov
cmpsl
xor
push
and
pop
mov
cmpsb
scas
xor
add
push
and
and
sahf
outsl
popf
jae
enter
xor
test
fisubs
lcall
or
fs
negb
inc
dec
repnz
stos
and
cmpsl
add
jecxz
or
dec
sbb
pop
and
in
js
lds
jmp
mov
pop
aas
or
movsl
add
call
decl
and
sbb
sbb
or
jo
inc
sbb
mov
fildll
call
in
push
push
push
int
add
out
ss
enter
mov
cmp
and
outsb
mov
test
ljmp
cmp
out
or
mov
call
adc
std
cltd
lahf
popf
imulb
incl
ljmp
out
cmp
outsl
ja
leave
jno
pop
cwtl
fisttpll
das
sbb
lcall
jle
xchg
insb
xor
xor
inc
sti
scas
pop
jae
ss
xor
pop
lcall
push
dec
ljmp
adc
dec
push
shlb
mov
xchg
mov
movsl
xchg
scas
test
jl
in
add
jb
inc
mov
adc
mov
les
jg
repnz
daa
ret
andl
out
fs
lea
lcall
fimuls
aaa
rolb
das
sbb
sub
jg
popf
sub
shll
push
sbb
inc
adcl
and
incl
hlt
inc
xchg
xor
xor
aas
pop
fiadds
cld
lds
test
in
je
cmp
sti
pushl
sbb
popf
out
sbb
pop
dec
jbe
es
outsl
jno
and
decl
cmc
and
or
mov
push
push
jae
push
mov
sbb
pusha
and
dec
std
js
je
adc
adc
add
pop
ficoms
add
cld
xor
mov
cmpsb
sub
pop
clc
in
lods
mov
fucomip
pop
jmp
mov
xchg
sarb
dec
cmp
stos
jmp
dec
jl
and
call
test
jae
sbb
mov
aas
cmp
lea
mov
rcrl
cmpsb
xchg
icebp
incl
enter
sarl
cmp
test
inc
xor
fcomip
inc
call
stos
aaa
out
das
leave
or
fstpt
jecxz
and
lcall
ljmp
mov
jae
mov
push
test
sahf
pop
neg
aaa
jae
cmpsl
xchg
xchg
insl
loope
xlat
test
pushl
divb
sbb
test
sbb
sbb
and
clc
dec
mov
cmp
sar
sub
ret
addr16
dec
xchg
repnz
incl
outsb
cmp
mov
dec
call
mov
shll
loopne
mov
scas
call
ja
incl
fdivl
fisttps
fmul
mov
into
lcall
pusha
lcall
loop
fs
or
jp
loop
add
call
popf
pop
pop
add
incl
mov
rolb
jl
xor
xor
push
mov
mov
call
inc
fstl
lea
daa
add
lock
jb
jmp
addl
in
and
cmp
cmpsb
dec
jb
aas
add
incl
cmp
push
ret
test
mov
xchg
loop
xlat
lods
push
cmp
in
add
testl
decl
or
pop
xor
clc
add
decl
aaa
add
hlt
daa
fisubrs
fmuls
movsb
sti
inc
push
leave
xchg
push
pop
add
mov
sbb
popa
clc
lds
and
cmp
xor
aam
iret
xchg
cmpl
inc
imul
mov
stos
repnz
js
pop
lret
pusha
mov
sahf
xchg
ljmp
cmpsb
in
xchg
rcll
lret
lods
push
mov
add
test
lods
dec
hlt
popa
mov
pop
mov
daa
bound
dec
or
cmp
fsubp
divb
nop
sti
lret
lahf
add
ret
ret
bound
cmp
xor
movsb
mov
stos
xchg
cmp
inc
cld
jmp
shrl
add
mov
enter
dec
mov
or
fsubrl
icebp
sbb
pop
sub
mov
mov
mov
dec
xchg
lret
jns
cmpsl
push
jns
shrl
jg
dec
xor
pushl
imul
lahf
mov
lret
mov
int
inc
xchg
bound
orl
fwait
jp
add
movsb
xchg
hlt
sbb
repz
std
and
scas
cmp
out
cli
pcmpgtb
push
xchg
inc
inc
push
pcmpgtd
xchg
jmp
xchg
jp
addr16
dec
popa
call
ss
and
push
or
inc
clc
outsl
cs
es
or
pop
popf
je
jl
popf
adcl
in
nop
call
mov
inc
adc
jp
mov
cmp
fistl
mov
shlb
sub
call
cmp
xchg
add
cld
pop
ljmp
mov
mov
fs
js
jmp
mov
loope
sub
loope
cmp
in
jg
sarb
mov
push
mov
ret
push
orb
push
push
mov
dec
xchg
mov
inc
sar
es
mov
pop
pop
push
dec
dec
pushf
int
sbb
xchg
sbb
jmp
pop
nop
hlt
mov
lea
sti
shlb
mov
push
int3
out
adc
pop
mov
dec
adc
mov
sti
xor
leave
clc
jnp
dec
cmp
dec
pop
mov
mov
jecxz
sub
sar
icebp
cmp
leave
aas
mov
xor
outsl
or
lret
fs
aaa
pop
ds
pushf
ljmp
sbb
icebp
sbb
lds
cmp
frstor
push
jg
sbb
stos
dec
cmp
xor
ret
fucomip
sahf
mov
lcall
mov
inc
hlt
repz
lods
jns
imul
movsb
cltd
out
mov
jmp
outsb
movsb
ljmp
jae
push
in
scas
mov
ret
popf
push
loope
outsl
dec
mov
ret
mov
incl
ja
ja
mov
push
inc
sbb
incl
add
outsb
les
and
imul
iret
in
inc
ljmp
adcl
fwait
pop
insl
fcompl
push
and
repnz
out
add
mov
call
xor
fadd
test
pop
popa
xchg
cld
fcompl
sti
movsl
lret
or
out
repz
jo
ljmp
add
pushf
test
push
mov
movsb
jmp
iret
sub
pop
stc
outsl
pop
add
dec
jbe
lret
imul
insb
movlps
push
xchg
inc
and
sti
jne
pop
or
bound
add
adcb
add
imul
mulb
mov
int
mov
xor
dec
fs
xor
in
sbb
iret
and
xor
mov
imull
inc
ljmp
xchg
push
in
cmp
data16
sahf
leave
sbb
xchg
dec
xchg
js
dec
pop
nop
or
pushl
sti
jg
cmpsb
popf
mov
mov
mov
jbe
pop
test
es
out
subb
enter
jle
xchg
daa
xor
es
cld
push
dec
jp
and
cmp
ljmp
dec
xchg
mov
xor
repz
pushf
cli
push
test
mov
arpl
shll
or
mov
test
incl
out
and
lcall
inc
outsl
mov
jnp
xor
incl
jae
cmpsl
xorl
pop
pop
or
out
imul
push
jmp
pop
or
xlat
aaa
jmp
and
ljmp
dec
and
inc
xchg
jmp
in
jcxz
icebp
dec
lock
into
xchg
cmp
in
call
jmp
stos
into
inc
aas
test
cmp
inc
cwtl
mov
xchg
mov
dec
inc
jmp
xlat
addr16
fdivrp
stc
push
dec
stc
dec
jns
xchg
mov
loop
inc
xchg
push
ljmp
adc
repnz
jg
sub
dec
mov
bnd
mov
roll
or
mov
in
aas
sbb
loop
sub
push
dec
nop
sub
insl
inc
js
out
inc
jne
pop
cltd
popf
call
mov
ficomps
mov
shrb
aaa
xchg
repnz
push
loope
incl
pop
pop
cs
sbb
lods
jbe
sbb
roll
lcall
mov
mov
unpckhps
push
ss
les
xchg
mov
pushl
outsb
sti
sbb
ss
daa
imul
gs
mov
les
push
inc
xchg
pushl
std
xchg
rorl
test
mov
adc
sub
mov
pop
push
inc
push
mov
clc
fs
push
outsb
jnp
sub
mov
mov
insw
dec
dec
xchg
cld
dec
adc
inc
jp
or
ret
add
divb
loopne
pop
incl
repz
mov
rcll
xchg
and
stc
xor
sti
mov
xor
stc
les
push
push
cltd
adc
mov
jp
dec
ss
jb
incl
xlat
push
sbb
js
cltd
add
sbb
sbb
cmp
push
aam
sbb
stos
push
outsl
mov
aam
jl
push
fisubl
pop
push
add
dec
sti
out
xchg
push
add
mull
xchg
add
sbb
jmp
sub
push
cmpsb
in
dec
add
jne
push
and
mov
hlt
ja
mov
cwtl
xchg
fwait
call
cmp
or
fnstsw
cmp
sbb
jo
outsl
pop
jmp
mov
pop
push
sar
push
dec
inc
pop
xor
data16
ret
or
mov
adc
mov
call
jl
outsb
dec
shr
out
ss
js
sbb
mov
cld
pop
xor
mov
pop
jns
divl
rorl
addb
outsl
aad
pushl
xchg
cmpsl
jnp
arpl
loopne
cltd
mov
mov
in
in
incb
jne
loope
lcall
mov
or
jns
outsl
jo
lock
js
outsl
pop
fstps
aad
or
es
hlt
and
call
repz
scas
fmull
jge
mov
ljmp
jbe
decl
sahf
pop
jmp
bound
mov
mov
int3
add
rcrl
cmp
cld
call
mov
scas
dec
shrl
push
or
cmpsl
pop
cmc
mov
nop
xchg
xchg
jmp
loopne
jp
iret
loope
int3
out
inc
aad
sub
das
and
push
pop
arpl
lcall
cmp
lods
out
fbld
mov
xor
sbb
mov
arpl
pop
cmp
ljmp
imul
push
ret
lds
scas
data16
cld
and
icebp
ljmp
mov
add
and
mov
fcmovnb
dec
add
test
aaa
inc
mov
cmp
adc
jb,pt
aaa
js
test
add
push
cltd
int
cs
jno
push
stos
lret
mov
aas
dec
dec
test
out
jmp
mov
jg
mov
pop
addr16
push
xlat
sbb
in
pop
add
adc
lret
rorl
xchg
pop
push
push
into
daa
lcall
push
aam
mov
add
enter
outsb
js
dec
ret
lds
jmp
cld
lds
push
pop
les
dec
out
cli
incl
xchg
call
out
fldt
or
iret
mov
mov
pushl
jae
push
cli
jmp
aaa
shl
shr
lods
in
outsb
mov
daa
and
pop
mov
mov
jno
add
outsb
lret
mov
xchg
in
add
in
movsl
enter
mov
sub
jns
add
lods
jmp
jmp
int3
leave
dec
push
ljmp
sub
jecxz
push
push
xchg
imul
incl
cmpsb
jecxz
into
out
insl
jmp
jl
sub
divl
ret
or
popa
sar
incl
dec
pusha
shll
pop
shl
jg
flds
fmulp
lds
iret
je
adc
incl
or
xchg
push
loopne
or
xor
adc
out
hlt
arpl
jmp
mov
mov
into
mov
pop
jl
mov
lcall
add
mov
sar
decl
sbb
xchg
xchg
add
add
mov
jnp
sbb
bndldx
insl
mov
lcall
out
pop
inc
repz
add
iret
push
push
mov
xor
mov
pusha
loop
xor
jg
lret
xchg
inc
dec
or
xchg
cmp
adc
outsb
push
ficoml
dec
adc
inc
pop
stos
inc
sahf
lods
cmp
fcomip
mov
dec
pop
outsl
scas
xchg
sbbb
pop
sbb
mov
or
mov
aaa
jns
xchg
inc
call
loope
lret
scas
mov
mov
sub
out
cs
xor
dec
mov
jecxz
roll
mov
adc
jmp
aad
jb
sbb
add
inc
jae
in
xchg
cwtl
aaa
stos
outsb
xchg
add
push
jg
in
sbb
or
mov
mov
push
push
outsl
sub
fadd
mov
jnp
mov
fisubl
jmp
daa
inc
mov
fwait
cs
cmp
sbb
in
jb
in
push
mov
das
sar
jle
sbb
cmc
push
js
pop
shlb
xchg
xchg
jnp
sti
daa
sahf
loope
mov
std
and
dec
je
sbb
cmp
ret
decl
mov
test
inc
leave
jnp
std
sbb
mov
aas
popf
fmull
call
cltd
inc
arpl
add
jg
adc
fistl
dec
jmp
xchg
icebp
xchg
ret
loopne
sub
roll
mov
mov
lahf
stos
mov
jae
movsb
mov
rorb
mov
dec
in
insl
decl
sbb
sub
inc
cmp
movsl
mov
imul
ret
mov
cs
aad
test
out
and
mov
test
push
mov
xor
int
xor
call
insl
loope
incl
movsb
mov
aas
pushf
sub
jns
int3
pop
mov
pop
ljmp
orl
les
fcmovbe
cld
lret
sbb
pusha
push
and
jge
ror
pop
pop
nop
scas
or
push
and
testl
and
pop
cmp
cli
incl
aaa
xor
clc
and
cmpsb
add
cmp
lret
xor
pushl
mov
sub
xchg
fdiv
mov
or
flds
enter
push
sub
adc
cmp
sub
dec
shrb
popf
xchg
cs
out
push
add
stc
and
or
int3
insl
xor
sar
scas
cli
sti
cltd
xor
aas
mov
sti
data16
or
movsb
xchg
popa
xchg
add
in
dec
xchg
mov
out
insb
popa
lods
lcall
pop
cmpsl
xchg
dec
inc
xchg
ret
mov
mov
decl
jecxz
jp
mov
mov
add
insb
fisubrs
adc
js
push
fsubs
jns
addr16
fcos
pushl
std
inc
adcb
js
pop
jg
cmpsb
push
lcall
sub
fdivr
call
imul
sbb
lods
mov
mov
cmp
inc
inc
outsb
inc
xor
lcall
dec
dec
das
jl
daa
in
xchg
xchg
mov
mov
push
data16
pop
hlt
rcll
jno
in
sbb
pop
jmp
ror
aaa
mov
adc
xor
jl
jne
mov
imul
filds
int3
mov
mov
insb
inc
fisubrl
sbb
lahf
aaa
inc
hlt
fs
in
icebp
ljmp
iret
out
cmp
jmp
xorb
jmp
popa
pop
cmpsl
lret
decl
cld
test
in
mov
roll
adc
rorl
dec
ret
out
xchg
jg
ja
push
jns
cmp
je
mov
out
daa
xchg
sub
inc
js
jg
or
jmp
jns
pop
adc
lcall
filds
add
cmc
mov
mov
arpl
cmp
lcall
or
pop
out
cmp
push
out
fwait
and
movsb
imul
xchg
xchg
jne
fldcw
clc
jmp
cmp
std
addr16
mov
push
adc
fnstsw
add
push
sub
push
inc
add
xor
in
jb
pop
push
and
out
adcb
rcrl
cmp
jmp
lods
rclb
lods
push
insb
add
mov
hlt
mov
in
add
mov
adc
mov
sahf
add
sbb
in
push
jns
xchg
std
sbb
dec
decl
adc
sbb
add
mov
mov
aam
rcrb
stos
jecxz
inc
lods
cmc
mov
in
push
call
and
jns
sbb
cmp
mov
xchg
fsubrl
xchg
sub
sti
insb
stc
daa
sub
sar
lds
cmp
outsb
int
cmpsl
mov
outsl
pushl
xor
mov
add
xchg
mov
aas
push
mov
adc
push
pop
jb
jb
loope
dec
dec
stos
scas
inc
insb
and
sbb
dec
cmpsl
cmp
or
jle
mov
mov
bound
pop
push
pop
sbbb
dec
rorb
jg
in
push
cwtl
mov
stos
and
pop
insb
jge
lds
lea
scas
pop
cld
decl
test
pop
add
dec
adcb
mov
scas
or
sti
ficoml
cmpsb
decl
aam
mov
mov
cltd
push
or
sub
fdivl
decl
addr16
and
push
jae
sbb
repnz
lea
push
cwtl
ss
repnz
jp
fwait
adc
lods
test
cltd
jp
adc
cwtl
iret
lahf
sar
jmp
movsl
mov
aaa
xchg
repz
sub
mov
sub
jnp
add
sub
dec
adc
mov
mov
fs
push
xor
movsb
mov
popf
or
call
out
into
idivb
dec
add
aad
dec
rcl
or
push
shrb
into
decl
push
add
dec
pop
popf
xchg
cmp
jl
xchg
pop
sbb
es
xchg
js
jmp
cmp
dec
shlb
mov
test
popa
push
imul
fbstp
mov
fsts
xorl
into
xchg
ljmp
mov
ljmp
jle
and
pushf
ret
mov
test
dec
and
popf
out
mov
out
ljmp
call
popf
push
in
xchg
pop
pop
ja
mov
ss
hlt
pop
xor
gs
fwait
mov
mov
mov
fwait
jle
add
pop
push
movsl
ret
sbb
ret
add
push
jb
fwait
mov
pop
or
and
pushl
adc
ds
cmpsl
inc
enter
icebp
sbb
mov
pop
sub
inc
aad
jecxz
lcall
push
out
fcmovb
loope
jge
or
dec
stos
std
stos
sub
add
decl
test
mov
jo
mov
mov
xchg
sar
mov
add
bound
mov
into
fxch
movsb
movsl
adc
insl
mov
mov
jmp
sub
mov
mov
mov
cwtl
and
mov
jbe
push
mov
lock
decl
js
iret
sbb
jg
aas
pop
sbb
int3
and
lock
pushl
and
or
cwtl
dec
mov
and
ljmp
shrl
into
inc
xor
mov
inc
push
xor
shrl
pop
mov
xchg
lods
stc
dec
fisubs
mov
aas
adc
mov
fnsave
adc
xor
ljmp
in
mov
push
push
pop
rclb
ret
xor
in
mov
lods
subb
mov
pop
std
jmp
mov
pop
mov
dec
cmp
fcomps
subl
and
pushf
add
cmp
sbb
push
shrb
or
call
in
add
je
mov
dec
xchg
fistpl
xchg
mov
adcb
decl
add
push
ja
or
into
mov
push
in
leave
decl
mov
cmpsb
loope
sbb
push
es
jle
call
repnz
outsb
inc
js
inc
ljmp
incl
and
push
testl
or
lret
jg
int
hlt
int
mov
push
ss
xor
jecxz
loopne
lea
incl
inc
sahf
or
out
jg
mov
in
mov
andl
popf
mov
and
leave
pop
incl
mov
lods
js
dec
cmc
pusha
rcr
xor
loop
lods
fidivrs
jo
ljmp
sub
pusha
inc
mov
dec
mov
arpl
mov
ret
out
movsl
pop
push
cli
dec
xchg
adc
xor
xor
lahf
xor
sub
gs
icebp
xor
call
pop
es
push
jo
fdivrs
cmp
pop
inc
dec
push
push
pop
push
sbb
cld
test
fcomip
call
jp
test
div
add
lcall
jmp
aam
inc
dec
imul
scas
push
das
add
dec
mov
cmpsl
leave
rcl
sbb
push
mov
sub
mov
pushf
insb
pop
lret
out
xchg
fsin
sbb
ficompl
insl
xor
das
cmpsl
rcll
loop
insb
stos
jecxz
scas
jg
cmpsb
clc
adc
jo
cwtd
repnz
dec
cld
push
icebp
movsb
mov
das
shll
adc
icebp
lcall
inc
xchg
pop
nop
push
setno
fcompl
mov
cmpsl
in
dec
jmp
jo
and
pop
lock
adc
sub
pop
pop
test
outsl
nop
or
jg
lea
xchg
subl
jl
mov
mov
cwtl
pop
xchg
add
mov
call
jg
sar
xchg
insl
add
out
fldl
in
fcoml
ljmp
hlt
push
jg
icebp
push
imul
pusha
test
mov
lret
lds
out
ja
in
rclb
mov
cli
lock
sahf
je
scas
outsb
or
add
out
cltd
ss
xlat
push
bound
clc
stc
sbb
push
cmp
jbe
xlat
idivb
pop
sub
int3
lea
shll
jle
scas
mov
inc
pop
nop
mov
pop
sub
jle
push
rclb
out
cli
mov
pop
iret
pushf
lds
pop
cmp
pop
mov
ja
daa
inc
ret
in
outsb
pushf
push
jmp
push
and
dec
add
repnz
mov
imul
xchg
test
enter
ljmp
cmp
mov
mov
mov
les
loop
lcall
push
jo
popa
adc
fbld
outsl
mov
ljmp
neg
sub
jl
rcll
lods
jae
scas
loopne
mov
popf
rol
into
icebp
sbb
out
jge
lcall
jmp
fcomi
test
test
xlat
push
pop
dec
loopne
sahf
jnp
adc
call
hlt
jge
cmp
add
jo
aad
in
adc
add
insl
or
notb
mov
lcall
cmp
fimull
cmpl
xor
out
inc
mov
jg
cli
or
leave
scas
out
lock
xchg
push
mov
bound
jmp
fstpl
les
push
stc
lcall
in
je
pusha
inc
lds
cmp
addr16
mov
decl
xchg
cmp
jne
repz
nop
xchg
xchg
sbb
cs
inc
ficoml
fcos
incl
jl
pop
shll
dec
xchg
mov
xor
loope
mov
dec
mov
incl
xchg
sahf
push
pushf
sbb
mov
cmpsl
js
mov
push
stos
test
cld
mov
pop
int3
out
cld
mov
push
cmpsl
sub
mov
lock
jl
push
leave
int3
jp
in
pop
or
lcall
in
pop
mov
mov
sub
incl
insb
sti
pop
pop
dec
int3
test
xchg
loopne
add
popf
test
xchg
call
cmp
adc
push
inc
inc
mov
in
mov
xorl
movsb
jl
jg
or
mov
inc
jno
mov
xor
sub
cld
mov
cmp
pop
mov
out
mov
icebp
stos
mov
sub
addr16
ljmp
mov
dec
mov
push
rol
aas
pop
push
add
incl
inc
push
dec
out
mov
xchg
ds
daa
sbb
xor
pop
adc
jl
dec
add
jg
nop
jp
mov
dec
in
cmp
add
pop
lods
loopne
addl
loopne
add
pushl
out
mov
xchg
repnz
fdivrs
pushl
ja
mov
and
addl
add
cmp
mov
jmp
mov
loopne
lret
lock
xchg
popf
cmp
sub
xchg
jb
scas
mov
and
ljmp
cmc
or
mov
mov
push
aam
xor
popa
outsl
xbegin
add
pushl
lahf
lods
cmp
or
sub
fsubl
jge
in
decb
ss
addb
stos
into
sbb
jmp
call
jmp
icebp
xchg
enter
dec
fldcw
inc
out
xchg
ror
jno
arpl
jg
cmp
cli
or
out
sahf
fdivp
push
sub
fcompl
lret
idivb
incl
mov
sbb
loope
hlt
push
int3
jecxz
adc
push
out
repnz
sbb
mov
loop
fcoms
xchg
loopne
ret
mov
lea
or
mov
imul
incl
xchg
xchg
xor
dec
dec
pop
pop
rclb
aam
pop
clc
loope
sbb
mov
sub
ds
dec
xchg
sub
inc
push
cmc
into
or
lret
or
fists
xchg
cs
cmpsb
ljmp
leave
mov
or
add
data16
out
fsubrl
decl
je
fmull
xchg
in
subl
xor
sbb
adc
dec
loope
test
pushl
movsl
lret
push
inc
jae
mov
int3
mov
test
jmp
int3
mov
jle
cld
aad
sub
mov
lcall
lahf
push
xchg
add
jge
jecxz
lock
enter
adc
sbb
lcall
loope
mov
scas
loope
jmp
jl
into
mov
or
sti
add
ret
imul
cli
outsb
add
cmc
mov
push
sub
xor
mov
pop
cmp
lds
in
push
in
push
inc
mov
cwtl
loopne
ljmp
popf
stc
cmp
mov
ljmp
and
outsb
sahf
sbb
fisttpll
test
pop
fisubl
pop
sub
adc
push
aad
sbb
addl
addr16
stos
les
clc
subl
scas
pushf
clc
dec
sti
int
jmp
inc
movsb
cld
jb
mov
dec
fs
popaw
icebp
lea
imul
lcall
mov
xchg
xchg
sahf
cmpsl
pop
mov
sbb
dec
dec
jle
jl
jmp
clc
test
shrl
shl
mov
cltd
add
iret
push
add
movsl
int3
das
je
lock
pushl
test
pop
jo
xchg
or
mov
pop
pop
inc
ret
insl
cmp
pop
pushl
push
xchg
push
and
rcrb
xchg
push
ss
adc
push
jnp
enter
test
add
cmp
lcall
repz
xchg
dec
pop
pop
mov
jmp
iret
int3
repnz
lds
mov
inc
push
lds
aas
loope
xchg
pop
pusha
push
loopne
imul
mov
mov
js
cmp
lods
and
in
xchg
mov
nop
dec
mov
lcall
ret
mov
pushl
jns
add
mov
das
add
pop
sub
mov
push
arpl
pop
je
stc
pop
icebp
mov
out
push
imul
xor
leave
stos
jne
mov
leave
jle
scas
cmp
aaa
mov
icebp
inc
pop
incl
stos
fwait
in
movb
sub
lods
cmpsb
aaa
xchg
in
jae
pushf
or
push
orb
mov
lods
inc
int
adc
aad
fxch
call
rcr
sti
scas
lret
repz
mov
cwtl
shrl
ljmp
or
pop
dec
fsubl
lods
fwait
pop
lea
mov
std
incl
repnz
fsts
sbb
dec
mov
ds
mov
into
xchg
fadds
lcall
cmp
mov
jge
mov
mov
addr16
mov
sbb
jmp
call
out
mov
jb
and
into
inc
sub
jo
xor
jbe
insb
jecxz
enter
mov
cmpsb
push
xchg
adc
mov
mov
lret
int
mov
mov
lcall
jne
das
loop
sub
in
mov
or
pop
sti
les
jb
ss
mov
pop
in
pop
pop
iret
add
cmpsb
xor
mov
and
adc
jmp
add
int
jae
xchg
cvtpi2ps
sbb
stos
dec
or
mov
les
pop
lods
push
sbb
mov
xchg
clc
pop
jo
add
dec
cmpsl
push
outsb
jbe
or
sbbl
sbb
mov
pop
lods
scas
or
outsb
lret
mov
in
rcr
cwtl
cli
bound
sub
mov
sti
mov
cmc
xchg
hlt
mov
sbb
push
mov
jl
adc
fadds
fidivrs
jge
fsubl
sbb
push
mov
aas
aam
in
mov
adc
testl
cmpsl
lds
xor
push
cwtl
roll
pop
lret
sahf
cmp
push
push
adc
decl
mov
jne
cmpsb
dec
test
ja
cmp
or
adc
mov
call
cmc
in
enter
jl
leave
inc
pop
push
sbb
xchg
mov
jbe
pop
mov
aas
and
arpl
fwait
lcall
decl
testb
dec
movsb
fldl
iret
jne
inc
pop
jnp
jmp
fdivrp
call
lock
pop
push
sub
mov
jns
cmp
mov
sbb
mov
ss
push
xchg
test
mov
stc
aas
lock
inc
pop
sub
arpl
mov
out
jo
jmp
sub
sbb
ja
dec
and
push
scas
pop
jle
ret
in
movsb
pop
xchg
aad
test
pop
fs
xchg
push
pushf
sub
fistps
loope
call
rclb
pop
sbb
ss
fs
repnz
sbb
mov
daa
jecxz
divb
montmul
cmpsb
add
add
jmp
mov
push
push
popf
jmp
or
jbe
cmc
scas
mov
stc
notl
xchg
xchg
pop
pushl
fwait
cmp
pop
mov
je
sub
adc
das
jge
pop
addl
ljmp
jp
cmp
jle
lods
pop
loopne
inc
sbb
dec
jbe
je
or
incl
insb
xchg
pop
lea
lahf
test
sub
jbe
scas
call
cli
push
call
add
dec
inc
pop
loope
mul
mull
into
int
lcall
push
adc
push
lahf
lret
fs
jp
or
adc
xor
xchg
cmp
test
jns
cmp
call
xor
lret
jp
sbb
fwait
movsb
mul
incl
mov
mov
xchg
xor
inc
mov
xchg
stc
insl
hlt
je
imul
ficoml
pop
jl
nop
mov
inc
pop
movsl
aam
or
mov
aaa
icebp
add
addr16
dec
lods
mov
aad
pushl
push
js
or
xchg
cmp
adc
dec
mov
jae
jp
mov
mov
add
pop
inc
adc
mov
or
out
call
fisubl
js
gs
xor
inc
xor
dec
mov
dec
pop
test
push
loopne
jg
pop
pop
push
lret
mov
aas
sahf
dec
dec
jb
lock
inc
xor
inc
xor
fisttpll
push
cmp
es
test
andb
lahf
in
add
ljmp
mov
je,pn
jp
xor
aad
rcrb
cli
enter
pushf
add
call
mov
imul
push
dec
dec
mov
std
jmp
cli
xor
std
push
xchg
lods
pusha
inc
in
mov
mov
sub
flds
sti
push
pop
dec
mov
out
decl
scas
push
aam
mov
push
loopne
inc
push
jns
pop
sbb
fidivrs
inc
and
mov
inc
shrb
mov
sub
sbb
pop
js
cmp
incl
add
pop
inc
ja,pn
jle
int3
scas
sub
stc
push
push
mov
mov
pop
stos
sub
loopne
pop
inc
neg
push
or
out
bound
flds
lret
or
jo
das
sar
sbb
jmp
in
sub
xchg
mov
rolb
movsb
sbb
jmp
push
xor
outsl
das
jp
rclb
loopne
inc
inc
lea
icebp
sub
dec
lcall
arpl
push
cmp
sbb
jmp
pop
mov
hlt
dec
cmc
std
icebp
jmp
jmp
and
jb
sbb
ss
sbb
push
out
push
add
mov
mov
sub
pop
in
paddq
mov
xor
push
mov
into
and
roll
pushl
xchg
mov
nop
xor
xor
loope
xorl
add
jb
fistl
push
decl
push
pop
sar
mov
mov
scas
inc
icebp
loop
xor
int
xor
enter
js
pushl
xor
and
xchg
lock
inc
gs
xchg
cmpsl
push
pusha
add
dec
test
pushl
mov
ja
mov
and
and
push
mov
pop
hlt
and
call
js
scas
adc
cmpb
push
mov
lahf
add
and
hlt
insb
or
in
mov
cmpsb
jo
aam
loopne
out
lock
fbstp
or
in
add
lds
pop
std
mov
sub
repz
and
cmpsb
jnp
cs
jno
xchg
pushl
lea
push
pop
sub
jmp
call
push
add
add
and
sti
mov
and
pop
mov
xchg
mov
jmp
sarb
pop
sub
and
lds
dec
lods
jb
sbb
add
push
lcall
cmp
add
pop
mov
rcrl
ljmp
sub
pop
loopne
rolb
ja
push
in
or
sub
lcall
mov
hlt
jno
loopne
icebp
out
add
fcom
sub
cmp
mov
out
clc
mov
adc
lods
hlt
add
xlat
xlat
iret
add
repnz
dec
mov
call
dec
lret
cmp
sub
mov
out
dec
jmp
pop
inc
pop
xor
add
or
jl
jp
sbb
js
ljmp
cli
ljmp
shlb
das
mov
std
repz
insb
rolb
adc
iret
sar
ljmp
outsb
jmp
adc
jb
push
lock
shlb
in
aam
cmpsb
lcall
ljmp
orl
jg
scas
mov
arpl
int
mov
sbb
fcomps
jns
std
push
fld
mov
es
enter
add
into
sbb
ss
faddl
insb
push
push
add
les
ja
loop
mov
mov
decb
mov
cld
stc
idiv
test
movsb
push
icebp
inc
repnz
pop
add
cmp
cwtl
cli
xchg
add
pusha
pop
out
add
mov
and
shrd
into
cmp
decl
dec
stos
mov
mov
inc
mov
mov
xorb
aaa
outsb
movsl
call
sub
aad
in
jns
aam
xor
mov
divb
jmp
inc
mov
cld
fists
inc
and
xchg
jecxz
sbb
mov
fcomps
mov
ja
jp
ljmp
pop
lea
jge
addl
mov
adc
dec
inc
test
jg
pushl
imul
sbb
jmp
shll
adc
push
jne
pop
dec
mov
into
movsb
sbb
arpl
ljmp
cmp
aaa
call
in
cli
jmp
xchg
lret
jo
sub
mov
shll
mov
mov
cli
out
subb
and
loopne
lea
movsl
mov
xchg
vaddpd
cmpsb
mov
and
pop
leave
adcb
in
inc
incl
pop
mov
fs
mov
push
insl
or
lock
jae
jbe
pop
push
sar
jmp
pop
push
in
into
push
out
cmp
mov
mulb
add
pop
dec
jg
ja
push
pop
fwait
das
int
inc
xlat
jae
ret
mov
movsl
out
pop
cs
dec
push
push
jmp
rcrl
js
fsubrl
stos
sbb
cmc
int
stos
sbb
xchg
pop
inc
jo
popa
mov
stos
mov
cld
in
jmp
pop
ret
mov
icebp
jp
ljmp
or
popf
mov
or
ljmp
xchg
lods
mov
or
test
mov
push
sub
jecxz
movsb
or
faddp
sub
lds
subl
and
movsl
inc
lock
pop
adc
add
inc
or
in
mov
xchg
daa
jmp
sarb
lret
mov
decl
mov
imul
pop
push
push
and
pop
into
sbb
inc
dec
and
xor
mov
jmp
mov
fimull
or
enter
mov
in
xor
cmp
jmp
or
mov
notl
out
mov
mov
cli
roll
popf
mov
and
mov
in
mov
cmc
movl
push
xor
fwait
push
fsts
adc
xchg
push
in
mov
lcall
sbb
cmp
jge
and
inc
push
aas
xchg
mov
cmpsl
test
jecxz
loop
stos
out
scas
jno
pop
stos
and
subl
add
jg
cmpsb
mov
cmp
sbb
inc
call
nop
mov
or
mov
xchg
leave
xchg
enter
xchg
dec
adcb
inc
and
inc
out
mov
mov
das
lret
push
ror
sbb
lods
xor
mov
arpl
std
fistpll
jmp
inc
cmp
insl
out
imul
fdiv
cld
xor
in
daa
into
cmp
jnp
pop
popa
cmpsb
jmp
out
iret
or
scas
leave
xchg
fadds
fdivr
jne
negb
outsl
or
jmp
inc
or
add
scas
ja
jge
loopne
dec
xor
sahf
jle
sub
inc
in
push
cmpsl
dec
fwait
push
lock
decl
mov
sarl
das
je
push
pop
std
xor
mov
sbb
jmp
cmp
inc
jmp
mov
fcmovne
fisubrl
xor
inc
mov
and
fstpl
fistpll
sbb
fdivrs
xor
mov
pop
and
clc
jg
loopne
sbb
cld
sbb
mov
mov
enter
add
incl
filds
dec
push
leave
sbb
insb
inc
test
add
fimull
fucomip
mov
ljmp
pop
jne
inc
mov
test
push
mov
xchg
outsl
cmp
mov
aad
in
adc
scas
ljmp
push
mov
imul
int
sbb
jmp
cmp
sub
mov
bswap
pop
ret
mov
dec
cmp
in
call
xor
mov
mov
xchg
orb
pop
shll
adc
pushl
es
es
in
and
sub
mov
sti
mov
push
je
mov
decl
xlat
jnp
lahf
filds
pop
fdivrl
fxch
sub
or
jge
nop
xor
js
add
fldl
pop
pop
jo
fwait
adc
dec
pop
pop
push
scas
and
andl
mov
mov
fisubl
mov
push
ljmp
xchg
cmp
test
xor
call
cltd
push
scas
push
les
cmp
xchg
push
lret
cwtl
push
xchg
add
jmp
std
pop
fcmovnb
mov
loopne
sbb
mov
adc
nop
ret
dec
push
sbb
fisubs
pop
mov
cmc
dec
int3
mov
inc
notb
or
adc
add
into
sub
lcall
push
mov
xchg
mov
xchg
repz
shlb
sti
lods
incl
mov
pop
dec
sbb
sub
rol
ror
push
icebp
insb
xor
les
pop
test
mov
out
mov
lahf
add
cmp
jmp
dec
add
adc
jnp
std
pushf
in
repnz
data16
pop
ret
push
lods
inc
pop
lock
xchg
adc
mov
inc
sub
lcall
test
aaa
push
mov
push
les
js
xor
and
push
adc
sub
call
inc
dec
jl
and
cld
call
mov
xchg
shl
push
mov
jp
inc
test
mov
lds
jmp
jge
jle
lret
test
or
shrb
adc
dec
cwtl
sub
call
xor
cld
push
ds
aad
dec
xchg
stos
jmp
or
repz
ds
mov
xchg
and
adc
adc
adc
and
jmp
mov
lcall
add
push
out
lds
push
xor
and
test
xor
fldcw
adc
fisttps
jbe
mov
lcall
push
test
lcall
popf
and
jbe
mov
push
cmp
js
ja
pop
test
lret
nop
iret
xchg
jg
in
jg
aaa
jmp
test
push
inc
jb
mov
cmpsl
mov
test
fists
mov
jmp
incl
jg
test
daa
aas
sbb
andl
shlb
aad
iret
xchg
push
pushf
mov
aam
icebp
and
ret
stos
and
test
sub
xchg
inc
adc
inc
in
into
addr16
mov
decl
fcoms
fs
xrelease
cs
stos
in
cmp
pop
jmp
mov
inc
mov
ss
fwait
pop
jl
movsl
sbb
fmull
ficoms
fmuls
decl
add
fidivrl
inc
jmp
fnstcw
jbe
ljmp
nop
adc
cmp
js
mov
insb
imul
mov
add
pop
movsl
std
pushl
lcall
cmp
adc
stc
loop
xchg
mov
and
test
sbb
mov
push
cltd
pop
ffree
sti
cltd
jo
mov
out
jae
cli
jmp
push
fs
in
shll
inc
jae
leave
cltd
pushl
pop
loopne
inc
inc
cmp
cmp
add
pop
call
push
sahf
jg
sbb
aas
call
jmp
sub
mov
xor
push
inc
jne
fdivrl
adc
faddl
mov
nop
mov
in
popa
loop
dec
js
rcrl
movsl
add
out
mov
incl
sbb
xchg
subl
jle
addr16
aas
cmp
aad
and
fwait
aaa
inc
cmp
incl
mov
adc
xchg
inc
mov
shrb
mov
mov
push
ljmp
les
pop
lahf
and
mov
xor
mov
bound
pop
scas
sub
mov
call
cld
andl
dec
inc
dec
outsl
outsb
add
cld
cltd
cmpsl
cmp
jmp
fwait
dec
inc
or
cmp
icebp
jecxz
cmp
add
incl
xchg
test
sbb
insl
cmp
jg
sub
dec
push
mov
add
xchg
adc
orb
pushl
faddl
ljmp
hlt
push
xorl
xchg
xor
stos
sti
pop
mov
cmp
jb
enter
push
jl
rorl
frstor
push
mov
int
push
daa
out
jge
sbb
js
add
mov
sbb
scas
pushl
inc
push
jb
jo
add
mov
das
jle
rcrb
imul
mov
pushl
test
cwtl
loope
mov
jmp
sub
cltd
test
or
dec
and
les
cli
jmp
decl
push
or
push
mov
push
push
push
mov
add
mov
lcall
and
fdivr
incl
cwtl
ret
arpl
mov
inc
js
cmc
sbb
add
xor
jmp
sbb
decl
bound
cmp
cmp
sub
and
mov
popw
mov
or
pushl
mov
test
test
mov
mov
jae
pop
inc
shlb
inc
ss
jg
jmp
rdmsr
mov
ds
xorl
mov
push
push
sbb
decl
xchg
daa
xchg
outsb
dec
into
mov
jbe
add
int3
enter
sbb
incl
or
and
sub
xor
adc
rcrl
dec
mov
push
jmp
jo
bound
and
fistl
es
dec
pop
loop
lret
out
je
cltd
cmp
scas
adc
aaa
xlat
xor
push
ljmp
pusha
mov
into
sub
call
dec
rorb
lods
in
xor
mov
sub
scas
push
pop
out
push
dec
push
mov
push
std
jns
ljmp
gs
cmp
mov
mov
cmp
mov
inc
mov
inc
push
cmp
adc
std
jmp
inc
in
cmpsb
push
push
lcall
dec
fistpl
push
das
cmp
lret
js
mov
mov
push
sub
add
lcall
outsb
mov
sub
pop
in
pop
push
jg
mov
movsl
xorl
stos
mov
dec
sub
inc
daa
arpl
push
shll
pushf
cmp
ss
mov
ret
ljmp
mov
xchg
lahf
adc
enter
push
inc
add
sub
pop
lds
ds
movsl
xchg
sbb
inc
dec
sub
ds
pop
jmp
or
mov
mov
pop
ror
push
adc
pop
imul
and
mov
pop
pop
in
pop
adc
push
push
lcall
xor
repz
push
jl
daa
xor
jecxz
mov
add
insl
lcall
mov
cwtl
hlt
jns
fcmovne
cmp
or
test
shll
jg
xor
int
test
sub
ljmp
sbb
jmp
fistpll
mov
cmp
jmp
pop
push
and
dec
jbe
lret
sub
decb
lods
scas
adc
out
jb
lcall
sti
popa
lret
push
lcall
adc
adc
or
xlat
ljmp
sbb
cs
std
jno
iret
cmp
sbb
sub
mov
test
jmp
in
jmp
repz
adc
scas
mov
jge
cs
cli
mov
mov
pop
push
mov
fadds
push
dec
cli
cmp
push
and
add
enter
inc
call
cmp
inc
idivl
mov
push
cld
fmuls
adc
pop
cli
sbb
out
addr16
std
push
repz
cli
fcompl
jo
add
lahf
hlt
mov
call
xchg
xor
xor
sar
push
xacquire
cmpsl
dec
dec
insb
insl
add
cmp
lcall
add
mov
and
mov
mov
pop
shrl
lea
iret
pushl
inc
loop
test
mov
push
test
sbb
gs
cmpl
incl
leave
pop
and
pushf
into
mov
clc
imul
pop
adc
mov
dec
ljmp
inc
inc
inc
mov
or
jl
cwtl
fnstcw
jp
push
daa
cld
jnp
pop
mov
sti
js
aam
hlt
in
pop
pop
mov
call
stc
xchg
mov
jmp
mov
xor
loope
xchg
jmp
inc
jno
adc
insb
jnp
call
adc
pop
xor
inc
ja
frstor
pop
inc
pop
inc
lret
push
mov
aaa
cld
call
jnp
scas
mov
icebp
xchg
inc
stos
arpl
inc
jecxz
popf
xchg
mov
arpl
outsl
test
add
jle
xchg
mov
push
sbb
inc
push
cli
or
push
dec
lds
lcall
mov
and
jmp
mov
jp
ret
mov
hlt
aam
jge
mov
pushl
icebp
insl
sub
mov
sub
or
lock
stos
add
cld
xlat
fcompl
mov
addps
inc
jmp
stos
ss
rorb
shr
jo
pop
push
xor
xchg
int3
repnz
lcall
addr16
inc
xchg
sbb
mov
mov
cwtl
stos
adc
rolb
jmp
incl
shll
jl
jns
nop
sbb
cmpsb
cmp
into
lahf
mov
push
sarl
call
imul
push
xchg
into
mov
sar
jmp
pop
mov
icebp
cmc
out
mov
sub
ror
pusha
inc
push
aas
xor
call
popf
push
sub
jb
sbb
sbb
or
cld
fs
out
push
fs
jae
loop
std
inc
shlb
sarl
mov
or
pop
loopne
pushl
call
dec
pop
pop
and
xchg
sub
pushf
stos
fs
sbb
cltd
int3
mov
lret
and
inc
add
ljmp
dec
ficomps
lods
add
int3
faddl
jbe
pop
hlt
call
shl
jmp
sbb
mov
push
cmp
mov
gs
xor
pop
xor
jo
cmp
mov
cmp
mov
push
xchg
jg
jge
pop
push
xchg
xchg
ss
daa
lds
mov
and
mov
cli
in
inc
pushl
cld
push
push
cmpb
test
popf
inc
outsb
xor
fdivr
scas
push
and
lods
xchg
xor
pop
clc
inc
rol
jl
mov
sub
outsb
loope
add
push
mov
mov
jl
nop
jge
sbb
mov
arpl
fstpl
das
jmp
inc
cmp
iret
es
pop
xchg
subl
jns
sub
cwtl
adc
call
filds
hlt
jle
fildl
test
enter
test
push
push
inc
repnz
shlb
movb
rcl
pop
xchg
push
sbbl
pushl
pop
ret
add
pushl
into
sub
aaa
push
aaa
aas
aad
and
and
hlt
ja
mov
lcall
pop
orb
ret
jbe
cli
loop
and
dec
clc
call
inc
and
sahf
aas
sub
loopne
scas
stos
and
push
pushl
cltd
bound
adc
ret
adc
js
das
cmp
lcall
jb
js
popa
add
xchg
stos
sbb
repnz
xchg
pop
push
loopne
mov
mov
mov
loopne
pop
xor
inc
das
sti
jnp
fcompl
out
xchg
dec
scas
scas
clc
fidivl
out
mov
cmpsb
ret
push
mov
inc
mov
xchg
inc
sub
decl
scas
push
adc
ret
xor
mov
jp
imul
shl
mov
cmpsb
fisttpll
xor
fcompp
mov
push
fistpll
iret
sub
jge
addl
sbb
and
lcall
cld
add
clc
cmp
jae
xor
sbb
call
ljmp
int
sbb
mov
cltd
inc
adc
cmc
and
repz
ljmp
push
std
lahf
stos
inc
stos
loopne
dec
jb
mov
in
sbb
jge
jb
add
pop
lea
enter
lcall
mov
inc
int
aam
lret
cltd
sti
cmp
and
inc
movsl
xchg
pop
mov
or
jmp
sti
sub
mov
lcall
push
repz
or
inc
jl
or
push
adc
in
ret
ret
mov
seta
outsl
imul
daa
shrl
gs
jmp
ds
sub
bound
adc
lret
sbb
out
and
adc
inc
loopne
lcall
sbb
pushl
shrl
cmp
imul
dec
bound
add
adc
xor
cwtl
ds
pop
shll
cmp
mov
cmc
sti
or
lahf
outsl
adc
cmpl
push
sar
and
xchg
imul
movsb
aas
daa
in
jb
decl
jle
nop
int3
iret
into
dec
insb
arpl
scas
mov
mov
push
push
xchg
and
decl
push
jmp
insb
mov
ds
cltd
cmpsb
xchg
xor
push
mov
incl
pop
lahf
cmp
sub
xor
cwtl
xchg
cld
cld
mov
inc
cld
shll
pop
dec
jae
mov
ljmp
sbb
je
adc
jno
rcl
test
rcll
or
or
int
or
mov
jle
cmp
jnp
inc
jns
push
jp
and
inc
jmp
jg
dec
mov
pop
xor
push
sub
mov
jbe
ret
pop
dec
ds
fcomip
in
adc
cmc
or
add
push
push
pop
sbb
inc
aaa
mov
xor
xchg
xor
nop
mov
leave
ror
pop
push
pop
mov
cmc
sub
call
filds
adc
inc
cmc
lret
mov
cmc
adc
mov
in
or
popf
cmp
roll
sub
in
xor
das
mov
jl
jl
incl
or
movsb
cmp
adc
cmp
gs
push
fsubr
jg
out
inc
xor
pushf
andb
iret
cmpsb
mov
les
jle
sub
or
push
jmp
and
iret
cld
push
imul
mov
hlt
push
stc
cmpsl
inc
bound
addr16
loopne
xor
lock
xor
xchg
inc
stos
pushl
sbb
cmc
fisttps
xor
mov
jle
loope
xor
pop
cwtl
out
xchg
fcomip
loop
push
cli
ds
and
es
push
negb
mov
push
mov
lcall
xchg
push
pop
call
clc
mov
cwtl
inc
xchg
xchg
fwait
inc
push
into
in
ret
xchg
xchg
fidivrs
cs
incl
fsubs
cli
std
notb
cmp
inc
out
fwait
cmp
xor
xor
shrb
mov
lcall
ret
push
xchg
lcall
mov
sub
push
mov
jnp
jmp
add
mov
pushl
jmp
lcall
add
pop
lcall
adc
ret
mov
inc
mov
dec
cwtl
int3
xchg
adc
sar
jmp
mov
inc
enter
imul
ss
xchg
pushl
lds
push
cmp
push
fldcw
mov
pusha
outsl
enter
fstpl
push
add
sar
stos
and
jne
push
js
aam
sub
jo
mov
or
pop
outsl
mov
adc
adc
imul
decl
xor
jle
mov
push
rolb
jbe
lea
call
or
and
cltd
lret
inc
xchg
pop
mov
inc
cmpsb
int
cmovg
jbe
lods
xchg
inc
fwait
clc
ljmp
dec
call
cmc
enter
sub
repz
repz
ljmp
cs
add
add
jb
enter
cli
test
je
add
into
sbb
or
jno
push
into
jae
mov
dec
sub
pop
popa
cmp
mov
sub
dec
and
mov
fistpll
pushl
out
jmp
scas
jne
lcall
mov
add
adc
and
loopne
pop
data16
addr16
mov
cmpsl
iret
fidivs
xchg
push
inc
out
mov
incl
push
shlb
mov
test
insl
push
xchg
pop
flds
pop
jg
pushl
sti
jmp
and
fisubl
add
pop
cmpsb
jbe
add
jae
hlt
testb
lcall
sbb
shlb
mov
cmp
lock
js
shl
stc
lcall
push
dec
pop
cwtl
iret
sub
repz
jae
push
out
test
push
fimull
mov
add
cmp
mov
xlat
fbstp
popf
movsb
out
adc
into
or
pop
outsb
push
mov
pushf
push
mov
ja
incl
push
push
js
pop
xor
leave
ret
jo
mov
and
jmp
inc
push
pop
shl
mov
sbb
sub
add
mov
push
out
adc
xor
push
mov
cmp
lcall
adc
sarl
inc
xor
jecxz
xchg
jnp
mov
xlat
dec
lcall
out
adc
xor
mov
out
or
sub
cwtl
call
xchg
cmp
data16
fcomp
dec
jb
ret
out
lret
out
subb
scas
ljmp
mov
pushfw
sbb
out
cmp
adc
sub
inc
mov
hlt
sar
inc
mov
sbbl
or
mov
jp
fdivrp
pushl
or
das
add
or
sbb
mov
push
lock
decl
mov
in
mov
enter
mov
push
popf
in
int
into
insl
lret
bound
inc
jg
inc
stc
out
scas
cmp
and
ret
cmpsl
aas
inc
sbb
push
mov
into
adc
lcall
push
subb
mov
in
enter
mov
hlt
sub
push
cltd
into
pop
insl
incl
pop
xchg
loopne
jnp
cmp
cli
mov
nop
in
cmp
mov
rolb
pushf
xor
decl
cmp
jns
mov
jb
lcall
pop
orb
add
stos
xor
pushl
mov
jg
or
add
push
bound
fs
cwtl
js
sbb
sarl
mov
subb
test
cld
fadd
pop
inc
cmpsb
movsl
xchg
loopne
mov
mov
mov
jg
xchg
or
xor
cmpsl
xor
mov
clc
out
push
mov
clc
push
mov
xchg
mov
xorb
lock
dec
dec
outsl
imul
popa
jne
xchg
je
jmp
call
test
jo
lds
mov
cmp
mov
inc
loope
and
inc
adc
dec
loope
nop
pop
or
or
rcrb
mov
decl
in
xor
xor
lcall
or
mov
inc
call
lret
shrb
adc
and
insb
cmp
mov
sbb
dec
xchg
jg
cmp
out
cmc
pop
sbb
inc
test
jge
sub
out
adc
shll
scas
cli
cmp
rcrb
cmp
or
enter
and
mov
fstpt
xor
dec
std
cmp
inc
fstpl
xor
xchg
dec
addr16
fcomip
fildl
ljmp
mov
xchg
pop
outsl
xchg
in
push
jb
movsb
sbb
ljmp
lock
pop
jbe
cmp
testb
out
xchg
jecxz
shlb
pop
jno
sub
inc
mov
repnz
sbb
jmp
jp
fisttpl
incl
jo
cmp
or
mov
cmc
push
lcall
adc
outsb
xlat
push
jmp
out
pusha
xchg
mov
loope
lods
mov
test
sub
push
pushl
dec
in
cli
jmp
mov
add
add
cmc
mov
jo
jecxz
out
jp
or
les
xor
mov
aaa
push
sbb
jle
add
out
popa
ds
xor
or
incb
scas
loop
inc
xor
xchg
push
add
enter
dec
jne
arpl
std
rclb
repnz
pop
in
xchg
pushl
dec
adc
mov
push
pop
and
ljmp
dec
mov
lret
push
pop
in
adc
xchg
enter
decb
add
std
pop
cmc
mov
sub
int
or
mov
ljmp
pop
push
aaa
dec
adc
pop
pop
push
jecxz
gs
pop
mov
fbstp
dec
fidivrs
hlt
inc
shlb
fisubrl
cli
incl
pop
dec
andb
out
dec
jl
push
subl
fwait
cmp
lea
mov
test
mov
clc
mov
mov
pusha
arpl
sbb
sbbl
shll
jo
mov
arpl
stc
pusha
es
jecxz
movsl
cmp
inc
popf
icebp
mov
stc
aad
jge
cmpsb
push
mov
mov
mov
lods
sti
xchg
scas
cmp
dec
mov
xchg
imul
add
mov
cmp
jbe
or
adc
into
add
lods
sub
fidivl
jl
decl
in
shlb
adc
and
std
in
lods
mov
push
sub
decl
inc
pop
mov
js
and
popf
jge
and
lock
lret
mov
xchg
mov
pop
cmc
incl
jmp
push
dec
negl
subl
push
int
cmp
fimuls
ljmp
lcall
adcl
adc
aas
test
inc
ds
movsl
push
and
scas
cli
decl
mov
scas
mov
clc
jecxz
out
out
imulb
dec
and
push
add
ficomps
dec
mov
mov
movsb
mov
lock
jmp
ficoml
daa
negb
inc
fimuls
data16
outsl
clc
jmp
out
push
adcb
inc
shlb
cmp
cltd
shrl
dec
jp
out
cli
call
xor
xor
mov
arpl
pop
inc
insb
mov
fdivl
cmp
dec
mov
adc
nop
mov
incl
add
xchg
xor
in
dec
sbb
fisubrs
xchg
cmp
data16
lcall
fidivrs
jo
xchg
pop
or
shl
ja
push
add
pop
clc
jbe
clc
ljmp
into
loope
xchg
xor
xorb
aas
js
xchg
scas
xchg
dec
mov
aam
adc
cmp
or
cmp
pop
cmpsl
cmp
push
aad
mov
mov
incl
insb
cli
sbb
and
mov
mov
push
pop
push
cwtl
pop
fcom
idiv
or
test
add
stos
xor
jge
aas
aam
out
sti
les
fisubrs
dec
dec
call
sub
jmp
push
adc
mov
add
std
mov
stc
movsb
cli
in
dec
movsb
mov
mov
and
sub
loop
inc
inc
aas
adc
push
xchg
test
cmpsl
popf
pusha
dec
popa
shrl
add
pop
std
mov
cs
jb
dec
ljmp
in
and
mov
dec
or
fdivr
inc
iret
xchg
push
lods
loope
and
xchg
stos
mov
sub
into
xor
scas
mov
popf
xchg
push
cwtl
clc
jmp
inc
out
lret
xor
imul
jl
rorl
ljmp
repnz
jno
mov
and
aam
cmp
pop
jge
std
jg
outsl
dec
xor
mov
xchg
mov
int
std
outsb
aad
mov
les
xchg
jmp
pop
mov
movb
fcmove
cmp
shl
jo
mov
xor
add
pushl
adc
sub
test
adc
idivl
mov
push
adc
ss
mov
shlb
lea
lret
lcall
or
cwtl
push
mov
jmp
clc
adc
jb
dec
mov
divb
mov
or
cmp
jnp
in
jp
jmp
cmp
and
mov
loope
xor
jmp
sahf
out
xchg
pop
enter
mov
push
sbb
test
cmp
mov
sbb
test
pop
rorb
xchg
jbe
call
cs
dec
xor
pop
mov
xchg
push
frstor
xor
loop
mov
decl
push
cmpsl
mov
mov
and
lds
pop
jecxz
shlb
aas
xchg
fiaddl
call
inc
inc
testl
add
repnz
in
in
stos
bound
pop
rep
sbb
push
add
jl
xchg
xchg
dec
fs
popf
cwtl
pop
dec
and
push
push
fcomip
cmc
pushf
sub
mov
mov
sub
push
jae
dec
cld
sti
shl
jle
push
dec
jmp
pushl
std
cmp
sbb
push
dec
mov
sbb
test
data16
add
add
mov
mov
add
pop
in
dec
and
popa
xchg
jp
cli
sub
adc
das
cli
incl
imul
rol
mov
mov
adc
fistpl
push
into
int3
sbb
movb
adc
fstpl
test
xlat
int3
lret
sbb
sub
inc
popf
xor
lret
mov
or
fsubs
jmp
push
les
ds
dec
jne
push
scas
sub
aas
fdivr
jnp
in
xlat
mov
fidivrs
enter
orl
and
add
into
aas
add
jp
testb
jmp
es
call
add
xlat
aas
mov
fisubrl
negb
push
xor
inc
iret
fadds
dec
mov
mov
push
ror
sbb
push
sub
mov
lret
cmp
add
std
lcall
aaa
add
cld
loop
mov
adc
fs
ret
inc
jns
sbb
sar
mov
cmp
push
iret
popa
add
mov
call
dec
xchg
icebp
ljmp
jle
in
inc
loopne
adc
es
or
pop
add
leave
add
pop
sbb
inc
call
jns
sbb
inc
add
mov
fcomps
fldt
lcall
add
aas
sbb
dec
cmpsl
rolb
loop
inc
mov
iret
hlt
in
pushl
sbb
jl
jbe
cmpl
es
lds
rorb
push
xchg
pop
repz
jle
repz
in
jmp
jecxz
imul
aaa
js
mov
xor
ljmp
mov
jmp
inc
xchg
repz
stos
mov
xor
mov
jl
pop
jbe
mov
jnp
rcrb
pop
call
mov
pop
jns
rcrb
test
roll
pop
movsb
and
ret
inc
inc
fadds
out
sub
push
rorb
les
rep
pop
xchg
mov
stc
ja
sbb
cmp
enter
pushl
ret
lods
lea
in
pop
push
rclb
mulb
xchg
jmp
jns
push
mov
add
ljmp
lret
test
cmovle
int3
sbb
adc
xchg
pop
xchg
inc
lea
add
mov
mov
inc
call
push
mov
push
ds
adc
pushl
stos
sbb
and
mov
xchg
pop
cmp
fdivl
jae
je
idivl
mov
fs
fnstsw
and
push
dec
test
test
or
mov
fidivrs
push
or
movsl
scas
imull
pop
cltd
gs
fists
fsub
sub
mov
push
xor
xor
shrl
loopne
pop
adc
xor
shll
cmp
adc
and
mov
loopne
mov
fdivrs
data16
lods
lock
and
into
sbb
xchg
hlt
ljmp
sti
fcomi
add
jmp
and
fimull
icebp
arpl
cmp
inc
test
bound
ss
lods
xor
jmp
ljmp
xor
add
outsl
sub
out
xlat
xor
push
and
test
mov
addb
inc
xlat
jnp
push
mov
xlat
and
mov
jl
gs
inc
push
addr16
jmp
aad
or
jae
mov
lds
pop
inc
outsl
mov
mov
scas
lock
test
outsb
out
in
sbb
movsl
jp
outsb
push
cmp
ficompl
inc
test
mov
mov
inc
add
sahf
jecxz
sub
aad
adc
idivb
mov
add
sbb
into
outsl
mov
pop
push
cmp
incl
in
mov
push
xor
push
cld
adc
aaa
mov
xchg
mov
stos
push
call
loop
inc
cli
sahf
xchg
into
pusha
jl
dec
xchg
jb
or
in
pop
mov
add
or
sbb
pop
mov
push
test
push
movsb
adc
dec
mov
bound
jmp
xorb
rcrb
popf
pop
incl
mov
mov
xlat
cltd
subb
xchg
xchg
jecxz
dec
add
cli
mov
sti
leave
mov
pop
sub
mov
mov
dec
sti
inc
jp
adc
xchg
sbb
mov
arpl
inc
cmpsl
mov
test
fidivl
sub
jl
lcall
sub
addl
inc
jo
std
incl
movsb
rcll
arpl
mov
aaa
les
hlt
incl
sti
mov
xchg
push
movsb
pop
leave
push
dec
lods
sub
push
insl
mov
test
push
call
jg
jl
lds
cmp
leave
xorl
int
out
mov
stos
call
pop
roll
shlb
mov
sub
ljmp
stc
sub
cmp
mov
rcll
iret
add
mov
test
jge
lcall
lret
scas
scas
sub
adcb
jge
mov
jle
pop
fwait
lcall
clc
jmp
pop
jns
lret
sbb
mov
test
cmpsl
jmp
jae
or
and
mov
add
ja
or
push
ds
add
xchg
push
pushl
xor
lcall
insb
aaa
lds
inc
inc
scas
mov
out
call
data16
and
xchg
ss
xchg
shlb
cmp
sbb
mov
lea
stos
imul
push
jns
mov
imul
mov
mov
jle
mov
arpl
pop
mov
call
test
add
out
and
dec
insl
mov
inc
int
pop
gs
cli
fwait
aas
test
inc
decl
jbe
in
fwait
cmc
mov
mov
fdivrp
add
sbb
rep
mov
rcll
cmp
test
cmp
inc
mov
jb
xchg
inc
cli
cmp
mov
lcall
dec
aam
cs
rcrl
out
imul
popa
jne
cmp
std
cmpsb
add
sub
out
xchg
aam
shl
xchg
in
ret
shrb
mov
ljmp
push
stc
std
imul
test
mov
pusha
lds
jns
fimuls
shl
and
lock
and
lock
mov
pop
push
shl
pushl
add
sub
mov
ret
mov
lea
cmpsl
push
mov
cltd
fwait
pushf
pop
std
jg
gs
jo
fldt
add
out
inc
push
push
daa
mov
stos
or
pushl
sbb
fcoms
lods
or
test
dec
push
pop
sar
loopne
mov
test
stos
jmp
stc
mov
orl
ret
jno
mulb
inc
jbe
jb
jae
adc
outsl
cli
sbb
imul
jg
repz
inc
mov
js
sbb
ja
sbb
rep
icebp
dec
mov
ret
or
xchg
pop
call
xchg
nop
cmp
or
jbe
push
xchg
cmp
aam
push
call
mov
sub
lods
push
subb
mov
dec
into
push
xchg
decl
jle
cmpsl
ficoms
aad
call
repz
or
xlat
pop
cmp
mov
mov
xor
push
xor
mov
rol
neg
cmpsb
pop
enter
fdivl
lahf
xchg
cli
decl
jecxz
mov
add
sub
fstpl
sub
jge
add
imul
fcomip
idivl
aad
add
push
cltd
pop
jno
cs
jmp
lds
pop
mov
jmp
and
mov
leave
idivl
dec
sti
jge
pushf
xchg
pop
ss
xchg
pop
or
and
pop
rclb
jmp
push
nop
push
icebp
fwait
add
and
and
outsb
inc
adc
jbe
and
jns
call
icebp
push
xor
test
sarb
jl
mov
int3
dec
in
mov
sar
lret
rorl
xor
dec
mov
nop
mov
cs
lret
pop
fs
or
outsl
or
xor
pop
cmp
frstor
aad
jnp
xchg
adc
push
push
or
test
add
jp
dec
fists
sub
add
std
pop
cmc
dec
addr16
pop
loop
jg
xor
jle
mov
subl
push
pop
and
movsl
pushl
jo
shl
arpl
sub
in
jg
mov
xor
movsl
cmp
mov
cli
adc
mov
adc
ds
idivl
jo
mov
jmp
cmp
cmpsl
aaa
ret
sbb
mov
fisttps
cld
push
aas
pop
mov
mov
insl
cmp
jp
test
dec
inc
mov
jmp
imul
jmp
jl
adcb
xchg
ss
ret
lds
test
call
sub
push
pop
lcall
cltd
dec
inc
xchg
pop
mov
pcmpeqd
pop
cld
jmp
sbb
adc
cmp
cmp
inc
jns
loop
or
aad
pop
mov
dec
jmp
or
mov
scas
mov
or
xchg
xchg
add
std
pusha
incl
lock
mov
rclb
scas
cmp
sbb
out
mov
pop
or
test
cs
xor
mov
cwtl
lret
sub
mov
jle
jmp
and
mov
or
jo
call
jp
jecxz
out
adc
lcall
mov
inc
movsb
adc
fs
adcl
rcll
lcall
stos
fstpl
ja
scas
ss
cld
lret
jg
mov
add
pushl
or
insb
imul
test
mov
pop
faddl
nop
cli
adc
dec
mov
and
stos
enter
outsb
mov
incb
pop
in
jmp
add
sub
lcall
mov
xchg
and
jg
inc
mov
cmp
mov
jmp
dec
mov
xchg
stos
out
dec
pop
lock
fcomp
cs
daa
mov
and
decl
pop
xchg
pop
rcrl
fsubl
ret
imul
das
clc
ljmp
jae
or
add
outsb
ds
gs
jbe
sahf
repz
cli
mov
ret
roll
push
dec
je
test
pop
xchg
frstor
or
jmp
jae
in
mov
add
je
fsubrs
lds
pop
leave
ret
fs
cmp
pop
mov
pushl
cmc
xchg
inc
lret
call
mov
inc
mov
fildll
or
inc
ss
xchg
inc
fists
ljmp
lods
pop
mov
jmp
in
iret
test
mov
or
pop
inc
cmpsb
in
mov
cmp
mov
in
add
addr16
mov
sti
fwait
xor
inc
lds
inc
mov
push
popa
cmpsb
popf
mov
push
std
or
call
cmp
fwait
mov
lea
iret
pop
aas
mov
pushf
or
sub
or
fisttps
dec
add
int
test
fdivrs
push
mov
pop
cmp
stos
sub
lea
push
jmp
jecxz
xor
sbbb
imul
fmul
jnp
cld
imul
push
dec
pop
adcb
push
call
and
mov
pop
dec
test
outsb
lret
lds
aam
ficomps
mov
push
jl
pop
ss
bound
ret
mov
jne
movsl
pop
or
pop
mov
xlat
int
gs
in
out
jns
pop
cmp
call
inc
int
cmp
outsl
cmp
xchg
push
in
into
scas
in
push
aad
test
xchg
mov
inc
ss
decl
jns
mov
movsl
lret
loope
mov
mov
loop
insl
std
jne
inc
out
cmp
in
jl
mov
adcb
mov
loopne
mov
jb
movsl
inc
cmpsb
ret
push
mov
lcall
fcmovnu
pop
subb
push
arpl
inc
lea
adc
out
sbb
pop
xchg
mov
or
xor
jmp
outsl
imul
movsl
pop
add
push
lret
inc
mov
jmp
imul
scas
rolw
in
add
enter
and
push
inc
decl
jmp
jg
dec
xchg
and
push
cs
hlt
mov
push
pop
mov
mov
jmp
adc
in
jno
mov
mov
loope
cmp
fnsave
das
add
cld
mov
mov
cli
and
jmp
mov
aam
pop
push
ljmp
push
lahf
popa
pop
fstpl
mov
mov
or
push
test
sbb
call
out
loopne
mov
pop
fisubs
sub
xchg
add
cmpsl
mov
or
cmp
insl
out
mov
push
push
int
out
and
ficoms
jg
or
pop
aas
aaa
fnstsw
lret
dec
cmpsl
in
push
xor
inc
xchg
inc
pop
movsl
call
mov
adc
movsb
mov
outsl
inc
adc
inc
push
and
insl
mov
xor
dec
adc
stos
nop
and
pusha
sub
jo
test
fwait
mov
test
jo
sbb
jl
out
xor
clc
lret
faddl
pop
xor
mov
jbe
sti
sub
jge
pop
mov
inc
popa
aam
xchg
xchg
repz
mov
dec
cmpsb
or
mov
add
stos
xlat
dec
test
cmp
mov
adc
jle
mov
popf
mov
fstl
push
dec
ja
mov
inc
mov
and
pushf
sbb
aam
incl
and
cmp
lret
clc
sarl
str
fwait
push
inc
or
sti
das
call
int3
inc
and
gs
stos
sbb
pop
test
jp
mov
iret
xchg
jecxz
jg
cmpsb
push
aam
bound
in
mov
sub
sbb
xchg
sub
push
aas
test
mov
decl
lods
sbbb
ljmp
sub
sbb
sub
xchg
popf
divb
pop
hlt
mov
jmp
mov
dec
test
ficoms
xchg
test
xor
test
decl
cld
sbb
test
insb
pop
mov
imul
cmp
fstp
lock
jmp
add
cmpsb
push
in
push
ret
fwait
dec
pop
sub
push
std
ja
and
dec
inc
mov
fwait
shlb
jbe
out
out
adc
cmp
rolb
lahf
mov
or
xchg
cmp
and
push
pop
mov
shll
cmpsl
mov
sub
imul
jg
jge
les
outsb
shl
inc
adc
popa
mov
decl
cmp
add
push
xor
roll
push
adc
movsb
ret
jb
lock
lcall
jne
mov
insb
ja
rorb
lea
dec
ret
cltd
aad
mov
incl
xchg
jle
or
mov
or
sub
decl
rcrb
insb
xorl
sub
scas
loop
dec
cmovnp
mov
dec
sub
push
push
dec
or
sub
push
test
xor
sbb
push
ss
pushl
add
lret
cltd
lods
xchg
shl
adcb
pop
out
call
scas
mov
inc
in
jg
hlt
sbb
push
pop
cs
or
sbb
xchg
sbb
xor
icebp
sub
incl
add
dec
dec
jmp
iret
lea
int
stos
push
adc
inc
sbb
js
aam
es
or
cltd
pusha
push
mov
cmp
je
cmp
pushl
outsl
add
pop
out
decl
xor
mov
or
sahf
fstps
xchg
jp
es
sub
xor
push
data16
daa
push
add
mov
push
sub
pusha
jae
fadd
lcall
mov
dec
bnd
push
enter
rclb
mov
jp
ljmp
cli
test
rcll
push
jno
jae
int
jae
je
mov
insl
mov
jg
addl
ficoml
add
mov
cmp
fcomip
mov
mov
sbb
push
xor
mov
in
inc
fcmovb
jae
pop
aad
add
cli
fisubrl
push
pusha
mov
lret
mov
inc
xchg
lahf
xor
test
and
pop
push
fisubl
dec
dec
into
mov
ja
shll
aas
push
clc
jns
and
dec
xchg
call
cmpb
mov
fidivl
out
or
in
mov
adc
mov
inc
jmp
lahf
andps
repnz
push
or
fsubrs
adc
pop
fwait
shl
fwait
loopne
test
add
idivb
movsb
repnz
or
inc
pushl
xchg
fimull
addr16
adc
pop
insl
pusha
cmp
mov
adc
or
lock
fists
sub
bound
js
ljmp
cwtl
ss
push
cs
xchg
mov
das
fldt
movsb
mov
fldt
or
or
or
aas
fs
jmp
sub
jecxz
and
inc
jge
add
sbb
push
pushl
pop
cmp
xchg
lcall
sbb
jae
bnd
mov
inc
fmuls
aam
int
mov
xor
in
pushl
in
and
stos
call
mov
lret
dec
rcr
fsubl
bound
mov
frstor
popa
mov
es
and
mov
ljmp
sbb
out
pop
int
ljmp
mov
dec
add
aad
add
in
test
in
or
mov
js
sub
inc
sub
jg
fldenv
mov
sub
xorl
cmp
lret
decl
xchg
mov
sti
inc
scas
add
inc
lea
fsub
aam
les
jne
push
ljmp
jg
icebp
jo
xor
pop
addl
push
sbbl
mov
inc
cld
ljmp
fs
fcmovne
sub
int3
mov
xchg
dec
fcoml
cld
mov
mov
rcrb
push
aaa
cltd
aam
cli
decl
mov
scas
xchg
jp
into
fwait
lods
mov
xor
cmc
jmp
std
int
or
lret
mov
adc
sbb
cmp
in
jg
ljmp
js
imul
ljmp
int3
leave
lods
cs
mov
imul
int3
push
js
sti
mov
lret
lret
xor
sub
repnz
ja
sub
xchg
icebp
es
jle
scas
xchg
jge
mov
cs
arpl
addl
loop
out
dec
fdivrl
xchg
jg
stos
jle
rcrl
dec
jl
mov
jo
data16
adc
clc
movsb
cld
fs
mov
call
cld
cmp
stos
push
xchg
mov
into
insl
push
sbbl
lcall
incl
xor
xor
and
or
rorl
aaa
xor
js
sti
outsl
call
cli
repnz
pop
outsb
adc
and
inc
cli
mov
jmp
pushf
fs
int
xchg
rorl
fs
pop
rorb
fs
fwait
shrl
dec
sub
pop
mov
dec
pop
cmp
push
push
pushf
in
mov
nop
icebp
pop
jecxz
mov
lds
push
dec
std
scas
cmp
mov
add
ficoms
mov
leave
cmc
mov
push
incl
pushf
xchg
or
fwait
mov
add
mov
rol
mov
jge
mov
js
sub
je
call
or
inc
xor
add
xchg
loopnew
lcall
pushl
mov
cmpsb
mov
lret
and
inc
sub
mov
jns
mov
xlat
add
sub
xchg
pop
pusha
fwait
or
mov
xor
pop
icebp
int
pop
dec
cmp
test
test
adc
imul
or
out
cmp
xor
dec
inc
cld
xlat
repnz
cmp
incl
fstpl
ss
stc
xchg
sub
arpl
jns
mov
sub
out
cmp
cmc
ljmp
fcomps
dec
data16
pop
and
push
jmp
add
in
ss
push
cltd
add
jle
data16
outsl
clc
incl
mov
cmp
jae
sarl
daa
xchg
fbld
mov
in
cld
push
cmpsl
call
push
pop
ja
sti
lahf
pop
ret
dec
test
adc
xor
adc
insl
jns
call
xchg
and
loope
mov
add
ja
rcrb
loopne
or
inc
testl
push
icebp
mov
popa
or
fcoml
ds
sbb
idiv
lock
subb
scas
jecxz
xchg
push
ljmp
pop
mov
aaa
shlb
inc
mov
sub
pop
ds
lods
jo
pop
mov
pop
shll
lret
ret
cmp
test
into
inc
jo
mov
decl
loopne
lods
sub
negb
loopne
or
push
clc
dec
dec
aas
add
dec
in
stos
add
cmp
mov
outsl
hlt
and
mov
ret
ja
sbb
int3
lcall
cs
stc
sbb
xchg
iret
mov
or
movsl
pop
jmp
ljmp
clc
sti
sti
sbb
xchg
ds
lock
and
test
fildl
in
add
call
push
inc
inc
add
and
test
jb
mov
in
nop
xchg
push
out
decl
movsl
dec
das
imul
imul
enter
mov
ss
divb
xchg
xchg
jg
decl
lock
push
push
xorl
push
pop
push
adc
loop
sarb
decl
repz
inc
arpl
shll
stc
sbbl
jg
out
dec
rclb
movsb
push
xchg
fidivs
int3
dec
sbb
jecxz
aaa
dec
dec
mov
mov
add
fwait
repz
jp
xor
daa
push
daa
fidivs
pushl
dec
outsb
jge
pop
adc
jbe
cltd
mov
mov
sarb
push
inc
push
cli
pusha
push
cli
lds
cld
jecxz
xorb
jecxz
xchg
fsts
fimull
jae
xchg
add
jmp
imul
push
add
xor
jle
iret
lret
out
mov
fidivrl
clc
ljmp
roll
cmpb
lods
negl
push
pop
cmpsl
lret
lcall
mov
icebp
sbb
mov
ja
xchg
lods
cmp
imul
loopne
cmp
mul
pop
jbe
icebp
adc
popa
inc
inc
lods
mov
sub
sub
out
and
dec
je
xchg
xor
lcall
add
mulb
popa
mov
xchg
cltd
dec
adc
idivb
filds
loope
xchg
into
xor
jnp
in
lcall
adc
je
and
cmp
pop
push
test
jg
arpl
or
push
scas
lcall
rclb
mov
add
pushl
sbb
add
dec
icebp
add
and
loopne
cmp
jl
andb
outsb
inc
mov
aad
xlat
lret
dec
clc
pop
mov
adc
inc
lret
dec
out
jmp
test
out
pop
inc
cmpsb
sbb
ret
lret
dec
int
sub
decl
xchg
push
iret
mov
jl
adc
out
je
sbb
mov
dec
push
repnz
mov
xor
subb
fsubl
fs
enter
les
call
xor
cs
jl
jmp
ja
scas
or
fnstsw
ljmp
xor
jle
sbb
mov
int
lods
jg
xchg
mov
arpl
push
inc
gs
lcall
mov
pop
sbb
ret
jp
xchg
pop
and
ljmp
pushl
mov
out
scas
mov
xor
fistpll
add
mov
fmull
jecxz
out
lret
jle
inc
jb
int3
mov
cmc
add
decl
mov
push
push
je
sub
fcmovnb
adc
fstps
mov
nop
fiaddl
insl
out
es
sbb
scas
incl
mov
cs
popf
jp
mov
int3
lock
movsl
aaa
pop
push
cld
cs
jl
fs
ljmp
add
mov
cmp
pusha
xchg
or
dec
jns
popa
adc
xor
popf
fcomip
or
sbb
fsubr
lret
stos
imul
pop
jae
rcrl
dec
sbb
inc
mov
mov
xlat
ret
push
cmpsl
mov
adc
push
pop
xor
and
stos
shrb
decb
mov
sbb
push
sahf
cld
cmp
ljmp
ret
out
loopne
stos
jo
adc
jmp
cmpsb
lret
mov
lods
and
fdivr
mov
mov
aaa
jo
add
push
or
pop
lcall
scas
lea
adc
fldenv
loope
mov
imul
adc
jbe
lcall
inc
xchg
and
clc
jno
mov
idiv
aad
pop
shlb
xlat
js
dec
fcomip
daa
popa
sub
and
mov
in
movsl
sub
decl
xchg
addr16
sub
sub
sub
mov
aam
ljmp
aam
adc
dec
inc
test
sub
and
cmp
or
ljmp
jnp
movsb
lret
inc
stc
inc
push
jecxz
addr16
and
imul
pop
mov
pop
push
roll
push
cld
mov
mov
popf
or
push
xor
mov
ss
in
push
filds
xchg
fst
lods
cmpsl
inc
pushl
test
jne,pn
adc
mov
lahf
insl
insl
les
inc
adc
call
mov
and
adcl
or
cmp
test
decl
int
jmp
jle
and
fiadds
iret
int3
ss
mov
fildl
imul
loopne
js
mov
stos
mov
lcall
pop
xchg
mov
fld
push
mov
xor
xchg
cmp
lds
loop
fadds
loopne
pop
das
jecxz
inc
loop
inc
mov
test
cmp
mov
call
fisubrs
mov
and
icebp
mov
cmc
mov
pushl
mov
ficoms
mov
in
ret
inc
push
xchg
mov
cwtl
and
lods
clc
pushl
mov
jns
fnstcw
lret
pop
cli
add
cmpsb
mov
test
pop
mov
jnp
or
aam
or
cmp
pusha
or
clc
fwait
negb
out
or
push
movsb
lock
ret
dec
cwtl
mov
push
push
repz
ljmp
cmp
ret
sbb
scas
test
cmc
push
xchg
divps
mov
adc
push
mov
into
mov
fadds
pop
jp
scas
rorl
out
jae
xor
lock
mov
cmp
or
mov
lock
mov
sub
cli
lcall
push
jno
sarl
push
pop
push
testl
incl
sahf
push
pop
in
or
andl
fisubs
push
cmc
mov
popf
fs
add
popf
and
decl
jns
cmc
add
xchg
lods
data16
cs
jg
mov
and
cmp
cltd
sbb
cmp
imul
in
lcall
push
sbb
lahf
mov
movsl
scas
pop
and
mov
sub
faddl
mov
mov
xor
inc
dec
cmp
jns
dec
adc
dec
xchg
pop
in
cli
shl
js
pop
ja
push
test
pop
fwait
dec
in
orl
push
push
clc
or
test
push
push
mov
pushl
jg
aas
dec
push
pop
fbstp
adc
or
pop
mov
pop
loop
popf
pop
pushl
dec
jecxz
packssdw
out
mov
mov
shll
jle
in
push
push
andb
and
jg
ljmp
ljmp
lock
adc
sbb
cltd
pop
push
xchg
icebp
inc
push
es
in
decl
ficompl
rclb
cmp
mov
add
jecxz
sti
jge
ror
push
mov
insb
out
xchg
dec
inc
cmp
aas
dec
arpl
cmp
outsl
xor
in
aam
jae
lcall
scas
outsb
jbe
xchg
jae
js
push
loope
leave
xor
add
push
gs
mov
jb
mov
push
sub
push
sbb
cmc
mov
and
mov
push
mov
icebp
inc
iret
cmp
ljmp
stc
jle
mov
cmp
pop
lret
shll
adc
add
jnp
or
std
sub
mov
mov
jp
inc
ljmp
xor
xchg
and
push
and
jge
insb
stc
addl
ljmp
jno
and
jp
sbb
pop
mov
or
dec
sbb
negb
jmp
pop
out
out
aam
mov
and
test
add
xchg
pop
popf
adc
adc
call
js
cmp
out
imul
mov
pushf
jmp
ja
push
mov
ret
decl
pusha
ja
mov
and
js
sahf
leave
mov
inc
or
icebp
cmc
sub
jmp
pop
enter
xchg
std
cmpb
mov
divl
add
dec
push
test
incl
aad
stc
insb
pop
cmpsb
mov
xor
and
je
out
adc
ret
int
lcall
repz
pop
push
leave
es
aam
rorl
out
push
push
jo
incl
xlat
dec
add
adc
test
adc
lcall
pushf
clc
es
sbbb
es
cmp
mov
mov
xchg
dec
pusha
mov
and
clc
negl
push
push
lods
mov
out
out
ljmp
mov
push
mov
sub
jno
mov
scas
ret
mull
sbb
lds
push
pushl
cld
mov
inc
mov
aas
loope
aam
repz
pushf
jae
mov
decl
lock
mov
call
pop
inc
sbb
dec
aas
leave
insb
push
sub
decl
xor
xchg
pop
mov
insl
cmpsl
lds
inc
push
xchg
mov
dec
in
lcall
popf
mov
sbb
stos
jl
xchg
pop
xor
push
mov
dec
xor
out
cli
jge
mov
out
mov
mov
pop
inc
test
sub
push
cmp
call
push
scas
adc
lods
loope
sti
sbb
aad
xchg
imul
xorb
mov
and
pop
inc
push
mov
mov
push
mov
or
push
decb
mov
icebp
pushl
dec
or
xor
jmp
push
and
fbstp
inc
jp
dec
int
mov
and
bound
ss
add
jmp
or
xchg
out
inc
add
dec
imul
aas
add
inc
negl
mov
pop
cmp
and
insl
orl
sbb
mov
add
ljmp
xchg
lods
jae
gs
mov
lahf
inc
daa
sub
dec
and
in
test
push
fisubs
scas
mov
mov
add
jnp
inc
push
pop
call
decl
cmp
insb
fiaddl
clc
std
movsl
idivb
inc
xchg
sub
mov
fldt
cmp
cli
call
hlt
xor
lret
mov
adc
sbb
shrb
imul
pop
incl
cld
out
cmp
sbb
xor
xchg
push
testb
pushl
push
js
jo
lret
out
mov
nop
fisttpll
sbb
adc
jl
into
mov
mov
std
dec
and
out
push
xchg
aaa
or
lea
outsb
js
in
je
adc
inc
push
je
int3
mov
mov
mov
repz
repz
test
data16
pop
clc
decl
into
cmpsb
fs
mov
mov
loop
mov
ja
push
pushl
sub
mov
sub
out
mov
push
lahf
inc
lds
sbb
ret
mov
shll
ljmp
jae
xchg
lea
popa
dec
mov
mov
hlt
test
aad
movsb
mov
incl
call
xchg
loopne
mov
add
adc
jg
and
pushf
adc
jmp
pushl
xchg
in
in
mov
int
ret
es
mov
imul
jae
fildll
stos
repz
mov
mov
incl
mov
add
push
sbb
xchg
mov
gs
fs
xor
in
mov
fstpl
movsl
test
bound
inc
das
mov
mov
mov
ljmp
fsubs
adc
adc
and
adc
cltd
jnp
in
pop
add
mov
adc
roll
out
movsl
mov
or
pushl
std
xchg
and
xchg
or
jge
xchg
sub
in
cmpsb
les
mov
in
call
int3
add
mov
push
lods
insb
cmp
pop
mov
mov
sbb
jg
call
push
cmpsb
jb
sbb
popf
pavgb
mov
mov
mov
mov
add
subl
das
movsb
ljmp
call
mov
cmp
icebp
fmulp
adc
ret
mov
dec
fcompl
dec
dec
into
call
clc
xchg
push
pop
xchg
repz
and
mov
test
xor
decb
lcall
xor
test
jmp
sbb
aaa
inc
shlb
pusha
cmpsl
in
sarb
fimuls
jbe
in
mov
in
push
test
lods
cwtl
in
lcall
cld
push
mov
push
out
nop
icebp
jmp
push
movsb
push
movsl
sahf
lock
pushl
bound
inc
rolb
fstpt
pop
sbb
and
repz
movsb
mov
loop
das
or
std
mov
hlt
mov
push
cli
repnz
fsubrs
iret
adc
call
jmp
mov
push
push
sub
insl
and
ret
inc
push
mov
loope
out
dec
pop
in
sbbl
jle
pop
shr
mov
loope
pop
mov
jmp
xchg
clc
xor
and
test
stc
sub
cmp
dec
mov
or
dec
cmp
adc
xchg
cltd
inc
fnsave
and
call
leave
or
cs
lods
popa
or
sarb
or
fidivrs
das
int3
xchg
sub
push
xchg
incl
cld
cli
push
dec
pop
jns
jl
xchg
or
out
xchg
notb
fs
imull
pop
pushl
adc
push
mov
lahf
and
cld
dec
in
ret
call
mov
and
imul
divb
mov
pop
repnz
std
jbe
mov
push
mov
test
shll
leave
or
jb
and
cmp
nop
in
aaa
mov
fsts
insb
pop
outsb
mov
ret
jbe
sbb
lcall
ljmp
jle
jge
movsb
jmp
sbb
xchg
add
cli
fcomip
or
mov
mov
fildll
xorl
mov
xchg
cli
fcos
push
outsl
ljmp
fnstcw
rclb
cmp
scas
xor
decl
in
movl
sbb
dec
cmp
mov
cld
mov
inc
push
mov
and
roll
pushf
imul
pushl
jmp
test
out
pop
xor
dec
mov
loope
scas
xor
cmpsb
nop
shrb
inc
pop
pop
push
push
cld
incl
int3
out
mov
sub
addb
add
call
jge
icebp
push
decl
std
cmpsl
sub
pop
push
adc
rclb
xor
call
push
sbb
jo
icebp
add
rcrb
mov
jg
dec
ds
push
testb
push
pop
lock
inc
mov
aaa
lret
cltd
out
or
inc
push
mov
hlt
xchg
and
hlt
add
in
mov
stos
inc
jecxz
fimull
pop
int
arpl
jge
lds
and
cmpsb
aas
test
roll
adc
xor
mov
in
adc
imul
decl
test
outsl
ret
ss
sbb
stos
mov
frstor
pop
nop
scas
or
sub
aad
cmp
sub
xlat
pusha
xchg
clc
loopne
dec
cmc
dec
sbbl
incl
cmc
xchg
push
cs
pop
xor
std
repnz
cmp
adc
xor
enter
int
sbb
jp
adc
sbb
push
ljmp
fisubrs
mov
or
rcl
jg
xor
iret
loope
inc
push
dec
pop
dec
pop
mov
xchg
lods
in
sarl
xor
xchg
test
xchg
jecxz
jmp
rolb
mov
rcl
jae
push
pop
std
addr16
int3
incl
xor
sbb
inc
adcl
loope
rcl
out
adc
lret
dec
and
gs
call
jl
addr16
stos
inc
ret
jae
xor
push
rclb
andnps
fcomip
lret
cmp
insb
into
mov
push
adc
dec
clc
das
sarl
xchg
or
outsl
call
jo
stos
popa
inc
mov
ret
mov
addl
lods
cmpsb
outsb
jns
jb
inc
push
lahf
js
ss
call
cld
cmp
jb
jle
jge
adc
ret
sbb
and
adc
adc
dec
and
xor
add
cmp
sbb
inc
jmp
cmpsb
jbe
mov
gs
jmp
scas
xor
out
jecxz
sbbl
dec
jmp
lcall
dec
jb
jg
mov
inc
cs
cwtl
xor
mov
fimuls
sldt
jle
pop
or
add
decb
cwtl
cmpsl
ror
add
and
pushf
add
fisttpl
jo
xchg
cmpsb
les
hlt
ljmp
mov
incl
sbb
cmp
sbb
inc
data16
pop
mov
sbbb
ljmp
mov
xor
insb
in
lcall
push
or
pop
cmpl
mov
pop
test
inc
dec
shll
inc
adc
xchg
push
mov
xchg
popf
jne
push
push
leave
fbld
mov
dec
and
imul
addr16
push
lret
mov
arpl
imul
adc
add
inc
dec
push
xor
fsubrs
ss
sub
push
repnz
or
dec
sbb
ljmp
adc
and
out
xchg
jae
jp
inc
inc
mov
cmp
repz
mov
in
sbb
lock
lods
mov
push
mov
into
mov
and
adc
flds
lcall
mov
xchg
push
pop
pop
in
xchg
test
and
aaa
adc
add
push
mov
pushl
sub
fsts
xor
jp
mov
ds
xchg
nop
push
std
decl
inc
dec
movsb
fiaddl
sbb
rorb
fsubrs
adc
pop
mov
sarb
pop
dec
mov
insl
loopne
inc
mov
sub
sub
push
dec
xchg
sti
dec
shr
xchg
es
mov
mov
lcall
jmp
daa
xchg
pop
rolb
loopne
int
mov
adc
jmp
fs
adc
lcall
dec
xor
push
insb
test
push
add
xchg
insl
sbb
adc
movsl
out
pop
aad
cs
jmp
out
xor
mov
push
scas
cli
pushl
xchg
fmuls
mov
xchg
sub
test
pop
fwait
push
aad
cmp
push
push
mov
or
cmp
daa
dec
imul
pop
imul
insb
and
push
jae
mov
loop
outsl
xchg
out
lret
mov
cli
popf
mov
iret
mov
cld
decl
imul
notl
pop
rorl
popf
lcall
mov
adc
and
pop
xor
mov
bnd
push
gs
xchg
ret
decl
adc
inc
ret
out
xchg
cld
add
inc
jmp
xchg
decl
orb
jb
jmp
dec
mov
jne
add
lods
pop
mov
jmp
mov
jmp
ds
mov
imul
cmp
mov
xchg
movsb
sub
add
add
jmp
inc
push
cmc
push
lea
dec
push
mov
jmp
adc
jns
orl
add
test
pop
mov
xchg
lcall
mov
mov
adc
lds
leave
jns
imul
xchg
clc
pushl
jb
pop
iret
mov
sub
imul
jae
aas
push
es
mov
aam
es
mov
mov
sub
push
mov
dec
sbb
jge
cmp
shrb
incl
pop
pushf
addb
ja
dec
lahf
mov
or
loop
cmc
mov
inc
lret
int
in
pop
mov
aam
cmp
addr16
loop
repnz
jb
pop
pop
sti
jle
test
sub
or
inc
sbb
jmp
cld
sub
mov
pop
out
in
cmp
icebp
out
setl
fisubrs
inc
xor
adc
and
jp
pop
jp
ljmp
or
xchg
daa
mov
fnsaves
fcomi
rcl
pusha
scas
out
rcr
sbb
cmpb
adc
pop
xor
fcomps
decl
sbb
adc
loope
fnclex
jns
xor
dec
in
jae
and
lcall
roll
xchg
scas
jo
insb
imul
pop
ss
dec
cld
jg
inc
lods
punpckldq
ret
xchg
outsb
addb
jne
out
mov
lds
daa
jge
jno
pop
cs
pushl
in
cli
stos
pop
lock
fldcw
ss
outsb
mov
add
mov
cmp
jbe
mov
movsb
xor
and
sti
stos
inc
lds
scas
dec
jecxz
fstpl
fstpl
mov
or
andl
lcall
repnz
int3
pusha
std
sbb
dec
gs
ljmp
push
adc
call
sub
lret
movsb
cmpb
enter
xchg
es
sahf
push
out
lds
mov
mov
notl
cmp
cmp
and
imul
loope
mov
push
pop
sbb
mov
outsl
push
popa
jnp
mov
aaa
push
or
nop
in
mov
in
pop
inc
xchg
jle
jge
jno
jo
and
adc
xor
and
aaa
fwait
mov
pop
ret
ljmp
aad
jg
xchg
mov
mov
push
mov
mov
je
daa
loopne
ljmp
mov
mov
out
or
cmpsl
roll
call
fcmovnb
adc
push
pop
xor
call
pop
lcall
cmp
fdivr
pushl
jl
dec
dec
push
adc
fildl
cwtl
dec
inc
cmpsb
lret
xchg
mov
pop
js
rolb
sbbl
jmp
xchg
test
js
jg
fldenv
mov
lcall
jne
imul
bound
cmp
push
xchg
int3
mov
adc
decl
pop
cltd
jae
sub
imul
pushl
hlt
pop
sbb
dec
imul
in
xorb
outsb
add
push
xor
dec
filds
shrb
pusha
stos
fmull
out
jns
xor
jge
sbb
test
imul
jmp
jmp
dec
jbe
mov
je
ss
ds
sar
int
pushl
ja
xchg
lcall
mov
mov
outsl
int3
xchg
mov
mov
xchg
inc
xor
loopne
lock
ljmp
lds
jmp
pop
cmp
dec
sub
fmuls
lcall
jp,pn
pop
push
add
inc
ret
mov
pop
jmp
mov
adc
push
mov
or
lods
cmp
mov
insl
js
lea
shlb
lcall
add
inc
pop
xchg
mov
xorl
int
or
decl
idivb
jle
xor
sbb
mov
js
cmp
sub
inc
lods
inc
popa
mov
outsl
sbb
adc
cmp
mov
and
jge
je
cld
add
fidivl
in
pop
lret
adc
and
adc
pop
or
mov
pusha
sar
iret
ss
adc
lea
dec
dec
mov
call
pop
pop
fisubl
jno
mov
mov
jecxz
lods
push
ficoms
sbb
jae
lcall
divl
adc
and
gs
mov
lock
jg
jno
pop
cmp
adc
sbb
jns
adc
jns
add
adc
mov
dec
inc
ror
dec
out
clc
ljmp
xchg
fs
push
or
call
sahf
mov
sub
sub
dec
ljmp
call
stos
je
orl
xchg
and
ss
scas
dec
mov
xor
lea
inc
in
cmpb
aaa
decl
add
xchg
lahf
stc
outsb
stc
xchg
adc
inc
push
pop
push
adc
mov
incl
call
cli
sti
rcll
aas
test
xor
mov
gs
ja
mov
aam
mov
xor
fdiv
mov
call
fsubp
das
fdivr
dec
push
idivl
ficoms
and
aad
cwtl
xlat
das
cmp
xor
mov
inc
pop
jmp
in
and
xchg
jb
mov
add
ss
cs
inc
jo
fidivl
mov
mov
mov
and
loope
pop
sarb
mov
outsl
xor
inc
jg
jle
xchg
icebp
es
lcall
cli
pop
push
mov
or
xchg
jae
pop
jmp
arpl
mov
push
std
pop
call
sbb
test
shll
scas
clc
aaa
cld
cmp
es
mov
and
jg
decl
and
xchg
cmpsb
inc
call
xorl
adc
ja
dec
ja
pushf
mov
fcos
decl
cmpsb
daa
jbe
push
push
fimull
mov
mov
push
xor
popf
arpl
leave
sub
jmp
inc
aam
jnp
or
cmpsb
cmc
lds
sub
movsb
cltd
xchg
dec
into
test
jle
cmc
or
mov
incb
or
inc
jle
icebp
cmpsl
adc
fldenv
inc
jl
cmp
rolb
push
stos
lea
imul
rcrl
jg
dec
jnp
adc
fstpl
push
fdivs
adc
in
out
inc
xor
xchg
lcall
cmp
cltd
lock
mov
int3
mov
inc
xchg
sub
pushl
mov
add
pop
arpl
leave
cmc
fnstcw
jb
decl
adc
enter
sar
mov
push
lahf
adc
jg
std
mov
in
outsl
pop
rolb
arpl
call
push
imul
jmp
pop
mov
je
call
xchg
or
pop
mov
xor
std
mov
adc
cmp
repz
stos
fisubrl
mov
addb
lock
aam
insl
inc
pop
push
enter
cmp
sub
mov
cmp
adc
stos
add
insl
test
jg
ljmp
xchg
test
jg
or
jo
add
stos
mov
cmp
fbstp
mov
cld
mov
or
enter
ljmp
and
in
jmp
jo
pop
sub
je
pop
movsb
or
mov
mov
dec
stos
xchg
xorb
incl
dec
cld
jb
icebp
out
or
mov
lods
fwait
mov
lret
decb
jg
nop
out
out
leave
pop
adc
mov
aas
push
insl
inc
jae
hlt
out
dec
in
mov
and
fdivp
dec
mov
ljmp
lret
out
jmp
call
les
mov
mov
repnz
and
lea
pop
mulb
hlt
in
sahf
jle
mov
lds
dec
sub
xor
sub
sbb
lcall
sbb
test
pop
xchg
push
popf
aaa
mov
repnz
push
mov
inc
jnp
pusha
outsb
popa
xor
push
outsb
pushl
std
jmp
mov
dec
cwtl
inc
add
mov
xchg
inc
lods
add
and
or
jmp
stos
dec
dec
xor
sbb
xchg
int
div
xchg
jge
mov
rdmsr
in
inc
push
lcall
dec
and
sub
cmpsb
std
ret
inc
sub
sbb
push
cmp
ljmp
mov
adc
cmc
xor
cltd
sbbl
jmp
repz
test
xor
aam
inc
icebp
lret
or
test
jno
iret
or
es
out
sbb
bound
loopne
imul
jmp
or
and
push
pop
mov
rorb
cmpsl
mov
sbb
out
test
lock
mov
call
mov
ficoml
pop
pop
mov
push
loope
rolb
jl
pushl
mov
and
pop
mov
mov
fcomip
mov
std
das
push
loopne
mov
inc
add
scas
decl
pop
mov
or
mov
out
pusha
test
jbe
andb
dec
push
mov
xchg
pop
jne
daa
mov
test
and
xchg
jno
fdivs
inc
adc
xor
lods
lock
loope
aaa
add
outsb
movsl
mov
sbb
ja
inc
sub
out
rcrb
repnz
push
fistps
das
jns
pop
out
or
jmp
scas
inc
fiaddl
cmp
ljmp
and
jg
sar
sbb
dec
iret
and
pop
jmp
jbe
pushl
jb
aam
jb
or
cmpsb
fs
into
mov
imul
lcall
sbb
sbb
and
xchg
rorl
dec
test
out
xor
aam
ss
lcall
ljmp
mov
arpl
jp
jne
fmull
fnstenv
incl
cld
daa
mov
movsl
test
and
ret
stos
call
mov
in
pop
pushl
cld
ljmp
out
adc
cld
dec
int3
scas
adc
ja
lret
pop
ljmp
push
rcrb
inc
ljmp
mov
gs
outsb
adc
mov
push
cmp
mov
jns
pop
hlt
sub
lcall
ret
leave
repnz
inc
pusha
out
vmovlpd
mov
scas
adc
out
data16
test
mov
dec
jns
aaa
sub
les
fsubl
and
cmp
mov
xor
cs
xchg
cmpsl
push
cli
jecxz
icebp
ds
push
scas
and
les
xor
inc
sub
push
dec
and
insl
sti
add
push
andl
shlb
dec
repz
jl
ds
testb
jg
sbb
fwait
lret
es
in
add
add
outsl
iret
jns
or
dec
pop
push
mov
orb
lock
mov
dec
stc
push
push
xor
xchg
push
jmp
ret
mov
pusha
sbb
mov
jecxz
rcr
jns
mov
test
mov
sbb
lahf
push
push
add
lcall
test
fldl
jmp
push
rol
in
push
mov
mov
or
adc
mov
mov
cld
out
or
mov
orl
out
outsb
pop
fidivrs
or
push
clc
push
ljmp
popf
inc
xchg
sbb
je
cmp
gs
mov
mov
out
sub
test
ljmp
pushl
or
pop
addr16
icebp
push
xchg
pop
and
pop
jl
adc
in
in
ret
adc
shl
decl
ljmp
imul
movsb
subb
decl
pop
test
xor
or
cmp
dec
pop
sub
adcl
les
xor
fsubrl
push
pop
mov
lret
sub
mov
xchg
pop
mov
mov
in
push
loope
sbb
mov
repz
jb
shlb
mov
jg
xchg
loopne
pop
mov
dec
aas
aad
mov
out
icebp
adc
and
mov
insb
mov
mov
dec
inc
xor
cmp
sbb
ffreep
jmp
pop
jns
xlat
push
in
push
and
cwtl
xchg
dec
xchg
pop
adc
xchg
inc
popa
ss
xor
ljmp
or
fldl
out
sbb
mov
dec
mov
xchg
jmp
leave
inc
and
xor
jecxz
pop
sarb
cmp
pop
loop
stos
add
xchg
xchg
sti
movsl
push
clc
add
daa
sub
mov
mov
jg
jge
iret
je
and
cld
lret
mov
repz
sbb
inc
cltd
mov
ljmp
mov
lds
sub
and
cwtl
jno
xchg
sarl
pop
in
mov
ljmp
int
mov
mov
out
jne
adc
xchg
leave
push
push
cs
cmpb
sub
jmp
stc
gs
je
pushf
push
iret
lcall
lods
je
sbb
mull
arpl
pop
pop
sub
popa
aam
inc
in
fstpl
sti
incl
and
lahf
sti
pop
out
sub
sbb
xor
sub
das
xchg
leave
sbb
mov
jmp
add
sbb
outsb
ret
scas
or
imul
add
inc
add
lcall
mov
adcl
and
fidivrs
adc
push
sar
jmp
inc
es
or
or
inc
add
incl
fdivl
mov
fadd
or
push
jns
scas
cmp
dec
lods
or
add
out
sbb
xor
dec
cmp
jmp
jns
inc
dec
test
and
jne
or
loope
cmp
fildll
test
xlat
hlt
outsb
sub
jp
shlb
outsl
ja
lcall
xor
lcall
cmpsb
std
scas
pushl
jne
mov
pushl
clc
sub
push
xchg
sbb
pop
sub
enter
adc
pop
in
dec
nop
leave
mov
pop
and
fnsave
add
sahf
dec
out
imul
nop
or
ss
dec
mov
sbb
insl
jb
push
dec
mov
adc
pop
push
aad
enter
pushl
dec
mov
or
jle
stc
xor
fcoml
test
sbb
ljmp
incl
std
sub
mov
fiadds
xchg
and
or
pop
ret
xor
push
fcos
ja
jmp
push
xchg
xor
jbe
dec
mov
cmpb
mov
push
and
jne
adc
cli
xchg
mov
dec
mov
rolb
fsubp
mov
lcall
repnz
mov
movsl
dec
scas
jbe
xor
adc
lahf
jbe
adcl
ljmp
cld
test
iret
nop
hlt
mov
adc
inc
xchg
adc
cmp
retw
and
call
jge
addl
pop
cmp
sbb
mov
and
sub
sti
mov
andl
lods
or
add
push
inc
fmull
mov
lcall
inc
scas
movsl
jp
or
add
dec
adc
mov
sbb
pop
push
inc
lods
pop
add
mov
mov
insb
call
jnp
push
jnp
push
inc
daa
repnz
lock
incl
mov
das
mov
lock
sbb
jp
decl
mov
movsl
iret
lcall
push
inc
lret
cmp
out
leave
jl
and
pop
hlt
ljmp
mov
pop
nop
subb
inc
bound
cmp
mov
jge
xchg
call
and
mov
cmp
sub
ljmp
faddl
sbb
lcall
dec
ds
mov
push
aad
mov
divb
inc
js
dec
notl
mov
stc
cwtl
loop
push
mov
iret
mov
pop
add
inc
add
xchg
add
jbe
inc
cmc
sub
sbb
xor
jmp
sbb
push
sbb
repnz
jle
jno
and
cltd
push
fstpl
xchg
jbe
ja
sarb
mov
mov
cmpsl
ljmp
fcomps
jb
in
mov
ljmp
fstl
add
jmp
mov
adc
pop
mov
and
jnp
cli
dec
mov
push
cli
fistpll
jg
outsl
xchg
stos
stc
test
lock
sbb
and
insl
lcall
jmp
add
mov
aad
scas
xchg
cmp
sub
add
jmp
inc
test
fists
push
jo
mov
sti
cmp
in
mov
dec
inc
mov
sub
mov
jmp
stos
jb
call
int3
or
xlat
inc
jne
or
push
in
fdivrl
jle
or
outsb
cmp
add
call
repz
or
xchg
mov
adc
ja
xor
jns
xchg
sbb
push
cmpsb
fmulp
xchg
cmp
mov
stos
adc
call
insl
insb
ret
cmc
nop
fsubrs
mov
loop
mov
and
pop
loopne
dec
ja
or
jmp
xchg
jb
mov
jmp
mov
rorl
mov
add
negb
fiaddl
dec
call
xchg
pop
bound
adc
and
test
adc
jmp
or
cld
fwait
inc
add
stos
jmp
push
sub
adc
inc
xchg
cmc
dec
adc
out
dec
sbb
dec
xchg
jp
fildl
fucom
fsts
cmp
adc
sbb
dec
hlt
cli
cmpsb
incl
lret
repnz
cli
xor
inc
fimuls
aas
movsl
xchg
xor
ljmp
mov
outsb
test
sub
iret
xorl
out
inc
cs
jmp
outsl
adc
pushl
adc
imul
xchg
stc
insl
jmp
xor
ljmp
mov
in
dec
fwait
jbe
fdiv
in
jp
stos
fstpt
loope
insl
push
insb
loopne
mov
ret
aas
mov
pop
mov
jmp
sub
mov
out
js
jne
mov
xchg
hlt
test
sar
fbld
jns
lcall
inc
xor
decl
sub
push
push
mov
sti
inc
fists
mov
loop
xchg
dec
jmp
adc
ljmp
dec
sahf
sub
fidivrs
sub
pop
mov
jmp
dec
movsb
shl
inc
daa
loope
imul
imul
push
and
sti
decl
or
test
test
shlb
jnp
jg
jno
fstpt
inc
shll
bnd
imul
aaa
test
mov
fidivrs
fisubrl
jo
pushl
push
lods
lods
and
cmp
xchg
jmp
call
mov
cmc
inc
fbld
mov
stos
adc
add
push
adc
jle
xchg
mov
loop
add
or
sub
decl
popf
adc
cld
xchg
aaa
in
add
jmp
int
mov
aam
xor
dec
imul
xor
lcall
jg
adc
call
dec
dec
sbb
sbb
clc
dec
popf
and
scas
mov
add
jbe
lods
dec
jle
or
aaa
les
mov
incl
pop
push
movsb
cmc
sub
adc
fst
dec
sub
addb
std
decl
bound
jge
push
sub
dec
repz
fbld
fs
dec
popa
repz
mov
leave
pushf
push
mov
sbb
jbe
inc
data16
dec
sar
das
clc
jns
dec
pop
pop
push
add
jecxz
jg
push
int3
imul
dec
cs
inc
cmpsl
inc
mov
clc
jecxz
repz
test
jns
push
rclb
arpl
and
int3
mov
das
mov
inc
mov
fsubl
imul
push
inc
cs
mov
aaa
jbe
std
daa
and
call
inc
sbb
shrb
shlb
xor
das
ficompl
adc
loope
in
or
mov
fwait
scas
fs
dec
lea
lea
testb
push
push
or
pushl
shl
sbb
or
test
inc
cmp
ljmp
add
xchg
dec
jl
dec
int
and
icebp
test
push
adc
lods
mov
mov
into
cmp
cmp
adc
pop
sub
or
mov
mov
sub
xchg
adc
bound
sbb
ljmp
mov
mov
jae
sbb
je
cmp
or
punpckldq
js
xchg
sbb
lcall
adc
sbb
sbb
outsb
adc
push
out
adc
inc
or
pushf
ss
inc
jecxz
lods
cmp
pop
push
inc
cmp
incl
or
push
push
jb
popa
sbb
sub
cmp
ret
dec
add
mov
sldt
cmpb
cmp
cli
dec
enter
aas
les
sbb
xchg
dec
pop
arpl
and
xor
push
clc
push
ret
mov
pushl
rorb
or
aam
hlt
addr16
aam
jp
das
sar
xchg
jae
data16
sub
or
roll
arpl
xor
lcall
clc
xor
ret
sub
xor
divb
lods
add
inc
movsb
inc
aaa
push
jg
ljmp
dec
sbb
jns
mov
xchg
scas
cmp
out
lock
add
push
ror
xor
push
push
lods
pop
hlt
jne
imul
sub
imul
jmp
lods
fcmovnb
xchg
das
sbb
push
jp
or
ret
aam
hlt
ljmp
push
dec
int3
cmp
leave
insb
jns
xor
mov
icebp
scas
adc
jne
mov
inc
dec
pushaw
xchg
cmp
cld
decl
sub
iret
clc
adc
inc
mov
loop
jp
imul
lcall
inc
js
xchg
popf
roll
pop
mov
inc
mov
out
out
or
in
add
aad
ret
adc
mov
subb
xor
dec
sub
aaa
push
dec
sbb
jl
lods
xor
icebp
pop
hlt
fldz
push
pusha
lods
xchg
mov
lcall
xor
fsubr
and
dec
pusha
mov
sti
cmp
hlt
mov
lcall
sub
adc
insb
jmp
test
sbb
loope
jge
or
lods
xchg
stos
out
xlat
push
mov
loop
xchg
push
ficompl
lret
mov
xchg
ljmp
popf
ja
jge
xchg
imul
and
mov
add
xchg
les
xchg
pop
nop
pop
lret
mov
xchg
push
sarl
nop
sub
pop
sub
ja
sub
inc
mov
mov
push
lret
loopne
fs
xorl
sub
out
clc
outsl
std
stos
divb
pop
icebp
fwait
cltd
shrb
xchg
mov
loop
lcall
std
or
and
loop
push
push
lock
int
xor
lock
mov
xchg
mov
adc
xchg
mov
stos
cmp
cmpsb
dec
or
mov
inc
cmc
mov
pop
sub
outsb
cmp
loop
jecxz
cmp
xor
fs
in
int
dec
jg
xor
mov
push
sub
jg
call
sbb
pop
jnp
outsb
rol
mov
push
in
stos
sub
imul
pushl
xchg
stos
decl
and
sub
jmp
mov
mov
pop
les
dec
dec
jno
incl
mov
dec
push
inc
ret
fcoml
cmc
test
pushl
cmovb
push
push
mov
or
popf
xchg
ja
pop
push
imul
and
sub
fcoml
bound
inc
jmp
loop
iret
xchg
push
es
lret
push
mov
mov
sti
mov
call
push
mov
xchg
mov
jns
js
pop
imul
mov
int3
xchg
in
fidivl
leave
xor
faddl
mov
inc
rorb
cmp
ficoml
dec
dec
cmpsb
cmc
int3
les
inc
sbb
xor
lcall
icebp
ss
adc
sub
mov
xchg
movsl
add
popf
xchg
test
xchg
xor
div
jl
cmpsb
decl
loope
xor
jbe
out
pop
mov
testb
decl
dec
mov
xchg
inc
sub
jle
xlat
ror
out
clc
outsb
pop
lcall
push
rclb
adc
ret
jo
dec
jg
mov
jae
loope
shrl
inc
jno
fdivl
jne
adc
sbb
xchg
test
adc
stc
lods
mov
ljmp
icebp
inc
outsb
popf
incb
sub
adc
ja
pop
loop
leave
call
dec
adc
xchg
mov
enter
mov
fistl
addb
mov
fidivs
push
int3
xchg
mov
into
sub
jns
cmp
jae
out
add
ljmp
cld
mov
cmp
jp
fisubrs
andl
lahf
mov
insl
push
out
lds
shrl
push
aam
ljmp
cmpsb
lea
in
sub
or
cmp
jo
push
aam
lcall
test
in
xor
jle
dec
rorl
decl
orb
aam
mov
adc
jmp
enter
xchg
shrb
call
pop
in
cmp
dec
cmp
push
out
imul
imul
mov
sbbb
stos
jg
lods
cmp
mov
das
jmp
pushl
notl
imul
jle
mov
pop
push
jmp
adc
jg
pop
imul
mov
mov
sbb
cli
mov
mov
mov
jne
cmp
dec
pop
imull
cmp
mov
jl
ljmp
ds
sub
jo
in
imul
ljmp
loope
inc
jp
arpl
ss
arpl
xchg
shll
aam
sub
push
or
adc
mov
stc
dec
shll
addr16
cmp
ljmp
xchg
ljmp
mov
inc
push
out
and
bound
cmpsb
and
pop
pop
push
xchg
xchg
mov
lcall
adc
das
sbb
ss
sub
inc
bound
sbb
xchg
lds
clc
decl
lock
jl
sub
xlat
inc
aam
loop
test
in
incl
jb
outsl
mov
mov
iret
fimull
push
xchg
enter
pushf
lods
test
call
sub
in
repz
int3
movsl
popa
pop
pop
loopne
ficoml
push
push
pushf
sahf
call
lcall
sti
xchg
into
add
shl
ret
dec
cwtl
sbb
sub
fdivr
incl
bound
into
xchg
mov
pop
sar
and
fdivrs
xchg
xchg
fnstcw
ljmp
stos
xor
xor
adc
jae
mov
add
decl
lock
in
sbb
ds
mov
or
dec
jmp
adc
inc
dec
das
xchg
jge
stos
mov
pop
jbe
movsb
and
jle
cmp
outsb
sub
ja
pusha
stc
jmp
push
add
decl
int3
adc
es
cmp
jl
mov
inc
pop
sti
xchg
roll
mov
jmp
xchg
mov
imul
add
mov
or
popa
adc
cmpsl
sbb
jmp
inc
aaa
arpl
push
sub
int
lcall
in
ljmp
inc
rcll
ds
mov
cltd
je
cmp
mov
rcrl
lcall
fmul
jno
mov
mov
add
sub
loope
or
cmp
call
fisttps
cs
test
xchg
icebp
pop
imul
xchg
or
lock
push
jne
push
in
mov
decl
stc
add
or
dec
int
jge
jno
insb
cwtl
and
dec
dec
push
lock
and
das
sarb
popf
pop
sbb
sbb
addr16
insl
les
jb
add
cmc
out
mov
lock
xor
pop
mov
jne
push
in
xchg
and
daa
xchg
imul
lcall
data16
cwtl
xor
mov
mov
jg
pop
add
pushl
jle
inc
mov
adc
cld
sub
or
and
dec
mov
std
lcall
cli
mov
mov
mov
sbb
pusha
mov
mov
sbb
mov
imul
pusha
es
inc
das
and
repnz
jae
dec
mov
lcall
fsubl
dec
pop
int
jns
mov
or
and
pop
adc
in
push
fisubs
iret
das
loope
pop
pop
push
lea
imul
fcoml
call
call
lea
xlat
int
leave
cli
int3
into
mov
mov
cmp
mov
and
sbb
xorl
or
lcall
data16
mov
int
mov
adc
jmp
sarb
in
add
or
or
inc
movsb
lock
aad
cmp
aaa
dec
adc
std
fnsetpm(287
hlt
aaa
cmp
sti
hlt
jo
cmc
lahf
lods
dec
jge
sbb
pop
mov
inc
fsubp
stos
xlat
xor
test
pushl
mov
icebp
push
repnz
and
pusha
xor
cmpsl
imul
clc
add
shl
push
ljmp
xchg
pop
cwtl
push
stos
int3
sahf
loopne
pop
imul
sub
sbb
addr16
imul
stos
cwtl
inc
add
pop
faddl
scas
cmp
sarl
push
pushl
sbb
dec
dec
popf
ret
jno
scas
mov
dec
cmp
lahf
push
pop
ja
andb
mov
jp
das
mov
or
inc
hlt
lret
mov
pop
movb
in
ret
sar
dec
ljmp
mov
adc
fidivrl
pop
pusha
jl
jl
lcall
add
out
adc
cmp
rolb
push
add
mov
incl
add
push
xchg
cwtl
testb
lret
jo
inc
mov
jle
ss
inc
sub
jle
xchg
into
jo
sub
dec
xchg
inc
cmc
insb
jg
decl
movsl
pushf
adc
aaa
insl
and
pop
adc
inc
out
mov
adc
ret
aam
outsb
in
test
test
outsl
cli
stos
in
int
sub
aaa
pop
std
scas
ficompl
inc
in
jl
dec
lcall
and
cld
fnstenv
loop
sub
inc
sbb
hlt
fcoml
adc
xchg
sub
xchg
shlb
or
decl
and
or
js
jg
xchg
mov
lock
mov
popf
pop
inc
push
dec
sahf
push
dec
cltd
inc
test
or
inc
cmp
sub
adc
outsb
lods
in
test
push
inc
mov
cmp
pusha
sub
test
les
push
outsl
imull
mov
push
shl
and
xchg
in
inc
stos
pop
fwait
jmp
xchg
xchg
ds
pop
mov
cltd
push
ficompl
sar
decl
pop
xlat
lds
push
dec
pop
pop
fbstp
jg
jb
pop
adc
data16
dec
inc
mov
dec
cmp
std
mov
sti
mov
mov
cltd
imul
popa
ds
es
sbb
jns
decl
jmp
jg
fisttps
loope
or
dec
adc
daa
fwait
out
dec
sub
mov
mov
ficompl
xchg
pop
repz
call
pop
lock
std
xchg
pop
mov
jo
imul
pop
cmc
call
sbb
jmp
outsl
jmp
mov
push
pop
mov
iret
icebp
es
mov
mov
cli
jg
nop
jb
cmpsl
jo
cmp
mov
cmpsl
out
inc
mov
fwait
xchg
mov
adc
cmp
subl
or
out
stos
and
jae
adc
in
hlt
shl
dec
rcrb
jmp
test
push
mov
insb
xchg
shrl
cld
add
pop
lahf
test
push
pop
sbb
sti
mov
jo
scas
dec
fnstcw
pop
xor
pop
out
inc
pop
ret
xchg
sahf
xor
mov
jmp
aas
and
add
mov
and
adc
lock
inc
push
lret
sti
imul
sub
loopne
cmp
xor
add
rcrb
sti
outsl
jp
ja
mov
pop
fsub
or
dec
lret
int
test
bswap
inc
jmp
jb
mov
aas
mov
push
mov
cld
push
add
pop
push
movsb
pop
push
push
mov
mov
xadd
repz
in
push
push
rcrl
scas
imul
aaa
pop
clc
sbb
mov
inc
mov
fisttps
arpl
mov
xorb
xchg
in
pop
pop
jge
mov
leave
shr
and
push
movsl
inc
sub
fmull
incl
test
ror
inc
in
lea
mov
push
imul
fldcw
inc
mov
call
mov
cmp
mov
stos
aaa
inc
aam
cmp
shlb
divl
push
js
cmp
notb
andb
and
mov
arpl
out
mov
loop
ljmp
outsl
mov
es
lret
xlat
dec
xchg
das
loope
outsb
mov
lcall
in
mov
ljmp
jb
in
fcoml
stc
lret
mov
and
xchg
cmpsb
or
loop
inc
or
loop
das
add
push
movsb
int
or
mov
das
cli
fbstp
add
movsl
jp
ljmp
aas
mov
lea
pushl
scas
ss
and
xchg
cld
jmp
cwtl
shrb
adc
jecxz
lods
es
incl
fwait
pop
push
ror
xchg
test
pop
adcl
decl
mov
out
testl
mov
pop
sub
arpl
test
clc
lcall
push
addb
test
cmp
lcall
pop
dec
lcall
sub
xor
xlat
pop
jnp
aas
xchg
cmp
fsubs
cmpsb
lcall
stos
test
andl
and
push
mov
mov
fs
outsb
cmc
mov
icebp
jl
sbb
ret
or
add
cmpsb
push
adc
mov
into
addr16
xor
aas
adc
add
push
dec
inc
idivb
clc
mov
aas
push
frstor
xchg
paddusb
pop
cmp
cs
cmp
pusha
rcrb
and
and
inc
mov
jbe
add
icebp
sbb
pop
test
or
icebp
clc
rclb
pop
cmp
adc
inc
jbe
mov
into
add
lods
addr16
cmp
cmp
ljmp
in
out
jle
test
divl
cmpsl
clc
sbb
sub
hlt
cmp
mov
inc
jo
fcmovbe
jmp
pop
mov
xorb
pushf
ljmp
mov
pop
dec
loope
in
mov
into
jmp
push
test
test
lcall
xchg
ljmp
and
cbtw
rcll
adc
mov
aaa
fstps
push
pop
inc
sub
aam
orb
dec
cwtl
xor
incl
leave
pusha
ljmp
decb
out
jae
adc
adc
mov
scas
movsl
sbb
pushl
std
xchg
lcall
cwtl
pusha
inc
out
fsubl
lods
fdivrl
cmc
pop
mov
std
js
push
outsl
jbe
and
cmpsl
push
mov
cmp
lcall
decl
incl
cltd
push
insl
inc
inc
aas
or
sub
mov
pop
cli
arpl
jmp
scas
sbb
nop
aam
adc
xchg
fcomps
fiaddl
loopne
fcomp
jae
lock
dec
push
adc
lcall
insb
sti
insl
pop
cli
or
lcall
test
mov
fisubrs
ja
lret
mov
ret
movsl
push
adc
and
out
mov
inc
lret
stos
pop
xchg
or
insb
adc
mov
lods
dec
aas
loopne
lcall
out
call
and
and
bound
scas
test
mov
call
lcall
add
jl
or
sbb
inc
stc
ds
imul
aaa
pop
hlt
sub
lret
push
cmp
movsl
cld
xchg
rorb
and
rol
ficoms
jbe
fld
call
cwtl
dec
cld
test
test
in
and
mov
inc
cld
or
push
dec
or
call
fdivrl
adc
lcall
add
ja
scas
mov
pushl
cwtl
inc
sbb
sub
ds
ffree
mov
stc
and
movsl
push
push
mov
push
add
incl
movsb
inc
push
pop
enter
sub
clc
sub
xchg
lods
ja
das
cli
incl
xchg
divl
enter
mov
je
cmp
aas
lret
cli
incl
cld
and
cwtl
out
pop
mov
hlt
mov
inc
loopne
jne
mov
or
jmp
adc
and
ja
xor
mov
jg
adc
xchg
movsl
sbb
lcall
scas
ja
inc
or
ret
fs
jbe
mov
sub
insb
lcall
add
lcall
dec
imul
xor
faddp
ror
loope
inc
int
movsl
js
xchg
lods
xor
jmp
repnz
test
popa
jno
out
mov
test
hlt
cli
packsswb
sbb
into
aad
icebp
cld
pushl
cmp
mov
and
test
push
fistpl
dec
cmpsb
adc
pushl
cli
das
pop
inc
imul
and
lret
push
cmp
mov
cmp
dec
das
and
aad
sbb
or
inc
pusha
fwait
adc
pop
sbb
dec
shl
incl
sbb
xchg
push
loope
add
dec
sahf
push
dec
and
mov
and
push
decl
lock
and
test
inc
jo
mov
sub
inc
icebp
loopne
call
cld
mov
sbb
sub
test
dec
outsb
push
je
mov
inc
std
jmp
insl
dec
inc
inc
jo
pop
push
xor
nop
loop
mov
hlt
jl
adc
js
xchg
outsb
push
into
scas
jo
out
ljmp
sub
sbb
fldenv
inc
cs
test
jle
decl
cmp
pop
int3
mov
jnp
xchg
arpl
pop
lea
cmp
out
cmc
imul
sub
xchg
inc
loop
pop
out
add
or
ljmp
sbb
push
sbb
jno
jl
or
fisubrs
call
cmpsl
lret
pop
adc
inc
clc
je
cmp
sarb
repnz
mov
mov
pop
adc
orl
mov
pop
mov
mov
daa
movsl
aad
in
xchg
mov
cmp
sbb
sbb
addr16
jae
pop
jmp
into
fidivs
and
test
loope
mov
and
dec
xchg
fiadds
inc
ss
dec
out
adc
lcall
lret
xlat
rcll
pop
inc
adc
call
call
and
movsb
mov
out
aas
mov
xor
stc
add
or
add
decl
pop
mov
fs
xchg
jo
in
cmc
xor
outsl
incl
cld
mov
mov
mov
pushf
mov
in
out
sbb
jbe
xchg
pushl
sub
or
jg
xchg
int
dec
test
cmp
pop
add
jg
sub
loope
sub
push
mov
adc
icebp
cmp
arpl
data16
loope
daa
xchg
and
jno
adc
sbb
out
scas
lcall
mov
dec
cli
rcrl
jmp
push
push
cmc
push
ss
pop
inc
aad
inc
xchg
test
mov
mov
fwait
mov
shll
sbb
dec
push
push
jns
loope
dec
mov
dec
sub
sub
incl
es
int
mov
lret
pusha
pop
push
jmp
xchg
jge
dec
dec
outsb
dec
sbb
or
pop
in
or
pop
cwtl
in
xchg
and
incl
xchg
fildll
jns
mov
pusha
sbb
dec
dec
jmp
movsl
xor
push
jne
movsl
add
imul
add
sub
or
or
jecxz
daa
ror
and
xor
xchg
pushf
pop
or
inc
mov
es
or
ljmp
push
or
outsl
or
idivl
mov
jecxz
test
xor
adc
xor
jg
pop
jb
xchg
pop
push
insl
int
bound
sub
lea
hlt
and
pushf
aas
pop
add
sti
or
cmp
jmp
adc
out
cmp
in
dec
out
dec
push
inc
fs
fs
mov
clc
jg
out
mov
xor
sub
stc
clc
insl
mov
sbb
push
lock
cld
fisubrl
and
js
adc
cld
jg
ljmp
test
imul
stos
loope
or
add
push
hlt
repnz
xor
hlt
pop
loope
and
push
jecxz
or
enter
xchg
lock
and
lods
popa
fimuls
jp
cli
jmp
xor
sub
add
repnz
ja
jle
ljmp
imul
push
jge
stos
or
pop
jmp
lods
sub
incl
sbb
out
ret
rorl
jmp
xchg
hlt
daa
or
mov
pop
cmp
push
out
mov
add
int
insl
decb
adc
in
mov
pop
mov
aam
jns
cmp
ss
insb
fmuls
adc
pop
push
testl
pop
into
out
jmp
adc
mov
fdivl
and
push
push
mov
xor
bound
ljmp
loop
mov
pop
lcall
incl
jge
call
fdivrs
sub
gs
or
sar
jmp
scas
push
sarl
loope
xor
add
push
movl
inc
cmp
sti
sar
ljmp
movsl
or
xor
jbe
mov
sub
jne
outsb
imul
xlat
dec
test
mov
jmp
cwtl
xor
sub
mov
in
sub
push
inc
mov
jno
sti
fcomip
decl
shl
sub
mov
daa
cs
pop
jmp
pmullw
ljmp
repnz
jp
add
cld
sub
hlt
push
imul
mov
nop
inc
xor
pushl
xor
aad
mov
or
mov
ror
push
inc
mov
cmp
cld
js
cmc
in
cmp
cli
jmp
sub
or
xchg
pop
push
scas
add
mov
lcall
mov
pop
xchg
shr
xchg
or
jg
lods
icebp
pop
cwtl
insl
shll
mov
mov
push
bound
leave
push
push
popa
ja
subl
pop
incl
out
mov
enter
xchg
test
xchg
xor
xor
cld
mov
decl
xchg
and
or
sbb
loopne
mov
or
cmp
rol
divl
ljmp
sub
mov
xchg
cld
insb
adc
leave
add
popa
mov
test
xor
lods
jne
fs
and
xchg
shlb
dec
add
cmp
lret
pop
add
fsubr
and
outsb
dec
pusha
call
ja
mov
icebp
and
jle
jecxz
sti
mov
popa
jl
jbe
insl
cmp
jne
ja
aas
jg
cmpb
push
ds
test
pushl
mov
or
push
fdivrp
cltd
aad
scas
adc
ja
jecxz
les
inc
pop
addr16
xchg
shll
sti
pop
mov
jns
js
incl
sarb
gs
enter
or
push
fwait
orl
mov
shrb
cmp
fildl
cld
or
adc
call
push
jg
addr16
inc
in
and
int3
outsb
daa
add
sub
scas
mov
sub
push
xchg
push
sub
roll
lods
jp
shl
xor
jecxz
std
ret
mov
jb,pn
loop
xchg
enter
jmp
je
stos
cmp
in
mov
inc
arpl
sti
pushf
dec
scas
inc
sbb
out
in
pushl
xorb
add
xor
push
jmp
or
incl
scas
loope
cwtl
push
xchg
cmp
jns
scas
xchg
aam
jo
or
sub
cwtl
rclb
mov
jg
xchg
insl
xor
sahf
ja
fwait
xchg
adc
or
int
cli
xchg
ds
insl
or
sub
addl
xlat
icebp
aad
jg
jnp
imul
mov
jmp
sbb
and
fcmovnbe
rcrl
push
push
dec
dec
push
jne
scas
dec
push
jg
jns
xor
jmp
mov
fs
aam
pop
gs
mov
jecxz
es
jmp
push
scas
mov
mov
jge
stos
mov
ljmp
es
cmpsb
jg
scas
sbbb
mov
nop
jecxz
cmp
je
sbb
pop
clc
incl
push
and
loopne
movl
pop
shll
lret
or
pop
imul
icebp
adc
pop
jg
out
mov
mov
add
clc
inc
icebp
enter
adc
imul
lcall
xor
xchg
ja
popa
pusha
mov
mov
ljmp
inc
push
xor
push
push
sbb
cmp
stos
fnsave
clc
mov
insb
insl
jecxz
add
out
mov
push
push
mov
ds
jg
int3
mov
aam
push
jmp
mov
int
pop
pop
mov
decl
neg
jecxz
mov
lods
push
imul
and
sarb
mov
imul
fcom
add
jbe
inc
mov
sub
std
xchg
enter
inc
shrl
sbb
jne
orb
dec
mov
and
xchg
adc
call
insl
shl
sub
loopne
rolb
push
jp
movsl
xchg
int3
xor
cwtl
sti
sti
pop
xor
lcall
mov
out
or
aas
inc
test
lret
outsb
ja
jmp
pop
loope
call
vaddsubpd
daa
and
test
call
out
cmp
dec
inc
fiadds
sub
insl
cmc
cmp
jae
hlt
pushf
es
out
xor
pushf
jbe
lahf
bound
jnp
loopne
pop
pop
jbe
inc
dec
lock
fst
ljmp
insl
enter
mov
or
push
pop
add
lcall
mov
aam
jge
push
sub
leave
push
mov
or
jg
jp
xor
in
shl
sarl
or
dec
pop
aam
loop
xchg
or
mov
mov
jbe
xor
cli
loope
adc
mov
call
or
xchg
adc
fcmovnu
sti
std
xor
mov
faddl
cli
jb
mov
lret
test
and
pop
mov
sub
decl
inc
mov
int
int3
cli
test
lods
outsl
xor
filds
add
lret
dec
repz
xlat
adc
in
sub
sub
incl
pop
iret
dec
push
jecxz
ljmp
adc
pop
sbb
xchg
call
adc
cwtl
iret
inc
repnz
divl
test
pop
cmp
ljmp
aad
jo
rclb
jg
and
pop
addr16
enter
jmp
ror
lcall
mov
jno
or
push
adc
fs
jge
sbb
add
call
lcall
adc
push
inc
dec
ror
divl
leave
insb
test
cmp
call
fcomip
and
adc
inc
popa
int3
lock
cwtl
sub
rcrb
mov
push
mov
andl
pop
clc
pop
push
mov
nop
testb
setl
repz
inc
or
ljmp
dec
aad
or
lret
hlt
pop
rcll
inc
inc
test
mov
push
lcall
decl
hlt
inc
rclb
jp
mov
inc
dec
aam
incl
mov
fistpll
out
ret
lret
and
hlt
mov
stc
mov
incl
leave
sbb
pushf
add
iret
sahf
repnz
sbb
add
jbe
sbb
adc
int3
popa
lcall
mov
ret
sbb
pop
add
scas
add
mov
jge
fsts
add
stc
inc
lock
pop
adc
fisubrl
xchg
fwait
jge
pushl
xchg
cmp
mov
mov
outsl
cmp
push
push
leave
sbb
mov
mov
pushl
cmpl
ljmp
pop
cltd
lock
iret
and
adcb
out
pusha
roll
int
lea
push
scas
jno
stos
cmp
mov
mov
ljmp
lahf
test
ljmp
mov
mov
jb
aaa
sub
inc
filds
cmp
cwtl
and
push
dec
xchg
sub
mov
and
jb
out
or
pop
call
out
and
lahf
mov
add
jmp
out
js
mov
pop
mov
pop
pusha
and
push
mov
lods
imul
xchg
scas
adc
pop
xor
add
and
or
inc
repnz
push
stos
mov
or
fcmovnbe
add
fwait
jo,pt
cltd
xchg
xor
call
inc
add
mov
test
xor
das
push
cltd
cmp
imul
icebp
xchg
pop
jmp
adc
loopne
les
push
sbb
pop
fstpl
fwait
lods
lret
sub
xor
pop
ret
dec
mov
lcall
jle
rol
xor
out
movsl
cmpsb
lret
cmp
or
test
cli
outsl
jmp
mov
cld
jp
incl
js
les
jecxz
ljmp
jbe
fimull
mov
xchg
sbb
arpl
in
fs
aad
aad
push
or
ds
adc
inc
sbb
mov
pop
sbb
xchg
or
inc
aad
xchg
imul
insb
inc
in
sahf
sub
mov
insb
mov
in
push
dec
xchg
push
call
dec
sub
rorl
sbb
and
je
jl
jge
sbb
xchg
add
xchg
adc
push
or
push
push
add
imul
mov
jl
call
adc
movsb
aas
outsl
movups
leave
pop
cwtl
test
data16
loope
xor
jb
mov
xchg
icebp
mov
sub
dec
repnz
sbb
insl
in
and
push
jmp
sub
cmp
outsl
xor
mov
mov
decl
aam
cmpb
cmp
mov
adc
dec
shrl
dec
repnz
int3
pop
sub
call
inc
add
pop
push
stos
daa
pop
ret
mov
inc
decl
pop
lret
outsb
add
rolb
inc
lea
call
mov
sbb
in
xchg
adc
enter
push
stos
and
pop
jecxz
sbb
mov
call
repnz
test
push
mov
mov
or
cld
ja
decl
divb
loop
dec
sbb
and
mov
pushf
xchg
popf
incl
ss
cmp
jb
push
out
or
in
push
mov
mov
pop
mov
ss
pushl
adc
sti
cmp
jp
cmp
mov
cltd
adc
dec
ljmp
hlt
and
adc
jg
add
adc
clc
repz
in
data16
call
cld
or
jbe
popf
dec
lea
push
mov
pop
adc
and
decl
imul
cmc
shll
add
mov
rorl
ja
fidivrs
mov
pop
xchg
icebp
or
ret
adc
not
push
dec
sbb
int
mov
sbb
sti
into
lret
inc
jecxz
gs
mov
loop
adc
jne
xor
call
add
and
add
decl
xor
xor
filds
fsubr
sti
pop
insb
cmp
jnp
or
test
jmp
repnz
and
faddp
test
lretw
lret
xchg
cwtl
inc
cli
cmp
mov
add
int
inc
mov
mov
dec
push
adc
mov
fcomip
sbb
xor
stos
rcll
jg
andl
push
mov
pop
add
je
add
mov
adcl
insl
clc
cmpsb
insb
cwtl
call
xchg
outsb
push
test
mov
adc
mov
mov
bswap
cmp
dec
lcall
mov
fwait
lret
add
out
clc
lcall
push
idivb
cltd
mov
push
gs
mov
mov
cltd
push
push
xchg
sbb
mov
ljmp
cli
call
rorl
sbb
je
or
cmp
jns
mov
jmp
rcl
scas
les
push
xor
pop
sbb
mov
jmp
jo
sahf
push
pushl
lahf
push
lods
in
xchg
lea
xor
aam
add
mov
bnd
jge
pushf
in
mov
lcall
fisttpll
cmovge
in
fdivs
pop
jmp
mov
inc
jno
arpl
lcall
cltd
push
add
dec
cmp
sub
int3
jmp
stos
sbb
mov
repnz
xor
fdiv
add
inc
or
xor
or
lcall
sbb
ret
xchg
xchg
xor
xchg
loope
fwait
or
push
cmpsb
push
mov
imul
ljmp
loope
js
ja
jle
stos
inc
sti
fwait
add
insl
mov
cli
fcmovnbe
mov
sti
xchg
mov
push
lcall
lahf
gs
lds
adc
mov
lahf
push
cmp
mov
scas
and
jecxz
pop
loopne
cmp
test
popf
inc
mov
call
ret
scas
mov
movsb
mov
jle
fisubs
pusha
ror
sahf
adc
xor
jnp
add
outsl
xor
call
pushf
pusha
inc
pop
cmp
lcall
pushf
push
mov
jns
in
test
js
insl
jge
sub
int3
es
fmulp
mov
daa
sbb
sbb
adc
cmpsl
dec
pushl
cmp
jbe
repz
imul
out
adc
incl
pop
jns
pop
mov
sahf
or
inc
mov
out
sub
daa
std
mov
pop
out
xor
call
repnz
divl
rolb
jg
xor
mov
hlt
add
mov
adc
mov
fnstsw
mov
xlat
lds
or
aad
dec
jge
fiadds
clc
jecxz
push
lcall
std
lret
cmp
add
pushl
sbb
mov
iret
test
push
addr16
dec
mov
jl
imul
in
mov
cs
out
js
dec
dec
lock
mov
das
mov
cmp
sbb
lods
fsubrl
std
pop
xchg
sbb
in
stos
jmp
clc
inc
sahf
inc
xsha256
cmpsb
push
jno
std
adc
jns
jg
sbb
mov
pop
or
cmp
add
lock
inc
aad
xor
push
push
lock
add
and
inc
sub
pop
mov
inc
idivl
hlt
movsb
lock
push
jecxz
ss
test
push
or
xchg
adc
and
pushl
or
sbb
iret
roll
xor
cwtl
inc
movsl
xor
jnp
ror
lret
lcall
pop
mov
in
ljmp
loope
pop
or
jbe
jl
xchg
jp
mov
dec
mov
std
call
sbb
ret
out
sub
jbe
pop
sar
fbld
xchg
mov
mov
sahf
and
or
insl
out
cmp
adc
call
enter
sahf
mov
adc
adc
movsl
push
lock
lds
mov
push
sbb
idiv
mov
pusha
mov
pop
xchg
push
pushf
clc
decl
lahf
dec
pop
sub
xor
dec
pop
iret
fisubrs
xchg
outsb
add
add
sbb
ljmp
xchg
and
scas
xchg
lods
out
out
loope
mov
lds
mov
mull
in
cli
inc
inc
repnz
call
out
ja
clc
xchg
ja
push
inc
sahf
xlat
daa
cmp
int3
xchg
icebp
bt
sbb
imul
xorb
aaa
sub
cmp
jge
xor
dec
pop
jecxz
mov
push
testl
jecxz
je
jecxz
push
cmpsb
call
push
jge
cmp
loop
sbb
xor
out
jg
sub
push
sub
mov
pop
sahf
mov
in
jge
pop
jbe
test
xor
mov
leave
daa
pop
lret
and
sahf
mov
adc
mov
add
mov
jae
fbstp
imul
push
int3
je
iret
movsl
inc
mov
dec
repz
sarb
xor
stos
sbb
call
dec
add
hlt
popf
mov
add
jno
mov
jb
das
shrb
mov
in
push
jl
xlat
imulb
js
add
adc
mov
dec
shlb
mov
jmp
inc
stos
fs
sbb
cmp
jmp
fisubrl
cld
test
sub
roll
outsl
into
icebp
or
in
and
decl
aaa
cltd
scas
ja
inc
add
push
imul
lds
push
jae
xor
idiv
pushl
dec
enter
rorb
in
outsl
lods
std
jl
xor
sahf
sti
or
jmp
mov
adc
adc
dec
push
bound
dec
cmp
cld
mov
ljmp
xchg
call
dec
cld
mov
paddb
dec
push
pop
nop
cmpsl
insb
add
jbe
loop
cltd
pushf
dec
clc
out
pop
pop
cmp
icebp
outsl
decl
sbb
inc
or
mov
cmpsl
lods
mov
ljmp
mov
lret
fdivs
cmc
ljmp
sbb
mov
jg
lods
jmp
mov
mov
jnp
mov
mov
or
pop
in
xchg
std
incl
adc
pop
and
enter
outsb
and
sub
fildl
scas
mov
std
stos
or
int
ret
and
incl
sbb
mov
movsb
stc
cli
mov
mov
jg
mov
lcall
out
mov
decl
xlat
out
jo
sub
sbb
leave
cvtps2pd
mov
data16
mov
das
data16
nop
lret
inc
pop
leave
pop
aad
leave
loop
insb
lret
xor
sub
mov
inc
jg
into
jmp
jp
in
inc
adc
es
or
jmp
add
in
jae
mov
pushf
leave
movsl
sbb
inc
mov
xchg
daa
jmp
fistps
sub
pushl
mov
scas
xor
xchg
xor
push
out
nop
adc
loop
and
push
rcll
jge
push
into
cmp
out
inc
mov
add
mov
inc
gs
ljmp
mov
pop
ret
inc
arpl
ds
inc
jnp
negl
clc
and
enter
lcall
filds
scas
adc
jne
pop
jo
cmpsb
mov
mov
sbb
incl
sub
sbb
out
stos
xchg
js
add
aad
in
mov
pushl
int3
test
cmpsb
hlt
fidivl
iret
sub
jbe
repz
scas
mov
test
push
push
cmpl
dec
sbb
maskmovq
daa
fcmovu
jmp
jne
cld
arpl
dec
fwait
fwait
pop
cmp
mov
mov
pop
lcall
int3
mov
out
mov
jecxz
mov
idivb
ret
mov
cmp
scas
xor
mov
xor
adc
mov
add
dec
pop
outsl
out
mov
mov
jbe
gs
xchg
ljmp
pop
and
or
into
int3
arpl
add
inc
lahf
mov
sbb
mov
cmpsb
mov
add
icebp
push
out
xchg
ljmp
push
add
jle
sti
fmuls
es
xor
xchg
xlat
add
push
lea
mov
cmc
add
push
dec
int
jb
shlb
and
decl
xor
jge
mov
pop
out
or
fwait
jns
cli
jae
pushl
mov
xor
pushf
lods
pop
adc
cmp
inc
adc
test
ljmp
pop
test
xlat
push
dec
repnz
jg
push
push
mov
insl
xchg
mov
pusha
std
mov
stc
movsb
movl
add
out
fcomip
ljmp
push
adc
out
adc
xchg
rcl
mov
jmp
das
or
push
jmp
sti
out
orb
sbbb
xor
inc
push
rcrb
jmp
pop
xor
lds
es
push
push
iret
mov
dec
dec
mov
mov
shlb
test
cmp
sub
dec
rclb
jbe
cmp
incl
mov
sbb
mov
dec
dec
es
sarl
cmp
push
jmp
insb
mov
dec
into
mov
in
cmp
jle
addr16
dec
jge
xchg
mov
jmp
xchg
out
aam
cmpsb
cli
in
push
inc
test
sub
xor
roll
stos
incl
lods
mov
sub
sub
das
xchg
imul
arpl
lcall
adcl
out
sub
loopne
push
xchg
sub
shlb
int
add
jmp
mov
cmp
inc
or
fs
in
sub
in
repnz
jns
mov
jmp
incl
outsl
mov
sahf
push
xor
test
frstor
mov
xor
mov
push
and
pushl
xlat
mov
xchg
mov
pop
outsl
push
pop
mov
lea
mov
stc
pop
jae
mov
xor
push
pop
gs
loopne
and
mov
pop
std
decl
dec
inc
dec
push
stos
cltd
add
mov
cwtl
push
adc
push
repz
jg
inc
testl
xchg
push
pop
idivl
cmp
xor
in
jg
mov
mov
and
adc
mov
ja
ror
lock
pushl
or
add
sbb
xchg
cmp
clc
bound
or
test
ljmp
out
and
decl
nop
in
inc
movsb
add
fsubl
hlt
shlb
inc
jbe
movsl
xchg
push
jmp
bndldx
sbb
mov
in
out
push
sahf
or
aad
push
lcall
lea
sub
cld
jne
pop
hlt
ret
fcoml
jg
test
into
and
pushl
sbb
xor
add
pushf
cwtl
imul
and
adc
inc
or
mov
xchg
les
jmp
jl
adc
xor
cltd
hlt
cmp
mov
lock
test
xor
mov
leave
out
fsub
stc
push
scas
mov
fdiv
pusha
cmp
and
and
dec
sbb
out
aad
lcall
mov
ja
mov
lods
sahf
outsb
sub
add
or
cmp
shrb
mov
decb
incl
mov
mov
add
cmp
inc
push
inc
push
dec
in
xchg
pop
add
cs
stos
movsb
mov
inc
enter
xor
pushl
cmp
lods
push
add
xchg
mov
aaa
movsl
dec
jl
xchg
mov
inc
mov
imul
std
pop
push
call
xchg
ss
sbb
shl
nop
mov
rclb
lcall
inc
xor
les
movzwl
into
add
addr16
int
add
das
adcb
sub
mov
test
jmp
mov
push
jae
jno
xchg
cmp
push
add
xchg
mov
ljmp
jns
mov
jb
cmp
mov
or
data16
add
das
out
dec
incl
adc
mov
xchg
xchg
lods
loop
int
decl
adc
in
out
mov
jno
pop
out
pop
xor
mov
mov
cmp
aas
inc
aas
cmp
sti
or
jg
and
mov
test
loope
test
adc
decl
or
pop
adc
push
sub
adc
in
inc
dec
in
mov
decl
cs
out
mov
pop
mov
push
xchg
fs
insb
sub
fidivrl
pushl
push
jmp
mov
aaa
inc
pop
inc
outsb
movsl
push
mov
fcomip
je
sarl
insl
mov
lcall
sbb
jne
cmp
jecxz
mov
and
mov
add
mov
cmp
decl
jne
pushf
sub
adc
hlt
cmp
fbld
fucomi
push
xor
xor
cmpsb
dec
inc
sbb
add
inc
cmp
add
push
cmc
int3
pop
push
mov
jg
push
scas
jb
sbb
add
addr16
jg
pop
lret
sar
dec
jge
shrb
es
les
mov
les
call
jle
cmp
jecxz
lods
data16
mov
repnz
inc
stos
fldl
lret
inc
xor
mov
push
pop
mov
cmp
lret
xchg
out
out
mov
fiadds
stos
stos
push
decl
inc
fnstcw
push
dec
imul
mov
pop
and
roll
jle
sbb
mov
cmp
ljmp
ja
jne
mov
ljmp
clc
addr16
aam
sbb
decl
mov
rclb
jb
cmp
call
cld
incl
mov
stos
lcall
rcrb
scas
faddl
call
mov
ds
dec
or
stc
mov
dec
aam
mov
mov
ljmp
shr
mov
sub
mov
popa
mov
add
fcomip
pushl
cmp
mov
movsb
xor
lcall
sti
out
aad
sub
push
xchg
cld
sub
pmaxub
xor
mov
mov
inc
adc
mov
popf
out
mov
jl
jb
mov
pushf
out
jmp
or
decl
imulb
push
fistpl
ljmp
imul
es
jge
and
mov
dec
fsubr
pop
lahf
in
pop
std
cmpsb
mov
sbb
cli
ret
cmp
out
sahf
pop
cmc
ljmp
loop
cmp
lea
fistpll
xchg
mov
mov
loopne
mov
push
jnp
fbstp
push
pop
mov
sub
dec
dec
mov
adc
call
mov
mov
sub
cmp
arpl
dec
sbb
dec
inc
add
sbb
decl
out
enter
test
pop
sub
xchg
or
mov
push
sub
jmp
jmp
jne
xor
nop
adc
data16
fcomps
mov
repz
into
adc
stos
mov
loope
dec
aaa
ficompl
iret
xor
add
incl
add
je
push
sahf
push
loope
cmpsb
out
addl
xor
or
sbb
out
sub
jmp
out
cmpsb
jecxz
out
or
push
cmc
mov
sub
mov
scas
add
iret
inc
xor
popf
iret
imul
cmpsl
sbb
fisubrs
dec
jnp
js
decl
sbb
mov
rclb
sub
scas
push
insl
pop
dec
jecxz
dec
dec
dec
jg
jno
out
xchg
push
add
mov
jne
decl
enter
cmc
pop
mov
gs
xor
push
xchg
lock
dec
cli
pop
hlt
push
aas
xor
mov
add
out
jo
js
xor
cs
jmp
daa
push
lahf
cmp
lahf
mov
rolb
adc
popa
ret
push
xchg
jmp
out
jmp
decl
bound
out
xor
inc
test
jl
cmp
pushl
sbb
mov
stc
jp
fists
xchg
es
repnz
lds
out
clc
lcall
stos
jecxz
xchg
sub
cmpsb
test
stos
lods
xor
ss
inc
push
fwait
notl
add
sub
mov
cmpsl
mov
ja
and
insl
sub
nop
lock
incl
mov
xor
mov
outsl
cli
bound
flds
cmp
adc
cmpsl
arpl
in
out
or
pop
inc
std
inc
rcrb
imul
lret
sbb
call
mov
in
lods
inc
repz
jp
aas
popl
pop
or
in
ret
test
leave
adc
call
dec
in
pusha
sub
rorl
lds
inc
jb
jg
jmp
add
bound
ljmp
mov
out
inc
or
push
hlt
das
sbb
push
int3
stos
lahf
shll
adc
pop
and
pop
out
and
xchg
mov
or
jo
ljmp
mov
test
dec
jl
xor
inc
das
lcall
inc
xchg
fidivl
mov
mov
aad
outsb
daa
dec
testb
push
inc
mov
mov
xchg
jg
xchg
mov
daa
incb
dec
mov
xor
add
cli
cmp
and
ss
cmpsb
negb
cs
mov
adc
mov
cltd
fnstcw
push
ret
inc
cld
ja
xor
out
aad
roll
sbb
sbb
stos
icebp
or
enter
lods
mov
jbe
push
jne
mov
lcall
pop
or
je
mov
lock
sub
ljmp
divl
cmpsb
int
xchg
jl
test
jmp
repz
mov
mov
mov
decl
pop
out
ja
push
scas
in
push
orl
mov
mov
ss
cmp
pushf
xor
lods
pop
dec
ds
js
pop
jno
movsb
and
jb
pop
clc
or
iret
scas
sti
xor
mov
je
test
xchg
mov
pop
xorl
xchg
xchg
lea
jae
loop
data16
sub
test
incl
test
xor
mov
insb
nop
adc
insl
shrl
xchg
push
aam
lds
or
adc
cmp
xchg
fildll
sub
inc
and
sbb
ljmp
out
mov
testl
js
mov
aaa
ljmp
inc
xchg
int
int3
jnp
jnp
gs
aad
cli
mov
shlb
in
cmpsb
mov
sbb
and
outsl
cmp
dec
faddp
mov
sub
sahf
inc
inc
cmp
ljmp
add
cmp
cwtl
push
dec
mulb
jl
mov
mov
imul
mov
inc
mov
dec
xor
cwtl
and
fiadds
je
cmp
fisttpll
mov
faddl
push
fidivl
push
aad
sub
das
push
jne
mov
cmp
pop
or
mov
jae
pop
sbb
jle
adc
lret
ds
cmp
orb
ret
mov
mov
sub
pop
cmp
lea
jle
loop
dec
xor
xchg
adc
ljmp
inc
xor
loope
mov
push
push
and
sbb
mov
cmpb
xor
scas
ret
mov
inc
fadds
xchg
jl
fimull
in
lcall
and
inc
cmp
mov
pop
scas
cmp
xor
hlt
lcall
mov
inc
cmp
mov
push
sub
neg
shrb
dec
jmp
ja
incl
or
arpl
cmp
cmc
jno
jne
outsl
dec
push
popa
xlat
push
mov
jno
fistl
adc
push
decb
decl
inc
or
les
sarl
stos
adc
inc
int
imul
sti
repz
jecxz
inc
or
pusha
jae
rcr
lcall
sahf
jl
xchg
enterw
stc
pop
xchg
jae
sbb
bound
lcall
movsl
dec
lret
pop
inc
push
test
das
pop
jne
fildll
adc
scas
mov
dec
add
mov
leave
ds
lock
xor
das
and
out
push
lods
pop
jg
cli
call
outsb
fstpl
xchg
enter
sub
lds
fs
dec
call
xor
pushl
sarl
push
mov
lds
lcall
jne
dec
mov
jmp
mov
fcomip
inc
jnp
call
add
out
imul
mov
xlat
cs
jecxz
out
leave
icebp
lcall
mov
mov
push
adc
xchg
out
leave
outsb
movsb
imul
xor
lcall
push
nop
mov
sbb
stc
stos
and
stc
sbb
dec
xchg
ss
scas
bound
ficomps
pop
je
mov
push
arpl
adc
cmpsl
sti
xor
inc
out
push
xchg
add
jmp
stc
sbb
sub
pop
cld
out
fstps
sbb
fmuls
mov
ret
mov
and
lcall
pop
push
and
push
cmp
daa
jecxz
pop
sbb
jb
jecxz
cmpsb
push
and
decl
ret
test
divb
lahf
dec
lret
jno
fnsave
lds
xchg
mov
addb
pushf
pop
test
fimull
adc
jg
add
clc
ljmp
sub
loop
or
pop
mov
or
gs
in
inc
mov
ljmp
pusha
fldcw
mov
mov
add
pushl
adc
insb
adc
outsb
sub
jb
ljmp
xchg
insb
adc
stos
sub
aas
lret
mov
sbb
xor
in
addr16
pusha
cmp
incl
pop
in
sti
xor
arpl
incl
ljmp
sbb
push
add
pusha
ret
dec
add
push
or
push
mov
push
call
insb
dec
cmp
cmp
fstp
gs
and
out
insl
xchg
lcall
and
xor
and
adc
out
into
and
popf
ret
mov
mov
negl
aad
push
mov
mov
cmp
lcall
sbb
jbe
je
lcall
or
pop
push
cmpsb
outsl
int3
test
incl
lcall
inc
mov
jae
jne
xor
gs
scas
and
fbld
ret
mov
mov
push
scas
pop
cmp
mov
sbb
shl
nop
loopne
gs
sub
dec
decl
push
addr16
int3
cmpsb
mov
loope
inc
iret
mov
adc
test
sub
int
or
and
call
pop
mov
bound
cmp
jecxz
jl
out
mov
mov
icebp
test
pushl
dec
mov
sbb
xchg
mov
pop
inc
fimull
dec
movl
in
out
pop
daa
lret
push
dec
fcmovne
or
sub
sbb
mov
mov
jnp
inc
lret
cmpsl
pusha
adc
pushf
iret
pop
iret
jl
or
call
andb
cmp
data16
dec
or
in
faddl
imul
decl
mov
flds
in
jle,pt
dec
push
jmp
pop
jle
cmp
mov
loope
or
mov
mov
add
inc
mov
cmp
shrb
and
stos
cli
in
mov
ljmp
loopne
je
scas
and
ljmp
movsb
cwtl
into
lds
sbb
and
push
mov
pushf
push
les
call
inc
mov
dec
pushl
pop
movl
arpl
mov
fucomi
mov
pushl
xor
sbb
push
in
mov
inc
push
add
or
cs
mov
popa
scas
fnstcw
fdivrp
ljmp
push
inc
es
pop
shrb
xchg
xchg
add
pop
les
and
in
jg
inc
movsl
jecxz
adc
aaa
and
and
roll
mov
stos
mov
sbb
cmpsb
mov
divb
dec
dec
in
mov
stos
sub
jns
push
inc
sbb
imul
pushl
test
cmp
adcl
inc
lock
pop
test
lret
ret
lods
clc
ficoms
mov
xor
push
test
in
xor
cmp
inc
ljmp
pop
add
xchg
cmpsb
push
fildl
push
dec
sar
in
insl
movsb
scas
xor
int3
jnp
ljmp
dec
dec
movsb
lcall
or
xchg
inc
addl
inc
arpl
insl
stos
mov
push
outsb
and
add
push
fsubl
jae
dec
cmp
push
cmp
mov
sub
decl
in
fimuls
inc
insb
test
push
subb
pop
and
mov
movb
cmp
test
dec
jno
and
xchg
push
jge
jns
sub
mov
mov
xchg
repz
mov
mov
jg
stos
mov
inc
inc
dec
call
or
lahf
inc
leave
sub
loop
cli
add
cmp
push
loop
mov
dec
dec
push
inc
fdiv
jg
das
ljmp
and
ja
push
cs
mov
xchg
pop
ret
xchg
js
xor
movsb
jb
jmp
and
push
aam
cmp
subl
xor
lea
dec
scas
pop
std
out
sub
xlat
jle
hlt
lcall
jp
mov
flds
mov
jmp
jg
mov
inc
inc
mov
outsb
jmp
jmp
jbe
cmp
cli
cs
mov
push
shl
outsl
aas
stos
in
pop
sbb
es
adc
call
and
test
hlt
out
and
mov
jg
scas
ret
adc
xor
jge
clc
cmp
addr16
decl
je
cmp
sahf
add
xchg
inc
xchg
shrl
in
xchg
outsl
in
sbb
int
push
mov
out
push
dec
xor
adc
push
shlb
scas
mov
in
xchg
sbb
addr16
xlat
sub
les
lcall
xchg
xchg
rorl
inc
test
pop
jbe
flds
inc
cltd
xor
add
sbb
add
call
cli
xchg
in
add
pop
push
idivl
push
jb
fcomip
pushl
inc
ss
inc
inc
sahf
sub
dec
inc
je
hlt
test
xchg
and
xchg
incl
sahf
mov
pop
xchg
push
sub
cld
inc
jge
push
sbb
ficompl
mov
sti
sbb
xor
idiv
and
mov
dec
imul
add
call
push
mov
jmp
mov
xchg
jg
int3
lods
mov
les
ljmp
push
sahf
dec
call
pop
add
push
imul
repz
sub
jnp
shrb
decl
cwtl
or
popf
mov
add
mov
push
xchg
jae
xor
cwtl
fmuls
dec
jnp
out
cli
call
inc
sarb
js
test
jo
loop
mov
ss
pop
inc
jmp
push
lods
push
sbb
popf
inc
lods
push
cld
adc
lret
movsb
add
faddp
rcrl
push
orb
ljmp
mov
pushf
xor
scas
adc
mov
pop
aas
data16
jmp
mov
inc
or
xchg
or
repnz
xrelease
fsubs
lods
test
call
adc
fsubs
test
push
lahf
mov
push
and
stc
movsb
mov
sub
xor
inc
push
adc
sbb
xor
sbb
xchg
pop
dec
xlat
xchg
adc
lret
mov
mov
jo
ficomps
dec
ss
popf
mov
call
call
into
gs
jp
xorb
sbb
push
cmp
lock
sub
xchg
lahf
dec
out
cmp
divb
lods
jns
call
jl
push
xchg
cmpsb
ret
push
mov
pushf
adc
cmpsb
cs
nop
idivb
pop
lods
test
incl
push
push
or
mov
add
stc
mov
ds
in
sub
push
jg
inc
and
mov
mov
scas
enter
ss
pop
inc
leave
jo
fwait
adc
addr16
incl
xor
push
mov
cltd
push
shrb
xor
imul
ficoml
js
decl
mov
jecxz
jnp
pop
xor
ljmp
ljmp
lret
inc
movb
movsl
fldenv
sub
or
data16
int3
fstpt
lret
insb
pop
dec
mov
pushl
pop
cwtl
andl
mov
jecxz
cmp
repnz
int3
or
ljmp
in
insl
lahf
mov
xchg
cmpsb
ss
pop
int
mov
sahf
cmpsl
push
xor
mov
adc
pop
fcomip
cmp
pop
adc
loopne
in
dec
sub
rcrl
inc
jmp
ljmp
xchg
out
cli
cmp
lods
filds
jl
pop
shll
les
push
jmp
int
outsl
fs
mov
sbb
shrl
shlb
lea
fs
rclb
ret
lret
mul
ljmp
mov
shlb
ljmp
push
ss
iret
out
push
out
insb
scas
jns
int
push
int
pop
cld
jle
jae
jnp
incl
push
jo
pop
add
ret
dec
ret
xor
xchg
outsl
stos
cli
jmp
in
test
push
dec
pop
or
pop
mov
and
ljmp
repnz
push
sub
mov
and
or
in
jle
inc
or
ja
xchg
sub
decl
adc
mov
mov
data16
movsl
test
mov
push
or
fisttpll
decl
repnz
inc
dec
cmp
pavgw
xchg
or
pop
jge
adc
mov
stos
test
lcall
sub
push
leave
je
les
lock
stos
faddl
mov
mov
clc
lcall
cmp
xchg
jno
inc
js
mov
add
or
mov
std
inc
mov
test
stos
xchg
sbb
cld
pop
out
aaa
out
add
xchg
cmp
pushf
inc
xchg
jno
fsubl
push
dec
les
cmp
cmp
xor
jnp
and
jg
jns
mov
xor
cmp
cmp
shrb
ss
das
ret
jb
std
jmp
cld
sbb
push
xchg
push
jne
adc
pop
cmp
pushf
call
xor
sbb
mov
nop
mov
inc
dec
movsb
jp
push
dec
pop
ret
in
ds
imul
loopne
test
movsb
sahf
fildll
xlat
int
mov
aaa
fisttpll
mov
mov
adc
pop
call
push
mov
call
ds
test
push
pop
lahf
rclb
lcall
dec
sarl
jle
leave
or
scas
nop
adc
and
and
and
stc
rclb
sar
push
std
jmp
xor
aad
xchg
ret
js
push
je
push
sbb
jmp
inc
and
dec
stos
mov
sbb
push
mov
mov
stos
and
push
outsl
ds
incl
ret
in
push
sarb
mov
xchg
popa
fwait
movsl
mov
xchg
dec
sahf
pop
jnp
gs
lret
push
nop
cli
call
or
and
fisubrs
mov
rorb
mov
or
add
in
sbb
sahf
sbb
outsl
cld
out
pop
sub
jg
and
sub
incl
loope
cwtl
and
and
or
pop
and
push
out
sub
or
subl
pop
push
xor
push
outsl
stos
out
fcmovb
je
pusha
gs
call
std
push
into
into
push
popf
inc
movq
fisubs
jo
jle
cmp
call
stos
mov
das
clc
pushl
xchg
xor
test
fcoms
adc
inc
rorl
add
jge
out
mov
sub
cmp
jno
movsb
adc
jb
and
hlt
jbe
lret
fldenv
pop
mov
sbb
jb
lods
aaa
je
jne
mov
mov
dec
pop
and
mov
inc
push
lods
mov
jg
cmpsl
notb
pop
or
ds
mov
aas
push
ret
or
scas
cli
mov
out
cmp
xchg
and
jns
and
xor
mov
cld
fmuls
mov
imul
pushl
pop
ds
and
cmc
data16
in
jp
scas
dec
push
sbb
pop
adc
aad
shrb
adc
cmp
lcall
dec
sbb
lcall
fcompl
xchg
push
adc
aas
loop
and
sbb
rcrl
mov
add
add
cmpb
test
add
subl
mov
in
pushl
cwtl
dec
add
adc
leave
jp
lahf
les
jmp
dec
xchg
adcb
fcos
inc
call
movsb
add
fst
icebp
mov
jle
xor
out
aam
mov
xor
mov
cmp
ja
lea
mov
bound
inc
subb
pushl
movsb
xchg
pop
les
xchg
ljmp
std
pop
push
rolb
cld
mov
dec
jbe
inc
or
add
sbb
mov
out
mov
call
loopne
push
insb
push
push
mov
aas
dec
lods
xchg
lcall
mov
inc
dec
pop
add
pop
mov
ljmp
stos
aaa
and
int3
pop
adc
xor
insb
sub
fdivs
fnstcw
shlb
jbe
repnz
lock
ljmp
pusha
and
ja
cmpsl
push
inc
out
inc
repz
in
cmp
popa
add
out
dec
incl
js
hlt
push
push
sbb
lods
xor
push
xor
fsubr
out
aas
cs
jg
mov
call
loopne
mov
add
push
ja
call
inc
insl
jmp
jns
mov
fistps
fisubrl
jecxz
inc
call
cmp
push
fsubs
sbb
mov
dec
push
repz
aam
fldl
inc
lahf
push
popa
mov
enter
cltd
mov
insb
jg
iret
ret
addr16
aad
and
pushl
pop
ficompl
mov
adc
dec
stos
adcl
lret
das
insl
es
lcall
stc
fcoml
idivl
cmp
lea
stc
mov
nop
test
cmp
sahf
incl
or
xlat
scas
adc
dec
or
add
popf
cmc
ds
mov
xchg
cltd
cmpsl
not
dec
imul
je
push
data16
popa
lcall
scas
xchg
sub
xabort
add
and
xchg
cld
bound
xor
jmp
shrb
sbb
jo
mov
and
sub
mov
iret
xchg
mov
das
cmpsl
and
cmpsb
clc
or
xchg
sbb
fwait
and
call
pop
add
push
sub
jb
rcll
push
sub
cli
mov
mov
cmpsl
clc
cltd
pop
jecxz
insl
and
mov
out
adc
mov
cwtl
sti
mov
or
es
xor
leave
xchg
movsb
test
cmp
cld
push
pop
pop
push
clc
and
xchg
mov
int3
inc
sub
or
xchg
int3
dec
push
imul
sbb
lret
ljmp
je
xor
ds
sar
push
jge
into
lods
push
xor
and
mov
adc
lahf
mov
lcall
push
jo
popf
les
inc
push
inc
jb
jmp
jl
rol
sbb
push
popa
jle
jno
arpl
cltd
aad
movb
mov
test
test
mov
ret
das
js
outsb
sarl
es
jecxz
lods
clc
sti
decl
call
ret
dec
mov
add
subb
mov
mov
pop
push
jge
lcall
rcl
mov
cmp
inc
in
pop
ds
push
sbb
dec
rcrl
lods
test
cmpsb
jns
es
push
pop
arpl
mov
jmp
or
pushl
repnz
rol
mov
mov
jg
sar
decl
or
sub
adc
inc
mov
insl
insl
ret
cmp
decl
mov
in
pusha
sub
xor
addr16
andb
inc
or
push
stc
movsl
popa
das
nop
rcrl
outsb
out
aam
xor
sbb
cmp
decl
xor
notb
mov
sbb
lahf
data16
jmp
jnp
aad
pop
out
sti
and
call
test
xchg
push
xchg
roll
dec
or
aad
pop
dec
mov
adc
add
jl
fwait
pop
andl
mov
cmp
dec
or
jbe
pop
cmp
xor
test
ljmp
jns
cmp
fmull
call
jnp
sti
call
inc
in
ffreep
jb
nop
push
loope
dec
pop
mov
add
jmp
iret
or
sub
and
out
pop
cltd
icebp
nop
jl
test
sub
cld
std
mov
out
cli
jmp
xchg
rcrb
push
jno
lret
sbb
inc
adc
xor
loop
imul
mov
xchg
imul
out
adc
repz
dec
jmp
mov
repz
mov
loop
cmp
outsl
decl
and
cmc
mov
outsb
push
add
cmp
mov
push
fucom
pop
test
xor
inc
push
sbb
bound
cmpsl
jbe
repz
clc
ljmp
pop
pop
fists
aas
sbb
xchg
sub
stc
mov
clc
ljmp
sbb
aam
js
and
add
sar
ljmp
incl
outsb
pop
sbb
mov
ret
adc
jecxz
decl
pop
les
cmpsb
bound
es
clc
dec
fimull
and
test
fs
ljmp
cwtl
cmp
mov
fists
aad
incl
popl
aas
inc
out
mov
fsts
xor
out
add
enter
imul
pushl
orl
sbb
int3
add
pop
jno
clc
int
mov
nop
les
decl
or
mov
popf
pop
mov
and
mov
jmp
mov
adc
jg
or
ljmp
sub
add
pop
popf
loop
inc
adc
jmp
js
fstpt
cmp
mov
iret
orl
dec
in
cli
pop
repz
aas
push
sahf
out
push
push
xor
pop
mov
aad
push
add
cmpsb
cmpsb
mov
or
lock
lcall
pop
divb
mov
jae
dec
sbb
inc
lea
pushl
movsl
loope
push
mov
mov
mov
fs
xor
loopne
mov
mov
pop
adc
fwait
xor
call
ja
or
ret
inc
xor
lock
cmp
xor
mov
inc
mov
jae
jnp
push
outsl
xchg
imul
or
jmp
fistps
dec
loope
mov
cs
xchg
sbb
pop
mov
pop
stos
mov
xor
clc
or
xor
and
lahf
pushl
ret
cs
pop
push
je
jg
and
xchg
fldenv
out
ret
call
bound
hlt
mov
sbb
mov
xchg
or
jae
cmp
inc
mov
pusha
lods
jae
movsb
out
test
in
jne
pop
jl
lcall
ljmp
hlt
add
mov
add
outsl
jle
jmp
inc
shrb
mov
mov
and
roll
loope
movsb
sbb
ret
sub
add
push
or
push
imul
mov
push
in
xlat
mov
mov
cmpsb
push
add
jg
cmp
fnstenv
push
addr16
jns
icebp
push
int
and
mov
jae
cmpl
jns
clc
insl
movsl
sbb
and
fdivp
jle
pushl
test
adc
push
pop
rorb
inc
push
mov
enter
loope
jmp
jae
loopne
mov
imul
cmp
pop
lods
outsb
mov
add
enter
xor
xchg
inc
stc
push
daa
fs
and
cmc
hlt
cld
shlb
inc
jnp
pop
jecxz
cli
fwait
pop
mov
pop
sbb
das
and
mov
cltd
cmp
ljmp
popl
and
push
mov
adc
pop
loop
jnp
out
sbb
cmp
in
jne
sbb
fwait
jge
push
push
dec
gs
jmp
sub
cmp
jmp
sbb
hlt
inc
orb
ss
shrl
fldenv
out
mov
inc
jmp
xchg
aaa
sub
sub
mov
aad
in
inc
enter
xlat
mov
sub
push
std
inc
mov
pop
push
pop
pop
xchg
xchg
add
adc
mov
jl
andl
gs
outsb
ret
stc
pop
jnp
cltd
fstps
ret
addr16
incl
and
mov
xchg
dec
fidivrs
fcmovnb
jno
sbb
mov
fs
pinsrw
loopne
push
cmp
add
sar
ljmp
jl
repz
jle
dec
ret
test
scas
test
push
in
js
cltd
xchg
js
ss
loope
cmp
jns
ret
mov
pop
sub
std
loope
les
cmp
pushl
incl
scas
aam
dec
adc
out
cltd
out
mov
outsl
and
pop
call
jl
xlat
cwtl
int
and
cmc
jmp
aam
dec
add
fsubp
mov
out
push
adc
cld
mov
ret
fstps
dec
xchg
mov
or
cs
cmp
std
in
pop
aas
sub
xchg
add
push
icebp
push
mov
call
jp
dec
push
push
cmp
in
adc
jmp
mov
lcall
call
call
in
sub
sbb
or
mov
push
fidivrs
or
inc
cmpsl
mov
push
sub
add
jmp
mov
mov
pop
push
xchg
sub
push
ss
das
rclb
jl
cmpsb
je
insb
mov
int3
lcall
jmp
sub
push
jns
imul
push
mov
lock
subl
dec
dec
mov
popf
dec
pushf
add
fidivrl
mov
das
push
stos
sbb
sub
jmp
gs
jmp
repnz
iret
mov
mov
push
mov
test
dec
dec
jecxz
fdivs
mov
int3
xchg
inc
and
jnp
out
lret
aaa
icebp
mov
daa
in
and
test
and
pushl
loopne
sbb
pop
pop
inc
out
andl
into
scas
shrb
fiadds
inc
call
mov
clc
mov
mov
les
inc
sbb
shll
or
ljmp
enter
pusha
les
popf
pop
push
outsb
xor
inc
call
add
aaa
cmp
incl
xchg
sbb
pop
mov
cmp
push
mov
ljmp
push
mov
in
dec
fisubs
mov
pop
cli
in
pop
std
mov
aaa
std
push
dec
fadds
and
adc
xor
in
jae
call
mov
jb
fdivrs
clc
data16
jnp
dec
dec
shll
jmp
divb
in
xchg
xchg
jp
mov
movsb
pusha
xor
fcompl
icebp
pop
mov
dec
add
and
jo
nop
addr16
negb
mov
push
imul
cmp
dec
ljmp
push
dec
aaa
cld
incl
es
lds
jne
xchg
jnp
out
cs
pop
lcall
cld
es
pop
sbb
push
or
inc
mov
pop
sbb
dec
test
jmp
mov
shrl
enter
out
mov
cmp
rcr
fstpl
in
leave
pop
cmp
cwtl
push
xchg
jmp
movsb
loope
push
mov
mov
and
cmp
push
cmpsl
cld
movsl
dec
ds
sarl
decl
pop
xor
lcall
fildll
push
stos
push
cmpl
inc
xor
fdivrs
lret
std
lret
gs
add
aam
out
insl
insb
push
sbb
aam
add
decl
lods
out
ss
leave
jae
out
fsubr
out
push
ficoms
cmp
notl
inc
daa
xchg
mov
stos
inc
jmp
sbb
addr16
in
push
inc
xchg
pushl
pop
pop
jne
and
dec
add
clc
fs
or
mov
stos
cli
movb
adc
je
push
xorl
cmc
dec
rclb
lock
movsb
pop
lret
pop
fildl
iret
jmp
xchg
add
sub
test
cmp
decl
xchg
mov
xor
pop
aam
mov
in
pop
mov
lcall
cld
ljmp
lods
and
mov
dec
pop
int
repz
dec
lret
scas
call
xchg
dec
mov
mov
gs
es
inc
adc
outsb
inc
cmp
jl
cmp
mov
inc
test
shll
mov
add
loop
sub
call
push
add
loop
mov
ss
push
or
stos
mov
xchg
movsb
xlat
fimull
das
pusha
shl
outsb
shlb
pop
cli
cli
xchg
cmp
arpl
dec
jb
mov
sbbb
ss
loop
sbb
notb
ror
out
stc
insb
call
jmp
icebp
outsb
or
mov
sub
test
cmp
sbb
das
and
fstpt
ja
or
cmp
mov
add
stc
jns
cwtl
jge
inc
ja
pop
adc
lahf
mov
cmp
xorl
mov
sbb
or
outsl
xor
test
sub
sbb
lcall
lret
add
rol
cmpsl
shl
xor
and
cmp
or
pop
inc
xorb
pop
inc
call
mov
test
enter
or
ret
or
cmp
js
incl
mov
pop
mov
and
inc
repz
cs
pop
and
or
mov
lcall
inc
mov
jge
mov
shl
xchg
cmpsb
in
mov
aam
mov
rclb
movsl
pop
into
aam
scas
sahf
mov
cmpsb
xchg
subb
mov
pop
lcall
push
arpl
loopne
jl
cmp
arpl
and
leave
ja
lret
cwtl
sti
and
in
inc
mov
push
or
sbb
frstor
icebp
jnp
and
dec
xchg
scas
decl
push
sub
xor
insl
sahf
push
sbb
rcl
push
hlt
std
incl
stc
hlt
pushf
jb
push
scas
pushf
test
add
and
and
inc
dec
das
aam
adc
daa
adc
xchg
lcall
loopne
faddl
push
test
jnp
dec
cmp
lcall
adc
mov
and
inc
js
ret
jbe
pop
push
out
push
pushf
pusha
lods
cli
enter
jnp
cld
call
sti
mov
dec
jecxz
fldt
mov
mov
dec
data16
rorb
mov
dec
ret
punpckldq
test
mov
sahf
test
arpl
mov
push
in
shlb
cli
sbb
push
mov
subb
sub
ds
in
pop
xor
ljmp
xor
loop
loop
or
icebp
fbstp
lock
jg
ja
mov
repz
pop
cmpsb
mov
and
stos
ret
stos
add
push
movsl
jne
sub
clc
jmp
es
imul
lea
fnstsw
adc
mov
push
sbb
scas
push
stos
ret
into
or
decl
imul
call
lods
mov
cltd
xchg
lret
mov
pusha
jge
cmpsl
incl
cld
test
lods
sub
adcb
inc
xor
dec
sub
jg
push
fisttpl
adc
enter
bnd
lea
lcall
push
outsl
fsubrs
lea
jno
mov
adc
notl
push
das
adc
xchg
int3
ja
sbb
xchg
mov
fisubrl
mov
xor
in
bound
dec
jns
jl
gs
cmp
mov
jmp
imul
inc
xchg
push
xor
sub
stos
loop
add
pushl
addl
push
jae
into
xor
pop
jecxz
test
fbld
pop
add
mov
es
add
imul
ljmp
call
push
jb
jl
imul
sub
xor
sbb
rolb
cmc
iret
push
cld
jns
push
lea
mov
pushl
cld
mov
mov
dec
out
insb
lahf
push
test
add
jp
adc
decl
je
or
sbb
xlat
pop
rolb
cs
push
sbb
push
dec
mov
pop
call
cmpsl
lcall
pop
jp
and
gs
es
cmp
dec
aaa
je
jae
mov
dec
cmp
dec
adc
pop
mulb
jmp
jmp
insl
cwtl
xchg
adc
std
jmp
mov
cmp
sbb
xchg
cmp
push
mov
cmpsb
xchg
popf
push
mov
xlat
fcmovnu
push
insb
jmp
movsb
inc
int
jnp
ja
sti
push
add
call
hlt
dec
cmpsl
stos
mov
jg
out
in
jne
dec
ret
cmp
imul
lret
mov
xchg
inc
das
cld
mov
pushf
sbb
inc
out
push
aaa
cmp
fs
lock
and
mov
lock
mov
sbb
inc
ljmp
sar
lcall
imul
sarb
lahf
pop
rorb
lcall
clc
lret
cmp
icebp
cmp
popf
jne
mov
aam
jne
in
add
sbb
adc
iret
lds
push
je
push
or
adcl
jns
push
loopne
fdivs
sub
mov
cmp
jge
and
dec
pop
sahf
dec
mov
jmp
xlat
and
jns
adc
sbb
or
test
call
int3
lock
jge
ja
cld
push
lcall
jo
inc
pop
xor
mov
ljmp
inc
jmp
sbb
mov
and
cmpsb
fwait
xor
jnp
jmp
sbb
sbb
adc
jnp
mov
gs
lock
nop
add
icebp
loopne
test
in
pusha
jl
cmp
lahf
lock
cli
ds
xor
dec
xor
mov
sahf
and
push
shll
loope
fistps
cltd
sbb
jno
add
pop
call
cmc
test
pop
out
jmp
xor
add
mov
loope
add
negb
filds
mov
or
ljmp
sbb
mov
dec
es
jmp
ret
add
rcrl
inc
xchg
ret
xor
mov
int
fbld
mov
sahf
arpl
lcall
incl
jnp
imul
stos
stos
dec
roll
lea
sbb
lcall
insl
jge
mov
xlat
adc
mov
cmp
cmc
mov
outsb
imul
add
dec
sbb
stos
lds
loop
fcomps
mov
fwait
dec
lcall
pushl
cmp
imul
sbb
or
pushf
ds
cmp
sti
rolb
add
sub
mov
dec
xlat
pop
and
mov
cld
pushf
mov
decl
push
movsb
adc
mov
fimull
loop
daa
pop
sub
add
adc
mov
xor
jmp
test
lret
in
sub
shrl
lcall
cld
insb
lods
pop
arpl
lock
lret
pop
test
cs
dec
mov
insb
je
sar
lcall
push
pusha
fisttps
push
das
jmp
mov
icebp
pop
xchg
push
mov
cmp
sbb
fdivl
mov
jns
jl
std
xchg
cmp
mov
jmp
test
sbb
shrl
cltd
mov
fidivrl
out
sub
mov
fdivrp
js
enter
lds
lret
aaa
call
ficoms
mov
aad
mov
in
jp
out
lods
call
xchg
mov
push
aaa
xchg
inc
push
mov
loope
std
jb
cmpsl
cmpsb
mov
ljmp
incl
xchg
bound
adc
mov
clc
cltd
jnp
mov
mov
dec
sbb
ljmp
insl
ss
in
fidivs
fmull
cmp
pop
hlt
jmp
icebp
inc
test
pop
jbe
mov
nop
lcall
into
in
ret
lcall
pusha
jecxz
fists
add
int
imul
pop
inc
cmp
sbb
mov
pop
and
sbb
push
inc
mov
call
stc
loop
and
mov
pushl
fcmovnbe
pop
pusha
cli
imul
out
outsl
clc
jae
sbb
incl
xor
or
cld
adc
dec
cld
fistps
xchg
stos
idivb
jmp
xchg
mov
mov
out
and
stc
mov
cltd
outsb
mov
dec
adc
andl
movsl
cmc
fsubs
mov
add
mov
lods
jg
daa
push
es
ljmp
push
in
leave
stc
xchg
sbb
out
clc
and
lods
ja
or
xchg
adc
mov
lcall
les
imul
add
mov
xor
xchg
dec
and
mov
adc
shll
inc
fs
mov
imul
loop
aaa
push
rol
dec
sbb
jle
mov
mov
pop
add
out
sub
sub
popf
mov
lret
loop
adc
mov
ja
xchg
rclb
push
ljmp
push
and
mov
std
push
loop
xor
andps
lcall
cmpxchg
jb
mov
pop
je
add
outsl
clc
outsl
jbe
inc
xchg
pop
addb
cmp
inc
inc
jo
shrl
fstpl
out
out
push
call
mov
push
lods
ds
dec
rcll
fadds
jg
data16
xor
aam
or
decl
adc
andb
stos
cmpsb
jge
adc
lcall
dec
pop
sbb
fdivs
pusha
mov
testb
dec
push
les
js
dec
jb
jnp
decl
test
test
movsl
sahf
mov
stos
adc
dec
pop
dec
incb
cmpsl
mov
dec
lahf
xor
lcall
pop
or
out
mov
pop
cmpsl
xor
sbb
call
ja
mov
test
xor
mov
xchg
sub
xbegin
imull
call
cmp
sub
nop
mov
xchg
mov
mov
inc
test
cld
sahf
push
scas
cli
fdiv
sbb
pusha
pop
leave
jl
push
cld
icebp
xorb
sti
mov
cmp
loope
mov
sub
push
clc
sbb
or
in
fwait
push
lret
pop
fcoml
mov
in
xlat
xchg
outsl
mov
cld
xor
arpl
lods
mov
gs
inc
mov
sub
add
je
cmp
dec
mov
lods
es
and
xchg
push
and
cmpsb
decl
dec
jb
imul
pop
js
xlat
sub
add
cmp
push
dec
jbe
jne
decl
data16
mov
mov
fmulp
push
mov
jg
lcall
outsl
fimull
lods
dec
gs
rcrb
push
sbb
decl
shll
jecxz
jno
sbb
enter
in
xor
out
or
mov
pushl
cs
lahf
cmpsb
gs
pop
cmc
sub
scas
fdivs
pop
sbb
add
stos
daa
cmpsb
addr16
xor
imul
lcall
out
into
cmpsb
ret
aaa
in
lock
sbb
leave
push
fisubs
xor
or
call
mov
mov
jns
stos
inc
aas
pop
sbb
mov
xchg
lcall
mov
cmpsb
cmpsl
test
jmp
ljmp
jb
xchg
push
ljmp
clc
push
jae
icebp
nop
ss
mov
xor
jmp
jge,pn
jno
dec
call
loopne
js
lock
xchg
mov
dec
lcall
and
fstpt
fldz
clc
jb
das
mov
push
dec
fidivrs
lock
or
jp
inc
das
rcr
out
push
cwtl
lcall
cltd
push
push
ret
sub
dec
jmp
cmp
lods
fisttpl
addr16
into
popa
xor
notb
fidivs
lret
and
xchg
mov
push
or
and
loopne
jmp
add
addr16
inc
jbe
addr16
stos
subb
add
pop
dec
movsl
push
nop
inc
ret
out
sub
push
int3
in
pop
cmp
lcall
fldl
mov
fdivr
popf
push
dec
clc
cmp
imul
test
pop
lock
shl
pop
xor
loop
xor
je
pop
fmuls
xchg
call
jp
ss
out
fldl
sub
push
fistpll
sub
jecxz
decl
out
mull
imulb
mov
cmc
xor
jl
mov
pop
outsb
loop
and
jmp
ss
push
imul
jbe
add
mov
stc
mov
aaa
cld
decl
add
pop
ret
add
paddw
ret
idiv
jo
loope
jecxz
adc
mov
aas
or
dec
mov
data16
cmpsl
ret
mov
pop
jmp
push
and
inc
insb
je
jns
repz
push
push
imul
push
insl
jmp
mov
mov
insb
inc
push
in
lods
nop
mov
daa
xchg
insl
sub
std
das
sar
jp
jmp
scas
in
ja
xchg
mov
leave
test
jno
pushl
jbe
jo
ficoms
sbb
pop
cmp
lret
into
lods
sti
jbe
push
out
repz
icebp
sub
push
pop
rolb
iret
pop
shl
into
out
push
mov
dec
and
popa
push
xchg
jmp
push
fstpl
pop
add
dec
test
fdivp
test
push
cs
jmp
stos
mov
dec
ljmp
test
data16
jnp
icebp
in
jle
xor
inc
sub
jle
mov
mov
cmp
or
data16
jae
nop
and
ljmp
testb
hlt
mov
ljmp
dec
je
adc
scas
xor
stos
push
inc
cmp
xchg
and
inc
pop
push
and
scas
xor
mov
lcall
xchg
sbb
daa
cmp
xchg
and
pushf
leave
dec
xchg
mov
push
mov
jmp
test
or
push
lock
sahf
adc
mov
fs
sub
stos
lcall
hlt
sbb
mov
jmp
ss
flds
dec
lea
mov
mov
rdmsr
or
nop
ss
ret
jmp
mov
dec
jmp
lock
lds
add
test
jmp
into
repnz
fsubl
and
push
mov
cmp
add
jg
cli
popf
push
jae
pop
jecxz
dec
and
sti
inc
jg
dec
mov
sub
push
lock
mov
loopne
lcall
lods
jmp
mulb
pop
fs
sti
push
xchg
cbtw
dec
aaa
jp
jne
sbb
call
or
mov
xchg
stc
xchg
mov
cmpsb
cmp
inc
pop
jp
and
inc
or
jmp
aad
and
test
inc
mov
fsubl
cmpsl
or
adc
insl
stos
inc
dec
inc
pop
mov
jno
fwait
pop
push
jg
adc
push
cld
call
mov
pushl
dec
pushf
push
loope
push
addr16
xadd
sub
fisubs
in
pop
lret
push
lods
pop
decl
cmc
lds
fwait
jmp
daa
cmpsl
stc
jnp
xchg
bound
cmpsl
pop
clc
bound
addr16
fdivp
insb
mov
outsb
and
jno
inc
push
ds
and
xlat
enter
cmp
cli
call
imul
jl
mull
jg
pushl
xchg
rcrb
imul
push
pop
jb
mov
xchg
je
sbb
cmpsl
insb
out
pop
movsl
pop
ret
shll
fidivs
mov
das
jmp
div
in
mov
push
fcompp
scas
and
lcall
sar
fwait
das
jle
add
mov
pop
push
fcoms
call
push
out
cli
fisttps
insb
adcb
push
pop
xchg
rorb
mov
pop
repz
das
sub
mov
jg
aas
xor
jmp
jg
test
mov
push
mov
pushf
scas
dec
push
add
cmp
std
jge
add
add
or
in
ret
aam
in
xor
push
mov
push
cld
mov
shll
call
leave
out
mov
mov
jg
or
bound
lret
mov
scas
subl
ljmp
shlb
push
dec
mov
out
out
testb
shlb
les
pushl
lock
lcall
ja
rorb
into
pop
fildl
std
arpl
xchg
sti
cmp
pushl
aam
sbb
xchg
loopne
lret
mov
dec
cwtl
call
pop
in
mov
aas
inc
inc
movsl
fbld
call
dec
adc
xor
xchg
push
in
test
jle
fcomip
stc
loope
imul
insl
dec
mov
dec
insb
jns
and
in
decl
aam
jne
dec
stc
out
sub
xor
push
sbbb
lds
sub
cld
jmp
push
add
dec
ss
fs
pop
sub
push
icebp
dec
incl
sub
mov
sbb
cmp
dec
adc
sarl
push
outsb
mov
pop
shll
decl
mov
insb
push
ja
scas
xor
xchg
mov
xor
sbb
cmpsl
cwtl
adc
lock
pushl
mov
test
hlt
pop
add
mov
and
sub
outsl
push
decl
push
mov
adc
xchg
mov
pop
bound
cmpsb
loope
inc
ret
fdivrl
jb
xchg
pusha
pushl
xchg
push
nop
sbb
jecxz
jae
outsb
add
ds
and
not
out
sbb
incl
jmp
jb
in
es
add
out
mov
push
and
test
jae
cmp
mov
sub
sub
and
and
cmp
and
xor
jmp
pop
and
mov
push
fcoml
xor
xchg
mul
or
jns
in
gs
stos
dec
mov
cmp
es
xchg
cmp
dec
rcr
cmc
call
jge
jge
xchg
mov
cmp
xchg
je
xchg
inc
loope
jb
mov
push
mov
inc
ds
pusha
ret
xchg
adc
gs
addl
cmp
ljmp
cmpsb
adc
std
sbb
push
xor
cmp
cmp
and
lahf
popf
into
cld
call
push
lock
dec
and
push
fs
imul
mov
std
lcall
sub
or
mov
or
jg
pop
out
mov
test
sub
jns
inc
push
loopne
dec
nop
filds
jmp
jnp
int
ret
inc
dec
scas
imul
jg
into
mov
ret
and
cmc
and
test
fdivrs
mov
mov
and
and
inc
push
add
cmpsb
test
fst
rcll
in
sub
cmp
test
test
aaa
cld
ljmp
ss
adc
sub
jmp
pop
shr
cmp
mov
or
push
pop
xor
ret
iret
jge
xchg
mov
rolb
jmp
pop
stc
in
lods
mov
sbb
notl
or
lods
orl
cli
mov
cmp
fnstenv
shll
aad
cmp
ret
sub
mov
int
enter
and
sbbb
lcall
lcall
jmp
adc
and
xchg
cmp
int
mov
scas
std
out
cli
cld
mov
nop
xchg
cmp
aas
mov
adc
fs
call
loop
es
adc
inc
ret
pushf
stc
pop
xchg
jb
mov
adc
out
rcrb
inc
in
call
mov
or
mov
pop
push
jp
jg
into
mov
loop
fwait
cwtl
scas
fidivs
jmp
or
inc
out
fldl2e
rcl
pop
push
mov
jp
ds
pop
std
call
sub
pusha
mov
xchg
leave
mov
subb
adc
aaa
std
ljmp
adc
int3
xor
sbb
jle
lret
xchg
ret
xchg
inc
sub
cmp
iret
pop
dec
mov
add
jmp
pop
dec
sbb
ljmp
jg
pop
cmc
push
add
pop
mov
and
push
sub
notb
mov
mov
push
cmp
mov
sti
lcall
add
jecxz
fisubrl
cld
sbb
sahf
int3
xchg
test
shll
call
out
enter
mov
fstl
add
xlat
xchg
mov
lcall
cmpsb
push
sub
and
out
xchg
mov
mov
sub
jno
es
push
mov
or
jg
pop
dec
pop
pushf
imul
pop
decl
cld
cmpsb
inc
xor
daa
outsb
stos
test
add
or
in
dec
lcall
jle
lret
movsl
and
out
gs
adc
jl
outsb
push
xor
outsb
mov
popf
mov
fldl2t
xchg
icebp
in
adc
gs
lock
mov
js
lcall
mov
test
out
and
mov
aad
jmp
xchg
arpl
call
jg
mov
orl
xchg
sbb
mov
push
ret
sub
test
outsl
or
adc
jmp
mov
cmp
movsb
dec
pop
testb
mov
jmp
inc
icebp
xchg
add
xor
xor
push
cmpsb
mov
push
rcl
test
push
mov
inc
into
sbb
ficoml
pushf
out
pushl
nop
mov
mov
or
loopne
scas
daa
inc
jo
das
ud0
mov
mov
mov
add
inc
adc
decl
mov
cmp
rorb
std
repnz
sahf
ret
js
lret
sar
push
xchg
push
jmp
int
hlt
and
add
pop
hlt
sbb
mov
push
ret
sti
xchg
loope
jecxz
fcoms
mov
fisubrs
lcall
pop
popa
repz
jecxz
jnp
out
xchg
fiadds
mov
and
or
in
and
pushl
adc
pop
ret
xor
stc
ror
repz
incl
movsb
insl
push
xor
outsl
jb
aad
xchg
xor
xchg
icebp
imul
ljmp
in
push
emms
mov
fnstsw
and
arpl
push
add
ret
shll
xchg
loop
fdivl
jae
daa
fld
rolb
rorb
cmp
sbb
push
dec
dec
pop
hlt
decl
and
cmp
movsb
push
fistl
subl
ljmp
ret
or
imul
adc
pushl
push
dec
test
inc
jbe
push
xor
cmp
xchg
fimuls
mov
iret
scas
push
cmp
jne
push
pop
mov
pop
cmp
out
cli
stc
xlat
dec
adc
outsb
rcl
mov
mov
repz
cli
sbb
mov
xchg
mov
fsubp
movlhps
and
mov
lods
rclb
sub
sar
aaa
shrl
cmpb
inc
scas
cmp
mov
ljmp
cmp
loopne
xor
inc
iret
jecxz
or
ret
das
int3
inc
push
mov
decl
in
add
pop
out
fstpt
xchg
outsb
xchg
in
aaa
sbbl
ja
lock
push
aad
and
and
pop
popa
jb
jo
xchg
xor
aad
ds
mov
cld
mov
mov
jg
jmp
push
push
data16
in
push
out
xchg
fdivl
daa
arpl
mov
dec
pop
in
decl
add
in
jmp
mov
mov
arpl
push
mov
pop
cmp
mov
cmp
out
iret
and
adc
or
dec
stos
push
ss
call
push
cmp
mov
add
mov
xor
xor
call
pop
call
loopne
fwait
jns
cli
insb
stos
jecxz
std
mov
aaa
dec
mov
sbb
call
or
repnz
jb
jle
adcl
leave
add
sbb
iret
push
popa
fmuls
mov
sbb
sbb
mov
sti
int3
int3
push
inc
mov
pop
fcmovb
cs
insb
pop
push
ficompl
jmp
cld
dec
pop
fiadds
jg
jmp
bound
fmull
jo
xor
add
push
je
mov
ljmp
add
sub
shl
rcrb
ret
mov
push
adc
andb
xor
jg
inc
mulb
test
fcoml
cmc
and
ljmp
rcr
jb
and
imul
xor
clc
outsl
xchg
call
enter
jae
imul
push
inc
sbb
jmp
das
repnz
or
mov
push
sbb
inc
daa
xchg
push
xchg
dec
int
aas
mov
pop
addb
xchg
cs
pop
pushl
jbe
inc
hlt
xchg
inc
out
pop
aam
outsb
orl
jnp
idivb
dec
roll
out
jecxz
dec
jno
add
lds
stos
xlat
mov
cmp
lods
scas
loop
push
pushl
movsb
jp
mov
insl
insl
aaa
sub
fcomip
scas
fld
xchg
dec
adc
dec
xor
or
jmp
jb
in
ljmp
cli
imul
dec
fs
lahf
dec
mov
ds
lea
inc
call
xchg
pushf
mov
js
cli
dec
sub
les
call
and
jne
push
mov
xchg
je
and
jp
lcall
ja
fsts
mov
ljmp
ret
fnstenv
pop
stos
aad
cltd
lea
aam
inc
jnp
cmp
stos
xchg
lcall
mov
rcrl
shlb
xchg
ss
lods
pushl
icebp
or
sub
lods
pop
lret
push
jb
mov
xor
test
call
mov
mov
xor
loope
icebp
cmpsb
pop
pop
mov
in
push
inc
inc
leavew
add
decl
push
inc
mov
xor
outsb
xor
inc
mov
dec
xor
sti
sahf
inc
add
jmp
call
mov
fimuls
mov
hlt
ljmp
jb
push
push
in
jecxz
decl
icebp
adc
jne
dec
jnp
push
das
sbb
movsl
out
xor
cmp
test
stos
lcall
js
loope
cmp
ljmp
mov
call
pop
jle
and
dec
lock
rorb
dec
push
cmp
inc
fs
add
push
mov
push
notl
xchg
dec
add
mov
lcall
xchg
cld
call
mov
lcall
test
pushf
adc
out
dec
dec
cmp
lock
dec
xor
pusha
xor
out
mov
and
stos
push
adc
andl
jmp
imul
loop
xchg
or
scas
mov
jmp
jg
cli
repnz
and
orb
mov
data16
cmp
sbb
js
xchg
stos
push
aad
enter
jno
aam
aas
dec
imul
clc
incl
clc
pop
out
jge
js
sbb
lods
in
pop
inc
mov
push
call
lcall
sahf
mov
xchg
popa
cs
dec
dec
adc
jge
sub
fsub
push
incl
cmp
shr
iret
ja
jl
sti
dec
mov
lcall
insl
xchg
orb
mov
pop
cld
push
mov
or
add
add
push
mov
mov
cmp
outsb
call
xchg
inc
mov
mov
dec
imul
push
jle
movsl
and
sub
ds
rorl
fcomip
add
popf
into
popf
push
ljmp
and
sbb
mov
sub
imul
loopne
or
push
add
js
mov
fsubl
mov
inc
clc
jg
cmp
js
jae
cmp
mov
jg
sub
jo
clc
ljmp
and
or
test
out
andb
xchg
and
fisubs
lock
ljmp
mov
fcmovnb
fwait
nop
mov
mov
and
popa
pusha
adc
fwait
mov
sbb
lea
cmpsl
jg
negb
dec
dec
jg
daa
mov
icebp
dec
push
mov
insl
es
sbb
call
decl
adc
jno
add
xor
lahf
fstpt
mov
ret
pusha
loop
mov
clc
fwait
bound
cmpsb
xchg
mov
incl
imul
sar
call
ds
push
cltd
stc
fwait
and
mov
adc
pop
and
icebp
push
sbb
dec
xor
loope
les
mov
out
jb
je
jnp
xor
call
into
jle
sbb
leave
bound
inc
sarl
or
mov
mov
cli
fnstenv
push
mov
xor
mov
push
adc
add
fcoml
cmpl
rorb
and
fadd
mov
decl
pop
xor
daa
add
add
push
jnp
or
xchg
jge
jge
shlb
call
loopne
shlb
xchg
rolb
fisubrs
adc
fistl
xor
cltd
dec
mov
jbe
cli
ss
sbb
cltd
loopne
mov
iret
pop
push
lcall
cmp
and
jecxz
mov
jnp
pop
mov
in
leave
or
sub
in
sub
stos
push
jno
cmp
test
jmp
mov
mov
sbb
mov
outsb
pop
dec
pop
xchg
adcl
popa
adc
jg
outsl
sti
sub
je
daa
fistpl
cmp
repz
loopne
mov
and
call
push
std
nop
jnp
mov
insb
pushf
add
in
xchg
fidivl
mov
jmp
push
ret
ljmp
add
jg
push
and
call
ret
ret
stos
xchg
int
mov
push
cld
sub
jo
adc
sbb
cs
cmp
decl
lock
pop
outsl
push
jbe
push
shrl
adc
sbb
shrl
pushl
jb
daa
add
jecxz
adc
jns
movsb
aaa
mov
mov
push
sub
incl
lds
nop
sbb
repz
xchg
mov
jne
xchg
stos
lret
movsl
or
lcall
bound
inc
jl
add
adc
jne
mov
inc
cli
jg
das
or
jae
ljmp
xchg
nop
pop
pop
jo
mov
and
lahf
sub
aam
mov
adc
decl
ja
cmp
dec
scas
in
xor
mov
lret
and
inc
pop
pushl
addr16
push
stc
sarb
or
jl
adc
mov
dec
cltd
add
fisubs
inc
shlb
add
ljmp
lcall
xor
add
bound
inc
and
fists
call
das
fdivr
xchg
push
shlb
in
cmp
test
inc
notl
inc
jg
cmp
stc
loope
adcl
in
adc
jg
sahf
jne
sub
mov
mov
cmpsb
pop
test
ror
mov
fidivl
es
lds
jb
leave
cmpsl
and
imul
jle
ljmp
fwait
decl
inc
std
daa
xlat
outsb
pop
and
xchg
sub
pop
mov
lock
push
mov
pop
leave
mov
mov
in
ljmp
adc
sbb
enter
jnp
test
aaa
std
jbe
xor
pop
fcmovnu
int
add
imul
leave
ljmp
cli
ret
je
js
andb
sbbb
and
push
pop
imul
ljmp
jbe
sbb
push
pop
sub
cmp
mov
mov
adc
decl
cmpsb
mov
orl
mov
in
lods
jo
cmp
fcmovne
hlt
add
xchg
aam
add
sarb
clc
fcomip
decl
add
sub
mov
fildl
xchg
test
ljmp
xchg
lahf
std
sbb
pop
jnp
xor
and
loope
jmp
and
inc
ficompl
mov
aam
ret
mull
mov
loopne
loopne
fadds
addr16
push
fldl
inc
or
fucomip
daa
mov
or
and
ficoml
mov
mov
jb
int
loopne
xor
sahf
and
dec
in
cs
ss
xchg
jl
sub
lock
gs
fiadds
rorb
loopne
int3
push
fildll
movsb
data16
ljmp
cli
cmc
out
movsb
and
sbb
jl
aad
aas
clc
push
xor
and
decl
loopne
xor
outsb
ret
jle
shll
mov
jmp
int3
cltd
adc
fwait
xrelease
jb
pop
ss
imul
fisttps
fcmovb
into
rcl
inc
push
or
mov
pop
in
dec
lods
aas
call
adc
imul
incl
cld
mov
and
jg
jmp
add
dec
leave
mov
xor
pop
popa
xchg
test
cli
ficomps
xchg
aam
push
fs
fwait
add
mov
stc
aas
dec
jae
lcall
xchg
xchg
enter
push
sub
mov
jo
mov
rcr
mov
gs
icebp
das
clc
test
jp
clc
mov
jb,pt
jmp
scas
cwtl
or
scas
popl
cmpsb
call
stos
sti
mov
out
dec
jae
lods
in
or
in
leave
add
leave
xor
mov
add
scas
ret
add
jne
cmpsl
icebp
dec
out
xchg
jle
lret
scas
mov
sub
dec
mov
cmc
inc
retw
insl
insb
jg
lcall
xorb
sub
push
mov
adc
insl
enter
mov
xchg
dec
fsubs
push
inc
cmp
std
cmp
lahf
jp
add
xchg
outsb
sbb
pop
add
xchg
push
push
mov
cmc
inc
mov
add
movl
fcomip
arpl
test
ds
jbe
loopne
cli
push
dec
test
dec
lcall
leave
jp
cld
int
into
cmp
jae
cmp
inc
xchg
mov
scas
inc
push
xor
dec
fs
jg
incl
mov
outsb
inc
mov
mov
das
xchg
out
mov
push
cmp
inc
fstpt
pop
cmp
icebp
test
out
sub
test
mov
sub
mov
aam
cmp
lcall
icebp
out
adc
into
sub
bound
inc
aad
loope
xor
mov
fs
cmpsb
and
enter
iret
or
in
xchg
sbb
out
cli
pushl
hlt
push
xor
xchg
pop
cltd
mov
add
xor
cmp
fcomps
ljmp
xor
aad
inc
sarl
mov
fisttps
inc
mov
mov
movsb
pop
shrb
jmp
xchg
push
add
test
imul
movsb
cltd
fbstp
nop
icebp
push
adc
mov
mov
iret
xchg
xchg
cmc
imul
pushl
es
jmp
mov
imul
lcall
inc
insb
add
jae
fistpl
into
lahf
sub
xchg
aad
sbb
jnp
mov
dec
jo
incl
test
jmp
sub
in
pop
ret
sbb
add
jl
leave
aam
inc
sbb
or
out
mov
dec
xchg
xchg
mov
jg
scas
fisubl
cld
add
sahf
mov
outsl
outsl
push
and
ljmp
into
inc
adc
adc
outsl
sub
push
hlt
jg
xchg
jmp
adc
cwtl
inc
cmp
xchg
push
adc
sbb
inc
decl
or
in
xor
and
sbbb
outsl
je
mov
out
jg
mov
jbe
fs
add
faddl
mov
add
test
call
xchg
ljmp
addr16
xchg
idivl
pusha
mov
lcall
movsl
in
jne
xlat
cmp
xlat
add
lret
sub
jg
lods
dec
rorb
ret
xchg
dec
pop
push
pop
adc
stos
mov
sbb
pop
and
dec
pop
push
inc
pop
mov
scas
xchg
and
jmp
cli
mov
test
or
or
dec
push
jge
sub
or
in
decl
movsb
popa
or
int
mov
or
loope
pop
sbb
push
add
jg
lock
aam
mov
fdivrs
xlat
xchg
cmp
incl
mov
adcl
xchg
popa
out
push
inc
arpl
jne
adc
jg
fsubl
push
sbb
xchg
out
adcb
cmpsb
daa
mov
push
xor
dec
into
jecxz
sbb
lds
xorb
pushf
outsb
aas
and
notb
sub
inc
es
xchg
lret
mov
dec
jecxz
fwait
std
mov
and
xchg
mov
int3
ret
push
mov
fdiv
adc
mov
call
dec
jg
add
push
or
mov
push
push
sbb
and
pop
test
jns
int3
mov
or
scas
repnz
and
jge
xchg
push
add
xor
ljmp
mov
repz
repnz
rorl
jl
enter
jl
cltd
pop
inc
sub
jmp
jecxz
inc
movsl
xchg
adc
dec
jp
cmpsl
add
mov
loopne
clc
and
sbb
inc
and
jg
inc
mov
shll
aad
out
loopne
stos
xor
stos
add
mov
lods
cli
pushl
mov
dec
fisubl
cmpsb
or
mov
aad
cwtl
faddl
mov
clc
pushl
jle
int3
clc
notb
mov
pusha
je
xchg
inc
or
hlt
js
test
pop
orl
adcl
cltd
jno
inc
aas
mov
sbb
ljmp
and
push
daa
cltd
stc
sub
aam
gs
jge
jp
ret
insb
cmp
adc
stc
dec
andl
jbe
or
daa
add
mov
clc
xlat
adc
cwtl
push
ficoms
push
int3
leave
jmp
dec
and
mov
or
cli
call
mov
out
in
pop
ljmp
adc
jp
ret
sub
push
iret
cli
adc
cwtl
ret
ljmp
xlat
mov
lea
shlb
jb
addr16
fists
jg
sub
add
push
test
jmp
add
sar
fcmovb
mov
inc
repnz
dec
inc
mov
movsb
dec
dec
mov
and
fiaddl
add
xchg
mov
lds
lock
incl
xor
and
add
mov
cmp
ja
cmp
lcall
out
aas
mov
testl
lods
pop
sub
fidivrs
dec
int
jmp
push
stc
inc
pop
mov
fstpl
xchg
mov
in
lock
pop
lret
int3
outsl
jmp
sarl
lock
mov
sub
xor
xor
dec
push
dec
push
std
jmp
icebp
dec
aad
add
aam
in
gs
movl
addl
and
adc
pop
aad
je
push
sbb
shll
sti
pop
mov
jge
scas
xchg
mov
scas
js
sub
adc
stc
inc
add
stc
mov
dec
push
enter
jmp
dec
lret
loop
jle
pop
jo
sbb
mov
xchg
dec
mov
jmp
pop
stos
jne
lcall
fdivs
pop
sub
aam
push
sbb
mov
jg
sbb
sub
dec
lods
lcall
pushf
xchg
imul
jo
xchg
xor
xchg
lahf
ds
pop
cld
call
lds
pop
test
cmp
mov
pop
mov
ficoms
dec
cwtl
clc
dec
loopne
dec
mov
in
jae
call
lods
stos
jno
stc
outsb
push
out
xchg
loop
xchg
jg
iret
xchg
push
adcb
jo
ljmp
jecxz
mov
loop
iret
decl
adc
push
scas
xchg
inc
scas
xor
rcr
rclb
gs
add
pushl
and
or
je
repz
shrl
push
xor
loope
mov
loop
cltd
ret
xor
les
int3
icebp
mov
ret
inc
in
rcrb
mov
xor
inc
cmp
sub
sub
and
loope
xchg
push
mov
dec
incl
push
out
aam
and
sbb
pusha
sarb
push
fildll
jle
dec
fsubrs
fistl
sbb
jmp
les
cmpl
decl
lock
mov
sbb
pop
cltd
and
fdiv
xor
ljmp
jmp
fnstsw
mov
cmp
mov
mov
and
mov
stc
mov
sahf
fisubrs
push
cmc
in
xor
ret
test
outsl
xlat
dec
out
cli
call
cmp
aaa
shll
sub
es
sub
jmp
test
add
iret
and
push
xchg
test
jae
lret
ret
adc
scas
adc
dec
add
out
dec
add
cmp
cmp
and
enter
insl
movsl
jo
dec
add
fildll
cld
movsb
in
adc
bound
and
xchg
fs
add
sarb
mov
jns
in
rcr
ljmp
inc
inc
cld
cwtl
fwait
add
cmp
pusha
out
cmp
lods
jmp
lret
mov
cld
jo
mov
ret
shll
jge
add
in
sub
add
or
out
sbbb
decb
mov
icebp
divb
mov
fsubrp
mov
stos
and
mov
mov
xor
cmp
pop
add
bound
popa
pop
or
incl
add
call
dec
rcr
pop
mov
ljmp
movsb
out
mov
or
adc
mov
into
hlt
xchg
mov
mov
push
into
mov
xchg
test
movsl
push
add
xchg
cmp
loopne
mov
sub
fcmovnb
mov
or
mov
mov
test
push
lds
sub
popf
mov
cmp
es
jg
mov
xor
call
pop
rolb
inc
mov
xor
cli
in
push
out
jecxz
xchg
in
sahf
inc
pop
orb
pushl
mov
push
fwait
out
xchg
xor
or
cmp
je
in
js
and
pushl
cld
lcall
jns
dec
dec
lods
adc
xchg
test
xchg
xor
xlat
xor
fstpl
mov
cmp
mov
pop
loop
add
imul
fs
ljmp
stos
add
adc
rol
or
or
and
jbe
cmc
cmp
xor
xor
push
leave
inc
add
ret
insb
sbb
imul
movsb
repnz
mov
xorl
mov
adc
pusha
pushf
data16
dec
repz
add
jns
mov
cmp
std
sbb
jno
lds
aas
mov
popa
inc
push
pop
sbb
call
xchg
cmp
or
sub
mov
dec
push
cmp
push
add
stos
sbb
cmc
xchg
jbe
lock
call
xchg
dec
loope
and
stc
cmp
or
loopne
pop
shlb
mov
push
bound
aas
ret
mov
xor
scas
decl
insb
mov
lcall
fnstenv
call
mov
xchg
bound
stc
fisttpl
mov
pop
jg
ljmp
xchg
ficoms
in
subb
cli
inc
xor
and
pushl
shl
jg
sbb
or
es
sbb
movsb
aam
pop
pushf
fidivs
xchg
inc
cmp
je
mov
add
lcall
idiv
inc
xchg
cmpsb
and
cmc
push
loopne
push
mov
add
cmp
arpl
jmp
dec
pop
xchg
pop
aas
mulb
pusha
mov
out
call
pop
lahf
mov
jecxz
or
fisttps
add
mov
jg
xchg
repnz
aas
ja
in
decl
and
les
jb
mov
and
push
pop
add
divl
xor
add
jmp
mov
push
pop
cwtl
mov
int3
push
push
add
xor
push
sub
dec
mov
imul
int
push
bound
rcrl
bound
in
pop
xchg
pushl
shll
repz
cmpsl
cs
jbe
loop
inc
jns
pushf
sub
cmpsl
inc
jp
in
in
gs
call
pop
ds
fdivl
dec
xor
xor
jmp
push
add
fidivrs
push
mov
jne
sti
sub
mov
pushf
popf
mov
stos
add
int3
dec
and
loop
dec
lods
ret
incl
xor
and
mov
insl
xor
ficompl
jbe
aam
and
movl
pop
insl
outsb
loope
ds
mov
cmp
inc
loop
add
ret
and
decl
icebp
inc
jno
push
cmp
aam
pop
lcall
jmp
repnz
ja
lcall
jecxz
dec
cmpsb
fs
or
loope
xchg
les
inc
lds
cmpsb
cmp
adc
pushf
jl
adc
mov
and
adc
jo
fcomp
and
or
test
sbb
outsl
sub
inc
cmpsl
scas
jno
mov
inc
lcall
jno,pn
sub
addr16
xchg
jecxz
cmpsb
iret
inc
out
stos
mov
jne
mov
arpl
out
mov
popf
ljmp
xor
lcall
dec
and
lcall
fimuls
mov
xchg
xorb
jnp
fldt
jmp
es
arpl
idiv
stos
jo
jecxz
push
lds
hlt
xchg
adc
xchg
lds
pushl
hlt
jmp
and
mov
in
add
divb
cmpsb
mov
dec
aad
ja
add
cmp
mov
push
das
lods
add
popa
pop
cmp
inc
flds
call
dec
and
out
mov
dec
test
icebp
imul
push
fwait
xchg
jp
mov
call
sahf
push
out
adcl
test
popf
mull
or
decb
xor
pop
pop
lock
ljmp
popa
sbb
bound
xor
sub
sbb
gs
mov
xchg
rorl
decl
inc
push
xor
cmpsl
divl
subl
add
inc
dec
loop
inc
inc
pusha
negl
jmp
lods
and
pop
cmp
cmp
mov
clc
pop
pop
lret
fcomip
lds
cmc
fsts
mov
jle
imul
xor
mov
lcall
in
cwtl
arpl
enter
adc
enter
jge
push
call
cmp
fdivr
call
filds
sub
jmp
mov
sub
jmp
mov
push
inc
push
sub
daa
jp
mov
lods
popa
sub
xchg
dec
mov
inc
int
sub
loope
sbb
jge
in
loope
mov
ljmp
out
sub
mov
push
hlt
out
movsb
hlt
cld
adc
mov
adc
les
lods
stos
ljmp
data16
fdivrs
sub
xchg
dec
leave
call
dec
inc
sbb
in
testl
lahf
jne
push
dec
cmp
xchg
mov
and
lods
ret
mov
je
mov
xchg
das
arpl
dec
push
and
lcall
fmuls
in
fdivs
daa
push
rcl
test
jo
std
std
icebp
popw
mov
addr16
insb
insl
rolb
mov
jl
pop
lret
jno
popf
cli
addr16
loop
lock
loope
or
mov
idiv
decl
jp
std
aas
fdiv
call
or
push
cmpsb
std
inc
sub
gs
sar
pushl
enter
cmp
negl
dec
jg
shrl
cld
jg
icebp
adc
inc
jg
lahf
or
cwtl
dec
jns
lock
incl
sbb
mov
stc
dec
cmp
jns
mov
adc
decl
daa
push
jl
insl
xor
insb
jnp
mov
jmp
mov
pop
adc
push
call
sti
xchg
test
cltd
ret
and
mov
mov
xlat
call
icebp
sub
fisubrs
mov
movsl
jecxz
push
xchg
mov
sbbb
cld
fnsave
pop
insb
xchg
jno
insl
fsubrs
jg
fistps
or
incl
in
add
inc
push
push
pop
jp
sbb
pop
les
fisubrl
cmp
pop
test
out
cmp
repz
sahf
jno
outsl
ds
or
fsubrs
sbb
and
inc
sbb
xchg
fisttps
jmp
fildll
push
in
into
jl
sarl
cmp
outsl
mov
ljmp
mov
mov
lods
lock
sarb
mov
movsl
push
call
xchg
mov
incl
out
mov
out
stc
subb
push
xorl
mov
aad
imul
dec
jmp
jae
insb
mov
daa
push
or
push
lods
pop
jp
rclb
xor
cld
ljmp
jo
cmp
test
or
cld
push
add
lcall
cmpb
push
call
leave
mov
les
push
test
mov
mov
ja
dec
jmp
xchg
pop
movsb
push
sti
scas
cli
aaa
inc
sub
fsubr
aam
fstpl
icebp
pusha
pop
loopne
mov
and
decl
cmpsb
pushl
das
and
push
testb
xor
loope
dec
fisubrs
popf
ret
adc
lcall
adc
sbb
jge
mov
jae
scas
andl
dec
icebp
mov
sub
dec
ds
or
cmp
in
jnp
pushl
xlat
xor
out
mov
xor
mov
pop
mov
jns
jns
shll
and
cmc
jo,pn
ret
das
adc
arpl
in
jge
jg
decl
mov
push
shrb
cltd
decb
ror
out
sub
arpl
add
loop
inc
or
ss
jmp
ss
mov
push
mov
insl
add
push
testb
out
jp
push
incl
jne
nop
movsl
andb
cli
dec
cld
xchg
mov
jno
arpl
pushf
push
jae
jmp
ljmp
push
inc
mov
sbb
or
test
out
sbb
and
adc
fmul
bnd
push
ds
imul
add
xlat
stos
incl
stc
cli
inc
mov
push
popf
push
loopne
bound
loopnew
add
incl
sbb
imulb
shrl
pushf
test
call
dec
inc
mov
lcall
jg
mov
ret
add
push
aam
out
repz
fstl
xlat
add
sub
dec
ss
outsb
xor
out
cld
push
stos
loopne
jo
frstor
gs
push
lahf
cmc
pop
cmc
cmp
pushl
dec
or
xor
jp
adc
lods
push
mov
into
mov
mov
dec
push
js
xchg
call
loope
mov
test
gs
and
rcrl
xchg
das
and
inc
push
pop
push
insl
pop
in
sbb
orl
push
sbb
push
sbb
rclb
test
dec
xor
loope
pop
jp
mov
add
ljmp
stos
mov
cltd
cmp
call
lds
mov
sbb
ss
sbb
jle
popa
loope
sbb
cltd
dec
cld
cltd
das
dec
decb
jg
or
dec
movsb
sbb
mov
mov
jmp
ljmp
sbb
jge
jmp
addr16
sub
insb
movsb
out
cwtl
pop
pop
mov
icebp
jecxz
mov
dec
lcall
and
dec
inc
mov
popa
mov
push
rcr
adc
pushl
sbb
jb
xchg
push
je
jae
mov
loope
inc
mov
andb
mov
add
scas
and
mov
sbb
jg
dec
xor
pop
pushl
xor
adc
push
inc
sahf
jl
nop
in
sub
aam
in
pushl
xchg
sbb
or
sbb
jne
int3
add
inc
and
cli
dec
cld
xchg
in
addl
jmp
lahf
push
je
jne
add
insb
mov
push
xor
lahf
insl
outsl
inc
jmp
xor
ret
cmp
pop
stos
pop
rorb
leave
cmp
je
sbb
pop
aaa
movsl
pop
incl
test
add
mov
pushf
jae
rcrl
add
push
jno
testb
loope
in
pop
xchg
mov
dec
data16
jp
push
pop
xchg
jg
adcb
aas
pop
dec
std
lock
push
ret
xchg
mov
and
stos
ss
jg
int
js
adc
mov
mov
es
sbb
out
jnp
xchg
decl
loope
out
fcoml
add
pop
cmpsb
cwtl
pminub
test
mov
repnz
outsb
imul
mov
int3
sti
shrb
mov
popf
sti
fdivrl
mov
xor
je
push
sub
pop
or
mov
sbb
jae
pop
mov
and
sbb
fisubrl
lods
adc
jge
and
jnp
rolb
popa
mov
pop
push
pop
lods
and
call
lret
mov
sar
je
pushf
inc
add
shrb
pusha
and
dec
dec
mov
dec
aaa
fs
jmp
addb
popf
lea
push
lods
xlat
jb
cmp
outsl
clc
call
mov
pop
inc
jmp
inc
ret
aas
adc
int3
call
loopne
cmp
adc
sbb
or
and
add
mov
scas
mov
test
xchg
lock
lods
and
in
inc
loopne
test
std
rolb
loopne
adcb
mov
icebp
mov
nop
js
call
imul
cli
imul
cmp
in
pop
push
inc
mov
mov
stos
into
mov
mov
out
stos
sbb
jmp
lods
add
loopne
fidivs
push
pop
das
repnz
lcall
mov
je
xor
lds
mov
cs
pop
movsl
fs
mov
loopne
jg
lods
sub
lcall
push
or
or
jae
das
scas
dec
fsubs
imul
mov
in
sbb
jne
dec
sub
out
mov
sahf
push
out
lods
xchg
or
add
jg
pushf
xor
xchg
das
sub
pushl
inc
int
arpl
xchg
in
fisubs
fldl2e
test
jp
icebp
push
es
add
in
xorb
lcall
test
xor
outsl
mov
mov
mov
test
xchg
pop
adc
or
push
lea
in
int3
aad
loopne
loopne
sbb
mov
popa
add
push
fcmovb
int
insl
pop
hlt
lcall
cs
loop
mov
jge
jp
outsl
roll
jmp
int
in
imul
aas
mov
ret
shll
aaa
add
sub
fisubs
mov
jbe
lcall
or
or
testl
or
mov
mov
jecxz
sub
mov
inc
sahf
inc
ret
adc
int
mov
jp
hlt
xchg
loopne
jmp
iret
jge
xor
sub
or
shll
push
movsl
pop
and
xlat
mov
lcall
mov
push
mov
lret
cmp
push
cmp
mov
push
mov
push
out
mov
scas
es
inc
popa
popl
add
loopne
rorb
sbb
mov
jmp
pusha
outsl
stos
fneni(8087
rorl
mov
cmc
xchg
xor
lcall
mov
jno
fisttpll
scas
daa
xor
xchg
xchg
pop
adc
push
mov
incl
xlat
dec
adc
fsubrs
adc
dec
pop
jbe
cmpsb
cltd
jno
inc
adc
add
sbb
fildl
sub
cmpsl
ds
out
push
mov
jae
sbb
cmp
ffree
cmc
xchg
cltd
add
push
fcomps
pop
jo
insb
in
adc
xor
mov
lcall
add
add
jecxz
pop
or
out
stos
nop
stos
bound
jnp
xor
lcall
jecxz
pop
pop
mov
dec
inc
add
aam
push
insb
push
daa
or
jb
call
sbb
push
andb
daa
lret
sub
incb
stos
and
xchg
mov
incl
sbb
loope
xchg
push
cli
sub
movsb
lods
adc
mov
pop
hlt
jg
bound
inc
mov
vmovdqu
push
jae
jbe
mov
enter
je
fs
mov
jge
mov
andl
test
cli
adc
cld
decl
cwtl
pop
adc
sbb
mulb
aaa
add
repnz
push
call
aad
mov
lods
sbb
xchg
pop
push
jecxz
adc
jmp
lcall
rclb
xchg
push
inc
cmp
and
mov
push
dec
mov
lods
repz
mov
jmp
push
cs
in
mov
mov
push
lds
xor
add
call
inc
ss
sbb
cld
jle
jg
jl
xchg
xlat
mov
test
and
jg
int3
mov
clc
jae
testl
dec
push
je
xor
xchg
divl
jmp
xchg
insl
or
test
cmp
jecxz
repnz
mov
dec
call
enter
popa
mov
dec
filds
jecxz
sub
rorl
and
xchg
jmp
insb
sub
pop
insb
frstor
mov
dec
stos
pop
mov
cmc
rcll
pop
dec
xchg
movd
push
cld
incl
or
cmp
push
add
aam
mov
dec
das
dec
add
pushl
mulb
enter
pop
imul
sub
push
aaa
xor
or
sub
xor
pop
insb
test
cmp
stos
outsb
daa
fidivrs
rcrb
decl
inc
jo
dec
loopne
scas
xor
xchg
or
loope
aad
push
dec
inc
lods
ja
mov
pushf
pop
bsf
aam
cvtdq2ps
decl
into
loope
xor
andl
xchg
push
inc
jmp
mov
decl
push
in
dec
sbb
inc
testb
xchg
lock
jo
push
int3
lahf
jg
pushl
mov
movb
mov
es
or
cmpsb
inc
je
mov
shl
push
mov
and
scas
test
in
pop
mov
sbb
push
fisttpll
mov
cmp
jno
in
mov
mov
pop
mov
push
cmp
std
aam
mov
push
xor
lcall
outsl
xchg
scas
push
dec
inc
in
add
xchg
nop
pop
add
scas
pop
mov
fisubs
mov
stos
jb
sbb
xor
inc
inc
or
stos
sarb
fimuls
jb
decl
and
dec
push
and
dec
dec
flds
fldl
mov
outsb
add
shlb
cs
decl
sbb
in
xor
sti
pop
or
mov
ljmp
outsl
pop
or
orb
fdivs
call
rorb
adc
jns
cmp
sub
inc
add
cmp
push
lcall
mov
cltd
iret
aam
test
fcomip
jg
mov
mov
sub
enter
fisttps
jg
adc
cmp
sarb
aad
int3
test
mov
out
or
ljmp
dec
cs
ficomps
lds
jl
stc
testb
popf
and
stos
xor
incl
cld
or
jp
ss
test
inc
mov
pop
jb
in
pushf
jnp
int3
push
fiadds
enter
push
jne
es
int3
scas
mov
ljmp
lahf
lahf
ret
mov
out
decl
mov
pusha
cmpl
hlt
sub
pop
and
incl
or
jg
js
xor
xor
lret
loope
and
das
sarb
lock
out
ja
xchg
divb
mov
stos
inc
inc
sbb
clc
movsl
adc
out
pop
orl
ret
pop
cmc
jmp
mull
add
repnz
xor
addl
dec
dec
lods
ja
pop
mov
call
je
fxch
fcoml
and
imul
fisttps
mov
dec
jmp
pushf
cmpsl
adc
add
mov
sbb
add
xor
inc
outsl
addl
cld
lcall
lods
insb
pushf
nop
jne
inc
lods
out
icebp
enter
mov
loopne
imul
lea
jge
mov
xchg
cmpsl
incl
push
in
push
pop
mov
mov
or
xchg
mov
repnz
or
fmuls
aam
pop
call
inc
fwait
push
fcmovnbe
mov
mov
mov
aad
mov
lcall
lahf
shrd
push
cmp
das
cmpsb
or
mov
pop
pop
mov
addr16
lcall
rolb
jecxz
or
mov
out
ljmp
daa
inc
pusha
mov
decl
cmp
inc
jge
loop
test
fstp
and
add
mov
fs
decl
inc
inc
jno
sub
pop
cmp
jg
ret
dec
rclb
cmp
lcall
test
sti
pop
pop
cmp
in
sbb
dec
jnp
out
cli
inc
jecxz
mov
decl
cmp
push
out
cmpsb
rcrl
test
cmp
out
inc
outsb
pop
fisubs
test
and
push
mov
jo
nop
mov
jns
mov
clc
or
lahf
dec
pop
mov
decl
out
mov
push
xor
jbe
jbe
cmpsb
rcrb
sub
ljmp
cmc
scas
sahf
mov
cmp
mov
rorb
jl
rorw
mov
and
lock
cs
int3
jb
dec
nop
cmp
imull
scas
or
call
pop
test
xchg
mov
icebp
clc
idivb
imul
dec
aam
sbb
icebp
jg
lea
div
sti
lds
fidivrl
repnz
and
sbb
mov
or
sbb
sbb
pop
inc
dec
in
fists
jns
jmp
test
gs
xchg
mov
std
add
loope
cmp
push
jb
in
sub
fildll
add
loopne
cltd
dec
lds
or
hlt
mov
out
js
adc
pusha
push
sbb
mov
jp
or
aam
sbb
js
ljmp
shlb
mov
je
cli
push
xlat
pop
test
and
cmp
dec
cli
sbb
popa
jp
std
lods
movsl
xchg
xchg
popa
mov
push
cwtl
push
lcall
jle
mov
jb
inc
cltd
in
jo
cmpsb
pop
mov
pop
add
hlt
aas
adc
mov
mov
outsb
data16
jne
enter
ljmp
sbb
movsb
jg
roll
and
repz
jmp
stc
or
or
or
sbb
sti
leave
push
test
xchg
lcall
cld
loope
dec
push
shrb
jae
or
ja
movsl
xor
testl
call
repz
push
dec
ljmp
loopne
pop
jge
mov
adc
nop
arpl
cmp
ljmp
and
push
mov
mov
cmp
inc
incl
mov
dec
loope
mov
jg
mov
insb
mov
xchg
fidivl
xchg
or
pushf
cmpb
lcall
pop
outsl
mov
sti
jp
jle
addb
push
or
add
jle
imul
shr
mov
lahf
negb
add
cmp
sbb
inc
scas
dec
repz
iret
mov
xorl
or
scas
jp
sub
shl
pop
cwtl
cmp
dec
nop
into
pop
pushf
lds
fmul
out
idiv
out
div
fs
das
or
rolb
sar
pushl
dec
int3
icebp
mov
push
push
xor
push
stc
mov
add
pop
into
dec
pop
sub
dec
mov
sbb
mov
mov
jg
push
or
push
dec
jmp
add
loop
dec
mov
jb
inc
inc
sarb
aaa
std
decl
ljmp
jae
andb
rorb
fisttpll
mov
push
rcl
pop
inc
std
arpl
movsl
mov
test
ror
adc
jae
ljmp
sbb
sar
insl
rcr
pop
mov
jae
rolb
inc
imul
icebp
dec
rclb
aam
lods
push
sbb
xchg
incl
imul
cs
test
mov
out
mov
and
adc
push
push
cmp
mov
pusha
mov
xchg
xor
push
and
push
cltd
adc
or
jne
inc
xchg
xchg
mov
into
or
cmpsb
out
rorb
jb
int
mov
mov
ljmp
jmp
rorl
lret
loope
inc
movsl
aaa
pop
shl
add
fwait
out
int3
jmp
in
lea
decl
sarb
mov
repnz
mov
into
loop
push
pushl
dec
int
sub
mov
pop
or
in
pop
jl
push
mov
outsl
and
jg
mov
jbe
jg
in
ljmp
repz
fisubrs
clc
xchg
adc
js
add
mov
inc
rcrb
in
sbbl
or
sarl
push
dec
jmp
xchg
pop
rorb
dec
mov
xchg
pop
mov
sbb
add
daa
subl
sbb
xor
fs
out
xchg
loop
sahf
sub
je
mov
or
inc
adc
adc
lcall
pushf
popa
shlb
or
movsb
mov
jmp
jno
inc
orl
popw
scas
pop
mov
push
aas
adc
cld
cmpsb
pushf
xor
jg
ljmp
out
sbb
sahf
sbb
roll
nop
das
je
xchg
pop
sbb
xchg
aam
test
pop
loope
cmp
cwtl
clc
mov
mov
mov
lcall
sub
jnp
pop
les
xlat
fst
arpl
mov
sub
mov
mov
nop
adc
daa
dec
std
sti
jno
pop
iret
mov
jae
rorl
sahf
scas
lods
fsts
push
cmp
add
or
mov
mov
cwtl
fisttps
inc
adc
jnp
cltd
jmp
in
xchg
shl
sub
rcll
pusha
hlt
adc
loop
repnz
mov
movsb
push
push
dec
sbb
decl
sahf
rorl
fldt
cmp
push
cmp
mov
aad
push
mov
pop
in
fwait
insb
les
fucomi
out
scas
lcall
fildl
mov
xchg
jnp
stos
sahf
lcall
adc
gs
dec
scas
outsb
pushl
sbb
lods
and
hlt
leave
jo
mov
fs
jmp
push
push
sbb
push
xchg
fmull
subb
mov
mov
aas
daa
lea
push
sub
lods
jo
test
cmp
call
std
lods
and
inc
sbb
fucom
jecxz
cmp
push
dec
mov
ljmp
fisubl
hlt
dec
add
in
jnp
fiadds
cmp
repnz
pushl
push
xorb
jnp
mov
add
mov
mov
mov
movsb
nop
ss
fldcw
fimull
adc
rolb
mov
imul
xchg
decl
rcrb
adc
inc
scas
mov
in
cmpsb
fwait
in
cmp
int3
cmp
loopne
or
pop
push
jl
in
xchg
push
mov
int
loop
pop
push
rcll
in
loope
xor
lret
mov
xor
aas
into
sarb
arpl
inc
movsb
mov
repz
xchg
icebp
ss
inc
insb
daa
cmp
lcall
movsb
push
imul
push
out
mov
cld
mov
jg
pop
mov
dec
fldl
mov
and
mov
les
add
ljmp
popf
and
js
add
or
movsb
sar
jle
and
hlt
sarl
icebp
add
dec
add
xchg
push
mov
jno
or
push
in
ds
incl
adc
jnp
cs
out
adc
lds
inc
into
sub
js
adc
insl
mov
in
int3
mov
mov
jo
ljmp
pop
std
fadds
push
dec
lcall
out
cld
dec
outsb
mulb
inc
nop
mov
aaa
std
clc
xchg
mulb
ret
test
cmp
pop
adc
shlb
sbb
cmc
and
lret
mov
repnz
add
cmp
push
add
incl
sub
pop
xor
jbe
mov
hlt
pop
xchg
xor
aad
or
jmp
inc
mov
xchg
dec
xor
aad
xchg
inc
movsl
jmp
fldcw
xor
out
xchg
xor
les
push
idiv
add
xor
daa
cmp
decl
mov
pop
fstpl
out
mov
and
xchg
jno
pusha
sub
cmp
test
pop
cmpb
mov
dec
adc
cld
out
cli
incl
inc
inc
mov
add
push
push
insl
ds
dec
cmc
inc
mov
enter
lahf
shrb
adc
or
mov
sar
jnp
icebp
mov
mov
int3
loop
adc
cltd
sbb
or
ds
in
mov
pushl
mov
sub
repnz
out
mov
sub
std
repnz
mov
movsl
les
popa
push
pop
push
shl
fldcw
sbbl
pushl
mov
rcl
inc
jo
lods
dec
mov
daa
mov
mov
sub
xchg
dec
xor
loopne
scas
not
int
shll
sub
incl
mov
lret
xor
lock
mov
pushf
fistl
push
xchg
test
popf
aam
sti
ljmp
mov
arpl
sbb
cmpsb
adc
insl
incl
mov
mov
or
jg
sub
rcl
test
cwtl
and
and
out
sbb
inc
mov
xchg
lcall
inc
stc
pop
hlt
inc
ret
dec
mov
push
fisubrs
icebp
lods
or
xchg
sbb
aam
pop
and
daa
mov
or
mov
adc
jmp
jno
sbb
mov
stc
out
xchg
push
pushf
pop
jmp
mov
cs
jg
jmp
jecxz
hlt
test
out
xor
ss
shr
pop
ja
incl
inc
fistl
jmp
pop
data16
sbb
mov
xchg
setg
aas
pop
add
xchg
push
incl
xor
mov
mov
dec
inc
rol
lds
enter
mov
shrb
xchg
mov
out
dec
fsubrs
movsb
xor
mov
mov
mov
clc
dec
fcoml
push
fiadds
inc
sti
or
or
test
jnp
inc
popa
mov
repz
inc
push
xor
push
out
jns
movsb
push
loope
cmp
and
add
scas
pushl
sbb
or
shrb
dec
sbb
lcall
cld
ds
js
xchg
rcll
jae
aam
adc
xchg
add
push
out
adc
jno
das
cli
xchg
xchg
daa
mov
lcall
stos
mov
push
mov
mov
xchg
adc
test
cwtl
jecxz
decl
pop
scas
push
imul
sbb
inc
out
fcompl
cmp
pusha
push
icebp
mov
sbb
xor
mov
jae
sbbb
in
dec
cmc
mov
arpl
push
or
sbb
jg
mov
sbb
push
movsb
mov
pop
sbb
or
push
out
fs
push
adc
mov
jmp
push
lcall
and
bound
inc
out
in
jno
pop
mov
cmp
call
movsb
mov
sahf
cmp
sbb
cmpsb
dec
into
out
add
push
cld
ficoms
push
movl
mov
xlat
lret
push
xchg
jg
call
xchg
inc
inc
dec
pop
fs
mov
mov
loope
sbb
sti
aam
jmp
sub
addr16
icebp
test
cmc
xor
js
sbb
test
push
gs
mov
cli
std
dec
incl
test
mov
imulb
jno
dec
cmp
rcl
filds
pushl
cmp
fs
mov
xchg
adc
mov
mov
sub
test
mov
push
fbstp
inc
enter
push
lds
lret
test
xor
inc
mov
cmpsb
xor
pop
pop
add
jg
xor
add
sbb
jbe
lcall
inc
aad
cltd
stos
adc
popl
das
mov
jp
mov
inc
ljmp
hlt
dec
push
ja
xor
bound
orb
mov
aaa
adc
lods
mov
or
movsb
mov
adc
loopne
add
mov
dec
push
clc
jb
jae
mov
fnsave
ss
add
sbb
subl
push
or
xchg
incl
sub
in
bound
sahf
stos
repnz
xor
lock
xchg
and
outsb
xor
cmp
cmc
incl
sbb
xchg
fsts
xor
inc
push
add
jb
ljmp
jne
inc
cltd
and
mov
stos
mov
adc
pushl
repnz
enter
mov
stc
repnz
pop
rcrl
and
decl
pusha
mov
mov
sub
sbb
fistps
xor
sub
or
dec
dec
mov
or
inc
jmp
xchg
loope
test
xor
test
lds
mov
mov
jle
cmp
mov
imul
ss
lods
ret
mov
inc
lret
xchg
sub
inc
mov
pop
loopne
pusha
dec
lahf
and
cltd
ret
jno
out
push
out
das
jb
aaa
std
decl
loop
push
add
lret
jns
popa
add
movsb
add
pop
test
std
and
pop
fistps
pushl
mov
loope
mov
cmp
add
and
vmovdqu
and
add
ffreep
mulb
mov
ds
pushf
jp
add
mov
pop
adc
rcrl
lcall
je
mov
cld
call
outsb
lds
in
jbe
mov
sbb
ret
jnp
push
mov
mov
call
adc
popf
cmp
jg
or
xor
and
inc
sbb
stos
or
cmp
mov
aaa
xchg
bswap
daa
cmp
stc
test
enter
inc
notb
push
mov
dec
mov
cld
fsts
mov
adc
pushl
push
lret
leave
pop
add
into
stos
sub
cmc
rcrb
lret
xor
ret
xor
jl
ljmp
out
je
xchg
test
cmp
movsb
push
incl
jl
nop
clc
push
test
movsl
ret
dec
enter
mov
jmp
scas
add
sub
sarb
clc
xor
repnz
pop
loop
mov
sub
vzeroupper
fwait
sarb
mov
xchg
das
cmpb
incl
lret
sub
xor
sahf
hlt
pop
iret
lahf
arpl
sti
pop
push
in
or
sbb
test
pop
es
mov
cmp
xchg
and
roll
jno
dec
popf
mov
xor
xor
incl
mov
imull
adc
jg
dec
pusha
mov
arpl
inc
ss
sarl
cld
or
idivb
jp
jnp
jmp
mov
adc
dec
pop
ret
fisttps
cmp
jne
out
adc
or
xor
push
dec
cmp
sbb
inc
int
pop
mov
int
or
sbb
stc
insb
out
xor
sub
out
xor
cmp
xchg
sub
stos
test
lcall
out
cld
data16
sub
xchg
cld
sub
std
mov
lods
jmp
mov
jb
adc
mov
cmp
roll
in
add
xor
jmp
pop
mov
ja
loop
xor
inc
out
ret
mov
xchg
lret
push
das
adc
pop
filds
lock
cltd
ret
and
imul
dec
mov
outsb
add
add
scas
xor
sbb
pop
subb
xor
inc
cmpsb
or
add
incl
std
and
or
jo
mov
push
xor
or
cmp
push
add
incl
sub
xor
xlat
repz
mov
push
sarb
ret
sub
inc
sub
push
mov
dec
call
lea
loopne
cli
dec
fnclex
cmp
adcl
sbb
pop
loopne
push
mov
mov
pop
adc
push
jl
sar
cwtl
mov
mov
fnstenv
ret
incb
push
repz
sub
js
stc
daa
pushf
inc
ljmp
push
in
scas
adc
push
push
push
lea
adc
lret
notb
dec
jnp
sbb
xchg
lock
push
repnz
mov
out
outsl
ret
cmpsl
sbb
lcall
cwtl
add
sbb
out
lahf
insl
inc
and
and
ja
mov
xor
mov
mov
fdivrl
repnz
in
jno
out
cwtl
push
or
sub
mov
out
xor
sbb
incl
and
jecxz
arpl
loopne
cmp
ja
movsl
clc
mov
addr16
clc
scas
mov
loop
mov
ds
lods
xchg
xchg
mov
mov
iret
incl
xadd
pop
orb
pop
hlt
sbb
cli
sbb
repz
cltd
iret
call
or
or
add
push
inc
out
lcall
jg
push
push
lcall
sbb
jae
cli
scas
pusha
js
adc
xor
mov
sbb
sub
mov
fstpl
lods
pop
mov
fisttps
mov
jae
fxch
sub
mov
incl
int
lret
cmp
push
ds
xor
enter
imul
mov
dec
jns
dec
decl
xor
subl
add
sub
mov
decl
xchg
jo
out
push
adcl
jbe
cs
sub
pop
or
in
jg
out
loopne
scas
sbb
dec
shl
sahf
loop
lea
mov
fisubs
mov
out
mov
das
xor
outsb
orb
jle
mov
xor
cld
ss
sub
cld
ljmp
push
jecxz
mov
stc
jo
cmp
pop
sbb
cmp
and
pushl
fdivs
mov
fs
icebp
cmp
sub
sarb
cwtl
mov
adc
loop
and
push
imul
adc
jmp
ret
pop
aam
in
xor
pop
sbb
push
pop
lds
jle
mov
test
add
icebp
dec
cs
mov
jmp
mov
mov
fisubs
pop
sub
fstpl
fmuls
lds
jo
stc
inc
test
mov
fsubr
ss
inc
pushf
or
rclb
jo
sub
mov
fwait
lahf
shrb
cmc
push
sub
mov
popf
dec
aad
mov
rolb
out
xchg
sub
push
inc
jb
sbb
ds
push
insb
daa
popa
outsl
push
sub
adc
mov
pop
cmp
jmp
push
movsl
into
xchg
js
inc
lret
movsb
mov
movsl
dec
or
std
add
pop
inc
shlb
xor
jg
jmp
ret
lods
inc
es
gs
shlb
into
es
adc
cmp
jmp
cmp
cmp
enter
ret
or
pop
jb
shlb
scas
adc
sar
cmp
loop
into
sbbl
and
fdivs
decl
mov
fcmovb
mov
mov
pop
add
cmp
xchg
clc
into
idivl
or
pop
sti
or
mov
pop
sahf
mov
pusha
fmull
mov
mov
mov
jmp
sbb
push
push
jp
or
cmp
mov
cmpsb
incb
mov
inc
fs
enter
jge
lahf
jle
pop
dec
adcb
lret
jbe
push
call
es
xchg
in
shlb
mov
cmc
sub
in
mov
xor
ljmp
or
rclb
push
fstl
inc
lea
mov
sarl
adc
aaa
push
test
ljmp
jmp
sub
sbb
in
xchg
mov
sbb
and
lcall
sti
out
sub
and
mov
xor
mov
mov
icebp
ljmp
pushf
icebp
sub
mov
mov
mov
icebp
sub
jnp
cmp
jle
push
adc
cmc
xchg
enter
es
fs
cli
and
fmuls
dec
sub
cmp
loop
dec
jl
int3
stc
push
adc
push
adc
jmp
jnp
das
rolb
sub
jp
clc
test
les
test
or
cmp
clc
cmp
sbb
fdivl
rcr
add
addb
loopne
cmp
pushf
cmp
jno
repz
insb
into
arpl
cmpsb
in
cmp
fstpt
hlt
stos
out
inc
int
jnp
ljmp
sbb
cwtl
fisubs
cmp
inc
pop
sub
mull
xor
incl
mov
scas
mov
stc
mov
mov
idivl
lea
inc
push
jne
fcmovnu
lcall
mov
rolb
or
es
movsb
sbb
fcompl
call
push
sar
decl
movsl
and
cli
inc
push
mov
cwtl
xchg
lahf
mov
and
lods
scas
call
fisubrs
or
jmp
ret
divl
or
pop
and
add
adc
call
hlt
mov
shl
div
bound
leave
and
repnz
pushl
cmp
or
rcl
test
xor
cltd
stos
sbb
clc
fidivl
jmp
inc
dec
jb
int3
mov
shlb
leave
sub
xor
and
or
enter
clc
sahf
je
sbb
imul
push
ret
jecxz
jmp
xchg
lret
lret
divb
sub
cmpsb
dec
daa
dec
xchg
loopne
aam
imul
shrb
mov
and
faddl
stos
shrl
mov
jecxz
sub
mov
push
arpl
jmp
sbbb
enter
pop
sbb
jle
insb
adc
xchg
add
insl
cmp
mov
pop
jp
out
movsl
jecxz
cmc
or
out
push
mov
ss
repnz
notl
scas
cli
mov
scas
outsl
repz
jo
pusha
clc
jo
popl
xor
jb
add
adc
call
arpl
int
bound
idivb
in
jnp
arpl
and
xor
xchg
jo
jmp
loopne
and
mov
mov
dec
mov
jp
xor
movsb
fwait
push
popa
filds
inc
inc
mov
incl
out
lret
mov
ret
adc
mov
lret
mov
jmp
pushl
rcrb
test
lret
mov
push
out
mov
test
mov
mov
mov
cmp
xor
pushf
pop
pop
stc
pushf
sarb
leave
lods
and
cli
ljmp
jl
mov
mov
sti
mov
adc
insb
ret
dec
lock
ljmp
or
push
aas
pop
push
adc
lahf
xchg
enter
sti
jg
ljmp
mov
mov
sbb
rorb
jp
pop
and
fnstcw
and
jno
jne
jl
fst
fldl
arpl
sub
add
aas
adcl
inc
jne
pop
aas
and
cmp
jmp
inc
inc
mov
pop
jp
and
cltd
cmp
mov
mov
mov
jecxz
ret
outsl
stos
and
xor
ds
jmp
jae
and
push
sbb
icebp
pop
loopne
sbb
dec
out
cmpsb
jb
inc
push
fldt
push
shl
lods
out
pop
push
insb
inc
cmpsb
fucom
repnz
in
xchg
repz
movsb
call
mov
jl
shl
jo
loopne
lahf
jae
xchg
ret
loope
or
jle
icebp
incl
mov
jmp
aaa
pop
sub
sub
mov
xlat
xlat
mov
pop
jnp
cltd
or
mov
clc
outsb
adc
and
cwtl
lcall
dec
xor
push
out
jne
out
add
mov
sbb
xchg
fcmovu
and
mov
decl
mov
push
dec
js
cld
mov
mov
cmp
out
lock
mov
jmp
mov
cmp
add
dec
sbb
gs
outsl
aas
clc
sar
fucomp
popa
mov
xchg
loopne
call
jge
add
mov
loope
fldt
lods
fwait
clc
adc
incb
sbb
decl
imul
fs
cmp
lds
lcall
ret
cmpsb
dec
mov
pop
adc
xor
out
jecxz
adc
inc
ror
ljmp
push
xchg
sub
add
je
inc
pushf
daa
or
inc
push
inc
add
repnz
push
adc
push
push
push
mov
in
js
inc
fcoml
adc
mov
cli
shrb
call
jge
ja
jb
push
lea
icebp
adc
or
into
cmp
add
add
es
jo
mov
pop
fs
out
push
sbb
call
and
cmp
in
sub
jg
fidivrs
jnp
test
shrb
dec
repnz
loope
dec
xchg
adc
aad
xchg
sub
fcomps
data16
lcall
cmpsb
cmpsb
jns
jno
adc
sti
or
jbe
pop
shlb
sar
pop
add
lods
sbb
push
mov
data16
shrb
pusha
repz
xor
orl
push
fwait
aam
mulb
das
push
stc
ljmp
rol
repz
nop
aad
push
xor
ljmp
shl
popf
pop
xchg
mov
and
outsl
fsubrl
into
ljmp
incl
push
and
lcall
mov
pusha
dec
test
cwtl
or
xor
pop
jmp
adc
fs
mov
mov
daa
xchg
sbb
mov
loopne
mov
out
aas
stc
movsl
decl
in
loope
or
cmc
sahf
push
inc
and
outsb
in
ljmp
push
bound
sbb
iret
aam
jne
orb
xchg
rcrb
jl
pushl
jge
pop
out
inc
fistps
pop
inc
xor
xchg
sahf
dec
xchg
and
imul
push
decl
sbb
aas
mov
inc
clc
out
adcl
mov
call
fldenv
mov
mov
loope
mov
or
mov
mov
aas
lret
addr16
decl
lret
add
hlt
jo
cmc
stos
pop
leave
aaa
adc
mov
inc
cmp
ffreep
xor
stos
jb
xchg
mov
ret
bound
ret
or
push
jae
outsb
pop
jnp
lcall
add
outsl
test
sub
push
fbld
inc
jns
in
push
jb
in
iret
push
movsb
es
sub
push
sub
imul
pop
lods
and
decl
dec
cmpsb
fsubrp
dec
lock
add
in
insb
into
or
sarl
jb
jmp
jno
pop
lcall
call
movb
insb
and
cmpsb
rcr
dec
out
lahf
cmp
push
jp
xor
daa
adc
imul
inc
repz
shl
into
rcrb
rclb
out
clc
cli
arpl
or
ret
xor
rolb
lods
mov
xchg
nop
mov
ret
popf
mul
gs
imul
fidivrl
fdivr
lcall
imul
dec
orb
push
dec
adc
fidivrs
inc
xor
clc
mov
cmp
popf
ljmp
addr16
adc
sahf
mov
ljmp
adc
sar
incl
cltd
sbb
aaa
lret
mov
fwait
and
jle
fimull
shr
jno
push
mov
sub
cmc
in
xor
inc
add
jb
nop
call
cmpsb
stc
addr16
jns
pusha
test
test
push
dec
lret
hlt
push
cmp
aaa
mov
stos
test
movsl
out
out
push
pushf
shrb
push
sar
out
add
lods
popf
dec
les
lahf
pop
inc
xor
sub
cmp
mov
mov
icebp
lcall
icebp
ret
arpl
les
cmpsb
mov
jge
or
adc
bound
sbb
incl
xchg
fsts
mov
jmp
cmc
stc
data16
jnp
js
inc
pop
xor
daa
jecxz
iret
push
cs
or
jge
xchg
mov
icebp
pushl
cwtl
lret
adc
mov
fidivrs
push
stc
jmp
or
decl
inc
cwtl
lcall
jnp
imul
call
nop
adc
push
pop
mov
add
xchg
cmp
mov
pop
cld
incl
cmp
xchg
inc
mov
mov
out
loop
vmovapd
jns
pop
pop
or
dec
stc
xchg
or
lret
inc
cs
adc
sbb
test
jge
ss
aad
imul
mov
mov
adc
insl
mov
call
aaa
push
mov
movsl
loop
in
cmpsl
sbb
pop
mov
mov
add
dec
fisttps
pop
inc
cmp
pop
mov
mov
decl
clc
fildll
pop
mov
push
rcrb
popf
fcmovne
rorl
cmpsb
stos
inc
sub
xchg
xchg
push
adc
leave
mov
xorb
cli
jge
mov
jb
adc
lcall
cmpsb
loopne
push
lods
jp
and
jno
xchg
pop
sub
insw
add
push
lahf
add
jmp
pop
mov
add
outsl
mov
jmp
push
xchg
test
sbb
rcrb
call
pop
cwtl
mov
imulb
movsl
jo
and
pop
add
hlt
ret
shrb
xor
ljmp
outsl
push
and
cli
inc
mov
cmpsb
dec
fildll
outsl
sub
daa
fsubl
gs
sub
push
ds
call
mov
decl
sbb
ljmp
adc
cmc
xchg
xchg
test
dec
imul
lcall
mov
mov
and
cmp
push
mov
les
insb
addb
and
pop
and
or
cmpl
int3
and
loop
mov
xor
mov
outsb
xor
mov
cmpsb
arpl
enter
dec
sarl
lret
sbb
popf
movsb
push
or
outsl
ror
adc
fbstp
pushl
sub
dec
lods
dec
rorl
adc
sbb
xor
mov
lret
outsl
hlt
loopne
lcall
adc
mov
push
dec
xchg
insl
inc
loopne
adc
cltd
fs
mov
rorb
loope
adc
pop
push
and
mov
addb
push
jns
dec
or
loope
pop
movl
dec
xchg
cmp
daa
lahf
leave
jbe
xchg
mov
adc
hlt
les
mov
push
pushf
mov
addr16
xchg
xchg
repnz
jmp
in
mov
sub
inc
jge
mov
arpl
popl
push
ljmp
ljmp
mov
call
outsl
insl
xor
jl
mov
je
fcomip
incl
pop
lds
push
xchg
jge
je
cmp
in
sub
ficompl
push
xchg
popl
push
mov
jle
movsb
cli
mov
adc
dec
int
jno
mov
cld
fnstcw
scas
sub
mov
fistpl
lret
lds
cmc
jne
inc
ja
call
and
lock
or
jno
sbb
movsl
and
gs
rep
mov
push
stos
in
test
jle
int3
nop
push
dec
sub
stc
mov
push
imul
dec
pop
cmp
hlt
xchg
mov
xor
fisttps
decl
rcrl
mov
lret
gs
sti
jne
mov
ljmp
and
cld
jb
dec
movsl
sbbb
push
mov
mov
cmp
lcall
or
cwtl
or
lds
xor
fnsave
add
in
or
add
cmp
pop
outsl
out
ljmp
fsubr
cld
hlt
adc
fsts
jb
sarl
pop
lods
bound
push
jp
push
sbb
in
pushl
fnstcw
imul
jbe
adc
jge
mov
fincstp
call
addl
mov
add
fadds
xor
in
pop
stc
sbb
dec
push
decl
xor
insb
or
mov
fnstsw
jmp
push
lahf
es
out
fstpl
call
hlt
inc
add
inc
enter
jecxz
lds
xlat
je
roll
push
adc
sar
ljmp
cli
mov
xorl
inc
and
cmp
xchg
jo
dec
mov
mov
pushl
mov
sub
push
scas
out
sub
popf
xchg
cli
mov
jbe
ss
pusha
add
mov
cmp
lcall
xchg
lds
xchg
orl
mov
scas
enter
sub
daa
sbb
sar
lcall
dec
xor
mov
push
aaa
lea
push
lcall
xchg
call
incl
jg
xlat
cwtl
mov
rcrb
cmpb
call
out
lds
pop
sbb
popf
mov
mov
dec
cmp
cmp
push
xchg
mov
dec
adc
int3
aas
dec
ljmp
rcr
scas
inc
cmpsb
dec
imul
sub
aad
and
adc
ljmp
dec
lds
arpl
lea
jo
sub
mov
mov
adcb
pop
into
ljmp
adc
imul
xor
sbb
and
popf
lret
adc
in
lods
mov
mov
sbb
pop
testl
bound
inc
pushf
dec
fstpt
fcomip
loopne
ss
and
cmpsb
out
repz
mov
jp
sub
dec
sub
imul
leave
out
pushw
movsb
xchg
fldl
ljmp
sbb
jg
adc
ds
fnstenv
arpl
pop
loope
cmp
adc
jmp
push
mov
add
out
mov
fldcw
adcl
insl
xchg
testb
mov
jle
fcmovu
inc
sbb
rorb
jg
fucomi
aaa
test
push
jne
inc
mov
aaa
sbbb
jg
or
dec
enter
orb
sbb
jge
mov
or
pop
addr16
mov
mov
mov
int
jg
incl
hlt
ffree
adc
pop
xor
or
xchg
lods
cltd
cmp
ljmp
ljmp
mov
imul
hlt
subl
pop
testb
jmp
and
push
repnz
out
out
imul
fldl
xorb
rclb
push
or
imul
add
lods
mov
leave
lods
pop
andb
incl
and
repnz
call
mov
lret
pop
jbe
cmp
cmpsb
cmpsb
loop
hlt
cmpsb
xlat
movsl
fnstenv
and
add
out
xor
outsl
cli
decl
inc
je
mov
test
add
sbb
movsb
pop
mov
inc
adc
mov
push
inc
lret
jmp
pop
jle
fwait
inc
js
push
inc
mov
xchg
inc
fidivrs
mov
popf
mov
popf
inc
cltd
push
mov
lea
icebp
sub
fiaddl
clc
and
das
call
jl
sbb
lahf
dec
xor
fiadds
jno
pop
jne
filds
or
mov
fwait
pop
push
mov
xor
mov
adc
mov
add
xchg
push
jmp
movsl
push
jne
js
scas
data16
cmc
adc
inc
and
cld
dec
aad
and
sar
call
adc
pop
pop
mov
pop
mov
out
cli
cmc
and
xor
aad
aas
mov
inc
add
jno
jmp
adc
dec
adc
enter
outsl
lds
push
or
call
sub
movsl
dec
stc
in
imul
loopne
fmull
jle
mov
insb
pushf
mov
sbb
xlat
aas
aas
mov
cld
repz
and
call
inc
xchg
mov
lcall
out
ss
xor
mov
add
les
jo
ret
dec
shrl
sbb
push
pop
fisubl
idiv
outsb
inc
push
sbb
loopne
or
mov
int3
stc
adc
pop
sbb
outsl
cli
incl
pop
sbb
push
imul
mov
sbb
addl
out
call
lock
test
mov
push
inc
nop
jg
add
call
push
and
pop
push
pop
pop
push
imul
and
mov
mov
nop
outsb
xchg
jbe
aam
jmp
nop
rorl
stos
cld
mov
xchg
scas
xor
and
add
decl
mov
sahf
jmpw
loopne
fldcw
jmp
hlt
ljmp
aaa
repnz
in
mov
sub
arpl
xchg
repnz
mov
xor
aam
mov
add
add
xchg
inc
dec
inc
pop
repnz
movsb
inc
in
pop
xchg
mov
add
xor
outsb
xchg
ljmp
cli
loopne
push
mov
fcmovnbe
inc
mov
and
push
cld
or
push
into
test
test
adc
dec
movb
stos
insl
cld
cmp
and
fnstsw
jmp
test
add
clc
lcall
pop
gs
mov
pop
jnp
push
ljmp
jp
pop
fisttpl
inc
leave
sub
xor
repnz
out
dec
in
pop
into
adc
jmp
mov
aaa
mov
data16
or
and
ret
cmp
add
mov
mov
clc
incl
sub
popf
sahf
data16
jp
xchg
adc
cltd
push
jl
outsl
fwait
mov
sbb
test
pop
dec
or
and
jmp
iret
dec
mov
jae
iret
inc
jnp
lahf
in
add
jne
mov
adc
std
call
sub
lds
or
push
or
push
arpl
and
ja
xor
lods
push
std
pop
xorb
cs
daa
push
nop
test
call
sbb
mov
out
xchg
ss
mov
js
mull
sbb
in
ja
mov
sub
adc
pushl
mov
popf
pop
xchg
jl
cmpsb
mov
cmp
decl
mov
push
pop
cmc
loop
push
popa
xlat
mov
mov
sbb
fldenv
ds
test
adc
scas
sti
repnz
fwait
adc
sbb
bound
ret
ret
push
sbb
fisubl
lcall
pushl
adc
pop
repnz
loop
push
ja
in
cld
je
push
inc
daa
or
pushl
add
lds
outsl
mov
pandn
js
pop
fxch
push
pop
inc
ret
ret
jns
xor
mov
lret
sbb
xchg
or
mov
jg
and
orb
je
roll
mov
add
inc
clc
aam
pop
aam
rcl
aam
cmp
or
jmp
lods
enter
and
pop
loope
ds
jp
out
pop
jmp
rolb
xchg
or
push
in
dec
mov
xlat
xchg
jns
clc
pop
outsb
xor
scas
adc
or
nop
cmp
jns
and
jl
pop
jne
das
cli
decl
aam
out
jae
cmc
in
push
cmp
sarb
ds
xchg
stc
add
push
pop
cmpsl
jne
cli
mov
dec
in
push
decl
pop
ret
sub
imul
inc
mov
aam
decl
or
mov
clc
xchg
repz
sbb
mov
cmp
sbb
xchg
mov
loopne
cmp
cmp
sub
rcll
pushl
sbb
call
outsb
push
popa
xchg
sbb
jne
stos
lret
cwtl
mov
jg
mov
lods
pop
xchg
or
int
xchg
add
and
pop
push
outsl
iret
pop
aaa
outsb
orl
lcall
jne
xchg
stos
lea
push
into
cmp
lret
cld
cmp
daa
inc
fwait
add
call
xor
in
xor
out
mov
pop
pop
lds
cmp
mov
iret
ja
nop
movsl
mov
stos
test
xor
inc
xchg
xchg
ljmp
jge
mov
ds
in
addr16
xchg
xor
xor
sti
bound
pushl
xchg
loopne
add
gs
jmp
loop
pop
or
out
das
sbb
pop
stos
loope
rorl
pop
je
or
clc
xor
movl
add
pmulhw
imul
int
in
push
aas
xchg
test
incl
push
stc
mov
sbb
xor
je
mov
sub
imul
push
cld
jmp
lahf
dec
hlt
push
pop
xor
mov
pushf
movaps
jne
xchg
mov
lcall
dec
std
inc
sub
ret
sarb
loope
rcr
ficomps
mov
push
mov
jne
jmp
enter
mov
dec
adc
inc
or
mov
or
pop
sbb
popa
sub
ds
or
adc
jno
mov
fdivrl
mov
in
mov
loope
call
push
imul
pop
je
iret
xchg
lret
in
and
xor
leave
dec
nop
pusha
call
data16
or
adc
xchg
add
lods
add
mov
loopne
lcall
sub
decl
cld
mov
mov
jnp
lds
ds
imul
ret
cmp
in
mov
ljmp
or
es
stos
dec
pusha
fs
fisttps
mov
inc
stos
incl
pushf
jge
testb
in
pushf
mov
fidivrl
ret
and
cli
sub
fimuls
add
lret
je
lds
andb
dec
aam
jmp
out
in
mov
pop
paddusw
mov
pop
sti
addr16
mov
scas
ret
mov
call
outsl
aas
push
ss
stos
outsl
sbb
ret
stc
mov
popf
ljmp
clc
mov
leave
mov
iret
push
scas
out
jecxz
sbb
or
enter
test
outsb
dec
jecxz
lahf
xchg
push
dec
je
or
aas
vfmsubps
adc
into
add
test
dec
rcr
xor
pop
mov
scas
add
scas
stos
cmpsl
nop
xchg
adc
jg
int3
data16
jg
lds
jnp
lock
jmp
lcall
mov
idivl
js
ljmp
or
lcall
testl
pushl
test
mov
inc
push
pop
popa
aaa
adc
sbb
jl
rorb
gs
pushl
and
jg
stos
mov
cmp
xor
in
pop
push
hlt
xchg
lods
mov
xchg
adc
inc
jg
movsb
add
jge
mov
and
add
mov
jno
or
ljmp
shlb
xor
loope
push
or
jns
jg
lcall
add
xchg
dec
daa
fs
test
dec
lahf
jle
sahf
push
decb
mov
adc
lret
decl
nop
scas
mov
mov
imul
jl
or
dec
mov
incl
jns
push
xchg
arpl
pusha
out
push
test
jg
enter
mov
arpl
dec
dec
out
lahf
fs
cmp
nop
cmp
adc
mov
fimuls
iret
cmpsl
push
ficoms
push
dec
iret
icebp
mov
pushl
and
ret
xor
mov
sahf
push
sbb
daa
pop
lcall
jp
out
test
shlb
inc
xor
pushl
pusha
mov
and
mov
jns
loop
xor
loopne
cmp
jne
and
into
movsl
and
ret
lds
sar
dec
dec
inc
test
addr16
addr16
adc
insl
lahf
adc
or
pushl
or
cmp
xchg
pusha
pop
add
sub
fisttps
loope
inc
xchg
xlat
cmp
movsb
cmp
pop
call
fs
outsb
pushf
jb
std
mov
mov
ficoml
aam
test
das
stos
push
mov
mov
test
adc
sbb
call
mov
data16
mov
out
es
das
jne
inc
inc
xchg
cmp
xorb
loope
es
incl
repnz
sbb
rclb
out
ret
daa
popa
add
cwtl
xchg
mov
imul
jmp
inc
out
push
xchg
in
cltd
jg
incb
les
outsb
ud2
addr16
lcall
cmc
into
dec
fwait
push
testl
dec
sti
adc
pop
adc
fidivrl
jl
movsb
inc
ud0
inc
mov
cmp
sti
das
enter
xor
nop
mov
imul
clc
push
add
rclb
inc
out
movsb
mov
inc
xchg
adc
inc
icebp
jp
xchg
int3
mov
out
push
cld
lcall
add
jno
cltd
nop
pop
sti
stc
lcall
sarb
call
call
das
and
ret
inc
rcr
mov
mov
pop
sub
ljmp
into
lahf
arpl
cs
addr16
rcll
mov
cmpsl
xor
divb
incl
jecxz
repz
push
xchg
das
lahf
sub
popf
dec
sti
sub
lods
pop
add
mov
loop
ss
stc
das
subb
cmc
dec
nop
mov
int
ljmp
insl
aaa
mov
xor
inc
mov
pop
test
push
mov
lods
repz
call
push
sti
xchg
ret
dec
mov
inc
call
inc
out
and
add
sbb
mov
decl
cmp
fstl
or
pop
push
dec
mov
jg
mov
jg
jmp
repz
and
ffreep
into
inc
out
dec
jmp
jge
or
push
inc
fisttpll
cmp
cmp
pop
and
jo
add
push
cmpb
into
pop
mov
lock
pushl
rcrb
rorb
shll
pop
shlb
call
lret
cmp
add
or
clc
dec
lock
hlt
sbb
dec
add
dec
lahf
ja
repz
data16
push
aaa
test
jmp
mov
and
or
gs
xor
ljmp
insb
cwtl
jg
iret
xor
push
inc
sub
loop
pusha
lcall
add
sub
pop
jmp
xor
push
and
testl
dec
aaa
jmp
scas
inc
add
scas
push
shl
stos
ficompl
lods
pop
jne
or
std
dec
sub
ja
add
clc
xor
pushf
jl
sbb
pusha
fwait
stos
xchg
roll
push
js
push
js
call
sub
mov
icebp
xchg
sarl
insb
mov
push
or
std
pushl
pop
filds
dec
push
mov
mov
out
jb
fsubl
lcall
dec
add
loop
xchg
xorl
mov
scas
loopne
call
aas
outsl
xchg
xor
cmp
push
xor
sahf
fildll
or
fdivrs
test
call
mov
mov
inc
outsb
mov
or
negb
fcoms
movsb
ljmp
sbb
test
pop
fisubrs
and
pop
mov
loop
jg
add
mov
adc
iret
cmp
pop
jbe
or
lahf
xchg
or
inc
push
ret
xor
and
sub
insb
add
mov
fidivs
sbb
dec
cmc
jg
jmp
jl
and
jp
testb
loop
jecxz
inc
sbb
aas
or
mov
mov
cmpl
inc
push
mov
jo
sbb
scas
xor
icebp
call
or
xchg
pop
xor
xor
arpl
inc
call
aad
scas
dec
shl
test
addr16
ficomps
mov
pushl
inc
mov
inc
mov
in
stc
add
xorb
jnp
in
lock
lcall
outsb
in
push
add
inc
fwait
and
mov
ljmp
decl
je
xchg
icebp
movsl
adc
jecxz
sub
add
cmp
push
leave
cwtl
xchg
adc
dec
jl
adc
inc
adc
daa
mov
mov
sti
ss
lods
push
ljmp
inc
push
pop
sub
or
sub
cwtl
popa
pop
pop
inc
xor
jmp
push
adc
test
nop
and
scas
or
dec
push
dec
lcall
adc
loopne
push
test
or
inc
pop
mov
data16
add
leave
xchg
addr16
icebp
mov
pop
adc
out
cmp
pop
mov
and
or
mov
test
mov
push
je
mov
fsts
mov
or
ljmp
mov
mov
dec
jnp
outsl
loope
scas
aas
add
daa
dec
call
imul
jmp
lods
mov
mov
fimuls
mov
out
ret
decb
cwtl
cmc
jmp
inc
lock
mov
repnz
repnz
decl
lret
add
ret
push
cmpsl
or
pop
testb
pop
jg
adc
mov
test
jbe
add
jg
jmp
sub
cmp
into
mov
push
inc
roll
push
mov
fisttps
in
pushl
dec
or
in
sub
data16
divl
add
jae
sub
lcall
loop
push
sbb
int
pop
fcmovu
inc
mov
and
loopne
inc
idivl
xor
push
pop
sub
repz
test
imul
test
push
xchg
jecxz
xchg
into
sti
notb
add
mov
out
sub
jae
sahf
mov
dec
sbb
cmp
out
inc
cmp
mov
pushl
mov
nop
arpl
fst
sub
push
sub
inc
out
sub
jmp
add
lcall
lock
xor
add
movsb
nop
pop
inc
xchg
leave
sti
decl
fmuls
js
inc
cli
repnz
adc
dec
test
dec
pop
inc
cld
incl
sahf
shlb
fdivrs
jg
mov
xchg
enter
loop
in
dec
out
scas
or
lret
imul
lods
pop
or
and
call
imulb
bound
mov
fdivrl
sub
push
cmpb
inc
cli
popa
xor
sbb
inc
push
pop
loopne
jl
adc
pop
pop
ret
decl
dec
es
inc
sbb
cmp
std
fst
das
mov
adc
out
xchg
mov
mov
incl
loopne
sahf
ror
mov
pop
gs
jg
icebp
jmp
xor
xchg
sbbl
sub
push
cld
sub
insb
fs
pop
fistps
adc
cmp
jmp
pop
popf
imul
mov
sub
pop
mov
roll
loope
loop
mov
outsl
aaa
cld
inc
xchg
sub
hlt
jl
inc
dec
xor
pop
add
cltd
lret
arpl
dec
adc
lahf
jmp
enter
call
mov
pop
ret
int3
jns
imull
sti
addl
ljmp
jmp
adc
les
jg
cmp
sbb
popa
jle
je
imul
jae
pop
repnz
dec
sti
sahf
pop
outsb
incl
outsb
mov
stos
int
mov
shll
enter
jb
dec
add
dec
incl
pop
ja
das
stos
mov
cmp
ja
mov
or
imul
incl
jp
test
out
inc
jge
aaa
mov
addb
jae
fldt
cli
call
xchg
arpl
sbb
ja
mov
push
cwtl
push
call
adc
dec
sbb
adc
in
addr16
decl
out
mov
popf
mov
cmp
fwait
incl
pop
sbb
cmp
popa
cmp
xchg
in
xchg
cmp
mov
pushl
jns
aad
and
or
loop
sbb
rclb
mov
mov
jmp
cli
pop
aaa
mov
das
cmp
std
xor
test
das
xchg
xor
call
loopne
iret
pop
sbb
mov
mov
imul
xchg
jmp
and
sti
arpl
jle
inc
adc
add
call
lods
cmp
mov
insb
imul
pusha
cmp
push
dec
inc
lock
movsl
in
pusha
arpl
inc
dec
leave
mov
jne
and
jl
cmpsb
insl
xchg
fwait
lahf
fnstsw
pop
shlb
js
fincstp
data16
or
cs
out
xorl
clc
loope
movsb
cmp
in
outsl
mov
jae
inc
push
push
int
fimull
mov
aad
cs
jg
incl
and
and
cmp
mov
mov
pop
xor
incl
out
lock
aad
push
test
loope
mov
les
mov
pushf
popa
fnstenv
data16
loop
lcall
adc
aad
adc
enter
addr16
jns
inc
mov
pusha
inc
mov
call
xchg
push
inc
std
jne
and
cltd
sahf
popf
jae
push
loop
xchg
or
ja
outsb
mov
jne
int
xchg
add
and
aas
fcmovnbe
pop
cmc
mov
pop
jg
clc
lcall
loop
cltd
xor
pop
pop
jl
xchg
and
jl
loope
ljmp
lahf
cmp
subl
mov
enter
repnz
lock
cli
mov
mov
xchg
scas
imul
sub
call
pop
scas
pop
loop
loop
pop
lea
xchg
pusha
xchg
fimull
stos
sarl
lahf
mov
fistpll
call
gs
push
mov
cld
incl
mov
ret
addb
or
lods
stos
push
sub
popa
inc
out
decb
inc
call
movsb
mov
aas
pop
sub
rcll
enter
cmpsl
xlat
mov
xchg
int
xor
fcomip
arpl
sti
cmp
imul
in
jo
outsb
repz
mov
inc
jno
pop
cld
ljmp
repnz
mov
sbb
cwtl
stos
cmpsb
mov
mov
cmp
sub
movsb
sarl
mov
inc
aas
cli
dec
jbe
pop
popa
dec
xchg
enter
adc
mov
in
icebp
test
test
pop
in
ljmp
ficoml
repnz
call
das
add
xor
jle
imul
jmp
xchg
aaa
jmp
adc
shlb
xor
sub
incl
out
dec
movsb
push
jo
push
pop
iret
js
xor
inc
insb
bswap
or
sbb
lcall
fcmovne
aas
dec
push
mov
gs
xor
lds
and
ljmp
lahf
lods
shl
cmp
sub
push
testl
cwtl
mov
insl
popa
sub
fbld
sbb
dec
mov
arpl
les
out
mov
inc
stos
imul
lret
loopne
xor
lcall
mov
add
cld
pop
push
and
push
out
mov
push
inc
mov
shrb
push
pop
arpl
out
pop
cmp
pop
lods
negb
addr16
loop
call
mov
bound
push
sub
fdivl
lcall
loop
xchg
fs
loope
pop
xlat
cmp
xlat
lds
pop
adc
decl
jp
push
insb
lock
xchg
jb
ret
enter
xor
dec
mov
aas
rcr
mov
push
inc
into
sbb
dec
push
loope
xor
pushl
jne
pushf
mov
int3
lock
ret
testb
mov
lret
xchg
pushf
outsl
lcall
cwtl
outsl
jg
jbe
loope
jmp
imul
ljmp
int
jno
push
test
mov
mov
lret
mov
fsubrl
adc
push
test
jno
hlt
jae
decl
inc
lds
mov
sub
or
inc
xchg
pusha
sbb
jl
pushl
cmp
dec
add
clc
fsubr
dec
pop
imul
xor
xchg
mov
mov
jbe
pop
mov
stc
fidivrs
and
mov
ljmp
jae
repnz
mov
jle
in
cmpsl
scas
mov
shlb
call
jns
dec
repz
xor
dec
jo
ds
or
and
fsubs
cmp
lcall
xor
pop
xchg
fsubl
out
adcl
lods
jbe
arpl
clc
jno
bound
aas
add
cwtl
pusha
jno
pop
fldcw
or
inc
dec
leave
mov
enter
cli
in
ret
rol
les
mov
cmp
inc
stc
pop
sub
mov
xchg
fsubs
dec
inc
aas
adc
incl
or
inc
cmp
ds
sub
sbb
cli
pop
dec
cmp
cmpb
pushl
mov
fistps
pushf
dec
jae
mov
insl
mov
push
push
xor
or
scas
shll
ja
cli
cltd
xchg
movsl
mov
in
sbb
pop
call
loopne
xchg
lods
orl
xlat
sub
pop
push
pusha
mov
add
ss
decl
xlat
inc
lret
cli
loopne
mov
faddl
es
js
subl
pop
jbe
scas
mov
stos
inc
sub
out
mov
loopne
sbb
mov
movsl
pop
lea
xor
jb
mov
decl
jb
xchg
push
movsl
out
in
sar
or
negl
out
ret
dec
leave
lahf
sub
or
mov
add
lods
sub
pop
leave
push
inc
test
test
jmp
into
loop
sbb
dec
les
mov
cmp
add
jmp
ja
out
into
jbe
push
test
out
repnz
jo
jp
cmp
sbb
and
cmp
lcall
xchg
rorb
loop
xchg
add
in
imul
mov
std
xor
or
mov
dec
ja
arpl
jge
sub
dec
push
into
call
ficomps
jb
sub
mov
jp
shrb
mov
cmp
out
adc
push
cmp
dec
and
inc
inc
cwtl
in
xor
shlb
jbe
into
loopne
js
inc
js
xor
xchg
btc
pop
fs
sbb
fists
loopne
lcall
cmp
and
push
add
pop
add
xchg
std
inc
xchg
dec
cltd
xorl
mov
sbbb
mov
xor
dec
lahf
cmp
cmp
stos
inc
sbb
call
push
int
inc
push
pushf
cmp
ja
scas
mov
add
jp
in
jmp
fcmovnbe
notl
popf
lods
clc
cmp
fcoms
jne
into
lods
jne
pushl
loop
cltd
sub
test
lret
xchg
pop
cmp
pop
dec
mov
jle
cld
scas
and
ljmp
jg
add
xor
andb
lock
dec
dec
xabort
add
pop
cmpsl
fwait
jmp
lods
cs
mull
mov
aad
decl
pushf
push
int
xchg
xchg
adc
push
push
imul
into
mov
pop
out
out
jnp
jnp
xchg
xchg
and
sub
les
cli
rcr
cmp
adc
inc
add
fdivs
test
push
inc
push
pop
out
stos
stos
hlt
daa
jbe
sti
mov
movsb
cmp
dec
xor
call
test
push
cli
mov
add
mov
fs
js
sbb
ljmp
pop
push
inc
jmp
pop
ss
dec
add
rdmsr
jno
dec
pop
or
xor
add
inc
sbb
jg
or
pop
sub
mov
xorb
call
sub
lods
enter
push
ss
sbb
jae
xchg
xchg
popf
rol
stc
icebp
andb
pop
sbb
in
scas
and
xor
popa
push
mov
cmp
pop
insl
jecxz
xchg
cld
and
add
mov
sar
rolb
test
pop
add
int
stos
push
inc
test
xchg
mov
loope
and
outsl
mov
ljmp
insb
mov
jmp
xchg
ljmp
xchg
ret
xchg
js
fwait
jg
xchg
cli
mov
and
in
push
jbe
arpl
xor
popa
rcl
into
xor
jmp
outsl
pushl
mov
leave
pop
cmp
loopne
xor
jo
mov
mov
mov
cmp
pop
xchg
in
xchg
std
jp
std
cmpsl
cltd
popf
insb
xchg
mov
lahf
aad
stc
dec
ret
lods
jp
xchg
push
mov
mov
adc
pop
push
data16
add
js
mov
mov
fcomp
mov
xchg
les
sub
push
dec
in
aaa
lcall
ljmp
jle
pop
sbb
cld
cmp
dec
js
lcall
push
pushf
jb
hlt
js
mov
shll
cld
testl
repnz
pop
or
mov
fildl
xor
movsb
jmp
sub
das
push
dec
sbb
xchg
mov
js
daa
nop
mov
lcall
mov
lds
cmp
bound
inc
pushf
andb
add
or
int3
push
and
call
mov
jb
or
in
mov
sbb
loop
pop
out
pop
jb
icebp
outsl
adc
push
mov
lcall
or
jno
lds
into
inc
inc
sti
jge
jmp
cmp
xor
xor
popl
lahf
add
jnp
lret
ljmp
mov
andl
or
push
std
jo
das
or
cmp
push
int3
jne
loope
incl
dec
xor
outsb
bound
outsb
adc
fdivl
add
ljmp
insl
jo
cltd
jo
mov
mov
mov
add
push
nop
adc
aam
test
mov
mov
inc
das
xlat
dec
xor
sbb
loop
jg
js
cmp
lret
lcall
lea
icebp
or
jns
jg
mov
sub
rsqrtps
out
hlt
and
mov
cmp
das
sub
cmpsb
push
les
mov
jmp
popa
jns
add
scas
jp
push
fldt
cli
incl
pop
fildll
push
mov
in
aam
mov
aaa
rol
insb
out
aam
mov
imul
lcall
call
fcmovnu
mov
sarl
stc
lea
mov
sub
xchg
nop
lcall
repnz
incl
out
int
mov
pop
cmp
daa
loop
cld
ret
icebp
mov
jl
and
or
test
shrd
fisttps
jo
scas
ret
xor
or
jp
inc
inc
push
and
test
and
jnp
inc
dec
xchg
dec
xor
loope
iret
sub
add
sub
ret
xchg
cmp
pushw
rcll
icebp
inc
mov
nop
ss
lock
or
arpl
fsts
pushf
fimuls
incl
xchg
adc
and
popa
stos
pop
add
push
clc
or
dec
je
icebp
movsl
shlb
cli
dec
lahf
pop
lock
sub
dec
pushl
cli
cmp
and
or
xchg
stc
in
mov
jmp
xorb
mov
xchg
js
popf
int3
fstps
out
adc
pop
cwtl
cmp
pop
fisttpll
xor
lahf
hlt
insl
cmp
fwait
cmp
out
les
jae
mov
sbb
lcall
add
sti
xor
sti
xchg
sti
mov
and
decl
ljmp
out
mov
fdivl
push
inc
xor
dec
dec
xor
out
pushf
ffreep
lret
and
loop
inc
test
xchg
test
mov
dec
add
loope
ljmp
and
push
stc
add
pushf
adc
ds
mov
cs
mov
sbb
xor
loop
lcall
out
addb
sbb
loopne
or
jne
jb
call
dec
frstor
arpl
mov
mov
addl
out
mov
add
pushf
dec
pop
rclb
jb
aaa
in
mov
or
imul
jg
lcall
ds
mov
dec
pop
in
mov
je
scas
mov
mov
call
ficompl
enter
dec
cld
jle
pop
call
dec
inc
out
push
fnstsw
leave
pop
sbb
inc
ja
mov
das
clc
dec
cmp
inc
inc
sub
jmp
js
jl
inc
sbb
adc
pushl
cltd
push
cli
stos
lea
add
mov
rcll
testb
movntps
ss
fnstenv
cmp
lcall
into
orl
sbb
jge
scas
rolb
mov
xchg
fsubrl
mov
ljmp
add
pop
push
add
mov
movsl
scas
je
outsb
repnz
mov
loopne
xor
add
aaa
cld
decl
ljmp
or
sbb
inc
mov
je
test
or
out
add
lcall
or
add
mov
push
inc
jecxz
nop
fldl
and
por
call
test
sub
dec
shrb
cld
adc
add
mov
and
and
xadd
scas
cli
xor
or
addr16
mov
in
mov
leave
cmpsl
test
add
cmc
pop
jne
xor
mov
outsl
sub
or
pushl
cmp
adc
popl
adc
add
cwtl
dec
shrb
ret
faddp
adcl
sarl
inc
arpl
add
add
test
shll
aaa
add
jg
add
std
leave
pop
lods
je
test
push
mov
popf
aas
xor
and
outsl
jae
sbb
aaa
mov
inc
pushf
sub
shrb
xor
addr16
sbb
pop
hlt
loopne
cmpsb
outsl
sub
mov
mov
repz
daa
popf
andb
mov
leave
rcl
icebp
push
jmp
dec
mov
cmpsb
lret
add
std
mov
lcallw
xchg
xchg
jbe
dec
cmpsl
sub
pop
lcall
mov
jp
xchg
inc
lea
dec
inc
mov
xchg
inc
lods
push
incl
add
scas
shlb
mov
jbe
xchg
mov
dec
sub
loop
loope
in
cmp
sahf
jo
cmc
lds
push
sbb
cmp
xchg
xor
sti
pop
sar
rol
gs
mov
mov
jbe
pushl
test
out
pop
pop
movsl
cmp
nop
add
jae
in
inc
pop
aas
cld
mov
ljmp
clc
popl
mov
xlat
lret
cmp
test
jo
std
push
mov
jmp
stos
mov
cmpb
push
sub
jecxz
sbb
decl
push
lcall
out
xor
test
lcall
repnz
out
xchg
outsl
xchg
lods
push
outsl
push
sub
sbb
pop
pop
xor
push
dec
dec
int
icebp
xchg
outsb
jmp
ljmp
push
xchg
xchg
shlb
jecxz
out
fimull
cld
imul
sbb
mov
adc
adc
call
lds
test
mov
sub
jl
mov
incl
pop
and
sbb
je
pusha
fldt
push
sub
push
fwait
inc
push
xchg
sbb
cwtl
inc
in
cmp
cmpsl
mov
pop
jb
lea
or
stos
add
xchg
std
stos
je
lahf
xor
incl
jmp
in
gs
rcrb
fdivr
cmc
push
push
cli
bound
decl
iret
add
mov
inc
mov
jle
xchg
pop
jno
push
les
call
dec
inc
pop
mov
pop
or
stos
mov
jbe
xchg
jbe
call
or
call
fbld
outsb
hlt
and
jb
mov
cmc
lcall
insb
std
adc
sbb
adc
andl
push
fwait
sub
ljmp
sub
call
mov
cmp
jg
add
or
jl
lods
into
cwtl
in
nop
sub
inc
push
cld
aam
cld
mov
imul
and
lret
outsb
jg
sub
jg
call
jecxz
and
jne
lahf
out
pop
jne
pop
xchg
xchg
sbb
ljmp
in
mov
xor
cltd
inc
and
iret
lock
sarb
pop
fwait
jae
imul
div
push
mov
arpl
repnz
lcall
test
inc
sub
push
in
mov
add
mov
lret
in
das
jecxz
mov
fcomip
fisubrl
lock
push
std
add
sbb
test
pop
lods
mov
mov
call
test
sub
rcll
stos
enter
mov
aad
mov
mov
fwait
dec
mov
subb
add
ja
int
repz
in
mov
hlt
movsl
rcr
lcall
ret
mul
js
hlt
int
lea
inc
pop
dec
out
in
and
xor
cltd
std
negb
adc
jnp
mov
inc
or
cld
ja
loop
jmp
sbb
jnp
adc
fwait
lock
push
xchg
sub
stos
ljmp
lret
repnz
pop
lcall
test
daa
repz
pushl
sahf
lcall
hlt
cmp
aas
push
ret
adc
pop
sub
enter
call
loopne
mov
pop
jno
rol
sahf
loope
add
cmp
sbb
push
popf
cmpsb
lods
call
ljmp
cs
cli
push
lahf
sarb
xchg
ret
mov
mov
add
loope
cmpl
dec
js
fldcw
xchg
mov
repnz
mov
mulb
sub
push
jns
adc
enter
adc
mov
cld
popa
or
or
and
xchg
adc
jns
loop
mov
incl
or
aas
inc
getsec
das
repz
and
xor
std
insl
mov
mov
stc
insl
subl
add
fisubrl
xlat
adc
pop
loopne
call
daa
cwtl
fwait
cltd
mov
imul
lret
jns
testb
inc
sub
call
dec
stos
jb
lahf
fcompl
mov
sub
push
das
rcll
push
pop
rclb
fisttpl
push
push
lcall
sub
ret
insl
cld
jge
mov
jle
fimuls
in
push
std
jle
jmp
xor
loope
in
lock
faddp
cmc
dec
addr16
scas
lods
mov
inc
int3
int
jmp
dec
cmpsl
and
fidivl
imul
add
cmc
dec
ja
or
lock
call
cmpsb
or
push
inc
push
mov
mov
gs
xchg
xchg
cmp
gs
add
add
or
mov
test
jecxz
inc
fs
mov
sbb
sarb
cld
xor
cltd
stos
mull
adc
pop
out
mov
sbbl
loopne
loop
pop
mov
sar
out
push
cmc
xor
icebp
stos
les
repnz
cmp
scas
jb
jae
in
aam
xor
inc
adc
arpl
mov
sahf
mov
repnz
test
inc
lret
xor
push
aam
mov
push
into
push
push
mov
inc
pushf
sub
cmp
ret
pop
repnz
push
dec
aad
jnp
jge
xlat
jb
mov
lret
stc
loope
or
add
xchg
ljmp
jmp
push
sub
ljmp
mov
ret
ja
leave
jne
pusha
jae
push
inc
add
stos
ljmp
sbb
dec
out
fisubrs
repnz
add
inc
cli
enter
jmp
pop
xor
sub
cmc
fidivl
outsl
jp
mov
lret
pop
aam
test
int3
insb
xchg
test
decl
int
or
rcr
and
pop
xlat
sbb
adcb
jg
fwait
xchg
hlt
or
ss
fdivs
lods
sbb
xchg
xor
mov
cmp
add
mov
cs
shr
jbe
aas
cmp
ljmp
ds
adc
cmp
push
rol
out
dec
cmpsb
hlt
cmp
inc
sar
lcall
push
test
adc
test
add
call
mov
sub
ljmp
push
push
xchg
or
inc
cmp
jns
jns
or
pop
mov
xchg
mov
sti
jae
aas
xor
into
push
rolb
mov
mov
decl
ret
pop
fsubp
pop
jl
jae
ljmp
in
jecxz
mov
pushf
xor
jae
out
mov
cmp
add
jl
rorl
dec
lods
mov
jns
lds
rclb
es
int3
sub
mov
call
pop
stos
jg
frstor
ss
mov
ret
movsb
adc
lcall
in
sbb
cmpsl
aas
sbb
faddp
push
ret
jno
das
fwait
xor
cmpsb
call
push
pop
aam
lods
mov
mov
out
xchg
jmp
push
lods
mov
es
xor
mov
mov
int
repz
call
decl
in
loope
xor
add
loopne
cmp
mov
mov
idivl
adc
pop
lods
ljmp
mov
jne
test
jp
adc
clc
addr16
mov
mov
mul
stos
xchg
xor
ret
pop
cld
out
out
jne
aam
test
hlt
and
jbe
xchg
cmp
cmp
pop
cmp
sahf
dec
push
repnz
ss
out
js
pop
or
jmp
xor
shrl
sbbb
pushf
jp
mov
test
fcomps
push
mov
incl
mov
sti
movsb
cmpsl
jl
or
mov
mov
repnz
orl
das
cmp
shrb
in
mov
fisubl
call
mov
icebp
pop
das
mov
mov
jg
dec
enter
pushf
push
adc
push
lods
insl
fistps
push
pop
ljmp
inc
add
in
call
mov
out
idivb
nop
add
or
ljmp
sub
xchg
pusha
xchg
mov
adc
lds
cmp
cmpb
mov
push
movsl
push
mov
adc
mov
sub
lods
adc
pop
dec
iret
out
fbld
fs
jno
sub
ss
or
push
sbb
fcomip
inc
andb
sbb
aaa
daa
adcb
sti
mov
inc
jecxz
call
fmull
or
pop
adc
sbb
and
decl
in
mov
mov
cs
dec
adc
in
in
sub
outsb
push
lahf
mov
ljmp
dec
cs
jg
daa
stc
xchg
xchg
sbb
loop
pop
mov
lods
push
pop
enter
dec
rep
jp
sub
jmp
lret
xchg
fisubl
fbstp
xchg
sub
add
hlt
das
mov
sbb
test
jb
mov
pop
mov
or
dec
jmp
ds
mov
inc
nop
push
push
sub
bound
dec
or
xchg
push
das
xchg
popa
cmp
sbb
mov
int3
fsubl
cmc
pushl
pop
push
sbb
push
fisubs
gs
cmpsl
dec
push
add
jmp
dec
incb
jmp
stos
aaa
add
mov
ret
es
call
or
cmpl
movsb
mov
aas
hlt
jno
cmpsl
enter
test
or
decl
inc
adc
sti
sub
stos
adc
add
sbb
icebp
lahf
adc
ljmp
ljmp
xchg
xchg
arpl
inc
sub
imul
or
jmp
clc
push
ret
mov
sahf
cwtl
xchg
pop
cli
xor
push
pop
ljmp
jmp
hlt
jne
cli
cs
lds
pop
in
cmp
and
sbb
adc
clc
ljmp
xor
jno
call
pop
and
fwait
and
aas
inc
cmp
push
jno
add
sahf
pushl
std
push
lock
and
xchg
cmp
mov
in
shll
sti
out
mov
pop
ds
test
or
cli
aaa
jmp
inc
aaa
ret
inc
cmp
fistpll
push
aad
popf
pop
mov
push
inc
inc
movsb
je
inc
call
cmp
and
jmp
jg
lea
ja
fldenv
cltd
jmp
out
sub
divb
xor
sbbb
ljmp
mov
popf
mov
ss
test
mov
or
ljmp
leave
dec
mov
lret
inc
in
popa
stc
pop
imul
iret
cmp
mov
sub
ljmp
or
inc
les
lret
out
into
lock
out
mov
xchg
or
inc
add
cli
inc
lret
push
incl
sbb
push
push
xor
popa
add
stos
cld
incl
outsb
push
out
rcll
mov
push
popl
mov
leave
mov
cmpsb
pushl
mov
test
dec
and
cmpsb
jle
mov
jno
lcall
inc
mov
xor
or
lds
sbb
js
fisttpl
sbb
repnz
inc
push
sub
pop
dec
jnp
jbe
cmp
lcall
mov
and
mov
xchg
and
mov
xor
fwait
mov
decl
lea
jg
int
aaa
pop
mov
xchg
sarb
or
xor
mov
jg
push
and
cwtd
div
ret
shll
daa
lret
data16
adc
mov
pushl
inc
or
push
xor
out
adc
push
lods
dec
out
out
sbb
lock
shl
adc
pushl
inc
dec
decb
ljmp
jae
clc
pop
pop
xchg
lret
in
pop
mov
scas
and
inc
stos
pushl
adc
and
push
adcl
sbb
test
mov
mov
lock
and
jo
fists
sahf
sbb
xchg
push
lret
into
xor
decl
ljmp
push
enter
scas
rcrl
adc
adc
sti
adc
and
pop
and
adc
call
pushf
outsl
sub
fisttps
push
xor
sbb
stc
fstpt
mov
push
or
aam
les
shl
cmc
dec
call
lds
lea
mov
push
fistps
andl
adc
imul
dec
mov
sub
add
xchg
jmp
push
aaa
lcall
push
xor
mov
pop
xchg
lods
int3
xchg
call
xchg
add
cli
dec
cmp
mov
jne
ds
pushl
mov
mov
mov
in
les
mov
push
ss
pop
jecxz
lcall
lahf
clc
lcall
cmpsl
out
jno
lods
and
and
fcoml
loop
xor
xchg
rcll
iret
mov
cmp
cmp
pushf
sub
ljmp
jecxz
inc
in
rolb
shll
push
inc
repz
int3
outsb
js
push
out
outsl
shll
push
fwait
pushf
icebp
repz
or
fidivl
push
mov
popl
mov
pushl
sbb
sub
push
out
lcall
sub
es
cmp
pop
jmp
adc
fisttpl
negl
cmp
mov
lods
fs
sbb
in
out
and
addr16
inc
pop
stc
cmp
test
mov
mov
std
mov
xor
pop
dec
xchg
ds
clc
mov
mov
push
mov
add
scas
loope
gs
lcall
je
sar
decl
jge
sub
and
out
inc
lret
mov
addr16
stos
push
mov
call
into
and
mov
xor
or
std
cltd
xchg
mov
fstpt
inc
ljmp
jmp
or
push
jge
lds
xchg
pop
mov
or
outsl
push
push
mov
outsb
ljmp
bound
cltd
xor
xchg
in
mov
nop
test
jb
out
jg
pop
clc
lcall
loope
mov
cmp
aaa
fidivrl
pushl
mov
ret
xchg
lds
mov
ss
inc
out
dec
lods
cmp
pop
cmp
jmp
sub
jg
jl
ljmp
add
pusha
push
repz
fstl
ljmp
and
mov
push
push
or
push
inc
or
in
js
mov
jo
sahf
cs
jg
xor
push
dec
movsb
fadd
test
stos
xor
and
pop
in
pushl
ljmp
cmp
push
fcmovb
pop
pop
aam
les
pop
pushl
aas
xlat
es
pop
inc
movsb
push
roll
lret
fdivl
sub
lcall
jmp
and
xchg
inc
cmp
mov
enter
jbe
decl
xchg
imulb
test
push
pop
std
fs
jmp
push
loopne
cmp
adc
imul
daa
xor
aam
mov
adc
lcall
xor
sbb
cld
add
icebp
call
loopne
inc
xchg
je
fdivr
mov
dec
inc
inc
out
sti
xor
cli
sub
xchg
and
cli
out
cmp
scas
scas
movb
xchg
xor
sub
adc
xchg
pop
cli
neg
lret
ljmp
pop
andb
fmull
mov
ja
mov
rorb
stos
jns
dec
add
jge
mov
sub
push
push
in
push
lcall
negb
out
popa
dec
mov
cld
iret
or
or
test
inc
mov
pushl
das
scas
push
stos
lret
xchg
rcrl
das
test
je
lcall
add
call
or
jg
cwtl
jb
call
jns
xor
sarl
xlat
jp
je
xor
aas
cmp
mov
sub
lret
jnp
adc
shrl
pushl
arpl
in
mov
jae
and
jns
shlb
add
icebp
lcall
push
movsb
nop
push
test
fs
xcrypt-cbc
cmpsl
push
test
xrelease
and
pop
mov
rcrl
xor
insb
movb
sub
push
push
push
mov
pop
sub
jl
fwait
pop
xchg
xchg
lock
les
add
ljmp
jp
cmp
lcall
gs
dec
cli
ss
cmp
icebp
cmc
iret
xchg
mov
pop
popa
and
xlat
daa
cmc
in
decl
pusha
insb
rclb
sbb
dec
sub
aaa
std
push
lods
jae
mov
pop
nop
jg
and
dec
pop
push
sbb
call
int
icebp
xchg
push
pop
movsl
popa
sarl
xor
jecxz
cmp
xchg
nop
adc
rcll
xchg
fcoms
aas
sti
clc
repnz
lods
not
mov
and
mov
lcall
inc
mov
cmpsb
out
das
jo
pop
insl
mov
mov
js
mov
cwtl
fdiv
std
insb
stc
and
rorb
fwait
adc
hlt
imul
mov
and
imul
std
rorb
out
xor
jbe
int
push
xchg
sub
sbbl
shr
jbe
mov
cld
adc
inc
enter
incb
pop
dec
mov
fldenv
xor
mov
mov
aaa
push
xchg
aaa
mov
ds
sub
sbb
lcall
inc
xlat
mov
enter
sti
repz
add
jl
loop
add
imull
fldt
mov
or
incl
aam
xchg
xlat
sub
pop
lcall
and
pop
ljmp
clc
shl
mov
cld
int3
lds
pushl
xchg
mov
in
call
inc
divl
pusha
push
test
jo
das
adc
decl
rcl
pusha
out
inc
iret
adc
addps
sbb
addr16
add
pop
pusha
ljmp
mov
add
dec
movb
imul
xchg
push
loope
push
dec
mov
adc
and
inc
jae
inc
push
jb
mov
lds
add
adc
das
decl
inc
in
out
stos
sahf
sub
xchg
cmp
lahf
sbb
push
jp
es
add
scas
sub
or
decl
inc
sub
out
add
cwtl
add
into
pop
loope
mov
ret
jae
ljmp
loope
cmp
adc
sar
data16
xor
cmpsb
sub
fmuls
mov
mov
jnp
xor
inc
mov
mov
sbb
xchg
repz
test
ret
mov
cmp
push
jnp
nop
cmc
cmp
decl
inc
push
setns
iret
aas
sbb
mov
push
and
lcall
ljmp
pop
insb
mov
sub
lock
xchg
enter
out
jns
mov
fwait
incl
jmp
rcrb
or
rorl
mov
in
xchg
lcall
adc
cmpsb
mov
insb
scas
sbb
jns
mov
movups
or
xchg
incl
jb
sub
xor
aad
daa
dec
hlt
dec
jle
incl
dec
sub
fldt
xchg
pusha
pop
and
testb
bound
call
dec
or
jne
mov
in
lret
jmp
stos
test
call
call
mov
repz
mov
pop
bound
orl
in
js
das
nop
cmc
jg
stos
fcompl
stc
push
lds
mov
mov
pop
leave
rcl
int
test
mov
roll
mov
shll
lcall
imul
add
enter
sbb
or
divl
cmp
sbb
call
fidivl
push
push
movsb
fwait
jl
fwait
jmp
push
push
pop
pop
push
cmpsl
mov
mov
mov
or
jecxz
sub
cmp
test
push
std
cwtl
nop
call
jg
popa
adc
rep
imul
ljmp
mov
fbstp
lcall
xor
rorl
mov
in
sar
inc
js
ficompl
add
mov
mov
jecxz
ds
cs
adc
rcll
lcall
mov
push
jg
sub
push
push
out
xor
pop
and
data16
cmp
ret
xor
lcall
or
push
enter
icebp
mov
mov
mov
aaa
movsb
push
fs
data16
sub
lds
jo
dec
aas
adc
sub
adc
pop
sbb
int
dec
pushf
daa
or
jo
jne
xchg
cltd
pushl
in
test
lods
mov
sbb
push
lret
sub
rorl
loop
pop
lds
cmc
add
mov
and
int
scas
out
inc
sbb
test
enter
dec
leavew
enter
or
mov
jns
ret
and
test
lcall
out
test
jbe
mov
xor
pop
shll
test
xor
jl
call
lods
add
pushf
jbe
cwtl
pop
push
outsb
notb
adc
xchg
orb
or
fbld
add
mull
out
int3
loop
adc
mov
sar
ss
push
add
imul
jne
push
add
jge
lret
xchg
fidivrs
cld
incl
in
lea
into
adc
icebp
dec
lret
fidivrs
inc
stos
pusha
jg
lock
push
sti
pop
orb
icebp
or
dec
jg
xchg
imulb
pushl
pushf
mov
adc
test
mov
sar
or
xorl
cli
stos
fbld
pop
insb
sbb
rcrb
rol
push
mov
cmp
inc
cwtl
jns
call
out
test
or
data16
pop
cmp
sub
dec
js
push
hlt
sub
jmp
push
sbb
jmp
call
pop
lods
inc
loop
clc
sbb
movsb
lock
repnz
sub
pushl
setb
cmp
sub
dec
movsl
cmp
ljmp
arpl
rep
or
test
call
lods
fadd
inc
jmp
xor
dec
xchg
add
pop
dec
xorb
rclb
inc
inc
movsl
enter
mov
das
or
jg
fsts
push
mov
ljmp
xchg
aad
lcall
fcomps
pop
test
xchg
cltd
ror
dec
ret
push
dec
pop
imul
jmp
jge
stos
je
aad
das
xchg
dec
xor
sub
cs
in
pushf
outsb
mov
sti
test
adc
sbb
mov
and
or
xchg
lea
push
bound
ja
cmc
push
pop
test
andb
rol
pop
xchg
cmp
dec
pusha
mov
movsl
seta
gs
jp
push
jns
jne
aaa
sahf
jmp
cmp
repnz
pushl
mov
jo
add
or
jb
inc
push
inc
cmp
dec
add
xchg
pushl
jo
test
lahf
xor
sbb
mov
fs
mov
mov
call
int3
fistps
fidivrs
xchg
aam
xchg
rep
and
sub
lds
loop
cli
daa
pop
shll
shll
incl
mov
cld
movsl
divl
pop
cld
or
and
popa
pandn
ljmp
stos
sar
in
call
inc
js
adcb
iret
popf
iret
mov
sbb
cltd
cmpsl
iret
mov
mov
bnd
clc
lcall
jecxz
inc
popf
orb
rorl
mov
aad
jne
mov
pop
in
shrb
aaa
in
jg
jbe
inc
lahf
mov
fildll
bound
rorb
std
faddl
pop
incl
jg
ror
mov
mov
mulb
push
es
pop
ljmp
clc
in
sub
mov
cmpsl
and
imul
sub
and
pushl
adc
cmp
je
pop
sbb
jbe
pop
rcl
push
mov
test
insb
scas
jbe
shr
mov
push
stos
cmpsb
pop
inc
outsb
push
movsl
cltd
cmp
aad
and
mov
in
xor
gs
cmp
push
fincstp
insb
sbb
or
lcall
push
cmpsb
dec
jge
lahf
and
aas
insl
dec
mov
paddusw
add
mov
mov
mov
daa
insl
iret
xchg
push
shll
fstl
dec
cmp
push
out
inc
dec
in
ja
ljmp
mov
cmpsl
les
out
xor
mov
sbb
cmp
decl
add
cmpl
das
imul
cmc
mov
leave
xchg
pop
adc
popf
pop
or
xchg
std
jg
inc
dec
in
xchg
or
sbb
fnsave
push
pop
dec
cli
aam
outsb
xchg
aam
inc
adc
incl
xchg
call
pop
out
fldt
lcall
sbb
loope
test
clc
call
loope
cs
push
test
mov
fdivp
xor
incl
xor
jno
ss
dec
inc
mov
sub
call
mov
lea
xor
push
mov
mov
jno
hlt
rolb
mov
lock
pusha
pusha
repz
lcall
cld
inc
mov
sub
in
jb
sub
mov
sub
jae
adc
xchg
push
or
cli
jg
and
jg
mov
enter
fsubl
inc
cld
and
into
cmp
out
mov
push
cmp
jns
push
loop
mov
jecxz
mov
adc
in
sub
test
out
ljmp
mov
mov
testb
mov
scas
rcrb
inc
mov
mov
sub
cmpsb
push
mov
popl
inc
inc
jns
pop
cmp
pop
and
and
pop
push
sahf
adc
clc
fcoms
push
dec
mov
stos
cmc
mov
sbb
jp
sbb
fcomip
fiaddl
xor
mov
fistl
xor
push
add
js
pop
mov
into
jnp
into
dec
push
mov
out
stos
mov
xor
ss
ljmp
adc
mov
je
lds
jecxz
std
iret
jmp
sahf
xor
mov
incl
imul
repz
pusha
ret
sbb
dec
lods
ds
mov
mov
push
cmc
leave
push
daa
xchg
mov
pop
xchg
or
incl
in
fidivs
jae
adc
icebp
outsb
scas
rcrb
decl
mov
lds
xor
fdivrl
xchg
add
xchg
imul
sub
inc
mov
or
rorb
cmp
xor
int
faddl
adc
push
nop
aam
mov
mov
out
push
sbb
std
lahf
movsl
test
pop
clc
aam
inc
sbb
rcrl
insb
enter
int3
and
mov
in
mov
mov
scas
ret
add
push
dec
jnp
ss
xlat
ja
dec
cld
incl
lods
mov
loopne
iret
push
pop
xchg
repnz
jg
mov
outsb
lret
rorb
or
sbb
mov
push
jnp
mov
jp
mov
mov
pop
sti
jecxz
push
push
sbb
sbbl
loop
jbe
mov
call
mov
or
clc
aam
xchg
stos
je
push
add
mov
loop
lcall
aad
leave
mov
mov
push
jnp
flds
stc
sar
decl
push
cmp
bound
jae
push
mov
mov
jg
lock
inc
dec
pop
xchg
cwtl
shll
sti
jae
cmp
cmc
add
outsl
adc
das
pushf
pop
cmp
loopne
adc
inc
cld
cmp
inc
ja
in
icebp
std
push
xchg
lods
cmp
dec
vmptrst
cmpsl
pop
call
jmp
lcall
inc
add
pop
mov
rorl
lods
pop
mov
push
xor
fcomip
dec
dec
sub
cmp
jne
cmp
jge
inc
in
inc
int
subl
cmpl
popa
inc
das
stos
xchg
pop
pop
xchg
loop
cmp
jp
orl
incl
cmpsl
pop
jno
push
clc
cmc
jbe
addr16
sti
das
call
mov
insb
mov
aaa
in
and
ljmp
push
inc
dec
xchg
dec
or
mov
push
and
nop
int3
push
in
lahf
dec
das
and
aam
je
decl
sub
pusha
clc
imul
sarl
inc
or
add
rclb
sbb
mov
cld
sbb
xor
pop
ds
jo
mov
add
xor
shrl
test
or
xor
aam
mov
ret
and
test
add
test
in
mov
std
decl
arpl
mov
cmpsl
jno
mov
vpcmpeqd
xchg
out
pushl
pop
cmp
cs
inc
movsl
inc
xor
cmp
mov
repnz
dec
aaa
and
std
xchg
or
outsl
adc
stos
fldl
lock
mov
dec
outsb
mov
xchg
xchg
mov
jg
jl
shll
int
aad
pop
mov
loopne
xchg
paddusw
fldcw
decl
jae
loope
aas
adc
test
mov
pop
and
bound
aas
ret
fwait
adc
pusha
xchg
imul
cli
jo
mov
pop
shll
sbb
xor
test
jge
cmp
call
cmp
sub
adc
mov
xchg
shlb
sub
adc
mov
idiv
lcall
push
je
push
adcb
cli
mov
sub
xchg
push
ljmp
les
test
ljmp
mov
xor
outsl
stc
subb
cld
hlt
ds
aam
mul
pushw
std
lcall
notl
fbstp
ret
shrl
pop
inc
fwait
adc
enter
jmp
inc
sbb
sub
pop
pavgw
cmp
stos
stos
xor
pushl
jb
pop
sbb
add
xor
ss
les
aam
adc
jle
cmp
arpl
sub
es
rolb
push
fdivs
ljmp
int3
test
jg
pop
xchg
push
in
sub
xchg
mov
push
sbb
mov
cmpb
mov
fcomps
jge
pop
add
xor
pop
push
in
push
pushf
xchg
mov
push
jg
jmp
mov
push
fidivl
jne
cmpsl
adc
fs
repnz
jnp
and
add
dec
mov
sub
hlt
adc
imul
mov
das
sar
stos
adc
incl
sbb
loopne
cmc
sub
mov
xchg
repz
mov
cmp
push
fimuls
ret
pushl
dec
lret
cmp
sub
lods
aaa
add
adc
push
fsubl
sarl
sub
add
out
fwait
jl,pt
test
mov
sub
mov
jno
jecxz
xor
ret
stos
call
cmp
push
pop
test
and
sub
sub
nop
pushl
mov
xor
cmp
cmp
decl
pop
es
mov
inc
or
loop
jecxz
cmp
filds
mov
inc
jecxz
aaa
decl
bound
add
mov
loop
mov
jbe
fs
lret
test
sbb
push
pop
pushf
xor
inc
pushf
adc
mov
pop
icebp
in
push
pop
in
mov
movsb
mov
push
loopne,pn
mov
dec
clc
cli
mov
cmp
sub
mov
inc
and
imul
lcall
outsl
cli
xchg
or
mov
sub
sub
lahf
inc
scas
jmp
scas
inc
jg
lcall
test
fwait
mov
divb
aad
or
jge
jmp
clc
push
popf
cwtl
fs
jp
incl
push
arpl
mov
mov
loop
adc
incl
jae
xchg
popf
xchg
jle
mov
mov
nop
xchg
int
call
std
inc
xchg
lret
clc
push
sbb
push
jmp
pop
or
movsl
aam
out
cld
dec
mov
xchg
fimull
dec
mov
loope
inc
xchg
xchg
ror
sub
push
sti
ja
das
push
icebp
jg
inc
pop
dec
and
iret
sbbb
imul
lcall
inc
push
shrb
lods
jbe
dec
lcall
jp
les
mov
mov
es
mov
idiv
incl
cmp
dec
or
jno
sbb
int
lret
and
fcompl
das
dec
mov
les
ljmp
loopne
sbb
nop
cmc
mov
in
mov
mov
mov
jmp
lcall
call
insl
daa
push
push
js
push
jle
out
mov
test
fdivr
push
or
idiv
call
loop
mov
push
pusha
fs
sbb
cmpsb
std
pop
js
inc
push
sbb
aam
and
pushf
movsb
lock
call
into
repnz
xor
ret
mov
pushf
or
repz
fcoml
mov
sarb
inc
xor
inc
and
jb
test
mov
out
lcall
inc
jg
jb
ss
mov
out
mov
cmp
xorb
mov
movsb
mov
lock
or
pop
cmp
clc
sbbb
clc
clc
fsub
std
lods
bnd
incl
xchg
imul
testb
mov
xchg
adc
test
xchg
ljmp
xchg
and
pop
mov
lcall
mov
inc
adc
dec
sub
inc
sbb
inc
cmp
push
xor
xchg
cmpsb
ja
sbb
sahf
repz
test
addl
js
and
subl
loope
in
outsl
cmp
jg
and
add
aam
sub
mov
jecxz
fld
xchg
rclb
mov
mov
inc
ret
mov
adc
shrl
push
add
and
out
or
and
in
jmp
xchg
popf
out
hlt
data16
aam
xorl
add
adc
xlat
scas
decl
daa
js
pop
data16
lods
out
cwtl
dec
outsb
cltd
ret
mov
cs
cmp
mov
stos
push
jmp
sbb
out
push
add
cld
jg
call
ret
ret
push
ss
add
xchg
inc
sbb
das
cli
inc
or
pop
mov
loope
aaa
inc
lods
stos
and
or
aaa
movsb
cmp
adc
imul
call
je
xor
mov
pop
cmpsb
in
inc
xor
aaa
cltd
push
jb
push
std
jo
lret
inc
out
ljmp
xchg
mov
pushf
adcl
xchg
lret
out
and
fs
mov
pushf
ja
jp
lods
push
inc
xlat
mov
mov
sahf
add
icebp
imul
push
cmc
xor
gs
lcall
lret
mov
jge
jb
mov
add
mov
dec
lahf
fimull
popf
and
mov
aas
add
std
sub
lcall
idivl
addr16
mov
or
pusha
pop
insb
andb
mov
subb
or
stc
jnp
mov
fwait
ret
cli
xchg
scas
dec
and
arpl
pop
lock
stos
mov
jg
aas
sbb
pop
scas
push
push
mov
in
fnstcw
idivb
testl
call
adc
fnstsw
scas
scas
adc
mov
inc
loop
fistl
cwtl
je
jecxz
aas
jg
hlt
push
ret
jae
inc
mov
adc
mov
les
mov
xor
ljmp
rcr
mull
out
shlb
jg
jl
mov
iret
adcb
ljmp
lret
pop
into
inc
dec
lds
sbb
inc
out
cmp
outsl
xor
pushf
pop
add
push
ljmp
dec
scas
repnz
mov
mov
jo
in
pop
xor
pop
cmpsl
inc
jp
lret
lcall
inc
int
dec
mov
cld
mov
fstps
sub
mov
ljmp
rcrb
leave
mov
and
pop
ret
lock
add
dec
lds
std
fnstcw
orb
cld
scas
sbb
xchg
fcmovbe
dec
xor
loopne
pusha
aaa
leave
sar
push
pop
xchg
lahf
in
iret
inc
movsl
fisttpll
push
jge
xorl
mov
pop
lods
inc
and
dec
rdtsc
mov
jp
dec
and
fildl
call
jle
push
scas
test
push
into
jne
gs
je
out
mov
mov
gs
pop
pop
ret
push
not
dec
jnp
xor
repz
adc
mov
jg
push
movsl
ja
imul
mov
sub
arpl
sbb
dec
xor
pop
xchg
je
xchg
pop
push
jmp
sbb
mov
lcall
sub
mov
aaa
js
mov
adc
aaa
adc
sbbl
cmp
mov
out
mov
lret
out
out
jl
push
pop
insl
cmp
incl
xor
jne
pop
cmp
cmp
aaa
pop
pop
fldenv
jmp
sbb
push
lret
cmp
or
call
xchg
subl
inc
rorl
or
jne
dec
ja
call
sub
cmp
dec
xchg
xchg
lahf
sbb
gs
inc
adc
ss
fs
decl
dec
idivl
sbb
mov
cmp
popa
andl
daa
ljmp
adc
sub
or
pop
std
cld
dec
ds
gs
cld
jl
hlt
jle
push
fidivrs
call
inc
mov
std
das
ja
shrl
sub
std
sub
test
lods
ficoml
cmpsl
pop
repnz
lcall
push
push
xor
add
in
xorl
cmc
mov
jae,pt
in
dec
stos
adc
dec
icebp
mov
enter
xchg
cmpb
cs
fidivrl
dec
push
push
xchg
cltd
les
cmpsb
mov
adcb
xchg
mov
cmp
xor
adc
xor
push
lcall
jecxz
pop
pop
cvtps2pi
adc
add
jle
test
sub
mov
cmp
sub
in
mov
mov
sbbb
fstps
lcall
pop
sbb
and
data16
jb
xchg
lahf
mov
les
incl
dec
mov
scas
movsb
cmp
dec
test
mov
dec
out
mov
mov
sub
jp
in
into
lcall
mov
jg
loopne
xor
loope
adc
or
push
push
pop
xor
gs
push
mov
loop
jae
iret
pushf
push
aam
notb
cmpl
mov
mov
pop
fs
inc
jbe
cmp
cs
jp
shl
inc
sahf
or
scas
ljmp
pop
mov
sbb
sbb
jp
inc
mov
shl
sarb
sbb
in
pusha
xor
repz
adc
sbb
or
movsl
xor
xor
or
sahf
ficompl
push
fldt
shl
inc
aaa
lret
cli
ss
mov
xchg
cmp
aas
call
sbb
sti
fwait
push
cmp
inc
gs
inc
adc
xor
jge
fdivr
pushl
pop
mov
cmp
fimull
or
or
cmp
aas
scas
sub
jmp
lret
pop
jecxz
pop
dec
or
inc
fwait
jmp
ljmp
movsb
push
dec
mov
mov
or
bound
pop
xchg
xlat
jns
push
cli
xchg
aas
jmp
mov
jge
mov
jno
mov
cs
icebp
sub
mov
mov
mov
jo
and
movsb
xchg
push
pushf
cmc
aas
insl
mov
sub
pushf
jo
les
mov
bound
call
cmc
das
out
cltd
dec
aaa
call
push
bound
add
decl
outsb
imulb
pusha
dec
or
jecxz
imul
ja
xchg
test
decl
stos
jno
outsb
dec
xchg
mov
xor
nop
pop
xchg
push
mov
je
lahf
cmp
cmc
mov
scas
sbb
jg
lds
push
cli
adc
inc
xor
jmp
xchg
jae
testb
lcall
mov
aad
mov
inc
shlb
cmp
addr16
jmp
mov
add
pop
js
scas
inc
cmp
push
nop
cli
cli
and
pop
jnp
cmp
pop
jmp
adc
call
adc
fnstenv
addr16
dec
ds
sbb
lock
decl
adc
arpl
je
data16
pop
pop
add
sbb
gs
movsl
inc
inc
xchg
jmp
jl
add
cmp
test
push
rolb
push
mov
ljmp
pop
xchg
out
jbe
iret
pusha
mov
das
cmp
mov
mov
pop
mov
fwait
das
out
xor
jmp
push
fs
test
xor
clc
ds
loop
mov
xchg
mov
mov
xor
add
outsl
psubd
add
negb
or
jmp
ret
mov
test
test
mov
clc
call
sub
xor
lcall
pop
sub
mov
stc
add
xor
icebp
sahf
fs
mov
cltd
aaa
mov
idiv
filds
add
imul
xchg
stc
sub
cld
ret
mov
pusha
pop
in
dec
xchg
int
fistpl
clc
ror
and
pushl
sub
pop
or
jnp
es
sub
and
decl
imul
jp
aam
fadds
loop
dec
or
dec
imul
inc
adc
jne
adc
add
pop
mov
jmp
call
push
jbe
pop
xor
cmpsl
adc
cmp
pushl
lock
and
mov
lds
or
or
mov
imul
call
out
lods
outsb
pop
adc
jmp
push
les
sbb
xor
call
pushf
cmp
jl
xchg
adc
es
push
cmp
insl
outsl
cwtl
jb
mov
in
int
xlat
pop
incl
mov
mov
and
jae
daa
or
adc
mov
pusha
xor
mov
sub
loopne
mov
xor
pop
ljmp
cmc
or
out
aaa
and
xlat
int3
mov
sahf
mov
adc
jl
dec
add
push
jle
mov
xchg
adc
repz
out
aam
dec
sub
outsl
les
cli
fists
mov
out
sar
out
mov
mov
data16
stc
push
adc
gs
popf
mov
xchg
ss
stos
mov
nop
jo
pop
mov
repnz
in
sbb
pusha
in
dec
adc
cmp
lds
cmp
in
push
or
push
cld
lcall
sti
jnp
ror
dec
idivb
sub
jecxz
lods
adc
clc
jg
or
out
mov
js
mov
js
test
das
push
inc
int3
fs
push
xchg
mov
bound
xchg
incl
shll
pop
and
fdivl
pop
ficomps
into
clc
lds
mov
aas
ljmp
push
mov
inc
pop
jb
lock
mov
popa
call
clc
jmp
sarb
push
mov
xchg
sub
add
addb
jbe
adc
rcrb
lds
scas
fs
ljmp
rorb
in
mov
ljmp
cmp
cmp
ds
decl
je
cmpsb
subb
inc
ss
mov
sub
int3
std
xor
jns
jmp
lds
ret
andl
addr16
fnsave
mov
jle
cmpsl
leave
clc
frstor
aas
jecxz
xor
jmp
lods
add
dec
xor
jmp
inc
es
xchg
int
test
add
fbstp
add
sbbb
loope
out
movsl
sub
push
xor
enter
inc
jns
ljmp
cmp
cmp
lret
ror
jge
ja
cmp
outsl
xor
or
pop
lcall
adc
mov
mov
rol
js
cmp
and
or
sbb
nop
aad
repz
lcall
mov
pop
movsl
pop
enter
aaa
adc
ss
mov
xor
jecxz
jnp
outsl
xchg
hlt
call
jmp
cmp
inc
mov
ljmp
insb
jl
lret
jmp
aad
js
int
xchg
or
xor
cld
sub
push
jl
mov
std
pop
lret
faddl
push
add
dec
decb
pop
out
cmp
pushl
pop
fnsave
mov
adc
push
imul
xor
clc
xlat
jns
jge
push
nop
xor
int
fisubrs
or
sub
pusha
push
lahf
in
ja
lahf
xchg
push
add
xchg
or
call
inc
loopne
dec
inc
mov
jecxz
dec
sbb
stos
lret
clc
and
cmpsb
mov
leave
push
out
incl
lahf
repnz
inc
dec
jl
in
cmpsl
mov
pop
mov
ficomps
imul
cmp
cmc
lea
cld
xchg
fsubrl
nop
push
inc
xchg
push
xchg
inc
sbb
daa
jecxz
cmp
fcomip
pushl
sub
cmp
arpl
ret
push
xchg
scas
fistps
mov
mov
outsl
xchg
hlt
xor
mov
jle
shll
pushl
sarb
and
in
mov
mov
sarb
jg
lcall
cmp
outsb
mov
popf
xchg
loopne
push
sti
push
add
push
lcall
jl
icebp
ljmp
lods
adc
insb
in
lock
stos
mov
jmp
sub
jbe
cwtl
out
sbb
push
add
test
add
push
add
jae
ljmp
out
cmp
jae
xor
adc
popf
addl
jl
jp
jg
xchg
nop
fcompl
pushl
sbb
jnp
pop
imul
popa
mov
sub
call
or
jno
fldl
fistl
xchg
test
insb
inc
pushl
das
imul
push
test
pop
lcall
mov
loopne
inc
adc
inc
cmp
xor
jp
xchg
xchg
xchg
push
or
jg
mov
push
sub
mov
data16
cli
lret
fcoms
ljmp
inc
and
jns
repnz
dec
imul
insb
ss
dec
xor
cmp
addb
pop
fsubs
cmpsb
push
inc
xor
or
cmp
lock
ljmp
jmp
inc
fnsave
popa
lock
sar
popa
mov
adc
into
jbe
sbb
push
mov
loope
rcrl
jecxz
xor
ds
out
sbb
dec
sbb
push
adc
push
mov
dec
pushl
xlat
add
dec
cmp
mov
jo
sbb
int
iret
imul
xchg
push
push
and
pushl
js
repnz
lcall
or
cltd
cmc
es
addr16
push
inc
in
add
pushl
and
mul
sbb
fld
outsb
pop
outsl
mov
or
mov
aad
mov
xchg
jmp
incl
lds
repnz
and
enter
mov
dec
out
lea
cmpsb
add
add
int
out
mov
and
fists
lret
incl
or
clc
mov
test
shrl
jecxz
lods
ljmp
fldl
rcl
mov
sbb
dec
fcoml
popf
hlt
xchg
or
ret
incl
push
xchg
test
sets
dec
mov
adc
out
jo
out
lcall
and
imul
mov
mov
xor
pop
fs
jg
imul
ret
sbb
stos
pop
pop
add
inc
clc
cmp
jmp
jb
cmp
and
stc
add
pop
mov
enter
lods
in
loopne
dec
mov
and
das
in
sub
and
push
jle
js
scas
mov
icebp
mov
aaa
add
mov
jae
jmp
cli
daa
add
dec
rorl
ljmp
fcoms
mov
cmpsb
lahf
jno
mov
fs
ljmp
in
arpl
ss
jl
or
xor
mov
sbb
jae
cmp
ljmp
and
mov
push
push
push
lret
iret
lea
movsb
arpl
clc
int
sar
inc
pop
fidivrl
clc
jno
nop
inc
push
sub
test
jno
or
inc
push
nop
dec
stos
pop
jg
notl
sbbl
testb
leave
xchg
test
call
out
add
cmp
add
mov
or
mov
and
add
incl
inc
xor
dec
ss
scas
cld
out
jge
inc
hlt
xchg
add
std
shll
mov
mov
imul
jmp
and
mov
cli
mov
dec
jne
mov
in
fisubrs
push
sbb
call
ja
cmp
jns
test
mov
pop
loopne
mov
jb
add
shll
sbb
out
movsb
incl
jne
testb
lret
and
inc
inc
mov
sub
rolb
jne
mov
mov
adc
test
push
mov
pop
test
ljmp
sti
xchg
popf
bound
pop
ret
mov
jae
test
mov
jmp
xadd
sbb
mov
decl
lods
cmpsl
dec
pop
xchg
out
pop
push
loope
sub
ret
and
lahf
add
fisttpll
aam
add
or
movsl
mov
imul
push
pop
xor
add
lock
nop
insl
shl
jnp
and
mov
adc
or
inc
call
icebp
pop
adc
mov
sub
mov
fwait
decl
cwtl
pushf
in
xor
out
push
aas
mov
lcall
and
jp
iret
repnz
sub
push
xor
rcrl
xor
pop
mov
cli
idiv
jmp
dec
mov
sub
sbb
fwait
movsb
mov
xchg
or
jb
in
ljmp
push
jg
mov
imul
or
mov
jmp
cltd
mov
adc
add
jns
fstps
pop
or
push
scas
fnstsw
lcall
lret
lods
inc
sub
addl
sbb
insb
mov
and
in
sub
ljmp
es
jbe
out
cld
mov
add
xor
loop
pushf
addr16
jmp
lea
pop
cmp
mov
inc
and
mov
jno
ret
movsb
fists
ds
decl
and
int
push
sbb
mov
shl
out
lcall
jb
push
adc
out
gs
ljmp
xor
or
lcall
mov
pop
mov
test
popf
out
mov
je,pt
cmp
mov
data16
mov
push
mov
mov
add
scas
ja
mov
mov
jbe
xor
push
pop
or
push
je
xor
repz
in
decl
cmp
icebp
cmp
and
loope
xor
cltd
lds
xor
add
repnz
lcall
adc
jge
cmpsl
push
aas
lret
xchg
sbbl
jae
adc
sbb
cmc
incl
push
lret
push
dec
cmpsl
xor
lods
test
push
lret
fstpl
stc
inc
adc
cmp
call
icebp
dec
pop
xor
jmp
mov
mov
leave
movsbl
pop
jb
inc
add
sar
lcall
stos
and
cmp
inc
repnz
adc
mov
jns
mov
ffree
fisttps
stos
push
repz
scas
pop
xchg
loop
ljmp
and
inc
lock
xor
push
push
fists
jne
dec
xchg
es
cmp
decl
movsl
xchg
and
xchg
fs
inc
lea
dec
std
aas
xchg
jl
jge
movsb
fs
out
push
cld
decl
aam
popa
jl
movsb
notb
mov
sahf
jl
push
inc
inc
inc
pop
add
mov
pushl
and
aaa
movsl
add
xor
popf
imul
mov
loop
sub
stos
push
incl
inc
and
dec
ljmp
test
leave
cld
iret
adc
mov
incl
in
mov
sti
aaa
inc
and
adc
push
mov
test
add
xchg
std
mov
pushl
xchg
jns
cmc
jns
lret
pop
loop
insl
mov
fdivs
add
dec
xchg
cld
push
mov
movsb
cmp
add
mull
inc
mov
adc
clc
jg
sub
jns
sub
push
sahf
push
out
stc
repz
mov
mov
ljmp
rorb
popf
ljmp
jmp
pushf
imul
cs
cmp
push
loope
sub
push
movsb
cld
adc
fstpt
test
test
push
shll
dec
jbe
push
call
pop
inc
stc
fcmovb
aaa
outsl
xor
xor
pop
js
jg
loop
mov
arpl
push
imul
jle
cmpsb
insb
in
sbb
in
sarl
call
in
add
dec
and
sti
mov
lds
pop
xchg
add
les
dec
cli
out
data16
mov
dec
pushl
adc
ja
lahf
lods
in
sbb
mov
push
push
decb
fdecstp
pop
inc
mov
jle
xor
into
sub
mov
je
sbb
add
cltd
arpl
aaa
fld
and
pop
and
lods
pop
dec
repnz
pushl
pop
jnp
and
loopne
pop
pushf
movb
fistps
andb
jno
xor
jae
popa
sti
cmpsb
gs
jg
or
add
leave
shl
sbb
and
fistl
fsubrl
jo
outsl
mov
pop
ret
lret
xor
push
inc
push
rcrb
stos
adc
jmp
ds
mov
faddl
mov
lcall
mov
and
pusha
das
adc
add
xor
and
and
lock
pop
sar
std
dec
inc
clc
enter
out
repz
cmovnp
test
sti
mov
mov
aaa
std
jg
dec
pushl
mov
dec
enter
add
mov
add
pushl
into
ss
leave
lret
adc
dec
test
stos
xor
jo
call
mov
xchg
add
inc
test
out
fdivl
popa
or
fnstsw
xor
cmp
xor
xchg
jg
push
cmp
mov
rolb
dec
pop
ds
xor
xor
fiadds
in
adc
aam
and
push
jno
inc
push
and
fcomip
call
dec
jb
mov
ds
jo
lahf
mov
and
ud0
incl
sbb
jp
mov
popf
cmp
and
jns
sub
sbb
out
lock
call
cs
sbb
out
and
imul
loop
inc
jmp
test
lret
xchg
and
jp
incl
or
sbb
push
mov
dec
loope
lcall
push
mov
dec
int3
lcall
inc
call
mov
daa
add
insb
aad
mov
jg
sub
inc
dec
loop
push
sub
fcmovu
mulb
orl
inc
pop
mov
push
lahf
shl
and
lcall
mov
mov
sarl
js
sbb
iret
cltd
push
andb
push
mov
dec
mov
daa
int3
shr
les
fbstp
pop
je
js
leave
les
aad
in
mov
lahf
sbb
mov
mov
cmp
mov
mov
jecxz
lcall
sbb
push
fadd
ljmp
mov
mov
jne
adc
mov
fnstenv
jno
movsb
sub
scas
notl
or
pop
pop
jo
outsl
inc
jno
orb
push
adc
mov
mov
out
clc
sar
mov
pop
and
xor
sbb
xchg
popf
or
and
in
dec
icebp
xchg
cli
mov
adc
xor
push
mov
orb
mov
mov
ljmp
ljmp
jecxz
push
sub
or
addl
je
add
mov
adcb
es
inc
mov
outsl
out
shll
sub
lcall
inc
ds
add
add
pushf
pusha
mov
pop
mov
push
leave
pop
jnp
divb
jge
xchg
pushl
adc
push
xor
popf
shll
pop
mov
xlat
nop
push
and
pushl
cmp
pop
in
mov
les
imul
clc
fsubrl
decl
pop
insl
sbb
or
push
ljmp
mov
cmp
jecxz
jecxz
push
sub
sbbb
mov
adc
ljmp
mov
lret
pushf
sub
sub
adc
dec
movsl
ret
dec
inc
imul
ss
fildl
dec
ret
imul
xchg
jl
push
jb
or
decl
pop
das
lods
shll
push
jae
sbb
dec
and
dec
jns
adc
addr16
jecxz
lcall
mov
int3
adc
jo
pusha
fldcw
fnsave
iret
and
std
pop
cmp
scas
mov
jmp
sti
es
out
ffree
leave
push
cmp
sbb
fisubrl
stos
cli
ljmp
mov
sbb
sub
or
call
sub
cltd
xorl
sahf
in
movlps
imul
and
jnp
mov
out
insl
mov
fs
jne
mov
ret
push
mov
mov
outsl
cs
cmpb
sbb
ljmp
push
clc
jmp
and
into
ds
loopne
lcall
addb
cltd
pop
pop
xor
mov
mov
mov
je
lcall
into
stos
addl
push
std
inc
pop
fsts
lret
repnz
inc
loop,pn
cmp
pushl
test
push
inc
push
xor
or
lea
lahf
inc
into
lds
std
add
jae
insl
sub
adc
mov
xchg
sahf
lret
sbb
jo
addr16
add
push
call
call
jmp
test
sbb
xor
pop
repz
in
mov
jmp
lret
mov
rorl
xchg
repz
push
push
je
cmpsb
mov
fnclex
addr16
filds
loope
xor
sbb
jle
push
mov
dec
mov
fists
inc
decl
fnsave
fidivs
and
push
or
push
fwait
outsb
sub
mov
inc
inc
loope
xor
test
fsubrs
add
daa
outsb
adc
fs
jecxz
push
lods
sbb
pop
xor
fs
hlt
pop
ss
push
xor
inc
cmp
outsb
mov
out
mov
mov
sbb
fistps
comiss
mov
imul
incl
and
ficoms
jo
mov
pop
mov
mov
cmp
inc
cmpsl
lds
mov
ret
inc
pop
in
lods
mov
cmp
and
test
push
mov
mov
cli
xor
and
jle
or
int
xchg
xchg
scas
clc
pop
int3
mov
xchg
mov
jnp
mov
lcall
fs
test
movsl
xor
adc
movsl
decl
mov
adc
sbb
and
push
fcmove
sbb
js
lret
mov
jns
fwait
xchg
jmp
fmull
push
lret
mov
call
and
add
xchg
or
orl
or
cmp
dec
mov
xor
lods
jle
or
clc
ljmp
push
stc
int
dec
cmpsb
ja
enter
ljmp
das
or
fucomp
bound
push
int3
cmp
dec
in
jle
mov
scas
outsl
icebp
call
jmp
arpl
xchg
jo
imul
jno
outsb
sub
jg
idivb
pop
clc
mov
cmpsb
cs
ds
cwtl
jge
cli
or
std
decl
mov
lock
bswap
outsl
test
mov
notb
les
fs
test
sub
call
adc
hlt
xor
ss
out
cmc
and
ja
test
adc
xor
or
ds
call
xor
xor
cmp
add
xchg
lret
test
mov
pop
sbb
ja
arpl
mov
xchg
or
movsl
je
xor
cltd
mov
jecxz
jg
add
adc
movsl
iret
mov
mov
add
pop
jnp
lahf
cmp
fldl
and
test
jge
inc
imul
test
ret
inc
push
xor
dec
add
inc
popf
loopne
pop
or
fwait
sbb
fwait
push
xchg
cwtl
fs
scas
bound
repz
out
call
es
xorb
mov
orl
lods
cwtl
mov
pop
das
or
and
xor
xor
push
into
incl
loop
xor
les
sub
mov
jg
pop
xchg
adc
sbb
fsts
dec
pushl
sub
sti
pop
mov
sbb
xor
aad
jno
insb
pop
outsb
xor
hlt
fisttps
add
data16
xchg
sub
mov
imul
dec
adc
ret
and
cmpsb
lds
add
sti
ja
sub
dec
mov
fwait
mov
addb
and
mov
jb
mov
and
fiadds
xchg
add
lds
pop
and
jecxz
shrl
test
jns
lock
push
mov
push
push
jl
pushf
insl
ret
rolb
and
rcll
movsl
movsl
push
fs
flds
sbb
into
sub
push
data16
add
outsl
movsl
andb
or
enter
add
dec
mov
jg
xchg
mov
adc
xlat
sarb
rolb
sbb
dec
xchg
dec
ljmp
aas
js
ja
mov
xor
hlt
cld
lea
pop
pop
and
call
xor
mov
pusha
lea
sbb
in
mov
jae
jmp
xchg
dec
icebp
jae
cs
mov
push
mov
repz
pop
ljmp
fiadds
cmpsb
sbb
inc
adc
xor
mov
arpl
xorl
ljmp
loop
ja
jg
incb
pushf
movsb
les
mov
push
cltd
movsl
ja
test
xchg
stos
jae
mov
xchg
mov
or
adc
push
xchg
int3
jmp
mov
lods
arpl
and
pushf
pop
mov
call
or
iret
fxtract
jno
mov
pushf
test
push
data16
sub
scas
push
and
pop
clc
jg
xchg
push
mov
cmc
in
cmp
cmpsb
negb
loopne
nop
xor
and
or
int3
js
in
inc
cmp
fildll
pop
sbb
ss
rorl
insb
movsl
mov
mov
ljmp
out
push
pushf
cmpsl
mov
gs
sbb
add
jp
push
in
call
dec
xchg
mov
or
sar
pop
cmp
dec
repz
mov
push
mov
subb
jl
rcrl
fimuls
push
ret
push
xchg
adc
mov
aad
mov
xchg
jge
pop
das
mov
or
arpl
decl
push
jle
xchg
fistpll
sub
push
xchg
xor
lret
dec
dec
or
flds
mov
es
jae
cltd
xchg
push
or
pop
out
add
xchg
mov
ss
xor
movl
out
add
adc
call
cltd
push
mov
xchg
mov
xchg
mov
movsb
fidivs
xor
fbld
imul
jmp
inc
mov
ror
jns
pushf
call
mov
cwtl
mov
sub
fmul
sub
jle
lea
cmp
outsl
push
push
cmpsb
xchg
decl
ljmp
jo
jl
or
jg
cmp
sbb
sub
push
insb
fadd
loop
jl
dec
je
fiadds
ljmp
decl
sbb
ljmp
cli
es
jae
fcompl
inc
sbb
scas
rorb
int3
jecxz
jne
xchg
repz
cmc
dec
es
ljmp
repnz
push
cli
dec
push
fwait
in
push
push
in
daa
ljmp
pop
inc
scas
mov
pushf
mov
icebp
add
pop
lock
jge
jp
mov
mov
or
mov
pushf
mov
scas
sti
pop
xor
xor
push
and
dec
fcmovnbe
call
aad
cld
add
adcl
shrl
adc
movlhps
jg
sbb
icebp
pop
mov
in
sbb
nop
bound
pushf
or
insl
add
incl
pop
sub
mov
add
push
or
adc
fisttps
loop
incl
decb
or
es
insb
and
or
testl
or
mov
jp
scas
xor
ds
and
jmp
lock
rclb
aad
and
sub
mov
add
pop
xchg
mov
mov
cld
add
mov
or
dec
mov
and
ljmp
sub
cmp
popf
mov
push
aaa
insl
shll
pushl
sub
or
insl
add
xchg
and
jns
adc
call
decb
mov
fdivrs
mov
mov
inc
push
jmp
push
mov
hlt
loope
lods
cmc
ljmp
cmp
popa
test
dec
sub
pop
push
mov
mov
out
mov
aas
or
pop
cmpsb
xlat
push
inc
popf
sub
jge
bound
push
mov
push
decl
push
fsubrl
cmp
cmp
fdivp
dec
lcall
xor
push
add
mov
sbb
sub
clc
iret
addr16
cmpsb
push
int3
mov
cli
xor
repnz
rcrb
rclb
xor
cmp
not
or
pop
dec
push
ljmp
iret
ljmp
dec
lea
clc
sub
lahf
es
mov
jmp
scas
lock
repnz
sub
sub
arpl
pop
push
xlat
jmp
push
lret
repz
lock
in
nop
pop
out
jnp
pop
scas
lcall
decl
mov
pop
lods
xor
mov
inc
or
lret
incl
out
jno
xor
repz
jmp
mov
cmc
clc
dec
aaa
stos
mov
data16
cmp
jl
mov
jmp
sti
test
push
hlt
ret
dec
sbb
xchg
push
fstl
int
cmp
decl
push
adc
push
mov
lods
addr16
inc
testb
or
mov
lcall
sbb
dec
test
call
mov
mov
and
fwait
gs
lcall
das
xor
movl
dec
and
pushl
push
bound
aam
popa
fcmovb
in
cltd
mov
sbb
sahf
test
mov
add
dec
ja
icebp
jns
inc
adc
fst
cmpsb
sahf
jno
adc
decl
mov
xor
sti
add
inc
cmpsl
jmp
lret
mov
mov
cmpsl
xchg
mov
flds
negb
jbe
stos
sbb
xchg
or
xchg
jmp
mov
and
pushf
enter
add
mov
sbb
fs
loopne
mov
fdivl
shrb
test
inc
ljmp
add
lret
pop
gs
push
aad
loop
bound
divb
sub
xor
fiadds
into
or
inc
mov
push
sub
pop
loope
orl
gs
cmpsb
jmp
xor
mov
nop
mov
xchg
ret
xchg
add
mov
pusha
mov
cmpsb
adc
pop
std
push
xchg
cli
mov
adc
ret
cli
outsl
xor
sub
shlb
repnz
or
mov
or
cs
xor
shlb
std
incl
jne
or
daa
jno
inc
adc
and
jnp
dec
fdivr
jg
jnp
jl
adc
leave
push
clc
call
lcall
pushl
and
pop
cmp
enter
push
add
lcall
shr
incb
sub
in
pop
sbb
jl
jle
xor
mov
jne
lcall
addr16
outsl
rclb
imul
jbe
pop
std
in
inc
fidivs
lret
call
or
cmpsb
hlt
mov
mov
les
ds
sub
call
imul
pop
mov
insl
cmp
add
push
jb
mov
mov
xchg
adc
sbbl
sbb
xchg
into
and
in
testb
sub
add
insb
cmp
call
fimull
dec
or
cmpb
nop
stos
or
adc
fiaddl
jl
cwtl
sbb
xor
sub
test
lcall
cmp
js
jge
jmp
data16
sub
ljmp
jp
mov
cmc
ds
xchg
adc
inc
dec
jo
push
data16
sti
decl
mov
pop
faddl
lea
in
push
lcall
lret
xor
pushf
push
add
sti
xor
jl
ret
mov
jmp
mov
popf
jge
sub
cmpsl
call
cmpl
pop
dec
outsb
push
pop
popa
mov
mov
aad
loopne
xchg
fsubrp
negl
pop
mov
fists
push
out
pop
jl
mov
jnp
push
outsb
add
add
cs
cld
stos
cmpsb
aad
xor
xor
inc
scas
sub
negb
and
aad
xor
sub
es
pushl
pop
fsubrs
loopne
shl
cmp
leave
push
dec
xchg
std
jno
cs
aam
cmpsl
push
decl
xlat
add
or
mov
jcxz
pop
jle
adc
and
or
stc
pushl
cld
ljmp
push
ljmp
add
inc
and
std
ljmp
xchg
cmp
jo
fwait
daa
daa
adc
mov
ja
mov
jb
xlat
mov
push
xchg
or
imul
sbb
in
decl
lock
enter
or
mov
jae
out
into
inc
ror
in
ljmp
movsb
mov
push
xor
stos
mov
test
nop
xlat
fcomip
call
test
adc
fbstp
cmp
sbb
mov
decl
or
and
mov
test
lret
jmp
iret
mov
inc
cmp
xchg
call
or
fwait
mov
xchg
imul
movsb
and
cld
decl
cmp
lods
rorl
rclb
jno
leave
je
jg
sub
lret
mov
ja,pn
sbb
fs
incl
stos
lock
shrl
repz
jno
nop
cltd
dec
lea
jmp
ja
subb
daa
stos
std
dec
fisttpll
lret
add
ss
mov
or
lcall
aas
sbb
mov
fadds
dec
push
out
daa
outsl
and
lods
into
movsl
sar
and
bound
xchg
icebp
push
push
cmpsb
aaa
sub
outsb
pusha
inc
test
pop
arpl
ljmp
xor
pop
in
in
jmp
scas
int3
repnz
movsb
bnd
mov
or
shlb
cld
or
aaa
inc
lcall
mov
clc
adc
stos
fildll
mov
push
or
pop
and
pushl
xchg
add
dec
dec
ja
aas
and
add
cmpsl
fs
cltd
daa
mov
cmp
fiadds
cmp
das
sub
dec
dec
sahf
jnp
jecxz
sub
sahf
lret
push
jne
jg
decl
mov
mov
js
push
pop
sbb
mov
xchg
movsb
pushl
nop
pop
mov
lock
out
clc
adc
mov
sbb
sub
out
loopne
pop
pop
mov
inc
js
xor
test
std
inc
and
cmp
into
inc
hlt
ds
leave
xor
lcall
js
mov
fsubs
xor
jecxz
jbe
loop
xchg
ljmp
imul
incl
push
sub
jmp
test
jle
call
cli
fucomip
popa
mov
sarl
pop
push
jmp
or
out
jns
cmp
xchg
adc
inc
xor
ss
fildll
xor
cmp
cmpsb
cli
jmp
pop
xorl
jp
sub
ljmp
fstps
jae
or
jmp
out
xchg
movl
mov
mov
push
sti
or
push
dec
mov
test
push
arpl
sbb
add
outsl
stos
fs
lcall
jmp
ret
pop
lcall
pop
cmc
adc
add
mov
mov
mov
ret
gs
aam
pop
dec
dec
pop
xchg
and
jp
mov
jg
pushl
or
jbe
adc
dec
inc
cmpsb
pop
inc
sub
mov
popa
loope
js
jmp
repz
pop
cmp
sub
dec
sbb
ret
fst
xchg
int
scas
insb
loopne
mov
stos
add
call
and
cmc
imul
and
jae
and
pushl
shl
adc
shrl
test
in
xchg
data16
xchg
xchg
aaa
loop
pop
cld
call
jl
push
stc
scas
jb
sti
xchg
sub
add
jg
clc
ljmp
cmpsb
cli
je
mov
repz
shlb
enter
ljmp
pop
jecxz
push
xchg
mov
xchg
mov
loopne
jnp
push
or
or
das
data16
in
test
cs
or
pop
test
ror
cli
jns
pusha
jbe
int
and
call
xor
lods
xor
and
in
sub
clc
out
imul
lcall
dec
mov
js
das
push
mov
pop
push
mov
repz
sub
pushl
jno
xchg
ret
dec
and
inc
and
cmp
mov
scas
mov
in
addr16
xchg
mov
call
mov
push
addb
aad
jmp
int3
dec
jg
test
mov
cmp
decl
cmp
inc
xor
adc
adc
pushl
out
loopne
lcall
ljmp
cltd
out
sarl
in
mov
dec
outsl
test
fdivrp
lcall
pop
sbb
lret
jb
push
cli
decl
push
rolb
in
pop
sub
call
fwait
imul
ss
int
icebp
or
cmp
cmp
push
adc
inc
aad
xorb
inc
mov
fcoms
cld
pushl
mov
cltd
aam
js
cmp
cld
sbb
nop
cmc
jg
or
test
xor
jle
call
das
xchg
cmp
sbb
js
push
repnz
cmpsl
mov
imul
jg
dec
cld
out
mov
pop
repnz
sub
or
mov
lods
loop
sbb
out
or
add
jmp
adc
cltd
pop
push
mov
xchg
movsb
out
inc
push
ljmp
ja
call
add
fldcw
mov
frstor
clc
movaps
lret
test
cwtl
mov
dec
xor
pop
sbb
dec
sbb
sti
enter
jl
aad
mov
je
lcall
jle
xchg
or
fistpll
and
es
and
mov
push
and
lcall
inc
in
adc
ljmp
add
and
inc
out
pop
repnz
mov
bound
inc
or
ljmp
sbb
sahf
movsb
push
jmp
pop
dec
fldl
lock
scas
repnz
pushl
repnz
cltd
addr16
pop
iret
aad
sbb
nop
fs
imul
ss
ljmp
arpl
mov
inc
add
sub
cmpsl
jge
stos
ljmp
push
insl
pusha
inc
adc
das
adc
xor
orl
fcmovnb
inc
sbb
clc
in
jb
sbb
sbb
jnp
pop
sub
movsl
fsubr
pop
mov
dec
xor
push
cmp
test
add
test
mov
lds
push
jg
sti
xor
add
cwtl
lcall
push
jle
mov
fcoms
aaa
push
adc
jg
mov
movsl
fucomi
jp
push
pusha
fbld
cwtl
out
in
fstpt
inc
mov
mov
add
jb
or
mov
cmpsb
sub
sub
xor
add
es
push
in
jg
or
cmpb
outsb
lock
jp
cmc
nop
leave
jmp
dec
dec
mov
in
scas
pop
lcall
inc
aad
call
ficoms
fisubrl
pushl
orl
pop
jne
test
or
mov
stos
lock
adc
icebp
fistps
cmp
inc
std
cld
dec
cmpsb
mov
divb
in
and
push
leave
out
dec
out
out
ffreep
je
nop
repnz
ret
push
jg
pop
cmp
jns
ljmp
aas
cltd
shlb
push
arpl
test
dec
pop
test
jns
enter
mov
push
cs
out
lcall
push
js
xchg
dec
rcrl
mov
inc
cli
outsb
call
subl
mul
sbb
jmp
popf
jb
cmp
adc
jecxz
add
bound
enter
mov
decl
cwtl
sarb
call
mov
jge
pop
int
pop
shlb
dec
push
aas
pop
cmp
mov
nop
mov
fimuls
bound
incl
incl
jbe
insb
xor
pop
fbstp
xchg
testl
aad
mov
mov
fwait
and
add
jg
jmp
jecxz
mov
inc
lcall
aaa
out
nop
mov
je
lock
xchg
dec
mov
jb
dec
push
enter
mov
or
je
int3
mov
adc
jmp
call
sbb
sub
dec
jl
pop
out
push
cmc
or
xchg
pop
mov
add
hlt
mov
icebp
sbb
mov
hlt
outsb
fwait
sarb
lcall
mov
ja
popf
inc
inc
int
insb
ljmp
mov
jmp
push
scas
or
push
inc
pusha
sbb
add
sar
inc
dec
ficompl
lcall
jl
into
push
and
test
mov
push
sti
add
pop
fldl
iret
lds
lcall
mov
das
xor
jl
mov
mov
lcall
inc
cmp
pop
xchg
scas
rolb
mov
ficoms
inc
inc
jmp
mov
mov
push
or
inc
aas
jae
idivl
sub
incl
imul
fwait
mov
outsl
aas
add
pop
out
and
in
cmp
cmp
incl
xchg
sbb
test
sub
pushf
xor
cmp
xchg
add
aam
or
or
cmpsl
aad
stos
and
pop
out
out
sbb
lds
test
roll
movsl
mov
or
les
ljmp
mov
adc
leave
cs
add
fists
xor
fbld
mov
and
sub
insl
jo
adc
sbb
push
push
addr16
scas
sub
outsb
push
test
push
aam
xchg
mov
ljmp
or
std
in
xchg
and
dec
sub
fmull
push
adc
add
call
fprem
cmp
push
jle
lea
pushl
aas
insl
mov
aas
test
pop
fcom
pop
ds
cmovs
imulb
push
xchg
or
sbb
call
pop
mov
add
and
mov
sahf
cli
push
jl
loopne
pop
repz
cli
incl
dec
inc
sub
xchg
sarl
push
es
xchg
xor
call
mov
aad
xchg
into
and
xor
fidivl
imulb
pop
mov
lock
pushl
and
sbb
xchg
jns
gs
and
push
sbb
lcall
add
pop
or
mov
insl
pop
or
push
dec
clc
lcall
mov
mov
mov
and
cld
das
sar
pop
xlat
adc
jl
push
adc
mov
cmp
jg
dec
cs
aaa
ljmp
call
call
push
jnp
jns
or
imul
sbb
fnstcw
aad
stos
movsl
test
ud0
incl
push
adc
push
jge
repnz
imul
push
or
gs
push
lock
mov
adc
stc
mov
mov
insb
das
hlt
jg
loope
or
popa
mov
lcall
push
jg
ja
jbe
mov
mov
shl
gs
fsubp
sbb
popf
cli
xchg
lcall
scas
jae
mov
nop
lea
imul
cs
adc
sbb
lcall
test
or
stos
mov
stos
mov
pusha
add
jmp
frstor
fsubr
call
mov
mov
push
dec
jmp
popa
or
sub
sbb
sub
jae
xchg
loope
ret
clc
rclb
aad
inc
call
mov
and
testb
sbb
jb
loope
mov
lcall
int
mov
addb
fs
adc
add
pop
push
cmp
push
push
jae
loopne
decl
and
mov
jl
push
jmp
cmp
loop
sub
ljmp
outsl
push
jmp
sbb
in
cmp
in
rorb
in
outsl
imul
mov
dec
mov
enter
jg
jg
sbb
sbb
fdivrp
ret
adc
arpl
cli
pop
fidivs
daa
shrb
call
ror
dec
fsubrl
jmp
xchg
cld
call
out
imul
ja
mov
dec
jns
mov
ljmp
fstpt
push
push
filds
leave
loope
xor
andb
addb
decl
repnz
adc
mov
lock
xchg
pushl
in
lds
arpl
push
push
out
cmp
pop
mov
daa
clc
test
sbb
cmpb
decl
repz
mov
lods
ss
insl
sub
jle
pop
and
pop
test
pop
cmpl
into
xchg
nop
cmp
dec
mov
subl
clc
ljmp
rcl
or
add
sbbl
push
sbb
push
push
dec
pop
incl
arpl
icebp
ja
addl
mov
xchg
jmp
incl
scas
jo
jp
xchg
jl
push
xchg
push
jg
icebp
add
out
filds
inc
loop
push
mov
bnd
push
movsb
in
jmp
mov
push
pop
fld1
fstl
adc
pop
lock
and
je
add
jmp
xchg
dec
cld
and
sub
lret
out
cmc
sbb
outsb
xor
sub
sbb
pop
adcb
hlt
loopne
and
jp
pop
aaa
adc
incl
inc
xor
in
cmp
std
pusha
xchg
cwtl
push
stos
jecxz
daa
xchg
fisubl
push
sbb
sbb
xor
push
sub
cmpsl
add
fs
lea
lds
mov
mov
push
add
aaa
std
jmp
push
inc
jae
push
subb
mov
jb
sahf
mov
push
push
jp
int
inc
lcall
add
imul
xchg
orb
adc
sub
xchg
dec
out
out
pushf
xchg
cmp
xchg
jns
ljmp
int3
aas
cld
cmp
xchg
clc
cli
sbb
fimuls
popa
pop
aam
xor
jecxz
add
mov
fcoms
lahf
mov
aam
adc
or
dec
ss
jns
outsl
mov
mov
inc
iret
pop
imul
xchg
inc
stos
sbb
cwtl
xchg
dec
jge
sbb
cmpsb
adc
fcmovbe
mov
inc
xor
mov
aaa
out
sub
popf
jecxz
ficoms
xor
out
mov
je
jb
xlat
cmp
test
push
jecxz
pushl
push
adc
roll
or
xor
test
pop
repnz
mov
into
mov
xchg
popf
sub
imul
dec
stc
inc
cmp
pop
push
pop
jns
insl
addl
loopne
loope
ja
imul
test
call
inc
sbb
addl
and
xor
mov
or
sub
mulb
jnp
call
sahf
fldcw
sub
jo
mov
popf
adc
cmp
lock
fnstsw
popa
xor
iret
push
lods
sub
sub
pop
test
pushl
es
stc
xchg
mov
mov
mov
lcall
jmp
mov
mov
flds
adc
sub
cs
pop
out
inc
jg
inc
lcall
pop
mov
loopne
xchg
pop
mov
pop
dec
add
xchg
or
bound
mov
ljmp
fadds
into
das
push
pop
xchg
mov
and
cmpsb
dec
movsb
idiv
jg
jg
int3
dec
xchg
and
leave
popf
arpl
icebp
sbbb
int
je
cmp
clc
dec
sbb
notl
sti
mov
sub
in
mov
xchg
ficomps
insl
fadd
adc
lcall
pop
add
add
cmp
cmp
adc
mov
loop
ret
ret
or
inc
dec
mov
cmp
lods
sbb
loope
bound
push
in
dec
lds
pop
and
mov
cmc
cmp
repz
mov
repz
shll
popa
or
jmp
xor
or
repnz
and
adc
insl
inc
decl
pop
sub
push
cmpl
pusha
sahf
mov
dec
int3
test
jg
btrl
cmp
xchg
dec
arpl
dec
sub
jmp
out
adc
scas
mov
ds
mov
lret
scas
outsb
dec
or
rclb
mov
aaa
mov
test
cwtl
jb
sub
mov
and
in
mov
ds
test
or
bound
cld
add
gs
push
scas
mov
sbb
xor
incl
testl
divl
bnd
iret
mov
incl
inc
cmc
xlat
lret
xor
or
popa
jge
pop
lods
insl
test
movsb
inc
pop
pushl
push
les
pop
sbb
in
xor
lcall
test
addl
adc
ljmp
ss
pop
push
cmp
push
jnp
icebp
in
push
xorl
jne
mov
adc
xchg
in
sub
jl
mov
shlb
sar
sar
ljmp
push
add
pop
xchg
out
movsb
jge
cmp
ljmp
and
incl
pop
orb
and
xchg
ret
test
xchg
daa
and
pop
jo
sbb
incl
or
aas
adc
and
mov
pop
lret
push
cmpsb
lahf
jle
out
in
lret
imul
negb
xor
iret
xchg
hlt
jae
inc
mov
aaa
jae
stc
out
mov
jge
fmul
cmpsl
push
add
in
shll
cli
pushl
adc
aad
sbb
in
jge
es
aaa
std
pop
push
sbb
pop
ss
sbb
mov
xchg
cmpsb
xlat
enter
ljmp
test
pop
add
or
jae
decl
int
test
test
in
movsl
mov
decl
test
lcall
jnp
jge
ljmp
repz
mov
jne
test
inc
push
mov
daa
ljmp
or
enter
popa
inc
sub
pop
call
jne
and
or
inc
stc
stos
icebp
mov
or
rcrb
jae
int3
xchg
stos
rolb
fcomip
negl
mov
cmp
mov
call
cld
xchg
inc
sub
cwtl
insb
push
and
gs
push
aad
jae
out
or
aaa
push
push
int3
jge
mov
or
fisttps
sarl
out
outsb
inc
mov
mov
rorb
xorl
jmp
stos
mov
clc
pop
fwait
mov
ret
pop
ljmp
call
bound
divb
lods
insb
mov
ds
push
pusha
sub
shll
add
mov
sub
jg
mov
loop
xlat
fstp
inc
sbb
stos
fwait
ret
cmp
jl
pop
fs
pop
push
lock
fmull
popa
insb
fldenv
jnp
call
cli
movups
pop
loopne
xchg
icebp
and
test
iret
pop
in
mov
std
sub
popa
mov
lcall
psllw
mov
push
inc
imul
lods
rorl
mov
repz
movsb
nop
xor
subl
mov
incl
dec
adc
movsb
or
jb
jb
gs
mov
shl
dec
shrd
cmp
ljmp
mov
fcoms
xor
adc
iret
push
xor
ret
jne
or
nop
push
dec
pop
es
ret
aad
xor
jg
sbb
pop
sbb
call
and
and
push
mov
aad
out
testl
push
repnz
pop
or
dec
and
mov
mulb
insl
icebp
cld
jg
push
lret
outsb
roll
cmpsl
push
adc
js
movl
insb
and
jg
add
fmull
or
into
movb
hlt
icebp
cmpsl
call
daa
mov
aad
xchg
and
daa
fidivl
sub
ljmp
pop
xchg
dec
in
sbb
jp
jns
jge
add
loope
das
xor
mov
mov
jmp
jl
sub
aaa
popa
cltd
fwait
push
mov
or
add
dec
ja
sar
call
cmpsb
repnz
cmp
mov
sar
ret
mov
pop
inc
cld
push
fcmovb
pop
add
cmp
jae
or
jg
inc
xchg
inc
xchg
fadds
shrl
int3
jg
jecxz
and
incl
orb
pop
inc
clc
sarb
mov
jge
call
nop
cmp
in
sub
jae
adc
sub
add
out
xor
popa
shl
sbb
je
je
test
sti
hlt
stc
cmp
and
push
cs
xchg
incl
push
sub
sbb
loope
aam
jnp
sti
jo
loope
loope
cmp
decl
inc
js
idivl
lods
stos
dec
fbstp
pusha
push
lret
adc
cmp
pushl
push
mov
inc
pop
jb
push
sbb
adc
test
fwait
js
clc
imulb
decl
jg
ljmp
test
inc
add
adc
scas
add
sbb
jbe
jl
test
pop
leave
das
sbbb
mov
mov
icebp
imul
jmp
rcll
push
loopne
mov
cmp
pop
inc
cld
push
pop
cmpb
sub
popa
adc
out
push
mov
outsb
incl
je
sahf
fiadds
test
mov
lds
and
push
or
sub
lcall
cmp
in
ja
jnp
out
ljmp
lret
mov
shl
test
insb
mov
xor
pop
in
ja
lcall
adc
push
fadds
rcr
lcall
and
enter
repnz
lods
and
jg
jmp
movups
inc
mov
sbb
rolb
push
push
loop
loope
ss
cld
js
xchg
lret
inc
add
int
add
adc
xor
nop
dec
call
fwait
inc
cwtl
rcrb
or
data16
mov
rcrl
mov
adc
js
pop
cli
or
call
bound
ja
inc
push
stos
inc
fldenv
mov
movsl
xchg
ljmp
dec
mov
jp
mov
iret
vpsubw
sbb
imul
jns
cmp
mov
mov
pop
lret
insb
pop
lods
aas
hlt
loope
jae
out
shrl
xchg
xchg
mov
pop
mull
pop
cmp
test
mov
jmp
adc
lret
add
lret
pop
or
mov
mov
sub
cld
lcall
pop
fdivs
test
pop
adc
mov
jecxz
cwtl
loope
and
mov
push
inc
test
lea
hlt
jmp
gs
xchg
pop
mov
mov
repnz
std
sub
sbb
into
xor
mov
mov
sub
jno
sti
jge
push
in
mov
ljmp
pushf
int3
sub
ret
mov
xchg
dec
aas
ss
sub
sarb
mov
fisttps
mov
and
mov
lock
insl
notl
call
fucomp
inc
daa
add
sti
pop
mul
movsl
mov
pop
cmc
lcall
jo
test
outsb
js
aad
rep
jge
lea
push
dec
decl
pop
xor
inc
rcl
loope
mov
or
stos
sti
out
and
mov
jns
insb
loop
jge
mov
inc
dec
pop
js
in
jmp
add
das
cmp
adcb
jne
sbb
cli
repz
jb
jle
pop
ror
cld
adc
sbb
ljmp
es
mov
jmp
lret
xor
sbb
xchg
push
dec
push
mov
jmp
sti
int3
and
cmc
jecxz
and
inc
sahf
pop
inc
mov
stc
or
call
fistl
shll
mov
sub
jle
dec
pop
and
dec
mov
inc
adc
out
inc
imul
pcmpeqd
jg
mov
sahf
push
push
push
pop
mov
pushl
adc
stos
test
arpl
mov
mov
std
in
mov
addr16
mov
mov
sbb
movsl
adc
mov
lock
ljmp
and
gs
sti
dec
pop
incb
sub
push
push
inc
sbbb
es
mov
arpl
and
jb
cmp
ret
ret
mov
and
push
fnstenv
push
or
push
daa
loope
stos
loope
jp
mov
es
in
jbe
sar
jge
mov
push
and
mov
push
mov
and
push
subb
sub
mov
push
xchg
mov
mov
jge
pushl
nop
cmc
pop
adc
fldt
test
inc
repnz
xor
adc
or
arpl
push
mov
decl
imul
sti
stos
nop
scas
or
test
decl
mov
ret
scas
fucomip
push
nop
divb
repz
decl
jb
add
stos
push
mov
pop
xor
pop
sbb
in
adc
incl
mov
cli
shlb
and
dec
aaa
ljmp
mov
jecxz
mov
dec
adc
fildl
lcall
in
lds
into
cltd
mov
jb
sub
xlat
jnp
stos
ds
xor
test
push
test
jns
push
testl
fs
mov
incl
jecxz
jp
stos
stos
inc
sbb
and
jns
ljmp
xor
sbb
ja
mov
movsl
pop
push
pop
jo
jb
cmp
push
fucomip
jg
rcr
in
outsb
out
push
leave
cmp
push
decb
pop
cmp
push
xchg
into
jbe
decl
in
ficoms
pop
cld
push
sar
pop
jo
clc
pop
sub
mov
jno
add
inc
inc
lea
incl
pop
push
jbe
cmp
mov
mov
fisubs
inc
jp
mov
mov
mov
cmpsl
arpl
sbb
pshufw
decb
push
out
xchg
cmpsl
cmp
test
mov
dec
mov
imul
mov
inc
sub
jb
mov
ljmp
and
push
in
push
shll
dec
stos
loop
je
fcoml
jno
incl
sbb
mov
mov
mov
movsb
mov
leave
rclb
or
push
mov
call
pop
shlb
shrb
push
adc
xchg
pop
mov
daa
negl
push
stos
mov
shlb
fstp
cld
decl
nop
pop
fstl
push
data16
dec
add
sarb
sub
sahf
lret
mov
jnp
mov
pop
lcall
orb
fwait
dec
push
inc
inc
pop
aad
sub
bound
fdivl
push
jns
dec
test
jl
cs
lret
addr16
lcall
ret
mov
pop
sbb
adcl
cld
cltd
ljmp
loopne
pop
clc
fcoms
pushf
es
sub
pushf
pushf
pop
inc
jle
lods
popa
add
xchg
jno
call
cmpb
xor
sarl
repz
lods
xchg
int
ja
loope
out
adc
jmp
packssdw
test
aas
xchg
insb
pushl
ret
shlb
sub
pop
sub
pop
aad
adc
jbe
sbb
in
cmp
movsb
rcrb
mov
ret
cmpsb
scas
lret
filds
outsb
rorl
xor
dec
add
jno
mov
js
shrb
out
clc
jnp
cmp
call
shr
popf
lcall
in
insb
in
in
pop
lock
pop
popf
dec
test
idivl
adc
incl
jmp
and
mov
add
jg
decl
mov
stos
insb
fsubrl
push
xor
dec
daa
sbb
ljmp
sub
jmp
mov
adc
add
add
push
jmp
movsl
fldl
fmull
mov
rcll
add
inc
loope
outsl
cmp
jb
pop
ds
ljmp
hlt
aas
cmpsb
cmp
in
xchg
mov
sbb
or
cld
test
xchg
pop
pop
mov
clc
mov
in
sbbb
psubw
cmp
ljmp
inc
cmp
mov
push
iret
sub
sbb
push
movb
jmp
leave
addb
ds
ljmp
push
pusha
add
subl
mov
pusha
mov
lods
insb
scas
dec
xchg
jmp
adc
dec
repz
movsl
add
xor
and
cs
or
add
mov
adc
xchg
idiv
and
lret
fisubl
call
pop
lock
add
pop
pop
push
in
test
sub
dec
mov
mov
sub
push
cld
gs
inc
bound
in
pop
decb
fnstsw
sub
iret
cmc
psubusw
popa
cwtl
xchg
and
call
jge
sbb
add
mov
mov
mov
or
xchg
clc
or
fsub
dec
push
incl
mov
out
pushf
or
gs
dec
mov
fadds
fcompp
jg
insb
shrb
jmp
jl
jmp
iret
fildl
inc
sbb
in
push
pop
aas
mov
sahf
lea
add
hlt
xchg
arpl
mov
popf
cmpsb
dec
js
adc
stc
andb
in
jmp
lods
test
mov
jns
sahf
inc
lret
cmpsl
stc
out
fimull
test
jmp
inc
leave
lcall
ret
in
lcall
das
xorb
cld
cmp
hlt
sub
fistpl
std
aaa
rcrl
scas
jg
ja
lock
bound
xchg
mov
out
and
ja
shlb
shll
outsb
movsb
add
xchg
pushf
leave
dec
imul
idiv
ljmp
inc
int
out
das
nop
xchg
int3
rorb
add
inc
ljmp
sub
xchg
mov
hlt
fnstenv
repnz
stos
scas
into
mov
jmp
out
and
rorb
or
mov
sub
mov
stos
pop
jno
popa
xor
mov
pop
out
pop
xor
mov
push
in
mov
call
sub
outsb
nop
inc
sbb
cmc
cld
test
adc
lcall
decl
outsb
imul
or
pop
outsl
jp
xchg
pusha
fcomip
jge
sbb
into
cmpsb
or
pop
xchg
mov
mov
pushl
inc
pop
test
jl
jns
adc
xchg
mov
pop
popf
inc
push
hlt
into
dec
add
cmp
into
dec
js
cmp
push
nop
popa
push
pop
pushl
insl
jno
mov
xchg
repnz
cbtw
fidivl
fwait
add
aas
jmp
sub
mov
xor
pop
jb
sbb
mov
jae
cmpsb
sub
push
xchg
hlt
test
icebp
jmp
icebp
add
xor
mov
arpl
mov
push
filds
rolb
and
outsl
rorb
jmp
loope
cli
ss
outsl
pop
fwait
adc
cltd
push
loop
jg
or
push
push
int
shrb
pop
outsl
inc
xchg
decl
pop
pushf
les
lds
adc
mov
xor
push
lock
icebp
cmp
push
or
inc
jae
sub
es
xor
push
pop
fmulp
mov
lcall
stc
out
jecxz
jle
test
push
dec
enter
hlt
lahf
add
sub
int
icebp
js
stos
fsubp
int3
push
jl
cld
decl
pop
test
in
sbb
mov
test
dec
mov
std
mov
arpl
push
clc
pop
testb
mull
decl
ret
clc
and
aaa
hlt
sbb
mov
inc
fcomps
out
pop
mov
mov
cmp
xor
lea
repz
icebp
push
sbb
cltd
fbld
cmp
pushl
stc
adc
ss
aam
cld
negb
mov
pop
add
sub
sub
test
incl
cli
enter
in
sbb
and
lock
push
adc
jmp
adc
add
loop
shlb
inc
xchg
out
call
mov
xchg
dec
and
xchg
into
and
pop
pop
pop
pop
jo
call
std
fmul
out
mov
adc
pop
and
fldcw
inc
inc
and
cli
pushf
sub
and
push
sbb
mov
dec
shl
fisttpl
call
std
pushf
mov
ljmp
dec
loope
push
ficoms
stos
sarb
movsl
fiadds
or
cmp
fstpt
cli
pop
ret
loopne
or
or
push
mov
push
dec
js
ljmp
mov
insl
out
mov
into
js
or
mov
dec
imul
mov
mov
fxch
inc
push
and
outsb
push
mov
xchg
sub
and
inc
test
mull
jg
hlt
incl
push
jae
loop
push
sub
ljmp
jns
fdivrl
into
movb
imul
sbb
mov
sahf
decl
sti
call
fistl
ss
fimull
fstps
pop
add
sub
test
mov
xor
pop
dec
cli
scas
in
mov
lcall
cld
mov
push
push
neg
je
stos
mov
or
fdivrp
or
repz
cmp
inc
decl
nop
jne
mov
xor
xchg
loop
jmp
popf
inc
cmp
mov
cmp
jbe
out
ljmp
ljmp
lds
mov
push
leave
popf
fldt
pop
cmp
ljmp
jge
and
out
inc
dec
loopne
and
ficomps
data16
or
mov
push
rorb
or
mov
insl
lods
in
stos
cmpsb
hlt
jne
cld
cmc
add
mov
stos
mov
mov
js
mov
cmc
jno
ja
cli
aas
enter
subb
shrl
mov
pop
cmp
lock
mov
lcall
into
cmpsb
mov
inc
idiv
ljmp
fsubrl
push
popa
fsubp
repnz
xor
sub
test
and
jg
adc
xchg
data16
imul
push
mov
in
popf
jno
add
mov
lods
popf
xor
cmc
push
fsubs
es
das
cmp
push
shlb
pop
jl
add
insl
cli
pop
inc
xor
jb
lahf
push
xor
fisttps
cmpb
add
pushl
push
push
adc
or
pop
mov
fwait
inc
jg
adc
or
ljmp
subb
xor
pop
test
add
mov
in
aam
decl
insb
mov
data16
or
mov
adc
inc
mov
lcall
andb
enter
mov
jns
ljmp
lods
outsl
int
imul
movsl
or
jecxz
decl
add
xchg
pop
lcall
xor
dec
and
in
fsubp
sub
mov
scas
cmp
mov
cmc
repnz
xor
call
int
loop
in
push
cltd
orb
cmpl
mov
and
pop
adcb
orb
jmp
stc
notb
and
andb
mov
sbb
pop
xor
stc
add
jb
lcall
jnp
imul
lcall
add
mov
lcall
ss
ret
ljmp
dec
sub
or
repnz
test
xchg
je
mov
ficoml
jmp
roll
hlt
ds
adc
dec
pop
test
mov
dec
iret
cld
mov
test
outsb
sahf
mov
into
int3
mov
inc
sti
jmp
mov
loope
pop
pop
adc
sbb
mov
into
jo
and
or
lds
pop
pop
xchg
aaa
mov
mov
gs
lcall
lcall
out
inc
xor
pusha
aas
lods
movsb
int3
or
pop
out
mov
incl
js
mov
loope
clc
rcll
out
shlb
adc
add
lcall
jo
inc
call
xchg
mov
dec
es
pusha
shl
mov
hlt
call
shrl
js
push
rorb
pop
xchg
cmp
decl
sbb
pop
or
dec
pop
or
repnz
std
outsb
ret
dec
push
cmpsb
cmp
cmc
jmp
cmpsb
pop
jp
scas
ljmp
lahf
add
dec
pop
jmp
jp
ds
lret
decl
incl
mov
xor
xchg
cmp
sbb
mov
cmp
mov
jmp
lods
pop
in
push
lcall
mov
push
cmp
cmp
hlt
or
xchg
loope
out
or
call
fmulp
std
xlat
sahf
jle
dec
mov
sbb
adcl
cmp
mov
adc
call
mov
fsubrs
mov
mov
subb
inc
mov
dec
xor
mov
loopne
push
cmp
add
mov
dec
or
scas
scas
mov
xchg
jae
dec
call
xchg
into
cwtl
xchg
cs
movsl
sub
in
cmp
and
leave
mov
aas
cmp
pop
cld
inc
inc
jo
push
jle
add
leave
ljmp
cld
sub
jmp
pop
and
fstps
push
fnstsw
or
mov
jl
fxch
sbb
jmp
test
sbb
xchg
andl
dec
imul
lret
push
les
and
mov
out
ret
arpl
fisttps
mov
out
cmp
xchg
ljmp
push
push
mov
loope
lcall
xlat
or
loop
jge
sub
or
sbbl
mov
pop
mov
add
xchg
out
jo
rorl
mov
mov
xchg
mov
xor
scas
in
pop
fildl
push
scas
add
iret
mulb
cli
mov
dec
pop
add
pop
cs
fcmovne
test
or
jae
and
pop
fs
jb
dec
sarl
push
iret
rcrl
loop
jg
jb
push
fs
leave
ret
xor
jmp
repz
sub
mov
mov
and
outsb
push
push
mov
jl
inc
push
lcall
in
outsb
cld
mov
stos
dec
xlat
into
into
push
out
push
test
ja
xchg
movsb
incl
fisttpl
xchg
adc
jo
idivb
mov
pusha
lcall
xchg
bound
ja
rcll
xor
sbb
sbb
inc
or
out
cli
stos
nop
pop
xor
je
cmp
out
stos
lods
mov
aaa
loopne
mov
decl
les
mov
lret
into
jle
pop
lret
mov
enter
ljmp
aaa
lock
adc
test
or
dec
test
call
cmp
adc
mov
xor
mov
sub
pop
xor
mov
ret
sbb
cmp
das
cli
into
jmp
mov
mov
adc
divl
dec
mov
fcomip
ljmp
aas
cmp
addr16
leave
xchg
mov
mov
cmp
rol
push
sbb
std
or
out
sub
bound
fbld
push
xchg
push
jne
pop
dec
mov
add
popa
clc
pushl
and
and
cltd
test
or
movsl
sbb
jecxz
sub
pop
inc
insb
cmpsl
ret
pop
push
scas
and
mov
inc
cmpsb
cmp
ljmp
mov
jne
push
jl
mov
icebp
dec
push
push
xchg
sbb
pop
ljmp
inc
add
lcall
mov
addr16
xor
fstpt
mov
mov
add
push
shl
pop
jno
decl
xchg
push
lcall
jae
popa
cli
dec
sbb
sub
mov
pop
xchg
push
out
mov
scas
xchg
inc
pop
ffree
sbb
movsb
lock
leave
test
mov
add
in
jg
arpl
in
sbb
clc
ret
or
xor
divb
fcoml
sub
jg
mov
sub
or
std
and
fidivl
in
mov
bt
mov
movsl
clc
jo
add
jno
jp
bound
adc
cwtl
cmpsl
xor
prefetch
or
inc
and
out
inc
in
xchg
ror
and
jmp
jp
cmp
jo
loope
aas
mov
ljmp
mov
jne
sbb
add
addb
mov
loopne,pt
ljmp
xchg
pop
pop
cmp
jns
lock
je
pushf
xor
ja
in
ss
jb
push
ljmp
stos
shrl
mov
sbb
lret
lret
or
and
lds
ljmp
decb
push
jb
fisttpl
aaa
outsb
popf
jp
ficompl
or
sbb
adc
inc
jo
jo
sti
adc
cmp
mov
mov
mov
xchg
sti
iret
in
jmp
sbb
insl
outsb
fdivrp
decl
dec
les
dec
inc
jno
movsb
jmp
scas
sbb
decl
enter
cs
cmp
mov
fisttpll
out
push
add
rorb
call
dec
dec
imul
je
fistl
pop
cwtl
std
mov
loope
adc
push
pop
sbb
mov
ljmp
sahf
xlat
shlb
inc
js
add
xor
insl
dec
jbe
push
ljmp
mov
fisttps
call
ds
push
jge
lcall
aas
adc
and
xchg
pop
lcall
push
movb
xchg
divl
mov
jecxz
cmpsb
es
pop
je
mov
jl
push
ljmp
ljmp
jmp
mov
add
mov
clc
fisttps
pop
jb
adc
in
mov
lcall
cmpsl
in
aas
loop
add
xchg
pop
test
aas
stos
mov
xor
push
jmp
pushl
mov
outsl
movsb
mov
cmc
or
jno
mov
sub
cld
mov
pop
ja
call
js
xchg
pop
or
jbe
mov
inc
popa
ret
mulb
dec
loop
lds
fwait
and
ljmp
loopne
aaa
push
hlt
sub
or
push
movswl
sbb
faddl
test
rorl
gs
inc
nop
in
ljmp
inc
ret
cltd
dec
jns
pop
mov
mov
lahf
sub
dec
and
inc
push
ja
cmp
stos
mov
dec
add
lret
mov
xchg
pop
orb
dec
loopne
push
adc
pop
hlt
sub
dec
sub
mov
ljmp
clc
incl
xchg
mov
jbe
pushf
mov
sub
das
mov
fdivr
dec
fisubl
or
scas
pop
mov
mov
fstpt
xchg
pop
pop
inc
fistps
mov
incl
inc
xor
mov
adc
jno
mov
imul
xorl
mov
aam
xchg
repnz
and
mov
cmp
add
data16
call
pop
ret
sbb
stos
jb
mov
clc
cltd
mov
or
sbb
push
call
xor
cmp
shll
jl
push
and
push
mov
inc
adc
std
loop
or
xor
in
ret
call
inc
jmp
bound
adc
push
add
mov
incl
jecxz
sbb
sahf
icebp
in
mov
push
testb
popa
dec
sbb
push
dec
jmp
mov
stos
dec
mov
jb
mov
or
outsb
inc
jbe
inc
adc
push
fbld
inc
xchg
mov
call
or
dec
sbb
pop
sub
inc
enter
pop
inc
push
jp
xor
insl
repz
lcall
dec
jae
sub
xchg
xor
test
mov
jns
jmp
mov
xchg
adcl
mov
add
outsl
lcall
rolb
add
add
andb
in
sub
ljmp
sbb
sbb
jae
sarl
xor
pop
imul
jmp
sbb
bound
sbb
addb
mov
sbbl
pop
mov
lcall
mov
push
mov
stos
dec
sub
add
xchg
lock
das
mov
lret
out
clc
push
jge
xchg
sbb
xor
sahf
dec
cs
mov
xor
mov
cltd
or
in
hlt
mov
push
arpl
sbb
mov
push
xchg
lods
adc
loope
cmpsl
sbb
dec
aas
je
push
pop
pusha
test
out
sahf
es
ljmp
mov
sub
mov
jne
cltd
andl
ja
ja
ljmp
iret
in
pop
cltd
stc
cmpsl
pop
nop
xor
sbb
stos
push
clc
shlb
je
rclb
call
xchg
mov
call
lods
icebp
fwait
xchg
into
add
push
or
mov
lcall
shll
xor
cmpsl
scas
ret
nop
pop
fmul
test
push
pop
rorl
sub
adc
out
mov
xor
jnp
push
aas
pop
dec
ljmp
inc
and
push
loopne
sub
jg
mov
fs
sub
mov
mov
mov
jmp
addr16
pop
dec
in
push
ds
xchg
lock
call
out
ljmp
sbb
push
fistps
sub
mov
lcall
mov
mov
or
cmc
fld
mov
jno
aas
add
in
ja
lods
push
sbb
outsb
mov
adcl
das
mov
out
and
loop
and
inc
cmpsl
inc
cld
mov
loope
or
dec
push
jg
inc
ret
repz
xchg
sub
outsb
mov
sbb
push
faddl
decl
pushl
sub
push
sahf
mov
ret
pop
cmc
cmp
fcoms
mov
imul
lcall
mov
jb
add
out
cli
stc
arpl
inc
arpl
lret
incl
adcb
xor
adc
ficompl
data16
filds
push
testb
inc
pop
loopne
pushl
mov
hlt
xchg
daa
fcmovnbe
push
adc
push
add
pushl
sti
scas
sub
gs
movsl
or
jbe
mov
stos
push
add
push
mov
repnz
pop
cltd
jg
mov
es
push
push
das
test
je
shlb
jmp
add
enter
inc
cmp
adc
and
dec
popf
nop
aas
rorb
and
std
pop
in
scas
sti
mov
sbb
int
dec
mov
mov
add
mov
stc
jmp
jae
or
xchg
inc
inc
inc
imulb
call
movb
fs
push
mov
adc
jmp
add
jle
decl
add
rcll
sub
sbb
stos
cmp
call
mov
fnstsw
cmp
ljmp
add
shll
jns
cmp
pushl
lahf
mov
inc
mov
dec
and
stos
jbe
xor
mov
js
loope
or
mov
repnz
jge
movsl
pop
mov
push
mov
and
sar
stos
jmp
mov
adc
push
arpl
sub
aaa
mov
adc
jmp
icebp
data16
cwtl
std
pop
leave
stc
out
cs
cld
cmp
add
ret
es
xchg
jne
pop
mov
cltd
mov
inc
or
dec
inc
test
aaa
jo
mov
ficomps
jge
mov
popa
pop
dec
adc
incl
lcall
sbb
sub
sbb
sub
aas
xlat
xlat
jmp
push
cmp
jb
xchg
jp
lahf
aas
lcall
sbb
aam
jg
mov
mov
dec
add
lods
push
mov
loope
mov
aad
xorb
dec
aas
mov
sub
xchg
in
aam
add
fisttps
pop
icebp
sbb
xor
jl
jle
and
call
in
cmpb
xchg
out
push
ret
stos
lret
xorb
mov
arpl
jmp
push
shrb
cli
xchg
jae
andb
cmc
daa
and
bound
stos
int
sbb
mov
pop
mov
gs
mov
inc
cmpsb
push
or
xchg
jbe
xor
pushw
or
daa
stc
insb
rcll
adc
mov
add
fwait
popa
loopne
jo
mov
cmp
lock
call
pop
aam
dec
leave
mov
jne
or
mov
std
icebp
loopne
and
sbb
mov
mov
mov
mov
mov
cmpsl
push
sub
mov
fwait
xchg
xchg
lret
mov
xor
lcall
sahf
sbb
in
insb
xor
into
in
jae
adc
lods
nop
pop
fcomps
sysret
sbb
sub
outsb
jge
xor
mov
out
xchg
xchg
in
inc
into
clc
test
ljmp
loopne
outsb
mov
mov
in
xchg
dec
cmpsb
lock
jl
pop
sahf
shll
jmp
mov
out
xorl
pop
out
clc
xchg
mov
sub
incl
sbb
jo
aas
xchg
and
es
nop
inc
aas
lds
and
decl
cmp
jae
stos
xor
aad
adc
pop
dec
or
mov
sti
addl
decl
lcall
push
mov
out
sar
out
adc
pop
push
in
pop
xchg
dec
bound
hlt
xorl
ja
ljmp
rcll
std
testl
pushl
leave
xchg
xchg
push
xor
imul
sarb
mul
gs
int3
lahf
mov
in
into
push
decb
ljmp
cmp
je
movsl
xchg
mov
insl
xchg
dec
call
mov
mov
call
and
fsubl
insb
and
out
mov
push
lret
pushf
or
and
pop
incl
sbb
into
jnp
pop
jg
xor
popa
fwait
cmp
xor
cmp
lcall
xchg
and
fbld
lea
sub
mov
jle
mov
cli
ljmp
dec
je
movb
jbe
push
mov
sbb
lea
ljmp
xchg
ljmp
sub
inc
clc
xorb
mov
push
sub
daa
ret
pop
aaa
pop
add
fs
scas
dec
xchg
scas
add
rorb
lcall
pushf
inc
ljmp
sarb
cmpsb
inc
jg
aad
jae
ljmp
cmp
sub
jnp
pop
imul
add
adc
loopne
dec
jns
ja
daa
fcos
lcall
lods
call
xorb
adc
sbb
cmpb
sub
sbb
jmp
push
jp
lret
push
fdivrs
lcall
arpl
mov
int3
pop
add
sbb
xchg
sti
sub
mov
out
push
mov
cmc
pushl
aas
xor
shrb
outsb
ljmp
ljmp
int
jle
jg
and
loop
mov
jae
loop
fistpll
lods
imul
popa
push
xchg
dec
fdivs
icebp
inc
std
push
loopne,pn
pop
loopne
out
xchg
sub
decl
mov
dec
mov
movsb
and
sahf
inc
dec
ljmp
inc
divb
out
xor
adc
outsl
sahf
push
lahf
push
lret
jno
mov
cmp
dec
imul
or
xchg
or
flds
and
jno
jmp
lods
arpl
rclb
lds
leave
xorl
mov
dec
loop
sbb
icebp
aam
in
mov
mov
ljmp
mov
dec
push
dec
rolb
inc
sub
hlt
ja
jmp
clc
push
xchg
pop
cltd
jns
or
outsl
adcl
imul
es
fwait
push
int3
clc
incl
mov
inc
jp
imul
aam
imul
in
inc
sub
ja
es
lods
sbb
mov
call
xchg
mov
mov
or
mov
cmp
push
push
popf
xchg
or
mov
outsb
inc
idivb
sbb
aaa
std
ljmp
into
lcall
sbb
loope
and
subb
call
adc
enter
xor
jg
std
je
sub
lahf
outsb
ret
ljmp
out
popf
dec
push
pop
loopne
and
pushl
jbe
mov
inc
lock
cmpsb
sbb
mov
inc
out
push
mov
xor
dec
dec
adc
mov
push
mov
and
pop
movsl
sbb
push
adc
add
jb,pn
lret
decl
pop
sub
xchg
add
add
outsb
out
xor
dec
iret
das
mov
adc
mov
adc
incl
shrl
lods
fbld
inc
mov
test
mov
cli
ljmp
jb
test
push
adcb
mov
cmp
sub
and
lret
push
rcrb
lock
js,pn
xor
cwtl
xlat
xchg
imul
les
adc
add
test
sub
mov
add
jmp
and
mov
cmp
xchg
mov
dec
mov
cmpsl
cld
scas
dec
rcrb
ljmp
insb
aas
lahf
outsl
inc
repnz
push
sbb
jmp
aas
test
jl
pop
push
cs
add
sbbl
mov
fisttpll
pop
cli
ror
cmpl
leave
mov
icebp
int
push
shl
shlb
cwtl
bound
inc
repz
pop
aam
rcll
jb
mov
jg
pushf
dec
shll
pop
push
pavgw
cmp
aas
dec
cmpsl
test
loop
ljmp
decl
add
or
sahf
and
or
inc
mov
sub
xchg
rcr
out
fldcw
out
pop
nop
pop
xor
out
imul
mov
daa
pop
out
neg
popf
mov
popa
pop
push
dec
mov
clc
fs
lret
test
mov
jo
orb
out
fidivrl
ljmp
jmp
push
pop
outsl
pop
inc
jne
or
sbb
lret
pop
fstpt
inc
or
add
jo
sbb
out
ss
mov
lock
flds
sbb
fldz
lcall
jp
push
mov
xchg
pushf
ret
lcall
mov
out
mov
dec
popa
mov
sarl
push
sub
mov
push
xchg
or
jbe
ds
jle
or
and
insb
xor
sbb
add
hlt
ret
adc
push
inc
scas
outsb
les
and
xor
call
shl
out
dec
adc
neg
jecxz
mov
rcrb
pop
add
cltd
dec
inc
push
mov
jecxz
and
mov
popa
inc
lahf
insb
mov
xchg
bound
in
sbb
aam
mov
xchg
andb
cld
mov
popf
jno
test
adc
test
pushl
sbb
xor
dec
push
ret
stos
in
daa
xchg
xlat
or
mov
dec
xchg
je
decl
xchg
mov
sub
fidivs
adc
mov
bound
mov
stos
inc
cmc
mov
out
jp
mov
mov
insb
leave
sbb
jb
lret
add
pop
or
lcall
cwtl
imul
fstl
xor
leave
or
cmp
sub
add
shl
xor
ljmp
mov
or
stos
in
sbb
pushl
mov
int
fdivrl
and
inc
scas
add
sbbb
add
into
mov
call
jg
jo
and
mov
shlb
sub
bound
xor
incl
mov
sbb
roll
and
imul
cwtl
call
std
repz
cmp
mov
sarl
adc
insl
inc
dec
in
repnz
mov
mov
call
or
xchg
test
xchg
cmpsl
add
inc
in
das
scas
adc
dec
dec
and
mov
push
jbe
pop
cld
pushl
scas
imul
ret
pop
push
ss
sbb
mov
jmp
jp
xchg
pushfw
and
inc
cmc
fsubrs
and
inc
xchg
fmull
es
cmc
jmp
stc
aaa
cwtl
ss
clc
or
int
sahf
xchg
jmp
cwtl
orl
lods
mov
lret
vmread
loop
jg
jmp
js
inc
dec
mov
push
jno
int
pusha
push
jp
add
xchg
lcall
xor
fstl
sbb
cmp
cmpb
sbb
outsl
pop
sbb
sub
sti
mov
sbb
cmp
popf
imul
fcoml
lock
divb
cmp
dec
mov
jo
mov
pop
fld
pop
pop
add
add
and
push
mov
jp
lods
sahf
or
fadd
pop
out
lods
and
mov
jle
mov
mov
out
aad
into
sbb
test
sub
pushl
mov
aaa
in
sub
stos
repnz
inc
xchg
xchg
test
fists
loop
mov
cmpsl
dec
nop
xchg
add
inc
shll
stos
pushl
cmp
jnp
imul
inc
ror
out
add
push
inc
xor
inc
and
fdivr
ljmp
and
inc
mov
jg,pt
shlb
cmpsb
mov
xor
dec
dec
ret
jg
add
inc
and
stos
dec
cltd
push
lcall
data16
xchg
imul
mov
and
sub
mov
dec
into
adc
dec
inc
push
cli
jp
inc
cmp
mov
jge
dec
js
mov
ja
mov
xor
mov
fldl
movb
decl
jb
pusha
enter
cmp
fdivl
andb
test
xchg
mov
jg
pop
pusha
inc
adc
mov
pop
hlt
jno
jmp
pop
push
loop
mov
das
jne
mov
nopl
pop
popa
cltd
nop
mov
shlb
add
xor
xor
push
adc
fdivs
call
xlat
shr
into
or
sub
iret
outsl
adc
repnz
movsl
imul
in
sbb
sub
cld
jmp
addb
lcall
push
call
xchg
addb
mov
jbe
mov
and
or
imul
mov
jns
or
jecxz
pop
push
int
ret
daa
add
bound
push
not
cwtl
ljmp
push
out
sbb
out
push
ficompl
repnz
dec
xchg
xchg
cmp
data16
jnp
cmp
in
lock
sub
dec
dec
pop
movsl
mov
add
lret
inc
pop
call
lods
xchg
push
push
jne
sbb
mov
lret
stos
ja
mov
mov
xchg
ljmp
lret
fcompl
xor
dec
pop
pusha
mov
incl
jmp
out
sbb
or
xchg
xor
shrb
sar
loopne
mov
cmp
jno
jbe
mov
out
imul
mov
fbld
adc
dec
mov
addr16
jne
bound
pusha
or
inc
sbb
xor
add
cmp
xor
ljmp
mov
mov
icebp
xchg
push
fnstenv
inc
outsb
fstpl
dec
repz
cmpsl
cmp
enter
icebp
incl
adc
stos
xchg
jo
loopne
lahf
mov
xchg
mov
push
cmpsl
cltd
sahf
inc
pop
sub
lcall
les
push
js
mov
push
shr
scas
dec
jle
pop
jo
mov
jmp
cmp
std
push
data16
test
or
mov
sbb
and
subl
call
shrl
nop
clc
pop
sti
dec
ficoms
ljmp
sub
addr16
leave
fwait
xchg
cmp
mov
cmp
mov
dec
pop
test
incl
push
inc
jle
jbe
aas
pop
push
ds
repz
push
ret
outsb
test
fsub
jle
mov
adc
dec
cmp
sbb
movaps
pop
inc
cmp
dec
rol
mov
out
mov
out
in
repz
mov
out
add
fwait
enter
cli
jg
and
or
xchg
orl
iret
jb
dec
std
mov
jo
lcall
addr16
jp
jae
or
mov
getsec
jmp
jb
rolb
sahf
aad
addl
aaa
ljmp
and
lock
rol
cmp
xchg
add
sbb
ret
mov
xchg
test
pop
cwtl
lahf
and
pop
xchg
xchg
leave
jns
cmc
ljmp
lds
or
push
les
dec
add
fisubl
imul
dec
inc
sub
add
pop
sub
push
or
sahf
fldt
push
fimull
shrb
inc
pop
dec
loopne
cli
inc
lret
outsl
test
ret
test
je
sbb
ljmp
jae
cmpb
mov
push
pop
xchg
movsb
push
setp
outsl
jp
jb
mov
insl
push
ficompl
mov
sahf
add
nop
iret
push
jge
push
jle
jl
bound
xor
lcall
fidivrs
rorb
aas
icebp
and
sbb
dec
aam
lcall
lock
jns
push
fsubs
adc
dec
and
clc
jnp
cwtl
mov
loop
mov
xchg
push
xor
sub
and
jmp
jmp
subb
ret
dec
jnp
jne
pop
mov
fidivl
adc
push
popa
ret
mov
ljmp
enter
mull
fnsave
xchg
test
cmp
ss
in
add
pop
out
cmp
jbe
ret
test
nop
cltd
or
sbb
dec
cmp
fwait
add
mov
pop
mov
cli
decl
mov
out
leave
fcoms
repnz
addr16
hlt
test
lock
cmc
out
jb
inc
mov
inc
mov
push
pop
xchg
sti
and
pop
mov
adc
ret
filds
mov
iret
daa
or
xchg
lret
add
lahf
popa
lods
shrb
std
xchg
xor
cmp
cmp
mov
repnz
orl
and
fdivr
cld
lahf
test
cs
cld
ss
jg
xchg
iret
mov
das
andl
addb
xchg
push
decl
lods
add
mov
inc
jbe
aad
inc
xchg
jns
lds
into
cmp
mov
xchg
in
mov
fnsave
sub
scas
roll
leave
outsb
ss
call
cld
aam
scas
push
sub
int3
inc
sub
es
cld
and
sub
pop
icebp
jmp
mov
hlt
dec
lds
mov
bound
js
ljmp
imul
jo
xor
push
sahf
imul
sbb
push
shlb
popa
jbe
xchg
cmp
call
pop
fisttps
es
std
mov
cltd
xchg
pop
inc
fdivl
mov
jp
insb
imul
loope
mov
out
fsubs
push
push
inc
popf
lea
or
clc
lcall
stc
jns
push
xor
inc
outsb
mov
mov
or
jne
jns
sbb
mov
pop
int3
jbe
loop
loop
mov
ret
aaa
xor
cmp
mov
aas
sbb
je
in
xchg
xor
in
dec
into
and
sbb
cltd
jmp
stos
lea
mov
xor
or
and
inc
mov
and
jmp
adc
sub
roll
insb
pop
adc
and
clc
pop
pop
mov
call
negl
mov
or
push
inc
push
aam
xchg
into
fst
into
out
mov
scas
ljmp
lds
pop
push
ret
adc
ljmp
in
jmp
cmpsb
xchg
and
aad
cmpsb
pop
pop
sub
jbe
push
fs
pop
pop
clc
mov
sub
aad
inc
mov
dec
sub
std
jns
adc
add
inc
jle
xor
clc
inc
xor
loope
mov
push
iret
ja
mov
push
icebp
rcrb
call
sub
adcl
mov
js
sahf
pushl
fidivrs
xlat
mov
cmpsl
mov
mov
nop
aam
roll
sbb
pushl
add
jno
movb
sti
jmp
icebp
movsb
cmp
mov
mov
in
sar
pushl
inc
mov
fs
into
mov
ljmp
pop
hlt
das
lods
loop
lahf
jno
test
data16
fsubrs
ds
mov
ljmp
xchg
xchg
xchg
shrb
call
mov
incl
sub
and
push
ror
or
and
andb
testl
inc
inc
xor
loop
cwtl
pop
inc
pushf
xchg
mov
out
pop
mov
xor
ljmp
ljmp
mov
lret
and
mov
pushf
mov
in
int
or
scas
adc
and
addr16
decl
icebp
stc
xchg
fmul
or
push
jmp
add
mov
sbb
sbb
inc
int3
cmc
dec
mov
mov
mov
xchg
push
xchg
outsl
repz
xchg
arpl
decb
pop
cmp
scas
mov
stc
xor
call
imul
cmp
jge
mov
dec
lcall
decl
and
cld
pop
pop
xchg
push
jne
in
inc
gs
fidivl
insb
lcall
lea
push
xor
jmp
mov
lahf
inc
fsts
ret
mov
dec
xor
roll
call
fisubrl
fldenv
inc
ret
out
or
mov
clc
lea
inc
sbb
fs
mov
ret
pop
decl
fsubs
subb
add
add
jo
test
push
lahf
inc
int
lcall
pop
push
out
imul
mov
and
cld
cmp
mov
dec
pushl
sbb
scas
cmc
mov
nop
sub
sbb
shlb
decl
fs
movl
push
adc
jmp
jmp
sbb
ret
add
inc
pop
fnstcw
and
pop
xchg
mov
hlt
lcall
ss
aam
jg
test
outsb
xchg
push
xor
test
inc
add
mov
fs
cwtl
test
in
sbb
fcompl
cmp
dec
sub
mov
lcall
cld
push
in
ss
mov
mov
cmp
fstpt
or
push
in
adc
out
rcll
mov
decl
sbb
jno
xor
lods
xchg
es
incl
adc
sub
sbb
adc
out
or
cs
shll
sub
xor
ljmp
lret
orl
fiadds
imul
rol
mov
loope
subb
jp
std
mov
andl
call
dec
jp
mov
mov
and
lcall
popa
pushf
mov
xor
jl
bound
fistpl
push
andl
add
fcmovnbe
mov
mov
jne
xor
sub
inc
es
iret
push
fsubp
mov
clc
outsb
or
sub
mov
jne
push
lret
int
aaa
std
add
xchg
or
fldl2e
cld
lcall
mov
xlat
dec
rol
repnz
xor
pop
data16
movups
in
loop
lods
cmp
jg
pushl
xor
mov
mov
fcoml
cmp
mov
aad
decl
sbb
dec
xorl
sbb
imul
ljmp
imul
pushl
mov
mov
mov
out
lods
pushl
or
int3
lahf
jae
xchg
mov
pop
insb
mov
pushf
inc
inc
and
pop
add
or
leave
mov
and
fistps
aad
xorb
xchg
dec
mov
loop
loope
jg
inc
sub
jmp
add
decl
testl
mov
mov
xchg
lret
clc
pushl
ret
les
repnz
mov
dec
addw
incl
mov
cmpsb
cmpsl
and
sbb
jle
fstl
ljmp
movl
xchg
and
sti
mov
rcl
dec
lods
xchg
cli
mov
sub
sbb
js
jns
inc
adc
inc
and
jno
cmp
out
sar
mov
cmp
sbb
and
cmpsl
rorl
lods
test
inc
cwtl
pmaxub
jmp
aaa
or
jns
sbbb
adc
bound
push
and
std
mov
ljmp
lahf
mov
sbb
loopne
cmp
cmpb
decl
enter
jbe
push
dec
aad
mov
lcall
outsb
dec
mov
dec
insb
jge
mov
inc
mov
repz
cmpsb
push
mov
popf
out
mov
cld
mov
ss
jl
add
sbb
sbb
xacquire
ret
daa
arpl
mov
andb
add
jle
mov
movd
mov
pop
push
movsb
enter
call
jns
pushf
inc
jne
dec
insb
mov
xchg
inc
bound
loope
stc
jl
add
mov
incl
dec
inc
and
lret
and
add
bound
push
sbb
and
hlt
lock
jle
adc
xor
cwtl
subl
ret
and
jne
jno
addr16
call
cmpsb
mov
cmp
imul
jg
jl
fmuls
mov
into
lods
test
in
jmp
or
pop
push
jmp
dec
mov
dec
cmpsl
xchg
mov
push
push
cli
movsl
or
bound
pop
adc
lds
mov
cld
push
xor
insl
mov
cwtl
call
mov
jb
loop
cwtl
mov
cmc
sar
bound
jl
inc
rorb
insl
inc
call
jno
stos
std
push
pop
sub
pusha
cmp
xchg
push
lahf
jo
into
sub
std
or
daa
outsb
jae
scas
ret
dec
fadds
jns
jg
jle
push
imul
fistpll
dec
rcrb
dec
mov
lods
push
or
mov
ret
scas
and
sub
sbb
mov
mov
aaa
lcall
or
push
lods
ss
sbb
icebp
push
cs
fidivl
jge
adc
movsl
inc
das
mov
sahf
sar
pop
insb
inc
push
cld
mov
sub
xor
incl
xchg
daa
sbb
pop
sbb
fiaddl
and
sub
sub
push
xlat
call
ljmp
cmp
dec
mov
shrb
decl
scas
mov
inc
pushf
cmpsb
jae
lea
stos
mov
mov
inc
pop
stos
shll
mov
pushl
loope
aaa
adc
push
lahf
popf
cmp
mov
pop
mov
mov
xchg
ja
loop
lcall
mov
sbb
mov
jne
test
loope
js
mov
jl
adc
inc
shr
lahf
mov
mov
mov
mov
mov
lea
xchg
xchg
ljmp
scas
jg
ja
mov
sbb
movsl
daa
inc
mov
jmp
ljmp
add
call
cmp
cs
sub
incl
cmp
movsl
call
ja
and
cwtl
dec
inc
jecxz
or
mov
std
in
add
aaa
mov
add
lea
std
movsb
jns
mov
pop
leave
int3
jne
testl
mov
push
ds
pushf
jnp
push
inc
jmp
add
outsl
xor
scas
adc
test
shlb
inc
clc
cmp
out
adc
inc
gs
jp
imul
xchg
jl
lods
jo
jae
jp
or
cli
ss
sti
rclb
sbb
decl
dec
lcall
or
xor
bound
xor
mov
dec
sar
jmp
lcall
pop
lds
push
dec
jmp
call
dec
lret
lcall
lcall
cld
imul
lock
sahf
inc
fistpll
std
loope
xchg
mov
lret
lret
pop
jmp
mov
ret
aas
jecxz
insb
push
dec
push
push
cs
lods
mov
insl
les
dec
push
mov
or
int
hlt
inc
xor
pop
mov
fstp
mov
aas
sbb
jmp
cltd
pop
rorb
mull
dec
and
push
push
fistpll
push
iret
xchg
mov
sub
jne
movsl
adc
outsl
xchg
cs
sub
ljmp
xor
fs
insl
outsb
pop
sub
pop
mov
aaa
xchg
ret
ss
sbb
sbb
call
arpl
add
pop
fsubl
jp
mov
lcall
ljmp
dec
xchg
cmpsl
les
sbb
mov
cwtl
testb
mov
out
sar
decl
inc
add
sub
pop
or
out
push
clc
jb
clc
incl
adc
pop
cmp
imul
sub
inc
dec
push
xchg
sbb
decl
dec
lea
test
insb
jae
cmpsb
dec
lahf
add
mov
ljmp
in
xor
sub
bound
ljmp
or
and
jae
pop
pusha
push
fdivr
lcall
filds
fcoms
cwtl
into
stos
push
dec
aas
call
out
mov
ja
adc
lcall
loope
push
out
mov
test
and
loop
xchg
outsb
sbb
jo,pn
in
popa
mov
nop
stc
mov
test
xor
mov
in
adc
and
daa
lret
push
mulb
pop
adc
icebp
sbb
xchg
cmp
loopne
xchg
mov
fs
add
mov
ljmp
push
mov
cli
insb
mov
es
fucom
adc
in
movsb
mov
orb
test
mov
pop
mov
pop
push
cmp
daa
sbb
outsb
popf
adc
mov
xchg
leave
xchg
mov
in
adc
sub
call
sbb
xlat
push
sub
adc
out
call
mov
xlat
sub
dec
cmp
mov
add
jg
fisubl
mov
jg
inc
cmp
lret
call
ljmp
lods
jns
test
aaa
lcall
mov
mov
xor
mov
xchg
mov
lods
mov
mov
pop
lcall
cli
mov
icebp
fidivs
and
and
xchg
xchg
lahf
mov
rolb
stos
fs
push
xor
loopne
xchg
movsb
push
dec
rcrl
movsb
test
cmpb
dec
push
ljmp
push
push
dec
fildl
clc
jecxz
jne
adc
and
loope
fwait
sub
cli
lahf
mov
roll
xor
push
cmp
sbb
sbb
aam
loope
clc
jg
sbbb
div
pop
int3
cwtl
and
popf
shlb
stos
inc
sub
dec
enter
mov
dec
and
add
rcr
dec
or
andl
in
outsl
out
stc
lds
fisubrl
push
mov
dec
pop
mov
jmp
adc
int
lock
pop
mull
out
int
pop
lds
icebp
mov
in
imul
nop
imul
or
xchg
std
cmp
outsl
ljmp
mov
rorl
cli
dec
add
cmpsb
push
xor
push
inc
insl
filds
imul
lea
jmp
std
int3
push
mov
test
xchg
hlt
jg
das
mov
sub
in
or
std
cmp
out
jg
lds
mov
ret
pushl
test
sub
out
fwait
js
ljmp
loop
aas
adc
stos
iret
xchg
icebp
incl
adcl
shlb
pop
mov
dec
or
imul
sarb
cld
or
das
clc
data16
lcall
pop
nop
adc
jmp
mov
adc
out
adc
sbb
pop
inc
jbe
jg
cmc
aas
or
es
imul
jge
mov
xchg
adc
inc
lret
mov
pop
je
sub
pop
mov
cmc
ljmp
xor
shl
jle
fcomps
cmpsl
adc
scas
jecxz
sbb
test
lea
adc
push
mov
fwait
sarl
ss
inc
insb
add
cli
jl
jmp
xor
in
imul
add
cmp
por
cmp
sbb
jg
lods
cmp
jmp
aad
jo
fisubrs
call
test
es
pop
xchg
mov
sti
fidivrl
ss
js
sti
mov
insl
fistl
xor
in
stos
out
add
xchg
pop
ds
mov
gs
cmpsl
and
xlat
inc
test
mov
clc
call
pop
enter
movsl
fbstp
adc
inc
xor
pop
lock
jne
mov
sbb
jg
mov
cmp
nop
or
xor
mov
clc
in
ret
int
cmp
xlat
dec
shl
jae
push
out
repnz
pop
dec
test
vpsubb
dec
ja
mov
xchg
push
push
xchg
loope
mov
or
cmp
xor
fwait
inc
pushl
and
stos
mov
mov
push
dec
hlt
lds
sbb
cmp
sbb
adc
ljmp
in
mov
scas
jb
negl
lahf
push
adc
decl
fcom
movsl
test
jae
dec
jo
rcll
push
xor
inc
pop
xchg
in
in
sbb
loopne
or
iret
lods
in
push
or
jg
sub
mov
xor
pop
scas
fs
cmp
movsb
xor
pop
rclb
repz
incl
adc
xchg
in
and
mov
sbb
repz
ret
mov
decl
sbb
repnz
mov
mov
imul
mov
jp
movsl
add
test
mov
xchg
add
sub
ret
popa
jb
xor
and
daa
dec
arpl
jg
sbb
into
xor
lahf
jle
lock
cmp
sbb
outsl
fxch
lods
out
mov
out
nop
test
loopne
xchg
cltd
neg
mov
add
decl
mov
inc
jecxz
sbb
cmpl
cmpsl
jle
out
add
test
scas
adc
lcall
std
xor
shll
pop
imul
jg
fstpt
clc
cmpsb
mov
push
sbb
jae
pusha
xor
dec
jbe
shlb
mov
fnstenv
push
imul
icebp
cmpsb
add
in
inc
hlt
shrl
mov
xor
jg
stc
lea
nop
in
cli
scas
dec
cmc
lods
fcomps
and
pushf
sbb
jnp
ljmp
int3
pop
hlt
xchg
aas
xchg
mov
sbb
movsb
add
or
xor
pushl
cmpsl
and
dec
in
sbb
repz
xchg
inc
insb
mov
jmp
dec
pop
adc
fld
add
andb
mov
pop
or
int3
ja
mov
lock
inc
movb
out
cmp
scas
std
out
pop
rclb
stc
sti
jo
incl
aad
icebp
xchg
sub
push
loopne
sbb
xchg
repz
sub
into
mov
mov
das
jg
decl
mov
movsl
sbbb
pop
pop
or
push
mov
pushl
jmp
lcall
popf
jle
add
xor
lcall
push
jp
inc
push
outsb
adc
xlat
into
jo
test
sti
mov
or
fs
iret
mov
rclb
fcmove
inc
dec
cmp
cs
loopnew
test
outsl
cld
jo
pop
xor
jb
in
sub
pop
je
push
push
sbb
xor
jmp
mov
xor
or
test
das
cli
sbb
int3
or
push
adc
pushl
arpl
outsl
ret
in
stos
add
fdivs
push
lods
arpl
mov
lcall
lcall
mov
sahf
dec
das
inc
dec
stos
mov
push
pop
sbb
scas
pushl
stos
adc
rcll
ss
fdivrs
dec
outsl
cli
jmp
adc
rcrb
sub
fisubl
inc
and
ja
ret
mov
out
decb
push
in
sbb
test
int3
jmp
xchg
aas
mov
dec
int
jmp
enter
inc
xchg
fiadds
push
push
mov
ds
pop
imul
stos
subb
xor
xchg
mov
or
dec
push
or
cld
decl
test
adc
adc
cmc
inc
xchg
lret
aad
mov
ljmp
lahf
pop
pop
sti
clc
adc
lret
xchg
fdivrl
push
repnz
jp
popf
addr16
or
pop
jmp
mov
enter
jo
test
cmp
sub
ud0
incl
mov
out
pusha
push
mov
iret
mov
loop
xchg
push
adc
or
test
dec
push
mov
dec
lcall
xchg
xchg
and
ficomps
cli
sub
cld
in
pushf
loope
imul
pop
or
mov
mov
incl
sub
lods
cltd
push
sbbb
adc
lcall
jbe
sahf
xchg
daa
repz
mov
inc
cwtl
fistl
leave
filds
jnp
or
imul
jmp
add
test
loop
or
xor
sub
pop
xlat
push
mov
inc
sub
mov
daa
mov
mov
mov
jnp
inc
inc
or
cmpsb
jmp
rorl
cwtl
mov
adc
push
and
ficoml
sub
into
adc
sbb
popa
jg
fcmovne
push
clc
xor
test
ljmp
cmp
dec
adc
mov
enter
ja
in
in
xchg
repz
cltd
mov
mov
mov
mov
mov
lcall
or
mov
ja,pn
decl
decb
sub
subb
and
xchg
adc
outsb
stos
shll
scas
out
adcl
mov
pop
into
mov
lcall
stc
mov
xor
jnp
testl
inc
ljmp
jle
xor
cmp
sbb
aas
movsb
out
mov
xchg
mov
pushl
enter
clc
xor
lock
xor
jge
icebp
or
cld
mov
lea
inc
lret
push
cmpsl
fbstp
shl
mov
outsb
push
add
pop
scas
pop
xor
lcall
ja
dec
imul
out
mov
mov
fildll
cmp
call
or
std
push
sbb
imul
lahf
adc
lret
jmp
insl
dec
cmc
dec
jo
enter
jns
lods
lds
pushl
add
cmp
or
jb
out
jne
fcompl
pusha
or
icebp
lcall
push
les
adc
insl
jo
sbb
ret
int
dec
lea
pusha
sti
rcrb
jmp
jne
out
fisttpl
ret
stc
insb
adc
mov
sahf
ror
jge
movswl
lcall
pop
fmul
stos
scas
push
adc
shll
pop
dec
sub
jnp
mov
stos
pop
jbe
push
mov
add
dec
inc
out
les
jnp
mov
adc
scas
call
add
mov
xchg
xchg
cmp
mov
insb
jbe
rolb
jo
add
lock
cmp
inc
cmp
cs
cmpsl
loop
sbb
daa
mov
mov
pop
inc
cmc
xchg
inc
or
in
je
adc
lock
xlat
dec
insl
adc
xchg
push
dec
sub
dec
out
movsl
dec
gs
mov
ljmp
push
push
xchg
les
mov
rorb
loop
mov
and
cmp
jg
in
jecxz
xchg
pushf
pop
jnp
fsubs
mov
xor
incl
or
js
lahf
dec
sbb
dec
pop
clc
insb
data16
mov
je
mov
dec
cmp
rolb
jge
push
popf
enter
add
clc
or
dec
lods
les
decl
and
call
fcom
sub
pop
in
outsl
call
popf
push
add
push
aam
push
dec
mov
loop
loop
or
incl
cmp
imul
pop
testl
xchg
aas
out
mov
xchg
scas
and
lods
or
push
in
xchg
sbb
xor
sbb
mov
jle
inc
pop
call
sbb
push
lock
sub
dec
pop
pop
mov
pop
clc
jmp
adcl
cmp
repz
mov
pop
push
fdivs
mov
adc
notb
mov
daa
pushl
outsb
sbb
xchg
lahf
addr16
xchg
xchg
xchg
cmpsl
mov
aad
fwait
push
xchg
pop
adc
xchg
add
mov
in
cld
fisttps
data16
jmp
sahf
stos
add
decl
mov
cmp
pop
out
rorb
mov
sarb
xchg
xchg
fisubl
mov
repz
jb
cmp
ficompl
or
mov
jle
data16
and
lret
call
je
adc
adc
fdivr
mov
cld
sbb
dec
xlat
insb
sub
scas
aaa
xchg
lods
mov
inc
std
mov
mov
mov
mov
mov
mov
cmp
mov
sub
xor
rol
lret
push
xor
js
call
mov
xchg
leave
scas
inc
inc
jne
sub
mov
test
mov
fwait
pushl
add
push
mov
pop
add
mov
adc
push
cld
dec
add
jmp
push
or
fidivs
stos
mov
pop
iret
mov
in
mov
sub
bound
pop
push
pop
add
ljmp
inc
mov
mov
mov
sub
mov
outsl
sub
adc
out
sub
add
or
cmpsb
and
stc
mov
clc
arpl
and
cmpb
cwtl
daa
lock
mov
outsb
sbb
dec
stos
stos
dec
lea
popf
add
cmp
or
mov
decl
sub
mov
lret
mov
push
call
test
push
pop
cmp
addr16
jbe
mov
pop
int3
mov
push
jmp
mov
sub
adc
loopne
lret
sbb
dec
sub
pop
adc
js
mov
add
js
xlat
or
mov
das
xchg
rolb
nop
pop
or
jmp
mov
dec
fisttpll
mov
mov
aam
push
add
insl
shlb
mov
xor
push
adc
mov
xchg
lcall
adc
std
call
rcl
xor
lods
and
and
sahf
mov
incl
mov
jmp
adc
imul
in
aam
xlat
push
mov
cmp
add
test
inc
lret
xlat
mov
cmp
inc
std
xor
push
out
jno
pop
aad
in
or
dec
or
imul
lds
jbe
add
aaa
add
add
sub
jle
push
cmp
jg
lock
mov
out
ret
jnp
sbb
test
stos
mov
and
addb
in
push
rorb
push
jecxz
cmp
inc
inc
xchg
cmovo
std
pop
inc
aaa
movsb
jp
jbe
fcoml
es
aaa
pushf
inc
fld
cmp
stc
add
std
outsb
mov
lea
pushl
push
pop
ss
cld
scas
jno
jl
shl
cmp
out
fstl
mov
push
cld
mov
xchg
iret
adc
inc
and
mov
shl
pop
fwait
push
dec
subb
cld
ljmp
push
mov
adc
cli
xor
mov
pushf
imul
lret
xchg
popa
mov
jge
sub
stos
push
push
pop
movsb
jno
mov
xchg
mov
test
pop
cmp
jno
call
xorl
adc
mov
fdivs
cmp
aad
fcmovnu
sbb
movsb
xor
decl
test
mov
push
shll
pushf
push
sahf
adc
stos
pusha
call
inc
jnp
xlat
cli
loop
movsl
pop
xchg
sbb
jecxz
repnz
mov
xchg
jmp
push
iret
push
or
add
jp
outsb
xchg
dec
mov
daa
mov
aas
enter
fisttpll
fwait
and
cmc
insl
icebp
jg
incl
aaa
ljmp
adc
push
pop
shl
lods
test
sbb
ljmp
std
sbb
push
sti
xor
mov
insl
xor
cmp
sub
pop
adc
pop
icebp
ljmp
out
cs
mov
xchg
int3
push
inc
jo
outsl
pushf
xor
jmp
icebp
clc
and
add
mov
jp
and
adc
pop
or
sub
cmp
aas
fninit
mov
ret
int
das
pop
mov
into
in
fisubrl
push
mov
adc
leave
cmpl
cltd
inc
and
adc
adc
add
sti
mov
xorl
ljmp
bound
inc
aam
arpl
inc
pop
aas
mov
arpl
cs
xor
addl
das
sbb
lods
lds
imul
push
jno
add
jb
call
inc
jbe
xor
ss
je
xchg
data16
push
push
add
cmpsl
inc
test
dec
pushl
ss
sub
dec
xchg
inc
dec
xchg
xor
push
cmp
pop
sub
pushl
push
enter
mov
fprem
or
ss
jl
decl
xchg
fistl
popf
pop
push
jae
dec
hlt
jo
cltd
leave
sub
cmp
push
jp
push
adc
arpl
bound
cwtl
out
insb
nop
mov
cmc
jne
xorb
jmp
repnz
inc
or
push
imul
cld
dec
push
fstl
mov
insb
mov
or
push
es
lcall
fldln2
dec
add
leave
inc
mov
xchg
ljmp
push
or
arpl
xor
cmpsl
pcmpeqd
jmp
aad
insl
pusha
pop
cmpsl
jle
jb
mov
scas
dec
insb
push
add
repnz
xchg
std
repz
dec
mov
or
mov
push
loop
movsl
and
adc
dec
sar
lcall
testl
mov
mov
xchg
or
loopne
xchg
push
ljmp
cmp
out
into
mov
js
mov
or
out
fcoml
push
mov
out
testb
jae
jmp
insl
movsl
push
data16
cltd
imul
xchg
pop
mov
sub
push
or
sahf
ljmp
dec
xchg
scas
int3
imul
push
or
adc
cmpsb
stos
mov
push
popf
das
cmpsb
mov
mov
mov
adc
pop
jnp
sti
enter
add
push
arpl
mov
xchg
dec
dec
pop
sbb
xlat
in
or
xchg
xchg
adc
mov
fildll
decl
nop
jbe
adc
out
add
dec
mov
and
xor
popa
sar
dec
es
pop
int
rolb
mov
jg
push
mov
xor
mov
fldt
mov
jae
dec
xchg
jns
adc
xchg
and
dec
jge
insb
mov
divb
repnz
xchg
out
dec
push
push
jecxz
sub
jmp
aaa
or
call
xor
adc
sbb
push
jle
add
pushl
or
pop
pusha
mov
out
fucomi
cmp
and
inc
into
fld
pop
imul
inc
jmp
lcall
mov
mov
mov
lds
mov
xchg
mov
decl
enter
cmp
xchg
adc
sbb
mov
dec
mov
xor
pushl
lea
jae
sbb
aaa
jmp
bound
jp
cmp
movsl
insb
clc
fimull
and
decl
push
fildll
mov
arpl
cmpsl
pushf
cmpsb
jmp
add
insl
in
sub
or
loope
mov
fidivrl
je
xor
mov
cs
lea
pop
mov
mov
sbb
push
sub
xchg
das
cmp
mov
push
fstpl
or
insl
xor
cld
rcl
jmp
jg
imul
xchg
scas
out
bound
inc
jecxz
and
jmp
fwait
lds
test
or
insb
mov
xchg
fildll
sub
pop
inc
inc
lods
pop
add
or
les
jg
call
dec
adc
mov
ljmp
cmpsl
sub
lret
mov
call
ror
sub
movsb
pop
cmp
xchg
sub
jnp
mov
mov
jmp
pop
addr16
mov
push
mov
nop
adc
jg
sbb
inc
mov
ljmp
jmp
mov
js
push
ja
cmp
mov
test
ja
incl
fs
sbb
add
fdivrl
or
das
adc
push
aas
lea
pop
dec
popf
mov
xor
mov
enter
jg
xor
fstp
jg
lock
call
cmpsb
xchg
loopne
xor
hlt
mov
cmc
call
cwtl
mov
or
incl
cltd
iret
mov
in
mov
xchg
insb
loopne
mov
sub
mov
ret
cmp
mov
adc
imul
jmp
mov
xor
mov
and
mov
and
dec
adc
or
push
fwait
push
sbb
mov
daa
cmc
int3
daa
inc
adc
and
imul
jg
jmp
pop
out
jne
mov
or
add
popa
mov
xchg
mov
addr16
in
inc
sub
xchg
es
popf
lock
call
xor
xchg
daa
sub
sbb
lods
cmp
push
xchg
lret
outsb
nop
loopne
add
add
incl
xor
pop
out
cwtl
fsubrs
mov
mov
test
cld
and
je
in
ljmp
ja
push
push
popa
push
cmp
cmp
mov
pop
scas
push
inc
sub
mov
mov
push
cld
jg
or
sbb
ret
je
cltd
inc
dec
mov
mov
shr
push
fbld
movsb
push
std
call
lret
lcall
xchg
stos
je
pop
mov
mov
aam
rcrl
decl
xchg
xor
dec
mov
pop
loopne
mov
mov
ror
pop
sbb
or
pop
test
incl
push
adc
cmp
adc
aas
pop
and
stos
cmp
jle
shlb
imul
mov
cmpsl
mov
mov
adc
pop
inc
fdivl
les
mov
testl
adc
jnp
std
icebp
or
cmp
loope
insl
mov
xchg
out
clc
sbb
jnp
cltd
or
dec
cmpsb
int3
or
gs
jmp
push
push
jb
rcll
sahf
aad
arpl
nop
xor
test
adc
sbb
ljmp
push
test
loope
arpl
and
cmp
call
lcall
decl
movsb
in
movl
mov
xlat
jae
es
inc
imul
nop
dec
xchg
dec
scas
stos
adc
test
and
dec
dec
mov
ljmp
push
aaa
std
call
cld
lcall
xor
imull
push
sub
lretw
mov
ret
inc
iret
or
das
fs
adc
inc
jg
mov
sub
seta
andb
popf
jno
popf
jns
adc
xchg
ds
in
mov
and
shl
scas
mov
incl
xor
jle
sbb
ret
notl
data16
jg
or
xchg
pusha
jle
sbb
push
stos
sbb
nop
icebp
mov
pushl
adc
xchg
lret
outsl
ret
inc
add
mov
in
ret
mov
lret
push
fistpl
mov
je
in
out
and
sbb
test
mov
cmp
repz
xlat
out
pop
cmpsb
dec
lret
adc
aaa
adc
jl
pop
push
js
shlb
aaa
mov
mov
adc
out
pop
fcmovnbe
pop
and
incl
lcall
int3
jle
mov
xchg
addr16
mov
inc
ss
fwait
dec
pushf
sbb
leave
mov
jp
loopne
int
pushf
popa
cmp
xor
pushl
pop
mov
dec
cmp
xor
dec
inc
sub
push
ret
jg
add
fldenv
jmp
or
xchg
mov
cmpsb
sub
les
fcomip
jg
rolb
leave
mov
dec
sub
and
sbb
and
clc
dec
push
in
sar
mov
cltd
dec
cmp
ss
cmpsl
lock
pushl
mov
add
shll
pushl
cli
neg
jno
out
xchg
fldenv
aaa
ret
ljmp
enter
cmp
jge
dec
lds
incl
loopne
adc
dec
stc
xchg
add
xchg
mov
vcvtpd2dqy
pop
ljmp
mov
stos
push
adcb
mov
std
xchg
scas
lcall
fs
out
xchg
pop
cmp
inc
jp
hlt
insl
movsl
mov
lcall
dec
sub
jns
push
out
jle
orl
fnstenv
leave
data16
call
inc
aas
sub
clc
sbb
cwtl
pop
add
fwait
stc
jo
arpl
dec
cmpsl
cmp
lret
push
lods
daa
xchg
pop
pop
mov
xchg
lahf
push
mov
or
xchg
movsl
push
xchg
or
cld
sub
cmpsb
jecxz
cmp
push
lcall
dec
dec
or
pop
pop
sbb
lock
mov
fildll
inc
sub
pushl
outsb
call
jb
into
adc
movsl
add
rcrl
xchg
into
mov
int
mov
call
clc
arpl
fldt
xor
mov
or
cmc
mov
push
add
jmp
int
mov
imul
aad
jne
mov
mov
add
xchg
add
jp
cwtl
adc
rcll
ja
incl
and
in
inc
repz
sub
push
lock
push
fsubl
jns
lcall
jbe
xchg
nop
jnp
push
push
icebp
aaa
jl
cmp
xor
leave
jns
jecxz
lods
mov
call
lahf
fistl
mov
xchg
mov
call
sahf
fsubs
popa
js
adc
xchg
out
jl
lods
imull
jno
cltd
push
scas
call
mov
loopne
mov
push
sti
out
jne
cwtl
mov
jmp
fnstsw
lcall
test
lahf
popa
jge
mov
ja
mov
push
gs
pushl
popa
jp
push
add
loopne
add
sbb
into
xchg
sub
push
lcall
test
inc
dec
or
das
cltd
pushf
shrb
mov
or
lods
insb
xlat
nop
mov
cmpsl
sbb
pop
ljmp
xor
add
push
mov
dec
jbe
push
pusha
in
mov
mov
fisubrs
sbb
sub
lock
dec
sahf
sbb
in
decl
fldt
adc
mov
inc
and
pushl
and
dec
xor
cltd
xorl
mov
xchg
in
add
lret
jg
popf
gs
lcall
jmp
mov
pop
mov
xchg
inc
and
sbb
inc
xor
push
cmp
inc
inc
dec
cmc
sbb
incl
pop
xor
idivl
jp
sub
lcall
cli
inc
jno
mov
aad
or
sti
and
and
cmp
cmp
fdivr
fcoms
push
sbb
shrb
add
sbb
or
cmp
cmp
mov
mov
filds
ret
dec
sub
lahf
mov
mov
push
xor
jno
dec
sbb
sbb
in
dec
and
and
mov
and
ja
dec
pop
ss
jno
jb
mov
out
mov
xchg
icebp
jo
mov
sbb
xchg
repz
ret
or
and
fldcw
inc
incl
adc
fld
subl
mov
movsl
and
shlb
int3
shl
inc
dec
xor
icebp
jmp
repnz
jno
mov
cltd
mov
rolb
incl
es
dec
fs
in
sbbb
jb
cmp
xor
call
ss
scas
mov
and
mov
push
sbb
mov
aaa
std
mov
sbb
push
sub
fidivrs
mov
ss
incl
and
clc
mov
jp
pop
mov
adc
mov
fdivrl
nop
jae
cli
cmp
js
and
loopne
test
sti
jg
aaa
test
push
xor
pop
lods
dec
pop
sub
jmp
lods
cmc
ljmp
jge
stos
dec
push
stos
fstp
sar
in
xor
push
xor
fcomip
jo
push
push
jp
imul
dec
lret
movsb
sbb
adc
jo
loope
shl
decl
leave
mov
dec
inc
xchg
int
enter
sbb
add
lcall
ja
insb
push
pop
cmp
scas
xchg
mov
ret
add
addb
lcall
sbb
test
or
les
pop
lds
adc
popa
mov
mov
repnz
push
xor
nop
je
mov
lcall
fidivl
repz
cmc
mov
hlt
and
dec
mov
jl
movsb
outsb
adc
adc
ret
add
jmp
cs
xchg
xor
jo
loopne
aad
adc
add
stos
add
idivb
std
adc
incl
mov
daa
dec
in
fptan
cmpsl
dec
pop
popf
mov
lea
adc
fistps
dec
rcl
and
pop
push
es
pop
sarb
jo
adc
jmp
push
sbb
xlat
das
fs
nop
ret
repnz
pushl
outsb
xor
hlt
sti
fbld
popf
pop
insb
mov
cmp
push
xchg
mov
or
test
mov
ljmp
jl
lret
fdecstp
push
sub
xor
xor
dec
repnz
dec
lea
pop
or
push
nop
mov
test
adc
sarl
jmp
aad
jl
inc
mov
out
jg
mov
dec
jb
stos
jl
jmp
xor
mov
aaa
leave
pop
out
scas
or
adc
cs
repz
into
test
les
push
mov
jnp
andl
push
and
pop
cmp
cwtl
mov
bound
out
cmc
jp
shll
jne
incl
push
dec
subb
das
xchg
iret
cmpsl
and
movsb
scas
mov
mov
nop
adc
adc
xchg
mov
sbb
xchg
adc
lcall
push
adc
push
leave
sub
xchg
cwtl
ret
dec
stos
mov
mov
pop
pop
push
cmpsl
imul
ja
xor
ret
sub
or
inc
xor
mov
pop
push
movsl
stos
dec
adc
pop
das
push
aam
ljmp
fnstsw
pop
lods
bound
push
sub
sbb
dec
adc
pop
mov
jl
incl
out
mov
inc
mov
clc
sbb
ljmp
aas
fsubrl
popf
mov
subl
push
sahf
in
dec
jp
popf
mov
cmp
adc
mov
ficomps
inc
sahf
mov
cmp
ljmp
pop
repz
jbe
rcrl
rol
popaw
pusha
inc
mov
adc
cmc
mov
jecxz
call
aaa
add
xchg
sub
pop
pusha
movsl
and
and
fldpi
adc
lods
lcall
cmc
stc
xor
xchg
call
stc
or
adc
mov
push
mov
xlat
orb
push
sbb
adc
jne
repz
mov
imul
xchg
mov
mov
xor
repnz
incl
jo
pop
cmpl
jg
jbe
cmp
stc
push
push
rorl
sbb
lret
lcall
or
pop
xor
fmuls
popf
adc
xchg
in
les
dec
sti
inc
cmpsl
sbb
lcall
jb
and
mov
xchg
gs
adc
enter
test
ljmp
sbb
jns
push
out
xor
fldenv
pop
push
pop
fwait
mov
cmpsb
pushl
adc
add
arpl
pop
push
incl
loopne
jecxz
shrl
dec
and
xor
and
jmp
movsb
sbb
das
clc
mov
jl
add
mov
testb
sbb
loop
cmpsb
mov
ljmp
adc
jns
sbb
jmp
cmp
fwait
popa
inc
and
cmp
cmp
add
xchg
jmp
push
push
call
mov
cmp
jg
in
and
aad
xchg
lds
jne
test
nop
in
stc
into
cmpsl
cmpsb
cmp
inc
mov
pop
xlat
jecxz
adc
ljmp
lds
js
shlb
pop
fdivrl
adc
mov
idiv
pushl
adc
push
popa
push
out
icebp
add
xchg
fmuls
add
das
clc
dec
lret
add
pop
xor
test
int
jb
push
lods
repnz
xor
decl
call
scas
sarb
es
fldlg2
subb
nop
fmuls
sarl
decl
and
fcoml
lcall
ret
iret
out
lret
mov
decl
stos
jnp
jle
insb
inc
gs
push
mov
sbb
aam
jg
jns
jno
jnp
ds
imul
cmp
fiaddl
repz
pslld
xor
adc
into
out
push
jmp
lods
lret
adc
mov
imul
das
rcrb
mov
pop
movsl
addb
std
ljmp
lods
pmulhw
fisttpl
loope
rcrl
inc
xor
daa
jns
add
inc
idiv
fs
aam
add
mov
incl
add
mov
sbb
test
jmp
adc
adc
daa
push
and
jnp
sub
push
sub
or
dec
pop
sbb
cld
cmp
cmp
xchg
mov
lds
test
cli
js
mov
ret
pushl
push
enter
cmp
jne
mov
enter
lods
les
jmp
mov
lar
testl
repnz
setnp
xchg
fwait
mov
jmp
pushf
lea
pop
mov
data16
sub
inc
mov
fldenv
outsl
mov
clc
mov
jb
xlat
push
sbb
sbb
sbb
inc
or
aaa
sub
aas
out
sbb
jmp
dec
adc
pop
or
call
or
jmp
pusha
or
add
jnp
jnp
mov
loop
jnp
and
negl
mov
dec
mov
outsl
or
lcall
xchg
dec
mov
or
cmp
ret
jae
das
scas
sbb
cwtl
mov
lret
or
adc
cld
mov
cs
and
insl
out
push
out
sahf
inc
xor
inc
jns
add
pushl
loope
outsl
out
adc
fcoml
xchg
or
push
inc
xor
jb
sub
orb
mov
dec
inc
shrl
jae
jnp
ljmp
add
adc
or
addb
je
arpl
and
lcall
das
enter
cmp
xor
and
daa
or
push
cmp
loope
aam
push
lock
hlt
cli
in
cmp
iret
mov
lods
mov
call
dec
les
cmp
cmpl
cmpsl
test
loop
cltd
inc
adc
or
push
jle
lds
stos
popa
addb
push
adc
cmp
cmp
daa
call
jmp
sbb
jp
mov
stos
mov
loope
icebp
mov
jmp
aam
dec
inc
xchg
loop
cld
out
mov
jmp
out
mov
loopne
or
cmp
pop
pop
ljmp
bound
sbb
jne
adc
insl
sbb
fldt
pop
xchg
jno
lcall
adc
mov
test
mov
cmp
in
inc
xor
shlb
lret
in
lcall
mov
mov
cs
stc
pop
shr
cwtl
lea
mov
inc
xor
cmc
stos
pushf
pop
cli
or
jl
push
outsl
inc
xor
fwait
sbb
aad
mov
adc
push
cmp
fdivl
mov
push
scas
addr16
inc
xor
pop
sti
jp
push
test
and
mov
add
mov
pop
mov
jg
jg
jmp
sub
pop
je
decl
dec
inc
clc
mov
iret
jns
mov
aam
mov
cmc
ljmp
ds
xchg
push
dec
push
js
xchg
call
sub
es
aas
fcomip
call
andb
dec
fldt
add
push
subl
pop
std
jmp
mov
mov
and
cs
out
loop
mov
lcall
les
cmp
adc
pop
sbb
push
sbb
add
inc
xlat
popf
mov
xchg
popa
aam
push
int3
push
mov
imul
ret
dec
mov
stos
les
in
ljmp
adc
std
pop
outsl
shll
roll
ja
fdivs
jge
or
decl
cmp
scas
jno
lods
push
pop
insb
pop
fstps
inc
je
push
dec
js
idivb
jbe
lcall
mov
sti
lahf
sub
rcl
addr16
popf
sar
jmp
ljmp
push
mov
cmp
inc
mov
repnz
xchg
icebp
ljmp
jl
xchg
sub
mov
dec
push
ret
mov
add
pop
and
insb
cmovne
in
mov
xchg
pop
xchg
pop
mov
in
push
movsb
test
mov
idiv
fcomip
rcrb
lods
xor
dec
fimuls
mov
jp
cmpsb
push
push
pushl
outsl
xchg
lock
stc
push
cs
pop
push
inc
lods
cltd
pusha
jecxz
or
jno
stos
jo
enter
or
sbb
in
mov
cwtl
cwtl
mov
jb
mov
aaa
mov
mov
xchg
dec
testl
into
push
cmpl
mov
aam
fwait
jns
xchg
jp
xor
cmp
lock
sub
push
dec
loop
push
adc
pop
rorb
out
mov
std
insl
aam
scas
adc
mov
mov
xor
add
add
scas
sti
inc
xor
out
mov
mov
and
repz
push
pop
test
call
sub
ficoml
inc
inc
mov
loopne
dec
xor
incl
fildll
pop
andb
lret
inc
jns
bound
loope
lcall
mov
sbb
jp
push
cmp
sub
lock
in
pop
cmc
xor
xchg
push
fidivrl
js
mov
or
data16
test
mov
pop
inc
cmp
int3
enter
cmp
aaa
cld
cmpb
fcom
inc
or
push
cmp
mov
cli
stos
xchg
add
sbb
mov
fcmovnbe
xchg
cwtl
stos
push
rorb
mov
stc
push
lcall
bound
jnp
adc
push
fists
mov
ljmp
ja
inc
leave
xor
iret
les
faddp
les
fnstsw
je
stc
jns
adc
cmp
incl
push
iret
jp
test
std
lcall
call
leave
das
push
fiadds
rorl
cld
hlt
jg
aad
cmp
loope
cmp
mov
mov
bound
mov
inc
inc
ljmp
rorl
lods
push
push
push
push
adc
push
popa
inc
xor
adc
popw
andb
cmp
push
stos
push
adc
mov
lret
mov
dec
cli
loope
rol
sbb
and
xor
mov
clc
hlt
int
sbb
mov
repnz
sarl
cwtl
out
out
or
and
mov
jl
shlb
cli
cmc
mov
mov
shlb
sub
inc
or
xlat
cs
fcoml
push
ror
lock
jg
sar
fcmovnu
pop
dec
and
add
rcr
jns
clc
mov
push
hlt
pop
or
loop
out
sahf
mov
pushf
mov
out
clc
mov
pop
icebp
and
stos
mov
xchg
fs
lock
add
rorb
jne
mov
les
push
add
xchg
jae
sub
pop
inc
cld
ljmp
adc
sahf
sub
dec
out
push
out
jg
aas
push
jno
fucomip
fwait
sbb
lods
in
mov
xor
mov
adc
scas
ljmp
ja
mov
adc
sub
jae
inc
fldt
xor
outsl
aaa
xchg
push
push
lds
gs
add
imul
jmp
cmp
sbb
inc
shrl
retw
mov
add
arpl
sub
push
lret
sar
call
inc
cwtl
popf
jbe
ja
cmp
insb
jmp
loop
leave
movsb
fwait
je
cmp
or
jg
add
pop
std
js
sbb
sahf
lcall
push
repnz
test
dec
inc
mov
js
ja
mov
movsb
out
out
fwait
inc
adc
les
jp
jne
inc
mov
bound
push
sub
ja
mov
mov
add
imul
xchg
pop
fsts
cmp
jmp
dec
and
clc
in
xor
out
rcrl
sbb
int
push
icebp
or
and
popf
mov
mov
mov
sbb
or
push
sarl
call
movsl
mov
repz
fistps
or
int
pop
test
jnp
je
mov
sahf
or
sbb
cmp
test
aas
scas
mov
dec
fcompl
jmp
cmp
rclb
xor
repz
xor
fdiv
shlw
xchg
cmp
in
dec
mov
mov
insb
out
jb
adc
mov
dec
cmpb
mov
dec
outsl
out
mov
stos
popf
ds
call
ret
adc
jae
push
mov
mov
cld
pop
sbb
xorb
aaa
adc
inc
xor
in
xor
sub
mov
in
aam
aaa
nop
test
cli
popa
inc
fnstenv
push
mov
add
xchg
sarl
mov
pushl
clc
xchg
addr16
mov
nop
outsl
popf
ljmp
fildl
xorb
push
push
and
xlat
pop
insl
jg
xchg
or
cmpsb
ljmp
js
arpl
jo
push
loop
cmp
decl
pusha
lret
das
pop
js
sbb
mov
int3
in
pop
clc
movsb
cwtl
xor
dec
leave
xchg
jmp
mov
decl
stos
es
mulb
mov
das
xchg
scas
cli
sti
mov
pop
gs
incl
sbb
cs
decb
cli
outsb
imul
cmc
push
lahf
lcall
ficompl
or
or
add
jg,pt
jb
pop
and
pop
push
mov
dec
int3
lcall
xor
jns
in
fbld
mov
adc
dec
iret
std
test
mov
incl
and
xchg
fildll
icebp
push
xchg
pop
sarb
xchg
xchg
enter
push
pushf
mov
xchg
stc
imul
call
jmp
sbb
mov
daa
mov
repz
test
cwtl
push
movsb
out
xor
mov
decl
xchg
sub
and
fwait
test
dec
std
push
lret
stc
xor
aam
loop
xor
mov
jno
push
adc
fwait
pop
jg
mov
cmp
and
xchg
mov
push
inc
adc
cmp
shll
sbb
adc
mov
mov
mov
or
xor
insb
in
add
push
jbe
mov
xor
push
pop
mov
mov
mov
cli
bound
ja
sbb
lcall
add
jle
jno
jl
and
jb
xchg
jo
ffreep
aam
sbb
pushl
inc
stos
dec
adc
sbb
es
int
rcrb
mov
pop
mov
jae
ret
push
hlt
lds
das
add
fwait
pop
xor
xchg
leave
push
pop
incl
enter
mov
jno
push
jg
ljmp
fcomps
mov
insb
xor
pop
test
fdivrs
and
sbb
adc
inc
outsl
inc
xchg
jge
mov
sbb
test
sub
inc
or
insb
jmp
mov
sbb
in
sahf
cmp
fmulp
lds
or
fildll
test
in
mov
cmpsl
sbb
and
or
sbb
cmp
jg
bound
popf
add
scas
push
push
shrb
mov
call
adc
mov
push
test
inc
xchg
mov
jb
out
push
std
test
sbb
bound
cwtl
ljmp
int
push
daa
clc
das
mov
aaa
pop
movsl
and
dec
cmp
jo
jmp
mov
jle
add
out
xor
rcrl
call
sub
out
pop
roll
movsl
lret
in
fadds
dec
pusha
add
jp
mov
pushl
in
pop
mov
dec
dec
punpckhwd
leave
pop
or
jp
push
inc
or
lcall
inc
push
mov
sbb
int3
mov
stc
mov
adc
ljmp
lahf
xchg
pop
sub
xlat
pop
xor
or
cmp
call
sahf
sub
fiaddl
push
lea
aad
decb
lods
mov
sahf
test
inc
inc
mov
push
xchg
ljmp
cmp
jg
mov
mov
stc
test
call
out
incb
xchg
sti
sahf
xor
pop
add
fsubrl
add
push
lods
pushf
xchg
jecxz
nop
lea
js
xor
lods
pop
inc
lods
sbb
adcb
ret
fs
jmp
icebp
pop
inc
push
imulb
out
fcomps
pop
in
jmp
out
mov
pushl
cmp
shl
xchg
imul
shl
sbb
shlb
add
out
cmp
outsl
loope
xchg
fimuls
call
mov
mov
leave
mov
dec
add
mov
lods
pop
shl
sar
decl
je
mov
lcall
mov
outsb
out
pop
pushl
js
ss
and
es
arpl
or
test
dec
dec
fidivl
scas
dec
or
xchg
xchg
aas
jns
xchg
mov
add
int3
scas
arpl
insl
add
ss
decl
popa
cld
xchg
jae
faddl
cltd
pop
std
jbe
movsl
sti
sbb
push
cmpsb
cmp
xchg
adc
sbb
mov
fdivs
and
xchg
mov
pop
inc
ja
lods
push
aaa
icebp
cmp
std
xchg
aad
lock
mov
out
mov
dec
out
jmp
jp
clc
nop
jbe
cmp
cmc
or
cmpb
mov
jg
inc
add
dec
inc
mov
mov
sub
std
jge
or
inc
outsb
cmp
push
inc
shl
aam
mov
push
or
decl
adc
mov
cmp
cmp
jge
pushf
sbb
sub
adc
dec
movsl
sub
jmp
ret
push
test
mov
push
in
stos
sbb
iret
xlat
push
jae
repz
jmp
decb
cld
or
imul
push
and
adc
jg
jge
sub
js
pop
sbb
jne
pop
adc
ja
jno
jno
push
mov
xorl
ljmp
insl
or
outsb
and
jo
and
push
and
orb
enter
arpl
jmp
imul
dec
decl
cli
rclb
ret
call
aaa
mov
ret
or
mov
sbb
decb
mov
cmp
ljmp
push
mov
inc
jno
ds
je
arpl
add
add
sub
iret
inc
movsb
or
and
push
decl
xchg
cld
and
lock
das
mov
mov
sti
rorb
out
lea
mov
pop
adc
lcall
adc
aam
icebp
lcall
mov
lods
mov
jl
sbb
sub
popf
pop
sbb
pushl
shlb
jl
xchg
cmp
movsb
ret
mov
ljmp
mov
or
sub
icebp
xchg
aad
ja
and
xchg
lahf
lcall
push
or
push
xchg
sarl
sbb
ficoml
push
pop
mov
push
cmpsb
push
mov
pop
mov
lcall
dec
iret
add
add
popa
pop
xor
movsb
dec
sbb
adc
mov
jle
jle
in
cmp
bound
and
adc
or
cmpsl
add
gs
jno
cli
fimull
jp
lcall
sar
adc
add
out
jb
rcrb
popa
std
movsb
call
pop
sbb
mov
shr
or
adc
or
das
push
mov
sub
movsl
inc
push
push
pop
notl
mov
sbb
rep
inc
icebp
mov
cwtl
dec
mov
pop
movsl
decl
into
mov
out
outsb
mov
idivb
in
push
fbld
incl
scas
out
sbb
pop
inc
or
popf
mov
call
push
jmp
pop
add
int3
mov
aas
cmp
jmp
mov
dec
xor
push
std
lret
inc
xor
call
push
fdivl
imul
das
push
addr16
inc
loope
in
lods
test
decl
inc
adc
jl
add
dec
out
cli
rorl
add
pop
mov
sahf
test
jl
ds
or
shll
ret
sub
sbb
movsl
fbld
incl
imul
addb
mov
popa
mov
mov
rcrb
push
cwtl
jno
jae
adc
cli
jl
aad
jg
push
out
fsubr
xchg
pop
sti
negl
pop
adc
pushl
push
fdivrs
jge
mov
sbb
and
filds
inc
faddl
mov
addr16
ss
xlat
xchg
mov
xor
test
and
dec
mov
cmp
decl
mov
jb
inc
jbe
popa
bound
push
push
push
loope
leave
sbb
dec
ja
add
sub
mov
cwtl
mov
leave
sarb
mov
cltd
cmp
sbb
push
xor
inc
rorl
cmp
lds
idivb
shlb
sarb
mov
cmc
daa
mov
jmp
das
mov
xchg
fcomip
popa
mov
mov
add
push
lcall
das
add
sbb
or
neg
add
aam
sub
dec
leave
daa
in
mov
shrb
pusha
stc
adc
add
jb
pop
in
sub
loope
out
lcall
push
inc
mov
mov
sahf
dec
insb
icebp
mov
roll
ffreep
adcb
lcall
inc
mov
ret
mov
aam
xchg
push
push
repnz
aad
push
fistps
fxtract
xchg
sbb
xchg
add
xchg
jno
lods
iret
movsl
sahf
cmp
xchg
adc
mov
pop
aad
js
cmove
jb
ljmp
sarl
test
xchg
bound
or
in
rcrb
pusha
fsubl
and
add
aad
lret
decl
ret
ret
mov
aas
iret
push
test
jmp
fimull
lret
push
aad
push
loope
pushl
fcoms
jmp
outsb
sbb
lock
inc
lcall
mov
pop
adc
imul
inc
push
shrb
dec
adc
pushl
mov
or
dec
mov
loope
dec
inc
test
aas
subb
fisttps
je
adc
jmp
mov
mov
mov
xchg
push
pushf
les
mov
rclb
sub
sub
in
adc
and
jmp
shlb
pop
out
cld
lea
testl
push
jmp
in
push
push
xchg
mov
xchg
out
or
inc
inc
mov
das
fistps
hlt
daa
lcall
mov
pop
or
mov
mov
in
inc
dec
adc
jno
mov
loop
insl
in
dec
call
stos
dec
sub
inc
mov
or
arpl
lret
jg
push
inc
push
sub
push
or
ret
outsb
addb
pusha
push
mov
call
add
and
in
sti
sbb
add
je
daa
inc
daa
jb
jg
cmp
push
repnz
and
pop
jb
clc
mov
cmpsb
mov
cli
call
xchg
pop
push
fcomps
xor
fildll
call
test
ljmp
xor
dec
mov
mov
pop
adc
jg
ret
test
cmp
sub
mov
pop
mov
loop
in
stc
jl
cld
pushl
fcompl
outsb
cltd
dec
adc
icebp
aaa
arpl
jg
lret
or
adc
inc
test
xchg
rep
int
mov
cs
popa
fidivrl
xchg
push
and
push
cltd
ret
leave
lret
mov
enter
aad
mov
pushf
in
xchg
xchg
jp
repnz
xchg
lret
or
mov
into
std
xchg
je
test
pop
xchg
and
dec
pop
arpl
push
cmp
sbb
jecxz
punpckhdq
add
imul
mov
ljmp
leave
adc
ret
adc
mov
dec
int
pushf
pop
sub
ficompl
ljmp
mov
les
add
out
cs
les
adcb
inc
push
in
movsb
nop
xchg
insb
sarb
pop
dec
cmpsl
adc
hlt
jmp
mov
jmp
pop
cwtd
fidivrs
adc
mov
aas
jns,pn
in
repz
sub
sar
jno
dec
addr16
xorb
mov
mov
sub
fbld
or
adc
aam
mov
aas
fisttpll
decl
pop
push
xchg
add
push
imul
add
and
sbb
sub
out
fcomip
jmp
adc
movsb
or
jmp
xor
sub
push
lock
push
incl
mov
int3
arpl
enter
dec
pop
and
push
or
icebp
jo
cmpb
mov
gs
jae
add
scas
push
mov
add
faddl
pop
add
jbe
cmp
sub
or
popf
fistpl
rcrb
ss
out
cli
call
das
test
andb
sub
mov
fcoml
cmp
jecxz
push
inc
jns
negb
les
xorl
push
sub
repnz
jae
fwait
sbbb
je
mov
pop
pop
shlb
cmp
inc
lea
cmpsb
dec
cs
imul
cmpsl
mov
test
cmp
jmp
ret
push
out
xchg
jne
sahf
jbe
gs
cli
sbb
mul
push
push
test
inc
dec
mov
jbe
mov
outsl
std
fistpl
xchg
scas
jge
enter
out
pop
mov
jo
out
inc
pop
addr16
cmp
pop
jns
mov
mov
pop
cltd
out
arpl
pop
xchg
mov
cmp
sub
in
add
xchg
dec
mov
cs
jle
mov
decl
jmp
sub
gs
pop
lret
shlb
push
sub
fstpl
fdivs
pop
xchg
int
pop
dec
add
and
pop
ja
jnp
cmpsl
aaa
mov
jmp
aad
es
popa
pop
cmp
push
mov
rcl
js
incl
popf
in
inc
mov
lcall
shrb
inc
cmp
lods
sub
lcall
lcall
pushl
inc
mov
iret
ret
mov
decb
cmp
push
aaa
outsl
ljmp
and
mov
repnz
pop
rcrl
lods
je
je
sbb
lcall
push
push
cmpl
loop
adc
xchg
cmc
jo
inc
sbb
mov
mov
lcall
or
and
jne
pop
sub
imul
push
push
sti
sub
sbb
dec
out
sbb
mov
int3
es
jle
inc
std
xchg
add
and
fldenv
xor
add
pop
lret
icebp
lcall
int
cmpb
cmp
push
jmp
and
jg
test
cs
leave
jmp
xchg
cmp
lahf
data16
mov
in
or
cmp
push
in
jbe
cmpsl
fists
mov
rolb
loopne
ljmp
jge
std
lock
leave
out
insb
pop
adc
pop
xadd
xchg
ss
shl
fimuls
mov
and
ds
sub
scas
cli
aad
arpl
push
pop
scas
stc
cmp
sub
lret
out
push
ret
add
xchg
jl
icebp
daa
js
mov
cwtl
adc
outsl
clc
incl
out
jecxz
xchg
and
mov
pop
xchg
sbb
fbld
dec
idiv
lahf
add
fidivs
pop
pushf
js
push
icebp
inc
incl
divb
mov
ror
inc
outsl
lock
clc
pop
shll
cmp
lcall
push
xchg
mov
icebp
lods
scas
add
push
mov
stc
xor
repnz
imul
mov
inc
fdivrl
sbb
or
fiadds
data16
dec
or
xchg
inc
jecxz
mov
lahf
jb
ljmp
mov
pop
mov
push
sub
pushl
add
or
mov
push
mov
cwtl
xchg
mov
stos
jb
insl
jbe
in
dec
push
pop
pop
incl
xchg
push
xor
mov
in
push
loope
js
aaa
and
imul
mov
popa
enter
jne
pop
push
clc
jns
cmp
push
in
sbb
pushl
xchg
int3
sbb
add
mov
push
pop
xlat
out
pop
xor
dec
pushl
mov
pop
push
add
in
imul
mov
pop
add
mov
xchg
int
decl
pop
cmp
xor
dec
ret
jecxz
push
mov
mov
dec
imul
mov
xchg
xor
ret
bound
xchg
xor
pop
adc
outsl
cwtl
mov
push
out
sbb
jecxz
pushf
or
dec
andb
push
imul
inc
push
xchg
lcall
dec
lret
and
icebp
scas
sub
movsb
loop
adc
xchg
gs
sub
enter
pushl
aam
cmp
test
scas
lea
psrlq
jmp
cmp
mov
rorl
xchg
decl
lock
dec
xor
fistpll
sbb
adc
aam
jmp
stos
scas
and
mov
movsb
pop
nop
mov
aas
hlt
bound
jno
ds
pushf
or
cmc
call
lock
cmpsl
adc
cmp
pop
mov
repnz
pop
movsb
js
decl
mull
popf
sti
cltd
decl
in
add
push
xor
mov
jle
dec
lcall
pop
mov
mov
adc
inc
test
lret
bound
jb
mov
and
lahf
ljmp
imul
push
cmpsb
jae
push
insl
fidivrs
inc
lods
cmpsl
nop
dec
das
dec
adc
cli
clc
jne
pop
scas
cltd
pop
push
shr
addr16
je
jg
cmp
dec
fcompl
push
add
scas
push
jge
jae
adcl
js
daa
push
idiv
mov
jae
xlat
enter
sbb
mov
or
mov
std
je
aam
cmp
push
push
pop
dec
cmp
xor
std
xor
sti
fiaddl
push
mov
incl
mov
loopne
sti
lret
adc
out
leave
lds
js
ljmp
sahf
shlb
jae
mov
jecxz
lcall
pusha
rcll
mov
xor
mov
shl
dec
cmp
mov
sti
sub
mov
and
dec
loope
aaa
call
push
jnp
loop
daa
out
cmp
out
pop
in
dec
adc
mov
fwait
jmp
stos
rcrl
dec
or
nop
lods
xchg
into
and
mov
scas
pop
push
into
xchg
or
lods
mov
lcall
in
adc
imul
mov
fidivl
mov
mov
jb
out
mov
mov
out
test
sbb
dec
repnz
mov
jg
call
mov
jnp
mov
pop
jne
xor
push
push
mov
in
mov
xchg
jo
popa
repz
pop
lcall
cwtl
stos
stc
or
cwtl
adc
and
stos
lcall
mov
cltd
sbb
dec
decl
movsl
inc
loop
lods
stos
bound
mov
push
jle
xor
pop
push
or
int3
cmc
mov
dec
or
push
shrb
lcall
or
mov
adc
ret
sbb
scas
enter
fldenv
add
fldt
jne
ret
pop
hlt
jmp
pop
sbb
out
dec
mov
xor
out
sbb
dec
test
push
xor
cld
jl
mov
icebp
mov
mov
addl
ret
test
xchg
stc
je
popf
xchg
sub
into
mov
rol
jg
incl
mov
or
mov
mov
add
out
mov
lcall
clc
push
imul
jne
dec
sub
push
lods
fnsave
pop
jns
pop
pusha
movsb
mov
jle
rcrl
sar
pop
clc
xchg
repz
pop
je
cs
movsb
xor
push
mulb
sub
call
dec
sub
mov
out
xor
xchg
dec
pop
arpl
inc
jnp
mov
cmpb
sbb
mov
lahf
cmp
sub
clc
call
and
mov
fstps
cs
add
cmp
sti
or
rcrl
test
fcoms
mov
ljmp
popf
and
fs
lcall
subl
ja
sbb
mov
das
pushf
fucomp
mov
scas
testb
in
jnp
mov
jmp
jl
push
mov
mov
sbb
dec
push
mov
push
jle
in
pop
movsl
incl
sbb
push
or
push
in
xorb
jns
adc
add
inc
dec
mov
incl
ds
sahf
cmp
stc
into
iret
inc
stos
jb
out
in
xchg
daa
cmp
sti
ret
dec
imulb
in
fdivrl
rorb
xor
jp
sub
cmpsl
fdivr
mov
sbbb
bound
xchg
xchg
and
sahf
lcall
loopne
pop
mov
cmp
pop
fwait
xchg
xor
jae
cmpsb
pop
test
xchg
jnp
gs
sbb
jno
idivb
pop
inc
cs
cld
ljmp
sbb
push
sbb
mov
sub
mov
lahf
dec
mov
imul
or
dec
fidivrs
or
incl
add
insl
mov
sbb
cmp
mov
sub
ret
jg
cmp
and
mov
mov
pop
shrl
lods
add
call
adc
fnstenv
int
lods
push
pushf
push
out
xchg
cli
jg
out
cmp
out
sub
popf
mov
sti
push
dec
clc
add
mov
add
shl
popl
nop
shl
or
js
pop
nop
cmpsl
sbb
pop
orb
and
push
inc
jmp
call
imul
dec
dec
pop
xor
frstor
scas
dec
push
fidivrs
arpl
xor
inc
sub
imul
sub
outsl
adc
push
sbb
pop
insl
in
add
lahf
sub
mov
adc
jg
ret
lods
lret
stc
cmp
sbb
fimuls
sti
xlat
jb
shlb
pop
sbb
in
decl
dec
in
lcall
mov
out
cli
incl
xchg
adc
je
push
cli
test
sarb
ud0
fs
push
jno
jl
pop
jae
dec
push
push
call
das
adc
leave
dec
add
loope
imul
out
data16
dec
add
pop
lret
and
cmp
dec
sub
stos
sbb
push
fstl
out
outsl
cmp
inc
sub
fldt
fldenv
inc
in
xchg
rcrl
loop
inc
ds
lods
repz
sti
adc
xchg
mov
rclb
loopne
inc
or
xchg
mov
movsl
mov
aas
pop
or
outsl
cli
call
mov
cmp
push
loopne
xor
jbe
mov
mov
dec
sub
data16
push
adc
push
inc
adc
xor
and
push
pop
sub
lock
dec
add
jmp
nop
sbbl
pushl
or
xchg
incl
xlat
fwait
es
jp
inc
jne
sbb
test
adc
cs
ljmp
ds
imul
push
adc
inc
cmc
pop
mov
dec
adc
not
sbb
inc
test
jg
lcall
or
ja
cmpsl
and
stos
or
les
or
loopne
dec
jae
fldenv
out
clc
lcall
movsb
rcrl
adc
mov
push
es
lret
mov
cld
addl
pop
and
inc
push
dec
repnz
pop
std
lcall
or
xor
xchg
int
fcompl
push
adc
lock
adc
dec
sub
dec
fcoml
or
push
mov
iret
mov
imul
pushw
push
out
sbb
mov
pop
loopne
jge
adc
sbb
push
cmp
cmp
mov
int3
jbe
decl
pop
mov
push
cwtl
xor
xchg
xor
enter
mov
dec
mov
sub
xor
call
xchg
into
dec
out
repz
stos
idiv
incl
in
je
stc
sbb
flds
lock
das
mov
sbb
ljmp
clc
mov
loop
jge
mov
mov
dec
fwait
lret
xchg
jg
lcall
mov
lock
sub
fidivrs
ljmp
loopne
pushf
xlat
sbb
lock
test
cmp
out
nop
inc
cltd
int3
pop
adc
mov
addr16
cmp
imul
mov
aas
dec
fstl
cmp
call
cmpsb
xchg
jecxz
insb
add
push
mov
dec
xor
std
push
insb
lahf
sub
ja
rorl
jnp
jns
push
cmc
mov
cmpsl
inc
arpl
out
mov
push
pop
jno
jo
jle
repz
cmp
jg
add
pusha
movsl
or
adc
pop
out
jp
dec
clc
decl
dec
dec
push
out
xor
sub
popa
and
jle
pop
mov
outsl
pop
mov
ljmp
or
js
mov
mov
pop
shl
add
mov
dec
test
jle
popa
mov
push
and
scas
lret
sbb
pop
in
mov
loopne
stos
push
into
shl
jb
add
jle
xor
ja
es
push
pop
mov
xor
mov
insl
pop
fsubp
scas
outsl
adc
pop
cld
cmp
int3
das
in
add
outsb
cmpsl
pop
daa
popf
pop
dec
or
push
mov
ret
jecxz
inc
pop
fildll
loope
push
or
push
fildl
push
imul
sub
dec
decl
pop
inc
imul
dec
jecxz
cmc
pop
jns
pusha
or
in
rol
sub
repz
decl
call
hlt
inc
orb
aas
or
push
je
in
sub
push
jg,pt
decl
pop
stos
mov
sub
mov
mov
dec
add
test
inc
sbb
bound
rcrb
push
cmp
lcall
outsl
sbb
jne
mov
push
mov
lea
imul
pop
jge
lret
shrl
cmc
fstl
lret
ret
cli
jno
mov
xor
lcall
sbb
pop
cmp
cld
jg
lcall
adc
adc
test
dec
and
add
mov
pop
add
mov
divl
mov
das
mov
dec
nop
enter
cmp
call
stos
in
std
mov
in
in
fcomp
push
jo
fstps
fbld
mov
mov
xor
or
fbld
aas
out
in
or
pop
scas
stos
fists
xor
sub
call
imul
repnz
push
xchg
cmpsl
aad
inc
cli
add
xor
scas
sti
outsl
out
cli
mov
shll
aad
mov
nop
xor
addb
xor
jbe
jmp
and
jmp
cwtl
jecxz
cmp
or
add
loop
cmc
jle
cs
xchg
out
jmp
cmpsl
adcl
in
xchg
clc
mov
in
adc
and
addb
bsf
jnp
adc
cmpsl
cmpsl
and
mov
push
push
mov
mov
sahf
cmovns
push
lret
add
jmp
aaa
out
xchg
out
insl
mov
pop
or
sbb
mov
adc
lret
lcall
dec
sub
xor
cmp
popa
cmp
sahf
in
push
ror
push
inc
or
fdivl
ss
mov
mull
dec
nop
cmovp
jbe
xchg
jmp
sbb
les
and
lea
and
dec
lret
xlat
fcos
call
test
test
negb
popa
fldcw
pushf
pop
repz
decl
stc
daa
lods
xor
call
es
inc
cli
dec
or
dec
test
cmp
dec
ja
roll
mov
jmp
pop
cmp
mov
jbe
adc
mov
pop
xor
add
sbb
incl
sub
test
shrb
insl
jne
sbb
fmull
add
adc
ljmp
in
cld
mov
xor
arpl
leave
dec
mov
fisttps
lods
pop
mov
popf
pop
nop
inc
fmuls
imul
jne
inc
mov
leave
add
jo
xchg
sbb
xlat
pop
jecxz
adc
mov
inc
xor
adc
repz
push
push
std
ljmp
cmp
ret
dec
ret
xorl
xlat
in
arpl
jmp
and
scas
cli
ret
test
mov
gs
mov
rol
lahf
xchg
add
mov
hlt
subb
insl
add
out
dec
test
pop
cld
bnd
cmp
jae
in
adc
fcmovbe
push
lahf
sbb
test
aas
mov
sarb
shll
push
or
call
fsts
pop
hlt
rorl
cmp
mov
in
rcr
xchg
lret
test
mov
cmpsb
mov
ret
imul
stos
add
lcall
ret
repnz
mov
dec
leave
mov
pop
jg
fildll
cmp
fadds
add
or
int3
dec
mov
incl
cmp
ja
mov
dec
jae
or
xor
cmp
shll
mov
jmp
fstps
cmp
lea
loope
jl
stc
mov
stos
call
sbb
fucomip
dec
int
call
mov
loopne
rep
jl
push
sahf
cwtl
inc
pop
iret
in
mov
inc
inc
ds
insl
repnz
int
jmp
and
pop
fidivrs
push
lds
imul
jg
ja
sub
pop
ret
imul
roll
sub
lock
into
ds
inc
imul
inc
lret
ficoml
out
push
add
inc
xor
scas
and
cli
fstl
jg
dec
cld
inc
sbb
xorl
movsl
cmp
decl
bound
pop
pop
ret
vorpd
mov
dec
jmp
sarl
mov
incl
xchg
add
hlt
or
sub
dec
and
inc
xlat
xchg
xchg
loopne
rorl
loopne
stc
dec
incl
cmp
inc
inc
cmpsb
push
xchg
cld
aad
jbe
js
mov
jmp
movsl
test
scas
loopne
aas
push
or
dec
enter
jns
dec
mov
sbb
ljmp
jo
popf
int
test
add
js
or
push
and
xchg
push
push
ljmp
shl
movsb
cmpsl
or
mov
into
xor
scas
aad
fistpll
call
fmul
dec
cmpl
xor
negl
dec
inc
xchg
push
icebp
ja
xor
dec
xchg
ja
pop
mov
loope
sbb
cmpb
jg
mov
jmp
mov
sbb
ss
shrb
jno
jl
and
sbb
arpl
sbb
incl
lods
ds
xor
push
out
bound
pop
aad
fistl
dec
mov
lock
hlt
enter
inc
xchg
loop
lcall
mov
testl
ljmp
scas
fwait
popf
xchg
mov
inc
add
test
insl
in
pop
test
jl
push
loopne
loope
call
leave
mov
jl
sub
stos
movsb
mov
out
mov
pop
push
sbb
push
enter
or
mov
push
ljmp
subl
in
push
lret
fdivr
sarb
mov
imul
rcrl
scas
iret
dec
mov
cmp
call
or
into
dec
dec
gs
mov
fwait
pushl
test
pop
and
or
fisubrl
jo
jecxz
add
add
push
inc
aaa
std
mov
into
mov
jge
loop
in
push
sub
incl
dec
int3
fs
add
lcall
mov
sub
int3
inc
fiaddl
cmp
and
adc
push
mov
iret
inc
dec
adc
sbb
or
aam
mov
xor
or
ja
call
inc
mov
lret
push
cs
and
fcoml
enter
jge
mov
or
fbld
xchg
push
xchg
ds
adcl
xor
mov
gs
push
and
mov
dec
mov
icebp
jne
notl
sub
jge
pop
pop
loopne
call
sbb
adc
adc
dec
jne
add
and
das
daa
aas
jp
out
xor
mov
aam
dec
aaa
add
or
inc
ss
sub
lods
sub
dec
rcrb
fidivrl
cld
cmpl
scas
stos
shlb
mov
sbb
mov
mov
mov
stos
and
rcrb
int
ljmp
and
cmpsb
jg
cmp
addr16
insl
xchg
sub
cmc
fdivrl
adc
lret
and
lods
arpl
fimuls
rcll
clc
call
dec
pusha
fscale
decb
cmp
loope
loope
sahf
xor
decl
or
sar
ds
aas
xchg
movsb
and
mov
push
loop
mov
cld
movsl
push
addl
add
jle
arpl
pusha
lcall
pop
and
ret
lods
add
and
stc
bound
jle
aad
push
popl
call
aas
and
xor
repz
cmpsb
xor
outsl
rcrb
ljmp
inc
push
lds
cmp
push
movsl
ljmp
cmp
not
test
cmp
pushl
addl
negl
or
fs
dec
call
inc
mov
sub
dec
ljmp
and
sbb
aad
fidivs
jbe
add
push
jns
sbb
rcrl
and
ret
ss
push
lret
sub
loopne
lcall
pushl
add
mov
xor
adc
outsb
call
cmp
dec
jg
add
or
and
ljmp
test
ficoml
pop
test
jmp
xchg
push
jge
test
add
rolb
add
ja
ret
cs
popa
in
sub
lahf
mov
push
int3
incl
orb
sub
aas
ret
enter
cmp
push
fistps
idivb
jmp
decl
sub
push
xchg
nop
adc
into
inc
and
mov
mov
pop
push
mov
lock
or
jg
and
loop
adc
decl
jg
jge
adc
mov
push
cmp
in
sbbb
adc
out
clc
call
dec
ret
xchg
out
mov
ljmp
nop
pop
aam
testb
fmuls
cmc
hlt
cmp
daa
sub
xchg
xlat
sti
inc
xchg
test
cmpsl
int
pop
mov
aaa
test
insl
jmp
jmp
bound
cmpsb
or
cld
pushl
sub
fistpl
jnp
or
ret
xchg
incl
cmp
mov
lcall
mov
clc
mov
push
fsubrp
imul
dec
mov
lret
mov
cmpsl
stos
repnz
inc
mov
incl
mov
mov
add
mov
sub
fucomip
xchg
pushf
dec
jl
inc
aam
ret
imul
lock
add
loope
sbb
call
pop
xorl
les
fisubrl
push
in
adc
rcr
mov
jle
fldcw
pusha
mov
push
ret
cmp
mov
mov
arpl
inc
daa
adc
rclb
mov
inc
dec
clc
cmc
dec
add
clc
fistpll
or
jg
decl
push
xchg
push
push
sub
inc
repz
or
xor
std
ljmp
int3
mov
push
xor
or
xchg
xchg
dec
mov
jmp
or
sub
loopne
mov
jg
in
xlat
cmpsl
jl
inc
dec
mov
push
dec
push
push
lret
outsb
imul
or
pop
imulb
jb
sub
imul
iret
hlt
std
jae
xor
mov
popf
sbb
dec
xchg
enter
push
cld
repnz
xor
cmp
mov
or
fwait
je
xor
loope
mov
mov
into
xlat
dec
lock
mov
movsb
lods
fdivrl
outsb
adcb
and
rcll
decl
out
pusha
cmp
sub
test
call
or
ds
xor
repz
xor
mov
pop
fdivrp
ljmp
add
xchg
push
rol
inc
popf
lock
dec
out
mov
movsl
fstpl
adc
flds
mov
orb
mov
fwait
test
push
pop
mov
add
inc
mov
jl
and
and
add
push
ret
xorl
xor
jmp
sub
nopl
repz
xchg
aas
shll
daa
cmpsb
xchg
fldenv
or
nop
adc
decl
sub
div
and
ss
cmpsl
fs
loope
loope
rorb
xchg
lcall
lret
leave
dec
cwtl
adc
clc
sbb
xor
mov
jne
ss
mov
xorb
test
jno
and
fwait
aaa
sub
and
or
incl
movsb
push
sub
mov
test
decl
cmc
enter
mov
fwait
or
adc
mov
xchg
xchg
jmp
add
incl
mov
dec
inc
aad
cmp
loope
pushf
or
cmp
imulb
lcall
and
aas
xor
inc
out
insl
jns,pt
aas
inc
xchg
xchg
mov
inc
es
jmp
sbb
cmpsb
jmp
icebp
mov
sbb
inc
mov
ss
or
clc
cwtl
jmp
int
push
in
pminsw
xor
jle
pop
mov
xchg
sub
shrl
rclb
jnp
jnp
cmp
scas
jmp
arpl
xchg
mov
fsub
lret
push
loop
push
add
sbb
incl
int
in
pop
hlt
sub
aaa
sub
dec
icebp
mov
and
in
pushf
mov
sub
mov
daa
out
xchg
jo
mov
xlat
mov
inc
inc
mov
add
lcall
push
xchg
add
lcall
into
dec
push
repz
js
jno
xchg
add
sahf
pop
iret
xorb
fadd
pop
ljmp
inc
insb
cmpsl
push
jge
fcompl
lret
jmp
stc
pop
cld
pop
decl
mov
xor
lahf
aaa
std
jo
pop
mov
imul
add
test
mov
sub
insb
xchg
mov
ret
pop
sub
lret
test
adc
add
mov
fsts
cld
jp
sub
stc
push
out
cli
pop
inc
mov
scas
popa
ret
in
push
mov
jecxz
lret
jb
fcom
cli
cs
repz
sbb
mov
push
scas
rolb
sbb
xchg
mov
mov
xchg
in
add
cmc
cmp
push
test
shl
sbb
pop
lods
mov
jae
ja
and
std
fbstp
xchg
jae
mov
inc
and
and
call
jmp
out
and
pushf
insl
push
mov
sarb
ds
addl
aas
ljmp
or
enter
pop
sbb
repnz
xchg
mov
repnz
jl
icebp
mov
addb
ja
pop
jmp
aaa
push
out
mov
inc
mov
out
cmp
mov
scas
pop
test
mov
push
mov
test
lahf
mov
cmp
jl
fneni(8087
adc
ljmp
pushf
cmpsb
in
bound
or
ljmp
stos
test
testl
cs
fwait
es
data16
inc
lret
mov
incl
mov
lret
xchg
out
adc
add
subl
sub
iret
cli
pop
std
aas
cltd
fmuls
adc
ds
xchg
mov
xor
mov
push
sbb
addb
rclb
out
outsl
iret
jnp
in
cmpsl
add
mov
jmp
mov
fcoml
cmp
xchg
fwait
into
sbb
sbb
test
pop
or
stos
jne
push
xchg
cmp
pop
cld
push
pushf
shl
jne
and
xchg
or
decl
int
mov
jp
push
loop
jbe
jmp
insl
iret
push
or
sbb
xor
enter
lods
imul
sahf
or
ljmp
pop
jle
inc
fs
lods
test
mov
inc
lcall
orb
fmuls
mov
cmpsl
sub
xchg
mov
daa
adc
ja
jmp
adc
inc
adc
and
out
roll
fmulp
std
flds
dec
shll
lock
inc
dec
clc
cld
cmpsl
sub
mov
xchg
test
jmp
jns
xor
mov
int3
ja
fnstcw
out
scas
loope
xor
repnz
pushl
ljmp
popf
dec
fisttps
mov
stos
and
and
push
movsl
testl
ret
inc
loop
testb
jge,pn
in
jmp
nop
jnp
mov
mov
popf
push
inc
push
stos
xchg
add
pop
inc
out
cmpsb
fisttps
pop
jge
xchg
dec
push
movsl
xor
pop
sub
fadds
and
mov
aad
push
mov
rclb
mov
or
jg
pushf
jns
rclb
loope
jne
pop
cmpsb
mov
ljmp
mov
xor
xchg
dec
mov
sbb
lcall
push
es
stos
lds
mov
mov
dec
push
cmp
mov
or
jmp
push
pop
jmp
cmp
test
xlat
lds
pop
or
in
inc
xchg
movsb
inc
push
sub
popf
xchg
outsb
inc
ja
cmp
sbb
aaa
dec
pusha
push
lret
repnz
fsqrt
ljmp
mov
mov
bound
aas
and
lock
mov
add
jecxz
imulb
imul
jb
pop
xchg
cmp
dec
xchg
jg
push
enter
mov
adc
out
cmp
data16
fs
push
in
jp
out
push
inc
aad
push
scas
and
aad
cmp
and
inc
mov
pushf
setns
or
and
inc
sbb
sub
jg
movsl
sub
mov
fcoml
insl
or
int
call
in
popa
xor
imul
push
in
and
orl
push
xchg
bound
fstpl
imul
shll
scas
xor
jge
jnp
jle
popa
jmp
stos
cmpsb
lret
sub
mov
pop
xchg
and
std
mov
jmp
divl
dec
inc
jbe
outsb
and
push
cmc
pop
mov
push
sbb
cs
jmp
jl
popf
mov
pop
push
add
pop
mov
ds
in
sbb
add
mov
and
cli
add
repz
add
cli
dec
lahf
cli
jmp
dec
mov
idivl
test
lods
int3
test
daa
in
pop
xchg
dec
or
out
cmp
and
jle
mov
add
cmpsb
jns
insb
lods
icebp
xor
ds
pop
mov
add
in
sbb
cld
mov
push
xor
inc
push
xchg
mov
xor
mov
cltd
mov
call
cmpsl
dec
cmc
bnd
mov
imul
mov
add
xchg
pushl
jns
mov
push
xchg
pop
jo
std
int
lods
pop
dec
cmp
push
mov
incl
sbb
mov
lcall
inc
jecxz
cld
lcall
subb
stc
inc
out
cmpsb
cmp
ds
jg
lret
insb
sahf
cli
test
addr16
mov
adc
cld
xchg
aaa
clc
adc
cld
jge
scas
jmp
loopne
pusha
sbb
jg
push
and
out
xchg
xor
mov
in
adc
sbbl
jo
aad
orb
push
pop
cmp
ss
mov
inc
insb
dec
mov
fwait
cmp
mov
shll
shll
js
cmpsl
xchg
mov
jbe
mov
adc
scas
fildll
ds
nop
or
push
loop
mov
cwtl
out
mov
dec
mov
mov
sub
das
fbld
imul
lock
dec
call
pop
incb
mov
add
mov
decl
and
cld
movsl
add
cmp
cmpsb
cltd
xchg
fs
push
sub
adc
jp
xor
ljmp
shll
aas
cli
and
scas
sbb
das
pusha
adc
mov
and
pop
add
and
xchg
int
fimuls
test
pop
arpl
push
cs
jl
jmp
xchg
inc
dec
ja
mov
inc
mov
rep
scas
pushf
dec
push
mov
call
mov
xchg
icebp
jnp
fsubr
addr16
push
xor
lock
imul
adc
decl
mov
fcmovne
sahf
fcomps
orl
mov
inc
cs
sarb
jg
mov
jge
fs
jl
mov
pop
xchg
and
sbb
pushf
and
push
and
and
inc
cltd
stc
int
xor
jl
push
inc
decb
push
push
test
or
jg
pusha
jle
sub
movsl
and
xchg
nop
mov
mov
mov
call
fwait
outsb
and
rcl
sahf
daa
push
pop
xchg
rcrb
pop
je
lock
in
mov
mov
lahf
inc
decl
cmc
mov
outsb
movsl
int
jnp
pop
lods
sbb
push
rorl
lcall
lds
xchg
in
pop
sbb
call
dec
or
enter
mov
mov
inc
jl
aam
shll
daa
sbb
or
call
inc
movl
lret
push
cld
movsb
mov
inc
cli
jmp
push
sbbb
js
and
cmp
fsubr
out
jne
mov
lret
xlat
xor
mov
outsl
clc
jg
stos
ror
jae,pt
inc
daa
dec
test
test
push
and
lcall
sarl
xchg
push
sbb
mov
popa
loop
cld
jecxz
not
xchg
mov
sbb
jne
icebp
add
mov
iret
pop
push
ror
mov
inc
decl
lock
sbb
movsb
pop
cmp
test
call
push
add
mov
xchg
mov
xchg
cmp
outsb
cmp
push
into
cld
ds
mov
mov
imul
push
xor
decl
jbe
gs
gs
mov
mov
dec
and
les
mov
nop
mov
mov
push
cmpsl
mov
push
lods
addr16
xchg
push
cmp
ret
cltd
cs
stos
decl
in
cmp
sbb
xor
in
push
xor
push
dec
test
test
scas
sahf
sbb
pop
popa
mov
xor
scas
jle
dec
repz
in
in
shrl
jo
jg
ljmp
dec
push
mov
jo
lds
cmp
test
sub
scas
loope
cld
jmp
mov
iret
push
mov
ljmp
jae
jg
push
xchg
push
inc
sbb
jne
inc
les
inc
adc
xor
sarl
ja
leave
cmc
fwait
cwtl
xor
insl
mov
add
pusha
add
scas
ljmp
addr16
lods
push
bound
add
std
int3
mov
insb
mov
stos
iret
pop
adc
mov
imul
in
fadd
sbb
ljmp
lret
out
dec
jbe
int3
mov
xchg
sbb
ficomps
int3
or
xchg
je
out
bound
inc
push
lds
arpl
call
sar
mov
mov
xor
mov
cmp
clc
pop
out
xchg
outsl
daa
data16
fs
incl
loope
shl
adc
jecxz
cmp
hlt
xchg
out
jns
xor
jecxz
mov
inc
fdivr
jmp
sbb
sqrtps
leave
sti
jb
out
out
clc
pushl
push
inc
mov
and
push
or
cmp
sub
fwait
hlt
mov
mov
cli
mov
imul
pop
push
jge
dec
jns
xchg
pop
cmpsb
mov
jmp
fwait
push
pop
subb
jns
pushf
test
sub
or
or
push
inc
dec
mov
addb
jg
adcb
inc
sub
dec
ja
lcall
sti
push
add
dec
or
inc
dec
rclb
loopne
mov
lret
jg
add
xor
dec
adc
fxch
sbb
push
and
jno
cs
loopne
xor
and
cltd
lods
xchg
sbb
ret
jb
rclb
incb
jb
adc
jmp
or
cmp
js
repnz
out
pushf
pushf
rolb
pop
dec
call
push
xchg
pop
addr16
out
dec
sub
pop
out
mov
push
aad
lret
dec
jg
jmp
in
xor
lret
sub
loopne
hlt
add
xchg
fimuls
xchg
push
icebp
decl
mov
dec
xor
icebp
mov
int
clc
call
pop
xchg
pusha
addr16
fcmovbe
gs
push
or
jg
mov
or
rolb
mov
and
sbb
int
decl
mov
xchg
in
mov
jb
loope
sbb
xor
dec
cwtl
movsb
lcall
call
pop
into
pusha
data16
lahf
sbb
es
dec
lock
imul
fistps
jnp
clc
mov
iret
call
in
jns
pop
adc
pop
scas
clc
mov
mov
dec
test
fmuls
lcall
mov
enter
repnz
fisubrl
push
fstpl
fnstenv
or
cli
faddl
push
call
shll
jle
call
out
cli
loop
ret
out
push
and
sar
cld
mov
lds
cmp
push
xlat
pusha
mov
xchg
ret
xor
mov
jecxz
dec
adc
dec
sub
test
pop
ljmp
pop
stc
push
and
mov
lods
inc
outsl
xlat
hlt
fimull
and
mov
call
cmp
aad
cs
adc
fwait
push
rclb
mov
dec
fwait
xchg
jg
xor
and
add
mov
dec
push
sub
call
dec
jmp
mov
adc
std
rcll
outsb
lcall
bound
aam
sbb
lcall
mov
mov
jl
in
leave
xchg
lret
jecxz
push
or
jmp
test
push
mov
or
adc
dec
out
mov
sahf
das
adcl
call
shlb
ret
inc
inc
add
andl
pop
rorb
mov
sti
ficoms
lcall
and
clc
mov
arpl
ret
mov
popf
mov
sub
mov
pushl
pop
rcrl
and
push
mov
and
int3
rol
lahf
mov
fidivrl
push
push
das
fdecstp
imul
filds
lods
mov
jp
ja
ljmp
mov
in
into
stos
fcomps
cmp
cltd
sbb
mov
adc
push
imul
jl
add
xchg
loope
xor
jae
sar
cmp
ljmp
fsubrs
xabort
rcrb
fs
cs
mov
inc
cmp
pop
fmull
push
out
cld
dec
adc
mov
push
fdivs
jge
xchg
and
rorl
stos
std
nop
jge
inc
jg
stos
dec
adc
addr16
jae
xchg
jne,pt
call
dec
nop
cmpsb
sbb
dec
stos
dec
inc
cld
lea
bound
mov
mov
iret
aad
mov
incl
je
clc
mov
mov
in
outsb
push
lcall
push
dec
jge
outsl
dec
cmc
xor
adc
outsb
outsb
inc
or
mov
fiaddl
cmp
cmp
jle
out
scas
test
ljmp
out
inc
scas
cwtl
into
cmp
inc
adc
mov
jge
mov
out
mov
pop
xor
mov
cmpsl
inc
push
inc
xor
lods
push
jecxz
add
mov
jb
dec
adc
test
lcall
mov
push
aad
dec
pop
mov
dec
jp,pt
roll
loopne
test
mov
adc
pop
out
push
inc
bound
jno
jns
mov
xlat
cmp
add
pushl
les
push
fidivrl
add
push
sub
fildll
imul
das
mov
test
aas
cmp
xchg
mov
xchg
incl
mov
adc
lock
mov
dec
mov
in
sbb
ljmp
hlt
mov
jge
jo
push
das
mov
cltd
or
aad
mov
repnz
sub
mov
ja
imull
stc
ljmp
scas
shr
into
adc
lods
fists
push
das
das
repz
cmp
xchg
jnp
test
loopne
shrl
das
sbb
mov
push
cmp
adc
popf
es
mov
jg
pop
jle
mov
mov
daa
pop
js
sub
fimuls
sti
leave
test
sub
lock
fxch
pop
in
addr16
xchg
clc
std
ret
les
call
popf
arpl
ds
cmp
shlb
add
notl
enter
jns
sbb
sub
sub
dec
in
jp
fistpll
mov
std
add
outsb
fistpl
mov
and
mov
mov
cmp
jb
xchg
bound
es
add
incl
shrl
pusha
push
rorb
sub
xchg
stos
icebp
mov
test
pop
scas
jno
outsl
xchg
incl
rclb
cmp
pop
sbb
adc
dec
add
jg
mov
push
lret
repnz
sub
pop
sbb
dec
lcall
sbb
fmuls
in
ss
and
stos
ds
and
ja
xchg
pusha
int3
push
aas
push
push
adc
std
lds
decb
stos
jp
test
mov
lock
cwtl
or
cld
add
ret
pop
or
inc
mov
sbb
push
test
cld
cltd
arpl
fnsave
shlb
lret
xchg
mov
fiadds
mov
mov
fldenv
or
and
jmp
test
shrb
std
cmp
or
or
adcb
scas
gs
add
sub
sti
lock
adc
fidivrs
lret
inc
adc
lea
lcall
mov
leave
fnclex
pushf
dec
sub
in
out
sahf
mov
call
jb
sbb
jg
ljmp
pop
cltd
lods
sub
call
or
scas
mov
jmp
std
jae
inc
test
fucomip
mov
mov
cmc
fdivl
xor
push
mov
jns,pt
in
test
jmp
test
xor
dec
movsb
pop
inc
xor
and
and
and
iret
push
shlb
int3
lods
push
enter
loop
in
mov
mov
jmp
jno
jmp
out
les
sub
dec
in
dec
enter
sbb
cli
dec
xor
faddl
inc
inc
mov
mov
xor
fucomp
test
decl
ret
arpl
add
mov
int3
in
sbb
jecxz
imulb
jecxz
cmp
ss
popf
push
hlt
lds
mov
ljmp
nop
pop
and
xor
pop
mov
es
mov
sub
sbb
cmp
movsl
add
inc
adc
mov
fstl
mov
lcall
fchs
addr16
iret
insb
call
fisubl
push
lcall
sub
and
mov
xchg
sbbl
popf
inc
les
outsl
cmp
mov
mov
dec
test
sbbl
sbb
pushw
pop
gs
adc
cmpsw
xchg
sub
pop
icebp
decl
cli
enter
in
cmp
fdivrs
mov
pushl
xor
mov
xchg
stos
and
mov
repnz
repz
sub
loope
lock
ljmp
jbe
pop
push
iret
mov
paddd
mov
xor
decl
sahf
data16
push
daa
mov
xor
xchg
hlt
popf
fcomip
imul
loop
cmp
pushf
jo
ljmp
das
or
movl
cmpsl
arpl
xor
or
decl
cmp
push
pop
xlat
cmp
fistl
mov
loope
xlat
nop
testl
inc
mov
adc
sbb
popf
outsl
cmp
jbe
mov
repz
sub
xchg
jge
lods
mov
int
hlt
sub
cmp
call
cmpsl
call
loop
lods
je
or
ja
ljmp
call
test
mov
ljmp
cmp
jge
xor
and
xchg
lcall
sub
dec
and
cwtl
xchg
and
cmc
xor
mov
stos
ficomps
pop
mov
addr16
add
cmp
inc
adc
inc
sarb
decl
cwtl
dec
mov
out
mov
push
dec
mov
mov
jae
pushl
mov
mov
dec
or
sbb
fucomi
xor
mov
pop
out
std
add
jne
icebp
mov
mov
mov
push
dec
mov
inc
aad
cmc
ljmp
jecxz
dec
xchg
inc
xor
es
sub
or
shll
icebp
icebp
xor
scas
mov
or
inc
xor
inc
cld
test
or
mov
pushl
jae
add
out
pop
int3
adcl
lods
xchg
sbb
incl
sbb
inc
fwait
cmp
or
cwtl
fdivr
movsl
mov
test
sub
lods
lcall
scas
ror
repz
add
fs
nop
movsb
cmpsl
and
xor
or
decl
pushf
ljmp
lret
xor
mov
inc
push
or
jge
out
xor
push
sbb
ret
cld
mov
rcrb
incl
dec
and
stc
ret
hlt
pop
pop
xor
in
inc
insl
outsb
mov
sub
jmp
test
adc
push
adc
mov
outsl
ja
sub
dec
mov
ljmp
bound
shlb
out
and
dec
jl
lods
cmpb
lret
sahf
sub
fcomip
jmp
out
aam
jl
cmp
sbb
out
test
xchg
je
scas
insb
mov
shrb
fdivr
jbe
adc
sub
cmp
out
sub
inc
mov
sti
dec
int
xor
cli
sbb
bnd
ss
cmp
scas
or
mov
stc
ret
insl
mov
mov
inc
inc
lret
jg
ljmp
xor
xchg
roll
in
xlat
add
pusha
mov
xor
inc
mov
sub
fisttps
or
xchg
inc
jg
push
lcall
ja
out
and
cmp
mov
je
mov
push
call
cltd
mov
or
addl
out
les
clc
ljmp
scas
push
lcall
mov
ret
ljmp
aaa
mov
call
or
ss
in
stos
andl
pushl
std
jecxz
in
cmc
pop
movsb
jmp
addb
mov
push
jmp
call
shrl
mov
sbbb
iret
enter
das
pop
inc
dec
int3
scas
mov
sahf
stos
cld
decb
dec
sbb
sbb
jl
rcll
stos
push
movb
ljmp
push
int
out
mov
movsb
push
push
xor
pop
sbb
or
cmpsl
dec
jecxz
cmp
ret
icebp
sub
gs
decl
mov
mov
cmp
cld
pusha
rorl
sbb
xor
mov
inc
repnz
incl
fldcw
loopne
shll
adc
jno
sub
aad
lock
adc
aad
es
sti
insb
cmc
ljmp
out
and
push
pop
xor
fsts
fbstp
data16
jge
daa
mov
push
pop
or
pop
or
pushl
sbb
test
movsl
and
sbb
mov
pop
dec
not
jge
test
add
push
push
mov
xorl
cmpsb
xchg
ds
rorb
xchg
sahf
orps
lcall
jmp
mov
mov
imul
add
hlt
adc
jecxz
add
call
cmpsb
pop
int3
mov
cmp
dec
sub
loopne
cmp
lods
lds
ret
incl
pop
mov
daa
push
xor
es
xor
pushl
inc
push
jmp
or
nop
out
pop
mov
arpl
mov
or
lock
ljmp
shl
jg
mov
cmp
pop
pop
ret
pop
lds
adc
add
incl
jl
inc
daa
je
imul
inc
fisttps
mov
or
sbbl
push
pop
mov
or
aad
push
call
pop
rcll
mov
insl
jo
lcall
cmp
push
shrb
std
cmpl
out
xlat
inc
xchg
int
jnp
test
cmp
test
push
aaa
dec
inc
cmp
loop
divl
fs
out
incl
int3
jle
pop
pop
jnp
popa
adc
mov
mov
or
clc
adc
call
test
or
add
or
sub
and
adc
shr
sub
cs
fwait
insb
sbb
lret
mov
xor
xchg
xor
loopne
xchg
fwait
sbb
jae
add
xor
cli
jl
sub
sub
pop
sub
mov
aas
xchg
jne
and
rolb
das
not
sub
and
add
jl
mov
jns
jle
or
push
cmpsl
dec
imul
xchg
push
into
in
mov
test
cmpsl
xchg
inc
insl
cli
or
mov
xchg
push
push
push
jns
cs
iret
xchg
daa
xchg
fwait
decl
sub
push
push
test
xchg
inc
dec
push
cmp
inc
sub
add
call
jmp
mov
fwait
mov
nop
dec
aam
inc
iret
insb
jns
arpl
mov
or
incl
pop
mov
cmp
pop
dec
dec
loope
repnz
mov
je
idiv
pushl
pop
insb
mov
dec
fdivs
sbb
test
push
nop
subb
fcomp
add
or
mov
push
xor
adc
adc
out
and
mov
incl
xchg
enter
roll
dec
xchg
lret
lret
mov
xor
ja
fnsave
sub
mov
je
push
xchg
out
ret
icebp
sti
mov
pop
mov
decl
sbb
cwtl
dec
shlb
mov
jmp
cmp
mov
outsl
loop
cltd
adc
push
add
lahf
sub
std
stos
add
aam
call
into
pop
push
and
or
lret
popa
adc
or
stos
fistpl
dec
pop
call
fcmovnb
loope
lea
ljmp
cmpsb
jl
popa
mov
ret
decl
test
and
out
inc
cmpb
xchg
lret
ljmp
jl
call
push
dec
out
test
data16
fstps
mov
push
lods
mov
or
mov
into
and
sub
mov
sarl
das
sar
out
lods
cmp
jb
es
push
fs
arpl
movsb
jmp
xchg
or
fdivl
sbb
xchg
scas
movsl
cmp
mov
adc
jo
cmc
sbb
mov
ljmp
push
int
mov
out
sub
push
loopne
and
xchg
jle
jp
je
enter
mov
push
insb
add
cmp
jo
mov
jmp
pop
fidivrs
xchg
pop
and
dec
loope
or
pop
mov
loop
sub
pop
and
js
adc
ljmp
scas
fnstsw
push
cld
in
push
popa
pop
repz
xor
lds
mov
sub
fisubl
in
dec
pop
int3
lods
das
je
int3
sahf
pop
cmp
fiadds
ja
ret
cmpsb
loop
imul
loop
push
cld
xchg
and
push
xchg
dec
fldt
add
lahf
gs
xchg
lock
mov
outsb
ljmp
js
mov
das
mov
cld
divl
add
adc
adc
ss
xor
not
je
clc
xchg
movsl
lret
adc
push
fucomi
mov
push
jae
ljmp
iret
nop
lahf
iret
outsl
or
cmp
imulb
sbb
decl
jmp
mov
mov
dec
push
xor
hlt
in
mov
ja
pop
fisttpll
js
fbstp
andl
call
decl
rcl
and
notl
add
lcall
cli
push
out
repz
jbe
int3
shr
xor
shll
jg
inc
mov
sbb
dec
inc
push
sarb
add
pop
notl
and
in
inc
jecxz
call
jnp
mulb
adc
fwait
fs
iret
cld
cmp
loopne
dec
pushf
xchg
scas
fcmove
pop
dec
jle
or
inc
decl
sbb
ss
lods
sti
mov
pop
push
leave
cld
lcall
sub
pop
push
push
insb
sub
into
or
pop
bound
mov
push
mov
add
add
les
push
mov
or
pop
js
dec
push
pop
incl
pushf
or
add
icebp
orb
call
or
cmp
aaa
std
fldl
pop
je
jle
shll
dec
enter
aas
out
xchg
jb
inc
std
lcall
dec
test
sub
xchg
add
push
test
outsl
cli
pushl
adc
les
fisubl
or
pop
jbe
rolb
mov
addr16
mov
mov
pop
ss
dec
nop
lock
jmp
jo
je
loop
movsl
int3
push
popa
outsb
sbb
jl
jmp
out
xor
stos
adc
dec
pusha
add
jne
popa
lods
ror
sub
pop
fwait
mov
stc
dec
push
jns
xchg
fdivs
mov
andb
es
sbb
loope
cmp
lahf
rcll
mov
pushl
in
decb
andb
xor
in
or
sbb
in
stc
ljmp
xchg
arpl
push
or
adc
jo
packssdw
out
mov
mov
dec
jg
adc
push
cmc
jne
je
push
mov
mov
pop
movsl
scas
stos
sbbl
ljmp
xchg
inc
xorl
add
rcrl
push
inc
push
enter
jg
jmp
notl
ljmp
ret
cmp
fwait
mov
add
test
cmp
movsb
or
xchg
mulb
mov
ret
lahf
xchg
test
test
sahf
scas
ret
ljmp
jo
inc
xor
or
nop
xor
int
pop
adc
mov
adc
popf
xchg
out
pop
popa
aad
jmp
inc
mov
lock
push
xchg
aad
and
inc
xor
sbbb
push
sbb
dec
aas
lcall
lds
pusha
fsubr
mov
cli
jnp
mov
mov
subb
add
loop
mov
mov
xor
vunpcklps
enter
and
mov
arpl
sbb
mov
fwait
rcrb
incb
into
mov
push
sub
push
popa
cmp
and
or
bound
adc
jge
fstpt
clts
jo
fcomip
lret
popa
adc
pusha
bound
adc
insb
dec
pop
and
scas
sub
call
stos
iret
jl
mov
inc
fisttpl
add
xchg
pusha
sbb
mov
std
adc
cld
mov
insl
in
cmp
lea
dec
movsl
adc
roll
inc
jnp
push
push
test
add
push
push
outsb
jmp
jge
add
shlb
xor
jg
test
cmp
loopne
mov
push
incl
adc
dec
pop
adc
test
mov
fwait
xor
dec
dec
dec
cmp
xor
stos
clc
xchg
js
int
jns
arpl
rclb
jmp
in
pop
cld
ljmp
xchg
in
inc
loop
jmp
xchg
mov
imul
testb
lods
xchg
mov
movsl
add
std
pop
lret
sbb
lock
xor
pushl
call
imul
insl
pop
pushf
sub
in
aam
loop
cmpsl
push
adc
and
call
dec
push
lock
inc
push
aaa
or
mov
shrb
movsl
mov
ljmp
call
push
gs
add
cwtl
rclb
jecxz
cltd
rolb
mov
ljmp
mov
push
out
out
mov
mov
sub
push
dec
jg
cmpsl
mov
push
in
mov
pop
jmp
sub
int
cmp
push
in
xchg
ljmp
lahf
sub
jns
jle
test
sti
and
dec
adc
mov
test
add
adc
mov
sbb
ds
add
add
ljmp
andb
addr16
arpl
xlat
sub
lahf
outsb
clc
cmp
jmp
test
insb
imul
lock
jo
mov
sbb
rclb
sbb
je
sar
incl
rcrl
jl
loop
rcrl
test
repnz
fwait
ljmp
and
fnsave
mov
push
fisubrs
iret
sti
lds
ud2
dec
lret
sbb
and
sbb
adc
iret
jo
mov
inc
or
incl
or
mov
stos
dec
xchg
mov
cwtl
out
dec
xchg
or
lcall
inc
test
lods
icebp
xchg
mov
adc
cmp
lea
push
ss
push
add
rcrb
je
jecxz
push
lcall
cltd
xchg
jecxz
and
popf
xchg
push
push
lret
dec
lret
pop
and
cmpsl
lcall
lea
jp
aas
inc
sub
test
fstpl
aam
lahf
sbbb
push
xor
sbb
adc
mov
jmp
push
sub
xor
test
or
nop
es
pop
or
mov
dec
shrl
mov
stos
repnz
and
jg
xchg
xchg
sti
or
adc
shlb
sub
cmc
xchg
cmp
test
pop
divl
call
repnz
lods
cld
or
test
push
dec
jmp
push
sahf
and
push
inc
push
add
clc
ljmp
lret
lret
or
aas
jle
pop
nop
lods
jmp
cmp
or
sbb
subl
add
je
pop
sub
call
xor
xchg
or
rorl
cmpsb
sti
cmpsl
daa
push
push
sbb
cmp
movsl
in
or
pushf
loope
ret
and
shlb
inc
add
dec
orb
jnp
ljmp
vpmovsxbq
fildll
or
jg
incl
das
inc
dec
pop
lds
inc
testl
incl
popa
add
push
bound
das
xchg
sub
adc
jle
cmpsb
sub
push
das
fadd
or
pop
mov
or
or
rcll
rcr
cmp
pushl
mov
aaa
sub
pop
aam
mov
mov
push
cwtl
xor
lcall
jecxz
addb
push
loopne
insb
insl
and
xchg
cmp
dec
mov
push
jl
fildl
outsb
les
outsb
mov
shlb
aam
out
insb
and
and
xor
sub
fisubrs
incl
imul
clc
or
in
cli
cmp
shrl
cli
ljmp
fnstenv
push
stos
mov
in
fisubl
arpl
insb
xchg
adc
mov
decl
arpl
xchg
and
adc
cmp
inc
movsl
or
jl
gs
scas
or
out
xchg
repnz
movsl
jo
fcmovnb
xchg
xor
xchg
sbbb
fadd
repnz
inc
mov
jno
push
fstl
fldl
fisubl
sub
mov
test
lret
add
cwtl
arpl
outsl
popa
outsl
test
xchg
xor
int
sbbl
pusha
sub
mov
ja
inc
bound
inc
push
mov
cmpsb
in
push
push
call
jmp
pop
push
mov
mov
pop
out
pushf
jo
nop
clc
sti
jnp
dec
das
shrb
jmp
add
dec
adc
jnp
xchg
push
pop
call
dec
add
sbb
out
mov
sbb
push
xor
popa
idivl
aad
dec
std
jno
std
cmp
leave
mov
cmc
jnp
aaa
cmpsb
jg
icebp
sbb
xor
mov
cmp
cs
pop
mov
pop
or
dec
push
lahf
je
add
jmp
inc
je
incl
or
sub
testb
outsb
inc
pop
stos
rcrl
add
push
jecxz
ret
pushl
lock
shrl
inc
test
jbe
and
aam
ljmp
addr16
call
sbb
cmpsl
add
adc
mov
repz
sbb
jg
jmp
push
dec
nop
dec
fs
dec
cmp
add
out
loop
dec
push
sbb
popa
cld
push
ja
lea
rorb
sub
mov
cltd
les
ficoml
repz
cmpsl
jb
dec
mull
push
cs
fisttps
cld
add
daa
mov
into
into
mov
into
push
jl
sub
lcall
jnp
rcrb
repnz
jecxz
pusha
mov
fildll
xchg
int3
mov
sub
fwait
cld
rcl
in
incl
aam
jge
sbb
stos
ja
xor
imul
jle
out
cli
add
mov
mov
in
push
mov
mov
cmp
sbb
inc
add
outsl
repnz
call
fs
push
cmp
dec
shlb
orb
mov
addr16
ror
jns
nop
and
ljmp
pop
mov
mov
inc
decl
mov
cmp
lods
pop
insl
cmp
imul
xchg
test
lcall
mov
es
xchg
xchg
or
and
in
mov
ljmp
outsb
push
jo
rcrl
scas
andl
xchg
and
loopne
ljmp
ljmp
or
enter
xchg
xchg
push
ja
pushl
mov
dec
aaa
mov
lea
mov
xchg
pushf
popf
mov
cld
push
sar
jmp
addr16
push
imul
mov
xchg
shl
jg
scas
inc
jg
mov
and
jb
mov
mov
stos
mov
pop
pop
xlat
cmp
shlb
jg
cmp
in
cld
mov
sub
ret
xchg
mov
rorb
fnsave
jmp
adc
data16
ret
pusha
lds
inc
xor
adc
mov
inc
ret
jnp
cmpsb
orb
mov
into
out
jge
pop
js
fnsave
mov
dec
fbld
mov
mov
test
and
call
xchg
nop
mov
inc
dec
inc
add
xchg
push
movsl
cmpsl
stos
popa
cli
decl
and
imul
sahf
inc
inc
hlt
std
aas
jns
pop
fcompl
pusha
adc
or
cwtl
inc
je
xlat
ljmp
int
ss
sbb
into
mov
call
jg
and
jbe
lret
addl
dec
je
mov
dec
sbb
sti
jmp
dec
mov
xchg
inc
roll
test
pop
sub
fmuls
xchg
ret
pop
rcrl
mov
adc
xor
pop
lods
dec
cmpb
stos
mov
sar
and
aas
lods
mov
daa
test
nop
jge
incl
mov
outsb
sub
pushf
xchg
jbe
mov
fdivs
jp
decl
out
jge
insl
dec
jo
cmc
jno
jle
popf
sub
jl
cmp
repnz
in
loopne
add
dec
mov
xor
lret
adc
xchg
sub
jmp
shr
mov
sbb
incl
mov
cmp
std
insl
leave
fwait
pop
pop
outsb
jp
imulb
lcall
js
xchg
faddl
and
jp
outsl
enter
lds
sbb
sub
sub
call
add
and
jo
inc
stos
xor
pop
icebp
push
inc
jg
sbb
mov
imul
fcmovbe
push
insb
lea
mov
push
pop
push
fwait
ljmp
jnp
mov
insb
mov
imull
push
jg
rcll
push
xchg
pop
dec
out
imul
cmp
rolb
addr16
arpl
test
sbb
inc
lock
lods
jmp
push
aad
in
xchg
insl
std
dec
popf
dec
sbb
repnz
repz
out
xchg
sub
pop
lock
mov
mov
jg
add
out
cmpsb
cmp
test
decl
clc
xchg
jae
nop
inc
out
pusha
mov
popa
pop
pop
ljmp
rcrl
cmp
jge
jl
push
movsb
aas
jne
ds
sbb
cld
movsb
fadds
jnp
push
fwait
add
icebp
push
movl
test
pop
pop
fidivl
mov
aas
sbb
inc
pop
sub
jl
dec
into
xor
pushf
jl
pusha
add
mov
lret
ss
push
test
adcb
jg
ljmp
movl
cld
jbe
pop
xchg
imul
adc
icebp
incl
movsb
add
or
shlb
movsl
xor
or
mov
das
push
inc
incl
fistps
and
cld
pop
inc
mov
pusha
in
das
clc
call
or
lods
inc
push
adc
adcb
cld
outsl
mov
out
pop
repz
mov
rcrl
pop
or
std
stos
inc
movsb
sub
push
xorb
dec
adc
xlat
pushf
pop
hlt
test
ja
std
xchg
mov
mov
push
mov
lea
and
stc
imul
pop
jg
dec
mov
xor
adc
clc
mov
decl
inc
or
sbbb
andb
out
iret
cli
xchg
xor
cmp
aam
sub
or
sbb
imul
mov
call
jmp
and
leave
ds
pop
add
stos
lcall
stos
rorb
lcall
pop
mov
andb
sbb
and
mov
call
inc
dec
dec
popa
mov
xlat
ja
clc
cmp
fstpt
mov
xor
pop
shll
mov
jp
xchg
into
imulb
push
repnz
ljmp
inc
xchg
fld
rcl
out
add
xchg
jmp
xor
mov
push
sub
incl
aaa
xchg
test
dec
sbb
xchg
imul
out
dec
adc
inc
mov
pop
cs
test
push
or
mov
xlat
xor
rcrb
and
or
decl
and
test
inc
je
jle
xor
sub
jg
lret
xchg
sbb
push
mov
je
adcb
fisttpl
jbe
cld
adc
incl
repnz
jae
aam
fmuls
sub
fwait
outsb
add
clc
jmp
fnstcw
jmp
adc
jmp
and
imul
stos
movsb
adc
sti
push
outsb
cmpsb
dec
xchg
shr
pop
ror
and
xorl
pop
dec
mov
or
cmp
fidivs
sub
pop
orl
sbb
dec
scas
pop
inc
and
ret
mov
mov
cmp
add
and
mov
test
cwtl
fidivrl
mov
mov
into
imul
mov
les
jmp
shrb
mov
mov
stc
cmova
sbb
cs
ljmp
mov
xor
dec
loope
cmpl
and
lcall
add
xchg
pop
add
adc
into
push
fwait
mov
sbb
ljmp
andb
inc
cwtl
push
xor
jg
pop
xchg
xor
cmp
push
inc
and
fdivrs
decl
testl
adc
fwait
cs
xchg
add
add
dec
jmp
ja
inc
sbb
sub
adc
inc
adc
inc
mov
push
mov
lds
mov
push
je
lods
rorb
out
orb
fcoms
clc
pop
add
add
jg
pop
fcmovnbe
mov
ret
sbb
jecxz
repz
inc
or
jmp
xchg
add
int
cmc
cmp
dec
or
icebp
jns
mov
mov
repnz
adc
lret
fidivs
ljmp
dec
jg
and
test
fmuls
fisttpll
dec
sbb
jnp
sar
mov
imul
mov
sbb
sub
mov
dec
cs
decl
dec
add
sub
xchg
push
movsb
loop
fildll
inc
in
repnz
shlb
pop
decl
call
cmp
push
inc
icebp
pop
imul
mov
dec
ljmp
lea
insl
loope
imul
mov
xchg
les
sbb
incl
and
sbb
cmc
jo
mov
cmp
das
lahf
jmp
shlb
pop
loope
cmp
aad
sti
jns
inc
xor
aaa
sub
scas
xor
jmp
jle
lock
push
mov
pop
push
xor
inc
mov
pop
popf
loopne
push
es
decl
mov
repz
sbb
mov
pop
jmp
aam
mov
xor
and
cltd
pop
pop
push
aas
pop
adcb
sub
lcall
cmp
and
add
pop
adc
xchg
cmp
dec
push
inc
icebp
xor
pop
lret
sar
je
ja
mov
xchg
xchg
mov
decl
addl
pop
xor
inc
call
xor
jbe
mov
inc
xlat
or
jg
inc
popa
dec
inc
xor
push
lea
dec
test
les
sub
cld
xchg
bound
fildl
out
mov
aaa
xchg
pushf
or
or
inc
lret
sub
incl
ss
push
es
cmpsb
mov
add
stc
push
js
and
ss
ljmp
popa
pop
xor
mov
repz
test
mov
add
incl
or
adc
test
out
insl
enter
dec
imul
mov
rolb
pop
xchg
mov
sar
lcall
mov
and
pop
dec
push
adc
cltd
pusha
mov
adc
push
test
push
fs
adc
lcall
dec
push
outsl
repnz
sub
inc
cmp
pop
and
add
jne
sub
mov
cld
jmp
ss
add
out
rcll
data16
sbb
and
sub
decl
repnz
das
cs
push
test
rolb
dec
rclb
iret
push
mov
dec
xorb
mov
insb
in
push
sbb
ss
sbb
pop
lcall
sbb
addr16
dec
insl
out
fidivl
mov
mov
ljmp
mov
repnz
aam
mov
test
jmp
lds
mov
or
stos
mov
pop
push
cmc
inc
dec
xchg
mov
jle
sarl
outsl
ljmp
pop
imull
dec
shrl
inc
add
sti
icebp
sarb
inc
xor
cli
mov
jae
and
in
dec
xor
ret
pushl
jb
inc
imul
inc
pop
cmc
adc
movsl
add
cmp
lret
cmp
incl
in
hlt
inc
jecxz
rolb
add
rol
pop
adc
popa
bound
stos
lods
mov
sub
out
sahf
mov
cmp
and
out
push
cmp
pushf
pop
pop
inc
mov
or
add
test
push
stos
clc
loop
scas
outsb
mov
dec
xor
jno
jmp
sub
lret
push
mov
popa
gs
cmpsb
fldenv
lea
sbb
push
jbe
repnz
mov
and
ret
push
sub
jg
sbb
adc
mov
ljmp
jecxz
iret
cmp
std
jl
ljmp
ret
adc
push
push
insb
and
les
mov
inc
dec
cli
push
pop
dec
xchg
in
movsb
test
mov
push
mov
pop
movsl
imul
or
jmp
mov
adc
in
inc
outsb
mov
enter
filds
cmp
inc
or
stc
xlat
pop
sub
mov
sub
jo
jge
push
add
nop
hlt
jmp
ss
jae
or
roll
lahf
push
xchg
outsb
adcb
add
bound
cmpsb
push
out
stos
lcall
inc
mov
loope
xor
push
insl
out
repz
xchg
dec
push
mov
xor
pop
jae
or
mov
bound
cld
push
pop
rcrb
jp
dec
int3
xchg
sbb
lret
inc
xchg
adc
mov
addr16
loope
xchg
mov
xchg
inc
jl
imul
inc
aad
mov
push
pop
outsl
push
fdiv
jl
scas
fadds
pop
adc
xchg
sub
sub
aaa
fs
orb
xchg
fisttpll
adc
les
or
fstpl
dec
sub
cmp
aaa
push
fs
frstor
lds
mov
inc
mov
mov
out
jmp
jmp
and
jge
data16
lods
xlat
in
fcompl
in
les
mov
xchg
sarb
jmp
push
pop
leave
pop
jmp
adc
pop
outsl
sub
ret
jmp
ljmp
jmp
in
addr16
bound
inc
push
ja
out
insb
icebp
adc
push
cmpsl
sbb
dec
xor
mov
ja
push
insb
ja
pushf
mov
push
push
fidivrs
xor
push
cmc
adc
outsl
aaa
pushf
lret
in
jg
mov
mov
and
mov
mov
mov
cmp
dec
pop
cmp
mov
mov
insb
test
cwtl
jo
xor
jmp
mov
int
sub
jmp
jno
repz
ljmp
or
ss
test
mov
out
scas
shll
cwtl
or
sub
jae
or
rcrb
and
xor
mov
repnz
pushl
std
mov
mov
popa
into
inc
jne
add
xchg
sbb
fisubrl
orb
test
push
mov
or
xchg
into
jno
repz
pop
mov
sub
leave
jns
ljmp
js
cmpsl
daa
sbb
cltd
adc
int
bound
in
jno
andl
cltd
add
add
scas
in
sbb
mov
out
inc
int3
inc
mov
or
aam
clc
push
or
xchg
jb
sub
jb
sar
sbb
xor
lcall
adc
shrb
push
mov
or
ljmp
call
cmpl
loopne
mov
pop
and
cmp
clc
lahf
ljmp
ljmp
aaa
dec
lods
rcrb
mov
pop
cwtl
cmp
icebp
xchg
pop
ret
lcall
inc
dec
outsb
pusha
pop
lcall
fstpt
scas
ss
call
subb
mov
add
mov
mov
jg
jg
add
fs
scas
fldenv
cltd
mov
pop
jnp
push
mov
in
ljmp
hlt
lods
clc
push
xchg
push
mov
in
test
clc
in
shrl
or
mov
pushl
rorb
cmp
movsl
scas
out
in
pop
insb
imul
sbb
sub
and
xor
scas
jmp
shlb
add
push
or
sbb
push
insb
push
test
decl
mov
xchg
cmp
cwtl
inc
jo
cld
in
adc
fidivl
jb
pop
sub
jg
dec
mov
push
in
je
jbe
sbb
push
roll
pop
pusha
bound
lcall
lret
pusha
out
jno
jmp
sar
call
nop
rorl
out
call
loopne
scas
mov
mov
add
cltd
push
cmp
inc
mov
or
or
out
data16
es
lcall
mov
sbb
incl
bound
add
pop
xchg
mov
mov
lods
cwtl
incl
sbb
cmp
mov
scas
inc
add
mov
jbe
ja
cmp
std
mov
sub
test
push
dec
enter
std
dec
int
ss
fsubs
jge
adc
js
add
das
cli
incl
inc
mov
mov
adc
jbe
sub
js
int
push
dec
sub
jmp
mov
cmc
subl
xchg
mov
popa
xchg
jno
mov
push
int3
jmp
cmc
test
cli
mov
pop
dec
push
iret
push
pop
and
arpl
dec
add
lcall
decl
inc
push
jecxz
or
pop
loopne
les
fdivrp
and
std
add
jmp
push
enter
push
out
and
iret
lods
ret
or
pop
mov
or
hlt
cwtl
dec
mov
dec
ret
or
mov
mov
pop
sbb
cmpsl
jecxz
idiv
ljmp
inc
push
rcll
adc
inc
ret
and
fwait
cmc
or
xchg
ds
jno
daa
in
lcall
ret
dec
negl
fldcw
scas
sub
fcomps
mov
pop
xchg
incl
outsb
mov
pop
jmp
push
push
enter
push
icebp
lcall
mov
into
jnp
movsl
xor
xchg
push
pop
test
dec
outsb
dec
xchg
sbb
jnp
lcall
mov
mov
adc
subb
jnp
xor
shl
fldl
clc
decl
insl
arpl
cmp
repnz
fdivr
out
in
faddp
movsl
imul
fwait
mov
mov
xorb
pop
addr16
sub
call
sub
incb
and
push
mov
fcmovb
pop
loope
test
sbb
into
jg
lcall
aad
lock
mov
int
test
mov
xchg
test
ljmp
cmp
test
pop
pop
cltd
imul
jo
xor
shll
nop
icebp
decl
addr16
jge
aas
xor
inc
pushl
cmp
push
cmp
mov
mov
mov
cwtl
fcoms
mov
dec
push
jg
je
pop
aam
outsl
shrl
xchg
lock
push
stos
shlb
cmp
lret
xchg
mov
mov
ljmp
adc
je
cmp
outsb
in
jno
jae
sub
xchg
sbb
movsb
sub
mov
jp
cmpsl
xchg
pop
data16
pop
push
sbb
sar
incl
mov
push
sub
hlt
cmp
out
xor
cs
push
addr16
push
ds
out
add
lret
jne
jle
lock
push
push
add
push
pop
in
mov
in
mov
pop
or
lahf
int3
data16
push
dec
mov
in
push
inc
adc
pushl
adc
sbb
in
cmp
push
mov
inc
out
std
jg
sub
clc
mov
pushf
mov
and
call
jecxz
movsb
ljmp
fstps
lods
repnz
cmp
cmp
adcb
pop
sub
nop
push
aas
jl
call
cmpsb
ds
cwtl
fistps
imul
jecxz
cmpsb
ljmp
jmp
aaa
jbe
insb
inc
sub
ret
mov
or
fstpl
adc
mov
mov
outsl
ljmp
lcall
enter
mov
push
sub
pop
ret
repnz
add
mov
dec
insb
pop
fs
hlt
insl
ret
decb
test
mov
mov
cli
add
adc
int
je
and
mov
mov
out
or
dec
dec
je
dec
repnz
pop
cld
cmp
lcall
push
leave
push
cmp
dec
xchg
inc
mov
or
sbb
loope
and
or
decl
dec
xor
out
addr16
stos
inc
push
jae
xchg
lcall
fnstsw
lcall
ja
imul
ljmp
icebp
pop
xchg
aaa
shrl
or
push
shll
imulb
push
jbe
mov
stos
nop
or
lret
test
mov
sahf
inc
mov
lea
std
negl
in
rcr
mov
lcall
and
inc
or
scas
or
sti
aam
cmpsl
stos
jl
inc
incl
out
scas
xchg
outsb
in
cltd
xchg
cmp
test
call
cmpsl
js
std
mov
push
or
jl
test
xor
jmp
jnp
call
ffreep
lds
negb
ret
sti
pop
imul
sub
lcall
push
out
cmp
bound
shll
rcl
push
in
lcall
out
shll
jmp
out
ljmp
cltd
jmp
sbb
push
pushf
cli
data16
pushl
mov
jle
pop
xchg
pop
stos
sar
inc
mov
xchg
push
xchg
das
and
add
arpl
mov
pusha
mov
mov
jmp
ret
outsb
imull
nop
test
pushl
push
sbb
test
and
or
and
fwait
movsb
jge
jg
or
mov
mov
or
push
or
jmp
shll
das
cmpsl
inc
ja
cwtl
jmp
fnstenv
lret
iret
pop
cli
addl
jno
jl
dec
mov
pop
adc
ljmp
cs
in
dec
adc
inc
and
and
decl
sbb
and
adc
ljmp
int3
and
jne
mov
dec
and
sti
push
push
jmp
pop
sar
incl
insb
mov
lret
aaa
lock
pop
add
decl
mov
and
xor
sbb
lock
into
xchg
bound
mov
and
inc
mov
mov
inc
push
mov
sahf
cmpsb
cmp
ljmp
sbb
adc
mov
push
and
xchg
push
jecxz
or
sub
incl
xor
adc
scas
xlat
lds
pushf
inc
mov
push
andl
fsubrp
incl
jle
arpl
push
mov
mov
filds
mov
sub
hlt
leave
clc
ret
sub
mov
jmp
sub
cmp
add
mov
and
lret
sub
inc
call
xor
dec
push
outsl
sbb
jne
fs
andb
inc
cmpsb
xor
jmp
pop
loop
and
stc
mov
hlt
pop
cmp
movsb
xor
add
bound
push
insb
mov
pop
fcomps
fmull
dec
test
lret
xor
call
fisubs
mov
push
arpl
jp
mov
push
xchg
test
jge
inc
pop
cmp
ljmp
cmpps
lcall
push
mov
jnp
add
mov
bound
test
cmp
mov
pushl
mov
and
inc
cmpl
fadds
push
cmp
call
test
clc
jae
pushf
in
stc
pusha
loope
and
dec
inc
popa
sbb
shrl
and
lahf
jmp
repz
jecxz
mov
jmp
push
sub
rcrl
xchg
jne
mov
jecxz
or
push
mov
daa
and
pop
subb
add
shr
neg
fs
lcall
shlb
sbb
gs
add
cmp
mov
add
add
dec
fdiv
nop
scas
jns
pop
jmp
xlat
adc
rolb
push
mov
pop
test
push
or
adc
xchg
addl
out
cli
mov
pushf
fisubs
push
repnz
jmp
push
in
repz
xor
loop
xor
mov
inc
xchg
icebp
in
xchg
xchg
dec
cld
mov
loop
mov
sbb
sub
clc
pop
mov
fistps
mov
dec
comiss
pop
addr16
out
lods
addl
outsl
cli
jmp
jo
shrl
push
pop
insb
xchg
jmp
xchg
jge
sub
inc
addr16
in
mov
ret
inc
sbb
xorl
and
ljmp
fimull
push
add
pop
adc
nop
sti
add
ljmp
aaa
cmpsl
mov
mov
add
aam
pop
int
icebp
sub
inc
mov
test
sub
lcall
mov
mov
dec
neg
test
sbb
xchg
mov
mov
pop
sub
roll
or
xchg
cmpsb
mov
sbb
nop
call
dec
xchg
mov
shlb
stc
cmp
iret
dec
push
iret
icebp
pop
jns
push
jns,pn
mov
test
aad
jp
mov
inc
les
push
in
shl
insb
call
dec
ret
xchg
jbe
mov
pop
leave
mov
sub
pop
mov
das
xchg
push
lcall
fidivs
add
cmp
xor
lcall
loope
xor
clc
xor
inc
xor
arpl
dec
popf
inc
sarl
clc
nop
sbb
lcall
sub
pop
cmp
pop
pop
sub
out
push
cmp
aad
repz
pushf
jg
fwait
incb
xchg
data16
icebp
mov
inc
adc
incl
xor
pop
and
jb
bound
dec
push
push
xor
sbb
add
call
adcb
add
mov
icebp
es
leave
jg
dec
cld
and
lods
call
dec
lret
mov
xchg
ret
lahf
loope
inc
jne
fsubl
mov
pop
push
sbbb
scas
sub
es
cwtl
loopne
dec
xchg
and
jb
mov
adc
add
and
jmp
and
das
cli
mov
adc
mov
bound
pop
testl
and
andb
mul
sahf
mov
mov
push
cmp
pop
cld
bound
dec
cmpsb
repnz
xor
jb
lcall
mov
hlt
jg
rcrb
mov
rolb
cld
rolb
decl
and
mov
out
jle
fbld
lcall
out
fnstcw
fidivl
sub
ret
fcos
outsl
incl
call
fbstp
inc
mov
inc
xchg
nop
and
adc
lcall
jge
jns
lds
and
js
mov
cmc
lret
push
mov
mov
mov
rcll
mov
hlt
sub
setno
pushl
and
into
lret
int
loope
popa
addr16
xchg
stos
fistpll
ret
fstpl
fdivrp
cmp
lds
cld
cmp
push
insl
xchg
stc
movsl
adc
lds
sar
lcall
cs
fwait
push
mov
mov
sub
movsb
sub
out
in
push
decl
cs
xchg
sub
insb
pop
sub
lds
iret
adc
je
fisttpl
repz
ljmp
imul
cmp
test
cmp
fcompl
inc
mov
mov
adc
sub
sbb
call
dec
sub
sahf
pop
adc
dec
mov
ljmp
xchg
jnp
xor
addr16
adc
xchg
sub
enter
push
xchg
xlat
dec
call
push
int
add
mov
and
xchg
dec
jg
xor
icebp
mov
adc
mov
xor
aam
cmp
popa
icebp
xchg
mov
xchg
or
call
xchg
dec
mov
cmc
inc
les
in
out
ljmp
and
and
outsb
lret
push
pop
pop
out
xchg
xor
decl
scas
push
pop
daa
lea
jno
addr16
inc
mov
mov
mov
mov
sarl
cltd
mov
jnp
dec
mov
jo
pop
inc
add
clc
incl
xor
mov
test
cmp
aaa
cld
incl
mov
lock
movsl
jge
pop
and
jnp
call
stos
pop
jmp
mov
mov
mov
mull
cmpsb
add
enter
mov
xchg
and
pop
mov
hlt
adc
movsl
add
fildl
aaa
mov
divb
aam
daa
out
mov
ss
lcall
lea
push
loopne
and
sub
and
ss
pushl
mov
or
scas
insb
in
cmp
js
add
inc
addl
fsubp
cvtpi2ps
jae
cmp
imul
jae
cli
pushf
mulb
ljmp
and
cli
lahf
xlat
xchg
addr16
push
pop
mov
sub
xor
add
aam
cmpsb
int
je
cmp
incl
xor
mov
pop
stos
sub
fistps
cmpl
mov
sub
xor
fcmovnbe
lods
push
rcll
dec
add
and
mov
jne
fnsave
fnstenvs
lock
call
lret
out
lcall
mov
mov
int
jo
inc
popa
in
push
push
push
or
or
divl
xchg
and
inc
sub
xlat
sub
jno
rorb
out
clc
inc
std
inc
movl
dec
add
inc
outsb
mov
lcall
xchg
sbb
mov
stos
sti
sub
xlat
mov
push
cli
push
pop
dec
cmp
gs
mov
xchg
and
cmp
jmp
nop
xor
mov
push
rorb
outsb
jge
shl
jb
aas
sub
mov
xorl
sub
shll
jg
enter
inc
mov
enter
push
cmpsb
mov
xchg
pop
jmp
jg
jnp
push
imulb
call
les
loop
decl
jg
adc
repnz
popa
mov
pop
add
out
xchg
incl
xchg
xor
mov
lcall
loopne
call
loopne
pop
inc
inc
out
sahf
mov
testb
test
and
cmpsb
lods
test
dec
jns
add
xor
and
mov
jno
mov
sarb
nop
mov
cmpsl
mov
inc
incl
dec
in
addb
cli
fcomps
xchg
pusha
push
cmp
int3
adc
mov
sub
out
or
mov
ja
pop
push
and
mov
or
aaa
or
stc
or
rcrl
xlat
pop
inc
leave
xchg
mov
mov
inc
cmp
adc
repz
adc
decl
sub
or
fbld
int
push
lds
push
mov
xor
dec
ds
dec
shrb
in
hlt
ljmp
jg
inc
mov
aad
imul
ljmp
in
inc
and
aam
jno
insl
shl
mov
sbb
dec
xor
aas
outsb
incl
subl
es
in
adc
mov
int
lret
cmp
sub
sbb
scas
and
aas
mov
insl
in
scas
out
mov
sub
push
lret
outsl
nop
mov
rclb
dec
sub
add
jae
lea
sbb
add
fstl
push
add
inc
ret
lods
jecxz
jp
push
jno
clc
call
pushf
loop
aam
mov
out
stos
and
es
adc
sub
insb
test
loope
push
in
fdiv
add
dec
bound
call
or
ljmp
jmp
mov
aas
dec
or
test
into
mov
call
shrl
or
std
xor
inc
daa
addr16
fs
fwait
mov
lea
pushl
adc
mov
push
sub
mov
fsubl
cli
ljmp
repnz
sbb
scas
push
cmp
aad
fmulp
popf
mov
mov
movsb
jg
xor
test
fmuls
push
and
push
out
and
fidivl
mov
in
icebp
dec
mov
jnp
cmp
cmpsl
mov
jbe
push
jne
cmp
xor
test
xor
test
xchg
add
fdiv
std
adcl
iret
xchg
pusha
loop
sbbb
out
outsb
add
bound
sub
jnp
sbb
lcall
jecxz
jge
add
xchg
inc
in
call
ss
dec
xorl
loope
adc
pop
jne
aas
push
nop
loop
insl
push
xchg
push
sub
pushf
lcall
std
cmp
imul
mov
dec
cmp
xchg
add
incl
or
mov
popa
adc
inc
sti
cmpsl
sub
inc
fnstsw
hlt
sbb
lock
lahf
pop
dec
push
incl
outsb
xchg
push
jnp
test
jbe
stc
outsb
push
inc
test
lret
inc
mov
push
cs
fwait
and
pushl
cmp
sub
xlat
xor
sbb
fildl
lds
and
pop
fdivrs
mov
hlt
jmp
push
lahf
xor
ret
ss
xchg
cwtl
xor
incb
popa
lcall
inc
or
loopne
push
test
in
idivl
enter
fbld
dec
enter
push
lret
push
cld
and
push
dec
cmp
dec
sti
mov
sbb
push
call
or
jo
cmp
stos
notb
std
pushl
aaa
jecxz
or
and
mov
pop
int
push
cwtl
mov
test
push
fsts
jo
test
push
mov
lret
jg
dec
sub
and
mov
call
insl
or
ss
jmp
js
mov
lods
pop
mov
xor
cmp
cmp
push
jp
jle
mov
fptan
mov
cld
popf
push
jne
sbb
aaa
push
add
aaa
dec
movsl
adcl
pushl
jnp
sbb
adc
fisubl
mov
outsl
out
leave
or
loope
adc
fwait
dec
pop
jmp
lods
xchg
push
es
addps
lcall
sahf
add
ret
je
test
sub
loopne
in
add
sbb
and
cmp
mov
cli
and
ds
out
std
xor
fwait
inc
popa
sti
out
clc
incl
xchg
inc
lret
jge
mov
loope
inc
insl
adc
add
iret
repz
decl
sbb
pusha
push
jb
lods
push
xchg
ret
rorl
pop
jo
jae
imul
aaa
ret
mov
xchg
sbb
clc
nop
ficomps
in
or
rep
pop
push
mov
jg
icebp
xor
pusha
push
sbb
fcompl
data16
call
sub
fistpl
sub
inc
lds
call
inc
dec
movsl
call
lods
or
jg
fwait
icebp
in
push
fs
rcrl
js
jge
adc
popl
lock
mov
dec
sahf
or
adc
cmpsl
or
aas
lods
and
or
mov
outsl
cli
sarl
add
mov
or
or
sub
gs
cld
xlat
cmp
popa
jno
test
cmp
xor
shrl
pop
scas
fnstsw
mov
sub
in
mov
or
pop
out
sarl
aad
and
lea
push
ja
inc
punpcklbw
sbb
add
stc
and
xor
jg
mov
in
inc
jle
out
clc
stos
xor
stos
xchg
aas
mov
xchg
sbb
inc
jg
pushl
xchg
cmp
cwtl
sub
jne
es
pop
mov
jl
call
jns
in
nop
pop
dec
int
ss
lds
dec
shl
imul
add
frstor
xchg
add
xor
fwait
jo
add
mov
push
xchg
xor
push
push
sub
jmp
jb
pop
jge,pt
repz
fs
std
outsb
inc
inc
fdivrl
mov
xchg
fcoms
das
aam
jg
dec
gs
imul
mov
add
mov
mov
mov
ljmp
xchg
aad
iret
jae
inc
lahf
test
push
out
xchg
adc
xor
movsb
fs
loopne
fstpt
call
imul
dec
popa
cwtl
out
repnz
fbld
pusha
mov
push
sub
inc
mov
xchg
lret
xor
stos
scas
pushf
mov
aaa
dec
mov
push
addb
int
out
mov
mov
inc
shlb
mov
or
popf
sti
outsl
push
dec
out
in
in
out
clc
sar
insl
testb
out
inc
ss
inc
test
cld
out
cmpsb
mov
enter
mov
in
dec
xor
pop
arpl
iret
or
stos
adc
pop
or
adc
cld
pop
setge
ja
xchg
sbb
inc
out
out
xor
popf
inc
mov
mull
add
ja
lcall
pushf
mov
daa
fisubrl
jg
les
push
ss
cmp
pushl
jne
add
fmuls
adc
cmpsb
lret
jl
push
cmp
out
cwtl
inc
mov
dec
xchg
dec
ds
sbb
rclb
popa
lods
mov
into
in
idiv
decl
and
mov
insb
or
cli
mov
fcomps
xlat
pop
jge
push
jmp
cmp
aas
stc
rcr
adc
filds
rcrl
lahf
sbb
dec
std
fsubs
sbb
sub
clc
fnstsw
loopne
sub
fwait
movsl
xor
loopne
mov
pop
imul
jp
pop
pushf
sub
add
mov
and
pop
js
into
out
pop
xor
jmp
int
aas
and
test
mov
hlt
xlat
sub
add
gs
loope
mov
xchg
mov
lcall
add
into
mov
dec
add
push
sub
dec
xlat
pop
mov
pextrw
dec
push
push
pop
out
mov
push
nop
push
mov
fcoml
mov
push
mov
jno
out
xor
cmp
cmpsl
insb
ljmp
imul
xchg
inc
dec
sbb
movsb
add
xchg
ljmp
pushl
cmp
das
and
loope
inc
mov
jb
dec
mov
push
inc
push
sbb
fdivrl
lret
pop
sub
adc
sbb
jmp
scas
imul
push
xor
lods
sbb
or
xchg
jge
and
das
mov
jmp
xorl
stos
sub
lods
out
pop
pop
mov
sbb
fists
and
cli
mov
popf
xchg
or
movsb
push
sarb
jb
pushl
mov
jb
hlt
jl
inc
xor
ret
cmpsb
push
into
cli
xchg
jnp
xorl
fmul
test
call
hlt
jbe
cs
subl
ja
jbe
sar
jg
dec
cmp
adc
dec
mov
or
call
clc
std
jmp
incl
or
test
hlt
push
cmp
decl
and
inc
mov
fs
lcall
lea
jb
mov
mov
cmpsb
cmp
adc
dec
ret
loop
mov
sbb
jmp
ljmp
test
add
movsb
mov
andb
mov
pop
sub
adc
jp
call
cmp
lock
out
jp
push
shlb
pop
sub
push
out
push
push
test
loopw
js
dec
push
xchg
cmc
xchg
mov
scas
outsl
mov
lret
add
and
call
add
stc
or
stc
cmp
dec
imul
jg
adc
push
fsubrs
fsubl
sub
imul
movsb
jb
cwtl
mov
or
xor
incl
and
in
loop
add
in
xchg
and
jl
inc
dec
inc
cmp
push
mov
decl
lret
push
nop
mov
jns
push
addr16
mov
push
inc
loopne
pushl
leave
jge
std
rcll
xor
aaa
js
cmp
pop
sub
pop
mov
dec
xor
sbb
mov
xor
jb
mov
jns
mov
in
sbb
pop
notl
movswl
lcall
arpl
mov
jb
aaa
lea
jecxz
and
lcall
push
push
pop
push
lods
pushf
xlat
mov
mov
dec
orb
pushl
out
test
pop
pop
jne
test
push
push
dec
dec
adc
out
dec
call
mov
mov
dec
repz
es
push
insb
and
roll
rclb
subl
faddl
lret
jno
loop
subb
mov
int3
lret
mov
fndisi(8087
and
mov
nop
jmp
mov
pop
mov
mov
inc
pop
cmpsl
mov
out
mov
js
mov
sub
mov
dec
sarb
movsl
sbb
sbb
adcl
or
xor
xor
cmpsb
pushl
les
mov
jge
loope
and
xchg
sbb
mov
inc
pop
jmp
push
daa
cmp
jmp
cmpb
add
dec
andl
jmp
arpl
int3
add
mov
incl
cltd
sbb
fdivrs
clc
aam
pop
inc
jmp
ja
push
sbb
xchg
jbe
add
jo
lcall
popa
mov
rolb
pop
lret
adc
cwtl
shlb
add
ljmp
add
insl
jmp
mov
call
outsb
into
sbb
insl
mov
xchg
pop
stos
dec
add
or
pop
popf
mov
jo
lcall
dec
std
inc
adc
in
mov
mov
fcompl
incl
xchg
insb
mov
mov
sahf
and
pop
pop
push
das
sbb
out
andl
mov
shll
or
pop
fnstcw
mov
cld
pushl
outsb
repnz
scas
mov
fs
jg
adc
dec
adc
loopne
adc
mov
xlat
mov
ds
out
cmp
add
mov
mov
sbb
cmp
scas
rorl
mov
cmc
fwait
inc
fbld
jmp
xchg
movsl
jge
xchg
cli
add
sub
adc
ljmp
cmp
pop
daa
cmp
cmp
or
test
add
mov
scas
sub
sahf
jle
jb
sahf
sub
mov
sbb
jp
pop
addr16
aad
mov
pushl
les
mov
aas
or
int
sub
add
shlb
jmp
ret
mov
add
das
or
xchg
add
push
ds
int
jp
pop
mov
push
inc
cmp
inc
mov
jns
inc
cmc
stos
repnz
fadds
xchg
cmpsl
mov
mov
cmp
lcall
sbb
or
or
insl
leave
rorl
fs
xlat
mov
repnz
push
repnz
stos
dec
lret
sbb
notl
cmp
and
iret
rcr
xchg
sbb
mov
js
sbb
aad
xchg
push
push
std
pushl
pop
xor
es
subps
xchg
and
sbb
ljmp
pop
jns
xor
push
fcom
cli
test
ds
inc
sbb
mov
mov
ljmp
add
push
icebp
mov
jle
add
test
or
and
mov
jge
lret
ljmp
lcall
add
jmp
insl
in
lret
sub
push
xlat
or
mov
incl
out
daa
nop
adc
movsb
cmp
mov
lock
ret
lea
and
data16
jl
imul
xor
adc
sub
inc
sbb
call
loopne
cld
rcll
aas
popa
mov
push
push
cmp
adc
popf
xchg
sahf
dec
dec
cli
jg
lods
movsb
aam
in
dec
pop
call
or
cmp
lret
mov
push
std
out
jb
orl
lea
jb
dec
pop
push
bound
les
xchg
mov
je
mov
ljmp
ss
lock
push
dec
aad
pop
mov
push
jge,pt
scas
mov
dec
jge
mov
ljmp
cmpsl
pop
fsubrs
push
xchg
loope
mov
jecxz
inc
das
push
add
lahf
sbb
pop
mov
or
cmp
xchg
stc
mov
loopne
mov
test
xchg
cmp
inc
dec
and
mov
push
push
popa
mov
push
mov
shrb
jo
adc
mov
and
outsb
and
jno
jns
add
pop
fsubrl
imul
cmp
pop
or
push
or
xchg
push
or
jge
push
xor
and
js
test
mov
incl
pop
cmpsl
sub
test
mov
fisttpll
xor
xlat
jmp
rcr
scas
out
pop
test
std
and
ljmp
jb
frstor
cwtl
rolb
xchg
xchg
jecxz
mov
aad
das
das
pop
jbe
lcall
je
stos
das
popf
fbld
push
lcall
std
sbb
sar
call
sbb
pop
imul
mov
xchg
mov
jg
ret
iret
adc
push
fcompl
pushf
jae
ret
repz
adc
push
stos
mov
out
sub
and
jae
ljmp
popa
sbb
xor
mov
fnstcw
clc
jg
loop
dec
mov
repz
clc
and
mov
sub
adc
mov
sbb
ljmp
sbb
out
cmp
loope
scas
dec
xlat
sbb
cs
int
lods
sti
test
pop
mov
sbb
mov
lcall
ja
jecxz
jp
pusha
and
sbb
incl
xchg
mov
sub
xchg
fwait
and
sbb
mov
cmpsl
mov
sar
jmp
pmaxub
arpl
sarl
sti
xchg
inc
push
iret
popf
clc
adc
mov
sub
xor
lret
aaa
cmp
adc
push
inc
sub
shlb
incl
aas
daa
mov
jg
test
fs
clc
mov
movsb
dec
hlt
ljmp
bswap
mov
test
lods
into
push
lds
shll
xor
push
fsubp
mov
call
dec
push
cwtl
mov
rcll
lods
adc
in
push
arpl
mov
jae
xor
inc
cmp
add
jl
stos
mov
sub
dec
jmp
mov
fcomps
sti
out
or
adc
pop
xor
add
add
jmp
xor
aam
add
addr16
hlt
in
adc
lock
xchg
stc
sub
sub
xchg
adc
rcrb
jge
mov
mov
jg
pop
cmp
stc
lret
fdivs
cltd
in
or
push
je
rolb
lret
push
aam
push
nop
incl
push
inc
mov
lods
fdivrp
mov
sub
fwait
in
pop
loop
cmp
mov
jp
add
add
mov
mov
cmp
cmp
lods
mov
or
les
loopne
enter
ret
add
ljmp
inc
pop
idivl
mov
sti
mov
bound
or
inc
clc
aad
les
dec
cwtl
push
sbb
jl
ret
insl
in
fwait
out
lea
jae
dec
ljmp
subb
decl
add
ret
mov
stos
jl
xchg
and
rclb
add
push
je
insb
dec
sbb
insl
outsl
jb
sbb
jbe
dec
loop
inc
gs
dec
shrl
mov
push
jno
cwtl
and
std
js
push
inc
outsb
arpl
mov
in
xor
add
gs
adc
inc
dec
xchg
pop
push
jo
loope
lcall
enter
push
imul
ret
les
sbb
push
dec
imul
and
cwtl
jmp
ret
addl
mov
adc
dec
pop
or
sbb
pop
aas
mov
mov
or
jae
popa
inc
pop
and
mov
pusha
xchg
js
push
leave
xchg
bound
imul
fdivrs
adc
addb
pusha
or
aaa
sbbl
xor
outsl
sub
test
mov
adc
jg
push
and
mov
inc
dec
or
andb
sub
inc
inc
xchg
push
dec
adcb
stos
mov
pop
rorb
outsl
roll
adc
mov
adcb
sbb
sbb
adc
add
jnp
or
loopne
out
and
sub
cmp
call
push
test
adc
sti
mov
lahf
xchg
push
test
xchg
add
popf
push
adc
xchg
add
sub
out
rol
xchg
test
and
or
sbb
xchg
mov
scas
or
movb
inc
sub
dec
add
cmp
and
mov
int3
cs
or
nop
sbb
xchg
js
ss
je
jo
fcom
jle
push
jb
and
imul
incl
push
jns
outsl
outsb
imul
sbb
push
jae
and
mov
jno
mov
mov
xor
loope
push
inc
or
lahf
mov
daa
jno
add
popa
mov
inc
add
mov
andb
mov
fildll
or
pusha
inc
push
xchg
mov
out
inc
mov
and
pop
inc
mov
push
mov
xchg
or
push
inc
cmc
push
or
mov
sbb
sar
xchg
nop
mov
push
mov
inc
and
rorb
xor
subb
mov
ret
test
inc
mov
and
inc
rorb
stc
in
pop
push
add
mov
adc
and
add
decl
sub
fstl
mov
test
ja
adc
inc
roll
and
xor
or
mov
xchg
push
dec
pop
inc
cmp
movsl
subb
outsl
lea
mov
push
push
or
sarb
inc
push
dec
add
add
decl
loopne
popl
add
sbb
daa
imul
test
or
inc
inc
pop
add
testb
nop/reserved
les
insl
add
lea
pusha
cmp
sub
mov
push
add
jne
mov
jle
je,pn
js
shlb
dec
lcall
and
mov
inc
shlb
outsb
fs
je
pop
add
movd
in
lds
shrb
addb
ret
in
push
cmp
sub
push
inc
inc
push
push
clc
ss
inc
outsl
fs
mov
xor
cmpl
dec
jae
dec
fistps
in
mov
add
xchg
and
mov
add
add
incl
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
push
add
add
add
addb
add
add
add
add
add
add
add
add
add
dec
add
addb
add
jo
add
cwtl
add
addb
add
rolb
addb
add
add
add
add
add
add
add
add
add
pusha
add
add
and
add
add
add
add
add
add
add
add
add
add
mov
add
or
aas
add
add
add
add
add
add
add
add
add
add
mov
add
and
aas
add
add
add
add
add
add
add
add
add
add
fadds
add
inc
and
add
add
add
add
add
call
jg
jne
loopne
outsl
fistl
mov
xchg
aam
push
inc
add
pop
jne
loopne
outsl
fistl
mov
xchg
aam
push
inc
sbb
pop
jne
loopne
outsl
fistl
mov
xchg
aam
push
inc
xor
ds
stos
je
fbld
shl
mov
jmp
rcrb
add
pop
mov
notl
das
add
in
push
sub
dec
dec
pusha
adc
xor
ds
in
int
std
test
push
leave
sub
rcll
mov
and
stos
fidivl
mov
pop
xor
push
popf
mov
add
aad
sub
lea
jbe
cmp
sub
rolb
push
or
mov
nop
or
and
stos
popa
jo
xchg
test
or
ficoms
jnp
xchg
pop
in
nop
mov
sbb
fmuls
outsb
cmp
jb
cmp
out
ret
push
stos
ss
in
cmp
pushf
shlb
lock
in
cmp
push
mov
mov
outsl
rcr
ret
jo
jge
push
push
xchg
pop
sub
iret
popa
pop
pop
or
or
lret
fstpt
jle
aad
dec
stos
sbb
jmp
mov
push
scas
mov
mov
mov
adc
fisubs
mov
call
in
out
aad
rorb
fdivl
scas
add
fnstsw
mov
inc
lods
or
xor
shlb
arpl
xchg
faddl
pop
inc
imul
movsb
cmp
sbb
lahf
roll
addr16
adc
int3
jbe
popf
std
pop
push
adc
ret
mov
mov
mov
xchg
sub
mov
or
subl
shlb
movsl
xchg
or
push
pop
mov
cs
cs
shlb
inc
es
es
fistpl
inc
inc
mov
imul
loopne
in
inc
mov
jno
inc
mov
outsl
and
ret
xchg
jae
ffreep
enter
insl
pop
out
push
neg
stos
add
push
jo
fwait
and
fnstsw
insl
mov
ljmp
adc
rolb
cmp
sub
sub
dec
jle
mov
mov
push
sbb
inc
lods
inc
pop
jmp
out
mov
fisttpll
push
push
sbb
sub
inc
cmp
cmpsb
mov
in
mov
shll
lods
push
xchg
push
mov
adc
ja
mov
mov
js
mov
loopne
int3
xor
std
jne
adcl
and
test
jns
push
or
mov
stos
imul
daa
idivb
mov
jno
and
xor
bound
negl
es
xchg
push
inc
outsb
pop
inc
cli
mov
into
rcl
jle
lock
and
mov
cmp
nop
movsl
dec
push
cmp
mov
or
mov
lods
push
dec
dec
jns
sahf
push
loop
shll
das
mov
cld
out
mov
xchg
repz
xchg
movsl
pause
repnz
test
pop
or
mov
xor
mov
aas
sbb
popf
cwtl
out
mov
outsb
cmc
push
pop
jbe
add
repnz
cmovo
adc
push
mov
xchg
mov
push
xor
jle
pop
repnz
push
stc
lret
jo
mov
ss
dec
lock
jmp
lcallw
jecxz
dec
out
or
inc
cltd
lahf
sti
pop
lret
les
xor
xor
xor
pop
mov
loopne
jle
clc
cmp
repz
test
out
mov
push
sub
repnz
repnz
lret
repnz
sbb
sbb
clc
cmp
test
lahf
xchg
js
sbb
js
icebp
in
and
sbb
xlat
insl
cmp
int
inc
loope
dec
adc
pop
lahf
ffreep
enter
push
add
xchg
pop
hlt
scas
loopne
loop
cmp
mov
add
jno
sbb
mov
rorl
inc
fbstp
xchg
sbb
sbb
test
addl
lcall
fisubrs
jmp
fsubrs
push
lcall
orl
int3
fldenvs
adc
or
xor
xor
imul
scas
push
in
aam
icebp
insl
push
adc
xchg
mov
adc
subb
scas
adc
sbb
xor
push
enter
xor
xchg
mov
mov
sub
sbb
cmp
pop
dec
sbb
int3
out
fdiv
adc
jbe
aaa
sub
push
fcoms
add
add
es
add
add
int
aas
add
add
add
es
add
add
add
es
add
es
add
es
add
daa
aas
add
daa
aas
add
daa
aas
add
add
add
aas
add
add
add
daa
aas
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
gs
xor
ja
outsb
push
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
gs
imul
imul
jb
arpl
jb
