or
add
sbb
add
add
xor
add
add
push
popa
add
add
add
push
add
andb
lcall
add
add
add
popa
add
fisubs
add
popa
add
popa
add
adc
add
sub
add
bound
add
add
add
add
push
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
arpl
add
arpl
add
arpl
add
add
add
mov
add
fs
idivb
mov
cmp
add
fs
idivb
mov
cmp
inc
add
jb
mov
lret
adc
sub
inc
adc
test
aas
daa
xor
lret
lret
xor
lret
lret
inc
daa
xor
inc
subb
lret
pop
xor
sub
shr
inc
cmp
sub
sub
int
adc
lret
sub
out
sbb
inc
and
inc
mov
andb
mov
sub
lds
sub
dec
xor
aas
les
jo
add
stc
sub
cmp
fst
pop
fidivl
daa
out
mov
mov
add
sub
cmpsl
sub
sub
mov
xchg
inc
and
andb
xchg
test
add
int
inc
jo
xor
inc
add
sub
pop
sub
inc
mov
in
sub
or
sub
mov
inc
inc
add
sti
and
sub
mov
xor
xor
push
cmp
pop
lea
push
lea
or
add
sub
adc
sub
repnz
lea
add
mov
sti
xchg
sub
adc
mov
sti
push
sub
adc
fisubl
mov
inc
adc
adcb
adc
dec
das
int
sub
addl
jg
inc
sub
sub
sub
inc
adc
adc
repz
add
adc
adc
adc
inc
sarl
fstpt
jecxz
fstpt
fcompl
lea
xor
into
fsubs
xor
lret
ret
sti
cmpsl
sub
sub
inc
mov
inc
and
lods
jmp
cmpb
mov
add
xor
sub
adc
inc
mov
inc
and
lods
jmp
cmp
cmp
inc
mov
sub
dec
test
xor
decb
cmpsl
sub
sub
stos
inc
or
cli
sub
sub
add
adc
repz
xor
mov
sub
xor
xor
xor
inc
and
lods
in
subb
mov
sub
sti
subb
inc
mov
cmp
jecxz
sbb
or
int
xor
jecxz
xor
mov
sub
subb
xor
mov
test
pop
xor
jne
sub
int
int
jecxz
in
push
sub
adc
fwait
mov
sub
xor
hlt
jecxz
xor
subb
inc
mov
xchg
sub
sub
adc
cmp
jecxz
stc
adc
add
sub
lods
cs
and
inc
mov
mov
sbb
jecxz
aam
cmpl
adc
mov
and
or
or
sub
sti
jle
sub
subb
aam
inc
adc
adcb
mov
addb
andb
sahf
mov
bound
out
subb
sub
sub
sub
lods
icebp
cmp
inc
adc
mov
inc
mov
lods
jmp
cmpl
out
inc
les
in
xor
mov
xor
stos
xor
add
mov
sub
sub
bound
jb
lods
bnd
cmp
arpl
dec
sub
cmp
shlb
inc
rorl
sub
mov
adc
fstpl
cmpb
les
xor
mov
pushl
ret
sbb
jl
sub
stos
xor
stos
mov
inc
add
inc
dec
inc
mov
mov
lret
ds
lret
ds
mov
mov
and
aam
dec
cltd
mov
xchg
sub
sub
sub
stos
xchg
mov
sub
sub
sub
cmp
push
ficoml
cmp
sbb
fidivrl
sbb
mov
mov
sub
cmp
sbb
push
inc
inc
adc
sub
sti
add
sub
mov
sub
cmp
adc
insl
pop
sub
sub
ret
inc
stos
mov
inc
cmp
and
ret
cmp
and
mov
mov
inc
adc
inc
les
jns
sub
xor
sub
inc
mov
inc
stos
cmp
inc
mov
inc
stos
cmp
xor
pushf
inc
les
inc
mov
into
inc
aam
inc
dec
xor
mov
sub
inc
sub
sub
sub
cs
bound
and
and
and
jb
mov
and
les
push
mov
enter
pusha
sub
lret
and
pop
inc
sub
mov
mov
mov
mov
inc
and
inc
or
lret
cwtl
pusha
sub
lret
xor
adc
inc
mov
inc
and
inc
or
lret
pop
pusha
sub
lret
dec
cmp
and
stos
inc
adc
nop
stos
inc
aam
sti
xchg
pusha
sub
lret
or
fdivrs
inc
sbb
xchg
and
inc
aam
sti
pop
pusha
sub
inc
adc
lret
inc
push
adc
sub
sti
cmp
sub
sub
xor
mov
sub
les
mov
mov
inc
les
mov
pusha
std
mov
sub
and
sti
lret
insb
sub
inc
sbb
sub
sub
sub
sub
inc
mov
nop
iret
mov
lret
jmp
mov
sarb
in
cmpb
cmpsl
xchg
sub
xchg
sub
sub
sub
stc
inc
mov
sub
adc
and
stos
cli
or
lret
xor
sub
adc
inc
mov
inc
stos
stos
shrb
lret
mov
mov
sub
sub
sub
sub
mov
idivb
inc
mov
lret
cs
inc
inc
mov
in
cmp
sbb
sub
sub
and
stos
rcl
sub
pop
inc
mov
inc
stos
stos
cli
sub
sub
rcrb
sub
pop
inc
mov
inc
and
cmp
sub
sub
pop
inc
mov
sub
lcall
and
mov
mov
and
subb
inc
mov
sub
fdivr
dec
cmp
sub
mov
inc
stos
stos
cli
sub
sub
rcr
sub
pop
call
aam
add
sub
fdivr
repnz
push
idivb
xchg
cmp
fadds
idivb
in
idivb
call
fdivr
adc
cmp
shl
cmp
enter
xchg
idivb
inc
mov
fdiv
cmp
nop
mov
fdivr
into
idivb
cmp
inc
mov
fdivr
lods
idivb
cmp
fdiv
cmp
fdiv
cmp
fdiv
cmp
mov
decb
fdivr
push
cmp
xor
shrl
idivb
push
cmp
push
mov
and
mov
movsb
pop
sub
mov
sub
mov
sub
mov
sub
inc
mov
inc
sbb
cmp
push
fidivl
inc
mov
inc
mov
cmp
or
mov
inc
aam
sti
leave
and
sub
inc
pusha
xor
mov
bound
mov
sti
sub
sub
inc
mov
inc
stos
xchg
xor
adc
inc
les
mov
stos
stos
sub
jp
or
sub
inc
sub
cmp
xor
std
in
sub
inc
ss
sub
inc
cmp
and
xor
fwait
and
mov
sub
sub
idivb
adc
popf
dec
and
les
inc
mov
aaa
popf
push
and
les
inc
mov
idivb
dec
sub
idivb
dec
sub
idivb
imul
idivb
jns
sub
cmp
mov
popf
ss
daa
sub
mov
sub
idivb
inc
adc
cmp
or
sub
inc
mov
lret
imul
cs
xor
lret
push
stos
inc
sub
aam
xor
dec
insl
sub
xor
stos
jb
hlt
sub
pop
mov
inc
mov
nop
daa
nop
mov
mov
sub
pop
sub
adc
inc
mov
nop
mov
jle
sub
xor
nop
mov
mov
inc
mov
sub
sub
sub
xor
inc
mov
inc
stos
inc
sub
aam
inc
les
inc
fildl
repz
sub
cmp
lret
lret
nop
mov
mov
sub
lret
push
xor
sub
sub
xor
inc
mov
inc
stos
inc
sub
adc
sub
cmp
mov
xor
mov
xor
and
xor
lret
jo
inc
mov
les
add
inc
les
aas
inc
sub
mov
inc
aam
cmp
inc
les
mov
inc
mov
xor
sarl
sub
sub
xor
adc
cmp
add
sub
sub
sbb
scas
sbb
cmp
inc
int3
cmp
adc
and
dec
cmp
sub
sub
fldt
xlat
fildll
sub
or
sub
inc
dec
xor
repz
in
xor
sti
inc
cmp
pop
xor
repz
roll
sti
cmp
sbb
mov
cs
adc
inc
aam
sub
add
add
sub
push
xor
or
xor
sbb
sub
sub
ror
inc
lret
nop
xor
int3
sub
lret
push
adc
xor
sub
sub
xor
inc
mov
inc
stos
inc
sub
aam
inc
mov
inc
sub
sub
sub
mov
inc
les
mov
sub
cmp
shrb
aam
inc
mov
xor
mov
inc
mov
inc
lret
mov
inc
cmp
inc
mov
pushf
mov
push
inc
push
mov
inc
pushf
xor
inc
mov
inc
dec
add
int
dec
call
bound
aam
add
xor
add
lcall
sub
xor
sub
sub
sub
sub
cmp
sub
xor
sub
sub
popf
inc
sub
sub
xor
sub
sub
xchg
mov
sub
sub
hlt
or
inc
mov
dec
cltd
lret
repz
cltd
mov
xor
mov
sti
cmpsl
sub
sub
fdivs
dec
xor
adc
jo
xor
dec
cltd
push
inc
dec
cltd
fiadds
and
cld
inc
mov
xor
cmp
hlt
sbb
jo
xor
dec
cltd
faddl
and
addb
cmp
and
xor
in
sub
cmp
sbb
dec
cltd
faddl
mov
xor
and
push
loope
cltd
push
inc
dec
cltd
fiadds
les
sub
and
adc
imul
dec
cltd
lret
cltd
sbb
mov
xor
sti
pushf
aam
dec
das
in
sub
sub
loopne
stos
stos
add
nop
stos
out
mov
inc
add
add
shlb
nop
pop
cmp
dec
xor
mov
xor
sub
sub
sub
stos
stos
std
cmc
sub
sub
cmp
dec
cmp
sub
mov
cmp
or
dec
xor
sbb
xor
cmp
adc
scas
cmp
inc
xor
xor
sbb
inc
mov
sub
mov
xor
mov
sub
inc
cmp
adc
sub
sub
sub
inc
mov
sub
jb
and
cmp
sub
ret
sub
cmp
adc
inc
sbb
add
xor
dec
inc
ss
dec
inc
mov
dec
cltd
mov
sub
cmp
dec
inc
aam
inc
shrb
sub
sub
cmp
mov
add
cmp
inc
mov
lods
jmp
inc
xchg
lcall
mov
push
inc
aam
inc
les
nop
pop
std
mov
sub
nop
stos
pushf
adc
call
cs
stos
out
scas
xor
aam
add
add
sub
nop
stos
mov
inc
xor
stos
adc
rolb
xor
adc
inc
lret
hlt
sbb
cmp
adc
inc
aam
xor
mov
cmp
or
and
dec
inc
shrd
inc
sub
sub
pop
xor
inc
dec
xor
sub
sahf
xor
adc
inc
aam
sub
sbb
sbb
sub
adc
scas
inc
lret
aam
xor
loopne
stos
stos
mov
inc
mov
inc
stos
xor
add
lcall
shrl
sub
inc
aam
xor
sub
sub
push
sbb
adc
nop
stos
stos
std
movsl
sub
sub
sbb
adc
inc
mov
inc
out
xor
es
xor
cmp
sbb
and
nop
mov
les
push
mov
and
dec
cltd
inc
mov
pushf
cmp
adc
xor
mov
mov
sbb
stos
sub
sub
stos
cmp
dec
inc
stos
pop
sub
dec
sub
xor
mov
inc
stos
stos
fsubrs
lret
stos
adc
adc
inc
les
mov
cmp
inc
mov
inc
aam
xor
les
cmp
inc
les
mov
and
sub
std
movsb
sub
sub
mov
inc
add
add
fcoms
cmp
add
mov
movsb
pop
sub
mov
sub
inc
fstpt
sub
mov
sub
pushf
and
dec
xor
sub
pushf
and
dec
xor
sub
sub
sub
sub
fimuls
fisubrs
sub
inc
lods
mov
pop
pushf
sbb
dec
xor
xor
inc
mov
inc
or
xor
lcall
incb
adc
cmp
repnz
cmp
cmp
mov
nop
stos
inc
jmp
cmp
out
mov
int3
cmp
mov
mov
repnz
mov
push
adc
sbb
mov
mov
push
lods
mov
push
hlt
idivb
sub
xor
stos
inc
aam
into
lret
cmp
sbb
inc
inc
sub
mov
inc
inc
lret
mov
mov
sub
inc
adc
sbb
int
sahf
adc
inc
lret
dec
adc
inc
shlb
jp
dec
cmp
inc
lcall
stos
inc
les
int3
inc
les
sub
sub
sub
sub
lret
lret
mov
inc
lret
int3
xor
sub
inc
mov
cmp
sub
shrb
adc
fdivr
adc
sbb
xor
dec
cltd
mov
nop
mov
mulb
cmp
inc
inc
dec
inc
mov
mov
inc
lcall
scas
xor
lret
inc
inc
stos
xor
mov
sub
inc
mov
inc
mov
push
int3
inc
mov
inc
stos
xor
xor
sub
inc
mov
sub
mov
dec
cltd
mov
pushf
mov
push
outsl
inc
xor
mov
inc
les
int3
inc
les
sub
sub
sub
inc
les
sub
fsubrs
lret
stos
dec
xor
inc
mov
andb
sub
fdivr
leave
and
sub
mov
movl
sub
jo
sub
xor
xor
mov
inc
les
int3
sub
inc
les
sub
fsubrs
lret
push
jp
mov
xor
xor
adc
inc
mov
inc
mov
push
popf
sub
sub
cmp
fsubrs
xlat
mov
sub
add
sub
xlat
inc
les
mov
inc
mov
cmp
sub
out
cs
stos
call
sub
inc
add
int3
ss
cltd
lods
push
rcr
nop
sub
cmp
iret
adc
mov
pushf
in
push
inc
inc
fidivrl
xor
xor
pushf
in
push
xor
push
in
nop
stos
call
sub
inc
add
add
mov
and
mov
cmp
jmp
rcrb
inc
adc
idivb
call
or
sub
sub
and
sub
insb
sub
sub
popf
xorb
sub
std
mov
and
inc
in
nop
sbb
xor
sub
dec
xor
and
nop
sbb
mov
sub
add
and
mov
sti
testb
notb
negb
inc
and
notb
negb
inc
adc
testb
notb
testb
inc
adc
testb
notb
negb
inc
and
notb
negb
inc
adc
testb
notb
testb
inc
adc
testb
mulb
xor
cs
add
sarb
xor
inc
and
nop
sbb
inc
mov
sub
testb
and
mov
and
nop
sbb
inc
testb
sarb
scas
notb
adc
nop
stos
add
nop
stos
stos
call
cmp
aam
add
testb
cmpsl
jle
sub
testb
sub
nop
cmpsl
and
mov
daa
or
sub
mulb
fmuls
mov
sub
mov
mulb
aam
inc
fsubrs
xlat
inc
pop
nop
daa
testb
sarb
sub
testb
sub
nop
shll
mov
les
call
or
sub
cmp
movl
sub
mov
int3
fdivrs
sub
cmpsl
and
loopne
sub
inc
sbb
cmp
cmp
in
inc
mov
sub
shl
inc
sub
testb
sub
nop
mov
mov
mov
xor
sub
or
inc
xor
sarb
sub
test
adc
sub
cmp
inc
mov
loopne
daa
or
sub
inc
nop
lods
nop
mov
sarb
call
inc
add
mov
sub
cmpsl
and
iret
daa
sub
testb
jle
sub
testb
sub
nop
mov
sub
mov
fmuls
mov
sub
mov
mulb
adc
inc
push
sub
sbb
nop
fdecstp
inc
inc
lret
sub
mov
testb
sub
nop
shll
mov
and
daa
or
sub
loopne
xor
stos
stos
add
nop
stos
out
mov
inc
add
inc
mov
dec
cltd
cmp
inc
sub
cmpsl
xorb
sub
nop
mov
and
aam
mulb
mov
subb
inc
mov
idivb
dec
cltd
mov
mov
nop
daa
fwait
and
mov
stos
call
mov
out
scas
xor
aam
add
dec
inc
les
cmp
adc
mov
xor
les
cmp
cmp
jmp
scas
inc
sub
inc
add
inc
inc
les
cmp
adc
mov
xor
stc
in
cmp
aam
add
add
mov
sub
mov
sub
inc
adc
popf
adcb
je
sub
push
adc
dec
xor
sub
sub
fadds
cmp
ss
mov
xchg
xorb
cmp
inc
mov
xchg
xorb
sub
inc
mov
nop
lods
xor
inc
sub
sub
and
mov
inc
aaa
xlat
fildll
sub
nop
lods
cmp
add
mov
inc
in
nop
fstl
sarb
and
iret
sbb
inc
aam
inc
in
nop
int
fldl
pop
sarb
and
je
sub
shll
scas
inc
aam
dec
mov
mov
inc
mov
nop
lods
nop
int
xor
je
sub
lahf
jle
sub
mov
inc
mov
pop
mov
cmp
cmp
sbb
sub
xorb
loopne
mov
mov
inc
mov
nop
lods
inc
xchg
ss
sub
cmp
adc
dec
das
push
loopne
mov
inc
add
add
mov
and
les
cmp
sbb
and
or
cmp
inc
les
aas
push
mov
cmp
les
sub
cmp
inc
les
aas
cmp
cmp
xor
xchg
rcrb
fdivrs
adc
or
sub
xchg
sub
mov
sub
sub
dec
xor
inc
mov
mov
sub
inc
mov
nop
mov
mov
lret
daa
sub
mov
sub
sub
sub
dec
xor
std
mov
sub
inc
adc
nop
sbb
adc
sti
and
and
wbinvd
sub
dec
xor
inc
mov
nop
mov
adc
loopne
test
stos
pushf
mov
push
jle
mov
nop
mov
je
sub
adc
jecxz
mov
ss
sub
xor
cmp
mov
dec
inc
mov
nop
mov
mov
mov
inc
or
adc
mov
roll
sarl
mov
add
mov
inc
mov
inc
sarl
ret
sub
nop
mov
mov
lret
or
les
nop
leave
xor
cmp
adc
add
inc
mov
inc
les
xor
lret
inc
mov
inc
adc
sti
xor
mov
inc
fistl
jle
sub
inc
sarl
ret
sub
dec
xchg
mov
lods
inc
les
nop
leave
xor
mov
adc
dec
xchg
mov
jl
dec
sub
cmp
inc
inc
mov
nop
mov
mov
cmp
sti
inc
mov
nop
mov
cmp
sub
nop
mov
or
sub
dec
xor
inc
mov
nop
mov
dec
dec
xor
inc
repz
mov
nop
mov
cmp
sub
nop
mov
or
sub
dec
xor
inc
jmp
mov
nop
mov
cmp
sub
nop
mov
or
sub
dec
xor
call
inc
sub
inc
add
add
or
sub
cmp
adc
adc
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
cmp
int
mov
or
mov
cmp
adc
or
cmpsl
adcb
fsubrs
xor
xor
inc
les
nop
xor
cmp
dec
das
mov
inc
in
std
dec
sub
sub
adc
inc
nop
mov
mov
sbb
sbb
xor
nop
nop
mov
lods
inc
les
nop
movl
mov
sub
sub
add
or
xor
nop
iret
sbb
xlat
inc
mov
cmpb
aam
inc
mov
inc
mov
fildl
and
mov
mov
mov
les
mov
xlat
subb
or
mov
roll
sti
inc
mov
nop
mov
roll
push
push
inc
mov
inc
mov
fildl
and
lods
xor
inc
mov
nop
mov
roll
adc
mov
roll
mov
fistl
xor
je
sub
mov
inc
mov
fildl
sti
nop
mov
mov
xor
sti
repnz
sub
and
sub
cmpb
nop
mov
mov
and
out
sub
nop
mov
xlat
fildll
sub
sub
adc
mov
dec
xor
call
sub
inc
add
add
mov
sub
mov
sub
mov
sub
inc
mov
cmpsl
adcb
je
sub
lods
sbb
insb
mov
xor
sub
inc
sbb
adc
inc
mov
mov
sub
mov
sub
mov
sub
inc
aam
nop
xlat
xor
sbb
insb
aam
nop
mov
mov
sti
nop
mov
mov
xor
sub
inc
mov
nop
mov
mov
das
adc
sub
sub
shrb
sub
dec
xor
inc
mov
cmp
repz
sub
cmp
and
mov
inc
les
nop
xor
cmp
pop
inc
les
mov
mov
sub
mov
lock
xor
mov
xor
inc
mov
cmp
mov
mov
inc
mov
cmp
ret
cmp
and
and
sub
flds
mov
sub
sub
add
cmp
leave
cmp
je
sub
mov
les
les
inc
in
nop
out
or
xor
dec
mov
cmp
push
mov
sub
inc
in
inc
mov
jmp
sub
sub
xor
sub
mov
xor
inc
adc
inc
mov
dec
xchg
les
mov
mov
pop
inc
mov
inc
xor
inc
mov
dec
xchg
les
mov
xor
jle
sub
cmp
xor
loopne
stos
test
mov
add
nop
mov
jmp
inc
mov
mov
xlat
fildll
sub
lods
cmp
adc
inc
mov
add
sti
aas
in
sub
iret
rcll
sti
nop
movl
sub
mov
les
aas
mov
nop
xor
dec
mov
fisttpl
sti
inc
rcll
jle
sub
inc
les
nop
mov
movl
leave
mov
daa
sub
add
and
lds
sub
adc
sub
sub
sti
ret
and
sub
sbb
or
xor
jle
sub
nop
mov
mov
movsb
in
sub
dec
xor
loopne
out
scas
dec
sub
inc
add
sub
inc
or
stos
add
inc
mov
xor
fdivr
movhps
sub
push
inc
cwtl
inc
fildl
lcall
sub
lret
sbb
sbb
sub
xor
sti
mov
adc
inc
xor
lret
adc
sub
xchg
mov
stos
call
xor
inc
mov
add
aam
add
sub
mov
dec
add
dec
cmpsl
iret
idivb
sub
stos
aas
push
cmp
iret
adc
nop
mov
sub
sub
inc
xor
lret
cmp
shrb
sub
inc
add
inc
xor
dec
xor
sub
fmuls
mov
sub
xor
sub
sub
stos
push
mov
iret
insb
aam
fwait
xorb
sub
sub
cmp
and
nop
mov
mov
inc
xlat
and
dec
cltd
les
inc
in
inc
inc
inc
negb
cltd
cmp
and
mov
in
dec
cltd
pop
sub
inc
in
dec
cltd
pop
testb
push
sub
andb
nop
sbb
mov
cmp
sub
negb
sub
adc
dec
cltd
mov
adc
xor
cmp
sbb
sub
nop
stos
call
cmp
inc
les
sub
sub
nop
mov
les
dec
push
stos
add
aam
add
add
fadds
inc
mov
adc
nop
stos
std
mov
sub
subb
cmp
cld
pop
sub
inc
mov
inc
fsubs
mov
inc
cmp
sub
cmp
cmp
shrl
sub
cmp
pop
sub
sub
pop
sub
sub
sahf
sub
sub
loop
sub
cmp
es
sub
imul
cmp
sub
sub
inc
mov
lret
and
or
sub
sub
mov
sub
xor
inc
es
bound
push
out
xor
cmp
push
xor
adc
sbb
in
nop
loope
in
pushf
in
push
push
add
inc
aam
inc
and
dec
cltd
mov
adc
mov
inc
bound
aam
inc
mov
inc
aam
xor
xor
adc
mov
sub
cmp
and
sahf
sub
inc
mov
sub
and
adc
mov
cmp
xor
adc
inc
in
mov
in
mov
out
call
sub
stos
inc
mov
jns
sub
inc
movb
inc
mov
nop
mov
lods
inc
lods
mov
dec
lret
sub
sub
add
xorb
sub
sub
idivb
xor
mov
mulb
stos
idivb
sub
sub
mov
inc
sbb
lret
sub
sub
add
sub
cmp
stos
scas
aas
sub
sub
inc
aaa
lret
sub
sub
mov
add
sub
xor
nop
stos
fdivr
cmp
call
ds
sub
add
enter
inc
xor
stos
movsb
sub
sub
mov
ds
mov
sub
lods
sti
cmp
sub
scas
adc
sbb
out
mov
inc
add
sub
push
inc
stos
xor
inc
mov
inc
or
inc
lods
lcall
mov
sub
sub
adc
lcall
scas
xor
xor
aam
inc
scas
inc
aam
xor
mov
xor
sub
test
mov
add
inc
or
sub
inc
mov
inc
adc
xor
sti
inc
or
sub
repz
lret
movl
push
dec
inc
stos
cmp
mov
std
arpl
sub
cmp
adc
inc
mov
lret
adc
sub
jne
sub
sub
mov
sub
cmpsl
and
sub
cmp
sbb
adc
inc
mov
nop
mov
sub
jnp
jle
sub
lock
xor
mov
xor
inc
mov
cmp
sub
cmpl
inc
mov
cmp
sub
xchg
cmp
sub
sbb
pop
sub
sub
or
sarl
sub
dec
mov
cmp
sub
sbb
or
sub
mov
cmp
push
ret
mov
sub
inc
aam
inc
scas
xor
xor
sub
xor
inc
cmp
nop
fldcw
sub
adc
inc
mov
dec
xchg
les
nop
mov
cmp
sub
sbb
sbb
sub
nop
mov
adc
inc
mov
dec
xchg
les
nop
mov
je
sub
mov
dec
xchg
mov
xor
loopne
stos
test
mov
add
nop
mov
jmp
inc
xor
inc
dec
xlat
fildll
sub
lods
cmp
adc
inc
mov
add
add
aam
sub
iret
mov
sub
add
jle
sub
nop
mov
lods
adc
inc
mov
aas
les
nop
mov
mov
inc
mov
ret
mov
inc
mov
inc
fistl
jle
sub
nop
mov
leave
inc
dec
inc
dec
sub
xor
mov
daa
sub
inc
aam
sti
enter
mov
sub
sub
push
sub
inc
mov
lret
or
push
inc
stos
mov
stos
adc
sub
push
inc
les
addr16
sub
jne
sub
sub
mov
sub
cmp
sbb
adc
inc
mov
nop
mov
sub
pop
insb
jle
sub
lock
xor
mov
xor
inc
mov
cmp
sub
arpl
sub
imul
inc
mov
cmp
sub
sbb
pop
sub
sub
add
sarl
sub
dec
mov
cmp
sub
sbb
add
sub
mov
cmp
push
fwait
mov
sub
inc
aam
inc
scas
xor
xor
sub
xor
inc
cmp
nop
fldcw
sub
adc
inc
mov
dec
xchg
les
nop
mov
cmp
sub
sbb
adc
sub
nop
mov
adc
inc
mov
dec
xchg
les
nop
mov
je
sub
mov
dec
xchg
mov
xor
loopne
stos
test
mov
add
nop
mov
jmp
inc
xor
inc
dec
xlat
fildll
sub
lods
cmp
adc
inc
mov
add
or
aam
sub
iret
mov
sub
or
jle
sub
nop
mov
lods
adc
inc
mov
aas
les
nop
mov
mov
inc
mov
fwait
mov
inc
mov
inc
rcll
jle
sub
nop
mov
leave
inc
dec
test
sub
xor
mov
daa
sub
sub
inc
mov
xor
mov
mov
lret
or
sub
push
inc
stos
mov
stos
adc
les
sub
adc
int3
sub
std
stos
sub
sub
mov
hlt
push
sub
mov
mov
sub
cmp
sbb
adc
cmp
sbb
mov
cmp
xor
sub
lock
xor
mov
xor
inc
mov
cmp
sub
cmp
sub
inc
cmp
sub
dec
cmp
sub
sbb
mov
lods
xlat
fildll
sub
or
roll
sub
sub
sub
sub
add
fistl
sarl
sub
dec
mov
les
inc
les
inc
aam
nop
fldcw
or
xor
dec
mov
cmp
mov
sub
inc
aam
inc
scas
xor
xor
sub
xor
inc
cmp
nop
fldcw
sub
adc
inc
mov
dec
xchg
les
nop
mov
cmp
sub
sbb
push
nop
mov
adc
inc
mov
dec
xchg
les
nop
mov
je
sub
mov
dec
xchg
mov
xor
loopne
stos
test
mov
add
nop
mov
jmp
inc
xor
inc
dec
xlat
fildll
sub
lods
cmp
adc
inc
mov
add
or
aam
sub
iret
mov
sub
or
jle
sub
nop
mov
lods
adc
inc
les
aas
mov
nop
leave
xor
dec
mov
rorl
or
adc
jle
sub
inc
les
nop
mov
adcb
sub
xor
mov
daa
sub
inc
mov
xor
sub
lret
adc
sub
mov
cmp
sti
inc
mov
mov
fs
sub
loopne
mov
call
sub
inc
add
int3
inc
mov
xor
mov
sub
cmp
and
xor
inc
pop
inc
mov
inc
stos
cmp
inc
mov
inc
stos
cmp
xor
mov
xor
sub
lret
sub
xor
sbb
cmp
and
inc
mov
lret
adc
sti
ret
sub
and
xor
mov
inc
les
cmp
mov
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
push
mov
push
push
lea
call
mov
pop
leave
ret
push
mov
sub
movl
push
movl
cmpl
jbe
mov
add
mov
mov
or
lea
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
push
pushl
call
mov
dec
mov
jmp
mov
mov
or
mov
mov
movl
lea
mov
movl
movl
mov
mov
mov
push
mov
and
mov
mov
xor
push
mov
add
jmp
orl
adcl
andl
mov
mov
xor
add
mov
mov
xor
mov
movl
movl
mov
test
jne
mov
mov
xor
mov
lea
mov
sub
mov
mov
xor
add
incl
cmpl
mov
jb
movl
cmpl
jl
mov
or
mov
xor
mov
and
mov
lea
mov
mov
mov
xor
mov
add
mov
movzwl
mov
mov
xor
xorl
lea
xor
cmp
jne
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
movl
mov
test
jne
mov
mov
mov
cmpl
jne
mov
mov
xor
mov
movzwl
add
mov
mov
incl
shll
mov
mov
mov
and
mov
mov
mov
mov
cmp
mov
mov
sbb
mov
mov
dec
movzbl
and
not
and
mov
mov
lea
movl
cmpl
jl
mov
or
mov
mov
mov
dec
mov
mov
mov
mov
sub
mov
jmp
mov
sub
mov
mov
mov
mov
sub
mov
add
xor
mov
cmp
mov
jne
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
mov
mov
mov
mov
movzwl
sub
mov
mov
push
push
push
push
push
pushl
call
mov
mov
test
adcl
mov
add
push
pushl
mov
test
andl
adcl
andl
call
mov
mov
jmp
cmp
je
mov
xor
mov
mov
movl
cmpl
jl
movzbl
xor
mov
mov
xor
xor
add
xor
lea
cmp
sbbl
div
movl
shl
mov
pushl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
mov
mov
xor
xor
lea
xor
mov
cmp
jne
mov
xor
xor
add
cmp
adcl
lea
div
shl
mov
pushl
pushl
call
movzwl
sub
mov
mov
xor
lea
xor
mov
mov
test
mov
mov
sbb
push
xor
test
mov
sbb
pop
div
cmp
jbe
movl
cmpl
jbe
movzwl
xor
lea
mov
mov
movzbl
and
movzbl
mov
adc
mov
mov
mov
xor
xor
lea
xor
mov
cmp
jne
mov
cmp
jne
lea
mov
jmp
cmp
jne
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
test
je
mov
mov
add
jmp
cmp
jne
mov
mov
mov
mov
mov
mov
lea
mov
addl
call
mov
mov
jmp
movl
cmpl
jb
mov
mov
imul
mov
sub
cmpl
jl
mov
xor
jmp
mov
and
mov
mov
mov
xor
mov
or
mov
mov
xor
xor
sub
sub
xor
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
mov
mov
mov
sub
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
xorl
subl
push
movl
cmpl
jb
mov
and
mov
mov
sbb
push
mov
cmp
mov
sbb
mov
xor
mov
cmp
sbbl
add
cmp
je
mov
mov
rcl
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
and
mov
mov
mov
add
cmpl
je
mov
add
mov
pushl
pushl
mov
mov
pushl
call
movzbl
add
mov
mov
mov
xor
add
mov
movzwl
sub
mov
mov
xor
add
mov
mov
jmp
mov
xor
movl
cmpl
jle
movzbl
or
mov
mov
sbb
pop
orl
add
pop
leave
ret
push
mov
sub
push
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
movl
cmpl
jg
mov
addb
mov
mov
and
movl
mov
xor
mov
movl
mov
push
push
mov
cmpl
ja
mov
sub
jmp
mov
or
mov
or
xor
mov
add
mov
movl
call
test
je
call
mov
mov
mov
sub
mov
mov
xor
add
mov
mov
movzbl
or
mov
movl
mov
mov
mov
xor
movl
mov
mov
mov
test
movzbl
adc
xor
add
mov
xor
mov
mov
mov
movl
movl
movl
lea
mov
mov
movzbl
sub
movl
lea
mov
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
mov
movl
cmpl
jb
lea
mov
lea
mov
mov
mov
mov
or
mov
add
xor
xor
mov
add
sub
mov
cmp
je
mov
mov
movzbl
add
mov
xor
xor
add
mov
sub
mov
add
imul
mov
mov
cmp
movzbl
mov
adc
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
sbb
mov
mov
movl
movl
cmpl
jle
mov
mov
adc
mov
mov
mov
adc
mov
mov
and
add
lea
mov
mov
xor
add
incl
cmpl
jne
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
mov
mov
xor
movzbl
xor
sub
sub
mov
mov
movzwl
or
mov
xor
add
cmp
jne
mov
cmp
mov
mov
sbb
movzbl
xor
lea
mov
movzbl
xor
add
mov
jmp
xor
inc
mov
xor
mov
and
mov
lea
xor
imul
inc
mov
cmp
jne
mov
jmp
movl
cmpl
jbe
mov
rclb
lea
mov
mov
mov
adc
movzwl
mov
add
mov
mov
mov
xor
add
ror
xor
mov
or
mov
mov
xor
lea
xor
mov
cmp
jne
cmp
mov
mov
adc
mov
mov
xor
add
imul
xor
mov
test
mov
mov
adc
mov
xor
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
mov
xor
mov
and
mov
xor
mov
sub
add
cmp
jne
mov
cmpl
jle
movzbl
sub
mov
jmp
mov
mov
adc
mov
add
xor
add
pop
pop
pop
leave
ret
push
mov
push
push
movl
movl
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
movl
movl
cmpl
jbe
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
mov
rcrb
mov
mov
pushl
lea
push
call
call
test
je
mov
cmpl
jne
mov
adc
mov
jmp
mov
sbb
mov
or
mov
xor
mov
addl
jmp
cmp
mov
mov
sbb
mov
mov
mov
mov
mov
lea
cmp
movzwl
adc
mov
mov
mov
add
mov
mov
mov
leave
ret
push
mov
push
push
cmp
movl
movzbl
not
mov
movl
mov
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
xor
add
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
ret
push
call
add
pop
jne
mov
push
pushl
call
movl
ret
movl
ret
push
mov
push
push
cmp
movl
movl
mov
jne
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
cmp
mov
adc
mov
xor
add
leave
ret
push
mov
sub
mov
movl
movl
movl
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
mov
push
movl
cmpl
ja
mov
and
mov
movzbl
sub
mov
push
mov
push
lea
mov
addl
xorl
pushl
pushl
call
mov
mov
mov
or
xor
mov
add
cmp
je
mov
jmp
push
pushl
push
pushl
call
cmp
movzbl
mov
adc
mov
lea
mov
mov
mov
add
cmp
lea
mov
mov
mov
sbb
mov
xor
cmp
jnp
movzbl
mov
sbb
mov
jmp
mov
mov
adc
mov
mov
or
mov
pop
add
pop
pop
leave
ret
push
mov
push
mov
push
movl
cmpl
jb
mov
movzbl
sub
mov
mov
mov
sub
mov
lea
mov
mov
movzwl
xor
mov
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
push
lea
and
mov
mov
imul
imul
mov
lea
and
mov
or
xor
cmp
jne
mov
mov
jmp
cmp
jne
mov
mov
jmp
cmp
jne
mov
mov
mov
mov
xor
xor
movl
cmpl
jbe
xor
lea
xor
mov
imul
mov
and
mov
xor
add
mov
imul
lea
and
mov
or
cmp
jne
pop
pop
leave
ret
push
mov
push
push
pop
cmp
jne
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
call
cmpl
jb
mov
test
jne
movl
cmpl
jb
movzwl
rcl
mov
mov
and
mov
mov
dec
mov
mov
push
push
lea
mov
push
pushl
pushl
call
add
mov
jmp
cmp
jne
mov
pushl
push
push
push
push
pushl
pushl
call
add
dec
jne
pop
pop
ret
push
mov
sub
call
cmp
jne
xor
leave
ret
movl
lea
movl
mov
call
movl
movl
orl
addl
mov
lea
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
pushl
push
call
cmpl
jb
mov
call
movl
cmpl
jle
mov
mov
mov
mov
mov
mov
xorl
addl
andl
lea
mov
call
test
je
call
mov
mov
cmp
sbbl
mov
mov
lea
mov
mov
mov
xor
mov
mov
xor
mov
mov
mov
add
mov
mov
jmp
push
call
push
mov
sub
mov
mov
sub
mov
movzbl
mov
sub
mov
mov
and
leave
ret
push
mov
sub
movl
movl
mov
cmpl
jnp
lea
mov
mov
movzbl
add
jmp
mov
movzwl
add
mov
movzwl
mov
add
mov
mov
movl
cmpl
jne
mov
and
mov
andb
mov
and
mov
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
mov
add
mov
movl
mov
xor
add
mov
mov
mov
lea
push
mov
xor
add
mov
push
pushl
add
pushl
push
push
mov
mov
sub
mov
mov
pushl
pushl
call
add
leave
ret
push
mov
sub
movl
movl
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
mov
movl
cmpl
jle
mov
movzbl
sub
mov
mov
mov
xor
mov
mov
sbb
mov
mov
mov
movzbl
mov
sub
mov
mov
mov
mov
mov
movzbl
sub
mov
mov
xor
push
mov
mov
or
add
mov
cmp
lea
mov
mov
mov
sbb
mov
mov
mov
push
movzbl
xor
pop
sub
orl
add
cmpl
mov
mov
pop
jne
mov
xor
add
leave
ret
push
mov
sub
mov
mov
movl
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
movl
movl
cmpl
jl
movl
mov
mov
movzwl
mov
or
mov
push
push
mov
mov
cmp
movzwl
adc
mov
xor
xor
sub
mov
mov
mov
mov
add
mov
mov
movl
mov
xor
mov
test
mov
adc
add
push
mov
mov
orl
mov
mov
add
mov
imul
mov
movl
mov
mov
or
addl
mov
mov
xor
lea
movzbl
xor
mov
mov
xor
mov
add
cmp
movzbl
adc
mov
mov
xor
movzwl
add
cmp
ja
movl
mov
add
mov
movl
cmpl
jae
mov
movzwl
adc
mov
cmp
jns
mov
movzbl
sub
mov
jmp
mov
mov
add
mov
mov
mov
adc
mov
mov
mov
xor
mov
add
mov
movzwl
cmp
jne
mov
mov
subl
andl
andl
xor
add
imul
mov
mov
mov
push
call
test
je
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
push
pushl
pushl
pushl
call
cmpl
jb
mov
movl
cmpl
jg
movzbl
add
xor
add
test
movzwl
adc
movzbl
push
mov
mov
xor
add
imul
mov
mov
cmp
addl
orl
sbbl
call
test
jne
mov
mov
xor
add
imul
movzbl
or
mov
movzbl
mov
sub
xor
movzwl
push
mov
mov
call
test
jne
movl
mov
mov
sub
mov
xor
lea
mov
xor
xor
xor
xor
mov
lea
mov
subl
add
movzwl
cmp
mov
jbe
jmp
movl
cmp
lea
mov
mov
movzwl
adc
mov
mov
xor
cmp
sbbl
xorl
adcl
xor
lea
xor
movzwl
add
mov
mov
xorl
mov
mov
jmp
andl
adcl
andl
subl
andl
xor
add
imul
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
mov
movzbl
movl
cmpl
jge
mov
mov
sub
mov
sbb
mov
add
mov
mov
sub
xor
cmp
je
addl
mov
mov
cmp
je
andl
mov
xor
sub
add
mov
mov
and
mov
mov
imul
mov
jmp
mov
xor
sub
add
mov
addl
movzwl
mov
or
mov
mov
mov
xor
add
cmp
je
addl
jmp
mov
mov
and
mov
mov
mov
xor
lea
mov
jmp
movl
cmpl
jae
mov
add
lea
mov
mov
mov
sub
orl
mov
imul
mov
mov
cmpl
jnp
mov
add
jmp
mov
mov
sbb
mov
add
mov
xor
add
cmpl
jne
movzwl
sbb
mov
jmp
movzbl
add
mov
xor
mov
xor
cmp
pop
pop
pop
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
xor
add
mov
cmp
mov
jne
mov
xor
mov
sub
mov
mov
sub
add
mov
mov
mov
mov
leave
ret
push
mov
sub
mov
mov
push
cmp
mov
mov
sbb
mov
push
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
call
cmpl
jb
push
movl
cmpl
jge
movzbl
mov
adc
mov
movzwl
mov
sbb
mov
mov
mov
sub
mov
mov
xor
movl
mov
add
movl
mov
mov
mov
mov
xor
mov
mov
xor
add
mov
mov
mov
movzwl
xor
mov
mov
mov
mov
mov
cmpl
jle
lea
mov
mov
mov
and
jmp
movzbl
mov
adc
mov
movzbl
mov
sub
mov
mov
lea
lea
mov
mov
mov
or
mov
mov
mov
lea
mov
movzbl
mov
and
mov
mov
mov
lea
mov
movzbl
xor
mov
mov
mov
mov
lea
lea
mov
mov
mov
add
mov
mov
mov
lea
mov
movzbl
and
mov
mov
pushl
cmp
mov
adc
mov
mov
push
add
cmp
sbbl
xorl
mov
push
lea
push
mov
movzwl
or
mov
mov
mov
orl
subl
movl
mov
pushl
pushl
call
mov
add
push
call
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
call
mov
dec
mov
jmp
mov
movl
cmpl
jae
cmp
jnp
mov
adc
jmp
mov
xor
movzbl
xor
mov
mov
mov
xor
xor
lea
cmp
je
mov
mov
mov
add
mov
xor
add
mov
mov
lea
mov
mov
mov
or
mov
mov
xor
add
mov
pop
pop
pop
leave
ret
push
mov
push
push
mov
movl
movl
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
mov
cmp
jne
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
call
cmpl
jb
mov
movl
cmpl
jbe
mov
xor
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
call
push
jmp
cmpl
jne
movl
xorl
orl
push
pushl
pushl
pushl
call
mov
mov
sub
mov
lea
mov
mov
mov
mov
cmp
jbe
mov
add
jmp
mov
sub
lea
mov
mov
mov
sbb
mov
add
pop
mov
mov
test
mov
mov
sbb
mov
mov
xor
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
mov
dec
mov
jmp
mov
movl
cmpl
jbe
mov
xor
leave
ret
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
ret
push
mov
sub
mov
movl
movl
movl
movl
cmp
adcl
lea
mov
lea
mov
lea
mov
lea
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
push
call
mov
dec
mov
jmp
mov
mov
movl
cmpl
jae
mov
push
push
push
movzwl
mov
and
mov
add
cmp
mov
mov
adc
mov
mov
add
mov
mov
add
mov
mov
movl
mov
mov
cmpl
jne
movl
mov
mov
movl
jmp
cmpl
jne
mov
mov
xorl
addl
add
mov
mov
cmp
ja
mov
mov
xor
inc
xor
mov
cmp
jne
mov
mov
cmp
je
add
xor
mov
mov
cmp
je
cmpl
jne
cmp
je
cmpl
je
cmpl
jne
mov
jmp
movl
cmpl
jbe
mov
addl
xor
xorl
subl
orl
add
cmp
jae
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
mov
mov
xor
mov
movzwl
mov
xor
mov
mov
dec
cmp
ja
mov
cmp
mov
adc
mov
addl
mov
andl
xor
add
imul
movzwl
mov
lea
push
mov
xor
add
imul
mov
mov
add
push
pushl
movl
cmpl
jl
mov
sbb
mov
mov
call
cmpl
je
cmp
mov
mov
adc
mov
mov
mov
xor
inc
xor
mov
mov
jmp
mov
mov
or
mov
mov
add
movl
subl
xor
mov
mov
cmp
je
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
xor
mov
add
mov
mov
mov
movzwl
add
mov
imul
mov
mov
mov
mov
mov
imul
xchg
dec
dec
cmp
jne
mov
mov
mov
xor
cmp
mov
mov
sbb
lea
mov
mov
add
add
mov
subl
mov
add
dec
jne
jmp
movl
cmpl
jl
mov
test
mov
adc
mov
mov
call
mov
jmp
mov
movzwl
add
mov
xor
pop
pop
pop
leave
ret
mov
mov
add
lods
mov
mov
imul
mov
xchg
mov
shlb
mov
js
cmpsl
lock
cs
push
xchg
popf
iret
pop
mov
test
mov
int
add
subb
xchg
ljmp
jg
gs
xor
cmp
repnz
dec
imul
xchg
and
and
push
pop
ss
out
push
xor
adc
cwtl
frstor
xor
adc
ja
ficoml
sbb
jecxz
and
call
pop
cmp
test
in
mov
loop
xchg
std
cmp
push
mov
push
add
cmp
dec
push
loopne
mov
adc
nop
sbb
mov
test
add
inc
fists
xchg
and
fstps
addb
add
insb
in
jb
aad
stc
add
mov
mov
das
jae
fwait
lea
hlt
aaa
loopne
std
cmp
fimull
inc
fimull
sar
in
je
popa
out
adc
jbe
adc
xchg
cmc
je
clc
dec
sub
cmpsb
sub
jae
pop
mov
in
mov
outsl
lahf
add
add
dec
out
in
mov
loope
lds
mov
out
dec
mov
mov
push
repz
xchg
ror
imul
lds
cmpsl
pop
arpl
jnp
jmp
inc
push
aaa
ret
jns
mov
sti
dec
and
sub
jmp
sub
in
out
adc
je
mov
inc
or
mov
test
mov
cmp
test
mov
cltd
inc
pop
adc
and
push
scas
dec
xchg
and
bound
xorl
mov
cltd
scas
jl
sub
push
and
or
test
pop
fnstenvs
outsb
jp
sti
jp
sbb
mulb
addr16
push
lea
addl
mov
inc
xor
push
iret
insl
dec
mov
mov
cmp
lds
mov
sub
subl
mov
sahf
xchg
xor
in
pop
test
cmp
mov
movsl
and
in
fstl
jae
cmp
jecxz
inc
jo
xor
arpl
sub
sbb
mov
fisubl
xchg
push
pop
rcl
push
sbb
dec
push
test
push
add
dec
and
mov
or
and
loope
repnz
addl
movsl
gs
sub
inc
fs
shrb
sub
push
loopne
hlt
ja
and
scas
xchg
pop
movsl
fnstsw
xchg
xchg
push
loopne
cs
jno
push
inc
iret
mov
xchg
jae
jecxz
adc
xchg
clc
lret
xor
fmuls
push
stc
adc
les
xchg
push
pop
or
sub
mov
jae
mov
out
aas
mov
fisubl
ds
xchg
fidivl
loop
push
pop
mov
scas
dec
push
jae
cmp
dec
in
sbb
adc
cmpsl
mov
add
mov
ffree
test
das
imul
add
rcrb
mov
ds
dec
fwait
mov
scas
cmp
fucompp
std
addl
and
ret
mov
fdivrl
out
clc
test
popf
add
movsl
adc
mov
sub
jmp
cmp
mov
loop
aaa
stos
mov
mov
in
out
xor
push
ret
out
js
jge
or
push
jp
adc
jl
jle
cltd
test
stos
scas
sub
fdivrs
cmpsb
hlt
lahf
jae
shll
ljmp
or
cmp
mov
push
and
push
sub
mov
jp
sub
out
cmp
jecxz
xchg
jmp
cmpsb
pop
out
sbb
and
dec
ret
pop
sub
and
into
je
cld
mov
test
lds
imul
cmpsl
pop
mov
add
jle
movsb
adc
xchg
mov
sub
std
orb
sbb
xchg
mov
pop
filds
mov
add
inc
out
mov
jo
ficoml
imul
cli
mov
jb
pop
adc
xchg
mov
mov
pop
lret
lcall
xchg
xor
mov
stos
lea
popl
adc
pusha
out
push
stos
adc
icebp
dec
neg
cltd
xchg
enter
pop
jg
mov
push
call
mov
mov
inc
lret
fildll
sub
mov
inc
sbb
leave
movsb
fsubr
inc
dec
push
dec
mov
inc
and
xor
xor
lods
mov
rcr
iret
aas
shrl
sarb
inc
enter
stc
cmp
das
aad
add
int3
push
aas
lahf
imul
arpl
sub
je
mov
mov
movsl
xchg
mov
ljmp
scas
hlt
notb
dec
cmc
sbb
nop
xor
mov
dec
inc
and
nop
addr16
or
outsb
mov
stos
mov
daa
data16
jp
js
push
lret
sbb
or
sub
mov
aam
sub
sub
int
xchg
mov
mov
jnp
push
fsubs
cmp
xchg
mov
jae
mov
xchg
imul
movsb
sbb
daa
dec
ror
std
lds
push
pop
dec
dec
mov
stos
loop
pop
and
pop
lea
pop
sbb
lret
push
fs
add
push
shll
mov
out
mov
rcrl
hlt
push
mull
xchg
xchg
jecxz
pop
push
or
push
sahf
sbbb
ljmp
jb
not
je
dec
lcall
and
mov
arpl
mov
or
cmp
loope
call
repnz
sbb
add
sar
ret
cmp
imul
pusha
loop
outsl
pop
xchg
sbb
outsb
out
xchg
mov
xor
fwait
mov
ret
pop
ja
mov
into
jae
lahf
jno
jo
sub
cmp
scas
xorb
hlt
and
pop
out
incb
pop
dec
jg
test
adc
add
pop
push
mov
xor
into
and
fistl
dec
xor
test
ds
xor
xchg
jo
or
inc
push
sahf
add
sbb
mov
mov
xchg
andl
jge
dec
pop
sbb
and
scas
push
ljmp
fstps
movsb
fsubrl
cmc
nop
push
inc
xchg
les
push
repnz
push
xchg
and
pusha
cvttps2pi
je
sbb
sbb
imul
lods
fistpl
outsl
xchg
sahf
inc
lret
fstl
movsl
int
mov
aas
pusha
mov
mov
xor
mov
loopne
jge
push
shld
jb
pop
popa
jno
sub
test
push
scas
fstpl
jb
sahf
rol
ljmp
sbb
push
daa
jo
pop
mov
lret
jge
lea
pop
scas
inc
jno
sbb
js
fisttpll
push
mov
sbb
icebp
sbb
dec
jb
xor
sub
das
in
mov
iret
movsl
add
jecxz
mov
lea
cmpl
js
int
fstl
cmc
lds
pop
sub
push
jp
int3
jl
int
pop
movl
insb
add
test
pushf
out
push
cmp
cmp
aaa
enter
sbb
jbe
push
xchg
xchg
mov
adc
test
sahf
vlddqu
mov
cmp
sbb
lahf
sub
sub
dec
dec
les
hlt
adc
sub
hlt
outsl
push
test
cmc
popa
std
cltd
push
sub
adc
int3
rorl
or
cltd
dec
ret
pop
xlat
lret
outsb
in
jnp
xlat
xor
sub
fsubp
cmp
pop
outsb
lods
out
pop
xor
popa
push
in
insl
outsb
and
pop
adc
xor
cli
mov
jmp
movsl
std
push
pop
xchg
inc
cmp
cld
pop
jno
nop
mull
xchg
xchg
mov
push
jge
and
adc
inc
or
ja
sbb
xchg
ficoms
mov
mov
in
repnz
inc
lods
xor
mov
sbb
sub
std
inc
mov
movsl
in
popf
in
pop
mov
shlb
sub
fwait
mov
or
add
xor
in
sbb
cli
icebp
jnp
xchg
cwtl
int3
lahf
js
shlb
mov
xchg
adc
mov
or
je
mov
repz
jmp
aad
call
inc
xchg
rclb
mov
mov
jne
dec
jae
cmp
repnz
movsb
imul
test
adc
sti
add
js
repz
mov
or
sub
xchg
les
pop
dec
mov
scas
push
and
cmpsb
testb
mov
adc
into
sbb
jae
imul
leave
scas
or
fistpll
rcr
sub
push
jge
jl
fsubl
nop
inc
call
pop
ja
lcall
pop
dec
rcrl
adc
bound
iret
and
lcall
dec
das
jg
mul
add
movsb
test
xor
push
in
lods
cld
imul
xchg
push
lds
pop
inc
jnp
jmp
subb
insl
adc
push
push
or
fcoml
jns
lock
mov
dec
ss
popf
push
mov
xchg
imul
xchg
xor
xchg
add
dec
scas
cmp
loop
ficompl
enter
push
mov
push
inc
je
mov
sub
scas
mov
add
scas
pop
cmp
mov
xorb
sub
dec
mov
jecxz
ja
mov
aaa
jle
sub
mov
fidivs
cwtl
jbe
add
fwait
push
or
cmpl
push
sub
xchg
adc
rclb
stc
mov
sub
pop
icebp
jmp
sub
movsl
movsl
and
or
int
lds
int3
xchg
inc
fistpl
aad
dec
xchg
out
cltd
jbe
jl
imul
adcl
aas
xor
gs
inc
outsl
pusha
in
shll
or
pushf
or
fiadds
or
cmc
lret
fstpl
inc
test
int
pop
cmpsl
gs
add
jg
in
xchg
insb
and
add
fucomi
in
imul
mov
jne
leave
mov
sbb
popa
loopne
popa
push
cltd
add
out
add
inc
in
push
dec
ljmp
or
test
sarb
mov
int
xchg
bound
into
xchg
pop
out
out
xor
or
pop
insb
int3
scas
jp
xor
adc
jo
repnz
xchg
jge
gs
dec
sbb
push
sbb
das
jbe
push
mov
cmp
pop
incb
dec
iret
cmp
loope
rorb
add
jnp
lock
add
dec
and
sub
push
sbb
inc
stos
aad
xchg
lret
jp
gs
inc
mov
sub
sub
and
loope
ds
cmpsl
aas
aad
jo
scas
loopne
lock
and
jmp
inc
rcrl
xchg
xlat
and
mov
sub
xchg
test
cmp
cs
add
repnz
in
imul
daa
push
pusha
and
or
jge
sub
fisttps
test
adc
xchg
inc
bound
test
addb
jnp
dec
add
and
insb
jae
mov
pushf
popf
loop
imul
jne
stos
push
and
insl
ret
sbb
push
outsl
mov
xor
jnp
roll
push
movsb
aas
cltd
lea
repnz
divb
in
fs
cs
and
add
and
mov
sahf
xchg
push
pop
clc
enter
jne
mov
xor
outsb
addr16
jle
sbbb
in
js
push
and
frstor
sarl
add
jle
mov
iret
outsb
leave
push
xor
inc
pushf
pop
test
jg
insb
in
daa
aaa
sub
insb
es
daa
scas
aad
test
cmp
outsl
mov
dec
mov
jle
cwtl
test
mov
mov
leave
lds
in
int3
inc
movsb
xchg
pushf
aam
psadbw
mov
das
sbb
ret
rcll
std
loop
in
cmpsl
fisubrl
xchg
jns
push
daa
mov
pop
loope
fdivl
ret
push
popa
je
xor
leave
dec
mov
lds
dec
pop
xchg
push
hlt
out
fisttps
ljmp
fdivs
cmp
imul
push
loope
mov
xchg
inc
jg
ret
cs
fadds
imull
lea
inc
cmc
pop
fcmovnu
mov
js
cmpsl
push
add
add
or
arpl
xlat
cld
lods
pop
fistpll
jns
decl
jbe
sti
mov
pop
out
test
cld
add
lret
call
xor
lods
jne
out
sub
call
and
sarl
sbb
daa
sub
inc
rclb
inc
dec
repnz
adc
cmp
lahf
addr16
dec
sbb
jle
movsl
cmpsl
cmpsb
sub
out
push
mov
dec
mov
movb
stc
adc
mov
jg
jae
add
fists
xchg
ret
outsl
jb
mov
sti
stos
aam
arpl
shl
dec
mov
cmpsl
leave
mov
jo
inc
pop
xchg
pop
lea
cwtl
ret
xor
pop
add
ret
daa
xor
fcompl
test
mov
dec
mov
pusha
out
sbb
dec
xor
les
daa
jg
data16
cmp
jnp
imul
addr16
adc
rorb
pop
pop
push
jle
jmp
stos
les
mov
std
dec
sbb
fildll
pop
in
in
out
pop
daa
xor
cltd
rorl
jmp
fistl
ret
pop
pop
and
shl
pop
fsubp
outsl
loop
in
aaa
scas
scas
out
push
sbb
xchg
sub
push
and
xlat
xchg
in
pop
lods
ret
insl
pop
ret
loop
imul
jne
icebp
jge
cmp
mov
mov
xchg
nop
sbb
xchg
fcompl
lock
pop
js
pusha
fnstenv
dec
jo
pop
dec
mov
jno
mov
ss
pop
lock
loop
inc
idivl
adc
add
add
cmp
arpl
and
test
addr16
std
lock
in
adc
fsubrp
outsb
and
lret
add
or
shll
sub
mov
dec
insl
xsaveopt
xchg
cld
xchg
mov
iret
push
push
xor
out
inc
pop
fwait
cmpsb
ret
test
jbe
insb
sbb
shrl
mov
pop
out
add
leave
and
out
ficomps
insb
insb
cwtl
lods
loope
dec
mov
repnz
iret
bound
dec
dec
adc
nop
xor
pop
mov
lret
mov
push
cwtl
mov
fldcw
jne
idivl
dec
xchg
mov
cld
push
inc
popa
mov
ret
lods
ja
xor
mov
nop
aam
pop
outsb
arpl
push
outsl
adc
adc
xor
xor
jo
mov
xorl
mov
pop
ds
sbb
and
insl
ds
jb
cmc
xchg
lods
lods
push
aad
lods
push
les
push
mov
popa
std
or
ljmp
jp
xchg
push
cmp
mov
fcmovb
add
mov
outsl
mov
sarb
dec
js
testb
rcrb
test
mov
pop
fwait
add
imul
jns
stc
loope
push
adc
and
push
mov
add
lock
mov
mov
jb
push
mov
jl
in
ret
daa
sbb
stos
cmc
fstpl
add
or
das
mov
mov
mov
icebp
fsubrl
clc
mov
iret
inc
jmp
dec
xchg
push
icebp
and
mov
lods
pushf
cmp
shrb
jecxz
push
inc
jecxz
mov
xchg
push
add
cmp
sbb
cwtl
lods
outsb
pop
mov
xor
ret
test
mov
pop
aam
dec
js
push
sub
sbb
mov
jne
lret
jp
push
and
repz
cmp
mov
jbe
sarl
xchg
adc
pop
test
push
pop
push
mov
cmp
pop
sbb
frstor
push
or
inc
mov
dec
inc
xchg
mov
insl
fildll
sbb
mov
adc
cmp
mov
mov
out
insb
stos
jno
adc
fs
cwtl
adc
adc
lds
cmp
mov
pop
fsubrs
ljmp
insb
ds
aam
shrl
and
fildl
push
ret
or
ret
cmpsl
addr16
cld
adc
and
lods
in
xchg
testl
fwait
pop
sbbl
push
cmpsl
cmc
jl
ljmp
push
mov
pop
daa
inc
lock
test
addb
push
mov
addr16
and
scas
inc
or
dec
pop
dec
adc
push
sbb
iret
aaa
sub
hlt
int3
push
in
out
adc
sbb
loope
jo
xor
movsb
mov
repnz
dec
stos
jle
out
gs
dec
jmp
outsb
mov
scas
roll
mov
roll
pop
lods
nop
std
ret
repnz
or
clc
sti
lds
lret
pop
or
aad
int
dec
pop
clc
add
dec
mov
mov
cmpl
or
mov
cmp
and
cltd
xor
pop
sub
mov
mov
pop
ret
xor
sub
push
xchg
and
mov
xlat
push
sub
sbb
push
jbe
adc
fwait
addr16
pop
xor
mov
sub
or
sti
dec
test
hlt
in
jecxz
stc
sbb
movsl
dec
cmp
push
divb
insl
adc
add
sbb
loop
pop
adc
das
cmp
mov
xor
adc
movsb
and
test
jg
cmp
popf
and
rcl
int3
xor
add
das
xor
adc
mov
inc
or
jb
add
rcrl
mov
inc
jns
arpl
aas
cmp
aas
subl
aam
mov
xlat
movl
addl
xor
insl
jbe
cli
xor
jge
movsl
jbe
addr16
push
dec
xorb
in
js
movsl
mov
mov
rolb
mov
mov
push
push
push
add
push
ja
jno
inc
push
pop
lods
out
fucomi
out
sti
enter
jg
mov
insb
jl
adc
std
out
cmp
mov
dec
sub
shrl
test
xchg
jns
mov
sub
jbe
ja
cmp
jae
in
mov
fs
sbb
inc
pop
ret
pusha
xchg
popa
mov
push
xchg
and
addl
push
push
xchg
push
rolb
je
push
ds
stc
push
js
cmp
call
inc
icebp
push
mov
push
cmp
ret
pop
aas
xlat
fs
les
adc
mov
jo,pn
out
pop
pusha
bound
mov
nop
int3
pop
xor
dec
fs
mov
mov
sahf
and
enter
mov
xchg
ret
rclb
into
or
jnp
or
lea
jmp
cmp
lret
out
sahf
lret
int
adc
push
inc
sub
sbb
xchg
in
mov
inc
scas
insl
sub
ret
arpl
movsl
push
dec
or
pop
pop
test
gs
into
icebp
jge
mov
call
jp
jmp
sbb
decl
call
aas
cli
xchg
dec
es
sti
adc
sbb
shll
clc
xchg
js
movsl
lds
ret
imul
mov
daa
outsl
sbb
lds
or
dec
fcoms
lea
das
je
mov
xchg
cmp
in
repnz
fsubrs
sbb
mov
mov
js
adc
scas
insb
rclb
lcall
pop
into
fmulp
sti
fsubs
out
dec
outsb
pop
pop
cmpb
cwtl
int3
jnp
popf
xchg
adc
rolb
ficoms
ljmp
test
pusha
pusha
cmp
dec
mov
mov
cmpsl
jge
xor
and
daa
data16
mov
xchg
add
pop
cmp
push
into
xor
fs
or
adc
scas
jp
pop
push
dec
pop
rorb
mov
pushf
jo
sub
mov
pop
pushf
hlt
fwait
mov
in
ds
sub
shlb
ficoms
iret
ret
call
and
mov
xchg
cwtl
in
and
push
sbb
aas
add
jb
cld
dec
mov
scas
xlat
mov
adc
mov
mov
push
or
push
movq
cs
mov
cli
mov
test
mov
es
cmp
insl
popf
sbb
dec
inc
pusha
or
and
lcall
test
inc
and
ljmp
xchg
into
mov
jnp
test
jbe
xchg
subl
sub
push
mov
cmp
add
push
sub
frstor
dec
fisubrs
dec
xor
push
cmp
insl
pushf
fisubs
sub
mov
scas
lcall
insb
jle
sub
mov
cmp
loopne
pop
cmpsb
xchg
pop
xor
sub
out
imul
andl
stos
orl
mov
jb
outsl
push
mov
jnp
push
add
mov
adc
int
pop
pop
mov
mov
pusha
test
push
test
shrb
pop
rolb
and
aam
mov
push
pop
add
arpl
adc
dec
lret
jae
inc
or
and
andl
test
pop
adc
jo
popl
dec
std
fsub
enter
fsubl
ret
push
stc
lret
sub
cmp
ret
cmp
pop
pop
test
xor
cmpsb
sub
sbb
lods
xchg
lds
sub
fidivrs
in
repnz
sbb
insb
mov
lds
bound
daa
out
xor
or
loope
xor
mov
fucom
repz
xlat
inc
in
cli
fisttps
push
jle
add
inc
mov
test
out
inc
fadds
shll
xchg
xchg
ljmp
dec
in
mov
mov
out
push
sbb
nop
sub
sti
adc
pop
ljmp
fstps
rcll
shll
shr
push
jb
sti
push
loope
mov
dec
jb
loopne
pop
inc
aam
pop
in
add
jle
addl
std
imul
pop
adc
pop
mov
ds
loope
fstl
les
push
pop
inc
mov
mov
out
cmp
pop
jb
leave
mov
loope
js,pt
mov
mov
sub
mov
and
jb
shrl
jle
inc
pop
mov
jp
mov
cld
movsl
sti
sbb
mov
dec
popa
jl
pop
lahf
enter
stos
sbb
xchg
xchg
testl
repnz
out
xlat
pop
gs
inc
xchg
mov
subl
bound
sbb
pop
scas
iret
pop
xlat
cli
push
stos
fcmovnb
into
stc
aas
imul
loopne
adc
add
shrl
push
jmp
cmp
sbb
imul
mov
aaa
mov
mov
and
push
ljmp
cmp
jno
ror
cmp
loopne
scas
push
lret
cwtl
sbb
prefetcht0
push
dec
scas
cmp
outsb
push
pop
mov
pop
roll
test
and
xorl
sbb
jb
or
loope
daa
push
cli
fldt
std
cltd
jg
or
xchg
mov
push
inc
insb
xchg
cmc
cmp
xor
dec
aam
sbb
mov
cmp
jle
stos
pop
js
cmp
subb
in
js
pop
mov
mov
les
lods
es
jbe
push
sbb
push
insl
xor
je
jo
roll
nop
pop
dec
loope
adc
dec
dec
xchg
scas
push
lea
inc
iret
pop
cmp
xlat
mov
loop
clc
inc
inc
shlb
icebp
pusha
push
xchg
jmp
cwtl
lock
ror
jns
sbb
jb
test
lods
sti
fcmovbe
loop
or
nop
add
sbb
into
cs
sbb
je
sbb
xchg
fwait
xor
outsl
jns
mov
nop
pop
xorl
repz
jns
movsl
push
cltd
sbb
mov
pop
js
push
sbb
dec
mov
xor
mov
mov
enter
scas
inc
bound
push
xchg
inc
out
inc
ret
rcrb
dec
aad
je
push
fistpll
mov
gs
push
fistps
aam
xor
or
and
cltd
jecxz
jle
xor
sahf
xchg
leave
sub
jae
mov
jb
add
cmp
mov
in
fisttpll
popf
mov
aaa
cmp
incl
ljmp
sbb
dec
lret
xchg
out
mov
cmp
xchg
pusha
clc
popa
scas
and
hlt
sti
xchg
inc
jnp
aaa
pop
adc
mov
rolb
lods
int3
push
cmp
and
adcb
mov
sahf
bound
dec
inc
push
xchg
fnstenv
cmp
bound
out
pusha
cld
data16
mov
cmp
mov
inc
mov
jp
pusha
mov
pop
cli
jo
ret
out
int3
jge
mov
push
sub
xchg
sbbl
out
pop
jmp
pop
jbe
insb
mov
sub
ja
xchg
rolb
add
mov
sti
dec
daa
pop
cmp
call
fs
test
jae
outsl
mov
adc
incl
inc
movsl
in
lock
inc
xchg
or
adc
sahf
aad
scas
ret
push
ljmp
xor
loop
out
mov
pop
cmpsb
enter
jo
xlat
imul
out
xor
je
rorl
xchg
sbb
cmpsl
fistpll
cmp
dec
cmp
lock
pop
add
jb
xchg
fildll
shll
adc
in
addl
add
push
mov
fcoml
ja
int
int
and
pop
cltd
xchg
inc
mov
fdivrs
movsb
mov
push
push
addr16
popf
in
lahf
ljmp
inc
int
fnstcw
cld
enter
shlb
loop
sub
adc
vpaddd
push
inc
ficoml
int3
mov
inc
push
cmp
in
inc
or
cmc
bswap
rorb
pop
jbe
fnstsw
add
notl
aaa
inc
jmp
aad
cmpl
inc
push
xchg
xor
das
mov
fcoml
sub
cmpsb
jo
into
lret
sbb
xchg
xchg
cld
inc
gs
fdivp
xchg
popf
mov
and
add
cmc
cmp
cmp
jecxz
int3
movb
test
mov
repz
gs
xchg
mov
cmp
pop
adcl
or
popa
in
push
mov
cmpsb
add
mov
shll
sub
in
jns
sbb
cli
jb
shll
cmpsl
bound
int
inc
gs
cmp
in
cmp
pushf
and
fld
test
sub
dec
xchg
cmp
push
out
adc
fistl
ds
mov
jne
popf
pop
push
stos
fmull
inc
std
aam
lret
push
dec
popa
inc
pop
insl
insb
fcmove
lahf
inc
xchg
popf
push
and
push
mov
xor
xor
push
bound
mov
dec
stos
xchg
in
and
rorl
xchg
das
dec
jg
inc
add
push
adc
arpl
xchg
scas
cli
movsl
jg
jbe
sub
not
xchg
add
sbb
pop
xor
sbb
adc
mov
dec
jecxz
xor
lahf
sarl
mov
ret
mov
mov
mov
pop
xchg
mov
cmp
jns
add
mov
in
lods
shl
mov
icebp
lods
add
jo
lret
out
xor
pop
das
and
xlat
fwait
ljmp
imul
sub
addr16
and
sub
fs
das
insb
xchg
add
fldl
push
and
mov
adc
sub
ja
data16
mov
xchg
lods
out
leave
in
cmp
aam
mov
add
pop
jge
fwait
sub
pop
movsl
repz
or
lea
jp
lods
mov
pop
xchg
pushf
mov
repz
lret
into
out
out
cmpsb
cmp
fstps
adc
or
add
xchg
movsb
pop
cmpl
pop
out
sub
insb
push
pop
neg
cld
aad
mov
cmp
push
inc
jge
mov
adc
popa
mov
jmp
in
adc
icebp
sbb
subl
jecxz
js
inc
mov
aad
lods
hlt
push
xlat
xchg
pop
sub
jge
stos
popf
dec
sbbl
cmp
lahf
fstl
test
enter
das
pop
out
test
notb
pop
cmp
fsub
repnz
fs
adc
sub
cli
aaa
cpuid
mov
sbb
xchg
cli
and
mov
popa
push
lahf
sti
clc
xchg
pop
sbb
enter
cli
ss
jns
cwtl
push
lret
sub
sbbl
inc
and
es
dec
adc
mov
loope
jb
movsl
xchg
mov
xchg
dec
xchg
jg
insl
ja
and
push
sbb
add
xchg
inc
sbb
jmp
aam
jne
xchg
jne
add
mov
and
rcrb
loopne
les
int
dec
lret
xchg
jmp
jg
mov
pop
ret
test
pusha
or
inc
stos
out
add
in
mov
nop
xchg
mov
cmpsb
jno
add
scas
dec
iret
decl
rcrl
ja
mov
pop
lds
xlat
idivb
mov
out
shlb
push
sbb
push
jnp
inc
push
and
dec
and
sbb
inc
repz
std
es
in
sbb
or
cmp
fcmove
loop
mov
mov
sub
out
ds
xlat
fwait
icebp
into
jbe
mov
in
mov
lret
mov
xchg
pop
div
xchg
jmp
ja
xor
insl
movsb
mov
daa
pop
nop
cs
cmp
mov
inc
outsl
push
fnsave
add
icebp
mov
repz
leave
and
lret
push
lea
out
addr16
lret
insl
pop
roll
dec
shrb
cmp
or
out
in
movsl
xchg
bound
pushf
mov
fwait
dec
test
sub
jbe
popf
add
add
xor
and
pop
fildl
inc
ja
mov
insl
out
rep
int3
imul
mov
clc
dec
mov
push
inc
jle
mov
or
fsubrl
jbe
cmp
dec
mov
shll
into
cmpsl
push
lods
test
repz
push
stos
jnp
add
adc
sbb
or
cmp
inc
bound
rorl
xchg
mov
in
rol
std
inc
dec
test
pop
jb
rcl
shl
lods
mov
xorl
imul
push
aas
xchg
push
ja
insb
stos
add
gs
test
mov
hlt
ret
test
in
mov
add
add
add
sti
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
je
add
icebp
fisubl
inc
add
mov
sub
cmp
pop
bound
sub
ja
daa
dec
adc
push
or
and
int3
les
mov
pop
add
adc
cmpsl
fildl
add
push
loopne
pop
jo
fadds
jg
shrl
dec
loopne
test
inc
mov
movsl
stos
push
sarl
cmp
add
adc
sub
cld
int3
idivl
sahf
xor
roll
out
push
and
movsl
push
jmp
sbb
sub
mov
inc
nop
mov
or
sbb
cmpsl
sti
jne
repnz
ret
cmp
and
cmp
neg
test
xor
push
mov
xor
add
movsl
lret
inc
mov
cmp
xchg
dec
lret
jns
outsl
sub
and
outsb
mov
xchg
dec
jnp
inc
dec
call
or
out
jp
popa
dec
sbb
lret
push
iret
imul
jmp
out
dec
int3
inc
jp
jbe
dec
push
xchg
mov
imul
shll
ret
jp
xor
out
jg
push
stc
or
enter
imul
cmp
mov
pop
pop
mov
cmp
fs
pushf
ret
imull
mov
arpl
push
mov
loopne
add
dec
sub
aam
pusha
jbe
mov
fucom
jbe
out
outsl
rorl
push
xchg
inc
rcrl
neg
pop
mov
daa
sub
push
mov
imul
scas
xchg
shll
mov
pop
leave
lahf
mov
ljmp
jge
dec
shlb
loop
mov
les
popf
xor
sbb
enter
negb
xor
adcb
es
movsl
mov
pop
in
mov
xorb
dec
inc
je
in
mov
call
rclb
in
popf
cld
lret
add
jle
call
out
push
adc
mov
mov
aas
xor
scas
call
movsl
in
jg
push
xor
fs
xor
pop
push
movsb
and
lds
xor
icebp
cmpsb
push
sbb
scas
xchg
popa
call
fstl
jns
cmc
mov
enter
and
mov
loopne
push
faddl
dec
push
jns
in
adc
pop
push
xor
and
jmp
dec
gs
and
leave
push
fs
jae
in
add
pop
push
lcall
push
nop
pcmpeqw
jns
sbb
call
shll
flds
mov
jmp
cmp
fsubp
test
movsl
test
loopne
inc
scas
pop
fldenv
sub
lahf
addr16
sahf
mov
ss
jge
push
test
cvtpi2ps
dec
sahf
fidivrs
xor
mov
imul
cmp
dec
cwtl
xchg
hlt
movsl
add
mov
push
aad
inc
ds
popf
sbb
and
mov
iret
xchg
and
push
aam
inc
xchg
int
pop
mov
inc
adc
and
jp
inc
cli
popf
lcall
nop
xor
ljmp
mov
dec
mov
mov
insl
mov
imul
mov
mov
stos
xchg
iret
dec
or
pop
ds
add
adc
test
fs
std
ja
loope
jecxz
jns
mov
outsb
aas
push
mov
movsb
ret
or
push
or
push
jecxz
xlat
and
fdivrp
jo
add
adc
les
repnz
mov
jg
je
adc
push
and
pop
mov
iret
jns
rorb
std
xlat
ljmp
sti
push
xchg
insb
pop
shrb
dec
xor
ljmp
mov
stc
jmp
jne
out
pop
jecxz
outsl
out
cmp
fiadds
jbe
movl
cmp
fisttps
addr16
sbb
or
int3
pusha
xor
cmpsl
in
sti
xchg
test
into
das
xor
push
push
jp
mov
push
cmp
mov
add
xor
jnp
xchg
mov
nop
stos
inc
cmpsl
pop
cmpl
mov
pop
mov
adc
aam
sysenter
js
adc
rcrb
nop
in
std
movsl
jmp
adc
xchg
mov
lods
js
enter
cs
adc
xchg
add
cmpl
aas
cmp
orl
rorb
adc
jnp
mov
fdivl
js
gs
imul
lods
xchg
or
xchg
cmp
dec
xchg
fwait
pop
in
das
popf
inc
xchg
and
mov
fwait
icebp
pop
fsubl
addl
loope
push
and
push
pop
and
xchg
cwtl
dec
dec
in
add
cmp
rcll
mov
fdivs
call
test
xorb
mov
or
cmc
pop
out
movsl
jge
mov
push
loop
cmp
push
lret
aas
testb
jmp
mov
add
push
mov
sbb
add
cmp
or
lret
cmpsl
mov
lret
mov
jae
stos
mov
cmpsb
and
xor
lret
jno
push
je
pop
int3
sub
in
push
dec
mov
lods
xchg
inc
mov
sub
pop
pop
and
pop
lock
insb
add
inc
mov
dec
dec
mov
dec
xchg
mov
or
into
ds
xchg
jg
popf
out
test
lock
jnp
pop
push
xchg
je
outsb
sub
mov
or
sub
int3
aad
add
and
nop
mov
dec
fdivrl
inc
dec
pop
rol
minps
push
dec
inc
push
push
cli
in
fisubs
push
stc
xlat
imul
inc
inc
iret
adc
fstl
push
int3
leave
in
jnp
rcr
cmp
mov
shll
loope
addl
dec
daa
enter
sarb
mov
das
fdivrs
jg
pop
movsb
mov
pop
sbb
es
out
mov
cwtl
test
mov
iret
sbb
insb
or
jns
cltd
loope
push
std
popf
imul
push
jns
int3
scas
jo
dec
push
mov
jne
ja
add
xchg
sbb
shll
sbbb
or
inc
and
mov
fisttpl
inc
ja
pop
mov
xor
das
shlb
add
fcmovu
xchg
leave
leave
xchg
push
cli
std
ret
repz
push
mov
es
addr16
pop
cmp
sahf
adc
or
xchg
adc
cmpsb
sbb
push
mov
ja
dec
push
outsl
mov
pop
aam
ret
mov
mov
xchg
out
fbld
inc
xor
push
mov
loop
outsb
sarb
mov
pusha
sahf
dec
popa
mov
mov
cmp
fcomps
push
jg
or
cmp
jb
aad
and
push
mov
cmpsl
mov
sub
std
mov
aad
mov
pop
stos
arpl
lds
mov
mov
dec
mov
sarb
icebp
dec
out
xor
bound
cwtl
je
fnclex
add
outsb
xchg
or
lcall
outsl
fistpll
rorl
push
dec
int
stos
into
push
pushf
sti
stos
xchg
sbb
shlb
mov
ds
cmc
or
xor
inc
fxch
std
sar
mov
aam
scas
loopne
cld
arpl
addr16
call
popf
hlt
dec
mov
lock
fdiv
push
add
jle
fbstp
repz
test
lahf
fimuls
scas
ljmp
pop
imul
or
pop
gs
lods
mov
and
test
jecxz
xchg
stc
ficoms
pop
loope
mov
popw
loopne
jge
xchg
jecxz
nop
pop
mov
aam
mov
jne
es
sub
lret
dec
push
ds
mov
jg
loope
pop
pop
push
shll
ljmp
push
fistl
cmp
jp
ljmp
mov
roll
inc
xor
mov
push
sub
push
add
mov
fwait
add
aaa
jne
mov
imul
addr16
fldl
xchg
test
testb
stos
sub
fisubrs
jbe
jmp
sti
or
adc
or
movsb
sti
mov
and
mov
stc
scas
adc
mov
sbb
mov
mov
negb
ds
push
or
test
mov
cmpl
sahf
scas
aam
xchg
fildll
ret
inc
rcrl
push
divb
add
xchg
inc
sti
xchg
xchg
xor
pop
or
mov
mov
ret
push
mov
jno
movsb
xchg
inc
jnp
adc
mov
sbb
insl
mov
add
push
xor
and
outsb
xchg
call
push
and
aas
es
or
mov
cmp
mov
jmp
mov
xchg
push
pusha
push
out
jno
mov
dec
fcmove
popa
ret
mov
push
test
push
mov
popf
pop
dec
shll
mov
ret
mov
push
inc
dec
insb
dec
les
add
xchg
scas
filds
inc
inc
repz
lahf
xor
ret
cs
movb
jbe
mov
sub
outsl
xchg
outsb
add
or
scas
xchg
push
fs
pop
rorb
leave
jbe
xchg
pop
mov
mov
movsb
and
push
mov
mov
hlt
pop
mov
mov
jnp
xor
repnz
pop
daa
and
pop
cmp
inc
popa
cmp
movb
mov
sbb
out
mov
imul
push
cmp
mov
insl
xlat
cs
in
cltd
roll
jne
or
mov
sub
dec
and
test
mov
jbe
and
jle
cmpsb
sar
les
or
sbb
or
aas
or
mov
mov
cmp
repz
stc
or
imul
rcl
imul
xchg
or
mov
jle
sub
sbbl
sub
push
sahf
mov
jmp
nop
ds
call
jb
sub
inc
sub
push
push
adc
add
dec
pop
cmp
cmp
sbb
cli
mov
add
xor
sub
fdivrs
loopne
push
mov
mov
add
ds
pop
test
lahf
outsl
xchg
cmpsb
decb
loopne
stos
je
push
push
repz
mov
pusha
mov
mov
mov
outsl
cmp
dec
lock
sbb
pop
subl
aaa
sbb
or
cmp
test
dec
fisttps
ficoms
ret
es
add
test
cmp
jle
jmp
sub
mov
repz
cld
push
pop
inc
cmpsb
rcrb
aaa
and
stos
icebp
data16
ss
je
addr16
mov
gs
fwait
pop
mov
enter
notb
fistps
das
ror
or
mov
jl
or
jmp
outsl
imul
mov
leave
and
pop
shll
nop
mov
or
and
dec
mov
jo
pop
pop
pop
in
fisttps
daa
push
mov
mov
sbb
hlt
popf
sub
xchg
sar
push
sahf
in
inc
jnp
insl
mov
cmp
cltd
fldl
dec
fidivrs
xchg
pop
scas
cltd
dec
lcall
or
cmpsb
push
imulb
mov
repz
test
jbe
popf
mov
xchg
mov
mov
and
xchg
call
or
pxor
push
xchg
pop
mov
loope
dec
mov
cltd
stc
gs
cli
inc
popf
cmc
jno
aaa
cwtl
mov
imul
adc
push
cs
cmp
mov
inc
test
mov
test
and
and
clc
adcb
pop
cmp
out
push
add
or
push
pusha
out
in
dec
ljmp
inc
scas
pop
jb
sub
pop
int3
cmp
sub
outsl
push
mov
ljmp
movsb
ljmp
js
pop
mov
iret
or
mov
test
xchg
cmp
into
inc
lods
cmp
loopne
jp
fisubrs
mov
xchg
xor
xchg
pop
addr16
xchg
push
mov
inc
inc
ss
leave
push
std
or
lea
fsubl
outsb
fs
das
cmp
pop
lahf
and
daa
stos
int3
int3
jg
sub
inc
repz
and
fidivrl
addr16
pop
cli
xor
and
ja
jnp
mov
inc
es
mulb
es
loopne
pop
fists
xor
adc
mov
sbb
mov
mov
jo
int
xlat
pop
push
xchg
das
movsb
std
clc
ret
lcall
repnz
addr16
icebp
lock
test
jno
mov
pop
push
sbb
xchg
mov
push
les
test
into
xor
lcall
in
gs
mov
rcr
or
sbb
aaa
leave
xchg
dec
cmp
sub
pop
cmp
insb
loop
dec
jge
sub
out
sarl
jnp
push
ficoms
sbb
cmp
dec
jne
jecxz
ret
aam
mov
push
jo
hlt
andl
and
leave
pop
dec
mov
mov
sar
add
jae
mov
popa
cmpsl
stos
add
pop
ja
pop
cld
mov
cmp
add
pop
mov
mov
mov
in
jnp
dec
into
add
jbe
xchg
jno
js
rcr
cltd
ret
sub
add
fldt
adc
scas
repz
mov
mov
adc
lcall
mov
mov
push
jmp
lahf
jp
subl
or
mov
mov
std
cltd
enter
push
movsl
popa
xchg
push
in
adc
push
fwait
imul
popf
cmc
jmp
movsb
sbb
add
movsl
adc
xor
dec
sbb
mov
cmp
adc
test
inc
movsl
call
fistpll
ljmp
int
inc
push
cwtl
shlb
and
les
shlb
and
popf
aaa
ss
push
sub
sbb
sti
lret
rorl
in
movsl
xor
or
dec
sarb
mov
or
fidivl
enter
push
movsl
out
test
or
stos
stos
push
inc
push
hlt
push
push
fld1
ret
mov
push
or
test
aas
aaa
cmpsl
inc
push
cmp
and
push
je
rcrb
ds
icebp
daa
push
addr16
clc
mov
bound
cli
jg
pop
xchg
mov
xor
das
nop
cmp
insl
inc
inc
bound
roll
push
cmc
mov
pop
jmp
adc
cmp
push
pusha
pop
or
xor
gs
jo
sub
and
xchg
ja
sahf
daa
test
xchg
cmp
mov
loopne
incl
hlt
fnstcw
cs
cli
jb
leave
lock
mov
mov
movb
jecxz
pop
and
cli
je
jne
div
mov
mov
push
inc
lea
xor
sub
pop
cmp
mov
or
xor
jl
dec
sbbb
mov
bnd
in
outsb
sub
xchg
outsl
decl
clc
lods
andb
sbb
andb
cmp
jns
mov
push
cmp
outsl
inc
hlt
mov
xchg
scas
or
or
sbb
push
sti
push
pop
sub
fadd
mov
aas
std
mov
cltd
mov
movl
mov
in
and
iret
dec
sar
loop
stc
adc
cwtl
xor
or
xchg
shll
push
filds
ret
cmpb
sub
insb
mov
cmc
imull
int
adc
sahf
daa
outsl
adc
fwait
and
mov
and
repz
sub
mov
scas
in
adc
push
stos
push
out
daa
push
xchg
rcrb
mov
mov
outsb
jge
enter
cwtl
clc
sub
cmc
mov
es
dec
ficoms
decl
int
xor
adc
mov
jg
xor
sbb
mov
loope
pop
movsb
cld
sbb
lret
mov
addr16
aas
and
pop
cld
xchg
adc
or
int
cmc
push
mov
in
xchg
out
in
ja
jecxz
jbe
inc
scas
inc
fnstenv
inc
cwtl
ret
in
cmp
aaa
sub
pop
fbstp
je
xor
loopne
mov
jl
lahf
pusha
pop
lds
mov
out
fwait
aad
adc
adc
decb
andb
loopne
call
jmp
adcb
stos
xor
adcl
jmp
stc
xchg
pop
orl
pop
dec
xchg
mov
fnstsw
mov
jno
mov
pop
push
xor
sbb
adc
sbb
or
add
xor
stos
and
add
cmp
sub
stc
ret
mov
andl
xchg
rclb
push
test
iret
iret
cli
scas
cwtl
cmp
outsb
and
int3
push
jmp
push
hlt
data16
pop
mov
aaa
inc
push
cmp
rcll
push
mov
jg
imul
inc
pop
sub
mov
xlat
jmp
outsl
bound
xor
subb
dec
push
sbb
fistpl
xorb
mov
xchg
push
add
aad
pop
lds
lock
lock
fldenv
jmp
pop
loop
or
add
jbe
jl
fldl
add
stc
jno
test
xor
pop
lahf
clc
notb
xchg
adc
data16
jge
pand
xchg
pusha
stos
sar
xchg
sbb
add
jne
test
sahf
pop
dec
add
and
adc
aad
popa
push
sbb
decl
xor
ja
pop
mov
js
jns
fdivr
mov
and
mov
xchg
inc
movsb
ss
lock
cmp
scas
sbb
cwtl
mov
cmpl
sahf
cwtl
adc
sbb
dec
xor
and
pop
lahf
cmpsl
xchg
pop
inc
aam
shll
mov
pop
push
sbb
or
insb
popa
lods
imul
xchg
outsl
inc
xchg
ja
loopne
aaa
mov
sar
xchg
mov
andl
icebp
push
hlt
pop
insl
dec
pop
fstp
leave
lret
into
xor
idiv
ss
inc
ret
jmp
sti
adc
jns
add
push
pop
rol
pop
scas
cmpsl
addl
in
push
in
mov
fiadds
or
icebp
dec
scas
cli
mov
sub
jae
lods
inc
mov
sahf
bnd
or
sub
add
bound
scas
mov
cli
adc
loopne
jg
mov
jne
aad
scas
ja
push
cmp
test
dec
mov
push
lret
fidivl
push
scas
ret
pop
es
jno
pop
lahf
testb
shll
lods
aad
hlt
inc
xor
dec
loop
xchg
jecxz
adc
jne
pop
push
add
and
rolb
jp
mov
mov
in
mov
dec
in
sar
inc
xchg
sub
jno
pop
shll
mov
pusha
fsubrs
jle
sti
loop
cmovb
push
push
fwait
mov
aad
adcb
repz
sbb
cmp
xor
mov
and
icebp
shrb
out
xchg
out
pop
sub
shll
sti
jmp
jnp
and
fstl
cltd
xor
or
dec
mov
xchg
out
stc
fidivs
test
scas
jbe
pop
popf
pop
xor
pop
mov
je
cmp
add
lock
call
adc
insb
cmp
bnd
or
mov
bound
aam
mov
xchg
push
pop
adc
and
mov
sub
stos
dec
inc
mov
in
pop
idiv
dec
nop
fs
es
sbb
push
ljmp
mov
push
rcll
mov
lds
pop
and
adc
inc
sub
dec
dec
shlb
jne
jo
jb
push
sub
or
int3
mov
test
das
xchg
insl
dec
nop
adc
sbb
and
push
inc
and
add
cmp
fistpll
sahf
mov
add
or
push
aad
dec
xchg
adc
cmp
mov
idivl
xorb
xchg
cmp
cmc
mov
clc
cli
dec
mov
jns
call
insl
mov
mov
xchg
or
repz
add
lds
or
rcll
mov
dec
popf
leave
test
gs
sbb
and
push
push
pop
aas
pushf
and
ret
cs
test
jae
jle
ss
subl
mov
cmpb
add
inc
xchg
gs
cmc
test
sub
jle
cmp
aam
lds
cmpsl
sahf
lock
movsb
cld
les
lods
pop
loopne
mov
mov
xchg
xor
stos
lcall
stos
add
adc
bound
mov
and
mov
mov
mov
adcl
popf
jbe
fmul
xacquire
pop
out
mov
ret
in
or
orb
dec
xor
cmp
sbb
pop
lcall
pop
mov
add
xchg
repz
mov
jo
les
lock
adc
cmp
inc
cmp
add
lods
inc
jmp
push
xchg
xchg
out
fbstp
jnp
ret
add
addr16
jmp
hlt
jg
xor
dec
xchg
lock
fidivl
mov
adc
cmovs
inc
pushf
arpl
inc
cmp
dec
ds
insb
out
movsl
mov
hlt
out
lret
push
add
jecxz
popf
cmpb
push
xchg
mov
nop
cmpsl
ds
outsb
js
or
frstor
lret
dec
jno
popf
dec
inc
jmp
pop
cmp
setle
push
dec
push
iret
inc
lds
je
pop
imul
outsb
jp
int
fldcw
mov
mov
fwait
adc
sbb
loopne
push
aaa
outsl
outsb
add
cmpsb
xor
jno
dec
inc
ret
or
out
aam
dec
outsb
inc
or
pop
add
or
int
cmpsb
xchg
and
pushl
inc
out
push
xor
jns
jecxz
movsb
test
inc
xchg
subb
push
xor
fstpl
add
push
mov
ret
mov
ljmp
pop
lret
sbb
lahf
fmuls
mov
test
test
adc
cmp
subb
jbe
cmp
ror
add
jmp
xchg
push
test
shr
js
ret
std
shlb
jno
pushf
pop
out
in
xor
dec
test
cmp
xor
in
movsb
gs
fwait
prefetch
or
loopne
insb
xchg
cmc
pop
les
bound
cwtl
mov
fwait
inc
sub
ljmp
jo
sbb
mov
lds
jecxz
fldcw
mov
aam
pop
pop
jle
imul
lock
paddw
insb
stos
push
add
rcl
fcompp
mov
test
in
shlb
out
mov
sti
leave
mov
pop
or
invd
xor
cltd
ja
jp
dec
mov
pop
fisttpll
ret
adc
das
ljmp
add
mov
fmull
sbb
add
sbb
loopne
pop
cmp
dec
push
ret
xlat
ljmp
fwait
insl
gs
xchg
pop
mov
xchg
sbb
jbe
scas
aam
or
sbb
jno
xchg
test
mov
sbb
dec
mov
pop
movsb
jge
lcall
jb
xor
pushl
rcrb
enter
imul
sbb
mov
add
mov
cli
cmpsb
insl
xor
fs
inc
je
pop
out
dec
call
and
cmp
in
xchg
mov
mov
addr16
push
in
out
shl
dec
push
adc
loope
insb
jp
addl
filds
xor
cmp
or
xor
mov
or
push
jmp
lret
sti
xchg
int3
pop
rcrb
int3
repz
and
push
sbb
outsb
es
sahf
xchg
push
mov
and
mov
sbb
cmp
outsl
add
xorb
popa
sub
aam
es
push
cltd
dec
jo
arpl
xchg
dec
adc
jno
addr16
dec
sbb
fstpt
and
bound
incb
cmc
push
cmp
cmp
leave
in
xchg
test
jge
add
mov
shrb
pop
icebp
insl
add
jecxz
jbe
lahf
stos
call
sbb
mov
repz
or
xor
je
push
mov
fwait
cmpsb
arpl
push
xor
push
jg
mov
sar
out
sbb
std
pop
push
pop
fcmovbe
cmp
pop
int3
insb
jp
push
cmp
mov
dec
lcall
out
xchg
adc
jnp
pop
fsubl
jno
and
push
insb
jmp
js
mov
mov
insl
xor
sbb
lret
xchg
fdivrs
aaa
cmp
ss
icebp
sub
hlt
xchg
adc
add
push
addr16
xchg
lcall
sub
cltd
bound
scas
mov
xchg
mov
test
scas
lcall
inc
push
sbb
test
daa
sbb
sub
fsubs
popf
ret
icebp
test
mov
adc
seta
add
lea
out
pusha
push
les
and
movd
and
inc
cli
movsl
rolb
push
fisttpl
hlt
cmpsb
jae
cmp
jecxz
and
add
movsl
xor
jne
pop
or
mov
lock
lods
lea
add
inc
sbb
mov
and
divb
push
int
repz
cli
cmp
jp
fidivrl
outsb
sub
cld
mov
jge
pop
sub
inc
pop
ja
mov
arpl
xchg
inc
push
pop
and
adc
inc
sub
sbb
popa
repnz
ja
test
dec
mov
sbb
or
add
lret
out
dec
scas
rcr
mov
xchg
shll
mov
cld
ss
adc
dec
and
cld
add
inc
inc
inc
mov
test
std
cmp
mov
popa
push
mov
pop
add
scas
and
aam
inc
shlb
jo
cwtl
add
pop
shr
out
arpl
cltd
and
and
into
and
mov
test
or
jne
inc
loopne
sbb
mov
dec
inc
inc
push
mov
idivl
or
int3
mov
addr16
je
mov
push
adc
popa
sub
cmp
adc
fcomip
sbb
andb
loope
pop
or
int3
pop
stos
pushl
in
xchg
push
sbb
xor
mov
mov
cmpsl
xor
hlt
push
jle
mov
stos
inc
fcomip
push
jo
int
dec
cs
cmp
out
jg,pt
adc
push
int3
inc
xchg
push
mov
cli
xor
xor
push
mov
xor
xchg
mov
mov
lahf
pcmpeqb
xor
cmpsb
xchg
outsb
inc
mov
xor
test
inc
jnp
jge
jecxz
mov
lds
imul
fsubp
push
pop
cmc
outsl
sarl
into
sbb
xchg
sub
cmp
mov
lds
xor
bound
orl
jg
adcb
or
es
enter
fisubrs
and
shll
adc
add
inc
ret
movsb
fdivp
jo
test
std
rcl
mov
lret
mov
mov
fs
sub
sbbl
shrb
lahf
fsubs
jle
mov
bnd
fidivrs
lods
cmp
push
mov
shll
jle
cwtl
jp
or
sub
dec
fisttpl
ljmp
std
cmp
mov
jg
icebp
das
xor
sub
inc
inc
ret
out
pushf
test
sub
xor
cmp
add
xorl
shlb
cs
pop
pop
mov
imul
decl
sub
add
fadds
je
lock
sub
add
call
jnp
mov
mov
in
testb
rcrb
mov
movsl
mov
cmp
jbe
lahf
add
adc
xchg
sbb
popa
or
inc
xor
mov
das
xchg
les
dec
add
out
inc
scas
aaa
xchg
dec
inc
mov
cltd
inc
xchg
xor
jns
fcompl
mov
inc
scas
out
test
dec
mov
mov
lea
in
or
fstps
imul
jmp
mov
mov
adc
adc
pusha
add
sbb
jnp
adc
and
mov
pop
daa
js,pn
cltd
gs
cld
repnz
xchg
fs
xor
je
add
xchg
pushf
lds
mov
push
xchg
sub
out
jae
mov
mov
inc
in
sub
repz
push
sbb
add
add
add
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
pop
ljmp
add
add
add
add
add
testl
add
add
add
scas
add
mov
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
jl
add
add
push
add
add
add
cmp
jne
mov
loope
cli
lds
mov
sub
ljmp
movl
popa
jp
push
cltd
inc
mov
sbb
fwait
jo
aas
loope
jnp
mov
scas
pop
int3
push
jge
insb
cli
jo
insl
pop
in
in
xor
ja
add
add
movntq
in
lods
dec
shrb
aad
mov
mov
mov
sub
xchg
push
into
ret
inc
xlat
stos
jae
div
repnz
mov
je
mov
mov
and
push
push
jnp
mov
shlb
imul
dec
sbb
or
pop
pushf
js
sbb
out
in
mov
int3
jg
push
dec
int3
sbbl
jp
fs
mov
iret
add
jge
push
sarb
fdivl
cmp
cmp
dec
xchg
shll
es
mov
ficoms
pop
dec
or
gs
cmp
lods
pushf
cmpsl
fwait
bound
mov
jg
test
xchg
push
pop
xchg
adc
subb
or
cmp
push
or
sbb
or
jle
cmp
in
loop
pop
std
push
sub
xorb
xlat
int3
cmp
jns
idivl
insb
data16
or
pop
sbb
loop
lock
inc
push
loope
xchg
loop
mov
jmp
mov
int3
push
jno
sub
pop
pop
shrb
push
sbb
pop
in
pop
sub
cld
bound
or
lock
pminsw
sbb
lock
jg
xchg
or
nop
loope
dec
sub
and
xchg
pushf
mov
xchg
mov
imul
insb
fsubrl
add
xchg
cld
loopne
xchg
add
push
ljmp
and
hlt
int
mov
jo
push
or
add
es
loopne
loop
or
mov
pop
cli
shll
je
xchg
xchg
cs
mov
fs
xor
fildl
sbb
mov
or
sahf
andb
mov
lea
es
lods
out
call
das
fiaddl
arpl
xlat
cld
push
clc
cmpsl
lods
jne
and
cli
push
lret
mov
pop
xchg
fidivrl
into
fbstp
mov
sub
popa
dec
adc
movsb
fcomps
push
inc
jnp
dec
cld
cwtl
shlb
mov
push
and
test
sbb
cmc
call
inc
inc
xchg
push
cwtl
and
adc
adc
hlt
inc
bound
cmc
pop
rcr
imul
jno
pusha
xor
mov
sahf
push
in
mov
mov
popf
sahf
and
xor
aas
pop
mov
testl
in
adc
mov
fucom
mov
into
sti
adc
mov
scas
icebp
pop
mov
mov
jns
adc
pop
mov
scas
jle
cmp
mov
popf
aaa
cs
dec
stos
or
inc
adc
lahf
cli
xchg
dec
cmp
inc
aad
and
inc
and
negb
insb
mull
sub
int
mov
mov
rcll
dec
pop
cli
stc
push
xchg
cmc
or
fucomip
adc
pop
inc
fsubl
imul
js
pop
or
cmpl
dec
push
shl
cltd
adc
mov
sub
jmp
shlb
inc
sbb
jmp
inc
sarb
lret
sub
sub
mov
fld
inc
inc
sbb
lcall
shrb
loope
int3
popf
pop
or
sbb
sbb
and
jo
sarb
insb
test
test
pop
sub
nop
out
mov
push
sub
imul
mov
adc
fcomp
xor
into
stos
mull
xchg
jae
inc
fdivr
lea
sbb
dec
popa
rcrb
sbb
xchg
lea
mov
movsl
mov
and
fdivr
mov
pop
sbbl
sbb
in
lods
pop
xchg
add
adc
cmc
loop
fdivl
and
cmp
xor
cmp
lods
dec
stc
sbb
test
lret
in
mov
push
ljmp
mov
cwtl
dec
push
xchg
jno
int3
push
mov
fs
mov
mov
cltd
adc
cmp
mov
mov
rolb
lret
mov
cmp
mov
jo
pop
sbb
mov
pop
inc
cmp
test
pusha
mov
es
or
push
jb
aas
jnp
xchg
sahf
jp
add
xchg
xchg
pusha
and
adc
adc
xor
popa
add
mulb
or
jb
push
mov
push
jl
ljmp
fsubrl
sub
notl
insb
jno
enter
adc
cmp
push
in
mov
test
and
int3
push
ret
push
and
xor
mov
sahf
incl
test
mov
es
aad
into
pop
add
mov
leave
jno
cmp
ljmp
and
pop
and
adc
sti
dec
aam
testb
movsl
and
mov
hlt
std
add
xor
push
pop
cmc
mov
lods
and
jge
pop
test
sub
es
push
mov
mov
sahf
jnp
je
mov
inc
sti
sti
and
iret
sbb
inc
jg
aad
inc
hlt
dec
mov
cs
xor
mov
dec
out
jp
aad
outsb
or
sbb
inc
addl
sti
mov
add
mov
imul
aas
jnp
xchg
nop
inc
lahf
stos
daa
push
js
shr
lret
pop
jns
sbb
adc
loopne
dec
mov
or
es
shlb
dec
shll
les
adc
test
out
push
pop
push
int3
mov
aam
adc
clc
pop
push
mov
and
mov
std
xchg
inc
or
fsts
jge
dec
in
cmp
sub
fidivs
sub
mov
andl
jne
sub
out
jno
and
xchg
cld
cltd
xchg
lock
mov
sbb
sbb
ja
sbb
rorb
in
jl
push
cmp
mov
imul
pop
enter
cli
outsb
cmp
pop
and
cmpsb
xchg
jno
cmp
dec
xchg
mov
pop
push
mov
loope
loopne
push
xor
pop
and
dec
mov
pop
sub
mov
xorb
push
popf
inc
xor
jo
jecxz
outsl
sarb
xchg
hlt
cltd
addr16
ljmp
pminub
lock
in
lods
xchg
fs
mov
cmp
xor
and
int
sub
out
lods
andl
sub
lahf
jp
stos
pop
ss
push
or
fucomi
xchg
mov
dec
sub
push
cli
mov
xchg
add
lret
test
or
pop
xor
gs
data16
and
pop
sahf
sub
sbb
mov
push
lret
and
pop
movsb
mov
cmc
ret
lods
sbb
dec
shll
mov
std
mov
jae
dec
ficompl
pusha
int3
pop
inc
pop
pop
in
or
movsb
cltd
xchg
loope
jns
and
and
push
fs
pop
sub
and
out
cmp
cli
push
cld
push
jge
cmp
pop
scas
scas
jne
repnz
jno
push
fiadds
inc
pop
ret
jecxz
testb
and
xlat
mov
dec
mov
daa
mov
minps
cmp
arpl
into
push
sub
out
icebp
dec
mov
mov
test
cld
aas
rorb
push
fcoms
cli
cwtl
jae
xor
int3
jg
or
es
dec
jo
inc
cmp
pusha
fisttpl
pop
repnz
jb
data16
movsb
clc
daa
mov
stos
ficoml
and
fidivs
sub
in
cmpsb
sbb
mov
imul
lcall
push
sub
mov
mov
loopne
mov
dec
pushf
jmp
and
sub
and
add
xchg
xchg
sbb
inc
add
sbb
lea
pusha
xchg
hlt
out
mov
popf
pop
clc
sbb
lds
fwait
adc
sbb
xchg
mov
arpl
push
sbb
int3
lds
lods
icebp
jg
sub
jecxz
das
jmp
dec
dec
or
and
dec
pop
sahf
ss
mov
and
sti
pop
jmp
pop
loop
jp
je
xor
mov
imul
xor
arpl
jns
dec
dec
and
inc
arpl
add
and
adc
mov
andl
inc
mov
lcall
test
xchg
imul
push
adc
sti
push
pop
imul
cmp
add
mov
cmp
cmp
aad
loope
je
into
lods
sub
out
pop
push
es
adcb
push
pop
pop
cld
mov
sub
das
or
inc
xchg
out
nop
xlat
push
and
push
ror
inc
inc
xchg
out
push
mov
mov
mov
mov
xchg
cwtl
call
add
sbb
loope
dec
lret
adcb
jo
sub
sbb
rdtsc
adc
push
aad
mov
sub
insl
aas
negl
sub
xchg
out
fiadds
cld
gs
imul
mov
js
sbb
or
jae
add
add
mov
fucomip
sub
repz
subl
gs
mov
xchg
dec
popa
adc
inc
mov
cmp
cmpsl
data16
out
insb
push
xor
jg
sbb
jbe
inc
fdivp
dec
sub
cld
add
pop
add
les
out
xlat
push
fistpll
cmp
xor
out
test
jp
and
ror
addr16
loopne
mov
in
mov
jmp
in
fmuls
out
jno
stos
mov
ret
mov
mov
ja
mov
aad
sar
sub
int3
xchg
push
push
add
dec
pusha
and
pop
aas
inc
push
sub
dec
and
cmpsl
mov
js
fisubrs
aam
jb
mov
outsb
push
leave
jg
aaa
test
inc
add
ret
out
push
out
and
sub
mov
sub
inc
repnz
mov
bound
xchg
pop
push
rcrl
fildll
push
stc
rdtsc
pushf
lea
call
pop
xchg
imul
test
lods
test
cltd
mov
sti
ficomps
xchg
stc
mov
outsl
xchg
aad
lods
xchg
xlat
xor
sbb
fisubs
and
notl
mov
inc
nop
push
adc
and
cmp
and
mov
push
cmpsb
in
push
adc
cmp
repz
mov
jg
mov
push
loop
mov
cmp
addr16
ds
mov
mov
movsl
fdivrs
dec
js
fstps
int3
pop
jo
addr16
ljmp
xchg
popa
lcall
mov
movsb
cmp
adc
sti
mov
sbb
mov
test
mov
xchg
pop
stos
xchg
mov
shll
cmp
xchg
test
inc
dec
push
lahf
mov
xor
fisubl
add
in
jbe
pop
roll
lea
fcoml
or
dec
out
add
sbb
xchg
outsl
jg
aad
shll
xlat
stos
xchg
leave
sti
pop
mov
mov
cmp
push
lock
and
mov
push
and
mov
je
sbb
inc
add
lcall
insl
enter
mov
or
lods
adcl
sub
out
mov
lcall
mov
std
fidivrs
or
cmp
adc
jmp
aam
push
test
cwtl
insb
adc
loopne
sbb
jno
incb
jae
xchg
int
cltd
roll
cltd
fistl
pop
pop
xchg
cs
or
pop
cli
adc
fsubrs
cmp
shl
bound
mov
lock
cli
mov
add
arpl
sti
pop
pop
sub
sbb
rolb
into
cmp
mov
cs
inc
mov
in
sbb
insl
pop
mov
imul
cmp
push
rcll
sub
inc
movl
les
sub
repnz
hlt
mov
int3
call
cmp
imul
aad
dec
push
mov
sbb
jecxz
xorl
ss
movb
enter
out
mov
xchg
add
inc
andb
sub
xchg
jge
cmp
lret
cmp
test
mov
jmp
das
scas
mov
and
test
fs
shll
mov
add
add
insl
cltd
mov
xchg
mov
ret
pop
mov
jo
or
adc
xor
inc
mov
add
mov
inc
pop
mov
es
pusha
aad
sahf
out
inc
or
sub
pop
inc
inc
enter
mov
cmp
inc
bsf
leave
mov
cmp
add
xor
add
xor
pop
mov
mov
adc
mov
nop
xchg
ret
stos
int3
ret
mov
pop
pop
mov
pop
inc
jno,pt
movsl
lahf
repz
cltd
xchg
inc
in
xchg
and
outsb
mov
sub
mov
jg
jmp
and
dec
push
adc
ror
or
icebp
mov
cli
scas
fprem1
adc
adc
mov
cmp
cmp
mov
cmp
jo
ret
push
pop
mov
pop
stc
push
pushf
xchg
sarb
jl
out
push
out
or
and
mov
mov
ret
fidivrs
jge
movsb
aam
mov
mov
aaa
scas
cmc
dec
stc
mov
jecxz
push
cmpsb
rcll
or
and
pop
into
out
adc
das
adc
sub
out
jae
adc
add
loopne
pop
push
ds
cmp
lds
cmp
or
ror
addr16
out
mov
jno
popa
or
test
sahf
push
adc
add
fstpt
popf
leave
iret
inc
shrl
and
mov
pusha
ror
jbe
add
bound
cmpsb
adc
inc
stos
ret
sbbb
cld
add
push
mov
sub
adc
mov
push
mov
gs
jge
lods
rcl
loopne
jnp
dec
cmpsl
dec
or
pop
sbb
sbb
jecxz
gs
sub
adc
bound
sub
hlt
pop
mov
test
or
outsb
sbb
inc
ja
test
mov
pop
and
orl
xor
testl
into
in
rorl
and
pop
stos
pop
pop
cltd
mov
add
bound
jle
adc
clc
cmp
add
xor
mov
pop
out
es
pushf
xchg
mov
adc
adc
mov
mov
xor
and
add
pop
fsubr
imul
sub
shrl
shlb
adc
or
add
ljmp
out
in
sub
test
push
fsub
js
mov
clc
sbb
mov
pop
adc
or
xchg
clc
shrb
xchg
mov
or
inc
sub
aas
inc
pusha
clc
scas
mov
inc
fiaddl
xlat
mov
or
imul
add
icebp
pop
pop
sbb
rorb
mov
ret
cmpsl
jbe
adc
hlt
xor
pop
imul
push
pop
sub
adcb
gs
adc
loope
inc
pop
jle
ficoml
mov
std
mov
bound
jns
fcomip
std
mov
call
sbb
in
mov
inc
adc
pop
loope
inc
pop
fucomip
xchg
mov
ret
adc
in
jg
mov
cli
jae
stos
mov
mov
add
lock
sbb
das
cmp
pop
push
xor
loopne
push
rcrb
cmp
jge
test
xchg
call
mov
pushf
cmp
mov
xchg
mov
test
and
sbb
adcl
adc
rcr
lods
mov
xor
clc
jmp
mov
xchg
enter
adcb
and
mov
or
lea
xchg
mov
lret
cs
fsubrl
push
sahf
rcrb
aaa
jb
jnp
jge
shl
nop
and
pop
sub
cmp
sub
ja
scas
sbb
ja
adc
mov
cli
mov
in
call
adc
mov
pop
cmpsl
mov
test
push
js
jne
aad
pop
pop
push
mov
clc
sti
scas
adc
hlt
cmp
xor
mov
test
leave
sub
icebp
sub
sbb
push
aas
cmpsl
js
sub
dec
add
fdiv
sub
mov
sbb
xchg
sub
sub
cltd
inc
enter
js
pop
inc
pop
aas
cmp
lea
cltd
xchg
jg
mov
out
push
or
mov
inc
bound
dec
iret
sub
cs
lods
pushl
mov
jmp
pop
ljmp
xchg
repz
int
inc
sbb
dec
lcall
pop
adc
js
sbb
lds
js
pop
lahf
test
lcall
push
add
mov
es
stos
mov
loope
push
imul
mov
jae
fwait
imul
xor
xor
mov
pusha
in
pop
in
push
clc
lahf
adc
cwtl
imul
cmpb
adc
imul
stc
fwait
pop
and
or
repnz
leave
loope
hlt
fcomps
push
push
mov
jle
jg
outsl
clc
sbb
inc
lds
xor
sahf
aaa
xchg
sti
dec
fists
add
dec
les
sbbb
sub
loope
addl
xchg
sbbl
ss
xor
rcll
fmul
inc
xlat
loope
cmpsl
and
paddb
scas
movsb
int
js
jbe
fdivl
cmp
test
in
es
ds
loop
add
mov
jmp
outsl
stc
daa
mov
xor
or
jl
loope
mov
fwait
stc
xor
sbbl
fidivl
cmp
mov
das
mov
dec
test
sub
aad
push
sbb
out
add
fistl
mov
lret
mov
mov
daa
es
imul
in
jae
mov
jl
daa
jmp
cwtl
test
scas
not
std
inc
pop
cli
pusha
inc
ficoml
adc
push
std
andb
test
mov
inc
add
sbb
dec
lods
dec
mov
cmp
pop
clc
cmp
ljmp
fistpll
rorl
cli
ss
jp
and
and
sub
ss
div
ss
call
cmp
aaa
int3
jns
jno
movsl
les
dec
and
lods
xor
and
cltd
pop
xchg
hlt
das
mov
in
out
push
or
push
inc
loop
mov
cmp
inc
adcl
sbb
xchg
cmp
test
pop
mov
xor
push
jle
and
icebp
pop
dec
cmp
add
je
xchg
cli
aad
fidivrs
or
push
xor
dec
xor
adc
enter
insb
xchg
ret
fs
fwait
loop
pop
out
pop
dec
pop
ja
jo
insb
jnp
lahf
jnp
xor
movb
xchg
rorb
dec
cld
jbe
adc
fcomps
mull
sahf
test
mov
lcall
sarl
cmp
fwait
dec
bound
insl
adc
lcall
dec
inc
jge
sub
je
loope
andl
cmp
in
mov
mov
icebp
and
or
ss
pop
and
mov
pop
xchg
es
add
pop
mov
pop
imul
addl
push
pop
hlt
cli
inc
in
hlt
and
sbb
lret
push
jl
fldcw
imul
inc
out
repz
lock
int
push
mov
xchg
pminub
xor
sub
cld
xchg
pop
hlt
add
push
cmp
dec
sarl
pop
ljmp
lret
or
sbb
lret
in
dec
jle
or
jns
or
fisttps
sub
xchg
enter
ret
mov
xlat
sub
aam
mov
lret
add
cli
jb
cltd
add
imul
push
and
xorb
out
push
out
ljmp
xchg
pushf
rcr
jbe
je,pn
cwtl
jb
mov
dec
jne
mov
xchg
rclb
mov
mov
jno
add
cmp
test
clc
xor
out
push
pop
lods
xor
outsb
pop
adc
js
jae
jecxz
leave
xchg
and
dec
or
add
inc
jmp
jnp
imul
fsub
test
push
sub
test
cld
in
dec
dec
stos
sti
fiadds
pop
lahf
sti
dec
or
xlat
flds
sbb
cwtl
jle
aas
je
sub
adc
xor
aad
sbb
ds
pop
sar
cmp
iret
jp
dec
sbb
add
add
or
or
dec
push
decb
in
push
aaa
negw
mov
popa
xchg
insb
fs
cmp
js
test
xlat
incl
add
mov
mov
sub
jne
cli
mov
mov
sarb
mov
dec
pop
fdiv
mov
rolb
jge
xorb
pusha
icebp
les
fucomip
lock
lods
lods
xchg
rcrb
scas
cmpsl
jae
add
jno
ret
inc
sbb
sahf
aam
mov
mov
push
addb
shlb
cmpsb
sti
addl
imul
and
arpl
mov
sbb
in
test
xor
add
aas
lods
lock
mov
dec
dec
add
and
pop
scas
in
dec
mulb
mov
xor
push
push
int
and
out
icebp
lcall
in
cltd
dec
shrb
stos
push
mov
mov
cmpsb
sbb
leave
jae
adc
fwait
jle
pop
dec
das
sbb
mov
or
into
ret
push
sub
insl
or
in
mov
push
adc
inc
divb
dec
fdivrs
sar
andl
cs
push
mulb
repnz
das
dec
negb
cmc
pop
popf
hlt
jns
and
leave
lcall
sbb
cs
push
shrb
scas
and
mov
fsubrl
ljmp
fisttps
into
int
mov
enter
decl
movsb
pop
inc
and
cld
fdivrl
and
je
and
mov
or
xor
sbb
inc
push
sarl
sar
lcall
mov
xor
stos
divl
ficomps
iret
rorl
push
arpl
cwtl
and
andb
cmp
cmp
cmp
ds
arpl
test
sub
in
cli
incl
xor
insb
lahf
in
les
shr
lods
xchg
inc
jle
sahf
aad
fs
inc
adc
sbb
sbb
cltd
fwait
dec
cmp
hlt
ljmp
xor
loop
sbb
je
loope
mov
mov
imul
sub
mov
cmc
push
stc
adc
sbb
sbb
mov
jle
outsl
lock
mov
and
pop
cmp
and
bound
sub
faddl
adc
mov
and
sub
nop
push
sub
loopne
or
xchg
rcr
jno
jne
xchg
nop
jbe
leave
or
jae
xorb
jg
jns
lea
enter
and
pop
xchg
mov
mov
fbstp
pop
add
divb
push
mov
movsl
mov
dec
pop
dec
xchg
mov
cwtl
add
cmp
fimull
rcrb
inc
fildll
jmp
and
adc
notl
add
jns
roll
scas
jge
stc
push
repz
pop
cmc
pop
dec
stos
adc
inc
pop
push
xchg
lret
pop
in
cwtl
cwtl
mov
and
loop
cmp
and
mov
in
jne
rcrl
dec
rcll
aaa
int3
sar
stc
pop
pop
testl
scas
push
push
clc
sbb
aas
jnp
aam
ffreep
jmp
repnz
lret
ljmp
dec
xor
shr
sbb
cwtl
std
mov
jp
fucomp
jp
mov
shrb
insl
jg
adcb
loope
sub
xchg
insb
cmpsb
push
mov
pop
add
stos
in
loope
adc
out
nop
ss
push
subb
push
cmp
inc
lret
stos
cli
xchg
adc
shr
inc
iret
mov
mov
xchg
pop
inc
aam
adc
sub
ja
xchg
lods
loope
bound
jno
jg
pop
add
les
push
dec
cmp
mov
loopne
in
xor
xchg
cmp
js
dec
addr16
xchg
mov
adc
push
pushf
and
mull
popa
nop
aas
add
lcall
add
sub
dec
repnz
es
push
mov
mov
repnz
jbe
push
mov
lret
hlt
inc
mov
jb
dec
cs
cmp
scas
jbe
xor
and
and
je
pop
xchg
jmp
add
mov
ljmp
dec
jno
sub
mov
ss
cli
test
sub
loope
add
add
add
jg
pop
jp
sub
mov
and
into
out
ja
lea
test
notb
aam
loope
pushf
add
or
les
int3
pop
xchg
jno
call
mov
xorb
loopne
js
lods
mov
sbb
dec
leave
mov
rcr
sbb
sahf
stc
ss
je
call
pop
ja
sbb
adc
loopne
pop
lret
inc
inc
jmp
jl
loope
mov
sbb
mov
add
mov
pop
roll
inc
mov
mov
shlb
test
sub
mov
out
jl
pop
xlat
cmpsl
xchg
daa
and
loop
mov
sub
jmp
mov
mov
jns
xchg
addr16
stos
mov
int
call
cwtl
int3
lock
push
jge
clc
or
sbb
out
or
mov
repz
mov
push
movzwl
xchg
test
daa
adc
bound
cmpsb
mov
std
popa
push
movsl
rorl
mov
mov
xlat
je
nop
inc
call
gs
stos
dec
clc
pusha
mov
mov
mov
mov
repz
mov
cmp
adc
dec
clc
into
mov
in
inc
add
adc
aaa
cs
add
mov
sbb
push
out
mov
out
sub
xor
sti
fiadds
outsb
push
int
mov
inc
cmp
sub
outsb
subl
cmp
mov
mov
mov
mov
xchg
sbb
arpl
mov
scas
dec
jne
test
in
push
mov
mov
movsl
dec
fucomip
inc
rclb
mov
jg
cmp
adc
mov
push
fs
inc
cld
inc
xchg
ja
pushf
adc
jp
xor
pop
dec
sub
ret
push
xchg
fiaddl
fsubrs
lods
mov
mov
mov
mov
ljmp
or
imul
xchg
pop
filds
loopne
mov
test
cli
and
shrb
sub
imul
or
lcall
xchg
addr16
mov
mull
push
in
ficompl
xchg
jne
aad
nop
imulb
cld
pop
adc
in
loope
add
add
push
lret
mov
xor
aaa
jle
negl
in
xor
daa
mov
test
xchg
inc
pop
lret
mov
inc
cmc
lahf
addb
hlt
sub
sbb
lret
mov
stos
cmp
mov
mov
aam
push
push
jmp
sbb
sbb
addr16
sti
inc
and
mov
bound
inc
mov
sbb
mov
inc
inc
pop
cmp
push
pop
cmp
mov
sub
xor
lods
insl
dec
nop
es
call
std
xor
gs
loopne
filds
leave
insb
sahf
out
lea
sarl
clc
jmp
aam
fs
addb
ss
cmpsl
and
xchg
test
jne
aad
fwait
mov
aaa
sub
or
xor
test
sbb
subl
hlt
jo
inc
lret
jg
fimuls
imul
add
and
adc
add
add
cmp
inc
adc
out
mov
sbb
pushf
pop
xor
push
rclb
xlat
adc
sub
xchg
in
lods
hlt
shr
ret
jno,pt
mov
cmp
jbe
out
ret
cmp
jp
mov
subb
scas
jae
js
mov
push
and
fs
jo
cmp
mov
movsb
mov
mov
mov
sub
pop
dec
jno
les
cli
pushf
fcmovnu
or
int3
fisttps
cwtl
out
popf
push
test
pop
in
cmp
inc
roll
cmp
cmc
mov
mov
pop
xchg
push
dec
mov
ljmp
mov
lret
push
mov
jmp
cli
mov
adc
mov
jno
mov
les
les
out
lods
and
xchg
jno
loopne
clc
inc
mov
scas
popf
jge
pop
mov
js
adc
dec
push
stos
mov
adc
adc
mov
xor
xchg
fsubrs
fldcw
mov
neg
add
imull
cmp
cltd
or
sub
inc
popl
add
add
add
add
add
xor
add
add
sldt
add
add
outsl
add
add
mov
add
pop
cmp
cmp
mov
lea
push
insb
fstps
das
jnp
adc
cmp
mov
cltd
daa
shlb
dec
xchg
lret
jecxz
pop
cwtl
je
sbb
dec
pop
adc
xor
xor
jmp
aas
in
int
arpl
loopne
gs
push
scas
mov
cli
mov
jle
or
aas
dec
into
mov
xor
xchg
rcr
dec
sbbb
cmp
cwtl
push
stos
pushf
arpl
mov
mov
xchg
and
adc
dec
xchg
aas
mov
ret
mov
iret
movsb
sub
jo
dec
pop
cwtl
gs
imul
inc
fs
stc
inc
addb
test
fistpll
lret
jg
adc
mov
and
outsl
lea
insb
scas
mov
push
bound
pushl
scas
inc
jp
bound
lock
cmp
adcl
cmp
test
cmp
xchg
enter
pop
arpl
repz
repz
enter
adc
cmp
es
add
inc
mov
adc
test
pop
mov
cld
mov
pop
xchg
loopne
orl
lret
add
cltd
testb
mov
inc
int3
int
jmp
xchg
test
loope
push
enter
pop
je
ja
dec
xor
lahf
sub
dec
imul
ss
adc
iret
call
fisubrl
jp
and
cmp
mov
mov
sub
ljmp
mov
adc
push
mov
xchg
fdivs
cltd
popa
or
gs
push
test
push
int
dec
movsb
sahf
add
fcomi
lret
enter
aaa
fs
add
add
daa
mov
push
movsb
faddp
jmp
iret
lods
add
mov
xchg
mov
shll
popf
push
std
cmpsb
inc
push
inc
inc
rcr
or
scas
mov
and
xor
fisubs
push
push
jbe
pop
insb
es
and
je
mov
popf
sub
cmp
dec
add
dec
inc
mov
add
divl
mov
je
bound
incl
add
add
add
cli
add
add
test
push
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lahf
add
testl
add
add
add
add
add
add
mov
add
add
stos
cli
add
add
add
and
add
add
add
insb
add
add
add
cmc
add
add
add
add
add
add
add
add
add
add
add
add
imul
or
add
add
add
add
add
add
add
add
add
add
pusha
aaa
add
add
jg
add
add
add
add
add
add
add
in
add
add
add
sbb
add
add
add
add
add
add
out
add
and
add
add
jg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
xor
shr
dec
clc
popf
lcall
test
mov
cs
xchg
fcom
add
imul
mov
adc
iret
mov
mov
fucomip
in
xor
pop
xchg
pop
out
push
int3
mov
adc
xchg
push
and
repnz
mov
mov
bound
lahf
jmp
push
adc
and
mov
ss
push
fadd
adc
loopne
sbb
pop
out
test
dec
pop
jle
icebp
rcl
dec
inc
dec
or
add
xor
sti
xor
repz
cli
idivl
jns
cltd
mov
inc
jns
in
adc
das
repz
out
fldl
inc
pop
stos
shlb
inc
push
xchg
jne
sbb
mov
mov
xchg
xor
or
pop
and
addr16
push
mov
xor
mov
mov
bnd
decl
cmp
outsl
pop
dec
aas
cmpsb
in
cmp
mov
insl
pop
jae
xor
fsubrs
daa
jl
mov
inc
fnop
adc
or
int3
adc
fsts
cmpb
nop
fwait
xchg
xchg
push
dec
mov
fwait
pushf
or
pusha
push
rorb
les
stos
loopne
aaa
dec
sub
xchg
dec
jecxz
scas
sub
or
call
mov
inc
or
or
fwait
pop
out
lahf
test
test
mov
fiaddl
sub
xchg
sbb
lods
sub
or
sub
ja
iret
mov
fsts
je
imul
scas
cli
inc
sbb
mov
dec
icebp
jbe
call
or
aad
aam
push
mov
sub
inc
enter
adcb
xchg
push
hlt
cld
insb
or
xchg
jae,pn
test
or
shl
jp
mov
movsb
enter
outsl
xchg
push
lahf
pop
pop
sub
aam
dec
or
imul
cmp
test
mov
fimull
push
sbb
jmp
mov
fstl
sbb
dec
sub
icebp
jmp
repz
jb
push
inc
mov
lds
out
bound
inc
xor
in
lods
xchg
pop
aam
or
fsubrs
sbb
pop
fisubrl
aam
or
dec
adc
inc
btr
cmpsl
dec
and
pushf
add
fsubrl
mov
ds
mov
aad
adc
mov
cltd
aam
push
int
repz
xchg
or
dec
xchg
sub
cmp
lcall
aam
push
or
fdivp
push
not
add
shll
shrb
insl
dec
xchg
cmp
fsts
clc
mov
fldcw
movb
out
jae
iret
mov
cmp
mov
jo
cmp
push
out
jge
cmc
xor
in
pop
test
jle
and
popa
fs
xchg
pop
js
pusha
dec
sbb
mov
mov
lds
pop
leave
jne
or
push
mov
jno
in
adc
das
cmp
add
mov
push
jge
lods
pop
sbb
adc
pop
jg
lea
data16
mov
ficoms
sub
jae
nop
xor
pusha
mov
in
sub
and
pop
shl
lods
movsb
divl
das
insb
add
mov
sub
in
dec
dec
push
stc
xor
pop
xor
lcall
sbbl
jo
pushl
pop
pop
sarl
cmpl
rclb
jmp
loopne,pt
dec
adc
sub
add
jne
sub
rcr
jl
xor
test
xchg
das
insb
pop
icebp
jbe
adc
jo
sbbl
int
jne
add
dec
and
cmp
mov
inc
lret
and
and
adc
in
xor
les
popa
or
fiadds
jnp
sarb
adc
mov
cwtl
das
into
mov
jl
push
rep
loopne
push
cmp
loop
jg
ljmp
mov
out
push
leave
sbbb
insl
inc
xorl
xchg
cwtl
and
cmp
je
add
xlat
pop
jg
pushf
inc
aaa
pop
mov
loop
and
add
dec
out
sahf
shrb
dec
dec
lret
adc
mov
inc
jne
jecxz
adc
push
pop
aaa
adc
sbb
ret
xor
sub
hlt
andl
shlb
pusha
and
neg
shl
insb
std
cltd
pop
fwait
sbb
jp
mov
repz
push
mov
mov
loopne
sbb
fsubrs
fbld
push
mov
push
and
inc
fimuls
xchg
fcomps
cmp
cs
mov
shrl
push
leave
rcrl
sub
rcrb
negb
call
push
popa
xchg
sub
mov
imul
push
call
fs
push
mov
mov
cmc
sub
xchg
daa
jno
lret
or
in
push
mov
ljmp
or
pop
ss
push
sub
push
cmpsl
lea
leave
hlt
xlat
loope
xor
sahf
data16
nop
insl
add
aam
gs
add
std
adc
int
dec
aam
ss
in
xor
enter
test
add
pusha
js
arpl
sub
xchg
iret
stc
ret
js
ret
mov
shll
cli
push
shrb
dec
mov
imul
xchg
sahf
pop
push
insl
sub
movl
mov
js
or
mov
or
inc
xorb
decl
xor
jae
into
push
push
test
pop
imul
and
orb
dec
in
jbe
lahf
dec
sub
call
aaa
outsl
scas
lods
push
pop
and
jb
xchg
stos
adc
outsb
pop
popa
mov
and
lods
out
icebp
mov
inc
fmuls
fcoms
pop
mov
and
int
stos
enter
mov
jp
sbb
cmpsb
jbe
sar
sbb
xchg
or
lods
jl
das
aam
adc
jb
js
arpl
ljmp
dec
stos
sbb
call
pushaw
andl
repnz
mov
add
cmp
imul
repnz
aas
xor
pminub
lret
rcl
in
mov
adc
xor
je
xlat
loop
inc
sub
pop
imul
push
push
in
dec
jb
mov
or
dec
imul
pop
stos
push
xlat
test
aaa
pop
pop
insl
outsb
neg
mov
arpl
dec
fsubr
inc
push
test
mov
ja
rorb
mov
push
push
mov
jecxz
mov
pop
sbb
add
loop
pop
xor
inc
ret
push
lcall
cwtl
pop
adc
sti
shld
scas
or
push
movsl
sbb
jbe
mov
inc
dec
repnz
cmpsl
cmp
cmc
in
mov
adc
cmp
pop
pop
xchg
shlb
adcl
pop
fcoml
imul
int3
cli
in
inc
pop
popa
incl
mov
sbb
cli
inc
jg
ljmp
xor
mov
push
jmp
cli
lods
pop
cmpsl
xor
ret
xchg
mov
pop
jg
fsub
adc
fdivr
fiadds
mov
xchg
das
mov
das
cmp
scas
inc
mov
mov
arpl
fmulp
pop
and
inc
testb
cwtl
mov
mov
mov
repnz
push
aaa
loope
pop
push
arpl
std
mov
outsb
ja
and
cmp
int
testl
sub
jnp
mov
lds
mov
lcall
in
jno
imul
mov
lea
mov
rcl
adc
sti
add
test
dec
loop
ljmp
cmpsl
jg
ss
hlt
mov
repnz
cmpsl
pop
ljmp
jns
lds
xchg
jmp
dec
rolb
lret
mov
mov
inc
sbb
add
lods
jecxz
fdivp
lcall
and
jecxz
fidivrs
outsb
scas
nop
and
push
pop
and
or
xor
negb
mov
mov
xchg
test
cs
insl
or
push
das
sbb
aad
dec
lods
fmulp
add
xor
out
scas
mov
dec
pusha
out
leavew
ss
mov
js
aas
mov
add
pop
jno
sub
std
inc
adc
add
lret
or
cs
and
out
mulb
add
mov
ja
lcall
repnz
aad
loop
aas
mov
loopne
jg
inc
out
cltd
ror
cmc
or
mov
lds
fidivl
pop
test
data16
andb
cmp
movsb
mov
push
dec
xchg
into
and
sbb
pop
push
fucomip
cmp
dec
mov
jl
cltd
rcrl
jl
lret
stos
xor
inc
fcomip
stc
adc
sub
lock
ss
stos
push
lods
jae
adc
shll
movsl
adc
mov
movsb
dec
cltd
mov
cmpsb
add
repz
rorb
or
mov
lret
push
inc
xor
jne
les
pop
or
mov
mov
test
ds
jns
push
inc
pop
jle
add
cmp
roll
adc
aad
and
push
sti
loope
ret
ret
adc
cmp
in
cmp
jp
adc
cld
dec
inc
push
pop
add
xor
fildl
xchg
push
fcmovu
clc
gs
jle
pop
jns
push
aam
cmpsb
call
or
sub
inc
outsb
mov
cmp
jg
rcrl
mov
add
adc
xlat
push
or
movsl
lods
cmc
das
popf
xchg
pop
sbb
mov
cltd
push
es
jmp
imul
rorl
subl
and
pop
jg
and
jne
xorb
aad
lock
mov
sahf
push
fwait
out
sub
pushf
mov
fcoml
xor
jecxz
mov
sbb
dec
js
test
or
fmuls
inc
stos
aad
cli
xorl
test
pop
xor
es
gs
nop
ret
cmpsl
sub
data16
jp
pop
cmp
mov
mov
aas
or
sub
clc
test
pop
pop
cmp
sbb
clc
popf
sub
aam
in
out
nop
add
cmp
sbb
jno
add
mulb
dec
sub
push
sbb
js
push
and
pop
pop
or
push
push
pop
std
xor
jecxz
mov
sub
scas
xor
push
push
dec
inc
jl
pop
push
cmp
mov
jb
push
vminss
add
add
insl
push
shr
in
push
sub
push
or
divb
xchg
xchg
lahf
ret
int
js
xor
out
jae
cmp
sbb
xchg
movsl
adc
pushl
ret
lock
divb
pop
add
fnstsw
jnp
imul
pop
gs
scas
shlb
fnstcw
aas
jbe
in
bound
xchg
xor
stos
fdivs
adc
push
movsl
pop
divl
pop
jmp
mov
insl
gs
faddl
ds
fwait
into
fs
add
rcl
pop
shrb
mov
ds
hlt
mov
push
fiaddl
orl
cmc
mov
idivl
and
out
addr16
imul
aaa
push
in
dec
cmp
je
test
insb
out
rcll
xor
push
out
fldl
sub
inc
push
sub
daa
or
inc
psllw
jo
rcrb
cmpsb
movsl
into
das
rcrb
test
sbb
cmp
pop
sbb
sub
mov
sub
mov
neg
repz
push
call
xchg
leave
mov
pop
into
jmp
ds
mov
rcll
pop
sub
movsb
xchg
add
mov
icebp
sub
test
add
pop
enter
cwtl
adc
in
jnp
mov
rorb
inc
or
jg
mov
pop
jbe
dec
outsl
push
sbb
scas
fldcw
movsb
in
xchg
movsl
imul
push
cmpl
ljmp
push
movsb
aas
add
out
and
enter
inc
adc
xchg
ret
sbb
clc
lret
jmp
mov
sarb
negl
xchg
imul
mov
dec
rorl
mov
fs
sub
aaa
push
dec
xchg
adcb
adc
mov
adcl
iret
or
sub
pushf
pop
stc
cmp
xchg
lea
ret
pop
lock
mov
mov
mov
in
jecxz
mov
and
sub
jbe
add
xlat
shrl
imul
idivl
call
outsb
fnstsw
and
pop
adc
lahf
in
test
cs
movsb
push
fdivr
sbb
ret
stos
je
into
in
cmpsb
and
jmp
push
out
ffree
cmp
xchg
fisubrs
scas
pop
jbe
in
pinsrw
int3
stos
cmp
outsl
xchg
je
into
and
pop
stc
dec
popa
insl
fdivs
jge
rorb
pop
inc
daa
nop
icebp
jne
loop
aam
orl
jl
dec
xchg
loop
mov
pop
push
stos
addr16
cmc
bound
cmp
orl
push
test
mov
and
cwtl
ret
dec
add
inc
outsb
in
aas
decl
out
inc
adc
data16
pop
push
loope
rclb
lock
dec
mov
or
xchg
std
sbb
jle
mov
daa
movsb
imul
fwait
sbb
add
adc
cli
int3
jg
cmp
outsb
dec
pop
testl
int
shlb
inc
sbb
xchg
add
dec
rcr
xor
mov
movzwl
pop
pop
pushf
pop
xor
push
xchg
out
sub
pop
or
jns
iret
pop
sbb
enter
push
mov
insb
test
cmc
fstl
decb
loop
fsts
test
fbld
or
scas
jge
hlt
push
fcoml
sahf
lods
enter
mov
sarb
sub
dec
jle
test
bound
xchg
lock
in
mov
xchg
jge
jecxz
xchg
ret
test
xlat
in
test
sti
push
fxch
inc
xor
das
addr16
scas
sub
dec
xor
sarl
and
dec
js
xchg
dec
sahf
xor
mov
in
lods
mov
push
test
and
inc
inc
inc
out
jecxz
xor
or
sub
xlat
rorl
mov
mov
mov
jne
out
and
ja
sbb
inc
push
insb
icebp
or
mov
sarb
jo
nop
js
mov
outsb
jns
sarb
xor
mov
jne
or
mov
jne
popa
add
mov
lcall
push
sti
rcrl
add
cmp
popf
out
adc
xor
jo
ret
xchg
in
mov
daa
je
lahf
shlb
mov
pop
push
pop
push
loopne
add
popf
cmp
outsl
ret
rcll
inc
or
xchg
pop
xchg
enter
xchg
into
jne
imul
lds
sub
or
aad
stos
daa
jl
or
sahf
xchg
test
sub
jmp
sub
add
addr16
xchg
gs
iret
scas
jmp
xchg
pop
mov
adc
inc
and
xchg
inc
cmpb
xchg
sti
and
mov
cmp
into
shll
push
lds
pushf
pop
mov
jno
std
pop
cltd
mov
out
push
push
not
iret
xor
andb
std
and
movsb
inc
sbb
inc
fisubs
in
sti
cld
xchg
sbb
xchg
ja
rolb
mov
mov
inc
in
or
popl
scas
adc
cmp
push
int3
mov
inc
insl
mov
push
pop
xor
popf
pop
aam
mov
jp
or
cmp
push
insl
iret
adc
aaa
pop
sbb
push
sub
mov
sub
popf
mov
lds
test
aam
or
repz
out
aas
mov
push
xor
int
push
inc
sahf
dec
mov
pop
es
xchg
rolb
mov
insl
push
mov
mov
add
inc
mov
sub
add
push
out
lcall
jb
fistps
arpl
mov
and
jae
mov
lods
jb
add
add
inc
jbe
mov
mov
jg
out
sub
mov
sbb
repnz
mov
ret
mov
dec
mov
shrl
adc
jae
ljmp
mov
imul
pop
xlat
cmp
or
mov
pop
cmp
lds
imul
adc
push
std
outsl
stos
aam
shlb
leave
ljmp
ds
rcl
cmp
xlat
outsl
push
sbb
loope
cmc
cmp
mov
sub
fwait
mov
xchg
imul
leave
les
pop
mov
mov
xchg
push
xchg
es
mov
add
ret
jne
mov
in
ss
aad
pusha
add
xchg
or
ss
pop
mov
sub
mov
cli
scas
xchg
std
lods
mov
mov
jns
mov
and
ret
xchg
ja
or
and
jnp
adc
shrb
inc
das
or
out
cltd
cmp
fadd
in
lods
sub
mov
cmp
xchg
sbb
adc
cld
sub
rcl
fdivs
mov
add
mov
leave
jge
lods
inc
dec
adc
mov
loop
adc
imul
jb
lret
sbb
pop
sub
mov
lea
ss
in
cmc
out
sbb
shr
mov
fsubl
rorl
add
pushf
and
pop
imul
add
sar
ds
pop
or
xchg
fnstenv
enter
add
movsb
jmp
inc
adc
stc
mov
test
jb
add
ret
dec
jo
in
fldl
clc
push
cmp
cmp
or
dec
or
sbb
xchg
inc
mov
lods
pop
sbb
ss
jp
sub
scas
inc
cmp
xchg
outsb
mov
dec
mov
lret
sub
cli
push
xor
mov
int3
mov
das
mov
adc
pop
dec
nop
pushf
push
in
push
stc
lods
stc
xchg
retw
jl
pop
or
inc
repnz
mov
fnstenv
arpl
xchg
lods
pop
xchg
jbe
mov
sub
pop
in
push
jp
inc
add
xchg
mov
scas
test
or
sub
mov
xlat
pop
out
notb
orb
jp
out
adc
lret
inc
ljmp
les
mov
xchg
sub
and
repz
in
out
iret
or
xchg
add
dec
andl
das
orb
add
fmull
lahf
dec
or
and
cld
scas
test
or
hlt
sbb
inc
sub
mov
jge
add
sub
dec
mov
les
jl
test
inc
pop
and
mov
enter
and
inc
mov
add
enter
sub
cmp
dec
std
inc
rorb
xchg
jmp
xchg
out
mov
push
inc
imul
cmp
in
ljmp
mov
adc
enter
sbb
push
test
mov
cmp
ficoml
mov
mov
mov
test
pop
xor
push
pop
dec
int
ds
sub
push
add
push
int
lahf
push
dec
inc
aam
cltd
sub
and
or
cwtl
sub
xchg
xchg
dec
mov
cld
into
cmp
xor
push
pop
mov
fs
lcall
mov
xchg
push
mov
test
mov
fisttpl
mov
xchg
pop
fs
pop
cmpb
and
push
mov
lock
fstps
mov
mov
add
mov
jb
xor
add
out
mov
cld
call
push
jl
cltd
add
jmp
jns
dec
das
jb
sbb
mov
pop
pop
mov
sub
adc
add
insb
cmp
jnp
sub
lret
jb
pop
out
bound
sarb
loop
stc
pop
test
and
push
stc
xor
xor
das
pop
imul
mov
clc
add
sub
pop
shl
add
push
in
imul
cmp
mov
pop
in
ljmp
pop
jns
add
add
xor
imul
pop
mov
jnp
jb
add
and
out
jo
int3
dec
andb
outsb
mov
popa
push
lea
daa
shl
inc
andl
lea
lds
add
adc
int3
cmc
xor
jb
pop
rcr
adc
pop
es
roll
push
sbb
xchg
inc
cmpl
decl
mov
loope
aam
fldl
loope
pop
sbb
mov
fbld
mov
cs
dec
xor
jns
mov
xchg
cmc
xchg
aam
lret
ss
pusha
push
jg
mov
mov
insb
push
idiv
in
sar
pop
in
sbb
xchg
adcl
flds
push
mov
and
sti
int3
inc
leave
sbb
std
mov
adc
clc
mov
inc
sbb
dec
orl
mov
minps
out
cmp
das
pop
repz
add
mov
sahf
xor
and
jnp
out
jmp
jb
sarl
push
mov
or
xor
in
or
xor
sub
popa
outsb
nop
lds
ss
nop
pop
cli
sbb
or
je
ret
pop
fwait
mov
negb
movsb
daa
pop
jne
mov
ds
cmp
ret
mov
inc
jne
and
mov
dec
pop
pop
loop
or
xor
jmp
cmp
xor
iret
xor
inc
jb
push
inc
aaa
insb
scas
lcall
inc
inc
xor
add
pop
sbb
into
jg
ret
lods
js
dec
jmp
mov
call
push
jnp
das
and
add
je
pop
inc
mov
imulb
adc
cmpb
inc
or
addr16
sbb
push
push
xchg
bndstx
cmp
cmp
adc
push
mov
jns
data16
jb
sub
xor
shll
fistpl
inc
inc
add
movsl
jbe
jp
aas
cmc
fildll
push
loope
cli
xchg
call
into
pushf
js
shlb
icebp
jmp
jge
imul
cmpsl
setge
push
inc
fs
dec
inc
sub
lds
aam
adc
pop
mov
aas
es
aas
outsl
mov
jmp
and
fs
jno
sti
mul
push
popf
in
dec
rdtsc
adc
push
movsl
xlat
mov
push
sub
pop
leave
jg
lret
stc
bound
out
rcrl
stc
add
icebp
mov
cli
pop
mov
subl
add
cmp
and
sub
inc
jge
rorb
test
push
fnstenv
jmp
pusha
out
loopne
cmp
mov
or
lahf
pop
sbb
adc
sub
mov
xchg
mov
jo
add
sbb
dec
js
and
jmp
sbb
mov
jnp
sub
sub
mov
jecxz
lea
or
aad
pushf
data16
jne
and
loope
mov
xor
mov
and
les
pop
jp
inc
test
ret
leave
pop
push
cmp
sub
xor
xchg
add
jp
dec
filds
cwtl
mov
shrb
out
pop
dec
jno
ljmp
cmp
mov
mov
mov
and
je
movsl
fwait
out
shl
push
mov
push
and
fsubp
aas
jle
inc
cmp
sbb
clc
cld
xor
sub
das
out
cmc
dec
push
aad
in
ljmp
cmp
inc
push
dec
fsubl
mov
adc
popf
stos
adc
or
hlt
out
sub
loop
ret
out
mov
fidivl
push
jp
push
loope
gs
xor
rcll
mov
nop
jmp
add
in
setb
sub
sub
sub
dec
repz
sub
xor
rcrb
inc
xor
je
pop
nop
mov
cmp
lcall
pop
test
xorl
inc
movsl
jge
inc
xlat
sub
jnp
pop
jno
adc
lret
jno
test
das
cltd
jecxz
imul
out
inc
push
arpl
cli
aas
lods
lcall
xor
pop
notb
xchg
mov
imul
fs
mov
pop
pop
iret
cmpsb
or
adc
call
leave
ss
addr16
xchg
jge
mov
lahf
push
insl
push
pop
insl
jg
jecxz
mov
hlt
and
testl
stos
fnstsw
insl
ljmp
and
pop
fstps
mov
pop
mov
imul
in
lret
mov
int3
xchg
mov
lods
ss
fisubl
outsb
jl
xchg
mov
sbb
push
stos
xchg
ficoml
xchg
lods
aad
rorl
and
mov
les
outsl
mov
ss
xor
bound
mov
and
or
xchg
sub
filds
inc
and
ja
pop
ret
lret
push
xor
jnp
add
fstl
xchg
cmp
dec
sub
xchg
inc
dec
adc
loopne
daa
lods
lods
fmulp
sahf
pop
jne
adc
mov
or
mov
sub
xchg
and
inc
fisubs
xchg
test
pop
lods
and
cmpsl
push
pop
fwait
orb
xchg
outsb
outsb
imul
int3
fisubs
popa
mov
adc
neg
mov
pop
and
jo
ficomps
xchg
cli
popa
push
xchg
mov
cwtl
xchg
jecxz
cwtl
je
cmp
mov
inc
jns
mov
mov
xadd
iret
in
stos
int
xchg
mov
stos
jo
aad
in
jge
mov
xlat
fcomps
xchg
shll
and
sbb
xor
shl
call
stos
xchg
pushf
pop
push
add
mov
sbb
mov
jl
repnz
sahf
mov
daa
and
mov
jno
adc
lret
dec
iret
pop
cmc
movsl
sti
dec
mov
inc
jmp
test
mov
lcall
and
push
jmp
and
pop
cwtl
outsl
xchg
pop
add
mov
outsl
lahf
fadds
pop
popf
sti
leave
push
push
push
jnp
jo
jp
mov
adcl
mov
adc
ret
subl
mov
pop
xor
inc
xlat
cltd
jecxz
push
cmpsb
insl
pop
cmp
icebp
or
cmp
or
push
jae
sub
imul
out
insl
stos
jo,pt
xchg
cld
fisttps
mov
testb
mov
fwait
cld
mov
gs
es
outsb
sbb
add
hlt
push
mov
repz
mov
dec
fmul
inc
jl
jbe
bound
sub
lods
sub
xchg
lahf
int3
xchg
cld
mov
es
push
push
or
aaa
gs
fistps
inc
pop
jnp
dec
lea
mov
popf
inc
xor
push
cwtl
in
cmc
xchg
push
lock
sub
xchg
adc
test
ja
call
scas
out
push
adc
jns
jecxz
mov
or
es
add
jns
sub
out
mov
inc
xchg
dec
mov
mov
cltd
lcall
xchg
sahf
push
pop
bound
jnp
aas
aaa
test
mov
outsl
mov
jecxz
imul
cmovno
mov
jnp
adc
lahf
push
dec
aam
divl
js
jg
inc
pop
adc
fistpll
rolb
xor
notb
jns
cmp
out
adc
mov
stos
loopne
sub
or
mov
mov
or
cmpsb
ljmp
mov
and
negl
mov
push
fisttpl
xor
mov
fcomps
push
lahf
push
add
push
mov
push
lret
dec
mov
mov
mov
dec
add
add
or
add
aaa
sbbl
add
ja
in
pop
into
mov
cltd
adc
add
add
add
add
iret
add
add
add
add
add
add
inc
add
add
add
xchg
add
add
add
movsl
add
add
add
clc
add
add
add
add
add
add
add
add
add
add
add
add
in
add
fadds
add
add
add
fadds
add
add
add
add
sahf
mov
add
add
add
add
add
add
add
add
add
add
movsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
inc
jbe
repnz
jl
loope
mov
mov
lret
fcompp
inc
sbb
shl
and
cmpsl
mov
add
push
dec
lahf
xchg
cmp
mov
pop
pop
iret
add
inc
mov
mov
push
movsl
sbb
test
sbb
push
dec
inc
inc
cltd
pop
add
in
pop
mov
lea
push
pop
cmp
in
leave
gs
inc
cmpb
sub
pushf
xchg
mov
in
test
ss
push
outsb
or
cmp
pop
cmp
inc
mov
mov
clc
arpl
js
push
daa
adc
es
inc
mov
imul
pop
sahf
dec
inc
popl
call
loopne
push
pop
loope
sbb
mov
loop
out
insl
dec
cmp
mov
jb
test
cmp
and
add
dec
mov
inc
dec
hlt
and
cmpsl
mov
adc
loop
ss
jp
cmpsl
cmpsb
push
dec
sub
xor
out
adc
dec
clc
iret
push
or
xor
xchg
je
inc
mov
jecxz
mov
or
mov
ret
lret
xor
orb
sbb
pop
cltd
mov
aas
mov
ror
jle
or
divl
ljmp
mov
jne
out
or
jecxz
sub
cmc
push
int
das
cs
mov
sub
subb
mov
xlat
ljmp
ljmp
pop
mov
cmc
ret
pop
in
jmp
adc
push
std
insb
call
dec
test
mov
pop
shll
adc
iret
pop
jno
jecxz
fs
rcrb
xor
icebp
or
and
inc
pushf
lods
mov
and
imul
aaa
outsl
jo
test
jbe
mov
cmpb
scas
ja
insl
in
xchg
push
ja
cmpsl
outsl
jge
inc
popa
pop
stos
ret
jge
sub
out
inc
push
cmp
cmc
out
enter
dec
pusha
push
test
into
dec
xchg
bnd
addb
sar
or
or
mov
rcrb
mov
inc
jbe
lcall
loopne
mov
ss
pushf
stos
je
cs
and
sti
daa
mov
rorb
add
data16
ret
das
mov
mov
dec
dec
pop
add
or
and
adc
dec
lods
or
or
mov
mov
fwait
pop
lret
mov
std
jge
cld
xchg
out
rcll
jno
movsb
ja
lds
je
shll
into
sbb
nop
test
int
scas
inc
lret
lock
movd
gs
pop
and
adc
test
or
jae
das
fcomip
xchg
pop
push
mov
cwtl
mov
fsubl
aaa
sub
xor
call
dec
xchg
xlat
sub
mov
inc
add
out
jecxz
push
gs
add
mov
fisttpl
or
or
hlt
sahf
sarb
repnz
xor
js
loop
es
out
aad
pop
loop
shll
pop
in
mov
dec
sti
mull
sbb
adc
loop
fdivrl
lods
xchg
lock
jp
ljmp
mov
jnp
jne
jge
push
adc
decb
xlat
out
sbb
adcl
jle
push
adc
cltd
jg
js
mov
jb
mov
dec
test
hlt
test
iret
inc
pop
fistpl
jle
xlat
fwait
in
in
out
ret
je
pop
pop
xlat
inc
shll
sub
and
stc
cmp
pushf
clc
dec
rolb
ljmp
loop
dec
jmp
push
sbb
cmpsb
bound
cwtl
cmpsb
inc
xor
ja
mov
push
mov
jge
add
and
inc
mov
ret
leave
dec
xor
daa
adc
or
aam
mov
pop
jmp
mov
cmp
call
movsb
out
cmpsb
mov
mov
in
faddl
lds
xor
repz
cmp
leave
gs
cwtl
pop
push
jmp
cli
push
cmp
jae
mov
daa
xchg
ret
mov
gs
xor
repnz
div
popa
ss
mov
mov
jbe
stc
xchg
jge
xchg
cmp
pop
loop
repz
jmp
xchg
mov
out
lds
mov
fistl
insl
daa
inc
lock
jns
sbb
mov
loop
jae
data16
shl
inc
cltd
dec
das
pop
adc
push
mul
int
pmaxub
mov
push
leave
sub
lcall
lods
lods
dec
adc
or
cld
cmp
out
add
pop
arpl
movb
jnp
mov
push
xor
mov
pop
cli
sbb
loop
icebp
mov
push
sahf
test
jbe
inc
dec
fisubrs
cmp
pop
sbb
add
or
divl
xlat
push
notl
lret
jns
and
xchg
pop
mov
stc
outsb
loope
aaa
loope
jmp
push
mov
scas
fcoms
sub
stos
xchg
and
add
xor
out
nop
repz
pop
sbb
dec
mov
inc
imul
xchg
inc
enter
fcoml
pop
xor
jno
inc
dec
iret
call
push
xchg
mov
push
dec
jns
insb
mov
leave
jno
sbb
int3
cwtl
lahf
cltd
popa
fcmovne
out
repz
xchg
cltd
mov
push
fdivr
test
popa
xchg
cmc
adc
jb
mov
dec
scas
and
daa
idivl
xor
push
mov
out
pop
xchg
push
inc
aam
sbb
push
test
jo
adc
repz
aad
enter
mov
es
clc
mov
fwait
shll
and
sub
jmp
cli
loop
std
push
fs
pop
movsb
xor
cs
sbb
jmp
outsb
mov
add
inc
pop
mov
fwait
adc
call
sub
rol
cli
pop
xor
dec
cmpsb
mov
mov
test
movsb
push
out
push
pop
pop
std
xchg
arpl
cmp
icebp
jg
dec
sbb
cs
jmp
leave
pop
out
loop
lock
and
inc
xlat
sub
daa
mov
inc
pop
out
mov
dec
inc
lods
les
pop
pop
aaa
aaa
mov
adc
xchg
pop
test
or
jmp
inc
and
ja
fiadds
dec
cs
insl
arpl
stc
nop
and
lea
mov
mov
add
pop
mov
jne
sbb
and
sub
xor
inc
mov
jbe
imul
push
rorw
aas
cwtl
imul
out
cmc
inc
insb
movsl
fnstsw
mov
lahf
loop
cmp
addr16
sub
mov
cwtl
out
add
mov
push
out
ja
xchg
or
cltd
adcl
cmp
out
ficompl
repnz
in
mov
sub
xlat
pushf
adc
xchg
pop
cmp
mov
fdivrs
jle
hlt
xchg
or
enter
push
les
dec
cmc
cmpb
xchg
jnp
mov
data16
pop
test
xor
rclb
adc
lods
push
pop
inc
iret
and
add
ja
pop
or
sbb
xchg
jo
inc
ja
push
mov
fistl
lcall
jl
dec
inc
leave
adc
pushf
idivl
fdivrl
movsl
push
cmpsl
inc
cld
out
push
xchg
push
push
out
xor
cli
popf
push
dec
shll
sbb
mov
inc
push
loopne
lret
push
je
into
jp
cwtl
mov
jmp
or
cli
out
clc
xor
cmp
or
inc
mov
daa
lods
xchg
push
dec
cli
push
cmp
and
test
dec
iret
dec
jno
cli
pop
mov
adc
xorb
pop
jnp
adc
popf
xor
lock
jb
insl
aaa
dec
idivl
xor
mov
cmp
dec
mov
rorb
push
mov
bnd
aam
fs
insb
js
orl
movsl
test
push
shrl
popf
sub
pop
fcomps
mov
mov
inc
pop
push
out
push
nop
adc
jle
mov
jl
in
xor
cmp
mov
adc
sti
mov
mov
dec
mov
pop
jno
mov
or
jp
lock
test
mov
arpl
cmp
dec
cmp
jecxz
dec
popa
sbb
sbb
mov
outsl
cmp
dec
shl
jmp
mov
shrb
into
popl
pop
jp
inc
test
push
xchg
jg
dec
mov
shlb
imul
inc
push
rolb
stos
push
into
and
lret
adc
push
sbb
or
jmp
jae
mov
mov
out
cmp
in
xchg
mov
popf
pop
jmp
and
jnp
movsl
mov
mov
mov
in
mov
or
mov
push
jnp
movsb
loop
orl
xchg
inc
sbb
mov
sbb
jb
mov
dec
mov
insl
add
inc
pop
add
cltd
daa
sub
mov
mov
jns
xchg
and
stos
jg
in
jl
aam
dec
iret
sahf
xor
addr16
iret
inc
leave
sahf
or
pop
xor
jle
mov
jo
xchg
les
out
add
add
xchg
add
xchg
popf
jp
jge
test
and
add
jbe
into
loop
shlb
xchg
out
or
ljmp
lods
xchg
mov
out
inc
enter
pop
mov
adc
lds
mov
pop
out
subb
ljmp
and
clc
pop
mov
ret
and
mov
sbb
insl
cmpb
std
and
dec
das
push
cmp
cmp
in
ret
shlb
push
adc
pop
xchg
movsb
je
mov
pop
shrb
push
add
pop
jmp
es
enter
leave
test
pop
push
mov
pop
jae
lcall
sbb
addb
and
inc
andl
push
repz
cmp
js
pop
lods
mov
mov
mov
mov
pushf
push
push
sti
popa
or
push
sbb
pop
sbb
push
int3
fcmovu
inc
dec
xor
jnp
dec
pop
pop
or
sub
push
js
add
and
shrl
xor
sub
dec
fisttps
popf
jo
fs
outsl
or
fwait
xsave
jecxz
fdivrs
mov
jp
dec
mov
push
scas
iret
xchg
push
sarl
xchg
mov
push
pusha
xchg
imul
pop
xor
je
push
jg
xlat
cli
scas
dec
fidivrs
sbb
pop
lcall
daa
jne
idiv
xor
es
scas
loopne
mov
adc
loop
aas
jge
dec
popa
add
xchg
pop
mov
out
stos
pushf
xchg
dec
aad
xchg
cmc
dec
mov
pop
add
adc
das
jb
pop
sub
xchg
inc
pop
imul
decl
stos
jno
push
icebp
sahf
mulb
jns
jno
outsb
sti
sbb
push
movsb
mov
pop
sub
movsl
bound
aaa
xchg
inc
add
xor
in
dec
sub
pop
jnp
or
addr16
mov
fcompl
cld
jo
add
mov
ficomps
fistpl
lcall
mov
dec
mov
pop
shr
xchg
jp
fcmovnbe
and
enter
or
add
enter
cmp
aad
mov
jb
xor
scas
cmp
mov
iret
aas
in
xor
inc
jle
test
jecxz
dec
push
lods
cmp
outsb
push
mov
mov
out
insb
xchg
and
mov
repz
fwait
iret
ljmp
sarb
adc
push
push
push
pop
fucom
nopl
mov
mov
cmpsb
insb
lods
dec
cld
xchg
inc
rcrb
push
jno
xlat
pop
call
es
enter
jge
addr16
jbe
incl
mov
pop
and
or
mov
cmp
cmp
cltd
adc
sbb
add
mov
js
dec
repnz
fidivrs
dec
pusha
adc
cmp
cmp
mov
inc
mov
cli
cmpsl
mov
adc
mov
push
mov
adc
or
dec
mov
xor
cltd
aad
xor
pop
and
or
arpl
sbb
dec
ljmp
in
gs
or
fldcw
aaa
stc
fwait
dec
pop
jnp
jo
push
mov
dec
outsb
inc
push
or
cltd
cmc
dec
leave
fidivrl
add
mov
adc
mov
pop
adc
mov
push
std
into
ss
out
repz
pop
jle
or
insl
ds
hlt
aam
mov
inc
sub
sbb
xor
call
hlt
gs
sbb
mov
out
ret
divl
mov
sub
cmpsl
stos
popf
xchg
or
ljmp
pop
and
arpl
int3
mov
or
push
and
mov
icebp
in
inc
jl
call
mov
pop
daa
cmp
sub
sarl
andl
sti
je
loope
es
cmp
pushf
xor
aas
sbb
mov
jp
push
mov
iret
jo
inc
jbe
rclb
outsb
xor
cmp
repz
ret
mov
mov
jg
vcvtdq2ps
xchg
and
filds
loope
movsb
xor
f2xm1
sub
mov
jno
test
xlat
retw
ja
add
adc
in
ret
pushf
jno
std
in
dec
push
jle
mov
add
fildll
xlat
dec
xchg
xchg
sbb
inc
push
or
xlat
adc
push
mov
mov
stos
sbb
in
ss
je
out
clc
sub
hlt
aaa
mov
icebp
lods
mov
sar
mov
lock
test
push
inc
sub
jnp
int3
mov
mov
push
ljmp
rol
xlat
dec
and
jp
fcomp
cmp
sub
outsb
aas
lret
xchg
mov
and
sbb
xchg
fldz
outsl
outsb
and
ret
adc
and
adc
negb
sbb
lock
cmp
jns
lods
flds
lret
lods
dec
fcmove
xor
mull
repz
mov
cmpsl
stc
scas
xchg
fdiv
mov
sbb
dec
add
in
shrb
push
cmpsb
sub
dec
mov
push
add
notb
push
or
mov
ret
leave
scas
sub
xor
sti
sti
shlb
sti
andl
dec
std
mov
movsl
dec
fistps
cltd
or
adc
fisttpll
adc
jb
dec
mov
mov
rol
sahf
sbb
xbegin
clc
lahf
imul
mov
inc
inc
lcall
scas
stos
mov
inc
loop
sub
and
xlat
xchg
or
add
dec
mov
lahf
jae
adc
cs
movsl
dec
add
mov
push
inc
cwtl
pushf
das
adc
dec
sub
or
jb
sbb
adc
lods
push
mov
fwait
adc
daa
jo
push
jne
repnz
jns
jp
cli
push
movsl
cmp
dec
fsubrs
iret
enter
xchg
lds
xor
sub
mov
data16
data16
aas
mov
bound
xor
jns
xchg
fdivl
out
pop
pop
mov
stc
out
jnp
xor
rorb
loope
shll
test
sbb
push
fimull
mov
push
jg
push
aam
test
and
loopne
stc
pop
dec
xchg
insb
cmpsb
loopne
and
push
adc
scas
cmp
rolb
test
mov
mov
sub
push
adc
push
aas
and
inc
scas
jne
pop
es
insl
jle
xor
adc
mov
lcall
in
loop
pop
jg
mov
mov
inc
fwait
test
outsb
sbb
imul
lds
cmp
ret
adcl
fdivr
mov
push
fst
cmc
rcll
push
jb
movq
icebp
mov
mov
mov
adc
stos
daa
imulb
xchg
add
pushf
clc
scas
out
mov
repz
shl
fwait
dec
lahf
aaa
icebp
rolb
mov
outsl
js
cmp
mov
add
and
in
push
out
push
mov
sub
lcall
and
xchg
hlt
dec
lea
sbb
imul
jae
inc
adc
sahf
ret
jnp
mov
test
or
ja
cmp
outsb
lock
arpl
ret
sub
in
push
loopne
push
mov
mov
scas
int
ljmp
fcomi
and
xor
push
ljmp
xchg
pop
pop
push
pop
pop
stc
clc
pop
mov
dec
es
lds
cltd
push
cmp
push
iret
repnz
out
mov
mov
repnz
cwtl
div
xor
mov
in
add
jnp
repz
ret
cmp
adc
ljmp
ret
jmp
sbb
cs
mov
mov
stos
stos
mov
aam
jae
pop
movsl
pop
flds
rcl
sbb
imul
mov
xchg
jmp
jno
add
jmp
addr16
out
pop
push
cli
or
sub
dec
sub
ja
pop
or
mov
lds
loope
aas
pop
movsl
aad
mov
pusha
clc
fwait
jmp
mov
mov
shrb
xchg
push
sbb
xchg
shll
mov
fmul
dec
sbb
in
and
movsl
dec
fwait
inc
mov
ja
sub
or
loopne
adc
mov
xchg
gs
cmp
loop
mov
jmp
add
shll
xor
cmp
std
pusha
adc
push
pop
lods
ss
cmp
inc
pop
jl
cmp
das
mov
jp
scas
jle
mov
xor
js
add
jno
call
xchg
sub
int
pop
aad
ja
in
or
push
push
mov
in
repnz
and
bound
xchg
mov
push
shlb
and
sub
pop
mov
outsl
orb
std
push
loope
insb
and
mov
insb
xchg
mov
imul
push
into
mov
stos
sar
mov
xchg
mov
imul
out
js
outsl
xchg
movsb
int3
xchg
and
cmc
add
adc
fiaddl
mov
push
dec
xchg
js
cs
inc
xor
leave
inc
push
outsl
cmp
pop
jno
sarl
aas
mov
shlb
pop
shl
and
inc
cmp
repz
cwtl
mov
hlt
sbb
add
lods
orl
shlb
ljmp
pop
mov
and
jne
inc
cmpsb
inc
sub
mov
fistl
dec
push
dec
pusha
and
dec
int
inc
mov
in
or
xor
repz
std
sarb
mov
fildl
fdivr
xor
nop
add
rcl
js
in
add
movsl
ret
fidivrs
pop
dec
jnp
xchg
int3
xchg
push
mov
xor
inc
popa
out
sbb
cli
in
inc
lds
jae
shr
fwait
out
jae
sub
dec
call
mov
mov
mov
xchg
xchg
into
rcrb
movsl
fbld
and
adc
jno
sbb
dec
pop
jp
dec
or
jne
out
mov
and
xlat
adc
popf
add
add
push
int3
or
mov
jae
sarb
jno
fisubrl
add
dec
jb
dec
ficoml
int
enter
insl
mov
lahf
cmc
std
shrl
cmpsl
fcmove
add
repz
bnd
int3
add
ss
xlat
pop
jae
jbe
or
sbb
loope
cld
pusha
repz
sbb
inc
stos
pop
aaa
ja
mov
cmp
push
and
int
nop
sub
mov
sub
pop
cltd
pop
dec
xor
lcall
inc
xor
outsb
push
or
vpaddw
cmp
pop
test
das
and
or
jae
cmp
mov
inc
cli
pop
das
out
loop
add
adc
mov
inc
lret
jae
inc
or
cwtl
in
lahf
cltd
inc
push
cld
fsubr
popa
cs
nop
sub
hlt
fsts
dec
jmp
adc
sub
push
and
repz
js
or
xorl
pushf
outsb
push
repnz
shll
cld
and
icebp
pop
ljmp
stc
cmp
dec
inc
test
mov
xchg
pop
sub
pop
addr16
test
insl
inc
lds
push
scas
mov
push
jb
cmp
out
ror
fistpll
mov
cmp
inc
or
cmp
mov
mov
or
cld
pop
mov
jb
add
fwait
mov
rclb
notb
jecxz
enter
push
movsb
cmc
add
lods
cwtl
dec
test
popa
addl
lds
aas
inc
mov
xor
leave
jecxz
push
sub
cmc
es
movsl
arpl
adc
ret
ss
jo
je
xchg
jne
dec
pushf
outsb
aaa
sub
clc
std
pop
cmpsb
inc
rep
lahf
bound
xor
jge
mov
xor
inc
mov
stos
inc
gs
sbb
jne
sbb
jl
mov
jo
sbb
mov
in
cs
push
arpl
sub
mov
jne
xchg
test
rclb
cmp
mov
es
popa
jle
jne
and
mov
pop
enter
dec
or
loope
outsb
jno
test
cmp
pop
mov
fwait
mov
out
test
xchg
push
mov
jb
pop
lods
pusha
and
xlat
jmp
in
sbb
scas
xlat
mov
stos
cld
cmpsl
pop
stc
and
loopne
xchg
adc
nop
jg
xlat
inc
sbb
lds
mov
lea
xchg
test
imul
repnz
dec
sub
movsb
cld
and
dec
push
pop
cmp
mov
sub
dec
or
push
sbb
xchg
push
dec
decl
fiaddl
aam
mov
mov
aad
in
cmc
jb
or
or
mov
enter
xor
scas
or
cmp
sub
movsb
or
movsl
sbb
shll
in
sahf
ds
sub
idivb
rolb
push
scas
ret
push
sbb
add
aam
ss
sub
orl
testl
dec
bound
es
mov
dec
cmc
pop
movsb
popf
lahf
dec
xor
mov
std
cmc
enter
mov
stos
cwtl
int3
iret
mov
or
fisttpl
mov
and
imul
mov
sub
jne
mov
cmp
pop
jnp
cltd
mov
adcb
or
sub
in
mov
loope
in
fisubl
xorl
imul
mov
icebp
ret
ss
jg
or
xchg
fs
cmpsb
xlat
sub
arpl
lea
jecxz
nop
sub
xor
jge
mov
mov
jo
mov
jge
inc
mov
pusha
and
jne
dec
pop
test
out
sub
enter
in
clc
addr16
fwait
xor
andb
mov
je
out
adc
sbbb
xchg
out
xchg
jnp
loopne
mov
or
xlat
in
sub
jae
pop
mov
mov
bndstx
dec
push
jp
in
sbb
outsb
out
popa
pushf
clc
int3
push
cmpsl
addr16
idiv
push
or
xchg
mov
pop
xor
mov
xchg
adc
dec
shl
sbb
lret
mov
push
popa
mov
inc
pop
dec
dec
and
mov
mov
mov
inc
insl
outsb
insl
push
cli
lcall
gs
dec
jne
mov
sub
xchg
add
dec
ret
mov
pop
pop
dec
loope
int
mov
iret
inc
pop
shr
push
mov
mov
mov
push
jg
hlt
sbb
add
test
mov
gs
out
sub
repnz
in
sbb
xor
lcall
pop
and
insb
hlt
fs
lock
sbb
rol
jae
inc
mov
xlat
inc
cmpsb
lods
sbb
adc
or
adc
pop
push
and
mov
int
jmp
js
dec
cmp
lcall
lock
outsb
arpl
push
fwait
jb
test
test
push
sarb
sub
mov
stos
leave
mov
ljmp
xchg
orb
int
or
cmp
adc
sar
loop
enter
aam
or
movsl
cli
xchg
xor
es
iret
adc
lcall
push
in
lock
mov
adc
dec
sub
fimuls
enter
push
push
mov
mov
cs
push
push
push
add
inc
pop
jmp
mov
xchg
outsl
shlb
subl
sbb
mov
imul
in
push
jp
and
daa
lret
scas
movsb
fdivl
push
or
mov
out
les
or
pop
sbb
jo
jb
lcall
cld
aas
push
add
and
xchg
push
xchg
xchg
cmp
jg
shl
sahf
mov
cmpsl
add
fmul
jo
xchg
aas
add
inc
fnsaves
cmp
or
outsb
inc
adc
rorl
dec
and
cmpl
inc
aam
xchg
out
inc
add
sub
push
scas
jmp
mov
xor
mov
pop
inc
adc
cmp
stos
std
js
lret
or
add
adc
sbb
cmp
add
and
fmul
movsb
test
mov
sub
add
sbb
stos
cmc
xor
sub
loopne
iret
inc
jb
push
add
mov
sbb
mov
fimuls
pop
outsb
inc
icebp
push
adc
pop
inc
popa
xchg
dec
into
jne
scas
outsl
test
inc
stos
jge
push
call
ficompl
shll
ficoml
loope
cmp
mov
cwtl
repnz
or
aad
mov
cwtl
cmp
imul
or
mov
push
ss
add
stos
add
lods
xor
sbb
clc
cmp
mov
fsubl
adc
out
add
push
sub
xor
mov
mov
aaa
cs
dec
mov
cmp
cld
add
add
sbb
adc
cmp
pusha
or
movsb
enter
movsl
and
inc
xchg
in
sub
cmp
clc
xchg
inc
add
stos
call
jl
jb
adc
adc
rorl
cli
mov
cmpsl
pusha
adc
lret
pop
inc
and
xchg
scas
daa
add
mov
cwtl
orl
cmpsb
sahf
imul
xchg
or
mov
pusha
push
js
in
mov
cmpsl
out
das
aaa
adc
or
movsl
lret
call
jns
sub
add
xorl
push
flds
xchg
cld
or
int
pusha
mov
ret
dec
stos
push
sub
lock
mov
cwtl
int3
jg
and
fmulp
dec
pop
mov
cmc
sub
je
jecxz
sub
shrb
daa
nop
pop
sub
pop
add
clc
add
inc
rep
lods
aaa
hlt
lret
std
jle
push
dec
mov
repnz
pop
push
jecxz
pop
adc
ret
dec
cld
movsb
sub
pop
push
mov
mov
jns
stc
sbb
adc
pop
pop
push
fldcw
inc
shr
inc
pop
les
inc
mov
sub
xor
jb
pop
mov
jg
rcrl
dec
in
test
push
sub
add
stos
mov
insb
mov
push
jl
cmc
stc
pop
mov
pop
mov
pop
push
add
lds
xchg
mov
sub
das
cmp
idivb
fstl
push
jno
stc
into
int3
test
jno
std
pop
out
loop
lret
aaa
or
pop
xchg
hlt
stos
and
sbb
rcl
push
sbb
int
inc
and
int3
test
xor
jae
cltd
jne
dec
mov
xor
jbe
and
push
jne
pop
in
inc
outsb
pop
gs
xchg
mov
pop
and
dec
mov
fs
jno
leave
popa
mov
in
aas
cmp
jae
out
jo
ss
addl
lcall
call
cs
rolb
pop
stos
or
xor
cli
inc
and
pop
aam
cmc
les
adc
sti
inc
mov
stos
outsb
repnz
mov
mov
mov
push
shll
sbb
pop
push
ss
movsb
add
loopne
in
fstpl
sub
testl
mov
aas
dec
inc
mov
jno
hlt
je
call
push
aaa
sbb
or
sub
rclb
add
sti
xchg
loope
mov
jnp
test
dec
push
pop
fcoml
adc
test
fdivrs
or
jg
xor
pop
mov
mov
mov
cs
ret
aam
lock
rcr
add
xor
repz
pop
in
gs
lea
inc
cmp
mov
add
push
inc
outsl
mov
pop
cli
in
sti
dec
push
scas
mov
sub
xchg
pop
fists
ror
fcmovnu
dec
cmc
dec
cwtl
jnp
add
cmp
cs
nop
push
icebp
ds
out
daa
fstpt
int
fldl
mov
setp
filds
jae
lods
pop
lock
notl
enter
lods
xchg
cmp
mov
cwtl
popf
mov
jmp
test
mov
out
adc
cmp
inc
pop
pop
out
dec
test
popf
mov
mov
fnstcw
add
xchg
cmc
or
icebp
sub
out
push
iret
fnstsw
mov
outsb
in
xor
ret
sbb
mov
lea
pop
stos
ds
sub
xor
cmp
daa
scas
subl
xchg
jg
mov
into
out
lods
js
push
movb
inc
sbb
leave
imul
jbe
and
fisubl
daa
push
adc
cmp
leave
inc
mov
xchg
dec
lods
mov
fdivs
push
sarl
mov
pop
cmp
sarl
inc
test
push
mov
mov
jbe
out
or
stos
addr16
out
jns
cmpsb
add
movq
dec
testl
int3
sbb
fcoml
popa
inc
imul
mov
inc
add
hlt
xor
inc
cld
test
icebp
test
repnz
in
push
in
cltd
dec
lret
in
adc
orb
adc
add
add
popf
add
add
add
add
add
add
insl
add
add
add
push
add
add
add
dec
add
add
add
or
add
add
add
add
add
add
mov
add
add
add
push
add
add
add
add
add
add
popl
flds
add
add
test
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jno
add
add
xchg
roll
shrb
cmp
jns
cs
mov
bound
fildll
shlb
and
fwait
pop
sub
and
aad
cmpl
lret
in
lcall
or
jp
xchg
mov
scas
inc
hlt
fstl
enter
jmp
out
lock
sbb
mov
mov
mov
and
inc
lret
fsubrs
dec
jns
addr16
jo
pop
ret
dec
push
lcall
jge
cmp
movsb
pop
push
xorl
sahf
and
jmp
mov
scas
cmp
jne
dec
lods
test
sbb
or
cmp
jo
push
sarl
ror
movsb
mov
or
or
int
cwtl
cmpps
iret
clc
pop
add
insb
xlat
push
mov
lods
pop
xchg
cmp
mov
iret
pop
insb
jge
fprem
jne
sub
stos
shll
xchg
push
mov
js
mov
ds
insb
push
sbb
mov
adc
or
mov
es
xchg
mov
cmp
mov
or
icebp
xchg
call
jae
mov
sub
mov
fwait
lods
sti
movsb
xor
mov
inc
test
mov
or
push
sbb
decb
mov
outsl
cmc
xor
xchg
pop
dec
loopne
pop
aam
sub
mov
into
test
fwait
sbb
pop
ficomps
dec
dec
movsb
inc
popa
icebp
cwtl
adc
mov
popl
rol
or
insb
repz
pop
mov
xor
icebp
sub
data16
push
mov
je
or
and
mov
cmp
push
repz
or
arpl
in
fldt
icebp
into
pop
sbb
dec
inc
or
and
mov
adc
pop
and
inc
rcrb
mov
sub
add
lods
pop
imul
test
in
mov
xor
in
sbb
out
ret
xchg
leave
lahf
aaa
cmp
ret
and
and
xchg
jge
dec
lds
pusha
and
jno
data16
sub
lds
lods
inc
sub
nop
jo
mov
test
add
pop
jo
pop
jbe
pushf
shll
adc
jnp
fnsave
add
cmpsl
ds
gs
repz
nop
test
pushf
push
mov
xchg
jecxz
mov
push
je
sbb
push
jmp
loope
sbb
imul
cwtl
dec
adcb
pop
dec
pushf
push
and
cmpsb
add
loopne
repnz
and
lods
push
leave
push
rcrb
sahf
jmp
xchg
xchg
pop
aad
or
out
fistl
sbb
pop
inc
call
stos
repnz
leave
clc
sub
lret
dec
fwait
into
out
or
leave
sbb
lds
add
mov
outsb
in
call
jbe
xchg
mov
jns
and
ret
test
int
ja
arpl
adc
out
cmp
pop
or
je
jge
enter
add
ret
xchg
je
xchg
es
aam
aaa
inc
jbe
fsub
out
pop
push
out
in
and
jo
loope
cltd
dec
imul
add
shll
xor
dec
scas
loope
fstpt
stos
setne
sbb
sub
lds
jp
mov
inc
cmpb
jb
jnp
cmp
fmull
pop
cwtl
push
xor
in
ss
fdivrp
cmpsb
dec
adc
dec
fstpl
pusha
inc
or
cmpb
arpl
mov
out
dec
push
cltd
mov
ret
add
insl
cli
mov
movsl
or
outsl
mov
cltd
inc
insl
rcll
pushf
loopew
out
int3
mov
push
pop
loop
shl
push
andb
xchg
sbb
sahf
adc
in
pop
in
or
xlat
sbb
jnp
pusha
mov
idivb
cmp
and
ss
iret
xor
inc
lret
pop
enter
es
fcmovnb
dec
sbb
adc
ret
popf
jp
cmp
dec
es
das
les
jp
jae
dec
js
xorb
sarb
or
cmp
and
int
and
adc
loopne
cmp
ficoms
ffree
jno
inc
leave
js
or
add
pop
outsl
pop
xor
out
jnp
pop
jge
pop
imul
loop
mov
popa
sbb
out
xchg
dec
in
popf
jb
sbb
ss
insl
xchg
movsl
pop
sub
xchg
xchg
and
mul
out
rcrb
into
push
push
out
andb
adc
test
sub
sbb
ds
inc
insb
das
ret
in
fistpl
inc
nop
mov
or
pop
loope
or
fnstenv
adc
fcmovbe
jno
xchg
fcoms
outsb
push
mov
adc
ret
mov
adc
push
cs
into
dec
xchg
and
iret
xchg
pop
out
or
add
cltd
pusha
push
adc
pop
lods
sahf
test
mov
mov
jle
scas
vunpckhps
lock
jb
mov
outsb
js
add
sbb
mov
pop
sbb
lcall
inc
addr16
xor
adc
callw
sub
loop
out
popf
cmp
xcrypt-ctr
cmpsl
pop
out
mov
sub
imul
mov
xchg
inc
movsl
jbe
adc
and
or
sbb
fmuls
mov
jae
repnz
cwtl
jecxz
cmp
cmp
repnz
call
aad
jne
mov
push
test
and
mov
aaa
mov
shl
incl
mov
pop
ret
pushf
dec
sub
inc
dec
xor
adc
ja
pop
inc
adc
push
or
bound
push
cmc
int
mov
adc
lcall
test
pop
or
int3
and
stos
movb
repnz
dec
ss
mov
outsb
or
or
insl
jmp
orb
dec
mov
out
sub
dec
std
int
xor
mov
dec
out
orl
sub
xchg
arpl
mov
inc
xor
cwtl
inc
leave
aad
inc
call
sub
and
push
mov
in
fucomi
mov
pop
and
pop
roll
mov
dec
sub
outsb
bound
cltd
and
leave
inc
xchg
movsl
repz
cmpb
iret
or
hlt
out
insl
cmc
adc
lds
adc
repnz
jmp
mov
mov
std
push
mov
jns
adc
flds
xchg
mov
popa
mov
out
bound
push
jb
leave
rcl
pop
push
test
mov
test
sub
fs
data16
imul
mov
mov
mov
and
pop
xchg
cmp
mov
add
dec
les
cmp
mov
mov
int3
or
pop
sbb
aad
test
push
mov
sbb
xor
pop
sbb
hlt
shrl
js
inc
stc
scas
jns
popf
aam
adc
pop
pop
es
sbb
out
add
push
push
xlat
cwtl
adc
cltd
mov
and
js
sahf
push
cltd
pop
or
mov
push
sbb
iret
cld
scas
xor
mov
ljmp
mov
daa
jo
fnstenv
xchg
leave
jge
dec
cmpsb
loope
and
fld
sub
and
pop
in
mov
cmp
push
sbb
jle
fsubs
add
sbb
push
call
cmpsb
sub
and
js
mov
shlb
lea
mov
in
jbe
fcmovnbe
ss
dec
into
pop
out
or
dec
adc
mov
or
leave
push
mov
mov
jno
in
xchg
mov
jmp
ret
cmpsl
add
jge
in
mov
fst
inc
loope
xchg
into
mov
sub
add
ja
jo
dec
adc
jo
aas
pop
hlt
icebp
add
jbe
rcr
sub
mov
pop
bound
js
sub
xchg
sbb
inc
push
adc
das
mov
ret
scas
icebp
pop
and
xchg
mov
mov
xchg
aad
sub
pop
mov
push
ret
dec
pop
rorb
and
aam
cmp
insb
movsl
es
or
test
jno
mov
mov
shld
dec
xor
cs
in
leave
aas
subb
adc
scas
ficomps
dec
cwtl
shrl
push
push
nop
enter
enter
xchg
std
and
mov
ja
xor
and
emms
jg
inc
dec
sub
push
testl
push
mov
mov
in
lods
mov
and
sub
icebp
ds
mov
mov
dec
fucom
rcrb
pop
into
aam
mov
mov
outsl
cmovo
sub
fldl
sti
jb
mov
movsb
imul
sub
inc
int
fldenv
pop
pop
and
and
mov
or
ds
pusha
inc
ret
lea
jbe
shlb
aaa
push
mov
or
int3
shr
or
cmp
inc
mov
xor
gs
sbb
jne
mov
mov
jne
pop
data16
in
add
scas
pusha
inc
ss
inc
jns
xor
adc
insl
lock
ret
cmpsl
mov
flds
pop
arpl
push
xchg
jne
adcb
push
gs
adc
insl
jne
out
stos
dec
jne
fwait
adc
pushl
lock
sub
lods
cli
out
mull
in
xor
jns
sti
dec
insl
xor
dec
pop
scas
out
aaa
gs
sub
rcrl
push
or
inc
mov
ret
pop
cwtl
sub
dec
push
cli
iret
dec
mov
mov
int3
stos
jae
js
out
pushl
jae
xor
adc
icebp
and
mov
jmp
fsubrs
scas
jbe
lret
negl
mov
push
lock
mov
dec
inc
outsl
sub
jge
in
repnz
lds
xor
pop
sub
sub
xor
push
out
xchg
pop
xchg
push
push
sub
push
fiadds
sbb
dec
ret
in
stos
xor
out
sbb
dec
jl
ds
jbe
fstpt
xor
cmp
roll
lods
mov
sahf
jno
dec
push
push
leave
addr16
negl
push
jo
cmp
xadd
push
test
movl
xchg
or
push
fisubrs
movsb
sbb
cwtl
push
repz
push
cmp
in
hlt
jge
jbe
hlt
xchg
xchg
adc
daa
daa
ret
jae
incl
dec
xchg
test
add
xor
mov
cmc
icebp
add
push
adc
pop
leave
scas
fmull
sbb
dec
mov
or
lahf
out
testb
test
push
add
push
loop
out
add
mov
xor
mov
mov
clc
inc
adcl
xchg
xor
push
loop
or
mov
or
mov
cmp
jl
cmp
and
out
testl
pop
inc
xor
dec
jns
rcl
test
jge
fwait
or
fldenv
stos
adc
imul
pop
push
xchg
std
and
xchg
outsl
cmp
cli
add
adc
jne
es
jle
sbb
hlt
cltd
insb
pmulhw
push
mov
push
mov
pop
outsl
xchg
pop
fdivr
lock
cmp
icebp
mov
inc
shll
push
mov
mov
pop
push
xor
xchg
insb
stc
lret
test
int
rcrb
adc
out
adc
call
mov
cmpsl
rcrb
loop
adc
xchg
or
js,pn
aad
push
mov
out
sbb
pop
lods
imul
inc
sub
push
lds
mov
lods
push
daa
xor
jge
bound
fmul
fwait
adc
ljmp
sub
dec
mov
aad
out
in
push
xor
push
enter
iret
push
outsl
xchg
jnp
dec
jle
jecxz
js
push
mov
ja
and
out
inc
ret
jae
loope
cmpsb
mov
lahf
daa
ret
xchg
mov
dec
sti
lret
stos
push
fcmovb
rcrb
add
cmp
ljmp
cltd
and
xchg
sbb
push
rcll
push
adc
dec
dec
push
and
cmpsb
and
pop
cli
div
rcrb
mov
mov
pop
jbe
xlat
and
lahf
fistl
jns
cmp
jnp
jp
push
add
std
aas
dec
repz
pop
paddsw
sbb
nop
mov
loopne
cmp
leave
xor
pusha
xchg
push
imul
in
sbb
pop
mov
sub
inc
adc
push
pop
pop
dec
xchg
sub
mov
in
mov
lods
and
xlat
jle
pop
xor
add
or
ret
rcll
ret
imul
sub
pop
imul
fcmovnbe
mov
fistpll
stos
lcall
mov
sbb
fstl
jno
mov
adc
clc
push
jl
and
inc
shll
mov
mov
test
fiaddl
loopne
lret
mov
popf
lea
addl
fmuls
outsb
out
ja
jmp
aad
cmc
cmpsb
imul
aam
and
add
and
inc
movsl
or
xor
sub
xchg
cmp
adc
pop
jle
ljmp
iret
cli
add
inc
push
pusha
push
fstl
sub
bound
ja
lcall
inc
xorl
rorb
fstps
pop
jae
pop
aad
push
outsb
shlb
jnp
rol
xlat
sbb
adcl
aaa
push
sarb
cmp
push
inc
repz
jge
pop
enter
mov
popa
mov
lret
pop
cld
lds
sub
xchg
lret
mov
sti
push
lea
test
lods
sub
cmp
pop
mov
push
push
pop
pop
cmp
inc
cmp
or
and
push
test
mov
pop
popf
icebp
es
in
lods
enterw
mov
les
mov
xor
cmc
cs
xadd
xchg
pusha
test
inc
test
addr16
jp
loopne
pop
xor
test
jnp
and
imul
dec
mov
xor
pop
sbbl
repz
pop
jmp
test
lock
inc
enter
xor
outsl
ficoml
inc
pop
add
rol
pop
loopne
lods
adc
sti
clc
xor
xor
mov
adc
lret
and
test
lock
jge
mov
mov
inc
fcoms
pop
dec
lcall
xchg
sbb
std
adc
into
inc
test
addr16
xchg
int3
cmp
mov
mov
cmp
mov
cltd
cld
inc
mov
daa
cmpsb
xor
js
jae
imul
fs
add
mov
push
das
in
cmp
mov
ljmp
es
es
lea
dec
jmp
out
hlt
iret
aad
int3
bound
xchg
dec
pop
mov
sbb
movsb
mov
push
pop
jge
pushf
push
mov
mov
inc
mov
xchg
rcll
sarb
adc
cltd
in
out
push
ret
sbb
je
imul
fs
stos
adc
cmp
mov
pop
lret
adc
dec
dec
sub
xchg
movsb
or
xchg
cs
mov
adc
dec
jnp
jne
ljmp
mov
ss
popa
lret
mov
dec
mov
rolb
fisubl
add
mov
mov
mov
mov
dec
sub
jae
gs
rolb
popf
call
push
out
dec
jmp
and
push
outsl
mov
lock
movsl
ja
mov
xor
jb
pop
xchg
fisubs
or
mov
fsubl
mov
push
imul
add
push
pop
ret
and
dec
add
andl
xchg
add
ja
cmp
mov
push
fucom
mov
xchg
loop
push
dec
mov
fistps
nop
inc
cmpsl
out
mov
mov
mov
xor
ret
repz
lcall
scas
faddl
inc
jp
push
std
and
cmpl
test
push
out
mov
movsb
jbe
std
mov
repz
push
cmp
ret
les
dec
cwtl
daa
pop
cli
inc
xor
push
pop
mov
jg
xchg
out
pop
idivb
out
imul
or
pop
test
mov
stos
stos
les
sbb
push
es
enter
daa
stos
sbb
jns
fnop
popa
scas
add
sti
adc
rorl
cmp
sti
rclb
push
into
out
or
insb
outsb
ljmp
ss
outsl
rolb
inc
jne
in
inc
nop
jnp
jo
push
into
scas
lods
push
sbb
sub
andb
out
inc
mov
cld
mov
inc
adc
adc
add
jg
jns
inc
sub
xchg
lea
loopne
dec
pop
xchg
fcomp
push
push
fisttpll
mov
inc
and
or
shr
push
call
and
cmp
cmp
push
mov
int
stc
repnz
rorb
cld
stc
or
mov
out
sbb
pushf
aaa
cmpl
fs
ds
enter
xchg
or
mov
aas
jno
fs
insb
ffree
mov
popa
leave
cmp
stos
fistps
es
mov
insb
pop
into
sbb
sti
xchg
push
mov
movsl
inc
sub
loope
movl
lea
xor
test
scas
or
dec
inc
sub
push
mov
test
enter
sbb
ja
mov
arpl
fs
shl
jae
xor
imul
xor
not
jl
dec
outsb
adc
xchg
cli
xlat
mov
sub
add
xchg
and
dec
cmpsl
jb
xlat
in
divl
popa
das
push
ds
ljmp
inc
mov
sub
nop
in
mov
jne
add
ds
xchg
les
push
add
lea
xor
cmp
xor
aam
pushf
out
and
pop
jecxz
fs
xchg
or
loopne
in
push
fnstsw
stos
push
hlt
lds
test
mov
add
cld
sbb
in
jno
mov
fdivrl
mov
xor
in
sub
mov
inc
jl
scas
mov
cltd
lds
pop
xchg
dec
sahf
xor
lcall
stos
pop
aas
dec
xor
fidivrs
pop
testb
xchg
sahf
call
loop
dec
shr
dec
leave
ss
mov
sbb
pushf
add
ds
das
popl
dec
je
in
or
cli
imul
insl
ss
or
ja
popf
cmp
push
mov
rclb
scas
mov
cmp
fiadds
stos
cli
int
pop
jbe
jb
push
push
int3
fistl
mov
repz
daa
pop
xchg
and
add
and
mov
lock
testl
xor
and
icebp
cmpsb
mov
data16
dec
mov
out
out
xchg
cmp
imul
pop
sub
or
mov
repnz
jl
mov
div
xor
lea
jg
sub
ja
or
jl
xchg
xlat
xchg
loop
cmp
xchg
orb
sub
push
mov
or
mov
and
xchg
idivb
mov
inc
in
and
cmc
xchg
iret
cmp
add
cld
and
ljmp
aam
pop
sbb
push
sbb
inc
rcrl
aaa
shrb
push
ret
dec
mov
add
push
repnz
jne
fdivs
lahf
in
sbb
sbb
sbbb
mov
pushl
mov
repz
jo
orl
dec
lea
pop
dec
out
sub
cmpsb
xchg
mov
stc
inc
and
arpl
mov
inc
push
fdivr
pop
adc
mov
mov
or
mov
dec
addl
fstpt
dec
es
ds
inc
cli
xchg
nop
and
lods
mov
and
xchg
into
aam
data16
xor
or
add
in
in
push
mov
pushl
dec
adcb
jle
jle
jno
gs
cmp
mov
les
xor
sbb
popa
ja
jne
dec
cld
inc
xchg
push
inc
aam
mov
pop
in
lods
mov
imul
mov
push
psrlw
or
cltd
mov
jno
dec
push
cmp
outsl
push
addr16
lcall
push
je
pop
in
jg
cli
sub
aas
cmc
movsb
pop
sbb
jns
or
jo
or
xchg
pop
push
dec
push
push
mov
mov
lds
mov
js
push
push
xor
in
lret
adc
xor
push
pop
sub
jg
test
mov
jb
adcl
in
mov
or
into
mov
add
outsl
dec
jg
and
cs
cwtl
test
pop
repnz
mov
jg
fisttpll
dec
xchg
or
call
inc
ss
cli
call
mov
pop
mov
lds
neg
push
pop
rcrl
sbb
fsubrl
jecxz
sbb
subl
aam
sub
fs
popf
xor
cmp
add
cmp
jecxz
mov
daa
jmp
mov
jae
sbb
dec
outsb
jmp
shl
jnp
add
dec
imul
imul
inc
mov
pop
jnp
and
rorb
dec
cmpsl
lret
out
fcoml
and
scas
popf
xchg
or
stos
les
decl
ss
movsb
inc
sbb
xchg
xlat
inc
stos
mov
push
mov
inc
xchg
mov
hlt
dec
cmp
inc
ret
mov
add
push
shrl
dec
dec
cwtl
repnz
push
popa
cmpsb
add
leave
inc
cs
popa
in
pushf
in
mov
or
mul
add
cmpsb
pusha
pop
fisubrs
mov
xor
pop
mov
test
adc
loop
jns
push
inc
mov
test
pushf
stc
cmc
mov
mov
sub
loopne
add
enter
pop
clc
jno
mov
mov
dec
mov
les
or
xor
mov
push
cwtl
daa
fistpll
jb
aaa
push
mov
scas
dec
dec
pop
cmpsb
add
inc
andl
xchg
pop
dec
mov
mov
pop
mov
insl
sbb
xor
cld
adc
fcmovnbe
lcall
in
shll
xor
dec
test
pop
mov
mov
jp
mov
sbb
and
xor
dec
push
andb
mov
cmp
mov
pop
daa
push
std
mov
jns
sahf
add
mov
dec
dec
out
sahf
ds
scas
mov
shlb
inc
rcr
outsb
pop
test
fwait
push
add
ss
sbb
out
test
adc
std
ret
inc
dec
inc
repz
jge
notl
insl
out
outsb
sbb
jne
rcll
mov
and
pop
cmp
scas
sar
lcall
dec
subb
and
sbb
xchg
adc
dec
es
ret
mov
xchg
iret
adc
mov
sub
aas
mov
iret
addr16
push
pusha
adc
cmpsl
je
ja
xor
lds
add
std
sbb
pop
or
sbb
movsl
push
xor
clc
or
and
sub
shl
das
pop
gs
inc
imul
push
jg
test
mov
cli
jmp
push
arpl
cltd
imul
xor
adc
jo
addl
mov
jae
mov
icebp
or
cmpsb
stos
scas
pop
pop
pop
movsb
inc
mov
ret
and
mov
dec
jecxz
fcomp
mov
jp
dec
and
jae
das
rol
push
iret
adc
setg
cmp
or
add
aam
test
push
pop
ficomps
xor
mov
xchg
out
hlt
adcb
loop
ficoml
scas
mov
xor
mov
leave
and
mov
popf
mov
and
test
ficompl
rep
mov
lds
push
cmp
fldt
ret
popa
pop
dec
addr16
push
scas
and
pop
fadds
sbbb
sbb
mov
movups
or
sub
imul
add
das
fs
clc
xchg
gs
add
cwtl
pop
mov
shl
cli
out
test
pop
cmpsb
imul
pop
pop
cmc
test
and
and
dec
mov
das
jl
or
ret
push
cmp
repnz
add
xchg
mov
lock
in
xchg
ret
push
inc
sbb
hlt
lock
int
inc
adc
pop
mov
sbb
sbbl
mov
dec
xchg
mov
stos
push
lea
or
jo
cmc
mov
xlat
loop
push
pop
notl
push
or
pop
xor
mov
inc
mov
push
mov
or
or
mov
out
stc
clc
xchg
jge
jmp
test
pop
xor
rcrl
add
cltd
lea
aaa
jno
rclb
cmp
test
cmc
jg
jl
call
or
es
xor
pop
push
xor
lahf
push
nop
cmp
aas
dec
in
jg
lret
pop
rclb
inc
out
add
mov
js
js
add
inc
pusha
filds
dec
aaa
jno
rclb
cmp
hlt
lret
push
mov
push
xchg
clc
ja
ret
cmpsl
arpl
dec
and
ds
mov
iret
inc
fnstcw
add
cmp
jae
dec
jo
push
decb
cmp
push
pop
cld
jns
add
jg
decb
pop
xchg
mov
mov
jbe
hlt
pusha
addb
pop
pop
insl
xor
push
lret
jp
mov
push
jp
stos
sbb
stc
out
js
enter
jg
sub
adc
dec
ss
and
push
lock
and
dec
mov
fs
cmp
xchg
mov
fldenv
mov
sub
add
test
pop
adcb
mov
in
or
xchg
and
in
mov
mov
inc
jge
or
test
imul
inc
and
jb
jb
sbb
sbbl
and
out
mov
sub
xorl
add
popw
sub
pop
or
pop
outsb
mov
stc
mov
mov
sti
rolb
push
pop
daa
fwait
inc
lods
add
dec
mov
push
xor
add
loope
fisttps
ds
xchg
dec
jbe
jae
mov
add
fwait
adc
add
inc
aad
and
jae
push
adc
sarl
dec
jmp
mov
or
or
xchg
scas
add
adc
imul
push
sahf
sub
lds
icebp
je
and
sbb
adc
daa
xlat
mov
mov
mov
inc
ret
rol
inc
jecxz
jae
sbb
xor
test
sub
sub
and
push
add
popf
das
insl
mov
mov
or
fwait
std
fcomi
test
pusha
mov
insb
mov
cmc
pop
lock
inc
mov
xor
stos
sbb
and
fnsave
mov
mov
xor
adc
xchg
addr16
xor
pop
cmp
push
scas
ret
fs
out
or
inc
mov
ljmp
mov
add
jg
loope
iret
jne
push
mov
jl
mov
inc
push
xchg
loope
scas
or
jno
jo
jl
clc
int3
dec
dec
dec
movsl
fisubs
jmp
and
pop
xchg
adc
mov
out
fsts
and
push
inc
push
test
cwtl
iret
mov
mov
rclb
jmp
lret
pop
pop
pop
cmc
sub
sahf
or
into
sar
outsl
inc
push
and
mov
mov
out
or
xchg
inc
cpuid
mov
push
push
outsl
mov
adc
cmc
xor
loop
jae
decl
or
scas
out
inc
or
aad
mov
jb
aaa
mov
and
stc
scas
ja
gs
sbb
adc
push
aas
xor
adc
sbb
lahf
pusha
xchg
mov
lods
and
jo
mov
push
nop
adc
xchg
daa
xchg
cwtl
pop
and
test
xchg
outsl
push
pop
divl
jae
xor
dec
rclb
push
xchg
shlb
leave
xor
jge
pop
and
addr16
ret
pop
pop
dec
daa
divl
and
and
xlat
jb
imul
xchg
addl
adc
cmc
pop
lods
int3
jle
adc
push
arpl
mov
pop
std
xor
adc
lds
jg
dec
push
call
xchg
cmp
out
daa
addr16
add
xchg
outsl
mov
inc
mov
iret
adc
cmp
int
icebp
outsl
ljmp
movsb
adc
xchg
mov
dec
int3
data16
push
dec
repz
pusha
inc
and
add
push
inc
cwtl
ja
pop
and
sbb
int
mov
push
push
repz
sbb
lds
adc
sbb
orb
mov
bound
inc
mov
inc
jb
and
repz
aam
std
xor
movsb
dec
cmp
xor
jp
dec
scas
insl
jmp
pop
dec
add
cmp
icebp
inc
shl
xor
out
sub
orl
scas
inc
dec
insb
dec
xchg
outsb
adc
xchg
push
lea
add
dec
fldenv
push
ror
fs
fmulp
and
pop
jbe
out
in
pop
adcl
out
jae
fisubrl
fcomps
iret
incb
cmp
ret
sub
push
in
mov
ljmp
xchg
mov
xchg
addr16
mov
fsubrs
push
fcmove
xorb
aas
icebp
stc
jae
mov
adcl
jmp
xlat
xchg
roll
out
mov
mov
mov
fisubrs
push
cmovnp
push
mov
outsl
push
cmpsl
leave
sbb
int3
test
xchg
fidivrs
xchg
scas
stos
sub
aad
lods
cli
push
inc
or
mov
xchg
adc
dec
arpl
cmp
loop
push
jns
icebp
in
jae
cld
mov
cli
cmp
movsb
pop
dec
imull
and
call
add
pop
clc
imul
mov
xchg
aam
int3
dec
ret
mov
pop
sub
xchg
xchg
mull
mov
and
cli
inc
stos
jb
mov
add
mov
jg
sbb
add
lods
lock
lret
stc
sub
or
fwait
lods
cmp
imul
push
movups
ret
fldenv
and
dec
sarl
mov
sub
add
pusha
out
loope
ljmp
mov
jno
cmp
sub
pop
mov
sbb
inc
cmovae
xchg
pop
inc
frstor
xchg
dec
sub
inc
test
fiaddl
add
add
mov
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
stos
mov
add
int3
add
add
xor
add
add
add
sbb
js
add
pusha
popa
add
add
add
xchg
pusha
add
lods
popa
add
sbb
add
movsb
pusha
add
les
add
add
lods
pusha
add
pop
bound
add
add
shlb
add
add
pop
adc
add
add
sbb
add
add
xor
add
add
push
popa
add
add
add
push
add
andb
lcall
add
add
add
popa
add
fisubs
add
popa
add
popa
add
adc
add
sub
add
bound
add
add
add
add
push
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
arpl
add
arpl
add
arpl
add
add
add
add
gs
dec
inc
imul
gs
je
push
outsb
add
je
outsl
arpl
pop
push
push
gs
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
push
outsl
insb
jns
outsl
outsb
add
push
inc
gs
gs
inc
popa
arpl
add
inc
inc
dec
xor
cs
insb
add
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
insb
popa
arpl
arpl
add
push
jb
jo
jb
jns
push
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
insb
add
outsb
add
outsb
je
insb
insb
cs
insb
add
fs
imul
add
arpl
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
jb
push
push
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
popa
je
inc
imul
outsb
addr16
add
mov
je
push
add
add
inc
gs
outsl
arpl
push
imul
inc
jne
insb
imul
outsb
fs
add
push
dec
inc
dec
xor
cs
insb
add
lret
pop
dec
outsl
popa
fs
imul
pop
inc
gs
gs
popa
addr16
outsl
jae
mov
dec
jae
imul
jae
popa
addr16
add
sbb
jb
outsl
dec
gs
push
add
jae
push
gs
jne
jae
jb
outsl
jae
add
inc
gs
imul
outsb
addr16
add
loopne
dec
outsl
popa
fs
outsb
jne
add
push
imul
js
inc
add
clc
pop
dec
gs
popa
addr16
outsl
js
js
add
gs
arpl
insb
insb
push
popa
outsb
add
aam
inc
outsb
jne
push
push
push
imul
mov
dec
outsl
popa
fs
arpl
insb
gs
je
jb
inc
add
push
imul
outsl
arpl
add
dec
outsb
jne
je
imul
push
inc
push
xor
cs
insb
add
push
dec
push
insl
jbe
imul
inc
add
and
ja
insb
push
jno
add
add
jl
dec
add
add
lods
arpl
add
add
add
add
add
add
add
arpl
add
bound
add
add
inc
ja
bound
cs
add
jns
addr16
fs
push
popa
data16
push
pop
inc
pop
push
inc
inc
inc
inc
pop
add
jp
dec
inc
inc
popa
dec
push
dec
push
add
jns
outsb
ja
and
bound
jae
and
fs
push
dec
dec
push
push
jae
popaw
outsl
inc
insb
inc
bound
push
data16
imul
insb
push
push
imul
add
inc
add
jo
add
inc
add
jo
add
add
adc
sbb
add
add
cmp
add
add
inc
add
and
cld
dec
inc
add
inc
add
add
ljmp
add
or
cld
fdivrp
push
push
push
push
push
push
push
push
dec
jl
inc
add
jo
add
jo
add
inc
add
inc
add
add
jo
add
jge
add
shlb
add
add
inc
add
add
jo
add
jo
add
jo
add
jo
add
jo
add
add
add
add
add
add
add
std
std
decb
std
repnz
pusha
std
idiv
xor
std
leave
cmp
into
std
dec
rcll
rclb
idiv
ss
std
decb
std
repnz
pusha
std
idiv
xor
std
leave
incb
std
into
std
dec
shll
shlb
idiv
ss
std
decb
std
idiv
arpl
lret
std
dec
shll
shlb
and
inc
aaa
push
ss
lock
std
std
decb
std
icebp
arpl
idiv
cmp
lret
dec
roll
inc
and
push
aaa
pusha
lock
std
std
decb
std
icebp
arpl
idiv
push
std
lret
dec
rcll
push
and
pusha
aaa
jo
ja
incb
std
std
popa
std
repnz
cmp
idiv
outsb
std
lret
std
dec
shll
bound
jno
jo
xorb
lock
std
std
popa
std
repnz
aaa
std
idiv
adc
hlt
std
dec
shll
jb
andl
xchg
lock
std
std
popa
std
repnz
std
lret
std
dec
roll
daa
nop
aaa
mov
pop
std
std
popa
std
repnz
lret
std
dec
rcll
daa
mov
lock
std
std
adc
repnz
insl
std
icebp
std
lock
shll
daa
mov
shlb
aaa
shlb
xlat
icebp
xor
std
adc
repz
std
hlt
std
dec
rol
rol
and
daa
shlb
loopne
out
incb
add
jo
add
jo
add
jo
add
fs
add
pop
fs
push
sub
inc
add
jne
add
fs
push
add
add
ja
add
pop
jne
adc
push
add
gs
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
adc
jbe
test
test
mov
mov
mov
mov
adc
adc
adc
jno
inc
xchg
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
imul
sbb
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
adc
jbe
test
test
mov
mov
mov
mov
adc
adc
adc
jno
inc
xchg
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
imul
sbb
adc
adc
inc
adc
adc
add
add
dec
add
add
dec
add
add
dec
add
add
add
imul
add
add
inc
add
dec
add
push
add
add
add
add
inc
add
add
add
add
inc
add
out
lcall
je
add
out
ljmp
inc
add
out
incl
inc
add
out
incl
and
std
std
incb
add
add
xchg
add
pop
add
pop
add
or
and
add
sbb
push
sbb
insb
insb
push
arpl
add
add
std
arpl
repnz
adc
icebp
popa
std
idiv
pop
std
idiv
push
std
cmc
std
hlt
rcll
rclb
idiv
add
jne
gs
xor
add
add
add
jb
outsb
push
add
add
push
jbe
add
adc
xchg
or
add
jbe
add
add
add
add
add
outsb
add
add
add
data16
add
add
add
imul
outsl
addr16
add
jle
incb
pop
idiv
pop
leave
pop
adc
pop
mov
pop
sub
add
inc
add
gs
add
adc
arpl
outsl
std
adc
imul
std
incb
add
std
adc
adc
and
and
std
std
adc
std
sbb
insl
std
adc
std
incb
add
add
xor
inc
add
arpl
jae
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
jno
pop
xchg
xor
add
xor
inc
xchg
out
shlb
push
jbe
gs
gs
aaa
pop
ja
sbb
jmp
mov
push
xlat
out
xor
mov
jg
data16
repnz
int
mov
xchg
enter
jp
dec
dec
insl
jbe
arpl
jo
outsb
push
jne
jb
inc
inc
add
push
insb
jns
push
jae
imul
jb
popa
inc
inc
push
dec
outsb
gs
jb
arpl
pop
jbe
and
push
dec
imul
push
jae
pushw
jbe
dec
inc
add
add
add
dec
dec
outsl
inc
outsb
inc
add
add
bound
add
add
dec
add
jo
add
and
add
je
je
jo
inc
push
add
fs
imul
push
add
jno
fs
and
dec
push
push
jne
je
and
dec
popaw
push
add
add
push
add
dec
add
imul
jns
insb
inc
dec
imul
jns
arpl
pop
data16
add
add
pop
push
add
inc
jns
outsb
pop
jne
arpl
imul
push
dec
dec
add
js
js
insl
and
pop
outsb
pop
push
push
dec
dec
dec
push
add
je
imul
push
insl
jns
and
add
insl
jbe
imul
add
add
add
aas
add
add
add
add
test
adc
add
ljmp
cmpsl
aas
add
and
daa
mov
mov
add
add
add
sahf
add
add
cs
add
out
add
add
jp
add
nop
loope
add
add
verw
dec
mov
das
xchg
sub
fisubl
mov
mov
leave
xor
fsubrs
add
inc
in
not
mov
sbb
cmpsl
sub
xchg
dec
pop
call
cmp
mov
add
in
jbe
mov
cmp
outsl
mov
sub
mov
cmc
testb
mov
mov
sub
push
mov
adc
mov
ret
imul
push
and
insl
test
outsl
pop
scas
inc
push
mov
cmp
adc
add
inc
lret
pop
aad
cmp
int
fsubs
bswap
sbb
cmc
and
sbb
ret
cltd
fistl
jmp
inc
pop
fidivrs
pushf
and
xor
mov
sub
movsl
push
add
cli
mulb
pop
xchg
fbstp
mov
sarb
movsw
loopne
std
mov
jecxz
push
js
ljmp
lahf
mov
pop
xor
mov
sbb
cmpsl
xchg
and
lock
call
popf
inc
stos
cld
hlt
mov
dec
xor
dec
mov
jge
sbb
sub
add
divb
dec
dec
mov
and
push
cmp
fisttpl
iret
in
rorl
fucomip
int3
inc
ljmp
das
sub
sub
mov
xor
adc
inc
fcoml
enter
mov
cltd
pusha
cwtl
push
test
push
mov
mov
jae
enter
xchg
push
mov
mov
sbb
adc
sbb
adc
mov
mov
inc
iret
js
rolb
orl
mov
imul
outsb
pop
adc
aaa
mov
mov
xchg
test
pop
in
pusha
pop
test
push
cli
adc
rcl
arpl
ret
aad
in
subl
movsl
icebp
insl
mov
xchg
jae
mov
cld
cli
insb
cmp
dec
int3
cmpb
cmp
les
pop
scas
cmp
int
adc
loopne
jne
cli
xor
jns
add
and
jg
and
arpl
pop
mov
pop
call
rorb
xor
mov
shl
cmpsl
jmp
mov
fs
jae
cmp
inc
pop
movsl
insl
loope
xlat
mov
jl
inc
test
cmp
inc
int3
jbe
and
jnp
movsb
pop
fcoml
dec
inc
shlb
lcall
sub
js
mov
jl
pusha
mov
outsb
jl
xor
fimuls
mov
mov
mov
push
mov
das
dec
mov
lcall
xchg
adc
pushf
loope
lcall
dec
popa
xor
subb
fisubrs
dec
inc
fcoms
mov
in
xor
repnz
lahf
mov
cld
xor
lods
mov
xlat
fiaddl
inc
sahf
in
jp
in
mov
inc
movsl
pop
test
mov
stos
ret
mov
sub
repnz
jg
sub
jmp
std
cmp
mov
adc
incb
lret
adc
or
xor
or
push
aaa
inc
cwtl
push
lcall
fbstp
aaa
out
stc
push
rcrl
fistps
mov
fucomip
out
add
ret
pop
ljmp
mov
or
sbb
fdivl
gs
mov
inc
leave
std
cmp
xor
inc
xchg
sbb
testl
mov
add
lahf
jb
add
jns
jae
mov
aam
aas
pushl
les
enter
aas
int3
xor
in
xchg
outsb
cltd
rorl
faddl
bound
and
cmp
popf
xchg
cmp
jno
ja
cld
lahf
cmp
bound
repz
cwtl
shrl
pop
jno
jns
fcmovu
shrb
xchg
adc
dec
mov
pop
stos
push
repnz
adc
ljmp
jge
xor
dec
mov
mov
movsl
mov
dec
or
pop
aaa
jne
xor
sub
ja
std
adc
aas
jle
inc
aas
mov
sbb
stos
std
ficoms
fildll
subl
push
repnz
sbb
je
push
and
testb
push
jae
filds
stos
clc
adc
add
pop
dec
stos
cmpsl
mov
add
in
and
fcoml
pop
and
mov
in
call
pop
xor
add
pop
ret
xor
cmp
jmp
popa
repnz
fwait
fs
stc
mov
je
lret
outsl
sbb
push
test
adc
xchg
es
xchg
arpl
sbb
xor
push
inc
and
inc
aad
fdivl
mov
xchg
in
pop
imul
jle
mov
adc
mov
push
jb
loope
mov
rcrb
pop
dec
inc
orw
dec
mov
pop
aaa
rcrl
adc
dec
mov
mov
xor
fidivl
pop
lea
call
inc
mov
ret
inc
in
aaa
fsubl
sbb
andl
or
xchg
stc
sbb
xor
lods
xor
mov
fwait
cmpb
fistpll
xchg
xchg
cmp
pop
pop
jns
icebp
imul
pop
scas
mov
testb
repnz
sub
pop
in
scas
fdivs
jbe
pop
xchg
jmp
aad
pop
inc
aad
andl
cmp
cmp
sub
push
rorb
xchg
jle
lcall
push
adc
call
stos
sub
cld
mov
jg
or
xchg
push
xchg
arpl
lahf
pop
dec
imul
pop
and
sti
adc
inc
lods
stc
idiv
xchg
pop
adc
dec
dec
sbb
push
dec
stc
push
adc
cmpsb
add
push
mov
cwtl
fdivrl
js
das
jb
imul
pop
aas
dec
mov
test
fists
sbb
or
mov
je
rorl
mov
jnp
cmp
xchg
sub
sahf
inc
out
xchg
test
mov
cmpsl
fistpl
fnstsw
jp
or
mov
mov
mov
lcall
mov
xchg
sbb
pop
clc
and
adc
ja
in
loopne
pushf
pop
mov
cltd
pop
shlb
mov
cld
dec
add
and
movsb
push
cld
fdivs
sarl
inc
cmc
pop
mov
les
and
mov
orl
push
add
loopne
fdivs
jecxz
shll
dec
xor
fs
jmp
addl
inc
lds
add
sbb
out
mov
pop
shl
lcall
repnz
andl
js
jmp
mov
push
imul
insl
push
cmp
xchg
ss
sbb
ds
lahf
and
adc
divb
loope
into
lret
xchg
push
pushf
dec
cmp
adc
lock
jl
ja
adc
fisttpl
fwait
sub
js
jae
push
sub
push
mov
jle
scas
push
xor
idiv
jmp
inc
cmp
sub
cltd
or
lock
sbb
inc
xor
push
ljmp
scas
outsl
lahf
ds
inc
shlb
mov
rcr
xchg
stos
xchg
fsubrl
mov
add
ss
adc
adc
xchg
jnp
mov
xchg
out
cmc
stos
lahf
hlt
xchg
icebp
ds
stos
shll
notl
dec
pop
aad
cmpsl
rorl
aaa
push
in
push
or
int
dec
fistpll
imul
cltd
inc
idiv
cmp
pop
mov
daa
xchg
dec
in
sti
mov
fistl
fistpll
mov
push
aaa
and
mov
lcall
xchg
cmc
andl
mov
dec
cltd
push
push
push
mov
rolb
es
dec
clc
dec
mov
ds
jnp
sub
add
mov
mov
dec
sub
xor
xchg
pop
add
test
sti
jmp
sbbl
sub
jmp
cs
aaa
mov
cwtl
dec
lds
mov
in
mov
xor
jmp
and
jne
sti
nop
std
add
imull
call
mov
mov
aaa
push
inc
sbb
imul
jl
lods
incl
xor
lods
popf
mov
cmp
xor
ljmp
xlat
xor
sbb
xchg
outsb
pop
and
dec
sub
cmpsl
add
and
xlat
ret
sub
fisubs
cld
dec
incl
mov
xor
jp
imul
mov
sti
inc
lcall
dec
mov
inc
stos
mov
jnp
aaa
mov
dec
insb
loopne
pop
mov
sub
pop
xchg
mov
xor
mov
pop
fcmove
mov
pushf
and
aas
xlat
out
dec
mov
int3
or
sbb
xchg
cmp
lds
gs
in
jne
xchg
push
or
aas
cmp
out
lahf
push
mov
mov
push
cmc
cltd
dec
mov
stos
or
pop
or
aam
loop
sub
cltd
inc
stc
jae
mov
shrl
push
sub
arpl
mov
pop
jns
or
popa
cmc
jge
sub
addl
aas
shl
cmp
push
lcall
sbb
in
adc
push
arpl
in
mov
dec
adc
hlt
mov
adc
sub
mov
fiaddl
push
cmc
sbb
inc
push
adc
decb
sub
lret
jg
mov
cmp
push
inc
mov
loop
out
outsb
outsl
mov
or
shrl
movb
sbb
xchg
add
pop
mov
leave
sti
and
add
cld
out
jnp
adc
inc
sub
es
push
dec
pushf
insl
cmp
ljmp
mov
mov
test
xor
out
push
js
bound
mov
push
ret
push
mov
in
push
bound
pop
repz
mov
arpl
xchg
aad
dec
hlt
cld
lock
loop
je
mov
test
fistps
sub
test
jg
popf
out
add
les
aam
pop
fwait
imul
push
negb
jb
sbb
into
mov
mov
add
push
daa
sub
test
push
sbb
or
xchg
cmc
pop
lret
push
add
push
movsb
mov
cmpsl
in
icebp
cld
fists
outsb
add
jmp
lcall
in
jmp
mul
jecxz
lods
test
stos
mov
push
inc
lcall
cmpsb
aaa
movsl
lea
dec
mov
xor
jno
lock
add
lcall
jns
ss
mov
mov
daa
int3
inc
and
mov
jae
push
xchg
inc
test
fsts
cwtl
mull
cwtl
out
or
test
imul
pop
xor
mov
push
xchg
xchg
addr16
mov
repz
mov
shll
pushf
push
lock
mov
and
shlb
jp
sahf
fsin
cmp
sub
mov
scas
insb
out
jle
jno
fucomip
and
adc
dec
mov
test
xchg
cmp
mov
xor
jp
out
add
xlat
std
scas
sahf
jnp
int3
jge
jno
pop
and
add
hlt
jno
stc
push
mov
add
mov
lods
je
aam
gs
scas
xchg
mov
xor
cmc
ffreep
push
mov
jl
pop
subb
or
mov
test
push
xchg
imul
stos
add
rclb
mov
fildll
call
jle
js
xor
jp
clc
push
arpl
inc
cmp
lcall
imul
push
or
xor
inc
inc
pop
or
in
insb
pop
mov
sbb
aaa
popa
cmp
roll
aas
dec
js
and
js
sarl
lret
aaa
aam
mul
pop
push
std
and
jl
jnp
mov
sarb
xlat
divl
pop
mov
cmovno
sarl
in
adc
and
xchg
or
cmp
fisubrs
fbld
adc
ret
hlt
push
mov
inc
in
push
cs
cmp
adc
jae
lock
jg
stc
mov
xor
add
cmp
int
mov
sub
cmpsb
fs
dec
int3
sbb
xor
mov
wbinvd
pop
fcomps
mov
mov
pop
pop
mov
in
loop
mov
xchg
or
jns
dec
inc
aaa
sbb
xor
sbb
and
imul
mov
lcall
into
push
mov
hlt
xchg
insl
rorb
cmpsb
loopne
or
pusha
das
mov
popf
test
shlb
rolb
add
lret
and
mov
in
movsb
dec
add
push
frstor
adc
cmpsl
outsl
sub
inc
sbb
inc
out
and
call
bound
push
cmp
inc
imulb
in
mov
stc
inc
loop
js
xlat
sbb
test
xor
es
mov
lock
dec
in
mov
xchg
cwtl
mov
cwtl
adc
cli
cmpsl
fcoms
push
jns
bound
lea
and
shlb
addl
adc
mov
pop
or
jnp
and
sub
adc
sbb
es
sbb
mov
adc
aam
mov
xchg
nop
sub
mov
mov
fbld
mov
mov
sub
mov
test
mov
mov
test
call
adc
pop
sbb
pop
push
xor
mov
add
xor
cwtl
iret
std
adc
mov
in
sub
stos
outsb
dec
push
fcmovbe
cs
mov
subl
repnz
outsl
stc
cmp
or
inc
sub
dec
movsb
jno
imull
insl
jp
lcall
inc
adc
cmp
adc
sub
ret
jmp
popf
push
adc
mov
stos
mov
inc
and
adc
in
push
mov
insl
mov
pop
ret
sub
push
lahf
sub
ljmp
test
nop
loop
subb
pushf
push
movsb
or
or
lret
mov
idivl
pop
mov
subl
negl
jmp
jb
adc
xorl
js
mov
lea
in
lods
fsts
hlt
and
and
xchg
sbb
cmc
xchg
incb
mov
and
leave
adc
in
dec
push
mov
mov
and
xor
sbb
sarb
sbb
jmp
dec
jno
addb
or
jb
inc
sbb
xchg
push
xor
mov
not
dec
cmp
mov
push
cld
cmpsb
and
cltd
lahf
out
jecxz
fcoml
add
in
push
in
shll
inc
cmpsb
in
pop
inc
call
cmpsb
pop
or
int
cmp
loope
stos
sbb
jne
insl
fdiv
push
sbb
push
jns
lods
jle
jbe
lods
jbe
mov
sub
jb
sbb
dec
pop
mov
mov
dec
gs
jl
push
jmp
mov
fidivrs
lret
mov
shll
pop
scas
clc
test
pop
pop
xchg
out
xor
and
push
aam
inc
push
sbb
je
or
std
dec
jmp
inc
in
add
insb
mov
mov
imul
mov
pop
sub
mov
shll
xor
jmp
pop
js
push
add
xchg
and
insb
cmp
inc
loope
insl
das
dec
cmp
les
outsl
xor
dec
and
xor
adc
outsl
scas
pop
movsb
bound
out
cltd
frstor
push
xor
cld
es
mov
xchg
mov
enter
cmp
jmp
pushf
pop
xor
sub
jmp
mov
xor
push
lret
divb
and
das
push
out
sub
mov
mov
test
enter
pop
rorb
cmp
dec
mov
inc
mov
divl
lea
sbb
cwtl
imul
pop
sahf
test
jl
aam
push
pop
outsl
out
dec
mov
sbb
jbe
fcmovnu
mov
stc
data16
mov
sahf
push
push
mov
adc
cwtl
adcb
fildll
sbb
xor
adc
jecxz
cmpl
sbb
shll
int3
shll
pop
shlb
or
dec
dec
inc
leave
or
hlt
scas
add
aad
stc
or
mov
clc
inc
fwait
mov
and
dec
jp
imul
aas
sbb
ror
adc
dec
jb
push
fstpt
add
cmp
cld
and
loop
mov
je
gs
mov
adc
rcrl
in
clc
jae
cmpb
xchg
sbb
push
imul
fcoms
inc
frstor
jo
or
out
orb
jne
adc
mull
test
out
cmpsl
rorb
in
imul
mov
lret
push
jb
lea
lret
cmp
lock
filds
cmp
repz
insl
stc
xor
dec
adc
cmp
cmpsl
shr
fsub
add
xchg
imul
sub
subb
mov
scas
out
adc
pop
into
mov
shrb
mov
clc
mov
test
or
in
xchg
xor
cmpsl
aad
mov
xchg
rcll
cwtl
das
lods
aaa
enter
lods
inc
mov
mov
sar
or
xor
clc
imul
cmc
les
sbb
mov
mul
pusha
xchg
inc
sub
dec
jbe
jmp
push
add
pop
xorb
cmp
aad
mov
imul
into
test
cmpb
loopne
lret
mov
xchg
addr16
xor
sbb
dec
inc
push
push
repz
mov
loope
loop
sbb
push
gs
xor
mov
popl
mov
pop
int
sarb
and
cmp
jb
es
jnp
inc
mov
in
mov
outsb
inc
lcall
lods
mov
and
lret
scas
pop
pusha
and
inc
aaa
subb
lods
xor
rclb
or
je
push
mov
jg
sub
pop
sbb
bound
mov
jecxz
sub
cli
aad
push
add
mov
ja
xchg
sub
fs
pushw
cmp
pop
and
inc
inc
pop
push
mov
add
lods
gs
sub
sbb
inc
stos
outsb
sub
pusha
movsb
pop
dec
xchg
nop
sti
orb
fistpll
mov
jge
cmp
in
adc
xchg
divb
rorl
jns
cld
pushf
pop
mov
stc
movsl
cs
mov
lods
xchg
ss
lret
pop
imul
and
idivl
mov
arpl
adc
jp
sbb
or
stos
int3
fs
jmp
cmc
pop
into
ljmp
ret
imul
adc
pop
bound
xchg
outsl
roll
cltd
cmp
cwtl
fcoms
out
mov
and
data16
cmpb
das
and
cmp
push
into
aad
popa
pop
loope
nop
sarb
mov
scas
imul
inc
sbb
mov
aad
jl
add
push
add
in
jle
scas
mov
sbb
xlat
sub
push
fistpll
bound
cmp
pushf
ret
and
iret
adc
xor
lods
jle
mov
insb
fxch
dec
inc
mov
mov
loope
xchg
add
add
mov
push
push
xor
jl
in
jg
outsl
sti
call
or
cmp
mov
add
sahf
push
cmpsb
or
popf
jge
sub
lods
outsl
mov
pop
inc
arpl
jge
jecxz
cld
mov
pop
and
or
push
bound
loop
jbe
jns
and
insl
sub
pop
insb
shrb
or
scas
in
inc
xchg
and
mov
outsb
mov
pop
mov
adc
pop
add
xor
adc
cmpsl
mov
dec
arpl
dec
dec
xor
mov
push
out
mov
fwait
insl
test
dec
push
ljmp
aas
shll
ja
cltd
jnp
scas
loopne
jb
cwtl
leave
movsb
jl
xchg
lcall
add
stos
enter
inc
sbb
sub
ss
lea
scas
ljmp
lds
aam
and
adc
mov
mov
lods
aas
mov
addr16
das
shl
push
ljmp
lret
mov
scas
in
scas
fsubs
pushf
clc
add
loopne
aaa
push
jno
rol
mov
js
add
lcall
or
push
ds
ja
mov
in
dec
sbb
test
pop
aad
stc
out
movsb
je
cwtl
je
cmp
aas
dec
in
xlat
dec
test
js
pop
xchg
mov
cmp
xchg
fimull
xacquire
fs
and
les
dec
cli
aam
xchg
jl
and
pop
add
les
lea
mov
xor
mov
sub
int
or
cmp
push
cld
js
mov
adc
movsb
add
cs
loope
push
imul
jno
ljmp
dec
loop
cmp
mov
orb
inc
ss
daa
mov
out
add
pop
cmp
adc
orl
filds
std
aad
ds
aas
out
loopne
sub
sysret
js
mov
stos
clc
in
push
pop
loop
iret
sahf
pop
push
movsb
and
lds
mov
inc
mov
cmp
or
out
jecxz
js
jge
fcomip
fldenv
adc
xchg
repnz
dec
lock
gs
clc
cmp
jbe
add
or
stos
mov
roll
sbb
lcall
cltd
cmc
push
inc
mov
sub
adc
mov
pop
movsl
or
add
mov
adc
xor
push
popf
sbb
xor
mov
inc
pop
fiadds
movsb
rolb
test
lock
cmp
cmp
mov
aaa
fsubrs
mov
stc
jne
ss
inc
mov
lret
shll
cmp
ljmp
add
mov
push
test
out
push
mov
shll
dec
lods
ret
bound
pusha
cmpsl
inc
inc
lcall
add
lock
lret
adc
cmpsl
mov
repnz
cli
lahf
int3
xor
insl
xorl
insl
stos
hlt
dec
xor
out
mov
jbe
pop
imul
jecxz
std
daa
mov
mov
xchg
ds
psrlq
insl
and
inc
mov
dec
mov
push
rorl
cmp
js
int3
or
add
xchg
mov
fcomps
sbb
mov
pop
scas
jne
push
dec
fdivr
jnp
into
out
mov
mov
dec
mov
pushf
xchg
jle
mov
push
jno
xchg
sbb
inc
daa
add
cwtl
in
lahf
mov
xchg
ret
inc
inc
aam
fiaddl
jno
xchg
fidivs
fcompp
inc
lret
outsl
pop
jmp
mov
jle
ljmp
pusha
idivb
pushf
adc
push
xchg
in
push
loop
outsb
or
dec
mov
sbb
lods
iret
sub
cli
jns
push
ljmp
mov
enter
jmp
pop
jle
add
sbb
pop
push
xchg
mov
or
sahf
push
pop
lret
jbe
xchg
xlat
fidivs
mov
ret
xchg
insl
int3
sub
hlt
cmpsb
arpl
pop
pop
aad
mov
iret
cmpsl
cltd
mov
or
push
add
dec
push
enter
push
mov
cmpsl
lds
inc
inc
adc
in
aad
push
frstor
imul
mov
or
push
ds
mov
fidivrs
clc
mov
mov
add
lea
rcrb
mov
icebp
xchg
jb
sbb
push
les
adc
cmp
cmp
clc
mov
xchg
addr16
fiaddl
inc
xorl
ljmp
bound
jno
ror
testl
mov
pop
cmpsl
inc
stos
lret
aaa
test
lcall
jge
cmp
cmpsl
sbb
lret
mov
or
push
daa
cwtl
push
adc
popl
cmpsl
dec
mov
jle
pop
ficoml
data16
shlb
pop
lock
xchg
and
sub
or
jge
mov
xchg
popa
mov
clc
sub
clc
leave
adc
jb
xchg
push
pop
jae
ret
mov
lods
repz
mov
adc
imul
mov
repz
mov
mov
lds
out
pop
das
jl
cmc
cmpsl
sahf
xchg
addr16
or
loopne
int3
adc
pop
xor
dec
jl
in
pop
dec
add
cmpsl
jecxz
and
scas
mov
lock
jl
dec
hlt
fsubrs
jno
aad
push
int
mov
loope
pop
ljmp
dec
fisubl
and
cmpsl
cmc
mov
shrl
test
push
movl
inc
pop
inc
adc
into
adc
test
mov
push
scas
push
push
adc
inc
jae
inc
push
adc
push
sub
xchg
mov
ret
xor
xor
mov
mov
lea
aam
push
and
push
xchg
xor
xchg
push
inc
xor
adc
loope
xchg
lahf
lret
mov
push
mov
shlb
push
inc
cmovb
rorl
fwait
dec
cld
mov
mov
aad
jae
lds
ret
jl
out
std
lods
push
and
imul
pop
movsb
int3
cmp
mov
addl
cmpsl
cwtl
adc
rorl
bound
aam
sub
test
cmpsb
mov
dec
roll
je
jbe
jnp
out
mov
jno
mov
mov
dec
sbb
push
ret
adc
xchg
jge
push
cmp
jle
sbb
adc
xchg
adcl
xchg
xor
cmp
push
dec
movsl
push
stos
push
pop
movsl
and
ficoml
lret
or
out
jge
out
mov
sar
test
adc
jno
cmc
out
test
int
nop
outsl
push
ds
jecxz
add
shl
cltd
add
imul
inc
xor
filds
in
fcmovnbe
lcall
adc
or
sti
stos
sbb
jno
into
jne
mov
mov
je
mov
or
jmp
lea
ljmp
mov
test
mov
enter
adc
mov
jne
mov
jg
je
lcall
inc
mov
dec
and
xor
repnz
push
adc
jl
clc
mov
sbb
inc
push
push
loope
pop
dec
jge
cmp
in
mov
jnp
dec
stos
popa
mov
mov
std
push
lods
sbb
adc
jmp
inc
mov
outsb
push
outsb
mov
cmp
call
je
push
pusha
dec
test
or
mov
xorl
scas
cmp
jl
rorl
gs
ror
rorl
in
or
sarb
jecxz
iret
pop
bound
loop
cltd
fstpl
mov
lods
add
lods
callw
popf
mov
mov
mov
and
adc
sub
mov
add
cmp
add
repnz
add
add
add
add
xor
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
les
add
add
add
add
add
add
inc
inc
add
add
add
movsb
add
add
add
add
add
add
add
or
add
or
adc
ja
adc
add
push
adc
inc
jno
add
cmp
adc
fdivl
add
pop
adc
inc
imul
add
adc
adc
add
cmp
adc
out
adc
int
adc
inc
insl
adc
or
adc
sbb
js
add
pop
adc
cmp
add
push
adc
aad
adc
movsb
jne
add
imul
add
adc
xchg
and
add
xor
add
add
add
pusha
adc
cmp
adc
jle
adc
pop
and
add
pop
adc
scas
xor
add
inc
adc
mov
pop
adc
xchg
inc
adc
sti
or
add
insl
adc
or
adc
cmpsl
adc
add
xor
add
add
add
push
adc
pop
or
add
adc
jmp
adc
test
add
dec
dec
imul
jns
jne
dec
dec
imul
gs
add
inc
ja
imul
jns
push
imul
pop
pop
jne
jno
outsl
jns
dec
arpl
inc
push
and
add
inc
inc
and
imul
dec
addr16
jae
jno
insl
jns
addr16
insl
pop
popa
imul
push
imul
outsl
addr16
push
add
add
inc
and
jne
inc
jne
add
pop
add
outsl
dec
arpl
jno
dec
push
inc
dec
arpl
push
insl
ja
add
imul
add
dec
inc
imul
dec
gs
pop
push
jne
jae
imul
add
gs
ja
dec
push
dec
add
push
jae
jno
insl
inc
movsl
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
cwtl
inc
add
cwtl
inc
add
cwtl
inc
add
cwtl
inc
add
cwtl
inc
add
cwtl
inc
add
cwtl
inc
add
cwtl
inc
add
cwtl
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cwtl
inc
add
cwtl
inc
add
cwtl
inc
add
cwtl
inc
add
inc
dec
cmp
dec
pop
add
xor
ss
xor
add
push
xor
inc
cmp
pop
xor
dec
inc
xor
dec
pop
dec
dec
inc
xor
inc
push
pop
pop
pop
dec
xor
cmp
push
dec
inc
add
cmp
xor
pop
cmp
add
push
pop
xor
xor
pop
inc
push
push
cmp
dec
dec
dec
pop
xor
pop
pop
inc
inc
add
pop
push
dec
push
dec
ss
push
add
xor
push
xor
pop
xor
xor
cmp
pop
pop
dec
dec
pop
aaa
inc
add
xor
xor
push
dec
xor
pop
xor
add
cmp
pop
dec
xor
inc
inc
inc
push
add
pop
dec
cmp
inc
xor
ss
pop
dec
inc
cmp
push
inc
inc
add
inc
xor
aaa
pop
pop
pop
push
dec
push
xor
add
dec
pop
inc
inc
xor
xor
dec
add
inc
aaa
pop
inc
dec
dec
inc
pop
inc
add
push
pop
dec
push
inc
pop
dec
pop
dec
xor
add
xor
xor
pop
add
inc
add
aaa
push
add
add
add
add
add
inc
add
inc
add
add
push
add
inc
add
dec
add
push
dec
add
inc
add
add
add
dec
add
pop
add
dec
add
add
xor
push
add
add
push
add
push
add
add
dec
add
xor
add
push
inc
add
dec
add
add
push
add
dec
add
add
add
push
inc
add
pop
add
add
pop
add
add
cmp
pop
add
push
add
add
inc
add
add
push
add
add
add
xor
dec
push
add
add
add
add
dec
add
add
add
push
add
add
dec
add
push
add
xor
add
add
inc
push
imul
lock
mov
mov
test
add
push
cmp
push
insb
ja
addr16
push
gs
pop
imul
dec
pop
imul
insl
pop
jne
popa
jb
jo
bound
ret
push
divb
inc
xchg
outsl
cmp
test
sbb
rcll
and
cmp
pop
xchg
insl
mov
pop
mov
jno
das
jb
insb
xor
mov
jp
or
and
lret
push
mov
pop
fwait
iret
adc
incb
cmpsl
sub
add
mov
xchg
outsl
adc
outsb
mov
jmp
stc
rclb
pop
daa
cli
adc
and
add
inc
dec
pop
icebp
out
fmull
lods
sub
cmp
repnz
out
into
popa
lock
dec
cltd
in
xchg
push
sub
pop
jae
inc
repz
add
popl
push
inc
in
scas
ja
cmpsb
mov
xchg
dec
sbb
dec
xchg
daa
je
push
dec
and
sbb
cli
dec
lret
sbb
inc
xor
or
jl
dec
xor
test
xchg
shrb
push
push
lds
mov
loopne
sub
mov
xchg
add
push
dec
jno
in
cmp
loopne
addr16
fs
xor
or
mov
xlat
out
lods
mov
and
ficoms
inc
fidivl
test
popa
in
sub
shll
and
xchg
test
inc
push
cmp
std
add
fsts
jp
pop
imul
test
adc
ficompl
mov
leave
shlb
imul
pop
dec
or
lcall
pop
insl
or
sti
xchg
mov
mov
add
jp
dec
stos
mov
mov
addl
shlb
push
int3
jbe
push
sub
rol
cmp
jp
test
sub
and
subb
xchg
je,pt
push
add
add
add
add
add
add
and
add
cmp
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
testb
add
add
mov
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
nop
add
xor
add
add
add
add
add
add
in
add
add
add
clc
xchg
add
aam
add
in
add
add
add
inc
dec
xor
add
add
add
add
add
add
add
add
adc
add
add
sbb
add
add
cld
add
add
mov
cmc
mov
cmc
mov
cmc
mov
cmc
mov
int
iret
cmc
mov
cmc
mov
cmc
mov
cmc
mov
cmc
mov
add
adc
mov
xchg
fs
adc
mov
cmc
mov
cmc
mov
cmc
mov
cmc
mov
cmp
cmc
mov
cmc
mov
push
hlt
push
cmc
mov
cmc
mov
cmc
mov
cmc
mov
cmc
mov
cmc
mov
cmc
mov
cmc
mov
cmc
mov
cmc
mov
cmc
mov
cmc
mov
cmc
mov
arpl
cmc
mov
cmc
mov
xchg
int3
adc
aaa
cmc
mov
adc
clc
cmc
mov
cmc
mov
cmc
mov
mov
cmc
mov
cmc
mov
lea
jo
xchg
push
cmc
mov
add
mov
xchg
cmc
mov
mov
adc
mov
je
add
mov
cmc
mov
cmc
mov
cmc
mov
cmc
mov
cmc
mov
cmc
mov
cmc
mov
cmc
mov
shrl
ficomps
cmc
mov
xor
cmc
mov
inc
xchg
and
mov
cmc
outsl
rol
xchg
popf
cmc
mov
cmc
mov
cmc
mov
inc
and
mov
cmc
mov
dec
push
imul
adc
cwtl
scas
cmc
mov
cmc
mov
cmc
mov
cmc
mov
cmc
mov
add
cmc
mov
cmc
mov
cmc
mov
cmc
mov
jg
adc
mov
cmc
mov
cmc
mov
cmc
mov
cmc
mov
cmc
mov
cmc
mov
cmc
mov
sahf
mov
outsl
jne
cmc
mov
add
cmc
mov
cmc
mov
cmc
mov
cmc
mov
cmc
mov
cmc
mov
jp
pop
cmc
mov
cmc
mov
jge
aaa
cmc
mov
cmc
mov
mov
adc
mov
cmc
mov
jle
dec
cmc
mov
cmc
mov
jl
cmc
mov
cmc
mov
cmc
mov
cmc
mov
mov
data16
mov
cmp
cmc
mov
cmc
mov
cmc
mov
cmc
mov
cmc
mov
cmc
mov
ss
cmc
mov
mov
popf
cmc
mov
cmc
mov
cmc
mov
cmc
mov
add
cmc
mov
cmc
mov
lea
cmc
mov
cmc
mov
cmc
mov
pop
dec
stc
xchg
repnz
mov
cmc
mov
cmc
mov
cmc
mov
cmc
mov
cmc
mov
cmc
mov
cmc
mov
cmc
mov
cmc
mov
cmc
mov
cmc
mov
cmc
mov
cmc
mov
cmc
mov
cmc
mov
cmc
mov
adc
cmc
mov
cmc
mov
mov
adc
int3
cmp
mov
cmc
mov
cmc
mov
cmc
mov
cmc
mov
cmc
mov
cmc
mov
cmc
mov
push
inc
add
adc
push
add
add
data16
push
add
js
imul
add
add
jns
adc
push
add
add
jae
push
add
je
jno
je
data16
ja
outsl
add
adc
add
ja
add
outsl
add
popa
add
je
outsb
add
jne
data16
outsl
add
arpl
ja
add
push
add
push
jns
ja
insl
add
add
add
jae
push
add
insb
add
data16
adc
add
jp
imul
push
add
add
jp
jno
add
data16
add
adc
pop
add
add
ja
arpl
jae
imul
add
jbe
jns
imul
jb
outsl
add
insl
add
dec
add
add
js
push
add
add
add
jno
outsl
add
push
add
adc
add
add
insb
add
imul
bound
bound
add
insb
add
push
add
push
adc
add
jns
jno
jne
imul
add
imul
add
arpl
jb
push
add
push
add
push
add
jae
imul
add
jne
insb
add
bound
jne
popa
add
imul
jne
ja
insl
add
jae
insb
add
bound
jb
add
popa
add
insl
add
add
data16
adc
add
ja
push
add
add
insl
add
jo
jp
jae
jne
popa
add
outsl
add
jno
adc
add
add
jp
js
outsl
add
jno
add
insb
add
ja
je
add
jb
imul
dec
add
jno
arpl
imul
data16
jns
add
jae
jb
add
data16
jno
imul
inc
add
bound
outsb
add
insb
add
push
add
jbe
insl
add
push
add
add
js
adc
inc
add
js
jns
jae
jp
jae
popa
add
jo
ja
insl
add
insb
add
imul
jns
jp
jae
imul
add
jo
push
add
outsl
add
arpl
push
add
js
push
add
jo
bound
add
add
push
ja
jb
jo
ja
jae
jb
ja
bound
add
add
data16
add
push
add
outsb
add
jne
add
je
add
bound
outsb
add
jne
arpl
push
add
ja
imul
add
je
jae
js
jns
arpl
jne
add
jae
imul
add
add
insb
add
jp
adc
push
add
jbe
jae
jbe
jno
arpl
add
jae
bound
insb
add
jbe
add
data16
push
adc
push
add
imul
add
je
arpl
add
add
popa
add
push
add
jp
jno
adc
add
add
jb
jb
add
bound
jne
arpl
jns
jns
add
add
jb
imul
add
add
dec
cmp
mov
int
xor
xor
cmp
dec
cmp
cmpl
lods
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
cmpl
cmp
xor
cmp
ds
ds
ds
ds
bound
push
outsb
jns,pt
test
mov
mov
xchg
ds
ds
mov
ds
aas
sbb
aas
test
mov
xchg
aas
aas
int
sarl
icebp
aas
sti
aas
add
add
add
add
adc
sbb
sub
xor
xor
xor
xor
xor
insl
xor
ja
jl
xorl
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
das
xor
xor
popa
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
jo
jl
xorl
xor
mov
jmp
ss
aaa
push
aaa
xchg
aaa
lcall
aaa
pop
cmp
cmp
cmp
pop
cmp
sahf
cmp
cmp
cmp
cmp
cmp
test
fnstcw
out
dec
cmp
pop
cmp
movsl
cmp
cmp
cmp
cmp
cmp
cmp
jb
jge
popf
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jns
cmpl
cmp
mov
mov
and
sub
cs
cmpl
pushf
ds
ds
fidivrl
loopne
out
sub
aas
pop
aas
jae
mov
movsb
aas
mov
pusha
add
push
xor
xor
je
jns
jg
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
xor
aaa
xor
xor
xor
in
xor
xor
xor
xor
inc
xor
dec
xor
push
xor
xor
xorb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
test
jmp
sbb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
and
popa
xor
cmpsb
xor
mov
ss
ss
imul
ss
aaa
mov
aaa
aaa
repnz
daa
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cld
cmp
cmp
cmp
cmp
cmp
cmp
lret
cmp
xor
outsl
ds
mov
ds
dec
aas
data16
stos
aas
mov
mov
iret
aas
xlat
aas
add
add
add
add
add
xor
xor
xor
xor
push
xor
pop
xor
jno
jg
xchg
xor
xor
xor
xor
xor
xor
insb
xor
xor
xor
xor
xor
xor
xor
xor
jbe
mov
ret
xor
xor
xor
xor
xor
xor
sbb
xor
cltd
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
ret
xor
jg
xorl
lea
xchg
ss
ss
fidivl
jecxz
pushl
adc
aaa
inc
aaa
pushf
aaa
test
mov
aaa
shlb
icebp
aaa
divl
push
cmp
cmp
cmp
push
cmp
pusha
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
add
jo
add
add
and
sub
xor
xor
cmp
inc
xor
dec
xor
pop
xor
insb
xor
enter
clc
xor
xor
xor
adc
adc
sbb
sbb
and
and
sub
sub
xor
cmp
mov
xor
xor
xor
xor
xor
xor
xor
pushf
aaa
add
add
insb
cmp
je
js
jl
cmpb
cmp
cmp
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
.byte
